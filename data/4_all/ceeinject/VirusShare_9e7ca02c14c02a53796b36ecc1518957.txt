fwait
int
lahf
int3
jmp
add
inc
adc
repz
ss
sbb
imull
cmovl
push
adc
fnstcw
add
or
outsb
add
in
pop
inc
mov
int3
add
in
call
xchg
out
mov
movsb
inc
add
pop
sub
jle
ljmp
push
lea
push
sbb
inc
out
pushl
sbb
or
mov
mov
fisttps
mov
cmp
add
xlat
std
iret
sbb
or
push
cmp
adc
cmpl
mov
and
lea
fbstp
aaa
inc
adc
or
adc
jb
aas
adc
xor
test
inc
push
add
inc
mov
enter
inc
push
push
fxch
add
fdivl
bound
jmp
mov
or
out
lret
notb
leave
dec
push
cmp
fdivl
mov
imul
add
xchg
add
aas
je
sbb
lock
mov
je
insb
mov
adc
or
mov
push
or
xchg
adcl
fstps
fistl
cs
int3
xor
cwtl
in
xor
fnstcw
out
xchg
cmp
lock
in
sub
push
mov
mov
push
xchg
cld
sub
gs
lods
pushf
adc
sbb
mov
adc
sbb
pusha
fwait
mov
mov
sbb
push
xor
mov
push
push
push
mov
push
mov
lock
mov
or
lock
movl
shlb
inc
call
pop
sar
jne
aam
mov
add
push
pop
or
addb
movb
mov
pop
sti
dec
loope
add
or
jbe
xorb
sbb
cltd
int3
mov
data16
push
lock
push
mov
adc
hlt
push
jo
lock
sbb
pop
movb
add
push
push
enter
sbb
js
mov
add
ret
xor
lea
push
adc
cmpb
cmp
jne
sbb
aaa
cmp
jnp
adc
arpl
sbb
and
les
mov
push
jle
inc
lcall
mov
pop
neg
push
movsl
les
fsubl
cli
cmc
jge
push
jle
fcompl
or
sbb
gs
pop
add
rolb
js
mov
add
push
fmull
sbb
mov
push
aas
and
insb
adc
cld
lea
add
inc
add
inc
aam
mov
add
add
loopne
in
sub
dec
add
push
mov
fsubl
outsl
fadds
bound
in
xchg
push
and
notl
push
pop
pop
pop
jno
adc
int3
add
xchg
dec
shrb
or
push
lret
xor
mov
push
add
push
sbb
xchg
dec
inc
push
push
cmp
cmp
dec
ds
dec
push
aas
dec
ds
push
push
fwait
pop
and
and
push
pop
and
and
push
pop
and
and
push
pop
and
and
push
or
push
enter
cmp
sbb
and
or
or
push
lock
pop
leave
push
xchg
lcall
test
nop
cmp
push
fs
nop
push
push
fs
push
dec
or
mov
add
fsubr
jg
adc
nop
das
mov
lcall
or
cld
sbb
cli
mov
push
enter
add
and
in
stc
pop
shl
mov
rorb
mov
mov
sub
mov
sar
or
mov
inc
loopne
sub
adc
sbb
jmp
xor
push
xchg
cwtl
popa
loop
jge
gs
adc
xor
outsl
mov
xchg
sub
clc
loop
mov
mov
mov
mov
or
inc
and
fwait
je
adc
add
or
sub
add
mov
and
push
nop
and
lds
mov
cmpsb
lock
or
outsl
imulb
mov
divl
out
fsincos
adc
mov
add
inc
shrb
scas
pop
pop
add
mov
leave
mov
sub
rcll
mov
adc
and
test
xor
or
pop
mov
pop
jmp
addb
test
rorl
xorl
mov
mov
sahf
cld
fs
pop
in
mov
cld
clc
and
add
imul
xchg
xchg
add
repnz
cmp
ss
aaa
lahf
hlt
cmp
jecxz
mov
jno
shll
mov
prefetch
rdtsc
stos
push
fisttps
pop
xchg
jmp
add
sub
and
lret
icebp
mov
xor
roll
test
pop
add
fnsave
xchg
and
hlt
lock
xor
cltd
in
icebp
call
call
es
sahf
fidivrs
idivl
rolb
in
call
xor
dec
call
xor
in
xor
nop
dec
call
and
call
xor
and
fsts
hlt
adc
and
lock
xor
and
hlt
cs
jb
and
lock
fmuls
scas
sub
add
dec
pop
add
inc
jne
xor
adc
xor
data16
movsl
ja
adc
es
dec
and
mov
loopne
or
jne
inc
add
je
cmpsl
fidivl
inc
shll
cmp
fmuls
hlt
loope
cmp
jb
cmp
push
cmp
hlt
mov
fwait
push
inc
js
cmp
xlat
pushf
sbb
pop
push
fisttpll
push
int3
out
xchg
sbb
mov
dec
ficomps
push
and
lock
cld
nop
and
mov
jle
lods
jl
in
roll
jae
fnstcw
sbb
mov
aas
xor
dec
in
test
pop
test
jnp
cmp
jb
pop
inc
insb
lahf
add
imul
or
mov
lds
jmp
push
lods
adc
lea
out
pop
inc
ss
clc
adc
clc
and
mov
inc
inc
in
jae
int
hlt
pop
hlt
mov
clc
shll
cmp
cmp
cmp
dec
or
adc
or
cmp
jae
sbb
insb
push
jnp
add
test
mov
add
jle
jnp
and
pop
fidivl
rol
mov
or
push
mov
adc
sbb
cmp
shl
xchg
sub
add
lds
insb
fnstenv
or
cmp
ss
dec
jae
aas
test
je
jae
or
sub
int3
sbb
cld
outsl
ffree
outsb
fildll
addr16
adc
adc
or
pop
test
lods
add
fs
jne
xchg
mov
data16
data16
shr
fildl
jnp
mov
adc
aas
push
ja
aam
jbe
pop
sub
mov
sti
push
mov
pop
daa
flds
nopl
in
and
mov
and
cmp
cmpsl
sti
and
mov
and
add
mov
loopne
incl
adc
fstps
movsl
loopne
mov
gs
cwtl
push
in
inc
sti
mov
xor
or
call
adc
test
pop
cld
push
or
mov
cld
xor
add
push
sbb
fadds
fdivrp
mov
jno
inc
jne
pop
lret
pop
jmp
push
xor
cs
pop
add
iret
xchg
or
addr16
mov
push
sbb
inc
cmp
cmpl
add
insb
lods
mov
or
push
dec
out
hlt
sbb
arpl
sbb
sbb
jns
inc
cmpsl
outsb
push
loop
call
dec
sbb
cmpsl
or
dec
push
or
dec
loopne
add
or
cmp
cmpsl
fisubrl
in
cmp
dec
fists
xchg
lods
icebp
les
std
hlt
cmp
stos
add
int3
add
sub
jecxz
mov
push
and
dec
and
ljmp
inc
and
push
mov
cmp
jb
neg
add
das
add
mov
inc
dec
jne
mov
shl
or
push
adc
and
jmp
je
rep
cmp
and
pop
ret
add
adc
pop
test
mov
pushl
shlb
icebp
add
jle
rcl
mov
faddp
push
add
mov
je
inc
cld
sub
test
xor
stos
cmp
xor
int
inc
call
rol
std
pop
dec
lcall
or
sar
fldt
fcompl
jge
lods
push
pop
mov
mov
movzbl
mov
mov
call
add
shlb
out
test
push
mov
add
movsl
pushl
sub
jecxz
out
add
fnstcw
push
jmp
fisubl
or
push
not
bound
sub
shl
and
das
std
and
pop
sub
pop
neg
sbb
mov
xorl
ret
pop
leave
ret
mov
sbb
adc
cmp
jbe
clc
jb
or
adc
jno
insl
clc
jg
stc
or
rep
jmp
mov
mov
push
lods
repz
add
pop
test
mov
pop
or
adc
add
loope
lock
mov
add
int
or
pop
int3
sub
lret
dec
lea
and
leave
mov
cmpsb
nop
and
pop
ja
pop
inc
aas
mov
pop
add
shll
inc
cmp
sub
xor
mov
inc
in
call
xor
in
lock
hlt
clc
cli
js
xor
cld
cld
lea
inc
fcomps
clc
or
lock
adc
pop
pop
addr16
popf
pop
insb
ss
stc
adc
or
das
sbb
cld
jg
or
insl
jecxz
ja
sub
iret
leave
and
sub
stc
sub
cmpsb
jmp
xchg
sub
nop
sub
dec
add
ja
insb
insl
add
outsl
add
dec
push
mov
xchg
ss
in
out
add
add
mov
pop
and
sub
js
inc
pop
rcrb
je
les
add
fsub
in
imul
xchg
sbb
cmpsb
imul
imul
or
pop
and
je
cmp
mov
test
pop
addb
mov
mov
aam
mov
or
lods
pop
pop
jmp
lods
test
push
movsb
and
leave
pusha
lea
out
imul
jnp
imul
xchg
sbb
jns
pop
add
push
jns
jmp
std
jmp
insb
or
pusha
pop
mov
or
mov
inc
bound
sub
mov
xor
outsb
imul
imul
xor
divb
test
cmp
daa
dec
data16
add
or
pop
shll
test
sti
push
aaa
or
push
and
or
push
ja
loope
sbb
fdivs
mov
pop
prefetchwt1
cmp
subl
loopne
and
add
iret
shll
pop
jne
cmp
adc
xor
add
cmp
or
shrb
fstpl
sbb
in
xchg
pop
xchg
lret
pop
test
pop
out
push
jae
adc
jb
inc
add
clc
adc
data16
mov
sysexit
je
cs
subb
xor
xor
push
jg
dec
sbb
aas
rorl
adc
cmp
jo
mov
add
imul
push
xor
add
jo
mov
fldt
into
cmp
xor
popa
mov
jo
aad
pop
mov
icebp
fists
test
push
and
call
sbb
inc
ret
popl
pop
cli
push
mov
add
jne
push
or
push
or
push
or
fwait
mov
adc
jmp
cmp
add
inc
sarl
sbb
rclb
xor
xor
jge
jecxz
pushf
or
inc
pop
testl
jne
mov
or
and
or
popa
in
pop
mov
shll
je
push
push
lea
test
fsubrp
outsb
or
inc
or
push
rcrl
jecxz,pt
sbb
into
imul
add
ljmp
or
sbb
mov
fs
jmp
pop
sbb
aas
pop
push
pop
jnp
xor
sub
fiaddl
sbb
lods
jno
and
xlat
mov
test
call
lcall
jmp
cmp
cli
je
cmp
xor
jne
scas
sub
pop
data16
add
shll
shl
data16
adc
pop
mov
pop
jl
sub
add
fcoml
insb
or
iret
mov
lret
call
xor
pop
sarl
pusha
push
or
mov
mov
ss
cmp
dec
js
xor
sti
cmp
outsb
add
mov
mov
popa
rorb
push
pop
not
mov
popf
pushf
testb
leave
movzwl
or
pop
sbb
jne
push
push
and
inc
mov
test
out
xor
das
outsl
xlat
insb
jp
push
push
jns
dec
mov
cmp
or
lret
cmp
push
das
and
aaa
fcoms
pop
and
mov
add
dec
xchg
shlb
cmc
mov
dec
add
xchg
add
mov
imul
inc
pop
mov
sbb
subl
jle
mov
mov
lea
popf
xorl
ss
or
or
jbe
cmc
aad
sbb
fiadds
adc
cmp
into
xor
mov
js
push
mov
dec
xor
mov
outsb
outsl
mov
jne
jne
jle
leave
dec
jne
push
and
jmp
mov
sbb
adc
filds
sti
cmp
lds
fbstp
jb
mov
shll
sbb
cmp
leave
std
pop
add
jmp
jno
sti
fisttpl
cltd
mov
inc
sub
pop
outsl
adc
push
shlb
mov
rcrb
cld
imul
jge
mov
inc
cltd
das
mov
hlt
shl
dec
adc
push
lods
mov
sar
aas
dec
pop
or
iret
leave
sub
adc
add
dec
cmc
mov
and
mov
lea
js
mov
mov
decb
jne
jne
cmp
and
loopne
pop
jae
push
sub
adc
jo
shll
jns
inc
jl
mov
data16
mov
add
pop
clc
or
out
mov
dec
aas
jnp
pop
inc
pop
fisttpll
mov
nop
push
clc
dec
pop
cmp
cmpsb
fistpl
mov
inc
sbb
inc
sbb
lahf
ds
jbe
cli
mov
lods
aad
loope
push
mov
sbb
shlb
push
adc
stc
mov
push
mov
fistl
imul
mov
subb
in
outsl
out
test
test
or
jmp
nop
stc
or
mov
push
dec
sub
xchg
dec
arpl
fnstsw
and
mov
jae
cmpb
push
mov
mov
sbb
call
sub
lea
sbb
out
pop
and
test
or
pop
cli
mov
mov
xor
or
or
mov
xchg
and
lsl
adc
push
add
pop
xor
mov
and
push
or
cmp
andl
and
decb
or
cmpb
loop
sbb
andl
adc
je
xchg
dec
adc
pop
lds
loop
mov
repnz
xchg
lret
enter
test
xchg
adc
push
lea
push
xchg
cmp
pop
jb
decl
sub
ficompl
xor
cmp
cld
push
jp
jmp
mov
pusha
inc
push
leave
sub
lea
pop
push
sub
dec
pop
jbe
sbb
dec
xor
jge
or
shr
adc
add
in
incl
jmp
cmpl
pop
sub
shr
push
out
mov
mov
cmp
jg
jae
mov
cmp
sub
scas
icebp
jg
decb
iret
jne
add
cmp
jne
es
jns
fidivrl
fsubs
adc
push
test
sbb
and
pop
rolb
popf
pop
xor
adc
jmp
es
pushf
mov
push
or
out
fdivr
pusha
jae
sub
mov
test
dec
push
fstpt
sbb
cli
dec
mov
xchg
mov
nop
inc
mov
lret
aaa
mov
jo
push
fldl
in
pop
test
or
mov
jne
xchg
test
mov
cld
decl
xlat
je
xor
lcall
pusha
ja
mov
jne
pushw
fnsave
lcall
leave
jl
shl
inc
jmp
stos
push
stc
inc
or
je
ja
jg
jnp
incb
pop
aas
jle
fsubrl
clc
pop
fistps
and
popa
and
adc
pop
ljmp
and
mov
decb
jne
outsl
xchg
sbb
push
sub
or
xor
sub
xchg
mov
fisubl
sbb
ss
sub
fwait
pushf
mov
jp
clc
add
scas
jp
nop
test
test
movsl
and
je
sub
fs
decb
jge
xchg
lcall
mov
bound
inc
out
or
or
shrb
das
sub
xchg
lods
lods
jo
rclb
mov
jl
cs
or
mov
jne
mov
mov
adc
cld
lahf
mov
and
or
jne,pt
mov
lea
or
push
sub
test
inc
add
add
and
pop
into
mov
pop
mov
push
repz
inc
loope
nop
xchg
xchg
cmp
je
mov
sarb
cmpsb
xchg
or
sahf
xchg
clc
inc
mov
xor
inc
adc
add
and
inc
mov
push
sbb
push
push
cld
in
orl
fistps
lds
bound
in
push
mov
outsb
cmp
jno
inc
or
lds
outsb
xor
dec
loopne
ret
aaa
imul
xor
ljmp
sub
dec
push
sti
test
out
inc
sub
fistpll
pop
cli
mov
cmp
shll
sub
mov
mov
cli
ja
lea
dec
repnz
hlt
lea
cld
lock
inc
insl
push
inc
push
out
mov
add
sub
sub
iret
adc
jbe
mov
orl
adc
dec
or
icebp
movzwl
inc
mov
inc
mov
icebp
lods
out
mov
mov
test
js
mov
sub
push
gs
mov
mov
lcall
jmp
jmp
shr
test
dec
cld
dec
cmp
add
rorb
pop
sbb
fildll
test
or
add
cmp
jg
ss
adc
push
dec
popa
xchg
sbb
pop
pop
pop
and
cmp
push
clc
shll
pop
dec
pop
fs
nop
sbb
pushf
nop
fistpl
or
mov
cmp
mov
fs
fwait
mov
push
add
fwait
stos
popf
xor
dec
jo
jg
mov
xor
or
lea
sub
pop
aas
or
dec
dec
pop
dec
pop
pop
xchg
inc
es
pop
adc
adc
mov
dec
in
mov
scas
and
and
mov
push
cmc
adc
mov
inc
xchg
push
insb
insl
imul
ds
push
pop
insl
std
jge
in
aam
pop
mov
movsb
pop
out
aad
mov
call
imul
sub
popa
scas
int3
sbb
and
dec
cltd
mov
mov
pop
jae
add
ds
adc
jns
jne
and
inc
jbe
jbe
and
inc
jns
jno
jno
sub
jmp
add
add
sbb
jnp
push
in
pop
ret
and
mov
dec
pop
punpcklwd
mov
enter
popa
mov
jae
cmp
pmulhw
leave
inc
popa
jns
lret
aam
push
xor
dec
sbb
int3
mov
test
les
adc
dec
adc
sbb
jle
mov
lahf
jle
cwtl
arpl
cmp
inc
enter
js
outsl
mov
je
inc
mov
mov
mov
and
fwait
in
add
push
cmp
fcompl
dec
lea
inc
or
aam
jbe
pop
jge
or
push
test
sbb
add
test
fstpt
push
or
add
imulb
add
pop
cmp
rep
pcmpgtw
adc
mov
cmp
hlt
pop
pop
cs
xor
lea
icebp
cmpl
adc
sbb
mov
cmp
sbb
push
push
mov
je
dec
cmp
add
jge
mov
jmp
mov
sar
push
clc
out
pop
incl
je
push
push
jl
mov
rorl
lock
cmpb
xor
add
shlb
and
ret
cmp
mov
xchg
push
push
sbb
xchg
enter
xchg
insl
inc
inc
inc
add
lock
cmp
imul
or
pop
mov
pop
clc
outsb
dec
outsl
push
or
cmp
push
shrl
outsl
ja
or
and
xorl
and
fwait
mov
and
add
adc
rcrb
or
cli
pop
mov
dec
cmp
push
adc
rorb
test
jb
push
outsb
fwait
je
inc
je
fs
ds
aam
adc
in
lret
in
cmp
xor
cmp
cmp
pop
scas
add
loope
pop
lock
negl
add
fisubrs
xchg
cmp
cmp
movsl
daa
xchg
jg
mov
fmuls
gs
mov
rolb
xor
std
rcll
xchg
cmp
inc
lods
ficompl
loopne
cwtl
sub
mov
popa
jg
inc
push
ret
jmp
push
xor
jmp
push
mov
stc
jmp
push
jmp
push
jmp
push
jmp
push
lock
push
push
jmp
push
jmp
push
jmp
push
jmp
lock
aaa
lds
push
pop
jmp
cmp
cmpsb
and
and
in
inc
call
shlb
mov
lods
jno
cld
stos
call
sub
or
in
xor
add
je
xor
rcll
es
and
imulb
add
push
add
fistpl
or
sbbb
sub
flds
pushf
xchg
or
movsl
xchg
js
lds
cwtl
sub
mov
mov
lea
mov
sub
lock
push
mov
out
nop
push
xor
in
pop
push
xchg
movsl
xchg
in
jle
pop
push
cwtl
testl
mov
daa
rclb
enter
push
xchg
push
jmp
lods
int3
xor
mov
mov
push
pop
dec
or
or
xchg
pop
arpl
and
sbb
push
fcoms
add
movsb
xchg
push
or
shlb
add
jge
test
je
and
adc
adc
add
sub
add
cmp
andl
or
fmull
adc
mov
mov
fstl
insl
shrb
or
scas
jo
nop
or
iret
adcb
pop
cmp
cmp
cmp
iret
cmp
andb
daa
iret
cmp
mov
arpl
or
jmp
cli
or
adc
jecxz
jmp
fs
fimull
decl
movsb
xor
int
mov
mov
adc
dec
negl
xor
or
cmc
mov
cld
jae
cmp
jne
inc
dec
pop
add
scas
inc
adc
clc
adc
filds
add
ficoml
std
cmpsb
mov
push
cmp
jne
and
cld
loopne
aam
mov
inc
inc
inc
mov
out
jmp
cmpb
or
popf
aad
in
insl
inc
or
ja
xor
add
jmp
push
pop
std
pop
push
fildl
inc
movsl
cmp
jg
ret
xchg
pop
pop
pusha
mov
jmp
dec
mov
and
outsb
dec
mov
mov
xorb
or
pop
in
std
outsl
cmp
cmp
cmp
aas
dec
mov
loope
and
cmp
cmp
cs
inc
sub
sbbb
add
in
add
leave
pop
incl
mov
sbb
push
or
mov
mov
push
ja
loope
in
jo
mov
sbb
sbbb
mov
pop
push
lea
or
aaa
pop
adc
mov
xchg
xchg
test
mov
mov
mov
xor
int3
adc
pop
js
mov
je
je
sbb
notb
test
and
aam
test
ja
inc
movsl
sub
cmpb
inc
mov
inc
cmp
std
repnz
and
test
add
decb
push
mov
mov
inc
inc
or
dec
sub
or
sbb
jnp
sbb
inc
push
add
mov
inc
sbbl
mov
inc
add
mov
and
or
int3
adc
sub
or
cmp
jmp
add
mov
fdiv
jge
pusha
adc
add
pop
dec
rol
enter
lock
lock
rcl
test
pop
jne
inc
push
xchg
sub
xchg
mov
pop
mov
cmpb
jecxz
mov
outsl
insb
fmuls
xor
sbb
sete
mov
dec
je
in
fisttps
inc
mov
push
pop
inc
mov
jne
andb
inc
xchg
jl
aas
je
add
cmp
sbb
push
add
test
pop
sbb
inc
ret
mov
aaa
repz
push
rol
andl
adc
sub
dec
mov
inc
xchg
mov
aaa
loopne
xor
fadd
jne
aad
repz
push
and
loope
mov
cmp
pop
ljmp
pop
cmp
insl
popa
inc
or
daa
ret
testb
or
sbb
push
mov
sub
sub
das
cwtl
sar
aaa
push
mov
inc
add
int
xor
pop
mov
je
xor
je
sbb
push
mov
jae
and
insl
andl
or
ret
int3
mov
fucomi
push
mov
xchg
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
dec
fcmovnb
inc
push
into
stos
sti
jmp
mov
movsl
or
push
cld
lahf
pop
pop
push
mov
cltd
xchg
push
enter
xchg
cmp
sbb
inc
xchg
es
fsub
cmp
xchg
mov
sbb
sti
lods
insb
insl
add
movb
mov
out
out
or
loope
lea
dec
or
pop
xchg
ds
into
mov
or
mov
sbb
jl
jbe
xor
movsb
dec
std
in
add
popl
cmp
mov
shll
pusha
or
ds
and
aad
mov
sahf
dec
jl
dec
mov
sti
das
insb
xchg
fcmovbe
jle
sub
fs
mov
inc
pop
add
iret
or
test
movsl
les
mov
aam
pop
ficoms
add
iret
and
or
inc
inc
jmp
fwait
jl
push
in
cmp
mov
xor
jne
cmp
add
mov
shll
fwait
and
cmc
pop
shrb
pushl
push
data16
out
ficomps
movsl
pop
rolb
orb
or
jne
fdivrs
ljmp
les
jl
mov
ss
loopne
pop
fdivrs
add
sbb
pop
insb
cmp
mov
in
mov
call
imul
and
insl
mov
cmp
pop
and
sbbl
mov
mov
inc
testl
stos
icebp
shl
cmp
int3
sub
sbb
insb
aam
cmp
adc
dec
cltd
in
jge
cli
jne
icebp
jge
push
scas
lret
adc
xor
pop
adc
inc
pop
loopne
or
pop
adc
mov
shll
clc
cmp
sub
push
jg
in
or
clc
or
add
push
jne
push
fildl
push
pusha
lcall
cmp
mov
adcb
or
sbb
lock
mov
mov
push
xor
adc
daa
enter
inc
inc
scas
pop
sub
mov
aas
or
push
xchg
fmull
leave
icebp
clc
jo
cmp
inc
inc
dec
sub
dec
or
inc
test
mov
fiadds
jge
dec
mov
dec
enter
scas
sti
inc
fmuls
pop
lock
in
dec
roll
enter
jb
enter
imul
adcb
mov
cltd
inc
enter
add
add
xchg
orb
push
out
cmp
push
adc
dec
sub
or
nop
js
cwtl
add
dec
dec
inc
push
cmpl
adc
sbb
and
shll
xor
adc
mov
add
inc
orb
mov
leave
xchg
cmp
push
dec
dec
adc
add
dec
push
nop
pop
push
pusha
adc
popa
jno
or
enter
cmpl
xor
shlb
or
test
pcmpeqw
ds
movzwl
and
pop
lahf
shrl
inc
daa
mov
sbb
sbb
sub
pop
ljmp
or
imul
pop
xchg
leave
push
or
xchg
das
cmp
je
xor
jecxz
enter
push
jge
add
aaa
mov
mov
mov
mov
rep
stos
aam
or
jbe
out
mov
dec
out
mov
cli
or
idivb
dec
cmp
ja
sub
push
dec
std
push
or
popa
add
lea
fcoms
je
mov
dec
jo
jle
leave
cli
cmp
ja
outsl
mov
inc
or
cmc
inc
inc
cmpb
aam
sbb
dec
outsl
rcr
or
sbb
jl
push
mov
push
or
jo
movsl
movsl
pop
push
pop
mov
jmp
inc
jns
aad
sbb
les
inc
mov
jb
insb
push
imul
sub
ss
pop
imul
dec
stos
add
or
xor
roll
rolb
inc
loope
add
or
andl
stos
decb
mov
and
ss
push
adc
cld
fdivs
divl
mov
sub
loop
and
and
add
add
add
dec
je
mov
jbe
add
push
and
and
insb
pop
xor
stos
mov
mov
ficomps
mov
mov
add
lcall
push
xor
mov
in
clc
decb
addb
repnz
or
lea
mov
lds
je
stos
ja
sbb
fnstsw
xchg
test
test
call
rep
inc
inc
mov
xor
rcrb
xor
mov
xor
push
imul
mov
popf
mov
and
sbb
xor
cmp
push
fisubl
push
inc
out
lea
ss
std
test
cli
adc
nop
sbbb
sbb
ja
ficomps
add
pop
or
mov
mov
jmp
adc
add
stos
mov
jg
dec
enter
mov
jb
fwait
xchg
xchg
adc
push
and
and
loopne
shll
cmp
sti
dec
and
std
or
pop
or
stos
cmp
cmpsb
inc
push
shrb
inc
addr16
or
or
clc
pop
call
jle
je
inc
fisttpll
mov
pop
mov
rolb
pop
push
cmp
and
pop
pop
out
add
mov
popa
add
xor
clc
das
data16
insl
push
lods
jp
out
shl
inc
mov
dec
mov
stos
adc
divb
jmp
push
xor
arpl
aad
js
sub
pop
jne
adc
push
and
roll
sbb
arpl
sbb
pop
xchg
jns
adc
sbb
adc
mov
sbb
cli
sub
adc
dec
push
fs
push
push
add
jbe
fs
sub
or
cmp
out
push
add
sbb
or
mov
clc
mov
test
std
jo
sbb
in
jne
les
mov
pop
push
push
int
or
pop
and
addr16
jmp
and
in
rolb
mov
and
stos
in
jge
jle
sub
or
jp
ss
dec
pop
mov
mov
les
sbb
sbb
int3
iret
or
loop
lret
lds
inc
and
addr16
jae
aad
mov
inc
and
loopne
fsubs
or
sbb
push
loopne
fistpl
mov
cmp
test
inc
jle
cmp
and
shrb
fimuls
and
loopne
adc
mov
icebp
cmp
je
test
popa
bound
hlt
dec
in
sbb
pusha
insl
inc
fdivrs
divl
mov
jmp
inc
or
js
xchg
insl
fs
aad
push
fidivl
dec
inc
mov
insb
rorb
test
adc
jle
loopne
faddp
dec
dec
push
mov
fbstp
fstp
sub
fs
je
mov
add
insl
mov
push
int3
aad
mov
test
jp
jno
dec
aaa
outsl
mov
mov
dec
inc
or
xchg
in
inc
mov
dec
jne
or
enter
jne
sub
add
mov
daa
inc
sbb
jno
sub
push
push
pop
push
xchg
loopne
sbb
call
pop
into
clc
sbb
push
pop
into
lock
outsb
or
and
or
mov
sbb
add
push
jl
jbe
xor
rclb
lea
xor
in
cmp
sbb
loopne
je
push
cwtl
lea
jl
xorb
add
or
insl
jbe
mov
dec
loopne
pop
sbb
int
jnp
push
clc
xlat
mov
push
or
int3
lds
cmp
pop
push
cmp
or
jb
or
test
pop
ljmp
mov
or
sub
push
xchg
push
cmp
xchg
push
xchg
xchg
xchg
js
addb
nop
xchg
xchg
xchg
xchg
xchg
cwtl
pushf
mov
xchg
test
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
adc
call
mov
lea
outsb
mov
scas
decl
cmp
sbb
jg
mov
je
sub
cmp
sbb
and
rcll
testb
loopne
cmp
je
sbb
sbb
sub
mov
decl
push
mov
iret
daa
pop
fcoms
lds
imul
or
shlb
sub
adc
cmp
shlb
pusha
add
or
roll
or
rcrl
popl
sub
dec
inc
mov
push
cld
dec
cmpsb
pop
jge
cmp
sarl
cli
mov
or
jmp
mov
out
movsl
push
and
hlt
jmp
movzbl
testb
je
andb
std
inc
rorb
mov
or
or
lds
loopne
cmp
adcl
cmp
sub
pop
scas
jne
aad
mov
push
inc
fmuls
inc
lods
add
or
js
loopne
add
lea
stc
movsl
cmpsb
pop
mov
ja
jnp
jmp
jmp
mov
decl
sar
shrl
pop
mov
pop
jo
incb
in
pop
mov
cli
aam
adc
jae
fistl
adc
jecxz
inc
or
inc
or
add
mov
jg
decl
fsubl
jg
or
add
outsb
je
insl
and
jb
jb
add
or
sti
push
dec
dec
push
push
adc
add
dec
inc
mov
lods
std
add
inc
adc
push
xor
cmp
sub
outsl
dec
popa
bound
and
imul
fcmove
aaa
sti
push
daa
aaa
outsb
outsl
je
in
filds
jo
arpl
data16
outsl
ja
cmp
xchg
fldl
popa
push
outsl
outsb
aaa
ss
or
dec
jae
fs
pop
imul
jne
xor
push
enter
insb
sub
pop
xlat
pop
fldt
gs
das
pop
push
fsub
fcoml
jbe
pop
xor
imull
gs
push
insb
fcmovnu
xor
pcmpgtb
arpl
cmp
outsb
lods
dec
inc
and
gs
and
insl
jne
mov
je
mov
arpl
mov
ret
fs
outsb
lods
mov
and
add
popa
imul
addr16
insl
and
ss
mov
cmp
inc
lahf
imul
sub
sub
adc
addr16
jae
mov
xor
shrw
subb
mov
fs
dec
movq
lods
sub
push
imul
icebp
sub
and
dec
imul
mov
sbb
sub
adc
popa
xchg
lods
jno
ret
add
loopne
sub
insb
ja
sbb
pop
mov
popa
xor
jbe
push
scas
jne
outsl
insl
cmp
fs
jae
clc
ret
addr16
outsl
js
add
and
sub
cmpsl
gs
aas
dec
pop
inc
addl
push
icebp
in
add
pop
xchg
and
cmpl
or
nop
jae
push
jg
daa
or
push
inc
push
dec
inc
pop
decl
jb
data16
aas
pop
add
push
gs
imul
mov
dec
sarl
in
outsl
fs
dec
popa
outsb
fs
gs
inc
fs
jo
jnp
mov
sub
insl
pop
push
dec
enter
jb
gs
inc
inc
aas
data16
push
popa
jb
xor
add
inc
insb
mov
pusha
push
mov
dec
gs
outsl
ljmp
mov
adc
inc
outsl
mov
int
mov
push
outsb
pop
add
pop
aaa
jae
movsb
daa
push
popf
aad
push
jnp
sti
gs
bound
mov
arpl
pop
xor
sahf
in
mov
jb
insl
jo
or
inc
das
push
je
xor
xchg
pop
jbe
orb
nop
ljmp
jne
gs
mov
repz
popa
fs
jl
inc
imul
testl
in
sub
jae
test
jo
sub
ljmp
push
sub
lods
imul
mov
call
xor
mov
mov
push
cmp
lds
pop
xor
xchg
push
add
std
pop
pop
mov
mov
fcompl
mov
ds
lea
pop
mov
call
dec
movaps
mov
mov
and
adc
dec
loope
and
call
movsl
roll
add
int3
outsb
lods
xor
xchg
jb
pmulhuw
add
adc
mov
jae
jmp
add
or
inc
push
xchg
lea
fs
push
mov
push
xchg
xchg
xchg
in
pop
inc
jp
pop
mov
inc
mov
mov
sarl
je
or
and
lcall
enter
lcall
int
imul
dec
shll
cmpb
shll
cld
dec
sub
dec
cmp
add
jns
mov
out
cmpb
mov
movsl
outsl
mov
loopne
inc
jle
cld
das
test
mov
and
inc
or
das
inc
mov
test
fistps
mov
in
call
decb
mov
ficompl
pop
pop
fisubrl
xor
xchg
rcr
fsubp
stc
cmp
jle
pop
lahf
xchg
sub
inc
dec
add
and
and
adc
adc
add
and
push
mov
popa
cmp
pop
add
xchg
and
and
decl
add
add
add
dec
add
inc
leave
incl
push
jno
inc
dec
inc
jno
outsl
xor
call
adc
daa
mov
lret
in
cltd
bound
jle
dec
ljmp
jnp
cmp
lods
out
push
pop
in
std
js
insl
pushf
mov
or
std
mov
and
push
outsl
into
js
xchg
push
iret
pop
push
aas
dec
inc
sbb
adc
or
in
decl
sub
test
aaa
test
sbb
scas
adc
adc
cld
flds
movsb
enter
subb
jns
mov
push
jb
sub
pop
jne
fsubrp
leave
lahf
mov
movsb
sbb
push
add
and
mov
ljmp
icebp
pop
mov
repz
dec
gs
and
sbb
cmp
push
inc
or
aam
call
in
cli
shl
inc
push
test
stc
shrl
iret
jnp
aaa
pop
stc
or
jle
jno
xchg
pop
xchg
jmp
orb
hlt
cwtl
jno
xchg
mov
fwait
push
sub
je
cmp
andl
adc
dec
hlt
push
mov
push
mov
mov
setnp
je
call
iret
int3
incl
xchg
rcll
sahf
mov
sti
add
cmp
jmp
xor
sub
cmpsl
out
out
sbb
decb
popf
or
lds
xchg
rclb
jbe
pmulhuw
jl
idiv
incl
xchg
xchg
pop
out
xchg
push
xor
subl
jge
add
fnsave
cmpb
mov
in
push
xchg
lahf
cmp
fistpll
out
mov
mov
push
ljmp
in
mov
dec
pusha
lcall
ljmp
lret
cltd
fcmovbe
mov
jmp
push
dec
ljmp
sub
mov
xor
lds
lcall
mov
xor
add
out
mov
dec
push
and
lahf
icebp
adc
jg
pushl
pop
scas
lock
mov
add
pop
inc
pop
cmp
pop
inc
aam
lods
cmp
incl
sarl
ljmp
popf
das
jp
sub
sbb
sub
adc
mov
clc
ljmp
add
and
ret
xchg
call
call
mov
xor
ret
imul
add
mov
mov
xchg
fnstenv
decl
test
imul
jbe
addr16
cmc
in
nop
xchg
lcall
mov
mov
xor
adc
xchg
ss
pop
dec
mov
cmp
bswap
pushl
hlt
adc
or
mov
imul
push
icebp
xor
xor
jg
ljmp
pop
ja
mov
sti
sbb
mov
push
lret
in
cmp
push
pop
xchg
mov
lcall
cwtl
sbb
jb
push
flds
arpl
decl
mov
ss
pop
jp
cmp
xchg
nop
push
push
fs
pop
fucom
mov
or
shrl
cmpsb
std
jnp
rcrl
ds
mov
and
out
adc
aaa
rcr
jp
jo
mov
lock
cmc
mov
xchg
dec
addr16
in
ds
jmp
inc
leave
das
mov
inc
push
inc
lcall
adc
push
mov
lds
in
mov
enter
and
loopne
daa
imulb
mov
fld
aas
push
or
inc
aaa
sub
std
or
pop
sti
repz
aaa
lret
sti
cld
push
ss
xor
jg
adc
mov
mov
test
dec
pop
lret
scas
push
call
xchg
decl
lds
jae
ljmp
xlat
push
pop
and
mov
jmp
cltd
ret
lcall
push
test
in
jle
and
and
or
faddp
push
ds
out
stc
pop
call
shll
test
xchg
add
fidivrl
das
push
popa
lea
pop
jae
ljmp
ja
enter
sub
or
push
jne
imull
xchg
cmp
lcall
pop
xchg
sub
enter
icebp
in
cs
xchg
popf
in
popa
adc
addr16
ljmp
jg
pushf
lods
test
dec
xor
test
mov
dec
dec
test
pushl
dec
not
fsubs
ljmp
pop
mov
les
adc
push
dec
or
jmp
hlt
dec
in
sub
cli
lcall
mull
pop
push
mov
mov
pushl
bswap
cmp
xchg
push
lock
xor
mov
lods
scas
add
lcall
jns
pusha
scas
out
lods
add
sub
push
xchg
movsl
add
fidivrs
pop
clc
ljmp
ljmp
jbe
scas
dec
pop
jp
pcmpeqd
insb
mov
adc
sti
mov
mov
loope
pushl
jg
pushf
xorl
jae
mov
jge
xlat
movsb
mov
jg
and
clc
cwtl
loop
and
cmc
lods
out
xchg
incl
dec
mov
cmpsl
bound
lods
stos
popa
imul
out
pop
aas
test
jb
inc
out
inc
ds
ljmp
sub
cmp
inc
lahf
call
mov
leave
daa
mov
stos
cmp
lods
imul
aad
mov
out
dec
sub
jb
imul
adcl
subb
adc
stc
or
pop
clc
jmp
scas
in
jb
jne
pop
jl
in
xchg
add
or
movsl
and
popa
jb
incl
sysexit
pop
sbb
outsb
mov
rclb
mov
mov
dec
call
sub
inc
ud2
mov
xchg
daa
js
xlat
adc
jmp
mov
xor
and
ficomps
sbb
adc
xor
ja
jns
xchg
mov
test
mov
xor
decl
and
mov
mov
int3
push
adc
push
clc
xchg
add
je
push
pushl
mov
add
or
jg
mov
pushl
sub
pop
adc
imul
test
pop
or
xchg
stos
dec
or
lock
incl
stc
mov
sbb
and
mov
pop
not
outsl
imul
xchg
filds
cmp
decl
pop
pop
sbb
pop
cmc
mov
jge
bound
stos
pusha
push
cmc
frstor
xchg
incb
push
repz
fnstsw
incl
lds
xchg
stos
jmp
jge
aam
bound
xor
incl
sbb
lods
fidivrs
ljmp
adc
mov
enter
in
lcall
les
ret
les
andb
imul
cmpsb
lahf
stos
mov
sub
jge
das
cld
dec
test
mov
cmp
mov
push
adcb
pusha
scas
jecxz
mov
call
pop
adc
loopne
mov
dec
in
shrb
fsubrs
in
stc
mov
adc
pushl
and
lea
fdecstp
mov
and
enter
pop
shrb
xchg
imul
cmp
add
test
insl
push
xchg
enter
mov
orl
arpl
pusha
jge
cli
adc
andl
adc
loopne
xor
sar
call
push
cwtl
cli
fisubl
adc
ds
pop
push
arpl
add
das
mov
mov
fildll
sbb
inc
ljmp
pop
decl
cmp
fldl
sub
mov
pop
adc
lret
mov
mov
dec
cld
and
fs
jmp
jb
add
das
into
mov
mov
add
mov
incl
mov
enter
cmpsb
push
add
and
inc
test
leave
push
fcmovb
push
ds
cmpb
incl
or
ljmp
adc
out
test
mov
hlt
jg
and
mov
xor
xchg
xor
sbb
pop
mov
out
scas
sbb
sti
lods
pop
sar
stc
push
test
add
pop
lret
js
cmp
jb
xchg
pop
mov
lcall
mov
xor
push
ss
push
xchg
mov
push
cli
push
inc
aam
lahf
das
inc
arpl
cli
rol
test
jmp
fs
add
jnp
fnstsw
je
ror
jl
rcrb
cmp
push
adc
pop
jp
loope
int
add
push
push
mov
outsl
int
cmp
mov
ljmp
gs
or
sbb
out
bound
pushf
sti
adc
inc
es
in
jb
dec
or
ljmp
and
ss
add
stos
pop
add
cld
repz
pusha
in
test
mov
call
lods
cmpsl
inc
mov
or
movsb
mov
push
mov
outsl
push
in
inc
inc
fimuls
lret
sahf
sbb
push
lea
sbb
stc
cmp
push
popf
gs
or
cmp
imul
mov
je
dec
jg
sahf
jl
dec
mov
insl
pusha
call
sub
cmpb
sub
mov
xchg
lods
mov
cmp
popa
fs
stos
inc
in
push
lret
cwtl
jg
mov
test
das
xchg
clc
push
loop
test
imul
pop
sti
out
cmp
xor
aaa
pop
test
jp
or
out
lds
and
mov
pop
cmp
or
push
outsb
inc
test
xchg
mov
pop
mov
add
dec
add
popf
fcmovb
jae
out
in
psraw
xchg
cmc
inc
insl
jb
rorb
out
jl
lcall
adc
mov
sbb
cmp
sti
jp
repnz
adc
push
jbe
push
push
decl
push
loop
icebp
or
popa
cmp
xchg
mov
push
sbb
cmpsb
sar
call
mov
mov
sarb
inc
cmp
mov
xlat
imul
ret
jmp
cmp
loopne
out
and
dec
or
andb
leave
and
mov
lock
mov
aaa
sbb
lods
movsl
decl
sbb
pushl
jmp
mov
sbb
adc
loopne
ljmp
push
paddw
push
xchg
push
out
loop
mov
test
lods
outsb
inc
cmp
pop
data16
or
js
xchg
test
jecxz
lcall
test
repnz
stos
gs
sbb
dec
lods
sbb
les
rorb
cwtl
test
jle
pop
cwtl
adc
cmp
or
outsb
rcr
fwait
repz
std
fstl
or
inc
or
or
ljmp
add
xchg
andb
cmp
jne
jae
xor
lock
push
lret
jl
jle
in
sbb
fdivl
mov
in
fildll
call
pushf
lret
aaa
addr16
bnd
xor
sub
negl
sbb
cmp
ljmp
or
aas
imulb
mov
call
mov
xlat
jmp
push
ret
movsb
jecxz
loop
pop
push
xchg
je
sbb
aad
test
mov
dec
cltd
jg
out
sub
pop
cmp
push
sbb
mov
les
test
call
inc
jbe
jmp
out
mov
jb
sub
jo
aam
cld
jmp
pop
sarb
xchg
push
pop
inc
js
fsubrs
mov
das
cld
pop
xorb
sbb
fsts
das
cld
push
iret
mov
xor
or
mov
and
jbe
idivb
jmp
push
xorl
cmpsl
aad
push
loopne
mov
mov
cwtl
jb
fisttpl
mov
cmp
lcall
ds
decl
pushl
mov
fsubs
mov
ja
mov
stc
inc
movsl
push
lods
je
mov
add
dec
mov
lcall
push
dec
movsl
pusha
js
push
push
cmc
cld
loopne
sbb
insb
test
ljmp
lock
outsl
repnz
xor
flds
xor
hlt
decl
pop
orb
bound
fs
add
fadd
hlt
movsl
ljmp
mov
push
jae
sub
fmul
push
icebp
sub
notb
mov
shll
mov
jp
mov
and
mov
jp
repz
xor
inc
fcompl
or
ja
inc
mov
add
pop
push
mov
popf
js
mov
fs
lods
xor
add
sbb
aas
xchg
push
adcb
rcll
clc
jg
jmp
data16
arpl
xchg
loop
push
xchg
out
adc
fadd
addr16
cwtl
nop
cmp
loopne
pop
je
out
rcrl
ficompl
jle
and
pop
loop
inc
add
push
sahf
aam
xchg
es
scas
and
jecxz
mov
in
inc
mov
jmp
pop
int
fcoml
push
stos
out
add
add
xor
mov
std
incl
fs
pushf
mov
lods
xchg
push
das
mov
shll
inc
or
arpl
scas
adc
xor
push
cld
hlt
mov
cwtl
outsb
push
ss
out
mov
pushl
arpl
insl
dec
imul
pop
repz
cmpsl
ja
insb
sub
in
mov
in
push
lcall
jo
lods
shr
push
cmp
inc
repnz
call
jmp
mov
std
jp
insl
jbe
ficoml
iret
xchg
xchg
mov
adcb
repz
xor
xor
push
fs
mov
jae
push
aam
sub
int
add
subl
xchg
inc
xor
fstpt
push
je
pop
ret
jg
and
adc
inc
test
dec
mov
cld
cmp
pop
mov
cmpsl
adc
enter
jmp
scas
cmp
lret
jecxz
jns
dec
adc
push
xchg
mov
lds
das
mov
dec
ja
mov
lahf
insl
xchg
mov
mov
decl
add
rolb
cmp
xchg
call
cmp
jle
dec
jb
push
inc
fidivrs
xor
pop
cli
in
aad
jge
mov
stos
xchg
movsl
rcr
pop
jne
xor
cmp
xor
cmp
mov
inc
sbb
fcomps
adc
in
or
mov
lea
and
cli
add
std
dec
aaa
hlt
in
xor
inc
jno
pop
lcall
movsw
clc
outsl
test
pushl
loope
cmpsb
xor
mov
cmp
jmp
fdivrs
mov
pop
cltd
mov
cmp
stos
imul
xorb
add
mov
push
mov
pop
adc
call
pop
or
outsb
movsl
cmc
mov
jmp
mov
dec
fmuls
mov
or
jmp
insl
pop
mov
lret
push
sub
lcall
in
adc
sbb
clc
cmpsl
imul
in
out
pop
push
test
stos
cltd
cmp
push
sub
pushl
aas
outsb
pop
xor
cli
ret
and
pop
enter
and
daa
pop
pushl
lcall
sbb
hlt
sub
dec
ret
or
aad
jle
mov
and
das
cmc
sti
dec
inc
lods
dec
push
leave
xor
push
fistpl
xchg
mov
arpl
mov
inc
cmp
je
aad
ss
scas
push
push
add
jge
inc
decl
cmp
cltd
dec
or
cmp
jo
mov
push
add
test
std
incl
in
in
or
mov
jne
mov
jne
cld
pop
fwait
pusha
inc
lret
pop
cmp
lea
decl
mov
lret
frstor
push
mov
jl
xor
les
aaa
cli
ljmp
js
clc
pop
sti
pop
fs
sbbl
fistps
push
adc
mov
jecxz
inc
xchg
das
fcomps
insb
adc
xchg
push
adc
adc
out
rcrl
mov
decl
and
xchg
int
fstps
jmp
dec
pop
push
stos
nop
cs
fucomip
into
xor
pop
or
lea
test
xchg
add
movsl
pushl
mov
ljmp
and
fs
push
lcall
push
mov
outsb
pop
cld
in
es
outsl
outsl
cmc
inc
sbb
inc
aam
or
pop
mov
dec
test
outsb
jnp
inc
pop
fdivrl
sbb
outsb
in
int
push
pop
push
mov
data16
mov
pop
push
adc
aaa
roll
pop
rcr
andl
mov
mov
jg
test
je
fidivrs
push
inc
xor
or
ljmp
hlt
fsubr
dec
sti
mov
fcom
loope
aam
mov
inc
pop
fadd
xor
push
add
shlb
xlat
test
inc
mov
sbb
lahf
pop
add
dec
mov
jg
xor
je
mov
mov
shll
dec
jmp
jns
fdivrp
push
in
pusha
xchg
jmp
jbe
mov
xchg
add
mov
rcl
jmp
call
jno
ret
xchg
mov
or
aas
lcall
scas
lahf
fs
and
xchg
in
jle
xlat
mov
das
out
xchg
lea
out
pop
sub
lret
add
ljmp
data16
jle
mov
in
add
out
inc
add
push
jno
stos
xor
add
push
pop
outsl
mov
fldl
mov
les
dec
mov
mov
iret
fdivrl
sbb
or
aas
mov
aam
scas
idivl
dec
jo
cli
pusha
sar
dec
sbb
mov
push
adc
xchg
pop
sarb
mov
inc
add
aas
sbb
dec
lret
mov
pop
fwait
cmp
mov
push
imul
adc
mov
psraw
dec
daa
mov
push
or
fwait
add
dec
pop
ja
jae
ljmp
add
dec
notl
fmuls
dec
cld
mov
xchg
rorl
decl
daa
dec
cmpsl
dec
sbb
or
out
jecxz
jmp
ret
cmpsb
push
in
shlb
push
jmp
xchg
dec
xchg
ds
in
push
or
pop
push
mov
mov
push
in
mov
out
hlt
push
jb
test
xchg
lret
fildll
sbb
mov
push
je
and
xchg
in
mov
push
fimull
mov
std
ljmp
jne
hlt
sti
dec
lret
mov
xchg
adc
add
mov
jle
push
mov
lock
pop
or
jp
lods
and
jg
jmp
insl
call
ja
bound
push
aad
adcb
sar
call
mov
es
mov
sub
test
dec
mov
inc
or
lcall
mov
fisttpl
int3
ss
cmpsb
pop
lretw
das
jno
pop
cli
push
cs
aam
inc
imull
int3
rorb
fstps
cmpl
in
sub
divl
iret
sub
push
std
pop
dec
cmp
jg
adc
das
ljmp
fs
nop
mov
notl
push
jo
and
sub
xlat
or
fwait
addl
test
dec
in
push
call
xlat
fbstp
rcr
mov
stc
loopne
lds
decl
jnp
xchg
push
addr16
aas
or
xchg
cmc
jmp
jae
ss
add
and
ljmp
push
leave
stc
dec
lods
in
fs
decl
sub
dec
adc
cld
mov
aam
in
xchg
add
push
add
dec
pop
jns
fdivs
movsl
mov
jg
adc
fistps
mov
movsl
push
rclb
cmp
mov
cmp
incl
sub
xor
push
fiaddl
push
mov
movsb
jmp
mov
or
fwait
lcall
mov
cmpsl
mov
dec
ljmp
out
es
push
call
and
outsb
call
inc
mov
test
inc
sub
and
ja
mov
inc
aas
inc
fisubrs
stos
jmp
cmp
jae
inc
call
push
jmp
jg
pushl
sbbb
mov
sbb
adc
out
out
sbb
adc
mov
bound
clc
movsb
dec
rol
in
xchg
out
xchg
int3
addr16
mov
outsl
xor
push
inc
aas
imul
subb
movsl
stos
jmp
add
pop
dec
in
test
loopne
pop
fcmovu
xchg
jmp
sbb
jo
jns
inc
pushl
dec
call
mov
addb
ljmp
lret
add
daa
jb
inc
jns
aad
mov
les
jo
jne
or
gs
lcall
or
cs
mov
cmpsl
sbb
test
xor
xchg
inc
outsl
mov
or
cmp
addr16
sarl
call
fsubrl
inc
mov
cmp
rolb
scas
adc
mov
movsl
and
pop
loop
mov
mov
dec
daa
mov
mov
push
xchg
or
out
cmp
mov
sbb
adc
cld
or
sbb
loopne
ljmp
sbb
dec
push
adc
arpl
mov
jg
sbb
decl
adc
pop
inc
orb
lret
repnz
mov
dec
xchg
sar
pushl
fcompl
sbb
shrb
stos
xchg
repnz
ljmp
push
xor
xor
cwtl
xchg
or
pop
mov
fs
xchg
jns
dec
jbe
mov
pop
mov
jg
fs
js
pusha
push
adc
mov
push
inc
or
sar
mov
lcall
or
jns
cmp
mov
or
push
cmpsb
rorl
pop
aas
jne
call
imul
inc
icebp
stos
pop
hlt
pop
fsubs
idivb
and
mov
stos
fisttps
mov
movsb
cmp
fbstp
cmpsl
iret
and
incl
orl
mov
cpuid
add
and
stc
jnp
sub
lods
pop
loop
rolb
enter
mov
test
pop
push
sti
adc
aad
cltd
je
hlt
jo
pop
in
or
jg
fdivrs
out
mov
sub
subl
jns
mov
mov
inc
add
mov
popf
pop
movsl
xchg
pop
repz
dec
cli
xor
insb
xchg
mov
adc
push
aas
cmpsb
cmovo
sub
pop
fisttpll
jns
lea
mov
sete
popa
push
push
mov
adc
les
std
cmp
pushl
stos
and
out
bound
mov
xlat
or
xchg
or
cmpsb
lock
call
outsl
push
xlat
ret
test
xchg
hlt
sahf
icebp
push
sub
repz
out
sub
pushl
mov
hlt
mov
sbb
das
lods
cmp
add
imul
sbbl
lahf
push
leave
insl
sub
into
mov
xchg
aad
repz
lock
call
jns
pop
cmpsl
and
icebp
xchg
mov
xchg
add
fldt
mov
int
arpl
jmp
das
adc
or
adc
cli
das
pop
and
lcall
jg
mov
data16
push
std
push
lcall
stc
xor
push
int3
aam
cmpsb
add
pop
jbe
push
call
ffree
popa
add
subl
jle
fsts
in
movsb
pop
jmp
pop
inc
loopne
pop
or
dec
arpl
inc
inc
cmp
arpl
les
adc
in
lock
ljmp
lock
mov
pop
and
hlt
subl
add
ljmp
ljmp
aas
xor
pop
sbb
loopne
nop
shufps
lds
decl
cmp
pop
or
xlat
push
notb
or
sbb
cmpsl
shl
pop
mov
cmpl
cs
scas
inc
sub
into
xchg
jg
out
add
icebp
push
or
pop
call
sbb
out
dec
push
int3
popa
cmpsl
lcall
sub
push
pop
mov
dec
adc
mov
subl
loope
lods
pushl
jne
ds
mov
sbb
ss
push
subl
lock
das
inc
jmp
and
callw
jg
jbe
mov
mov
dec
dec
push
out
cld
sub
in
data16
adc
nop
int
out
pop
fucomp
in
or
sbb
mov
jb
xor
push
push
js
lods
xchg
inc
outsb
cmp
jl
pop
inc
jns
jae
lock
cmp
int3
aaa
ja
incl
inc
lret
cltd
xor
test
arpl
aad
push
jae
sbb
mov
ret
add
jmp
sbb
jnp
pop
fsts
pop
shlb
and
hlt
fdivr
mov
das
in
jbe
jg
fdiv
push
lcall
pop
push
lcall
pop
push
mov
jl
lretw
and
addr16
cmpb
stos
or
movsb
in
fisubl
mov
daa
or
xor
mov
lods
and
dec
sbb
mov
cmp
ficoml
call
xor
and
dec
mov
dec
cmp
ror
popa
add
or
scas
lret
popa
xor
call
test
testb
push
lcall
aas
push
out
pop
cmp
aaa
insb
adc
ds
mov
dec
in
insl
mov
mov
repnz
sub
push
addr16
mov
xor
xchg
mov
dec
mov
ss
jmp
push
neg
pop
andb
rcll
cmp
lea
dec
enter
call
pop
std
inc
push
repz
push
fmul
lea
cmpsl
ret
cmp
dec
add
cmc
shr
ljmp
dec
jns
fldenv
out
jg
xor
movsb
inc
mov
push
ljmp
aas
xchg
inc
pushf
in
data16
and
xor
sbb
cmp
mov
dec
imul
outsl
cld
mov
pop
js
and
test
cmpsl
jb
jmp
jg
lcall
cmp
push
fxch
in
xchg
ja
imul
mov
mov
fs
movsl
dec
cld
ds
adc
push
push
push
aad
mov
aas
cwtl
punpcklwd
xor
mov
pop
lods
sti
and
sbb
sahf
rorl
adc
stc
mov
repz
dec
cld
and
ds
mov
cmp
lcall
jmp
add
ror
int
in
mov
pop
and
sbb
inc
leave
dec
adc
adc
mov
mov
loop
dec
pop
loopne
xlat
fistpl
nop
out
mov
lock
mov
mov
test
sub
repnz
das
enter
aam
das
test
loopne
rol
cs
push
jmp
xor
push
mov
push
imul
dec
movsb
in
add
inc
stc
pop
ljmp
pop
mov
sbb
arpl
enter
flds
into
ljmp
and
fdivrs
sub
fcmovbe
mov
push
lds
push
cmp
adcb
loope
pop
into
int3
js
popf
ljmp
lahf
ret
cmp
clc
lds
int
jo
mov
inc
mov
adc
xor
std
adc
push
in
or
jb
hlt
out
mov
sub
jl
aas
sub
loop
jmp
dec
mov
lcall
lea
testl
mov
fildll
leave
scas
mov
dec
lock
jmp
cltd
fidivs
push
js
mov
cli
test
call
outsb
adc
inc
fwait
xor
pop
jne
shrl
jecxz
test
leave
push
clc
lret
imul
pusha
loope
sbb
data16
repz
or
repnz
xchg
and
fnsave
ja
loopne
add
xchg
mov
leave
jp
jb
sbb
dec
call
std
push
call
dec
notl
cmp
adc
mov
inc
insb
mov
int3
sub
cs
sub
loopne
dec
mov
cli
push
cmpsl
mov
mov
mov
jg
call
mov
jbe
negl
gs
stos
xor
arpl
sahf
in
fadd
pop
dec
inc
sub
int3
icebp
jp
pop
call
xchg
fdivr
mov
rcll
and
pop
pop
add
cmp
pushl
xchg
xor
lahf
dec
les
add
fstps
ss
aad
std
lahf
out
add
ljmp
fists
je
inc
fs
jle
sub
lods
aas
jnp
jo
inc
sahf
mov
push
lock
mov
fmuls
cmp
jbe
mov
adc
mov
decl
pusha
out
mov
movsl
xchg
add
stc
stc
push
cli
jnp
and
mov
in
xor
adc
xor
adc
add
in
push
xor
in
loopne
je
out
stos
pushl
icebp
fcompl
fisttpl
mov
adc
jmp
call
push
pop
and
int3
xor
roll
call
or
sub
aad
in
fldt
lds
cmp
pop
xchg
sbb
jg
incl
fimull
loop
jb
aam
popa
sahf
mov
xor
loopne
cmp
into
loop
out
jmp
dec
push
xlat
cmp
cmc
cld
je
jg
pop
add
aam
jb
mov
pop
cmpb
xchg
mov
pop
aad
cmpb
inc
insb
cwtl
aam
dec
fidivrl
js
pop
push
push
rep
nop
lcall
jne
sub
aam
xchg
cli
out
mov
jae
fsubrl
mov
call
loop
xchg
out
fiaddl
lds
rclb
or
scas
jbe
and
mov
into
pop
stos
hlt
std
in
jae
add
insl
enter
inc
inc
lret
jp
out
popf
dec
xor
and
jmp
in
adc
inc
sbb
cltd
mov
jg
call
inc
cwtl
cmpsl
test
adc
push
adc
mov
fadd
dec
pushl
lret
xchg
lcall
cli
inc
loopne
sbb
rcll
push
jp
mov
mov
aaa
movsl
push
sub
push
jmp
push
ljmp
cmp
clc
or
push
xor
lret
in
fimuls
add
jno
pop
loop
sub
sbb
mov
jmp
push
xor
pusha
test
popa
lods
jbe
incl
sbbl
mov
test
and
pop
ds
aaa
cmp
loopne
push
call
pop
cmp
add
ljmp
cmp
cltd
loopne
ret
hlt
and
sbb
jb
fwait
test
js
incl
decl
je
movsb
inc
hlt
je
push
data16
inc
jg
arpl
lahf
je
inc
fdivrl
cmp
mov
les
cli
mov
mov
add
push
sub
das
mov
das
je
decl
nop
stos
test
test
fisubrl
jmp
lea
jb
adc
xchg
outsl
std
jg
cld
jecxz
aaa
fwait
jne
ficoml
daa
arpl
jg
jmp
xor
inc
pusha
pop
dec
pop
clc
push
mov
pop
inc
sbb
mov
jmp
adc
jne
call
fcoms
mov
ret
inc
roll
hlt
pop
jb
mov
outsl
pop
or
decl
es
lods
inc
cli
call
aaa
xchg
int3
mov
push
cmpsb
pushl
dec
push
mov
pusha
push
xor
aaa
lcall
pop
nop
inc
mov
inc
jno
call
dec
adc
mov
dec
mov
dec
dec
add
int3
sahf
sbb
fs
jmp
xchg
lret
lea
inc
mov
in
lahf
out
scas
std
push
daa
add
mov
int3
lods
pop
jne
or
mov
lock
mov
mov
sub
andl
xlat
mov
jns
out
xchg
dec
adc
jg
incl
cmp
jnp
sub
jecxz
fsave
outsl
push
pop
xchg
decl
or
mov
cmc
jb
shrl
and
ror
jnp
jno
mov
shlb
inc
cmpsb
mov
fsubl
insl
jne
mov
dec
int
aad
mov
sahf
lret
dec
pop
ljmp
fcmovnu
mov
dec
push
mov
loop
dec
pop
jg
lret
or
sbb
xchg
xchg
cmp
lret
mov
outsl
xchg
jle
out
scas
mov
push
call
add
aad
push
dec
movsl
cmpsl
lahf
insl
xlat
or
aam
call
mov
inc
popa
sub
jg
xchg
leave
aaa
mov
push
mov
shll
pop
mov
call
ljmp
test
jne
add
xchg
xchg
std
lds
mov
es
clc
out
sahf
test
mov
mov
pop
ljmp
stos
test
jmp
pop
rcr
pop
outsb
dec
gs
aad
out
dec
xchg
inc
std
mov
iret
cmp
mov
jne
loop
sbb
int
mov
inc
sub
inc
dec
dec
cmc
fildll
sub
shrl
adc
and
adc
mov
aam
ja
pop
cld
add
mov
mov
addr16
mov
cld
lcall
add
mov
inc
lods
jmp
mov
cmp
stos
clc
fisttpl
xchg
mov
xchg
dec
scas
or
mov
xor
sub
mov
inc
fnstsw
jmp
cltd
pop
sub
scas
xor
or
adc
aam
iret
add
decl
loopne
mov
mov
lock
lcall
xor
fstpt
nop
sub
xchg
stos
mov
jp
iret
movsb
jnp
jno
pop
xchg
pop
mov
cmp
in
mov
dec
cmp
jae
jmp
repnz
outsl
out
lahf
mov
popa
shrb
sub
push
dec
mov
xor
sub
arpl
mov
sbb
call
add
das
push
andb
rorb
ret
push
cli
adc
aaa
sbb
fbld
daa
sbb
mov
fcompl
mov
inc
inc
and
pushl
sbb
push
xchg
cmpb
loopne,pn
enter
pusha
enter
and
ljmp
xchg
mov
rcrl
int
push
pushf
std
pushl
rcr
inc
xor
arpl
aad
lods
add
cmp
fnstsw
mov
gs
cmc
mov
pop
push
pop
fstl
cs
xchg
mov
mov
shrb
adc
cmp
mov
mov
or
xchg
mov
and
icebp
inc
cmpb
incl
les
jmp
mov
pop
int3
lds
add
fsts
mov
pushl
lods
jmp
jg
pop
mov
jbe
movsw
out
xchg
mov
dec
shrb
lcall
test
or
adc
stos
nop
nop
bound
add
out
fisubrs
incl
hlt
adc
cmp
xchg
sub
sub
in
xor
inc
aaa
add
lcall
daa
loop
and
mov
or
aam
cmpsl
pop
in
mov
pop
inc
add
fidivrs
jmp
bndldx
loop
ss
mov
mov
cmp
push
add
popa
or
clc
daa
mov
jl
rorl
mov
jp
jg
insl
scas
ret
sbb
xor
and
mov
jno
push
negl
mov
xor
aad
cmc
ljmp
daa
push
pop
cmp
jle
jmp
inc
in
push
je
add
push
xor
mov
lcall
fidivrs
ljmp
mov
jecxz
int3
hlt
lret
je
or
jge
int3
or
sti
and
sti
lds
push
scas
fcmovnu
int3
jecxz
push
xor
pop
jns
pop
subl
lcall
xchg
insb
or
imul
ss
push
int3
jmp
mov
xor
push
std
mov
jo
pushl
ret
or
inc
movsb
mov
ljmp
shl
push
xor
cltd
jge
push
arpl
xchg
cli
lcall
or
inc
js
into
jecxz
inc
xlat
push
shr
xchg
je
xor
lcall
call
movsb
dec
dec
mov
shll
sub
cltd
lcall
mov
dec
sub
test
in
mov
cmp
fstl
in
add
out
sbb
in
pushl
dec
mov
out
push
jp
fsts
out
loop
fwait
mov
outsl
aad
or
cltd
xchg
outsb
add
orl
lods
jg
mov
pusha
es
lahf
mov
dec
aad
add
jae
inc
call
ljmp
cmp
and
push
enter
imul
mov
add
outsl
repz
stc
and
jns
add
mov
arpl
pushl
popa
mov
addr16
repz
inc
gs
lods
cli
fsubrs
jno
jecxz
or
push
inc
ljmp
push
or
lahf
dec
test
lds
out
divb
addr16
cltd
lock
imul
ljmp
jg
fstps
js
int3
data16
lock
jmp
aaa
add
int
jo
das
cld
pop
call
ficoms
adc
sub
call
lcall
inc
ret
inc
pop
mov
sbb
lds
imul
adc
popf
mov
cmpsl
ljmp
sub
dec
loope
and
repz
mov
push
insb
subb
push
movsl
rclb
mov
mov
cld
aaa
fadds
loop
sub
mov
push
adc
pop
clc
ljmp
xor
inc
fs
inc
pop
icebp
aad
insb
cli
xchg
sbb
enter
jne
call
dec
and
mov
mov
int
aad
sub
cmp
xchg
sub
call
push
mov
subl
push
mov
fs
das
push
push
test
ret
mov
movsl
mov
pushf
fstl
fucomi
shrl
cmpsb
cltd
outsl
push
shlb
push
mov
xor
lret
mov
pushl
or
stc
pop
push
pusha
ror
pop
pushf
or
pop
fnstenv
aad
xchg
mov
outsl
lock
jo
inc
je
cmp
inc
cmp
es
jb
pop
jg
fs
rorb
call
sti
mov
in
jl
or
loop
mov
in
in
xor
test
ret
mov
lret
cmp
call
inc
xor
ret
insl
call
pushf
cs
jg
scas
out
sbb
mov
sub
popw
or
dec
mov
dec
mov
incl
xchg
sub
pushf
les
sbb
xor
ljmp
call
ret
adcb
jb
mov
mov
or
call
adc
fsubrp
cli
les
aad
sahf
or
add
sbb
push
pop
cld
incl
mov
add
cmp
inc
xor
std
nop
mov
jmp
cli
outsb
std
incb
or
idivb
jmp
jmp
xor
xlat
scas
aaa
jnp
test
xor
shlb
call
clc
rclb
inc
mov
ret
xorl
sbb
mov
adc
or
sti
pop
movsl
outsb
in
sbb
pop
or
fadd
fsubrs
pushl
inc
jno
repz
int
adc
sub
mov
xchg
dec
jne
pushl
cld
in
mov
imul
pop
adc
test
repnz
dec
lcall
xchg
pusha
idivl
and
lahf
sub
ja
add
out
cltd
jg
incl
mov
cmp
jmp
cwtl
jg
rcll
xor
adc
lcall
push
cmc
jae
and
or
pop
adc
jmp
popf
stc
sub
xorb
and
sahf
or
aaa
ret
pusha
out
push
incl
sbb
or
gs
ds
lcall
cmp
dec
jb
add
call
ror
rcrb
mov
pop
and
and
sbb
ljmp
sti
lods
mov
enter
jecxz
in
repz
out
out
or
ljmp
std
dec
sahf
mov
movsl
cmpsb
inc
jg
sub
pop
xchg
popf
pop
fdivr
pop
inc
sar
fstpt
mov
and
add
mov
lods
out
gs
mov
add
lcall
dec
xor
in
jle
sub
sti
cwtl
xchg
xchg
xor
sub
jecxz
jp
inc
cli
and
inc
cmp
bnd
adcl
stos
outsl
lcall
ja
dec
addr16
loop
dec
sti
push
lcall
repz
lcall
pushl
rorl
push
outsb
mov
xchg
dec
or
push
mov
cwtl
lret
scas
add
jg
inc
lods
fldt
stos
cmp
mov
pop
testb
pushl
sbb
mov
jmp
mov
sub
pop
adc
repnz
ret
mov
imul
pop
fldenv
ljmp
add
mov
dec
lcall
pop
sti
mov
adc
sbb
cld
cmpsb
data16
loop
adc
addb
add
jmp
rcll
fs
push
push
push
jle
xorl
jbe
push
push
insl
addr16
ljmp
lods
divl
pop
or
addb
scas
and
sub
sbb
sub
dec
mov
jmp
clc
out
xor
and
xchg
jge
cld
jmp
test
leave
cld
lcall
ds
pop
outsl
int3
inc
in
add
in
or
dec
ja
cmp
mov
int
mov
std
repz
add
mov
repnz
jl
mov
push
inc
xor
das
and
or
mov
add
dec
xchg
ss
sub
stos
daa
pop
imul
pop
cmp
add
clc
and
push
cwtl
sti
pusha
push
call
add
xor
dec
dec
and
sti
imul
mov
xchg
scas
cli
incl
xchg
inc
cmp
push
stc
fisubl
add
xor
inc
shl
and
cmpsb
or
aaa
cwtl
mov
pushf
stos
ljmp
in
adc
les
and
mov
idiv
pushl
pop
ret
pusha
mov
out
pop
adc
mov
xor
ret
jg
ds
in
jge
add
mov
and
arpl
stc
sub
hlt
cmpb
jmp
fwait
mov
ss
repz
cmp
pop
ret
add
sbb
jg
dec
ret
add
popl
jg
insb
rclb
cs
pop
out
leave
push
mov
shl
jns
add
dec
sbb
call
jne
push
fcompl
test
mov
push
adc
enter
outsl
ljmp
into
xor
xor
sbb
add
pop
adc
xor
ficoml
mov
sub
mov
mul
xor
ja
jb
sub
push
addr16
push
sbb
test
incl
jl
ss
cltd
fildll
sahf
dec
data16
push
test
aad
push
jg
incl
icebp
xor
add
mov
push
clc
jg
movsb
aam
jno
aas
and
cmp
sub
cmpsl
sub
fnstsw
aaa
aas
add
leave
fldt
pop
outsb
je
test
add
cmp
push
inc
pop
push
int
mov
mov
cltd
popf
push
mulb
daa
inc
sahf
jmp
mov
pop
sub
ljmp
xchg
clc
incl
inc
pop
test
mov
stc
xlat
jmp
ret
or
ja
mov
sub
pushl
fsubrs
jp
xlat
dec
push
or
nop
push
xchg
inc
loop
test
pushl
mov
lods
mov
test
xor
test
test
mov
mov
mov
push
inc
loopne
sti
loopne
inc
xor
in
jg
fildll
cmp
cmp
enter
mov
jg
jl
push
sbb
jnp
adc
mov
lahf
xchg
xor
cli
jg
es
ret
ret
pushf
mov
sarl
adc
cmpsl
dec
inc
call
push
adc
cmpsb
xchg
and
test
xchg
xor
push
call
inc
pop
insl
xchg
and
xchg
dec
push
lcall
sbb
adcl
pop
push
test
movsb
adcl
add
mov
xchg
pop
push
insb
cmpsl
stos
jle
rolb
mov
pop
je
sub
inc
sbb
jmp
and
ss
ret
mov
mov
jae
outsb
insb
xchg
inc
or
mov
pop
cli
mov
gs
movsb
in
out
or
dec
push
mov
mov
mov
int3
fldl
sub
xor
gs
in
jns
jnp
sub
dec
mov
sub
jns
and
mov
movsb
stos
dec
sar
bound
pushl
cmp
test
add
push
mov
jp
cmp
pop
pushl
push
and
imul
xor
ret
mov
xor
incl
xor
fimull
fistps
fwait
fwait
cmp
adc
sub
idivl
push
decl
add
lret
mov
test
bound
and
add
jg
add
enter
les
push
mov
xor
int3
sbb
mov
pop
mov
fcom
mov
lret
cmp
test
aas
les
test
mov
jg
ds
loop
jmp
repz
xchg
cmp
pusha
filds
shll
sbb
call
outsl
mov
jge
and
adc
pop
cmp
in
xor
mov
cli
jg
decl
jo
dec
jmp
sub
cld
mov
inc
cmp
lock
lea
xchg
mov
pop
mov
mov
dec
hlt
jmp
add
orb
push
in
iret
mov
fbld
in
sbb
sbb
repz
leave
dec
aas
ljmp
adcl
sahf
and
push
mov
jg
jb
cmpsl
adc
fisubrl
xchg
mov
and
mov
and
clc
or
dec
stos
push
mov
bound
cwtl
outsl
fdivrl
push
enter
lcall
outsb
aas
fcomps
push
jmp
push
mov
pop
ud0
js
fs
out
lock
shll
jg
jbe
jns
push
sub
ljmp
jae
dec
fwait
cli
inc
or
mov
xchg
dec
xchg
adc
test
call
incl
cmp
sub
pop
idivl
push
mov
cmpsb
insl
mov
mov
lds
aam
imul
xchg
data16
or
xor
jg
lcall
or
out
faddl
pop
jno
mov
pop
jae
std
xor
cmp
push
add
shlb
inc
xor
ja
das
repnz
add
jmp
lcall
xor
ror
lods
aas
jns
adc
mov
hlt
ljmp
push
xor
mov
int
mov
pop
push
das
push
inc
mov
pushf
jge
mov
pop
ljmp
adc
cmp
out
iret
outsb
fcos
cld
jbe
jecxz
in
jns
sbb
xor
add
add
xchg
or
inc
mov
loopne
jge
mov
xchg
in
decl
filds
fcomps
sbb
loopne
push
aam
mov
pop
stos
aam
faddl
lock
lods
add
orb
jmp
and
loope
bound
jbe
adc
dec
sub
nop
push
es
into
cmp
dec
jmp
and
hlt
jmp
mov
lea
mov
cmp
adc
subl
jmp
jp
and
push
fs
je
inc
sub
lcall
loope
arpl
loop
movsb
inc
bound
xlat
jmp
movsb
call
ljmp
mov
mov
aam
sub
movsl
cld
test
mov
sub
jl
ds
xlat
mov
fs
in
pop
xor
ja
adc
int
push
test
adc
cmp
push
incl
mov
in
test
mov
lds
fdivs
addr16
jbe
add
decl
mov
fdivrl
mov
sti
or
test
ss
ljmp
out
or
dec
fwait
jg
jne
imul
fdivl
decl
or
fwait
gs
push
cwtl
mov
adc
call
inc
outsb
divl
dec
mov
nop
mov
test
cmp
mov
mov
loop
in
adc
loop
xchg
push
outsb
jge
jo
and
int3
push
xchg
push
mov
clc
into
scas
jmp
mull
mov
push
jb
aad
insl
loope
adc
pop
mov
dec
add
js
in
fsubrs
rol
aaa
and
std
push
and
dec
inc
add
xor
iret
arpl
pushl
mov
rcll
push
cli
xor
scas
pushl
cli
dec
out
sbb
call
lret
or
mov
dec
imul
dec
cld
jl
loopne
subb
stc
dec
push
je
call
mov
pop
mov
imul
es
cld
inc
push
into
shrb
ljmp
pushl
add
repz
fdivs
sbb
stos
mov
icebp
lcall
inc
sarl
pop
jo
jg
decl
stos
mov
dec
int3
and
inc
jmp
mov
fisubrs
loop
cmp
call
adc
xor
scas
cmp
clc
sub
sub
jb
incl
sbb
test
lock
stc
push
mov
fs
rcll
jg
dec
lods
or
stc
and
xchg
frstpm(287
std
mov
dec
test
xchg
mov
add
add
sub
lcall
gs
les
mov
test
jnp
scas
call
lock
mov
lret
and
xchg
jno
decl
fisubrl
loopne
cmc
jp
lret
lret
pop
rcr
ror
in
mov
test
add
enter
jmp
jmp
dec
adc
jmp
scas
adc
aam
decl
scas
cmp
or
xor
and
test
mov
inc
dec
mov
dec
jb
mov
arpl
sbb
fcoml
cmp
pop
jne
sub
out
lds
out
mov
adc
pop
jmp
data16
fwait
jb
pop
cmpl
nop
arpl
inc
fcoml
cmpsl
cmc
mov
xchg
cmpsl
and
fnstenv
in
pusha
mov
repnz
fdivrp
xor
mov
out
std
pushl
or
and
inc
xchg
or
dec
iret
jne
daa
lcall
and
xor
sub
ss
cmp
das
push
jnp
cmp
xchg
lahf
mov
xchg
cmp
aad
cmp
rolb
pop
ljmp
push
or
fcoms
imul
nop
shl
sub
decl
and
lods
lea
lret
push
jp
je
push
mov
lcall
aas
or
xlat
sbb
mov
xchg
ror
xor
jp
inc
mov
ret
sub
inc
in
xlat
inc
inc
push
rcll
xchg
inc
adcb
push
mov
fcoml
shrl
daa
mov
dec
xor
mov
leave
and
xor
pushf
sti
mov
bound
pop
push
inc
sbb
in
push
jg
or
pop
mov
jecxz
mov
ljmp
iret
into
cmp
popa
jge
or
sbb
jg
mov
inc
mov
jg
cmp
pop
dec
pop
jo
test
cmp
incl
and
lods
jl
aas
test
and
loop
jg
mov
stos
xor
decl
lea
mov
adc
lds
jecxz
incb
pop
sbb
icebp
bound
cmp
call
test
push
jb
mov
cmp
and
xchg
into
and
and
adc
clc
pushf
daa
and
cmc
outsl
sbb
jmp
and
test
fnstcw
les
xchg
fcompl
aad
hlt
or
mov
mov
push
lods
inc
sahf
jbe
das
icebp
mov
ret
incb
arpl
mov
jne
mov
add
pushl
pusha
in
cmpsl
js
repnz
cmp
int
xor
mov
ret
movsl
fdivrp
inc
lcall
jg
pop
mov
dec
sbb
pop
dec
sub
lcall
push
xor
push
lret
inc
repz
scas
data16
andb
cmp
ljmp
mov
sub
and
jl
rclb
xor
jg
lcall
test
les
out
push
pop
roll
orl
sar
lahf
lcall
subb
mov
jae
adc
pop
fcompl
inc
stc
mov
xchg
mov
aam
cld
jp
fnstenv
clc
add
nop
lcall
shr
jg
into
dec
sbb
lock
arpl
iret
cli
push
sub
or
xchg
mov
mov
sbb
push
cltd
jae
fimuls
fisubs
jbe
xchg
lcall
negl
aaa
int3
sbbl
call
movsl
lock
add
mov
push
repnz
add
je
adc
cwtl
and
sub
sub
add
movsl
push
add
out
ljmp
ja
aad
add
and
call
jmp
pop
call
jg
add
xchg
js
in
into
das
xchg
pop
jae
scas
jg
sub
stos
out
dec
cld
fisttpl
cmp
inc
mov
mov
xchg
mov
scas
inc
pushl
sar
repnz
mov
jne
or
ja
inc
cmp
neg
clc
pop
loop
std
xchg
or
incl
push
mov
movsb
cltd
sub
xor
ljmp
call
adc
inc
mov
push
mov
ret
jae
push
jp
or
aaa
pop
bound
fildll
dec
fdivr
xor
ficomps
inc
ror
add
outsl
hlt
jmp
inc
xchg
mov
imul
mov
decl
std
outsl
sbb
mov
fbstp
pop
out
loopne
jge
jl
int3
pop
cmpsb
aas
decl
stc
das
jmp
sbb
inc
add
adc
rcrb
mov
cmp
call
or
mov
test
mov
ljmp
xchg
fisttpl
cmp
das
lock
ret
test
repz
add
and
cli
lods
decl
mov
mov
mov
mov
mov
mov
das
xor
xchg
push
xchg
sub
mov
lret
dec
jg
jle
cltd
cmp
jns
adc
jno
or
cmp
faddp
jg
mov
movsl
sub
xchg
and
cli
rcr
repnz
mov
out
jg
lea
shrb
negl
cwtl
cwtl
sti
mov
loopne
hlt
jmp
cltd
repnz
sbb
mov
leave
mov
xchg
es
jle
jg
call
cmp
jb
xchg
xchg
dec
ret
jbe
or
ljmp
icebp
jmp
jo
repnz
inc
pop
push
mov
fs
insl
jo
pop
lods
repnz
dec
aam
inc
mov
bound
scas
mov
jecxz
repz
mov
in
inc
pop
clc
aaa
adc
push
out
fsubrl
cmc
mov
push
decb
sbb
mov
cs
loop
hlt
imul
in
pop
std
pop
js
pushf
jl
pop
xchg
and
cmc
or
test
insl
push
mov
notl
and
dec
add
xor
ss
add
ret
mov
rcrb
imul
pop
dec
pusha
cmc
decl
std
call
dec
lret
dec
xchg
adc
popa
inc
sbb
jmp
dec
jle
lods
or
mov
mov
les
adcl
jmp
daa
ja
mov
cwtl
mov
push
jecxz
fidivl
ffreep
inc
incl
imul
sub
mov
inc
pop
mov
rclb
aaa
aaa
dec
mov
es
jb
idiv
incl
cltd
test
mov
xchg
xchg
int
adc
test
ljmp
mov
and
pop
and
scas
outsb
jne
leave
sarb
mov
sti
movsb
int
push
sub
cmp
or
jo
adc
pushl
mov
jns
sub
cld
adc
mov
mov
and
xchg
incl
fnstsw
daa
cmp
aam
pop
mov
lods
mov
push
fdivrs
sub
cld
adc
test
mov
negb
popa
mov
int
movsb
scas
pop
adc
out
and
push
add
ja
add
aad
insl
jne
dec
shl
pushl
rolb
or
test
out
jg
mov
dec
in
or
push
icebp
and
cmp
cmp
mov
les
mov
jne
xchg
mull
pop
cmp
fdivr
fucomip
test
aad
das
sub
mov
push
dec
ljmp
icebp
inc
fwait
les
daa
push
inc
lret
xchg
test
icebp
mov
lret
sbb
cld
incl
fwait
dec
mov
sub
mov
jecxz
and
fistpl
movsb
sbb
or
xor
sub
lcall
mov
jnp
push
stos
icebp
jecxz
in
mov
dec
lock
pop
or
repnz
sub
pop
mov
mov
or
xor
sub
push
out
mov
push
xor
loop
or
or
icebp
lret
xor
mov
loopne
test
sbb
lcall
sub
lcall
stos
sahf
lcall
sub
pop
jecxz
icebp
cmp
xchg
pusha
jmp
jecxz
adc
rclb
xchg
fcom
push
mov
pop
mov
outsl
lods
push
cli
orb
adc
lcall
adc
es
cmpsl
jb
jge
ret
adc
xor
lahf
jg
or
mov
decl
mov
iret
xchg
hlt
scas
arpl
jl
dec
xor
iret
dec
adc
mov
sbbl
ljmp
ljmp
repz
imulb
mov
lret
lcall
in
dec
push
inc
inc
mov
aaa
rcll
xlat
xor
dec
cmp
ljmp
pop
stos
mov
sub
std
xchg
dec
movsl
out
dec
ss
jnp
push
loope
std
add
or
mov
pusha
dec
adc
in
sbb
aas
test
pop
les
inc
mov
jg
decl
cmc
insb
popf
mov
ja
xchg
xor
jae
push
xchg
jmp
xor
add
in
stos
repnz
ja
adc
cmp
sub
mov
pushl
xchg
jge
lods
insl
scas
mov
cwtl
push
testb
pop
pop
and
loopne
lret
pop
add
enter
or
loop
push
loope
push
dec
inc
cmp
pushl
or
insl
adc
sar
cwtl
and
jo
dec
xchg
frstor
mov
xchg
sub
das
mov
in
mov
test
xor
cmc
decl
dec
ds
cs
sbb
pop
mov
add
or
pop
std
xchg
xlat
ljmp
movsb
fisubrl
adc
pop
arpl
mov
out
lret
inc
sti
push
es
cwtl
int3
ljmp
lock
jno
mov
pushf
xchg
testb
sbb
mov
outsl
insb
hlt
ljmp
xchg
sub
and
call
cmp
roll
int
mov
or
inc
sbb
cs
shrb
out
insl
cmpsl
xor
push
xor
fdivl
xor
mov
jns
dec
ja
sub
jl
ret
pusha
fisubs
mov
cld
iret
testb
cld
fs
test
rol
das
ljmp
aam
lock
cmp
mov
mov
fmuls
xor
int
dec
scas
xorl
sub
repnz
scas
xor
sbb
pop
inc
into
into
cmp
neg
sbb
test
mov
mulb
mov
push
shlb
push
ret
lcall
stc
and
cmpsl
and
mov
into
xor
es
mov
or
pushf
les
out
jmp
inc
leave
pop
pop
add
pusha
and
and
cli
test
mov
in
add
dec
lea
rcll
fistps
xchg
lods
sbb
mov
roll
xchg
or
mov
decl
pusha
out
scas
or
jle
cmpsl
push
lcall
xchg
cld
int
pop
jle
loope
pop
lds
xchg
into
mov
mov
data16
jg
mov
jge
sti
aaa
pop
dec
adc
pop
cmc
test
mov
call
fbld
pop
hlt
pop
xor
outsl
hlt
cmp
mov
adc
pop
or
add
sbb
jge
fstpt
imul
cmc
test
xchg
pop
push
imul
push
dec
std
cld
sahf
popa
mov
mov
scas
cmc
rcrb
sti
js
xchg
xor
lahf
fcoml
mov
sarl
mov
adc
push
std
neg
loopne
mov
and
shl
lods
loopne
sub
cltd
testb
incl
dec
add
pause
cmc
in
scas
mov
roll
sub
js
arpl
xchg
jae
roll
and
js
pusha
inc
shr
xor
ljmp
aad
ds
daa
cmp
or
dec
es
loope
cmc
inc
mov
push
sbb
ss
mov
push
lods
insb
aam
fimuls
cmp
jae
rol
push
insb
mov
cmp
adc
fs
mov
mov
jl
jnp
jle
push
std
aas
sub
aam
pop
cld
xor
incl
jg
movsb
lret
inc
mov
ss
xchg
pop
mov
sbb
dec
cmp
jmp
int3
movl
sahf
adc
out
xorb
loopne
push
add
push
xchg
test
dec
test
cli
stos
subl
rorb
push
dec
imul
mov
dec
je
pop
and
loop
pop
adc
sub
mov
jmp
xchg
imul
sub
sub
aad
push
jb
xor
cmp
xor
mov
addb
fnstenv
mov
icebp
xor
and
jle
cli
jmp
pop
and
mov
andl
inc
int
int
mov
clc
call
cmpsb
repnz
lock
mov
push
arpl
dec
pop
clc
jg
aaa
jmp
mov
mov
sbb
nop
or
dec
inc
or
inc
imul
adc
enter
xor
les
dec
and
and
xlat
lcall
icebp
stos
jmp
aaa
jbe
aam
xchg
mov
outsb
fs
push
or
xlat
adc
sub
ljmp
pop
ds
les
sbb
jae
inc
test
std
cs
mov
inc
insb
aaa
clc
pushl
roll
sub
jge
adc
cmc
cmp
mov
pushl
cwtl
sub
nop
shrl
xlat
lcall
js
sti
out
mov
mov
xorb
add
inc
cmp
cmp
jmp
mov
push
xchg
sub
or
insl
inc
or
or
ljmp
or
repz
repz
mov
inc
je
lock
ljmp
shll
das
dec
fs
xorl
jecxz
aas
jne
insl
loopne
fists
dec
and
mov
sub
int
pushl
lea
jnp
das
xchg
jbe
lock
clc
mov
and
jg
mov
mov
jp
in
add
ds
pop
loopne
ljmp
push
ret
sbb
and
mov
out
cld
xchg
dec
idivl
jns
mov
pop
incb
cmp
cmpsb
movsl
imul
adc
dec
test
sbb
jns
sahf
add
adc
fldt
ret
dec
es
shrl
and
call
mov
jp
mov
inc
clc
mov
jg
test
jnp
into
cltd
shll
xchg
pop
lods
lock
call
and
xchg
pop
sbb
mov
movsl
inc
push
jns
outsl
icebp
jmp
inc
sahf
test
btr
rol
out
idivb
ret
inc
ljmp
dec
add
mov
and
pop
cmp
idiv
fucomip
sbbl
xor
sub
sti
mov
popf
push
or
xor
scas
fdivr
decl
js
ret
jmp
outsl
pushf
mov
movsb
jmp
das
push
cmp
int3
lods
xlat
lods
sub
in
cmp
push
jne
add
and
lcall
ret
xor
add
inc
ret
push
cmp
or
sti
sbb
out
daa
sub
fildll
lods
call
jecxz
shll
adc
ret
out
out
ret
xor
pushl
call
cmpl
push
ror
cmp
mov
fisubl
in
movsl
sbb
mov
es
fucomp
add
mov
lea
sarl
je
lcall
add
sbb
push
and
ja
cmp
addr16
cmp
add
xor
icebp
loopne
imul
in
sbb
mov
inc
jns
lods
xchg
sbb
push
mov
or
add
stos
scas
dec
clc
out
gs
test
subb
mov
jne
pop
inc
or
gs
and
pop
fnstenv
psubsb
mulb
push
fcmovbe
sub
dec
jge
call
mov
jmp
adc
add
cmp
ljmp
or
jg
mov
les
push
cld
roll
dec
inc
adc
sub
cmpsl
les
sub
sub
adc
roll
ret
jne
pushl
lcall
ja
sub
push
mov
jp
sysexit
in
push
sbb
cli
fwait
mov
lcall
test
push
pop
xor
push
outsl
outsb
mov
jg
xor
hlt
int
ja
sar
lds
cld
mov
scas
add
dec
js
sub
out
dec
rcl
jg
lcall
das
test
pusha
sbb
jno
or
mov
cmp
andb
filds
or
or
sti
adc
sahf
hlt
mov
pushl
lods
mov
dec
adc
notb
jno
call
or
ljmp
inc
fstpt
dec
dec
imul
lea
cmp
adc
jg
sub
pushf
cltd
jg
cld
bound
lret
in
xor
ret
ljmp
lock
out
xchg
push
fsub
daa
fbld
dec
jo
dec
cmc
jmp
push
ficompl
addl
jno
inc
lret
movsl
fldl2t
jmp
fsubrs
cmp
sub
jo
xor
sbb
enter
jp
mov
cld
pop
mov
mov
mov
lcall
cmpsb
jne
bound
mov
lods
out
inc
mov
cli
sahf
fstpt
fldenv
mov
lret
inc
inc
xor
mov
inc
inc
lcall
jecxz
lock
sub
aad
mov
mov
lret
aas
cs
lret
pop
inc
jae
divb
outsb
leave
jg
add
mov
ss
mov
mov
cwtl
std
push
sbb
clc
mov
dec
call
or
jb
jno
cwtl
xchg
lds
mov
call
push
mov
mov
push
dec
das
psubd
push
push
scas
rcrb
jg
decl
ret
cmpsb
ja
mov
pop
popa
push
je
mov
incl
pop
pop
orb
and
loop
imul
jnp
enter
repnz
lahf
leave
aad
jmp
imul
sbb
mov
ds
call
jne
into
test
andb
mov
pop
flds
mov
ficomps
in
or
push
inc
push
mov
xlat
rorl
or
sub
ja
in
or
pop
jnp
push
into
imul
xchg
insb
mov
mov
out
inc
sub
push
in
not
mov
and
iret
lods
js
fildll
scas
enter
fs
outsl
cmp
cmp
pop
xor
mov
jge
int
sub
dec
div
lea
xorb
jecxz
and
icebp
imul
sub
in
aam
lret
subl
adc
stos
or
pop
test
xor
fucomip
scas
test
mov
adc
dec
out
mov
xor
rcrl
test
mov
sbb
scas
shl
sbb
inc
int3
cltd
lcall
mov
fisttpl
daa
out
bound
aam
stc
fsubrp
or
push
sub
xor
les
or
sar
xchg
in
pop
clc
cwtl
adc
add
ljmp
lock
stos
mov
jns
mov
pop
adc
mov
ficoms
cmpsb
inc
cs
cmp
push
jo
jbe
sub
ljmp
cmc
push
add
fdivrp
divb
fbld
bound
je
mov
lret
cvtdq2ps
insl
fnstsw
jmp
loop
movsb
je
add
sarl
loope
stos
in
jg
jmp
add
ret
repnz
and
inc
jmp
aas
fmull
sub
jmp
jp
sbb
rcrl
fisttpll
add
lock
adc
mov
sar
sbb
mull
and
fistpll
incl
mov
stc
and
insb
orb
mov
and
or
cld
ds
mov
dec
enter
xor
jmp
sbb
movl
xlat
roll
int3
add
jbe
test
fwait
jmp
jg
ret
jno
cmc
dec
sub
mov
jle
mov
cld
pushl
xchg
push
iret
fisttpll
js
iret
add
adc
js
leave
insl
repnz
lcall
scas
mov
mov
xchg
adc
push
cmp
dec
cmp
ja
ffree
add
into
mov
movsb
mov
lock
scas
xchg
dec
mov
pushl
mov
mov
test
test
lods
sbb
mov
pop
mov
adc
mov
cmc
in
popf
shrl
imul
int
adc
dec
cmp
call
fwait
lea
cltd
push
rcrl
xor
or
xor
fstps
aas
push
adc
bound
inc
lcall
jg
stc
adc
cmp
scas
cmpsl
push
fisttpl
pop
shll
mov
decl
insb
sub
dec
stos
adc
loop
add
pop
sar
mov
mov
fimuls
in
insb
xlat
mov
cmp
xor
bound
sbb
xor
call
mov
xor
sbb
and
or
adc
ja
std
jmp
lods
xor
ss
decl
ds
pop
sarb
in
inc
cmp
outsl
xor
fs
cmp
add
mov
fwait
cli
pop
pop
js
and
sub
push
xchg
out
pop
nop
mov
pusha
mov
nop
dec
incl
sbb
sbb
mov
ljmp
add
outsl
cld
inc
sbbl
jg
js
insb
mov
push
push
and
loopne
aaa
cli
movsb
cmp
pushf
insb
inc
mov
popf
stc
test
lcall
xor
push
test
mov
clc
mov
jnp
xchg
ljmp
pushl
jnp
movsl
add
xor
mov
pop
fst
push
lret
std
jno
lret
je
lock
jg
pushl
jg
mull
push
sub
cmp
jmp
ds
std
aaa
or
stc
mov
mov
xchg
pop
cmpsb
and
xor
jno
xchg
ljmp
sub
ljmp
ljmp
shr
mov
popa
call
pushf
pop
stc
rol
sbb
std
push
call
or
and
add
call
test
and
jge
adc
xchg
pushf
mov
ret
call
decl
inc
js
mov
ror
mov
mov
fistl
mov
or
pop
and
mov
pushl
xor
repz
inc
jno
test
xchg
in
stc
ret
std
jmp
paddsw
xor
mov
inc
shl
pop
pop
push
pop
mov
stos
jbe
loope
push
std
fildll
push
ret
xchg
xor
pop
jnp
xchg
dec
lcall
sbb
push
gs
xchg
and
cmp
mov
call
sbb
pop
test
ret
push
xchg
pop
mov
push
sub
into
pop
jns
jg
or
call
decb
pop
stos
stos
negb
jbe
sbb
pop
ljmp
jmp
imul
pusha
or
cs
mov
call
or
icebp
test
enter
xor
xchg
int
bound
mull
and
xor
decl
mov
jmp
pop
in
movsb
loop
aam
cmpsl
mov
mov
mov
dec
inc
pushf
mov
pop
xchg
jg
test
addr16
jno
std
subl
pusha
pop
push
pop
std
pop
cli
sti
out
mov
xchg
jo
not
jo
outsl
push
outsb
xchg
cli
inc
sti
imul
lahf
sub
jge
push
lock
pop
lock
sbb
rcr
inc
call
fisubs
test
ss
jns
push
filds
cli
mov
hlt
mov
or
enter
lret
mov
jg
pop
and
xorb
outsb
jb
arpl
cmc
arpl
jle
call
pushl
jo
push
lcall
mov
jmp
push
jno
cli
gs
call
dec
lods
out
adc
mov
ds
pop
jecxz
pop
lret
inc
sbb
lcall
ljmp
push
in
out
gs
cmp
xlat
fimull
ja
jmp
es
cmp
decl
inc
mov
test
call
cltd
out
jo
pop
xchg
pushl
mov
call
or
or
adc
mulb
ret
pushf
hlt
bound
mov
mov
lret
mov
adc
inc
sahf
dec
in
push
loope
push
ret
pushf
adc
dec
pusha
push
shrb
jle
add
mov
ret
fnsetpm(287
add
add
jg
into
xor
inc
xchg
adc
mov
fisttpl
das
ljmp
push
dec
outsl
cmc
imul
jp
lods
mov
push
sub
jg
push
mov
sbb
leave
inc
cmp
incl
jge
mov
mov
insl
or
xlat
movsl
pushl
clc
jbe
rolb
shr
add
outsl
jecxz
adc
mov
aas
arpl
ljmp
fsubrs
ljmp
add
xchg
fwait
test
jo
ja
call
xchg
in
push
out
xor
sbb
cs
push
clc
lahf
fwait
movsl
decl
cwtl
sahf
mov
or
loop
xchg
mov
popf
pop
test
dec
jo
les
call
mov
mov
test
pushl
xchg
inc
stos
sub
cli
ret
popa
aad
mov
pop
xchg
out
fwait
nop
clc
mov
pop
fs
ljmp
inc
jmp
cli
mov
sti
lcall
iret
fistpl
test
lcall
std
mov
fdivl
dec
dec
test
xor
movsb
rcrl
incl
std
xchg
movsl
mov
xorb
fstps
mov
dec
test
cmp
jg
decl
mov
data16
lahf
imul
push
sbb
and
enterw
cld
mov
xchg
mov
jle
dec
test
adc
sub
add
outsb
mov
xchg
sti
jbe
push
out
or
btc
add
push
mov
cmp
mov
clc
jae
mov
std
xchg
adc
loop
sub
and
rclb
push
decb
incl
jge
add
lret
xchg
inc
jae
popa
fs
sub
jmp
pop
inc
xchg
lods
xor
insb
fsts
dec
subl
push
push
sub
sti
icebp
fldz
inc
and
pop
daa
in
adc
mov
stc
lret
dec
lcall
and
inc
js
sbb
fists
pop
pop
loop
test
jg
pushl
cmp
or
out
shrb
dec
decl
dec
push
addb
push
mov
push
fimull
mov
adcb
jp
fistpl
cvttsd2si
es
stos
repz
pop
std
mov
and
pop
lcall
movsb
mov
or
insb
lcall
adc
cmp
mov
out
push
lret
mov
leave
cmp
or
lcall
lcall
popf
cld
adc
jmp
ja
loopne
insb
push
add
mov
sar
test
cli
lods
popf
xchg
mov
out
fcompl
sub
mov
jmp
cmpsb
das
outsb
jbe
repz
mov
add
inc
lahf
aad
or
and
outsl
call
rcl
push
add
stos
les
and
xchg
aam
andb
mov
daa
adc
or
and
and
cmp
pop
cli
incl
cmpsl
lock
and
pop
loop
out
ljmp
stos
or
mov
inc
cmpsb
addr16
mov
mov
shll
xchg
fdivl
aad
inc
sbbl
add
call
push
pushf
movl
push
jle
jg
incl
andb
mov
or
pop
push
or
mov
cs
aam
je
push
hlt
decl
sub
cmp
push
dec
cwtl
pushf
adc
mov
decl
jns
outsb
lahf
xchg
ljmp
xlat
aad
adc
test
dec
jl
aaa
clc
pushf
fwait
mov
jne
or
decl
cmp
int3
jae
in
cmp
xchg
popa
cwtl
test
outsl
test
fs
das
cmc
incl
push
and
and
cmc
jl
sahf
mov
ljmp
lock
mov
inc
cltd
ja
cli
jge
imul
pop
cmp
call
adc
loopne
sbb
das
jle
lds
pop
idivb
mov
nop
adcb
adc
shll
sbb
insl
mov
or
fistpll
mov
cmp
outsl
fadd
imul
fdivrp
mov
lods
jg
call
movl
push
icebp
scas
out
sbb
lret
call
enter
into
daa
hlt
ljmp
int3
lds
mov
sbb
int3
mov
push
addb
cli
xchg
jae
fstps
std
lods
jno
int
pop
in
mov
pop
sub
in
clc
mov
decl
enter
push
sub
pop
dec
stos
add
imul
pushl
mov
mov
repnz
frstor
out
sti
jo
xchg
cli
mov
push
sub
outsb
cmp
xor
xor
pushl
add
inc
push
inc
cltd
lahf
ret
mov
pusha
out
mov
pop
jno
movsl
sbb
addr16
xchg
jl
mov
insl
mov
push
scas
lret
mov
sbb
loope
cmp
fcompl
pop
jno
or
jnp
xor
popf
andl
adc
movsl
pop
cld
push
xor
jo
jmp
les
decl
aad
sub
sbb
mov
aam
push
mov
pushl
pop
push
sbb
in
xchg
mov
out
mov
sti
scas
push
das
adc
jmp
sbb
cmc
jo
data16
cmp
sub
dec
add
xchg
add
loop
cmpsl
aad
push
icebp
in
dec
jp
pop
lahf
decl
jmp
loope
scas
icebp
pusha
les
xchg
clc
mov
outsb
jmp
dec
ljmp
pushl
xchg
out
mov
jae
xor
pop
pop
cld
call
jns
fsub
stos
or
aad
ss
xchg
mov
and
inc
sbb
out
in
aad
cmp
dec
mov
decl
ret
sub
fldenv
cmpsb
add
mov
pop
imul
cmc
sub
mov
lock
sahf
sbb
aam
mov
or
jle
mov
inc
repnz
push
mov
push
dec
mov
adc
mov
sub
dec
js
call
sub
jle
mov
and
xchg
add
test
mov
lahf
lds
lcall
push
adc
mov
inc
aam
mov
lock
add
lcall
addr16
xchg
stos
jae
adc
inc
movsb
faddl
mov
xor
mov
adc
pop
pop
ja
mov
inc
insl
xlat
imul
sahf
movsb
rolb
aam
das
roll
push
movsl
ss
fisubs
outsb
inc
addl
mov
inc
cmp
inc
push
mov
mov
cmp
mov
lcall
xor
or
xlat
pop
iret
lahf
ret
fisubs
xlat
cmc
xchg
sar
jecxz,pt
dec
fldl
xchg
repnz
cmp
or
xchg
or
mov
mov
fsubrl
rolb
lods
imul
adc
icebp
and
movsb
and
insl
mov
repnz
mov
dec
fidivl
aad
pop
push
inc
sbb
jo
sbb
ljmp
mov
fucomi
out
xor
lock
lret
and
or
sar
call
mov
push
ret
push
mov
and
push
outsl
ss
mov
in
xchg
jmp
insb
pop
cmc
sub
popa
adc
std
xchg
dec
scas
fistpll
mov
lods
pop
and
insb
or
xchg
cmp
inc
pop
rep
incl
in
xchg
pop
inc
outsl
mov
pop
aaa
pslld
mov
aad
mov
mov
xchg
sbbb
mov
in
je
sub
fsubl
xchg
sar
and
test
in
lds
mov
jecxz
.byte
xchg
das
cwtl
fwait
int
lahf
int3
jmp
add
inc
adc
repz
ss
sbb
imull
cmovl
push
adc
fnstcw
add
or
outsb
add
in
pop
inc
mov
int3
add
in
call
xchg
out
mov
movsb
inc
add
pop
sub
jle
ljmp
push
lea
push
sbb
inc
out
pushl
sbb
or
mov
mov
fisttps
mov
cmp
add
xlat
std
iret
sbb
or
push
cmp
adc
cmpl
mov
and
lea
fbstp
aaa
inc
adc
or
adc
jb
aas
adc
xor
test
inc
push
add
inc
mov
enter
inc
push
push
fxch
add
fdivl
bound
jmp
mov
or
out
lret
notb
leave
dec
push
cmp
fdivl
mov
imul
add
xchg
add
aas
je
sbb
lock
mov
je
insb
mov
adc
or
mov
push
or
xchg
adcl
fstps
fistl
cs
int3
xor
cwtl
in
xor
fnstcw
out
xchg
cmp
lock
in
sub
push
mov
mov
push
xchg
cld
sub
gs
lods
pushf
adc
sbb
mov
adc
sbb
pusha
fwait
mov
mov
sbb
push
xor
mov
push
push
push
mov
push
mov
lock
mov
or
lock
movl
shlb
inc
call
pop
sar
jne
aam
mov
add
push
pop
or
addb
movb
mov
pop
sti
dec
loope
add
or
jbe
xorb
sbb
cltd
int3
mov
data16
push
lock
push
mov
adc
hlt
push
jo
lock
sbb
pop
movb
add
push
push
enter
sbb
js
mov
add
ret
xor
lea
push
adc
cmpb
cmp
jne
sbb
aaa
cmp
jnp
adc
arpl
sbb
and
les
mov
push
jle
inc
lcall
mov
pop
neg
push
movsl
les
fsubl
cli
cmc
jge
push
jle
fcompl
or
sbb
gs
pop
add
rolb
js
mov
add
push
fmull
sbb
mov
push
aas
and
insb
adc
cld
lea
add
inc
add
inc
aam
mov
add
add
loopne
in
sub
dec
add
push
mov
fsubl
outsl
fadds
bound
in
xchg
push
and
notl
push
pop
pop
pop
jno
adc
int3
add
xchg
dec
shrb
or
push
lret
xor
mov
push
add
push
sbb
xchg
dec
inc
push
push
cmp
cmp
dec
ds
dec
push
aas
dec
ds
push
push
fwait
pop
and
and
push
pop
and
and
push
pop
and
and
push
pop
and
and
push
or
push
enter
cmp
sbb
and
or
or
push
lock
pop
leave
push
xchg
lcall
test
nop
cmp
push
fs
nop
push
push
fs
push
dec
or
mov
add
fsubr
jg
adc
nop
das
mov
lcall
or
cld
sbb
cli
mov
push
enter
add
and
in
stc
pop
shl
mov
rorb
mov
mov
sub
mov
sar
or
mov
inc
loopne
sub
adc
sbb
jmp
xor
push
xchg
cwtl
popa
loop
jge
gs
adc
xor
outsl
mov
xchg
sub
clc
loop
mov
mov
mov
mov
or
inc
and
fwait
je
adc
add
or
sub
add
mov
and
push
nop
and
lds
mov
cmpsb
lock
or
outsl
imulb
mov
divl
out
fsincos
adc
mov
add
inc
shrb
scas
pop
pop
add
mov
leave
mov
sub
rcll
mov
adc
and
test
xor
or
pop
mov
pop
jmp
addb
test
rorl
xorl
mov
mov
sahf
cld
fs
pop
in
mov
cld
clc
and
add
imul
xchg
xchg
add
repnz
cmp
ss
aaa
lahf
hlt
cmp
jecxz
mov
jno
shll
mov
prefetch
rdtsc
stos
push
fisttps
pop
xchg
jmp
add
sub
and
lret
icebp
mov
xor
roll
test
pop
add
fnsave
xchg
and
hlt
lock
xor
cltd
in
icebp
call
call
es
sahf
fidivrs
idivl
rolb
in
call
xor
dec
call
xor
in
xor
nop
dec
call
and
call
xor
and
fsts
hlt
adc
and
lock
xor
and
hlt
cs
jb
and
lock
fmuls
scas
sub
add
dec
pop
add
inc
jne
xor
adc
xor
data16
movsl
ja
adc
es
dec
and
mov
loopne
or
jne
inc
add
je
cmpsl
fidivl
inc
shll
cmp
fmuls
hlt
loope
cmp
jb
cmp
push
cmp
hlt
mov
fwait
push
inc
js
cmp
xlat
pushf
sbb
pop
push
fisttpll
push
int3
out
xchg
sbb
mov
dec
ficomps
push
and
lock
cld
nop
and
mov
jle
lods
jl
in
roll
jae
fnstcw
sbb
mov
aas
xor
dec
in
test
pop
test
jnp
cmp
jb
pop
inc
insb
lahf
add
imul
or
mov
lds
jmp
push
lods
adc
lea
out
pop
inc
ss
clc
adc
clc
and
mov
inc
inc
in
jae
int
hlt
pop
hlt
mov
clc
shll
cmp
cmp
cmp
dec
or
adc
or
cmp
jae
sbb
insb
push
jnp
add
test
mov
add
jle
jnp
and
pop
fidivl
rol
mov
or
push
mov
adc
sbb
cmp
shl
xchg
sub
add
lds
insb
fnstenv
or
cmp
ss
dec
jae
aas
test
je
jae
or
sub
int3
sbb
cld
outsl
ffree
outsb
fildll
addr16
adc
adc
or
pop
test
lods
add
fs
jne
xchg
mov
data16
data16
shr
fildl
jnp
mov
adc
aas
push
ja
aam
jbe
pop
sub
mov
sti
push
mov
pop
daa
flds
nopl
in
and
mov
and
cmp
cmpsl
sti
and
mov
and
add
mov
loopne
incl
adc
fstps
movsl
loopne
mov
gs
cwtl
push
in
inc
sti
mov
xor
or
call
adc
test
pop
cld
push
or
mov
cld
xor
add
push
sbb
fadds
fdivrp
mov
jno
inc
jne
pop
lret
pop
jmp
push
xor
cs
pop
add
iret
xchg
or
addr16
mov
push
sbb
inc
cmp
cmpl
add
insb
lods
mov
or
push
dec
out
hlt
sbb
arpl
sbb
sbb
jns
inc
cmpsl
outsb
push
loop
call
dec
sbb
cmpsl
or
dec
push
or
dec
loopne
add
or
cmp
cmpsl
fisubrl
in
cmp
dec
fists
xchg
lods
icebp
les
std
hlt
cmp
stos
add
int3
add
sub
jecxz
mov
push
and
dec
and
ljmp
inc
and
push
mov
cmp
jb
neg
add
das
add
mov
inc
dec
jne
mov
shl
or
push
adc
and
jmp
je
rep
cmp
and
pop
ret
add
adc
pop
test
mov
pushl
shlb
icebp
add
jle
rcl
mov
faddp
push
add
mov
je
inc
cld
sub
test
xor
stos
cmp
xor
int
inc
call
rol
std
pop
dec
lcall
or
sar
fldt
fcompl
jge
lods
push
pop
mov
mov
movzbl
mov
mov
call
add
shlb
out
test
push
mov
add
movsl
pushl
sub
jecxz
out
add
fnstcw
push
jmp
fisubl
or
push
not
bound
sub
shl
and
das
std
and
pop
sub
pop
neg
sbb
mov
xorl
ret
pop
leave
ret
mov
sbb
adc
cmp
jbe
clc
jb
or
adc
jno
insl
clc
jg
stc
or
rep
jmp
mov
mov
push
lods
repz
add
pop
test
mov
pop
or
adc
add
loope
lock
mov
add
int
or
pop
int3
sub
lret
dec
lea
and
leave
mov
cmpsb
nop
and
pop
ja
pop
inc
aas
mov
pop
add
shll
inc
cmp
sub
xor
mov
inc
in
call
xor
in
lock
hlt
clc
cli
js
xor
cld
cld
lea
inc
fcomps
clc
or
lock
adc
pop
pop
addr16
popf
pop
insb
ss
stc
adc
or
das
sbb
cld
jg
or
insl
jecxz
ja
sub
iret
leave
and
sub
stc
sub
cmpsb
jmp
xchg
sub
nop
sub
dec
add
ja
insb
insl
add
outsl
add
dec
push
mov
xchg
ss
in
out
add
add
mov
pop
and
sub
js
inc
pop
rcrb
je
les
add
fsub
in
imul
xchg
sbb
cmpsb
imul
imul
or
pop
and
je
cmp
mov
test
pop
addb
mov
mov
aam
mov
or
lods
pop
pop
jmp
lods
test
push
movsb
and
leave
pusha
lea
out
imul
jnp
imul
xchg
sbb
jns
pop
add
push
jns
jmp
std
jmp
insb
or
pusha
pop
mov
or
mov
inc
bound
sub
mov
xor
outsb
imul
imul
xor
divb
test
cmp
daa
dec
data16
add
or
pop
shll
test
sti
push
aaa
or
push
and
or
push
ja
loope
sbb
fdivs
mov
pop
prefetchwt1
cmp
subl
loopne
and
add
iret
shll
pop
jne
cmp
adc
xor
add
cmp
or
shrb
fstpl
sbb
in
xchg
pop
xchg
lret
pop
test
pop
out
push
jae
adc
jb
inc
add
clc
adc
data16
mov
sysexit
je
cs
subb
xor
xor
push
jg
dec
sbb
aas
rorl
adc
cmp
jo
mov
add
imul
push
xor
add
jo
mov
fldt
into
cmp
xor
popa
mov
jo
aad
pop
mov
icebp
fists
test
push
and
call
sbb
inc
ret
popl
pop
cli
push
mov
add
jne
push
or
push
or
push
or
fwait
mov
adc
jmp
cmp
add
inc
sarl
sbb
rclb
xor
xor
jge
jecxz
pushf
or
inc
pop
testl
jne
mov
or
and
or
popa
in
pop
mov
shll
je
push
push
lea
test
fsubrp
outsb
or
inc
or
push
rcrl
jecxz,pt
sbb
into
imul
add
ljmp
or
sbb
mov
fs
jmp
pop
sbb
aas
pop
push
pop
jnp
xor
sub
fiaddl
sbb
lods
jno
and
xlat
mov
test
call
lcall
jmp
cmp
cli
je
cmp
xor
jne
scas
sub
pop
data16
add
shll
shl
data16
adc
pop
mov
pop
jl
sub
add
fcoml
insb
or
iret
mov
lret
call
xor
pop
sarl
pusha
push
or
mov
mov
ss
cmp
dec
js
xor
sti
cmp
outsb
add
mov
mov
popa
rorb
push
pop
not
mov
popf
pushf
testb
leave
movzwl
or
pop
sbb
jne
push
push
and
inc
mov
test
out
xor
das
outsl
xlat
insb
jp
push
push
jns
dec
mov
cmp
or
lret
cmp
push
das
and
aaa
fcoms
pop
and
mov
add
dec
xchg
shlb
cmc
mov
dec
add
xchg
add
mov
imul
inc
pop
mov
sbb
subl
jle
mov
mov
lea
popf
xorl
ss
or
or
jbe
cmc
aad
sbb
fiadds
adc
cmp
into
xor
mov
js
push
mov
dec
xor
mov
outsb
outsl
mov
jne
jne
jle
leave
dec
jne
push
and
jmp
mov
sbb
adc
filds
sti
cmp
lds
fbstp
jb
mov
shll
sbb
cmp
leave
std
pop
add
jmp
jno
sti
fisttpl
cltd
mov
inc
sub
pop
outsl
adc
push
shlb
mov
rcrb
cld
imul
jge
mov
inc
cltd
das
mov
hlt
shl
dec
adc
push
lods
mov
sar
aas
dec
pop
or
iret
leave
sub
adc
add
dec
cmc
mov
and
mov
lea
js
mov
mov
decb
jne
jne
cmp
and
loopne
pop
jae
push
sub
adc
jo
shll
jns
inc
jl
mov
data16
mov
add
pop
clc
or
out
mov
dec
aas
jnp
pop
inc
pop
fisttpll
mov
nop
push
clc
dec
pop
cmp
cmpsb
fistpl
mov
inc
sbb
inc
sbb
lahf
ds
jbe
cli
mov
lods
aad
loope
push
mov
sbb
shlb
push
adc
stc
mov
push
mov
fistl
imul
mov
subb
in
outsl
out
test
test
or
jmp
nop
stc
or
mov
push
dec
sub
xchg
dec
arpl
fnstsw
and
mov
jae
cmpb
push
mov
mov
sbb
call
sub
lea
sbb
out
pop
and
test
or
pop
cli
mov
mov
xor
or
or
mov
xchg
and
lsl
adc
push
add
pop
xor
mov
and
push
or
cmp
andl
and
decb
or
cmpb
loop
sbb
andl
adc
je
xchg
dec
adc
pop
lds
loop
mov
repnz
xchg
lret
enter
test
xchg
adc
push
lea
push
xchg
cmp
pop
jb
decl
sub
ficompl
xor
cmp
cld
push
jp
jmp
mov
pusha
inc
push
leave
sub
lea
pop
push
sub
dec
pop
jbe
sbb
dec
xor
jge
or
shr
adc
add
in
incl
jmp
cmpl
pop
sub
shr
push
out
mov
mov
cmp
jg
jae
mov
cmp
sub
scas
icebp
jg
decb
iret
jne
add
cmp
jne
es
jns
fidivrl
fsubs
adc
push
test
sbb
and
pop
rolb
popf
pop
xor
adc
jmp
es
pushf
mov
push
or
out
fdivr
pusha
jae
sub
mov
test
dec
push
fstpt
sbb
cli
dec
mov
xchg
mov
nop
inc
mov
lret
aaa
mov
jo
push
fldl
in
pop
test
or
mov
jne
xchg
test
mov
cld
decl
xlat
je
xor
lcall
pusha
ja
mov
jne
pushw
fnsave
lcall
leave
jl
shl
inc
jmp
stos
push
stc
inc
or
je
ja
jg
jnp
incb
pop
aas
jle
fsubrl
clc
pop
fistps
and
popa
and
adc
pop
ljmp
and
mov
decb
jne
outsl
xchg
sbb
push
sub
or
xor
sub
xchg
mov
fisubl
sbb
ss
sub
fwait
pushf
mov
jp
clc
add
scas
jp
nop
test
test
movsl
and
je
sub
fs
decb
jge
xchg
lcall
mov
bound
inc
out
or
or
shrb
das
sub
xchg
lods
lods
jo
rclb
mov
jl
cs
or
mov
jne
mov
mov
adc
cld
lahf
mov
and
or
jne,pt
mov
lea
or
push
sub
test
inc
add
add
and
pop
into
mov
pop
mov
push
repz
inc
loope
nop
xchg
xchg
cmp
je
mov
sarb
cmpsb
xchg
or
sahf
xchg
clc
inc
mov
xor
inc
adc
add
and
inc
mov
push
sbb
push
push
cld
in
orl
fistps
lds
bound
in
push
mov
outsb
cmp
jno
inc
or
lds
outsb
xor
dec
loopne
ret
aaa
imul
xor
ljmp
sub
dec
push
sti
test
out
inc
sub
fistpll
pop
cli
mov
cmp
shll
sub
mov
mov
cli
ja
lea
dec
repnz
hlt
lea
cld
lock
inc
insl
push
inc
push
out
mov
add
sub
sub
iret
adc
jbe
mov
orl
adc
dec
or
icebp
movzwl
inc
mov
inc
mov
icebp
lods
out
mov
mov
test
js
mov
sub
push
gs
mov
mov
lcall
jmp
jmp
shr
test
dec
cld
dec
cmp
add
rorb
pop
sbb
fildll
test
or
add
cmp
jg
ss
adc
push
dec
popa
xchg
sbb
pop
pop
pop
and
cmp
push
clc
shll
pop
dec
pop
fs
nop
sbb
pushf
nop
fistpl
or
mov
cmp
mov
fs
fwait
mov
push
add
fwait
stos
popf
xor
dec
jo
jg
mov
xor
or
lea
sub
pop
aas
or
dec
dec
pop
dec
pop
pop
xchg
inc
es
pop
adc
adc
mov
dec
in
mov
scas
and
and
mov
push
cmc
adc
mov
inc
xchg
push
insb
insl
imul
ds
push
pop
insl
std
jge
in
aam
pop
mov
movsb
pop
out
aad
mov
call
imul
sub
popa
scas
int3
sbb
and
dec
cltd
mov
mov
pop
jae
add
ds
adc
jns
jne
and
inc
jbe
jbe
and
inc
jns
jno
jno
sub
jmp
add
add
sbb
jnp
push
in
pop
ret
and
mov
dec
pop
punpcklwd
mov
enter
popa
mov
jae
cmp
pmulhw
leave
inc
popa
jns
lret
aam
push
xor
dec
sbb
int3
mov
test
les
adc
dec
adc
sbb
jle
mov
lahf
jle
cwtl
arpl
cmp
inc
enter
js
outsl
mov
je
inc
mov
mov
mov
and
fwait
in
add
push
cmp
fcompl
dec
lea
inc
or
aam
jbe
pop
jge
or
push
test
sbb
add
test
fstpt
push
or
add
imulb
add
pop
cmp
rep
pcmpgtw
adc
mov
cmp
hlt
pop
pop
cs
xor
lea
icebp
cmpl
adc
sbb
mov
cmp
sbb
push
push
mov
je
dec
cmp
add
jge
mov
jmp
mov
sar
push
clc
out
pop
incl
je
push
push
jl
mov
rorl
lock
cmpb
xor
add
shlb
and
ret
cmp
mov
xchg
push
push
sbb
xchg
enter
xchg
insl
inc
inc
inc
add
lock
cmp
imul
or
pop
mov
pop
clc
outsb
dec
outsl
push
or
cmp
push
shrl
outsl
ja
or
and
xorl
and
fwait
mov
and
add
adc
rcrb
or
cli
pop
mov
dec
cmp
push
adc
rorb
test
jb
push
outsb
fwait
je
inc
je
fs
ds
aam
adc
in
lret
in
cmp
xor
cmp
cmp
pop
scas
add
loope
pop
lock
negl
add
fisubrs
xchg
cmp
cmp
movsl
daa
xchg
jg
mov
fmuls
gs
mov
rolb
xor
std
rcll
xchg
cmp
inc
lods
ficompl
loopne
cwtl
sub
mov
popa
jg
inc
push
ret
jmp
push
xor
jmp
push
mov
stc
jmp
push
jmp
push
jmp
push
jmp
push
lock
push
push
jmp
push
jmp
push
jmp
push
jmp
lock
aaa
lds
push
pop
jmp
cmp
cmpsb
and
and
in
inc
call
shlb
mov
lods
jno
cld
stos
call
sub
or
in
xor
add
je
xor
rcll
es
and
imulb
add
push
add
fistpl
or
sbbb
sub
flds
pushf
xchg
or
movsl
xchg
js
lds
cwtl
sub
mov
mov
lea
mov
sub
lock
push
mov
out
nop
push
xor
in
pop
push
xchg
movsl
xchg
in
jle
pop
push
cwtl
testl
mov
daa
rclb
enter
push
xchg
push
jmp
lods
int3
xor
mov
mov
push
pop
dec
or
or
xchg
pop
arpl
and
sbb
push
fcoms
add
movsb
xchg
push
or
shlb
add
jge
test
je
and
adc
adc
add
sub
add
cmp
andl
or
fmull
adc
mov
mov
fstl
insl
shrb
or
scas
jo
nop
or
iret
adcb
pop
cmp
cmp
cmp
iret
cmp
andb
daa
iret
cmp
mov
arpl
or
jmp
cli
or
adc
jecxz
jmp
fs
fimull
decl
movsb
xor
int
mov
mov
adc
dec
negl
xor
or
cmc
mov
cld
jae
cmp
jne
inc
dec
pop
add
scas
inc
adc
clc
adc
filds
add
ficoml
std
cmpsb
mov
push
cmp
jne
and
cld
loopne
aam
mov
inc
inc
inc
mov
out
jmp
cmpb
or
popf
aad
in
insl
inc
or
ja
xor
add
jmp
push
pop
std
pop
push
fildl
inc
movsl
cmp
jg
ret
xchg
pop
pop
pusha
mov
jmp
dec
mov
and
outsb
dec
mov
mov
xorb
or
pop
in
std
outsl
cmp
cmp
cmp
aas
dec
mov
loope
and
cmp
cmp
cs
inc
sub
sbbb
add
in
add
leave
pop
incl
mov
sbb
push
or
mov
mov
push
ja
loope
in
jo
mov
sbb
sbbb
mov
pop
push
lea
or
aaa
pop
adc
mov
xchg
xchg
test
mov
mov
mov
xor
int3
adc
pop
js
mov
je
je
sbb
notb
test
and
aam
test
ja
inc
movsl
sub
cmpb
inc
mov
inc
cmp
std
repnz
and
test
add
decb
push
mov
mov
inc
inc
or
dec
sub
or
sbb
jnp
sbb
inc
push
add
mov
inc
sbbl
mov
inc
add
mov
and
or
int3
adc
sub
or
cmp
jmp
add
mov
fdiv
jge
pusha
adc
add
pop
dec
rol
enter
lock
lock
rcl
test
pop
jne
inc
push
xchg
sub
xchg
mov
pop
mov
cmpb
jecxz
mov
outsl
insb
fmuls
xor
sbb
sete
mov
dec
je
in
fisttps
inc
mov
push
pop
inc
mov
jne
andb
inc
xchg
jl
aas
je
add
cmp
sbb
push
add
test
pop
sbb
inc
ret
mov
aaa
repz
push
rol
andl
adc
sub
dec
mov
inc
xchg
mov
aaa
loopne
xor
fadd
jne
aad
repz
push
and
loope
mov
cmp
pop
ljmp
pop
cmp
insl
popa
inc
or
daa
ret
testb
or
sbb
push
mov
sub
sub
das
cwtl
sar
aaa
push
mov
inc
add
int
xor
pop
mov
je
xor
je
sbb
push
mov
jae
and
insl
andl
or
ret
int3
mov
fucomi
push
mov
xchg
movsl
test
je
pusha
mov
je
inc
cmp
add
sub
dec
fcmovnb
inc
push
into
stos
sti
jmp
mov
movsl
or
push
cld
lahf
pop
pop
push
mov
cltd
xchg
push
enter
xchg
cmp
sbb
inc
xchg
es
fsub
cmp
xchg
mov
sbb
sti
lods
insb
insl
add
movb
mov
out
out
or
loope
lea
dec
or
pop
xchg
ds
into
mov
or
mov
sbb
jl
jbe
xor
movsb
dec
std
in
add
popl
cmp
mov
shll
pusha
or
ds
and
aad
mov
sahf
dec
jl
dec
mov
sti
das
insb
xchg
fcmovbe
jle
sub
fs
mov
inc
pop
add
iret
or
test
movsl
les
mov
aam
pop
ficoms
add
iret
and
or
inc
inc
jmp
fwait
jl
push
in
cmp
mov
xor
jne
cmp
add
mov
shll
fwait
and
cmc
pop
shrb
pushl
push
data16
out
ficomps
movsl
pop
rolb
orb
or
jne
fdivrs
ljmp
les
jl
mov
ss
loopne
pop
fdivrs
add
sbb
pop
insb
cmp
mov
in
mov
call
imul
and
insl
mov
cmp
pop
and
sbbl
mov
mov
inc
testl
stos
icebp
shl
cmp
int3
sub
sbb
insb
aam
cmp
adc
dec
cltd
in
jge
cli
jne
icebp
jge
push
scas
lret
adc
xor
pop
adc
inc
pop
loopne
or
pop
adc
mov
shll
clc
cmp
sub
push
jg
in
or
clc
or
add
push
jne
push
fildl
push
pusha
lcall
cmp
mov
adcb
or
sbb
lock
mov
mov
push
xor
adc
daa
enter
inc
inc
scas
pop
sub
mov
aas
or
push
xchg
fmull
leave
icebp
clc
jo
cmp
inc
inc
dec
sub
dec
or
inc
test
mov
fiadds
jge
dec
mov
dec
enter
scas
sti
inc
fmuls
pop
lock
in
dec
roll
enter
jb
enter
imul
adcb
mov
cltd
inc
enter
add
add
xchg
orb
push
out
cmp
push
adc
dec
sub
or
nop
js
cwtl
add
dec
dec
inc
push
cmpl
adc
sbb
and
shll
xor
adc
mov
add
inc
orb
mov
leave
xchg
cmp
push
dec
dec
adc
add
dec
push
nop
pop
push
pusha
adc
popa
jno
or
enter
cmpl
xor
shlb
or
test
pcmpeqw
ds
movzwl
and
pop
lahf
shrl
inc
daa
mov
sbb
sbb
sub
pop
ljmp
or
imul
pop
xchg
leave
push
or
xchg
das
cmp
je
xor
jecxz
enter
push
jge
add
aaa
mov
mov
mov
mov
rep
stos
aam
or
jbe
out
mov
dec
out
mov
cli
or
idivb
dec
cmp
ja
sub
push
dec
std
push
or
popa
add
lea
fcoms
je
mov
dec
jo
jle
leave
cli
cmp
ja
outsl
mov
inc
or
cmc
inc
inc
cmpb
aam
sbb
dec
outsl
rcr
or
sbb
jl
push
mov
push
or
jo
movsl
movsl
pop
push
pop
mov
jmp
inc
jns
aad
sbb
les
inc
mov
jb
insb
push
imul
sub
ss
pop
imul
dec
stos
add
or
xor
roll
rolb
inc
loope
add
or
andl
stos
decb
mov
and
ss
push
adc
cld
fdivs
divl
mov
sub
loop
and
and
add
add
add
dec
je
mov
jbe
add
push
and
and
insb
pop
xor
stos
mov
mov
ficomps
mov
mov
add
lcall
push
xor
mov
in
clc
decb
addb
repnz
or
lea
mov
lds
je
stos
ja
sbb
fnstsw
xchg
test
test
call
rep
inc
inc
mov
xor
rcrb
xor
mov
xor
push
imul
mov
popf
mov
and
sbb
xor
cmp
push
fisubl
push
inc
out
lea
ss
std
test
cli
adc
nop
sbbb
sbb
ja
ficomps
add
pop
or
mov
mov
jmp
adc
add
stos
mov
jg
dec
enter
mov
jb
fwait
xchg
xchg
adc
push
and
and
loopne
shll
cmp
sti
dec
and
std
or
pop
or
stos
cmp
cmpsb
inc
push
shrb
inc
addr16
or
or
clc
pop
call
jle
je
inc
fisttpll
mov
pop
mov
rolb
pop
push
cmp
and
pop
pop
out
add
mov
popa
add
xor
clc
das
data16
insl
push
lods
jp
out
shl
inc
mov
dec
mov
stos
adc
divb
jmp
push
xor
arpl
aad
js
sub
pop
jne
adc
push
and
roll
sbb
arpl
sbb
pop
xchg
jns
adc
sbb
adc
mov
sbb
cli
sub
adc
dec
push
fs
push
push
add
jbe
fs
sub
or
cmp
out
push
add
sbb
or
mov
clc
mov
test
std
jo
sbb
in
jne
les
mov
pop
push
push
int
or
pop
and
addr16
jmp
and
in
rolb
mov
and
stos
in
jge
jle
sub
or
jp
ss
dec
pop
mov
mov
les
sbb
sbb
int3
iret
or
loop
lret
lds
inc
and
addr16
jae
aad
mov
inc
and
loopne
fsubs
or
sbb
push
loopne
fistpl
mov
cmp
test
inc
jle
cmp
and
shrb
fimuls
and
loopne
adc
mov
icebp
cmp
je
test
popa
bound
hlt
dec
in
sbb
pusha
insl
inc
fdivrs
divl
mov
jmp
inc
or
js
xchg
insl
fs
aad
push
fidivl
dec
inc
mov
insb
rorb
test
adc
jle
loopne
faddp
dec
dec
push
mov
fbstp
fstp
sub
fs
je
mov
add
insl
mov
push
int3
aad
mov
test
jp
jno
dec
aaa
outsl
mov
mov
dec
inc
or
xchg
in
inc
mov
dec
jne
or
enter
jne
sub
add
mov
daa
inc
sbb
jno
sub
push
push
pop
push
xchg
loopne
sbb
call
pop
into
clc
sbb
push
pop
into
lock
outsb
or
and
or
mov
sbb
add
push
jl
jbe
xor
rclb
lea
xor
in
cmp
sbb
loopne
je
push
cwtl
lea
jl
xorb
add
or
insl
jbe
mov
dec
loopne
pop
sbb
int
jnp
push
clc
xlat
mov
push
or
int3
lds
cmp
pop
push
cmp
or
jb
or
test
pop
ljmp
mov
or
sub
push
xchg
push
cmp
xchg
push
xchg
xchg
xchg
js
addb
nop
xchg
xchg
xchg
xchg
xchg
cwtl
pushf
mov
xchg
test
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
fcomp
loopne
adc
call
mov
lea
outsb
mov
scas
decl
cmp
sbb
jg
mov
je
sub
cmp
sbb
and
rcll
testb
loopne
cmp
je
sbb
sbb
sub
mov
decl
push
mov
iret
daa
pop
fcoms
lds
imul
or
shlb
sub
adc
cmp
shlb
pusha
add
or
roll
or
rcrl
popl
sub
dec
inc
mov
push
cld
dec
cmpsb
pop
jge
cmp
sarl
cli
mov
or
jmp
mov
out
movsl
push
and
hlt
jmp
movzbl
testb
je
andb
std
inc
rorb
mov
or
or
lds
loopne
cmp
adcl
cmp
sub
pop
scas
jne
aad
mov
push
inc
fmuls
inc
lods
add
or
js
loopne
add
lea
stc
movsl
cmpsb
pop
mov
ja
jnp
jmp
jmp
mov
decl
sar
shrl
pop
mov
pop
jo
incb
in
pop
mov
cli
aam
adc
jae
fistl
adc
jecxz
inc
or
inc
or
add
mov
jg
decl
fsubl
jg
or
add
outsb
je
insl
and
jb
jb
add
or
sti
push
dec
dec
push
push
adc
add
dec
inc
mov
lods
std
add
inc
adc
push
xor
cmp
sub
outsl
dec
popa
bound
and
imul
fcmove
aaa
sti
push
daa
aaa
outsb
outsl
je
in
filds
jo
arpl
data16
outsl
ja
cmp
xchg
fldl
popa
push
outsl
outsb
aaa
ss
or
dec
jae
fs
pop
imul
jne
xor
push
enter
insb
sub
pop
xlat
pop
fldt
gs
das
pop
push
fsub
fcoml
jbe
pop
xor
imull
gs
push
insb
fcmovnu
xor
pcmpgtb
arpl
cmp
outsb
lods
dec
inc
and
gs
and
insl
jne
mov
je
mov
arpl
mov
ret
fs
outsb
lods
mov
and
add
popa
imul
addr16
insl
and
ss
mov
cmp
inc
lahf
imul
sub
sub
adc
addr16
jae
mov
xor
shrw
subb
mov
fs
dec
movq
lods
sub
push
imul
icebp
sub
and
dec
imul
mov
sbb
sub
adc
popa
xchg
lods
jno
ret
add
loopne
sub
insb
ja
sbb
pop
mov
popa
xor
jbe
push
scas
jne
outsl
insl
cmp
fs
jae
clc
ret
addr16
outsl
js
add
and
sub
cmpsl
gs
aas
dec
pop
inc
addl
push
icebp
in
add
pop
xchg
and
cmpl
or
nop
jae
push
jg
daa
or
push
inc
push
dec
inc
pop
decl
jb
data16
aas
pop
add
push
gs
imul
mov
dec
sarl
in
outsl
fs
dec
popa
outsb
fs
gs
inc
fs
jo
jnp
mov
sub
insl
pop
push
dec
enter
jb
gs
inc
inc
aas
data16
push
popa
jb
xor
add
inc
insb
mov
pusha
push
mov
dec
gs
outsl
ljmp
mov
adc
inc
outsl
mov
int
mov
push
outsb
pop
add
pop
aaa
jae
movsb
daa
push
popf
aad
push
jnp
sti
gs
bound
mov
arpl
pop
xor
sahf
in
mov
jb
insl
jo
or
inc
das
push
je
xor
xchg
pop
jbe
orb
nop
ljmp
jne
gs
mov
repz
popa
fs
jl
inc
imul
testl
in
sub
jae
test
jo
sub
ljmp
push
sub
lods
imul
mov
call
xor
mov
mov
push
cmp
lds
pop
xor
xchg
push
add
std
pop
pop
mov
mov
fcompl
mov
ds
lea
pop
mov
call
dec
movaps
mov
mov
and
adc
dec
loope
and
call
movsl
roll
add
int3
outsb
lods
xor
xchg
jb
pmulhuw
add
adc
mov
jae
jmp
add
or
inc
push
xchg
lea
fs
push
mov
push
xchg
xchg
xchg
in
pop
inc
jp
pop
mov
inc
mov
mov
sarl
je
or
and
lcall
enter
lcall
int
imul
dec
shll
cmpb
shll
cld
dec
sub
dec
cmp
add
jns
mov
out
cmpb
mov
movsl
outsl
mov
loopne
inc
jle
cld
das
test
mov
and
inc
or
das
inc
mov
test
fistps
mov
in
call
decb
mov
ficompl
pop
pop
fisubrl
xor
xchg
rcr
fsubp
stc
cmp
jle
pop
lahf
xchg
sub
inc
dec
add
and
and
adc
adc
add
and
push
mov
popa
cmp
pop
add
xchg
and
and
decl
add
add
add
dec
add
inc
leave
incl
push
jno
inc
dec
inc
jno
outsl
xor
call
adc
daa
mov
lret
in
cltd
bound
jle
dec
ljmp
jnp
cmp
lods
out
push
pop
in
std
js
insl
pushf
mov
or
std
mov
and
push
outsl
into
js
xchg
push
iret
pop
push
aas
dec
inc
sbb
adc
or
in
decl
sub
test
aaa
test
sbb
scas
adc
adc
cld
flds
movsb
enter
subb
jns
mov
push
jb
sub
pop
jne
fsubrp
leave
lahf
mov
movsb
sbb
push
add
and
mov
ljmp
icebp
pop
mov
repz
dec
gs
and
sbb
cmp
push
inc
or
aam
call
in
cli
shl
inc
push
test
stc
shrl
iret
jnp
aaa
pop
stc
or
jle
jno
xchg
pop
xchg
jmp
orb
hlt
cwtl
jno
xchg
mov
fwait
push
sub
je
cmp
andl
adc
dec
hlt
push
mov
push
mov
mov
setnp
je
call
iret
int3
incl
xchg
rcll
sahf
mov
sti
add
cmp
jmp
xor
sub
cmpsl
out
out
sbb
decb
popf
or
lds
xchg
rclb
jbe
pmulhuw
jl
idiv
incl
xchg
xchg
pop
out
xchg
push
xor
subl
jge
add
fnsave
cmpb
mov
in
push
xchg
lahf
cmp
fistpll
out
mov
mov
push
ljmp
in
mov
dec
pusha
lcall
ljmp
lret
cltd
fcmovbe
mov
jmp
push
dec
ljmp
sub
mov
xor
lds
lcall
mov
xor
add
out
mov
dec
push
and
lahf
icebp
adc
jg
pushl
pop
scas
lock
mov
add
pop
inc
pop
cmp
pop
inc
aam
lods
cmp
incl
sarl
ljmp
popf
das
jp
sub
sbb
sub
adc
mov
clc
ljmp
add
and
ret
xchg
call
call
mov
xor
ret
imul
add
mov
mov
xchg
fnstenv
decl
test
imul
jbe
addr16
cmc
in
nop
xchg
lcall
mov
mov
xor
adc
xchg
ss
pop
dec
mov
cmp
bswap
pushl
hlt
adc
or
mov
imul
push
icebp
xor
xor
jg
ljmp
pop
ja
mov
sti
sbb
mov
push
lret
in
cmp
push
pop
xchg
mov
lcall
cwtl
sbb
jb
push
flds
arpl
decl
mov
ss
pop
jp
cmp
xchg
nop
push
push
fs
pop
fucom
mov
or
shrl
cmpsb
std
jnp
rcrl
ds
mov
and
out
adc
aaa
rcr
jp
jo
mov
lock
cmc
mov
xchg
dec
addr16
in
ds
jmp
inc
leave
das
mov
inc
push
inc
lcall
adc
push
mov
lds
in
mov
enter
and
loopne
daa
imulb
mov
fld
aas
push
or
inc
aaa
sub
std
or
pop
sti
repz
aaa
lret
sti
cld
push
ss
xor
jg
adc
mov
mov
test
dec
pop
lret
scas
push
call
xchg
decl
lds
jae
ljmp
xlat
push
pop
and
mov
jmp
cltd
ret
lcall
push
test
in
jle
and
and
or
faddp
push
ds
out
stc
pop
call
shll
test
xchg
add
fidivrl
das
push
popa
lea
pop
jae
ljmp
ja
enter
sub
or
push
jne
imull
xchg
cmp
lcall
pop
xchg
sub
enter
icebp
in
cs
xchg
popf
in
popa
adc
addr16
ljmp
jg
pushf
lods
test
dec
xor
test
mov
dec
dec
test
pushl
dec
not
fsubs
ljmp
pop
mov
les
adc
push
dec
or
jmp
hlt
dec
in
sub
cli
lcall
mull
pop
push
mov
mov
pushl
bswap
cmp
xchg
push
lock
xor
mov
lods
scas
add
lcall
jns
pusha
scas
out
lods
add
sub
push
xchg
movsl
add
fidivrs
pop
clc
ljmp
ljmp
jbe
scas
dec
pop
jp
pcmpeqd
insb
mov
adc
sti
mov
mov
loope
pushl
jg
pushf
xorl
jae
mov
jge
xlat
movsb
mov
jg
and
clc
cwtl
loop
and
cmc
lods
out
xchg
incl
dec
mov
cmpsl
bound
lods
stos
popa
imul
out
pop
aas
test
jb
inc
out
inc
ds
ljmp
sub
cmp
inc
lahf
call
mov
leave
daa
mov
stos
cmp
lods
imul
aad
mov
out
dec
sub
jb
imul
adcl
subb
adc
stc
or
pop
clc
jmp
scas
in
jb
jne
pop
jl
in
xchg
add
or
movsl
and
popa
jb
incl
sysexit
pop
sbb
outsb
mov
rclb
mov
mov
dec
call
sub
inc
ud2
mov
xchg
daa
js
xlat
adc
jmp
mov
xor
and
ficomps
sbb
adc
xor
ja
jns
xchg
mov
test
mov
xor
decl
and
mov
mov
int3
push
adc
push
clc
xchg
add
je
push
pushl
mov
add
or
jg
mov
pushl
sub
pop
adc
imul
test
pop
or
xchg
stos
dec
or
lock
incl
stc
mov
sbb
and
mov
pop
not
outsl
imul
xchg
filds
cmp
decl
pop
pop
sbb
pop
cmc
mov
jge
bound
stos
pusha
push
cmc
frstor
xchg
incb
push
repz
fnstsw
incl
lds
xchg
stos
jmp
jge
aam
bound
xor
incl
sbb
lods
fidivrs
ljmp
adc
mov
enter
in
lcall
les
ret
les
andb
imul
cmpsb
lahf
stos
mov
sub
jge
das
cld
dec
test
mov
cmp
mov
push
adcb
pusha
scas
jecxz
mov
call
pop
adc
loopne
mov
dec
in
shrb
fsubrs
in
stc
mov
adc
pushl
and
lea
fdecstp
mov
and
enter
pop
shrb
xchg
imul
cmp
add
test
insl
push
xchg
enter
mov
orl
arpl
pusha
jge
cli
adc
andl
adc
loopne
xor
sar
call
push
cwtl
cli
fisubl
adc
ds
pop
push
arpl
add
das
mov
mov
fildll
sbb
inc
ljmp
pop
decl
cmp
fldl
sub
mov
pop
adc
lret
mov
mov
dec
cld
and
fs
jmp
jb
add
das
into
mov
mov
add
mov
incl
mov
enter
cmpsb
push
add
and
inc
test
leave
push
fcmovb
push
ds
cmpb
incl
or
ljmp
adc
out
test
mov
hlt
jg
and
mov
xor
xchg
xor
sbb
pop
mov
out
scas
sbb
sti
lods
pop
sar
stc
push
test
add
pop
lret
js
cmp
jb
xchg
pop
mov
lcall
mov
xor
push
ss
push
xchg
mov
push
cli
push
inc
aam
lahf
das
inc
arpl
cli
rol
test
jmp
fs
add
jnp
fnstsw
je
ror
jl
rcrb
cmp
push
adc
pop
jp
loope
int
add
push
push
mov
outsl
int
cmp
mov
ljmp
gs
or
sbb
out
bound
pushf
sti
adc
inc
es
in
jb
dec
or
ljmp
and
ss
add
stos
pop
add
cld
repz
pusha
in
test
mov
call
lods
cmpsl
inc
mov
or
movsb
mov
push
mov
outsl
push
in
inc
inc
fimuls
lret
sahf
sbb
push
lea
sbb
stc
cmp
push
popf
gs
or
cmp
imul
mov
je
dec
jg
sahf
jl
dec
mov
insl
pusha
call
sub
cmpb
sub
mov
xchg
lods
mov
cmp
popa
fs
stos
inc
in
push
lret
cwtl
jg
mov
test
das
xchg
clc
push
loop
test
imul
pop
sti
out
cmp
xor
aaa
pop
test
jp
or
out
lds
and
mov
pop
cmp
or
push
outsb
inc
test
xchg
mov
pop
mov
add
dec
add
popf
fcmovb
jae
out
in
psraw
xchg
cmc
inc
insl
jb
rorb
out
jl
lcall
adc
mov
sbb
cmp
sti
jp
repnz
adc
push
jbe
push
push
decl
push
loop
icebp
or
popa
cmp
xchg
mov
push
sbb
cmpsb
sar
call
mov
mov
sarb
inc
cmp
mov
xlat
imul
ret
jmp
cmp
loopne
out
and
dec
or
andb
leave
and
mov
lock
mov
aaa
sbb
lods
movsl
decl
sbb
pushl
jmp
mov
sbb
adc
loopne
ljmp
push
paddw
push
xchg
push
out
loop
mov
test
lods
outsb
inc
cmp
pop
data16
or
js
xchg
test
jecxz
lcall
test
repnz
stos
gs
sbb
dec
lods
sbb
les
rorb
cwtl
test
jle
pop
cwtl
adc
cmp
or
outsb
rcr
fwait
repz
std
fstl
or
inc
or
or
ljmp
add
xchg
andb
cmp
jne
jae
xor
lock
push
lret
jl
jle
in
sbb
fdivl
mov
in
fildll
call
pushf
lret
aaa
addr16
bnd
xor
sub
negl
sbb
cmp
ljmp
or
aas
imulb
mov
call
mov
xlat
jmp
push
ret
movsb
jecxz
loop
pop
push
xchg
je
sbb
aad
test
mov
dec
cltd
jg
out
sub
pop
cmp
push
sbb
mov
les
test
call
inc
jbe
jmp
out
mov
jb
sub
jo
aam
cld
jmp
pop
sarb
xchg
push
pop
inc
js
fsubrs
mov
das
cld
pop
xorb
sbb
fsts
das
cld
push
iret
mov
xor
or
mov
and
jbe
idivb
jmp
push
xorl
cmpsl
aad
push
loopne
mov
mov
cwtl
jb
fisttpl
mov
cmp
lcall
ds
decl
pushl
mov
fsubs
mov
ja
mov
stc
inc
movsl
push
lods
je
mov
add
dec
mov
lcall
push
dec
movsl
pusha
js
push
push
cmc
cld
loopne
sbb
insb
test
ljmp
lock
outsl
repnz
xor
flds
xor
hlt
decl
pop
orb
bound
fs
add
fadd
hlt
movsl
ljmp
mov
push
jae
sub
fmul
push
icebp
sub
notb
mov
shll
mov
jp
mov
and
mov
jp
repz
xor
inc
fcompl
or
ja
inc
mov
add
pop
push
mov
popf
js
mov
fs
lods
xor
add
sbb
aas
xchg
push
adcb
rcll
clc
jg
jmp
data16
arpl
xchg
loop
push
xchg
out
adc
fadd
addr16
cwtl
nop
cmp
loopne
pop
je
out
rcrl
ficompl
jle
and
pop
loop
inc
add
push
sahf
aam
xchg
es
scas
and
jecxz
mov
in
inc
mov
jmp
pop
int
fcoml
push
stos
out
add
add
xor
mov
std
incl
fs
pushf
mov
lods
xchg
push
das
mov
shll
inc
or
arpl
scas
adc
xor
push
cld
hlt
mov
cwtl
outsb
push
ss
out
mov
pushl
arpl
insl
dec
imul
pop
repz
cmpsl
ja
insb
sub
in
mov
in
push
lcall
jo
lods
shr
push
cmp
inc
repnz
call
jmp
mov
std
jp
insl
jbe
ficoml
iret
xchg
xchg
mov
adcb
repz
xor
xor
push
fs
mov
jae
push
aam
sub
int
add
subl
xchg
inc
xor
fstpt
push
je
pop
ret
jg
and
adc
inc
test
dec
mov
cld
cmp
pop
mov
cmpsl
adc
enter
jmp
scas
cmp
lret
jecxz
jns
dec
adc
push
xchg
mov
lds
das
mov
dec
ja
mov
lahf
insl
xchg
mov
mov
decl
add
rolb
cmp
xchg
call
cmp
jle
dec
jb
push
inc
fidivrs
xor
pop
cli
in
aad
jge
mov
stos
xchg
movsl
rcr
pop
jne
xor
cmp
xor
cmp
mov
inc
sbb
fcomps
adc
in
or
mov
lea
and
cli
add
std
dec
aaa
hlt
in
xor
inc
jno
pop
lcall
movsw
clc
outsl
test
pushl
loope
cmpsb
xor
mov
cmp
jmp
fdivrs
mov
pop
cltd
mov
cmp
stos
imul
xorb
add
mov
push
mov
pop
adc
call
pop
or
outsb
movsl
cmc
mov
jmp
mov
dec
fmuls
mov
or
jmp
insl
pop
mov
lret
push
sub
lcall
in
adc
sbb
clc
cmpsl
imul
in
out
pop
push
test
stos
cltd
cmp
push
sub
pushl
aas
outsb
pop
xor
cli
ret
and
pop
enter
and
daa
pop
pushl
lcall
sbb
hlt
sub
dec
ret
or
aad
jle
mov
and
das
cmc
sti
dec
inc
lods
dec
push
leave
xor
push
fistpl
xchg
mov
arpl
mov
inc
cmp
je
aad
ss
scas
push
push
add
jge
inc
decl
cmp
cltd
dec
or
cmp
jo
mov
push
add
test
std
incl
in
in
or
mov
jne
mov
jne
cld
pop
fwait
pusha
inc
lret
pop
cmp
lea
decl
mov
lret
frstor
push
mov
jl
xor
les
aaa
cli
ljmp
js
clc
pop
sti
pop
fs
sbbl
fistps
push
adc
mov
jecxz
inc
xchg
das
fcomps
insb
adc
xchg
push
adc
adc
out
rcrl
mov
decl
and
xchg
int
fstps
jmp
dec
pop
push
stos
nop
cs
fucomip
into
xor
pop
or
lea
test
xchg
add
movsl
pushl
mov
ljmp
and
fs
push
lcall
push
mov
outsb
pop
cld
in
es
outsl
outsl
cmc
inc
sbb
inc
aam
or
pop
mov
dec
test
outsb
jnp
inc
pop
fdivrl
sbb
outsb
in
int
push
pop
push
mov
data16
mov
pop
push
adc
aaa
roll
pop
rcr
andl
mov
mov
jg
test
je
fidivrs
push
inc
xor
or
ljmp
hlt
fsubr
dec
sti
mov
fcom
loope
aam
mov
inc
pop
fadd
xor
push
add
shlb
xlat
test
inc
mov
sbb
lahf
pop
add
dec
mov
jg
xor
je
mov
mov
shll
dec
jmp
jns
fdivrp
push
in
pusha
xchg
jmp
jbe
mov
xchg
add
mov
rcl
jmp
call
jno
ret
xchg
mov
or
aas
lcall
scas
lahf
fs
and
xchg
in
jle
xlat
mov
das
out
xchg
lea
out
pop
sub
lret
add
ljmp
data16
jle
mov
in
add
out
inc
add
push
jno
stos
xor
add
push
pop
outsl
mov
fldl
mov
les
dec
mov
mov
iret
fdivrl
sbb
or
aas
mov
aam
scas
idivl
dec
jo
cli
pusha
sar
dec
sbb
mov
push
adc
xchg
pop
sarb
mov
inc
add
aas
sbb
dec
lret
mov
pop
fwait
cmp
mov
push
imul
adc
mov
psraw
dec
daa
mov
push
or
fwait
add
dec
pop
ja
jae
ljmp
add
dec
notl
fmuls
dec
cld
mov
xchg
rorl
decl
daa
dec
cmpsl
dec
sbb
or
out
jecxz
jmp
ret
cmpsb
push
in
shlb
push
jmp
xchg
dec
xchg
ds
in
push
or
pop
push
mov
mov
push
in
mov
out
hlt
push
jb
test
xchg
lret
fildll
sbb
mov
push
je
and
xchg
in
mov
push
fimull
mov
std
ljmp
jne
hlt
sti
dec
lret
mov
xchg
adc
add
mov
jle
push
mov
lock
pop
or
jp
lods
and
jg
jmp
insl
call
ja
bound
push
aad
adcb
sar
call
mov
es
mov
sub
test
dec
mov
inc
or
lcall
mov
fisttpl
int3
ss
cmpsb
pop
lretw
das
jno
pop
cli
push
cs
aam
inc
imull
int3
rorb
fstps
cmpl
in
sub
divl
iret
sub
push
std
pop
dec
cmp
jg
adc
das
ljmp
fs
nop
mov
notl
push
jo
and
sub
xlat
or
fwait
addl
test
dec
in
push
call
xlat
fbstp
rcr
mov
stc
loopne
lds
decl
jnp
xchg
push
addr16
aas
or
xchg
cmc
jmp
jae
ss
add
and
ljmp
push
leave
stc
dec
lods
in
fs
decl
sub
dec
adc
cld
mov
aam
in
xchg
add
push
add
dec
pop
jns
fdivs
movsl
mov
jg
adc
fistps
mov
movsl
push
rclb
cmp
mov
cmp
incl
sub
xor
push
fiaddl
push
mov
movsb
jmp
mov
or
fwait
lcall
mov
cmpsl
mov
dec
ljmp
out
es
push
call
and
outsb
call
inc
mov
test
inc
sub
and
ja
mov
inc
aas
inc
fisubrs
stos
jmp
cmp
jae
inc
call
push
jmp
jg
pushl
sbbb
mov
sbb
adc
out
out
sbb
adc
mov
bound
clc
movsb
dec
rol
in
xchg
out
xchg
int3
addr16
mov
outsl
xor
push
inc
aas
imul
subb
movsl
stos
jmp
add
pop
dec
in
test
loopne
pop
fcmovu
xchg
jmp
sbb
jo
jns
inc
pushl
dec
call
mov
addb
ljmp
lret
add
daa
jb
inc
jns
aad
mov
les
jo
jne
or
gs
lcall
or
cs
mov
cmpsl
sbb
test
xor
xchg
inc
outsl
mov
or
cmp
addr16
sarl
call
fsubrl
inc
mov
cmp
rolb
scas
adc
mov
movsl
and
pop
loop
mov
mov
dec
daa
mov
mov
push
xchg
or
out
cmp
mov
sbb
adc
cld
or
sbb
loopne
ljmp
sbb
dec
push
adc
arpl
mov
jg
sbb
decl
adc
pop
inc
orb
lret
repnz
mov
dec
xchg
sar
pushl
fcompl
sbb
shrb
stos
xchg
repnz
ljmp
push
xor
xor
cwtl
xchg
or
pop
mov
fs
xchg
jns
dec
jbe
mov
pop
mov
jg
fs
js
pusha
push
adc
mov
push
inc
or
sar
mov
lcall
or
jns
cmp
mov
or
push
cmpsb
rorl
pop
aas
jne
call
imul
inc
icebp
stos
pop
hlt
pop
fsubs
idivb
and
mov
stos
fisttps
mov
movsb
cmp
fbstp
cmpsl
iret
and
incl
orl
mov
cpuid
add
and
stc
jnp
sub
lods
pop
loop
rolb
enter
mov
test
pop
push
sti
adc
aad
cltd
je
hlt
jo
pop
in
or
jg
fdivrs
out
mov
sub
subl
jns
mov
mov
inc
add
mov
popf
pop
movsl
xchg
pop
repz
dec
cli
xor
insb
xchg
mov
adc
push
aas
cmpsb
cmovo
sub
pop
fisttpll
jns
lea
mov
sete
popa
push
push
mov
adc
les
std
cmp
pushl
stos
and
out
bound
mov
xlat
or
xchg
or
cmpsb
lock
call
outsl
push
xlat
ret
test
xchg
hlt
sahf
icebp
push
sub
repz
out
sub
pushl
mov
hlt
mov
sbb
das
lods
cmp
add
imul
sbbl
lahf
push
leave
insl
sub
into
mov
xchg
aad
repz
lock
call
jns
pop
cmpsl
and
icebp
xchg
mov
xchg
add
fldt
mov
int
arpl
jmp
das
adc
or
adc
cli
das
pop
and
lcall
jg
mov
data16
push
std
push
lcall
stc
xor
push
int3
aam
cmpsb
add
pop
jbe
push
call
ffree
popa
add
subl
jle
fsts
in
movsb
pop
jmp
pop
inc
loopne
pop
or
dec
arpl
inc
inc
cmp
arpl
les
adc
in
lock
ljmp
lock
mov
pop
and
hlt
subl
add
ljmp
ljmp
aas
xor
pop
sbb
loopne
nop
shufps
lds
decl
cmp
pop
or
xlat
push
notb
or
sbb
cmpsl
shl
pop
mov
cmpl
cs
scas
inc
sub
into
xchg
jg
out
add
icebp
push
or
pop
call
sbb
out
dec
push
int3
popa
cmpsl
lcall
sub
push
pop
mov
dec
adc
mov
subl
loope
lods
pushl
jne
ds
mov
sbb
ss
push
subl
lock
das
inc
jmp
and
callw
jg
jbe
mov
mov
dec
dec
push
out
cld
sub
in
data16
adc
nop
int
out
pop
fucomp
in
or
sbb
mov
jb
xor
push
push
js
lods
xchg
inc
outsb
cmp
jl
pop
inc
jns
jae
lock
cmp
int3
aaa
ja
incl
inc
lret
cltd
xor
test
arpl
aad
push
jae
sbb
mov
ret
add
jmp
sbb
jnp
pop
fsts
pop
shlb
and
hlt
fdivr
mov
das
in
jbe
jg
fdiv
push
lcall
pop
push
lcall
pop
push
mov
jl
lretw
and
addr16
cmpb
stos
or
movsb
in
fisubl
mov
daa
or
xor
mov
lods
and
dec
sbb
mov
cmp
ficoml
call
xor
and
dec
mov
dec
cmp
ror
popa
add
or
scas
lret
popa
xor
call
test
testb
push
lcall
aas
push
out
pop
cmp
aaa
insb
adc
ds
mov
dec
in
insl
mov
mov
repnz
sub
push
addr16
mov
xor
xchg
mov
dec
mov
ss
jmp
push
neg
pop
andb
rcll
cmp
lea
dec
enter
call
pop
std
inc
push
repz
push
fmul
lea
cmpsl
ret
cmp
dec
add
cmc
shr
ljmp
dec
jns
fldenv
out
jg
xor
movsb
inc
mov
push
ljmp
aas
xchg
inc
pushf
in
data16
and
xor
sbb
cmp
mov
dec
imul
outsl
cld
mov
pop
js
and
test
cmpsl
jb
jmp
jg
lcall
cmp
push
fxch
in
xchg
ja
imul
mov
mov
fs
movsl
dec
cld
ds
adc
push
push
push
aad
mov
aas
cwtl
punpcklwd
xor
mov
pop
lods
sti
and
sbb
sahf
rorl
adc
stc
mov
repz
dec
cld
and
ds
mov
cmp
lcall
jmp
add
ror
int
in
mov
pop
and
sbb
inc
leave
dec
adc
adc
mov
mov
loop
dec
pop
loopne
xlat
fistpl
nop
out
mov
lock
mov
mov
test
sub
repnz
das
enter
aam
das
test
loopne
rol
cs
push
jmp
xor
push
mov
push
imul
dec
movsb
in
add
inc
stc
pop
ljmp
pop
mov
sbb
arpl
enter
flds
into
ljmp
and
fdivrs
sub
fcmovbe
mov
push
lds
push
cmp
adcb
loope
pop
into
int3
js
popf
ljmp
lahf
ret
cmp
clc
lds
int
jo
mov
inc
mov
adc
xor
std
adc
push
in
or
jb
hlt
out
mov
sub
jl
aas
sub
loop
jmp
dec
mov
lcall
lea
testl
mov
fildll
leave
scas
mov
dec
lock
jmp
cltd
fidivs
push
js
mov
cli
test
call
outsb
adc
inc
fwait
xor
pop
jne
shrl
jecxz
test
leave
push
clc
lret
imul
pusha
loope
sbb
data16
repz
or
repnz
xchg
and
fnsave
ja
loopne
add
xchg
mov
leave
jp
jb
sbb
dec
call
std
push
call
dec
notl
cmp
adc
mov
inc
insb
mov
int3
sub
cs
sub
loopne
dec
mov
cli
push
cmpsl
mov
mov
mov
jg
call
mov
jbe
negl
gs
stos
xor
arpl
sahf
in
fadd
pop
dec
inc
sub
int3
icebp
jp
pop
call
xchg
fdivr
mov
rcll
and
pop
pop
add
cmp
pushl
xchg
xor
lahf
dec
les
add
fstps
ss
aad
std
lahf
out
add
ljmp
fists
je
inc
fs
jle
sub
lods
aas
jnp
jo
inc
sahf
mov
push
lock
mov
fmuls
cmp
jbe
mov
adc
mov
decl
pusha
out
mov
movsl
xchg
add
stc
stc
push
cli
jnp
and
mov
in
xor
adc
xor
adc
add
in
push
xor
in
loopne
je
out
stos
pushl
icebp
fcompl
fisttpl
mov
adc
jmp
call
push
pop
and
int3
xor
roll
call
or
sub
aad
in
fldt
lds
cmp
pop
xchg
sbb
jg
incl
fimull
loop
jb
aam
popa
sahf
mov
xor
loopne
cmp
into
loop
out
jmp
dec
push
xlat
cmp
cmc
cld
je
jg
pop
add
aam
jb
mov
pop
cmpb
xchg
mov
pop
aad
cmpb
inc
insb
cwtl
aam
dec
fidivrl
js
pop
push
push
rep
nop
lcall
jne
sub
aam
xchg
cli
out
mov
jae
fsubrl
mov
call
loop
xchg
out
fiaddl
lds
rclb
or
scas
jbe
and
mov
into
pop
stos
hlt
std
in
jae
add
insl
enter
inc
inc
lret
jp
out
popf
dec
xor
and
jmp
in
adc
inc
sbb
cltd
mov
jg
call
inc
cwtl
cmpsl
test
adc
push
adc
mov
fadd
dec
pushl
lret
xchg
lcall
cli
inc
loopne
sbb
rcll
push
jp
mov
mov
aaa
movsl
push
sub
push
jmp
push
ljmp
cmp
clc
or
push
xor
lret
in
fimuls
add
jno
pop
loop
sub
sbb
mov
jmp
push
xor
pusha
test
popa
lods
jbe
incl
sbbl
mov
test
and
pop
ds
aaa
cmp
loopne
push
call
pop
cmp
add
ljmp
cmp
cltd
loopne
ret
hlt
and
sbb
jb
fwait
test
js
incl
decl
je
movsb
inc
hlt
je
push
data16
inc
jg
arpl
lahf
je
inc
fdivrl
cmp
mov
les
cli
mov
mov
add
push
sub
das
mov
das
je
decl
nop
stos
test
test
fisubrl
jmp
lea
jb
adc
xchg
outsl
std
jg
cld
jecxz
aaa
fwait
jne
ficoml
daa
arpl
jg
jmp
xor
inc
pusha
pop
dec
pop
clc
push
mov
pop
inc
sbb
mov
jmp
adc
jne
call
fcoms
mov
ret
inc
roll
hlt
pop
jb
mov
outsl
pop
or
decl
es
lods
inc
cli
call
aaa
xchg
int3
mov
push
cmpsb
pushl
dec
push
mov
pusha
push
xor
aaa
lcall
pop
nop
inc
mov
inc
jno
call
dec
adc
mov
dec
mov
dec
dec
add
int3
sahf
sbb
fs
jmp
xchg
lret
lea
inc
mov
in
lahf
out
scas
std
push
daa
add
mov
int3
lods
pop
jne
or
mov
lock
mov
mov
sub
andl
xlat
mov
jns
out
xchg
dec
adc
jg
incl
cmp
jnp
sub
jecxz
fsave
outsl
push
pop
xchg
decl
or
mov
cmc
jb
shrl
and
ror
jnp
jno
mov
shlb
inc
cmpsb
mov
fsubl
insl
jne
mov
dec
int
aad
mov
sahf
lret
dec
pop
ljmp
fcmovnu
mov
dec
push
mov
loop
dec
pop
jg
lret
or
sbb
xchg
xchg
cmp
lret
mov
outsl
xchg
jle
out
scas
mov
push
call
add
aad
push
dec
movsl
cmpsl
lahf
insl
xlat
or
aam
call
mov
inc
popa
sub
jg
xchg
leave
aaa
mov
push
mov
shll
pop
mov
call
ljmp
test
jne
add
xchg
xchg
std
lds
mov
es
clc
out
sahf
test
mov
mov
pop
ljmp
stos
test
jmp
pop
rcr
pop
outsb
dec
gs
aad
out
dec
xchg
inc
std
mov
iret
cmp
mov
jne
loop
sbb
int
mov
inc
sub
inc
dec
dec
cmc
fildll
sub
shrl
adc
and
adc
mov
aam
ja
pop
cld
add
mov
mov
addr16
mov
cld
lcall
add
mov
inc
lods
jmp
mov
cmp
stos
clc
fisttpl
xchg
mov
xchg
dec
scas
or
mov
xor
sub
mov
inc
fnstsw
jmp
cltd
pop
sub
scas
xor
or
adc
aam
iret
add
decl
loopne
mov
mov
lock
lcall
xor
fstpt
nop
sub
xchg
stos
mov
jp
iret
movsb
jnp
jno
pop
xchg
pop
mov
cmp
in
mov
dec
cmp
jae
jmp
repnz
outsl
out
lahf
mov
popa
shrb
sub
push
dec
mov
xor
sub
arpl
mov
sbb
call
add
das
push
andb
rorb
ret
push
cli
adc
aaa
sbb
fbld
daa
sbb
mov
fcompl
mov
inc
inc
and
pushl
sbb
push
xchg
cmpb
loopne,pn
enter
pusha
enter
and
ljmp
xchg
mov
rcrl
int
push
pushf
std
pushl
rcr
inc
xor
arpl
aad
lods
add
cmp
fnstsw
mov
gs
cmc
mov
pop
push
pop
fstl
cs
xchg
mov
mov
shrb
adc
cmp
mov
mov
or
xchg
mov
and
icebp
inc
cmpb
incl
les
jmp
mov
pop
int3
lds
add
fsts
mov
pushl
lods
jmp
jg
pop
mov
jbe
movsw
out
xchg
mov
dec
shrb
lcall
test
or
adc
stos
nop
nop
bound
add
out
fisubrs
incl
hlt
adc
cmp
xchg
sub
sub
in
xor
inc
aaa
add
lcall
daa
loop
and
mov
or
aam
cmpsl
pop
in
mov
pop
inc
add
fidivrs
jmp
bndldx
loop
ss
mov
mov
cmp
push
add
popa
or
clc
daa
mov
jl
rorl
mov
jp
jg
insl
scas
ret
sbb
xor
and
mov
jno
push
negl
mov
xor
aad
cmc
ljmp
daa
push
pop
cmp
jle
jmp
inc
in
push
je
add
push
xor
mov
lcall
fidivrs
ljmp
mov
jecxz
int3
hlt
lret
je
or
jge
int3
or
sti
and
sti
lds
push
scas
fcmovnu
int3
jecxz
push
xor
pop
jns
pop
subl
lcall
xchg
insb
or
imul
ss
push
int3
jmp
mov
xor
push
std
mov
jo
pushl
ret
or
inc
movsb
mov
ljmp
shl
push
xor
cltd
jge
push
arpl
xchg
cli
lcall
or
inc
js
into
jecxz
inc
xlat
push
shr
xchg
je
xor
lcall
call
movsb
dec
dec
mov
shll
sub
cltd
lcall
mov
dec
sub
test
in
mov
cmp
fstl
in
add
out
sbb
in
pushl
dec
mov
out
push
jp
fsts
out
loop
fwait
mov
outsl
aad
or
cltd
xchg
outsb
add
orl
lods
jg
mov
pusha
es
lahf
mov
dec
aad
add
jae
inc
call
ljmp
cmp
and
push
enter
imul
mov
add
outsl
repz
stc
and
jns
add
mov
arpl
pushl
popa
mov
addr16
repz
inc
gs
lods
cli
fsubrs
jno
jecxz
or
push
inc
ljmp
push
or
lahf
dec
test
lds
out
divb
addr16
cltd
lock
imul
ljmp
jg
fstps
js
int3
data16
lock
jmp
aaa
add
int
jo
das
cld
pop
call
ficoms
adc
sub
call
lcall
inc
ret
inc
pop
mov
sbb
lds
imul
adc
popf
mov
cmpsl
ljmp
sub
dec
loope
and
repz
mov
push
insb
subb
push
movsl
rclb
mov
mov
cld
aaa
fadds
loop
sub
mov
push
adc
pop
clc
ljmp
xor
inc
fs
inc
pop
icebp
aad
insb
cli
xchg
sbb
enter
jne
call
dec
and
mov
mov
int
aad
sub
cmp
xchg
sub
call
push
mov
subl
push
mov
fs
das
push
push
test
ret
mov
movsl
mov
pushf
fstl
fucomi
shrl
cmpsb
cltd
outsl
push
shlb
push
mov
xor
lret
mov
pushl
or
stc
pop
push
pusha
ror
pop
pushf
or
pop
fnstenv
aad
xchg
mov
outsl
lock
jo
inc
je
cmp
inc
cmp
es
jb
pop
jg
fs
rorb
call
sti
mov
in
jl
or
loop
mov
in
in
xor
test
ret
mov
lret
cmp
call
inc
xor
ret
insl
call
pushf
cs
jg
scas
out
sbb
mov
sub
popw
or
dec
mov
dec
mov
incl
xchg
sub
pushf
les
sbb
xor
ljmp
call
ret
adcb
jb
mov
mov
or
call
adc
fsubrp
cli
les
aad
sahf
or
add
sbb
push
pop
cld
incl
mov
add
cmp
inc
xor
std
nop
mov
jmp
cli
outsb
std
incb
or
idivb
jmp
jmp
xor
xlat
scas
aaa
jnp
test
xor
shlb
call
clc
rclb
inc
mov
ret
xorl
sbb
mov
adc
or
sti
pop
movsl
outsb
in
sbb
pop
or
fadd
fsubrs
pushl
inc
jno
repz
int
adc
sub
mov
xchg
dec
jne
pushl
cld
in
mov
imul
pop
adc
test
repnz
dec
lcall
xchg
pusha
idivl
and
lahf
sub
ja
add
out
cltd
jg
incl
mov
cmp
jmp
cwtl
jg
rcll
xor
adc
lcall
push
cmc
jae
and
or
pop
adc
jmp
popf
stc
sub
xorb
and
sahf
or
aaa
ret
pusha
out
push
incl
sbb
or
gs
ds
lcall
cmp
dec
jb
add
call
ror
rcrb
mov
pop
and
and
sbb
ljmp
sti
lods
mov
enter
jecxz
in
repz
out
out
or
ljmp
std
dec
sahf
mov
movsl
cmpsb
inc
jg
sub
pop
xchg
popf
pop
fdivr
pop
inc
sar
fstpt
mov
and
add
mov
lods
out
gs
mov
add
lcall
dec
xor
in
jle
sub
sti
cwtl
xchg
xchg
xor
sub
jecxz
jp
inc
cli
and
inc
cmp
bnd
adcl
stos
outsl
lcall
ja
dec
addr16
loop
dec
sti
push
lcall
repz
lcall
pushl
rorl
push
outsb
mov
xchg
dec
or
push
mov
cwtl
lret
scas
add
jg
inc
lods
fldt
stos
cmp
mov
pop
testb
pushl
sbb
mov
jmp
mov
sub
pop
adc
repnz
ret
mov
imul
pop
fldenv
ljmp
add
mov
dec
lcall
pop
sti
mov
adc
sbb
cld
cmpsb
data16
loop
adc
addb
add
jmp
rcll
fs
push
push
push
jle
xorl
jbe
push
push
insl
addr16
ljmp
lods
divl
pop
or
addb
scas
and
sub
sbb
sub
dec
mov
jmp
clc
out
xor
and
xchg
jge
cld
jmp
test
leave
cld
lcall
ds
pop
outsl
int3
inc
in
add
in
or
dec
ja
cmp
mov
int
mov
std
repz
add
mov
repnz
jl
mov
push
inc
xor
das
and
or
mov
add
dec
xchg
ss
sub
stos
daa
pop
imul
pop
cmp
add
clc
and
push
cwtl
sti
pusha
push
call
add
xor
dec
dec
and
sti
imul
mov
xchg
scas
cli
incl
xchg
inc
cmp
push
stc
fisubl
add
xor
inc
shl
and
cmpsb
or
aaa
cwtl
mov
pushf
stos
ljmp
in
adc
les
and
mov
idiv
pushl
pop
ret
pusha
mov
out
pop
adc
mov
xor
ret
jg
ds
in
jge
add
mov
and
arpl
stc
sub
hlt
cmpb
jmp
fwait
mov
ss
repz
cmp
pop
ret
add
sbb
jg
dec
ret
add
popl
jg
insb
rclb
cs
pop
out
leave
push
mov
shl
jns
add
dec
sbb
call
jne
push
fcompl
test
mov
push
adc
enter
outsl
ljmp
into
xor
xor
sbb
add
pop
adc
xor
ficoml
mov
sub
mov
mul
xor
ja
jb
sub
push
addr16
push
sbb
test
incl
jl
ss
cltd
fildll
sahf
dec
data16
push
test
aad
push
jg
incl
icebp
xor
add
mov
push
clc
jg
movsb
aam
jno
aas
and
cmp
sub
cmpsl
sub
fnstsw
aaa
aas
add
leave
fldt
pop
outsb
je
test
add
cmp
push
inc
pop
push
int
mov
mov
cltd
popf
push
mulb
daa
inc
sahf
jmp
mov
pop
sub
ljmp
xchg
clc
incl
inc
pop
test
mov
stc
xlat
jmp
ret
or
ja
mov
sub
pushl
fsubrs
jp
xlat
dec
push
or
nop
push
xchg
inc
loop
test
pushl
mov
lods
mov
test
xor
test
test
mov
mov
mov
push
inc
loopne
sti
loopne
inc
xor
in
jg
fildll
cmp
cmp
enter
mov
jg
jl
push
sbb
jnp
adc
mov
lahf
xchg
xor
cli
jg
es
ret
ret
pushf
mov
sarl
adc
cmpsl
dec
inc
call
push
adc
cmpsb
xchg
and
test
xchg
xor
push
call
inc
pop
insl
xchg
and
xchg
dec
push
lcall
sbb
adcl
pop
push
test
movsb
adcl
add
mov
xchg
pop
push
insb
cmpsl
stos
jle
rolb
mov
pop
je
sub
inc
sbb
jmp
and
ss
ret
mov
mov
jae
outsb
insb
xchg
inc
or
mov
pop
cli
mov
gs
movsb
in
out
or
dec
push
mov
mov
mov
int3
fldl
sub
xor
gs
in
jns
jnp
sub
dec
mov
sub
jns
and
mov
movsb
stos
dec
sar
bound
pushl
cmp
test
add
push
mov
jp
cmp
pop
pushl
push
and
imul
xor
ret
mov
xor
incl
xor
fimull
fistps
fwait
fwait
cmp
adc
sub
idivl
push
decl
add
lret
mov
test
bound
and
add
jg
add
enter
les
push
mov
xor
int3
sbb
mov
pop
mov
fcom
mov
lret
cmp
test
aas
les
test
mov
jg
ds
loop
jmp
repz
xchg
cmp
pusha
filds
shll
sbb
call
outsl
mov
jge
and
adc
pop
cmp
in
xor
mov
cli
jg
decl
jo
dec
jmp
sub
cld
mov
inc
cmp
lock
lea
xchg
mov
pop
mov
mov
dec
hlt
jmp
add
orb
push
in
iret
mov
fbld
in
sbb
sbb
repz
leave
dec
aas
ljmp
adcl
sahf
and
push
mov
jg
jb
cmpsl
adc
fisubrl
xchg
mov
and
mov
and
clc
or
dec
stos
push
mov
bound
cwtl
outsl
fdivrl
push
enter
lcall
outsb
aas
fcomps
push
jmp
push
mov
pop
ud0
js
fs
out
lock
shll
jg
jbe
jns
push
sub
ljmp
jae
dec
fwait
cli
inc
or
mov
xchg
dec
xchg
adc
test
call
incl
cmp
sub
pop
idivl
push
mov
cmpsb
insl
mov
mov
lds
aam
imul
xchg
data16
or
xor
jg
lcall
or
out
faddl
pop
jno
mov
pop
jae
std
xor
cmp
push
add
shlb
inc
xor
ja
das
repnz
add
jmp
lcall
xor
ror
lods
aas
jns
adc
mov
hlt
ljmp
push
xor
mov
int
mov
pop
push
das
push
inc
mov
pushf
jge
mov
pop
ljmp
adc
cmp
out
iret
outsb
fcos
cld
jbe
jecxz
in
jns
sbb
xor
add
add
xchg
or
inc
mov
loopne
jge
mov
xchg
in
decl
filds
fcomps
sbb
loopne
push
aam
mov
pop
stos
aam
faddl
lock
lods
add
orb
jmp
and
loope
bound
jbe
adc
dec
sub
nop
push
es
into
cmp
dec
jmp
and
hlt
jmp
mov
lea
mov
cmp
adc
subl
jmp
jp
and
push
fs
je
inc
sub
lcall
loope
arpl
loop
movsb
inc
bound
xlat
jmp
movsb
call
ljmp
mov
mov
aam
sub
movsl
cld
test
mov
sub
jl
ds
xlat
mov
fs
in
pop
xor
ja
adc
int
push
test
adc
cmp
push
incl
mov
in
test
mov
lds
fdivs
addr16
jbe
add
decl
mov
fdivrl
mov
sti
or
test
ss
ljmp
out
or
dec
fwait
jg
jne
imul
fdivl
decl
or
fwait
gs
push
cwtl
mov
adc
call
inc
outsb
divl
dec
mov
nop
mov
test
cmp
mov
mov
loop
in
adc
loop
xchg
push
outsb
jge
jo
and
int3
push
xchg
push
mov
clc
into
scas
jmp
mull
mov
push
jb
aad
insl
loope
adc
pop
mov
dec
add
js
in
fsubrs
rol
aaa
and
std
push
and
dec
inc
add
xor
iret
arpl
pushl
mov
rcll
push
cli
xor
scas
pushl
cli
dec
out
sbb
call
lret
or
mov
dec
imul
dec
cld
jl
loopne
subb
stc
dec
push
je
call
mov
pop
mov
imul
es
cld
inc
push
into
shrb
ljmp
pushl
add
repz
fdivs
sbb
stos
mov
icebp
lcall
inc
sarl
pop
jo
jg
decl
stos
mov
dec
int3
and
inc
jmp
mov
fisubrs
loop
cmp
call
adc
xor
scas
cmp
clc
sub
sub
jb
incl
sbb
test
lock
stc
push
mov
fs
rcll
jg
dec
lods
or
stc
and
xchg
frstpm(287
std
mov
dec
test
xchg
mov
add
add
sub
lcall
gs
les
mov
test
jnp
scas
call
lock
mov
lret
and
xchg
jno
decl
fisubrl
loopne
cmc
jp
lret
lret
pop
rcr
ror
in
mov
test
add
enter
jmp
jmp
dec
adc
jmp
scas
adc
aam
decl
scas
cmp
or
xor
and
test
mov
inc
dec
mov
dec
jb
mov
arpl
sbb
fcoml
cmp
pop
jne
sub
out
lds
out
mov
adc
pop
jmp
data16
fwait
jb
pop
cmpl
nop
arpl
inc
fcoml
cmpsl
cmc
mov
xchg
cmpsl
and
fnstenv
in
pusha
mov
repnz
fdivrp
xor
mov
out
std
pushl
or
and
inc
xchg
or
dec
iret
jne
daa
lcall
and
xor
sub
ss
cmp
das
push
jnp
cmp
xchg
lahf
mov
xchg
cmp
aad
cmp
rolb
pop
ljmp
push
or
fcoms
imul
nop
shl
sub
decl
and
lods
lea
lret
push
jp
je
push
mov
lcall
aas
or
xlat
sbb
mov
xchg
ror
xor
jp
inc
mov
ret
sub
inc
in
xlat
inc
inc
push
rcll
xchg
inc
adcb
push
mov
fcoml
shrl
daa
mov
dec
xor
mov
leave
and
xor
pushf
sti
mov
bound
pop
push
inc
sbb
in
push
jg
or
pop
mov
jecxz
mov
ljmp
iret
into
cmp
popa
jge
or
sbb
jg
mov
inc
mov
jg
cmp
pop
dec
pop
jo
test
cmp
incl
and
lods
jl
aas
test
and
loop
jg
mov
stos
xor
decl
lea
mov
adc
lds
jecxz
incb
pop
sbb
icebp
bound
cmp
call
test
push
jb
mov
cmp
and
xchg
into
and
and
adc
clc
pushf
daa
and
cmc
outsl
sbb
jmp
and
test
fnstcw
les
xchg
fcompl
aad
hlt
or
mov
mov
push
lods
inc
sahf
jbe
das
icebp
mov
ret
incb
arpl
mov
jne
mov
add
pushl
pusha
in
cmpsl
js
repnz
cmp
int
xor
mov
ret
movsl
fdivrp
inc
lcall
jg
pop
mov
dec
sbb
pop
dec
sub
lcall
push
xor
push
lret
inc
repz
scas
data16
andb
cmp
ljmp
mov
sub
and
jl
rclb
xor
jg
lcall
test
les
out
push
pop
roll
orl
sar
lahf
lcall
subb
mov
jae
adc
pop
fcompl
inc
stc
mov
xchg
mov
aam
cld
jp
fnstenv
clc
add
nop
lcall
shr
jg
into
dec
sbb
lock
arpl
iret
cli
push
sub
or
xchg
mov
mov
sbb
push
cltd
jae
fimuls
fisubs
jbe
xchg
lcall
negl
aaa
int3
sbbl
call
movsl
lock
add
mov
push
repnz
add
je
adc
cwtl
and
sub
sub
add
movsl
push
add
out
ljmp
ja
aad
add
and
call
jmp
pop
call
jg
add
xchg
js
in
into
das
xchg
pop
jae
scas
jg
sub
stos
out
dec
cld
fisttpl
cmp
inc
mov
mov
xchg
mov
scas
inc
pushl
sar
repnz
mov
jne
or
ja
inc
cmp
neg
clc
pop
loop
std
xchg
or
incl
push
mov
movsb
cltd
sub
xor
ljmp
call
adc
inc
mov
push
mov
ret
jae
push
jp
or
aaa
pop
bound
fildll
dec
fdivr
xor
ficomps
inc
ror
add
outsl
hlt
jmp
inc
xchg
mov
imul
mov
decl
std
outsl
sbb
mov
fbstp
pop
out
loopne
jge
jl
int3
pop
cmpsb
aas
decl
stc
das
jmp
sbb
inc
add
adc
rcrb
mov
cmp
call
or
mov
test
mov
ljmp
xchg
fisttpl
cmp
das
lock
ret
test
repz
add
and
cli
lods
decl
mov
mov
mov
mov
mov
mov
das
xor
xchg
push
xchg
sub
mov
lret
dec
jg
jle
cltd
cmp
jns
adc
jno
or
cmp
faddp
jg
mov
movsl
sub
xchg
and
cli
rcr
repnz
mov
out
jg
lea
shrb
negl
cwtl
cwtl
sti
mov
loopne
hlt
jmp
cltd
repnz
sbb
mov
leave
mov
xchg
es
jle
jg
call
cmp
jb
xchg
xchg
dec
ret
jbe
or
ljmp
icebp
jmp
jo
repnz
inc
pop
push
mov
fs
insl
jo
pop
lods
repnz
dec
aam
inc
mov
bound
scas
mov
jecxz
repz
mov
in
inc
pop
clc
aaa
adc
push
out
fsubrl
cmc
mov
push
decb
sbb
mov
cs
loop
hlt
imul
in
pop
std
pop
js
pushf
jl
pop
xchg
and
cmc
or
test
insl
push
mov
notl
and
dec
add
xor
ss
add
ret
mov
rcrb
imul
pop
dec
pusha
cmc
decl
std
call
dec
lret
dec
xchg
adc
popa
inc
sbb
jmp
dec
jle
lods
or
mov
mov
les
adcl
jmp
daa
ja
mov
cwtl
mov
push
jecxz
fidivl
ffreep
inc
incl
imul
sub
mov
inc
pop
mov
rclb
aaa
aaa
dec
mov
es
jb
idiv
incl
cltd
test
mov
xchg
xchg
int
adc
test
ljmp
mov
and
pop
and
scas
outsb
jne
leave
sarb
mov
sti
movsb
int
push
sub
cmp
or
jo
adc
pushl
mov
jns
sub
cld
adc
mov
mov
and
xchg
incl
fnstsw
daa
cmp
aam
pop
mov
lods
mov
push
fdivrs
sub
cld
adc
test
mov
negb
popa
mov
int
movsb
scas
pop
adc
out
and
push
add
ja
add
aad
insl
jne
dec
shl
pushl
rolb
or
test
out
jg
mov
dec
in
or
push
icebp
and
cmp
cmp
mov
les
mov
jne
xchg
mull
pop
cmp
fdivr
fucomip
test
aad
das
sub
mov
push
dec
ljmp
icebp
inc
fwait
les
daa
push
inc
lret
xchg
test
icebp
mov
lret
sbb
cld
incl
fwait
dec
mov
sub
mov
jecxz
and
fistpl
movsb
sbb
or
xor
sub
lcall
mov
jnp
push
stos
icebp
jecxz
in
mov
dec
lock
pop
or
repnz
sub
pop
mov
mov
or
xor
sub
push
out
mov
push
xor
loop
or
or
icebp
lret
xor
mov
loopne
test
sbb
lcall
sub
lcall
stos
sahf
lcall
sub
pop
jecxz
icebp
cmp
xchg
pusha
jmp
jecxz
adc
rclb
xchg
fcom
push
mov
pop
mov
outsl
lods
push
cli
orb
adc
lcall
adc
es
cmpsl
jb
jge
ret
adc
xor
lahf
jg
or
mov
decl
mov
iret
xchg
hlt
scas
arpl
jl
dec
xor
iret
dec
adc
mov
sbbl
ljmp
ljmp
repz
imulb
mov
lret
lcall
in
dec
push
inc
inc
mov
aaa
rcll
xlat
xor
dec
cmp
ljmp
pop
stos
mov
sub
std
xchg
dec
movsl
out
dec
ss
jnp
push
loope
std
add
or
mov
pusha
dec
adc
in
sbb
aas
test
pop
les
inc
mov
jg
decl
cmc
insb
popf
mov
ja
xchg
xor
jae
push
xchg
jmp
xor
add
in
stos
repnz
ja
adc
cmp
sub
mov
pushl
xchg
jge
lods
insl
scas
mov
cwtl
push
testb
pop
pop
and
loopne
lret
pop
add
enter
or
loop
push
loope
push
dec
inc
cmp
pushl
or
insl
adc
sar
cwtl
and
jo
dec
xchg
frstor
mov
xchg
sub
das
mov
in
mov
test
xor
cmc
decl
dec
ds
cs
sbb
pop
mov
add
or
pop
std
xchg
xlat
ljmp
movsb
fisubrl
adc
pop
arpl
mov
out
lret
inc
sti
push
es
cwtl
int3
ljmp
lock
jno
mov
pushf
xchg
testb
sbb
mov
outsl
insb
hlt
ljmp
xchg
sub
and
call
cmp
roll
int
mov
or
inc
sbb
cs
shrb
out
insl
cmpsl
xor
push
xor
fdivl
xor
mov
jns
dec
ja
sub
jl
ret
pusha
fisubs
mov
cld
iret
testb
cld
fs
test
rol
das
ljmp
aam
lock
cmp
mov
mov
fmuls
xor
int
dec
scas
xorl
sub
repnz
scas
xor
sbb
pop
inc
into
into
cmp
neg
sbb
test
mov
mulb
mov
push
shlb
push
ret
lcall
stc
and
cmpsl
and
mov
into
xor
es
mov
or
pushf
les
out
jmp
inc
leave
pop
pop
add
pusha
and
and
cli
test
mov
in
add
dec
lea
rcll
fistps
xchg
lods
sbb
mov
roll
xchg
or
mov
decl
pusha
out
scas
or
jle
cmpsl
push
lcall
xchg
cld
int
pop
jle
loope
pop
lds
xchg
into
mov
mov
data16
jg
mov
jge
sti
aaa
pop
dec
adc
pop
cmc
test
mov
call
fbld
pop
hlt
pop
xor
outsl
hlt
cmp
mov
adc
pop
or
add
sbb
jge
fstpt
imul
cmc
test
xchg
pop
push
imul
push
dec
std
cld
sahf
popa
mov
mov
scas
cmc
rcrb
sti
js
xchg
xor
lahf
fcoml
mov
sarl
mov
adc
push
std
neg
loopne
mov
and
shl
lods
loopne
sub
cltd
testb
incl
dec
add
pause
cmc
in
scas
mov
roll
sub
js
arpl
xchg
jae
roll
and
js
pusha
inc
shr
xor
ljmp
aad
ds
daa
cmp
or
dec
es
loope
cmc
inc
mov
push
sbb
ss
mov
push
lods
insb
aam
fimuls
cmp
jae
rol
push
insb
mov
cmp
adc
fs
mov
mov
jl
jnp
jle
push
std
aas
sub
aam
pop
cld
xor
incl
jg
movsb
lret
inc
mov
ss
xchg
pop
mov
sbb
dec
cmp
jmp
int3
movl
sahf
adc
out
xorb
loopne
push
add
push
xchg
test
dec
test
cli
stos
subl
rorb
push
dec
imul
mov
dec
je
pop
and
loop
pop
adc
sub
mov
jmp
xchg
imul
sub
sub
aad
push
jb
xor
cmp
xor
mov
addb
fnstenv
mov
icebp
xor
and
jle
cli
jmp
pop
and
mov
andl
inc
int
int
mov
clc
call
cmpsb
repnz
lock
mov
push
arpl
dec
pop
clc
jg
aaa
jmp
mov
mov
sbb
nop
or
dec
inc
or
inc
imul
adc
enter
xor
les
dec
and
and
xlat
lcall
icebp
stos
jmp
aaa
jbe
aam
xchg
mov
outsb
fs
push
or
xlat
adc
sub
ljmp
pop
ds
les
sbb
jae
inc
test
std
cs
mov
inc
insb
aaa
clc
pushl
roll
sub
jge
adc
cmc
cmp
mov
pushl
cwtl
sub
nop
shrl
xlat
lcall
js
sti
out
mov
mov
xorb
add
inc
cmp
cmp
jmp
mov
push
xchg
sub
or
insl
inc
or
or
ljmp
or
repz
repz
mov
inc
je
lock
ljmp
shll
das
dec
fs
xorl
jecxz
aas
jne
insl
loopne
fists
dec
and
mov
sub
int
pushl
lea
jnp
das
xchg
jbe
lock
clc
mov
and
jg
mov
mov
jp
in
add
ds
pop
loopne
ljmp
push
ret
sbb
and
mov
out
cld
xchg
dec
idivl
jns
mov
pop
incb
cmp
cmpsb
movsl
imul
adc
dec
test
sbb
jns
sahf
add
adc
fldt
ret
dec
es
shrl
and
call
mov
jp
mov
inc
clc
mov
jg
test
jnp
into
cltd
shll
xchg
pop
lods
lock
call
and
xchg
pop
sbb
mov
movsl
inc
push
jns
outsl
icebp
jmp
inc
sahf
test
btr
rol
out
idivb
ret
inc
ljmp
dec
add
mov
and
pop
cmp
idiv
fucomip
sbbl
xor
sub
sti
mov
popf
push
or
xor
scas
fdivr
decl
js
ret
jmp
outsl
pushf
mov
movsb
jmp
das
push
cmp
int3
lods
xlat
lods
sub
in
cmp
push
jne
add
and
lcall
ret
xor
add
inc
ret
push
cmp
or
sti
sbb
out
daa
sub
fildll
lods
call
jecxz
shll
adc
ret
out
out
ret
xor
pushl
call
cmpl
push
ror
cmp
mov
fisubl
in
movsl
sbb
mov
es
fucomp
add
mov
lea
sarl
je
lcall
add
sbb
push
and
ja
cmp
addr16
cmp
add
xor
icebp
loopne
imul
in
sbb
mov
inc
jns
lods
xchg
sbb
push
mov
or
add
stos
scas
dec
clc
out
gs
test
subb
mov
jne
pop
inc
or
gs
and
pop
fnstenv
psubsb
mulb
push
fcmovbe
sub
dec
jge
call
mov
jmp
adc
add
cmp
ljmp
or
jg
mov
les
push
cld
roll
dec
inc
adc
sub
cmpsl
les
sub
sub
adc
roll
ret
jne
pushl
lcall
ja
sub
push
mov
jp
sysexit
in
push
sbb
cli
fwait
mov
lcall
test
push
pop
xor
push
outsl
outsb
mov
jg
xor
hlt
int
ja
sar
lds
cld
mov
scas
add
dec
js
sub
out
dec
rcl
jg
lcall
das
test
pusha
sbb
jno
or
mov
cmp
andb
filds
or
or
sti
adc
sahf
hlt
mov
pushl
lods
mov
dec
adc
notb
jno
call
or
ljmp
inc
fstpt
dec
dec
imul
lea
cmp
adc
jg
sub
pushf
cltd
jg
cld
bound
lret
in
xor
ret
ljmp
lock
out
xchg
push
fsub
daa
fbld
dec
jo
dec
cmc
jmp
push
ficompl
addl
jno
inc
lret
movsl
fldl2t
jmp
fsubrs
cmp
sub
jo
xor
sbb
enter
jp
mov
cld
pop
mov
mov
mov
lcall
cmpsb
jne
bound
mov
lods
out
inc
mov
cli
sahf
fstpt
fldenv
mov
lret
inc
inc
xor
mov
inc
inc
lcall
jecxz
lock
sub
aad
mov
mov
lret
aas
cs
lret
pop
inc
jae
divb
outsb
leave
jg
add
mov
ss
mov
mov
cwtl
std
push
sbb
clc
mov
dec
call
or
jb
jno
cwtl
xchg
lds
mov
call
push
mov
mov
push
dec
das
psubd
push
push
scas
rcrb
jg
decl
ret
cmpsb
ja
mov
pop
popa
push
je
mov
incl
pop
pop
orb
and
loop
imul
jnp
enter
repnz
lahf
leave
aad
jmp
imul
sbb
mov
ds
call
jne
into
test
andb
mov
pop
flds
mov
ficomps
in
or
push
inc
push
mov
xlat
rorl
or
sub
ja
in
or
pop
jnp
push
into
imul
xchg
insb
mov
mov
out
inc
sub
push
in
not
mov
and
iret
lods
js
fildll
scas
enter
fs
outsl
cmp
cmp
pop
xor
mov
jge
int
sub
dec
div
lea
xorb
jecxz
and
icebp
imul
sub
in
aam
lret
subl
adc
stos
or
pop
test
xor
fucomip
scas
test
mov
adc
dec
out
mov
xor
rcrl
test
mov
sbb
scas
shl
sbb
inc
int3
cltd
lcall
mov
fisttpl
daa
out
bound
aam
stc
fsubrp
or
push
sub
xor
les
or
sar
xchg
in
pop
clc
cwtl
adc
add
ljmp
lock
stos
mov
jns
mov
pop
adc
mov
ficoms
cmpsb
inc
cs
cmp
push
jo
jbe
sub
ljmp
cmc
push
add
fdivrp
divb
fbld
bound
je
mov
lret
cvtdq2ps
insl
fnstsw
jmp
loop
movsb
je
add
sarl
loope
stos
in
jg
jmp
add
ret
repnz
and
inc
jmp
aas
fmull
sub
jmp
jp
sbb
rcrl
fisttpll
add
lock
adc
mov
sar
sbb
mull
and
fistpll
incl
mov
stc
and
insb
orb
mov
and
or
cld
ds
mov
dec
enter
xor
jmp
sbb
movl
xlat
roll
int3
add
jbe
test
fwait
jmp
jg
ret
jno
cmc
dec
sub
mov
jle
mov
cld
pushl
xchg
push
iret
fisttpll
js
iret
add
adc
js
leave
insl
repnz
lcall
scas
mov
mov
xchg
adc
push
cmp
dec
cmp
ja
ffree
add
into
mov
movsb
mov
lock
scas
xchg
dec
mov
pushl
mov
mov
test
test
lods
sbb
mov
pop
mov
adc
mov
cmc
in
popf
shrl
imul
int
adc
dec
cmp
call
fwait
lea
cltd
push
rcrl
xor
or
xor
fstps
aas
push
adc
bound
inc
lcall
jg
stc
adc
cmp
scas
cmpsl
push
fisttpl
pop
shll
mov
decl
insb
sub
dec
stos
adc
loop
add
pop
sar
mov
mov
fimuls
in
insb
xlat
mov
cmp
xor
bound
sbb
xor
call
mov
xor
sbb
and
or
adc
ja
std
jmp
lods
xor
ss
decl
ds
pop
sarb
in
inc
cmp
outsl
xor
fs
cmp
add
mov
fwait
cli
pop
pop
js
and
sub
push
xchg
out
pop
nop
mov
pusha
mov
nop
dec
incl
sbb
sbb
mov
ljmp
add
outsl
cld
inc
sbbl
jg
js
insb
mov
push
push
and
loopne
aaa
cli
movsb
cmp
pushf
insb
inc
mov
popf
stc
test
lcall
xor
push
test
mov
clc
mov
jnp
xchg
ljmp
pushl
jnp
movsl
add
xor
mov
pop
fst
push
lret
std
jno
lret
je
lock
jg
pushl
jg
mull
push
sub
cmp
jmp
ds
std
aaa
or
stc
mov
mov
xchg
pop
cmpsb
and
xor
jno
xchg
ljmp
sub
ljmp
ljmp
shr
mov
popa
call
pushf
pop
stc
rol
sbb
std
push
call
or
and
add
call
test
and
jge
adc
xchg
pushf
mov
ret
call
decl
inc
js
mov
ror
mov
mov
fistl
mov
or
pop
and
mov
pushl
xor
repz
inc
jno
test
xchg
in
stc
ret
std
jmp
paddsw
xor
mov
inc
shl
pop
pop
push
pop
mov
stos
jbe
loope
push
std
fildll
push
ret
xchg
xor
pop
jnp
xchg
dec
lcall
sbb
push
gs
xchg
and
cmp
mov
call
sbb
pop
test
ret
push
xchg
pop
mov
push
sub
into
pop
jns
jg
or
call
decb
pop
stos
stos
negb
jbe
sbb
pop
ljmp
jmp
imul
pusha
or
cs
mov
call
or
icebp
test
enter
xor
xchg
int
bound
mull
and
xor
decl
mov
jmp
pop
in
movsb
loop
aam
cmpsl
mov
mov
mov
dec
inc
pushf
mov
pop
xchg
jg
test
addr16
jno
std
subl
pusha
pop
push
pop
std
pop
cli
sti
out
mov
xchg
jo
not
jo
outsl
push
outsb
xchg
cli
inc
sti
imul
lahf
sub
jge
push
lock
pop
lock
sbb
rcr
inc
call
fisubs
test
ss
jns
push
filds
cli
mov
hlt
mov
or
enter
lret
mov
jg
pop
and
xorb
outsb
jb
arpl
cmc
arpl
jle
call
pushl
jo
push
lcall
mov
jmp
push
jno
cli
gs
call
dec
lods
out
adc
mov
ds
pop
jecxz
pop
lret
inc
sbb
lcall
ljmp
push
in
out
gs
cmp
xlat
fimull
ja
jmp
es
cmp
decl
inc
mov
test
call
cltd
out
jo
pop
xchg
pushl
mov
call
or
or
adc
mulb
ret
pushf
hlt
bound
mov
mov
lret
mov
adc
inc
sahf
dec
in
push
loope
push
ret
pushf
adc
dec
pusha
push
shrb
jle
add
mov
ret
fnsetpm(287
add
add
jg
into
xor
inc
xchg
adc
mov
fisttpl
das
ljmp
push
dec
outsl
cmc
imul
jp
lods
mov
push
sub
jg
push
mov
sbb
leave
inc
cmp
incl
jge
mov
mov
insl
or
xlat
movsl
pushl
clc
jbe
rolb
shr
add
outsl
jecxz
adc
mov
aas
arpl
ljmp
fsubrs
ljmp
add
xchg
fwait
test
jo
ja
call
xchg
in
push
out
xor
sbb
cs
push
clc
lahf
fwait
movsl
decl
cwtl
sahf
mov
or
loop
xchg
mov
popf
pop
test
dec
jo
les
call
mov
mov
test
pushl
xchg
inc
stos
sub
cli
ret
popa
aad
mov
pop
xchg
out
fwait
nop
clc
mov
pop
fs
ljmp
inc
jmp
cli
mov
sti
lcall
iret
fistpl
test
lcall
std
mov
fdivl
dec
dec
test
xor
movsb
rcrl
incl
std
xchg
movsl
mov
xorb
fstps
mov
dec
test
cmp
jg
decl
mov
data16
lahf
imul
push
sbb
and
enterw
cld
mov
xchg
mov
jle
dec
test
adc
sub
add
outsb
mov
xchg
sti
jbe
push
out
or
btc
add
push
mov
cmp
mov
clc
jae
mov
std
xchg
adc
loop
sub
and
rclb
push
decb
incl
jge
add
lret
xchg
inc
jae
popa
fs
sub
jmp
pop
inc
xchg
lods
xor
insb
fsts
dec
subl
push
push
sub
sti
icebp
fldz
inc
and
pop
daa
in
adc
mov
stc
lret
dec
lcall
and
inc
js
sbb
fists
pop
pop
loop
test
jg
pushl
cmp
or
out
shrb
dec
decl
dec
push
addb
push
mov
push
fimull
mov
adcb
jp
fistpl
cvttsd2si
es
stos
repz
pop
std
mov
and
pop
lcall
movsb
mov
or
insb
lcall
adc
cmp
mov
out
push
lret
mov
leave
cmp
or
lcall
lcall
popf
cld
adc
jmp
ja
loopne
insb
push
add
mov
sar
test
cli
lods
popf
xchg
mov
out
fcompl
sub
mov
jmp
cmpsb
das
outsb
jbe
repz
mov
add
inc
lahf
aad
or
and
outsl
call
rcl
push
add
stos
les
and
xchg
aam
andb
mov
daa
adc
or
and
and
cmp
pop
cli
incl
cmpsl
lock
and
pop
loop
out
ljmp
stos
or
mov
inc
cmpsb
addr16
mov
mov
shll
xchg
fdivl
aad
inc
sbbl
add
call
push
pushf
movl
push
jle
jg
incl
andb
mov
or
pop
push
or
mov
cs
aam
je
push
hlt
decl
sub
cmp
push
dec
cwtl
pushf
adc
mov
decl
jns
outsb
lahf
xchg
ljmp
xlat
aad
adc
test
dec
jl
aaa
clc
pushf
fwait
mov
jne
or
decl
cmp
int3
jae
in
cmp
xchg
popa
cwtl
test
outsl
test
fs
das
cmc
incl
push
and
and
cmc
jl
sahf
mov
ljmp
lock
mov
inc
cltd
ja
cli
jge
imul
pop
cmp
call
adc
loopne
sbb
das
jle
lds
pop
idivb
mov
nop
adcb
adc
shll
sbb
insl
mov
or
fistpll
mov
cmp
outsl
fadd
imul
fdivrp
mov
lods
jg
call
movl
push
icebp
scas
out
sbb
lret
call
enter
into
daa
hlt
ljmp
int3
lds
mov
sbb
int3
mov
push
addb
cli
xchg
jae
fstps
std
lods
jno
int
pop
in
mov
pop
sub
in
clc
mov
decl
enter
push
sub
pop
dec
stos
add
imul
pushl
mov
mov
repnz
frstor
out
sti
jo
xchg
cli
mov
push
sub
outsb
cmp
xor
xor
pushl
add
inc
push
inc
cltd
lahf
ret
mov
pusha
out
mov
pop
jno
movsl
sbb
addr16
xchg
jl
mov
insl
mov
push
scas
lret
mov
sbb
loope
cmp
fcompl
pop
jno
or
jnp
xor
popf
andl
adc
movsl
pop
cld
push
xor
jo
jmp
les
decl
aad
sub
sbb
mov
aam
push
mov
pushl
pop
push
sbb
in
xchg
mov
out
mov
sti
scas
push
das
adc
jmp
sbb
cmc
jo
data16
cmp
sub
dec
add
xchg
add
loop
cmpsl
aad
push
icebp
in
dec
jp
pop
lahf
decl
jmp
loope
scas
icebp
pusha
les
xchg
clc
mov
outsb
jmp
dec
ljmp
pushl
xchg
out
mov
jae
xor
pop
pop
cld
call
jns
fsub
stos
or
aad
ss
xchg
mov
and
inc
sbb
out
in
aad
cmp
dec
mov
decl
ret
sub
fldenv
cmpsb
add
mov
pop
imul
cmc
sub
mov
lock
sahf
sbb
aam
mov
or
jle
mov
inc
repnz
push
mov
push
dec
mov
adc
mov
sub
dec
js
call
sub
jle
mov
and
xchg
add
test
mov
lahf
lds
lcall
push
adc
mov
inc
aam
mov
lock
add
lcall
addr16
xchg
stos
jae
adc
inc
movsb
faddl
mov
xor
mov
adc
pop
pop
ja
mov
inc
insl
xlat
imul
sahf
movsb
rolb
aam
das
roll
push
movsl
ss
fisubs
outsb
inc
addl
mov
inc
cmp
inc
push
mov
mov
cmp
mov
lcall
xor
or
xlat
pop
iret
lahf
ret
fisubs
xlat
cmc
xchg
sar
jecxz,pt
dec
fldl
xchg
repnz
cmp
or
xchg
or
mov
mov
fsubrl
rolb
lods
imul
adc
icebp
and
movsb
and
insl
mov
repnz
mov
dec
fidivl
aad
pop
push
inc
sbb
jo
sbb
ljmp
mov
fucomi
out
xor
lock
lret
and
or
sar
call
mov
push
ret
push
mov
and
push
outsl
ss
mov
in
xchg
jmp
insb
pop
cmc
sub
popa
adc
std
xchg
dec
scas
fistpll
mov
lods
pop
and
insb
or
xchg
cmp
inc
pop
rep
incl
in
xchg
pop
inc
outsl
mov
pop
aaa
pslld
mov
aad
mov
mov
xchg
sbbb
mov
in
je
sub
fsubl
xchg
sar
and
test
in
lds
mov
jecxz
mov
or
xor
sbb
ljmp
mov
lcall
pop
push
repz
and
idivl
mov
pop
loope
lahf
mov
xchg
cwtl
inc
rcrl
mov
sub
lret
sbb
jne
rolb
xor
std
jg
outsl
insl
push
jle
add
add
add
jmp
or
add
push
xchg
out
push
aas
lret
push
fmull
sub
xchg
cli
xor
loope
test
push
mov
daa
rclb
sub
lock
ret
scas
sbb
inc
cli
pop
mov
jle
xor
dec
mov
iret
mov
jb
or
pop
push
call
mov
jg
push
and
mov
call
and
pushf
dec
scas
pop
mov
push
cmc
jecxz
jg
incb
aas
push
lahf
ss
lahf
jp
fwait
xchg
xchg
fdivl
inc
ficoml
je
icebp
gs
adc
sti
inc
loope
mov
cld
jns
and
addr16
cmp
jmp
jmp
sub
xchg
pushf
dec
add
jmp
aad
xchg
repnz
xlat
aas
xor
lcall
jno
cmpl
int3
ror
and
fildl
fcmovu
pop
test
lcall
and
movsb
lods
daa
stos
push
mov
adc
fsubrl
aam
scas
pusha
cld
jmp
sbb
cmp
aas
jmp
in
cwtl
or
sub
cs
ljmp
xchg
xlat
fwait
xor
pop
jnp
xchg
frstpm(287
imul
lock
movsl
pop
ljmp
push
cli
pop
adc
or
cwtl
popa
jns
mov
mov
jno
scas
sub
pop
fwait
in
ret
ja
adc
decl
or
cs
test
in
adc
sub
xchg
nop
sti
incl
bound
stos
push
or
adc
dec
dec
xchg
into
imulb
cltd
ficoms
jmp
push
sub
sar
push
inc
hlt
dec
pushf
sbb
push
sbb
das
and
jg
lcall
sbb
sbb
and
adc
inc
cs
adc
lcall
ja
inc
mov
mov
jnp
js
adc
scas
mov
mov
rcl
lahf
mov
ret
inc
inc
int3
int3
imul
mov
push
aaa
add
data16
and
or
orl
xchg
and
adc
cltd
stos
cltd
mov
jg
or
das
pop
xchg
mov
ljmp
icebp
jg
mov
inc
xchg
lea
cmp
lcall
call
add
imul
push
rcrl
dec
pop
push
pop
jbe
call
ljmp
sbb
das
fsubr
jne
gs
sarl
mov
decl
cld
fidivs
inc
and
in
jae
test
cmp
incl
push
test
pop
mov
pop
lds
adcl
mov
outsl
pushl
scas
negl
dec
pushf
xchg
cmp
fs
aas
and
scas
mov
stos
sub
pop
clc
mov
cmp
cli
or
and
mov
mov
sbb
sub
mov
push
jp
sub
pop
jmp
mov
lret
insl
jne
cmp
ja
cmp
xchg
scas
add
idiv
mov
jg
lret
sbb
dec
fsubr
xchg
shrl
cld
fidivrl
aaa
cli
inc
scas
jb
insb
mov
pop
insb
adc
loopne
iret
mov
bound
rcr
ljmp
or
inc
jne
push
mov
cmp
bound
andb
xchg
jg
mov
inc
enter
mov
jbe
cmp
add
mov
push
push
mov
in
sub
bound
push
add
mov
pop
push
and
pushl
clc
push
scas
and
aad
ret
push
cld
nop
fwait
cmp
dec
inc
in
add
call
sbbb
xchg
dec
jnp
in
int3
cli
mov
cmp
lahf
mov
pushl
xchg
imul
mov
pop
aaa
push
enter
mov
lcall
out
in
jg
mov
mov
mov
mov
fidivs
call
dec
repnz
push
sti
std
push
cltd
or
icebp
out
lcall
push
nop
push
call
cli
jne
repz
lcall
xor
je
lods
pushl
mov
sar
lock
js
fidivrs
mov
lds
mov
cmpsl
or
ljmp
mov
sahf
das
fcom
ds
pop
inc
ljmp
adc
stc
mov
add
and
sub
cmc
bound
or
enter
add
and
lds
jg
jle
aad
pushl
sub
test
jns
push
mov
jmp
dec
cmpsl
mov
lds
push
pop
data16
je
dec
dec
xchg
xchg
cmp
or
adc
mov
aam
pop
dec
addr16
pop
rolb
sbb
lods
pushl
lret
int3
inc
popa
leave
shll
iret
icebp
arpl
jmp
clc
lcall
call
insb
cmpsl
sahf
xchg
mov
mov
lods
pop
cld
repnz
call
pop
fcmovnb
imul
fsubs
mov
stos
mov
cmp
sub
incl
in
xchg
inc
lds
cmc
sub
inc
jl
mov
push
aaa
es
cli
mov
das
xor
stc
xor
in
cmp
jns
dec
xchg
dec
rcrl
iret
jge
call
push
and
jo
inc
aam
lods
call
sub
mov
push
data16
aam
scas
loope
cmc
push
jg
mov
mov
in
add
pop
not
push
dec
mov
icebp
sub
jns
jb
sbb
xchg
dec
mov
pop
iret
aad
incl
jl
xchg
stc
pop
out
mov
lret
fnstcw
mov
popf
xchg
in
out
lcall
incl
cld
dec
pop
pop
adc
push
inc
leave
mov
scas
inc
dec
cmp
jmp
mov
into
sub
iret
movsl
movsb
fwait
cld
pushf
sub
dec
outsb
adc
fisubs
outsb
dec
dec
pop
cli
sbb
or
adc
jns
jp
mov
stos
inc
mov
cmp
cmp
fsubrl
ljmp
xchg
push
shll
xchg
mov
sub
pop
loop
mov
push
int3
ljmp
pop
pop
mov
xchg
mov
mov
xchg
dec
push
or
ret
int
push
ret
dec
roll
lcall
push
sbb
leave
mov
pop
icebp
push
mov
pop
loope
xchg
dec
lcall
sbb
or
push
ret
jne
cld
fnstsw
jb
mov
sub
xchg
subb
and
aad
gs
dec
mov
icebp
lds
jmp
xchg
pop
ret
imull
cmc
mov
mov
push
add
lea
or
jle
sub
sahf
push
stos
cmpl
lcall
pushf
mov
in
shlb
pop
test
and
mov
lcall
fisubrs
cmp
std
jnp
test
xor
jo
push
jecxz
xorl
mov
cwtl
jmp
pusha
aam
or
cmp
jg
sbb
dec
push
sbb
rorb
fwait
into
loope
xor
pop
decl
inc
clc
sbb
inc
lret
ds
xchg
js
adcl
lcall
cli
mov
jle
push
dec
popa
lea
push
repnz
je
xchg
mov
incl
pop
mov
xchg
and
and
fisubrs
sbb
movsl
addr16
fsubs
xchg
lcall
push
jecxz
lret
inc
mov
jl
cs
insb
ss
or
decl
outsl
fcmovu
add
stos
push
cmp
add
and
mov
andl
ret
jmp
pop
adc
jnp
incl
lods
add
add
mov
mov
addr16
arpl
push
sbb
aaa
xor
loopne
pop
sub
pushf
loopne
jmp
leave
insl
roll
rcr
mov
mov
mov
xchg
add
adc
pushl
outsb
dec
test
icebp
dec
mov
popf
repnz
mov
or
enter
aas
call
jmp
inc
and
movsb
or
and
aam
sahf
popa
scas
in
insl
test
stos
outsl
dec
rorb
call
push
jg
cmpb
stos
xor
cmp
fcomip
imul
fwait
and
aas
mov
jmp
pop
jb
dec
jecxz
test
adc
mov
adcb
incl
jmp
sbb
lods
sbb
cltd
popl
push
lcall
add
mov
lods
out
sub
push
sarl
sbbl
stos
dec
sub
lcall
jmp
fidivl
sahf
ja
push
repz
popf
inc
outsb
and
fcmove
outsl
and
push
call
incl
xchg
dec
cld
in
movsb
cmc
xor
cli
mov
pushf
es
test
jg
pop
mov
xor
dec
adc
mov
sti
out
push
ds
in
push
or
or
push
push
into
sbb
or
daa
decl
mov
adc
pop
cli
js
xchg
mov
inc
lcall
mov
test
jne
and
js
jp
push
push
std
sbb
ljmp
sbb
dec
inc
or
call
incl
in
adc
idiv
mov
movsl
stos
adc
or
mov
push
pop
xor
incl
test
stos
pusha
inc
jg
sub
lds
and
mov
jecxz
lret
movsl
pop
cli
jmp
dec
jo
sarl
push
mov
mov
loop
push
jg
pop
jns
mov
xor
jmp
xlat
sbbl
in
and
scas
jg
pop
push
insb
clc
and
je
xchg
enter
jp
mov
cmp
into
sub
fistps
dec
mov
iret
cld
pop
and
decl
xchg
pop
mov
or
into
lock
lahf
stos
jb
jmp
loop
fcom
pushf
xchg
dec
jb
movsl
sbb
add
pop
jge
xor
jg
adc
add
and
ficompl
mov
cld
sbb
sub
lcall
adc
or
ljmp
bound
repnz
stos
fdivrp
pop
cli
call
aas
inc
out
loope,pt
push
jge
pop
pop
jns
fstl
lea
std
jg
js
push
les
and
mov
int
mov
cld
lea
or
push
xor
insb
out
out
call
jmp
fistpl
adc
cmp
mov
mov
cli
inc
enter
push
mov
xchg
cltd
cmp
pushl
cli
jge
mov
xor
mov
add
out
jg
decl
adc
cmp
mov
mov
pushl
ljmp
insb
ljmp
inc
outsl
cmp
lea
repz
pushl
push
inc
adc
rorb
stos
out
das
lock
lcall
cmc
mov
jmp
mov
lea
das
std
ret
fidivs
push
test
cmp
loope
shll
out
imul
decl
cli
mov
push
mov
dec
mov
xor
aad
aas
insl
jbe
dec
adc
dec
inc
pop
test
cmpl
pop
call
mov
into
aam
nop
cmp
rcll
clc
push
sub
gs
adc
std
mov
aaa
pushf
int
pop
orb
add
sahf
pop
cli
adc
jle
pop
ljmp
xchg
mov
fdivrp
sbb
jmp
fistl
mov
pop
dec
lret
lcall
xchg
cmpsb
sub
xor
incl
dec
xchg
mov
cwtl
ret
jbe
jmp
in
aas
les
mov
xchg
lcall
or
and
movsb
mov
mov
test
jno
or
push
cmpsl
push
adc
sbb
push
cltd
scas
dec
sub
jb
int3
addr16
loopne
loope
sbb
inc
sbb
jne
loopne
sub
mov
rcl
lret
dec
dec
pop
sar
mov
xor
mov
push
daa
jne
adcb
xchg
adc
bound
mov
decl
jne
and
mov
add
sbb
out
gs
ficoml
mov
jmp
mov
inc
fldenv
or
inc
cs
cld
mov
icebp
mov
mov
das
cwtl
pop
sbb
in
fistl
xchg
je
movsl
sbb
mov
mov
xor
mov
rol
cmp
push
push
cwtl
rcr
and
int
cwtl
add
int3
mov
incl
pushl
iret
pop
push
dec
imul
sub
stc
inc
inc
and
xchg
lcall
cmp
outsl
je
mov
dec
mov
shrb
aam
aam
into
push
mov
imulb
ret
test
adc
cmp
jmp
cmp
jmp
data16
inc
dec
mov
add
adc
xlat
jge
mov
gs
mov
jge
mov
pushl
mov
repz
jmp
aaa
xor
lods
ljmp
and
xchg
and
lds
adcl
add
jae
add
push
fnstcw
xor
xchg
xlat
push
cmp
sbb
in
roll
cwtl
xchg
cmpsl
test
jmp
test
sti
pop
lock
and
jmp
adc
pop
inc
sub
lea
ljmp
andl
xchg
sti
fsts
jno
sahf
fwait
in
test
and
sbbl
aad
imul
inc
int
xor
adc
dec
mov
sbb
out
cld
xchg
out
mov
and
dec
lds
incl
scas
shll
and
sbb
std
clc
cmp
xchg
push
test
call
stos
sahf
add
cmp
ret
fs
shll
dec
jle
repz
lcall
xchg
fidivrl
test
push
pop
adc
xor
int3
mov
inc
lcall
repz
mov
gs
movsb
push
orl
mov
lret
adc
jmp
and
mov
in
sub
jle
sub
sbb
mov
fs
or
mov
pop
test
clc
or
iret
jmp
scas
out
out
ror
jne
test
ljmp
ja
fnstenv
ret
popf
jnp
loope
pusha
out
inc
int
pop
lret
add
jns
mov
mulb
or
decl
pop
es
inc
sbb
xor
pop
lcall
dec
ficoml
cmp
lcall
clc
xor
push
wrmsr
stos
pusha
pop
xor
mov
jg
pop
loop
aam
mov
outsb
jns
cmc
test
lock
addl
push
mov
ds
ja
pop
scas
sbb
pop
fstps
test
pushl
sbb
sbb
lret
adc
pop
fistl
sbb
imul
cltd
pop
cld
dec
mov
pop
mov
cmpsl
movsl
nop
adc
pop
pop
push
movsl
sub
adc
je
lcall
xor
test
fwait
lds
cmpsb
sub
jno
imul
jne
jl
fucomip
movsl
arpl
lds
cmp
loop
incl
incl
lahf
mov
lahf
add
mov
fsqrt
xchg
ljmp
hlt
mov
push
cmp
jae
mov
outsb
int
fildll
or
cld
lea
test
push
fimuls
les
sub
sub
ret
pushl
inc
sbb
js
sti
fs
leave
xor
sti
aas
outsl
hlt
jmp
xor
movsl
mov
lcall
adc
mov
in
sbb
jmp
mov
stc
xchg
cmc
cmp
xorb
fdivl
test
mov
inc
mov
xor
scas
sbb
push
orb
les
mov
cld
decl
push
dec
mov
and
inc
xor
pop
lcall
xchg
std
lds
mov
xchg
mulb
mov
imull
fidivrl
rcrl
lds
jns
mov
adc
mov
jg
mov
mov
mov
aaa
mov
jmp
mov
out
inc
xchg
decl
xchg
add
mov
or
pushf
clc
inc
pop
xchg
ret
mov
lods
cs
in
lcall
ret
mov
dec
ficompl
inc
mov
push
incl
bnd
jp
ret
mov
push
inc
daa
inc
addr16
push
sbb
pop
dec
incl
push
xchg
clc
in
dec
adc
xchg
add
push
cs
push
stc
mov
out
call
out
push
xor
adc
or
add
repz
jl
fdiv
sbb
sbb
inc
test
xor
adc
mov
pop
repz
xchg
fabs
xor
cmc
sar
or
add
into
push
imul
fwait
andl
adc
clc
mov
cmpsl
in
call
cmpsb
fmull
es
ljmp
or
movsl
ja
mov
test
mov
addl
ss
push
lcall
std
pushf
pop
enter
daa
aad
outsl
out
and
or
jmp
or
cmpsb
inc
dec
cld
push
jmp
out
xchg
cmpsb
mov
cld
mov
incb
outsb
mov
lock
clc
or
dec
stc
xchg
repnz
in
hlt
outsb
cmc
xchg
sbb
es
mov
sbb
xchg
jle
bound
cmp
sub
lea
adc
add
js
dec
ret
adc
jle
xchg
sub
sub
popa
mov
pushf
sub
add
addr16
das
bound
cwtl
sub
fildl
cmp
sbb
ret
xchg
pop
pop
loopne
ljmp
lahf
clc
and
adc
clc
adc
sub
fucomip
pop
pop
lea
in
frstor
and
jecxz
mov
notb
decl
fisttpl
mov
loope
adc
dec
or
fstps
stc
insb
adc
fcompp
es
mov
lods
mov
fs
jecxz
sbb
arpl
jge
mov
icebp
jmp
das
ljmp
sub
rorl
or
cwtl
mov
cli
cmp
xor
xchg
aaa
mov
insl
xchg
lret
sbb
xchg
stos
pop
cs
jbe
sbb
in
fdivr
arpl
lret
mov
jmp
push
mov
push
lea
call
stc
push
test
or
or
jb
cli
lret
call
and
mov
or
jo
out
dec
xor
push
dec
decl
std
ret
sbb
inc
xor
jmp
aam
cltd
jg
ja
pop
clc
incl
imul
sti
int3
repnz
call
push
imull
pop
cli
call
mov
out
mov
cltd
enter
test
cmp
jg
and
stos
mov
add
mov
fwait
xchg
and
push
ljmp
push
pop
cmp
mov
mov
mov
addr16
out
aam
jmp
push
jmp
loope
xchg
mov
clc
adc
jmp
stc
les
lea
cmp
push
pmaddwd
jbe
pop
mov
stos
jns
cltd
imull
shlb
aas
push
add
jmp
leave
dec
shlb
in
arpl
in
scas
repz
decl
cmp
cmpsb
jmp
jecxz
mov
movsl
stos
push
inc
push
aam
pop
outsl
ss
loop
pop
mov
push
cmp
ficomps
fadds
les
inc
ljmp
mov
lods
loop
sub
lcall
loopne
ret
or
enter
addr16
push
popa
sarl
dec
arpl
adc
out
notb
mov
sbb
out
sarl
push
pushf
arpl
dec
cld
pop
mov
pop
test
push
mov
or
add
scas
push
push
ljmp
sarb
sub
xor
sbb
addl
stc
icebp
fcmovbe
arpl
push
fisubrl
mov
mov
jg
call
ss
xor
popf
push
fdivr
out
aas
sti
pop
imul
adc
mov
mov
dec
into
dec
into
push
scas
data16
in
pop
mov
lock
inc
lcall
mov
scas
or
mov
fdivl
roll
push
ja
and
pushl
incb
pop
pop
cmp
imul
xchg
cmp
mov
incl
sbb
add
fs
iret
fidivs
repnz
xor
fmuls
xlat
sar
call
jbe
jg
test
mov
sti
sbb
cmp
pop
pop
dec
and
add
icebp
xchg
popa
sub
movsb
fidivrs
out
jmp
push
sub
aaa
jl
mov
ss
lcall
shr
sbb
pusha
dec
mov
fnstsw
aam
lea
dec
mov
jns
sti
cmp
push
data16
ljmp
xchg
and
mov
mov
pop
imul
test
add
jb
xor
pop
call
mov
jle
push
fadds
mov
cmp
fs
or
jg
cmp
stos
es
inc
or
adc
push
jecxz
adc
insb
push
cmp
jl
add
cmp
sti
and
test
hlt
pop
dec
xchg
aaa
mov
call
mov
xor
cltd
cmpsb
lds
jo
push
iret
mov
daa
mov
lods
out
enter
dec
repnz
test
or
jmp
adc
mov
adc
orb
jg
cmp
movsl
xor
and
and
push
mov
mov
xor
xchg
sbb
and
movsl
mov
ljmp
sti
adc
xchg
mov
imul
in
test
mov
dec
jno
mov
clc
sti
mov
lret
fcoms
call
arpl
or
mov
sub
xor
call
outsb
or
scas
les
mov
cltd
jo
leave
lea
inc
mov
in
or
push
std
in
pop
mov
mov
lret
jl
and
fistpl
mov
dec
mov
test
cmc
jae
insl
mov
cmp
jle
cld
call
dec
cld
adc
push
pop
mov
arpl
inc
jg
loopne
adc
sbb
sub
push
cmpsb
popl
mov
push
sub
aaa
and
pop
sti
push
cmp
loop
sbb
inc
xchg
sbb
jge
idiv
adc
push
into
sarl
and
or
sub
inc
insl
lock
add
jg
incl
clc
pop
adc
adc
jbe
add
ja
dec
pop
cli
decl
or
outsb
jg
jg
in
insb
cmp
outsl
daa
sub
lds
jl
and
pop
outsl
insl
fstl
cld
cli
je
mov
jecxz
lret
xchg
pop
jb
stc
fdivr
lahf
pusha
pushl
cli
mov
imul
aad
mov
js
pop
fs
fists
insb
das
cld
jb
xor
fwait
iret
sbb
adc
rorb
fcmovnbe
cmc
lahf
jle
lcall
jl
mov
add
pop
sbb
in
jl
pop
dec
xchg
cltd
mov
cld
fbld
adc
insl
imul
mov
cmp
sbb
insl
cmp
or
in
div
dec
lods
xor
pop
ret
dec
mov
dec
xor
and
enter
mov
loope
ja
adc
add
andb
loop
dec
data16
sarl
xchg
sub
ljmp
sarb
outsl
subb
mov
filds
popl
cmp
mov
pop
in
jnp
test
popf
shrl
mov
mov
jmp
daa
xor
daa
in
xchg
adc
aaa
cmpsl
sbb
jg
inc
push
jno
push
add
lcall
clc
scas
iret
mov
fisubrl
movsb
fistl
lods
decl
xchg
clc
ret
fs
push
sbb
rcrl
enter
call
imul
and
inc
loop
mov
mov
incl
in
sti
or
arpl
gs
mov
cltd
push
ja
pushl
flds
cmpsl
mov
std
xchg
mov
dec
lret
loopne
addb
loop
cmp
std
call
aad
fwait
pop
mov
lahf
daa
out
xchg
or
mov
pop
adc
cmp
shll
std
mov
add
dec
sahf
xchg
cmp
jmp
jo
in
jno
std
dec
or
adcb
sub
test
stc
and
popa
mov
jmp
cmp
jmp
xor
jnp
push
dec
call
xchg
popa
cs
fists
dec
xchg
jp
ja
sbb
pushl
push
sti
cs
nop
mov
adcb
push
insl
movsb
mov
jno
divb
fisttps
mov
cwtl
cmp
out
stc
cwtl
aam
and
outsl
incl
cmp
mov
rclb
push
add
andl
incl
out
sbb
out
xlat
flds
mov
rol
mov
fwait
jnp
xor
pushl
jno
lods
call
mov
cmpsl
mov
das
mov
aaa
inc
cmp
fs
add
sbb
rolb
jg
das
adc
call
mov
adc
cmp
in
ljmp
gs
in
dec
xor
cli
mov
mov
mov
loopne
sahf
cmpsl
mov
jmp
jae
sub
lods
mov
fwait
sbbl
imul
popa
mov
das
hlt
jg
imul
xchg
popf
jp
out
sbb
js
loop
jmp
cmp
insl
and
add
xchg
pusha
cld
and
cmpb
mov
fdivr
lods
jg
jno
jno
lds
rcrl
mov
push
inc
sbb
inc
movsb
outsl
sub
es
sbbb
jbe
cwtl
insb
outsl
push
cmp
pop
fisubl
hlt
inc
decl
jb
ss
cwtl
test
push
cmp
cs
mov
pop
rol
push
sti
jecxz
jnp
mov
and
and
ret
inc
mov
test
cmpsb
loope
sub
roll
test
clc
data16
ljmp
xchg
mov
push
jno
ljmp
pop
dec
popl
call
xchg
push
xor
hlt
jg
mov
insl
hlt
imul
pop
mov
sub
jmp
xchg
cltd
lcall
aaa
lret
fs
push
aas
call
add
ja
imul
popa
inc
xchg
loope
pop
popf
xchg
mov
mov
adc
cmp
sub
mov
stc
push
cwtl
add
clc
jg
aaa
or
mov
adc
pushf
mov
pushl
insb
add
lahf
fwait
mov
sub
and
das
out
push
addr16
push
ficomps
call
push
sar
imul
ret
inc
push
sub
and
fdivp
in
out
popa
sar
decl
push
push
cmc
xchg
jns
jno
mov
pop
push
dec
dec
scas
aad
jecxz
sti
mov
aas
fstps
sub
cmp
inc
mov
push
xor
sub
mov
jg
xchg
bound
cmp
stc
mov
or
push
cmp
nop
lock
testb
stos
mov
insb
jg
adc
dec
cld
outsl
pusha
and
dec
fists
xor
mov
test
cltd
jg
lcall
stos
rcrl
mov
lcall
xchg
lock
sbb
movsl
mov
pop
mov
jns
push
mov
ret
outsl
scas
pop
mov
add
cltd
ds
cmp
mov
jmp
mov
cmp
les
mov
mov
sub
mov
hlt
jmp
sahf
orl
insb
inc
je
lds
or
jne
outsb
xchg
ret
lds
call
fwait
jg
mov
inc
xchg
jb
sbb
cmp
jle
dec
cmc
sbb
call
xor
or
cld
ds
lock
mov
jb
xor
add
out
faddp
out
je
hlt
pop
dec
push
les
inc
sub
mov
cwtl
outsb
out
jb
les
add
ljmp
inc
pop
fadd
dec
push
pop
stos
add
ljmp
int3
shr
ds
test
mov
test
call
add
pop
nop
sbb
jp
sar
sbb
mov
pushl
in
out
jl
cmpsl
cld
mov
ret
dec
mov
jecxz
mov
mov
push
arpl
nop
pushf
xchg
lret
addr16
rcll
sub
dec
add
jae
dec
mov
mov
hlt
popf
outsb
fisttps
dec
jns
cmpsb
out
push
mov
std
decl
aam
or
out
mov
out
filds
mov
lcall
inc
mov
lahf
xchg
pop
shrl
lret
pushl
adc
inc
mov
clc
in
and
repz
xchg
neg
mov
decl
jge
or
in
fcompl
daa
cmpb
jnp
xchg
mov
aas
jl
mov
xchg
mov
call
shll
or
lret
jecxz
mov
pop
lock
call
arpl
dec
fmull
mov
jp
sbb
pop
sbb
call
ja
cli
adc
lcall
aas
jle
imul
sub
test
imul
pop
cs
pusha
mov
leave
andl
movsl
fwait
xor
cld
push
push
mov
xor
aad
stos
mov
jmp
push
mov
cmpsl
std
addr16
cmp
cmc
sbb
outsl
cmc
jg
jp
outsl
aaa
jne
out
loopne
and
jnp
push
mov
std
mov
mov
imul
mov
pop
fisttps
cmp
add
dec
les
call
call
push
pusha
fnstsw
push
mov
xchg
js
pop
pop
out
sbb
mov
cwtl
sub
jmp
fldt
movsb
lcall
pop
cmp
push
ret
in
push
int3
sahf
mov
movsb
mov
add
xorl
jecxz
cmp
jne
sub
cld
sbb
mov
push
jnp
aas
pop
ret
sahf
lods
mov
into
lds
sbb
add
mov
sarb
add
xchg
adc
das
std
mov
sarl
xchg
int3
xorb
repnz
enter
andl
repz
ficoml
movsl
ljmp
scas
out
movsl
pop
xchg
movsl
ret
sahf
sub
clc
decl
pop
or
sub
inc
sub
sbb
and
sar
fcomip
pusha
gs
fisttpl
cltd
push
xlat
cmpl
repnz
adc
pop
add
pop
sarl
mov
and
jno
out
sub
popf
push
je
mov
mov
inc
or
cld
out
jmp
js
mov
std
dec
and
jge
pop
scas
pop
sarl
xchg
aam
pop
adc
xchg
js
dec
lods
sub
inc
leave
mov
adc
pushf
pop
dec
aaa
cltd
xorb
jb
cmpb
xchg
pop
test
xor
mov
mov
inc
pop
sbbb
insb
sti
mov
ja
cmp
cltd
inc
push
decl
and
mov
mov
test
pop
cli
lcall
lds
in
xchg
dec
cmp
mov
inc
jle
sarl
cmp
or
pop
sub
jmp
and
mov
xor
cmp
push
add
xchg
cmp
insb
xor
cmp
cli
lcall
push
mov
mov
mov
push
adc
popa
pop
aam
fisttpl
mov
or
inc
jmp
adc
adc
and
inc
inc
mov
shlb
xorb
mov
outsl
ljmp
mov
dec
rorl
pop
mov
cmp
decl
das
subb
outsl
xor
push
call
or
arpl
fimuls
call
cmc
jmp
fadds
jl
dec
and
js
cltd
pop
fldt
cmp
les
lret
mov
push
mov
movsl
xchg
mov
inc
decl
adc
add
fsubp
sti
std
fsubs
jae
and
jle
push
xchg
cmp
scas
shrb
push
lahf
or
pop
test
adc
lahf
dec
stc
addr16
push
xchg
in
aaa
fisttpll
fdivrl
leave
xlat
pushf
sarb
mov
pop
ret
out
andb
dec
cld
pushl
sbbl
addl
inc
loope
in
mov
popf
incl
mov
jne
or
mov
lods
and
inc
adc
punpckldq
cltd
mov
ficompl
add
cld
or
cmp
jge
lret
in
shrl
decl
pop
insl
das
clc
std
dec
test
mov
adc
das
aaa
ljmp
arpl
shlb
ret
lret
xchg
in
test
ljmp
shl
or
and
pop
pop
xor
ss
and
lret
rclb
je
jmp
movsl
mov
mov
test
std
es
xchg
mov
and
in
xor
hlt
adc
incl
insl
ret
aam
cmp
jp
lods
out
push
movsl
xchg
adc
movsb
and
pop
push
pushl
or
imul
in
mov
icebp
loope
xchg
lock
pop
cmp
ja
insb
inc
lret
cmpsl
push
movsl
hlt
lcall
aas
add
into
fwait
scas
and
jb
push
leave
sti
ljmp
mov
cmp
fdivr
iret
fnstenv
adc
add
lea
daa
xchg
push
sbb
jg
adc
push
or
loope
mov
ret
pop
andb
movsl
mov
fidivs
pop
sbb
popf
sbbl
mov
sbb
decl
loopne
lcall
call
mov
add
cli
mov
pushl
add
in
jecxz
lods
ds
cmp
and
lea
or
jg
jmp
xchg
decb
jle
cmp
addl
dec
dec
add
fucomip
push
sub
movsb
mov
sbb
and
pop
xor
jg
call
clc
andb
and
mov
mov
movsb
pop
pop
cmp
nop
mov
jns
in
es
inc
sbb
lods
cmp
pop
pop
push
mov
sbb
jmp
idivl
push
add
pop
sbb
cmp
adc
sbb
aad
mov
lcall
lds
int3
jl
cltd
aas
jg
outsb
repnz
xchg
mov
xchg
dec
clc
pop
ljmp
lock
inc
cli
orb
mov
out
xchg
and
mov
or
fdivrp
pop
lret
pop
cmp
or
pop
movsb
nop
push
mov
fbstp
incl
aas
fwait
xchg
mov
xor
lahf
cmp
add
ficompl
jns
cli
add
mov
roll
adc
aad
insl
xchg
mov
test
mov
clc
das
add
pop
or
xchg
sbb
lcall
cld
ja
fldenv
xor
ljmp
cmp
jo
jmp
adc
xorl
add
hlt
jp
imul
xchg
je
pushl
and
loopne
cli
cs
mov
cli
xor
xchg
arpl
mov
add
adc
mulb
scas
sub
ljmp
cli
fists
sub
jno
stc
cli
shrb
xor
nop
sub
mov
sahf
insl
idivl
scas
jae
pmullw
ror
fucomip
or
jbe
pop
push
cli
in
test
call
nop
add
mov
sbb
ljmp
aad
lcall
stos
mov
stos
push
mov
xchg
cltd
outsl
addr16
movsl
dec
cmpsb
in
jg
cld
lock
in
pop
hlt
fs
and
dec
cmp
mov
lds
push
movsl
push
jp
call
ljmp
mov
sarl
cmp
mov
fcoml
mov
jbe
ja
cmp
and
aaa
je
pop
outsl
jle
int
inc
pushf
ljmp
movsl
push
stos
mov
cmp
inc
icebp
inc
int
xchg
inc
jae
mov
add
pushf
jbe
pop
pop
push
imul
ret
mov
std
pushl
das
dec
loopne
xchg
cmpsb
mov
sub
pop
cld
insl
pop
xor
mov
imul
sar
call
xor
fdivr
add
push
jp
lret
ror
adc
fs
sub
mov
decl
xor
outsb
data16
xchg
inc
out
xor
jb
jmp
adc
mov
adc
rol
popa
adc
dec
or
pop
gs
ljmp
jb
cmp
mov
or
jg
pop
pop
and
push
xlat
icebp
mov
lcall
ss
lret
insl
xchg
sti
dec
fiadds
mov
jnp
scas
shrl
bnd
adc
inc
jecxz
stos
decb
lea
fs
fstpt
fstp
xlat
outsl
and
mov
xor
mov
add
adcb
inc
call
add
sub
inc
repnz
sbb
outsl
or
xchg
fwait
in
add
cltd
rcl
lcall
cmpsl
dec
data16
dec
filds
outsb
stos
iret
dec
pop
lahf
insb
and
sub
push
mov
fwait
jle
into
cwtl
ljmp
pop
arpl
fistpll
jle
push
cwtl
adc
into
dec
cmp
pop
call
mov
fcmovnu
sbb
cmp
mov
pop
stos
std
call
pop
lcall
dec
or
pop
std
jmp
jecxz
mov
nop
enter
sbb
add
mov
sti
inc
cmp
xchg
clc
pop
mov
adc
dec
nop
lds
or
fnstsw
insb
mov
fimull
fucomp
mov
fimuls
aas
stos
pop
pop
clc
decl
dec
int
adc
test
xchg
test
mov
mov
inc
cld
xchg
mov
mov
in
jb
imul
jno
pop
push
stos
aad
ljmp
fs
leave
cmc
xchg
popf
xchg
dec
add
cli
popf
sbb
inc
xchg
add
push
imul
or
xor
dec
mov
out
pusha
adc
mov
icebp
fnstsw
shrb
aaa
pop
jae
scas
jmp
adc
pushl
push
pushf
arpl
dec
dec
popa
inc
pop
into
scas
sahf
push
out
dec
lods
lods
add
pop
ret
mov
mov
filds
cld
push
out
incl
and
mov
or
sar
ljmp
lcall
call
adc
mov
ret
or
lea
mov
ljmp
aaa
mov
insb
aaa
lods
xchg
jae
cltd
loopne
jp
inc
aaa
icebp
or
out
and
ljmp
mov
jl
lea
cmp
or
sbb
testb
dec
xchg
inc
mov
movsb
mov
insb
movsb
aas
fstl
shlb
sbb
push
out
pushl
push
std
push
mov
fnstsw
jae
inc
int
sar
jg
lcall
or
scas
rolb
inc
sub
cltd
mov
lret
inc
dec
jmp
jle
les
mov
das
add
xor
movsl
xchg
pop
jp
xchg
sbb
out
out
gs
jg
sbb
xor
dec
lods
or
mov
jl
sub
push
mov
mov
mov
and
push
lods
int3
xor
loop
dec
inc
scas
xchg
insl
cmp
cmp
repnz
lret
scas
ret
push
mov
lds
adc
into
fdivl
out
shlb
pop
sub
popa
or
inc
xor
pop
sub
pop
mov
inc
adc
les
sti
ljmp
jge
cmpxchg
mov
mov
mov
sub
push
push
jg
negb
in
fcoml
rcl
or
imul
adc
cmpsl
int
xchg
inc
movsl
imul
cmp
std
faddl
mov
dec
mov
mov
mov
adc
pop
in
fisubl
notb
push
ss
lcall
insl
mov
addb
insl
xchg
pop
addl
dec
xchg
arpl
fwait
loope
decl
fmull
fildll
cmp
pop
pop
mov
cmpl
cld
sbb
push
cmpsl
pop
or
mov
dec
mov
jmp
push
movsl
mov
jae
xchg
xchg
push
test
incl
and
mov
xchg
lahf
std
lock
pop
jns
cmp
cmp
ja
pushl
inc
ret
push
loopne
popa
sub
sub
xchg
sub
or
cmp
jg
cmp
inc
popf
cmp
movsb
in
xchg
push
call
push
lock
pushl
cmp
imul
lahf
xor
mov
xor
imul
ljmp
sub
aad
pusha
push
fidivl
pop
pop
insb
out
inc
div
cmpsl
mov
mov
mov
push
inc
clc
inc
xor
js
std
decb
push
decl
test
xor
ret
pop
jl
mov
mov
mov
xchg
mov
mov
jge
xor
inc
lret
or
xor
pop
mov
pusha
sbb
ljmp
rclb
enter
jle
push
pushf
fldcw
lcall
pop
and
jle
or
sub
fidivs
fistl
cmp
cmp
bound
imul
and
fcmove
andl
pushl
add
sbb
int3
mov
and
imul
ss
adc
call
xchg
inc
add
and
mov
rcrb
popf
pop
aam
inc
jne
push
sub
pop
clc
jmp
andl
jb
add
repnz
mov
cmp
adc
icebp
add
imul
mov
call
fbstp
push
popa
pop
cmpsb
test
ljmp
sbb
fs
mov
adc
sahf
inc
bound
inc
xchg
rol
jge
filds
es
xchg
dec
push
nop
shll
imul
incb
push
cs
das
sub
push
test
repnz
mov
ret
mov
aad
cld
pop
lock
mov
mov
inc
orl
test
in
cmc
inc
lods
cmpsl
xor
xchg
sub
xlat
js
cmp
jno
cs
cmp
pop
clc
test
pop
push
rorl
pop
jg
mov
lret
aam
lret
sub
fdivr
dec
pop
xchg
push
mov
arpl
xchg
mov
decl
sub
xor
out
int3
jno
cmp
jo
sbb
jmp
pop
incl
adc
pop
pop
fisttps
repz
ja
pushl
pop
sbb
int3
fdivrp
mov
ds
cmpsb
out
scas
mov
adc
xlat
iret
test
decl
pushf
cmp
dec
fisubl
mov
jp
add
inc
xchg
mov
mov
loope
mov
cld
mov
xor
dec
cmpl
into
adc
mov
arpl
jmp
mov
mov
xchg
cld
push
bound
jl
jg
inc
adc
pop
es
inc
pop
sub
cmp
jmp
enter
jbe
in
rep
je
lods
jno
mov
cmp
fbld
xchg
fbld
mov
sub
in
cs
std
iret
lcall
lcall
ja
cmp
mov
mov
push
xor
ljmp
hlt
call
sbb
inc
jae
setl
push
sbb
fisubl
addr16
das
mov
push
sub
repz
and
xchg
frstor
push
sbb
pop
jp
adc
popa
jns
clc
fidivrl
stos
add
jg
inc
inc
xor
ja
mov
fs
sub
jo
dec
xor
popf
or
jne
into
insb
jne
decl
cld
decl
pop
cmp
mov
add
and
ret
decl
jns
push
xor
jo
movsb
mov
mov
mov
icebp
mov
mov
test
cmp
inc
adc
fwait
push
std
notb
call
mov
sahf
xor
mov
cmp
dec
jo
mov
ljmp
fidivrs
negb
add
inc
xor
ljmp
fiadds
movsl
jnp
icebp
xor
imul
call
aaa
cmp
jne
and
fistpl
movhps
out
mov
xchg
dec
in
ljmp
test
push
xchg
aam
lock
cmp
rorb
jmp
and
daa
sbb
xor
test
push
xor
loope
rcrl
jle
xchg
repnz
dec
inc
xchg
clc
mov
jb
sbb
mov
pop
and
shrl
mov
mov
ret
rorl
test
ljmp
jp
push
scas
test
ret
test
arpl
jne
jl
repz
lret
movsb
cs
icebp
sub
call
mov
in
cltd
mov
and
sub
pop
add
cmp
scas
out
pop
sbb
cmp
sbb
imul
sbb
dec
fs
add
or
bound
sar
xchg
add
lea
or
mov
mov
xchg
sub
mov
jmp
loope
sbb
pop
adc
pusha
fisubrl
daa
adc
lcall
inc
cmp
jge
cmpsl
lods
dec
sub
push
in
pop
dec
int3
aad
sbbb
xchg
test
inc
mulb
jl
lock
or
fisubrl
decl
pop
jne
loopne
jo
jecxz
in
test
push
fistpll
mov
sub
mov
push
adc
out
test
cld
adc
mov
ljmp
pusha
emms
pop
pop
mov
inc
jl
call
imul
mov
fucomip
sbb
or
and
jl
lret
mov
jae
mov
arpl
push
repnz
clc
lcall
push
fists
mov
pusha
xchg
pop
add
or
dec
mov
dec
mov
leave
stc
pop
into
aaa
xor
mov
jne
addb
cmp
pop
cli
sbbb
sbb
lods
dec
stc
and
mov
shl
inc
mov
sub
xchg
push
pushf
xchg
pop
push
fldcw
hlt
inc
rolb
shl
pop
call
pushl
arpl
inc
shll
daa
repnz
incl
xchg
and
iret
imul
insl
mov
aam
cmp
addl
int3
shr
or
shlb
mov
inc
pop
mov
fbld
movsb
adc
push
cmp
xchg
pop
jecxz
incl
jge
loope
scas
mov
and
lods
shr
js
cmp
orb
mov
mov
jmp
insb
sbb
inc
cmp
add
push
call
mov
adc
es
sbb
adc
push
mov
push
sbbb
pushl
pop
and
jle
imulb
bound
imul
cmpsb
xchg
jns
and
insb
xor
mov
shl
push
roll
push
testb
mov
push
or
jnp
xchg
sbb
adc
mov
inc
add
call
lret
inc
inc
mov
pop
xor
clc
or
adc
clc
and
ljmp
imulb
shrl
hlt
jno
inc
dec
cli
mov
xor
aaa
mov
sub
gs
fdivrs
jmp
nop
test
or
inc
jbe
sbb
sahf
scas
outsl
lock
loop
push
std
out
mov
pop
scas
pop
push
jp
das
jg
pushl
ljmp
mov
mov
mov
pushl
mov
inc
lret
lods
hlt
mov
cmp
inc
js
cltd
pop
dec
das
xchg
outsl
mov
sbb
stos
aas
sbb
icebp
sub
pop
inc
decl
mov
rcrb
pusha
xor
call
adc
sbb
sub
pusha
aad
adc
incl
inc
cmp
and
popa
xor
add
fstpt
outsl
lods
das
jg
stos
sbb
mov
fmul
jl
xchg
adc
cli
push
push
test
pop
sub
ljmp
jno
adc
mov
pop
mov
das
aad
fmull
aas
pop
jmp
sbb
dec
clc
mov
dec
popa
std
push
push
js
mov
sbb
icebp
xchg
and
cmpsb
outsb
cmc
fisttps
xchg
adc
lahf
lds
sarl
call
les
stc
and
mov
outsb
push
pop
sbb
and
push
xchg
clc
fildll
pop
adc
push
pushl
in
push
mov
movsb
cmp
lods
pop
push
call
ljmp
ja
ret
cmp
cltd
sbb
pop
popa
inc
dec
jb
pop
ret
lock
call
in
lods
les
std
rclb
xchg
lock
pop
subl
inc
mov
fwait
xchg
lock
loop
ret
std
inc
test
pop
stos
sbb
cli
ljmp
mov
pop
add
fdiv
push
ja
mov
lret
pop
js
or
popa
in
lcall
jl
pop
push
iret
sbb
shl
jbe
call
fstpt
mov
jmp
sub
xlat
stos
xchg
cltd
sub
aaa
push
mov
out
dec
sbb
fsubrs
insl
scas
add
mov
push
jns
sbb
and
insb
push
pop
dec
aad
leave
add
dec
std
das
je
push
iret
sbb
iret
cmpb
jg
into
adc
mov
add
add
sub
xor
lcall
mov
fimull
jg
or
sub
xor
jo
test
test
test
in
ror
cmpsb
mov
dec
or
jmp
ljmp
imull
mov
push
je
leave
mov
loopne
xor
mov
jno
test
sub
arpl
aaa
shl
xchg
call
push
lods
mov
xchg
or
test
push
push
jo
adc
or
fsubrs
adc
sbb
incl
adc
popf
test
es
stos
loope
arpl
and
jg
fdivrs
leave
lcall
jnp
hlt
or
jecxz
loopne
add
aas
add
sub
jl
jmp
ja
jmp
jo
sarl
inc
dec
cmp
xorl
into
imul
mov
ljmp
call
cwtl
jno
cmp
repnz
jnp
jno
call
cmp
xor
insb
fdivl
mov
pop
pop
pop
adc
dec
ljmp
jmp
adc
lods
sub
arpl
and
int
mov
cmp
pushl
pop
lea
cwtl
inc
in
sub
notl
cmp
push
je
jp
mov
push
jl
inc
or
mov
dec
seta
pop
roll
test
push
xor
dec
jmp
mov
xchg
jle
lret
dec
add
mov
jae
fimull
mov
and
lcall
pop
jp
fstpl
cmpb
and
jmp
ret
and
jno
jl
decb
mov
sbb
xor
jnp
jmp
adcl
jmp
sbbb
push
push
insb
test
inc
jne
fstpl
out
pushl
or
fildll
push
lods
test
test
mov
push
in
fsubrs
push
fbstp
sub
das
pop
pop
in
jmp
fnstcw
nop
je
loop
incl
rclb
jo
cli
adc
fcom
dec
sbb
push
and
in
cmc
xchg
jne
subl
movb
and
xchg
stc
test
repnz
ja
mov
aam
inc
fnstenv
jge
push
mov
sbb
decl
mov
pop
mulb
negb
add
cmp
jg
jno
fnsave
jg
pop
call
ret
decb
test
sbb
sarb
clc
in
push
clc
ds
mov
movsb
push
xor
mull
or
jno
mov
je
arpl
jmp
cmp
sbb
dec
jecxz
xchg
cmp
scas
dec
sbb
jmp
lahf
dec
mov
pop
dec
mov
add
shrl
imul
lea
mov
add
lret
ror
movsb
loope
or
aaa
incb
in
xchg
sub
aaa
cli
cmp
mov
cmp
xchg
into
cmpsb
fcomps
jg
mov
daa
add
iret
lcall
add
insl
pushf
pop
sub
push
aaa
daa
jp
je
stos
stos
cmp
sub
mov
and
adc
fildl
in
jno
pop
inc
or
scas
pop
pushf
fisttpll
clc
mov
mov
pushl
inc
mov
mov
cmp
dec
out
std
add
js
fnstcw
inc
push
mov
pop
xor
adc
das
movsl
push
outsl
popf
sub
mov
pop
mov
iret
faddp
les
xchg
scas
std
data16
dec
inc
and
mov
idivl
adc
aaa
std
call
mov
jmp
test
push
mov
xor
mov
decl
sub
or
sub
adc
inc
xor
divl
mov
in
sarl
mov
fwait
mov
daa
jmp
into
imul
pushl
inc
ret
ret
movsl
ljmp
sbb
jb
outsl
inc
mov
aaa
add
jnp
mov
ds
inc
add
movsb
cmpsb
xor
inc
sub
lock
push
lahf
mov
or
xor
mov
iret
sahf
push
fiaddl
jmp
loop
inc
jg
inc
pop
cmpsb
inc
fwait
rcl
test
jmp
addr16
scas
lods
movsl
or
enter
stos
adc
push
into
mov
frstor
jmp
cwtl
insb
and
pushf
int
je
mov
rol
inc
xor
inc
mov
ljmp
mov
pop
test
stc
inc
in
sbb
imul
decl
mov
mov
mov
arpl
icebp
jecxz
adc
adc
cmp
xor
mov
filds
pop
rolb
mov
arpl
movsl
pop
loopne
jge
out
xchg
incl
jge
sub
jne
int3
stos
pop
aad
ret
sub
sbb
inc
in
cmpsb
mov
lea
sar
movsl
sbb
dec
inc
ljmp
lods
xor
lcall
mov
lcall
jae
dec
mov
or
xchg
push
in
xor
mov
jno
js
and
test
aaa
mov
jnp
jb
les
je
test
loopne
push
jecxz
xor
test
fadds
xchg
dec
rolb
push
in
pop
add
inc
ja
ljmp
xchg
jno
jae
movsb
pop
scas
outsl
mov
adc
dec
push
xchg
xchg
hlt
in
stos
sub
fcoms
ljmp
mov
mov
pop
adc
andl
push
xor
jno
incl
flds
sar
push
mov
rorl
jmp
push
inc
adc
dec
xchg
addr16
dec
dec
or
sub
cld
outsl
cld
pushl
je
mov
sti
inc
and
mov
inc
rclb
push
lcall
lahf
jmp
or
sbb
mov
pop
out
push
shlb
aam
mov
mov
xlat
sbb
imul
xor
pushl
call
sub
pop
out
sbb
mov
sub
daa
lds
ljmp
adc
inc
dec
jmp
lods
pop
xchg
repz
xchg
pop
ljmp
aad
adc
popa
gs
sbb
lcall
mov
lret
and
ret
out
data16
jp
loop
incl
fildl
or
insb
std
pop
dec
subl
lcall
jo
std
in
dec
frstor
sub
les
addr16
push
pusha
mov
das
hlt
xor
repz
dec
std
adc
adc
jbe
pushl
jnp
negl
sub
fiaddl
push
jb
mov
ret
push
lods
mov
cmp
mov
push
fucomip
ljmp
or
outsb
and
mov
or
incl
dec
mov
cmp
daa
dec
jo
out
call
dec
or
cmpsb
lahf
mov
fnstsw
cli
cld
incl
out
sbb
paddsb
jmp
xor
and
sub
jmp
jp
mov
lret
aaa
rorb
cmp
jbe
in
inc
sub
in
jg
popl
jae
cmp
loope
mov
fwait
jne
fucomip
rclb
in
mov
jmp
pusha
dec
pop
cmpsb
mov
xchg
in
inc
sbb
popa
frstor
jg
xchg
cmp
incb
fnstsw
mov
cmpsl
pop
sbb
insl
mov
mov
fiadds
xor
daa
shll
imul
call
jmp
pop
cs
fnstenv
ret
and
add
mov
sbb
ret
add
xor
add
rcll
mov
lret
mov
lock
mov
mov
xchg
sbb
aad
in
inc
stc
out
cmp
xor
aaa
pop
xor
shrb
fdivs
sub
sahf
adc
notb
pop
arpl
and
xor
popa
dec
test
scas
push
div
fmuls
decl
lahf
pop
scas
dec
jle
je
push
test
push
fsubrl
lret
or
jmp
dec
mov
stos
push
jmp
jl
add
aaa
push
cmp
jg
outsl
fistps
repnz
rorb
push
sub
sub
clc
out
arpl
cmpsb
sbbb
lea
aam
cld
dec
into
xchg
sub
pop
jl
fists
outsb
or
out
or
xchg
ljmp
in
push
cli
imul
push
aam
inc
lock
cltd
cmp
xchg
outsl
icebp
incl
lret
ret
sub
cwtl
sbb
scas
aam
and
test
out
lea
push
in
mov
dec
daa
jae
mov
test
jg
push
mov
fmuls
xor
pushl
mov
cmp
xchg
pusha
fsubl
sub
decl
xor
push
dec
jg
adc
fs
inc
scas
add
call
hlt
das
add
push
xor
mov
lret
out
jb
sar
lcall
cld
jle
imul
pop
scas
pop
push
mov
and
adc
mov
aas
add
jmp
mov
out
sub
enter
xlat
aam
push
in
jne
pushl
orl
cmpl
xor
addr16
ret
incl
adc
push
mov
jg
fdiv
add
das
scas
stos
in
pop
clc
jns
cwtl
sbb
fstl
add
orl
sbb
cltd
call
lret
push
mov
add
aas
fisubs
repz
nop
clc
pop
fsts
mov
push
nop
or
jne
sbb
ljmp
outsb
xor
ret
dec
pushl
aas
mov
std
or
fwait
jnp
xor
pop
arpl
pusha
lods
inc
adc
popf
sub
imul
out
and
sub
pushl
imul
pushf
sahf
pop
sub
mov
xchg
xchg
pop
mov
pop
fisubs
aaa
mov
scas
and
push
mov
dec
mov
fisttps
pop
cmp
popa
call
pop
jp
adc
mov
mov
or
mov
pop
jmp
test
insb
and
add
ljmp
inc
xlat
jns
ljmp
add
lcall
mov
fcomp
test
jb
pop
mov
and
mov
add
inc
mov
inc
cli
mov
adc
sbb
sti
pop
xchg
xor
jb
add
xchg
idivl
push
or
mov
hlt
jg
or
inc
cmpsb
cmp
in
mov
jge
xchg
mov
and
push
mov
mov
push
adc
outsb
jnp
mov
push
or
or
sub
fiaddl
sti
jnp
cmp
mov
jnp
mov
inc
or
scas
icebp
push
jo
std
mov
gs
mov
mov
pop
lahf
cmp
mov
jg
pop
out
sbb
sub
cld
sub
cwtl
sub
cmpsb
push
shll
adc
mov
repz
push
pop
and
dec
xor
lret
outsl
inc
and
decl
loope
int
xor
aad
in
loop
inc
gs
cwtl
lea
add
sub
std
call
lea
mov
rclb
mov
cmp
mov
icebp
jmp
and
out
mulb
hlt
decl
jo
sub
hlt
cmp
andl
mov
cld
mov
std
mov
aas
mov
inc
lret
loopne
lret
xor
jbe
push
or
movb
movsl
stos
cmp
cmp
jg
int3
fucomp
mov
imul
pushf
fidivs
ret
loopne
imul
dec
sbb
hlt
dec
adc
inc
inc
pop
rcrb
arpl
insl
bound
decl
rolb
jb
cmp
out
adc
sbb
into
cmp
inc
adc
dec
inc
push
imul
cmp
cmp
into
andb
add
inc
mov
test
jle
loope
cli
incl
jns
gs
push
enter
cmp
mov
shlb
mov
xchg
cld
push
push
imul
dec
nop
pushl
sbb
jne
adc
je
push
data16
mov
mov
pushl
cmp
clc
push
sub
push
mov
inc
iret
mov
rcrl
ljmp
hlt
loope
out
lahf
xchg
mov
sub
pop
adc
adcl
or
pop
lahf
ret
imul
lcall
clc
jl
xchg
scas
sbb
adc
or
loop
outsb
or
js
jmp
in
pop
push
pop
jg
xchg
xor
orb
inc
add
jmp
lret
jl
lea
inc
test
or
or
mov
sub
mov
inc
scas
mov
std
or
int
xchg
sub
into
je
in
mov
mov
or
pusha
jb
lods
jp
or
and
jg
adc
std
dec
pop
cli
repz
ret
mov
lds
daa
ljmp
sub
mov
enter
mov
mov
outsl
sahf
pop
push
leave
inc
call
decl
push
inc
fdivrs
mov
sahf
out
xor
jno
or
or
fdivr
test
call
lods
dec
jno
dec
aam
int
push
add
imul
xchg
sbb
in
dec
fisubrl
cmp
jg
insl
ret
add
jl
fadd
push
lods
insl
pop
add
push
in
mov
incl
mov
push
mov
pushf
mov
push
es
mov
jo
or
mov
fists
sbb
dec
adc
dec
cmp
mov
daa
dec
decl
testl
test
mov
nop
push
daa
insl
inc
push
loope
ljmp
inc
adc
in
push
sti
fiadds
test
or
divb
cwtl
scas
icebp
popf
mov
fsubs
cli
ljmp
push
ret
sahf
into
inc
ss
pusha
jge
sbbl
in
or
jnp
adc
outsb
jl
xor
cmpsb
ret
adc
xchg
mov
mov
or
inc
outsl
mov
arpl
lods
push
fildll
jg
push
cmp
sbb
jae
mov
lret
jbe
in
and
sbb
incl
jo
mov
cmpsl
loope
add
aas
rclb
test
aas
xor
cld
dec
iret
daa
mov
jne
xlat
hlt
fwait
cs
mov
shl
mov
jns
shr
mov
repnz
jg
sub
inc
repz
inc
cltd
mov
jmp
push
out
jmp
sbb
mov
xchg
pop
jge
addl
cmp
or
and
pop
clc
popf
adc
xor
inc
inc
cmp
adc
push
rclb
pop
jae
jo
ret
cli
mov
les
incl
sub
jno
sub
mov
arpl
out
mov
push
in
lret
movsb
sahf
lods
dec
cld
pushl
add
mov
jp
xor
adc
push
pop
inc
cmp
cmpb
scas
push
pop
xchg
jmp
in
ljmp
push
loope
lods
fdivrl
gs
ljmp
mov
mov
cli
insl
out
jmp
sysexit
or
lds
dec
add
lcall
stos
mov
out
or
rcr
ret
xor
cwtl
push
popa
inc
es
add
incl
xchg
fldcw
sub
iret
mov
inc
lahf
and
js
and
ficomps
aam
push
push
mov
sbb
mov
or
fcmovnu
ljmp
in
pop
lock
decl
aas
pop
push
mov
dec
xor
outsl
push
cs
xor
xchg
in
pop
test
call
icebp
and
add
cmpsb
jl
in
lock
test
adc
jo
sbb
jge
aaa
loopne
pop
lock
sbb
ljmp
or
adc
les
pop
xchg
xlat
insb
ret
xor
lahf
test
bound
call
mov
cmc
xchg
or
je
add
pop
dec
aaa
push
pushl
jno
sub
pop
std
add
cmp
pop
or
popl
mov
or
jmp
or
daa
add
push
inc
cld
mov
cmp
in
push
mov
mov
bound
test
lahf
clc
out
mov
ljmp
in
jg
fcoml
daa
pushf
push
lods
movsb
clc
jmp
adc
and
mov
pushl
mov
insl
push
xor
add
repnz
jmp
leave
testl
fisubrs
dec
addl
pop
pop
jnp
das
jg
mov
mov
adc
mov
lods
add
cld
mov
scas
inc
lcall
inc
push
push
imul
push
lcall
test
daa
addr16
loopne
pop
loopne
inc
inc
xchg
popf
push
nop
addr16
ja
xchg
add
iret
add
mov
or
incl
lcall
jo
pop
out
inc
js
mov
fistpll
push
repz
xchg
loope
ljmp
aas
jl
mov
mov
cli
push
add
loope
enter
xorl
mov
jl
testl
cmp
and
cmp
mov
test
inc
inc
push
lcall
mov
adc
mov
pop
pop
and
ja
call
int3
gs
and
or
push
decl
ljmp
sbb
cmp
aam
mov
xchg
iret
ds
xlat
fucomip
dec
pop
mov
movsl
in
ds
lock
mov
mov
jae
in
mov
mov
xchg
or
adc
mov
popa
jl
mov
adc
dec
push
ret
stc
movmskps
jg
fildll
cmpsl
es
pop
cmp
hlt
data16
mov
mov
mov
lock
and
loopne
test
jecxz
inc
mov
add
popf
rcr
int3
cmc
fistpll
nop
ret
fstps
scas
fiaddl
jp
inc
jl
decb
stos
jg
movsl
mov
push
add
cmp
in
xor
clc
mov
lret
mov
jmp
dec
ret
ljmp
int
arpl
pop
inc
call
in
jns
xor
fidivl
repnz
clc
dec
aad
ljmp
decl
jae
movsb
lcall
das
mov
cmp
lret
int
rorb
mov
pop
jg
push
pop
int
mov
push
jge
add
mov
in
mov
call
aas
cwtl
mov
xchg
inc
movsl
and
push
jg
lds
or
and
adc
iret
xor
pushl
cmpsb
mov
shrl
or
cmpsb
dec
call
imul
int3
arpl
out
inc
adc
ja
xlat
test
icebp
push
mov
incb
xor
sbb
push
cltd
fists
sahf
stos
daa
pop
pop
das
mov
mov
stos
xor
push
xor
in
or
inc
test
mov
cmp
lcall
pop
xor
scas
jbe
mov
int
out
popaw
stos
adc
pop
xor
mov
ljmp
sub
xchg
cmp
jp
dec
jp
dec
ret
imul
lea
or
xlat
shrb
lock
adc
fwait
sub
pushl
notb
dec
cmpsl
int3
xor
adc
mov
int3
es
andb
jg
cmp
xor
in
mov
jmp
mov
mov
cmp
sbb
jg
mov
cmpsb
popa
fstpt
pop
and
loop
jle
cwtl
xor
and
push
nop
into
pop
ja
adc
iret
cld
aas
rclb
test
mov
jae
add
filds
int
and
cmc
call
fildll
sti
pop
pusha
repz
mov
das
incl
push
fistpl
fisttpll
daa
ret
js
out
mov
outsl
cmc
mov
lods
fnsave
insl
test
jnp
insb
xor
inc
shlb
push
dec
fdivrs
cmp
xchg
int3
sub
lods
popa
das
shll
inc
mov
and
sub
push
fmull
out
decl
add
sti
push
pop
dec
rcrl
les
and
jg
les
sub
xchg
mov
loopne
pop
cmp
add
jg
pushl
cli
sbb
push
add
xchg
mov
mov
and
std
jmp
xor
push
jns
cmp
xor
aad
xchg
adc
cld
imul
and
popf
xchg
cmpsb
xor
push
fbld
lods
mov
adc
pop
cmc
not
xor
push
and
incl
loop
xchg
push
mov
icebp
and
sbb
jmp
mov
testb
cmp
push
imul
pop
adc
fs
stos
ljmp
fmul
mov
or
dec
scas
inc
or
xchg
mov
aaa
pop
cmc
or
das
pop
mov
cmc
jg
scas
mov
add
je
arpl
adc
sbb
fcoms
jl
add
or
inc
xchg
mov
fmulp
adc
mov
not
and
cli
call
inc
repz
inc
sarb
push
push
fidivl
jae
decl
and
push
mov
cmp
inc
jp
xchg
cmp
jmp
ljmp
ficoml
jae
mov
xchg
call
sahf
inc
icebp
pop
aad
ret
push
fildll
imul
clc
repnz
orl
popa
test
mov
decl
into
jecxz
orl
pop
pop
mov
cs
jmp
or
in
nop
inc
inc
je
leave
mov
and
data16
mov
adcl
push
jne
call
pusha
push
mov
rclb
fists
jno
lods
pop
jg
call
xor
xor
ret
sti
mov
call
push
mov
cmp
insb
inc
movsb
sbb
fcmovnu
add
jle
pushf
or
adc
decl
cld
jecxz
shr
mov
xchg
divb
add
mov
movsl
ret
adc
mov
lret
stos
jmp
nop
rcrl
lods
mov
daa
sbb
iret
inc
ss
mov
mov
roll
inc
xchg
roll
jns
adc
dec
incl
xlat
cmp
xor
imul
pop
icebp
jmp
test
cmp
and
popf
xchg
cld
movsl
add
sub
insb
lret
shlb
pop
adc
push
jns
cld
lcall
mov
mov
or
lret
cmpsl
push
ja
enter
lcall
in
lret
push
and
push
rol
mov
mov
push
xchg
and
sbbl
inc
and
pop
fistpll
int3
and
xchg
add
jmp
mov
adcb
iret
pop
xchg
popf
rolb
dec
jl
pop
imul
cmpl
jmp
ja,pt
mov
popf
loopne
and
xchg
movsl
repnz
pop
jmp
andl
xor
pushl
dec
push
sahf
or
mov
iret
and
pop
mov
fsubr
push
jno
mov
mov
jmp
mov
dec
inc
mov
mov
mov
jg
xor
loope
je,pt
frstor
out
jbe
push
or
loopne
jne
mov
jb
xor
call
sbb
and
pop
adc
add
pop
jg
or
sbb
int3
incl
cmc
fwait
lahf
mov
mov
sub
movsb
and
cmp
call
pusha
mov
push
cmp
in
loope
cmp
mov
outsl
je
jle
push
imul
ds
pushl
sub
jp
push
adc
out
cmp
lock
cmpsb
mov
cmp
rcll
sbb
fld1
sbb
inc
scas
cld
cmp
jmp
xor
cltd
jl
xchg
mov
cmpsb
mov
bnd
mov
and
decl
std
pop
test
jg
lods
lret
xor
repnz
jg
into
mov
and
push
xlat
cli
ljmp
xor
add
ljmp
adc
scas
mov
adc
or
pop
push
dec
int3
fs
ljmp
call
fcoml
pop
test
movsb
pop
mov
aad
fwait
std
pop
clc
jg
mov
xchg
cmp
add
lret
adc
outsl
inc
decl
std
xchg
sbb
xchg
fimuls
imul
jbe
outsl
std
std
ret
xorl
aas
out
shlb
sub
cmpsl
sub
call
mov
pusha
sub
xor
je
test
jl
leave
gs
sbb
aam
sbb
incl
mov
mov
pop
cmpsb
es
jne
adc
lret
xor
enter
cld
push
loopne
in
pop
out
sbb
imul
adc
cmp
aam
cmp
fldt
sbb
stos
xor
jg
push
or
loope
xor
imul
hlt
jp
mov
jae
fmuls
inc
xchg
mov
decl
repnz
test
push
sub
jne
inc
dec
sbb
jg
jmp
scas
popf
gs
jnp
mov
and
cmp
call
dec
push
cwtl
sti
add
cs
sub
adc
adc
test
fsubrl
jecxz
pop
incl
inc
scas
xchg
xchg
cli
int
rol
or
jb
int3
int
mov
jb
mov
or
test
repnz
in
imul
clc
mov
ljmp
pop
lods
sbb
add
nop
rcrb
dec
cmp
cld
call
sarb
lahf
sub
test
mov
pop
ja
and
cwtl
jp
cld
fucomip
dec
jnp
cmp
xor
add
int3
sub
ret
sbb
ljmp
inc
fs
push
mov
sbb
xor
loop
cltd
negl
pushl
into
sbb
les
sub
mov
mov
push
and
aas
pushl
push
xor
inc
std
adc
mov
add
sar
mov
fsubs
cwtl
repnz
addr16
movsl
imul
jg
ficomps
xchg
push
and
addr16
ret
adc
lock
sub
stc
push
push
push
ja
xchg
insb
loope
dec
inc
insl
push
sbb
subb
inc
push
push
sub
mov
mov
cli
jg
ficomps
or
sbb
scas
mov
mov
dec
std
pop
fadds
lods
dec
push
cmpsl
xchg
xlat
mov
dec
clc
mov
jg
sbb
loop
iret
push
sahf
push
insl
xchg
lcall
dec
aas
lcall
jo
pop
ja
adc
vmulpd
test
lcall
call
mov
or
add
jno
shl
and
cmp
xchg
mov
mov
out
adc
adc
repz
mov
stos
inc
jo
call
mov
jb
xchg
adc
sar
jg
aad
sbb
jbe
jb
dec
mov
adc
xchg
add
test
and
mov
sbb
clc
call
jmp
push
cmpsb
inc
add
stc
subb
inc
add
stos
cmp
bound
mov
mov
inc
mov
jecxz
cmpsl
imul
and
and
imul
in
dec
mov
jmp
frstor
decb
mov
lret
jae
mov
inc
leave
and
incl
adc
mov
addl
aam
mov
mov
sbb
pop
cmp
lea
pop
fwait
push
inc
das
dec
add
leave
fdivrl
leave
test
ja
adc
daa
mov
inc
arpl
dec
push
or
push
mov
jecxz
jae
jl
into
and
mov
inc
mov
add
inc
jp
push
fldt
push
xchg
ret
lock
inc
sbb
repz
out
fisttps
add
fwait
arpl
cs
xor
jecxz
movsl
mov
adc
leave
lods
sahf
into
mov
out
je
ret
scas
stos
lods
dec
popf
bound
rclb
bound
xor
call
cmc
mov
loopne
test
stos
jg
shrb
jmp
cmp
stos
xchg
mov
loope
pop
insl
xchg
ja
inc
jmp
je
pop
lret
inc
xor
test
inc
jno
adc
lods
dec
aas
mov
xchg
inc
mov
or
ja
dec
lahf
inc
or
or
call
jle
scas
jns
jb
push
push
loopne
push
dec
mov
jmp
rclb
xor
mov
adc
call
xchg
push
rolb
push
scas
imul
adc
cmpsb
imul
and
je
lret
push
mov
bound
inc
popf
incl
xchg
movsb
enter
mov
dec
and
xor
dec
popf
jl
outsl
ficoml
movsl
lcall
inc
mov
pop
mov
inc
pop
fs
lock
add
decl
lds
scas
ret
lods
push
testl
std
pop
sub
pop
and
dec
inc
int3
pop
in
in
fstl
js
sub
sbb
inc
push
xor
ljmp
add
push
mov
mov
and
cmpsb
push
shr
js
lcall
test
mov
imulb
mov
xor
or
ds
cmp
xlat
rdpmc
dec
pop
mov
out
ret
hlt
in
mov
adc
pop
nop
getsec
cwtl
loop
xlat
xchg
inc
outsl
inc
mov
mov
fisubrl
sub
pop
sahf
in
push
jns
mov
lcall
jl
add
adc
jle
mov
mov
fldl
mov
jecxz
std
decl
mov
lock
scas
out
fadd
mov
pushf
stos
mov
jg
push
cmp
cmp
xchg
in
notl
or
andl
jae
inc
cli
cs
jo
sahf
test
jb
push
nop
faddp
mov
hlt
loope
ljmp
pmulhuw
int
in
outsb
insb
mov
lret
out
mov
xchg
inc
lds
in
xchg
mov
fdivs
or
jne
push
jmp
sti
mov
stos
pusha
jmp
xor
iret
cmpsb
adc
sub
ja
inc
and
mov
shrl
loopne
push
ds
inc
popf
ret
mov
jb
daa
push
add
decl
dec
push
cmp
cmp
adc
jmp
jb
cli
fisubl
and
clc
pop
repnz
mov
xchg
jnp
lcall
sar
cld
rorb
or
add
insb
lahf
fdivrp
mov
pop
mov
xchg
cmpsb
push
mov
xchg
and
ret
cmp
pop
mov
aas
sti
pop
ja
shlb
subb
ljmp
inc
stos
addr16
sti
jbe
mov
repnz
dec
mov
or
pushl
movsb
stos
jle
jecxz
cmp
nop
out
dec
stos
jl
mov
cmp
cmc
jmp
push
xchg
mov
push
cmp
sbbl
mov
xchg
xchg
and
insl
mov
outsl
mov
dec
popf
lcall
scas
fwait
iret
jge
ljmp
sbb
lret
jae
subl
mov
mov
call
incl
cmp
shl
shld
div
aam
in
es
inc
pop
pop
jle
xor
test
test
inc
and
jmp
and
loope
pop
mov
mov
sub
and
mov
inc
xchg
out
xchg
jae
mov
lcall
dec
outsb
and
push
daa
dec
repnz
cmp
stos
cmp
adc
pushl
adc
pop
adc
mov
lret
pop
cmp
cli
lcall
and
inc
add
int
insl
bound
ds
sbb
xor
shrl
mov
pop
pop
stos
sbb
mov
aas
cmp
dec
lock
std
jg
cmpsl
push
push
data16
add
in
decl
xor
jbe
xor
sbb
ljmp
movsl
add
mov
mov
test
popa
ljmp
and
cli
out
push
subl
icebp
add
jle
xor
data16
push
js,pn
sbb
push
loopne
jge
xchg
ljmp
fldt
ja
xor
cmpb
add
negl
fistps
lcall
xchg
mov
inc
xchg
and
sub
xlat
lcall
inc
mov
mov
dec
mov
rep
cmp
or
cmpsb
xlat
imul
popf
inc
incl
leave
jle
lods
push
outsb
pop
pop
cmpsb
jl
sbb
cmc
jmp
repnz
shlb
lahf
rolb
fistps
out
cmp
call
in
daa
cmpb
push
inc
out
dec
sti
cmpsb
mov
xor
sti
cmp
push
mov
idiv
in
push
fsubrl
xor
cmpb
stc
adc
add
cmp
mov
les
fmuls
sahf
orb
jbe
push
xor
out
mov
jmp
mov
push
dec
pop
xorl
gs
stos
inc
enter
dec
lret
lahf
dec
in
mov
aad
cltd
mov
sbb
sub
gs
dec
bound
dec
jno
mov
in
test
sbb
mov
cwtl
xchg
nop
fistps
inc
adc
mov
ja
jp
test
rclb
in
ds
dec
jecxz
outsb
jmp
cwtl
movsb
push
inc
rcll
pop
mov
loopne
or
int
xchg
lret
loop
adc
call
jmp
mov
push
push
mov
stos
or
cli
jmp
push
mov
dec
pop
and
jge
xchg
stos
lods
add
cld
mov
push
fwait
out
xchg
sub
lcall
insl
xchg
sub
or
jl
cmpsl
icebp
aam
cmp
jg
mov
mov
outsb
repz
sar
inc
mov
scas
jae
push
or
das
push
or
sbb
sti
scas
mov
out
loopne
js
movsb
jnp
lods
push
jb
stos
mov
sbb
test
dec
jbe
les
add
inc
xchg
outsl
xchg
clc
jmp
sub
test
jle
dec
adcb
lock
pop
daa
dec
hlt
push
sub
fisubrl
jb
cmc
inc
imul
ja
ljmp
fiadds
dec
testl
dec
mov
push
pushf
fldcw
jmp
add
loope
stc
sub
flds
or
mov
jns
std
inc
pop
ljmp
push
push
pop
cld
lcall
cmp
dec
fs
mov
sbb
loop
ljmp
and
test
jns
pop
fbstp
lock
subl
push
xchg
xor
fildll
lods
insb
and
cs
lret
sbb
and
ja
scas
push
ljmp
hlt
push
cmpsl
push
lea
push
xlat
cltd
shrl
mov
cmpsb
mov
lods
popl
jnp
sbb
mov
mov
jecxz
call
imul
xchg
js
mov
mov
or
inc
cmp
repz
xchg
mov
data16
pushl
test
stc
adc
xor
mov
pop
imul
loop
fcmovu
out
lcall
sub
pusha
fwait
mov
je
dec
lcall
jmp
lcall
xor
ror
adc
sub
fucomip
testb
adc
inc
cmpsl
imull
jg
pop
lahf
adc
mov
fcmovne
mov
shrb
les
xor
push
jbe
push
or
jmp
push
pop
lea
jl
push
into
rol
and
das
std
ljmp
pushf
in
sahf
vpcmov
addl
xor
mov
lods
and
cmp
inc
in
and
jge
push
xor
test
add
imull
or
scas
enter
mov
clc
int3
or
push
movsb
push
add
mov
sar
call
and
mov
jbe
jb
sarb
fucom
mov
or
xor
jae
jg
pop
imul
push
add
decl
cmc
dec
cmp
jb
mov
xor
dec
cmc
sti
or
cmp
pop
loop
pushl
stc
out
addr16
dec
out
adc
sar
incl
arpl
jae
dec
mov
ljmp
jg
data16
jmp
dec
jp
das
and
arpl
xor
sub
mov
xchg
push
push
hlt
mov
loop
xchg
push
xor
int
arpl
jg
lcall
out
xlat
sbb
mov
xrelease
mov
test
adc
nop
cmp
and
mov
xlat
xor
jno
sbb
cmp
sbb
cmp
jmp
test
out
dec
and
ljmp
xchg
jg
or
ror
cwtl
int3
mov
shl
mov
sar
xor
call
addr16
jmp
sub
xchg
aas
test
mov
stos
ja
rcl
out
mov
ret
pusha
scas
enter
lods
rorb
lods
test
mov
xor
les
call
sbb
stc
cs
mov
xlat
jnp
xor
jo
and
pop
cmp
xor
hlt
jmp
lcall
cmp
lsl
push
imul
sbb
inc
enter
insl
push
incl
mov
outsb
rcl
sbb
push
cmp
in
fs
push
lea
mov
test
pop
mov
mov
ljmp
lret
add
cmp
pop
add
mov
adc
cs
call
dec
push
iret
clc
imul
sub
push
mov
testl
incl
and
jge
mov
lock
pop
mov
mov
ljmp
dec
rcrb
fisubs
dec
push
fisttps
adc
jno
iret
and
mov
icebp
and
xchg
into
repnz
movsb
inc
in
mov
sbb
mov
sub
or
dec
test
inc
cli
in
mov
ljmp
icebp
aaa
stos
mov
inc
lret
and
xlat
rolb
push
xor
js
dec
jg
decl
movzwl
incb
sub
xor
jg
xlat
xchg
scas
icebp
cmp
fdivr
lcall
loope
cmp
in
outsl
jno,pt
pop
cmp
test
push
dec
xchg
in
inc
comiss
call
push
cwtl
sub
inc
je
adc
push
fs
pop
mov
fisubrl
or
mov
enter
std
stos
js,pn
test
aaa
popa
xlat
inc
sbb
fdivrl
repz
jg
js
and
jnp
sbb
ds
cmp
pop
jl
call
loop
sarl
fwait
xchg
or
lcall
in
xchg
lret
cmp
stos
dec
mov
lret
cmp
push
scas
cmp
loopne
jmp
add
cmp
xor
xchg
sar
jb
pop
cmp
add
call
mov
xlat
leave
les
cltd
push
cli
ja
cmp
mov
jno
scas
inc
fucomip
call
sbb
insb
out
mov
push
and
pushf
ja
jmp
dec
mov
std
inc
stc
xchg
mov
gs
xor
shrl
xor
mov
popa
jg
ljmp
hlt
or
add
mov
jle
jmp
dec
cmp
and
ds
dec
data16
mov
enter
jmp
repnz
pop
dec
dec
notl
cmp
mov
jmp
dec
jp
ret
mov
shll
aad
fdiv
mull
out
fistl
std
and
stos
jg
jp
mov
popa
call
les
pop
ljmp
in
jmp
jg
repz
test
fcoml
or
pusha
or
int3
scas
jne
popa
in
inc
out
aaa
push
movsl
lods
dec
jo
sbb
jg
sub
sub
jno
mov
xor
inc
mov
jg
inc
hlt
lea
idivl
push
xchg
test
lahf
push
cmc
inc
clc
mov
dec
sbb
out
inc
decl
cld
jae
and
xchg
fcomi
hlt
mov
lods
mov
xor
push
inc
test
add
xor
lds
push
sbb
in
jmp
xchg
in
mov
lock
mov
lock
rol
mov
mov
mov
ljmp
iret
jmp
fwait
mov
popa
inc
iret
push
pop
loop
cmp
pop
adc
ret
sbb
mov
aad
pushf
adc
call
push
and
jmp
pop
dec
mov
popf
test
or
pushf
inc
sbb
jge
mov
jbe
jno
loop
or
insb
or
ljmp
testl
add
lea
xchg
mov
jg
xchg
and
ud2
lahf
ja
mov
or
cmc
subl
idiv
mov
mov
xor
mov
repnz
jg
cmp
cltd
and
mov
gs
cmpsb
xor
fildl
call
or
je
pusha
test
mov
lcall
adc
addr16
fcompl
inc
add
sahf
inc
or
dec
push
jg
call
pop
or
sbbb
arpl
dec
dec
push
pop
and
stos
push
incl
push
jp
or
sub
push
xlat
hlt
add
scas
dec
call
pop
add
inc
xor
mov
jb
shlb
test
and
cmp
test
mov
xchg
pushf
ret
js
jg
out
je
cmp
test
inc
jge,pn
notl
xorb
test
decl
out
ret
sub
xor
xchg
mov
and
aaa
clc
incl
push
sahf
add
mov
mov
flds
call
fidivs
or
gs
adc
outsl
mov
inc
scas
lcall
pop
push
addr16
pop
repz
in
nop
cmpb
shrl
push
push
pop
aas
call
lods
movb
imul
out
push
sbb
data16
cli
decl
jecxz
mov
mov
mov
loop
xor
enter
fbld
lret
insb
pop
mov
inc
out
push
inc
push
push
insb
cld
dec
outsb
xor
loope
or
out
fistps
lds
rcrl
decl
cwtl
sub
lods
sub
jbe
xchg
sub
test
stc
aaa
mov
scas
mov
adc
bound
xor
add
incl
xor
add
push
add
xor
mov
xchg
imul
xchg
out
sbb
dec
popa
xchg
fcompl
ret
lock
pop
jmp
fwait
ret
aad
dec
js
cmp
nop
jmp
out
xchg
jg
lcall
movsb
pop
shrb
ficoms
sbb
incl
cmp
mov
les
loopne
jecxz
jg
inc
and
icebp
lock
xchg
sarl
ja
add
outsl
mov
loopne
xorb
or
je
inc
push
and
fwait
scas
cmc
push
fisttpl
cmc
filds
inc
sbbb
cli
xchg
xor
outsl
outsb
mov
clc
dec
adc
xchg
xlat
sub
pop
cmp
sub
cmp
incl
xor
adc
push
lahf
jbe
imul
or
sub
jbe
cmp
xchg
clc
call
mov
fbld
mov
in
push
adc
jge
jp
cli
jmp
and
andb
lea
jae
cmc
enter
decl
cld
adc
add
vmwrite
repz
fst
hlt
sar
call
mov
push
mov
shlb
and
and
mov
mov
adc
sarl
rcrl
out
adc
aam
sbbb
jg
decl
cmpsb
mov
push
or
sub
push
cmp
decl
jge
jnp
popf
lret
in
cmp
adc
sbb
ljmp
jle
sub
js
ljmp
cmp
in
xchg
out
add
scas
mov
es
and
push
xchg
pop
scas
clc
das
aam
mov
xchg
lea
fisttpl
nop
outsl
aaa
cli
in
fbld
inc
push
dec
inc
lock
xchg
sub
push
inc
jmp
mov
decl
jle
add
nop
and
sub
mov
out
mov
mov
lcall
call
mov
sbb
int
lcall
mov
cwtl
ljmp
push
je
xor
xchg
idiv
enter
sub
jmp
inc
lock
dec
xor
cltd
adc
decl
cli
mov
fidivl
iret
loopne
sub
loope
dec
and
xor
je
je
mov
gs
pop
sbb
pop
mov
adc
mov
add
fs
mov
in
jg
pushl
gs
popa
popa
sbbb
frstor
and
mov
xchg
xchg
push
cwtl
lods
fsubl
sub
jl
adc
push
and
dec
cld
pushl
fs
push
cmp
dec
repnz
cs
ds
mov
movl
or
in
ret
dec
mov
fiadds
or
aas
mov
in
ljmp
es
fs
and
sbb
hlt
popa
push
movsl
pop
jge
jg
ljmp
mulb
pop
push
sti
ljmp
imul
in
testl
call
ja
imul
inc
dec
inc
jae
cmp
stos
incl
call
lods
clts
push
and
cmp
sbb
dec
movsb
mov
ljmp
lock
add
aas
psubw
push
xlat
sbb
mov
jb
subb
hlt
and
lahf
pusha
xchg
and
sbb
repnz
cmp
push
ljmp
pop
inc
dec
pop
or
mov
cmpsb
shrl
mov
adcb
sub
pushl
mov
stos
sbb
nop
flds
xchg
sub
sbb
shlb
and
pop
dec
in
mov
sbb
decl
and
dec
loope
rol
leave
jmp
mov
call
pushl
push
mov
inc
pushf
insb
sbb
xor
jp
and
in
mov
or
pop
pop
mov
fsubrs
gs
xchg
lcall
sbb
les
fcoml
push
inc
sbb
cmpsb
in
push
icebp
cmp
loopne
dec
inc
and
lret
lods
adc
mov
push
push
sub
cmc
loopne
and
call
ds
jb
stos
mov
add
xchg
jle
or
dec
dec
push
mov
mov
test
dec
pushl
ds
jecxz
add
add
bound
inc
push
mov
lret
cltd
idivl
sub
xor
mov
pop
cli
add
pop
enter
sub
leave
call
mov
orb
jns
scas
adc
fprem
xchg
aas
xchg
pop
inc
leave
xor
mov
xchg
push
jae
enter
push
jne
sbb
fistl
dec
dec
xchg
ljmp
mov
gs
jecxz
leave
xchg
lcall
cmp
repnz
sub
mov
mov
mov
cmp
pop
rol
out
sbb
shr
push
cld
mov
aam
push
in
xchg
pushf
cld
in
decl
mov
repz
push
mov
fwait
sbb
cli
xchg
test
imul
xchg
mov
sbb
cmp
sbb
call
mov
pop
push
cltd
mov
in
out
sar
outsl
xchg
sub
add
fstpl
andb
jg
outsl
jle
sbb
clc
mov
xor
sbb
jge
mov
outsl
std
add
xlat
test
jb
pop
out
mov
repnz
dec
cltd
rcll
cltd
rorb
sub
es
jnp
fsubrp
mov
pop
call
lcall
in
pop
outsl
pop
into
loop
fsubrs
mov
xor
fadd
out
in
dec
jnp
jmp
fsubr
and
or
insl
sub
bound
cmp
adc
sar
push
cmp
jle
pop
inc
and
xchg
jge
xor
cmp
daa
cld
adc
bound
arpl
jmp
scas
std
mov
cs
pop
loop
fs
fsubrs
jg
lret
mov
xchg
inc
adc
arpl
add
push
scas
fxch
push
adc
jne
xor
mov
cmpsl
cmpsb
mov
dec
int3
sbb
adc
mov
movsb
icebp
decl
xor
cltd
movl
rclb
movsb
daa
pmaxsw
sub
mov
testl
fs
lock
aad
lock
mov
mov
pop
stos
push
add
aam
popf
xor
mov
stc
sub
push
bound
xor
shl
jg
mov
pop
repz
lret
ftst
inc
mov
xchg
fisubrl
cmp
mov
push
stos
mov
test
rcll
fwait
insb
loopne
mov
cmp
adc
jnp
popf
jp
bound
cmpsb
pop
andb
jg
rcrl
mov
xchg
movsb
fnsave
sbb
inc
push
loope
mov
push
test
add
dec
mov
pop
loope
or
sarl
insl
dec
cwtl
jns
mov
lcall
mov
jl
sti
push
les
pop
cmp
loop
and
das
std
popa
xchg
arpl
jl
inc
popa
or
push
push
mov
jmp
sbb
jmp
adc
imul
push
sub
mov
sub
je
cmpsb
ds
pop
enter
pushf
jo
jecxz
add
fcmovnb
scas
mov
mov
je
int3
cmpsl
pop
adc
jle
in
loopne
insb
xor
dec
call
cli
aas
adc
movsb
pop
xor
sbb
jo
out
pop
or
outsl
hlt
fildll
outsl
adc
cmp
push
xlat
dec
jno
xchg
mov
outsl
hlt
push
jmp
movsb
out
adc
inc
cmp
mov
jg
sbb
mov
hlt
lret
call
sbb
cltd
out
inc
lret
inc
mov
es
dec
mov
mov
sbb
mov
sbb
rcll
xor
xchg
pop
cmc
out
xor
ljmp
hlt
xor
imul
push
fisubrs
fcoml
pop
std
pop
addb
andl
xchg
lods
test
mov
jl
sbb
mov
jp
mov
orl
push
mov
call
andb
mov
add
pushf
lea
mov
outsl
mov
pop
adc
loopne
mov
cmp
push
jnp
out
sbb
pop
out
loope
in
push
shll
enter
mov
js
jo
mov
adc
loope
shll
add
dec
in
clc
sub
lock
daa
rcll
cwtl
mul
cmpsb
lcall
and
mov
inc
jge
jae
push
push
dec
scas
dec
js
ret
in
add
movsb
dec
adc
sahf
push
stc
testl
test
push
add
sbb
xchg
jl
xchg
in
aam
dec
icebp
mov
es
popa
fisubl
roll
mov
mov
jecxz
fcos
mov
cmpsl
sub
mov
and
pushl
mov
xchg
sub
repnz
or
xchg
sbb
push
xchg
cmp
xor
ds
lods
stc
xor
outsb
shll
adc
push
cmp
mov
fsubl
mov
mov
sbb
dec
fbstp
mov
push
addr16
loop
sbb
jmp
sub
cmp
out
sahf
sub
loope
ja
repz
call
adc
pushl
push
mov
icebp
subl
inc
cltd
inc
adcb
cmp
test
xchg
and
mov
lret
pop
call
mov
add
aad
bound
sub
incl
mov
add
mov
hlt
or
xchg
outsl
in
add
incl
push
xor
cmp
mov
sbb
dec
cmp
jmp
aas
jmp
mov
roll
ds
jnp
scas
mov
mov
push
outsb
jo
mov
and
and
lods
mov
repz
pushl
cli
mov
xor
mov
aas
push
stos
stc
dec
pop
sub
mov
rcrb
repnz
outsb
lock
cmp
repz
mov
js
ds
pop
call
xchg
sti
adc
stos
es
js
addl
push
movsl
mov
mov
and
sub
or
or
movsl
ljmp
mov
mov
push
lahf
clc
sub
stos
xlat
into
mov
call
sbb
xchg
jbe
mov
add
adc
pop
lahf
jmp
movsl
cs
std
sub
adc
pushf
push
push
or
mov
imul
movsl
or
sbb
cmp
push
dec
std
push
xchg
testb
insb
pop
lcall
loope
dec
rolb
orl
pop
push
cmp
ds
inc
fsub
std
nop
fldenv
clc
sbb
adc
inc
inc
sarl
fwait
pop
xchg
xor
dec
aad
rcr
ss
test
clc
das
std
mov
sbb
cmp
lods
xchg
cmp
shl
sbb
call
jne
loopne
cld
mov
mov
xorl
fisubrl
inc
xchg
imul
jecxz
sub
lret
in
les
xor
rcrb
push
das
aad
add
cld
pop
cmp
mov
iret
fdivr
mov
sbb
mov
xor
nop
mov
jbe
add
das
adc
es
sub
pop
cli
mov
mov
xchg
sbb
xchg
lods
ret
insl
lret
jnp
shlb
jg
jg
scas
dec
shr
cmp
mov
dec
stos
cmpsb
jle
out
mov
loopne
sar
dec
sub
fwait
mov
push
sti
push
in
pushf
xchg
or
fistpll
or
xchg
mov
jns
in
push
jge
jmp
scas
jecxz
mov
clc
mov
jmp
sbb
and
ficoms
sub
fadds
push
mov
pop
repz
jg
mov
idivb
push
inc
scas
xchg
dec
jg
mov
ljmp
jbe
jge
scas
pop
push
or
loopne
sbb
pop
sub
xchg
pop
testl
idivl
mov
dec
setno
das
inc
sahf
adc
lock
js
aas
jg
repnz
push
repnz
jg
or
xchg
hlt
scas
cld
insb
repz
and
jmp
pop
repz
mov
pop
call
nop
scas
add
jg
iret
push
insb
les
jns
jle
mov
lcall
outsl
pop
das
jne
jno
push
cmc
inc
mov
jecxz
inc
mov
xchg
cltd
mov
lods
outsb
in
cmp
fisubs
or
mov
fisubs
pslld
idiv
call
decl
stos
xor
loopne
aas
adcl
add
aad
lods
test
gs
cmp
ljmp
shrl
xor
mov
test
xor
mov
adc
dec
popf
sub
ds
jl
orb
mov
xchg
js
js
lahf
and
fdivrp
decl
cwtl
sub
ss
mov
jecxz
add
xor
sub
mov
pop
pop
pop
call
lret
adc
pushf
xor
decl
sbbb
test
jmp
in
jmp
aas
out
sti
cmc
cmp
movsl
nop
sbb
or
jmp
xchg
loope
rolb
xor
shl
std
push
outsb
cmpsl
icebp
arpl
in
jle
cld
sbb
jno
xor
inc
repnz
push
cwtl
cmpsb
cld
mov
decl
test
pop
fisubl
addb
bound
push
lret
into
cmp
push
outsl
stc
inc
out
iret
aaa
cwtl
or
mov
or
sub
nop
pusha
outsl
xchg
mov
movsb
adc
lds
lcall
xor
test
xchg
or
ret
jns
jg
mov
xchg
jo
movsb
pushl
mov
roll
dec
xor
push
ffree
jle
lock
lret
dec
sub
call
std
pop
xchg
xchg
popa
lods
mov
aad
mov
jmp
ljmp
sub
cltd
pop
loopne
js
sbb
imul
stos
inc
test
xchg
sar
inc
xchg
icebp
fdivrl
outsb
mov
cli
dec
fwait
mov
mov
xlat
rcll
mov
pop
mov
adc
hlt
mov
pop
mov
dec
rcl
out
test
push
mov
call
pusha
xchg
sub
int3
mov
mov
push
mov
test
and
xor
lret
sub
adc
cld
cmpsl
mov
out
loop
inc
xchg
push
out
fildll
hlt
or
cld
rorb
pop
jmp
add
xor
xor
lods
push
sbb
cmpsl
adc
and
jp
std
mov
bnd
out
or
idiv
push
decl
push
mov
dec
data16
pop
mov
loop
rcr
or
push
lcall
jno
dec
sbb
inc
cmp
dec
mov
stos
insb
xor
decl
jl
scas
in
stos
jge
sub
loopne
adc
xchg
jecxz
inc
push
or
arpl
cmc
cwtl
jbe
imul
or
pop
and
cmp
pushl
xor
inc
sbb
int3
adc
daa
sbb
test
and
bound
mov
or
insl
loope
out
mov
pop
inc
xchg
cmpsl
xchg
int
mov
lea
and
push
mov
pop
xchg
push
fistpll
pusha
jg
inc
cmp
imul
xor
in
repnz
pop
dec
jmp
mov
adc
push
ret
ret
aad
sbb
xchg
hlt
aaa
cli
fisttps
stos
andl
mov
jg
mov
fdivp
xor
adc
adc
jne
imul
loopne
push
inc
and
popf
out
add
iret
mov
les
ffreep
push
iret
imul
xor
shll
add
iret
jle
gs
paddsb
decl
addb
int3
dec
cmp
lret
mov
xchg
pop
push
push
cmp
hlt
insl
pushf
mov
mov
movsb
ja
rol
movl
into
in
push
movsl
pushf
adcb
pop
sahf
push
jbe
pop
out
or
cmp
add
into
push
lds
mov
xchg
leave
lock
ljmp
lock
mov
and
in
sbb
mov
nop
sti
in
decl
ljmp
cld
xchg
sahf
scas
ss
adc
adc
ljmp
cmp
outsb
incl
mov
pop
je
lcall
sete
test
int3
adc
iret
sahf
repnz
mov
insb
call
cmp
sub
jno
xchg
outsb
lret
mov
stos
test
sub
mov
loop
call
insl
stc
dec
jl
jnp
sbb
pop
sub
shll
icebp
xor
cld
push
sub
cwtl
cmp
mov
lahf
adc
incl
jmp
jo
into
ja
sub
psraw
lcall
or
or
jne
push
cmp
jbe
sarb
insl
pop
mov
inc
movsl
mov
and
test
add
adc
xchg
add
pop
sub
add
popf
mov
test
jg
aas
push
ds
adc
aas
popa
mov
clc
mov
in
cwtl
fldcw
or
or
push
or
cld
ljmp
stos
jp
mov
pop
xchg
mov
jmp
pushf
popf
add
rorb
or
ret
cli
mov
dec
mov
add
mov
sbb
cmp
mov
pop
lds
mov
pop
imul
lret
popf
shl
cmp
jae
mov
ja
fisubrl
cmp
dec
cmp
out
xor
jne
sti
xor
call
sti
lea
aam
cmc
call
sbb
sub
push
xor
jo
gs
push
out
fbld
rclb
les
cld
mov
in
mov
cmp
jmp
jb
ljmp
cmpsb
fiadds
imul
fists
incl
insb
cmpsl
xchg
fwait
dec
or
jp
mov
movsb
mov
jnp
push
jmp
push
or
ljmp
mov
nop
in
push
cld
mov
xchg
icebp
xchg
nop
dec
leave
faddp
les
ljmp
sarb
xor
ja
andl
inc
sar
sbb
sub
orb
pushl
movsb
popf
jmp
push
in
rolb
sar
ljmp
cmpsl
or
lret
movsl
pop
add
fdiv
mov
mov
lret
aad
bound
xchg
outsb
dec
lret
jge
sbb
mov
jmp
aad
push
and
scas
ljmp
or
jg
aas
mov
add
push
cmp
pop
sbb
pop
in
xchg
dec
mov
sub
jmp
fnstcw
incl
call
shlb
das
out
mov
movsb
leave
or
decl
mov
and
xchg
jno
dec
imul
sbb
test
enter
sub
mov
ljmp
cld
push
sbb
jp
fnstsw
aam
pushw
inc
jnp
lcall
out
pusha
ret
clc
and
push
mov
cli
dec
pop
scas
mov
jle
push
sbb
in
popf
fsubrs
xor
or
mov
inc
jmp
cmc
dec
mov
or
ret
leave
int
test
pop
xor
jbe
imul
dec
mov
icebp
incl
and
pop
jbe
aas
mov
sub
leave
mov
inc
and
add
inc
outsl
mov
fistl
mov
cmp
cli
jno
sbb
pushl
inc
add
mov
testb
cmc
imul
cli
jg
lods
push
aaa
stos
pop
movsl
xor
add
fmul
sub
add
push
jecxz
fidivrl
sbb
jp
or
sarb
dec
gs
repz
push
into
fdivr
pop
mov
decl
faddl
inc
cmp
or
call
push
push
push
not
sub
enter
inc
cmp
xor
mulb
sar
lcall
lea
cli
loop
imul
lds
mov
incl
es
adc
jl
icebp
movsl
daa
or
fdivl
mov
cld
jge
push
inc
outsb
enter
mov
xchg
cmpsb
adc
ljmp
decl
in
scas
inc
mov
pop
inc
mov
jp
pop
out
push
jns
das
cld
movsl
mov
insl
jmp
xchg
dec
gs
ljmp
push
jl
sbb
js
or
jecxz
jmp
or
xchg
clc
out
pop
mov
rcll
mov
popl
sahf
cmp
and
cmp
out
sbb
adc
sub
lods
xor
in
not
xor
jmp
loope
pop
test
pop
data16
aaa
dec
add
cs
stos
movsb
rorl
lock
ss
sti
push
and
repnz
xchg
ret
decl
add
mov
inc
fcmovnb
roll
mov
sub
lock
jge
ljmp
jge
pop
mov
mov
cli
out
negb
flds
and
jmp
and
jg
aam
pop
and
inc
lods
repz
cltd
testb
ljmp
fsubrl
dec
lcall
mov
pop
cmp
dec
mov
pusha
lcall
add
pop
icebp
sbb
dec
outsl
sub
dec
test
enter
sbb
mov
cmpl
out
loope
test
or
lock
lcall
sbb
jg
repz
out
loopne
mov
mov
pop
dec
push
jp
ljmp
pushl
and
cmpsl
xchg
arpl
jle
and
gs
je
cli
dec
std
inc
mov
inc
fsubp
cmp
ja
scas
cmp
stos
cltd
xor
std
call
lods
fwait
cmp
lret
xor
js
ljmp
add
imul
push
and
xor
sti
mov
cld
jmp
or
imul
testl
mov
aaa
int3
fisubs
mov
jmp
inc
insb
push
pop
sti
popf
inc
or
rol
inc
jge
jp
orl
sbb
rcrl
stos
icebp
icebp
sub
roll
pushl
and
cs
sub
add
mov
mov
jge
sahf
sti
or
loope
ret
ficoml
jo
out
icebp
iret
mov
jo
jns
lcall
rcrl
sti
inc
xor
lret
femms
xlat
xchg
clc
call
pop
loop
fmull
jne
shl
sbb
outsb
adc
sub
pop
xchg
sub
xchg
and
add
add
sbb
sar
sbb
push
js
or
and
aas
aaa
popf
dec
push
cs
lcall
hlt
je
cltd
and
pop
push
in
jg
movsl
in
rorl
lret
pushl
loopne
adc
adcb
dec
lock
pop
pushf
dec
enter
je
cs
push
cltd
xor
or
ljmp
xor
inc
jg
loopne
mov
inc
jae
daa
cmp
mov
mov
push
sub
outsb
rcrl
movsb
das
mov
adc
xor
add
push
in
pop
in
inc
adc
mov
or
jno
incl
inc
jl
mov
sbb
mov
imull
push
aam
and
lsl
cmp
out
rcl
inc
stos
push
cmp
fwait
cmpsl
add
decl
ds
addr16
popa
fistl
and
add
rorl
cmp
mov
divl
lcall
decl
push
dec
fistpll
leave
lods
push
sub
in
and
movsl
imul
data16
mov
push
les
cmpsl
outsl
inc
icebp
jg
dec
sbb
into
popf
mov
pop
push
hlt
incl
mov
das
push
fnstsw
daa
ficoml
mov
xchg
adc
call
stos
mov
mov
xchg
jbe
sub
sbb
jle
shr
aam
sub
mov
mov
sbb
xor
cmp
mov
enter
pop
mov
jle
push
jno
lds
decl
inc
arpl
mov
add
adc
rol
cld
ljmp
mov
inc
js
jnp
test
mov
jl
or
fcoml
outsb
repz
decl
enter
fwait
xchg
xor
cmc
dec
jns
cli
std
push
jmp
hlt
out
movsb
outsl
cmpsl
inc
adc
aad
cli
xlat
jge
mov
loopne
dec
add
dec
and
fwait
and
enter
xor
movsl
ljmp
movl
daa
mov
hlt
ret
adc
dec
xor
lcall
cld
mov
mov
xor
rcll
xchg
xchg
jbe
nop
pop
xchg
pushl
sub
xor
fcmovbe
ds
mov
imul
cmp
sub
pushl
pop
sbb
pop
jge
sub
data16
push
es
mov
pusha
mov
in
fdivr
repz
fsubp
gs
ds
fstpl
or
or
int3
sbb
mov
push
in
add
adc
ljmp
lret
jnp
push
mov
sub
adc
jmp
cmp
mov
sbb
out
insb
xor
pop
jmp
std
call
mov
xor
movsb
jg
pushl
leave
jo
mov
cmp
stos
xchg
cmp
out
pop
mov
lea
icebp
sbb
cmp
cmp
in
test
inc
jmp
jmp
push
fs
into
inc
cwtl
pop
mov
loope
adc
out
xchg
sub
and
inc
popf
mov
aas
cltd
mov
sbb
repnz
jmp
incl
push
icebp
shll
ret
xchg
fbstp
and
mov
shll
addb
pop
rcr
ret
sub
das
std
decl
jno
lahf
int3
repz
jp
icebp
xchg
pop
fmull
cmp
fdivrp
push
cli
pop
cli
decl
scas
cmp
test
leave
sub
pushf
ds
xor
mov
pushl
outsl
mov
pop
test
sbb
std
mov
jbe
lds
pop
xor
add
xchg
pop
push
sub
and
into
rolb
cmp
stos
mov
fildll
or
xlat
mov
mov
hlt
and
out
scas
mov
loope
scas
stc
or
lcall
add
mov
sbb
aam
pushf
cli
cmp
rolb
pushf
stc
sbb
mov
outsl
jg
ds
cld
ljmp
js
push
or
push
js
mov
jmp
shll
mov
mov
loope
xor
in
pop
out
idivl
shrb
pop
ljmp
call
mov
mov
ds
push
out
xchg
mov
xchg
pop
push
int
out
jmp
movsb
mov
stos
std
scas
mov
cltd
mov
jle
lcall
sub
inc
std
es
adc
les
adc
jge
inc
jo
ret
jo
cli
enter
push
sub
in
and
imul
dec
cwtl
test
or
ljmp
popa
mov
sbb
cmp
bound
daa
mov
cli
xor
test
loopne
cmp
mov
test
pop
or
or
mov
xchg
lods
aas
pop
je
xlat
ljmp
call
jb
pop
les
jae
jp
dec
jnp
popa
clc
jb
cli
ljmp
mov
outsl
inc
fcoml
int3
xor
iret
mov
imul
jle
loope
inc
inc
mov
es
mov
lahf
jg
jle
lods
add
pushl
dec
mov
jbe
arpl
push
jne
pop
sub
test
cmp
inc
dec
mov
xchg
jne
je
sub
insb
mov
add
sub
cld
dec
cmpsb
in
add
rcl
mov
mov
fdivl
push
test
push
xchg
test
sub
sub
xchg
hlt
fs
lret
ja
cmp
or
sub
xchg
dec
xchg
movsl
clc
and
clc
lcall
faddl
out
fcmove
cmp
mov
dec
movsl
rcll
or
clc
pop
lea
in
xor
arpl
int
or
pop
adc
sbb
sub
sbb
test
push
jg
incl
jno
lahf
xchg
mov
dec
fs
jno
shll
cmp
mov
cmc
and
test
adc
push
arpl
outsl
add
roll
leave
mov
mov
pop
shl
lods
mov
sti
dec
lods
pop
aaa
out
ret
push
fucomip
jg
sub
in
jmp
mov
pop
lods
cmp
aam
xor
pop
mov
aaa
cli
ljmp
push
jmp
jnp
js
sub
xor
pop
ljmp
loopne
jg
call
cmp
mov
subl
jge
aaa
sar
mov
call
cltd
push
jnp
push
loopne
lret
addr16
mov
test
mov
or
adc
call
aas
add
scas
fwait
adc
mov
sbb
xchg
ss
dec
sbb
and
in
xor
or
cmp
xor
subb
lcall
mov
mov
push
dec
das
cmpsl
arpl
iret
jge
mov
test
pcmpeqd
clc
call
mov
xor
sub
dec
mov
cmc
insb
das
xor
in
dec
jns
lcall
mov
inc
mov
pop
xchg
xor
sbb
pushf
movsl
sahf
push
jg
movsb
pop
mov
ljmp
mov
and
cld
pop
xchg
xchg
mov
jg
mov
adc
xchg
lods
cld
xor
sbb
mov
xchg
aaa
cli
jg
adcb
jb
shr
int
adc
aad
das
mov
stc
jge
cmp
fs
jge
call
xor
cmp
inc
pop
das
and
push
incb
out
inc
mov
jg
add
out
in
xchg
inc
fildl
gs
cmp
cld
push
sar
cwtl
inc
shlb
fxam
adc
dec
adc
aad
movsl
xchg
or
dec
dec
les
xchg
pop
das
sbb
call
loop
decl
adc
mov
sahf
stc
xor
jnp
pusha
push
mov
wrmsr
out
pop
push
push
loopne
sarl
sbb
mov
rcl
pusha
in
leave
inc
lods
mov
push
js
sbb
jg
jmp
sahf
mov
sub
in
daa
lret
lahf
inc
out
cmp
incb
xchg
mov
lcall
pop
in
jno
adc
call
filds
movsb
decl
icebp
xor
xor
lahf
scas
sbb
jg
ljmp
mov
insl
xor
stos
lea
fnsave
adc
pop
mov
jecxz
loop
jmp
jnp
rcl
insl
out
scas
idivl
xchg
or
notb
jl
pop
decl
cltd
iret
mov
mov
ljmp
push
mov
sub
incl
xchg
or
sub
lods
in
in
scas
leave
jge
ret
push
out
shlb
les
incl
lret
stos
inc
lea
dec
inc
adc
les
rorl
lea
add
testl
in
inc
dec
jns
lcall
clc
cmp
jle
js
fdivr
addb
imul
cmp
cmp
incl
and
pop
pop
pop
test
inc
mov
sbb
pop
nop
add
mov
jmp
aam
fiadds
cltd
lret
adc
jge
jp
out
mov
popa
and
lahf
call
sar
hlt
mov
jg
psllw
retw
lods
mov
pop
and
and
jmp
ljmp
out
aas
cs
inc
or
ret
mov
arpl
sub
aad
mov
js
bts
bound
push
aas
push
mov
dec
out
aad
and
incl
mov
or
imulb
imul
sahf
push
ret
fistpll
push
sub
outsl
cmp
pop
das
sbb
adc
fisttpll
xchg
and
or
mov
out
jmp
decl
das
mov
cmpl
jne
push
mov
inc
repz
cmp
jle
mov
dec
test
mov
pusha
jb
mov
cmp
fcomi
insl
leave
jmp
scas
fisttpll
lahf
push
clc
jbe
mov
aam
mov
lcall
incl
mov
xor
adc
push
cmpsl
mov
sub
dec
or
push
pop
push
push
notl
adc
movsl
cmpl
fiadds
sub
xchg
inc
leave
enter
cmc
mov
divb
enter
inc
mov
sub
mov
pop
add
in
aaa
xlat
fcomps
jg
subl
fcmovb
pop
pop
add
bound
stos
inc
test
inc
incl
outsl
dec
popa
dec
jmp
push
inc
xchg
sahf
inc
stos
pop
outsb
std
incl
and
lret
je
sti
mov
lret
push
xchg
pushl
mov
cmpb
lea
out
mov
mov
jnp
arpl
clc
pushl
cmpsl
int3
aad
jne
cli
outsb
rolb
std
cli
rorb
ljmp
pop
pop
sbb
call
fwait
push
mov
popf
std
and
xlat
negb
fiaddl
inc
movsl
idiv
jg
icebp
or
and
mov
push
scas
sbbb
mov
aaa
jne
add
sbb
in
mov
scas
fildll
cli
sbb
icebp
cli
cltd
xchg
push
jmp
cmp
lods
pop
cmp
xchg
and
push
test
imul
pop
lock
jge
inc
lock
ljmp
add
jl
dec
pop
cmp
cltd
xchg
jb
out
sbbl
call
test
nop
jg
std
cmp
bound
adc
push
push
lock
jl
sbb
xor
adcl
je
popf
mov
and
decl
mov
loopne
loop
iret
sar
cmp
lea
sbb
ljmp
hlt
cmp
xor
loopne
in
scas
adc
xlat
sbbb
in
pop
pushl
cli
and
test
sahf
or
jecxz
lea
push
sbb
pop
xchg
decl
and
mov
mov
xchg
push
and
mov
lea
push
lock
fcomip
lret
decl
jg
aad
pushl
push
dec
mov
adc
push
popf
sar
jmp
dec
xchg
cmc
xchg
jge
cmp
adc
or
inc
decb
xlat
mov
dec
pushl
pop
sbb
pop
mov
sub
nop
mov
cmpsb
inc
movsb
outsb
loop
mov
dec
adc
hlt
aaa
loope
xor
jno
ljmp
push
cmc
pop
mov
fbld
decl
call
dec
cltd
ds
fists
mov
shll
or
int
gs
pop
test
ljmp
pop
sahf
add
sub
xlat
imul
jo
shll
stos
mov
call
mov
les
or
dec
sahf
mov
push
jne
ss
pop
pop
and
loop
in
lcall
nop
fidivrs
lcall
dec
jecxz
pop
inc
mov
into
push
pop
mov
insl
cmp
test
dec
in
jae
lds
lret
arpl
decl
mov
lahf
in
inc
mov
xchg
xchg
loop
add
fdivs
lock
adc
nop
adc
push
imulb
jae
inc
popf
lock
ljmp
mov
or
in
push
pop
daa
push
push
aas
in
pop
repz
mov
and
xchg
loop
mov
cltd
adc
pop
mov
sbb
mov
lock
shll
lahf
ljmp
std
aas
nop
push
jmp
std
rcrb
aaa
sub
rol
xchg
fs
cs
divl
lret
mov
std
inc
fiadds
mov
mov
push
push
xchg
sti
jmp
xchg
shlb
std
in
push
dec
xlat
mov
add
lcall
ljmp
push
push
mov
cmpsl
sub
idivl
mov
icebp
cmp
and
push
xchg
out
test
ljmp
jne
js
adc
mov
cmp
mov
les
sub
push
rorb
test
push
dec
sti
lods
mov
dec
addps
clc
cmpsb
divl
aaa
lcall
loop
ds
inc
rcrb
pop
icebp
test
das
xor
jnp
jl
mov
sub
mov
or
mov
push
adc
mov
push
dec
shlb
gs
in
repnz
xlat
jmp
push
and
sbb
push
jg
xchg
sub
ds
cmc
repz
aaa
notb
inc
ljmp
cmc
sbb
jnp
mov
cmpsb
mov
adc
and
add
xorb
or
rorb
adc
in
xor
dec
mov
jae
inc
lea
inc
mov
ret
mov
subl
test
stc
push
repnz
jle
add
mov
aas
cli
sub
es
les
jle
rcl
jbe
incl
repz
dec
xchg
ljmp
pop
enter
inc
sub
jns
mov
jmp
mov
cmp
pop
clc
inc
push
hlt
mov
lea
bound
inc
mov
mov
call
jmp
lods
xor
xchg
xchg
push
jmp
gs
pushf
jno
add
add
add
flds
lods
inc
sbb
mov
loope
jmp
cld
stc
ds
rcrl
xlat
fnstsw
push
mov
mov
das
out
stc
xchg
movsl
pop
dec
mov
popa
jmp
mov
sub
mov
sub
mov
cmp
mov
mov
adc
cmp
lods
xor
sbb
sbb
pop
xchg
mov
dec
mov
add
jg
lcall
lock
jmp
cld
int3
xor
inc
mov
outsl
inc
loope
pusha
lret
std
ficoms
mov
popa
lods
aad
or
nop
insl
sti
jge
int
mov
call
je
jge
sti
adc
loop
cmp
notl
idivl
jl
mov
or
lcall
and
pop
xor
and
les
decl
fisttps
mov
jmp
ret
add
leave
lea
imul
les
aas
and
imull
fimuls
inc
xchg
loopne
sub
std
fucomip
fwait
mov
lret
jns
push
gs
rcl
dec
jle
gs
and
push
movsl
xor
ret
xor
repnz
into
and
jnp
jg
rorl
sub
sahf
icebp
adc
inc
in
sub
imul
pop
add
call
push
xchg
ds
mov
dec
int3
les
cmp
jmp
jmp
xor
jp
push
lds
push
into
xchg
adc
std
sbb
push
popf
push
xchg
pop
mov
scas
cmp
in
inc
out
insl
sbb
fiadds
out
aas
cmc
lock
test
das
cld
aas
imul
jo
push
jecxz
movsb
fs
ret
sbb
fwait
ss
call
inc
call
fidivs
leave
mov
outsl
adc
jl
lods
fistps
call
inc
and
mov
adc
popa
outsb
aad
and
cld
call
push
pop
jp
mov
cld
add
pushl
inc
xor
in
xchg
xchg
lahf
outsb
cld
jbe,pt
movsb
int3
mov
pop
out
cld
inc
test
mov
cld
mov
outsb
popf
fwait
adc
pop
sbb
ljmp
push
loop
imul
xor
daa
and
push
fsubrl
lcall
dec
shll
push
xchg
mov
adc
stos
jmp
inc
pop
adc
lret
add
or
popf
loopne
xor
cli
pushl
xor
aam
mov
outsb
movsl
sbb
divl
mov
jmp
mov
cmc
adcb
xchg
pop
pushf
push
les
lods
ljmp
lods
leave
add
insb
add
stos
mov
fwait
inc
test
sub
push
das
mov
call
rorl
and
add
dec
in
add
adc
push
lods
add
mov
adc
icebp
in
or
cli
mov
lcall
xchg
xchg
jg
jg
subb
sbbb
fdivrl
jbe
mov
movsl
sub
fldl
imul
aaa
ret
add
jo
xchg
push
pop
cld
outsl
adc
js
sbb
push
push
decl
push
or
movsl
mov
pusha
pop
or
adc
enter
call
jmp
sub
sub
xchg
mov
xor
mov
jne
lods
mov
adc
jae
and
repz
mov
push
jnp
xor
in
sbbl
xchg
pop
repnz
repz
ljmp
cmc
inc
daa
jne
ret
loopne
loop
adc
faddl
adc
push
mov
mov
das
stos
lods
pusha
push
cli
jl
sub
lock
jbe
sbb
mov
xor
in
sbb
cli
mov
inc
fstpl
into
inc
fcomps
xorl
or
cmpsl
mov
call
xchg
xor
je
xor
pop
call
aaa
xchg
xor
jne
insb
cs
into
xor
jecxz
frstor
cmpb
jg
lcall
xor
cmp
cli
xor
dec
insb
or
pop
sbbb
call
push
out
movb
jecxz
and
jnp
dec
inc
gs
and
decl
cli
iret
pusha
or
or
shrl
shrl
lods
imul
aas
stos
movsl
dec
std
incl
lcall
mov
sti
shr
out
popa
sbb
cs
cmpsb
unpckhps
lret
pop
push
inc
test
xchg
jnp
push
pushf
sub
shrl
mov
jmp
or
aaa
dec
jl
dec
addr16
cmp
or
lcall
inc
js
sub
gs
sbb
and
cli
push
push
pop
mov
movsl
addr16
cld
leave
inc
aas
leave
mov
mov
add
imul
add
fcmovnbe
inc
pop
pop
jbe
gs
mov
jp
fcmovb
xchg
mov
jmp
cmp
mov
sbb
jbe
cli
ss
or
outsl
jno
lcall
add
lahf
mov
aaa
mov
lcall
rcr
jno
push
ljmp
fs
jb
sbb
inc
jmp
lcall
dec
sbb
adc
add
aas
sti
ljmp
ret
xor
into
ret
daa
cmpsl
sub
sub
cs
enter
mov
scas
add
mul
mov
mov
stos
jo
pusha
sub
pop
pop
hlt
cmp
loop
adc
and
mov
stos
sub
jmp
or
sbb
add
les
ret
sbb
leave
insb
cmpsl
incl
int
outsl
sbb
mov
orb
pushl
sub
fnstenv
gs
cmpsl
mov
call
add
call
sub
jp
clc
pop
pop
push
and
repz
outsb
dec
and
jmp
adc
inc
mov
fisubs
rol
dec
push
loope
xchg
incb
pushl
sbb
shll
test
nop
pusha
push
repnz
mov
mov
sbb
mov
imul
xchg
adc
iret
popa
mov
cmpsb
mov
jns
or
lock
stc
pop
push
and
mov
jmp
orl
and
push
push
rol
push
std
jmp
lods
and
jecxz
ret
inc
out
add
pop
andl
js
and
les
lcall
pushl
pop
outsl
jae
arpl
daa
or
cmp
cmp
ds
test
incl
mov
fistps
pusha
mov
call
shll
cmp
mov
add
cmpl
popa
pushl
push
paddq
jns
pop
je
mov
roll
sub
stos
jo
addr16
daa
cltd
and
movsb
imul
jg
outsl
xchg
xor
jmp
scas
cmpsl
dec
mov
incl
stos
mov
outsb
dec
cmp
sub
cmp
out
sar
ljmp
mov
in
mov
inc
fisubs
cmp
fstp
or
dec
push
mov
pop
jg
jg
dec
cmpsl
sbb
test
push
ljmp
or
into
lcall
dec
imul
mov
sub
cmpsl
outsb
mov
bound
ds
jg
test
sbb
xchg
cmpsb
jecxz
int3
mov
push
stos
jg
mov
arpl
repz
sub
popf
scas
push
jb
loop
rclb
leave
popf
adc
incl
and
jmp
mov
test
xor
push
xor
pop
cli
jmp
dec
aam
out
push
lods
add
pop
loopne
fisttpl
cmp
dec
mov
lds
push
mov
js
or
and
outsb
incb
in
scas
hlt
jbe
in
mov
inc
push
std
xor
mov
push
sbb
jbe
daa
in
je
pop
cli
push
adc
fcoml
dec
add
incb
cmp
xor
call
clc
daa
mov
orl
pushf
add
mov
cmp
sub
lods
pop
loop
insl
cltd
jl
inc
dec
and
jbe
hlt
andb
decl
in
jmp
xchg
movsb
mov
mov
movl
cmp
jb
aad
or
jbe
sub
lock
movsb
pop
outsb
pop
push
call
and
out
pop
call
jb
jne
sbb
outsl
std
pushl
in
xlat
cmp
repz
push
lcall
sub
ja
sub
into
test
mov
ljmp
pop
push
push
lods
or
sub
adc
jmp
xchg
loop
jg
sahf
mov
or
mov
call
or
lcall
sub
loopne
std
dec
fcmovbe
fists
xor
jg
call
stos
fisubrs
push
insl
mov
pop
std
ljmp
mov
adc
or
pushf
push
jno
dec
cmp
mov
xchg
ljmp
outsb
mov
lods
jo
fcomps
mov
test
loopne
sbb
push
xor
xchg
jne
ret
shlb
divb
mov
insb
test
jl
pop
and
ljmp
xor
shrl
inc
subb
jnp
pusha
idivl
cli
add
std
jg
in
decl
pop
movsl
xor
es
cltd
add
push
stos
push
outsl
aaa
ljmp
mov
xor
mov
fcomps
jg
lcall
dec
push
outsl
lret
pop
dec
jno
jecxz
push
adc
mov
jge
lock
and
pushl
ljmp
arpl
divb
add
pop
lcall
cld
cmp
loope
mov
inc
or
cmp
pop
cmp
ret
movsl
or
xlat
xor
cmc
jmp
add
mov
inc
xor
sbb
push
lcall
outsl
enter
fcmovne
or
push
xchg
rclb
ret
push
cli
dec
and
aad
xor
decl
lods
cli
sbb
fiadds
nop
in
das
cwtl
mov
in
incl
pop
loopne
pusha
xor
lds
xchg
mov
mov
xchg
add
jnp
adc
jne
mov
gs
pushl
test
push
cmp
cmpl
adc
aam
push
call
fcoml
dec
pushf
pusha
mov
adc
push
mov
test
sbb
outsl
fistpll
mov
ret
scas
pop
ja
enter
fistpll
in
push
cmp
adc
mov
in
es
xor
xchg
pushl
sub
das
stos
dec
jg
mov
jge
dec
jp
in
add
hlt
sub
outsl
lock
fwait
rorl
adc
push
xchg
imul
pop
clc
incl
dec
mov
insb
dec
or
xlat
aas
aad
lock
call
fwait
mov
fcomps
pop
sub
fmul
jecxz
xlat
mov
fisttpll
xchg
fimull
incl
jmp
je
pop
test
push
add
call
dec
lret
jmp
rcrb
mov
ret
mov
jo
dec
mov
iret
pop
idiv
jmp
sarb
or
dec
hlt
clc
outsl
jb
in
mov
insl
sub
pusha
mov
pop
decl
decl
in
test
dec
sub
ds
push
push
cmp
jnp
aas
jmp
popa
dec
ds
mov
lods
aam
lea
call
mov
xor
sti
cli
cmc
inc
jl
into
adc
adc
aas
inc
push
int
push
pushl
ljmp
push
mov
xchg
jns
aad
add
jmp
int
aaa
or
push
repnz
bound
add
rcrb
or
dec
das
popa
jb
jne
lock
ja
dec
in
shll
xchg
shr
cmp
mov
push
sysenter
in
jecxz
mov
mov
sbb
mov
rolb
aad
xor
xor
stos
pop
mov
nop
sahf
mov
mov
cld
pushl
les
scas
lret
lock
leave
scas
add
maskmovq
mull
dec
imul
out
movsl
je
lcall
mov
mov
sub
pop
jne
mov
pop
pusha
xchg
sbb
mov
insb
dec
lret
mov
xor
cmp
mov
jae
bound
cwtl
mov
pushl
adc
nop
push
outsl
inc
roll
push
dec
sbb
imul
add
push
pop
pushf
push
push
addb
out
xchg
push
daa
into
cltd
xchg
sbb
lret
ljmp
ja
addr16
shlb
gs
mov
js
fstpl
decl
jne
add
out
jle
shll
mov
lods
xchg
lcall
decl
mov
lcall
or
cmp
pop
sub
incl
int
or
pop
lret
mov
test
and
dec
adc
sbb
pushf
es
add
data16
and
pop
xlat
cltd
cmp
pop
adc
adc
jl
cmp
push
data16
fstp
ljmp
icebp
cld
out
lahf
xor
lds
inc
flds
mov
std
daa
icebp
sbb
out
lcall
fstl
xchg
sub
shll
or
push
test
push
cs
sub
push
push
mov
mov
xor
dec
out
mov
add
jmp
mov
test
dec
jb
sbbl
xchg
mov
lcall
sbb
sbb
arpl
aaa
xor
fsubrs
dec
mov
incl
mov
mov
sbb
jae
fs
inc
aad
pop
sbb
mov
dec
and
out
loopne
cmp
adc
hlt
rcrb
xor
rolb
pop
incl
mov
xor
test
mov
dec
test
push
leave
cmp
mov
call
lods
sub
mov
stos
rorl
pop
lds
xor
scas
cltd
inc
imul
jmp
lret
jae
nop
xor
mov
repz
jl
xorb
mov
leave
jae
es
iret
dec
popf
xor
fsubs
jg
sarl
loope
push
popa
ja
addr16
cmp
sub
lods
xchg
mov
decl
fs
incl
dec
push
or
sbb
add
pop
push
pop
movsb
fcompl
or
scas
sub
mull
mov
jg
xchg
enter
cmc
jmp
and
pop
sbb
or
insl
and
add
mov
lret
jle
xchg
aad
mov
ret
xchg
cmp
popa
insl
clc
pop
lods
testl
std
lock
ret
lods
inc
mov
xchg
xor
pop
inc
push
fwait
in
push
mov
mov
movsl
pop
fisttpl
bound
fcom
out
mov
cltd
outsl
icebp
incl
out
push
repz
ss
xor
or
adc
scas
fists
mov
jbe
out
mov
or
rolb
xor
inc
shr
inc
in
call
sub
es
ljmp
mov
xchg
dec
lret
stos
repz
inc
sub
mov
adc
or
imul
push
loop
aam
int3
fstpt
mov
in
call
mov
xchg
dec
fstl
and
aad
sub
inc
mov
push
idiv
pop
ljmp
jp
sub
xlat
popf
dec
jbe
fbstp
dec
orl
and
cmpsb
jecxz
pop
ds
mov
decl
fiadds
xchg
outsb
sub
hlt
aam
ss
sti
pop
sbb
jae
decl
lret
mov
dec
adc
mov
incl
mov
stc
cmp
clc
lods
jge
loope
fs
in
dec
pop
push
dec
fs
scas
or
decl
mov
mov
push
add
outsb
inc
loop,pt
enter
mov
fidivs
rolb
int3
call
mov
loop
sbb
mov
psraw
clc
cmpsb
mov
scas
push
clc
jmp
dec
cwtl
cmp
loop
push
sar
push
mov
imul
dec
fnsave
call
inc
ja
jecxz
sub
mulb
popf
pop
dec
ljmp
call
adc
out
pop
pop
lret
stc
mov
or
shl
jno
xor
call
scas
add
add
mov
jo
ja
into
je
cltd
jne
std
imul
mov
sbb
cmp
cld
pop
jmp
or
add
call
jb
adc
pop
xor
outsb
or
jae
ret
push
cmc
or
arpl
outsb
jge
aaa
xchg
nop
add
stc
addb
add
pop
pop
jg
out
incl
movsb
cmpsb
sbb
paddq
jbe
js
movsb
cmc
mov
jmp
mov
loop
les
pop
cmp
pop
pop
mov
dec
xchg
push
mov
ljmp
xor
sbb
cld
inc
add
pop
push
lcall
fucomip
push
push
xchg
cmpsl
scas
data16
lea
xchg
pop
jg
lret
jge
push
lcall
jmp
push
hlt
push
stc
adc
mov
test
mov
or
outsb
mov
es
or
es
outsl
or
cli
jl
push
push
test
icebp
mov
out
add
inc
int
pushl
pcmpeqd
insb
in
aaa
loopne
mov
pop
inc
std
pushl
cmpsb
inc
icebp
jns
sahf
gs
sar
shll
jge
outsl
dec
pop
adc
jge
adc
fldenv
and
ret
lods
inc
jmp
cmpsl
pop
sti
in
imul
jae
pusha
test
mov
je
or
dec
scas
pop
push
xchg
mov
and
push
outsl
pop
adc
lcall
pop
shlb
cmpsl
ja
jno
jno
scas
xor
pop
xchg
aas
dec
mov
dec
dec
mov
pop
cmp
rorb
pop
in
cwtl
xor
fdivs
adc
ljmp
call
insl
fwait
pop
xor
pop
sub
mov
xchg
or
out
jo
loope
cltd
cmp
ret
mov
aaa
dec
cmp
cmp
inc
jp
fbld
mov
decl
or
mov
adc
jo
mov
sub
and
cmc
ljmp
dec
out
xorb
cmpb
adc
fiaddl
enter
sub
shl
loop
mov
push
add
das
cld
inc
outsb
pop
adc
shll
ret
and
mov
divb
sbb
sbb
aaa
xchg
std
mov
adc
test
fisttpl
das
hlt
inc
xchg
dec
or
pop
jae
test
cmp
sarl
adc
dec
inc
xor
adc
sub
shrl
jmp
aas
lahf
gs
shll
fdivrl
and
test
das
std
add
mov
repz
dec
iret
jg
pop
stos
xchg
mov
lret
push
jnp,pn
adcb
clc
or
outsb
xor
orb
and
adc
incl
sti
and
into
repnz
in
and
cmp
xor
outsl
cmc
ljmp
inc
push
test
cld
xchg
mov
sbb
int3
fnstenv
cltd
mov
sarb
xchg
scas
cmp
ljmp
js
jno
mov
or
imul
sbb
js
icebp
cmp
mov
cmc
ret
dec
bound
pushl
push
push
insl
mov
pop
sbb
fs
rcl
sub
pop
pop
add
cmpsl
jmp
shll
ret
int3
repnz
out
jmp
lret
mov
ljmp
shl
lods
bound
ja
cmc
xchg
hlt
scas
mov
cmp
mov
push
pop
fidivl
mov
std
subl
stc
jge
inc
push
jne
sub
std
out
movsl
lea
das
jg
ror
lock
pop
es
jmp
repnz
sub
fmulp
fsts
dec
dec
out
fdivs
dec
jb
les
lcall
loop
insb
scas
and
inc
and
in
pop
fsts
cld
test
dec
jo
mov
mov
jg
cmp
pop
das
jp
jecxz
aad
and
mov
scas
sbb
xchg
jmp
aaa
rorb
jl
loope
jle
and
icebp
adc
lcall
jge
lcall
jecxz
loop
lods
and
pop
add
pop
sbb
jg
inc
jae
inc
xchg
daa
mov
mov
adc
addr16
call
mov
test
xor
inc
ret
clc
push
cli
bswap
je
pushf
cmp
mov
gs
jecxz
les
cmp
cmp
out
mov
cmp
gs
call
in
pusha
mov
adc
fistpl
push
loop
xchg
int
jmp
and
js
lret
movsb
call
scas
out
in
getsec
mov
xchg
rcrl
test
cltd
sar
xlat
stos
mov
mov
lock
jg
rcll
repnz
sbb
stc
pop
sahf
incl
dec
ljmp
and
cmp
mov
icebp
inc
xchg
lcall
stos
lcall
into
sub
and
incl
lret
popa
into
hlt
sbb
push
cltd
cmp
outsb
mov
addr16
mov
ss
add
pop
loopne
mov
push
rolb
test
mov
decl
sbb
mov
inc
cmp
mov
dec
fwait
pop
lret
fisubrs
stos
das
sub
cmp
sub
mov
xchg
mov
pushf
scas
sbb
sub
call
sbb
ret
inc
test
or
outsb
aam
xor
sub
scas
mull
cmp
mov
mov
mov
mov
add
dec
mov
ljmp
push
xorl
xchg
push
jns
outsl
lock
loopne
je
jnp
stos
out
or
mov
call
xchg
adc
syscall
insl
inc
dec
lds
fcomip
cmp
mov
in
dec
push
or
jae
pusha
dec
mov
adc
push
daa
scas
fisttpll
lds
adc
push
les
mov
cli
notb
jns
push
cmpsb
je
adc
sbb
sub
or
jl
ljmp
ret
mov
sahf
push
add
push
add
sub
xchg
lds
pop
in
sub
decl
add
adc
sub
lret
setb
aaa
add
cmpl
mov
jecxz
push
jle
fimuls
pushl
cwtl
mov
xor
mov
js
mov
pop
ja
in
test
incl
mov
inc
dec
call
je
cwtl
mov
ljmp
jg
fwait
out
test
cmp
lcall
mov
xor
clc
dec
popa
fbld
inc
fsubrl
int
mov
mov
or
scas
push
lahf
xorl
pop
mov
ss
sahf
or
repnz
pop
cmp
arpl
sbb
mov
xor
add
loope
inc
xchg
adc
mov
in
mov
sbb
or
dec
pop
push
shr
push
pusha
cmp
ljmp
jl
outsl
testb
push
icebp
or
in
sbb
movsl
outsb
cwtl
mov
test
inc
sub
pop
xor
push
in
fwait
insb
cmp
sub
jg
rol
ljmp
decl
xor
icebp
lret
aaa
fsubrp
stos
cmp
jecxz
or
rcll
dec
in
and
xchg
xchg
adc
xlat
ret
inc
cltd
sub
dec
and
xchg
xchg
incl
mov
das
push
aas
fcoml
jp
jle
cmp
test
add
lods
stos
push
sub
call
aaa
cmp
fisubl
jo
je
dec
repz
and
sar
test
jno
cmpl
cmp
inc
and
ljmp
xor
imul
cmp
movsb
pushf
enter
jg
sbb
incb
cmp
mov
imul
push
inc
inc
pop
stos
sbbl
add
jmp
sbb
and
xchg
push
in
out
imul
push
aad
in
movsb
lcall
cld
call
push
icebp
outsb
lcall
and
and
inc
stc
pop
outsl
hlt
decl
lret
or
mov
nop
xor
movsb
lods
jg
popa
sub
ds
out
sub
adc
lds
incl
sbb
cs
xlat
pop
in
addb
add
push
jne
push
fsts
imul
adc
repz
fcmovbe
in
insl
lahf
xchg
lds
sub
in
jmp
adc
xchg
jb
fists
and
js
add
mov
dec
mov
pushl
sub
xchg
mov
popa
xor
sar
lea
outsb
adc
insl
dec
ja
mov
lcall
incl
push
jecxz
lods
dec
sbb
scas
daa
aam
lret
add
inc
lock
or
push
sub
jne
cmpsb
jg
mov
adc
or
ja
lret
int3
out
inc
xchg
shlb
stc
xor
call
daa
mov
sbb
sbb
jnp
outsl
push
adc
mov
pop
call
imul
sahf
mov
js
andb
outsl
lcall
clc
cmpsl
divl
in
dec
mov
mov
idivb
test
in
lcall
cmc
jle
nop
add
pop
fwait
sti
and
int
add
mov
comiss
fcomip
adc
decl
rcrl
cmp
test
mov
ljmp
mov
pop
pop
gs
test
std
ss
mov
add
pushl
jmp
andnps
push
nop
mov
jne
pop
jg
les
lds
and
dec
pop
icebp
incl
sub
rep
push
jbe
fwait
jne
inc
xchg
or
cmpl
imul
ljmp
sti
cmpsb
xor
ljmp
mov
xchg
cmp
xchg
ret
xlat
aaa
cli
decl
or
aad
std
jge
lret
jmp
jg
mov
mov
jle
add
sub
push
mov
xor
lock
pushl
test
pop
and
out
sub
push
fs
repz
ds
decl
or
sub
push
pop
sahf
xchg
push
sbb
push
mov
into
test
js
mov
ja
incl
out
mov
cltd
xor
dec
jle
test
inc
mov
jl
decl
cld
jl
test
mov
pop
ret
cld
stos
mov
jmp
mov
jmp
cbtw
cmp
sbb
pop
cmc
movsl
jno
insb
lds
sub
mov
cld
das
cld
je
sub
sbb
imul
xor
lods
mov
stos
add
sub
pop
test
push
test
notb
incl
pop
add
push
test
push
test
sarb
pop
mov
push
call
lcall
sti
mov
mov
push
in
clc
sbb
clc
lret
loope
shrl
in
int
xor
jmp
pushl
and
cmc
add
sub
cld
in
or
push
shl
ljmp
inc
pop
inc
xchg
mov
lods
mov
or
push
mov
sub
jmp
sub
dec
notl
scas
jle
pop
mov
je
scas
ja
ds
mov
xorl
sbb
mov
jg
cmp
popl
dec
push
push
pushl
out
push
je,pn
inc
dec
xchg
jle
xor
push
push
sti
sti
jae
dec
clc
ja
in
mov
adc
add
arpl
inc
xchg
pop
jmp
fidivs
test
sbb
pop
dec
in
roll
in
xor
mov
loop
call
in
mov
in
jecxz
outsl
lock
stos
lock
push
sub
mov
push
sub
fistpll
xor
jb
ret
loop
sbb
inc
loope
lret
lcall
std
cmp
xchg
mov
stos
aas
cmp
pop
jecxz
hlt
aad
fisttpl
clc
push
mov
out
inc
adc
and
ret
xchg
jne
push
sub
push
push
cmp
jl
or
pop
mov
or
jbe,pn
enter
sbb
push
pop
cld
outsl
lock
mov
add
cmp
and
xor
jp
sub
push
out
mov
mov
insb
pop
sbb
pop
cld
popf
xchg
fucomip
js
bnd
sub
jns
xor
inc
xor
mov
sub
out
xchg
inc
dec
and
leave
cs
cmp
or
inc
cmpl
insl
mov
cwtl
lcall
add
and
cmpsl
add
scas
sub
gs
jmp
push
xchg
jno
std
mov
push
fsubrl
sub
mov
jmp
inc
pop
movsl
dec
lods
push
pop
testl
inc
test
test
inc
push
jg
mov
and
xorb
sbb
mov
push
push
insl
cmp
ljmp
decb
pop
out
fwait
lods
cmp
xor
decb
mov
outsl
jg
mov
push
mov
cltd
ljmp
loopne
faddl
int
movsl
ljmp
dec
enter
pop
or
ret
xchg
ljmp
sbb
std
mov
lods
and
sub
cmp
fnsave
das
xor
int
pushf
out
xchg
sub
dec
cmp
fists
cmp
push
pop
push
push
jo
mull
inc
mov
dec
jge
and
xor
std
std
push
out
das
lods
popa
dec
pop
rolb
cld
insl
fldt
inc
jae
sbb
cmc
ss
jg
decl
cmp
or
cli
outsb
xchg
inc
jp
inc
idivb
call
inc
mov
or
cmp
stc
mov
and
stc
in
outsb
mov
lcall
or
xor
push
xor
imul
mov
mov
cs
dec
adc
cmp
lcall
das
xchg
test
mov
lods
insb
aaa
cltd
mov
cld
lcall
lret
inc
sbb
out
hlt
cmp
mov
popf
gs
insb
neg
cli
xchg
mov
xchg
lea
cli
test
rolb
push
adc
lcall
lret
sub
xchg
movsb
push
inc
add
push
push
inc
ss
in
clc
bnd
loopne
jb
jl
mov
shrb
incl
lods
or
or
mov
jmp
shll
pop
sbb
xchg
mov
imul
jge
inc
inc
loope
push
push
jb
cmp
lcall
sbb
inc
test
jbe
sbb
leave
adc
arpl
call
jg
ja
pop
setnp
push
idivl
shr
sub
std
pushl
pcmpgtw
call
cmp
inc
shrl
idiv
pop
sarb
mov
imul
jno
hlt
sub
lcall
ljmp
mov
xor
movsl
sbb
sahf
enter
or
lods
arpl
and
lea
cltd
insl
stos
jns
fucom
insb
sbb
ljmp
push
cmp
cmpsl
mov
mov
test
inc
xchg
pop
lahf
xchg
mov
fwait
imul
or
test
fisttps
lods
lcall
repnz
data16
lcall
ljmp
mov
insl
and
lock
xor
lret
pop
test
into
adc
push
xchg
cmpsl
movsl
xor
jbe
enter
cmp
pushf
pop
out
fnstsw
dec
xorb
cmp
sbb
xchg
cmp
jl
xor
sub
sar
dec
xchg
fsubl
clc
pop
outsl
push
mov
roll
popa
fnsave
aad
fs
dec
or
jmp
daa
jle
arpl
adc
jne
inc
mov
pop
imul
inc
or
shr
subl
arpl
mov
sar
std
lcall
out
pop
into
inc
push
sbb
pop
je
fwait
xchg
and
imul
cli
pushl
xlat
fdivrp
mov
add
add
mov
int
and
ja
lcall
les
fistl
push
pop
es
mulb
pop
std
fucomip
das
cld
mov
inc
and
in
cmp
or
jg
lret
xchg
aam
jl
and
add
movsl
insb
call
push
xor
incl
adc
clc
cmp
pop
lock
push
mov
sti
test
addl
lock
mov
or
add
shrl
add
out
push
fisttpll
decl
xchg
dec
dec
add
lds
adc
sbb
popf
xchg
nop
cmpl
mov
mov
sbb
sbb
into
cmp
sbb
clc
jmp
dec
hlt
pop
and
mov
jmp
xchg
iret
xor
cmp
jmp
loopne
mov
cld
xor
xor
mov
loopne
jecxz
mov
das
cmc
decl
mov
adc
mov
and
mov
scas
mov
cs
and
icebp
popf
push
out
cmp
outsl
xchg
add
test
ds
loopne
lahf
lret
adc
dec
dec
imul
incl
out
adc
jg
int
push
jo
cmpsl
fnstcw
adc
jg
xor
mov
xchg
int
decl
and
mov
mov
push
jle
xchg
loopne
jne
ljmp
std
std
cmp
fists
mov
into
xor
jb
push
jp
daa
lcall
int
int3
imull
movsb
gs
xor
mov
ljmp
call
jle
outsb
sbb
pushf
sub
xlat
xchg
pop
xorb
mov
call
ljmp
sbb
pop
pop
ficompl
loope
cmpsl
test
cmpsb
push
jbe
sbb
rolb
decl
ds
push
aas
mov
add
data16
pop
sub
ljmp
into
iret
mov
js
cmpsb
add
mov
pushl
inc
test
scas
pop
cs
adc
cmc
mov
clc
das
sub
cmp
dec
out
ljmp
clc
cmpsb
fstl
ljmp
testl
mov
xor
lahf
in
jnp
stc
cmp
push
in
iret
gs
out
add
lcall
cld
pusha
pop
cld
outsl
xchg
xor
mov
clc
sbb
sbb
movups
ljmp
or
push
mov
test
pop
xchg
scas
imul
fsubr
test
cmpsl
xor
lds
nop
test
jnp
dec
sahf
dec
hlt
jne
push
fcoms
adc
cmp
or
incl
mov
and
xchg
in
sbb
mov
jmp
int3
push
dec
gs
and
push
dec
ss
call
lds
jns
add
test
lods
mov
mull
decl
sbb
bound
pop
fs
loop
sub
pop
fidivrs
lcall
ljmp
xchg
mov
out
or
lods
mov
mov
push
lods
pop
cli
pop
cli
in
leave
lahf
mov
push
sub
sub
inc
rclb
jae
sbb
out
sub
adc
sahf
mov
dec
push
pushl
jnp
pop
ret
imul
int
nop
test
fadd
dec
jb
sahf
jge
mov
jmp
gs
popa
sti
sbb
push
xlat
adc
sbb
shrb
dec
mov
scas
dec
jno
outsl
mov
scas
dec
jecxz
xchg
repnz
inc
scas
inc
fdivrp
fucomip
jp
mov
add
push
dec
imul
popa
imul
aam
dec
enter
ret
dec
out
xor
test
incl
repnz
std
jmp
scas
xchg
and
das
jns
addb
ljmp
ljmp
add
mov
lea
pop
fdivr
jge
mov
out
inc
xchg
pushf
or
pop
push
push
incl
push
cwtl
es
mov
aad
dec
xchg
xchg
mov
add
pop
test
call
clc
pushl
je
mov
pop
xchg
stos
stc
add
cmp
ljmp
cmp
mov
mov
dec
pop
cmp
rorb
pop
xchg
push
xor
dec
dec
shrb
lcall
fs
test
mov
jne
sarl
mov
sbb
xor
sbb
hlt
popf
jns
xchg
arpl
lods
dec
and
dec
cli
les
fildl
xor
fisttpll
push
mov
push
movsl
add
push
or
sbb
mov
mov
sbb
sub
lret
dec
adc
cmc
jb
adc
xchg
cli
or
imul
cmpl
loopne
test
and
je
sbb
push
add
lahf
insb
jge
call
push
xchg
jecxz
mov
repz
dec
scas
clc
pop
ss
or
sbb
cmpsl
xchg
pushl
hlt
pop
lret
jmp
mov
pop
add
dec
sahf
add
enter
jno,pn
inc
call
pop
inc
pop
sub
mov
arpl
xchg
rcrb
jl
scas
orl
jns
test
iret
shl
scas
mov
or
std
push
outsb
rep
cli
gs
ljmp
cmp
out
aam
lcall
xor
xchg
dec
jne
aam
jnp
or
das
inc
js
mov
decl
xchg
insb
dec
lret
push
inc
into
stos
ss
add
jo
mov
ljmp
xor
xchg
jne
sbb
sub
xor
cmc
and
icebp
push
and
jnp
testb
jns
aad
adc
jnp
sub
mov
hlt
call
scas
leave
daa
outsl
aas
sbb
addr16
mov
int
cwtl
imul
mov
into
inc
std
incl
xchg
jmp
call
adc
xchg
das
loop
adc
loop
movsb
push
xor
decl
xor
pop
add
mov
inc
xor
imul
pushl
lds
popa
pusha
xchg
push
add
incb
rolb
sub
bound
adc
and
outsl
hlt
decl
and
dec
and
sti
ret
loop
inc
xchg
xor
pushl
out
out
jmp
mov
sub
push
sbb
dec
mov
sub
incl
scas
sub
jb
add
rcrb
mov
mov
xchg
decl
sbb
add
outsb
push
outsl
cmpsl
mov
repz
mov
incl
xor
out
push
sub
mov
faddl
dec
xchg
mov
push
and
stos
pop
sbb
jmp
sbb
jns
xor
jl
sub
incl
cld
add
sub
inc
fimull
je
pop
cli
incl
arpl
jae
leave
or
cmp
jg
pushl
or
aaa
dec
ret
mov
mov
stc
cmp
and
out
or
jge
cmc
ficomps
lea
xorl
cmp
mov
cmp
out
cwtl
sub
xchg
jg
fisttpl
mov
stos
add
adc
movsl
xchg
sub
clc
out
or
decl
dec
loop
outsb
popa
and
jg
inc
ljmp
enter
push
imul
cmc
add
rol
and
loop
xor
fisttps
sbb
mov
fidivrl
pushl
clc
mov
cmovl
dec
or
fsubl
gs
arpl
sahf
mov
push
pop
rcrb
mov
push
add
inc
movsl
dec
ud0
mov
mov
and
or
mov
and
jnp
xchg
pop
push
loope
daa
sbb
pop
inc
mov
and
xor
mov
xorb
das
lock
mov
pop
inc
mov
pop
clc
push
push
cmp
in
pop
clc
enter
mov
mov
pop
jle
xchg
ljmp
out
hlt
sbb
xchg
lods
jle
movsl
pop
es
out
xor
mov
push
call
lock
mov
xchg
jg
aaa
lods
inc
pop
subl
push
call
mov
cmp
fldcw
stos
jns
pushl
adc
cmp
movsb
dec
jl
outsl
lret
xchg
mov
or
push
jp
incl
xchg
jnp
adc
adc
and
adc
inc
add
sub
mov
faddl
inc
call
adc
ret
dec
inc
in
mov
arpl
jns
out
leave
subb
mov
add
mov
mov
or
sub
decl
testb
stos
mov
and
jno
lret
jmp
jmp
inc
lret
xchg
jp
and
fsts
scas
mov
sbb
ljmp
ljmp
ret
inc
das
int
xor
fimull
xchg
or
xchg
or
xor
aam
cli
inc
sbb
pop
out
xchg
loopne
dec
js
lods
jg
xorl
push
push
inc
movsl
fbstp
push
push
outsb
in
or
test
stc
jmp
cs
mov
in
sub
sbb
sbb
or
std
subb
mov
cmc
jecxz
mov
std
mov
dec
loop
fists
subb
mov
push
cltd
xchg
je
jmp
xchg
push
test
pop
clc
idiv
push
imul
repnz
stos
sti
pop
mov
adc
out
cmp
xor
push
inc
lret
push
mov
hlt
es
cmpsl
inc
and
jg
add
xor
jle
les
das
push
test
sti
addr16
pop
lcall
ljmp
xchg
cltd
hlt
xchg
jge
mov
jg
call
cld
ret
xor
test
pusha
add
lahf
out
cmp
lock
adc
movsl
mov
or
xchg
or
inc
adc
pop
and
insb
bswap
mov
jb
scas
incl
sbb
cmp
in
sub
mov
cmpsl
lret
sub
pushl
psubd
imul
lds
cmp
leave
mov
push
push
mov
sbb
sub
pop
dec
cmp
sub
leave
test
jg
adcl
inc
popf
popf
mov
cmp
shlb
ficoml
push
add
call
data16
fsts
jno
mov
xchg
add
int
pop
outsl
je
xchg
aad
sub
jge
sub
test
and
test
decl
mov
insl
js
inc
mov
adc
mov
inc
mov
addr16
and
adc
sbb
pushl
dec
push
push
jle
rcl
lcall
sbb
roll
aas
repnz
mov
mov
decl
push
inc
sbb
xchg
enter
fsub
push
gs
jecxz
lods
enter
lcall
addb
push
ret
xor
in
sbb
fcompl
aam
bound
pop
dec
repnz
mov
fadds
jns
push
push
pop
pop
mov
xor
fbstp
call
lahf
repz
push
shlb
les
jmp
xor
pop
jg
sahf
adc
and
cmp
push
js
outsl
std
decl
xchg
imul
stc
mov
scas
fiaddl
push
cmp
stc
xor
ret
mov
pop
call
mov
jbe
cmp
scas
xchg
sub
decl
sub
jno
notl
loop
test
daa
sub
fcompl
cmp
ljmp
arpl
add
lea
jbe
mov
lret
cld
loope
pushl
clc
add
mov
mov
cmp
lock
cli
inc
adc
xchg
lcall
adc
mov
pop
cmpsb
add
arpl
aad
push
js
xor
enter
fcoml
shlb
fildl
mov
iret
loopne
xor
mov
xchg
cmp
fnstsw
decl
repnz
enter
adc
lock
jb
arpl
mov
loopne
pushl
stos
cld
push
adc
cld
mov
aam
push
xor
clc
pop
inc
mov
dec
jp
loop
adc
inc
mov
xor
popf
gs
scas
fmuls
cli
decl
jl
or
pop
lahf
and
or
iret
dec
pop
loopne
lret
or
mov
es
arpl
je
jl
decl
push
xor
inc
dec
dec
out
sbb
stos
mov
mov
bound
mov
jecxz
push
push
cmp
and
pop
lret
mov
cmpsb
and
jecxz
decl
lret
add
push
add
in
add
fcmovb
sahf
xchg
das
or
call
clc
decl
xor
mov
enter
jecxz
mov
ds
ljmp
lock
fstpl
iret
outsl
xor
mov
lods
mov
imul
push
out
ret
shll
sbb
popf
in
and
imul
decl
xchg
pusha
push
lods
addr16
lock
xlat
addl
xchg
mov
decl
movsl
mov
dec
xor
arpl
insl
mov
ret
xlat
lret
insb
sarl
rcrl
aaa
clc
iret
push
in
lock
pop
pop
inc
or
incl
pop
out
sub
mov
cmp
jbe
xchg
xchg
xchg
pop
sti
shrl
push
fadd
lcall
xchg
arpl
shll
xchg
daa
in
jge
daa
mov
and
mov
icebp
mov
cmp
aas
jl
push
lcall
mov
mov
adc
sbb
out
jecxz
or
ljmp
pop
mov
sub
cs
pop
or
mov
sub
push
inc
mov
mov
std
movsb
xchg
jnp
mov
xor
dec
jg
loopne
cmc
test
aas
pop
pop
out
insl
or
lret
imul
adc
call
pop
incl
es
stos
pop
cli
out
mov
xor
adc
dec
push
lods
mov
js
fwait
xlat
lea
clc
push
pop
mov
sub
dec
fadd
arpl
call
jl
mov
dec
sub
inc
dec
popf
adc
lahf
pop
adc
incl
pop
mov
cld
jmp
outsl
fdivrl
xlat
add
into
shrl
jp
adc
pushl
pop
cmpsb
lcall
xchg
rcr
adc
push
neg
cmp
jae
stc
mov
movzwl
idiv
call
loopne
dec
pop
mov
xchg
cmp
dec
jg
push
mov
jnp
rclb
outsl
mov
ds
push
inc
aaa
jno
pop
jge
test
lcall
jmp
sti
fcmovb
fstps
xlat
mov
mov
cmp
insb
ja
xor
and
mov
subl
jle
xchg
std
incl
incl
je
testb
lods
push
add
or
push
out
inc
jle
decl
inc
push
mov
sbb
push
mov
arpl
movsl
jb
imulb
sbb
pushl
push
cmp
in
mov
jnp
outsb
sbb
pushl
decb
fiaddl
add
sbb
xchg
inc
test
js
push
sub
mov
cli
mov
dec
jbe
adc
cmp
movsb
inc
das
icebp
ljmp
sti
stc
je
ret
iret
inc
pmaxsw
test
dec
addl
scas
mov
mov
ret
inc
jg
cmp
ds
mov
rorl
sub
sbb
ss
loop
and
mov
jns
lahf
and
mov
clc
pushl
jle
mov
in
mov
pop
ret
mov
mov
call
loopne
lock
pop
jnp
in
test
je
aam
inc
mov
int3
mov
jmp
push
mulb
inc
dec
test
cli
xchg
or
add
cs
call
in
cmp
icebp
aam
mov
jle
mov
nop
mov
mov
jg
aad
out
mov
push
jb
jg
jbe
push
sub
dec
ljmp
hlt
push
jmp
fwait
cmpb
sbb
pop
ja
call
shrb
movsl
mov
mov
js
push
cmp
fmul
xor
sbb
jnp
inc
jmp
ljmp
fwait
negl
fs
jns
daa
popf
jb
fsubs
or
inc
mov
xchg
ret
shl
pop
xor
jle
ds
lcall
sbb
push
addr16
out
mov
pushf
aam
ret
xchg
inc
jmp
lock
ljmp
lea
push
jne
int
cwtd
cmp
sub
xor
mov
rcl
inc
pop
iret
push
cltd
out
ljmp
adc
jae
in
in
sub
jmp
jmp
pop
adc
jge
out
int3
fcoml
jg
or
filds
push
dec
mov
sbb
mov
jp
lcall
sub
cs
push
jecxz
mov
into
mov
in
push
pushl
push
sub
dec
lock
or
cli
pop
lret
xchg
sub
in
jp
pop
loopne
call
mov
das
inc
sbb
jg
mov
inc
fwait
aaa
jae
into
lcall
dec
push
addr16
aas
insb
jns
pop
call
scas
cmp
out
movsb
push
and
pushl
mov
jge
imul
in
call
push
xchg
out
in
in
hlt
lcall
cld
pop
jecxz
dec
out
pop
in
test
or
jbe
inc
inc
call
movsb
clc
or
fst
mov
sub
inc
push
das
mov
jns
fdiv
stc
ret
fwait
and
nop
add
mov
mov
or
into
sbb
jl
lds
pop
jno
push
adc
mov
push
std
ljmp
mov
mov
stos
adc
rcll
in
into
scas
mov
mov
std
lcall
int
lods
out
sub
dec
repz
idiv
ljmp
jecxz
test
test
call
stos
mov
call
test
cmp
cmpsl
fcoml
sub
pusha
add
inc
mov
push
fiaddl
xor
add
inc
adc
mov
push
push
jle
pushl
sub
pop
fidivs
fidivs
jnp
jecxz
adc
adc
rclb
and
dec
dec
sub
imul
push
scas
pop
xchg
mov
call
cmpsl
pop
mov
fisubl
enter
push
nop
mov
add
push
fistps
jae
and
loop
or
aam
cld
sbb
xchg
cmp
loop
stos
sarb
jl
cmpsb
lret
mov
stos
js
mov
push
jmp
jmp
mov
mov
aad
cli
xchg
das
add
push
ret
fisubrl
std
inc
xchg
pop
add
out
jg
xor
sti
pop
shlb
subl
adc
jmp
xchg
cli
dec
push
cmc
mov
dec
xchg
mov
test
fisubrs
lods
test
xchg
jae
xor
cmpxchg
call
push
fadds
out
mov
fbld
pushf
cltd
gs
sub
ret
imul
push
adc
lock
jle
mov
ja
out
xlat
adc
scas
push
out
loop
dec
or
xor
call
int3
in
inc
mov
dec
subb
pop
dec
ljmp
jae
out
jno
and
xor
mov
mov
pushl
push
lcall
mov
stc
outsl
test
or
incl
sub
mov
pop
divb
push
sub
mov
or
shll
xor
fsts
or
aaa
cmp
mov
lcall
pop
inc
adc
jp
out
xor
push
mov
mov
out
sub
out
adc
xor
dec
mov
shlb
add
pusha
sbb
adc
das
mov
sarb
pop
mov
mov
decl
or
xchg
mov
ljmp
push
ret
push
mov
cld
mov
xchg
inc
sub
das
mov
pop
jo
jne
mov
addb
xchg
test
mov
ljmp
inc
aam
and
ljmp
jmp
cmpl
lds
test
jae
ret
pop
and
jg
xchg
or
sub
mov
sub
xor
cwtl
jns
dec
push
xorb
jge
mov
lods
decb
pusha
jae
xor
jecxz
js
add
push
cld
inc
mov
dec
icebp
push
sti
out
movsl
dec
mov
jl
jno
push
pop
stos
popa
xor
shll
jl
jae
das
insl
pop
test
mov
push
out
scas
test
inc
mov
pop
pop
sub
push
and
gs
call
cmp
je
in
jbe
xchg
mov
bound
fcomp
out
fdivl
mov
dec
xor
mov
jae
xor
sbb
jae
dec
imul
movsl
aaa
clc
ljmp
jle
fdivrs
mov
gs
fcmovbe
mov
pushf
mov
jns
push
inc
and
orl
call
or
inc
push
incl
xlat
xchg
mov
imul
test
push
cmp
dec
add
sub
outsl
movb
inc
loop
ss
pushl
cltd
ret
jnp
lods
and
push
adc
fsubrs
ljmp
std
dec
inc
stos
imul
mov
into
out
lods
pop
scas
add
pop
mov
adc
jmp
in
and
out
pop
into
xchg
mov
sub
or
sar
adc
inc
jmp
int
adc
xor
xor
adc
mov
push
mov
out
js
xor
jns
xor
dec
pop
add
mov
fnstcw
lcall
cmp
mov
in
dec
outsb
lods
sub
fisubs
mov
aad
call
jp
aas
jp
clc
aas
outsl
lret
pop
fwait
adc
cmp
pop
sarl
scas
int
inc
lods
call
outsl
sub
and
aas
aad
jecxz
inc
idiv
fisttps
xchg
add
cmc
push
xchg
pop
movsl
mov
xor
push
pop
and
imul
in
loopne
mov
push
ljmp
into
push
out
jge
fnstsw
jmp
cmpsl
mov
leave
sbb
ljmp
popa
cmpsb
mov
sarl
mov
icebp
outsl
rclb
xor
add
or
out
mov
data16
cld
test
add
pop
test
test
out
movsl
adc
sub
pop
clc
fistps
insb
sahf
sub
mov
sbb
push
and
mov
fnstsw
jg
jge
fldenv
jmp
lret
popl
arpl
sti
and
out
xor
jp
or
inc
cs
cltd
imulb
jp
pop
std
test
cwtl
sbb
aas
in
xor
xor
sbb
clc
call
call
xchg
pop
loop
adc
mov
fcmovnb
aas
inc
jge
outsl
xchg
inc
push
fsub
incl
daa
sti
mov
cmc
pop
outsl
nop
decl
lcall
fdivl
cmp
xor
ja
cmp
cmpsb
insb
pop
jne
fucomip
stos
data16
cmpb
gs
inc
xor
push
loope
dec
fld1
lds
lock
xchg
dec
mov
orl
or
pusha
outsl
aam
test
pop
hlt
lret
xchg
decl
cld
aas
frstor
pop
fldcw
mov
loopne
cmp
pop
enter
mov
lcall
and
leave
cmp
pushf
adc
add
add
nop
pop
lods
scas
loop
call
push
and
push
add
xchg
sub
xchg
int3
jl
pop
push
and
fiaddl
stc
insb
nop
into
enter
mov
imul
and
cwtl
ljmp
adc
ja
pop
xchg
stc
lods
rorl
jbe
test
sar
ss
loopne
jmp
mov
adc
xchg
das
cld
je
mov
ret
sbb
hlt
adc
pop
adc
xor
insl
lea
push
jmp
cmp
test
sub
lcall
xlat
jg
or
shlb
inc
data16
jg
dec
sub
test
push
mov
sub
inc
jg
aas
fstps
and
sub
pushl
pop
call
jl
mov
stos
jl
cmpl
in
dec
pop
sub
and
sub
jb
lock
decl
cmp
icebp
push
mov
ret
fwait
dec
ljmp
testl
fstpl
aam
out
dec
outsb
fldcw
imul
and
incl
mov
fwait
das
stos
aam
aas
cltd
mov
leave
es
sub
lcall
in
cmc
lret
ret
cwtl
mov
enter
mov
filds
push
in
shlb
out
lahf
test
cmc
cmc
nop
dec
xchg
std
movsl
fnstsw
insl
cmp
imul
xor
cmp
pop
cmp
dec
push
or
inc
sub
insl
and
divl
imul
adc
jmp
stc
and
xor
pushl
pushf
or
iret
mov
adc
loopne
aad
sub
loopne
or
jns
push
xor
pushf
inc
mov
pushf
push
adc
pop
aad
ja
xor
in
mov
popf
scas
push
icebp
xchg
inc
inc
sbb
cmp
pop
push
pushl
sub
idivl
rorb
loopne
push
or
dec
dec
adc
lods
add
jae
sbb
cli
sahf
out
dec
cmp
cs
pop
pop
mov
into
lods
xor
imull
mov
in
outsl
incl
and
in
inc
sbbl
ljmp
stos
inc
push
pop
mov
stos
in
enter
movsl
dec
pushf
and
inc
and
push
or
call
pushl
inc
inc
decl
mov
repz
mov
pop
neg
jp
dec
cld
xor
push
ret
pop
mov
jmp
aaa
xor
add
mov
xor
sbb
ljmp
mov
movsl
sub
loope
xorl
fcompl
dec
add
repnz
insb
daa
fs
das
sub
sub
mov
jae
jmp
xchg
xchg
and
scas
xor
sbb
int3
in
cmp
filds
cmc
or
push
lcall
test
clc
fdecstp
out
xchg
mov
mov
dec
pop
test
ret
dec
pop
call
push
mov
cmp
sbb
insl
add
into
lods
pop
popa
dec
aad
lcall
pushfw
adc
lret
out
and
jmp
popf
pushf
lea
cmp
pop
clc
incl
dec
ja
dec
pop
adc
scas
cs
sbb
xor
inc
jle
cld
mov
bound
gs
xor
mov
xchg
ljmp
mov
mov
pushl
inc
cli
jno
arpl
int3
sbb
test
cmp
leave
clc
push
xor
jmp
add
jp
movsl
test
rcrl
pushf
and
pop
bound
xor
xchg
bound
mov
mov
insl
lock
mov
in
push
inc
aaa
clc
call
xlat
jb
mov
lcall
push
lea
xchg
pushf
mov
ljmp
out
xchg
jp
pusha
lds
testl
sub
pusha
sbb
int
xchg
mov
int3
fs
add
fists
pop
cmp
repnz
fisttpll
dec
std
pushl
ffree
and
sub
cwtl
and
dec
rorl
xlat
push
pusha
test
test
js
hlt
pop
push
jge
mov
push
mov
inc
jl
push
rolb
mov
or
adc
push
and
adc
xchg
nop
stc
xor
xchg
out
mov
mov
add
push
and
gs
pop
or
xor
in
loopne
mov
out
jbe
cmp
mov
pop
push
sbb
lret
sub
pop
cmp
or
jb
mov
loopne
inc
jle
dec
std
push
insb
adcl
gs
mov
inc
xchg
test
hlt
lcall
inc
aas
adc
pop
add
das
hlt
leave
push
adc
and
out
xor
inc
xchg
fsubrl
call
addl
sub
cltd
mov
push
je
mov
pop
xchg
out
mov
lcall
pop
pop
pop
inc
mov
jmp
adc
add
add
incl
movsb
mov
ljmp
popa
pusha
xor
push
xchg
and
loopne
mov
sbb
xchg
in
sbb
push
inc
in
ljmp
insb
mov
je
mov
loop
pop
dec
mov
pop
loopne
mov
and
int3
jb,pt
jmp
jb
cmc
fnstsw
jmp
cmc
pop
jmp
inc
sub
call
mov
cmp
incl
fistpl
ret
xchg
mov
mov
mov
shrb
les
shr
call
mov
jg
xchg
mov
mov
insb
loopne
inc
inc
frstor
call
incl
cmp
and
jbe
fldt
inc
aam
pushw
sbb
jno
xorb
loopne
rolb
xor
into
rorb
andl
fisubrl
aad
das
stc
stos
or
test
out
xchg
lcall
inc
mov
sub
cmp
pop
xor
std
jno
lcall
push
jl
push
push
xchg
mov
push
pop
enter
xor
in
add
loope
subl
dec
cmpsb
mov
out
add
pop
push
rcrl
dec
stos
sub
call
jmp
mov
push
lcall
iret
cmp
dec
loope
mov
stos
mov
ffree
cmp
push
or
sub
in
aad
movsb
lret
inc
adc
push
lcall
stc
aaa
adc
sub
cmp
jae
fisttpl
call
and
enter
dec
sbb
aas
mov
jle
ljmp
stos
mov
mov
arpl
vmread
mov
pop
decl
xchg
mov
les
mov
insl
stos
call
bound
jbe
fildll
sbb
repnz
lcall
push
shrl
push
push
test
movhps
in
dec
std
pushl
mov
and
jo
scas
sub
insl
or
lcall
std
cltd
push
jp
arpl
adc
imul
loopne
pop
fcompl
jg
hlt
ret
adc
adc
and
cwtl
adc
xor
call
add
mov
js
and
es
xor
jnp
cltd
into
out
push
sti
outsl
pop
cli
loopne
rol
test
mov
inc
pop
mov
jg
int
rol
sub
pop
mov
sahf
xor
fisubl
fidivrl
pop
popa
add
xchg
sbb
cwtl
or
pop
icebp
dec
out
sbb
ficoms
inc
jmp
mov
sbb
push
and
mov
stos
mov
mov
icebp
lcall
dec
xchg
cmp
sub
xchg
lret
call
push
je
loop
ljmp
lcall
cmp
decl
aas
dec
je
insb
cmp
mov
mov
cwtl
rolb
pop
mov
xchg
mov
and
jno
out
andb
repnz
das
dec
add
pushf
mov
fadd
in
js
testl
dec
or
mov
mov
movsl
call
xor
out
mov
mov
pop
std
imul
sbb
mov
arpl
inc
dec
jle
icebp
cli
mov
sbbl
fwait
inc
fsubrl
cmp
push
push
incl
pop
fisubs
orb
mov
push
mov
jge
mov
xor
pop
lahf
push
aam
cli
clc
pop
mov
fnstcw
inc
xchg
mov
pop
sub
pushf
cmc
push
cmpsl
call
push
cmp
pop
sub
ret
jmp
lods
loope
sub
cmp
ljmp
or
jne
mov
cld
jmp
insl
inc
addr16
std
call
dec
int3
sahf
mov
add
je
jno
das
rcrb
insb
rcrl
test
fsubs
or
jae
test
jg,pt
dec
pop
movsb
jae
pop
xchg
clc
mov
add
jbe
lods
aas
mov
rcrb
shl
xchg
dec
jnp
xchg
das
cmc
incl
push
xchg
movl
bound
pop
xor
jp
cltd
call
add
jae
xchg
jb
jns
stos
jne
jg
cli
incl
pop
js
adc
testb
mov
sbb
push
call
aad
ja
popf
xchg
lods
hlt
pop
fisubrl
dec
xchg
mov
in
mov
sarl
adc
mov
decl
shl
loopne
mov
addl
xchg
or
cwtl
in
jge
inc
add
jmp
arpl
dec
sub
out
mov
inc
dec
ljmp
lcall
jmp
xorb
xchg
testb
sub
inc
sbb
push
mov
and
add
ljmp
jp
push
mov
xor
jg
icebp
add
pop
out
adc
call
add
stos
cmp
mov
sbb
bound
inc
ss
stc
pop
cmpsb
hlt
popf
dec
lcall
cli
icebp
sbb
test
dec
testb
cmp
js
pop
jp
adc
incl
fmull
add
ja
std
inc
shrl
push
shll
lret
mov
xchg
fucomip
roll
mov
push
mov
xor
icebp
das
lock
adc
shll
decl
cwtl
mov
inc
movsb
inc
int
icebp
dec
in
aas
push
push
cmp
adc
lret
ja
std
lcall
dec
xchg
movsb
and
push
dec
out
add
ljmp
shll
sbb
mov
sti
push
lds
aam
and
mov
addr16
lret
ljmp
mov
mov
js
pop
cld
jg
pop
sbb
cmc
jae
jg
xlat
data16
push
call
decl
xor
aaa
icebp
test
js
insl
mov
ror
mov
push
mov
iret
or
inc
hlt
decl
sbb
push
int
add
fadds
pop
rorw
rcrl
sub
aam
or
sub
call
jmp
xor
mov
dec
push
inc
or
in
sub
push
je
mov
jmp
outsl
call
adc
sub
push
dec
loopne
lcall
call
dec
push
xor
sbb
popa
mov
outsl
push
sub
fistps
push
mov
sub
out
decl
xchg
add
jns
cmc
fldenv
lock
in
add
pop
fucomip
decl
push
lret
lock
stos
test
cli
loope
arpl
lsl
ja
or
inc
sub
adc
fiadds
stos
cmp
pop
and
ret
arpl
sbb
call
adc
pop
xchg
inc
xor
popf
mov
and
iret
sbb
shrd
jg
inc
cmpl
or
sub
jns
jmp
aad
dec
movsl
pop
sbb
lcall
inc
test
dec
loope
xor
std
dec
mov
sti
aad
call
sahf
das
or
std
cmp
icebp
xchg
mov
pop
mov
push
scas
mov
mov
lahf
lret
ja
cvtps2pi
add
lret
mov
fcmovnb
jp
mov
popa
cmc
les
jle
incl
fldl
add
cmp
into
lea
mov
mov
mov
mov
out
jp
xor
int3
gs
cmp
lods
dec
lcall
and
or
out
push
sbb
fs
imul
movsl
xchg
clc
jmp
imul
cmp
jbe
mov
es
and
xchg
clc
dec
jb
cmp
lahf
cmpsb
out
inc
scas
ret
cltd
adc
or
lret
cwtl
mov
in
rcr
fistl
ljmp
scas
mov
filds
out
xor
pop
mov
push
sub
sarl
and
ja
xchg
xchg
push
cwtl
mov
std
sbb
nop
shll
pop
js
daa
pop
mov
aas
add
fimull
popa
cs
cli
pop
dec
ja
xchg
sbb
push
adc
cmp
mov
into
xor
ja
ja
xlat
mov
cmp
loope,pn
jge
add
xchg
cmp
incl
or
sbb
shl
jge
out
imul
les
incl
outsb
shrb
fldcw
outsl
inc
cmp
std
push
sub
call
outsl
push
sar
lcall
sub
and
hlt
or
sub
daa
push
clc
dec
and
pop
pop
lea
add
lock
call
ds
add
or
dec
test
daa
loopne
insb
loop
mov
ljmp
scas
mov
add
mov
ss
stos
dec
cmpsb
mov
mov
adc
xor
pushl
clc
mov
test
cmpsl
std
mov
insb
inc
xor
imul
incl
and
sbb
mov
rcrl
imul
fwait
push
test
xchg
or
int3
leave
or
jae
push
icebp
mov
xchg
sbb
jmp
add
jg
xchg
cmc
dec
sub
clc
dec
push
fnstenv
mov
and
js
fbld
bound
decl
sarb
es
lret
add
inc
in
loop
xchg
out
in
inc
cmp
mov
icebp
shlb
ficomps
fdivl
pop
pushf
ret
lcall
aad
and
call
in
ret
xchg
scas
lea
repnz
jb
push
popl
adc
lds
in
inc
add
add
dec
mov
sbb
imul
fisubrs
pop
push
in
clc
xlat
outsb
xor
inc
fcomi
mov
sar
decl
xor
test
aas
sub
mov
pushl
mov
inc
xor
pop
pop
xlat
pop
mov
sbb
mov
scas
rcr
jg
clc
adc
pop
out
in
pushf
repz
and
dec
rclb
and
dec
cmp
test
sti
fisttpl
hlt
mov
ret
push
hlt
ret
and
loope
xor
fdivrl
arpl
call
jle
dec
xor
jns
popa
mov
xchg
cld
std
decl
ret
push
in
es
jno
out
std
cwtl
outsb
jbe
dec
sbb
lods
roll
and
and
lcall
pop
jbe
push
int
fstl
push
ss
int
fs
xchg
jg
sub
repz
out
fucomip
incl
les
imul
test
lret
or
je
pushl
repnz
cmc
lock
jne
pop
push
mov
subb
incl
jle
data16
cwtl
or
jmp
or
es
into
ret
mov
and
cmc
incl
cmpb
add
cld
sahf
mov
mov
cs
sbb
out
jmp
or
xlat
es
push
cmp
leave
movsb
push
mov
cmp
test
xchg
fdivp
notl
leave
push
xorb
mov
cmp
in
call
scas
nop
adc
pop
push
mov
mov
addr16
cmpsb
les
rorb
mov
out
pop
lret
or
or
inc
push
mov
sar
es
and
mov
xchg
or
and
scas
es
push
push
push
lret
adc
push
add
lcall
or
out
leave
mov
mov
xchg
mov
mov
mov
and
add
call
pusha
out
mov
sti
dec
outsb
lea
mov
mov
mov
and
adc
icebp
mov
subb
add
xor
adc
jg
xchg
xchg
sub
fimull
pop
fsub
push
and
xchg
cli
pushl
fldenv
add
ds
mov
dec
jg
cltd
xchg
lods
xchg
bound
je
fisubs
sbb
dec
sbb
cmp
push
inc
push
sub
pushf
inc
addr16
push
enter
adc
push
or
test
aaa
cli
push
addr16
jge
aas
dec
pop
das
mov
popf
sahf
add
sub
jle
in
jg
stos
icebp
nop
lods
cmpsl
fisubs
cmpsb
repz
push
and
pop
rcll
cld
repnz
mov
cli
pop
loopne
jno
mov
or
pop
inc
adc
jmp
mov
in
bound
mov
cmp
adc
push
insl
push
jg
incb
mov
lods
jae
lea
loopne
mov
repnz
sub
daa
and
in
hlt
jg
movsb
fcmovnu
outsl
icebp
into
decb
add
and
sbb
into
outsb
aad
repz
mov
das
add
rolb
daa
pop
xchg
in
sbb
jg
xlat
enter
mov
arpl
movaps
stos
ds
movsl
pusha
push
in
push
sar
mov
mov
out
inc
movsb
pop
dec
loope
sbb
into
fimuls
ret
out
pop
call
xor
pop
sub
sbb
cmc
mov
jne
std
lea
mov
mov
add
push
adc
pop
in
add
incl
rclb
xor
mov
nop
jo
and
loop
ljmp
sub
sbb
lods
imul
call
cmp
int3
in
sbb
xor
aad
rcrb
fchs
push
pop
call
ljmp
sbb
popa
call
jbe
sub
stc
je
clc
jmp
add
xchg
xchg
decl
dec
mov
inc
pop
add
loopne
sub
in
mov
mov
lea
fwait
out
push
inc
mov
in
inc
in
inc
push
xor
incl
call
inc
cmpsb
fcmovb
inc
mov
jmp
popa
sub
mov
int
jg
add
lds
sub
and
push
adc
and
outsb
clc
out
mov
dec
or
in
in
mov
or
pop
jmp
mov
mov
adc
xor
mov
mov
repz
xchg
fstl
push
loop
loop
cli
jmp
xchg
das
cmp
xchg
mov
mov
arpl
xor
fisttps
fs
xchg
int3
cmp
push
mulb
int3
mov
loopne
sbb
hlt
xchg
in
jno
cmp
std
dec
inc
pushf
scas
jnp
movsl
xchg
jg
sahf
xchg
inc
ds
loopne
sub
adc
fwait
in
cld
lcall
push
pushl
repnz
inc
fiadds
mov
stos
stc
ljmp
push
cmp
xchg
pop
adc
inc
inc
adc
mov
imul
out
into
xchg
das
mov
mov
sar
ret
xchg
iret
sub
lret
mov
push
xor
lods
dec
jns
test
jo
jno
incl
jae
out
xor
test
insl
pop
cmp
fnstenv
xor
enter
or
shrl
ret
add
push
push
cs
add
lcall
notb
mov
stc
or
mov
jno
jns
xor
outsl
aas
pushl
fldenv
adcb
cmp
int
mov
xlat
mov
dec
sub
incl
mov
jb
repnz
mov
mov
lcall
daa
sar
jb
push
cwtl
std
cltd
shlb
xor
or
sub
jle
mov
mov
in
jp
pop
lret
decl
jp
imul
push
daa
mov
out
aam
cmp
out
addb
stc
jge
aam
xchg
adc
enter
incl
xchg
xor
mov
sbbb
movsl
inc
mov
jp
mov
mov
adc
std
inc
cmp
cmp
nop
add
loop
xor
xchg
insl
je
push
enter
push
fsin
pop
ljmp
test
sbb
out
mov
mov
fwait
jle
xor
lds
jmp
call
sbb
sbb
xchg
je
pushf
jb
mov
push
jno
repz
mov
inc
or
movsl
dec
sub
mov
dec
pop
adc
adc
jg
xchg
or
decl
cmp
sti
xor
push
imull
xor
loope
mov
jns
loop
sub
mov
or
int
xchg
mov
pop
mov
adc
incl
lds
movsb
or
shlb
pop
das
insb
shll
mov
lcall
ljmp
fcomps
outsb
cmp
dec
lahf
xchg
fmuls
mov
repz
outsl
mov
mov
incl
fdiv
pop
les
mov
inc
dec
cmp
xchg
pop
lret
fcmovbe
sbb
rcrl
test
push
pop
or
or
outsb
jmp
inc
jg
pushl
jno
jbe
cmc
mov
aam
sub
outsl
push
lods
decb
mov
movsl
push
pop
ljmp
popf
add
sub
incl
ljmp
xor
das
fstps
mov
push
js
jle
mov
ljmp
cld
sbb
mov
imull
in
sbb
inc
sbb
nop
jp
incl
outsl
mov
cmpsl
and
xorl
inc
jbe
pop
stos
ljmp
xchg
mov
jnp
bound
pop
mov
sub
ljmp
cmc
xchg
inc
cmp
add
mov
jbe
cmp
test
call
inc
sub
xlat
iret
js
subb
or
or
cmp
das
repz
dec
xor
pusha
adc
cmp
xchg
or
in
mov
mov
pop
inc
inc
subl
pusha
lock
jg
mov
adc
rclb
sti
insb
pop
push
cmp
xchg
xchg
xchg
lcall
mov
mov
dec
mov
lock
addr16
cmp
int
xor
pusha
xchg
incb
cmp
int
sti
adcl
fucomip
decl
lock
and
loopne
stos
lods
dec
hlt
cld
cmc
push
scas
scas
mov
pushl
leave
sub
push
notl
lahf
sbb
dec
pusha
add
sahf
cli
jmp
sbb
ficompl
push
jp
in
mov
pushl
rorl
jbe
call
call
mov
dec
dec
ret
testb
or
loopne
call
lret
nop
cmp
add
rclb
int3
in
or
call
xor
mov
pop
stos
mov
and
xor
jg
xchg
push
sar
in
inc
incl
adc
mov
cli
jbe
cmp
xchg
push
fildll
jmp
cmpsb
ficomps
jg
mov
xor
sbb
xchg
push
xchg
fcoml
mov
decl
inc
mov
cmp
sub
mov
inc
xchg
bound
fxch
dec
cmp
xchg
fidivrl
jo
std
mov
movsl
mov
push
dec
add
jnp
in
int3
ljmp
cmc
ficoms
lret
mov
repz
sub
mov
enter
incl
mov
xchg
mov
lea
cmc
jmp
push
mov
imul
jecxz
push
icebp
daa
cltd
movsb
clc
icebp
incl
mov
adc
sahf
sub
jns
repz
jp
lock
fs
imul
test
loop
push
xchg
aaa
aad
test
inc
or
mov
dec
add
pop
mov
gs
mov
xor
ljmp
push
lea
mov
mov
pop
jle
popf
push
lret
or
fidivrs
cmp
loopne
jns
data16
lret
lock
mov
inc
mov
jecxz
mov
jmp
mov
test
or
sub
outsb
jno
sti
add
jb
and
lahf
stc
cwtl
mov
repz
lods
inc
stc
pop
scas
mov
or
add
mov
call
movsl
outsl
dec
sbb
je
and
imul
fldpi
xchg
mov
pop
sti
lcall
loope
in
cmp
outsb
mov
js
in
inc
add
sbb
lcall
jg
xchg
in
movsl
xchg
mov
xchg
outsl
and
into
mov
push
cmp
xchg
dec
decl
cld
in
push
mov
push
cmp
fiaddl
pop
cmp
cs
mov
cmpsl
sbb
add
sbb
std
push
xchg
sub
inc
jg
psrad
jp
push
pushf
or
dec
ljmp
call
mov
repnz
mov
mov
fstpt
jnp
jae
gs
test
xor
push
cs
xchg
sub
pop
fwait
mov
cmp
cli
fucomip
pushl
aaa
mov
inc
xor
mov
jg
xchg
and
sarb
xlat
inc
xor
xor
pop
addr16
adc
add
rol
std
jmp
nop
pop
push
jmp
and
ljmp
sub
flds
lcall
filds
ficoml
jmp
pop
stos
sub
ret
jns
sahf
in
repz
ss
rcll
sbb
shrl
pop
in
pushf
popf
cwtl
call
inc
outsl
jo
decb
or
das
or
push
and
push
cmp
mov
sub
mov
decl
add
mov
adc
cmpsb
mov
das
mov
jge
and
pop
xor
fucomip
call
xchg
mov
fistps
cmc
mov
je
dec
lea
decb
nop
push
sub
popa
stos
inc
sbb
inc
add
pushl
sub
inc
mov
jns
dec
mov
in
mov
frstor
push
xchg
jg
mov
mov
scas
xchg
les
fwait
leave
into
imul
in
and
xchg
jmp
adc
jb
push
push
push
dec
loope
sub
and
cs
fistps
push
mov
adc
ja
xorb
lret
pop
mov
dec
push
call
add
iret
mov
xor
mov
jg
call
xlat
pop
inc
int
sbb
push
jecxz
or
movsl
repz
fwait
mov
out
and
incb
push
enter
jae
cmp
movsl
jb
cmpsl
xchg
movsb
sti
stos
mov
jns
push
sub
cld
pop
insl
xor
pop
pop
int
pop
adc
filds
imul
mov
adc
or
pop
sub
push
add
stos
dec
and
cwtl
adc
jp
add
in
incl
adc
lahf
movsb
add
les
jmp
or
inc
out
nop
push
xchg
ljmp
mov
gs
aaa
cmp
adc
jp
scas
ficompl
scas
imul
out
fwait
fwait
mov
xchg
cmp
or
mov
xchg
es
jno
sbb
test
push
jle
jno
fbstp
jg
adc
in
jg
push
cld
pop
bound
aad
cmpsl
out
inc
inc
pop
call
call
aaa
popa
test
loope
sbb
inc
aam
ficoml
stos
jmp
popf
xchg
dec
pop
push
mov
jb
add
jg
loop
pop
popf
inc
inc
outsl
xor
jp
adc
jb
xor
jmp
out
test
jmp
arpl
inc
adc
loope
xor
push
shlb
adc
push
fdivl
push
mov
inc
out
pushw
jmp
push
jno
add
push
int
stos
lods
xchg
jae
inc
xchg
push
or
fisttps
or
jg
add
arpl
mov
push
mov
in
mov
inc
scas
xlat
adc
fs
mov
mov
adc
scas
shll
pop
loop
mov
arpl
call
sarb
cmpl
data16
orb
fidivs
lcall
pushl
mov
xchg
pop
jnp
sbb
aad
or
or
mov
call
loope
mov
jmp
imul
add
push
pop
sub
xchg
movsl
or
out
inc
mov
stos
mov
fcompl
mov
mov
sbb
bound
cmp
jge
incl
sbb
add
mov
shrb
ds
adc
dec
call
mov
ss
or
mov
mov
cmp
cwtl
xchg
sbb
lcall
xor
jno
mov
lcall
ja
sbb
mov
jnp
jg
jge
mov
inc
pop
pop
push
push
fcomps
mov
nop
mov
outsb
cs
pop
addr16
gs
or
in
test
ficompl
popf
lock
cwtl
pop
adc
in
mov
cltd
jle
pop
cmpsl
aam
xor
cmpsl
popa
ficoml
incl
fsubrl
cmp
pop
daa
pop
sahf
adc
jp
mov
mov
clc
rcll
xchg
test
clc
pop
in
sub
in
lock
ljmp
int
mov
leave
jns
push
push
lcall
ret
dec
inc
shlb
sbb
xor
fucomip
push
jnp
sti
push
adc
cli
jecxz
lock
sbb
pushl
or
add
pusha
or
mov
fmull
lret
movsl
xchg
cmp
jg
cmp
pop
scas
xor
jge
aaa
outsl
cltd
xor
inc
stc
js
push
dec
js
call
and
orb
pop
enter
or
outsl
aas
scas
scas
shlb
test
adc
sub
cmp
jbe
inc
cmpsb
pop
xchg
icebp
scas
pop
mov
pop
jmp
int3
xchg
shl
push
shlb
xorb
clc
mov
enter
mov
jl
shrl
xchg
std
sahf
pop
mov
ljmp
mov
push
scas
push
pop
into
pop
mov
jl
loop
add
sbb
push
inc
sub
fstps
sti
aam
cmpsb
jmp
js
ja
enter
iret
mov
push
js
dec
je
loop
stos
lcall
inc
jp
adc
push
enter
add
xchg
roll
cli
jg
inc
daa
iret
arpl
and
mov
sbb
pop
mov
mov
mov
cmp
nop
xor
out
mov
incl
out
xor
sbb
je
xchg
outsl
jecxz
dec
pop
xor
dec
jbe
iret
jnp
ss
mov
and
mov
jb
das
sub
lods
call
fsub
ud0
dec
std
jae
repnz
mov
sbb
adc
jg
or
mov
leave
sarb
fucomip
cmp
in
push
push
ljmp
icebp
in
inc
adc
add
loop
sub
or
pop
or
lcall
mov
mov
aam
jg
push
cmp
and
cmp
push
sbb
push
xchg
nop
mov
hlt
jno
cltd
cmpb
and
push
pop
or
leave
sub
pop
cli
incl
adc
pop
outsb
test
sub
jge
dec
xchg
xchg
pop
push
push
sbb
cmp
or
aam
mov
imul
inc
adc
ret
dec
lahf
loop
adc
call
sti
pushl
push
sar
mov
pop
test
mov
idivl
adc
mov
ret
mov
in
cmpsb
push
adc
inc
mov
pushl
lcall
sahf
scas
sbb
inc
jne
ret
hlt
rcl
popf
pop
dec
stos
sub
flds
movsb
dec
add
mov
popa
jg
shrb
add
mov
mov
cmp
mov
adc
rcl
test
ljmp
mov
sar
decl
fwait
mov
ret
arpl
jecxz
push
xlat
cs
ljmp
or
sub
mov
inc
inc
outsb
dec
pop
test
sar
dec
cld
inc
es
dec
push
out
inc
mov
xchg
inc
hlt
movsb
pop
les
mov
and
mov
dec
test
iret
jbe
sbb
ficoms
sbb
decl
adc
in
mov
subl
daa
loop
sbb
decl
imul
sbb
jns
cltd
fwait
jp
adc
mov
hlt
push
sbb
jmp
ljmp
fdecstp
xlat
loope
sub
cmp
xor
jbe
in
mov
ljmp
icebp
pop
fwait
xchg
mov
shlb
sbb
cmp
lea
pushl
hlt
aad
imul
incl
idiv
test
icebp
testb
or
out
push
lret
fsubs
jne
mov
incl
lret
and
inc
scas
popa
mov
jecxz
lret
pop
loopne
pop
mov
fsts
ret
data16
popa
pop
add
xor
pushl
pop
jle
aad
or
xchg
pop
add
je
add
and
push
ljmp
adc
pushl
cmp
jl
add
es
jle
dec
mov
fidivrl
xor
decl
push
add
lea
jg
pop
aad
inc
stc
cld
fcoml
dec
scas
mov
pop
push
sub
add
sar
push
jge
loopne
dec
ja
mov
adc
test
int3
pop
jecxz
stos
into
das
push
std
call
repz
outsl
addr16
push
dec
popf
fdivrl
in
inc
sar
decl
sbb
cwtl
jno
cltd
or
pushf
negl
pop
lcall
imul
movq
hlt
fcompl
fs
mov
roll
orl
mov
and
incl
mov
cmp
jp
dec
jno
xchg
or
fnstenv
cmc
ds
mov
push
std
addr16
sahf
loopne
dec
jbe
gs
pushf
xchg
mov
dec
sub
xchg
lods
cltd
or
sbb
push
repnz
cltd
pushl
inc
stos
das
aam
loop
fisubl
add
inc
mov
inc
dec
out
test
cld
pushl
inc
loope
js
sbb
lcall
jg
insl
sbb
cmpsl
lret
push
clc
xlat
add
sbb
stos
jnp,pt
clc
pop
mov
pop
pop
loope
lds
js
test
add
fucomip
pop
add
push
adcb
cmp
pop
outsl
icebp
jg
in
xor
mov
mov
cmp
push
pop
lods
adc
lods
pushl
les
hlt
pusha
dec
jnp
sbb
testl
sahf
int3
std
mov
call
subb
outsb
repnz
lds
imull
dec
ret
cltd
xor
aaa
clc
addr16
jmp
cmp
mov
pusha
add
aad
in
xchg
sarl
pop
mov
ss
push
add
repnz
das
mov
jecxz
and
pop
mov
mov
jo
int
mov
xor
daa
inc
pop
ret
fstpl
repnz
push
cltd
mov
jmp
ljmp
xor
jbe
mov
push
xor
xchg
ds
mov
filds
cli
dec
dec
icebp
fld
ret
add
cs
insb
lahf
dec
jp
das
lock
in
std
fwait
out
push
sbbb
push
dec
jecxz
fldt
call
or
lea
xchg
dec
enter
adc
jg
fwait
and
out
pop
jg
mov
dec
adc
incl
mov
dec
cmc
push
mov
fstps
sti
mov
testl
xchg
insl
notb
xor
cmpsb
xor
mov
call
jmp
fldcw
pusha
jge
push
fcoms
daa
mov
call
sbb
inc
push
insl
mov
push
loope
mov
fisttps
addb
fcmovb
push
dec
jae
mov
dec
mov
jns
call
jno
inc
jle
jmp
sbb
adcb
or
adcl
shrb
jle
loopne
movsb
rcl
out
dec
jg
movsl
jns
fidivrl
push
lods
push
xchg
repnz
cmp
adc
lcall
ret
hlt
mov
and
ficompl
push
cmp
mov
push
or
mov
cld
fucomip
sbb
xor
insb
popa
adc
xchg
mov
dec
jg
outsl
lock
cld
mov
mov
cwtl
cmp
fimull
and
inc
cmp
push
int
subl
push
lock
fbstp
movsl
out
loope
lcall
and
neg
out
daa
dec
ljmp
mov
lret
out
xchg
popa
inc
in
loopne
lcall
int
adc
sub
hlt
mov
mov
test
repnz
mov
sbb
std
lods
jl
cmc
fwait
insb
and
inc
sbb
jl
ljmp
push
scas
aad
ljmp
js
in
jo
sub
cwtl
push
into
ss
push
jmp
aas
push
sbb
sbb
xlat
push
jns
push
popf
rcll
icebp
add
test
stc
push
les
iret
outsl
hlt
mov
ljmp
loop
cli
dec
xlat
aam
faddl
out
add
cwtl
fadd
sbb
jbe
fwait
dec
aaa
xlat
int3
mov
fstp
decl
mov
and
mov
xchg
push
pop
int
jl
sub
fadds
call
adc
xchg
or
push
adc
sbb
inc
mov
mov
sub
or
shr
dec
cmpsb
add
cs
shr
push
or
lcall
cs
mov
shll
sbb
mov
or
cmp
les
test
xchg
jno
call
mov
fwait
mov
and
xchg
xchg
mov
jg
xchg
cli
xlat
scas
in
addr16
out
sarl
mov
jns
inc
xlat
push
jg
push
inc
fs
mov
xor
mov
out
mov
shll
pop
cli
ret
das
or
pop
add
pusha
cmp
iret
out
xchg
jno
jg
call
add
dec
push
arpl
adc
xchg
sbb
sbb
inc
pop
insl
lret
jle
xchg
enter
in
add
je
jns
mov
xor
sbb
mov
push
push
inc
mov
jg
sbb
out
push
mov
les
cmp
cmpsb
jp
call
outsl
cs
adc
push
push
jmp
std
rol
pop
pop
mov
jecxz
pop
js
sub
mov
aam
xchg
aaa
shr
pop
mov
fnstcw
mov
xchg
arpl
aad
les
cmpsb
or
shlb
fs
dec
cld
call
jo
add
xor
js
addr16
add
inc
stos
lds
jae
lret
inc
lret
ljmp
mov
mov
xchg
test
lcall
add
push
pop
mov
cli
inc
sbb
int
out
and
sbb
lcall
xor
xor
add
push
into
repz
call
in
hlt
mov
in
ljmp
sub
xchg
and
mov
movsl
or
pop
arpl
out
repz
pop
loopne
dec
movsb
mov
out
sbb
jae
out
pop
roll
push
mov
push
jns
cmp
sbb
fisubrl
sbb
xor
cmp
lock
iret
fwait
add
sbb
mov
jecxz
mov
cmpsb
insl
imul
push
test
in
mov
dec
add
pop
pushf
jb
movsl
and
imul
lock
dec
mov
cld
jmp
or
cs
repnz
pop
in
mov
push
sbb
cmpl
cli
jnp
add
push
xchg
inc
mov
mov
dec
repz
das
add
imul
mov
std
jmp
repz
push
adc
clc
sub
inc
das
cmc
outsl
lock
push
mov
das
sbb
aas
fwait
mov
pushl
lods
out
sub
adc
mov
insb
leave
sahf
es
test
pop
push
outsl
add
xor
adcl
add
cmp
mov
sbb
pop
jle
add
fldcw
push
push
mov
test
add
jae
aad
pop
fs
or
mov
sbbb
out
jb
ljmp
cld
lcall
data16
xor
lods
or
lahf
in
negl
mov
push
push
ljmp
and
in
jno
in
pop
dec
pop
mov
mov
js
and
fbstp
hlt
stos
hlt
jnp
pop
jne
sbb
shlb
aad
scas
add
xchg
out
mov
pop
push
xor
push
jg
xchg
decb
mov
je
test
movsl
das
hlt
popf
xchg
cld
cs
test
xor
xchg
inc
mov
stc
in
xor
push
ret
push
push
call
sub
insl
orl
stc
xchg
imull
ljmp
jmp
push
adc
add
pop
jp
scas
pop
push
fsubrl
je
add
call
shlb
incl
sbb
mov
add
sub
pop
push
inc
repnz
sahf
les
xor
lcall
mov
xor
sbb
icebp
bound
pop
jle
add
jg
add
shld
sbb
mov
stos
call
idivl
pop
add
push
ja
adc
cmp
inc
mov
addr16
pop
icebp
cmp
inc
pop
lods
test
fmuls
mov
push
loopne
ljmp
xor
jg
jmp
inc
gs
leave
mov
clc
cmc
push
xor
or
pushf
dec
or
inc
incl
jmp
mov
mov
xchg
rcrb
jo
or
pushf
dec
sbb
xchg
and
ret
into
pop
xor
cli
decl
xlat
lea
daa
jne
mov
pop
mov
aas
cld
das
inc
icebp
mov
mov
jne
icebp
leave
pop
sbb
pop
in
add
decl
inc
mov
adc
sub
fidivs
das
in
dec
dec
mov
mov
lcall
xor
push
push
adc
bnd
xchg
adc
dec
and
add
ljmp
pop
mov
mov
sub
pop
popa
mov
inc
neg
mov
repnz
bound
mov
xor
push
dec
nop
pop
aaa
sub
in
push
out
push
jno
scas
xor
hlt
popa
jnp
sub
leave
into
xchg
pusha
repnz
xor
int3
repz
and
sub
xchg
jl
cli
lods
mov
test
adc
mov
and
insl
xor
into
not
pushl
lret
cmp
cld
in
lods
ret
xor
lcall
dec
dec
adc
cmp
cmc
inc
lcall
aaa
fmul
xor
pushf
mov
xor
jg
pop
jle
pop
mov
into
ret
sbb
mov
xchg
stos
test
cmp
pop
int
aaa
sbb
pop
call
lods
cli
dec
jp
inc
or
aam
jnp
iret
adc
aaa
addr16
pusha
fwait
cmp
outsl
fwait
lahf
jne
scas
les
adc
ljmp
xor
fs
subb
pushl
sbb
mov
xor
mov
cli
pushl
stos
cltd
mulb
jg
sub
clc
or
in
rcll
pop
cli
dec
repz
ljmp
cmp
cltd
xchg
test
sub
dec
shrl
movsl
push
mov
jns
insb
cmp
imul
jne
rcrl
lahf
mov
test
xlat
nop
sbb
lcall
enter
xchg
into
mulb
mov
lret
cli
cs
outsb
cld
mov
ljmp
leave
insl
xchg
jp
dec
int3
pop
imul
pop
xlat
inc
mov
mov
push
ret
out
imul
pop
cli
jmp
jne
xchg
sbb
out
jecxz
movsb
xchg
add
push
ss
lea
jecxz
xchg
sub
add
mov
addr16
fisttps
lsl
outsl
icebp
dec
adc
fstp
inc
ss
mov
scas
test
notb
aaa
clc
xlat
psllq
pop
push
push
lods
cmpsl
mov
push
mov
and
xor
dec
fstps
arpl
mov
or
repnz
shr
inc
push
push
mov
es
jg
out
dec
loopne
call
addr16
pop
loop
shlb
out
shl
sub
cmpsb
add
das
lock
pushl
das
ret
pop
jge
xchg
hlt
les
cwtl
stc
addl
nop
inc
mov
jmp
mov
sub
cmp
push
mov
push
mov
out
cld
pop
cwtl
mov
jmp
inc
jl
push
mov
movsl
bnd
loopne
dec
aaa
sbb
or
cmpsl
enter
adc
sbb
sub
test
jmp
nop
or
mov
inc
pop
imul
in
loop
jge
dec
jne
les
les
shl
fs
pop
or
and
das
out
mov
push
mov
outsb
xchg
fstp
adc
xchg
lods
imul
call
rclb
rcrl
cmp
enter
out
sub
mov
and
push
push
incl
imul
or
jl
xchg
xchg
filds
sar
push
jmp
push
lahf
fbstp
enter
popa
xorl
stc
arpl
outsl
jb
mov
enter
js
fmull
cmp
lcall
and
fstl
jmp
xchg
and
jb
mov
aam
pop
jg
sti
pop
rorb
push
out
rclb
jns
rolb
insl
rol
push
mov
fistpll
decl
jl
push
lret
and
cwtl
lea
loopne
out
loopne
and
lret
lods
xor
loope
add
add
mov
dec
out
bound
mov
and
rolb
syscall
les
or
idiv
decl
cmpsl
lret
sbb
outsb
andb
and
pop
out
addr16
incl
sbb
jnp
inc
imul
decl
xchg
sub
jle
les
mov
adc
lods
mov
mov
pop
inc
push
xor
sbb
stos
sti
imul
movsb
sbb
push
push
aas
sar
arpl
in
clc
sub
ss
lcall
jmp
fidivs
sti
mov
in
pusha
arpl
divb
ftst
inc
incl
mov
or
or
in
movsl
iret
push
sbb
bnd
jmp
mov
imul
out
dec
shlb
adc
push
pushl
nop
mov
aaa
or
icebp
test
and
pop
push
push
pushl
dec
dec
lret
inc
dec
xor
movsl
add
ret
xor
call
outsl
sub
push
insl
pop
cmp
adc
mov
dec
cmp
loopnew
outsl
std
pop
das
mov
jb
or
push
notl
cmp
fnstcw
lds
aam
jecxz
cmpsb
mov
ljmp
mov
add
addr16
aas
inc
bnd
arpl
jns
inc
lods
xor
jmp
loope
push
pop
vpshad
inc
bound
mov
loop
push
jl
add
push
add
je
call
jmp
shlb
push
stos
clc
mov
or
mov
sbb
lcall
and
dec
call
pop
ret
inc
ljmp
enter
mov
cmp
pop
std
decl
dec
out
mov
pusha
pop
push
jo
push
enter
jmp
pmaddwd
push
or
repz
icebp
push
rcll
repnz
sub
and
pop
mov
cmpsb
push
cmp
test
je
inc
ljmp
jbe
adc
pop
adc
shr
xor
dec
sarb
xchg
js
aas
jl
and
enter
lea
out
mov
mov
push
aam
outsb
xor
jbe
loop
test
enter
lds
lcall
jmp
cmp
adc
push
rorb
sbb
xor
adc
ljmp
and
mov
xor
jbe
repz
decl
sti
popa
mov
test
ljmp
adc
pop
insl
adc
push
inc
xorb
pop
add
jmp
mov
or
sarl
push
in
sti
and
leave
lcall
ljmp
mov
inc
leave
je
loope
test
xor
pop
push
gs
jg
outsl
sbb
add
fucomi
pusha
pushf
fisubl
adc
mov
mov
mov
fdivr
add
adc
decl
lcall
hlt
push
jae
pop
aaa
sub
in
das
lds
aaa
cs
jnp
adcb
sbb
xchg
arpl
inc
inc
lcall
lcall
cmp
es
dec
icebp
repz
push
mov
sub
xor
in
pushl
std
iret
lea
dec
xchg
xchg
jecxz
outsl
mov
pushl
lahf
adc
nop
mov
jb
pop
ljmp
jmp
rcrl
fst
loope
daa
cmp
call
or
cmc
sbb
and
push
fadds
push
xor
loop
bound
cmp
inc
jnp
push
test
lcall
std
daa
mov
xchg
loopne
adc
mov
out
dec
pop
cmp
adc
jg
xchg
sbb
mov
test
stc
sbb
call
into
xchg
push
incl
pushl
leave
dec
mov
cld
sub
sub
icebp
or
decb
xchg
cltd
mov
dec
xor
adc
push
loopne
sahf
pushl
mov
sbb
test
pop
test
jmp
inc
sub
mov
pusha
subb
push
nop
add
pop
sub
ret
int
jae
inc
scas
hlt
lods
cmpsb
cli
hlt
ds
push
sub
cli
pop
into
insb
inc
test
in
cli
ljmp
hlt
adc
lock
std
xchg
xchg
push
das
sbb
outsl
stos
ds
mov
mov
jb
sarb
or
mov
cmp
push
or
lcall
mov
mov
rcr
test
into
les
cli
int3
inc
mov
insl
inc
lods
sub
ja
aad
push
mov
cmp
add
push
xchg
xor
jno
daa
pop
cmp
pop
ljmp
push
or
xchg
lods
shl
dec
popa
jle
mov
cld
ljmp
cs
int3
mov
push
inc
dec
jg
cmp
sub
sub
incl
stos
mov
jmp
pop
stc
jg
jae
scas
jmp
shlb
std
scas
cmpl
cmpsl
aad
mov
push
cld
in
incl
dec
out
ds
and
and
xlat
push
inc
mov
das
push
icebp
andl
test
std
push
lcall
in
cwtl
pop
jmp
bound
ljmp
ds
ja
fstl
add
push
cld
call
lock
mov
loop
imulb
sub
mov
cmp
call
fistpl
fldl
fsubrl
inc
fimull
pop
lods
pop
loop
decl
sbb
pop
push
mov
mov
insl
inc
mov
stos
aad
std
ljmp
push
test
sbb
xor
test
dec
adc
jae
rcrb
add
inc
jecxz
push
fbstp
incl
mov
mov
fiadds
call
xor
loop
sar
addr16
hlt
mov
xor
shl
lcall
sub
shrl
stc
lret
inc
in
cmpsl
ljmp
test
mov
decl
shlb
xlat
jl
dec
dec
adc
lea
jge
popa
int3
pop
imul
inc
in
xchg
pop
sarl
inc
lret
daa
xor
sbb
je
xchg
imul
incl
mov
jg
ret
sub
mov
sub
icebp
decl
jns
adc
jmp
pop
lcall
pop
mov
stos
dec
mov
mov
ret
sub
xor
xor
subb
sub
inc
into
pushf
jecxz
je
int3
lret
xchg
outsb
mov
test
sub
pop
daa
mov
out
popf
xchg
aaa
xchg
pop
jg
jmp
jnp
call
inc
inc
dec
jbe
dec
test
or
cld
fstpt
and
cmpsl
adc
mov
or
mov
dec
in
push
bound
cld
incl
xchg
xlat
adc
xchg
outsb
xor
js
sbb
mov
inc
or
shrl
pop
jno
jecxz
and
push
out
jecxz
xchg
or
lock
incl
dec
arpl
js
inc
cmp
shrl
mov
push
test
mov
lret
stos
ss
ljmp
adc
dec
repz
and
mov
mov
xchg
push
or
lcall
scas
jo
dec
pop
je,pn
ljmp
sub
jle
dec
repz
dec
stos
ja
mov
add
cltd
xchg
pushl
movl
adc
inc
mov
or
js
incl
adc
jl
or
lret
or
mov
scas
std
pushl
outsl
cmp
mov
mov
daa
jge
sub
jno
insl
out
mov
int
pushf
call
mov
push
pop
fiadds
cmpsl
pop
or
ja
fdivs
inc
jg
bound
pop
fwait
call
xorb
insb
mov
push
mov
cmp
push
mov
stc
mov
cwtl
pop
add
push
dec
rcrl
decl
ret
ud1
jbe
xor
inc
iret
js
jb
push
icebp
push
jg
xor
sub
jle
xlat
hlt
dec
mov
scas
mov
dec
les
lock
pop
xchg
pop
inc
xchg
icebp
push
pop
jae
lcall
jbe
lea
test
fdivr
lods
fisttpll
pop
dec
mov
incl
and
subl
adc
lret
loop
xor
test
call
mov
cmp
xor
mov
insl
mov
push
je
lock
call
fsubrl
filds
aas
frstor
or
ja
sar
addb
jne
dec
cmpsl
loop
xchg
adc
cmp
or
mov
fadd
pop
aad
adc
scas
jns
push
push
mov
adc
pusha
xchg
cld
push
push
lcall
fisttpll
loop
ud0
xchg
sub
in
fwait
clc
pop
add
jns
mov
jle
aaa
lock
or
adc
jg
in
jo
sbb
subl
cmp
mov
push
movsb
mov
lods
pop
fsub
lcall
movsl
jle
cmp
sbb
ljmp
call
dec
bound
lods
cmc
pop
dec
jo
cmc
mov
cwtl
pushf
pop
adc
fmull
leave
sub
add
out
clc
dec
into
pop
jle
aas
or
mov
push
adcl
adc
jo
leave
dec
adc
cli
inc
sbb
sub
add
call
add
adc
push
outsl
xor
aam
add
dec
inc
test
call
mov
lods
int3
add
dec
insl
jne
lods
ds
mov
xchg
mov
mov
xchg
cmp
outsb
pop
bound
stc
arpl
mov
and
test
xor
add
pop
xor
lea
je,pt
sub
test
mov
fidivrl
js
dec
dec
push
pop
enter
jg
fs
sbb
mov
leave
mov
mov
xchg
sbb
scas
ror
jae
imul
mov
jns
iret
fsubs
sbb
and
jg
cmc
aam
fmull
addl
jmp
adc
ret
pop
jno
push
cmp
or
adc
jg
mov
pusha
lahf
jl
pop
ffree
out
pushf
and
call
dec
test
push
sub
fists
scas
fiaddl
pop
push
add
andb
mov
push
aas
repnz
sbb
jg
mov
push
inc
jnp
cmp
outsb
jg
mov
fildl
xchg
in
sbb
shll
push
mov
pushl
xchg
pop
sub
sbb
fldcw
mov
popf
inc
mov
sti
jmp
js
ljmp
dec
test
push
data16
add
in
jp
out
dec
mov
lret
je
mov
pop
cmp
mov
add
int3
lcall
push
jle,pt
call
jns
das
stos
pusha
mov
ja
mov
inc
adc
pop
fcoml
and
stos
mov
jge
shlb
and
shrb
call
fsubrs
fldl
bound
xor
popf
pop
inc
outsb
div
scas
mov
std
in
lret
enter
in
fcompl
xchg
mov
incl
jmp
cmp
mov
inc
dec
insb
das
adc
test
mov
bound
or
fsub
movsl
jmp
je
shrb
lcall
jb
mov
xor
mov
jbe
aad
outsl
cwtl
mov
call
cmp
fidivs
shll
cld
loop
jge
or
lcall
out
xor
cs
push
mov
add
lret
jmp
call
mov
or
cmp
add
ret
leave
rcl
xorl
jmp
incl
add
xor
push
xchg
jp
leave
out
adc
insb
call
mov
dec
stos
and
in
inc
and
loop
sarb
add
jae
or
movsl
fwait
xchg
inc
dec
ljmp
inc
mov
mov
xchg
das
lahf
mov
lret
out
clc
jmp
int3
popa
cmpl
xchg
sub
out
inc
int3
into
or
jp
js
jo
ret
aam
pushl
cmp
push
scas
sbb
shl
cmp
insl
loop
popa
lods
lea
push
es
jb
cmp
sub
xor
out
or
lods
decl
dec
cltd
push
pop
popf
dec
inc
sbb
fidivrs
inc
xchg
iret
inc
pop
xor
in
pusha
cltd
add
cmp
sbb
pop
out
ljmp
pop
push
dec
fdivrs
inc
insl
push
rcrl
pop
clc
incb
adc
push
mov
xor
xor
ss
lcall
lods
cmp
addb
add
mov
push
out
popa
xor
cs
mov
dec
call
clc
cwtl
into
repz
cmc
sarl
mov
mov
add
daa
fildl
pop
pop
int
pop
fldt
jl
jge
frstpm(287
add
aaa
insl
addr16
xchg
cmpl
xchg
aaa
cmp
decl
nop
dec
add
outsb
xchg
sub
imul
out
loope
cmp
loope
roll
push
icebp
cmp
pop
std
insl
or
iret
lahf
stos
pop
das
cld
pop
pusha
test
shll
in
cmp
cld
aaa
clc
jne
jnp
inc
into
mov
insl
add
mov
call
mov
or
pushf
mov
xchg
daa
mov
mov
mov
in
andb
sub
jge
rolb
in
pusha
jb
inc
and
minps
xchg
lcall
cmpsb
and
fcompl
in
mov
cmp
inc
mov
decl
push
ljmp
jcxz
sbb
sbb
mov
inc
inc
std
adc
mov
jl
repz
testl
das
add
lahf
xchg
mov
lcall
aaa
aaa
ja
cld
pop
mov
jg
aad
dec
lret
sub
dec
in
sbb
andb
movsl
jns
outsb
fcmovb
push
aam
incl
divb
hlt
xchg
outsl
cmc
das
adc
add
dec
fsubp
cmc
rcr
mov
popa
inc
sarb
lcall
add
ss
dec
jb
cmpb
mov
push
jmp
mov
and
jg
inc
ss
adc
jo
mov
mov
in
movsb
jle
sbb
inc
lods
mov
mov
outsb
or
cld
push
lock
jbe
fcoms
dec
xchg
cld
jmp
adc
or
jge
popf
push
pop
loope
sub
lds
popa
icebp
jo
decl
push
xchg
jge
push
sub
fidivrl
aam
push
fdivs
cmpsl
push
shrl
inc
nop
mov
lret
xor
sub
mov
ds
sub
lods
call
fwait
nop
and
ljmp
inc
push
and
inc
inc
fadd
or
push
adc
pop
stos
in
lock
xor
jae
data16
adc
clc
outsl
push
ljmp
ljmp
pop
loopne
aaa
mov
jne
addr16
pop
and
movsl
cli
cmpsb
sar
jbe
incl
jo
movsl
mov
xor
inc
jae
jno
fistpl
cmc
filds
mov
jecxz
out
jmp
fcoms
popa
and
sti
mov
es
mov
or
cltd
jmp
xorb
call
aaa
mov
mov
xchg
test
xchg
pop
push
push
bound
push
jmp
sar
fbstp
xor
call
in
mov
or
push
insl
lret
or
sbb
push
cmp
fs
add
fs
push
pop
add
and
andl
fldcw
andnps
incl
pop
gs
ljmp
dec
sahf
pop
mov
xchg
dec
std
mov
outsb
call
int3
mov
mov
dec
imul
adc
js
mov
push
aam
outsl
mov
cmp
pusha
adc
mov
sbb
push
stos
sub
push
stc
test
stos
cmp
mov
cmc
cmpsb
xchg
fcompl
ffree
pusha
push
adc
fisttps
cmp
je
mov
push
sbbb
insl
scas
out
fldl
dec
push
add
xchg
xor
xor
or
jmp
cmp
sub
xchg
cmp
das
in
loop
call
adc
mov
and
xor
sbb
jmp
outsb
cmp
mov
fistpll
in
sub
cmpsl
test
outsb
orl
dec
scas
mov
cltd
jo
xchg
rol
jg
fcmovnbe
push
and
rclb
sub
jge
xchg
mov
mov
ljmp
mov
scas
inc
aad
inc
sub
fisubrl
mov
ret
incl
out
daa
frstor
push
rep
mov
mov
pushl
movsl
xlat
sub
jp
xchg
mov
aam
or
daa
ud0
incl
jp
outsb
push
or
inc
dec
mov
nop
scas
mov
inc
cmp
xorb
and
push
sbb
aad
insl
inc
scas
popa
and
and
sbbb
mov
decl
jb
jecxz
in
or
xchg
lret
dec
push
jb
pop
push
ret
cld
insb
lea
jg
enter
xor
push
jecxz
mov
std
mov
pushf
out
inc
scas
repz
stos
mov
push
and
decl
cmp
pop
inc
fldl
or
fs
lahf
add
lods
xor
lcall
or
icebp
ds
imul
int3
aam
xor
lcall
movsl
xor
inc
jno
xor
or
shlb
mov
popf
mov
ficoml
decl
mov
repz
cmpsl
scas
mov
adc
add
xor
cli
fistps
sbb
clc
mov
jmp
xor
iret
out
movl
popa
pop
mov
jne
pop
lods
clc
ljmp
loop
repz
cs
aam
add
dec
cltd
xor
lods
push
repz
fsub
decl
or
subl
cmpsb
test
adc
add
jne
fildl
call
incl
xor
jge
jns
dec
add
inc
xchg
loope
into
inc
xor
in
push
cs
adc
daa
fldenv
mov
subb
daa
mov
jecxz
xchg
loop
into
pushl
pop
cmc
lret
push
iret
out
sbb
jle
in
jp
jae
sub
jo
decl
sti
and
mov
push
xchg
fsubl
cld
push
push
sub
test
mov
popa
cmp
insl
pop
push
inc
lret
pop
enter
xor
ret
jmp
orl
iret
jp
jae
dec
les
dec
xor
jg
jge
aad
repnz
mov
fstps
inc
mov
sahf
cmc
stc
xor
cmp
pop
sub
incl
call
xor
add
pusha
jno
xlat
and
mov
sub
inc
lcall
sbb
mov
lea
das
clc
cmp
xchg
jae
imul
mov
ljmp
adc
jo
aam
into
push
das
adc
pushl
pop
insl
addb
data16
or
lods
or
dec
mov
enterw
lret
ret
mov
xchg
inc
push
inc
xchg
pop
or
fbld
add
pushl
lds
iret
jmp
jae
sbb
sub
lcall
xlat
or
out
inc
inc
adc
cmpsl
pop
sub
jg
adc
and
xchg
mov
push
ret
ja
mov
or
lcall
pop
int3
addr16
aad
or
sti
rolb
cltd
cwtl
sbb
out
xchg
and
jb
pop
out
mov
pop
and
xchg
test
daa
mov
pop
mov
cli
mov
adc
adc
or
or
mov
push
aas
lea
adc
stc
or
imul
sub
fisubs
shrb
sahf
xchg
pop
xchg
aaa
les
push
and
ljmp
inc
cmp
xchg
icebp
addr16
addr16
sbb
jno
std
jns
call
addb
adc
xchg
movsb
jge
cmpsb
das
dec
xchg
push
in
movsl
cmp
pop
inc
popl
scas
jb
in
lods
jno
sbb
jae,pt
lcall
ljmp
icebp
jg
and
and
decb
ret
enter
ja
mov
jg
daa
aaa
rorb
fndisi(8087
pushf
sub
add
pop
bound
jo
imul
call
pop
dec
and
xchg
push
ret
jnp
loopne
ljmp
xor
push
xor
adc
push
test
arpl
test
das
sbb
xor
xchg
rorl
fbld
sub
sbb
arpl
loopne
cwtl
enter
inc
sar
sub
sbb
cwtl
stc
movsl
std
ljmp
jg
cld
jl
sbb
stc
pop
adc
pushf
add
decl
inc
out
andb
dec
mov
adc
adc
jo
sub
jmp
xlat
sbb
gs
outsb
pop
sub
lea
and
arpl
icebp
dec
xlat
ret
loope
mov
out
in
imul
aam
xor
pop
jg
rcrb
lods
mov
ret
pop
dec
js
bound
lahf
lcall
xchg
xlat
hlt
cmp
incl
xchg
jns
push
dec
std
xlat
lods
mov
jae
sbb
cld
aas
pop
push
ljmp
sub
xchg
push
fwait
je
add
sar
fsubrs
pop
mov
lcall
xchg
clc
sti
or
dec
das
js
sub
inc
test
rorl
rcpps
jmp
arpl
scas
insb
dec
fsts
test
jns
adc
je
dec
jecxz
sub
decl
aad
gs
push
mov
mov
stos
sbb
scas
mov
das
lock
mov
pop
mov
or
mov
mov
or
dec
push
pop
push
or
adc
xor
addr16
pop
and
pushl
xlat
les
sub
pushf
xchg
mul
fsts
mov
into
popf
dec
sbb
xor
add
call
aam
andl
addr16
inc
cmp
pop
sbb
outsl
orl
int
stc
fwait
mov
pushl
dec
lods
adc
dec
mov
lock
fidivs
push
inc
pusha
xchg
dec
loope
sar
mov
fidivs
mov
repz
xor
insl
in
sbb
fwait
cs
std
pushl
cmpsl
or
shrl
jb
loop
sbb
xchg
mov
add
lcall
in
les
push
adc
nop
bndstx
and
incl
inc
aaa
push
push
sub
lods
jle
cli
loop
adc
call
pushl
pusha
mov
or
js
popf
pop
xchg
jp
and
mov
cs
or
inc
sbb
and
ja
xchg
jo
hlt
test
ja
pushf
orb
and
popa
dec
jne
cs
or
decl
pop
or
repz
cld
test
incl
mov
in
jo
mov
popl
jno
decb
and
pop
inc
ret
ljmp
dec
fwait
mov
dec
mov
xor
pop
call
popa
fstl
mov
and
push
push
pop
ror
mov
sarb
clc
mov
test
int
mov
enter
mov
mov
popf
adc
cli
cmpsb
add
imul
loopne
mov
add
xchg
xchg
lods
mov
outsl
leave
fstpt
aaa
mov
aaa
movsb
mov
leave
shll
add
sbbl
lahf
sbb
mov
xchg
pop
movntps
cmpsb
push
mov
js
js
jg
sti
cmovp
jecxz
mov
popa
push
jl
add
xor
or
mov
push
jb
sub
rcr
or
xlat
cmp
roll
das
jno
and
repz
aaa
pop
mov
ljmp
aas
into
stos
pop
sbb
out
push
icebp
cmova
cmc
lods
test
mov
testb
bound
mov
mov
pusha
pop
and
test
xor
dec
jmp
les
in
mov
cmp
lds
cmc
and
mov
push
adc
pop
loop
pop
nop
mov
adc
insl
aad
dec
je
or
sbb
sbb
lods
inc
mov
std
and
decl
enter
sbb
mov
sbb
push
push
andb
push
pop
rol
incl
sbb
xor
movsl
sbb
xor
or
sbb
lock
test
mov
out
fdivr
out
lods
int
dec
test
call
shl
les
icebp
pushl
xchg
mov
repnz
mov
sarl
out
jb
lea
pop
fdivrp
mov
xor
pop
adc
fstpt
mov
ljmp
cld
cs
decl
sbb
xor
push
loopne
sbb
aas
inc
movsl
push
push
or
xor
mov
push
incl
cld
jbe
repnz
std
xor
xor
mov
iret
mov
xchg
sti
lea
xlat
add
pop
or
pushf
cmp
sbb
test
shl
ljmp
and
xor
movsl
lods
mov
jbe
aad
adc
jecxz
lds
lcall
int
mov
test
cmpsb
pop
adc
mov
cmp
dec
cli
mov
jge
mov
or
fld
mov
lret
addl
push
shlb
sub
xchg
bound
or
cli
ljmp
xchg
in
push
lods
je
and
xlat
mov
mov
cmpsl
dec
pushl
dec
push
fld
lock
sarb
fcmovnu
mov
divb
jo
arpl
push
ss
insl
and
push
xchg
lea
test
jecxz
lock
jg
mov
ljmp
xchg
arpl
aam
movsb
xchg
je
or
cmpsb
jmp
jbe
stos
push
pop
xor
jae
decl
clc
xor
sarb
mov
cmp
fstl
xchg
pop
subl
sub
mov
das
mov
lock
pop
jp
jmp
sahf
push
sbb
push
cli
sub
mov
decl
sbb
sub
scas
in
imul
fistps
push
aam
dec
add
fdivs
and
jp
mov
jne
div
pushf
jns
inc
add
sub
jnp
test
push
jmp
insb
fisttpll
cs
fadd
dec
aam
mov
ds
lds
cmp
xchg
xchg
xchg
mov
out
ljmp
loope
popf
sbb
pmulhuw
add
lea
ss
push
pushf
dec
push
mov
push
and
test
es
stos
fnstsw
iret
xor
push
mov
lret
push
jp
dec
sbb
xchg
stos
jnp
inc
jp
mov
bound
add
dec
mov
ror
pop
hlt
popf
mov
std
in
pop
clc
mov
pop
mov
rcrb
stos
dec
sub
lods
cmpsb
inc
xchg
scas
add
mov
lcall
mov
incl
loop
mov
mov
hlt
out
adc
cltd
out
outsb
pop
sub
fisubrl
mov
mov
pushl
dec
or
fwait
or
ja
mov
dec
and
pushl
push
xchg
addl
dec
jns
push
cmp
repnz
incl
hlt
shlb
cli
hlt
fdivrs
jg
xor
imull
mov
sub
xchg
dec
pop
mov
cmpb
dec
je
cld
sub
mov
iret
rolb
add
cmp
dec
nop
stc
mov
sub
sbb
mov
lcall
sbb
lret
and
xchg
call
push
pop
out
sbb
fadds
iret
pop
dec
push
repnz
dec
jb
rorl
or
test
int
outsl
or
jbe
jae
movsb
bound
push
incl
pop
cmp
stc
ret
je
mov
add
popa
jl
bound
hlt
fsubs
lods
jg
lcall
fisttpl
xlat
sbb
adc
call
fs
dec
ja
jnp
ficoms
in
jns
fsubr
ss
into
mov
movsb
mov
xchg
test
jmp
xchg
movsl
mov
cmpl
and
jl
cld
jns
push
pop
jbe
movsl
dec
std
in
adc
testb
or
inc
outsl
outsl
das
lock
sbb
std
ja
mov
fidivl
shr
mov
hlt
or
inc
jle
jns
adc
lods
and
mov
scas
jmp
jg
inc
cmpb
jmp
jg
mov
mov
pop
nop
popf
mov
orb
jle
ljmp
decl
and
gs
mov
mov
jge
push
divl
scas
jle
lods
decl
pusha
shrb
lea
movsl
or
or
cld
pushfw
sub
xor
outsl
push
mov
jns
jmp
loop
ljmp
sbb
cwtl
clc
jecxz
jl
mov
inc
dec
cld
jmp
add
mov
out
sbb
mov
sbb
decl
fsubrl
scas
repnz
mov
pop
clc
jl
cmpsl
out
sti
enter
cld
aaa
mov
pop
cli
jg
xchg
adc
adc
mov
jo
out
add
std
stos
cmp
icebp
sub
hlt
push
lods
xchg
inc
jge
push
mull
inc
xchg
push
daa
lea
insb
aaa
cmovge
out
leave
pop
das
lock
mov
and
out
pop
jge
adc
and
rcr
cli
pushl
lcall
test
or
jmp
push
pop
faddl
pop
das
cld
mov
lcall
and
mov
inc
mov
adc
push
jl
aad
lret
popa
cmp
adc
inc
pop
xorb
sbb
popa
fidivrl
push
sub
dec
shll
fnstsw
insl
xor
iret
dec
jno
xor
and
stos
adc
inc
xchg
mov
mov
fnsave
ljmp
imul
pushf
mov
push
or
sub
add
out
roll
sbbl
lds
lret
lea
adc
sahf
push
cltd
js
inc
decl
xor
adc
int
lahf
cmp
icebp
mov
call
lcall
jle
mov
mov
inc
test
xor
lcall
and
les
push
mov
xorl
sbb
pop
mov
or
or
inc
add
jno
cmpb
push
jle
fxsave
rolb
sub
pop
nop
mov
xchg
push
or
push
lcall
mov
mov
push
ds
in
adc
out
mov
xchg
jl
mov
mov
nop
xlat
pop
jbe
pop
fimull
mov
mov
sbb
lret
into
sub
mov
add
ljmp
aad
jns
imul
cs
ljmp
adc
test
call
fldcw
es
pushl
ret
pop
daa
sarb
xchg
cmp
hlt
sub
adc
push
push
lods
pop
ljmp
adc
in
shl
and
stos
outsl
icebp
pop
clc
stos
imul
and
aam
lds
testb
cmp
stc
push
jp
into
sub
je
fists
aad
fsubp
out
lea
notb
pop
jnp
cmp
push
cmpsb
xchg
dec
adc
xchg
test
or
cmp
rcrb
lcall
jg
rcrb
ja
arpl
lods
mov
sub
hlt
stc
jmp
push
lahf
xchg
xchg
fcoms
xchg
push
dec
add
push
insl
jg
test
add
push
inc
ljmp
nop
scas
jne
xor
xor
push
gs
sub
mov
sahf
mov
jp
mov
scas
mov
fistpll
hlt
inc
or
adc
ret
mov
movsl
jg
call
xor
fldl
jae
outsl
dec
das
push
mov
and
test
and
cmp
shrb
dec
test
push
fst
sti
ljmp
call
shlb
mov
je
data16
mov
dec
jl
aaa
jns
aad
clc
incl
add
and
repz
js
fldl
sbb
call
pop
test
xor
pop
adc
xlat
inc
das
push
hlt
cmp
jg
aaa
imul
add
clc
fwait
lret
mov
int
pop
push
add
hlt
cmp
mov
test
decl
mov
pushf
mov
mov
push
and
shll
cs
add
das
lock
repz
add
push
out
mov
push
mov
lcall
sub
inc
addr16
call
push
shlb
inc
outsb
sub
mov
decl
rorb
mov
mov
lods
jg
sbb
js
rcll
mov
push
push
fists
les
push
cs
xchg
sbb
aad
mov
xchg
divb
andb
loop
pop
js
jg
adcl
loopne
push
push
cmpsl
pushf
adc
adc
ljmp
pop
dec
push
adc
fnstenv
xor
cld
jae
pop
stos
std
icebp
xchg
sub
inc
out
and
cmp
push
add
lods
aad
fsubr
frstor
add
pop
aad
mov
adc
add
call
stos
pop
scas
vmptrld
cmp
outsl
fcmovnb
fbld
scas
mov
mov
adc
loop
jnp
adc
call
mov
ljmp
cmpsl
add
dec
stos
int
mov
inc
dec
ret
and
mov
lods
mov
clc
jle
stc
je
pushf
setno
mov
lea
outsb
mov
fidivl
xchg
or
sbb
jne
jb
mov
inc
adc
ljmp
jge
gs
in
inc
leave
xorb
cld
idivb
scas
leave
idivb
or
dec
mov
sub
idivb
cmp
sub
rcrb
ja
xor
or
lock
add
cld
mov
sbbb
push
nop
orl
stos
stos
mov
pop
jmp
or
pop
xchg
lods
xchg
in
pop
sbb
stos
rolb
loop
jbe
push
mov
hlt
push
inc
aas
xor
push
dec
das
jb
adc
push
sub
mov
in
xchg
sub
cmc
dec
incl
mov
lds
repz
mov
push
test
fcmovu
cmc
pavgw
test
rcr
push
sahf
fcompl
xchg
mov
adc
ljmp
add
mov
and
xchg
lods
jbe
inc
shl
sbb
pop
ljmp
imul
cmp
mov
push
inc
pop
je
mov
jecxz
sub
ss
jo
xor
add
call
lcall
adc
jae
ffree
xor
icebp
mov
out
dec
pusha
aas
or
mov
test
inc
pop
les
xor
push
mov
sar
scas
clc
addl
cmpsb
pop
int
push
test
xchg
mov
scas
xor
jmp
lahf
mov
loope
stos
test
mov
les
incl
insb
jo
jle
adc
push
and
shl
insb
jmp
xchg
or
dec
and
mov
leave
scas
pop
lret
xor
lods
test
mov
pop
and
sar
or
loop
loope
sbb
bound
outsb
or
shrl
lock
mov
iret
pop
lret
sub
push
sbb
mov
lea
mov
jg
addr16
rclb
sarl
lods
mov
add
shlb
xor
lcall
loop
push
xchg
and
lods
xchg
adc
mov
and
in
shll
add
ss
jnp
xchg
xchg
mulb
mov
jns
lahf
add
cli
pushl
cli
out
ficompl
and
jno
push
cmp
xchg
jge
cmp
xlat
addr16
decl
jp
or
xor
inc
int3
xor
aaa
sarb
inc
das
cmp
lea
aas
mov
aas
popa
adcl
fnstsw
decl
mov
fwait
test
inc
clc
test
mov
push
and
add
dec
push
dec
aad
call
or
inc
jo
push
xchg
jmp
xchg
ja
mov
cmc
pusha
aaa
clc
das
inc
push
pop
loopne
jae
imul
lret
lock
or
imul
scas
popf
out
call
inc
cli
popa
addr16
sarl
rolb
add
push
aaa
loopne
scas
aaa
scas
add
inc
inc
mov
adc
bound
rclb
insb
lds
movsb
mov
jns
pop
in
mov
fadds
xchg
push
inc
sbb
sub
mov
dec
pop
adc
int3
push
into
mov
stc
mov
sbb
loopne
mov
dec
mov
cmp
popa
cmp
pop
cmc
mov
ds
not
das
adc
pop
xchg
add
push
sub
outsl
adc
lock
lcall
dec
scas
adc
lock
call
xchg
cmp
mov
mov
add
xlat
in
lcall
pushl
clc
push
mov
mov
mov
push
negl
xlat
popa
push
and
icebp
add
jge
scas
or
iret
xor
add
in
dec
pop
and
andb
enter
cmp
dec
fcomip
inc
iret
ds
lock
jp
clc
sti
in
pop
cmp
jo
push
or
mov
jg
inc
jmp
xchg
incl
mov
xchg
aam
sbb
addr16
jnp
jecxz
and
jg
pushl
and
aas
mov
xchg
loopne
cmc
std
pop
fcomps
fstpt
insl
leave
call
out
ret
dec
xor
and
jmp
rclb
test
test
lods
cli
add
clc
lds
dec
mov
dec
jo
pop
mov
jl
test
mov
stos
inc
adc
cmp
jne
decl
bound
out
jmp
xchg
shrl
sub
cmp
fisubl
pmaxsw
je
call
lret
mov
pop
shll
mov
or
jns
inc
ljmp
add
lods
idivl
inc
cmpsl
fldenv
out
jmp
sub
bound
decl
pop
cltd
iret
xchg
jle
push
mov
es
add
dec
loope
mov
adc
jae
inc
paddsw
sbb
pushf
and
aaa
jnp
ds
jp
dec
and
outsl
std
test
mov
xchg
mov
cmp
js
and
adc
repz
fwait
mov
pop
in
lret
ljmp
sbb
push
in
lcall
call
es
std
pop
sbb
sbb
ljmp
lahf
fmul
repz
pop
cmpl
pop
push
loop
pop
js
lea
jmp
mov
popa
dec
xor
decl
pop
jne
mov
mov
incb
adc
fnstcw
sbbb
sahf
mov
jp
mov
jl
callw
pop
mov
push
sbb
dec
and
and
cmp
cmp
mov
bound
in
or
jg
cmpb
je
push
je
dec
mov
xor
roll
mov
and
orb
push
decl
push
and
mov
sar
pushl
mov
inc
popa
jmp
cmovnp
push
or
or
or
aam
fildl
xchg
add
xchg
xor
and
mov
gs
dec
incb
aad
in
inc
pushf
inc
jecxz
decl
jge
xchg
mov
das
push
out
andb
pop
xor
ljmp
add
or
das
icebp
jmp
pop
dec
nop
push
rcll
rcrl
repnz
or
adc
repz
decl
repz
aad
mov
inc
ljmp
ljmp
insb
mov
test
and
loopne
js
add
or
sbb
ss
rcr
call
ret
roll
add
arpl
mov
test
popa
out
push
scas
out
popf
test
call
jg
incl
mov
jns
lods
sbb
cmp
sbb
pop
mov
xchg
jno
out
mov
cmp
lret
dec
test
jno
das
cmc
out
outsl
inc
push
adc
sbb
xchg
cli
incl
xchg
mov
scas
lods
fists
out
or
cmp
aad
sub
dec
and
fwait
and
jbe
sbb
push
jmp
fwait
scas
ljmp
jnp
mov
addr16
sub
roll
lcall
add
aas
push
add
icebp
iret
mov
xchg
push
jl
movsl
imul
and
pop
in
sub
popf
push
lods
fwait
loop
mov
rcl
or
rcl
cmp
test
mov
fucomip
add
jg
mov
ficompl
cmp
push
fucomi
ljmp
cmp
jnp
mov
adc
xor
lods
mov
incl
and
mov
push
imul
and
jmp
in
loope
cli
dec
repz
clc
decl
test
pop
cmc
or
pop
dec
movsl
inc
jle
fs
jno
cli
ljmp
stc
adc
leave
mov
adc
mov
imul
mov
ljmp
jae
sahf
inc
or
test
sbb
jnp
inc
shlb
cli
nop
sbb
scas
cs
bound
inc
pop
adc
jp
js
pcmpeqb
enter
lods
insl
adc
orl
mov
jno
jge
mov
lcall
pop
aas
and
in
mov
imul
lret
pop
pusha
stos
movsl
and
lret
popa
cmp
stc
shrl
decl
cmp
sub
jle
imul
stos
mov
dec
cli
jg
das
mov
sbb
outsl
hlt
push
mov
rcl
mov
std
pushl
xchg
push
xor
iret
push
mov
popa
loop
addr16
iret
inc
xchg
jns,pt
test
mov
sbb
jp
aam
cmp
sahf
mov
fwait
jmp
jg
ljmp
nop
bound
dec
dec
mov
and
dec
mov
call
jnp
lcall
in
sbb
ja
push
jmp
incl
pushl
adc
xchg
pop
into
lret
mov
mov
lcall
jg
clc
repnz
aad
pushf
subb
jns
jae
jno
push
mov
ljmp
push
mov
jns
loop
out
pop
addr16
aad
pop
sbb
ljmp
and
js
sub
les
aas
pop
mov
decl
push
lret
iret
adc
movsb
push
push
push
mov
jae
push
bound
scas
add
mov
fadd
mov
shrd
xchg
popa
aad
mov
lea
aaa
js
mov
imul
insb
add
xchg
or
xchg
lock
cmp
add
push
sub
xchg
incl
cmpl
add
in
jle
shll
cli
mov
or
in
in
sub
cmc
mov
pop
and
loopne
cs
daa
add
dec
scas
mov
jp
jg
es
dec
push
push
mov
add
aam
cld
push
inc
rcr
insl
mov
call
decl
shlb
inc
add
sti
push
scas
sub
iret
rorb
in
call
dec
shr
imul
aam
out
or
xchg
ret
incl
pusha
push
mov
mov
mov
pop
rcrl
stc
jle
dec
in
sbb
pop
and
cmp
adc
mov
dec
mov
sub
add
mov
ss
add
nop
adc
loopne
hlt
cmp
jmp
or
cmp
push
movsb
ljmp
pop
incb
test
in
pop
sub
negb
out
jle
push
call
cs
push
aas
fadds
js
and
es
mov
fmull
ljmp
inc
jecxz
mov
into
jno
shrb
jmp
xchg
sub
xor
inc
xor
out
xchg
xchg
dec
cmp
out
decl
cld
fcomi
jp
add
jae
push
rcl
pushf
out
test
push
mov
mov
push
xor
dec
icebp
add
js
mov
fsubrs
in
inc
fwait
lcall
inc
lock
movsb
scas
mov
add
popf
shr
xchg
inc
icebp
jg
call
lret
xlat
add
push
cld
movsb
imul
ficoml
fistpl
decl
andb
test
andl
cli
or
imul
cmpsl
ss
xor
decl
jg
mov
pop
xor
scas
imul
scas
dec
or
idiv
dec
ljmp
adc
daa
rcrl
loopne
lea
cli
call
mov
push
cmpsl
fnstsw
pop
xor
pop
xor
cld
dec
ljmp
jge
mov
js
flds
cs
mov
outsl
cwtl
xchg
add
pop
mov
std
jg
mov
aaa
clc
inc
jno
xor
imul
decl
inc
in
pop
sbb
shrb
shlb
popf
scas
sbb
pushl
js
movsb
mov
insb
in
mov
cli
aad
ss
push
iret
add
adc
mov
dec
mov
lahf
cmp
loopne
pushf
loope
jb
xor
xor
dec
mov
or
sub
ljmp
insb
xchg
xchg
cmp
mov
test
mov
lret
cmp
mov
mov
test
mov
lea
or
sbb
lcall
out
mov
orb
jo
jne
dec
ljmp
ret
and
stos
mov
adc
shlb
adc
mov
dec
jg
jg
lds
rcrl
or
mov
aaa
push
jo
inc
push
pop
push
out
mov
mov
adc
incl
icebp
jbe
sbb
ja
fisttpll
push
sbb
pushf
out
mov
daa
aam
fmuls
fbld
loop
aam
fsts
or
pop
ljmp
pushl
leave
jg
cmp
inc
ret
pop
sbb
movsb
lcall
or
shlb
stos
outsb
call
shrl
bound
cmp
aas
sahf
jns
sbb
push
push
in
enter
pop
insl
cmp
mov
subl
xor
pop
mov
and
dec
cmp
dec
icebp
mov
loop
push
dec
into
and
jmp
xchg
xchg
test
pop
icebp
push
mov
mov
decl
std
lods
sub
repz
push
sub
icebp
ljmp
jmp
or
cld
xchg
inc
push
sub
mov
sub
imul
lds
hlt
ljmp
movl
adc
add
ret
mov
ljmp
xchg
stos
scas
adc
pusha
cmp
xor
ret
repz
lods
mov
lods
mov
fmuls
dec
cld
fdivl
jmp
or
jnp
jb
ror
call
adc
js
ret
cli
cmp
add
in
loopne
pop
js
jmp
aas
das
or
stos
test
xlat
js
dec
es
pushl
and
sbb
mov
dec
int3
aad
or
inc
mov
mov
jno
into
mov
sub
sbb
sub
ret
jmp
cmpsb
stos
ret
lds
or
in
shlb
loop
push
ds
sbb
stos
pop
iret
or
mov
fmuls
sub
inc
in
les
outsl
leave
in
loope
loop
lcall
ret
pop
inc
add
push
faddp
mov
mov
jge
sti
daa
cmp
mov
adc
dec
sub
jne
mov
sbb
xor
push
or
jmp
cmpsb
aam
cmc
push
imul
mov
fnstsw
ss
jo
movsl
jns
xchg
lods
push
xlat
ss
and
testl
mov
dec
mov
lcall
orl
stos
and
push
jo
outsl
adc
dec
or
sbb
in
aaa
in
mov
decl
mov
cmp
fldenv
sbb
mov
xor
add
decb
std
cmc
aam
and
dec
dec
cli
out
insb
ds
mov
ret
mov
test
fisubl
mov
clc
xor
pop
xchg
xor
stos
cld
daa
mov
xor
add
stos
cmp
cmpsl
imul
xchg
adc
mov
add
xchg
push
sbb
mov
jae
lret
and
cmp
or
ret
pushf
jge
fisubs
jle
mov
dec
stos
insl
mov
sbb
in
ds
sub
or
pop
pop
es
mov
incl
fsubs
fs
in
jb
xchg
xchg
mov
fcompl
xor
ds
bound
fisubrl
xor
pop
outsb
lcall
popf
add
shlb
push
xchg
out
incl
aam
xor
sbb
sahf
and
movsl
sub
pop
jg
rorb
fdivrp
call
dec
pop
and
pop
jg
mov
ret
inc
and
cs
jo
pop
fwait
test
fdivs
stos
in
decl
je
xchg
jnp
cmp
adc
xchg
cwtl
call
mov
orb
jno
sti
mov
mov
js
pop
ret
adc
dec
adc
sub
fsubrl
mov
stc
daa
inc
xchg
mov
into
outsl
xor
push
mov
jae
ret
adc
jmp
shl
shll
xchg
pop
xchg
inc
adc
test
sub
decl
xchg
push
sbbl
lret
xchg
loop
jl
push
jg
jmp
dec
bound
decl
adc
pop
out
sub
test
lock
loope
mov
push
pop
inc
push
xchg
das
ret
movsb
add
sub
xchg
cmpl
scas
repz
std
adc
cmpsb
xchg
sbb
push
fld
pop
pop
out
sar
outsl
icebp
jp
lret
sbb
mov
mov
push
xacquire
jg
mov
dec
sbbl
adc
shl
outsl
xchg
or
inc
xchg
add
test
outsl
rolb
mov
inc
cltd
dec
jnp
adc
push
inc
sbb
aas
in
xchg
sbb
and
js
ljmp
xor
push
hlt
or
xor
mov
sbb
insl
cltd
pop
call
inc
and
sbb
and
mov
fucomp
nop
xlat
call
jle
stos
fbld
inc
jmp
jmp
dec
jg
xchg
dec
mov
mov
xchg
fwait
pop
scas
jmp
mov
mov
in
pusha
add
pop
push
push
jmp
push
decl
add
cmc
xchg
sub
inc
daa
mov
mov
push
or
pushf
fstpl
jns
pop
fcompl
jg
lcall
mov
cmpsl
sbb
js
movsl
movsb
push
adc
jecxz
stos
add
xchg
cmpb
jg
mov
fistpl
sub
xchg
mov
mov
lock
out
testb
xchg
push
incl
add
mov
aam
push
cltd
in
sti
fwait
rorb
outsb
mov
mov
xor
addr16
cmc
in
xchg
xchg
xor
imul
dec
ljmp
push
stos
cmpsl
filds
xor
fstpt
les
pop
sbb
mov
mov
and
mov
and
mov
jns
call
in
pop
push
xorl
or
fcmovnbe
mov
xor
fnstsw
lcall
lahf
ss
pop
negl
stc
jl
rorb
or
jl
push
jnp
and
sub
lods
inc
rcrl
loopne
lahf
mov
outsl
xchg
ret
sar
fwait
xchg
jg
add
pop
pop
leave
pop
enter
shll
je
dec
pop
in
mov
adc
pop
call
push
and
and
xor
cmc
aaa
scas
gs
call
pushl
jmp
daa
fs
push
aas
mov
jno
adc
mov
faddl
icebp
in
jp
stc
in
shrb
xchg
jb
in
sub
in
and
or
addl
in
mov
jecxz
inc
fmuls
jbe
add
xchg
jmp
incl
ds
out
jl
mov
or
xor
cmp
adc
jmp
adc
dec
push
loopne
inc
cmp
xor
scas
and
and
ss
arpl
push
idiv
aaa
jle
push
push
jns
out
add
inc
in
pop
push
xor
xor
jg
pushl
cmpl
or
sbb
add
lcall
lds
dec
js
rcrl
mov
cltd
push
cmp
cmp
int
adc
jg
xchg
outsl
loope
fdivr
pusha
xchg
or
push
in
dec
push
adc
outsb
incl
out
loope
cs
inc
mov
push
nop
jno
in
je
dec
shrl
inc
push
lret
decl
ret
jge
cmp
sbb
cmp
movsl
push
pushl
and
and
cli
xor
out
cmc
xor
mov
pop
jmp
test
sub
incl
adc
push
mov
mov
lret
xor
inc
or
jmp
lcall
jg
out
inc
inc
nop
aaa
adc
and
sti
mov
scas
mov
mov
cld
pushl
aas
lret
xor
and
adc
push
or
call
mov
or
jge
mov
or
push
xchg
add
sub
mov
lret
dec
mov
out
or
push
mov
fsubrl
pop
fstpt
mov
adc
cmp
in
aas
pop
daa
pop
cmp
lcall
inc
outsb
dec
xor
out
sbb
daa
fmull
loop
dec
out
aas
dec
jp
outsl
push
jo
mov
rcr
addr16
sar
jmp
push
insl
iret
jg
test
jns
std
ljmp
mov
mov
cmp
jg
inc
mov
leave
jne
stc
mov
out
popa
inc
test
call
fmul
dec
lret
xor
push
xor
or
jae
out
stos
daa
xor
icebp
jmp
call
xor
or
or
mov
ljmp
mov
cmp
push
fstpt
imul
pop
arpl
aad
lret
aad
jg
jecxz
lret
and
mov
sbb
mov
inc
dec
dec
dec
decl
ljmp
scas
inc
inc
dec
rorl
je
push
movsb
cmp
mov
rorl
movnti
push
cmp
insl
or
ret
mov
mov
jl
jecxz
pusha
xor
lcall
cmc
or
mov
ljmp
jg
popf
add
lods
pushf
in
jbe
rcl
xor
cmp
mov
inc
cwtl
jne
lock
cltd
addr16
mov
mov
push
and
leave
incl
pushl
loope
sub
ss
test
imulb
decl
pop
cmp
fisttpll
sbb
sarl
aam
mov
pop
insb
je
inc
sbb
xchg
mov
rcrb
bound
sub
test
ret
xor
pop
xor
xchg
lret
xor
push
fisttps
sbb
mov
in
push
js
pop
sbb
fwait
and
aas
mov
jo
subb
pop
jbe
call
adc
bound
cmp
ja
daa
popa
fs
popf
decl
mov
dec
xor
pop
jne
jnp
jne
xchg
xor
lock
fucomip
rolb
cmp
inc
lret
push
mov
fdivrp
inc
into
imul
js
jmp
movsl
aas
into
aas
xchg
out
sti
mov
stc
popf
std
das
cld
and
in
jecxz
sub
ja
xlat
lods
fstl
mov
clc
decl
loope
push
adc
loopne
nop
dec
push
pop
sbb
sub
xchg
fnsave
jo
icebp
mov
xchg
jo
lea
cmc
pop
pop
xor
inc
sbb
adc
lcall
or
mov
loop
add
iret
and
sbb
or
shrb
into
and
dec
int
sti
incl
and
inc
adc
mov
stc
je
push
aaa
enter
shrl
outsl
icebp
call
lahf
in
xor
add
fwait
sti
and
xchg
into
filds
sub
stos
dec
cld
xchg
loopne
ucomiss
pop
inc
inc
pushl
mov
push
xorb
shlb
mov
sbb
push
jo
loope
pop
pop
xchg
ret
das
addb
es
lock
mov
decl
adc
xchg
ret
fstpt
pushl
adc
std
out
xchg
pop
call
ljmp
hlt
push
in
pop
and
sbb
fwait
jp
xchg
or
mov
ljmp
xchg
inc
mov
in
mov
sahf
aam
loopne
and
sub
adc
popa
cmp
rcl
xorl
adc
fsts
mov
call
sbb
and
xor
nop
xchg
jg
ret
mov
into
test
lds
loopne
mov
jge
dec
cld
inc
hlt
pushf
cmp
ds
xchg
mov
dec
xchg
scas
xchg
lea
fmull
stc
add
lcall
insb
mov
mov
dec
jecxz
stos
mov
xchg
clc
das
lock
xchg
lahf
dec
ds
in
dec
jp
lods
fsubrs
jo
cmp
inc
mov
mov
dec
ljmp
lods
fidivrs
ret
mov
aad
fnstenv
xchg
jmp
add
fcmovu
lea
ret
loop
push
and
and
mov
lcall
into
inc
imul
jb
loope
lcall
push
out
fstl
pop
xor
jl
cmpl
lret
movsl
xor
ljmp
popf
adc
sub
jb,pn
in
push
inc
xchg
lods
inc
pushl
sbb
mov
loopne
sbb
inc
push
rorl
cli
mov
mov
mov
mov
sbb
add
mov
stos
popf
pop
popf
mov
sub
xchg
xor
inc
cmp
adc
dec
aaa
test
cld
orb
xor
mov
icebp
xchg
lock
out
gs
shlb
nop
push
adc
test
ficoml
pop
clc
lcall
xor
test
and
mov
sub
in
in
push
push
xchg
fsubp
xchg
subl
add
mov
xor
cwtl
int
cmp
cmc
shlb
in
jmp
jns
push
ja
sahf
test
dec
pop
imul
mov
inc
cld
decl
int
rsqrtps
cmpsl
arpl
inc
push
lods
xchg
sub
jne
iret
xchg
cmpsb
ja
aad
mov
jg
dec
push
sbb
outsl
pop
sbb
nop
dec
jg
lds
adc
add
mov
lods
int3
gs
pushl
jmp
xchg
jmp
add
imul
add
pop
icebp
ja
mov
dec
and
mov
das
lret
movsb
sti
push
sub
dec
xchg
cmpsb
andnps
cld
stos
mov
add
call
jle
inc
test
xchg
xor
push
inc
call
xor
mov
push
es
int3
push
sbb
ljmp
fwait
mov
cmc
dec
xchg
jg
adc
leave
pop
mov
lahf
dec
xor
jmp
movb
je
lods
cltd
fistl
das
dec
stc
cld
ljmp
jns
pop
adc
mov
daa
out
adc
push
cmc
icebp
incl
push
or
push
daa
test
push
lahf
cmp
dec
dec
cmp
xchg
push
stos
push
stc
pop
adc
sbb
pop
fstpl
pop
dec
inc
js
test
out
fs
xor
jo
dec
mov
outsb
daa
xchg
mov
lahf
mov
jmp
lds
cwtl
inc
divb
imul
dec
xor
xchg
cmp
pop
push
jmp
repnz
jmp
sbb
lahf
test
mov
mov
sbb
and
inc
ljmp
cmp
rcrb
shlb
push
mov
incl
daa
dec
or
scas
xorb
ds
push
nop
setl
fiadds
aam
les
cmp
or
lods
xor
cmp
mov
xlat
sub
push
dec
sub
sub
arpl
jp
cmc
ret
fisubrl
jg
pop
mov
xchg
adc
dec
fimuls
jne
call
es
jg
sbb
adc
data16
jp
jae
daa
ljmp
jecxz
jg
cld
nop
xchg
sbb
add
fwait
xchg
ret
jg
ljmp
aas
xlat
lock
adc
and
and
sub
inc
push
adc
rcrb
outsl
repnz
mov
pusha
sub
stos
std
push
sahf
dec
pop
out
inc
xor
push
int3
sub
add
pop
outsl
ljmp
testl
jmp
xchg
mov
shl
notl
repz
mov
mov
jmp
shrb
mov
fistpll
xor
daa
loop
mov
test
std
decl
xchg
xor
jl
lahf
jle
sti
ljmp
inc
add
decl
mov
xchg
gs
xchg
stos
sbb
sub
fistps
add
pop
xchg
fucomi
mov
outsl
pop
outsl
cmp
in
fsubl
mov
fildll
pop
and
jg
add
inc
outsl
dec
mov
sub
jecxz
stc
stc
cmp
in
push
jne
js
inc
mov
cmp
mov
rol
aas
and
clc
adc
jle
jne
and
push
out
push
adc
add
pop
ja
pusha
addr16
or
test
or
cmp
push
mov
hlt
and
dec
test
push
popa
jle
cltd
dec
add
dec
call
dec
mov
call
popf
test
mov
cmc
ljmp
jb
sbbb
mov
ljmp
ror
repz
mov
stc
aad
adc
aam
push
jbe
mov
xor
ljmp
jl
ret
push
pusha
dec
int3
addr16
mov
add
std
inc
loop
jne
xchg
jge
fdivrl
jle
jb
call
mov
mov
pop
std
aam
xor
arpl
pusha
sub
jg
movsl
sub
test
scas
jg
iret
pop
test
jnp
arpl
xchg
add
repz
jge
inc
add
decl
cld
jae
shlb
mov
fstps
mov
pop
sbb
sub
push
mov
aad
repnz
popa
push
mov
fdivrl
mov
pusha
aas
jle
adc
sub
push
cmp
outsb
es
in
fdivrl
jmp
aad
hlt
clc
pop
repnz
adc
ffree
lods
popa
push
popf
pop
adc
add
mov
test
loop
sahf
ud0
mov
pusha
mov
mov
into
mov
lock
repnz
xor
dec
fisubs
imul
push
fsub
jb
incb
cld
mov
fistpll
cld
jg
popa
insb
loope
push
out
loopne
xchg
push
xchg
das
add
mov
dec
cld
outsl
hlt
sbb
pop
fistpl
jp
cmp
in
fimull
or
ss
push
push
mov
push
scas
jmp
pop
inc
push
adc
xchg
inc
and
lret
pusha
idivb
hlt
incl
lods
ret
push
adc
ret
dec
mov
dec
pop
incl
push
test
pop
ret
in
sbb
add
ja
into
mov
repz
ljmp
sub
jmp
sti
ds
jo
mov
and
test
mov
lahf
jmp
or
decl
cmpsb
adc
testl
pop
push
hlt
mov
pop
ljmp
cld
push
sub
aad
pop
into
je
pop
xor
pop
sub
ljmp
inc
mov
pushl
xor
mov
cld
jb
aad
cmp
xor
rcrb
pop
sbb
rolb
sbb
ljmp
push
jl
or
jmp
push
test
cmc
sbb
xor
std
decl
test
mov
xchg
jmp
in
sub
fwait
push
out
mov
and
or
sub
shll
inc
into
loop
outsb
jmp
aad
jge
pop
xlat
jo
std
je
adc
jmp
adc
ljmp
cmc
mov
or
jp
in
in
out
mov
cld
push
daa
sbb
mov
or
test
jg
pushf
pop
inc
pusha
mov
in
mov
hlt
pop
mov
xchg
in
sub
fbld
sub
repnz
das
cld
sbbb
push
movsl
jle
xchg
xor
pushl
gs
mov
adc
jo
out
sub
push
and
or
popa
andb
jmp
cld
mov
jp
jne
pop
lds
add
mov
xchg
ljmp
mov
jo
outsl
xlat
sbb
cltd
js
cmp
cli
add
dec
outsl
testl
pushl
test
test
outsl
jb
push
adc
call
jp
int
sub
outsl
mov
cmpsl
mov
incl
pop
and
cmpsl
aam
add
xchg
aad
dec
cmpsb
push
jg
fcoml
int3
push
outsb
sub
nop
mov
ljmp
lretw
loop
stc
cmp
push
repz
repz
jne
add
jmp
sbb
out
mov
push
scas
add
mov
add
outsb
jae
mov
movsl
push
faddp
sub
inc
popa
dec
jns
insl
cmc
pop
dec
pop
mov
inc
push
ret
aas
cmp
cmp
xchg
cltd
mov
and
pop
jo
ljmp
hlt
push
out
test
aad
scas
pop
or
mov
lods
pop
outsl
fbld
loopne
fnstsw
jg
pop
insb
call
call
mov
fs
movsl
or
out
rolb
cld
mov
pushl
add
test
xchg
adc
add
cmp
ret
fsubrs
xor
popa
or
pop
icebp
mov
mov
lock
cmpsb
xor
bound
sub
push
call
andl
push
rcll
jbe
adc
jae
and
pop
clc
cvtps2pi
shll
das
add
lahf
lods
popf
sar
jno
call
xchg
ljmp
mov
mov
jne
pusha
mov
out
clc
lock
stos
and
leave
aad
insl
mov
fs
adc
mov
jmp
arpl
lahf
mov
aas
push
xchg
pushl
nop
and
jo
mov
pop
es
cli
jmp
fdivr
jmp
jae
testl
fnsave
sub
jmp
xor
into
inc
cmp
lcall
aaa
daa
rcl
cmp
push
daa
mov
addr16
push
sub
xchg
push
mov
inc
push
rorb
roll
ret
or
insl
sub
and
call
xor
push
loop
loopne
scas
mov
jmp
out
orb
cmp
ljmp
mov
xchg
fidivrs
shlb
add
loopne
push
mov
orb
push
loopne
incl
fstpl
rep
jb
arpl
scas
sbb
orb
mov
pop
xchg
jp
ss
lcall
mov
out
mov
sti
xchg
push
aaa
clc
incl
fwait
std
in
in
sbbl
jg
lret
jmp
popa
mov
mov
imul
cld
insb
ret
and
call
call
inc
push
adc
ljmp
pop
js
shrb
fcoml
sbb
sub
xor
jg
rcr
out
arpl
outsb
mov
push
data16
pop
std
jnp
mov
cmc
call
mov
or
jle
adc
test
jae
add
in
pop
mov
jno
add
in
iret
lods
test
adc
imul
jg
push
in
dec
int3
repz
mov
aaa
mov
adc
idiv
pop
lret
add
cmc
inc
push
xor
leave
mov
pop
lea
sbb
mov
shlb
mov
xchg
cmp
mov
jg
incl
iret
mov
icebp
mov
dec
xchg
cwtl
pop
das
sub
das
lock
mov
sbb
jle
das
lods
sbb
adc
inc
outsl
shl
xchg
fisttpll
rcrb
sub
push
in
outsb
fdiv
adc
push
inc
mov
xchg
sub
daa
jge
in
mov
std
lcall
lds
arpl
nop
push
add
lea
mov
aam
lcall
add
jge
mulb
push
cvttps2pi
int3
mov
jns
pop
push
add
push
movsl
jo
adc
lcall
mov
sbb
push
mov
add
inc
ds
gs
ljmp
jmp
inc
jl
popf
cmpsb
xchg
sub
in
pop
fucom
dec
xchg
out
cmp
mov
add
fstpt
std
shl
mov
mov
lcall
mov
mov
popf
jmp
mov
adc
jle
lret
imul
mov
pop
std
dec
jbe
js
stc
hlt
enter
pop
sahf
sarb
inc
mov
das
add
mov
adc
cli
lods
sub
scas
and
incl
jmp
addb
inc
or
inc
addr16
movsl
sub
sub
adc
movsl
mov
das
aam
sbb
sbb
adc
xchg
cli
and
pushl
aam
dec
shll
hlt
mov
in
adc
xchg
jno
jecxz
adc
out
add
cltd
and
xor
outsb
mov
loopne
inc
in
aam
sbb
adc
out
fucomp
jg
jns
scas
sub
pop
movl
sub
dec
les
and
dec
push
js
jns
dec
sub
jl
sbb
pop
xchg
mov
out
xchg
inc
fdivr
mov
jo
dec
cld
or
xor
pop
test
mov
in
inc
loopne
jne
push
call
dec
ljmp
mov
scas
xchg
sub
lods
mov
in
xor
jmp
push
movsl
jmp
and
and
int3
sbbb
and
mov
push
mov
jmp
jg
int
push
call
adc
jo
or
or
xchg
add
scas
cli
sbb
pop
pop
ljmp
loope
clc
shll
pop
mov
shrl
ljmp
inc
hlt
jno
aas
push
rcrb
addr16
adc
pushl
divb
out
scas
inc
pop
fbstp
call
fnstenv
lcall
xlat
mov
inc
mov
out
movsl
xor
xchg
fcoms
inc
sahf
add
push
lea
test
cmpsl
pop
jo
loopne
mov
aam
sti
sti
fcoms
cmp
pop
iret
popf
sbbl
lds
sbb
mov
lcall
xorl
inc
lea
cmc
and
mov
imul
push
cmp
mov
rol
test
clc
sti
out
pop
stc
inc
inc
popa
loop
pushl
cmc
xchg
pop
dec
loope
xor
add
shrb
aaa
xor
pushl
stos
dec
pusha
cmp
into
cmpsl
or
test
cmpsb
inc
cli
or
add
mov
loop
lahf
fcompl
cmpsb
fwait
add
pop
mov
ds
inc
dec
inc
clc
lcall
xchg
inc
or
push
nop
pop
mov
sbb
loope
jno
call
decl
adc
dec
adc
rorl
in
cltd
rcll
dec
mov
dec
call
call
not
pop
cwtl
test
dec
mov
lcall
pushl
mov
or
mov
xchg
sbb
mov
jb
out
movsb
push
movl
jmp
jecxz
pusha
sub
jmp
in
mov
aaa
test
mov
pop
sbb
ss
cmp
mov
cmc
arpl
fstps
cmpl
stos
cmp
icebp
ss
cmp
jne
int3
inc
mov
jns
jno
lcall
es
push
cmpsb
push
lds
rcrl
or
push
inc
mov
pop
cmp
mov
call
mov
sbb
stos
fstpt
mov
cmp
cmp
jmp
outsl
pop
jle
xor
sub
xchg
xchg
add
xchg
jg
add
and
movsl
sbb
push
mov
std
aad
dec
cmc
das
fstpl
mov
mov
xor
ds
test
call
adc
jne
sbb
pop
ss
daa
inc
std
jmp
adc
lods
fwait
test
dec
cmp
pop
decl
add
jbe
mov
fsubrs
mov
dec
jno
out
js
dec
xchg
ret
outsl
hlt
adc
push
adc
leave
cmpsl
mov
pop
cld
loop
or
lock
cmp
mov
xor
lock
cld
push
cmp
movsl
lods
lcall
add
or
jo
xchg
popf
sub
std
jmp
jmp
adc
loope
out
xor
inc
jno
jp
jg
div
pop
rorb
xchg
outsb
icebp
and
pop
lret
jno
dec
pop
out
aad
mov
mov
aad
and
inc
cmp
pop
fidivrl
lea
cmp
mov
dec
outsl
jbe
jns
std
stc
fldt
mov
in
fdivrs
push
popf
push
mov
data16
aaa
pushl
pop
lcall
sarl
pop
dec
jns
mov
lods
lods
mov
pop
roll
call
inc
add
push
repz
es
or
shrb
dec
loopne
or
cmp
mov
in
xlat
inc
xchg
loopne
stos
jp
xor
sub
iret
inc
test
icebp
add
test
push
pop
mov
jo
iret
inc
imul
addb
outsb
les
adc
call
ja
sti
inc
out
aam
fwait
mov
mov
stc
je
jno
aad
push
jl
push
cmpsb
fidivrl
push
jae
divl
dec
decl
mov
inc
ljmp
cmp
repnz
xor
add
lcall
std
jecxz
mov
aaa
stos
or
dec
pusha
push
dec
cmp
jae
call
cmp
sbb
popa
cmp
sub
add
icebp
or
mov
dec
push
xchg
xor
jns
push
and
inc
dec
pop
sbb
jecxz
push
filds
push
fwait
push
xlat
xor
bound
add
sub
ljmp
lock
out
mov
push
xchg
xor
loope
xchg
add
iret
or
cmp
test
out
rorl
or
int3
rcll
mov
popf
xchg
int
ja
aam
jl
dec
xchg
push
pushl
push
add
into
int3
movsl
jge
push
mov
fcmovu
adc
xlat
adc
decl
sarl
repnz
sarl
iret
jmp
xor
fmull
je
inc
adc
dec
fiadds
mov
outsl
icebp
decl
in
das
sbb
pop
out
mov
stc
sbb
aad
cld
hlt
jmp
ror
movsb
pusha
jmp
lahf
push
pushf
push
push
bound
lret
clc
movq
fs
sub
jmp
cmpsb
xchg
inc
jmp
aaa
push
or
imul
cli
pop
lds
mov
ds
pop
rol
mov
or
das
pop
jg
pushl
stos
jbe
mov
adc
push
gs
inc
jno
xlat
xlat
xlat
or
decl
rcll
es
ret
cmpsl
dec
aad
mov
or
sahf
js
push
jl
or
call
stos
sbb
aas
notb
adc
push
cmp
xchg
mov
aad
call
sarb
js
loopne
ljmp
cmp
and
xchg
cmp
fsubrl
push
and
in
ja
pop
popa
or
incl
pop
pop
std
and
adc
loope
jge
mov
sub
jle
mov
or
ja
enter
mov
fildll
xchg
int3
push
ror
mov
sbb
mov
jmp
int
pop
adcb
sub
les
inc
xlat
or
icebp
ja
fnstenv
fmuls
adc
sub
adc
bnd
je
mov
addl
mov
inc
fwait
popa
inc
lcall
add
ret
jo
push
pop
jge
cmpb
mov
das
subl
mov
aad
mov
xchg
cli
mov
xchg
sti
jmp
repz
inc
ljmp
adc
lock
pusha
mov
fdivrs
mov
stos
aas
jno
movsl
cli
mov
out
imul
mov
mov
ljmp
sub
lock
rolb
and
mov
or
pop
xchg
dec
mov
pop
outsl
hlt
jae
incl
add
or
lock
push
repz
ja
dec
sbb
adc
out
mov
cmp
mov
or
mov
pop
pop
scas
dec
xchg
pop
cmp
inc
jo
mov
push
shrb
add
adc
daa
sbbl
dec
cltd
add
jmp
cmpsb
shll
roll
jbe
sub
sub
imul
movsb
outsb
mov
add
repnz
sub
data16
int3
and
jg
call
or
jmp
shrl
add
ja
mov
lcall
test
pop
out
cltd
fidivrs
pop
test
call
mov
add
loopne
mov
mov
push
mov
cmp
and
mov
ljmp
mov
lds
jns
xchg
xchg
jmp
out
clc
aam
int3
and
adc
ljmp
lcall
ss
mov
sarb
pop
call
adc
mov
mov
outsl
adc
jmp
adc
aad
fwait
cmc
xchg
in
lret
into
mov
jmp
jge
jno
pop
outsb
jle
sar
das
hlt
jmp
push
push
addr16
negl
adc
out
rclb
incl
mov
scas
jp
mov
adc
movsb
call
push
lcall
push
push
jle
inc
mov
fcmovnu
test
sbb
in
mov
mov
rcl
clc
movsl
push
pusha
and
push
loop
insl
mov
xchg
leave
jne
pushl
mov
jb
jo,pt
mov
add
test
lcall
adc
push
jle
inc
add
in
mov
arpl
xor
leave
nop
fnstenv
lods
mulb
sbb
popf
in
jl
fmull
xor
xchg
movsb
std
jg
push
lock
inc
arpl
sub
andl
imulb
mov
fsubl
adcb
out
xchg
xor
jecxz
inc
lret
and
jmp
popf
mov
push
and
mov
mov
push
cli
aas
jae
in
call
pop
cmpsl
testl
into
sti
call
dec
test
psrad
mov
clc
decl
push
xchg
dec
xchg
add
ds
cmp
stos
add
jg
ja
mov
mov
cli
xchg
ljmp
sarb
or
in
and
sbbb
inc
cmpsb
aad
xor
jmp
mov
test
mov
cli
popf
mov
cmpsb
imul
mov
lock
adc
jmp
incl
loopne
lahf
sbbb
movsb
cmpsb
cmpsl
and
add
out
mov
jecxz
movsl
mov
xchg
test
call
jp
mov
push
lock
test
out
testb
jg
jge
mov
out
cld
pop
mov
idivb
int
xchg
ss
sbb
loope
enter
cmp
jle
mov
cs
cs
mov
adc
pop
adc
ds
mov
xor
pop
aam
hlt
push
mov
inc
cmc
jg
stos
aam
lods
add
lahf
sar
std
incl
scas
sub
jno
test
mov
push
mov
aaa
pushl
rcll
jmp
roll
rcrb
add
mov
call
ljmp
inc
test
push
dec
push
and
clc
xor
xchg
icebp
popa
xchg
inc
sti
incl
mov
mov
xor
popa
jbe
sbb
xor
xchg
mov
iret
iret
cmp
or
lahf
xor
lds
out
xchg
popa
js
in
idivl
stos
and
pop
clc
decl
xor
aaa
mov
lea
add
mov
ljmp
inc
push
mov
and
out
xchg
clc
bound
stos
roll
push
sbb
sarb
pop
clc
jmp
jmp
push
ret
out
xchg
mov
jmp
addr16
loope
inc
adc
jnp
mov
or
and
jbe
aad
movsb
xor
fucomip
sbb
adc
sbb
mov
out
mov
inc
pushl
enter
stos
lret
mov
arpl
xor
stos
scas
xor
movsb
out
push
pop
in
lds
and
pop
pop
jmp
inc
dec
inc
shrl
jns
pushf
jb
or
jge,pt
inc
icebp
fldenv
sbb
mov
es
call
cmpsb
pop
je
loopne
in
cmp
popf
imul
mov
fsubs
imul
sbb
lcall
pop
jmp
xchg
cmp
rorb
in
cmp
lods
sti
dec
cmp
jmp
jo
iret
testb
jns
insb
js
sub
or
incl
cmp
sub
cmp
sarb
jg
imul
inc
pop
jns
out
push
sub
loope
imul
inc
enter
decl
int3
dec
adc
xchg
andl
into
add
adcl
lcall
pushl
xchg
pushf
pop
pop
cmpsl
ljmp
mov
mov
lds
call
test
fdivr
pop
movsl
or
adc
mov
sub
jmp
roll
inc
mov
add
mov
dec
pop
in
mov
mov
pop
out
pand
mov
mov
mov
enter
jmp
push
rcll
stos
jg
jmp
enter
jle
fiadds
pop
inc
mov
sbb
addr16
push
jne
dec
aas
mov
mov
pushf
bts
icebp
mov
xchg
jmp
xor
push
jmp
add
adc
test
lcall
aam
enter
lods
in
ud0
imul
cmp
pop
fcoms
lea
inc
popa
in
jbe
push
lcall
fistl
popa
pop
xchg
test
stos
xor
ss
hlt
and
je
mov
fdivrl
lcall
fistpll
jmp
pop
int
mov
shlb
add
outsl
inc
dec
push
iret
add
xlat
cmp
mov
mov
clc
pop
pushf
int
rclb
jg
sub
xchg
xchg
cli
mov
jbe
test
fucomip
jmp
mov
lret
fnstsw
stos
stos
jl
sub
movsb
push
sbb
decl
inc
stos
xor
jl
sub
mov
sub
mov
adc
cmp
mov
stos
push
fcompl
cld
in
push
add
cmp
sub
cmp
lds
pusha
adcl
jg
pop
daa
inc
out
mov
sbb
push
stc
lds
cmpsb
lcall
popa
xchg
adc
dec
imul
pop
mov
ds
aam
in
lcall
mov
lret
and
cmp
repnz
mov
sarb
insb
icebp
cmp
adc
lret
inc
es
fwait
mov
cld
stc
fildll
push
push
mov
push
in
frstor
lea
rcll
mov
dec
adcl
test
mov
push
adc
mov
add
sbb
push
leave
dec
jae
push
jbe
ficompl
movsb
clc
mov
xchg
xchg
pop
add
das
cmc
hlt
sub
lods
mov
ficompl
mov
mov
imul
mov
fld
popl
dec
rorl
popf
sub
das
mov
add
decl
mov
pop
xor
mov
out
cmp
call
lods
int
jp
push
ljmp
cmp
ljmp
scas
js
fldl
in
push
cli
and
jl
dec
xlat
arpl
push
sub
pushf
pop
cli
incl
inc
mov
gs
sbb
aam
push
sub
push
xchg
imul
fidivl
dec
jb
pop
xlat
push
mov
in
in
repnz
sbb
pop
and
cmpsl
jmp
aaa
ja
cmpsb
xor
js
out
mov
pusha
cmp
into
jb
das
or
xor
mov
lcall
xor
or
je
dec
ret
or
sub
mov
pop
fwait
testb
mov
mov
add
push
std
adcb
or
cmp
ljmp
cmp
outsb
add
xor
aam
bound
inc
sub
imul
lods
mov
push
inc
dec
push
xlat
jmp
push
loopne
pop
mov
add
addr16
and
pop
pop
cltd
sub
xchg
xor
cmp
std
aam
lcall
xchg
cmp
repz
sahf
inc
lcall
jge
add
or
mov
mov
outsl
call
rorb
adc
jne
pop
test
aad
xchg
out
enter
push
stos
inc
das
icebp
incl
mov
inc
mov
cld
push
sbb
xchg
cmp
es
jg
stos
scas
inc
out
xchg
repz
jg
iret
cs
pushf
inc
add
push
xchg
add
dec
adc
clc
fstps
test
insl
dec
and
repz
lods
aad
aam
mov
stos
jb,pt
push
mov
xchg
lret
loope
push
std
scas
stc
cwtl
fucomip
rcrl
mov
jo
push
aaa
int
push
sarb
inc
stos
fwait
adc
int
mov
mov
mov
jmp
lahf
ljmp
sbbl
jge
cltd
movsb
aaa
xchg
outsl
inc
sub
jg
and
jae
mov
cmpsb
movsb
mov
mov
js
lret
mov
sub
scas
lcall
pop
mov
aad
dec
xchg
inc
rcrb
push
std
aaa
push
enter
push
push
mov
aaa
push
jecxz
xchg
xchg
incl
inc
mov
les
or
int3
lret
adc
cmpl
incl
sbb
mov
pop
jl
mov
je
mov
insb
arpl
sahf
ret
movsb
lea
sbb
mov
call
rcrb
and
sti
or
xor
test
stc
xchg
jp
incl
rep
out
cmc
mov
arpl
xchg
adc
xchg
mov
call
push
ds
test
in
jb
rcrb
add
xchg
xor
xchg
movsl
xchg
call
add
mov
lods
ret
out
sbb
stos
inc
xchg
gs
mov
add
int
js
sbb
jecxz
mov
xchg
fisttpl
jg
ror
imul
pushl
clc
rcrl
jnp
xor
ljmp
ja
stc
mov
stos
decl
int3
lock
popa
mov
xor
sbb
aam
inc
jecxz
cmp
jb
loope
cmp
loopne
shlb
or
fst
mov
inc
adc
jmp
fcoms
mov
sti
aas
cmp
imul
mov
jne
add
lret
fidivrl
ljmp
lret
test
mov
arpl
pop
insl
pop
arpl
fidivrs
jge
push
sub
pop
fucomip
push
lds
adc
lret
or
mov
fisubl
mov
stos
mov
rolb
data16
sti
mov
and
pop
scas
xlat
fbld
loopne
fidivrl
jae
pop
cmp
or
lea
dec
sarb
add
dec
rcll
lahf
test
xor
sbb
xchg
or
cmovo
pop
sub
mov
push
sub
sub
jmp
inc
loopne
jnp
in
add
jg
add
in
xor
xlat
imul
popf
jbe
jnp
bound
mov
adc
test
cmc
mov
push
add
out
xchg
aam
xlat
pop
int3
ss
sahf
int3
jle
incl
movsb
test
sbbb
xlat
sub
rorl
sbb
shrl
loope
call
cmp
cltd
cld
daa
adc
adc
jno
mov
ljmp
scas
shl
inc
lcall
pop
test
adc
fbstp
pop
rclb
loop
sub
inc
fs
repz
jle
mov
aam
aad
jle
inc
add
sub
adc
mov
je
mov
cltd
mov
push
pop
jno
inc
push
xchg
stos
iret
pushl
sbb
inc
cld
pushf
clc
mov
pop
pop
inc
or
lret
rcrb
mov
scas
jns
in
stc
mov
sbb
cmp
inc
ljmp
fdiv
insb
adc
mov
sub
mov
sbb
cli
mov
push
inc
fimull
inc
rol
icebp
xor
sbb
mull
js
push
int3
xor
cld
ja
flds
add
jecxz
xor
rorl
mov
add
jecxz
jmp
out
push
repnz
loopne
lock
dec
mov
cmp
int3
xlat
push
inc
orb
ss
pushl
pop
lret
out
pop
lahf
add
pushl
adc
sbb
cmp
repz
call
std
movsl
mov
sbb
jbe
les
and
and
fsubs
leave
push
add
inc
and
mov
out
inc
dec
lahf
sbb
movsl
jbe
jne
jo
dec
inc
in
repnz
stos
or
mov
jg
dec
push
dec
addr16
je
jge
je
decl
imul
int
add
jmp
jle
movsl
int3
lret
hlt
idivb
cmp
xchg
or
in
scas
int
jmp
mov
in
test
xorl
mov
mov
add
and
jne
lahf
push
fistpl
das
daa
mov
incl
and
mov
mov
shrl
dec
mov
call
pop
sbb
xchg
call
stos
insl
cmpsl
mov
js
or
jg
jmp
repz
jb
adc
jle
enter
gs
icebp
jmp
pop
lods
mulb
xlat
es
xor
pop
xor
jmp
icebp
in
mov
and
xchg
test
hlt
cmp
in
cmpl
mov
adc
jae
fbld
out
sub
add
jmp
out
jnp
jle
jno
ljmp
cmp
loope
lods
pushl
leave
in
lcall
xchg
lcall
push
push
push
dec
pusha
test
bound
in
mov
adc
ret
pop
mov
stos
jg
test
jnp
push
lock
mov
dec
add
call
popa
or
mov
js
call
xchg
sub
inc
mov
push
fsubp
cld
pop
lcall
push
or
lods
lods
dec
mov
imul
loop
stc
mov
sub
dec
dec
jecxz
in
mov
icebp
call
rcrb
cli
xor
aas
lods
cld
add
call
lock
mov
jmp
add
out
ds
loopne
push
mov
or
mov
mov
cmc
divb
or
lahf
adc
incl
lcall
or
jecxz
jge
pop
lods
xor
outsl
mov
inc
daa
mov
sbb
xor
cli
jp
inc
leave
mov
jb
in
xchg
cli
call
xor
and
adc
push
inc
movsl
sub
das
fdivs
jmp
pop
and
shrb
inc
jmp
jno
push
hlt
push
cmp
ljmp
pop
icebp
xchg
cmpsb
aad
add
orl
ret
decl
sub
sub
or
fbstp
decl
jne
cmp
sub
aaa
push
daa
fs
movsb
or
push
cli
sahf
test
loope
das
mov
incl
cmc
cmp
aam
in
adc
or
add
fadds
or
repz
cmp
clc
in
in
jnp
ret
xor
sbb
jnp
jne
jg
fsub
xchg
clc
aam
inc
ret
lcall
and
ljmp
out
aaa
mov
xchg
notl
push
pop
pushl
fxtract
jecxz
scas
test
aam
dec
cmp
mov
pop
xchg
and
iret
incb
inc
mov
mov
shll
and
pop
mov
popf
shlb
push
lret
out
iret
jg
cltd
mov
cmc
fwait
xchg
mov
mov
call
movl
mov
push
jle
cmp
mov
jne
pushl
outsb
jl
mov
or
test
in
xchg
xor
jae
stos
jg
xchg
lcall
scas
dec
mov
shlb
ljmp
icebp
jno
jl
shll
cwtl
cmc
cmp
pop
push
ja
and
in
mov
clc
adc
jecxz
xor
loope
pop
arpl
out
andl
aam
out
sahf
lahf
jg
jmp
mov
and
pusha
jp
divb
sub
cmpsl
ficoml
inc
mov
cmp
pop
pushf
test
add
adc
mov
add
lret
fdiv
das
mov
push
incl
ss
sbb
cmp
pop
jmp
push
loop
ja
outsl
lret
outsl
decl
add
jbe
push
fimuls
pop
fstps
sub
push
push
adc
sub
jbe
insb
pop
hlt
dec
push
pop
subl
cmp
cmp
movsl
cmpsl
outsb
fildl
into
mov
inc
add
push
aaa
cli
pushl
dec
cli
mov
adc
xchg
daa
pop
popf
les
cmpsl
mov
push
xchg
shll
sbbl
in
jae
add
push
loopne
addr16
sub
mov
mov
jg
and
jns
movsl
outsl
nop
sbb
incl
jg
mov
sbb
and
out
mov
mov
in
cmp
or
jns
aas
nop
scas
je
ja
ja
add
ja
mov
pop
stos
xor
sti
lcall
adc
mov
shl
cmpsl
cld
adc
or
or
adc
pop
adc
mov
xlat
les
fwait
popf
orb
lcall
and
ds
cli
data16
mov
into
xor
outsl
std
ljmp
je
xor
aaa
add
inc
xor
popf
ds
out
aad
dec
mov
test
pushf
jmp
mov
pop
loop
mov
loop
sti
lret
call
in
pop
inc
and
cmp
aaa
lret
sbb
das
xchg
sub
cmp
loop
push
add
mov
and
popf
push
in
jmp
repnz
aad
test
pop
mov
and
in
mov
call
andb
cmpsl
mov
pop
and
mov
xchg
pop
lock
call
mov
sahf
in
mov
or
add
imul
decl
gs
xchg
pop
push
shrl
push
ds
cmp
cmpsb
pop
ret
pop
ja
inc
mov
ljmp
jnp
mov
ss
insl
pop
xchg
rclb
aas
jns
cmp
pop
push
mov
push
js
test
lods
ds
mov
cmp
push
imul
lcall
std
xor
push
mov
sti
xlat
sbb
sbb
adcl
pop
in
js
les
test
sbb
mov
fdivrl
or
test
jmp
lcall
xor
rorl
add
xchg
dec
mov
sub
bound
add
movsl
mov
ljmp
hlt
sub
push
je
imul
mov
fcmovnu
aad
stc
andps
imul
dec
dec
mov
xchg
mov
jno
xlat
das
jg
jg
rcl
or
inc
aas
and
dec
or
in
or
shrl
mov
loopne
xchg
mov
cmpsb
jp
xor
jle
mov
repnz
enter
pop
clc
push
js
mov
adc
mov
mov
lea
jge
incl
push
inc
xchg
sbb
cs
in
cwtl
xchg
adc
xor
inc
into
jmp
fs
push
xchg
pop
or
aad
cld
cmc
mov
xor
cltd
add
in
repz
sti
testb
incl
inc
test
dec
data16
lds
mov
pop
cli
pop
lods
rorl
jnp
iret
push
or
push
lock
mov
loope
imul
add
pop
pop
cld
sub
scas
adc
mov
dec
push
stc
and
aaa
cli
push
dec
jb
and
ficompl
xchg
into
aas
push
cltd
lcall
shl
jmp
dec
xchg
push
icebp
ret
loope
pop
cmp
imull
je
mov
icebp
or
xchg
sahf
sbb
les
lods
sbb
hlt
jg
daa
ja
je
lock
pushf
out
pop
jbe
insb
jb
inc
pushl
xchg
dec
xlat
jg
add
push
js
in
mov
js
mov
lcall
xchg
insl
mov
push
cltd
repz
mov
lea
jmp
stc
fimuls
cwtl
jmp
push
faddl
add
fadd
mov
lds
movsl
mov
inc
mov
jmp
xor
in
pop
sti
inc
loope
add
decl
in
xchg
rcll
out
popf
aad
mov
popf
loopne
daa
mov
mov
jl
pop
lods
inc
enter
xor
jge
neg
shlb
xchg
adc
decl
dec
mov
test
jns
xchg
je
mov
jg
xchg
lods
jb
call
pop
jl
lea
lds
or
jle
outsl
cmc
lcall
dec
sahf
int
std
push
icebp
int3
sar
push
popa
int
lea
leave
mov
dec
inc
jmp
push
pop
pop
mov
testl
movsl
aam
int3
mov
fnstenv
cld
push
fcmovu
mov
clc
movsl
fdivs
cld
jg
push
add
subb
jp
pop
movsb
in
adc
aaa
xchg
sbb
lcall
js
xor
push
adc
mov
push
decl
in
lahf
inc
dec
cmp
adc
mov
add
scas
cmp
cld
sub
ret
xor
sub
outsl
push
les
mov
sbbb
sbb
or
push
xchg
sbb
lods
fbld
bound
mov
gs
inc
popf
loope
lret
sub
shrb
loop
incl
int3
jecxz
cld
jg
xor
int3
cmpsb
cmp
jno
jmp
cwtl
mov
xchg
or
int
rcll
or
clc
mov
jg
xchg
and
pop
in
or
sub
inc
cmp
mov
stos
insb
loop
or
test
xchg
sti
data16
mov
sar
jp
stos
es
in
std
je
das
mov
incl
pushf
enter
jno
jle
ret
imul
cmpsb
loop
pop
in
repnz
cmp
adc
jmp
cltd
mov
add
jp
les
inc
loope
mov
std
mov
aad
std
call
and
push
mov
adc
sub
ljmp
loopne
icebp
and
test
and
push
and
pushl
pop
fcoml
jnp
sbb
ljmp
incl
sub
jb
aaa
sub
pop
outsb
icebp
hlt
pop
fwait
sbb
pushl
scas
inc
jge,pn
icebp
sbb
sub
pop
fs
xchg
jnp
addb
decl
pop
popw
orb
data16
inc
inc
adc
jmp
ja
mov
mov
pushl
mov
push
inc
call
fcmovu
cmp
add
jb
addr16
push
call
sarl
push
test
outsl
std
call
or
ret
push
mov
xchg
xchg
test
pop
lea
cmp
mov
jl
jg
xor
add
adc
and
inc
adcl
sbb
cmp
sbb
pop
imul
adc
out
cli
mov
mov
call
push
inc
cli
pusha
xchg
in
das
cmpsb
or
lods
orb
push
lcall
into
mov
loop
adc
sbb
mov
loope
and
movsl
and
test
clc
dec
lods
pop
outsl
jno
lock
inc
aam
adc
and
push
jg
xor
and
sbb
subl
std
dec
int
aad
ljmp
leave
testl
dec
pushf
das
mov
jae
repnz
mov
add
push
call
shlb
notl
cwtl
inc
cs
ret
inc
call
call
or
int
jns
ret
add
xchg
arpl
lcall
sti
adc
cmpsl
inc
cltd
xor
xchg
jo
inc
fidivrs
les
dec
push
inc
xor
jmp
lods
jl
inc
test
push
lahf
jne
push
push
lahf
mov
push
mov
xchg
mov
stos
jnp
inc
jae
sub
mov
cmp
lock
int
std
fisttps
cli
in
mov
pop
push
jne
dec
iret
sar
ljmp
out
cli
mov
sti
shl
mov
xor
movsl
jle
jmp
mov
test
xchg
out
arpl
push
out
inc
cld
mov
fsubl
mov
test
sahf
popf
cltd
pop
mov
add
dec
nop
mov
cmovbe
sub
or
sub
mov
inc
scas
inc
pop
xor
sbb
out
jl
sbb
call
fiadds
cmp
insb
dec
scas
out
cld
inc
sti
sub
sub
xchg
adc
adc
sbb
decl
sbb
and
mov
test
lea
mov
outsl
lock
mov
test
fldcw
sub
dec
mov
lcall
or
inc
rcl
dec
or
je
arpl
roll
idivl
repnz
jg
aas
or
int
sbb
inc
xor
insl
jecxz
sahf
insb
mov
sub
push
sbb
stc
inc
inc
push
sbb
stos
les
sub
or
mov
into
std
icebp
cmp
cmp
ret
pop
cmp
xchg
ret
mov
and
divb
xor
sbb
gs
popf
lock
jmp
lods
cmp
iret
sbb
sub
sarb
fistpll
cmp
addl
add
decl
mov
insl
popf
mov
or
aad
psadbw
xchg
cli
cld
cltd
iret
lret
inc
pop
jb
add
inc
add
add
aaa
adc
call
leave
shlb
mov
insl
lods
clc
xchg
adc
hlt
js
insw
xrelease
stos
das
cld
mulb
jl
push
cld
mov
dec
in
mov
jg
cwtl
mov
leave
ficompl
lods
bound
jg
lds
adc
call
mov
out
push
jg
jg
cltd
add
cmp
test
loopne
sub
call
das
jl
cmp
or
xchg
mov
or
and
push
ret
sar
loop
int
mov
or
mov
loope
dec
mov
adc
popa
das
aas
jae
push
jne
std
pop
ljmp
test
inc
sbbl
insl
movsl
stos
mov
ljmp
jmp
pop
imul
and
and
xchg
aaa
rcll
call
mov
jmp
sbb
push
jae
aam
mov
fwait
push
pop
push
icebp
mov
aam
fidivl
movsb
sti
outsb
sub
cmp
call
mov
insl
xor
mov
jo
xor
add
mov
enter
std
jmp
les
and
add
movsb
fwait
xor
mov
adc
mov
push
ljmp
mov
sbb
fwait
sub
jmp
cld
les
lods
scas
enter
mov
jb
adc
sti
lea
das
cmc
outsl
icebp
fwait
push
adc
dec
xor
int
icebp
push
jmp
cld
mov
stos
mov
daa
adc
es
push
pop
jnp
inc
fildll
popf
rorl
sub
iret
mov
sbb
insl
push
push
aaa
cli
jmp
rclb
mov
and
icebp
jg
lcall
pop
gs
es
ret
sbb
push
loopne
call
insl
incl
jmp
sbb
cmovge
xor
jp
dec
push
cmc
int
adc
addr16
sub
mov
sub
out
arpl
dec
pusha
push
xchg
fimuls
mov
sti
lods
decb
sbb
cs
push
arpl
in
push
mov
test
inc
pop
arpl
xor
dec
sbb
lock
xor
inc
cmpsb
pusha
mov
movsb
outsl
lds
fstpl
decl
lods
sbb
fists
icebp
and
and
stos
test
mov
call
jmp
jl
cltd
or
xchg
cmpsb
iret
js
jno
leave
xchg
push
mov
sarb
adc
cmp
dec
and
js
scas
nop
out
jo
push
jge
jg
call
int3
out
sub
adc
sbb
insb
adc
push
arpl
ret
jns
sub
das
adc
xchg
mov
mov
pop
rolb
into
out
decl
ljmp
in
adc
repz
jns
push
popa
lcall
std
cld
rolb
popa
add
dec
mov
sub
je
inc
and
ffree
outsb
inc
xchg
mov
repz
movsb
out
js
outsb
das
in
enter
call
call
jne
mov
nop
jo
adc
inc
enter
loope
mov
dec
loop
lcall
test
shrb
divl
lcall
inc
cwtl
mov
xchg
or
leave
pop
cli
sub
outsb
mov
xor
std
jmp
sbb
movsl
ret
pop
dec
jbe
and
mov
xchg
push
push
das
sbb
call
pop
dec
xchg
adc
cmp
cmp
sar
jno
rorl
pop
mov
popa
xchg
push
xor
jp
xor
ljmp
push
mov
in
notb
sbb
frstor
icebp
fstl
jo
add
filds
adc
push
fldl
inc
mov
ljmp
cmc
inc
mov
pop
push
test
ja
pop
out
scas
lds
xchg
xchg
lock
sbb
sbb
xor
stos
clc
jae
sub
js
ljmp
cli
and
rcl
mov
fisubs
mov
fnstsw
jns
pop
fcompl
out
movsl
jne
push
fmul
cli
jne
in
rclb
cmpsl
fs
pop
cs
pushl
mov
cmp
leave
xor
push
xchg
aaa
ljmp
ret
inc
int
xchg
mov
or
or
inc
xchg
dec
xchg
jg
mov
dec
inc
andl
inc
xlat
imul
hlt
ljmp
decl
mov
push
imul
mov
inc
stos
pushl
dec
xor
imul
adc
cld
mov
adcb
in
dec
fisubrs
cli
push
jecxz
and
pop
push
push
add
lcall
mov
movsb
loope
shlb
inc
sbb
jmp
imul
pushl
clc
pop
pushf
jg
mov
jl
jno
xchg
sub
or
daa
aad
call
ret
xlat
jp
insl
add
out
mov
repz
dec
scas
ds
sbb
aad
jp
jg
incl
adc
test
clc
and
subb
cld
mov
add
push
cmp
xor
ss
dec
adc
pop
jnp
and
fldcw
mov
sbb
ja
lcall
mov
inc
cmpsb
std
enter
cmc
inc
sarb
pop
xchg
xor
inc
daa
pop
jmp
cld
pop
cld
roll
shlb
mov
outsb
cmp
push
jmp
push
push
jecxz
push
xor
icebp
incl
mov
dec
adc
ret
call
cmp
ficoms
call
jg
push
cmpsb
dec
in
inc
push
sbb
xor
jg
push
sub
imulb
std
testl
adc
mov
jecxz
jecxz
lods
xorl
loopne
cmp
jg
sbb
adc
push
mov
sbb
aad
jl
aam
iret
jge
jne
mov
int
add
xor
pushl
mov
push
sub
sub
pop
addr16
jmp
out
push
sti
pusha
dec
push
nop
mov
cmpsb
push
sub
inc
add
push
inc
aaa
cli
jg
popf
les
mov
xchg
sub
stc
fs
add
lods
pop
ret
inc
jnp,pt
push
sbb
lods
call
cwtl
fwait
stc
ds
adc
push
dec
andl
incl
cli
arpl
cwtl
sub
out
aam
push
xchg
push
and
cs
jecxz
call
pop
cs
xchg
xchg
inc
popa
call
jle
sahf
jg
jg
xchg
scas
push
negl
add
test
add
and
add
out
add
loop
cmp
sub
aaa
jns
outsl
lock
sub
push
cmp
mov
lcall
test
xchg
popf
imul
inc
sub
jns
mov
push
ljmp
sub
push
sbb
ret
lds
jbe
pushf
xchg
inc
mov
ret
pop
pop
cmp
and
jns
lock
repz
add
dec
pusha
xchg
pushl
jg
jo,pt
push
push
mov
pop
leave
jae
dec
xchg
push
je
adc
dec
jne
fimull
testb
fildll
lods
aaa
cmp
repz
pop
lcall
add
lods
or
pop
rclb
iret
out
push
xor
repnz
add
mov
mov
filds
jns
mov
inc
fucomi
sbb
ret
sbb
jne
hlt
xor
cmpsl
jg
call
mov
adc
and
push
jge
call
adc
cld
adc
sub
ja
mov
pop
cld
mov
lock
dec
hlt
adc
loopne
call
popa
dec
das
inc
adc
mov
jbe
in
pop
jg
xor
outsl
repnz
and
adc
mov
ret
sbb
sbb
push
loope
push
es
push
fisubs
inc
inc
adc
call
adc
insb
sub
sub
cmpb
push
sar
push
dec
loope
movsb
mov
fstpl
mov
popf
xchg
ljmp
js
inc
pop
mov
lods
or
cmp
stos
js
or
mov
or
or
mov
push
cld
call
add
lds
cltd
sub
xor
je
cli
lcall
lods
es
lret
push
lret
ss
sub
call
out
push
inc
mov
int
push
pop
pop
add
cmc
imul
loopne
ljmp
mov
jmp
loop
cmpb
push
cmp
sub
add
fisttpll
sub
push
mov
stos
push
cmpsl
lahf
push
call
lea
inc
push
sbb
test
pusha
pop
xlat
movsl
test
pop
add
fs
push
jb
lcall
ds
fisubrs
lods
popa
pop
fwait
loope
xor
rorb
jne
cmpb
cmp
lcall
cmp
lret
xchg
mov
test
dec
int
out
fcompl
int
sub
fdivs
call
mov
inc
sub
mov
call
cli
dec
jo
cmpsl
loopne
stc
mov
cmpb
jmp
pushl
adc
jb
cmp
jmp
mov
mov
jg
outsl
movsb
into
xchg
dec
shlb
jecxz
test
xor
jmp
push
jmp
or
in
jge
xchg
fnstenv
adc
mov
xchg
cmp
rorb
in
pusha
pop
mov
mov
ja
jmp
lret
hlt
lods
cmc
sub
into
push
push
cmp
jmp
call
dec
shl
cwtl
jmp
sbb
push
mov
loop
adc
push
fldl
pop
daa
inc
sub
mov
cmp
divb
imul
shr
xor
adc
je
mov
jmp
adc
xchg
mov
or
jmp
cmp
rcrl
ljmp
gs
ds
test
popa
fsub
test
cmpsb
in
jno
subl
pop
xor
loope
outsl
std
sbb
sbb
bound
or
mov
mov
inc
and
stc
dec
mov
cmp
dec
loope
sub
inc
lds
pushl
sub
sbb
lret
ds
cmp
mov
out
jmp
add
lcall
into
push
inc
roll
aad
stc
into
loop
jmp
xchg
cmp
xchg
in
imul
ljmp
orl
xor
decl
xchg
mov
xchg
push
mov
jl
inc
insl
sub
leave
xchg
stos
incl
hlt
adc
mov
fnstenv
sti
jmp
lret
fidivs
sub
cmpsb
add
call
add
cld
and
fwait
out
xlat
adc
scas
sbb
pushl
or
adc
xor
jns
addr16
inc
es
int
mov
scas
jnp
test
mov
cld
in
add
xchg
pop
adc
inc
mov
test
mov
adc
mov
fbld
pop
fidivs
cli
lcall
inc
xchg
orl
push
pop
push
test
mov
jae
in
call
clc
xchg
sub
loope
jl,pt
imul
or
lcall
add
adc
or
stos
lods
ljmp
push
ljmp
into
js
lcall
mov
xchg
outsl
mov
jg
int
ret
fmull
das
cli
std
out
incl
mov
lock
ljmp
mov
adc
push
out
lock
pop
loop
sti
mov
scas
adc
mov
enter
pop
sbb
or
mov
sub
jg
stos
rolb
xchg
dec
std
pop
daa
pusha
push
push
call
or
jecxz
xchg
adc
cmp
adc
sarb
outsl
mov
pushl
pop
ficoms
sbb
cs
pop
lcall
ror
mov
icebp
adcl
enter
ja
dec
iret
or
in
adcl
repnz
pop
cmp
std
outsl
sub
pushf
pop
sub
sub
aas
outsb
xchg
push
lret
dec
icebp
pushl
mov
add
mov
out
dec
loope
outsb
add
inc
push
leave
lock
leave
mov
aas
jmp
sub
add
nop
arpl
inc
lea
outsl
lock
ljmp
lods
aam
lea
push
cmc
sub
cmp
in
xor
aas
or
push
daa
xchg
dec
jo
xor
xchg
leave
ja
jb
xor
pushl
mul
adc
je
jmp
sahf
adc
cmp
popa
fwait
adc
or
data16
aam
jge
loop
ret
out
std
rorl
lret
mov
or
rol
adc
jbe
pop
push
out
cmp
rorb
cmpsb
sbb
jmp
xchg
xor
fistpl
pop
adc
insl
adc
rorb
cmc
and
cmc
lds
test
aas
orb
fistpll
das
gs
shlb
inc
add
ljmp
add
pop
outsb
cmp
jle
sub
btc
mov
cmp
ljmp
push
in
jge
cwtl
adc
incb
pop
xchg
lret
loopne
cmp
add
pop
xchg
fcomip
adc
pop
ss
push
cmp
mov
in
xor
or
sub
int
sarb
xchg
mov
xlat
xchg
jne
pushl
bswap
push
aam
xor
aad
inc
add
push
fsubp
pop
add
clc
decl
in
test
stos
adc
push
dec
call
sub
iret
jnp
in
cmp
adc
push
sahf
dec
or
add
mov
imul
sbb
or
mov
stos
pop
sbb
les
inc
inc
and
ljmp
call
fisttpll
pop
ljmp
out
pushf
pop
jg
mov
cmp
mov
sbb
imul
sbb
scas
testl
and
sub
shll
in
inc
ja
jno
push
out
mov
dec
pop
add
pop
decl
cmp
mov
pause
fwait
mov
test
sub
movsl
div
push
imul
sahf
test
sub
test
jmp
lods
dec
mov
mov
mov
add
and
arpl
shrl
arpl
jnp,pt
xchg
sbb
push
cmp
sub
sbb
or
push
push
mov
push
push
cmp
call
push
jg
pop
sub
mov
mov
cli
push
add
outsl
out
adc
out
cmpl
mov
cmp
adc
add
sub
xorb
cwtl
push
sbb
and
incl
mov
int
and
ljmp
fdivrl
data16
mov
loop
mov
jp
add
mov
mov
and
ja
jge
fucomip
lcall
inc
scas
in
std
int
pop
adc
pop
in
jge
ss
push
xor
jg
cmp
inc
inc
loop
rcr
xchg
inc
repnz
cmp
jns
inc
std
in
push
pop
jg
push
and
cs
lods
or
call
pushl
mov
mov
and
xchg
add
lock
incb
cmp
lret
pop
jl
lods
lret
daa
clc
or
les
adc
jnp
incl
std
jmp
jecxz
mov
das
ss
jae
fdivrp
in
decl
sbb
daa
sbb
std
jne
or
lods
scas
mov
jp
hlt
jmp
mov
sub
xor
ljmp
std
push
mov
mov
or
jne
inc
sub
les
imul
incl
std
les
or
jb
dec
arpl
inc
jne
fiaddl
je
into
mov
loopne
xchg
jbe
aad
test
pop
xchg
or
push
call
bound
ljmp
pop
xor
mov
cli
sbb
arpl
aad
loop
inc
lahf
mov
lock
jg
and
in
pushf
mov
jle
cmc
dec
jp
lcall
inc
inc
sub
popf
movsl
daa
lret
or
in
in
pop
mov
jg
push
push
xchg
adc
fadds
adc
out
xchg
sbb
sti
xor
xchg
ret
cmpl
xchg
clc
lods
inc
push
pop
mov
push
loopne
xchg
popa
adc
hlt
mov
xchg
movsl
push
hlt
cmpl
in
push
push
add
jmp
imul
or
lret
gs
sbb
add
call
or
repz
mov
push
or
lds
test
aam
push
pushf
cmpsb
outsl
lock
dec
roll
inc
test
fs
sbb
pminsw
sub
pushf
sar
stc
or
sti
jbe
inc
xchg
pushf
fdivl
scas
popf
mov
in
js
cli
mov
flds
jns
sbb
incl
dec
mov
xchg
mov
out
dec
js
xor
cmp
mov
and
dec
std
test
sub
mov
mov
jb
fwait
test
push
push
loope
sub
dec
mov
xchg
pushl
cli
popa
push
aaa
in
jo
sti
jge
lret
mov
cmc
add
out
ret
jle
cs
call
cltd
inc
jl
xchg
pusha
inc
and
push
pop
mov
lahf
cmp
stos
cld
and
test
ljmp
xchg
and
and
xchg
int3
cmpl
dec
xchg
inc
sti
adc
push
mov
decl
mov
cmp
sub
in
pop
xchg
adc
mov
and
pop
call
sbb
and
mov
sar
or
aas
jmp
pop
daa
decl
mov
pop
fcompl
ret
insb
out
shrb
mov
jns
in
mov
sub
cmp
or
jg
aaa
aaa
inc
inc
sbb
dec
pop
popa
jne
test
nop
movsb
hlt
pop
or
mov
dec
jp
imul
push
nop
xchg
popf
pop
push
imul
hlt
xchg
cmp
lcall
jns
leave
pop
imul
mulb
aas
call
in
rcrb
stos
dec
clc
mov
jg
and
add
stos
jl
mov
fsub
or
les
in
dec
out
jl
decl
pop
outsl
push
jg
loop
xor
repz
xchg
jg
jmp
push
out
pop
sub
mov
pop
inc
aaa
push
in
sbb
das
mov
sub
jne
dec
inc
in
mov
pop
xchg
dec
xchg
pop
jp
data16
mov
lcall
aad
mov
bound
and
xor
loope
xchg
adc
repz
xchg
mov
movsl
mov
push
mov
xor
out
dec
in
in
pop
std
or
dec
pop
push
outsl
enter
sub
xchg
incl
dec
inc
inc
jae
lods
in
arpl
int
cs
sti
jmp
lret
lock
adcb
cmc
and
or
inc
cmp
jle
shl
clc
mov
jno
and
scas
cltd
push
stos
arpl
add
cmp
pop
add
sub
movsl
pop
inc
testl
lds
outsb
cld
mov
cs
nop
push
cld
mull
dec
inc
sbb
call
popa
jno
fistl
push
push
jno
fstpl
das
hlt
push
push
mov
cld
inc
xor
sbb
sbb
mov
std
mov
clc
fcomps
xor
cli
outsl
lahf
jae
fwait
mov
mov
lret
lods
mov
popa
dec
mov
mov
jecxz
scas
sbb
push
mov
and
popf
fucomp
jg
sar
xchg
js
popf
arpl
sub
sahf
repz
daa
mov
pop
inc
std
jl
or
mov
cwtl
das
stc
movsb
test
xor
sbb
fldcw
in
les
adc
dec
add
out
fstpt
incl
cld
ljmp
cld
dec
ja
and
fwait
adc
push
rcll
int3
pop
flds
ljmp
je
or
pushf
das
adc
aad
sub
push
inc
fdivl
sub
ret
fistps
loopne
lret
and
pop
xchg
pop
mov
adc
outsl
hlt
dec
cld
or
cmp
mul
movsl
cmp
sub
idivb
cmpsb
ja
mov
addr16
mov
inc
xor
iret
gs
xor
add
outsl
icebp
call
rcll
hlt
adc
popa
aas
outsb
xchg
outsl
cld
call
in
cmp
pop
lds
pop
jo
pushl
sbb
jg
push
out
mov
jecxz
xchg
adc
mov
addr16
pop
mov
mov
pop
dec
adc
mov
jg
or
popa
mov
hlt
inc
je
cld
pop
cmp
xchg
fdivr
outsl
sub
les
adc
insb
ja
insb
stos
lahf
adcb
pushl
or
js
outsb
and
or
nop
inc
cmp
int
jg
sti
stc
sub
push
push
push
out
mov
pushf
dec
pop
cwtl
xor
xchg
popa
mov
jb
sti
lret
enter
movsl
xor
pop
jle
or
mov
push
sub
fists
mov
or
in
push
call
fmuls
jg
inc
mov
sti
adc
decl
cwtl
test
jle
ljmp
inc
inc
xchg
loop
std
shlb
hlt
imull
daa
jb
call
insl
fs
mov
in
jae
out
sub
mov
les
sub
decl
cld
movsl
push
outsl
cmp
popa
add
xor
lcall
inc
les
in
xchg
xor
and
inc
test
mov
lcall
imul
push
mov
sti
xchg
outsl
sub
jmp
jg
xchg
movd
icebp
rsm
push
shr
test
xor
add
mov
mov
lods
ret
sbb
daa
fxch
ret
dec
out
lmsw
pusha
or
mov
imul
pop
cmp
andl
pop
das
add
and
pop
jo
adc
outsl
insl
mov
jmp
out
or
in
or
push
stos
stos
inc
fwait
jne
incl
add
fsub
outsb
xchg
push
cs
sub
fwait
int3
sar
ljmp
inc
leave
xchg
jno
je
mov
dec
orl
ss
movsl
jne
adc
ljmp
mov
xchg
lods
jae
outsl
flds
jae
pushl
in
stc
xchg
sbb
daa
sub
sti
push
push
cs
pop
fisttpll
mov
add
lcall
cmp
mov
sub
sbb
mov
int3
xor
decl
push
fsub
pop
pusha
movsl
js
repz
sbb
sub
xlat
loope
mov
xor
bound
lock
in
push
and
inc
idivl
mov
je
jecxz
xchg
xor
mov
mov
sub
scas
cli
mov
jp
cmp
sarb
sub
mov
loopne
sbb
ret
jbe
adc
adc
dec
out
pop
push
lods
push
mov
shll
jg
decl
popa
and
testl
push
fs
int
jg
xchg
incb
push
pop
inc
sahf
test
divb
cmpsb
test
jg
ljmp
orb
test
fstpt
bound
add
fildll
cmpl
xchg
inc
lea
fldt
fnstsw
mov
jge
and
popa
psubd
fdivr
lcall
sub
jle
jno
jecxz
dec
mov
arpl
pop
add
mov
jmp
and
cld
call
mov
jp
fdivp
mov
lret
sarl
jae
ljmp
lock
arpl
pusha
cmp
pop
xchg
in
xchg
mov
mov
leave
inc
mov
or
repz
bound
outsl
mov
cltd
daa
jmp
pop
daa
fiadds
mov
clc
sar
jo
sub
mov
jno
mov
out
dec
xlat
add
hlt
cmpsl
jl
sar
imul
je
push
gs
pop
jbe
fnstenv
test
call
inc
addr16
cmpsb
pop
loopne
out
and
scas
inc
and
cmp
xchg
pushl
test
mov
xchg
mov
and
sbb
orb
push
jg
test
sbb
dec
push
mov
stos
mov
iret
dec
sbb
test
adc
aas
lock
cwtl
push
dec
mov
outsb
sbb
movsb
ljmp
xchg
out
xor
mov
cmp
sbb
nop
ret
ja
dec
mov
out
jge
pusha
jle
ret
inc
pushl
clc
mov
add
adc
add
je
cmp
cs
xchg
outsl
icebp
daa
mov
cmp
hlt
xchg
fiadds
movsl
mov
or
inc
push
in
imul
ret
mov
cmc
add
fdivl
sub
ljmp
testb
cmp
movsl
xor
hlt
jge
pop
arpl
ret
arpl
cli
mov
test
jbe
pusha
dec
sub
lcall
adc
dec
ret
decb
lods
lahf
leave
lcall
aad
dec
mov
js
cmp
xchg
xor
test
pop
mov
out
pop
inc
test
test
ret
inc
push
ds
in
or
or
add
call
je
or
mov
jne
test
fst
vaddsd
int3
out
mov
jb
insl
pop
mov
jg
push
pop
adc
movsl
and
sbb
out
or
xor
das
inc
pop
and
mov
cmp
push
jae
pop
pusha
rcr
mov
clc
call
inc
pop
mov
inc
mov
jle
insb
and
lods
sbbb
mov
mov
mov
add
clc
enter
mov
jnp
xor
cmp
int3
add
outsl
pop
xchg
movl
pop
addr16
cli
mov
dec
out
xchg
cmp
pop
push
das
push
out
xlat
inc
dec
dec
xchg
loopne
cmp
adc
rcl
jle
shrb
ljmp
leave
pop
imul
sub
cmovge
stos
roll
and
call
mov
data16
repnz
mov
cld
pushl
dec
mov
daa
sub
pusha
int3
inc
clc
jb
pushf
decl
stos
jmp
xchg
aad
inc
xchg
mov
out
mov
ljmp
jae
adc
or
mov
cmp
loope
cmp
add
fs
rcrb
jns
mov
rcl
ss
mov
je
xor
inc
fistl
mov
movsb
shr
add
lods
incl
mov
push
in
and
inc
je
aaa
aas
incl
jg
push
mov
jle
or
xchg
clc
das
movb
jp
ljmp
and
push
into
lret
clc
sbb
sub
call
shlb
push
jmp
sbb
rcrb
pop
push
jle
outsb
sub
mov
stos
mov
insb
xchg
inc
decl
and
jbe
rcll
ficompl
idiv
lods
pop
or
mov
lcall
cmp
xchg
pop
in
dec
mov
pop
jae
push
mov
lret
xor
pop
cmp
test
imul
std
jg
std
sub
fsts
lcall
test
stc
jae
aad
push
ljmp
and
sub
sbb
orb
mov
daa
xor
test
mov
mov
sbb
cli
lcall
outsl
push
and
xchg
xor
or
adc
pusha
mov
xor
inc
cld
filds
push
sub
loopne
cld
sahf
sub
xor
ljmp
lahf
adc
leave
xor
test
adc
jb
xchg
or
cwtl
jmp
pop
mov
scas
lods
or
push
fcomps
mov
fcoms
test
sar
jmp
loope
jae
scas
rclb
lret
lds
jno
mov
cmp
cld
call
push
xor
movsl
cld
cmp
sbb
pop
add
push
in
insl
mov
popf
mov
jg
push
int3
mov
lods
push
mov
add
or
mov
adc
std
arpl
mov
and
mov
jg
js
cld
ljmp
aam
xchg
xchg
add
cmc
data16
sti
mov
xor
jecxz
decl
rcrl
jae
mov
pop
push
mov
inc
and
adc
cli
sarb
aas
mov
cmp
arpl
cltd
rcrl
xor
xorb
in
bound
aam
or
pushl
stos
lret
pop
stc
mov
in
sub
sub
lret
pop
push
stos
xlat
add
cld
lcall
push
inc
lods
lret
xchg
cmp
pop
add
icebp
mov
sbb
cltd
jb
push
decl
das
testl
ljmp
lock
movsb
jge
inc
push
jge
repnz
je
and
cmp
mov
mov
mov
or
xor
fcomip
ljmp
jg
adc
int
and
push
fwait
or
xor
add
movsl
jmp
lds
jns
sbb
in
mov
aas
rcr
jecxz
sub
pop
cmc
lcall
loop
arpl
or
xor
pop
ljmp
mov
inc
mov
mov
add
inc
jo
out
cmp
pusha
jmp
pop
insl
mov
lcall
pushw
mov
jno
scas
push
int3
sub
sbb
ljmp
inc
bound
leave
adc
outsb
adc
stos
and
pop
cmpsb
sbb
push
repz
mov
mov
xlat
iret
cs
jb
xchg
adc
arpl
sbb
mov
ljmp
test
push
mov
xchg
scas
xlat
push
sub
jp
int3
adc
incl
out
in
test
stc
aad
leave
xlat
out
push
sbb
add
dec
sub
rolb
push
push
jmp
out
ja
addr16
sbb
inc
jp
lahf
es
pop
inc
pop
js
push
cmc
adc
or
mov
adc
test
cs
push
stos
mov
out
dec
mov
cwtl
sbb
es
jmp
mov
or
cmc
xor
lret
xor
cmc
test
cmp
jmp
sbb
push
in
in
loope
outsl
notb
inc
adc
lret
les
lods
stos
inc
out
mov
ljmp
ljmp
cmp
push
cmp
stos
inc
cmpb
out
inc
add
jg
or
inc
push
cmp
push
push
int3
inc
clc
fsubrl
mov
sbb
cmpsb
pop
inc
stos
add
call
neg
inc
inc
adc
inc
repnz
icebp
mov
jg
daa
inc
out
enter
jecxz
xchg
gs
lret
iret
dec
stos
jp
xchg
test
nop
push
movsb
push
pop
cli
call
xor
ja
or
add
fs
inc
arpl
lcall
test
hlt
into
or
inc
scas
inc
xor
std
filds
xlat
push
push
mov
mov
ja
lcall
stc
lods
xlat
jl
sbb
fsubr
adc
cli
rclb
sbb
incl
xchg
pop
arpl
adc
mov
out
inc
in
outsb
call
jl
mov
in
imull
add
sub
push
cmpsl
call
or
clc
xor
push
outsb
inc
ljmp
cmpb
mov
sbb
lods
fs
incl
mov
data16
xchg
iret
cmp
out
inc
sbb
or
lcall
mov
cmp
xchg
andl
mov
insl
sub
jge
add
call
call
cs
pusha
add
fwait
push
or
xor
dec
adc
and
cwtl
arpl
jnp
decl
fs
loope
jne
jmp
pop
jmp
jecxz,pt
ds
pop
cmp
cmc
decl
jecxz
ret
adc
loope
and
jb
xchg
lcall
std
ljmp
adc
mov
push
jl
and
mov
add
sbb
jg
aaa
shll
fcoml
push
and
adc
cwtl
xor
jl
jbe
mov
cmpsl
ret
push
mov
jo
jecxz
jno
lock
dec
cmp
add
fmuls
push
mov
dec
sbb
push
and
push
leave
xor
cmp
jecxz
mov
jbe
mov
adc
je
adc
cli
aaa
fsubrs
cmp
call
or
arpl
sub
dec
movsl
ss
pushf
push
mov
jnp
xchg
cmp
xchg
pop
jb
pop
test
fwait
adc
or
jmp
loope
mov
shll
xchg
cmp
push
aas
lods
mov
sub
ss
stc
mov
enter
out
pop
gs
jg
jne
js
or
shll
loopne
sub
cmpsb
xor
push
push
pop
or
stos
jmp
adc
arpl
jb
sbb
test
call
scas
mov
mov
das
mov
outsb
adc
hlt
std
test
jp
cltd
xchg
cwtl
jle
ljmp
push
pop
mov
mov
imul
xchg
sbb
movsb
cmpb
movsb
data16
or
pop
adc
or
mov
repz
lcall
pushf
int3
les
fs
mov
lcall
push
pushl
cmp
dec
mov
inc
loope
inc
cld
mov
addr16
and
adc
push
les
xchg
pop
jnp
mov
test
fcmovnbe
stc
les
incl
popa
aam
or
mov
in
aam
mov
out
jb
or
ljmp
push
sbb
xchg
pop
int
xchg
outsl
adc
cli
sti
sub
and
inc
xchg
js
ret
into
test
pop
mov
inc
cmp
ret
dec
decl
inc
sahf
push
fnstsw
fstpt
inc
mov
dec
fnstcw
and
push
push
gs
cmp
cld
dec
dec
decb
movsb
lcall
fisttps
cs
mov
loope
dec
imul
cmp
sti
lds
lcall
lods
pop
inc
roll
arpl
xchg
add
add
pop
push
or
sbb
movsl
push
xchg
mov
pop
push
ljmp
pop
lods
cmp
cmp
cmp
je
adc
ret
outsl
ljmp
and
imul
fnsetpm(287
repnz
bound
ret
or
push
call
aam
adc
cmp
inc
fcmovbe
adc
xchg
stos
pop
inc
sbb
mov
add
lods
out
mov
dec
aam
sub
aad
aad
aam
pop
dec
pop
iret
and
pushl
outsb
pop
cmp
mov
pop
sbb
jo
icebp
mov
jg
and
popa
insb
mov
test
cmp
lret
pop
jbe
mov
jns
jne
pushf
lcall
out
aas
hlt
sub
out
sahf
cmp
adc
mov
aam
addr16
pop
sbb
push
jmp
out
mov
cmc
cmpsb
jns
push
inc
fmull
fnstenv
jecxz
loope
aaa
pop
das
lods
xchg
or
es
and
in
sub
mov
dec
ljmp
xchg
popa
jg
cmpsl
cmp
xchg
es
call
adc
ror
ret
and
int3
sbb
stos
jmp
mov
outsl
std
lcall
pop
popw
dec
or
test
jecxz
jge
sbb
sub
repz
pop
sbb
pop
pop
or
insl
fsubs
mov
shll
adc
mov
push
and
inc
ljmp
cmc
pushl
cmc
setae
fdivl
inc
pop
fdivrp
ja
rcr
dec
push
in
mov
pop
mov
add
and
add
repnz
idiv
mov
repz
sbb
inc
notb
mov
and
das
cld
das
icebp
sahf
lcall
mov
lret
ljmp
mov
or
idiv
jbe
mov
cltd
aas
bnd
sub
sarb
fstpt
inc
mov
adc
cmp
xor
stc
sub
push
and
inc
xchg
jg
ss
ljmp
cmc
jmp
xchg
addb
out
push
inc
out
inc
int3
xlat
sar
lcall
insl
mov
lcall
add
push
and
mov
idiv
xor
cmp
add
mov
pop
out
jb
mov
imul
push
subb
mov
bound
mov
rorb
xchg
ljmp
in
inc
call
lods
inc
shll
inc
pushf
nop
int3
jo
loop
mov
dec
and
inc
sbb
shrb
lds
ret
lcall
dec
stos
and
inc
push
sbb
xor
xchg
jmp
dec
and
incl
addr16
aam
lea
and
jno
sarl
xor
stos
xchg
xchg
xor
aam
push
scas
stos
mov
mov
decl
adcb
lcall
popa
outsl
mov
stos
clc
daa
jge
jno
add
pop
sbb
sarb
shrb
icebp
sub
mov
idiv
lcall
xor
dec
stos
adc
test
into
arpl
xor
inc
sub
cld
fldcw
icebp
add
sbb
xchg
add
popf
repz
dec
xchg
leave
testb
push
loope
clc
mov
pop
push
mov
aam
cmp
mov
xchg
test
incl
insb
in
shl
xor
and
js
pushl
test
mov
inc
mov
xchg
lcall
xor
jae,pt
mov
subb
push
mov
inc
push
daa
cmp
pop
cltd
mov
push
push
adc
sub
jg
mov
mov
xchg
add
or
into
popa
negb
lcall
outsl
pusha
in
psllq
xor
inc
and
lret
xor
es
js
pop
clc
jmp
out
sbb
pushf
mov
std
daa
leave
mov
ror
cld
sar
jg
pop
cli
incl
xchg
xlat
push
lea
bound
fs
jmp
popa
idivl
dec
fstl
cmp
mov
out
inc
enter
cmpsb
push
aam
sbb
mov
sbb
cmc
sub
inc
inc
dec
push
cmp
mov
ss
mov
inc
xor
and
fldenv
or
mov
jmp
divl
outsb
test
pop
iret
mov
xchg
sar
inc
jle
std
pushl
subb
repnz
movb
lods
scas
pop
cmp
adc
xchg
popl
mov
aaa
add
cmp
inc
sbb
scas
lods
stc
and
call
sub
bound
inc
mov
lret
push
out
mov
dec
pop
mov
add
js
sub
inc
sahf
in
loopne
lret
jns
std
cmc
call
call
int3
shlb
cmp
pop
jno
ret
xor
sbb
dec
dec
std
clc
call
add
add
push
or
iret
or
scas
or
inc
lcall
dec
div
iret
and
push
jle
xchg
ja
js
pop
push
dec
adc
decl
rorb
loopne
and
repnz
push
add
gs
xchg
or
push
and
sahf
cmpb
out
scas
in
mov
shrl
sahf
adc
leave
xor
fdivrl
frstor
pusha
dec
or
mov
or
andl
ds
out
pop
pop
dec
pop
and
pop
push
lods
xchg
js
aas
cmp
fstps
mov
ljmp
ljmp
test
outsl
pop
push
lret
fnstenv
sti
mov
push
js
sbb
pop
cli
mov
es
js
jo
dec
dec
adc
fsubrs
jg
lcallw
fidivrl
pop
or
sub
shr
ds
sbb
fs
enter
jne
cmp
lret
push
cmp
ss
aas
push
jl
inc
nop
xorl
cltd
adc
xor
and
sub
loopne
pop
subl
lcall
jle
scas
sbb
jb
pusha
test
ds
clc
pop
push
out
lock
inc
sbb
mov
loopne
addr16
mov
ds
pop
mov
and
mov
mov
ja
jbe
test
or
jg
pushl
pop
clc
cmp
or
push
mov
fs
out
out
jmp
repz
inc
pop
dec
push
fwait
pop
push
out
incl
decl
es
or
mov
xchg
push
cmc
jae
popf
fidivl
mov
mov
je
mov
scas
mov
repnz
inc
icebp
mov
inc
xor
and
rorl
pop
ret
std
adc
mov
gs
sbb
mov
movsl
lahf
add
add
in
mov
push
stos
adc
popa
push
sarb
xchg
pop
movsl
ljmp
inc
add
xchg
lock
push
xchg
fisttpl
lcall
cltd
xor
sub
das
or
xchg
out
scas
dec
fdivrs
cmp
xor
popa
inc
repnz
decl
push
or
ss
shrb
mov
jecxz
clc
icebp
inc
cli
cmp
lds
call
movsl
sahf
lcall
mov
pusha
negl
add
push
push
icebp
bound
insl
inc
in
pop
std
inc
pushl
andb
mov
mov
outsl
adc
fwait
or
stos
sub
insb
mov
sarb
mov
call
jmp
add
js
iret
pop
mov
popf
cmp
out
and
jg
outsl
std
push
sbbl
data16
mov
add
clc
jb
lret
and
push
dec
xchg
sbb
cmpb
pop
dec
jg
adc
lods
xchg
mov
inc
mov
pushf
jmp
sbb
arpl
jg
mov
int
xchg
jecxz
aam
addr16
inc
aaa
xchg
mov
mov
es
inc
aaa
inc
incl
inc
dec
ss
jle
push
or
mov
or
xor
dec
fmuls
pushl
mul
xor
fidivs
test
jl
fldt
int3
lds
jmp
jae
jbe
sti
dec
adc
fstp
imul
xlat
push
push
movsb
mov
xchg
daa
popa
push
add
sbb
xor
sbb
xor
jmp
cmp
jp
inc
mov
sub
rcr
test
sub
inc
cmc
sbb
lods
mov
mov
mov
addb
jmp
add
push
push
adc
dec
cmp
out
mov
jns
inc
xor
aam
sar
std
add
jg
incl
or
or
mov
and
adc
bound
fstl
jl
leave
ljmp
call
filds
fimuls
lahf
jae
mov
scas
and
loopne
jg
mov
add
add
sarl
xlat
ljmp
mov
testb
dec
bound
push
sbb
cmc
inc
inc
xchg
mov
scas
sub
xchg
add
incl
outsl
jnp
cmpb
pop
testl
xchg
add
add
popf
add
sub
push
pushf
mov
lret
std
mov
mov
ljmp
sub
out
call
repz
or
cmpsl
idivl
cmp
mov
and
dec
adc
incl
xor
incb
lret
sahf
push
cltd
test
dec
dec
mov
sub
sti
jns
dec
push
lea
inc
cmp
pusha
movsb
decl
push
ss
xor
fnstsw
prefetchw
or
movsb
mov
add
xchg
adc
testl
mov
imul
jns
jns
fsubrp
push
ficoml
out
out
mov
arpl
scas
fs
ret
pop
inc
cli
lcall
sub
repnz
test
jp
mov
icebp
mov
call
ljmp
cmp
rol
movsb
or
push
mov
and
and
in
fsubs
loopne
pop
xchg
add
sti
dec
int
sub
ljmp
and
sbb
loop
rcrb
repz
jl
pop
leave
inc
mov
pop
xor
cmp
mov
push
jg
hlt
mov
fs
adc
mov
cmp
loopne
jmp
jbe
jmp
ss
or
adc
inc
popfw
add
mov
decl
cmpsl
icebp
outsl
sub
mov
aas
or
mov
ret
xchg
aaa
loope
mov
mov
cmp
rolb
or
fs
clc
call
xchg
idivl
cmp
cmp
rorl
sbb
popa
add
pop
sti
sub
push
iret
dec
and
and
sbb
fildll
popa
movhlps
fnstsw
xlat
jns
fsubs
jne
fs
mov
cmp
xlat
lods
loop
ljmp
scas
in
xchg
jecxz
mov
aas
jb
repnz
call
lahf
mov
xchg
sub
push
inc
in
je
mov
lea
mov
out
in
mov
sbb
or
jmp
cmpl
sub
dec
fldl
pop
inc
pop
fwait
stos
or
and
stos
hlt
incl
inc
sbb
push
int
inc
push
je
jne
pop
ss
mov
lahf
mov
ljmp
cld
icebp
ja
loope
cmc
stos
xchg
in
mov
test
div
fistpll
cmpsl
fucomip
lea
jg
in
inc
pop
daa
lcall
std
push
mov
xchg
jecxz
mov
fisttpl
outsb
loopne
ljmp
outsl
pop
xor
imul
fs
mov
cmp
insb
insl
mov
sarl
sbb
push
hlt
cmpsb
mov
popa
jmp
xchg
and
mov
and
mov
lcall
out
lret
js
or
sbb
jp
mov
ja
icebp
aad
popa
into
push
pop
push
lods
outsb
mov
or
fld1
je
pop
ds
inc
and
mov
js
dec
loope
lcall
je
pop
insb
jb
test
sub
push
mov
mov
or
ds
jo
ret
rcrl
dec
push
test
push
das
inc
pop
das
sub
test
iret
xor
sbb
decl
add
xchg
dec
out
fstpt
lea
and
jg
or
div
sbb
call
loope
stos
mov
or
and
xchg
sar
ljmp
int
push
adc
icebp
orb
mov
jo
push
mov
add
push
shrb
ljmp
cmpsl
or
jmp
add
shll
cmp
jl
mov
mov
push
jmp
mov
rol
cmp
jno
sbb
and
shl
xor
push
or
mov
je
rcll
pushl
leave
xchg
aas
xchg
dec
cmpsb
out
jge
icebp
insb
sub
lods
xor
sbb
scas
mov
loopne
stos
pop
std
call
pop
hlt
cld
cwtl
mov
inc
stos
test
and
or
push
cs
cld
scas
inc
dec
or
mov
aam
repz
fwait
jns
addr16
mov
call
or
pop
imul
mov
xlat
xchg
mov
jmp
push
repnz
push
push
push
jne
pop
call
bound
push
push
jg
mov
cltd
pushf
add
xor
push
bound
xor
and
or
imul
je
out
xchg
cld
incl
push
mov
jns
subl
mov
adc
test
out
scas
jne
push
adc
mov
jb
incl
pop
add
shll
dec
lods
outsb
push
xchg
xor
jo
cmc
push
fists
lcall
xor
or
dec
data16
mov
insl
adc
mov
mov
ljmp
jmp
push
shl
push
sarl
pop
inc
fisubrl
inc
pop
mov
xchg
fs
cmc
jmp
ljmp
movl
push
scas
jge
insl
in
xor
call
out
sub
pop
dec
sub
push
jnp
mov
imul
cmpsb
pusha
rclb
sbb
xchg
fnstsw
pop
or
sub
or
out
push
mov
mov
xchg
xchg
imul
fdivs
add
or
ljmp
enter
xor
mov
inc
push
mov
int3
cs
mov
mov
std
adc
mov
pop
add
sub
call
or
pushf
jmp
mov
push
in
dec
leave
call
mov
fwait
data16
imul
adc
sbb
call
cmp
dec
sbbb
fsubl
mov
notl
andb
cwtl
add
aam
in
out
or
and
std
fisttps
fildl
jnp
sub
jp
imul
incl
xchg
inc
js
push
pop
jno
test
push
fs
call
incl
aad
pop
int
adc
iret
cmpsb
int
mov
and
mov
xor
cmp
mov
add
add
pop
test
fdivrl
fstpt
pop
mov
pop
stos
pop
xchg
xlat
loopne
clc
push
ljmp
aad
inc
cmp
bnd
xchg
adc
mov
incb
mov
xor
cli
lcall
push
and
push
jnp
pop
fstpt
mov
mov
dec
fldenv
mov
cli
stc
inc
sbb
sub
out
mov
push
xchg
into
sti
movb
movsb
ret
jno
lcall
push
aas
pushf
sub
push
fistpll
loopne
mov
mov
aaa
dec
out
das
icebp
mov
mov
inc
jno
push
inc
mov
int
mov
mov
pop
adc
int3
push
mulb
jo
cli
lcall
dec
idivb
jg
ljmp
jae
mov
jo
call
sbb
pop
imul
roll
push
xor
mov
outsb
jl
cmc
in
add
fistpl
shr
subl
cmp
inc
mov
lods
sub
push
sbb
xor
adc
pushl
pop
mov
jle
fs
add
in
lcall
mov
push
outsl
push
inc
in
pop
sub
push
jns
aam
add
add
stc
in
cmp
aam
mov
inc
fldt
and
lods
mov
pop
cltd
fdivl
call
mov
ret
jbe
jo
stos
xlat
mov
jo
les
jp
repz
psrld
adc
lahf
adc
jae
pop
shrb
pop
insl
hlt
aaa
xlat
inc
aaa
scas
enter
mov
fsubl
in
in
or
fldenv
shlb
jle
jg
imul
lods
mov
mov
jle
adcb
enter
fcos
lcall
sarl
jmp
fsubr
pop
or
or
fldt
hlt
inc
js
mov
inc
je
icebp
test
mov
mov
xor
xchg
repnz
xchg
nop
push
notl
std
and
pop
aam
xchg
dec
adc
mov
cmp
test
dec
jg
incl
mov
aad
lds
jmp
arpl
daa
enter
xchg
sub
lods
sub
int3
call
cmpb
cli
jb
push
fwait
push
or
adcl
xor
arpl
cli
test
xor
js
imul
pop
jno
in
decl
adc
jg
push
xchg
movsl
add
int3
pop
sub
pushf
pop
add
test
les
sahf
std
shll
decl
outsl
push
iret
mov
mul
das
ret
dec
sarb
cmp
add
and
ljmp
xchg
stc
xor
mov
aad
push
ja
cmp
push
fucomp
mov
daa
loop
imul
mov
repnz
aas
xlat
mov
jge
lea
cli
push
incl
fdivp
shlb
idivb
xchg
mov
data16
push
scas
mov
dec
stos
ficompl
xchg
lret
jo
mov
loope
in
dec
add
pop
sub
jmp
clc
sbb
xchg
adc
jmp
and
bnd
pop
lret
mov
cmp
mov
clc
sub
push
sub
dec
sbb
ror
push
sbb
xchg
mov
stos
cmc
mov
or
add
stos
mov
mov
and
ljmp
call
or
or
gs
jno
stc
shr
dec
add
shrl
push
in
addr16
out
and
mov
push
xor
movsl
loope
push
cwtl
ds
daa
dec
repnz
cmpsl
mov
mov
fwait
pop
adc
mov
pop
scas
pop
and
lock
dec
and
loope
outsb
movsb
cmc
fwait
movsb
push
adc
xchg
aas
push
repz
pop
lret
jmp
mov
mov
ret
aad
dec
push
lds
in
shrl
sub
inc
pop
stos
or
pushl
pop
mov
pop
mov
shr
mov
les
test
cld
rclb
addr16
pop
xchg
pushl
mov
sahf
jnp
mov
outsb
inc
outsl
movsl
or
lret
sbb
xor
pop
jmp
cmp
xchg
inc
loopne
and
int3
cltd
mov
stos
pop
fdivp
lcall
jmp
xor
pusha
pushf
push
sub
std
xor
mov
mov
fs
dec
jmp
fidivrl
add
fs
mov
dec
push
dec
mov
loopne
leave
ljmp
mov
pop
push
xchg
cmc
jg
adc
ret
mov
push
out
jb
cmc
lods
stos
ljmp
int
addr16
or
xchg
push
das
jnp
mov
rolb
pushf
jbe
call
rcl
and
cmp
inc
jl
repnz
push
loope
movsl
mov
dec
or
pop
cli
jge
jnp
jns
xchg
ret
mov
jle
jne
fwait
cmp
decl
les
lret
push
xchg
imull
and
stc
lret
repz
aaa
cs
lcall
shll
iret
and
mov
call
ror
stos
pop
adc
mov
into
inc
fwait
inc
xor
js
in
sub
outsb
inc
pushl
push
pop
cmp
mov
jp
sarb
outsb
xor
das
aad
cli
icebp
pop
in
mov
or
fsts
clc
in
imul
xor
mov
pop
repnz
inc
bound
mov
hlt
jno
mov
mov
sub
mov
std
jg
in
cmpsl
push
out
dec
mov
push
sbb
int
divb
outsl
in
call
or
filds
aad
mov
and
cli
mov
je
mov
ljmp
fcomp
movsl
aas
and
fisttps
cmp
inc
ficomps
incl
pop
lahf
out
push
inc
ret
xor
shll
pop
loop
sbb
xor
mov
fildll
icebp
sbb
sub
or
test
sarl
cli
inc
pop
std
fwait
adc
jg
pop
aas
and
jl
jno
and
lods
daa
adc
sbb
cmpb
mov
out
fdivl
add
pop
out
mov
mov
pop
sbb
lcall
xor
mov
fbld
inc
insl
lret
sbb
mov
sub
test
and
into
orl
adc
jecxz
mov
or
lods
mov
jg
mov
fcmovnu
dec
sbbl
mov
mov
inc
mov
xchg
mov
jmp
mov
out
sub
pop
pop
mov
out
cmpl
jno
lret
inc
dec
xchg
jns
leave
je
push
or
lock
adc
and
adc
scas
xor
in
adc
das
js
outsb
jmp
jae
hlt
jge
dec
fnsave
ret
out
js
dec
repnz
or
mov
mov
insb
leave
out
pop
data16
lret
push
push
lods
push
cmp
ljmp
xor
xor
outsb
cmp
scas
shlb
dec
inc
fs
jnp
xchg
lret
lcall
xchg
fwait
cltd
and
dec
fidivrs
inc
nop
push
in
jecxz
cwtl
daa
lahf
daa
jecxz
push
inc
inc
fistl
cli
ljmp
and
inc
and
xor
out
dec
jmp
sbb
adc
cs
jb
mov
test
lret
push
inc
mov
pop
mov
fdivrs
jno
push
enter
lcall
sub
scas
push
xor
fnsave
loopne
sbb
xlat
std
xchg
outsl
jg
out
jle
outsl
int3
xor
push
int
mov
and
mov
insb
lock
std
add
mov
sbb
add
nop
mov
sub
sub
sbb
std
ljmp
mov
jg
ret
imul
in
jmp
popl
incl
aam
pop
or
cmpsl
inc
mov
shll
aas
sbb
call
imul
cld
incl
mov
dec
jg
pop
jb
jg
stos
push
sti
inc
inc
imul
mov
jb
cmp
sbb
sbb
bound
or
cmpsl
push
jne
cmp
xchg
xchg
call
lds
push
mov
xor
inc
decl
mov
jg
and
int
lock
and
out
mov
out
sbb
not
cmp
inc
lret
mov
jg
ljmp
xor
repz
aaa
cmpsb
jo
outsl
loop
pop
int
inc
lcall
ds
negl
xor
dec
push
mov
add
cmpsb
cmc
jmp
pop
jo
push
test
xor
push
in
out
cmp
inc
lcall
fstpl
lods
or
push
lahf
addr16
pop
ljmp
cltd
loopne
mov
jle
push
scas
add
cmp
negl
sbb
mov
aam
loopne
and
js
dec
xor
jecxz
adc
adc
andb
and
push
push
mov
repnz
sub
mov
fisttpll
scas
sub
es
aaa
mov
cli
adc
fmull
cs
hlt
cltd
xchg
mov
pop
mov
mov
movsb
sub
movsb
dec
xchg
xor
fnstenv
imul
lcall
loopne
sub
lods
xor
out
adc
std
inc
imul
cmpsl
shl
in
mov
ljmp
jl
int3
sarb
rorb
dec
xchg
stc
pop
dec
adc
pushf
pop
add
incl
xor
pop
sbb
dec
sar
call
call
aas
sub
orl
mov
cmp
ljmp
daa
or
adc
out
add
mov
pop
adc
adc
incl
push
add
xchg
in
fwait
push
leave
sti
sbb
out
cmp
dec
lock
decl
fistps
cmp
ss
faddl
sub
sub
push
bound
lods
mov
dec
mov
sbb
enter
lds
jae
mov
pushl
ficomps
lods
mov
mov
dec
jg
push
jae
loopne
add
cmp
loop
cmp
das
pop
jl
in
lods
dec
pop
and
xchg
in
les
adc
sub
adc
mov
mov
insb
jp
fcmovb
popa
push
inc
pusha
mov
adc
dec
stos
int
insb
mov
in
push
cld
mov
aaa
sub
lcall
sahf
xor
repz
mov
dec
fs
and
movsl
dec
jp
leave
fsub
test
mov
incl
decl
xor
cmp
div
outsb
push
imul
ljmp
xchg
and
jl
push
daa
sub
popf
in
dec
dec
push
ljmp
cmc
movsl
mov
pop
lods
mov
mov
xor
jmp
inc
dec
xchg
sbb
mov
subl
xor
fcoml
mov
scas
dec
jecxz
ss
mov
out
lret
incl
lock
out
cmp
adc
loope
insb
pop
inc
and
arpl
scas
push
xchg
dec
mov
arpl
cmc
cmp
pop
hlt
adc
sbb
xchg
xor
mov
add
shll
pushl
stc
pushf
stos
xchg
scas
mov
xor
and
and
filds
and
clc
iret
lcall
add
mov
push
mov
sub
outsl
add
loopne
fiaddl
cmp
sub
rcll
lods
outsb
ljmp
call
jb
or
mov
sbb
sar
call
ljmp
or
fdiv
in
sbb
pop
jmp
sub
not
js
aad
int
xlat
jg
xchg
gs
cs
add
inc
stc
pop
inc
add
stc
mov
in
ficoms
aam
jl
push
out
sbb
cmpsb
push
pop
lea
test
in
jg
imulb
lock
xor
or
sub
sbb
add
mov
mov
lret
add
mov
cwtl
or
pop
inc
sub
cmp
notb
fstl
sbb
add
xchg
rcrl
push
ljmp
testl
ss
xor
push
call
stos
rolb
insl
je
das
rolb
js
cmp
inc
dec
mov
sbb
jmp
out
jmp
mov
jae
fsub
xor
cmp
fisttps
jle
sbb
repnz
cwtl
movsl
jl
rep
add
adc
ja
fsubrl
mov
sub
std
mov
or
jge
out
inc
or
aas
push
pop
mov
pop
adc
dec
in
add
call
into
test
jnp
push
sub
inc
push
idiv
inc
jb
or
push
popl
cmp
shr
add
arpl
jae
insb
movsb
sbb
decl
inc
call
inc
daa
sub
aaa
sar
jmp
mov
ret
gs
jns
lds
data16
gs
out
mov
jno
add
mov
mov
inc
repz
adc
out
mov
jle
js
jae
fisttpl
push
mov
aas
pop
insb
mov
cs
nop
insb
in
and
pop
out
pushl
inc
scas
xlat
mov
decl
cld
and
movsl
and
dec
jmp
jecxz
notl
ljmp
fdivrs
std
mov
pop
hlt
test
lea
sub
pop
cli
movsb
add
sbb
scas
ss
xchg
mov
std
ror
fscale
dec
popa
fstl
push
mov
incl
out
or
mov
pop
flds
cmpl
mov
fucomip
ljmp
in
cmp
ss
push
rcrb
mulb
inc
push
scas
std
or
scas
icebp
pop
sbb
leave
sbb
lcall
mov
dec
cmp
or
pop
fnstcw
jmp
sbb
popl
mov
in
lcall
sub
ret
fdivr
fdivrp
xchg
ljmp
or
mov
jbe
xchg
mov
jo
cmpsl
and
and
add
lods
sbb
xor
dec
mov
addr16
push
movsl
movsl
call
dec
sahf
pushf
lret
jbe
addr16
and
test
and
pop
sub
mov
movsb
shrl
ds
add
jmp
sbb
or
cmpsl
stos
mov
ror
rcl
mov
sbb
pushl
cmp
das
pop
xor
in
inc
push
addr16
and
sub
sub
dec
push
dec
fistps
dec
popa
movsl
les
inc
pop
imulb
ret
cmp
push
xor
xchg
rcr
lcall
xchg
repz
mov
sub
testl
out
add
pushl
cli
lret
int3
imul
xor
call
out
int3
mov
push
int3
dec
cmpsl
adc
xor
or
std
cmpsl
xchg
shll
ljmp
in
arpl
xor
inc
orb
mov
pop
add
mull
rcll
jns
pop
fidivs
shl
mov
pop
sbb
sub
xor
clc
pop
jae
dec
push
addr16
outsl
shlb
lds
dec
xchg
jne
call
lock
pop
sbb
scas
mov
add
shll
clc
cmc
push
test
push
leave
mov
loope
testb
xchg
aaa
mov
pushl
mov
inc
data16
inc
or
hlt
decl
negl
adc
sub
ja
push
add
xchg
loop
mov
rorb
fs
pop
pusha
cli
in
lods
stc
mov
lcall
cmpsb
sub
lahf
cmpsl
adc
xor
sbb
sti
out
and
out
xchg
sub
adc
dec
std
scas
in
cmp
mov
pop
mov
adc
add
dec
fstl
sbb
or
push
dec
xor
sub
ror
push
loop
dec
push
add
lods
inc
mov
loopne
loopne
or
pushf
ret
scas
pushf
dec
call
clc
in
ret
popf
xor
lret
sar
mov
shll
jno
mov
cmpsb
add
incb
mov
in
inc
mov
stos
jbe
lcall
sub
hlt
xchg
jne
pop
sbb
out
lock
pop
jle
lahf
mov
loope
sub
fiaddl
filds
inc
mov
fstpl
mov
cmp
pop
ljmp
pop
or
movsl
sbb
push
lret
sub
cmp
jb
push
sbb
dec
rorl
fsubr
inc
pop
out
lods
sti
push
and
xor
rorb
in
or
lret
call
sub
sbb
mov
cmc
lock
lcall
mov
mov
inc
mov
lret
dec
sub
call
clc
mov
mov
dec
push
ja
lds
cli
pushl
pop
popa
dec
jne
addb
fildl
movsb
jg
mov
out
in
sbb
sub
rcrb
mov
pop
and
mov
jmp
pop
das
or
pusha
lods
sti
mov
dec
mov
cltd
sub
ljmp
decl
ss
and
pop
or
test
sbb
pushl
fdivrs
or
test
mov
push
icebp
inc
jae
pop
stos
cmp
push
xchg
jle
pushl
push
lcall
int
xorl
sbb
pushl
pop
mov
in
inc
sub
daa
cld
inc
iret
test
jo
outsl
inc
or
push
mov
movsl
pop
ljmp
repz
cmp
mov
aaa
add
adc
mov
sub
lcall
or
imulb
xchg
pop
mov
out
ds
idivb
call
cli
xor
je
and
mov
cmp
adc
dec
das
clc
lret
cmpps
clc
or
xlat
ret
loope
das
xchg
dec
pop
mov
mov
mov
inc
mov
mov
mov
xchg
popa
leave
xchg
clc
fwait
lcall
std
xchg
sub
inc
cmp
or
pop
push
jnp
push
push
xor
shll
scas
test
jbe
sub
sti
cltd
mov
mul
push
stos
pop
arpl
jae
out
hlt
jmp
call
pop
ret
dec
lods
jo
data16
outsb
fcoml
pop
or
dec
inc
ljmp
push
js
jp
pushf
sbb
cli
cmc
mov
mov
pop
cwtl
popa
hlt
inc
mov
nop
dec
sti
push
call
incl
cmp
in
dec
scas
out
outsb
bound
xor
fildl
dec
aas
mov
je
test
lods
lock
pop
sub
lcall
sub
scas
xchg
and
pop
or
sbb
fsin
add
xlat
cwtl
mov
and
aad
clc
dec
repz
cmc
mov
add
sbb
mov
lock
gs
mov
das
add
adc
aam
out
push
add
je
inc
ret
dec
sub
sub
pop
or
aaa
cs
lock
xlat
sub
sub
or
xchg
jl
inc
mov
and
ja
xor
cmp
popa
rorb
and
scas
sub
push
cmp
pop
xchg
nop
movsl
aas
iret
pushl
fstpt
mov
jle
xor
mov
sub
jg
cmc
and
pop
insb
stc
xchg
push
push
fmuls
push
mov
jmp
mov
sahf
mov
fwait
cmpsb
mov
pop
outsb
fmulp
sbb
sbb
cld
jg
lds
cmp
lods
bound
shrb
call
lock
cmc
cwtl
cs
icebp
xor
pop
test
je
clc
stos
push
sar
decl
jbe
imul
push
push
div
or
aad
xlat
cmc
test
mov
sub
pop
addr16
sbb
xor
aas
data16
xlat
adc
fnstenv
outsl
lock
pop
pop
inc
cmp
loop
push
add
fadd
or
inc
mov
mov
sti
out
sbb
shlb
sub
test
lds
sbb
xor
mov
sbb
mov
cmovb
stos
jmp
mov
xor
decl
shll
push
push
sub
popf
loope
or
clc
add
sar
decl
sub
push
aaa
fsubl
arpl
jmp
inc
push
sbb
ret
fistpl
xchg
cli
les
aas
pop
iret
or
fs
xchg
gs
outsb
mov
mov
add
dec
mov
cmpsb
ljmp
pop
and
int3
inc
pusha
test
sub
addr16
cmp
add
outsl
pop
loopne
sub
pop
push
xor
dec
pop
mov
xlat
bound
incl
rep
inc
imul
lahf
pop
ljmp
data16
dec
dec
xchg
incl
inc
in
hlt
or
int
mov
pop
adc
ljmp
iret
xchg
xchg
iret
adc
pop
aaa
inc
mov
dec
ljmp
mov
jns
and
std
lcall
lock
mov
jb
mov
lock
clc
pop
xchg
sbb
xor
in
and
je
jb
out
dec
pop
notl
dec
mov
out
int
fsubrl
cli
push
mov
adc
xor
cli
jnp
cmpsl
xor
iret
in
lahf
and
test
mov
push
std
gs
call
pushl
rolb
pop
inc
mov
lds
in
sub
push
cli
lods
add
jg
ljmp
sub
imul
ss
sbb
incl
pop
rcr
imul
mov
or
scas
push
loop
mov
pushl
or
push
adc
mov
out
ror
or
popf
testb
inc
jg
jp
sub
and
lcall
sbbb
out
movsl
frstor
and
out
adc
inc
xchg
decl
pusha
xchg
mov
push
mov
imul
cmpb
mov
jmp
add
adc
add
mov
ljmp
jne
inc
inc
jp
stos
dec
mov
nop
xor
add
test
add
addr16
or
push
scas
lea
jg
dec
arpl
gs
scas
mov
dec
mov
aas
cmc
loopne
sbb
scas
xchg
xchg
ljmp
xchg
mov
push
cwtl
out
aaa
inc
jmp
je
jle
mov
clc
loope
mov
sub
aas
call
jg
jmp
xchg
jb
shlb
adc
mov
mov
stos
ficoml
mov
rcr
decl
xchg
xor
mov
inc
mov
xor
lret
jmp
int3
adc
ss
mov
pop
jl
push
push
and
rcl
ljmp
push
xor
loopne
pop
je
pop
mov
pushl
mov
mov
mov
mov
fsubl
push
pop
adc
jecxz
jbe
scas
addr16
dec
stos
cmovno
cmp
incl
cmpb
xchg
js
and
loope
pop
jle
shll
ljmp
lea
addl
sbb
cli
add
inc
call
inc
jns
sahf
pop
add
jo
or
pop
fimuls
inc
fdivr
cmp
insl
cmp
jmp
inc
adcl
clc
stos
out
mov
cmc
cmp
push
jmp
jnp
push
adc
adc
sbb
mov
mov
inc
out
inc
jnp
mov
call
adc
rorl
ret
or
cmpsl
or
pushl
ss
in
mov
lods
mov
rcrl
lds
cmpsl
mov
rcrl
and
push
cmp
sbb
add
test
jg
clc
negb
xor
jno
aad
jns
pop
insl
or
sub
mov
icebp
pop
xchg
cmp
inc
sbb
jg
out
push
outsl
push
or
adc
call
mov
inc
adc
imul
sub
mov
pop
decl
xor
xorb
xchg
xlat
cli
xchg
inc
cmp
imul
pop
xor
inc
inc
shrb
xchg
dec
ret
ja
mov
testl
cld
call
inc
push
addl
jae
test
dec
xor
mov
mov
ljmp
sub
jecxz
movsl
repnz
jne
xchg
icebp
mov
daa
sub
mov
clc
ljmp
push
cmp
push
adc
les
mov
dec
cmpsl
jb
mov
sub
dec
fldenv
dec
mov
sahf
mov
out
fistps
popf
pop
outsl
push
pop
loop
iret
push
movsl
stos
insl
dec
jp
fcomp
lret
lret
pop
pop
mov
lods
call
imul
pop
jl
jp
jno
in
mov
sbbb
jne
mov
ds
ficompl
sub
jbe
push
enter
push
icebp
add
hlt
cmp
mov
inc
out
cli
jg
push
jecxz
add
fwait
sbb
rcrb
and
push
lcall
sub
fs
pop
repnz
fsts
fsubrs
lret
cmpsl
loop
jmp
xchg
rcrl
push
pop
mov
sub
xchg
cli
pop
mov
pop
jmp
adc
xchg
dec
lds
hlt
jg
in
ja
jmp
ds
or
and
cmp
pushl
fisttps
mov
jno
out
sarl
rorb
mov
mov
mov
ret
cmp
subl
lret
daa
lods
addb
pop
xchg
out
mov
or
movzwl
adc
rcl
cs
std
popa
push
js
orl
or
dec
sahf
push
cld
push
push
call
ret
push
in
push
addr16
decl
cmp
mov
das
sub
fwait
dec
inc
pusha
mov
scas
xchg
insl
int
xorb
mov
call
push
adc
inc
call
fimuls
add
ret
add
call
aam
xchg
ret
int3
fs
add
stc
push
mov
sti
stos
pushl
mov
in
inc
sbb
adc
aaa
fwait
stc
or
jecxz
cmc
xchg
sub
insb
int3
icebp
sub
rolb
fsubs
sbb
lea
fimull
sbb
pusha
outsl
mov
call
jno
cmp
cmpsl
sbb
orl
imull
hlt
mov
fnstsw
sbb
out
adc
jnp
lahf
aam
jp
jg
sti
pop
loope
std
mov
ret
inc
in
int
call
jle
xchg
inc
push
mov
push
and
pop
mov
fsubs
mov
aam
push
mov
xor
xchg
adc
and
or
or
jg
add
out
in
lret
in
jle
inc
jg
sub
pop
xchg
mov
loope
pop
add
loope
les
hlt
lea
xor
imul
or
xchg
fdivrp
incl
scas
jne
pop
dec
imul
incb
mov
cmp
jg
test
les
jge
incl
xor
jnp
in
in
cmp
ss
decl
fcmovnbe
subl
mov
pop
outsl
or
inc
das
outsl
std
mov
dec
cmovle
pop
cmpsb
push
fsts
pop
aaa
gs
adc
pop
sub
pusha
repz
sub
lahf
test
jno
xlat
adc
ljmp
lods
rep
stos
pop
mov
mov
adc
jo
hlt
or
cmp
incl
xor
push
lret
push
inc
ds
jnp
push
aad
jg
dec
mov
ja
fldt
decl
jmp
test
lods
dec
jae
mov
mov
mov
push
fsubrl
imul
cli
pop
push
popa
bound
xor
jno
ljmp
mov
fs
loopne
sar
xchg
adcb
xor
aad
mov
clc
incl
push
dec
cli
test
mov
add
jo
fwait
pop
in
mov
imulb
in
aad
pop
repnz
outsl
fistpl
push
dec
cmp
mov
aaa
jne
js
inc
xchg
or
add
sub
sbb
mov
outsb
jg
or
es
out
xor
mov
adc
ret
ljmp
stc
les
sar
repz
mov
ret
and
lods
fwait
mov
jnp
inc
stc
cld
das
icebp
ljmp
ljmp
outsl
jecxz
cld
mov
decl
push
cmp
adc
and
ret
test
negb
pop
lea
xlat
call
xor
jmp
out
jns
in
xchg
pop
loop
sub
iret
fiaddl
ljmp
jbe
lret
and
insl
nop
in
pushf
icebp
mov
movsl
mov
outsl
sub
incl
cmpsl
out
sub
xchg
cmpsl
cmc
mov
outsb
cld
lcall
dec
add
in
sbb
aad
in
repz
es
mov
outsb
test
push
dec
movsl
cltd
leave
ljmp
cltd
scas
cmp
sbb
fsubs
cld
xor
arpl
mov
scas
push
or
push
dec
call
fbstp
nop
int
icebp
push
out
ljmp
test
xchg
and
sub
jl
mov
rclb
scas
lret
xor
in
mov
aad
ss
pop
in
aam
adc
xchg
hlt
out
and
push
das
jnp
dec
pop
mov
mov
out
xor
or
sbb
fstl
fistl
cmp
lea
aad
mov
push
in
pop
movsb
loop
call
mov
pop
cld
ret
orb
mov
js
fnstsw
mov
jmp
dec
ror
dec
ret
add
sbb
jl
dec
inc
icebp
call
pop
jae
mov
fwait
push
std
incl
add
mov
cmp
jb
or
mov
lods
popf
aam
popa
call
inc
incl
sbb
test
mov
ljmp
stc
sbb
in
ljmp
data16
or
sti
movsb
push
test
sbb
add
ja
in
push
sahf
and
add
pop
in
mov
push
or
cmc
daa
popf
mov
leave
inc
xor
insl
in
and
cmc
out
call
or
inc
aas
stos
sti
dec
cmp
mov
aas
stc
xchg
xchg
dec
jg
cli
incl
xor
or
das
add
cli
les
gs
pop
jbe
insb
mov
clc
call
ljmp
fwait
jle
xlat
cld
sbb
dec
inc
cmp
jl
das
lock
cmp
out
and
jo
push
xchg
loopne
mov
call
jbe
lods
notl
sbb
xchg
sbb
mov
jnp
iret
cli
xchg
pushl
outsb
out
ljmp
mov
mov
fistps
jp
pushl
test
adc
add
push
pop
sub
in
jecxz
incl
dec
es
daa
adc
jecxz
imul
dec
push
jl
adc
and
imul
in
jl
inc
jg
xchg
sti
and
cli
aas
ds
shr
stc
xchg
sarl
sahf
repnz
cmp
jns
add
mov
mov
lea
adc
jnp
loopne
ds
aaa
jecxz
or
and
dec
hlt
pop
and
xor
out
ljmp
js
fldl
incl
ret
adc
test
cmp
lods
and
pop
loop
daa
lret
cwtl
xchg
incb
jl
inc
lret
das
or
lcall
loopne
jmp
imul
aaa
adc
ud0
pop
lock
lcall
cld
sbb
mov
aad
mov
fadds
aad
push
aas
nop
mov
push
mov
jmp
stc
push
mov
cwtl
lods
or
fstpl
jecxz
dec
std
dec
stos
push
repz
sub
xor
fdivrs
push
jno
les
outsl
neg
mov
add
cmp
xor
and
into
in
inc
ljmp
mov
or
pop
mov
fisubrs
sub
fmul
jmp
test
dec
out
call
pop
push
adc
ja
nop
sbb
inc
jne
fisubrl
jp
leave
dec
dec
rorl
in
int3
imul
pop
mov
decl
adc
leave
test
dec
mov
adc
in
mov
xor
adc
lcall
lret
jg
jo
ljmp
push
ret
push
or
test
xchg
mov
scas
punpckldq
cmp
pop
sbb
aam
decl
jge
adc
aas
jg
movl
xchg
push
shlb
into
pop
mov
cmc
ljmp
add
data16
movsl
jecxz
icebp
jne
cmpsb
movsb
in
pop
rcrb
mov
ljmp
add
dec
jmp
dec
daa
daa
push
mov
add
je
adc
jle
mov
test
add
sub
insb
dec
lcall
pop
push
das
jp
jg
inc
jmp
cmp
in
cmp
cmc
pop
icebp
cmc
mov
aam
std
mov
loope
or
out
cs
adc
popf
fmul
test
and
cmpsl
jbe
dec
mov
adc
filds
push
add
mov
aas
push
mov
inc
shrl
inc
rcl
xchg
out
decl
std
int
jb
ss
xlat
and
pushf
xchg
lds
sub
mov
lods
dec
popa
aad
mov
push
cli
es
ret
inc
mov
adc
mov
ret
push
jo
fisubs
imul
jmp
fsubl
pop
aad
push
jnp
popf
sub
stos
or
dec
test
fsubrs
call
scas
pop
cmp
cmp
inc
dec
lcall
mov
mov
negb
loop
das
xchg
test
pusha
sub
in
lods
add
fiaddl
mov
insl
iret
mov
add
xchg
push
add
cltd
xchg
mov
push
push
pminub
jge
das
iret
jg
sub
repz
in
negl
scas
mov
push
adc
jle
pop
cmpsl
pusha
mov
inc
add
ljmp
sbb
hlt
mov
mov
lock
push
inc
sub
idivb
lahf
ljmp
stos
cld
inc
imulb
lahf
unpcklps
outsb
fmuls
arpl
pop
or
iret
dec
lahf
dec
cmpb
lret
pop
imul
mov
inc
push
add
in
stos
push
lods
add
loop
clc
test
lcall
lea
add
aas
loope
cmp
sbb
paddusb
fbld
jg
stc
adc
sub
negl
adc
cmp
ret
lret
cs
ds
and
cs
fdivrs
cmc
xlat
jg
mov
pop
push
shlb
fs
cmp
loop
ljmp
rdmsr
ror
test
sub
inc
shll
filds
notl
out
movd
jecxz
fistpll
test
dec
xchg
mov
pop
es
xchg
outsl
std
jmp
sub
push
xor
jne
adc
into
pop
mov
call
pusha
clc
ljmp
std
xchg
ss
test
sbb
xlat
icebp
test
dec
scas
dec
rcrb
in
out
lret
and
inc
rcll
cld
jmp
mov
jle
xchg
add
dec
pop
test
test
lcall
adc
xchg
xor
push
pop
int
adc
push
push
filds
sub
enter
outsl
lock
std
lret
repz
pop
jae
fucomp
mov
stc
insb
dec
adc
ljmp
cltd
inc
out
in
ficoms
dec
sbb
xchg
movsb
aad
pusha
jnp
jbe
loop
push
pop
jl
fbld
in
ja
mov
jg
in
fwait
xchg
rol
lahf
push
xor
or
shrl
insb
movsl
xor
cmc
dec
out
jl
ud0
pop
sub
rclb
loope
cmp
mov
jo
scas
das
adc
popa
dec
dec
mov
shl
xor
pushl
scas
pop
popa
arpl
xor
lahf
mov
inc
pop
push
inc
rolb
mov
incl
in
cmp
dec
enter
cmpsb
fildll
adc
sub
sahf
int
orb
incl
ljmp
push
inc
inc
pop
push
jns
popf
hlt
inc
nop
sub
in
jl
add
outsl
inc
les
xor
fisubs
push
jp
outsl
sar
xchg
dec
in
jno
pop
std
push
or
and
push
and
or
mov
daa
sub
xor
inc
mov
cmc
fs
pop
rcr
ss
jge
sbb
stos
pop
idivb
leave
xchg
cmp
push
jno
add
and
movsb
pop
faddl
pop
cmp
dec
inc
or
sub
or
jae
push
out
fldl
jae
add
push
ret
js
outsl
je
call
stc
sbb
mov
jae
mov
rorl
lods
pop
mov
leave
dec
sub
or
push
negb
movsl
ja
leave
pusha
insl
insb
out
mov
jg
clc
stc
filds
add
jo
sub
jge
pop
in
or
ljmp
sub
loopne
add
xchg
inc
add
test
pop
insb
outsb
ljmp
or
mov
fstpl
push
cmp
xrelease
addr16
aam
jmp
loope
js
stc
pop
and
pop
stos
jae
repz
push
cmp
adc
cmpsl
sbb
ja
shll
push
push
jl
pop
pop
sahf
ficomps
jp
test
aaa
cli
xchg
mov
xor
addl
lcall
lods
xor
dec
loop
add
dec
fcomps
negb
inc
jb
add
lds
pusha
jno
push
pushf
test
incl
jmp
mov
rclb
sub
ljmp
xchg
jnp
out
icebp
add
ds
adc
adc
add
mov
lcall
sti
push
xor
clc
ljmp
mov
push
addb
scas
gs
shrl
lcall
mov
push
popa
inc
push
push
add
fwait
std
or
frstor
adc
dec
cmpsl
sbb
pop
iret
call
clc
jg
ret
div
cmp
dec
nop
fstps
bnd
or
mov
mov
clc
aam
sbb
xchg
stos
fwait
jb
outsl
icebp
aaa
ficompl
fcoms
ss
pushf
dec
fs
pushl
push
hlt
push
jmp
cmpsl
cs
sub
sub
icebp
int3
sbb
mov
decl
rolb
or
inc
pop
or
idiv
jg
out
mov
sbb
push
push
shll
sub
push
jl
pushl
orps
sbb
xchg
lret
mov
or
out
add
jb
stos
pushl
loopne
pushf
jnp
je
insl
lds
xor
imul
jno
cwtl
sbb
ss
js
fcmovnb
in
rolb
iret
repnz
pop
shlb
ljmp
icebp
mov
out
xlat
int3
ljmp
call
shlb
fucomip
pop
add
ret
out
icebp
into
repnz
dec
pop
cli
xor
incl
int
pop
sub
js
or
jno
call
loop
push
ja
mov
call
mov
pop
loopne
test
shlb
cmp
std
pop
inc
push
movsl
fscale
ret
pop
addr16
icebp
cmp
and
jns
es
enter
sub
and
clc
mov
fnstsw
add
dec
ss
pop
stos
scas
insl
decl
roll
xchg
mov
mov
ljmp
mov
add
shrl
call
incl
stos
data16
xchg
push
imul
enter
and
inc
aas
cwtl
sub
dec
testb
or
daa
inc
sbb
popf
ds
inc
pop
mov
lcall
hlt
sbb
or
rorl
das
xchg
les
fsubr
and
pop
push
iret
mov
inc
loopne
and
incl
dec
aas
stos
lcall
pandn
cwtl
adc
aad
pusha
mov
dec
and
jns
decl
cld
stos
sbb
or
cltd
idivb
ret
sbb
sbb
scas
enter
inc
jo
ljmp
inc
flds
sub
push
ret
lds
hlt
adc
push
jge
outsl
cld
iret
sbb
dec
pop
jg
pushl
mov
mov
inc
cmc
add
fnstenv
jg
ljmp
jbe
aad
sar
mov
mov
push
gs
nop
xchg
rcr
jmp
fwait
orl
fsubs
into
pop
mov
dec
jbe
mov
ljmp
xor
stos
sbb
insb
rcl
rcrb
outsl
mov
stos
ljmp
xlat
jnp
stos
fwait
ret
loope
cltd
rolb
repz
jne
xchg
scas
dec
xchg
xor
stos
loopne
js
les
mov
incl
rcr
imul
sbb
add
stos
outsb
and
jae
enter
incl
clc
movsb
mull
and
mov
inc
push
sahf
cmp
out
rorl
cld
incl
stc
mov
inc
pop
mov
stos
mov
jbe
xlat
cmp
dec
push
fidivrl
push
jecxz
mov
jnp
sub
decl
xchg
jecxz
insb
inc
addb
xchg
xchg
xchg
les
mov
mov
incl
pushl
or
pop
jo
rcrb
mov
jmp
mov
fidivs
push
js
or
loopne
int3
icebp
xor
mov
and
jno
pop
int3
les
decl
das
xorps
pop
repz
mov
mov
xchg
aaa
ljmp
decl
subb
repnz
aaa
mov
icebp
loopne
xchg
shll
fs
call
lods
sbb
push
std
pop
sbb
aaa
bound
and
cmpsl
arpl
add
jl
mov
lahf
js
lahf
fistl
arpl
xchg
hlt
out
add
adc
mov
test
inc
mov
or
clc
dec
adc
jae
fs
test
jg
pushl
lds
cwtl
jle
div
out
push
daa
addr16
sub
and
call
shll
and
inc
hlt
jb
mov
imul
sbb
mov
cmp
or
mov
mov
mov
std
call
cli
sub
or
and
icebp
in
das
jns
xor
mov
add
jnp
pop
cmp
sbb
sbb
add
lea
lcall
lock
xchg
repnz
jge
fsubl
mov
test
aad
or
inc
cmpsb
stos
lret
adcl
ss
and
ret
cmpsl
test
jmp
adc
incl
shll
push
push
lds
sbb
inc
and
in
and
fnstcw
clc
ljmp
popa
add
lret
ljmp
cmpsb
ljmp
mov
xor
add
jg
repnz
lahf
jp
int3
sti
std
fsin
mov
ljmp
fidivrs
nop
std
data16
insb
mov
dec
push
rclb
pusha
aaa
jmp
cmpsb
mov
fcmovnb
filds
cmpsb
sbb
mov
jmp
test
or
dec
adc
lcall
gs
pop
js
cmp
outsb
lcall
imul
loope
pushl
mov
mov
iret
and
icebp
repz
jnp
pop
cld
call
pop
inc
mov
dec
mov
hlt
movsl
stos
inc
xchg
sbb
lret
call
and
xchg
mov
mov
clc
xchg
sar
ljmp
imul
add
mov
mov
es
mov
lret
das
decl
push
movsl
sti
ljmp
lcall
sbb
ror
mov
pop
pop
lea
mov
inc
adc
mov
int3
or
in
outsb
xor
mov
fcmovne
sub
adc
push
fidivrl
outsl
cmp
ljmp
xchg
jp
js
ljmp
out
loopne
add
bound
and
jbe
mov
fwait
or
xchg
mov
xchg
sub
neg
popf
dec
push
cmp
sub
adc
bound
cmpb
imul
das
xor
mov
xlat
jp
outsb
sarl
mov
sub
jmp
or
data16
xchg
fldpi
nop
bound
sbbl
jg
sub
xchg
mov
jl
push
mov
out
scas
rorl
out
repz
xchg
push
cmpl
shl
stc
out
shrb
cld
push
incl
jno
lock
push
fcoms
add
fcmovnbe
xor
decl
jns
adc
lods
jno
loop
xchg
add
scas
jns
lds
xchg
inc
mov
mov
call
xor
cmpsb
leave
loop
mov
jno
pop
stc
jo
out
or
hlt
call
movsb
popl
pop
loope
in
scas
std
adc
dec
or
pop
ljmp
push
xchg
adc
xchg
mov
mov
notb
xchg
inc
xchg
dec
fbstp
mov
clc
or
cmp
jecxz
arpl
enter
stc
out
aas
inc
outsl
dec
push
mov
ljmp
mov
ret
jb
clc
fadd
out
or
or
sub
cmpb
push
lcall
decl
xchg
gs
fmuls
sub
xchg
lea
inc
ret
shll
incl
test
xlat
subl
mov
in
jmp
or
decl
adc
leave
aas
pop
xor
mov
jnp
mov
push
popa
lock
loop
out
test
sub
mov
outsl
sbb
mov
and
rcrl
fwait
push
idivl
incl
xor
das
and
shl
in
sbb
insb
dec
leave
leave
pushf
xchg
dec
stc
imul
dec
dec
out
mov
jecxz
xchg
stos
enter
pushl
pushf
ja
add
push
xchg
ror
repz
xchg
cmp
mov
sarl
mov
mov
movsl
mov
mov
xchg
popa
and
imul
js
sbb
iret
jp
pop
mov
push
dec
leave
iret
leave
pop
cld
inc
xchg
shl
adc
pop
ljmp
shlb
shrl
xor
adc
jno
pushl
outsl
pop
inc
push
sub
xchg
sub
push
out
xor
outsb
mov
std
rorb
dec
sbbl
test
inc
xchg
in
out
jno
data16
cmpl
lret
shr
aam
std
jne
mov
mov
or
in
pop
sub
xor
jno
jne
test
decl
inc
mov
add
clc
sbb
inc
dec
negl
sbb
mov
enterw
push
pop
arpl
add
in
adc
mov
ljmp
cmpsb
mov
sbb
mov
add
jg
decl
mov
jmp
outsb
mov
xchg
mull
sbb
pop
repz
dec
add
mov
sub
adc
ljmp
icebp
pop
mov
jno
jae
mov
dec
cs
es
ret
jno
ud0
aad
andl
ret
adc
jge
jg
jmp
xorb
sbb
mov
sbb
loop
or
pop
mov
xchg
jg
push
sbb
mov
jae
push
pop
push
dec
inc
dec
loop
lods
rcrb
incl
jl
aas
mov
sar
dec
dec
in
jb
or
clc
mov
fisttpl
jmp
lret
je
sbb
fnstsw
aaa
loope
stos
xlat
xchg
add
test
inc
mov
decl
inc
repz
sub
pop
inc
mov
and
out
push
jne
ljmp
outsl
lds
inc
fwait
add
mov
fnsave
shrb
aas
lds
mov
scas
jns
add
pop
loop
test
aad
xor
sarl
pop
and
ss
loop
pushl
movsb
inc
cmp
or
cltd
sub
and
dec
incl
mov
fwait
sub
pop
jl
stos
mov
push
lock
and
jl
sub
cmp
cmpsb
insl
cmp
mov
arpl
call
cli
decl
mov
scas
addb
inc
cmp
cmp
out
subb
icebp
cltd
jge
in
cmpsb
mov
aas
ja
sbb
add
pop
xor
fidivrl
dec
add
loop
fnsave
adcb
subb
push
aam
jb
lods
adc
sarb
jno
pop
cmpsl
dec
mov
dec
filds
sbb
mulb
ret
faddl
faddl
pusha
xor
fcmovb
jp
aaa
push
iret
xlat
xor
sbb
leave
test
incl
cmc
sbb
enter
pop
jle
ss
dec
aad
pop
faddp
adcl
loopne
jmp
xor
lods
call
push
jp
jle
push
push
cld
inc
scas
adc
std
jl
push
incl
testb
adc
fst
pop
fistps
cmpsl
xchg
mov
mov
cld
leave
imul
call
or
adc
pop
xchg
cwtl
mov
push
std
jg
push
xchg
test
fwait
jg
mov
and
sub
adc
rorb
loopne
lea
out
mov
aaa
pop
out
cmc
add
push
insb
mov
ret
scas
fcomps
lcall
out
ret
cmp
test
mov
adc
loopne
arpl
push
xchg
int
jns
xor
xchg
pop
gs
xor
cmpsl
rcrb
cmc
jg
int3
in
mov
xchg
adc
mov
inc
xor
mov
jmp
inc
jg
sub
es
xchg
jle
pop
cli
out
das
pusha
ret
xchg
mov
dec
mov
dec
sub
xchg
pop
pop
stos
xorb
adc
xlat
adc
mov
jl
outsb
jae
scas
clc
dec
mov
pop
ljmp
outsb
sub
shlb
inc
pop
xchg
fidivl
pop
jbe
repz
scas
sub
call
inc
pop
add
and
sub
push
loopne
adc
push
sub
sbb
lea
cmp
xor
popa
movsb
daa
test
addr16
lcall
dec
mov
mov
add
lds
mov
hlt
int
inc
xor
cmp
aam
jg
ljmp
inc
out
daa
test
popa
jg
stos
clc
call
out
pop
xchg
bound
lcall
lock
lcall
adc
iret
inc
dec
hlt
in
cmp
inc
cmp
jecxz
hlt
fnsave
std
in
out
cltd
daa
or
sub
mov
in
stos
inc
cltd
mov
int
mov
pop
mov
xchg
push
adc
mov
mov
fwait
xor
fbstp
fs
jl
scas
adc
dec
and
fwait
popf
mov
out
add
incl
mov
ret
push
xchg
xor
mov
add
mov
decl
out
pop
mov
cltd
pop
sti
jae
subb
jmp
adcb
pop
sub
imul
or
pop
lds
push
out
cmp
cmp
cwtl
sub
push
decl
cld
arpl
cmp
adc
mov
jno
xchg
aad
pushl
mov
test
sahf
adc
cli
sbb
decl
jmp
dec
out
sub
sbb
lock
arpl
push
jmp
ljmp
stc
adc
fisubrs
sbb
stos
jb
stos
inc
ljmp
jg
jnp
jge
and
push
jl
int3
cmp
leave
mov
aad
cmc
sub
fadd
add
loop
mov
lret
loop
xor
mov
aas
lahf
jns
jbe
inc
das
jge
incl
mov
mov
outsl
dec
adc
jae
push
mov
push
je
pop
call
in
pusha
push
cwtl
out
pop
daa
or
sub
incl
mov
inc
stos
je
enter
or
ret
cmpl
repnz
je
inc
pushf
push
mov
push
hlt
inc
repz
xchg
lea
push
mov
mov
mov
outsl
cld
inc
or
lock
fwait
jp
push
shrl
push
mov
lcall
mov
inc
in
jns
into
add
out
ds
jecxz
in
imul
in
aas
pop
sbb
les
push
jle
les
decl
inc
mov
rcll
into
ret
scas
push
incl
hlt
stc
pop
int
dec
cmpsb
pop
sbb
add
lock
ja
push
inc
das
out
dec
xor
std
jg
les
xor
es
js
scas
mov
call
xor
icebp
jge
add
dec
sub
xor
cmpsl
add
cli
jbe
cmp
jae
jbe
ljmp
ss
mov
push
leave
mov
inc
mov
or
push
ret
jle
es
jmp
in
xchg
jno
fadd
xchg
mov
mov
je
or
add
fbld
cli
mov
lock
mov
imul
fldl
ljmp
inc
shrb
or
test
xor
mov
cmp
fwait
iret
das
mov
cmp
aam
outsb
push
mov
pop
sti
in
mov
incl
mov
adc
mov
test
mov
pop
shl
ljmp
cld
xor
popa
loop
scas
pushf
cmpsb
cmpsb
cmp
int
in
adcb
inc
push
call
call
hlt
insl
adc
leave
outsb
ljmp
adc
arpl
inc
in
cmp
pop
in
jg
out
inc
pushl
das
add
rorl
and
hlt
pop
mov
or
mov
ss
and
mov
cmpsl
mulb
dec
inc
enter
test
add
jns
mov
and
insl
push
cmc
dec
xchg
xchg
jmp
mov
pop
mov
fisubrs
jge
ja
lcall
jns
and
and
mov
mov
test
cmp
mov
stc
inc
push
leave
ss
cmpsl
inc
dec
dec
mov
pop
pop
add
inc
jle
pop
mov
incl
les
out
cs
sbb
imul
lds
cmp
hlt
test
mov
fcmovnbe
mov
mov
sbb
cs
pushl
xorb
dec
xchg
and
fstpt
add
imul
xchg
cmpb
xchg
xchg
adcl
push
dec
enter
add
incl
add
shll
insl
loope
mov
cmp
mov
je
movsl
pop
add
cmp
loope
filds
std
xchg
ret
dec
pop
or
sti
fidivrl
ret
jp
in
or
sub
hlt
pop
ljmp
jnp
daa
scas
aaa
pop
jg
mov
add
xchg
int
xor
sub
mov
sar
lock
jbe
xchg
or
xchg
stos
inc
and
pop
and
iret
xchg
push
cltd
pop
jle
insl
mov
incl
ret
stc
aas
or
aad
jno
lahf
xor
sbb
jecxz
fadds
jecxz
push
arpl
fsubr
jl
add
xchg
mov
sub
or
cmp
mov
fwait
hlt
mov
jo
bound
imul
std
lcall
xor
xor
inc
adc
add
test
adc
mov
pop
sub
sub
call
fcomip
lcall
shll
arpl
mov
push
sub
subb
mov
push
jmp
dec
lcall
push
std
or
and
mov
cmc
xor
icebp
cmp
lcall
stc
or
ds
dec
push
add
dec
fwait
sub
cmpsl
leavew
sub
sti
repz
sbb
inc
ljmp
rorl
addb
push
dec
shll
int
call
stc
inc
push
push
push
xchg
cmp
scas
ret
sub
jne
xor
push
adc
jnp
adc
add
jae
sbb
xchg
mov
jg
mov
or
arpl
shlb
je
ljmp
jmp
cmpsb
cmp
movsb
call
cmp
test
ljmp
cmp
jno
mov
addr16
jecxz
mov
jl
jmp
push
sbb
jbe
ds
pop
loope
aaa
jle
xorb
cmp
jo
hlt
sub
popa
cmp
je
xchg
into
sahf
xor
jg
pop
mov
push
and
mov
xchg
out
mov
ljmp
cli
rorb
jp
adc
call
jp
cs
pushf
jbe
outsb
popf
sbb
inc
lret
push
add
stos
jb
decl
push
adcl
push
jns
pop
loopne
lcall
xchg
or
lcall
jmp
cmp
or
jmp
std
lret
cmp
lds
mov
sub
add
jae
push
push
out
xchg
push
icebp
loopne
cmp
mov
ljmp
decb
cmp
sbb
mov
add
fldenv
push
jg
fbld
stc
stos
ljmp
adc
imulb
shlb
data16
cli
cmc
movsl
lods
hlt
jle
mov
mov
dec
ljmp
sbb
add
xor
lods
xchg
mov
mov
mov
xchg
fs
jg
rcr
int3
testb
mov
dec
je
or
push
pop
adc
inc
and
insb
fistpll
xor
jno
inc
cld
ss
jbe
mov
leave
and
in
decl
aas
cmp
jp
xor
pop
incl
decl
mov
pop
lret
pop
inc
jns
out
xchg
imul
xor
push
repnz
dec
adcb
ljmp
fimuls
lods
jns
mov
xchg
inc
mov
jmp
fstl
lret
pushf
dec
imulb
sbb
inc
not
sub
jmp
scas
cmp
jno
pusha
inc
pop
ljmp
lods
shr
pop
fstl
mov
push
clc
jmp
insb
sbb
mov
popa
in
aam
insl
lods
add
xchg
out
mov
aaa
out
in
outsb
adcb
cmp
loopne
pop
shll
xor
xor
lcall
add
mov
dec
mov
mov
pop
into
addr16
sbb
cmpsb
dec
ljmp
fisttpll
lret
dec
fsubs
mov
and
mov
adc
or
ret
bound
inc
ds
dec
cmpsl
and
xor
sbb
push
or
movsl
je
xchg
add
pop
negb
decl
pushl
shr
lcall
mov
ss
jae
das
add
pop
fstpt
call
jge
inc
and
icebp
adc
xchg
inc
sbbb
xchg
pop
adc
inc
xor
incl
sahf
pop
daa
sahf
dec
cmp
stos
int3
and
add
test
sub
pushl
mov
movsb
push
mov
cmpsb
mov
mov
std
lcall
pop
mov
push
incb
sbb
pop
add
sbb
cmp
cld
push
push
insb
divb
jns
das
aad
pop
pop
in
enter
stos
xchg
imul
dec
jmp
pop
mov
js
fucomip
addr16
dec
data16
jne
dec
fldenv
or
stos
ret
out
fidivrl
lds
faddp
adc
adc
outsl
mov
add
test
stos
dec
jg
inc
daa
jae
ficoms
outsl
divl
ja
je
xor
pop
mov
call
loop
fidivl
mov
inc
pop
movsb
push
pop
adc
xor
aaa
cmpsb
repz
jmp
sbb
cwtl
sbb
enter
in
iret
test
and
hlt
adc
les
stc
xchg
cmc
pushl
cli
aam
out
jl
dec
ud0
lods
add
jae
roll
ljmp
sub
push
xchg
stos
xlat
loop
in
idivb
outsb
push
push
pop
xchg
rcl
push
push
das
push
xchg
mov
sbb
out
mov
stos
lret
mov
mov
mov
jne
sti
mov
pop
in
cs
xor
imul
inc
dec
sbb
push
jp
lods
cmpb
js
cmpsl
lcall
xchg
sbb
loope
xchg
ljmp
adc
jg
inc
cmp
sub
xchg
mov
mov
fdivl
out
adc
outsl
loope
mov
and
in
jle
lock
dec
jno
xor
xor
mov
aas
dec
cwtl
adc
mov
jg
inc
xor
mov
sub
ret
mov
ljmp
mov
adc
push
lcall
mov
sbb
pop
dec
inc
mov
push
in
pop
mov
add
out
aaa
fcoms
mov
sub
pop
sub
adc
sbb
das
jg
incl
push
adc
xor
into
sbb
pop
push
adc
push
dec
xor
test
aam
mov
jecxz
or
cmp
into
lock
push
jo
icebp
ljmp
cmc
mov
xchg
xchg
pushf
jne
sar
arpl
dec
lcall
sarb
mov
lods
cmp
mov
aam
lahf
inc
int3
dec
fmulp
repz
fadds
mov
add
xlat
pop
jge
pushl
cmpsl
ror
and
mov
lock
cld
mov
stos
aam
dec
add
xchg
mov
fiaddl
jb
sub
pop
mov
lahf
sbb
mov
pop
clc
pushl
sbb
mov
lret
lods
and
shlb
mov
jmp
adc
repz
adc
sbb
lcall
cmp
mov
das
pop
enter
lods
pop
or
lcall
mov
jg
fistps
mov
mov
mov
adc
aad
ljmp
jno
cltd
jmp
inc
daa
fisttpl
movsb
add
mov
xlat
js
mov
ljmp
orl
incl
mov
std
adc
sbb
xor
or
push
pop
dec
mov
xchg
not
xchg
sub
xchg
cmpsl
repz
pop
xor
ss
xor
fisttpl
sub
mov
sub
ljmp
mov
test
js
lea
bound
sarb
jecxz
loope
ljmp
add
add
fndisi(8087
xchg
int3
outsb
and
arpl
xor
cld
pop
stc
loope
and
shlb
scas
inc
and
pop
xor
testb
mov
hlt
fidivs
movsl
mov
or
mov
arpl
loope
call
adc
pop
cmc
in
inc
insl
mov
addr16
fwait
pop
lcall
pop
pushf
aaa
jb
adc
mov
mov
insl
sub
call
pop
cli
popf
insl
and
and
sti
aad
int3
inc
sub
push
lahf
add
ljmp
jg
cltd
test
mov
cmp
icebp
cwtl
dec
lds
ss
push
sbb
jmp
int3
lret
in
int3
pop
cmp
std
mov
jnp
push
fidivrs
iret
xor
lret
xchg
mov
aaa
cli
incl
xchg
std
jmp
sti
es
inc
inc
jb
sub
lahf
imul
jmp
pop
xchg
mov
pop
movsl
outsb
lock
in
nop
push
push
mov
mov
pushl
scas
jae
loop
or
mov
jnp
fucomip
ljmp
enter
dec
rcrl
gs
push
add
les
cli
jmp
mov
outsl
dec
mov
mov
pusha
test
in
call
pop
adc
mov
repz
inc
cmp
lods
adc
mov
push
clc
jmp
adc
xchg
lret
pop
frstor
aad
or
mov
movsl
push
jmp
push
mov
sub
pop
adcb
inc
dec
lods
int
or
lods
je
loopne
fbld
rcll
lahf
and
push
sbb
sti
pusha
daa
mov
adc
decl
out
mov
pushf
sbb
xlat
loope
mov
fs
pushl
es
adc
push
jb
cmpsl
sbb
pop
jae
fimull
dec
rcrl
mov
in
lret
sarl
and
push
aaa
dec
pop
push
or
arpl
mov
sbb
fimull
jnp
xchg
nop
loop
andb
lcall
out
aam
imul
cmp
adc
incl
scas
gs
mov
pop
notb
incl
movsb
ret
loope
mov
faddl
ds
push
add
jmp
or
sub
aas
inc
add
sbb
test
pop
clc
add
sub
rol
lods
fistps
int3
jp
push
loop
dec
mov
in
stos
add
mov
les
fsubl
mov
sti
and
jp
dec
imul
ljmp
leave
repnz
mov
push
rorl
add
lcall
mov
lods
int3
rcr
dec
push
pusha
push
filds
push
jge
aas
in
cmp
call
ljmp
fistl
jnp
jno
jb
hlt
ja
pushl
sbb
xchg
pop
mov
dec
sbb
stos
movsb
mov
xchg
test
je
enter
push
out
push
outsl
cs
popa
jb
pop
push
movsb
jmp
insb
out
sahf
inc
out
incl
das
mov
jnp
into
jecxz
push
lds
adc
pop
mov
sbb
jp
mov
out
push
jle
lea
or
xchg
add
ret
fldcw
addr16
aam
mov
jb
cmpsl
mov
andb
adc
clc
adc
loopne
adc
inc
jmp
pushl
out
inc
lea
cmp
jo
push
jg
mov
inc
lret
mov
cmp
mov
fstp
sbbb
clc
ljmp
hlt
jbe
jne
xor
cwtl
das
xchg
and
sbb
decl
cld
push
push
stc
mov
xchg
es
inc
cmp
arpl
pushl
mov
jle,pn
addb
dec
mov
jmp
or
bound
in
aas
hlt
int
mov
int3
outsb
lret
or
ret
leave
stc
fsubrs
inc
xchg
sar
nop
les
xchg
aas
fs
mov
outsl
mov
adc
adc
ljmp
add
xor
hlt
pop
outsb
cmp
sub
or
inc
mov
adc
mov
add
mov
sbb
sub
mov
add
or
test
pop
repnz
mov
cmc
cmp
bnd
mov
jg
sub
mov
sahf
fldt
adc
sbb
add
loopne
les
ss
mov
push
stos
mov
inc
cltd
call
jecxz
or
inc
rorb
mov
leave
sbb
decb
incl
jnp
xchg
mov
inc
xor
iret
jbe
or
ljmp
fcoml
lret
lods
daa
test
mov
imul
pop
call
cmp
pop
cmp
ret
test
push
loope
pop
cli
mov
add
cmc
or
repnz
jg
mov
lret
sarb
mov
cmp
cwtl
mov
fwait
inc
push
jge
push
cmp
fs
mov
dec
aam
pop
jge
xor
nop
pop
pop
jb
mov
mov
jge
decl
dec
pop
inc
lret
sub
daa
cmp
dec
xlat
sbb
xor
daa
fsubrs
call
inc
imul
or
cmpsl
mov
out
inc
jmp
ret
lea
push
pop
shlb
xchg
jge
aaa
pop
cld
fcomps
push
sbb
call
cli
movsl
sti
pop
testl
sbb
sub
imul
icebp
out
faddl
clc
pop
cld
adc
xchg
and
popf
cmpb
jnp
mov
call
mov
popa
inc
mov
cmp
push
mov
mov
pop
add
pushf
mov
xlat
sahf
dec
ds
es
mov
decl
or
inc
imul
sbb
jnp
inc
adc
mov
pushl
aaa
cmp
data16
lcall
xchg
jb
cmp
push
jge
push
sub
movl
in
hlt
idiv
pushl
shlb
repnz
addr16
js
push
sub
ljmp
pop
push
sub
fiaddl
sub
inc
xchg
aam
and
stc
sahf
xorb
idiv
pushl
outsl
nop
push
add
ss
dec
and
inc
sub
inc
lods
jg
shlb
sbb
xchg
inc
jnp
insb
xchg
xlat
jbe
jmp
addr16
cmp
pushf
test
in
loopne
fucomip
dec
call
jmp
out
adc
inc
cwtl
ja,pn
mov
call
clc
pushl
jl
in
aas
mov
hlt
stos
testl
clc
es
sar
int
sub
pushf
cmp
jb
jo
testb
add
or
sarb
xchg
mull
cld
call
xor
les
jg
and
decl
push
test
sbb
lods
pop
fcoml
loopne
icebp
lcall
inc
movb
ljmp
sub
mov
jne
mov
nop
arpl
xor
add
xchg
add
mov
push
jg
and
shlb
test
stos
cmpsl
sbb
or
push
pop
loop
sbb
sbb
leave
pop
mov
incl
mov
movsl
ret
pop
jl
ficoml
gs
mov
jb
dec
int
loop
std
xchg
push
adc
cmp
ljmp
or
insl
ja
xchg
repnz
push
xchg
push
mov
shll
in
push
sub
loop
sarl
jg
jg
ret
push
mov
cltd
fsubl
rcrl
xchg
push
outsl
jnp
roll
cmp
jne
lret
xchg
add
stos
ret
movsl
xchg
inc
in
pusha
inc
cmp
arpl
xlat
xchg
sahf
cmpsl
dec
push
jge
rcrl
pop
mov
imul
iret
cmp
jmp
lret
jne
mov
or
or
add
xchg
lcall
push
fdivs
jbe
stc
ja
hlt
dec
sbb
fiadds
jl
xor
lds
cmp
fsubrs
cli
lods
inc
mov
jl
scas
inc
fsubr
popf
push
push
sub
movntps
movsb
pop
sbb
fsubr
xor
mov
incl
pop
mov
sbb
lock
add
and
ljmp
cmp
jmp
xchg
test
cltd
push
mov
mov
mov
mov
outsl
sbbb
jns
pushf
roll
add
std
call
out
out
repnz
outsb
outsl
insb
ss
stos
and
insb
es
pushl
ror
pop
in
xor
or
pop
push
sbb
ret
ja
mov
loopne
test
popa
sbb
xchg
sub
add
mov
decb
fnsave
push
xchg
cmc
std
dec
xlat
lahf
rolb
incl
push
lahf
jmp
inc
jl
imulb
das
xchg
fidivs
ds
cld
jnp
sub
xchg
pop
jns
mov
pop
decl
andl
in
or
call
out
pushl
and
popf
add
mov
xchg
shl
xchg
daa
fbld
lds
jnp
scas
mov
ljmp
inc
or
mull
sbb
xor
ret
rol
ljmp
mov
fwait
xlat
jmp
mov
das
arpl
in
out
cmpsl
cmp
cld
push
adc
lock
cwtl
push
les
lods
lods
ret
clc
ljmp
pop
and
aas
sub
out
mov
push
pushl
inc
pop
mov
xchg
xchg
mov
dec
adc
and
sub
push
jp
daa
or
mov
add
sub
call
and
enter
outsb
cmp
and
repnz
mov
movsl
pushl
dec
popf
xchg
pop
mov
es
call
ljmp
add
lea
shll
mov
add
adc
sbb
inc
push
xchg
fdivp
mov
add
dec
jno
cmc
push
xchg
xchg
push
ss
decl
pop
or
push
ret
sbbb
ret
sar
das
mov
mov
inc
repnz
mov
ret
hlt
jle
pop
mov
negb
xor
negb
lret
iret
mov
or
mov
mov
jmp
fists
and
xlat
test
push
icebp
push
xchg
xchg
push
jae
outsl
cld
call
jge
xor
jns
mov
sub
cmp
int3
dec
fidivs
ljmp
pop
incl
jecxz
xchg
sub
adc
cmpsb
adc
idivl
test
decl
push
mov
cs
sbb
inc
cld
imul
jg
les
dec
shr
inc
mov
jns
daa
or
mov
pushf
and
cmpsb
cmc
out
sti
lahf
cmpsb
or
lcall
decl
mov
lgs
iret
into
sbb
sahf
stc
xchg
outsl
jmp
pop
push
call
je
pop
cmpsb
imul
mov
inc
ja
decl
jne
or
jo
repnz
out
stos
fucomp
lea
cmp
or
rorb
in
cli
cmc
xor
clc
mov
xor
cmp
inc
push
cs
nop
call
sbb
mov
ficomps
movsl
push
inc
outsb
push
sahf
out
scas
mov
jg
decl
mov
add
pop
loopne
jl
out
jae
mov
test
or
fistps
mov
std
mov
lods
loop
std
push
daa
pop
fucomip
jg
lahf
loop
xchg
int3
les
decl
add
mov
inc
addl
fidivrl
ds
adc
insb
aam
fdivs
ljmp
sti
push
xchg
loope
push
dec
pop
xchg
mov
aas
decl
sbb
jl
mov
loop
sbb
pop
icebp
in
fiaddl
push
mov
mov
mov
adc
popf
aad
mov
fnstcw
mov
addr16
fsubr
xchg
ss
cmpsl
cmp
faddl
push
outsb
adc
mov
ljmp
das
gs
xor
movsw
xor
jns
movsb
or
dec
pop
popf
fisttpl
push
sti
out
cmpsb
lret
mov
add
push
add
inc
mov
adc
xor
rcrb
aas
cwtl
cmp
push
push
lcall
dec
xorb
push
shll
push
push
jmp
lock
push
jmp
imulb
lcall
or
lcall
jb
mov
loopne
pop
pop
push
adc
int
xor
out
push
incl
pop
bound
cltd
rorb
pop
mov
inc
sub
filds
mov
push
decl
push
jbe
out
shlb
push
mov
andb
pop
arpl
in
call
xor
mov
outsl
icebp
jg
or
xchg
jns
jecxz
arpl
or
inc
fs
or
sbb
cld
mov
lahf
std
jg
ret
cli
push
test
cmp
decl
pusha
pop
movsb
jle
dec
jp
xchg
test
int
dec
sar
cmp
imul
inc
icebp
incl
mov
xchg
mov
mov
mov
and
sbb
mov
ljmp
inc
xchg
jnp
lds
arpl
pop
das
enter
sbb
out
decl
shrl
or
test
stos
inc
imul
pushf
jmp
pop
and
pop
cli
lcall
test
and
cmpsb
outsl
xchg
and
jae
sbb
jg
insb
adc
jge
mov
lods
pop
xor
in
fidivrs
lcall
sbb
sbb
push
or
fistpl
pop
mov
ljmp
adc
int
adc
add
test
aad
jb
dec
push
loop
mov
outsl
add
dec
push
mov
shlb
ss
fsubl
jo
dec
cmp
scas
movsb
xor
sbb
outsl
cmpl
outsb
add
cmc
imul
push
sub
xchg
sub
sbb
sti
cmpsb
jns
jp
lret
call
mov
add
jge
or
aas
mov
es
inc
nop
mov
mov
dec
movsl
dec
sub
insl
call
xchg
aaa
and
aas
dec
mov
or
movsl
cmp
in
xor
or
loopne
lock
fcmovnu
jmp
sub
mov
adc
xchg
sahf
imul
pop
orb
sbb
test
lds
mov
dec
or
lcall
jo
push
jge
pop
lcall
mov
das
outsl
push
xchg
add
lcall
dec
insb
add
mov
fdivs
in
lods
jmp
mov
ljmp
popa
rcrl
fstpl
push
mov
cld
inc
test
fistl
xchg
mov
out
or
mov
jo
nop
or
jno
xchg
nop
lods
jg
mov
mov
cmpsl
pop
sbb
and
jae
fst
xchg
jmp
dec
jno
cmp
lret
cmpsb
mov
lock
mov
lahf
and
mov
insl
insb
scas
jl
ficoms
outsl
icebp
ljmp
pushf
lcall
dec
sbb
shll
xchg
incl
call
pop
out
xor
push
push
inc
fildl
inc
test
jg
and
pop
dec
inc
out
xor
or
sub
enter
dec
pusha
clc
sbb
loopne
ljmp
jge
fiadds
cmp
loope
mov
and
xor
ss
jg
pushl
iret
sti
in
insl
mov
cmpsl
inc
jecxz
test
add
add
lods
push
or
jo
mov
iret
adc
dec
outsl
and
lcall
and
adc
in
stc
loop
dec
andl
dec
and
clc
into
pop
adc
idiv
or
out
sbb
test
or
cs
lea
add
mov
sub
mov
orb
jb
test
mov
fnstsw
out
test
scas
mov
adc
cld
jg
xchg
xchg
loopne
jecxz
ret
dec
icebp
xor
cmp
push
lock
idivb
stos
loop
mov
xchg
imul
cmc
pop
pop
sbb
jno
rorb
lret
stos
lds
call
and
imul
add
mov
shll
imul
push
insl
jge
ud0
decl
mov
cli
dec
pusha
mov
sbb
jbe
adc
xchg
xor
sub
inc
punpckhdq
fisubl
incl
mov
sti
clc
int
pop
ljmp
mov
call
decl
xor
int3
inc
fwait
jmp
fisubrl
mov
dec
in
add
fwait
mov
repnz
jg
xor
mov
push
adc
cwtl
fisttps
push
jecxz
das
movsb
mov
xor
pop
mov
jg
jecxz
push
mov
xchg
push
or
cltd
mov
dec
mov
les
mov
cwtl
fnstsw
movsl
ss
nop
ret
test
lahf
mov
lret
scas
dec
pushl
or
pushl
int
xchg
popf
popa
jmp
xorb
cs
pop
clc
dec
xadd
cmp
lods
scas
in
icebp
std
sub
sbb
push
or
std
movsl
mov
jnp
inc
cltd
std
xor
pop
cld
pop
sub
decl
mov
mov
decb
push
jno
inc
sub
test
pop
jo
std
call
fwait
push
push
mov
loope
test
add
scas
daa
xchg
mov
mov
jg
decl
filds
push
in
add
mov
push
mov
in
xchg
jmp
popf
sbb
adcl
sahf
decl
inc
pop
adc
pop
loopne
loop
xchg
insb
mull
loopne
or
jp
dec
out
mov
mov
call
mov
fsubrs
push
and
outsl
decl
popl
push
sbb
mov
inc
jmp
push
mov
pop
push
in
pop
repz
lock
int
iret
clc
js
shll
sar
call
sarb
jmp
push
cmc
mov
sti
into
cmp
mov
dec
and
out
sbb
test
xchg
loope
inc
sub
loope,pn
jae
jno
movsl
decl
movsl
jle
sarb
jmp
push
sbbb
ljmp
orb
cmp
xor
and
sub
call
addr16
xchg
in
xor
aas
cmp
test
dec
mov
jns
push
xchg
divb
jae
fsubrs
push
push
and
dec
mov
mov
dec
stos
xor
movsb
add
in
inc
daa
pop
aaa
es
jl
bnd
popa
lahf
cmp
and
jns
fnsave
dec
faddl
mov
imul
mov
mov
lods
mov
mov
incl
out
mov
xorb
cwtl
jge
fsubs
loopne
push
add
adc
xor
incl
jns
and
sbb
mov
push
sub
xlat
sub
jg
shl
jl
in
incl
icebp
adc
mov
sub
dec
movsl
paddw
cmp
cwtl
aam
stc
mov
call
sub
jnp
and
cld
sarb
mov
mov
inc
mov
or
ds
pop
in
fmulp
lock
fwait
sub
incl
xor
sub
jne
loopne
push
pop
subl
mov
cmp
repnz
add
fdecstp
fs
dec
xchg
mov
cmp
sahf
and
cmp
decl
dec
mov
daa
jge
cmp
out
out
pop
mov
neg
xchg
cltd
lods
incl
popa
repz
in
pushl
pop
sub
and
js
pop
ljmp
jo
push
cwtl
add
dec
fidivs
cli
jnp
loopne
sub
pushl
mov
dec
clc
push
xor
xor
pop
mov
outsb
aam
pop
cld
decl
jnp
adc
mov
add
cmp
mov
je
cltd
add
dec
pop
push
mov
stc
dec
cld
lret
jne
and
cmp
mov
mov
negb
mov
shlb
xchg
outsl
sbb
stos
repnz
lret
add
call
xchg
inc
ss
aas
or
xchg
negl
stos
xchg
jne
push
scas
fidivs
push
loop
pop
mov
pusha
jp
movsl
ret
out
jge
rcr
push
enter
mov
call
test
adc
loopne
jle
mov
cmpsb
push
mov
mov
and
mov
insl
xchg
scas
pusha
js
xchg
shl
imul
pushf
inc
lret
cli
ljmp
xorb
and
out
rcr
mov
sub
cmpb
xchg
pushl
pop
fisubrs
insl
das
repnz
jge
lds
mov
or
push
or
rcr
loop
mov
fwait
add
adc
ret
mov
int3
jmp
in
sub
aaa
daa
mov
jp
mov
mov
pop
pop
inc
cmp
and
shll
xchg
jp
xchg
ljmp
inc
cmp
cmp
sbb
int3
cs
xchg
sbb
movsl
stos
sar
incl
mov
jl
or
negb
mov
loope
push
mov
ljmp
adc
push
orb
ja
adc
dec
add
cmp
and
cmp
rorb
outsb
insl
addr16
in
and
out
out
pushl
fisttpl
or
mov
mov
adc
ljmp
popa
xchg
adc
mov
pop
ret
inc
mov
cltd
mov
push
sar
pushf
std
clc
idiv
cwtl
icebp
inc
mov
sbb
pop
add
pop
jnp
dec
jecxz
jg
pop
les
mov
dec
test
call
outsl
cmp
stos
pop
pop
pusha
mov
mov
add
loope
clc
jg
add
mov
out
out
push
push
inc
and
mov
pusha
bound
fisttps
mov
mov
inc
or
xlat
sbb
cmpsl
loope
jno
and
loop
push
add
ljmp
mov
shrl
ds
sbb
xchg
es
lock
sbbl
add
out
fsubs
fmul
adc
push
adc
mov
je
jb
fsubl
int
fdivs
lds
push
idivl
stos
push
call
test
ret
loope
xor
jne,pt
mov
pop
mov
das
aam
test
mov
mov
inc
and
pop
call
std
push
and
or
mov
mov
sarb
jbe
or
adc
das
hlt
fiadds
xchg
pop
aas
testb
jmp
adc
jg
jmp
mov
adc
movsb
jg
sub
in
in
js
movsl
test
into
pop
shl
mov
sub
rolb
cmpsl
xchg
icebp
sub
movsl
mov
mov
ds
lahf
fcomi
test
popa
sar
adc
xchg
and
ljmp
lock
ljmp
pop
or
xor
test
cli
pushf
imul
lcall
push
mov
js
or
leave
push
popa
mov
sub
cltd
stos
jg
and
fmuls
cmp
xchg
fildl
pushl
sub
jecxz
xor
adc
push
jb
and
mov
outsl
xchg
cltd
int3
pop
aaa
dec
xchg
popa
pop
mov
test
pusha
jnp
mov
jge
adc
rorl
inc
mov
jmp
out
lahf
jne
mov
in
push
inc
movsl
xor
xor
jnp
loopne
adc
mov
sbb
int
add
xchg
ljmp
jg
sbb
aad
or
jl
stos
mulb
mov
dec
insl
lods
sbbb
stos
mov
call
dec
repnz
xchg
inc
rorb
insl
and
fincstp
es
mov
ljmp
cli
movsl
mov
add
aaa
repz
js
mov
divb
aam
push
mov
jmp
cld
mov
outsl
lret
js
loope
cmpb
pop
jle
or
iret
and
jg
decl
push
sarb
stos
mov
dec
pusha
into
adc
shrl
cmp
jno
addb
fildl
lods
inc
or
call
mov
int3
jbe
xchg
lcall
push
fadd
push
shlb
scas
xlat
xchg
sar
mov
xor
andb
dec
rcrl
xor
mov
pop
lods
incb
mov
js
les
pop
mov
scas
mov
idivl
jo
lahf
jp
jmp
mov
sbb
rcr
push
xchg
mov
pop
incl
push
in
repnz
rcrb
fdiv
adc
jle
jo
or
push
rclb
or
mov
ljmp
add
mov
mov
leave
out
cmp
jae
inc
fs
push
cld
call
js
or
mov
jmp
mov
lcall
aaa
cmp
js
push
rorb
mov
pop
outsb
mov
mov
push
mov
sti
pop
scas
outsb
cwtl
or
adc
cltd
fisubrl
insb
mov
filds
outsb
jmp
cmpsb
xchg
and
sbb
mov
pop
test
lcall
lea
mov
cmp
xchg
push
sub
insl
dec
je
dec
sub
aas
cmp
dec
cld
push
push
xorl
sub
mov
inc
stos
and
sub
xrelease
jg
add
icebp
jge
cmpsb
fidivs
inc
popa
push
mov
xor
jno
xchg
nop
xchg
idiv
std
mov
addr16
pop
jge
aas
rorb
xchg
sub
test
pop
and
add
pushl
push
imul
mov
shrb
jle
sub
ljmp
lds
aaa
xchg
sti
adc
mov
mull
mov
jb
stc
scas
hlt
mov
dec
rclb
mov
mov
cld
adc
lods
cld
bound
clc
inc
or
call
xchg
dec
mov
add
mov
or
mov
mov
sbb
inc
dec
in
repnz
imul
mov
outsl
sbb
out
adc
inc
dec
cwtl
xor
mov
scas
faddl
sbb
cwtl
nop
sub
xchg
cmpb
fmul
sbb
jmp
add
scas
shlb
fldl
mov
xchg
roll
pushf
adc
pushl
sub
add
sarl
dec
pop
sbb
das
cld
cli
xor
movsl
pushl
filds
and
adc
add
adc
cmp
lods
in
jbe
or
mov
loopne
ljmp
mov
dec
mov
sub
push
mov
in
fistpll
push
movsb
insl
xlat
adc
sahf
repnz
sbb
mov
sub
movsb
fildll
add
add
xchg
insl
sbb
xchg
mov
std
lcall
cmpsl
pop
xchg
js
sbbb
xchg
cmpsb
lods
in
fsubs
aam
sar
fnstsw
inc
rcr
fisubrs
push
add
add
enter
clc
lcall
loop
push
xor
out
and
into
cwtl
mov
mov
push
or
stos
xor
cwtl
lea
std
rcl
jmp
mov
lds
pop
nop
cs
adc
in
cmc
push
sbb
cmp
gs
inc
pop
inc
mov
outsb
hlt
in
jecxz
mov
cltd
inc
mov
sub
call
fidivrs
ret
xchg
loop
xor
sti
ret
cmp
mov
mov
lret
mov
test
aam
add
push
popf
push
adc
jge
pop
add
in
sub
push
lcall
add
mov
mov
loop
dec
fst
call
mov
inc
jmp
incl
fsubs
pop
test
mov
aaa
jo
scas
lcall
dec
sarl
decl
cltd
ss
mov
in
stos
add
rolb
xchg
and
in
xchg
ljmp
iret
pop
mov
stos
inc
or
pusha
movlps
pop
sub
jp
or
and
bound
outsb
xor
int
jnp
in
ljmp
and
mov
inc
inc
add
mov
das
inc
push
xor
fstl
xchg
sub
ficomps
rol
pusha
cmpsl
push
sbb
bound
mov
jnp
inc
xchg
stc
test
add
dec
pop
loop
fistpll
popf
fwait
pushl
pop
mov
dec
sahf
ss
lret
aaa
pop
and
add
push
mov
insb
add
loop
push
pop
iret
cmp
inc
repz
js
mov
call
scas
mov
mov
or
daa
lds
ljmp
mov
icebp
mov
sti
test
mov
cs
mov
out
pop
add
inc
mov
sbb
adc
aam
mov
je
inc
pop
cmp
inc
andl
decl
mov
mov
loopne
inc
cmp
es
nop
test
cmpsl
ret
mov
test
subl
sar
lcall
pavgb
into
xchg
repz
inc
or
adc
call
inc
inc
into
mov
shll
dec
adc
movsl
je
xchg
mov
in
cld
adc
in
in
jmp
jns
fcmovnb
dec
scas
aaa
fdivrs
fcoms
mov
ljmp
inc
inc
stc
negl
mov
ja
push
cmpsb
pop
ljmp
push
rcr
mov
jmp
std
ss
and
loope
sbb
pop
insb
dec
std
pop
cmp
mov
and
ret
cmc
lcall
cmp
cmp
push
pop
push
int3
push
cmp
adc
sahf
dec
call
pusha
push
cld
enter
dec
push
ss
out
adc
push
imul
neg
ja
push
fdivrs
sbb
clc
pushfw
mov
ja
cli
add
sbb
les
mov
sbb
lods
xchg
xor
xchg
mov
or
sbb
jns
mov
dec
loope
fimuls
xor
mov
call
test
mov
mov
jp
incb
and
cmpsb
push
pop
lcall
dec
push
jg
cmc
jl
je
xchg
les
sbb
push
xor
cmc
lret
cld
stc
push
stos
dec
dec
cmp
lahf
pusha
imul
mov
jb
lods
cwtl
lcall
ljmp
pop
xchg
cli
stos
or
arpl
lcall
lret
subl
mov
adc
sbb
into
cmc
das
mov
subl
lea
jmp
xchg
mov
mov
pushf
out
arpl
jae
pop
cli
dec
jno
jbe
fdivl
outsb
push
in
push
or
cmpsl
movsl
or
sub
jg
clc
mov
and
out
sbbl
pop
clc
xchg
shll
pop
decl
inc
in
xlat
clc
dec
mov
inc
cmpsb
push
je
out
lds
inc
idiv
es
add
sub
call
mov
lds
jmp
jo
xchg
add
inc
mov
in
dec
cs
xchg
pop
std
fidivrl
push
cmp
add
xor
pop
or
jge
xlat
cmpsb
sbb
sti
rcl
inc
mov
push
movsl
data16
repz
call
xchg
lock
push
addr16
jg
decl
add
lods
cli
jge
and
fisubrl
cli
pop
je
lock
incl
dec
in
sbb
dec
mov
pop
jno
mov
xor
scas
jge
jg
mov
and
out
mulb
iret
and
pop
or
jne
cli
sbb
fdivrs
in
cmp
cmp
fistpl
mov
outsl
mov
cld
lcall
jnp
pop
and
push
lods
mov
mov
lds
fcmovb
sbb
add
lcall
sbb
imul
stos
mov
pop
or
lcall
mov
mov
sbb
xor
cwtl
pop
xor
mov
icebp
aam
mov
jne
cmp
jg
arpl
lret
pop
pop
add
pop
lods
and
mov
test
push
pop
push
xor
incl
cmp
sub
xor
pushf
xchg
lods
fcmovb
aaa
xchg
sub
div
xchg
pop
dec
cld
pushl
push
fadd
or
inc
insl
xchg
ret
lods
dec
mov
xchg
call
mov
push
lods
push
inc
cli
loopne
ljmp
rcll
arpl
mov
mov
mov
pop
mov
sub
je
jae
jbe
pop
add
aam
lock
xchg
mov
imul
sbb
adc
adc
cmpsl
xchg
jmp
jno
dec
ja
sbb
push
cld
decl
dec
cmp
pop
dec
scas
pop
add
in
mov
jecxz
xchg
cmp
xlat
sar
mov
cmpsl
jno
shrl
mov
pop
mov
jmp
inc
orl
xchg
sub
cmc
cmp
mov
add
inc
cmpl
inc
sbb
cwtl
enter
int
sub
xor
mov
dec
inc
movsl
call
push
dec
out
imul
and
add
mov
mov
pop
xchg
loope
fcom
divb
aam
xchg
dec
mov
xor
pusha
je
rorb
sahf
pop
push
call
xchg
nop
cmc
mov
popa
adc
ror
lcall
push
stc
pextrw
push
test
jg
ljmp
test
in
dec
xchg
lods
dec
inc
cmc
pop
lret
sarl
pop
xor
dec
dec
sti
daa
lret
inc
lods
cmp
inc
outsb
sti
cmovge
fcoms
lods
adc
out
jl
jnp
adc
inc
out
adc
fldt
in
test
push
adc
aam
mov
outsl
mov
das
bound
int3
jnp
incl
jg
cli
jle
repnz
std
int3
pop
pop
icebp
jnp
nop
pop
ret
cmp
ret
mov
push
pushl
adc
in
movsb
popa
sbb
jnp
pop
jecxz
adc
mov
mov
rorl
addl
mov
std
ljmp
icebp
loop
arpl
mov
outsb
lcall
std
ret
test
jecxz
or
jb
sbbb
ss
pop
outsl
call
xor
iret
iret
cld
decl
cld
or
pop
push
jb
inc
xchg
jmp
adc
pushf
pop
clc
ljmp
and
iret
scas
lods
sub
movsb
fst
mov
sub
pop
adc
imulb
call
cmp
je
adc
adc
or
sti
pop
cwtl
stos
into
lret
loopne
and
inc
fistps
dec
icebp
mov
shl
imul
ljmp
int
xorb
add
mov
pop
stc
cmp
call
pop
lcall
and
mov
xchg
adc
imul
add
mov
cmc
stos
sub
fisttps
icebp
das
js
lret
dec
add
pop
jmp
es
addl
andl
push
ret
daa
jge
fisttpl
mul
pop
clc
mov
jle
ja
ja
sbb
icebp
ljmp
jmp
das
sar
push
aaa
lds
sahf
hlt
sub
lods
jmp
popa
mov
outsl
cmpsb
into
mov
sar
aaa
or
pop
inc
out
repnz
into
jbe
outsb
ret
rorl
sub
add
or
jno
adc
jmp
lcall
or
mov
pushf
mov
mov
push
in
cvttps2pi
clc
add
cmc
jg
and
mov
lret
jl
pusha
call
cli
pushl
mov
rcl
mov
bound
xchg
cmpsl
loop
jmp
in
fs
sbb
in
out
int3
out
scas
cmp
push
sub
push
jmp
cmp
push
sbb
lock
xchg
cs
mov
jg
xchg
es
loop
decl
outsb
fndisi(8087
cmp
xor
lock
adc
addr16
lods
ljmp
std
fists
cld
sbb
dec
shll
punpckhdq
shl
inc
das
dec
xchg
clc
pushl
adc
dec
sub
push
aam
in
adcb
fidivrl
cmp
sub
nop
jge
test
incl
lods
shlb
fadd
shl
loop
roll
lock
pop
test
jne
stos
jb
repz
push
cmp
lcall
jecxz
cmpsl
mov
int3
cld
and
add
pop
dec
sbb
shlb
sub
notl
mov
arpl
lahf
xchg
inc
mov
mov
dec
arpl
decl
cltd
inc
aam
clc
or
xchg
sti
icebp
inc
sub
mov
lcall
and
test
jp
ret
add
inc
cmp
cmp
scas
mov
ljmp
lds
mov
shrl
adc
std
dec
aas
addr16
int3
in
mov
mov
cmpsb
popa
jnp
mov
popa
and
stos
push
enter
rorb
xchg
push
mov
incl
mov
std
loope
push
push
pusha
pop
cli
aaa
stos
popf
addl
jne
inc
shrl
sahf
test
loope
pushf
mov
cmc
adc
ss
fsub
mov
sar
lods
pop
xchg
aaa
test
out
or
xchg
pop
adc
jg
cmpsl
fwait
xor
push
scas
xor
clc
loope
mov
call
and
jmp
sbb
std
inc
push
lods
enter
test
lea
or
cmp
imulb
fisubl
fisttpl
mov
mov
gs
pop
pushf
mov
sbb
pushf
mov
jne
sti
jmp
rcll
xchg
push
lret
push
pop
dec
or
xor
cltd
cmpsl
xchg
mov
lea
xchg
jl
lret
push
ja
inc
add
inc
filds
dec
push
dec
sub
mov
sbb
call
xor
data16
xor
pop
mov
and
lret
in
dec
jnp
iret
jmp
outsl
mov
sub
adc
lahf
movsl
mov
movsl
out
shlb
jmp
cld
and
dec
push
icebp
addr16
push
in
loop
xchg
movsl
mov
call
ret
aad
popa
and
xor
dec
xor
cli
cmp
cmp
mov
push
out
arpl
inc
outsl
jbe
push
jae
mov
aad
fistps
fcoml
push
and
stos
xlat
dec
xchg
push
pop
sub
int3
js
fwait
lcall
xchg
push
xor
lds
inc
rcll
popl
ds
in
inc
popf
inc
shrl
cmc
jmp
inc
fs
mov
fcomip
adc
outsb
mov
aaa
in
stc
aam
lock
push
outsl
xchg
cli
insb
fcmovu
loope
nop
out
sub
ror
clc
loope
sub
sbb
cli
pop
ljmp
fnstsw
lret
sbb
fcmovnb
or
jl
add
negl
pushl
cli
push
inc
push
das
push
and
add
mov
jne
ss
in
dec
mov
ficoml
cld
std
jae
mov
jnp
mov
dec
roll
xchg
add
lcall
push
mov
mov
lea
aaa
jmp
movsb
ror
push
mov
push
mov
test
inc
jecxz
lcall
call
clc
dec
mov
pop
inc
fsubrs
cwtl
js
push
push
and
hlt
aaa
arpl
fisubrl
hlt
iret
ds
sub
movsb
ja
js
jp
in
decl
stos
aad
rorb
insl
jmp
imul
stos
ret
sti
push
cli
inc
push
cmp
call
add
push
test
mov
push
mov
ja
mov
or
xchg
lret
or
jle
aas
add
dec
mov
repnz
push
adc
call
sub
bound
add
ds
cli
cmp
dec
pop
and
leave
dec
stos
sbb
mov
sbb
ds
loopne
mov
data16
mov
fisttpll
mov
fmuls
mov
fwait
in
rclb
xchg
push
fdivrl
sub
pop
push
iret
pop
ficomps
mov
xchg
jmp
push
cmp
mov
loop
in
xchg
jbe
sbb
mov
test
sub
sbb
inc
or
inc
cmp
sub
ret
sbb
cmp
lcall
into
jmp
jae
sbb
mov
xchg
dec
mov
pop
add
pop
mov
dec
jge
add
movsl
jmp
mov
decl
pop
cmc
or
push
cmp
pop
fadds
ljmp
decl
fstpl
push
je
and
pop
outsb
test
out
add
add
sbb
das
pop
push
adc
push
out
das
inc
mov
or
push
jbe
jns
cmp
test
inc
jge
rclb
jnp
aas
inc
decl
cli
xchg
xor
scas
mov
xlat
mov
filds
sbb
jmp
neg
jmp
push
mov
cmp
loopne
sub
in
shrl
mov
push
mov
mov
adc
xor
push
in
popa
inc
xchg
adc
adc
dec
xchg
test
mov
popf
aaa
lock
std
fucomip
es
sbb
aam
or
cs
imul
das
or
test
inc
dec
sbbb
leave
orb
insl
ret
les
clc
xchg
mov
movsb
mov
ds
or
mov
mov
mov
call
sbb
scas
xor
ja
std
insb
std
rcll
sti
jae
test
hlt
test
dec
pop
dec
lret
jno
jno
sub
cli
mov
inc
repnz
sub
jg
cmp
cld
and
enter
xor
add
loop
sub
xor
in
or
dec
jne
dec
das
cmp
and
sub
addr16
stos
push
fwait
push
clc
cmpsb
lret
push
movsb
ljmp
sub
call
loopne
ret
outsl
jle
mov
ret
hlt
test
xchg
and
mov
ljmp
std
int
xchg
loop
or
push
add
int3
sti
sahf
ds
lea
incl
push
lahf
push
mov
cmp
and
in
inc
fsubr
sub
stos
cmp
xchg
rcl
push
out
fimuls
xchg
jae
cmp
xor
inc
sahf
or
inc
outsl
and
scas
scas
push
insl
jecxz
mov
mov
popl
aaa
inc
test
add
xchg
in
sub
pop
incl
mov
push
aaa
ffree
pcmpgtw
xchg
push
jbe
sbb
add
or
sub
clc
mov
inc
in
js
or
mov
jmp
cmp
popf
in
mov
leave
ss
aam
fscale
pushl
clc
jmp
or
test
cmp
push
or
das
jae
into
out
negl
mov
rcll
jae
jb
jb
dec
test
decl
std
inc
push
jb
std
mov
pop
in
sahf
xchg
push
dec
loop
jmp
and
add
sbb
jecxz
ret
fcomi
and
xor
adc
je
inc
inc
push
icebp
add
ljmp
scas
fucom
les
xor
cmp
mov
cmp
lods
int
sub
cmp
nop
dec
cmp
sbb
test
sub
and
push
int
outsl
test
xor
mov
jno
mov
std
repz
cmc
sbb
mov
imul
icebp
mov
add
dec
add
mov
sub
xor
call
fs
push
cs
sub
xchg
das
cltd
test
xchg
xchg
and
adc
push
pop
sub
mov
es
and
push
clc
inc
push
ja
dec
xorl
dec
mov
test
fstpt
sbb
cmp
in
inc
ret
adc
mov
ljmp
movsb
jmp
filds
in
in
in
adc
cwtd
or
dec
int3
popl
nop
test
sub
call
pusha
dec
jle
stc
sub
mov
mov
jg
pop
sub
loopne,pt
negb
mov
jb
movsb
inc
or
lcall
sbb
rcl
inc
loop
imul
adc
aas
lahf
mov
push
sub
fprem1
decl
pop
dec
dec
pop
lea
roll
dec
in
out
and
mov
mov
aaa
daa
dec
movsl
bound
shll
cli
decl
cmc
pop
mov
jb
movsl
mov
adc
bound
lcall
push
mov
popa
int3
fmuls
fs
sbb
loopne
add
lods
in
and
xchg
dec
mov
pusha
push
int
fsubrs
sub
ss
repnz
mov
iret
xchg
sarl
arpl
lcall
cmp
inc
pop
icebp
jb
mov
jge
ret
dec
scas
iret
mov
jg
jecxz
fdivl
jge
push
mov
fstpl
cmp
xor
incl
ret
sub
push
mov
jno
gs
sbb
xchg
dec
xor
cld
inc
mov
xchg
sbb
loope
pop
pop
cli
adc
push
sub
hlt
xor
dec
lret
sub
push
fildl
lcall
add
out
dec
scas
or
ds
das
jo
jmp
orl
fsubrl
sub
sub
adc
inc
pop
out
xor
cs
mov
lcall
add
pop
or
push
jp
out
jb
imull
mov
lods
movsl
scas
nop
or
and
sub
outsl
push
inc
les
jg
sub
pop
test
xor
xor
mov
add
ljmp
mov
cltd
int3
scas
fistl
jmp
loopne
repz
add
incl
pop
sub
pop
iret
test
bound
fcmovnb
mov
inc
ret
fs
call
xlat
sub
js
aaa
call
ljmp
jns
mov
mov
cmc
and
dec
sub
xor
pop
ja
xor
jge
loope
test
xchg
sub
les
mov
and
ljmp
into
dec
sarl
sbb
mov
mov
xor
add
inc
pop
lock
mov
testl
pop
push
mov
mov
pop
das
jae
cmp
movsl
ljmp
or
inc
inc
outsb
out
inc
mov
add
addr16
dec
in
cs
mov
mov
adc
and
push
dec
test
xchg
stos
pop
ljmp
cmpsb
sbb
push
clc
or
imul
mov
mov
stos
mov
jns
inc
push
and
mov
pop
mov
push
filds
push
pusha
lret
dec
pop
mov
xor
test
call
loopne
add
dec
lcall
xchg
xchg
inc
pop
scas
xchg
mov
decl
rcr
incb
sub
fwait
inc
and
scas
and
pop
sti
jg
or
pop
sbb
and
mov
jle
lret
xchg
sub
ffree
cmpsl
sub
pushl
out
push
es
stc
inc
addr16
rcrl
push
push
addr16
jl
sub
lret
aam
cld
lcall
dec
jmp
jge
mov
inc
xor
test
sub
mov
movsb
jb
in
mov
mov
jbe
pop
out
ljmp
popa
dec
andl
out
push
repnz
push
dec
or
jg
mov
jmp
shlb
sbb
ljmp
push
or
push
cwtl
popf
dec
fldt
mov
lea
cmp
pop
repz
jns
and
incl
xchg
mov
shrb
addr16
ljmp
adc
jb
or
pop
mov
push
data16
dec
sarl
sbb
mov
pop
pusha
or
dec
pushl
stos
call
aad
mov
lock
mov
jge
divb
adc
bound
ffree
mov
stos
or
call
cltd
add
mov
into
mov
stos
call
rolb
fwait
call
sbb
loopew
sub
insl
frstpm(287
and
sbb
ljmp
incl
mov
lea
stos
mov
xchg
mov
iret
or
je
sbb
xor
shlb
sub
mov
nop
shl
mov
jo
pop
incb
push
lcall
fwait
sbb
jo
lock
call
push
sti
out
ficoms
ljmp
xor
ret
sbb
sahf
ljmp
popf
movsb
adcb
divl
push
dec
lret
pop
push
xor
rcr
sbb
lcall
and
je
loope
bound
adc
pushl
test
dec
std
fdivs
sub
or
aam
hlt
aaa
cli
decl
adc
test
daa
das
mov
mov
xchg
mov
sbb
mov
sbb
das
pop
push
adc
shrl
jo
or
out
push
repz
jne
ror
rcrb
decl
inc
pop
loopne
pop
push
mov
loopne
inc
repz
inc
ljmp
and
call
xlat
mov
enter
pop
cmpl
js
aaa
das
add
addr16
jbe
sub
and
incl
daa
loopne
dec
lea
sbb
fistps
data16
enter
frstor
cmc
fildl
ljmp
je
cs
jg
jecxz
xor
daa
mov
or
jb
fsts
sti
sub
in
push
adc
mov
sbb
push
rol
xor
push
sahf
mov
pop
sub
cmc
ljmp
or
int
push
hlt
sbb
jae
shlb
ret
push
fldenv
not
aam
sub
jb
movsb
or
push
std
sbb
ljmp
rorb
scas
iret
pushf
ret
pushf
icebp
pop
mov
pop
dec
les
jno
or
rorb
sub
inc
in
sbb
in
lds
ljmp
xchg
adc
xor
andb
loop
ss
inc
das
outsb
faddl
xchg
aas
xchg
aad
and
cld
decl
enter
adc
cltd
push
ds
dec
sub
out
test
cli
out
jbe
mov
jae
xorb
xchg
aas
inc
mov
and
sub
cli
arpl
cmp
das
je
sub
jge
pop
jg
inc
lods
adc
xchg
mov
sbb
xchg
or
lret
sub
ljmp
or
pop
das
jb
xchg
das
inc
in
cld
adc
push
or
jg
daa
lods
subl
mov
mov
jb
dec
xor
cwtl
mov
cmpsl
sbb
cmp
lcall
ret
jnp
xchg
add
xor
outsb
mov
mov
mov
push
in
or
sbb
arpl
out
jnp
popa
mov
mov
jne
sub
mov
filds
jmp
sbb
popa
cmp
cld
divl
pushl
into
ss
or
mov
xlat
mov
in
xor
dec
push
cmp
cmp
decb
or
mov
repnz
mov
jmp
sbb
lds
ss
ja
leave
and
xchg
push
inc
or
inc
fcoms
cld
pop
push
in
sub
loopne
stc
cmpsl
mov
lret
dec
incl
imul
cmp
add
loop
or
call
loopne
jl
gs
sub
std
imul
xchg
ret
pushf
jg
hlt
pop
clc
inc
cmp
hlt
add
sub
lea
outsb
jae
call
jns
mov
pushl
movsb
mov
push
movsb
mull
rorb
xor
sbb
mov
repz
lahf
fmuls
fwait
clc
or
ljmp
inc
clc
je
shrb
inc
jmp
je
pop
mov
adc
pop
cld
pushl
cmc
or
outsl
shlb
sub
lock
fcompl
xor
incl
orb
pop
fdivrp
cmp
jmp
or
imul
test
mov
push
add
push
jmp
into
xor
xor
bound
adc
add
push
sbb
in
sub
clc
stc
jecxz
clc
pop
loopne
cmpb
inc
out
shrb
fwait
das
dec
je
enter
mov
mov
push
jmp
fcmovbe
mov
outsb
jl
lret
movsb
xor
xor
out
lods
sbb
fisttpll
iret
ret
ljmp
jmp
repnz
add
cmpsl
hlt
stc
or
sbb
in
fcompl
ljmp
arpl
ret
or
sarb
fsubrl
data16
icebp
pop
cld
push
scas
mov
rol
pop
mov
mov
push
and
loop
inc
iret
mov
xchg
incl
cltd
std
dec
cmp
adc
and
pop
test
incl
jecxz
sub
repz
adc
cmp
adc
addl
inc
aas
jmp
inc
outsl
lock
cld
add
lods
in
add
push
pop
lcall
mov
add
xlat
add
test
inc
fs
cmp
call
mov
xchg
push
push
mul
outsb
repz
sub
fstpl
inc
sbb
jno
call
fstp
and
fidivrs
mov
iret
jp
mov
push
stos
dec
dec
mov
pushf
jp
lcall
mov
cmp
xor
xor
push
mov
es
dec
pushl
cmpsl
push
insb
popa
adcl
add
rclb
xlat
enter
dec
ja
pusha
mov
cmp
int
and
aad
jmp
jno
stc
mov
dec
pop
loop
inc
dec
mov
inc
cwtl
mov
pusha
js
idivb
mov
push
inc
enter
into
sub
sub
and
loop
mov
jnp
and
ljmp
inc
jne
cmp
insb
shll
std
fdivrs
push
clc
call
out
sub
sahf
call
or
iret
push
pushf
jge
mov
std
call
int
jne
leave
andl
xor
lcall
push
push
cwtl
jecxz
jne
mov
jg
or
push
clc
jmp
mov
pop
mov
adc
in
aas
out
pushl
popf
dec
xor
or
pushf
stos
mov
xchg
out
and
push
push
cld
fwait
push
sub
pusha
lahf
adc
pop
cmp
add
jg
push
movsb
loop
daa
inc
pop
jns
call
repz
jmp
ror
lcall
inc
and
push
sarl
imul
or
ljmp
xor
movsb
lods
cwtl
cmp
aad
add
fidivs
jg
pushl
dec
dec
xor
lahf
mov
fistpl
jns
pop
jns
pop
ret
ret
std
mov
int
jecxz
pop
and
in
ljmp
or
mov
mov
insl
rorb
mov
test
lcall
cmpsb
adc
mov
mov
lods
sub
lahf
imul
je
aam
addb
dec
push
dec
movsb
jns
divl
jg
sbb
jecxz
adc
mov
inc
addb
inc
jl
loop
jg
das
cmp
das
mov
mov
mov
pop
sub
cmp
jnp
scas
cli
sbb
xchg
mov
xchg
adc
ljmp
call
pop
jae
subb
push
dec
pop
sub
push
sub
xchg
imul
fs
and
outsl
cld
clc
sbb
mov
push
rolb
icebp
decl
pop
addl
arpl
xchg
shrb
decl
dec
jge
pop
push
int
dec
iret
jae
into
jp
push
clc
int3
and
fdivs
xor
mov
jns
add
popf
inc
sbb
inc
incl
add
test
das
or
cmpsb
cld
pusha
cwtl
aaa
or
mov
add
jp
shll
cli
dec
push
mov
mov
cmp
repz
std
outsb
inc
cmp
imul
lcall
fistl
icebp
push
dec
sbb
stos
jmp
add
xchg
xchg
mov
adc
push
sbbb
jp
ret
mov
sbb
xchg
xchg
fwait
in
xor
jp
mov
xchg
hlt
cmp
lcall
push
aas
cmc
stos
inc
jg
iret
xchg
pusha
and
pop
in
mov
ss
in
incb
adcb
inc
mov
bound
mov
decl
pop
cmpsb
loope
and
and
xchg
cltd
pop
jg
mov
dec
add
sbb
ja
pop
loop
imul
inc
mov
jmp
insl
jge
mov
cli
outsb
mull
imul
loope
sahf
ljmp
gs
pushf
js
ss
mov
or
pop
ljmp
xorb
outsb
stos
jno
call
xchg
push
push
scas
inc
lock
fnstenv
test
imull
bound
add
imul
leave
incl
pop
inc
data16
shll
sub
cmc
das
icebp
incl
pop
xlat
or
rolb
mov
ljmp
dec
les
or
or
cmpsl
lea
inc
movsl
cmp
ljmp
aam
in
aas
jae
sub
rolb
test
jg
aaa
clc
or
fnstsw
pop
sar
pop
pushf
dec
nop
xchg
sar
clc
pop
dec
mov
jo
sti
leave
lods
lock
ja
jns
lea
xor
fucomip
jmp
pop
mov
lcall
sub
iret
xor
gs
mov
mov
lods
xchg
and
sub
cmp
jb
cli
pop
jmp
jge
push
jb
jmp
inc
pop
fstp
jg
fbld
mov
ljmp
cmp
push
inc
push
mov
jno
push
mov
push
jg
jno
out
sub
xlat
xor
rorl
push
inc
jae
xor
inc
pushf
pop
mov
jmp
mov
in
lods
lods
cmp
mov
stc
sub
iret
xchg
aam
jge
movb
fbstp
test
dec
xchg
jle
push
jecxz
jnp
cmp
lcall
push
mov
call
xchg
pop
mov
sbb
xor
lahf
scas
stos
in
lods
inc
xchg
leave
xchg
in
jmp
pop
decb
push
lea
out
fs
ja
mov
xchg
and
jg
das
inc
lods
inc
test
jl
sub
leave
daa
mov
pop
cs
testl
cli
incl
mov
mov
aad
dec
pop
cmp
mov
cmpsb
cli
push
arpl
call
mov
fwait
dec
mov
pop
jmp
pop
loopne
outsb
add
pop
xorl
loop
icebp
ljmp
and
lahf
xor
loop
test
xor
xchg
xchg
lcall
aaa
mov
fstpl
aad
xlat
in
or
aaa
xlat
lock
push
aaa
jecxz
jbe
or
out
push
hlt
cld
mov
xchg
xlat
bound
test
call
push
add
lcall
lcall
pop
cmp
hlt
pop
push
inc
jb
ficoms
jge
ss
push
arpl
jl
ljmp
push
push
push
sbb
xor
cmc
fcoml
dec
orl
aad
mov
imul
push
jae
test
adc
cld
add
aad
dec
loop
decl
inc
push
jns
shrl
les
icebp
adc
enter
inc
decl
ds
ss
pop
mov
push
cwtl
inc
imul
dec
add
lea
mov
sub
and
loop
jns
jecxz
inc
xchg
sbb
fwait
loopne
mov
pop
sub
les
lcall
and
jbe
hlt
jmp
pop
jle
in
dec
mov
fbld
shrl
into
leave
jmp
push
xchg
call
jg
lock
ret
fisubrl
mov
ljmp
xchg
jg
fisttpll
mov
jecxz
lock
pop
lock
stos
dec
cld
jns
in
lea
fmuls
jnp
mov
addr16
inc
jg
xchg
lsl
call
incl
push
addr16
lahf
lock
sbb
inc
roll
das
std
pushl
lods
sbb
pop
lret
inc
push
in
je
xorb
sarb
pcmpeqb
fsts
jmp
outsl
fnstenv
test
rcr
fisubrs
xchg
sub
jl
pop
into
cltd
fdivs
icebp
xor
cmp
loope
jbe
pop
in
arpl
movsl
jg
xchg
lret
and
lcall
cmc
aas
push
out
pop
call
iret
divb
test
add
add
out
xor
adc
lods
ds
addr16
cli
mov
add
lock
mov
mov
jmp
insb
ds
fisubl
mov
fnsave
mov
int3
out
sub
mov
arpl
repnz
int3
cs
cmp
incl
xchg
cwtl
jecxz
mov
push
mov
addr16
jg
icebp
test
into
popf
push
scas
sar
jp
test
jecxz
popa
ds
shrl
pop
shl
stos
test
ljmp
std
add
sbb
rcrb
sbb
dec
and
popf
pop
aas
mov
incl
mov
aaa
dec
push
add
sbb
or
inc
decl
or
ror
cmpsb
pop
cmp
mov
and
xor
xchg
push
test
decb
or
leave
push
decl
das
movsl
jb
mov
lea
repz
jg
cmp
movsl
incl
cld
push
bswap
or
push
pop
lods
scas
stos
ljmp
mov
in
push
push
mov
stos
out
adc
mov
sub
call
test
out
arpl
jo
cli
iret
in
xor
in
mulb
loopne
call
cwtl
bnd
dec
cmpsl
ds
mov
cmp
sbb
outsl
scas
jp
stc
in
insb
pop
mov
iret
sub
out
mul
daa
je
in
mov
pushl
roll
cld
pop
cmc
adc
sbb
dec
xchg
ljmp
decl
call
push
fsubp
xchg
pop
ljmp
adc
fucomip
outsl
pushf
cli
sbb
add
scas
add
fdivr
fucom
and
push
ljmp
dec
test
mov
xlat
dec
xchg
ficoml
and
ret
cmpsl
shrl
xlat
mov
mov
lcall
adc
js
scas
sub
or
test
jg
push
push
imul
sbb
inc
lods
iret
imul
sbb
add
mov
je
push
std
lcall
sub
insl
sti
add
test
push
test
pop
imul
lret
jae
pop
pop
jg
mov
mov
iret
adc
addr16
xor
decl
inc
sub
dec
daa
int
and
stos
icebp
pushl
cmp
mov
aaa
push
dec
cmp
ljmp
dec
pop
popa
test
xor
xchg
mov
jg
call
mov
gs
pushf
add
add
repz
and
pusha
iret
outsl
inc
push
cli
mov
ror
pop
inc
outsb
jle
lcall
adc
jb
sub
je
neg
dec
push
outsl
incl
push
pop
call
lods
cli
xchg
mov
rcr
mov
lds
xchg
incb
pop
ret
adc
or
outsb
out
adc
lods
xlat
push
loop
sbb
mov
jge
sub
mov
ja
pop
pushl
fidivrl
or
sub
out
mov
sar
ljmp
icebp
in
mov
push
sahf
and
sub
add
rclb
push
xchg
push
lcall
decl
push
dec
scas
or
add
push
shlb
scas
insb
jle
decl
push
jmp
pop
pop
lcall
or
push
push
ret
jg
push
jg
jno
jns
aas
clc
sbb
clc
and
pop
or
cmp
js
in
cmp
repnz
xchg
subps
or
lahf
lea
mov
decl
cmpsl
mov
dec
pop
pop
mov
insl
clc
push
stos
faddl
gs
or
jp
push
popf
or
push
jno
es
sub
call
mov
xor
lret
push
xor
cmp
sub
aam
std
sub
roll
add
or
fs
mov
jecxz
imul
adcl
xchg
cmp
sti
lcall
unpckhps
sbb
in
push
sbb
inc
mov
ror
xor
or
incl
iret
loopne
cs
pop
clc
fsubrs
adc
decl
shl
mov
or
push
xchg
jb
repz
test
idivb
int3
or
sbb
fistl
add
xor
push
ja
lcall
mov
or
sarl
es
sbb
dec
and
jg
or
dec
jge
pop
into
lret
rcl
push
div
enter
mov
adc
push
dec
xchg
adc
das
lahf
or
cli
fwait
sub
icebp
jg
xor
movsl
xlat
mov
mov
jae
sbb
cmpsl
mov
and
jbe
ljmp
loop
fisttpll
mov
fs
inc
negl
in
and
mov
inc
sbb
pop
pop
mov
mov
add
xor
sbb
inc
cli
push
xchg
cli
inc
add
sti
add
lea
fidivrs
mov
sbb
or
adc
mov
xor
mov
pushf
add
jne
pop
xchg
xchg
dec
scas
add
xchg
mov
mov
sub
xor
mov
shrb
incl
jge
cwtl
js
icebp
mov
paddsb
rorb
in
ficompl
mov
in
mov
xchg
cmp
ds
repz
sbbl
enter
cs
jg
incl
and
and
imul
sti
cmp
std
mov
sti
call
iret
xchg
xlat
pop
mov
in
push
cmp
mov
mov
xchg
xor
jmp
imul
dec
cmp
mov
cmp
mov
ret
mov
cs
jg
mov
in
lret
push
aam
inc
movsb
fnsave
pop
fdivl
loope
lcall
mov
insl
dec
shrl
in
mov
in
mov
jmp
pop
or
idivb
decl
sbbb
fcomi
fcomps
enter
inc
add
mov
lcall
pop
sarl
aas
jb
std
ret
hlt
push
call
aas
jbe
cmp
xchg
ljmp
cld
cmp
aad
or
enter
stos
popf
ss
in
into
cmpl
mov
cli
inc
adc
jbe
out
clc
frstor
jo
mov
ljmp
icebp
inc
and
add
mov
xchg
cmp
mov
adc
sbb
jge
xor
inc
fs
jno
pop
mov
mov
out
sbb
mov
mov
adc
cmp
and
cli
lcall
rorl
jl
and
jae
shll
mov
hlt
andl
push
xchg
mov
add
hlt
mov
das
shlb
add
jmp
xor
add
mov
push
scas
shll
faddl
scas
lret
mov
mov
ljmp
add
xchg
test
outsl
test
fiaddl
leave
aad
test
xchg
mov
mov
mov
stos
and
xchg
repnz
insb
jmp
adcl
jns
sub
shll
inc
das
mov
cmc
incl
sbb
fisttpll
repnz
ja
imul
jl
inc
mov
negb
inc
outsl
pop
out
and
cs
int3
push
decl
cmp
clc
stos
stos
lcall
lcall
rol
dec
cmp
cmp
push
mov
jmp
sub
and
rorb
push
scas
test
xchg
insl
fadd
insl
lcall
lcall
lods
lea
pop
lods
mov
lods
sub
adc
push
xchg
mov
jmp
cmp
jl
adc
or
dec
and
std
sbb
xor
lcall
jg
mov
hlt
insl
aam
movsb
rolb
mov
sar
lods
add
lods
mov
negb
adc
jl
ljmp
lret
mov
popf
mov
cmpsb
divb
jbe
push
xor
mov
mov
ljmp
inc
dec
arpl
mov
add
insb
add
push
sbb
fidivl
pop
mov
add
push
in
ret
sahf
adc
lds
sub
rorb
push
push
add
pop
daa
jae
and
inc
dec
mov
jmp
xchg
mov
js
add
cltd
and
mov
stc
gs
add
mov
ljmp
incl
mov
das
jnp
and
es
movsb
ds
stos
in
ds
fists
xchg
push
push
mov
sbb
pop
stos
outsl
nop
ds
and
bound
rcrl
ja
adc
lahf
or
imul
neg
cs
cmpb
call
cmp
rolb
mov
mov
or
mov
add
jge
jmp
jns
cmp
xlat
popl
push
or
ss
mov
xchg
int
inc
idiv
jl
ret
sahf
pop
outsb
lea
xor
leave
ljmp
add
sub
inc
push
adc
cmc
fsubl
or
mov
shr
cmp
iret
push
cltd
mov
ljmp
std
mov
adc
mov
jl
dec
mov
sbb
insl
xor
push
shll
inc
xchg
cmp
lcall
out
push
insb
jl
adc
in
pop
cwtl
lret
xor
xor
inc
push
dec
push
pop
add
mov
cmp
push
sub
test
sub
cli
stos
stc
fcomip
pop
adc
xchg
xlat
ljmp
sbb
in
ss
in
jge
xchg
sub
call
clc
mov
cld
push
push
pop
arpl
cwtl
xchg
sub
or
shll
lcall
mull
aad
cmp
sarb
jg
or
push
imul
negl
movsl
dec
fstps
ret
mov
les
insb
xchg
add
fs
in
inc
xchg
ret
addr16
push
call
sbb
dec
call
sbb
jbe
pop
fdivrp
mov
and
aaa
cmc
pop
ljmp
cltd
or
pop
jg
pushf
fsubr
mov
out
lock
mov
ret
add
mov
data16
test
push
dec
sbb
enter
pop
iret
rcll
xor
pop
fucomp
das
cld
pop
ds
xchg
and
adc
or
out
std
mov
in
les
test
fsubl
test
leave
add
sbb
push
lcall
push
dec
sti
negb
fdivp
xchg
jb
push
rcr
adc
loope
jmp
cmc
incl
jp
inc
aad
xchg
in
nop
sub
shr
adc
nop
xchg
push
ljmp
cltd
hlt
pop
filds
dec
lcall
ljmp
nop
mov
jno
lcall
adc
sti
inc
pop
adc
cmpsl
cmp
ret
sbb
arpl
ljmp
inc
or
addr16
push
test
jmp
ljmp
inc
mov
fidivs
xor
or
add
jns
in
jb
decl
mov
xchg
pop
and
inc
lret
lcall
daa
xlat
outsb
sub
loop
decl
test
jp
adc
lods
sub
decl
or
lahf
jge
ficomps
mov
lahf
xor
jg
jg
mov
sbb
jp
xor
or
clc
shll
lret
outsb
xor
pop
inc
das
movsb
test
mov
pushl
movsb
adc
ds
mov
stos
jg
je
jg
mov
jno
fadds
inc
xor
jg
sub
cltd
cmp
das
xor
fisubs
xor
sahf
xchg
lods
mov
mov
ficomps
xlat
jge
adc
ja
jl
jmp
mov
loope
icebp
and
push
test
imul
xchg
mov
jg
loope
push
and
aas
mov
sbb
jle
incl
insl
push
loopne
sbb
out
jmp
or
mov
add
mov
push
lahf
ljmp
push
out
xchg
mov
fmul
inc
outsl
push
inc
mov
xchg
fimuls
out
inc
movsl
incl
mov
xchg
arpl
dec
insl
loop
test
mov
insl
les
mov
xchg
sar
decl
mov
lock
cwtl
push
lcall
cli
xor
jne
pushf
mov
test
mov
loopne
insb
cmp
fnsave
mov
push
pmaxub
mov
adc
mov
xor
sub
cli
adc
push
ss
add
xor
and
xchg
dec
out
ljmp
hlt
lahf
insb
mov
fwait
mov
adc
cmp
sbb
jnp
dec
insb
icebp
decl
faddl
inc
ss
pop
or
mov
pushf
sbb
cli
pop
xchg
xchg
jp
lods
fs
lds
jg
cwtl
jo
adc
lret
dec
arpl
inc
loopne
mov
and
leave
mov
mov
repz
mov
ficoml
dec
cli
outsl
std
decl
aas
sbb
adc
dec
push
in
and
mov
lahf
pop
add
das
cmc
mov
stos
arpl
cmp
mov
mov
mov
dec
addl
cmp
loopne
xor
dec
pop
aam
mov
push
js
mov
ja
scas
cwtl
xor
and
out
or
jg
inc
fnstsw
push
and
pop
popf
dec
sbb
mov
cmp
cli
decl
mov
jecxz
sub
stos
push
add
out
call
xchg
in
push
popf
jns
gs
andl
mov
les
orl
scas
jne
daa
pushl
js
pop
mov
fisttpl
insb
jg
jns
add
lret
movsl
jp
insl
lds
mov
incl
and
in
mov
out
mov
pop
mov
mov
cld
dec
adc
jo
push
out
and
push
cmp
or
js
add
mov
pusha
popf
arpl
xor
adc
cmp
dec
popf
sub
pop
cmpsl
in
into
pop
dec
cmp
lods
xchg
adc
lret
xor
and
cmp
push
push
pop
addb
mov
cmp
jg
lret
test
jne
pusha
jecxz
push
in
out
loop
adc
push
jmp
or
mov
sarl
inc
subl
push
call
add
dec
sti
inc
jmp
stos
popf
lcall
sti
dec
and
shlb
cmp
insl
inc
jne
pushl
fisubl
sbb
imul
mov
inc
pop
mov
incl
das
cmc
insl
mov
movsb
add
xchg
xchg
jmp
lcall
out
ret
test
mov
mov
jb
sub
or
pusha
cwtl
mov
ljmp
outsl
lods
jo
in
or
in
mov
inc
pop
inc
mull
pop
mov
inc
dec
jmp
xor
pop
insl
dec
adc
mov
je
mov
icebp
mov
pop
push
jb
jle
pop
in
inc
jmp
call
mov
inc
mov
cmc
jmp
cmp
fcomps
push
sti
incb
pop
adc
sub
rol
loope
mov
popa
inc
sbb
mov
push
arpl
sbb
xchg
fstps
cs
pushl
scas
mov
xor
sub
lods
hlt
sbbb
loope
dec
pop
mov
cmp
loop
lcall
les
mov
stos
xor
fnsave
xor
das
adc
decl
test
rcll
fs
daa
mov
push
mov
pushl
addb
cmp
xlat
or
or
adc
inc
pop
sub
cli
mov
lret
imul
cltd
mov
jne
les
add
sub
xchg
neg
lret
mov
movsl
decl
cmp
lods
js
aad
push
rcrb
mov
stos
jle
inc
and
jmp
mov
xlat
ror
scas
ss
out
jne
cwtl
push
xor
lock
inc
mov
push
movsb
adc
popfw
shl
outsl
pop
ljmp
pushf
aam
sbb
pop
dec
pop
call
sbb
mov
push
lea
stos
pop
jb
sbb
das
cs
decl
stc
mov
pop
inc
ret
xchg
js
outsb
incl
mov
clc
out
lret
in
xor
ret
out
ljmp
pop
insb
aaa
loope
and
xchg
movsl
out
cmp
pop
and
inc
inc
jge
fildll
and
movsl
ret
add
mov
cld
or
sahf
or
popf
aas
fstp
sub
lods
gs
mov
fldenv
stos
stos
push
gs
aaa
push
ret
popf
or
clc
out
pop
clc
dec
push
stos
stos
mov
sub
mov
dec
loopne
mov
incl
loopne
mov
and
nop
gs
cmp
sub
mov
adc
and
jg
imul
inc
sub
lds
call
xchg
je
imul
inc
out
enter
mov
shll
int
dec
push
mov
loope
incl
rcrb
pop
movsl
sbb
popa
sbb
push
xchg
pop
mov
jbe
clc
pushl
pop
pop
iret
inc
sbb
ss
sub
movsl
in
lahf
test
out
inc
jmp
inc
aam
loop
sub
mov
and
xchg
rclb
repnz
xor
les
xchg
pop
mov
adc
mov
sbb
xor
pop
enter
xchg
jno
push
jecxz
std
aam
sub
and
scas
xlat
cmc
and
pop
dec
stos
dec
or
mov
mov
cmc
dec
sbb
push
lret
ja
xchg
ja
lea
push
dec
hlt
pop
mov
sbb
popa
inc
jle
out
jbe
cmp
adc
std
mov
enter
dec
ds
jl
in
dec
rcrb
daa
xchg
push
jg
and
mov
xor
jl
mov
lcall
cs
mov
sub
out
xchg
jo
clc
cmp
mov
push
push
or
subb
outsl
std
mov
insb
jne
sub
jle
and
scas
xor
iret
jg
call
sub
out
mov
lods
xor
stc
xor
shlb
cwtl
insl
std
das
lock
scas
and
imul
dec
mov
mov
cmpsb
or
test
xor
sarl
insl
repz
pushl
nop
or
cli
faddl
out
iret
xchg
adc
cmp
pushl
xchg
in
faddl
shl
cs
mov
aaa
repz
rolb
jg
inc
sub
decl
repnz
and
or
cli
idiv
inc
pop
and
jb
push
xchg
es
push
gs
mov
out
lcall
ljmp
pop
inc
adc
sub
mov
insb
subl
sbb
pop
je
add
mov
push
sbb
add
sub
mov
lock
pop
jne
push
mov
mov
cmp
fildll
lock
ljmp
push
cmc
jp
clc
mov
rcrb
out
fimuls
mov
ja
inc
jmp
aad
mov
pop
dec
mov
adc
jl
std
ss
mov
in
jp
addr16
push
cltd
mov
lret
xchg
push
push
pop
cmp
jmp
inc
inc
in
jl
push
test
mov
adc
mov
jl
inc
jecxz
mov
imul
xchg
imul
mov
pop
push
pop
int3
jge
xchg
fcoms
mov
xchg
jle
dec
push
into
je
es
es
jg
fiaddl
xlat
lock
sub
mov
sbb
or
pop
pop
pop
xchg
pop
add
pop
sti
mov
sbb
mov
xor
in
push
xchg
das
and
jno
mov
inc
push
dec
pop
inc
in
adc
pop
inc
dec
inc
add
cmp
xchg
imul
mov
or
push
das
hlt
pop
cmpsl
and
test
in
xchg
lcall
push
rcrl
ljmp
inc
mov
dec
negb
cld
sahf
sbb
xchg
xchg
loopne
mov
pop
aam
cmp
xlat
movsl
inc
mov
cld
cli
sahf
ficomps
cmp
mov
push
js
arpl
lret
das
cltd
scas
mov
pushf
out
and
mov
sti
mov
push
xor
cli
in
adc
out
adc
aaa
add
xchg
mov
sbb
aaa
enter
lods
ret
hlt
loopne
icebp
cwtl
lcall
in
rclb
hlt
or
xchg
mov
add
mov
sbb
mov
xor
test
push
pop
sub
lret
dec
push
incl
imul
mov
adc
lds
add
jbe
lods
xchg
stos
sarb
mov
call
xor
stos
shrl
lods
sub
mov
sub
ljmp
xchg
and
jl
sbb
pop
outsb
inc
aaa
dec
call
mov
int3
xchg
or
mov
fbstp
btc
scas
rol
mov
fidivs
xchg
cmpb
fwait
jl
mov
xor
xlat
mov
xchg
aaa
cmp
sbb
cmp
icebp
jmp
pushf
mov
pop
pop
adc
cmp
lds
repz
ljmp
cltd
movsl
inc
hlt
ret
jp
mov
sub
lcall
or
inc
jns
xchg
fnstenv
cmp
movsl
and
cmp
out
addr16
xor
addr16
insl
fs
adc
ljmp
dec
sub
addr16
pop
dec
imull
xor
push
movl
jmp
lcall
or
cwtl
mov
jge
je
mov
inc
gs
pop
ud2
repz
scas
arpl
or
ja
notb
jnp
or
fucomip
ljmp
mov
mov
and
aas
daa
ss
adc
sbb
lock
fnstsw
lods
mov
push
out
sarb
out
cwtl
cmpsl
mov
mov
lea
xchg
arpl
mov
ficomps
addl
push
loope
in
jne
mov
mov
mov
pushl
xor
fistps
push
jne
mov
jp
icebp
mov
enter
mov
ror
pushl
push
cld
mov
add
mov
cmp
out
roll
jmp
inc
sbb
xchg
dec
and
mov
dec
or
cmc
rorl
fs
clc
jns
mov
decl
adc
enter
jmp
jp
lods
pop
sbb
add
gs
ljmp
xor
leave
xor
push
sti
shlb
scas
push
test
cmpsl
xor
sbb
call
adc
and
mov
mov
mov
movsb
loopne
pop
fldt
push
test
lcall
cld
mov
mov
cmp
add
or
mov
xlat
movsb
aas
pop
xor
test
clc
subb
fildll
popa
mov
iret
test
popf
xchg
cld
pushl
or
push
mov
sub
push
xchg
sbb
or
lcall
enter
lock
nop
add
jnp
loop
lock
les
mov
incl
adc
mov
outsb
lahf
ja
xchg
sub
popa
cld
aaa
clc
incl
ss
mov
sbb
repz
cltd
out
hlt
inc
mov
ljmp
mov
pop
jae
fwait
mov
push
test
aad
cwtl
and
mov
or
mov
loop
mov
add
inc
sbb
nop
jecxz
test
aaa
sbb
adc
mov
popf
clc
push
std
jg
mov
sbb
pop
and
incl
nop
add
jg
cmc
sar
fwait
jno
jg
adc
sbb
push
jle
add
sti
mov
dec
jl
in
dec
subb
int3
repz
repz
lcall
add
xchg
dec
or
or
jecxz
sahf
add
cltd
dec
cmp
mov
popf
jb
nop
imul
mov
loop
inc
incl
in
cmp
adc
imul
fiadds
jl
jg
mov
and
dec
pop
xchg
xor
mov
inc
mov
idivl
cld
mov
daa
loope
jmp
xchg
sbbl
fildll
ljmp
lret
stc
pop
pop
cmp
mov
cmpsl
pop
scas
call
ret
test
add
lock
sub
inc
cli
mov
fwait
sbb
call
add
sti
nop
sti
pop
enter
jae
in
pop
cli
call
aas
mov
or
pop
fucom
xor
push
sti
bound
ljmp
lock
mov
ret
mov
push
cmp
push
stc
xchg
in
jg
lods
movnti
jge,pt
jns
cmp
mov
lret
sbbb
dec
xchg
rcr
mov
xor
adc
stos
cmpb
lea
xchg
std
incl
dec
call
mov
mov
mov
mov
dec
inc
and
call
dec
sbb
pop
out
pop
pop
dec
pusha
sbb
and
imul
sub
dec
mov
and
pushl
and
into
cltd
sub
test
pop
stos
or
test
and
sar
pushl
or
call
xor
push
pop
cld
dec
das
fildl
das
push
sub
subl
insb
jmp
jae
and
jnp
mov
sarw
imul
ss
inc
xor
in
pop
xchg
lds
stos
cmp
fcompl
shll
aad
cltd
adc
dec
call
and
inc
jo
inc
and
jo
outsb
mov
bound
dec
aas
icebp
mov
call
mov
jne
out
inc
add
ja
push
cltd
cmp
arpl
inc
cmp
cmp
or
jl
fcmovu
pop
test
and
imul
decl
xor
ds
xchg
jae
adc
js
jo
mov
sbb
add
jmp
repnz
into
xorb
fwait
mov
loop
mov
pop
fsubrl
movsl
lret
leave
into
js
cmp
aaa
jnp
adc
cwtl
cmp
and
lret
push
inc
ljmp
rclb
test
into
push
adc
pushf
jb
scas
sbbb
in
jg
cmp
pop
push
pop
add
xor
pop
inc
push
ja
mov
adc
or
jp
dec
add
clc
flds
shrl
or
movsl
or
das
add
mov
cmpsb
cmp
jmp
xchg
mov
cld
ljmp
int3
jl
xchg
mov
inc
jnp
sub
jecxz
imul
call
dec
inc
daa
xchg
mov
sub
jg
test
jmp
les
aas
in
dec
pushl
xchg
cmp
scas
loope
pop
lea
mov
cli
pushl
dec
sbb
jp
dec
dec
rorb
daa
lds
mov
push
out
fldz
ficomps
shlb
or
loopne
ljmp
jcxz
add
das
adc
mov
cmp
testb
xor
out
lcall
mov
ret
mov
sub
rcrl
scas
sbb
jbe
xor
cli
ljmp
mov
inc
mov
mov
cmp
sbb
pop
clc
rclb
push
push
mov
repnz
call
or
inc
aaa
xchg
inc
sub
lock
into
inc
mov
and
decl
lea
les
adc
push
xchg
xchg
cs
lret
mov
xor
mov
aaa
sub
jp
and
loop
clc
decl
lea
sbb
sub
cmp
inc
sahf
das
inc
les
das
scas
mov
fstpt
imul
mov
aaa
scas
dec
cmp
xchg
out
jg
incl
lods
movsl
push
in
lea
cmp
and
push
lds
cmp
jns
subb
std
cmpsl
mov
repnz
imul
xchg
push
mov
into
xor
aas
and
inc
insb
psubsw
sub
push
mov
push
hlt
ljmp
insl
cltd
loope
sub
mov
push
fstl
mov
push
xchg
inc
push
ret
out
pop
stos
pop
inc
ss
lods
sbb
outsb
mov
xor
xor
call
xchg
push
pushf
cmpb
decl
pop
mov
adc
test
scas
inc
lds
sub
insb
std
incl
dec
adc
sub
nop
cmpsb
loope
cmp
add
test
mov
cmp
lahf
push
cmp
sub
cmp
fcmovbe
inc
or
test
movsl
xchg
pushf
in
int3
mov
lret
jnp
repnz
mov
jge
add
ljmp
xor
sbb
scas
jle
call
sbb
imul
jns
cmp
std
lcall
jp
ds
cmc
xchg
aaa
pusha
cmpsb
cmp
mov
incl
and
and
pop
cld
lcall
lahf
push
lock
sbb
jge
mov
and
adc
mov
outsl
sti
cli
or
lds
cmpsl
bound
cmpsb
hlt
mov
adc
cmp
jge
jg
mov
add
or
sahf
stos
insl
test
and
fistpll
cmpsb
dec
mov
sbb
outsl
imull
test
enter
decb
jb
pop
xchg
lods
sub
xchg
daa
mov
das
icebp
jne
mov
nop
xchg
jb
lret
scas
mov
aas
jns
cmp
or
shlb
mov
lahf
sbb
xchg
mov
subb
hlt
push
jl
push
cmpsb
outsl
jns
je
xchg
xchg
cli
or
idiv
fucomip
lcall
add
sbb
mov
aas
loope
or
or
insl
std
into
lea
loopne
pop
add
push
mov
push
adc
fisubs
ja
push
xchg
sub
xlat
out
pop
xchg
repz
test
dec
ficomps
incl
decl
in
scas
iret
push
push
sbb
sub
insl
mov
cli
sbb
jg
mov
cmp
mov
mov
or
jg
pop
xchg
fisttpl
jp
adc
ret
inc
and
ret
sarb
inc
push
mov
bswap
lret
cmp
lcall
addr16
inc
lods
push
pop
jmp
cmp
or
movsl
lds
mov
push
and
mov
mov
mov
cs
sahf
jmp
lds
sti
pop
cli
filds
inc
push
sbb
cmc
icebp
or
lods
mov
xchg
rcl
push
xor
iret
mov
aaa
decb
cmp
pop
lahf
iret
push
mov
shrb
das
int
mov
cmpsl
mov
lods
sti
mov
or
add
push
jmp
clc
sahf
jg
push
jl
js
out
enter
mov
xor
stos
dec
outsb
xor
stos
std
aad
test
loopne
call
inc
mov
sub
xor
pop
pop
add
dec
rorl
add
je
cmp
fcmovu
in
pop
xor
aas
lock
nop
mov
ret
sub
inc
add
daa
ret
fwait
xor
andl
fwait
cs
pop
xchg
test
xchg
bound
jg
xor
mov
insb
jl
inc
sub
push
add
leave
dec
mov
ja
lds
lcall
incl
pop
fstp
push
fmuls
sbb
es
fs
cmp
dec
data16
hlt
xchg
add
rolb
cmp
mov
nop
test
aaa
mov
lods
idivb
dec
aad
or
jnp
jbe
pop
fstp
xchg
psrld
cs
cs
sahf
inc
xchg
insl
dec
orb
and
aam
push
push
mov
and
fstps
cmpsl
add
mov
mov
jg
mov
hlt
ds
fxtract
and
sub
outsb
fstps
jl
push
push
fcos
ljmp
jge
adc
xor
push
sbb
ficoml
or
xchg
dec
mov
jne
popf
mov
lcall
cmc
notb
push
lds
pusha
xor
or
jb
and
clc
and
clc
test
sub
shlb
out
ffreep
jo
sub
movl
mov
lods
jg
mov
xchg
inc
pop
jg
pop
cs
lods
jmp
xchg
pop
mov
sbb
jns
loop
cld
out
xchg
and
clc
xchg
mov
jns
sbb
xchg
cld
nop
mov
and
test
dec
dec
cmp
cmp
jg
nop
mov
call
mov
lret
pop
cltd
loopne
arpl
xchg
cmpsl
dec
incl
fmull
movb
fildl
mov
sub
es
and
jae
lret
pusha
fimuls
jg
ljmp
or
in
mov
dec
ret
mov
jnp
mov
lcall
aas
adc
outsb
dec
js
data16
pop
ss
arpl
sub
data16
fsin
ljmp
push
pushf
push
test
jb
xchg
out
push
mov
pushl
mov
mov
js
sbb
aad
jo
jle
fadds
lock
pop
add
pop
jle
and
pop
ljmp
cmp
or
outsl
cld
das
std
push
pop
jmp
subb
and
pop
insb
or
or
cmp
fcomps
xchg
scas
push
mov
hlt
mov
pushl
std
xchg
out
jnp
fdiv
mov
out
out
mov
int
movsb
adc
neg
or
loop
push
pop
dec
mov
pusha
out
sub
pop
xor
jg
sahf
add
jo
cmpsb
push
pop
daa
in
pop
movsl
mov
cwtl
push
pop
jae
inc
sub
andb
pop
mov
mov
iret
test
idiv
out
adc
lods
pushf
mov
inc
xchg
out
icebp
sbb
repz
and
cltd
clc
xchg
scas
in
push
pushl
sub
out
inc
fbstp
mov
test
decl
xor
sub
repnz
sub
arpl
filds
sub
incl
jmp
jmp
stos
jne
sbb
mov
sbb
push
or
mov
not
push
shrb
pop
fwait
lock
loopne
ljmp
xchg
mov
ljmp
push
sbb
stos
push
mov
lcall
roll
in
cmp
addr16
arpl
add
out
jmp
lcall
cs
lahf
pushf
dec
lea
pop
push
fs
pop
inc
sub
and
das
pushl
or
xor
insb
fwait
in
shl
push
pop
cltd
fisubs
pop
pop
push
jb
les
jle
rorl
adc
pop
sub
cmpl
ficoms
fimull
icebp
and
cmp
in
push
ret
scas
into
push
pop
out
lret
mov
inc
add
into
mov
mov
mov
jmp
sbb
mov
or
mov
and
pop
inc
cmp
mov
mov
jbe
xor
inc
fstpl
sbb
mov
mov
inc
pop
das
repz
in
decl
adc
add
sub
pushf
xor
add
cld
cmp
lcall
test
jns
push
fildl
mov
xor
lds
jge
push
or
in
repnz
ljmp
sbb
cwtl
sbb
ret
arpl
arpl
testb
ljmp
mov
pop
xor
out
pop
xor
xchg
bound
mov
inc
jo
cld
add
mov
int3
and
mov
pop
cltd
adcl
lcall
xchg
push
sub
out
out
bound
jle
adc
stos
cli
inc
jl
pop
fucomi
cmp
rcrl
out
push
movsl
loop
call
lret
rcl
je
in
add
adc
jp
out
mov
filds
jne
xor
in
mov
mov
lea
cmpsl
xchg
jmp
push
lahf
push
inc
ljmp
js
push
ss
add
xor
lds
dec
call
incl
sbb
nop
leave
ja
xchg
cli
adc
mov
mov
call
mov
aam
in
cmp
dec
outsl
mov
and
cld
mov
lds
out
rolb
stos
loopne
aad
movsl
sub
pushf
int3
loop
adc
outsl
lock
jmp
mov
pop
jne
dec
push
aad
test
inc
lock
incl
dec
out
sub
jle
push
pop
arpl
and
inc
les
jmp
jp
mov
rol
pop
sub
and
add
lock
dec
xor
int
mov
xchg
push
cmp
stc
adc
and
ja
repnz
cmp
loopne
mov
jl
push
dec
xorb
insl
adc
cld
in
ljmp
call
fwait
jmp
cwtl
add
mov
dec
ljmp
pop
sbb
repnz
mov
test
mov
mov
aaa
stc
mov
aaa
fcmovbe
or
sbb
repnz
lret
fstps
add
mov
jg
lcall
lret
sti
sub
sbb
pop
add
rolb
cltd
mov
or
decl
test
push
dec
rcrl
mov
aaa
or
imul
xor
imull
adc
out
incl
dec
out
jae
fsubrl
pop
aam
popa
push
nop
ret
shlb
jg
mov
decl
pop
das
sub
sti
xor
jmp
dec
push
push
lcall
inc
cltd
arpl
cmp
xchg
add
sahf
sub
and
ljmp
sub
mov
stos
arpl
push
inc
data16
dec
outsb
inc
push
fbld
decl
and
mov
mov
jo
or
or
jb
outsl
pop
pop
mov
stos
push
data16
aam
xchg
ss
lcall
std
fwait
lea
fadd
ret
mov
shrl
ret
pop
jns
lcall
pop
in
mov
cmp
cld
subl
sti
sub
xchg
adcb
rolb
adc
and
xchg
retw
daa
pop
pop
push
gs
js
xor
mov
loopne
cmpsb
popa
int
orb
adc
xlat
in
or
movsl
and
jg
jp
cmp
mov
and
popa
mov
fcmovnu
ljmp
into
test
int3
cli
ljmp
pop
cmpb
adc
call
xchg
sbb
mov
xlat
repnz
das
xor
clc
mov
loopne
mov
add
bound
cli
pushl
add
sarl
sbb
mov
cli
cld
xchg
or
imul
fadd
ret
fbstp
jbe
xor
xchg
xchg
push
addr16
mov
hlt
lcall
push
pop
cs
jmp
cwtl
in
push
fcmovb
daa
jecxz
frstor
ljmp
testl
add
adc
mov
mov
hlt
std
fidivrl
dec
pop
outsl
icebp
mov
in
cmovae
dec
ret
sarl
gs
push
aas
xorb
les
fildll
sbb
or
push
lock
test
cli
sbb
add
cmp
push
pop
ljmp
lods
data16
xor
xchg
stc
lret
decl
cmp
testl
mov
xor
incl
mov
sbb
xor
out
cmp
clc
sbb
mov
decl
mov
mov
hlt
dec
and
inc
xor
xor
clc
mov
jmp
ljmp
lods
loop
lret
cltd
or
push
pop
jmp
js
cmp
lods
mov
movsl
incl
adc
das
xchg
fstpt
pop
mov
dec
adc
pop
sub
insl
test
std
ljmp
inc
imul
jns
mov
mov
sbb
pop
addr16
fucomi
jge
jl
bound
in
xlat
ficoms
clc
lcall
and
adc
arpl
cmpsb
mov
call
push
adc
pop
xor
mov
out
fcmove
push
loopne
jge
je
push
stos
push
mov
outsb
jo
ret
inc
ljmp
push
xchg
dec
cmp
pop
lret
decl
mov
dec
icebp
es
or
pop
sbb
pop
aas
or
cmp
mov
leave
out
sub
fwait
shlb
sahf
adc
sub
stos
mov
sbb
or
cmp
imul
dec
cmc
iret
outsl
cmp
dec
xlat
adc
inc
imul
outsb
cmp
or
stos
lret
mov
test
sbbb
mov
mov
mov
jne
push
mov
incl
outsb
sbb
dec
sub
jmp
aad
nop
in
inc
arpl
addr16
push
jmp
push
cs
adcb
xchg
mov
or
inc
fstps
lret
andb
or
push
dec
insl
data16
cli
ds
test
sbb
inc
xor
mov
jge
jle
arpl
mov
mov
decl
sub
mov
jmp
adc
mov
lret
inc
jg
das
dec
cmc
xchg
pushl
fsubl
pop
jno
adc
mov
ret
push
push
lret
sbb
or
mov
shrb
inc
sar
clc
decl
popa
mov
sbb
sbb
xchg
dec
pop
xchg
stc
mov
mov
sbb
cmp
xchg
xlat
pop
mov
pop
icebp
out
jl
inc
pop
sti
xchg
cmpl
scas
call
mov
nop
test
sub
xrelease
sub
fcomps
decl
mov
cmpsb
adc
popf
mov
outsl
sbb
adcb
rcrl
adc
cli
call
sbb
xor
pop
stos
xchg
insw
call
jnp
call
jae
ljmp
adc
mov
jmp
sub
mov
in
dec
outsl
ljmp
loope
mov
leave
clc
fildll
mov
test
cmc
and
push
shlb
lret
and
add
xor
dec
mov
mov
and
jg
sbb
inc
xchg
mov
imul
ljmp
mov
or
and
jge
sbb
pop
in
aaa
int3
imulb
jg
jbe
adcb
sub
lret
pusha
icebp
sub
xor
mov
fwait
aaa
pusha
jae
stos
sti
inc
fmulp
insb
sub
jbe
jl
inc
popl
pop
popf
dec
sub
jmp
sub
icebp
in
xor
cmpsl
lds
movsb
mov
push
repnz
call
cmp
cs
inc
mov
sub
cmp
imul
out
mov
out
xor
adc
xor
in
mov
push
pushl
pop
mov
dec
xlat
std
sti
xchg
lahf
aas
lock
call
clc
pop
js
into
mov
loope
popa
adc
jnp
sti
sub
push
mov
dec
jb
xchg
dec
xchg
xor
aam
and
xor
ljmp
adc
data16
stos
mov
popa
out
movsl
bound
fwait
imul
cld
in
aas
pop
ror
mov
out
orl
dec
jns
inc
push
and
push
loope
cld
loopne
dec
jmp
lea
push
ljmp
sbb
movsb
push
pop
daa
fcomi
adc
inc
mov
lods
test
inc
push
add
lret
scas
or
add
call
stc
sbb
mov
ja
movsb
clc
cmp
inc
lcall
lock
insl
push
xchg
xchg
sbb
stos
rcr
push
or
xchg
pusha
xchg
test
fs
outsl
mov
jmp
jb
pop
and
or
xchg
ret
mov
incl
test
cmp
inc
xchg
dec
xor
xchg
push
movsb
pop
pop
xchg
pushl
cmp
mov
arpl
leave
dec
sub
movsl
cmp
and
call
cmp
mov
or
andl
divl
lock
cmpsb
or
fldt
dec
xor
lcall
cs
add
sbb
setle
cli
lock
push
push
adc
in
mul
xchg
push
roll
es
jl
push
fdiv
leave
sbb
mov
jg
push
pusha
adc
or
xchg
les
ds
das
imul
cwtl
mov
incl
sbb
jno
mov
jnp
lahf
ljmp
pop
jnp
out
ret
sar
incl
leave
mull
lds
shr
dec
loopne
rolb
bound
ljmp
mov
mov
arpl
xchg
lcall
inc
ljmp
ret
sbb
loopne
dec
aaa
fidivs
das
loope
and
incl
jbe
popa
mov
add
cwtl
adc
cld
sbb
cmp
inc
in
push
test
pushl
mov
or
mov
mov
dec
and
xor
call
rcl
xor
jne
dec
outsb
push
xchg
sbb
decl
cmp
cltd
sub
or
and
movsl
notb
dec
mov
das
cld
outsl
adc
int3
pop
bound
inc
fucomip
add
popf
mov
pop
ljmp
test
es
sub
negb
sbb
js
in
mov
out
fcomps
and
cmpsl
cmp
xor
add
movsb
cmp
xlat
xchg
dec
movsl
jl
push
aaa
clc
std
stos
lea
cmpsl
mov
aas
xorb
stc
std
mov
test
lods
ljmp
cwtl
inc
repz
shll
lcall
clc
adc
xor
sub
mov
fldcw
nop
insb
sub
mov
sbb
pop
mov
int
pop
loop
pop
scas
lds
dec
jmp
xchg
das
sbb
xchg
sbb
aaa
cld
mov
arpl
sub
mov
scas
push
inc
sbb
add
lods
test
lcall
pop
and
decl
pop
cmp
cmpsb
mov
mov
push
cmp
inc
mov
ljmp
incl
movsb
mov
aad
movsl
xor
daa
xchg
sbb
jp
sbb
outsl
icebp
shr
mov
testb
pop
and
lods
incl
pop
outsb
aaa
jb
pop
sbb
mov
adc
mov
loop
gs
mov
jge
sti
and
fisttps
insb
mov
ljmp
addr16
mov
add
call
out
jae
and
xchg
jge
push
lcall
ljmp
adc
mov
or
int
add
fadds
xchg
addr16
fistps
sbb
hlt
jnp
bound
les
mov
add
out
sbb
call
mov
arpl
fs
jb
jae
add
icebp
ja
jp
add
rorb
call
mov
mov
mov
fistpll
xor
jmp
jg
jmp
sub
jge
aad
es
popa
stos
arpl
js
cmp
lcall
call
scas
and
jae
inc
addb
shrb
sbb
je
cmpsl
mov
into
pop
dec
sub
push
pusha
ret
mov
enter
test
leave
lret
cli
and
movsb
mov
lods
rcr
pop
out
push
and
lcall
fucomi
setne
sub
pop
sbb
pop
sbb
ja
std
lcall
lods
lods
and
add
cs
mov
decl
out
add
push
mov
mov
xor
notl
jbe
aam
scas
call
aas
pushf
fadd
enter
addb
test
fists
and
das
icebp
add
bound
dec
cli
ret
mov
sub
cmp
mov
cltd
sbb
aas
adc
cmc
mov
shll
inc
fdivl
dec
ljmp
sbb
mov
mov
fimull
ljmp
stc
push
mov
fdivs
mov
das
icebp
daa
scas
lahf
into
in
andl
fwait
std
incl
mov
cli
xor
cmp
ret
rorb
decl
push
pop
xchg
pop
inc
jb
lahf
jl
sub
or
sbb
ljmp
aam
lds
sub
mov
cmc
mov
mov
push
xor
ret
daa
pop
inc
add
ret
hlt
movsb
adc
push
jmp
push
inc
xchg
adc
pushf
mov
sbb
testl
aas
inc
das
std
mov
jp
es
dec
or
in
or
mov
xchg
or
icebp
xchg
in
xchg
add
icebp
lods
mov
adc
mov
gs
pushl
push
mov
popf
rcl
sti
add
out
push
ja
aas
lcall
mov
push
cwtl
jnp
and
dec
pop
in
clc
divl
stc
aas
incl
inc
fdivr
jnp
xchg
sti
jge
in
dec
incb
shll
call
fwait
cmp
das
inc
cmpsl
cmpsl
cmpb
add
push
pop
clc
filds
inc
faddl
sbb
insl
aas
ja
jnp
mov
inc
mov
ljmp
pushl
fwait
bound
stos
jg
sub
mov
jns
sar
icebp
or
jmp
fnstsw
mov
in
lods
dec
and
or
leave
mov
and
stos
cmp
test
dec
cmp
rcrl
xchg
inc
or
call
cmpsb
int3
clc
jp
or
call
cmp
imul
sarl
int3
rcrb
repz
jmp
outsl
ljmp
aaa
aad
xlat
add
aaa
jbe
sub
fcompl
daa
mov
decl
jmp
or
stc
jl
or
pusha
sti
aas
sub
jge
sub
les
mov
incl
xlat
loopnew
add
pop
adc
insb
cmpsb
jb
movsb
js
mov
add
movsl
dec
divb
mov
mov
xchg
incl
pop
xchg
mov
jg
dec
add
scas
mov
loopne
aaa
jmp
cmp
dec
daa
or
push
aam
cwtl
adc
inc
je
lcall
sbb
lcall
sbbb
cmp
xor
cmc
pushl
sbbl
mov
das
xor
pusha
and
and
mov
inc
mov
insb
in
push
pop
std
decl
std
cli
jns
xor
out
xchg
mov
loopne
test
pop
jae
or
mov
add
imul
pop
sub
pop
flds
jo
idivl
xor
fwait
mov
add
adc
leave
test
cmp
mov
sub
ja
mov
cs
stos
pop
sahf
cmc
nop
lock
xor
xchg
adc
cmp
shl
jne
jg
add
mov
cmp
inc
in
pop
enter
jecxz
lahf
sbb
aad
inc
fisttpll
mov
stos
jne
ss
dec
stc
add
subl
or
imull
aam
das
outsl
dec
mov
aas
stos
jge
push
fisttpll
div
out
and
lret
xchg
lcall
call
mov
insl
pop
int3
test
xchg
les
repnz
inc
add
call
or
sub
sub
xor
pusha
dec
gs
mov
lahf
push
cwtl
mov
incl
mov
jg
xchg
and
shr
mov
cmpsb
lock
das
push
roll
loope
jmp
lock
shll
fcoml
js
push
or
incl
sub
lock
xchg
aad
push
in
inc
sar
repz
cmp
xchg
ljmp
incl
xor
cmp
push
bound
mov
mov
pop
frstor
mov
pop
and
push
out
adc
pop
sub
movsl
std
or
or
adc
xor
gs
sbb
ja
arpl
pop
push
adc
push
stc
jo
mov
sub
imulb
dec
call
jb
out
mov
add
rcr
sub
out
adc
cli
cmpsl
add
mov
mov
mov
out
fists
cmp
push
mov
mov
dec
mov
lahf
lahf
push
cld
xor
ret
jmp
mov
sbb
dec
lods
or
decl
mov
movsl
loop
xor
rorl
imul
and
in
jo
adcb
std
decl
mov
fdivrs
cmp
hlt
pop
xchg
jns
pop
fdivr
dec
adc
fistps
cmp
sub
pushf
mov
shl
into
int
mov
xchg
stos
pop
cmp
sub
sbb
pusha
incl
adc
ja
fadds
jnp
cmp
or
sahf
pop
xchg
pusha
inc
lret
sbb
decl
xchg
ss
dec
or
gs
lods
pop
outsb
jecxz
sub
mov
and
add
ss
nop
mov
test
in
incl
decl
add
or
cld
data16
iret
sbbb
inc
mov
sti
dec
out
add
std
and
xor
aas
insl
jecxz
decl
mov
rolb
jp
pop
and
push
and
call
fmuls
mov
rcll
dec
addr16
push
shll
fidivrl
pop
sub
mov
aaa
jecxz
mov
adc
push
test
lods
int
lock
inc
jae
or
in
popa
les
jl
lock
lock
push
xor
fcomp
push
xor
pop
mov
or
mov
or
repnz
outsl
xchg
cmpsb
into
jno
push
pop
imul
mov
mov
in
js
push
test
notb
or
lods
lea
outsl
cmc
call
adc
push
outsl
xor
adc
insl
mov
pop
mov
in
mov
or
sub
and
cs
adc
jmp
dec
push
hlt
jge
lahf
mov
jno
push
inc
jg
movsl
lock
fimull
sbb
jg
pop
in
pop
cld
sub
cld
ljmp
xchg
mov
scas
rcrb
sbb
cld
xor
mov
push
aam
jl
mov
add
jp
aas
arpl
sbb
aaa
int
pop
push
mov
nop
test
dec
daa
cli
sahf
xor
push
fbld
popl
pop
negl
mov
std
lcall
mov
jge
adcl
xchg
in
mov
cmp
in
incl
or
push
mov
das
fildl
inc
mov
mov
adc
push
outsl
shr
out
mov
add
jmp
in
fsubrs
mov
push
push
push
test
jmp
cmc
sbb
pusha
lods
xchg
and
mov
insl
push
add
mov
xchg
cmp
imul
jmp
in
jns
mov
std
xlat
adc
pop
dec
shll
shll
ds
ljmp
cmc
adc
cli
pop
ds
adc
and
mov
cmp
sub
decl
inc
xchg
rcr
dec
push
hlt
lahf
pop
lods
dec
dec
and
enter
mov
cmpl
push
push
fxch
out
icebp
xor
xor
in
sub
or
sbb
loope
je
push
and
mov
fidivrl
lahf
arpl
pop
in
mov
test
movsb
call
jecxz
mov
inc
inc
adc
xor
jg
repz
mov
and
push
pop
jle
dec
and
ljmp
xchg
mov
ljmp
cld
or
sbb
dec
fiadds
pop
jecxz
jecxz
mov
call
mov
and
sbb
adcl
jle
and
ljmp
outsl
jbe
mov
push
scas
push
loope
sub
inc
icebp
cli
sbb
pop
add
or
in
sub
testb
push
jg
mov
cmp
jb
lea
mull
das
imul
dec
add
bsf
pushf
mov
int
je
in
rcll
pop
add
mov
sub
lds
jp
inc
or
add
mov
decl
jp
hlt
ljmp
shlb
or
sub
push
pop
fsubs
mov
sti
lret
push
pop
xor
jg
std
clc
xchg
push
int
aas
push
xchg
dec
scas
das
icebp
inc
push
push
jge
popf
jae
push
sbb
jl
push
mov
call
decl
xchg
stos
xor
fs
pop
popf
fsubrs
loope
inc
fs
call
lret
test
cmp
xorl
or
jg
push
xor
sub
or
pop
int3
out
aaa
dec
jge
pushf
shr
and
fstpl
push
lock
sti
fiaddl
sub
pop
test
mov
std
lock
push
or
ret
sarl
pop
incb
sahf
lcall
loopne
dec
lods
inc
imulb
lcall
stos
rcrl
xchg
dec
sub
lahf
cmp
shrb
jge
lock
pop
pop
push
add
shl
mov
cmpsl
jecxz
cli
ja
out
inc
jl
mov
xor
cmc
pop
sub
sbb
cld
and
fcompl
mov
clc
pop
push
flds
cld
dec
daa
pop
mov
add
divl
fucomip
fildl
sbb
lock
loop
xchg
aad
xchg
adc
pushf
fcomps
push
sub
lret
xchg
cmpsb
sub
test
pop
loopne
mov
aaa
stos
xchg
data16
call
in
std
les
fwait
mov
lea
inc
and
sti
aad
push
add
xor
mov
stc
xchg
sub
sbb
push
sub
sbb
fs
xor
outsl
lock
push
inc
mov
fstpt
inc
jmp
sub
jae
fwait
add
pop
ja
andb
shll
das
cmc
pop
lock
lods
add
test
hlt
rcrb
mov
unpckhps
cli
lcall
imul
rolb
cmp
pop
cwtl
aas
jg
movsl
or
mov
jecxz
xchg
mov
jg
lcall
fsubl
xor
aad
adc
mov
lcall
push
xlat
jns
or
xor
cmp
sub
push
ret
int
movsb
mov
ljmp
hlt
aam
and
xor
push
push
jmp
nop
insl
aad
add
into
decb
std
mov
jl
outsl
add
mov
jnp
mov
xchg
test
pop
sub
fidivl
fwait
or
shl
mov
js
into
cs
call
jmp
frstor
mov
out
pop
jbe
fscale
pushl
sub
sub
rolb
and
adc
mov
sub
sbb
cmp
jbe
lds
in
js
leave
daa
sbb
js
push
call
inc
insb
test
mov
jmp
cmp
leave
jp
rcrb
cmp
cmpsb
mov
and
pushl
decl
pushw
push
sbb
jo
xchg
in
iret
sarl
push
jg
mov
sahf
dec
or
fucomi
test
push
sub
xchg
dec
add
pop
xor
rcrl
out
push
sbb
mov
pop
shl
cmovae
aad
and
inc
jg
stos
dec
fnstsw
popa
outsb
in
daa
in
sub
xor
push
rorb
out
jne
inc
inc
pop
ret
call
scas
jnp
rorl
dec
out
mov
pop
jb
int
repnz
push
adc
loop
add
mov
incl
test
mov
loop
mov
mov
jns
xchg
pop
hlt
dec
jmp
std
in
sub
loope
inc
jae
or
fimuls
movsl
outsb
add
outsb
iret
push
mov
lods
incl
and
mov
fcoms
mov
in
mov
mov
push
xor
or
push
ljmp
add
add
bound
cmp
mov
testb
cmpsb
gs
jecxz
xor
jae
sbb
fidivl
mov
mov
out
push
fldcw
cmp
push
out
stc
dec
jmp
aas
bound
pop
mov
lret
inc
and
push
and
sti
add
sbb
ja
mov
pop
ja
rolb
lods
mov
outsl
xchg
pusha
cs
jecxz
loope
lcall
test
xchg
movsl
lcall
inc
out
or
or
push
int
cmp
sti
jmp
decl
jg
cmp
test
mov
lret
dec
inc
mov
call
sbb
out
out
xchg
jl
inc
fwait
sub
test
jmp
fcoms
out
adc
jno
push
inc
fnstenv
mov
jg
dec
lret
and
mov
or
jle
add
cld
push
cli
inc
add
das
rorb
ror
data16
mov
mov
enter
mov
adc
mov
mov
je
mov
push
fstpl
cmp
sti
and
into
jb
mov
daa
adc
xchg
push
jno
add
filds
jo
ljmp
adc
mov
lahf
stc
push
pop
add
pop
in
call
stos
mov
pop
les
clc
ds
and
mov
ljmp
or
aaa
notb
pop
test
cwtl
pushl
jns
sub
cs
inc
movb
js
lods
pop
gs
ljmp
rcrl
sbb
cmp
or
pop
mov
lods
adc
xchg
dec
xchg
cmpsb
mov
jle
push
push
aad
fsubrl
clc
das
xchg
push
addr16
push
cmpsl
xchg
out
mov
enter
lock
outsb
pop
movsb
mov
push
jmp
pusha
mov
enter
push
mov
rol
mov
pop
roll
cmc
ret
mov
jl
mov
pop
push
sub
cltd
jno
lcall
push
inc
cld
decl
xor
mov
or
enter
cs
test
and
fwait
mov
ds
lcall
ljmp
mov
fs
pop
and
mov
imul
cmp
jmp
mov
xlat
jb
or
xchg
mov
xchg
sbb
mov
lcall
call
mov
adc
pop
cld
pop
mov
lret
mull
mov
icebp
hlt
or
outsb
mov
add
inc
loopne
jmp
add
or
filds
ljmp
lock
lret
daa
push
cmp
push
dec
hlt
jbe
dec
and
adc
and
or
xor
movsb
and
insl
sbb
cmp
sbb
cmp
stos
pop
mov
mov
and
icebp
inc
and
movsb
add
bound
and
or
pushl
mov
in
jbe
jae
mov
les
inc
call
ljmp
cmc
jg
lock
in
ret
or
int
pop
movsb
xor
fwait
sub
pop
xor
adc
and
into
xchg
clc
sbb
call
xor
call
fs
jnp
add
test
ret
call
or
lcall
cli
addr16
in
enter
lahf
sub
movl
push
scas
or
scas
mov
mov
dec
add
sub
rol
mov
jge
cld
mov
jmp
insb
adc
jmp
jno
inc
dec
out
test
cmovg
jns
xchg
lahf
push
jmp
addr16
insl
xchg
adc
jne
hlt
fs
mov
push
lcall
pushf
lea
insl
sbb
sub
mov
mov
call
incb
mov
mov
pop
mov
adc
mov
std
insl
scas
add
inc
gs
sahf
into
sub
push
dec
jge
rorb
call
incb
push
inc
fistps
and
sahf
mov
repz
add
mov
stc
imul
or
sbb
sbb
jge
ror
sbb
jl
clc
ljmp
je
pop
mov
je
adc
mov
lret
fs
idivb
dec
daa
cld
mov
lret
adc
xchg
mov
fucomip
mov
pop
xchg
lahf
daa
out
mov
loop
xchg
xchg
xchg
add
mov
jmp
pop
hlt
lea
cmp
sti
iret
sub
cmp
movsl
cli
das
mov
push
adc
icebp
ss
pop
ret
pop
ljmp
mov
fmuls
add
mov
ja
push
faddp
popa
lcall
incl
jg
push
sbb
and
dec
pusha
push
mov
xchg
movsl
in
fcoml
mov
and
adc
hlt
icebp
lds
adc
sbbb
sbb
push
cmc
shlb
jo
cld
jae
pop
inc
ljmp
in
add
mov
in
test
sub
insl
stos
scas
ret
incl
cmp
mov
mov
insb
mov
jnp
jnp
xchg
lcall
loope
xchg
fsts
mov
enter
cmp
xor
adc
std
call
cli
mov
je
pop
outsb
lds
decb
jo
fucomip
lcall
cmpsl
xchg
lock
xor
mov
xor
jbe
outsl
cmc
jle
xchg
lret
lcall
jo
cmpl
cmp
incl
cld
std
in
inc
testl
mov
lcall
sub
mov
arpl
cmc
mov
mov
test
rorb
adc
pop
or
movsl
stos
adc
push
add
mov
cmp
pusha
inc
cmp
mov
in
mov
dec
std
outsl
cld
lret
push
add
or
mov
adc
mov
incl
std
cmp
push
xchg
push
inc
mov
hlt
aaa
ljmp
jnp
mov
mov
test
loope
aaa
data16
addl
jmp
icebp
jg
cltd
sub
je
lea
add
add
dec
dec
add
gs
xchg
sbbl
clc
sub
pop
aad
decl
xchg
jg
rep
sbb
sub
mov
arpl
sbb
out
mov
sti
cltd
sub
and
pop
std
call
mov
mov
stos
sbb
sarl
int
add
std
add
dec
cmc
dec
mov
cmp
and
or
push
in
cmp
xor
out
popa
ljmp
and
mov
test
test
adc
cltd
loope
push
pop
or
pusha
rcl
mov
sbb
or
lret
icebp
loope
ficomps
ljmp
xchg
sbb
clc
out
cmp
lcall
xor
std
sbb
sub
push
daa
ret
inc
push
xchg
ljmp
sbbl
mov
mov
push
fldt
cwtl
add
and
lcall
inc
add
ja
add
push
dec
cltd
popa
mov
ljmp
mov
icebp
std
xchg
or
sbb
jg
scas
rcll
das
jo,pt
shlb
cld
ljmp
mov
mov
xor
pop
mov
outsl
in
pop
push
cmpsl
es
inc
sub
decl
dec
sbb
or
imul
ljmp
jge
push
out
gs
push
push
jns
jle
lds
xor
loop
mov
lahf
push
dec
push
or
rcrb
das
cld
jmp
jno
dec
daa
sbb
insb
ret
mov
aaa
clc
xchg
sub
in
cmpsb
xchg
in
push
pop
insl
loopne
lret
add
add
loopne
dec
jge
outsl
add
imul
sub
xchg
clc
decl
ret
outsl
cmpsb
jb
mov
jnp
xor
arpl
sbb
adc
jp
pushl
cld
decl
test
ror
in
sbb
pop
rorl
test
je
xor
lcall
sbb
lock
mov
mov
aas
inc
or
out
insl
push
cmp
cmp
xchg
clc
ljmp
add
scas
insb
lods
icebp
rcll
rcl
mov
mov
ljmp
hlt
faddl
sbb
lds
out
je
mov
addr16
jmp
inc
scas
ss
mov
in
add
loop
sub
mov
inc
inc
and
lods
pop
pop
scas
rolb
scas
push
cmc
xchg
fnstenv
cli
daa
in
lcall
loope
pusha
lahf
leave
sbb
add
push
call
mov
cmp
cld
iret
clc
push
divb
push
lods
push
cmp
test
sbb
shlb
cmp
gs
inc
and
mov
inc
arpl
lcall
mov
mov
mov
pop
js
and
lock
cmpl
jecxz
pop
lods
jne
call
mov
cmp
insb
sub
jo
fldl
call
pop
and
pop
test
jns
aad
add
inc
movsl
outsl
shlb
outsl
std
ljmp
leave
outsb
jle
cmp
inc
lock
inc
rolb
jmp
fidivs
mov
jmp
jg
dec
and
imul
jecxz
aad
movsb
sbb
inc
je
shll
incl
sub
mov
aam
mov
push
jo
and
js
je
incl
xchg
mov
andb
xchg
pop
ds
mov
mov
lcall
ljmp
mov
pop
fadd
xor
adc
imul
sbb
ljmp
push
std
mov
jno
add
cmpsl
shll
mov
dec
lea
adc
and
ds
inc
call
mov
addb
mov
add
mov
lcall
jl
pop
adc
xchg
mov
adc
scas
jnp
loope
push
je
aas
adc
rcll
test
movsl
repz
xchg
pop
inc
jbe
add
adc
pop
repz
dec
aad
and
ljmp
je
fldt
lret
iret
sarl
fcoml
jmp
sub
fsqrt
or
inc
or
call
pop
int
dec
inc
dec
imul
add
fstpt
sar
pushl
imul
sub
mov
push
or
push
adc
in
dec
hlt
cltd
in
and
inc
decl
mov
add
xor
cmpsb
xchg
xlat
mov
fwait
push
in
jb
pop
jmp
dec
enter
dec
rorb
xchg
jno
jnp
addl
movsl
push
and
pushl
mov
stos
outsl
mov
jbe
mov
cmp
je
xor
lcall
imul
xor
jae
lods
or
cltd
gs
mov
fistpll
sub
out
inc
inc
or
mov
fs
jp
mov
mov
pop
xchg
dec
xor
les
sbb
mov
in
out
adc
and
sbb
mov
adc
push
bound
lock
icebp
fmull
cmpsb
mov
rcll
out
and
shlb
pushl
lret
jle
xchg
gs
enter
ljmp
outsl
xchg
push
popa
mov
pop
iret
inc
dec
mov
jge
sbbb
icebp
jmp
inc
stc
mov
rolb
sub
cmp
stos
incb
stos
or
loop
lods
loopne
test
lock
cltd
mov
gs
test
jmp
das
mov
fs
popf
sub
mov
call
enter
jo
sbb
aad
das
icebp
jmp
fsubrs
jmp
sub
xchg
sbb
add
mov
and
dec
insl
sub
pop
shl
clc
les
mov
inc
adc
out
push
jo
jg
mov
push
mov
mov
fidivl
xchg
push
fidivl
pop
inc
mov
cmp
cmp
add
shlb
es
loop
lock
sbb
call
mov
inc
mov
cmp
ficoms
lods
arpl
xor
push
lods
pop
adc
sub
das
push
lcall
imul
sub
std
scas
lret
in
div
jae
xchg
lcall
mov
imul
dec
out
cmp
or
cmp
and
in
pop
mov
arpl
icebp
clc
and
pop
sub
cmpb
cli
sbb
cwtl
aaa
in
sahf
popf
xor
fisubl
sbb
loop
sbb
xor
popf
mov
scas
es
jmp
daa
rolb
mov
jg
lods
loop
or
sub
ret
mov
jg
lods
stos
shl
dec
adc
mov
iret
sub
sub
test
cli
jmp
xchg
fldl
jmp
fistpll
jno
mov
cmpl
movsb
push
inc
push
push
aas
cld
mov
mov
mov
xchg
push
xor
jge
fcmovne
stos
lock
ljmp
mov
mov
push
xor
cs
jge
fucomi
jg
das
clc
lea
jb
daa
sti
pop
dec
imul
sub
push
jg
dec
cmp
hlt
les
lahf
scas
jns
call
fs
lret
adc
jb
jge
sub
push
loop
inc
mov
decl
and
insl
sub
insb
jge
xchg
pop
cs
push
hlt
adcb
aaa
cltd
xchg
sbb
test
or
sbb
ret
gs
mov
sbb
adc
xchg
clc
das
cld
bound
inc
in
fmul
sti
add
rorl
test
les
pushf
push
repnz
je
repz
int3
ljmp
call
cmp
xor
mov
cmpb
sub
sbb
mov
repnz
out
pop
aad
mov
loopne
mov
jg
push
lret
enter
hlt
inc
test
and
rclb
pop
scas
mov
lcall
add
shr
pop
xor
cmp
cmpsb
ficoml
lods
std
pushl
sbb
movsb
dec
iret
pop
test
xchg
out
roll
icebp
jl
lcall
dec
cmp
nop
lock
sbb
lret
mov
decl
xchg
popf
inc
mul
jle
movsl
cmp
add
pop
into
push
ds
and
test
fcmovu
push
or
ljmp
aam
mov
cli
std
gs
inc
jg
push
dec
push
call
mov
add
pop
xor
ljmp
inc
add
stos
push
pop
sbb
mov
call
movsb
popf
clc
jmp
out
aas
xor
inc
insb
inc
pop
mov
fidivrl
aas
into
sub
das
dec
mov
inc
add
imul
std
push
ljmp
aam
xor
pop
pop
cmpsl
ja
sar
inc
push
inc
jmp
scas
lret
xor
adc
call
mov
and
fbstp
push
jmp
inc
test
xchg
or
incl
or
push
in
sbb
push
or
xor
mov
out
cmp
cmc
sahf
nop
and
into
mov
xchg
loopne
cli
mov
dec
dec
dec
jl
hlt
jo
dec
push
adc
call
fs
push
mov
enter
mov
add
inc
lret
mov
sar
ja
dec
fst
clc
lods
jmp
mov
pop
das
lret
inc
jge
push
push
jmp
jecxz
bound
push
xor
sahf
mov
aaa
clc
incl
ds
sub
xor
mov
mov
rolb
mov
add
mov
push
insb
mov
cmpsl
add
or
lcall
std
test
lds
arpl
sub
pushf
jg
je
adc
decl
pushf
int3
test
pusha
hlt
pop
add
dec
xchg
mov
sub
sar
fldt
mov
mov
loopne
icebp
adc
mov
sub
fisttps
sbb
and
dec
ds
jge
add
ss
out
cmp
incl
lret
xchg
fsub
pusha
and
fidivl
sbb
inc
sub
mov
sbbb
fwait
adc
fnstsw
dec
out
in
sbb
dec
in
dec
mov
sub
aaa
fcoms
adc
lret
lahf
adc
mov
sbb
jp
pusha
push
sbb
jae
xor
and
addr16
enter
call
lds
sbb
std
push
sti
mov
push
stos
filds
jb
repnz
cli
pusha
in
fidivrl
pushf
shl
xchg
fs
sarb
jecxz
lcall
pop
cli
insb
push
mov
aam
outsl
mov
sti
push
test
mov
shl
addr16
js
idiv
pop
loop
lcall
sti
mov
jno
aad
les
pop
adc
shrb
adcl
lock
xchg
mov
rorb
sub
dec
dec
xchg
pop
mov
and
and
decl
cmp
jmp
sbb
inc
and
mov
iret
jb
cli
and
xchg
mov
inc
pop
mov
roll
sub
xchg
push
incb
je
std
incl
sbbb
jae
leave
scas
stos
clc
pop
and
loopne
mov
add
sbbl
inc
sub
cmp
inc
lock
xchg
bsf
or
jle
frstor
enter
jne
pop
mov
jge
cmp
cmp
push
imul
hlt
jmp
xor
jmp
lcall
inc
sub
jg
sbb
sub
cmp
pop
or
inc
dec
pop
pop
pusha
xrelease
rclb
push
and
mov
jp
pop
sub
adc
das
cmp
xchg
pop
stos
cltd
inc
xor
cs
mov
decl
cmc
dec
push
xor
cltd
adc
xlat
push
xchg
dec
cmc
jle
lods
pop
test
scas
imul
xor
cwtl
add
mov
cmp
loopne
adc
icebp
call
mov
arpl
sub
cld
lea
clc
das
insl
mov
sbb
ss
js
mov
and
adc
lret
push
in
call
call
xchg
imul
and
in
mov
push
fnsave
jg
inc
rol
xor
mov
jl
jl
lret
cmp
jg
adc
sar
decl
push
jle
jecxz
insb
cmp
cmpsb
sbb
fsubl
cmp
rorl
mov
scas
dec
subl
mov
loope
or
incl
cld
pop
ud1
mov
in
push
sub
pop
cmpsl
lods
mov
mov
or
mov
in
push
stc
scas
leave
clc
inc
sarb
mov
iret
je
mov
fidivrl
ret
decl
push
jle
arpl
inc
or
and
inc
cwtl
aad
mov
jg
dec
rcrb
lods
xlat
push
mov
add
fists
dec
lcall
sub
subb
sub
cmp
int3
adc
dec
cld
iret
sbb
pop
and
fisttpl
pop
mov
rolb
cs
bound
sbb
jecxz
push
ret
pop
lods
subl
mov
jecxz
fdivrl
test
fdivl
addb
dec
jmp
cli
pop
sub
inc
cmp
fsubl
xchg
mov
jno
incb
mov
fcmovnb
outsl
bnd
add
dec
dec
incl
fnstcw
cwtl
enter
dec
pop
push
pushf
out
or
pop
and
xchg
test
std
incl
mov
std
mov
ljmp
outsb
test
add
out
mov
or
lcall
pushl
or
add
xor
lea
mov
push
ss
shll
test
jmp
cmp
insb
xchg
xchg
int3
xor
mov
xchg
or
dec
inc
dec
adc
shrb
push
adc
outsl
std
incl
mov
mov
or
inc
dec
jp
push
outsl
std
incl
cmpsb
add
lahf
inc
sub
mov
in
dec
mov
mov
dec
add
call
xchg
push
adc
pop
sub
idiv
into
push
xchg
ljmp
cli
jbe
je
sbb
inc
loop
xchg
fs
sbb
mov
dec
stos
sub
lahf
enter
and
jnp
pop
dec
mull
pushl
ljmp
add
xchg
pusha
dec
aaa
cwtl
aas
jmp
loop
out
push
aad
decl
cwtl
dec
pop
lcall
bound
in
int
imul
ljmp
lds
dec
xchg
dec
pop
stos
enter
sbb
mov
js,pn
mov
mov
adc
sub
pop
sub
fwait
add
out
push
mov
or
pop
out
sarl
or
les
out
lcall
sbb
sti
and
or
push
daa
inc
mov
mov
out
clc
jmp
xchg
adcb
xor
pop
cmc
jl
mov
movsb
mov
mov
sub
adc
jge
jle
out
outsb
rolb
in
fidivrl
xchg
jne
jl
cwtl
lret
mov
jmp
ljmp
popa
mov
gs
push
mov
in
sbb
mov
xor
cld
ret
insl
cmp
loop
into
sbb
in
xchg
cmc
imul
decl
std
fs
pusha
pop
mov
int3
fsubr
push
lods
lea
jp
movb
sub
mov
jecxz
or
pop
movsb
iret
xchg
push
jmp
test
clc
inc
cmpsl
mov
sbb
push
sub
mov
out
xor
sbb
and
imul
inc
jmp
cmpsl
dec
mov
nop
int
test
out
leave
lods
fsubl
insb
scas
and
ret
cmp
push
movsb
loopne
pop
sbb
stos
mov
sahf
xchg
sbb
popf
push
push
lret
adc
cld
cmpsl
jmp
dec
testl
rolb
mov
stos
mov
jae
sub
aad
add
inc
mov
stos
xor
mov
shlb
idivl
jbe
incl
push
ja
andl
lahf
loop
insb
pop
rcll
mov
outsb
fstl
push
call
jl
sahf
jns
subb
rcr
or
btrl
xchg
decl
add
scas
loopne
inc
push
and
xchg
adc
mov
sub
aas
inc
adc
pop
and
sub
jg
inc
push
fcmovnbe
testl
add
jns
pop
pop
js
call
mov
popf
loopne
aaa
daa
pop
mov
xchg
push
test
ss
fucomip
jns
out
push
lea
insb
cmpl
mov
mov
icebp
decl
inc
ret
ljmp
hlt
sbb
mov
arpl
decl
and
je
add
jp
test
out
ljmp
lcall
imul
stos
pusha
std
mov
xchg
adc
xchg
call
imul
add
aas
cs
sbb
mov
cmp
adc
les
lret
les
fwait
or
insb
cmpsb
mov
decl
push
cmp
xor
xor
mov
mov
cmp
mov
jns
insb
sbb
adcl
aam
cmp
pop
call
int
ret
push
aas
mov
mov
imul
push
mov
insb
xchg
jg
aas
inc
loope
mov
cmp
inc
mov
jg
sbbb
adc
incl
cmp
sahf
adc
push
shlb
mov
mov
jns
jo
jmp
ds
test
mov
clc
sbb
ret
insb
and
call
loope
inc
fcomps
push
fsubrp
iret
sub
inc
xchg
movsl
ljmp
sub
loope
loopne
popf
jecxz
mov
push
push
leave
scas
or
mov
fdiv
daa
fildll
fldcw
inc
or
mov
arpl
call
sub
repz
lret
xchg
andb
push
add
cmp
jge
ja
incl
sbb
dec
clc
jno
sbb
jne
adc
scas
jne
mov
ja
lcall
rclb
inc
mov
push
sarb
aaa
mov
jp
and
sar
mov
rcl
mov
lcall
or
jle
mov
fdivr
aaa
jp
loopne
or
mov
incl
movsb
xchg
es
sub
jmp
out
xchg
push
std
mov
das
inc
int3
fstpt
movsl
or
test
pop
insb
insl
sub
cld
dec
into
adc
stos
out
pop
mov
mov
push
sti
sbb
cmc
xor
ret
out
das
fdivl
jmp
xchg
mov
fidivrl
ljmp
std
mov
pop
jnp
xchg
shll
sub
mov
fmuls
adc
jb
pop
add
lret
dec
inc
pop
add
pop
inc
btc
addl
cmp
pop
dec
inc
es
xacquire
test
jle
xor
outsl
fstpl
bound
out
pushl
dec
and
daa
daa
cmc
lods
fs
cld
dec
mov
clc
das
js
add
sub
mov
cli
jg
mov
fidivrl
xlat
addb
sub
mov
sti
lods
std
mov
xchg
cmpb
dec
pop
jmp
or
lock
fidivrs
setle
push
idiv
jmp
lret
shrb
es
jns
push
fwait
mov
mov
mov
inc
push
imul
mov
shrl
incl
lea
dec
into
mov
nop
mov
mov
push
jg
cmpsb
mov
loop
ljmp
adc
mov
popa
cmp
out
fidivrl
add
out
jg
jg
pop
test
fstpt
push
stos
xchg
jae
fnstsw
xchg
ss
cmc
jle
lods
test
add
cmpsl
sbb
mov
frstor
adc
jl
popf
lods
sbb
daa
xor
and
add
aad
pop
sbb
push
idivl
ljmp
in
pop
iret
das
dec
icebp
scas
xchg
xor
fcmovb
fsub
mov
adc
lcall
jns
lret
xor
xchg
loope
inc
daa
and
mov
mov
mov
lcall
scas
adc
loop
hlt
xorl
or
nop
inc
aas
or
ja
and
fnstsw
mov
sub
jle
inc
insb
clc
lcall
paddsw
int3
push
shll
inc
aas
adc
sarl
mov
das
mov
sub
xorb
rorl
repnz
cmp
push
push
icebp
pop
loopne
cmc
inc
mov
shll
leave
or
mov
xchg
les
orl
lods
stc
add
pop
or
ds
add
aas
cmp
scas
sbb
push
push
das
cmpsl
adcb
inc
div
push
push
call
sbb
cmp
pop
addr16
push
xor
out
sub
jg
aad
pop
loopne
dec
mov
mov
jl
mov
es
gs
int3
and
xchg
push
out
aaa
clc
call
push
out
lock
test
and
loop
add
std
pop
and
inc
add
test
decl
pop
jp
lods
add
and
idiv
lret
push
or
sti
adc
jbe
leave
call
inc
push
dec
and
sub
mov
sarb
jne
nop
sbb
and
dec
mov
and
outsl
pop
mov
push
aam
jmp
jge
xchg
lock
sub
sahf
icebp
sti
stos
jno
add
jmp
xchg
addr16
cltd
jp
sub
pop
dec
jne
push
jle
push
mov
incl
test
sbb
push
and
scas
mov
xor
adc
ljmp
xchg
scas
and
adc
push
lock
shlb
adcb
popf
jg
mov
or
xchg
push
test
pop
outsb
xor
dec
inc
xor
sbb
push
adc
decl
cmp
adc
push
mov
shl
and
inc
movsl
sub
sub
sub
decl
imulb
mov
loopne
push
xchg
jnp
pop
loopne
loope
mov
mov
sti
mov
insl
dec
xor
in
jo
hlt
or
rol
fsubrp
fs
adc
call
dec
sbb
mov
enter
add
adc
in
in
loope
mov
call
adc
fistpl
add
popa
into
and
xor
and
ret
hlt
fldt
jg
mov
stc
mov
loop
pop
jbe
mov
or
sub
gs
orb
lret
dec
pop
aad
repnz
add
pop
jb
mov
mov
push
xchg
xor
push
or
or
fadds
das
fwait
and
pusha
push
mov
inc
inc
in
gs
mov
cmp
add
fs
push
dec
arpl
dec
inc
jns
and
jb
outsb
addr16
jns
gs
cmovl
in
jbe
inc
dec
popa
jo
push
or
jb
in
inc
add
or
push
je
push
outsb
ja
fs
adc
je
jo
outsb
outsw
pop
imul
adc
insl
insl
pop
dec
xor
push
gs
or
push
add
imul
inc
or
pop
into
outsb
jnp
jns
inc
popa
mov
scas
mov
sarl
es
gs
jae
popa
fs
testl
sbb
gs
mov
mov
inc
outsb
je
push
out
mov
jo
xchg
inc
imul
aam
adcb
inc
add
mov
sbb
pop
test
test
insb
adc
ret
pop
dec
adc
mov
into
call
push
xlat
push
outsl
or
std
or
pop
pop
dec
inc
dec
or
inc
fs
addl
icebp
cmp
push
inc
mov
lea
xchg
xor
out
cmp
inc
cmovl
push
add
push
mov
jg
loopne
sidtl
or
xor
adc
addl
orb
add
pop
fistpll
imul
add
adc
nop
cmpsl
gs
push
adc
cmp
rcl
add
jbe
add
mov
je
fcompl
adc
cs
pop
shrl
jmp
adc
mov
jb
shll
jp
dec
addl
scas
mov
es
sbb
fisubrs
pop
daa
insb
imulb
sti
dec
dec
dec
add
fs
mov
popa
adc
rclb
pop
ds
mov
dec
mov
mov
add
lock
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
