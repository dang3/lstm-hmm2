call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cld
pop
jl
dec
and
bound
outsb
inc
js
in
inc
cld
cwtl
int
fdivl
pushf
jecxz
rep
add
and
inc
cmp
or
sbb
in
cmp
lods
stos
fdivl
mov
pushf
rep
movsl
jl
dec
mov
cmp
or
sbb
in
cmp
lods
ret
iret
nop
aad
lods
xchg
repz
sbb
jl
add
push
cmpsl
dec
sbb
mul
das
mov
or
insb
ret
loope
pop
mov
sbb
mov
cmp
int3
sub
pushf
imul
inc
mov
jge
inc
jp
ret
sub
imul
lcall
das
getsec
fnstenv
add
daa
mov
sub
adc
mov
cmp
pop
xor
dec
out
pop
pushf
sbb
xchg
aad
out
pop
fimuls
les
push
or
sbb
test
faddl
test
arpl
cld
jl
push
int3
or
mov
adc
sub
mov
stos
mov
cltd
xor
pop
xor
cmp
or
sbb
in
cmp
int3
mov
mov
rcrl
cmp
adc
out
ds
push
jns
test
dec
jecxz
push
mov
mov
xor
push
cmp
pop
dec
adc
or
fs
mov
icebp
mov
rcr
xchg
repz
dec
jl
insl
push
or
sbb
in
cmp
int3
mov
mov
rep
add
and
inc
cmp
or
sbb
in
cmp
int3
mov
mov
rep
add
rcrl
pop
and
pop
jle
call
jmp
lods
and
cmp
in
in
mov
pop
test
jg
mov
popa
imul
cmpsl
out
push
aam
jae
test
cmp
rcll
pop
xchg
cmpsb
add
inc
popf
shr
cmp
lcall
imul
xlat
inc
fcmovnu
sti
dec
das
scas
jp
int
test
add
test
mov
sti
into
mov
xchg
add
jnp
popa
out
add
arpl
rclb
in
cmp
test
popf
push
mov
stos
sub
fwait
mov
ss
adc
pop
jno
mov
arpl
mov
dec
xor
movsl
dec
arpl
dec
ljmp
adc
add
or
mov
stos
mov
fists
jno
incl
mov
push
out
aad
test
outsb
xor
mulb
es
inc
push
pop
mov
ss
nop
rorb
push
add
sub
sbb
fs
or
lods
jae
or
imul
mov
sbb
sub
or
cmp
push
imul
enter
fisubs
xorb
loopne
scas
roll
lcall
aam
jae
outsl
adc
jl
or
jns
fwait
in
push
cmc
ret
xchg
push
mov
addb
mov
es
or
stc
or
dec
in
out
ds
xchg
leave
sub
adc
mov
xchg
loop
mov
jbe
push
aad
push
fs
lds
mov
xor
mov
mov
call
loop
jmp
mov
xchg
hlt
fdivl
cmp
insb
and
mov
pusha
or
fcmove
bnd
jmp
push
or
inc
das
cmp
xchg
sbb
jnp
jae
ret
popf
inc
dec
cmpb
mov
and
sahf
in
push
scas
lret
push
in
inc
sub
std
lret
pop
push
lret
outsb
mov
or
mov
push
lret
xchg
adc
cmovle
sub
je
adc
jp
adcb
cmc
add
pop
testl
js,pn
mov
pop
mov
test
mov
sub
jne
pusha
stc
in
shrl
push
aad
jl
xchg
jae
and
imul
repnz
shrb
insl
sbb
clc
aas
outsb
inc
mov
popf
test
sbb
cmp
inc
add
scas
adc
and
mov
push
pop
jns
xorb
sub
lea
das
or
test
in
and
rclb
xchg
rorb
imul
push
sub
pop
mov
cmovge
jg
cmp
dec
sbb
mov
xor
cmc
jbe
pop
out
test
sub
iret
cmp
insl
stc
and
subl
popf
pop
sarb
leave
pop
aaa
out
arpl
cmp
std
mov
dec
xchg
fsubrs
stos
push
gs
lret
jo
jp
mov
movsb
je
xchg
scas
sbb
pop
out
add
mov
push
cmp
xchg
dec
dec
int
mov
fucomi
jno
adc
push
cli
ret
lcall
sub
mov
mov
not
loop
into
xor
frstor
aad
pop
sbb
or
jecxz
push
add
frstor
enter
es
add
xor
jbe
or
adc
sbb
and
popa
cmp
repz
fnstsw
iret
ret
push
mov
xchg
imul
sbb
ljmp
adc
xchg
fdivs
imul
pop
and
jp
stc
subl
or
mov
addr16
movsb
or
clc
aas
xor
xor
mov
leave
test
mov
ja
sub
popa
sar
push
cmpsl
lcall
das
filds
enter
rcr
inc
and
in
mov
out
xchg
push
data16
push
mov
cs
das
out
ror
xchg
inc
jge
or
out
adc
pop
sbb
lret
push
xchg
aam
mov
popa
xchg
pop
mov
adc
jg
mov
shll
mov
ror
inc
jb
test
or
xor
pushf
dec
jns
in
repnz
or
stc
es
std
pop
ret
loope
test
bound
jle
out
mov
fstl
pop
repnz
out
leave
xor
mov
gs
or
mov
testl
cmp
loope
pop
andl
pusha
push
bound
sarb
test
imulb
pusha
mov
sbb
pop
cmp
inc
sub
xchg
cmc
or
fadds
adc
add
cltd
push
test
stc
in
lods
js
in
pop
pop
pop
cmp
stos
sbb
sbb
pop
xlat
push
loope
out
sub
sub
cld
inc
cmp
fimuls
jl
xchg
or
inc
sahf
fadds
imul
stos
push
inc
fdivl
push
pop
sub
add
cmpsl
mov
ja
iret
cmp
sbb
and
pop
ss
hlt
imul
out
imul
in
pop
mov
es
pop
or
into
adc
xchg
lods
pop
stos
ljmp
or
pop
jle
push
lret
insb
test
mov
xchg
mov
and
cs
repnz
popf
das
lds
cld
icebp
std
leave
xor
imull
inc
dec
mov
mov
push
lret
out
popf
or
pop
test
pop
hlt
cmp
sub
and
loopne
mov
jmp
and
mov
adc
or
or
out
adc
cld
scas
int3
jmp
ret
fimuls
call
pop
pop
cwtl
fistl
movsl
inc
push
popf
shrl
lds
mov
aas
rorb
sti
aad
inc
nop
leave
mov
hlt
pop
adc
scas
rcrl
mov
cmp
or
fs
lcall
add
mov
insb
cmpsb
loopne
sub
outsl
dec
jno
xor
repz
adc
stos
push
jnp
test
adc
repnz
lods
sbb
push
mov
std
inc
cld
rcl
push
lahf
dec
dec
pop
clc
dec
adc
jmp
rorb
add
jecxz
jnp
loopne
mov
and
cld
inc
push
xchg
add
mov
xorl
sub
push
call
cli
leave
cwtl
or
test
insb
push
or
push
les
inc
xchg
mov
lret
fcoml
pop
inc
jae
imull
movsl
dec
sbb
jae
nop
lods
aaa
pop
movsb
loop
lea
pop
mov
test
insb
outsl
imul
aas
pusha
pop
in
fbld
rolb
stos
xchg
stos
push
lods
inc
pop
pop
add
mov
cli
test
and
fldcw
mov
sub
pop
fsubs
call
mov
ss
adc
jne
hlt
into
out
sbb
adc
jge
stos
xchg
adcl
lock
mov
nop
in
sub
test
sub
in
push
addr16
mov
loopne
dec
ror
daa
clc
sub
sub
dec
mov
pushf
xor
mov
movsb
in
pop
add
movsl
arpl
mov
mov
test
add
lret
sbbl
jl
jmp
push
fadds
xchg
stc
lret
movsl
jo
fildll
push
sbb
iret
inc
cmp
pop
lods
push
push
rcl
lea
xchg
pop
insl
iret
sub
shrb
rolb
or
lds
mov
jns
andb
pop
test
ljmp
stos
addr16
dec
mov
jns
jno
out
cli
mov
je
std
and
pop
pop
pop
dec
cli
je
push
inc
loope
ja
adc
mov
test
dec
aam
loope
sub
inc
xchg
xchg
and
je
push
scas
and
pop
sbb
push
or
cmpsb
mov
pushf
pusha
adc
mov
push
xchg
lds
xlat
inc
or
xchg
dec
mov
rorl
cmpsb
sbb
repnz
jno
pop
jp
out
pop
push
jne
jnp
jnp
jmp
leave
add
inc
or
icebp
adc
gs
sub
mov
insb
pusha
push
loope
dec
xchg
add
movsb
dec
push
mov
mov
jge
inc
in
sahf
jns
jge
cltd
xchg
shl
loope
loope
pop
cmp
inc
in
iret
imul
test
in
mov
jnp
cmp
aas
cmpsl
dec
cmpsb
popf
clc
pop
pop
leave
fcomps
daa
fildl
bound
jae
lock
or
dec
add
cmpsb
mov
push
jecxz
test
fidivl
mov
test
push
mov
sbb
imul
cmp
fdivl
loopne
or
mov
in
jl
or
dec
inc
sbb
pop
inc
aad
int
or
mov
adc
ret
xchg
fidivrl
add
lret
cmc
mov
inc
loopne
cmpsl
mov
out
movsb
or
pop
rcl
out
in
dec
adc
pop
jl
jge
mov
movb
test
mov
data16
fsubrs
jl
and
jge
or
or
jmp
mov
cmpsl
iret
imull
int
fwait
mov
xchg
mov
sub
and
push
ror
jnp
inc
xlat
xor
cmp
loope
icebp
xchg
std
add
movsl
xchg
sahf
sbb
mov
les
adc
jmp
xchg
mov
enter
and
in
inc
xchg
ja
stos
aam
pop
mov
repz
mov
test
enter
jl
cld
adc
fisubrl
rcrl
mov
je
mov
jne
out
nop
test
jl
frstpm(287
xchg
pop
lea
sbb
rorb
mov
dec
sub
insb
ret
punpckhdq
jo
mov
mov
lods
xor
outsb
hlt
je
sahf
cmp
dec
pop
jge
push
cmpb
pop
pop
push
loope
incb
insl
les
dec
fmulp
lods
xor
push
shll
mov
jp
hlt
loope
jne
int
xor
insb
sbb
mov
cmp
dec
idiv
mov
jnp
and
or
pop
mov
shlb
int
outsb
fdivrl
lods
jno
mov
adcb
ja
pop
fiaddl
sub
icebp
cmp
lret
out
insl
les
cwtl
jp
pop
inc
outsb
loopne
xor
jbe
and
mov
data16
in
inc
push
or
cltd
xchg
outsl
inc
sub
pop
sub
fists
sbb
jae
sbb
nop
popa
sbb
sub
jae
or
adc
clc
or
sbb
mov
rcll
std
cmp
and
jo
mov
faddl
xchg
insl
lock
and
sub
adc
pop
pop
and
ja
push
daa
xor
sub
ret
sub
test
outsb
or
cltd
nop
push
scas
in
push
mov
cwtl
xchg
inc
pshufw
mov
mov
or
jle
aad
aaa
cld
fcoml
das
xor
lcall
aas
xchg
into
mov
loope
xor
push
jb
push
cmp
in
mov
push
inc
cmp
mov
sub
mov
movsb
adc
std
xor
inc
or
pop
sub
jns
aad
lcall
xchg
adc
jg
mov
scas
int
mov
sub
fwait
cmpsl
mov
pop
js
cmp
mov
sub
xchg
dec
in
lea
xchg
fstl
pop
mov
sbb
inc
mov
pop
sbbl
ret
xchg
out
rclb
pop
mov
cwtl
arpl
btr
out
inc
mov
cmp
leave
adcl
pop
or
repz
sahf
in
insl
jns
xchg
sahf
add
pop
jp
stos
fisttpl
add
xchg
std
push
or
in
mov
or
or
sbb
mov
arpl
or
push
pop
scas
jb
mov
pop
dec
inc
inc
daa
xchg
dec
jp
test
imul
scas
cmp
jp
jnp
sbb
adc
add
cltd
xchg
add
ret
iret
fisttpll
pop
aam
test
mov
fs
inc
cmp
mov
out
enter
jge
icebp
jp
inc
mov
cmpsl
xlat
pop
test
jbe
into
cli
and
lcall
add
sbbl
aam
sahf
mov
enter
sub
pop
mov
and
inc
sub
push
xor
inc
leave
push
dec
push
aad
daa
hlt
mov
cmp
out
flds
adc
jp
sbb
mov
cmp
xchg
sbb
mov
or
mov
jns
add
movsl
adc
in
adc
hlt
insb
pusha
out
popf
mov
popa
decb
jne
sti
rcrb
mov
mov
mov
or
mov
outsl
mov
and
xor
sbb
add
ret
push
sub
sti
cmp
adc
sub
and
jns
dec
push
inc
mov
or
mov
or
add
je
pop
movsl
in
ret
inc
dec
scas
loope
sahf
lret
mov
bound
sub
fmul
push
std
dec
das
sub
xchg
adc
mov
and
cmp
test
inc
arpl
pop
mov
pop
pop
repnz
mov
lds
jecxz
adc
sbb
outsb
ds
push
imul
into
shlb
fwait
in
jecxz
xor
sub
mov
sbb
adc
movb
and
pop
cwtl
sbb
inc
ss
test
lock
mov
xchg
push
xor
push
stc
mov
hlt
stos
xchg
jmp
fucom
jns
fnstsw
and
add
cmovle
mov
popl
ds
in
cmp
dec
aad
sub
adcl
cli
fdivrs
dec
aaa
popa
cmp
mov
xor
popf
push
loope
aad
pushf
jns
stos
push
and
xchg
xor
sub
stos
adc
cli
js
push
rclb
or
adc
stc
jmp
sbb
push
addr16
xchg
repnz
sub
fs
scas
sbb
or
xchg
fistpll
cltd
pushf
and
les
sub
push
subb
xor
mov
or
xchg
pushf
aad
jne
adc
sbb
push
fsubrl
fistpll
mov
cld
xchg
sub
pop
add
mov
out
sub
mov
sbb
mov
ds
lock
stos
xchg
mov
in
mov
insb
stos
sub
push
cwtl
aam
shr
xor
dec
movsb
or
inc
and
jae
sub
pusha
test
and
mov
rol
sub
push
push
test
and
ficoms
sub
ds
cs
mov
mov
xchg
dec
ficomps
inc
adc
jb
or
lds
mov
sub
sub
in
fs
inc
xorl
fiaddl
mulb
inc
sti
push
mov
adc
xor
repz
jg
jg
dec
push
adc
mov
dec
dec
xor
pop
mov
pop
aam
ret
in
out
aad
negl
adc
mov
ja
jp
adc
loope
adc
imulb
sub
push
pop
out
xor
test
pop
rorl
fnsave
jns
test
xchg
aaa
jo
sbb
jo
clc
repnz
dec
jp
mov
test
mov
gs
dec
and
mov
xor
and
repz
clc
adc
in
cmpsl
xchg
sbb
jae
cmp
xchg
sub
imul
fistpl
mov
ret
in
add
dec
int
aad
in
fisubrl
pop
jb
adc
in
mov
scas
ljmp
loope
add
adc
mov
sub
dec
pop
jbe
lods
sarl
lds
jne
xor
lcall
insb
fnstenv
mov
mov
adc
mov
out
or
pusha
ljmp
mov
jnp
ds
icebp
in
call
fstl
test
iret
xor
mul
lods
pop
xor
push
out
adc
cwtl
adc
and
dec
popf
jns
xchg
xchg
push
push
sbb
pop
insl
setle
adc
dec
test
sub
push
fwait
add
cmp
inc
inc
mov
cmpsb
imul
push
mov
das
sub
xchg
popa
imul
jg
xchg
cmp
inc
outsb
je
in
js
pop
adc
lret
lods
fs
ja
inc
cmp
add
cld
mov
das
or
addr16
sbb
jmp
jno
sti
sbb
dec
and
cmp
hlt
test
push
rcr
bound
xor
xchg
xor
pop
outsl
inc
adc
push
jmp
dec
push
and
and
ljmp
lock
mov
pop
jno
mov
push
xchg
dec
pushf
int3
lahf
jle
clc
leave
cmp
sbb
out
cli
push
inc
jp
data16
inc
stos
pop
mov
imul
addr16
jecxz
add
in
jnp
fistps
push
test
sbb
aaa
hlt
xlat
arpl
lret
loope
ret
sub
jo
pop
xlat
or
sbb
ljmp
adc
pusha
addr16
ret
jp
dec
imul
xchg
and
fdivrl
hlt
sbb
pop
cltd
in
filds
adcl
add
jmp
pop
into
mov
cmpsb
les
rcl
popf
sub
insb
ja
cli
mov
cmp
stc
adc
sbb
rorb
xor
test
fdivl
cmc
inc
push
or
cmp
inc
xchg
xor
mov
fdivrs
test
insl
add
cmc
push
jp
inc
mov
add
push
xchg
fldt
push
push
outsl
ja
adc
sub
mov
lea
adc
mov
insw
notb
aaa
jb
lock
dec
nop
add
mov
ret
adc
mov
or
inc
and
cwtl
dec
pop
cltd
mov
jp
es
lret
mov
pop
jb
or
ss
mov
lea
and
pop
xchg
xor
mov
inc
adc
sti
inc
inc
out
adc
pop
mov
in
mov
xchg
mov
add
add
mov
mov
xchg
adc
jbe
movsl
mov
jg
cmp
daa
dec
and
mov
jne
xchg
or
jg
lret
mov
outsl
aam
int
les
pop
negb
in
mov
insb
jne
in
inc
mov
nop
xchg
fbstp
xor
push
adc
cmp
jmp
hlt
push
push
pop
out
std
add
pminsw
xor
sti
rcrb
pop
mov
adc
jne
and
or
mov
push
mov
jmp
lods
jbe
jne
pop
push
arpl
scas
test
mov
mov
inc
rcr
ss
xchg
in
inc
cmpsl
dec
shlb
sub
lea
flds
lret
mov
xor
fmuls
test
sub
sub
cmp
pop
aaa
mov
xchg
push
movsl
sahf
mov
mov
jmp
rorb
je
cmp
mov
cmp
xor
pushf
stc
xchg
ja
ficoms
sarb
in
cld
pushf
out
fistps
test
imul
cmp
mov
rcrb
movsb
loopne
test
int3
jl
out
push
in
out
into
jecxz
mov
and
lock
mov
cmp
and
fdivl
pop
sbb
xor
leave
mov
insb
out
pop
in
nop
add
mov
jmp
adc
mov
xlat
jl
out
mov
loop
sbb
fisubrl
push
mov
enter
pop
popf
mov
testb
jmp
std
push
ret
cmp
or
mov
inc
and
jo
out
adcl
and
mov
cmp
enter
arpl
stos
pop
popa
fsubrs
push
ffreep
mov
mov
es
adc
cs
mov
and
imul
repz
aam
push
add
xchg
adc
pusha
sbb
xchg
aaa
add
gs
jl
mov
dec
fdivs
pop
adcb
inc
and
ret
mov
mov
push
into
fs
rcll
cmp
mov
add
or
clc
inc
div
mov
fnsave
push
fs
mov
or
or
ljmp
add
inc
pop
popa
fiadds
roll
sbb
mov
cmp
xchg
test
fisubs
pop
jno
jmp
mov
jae
in
sbb
or
mov
mov
popf
mov
mov
pop
xor
cmp
or
sbb
in
cmp
int3
mov
mov
rep
add
and
inc
cmp
or
sbb
in
cmp
int3
mov
mov
rep
pop
jl
dec
cmp
inc
cmp
or
sbb
in
cmp
int3
mov
mov
pop
insl
out
testl
cmp
or
sbb
in
jl
cmp
fadd
fstpt
arpl
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
loope
icebp
popa
shll
sbb
add
pop
xchg
lea
loope
icebp
inc
andl
mov
icebp
or
mov
xor
shrl
addb
rcll
mov
clc
mov
leave
pop
mov
xor
mov
xchg
and
outsb
jecxz
cmc
jae
jle
lods
sbb
mov
imul
jle
mov
jl
fsts
push
loope
hlt
subl
jle
outsb
aaa
sahf
movsl
adc
outsl
mov
jge
lcall
push
lcall
shll
sub
scas
xchg
test
mov
lea
cmp
test
popf
cmp
adc
rolb
fdivrl
xchg
mov
mov
mov
ds
movsl
std
popa
cltd
les
popf
push
mov
mov
xchg
and
mov
test
pop
sub
adc
addb
or
sbb
add
shll
testb
popa
fdivs
in
imul
xchg
pop
rorl
fwait
sub
loope
adcl
jg
push
in
xor
rorl
jno
inc
xchg
xor
inc
pushl
enter
or
xor
adc
je
aam
mov
loope
mov
push
xor
lock
icebp
add
adc
shll
loope
icebp
push
andl
mov
inc
loope
icebp
popa
shll
mov
xor
loope
icebp
push
andl
mov
inc
loope
loop
inc
mov
into
sub
das
dec
dec
xchg
mov
pop
fiaddl
sbb
jne
js
pop
pop
mov
movsb
fbld
and
or
subl
das
and
data16
mov
adc
shrl
mov
aam
add
shll
jae
out
bound
or
notl
mov
push
cmc
inc
sbb
aam
lahf
mov
mov
cld
pop
clc
cmp
inc
pop
pusha
pop
das
sbb
pop
mov
and
fldt
and
fimull
ret
or
repnz
xchg
and
pshufw
push
clc
mov
cli
ret
or
mov
insl
mov
mov
pop
jno
push
pop
push
shr
mov
adc
push
aas
shl
cmp
movsl
and
mov
sarb
pop
add
add
push
pop
jnp
out
pcmpgtb
push
movsl
mov
jnp
es
out
fidivl
cmp
mov
mov
xchg
dec
mov
nop
in
add
rcll
lret
mov
ret
movsl
cmp
aas
dec
dec
inc
xorb
lret
xchg
jne
xchg
dec
addr16
cmp
lret
mov
movsb
mov
xchg
xor
stos
add
dec
and
mov
mov
inc
bound
shrl
sahf
pop
and
ja
lcall
jge
add
cli
jnp
sbb
inc
push
iret
aas
addb
dec
and
add
push
clc
dec
cmc
cwtl
jl
mov
movsl
push
shl
inc
movsb
rol
loop
ja
in
aas
xor
inc
adc
dec
adcl
hlt
sub
adc
fs
mov
mov
mov
pop
repnz
add
xchg
sbb
xchg
js
mov
and
js,pn
adc
sbb
imul
xchg
cmc
aam
sub
add
or
sub
sub
repz
es
aam
into
cli
roll
lahf
inc
or
lock
movsb
inc
leave
shlb
cwtl
out
arpl
rclb
add
clc
divb
pop
adc
dec
int
fisubs
mov
xor
adc
adc
std
insl
movsb
daa
jno
outsb
enter
pop
fisttps
cmp
andb
or
sbb
push
inc
mov
stos
xchg
push
pop
sbb
popa
xchg
jns
negb
mov
popl
loopne
fidivl
add
testl
arpl
xor
lcall
fmull
fstpl
jg
mov
das
daa
push
adc
addr16
repz
inc
popa
mov
fstpl
sbb
jb
push
push
pop
out
into
mov
incb
aad
push
mov
sbb
subl
in
jp
xor
mov
or
mov
flds
sbb
jl
xor
je
test
sarl
in
jno
sbb
je
and
pop
adc
dec
push
stc
fsubr
mov
cmp
inc
mov
test
push
ss
push
int3
sahf
jne
orl
inc
push
mov
sbb
popf
popl
xor
mov
addr16
imul
or
cwtl
rorb
leave
pop
push
push
fiadds
pop
jne
ljmp
pop
arpl
into
out
push
pop
jg
out
pushf
addr16
xor
in
idivl
jmp
pop
mov
jbe
sti
pop
jne
jnp
clc
arpl
mov
lret
scas
push
fcoml
lods
pushf
sub
jecxz
ds
xor
lahf
cmp
in
mov
loop
or
vmovaps
add
imul
push
mov
jle
movsl
mov
pop
adc
enter
hlt
mov
dec
sbb
pop
sbb
jle
mov
mov
jno
sub
push
ss
cmp
aaa
fnstcw
xchg
ljmp
icebp
inc
cmpsb
fimuls
rcrl
mov
cmc
jmp
inc
or
lock
jbe
repz
cs
call
lahf
iret
push
mov
cmp
call
sub
mov
fs
inc
push
xchg
cld
loope
xor
adc
push
in
inc
je
cmp
loope
in
aam
mov
push
xor
dec
into
leave
mov
outsl
pop
mov
lcall
mov
push
or
add
adc
add
cmpsl
sbb
int
daa
lods
inc
and
push
jmp
cwtl
xchg
jle
out
orl
sbb
sti
add
lods
bound
cmp
shlb
iret
outsb
jns
js
dec
pop
adc
pop
arpl
xor
mov
stc
adc
shll
push
mov
lods
sbb
movsb
out
shll
mov
sbb
and
and
imul
and
imul
je
stc
and
loopne
mov
and
jl
push
push
mov
lahf
xchg
testb
cltd
push
std
mov
test
mov
les
out
ds
adc
jnp
out
push
stc
sub
dec
lods
cs
test
pop
lahf
out
add
sbb
sub
mov
jne
or
stc
jg
dec
rcrl
xchg
insl
loopne
loopne
jle
cmpl
sti
mov
lds
mov
jge
ds
cmc
mov
in
and
loop
or
push
pop
shrb
test
pop
xchg
xor
jno
lret
jle
pop
stos
push
scas
pop
mov
xchg
sub
daa
sub
sarl
fstpt
mov
out
xchg
addl
or
insb
push
jbe
fldenv
mov
mov
mov
lcall
cs
jg
je
xor
mov
sahf
mov
jge
mov
xchg
inc
dec
inc
push
hlt
stc
xor
insb
dec
adc
mov
jge
and
xchg
loopne
das
mov
insl
sti
sti
cwtl
sahf
inc
sti
mov
adc
cmp
push
es
imul
push
pop
imul
out
lcall
call
sbb
out
and
sbb
push
loop
xlat
rcrb
outsb
test
mov
dec
dec
pop
lret
add
push
pop
sub
addr16
in
xor
lret
pop
add
push
xchg
mov
shlb
inc
int
dec
add
push
subl
nop
pop
jle
call
clc
testb
das
mov
add
xchg
cmpsb
sub
idivl
ja
scas
sbb
ret
sti
cs
xchg
xchg
dec
mov
loope
push
pop
sbb
dec
adc
jns
pop
pop
lock
dec
xchg
out
fsubs
repz
push
stos
loope
mov
hlt
fwait
stos
daa
push
repnz
mov
leave
jle
sub
pop
adcb
sbb
and
jo
fldt
jecxz
insl
std
out
and
int3
add
inc
in
rclb
sahf
ds
push
mov
arpl
pop
push
fisttpl
gs
pop
jle
test
xor
inc
xor
cli
faddl
jo
lods
out
decb
pop
lock
and
xor
mov
jl
sub
push
or
movsl
test
xchg
adc
cld
add
dec
sbb
ret
loop
cmc
pop
jl
aad
filds
add
out
orb
lds
sbb
ret
jge
push
dec
std
stos
das
fldenv
ds
out
movsb
dec
inc
test
repnz
sahf
stos
push
mov
scas
xchg
aad
loopne
rdtsc
shlb
cmp
jns
cmp
mov
jnp
nop
lret
imul
mov
sbb
pop
insl
sub
js
add
push
rep
add
xchg
outsl
call
imul
mov
xchg
das
pop
shrl
loop
xor
fcompl
mov
mov
jg
jle
sahf
in
shlb
lret
fdivs
negb
pop
sub
cmpsl
inc
push
push
add
ja
add
out
es
xchg
insl
xor
jle
arpl
or
mov
xchg
lods
inc
dec
inc
roll
stos
repnz
loope
xchg
lock
cmp
in
rcrb
adc
aas
arpl
rolb
pop
popa
fldpi
mov
nop
sbb
mov
gs
mov
inc
and
jmp
out
jl
pop
mov
push
xchg
roll
arpl
cmpsl
jg
jge
lods
inc
dec
test
cltd
sbb
insl
insl
jno
pop
sar
mov
sub
jmp
stos
clc
push
lds
cmp
fisubl
leave
loopne
out
test
jns
dec
jo
fs
xor
je
sarl
stos
std
pop
icebp
xchg
cmc
addr16
xchg
jl
sbb
nop
js
adc
or
push
ret
dec
adc
and
outsl
push
nop
sbb
xchg
js
addr16
and
xchg
mov
imul
dec
hlt
cmpsb
sahf
sarb
out
or
xor
add
imul
cmp
pop
push
push
imul
pop
cltd
fstps
notl
or
icebp
jl
mov
jo
int3
push
push
xchg
or
in
out
pop
in
inc
mov
stos
mov
stos
pop
loope
out
or
int3
cmp
cmc
pushf
sub
pop
adc
xlat
pop
movsb
fs
push
addr16
cmp
cmovne
aaa
lahf
fistpl
jg
fmuls
sub
jb
insb
add
das
sub
sub
xchg
cld
and
mov
test
rcrb
ds
pop
adc
testb
dec
xchg
mov
ds
faddl
in
dec
push
adcl
xor
loop
mov
rcrb
lock
adc
push
ja
mov
cmp
push
sub
fiadds
add
xchg
lods
daa
sub
push
adc
roll
fnsave
jp
stos
outsl
and
mov
dec
or
testl
sbb
push
scas
daa
ja
ret
insl
mov
leave
push
aam
push
pusha
out
mov
es
ja
dec
mov
clc
dec
stc
xchg
pop
fs
sub
cmp
jecxz
pop
mov
pushf
icebp
inc
mov
push
out
push
sub
jmp
aad
loop
out
pmaxsw
addr16
iret
inc
jp
outsb
xchg
iret
jle,pn
insl
cmp
push
dec
cvtps2pd
outsl
movsb
jmp
pop
daa
and
ljmp
hlt
or
nop
sti
pop
inc
stc
add
push
and
popf
sbb
add
dec
adc
sar
mov
daa
js
repz
insb
in
adc
cmp
cli
insl
gs
push
cmp
xchg
icebp
jecxz
xor
loop
cmp
sbb
inc
bnd
stos
inc
rcll
nop
xlat
push
shll
pop
std
mov
mov
std
fnstcw
jae
sar
shll
fwait
mov
into
xor
xchg
das
bound
sahf
inc
xor
int
jne
xchg
rcl
test
scas
or
xor
sbb
pop
sub
jmp
out
out
add
mov
ret
int
dec
iret
xchg
push
cmp
fbstp
pop
sbbb
xchg
and
std
mov
outsb
push
ret
jae
cmp
sahf
je
jle
cmp
push
xor
call
cmp
dec
lcall
mov
test
cs
jbe
les
fdivl
insb
shrl
rol
fildll
inc
sahf
dec
sub
jo
in
mov
lds
jnp
repnz
mov
jmp
enter
push
outsb
stos
push
xchg
shll
cmp
xor
jecxz
leave
test
inc
sahf
sahf
dec
fsubrl
scas
push
in
in
push
mov
mov
sahf
lret
push
dec
inc
inc
outsb
and
jbe
nop
sub
mov
sub
insl
lcall
iret
pop
daa
test
push
ret
cld
xorl
inc
gs
movsb
gs
and
scas
adc
movsl
cmpsl
cmp
sub
fs
dec
cmc
mov
xor
imull
int3
rolb
mov
imul
arpl
divl
cli
sub
mov
in
inc
out
imul
jae
jmp
add
adc
push
adc
mov
xchg
inc
stos
js
or
mov
mov
rclb
inc
mov
js
test
icebp
jecxz
xchg
cmpsl
pusha
adc
in
add
out
mov
insb
add
jp
cmpsl
mov
pop
adc
sbb
adc
aas
jmp
cmp
mov
sarb
push
loop
add
lret
test
xchg
stos
jno
daa
mov
add
push
pop
popa
lods
fbstp
cmp
fnstsw
jp
fdivs
dec
xchg
cmp
hlt
and
mov
push
in
movsb
mov
dec
jbe
xchg
adc
sub
je
jne
pushf
js
jno
decl
roll
inc
enter
lds
sbb
or
sbb
adc
and
mov
mov
mov
jno
je
sbb
or
add
mov
adc
add
call
insl
stos
jle
inc
vpsignw
inc
rolb
xor
xchg
push
mov
push
jp
xor
or
test
mov
mov
adc
cmp
add
daa
pop
popf
add
stc
outsb
jg
xchg
sbb
mov
loope
jp
mov
lds
mov
mov
roll
mov
int3
sbb
into
icebp
lret
int
inc
stos
and
push
fmull
outsb
gs
xchg
out
mov
lea
orl
adc
or
jmp
xor
fcomip
mov
aam
cmp
push
stos
pop
mov
in
std
loopne
jno
push
jg
test
mov
int3
sub
cmpb
push
dec
pop
sub
cmp
or
pop
lods
sbb
gs
xor
and
stc
or
jmp
mov
add
lcall
daa
test
inc
inc
lds
add
jg
inc
push
push
fisttps
dec
popf
stos
jns
out
xor
mov
jle
in
outsb
movsb
sub
and
jmp
ja
jnp
leave
or
pop
in
rcrb
sahf
mov
dec
dec
add
sbb
nop
fdivr
std
outsb
lcall
sahf
and
mov
mov
movl
mov
inc
in
mov
mov
mov
pushf
insl
push
xchg
aaa
jae
mov
mov
and
push
jle
jp
xchg
pop
cmpsb
cmp
pop
jbe
xchg
sbb
pop
out
jecxz
out
adc
xor
data16
add
fnstenv
iret
icebp
jno
mov
div
sbb
outsl
adc
aas
pop
int3
arpl
dec
fsts
xor
pop
clc
sbb
lret
mov
fs
sub
mov
mov
xchg
js
mov
in
jae
inc
jnp
pop
xlat
adc
adc
inc
fldpi
xlat
sbb
cmp
pop
mov
cmpsb
mulps
dec
imul
leave
inc
icebp
aaa
and
xor
stos
dec
lock
xchg
into
repnz
mov
jb
adc
into
cmp
pop
add
push
enter
fisttpl
gs
mov
push
in
cwtl
push
mov
lods
mov
xchg
ljmp
pop
call
sti
fs
mov
pop
int
test
cli
rorb
arpl
sub
shlb
hlt
pop
cmp
lret
xchg
pop
push
sub
cmp
jnp
repnz
sub
sbb
mov
loop
cmp
inc
mov
fwait
fs
fistl
stos
imul
adc
psraw
idivb
push
push
mov
scas
cmp
bound
aam
inc
orl
push
jge
cmp
pop
aaa
sahf
cmp
scas
cmp
ljmp
jecxz
aad
mov
fcomps
rol
pusha
out
outsl
sub
out
fsubr
dec
sbb
shlb
dec
outsb
xor
mov
sahf
fisubl
mov
cmp
adc
out
mov
jmp
xor
inc
fcompl
or
nop
dec
in
dec
fadds
pop
inc
mov
add
popa
push
sub
inc
lret
testb
pop
repnz
adc
andl
jp
in
or
or
rcrb
and
xor
int
sbb
rorb
sbb
and
dec
movsb
shrl
call
add
lahf
push
jmp
pop
mov
ret
xchg
inc
and
adc
shll
push
imul
or
pop
rorl
mov
or
notl
sbb
and
bound
pop
insl
test
push
stc
mov
add
dec
jge
pop
aas
jb
push
pop
imul
cmpsb
movsl
mov
mov
xchg
add
jl
outsb
or
push
and
lds
xor
sbb
inc
insb
mov
mov
ja
repz
push
mov
mov
out
inc
les
lock
in
pop
xchg
clc
mov
adc
mov
dec
data16
and
mov
pusha
imull
xor
pop
cli
xchg
pop
icebp
add
and
mov
cmp
or
add
or
js
dec
xchg
or
stos
fidivrs
xor
and
or
out
sbb
dec
lea
mov
ficoml
fnsave
adc
sbb
pop
adc
mov
pop
and
cmp
pop
and
bound
inc
adc
pop
mov
aaa
mov
cmp
into
xchg
jge
mov
mov
cvttps2pi
mov
stc
ror
jge
jno
cmp
xor
cmpsl
cmp
cmp
xor
int3
mov
mov
push
movsb
test
sbb
sub
shlb
cmpsb
mov
mov
icebp
cmp
mov
test
add
sarl
jnp
decl
push
cmpsb
in
xlat
sbb
pop
out
sbb
es
mov
icebp
rcrb
das
outsb
test
adc
cmp
xchg
jno
mov
cli
ficomps
sarl
push
lods
test
pop
sub
fisttpll
pop
cmp
pop
and
xchg
stos
in
xchg
loope
jbe
in
jo
fdivrs
out
leave
sub
dec
call
inc
xchg
inc
jo
mov
mov
pop
adc
sbb
lret
cmp
mov
sub
in
pop
jl
mov
jno
jno
mov
jp
jbe
jnp
jmp
jge
stc
jo
jo
jae
rcrl
push
add
mov
cld
mov
ret
adc
es
stos
subl
call
lea
or
sub
jge
mov
mov
dec
test
jmp
adc
mov
cmp
push
push
xlat
xlat
clc
mov
xor
fcomps
or
jbe
sub
ffreep
orl
test
loopne
pusha
imul
or
xor
sub
push
pop
aam
and
in
movsl
lret
xor
or
popf
sbb
jmp
xor
sbb
cwtl
mov
cmp
stos
mov
sub
xor
adc
xchg
mov
sbb
push
lret
fdivs
repnz
fdivp
add
daa
lcall
test
mov
push
add
jmp
sarb
adcl
in
jne
jle
enter
xor
pop
sbb
or
loope
dec
ds
and
cld
iret
sub
jae
je
outsb
mov
into
add
add
pop
sbb
sub
jno
fsubs
and
sub
addr16
or
aad
leave
sbbb
add
push
sbb
mov
test
frstor
sbb
mov
popa
xchg
pop
cmpsb
push
mov
push
popf
imul
mov
loop
fcmovne
jnp
dec
dec
pop
push
out
leave
pop
rorl
mov
mov
and
imul
into
and
in
or
push
xchg
std
lret
xchg
pop
pop
adcl
push
out
mov
outsl
stc
cld
xchg
push
xchg
or
jnp
aaa
pusha
loopne
dec
push
stos
jbe
push
mov
cmc
xchg
pop
fcom
push
in
mov
rcll
jle
adc
jbe
in
outsb
sub
inc
mov
lods
fsubl
clc
mov
xlat
inc
lds
movsl
ds
push
cltd
adcl
mov
cmpsl
fs
cmpsb
sbb
xchg
iret
inc
xor
out
shlb
jecxz
pop
sbb
cmp
or
cwtl
and
push
mov
pop
sbb
jbe
jb
aas
dec
cltd
sub
lods
js
inc
inc
repz
rcrl
loop
aaa
out
and
scas
push
lds
arpl
adc
xchg
jae
sub
test
xor
in
sub
icebp
lret
sub
dec
jg
rcr
push
dec
xchg
imul
stc
xor
push
pop
pop
push
loope
mov
loopne
jb
in
div
es
call
xchg
adc
stos
stc
out
gs
sahf
imul
mov
jg
or
pop
dec
jno
cltd
dec
icebp
shll
mov
xor
loope
icebp
push
andl
mov
inc
loope
icebp
popa
shll
mov
xor
loope
icebp
push
andl
mov
inc
loope
icebp
add
jno
xchg
mov
icebp
xchg
shll
adc
push
andl
pop
adc
cmp
push
roll
mov
mov
shll
dec
inc
icebp
imulb
dec
outsb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
lods
jge
mov
fwait
xchg
hlt
in
or
cmp
pop
pop
dec
jns
jns
mov
lods
leave
int3
jmp
sbb
or
cmp
imul
orb
ror
cld
stc
in
adc
das
jbe
inc
inc
dec
sbb
adc
shl
cld
test
fldenvs
sub
ds
mov
aad
cmp
pushf
pushfw
rcl
add
inc
insb
je
data16
repz
cmp
dec
dec
pop
imul
gs
pop
outsb
ljmp
xchg
pop
add
cmp
pop
sbb
or
dec
mov
jns
mov
mov
ss
int3
push
hlt
clc
or
loopne
repz
test
loop
jns
fstps
and
pop
mov
movsb
lods
or
or
fistps
sub
leave
sub
mulps
imul
xchg
fildl
jbe
negb
or
rorl
jns
inc
pushf
orb
leave
int3
jmp
sbb
or
cmp
sub
pop
inc
dec
jae
jns
in
cld
cmc
int3
std
int
mov
cltd
stc
cwtl
or
pop
outsl
pop
pop
dec
sub
sbb
adc
out
clc
loopne
hlt
leave
iret
movsl
lahf
dec
jns
jle
pop
js
dec
cmp
ficompl
sbb
ffreep
aam
out
fxch
jmp
sbb
or
cmp
sub
pop
pop
dec
imul
test
int3
jmp
sbb
or
cmp
sub
pop
pop
dec
imul
push
ror
imul
cmp
sub
adc
dec
and
mov
or
add
mov
jae
sarb
into
push
push
pop
ds
stos
dec
push
xor
or
sti
loope
rcrb
mov
fsubl
insb
or
ds
in
xor
or
clc
fadd
push
test
fcompl
adc
jl
jmp
and
in
mov
xor
adc
hlt
cmp
sub
js
and
shl
rclb
pop
xchg
je
sbb
out
enter
mov
imul
adc
stos
stc
mov
int3
mov
shrl
xchg
xchg
ret
test
mov
jb
pusha
add
scas
xor
push
adc
test
or
lock
push
and
mov
sbbb
imul
adc
outsl
add
leave
cld
add
movd
rolb
mov
and
push
cwtl
fcomps
insl
mov
xchg
loope
add
mov
xlat
lea
sbb
pop
push
dec
mov
cltd
mov
fildl
stos
mov
fisubs
pushf
call
les
dec
jne
gs
vmovapd
aad
shll
and
adc
lea
into
insb
test
mov
lret
cwtl
xchg
xlat
xor
jle
fneni(8087
out
mov
mov
mov
mov
fldt
pushf
or
test
addb
mov
mov
push
cld
sbb
loope
mov
lods
and
dec
cs
sbb
xchg
jecxz
aad
nop
jae
es
inc
jo
and
lock
in
iret
sahf
inc
jle
mov
in
out
pop
xchg
jle
pushf
or
cld
sti
xor
push
cmp
ljmp
mov
fdivs
jno
movsb
jne
scas
ffree
mov
fnstcw
jns
sub
push
pop
sbb
or
mov
pushf
arpl
jecxz
push
out
int
inc
fidivl
lret
pop
jecxz
xor
add
insl
xchg
jne
push
inc
sti
ss
cmp
icebp
jb
aam
out
mov
ficoms
add
xchg
add
jo
pusha
repnz
int3
push
jno
jl
add
lods
clc
adc
imul
lret
mov
jl
cmc
cmp
mov
mulb
push
sub
aam
incb
ret
push
pop
iret
and
std
mov
jl
push
jmp
fstl
jle
xlat
sbb
ss
xchg
or
mov
cmp
cmpsb
lret
push
lds
les
sbb
ror
jno
lcall
mov
mov
rcrl
fs
or
add
adc
sbb
sub
dec
movsl
mov
test
cmc
addl
pop
cmpsb
outsl
jbe
xchg
sbb
xor
ljmp
sub
pop
inc
cmp
pushf
or
repnz
pop
fs
or
or
push
cmc
inc
fldcw
or
cmp
ret
stos
xchg
outsb
icebp
add
negl
pop
lock
xchg
lret
jp
pushf
jg
fs
cltd
sahf
xor
ret
data16
rcll
sbb
inc
movb
lods
push
stos
or
cs
clc
outsl
inc
cmpsl
inc
and
popa
cli
js
and
jae
or
int3
rcrb
xchg
popf
jns
mov
mov
les
adc
jmp
stc
rorb
push
mov
pop
std
aaa
mov
jns
popa
sbb
jmp
xchg
sbb
mov
fcmovbe
add
cmpsl
xchg
sub
adc
and
shlb
shrl
negb
mov
push
aas
dec
sub
fwait
add
push
push
pop
add
inc
lock
push
inc
iret
mov
out
mov
ret
mov
mov
aaa
push
jmp
push
sbb
cmp
pusha
cmp
rcll
sahf
pop
xchg
int
rcll
jmp
sti
mov
jnp
inc
add
xchg
sbb
icebp
push
adc
push
pop
cld
push
jno
xchg
add
jp
pop
dec
icebp
sub
cmp
cmp
aaa
xchg
mov
dec
sahf
pop
jb
cmp
sub
cld
cwtl
xchg
cmp
in
pusha
mov
push
sbbl
and
cmpsb
out
jl
cmp
rcll
mov
pop
dec
jecxz
mov
ret
into
popf
xchg
sbb
ret
sarl
inc
mov
sub
jecxz
push
xor
call
mov
aaa
push
ret
push
mov
dec
push
stc
leave
lods
or
ds
sub
pop
bound
fst
xchg
icebp
lahf
mov
fwait
in
cmp
in
xchg
stos
mov
js
in
andl
add
addl
mov
out
shlb
and
jecxz
mov
xlat
loop
enter
repnz
xor
mov
sub
imul
sbb
xor
jg
arpl
leave
pop
xchg
mov
jno
inc
adc
in
sbb
insb
iret
out
push
aad
pop
adcb
cmpl
mov
lcall
jae
test
ret
inc
repz
xor
loopne
shlb
dec
ret
sbb
lods
push
rorb
mov
and
dec
int
mov
mov
test
or
pop
gs
pop
dec
push
fidivrl
push
outsb
push
pushf
subb
push
sub
xlat
into
fs
or
mov
daa
rcl
fidivrl
cmc
shrb
es
inc
sahf
jns
in
sub
into
xor
sbbl
add
add
pop
xchg
jb
xchg
push
daa
push
xor
inc
cld
xor
sub
add
xchg
out
push
fbld
cmc
dec
loop
aad
push
ret
jne
ss
sti
cmp
orl
adc
in
inc
xchg
test
mov
pop
xchg
mov
js
lods
dec
aaa
dec
jbe
mov
xchg
mov
xor
dec
add
fcmovu
fmul
leave
add
lret
daa
inc
in
sub
ret
ret
aam
outsb
lods
es
sub
pop
je
mov
in
pop
dec
mov
jg
fwait
pop
push
icebp
popf
cmp
sub
pop
mov
in
mov
push
sarl
xor
js
adc
popf
dec
test
and
mov
xchg
mov
jae
sbb
add
sub
mov
mov
addr16
stos
gs
and
mov
sti
xor
outsl
cmp
sbb
loop
and
xor
inc
movsl
mov
cmpsb
sbb
arpl
int3
ljmp
aad
mov
inc
sarb
push
inc
mov
lods
repz
testl
pop
fisttpll
subb
sti
or
xchg
loope
mov
push
in
or
out
outsl
jl
lods
xchg
in
push
jbe
outsb
xchg
mov
imul
das
lcall
inc
or
sbb
aas
popa
mov
add
pop
loope
fldcw
inc
mov
gs
xchg
xchg
push
cmp
cmp
scas
nop
in
out
in
outsl
mov
xchg
sahf
pop
xchg
aam
push
and
fimull
insb
nop
lock
movsl
fsubrl
dec
xor
bnd
xlat
mov
inc
les
adc
pushw
ret
stos
mov
pop
aad
xor
mov
imul
xor
push
pop
std
fs
sahf
flds
lcall
add
aas
xchg
fidivs
dec
rcll
mov
es
inc
fstpt
mov
xor
outsl
repnz
inc
lret
shll
sub
arpl
fimull
lods
loope
dec
rol
add
mov
mov
or
inc
dec
out
pop
jnp
xchg
add
lret
and
movsb
jb
fstpl
xchg
mov
add
loopne,pt
sbb
xor
test
jecxz
cmp
ds
stos
in
mov
xor
loopne
dec
out
shl
dec
cmc
push
dec
jae
mov
outsb
fiadds
jecxz
mov
icebp
sysenter
adc
mov
mov
lret
and
hlt
mov
jl
mov
pop
inc
pop
push
test
sub
xchg
lock
pop
ljmp
xchg
sbb
into
sbb
fsubrl
movsb
call
ds
hlt
or
movsl
jle
xchg
cli
pop
cmc
cmc
lds
scas
rcr
or
mov
push
cltd
and
mov
sti
pop
pop
dec
in
xor
test
popf
add
ljmp
inc
leave
shlb
cmp
cwtl
ss
pushf
push
fsubrl
outsb
sub
mov
inc
fsubrs
sbb
arpl
jecxz
ljmp
inc
jg
pop
outsb
imul
xor
mov
outsl
xor
icebp
xchg
ds
jns
sbb
jmp
cld
mov
xor
test
add
adc
mov
mov
xchg
pop
mov
sbb
or
pop
aam
jbe
cwtl
pop
and
jge
pop
xor
int3
pop
incb
imul
shll
fists
mov
mov
call
inc
pop
fildl
or
mov
popa
mov
xor
lcall
bound
dec
nop
pop
pop
xor
or
test
or
les
stos
loop
outsb
aas
adcl
aas
mov
es
repnz
lahf
mov
pop
inc
cmp
adc
cs
sbb
sbb
ret
cmp
inc
scas
stc
dec
xchg
mov
pop
cmp
jle
stos
hlt
shl
push
ja
cltd
push
sub
movsb
pop
movsb
xchg
cmp
lret
stos
jno
mov
xor
cld
lods
ret
stc
in
xchg
dec
push
roll
dec
dec
inc
adc
pop
repz
lods
test
or
pusha
jecxz
rol
stos
ljmp
enter
xchg
daa
adc
pop
xchg
pop
dec
cmp
inc
les
leave
inc
xchg
sbb
push
adc
popf
add
sbb
cmp
out
in
sbb
adc
imull
cmp
cld
inc
dec
jg
push
push
shrl
sbb
imul
pop
cmp
xor
out
cmp
dec
roll
cli
mov
dec
mov
dec
jecxz
rcll
pop
jne
cli
push
ljmp
or
cli
jmp
in
pushf
mov
ss
pusha
push
and
add
pop
lret
nop
ret
push
xchg
js
mov
fsubl
adc
and
pusha
ficompl
xchg
divb
mov
xor
inc
lret
fisubl
push
cmpsb
inc
imul
pop
jp
ret
lock
mov
fwait
push
jle
in
push
dec
jnp,pt
ja
fwait
insl
jl
and
popa
imul
add
into
adc
insl
fstpt
adc
cmp
jno
push
add
es
popf
push
roll
mov
test
pop
xor
or
sub
imul
mov
lock
sti
jl
aam
les
aaa
xchg
jle
mov
mov
fisttps
pop
jnp
mov
nop
or
stos
mov
ret
jl
pop
mov
rcrl
jae
into
mov
jge
stos
sbb
cmp
adc
inc
rorb
cmp
or
filds
shl
or
sub
loopne
in
push
sub
lahf
popa
adc
fcoml
movsl
pop
xor
lds
dec
lret
nop
mov
and
push
test
add
cmp
call
movsl
push
std
add
cli
jecxz
std
mov
adc
cmp
mov
clc
add
cltd
stos
pop
and
pop
repz
jne
jns
fisubs
subl
xchg
pop
mov
adc
mov
cmpsb
in
fistps
pop
in
or
push
cmpsb
jp
and
xchg
popa
cmp
mov
cltd
xor
and
xchg
pop
mov
jbe
xor
fwait
inc
fsub
mov
in
pop
dec
adcb
cmp
mov
mov
add
xor
clc
movsb
mov
xchg
rclb
inc
jg
dec
push
push
push
cli
or
aaa
sbb
pop
pop
and
sub
shlb
pushf
or
xchg
jbe
pop
sub
jecxz
push
push
out
xchg
jge
and
lahf
sbb
lods
adc
jb
ret
into
sbb
mov
and
test
pop
mov
dec
ja
dec
mov
pushf
mov
hlt
divl
sti
push
xchg
or
xchg
mull
jl
mov
and
das
pusha
xlat
les
add
clc
cmp
pop
inc
cli
popa
inc
outsl
inc
das
loope
lods
andb
cmp
insl
int3
inc
out
ja
gs
cld
or
pop
cs
adc
xchg
push
add
popa
or
jp
es
pushf
inc
je
out
mov
and
xor
or
cld
jl
push
jge
bound
aad
int
mov
mov
dec
pop
bound
mov
and
enter
cmc
leave
loop
ds
or
popl
sarl
stc
dec
shr
out
loop
pushf
test
roll
ffreep
nop
xor
dec
push
andb
aad
adc
test
xlat
add
cmp
jg
aam
notb
adc
mov
addr16
mov
pop
scas
adc
inc
mov
rol
fldenv
xor
mov
popf
in
frstor
stos
dec
loope
enter
daa
shrb
mov
in
mov
into
rorl
jb
repz
mov
ja
ss
repnz
push
pop
repnz
sbb
dec
dec
cmp
inc
xor
bnd
pop
cmpsb
fsts
lret
lcall
cs
mov
icebp
inc
add
je
ss
aam
jmp
mov
xchg
ss
sbbb
orb
inc
andl
dec
test
mov
xor
push
inc
mov
add
adc
jno
push
add
or
fsubl
lahf
inc
loop
push
jle
faddl
lods
ljmp
int
and
es
add
pop
jp
cltd
out
mov
xchg
xchg
add
mov
pop
mov
lods
mov
sub
insl
sbb
push
ja
imul
shrl
fistps
mov
and
pusha
outsb
sbbl
stos
xlat
mov
gs
pushf
xor
mov
ret
frstor
pop
aam
call
popl
stc
xchg
pop
cli
jb
cmpsl
fbld
subb
data16
outsb
pop
mov
out
fimull
pop
sub
sub
cmp
push
insb
lcall
inc
cltd
xchg
add
mov
ret
inc
add
or
mov
inc
mov
cmovp
popa
adc
mov
ja
mov
std
cltd
dec
pusha
gs
mov
bound
cmpsl
push
jecxz
push
fistl
pop
pop
clc
lods
lret
xlat
in
push
push
out
cmp
add
in
out
mov
xorb
negl
ret
icebp
rclb
cmp
xchg
in
push
xor
into
scas
push
nop
repz
and
iret
mov
xlat
in
xor
cwtl
mov
filds
fbstp
and
adcb
xchg
aaa
or
cmp
fildl
sar
add
aaa
pop
push
test
scas
and
inc
adc
and
pop
dec
sbb
mov
sbb
notl
test
xor
xor
push
mov
mov
jns
pop
sbb
dec
lcall
popf
adc
sub
mov
rolb
enter
leave
ljmp
enter
dec
sahf
jae
or
pop
loop
sub
xor
outsb
xor
ljmp
xchg
or
and
add
movsb
test
xchg
mov
fsts
mov
in
dec
out
adc
mov
in
addr16
imul
mov
dec
fcmovbe
push
mov
clc
iret
fwait
insb
inc
lods
xchg
sub
mov
xor
loop
jmp
das
xlat
dec
xor
jge
push
mov
xor
ret
sbb
int
jns
pop
lock
xchg
rcll
in
push
faddp
and
js
addr16
mov
dec
mov
mov
jp
xchg
add
or
sbb
addr16
repnz
add
jmp
sub
sbbl
add
lahf
std
lahf
lret
jle
aas
rcrl
les
jno
jo
into
inc
lret
fs
inc
xor
bound
arpl
add
rcl
sbb
into
pop
mov
leave
je
xchg
mov
arpl
push
decb
jne
mov
sub
cmp
jl
loop
ret
inc
jle
and
jge
out
je
cltd
fiadds
xlat
xor
aas
notb
frstor
sub
xchg
ret
ret
sbb
jmp
inc
pop
mov
push
je
jns
mov
jno
shlb
inc
pop
mov
aas
push
pop
insl
inc
insb
in
xor
js
call
sbb
dec
out
test
mov
fs
add
jae
mov
lcall
mov
ret
xchg
mov
fdivrs
iret
jbe
dec
push
push
sarl
incl
xchg
or
dec
inc
inc
lock
pop
jae
xor
icebp
ds
arpl
popf
xor
dec
xchg
lahf
or
repz
cwtl
sub
aad
addl
fwait
shlb
in
mov
rcrb
fidivs
aam
mov
lahf
and
mov
adc
fs
jb
and
xchg
int3
sti
add
jmp
es
cwtl
loopne
movsl
and
out
mov
ljmp
lods
mov
mov
add
push
aas
divb
pop
cmpsb
push
push
or
or
stos
push
dec
lods
icebp
dec
mov
push
xchg
sahf
cmp
jno
int
inc
sub
lods
rcrb
enter
mov
test
rorb
loopne
pop
jge
cmc
ss
into
adc
mov
adc
sub
shrb
ficompl
xor
shlb
es
repnz
and
pushw
push
enter
pop
fcompl
or
push
dec
scas
loope
dec
andb
add
cmpsl
andb
push
adc
and
std
xor
jno
stos
and
mov
mov
arpl
push
loop
sub
out
mov
andl
sub
xchg
pop
pop
pop
movsl
popf
pop
dec
cmc
xor
inc
orb
les
cmpsl
mov
push
loopne
call
sbb
sbb
dec
fsubrl
repz
xor
and
loopne
fwait
xchg
xchg
sbb
mov
mov
add
fdivp
cmp
lcall
pop
pop
ss
je
in
cwtl
out
out
mov
mov
nop
mov
test
ret
rcll
pop
jbe
arpl
jl
inc
and
jae
sub
pop
mov
adc
cli
mov
sbb
pop
fisubs
fildl
mov
call
add
cld
jo
cmp
and
orl
mov
in
int3
add
mov
or
sub
xchg
sbb
sub
ljmp
push
dec
adc
fidivl
add
adc
xchg
mov
aad
jg
push
jo
dec
pop
lds
adc
fidivrs
pop
push
inc
xor
aad
test
jl
pop
and
push
rolb
dec
test
jae
or
cmp
jp
mov
sbb
call
sub
mov
push
pop
adc
test
push
and
add
add
mov
lods
mov
lea
or
add
cltd
sarb
add
and
mov
sub
xor
lret
loopne
mov
push
mov
xchg
daa
leave
cmp
add
mov
pop
je
lcall
out
test
mov
imul
repnz
jo
mov
es
mov
aam
ds
adc
and
les
mov
sub
shl
pop
xor
fistps
dec
sbb
mov
adc
pop
ss
mov
fcom
mov
repnz
call
pop
dec
adc
jb
repnz
xor
xlat
int3
repz
push
mov
into
addr16
sbb
cmc
dec
push
and
or
mov
outsb
add
movb
jnp
or
mov
bnd
xor
mov
jg
ret
xor
dec
cld
ret
push
push
mov
idiv
cwtl
xor
ret
jbe
cmp
xchg
xor
aad
xor
mov
mov
mov
cmp
mov
cmp
adc
cmp
push
js
dec
pop
push
mov
int3
jmp
sbb
or
cmp
sub
pop
pop
dec
imul
test
int3
jmp
sbb
or
cmp
sub
pop
pop
dec
imul
test
int3
jmp
sbb
or
cmp
sub
pop
pop
dec
imul
test
mov
int3
imul
out
cmpl
ds
mov
addl
push
adc
dec
jns
dec
enter
call
stc
cwtl
insb
test
mov
sub
js
or
imul
mov
clc
mov
fwait
mov
sub
js
or
imul
adc
test
loopne
sti
xchg
stos
leave
add
pop
jbe
jbe
pop
dec
mov
ret
dec
or
add
add
mov
sar
or
outsl
in
popf
jg
mulb
cli
pushf
xchg
and
or
push
notb
cwtl
jge
ja
lea
mov
sarl
mov
hlt
or
enter
pop
pop
xchg
je
clc
adc
int
js
or
aad
or
js
imul
enter
fcompp
jbe
lock
test
mov
add
jl
dec
cmp
fadds
clc
data16
add
lods
inc
mov
pusha
das
jg
lock
in
sub
test
adc
cltd
cs
ror
push
cmp
push
jns
imul
mov
clc
mov
fnstcw
sub
adc
jns
mov
mov
xchg
iret
in
cwtl
icebp
lcall
sub
cmp
sbb
or
lods
rcr
test
lcall
and
jp
jno
insb
or
imul
mov
clc
mov
fnstcw
sub
js
or
imul
mov
clc
mov
fnstcw
pusha
shrl
mov
xchg
daa
daa
mov
add
in
imul
and
inc
xchg
mov
dec
fstps
mov
xchg
sti
inc
sub
sarl
inc
pop
lahf
repz
mulb
xchg
cmp
mov
movsb
lcall
hlt
ja
addb
pop
cltd
sub
pushf
clc
xchg
aad
cltd
and
sbb
fs
fbld
cmp
jb
loope
jp
pop
rolb
repz
test
bound
mov
mov
cld
es
push
or
mov
and
js
xchg
ss
sub
jl
jae
mov
int3
and
mov
mov
int
iret
mov
int
mov
aaa
adc
xchg
in
sbb
test
cmc
xor
int3
mov
pop
fistl
sar
cmpsb
inc
loope
les
outsl
lret
add
fcoms
lods
xor
push
aad
or
sub
mov
mov
jo
jg
stos
adc
and
xor
in
bound
dec
adc
imul
jge
sub
sub
int
xchg
mov
inc
flds
lods
mov
fwait
stos
add
pop
jnp
xchg
call
cwtl
xor
sbb
inc
adc
cmp
dec
repnz
es
inc
mov
sbb
cmpsb
jno
or
mov
in
inc
xor
push
xchg
pop
fwait
pusha
stos
xchg
xchg
gs
cltd
daa
pop
sbb
mov
repz
rcrl
fistpl
cs
fdivrs
cmp
cmp
jg
and
clc
jp
sub
sub
pop
mov
aaa
fwait
sub
pop
cmp
sbb
test
jno
movsl
imull
repnz
and
outsb
fmuls
stc
shlb
mov
sarl
sar
xor
sub
divb
jp
inc
add
mov
inc
cmc
xchg
data16
insl
xchg
push
stos
fdivrl
subl
push
call
sbb
clc
push
jmp
fadd
jge
lret
lret
xchg
cltd
adc
sub
jmp
sahf
and
dec
jmp
adc
in
out
arpl
jo
or
sbb
mov
jge
out
cmpb
rcll
mov
dec
dec
jbe
adc
cmc
or
jns
nop
adc
movsb
adc
lahf
in
cmp
lret
out
rep
imul
add
lock
pop
xchg
bswap
cmp
add
icebp
das
lcall
insb
jecxz
loope
into
sbb
lahf
inc
icebp
mov
sti
xor
icebp
add
out
shll
add
cmp
mov
inc
and
sbb
std
movsl
icebp
xchg
fcompl
dec
test
xor
insb
or
sbb
jge
popa
rclb
cmpb
test
cmpl
jne
mov
push
mov
rorb
jp
pop
or
div
fbstp
cwtl
adc
cmp
push
ja
jne
add
pusha
lods
and
dec
mov
xchg
bound
push
push
out
and
scas
dec
sub
adc
aaa
xor
push
add
jb
repnz
out
mov
mov
dec
loop
loopne
les
dec
ljmp
dec
mov
in
sahf
and
jp
clc
pop
enter
les
xchg
cld
mov
lahf
dec
add
and
dec
mov
jp
cmc
imul
jne
mov
imul
push
pop
add
outsl
add
sub
loope
and
xor
test
test
fnstenv
mov
cmovo
insb
dec
jne
inc
icebp
subb
cmpsl
addr16
js
leave
iret
into
dec
popa
ds
lds
jne
in
fst
dec
sbb
fsubs
xchg
inc
clc
bound
inc
fwait
bound
arpl
decl
lret
add
xchg
cs
hlt
iret
cmp
push
js
daa
int
mov
je
out
sbb
dec
sbb
mov
lds
push
ror
mov
and
xor
push
pop
pop
loopne
out
sahf
sti
stc
jl
je
jb
out
je
in
pop
sbb
sbb
leave
rolb
push
or
sbb
in
scas
cmpsb
push
scas
orl
push
add
push
shlb
in
adc
scas
xchg
shlb
mov
xor
jle
mov
out
loop
inc
jnp
mull
mov
cmpsb
fwait
inc
dec
pop
fs
lock
outsl
mov
sbb
or
jbe
pop
repz
dec
mov
pop
daa
scas
popa
inc
xor
xchg
rorl
test
sar
add
jecxz
out
inc
loop
inc
lea
stos
rol
mov
shll
fwait
fs
es
lock
jl
and
push
mov
add
aaa
and
int3
lret
jmp
dec
mov
in
mov
aas
je
dec
pop
fmull
in
xor
push
jne
lcall
adc
jmp
lahf
xor
stc
lcall
push
test
jecxz
scas
lret
loop
jl
js
movsb
sbb
outsb
imul
inc
mov
push
aad
imul
mov
xor
shl
push
aam
cltd
inc
sbbl
mov
test
mov
lods
adc
mov
outsb
mov
mov
cmp
adc
and
dec
test
das
mov
xchg
jmp
dec
pop
clc
xchg
sbb
stos
outsl
mov
or
fnstcw
mov
sub
enter
add
fldcw
or
test
mov
lods
xchg
cmp
sub
mov
imul
imul
lret
ror
mov
or
xor
lret
aam
xor
or
pop
dec
sub
mov
inc
dec
ret
ret
pushf
inc
addr16
and
jns
mov
es
inc
loope
mov
push
xor
mulb
lods
call
push
mov
je
mov
std
pop
cmpsl
dec
pop
jne
fcmovnu
lds
push
into
pop
daa
in
dec
jmp
imul
test
push
push
jno
out
and
incb
cmp
cmp
cld
pop
jmp
loop
dec
cmp
mov
mov
and
pop
lret
push
nop
imull
pushf
movd
push
mov
test
and
mov
ss
ja
jecxz
loopne
popa
nop
push
pop
cs
xlat
xlat
jmp
shll
push
lods
movsb
mov
cmc
test
ljmp
dec
or
cmp
cli
inc
push
and
mov
int3
cmp
fcmovu
pop
shlb
sbbl
loop
outsl
push
iret
mov
mov
or
movsl
jb
cmpsb
mov
sarb
stos
ret
insl
sub
inc
sbb
sbb
lods
mov
shrb
out
xor
rorb
cmp
jmp
ljmp
aam
xor
push
clc
mov
jnp
rcrl
mov
mov
push
iret
les
jns
mov
in
loope
mov
ds
dec
or
rcr
fsubs
push
mov
add
icebp
popa
imul
add
sub
xchg
jecxz
mov
rcll
scas
pop
jno
or
cmp
push
inc
sti
xlat
mov
daa
fdivrl
dec
or
insb
orl
in
shlb
fcmovnb
std
rcrl
insl
rcll
std
cmp
imul
xchg
nop
out
cmc
lahf
pusha
mov
sbbb
adc
or
fldcw
out
adc
sahf
sub
icebp
shll
hlt
out
add
inc
mov
jmp
pop
and
insl
out
xchg
subl
popa
insl
fwait
repnz
in
and
in
xchg
or
stc
movsl
cmp
sub
out
sti
push
xchg
lea
popa
not
mov
movsb
cs
imull
push
push
xor
pop
mov
and
out
push
push
xchg
ja
xlat
shrb
mov
fiadds
pop
rcll
lret
xchg
ljmp
ljmp
cltd
xor
xchg
cmp
xor
mov
push
lret
lods
jp
and
clc
outsb
pop
int3
cmp
clc
or
pushf
aaa
jecxz
xchg
push
out
push
pop
push
iret
sub
bound
gs
dec
fwait
push
outsb
movsb
in
jg
rcrb
out
dec
rcll
adc
sbb
in
xchg
das
leave
les
adc
mov
sarl
adcb
out
movsl
cmpsb
cmpsl
xchg
fld
call
push
addb
mov
inc
fwait
fwait
pop
jne
dec
and
sbb
insb
cli
je
mov
and
mov
jo
in
jb
sub
mov
sahf
push
call
enter
mov
cli
es
movsb
addl
stc
mov
push
inc
in
push
addr16
push
inc
roll
mov
dec
adc
sub
cwtl
sti
ljmp
outsl
out
xorl
pop
addb
push
dec
or
popa
bound
xchg
out
adc
adc
and
lret
or
jae
out
mov
add
mov
rcll
push
sub
jo
aad
cmp
dec
ss
stc
das
sub
shlb
xchg
push
cmpsw
lds
fwait
and
xchg
cmp
inc
mov
xlat
repnz
mov
sahf
ljmp
xor
adc
cmp
inc
fnstsw
jmp
sbb
mov
imul
mov
cmp
imul
std
jecxz
movsl
in
cmpsb
ficoml
cmp
ss
iret
repnz
xor
adc
jge
xchg
mov
mov
mov
mov
int
movsb
sahf
cs
fwait
fwait
mov
jae
shufps
rclb
pop
lods
loop
xlat
out
lea
adc
add
fstp
xchg
dec
push
stos
adc
stos
pop
cmp
in
push
mov
push
pop
xor
sbb
fcmovnu
lods
pop
lcall
repnz
cltd
bound
push
lcall
push
or
stos
fcmovu
sub
pusha
sarb
and
cli
inc
push
aam
sbb
jmp
std
xor
andb
cmpsl
and
and
jge
andl
dec
jg
out
cmp
outsb
pop
sub
dec
fists
jle
pop
push
and
insb
inc
je
mov
lahf
sub
pop
pop
dec
aad
jae
mov
add
xor
lea
ljmp
and
cmp
pop
rolb
aad
mov
test
mov
dec
and
xor
push
mov
cld
pop
fistps
stos
mov
cmp
int3
aad
mov
test
inc
dec
jecxz
std
sbb
mov
imul
out
fsts
mov
push
and
mov
mov
in
mov
sbbl
adc
fldl
mov
mov
loop
jl
and
insl
test
xchg
sub
popf
pop
cmp
sbb
aam
repz
sbb
aam
cmpsl
pop
xchg
and
mov
in
dec
lock
insl
add
add
xchg
xchg
add
mov
lret
mov
lahf
mov
mov
jge
mov
bt
loop
sarb
pop
lods
fidivs
xor
or
dec
icebp
add
lret
into
inc
out
orb
or
mov
lcall
add
mov
loopne
fsubs
xor
add
dec
xor
mov
pop
xchg
sub
adc
in
sub
dec
insb
pusha
dec
dec
and
inc
and
cmc
insl
or
pop
jnp
mov
add
push
dec
not
push
shl
ficoms
out
mov
pop
pop
rcl
bound
rsqrtps
int
mov
testl
push
subl
push
or
sbbl
push
fwait
scas
xor
aad
xor
adc
and
es
movsl
adc
outsl
es
fiaddl
add
sub
dec
fdivs
fadds
mov
push
aad
pop
stc
mov
lret
mov
enter
cmpps
test
sub
pop
and
push
push
pop
ss
leave
daa
lcall
divb
dec
push
insb
fistl
jns
bound
mov
xor
sbb
push
adc
out
add
lock
push
stc
push
outsl
imul
and
fidivrs
pop
pop
scas
mov
das
pop
ss
push
fisubl
in
xchg
fmull
in
js
mov
mov
xchg
enter
pop
leave
xor
fs
stos
add
dec
out
das
inc
std
jb
cli
xor
sub
cld
inc
js
out
or
mov
push
mov
push
repnz
sub
mov
mov
push
cmovle
dec
jno
test
sub
aas
xchg
addr16
fwait
dec
sbb
cmp
jge
fildll
sub
and
test
and
dec
mov
xchg
inc
push
push
aas
push
push
ret
push
insb
sub
lods
jge
stos
fcmovb
and
dec
out
push
lret
cmp
jmp
add
sbb
inc
nop
cs
sbb
sarb
push
pop
rolb
popf
mov
dec
stos
adc
adc
loope
push
jo
mov
imul
insl
push
jae
imul
xchg
cmpsl
insb
push
dec
add
in
push
add
cmp
cmp
outsl
jnp
xchg
lea
mov
sbb
rcrb
dec
ror
scas
insl
inc
in
dec
mov
mov
mov
sar
in
or
sub
pop
imul
push
lahf
adc
aaa
scas
out
mov
pop
pop
mov
ret
sbb
mov
mov
cmp
sub
add
or
xchg
test
push
dec
lahf
fnsave
loop
jl
pop
lcall
lds
push
jmp
xchg
add
or
push
pop
sbb
push
mov
loopne
rcll
test
ffreep
jbe
std
inc
loopne
dec
jg
xor
mov
shrl
dec
pop
cld
shlb
mov
inc
loope
scas
pop
out
pop
and
inc
dec
jge
xor
pop
dec
pop
xchg
inc
xchg
rcrl
call
add
repz
add
cmp
add
xor
je
sbb
inc
dec
fsubl
mov
xor
mov
pop
dec
adc
rolb
mov
pushf
cmpsb
sbb
dec
dec
in
mov
jne
xchg
test
xchg
dec
lret
sub
out
pop
scas
mov
repnz
stos
sti
ds
sub
pop
aad
fildll
cmp
inc
fsubrl
xchg
xor
je,pt
sub
adcb
dec
lahf
imul
and
xorl
jle
daa
jbe
pop
pop
or
mov
stos
sbb
in
insl
dec
jge
mov
scas
add
sub
insb
in
arpl
inc
push
and
and
cltd
sub
lret
ficompl
pop
sti
fistpll
test
gs
jns
sbb
nop
push
adc
movsb
movsb
repnz
sub
xchg
sub
fdivl
inc
cmc
push
ja
out
aad
in
fdiv
fstps
vpcmpgtd
pusha
jecxz
arpl
in
pop
mov
out
aaa
into
mov
and
lea
xor
out
jge
out
mov
aaa
pop
iret
pop
psllw
push
sbb
cmpsb
ficomps
fisubs
add
sub
cmp
sub
addr16
lcall
andl
xchg
subl
jno
and
pushl
push
stos
cmpsl
push
jae
scas
rclb
outsl
int3
je
shlb
mov
int
loop
and
cmpsb
pop
mov
jmp
xchg
popl
dec
div
cmp
imul
in
fcmove
jnp
iret
pop
test
dec
sbb
and
adc
push
inc
adc
pop
xor
loopne
sub
mov
fsubl
mov
xor
inc
repz
shrl
pop
rol
mov
mov
test
mov
pop
fbstp
jl
pop
fsqrt
movsl
inc
jmp
out
out
mov
jne
mov
leave
mov
nop
lahf
mov
ljmp
test
sub
mov
ljmp
mov
xlat
and
int
cwtl
inc
inc
mov
rcrb
lods
inc
xor
ficoms
test
xor
jno
xor
sbb
mull
adc
inc
adc
sub
orb
xchg
push
cmpsb
outsb
mov
jae
push
sub
xlat
lahf
push
xor
adc
loop
shlb
mov
lahf
cli
loop
rol
cli
shlb
lds
xchg
enter
insb
sub
xchg
push
inc
ret
push
ret
pop
jno
or
mov
mov
lcall
sub
sub
push
mov
adc
jo
repnz
and
aam
imul
sbb
in
mov
outsl
pop
out
dec
divb
sbb
inc
fwait
movq
ljmp
push
enter
in
insb
jnp
and
dec
movsl
xchg
pop
bound
xchg
out
pop
test
sbb
sbbb
sub
inc
mov
bound
jbe
test
arpl
cltd
and
add
inc
push
scas
dec
inc
mov
test
fwait
cmp
imull
mov
fucomi
xchg
rorl
dec
mov
int3
stc
xchg
pop
addr16
xchg
xor
std
fadds
clc
cwtl
jnp
adc
stos
imul
adc
pop
pop
pop
mov
movb
push
jae
lret
xchg
aad
imul
pop
sbb
push
mov
cmpsl
pop
js
test
in
pop
das
add
add
das
pusha
test
mov
push
push
mov
mov
push
int3
ret
pop
bnd
fwait
es
enter
cld
push
gs
scas
pop
push
xor
xor
cmp
lds
cmpsb
mov
xor
or
outsl
pop
cli
ret
jno
aam
cmp
sahf
push
imul
xchg
xchg
ret
and
mov
test
jae
inc
inc
repnz
mov
shlb
shll
cmpsb
jne
outsl
sub
or
mov
dec
sub
or
testl
out
jmp
jmp
push
repnz
sbb
jmp
sbb
inc
adcb
addb
lcall
adc
mov
jno
addr16
incb
xchg
out
ds
and
push
mov
ljmp
dec
int3
sub
adc
ja
pop
sbb
mov
or
in
sbb
pop
std
loop
fprem
in
sub
push
mov
cwtl
addb
mov
vcvttpd2dqy
scas
hlt
jge
dec
adcl
sub
aam
sbb
jp
cld
pop
ss
mul
test
xchg
rolb
stc
lcall
dec
inc
stc
sbb
and
or
adc
dec
mov
and
jge
mov
pop
in
aad
syscall
inc
cmp
lock
ja
mov
mov
mov
decb
sbb
dec
rclb
jge
xor
cli
push
pushf
ret
xor
jl
xor
scas
pop
mov
mov
stc
fdiv
add
in
mov
cmp
and
mov
daa
int
shl
cmp
pop
pop
xor
jae
jns
or
mov
test
daa
or
push
ds
sub
lods
cwtl
mov
in
leave
mov
sahf
popf
pop
jne
stos
dec
push
sub
mov
sbb
cld
push
aaa
adc
mov
ss
stos
aad
in
and
jbe
ljmp
cmp
or
jae
into
int3
xor
out
mov
push
push
jb
flds
inc
mov
leave
adc
add
divl
ret
jae
add
loop
sub
jg
mov
push
xor
subl
xor
into
xchg
pop
jge
and
cmp
dec
xchg
js
dec
xchg
ja
xor
les
add
pop
sub
lods
mov
lahf
cld
ror
sahf
add
add
sbb
cwtl
push
jl
cwtl
scas
loope
mov
sub
and
cmp
das
xchg
or
jmp
mov
hlt
int3
fcompl
lahf
push
xchg
sub
adc
mov
mov
xchg
ds
pop
cmp
or
adc
rorl
iret
mov
test
sbb
mov
xchg
das
push
aam
hlt
pshufw
cltd
or
int
rcr
je
dec
lahf
mov
sbb
sbb
lea
jb
sbb
pop
test
aas
leave
rcll
outsb
enter
test
bound
cmp
fs
je
sub
push
sub
mov
mov
js
or
imul
mov
clc
mov
fnstcw
sub
js
or
imul
mov
clc
mov
fnstcw
test
or
jmp
enter
call
stc
cwtl
jmp
dec
cmp
push
jns
imul
mov
clc
pushl
push
push
es
mov
cltd
ss
xor
push
or
cmp
imul
cltd
ss
fnstenvs
inc
stc
push
or
cmp
imul
cltd
ss
fnstenvs
inc
stc
push
or
cmp
sbb
pop
es
inc
test
mov
add
mov
loope
cmp
pop
shrl
jbe
pop
inc
jmp
pop
dec
add
hlt
sbb
mov
pop
jge
hlt
sub
xor
jp
xor
or
dec
sub
and
or
jns
mov
cltd
aaa
ret
pop
mov
data16
scas
stc
push
test
push
imul
mov
inc
jmp
data16
loope
dec
mov
jp
movsl
sbb
cmpsb
mov
js
je
data16
push
xor
lods
sub
stc
rcrl
jmp
xchg
sbb
aam
sub
stc
inc
es
ss
fnstenvs
inc
stc
push
or
cmp
imul
in
in
inc
rclb
or
es
jl
sub
inc
clc
dec
mov
or
in
addr16
jl
push
aad
leave
add
insb
jecxz
fisubrl
sarb
cli
dec
mov
cltd
add
jbe
inc
jb
bound
inc
stc
push
or
cmp
imul
cltd
ss
fnstenvs
inc
stc
push
or
cmp
imul
mov
aaa
mov
push
sub
sub
fldl
ror
enter
aaa
jb
cmp
pop
pop
in
loop
cmpsb
pusha
pop
cmc
jae
adcl
lods
incl
cmc
pushf
cmc
mov
addr16
mov
sbb
icebp
adcb
add
neg
cmp
shlb
negb
jb
je
les
xchg
ficomps
and
movsl
add
out
or
lock
mov
sbb
hlt
inc
push
and
shll
mov
xor
mov
cmp
fs
rcrb
push
shl
mov
lock
repz
adc
mov
imul
cwtl
inc
ret
fstps
out
jge
xchg
rorb
sub
sahf
cmc
hlt
divb
hlt
sahf
leave
lock
mov
mov
sbbl
add
icebp
xchg
mov
aaa
iret
es
inc
ljmp
inc
jne
bound
bound
loopne
js
xor
xchg
jg
jae
fstl
and
xchg
xchg
insb
push
and
movsb
cltd
js
push
adc
or
sti
sub
lds
push
repnz
sbb
or
pop
icebp
sti
jno
mov
in
push
xorl
hlt
xor
divb
cltd
mov
insl
mov
arpl
mov
dec
add
test
jo
pushf
add
pop
or
jno
jmp
mov
pop
stc
sub
dec
mov
loopne
adc
sub
lret
test
imul
mov
inc
dec
fistl
pop
ret
decl
fbld
call
mov
push
jg
fsubrp
mov
test
scas
call
enter
out
lcall
xchg
inc
adc
scas
icebp
out
shlb
icebp
lea
sub
les
in
in
push
outsl
sahf
roll
stc
gs
fidivl
and
jbe
add
pop
outsl
push
add
outsb
pop
mov
cmp
pop
xor
stos
ss
cli
jae
insl
mov
sbb
movsb
dec
popa
stos
push
lahf
call
push
int3
pop
mov
dec
push
push
ds
push
movsl
mov
idiv
pop
push
fistps
jbe
sbbl
loope
adcb
push
sub
pop
mov
pop
movsl
push
mov
xor
popa
mov
xor
punpckhdq
loopne
in
and
xlat
cmp
rcrl
int
data16
push
or
pop
add
adc
cmpsb
add
leave
cmp
pop
dec
jb
xor
mov
cmp
lahf
stos
dec
ret
cmc
and
fwait
xchg
sub
imull
and
adc
adc
out
ljmp
xchg
sbb
push
push
je
fidivl
in
xchg
mov
dec
js
test
jnp
and
adc
push
cmp
orl
pop
xor
in
cli
dec
dec
add
mov
xchg
test
mov
jecxz
aas
push
mov
lret
pop
mov
pushf
int3
dec
pop
mov
rorl
jne
lahf
mov
push
mov
inc
sbb
xchg
imul
lods
mov
mov
dec
push
in
out
mov
shrb
ja
add
mov
stos
or
lds
inc
cmpsb
js
pop
mov
cltd
xchg
notb
push
lods
jecxz
dec
jg
jl
sbb
mov
inc
out
fldenv
inc
or
xor
add
xor
sub
cwtl
or
inc
fwait
jno
xlat
xor
add
loopne
jg
jmp
mov
and
or
lods
lods
ds
repz
inc
sti
scas
mov
cwtl
push
out
lds
ljmp
aas
mov
sub
push
rolb
pop
add
push
or
idiv
aas
lods
sub
outsl
insb
daa
sub
inc
mulb
mov
shll
loop
nop
push
outsb
cmp
ficompl
pusha
in
shlb
sbb
dec
fldenv
aas
xor
jb
add
dec
add
fwait
mov
shll
jl
and
push
jmp
add
dec
pop
stos
insl
out
lea
dec
mov
cltd
pusha
pop
lret
xchg
dec
das
mov
dec
pop
adc
dec
in
mov
andb
xlat
in
hlt
divl
xor
nop
jnp
icebp
add
fistpl
push
jmp
jmp
mov
jno
mov
iret
fstps
add
fwait
rorb
jbe
cli
cmp
fwait
jl
push
or
les
cld
minps
sbbl
mov
insl
test
xchg
mov
idivb
aaa
jno
out
cmpsb
and
add
fdivp
cmp
adc
loopne
in
lret
jg
testl
ficomps
or
or
cmp
std
les
xchg
add
sbb
popa
in
insl
sbb
xchg
popa
lret
imul
aam
ficoml
jo
shlb
ss
call
mov
jnp
push
mov
mov
jp
jb
rcrb
cmp
out
pop
dec
fildll
jg
vhaddpd
dec
pop
cmp
or
and
out
ret
jp
add
fldl
jecxz
sub
and
repnz
jp
dec
xlat
ljmp
push
pop
addl
arpl
mov
mov
inc
aas
jmp
popf
jmp
ja
cmp
test
in
mov
stos
lods
sbb
sbb
data16
xchg
call
ljmp
pusha
insl
mov
push
dec
fnsave
adc
push
and
adc
or
inc
movl
cmpsb
pop
lds
and
add
cmpsb
mov
mov
popf
sbb
xchg
push
loop
popw
mull
and
leave
mov
fidivrl
inc
adc
dec
leave
xor
sub
push
fs
leave
xchg
testl
xor
movsb
loope
sahf
out
lods
insl
mov
jne
xor
daa
dec
aam
lret
mov
jnp
in
inc
scas
pop
stc
mov
mov
fcmovnbe
outsl
mulb
mov
pushf
and
addr16
add
mov
push
inc
sti
jbe
jl
in
loope
cmp
fstl
rcrl
movsl
adc
push
loop
fadds
adc
cmpsb
fdivs
sub
aad
pop
hlt
xor
out
lahf
xchg
mov
rcl
jp
and
cmc
aaa
sub
ret
push
out
dec
shrb
sarb
sbb
dec
sub
adcl
jbe
cmp
xchg
mov
mov
cmc
push
sub
adc
sti
dec
add
jg
or
push
xor
cmp
cs
aaa
mov
lcall
daa
popf
mov
xlat
push
fisubs
shl
imul
mulb
pop
leave
pusha
cmc
jmp
cmp
out
icebp
jg
sbb
test
xchg
lea
mov
cs
fucomp
pop
push
push
ss
mov
in
mov
mov
lret
add
stc
cltd
pop
pop
mov
and
xlat
push
dec
cmp
xchg
call
inc
inc
movsb
inc
inc
sbb
add
fstl
fldt
sbb
xchg
icebp
sub
lods
iret
shrl
out
popf
insl
in
mov
push
cmp
sarb
and
inc
insl
add
mov
jbe
repz
cmpl
pop
jb
int3
add
pop
dec
notb
xchg
mov
mov
sub
push
xor
cmp
xchg
jl
sub
adc
xchg
xor
gs
mov
and
cmp
add
out
pop
cmpsb
dec
hlt
sbb
cmp
and
pmuludq
aaa
loop
icebp
js
imul
rorl
repz
fnstcw
ss
insl
push
inc
sbb
mov
out
imul
mov
pop
mov
jno
mull
jmp
scas
dec
pop
ja
fdivrl
jl
stc
dec
out
and
test
mov
daa
and
pop
cs
cwtl
dec
pop
add
cmp
or
shlb
outsl
popf
xchg
sub
xchg
inc
pop
stos
in
xchg
push
jmp
rcrb
test
aad
cmp
or
cmpb
cs
dec
inc
arpl
sti
leave
out
in
fsubrp
mov
jge
inc
dec
mov
rorl
outsl
cli
pop
icebp
dec
sub
fists
ret
and
addb
subb
or
xchg
sbb
push
mov
mov
cmp
out
xchg
mov
ss
dec
push
and
mov
cmp
jo
out
mov
out
xor
jmp
outsl
push
and
andb
push
xchg
imull
sub
loopne
mov
popf
popf
mov
shrb
jmp
jmp
mov
mov
cmp
push
lods
sbb
jg
imul
daa
stos
xor
sub
sub
push
mov
cmpsb
push
dec
sbb
call
pop
iret
cs
sbb
jnp
pop
inc
cld
shlb
in
adc
fwait
xchg
ja
in
mov
or
lret
sahf
pop
push
movsl
je
jns
std
ss
mov
ds
dec
mov
mov
js
leave
testl
out
aad
leave
sbb
andl
xchg
xchg
pop
fsubr
aaa
test
out
pop
outsb
jl
dec
outsb
add
mov
repnz
sbb
jle
movsb
xchg
cltd
push
lock
imul
icebp
inc
xchg
jne
inc
dec
jne
repnz
pop
sti
push
int
outsb
jg
leave
mov
sub
push
jp
mov
push
or
out
cld
dec
mov
jnp
es
push
sti
leave
popa
add
push
je
lret
pop
and
lods
xchg
pop
test
xchg
mov
pop
es
mov
cmp
inc
adc
cmc
jg
loope
sub
mov
int
mov
roll
sub
call
jl
push
testb
into
imul
mov
repz
mov
pop
cwtl
pop
sub
rcrb
push
jecxz
int3
imul
mov
out
jl
cwtl
and
mov
cwtl
dec
cli
push
into
ffree
cmc
jmp
fs
jns
push
data16
xor
sub
cmp
lea
inc
sub
cld
out
jge
popf
shrl
sub
roll
cmc
je
out
add
push
aas
mov
mov
sub
mov
scas
cmp
push
popa
xchg
and
es
mov
pop
stos
fbstp
popf
es
pop
loope
xchg
xor
xor
pop
rorl
ficompl
in
sub
iret
sahf
int
or
dec
mov
mov
jecxz
scas
mov
push
adc
mov
fisttpll
and
enter
inc
in
int3
test
mov
pusha
aas
push
gs
out
shlb
repnz
add
daa
inc
fisubrl
push
dec
jbe
xchg
iret
adc
and
mov
and
pop
shlb
sti
push
cmc
fwait
and
jbe
aas
or
cmpsl
pop
jecxz
mov
dec
mov
sub
rol
and
pop
sarl
popf
xchg
out
inc
mov
inc
dec
ss
into
popf
iret
sahf
mov
mov
add
mov
movsl
mov
jo
pop
shrl
leave
mov
lods
inc
and
and
ss
out
test
and
std
push
or
test
dec
push
test
jg
mov
test
outsl
dec
stos
mov
add
lret
cwtl
inc
push
adc
repz
xchg
cmp
mov
and
adc
lret
inc
add
fmuls
pushf
aam
mov
mov
out
jecxz
pop
pop
push
add
repnz
xchg
pushf
sub
jmp
bound
fwait
in
jb
call
sahf
mov
cmp
push
adc
pusha
aad
fdivrs
pushf
repnz
sbbb
xor
fisttpll
sub
add
lea
adc
mov
outsl
out
push
scas
aas
mov
jnp
fnstcw
clc
leave
cmp
push
inc
stc
sub
push
inc
push
mov
push
pop
int3
int3
mov
test
or
mov
dec
test
mov
fdivs
jecxz
je
sahf
rcll
cltd
fs
xchg
mov
cmc
dec
sti
and
mov
clc
addr16
insl
loope
sub
jle
loopne
add
push
lcall
mov
xlat
and
jo
scas
pusha
xchg
cmpsl
xchg
jge
outsl
cmc
and
inc
mov
mov
add
mov
icebp
aas
mov
lock
movsb
inc
push
scas
jnp
fsubrs
aam
str
and
cmp
cmp
ret
xor
int
inc
fidivrs
mov
adc
pop
jne
sbb
push
jo
std
and
mov
cld
or
mov
sub
sub
pop
testb
xchg
xor
pusha
jne
out
jge
mov
inc
imul
sti
xchg
jmp
and
sbb
stos
lret
lock
or
add
lret
ret
int3
and
push
add
push
mov
cmp
xchg
daa
pusha
rorb
adc
dec
mov
pushf
mov
jne
test
adc
hlt
cmpsb
pop
addr16
lock
pushf
icebp
adc
loop
xchg
cmc
jp
movsl
inc
std
lahf
std
dec
cmpsb
test
push
fimull
ja
or
pop
jno
ds
rcrb
dec
nop
in
loopne
cmp
jae
sub
mov
mov
push
push
adc
jl
outsb
push
sbb
adc
jbe
jmp
rclb
mov
push
adc
dec
push
int
xor
inc
mov
dec
into
sub
xor
or
test
sahf
push
add
mov
dec
je
out
cld
cmp
jecxz
or
or
push
ds
in
add
mov
mov
aam
sub
lea
arpl
lahf
sub
out
inc
addr16
rcl
xchg
and
js
stc
insb
adc
inc
fisubrs
push
cmp
dec
ss
push
clc
roll
leave
cmp
inc
mov
imul
pop
mov
out
enter
fildll
loope
je
lea
jmp
pop
lahf
or
int3
jge
ljmp
pop
dec
jbe
mov
popf
mov
fsubl
cmp
mov
or
mov
lret
into
jl
mov
jmp
sub
sub
sub
mov
movsb
mov
lret
xchg
push
aad
xor
and
sub
movsb
in
cmp
iret
ficomps
xor
xchg
gs
dec
int3
sahf
movsl
shl
pushf
adc
jecxz
mov
jae
sbb
or
mov
outsb
pop
insl
and
fdivs
sbb
xor
fwait
pop
xchg
outsl
flds
sbb
add
and
inc
das
dec
data16
cld
pop
sbb
jne
int3
sbb
xchg
xchg
andl
les
xchg
push
clc
pop
push
pop
mov
fst
xchg
mov
push
dec
in
data16
mov
mov
ds
sbb
sbb
shll
xchg
mov
es
outsb
mov
cmp
call
mov
add
fistpl
lahf
leave
incl
cmp
push
ret
adcb
lods
mov
add
jne
add
dec
nop
dec
out
or
dec
popa
int
push
fists
orl
xchg
rorl
aad
add
mov
or
cmp
cltd
or
sbb
outsl
jne
fsubs
add
adc
iret
inc
adc
stos
pop
cmpsb
pop
cmp
sub
push
push
rol
xchg
cmp
int3
pop
mov
sub
mov
pop
or
imul
sahf
dec
pop
dec
aam
mov
ja
lahf
arpl
out
nop
xchg
arpl
add
mov
sbb
mov
mov
mov
stc
dec
adc
mov
and
call
in
xchg
push
xchg
fnstsw
sbb
test
push
in
pop
sbb
push
adc
in
adc
addr16
mov
jle
vmovlpd
daa
push
rclb
push
push
aas
cli
add
or
dec
ret
ret
shrl
dec
jo
mov
push
cmp
cmpsl
dec
js
je
in
and
sbb
push
mov
scas
sub
roll
and
stos
mov
outsl
loop
mov
xor
jecxz
mov
out
mov
pop
inc
pop
clc
push
outsl
adc
aaa
stos
sub
xor
mov
pop
inc
push
jecxz
mov
adc
adc
or
jnp
fucom
fidivrl
jcxz
cmp
ss
cmpsb
xchg
pop
push
xchg
jbe
push
adc
jecxz
inc
sub
mov
pop
lcall
dec
jb
iret
out
loop
loope
arpl
push
mov
call
sbb
xchg
mov
mov
sti
mov
sub
jne
inc
mov
jmp
jno
decl
inc
pop
loop
jl
enter
stos
int3
int3
pop
mov
adc
popw
sub
out
mov
sbb
dec
sbb
shrl
inc
adc
inc
mov
cmp
push
out
cmp
dec
test
decb
sahf
sbb
jecxz
hlt
inc
sub
sbb
popa
jo,pn
adc
mov
jne
pop
adcb
xlat
cmpsl
push
pop
or
inc
sub
pop
daa
inc
andl
or
das
fldt
add
lods
add
das
push
pop
and
inc
mov
int3
inc
xchg
or
nop
or
lcall
inc
cmpsb
mov
pop
enter
mov
sub
imul
adc
inc
dec
or
push
dec
andb
lahf
pop
cs
in
mov
sbb
imul
movswl
sbb
adc
movsl
call
or
ss
mov
in
mov
sahf
mov
ja
or
aas
icebp
jmp
addr16
je
mov
pop
xchg
adc
scas
shl
test
aaa
pop
je
push
sarl
sarl
push
adc
js
sub
mov
jle
cltd
je
sbb
sti
xlat
adcl
jg
add
and
mull
mov
popf
rcl
in
pop
mov
pop
sbb
ds
test
or
dec
mov
int3
mov
mov
cmp
jno
cmpb
mov
jmp
fbstp
sbb
sub
lahf
fwait
mov
push
mov
cmp
mov
jbe
cmpsb
out
lock
sbbl
fnstcw
jno
shr
popf
movsl
mov
leave
call
das
cmp
lock
enter
orl
pusha
js
aad
test
repz
ds
jmp
stos
test
frstor
fadd
pop
loopne
xor
mov
mov
xchg
xor
xorl
leave
mov
lcall
cmp
inc
bswap
fnsave
mov
lahf
pop
xor
daa
aas
aaa
pop
lret
push
adc
jge
sarb
mov
cmpsb
pop
lahf
repz
popf
sub
mov
mov
icebp
inc
ficoml
je
into
pop
std
xchg
sub
subl
fs
sbb
or
add
movsl
xchg
or
pop
bound
or
in
jmp
or
xor
test
pop
inc
mov
dec
insl
scas
jns
jne
xchg
pop
mov
scas
pop
int3
popa
addb
loop
inc
mov
adc
push
jge
pop
inc
dec
xchg
sub
sarl
test
mov
dec
loop
xlat
cwtl
pop
fadds
int
mov
addr16
movsb
mov
stc
lods
jge
dec
insl
aam
cmp
mull
imul
jb
jge
mov
xor
jo
jbe
clc
mov
xor
hlt
icebp
and
xor
xchg
lret
lock
mov
lret
ret
in
outsl
out
push
sbbl
shl
dec
jge
pop
mov
xor
push
and
mov
sub
andl
push
cmp
mov
int
ja
and
push
mov
add
call
adc
push
mov
xchg
scas
aad
int
stos
dec
sbb
or
pop
mov
and
insb
mov
adc
jge
sbb
mov
or
into
mov
sbb
or
nop
dec
cltd
rol
inc
and
pop
and
imul
mov
mov
mov
out
ds
js
cmpsl
lahf
dec
add
jo
leave
nop
ret
dec
std
cwtl
ss
mov
jbe
inc
stc
push
or
cmp
imul
cltd
ss
fnstenvs
inc
stc
push
or
cmp
imul
sbb
sub
mov
jbe
inc
jns
or
cmp
imul
cltd
ss
data16
jmp
pop
sbb
xchg
loope
outsb
sub
sbb
or
add
push
jb
arpl
popf
int3
enter
enter
enter
test
dec
dec
dec
pop
dec
insb
push
sbb
sub
cmp
into
enter
sub
cwtl
out
mov
test
inc
push
push
pop
pusha
je
add
aas
fsubrs
ret
out
cltd
pushf
cld
mov
cli
sarl
push
notl
jecxz
lds
mov
std
and
push
xor
add
in
addr16
mov
cmpsl
out
adc
sbb
filds
loope
adc
pop
cld
in
and
push
lods
and
xor
sbb
pop
xor
fimull
sbb
push
pop
jns
pushf
int
adc
mov
cwtl
insb
jecxz
cmp
je
ret
in
pushf
mov
add
es
mov
xchg
sbb
dec
sub
loopne
jl
cmp
in
test
mov
xor
inc
dec
mov
movsl
ss
push
add
pop
stc
jmp
jmp
cwtl
dec
dec
dec
js
jg
or
sbb
xor
rol
loopne
icebp
in
xchg
nop
mov
sub
jge
pop
gs
inc
inc
push
lods
movsl
enter
xchg
pop
sbb
jg
cs
dec
insl
push
fidivl
popf
mov
enter
xor
push
sbb
sub
cmp
int3
enter
call
pushf
mov
dec
dec
pop
js
push
sbb
sub
cmp
int3
enter
call
pushf
mov
dec
mov
and
outsl
aaa
xor
xchg
mov
lock
cmp
fwait
or
mov
enter
xlat
xor
lahf
inc
pop
add
jnp
mov
jns
pushf
outsl
sarl
call
pop
add
and
mov
push
cltd
jnp
or
pop
inc
in
test
rol
pop
ret
sub
testl
fistpl
arpl
push
cmp
scas
dec
xchg
add
lahf
lds
imul
add
aas
gs
fdivl
adc
pushf
mov
andl
jg
inc
aaa
push
xchg
mov
jge
mov
adc
mov
jnp
aaa
ds
arpl
lds
inc
mov
loope
jb
imulb
rcll
test
pusha
mov
nop
mov
out
clc
mov
or
int3
lret
pop
adc
push
in
fwait
lcall
cmc
sbb
popf
lods
stos
pop
ret
sbb
mov
test
fidivs
sub
loop
adc
mov
add
jmp
enter
fidivrs
add
cmp
in
add
pop
loope
cmp
inc
push
inc
push
pop
mov
xor
mov
fistpll
mov
inc
jno
je
mov
and
fwait
pop
xchg
cmpsb
outsb
mov
xlat
in
sub
rolb
lods
push
pop
fsubrl
cmp
xchg
fidivrs
sbb
int3
ljmp
ljmp
mov
data16
inc
rclb
mov
and
pop
or
and
pop
xchg
mov
into
mov
jmp
mov
mov
pop
mov
sar
pop
mov
sbb
aaa
xor
ja
mov
sbb
xor
and
pop
scas
mov
pop
aas
cltd
add
cmp
and
adc
adc
mov
test
pop
rclb
sub
das
mov
lea
jb
insb
xor
std
loopne
jbe
dec
pop
pop
inc
sbb
pop
pop
les
mov
jnp
dec
cli
xchg
xor
sub
leave
xor
ss
and
dec
inc
fisubs
fists
aam
adc
std
pushf
pop
xchg
and
js
push
jae
pusha
jnp
pop
jl
lret
lea
arpl
sbb
jo
arpl
inc
popf
fisttpl
outsb
xor
int3
mov
roll
push
add
push
mov
mov
fs
jb
xchg
jmp
outsl
mov
inc
cli
es
pop
dec
in
ljmp
rorl
bound
add
mov
add
fisubs
fwait
shrb
cwtl
les
stc
fsubl
mov
test
repnz
dec
adc
cmp
add
scas
imul
iret
imul
mov
add
mov
lock
jl
mov
adc
pushf
loope
out
sahf
push
cmc
je
outsl
xor
push
inc
ja
aas
insw
jae
cld
enter
iret
pop
inc
pop
cmp
inc
idivl
gs
adc
punpckhdq
jae
rcll
mov
xlat
lods
and
arpl
jb
add
push
ret
in
sub
push
push
jae
movsl
rorl
mov
hlt
or
idiv
fcoms
fcmovb
cmp
mov
dec
sbb
imul
add
mov
sbb
in
movl
sti
push
dec
lea
pop
mov
fimull
dec
sbb
and
je
sbb
cwtl
add
aaa
pop
cmpl
fldcw
xor
scas
inc
xchg
sub
adc
repz
in
xor
and
push
outsb
sbb
cmp
or
stc
lods
cmp
addr16
sub
xor
add
popf
sbb
mov
test
push
cltd
inc
and
push
sahf
jbe
lahf
dec
stos
fildl
mov
fdivl
mov
jge
gs
outsl
fsubrl
pop
inc
outsl
out
adcl
cltd
pop
mov
xchg
sbb
daa
out
pop
imul
movsb
cld
push
push
inc
jle
push
dec
lods
and
adc
cmp
cli
je
push
sahf
mov
sub
sbb
nop
jbe
popa
inc
xchg
mov
pop
sub
jne
sahf
lret
pop
sub
outsl
ret
jno
ja
dec
mov
insb
add
xlat
mov
push
cmp
jle
jnp
sub
cmp
sbb
test
xor
fdivrs
inc
fmull
outsb
or
jg
adc
imul
adc
dec
mov
sti
cmp
jge
loope
loop
sub
or
mov
or
psrld
sbb
mov
nop
jmp
push
in
push
pop
les
jp
pop
dec
arpl
les
lcall
popf
add
or
dec
xor
ja
ficomps
dec
dec
inc
add
xchg
cs
mov
mov
jg
adc
enter
inc
mov
mov
pop
nop
sahf
scas
addr16
jns
scas
das
pop
icebp
pop
jmp
cltd
dec
test
std
push
dec
stos
jmp
aam
hlt
or
pop
repnz
iret
pop
xor
add
xchg
jle
movl
inc
addb
movsb
imulb
in
fsubrs
jecxz
pop
ds
stos
andb
adc
jns
mov
dec
sub
and
xchg
and
mov
jecxz
es
bswap
jg
adc
testb
cmp
popf
xor
or
xor
arpl
mov
ds
inc
test
fnstenv
repnz
scas
movsb
sub
mov
xlat
xchg
cmp
js
popf
les
jo
jp
xchg
lods
mov
cmp
std
or
aam
pop
push
aaa
fs
scas
pusha
out
cmp
pop
shlb
xchg
outsb
pop
in
movsl
xlat
int3
mov
jl
scas
jne
xchg
ljmp
fldl
ror
in
dec
cli
mov
test
bswap
jge
add
inc
insb
es
fcoms
outsw
sti
mov
pop
add
int3
ljmp
jg
cmp
pop
lret
into
loope
cld
mov
mov
mov
sub
mov
jg
xchg
nop
iret
adcb
dec
mov
sbb
mov
or
inc
cld
cld
mov
pop
or
add
inc
cli
dec
and
scas
aas
pusha
inc
ret
mov
mov
add
cmc
jmp
nop
jo
jle
arpl
ja
lods
subb
mov
adc
xchg
pushf
ds
inc
out
sbb
mov
inc
popa
dec
cmc
out
stos
xor
mov
enter
jp
int
in
adc
jnp
add
mov
loope
mov
pop
lcall
mov
mov
mov
cli
xchg
arpl
imul
cmp
pop
adc
iret
ret
out
push
pop
xor
cmovae
popw
mov
insl
push
dec
add
xchg
js
inc
aad
xor
sbb
pop
sub
adc
and
leave
popa
mov
sbb
sub
lret
jle
mov
push
push
add
xchg
test
jg
and
jnp
ret
and
insb
pop
cs
in
lods
lds
mov
xchg
mov
mov
scas
aaa
mov
lods
mov
test
cmp
jne
aaa
scas
ja
outsl
in
jo
xor
fldt
inc
dec
les
outsb
sub
lcall
mov
jne
or
lods
push
pop
add
inc
mov
push
andl
or
jge
xor
add
cmpsb
in
jae
sub
aam
sbb
call
imul
xor
mov
repz
cmp
in
mov
mov
mov
outsb
push
adc
mov
pop
xor
cmp
or
insb
aas
pusha
mov
xor
xor
push
je
xor
fsts
push
push
pop
and
fdivrs
jno
dec
mov
sahf
sbb
mov
sub
dec
test
add
outsb
cmp
repz
jbe
cs
adc
mov
xlat
jno
pushfw
add
mul
fiaddl
xor
mov
out
push
popf
imul
fcomps
xchg
leave
dec
inc
mov
push
push
mov
adc
xchg
adc
leave
and
jl
cs
add
push
loopne
loope
shlb
sahf
add
stos
inc
push
test
mov
pop
int
stc
lahf
mov
cli
sub
into
and
mov
mov
out
and
nop
pop
jae
push
mov
xor
push
xchg
std
xor
inc
into
bound
repnz
jecxz
fwait
popf
adc
sub
out
sbb
mov
xor
add
lock
dec
xor
cmp
or
add
sbb
testb
push
or
sub
mov
jge
and
aaa
leave
xor
roll
xchg
pop
stos
div
aad
push
push
jg
mov
sub
insl
and
ss
push
sub
fstl
inc
aas
out
lea
pop
aad
data16
mov
cltd
inc
cmp
inc
lcall
outsb
and
dec
push
imull
add
cmc
pop
addr16
push
xor
dec
xchg
adc
mov
pop
icebp
lock
aam
ficoms
push
push
push
call
or
xor
call
mov
clc
mov
mov
and
or
jae
xor
rcr
int3
inc
mov
pop
aam
imulb
adc
sti
mov
outsl
cmp
out
jne
dec
aam
mov
les
das
mov
and
int
cld
outsl
or
mov
in
fstl
sbb
xchg
jl
and
sbb
iret
cld
shll
lods
mov
jmp
push
jg
imul
scas
pop
jp
enter
mov
ja
push
jns
adc
mov
lcall
adc
shlb
and
cmp
pop
dec
scas
mov
pop
jg
loope
sub
xor
cmp
mov
jns
sbb
pop
mov
mov
adc
pop
sbb
dec
rol
cld
test
xor
jae
and
loopne
ret
mov
hlt
lods
lds
xchg
int3
push
add
jle
jne
scas
pop
xchg
rcrb
fistpl
fs
adc
cmp
scas
xor
scas
mov
ljmp
enter
nop
popf
fs
repnz
stos
mov
sub
test
cmp
pop
pop
xchg
ljmp
lods
shll
mov
lcall
in
push
cmp
jbe
sub
enter
std
mov
leave
cmp
lea
or
jbe
mov
lret
fxch
into
aam
movsb
mov
pushf
sub
mov
sahf
jns
adc
pop
mov
movsb
loope
loop
xchg
xlat
nop
roll
or
stos
push
dec
loopne
fmuls
sub
adc
vmwrite
in
loope
in
push
sub
jmp
aam
inc
orb
xchg
add
sub
rclb
hlt
adc
xchg
mov
out
jne
jb
ret
push
popf
shl
les
ljmp
test
push
mov
jbe
lcall
cli
sbb
fs
in
xlat
rcrb
jg
pop
push
pop
mov
or
stos
xchg
loope
fisubrl
or
lods
xchg
movsb
mov
call
sbb
das
jge
push
scas
bound
clc
sarl
inc
mov
mov
lea
call
test
fsubr
pusha
out
jl
sbb
xchg
push
aas
pop
das
adc
sahf
dec
pop
sub
push
cmpsb
jne
pop
sub
std
stc
jmp
add
add
aad
push
addr16
imull
pop
out
pop
pop
popf
mov
pop
inc
xor
arpl
adc
xchg
pop
mov
push
insl
fimuls
out
mov
mov
xor
cmp
xchg
cmp
cmpb
rclb
aam
fldt
js
mov
in
jb
jnp
jp
repz
adc
in
jl
call
mov
cmp
sub
movsb
jbe
iret
xchg
hlt
sahf
pop
sbb
sbb
int
pop
pushf
sbb
sub
idivl
lret
std
repz
loop
jnp
xor
jecxz
ret
mov
cmc
inc
sahf
mov
or
in
push
push
push
insb
mov
test
xlat
sbb
cmp
mov
dec
das
fadd
cmp
sahf
xor
sub
nop
sar
out
neg
jmp
push
jl
jno
jmp
rorl
xchg
insb
scas
lcall
lods
daa
push
and
inc
pop
clc
add
jge
sarb
push
mov
push
or
out
ss
lret
add
xor
mov
jbe
or
aad
push
add
stc
dec
aam
pushf
mov
pop
insl
les
pop
in
int
inc
loope
push
stos
mov
stos
negl
cmpl
xlat
jle
jns
jns
xchg
ror
xchg
push
data16
xadd
std
or
mov
js
mov
call
sbb
ficoms
cmp
xchg
mov
or
outsb
iret
dec
addb
sbb
out
lods
shll
mov
stc
lods
sbb
adc
mov
xor
cmp
mov
leave
jl
sti
inc
out
xor
mov
jae
dec
jle
push
and
pop
mov
movsl
adc
mov
cwtl
inc
sub
inc
jge
sbb
imul
sub
rcrl
stos
gs
adc
or
inc
fists
mov
adc
negb
aam
loop
jmp
test
dec
add
pop
xchg
inc
imul
lea
ljmp
mov
mov
xchg
pop
jo
lahf
push
or
inc
sbb
xor
inc
sub
pop
shl
sarb
push
xchg
adc
push
push
bound
mov
fsts
fmull
mov
sub
mov
cmp
push
dec
and
popa
fstps
iret
adc
loopne
mov
jp
aam
xchg
mov
in
sbb
ror
repz
jmp
or
ret
sub
arpl
xor
scas
add
adc
or
lahf
repnz
loope
sbb
int
sub
mov
fs
push
out
sbb
jmp
add
out
or
int3
das
inc
and
andl
xchg
ljmp
loopne
inc
pop
arpl
das
adc
daa
imulb
fadd
enter
int3
ljmp
push
xchg
psrld
adc
inc
mov
neg
push
pop
mov
subb
sarl
jge
leave
and
js
data16
mov
or
dec
xchg
add
push
fwait
repz
or
loop
loop
and
divl
test
dec
rorb
test
in
pusha
call
repnz
adc
xor
push
mov
dec
aaa
loope
imul
xchg
pop
jl
xchg
lret
out
popf
popa
ret
rclb
push
jnp
cmpsb
adc
clc
icebp
fiaddl
jo
les
imul
jecxz
jle
arpl
stos
or
xor
cld
lods
xor
inc
fistl
cmp
pop
les
sbb
insb
xor
lret
pop
loop
or
push
pop
adc
adc
aam
push
dec
cli
push
subb
mov
movsl
stos
inc
inc
xchg
push
fdivl
cmpsb
mov
insl
mov
jae
loope
adc
lahf
fstl
mov
rcrb
push
xor
insb
push
outsl
pop
mov
into
push
cltd
dec
cwtl
fisubs
mov
dec
sbb
rorl
sub
jp
jmp
addr16
ljmp
cmpsl
add
pop
inc
dec
loop
outsb
sbb
add
movl
jecxz
mov
mov
xchg
cltd
pop
lahf
movsl
adc
inc
cmp
out
test
out
popa
jb
pop
push
mov
enter
dec
cld
test
into
jno
lahf
jb
pop
aam
movsl
cmpsl
xchg
testl
loop
mov
testb
orb
jecxz
xchg
jle
jae
mov
cmp
xchg
xchg
jbe
xor
outsl
iret
jecxz
loope
test
fists
pop
idiv
inc
mov
add
sarl
adc
in
pop
cmc
shl
jl
dec
dec
push
add
push
sti
flds
cmp
or
call
loopne
xchg
fsubrl
xchg
lahf
mov
movhps
fldenv
pop
xchg
push
push
addr16
lock
sbb
aas
pop
arpl
and
sbb
fidivs
xlat
pushf
jno
ret
cli
mov
pop
jg
ja
cwtl
jo
inc
sti
int3
divl
jmp
or
testb
lret
mov
inc
jp
out
shrb
mov
adc
in
lret
or
inc
shlb
out
push
sub
out
lcall
inc
sti
fldenv
sbb
mov
jge
inc
in
scas
cmp
rcl
pop
xor
sti
insb
and
icebp
ljmp
scas
and
es
shrl
iret
mov
adc
loop
cmp
test
pushf
loope
pop
movsb
cmp
cmp
sub
pop
mov
aas
pop
cmp
lret
aam
clc
xor
lods
test
sub
mov
bound
ja
mov
push
test
mov
jns
or
lds
cmc
mov
lahf
dec
out
insl
lds
in
jmp
shl
outsl
push
lcall
enter
aas
loope
fwait
lret
mov
cmpsl
jge
pop
pop
imul
xlat
movsl
aad
mov
mov
in
int3
lock
insb
scas
jg
insl
push
shrb
int
pop
lods
int3
jge
leave
aas
push
jae
push
jbe
mov
inc
pop
lock
mov
and
mul
pop
jno
rorb
inc
adc
adc
test
test
mov
in
pop
add
rclb
andb
arpl
mov
in
idivb
adc
cltd
and
movsb
pop
adc
scas
jle
inc
loope
ss
mov
jns
repnz
jp
shrl
fwait
enter
add
jae
test
sub
push
xchg
hlt
add
mov
jmp
es
or
jnp
push
pop
or
cmc
sbb
mov
jb
shr
movsl
in
dec
ss
out
mov
mov
sub
dec
pushf
sarl
mov
stos
ret
imul
data16
and
or
jae
lock
pop
shl
rcll
inc
loopne
and
pop
scas
lea
adc
cmpsl
sbb
push
lds
into
mov
mov
mov
dec
leave
sbb
pop
xchg
pop
cmc
xor
push
pusha
mov
out
sbb
in
les
int
push
push
pop
stos
push
mov
in
daa
jge
cli
mov
mov
rcl
add
push
aad
xor
sbbb
daa
sub
adcl
lock
and
sbb
inc
int3
or
lds
lea
fistpll
ss
ja
or
pop
stos
int
mov
arpl
sbb
jbe
enter
movsb
or
jge
loopne
jnp
cli
sbb
push
inc
pop
adc
jmp
in
lock
sub
rol
test
popf
fiaddl
cltd
or
scas
jecxz
and
cmpsb
mov
sub
mov
rcll
xor
fcoml
push
inc
mov
std
rolb
incb
lahf
lahf
pushf
aas
pop
mov
xor
stos
xchg
outsl
cmp
push
nop
mov
dec
js
mov
sbb
nop
arpl
and
bound
lds
push
in
shlb
push
sarb
jmp
push
fldt
stos
popa
jmp
mov
jae
lea
sbb
mov
enter
in
inc
mov
int3
test
pop
mov
fbstp
inc
in
rorb
fcomi
mov
adc
and
fnstenv
lods
test
push
stos
test
mov
imul
mov
add
jo
jne
adc
inc
or
arpl
rcrb
xchg
mov
mov
stos
ja
in
in
dec
inc
shll
cmp
fsubp
dec
fsts
outsl
lcall
pop
xchg
cmp
mov
xchg
xchg
sub
cld
and
call
xchg
mov
ja
sbb
push
lea
push
ljmp
mov
call
cmp
notb
jl
xor
inc
jno
mov
jle
mov
mov
jle
out
addr16
lret
out
jmp
aad
push
hlt
cmp
mov
xchg
int3
and
jae
shrl
test
adc
lock
mov
adc
out
shll
jae
cmc
mov
int
mov
sub
mov
jmp
iret
cwtl
add
sbb
rcrl
pusha
stos
imul
divb
push
call
addr16
dec
pop
adc
push
add
call
sti
divl
dec
mov
lds
roll
push
add
mov
mull
popf
mov
push
cwtl
xor
ss
out
pop
lcall
sbb
sub
cmp
int3
enter
call
pushf
mov
dec
dec
pop
js
push
sbb
sub
cmp
int3
enter
call
pushf
mov
dec
dec
pop
js
push
sbb
sub
cmp
int3
enter
call
pushf
mov
dec
jl
dec
insb
push
sbb
sub
cmp
int3
aaa
jbe
in
call
arpl
push
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
and
xor
xorb
add
jb
inc
loopne
lock
and
fadd
pusha
rolb
xorb
add
jae
inc
mov
mov
orb
insb
ret
push
jb
ja
bound
cmp
add
jle
push
sti
gs
ja
fldt
jl
test
sbbl
or
lock
cmp
pop
stos
movsl
adc
add
outsl
mov
inc
repnz
and
xor
enter
shll
loope
jge
add
adc
mov
and
sti
pushf
or
xchg
cmp
shll
loopne
rclb
mov
cmp
jg
shl
in
dec
xor
jb
mov
adc
outsl
mov
rclb
and
cmp
xor
push
setle
dec
lods
mov
pop
jns
data16
mov
ja
repnz
js
xchg
and
test
push
je
add
cmp
inc
repnz
ret
lock
xor
mov
clc
in
jb
inc
loopne
sahf
push
rcll
les
push
xchg
adc
jno
push
ftst
scas
xor
inc
push
loope
rcll
xchg
xchg
sbb
in
jg
adc
xchg
nop
pop
pushf
sub
mov
les
push
cmpsl
and
push
ret
jo
xorb
add
jb
inc
loopne
lock
and
push
ret
jo
xorb
add
jb
inc
loopne
lock
sub
xor
add
ds
cmp
jg
dec
mov
jecxz
add
outsw
jns
cmp
movsl
mov
or
jno
ret
lock
push
pop
popf
loopne
ja
pushf
adc
aad
cmpsb
test
add
xchg
push
out
jmp
mov
mov
ret
pop
pop
adc
xchg
push
sub
imul
movsl
sub
inc
fbstp
lock
xchg
add
sbb
mov
and
jne
into
popa
iret
imul
je
loope
add
jno
jb
mov
inc
mov
inc
add
sbb
cmp
clc
imull
pop
fdivs
push
and
cmpsl
movsl
out
sbb
add
xchg
xchg
jne
adc
in
xlat
jp
dec
fwait
push
rolb
call
xorb
aaa
lea
push
mov
xchg
mov
pop
jo
shl
sbb
stc
jecxz
in
mov
fisttps
adc
je
or
push
pop
mov
push
aas
jg
sub
cwtl
mov
and
aad
mov
les
pop
sub
xchg
in
scas
mov
cmp
enter
mov
sub
and
inc
loopne
dec
add
xchg
mov
stc
das
lods
cmp
add
jno
mov
loopne
das
dec
js
lods
xchg
ret
mov
add
xor
sub
subl
jne
inc
mulb
stos
test
lret
cmpb
sub
ret
dec
inc
push
mov
cwtl
aas
js
int3
and
je
and
das
out
xor
je
and
loopne
rorl
fimuls
or
imul
pop
fldenv
imul
stos
jmp
push
incl
pusha
sbb
int3
pop
cwtl
das
inc
jge
jo
fidivl
push
pop
jle
inc
push
xor
test
gs
fsts
cmp
stos
mov
repnz
movsl
adc
mov
or
jnp
xor
sub
sub
pop
call
pop
or
fldcw
into
xchg
faddl
lea
add
cltd
sbb
mov
adc
pop
icebp
ja
lods
nop
outsl
lahf
addb
inc
pop
subl
xchg
dec
jae
inc
mov
xlat
loope
adc
adc
xor
mov
adc
roll
and
ret
bound
inc
push
dec
int
out
sbb
mov
addr16
lods
stos
es
sbb
je
jl
xor
mov
jb
cmp
dec
jle
sub
pop
inc
pop
pop
push
popf
sarb
nop
sbb
fcomi
mov
outsb
das
cmp
push
xor
insb
sub
scas
xchg
shlb
jo
addr16
jae
je
sub
cmc
fdivl
test
fiaddl
sarb
pop
sub
or
inc
lret
push
je
fsubs
cmp
mov
dec
pop
nop
es
divl
in
scas
inc
loop
popa
add
insb
jge
movsb
or
dec
dec
int
and
pop
xchg
sbb
or
jl
dec
sub
mov
sbb
popa
adc
subl
pop
pop
insl
push
cs
cwtl
inc
push
je
add
iret
xor
and
and
push
sarl
inc
and
pop
outsb
pcmpgtb
mov
in
outsl
sahf
or
pop
shlb
xor
push
inc
repz
out
lds
and
insb
push
ret
xchg
mov
push
int
push
push
or
popf
popl
rcll
fs
in
xor
xor
xor
dec
adc
fidivs
inc
roll
add
xor
dec
rsm
int
jns
ss
daa
dec
mov
inc
cmp
js
pop
jb
in
fimuls
ja
jne
sub
xor
mov
inc
shlb
inc
clc
inc
jnp
sub
sbb
je
push
adc
dec
xor
xor
mov
pop
fdivrs
and
adc
pop
jmp
ffree
xchg
adc
push
lods
in
imul
mov
adc
imul
jae
add
sbb
orl
jne
lcall
push
jecxz
push
xor
sbb
stos
out
testb
roll
outsl
jnp
xchg
inc
sub
xor
add
push
notb
lahf
pop
mov
rcrl
addl
jbe
add
or
pop
xchg
inc
stos
or
jo
js
jp
nop
cmp
pushf
or
lods
inc
insb
mov
fidivrl
inc
sub
jae
repnz
popf
mov
adc
inc
and
push
stos
mov
out
or
sub
iret
cmp
movsl
jp
out
dec
pop
xor
pop
test
std
fcmovnb
cli
push
int3
dec
mov
sub
dec
inc
push
sub
jae
inc
and
cmc
add
adc
cmp
scas
pop
dec
push
push
das
sti
pushf
cwtl
xchg
sub
push
jmp
in
lock
mov
mov
xor
mov
dec
sbb
loopne
or
xchg
jmp
out
mov
cltd
mov
movsl
xor
add
or
pop
inc
data16
xchg
xor
fidivrs
push
xchg
xchg
bound
in
dec
imul
test
sub
icebp
push
fwait
push
aaa
lret
imul
outsb
adc
inc
jnp
inc
leave
adc
pushl
mov
ja
in
mov
push
sub
aad
movsb
adc
fsubs
sti
mulb
fxch
pop
mov
dec
rcrb
mov
lahf
push
fimuls
daa
dec
sub
add
test
adc
fs
pmaxub
inc
popa
cmp
hlt
hlt
test
out
jl
sbb
pop
mov
xchg
nop
dec
xor
inc
push
jb
push
stos
push
rorb
xchg
lods
push
push
out
pop
jb
mov
sbbb
stos
xchg
xchg
loope
push
jecxz
jle
ret
cmp
sbb
scas
enter
cs
or
popa
lock
sub
jb
push
rep
jnp
push
std
shl
xlat
jno
jo
pop
push
push
lret
rcl
sbb
xchg
mov
jmp
adc
ds
leave
movsl
into
adc
ss
aas
fnstsw
lods
or
imul
sub
fcomps
loop
in
push
inc
inc
ret
mov
lds
sub
cli
fstl
mov
ja
arpl
outsb
push
sbbb
test
xor
stos
loopne
aam
adc
mov
push
mov
jl
sub
int
fnstcw
sub
das
pushf
jb
jmp
cmp
mov
stos
sub
dec
pop
test
in
sbb
xchg
inc
mov
clc
jb
sbb
in
mov
dec
xor
adc
lds
add
xchg
cli
les
cld
int3
pop
mov
mov
into
mov
jne
dec
ret
cmp
adc
cs
dec
mov
fcomip
lock
push
push
mov
out
push
xchg
xchg
test
jmp
shrl
or
fwait
or
inc
pop
ja
cwtl
addr16
in
adc
into
adc
lods
daa
movsb
pop
xor
fwait
adc
pop
outsb
mov
inc
fs
fucomp
jge
lock
dec
push
xor
xchg
sub
outsl
testb
decb
in
sbb
or
adc
ja
add
push
es
add
mov
insl
int
out
inc
and
mov
mov
cmpsb
and
shlb
mov
and
mov
hlt
out
sarl
imul
adc
cwtl
sti
push
cs
cmp
std
jl
xchg
mov
inc
adc
mov
fnstsw
push
mov
rolb
cmc
rep
sbb
daa
xor
add
mov
loopne
int3
xchg
fimull
push
std
or
sbb
push
sub
shrb
ljmp
imul
sbb
xlat
jo
cwtl
ret
in
push
sub
repnz
into
and
push
or
idivl
inc
mov
sbbl
lock
lods
lahf
scas
fcompl
fsubrs
push
aaa
pushf
jge
xor
enter
cld
pop
lods
cmp
aas
dec
cwtl
pop
lods
nop
psllq
fwait
pop
add
nop
stos
mov
out
xchg
pop
movl
stos
pop
ficomps
lock
xchg
jl
adc
cmc
jae
mov
loop
or
fcoms
pop
out
mov
dec
sub
sbb
mov
jno
adc
push
mov
xor
and
push
out
in
mov
adcb
dec
mov
add
inc
setb
sbb
mov
add
push
add
push
sbb
shl
into
int
xor
push
stc
ds
push
cli
adc
mov
notb
xchg
pop
stc
rcrl
out
les
dec
cwtl
push
call
into
mov
test
xor
pop
or
scas
jp
mov
lds
jo
and
mov
cmpsl
xor
outsb
enter
sbb
fimull
test
imul
sarl
int
outsb
adc
repz
je
xchg
sarb
dec
xor
adc
jne
out
rcrl
mov
add
xor
repnz
pop
sbb
sbb
sbb
dec
push
test
or
aas
dec
test
jnp
add
ljmp
in
daa
sub
enter
out
and
iret
xchg
sub
xchg
rcl
jg
xor
ss
jecxz
xor
inc
int3
pop
jecxz
dec
insl
jae
cmp
xchg
nop/reserved
shlb
xlat
icebp
js
fistpl
in
and
fisttpll
mov
push
push
push
add
lock
insb
mov
inc
jmp
sub
mov
xchg
lret
jnp
roll
pop
sub
xchg
and
sub
leave
ljmp
xchg
jb
mov
inc
inc
ljmp
xor
iret
adc
mov
add
mov
insl
pop
ljmp
and
cld
lods
inc
pop
jnp
xchg
icebp
ret
mov
cmpsl
sub
in
jnp
xchg
xchg
fsts
dec
or
dec
lods
sub
adc
push
push
mov
cs
mov
out
popf
sbb
hlt
and
sub
adc
push
jne
incb
inc
pop
shlb
aas
pop
sub
js
adc
push
pop
bound
movl
jp
sbb
push
enter
add
xchg
push
subb
js
fwait
dec
loope
jne
jns
add
sub
jbe
xchg
pop
rorl
lods
out
cmpsl
xor
int3
cmc
add
or
dec
sub
data16
push
mov
aaa
pop
mov
push
leave
cs
out
adc
cmpsb
cmp
or
cmp
dec
stc
xor
push
mov
jne
jo
int
addr16
sarb
imul
pop
push
pushw
int3
lods
mov
push
dec
ljmp
lcall
aaa
mov
cmp
pop
adc
fisttps
sub
pop
in
movsl
aas
mov
addr16
xchg
dec
add
sarb
loopne
sub
insb
cmp
cmpsb
test
dec
dec
jo
rcl
sbb
push
xchg
mov
orl
sub
xchg
gs
fnsave
out
sbb
fwait
dec
mov
or
xchg
addb
addb
call
test
test
jp
and
nop
jge
popf
cmp
sbb
xchg
cmp
dec
jl
and
into
sbb
add
mov
adc
aas
mov
std
sub
pop
xchg
xor
push
mov
mov
add
in
xor
sbb
push
dec
mov
pop
mov
pop
loopne
xor
enter
mov
movsl
mov
xor
mov
in
pushf
xchg
js
sbbb
ss
mov
gs
movzwl
and
xchg
sbb
xchg
lahf
iret
jae
add
jp
jge
cmp
gs
mov
fcmovu
xchg
pop
sarl
mov
or
fs
jmp
icebp
fsubrl
jne
pop
sbbb
or
shrl
jmp
test
cmpsl
mov
pop
cmpsb
jp
and
dec
dec
lcall
push
imul
or
lea
lds
pop
pop
jmp
cld
insb
push
sbb
and
cmp
mov
ss
and
pop
adc
sub
push
mov
push
jb
adc
cs
cmp
sbb
sub
pop
and
pushf
mov
je
adc
repnz
jo,pt
cmp
shll
fwait
les
ds
ds
out
jl
fstl
pushf
scas
mov
test
and
sbb
pop
clc
dec
aam
loop
inc
mov
enter
sbb
icebp
dec
dec
adc
fsubs
mov
ret
push
push
stc
stc
jmp
inc
inc
cld
fs
dec
sbb
cmp
jo
call
add
lret
stos
inc
cmp
and
xchg
insb
rorb
or
inc
inc
push
std
aaa
jae
hlt
mov
mov
dec
mov
call
js
mov
mov
adc
out
dec
mov
int
mov
rclb
mov
cmpsl
pusha
sbb
inc
mov
in
sub
sahf
frstor
enter
sbb
je
outsl
xchg
outsb
and
dec
icebp
push
mov
cmpsb
push
cs
inc
push
stos
scas
mov
and
les
inc
push
sbb
movsl
adc
fs
daa
clc
push
dec
loop
xor
call
repz
lods
hlt
push
js
shll
xlat
aaa
scas
mov
xlat
add
je
sarl
fwait
mov
adc
lahf
dec
xchg
lahf
jle
aas
sbb
push
adc
pusha
idivb
dec
popf
testl
push
outsl
add
mov
xchg
jg
mov
or
jmp
mov
push
repnz
dec
cmc
pop
loop
add
popa
popf
je
into
sub
cmc
dec
dec
jnp
out
repnz
arpl
xchg
mov
daa
and
popa
fcmovnb
pusha
add
sub
xchg
push
jle
test
out
and
adc
js
les
mov
mov
les
movl
addb
psrlq
scas
dec
orl
vorps
inc
push
jp
insl
int3
std
xchg
out
negb
xchg
pop
pop
outsb
adc
fdiv
xchg
fnstsw
call
sub
shlb
test
sti
inc
pop
fsubl
mov
sti
movsb
push
xchg
movsl
jmp
outsb
inc
or
sbb
stos
dec
push
nop
aas
fldenv
push
int3
mov
push
mov
inc
aad
std
pop
nop
and
icebp
aas
imul
adc
cmp
and
xchg
enter
add
sbb
xchg
mov
jnp
or
mov
fst
std
ficoms
xor
xlat
movsl
mov
push
mov
popa
sub
daa
jl
loope
pop
cmp
fdivrs
stos
xchg
js
arpl
stc
je
sbb
mov
cmpsl
stos
or
pushf
and
xchg
aad
gs
out
scas
pop
mov
cli
adc
jb
cmp
das
cmp
adc
jge
sbb
cmp
fwait
sbb
and
mov
popf
insb
xor
mov
outsl
and
inc
mov
fldenv
cmp
cmpsb
pusha
in
test
into
call
enter
inc
shr
incl
cmp
imul
lds
push
ja
into
loop
sbb
mov
outsb
mov
adc
aaa
cmp
or
test
inc
inc
cltd
adc
jae
add
in
pop
clc
js
jmp
out
dec
aam
cmpl
pushf
pop
jbe
leave
daa
popf
cmp
fwait
xchg
stos
inc
adc
mov
enter
test
cld
in
je
xchg
repz
cmc
subb
ja
mov
popa
or
stos
mov
adc
push
jge
push
cmp
cltd
cmpsl
arpl
xor
cmp
or
dec
out
cmp
sbb
add
cmpsb
dec
scas
cmp
addb
and
addr16
test
push
pop
cmp
cwtl
xlat
dec
push
mov
xlat
scas
sti
jb,pn
lcall
jno
and
nop
push
xor
xchg
mov
mov
pop
shrb
mov
arpl
pop
jecxz
push
mov
fs
repz
mov
mov
adc
fisttps
lock
stos
dec
mov
add
push
shll
enter
pushf
mov
add
icebp
xor
push
mov
fldpi
pop
pop
add
out
sub
in
mov
dec
cmpb
leave
cld
and
int3
push
jnp
mov
jne
je
push
lods
pop
stos
sub
stos
adc
mull
jmp
sbb
and
test
js
cmp
inc
adc
add
xor
fists
test
and
popf
push
cmpsl
xchg
fnstcw
jmp
add
repz
dec
push
add
push
sub
inc
imul
or
push
or
fdivp
cld
std
xor
cmpsl
rcr
jae
adc
test
mov
fidivrs
pop
adc
jbe
sti
fiaddl
xor
mov
and
pop
push
lea
xchg
mov
jl
aas
fs
sub
outsl
jno
mov
test
lahf
xor
push
rcrb
int
sub
inc
pop
xchg
xor
insb
hlt
shrb
xor
push
pop
jp
adc
add
pop
outsb
mov
cmp
sub
and
jle
stos
bnd
or
pop
in
ja
jnp
insl
pushf
mov
jno
sbb
mov
loope
push
jno
and
dec
scas
and
mov
mov
jg
mov
mov
sub
cmc
roll
cmp
adc
pop
and
xchg
pop
fmuls
xorl
dec
inc
in
aam
cmp
mov
popf
sub
lock
jmp
xchg
and
inc
mov
decb
push
xor
fcoml
mov
adc
les
push
addr16
divl
xlat
fisubl
xor
mov
rcll
adc
ds
jmp
in
stos
test
xchg
inc
fs
cmp
mov
add
xorl
lcall
xlat
lcall
stc
or
es
test
outsl
jae
sbb
daa
mov
push
push
ljmp
fcompl
adc
cmp
and
and
inc
int3
pop
rcll
fisttpll
push
and
imul
lahf
mov
enter
xchg
xchg
inc
ficompl
lret
movsb
scas
imul
jne
xor
mov
mov
jnp
jno
aas
xor
xchg
sarb
enter
dec
cmp
data16
test
frstor
push
mov
xchg
mov
repz
hlt
xchg
pop
int
fs
adc
int
stc
lds
xchg
rcll
inc
test
adc
out
or
xchg
dec
outsl
pushf
push
adc
jno
icebp
fwait
mov
ljmp
and
ret
cmp
xorl
and
pushf
enter
std
mov
jl
out
pushf
in
addr16
pandn
sbbl
fdivrs
out
cmp
lret
adc
aaa
fcomps
lahf
or
lds
mov
cmp
mov
pop
sub
pop
fisubl
filds
mov
iret
dec
ret
adc
sub
sub
xchg
dec
dec
addr16
call
jp
cmc
into
jo
jbe
rolb
pop
jns
ds
mov
mov
cmpsb
jmp
push
ret
les
and
cltd
pushl
addr16
jp
insl
daa
outsb
fstpl
jo
and
or
roll
lea
adc
es
rclb
stos
sbb
push
push
iret
push
and
inc
sub
lret
pop
cs
rorb
cmp
rcrl
jp
inc
insb
sbb
cld
xchg
icebp
dec
pop
jnp
and
and
inc
je
xchg
dec
imul
adc
xchg
pushf
jne
or
dec
aas
mov
jle
fisubrl
test
popa
xchg
lea
stc
xor
cmc
repnz
lret
jmp
cltd
sbb
shlb
or
push
mov
xchg
rol
push
jne
adc
xlat
shlb
xlat
shrb
pop
in
jl
mov
hlt
add
xor
mov
push
adc
jle
xchg
cs
push
dec
paddw
mov
sub
and
inc
push
shl
imul
jns
sbb
jno
and
push
repz
in
mov
mov
inc
repnz
ret
jo
xorb
add
jb
inc
loopne
lock
and
push
ret
jo
xorb
add
jb
inc
loopne
lock
pop
xchg
xor
inc
repz
ret
jo
pop
xor
shlb
rclb
add
xor
inc
repnz
inc
loopne
jo
jg
cmp
dec
cli
das
mov
adc
stc
xor
and
push
les
fmull
jns
imul
rcll
leave
add
xor
and
jb
sbb
xchg
dec
adcb
mov
cmp
sub
add
dec
add
das
and
jb
bound
and
ret
cmp
pop
xchg
cwtl
popa
jmp
and
jb
inc
mov
jno
divl
loop
ret
sarb
mov
shrl
leave
push
jbe
xchg
jp
push
xchg
cwtl
or
adc
psubw
and
pop
clc
ret
xchg
aaa
sbb
mov
xchg
xchg
repnz
test
lret
pop
pushf
push
mov
test
mov
inc
mov
insl
sbb
ss
inc
xchg
rorb
cmp
clc
jecxz
data16
push
bound
scas
data16
lret
std
sbb
inc
cltd
insl
sbb
xchg
cmpsb
ljmp
sbb
xchg
leave
popl
and
push
jno
cmp
push
daa
mov
dec
imul
ljmp
and
jb
bound
mov
mov
cmp
dec
mov
xor
sub
jmp
subl
or
jo
cmpsl
dec
mov
fnstenv
addr16
ds
push
popa
sti
sbb
add
ret
dec
movsb
push
dec
mov
inc
fdivrl
mov
xchg
dec
cmpb
mov
cmp
sub
fsts
leave
add
xor
and
jb
bound
dec
cmpb
mov
cmp
sub
fsts
or
loopne
es
fscale
int
sbb
sbb
mov
lea
inc
push
dec
lcall
xchg
inc
push
sbb
adc
in
mov
adc
out
cmp
aam
sbb
shl
scas
push
test
dec
mov
cmp
dec
push
loope
fsubp
mulb
in
mov
push
test
cmp
fisubl
lods
scas
xor
in
jmp
test
jp
or
rcll
xchg
mov
dec
leave
push
and
cmp
popf
inc
ss
repnz
test
add
aam
or
out
addr16
fidivl
shrl
aas
ror
fst
push
popf
sti
add
shrl
and
jl
sub
scas
jno
and
lret
cmp
mov
push
cmpsb
sbb
or
mov
scas
inc
fwait
dec
lea
cmc
call
or
and
xchg
cltd
jge
out
push
pop
fs
test
outsb
xor
and
int
pop
mov
mov
push
jo
sub
xchg
push
shlb
sbb
adc
pop
adc
pop
pop
aad
or
sub
jecxz
mov
lahf
cmp
ljmp
pop
mov
pop
push
cmp
sbb
je
ja
push
les
orb
je
cmp
nop
mov
or
gs
xchg
repz
pop
mov
sbb
xchg
adc
in
mov
dec
int
adc
adc
xchg
mov
fnsave
lret
ss
lds
mov
sub
shlb
mov
ljmp
test
pinsrw
push
mov
jnp
shl
repnz
jge
test
aas
testb
bound
imul
out
inc
push
daa
dec
nop
fstps
sbb
and
xor
fnsave
and
push
and
cmp
xchg
inc
and
mov
or
mov
hlt
rorb
dec
pop
ret
aas
lock
push
call
xchg
or
daa
sti
and
sub
lcall
inc
aaa
pop
add
scas
fistps
cld
out
jno
inc
daa
mov
out
cwtl
scas
roll
out
rcrl
mov
push
jne
lret
mov
std
dec
and
fsubrs
repz
and
je
xlat
mov
and
push
xor
data16
sar
dec
orb
xchg
mov
ffreep
aam
into
or
ret
aaa
sub
stc
psllq
cmpsl
ljmp
imul
repnz
pop
mov
sub
int
and
pop
pop
sbb
stos
ficoms
jp
inc
pop
push
lds
call
test
and
cwtl
sbb
ss
mov
sub
test
das
jnp
jecxz
jae
lods
sub
movsb
xor
rorl
xorl
dec
pop
addb
push
ljmp
or
popf
and
mov
sar
push
jl
cmpl
jp
push
std
out
sbb
fistpl
ret
ljmp
pop
add
shll
rorl
lea
subl
ljmp
and
jl
out
int
xor
dec
sub
repnz
dec
xchg
arpl
scas
add
and
push
push
push
push
fstpl
lret
xchg
mov
mov
xcrypt-ecb
cmpsl
dec
cmc
pop
movl
xchg
xchg
inc
inc
xor
or
xchg
fisubs
js
cltd
scas
hlt
data16
push
sub
mov
lret
rcll
lahf
and
xor
sub
push
out
sub
sarl
and
pop
lods
punpcklwd
fidivrl
popa
sbb
inc
mov
mov
jae
sbb
hlt
sub
popa
xor
pop
cmp
cmp
jl
gs
lret
aad
repz
pop
int
jne
imul
andb
add
push
mov
xor
imul
pop
cs
jae
adc
iret
aaa
push
cmp
int
lahf
inc
lods
gs
das
dec
pop
xor
mov
sahf
mov
sarl
mov
scas
mov
clc
cwtl
pop
ljmp
pop
mov
testb
push
cltd
push
lret
jmp
jp
xchg
add
add
jne
and
mov
fsubrl
stos
jg
pop
in
inc
js
cmc
add
in
dec
add
orl
cmpsl
lock
mov
xor
adc
pop
loope
ljmp
jnp
js
mov
icebp
jge
mov
addr16
inc
inc
dec
and
neg
nop
sub
aad
orb
fildll
adc
ss
jmp
cld
jb
fisttpll
popa
fwait
popa
add
pop
pop
xor
into
std
jae
inc
mov
mov
xchg
dec
push
aam
mov
xor
push
out
xor
sbb
ss
movl
pop
not
sub
xchg
lods
cltd
dec
les
inc
out
outsb
adc
fistl
scas
aas
fsubp
bound
and
sbb
int3
out
xchg
icebp
sub
dec
ss
stos
out
stos
or
scas
rclb
sar
add
cld
sub
mov
jns
jge
xor
iret
pop
imul
cli
or
data16
shrl
fldt
dec
cmc
jge
add
mov
adc
ret
movl
aas
out
and
pop
add
sbb
lea
insb
pop
add
fistps
mov
pop
bound
xchg
aad
cmova
jb
inc
sub
popf
insl
sarl
mov
popf
pushf
sti
or
imul
pop
mov
sbb
aad
sub
add
xor
sarb
xchg
iret
dec
xor
mov
leave
cmp
jmp
jo
inc
mov
mov
pop
div
cmp
sub
inc
idivl
adc
or
or
movsl
dec
push
xor
jae
stos
repz
aaa
subl
jae
cmp
loope
lds
push
pushf
shlb
inc
xchg
lret
test
shl
outsl
nop
cwtl
fmuls
lret
insb
andb
fs
xchg
add
xchg
imul
dec
enter
push
jns
jb
test
imul
stc
xor
sub
not
pusha
or
xchg
dec
xchg
fsubrs
xor
mov
or
push
push
daa
icebp
aas
xchg
push
jl
jle
test
add
hlt
xlat
cmpsb
outsb
out
xchg
sbb
push
cmp
and
inc
aad
das
mov
cmpsb
push
lock
fs
xchg
ss
hlt
ret
rorl
lcall
fcoms
cmp
xor
addr16
cmpsl
call
mov
pop
sbb
cmpsl
mov
mov
jbe
in
cmp
inc
das
iret
imul
in
popf
pop
fsubrs
pop
mov
and
push
imul
ja
push
xchg
in
arpl
xor
add
xor
inc
or
or
or
jecxz
sbb
sbb
inc
lcall
test
cld
add
jae
adc
push
mul
icebp
xchg
mov
mov
jae
mov
shl
xchg
cmpsl
shlb
sarb
push
negl
push
or
ret
fwait
pushf
sbb
rcl
pop
repnz
out
jp
scas
bound
sub
mov
or
jns
mov
xchg
push
mov
sbb
pop
outsb
sub
mov
or
roll
jne
daa
js
js
rolb
or
ljmp
sbb
add
addr16
push
xorb
nop
mov
lret
sub
lret
push
f2xm1
test
xchg
push
jb
jp
insl
repnz
outsl
clc
negl
add
ret
sbb
bound
or
and
int3
out
mov
xor
xchg
jp
xor
mov
sub
xor
add
and
enter
es
jnp
out
fdivrs
mov
lcall
cs
cltd
sbb
imul
jb
or
xchg
or
movsb
movsb
aas
aas
xor
leave
pop
cld
or
insb
and
xchg
je
movsl
or
out
mov
nop
fmull
cs
lret
jge
sbb
mov
pop
sbb
mov
jmp
stos
in
push
push
xchg
push
dec
les
fwait
adc
addr16
idivb
das
movl
adc
fists
push
popf
into
aam
mov
pop
adcl
mov
adc
mov
jno
lods
ljmp
cltd
and
js
add
mov
shlb
mov
mov
or
call
dec
movsb
shll
mov
and
scas
push
xor
lods
aad
call
sbb
xor
mov
enter
mov
lcall
mov
adc
sub
fxch
frstor
jne
fldcw
mov
clc
mov
xchg
iret
and
xchg
das
xchg
lret
fidivrs
xor
jg
xchg
lea
out
insl
pop
sbb
outsb
out
out
adc
test
push
ret
fs
jecxz
jmp
adcb
xor
jecxz
sub
mov
insl
stc
ret
add
jo
pop
das
test
dec
insl
adc
hlt
pop
mov
scas
jb
mov
mov
ret
or
inc
push
push
sahf
aaa
addb
imul
cmp
out
iret
inc
in
sarb
or
and
mov
int3
fcmovnb
and
out
fldcw
cmp
andb
mov
negb
test
test
jmp
nop
inc
jbe
lea
add
dec
pop
inc
xlat
xchg
out
mov
jecxz
movsl
out
mov
aam
sub
push
enter
dec
and
fisubrs
fs
dec
leave
repz
je
stos
mov
adc
jo
dec
mov
sbb
xchg
xchg
dec
sahf
lea
outsl
jnp
push
dec
leave
ds
aam
jo
cmp
xchg
mov
mov
test
es
popa
daa
imul
scas
push
gs
pop
push
cli
jge
pop
inc
push
push
cmpsl
mov
sub
shll
add
mov
sarl
outsb
xor
in
pop
inc
mov
movsb
shrb
dec
mov
jmp
fistps
jp
jle
ret
cmp
out
daa
mov
push
aaa
sbb
push
in
cmc
fiadds
int
test
xchg
scas
into
roll
outsl
rorb
outsb
js
roll
rclb
gs
sub
mov
fldt
lcall
xchg
cmp
xor
movsl
scas
ret
mov
xor
daa
mov
pop
mov
xor
into
xchg
cld
mov
jle
fsubrs
mov
mov
ret
pushl
cmp
test
hlt
pop
sub
and
int
mov
adc
mov
ljmp
icebp
loop
xor
cmp
stc
jbe
je
xchg
fistl
clc
jecxz
mov
sub
repz
fnsave
jnp
pop
jle,pn
cmp
pop
jnp
and
loopne
clc
inc
mov
and
loop
mov
or
and
jne
lcall
rclb
mov
jo
in
call
daa
xchg
fcomps
inc
jnp
adc
scas
ja
aaa
mov
push
sbb
sbb
cmp
pop
push
mov
inc
adcl
push
or
fstpl
je
push
clc
adc
mov
xorl
jae
xchg
push
fidivrs
push
mov
and
sub
cmc
pop
sbb
mov
cmpsl
xchg
pop
xor
stos
push
out
dec
fidivrs
xchg
or
cmp
ss
and
pop
cwtl
arpl
inc
or
fdivr
add
dec
loope
ror
stc
jp
xchg
or
andl
xchg
dec
lods
dec
cmp
scas
fsubrp
cmc
and
adc
xchg
aaa
and
enter
cmp
mov
xlat
sbb
test
jnp
mov
dec
add
out
lcall
push
jecxz
cltd
lcall
ja
pushl
cmp
fwait
mov
pop
mov
sarb
xchg
push
mov
pop
scas
push
or
in
flds
dec
notb
popa
aaa
sarb
fistpl
les
push
push
xchg
orb
add
es
xchg
mov
das
jl
insl
out
sub
popa
ds
xlat
pop
out
adc
or
pop
iret
and
vmovsd
gs
fsubl
sub
or
cmp
xor
enter
into
rolb
sbb
rcll
jge
fimuls
ss
movsb
jmp
xchg
es
je
dec
inc
adc
add
mov
aas
bound
mov
pop
mov
and
dec
fsubp
push
in
push
inc
add
dec
dec
cmp
in
das
repnz
sbb
loope
or
inc
movsl
inc
lahf
cli
in
or
push
mov
stos
jl
xor
je
ljmp
loope
inc
cmp
aas
add
and
sarb
cmp
pop
test
outsl
jmp
xchg
mov
pop
ja
cwtl
notb
mov
and
add
mov
adc
ds
pop
int
gs
fcoms
sbb
cs
and
in
stc
jl
cmp
add
imul
add
aam
dec
jbe
test
xor
and
jg
cmp
in
pusha
sarl
and
shlb
stc
adc
mov
je
insb
jmp
outsl
jo
mov
outsl
aam
out
orb
lock
cli
inc
and
repz
mov
ret
stc
aam
adc
in
je
jns
dec
jae
push
ret
xor
mov
lock
in
jo
pop
dec
call
dec
jo
frstor
ljmp
sub
xchg
std
iret
scas
decb
fisubl
pop
das
sbb
adc
test
sbb
bound
cmpsl
ror
and
leave
inc
mov
sub
push
mov
dec
lds
mov
xchg
dec
push
ljmp
popf
cmc
daa
mov
add
out
loope
lahf
fistpl
daa
rdmsr
mov
pop
ss
jae
jbe
rolb
adc
loop
adc
cmp
inc
aam
mov
xchg
fnstcw
cmc
push
ss
xchg
mov
cld
fcmovnu
leave
or
sti
adc
xlat
or
mov
rcll
pop
aaa
loopne
test
xchg
shrl
add
imul
adc
es
xor
fcmovne
ror
pop
jmp
aam
insb
push
insb
xchg
pusha
fldt
int
push
cmp
pop
out
and
inc
xchg
hlt
je
pop
arpl
cmpsl
popf
cmp
icebp
pop
sti
cmpsl
movl
in
mov
arpl
insb
hlt
dec
push
or
cltd
jl
sub
jge
repnz
add
outsl
cld
adc
pop
mov
xor
test
cmp
pop
dec
jb
jb
shr
mov
adcb
ds
mov
loope
mov
lock
outsb
movb
cltd
lahf
sub
adc
test
out
cmp
lret
clc
pusha
mov
into
imul
outsb
push
jne
mov
out
jp
movsb
rorl
cli
add
test
pop
jae
inc
sbb
repnz
jae
jbe
lcall
jg
pop
lahf
imul
daa
pusha
arpl
add
inc
sub
pop
push
dec
arpl
add
mov
ss
mov
ret
mov
movsl
add
out
testb
dec
clc
adc
imul
aaa
xchg
test
adc
mov
add
scas
mov
fimull
xor
mov
stos
cs
pop
mov
divb
cltd
mov
in
or
ds
mov
or
mov
sub
and
arpl
std
imul
xchg
cmp
mov
jbe
mov
xchg
stos
adc
inc
subb
mov
insb
add
cli
xchg
shll
or
sahf
ds
stos
jp
push
push
nop
push
add
and
testl
inc
shrb
data16
cmp
xchg
test
xchg
push
in
lock
adc
dec
push
stos
test
in
push
sub
repnz
dec
and
lock
xchg
lods
mov
pop
xchg
dec
movsl
ss
testl
push
fists
dec
or
clc
fildll
scas
xchg
clc
addb
add
ljmp
ljmp
addr16
lods
imul
adc
mov
lea
push
outsl
cmp
inc
mov
imulb
fs
dec
pop
js
insl
pop
aam
xchg
mov
mov
push
imul
xlat
repnz
mov
add
inc
xor
pop
xchg
out
ja
shlb
push
pushf
adc
mov
dec
mov
push
stos
aad
and
aad
xchg
jo
push
cmp
xor
aam
pop
imul
daa
push
movsb
sbb
fwait
movsb
subb
fidivl
mov
popa
and
mov
rcr
push
mov
xchg
aam
mov
pop
popa
inc
jg
adc
cmpsb
test
fs
dec
xchg
or
imul
pusha
pop
xacquire
inc
dec
and
mov
push
pop
cli
mov
imul
mov
xchg
mov
push
jmp
mov
inc
pop
daa
es
jge
sub
fisttpll
or
xchg
jns
orb
or
in
inc
pop
push
inc
ret
cwtl
and
push
inc
jno
jno
xlat
cmpsb
mov
jmp
push
push
pop
insb
inc
mov
inc
sub
leave
adc
lret
aad
inc
sub
fistl
lahf
lock
pop
sbb
ljmp
mov
cmp
nop
jmp
gs
push
sti
adc
cmpsl
xor
mov
ja
fstps
loopne
fwait
clc
aaa
jl
out
mov
jmp
mov
lds
ja
fwait
lock
daa
pop
jmp
bound
mov
loopne
adc
sub
clc
xor
ss
pop
arpl
outsb
xor
test
add
jmp
or
mov
sbb
fsts
mov
mov
sbb
cmpsb
push
xchg
lea
cmp
add
sbbb
mov
scas
iret
insb
mov
les
xchg
or
xor
insb
lods
sbb
dec
xchg
pop
xchg
lods
xor
lcall
and
pop
bound
fdivl
pop
inc
pop
xlat
jecxz
mov
jae
cmp
push
xchg
pusha
or
mov
push
mov
test
sbb
ficomps
test
sub
std
icebp
outsb
aaa
repz
test
and
daa
hlt
mulb
orb
fildll
mov
dec
pop
xchg
or
je
fstpt
mov
roll
mov
mov
mov
mov
lods
push
fcoml
sbbl
sahf
sbb
xor
push
bound
cmp
sbb
lock
popa
mov
lds
mov
adc
fwait
jmp
sub
adc
xchg
popf
mov
sbb
lgs
movsl
add
loopne
jmp
push
jns
jmp
hlt
insb
push
inc
jo
or
iret
xchg
add
or
testb
mov
js
mov
enter
cmpsl
sahf
decb
xchg
push
cmp
pop
fistps
xchg
in
ficompl
lcall
lahf
inc
out
xor
jg
and
jecxz
add
jge
sbb
mov
test
and
cmc
adc
and
arpl
out
xor
jecxz
in
fcmove
dec
sahf
adc
and
xorl
jae
mov
bound
push
mov
push
js
iret
lea
mov
cmp
test
enter
imul
inc
push
cmp
inc
mov
cmc
ret
sub
push
cmc
inc
std
orb
xor
sbb
subb
mov
call
cmp
orl
sbb
retw
and
or
lods
ja
mov
scas
add
lock
mov
xorl
adc
divl
mov
mov
push
fs
loope
lahf
add
dec
cmp
aas
push
inc
div
cmc
push
lds
push
cmp
sub
frstor
cmp
xlat
shrb
ret
mov
or
aad
xor
and
push
xor
enter
int
scas
add
shlb
dec
xor
mov
cmc
and
jb
bound
dec
cmpb
mov
cmp
sub
fsts
leave
add
xor
and
jb
bound
dec
cmpb
mov
cmp
sub
fsts
lret
xor
and
jb
bound
dec
xorb
mov
cmp
adc
add
shll
push
cltd
inc
mov
xchg
mov
shll
cmpl
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fstps
dec
inc
mov
or
sub
or
add
add
add
pop
push
add
add
add
add
add
add
add
insb
add
enter
int3
add
add
dec
add
add
add
add
loopne
cmp
add
add
popf
add
add
add
sbb
pop
add
add
sbb
ret
add
add
add
add
add
add
outsb
add
sbb
das
add
add
add
add
push
dec
add
add
sbb
mov
ret
add
enter
mov
sub
enter
sbb
add
add
add
add
cmp
int3
add
add
and
pop
add
add
add
add
add
dec
add
add
add
add
add
imul
incl
add
add
add
add
add
mov
dec
add
mov
mov
add
add
add
imul
add
add
add
add
add
add
jbe
pop
add
add
add
add
add
insb
add
add
popl
inc
add
jle
jns
adc
jg
popf
add
ret
add
add
add
add
add
add
add
lret
add
lock
add
add
add
add
adc
sbb
or
popf
add
add
inc
add
add
cmp
pop
add
add
and
ret
add
add
lock
add
add
test
add
add
add
add
add
xchg
add
add
add
add
add
out
insb
add
add
add
add
add
add
les
popl
inc
add
cmp
or
incb
cmp
jg
push
add
add
sbb
push
add
add
and
push
add
add
push
dec
add
sub
mov
sbb
sbb
in
or
in
enter
roll
inc
add
add
add
add
add
add
add
loope
cld
add
add
cmp
ret
add
add
xor
add
xor
adc
mov
scas
add
add
add
add
add
add
add
add
add
cmp
inc
add
pop
add
push
add
int
jle
arpl
fadds
inc
add
add
add
add
add
add
add
pusha
add
add
add
push
add
add
add
add
push
xor
and
pushf
add
add
add
add
add
add
incb
and
add
sbb
jns
pop
add
add
add
add
add
add
mov
xor
inc
add
add
add
add
add
inc
add
add
add
add
or
adc
dec
add
add
incl
cmp
popa
add
push
add
add
add
int3
add
test
sbb
incb
adc
or
in
enter
sub
insb
add
inc
add
add
add
add
add
mov
insb
add
add
mov
add
fadds
inc
add
add
add
add
add
add
add
popf
add
mov
add
add
sub
lret
dec
cmp
pop
ret
insl
lods
xchg
mov
shrl
push
scas
and
jae
xchg
stos
test
testb
jmp
dec
insl
outsl
pop
or
dec
jno
cli
pusha
out
loop
adc
cltd
mov
fimull
mov
pushf
push
test
mov
xor
pop
jnp
mov
jne
cwtl
rcll
mov
sub
cmp
stc
shrb
xorb
inc
mov
sahf
xchg
xlat
je
jns
xor
mov
push
fs
or
jne
out
fdivrl
adc
lahf
push
and
lret
sbb
lret
lret
sub
imul
insl
sti
lret
mov
xchg
out
rcrl
mov
adc
fstpt
jge
sub
cwtl
cmpsl
sub
cmp
stos
scas
inc
subb
fldt
adc
and
mov
fiaddl
pop
mull
cltd
in
std
push
push
mov
cs
clc
fcmovne
dec
iret
push
mov
fwait
cmp
movswl
mov
cltd
sbb
dec
mov
call
dec
mov
insl
jb
cmpsl
sub
cld
lret
push
das
mov
and
jmp
ja
xchg
das
xchg
sarl
mov
addr16
scas
inc
out
xchg
ljmp
dec
jecxz
mov
jmp
cmp
fcoms
xor
and
xlat
js
repz
sub
push
imulb
ror
pop
and
sub
jne
mov
dec
enter
jb
cmp
mov
xchg
mov
xlat
sbb
out
aam
cmp
rclb
or
inc
jno
enterw
loope
push
jle
lahf
push
repnz
in
ljmp
inc
sub
pushf
in
xor
cmp
fdivrl
std
push
push
cmc
or
jecxz
sub
mov
insb
jae
push
dec
js
fstpl
aas
push
insb
push
push
dec
int3
addl
push
lret
dec
jbe
dec
andl
test
push
push
mov
jbe
jns
and
pop
mov
lea
mov
sub
lcall
cltd
sarb
movb
mov
test
lcall
mov
hlt
inc
lods
in
rolb
mov
fstl
mov
jae
jecxz
inc
aad
loop
dec
icebp
fdivrp
hlt
sub
or
fimull
hlt
xlat
sub
cmp
jge
mov
dec
fsin
shl
imul
mov
mov
sub
xchg
lea
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
