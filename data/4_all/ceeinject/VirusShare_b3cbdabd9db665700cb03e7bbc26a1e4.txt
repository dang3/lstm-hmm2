call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
sbb
mov
or
sbb
mov
mov
out
cli
int
cmp
cmp
push
jp
lcall
lret
in
ljmp
sub
push
inc
inc
push
jb
jp
xchg
bound
dec
stos
mov
mov
lods
int
cmp
dec
pop
sbb
out
inc
mov
pop
and
int
add
pusha
xor
in
push
inc
xchg
out
sbb
mov
push
cmc
inc
popf
lcall
inc
cmc
cmp
sub
pop
jl
mov
ficoms
sti
mov
sub
frstor
in
ljmp
cmp
mov
pop
add
add
std
lahf
test
jno
cld
ficoml
popa
xor
xchg
lds
pop
inc
sub
push
mov
out
pop
mov
xor
ljmp
or
aaa
mov
pop
out
cltd
sbb
pop
ljmp
dec
ret
cmp
cmp
pop
jge
insl
push
arpl
xchg
cmp
ret
mov
dec
pop
dec
and
or
daa
xor
sub
jmp
mov
lods
gs
insb
inc
jl
sub
adc
push
sub
leave
fdivr
sti
stos
clc
sti
ljmp
sahf
cmpsb
outsl
imul
dec
push
outsb
add
pop
insl
push
jp
mov
mov
in
ljmp
sub
dec
jge
insl
push
jp
mov
mov
in
ljmp
cli
xchg
mov
cmp
add
lds
cmpsl
daa
xor
xchg
push
xor
mov
cmp
sub
jb
adc
out
sub
lock
gs
mov
sub
addr16
sti
cmp
popa
outsl
and
orb
or
aad
out
xorb
push
sub
shrl
ljmp
lods
lret
sti
shrl
xchg
rolb
pop
add
sbb
sbb
push
dec
addr16
push
mov
push
fldenv
in
xadd
int3
pop
ret
fiaddl
sbb
aaa
cmovge
pop
out
and
pop
sub
das
add
sbb
adc
pushf
mov
dec
or
jmp
dec
fsubs
jecxz
adc
movsb
sysenter
je
stc
cmp
mov
mov
pop
int3
pop
mov
mov
stos
cwtl
popf
push
jle
add
pop
jno
cmpb
sub
cmpsl
repnz
add
in
pop
sub
std
jge
add
mov
icebp
push
fists
int3
pop
mov
out
fsub
int3
pop
lods
jge
inc
fdivl
mov
test
je
push
data16
and
mov
xor
mov
imull
scas
mov
out
movhps
inc
push
movsl
mov
xchg
xchg
dec
leave
daa
and
arpl
outsl
jmp
les
push
f2xm1
clc
push
dec
xor
aam
lahf
dec
push
jp
loopne
insb
dec
addr16
mov
call
jb
shrl
insb
enter
in
test
and
and
aad
adc
cld
loopne
clc
inc
xor
push
mov
imul
push
mov
xor
sub
or
add
add
add
pop
into
cmc
mov
pop
push
xchg
dec
add
cmpsb
cli
and
mov
or
popf
pop
xchg
ljmp
loope
loopew
dec
xor
mov
pop
push
out
pop
xor
xor
cld
inc
and
out
jb
xlat
adc
aam
outsl
mov
mov
cmp
fidivrl
jg
aad
add
stos
repnz
fucomp
adc
mov
mov
fistpll
int3
loopne
mov
cmp
test
xor
pop
in
push
adc
cmpsl
or
std
pop
scas
mov
push
mov
cmpsb
and
into
pop
mov
in
aaa
movsl
jnp
ret
add
sub
dec
push
mov
rcrb
pop
je
jmp
push
popf
dec
dec
jo
nop
mov
mov
imul
jnp
je
ljmp
xchg
sbb
add
fldt
int
lods
xchg
jge
stos
xchg
xchg
push
adc
xchg
jbe
sbb
mov
fbstp
pop
jno
xchg
inc
in
dec
mov
aam
pop
out
int3
jp
add
ljmp
cmpsb
add
cmpsb
or
aad
jp
lcall
dec
test
imul
fwait
or
test
pop
enter
repz
sbb
enter
mov
cmp
xchg
int3
xchg
in
lcall
jmp
and
idiv
fcompl
mov
ss
les
mov
aaa
fstpt
or
js
stos
fsubl
ljmp
lds
mov
add
cmp
push
in
dec
stc
pop
add
xor
aaa
push
jp
dec
mov
cmp
leave
xlat
fcoml
int
cmp
mov
lds
or
push
aas
popf
jo
fcmovbe
or
rclb
movsl
sahf
movsl
int
mov
mov
shrl
inc
fwait
xchg
pop
adc
push
pop
mov
jnp
lahf
mov
lahf
push
imul
cmpsb
pop
in
insl
imul
or
xchg
push
mov
mov
pushf
data16
mov
mov
pusha
in
in
xchg
sub
int
cmp
pop
nop
mov
pop
sahf
in
mov
cmp
lds
jl
pop
bound
loopne
mov
pop
movsl
inc
push
lods
jg
scas
dec
pop
adc
in
jp
xor
mov
lods
dec
mov
cmc
mov
xlat
sub
cmp
jge
lods
movsl
or
out
xlat
ret
inc
lret
mul
sub
dec
adcl
and
fimull
mov
pop
mov
mov
pop
mov
mov
out
cli
xlat
push
enter
stc
call
xchg
cmp
mov
lcall
test
fsubl
testl
stos
je
popf
repz
push
pop
sbb
adc
les
fwait
mov
in
adc
sub
movsb
loop
imul
fldcw
out
popa
and
int
sbb
adc
cmc
lock
mov
jb
ss
mov
iret
sbb
pop
jl
enter
push
outsl
and
popa
pop
mov
push
mov
sbb
not
les
ss
xor
mov
jno
cmpl
les
daa
or
or
out
mov
pop
in
aam
sti
pop
cmp
aad
mov
jbe
xor
inc
jmp
cmc
out
ljmp
pop
mov
xor
push
sbb
inc
and
sbb
sbb
sbb
mov
fcmove
lea
popa
mov
inc
ja
arpl
pop
xchg
inc
add
pop
inc
out
movsl
add
aam
or
add
shlb
jge
dec
xchg
sbb
ret
xchg
js
or
mov
xor
lcall
pop
push
or
mov
ljmp
sbb
test
mov
xor
and
mov
out
dec
dec
lods
insb
inc
lea
mov
xchg
das
adc
bound
pop
push
fwait
scas
mov
sub
shll
lcall
or
stc
xor
pop
dec
test
pushf
es
ss
mov
test
aad
in
pop
cmp
gs
into
insb
arpl
xor
push
ret
ret
ljmp
fcoml
repnz
push
mov
mul
or
pop
xor
cmpl
mov
xchg
sub
es
lahf
jecxz
js
std
cwtl
ljmp
add
mul
xchg
xchg
ficoml
push
sti
jae
push
fidivrs
sbb
in
add
add
xor
iret
popa
pop
xchg
jo
jo
cmp
daa
dec
push
mov
mov
mov
sahf
test
arpl
mov
inc
rcll
gs
pop
cwtl
ja
loopne
pop
sub
inc
fisttpl
xchg
xor
cmp
enter
dec
mov
xchg
sarl
and
addr16
ja
lcall
xchg
add
daa
ret
and
xlat
push
jnp
mov
lret
xor
loop
mov
ret
cmpsb
xchg
cmc
or
push
cmp
data16
loopne
xchg
cmp
sub
adc
inc
pop
ds
loopne
cs
aaa
sub
mov
cmpsl
xor
std
and
and
fsubrs
lret
push
pop
adc
mov
and
pop
push
pop
and
cmpsb
js
repnz
xchg
iret
lcall
fwait
xor
xchg
add
movsl
lock
aas
addr16
pop
inc
mov
inc
lds
cmc
mov
or
pop
dec
iret
sbb
dec
cltd
repz
addr16
popa
aaa
lret
popf
test
loop
xor
mov
rcrb
jno
fldenv
in
mov
les
mov
outsl
sub
cltd
fwait
jge
xchg
mov
cmp
jns
and
mov
mov
sbb
in
mov
mov
or
xchg
xchg
fimull
enter
out
mov
dec
xchg
popl
lahf
cli
xchg
inc
insl
test
sub
push
cmpb
xor
test
stos
lcall
sar
int
add
sub
xchg
out
add
push
jecxz
mov
push
xchg
mov
jno
lea
xor
push
das
bound
jno
xor
push
pop
movsb
adc
pushf
cmp
fsubl
cmpsl
mov
and
xlat
jnp
psrld
sbbl
sub
js
dec
pop
jle
adc
and
mov
xchg
sbb
cmp
fcoml
mov
scas
ja
frstor
sbb
dec
lods
mov
mov
sbbl
mov
jecxz
int
and
stos
xchg
push
mov
shll
and
cltd
fs
loop
cmpsl
nop
dec
cmp
adc
sbb
dec
cwtl
hlt
les
negl
insb
jo
out
stc
mov
add
push
cmp
jne
or
pop
sub
sbb
cltd
insl
or
mov
adc
mov
iret
mov
mov
jecxz
add
test
out
xchg
mov
cmp
fdivs
xor
int
xor
ljmp
jb
jge
add
insb
cmp
stos
int
push
out
mov
fincstp
sub
mov
fstpt
pop
aaa
xchg
cmp
cltd
imul
mov
aas
jge
xor
test
or
mov
xor
or
fdivrs
sbb
lds
pop
pop
cbtw
mov
add
push
mov
inc
lds
into
das
cmp
addr16
out
sbbl
outsl
mov
or
adc
roll
test
imull
scas
mov
ja
aad
mov
xor
iret
and
enter
jecxz
aas
mov
jae
rcrl
or
jno
out
pop
xchg
sub
testl
data16
jae
mov
adcb
or
jb
sarb
mov
imul
out
pusha
test
push
mov
push
fstpt
add
or
pusha
jecxz
enter
imul
sbb
cmpsb
mov
mov
sbb
lcall
sbb
xchg
jae
decl
pop
mov
mov
xchg
xchg
in
jo
add
imul
arpl
cld
in
icebp
rcr
mov
xchg
es
and
pop
das
cli
test
add
lret
inc
idivl
mov
pop
sbb
dec
cmp
xorb
inc
std
mov
add
arpl
jp
test
sbb
jmp
sti
lret
cmp
ficoms
xchg
shll
test
xchg
xchg
sarl
xor
dec
icebp
cwtl
jmp
rorb
inc
aaa
lahf
xchg
orl
test
cmc
push
hlt
mov
popa
call
or
subl
test
popf
sahf
push
push
rcrl
loop
jl
pop
pushl
ds
in
pop
call
shll
mov
in
cmpb
jle
cmpsl
push
std
test
sti
sahf
mov
aad
aas
adc
jns
sarl
mov
sti
jns
daa
mov
jl
dec
mov
lret
lahf
push
sbbl
mov
lea
sahf
pusha
sbbb
mov
mov
push
sar
shrb
xchg
out
int3
push
cmp
inc
dec
in
std
insb
pop
out
push
lahf
mov
xchg
jmp
fimuls
lds
stos
pop
mov
dec
xlat
sbb
xchg
cmp
ds
xchg
sar
sub
divb
pop
and
xlat
lret
xchg
lea
scas
or
imul
push
push
enter
xchg
add
imul
mov
mov
mov
in
mov
jp
push
push
or
iret
repnz
and
push
test
sub
jns
rcrl
pop
loope
lret
sbb
pusha
stc
xor
sahf
andl
rcll
add
movsb
fldl
or
pop
xor
sbb
dec
in
jae
fwait
xor
dec
cltd
int3
fsts
into
je
lock
mov
adc
sub
push
fiaddl
inc
aaa
sbb
das
aad
pop
fs
punpckhdq
and
mov
mov
std
inc
inc
testl
out
jecxz
in
shrl
rcrb
cmpb
shlb
add
pop
fisttps
out
xchg
mov
lods
push
int3
or
or
flds
push
pop
fs
movsb
xchg
dec
jbe
lods
cmp
dec
jle
jl
jl
mov
jmp
das
mov
mov
test
pop
xlat
test
ja
in
lods
ror
nop
xchg
popa
mov
bound
add
add
mov
push
jb
jmp
cmp
ffreep
sbbb
je
pop
jmp
lock
lcall
mov
fdivr
enter
cmc
int
sbb
xor
add
push
pop
pushf
mul
addl
rorb
shll
movsb
js
push
call
xor
jne
es
call
mov
mov
jb
dec
sub
lret
jne
fidivrl
arpl
repz
out
xlat
pop
mov
ss
push
inc
push
sbb
push
sbb
cltd
movsb
dec
mov
dec
lea
jns
xor
out
lea
dec
out
inc
nop
mov
adc
jno
sub
fisttpll
adc
fsubrl
inc
mov
popf
aad
push
push
movsl
pop
fs
mov
jge
pop
cmp
sub
shlb
fcmovne
push
imull
test
leave
shll
xor
lahf
sub
cmp
push
adc
mov
fmull
pop
push
in
and
fnstsw
sbb
addr16
or
push
jge
lret
rclb
lock
jecxz
in
sub
movsl
ud0
daa
lock
stos
pop
hlt
cld
cmpsl
fcmovb
test
xor
jnp
push
out
negb
sub
aaa
xchg
aad
loopne
je
push
daa
add
sti
shlb
push
outsl
xor
and
cmc
test
add
cmp
daa
or
imull
xchg
and
aad
sub
adc
sub
adc
cwtl
add
lret
icebp
daa
xorb
outsl
or
stc
lds
mov
bound
jns
inc
in
xchg
fnsave
ljmp
add
sub
or
and
mov
pop
js
adc
jb
cltd
mov
mov
mov
adc
xor
hlt
sbb
js
pushw
adc
faddl
jbe
fbld
pop
ret
inc
outsl
sbb
add
and
test
ret
aas
mov
add
add
mov
xor
sub
push
ljmp
adc
xchg
or
cli
push
es
or
es
test
test
in
mov
jae
in
ret
sub
popl
inc
jbe
mov
ret
mov
lea
sub
cmpl
dec
hlt
mov
xchg
outsl
mov
stos
or
cmp
in
sbb
and
xor
mov
adc
mov
enter
lds
sbb
ds
arpl
xor
and
in
dec
sub
rcr
mov
fisubl
stos
cli
data16
push
mov
sub
and
lahf
outsl
jno
sbb
ljmp
pushf
mov
negb
push
les
shll
pop
ds
sbb
out
mov
inc
inc
dec
cmp
jne
sbb
adc
sub
mov
repnz
mov
fildl
ljmp
dec
lea
mov
sbbl
sahf
fstps
ja
loope
shlb
jne
out
movsb
je
push
mov
pop
mov
ljmp
dec
icebp
cmp
cmp
mov
enter
in
jmp
lret
out
sub
add
sub
cli
mov
and
mov
sub
pop
aam
dec
loopne
pushf
add
lods
mov
clc
outsl
jo
je
mov
or
test
stc
push
sub
jl
inc
mov
fucomp
inc
shr
int3
lret
imul
imul
sub
and
xor
hlt
xor
dec
pop
fld
jg
adc
pushf
cmc
jp
push
sarb
fwait
push
sarl
mov
adc
bnd
andb
xor
push
mov
pop
testb
ret
jecxz
les
mov
ja
mov
movsl
push
les
mov
orl
lea
mov
in
movsb
sub
test
push
cld
or
cld
dec
mov
push
cltd
fdivp
or
adc
push
lock
lahf
cmc
sbb
in
stos
dec
pop
xor
sub
call
es
cmp
mov
adc
sbb
mov
jae
inc
and
repnz
mov
jecxz
jp
cmp
leave
pop
sub
lcall
xlat
sub
mov
je
test
loopne
adc
movsb
cmp
xchg
popf
sub
mov
xor
sub
and
fisubrl
cwtl
fldt
mov
or
lcall
fidivl
add
mov
xchg
lods
scas
sub
daa
lret
mov
mov
push
out
sbb
cmp
lret
mov
xlat
outsb
aam
jmp
pop
addr16
int3
xchg
xor
icebp
mov
hlt
xorl
push
stc
sub
test
xchg
or
cmp
cmpsl
repnz
insl
xor
mov
pop
mov
push
jno
mov
or
fsubl
pop
mov
pop
jbe
sub
mov
lods
xchg
sub
or
adc
cli
sub
xlat
push
push
mov
rclb
loopne
xor
test
rcl
cmp
loop
mov
sub
sbb
cmp
adc
sti
cmpsb
imull
stc
scas
or
xchg
je
pop
push
dec
jbe
fcomps
ret
xchg
fildll
insl
xchg
xchg
adc
push
xor
pop
cmp
push
stos
or
adc
mov
dec
pop
icebp
addb
xchg
adc
mov
jo
sbb
scas
fnstenv
rorb
or
sbb
and
lahf
cmc
mov
outsb
das
stos
push
hlt
mulb
jns
aam
repnz
xor
test
pop
mov
adc
popa
inc
leave
mov
mov
scas
add
mov
int
bound
dec
jb
mov
aad
mov
loope
push
mov
push
addr16
imul
sub
das
xchg
loopne
lahf
push
iret
mov
and
jl
cmovns
repz
push
xchg
lcall
push
bound
pushf
mov
push
cmc
pop
mov
fdiv
jns
out
fwait
aad
test
enter
fimull
sbb
stc
mov
mov
push
mov
clc
leave
jo
pop
add
cmpl
mov
out
and
stos
pop
clc
outsl
push
hlt
push
scas
cmp
loope
inc
mov
inc
mov
mov
cmp
mov
jo
jae
add
xchg
or
xchg
ja
and
repz
mov
sbb
or
cmp
adc
fldenv
aam
mov
dec
push
int3
sbb
popa
pushf
xchg
inc
sbb
xlat
mov
ljmp
jae
sbb
cmp
incb
ja
inc
mov
movsl
dec
xchg
lock
mov
test
loop
test
sub
jae
jp
imul
push
lahf
int
mov
fisubs
into
aas
sbb
sub
xor
loope
fwait
enter
jbe
std
push
push
fldl
movsl
xchg
xor
pop
bound
or
and
mov
xor
jle
into
jbe
jns
out
or
mov
jmp
and
adc
nop
sbb
out
mov
mov
mov
mov
test
pop
fstl
cs
push
push
xor
dec
pushf
sti
mov
inc
mov
cmp
out
mov
fsubrl
mov
cmp
aaa
pop
sub
push
repnz
add
inc
sbb
aad
pop
sub
test
xchg
jmp
sub
or
dec
in
or
cmp
test
int
imul
fdivrl
in
enter
adc
jb
outsl
dec
add
cmp
cld
pusha
loope
add
pop
iret
ja
nop
ret
in
movsl
jmp
sub
push
not
lock
in
fucomip
mov
addr16
mov
add
loop
dec
pop
adc
ds
push
int
xchg
xchg
lods
scas
mov
jne
xlat
int
in
bound
and
cmpsb
mov
pop
nop
push
dec
cli
jns
movsb
sbb
pop
jle
cwtl
fnstsw
shll
stos
mov
xchg
inc
mov
jmp
add
fbstp
pop
jmp
mov
inc
ja
sbb
int3
pop
out
jno
cmpl
int3
push
sbb
push
addl
dec
call
mov
lock
dec
daa
fidivrs
data16
dec
inc
test
add
pop
inc
bound
mov
rcrl
mov
jg
dec
les
dec
jge
insl
push
jp
mov
mov
in
ljmp
sub
dec
jge
insl
push
jp
mov
mov
in
ljmp
sub
or
push
jp
mov
lods
stos
popf
mov
in
ljmp
sub
dec
jge
insl
ljmp
pop
add
push
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jg
outsl
scas
pop
sahf
dec
mov
xchg
dec
subl
in
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
ds
dec
fistps
iret
push
mov
sbb
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
call
stos
push
mov
sub
dec
or
fbstp
cmp
hlt
add
lret
les
aad
enter
and
ja
enter
nop
mov
jge
adc
fsub
mov
and
xor
leave
push
ficomps
and
mov
push
std
aas
aad
push
and
cli
ror
fimuls
mov
mov
dec
sub
push
call
out
inc
push
rdtsc
pmulhw
loope,pt
pop
out
adc
xchg
addr16
sub
ljmp
decl
sti
jecxz
test
ret
push
loope
into
out
outsb
das
xchg
pusha
mov
xchg
push
gs
mov
adc
movsb
arpl
dec
stos
cs
push
movsl
cvtdq2ps
test
mov
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
daa
sbb
or
sbb
or
pop
xchg
inc
out
jo
mov
lods
jbe
dec
cmp
out
sbb
or
push
cld
pop
mov
mov
dec
into
lea
pop
mov
sbb
in
sbb
outsl
std
sbb
sub
jp
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
push
out
sub
leave
out
xor
push
dec
mov
cmp
loopne
mov
imul
and
fst
cwtl
push
clc
sub
enter
pop
scas
int
add
daa
sub
int3
jecxz
cwtl
mov
repnz
outsb
in
cmp
inc
xor
ja
mov
dec
popa
sub
cli
and
sbb
mov
mov
pop
xchg
sub
jnp
pop
xchg
addr16
pop
dec
into
add
cld
and
adc
pop
imul
mov
lret
mov
or
faddp
sub
sbb
sbb
cli
pop
xor
add
mov
test
mov
cs
loope
insb
push
ljmp
movsl
addr16
xor
add
stc
adc
imul
test
mov
jnp
mov
shrb
out
call
push
cmp
mov
or
jle
aad
lret
scas
push
shr
sub
test
fmuls
imul
pop
fcmovu
cltd
cmp
pop
mov
cmp
adc
insl
push
in
cmp
aad
test
je
mov
imul
enter
lods
sub
test
or
mul
pushf
mov
push
lret
roll
pop
sysenter
jg
nop
out
adc
mov
es
mov
jecxz
cli
into
inc
adc
xchg
insl
sub
mov
inc
aaa
fnstsw
leave
es
jns
test
in
idiv
movsl
in
ja
lods
fincstp
push
dec
mov
mov
or
test
clc
pop
pop
test
sbb
and
daa
xlat
cld
sbb
clc
pop
sub
in
stos
das
pop
and
sarb
in
popf
sub
dec
stos
add
fnstsw
inc
cmpl
inc
les
sbb
sbb
test
inc
pop
mov
and
jmp
add
cmp
push
dec
les
or
imul
jge
jne
add
repnz
and
jae
mov
xchg
fsubl
jmp
mov
sbb
xchg
cmp
jne
in
xchg
sub
int
sti
std
adc
rcr
jo
xor
mov
nop
pop
mov
cmc
out
int3
shl
outsl
mov
ds
call
push
ret
decb
inc
cli
xchg
test
dec
in
adc
push
jne
or
mov
popf
cmp
je
jp
and
xlat
pop
dec
aad
lock
es
cmp
test
fmul
push
push
arpl
dec
xor
or
xor
aam
sti
out
xchg
cwtl
lds
inc
xor
loop
sub
pop
cmp
cltd
adc
mov
xchg
jg
loope
cmp
pop
pusha
push
insb
xor
inc
imulb
nop
jecxz
mov
ficomps
mov
sbb
adc
pop
out
lods
dec
aaa
xchg
inc
movl
hlt
pop
mov
or
lock
xchg
sbb
fdivs
mov
jns
mov
jp
call
pusha
xchg
faddl
pop
push
inc
je
adc
pop
jne
repz
sub
lret
xchg
insb
aam
xchg
add
cmp
xor
ret
cmpsl
dec
mov
mov
test
push
call
push
sbb
movsb
jnp
cmp
sahf
sbb
mov
ljmp
push
aam
add
movsl
cmp
jb
das
adc
xchg
cs
hlt
cmpsl
dec
insb
lret
push
addl
push
in
xlat
push
daa
add
arpl
nop
test
je
or
cltd
test
in
fwait
mov
cwtl
in
sub
mov
aad
cmp
add
ds
mov
mov
nop
add
std
inc
and
gs
shll
or
cwtl
lcall
lods
int
mov
cmp
pushf
jecxz
jle
or
and
mov
sbb
sahf
cltd
xor
pop
lods
bound
lcall
push
mov
popf
dec
in
or
pop
pop
adc
lahf
sub
adc
cli
jge
or
jmp
mov
dec
rcrl
cmp
scas
push
popf
push
imul
lods
lea
jnp
dec
adc
mov
repz
xor
adc
sub
fdiv
scas
ljmp
jmp
repnz
shlb
pop
pop
inc
jnp
pop
xlat
xor
shrb
loop
sbb
push
bound
test
inc
adcb
xor
cs
mov
mov
push
mov
out
lods
add
jmp
xor
lea
sbb
mov
shr
nop
call
inc
and
dec
dec
cmc
push
dec
pop
inc
dec
sbb
inc
in
aas
dec
cld
loop
push
adc
mov
imulb
inc
mov
xchg
lret
lcall
dec
lock
std
jg
mov
in
inc
sbb
stc
or
rol
push
popf
pop
xchg
pop
and
arpl
jecxz
je
push
cmp
call
in
insl
iret
xchg
lock
mov
test
aaa
andl
outsl
insl
int3
xchg
jae
jge
add
bound
cmp
hlt
xchg
push
xchg
xor
xor
adc
cmpsl
fdivrl
mov
inc
jecxz
ret
xorl
js
dec
adc
push
push
enter
sti
stc
imul
sbb
pusha
xor
sub
in
inc
fsubrs
or
test
push
mov
sahf
mov
inc
orl
scas
test
lds
add
out
subl
scas
leave
jp
daa
imul
jns
jl
arpl
lods
xlat
push
xlat
test
rolb
roll
insb
cltd
xor
les
push
bnd
pop
push
adc
bound
shlb
push
pop
adc
mov
push
popf
int3
fwait
jnp
mov
pop
pop
loop
cmp
dec
mov
jg
push
sub
or
sbb
xchg
mov
push
mov
int
mov
pusha
cmpsb
jecxz
jg
and
sub
jp
add
fs
lods
testl
cmpsl
std
pop
arpl
sub
testb
adc
test
adcb
test
jle
movsl
enter
or
icebp
push
inc
fisubrs
jl
and
and
repz
icebp
inc
mov
std
popf
jb
dec
test
xor
and
in
lds
in
cmpsb
pop
nop
dec
pop
lahf
mov
aad
lret
clc
xchg
cmp
push
and
inc
fists
inc
sbb
pop
pop
mov
fucomp
adc
insb
push
js
gs
in
ret
inc
xlat
in
leave
mov
mov
mov
and
pop
mov
cmp
push
or
leave
cmp
das
xchg
pop
test
sbb
hlt
jge
mov
lock
rorl
sbb
test
in
fs
mov
mov
lods
sbb
lret
mov
pop
ds
or
rcll
sahf
in
inc
sbbl
add
std
jmp
cmpb
ja
in
popf
aas
mov
xchg
mov
mov
test
pop
imul
push
xor
cld
ret
mov
stos
sti
inc
add
fcomp
xchg
xchg
xchg
test
aam
jno
jno
jae
dec
fstl
mov
pop
in
xor
aam
cmpsl
scas
or
in
lahf
pop
adc
arpl
mov
je
cmpsb
mov
fidivl
xor
mov
sub
call
pop
decl
sub
push
lret
mov
mov
xor
push
adc
jae
xor
incl
popa
cmp
xchg
xor
or
cmc
aam
in
mov
sub
aas
sub
add
inc
dec
les
mov
std
das
fdivrp
push
mov
in
fadd
inc
int3
cmp
je
popa
push
cmpsl
inc
ret
xchg
pusha
pop
vmulpd
mov
pusha
data16
push
ficompl
mov
inc
push
cs
aam
aad
jecxz
inc
repz
cmp
xchg
push
cmp
sbb
push
lds
jnp
outsl
into
add
test
and
adc
shrl
xor
jg
mov
in
pop
fiaddl
mov
data16
mov
mov
leave
xchg
dec
cmp
dec
mov
or
inc
call
dec
push
adc
cmp
xchg
fsubrs
xchg
enter
js
jp
dec
push
popa
cld
fnstsw
sti
or
xchg
lods
xor
mov
dec
mov
push
pop
cltd
mov
jnp
add
mov
movsb
mov
loop
aas
and
dec
icebp
mov
mov
dec
fs
sbb
add
add
sub
push
push
imul
jle
popa
sbb
jmp
out
icebp
xor
cli
lea
push
dec
lahf
jle
dec
add
icebp
mov
iret
enter
sub
pop
cmpsb
jnp
dec
rorl
or
ja
cmpsl
jle
leave
dec
inc
cs
inc
lret
mov
push
mov
negb
mov
push
das
mov
mov
jb
mov
adc
push
pop
std
mov
cmp
add
add
mov
cmp
xchg
stos
or
cmpsb
add
shlb
scas
pop
shll
lods
jl
cmpl
inc
mov
aas
ja
jmp
or
rorb
add
mov
mov
repnz
cmp
fcmovnu
cmp
mov
or
pop
popa
gs
divb
push
push
adc
sub
divb
js
clc
cmc
sub
fdivrl
dec
mov
mov
lret
mov
shlb
push
ss
out
out
xor
add
pop
inc
push
add
pop
mov
or
dec
add
paddb
data16
ja
inc
pop
xchg
outsl
dec
out
fistpl
je
or
cmp
mov
test
in
imul
das
je
push
pop
xor
add
push
dec
push
xlat
xchg
je
adc
sub
push
shr
adc
shll
add
sahf
xor
or
pop
fistps
sbb
xchg
xchg
cli
mov
push
sub
xlat
imul
dec
out
push
mov
bound
or
and
sbb
inc
and
push
inc
mov
cmp
out
xchg
add
xchg
xchg
mov
xchg
mov
cmp
mov
lock
fld
cmp
sbb
mov
jne
sub
push
loopne
adc
cmp
sbb
imul
pop
adc
insl
les
test
bound
adc
pop
xor
dec
in
push
jecxz
sarl
mov
jg
pusha
cmp
xchg
adc
mov
mov
sti
clc
loope
cmpsl
sahf
add
ficomps
andl
dec
mov
lock
cs
sub
nop
out
add
mov
adc
cmp
stc
fisubs
repnz
cwtl
imul
in
mov
fisubrs
adcb
scas
xchg
cwtl
ljmp
adc
pop
xor
mov
mov
jecxz
inc
loop
dec
push
mov
dec
jo
int3
xchg
jbe
sub
cmpsl
fdivrp
daa
mov
cmpsl
add
dec
test
push
mov
xchg
xor
jmp
sbb
jg
pop
cmp
dec
mov
pop
jp
push
bound
mov
pushf
fimuls
push
call
mov
cmp
add
arpl
js
enter
js
stos
daa
roll
std
stos
push
mov
mov
dec
inc
gs
shld
push
inc
pop
push
adc
dec
xchg
stos
and
xchg
int3
pop
cmp
mov
pop
sub
flds
fildll
sub
inc
stos
loopne
pop
es
mov
out
xorl
rcll
xchg
dec
jl
mov
cmp
pop
push
mov
lahf
cs
sbb
cld
mov
and
inc
add
mov
xchg
dec
lock
je
jmp
adc
push
mov
loop
xchg
fs
or
insb
mov
mov
loopne
gs
xor
adc
inc
adc
aas
push
pop
mov
xor
bound
add
loop
out
ret
xor
andl
jno
dec
jle
pop
sub
inc
outsl
std
ss
ja
loop
sub
mov
aam
scas
mov
les
sbb
mov
add
jecxz
out
adc
fs
xchg
les
shll
insb
or
or
xor
xchg
pop
sub
jo
mov
stos
scas
jge
int3
hlt
cmp
push
test
adc
test
aas
cmp
sub
shll
cmp
imul
roll
pop
sti
jns
or
popa
arpl
sbb
mov
pop
jb
stos
sub
mov
push
in
fimuls
int3
mov
movsb
mov
xchg
filds
mov
in
repnz
lcall
xchg
xor
loope
xchg
int
adc
add
xchg
mov
hlt
pop
inc
dec
call
stos
std
sub
push
ljmp
fstl
mov
push
aaa
in
push
mov
stos
or
dec
test
pop
xchg
test
ljmp
imul
adc
dec
xchg
cmpsl
push
jp
inc
ret
or
movsb
adc
imul
fcmovbe
bound
cmp
cmp
and
inc
jp
mov
iret
jbe
push
rcrl
jp
xchg
les
lahf
push
shrl
aas
fisubrl
xlat
sar
icebp
andl
or
mov
push
lods
aas
lret
pusha
mov
adc
mov
dec
adc
test
in
lahf
jl
je
dec
shlb
hlt
dec
adc
in
pusha
and
mov
sbb
in
das
xchg
sbb
addr16
out
aas
jne
pop
cmp
push
dec
fsubr
test
int3
jae
les
lret
andb
inc
push
jg
not
adc
sbb
jno
xchg
push
dec
xor
lock
and
mov
sbb
sbb
js
lret
xor
fists
push
and
test
jge
cmp
lcall
iret
mov
mov
lds
xchg
cmp
aad
mov
pop
out
icebp
xchg
es
bound
stc
push
jo
sahf
xchg
insb
sahf
jecxz
dec
ja
dec
fs
mov
aad
adc
das
jno
test
mov
lds
scas
lahf
jmp
add
in
ja
test
sbb
inc
or
out
cld
jo
push
repz
iret
mov
subb
ret
jne
pop
mov
lahf
mov
inc
mov
cs
mov
dec
sti
test
jle
and
rcrl
jns
mov
adc
or
xchg
inc
jae
adc
loop
je
sbb
and
jnp
shrl
cmpsl
jecxz
and
mov
or
outsb
pop
jb
or
push
pop
pop
outsb
pop
cwtl
or
mov
popa
insb
lcall
and
shrl
or
mov
dec
imul
mov
outsl
stos
addr16
stos
add
fldt
pop
dec
mov
repz
xor
loope
cmp
out
jge
mov
sahf
and
outsl
daa
shl
test
dec
int3
adc
divl
sar
add
lcall
pop
cmpsl
cmp
pop
mov
call
and
mov
test
subb
ljmp
add
je
int3
jmp
mov
sbb
sbb
test
cmc
test
imul
sbb
cwtl
adc
mov
or
mov
hlt
pop
mov
mov
mov
test
mov
adc
push
addr16
lea
cmp
push
push
or
mov
adc
adcl
incl
lods
add
add
add
imul
cmpsb
jae
jo
ret
sbb
iret
in
and
fldenv
xor
call
lcall
fidivs
addl
ds
jbe
xor
dec
xor
das
push
jns
addl
fisttps
sbb
data16
xlat
dec
pusha
pop
fwait
xchg
sahf
mov
lea
xchg
or
sbb
test
loope
xchg
cwtl
xlat
lods
inc
les
mov
add
test
dec
add
mov
movsl
jb
xor
sti
out
pop
lcall
push
das
mov
sub
mov
popa
jbe
mov
rcll
leave
ud0
into
push
and
in
add
jne
add
bound
jmp
fiaddl
es
lahf
mov
scas
push
mov
inc
int
lcall
mov
cwtl
mov
mov
clc
xchg
push
mov
add
xchg
or
and
repz
xchg
in
out
mov
sbb
stc
xor
push
push
repz
or
cmpsb
dec
call
xchg
aaa
cmpsb
movsb
inc
imul
rolb
aam
int
push
dec
mov
and
mov
mov
popa
call
adc
pop
repz
mov
cltd
sub
in
jge
pop
jmp
and
add
adc
jge
jmp
in
sub
je
jecxz
push
adc
mov
inc
jmp
mov
into
mov
add
sub
dec
fs
fimuls
xchg
xor
aas
pusha
testl
jae
sub
fidivs
mov
popa
imul
test
sti
sub
cs
es
aad
cmp
pop
insb
lret
cmpsb
lock
mov
lds
inc
push
testl
adc
fcmovne
cmp
pop
or
adc
fs
mov
ret
jbe
aas
pop
or
add
sbb
cmpsb
mov
out
adc
cltd
mov
xlat
sub
xchg
pop
xchg
sbb
lahf
shll
or
fists
sub
shlb
imul
ljmp
icebp
and
mov
sti
loop
stos
cmpsb
dec
int
xchg
test
and
mov
icebp
lcall
mov
popa
inc
imul
cmp
pop
les
insl
mov
push
rcrl
adc
push
xchg
je
jno
fstps
or
pop
xor
cmp
clc
cmpsl
push
xchg
int
stos
lock
jle
inc
mov
mov
inc
pop
iret
je
or
jecxz
xor
cmc
push
inc
add
xchg
call
cwtl
ret
xchg
jnp
adc
inc
subl
dec
inc
push
push
xor
sub
into
jno
fwait
inc
mov
or
js
cmpsb
scas
and
subb
cmpsb
dec
pop
pop
mov
addr16
sbb
push
ret
out
rclb
or
inc
outsl
inc
loope
pushf
dec
cwtl
inc
sub
pop
cli
in
push
mov
xchg
ss
mov
cs
mov
out
sub
mov
shl
cmpsb
out
mov
aas
cmc
out
test
aas
pop
add
imul
mov
xor
sub
push
and
out
nop
in
shlb
movsl
jge
sti
es
xchg
testb
fstpl
or
sub
pop
add
filds
es
jge
mov
pop
andl
int
clc
loop
cltd
repz
adc
into
dec
test
je
add
or
jle
movsb
jb
xchg
hlt
and
leave
mov
dec
mov
outsl
mov
inc
cmp
pop
bound
mov
pop
stos
clc
fs
sub
aam
adc
scas
xor
frstor
mov
hlt
sbb
and
lret
popa
xor
pop
dec
arpl
pop
inc
dec
rcrb
ss
insl
shr
push
adc
mov
jge
fildl
adc
fdivrp
cmp
addb
xorb
mov
or
dec
imul
push
dec
cmp
es
mov
in
std
movsb
mov
jbe
cmpsl
adc
push
push
sti
mov
mov
popf
jg
addr16
push
pop
pushl
je
ss
hlt
imul
popl
into
cmpsl
inc
mov
mov
mov
mov
mov
enter
in
lods
adcl
call
jmp
or
pcmpeqd
cs
mov
ret
test
sbb
jle
bound
paddusb
mov
aas
in
sbb
test
inc
add
cltd
lea
jns
xor
pop
cs
movsb
fidivrs
stos
mov
cmp
xchg
xlat
fstpl
scas
orb
xchg
into
cmpsb
inc
jle
cwtl
loopne
or
outsb
cmp
jge
xchg
push
sub
mov
fsubl
ret
outsb
cld
and
sti
lods
sub
pop
and
xchg
je
mov
jne
loop
push
data16
sbb
cli
push
int
xchg
sbb
jle
popa
gs
cmpsb
fists
cltd
mov
xchg
dec
mov
aam
mov
inc
jmp
inc
aam
out
ret
sbb
sbb
mov
aaa
loop
ljmp
jo
mov
mov
arpl
adc
insb
dec
mov
mov
shll
pop
jb
cs
lods
je
xchg
scas
pusha
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
pop
fimuls
into
ds
fistps
iret
push
mov
pop
dec
jg
outsl
cs
push
dec
mov
outsb
pop
fimuls
into
mov
into
push
mov
pop
dec
jg
outsl
scas
pop
sahf
dec
mov
das
out
lahf
fimuls
test
iret
jns
mulb
xchg
addr16
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
repnz
rolb
push
jg
rcrb
push
mov
jb
arpl
push
movb
cmpsb
and
adc
loop
rolb
push
mov
mov
push
jb
notb
inc
repnz
and
repnz
rolb
push
mov
mov
push
jb
inc
stos
ds
xor
dec
shlb
insb
xchg
lods
data16
shlb
scas
mov
cltd
add
lods
mov
jbe
outsb
inc
or
imul
dec
fisubs
push
pop
out
lods
mov
cmp
mov
mov
cmp
jno
mov
jb
or
adcb
cmpsb
pop
test
add
mov
daa
mov
pop
out
addb
out
lods
cmp
sub
cmc
out
js
mov
sti
add
jmp
mov
inc
lcall
in
outsb
inc
xchg
pavgw
and
push
xor
and
ret
bound
inc
push
xchg
adcb
inc
ret
mov
push
jb
notb
inc
xor
add
mov
xchg
movsl
mov
dec
shlb
arpl
lahf
push
test
mov
jno
inc
repz
daa
xchg
inc
scas
add
imul
lcall
dec
fnstcw
ja
xchg
ss
mov
dec
mov
push
jb
notb
inc
xor
add
rolb
push
mov
mov
push
jb
notb
inc
xor
add
dec
mov
xchg
and
jne
add
popf
jnp
mov
push
in
ja
imulb
in
xlat
outsl
mov
fwait
mov
shrb
imul
les
imul
xor
mov
jae
imul
popf
stc
mov
or
adc
enter
je
add
mov
sub
pop
fwait
mov
pop
mov
sub
push
adc
or
imul
es
add
cmp
push
sub
fbld
decb
ret
pop
enter
daa
push
add
insl
jb
fdivr
sbb
rolb
jg
or
outsb
stc
push
int3
xchg
mov
xor
and
neg
xchg
push
xchg
into
mov
cmp
les
mov
shlb
fisttpll
lock
imul
cmpsb
aaa
sbb
mov
ja
es
lods
dec
add
xchg
adc
pop
ret
xor
arpl
rcll
in
test
enter
xor
cld
fwait
js
repz
xchg
dec
cmp
insl
test
xor
mov
or
add
rol
lods
roll
pop
shufps
xchg
push
shlb
push
jb
pop
dec
lds
jge
ja
cltd
mov
repz
test
int3
movsb
sub
sarl
or
push
aad
push
rclb
in
cmp
icebp
jl
cmpb
lcall
or
pop
jmp
dec
fwait
xor
push
rorb
push
mov
cwtl
xor
dec
icebp
leave
flds
mov
lcall
gs
jle
pusha
ret
stos
popf
push
mov
idiv
outsl
data16
ds
or
repz
inc
imul
call
mov
in
dec
imul
mov
roll
mov
mov
xor
mov
xchg
add
or
push
adc
sub
lcall
lcall
and
inc
pop
loopne
jnp
mov
sbb
loop
xor
out
js
push
pop
xor
sbb
sub
dec
mov
shlb
shlb
subb
repnz
add
add
jns
mov
test
fwait
add
dec
pop
out
mov
insl
mov
jae
mov
je
hlt
shlb
cmp
push
es
pushf
imul
rolb
add
inc
pop
mov
stos
jne
adc
inc
pop
mov
mov
scas
dec
in
inc
cld
push
int
push
inc
push
adc
dec
cmp
cmpsl
inc
push
and
rcrl
push
mov
insl
popf
sub
aad
and
aam
mov
sbb
ss
inc
mov
inc
aaa
lods
xlat
out
repz
add
and
mov
mov
dec
jb
cli
dec
loop
add
xchg
mov
sbb
ret
outsb
inc
adc
push
adc
js
fxch
cmc
jecxz
pop
jae
push
adc
jmp
push
jmp
pop
mov
or
or
dec
sub
lods
shr
ljmp
inc
sbb
scas
ljmp
mov
add
hlt
andb
ds
dec
scas
jbe
dec
mov
xlat
jno
push
xor
push
mov
fwait
sub
out
sub
jb
push
cmc
sbb
ror
fiaddl
stos
mov
and
push
push
sub
xchg
icebp
xchg
cmp
in
jo
je
mov
mov
xor
ficompl
xchg
fsubl
jmp
mov
clc
lcall
lods
lods
add
ds
cmp
popa
pop
inc
mov
adc
jge
pop
arpl
xchg
repnz
pusha
mov
or
gs
mov
pushl
mov
sub
stos
icebp
pop
xchg
push
imul
pop
sbbl
jle
nop
scas
mov
sbbl
xor
xor
dec
test
push
xchg
inc
pop
mov
sbb
movsl
push
xor
sti
aad
loopne
xchg
mov
movsl
cmp
cmp
and
xchg
xor
inc
mov
sub
xor
es
sub
sub
ja
arpl
inc
addl
les
into
outsb
and
loopne
jne
cmpsl
sar
add
dec
call
dec
rcll
rcll
inc
and
in
mov
icebp
insb
iret
lret
lret
shll
das
cmp
cltd
adc
or
das
ss
into
mov
sbb
pop
loop
fcmovu
adc
xchg
dec
flds
xor
xchg
test
lods
addr16
inc
movsl
stc
loope
sbb
pop
xor
jp
das
mov
cltd
out
mov
enter
mov
mov
add
pop
and
aad
rorb
outsl
clc
or
movsb
push
xchg
mov
aas
fidivs
lret
and
int
jae
int
dec
dec
push
xchg
jecxz
stc
xor
xchg
mov
mov
dec
jmp
mov
add
cmp
test
stos
dec
fucompp
add
inc
sub
mov
movsl
pop
mov
outsb
sub
lret
dec
xchg
fimuls
dec
sub
mov
rol
pushl
dec
shll
xchg
push
jbe
dec
pop
adc
jle
jnp
rcrb
stos
aaa
fsubr
mov
and
cli
push
xchg
add
add
ret
xchg
incl
sbb
cmpsb
test
dec
stc
fstps
pop
cmp
xchg
or
mov
movsb
int3
pop
fidivrl
push
cmc
xchg
in
lcall
jg
ret
and
cwtl
push
stos
nop
jle
dec
cmc
int3
shl
push
or
inc
push
aam
fs
mov
adc
pop
push
jg
adc
mov
std
cmpsl
shll
inc
sub
gs
dec
daa
lret
mov
pop
sbb
hlt
lret
inc
popa
daa
out
pop
inc
fwait
xor
xchg
pop
testb
hlt
inc
ficoml
push
mov
jmp
movsl
add
daa
mov
mov
pop
lea
push
es
aas
push
out
push
push
push
cwtl
xchg
add
cmpsl
sbb
test
jl
imul
mov
dec
movl
jmp
push
nop
xlat
in
out
clc
inc
test
xor
pusha
jo
dec
lret
bound
call
das
in
jbe
std
mov
cmp
movsb
mov
or
pop
mov
pop
ds
or
and
mov
mov
jge
imul
popf
aad
xor
gs
jb
outsb
sahf
inc
cwtl
lods
stc
cld
inc
sti
fidivrs
jp
mov
sbb
pop
or
xor
xor
dec
lret
cmp
adc
pop
push
les
nopl
xchg
in
lock
out
push
sbb
push
sbb
xor
repnz
lods
sahf
aam
rcrl
mov
stos
hlt
gs
ret
or
cwtl
icebp
jne
push
int
lahf
or
hlt
popa
adc
xor
outsb
pusha
xor
test
shl
cmpsl
or
add
cmpsl
jmp
inc
mov
cmp
movsl
pop
adc
sahf
jns
popa
mov
xchg
dec
sbb
std
dec
or
and
adc
rclb
push
sarb
cmp
gs
ss
cltd
dec
dec
xor
mov
jns
out
inc
mov
push
loop
lret
ds
push
mov
mov
inc
lret
add
pop
in
push
cli
mov
aam
mov
or
xchg
jns
xchg
push
cmp
adc
adc
out
mov
fisttps
mov
mov
insb
jb
das
fnsave
jns
xchg
cld
inc
sti
xchg
fsubl
cs
push
insl
xor
fadd
lret
bound
jne
out
lret
shl
fsub
out
sbb
add
sub
faddl
xor
inc
std
dec
pop
sbb
push
in
negb
push
xchg
in
mov
fiaddl
fisubs
lods
imul
sub
mov
pop
lcall
mov
mov
and
cmp
mov
xchg
jl
leave
addr16
push
fisubrs
fs
shlb
cld
sbb
rcrb
pop
je
rcll
xchg
mov
fs
mov
xchg
pushf
testl
pop
ret
xor
push
insb
jg
dec
aad
lock
into
mov
clc
mov
xchg
mov
xchg
sbb
icebp
jbe
test
sub
or
or
lret
pop
imul
mov
mov
xchg
push
xchg
xchg
mov
and
mov
and
mov
les
mov
jne
or
cmc
or
dec
and
dec
in
xor
cltd
movsl
rcrl
jle
call
mov
jmp
push
addb
daa
sbb
dec
push
mov
cmpsb
jecxz
ror
sbb
gs
ret
daa
push
xchg
dec
addl
test
aam
dec
pop
cmpb
subb
cwtl
ss
xchg
xchg
xor
movsl
daa
mov
xchg
dec
add
imul
pop
mov
fcomps
push
jbe
jmp
outsb
test
and
dec
cli
imul
push
rorb
or
mov
call
sarb
mov
cld
ljmp
into
dec
adc
inc
insl
sbb
add
mov
push
inc
sub
sbb
jns
sbb
out
mov
push
stc
incl
mov
mov
fnstenv
outsl
sahf
cmc
mov
xchg
fwait
daa
negb
scas
loope
ret
and
mov
cmp
imul
call
aaa
pop
jnp
pop
push
mov
outsb
sub
aaa
push
inc
lds
xchg
insb
xchg
rcr
sub
leave
sbb
jl
mov
inc
adc
into
inc
jns
adc
adc
cmpsb
mov
out
mov
xchg
rclb
mov
es
push
data16
push
adcb
out
jge
and
shlb
cmp
lcall
jns
push
pop
dec
jmp
jo
lods
xchg
mov
daa
loop
out
in
dec
lret
dec
mov
push
test
cmp
fwait
or
jae
mov
addr16
pop
ljmp
and
pop
int
lret
or
push
shlb
jle
jae
mov
cmp
sub
inc
mov
popf
xchg
or
out
daa
and
aam
popf
inc
push
adc
imul
xchg
je
imul
sbb
mov
shrb
mov
mov
xchg
pop
fdivrs
or
sub
lea
inc
cmp
fwait
jg
test
dec
decb
pusha
subl
dec
pop
lret
repz
mov
outsb
mov
jecxz
pop
daa
jb
xchg
sub
push
adc
aas
xor
jne
mov
add
mov
and
push
arpl
pushf
mov
test
std
cmp
loope
and
xlat
push
flds
iret
or
jnp
sbb
or
decb
jle
push
mov
xor
pop
adc
subb
xor
inc
dec
dec
ljmp
and
mov
mov
add
xor
std
into
popa
popf
das
cmp
mov
mov
out
dec
xor
xchg
lods
and
jmp
rcll
adc
outsb
ljmp
jle
mov
sti
lods
mov
sub
imul
movsl
int
xchg
dec
cs
jne
dec
xor
jne
add
ret
xor
inc
sbb
xor
pop
push
xor
filds
sbb
inc
mov
xorl
cli
pop
inc
scas
xlat
pop
and
push
insl
cmp
cli
ja
es
lds
sub
push
xor
jo
sbb
mov
out
clc
cmp
pop
in
roll
pusha
lret
mov
push
sub
lods
xchg
arpl
shr
stos
addb
xchg
das
jbe
jmp
mov
mov
inc
mov
sub
jge
dec
cmp
cmp
and
mov
mov
mov
out
dec
inc
imul
bound
sbb
push
xchg
push
imul
push
xor
test
stos
sub
test
mov
mov
add
aad
and
push
test
in
enter
xor
lea
mov
shrb
cld
mov
push
ret
rolb
push
jle
xchg
ret
cmp
sbb
xchg
test
ja
mov
dec
pushf
inc
adc
stos
cmpsb
cmp
add
enter
mov
sub
daa
xorb
mov
cmp
cld
nop
in
daa
mov
mov
push
je
pop
ja
add
fstpl
cmpb
lock
push
add
inc
gs
ds
lret
scas
adc
xor
xor
jns
je
movsb
sub
jmp
in
cs
js
mov
mov
imul
mov
arpl
push
sub
inc
mov
test
scas
insb
gs
jns
jns
inc
stos
push
sbb
jmp
push
push
int
push
adc
or
fsub
stos
cltd
xor
jbe
insl
push
mov
daa
mov
mov
in
repz
dec
mov
repnz
lret
cmc
fld
fdivs
xor
aas
ret
data16
xchg
adc
mov
jb
jp
xor
dec
mov
lcall
nop
lret
inc
repz
test
xchg
mov
inc
sbb
into
loopne
adc
js
dec
or
imul
out
outsb
jae
fisttps
xchg
mov
adc
fdivrl
pop
out
es
or
jecxz
xchg
les
test
adc
sahf
mov
inc
scas
in
cwtl
data16
sbb
fisttpl
shlb
sbb
loope
int3
inc
setnp
andb
adc
dec
xchg
pushf
mov
aad
jbe
in
dec
jbe
xor
xchg
dec
xor
mov
pop
push
cli
jg
sahf
pop
mov
test
mov
jl
insb
lds
inc
inc
push
mov
or
push
adc
js
scas
cltd
mov
jmp
mov
mov
sbb
xor
adc
lahf
push
jb
mov
dec
xchg
mov
shlb
pop
outsb
outsb
xor
push
shl
mov
or
insl
cld
push
dec
sahf
mov
dec
pop
movsb
iret
fs
enter
in
jns
mov
imul
mov
add
call
push
xor
arpl
mov
sub
sbb
xlat
pop
in
add
jbe
lock
and
push
push
adc
pushl
pop
add
sysret
int3
iret
xlat
cmc
call
vmovups
lods
cwtl
mov
sub
mov
repz
push
mov
cmp
out
cmpl
popf
sahf
dec
bound
jle
or
mov
xor
jne
flds
push
pop
data16
cmp
je
inc
mov
mov
mov
outsb
repnz
xchg
enter
mov
loope
push
les
mov
in
add
adc
shrl
dec
mov
aas
dec
sbb
sub
sarl
and
ja
or
scas
es
lea
pop
call
fmul
push
outsb
cmpsl
cmc
jnp
add
or
popa
test
push
das
sub
popa
jae
shl
inc
in
add
insl
cmp
jle
out
hlt
out
inc
out
push
ljmp
inc
outsl
xor
and
loope
jnp,pt
call
cli
push
jmp
mov
push
movsl
inc
sbb
scas
xor
xchg
or
jmp
mov
adc
mov
and
scas
add
sub
push
xor
xor
xchg
popa
repz
xor
xorb
test
insl
xor
sub
mov
pusha
mov
stos
movsl
inc
dec
mov
push
cli
fidivl
shl
test
push
sub
jnp
shr
lock
sbb
mov
mov
iret
mov
cmp
test
dec
push
add
scas
es
ret
jge
lcall
pop
adcb
jne
mov
mov
enter
lock
push
xchg
sti
adc
jmp
push
jmp
negl
sbb
sub
xlat
gs
jmp
test
mov
cmpsl
pop
fs
sub
mov
dec
sarb
or
xor
sub
shr
ret
mov
and
jo
arpl
cmp
lods
cld
pop
in
jne
sbb
push
shll
insl
mov
jg
mov
ret
cltd
jo,pn
fwait
das
shll
and
shl
push
rclb
or
and
mov
mov
fcmovb
repz
cmp
popa
fwait
dec
ss
clc
imul
loop
fcoml
xor
mov
ret
je
mov
inc
mov
pop
test
mov
sbb
popaw
and
xor
push
push
adc
mov
out
ds
ds
sbb
repz
push
mov
mov
adc
ret
cmp
lods
mov
and
or
inc
out
inc
loop
xchg
and
mov
sbb
jmp
mov
sahf
les
xchg
jae
dec
in
mov
pop
rcrl
sahf
mov
mov
dec
test
loop
cmc
xor
sti
xor
data16
cwtl
outsb
cmp
sti
gs
ss
cltd
xor
dec
test
fistpll
in
xchg
inc
lcall
andl
mov
xor
mov
ficomps
fidivrs
pop
mov
cmpsl
add
xchg
and
leave
pushf
push
add
or
sahf
clc
adc
fists
addr16
outsl
xor
dec
int3
sbb
pop
pushf
cmp
test
mov
call
jns
int3
push
pop
in
inc
adc
cltd
inc
push
add
outsb
jo
sub
aam
fsubrs
std
dec
push
jmp
xor
sbbb
ret
sbb
je
sub
jmp
xchg
maxps
stc
lahf
xor
xor
pmaxsw
fdiv
adc
sub
notrack
adc
adc
je
pusha
fcompl
or
pop
sub
lret
push
mov
or
pop
out
movsl
stos
je
mov
mov
test
xor
movd
mov
jp
add
shll
insl
pop
fstpt
icebp
xor
inc
pop
sub
push
neg
xlat
jbe
mov
push
mov
outsl
and
call
sub
lret
dec
sbb
lcall
cli
mov
sub
mov
inc
out
sbb
shlb
dec
jl
cld
mov
jmp
xor
daa
cmp
push
iret
jl
push
jmp
xor
add
fsts
aaa
enter
pop
cmp
mov
and
jle
out
jbe
push
in
aas
outsl
imul
sbb
jecxz
dec
orl
in
add
nop
inc
or
and
add
xor
jp
test
fdivrl
sub
mov
mov
daa
push
loopne
icebp
push
inc
add
and
jle
push
mov
div
aad
imul
push
mov
xchg
sbb
pop
cmc
add
adc
push
in
out
pop
out
hlt
or
lcall
dec
out
pop
imul
inc
push
sbb
insl
sub
jne
out
divb
mov
dec
xorl
loope
dec
xchg
sbb
or
jb
sub
push
in
xor
addr16
lds
add
dec
cmp
rorl
push
mov
cmp
stc
sub
mov
daa
and
xchg
mov
jp
xchg
pop
sub
push
scas
xor
mov
and
xchg
mov
jns
inc
xchg
cmp
loopne
sbb
pop
xchg
adcb
cmpsb
dec
test
mov
cld
sbb
cmp
in
and
pop
push
push
push
jbe
inc
loopne
sti
aas
and
fdivl
lahf
sbb
push
pop
out
jle
movl
sbb
jbe
jg
out
fstps
mov
outsb
in
mov
xchg
ds
jg
stos
test
fstp
jmp
push
lea
lret
push
fs
xlat
mov
and
iret
fcoml
xchg
or
into
aaa
test
aas
mov
mov
out
outsb
mov
pop
adc
pop
das
jg
or
inc
sub
notb
pop
aad
inc
xchg
mov
int
xchg
jle
pmaddwd
and
movsb
scas
mov
cmp
xchg
nop
or
fsts
loopne
les
mov
or
call
jne
out
jecxz
adc
sbb
and
sub
fsubs
push
pop
pushl
cmp
insb
mov
cmpsl
xchg
sbb
xchg
or
shl
std
iret
add
sub
mov
xor
sub
notb
sti
and
out
mov
push
in
int3
jo
shr
sbb
sbb
push
mov
mov
push
jb
notb
inc
xor
add
rolb
push
mov
mov
push
jb
notb
inc
xor
add
push
inc
ret
mov
push
jb
notl
inc
xor
add
rolb
push
mov
mov
jmp
clc
movb
cs
dec
bound
imul
sbb
jne
or
push
xor
jno
jp
pop
ljmp
sbb
lret
push
jp
dec
mov
mov
inc
pop
pop
ljmp
sbb
dec
and
push
add
orb
push
pop
out
out
sub
jns
pop
mov
scas
cmp
bound
mov
test
jbe
sahf
repnz
ss
push
sub
mov
or
test
mov
xchg
inc
xchg
xchg
or
lods
gs
inc
xchg
fsubrs
and
jnp
pop
jp
shrl
movsb
adc
ficomps
cli
ljmp
mov
out
rcrb
outsl
aas
test
lretw
pop
push
aaa
outsb
and
pop
dec
dec
data16
stos
lcall
pop
and
inc
mov
icebp
dec
stos
cli
jno
push
cmp
jne
fwait
xor
inc
ljmp
data16
or
pusha
mov
mov
mov
repnz
loop
lret
sub
pop
xchg
outsl
cmpsb
jle
push
xlat
dec
pushl
fstp
sub
cmp
jle
jae
lods
cmp
clc
adc
es
test
iret
sbb
push
mov
mov
cltd
or
outsl
cmpsb
sbb
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
inc
int
mov
and
movsl
test
lods
into
push
int3
dec
add
xchg
xchg
jp
ret
jmp
xor
mov
pop
repnz
stos
sbb
inc
jl
or
ret
dec
outsl
or
sub
mov
out
repnz
lock
outsb
push
jge
xor
cmp
stos
fst
sub
lods
rcrl
divl
sub
add
pop
mov
mov
and
loopne
inc
sahf
enter
pop
mov
stos
mov
std
xor
fcoml
inc
jns
xlat
inc
cmpb
xor
jmp
in
mov
mov
sarb
cs
sarb
jg
int3
clc
sub
push
in
cmp
sub
pop
repnz
ret
cli
data16
popf
shlb
sub
cmp
movsb
lods
push
mov
jmp
cld
imull
add
add
aaa
das
mov
add
xor
cmpsl
xchg
inc
mov
sbb
test
push
cmp
pop
mulb
xor
inc
fwait
sub
adc
adc
leave
imul
cs
xchg
test
aas
enter
sbb
xchg
mov
outsb
das
hlt
mov
pop
jns
dec
sub
leave
add
push
outsl
cs
dec
cmp
popf
imul
repz
idiv
int3
pusha
mov
adc
adc
je
lds
fstpt
cmp
add
mov
or
inc
stos
and
adc
xchg
mov
lods
pop
cmpsl
cwtl
or
mov
mov
cmp
les
xchg
mov
pushf
push
arpl
push
pushf
cltd
xchg
clc
gs
fwait
push
mov
sbb
jge
pop
xor
cmc
fisubs
xor
mov
adc
push
mov
lret
dec
and
std
mov
fnstenv
and
jmp
push
mov
inc
mov
push
adc
sbb
faddp
fidivrl
sbb
sbb
push
push
pop
stos
mov
iret
filds
inc
out
jmp
cmp
movsb
subl
jns
mov
push
hlt
jo
mov
jb
jo
test
dec
pushf
andl
and
sbb
dec
and
ret
jg
xlat
inc
div
pop
into
orb
imul
icebp
cmc
outsb
popf
mov
pop
xor
mov
jb
out
push
mov
enter
adc
cli
cwtl
cwtl
jle
stos
out
ss
movsb
iret
jnp
js
test
push
fistpll
or
fsubs
aad
or
jbe
mov
je
rcrl
icebp
lcall
sub
xchg
jbe
in
fcom
pushf
mov
imul
jmp
mov
cs
ss
fistl
ss
push
sub
jbe
pop
les
jge
inc
adc
fnstenv
aas
adc
popa
test
inc
mov
sub
fistps
jle
pusha
mov
jmp
data16
pop
out
fistps
aas
orl
xor
sbb
mov
xor
dec
in
jmp
ja
loopne
pusha
lret
xor
out
fbstp
sbbb
pop
ficoml
aas
jns
xor
fsubrl
cmp
add
loope
ficompl
mov
adc
int3
dec
and
lahf
movsb
mov
or
mov
cmpsl
fs
jnp
push
pop
inc
fdivl
lahf
mov
xor
and
push
ds
mov
mov
xchg
daa
mov
sahf
inc
mov
lahf
cwtl
subb
cmpsl
sub
nop
lahf
mov
xchg
jmp
dec
xor
stc
dec
aas
pushf
clc
xchg
adc
test
jno
fisttpl
pop
imul
inc
push
adc
or
movb
jp
cli
in
arpl
xor
jne
lret
data16
xor
inc
mov
lock
pop
das
stos
daa
pop
in
mov
dec
pextrw
mov
shll
in
push
std
inc
adc
push
mov
enter
xor
outsl
stc
inc
jge
mov
bound
mov
or
idivl
jle
nop
pop
std
loopne
add
xchg
pop
ja
lahf
jo
inc
fwait
push
inc
jns
addr16
fisubrs
jne
jle
or
lds
add
cmp
or
idivb
dec
pop
jb
fsubs
mov
fiaddl
cld
xchg
inc
pop
pop
mov
dec
lods
lea
pop
sbb
ficompl
sbb
mov
nop
loop
imulb
leave
mov
pop
andl
test
loope
cmp
mov
mov
outsl
das
xor
xor
jno
add
sbbl
adc
adc
repnz
lods
in
xchg
adc
rclb
push
xlat
frstor
andl
iret
add
xchg
sbbl
pop
ljmp
cmp
call
add
mov
popl
inc
mov
ss
js
loope
inc
inc
jge
xchg
jne
aam
shl
fistpl
in
inc
ja
in
sbb
ret
push
push
xor
leave
sbb
and
fcompl
sbb
in
cmp
mov
inc
rcrb
les
insb
jg
mov
icebp
or
mov
and
jl
push
add
push
cs
pop
test
rclb
sub
push
xchg
add
mov
mov
xchg
or
rcll
and
lret
outsl
out
fcomps
mov
mov
ljmp
jnp
rorl
out
jnp
jmp
ss
mov
mov
jne
xchg
push
mov
adc
inc
jge
cwtl
test
stos
mov
xor
in
or
mov
pop
cmp
leave
mov
loope
sbb
cmp
jno
mov
lret
leave
stos
or
mov
mov
int
pop
sbb
lds
daa
movsl
push
push
addr16
fisubrs
lds
pop
push
cmpsl
cmp
loopne
inc
mov
sbbl
xchg
cmp
mov
pop
mov
pusha
call
out
popa
aad
enter
outsb
pand
mov
cwtl
jmp
cmp
add
mov
pop
int
adc
inc
addr16
repz
jp
mov
cmp
scas
pop
lock
push
adc
or
dec
lret
sub
jbe
hlt
lock
lea
sarl
fucom
popa
push
push
add
xor
or
pushw
mov
in
gs
and
iret
mov
xchg
jp
repnz
insb
cld
cmp
sti
fldenv
push
sahf
push
jne
inc
and
pop
sahf
in
popf
jno
mov
paddd
cmpsl
je
or
jae
test
xchg
nop
call
adc
sarb
cmpl
mov
bound
mov
jnp
mov
jmp
jle
push
int
cmpsl
add
pop
out
dec
jge
and
das
pop
in
out
les
and
push
xchg
sub
call
pusha
call
push
int3
subl
dec
pop
fistpll
dec
inc
and
mov
mov
xor
or
adc
test
stc
xlat
pop
hlt
shrb
adc
xor
adc
mov
mov
ljmp
pop
arpl
mov
jo
ficompl
iret
pop
frstor
icebp
jns
push
push
and
flds
and
inc
add
rcrl
or
jnp
in
ret
cmp
repz
xchg
push
add
cmpsl
sub
xlat
lea
xchg
lcall
mov
sbb
enter
xor
in
or
nop
push
dec
cwtl
cmp
pop
flds
icebp
fistps
fs
mov
mov
mov
into
aas
push
outsl
mov
cltd
mov
cmp
xor
out
cli
fdivl
sub
sub
inc
fucomip
jecxz
gs
mov
out
sub
mov
or
loope
dec
test
fisubrs
in
pop
ds
push
mov
imul
lds
adc
shl
push
pop
and
mov
lock
cmp
push
mov
nop
mov
push
xchg
mov
sub
imul
mov
lods
test
push
xchg
bound
push
mov
into
sarb
fs
in
push
mov
popa
xlat
push
pop
out
sub
js
mov
mov
pop
pop
neg
xchg
ret
insb
or
inc
cwtl
dec
and
mov
outsl
aas
push
addl
cmp
adc
pop
ja
pop
push
xor
scas
loop
push
sub
xor
mov
dec
popf
jbe
loop
test
add
fisttps
inc
and
and
int
cmp
rcll
sti
rclb
adc
push
jne
push
add
cmpsl
cld
popa
pop
push
sahf
outsb
rorl
scas
or
fwait
mov
sti
dec
add
arpl
mulb
adc
cmp
into
std
scas
enter
das
out
lds
mov
fmull
jae
pop
xor
loope
iret
cli
fisttpl
jo
jbe
xchg
sbb
xchg
sarl
cli
lahf
mov
sub
pop
lret
pusha
adc
ret
add
xchg
mov
inc
fildl
sbb
lret
in
push
jecxz
loope
cmc
jmp
sahf
orb
mov
pop
xor
push
cmp
add
mov
push
dec
mov
lds
mov
in
add
sbb
mov
adc
cwtl
adc
movsb
dec
imul
push
add
lds
mov
xor
sbb
sbb
gs
lods
or
loopne
lcall
scas
jbe
xchg
outsl
shrl
push
pop
cld
cs
mov
sub
xchg
push
sub
xor
sbb
pushf
mov
outsl
mov
out
popa
cmp
add
mov
cli
shrb
in
sahf
mov
pop
aam
lods
iret
pop
rcr
mov
push
mov
lods
cs
mov
sbb
loope
or
mov
cmp
movsl
dec
mov
or
ja
fisttpll
inc
mov
inc
lcall
imul
and
cmp
adc
cmp
cmp
out
fadds
lods
shr
lcall
mov
mov
aad
mov
ret
mov
cmc
dec
psubsw
and
test
xchg
dec
imul
in
mov
leave
call
hlt
movsl
cli
fbstp
btr
xchg
dec
adc
push
mov
dec
loop
aaa
out
lret
fisubs
fcoml
xchg
stc
xchg
fisubl
ja
inc
popa
sbb
pop
scas
sub
sub
leave
pop
adc
rcrb
es
adc
add
cld
gs
pop
int
cmp
inc
lock
adc
mov
jbe
add
movsl
dec
sub
xor
push
das
pop
xor
push
xor
cmp
sbb
xor
scas
in
push
inc
mov
xor
and
fwait
jnp
stos
in
fcoml
mov
dec
fcoml
cmc
pop
mov
arpl
pop
aad
out
inc
mov
test
jbe
es
or
or
cltd
xchg
push
int
aaa
std
jle
push
leave
out
jnp
gs
loope
je
out
push
mov
dec
mov
loop
sbb
cli
arpl
leave
xchg
lret
jo
out
fs
add
add
adc
pop
loop
mov
not
push
xchg
fmull
inc
fsubr
fisttpll
pop
cmc
shlb
adc
imull
imul
insb
push
jb
dec
dec
push
xor
call
inc
sti
or
cli
stos
pop
push
aas
jo
hlt
mov
add
test
pop
lock
popf
fstl
dec
push
testl
or
xor
mov
xchg
fidivl
push
xlat
jae
imul
aam
in
cld
aaa
and
mov
push
fwait
jnp
add
cltd
pop
mov
sub
mov
mov
pop
sbb
xor
in
mov
hlt
mov
cmp
dec
jbe
adc
insb
sub
jecxz,pn
in
ja
pop
ds
pop
shlb
or
sub
sbb
dec
push
mov
enter
fisttpll
jl
xchg
jecxz
ss
dec
lds
sub
inc
cmc
sbb
mov
mov
shll
and
cmc
mov
sti
nop
icebp
jno
jmp
mov
call
sub
mov
popf
and
dec
and
loope
jbe
push
cmpsb
jae
add
lret
loop
jns
jne
cmp
lods
in
sbbb
shrb
mov
push
cmp
mov
scas
test
imul
mov
movsl
mov
mov
sbb
xchg
pop
push
mov
das
ds
scas
xlat
movsb
jae
xor
shr
in
leave
mov
fsubrl
pushf
and
lret
cwtl
gs
cmp
push
sub
mov
loope
mov
in
mov
flds
ss
cmp
cmp
int3
push
int
jecxz
icebp
mov
lods
jp
jg
in
or
dec
adc
jl
mov
int3
ret
mov
test
pop
jge
mov
mov
test
arpl
cmp
and
es
cli
adc
fdivr
pusha
loope
adc
mov
adc
scas
push
and
mov
xchg
mov
dec
xor
pop
loopne
jnp
shrl
add
jnp
fnsave
clc
xchg
cmp
xor
sbb
std
add
gs
mov
add
ret
jne
jne
in
jno
insb
pushf
cmpl
and
and
es
popa
cmp
adc
adc
adc
xor
inc
push
pop
mov
cmp
arpl
mov
daa
popa
or
test
mov
std
cld
call
jbe
call
mov
nop
cmp
and
clc
repz
cmp
je
jo
call
dec
dec
lcall
mov
pop
out
add
insb
push
sbb
xor
and
mov
adc
fcmovb
ja
jns
xor
jp
pop
test
pop
negl
mov
push
adc
pop
nop
jne
pop
dec
insb
push
or
dec
js
inc
mov
shlb
push
aam
ja
sub
insb
and
pusha
pop
call
cltd
push
aad
fadds
jle
sbb
adc
xchg
aaa
cmp
sbb
ficoms
in
push
cmp
insb
insb
cmpsb
movsb
push
dec
cwtl
mov
pop
lock
in
cld
dec
sbb
pop
jl
mov
in
enter
push
pop
daa
insb
cmp
inc
xchg
xchg
or
pop
fs
pop
addr16
aam
test
xchg
add
mov
test
push
jecxz
push
mov
out
scas
stos
fnstcw
cmpsb
icebp
push
mov
jo
or
jmp
fdiv
enter
mov
mov
mov
fidivrs
test
mov
dec
int3
sbb
js
out
sub
stos
xor
pop
pop
scas
mov
movsb
in
dec
cmp
fld
push
ljmp
pop
mov
adc
dec
test
and
dec
dec
xor
fwait
mov
in
jns
lret
rclb
push
scas
mov
sti
xchg
push
arpl
sbb
popf
dec
mov
aas
test
aam
call
ljmp
inc
inc
adc
pop
cmc
mov
jbe
insb
mov
jle
dec
xor
aam
cmp
dec
dec
repz
call
lods
aas
add
push
rcl
addl
int3
les
pop
cmpsl
rcl
jg
enter
jb
sarb
pop
fsubs
nop
adc
fsubs
test
mov
dec
ja
cmpsb
mov
xchg
fnstenv
xor
xor
cs
mov
jns
rcl
aaa
int3
jge
push
int
cmp
mov
jae
mov
and
mov
cltd
sbb
aas
enter
stos
cmpsb
sbb
adc
push
mov
ljmp
mov
jecxz
sub
in
mov
sub
add
dec
aaa
insl
sarb
pusha
pop
xchg
and
adc
xchg
jp
out
nop
nop
ja
jge
lea
imull
add
into
cmp
mov
aam
mov
popa
lods
cmp
or
push
push
cmc
in
lret
arpl
jbe
shll
sub
mov
xor
or
inc
cltd
sbb
arpl
mov
js
pop
ret
scas
push
aam
add
xchg
sub
test
dec
scas
outsb
hlt
jg
dec
mov
cmpsl
lods
pop
nop
test
pop
inc
mov
jmp
test
or
hlt
cmc
pop
inc
in
push
mov
cmpsb
mov
leave
js
and
outsb
add
inc
inc
mov
sub
jmp
xchg
xchg
pop
nop
fwait
in
mov
rcl
ss
push
mov
cmpsl
push
shl
add
xlat
gs
jmp
inc
push
push
out
test
jmp
and
cmp
in
lods
popf
loope
pop
sbb
popa
adc
sbb
push
mov
arpl
mov
mov
dec
repnz
ss
adc
fstpl
mov
xor
movsb
mov
int
addb
imul
aad
xor
insb
cmp
sbb
ljmp
add
inc
add
jbe
xchg
insl
cld
inc
xchg
pusha
je
clc
adc
or
jb
dec
icebp
scas
call
adc
jb
adc
pop
mov
repnz
sbb
int3
adc
in
push
adc
dec
cs
lcall
fisubl
pop
pop
nop
jae
sbb
repnz
push
xor
dec
mov
jns
scas
aad
gs
jg
dec
aam
not
inc
pusha
mov
ret
push
xchg
cld
sub
lods
mov
fcmovne
push
es
xlat
lahf
repnz
inc
xchg
cmpb
scas
imul
in
aam
pusha
xor
jb
bound
xor
lods
aad
push
pop
clc
addb
xchg
mov
scas
outsl
cmpsb
mov
inc
sub
sbb
pushl
or
cmp
popa
jecxz
jle
dec
movsl
cwtl
imul
out
scas
movsl
pop
mov
mov
fwait
xchg
adc
cld
push
xchg
and
lods
dec
insl
das
xor
outsl
xor
add
shrl
call
dec
or
lcall
xchg
or
or
add
and
cmp
mov
mov
sub
xor
mov
push
loopne
lcall
inc
xchg
cwtl
and
movsl
or
adc
push
mov
adc
mov
and
outsl
push
xchg
cs
outsl
std
xorl
pop
and
bound
imul
rcll
adc
add
sbb
aas
aas
jb
sub
out
mov
mov
fistps
pop
fistpl
inc
mov
leave
outsb
pop
xchg
repnz
es
and
out
and
xchg
dec
lcall
stos
sub
mov
dec
dec
test
jb
pop
jg
sbb
call
lods
mov
scas
sbb
movsb
jbe
dec
mov
add
int
jle
cmc
fimuls
jl
push
pop
pop
ret
jl
ja
stos
cmp
jmp
mov
addr16
dec
lods
popf
push
cmp
das
or
inc
pop
jnp
push
cmp
shll
rcrb
dec
popf
xchg
roll
add
pop
xchg
sub
push
addr16
push
pop
sahf
jmp
xchg
xor
inc
mov
inc
shll
or
sbb
lret
dec
mov
inc
mov
stos
and
lret
js
sub
js
bound
jle
aaa
andb
pop
pop
mov
push
sbb
sub
ds
pop
shrb
adc
jns
inc
sbb
fwait
mov
popf
test
inc
cmp
and
lret
cli
dec
out
imul
push
repz
jne
jb
movsl
jnp
fwait
xor
repz
mov
loop
mov
movsl
xor
cwtl
cld
add
mov
movsb
fdivrl
inc
dec
pop
addr16
test
repz
or
mov
lods
in
lret
adc
sbb
inc
dec
inc
add
mov
push
lcall
mov
mov
ljmp
adc
jp
test
inc
push
aam
ja
enter
and
push
cmp
mov
mov
ja
mov
sub
xor
mov
pop
push
into
add
inc
jecxz
cld
xor
push
and
pop
addr16
dec
mov
fistpll
repnz
pop
std
popa
andl
pop
iret
sbb
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
out
cmp
or
sbb
push
jp
dec
mov
stos
imul
ljmp
push
push
push
push
cmp
sbb
lret
pop
push
xchg
inc
shlb
dec
lcall
jb
bound
icebp
ljmp
xchg
jecxz
cmc
mov
jno
inc
dec
push
pop
and
xor
loope
icebp
ljmp
mov
sbbl
push
dec
and
sub
sbb
or
jecxz
repz
shlb
adcb
and
xor
inc
jne
pop
and
gs
mov
lcall
xchg
imul
gs
jb
dec
pop
add
ret
push
in
jae
cli
jl
mov
nop
lcall
in
adc
mov
pop
into
je
ljmp
into
jmp
cmp
popa
jp
push
xor
xchg
sbbb
dec
movsb
icebp
adc
mov
out
xchg
lcall
roll
scas
adc
sbb
sbb
push
adc
dec
jp
filds
xchg
jb
pop
cmp
icebp
sahf
dec
and
xor
jns
push
ficompl
movsl
fdivl
add
adc
in
icebp
cli
rol
lret
mov
sbbl
push
push
and
xor
add
adc
xchg
cli
mov
lods
mov
aam
div
out
or
xor
sub
mov
xorl
aad
sub
sbb
cmp
xor
push
inc
sub
push
jle
cli
fucomip
mov
mov
mov
jno
inc
pop
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
add
adc
loope
hlt
stc
dec
pop
or
xor
xchg
jbe
sub
and
jmpw
mov
nop
repz
fwait
andb
es
cltd
adc
test
cs
xchg
push
addr16
sahf
loop
sub
pandn
popa
imul
mov
jo
sarb
mov
out
inc
loope
sbb
mov
or
mov
jae
cli
cmp
sbb
arpl
imul
hlt
mov
push
xor
cwtl
cmp
nop
sub
push
inc
hlt
bound
bound
jae
adc
inc
mov
mov
pop
out
js
test
adc
mov
into
push
or
pop
test
shll
dec
push
daa
xlat
or
mov
xchg
xor
fnclex
cmp
or
insl
mov
lds
and
jmp
fidivs
fistps
pop
int3
lret
mov
in
shr
lods
dec
and
mul
adc
lahf
inc
jae
pushf
daa
in
mov
cld
clc
push
into
xchg
sbb
hlt
rcr
stc
push
xchg
jb
stc
push
push
into
cs
test
jge
jmp
push
lods
cmp
pop
out
mov
mov
dec
dec
add
xchg
pushf
xor
sahf
das
pop
cmp
push
mov
daa
push
or
or
icebp
mov
pop
jecxz
xor
ja
jns
inc
xchg
push
js
or
xlat
fisubrl
das
repz
scas
negb
add
cmpsl
or
es
lcall
je
xchg
xor
pop
sbb
loop
pop
and
jns
dec
test
jle
pop
jo
shll
inc
out
sahf
cld
and
jge
into
xchg
and
jecxz
sub
push
and
iret
or
push
mov
inc
iret
fidivs
cs
cwtl
jne
and
fbstp
jecxz
dec
fldt
dec
push
dec
ret
les
mov
xor
jbe
shl
or
xchg
in
pop
adc
mov
lcall
js
lods
and
mov
sbb
jmp
push
inc
shlb
cmpsl
mov
imul
ds
arpl
mov
xor
test
in
jp
ss
adc
inc
ficomps
push
pushf
sbb
outsl
loop
ret
or
lds
sti
mov
iret
cmc
inc
jmp
test
in
jns
mov
cmp
in
xor
fstl
jge
sub
push
cmp
cmp
and
loope
std
daa
add
lock
popa
cmpsb
sub
mov
mov
adc
push
xor
enter
loopne
adc
push
insl
loopne
push
lock
aad
pop
lds
push
adc
shr
mov
cmpsb
mov
jmp
cmpsl
adc
fmuls
es
lods
mov
xchg
xor
mov
daa
ficoml
jbe
push
dec
fimuls
jle
pop
push
lock
cli
sbb
fildl
mov
pop
imul
in
mov
sbb
imul
push
sbb
xor
mov
in
mov
mov
pop
jp
pop
shr
in
addr16
pop
aad
add
sti
lods
pop
shlb
jmp
mov
outsb
sub
mov
sbbl
xor
cs
jge
mov
ss
cwtl
adc
jae
out
jl,pn
jmp
int3
shll
sub
xor
test
sub
mov
cltd
jle
push
sbb
cmovl
addl
ss
pop
dec
sub
fsubrs
lock
mov
iret
mov
dec
fbld
out
test
ficomps
enter
dec
adc
dec
les
lcall
lock
ret
sub
pop
in
xor
pop
cmp
fwait
cltd
xor
cmp
les
mov
shrb
sbb
xchg
jnp
rcll
jl
test
gs
xchg
fs
adc
dec
pop
adc
mov
insl
lret
cld
cmp
repz
mov
mov
ss
xchg
dec
inc
jmp
xchg
adcb
loopne
cmpsb
pop
roll
inc
shlb
cmp
scas
test
push
jnp
add
in
cltd
aaa
jbe
push
scas
mov
lcall
jnp
rolb
aad
pusha
add
and
sbb
lods
pop
adc
pop
adc
dec
push
adc
das
sub
xor
shlb
push
ds
hlt
jb
insl
add
jp
xchg
scas
jmp
push
cmp
add
movsb
in
loopne
dec
popf
je
add
lahf
sbb
sbb
lods
ret
pop
aas
fnstenv
in
xor
push
jno
lods
pusha
sub
sbb
pop
sub
cli
ljmp
mov
push
inc
xor
je
psrlq
testb
or
mov
sahf
jp
and
add
lods
in
inc
push
loopne
outsb
imul
fistpll
shll
and
roll
test
or
jo
fstpt
sbb
jmp
mov
adc
fstpt
adc
adc
pusha
leave
js
adc
cld
inc
popa
rorl
mov
ljmp
jl
outsb
inc
xchg
je
sub
pop
pusha
push
jb
aas
mov
fldenv
jns
outsl
pop
jae
andb
int
or
push
idivl
mov
in
jmp
leave
pop
lea
imull
es
push
jp
pop
pop
or
jle
dec
pop
ret
mov
out
clc
pop
dec
ss
sti
jns
xchg
movsb
adc
sbb
jecxz
mov
xchg
clc
repz
add
adc
or
cmpsb
pop
mov
or
ficomps
scas
popa
xor
or
push
sbb
cmp
outsl
in
dec
test
sbb
xchg
jmp
and
jge
mov
mov
sbb
push
ret
xchg
fsubrp
lret
dec
ja
in
dec
stc
loop
cli
in
xlat
pop
xor
jmp
mov
or
aas
mov
mov
idivb
das
push
stos
insb
shlb
xchg
push
stos
sahf
das
mov
mov
xor
cmp
mov
push
or
inc
call
xchg
shll
lods
jne
js
mov
in
cmp
les
pop
pop
aam
outsb
jl
mov
rorb
mov
testb
ret
inc
mov
jne
sub
adc
sbb
clc
rcrb
rcl
das
mov
vmread
out
sbb
mov
push
inc
pop
mov
ret
int
push
cld
sub
or
ljmp
fwait
mov
popa
lret
idivb
pop
imul
shlb
xchg
and
dec
clc
out
ffree
dec
insl
adc
inc
mov
jl
adc
adc
movl
ret
jmp
lods
adc
fnstenv
push
fcoml
dec
add
sahf
daa
push
rcrl
and
push
mov
cmp
int
lcall
test
cs
jne
xor
jae
lods
sub
mov
jp
les
sahf
movb
add
cli
je
sub
push
jb
xor
out
pop
pop
sbb
or
adc
mov
jg
mov
mov
xchg
adc
fwait
cmp
popa
mov
mov
inc
push
xchg
mov
cmp
test
push
data16
outsb
scas
inc
xchg
test
dec
int3
lcall
cmp
jbe
adc
loop
in
shrl
push
adc
adc
lret
js
cmp
neg
sub
fstp
bound
cmpsl
enter
es
loopne
ja
nop
and
sbb
xchg
adc
fimull
pop
sub
pop
dec
jmp
insl
and
jecxz
sub
xchg
add
dec
out
mov
xchg
sarb
fwait
outsl
pop
in
fwait
cmp
dec
in
pop
repnz
fs
adc
mov
sahf
loop
sti
xchg
sbb
out
nop
push
mov
inc
or
pushf
mov
mov
add
clc
mov
jge
aaa
popf
xchg
jg
mov
mov
lea
gs
adc
add
out
std
mov
popf
lock
dec
in
ret
inc
stos
call
fwait
xlat
rol
inc
jmp
adc
rorl
xor
ret
les
dec
push
sbb
push
cmpsl
es
ret
repnz
sbb
sbb
jecxz
add
cmp
stc
xor
arpl
sti
fldl2e
stos
in
cmp
test
and
sbb
frstor
in
xchg
or
std
xchg
repnz
movsb
popf
xor
xor
call
mov
mov
xorb
xchg
stos
mov
mov
cmp
cmc
xor
dec
jge
fdivrl
xlat
xchg
test
mov
repz
dec
ret
loopne
adc
test
les
imul
jmp
pop
adc
cwtl
ljmp
mov
mov
push
sahf
in
ljmp
hlt
push
and
push
orl
lret
sbb
dec
xorl
or
aad
mov
mov
data16
jnp
pop
pcmpeqd
push
push
shlb
xor
jle
jbe
mov
jge
mov
jne
imul
sub
xchg
dec
adc
insb
addr16
mov
xchg
nop
or
repz
push
lcall
daa
jle
xor
loopne
mov
rorb
xchg
mov
cmovnp
sbb
cmp
mov
fists
xchg
test
inc
shll
pop
ficoms
lret
mov
and
cmp
out
inc
test
aas
jns
sub
jo
cmp
or
outsl
or
xchg
popf
dec
sub
loop
push
mov
xchg
pop
in
fs
jmp
int3
lret
cmp
jle
sbb
out
sub
inc
lods
bound
cmp
repnz
lds
jo
in
add
stos
push
enter
push
insl
and
push
out
push
mov
jle
sbb
xor
loop
or
out
pop
dec
cmp
movsb
push
pop
push
xchg
pop
call
enter
outsb
jbe
lds
and
rcrb
jmp
jno
stc
pop
pop
jns
ss
mov
testb
dec
shrb
scas
xchg
jecxz
xchg
aas
dec
lret
jmp
pop
push
add
cmp
mov
jecxz
jmp
and
in
lods
jae
out
xchg
push
xor
repz
mov
sarb
add
add
push
pop
adc
jge
or
iret
fs
xchg
xchg
ja
push
xchg
mov
pop
push
cmp
roll
ljmp
decl
sbb
insl
sbb
lods
pop
enter
mov
imul
aas
inc
int
mov
imul
outsb
sub
add
xchg
sub
outsl
out
dec
rcrb
stc
mov
adc
movsb
cli
cmpsb
pop
cmc
and
mov
icebp
movsb
pop
pushf
jne
mov
es
aam
sub
push
and
add
mov
cwtl
inc
and
sub
imul
jp
xchg
bound
and
push
push
dec
test
arpl
aas
mov
sbb
sub
xor
xchg
jg
xchg
pop
es
lahf
cli
fwait
push
fisubs
pop
xchg
mov
iret
push
pop
jecxz
into
xor
stc
and
outsl
lods
mov
out
je
mov
lds
xor
and
add
add
sub
push
rorb
arpl
mov
iret
mov
inc
fcmovu
fldenv
repnz
mov
scas
jnp
call
inc
mov
ljmp
mov
pop
out
fs
mov
mov
repnz
sbb
xlat
xchg
sahf
cmp
outsl
popf
mov
and
push
repnz
les
das
push
out
ds
enter
jbe
jbe
jns
adc
and
enter
xor
jge
lcall
andb
stc
xchg
lods
pop
inc
addl
int3
mov
mov
daa
les
inc
jecxz
loop
addb
out
cs
lret
cs
into
shrl
repnz
add
test
mov
ret
mov
adc
inc
xor
dec
xor
pop
jnp
fsubrp
jns
cs
inc
xor
inc
inc
sbb
lret
aaa
pusha
mov
xchg
inc
je
fstps
jecxz
jb
loope
xor
xor
add
dec
dec
or
xchg
push
mov
pop
dec
sbb
adc
fadds
test
dec
sbb
jecxz
fstpl
push
sahf
jbe
push
outsl
jmp
rcll
scas
and
and
rclb
push
dec
xchg
repz
insb
dec
out
aas
icebp
pop
movsl
pop
mov
jp
mov
mov
push
daa
pop
cs
hlt
popa
jp
add
mov
pushf
stc
ds
insl
pop
jmp
xchg
push
test
add
sub
clc
jl
jns
adc
orb
inc
xchg
jmp
and
mov
sbb
neg
sbb
xchg
mov
ljmp
pop
cmp
dec
adc
pop
jecxz
in
cltd
arpl
lock
ss
pushf
and
adc
dec
loope
fnstcw
xor
aas
jl
cmpl
inc
jbe
fdivs
push
pop
xor
movsb
mov
xor
pop
mov
mov
imul
push
imull
in
fadds
xor
xor
or
movsb
pop
outsb
aas
hlt
mov
dec
popf
mov
pop
in
and
xor
jnp
test
sub
inc
adcl
xor
mov
loopne
jge
adc
jne
dec
mov
push
fadd
ds
scas
add
test
or
jmp
or
pop
pop
cltd
repz
xchg
incb
lret
or
dec
sahf
mov
negb
in
stos
ret
loopne
jnp
push
test
negb
lea
pusha
gs
mov
and
pop
cmp
xchg
push
cmp
pop
lods
mulb
xchg
enterw
add
gs
push
repnz
decb
jns
insb
xlat
je
imul
mov
aad
jbe
cli
mov
in
movsl
pxor
fst
imul
mov
lret
iret
iret
stos
xchg
mov
shlb
mov
inc
test
dec
clc
insl
lods
inc
loope
mov
pop
mov
cmp
and
jno
push
mov
or
std
jns
inc
nop
addl
push
ret
scas
adc
mov
inc
ficoms
out
pop
lret
mov
or
ss
adc
push
sti
aaa
movsb
loop
mov
leave
push
pushf
pop
mov
lods
add
and
mov
imul
push
xchg
bound
push
lods
pop
add
push
push
push
sub
sbb
enter
je
pop
aam
mov
clc
imul
popf
lds
jmp
roll
jno
ffree
xor
sarb
aad
cmpsl
fucomip
shl
leave
mov
cltd
lea
xor
popa
jb
pop
ja
cli
aaa
loope
inc
mov
loope
dec
aad
push
push
jno
xchg
divl
mov
rcr
fimull
xchg
cmp
pop
fistl
adc
push
xchg
popa
and
test
sub
rcrl
sbb
repnz
test
xchg
lret
ror
loopne
stos
adc
iret
aaa
insl
inc
test
in
ds
pop
cmpsl
repz
test
xchg
cmpsb
jb
adc
nop
dec
xor
fcomp
sbb
cmp
lret
stos
sarb
dec
cmc
arpl
rorb
arpl
inc
cmp
mov
jb
aam
xchg
std
incb
xor
push
mulb
fld1
sub
in
add
test
fstpt
loopne
out
cltd
nop
mov
divl
push
loop
add
movsb
dec
iret
or
inc
les
mov
lahf
lahf
add
movsb
cwtl
jle
imul
mov
sahf
loopne
mov
fs
jp
jle
pop
orb
xchg
or
lcall
dec
xchg
mov
xchg
sub
lret
jg
push
and
or
mov
xchg
out
mov
or
mov
push
sahf
pop
or
mov
bound
lcall
mov
cmp
or
mov
push
inc
pusha
mov
xor
bound
je
rcr
sub
out
outsb
inc
ret
lods
or
sti
repz
pop
push
dec
xor
cltd
fstpl
loop
push
xor
inc
jle
in
adc
gs
mov
xchg
pop
and
out
mov
xchg
cs
rcrb
mov
or
mov
lock
sub
popl
aad
pushf
mov
adc
xor
mov
or
mov
ror
cli
repnz
pusha
cli
adc
in
inc
or
mov
flds
int3
inc
std
test
cld
outsb
sub
fnstsw
push
push
xchg
jmp
test
mov
leave
leave
bound
fs
insl
xor
insb
ds
or
aad
jno
lds
movsl
adc
cltd
popa
xchg
jns
fwait
jl
sahf
rcrl
xchg
test
jl
pop
insl
mov
sbb
nop
cwtl
xchg
xchg
shll
cld
lock
fcomp
lahf
outsb
push
pop
leave
adc
and
iret
sbb
jne
fnstcw
hlt
add
mov
jns
xchg
xchg
mov
scas
jmp
lods
rcrb
jg
dec
ss
cmp
mov
xchg
mulb
inc
loop
add
dec
adc
xchg
das
mov
lret
into
fsubrl
mov
sub
clc
leave
mov
adc
mov
cmpsb
movsl
mov
lds
xchg
mov
popa
sahf
sbb
mov
pop
add
mov
outsl
cmp
outsl
cmp
rorl
test
mov
xchg
nop
in
scas
push
out
jne
jge
or
pop
outsb
addb
les
insl
jns
push
mov
jne
add
and
shlb
lea
push
push
lods
push
lcall
fnsave
rclb
andb
and
inc
or
into
scas
adc
pusha
lods
aas
sub
lret
pop
mov
test
lret
inc
dec
inc
push
add
sub
data16
xchg
sub
repz
cwtl
outsb
dec
sbb
sub
popf
jge
mov
or
pop
mov
xlat
test
mov
mov
test
enter
jbe
clc
mov
out
addr16
ffree
lock
imul
out
xchg
aas
in
lods
div
xchg
lea
sbb
or
mov
enter
pop
int3
xchg
and
inc
rcll
imul
xchg
imul
xor
rol
push
lret
insb
push
add
stos
adc
mov
mov
push
cli
xchg
xchg
stos
jo
dec
pop
fstpt
dec
je
and
add
dec
repz
and
inc
and
sarb
mov
xchg
out
aam
test
or
movsb
in
push
xor
adc
lret
inc
or
pop
xlat
es
xor
daa
and
aam
xchg
jns
mov
repz
adc
push
xchg
mov
fwait
mov
jno
or
jecxz
jb
and
pop
push
cmc
pop
out
mov
iret
add
xchg
xor
test
add
gs
stos
mov
test
in
rcrb
enter
cmp
loop
pop
dec
sbbl
ret
pop
mov
sbb
ja
mov
pop
fiadds
sub
mov
pop
and
or
mov
out
or
jl
addb
mov
in
dec
adc
imul
decb
enter
shlb
aaa
cmpsl
outsb
data16
mov
fistps
cmp
ljmp
xlat
pop
mov
push
dec
mov
jecxz
pusha
cmpsl
sahf
fidivrs
add
ds
fs
mov
inc
cmp
loope
xchg
push
add
sbb
shll
adc
mov
and
add
add
cmp
jo
dec
mov
out
add
push
int
xlat
lahf
in
stc
movsl
push
mov
fstp
lcall
das
jmp
iret
iret
cmp
bound
add
mov
imulb
fimuls
lcall
clc
int3
dec
push
push
push
lods
xor
mov
lods
dec
jmp
lret
inc
popa
adc
inc
clc
add
xadd
inc
and
imul
popa
xlat
data16
pop
dec
data16
insl
push
loopne
rcr
jl
enter
mov
pop
fstl
sub
cmp
cli
xchg
mov
pop
dec
lahf
add
mov
fs
out
push
jne
and
xchg
cmpsl
xchg
pop
mov
and
push
jecxz
loop
stc
jnp
sbb
and
jb
sahf
fcmovbe
lret
mov
sbbl
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
add
adc
loope
icebp
ljmp
mov
sbbl
push
dec
and
xor
add
adc
loopne
lock
rcr
lret
mov
sbbl
push
cmp
gs
jne
pop
inc
mov
xchg
push
jo
push
mov
shlb
sarb
pop
loopne
nop
xorb
mov
mov
xchg
adc
add
xor
and
shlb
loopne
nop
add
cmpsl
mov
mov
mov
lahf
pusha
mov
incb
out
xor
and
rol
rorb
es
adc
push
sbb
adc
or
cs
lods
sbb
mov
or
cli
cld
testb
test
cmp
pop
cmpsl
out
fistpll
gs
outsl
loop
and
pop
lret
xor
mov
testl
stos
testl
ja
ja
mov
inc
mov
xchg
cmpsl
adc
adc
into
lahf
dec
sub
ja
enter
call
mov
mov
push
sbb
ja
or
xor
cmp
loopne
imul
push
inc
mov
scas
test
push
aaa
xchg
push
iret
std
stos
pop
andb
and
adc
add
cmpsl
inc
mov
adc
add
xor
and
sarb
shrb
push
loopne
nop
jg
pusha
mov
mov
mov
xchg
cltd
push
stos
popa
mov
xchg
push
mov
or
and
inc
hlt
cmp
xor
push
xchg
insb
lds
mov
ret
jae
push
cmc
adc
mov
rcrb
out
loop
mov
divl
and
shlb
shlb
pop
loopne
nop
xorb
mov
mov
xchg
adc
add
xor
and
shlb
shlb
pop
loopne
nop
xorb
mov
xor
cmpsb
inc
test
fisubrl
mov
lea
pop
jno
cmp
xor
inc
sti
mov
out
daa
cmp
out
pop
jg
imul
jge
jo
popf
sbb
pop
clc
push
mov
pop
push
jno
jns
lahf
lock
inc
arpl
insl
ds
test
gs
mov
mov
lret
sbb
or
lods
jl
xor
dec
fbstp
pop
lahf
clc
insl
adc
adc
jecxz
repz
dec
iret
pop
mov
std
int3
lds
cs
push
int3
dec
std
lea
sub
pop
add
xchg
mov
stos
dec
inc
movsb
cmpsl
fcoml
add
je
rolb
mov
mov
dec
inc
jae
cmc
aaa
push
lods
or
or
inc
jmp
push
mov
push
mov
dec
jp,pn
pop
gs
cmp
cmpsb
pop
das
ja
gs
xor
jno
and
push
in
push
add
sbb
mov
xchg
lret
dec
dec
popf
ds
stos
rcrl
sbb
inc
incb
jns
mov
cli
push
xor
nop
mov
pop
ffreep
push
mov
push
jmp
mov
mov
pusha
mov
xor
mov
pop
jbe
push
cmpsl
dec
fisttpll
test
icebp
mov
adc
lock
insb
or
pop
mov
stos
sahf
inc
lcall
ja
stc
xor
in
call
pop
push
cmp
inc
sbb
jp
cmpsb
push
add
data16
sbb
aaa
enter
mov
lods
pop
dec
stc
aad
jecxz
jno
pop
cmp
shl
mov
std
inc
mov
loopne
and
dec
mov
dec
inc
xchg
add
xchg
mov
bswap
int
mov
pop
pop
fldl
scas
mov
in
xchg
mov
sbb
nop
clc
xchg
daa
mov
inc
andl
adc
and
repz
xor
bound
in
push
scas
les
or
into
xor
lcall
sub
pop
jp
call
pop
add
mov
es
shrl
jns
pause
sarb
sbb
scas
push
dec
dec
fdivp
xor
jle
inc
push
mov
pushf
lds
jge
sub
scas
ljmp
inc
movsb
pop
cmp
js
aaa
mov
push
xchg
mov
sub
enter
int
cmp
je
pop
mov
jae
sub
insb
sub
mulb
lcall
xchg
leave
stos
push
inc
movsb
mov
jne
into
or
adc
stos
ds
das
and
push
add
and
push
jbe
test
lds
das
jg
add
cltd
insb
mov
push
mov
or
sbb
mov
mov
jno
adc
or
mov
js
inc
scas
arpl
add
imul
adc
aad
pusha
pusha
dec
pushf
imul
adc
jl
cld
test
out
mov
and
push
ret
bound
pushf
repz
out
dec
mov
sub
shlb
nop
sahf
mov
inc
out
dec
push
sub
jne
dec
adc
iret
xchg
inc
test
pop
mov
repz
scas
ret
mulb
sbb
cmc
xor
negb
cmp
sub
pop
out
mov
sub
jl
sbb
inc
fistpll
faddp
enter
shlb
cmpl
mov
icebp
jp
into
pop
fmul
and
xchg
out
inc
in
xchg
add
scas
xchg
test
int
cmp
inc
dec
or
push
mov
repz
adc
or
fists
pop
pop
push
add
sub
outsl
ret
aad
xor
or
pop
mov
adc
xor
push
jmp
dec
push
into
push
mov
jl
adc
mov
inc
cmp
lock
add
dec
shl
adc
jmp
int3
add
jnp
inc
and
enter
bound
push
movsb
repz
add
aad
movsb
or
jmp
mov
mov
cmc
jge
sub
add
pop
jmp
les
int
jge
fbld
in
ret
and
xchg
mov
xlat
insl
inc
dec
xchg
pop
or
jo
lret
mov
fldt
and
mov
sbb
dec
sub
dec
hlt
lds
pop
jns
fwait
fwait
push
jge
jno
popa
bound
sub
sbb
in
jge
mov
cmp
jg
mov
mov
pop
stc
cmp
in
bound
imul
inc
dec
aaa
sahf
fnstenv
push
or
dec
fidivs
cmp
sbb
mov
xchg
bound
cmpsb
sbb
jecxz
xchg
add
pop
iret
lods
and
aas
inc
dec
mov
movsb
sbb
mov
add
mov
mov
mov
dec
test
jmp
dec
stos
scas
add
addr16
xor
mov
push
mov
lea
sub
xor
repnz
sbb
int3
dec
cwtl
mov
clc
outsl
push
jg
cs
pusha
into
hlt
push
or
lods
nop
lea
jnp
mov
xchg
or
adc
popa
add
and
movsl
xchg
lcall
cld
jl
loop
and
pushf
mov
xlat
inc
call
fbstp
mov
ret
test
and
popf
cmpb
lret
xor
call
mov
movups
mov
enter
stos
cli
addr16
jb
add
xchg
dec
add
aaa
cmpsb
pop
popf
rcll
pop
pop
push
out
add
jbe
aad
shrb
cmp
jmp
lds
inc
cmp
pop
lret
scas
gs
scas
dec
fistl
xor
xlat
jbe
pop
xchg
and
add
mov
pop
outsl
scas
pop
cmp
lret
mov
mov
push
jecxz
loope
lods
sub
mov
add
sub
mulps
mov
pop
xor
cmp
sub
cmpsb
std
shlb
jnp
add
in
test
or
jo
cmpsl
cmpsl
fbld
testb
ror
test
lds
xor
shl
icebp
mov
mov
mull
rorb
lea
add
in
dec
dec
cmp
fidivs
popf
outsl
jmp
mov
fsubs
inc
push
in
and
xchg
lods
stc
push
lods
cmpsb
into
dec
nop
jl
mov
cltd
out
das
ror
in
outsb
mov
enter
addr16
cmp
inc
pop
dec
xchg
sbb
xchg
or
mov
and
xor
das
jno
pushf
and
push
mov
popf
adc
lock
test
xor
es
lods
stos
iret
test
sbb
aas
sub
dec
aaa
es
or
ja
xor
mov
mov
enter
jo
inc
jns
mov
push
std
bndcu
movaps
repz
mov
xchg
cmp
fcmovbe
bound
lods
fsubs
adc
lret
out
xchg
dec
xchg
ret
pop
add
dec
loopne
add
sahf
pop
cmp
roll
popa
clc
mov
mov
sbb
gs
jge
push
imul
lea
adc
scas
mov
jge
ficoms
int3
lret
jbe
pop
ss
cmc
stos
cmp
or
jo
lods
clc
push
adc
mov
stc
bound
negb
pop
enter
addr16
push
cmp
and
clc
jbe
repnz
jbe
scas
and
add
gs
lahf
xchg
push
jnp
mov
cwtl
idivb
cmp
popa
rcll
dec
push
pop
mov
cmpsb
or
lret
push
leave
add
aaa
enter
xchg
cli
dec
and
les
test
xor
test
stos
sbb
imul
loop
insb
cmp
mov
adc
nop
ficompl
imul
loop
lods
in
call
out
jge
arpl
in
pop
sub
push
mov
inc
stos
shlb
shl
hlt
mov
outsb
xlat
sub
ret
out
call
loop
jle
call
idiv
negb
pop
cmpsb
fwait
mov
in
leave
cmp
sbb
xchg
not
push
rorb
flds
test
push
rcll
jb
out
xchg
sahf
repnz
sub
es
iret
ror
pushf
inc
xchg
loopne
aas
int3
jae
cmp
fmulp
xlat
mov
lods
and
test
push
inc
or
lahf
roll
push
push
icebp
scas
add
stos
push
fcoms
lahf
push
jo,pt
mov
insl
lahf
xchg
sahf
minps
mov
pop
cmp
xorl
inc
push
cmp
lahf
xlat
fs
adc
sbb
arpl
xchg
enter
pop
fisttpll
add
or
xchg
add
mov
ja
aas
mov
aaa
mov
imul
dec
clc
mov
cmp
adc
orl
adc
cmp
jmp
mov
rcl
adc
ss
cmp
or
fwait
cli
dec
push
ja
rolb
pop
cmpsl
bound
in
data16
inc
stos
or
ljmp
sahf
sahf
mov
jle
cs
add
dec
repz
ljmp
and
rol
scas
push
add
or
std
leave
sbb
xchg
jno
dec
inc
clc
xor
notb
inc
lds
cmpsb
fs
fistpll
out
in
push
inc
jno
add
mov
pop
xor
stos
aas
sahf
jns
xchg
mov
adc
dec
xlat
adc
cmp
cmp
test
push
cwtl
std
jbe
addb
push
and
imul
adc
stos
shl
outsl
mov
lods
es
add
ja
lret
jl
xchg
lret
xchg
xor
cmp
ficoms
arpl
loop
loop
cmp
loope
or
out
cli
cmpsl
sbb
dec
lret
out
mov
cmpsl
lods
in
dec
mov
mov
adc
or
or
add
push
test
xchg
cmpsl
xchg
xchg
into
inc
or
bound
in
mov
enter
insl
add
pop
hlt
andb
outsb
faddl
movsb
xlat
pusha
int
pop
adc
ljmp
loop
mov
and
vmovd
int3
or
iret
ror
xchg
jae
leave
and
int3
and
mov
test
xor
out
xchg
adc
dec
push
test
mov
pop
jno
psraw
jmp
roll
out
inc
add
jl
lock
add
or
outsl
push
jbe
pop
fbstp
les
movb
cld
hlt
sahf
mov
push
inc
cmc
fisubrs
jl
mov
aaa
pop
push
push
dec
out
mov
xor
mov
jne
shl
push
jo
ja
add
mov
add
rorl
lret
fildl
daa
xchg
cmpsl
loop
mov
dec
xchg
int3
shll
jo
int3
xchg
addr16
mov
xchg
mov
lret
cltd
inc
pushf
mov
jae
shl
mov
sti
jbe
sub
lock
mov
push
pusha
cs
mov
push
dec
or
adc
mov
imul
jmp
jmp
pop
push
push
std
dec
lcall
out
mov
and
dec
js
xchg
push
movzbl
dec
outsl
test
mov
ret
sarl
xor
nop
push
mov
popa
cwtl
xchg
fistpl
lcall
pop
js
push
leave
push
pop
jnp
adcb
adc
mov
add
add
int3
xor
scas
xchg
mov
das
hlt
fisttpl
and
cmp
inc
xchg
adc
dec
insl
icebp
lods
fwait
add
pushl
add
adc
jns
or
pusha
mov
add
ret
fwait
in
test
loopne
aam
xor
pop
fisubl
adc
cmc
add
dec
dec
rcrb
loope
push
out
mov
mov
push
add
in
jo
arpl
mov
fs
lods
add
les
lret
adc
inc
jecxz
lea
les
jge
lahf
lds
popa
fcompl
cmp
outsb
cld
and
dec
test
cmp
imull
push
xchg
rcrl
pop
pop
subb
dec
out
notb
push
push
adc
mov
movq
add
mov
imull
push
hlt
cs
xlat
jle
adc
addl
mov
repnz
sub
std
and
shrb
mov
xchg
rcrb
orb
jmp
arpl
sbb
fmuls
mov
imull
lods
dec
fstp
ja
cmp
push
jae
mov
xchg
idiv
push
test
mov
mov
xchg
ss
stos
push
fs
xor
mov
xor
popf
mov
loope
js
and
mov
jle
rorb
or
cwtl
adc
repz
mov
lods
mov
push
inc
mov
fstp
loop
cld
sbbl
aad
scas
addr16
in
test
dec
mov
popf
pop
lret
jne
rorb
jo
add
adc
sti
xchg
jp
pop
not
sub
out
jle
jmp
insb
mov
arpl
iret
movsl
fisubrs
add
push
push
ds
paddusb
pop
mov
cmp
jg
int
add
dec
mov
add
ficompl
or
dec
sub
popf
jmp
push
cmpsb
movsb
and
sbb
cmp
dec
push
mov
iret
aam
fwait
adc
lea
insl
push
ja
fistpll
enter
dec
ss
add
xor
ss
pop
dec
dec
lea
pop
or
mov
adc
or
and
lds
loopne
mov
pop
testl
mov
cmpsb
xchg
cs
cmp
sahf
repnz
inc
mov
mov
xor
mov
repz
dec
push
fdivrl
mov
jecxz
pop
xlat
xor
xor
cmp
add
pmaddwd
adc
out
xchg
shll
sbb
dec
mov
mov
fnstsw
movsl
bound
inc
aad
nop
shr
add
int
lret
aaa
lcall
sahf
push
push
inc
and
sti
and
cmc
cwtl
lds
mov
pusha
addr16
xchg
icebp
jb
in
mov
cmp
data16
enter
jb
mov
lods
cwtl
mov
out
aad
and
shll
jge
daa
jl
ds
dec
jle
sbb
std
xor
bound
sbb
xor
jae
es
scas
dec
sbb
pop
test
fidivl
xchg
imul
mov
popf
in
xchg
mov
dec
mov
and
cld
icebp
aas
clc
and
jl
lret
sbb
jl
adc
hlt
test
pop
sub
mov
mov
rcll
scas
insb
jo
or
or
fisubl
jns
xchg
mov
repnz
clc
adc
daa
cmp
xchg
pusha
pusha
mov
std
cltd
aad
ret
push
call
cltd
dec
loope
adc
iret
add
aam
dec
imul
xchg
dec
mov
ret
int3
in
mov
add
arpl
cmp
inc
lcall
ljmp
ljmp
cmpsw
pop
inc
arpl
adcl
out
dec
addr16
fisubrl
adc
test
enter
hlt
cmc
in
addb
bound
or
je
add
pop
sub
xorb
adc
scas
repz
pop
std
mov
cmp
sar
lock
aad
js
ss
and
jne
mov
pop
dec
arpl
out
xor
push
xchg
ss
incl
jns
testb
or
mov
mov
dec
mov
mov
xor
in
mov
mov
shl
push
add
fcompl
inc
cmp
or
scas
in
scas
pop
mov
dec
sub
lcall
pop
mov
xchg
jl
cmpsw
loop
loop
sub
out
dec
sbb
inc
lods
loope
sub
mov
adc
pop
push
int
dec
shrb
pop
insl
enter
loope
cld
sbb
and
das
jnp
xchg
ds
pop
fsts
stos
mov
mov
sbb
lahf
xchg
out
cltd
fbstp
jb
jo
jp
aas
lods
int3
pop
sbb
imul
std
sbb
aam
mov
lret
fsubp
pop
jg
cmp
jae
fstpl
mov
fmull
mov
jl
sbb
xor
cwtl
sub
inc
cld
insl
mov
fs
push
nop
dec
aad
mov
cs
dec
scas
cmp
shll
dec
pavgw
sub
or
xor
test
out
cs
inc
sub
mov
xchg
mov
aaa
lcall
cmpsb
test
lret
mov
inc
or
iret
aad
sub
or
pop
aam
add
xchg
imul
es
xchg
nop
lret
pop
imul
sarb
sub
xor
sbb
cs
inc
imul
div
mov
jl
add
loopne
in
pop
or
sti
lea
bound
lock
aaa
test
sbbl
cli
xchg
aas
cld
pop
scas
lock
arpl
pop
test
popa
fwait
xchg
add
pop
pushw
add
fistpll
xor
test
ja
fisttpll
add
xchg
add
into
adc
sbb
es
xor
outsb
mov
or
cmc
addr16
jae
xor
sub
movsl
inc
and
and
inc
subl
in
xchg
test
cmp
mov
mov
fstl
pop
jns
int
adc
push
lret
loope
imul
lcall
add
leave
mov
sub
popf
clc
push
andb
and
imul
arpl
xchg
add
int
dec
and
and
scas
mov
test
mov
add
ret
cwtl
or
fstp
cwtl
shr
jle
or
sub
lock
mov
pusha
inc
push
pop
sub
mov
leave
mov
cmp
cmc
or
mov
fwait
sub
xor
decl
ret
dec
les
test
daa
mov
int
or
adc
push
xchg
push
cmpsb
js
fisubrl
push
jbe
sub
test
push
fs
inc
sub
addl
mulb
lds
icebp
mov
in
fistps
sbb
mov
xrelease
xchg
push
pop
adc
ds
sbb
jle
lods
mov
lods
insb
out
js
push
imul
imul
nop
sbb
jmp
test
out
in
sbb
nop
pop
insl
mov
xlat
mov
popf
or
sub
iret
and
rcrl
push
lret
sbb
sbb
popa
push
pop
and
lahf
ret
shr
push
inc
popa
jae
push
out
dec
mov
inc
rcl
cli
iret
xchg
sub
test
cmp
sub
mov
dec
shl
xor
xchg
mov
mov
push
add
pop
fcmovnbe
mov
jbe
dec
out
ds
clc
out
std
mov
xor
out
outsb
mov
push
add
push
iret
pop
inc
stc
adc
mov
ss
pop
rorl
push
pop
sub
fcomip
stos
jo
dec
neg
mov
push
lds
pop
push
cld
hlt
outsb
cs
dec
pop
cmp
leave
dec
mov
jl
sub
ret
imul
pop
aad
inc
and
shll
push
dec
imul
xchg
sub
arpl
leave
sbb
mov
ds
or
out
xlat
push
int3
movsb
in
sbbl
out
ficompl
loope
or
xor
repnz
jno
push
cmpsb
jp
pop
mov
adc
mov
loope
mov
mov
test
inc
cs
es
dec
in
aas
push
mov
or
jns
mov
adc
mov
loope
sarb
daa
push
sbb
leave
push
in
sub
sub
mov
fwait
jns
ss
push
adc
xchg
cs
dec
jns
test
rolb
mov
adc
pop
cli
xor
xchg
into
push
lds
push
pusha
or
lcall
or
roll
mov
inc
push
and
and
test
in
sub
cmp
ja
inc
mov
push
push
or
dec
cmp
cmp
xchg
movaps
add
mov
hlt
jae
mov
repz
sub
ret
inc
cmp
insl
inc
xchg
xor
stos
pop
or
pop
mov
xor
lret
pop
pop
mov
inc
push
add
xor
and
shlb
shlb
pop
loopne
nop
xorb
mov
mov
xchg
adc
add
xor
and
shlb
shlb
pop
loopne
nop
xorb
mov
mov
xchg
adc
add
xor
and
shlb
shlb
pop
loopne
nop
xorb
mov
mov
xchg
adc
add
xor
and
shlb
rcrb
out
or
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fidivrs
in
or
popf
jge
dec
adc
lods
lods
jge
insl
lea
fnstsw
sub
popf
jge
insl
mov
mov
insl
lea
or
int
cmp
xor
insl
mov
mov
or
jbe
jg
imul
test
addr16
xchg
sbb
fsubs
push
loopne
pop
mov
sub
jge
push
call
stos
leave
cmp
mov
and
fst
pushf
and
sti
or
in
mov
sahf
sbb
jmp
and
insl
fisttpll
pop
adc
js
or
xor
lea
lods
mov
inc
dec
push
stc
sbb
adc
sub
jge
dec
jo
popa
cmc
add
insl
jge
into
loope
bound
mov
or
xor
mov
adc
jl
movsl
inc
push
cwtl
or
dec
hlt
gs
cwtl
nop
std
pop
mov
xchg
in
or
mov
mov
pop
lea
pop
in
paddusw
insb
mov
jecxz
leave
sbb
lods
sbb
or
outsl
mov
dec
adcl
mov
dec
xor
sub
negb
aam
into
adc
in
push
mov
jns
gs
outsl
mov
insl
mov
mov
insl
lea
sub
popf
jge
insl
mov
mov
insl
lea
inc
aas
lock
adc
sysenter
push
mov
call
in
mov
lods
std
pop
add
cmp
out
and
mov
inc
in
sti
cmc
sbb
in
imul
mov
add
jbe
ds
jmp
sbb
mov
add
jb
daa
dec
outsb
mov
loopne
ret
bnd
int3
scas
ficoml
and
or
cmpsb
mov
in
push
adc
xchg
xor
leave
push
push
loop
xchg
subb
and
inc
fcoms
repnz
and
xchg
fisttpl
jae
test
and
add
pop
stos
dec
ficoml
lret
push
imull
push
outsl
int3
cmp
fadd
in
movsl
aad
test
ffree
pop
lret
jg
jbe
repz
in
adc
imulb
out
pop
pop
mov
cli
push
push
insl
sub
test
pop
lret
mov
into
sub
sbb
pop
cmpsl
adc
aad
push
outsl
sub
mov
rclb
pop
sub
notl
mov
stos
mov
mov
rolb
mov
cmp
sbb
leave
xlat
mov
or
stos
mov
stos
ja
adcl
rcrl
cmp
add
ret
int
ss
mov
leave
ret
inc
cmpsb
xchg
mov
add
cld
loopne
sahf
sbb
stos
mov
and
adc
inc
ret
adc
push
out
shrl
out
cld
jns
aad
lds
cmp
out
scas
mov
out
cmp
xchg
cmp
test
dec
test
imul
movsb
inc
xor
scas
imul
cli
jbe
bound
movsb
in
fsubl
out
loopne
pop
cmp
mov
stc
add
ret
stos
out
add
mov
repz
pushf
push
clc
popa
aad
adc
fiaddl
and
leave
fdivrl
insb
movsb
mov
push
gs
mov
xchg
sbb
gs
jns
cmp
mov
xor
mov
in
jmp
pushf
jg
rclb
pop
add
mov
mov
shlb
mov
jge
push
sbb
push
mov
xchg
push
add
std
sub
push
mov
push
pop
test
push
in
inc
xor
sub
bound
ja
dec
jae
scas
lods
dec
pop
mov
dec
fwait
jecxz
inc
push
adc
fstps
adc
push
push
out
mov
cmp
sbb
imul
out
lahf
out
stos
shrb
adc
jl
mov
xchg
in
xor
jmp
mov
xor
inc
gs
aam
dec
or
rorb
loop
out
push
popf
mov
movsl
out
xor
adc
repnz
test
imul
fstpl
push
xchg
out
and
test
ja
inc
cmc
ja
ret
out
mov
aad
mov
or
or
ja
push
sbb
lods
or
mov
cwtl
adcb
pop
shll
dec
and
push
icebp
bound
jo
inc
lret
add
scas
and
sbb
ret
hlt
lods
ret
clc
int
jae
out
xchg
jne
inc
and
aam
je
popa
add
mov
mov
rcll
cmp
add
flds
pop
inc
mov
std
mov
and
movsl
mov
bound
lret
sub
sti
test
leave
xchg
imul
and
or
pop
xorl
and
lds
loopne
xlat
aad
sti
cmp
or
pop
test
push
lods
imul
mov
xor
push
hlt
pop
inc
pop
popa
fyl2xp1
jmp
cmp
inc
sub
rcrb
or
mov
mov
or
cltd
mov
push
dec
pusha
rol
mov
std
test
mov
jno
sub
dec
fisubs
mov
add
mov
aam
and
jg
or
dec
data16
xchg
inc
jecxz
sub
int
leave
jae
gs
and
cmc
sub
lahf
mov
pusha
push
ret
pop
clc
daa
mov
cmp
xor
js
add
js
jne
ud2
mov
and
cld
scas
jge
test
jns
or
ds
rcl
aad
sbb
neg
je
mov
xor
sub
dec
mov
mov
sub
cmp
roll
in
clc
and
outsl
dec
mov
sbb
mov
call
shl
xor
jg
popl
adc
cs
push
sub
xchg
or
add
insb
sbb
movl
jnp
nop
loopne
addl
daa
fisttps
ficoml
es
nop
cmp
push
pop
icebp
push
test
adc
xchg
push
mov
mov
in
push
std
mov
jno
and
mov
push
jne
sbb
inc
arpl
rolb
hlt
xchg
mov
dec
pop
gs
fdivs
or
sub
lock
cwtl
push
ret
sbb
add
mov
jl
xchg
xor
loope
data16
cmc
add
xchg
icebp
sub
add
mov
push
data16
popf
gs
leave
pop
andb
push
std
mov
mov
jecxz
sbb
jo
imul
and
add
inc
or
dec
jmp
aam
xor
mov
cmc
loope
test
pop
in
sub
xchg
adc
cmp
fbld
mov
sbb
push
push
js
pop
je
lret
das
adc
dec
lea
xor
jb
addb
out
push
push
stc
nop
cld
enter
mov
xlat
push
jb
in
or
outsl
cld
mov
mov
and
loop
aad
jb
xor
xor
inc
mov
lds
and
andb
insb
inc
sbb
jmp
cld
imul
pop
cmpsb
iret
inc
cmp
test
mov
xlat
imul
or
out
test
push
addr16
movsb
pop
jmp
outsb
mov
adc
mov
pushf
aas
icebp
jmp
adc
je
xchg
jnp
cmp
lcall
or
pop
les
xchg
or
mov
pop
pop
aas
add
out
cli
jno
sahf
cltd
stos
sub
mov
pop
popf
inc
in
in
lea
cmpl
leave
mov
add
dec
xor
pop
cmp
add
adc
push
lahf
mov
jb
cmp
cltd
sub
cmp
mov
outsb
mov
and
cmp
fcoml
mov
test
in
ja
mov
jne
hlt
das
pop
shlb
stos
cmpb
cmp
push
xchg
loope
repz
adc
push
fsub
cli
push
icebp
push
pop
inc
loopne
or
es
jp
and
sbb
mov
cmp
jmp
sbb
dec
jne
pop
sbb
fisubrl
mov
stos
mov
repz
jo
push
cmp
and
and
dec
cs
outsl
inc
flds
lcall
xchg
adcl
mov
xchg
dec
dec
rcrl
lods
movsl
xchg
dec
call
jae
mov
fistpl
push
xchg
jmp
adc
lahf
mov
ljmp
mov
outsl
nop
xchg
cmp
faddp
int
mov
imul
cmp
sub
pusha
dec
insw
aam
and
int3
mov
push
sub
ret
test
and
fistps
popf
add
pop
xor
test
mov
xchg
addr16
stos
lock
test
or
or
shlb
addb
loopne
aas
lret
arpl
fcom
ja
enter
mov
dec
andb
shlb
dec
adc
clc
or
and
xchg
or
xchg
mov
jmp
les
scas
lods
hlt
repz
dec
lds
adc
push
repz
or
in
cld
pop
ds
out
rcll
xchg
cmp
add
xchg
pop
aad
sub
fs
mov
mov
xchg
adc
out
fnstenv
and
scas
stc
sbbb
mov
adc
pop
sbb
outsl
fldl
stos
into
or
jne
dec
jbe
sbb
and
sti
stc
push
imul
test
mov
jno
les
cmpsb
push
lcall
sbb
outsl
jle
movsl
mov
add
popf
sbb
ja
pop
pop
sub
mov
fs
inc
adc
cmp
or
out
stos
insb
xchg
paddb
cmp
jno
ret
imul
sub
or
xorb
inc
out
roll
rcl
leave
xor
jns
or
in
dec
ljmp
pop
push
in
cld
adc
and
xor
repnz
mov
sbb
jl
inc
mov
in
lds
inc
jp
dec
sbb
in
jmp
les
ds
daa
leave
xor
lock
idiv
add
subl
out
inc
js
lcall
cltd
pop
inc
or
sub
push
pop
push
mov
push
andb
mov
test
mov
je
cmpsl
loop
fisubrs
mov
cmp
adc
sbb
dec
adc
mov
push
shlb
hlt
sbb
xchg
pop
push
cltd
pop
dec
cmp
js
push
mov
add
cwtl
loopne
fs
inc
or
and
in
pop
aad
adc
jae
ret
xchg
shll
cmp
and
jp
lock
push
ret
movsl
and
pop
mov
adc
ja
pushf
inc
dec
cli
movsb
jns
in
movsl
cmp
stc
pop
ror
das
sub
cmp
ficoms
xchg
cltd
and
imul
leave
das
jae
addr16
leave
xchg
mov
addl
push
sbb
mov
xchg
jnp
pop
lods
bound
xor
push
lods
add
dec
lret
enter
or
lahf
sbb
pop
jbe
mov
inc
movsb
mov
inc
loop
imull
sub
or
or
and
leave
push
push
cmp
call
mov
dec
adc
sbb
mov
cli
clc
clc
or
ret
inc
dec
daa
mov
aaa
jbe
in
les
lock
push
xchg
pop
sub
or
push
insb
xchg
insb
xchg
shrb
or
aad
pop
adc
jmp
adc
mov
in
inc
ljmp
lds
jle
les
mov
xchg
push
xchg
push
xchg
pop
js
rcrl
hlt
gs
or
dec
adc
roll
mov
add
lds
addr16
sbb
imul
dec
movsb
out
jecxz
jle
pop
ja
or
lea
loopne
mov
mov
push
or
outsb
or
icebp
pop
addr16
sub
sub
mov
sbb
ret
iret
cltd
xlat
jle
addl
mov
xor
cltd
mov
shlb
sub
stos
mov
sub
fs
pushf
sub
jecxz
test
loopne
add
mov
push
psubq
jbe
mov
xchg
ja
pop
dec
fcoml
insb
ret
movsl
and
jg
fdivr
test
insl
cld
imul
pop
pop
loopne
or
mov
and
sbb
mov
popa
push
xchg
push
daa
outsb
mov
sub
mov
loope
adc
push
fnstenv
push
cwtl
push
out
or
ljmp
push
imul
inc
addl
push
mov
jp
pusha
repnz
cwtl
push
icebp
jmp
lea
xchg
aas
das
outsb
aaa
or
add
cmp
stos
inc
shrl
clc
aam
pop
dec
popa
or
inc
sbb
sbb
sbb
addb
test
push
in
jecxz
sahf
cmp
mov
mov
pop
xor
jo
jo
dec
sub
test
xor
fimuls
xor
mov
jnp
mov
xchg
mov
pushf
fucomi
pop
repz
das
adc
xchg
dec
out
sub
movsl
sub
cmp
aas
mov
mov
leave
jge
cmp
lea
test
sar
jb
pop
repz
and
movsb
ljmp
xchg
jb
cmpsb
mov
in
shrl
xchg
jae
aaa
xorb
mov
sti
cmp
clc
mov
sbb
mov
dec
scas
sub
cltd
insb
pop
incl
or
movsl
dec
mov
mov
es
iret
cmp
pop
fidivrl
xor
jmp
mov
pushl
movq
stc
rorb
inc
popa
mov
bound
seta
sub
rcll
or
jp
and
xchg
nop
fiadds
ret
pop
cmp
lcall
jle
ret
out
fwait
xchg
dec
sub
adc
orl
fbstp
arpl
jae
scas
call
dec
push
xchg
pop
xchg
das
sub
mov
add
fmulp
mov
or
inc
jb
jno
stos
inc
add
outsl
andl
cwtl
xchg
and
loope
push
enter
or
movl
scas
sbb
into
pop
cmpsb
inc
xor
pusha
push
gs
xchg
mov
iret
sub
and
jno
inc
inc
mov
bound
jg
pop
shrb
pop
mov
addr16
roll
loop
je
push
test
cmpb
push
push
mov
or
dec
and
mov
push
in
or
pushf
or
gs
idivb
dec
rorl
clc
pop
push
push
mov
faddl
loope
sbb
push
gs
adc
inc
sbb
sub
xor
mov
out
cli
jl
das
cmp
cmp
mov
fsub
xor
sub
in
movsl
xlat
fldl
adc
bound
jle
fbld
sbb
fs
adcb
fcomi
inc
stos
xchg
lds
sub
aad
gs
enter
and
iret
pop
data16
cwtl
test
inc
test
inc
sarl
cmp
xchg
mov
dec
cs
test
mov
dec
mov
stc
dec
push
and
jnp
inc
or
xor
fcomp
mov
enter
rolb
sarl
lcall
repnz
leave
iret
or
jecxz
insl
aas
arpl
add
inc
inc
inc
sbb
add
outsl
nop
fsubrs
cli
mul
sub
gs
cmp
stc
push
pop
cmp
adc
mov
in
push
mov
repnz
inc
fidivs
leave
and
fldenv
cmp
sub
xchg
test
sbb
stc
push
loop
pop
or
sub
es
mov
mov
ja
add
and
dec
sbb
insb
int3
add
lret
inc
mov
push
pop
sbb
and
rcrb
adc
and
insl
push
fidivrl
and
in
push
aad
test
out
sub
out
cs
inc
fsubs
in
scas
jae
es
clc
aad
inc
jge
mov
mov
dec
and
in
daa
lret
clc
test
jl
or
jbe
and
cmp
sahf
stos
fcmovbe
cmp
xor
sbb
pop
mov
push
sbb
pusha
lcall
dec
mov
cmc
add
sahf
call
idiv
sub
aad
je
pusha
aas
push
adc
gs
cmp
daa
adc
seta
cli
cmp
inc
out
lods
rcl
sbb
jmp
lcall
mov
cld
cmp
out
push
out
lods
subl
loope
and
out
in
pop
cmp
out
and
mov
in
jno
xor
ffreep
popf
pop
jle
lcall
mov
and
scas
shlb
popa
adc
pusha
inc
mov
pusha
xor
push
lock
lea
pop
jne
insl
movsl
mov
jno
outsl
lret
int3
mov
addb
sbb
xchg
mov
lds
mov
inc
inc
test
fs
mov
push
dec
xchg
xchg
fiadds
icebp
orl
mov
pop
stos
adc
mov
adc
jnp
sbb
xchg
stc
and
xor
frstor
xchg
sbb
cmpsl
mov
call
adc
sub
xor
xorb
or
pushf
fwait
xlat
inc
cmp
pop
mov
adc
mov
sbb
jle
or
mov
stos
add
sarl
out
ffreep
mov
jmp
dec
add
ds
imul
sub
aam
loop
mov
inc
dec
mov
call
mov
ds
adc
mov
jb
sahf
sbb
test
sbb
test
sub
cmp
xlat
aam
faddl
fidivl
or
movsl
push
idivb
test
sbb
test
pop
mov
rolb
sub
jns
add
jge
rcl
xor
push
jle
mov
lret
xlat
clc
pop
or
test
mov
dec
inc
cs
sahf
ss
mov
test
adc
dec
aas
cld
mov
xchg
hlt
test
out
ja
xchg
in
and
inc
push
inc
mov
push
icebp
ds
inc
pop
fstl
or
inc
adc
pop
scas
test
jg
aaa
icebp
mov
enter
xchg
arpl
sti
pop
xchg
or
fstps
mov
inc
pop
int3
dec
xor
xchg
dec
or
jnp
in
and
lret
mov
shl
repnz
jmp
sbb
or
das
add
xor
stos
dec
xchg
and
dec
push
or
pop
pop
in
shll
jnp
dec
fisubs
pop
push
push
jmp
into
jmp
dec
inc
push
mov
xor
lret
mov
jne
jnp
fs
inc
addb
mov
jmp
ret
fcmovb
enter
bswap
cmpsb
iret
push
inc
push
lods
mov
adc
mov
or
push
lods
subl
inc
sbb
ljmp
dec
scas
test
leave
aad
sub
jmp
std
int3
jmp
jbe
gs
arpl
mov
sub
push
vpminsw
lcall
aam
cmp
and
aam
and
fucomip
cmpb
pop
hlt
adc
or
pushf
hlt
adc
pop
es
jae
std
push
or
rol
jbe
jns
push
sub
or
mov
ficompl
in
movsl
pop
and
testl
xchg
mov
out
dec
sahf
sub
fdivl
xor
push
mov
push
aam
pop
stos
scas
adc
xchg
pusha
and
pop
ja
ret
xchg
fdivl
cmp
loopne
push
in
leave
pop
ss
movsl
and
mov
mov
xchg
orb
sub
or
aam
jmp
insl
mov
testb
adc
ljmp
mov
lds
adcl
iret
cmp
fwait
xchg
xor
mov
cmp
je
mov
pop
pop
ja
xor
lea
pop
call
out
les
loope
scas
out
fwait
jns
xor
lret
lds
cmpsb
xor
pop
mov
jno
mov
dec
les
mov
insb
ja
pop
add
lds
fisubl
jo
cmp
popf
lret
jp
adc
xor
je
xor
iret
scas
data16
mov
shrb
lret
cmp
adc
and
int3
iret
adc
and
xchg
and
stc
testl
call
adc
fldl
add
adc
pusha
ret
push
mov
aad
dec
mov
imulb
imul
das
mov
cmp
shl
inc
mov
je
mov
adc
push
data16
mov
mov
loopne
pop
adc
sub
xchg
xor
mov
pushw
mov
cmp
inc
cmp
mov
or
push
cmp
and
data16
pop
sbb
adc
and
inc
push
loopne
pusha
test
stos
mov
shl
pop
xchg
mov
and
mov
mov
jb
add
lods
test
testb
idivl
decb
inc
lds
jp
sbb
nop
loop
ds
inc
add
out
into
scas
orl
call
aas
cmp
pop
sbb
pop
arpl
cmp
lods
mov
pop
pop
decl
and
sbb
inc
js
hlt
int3
lock
cld
cmp
test
pushf
dec
jmp
pop
mov
sub
cmp
fbstp
lret
fsubs
jb
hlt
push
fs
fildl
xor
or
or
pop
lods
dec
sub
push
fsubrl
push
stc
stos
fidivrs
cmp
sbb
loop
push
data16
xor
or
sahf
cwtl
push
ficompl
dec
outsl
data16
mov
or
mov
lds
arpl
lret
addb
lahf
cs
les
push
ss
xor
data16
mov
ret
push
xor
add
sub
in
imul
mov
pop
aam
lods
sub
mulb
cmp
mov
shl
mov
nop
xchg
mov
mov
push
and
jne
inc
out
sbb
xor
cmpsb
sbb
dec
mov
andl
in
or
mov
mov
insl
lea
sub
popf
jge
insl
mov
mov
insl
lea
sub
or
pop
insl
dec
pop
mov
insl
lea
ffree
int
cmp
int
popf
jge
insl
mov
mov
insl
cli
push
test
ret
xor
shr
rcll
lds
js
push
and
add
add
icebp
enter
call
mov
or
popa
push
push
push
and
adc
add
icebp
dec
loope
shrl
rorl
push
sbbl
or
cmp
jge
je
jbe
mov
lahf
movsb
adc
int
mov
repnz
popf
ja
jecxz
ret
mov
sbb
aam
lahf
icebp
sarb
sub
sbb
fsubl
sahf
xchg
cltd
jp
test
fsubs
clc
add
adc
stc
outsl
int3
dec
nop
inc
sbb
pusha
xchg
mov
lret
pushf
ja
popf
jl
hlt
test
mov
mov
dec
lea
sahf
push
and
shrl
xor
int3
cmp
dec
cld
shl
cwtl
mov
je
scas
imul
or
push
test
testl
jo
cmp
jno
gs
push
jno
adc
jmp
enter
test
cwtl
mov
mov
stos
jno
popa
mov
xor
and
adc
icebp
mov
xor
std
aad
hlt
leave
cmc
cmp
or
add
xor
data16
arpl
fcomps
and
aam
fldt
sbb
push
insl
mov
je
push
stos
mov
mov
mov
mov
mov
jno
popa
js
push
and
adc
add
icebp
enter
call
mov
pop
jno
popa
js
push
and
adc
add
icebp
or
push
mov
out
fadd
int3
sbb
jg
and
dec
push
stos
fwait
xlat
repz
ja
loop
mov
cmpb
inc
in
mov
mov
addr16
lds
adc
sub
pop
add
sbb
insb
out
sub
pop
and
inc
jne
pop
push
bound
cmp
addr16
push
dec
sub
sub
ret
inc
test
stos
adc
je
icebp
cmpl
or
jp
sub
push
lcall
into
adc
dec
sub
ljmp
adc
outsl
jecxz
movsl
add
dec
aaa
push
adc
cmpsl
je
mov
test
data16
pop
add
cmp
lock
dec
push
mov
fwait
mov
lods
daa
shlb
lcall
cmpsb
fidivrl
pop
in
xlat
fisubl
lea
add
jbe
sti
push
cli
aad
repnz
clc
int
xchg
jmp
jge
out
pop
or
imul
mov
adc
ret
cld
jmp
fsubrp
ficompl
dec
inc
test
inc
sub
pop
cmova
mov
cld
jb
pop
scas
xchg
sub
and
ds
xchg
jl
xor
cmp
loope
lret
cli
gs
stos
icebp
jg
dec
inc
xor
adc
pop
xchg
inc
push
sub
jns
inc
mov
aas
lods
leave
call
orb
jle
mov
out
mov
xchg
sbb
imul
stc
mov
or
or
mov
mov
adc
xor
aam
movsw
jp
pop
push
or
js
or
cmp
fildl
fs
dec
add
push
stc
ds
ss
cs
lds
into
fwait
iret
jne
mov
xchg
push
lcall
jo
push
mov
test
sbb
cmp
xchg
sub
inc
fimuls
adc
jp
mov
jbe
push
sub
or
jo
dec
mov
pop
sbb
xchg
or
xor
sbbl
test
stos
loopne
outsb
inc
rol
stos
lcall
mov
mov
push
mov
ret
jl
sub
ljmp
les
mov
sub
jnp
arpl
xchg
sub
dec
mov
shl
jns
rcrb
fisttpll
and
rorl
pop
push
lahf
cmp
push
cmp
and
scas
cmpsl
mov
ret
sub
sbb
sti
js
pop
scas
int3
cmp
mov
xchg
aad
push
rcll
xor
xor
jbe
addr16
aam
mov
leave
lea
and
div
mov
push
in
mov
test
pop
jge
lea
movsl
and
fiadds
rorl
push
jp
loop
out
loope
mov
pop
mov
add
xchg
push
repz
inc
and
lret
xlat
idiv
mov
push
mov
fmulp
ret
jnp
lcall
mov
mov
nop
mov
imull
lods
clc
sub
sub
xor
movsl
mov
shr
ret
mov
pop
adc
xor
jmp
int
inc
inc
loop
inc
xor
add
mov
xlat
inc
sbb
leave
cs
dec
pop
mov
inc
cmp
xchg
jno
mov
push
dec
jl
gs
test
aaa
cmp
int
jmp
and
and
sub
sbb
cmp
mov
out
lahf
imul
in
xchg
dec
pushf
cs
sbbl
scas
sbb
sub
out
outsb
je
dec
lock
icebp
dec
cmovs
jno
nop
pop
das
in
outsb
shll
movsl
jne
or
adc
mov
dec
sub
and
mov
out
pop
inc
mov
and
adc
sub
lret
mov
add
jge
sbb
imul
xor
sbb
in
push
xor
je
ljmp
jl
mov
test
movsb
lret
mov
jle
adc
outsb
test
xchg
pop
sahf
add
stc
xchg
add
jnp
dec
in
lret
ss
sbb
and
lds
lret
adc
cmp
out
stos
les
bound
push
movsb
scas
pusha
push
dec
mov
jmp
add
push
dec
adc
gs
std
loopne
mov
gs
js
dec
scas
dec
je
idivb
mov
jne
jle
fwait
aam
add
test
lods
roll
out
out
adc
add
mov
mov
jmp
fwait
imul
out
test
ret
push
ja
imul
out
hlt
jecxz
inc
daa
xor
adc
dec
adc
dec
sub
jae
lcall
fsubl
pushf
lret
les
xorl
rcrl
fst
cmpsb
cmp
movsb
insl
test
icebp
ss
jns
outsb
mov
cmpsb
sahf
and
dec
inc
pop
and
fadds
adc
rcll
sub
pop
enter
clc
test
push
sbb
scas
mov
xchg
cmpsl
pop
ret
xlat
xchg
int3
mov
sub
adc
pop
xchg
int
mov
sub
mov
aaa
mov
push
insb
push
scas
outsl
scas
repnz
cmp
add
mov
subb
push
jnp
popf
or
cmp
dec
aam
push
mov
xchg
fisttpll
aas
test
inc
in
jmp
mov
mov
hlt
jle
add
xor
clc
mov
xlat
shr
imul
lea
push
cwtl
mov
jne
adc
fs
lea
dec
mov
call
dec
outsb
popa
xchg
push
mov
sahf
pop
xor
js
cmp
add
pop
addb
sbb
jo
test
pushf
cmp
or
push
cmp
mov
out
cwtl
sub
or
das
fnstsw
lret
ss
stos
mov
pop
jle
xchg
fwait
pushf
fwait
pusha
xchg
loope
adc
pop
out
cmp
sbb
xor
iret
sbb
add
lret
xor
pop
jb
je
pop
add
or
iret
jno
mov
aas
and
in
imul
es
cmp
cmp
mov
adc
xchg
xor
mov
push
or
gs
dec
dec
aad
cmp
jbe
add
add
sub
in
dec
arpl
icebp
push
lret
mov
inc
mov
movlhps
cltd
cwtl
cmp
xor
push
das
inc
cmp
decb
mov
jno
dec
sbb
ljmp
cmp
fmull
insb
js
sub
into
mov
mov
xchg
lods
mov
jbe
mov
xor
stos
mov
xor
sub
pop
aam
repnz
mov
pop
jo
adc
test
adc
js
inc
and
loopne
test
pop
xchg
inc
mov
repz
fs
sub
mov
imulb
hlt
pop
movsb
push
dec
mov
mov
lcall
bound
frstor
sbb
addr16
repnz
clc
pop
or
add
mov
cmpsb
dec
push
jae
fs
mov
in
lock
test
inc
push
push
paddd
cmp
jo
add
pop
cmp
test
pop
je
bound
and
mov
push
aas
pop
mov
fbstp
insl
movsl
push
push
sahf
jmp
test
or
dec
mov
push
test
fs
fwait
pop
xchg
loopne
pop
add
dec
lea
lds
sbb
lret
xor
pop
jmp
jns
out
outsb
xchg
aaa
stos
or
pop
popf
xchg
js
and
xchg
cmpb
sbb
jge
or
and
addb
hlt
xchg
int
ret
shll
insb
sub
inc
or
lea
lcall
add
push
popf
sahf
add
into
sahf
xchg
xchg
fldenv
ja
cmpsl
mov
imull
jbe
arpl
mov
mov
xchg
lcall
pop
repnz
mov
adc
nop
fiaddl
pop
mov
or
sbb
out
pop
lcall
cmp
test
sub
mov
pop
cmpsl
mov
and
mov
mov
and
jnp
push
or
dec
mov
rcll
dec
xorl
mov
fsubl
push
cmc
cmp
outsb
mov
stos
or
dec
jge
stc
inc
xchg
or
cltd
addr16
mov
or
fs
dec
int3
sbb
mov
mov
push
cmc
xchg
or
imul
movsb
jae
aas
adc
mov
flds
mov
imul
add
imul
or
xchg
pop
jns
test
movsl
fwait
inc
xchg
mov
adc
mov
adc
push
add
subl
subb
pop
out
dec
test
push
shrb
pop
jbe
adc
int
jl
mov
scas
and
pop
mov
cmp
aad
jbe
add
fstps
push
jle
inc
lods
xchg
sub
out
jb
xlat
or
jle
mov
add
cltd
stc
hlt
shrl
sub
xchg
push
mov
push
rclb
pop
pushf
aaa
adc
lcall
jp
shrl
les
jae
in
or
push
jmp
bound
lock
dec
add
stos
ret
ja
lcall
mov
jnp
leave
nop
inc
sti
pusha
es
pop
xchg
push
mov
rcrl
pop
pop
imul
out
inc
ret
test
fistpll
int
mov
int
inc
loopne
fistpll
fwait
scas
and
mov
shlb
call
and
mov
adc
xchg
mov
sub
sbb
pop
jns
dec
cli
mov
and
push
and
ret
clc
xor
jbe
mov
daa
mov
scas
mov
lock
sbb
and
fldenv
dec
inc
lock
add
adc
and
shr
imul
inc
jmp
pop
div
or
fstpt
dec
lds
inc
jl
xlat
call
fstps
ret
inc
cmp
sbb
lods
std
sbb
xchg
pop
rcll
sbb
movsb
cmp
push
cld
fdivl
and
push
adc
add
sbb
scas
mull
in
push
dec
add
jbe
test
stos
dec
mov
popf
mov
std
xchg
dec
fstps
mov
jg
sbb
xor
lret
test
movsl
nop/reserved
inc
adc
bnd
xor
or
in
xchg
xor
xor
cwtl
rorb
inc
jbe
jns
jae
mov
jne
icebp
loop
inc
setns
inc
test
push
and
iret
aad
js
jo
mov
scas
andb
xchg
mov
ds
mov
bound
inc
xchg
or
sbb
cltd
push
xchg
sub
mov
xchg
aam
push
roll
jge
in
add
stos
repz
or
mov
movsb
sub
jle
ds
push
lret
hlt
imul
cltd
jne
test
fsubl
dec
pop
ret
push
sbb
mov
mov
xor
adc
hlt
mov
pop
dec
js
xchg
outsl
xchg
inc
outsl
adc
sub
adc
jns
rclb
out
outsb
adc
scas
adc
jp
dec
scas
sahf
or
inc
sbb
cmp
in
in
pop
push
jle
mov
push
dec
cld
xchg
sbb
adc
cmp
push
movsl
cld
inc
pop
divb
cmc
fisttpl
movsb
and
or
xchg
jbe
mov
xchg
lcall
mov
mov
mov
sub
jo
inc
testl
xchg
test
jne
fbld
pop
stc
add
stos
inc
mov
mov
adc
dec
push
mov
test
cmp
test
lods
add
mov
nop
mov
jne
popf
push
in
pop
lods
adc
cmp
pop
insl
inc
lahf
xchg
movsl
dec
movsb
xlat
movlps
loopne
cmp
loopne
add
aas
and
imull
xchg
jae
xor
out
mov
inc
sub
adc
in
mov
in
loope
je
adc
popl
sub
inc
loopne
adc
icebp
movsl
mov
or
jg
fimull
cmp
push
inc
jnp
sahf
and
xchg
outsb
jmp
xchg
cmpsl
jne
loop
aam
enter
mov
repnz
sub
ret
xchg
sub
push
les
das
xchg
rorl
pop
stos
loop
dec
dec
iret
insb
insl
xor
loop
fucomip
and
and
sbb
pop
aas
or
jae
stc
mov
negl
add
lods
notl
jl
daa
popa
push
mov
test
jg
hlt
jle
push
jno
lcall
mov
sub
push
jo
inc
stos
sarb
push
add
lret
bound
jmp
icebp
xlat
out
scas
and
stos
push
cs
adc
jmp
sti
arpl
orb
in
dec
and
cltd
xchg
push
and
xor
jg
ss
xor
add
sub
or
lods
loop
inc
mov
addr16
push
sbb
aad
sahf
dec
or
or
and
movsl
push
cmc
sbb
and
dec
aam
sbb
and
out
fsub
pop
dec
dec
xchg
adc
push
jge
jecxz
rcl
cmpsb
push
jb
ficompl
outsl
ficoms
and
nop
lock
push
mov
or
and
pusha
sub
mov
xchg
sbb
add
dec
mov
stos
mov
xchg
xor
jnp
pop
pusha
fwait
pop
lock
lea
mov
jne
data16
mov
lcall
pop
xor
push
sahf
xor
fcmovne
icebp
pop
mov
insl
xchg
test
inc
ds
adc
ret
push
jne
jo
adc
push
jge
sbbb
fcomps
pop
adc
call
add
and
push
pusha
das
jb
jns
repz
ljmp
int3
push
push
sbb
mov
jnp
mov
stos
adc
push
jge
cmp
jl
andb
mov
ja
rorb
sahf
xchg
out
sti
shrl
mov
mov
pushf
xchg
pop
and
xor
clc
push
outsl
pop
add
es
add
xor
push
sub
pop
adc
pop
cmp
fidivl
mov
pop
add
fimull
or
lret
mov
cltd
in
pop
stos
dec
push
dec
std
jle
adc
outsl
pop
push
aad
pop
pop
mov
aam
out
xchg
fldcw
inc
inc
ret
xor
inc
ss
and
xchg
sub
cltd
sub
push
out
xor
lock
dec
pop
push
xchg
mov
lcall
push
cltd
ret
frstor
sahf
jae
adc
sbb
jno
sahf
lea
cmp
jne
flds
dec
push
pop
fistpl
sub
movsl
add
mov
push
sahf
jo
or
push
lods
add
out
daa
push
inc
adc
bnd
xor
adc
add
sti
sbb
hlt
sub
jmp
push
pop
shl
sub
mov
dec
sbbl
bound
fcoml
push
cmpsb
xlat
push
mov
fisttps
cmp
sub
sub
std
dec
outsb
and
outsb
push
mov
jle
loope
mov
loopne
inc
popa
icebp
push
mov
movsb
xor
jnp
loop
dec
mov
pushl
cmp
imul
test
mov
stos
fnstsw
shll
cmp
mov
sub
mov
adc
mov
imulb
rolb
push
pop
xor
insb
xchg
std
into
mov
jb
and
inc
xor
subl
loop
fsubs
aaa
nop
es
icebp
es
mov
mov
ficoms
add
pop
sub
sub
jns
das
loope
inc
mov
cmp
cli
outsl
or
int
push
testl
arpl
insl
mov
dec
adc
fstps
pop
inc
outsl
movsb
fwait
push
pushl
je
pop
cmp
cmp
jb
movsb
mov
stos
mov
mov
and
adc
rcrl
jo
mov
stos
xchg
or
pushf
fwait
jo
jo
mov
cwtl
int3
jbe
inc
mov
mov
in
sub
test
push
cmpxchg
add
xor
jns
repz
das
sub
aaa
icebp
loop
mov
shlb
push
sti
ds
dec
xor
mov
sub
cld
fisubl
inc
xchg
out
outsl
sub
insl
imul
mov
orl
pop
call
or
not
xchg
nop
mov
pop
mov
sub
pop
aad
inc
das
sbb
xor
mov
stos
adc
out
cli
movsl
out
mov
jae
aaa
int
inc
ror
fnstsw
popf
lock
outsl
jb
dec
pusha
push
aad
pop
sbb
je
jp
sarb
cmc
fldenv
lret
xchg
ss
jno
movsl
cmpxchg
pop
jbe
or
cli
push
out
sub
xchg
xchg
stos
sub
dec
int3
cmp
adc
fldt
push
rcll
jmp
xchg
or
fdivs
jle
ds
adc
xor
adc
fistps
iret
cmp
aaa
mov
outsb
adc
mov
shll
nop
stc
testl
sbb
add
roll
xchg
aas
inc
jmp
and
rcl
imul
push
test
fs
imul
sub
sarb
sti
jnp
mov
jge
inc
mov
push
std
and
ljmp
sub
scas
je
push
inc
xlat
leave
aam
jmp
adc
adc
bound
lods
adc
fiadds
fnstsw
int3
pop
inc
clc
add
test
test
cli
call
in
jno
inc
aas
mov
jno
fstps
mov
xorl
cmc
jb
sub
mov
loop
pop
repnz
les
bound
fists
aas
sti
jecxz
es
insb
sub
out
jg
pop
add
aad
adc
inc
push
into
jno
cmp
inc
mull
addr16
aad
and
mov
dec
mov
adc
adcl
cld
scas
push
icebp
adc
lds
add
xchg
add
pop
pop
fcmovbe
jae,pn
inc
popa
icebp
adc
jnp
push
jp
cs
test
ret
sti
adc
cs
loopne
mov
bound
nop
cmp
mov
mov
mov
and
popf
stos
xor
and
outsb
and
addr16
xchg
mov
test
xchg
add
xor
and
nop
or
cmp
xor
rcrl
gs
dec
jmp
adc
xchg
push
enter
data16
add
fistpll
shrb
aas
or
dec
inc
and
js
ja
ficoms
adc
sub
mov
divl
xlat
push
cmc
in
das
sbb
popf
jbe
cld
hlt
adc
fs
loopne
cmp
push
into
js
sbb
repnz
or
push
loopne
xchg
shrl
sbb
xchg
shlb
outsl
movsb
dec
aam
push
mov
mov
addr16
xchg
lods
adc
aam
and
lret
mov
aaa
mov
mov
roll
sub
jbe
jb
mov
sub
loope
jno
sti
push
dec
jns
xor
mov
adc
jp
mov
sbb
pop
or
lcall
les
lahf
in
mov
sbb
call
and
jne
xchg
enter
lds
sbb
pop
clc
fdivs
sbb
sbb
jnp
and
dec
adc
or
aaa
leave
repz
sbbl
push
mov
addr16
jns
cmp
mov
adc
xor
add
cmp
imul
push
sbb
push
call
mov
mov
inc
pop
jno
xor
in
xchg
mov
lods
fadds
push
sub
mov
decl
imul
lds
lret
scas
outsb
push
mov
mov
pop
cmp
es
in
jnp
roll
outsb
jp
pop
jecxz
xchg
and
shl
add
lods
stos
filds
mov
mov
outsb
push
dec
lods
mov
leave
sbb
rcrl
hlt
pop
cmpsl
fs
push
pop
jae
outsl
push
push
das
sbb
and
loope
shl
rcrl
test
pop
jno
popa
js
push
and
adc
add
icebp
enter
call
mov
pop
jno
popa
js
push
and
adc
add
icebp
lret
loope
shr
rcrl
test
popa
jno
insb
inc
sbb
adc
cmp
sbb
shl
loope
rol
rcrl
sub
jno
lret
rclb
outsl
mov
xlat
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fsubrs
jecxz
jns
loop
sti
xor
add
add
add
cltd
add
add
add
add
add
add
add
add
add
xor
enter
jns
mov
add
jns
test
add
add
add
arpl
push
add
inc
add
xchg
add
add
nop
add
insl
add
push
add
push
add
add
add
add
addl
push
add
add
add
add
cmp
dec
add
add
ret
add
add
adc
rolb
popl
ljmp
add
add
add
pop
add
xor
testb
add
and
test
add
test
inc
add
insl
add
add
add
add
add
add
xchg
add
add
jns
roll
jo
adc
ljmp
add
add
add
add
add
add
add
or
or
add
inc
add
add
add
add
or
add
add
add
lea
ljmp
add
add
add
add
sbb
js
daa
add
add
add
add
add
add
inc
add
add
add
add
nop
add
add
add
stos
add
push
add
add
cltd
add
add
add
adc
add
insl
add
push
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
pop
add
sub
lea
push
add
xor
add
add
add
add
aad
xor
and
push
add
insl
add
add
lea
ljmp
add
cltd
add
add
xchg
add
add
add
add
insl
add
add
add
add
pop
add
add
add
add
insl
add
inc
add
add
add
mov
add
add
ljmp
add
sub
jns
dec
add
add
add
add
mov
add
add
add
add
add
mov
add
das
add
add
add
filds
lret
add
add
add
outsb
add
add
add
inc
add
add
add
add
pop
add
add
inc
add
add
push
add
push
add
jns
adc
inc
add
add
add
add
add
or
add
add
add
add
add
cltd
add
ret
add
add
add
add
add
adc
add
add
add
iret
add
rolb
enter
add
add
add
add
add
add
add
test
add
ljmp
add
dec
add
add
add
adc
sbb
and
push
add
pop
add
add
add
add
add
push
add
add
sti
add
add
cwtl
add
add
add
add
add
adc
popl
jns
test
lret
add
add
add
add
add
add
add
add
add
push
add
add
cmpsb
add
add
add
outsb
hlt
mov
test
es
clc
das
pop
mov
loope
jp
cs
out
sub
inc
lahf
cmp
mov
or
adc
adc
or
jo
ja
jnp
aas
mov
xorb
or
pop
lret
pop
insb
daa
in
xchg
in
ljmp
cmp
fxch
sbb
movsl
cmp
ret
and
mov
mov
mov
or
pop
test
clc
dec
sbb
mov
inc
pop
in
into
out
jb
outsb
loop
push
aaa
jge
insb
add
jb
rcrl
shll
xchg
aam
inc
cmpsb
in
idivl
mov
fpatan
mov
jg
inc
leave
jbe
pop
cmp
add
or
xor
cmp
mov
pop
out
pop
lcall
pop
push
sub
or
dec
std
hlt
nop
stos
in
push
fst
mov
add
cmc
mov
sub
inc
sbb
shrb
mov
jnp
mov
sahf
loop
sahf
jmp
mov
xchg
cmp
mov
inc
mov
cwtl
push
pop
xchg
shll
arpl
test
jns
es
mov
push
movsl
jp
xor
test
xlat
mov
pop
cmp
sbb
test
inc
sbb
or
out
shr
addr16
sbb
mov
mov
stos
xor
or
ror
out
or
sahf
clc
inc
mov
add
or
mov
leave
mov
xor
test
dec
lea
push
addb
icebp
jne
mov
and
iret
sbbb
in
in
repz
test
shrb
or
jo
repz
rcl
xchg
cmp
mov
push
ljmp
push
lea
out
sub
dec
jmp
js
sti
inc
stos
pop
ror
fldcw
sahf
and
shll
les
push
xchg
xchg
fisubs
inc
cltd
fadds
mov
jp
jle
mov
out
adc
cmpsb
sub
popa
jl
imul
cltd
mov
xchg
mov
mov
rcl
aam
jl
jge
add
mov
xchg
push
int3
or
fsubs
stc
mov
ds
ljmp
sbb
jbe
sti
ljmp
xchg
mov
push
movsl
add
ret
xlat
stos
int3
cmp
or
cs
call
adcl
stos
shll
push
pop
sahf
std
xor
or
push
in
dec
test
inc
cmp
mov
stos
jae
jl
fdivs
dec
arpl
pop
mov
imull
pop
jae
scas
xor
cmp
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
