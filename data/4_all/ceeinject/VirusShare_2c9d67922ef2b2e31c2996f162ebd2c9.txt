call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
or
adc
ds
das
mov
fwait
setns
outsb
sti
pop
fisttpl
mov
or
jnp
dec
into
pop
ds
push
fwait
mov
lret
dec
fstpt
adc
arpl
push
into
inc
ds
or
fwait
jle
add
loope
lret
jg
nop
aaa
test
aad
ss
iret
int
add
getsec
dec
xor
and
out
loopne
test
shll
ret
sub
fwait
subl
xchg
out
aam
mov
jne
fwait
jnp
aas
nop
mov
jp,pn
push
aaa
into
push
cs
adc
cmp
scas
cmp
or
mov
mov
stos
inc
loopne
fs
dec
fidivrl
jno
cmpsl
dec
out
xchg
mov
es
fwait
into
jae
sub
lret
dec
and
and
fistpl
add
lcall
fisubrs
cs
into
lret
jb
scas
sub
sbb
jnp
push
into
inc
ds
mov
jle
outsb
in
pop
lret
dec
mov
testl
pushf
adc
ds
push
fidivs
jg
outsb
test
lret
or
sti
jnp
push
sbb
aaa
pop
sarb
sbb
push
fdivrs
add
push
pop
icebp
push
outsb
mov
out
jnp
dec
into
pop
ds
cs
jle
outsb
sti
pop
lret
dec
fstpt
or
jnp
dec
into
pop
ds
cs
jle
outsb
sti
pop
lret
dec
fstpt
sub
push
xor
cmp
aaa
xchg
cli
xchg
pop
rorb
push
push
adc
sbbb
insl
cmp
arpl
cmovne
sahf
test
sub
pop
ss
lods
out
fldenv
gs
icebp
nop
jnp
out
push
movsl
stos
nop
or
mov
jne
dec
shl
mov
push
xchg
jno
cld
mov
jns
and
xor
pop
push
popf
push
lret
cmp
pop
fbstp
test
jns
xor
jbe
ficoms
lock
jo
mov
gs
popa
es
xchg
inc
fcoml
jmp
fnsetpm(287
test
sahf
or
movsl
ds
xchg
mov
lahf
xchg
sub
je
or
mov
ja
outsb
rolb
sbb
fisttpll
adc
lret
mov
cmp
repz
sub
in
aas
add
popa
mov
add
adcl
and
insb
sti
imul
sub
xchg
arpl
adc
lcall
pusha
mov
fsts
and
push
push
aam
movsl
lret
jge
add
jo
sbb
fdivp
lcall
xchg
xchg
popf
add
fisubrs
cmpsl
bound
in
jne
stos
ret
and
mul
jl
xor
pushl
iret
int
xor
sub
add
das
mov
jae
int
testb
pop
and
mov
mov
cmp
fucomp
outsl
jmp
out
decb
bound
push
cli
nop
xor
int
lea
push
jb
jecxz
imul
stc
ja
stc
dec
jg
mov
test
xor
les
fdiv
ja
mov
or
fwait
mov
stc
repz
sbb
push
js
lock
stos
adcb
daa
in
daa
pop
mov
cmp
divl
shlb
xor
out
pop
add
sahf
push
jb
and
cmpsb
mov
fsubrl
xor
stos
xchg
test
fwait
stos
jge
inc
ss
sti
gs
xchg
movsl
test
adc
sbb
hlt
mov
inc
jb
leave
aaa
sbb
clc
test
into
push
jns
incl
adc
pop
cli
add
cld
fwait
scas
shl
bound
inc
xor
mov
xor
or
sbb
fnstcw
adc
or
ljmp
push
adc
sbb
pop
xor
cmp
sub
xlat
sarb
lods
cmpl
lock
pop
mov
out
lods
scas
subl
roll
int3
aaa
repnz
imul
add
pop
add
int
int3
jb
in
push
jge
cmp
xor
inc
sub
ret
jge
test
dec
fdivrl
cld
aas
fs
push
sbb
jle
inc
rcrl
lods
lods
xor
xchg
adc
push
dec
add
push
pop
scas
flds
fs
sar
jnp
in
mov
cmp
adc
es
aad
scas
mov
es
cmc
cmp
or
jb
enter
mov
or
stc
sub
pushl
ret
or
push
or
mov
xchg
imul
dec
sbb
mull
out
pop
jae
xor
out
mov
rcll
or
push
dec
and
ret
jne
cmp
or
lahf
popf
mov
aaa
inc
xchg
outsl
cltd
mov
sub
inc
and
sub
inc
out
mov
scas
in
and
and
insb
addr16
fsubrs
fs
mov
push
mov
dec
cmc
jb
lcall
aas
cmc
daa
and
movntps
or
push
into
out
ja
dec
jge
inc
push
in
jo
pavgb
jb
in
fistl
xchg
add
cli
leave
jb
inc
lea
mov
push
dec
cmp
cs
imul
cld
in
cmp
jae
dec
mov
popa
ljmp
push
cs
pop
xchg
mov
and
xlat
loopne
mov
jmp
add
adc
cmp
fcomps
rclb
lea
mov
cmpsl
mov
fildl
nop
adc
mov
sar
cmp
fsts
mov
lock
popa
std
aad
and
xchg
xchg
sub
out
mov
int
outsb
lcall
enter
jo
mov
jge
fstpl
cs
movb
hlt
in
or
mov
int
inc
cmpsb
or
inc
adc
aaa
xor
scas
cld
mov
mov
cmpsb
jge
loopne
mov
mov
mov
test
lea
mov
mul
fdivrs
mov
mov
fdiv
mov
mov
mov
jo
inc
lret
inc
jb
inc
lock
in
xorl
cli
push
ja
std
sbb
clc
or
cmc
jmp
test
jecxz
in
mov
xor
gs
sahf
jb
lahf
mov
js
scas
push
pop
and
jnp
or
pop
repnz
inc
hlt
ret
jl
sub
dec
cmp
inc
iret
push
je
cmp
xor
fs
subb
mov
iret
scas
outsl
mov
cmpsb
fwait
and
xor
lcall
inc
sub
adc
subb
pop
in
push
fxrstor
stos
mov
imull
adc
ja
mov
test
test
fldt
mov
sbb
lock
inc
mov
or
xor
mov
popa
loopne
pop
pop
cmc
mov
shlb
les
loopne
xchg
inc
and
pop
pusha
cltd
mov
sub
das
popa
addr16
sbb
cmp
outsb
cmp
mov
add
dec
lods
test
dec
rcr
jb
sbb
jl
into
repnz
lock
sbb
dec
push
inc
push
pop
inc
xor
rcl
mov
adc
scas
sar
fcmovu
idiv
test
aas
adc
sbb
in
cwtl
pop
aaa
rcrb
push
jnp
sti
insl
data16
imul
imul
add
stc
jp
cltd
into
fnstsw
jmp
pushl
jbe
and
out
xchg
xor
icebp
fcomp
bound
lea
mov
paddw
mov
jecxz
xchg
xor
pop
insl
in
push
push
test
pop
mov
jl
call
sub
adc
and
mov
and
popa
pusha
hlt
inc
aad
push
sar
xchg
ds
rorb
and
repz
and
addb
jne
dec
test
fidivs
cmp
ja
fisubrl
mov
sub
xchg
pop
loopne
sbb
bound
jecxz
or
mov
and
or
add
push
lock
scas
int
push
jge
sub
aaa
insb
jl
jg
mov
cmp
sub
pop
clc
xchg
push
lcall
shll
enter
inc
inc
iret
addl
mov
cmp
xorb
cmp
cmp
sbb
xchg
pop
es
fistpll
cmp
cmc
mov
or
sub
dec
rcrb
xor
orl
call
mov
sbb
xchg
arpl
and
dec
push
out
sub
dec
out
imul
jb
je
dec
rcll
or
mov
loopne
in
and
out
cmpl
dec
dec
inc
test
loope
cmpsl
adc
data16
mov
dec
mov
xchg
hlt
iret
add
daa
adc
stos
dec
leave
xor
leave
sti
lea
sub
lret
js
and
popa
jecxz
pusha
cltd
sbb
rorl
arpl
jbe
xchg
aaa
mov
mov
mov
push
inc
fisubrs
stc
cld
fdivl
mov
outsb
mov
imul
inc
inc
cmpsb
pusha
mov
xchg
stos
jle
xor
mov
xchg
and
cwtl
cmp
jecxz
mov
das
dec
lahf
repz
clc
cltd
daa
jae
ds
mov
and
dec
out
dec
loop
pop
test
push
popl
popf
sahf
movsl
sahf
ficomps
mov
int3
or
iret
sbb
js
loop
adc
daa
pop
mov
daa
cmp
mov
pop
das
push
je
imul
cmp
repnz
dec
jmp
filds
mov
ss
scas
push
cmp
into
lods
mov
jl,pt
scas
or
fnstcw
xlat
es
scas
push
mov
pop
ss
xchg
jnp
inc
mov
sbb
loope
cmpsb
push
sar
dec
sub
movsl
stos
stos
jb
dec
int3
pushf
subl
xchg
dec
mov
shll
loope
or
mov
sbb
lret
lcall
mov
ftst
rolb
jg
xlat
or
push
clc
or
cli
ds
push
in
call
andb
sbb
dec
inc
fsts
fcmove
aas
mov
jecxz
mov
out
xchg
pusha
cltd
mov
insb
mov
add
mov
ret
jns
pop
mov
push
push
fdivrl
adc
push
nop
cmp
mov
out
inc
inc
cmp
popf
insb
sti
gs
cmovp
cmpsl
pop
mov
push
push
test
mov
into
cmp
dec
sbb
int3
jecxz
push
rorl
insb
cld
jg
push
mov
pop
insb
out
fcoml
mov
inc
lahf
test
into
stos
pop
mov
imul
insl
or
mov
pop
jle
sti
xchg
inc
aam
iret
push
push
add
iret
ds
cmp
cmp
lods
inc
daa
add
pop
and
movsl
xor
icebp
or
test
into
jne
sub
push
xor
adcw
das
lret
push
adc
jbe
mov
mov
loope
adc
xor
stos
sbb
stc
enter
mov
sbb
jo
xor
xchg
sub
loopne
and
xchg
lret
repz
jne
mov
jecxz
aas
shl
cmpsb
rorb
imul
repnz
ja
add
loopne
xchg
sbb
aaa
sahf
sub
in
or
or
test
dec
pop
lret
das
sarl
dec
add
xchg
scas
iret
fildl
jo
mov
cmp
mov
ficomps
cmp
adc
or
pop
das
stos
lods
jmp
jge
daa
icebp
dec
rcrb
call
ja
test
cmp
mov
fistl
mov
push
test
mov
es
add
add
xor
roll
push
or
dec
xchg
mov
inc
icebp
out
inc
int
add
lahf
sub
lret
incb
xor
push
jge
loopne
pop
dec
orl
in
pusha
pop
std
sarl
add
mull
pop
push
cli
sarb
lret
iret
es
xor
mov
inc
sub
inc
ja
jb
cmp
dec
lea
shl
jne
loope
xor
rol
inc
jle
mov
add
sbb
jno
adc
add
adc
mov
xor
push
jl
xor
xchg
dec
or
or
or
ret
pop
pop
data16
es
mov
jecxz
lods
hlt
add
mov
cmpsl
xor
jg
ret
sub
es
leave
out
add
and
test
mov
pop
lret
popa
sbb
pusha
insb
jecxz
aaa
and
sub
jae
dec
rorl
xor
dec
mov
cmp
jp
lock
scas
ret
push
lods
scas
and
pop
not
xchg
sbb
dec
adc
retw
sbb
adc
es
aas
jb
push
inc
jle
mov
pop
pop
imul
iret
lret
sub
cmp
cmpb
scas
ret
and
mov
pop
pop
ret
aam
pusha
xchg
call
xor
int3
adc
leave
xor
sub
jge
aaa
or
lock
pushf
cmpsb
and
pop
push
push
mov
sub
cmpsl
pop
jo
cmp
mov
jp
add
pop
dec
filds
stc
shll
jecxz
mov
in
ret
rorl
mov
aad
addr16
adcl
sti
sbb
shrb
enter
jb
mov
adc
adc
xchg
xchg
cmp
mov
je
mov
imul
std
pop
jbe
ret
rorl
insb
cmc
loopne
ja
clc
cld
mov
xor
and
mov
lock
jns
jo
idiv
mov
std
pop
push
inc
and
mov
push
rol
loop
xor
dec
pop
xor
xchg
cmp
out
outsb
mov
and
iret
cmp
push
lcall
xchg
cld
ret
sti
int
xlat
add
push
add
push
iret
test
loopne
adc
daa
fwait
xor
and
fisubrl
loope
xchg
pop
cmp
mov
in
int3
out
cmp
mov
push
hlt
mov
mov
pop
pop
pushf
subb
test
jbe
test
dec
xchg
lds
test
aad
cltd
jecxz
lea
jl
popa
mov
popf
mov
add
sub
in
rcrb
pusha
inc
mov
push
ret
add
in
iret
ret
sub
or
sub
sbb
insb
cwtl
mov
or
cld
mov
test
cld
push
in
int
repnz
out
int3
inc
nop
jg
rcrl
cmp
sarl
xchg
mov
mov
std
loope
pop
push
xchg
faddp
repnz
repnz
inc
shrl
mov
push
outsw
dec
mov
nop
xorb
scas
sahf
or
stos
loopne
les
inc
cltd
adc
mov
mov
int
in
jno
aas
movsb
dec
scas
ljmp
fsubr
in
lock
jg
in
xor
int3
pop
ds
or
pop
insl
mov
shll
lds
enter
iret
ds
pop
les
mov
je
push
mov
sti
xor
jo
pop
add
pop
aad
push
mov
fisttpl
mov
pop
ficompl
sbb
les
mov
jno
mov
ja
fnstenv
push
cmpsl
adc
dec
rol
mov
dec
mov
cmp
sub
mov
aam
test
mov
pop
sbb
push
dec
dec
pop
xchg
add
popa
sti
inc
stos
imul
sbb
xlat
and
popf
orl
lahf
mov
arpl
add
lret
ljmp
fwait
data16
cmpsb
fwait
mov
add
mov
je
adc
mov
out
cmpsb
and
xchg
notl
dec
negb
pop
mov
or
out
leave
ljmp
call
test
ficompl
jmp
pop
pop
lcall
bound
ret
icebp
or
lea
mov
test
scas
int3
sbb
lret
xchg
pop
hlt
pop
fidivs
fimull
mov
push
mov
push
fdivrl
in
test
xor
lea
and
or
out
and
xor
sbb
ja
mov
outsl
addr16
sahf
sub
cmp
lret
add
pusha
rclb
mov
lods
pop
or
ficompl
loop
xlat
mov
xor
push
js
repz
cld
mov
cmp
sub
xchg
lcall
sbb
adc
call
push
sub
mov
scas
add
inc
add
xor
jle
mov
mov
pop
cmp
sub
adc
sub
gs
rcrb
lods
in
push
addr16
sub
out
shlb
stos
repz
or
pop
or
int
lods
mov
sbb
mov
or
outsl
jmp
cmpps
je
scas
test
mov
lods
mov
mov
mov
push
cli
mov
dec
pusha
mov
adc
mov
sti
outsl
pop
mov
adc
sarl
xor
pop
enter
and
fnstsw
test
scas
int3
mov
mull
dec
into
hlt
rorl
out
dec
test
adc
xchg
fisubl
setae
mov
int
sbb
cmp
mov
xchg
sbb
xchg
ja
sahf
lret
jnp
dec
push
inc
pop
and
divl
repz
sbb
jge
xor
mov
lret
call
xchg
roll
testb
dec
add
lcall
hlt
xchg
xor
es
pop
in
in
std
pusha
iret
lock
fwait
and
fistl
push
inc
rorb
xor
ret
jp
leave
push
mov
push
pop
sub
in
add
push
xor
out
mov
xor
lods
fst
iret
mov
add
mov
fs
inc
ljmp
stos
pushf
mov
clc
jg
int3
fs
jg
cmpsl
out
dec
inc
mov
cmpsl
lret
inc
fidivs
jb
mov
aam
popa
sbb
inc
dec
or
cs
insb
stos
jns
movsb
negl
xlat
stc
and
adc
mov
stos
mov
push
call
enter
inc
aad
lahf
and
es
or
rolb
cmp
clc
xlat
and
pop
inc
dec
push
cmp
mov
sub
imul
xchg
push
fwait
ds
add
cld
pushf
pop
pop
xlat
je
dec
pushf
or
or
mov
rclb
jae
or
into
ljmp
xor
jno
pop
xchg
cmp
dec
xorl
int
movsl
mov
sbb
cmp
dec
pop
fbld
fiadds
sub
dec
adc
imul
das
xchg
add
jo
ror
movsb
inc
bound
je
xchg
add
jmp
inc
xchg
mov
pop
iret
test
push
adc
add
lret
outsb
stc
mov
out
pop
fsubs
sarl
lea
xchg
mov
mov
mov
int3
and
cmc
inc
cli
push
or
sbb
and
in
dec
sbb
fiadds
cmp
sbb
and
mov
mov
mov
xchg
push
ds
adc
sets
push
mov
je
stos
add
test
scas
clc
jmp
arpl
or
cmpsb
fcomps
cmpsb
dec
movsb
mov
or
sbb
mov
fists
outsb
mov
add
nop
adc
scas
push
jno
mov
mov
cmp
testb
aam
cmp
pushl
or
inc
popf
in
inc
fcomi
stos
fs
mov
inc
push
push
pop
xor
dec
lcall
jne
add
adc
xlat
shlb
in
stos
cmp
fdivs
xor
cmp
dec
aad
mov
pop
inc
or
pop
jecxz
sbb
push
icebp
lods
test
enter
divb
ret
cmp
sbbl
adc
mov
out
mov
insb
ret
rolb
mov
inc
adc
sub
jns
dec
push
sbb
ds
pop
cmp
lret
flds
das
je
insl
add
xchg
pop
mov
or
jb
and
dec
dec
mov
push
movl
mov
outsb
and
and
hlt
xchg
adc
ror
jg,pn
push
das
inc
mov
and
cmp
or
push
push
jl
fidivs
adc
pop
lretw
fildll
aam
add
pop
pushf
add
mov
sub
dec
xor
sarl
lds
rol
movsl
push
aas
sbb
mov
cmp
jbe
xchg
push
notl
and
lea
push
or
fisubs
aaa
jo
sub
push
jo
mov
mov
leave
pop
dec
push
in
scas
call
jbe
add
cmp
ret
mov
jbe
int3
pop
pop
test
jp
fbstp
mov
arpl
cmpsb
sub
cs
imul
hlt
ja
inc
mov
mov
adc
sub
and
cmpsb
jle
sti
pop
inc
arpl
out
fs
lods
negl
and
push
sti
rcrb
adc
adc
lret
lret
adc
dec
sub
outsb
adc
jnp
add
or
inc
push
cmp
leave
lcall
les
or
clc
lret
daa
sbb
dec
jb
hlt
ss
lret
dec
addr16
fbstp
mov
mov
xor
jb
fildll
das
pop
rcll
cld
imul
test
mov
scas
jb
pop
xchg
xor
or
dec
pop
es
pop
lods
add
loopne
and
mov
sub
and
gs
mov
push
loope
repz
subl
ja
mov
sub
sub
ljmp
push
fisttps
mov
fs
adc
insl
dec
imul
sbb
scas
or
clc
aas
sar
mov
jp
mov
pop
addr16
ds
xlat
rorl
xchg
mov
frstor
je
jecxz
lahf
in
sbb
imul
fimuls
pop
ds
cs
jle
outsb
sti
pop
lret
dec
fstpt
or
jnp
dec
into
pop
ds
cs
jle
outsb
sti
pop
lret
dec
fstpt
or
jnp
dec
dec
pop
ds
cs
jle
outsb
sti
pop
lret
mov
or
jnp
dec
into
pop
ds
adc
push
add
xor
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
sbbb
lret
mov
cmp
sub
sbb
or
jp
push
dec
jo
pusha
mov
mov
mov
fcomi
lret
xchg
cmp
sub
jp
or
jnp
imul
dec
pusha
mov
sbb
cld
fistpl
lret
clc
cmp
sub
outsl
outsb
push
sbb
add
jnp
and
lret
nop
stos
out
xlat
jo
lret
dec
and
clc
cmp
repnz
pusha
ja
dec
or
sarb
sbb
xchg
out
ljmp
push
mov
mov
inc
pop
xchg
xchg
adcl
in
ds
stos
test
popa
clc
push
push
mov
test
hlt
lods
lds
inc
fdivs
stos
nop
mov
rol
test
or
pop
sub
in
push
sbb
cmp
inc
test
jecxz
and
lret
loopne
inc
pop
adc
or
sub
add
popa
mov
inc
push
stos
cmp
sbb
or
push
sqrtps
pop
jo
in
nop
stos
jo
xor
stos
sti
shr
rcr
lret
pusha
cmp
or
jl
mov
iret
ret
div
lds
pushf
cltd
scas
test
cltd
inc
je
outsl
dec
daa
xor
xor
add
aad
shr
ret
test
sahf
mov
imul
inc
xor
sbb
adc
movb
mov
lock
loopne
adc
add
xor
and
imul
dec
pusha
mov
mov
mov
fcomi
lret
loopne
adc
add
xor
and
imul
dec
pusha
mov
adc
mov
scas
aas
stos
sub
jb
cwtl
push
push
mov
cmp
inc
in
outsb
lcall
cmp
rorl
xchg
inc
push
cwtl
test
aad
dec
fidivs
outsb
sub
pusha
inc
fsubs
jmp
xor
jge
mov
hlt
mov
jecxz
jbe
pop
dec
or
lret
mov
lods
cmp
xor
jns
cmp
adc
xor
inc
inc
outsb
sbb
cmp
nop
xor
or
scas
insb
adcl
push
and
inc
adc
rorl
stos
jp
aad
sbb
mov
xor
xchg
popf
push
pop
xchg
cmp
loopne
call
mov
in
loop
in
test
push
add
orl
adc
cs
pushf
push
adc
addr16
stc
mov
sarl
sbb
pop
and
mov
pop
inc
sar
mov
sub
xlat
cmp
loopne
mov
js
fld
lret
fisubrl
sub
fists
lds
and
cmp
int3
sarl
sarb
xlat
test
xchg
int
pushl
sbb
js
arpl
add
lcall
cmpsl
out
xchg
mov
ret
xorb
das
loope
decl
lock
or
or
popf
dec
pop
in
dec
adc
cmovbe
jbe
push
out
subl
cmp
shl
pop
leave
adc
dec
je
pop
inc
fs
rorl
push
cs
loopne
add
ret
mov
jns
fnsave
jmp
add
or
dec
adc
push
imul
mov
jle
push
pop
sub
dec
fldcw
shld
pop
test
aad
gs
popa
outsl
das
and
popa
xchg
sbb
mov
insl
jbe
sbb
xor
bsr
push
jns
pop
int3
push
and
jle
mov
mov
stos
cmp
int3
out
cmpsb
ret
inc
sbb
sti
sbb
inc
lahf
cmp
lret
sar
xchg
or
inc
inc
and
jge
mov
lahf
jnp
imul
inc
nop
mov
shl
push
mov
subb
sbb
test
pop
ljmp
test
mov
fdiv
pop
sti
jl
xchg
jl
movsl
xchg
mov
js
cmp
inc
dec
stos
and
push
mov
push
lea
inc
cmp
rolb
mov
das
cmp
push
nop
mov
jmp
sub
lods
test
sub
daa
xchg
cmp
repz
adc
dec
inc
and
enter
shll
add
lret
dec
daa
sbb
mov
jb
xchg
add
mov
mov
cmp
ficoml
dec
imul
addl
andb
push
jne
lods
sbb
jnp
clc
sbbl
and
arpl
cmp
loop
push
scas
and
sti
pushf
mov
pop
fs
dec
mov
gs
dec
imul
repnz
lea
mov
sbb
ljmp
pop
decl
sbb
xchg
and
aam
push
shll
in
int
out
ja
fneni(8087
pushf
cmpsb
cs
push
outsl
test
in
push
lret
adc
add
push
sub
fstps
add
inc
aas
jb
ds
mov
fcompl
jecxz
dec
lods
enter
lcall
loop
mov
out
dec
int
call
mov
add
mov
lods
mov
xor
pop
in
repz
mov
cwtl
push
in
lret
mov
jmp
gs
adc
cmp
psrad
cld
jne
inc
and
xor
cmpsb
push
outsl
mov
clc
mov
cs
sahf
lret
aaa
bound
mov
mov
cmp
mov
insl
int
push
jecxz
sahf
inc
and
test
cmp
jmp
xorb
dec
ja
adc
sub
fsubs
add
clc
push
push
ret
das
add
pop
pop
mov
cwtl
iret
sub
cld
stos
out
ja
fidivrl
js
adc
lods
es
pop
test
cli
repz
add
enter
dec
aam
xchg
xchg
ja
in
jae
push
cmp
ljmp
scas
mov
mov
xor
ds
repnz
sub
xor
into
or
xchg
and
mov
jnp
and
in
aas
dec
xchg
push
and
out
adc
test
jmp
lahf
cltd
mov
adc
sub
cli
add
xchg
mov
push
into
int3
das
lcall
cmp
fidivrl
fwait
repnz
xchg
xchg
push
mov
push
pop
mov
sub
pcmpgtb
dec
mov
or
xor
loop
push
inc
pop
jb
xchg
lods
fists
xchg
leave
fisubrl
and
xor
bound
jl
shll
in
lds
int3
dec
xchg
pop
push
imull
daa
test
push
cwtl
pop
js
xorl
int
nop
aaa
jo
insb
cmpsb
cmp
mov
pop
mov
push
add
les
mov
test
push
in
test
push
cmp
ret
dec
in
sbb
adc
mov
imul
push
mov
mov
dec
out
cmpb
mov
inc
js
jbe
sbb
sbb
cmp
mov
sub
xor
jmp
test
mov
out
jne
xor
andb
xor
pop
and
or
pusha
dec
cltd
sar
mov
out
in
jmp
out
or
addr16
xchg
rorl
pop
je
ret
jl
push
fs
jmp
scas
mov
iret
push
mov
int3
xor
or
and
test
jmp
inc
faddl
daa
jns
loope
fisubl
mov
add
daa
jp
dec
pop
cmc
popf
das
adc
ljmp
jle
xor
lret
mov
int3
xorl
inc
leave
aam
sbb
jne
pop
insb
loop
lahf
dec
adc
pop
push
jge
cmp
sbb
lcall
mov
add
mov
jle
negl
mov
adc
repnz
dec
bound
aad
cmp
push
pop
inc
aaa
les
lcall
add
cmp
out
loopne
xchg
push
lds
xor
loopne
mov
push
mov
out
xchg
cmp
jae
mov
pop
daa
es
in
push
mov
hlt
or
lret
int3
out
mov
ljmp
bound
sub
sbb
xor
fs
jnp
nop
cmpsb
popa
mov
arpl
push
push
loop
int
pop
stc
dec
dec
stc
out
ljmp
popa
dec
mov
inc
mov
rcl
adcb
inc
xchg
loop
dec
push
or
xchg
mov
or
outsb
pop
popa
jb
scas
lahf
adc
sbb
adc
add
jo
or
jp
cmpb
arpl
fsubrl
xor
or
ljmp
mov
jp
jbe
addr16
mov
sub
mov
and
add
sbb
and
dec
arpl
pop
mov
push
les
jno
fnstenv
sbb
popf
scas
ret
cltd
sbb
mov
pop
or
jno
mov
sub
pop
ja
xchg
xchg
fdivrl
into
push
and
sbbl
or
ficomps
pop
jecxz
mov
xchg
mov
imul
jge
pop
jb
cmp
jns
outsl
inc
and
das
jbe
fisubl
push
out
and
cwtl
xlat
and
mov
cmc
xchg
mov
push
lret
inc
mov
sub
fistpll
mov
and
cli
in
add
stos
jb
push
cmp
mov
in
xorl
out
test
stos
inc
jns
cmp
lods
hlt
push
push
cmpsb
clc
cwtl
sbb
lret
aas
xchg
mov
inc
idiv
rorb
test
out
pop
mov
xlat
jb
call
shlb
sbb
out
inc
arpl
cmp
bound
filds
or
test
cmp
xor
mov
out
jbe
fnsave
dec
sub
cmp
icebp
out
aad
lods
add
mov
push
xchg
jns
push
shlb
mov
mov
lods
cs
sub
nop
sub
jb
jbe
negl
jae
push
jne
test
push
stc
pop
or
lock
addr16
fwait
insb
in
arpl
jbe
xchg
sub
push
scas
pop
adc
adc
fldcw
push
jle
cmp
popf
enter
push
cmp
lock
jne
mov
jns
iret
jbe
dec
leave
cmpsb
jo
push
shrl
add
popa
outsl
in
push
addr16
addr16
lahf
push
lods
scas
cwtl
sub
adc
dec
dec
incl
pop
adcb
xor
nop
xchg
lea
in
inc
loop
leave
fabs
mov
cmpb
adc
stc
mov
xchg
pop
mov
jo
mov
jnp
sub
xlat
out
jmp
filds
mov
ret
mov
popf
sub
push
fildll
or
jb
jmp
push
cli
sbb
jl
in
aad
into
mov
in
les
mov
flds
or
adc
jno
aam
inc
das
leave
mov
insl
out
xchg
call
fldenv
ss
enter
movsb
or
sahf
mov
mov
ljmp
sarb
add
adc
sub
xchg
mov
or
cmp
rol
mov
push
pop
and
mulb
mov
clc
push
inc
sbb
iret
sahf
out
lods
push
fwait
jmp
lods
or
mov
mov
lret
pop
xchg
out
push
out
stos
mov
sbb
sbb
orps
jle
xchg
mov
sti
or
shl
mov
cltd
scas
scas
enter
hlt
mov
mov
out
adc
mov
popa
lahf
push
and
fs
fdivs
ja
pop
mov
test
pusha
dec
xchg
mov
popa
sahf
xor
push
xchg
mov
in
fldcw
lret
pop
insb
gs
mov
stos
inc
sbbl
les
int
imul
outsb
adc
movsl
clc
and
adc
mov
jp
xchg
js
insb
clc
mov
test
nop
scas
mov
jns
jne
mov
nop
rorl
cwtl
adc
dec
xor
xchg
scas
dec
stc
aad
cld
pop
xchg
inc
addr16
mov
in
test
fisttps
cltd
stos
icebp
sub
xlat
push
ja
sub
mov
in
xor
inc
xchg
cmpl
add
add
cmp
rcrb
shll
push
shrb
mov
gs
fdivp
or
sbb
test
xchg
sar
sbb
xor
data16
lret
daa
xorl
dec
lods
jbe
jae
popf
imul
stc
leave
xchg
test
jbe
mov
inc
aas
jae
lds
daa
sbb
fnstenv
or
dec
int
pop
pop
and
movsl
jno
adc
or
inc
xlat
fabs
dec
enter
call
mov
push
loopne
jno
mov
sbbb
negb
icebp
in
xor
mov
lock
aad
imul
mov
scas
scas
sbb
xchg
dec
popf
xor
pop
incl
cmpsb
ret
and
mov
push
mov
inc
sti
xchg
mov
call
jns
mov
arpl
xlat
mov
jns
jmp
jle
int3
repz
cmpsl
andl
sahf
xor
rorb
xor
xchg
push
and
push
mov
push
fdivs
int3
jp
leave
movsl
xchg
loopne
push
sub
adc
xchg
movsb
mov
ds
in
test
inc
iret
ljmp
bound
bound
mov
cld
xor
int3
cmp
dec
mov
xchg
lea
xorl
adc
push
int
pop
cld
jns
ljmp
fldcw
shll
ror
push
push
shlb
mov
xchg
pop
sbb
jae
out
movb
push
test
lds
pop
scas
mov
loop
mov
xchg
mov
ja
and
push
lock
adc
aad
lcall
outsb
dec
sub
jl
mov
mov
and
xchg
mov
das
inc
sbb
push
push
dec
cmp
pop
fisttpll
pop
enter
enter
out
inc
out
dec
xor
int
adc
das
mov
mov
inc
jge
aad
push
je
jnp
in
mov
inc
and
push
push
ja
cwtl
push
sti
rorl
jge
xchg
in
mov
inc
jl
cli
mov
in
cmp
cmp
xchg
fcompl
mov
dec
pop
dec
ds
push
lds
mov
lea
mov
hlt
sub
lock
xor
pop
iret
adc
out
sub
repz
cli
xlat
add
fwait
sarl
push
aam
sub
icebp
fcomi
test
jbe
imul
mov
mov
push
ds
mov
popa
xorb
mov
fdivl
dec
mov
cld
stos
mov
fisubs
stc
sub
sub
pop
rol
cmc
das
jno
adc
mov
in
int3
lock
js
inc
add
mov
pop
mov
cmp
jae
jo
xchg
mov
shlb
pop
cmp
jo
or
add
xor
data16
aad
test
pop
sub
or
loopne
stos
push
sbb
adcb
rcll
jmp
add
pusha
cmp
add
add
jo
xlat
push
lds
addr16
imul
sti
jp
fwait
adc
mov
jo
mov
cs
in
and
ljmp
push
mov
jg
cltd
icebp
dec
daa
pop
mov
call
xchg
mov
sbb
jmp
dec
test
movsl
lods
pushf
loope
inc
cmpsl
jb
shll
mov
sbb
push
imul
xchg
xchg
xor
xchg
cmp
iret
pop
cmp
xlat
xor
push
std
dec
cmp
jl
mov
lret
je
adc
dec
xchg
add
popf
push
xchg
testb
and
mov
sbb
xchg
push
xchg
in
xchg
popa
mov
cmpl
scas
adc
mov
or
fmuls
lret
enter
jne
pusha
xchg
int3
in
pop
inc
inc
push
push
movsb
and
jno
lret
push
dec
cmpsl
out
jo
adc
shlb
popf
pop
mov
or
push
std
add
iret
into
aam
xchg
inc
sbb
call
int
loopne
movsb
cwtl
out
mov
inc
add
lret
add
jno
pop
xlat
jno
inc
cltd
fdivrs
gs
daa
pusha
xor
mov
ret
inc
repz
cmp
adcl
in
insb
and
or
cmp
imul
push
cs
sub
icebp
insl
sbb
lcall
loope
sbb
fs
std
sbb
mov
jge
sti
mov
mov
push
adc
in
pop
jp
cmpsl
mov
lahf
or
jo
out
pusha
hlt
add
lahf
je
imull
or
test
in
adc
xor
push
leave
mov
push
cmpsl
mov
xor
pusha
sahf
mov
push
mov
repz
cmp
aaa
sub
pop
sub
mov
inc
js
pop
push
inc
push
dec
gs
movsb
jns
out
push
in
rclb
pop
xorl
push
mov
inc
mov
mov
dec
leave
sub
cmp
push
add
sbb
inc
popf
xchg
jecxz
sbb
xor
inc
jmp
push
push
movsl
leave
mov
mov
aad
lahf
ja
jl
in
ss
jbe
pusha
mov
jp
leave
cli
and
cmpsl
xchg
test
dec
sbb
imul
pop
adc
jge
pusha
pop
mov
fwait
and
push
bound
mov
mov
std
js
cmpsb
push
jg
xor
sbb
push
jb
enter
dec
flds
adc
mov
jbe
pop
adc
hlt
popa
add
xchg
insb
popa
aaa
push
int3
out
outsl
stos
or
xlat
test
cwtl
mov
sbb
das
pop
aas
cmp
loop
fcmovnu
xor
mov
fildll
xor
call
pusha
cmpsl
cmpsl
es
pop
push
xor
pop
xor
and
cs
stos
cs
sub
data16
stc
sub
jae
les
add
mov
sub
insb
xor
js
incl
popa
xlat
xor
orb
std
cmp
adc
aam
stc
mov
sub
shlb
aaa
pop
les
movsb
dec
hlt
into
aam
pop
iret
push
jb
inc
aam
fs
loop
sub
out
mov
arpl
xchg
in
jno
test
xor
dec
cmpsl
mov
add
sub
pop
or
cmp
aam
xchg
mov
jp
pop
daa
push
jle
fldenv
popf
fimuls
in
sub
or
hlt
je
les
adc
mov
cmp
mov
inc
imul
adcl
pop
out
inc
imul
pop
jo
or
enter
loope
add
je
mov
xchg
aaa
roll
or
mov
jbe
ss
fs
nop
xor
or
push
subps
std
rorb
out
aam
cmp
or
fbld
out
mov
adc
and
push
insb
std
je
jno
call
sbb
add
pop
out
ds
stc
in
mov
push
mov
sub
cld
or
or
testl
and
cmp
popa
rcll
push
xchg
sub
and
test
jns
imull
int
cmp
out
das
lds
fstps
push
sub
sti
add
jbe
out
pop
dec
sbb
scas
rcrb
sub
xchg
push
push
stos
push
nop
mov
and
fidivl
je
ds
loop
and
hlt
jb
push
dec
xor
aas
add
cld
and
jmp
lods
call
out
xchg
mov
add
mov
pop
insl
test
rcll
add
cltd
dec
mov
push
stos
jmp
sbb
sbb
addl
int3
add
add
gs
shlb
and
pushl
xor
shrb
push
and
or
leave
out
jg
ss
and
mov
testb
mov
inc
inc
mov
clc
pop
jle
sbbb
jae
cmp
stos
sub
mov
xor
mov
fdivs
mov
and
xchg
mov
fwait
mov
inc
into
shl
rcr
or
sbb
in
add
mov
or
dec
lods
in
js
rorl
ret
or
lret
mov
jge
mov
in
cmp
fcomps
out
adc
icebp
mov
mov
mov
mov
sarl
xor
push
xchg
xor
clc
dec
aas
outsb
adc
jmp
andl
test
in
lahf
inc
shlb
inc
cmp
add
pop
lock
cmc
push
inc
inc
push
cwtl
push
lret
enter
mov
cs
or
addr16
cmp
fcomps
lea
inc
aam
adc
pop
pop
dec
fcoml
cmc
lret
nop
popf
xor
cmp
hlt
stos
cmp
or
popa
loopne
sti
or
jmp
adc
stc
in
xchg
dec
lds
inc
adc
push
fimull
jo
push
cld
mov
and
inc
or
and
test
jne
sti
test
repz
shlb
push
push
std
add
fdiv
cs
icebp
mov
inc
mov
loop
cmp
call
cli
addr16
jo
orps
add
jg
mov
push
insl
push
fsubl
stc
std
out
and
ret
push
sbb
dec
iret
add
lret
jg
jmp
les
fistl
js
nop
pop
call
outsb
movsl
push
cli
fidivrl
repnz
stos
lahf
repnz
test
hlt
lcall
mov
or
outsl
les
pushf
mov
aaa
ficomps
movsl
add
jge
lahf
test
jecxz
xchg
jge
mov
push
dec
rclb
mov
gs
rolb
nop
enter
sbb
cltd
lret
lcall
push
testl
xchg
inc
imul
imul
jl
out
rcl
mov
add
pop
jecxz
and
shrl
pop
popa
orl
dec
ljmp
inc
je
jp
and
int3
rorb
orb
sub
cmpsb
lcall
xchg
data16
mov
fcomi
lret
loopne
adc
add
xor
and
imul
dec
pusha
mov
mov
mov
fcomi
lret
loopne
adc
add
xor
and
imul
dec
pusha
mov
enter
shr
push
cmp
sub
sbb
or
jnp
imul
dec
pusha
mov
mov
mov
loopne
out
sub
or
jecxz
movsb
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
sbb
or
jne
sbb
les
mov
fwait
jns
insl
sti
or
lret
cmp
sbb
or
jnp
imul
inc
stos
pop
out
insl
mov
jg
pop
fldt
sub
sbb
or
jnp
imul
dec
stos
jle
adc
or
pop
movsl
push
jb
sub
cmp
pop
rorb
push
jns
jno
push
imul
xchg
push
rorb
push
out
in
lods
push
std
out
outsb
push
push
mov
mov
add
incb
fnsave
mov
fiadds
mov
sahf
movsl
loopne
dec
rcrl
loope
pop
test
movsb
mov
xchg
sub
insl
adc
lea
lods
mov
lock
ror
sub
jno
xor
pop
movsl
dec
aad
mov
mov
jbe
jmp
mov
pop
adc
stos
cmp
shll
xchg
into
add
ljmp
fisubrl
int
hlt
or
jnp
imul
dec
stos
inc
fwait
je
fs
adc
lret
cmp
int
scas
jle
outsb
cwtl
pop
and
rorl
cli
and
sbb
inc
lahf
push
cmp
xchg
cmp
fidivrs
test
jg
jge
sbb
push
int
fnsave
or
pop
lods
dec
mov
fwait
insl
mov
or
lret
cmp
sbb
or
jnp
imul
dec
stos
pop
fwait
insl
mov
or
lret
cmp
mov
push
movl
rcl
fsubl
jb
pop
ficomps
pusha
push
movsl
cwtl
bound
add
push
roll
mov
gs
push
ret
bound
das
aas
das
adc
jge
pop
icebp
es
enter
lahf
mov
cs
jno
cli
out
daa
frstor
jp
xchg
sbb
or
popa
js
movsl
sub
sbb
sub
inc
std
mov
and
mov
into
outsl
das
cltd
lcall
scas
xchg
addr16
inc
mov
xchg
insb
add
aad
ljmp
pop
cmp
rcr
stos
jmp
loopne
sbbl
xor
or
fidivl
fsubl
and
shlb
mov
arpl
adc
les
cmp
inc
xor
dec
shlb
out
inc
jge
lahf
inc
clc
pop
je
xlat
bound
data16
iret
jnp
inc
rcrb
pop
xlat
out
das
or
mov
roll
test
mov
call
sbb
outsb
imul
testb
adc
int3
inc
adc
fwait
mov
pop
xchg
out
test
test
test
add
inc
xlat
loopne
icebp
loopne
cld
aad
pushw
aam
or
sub
mov
movsb
pop
fs
push
lods
sub
sub
adc
dec
loope
push
lods
mov
pop
scas
mov
arpl
insl
lret
push
idivl
mov
lret
mov
pop
testb
loopne
xlat
cli
imul
loopne
inc
and
stc
adc
loope
mov
ss
xchg
subb
push
dec
jecxz
aam
xchg
addl
out
fbstp
lret
enter
xchg
add
adc
xchg
ja
mov
lea
dec
je
push
mov
xchg
pushl
ret
dec
ficomps
pop
into
test
mov
xchg
test
xchg
mov
insb
cwtl
pop
mov
icebp
hlt
jl
sahf
sub
adc
nop
lea
xchg
in
push
out
shlb
gs
jne
push
mull
jnp
cmp
pushf
lcall
cmp
aam
sbb
or
rorb
mov
adc
daa
inc
aam
inc
insl
mov
ljmp
jb
inc
rclb
push
js
call
sub
jmp
fisubrl
das
dec
inc
cmp
adc
cmp
test
int3
out
or
in
test
shlb
push
sahf
add
leave
or
pop
mov
mov
lds
push
lods
scas
pop
xor
sbb
pop
and
and
sti
pop
or
mov
fwait
push
bound
add
imul
inc
push
cmp
or
adcb
jge
adc
fwait
adc
gs
mov
insl
mov
or
lock
push
or
fldl
leave
pop
fdivrl
aas
jo
dec
or
out
popf
js
inc
lahf
movsb
jmp
mov
push
stos
mov
out
dec
fbld
stc
mov
movsb
insl
loopne
jge
loop
mov
sbb
sbb
lret
dec
jne
adc
cmp
sub
jmp
jmp
mov
or
jg
repz
mov
in
fwait
dec
lcall
push
adc
aad
mov
leave
and
lods
pop
cmp
push
sahf
jno
mov
inc
in
mov
ficoml
mov
jbe
and
or
mov
push
xchg
jecxz
das
and
xchg
cmp
mov
mov
int3
cmp
sbb
xchg
in
mov
and
cmp
test
stos
jg
nop
mov
and
popf
sub
push
mov
jnp
xchg
dec
or
aaa
lds
cmp
ror
push
jmp
stc
jle
push
pop
stc
jb
pushf
pop
jne
lcall
repz
loop
imul
insl
xor
sbb
or
cmp
pop
adcb
mov
cmp
cmp
push
clc
outsl
rorl
jg
cli
xchg
dec
mov
insl
or
lcall
cld
insb
dec
and
xchg
in
mov
out
or
movsl
ret
jbe
mov
movsb
mul
mov
mov
jno
cmpsb
sbb
fldl
mov
jl
into
ficoms
and
jnp
lahf
aas
sbb
hlt
sbb
sahf
jno
andl
stc
dec
imul
inc
sti
sbb
mov
loop
in
fdiv
and
fstpl
push
sub
movsb
sub
jnp
mov
sbb
mov
cli
test
stos
fldcw
mov
dec
ret
pusha
mov
cmp
and
push
pop
outsl
sub
les
or
jno
daa
ljmp
sub
cmp
roll
lods
cwtl
aam
sbb
push
pusha
mov
out
scas
out
dec
push
or
or
push
aas
inc
mov
int3
dec
lock
pop
sub
and
in
lds
add
call
mov
sbb
dec
or
cltd
dec
ret
ret
jmp
fldenv
jnp
lods
popa
scas
out
das
lods
mov
in
outsl
fwait
sbb
inc
push
pop
fcomps
pushl
clc
mov
dec
test
scas
or
mov
adc
pop
call
scas
fcomps
mov
iret
leave
lods
mov
pop
sahf
inc
into
fsubrs
pop
loope
xchg
sub
add
xchg
sbb
in
mov
leave
cmp
insl
jnp
loope
test
mov
notl
loope
dec
mov
pop
jae
pop
pmaxub
mov
xchg
add
call
icebp
cs
or
cmp
sbb
add
sub
or
pushf
mov
outsb
add
and
push
nop
sbbl
mov
add
sub
arpl
push
andb
pop
mov
in
dec
fldl
cwtl
mov
pop
xchg
mov
loop
mov
xor
test
pop
jle
cmc
push
dec
les
cmpsb
sahf
mov
push
add
xlat
stos
hlt
leave
jp
jbe
cmc
ret
xchg
add
add
dec
xor
data16
imul
mov
dec
mov
cli
mov
ljmp
sbb
stos
shrl
in
aaa
cmpsl
insb
int3
inc
xchg
or
adc
lds
push
insb
std
push
cmp
clc
jb
mov
rorb
mov
jmp
dec
adc
xchg
fwait
js
mov
sbb
cmpsb
push
adc
ss
and
pushf
and
pop
pushf
sti
std
fs
jle
test
mov
je
xor
sub
pusha
or
jno
lea
dec
mov
pushf
pop
xchg
insb
movhps
dec
jo
push
leave
mov
stos
inc
fs
in
push
aaa
mov
adc
mov
outsb
loop
fldl
and
in
or
rolb
cwtl
imul
inc
shrb
push
ror
test
iret
insl
xchg
xchg
out
adc
out
imul
int3
imulb
mov
add
aam
add
stos
daa
sub
testb
popf
cli
mov
iret
lods
cmpl
stos
fstp
lret
xrelease
sti
cmc
xchg
nop
jns
adc
pop
insl
adc
in
sbb
jge
xchg
movsb
popa
int3
sti
cld
pop
test
adc
fildll
clc
adc
mov
test
xor
cmp
int3
imul
add
shl
jmp
jl
add
push
and
push
xlat
jo
pop
or
test
mov
mov
test
jp
movsb
int
adc
jb
out
jno
fists
nop
cs
rcll
pop
das
out
std
xchg
push
inc
xchg
out
fnstsw
ja
shrb
xor
push
sub
pop
lods
out
xor
repnz
cld
bound
fiaddl
jge
nop
jle
xchg
enter
dec
sbb
aam
or
dec
enter
popa
push
add
inc
jbe
ljmp
add
pop
pop
jg
jle
sahf
int3
lret
push
and
add
mov
cmc
add
nop
bound
or
dec
mov
pop
sub
pop
ret
mov
scas
jne
pop
std
jp
pop
mov
sti
testb
aaa
stos
xor
sti
cli
jecxz
mov
xchg
add
push
scas
sarl
arpl
mov
int
cmp
push
fadds
cmpb
and
ljmp
mov
sub
mov
test
push
or
push
cs
inc
adc
push
cs
mov
out
rsqrtps
inc
or
out
roll
mov
in
out
add
xchg
fcoms
daa
push
mov
das
inc
dec
and
mov
std
mov
mov
sbb
aas
adc
in
stc
iret
dec
and
into
xchg
add
sub
dec
pop
mov
insl
pop
bound
fiadds
mov
das
div
loopne
mov
imull
cmp
sbb
sub
sub
or
sub
dec
adc
adc
or
cmc
pop
cmp
test
mov
push
cmp
movsb
sub
fcompl
sahf
and
ja
mov
sbb
mov
jae
and
outsl
repnz
dec
xor
push
sub
xorb
jmp
mov
cmp
adc
lds
push
xchg
stos
lods
sahf
sub
je
lock
faddl
fbld
lds
out
je
jne
add
xor
repnz
or
add
sub
adc
loope
daa
lahf
mov
xchg
dec
sti
stos
imul
popa
jle
lea
into
mov
stc
in
fmuls
xlat
lcall
fdivp
adc
sahf
sbb
bound
pop
pop
sti
call
lahf
loope
enter
imul
dec
xchg
pop
xchg
in
sbb
stos
xor
jmp
mov
iret
mov
shlb
push
and
and
dec
mov
stc
popf
xchg
push
cmp
lea
pop
mov
jbe
out
je
lea
or
iret
cltd
push
xchg
loope
call
dec
jno
ret
insb
lcall
cmp
or
je
xchg
stos
pop
clc
mov
add
xlat
mov
inc
sti
sub
dec
hlt
icebp
leave
cwtl
fidivrs
pop
js
push
inc
add
negl
add
and
inc
push
mov
push
icebp
jbe
test
bound
pop
stos
inc
pop
xchg
xor
pop
lods
sub
and
mov
test
into
jp
shl
mov
lret
push
fisubl
lahf
pushf
gs
dec
dec
out
jecxz
inc
ficoml
jo
loop
xchg
scas
or
mul
mov
ljmp
pop
call
ds
mov
mov
aad
repz
pop
mov
jb
add
test
mov
outsb
inc
push
mov
or
daa
and
inc
jne
pop
icebp
out
push
shlb
sbb
ljmp
subb
mov
daa
mov
or
pop
lret
movsb
push
shl
and
xlat
push
cmpsl
adc
cmpsb
cmpl
inc
filds
push
mov
jp
pop
xchg
and
mov
add
xchg
xlat
push
cmp
mov
fwait
xchg
dec
aad
pop
xchg
mov
lcall
xor
rcl
sub
cs
in
mov
data16
ja
fstps
mov
dec
xchg
jno
pop
leave
cmp
jmp
or
je
fidivl
xchg
mov
mov
jno
loope
mov
dec
call
mov
fwait
xor
popa
shr
add
dec
lcall
or
ljmp
cmp
clc
dec
fadd
adc
sub
add
clc
mov
sbb
loop
mov
xchg
mov
xor
movsb
adc
das
in
aas
add
jge,pn
push
nop
fwait
push
dec
mov
sub
xor
icebp
cmp
sub
mov
and
jl
pop
cmpl
inc
jle
rcl
test
aad
pop
xchg
subb
into
dec
push
cmp
pop
fnstcw
stos
push
cmpl
insb
hlt
add
adc
test
addl
pop
out
jecxz
enter
add
ficoml
dec
rcr
xor
imul
jae
mov
lods
xor
je
movsl
mov
imul
add
or
dec
jns
in
jb
popa
cmpsb
insb
stc
or
adc
lea
pop
jne
sbb
or
stos
cmc
mov
aas
fst
mov
loopne
mov
out
shll
sbb
popf
cli
icebp
mov
pop
sub
fiaddl
loope
lock
mov
pop
out
cmp
fs
jne
jae
mov
shlb
sarl
leave
bound
jmp
pop
cmp
mov
test
mov
mov
inc
lods
dec
xor
nop
mov
lock
sbb
rol
sbb
mov
mov
jne
mov
mov
flds
inc
pop
out
sbb
cmp
int3
xchg
fcmove
and
mov
xchg
outsl
mov
mov
push
fwait
push
and
jg
fld1
addr16
fstl
push
or
imul
inc
rcll
ds
jb
jge
mov
sbb
movsl
clc
dec
out
loop
inc
push
shlb
add
sub
xchg
xchg
scas
dec
mov
je
mov
and
adc
test
hlt
mov
stc
lods
mov
xor
call
or
icebp
mov
sub
pop
xchg
xchg
cmp
arpl
mov
inc
xor
rol
push
popf
sub
jne
jg
add
inc
cs
das
sub
dec
je
test
add
lock
mov
bound
sub
jp
xchg
imul
cmpsl
nop
out
jnp
pop
mov
mov
mull
xchg
ljmp
cld
enter
rclb
push
cmp
sbb
cmc
cbtw
ficomps
inc
cltd
fdivrl
outsb
lret
add
add
add
xchg
iret
dec
push
dec
lock
pop
aad
mov
enter
sbb
and
inc
push
stos
mov
cmp
sub
clc
mov
fwait
mov
mov
pop
or
into
sbb
dec
movsl
repz
fisubrs
push
mov
sub
rol
sti
gs
popf
push
shlb
fnstcw
insb
or
jl
and
mov
jg
les
add
mov
nop
mov
xor
mov
mov
or
enter
xor
xor
clc
sbb
aas
or
nop
xchg
mov
adc
xor
adc
sbb
in
sbb
call
add
inc
xor
add
orl
push
cld
mov
sbb
sahf
inc
add
shl
mov
push
mov
out
dec
inc
sbb
rcl
mov
test
xorb
fwait
mov
sbb
pop
sub
fucomip
pop
xlat
jbe
out
jl
inc
sarb
cmp
call
sbb
into
in
add
addl
xor
cs
sub
xor
ret
xor
inc
inc
add
push
mov
dec
xor
pop
clc
xchg
inc
insb
test
dec
xchg
test
and
int
lret
mov
sarl
lods
dec
sbb
jl
leave
cmpsb
ljmp
out
inc
adc
jno
xchg
push
sti
leave
sbb
stos
push
movb
mov
shll
xchg
loope
in
imul
jbe
orb
inc
xor
mov
xchg
adc
lea
push
pop
ljmp
cmc
and
add
fcompp
test
fdivrs
lret
xchg
fdiv
add
in
fildl
insl
xchg
mov
push
rcll
ds
jb
xchg
jge
mov
ja
sub
mov
int
in
add
lahf
push
mov
jle
ret
cmp
sar
sti
mov
nop
jae
jb
aaa
and
arpl
mov
or
enter
cmpsl
push
aam
call
lds
fistpll
stos
xor
dec
mov
test
ror
fcmovne
add
add
addr16
sbb
jae
inc
jl
lret
rcrb
int3
lret
mov
pop
pop
mov
inc
out
repz
je
mov
pop
jle
xchg
mov
mov
jge
pop
push
cmp
cltd
les
add
sbb
cmc
out
pop
test
outsl
dec
mov
push
cmp
add
push
dec
xchg
xchg
sahf
out
movsb
fiadds
imul
add
inc
aam
cs
outsl
lea
mov
outsl
xchg
rclb
cmp
std
test
cmp
sarb
jns
in
pop
rcrl
mov
fsubs
loop
movb
or
cmp
stos
inc
test
enter
aas
pop
jns
add
sub
mov
js
add
call
sbb
sub
fstp
ja
or
repnz
sub
in
dec
xor
jno
add
sbb
mov
into
add
dec
imul
adc
mov
cli
imulb
jb
push
cmp
sbb
mov
pop
mov
adcl
pop
push
mov
jb
repz
xchg
pop
fs
ret
lret
push
sub
out
jbe
std
mov
and
out
call
sub
jecxz
dec
pop
test
mov
jmp
daa
mov
push
jecxz
dec
mov
inc
add
push
iret
add
in
sub
aaa
stos
out
cmp
fcomip
xor
or
loop
scas
sbb
or
cmpsl
lock
xchg
push
dec
mov
cmp
push
je
into
and
lea
iret
mov
cmpl
push
dec
jno
lods
in
sbb
stos
mov
out
lds
xor
fs
ret
out
orb
inc
out
lods
xchg
mov
push
cmp
inc
xchg
cld
jg
ljmp
mov
dec
fcos
int3
fcomi
dec
lret
or
fcmove
gs
insl
fwait
push
leave
ja
and
jg
mov
add
leave
jge
test
adc
push
mov
inc
sbb
sub
bound
pop
push
jecxz
and
mov
dec
gs
hlt
insb
scas
and
dec
xchg
out
gs
mov
sbb
icebp
out
jmp
outsb
outsw
jae
cmc
fnstenv
add
nop
dec
add
aam
adcl
lcall
idivl
rcl
inc
push
and
or
or
pusha
sahf
cmpsb
cmp
pop
fnstsw
shll
gs
cwtl
or
pop
inc
inc
ljmp
fistl
shrl
cmpsl
std
push
jecxz
or
adc
pop
jle
incb
adc
filds
push
cmpsb
roll
mov
mov
shrl
adc
loop
jecxz
cmpsl
decl
mov
stos
mov
cmp
mov
data16
jbe
adc
xor
rcl
pop
pop
es
and
jmp
jae
jne
fwait
cli
outsl
dec
ss
jnp
ds
out
inc
pop
dec
fldcw
sbb
xchg
aad
and
xlat
sbb
movsl
sub
jo
ja
dec
mov
pop
add
fcom
sub
icebp
mov
mov
data16
daa
inc
pusha
xor
mov
pushf
push
and
or
inc
jle
adc
pop
mov
inc
mov
xor
push
jecxz
pop
aam
scas
push
jnp
movsb
ret
adc
add
xor
adc
cmp
fidivs
cmpsb
dec
loope
lret
cli
or
enter
sbb
dec
fists
cmpsl
aad
pop
outsb
lock
mov
inc
cwtl
repz
jl
pop
out
xor
xchg
mov
popf
lods
test
imul
pop
gs
daa
mov
inc
pop
inc
inc
push
loop
cwtl
rol
rcr
cltd
fnsave
in
pop
dec
call
push
mov
ja
jge
cmp
cmpsl
in
sbb
xchg
addl
dec
pop
push
inc
mov
inc
push
adc
sub
loop
int
loop
pop
shld
adc
xchg
fstps
push
pop
and
or
stc
test
pand
xor
push
adc
add
outsl
int
pop
xchg
mov
adc
lods
into
mov
dec
lods
in
push
or
mov
push
test
mov
sbbb
in
arpl
jo
mov
repz
and
cmp
cmp
nop
fstps
mov
or
jmp
aad
mov
shrl
fsubr
jp
sub
loope
icebp
lds
pushf
sub
ss
aad
inc
mov
std
dec
sub
hlt
jge
aad
add
mov
pop
rcrl
outsl
jl
das
add
push
sbb
jmp
es
scas
mov
aad
dec
in
or
jnp
imul
dec
stos
pop
fwait
insl
mov
or
lret
cmp
sbb
or
jnp
imul
dec
stos
pop
fwait
insl
mov
or
lret
cmp
sbb
or
jnp
imul
dec
stos
pop
fwait
insl
mov
or
lret
cmp
leave
sub
sbb
or
jnp
imul
dec
stos
divl
insl
mov
mov
xor
inc
jmp
ja
pop
test
cltd
pop
out
cltd
mov
aaa
jae
dec
negl
sub
sbb
jmp
ja
pop
test
aaa
cld
imul
pop
dec
xchg
cmp
jmp
scas
fstps
test
aaa
cltd
mov
sub
aaa
in
outsl
in
rep
jmp
sub
push
mov
std
mov
sub
test
mov
mov
stos
jmp
repnz
sub
mov
xchg
or
lret
bound
stc
adc
adc
popa
push
into
in
ja
push
add
xchg
imul
cmpsb
xchg
rolb
fwait
fs
in
sbb
clc
test
mov
xchg
xlat
xchg
or
js
xchg
fldenv
sub
inc
ss
fdivrs
out
mov
ret
sub
mov
out
data16
sar
out
xor
add
adc
imul
cmpsb
or
les
or
addr16
ja
jecxz
outsl
mov
add
jns
dec
pop
iret
sub
pop
cs
sets
jns
push
in
aaa
in
sbb
cmc
pop
stc
jle
jnp
jl
test
xchg
adc
ljmp
mov
cs
or
dec
clc
scas
into
insb
testb
cmp
push
fwait
pop
mov
imul
pop
xchg
xchg
cmp
jmp
ja
pop
test
aaa
cltd
imul
pop
xchg
xchg
cmp
jmp
mov
enter
dec
ficoms
test
fmull
jle
adc
pop
mov
ja
pop
mov
gs
lret
or
sub
pop
sub
aas
test
inc
or
movsb
pop
mov
jp
pop
sub
fidivl
pop
imul
cld
mov
or
dec
mov
xor
or
movsb
sub
scas
sub
xchg
push
xlat
sbbl
push
or
or
lahf
mov
hlt
mov
sub
push
push
sbb
mul
sub
mov
cmp
pop
cmp
cmp
into
push
pop
sub
adc
mov
jp
xchg
add
bound
cld
outsl
shl
ja
pop
lret
notl
mov
or
mov
mov
fcoms
rcll
jle
lds
mov
sbb
je
bound
xlat
adc
icebp
push
shll
mov
push
dec
adc
jae
stos
xchg
mov
add
xchg
mov
jbe
and
mov
jo
jnp
or
mov
enter
lds
lret
mov
add
add
push
adc
popa
or
scas
out
je
cmpsl
or
jbe
das
out
popf
lea
jns
lods
inc
stos
addr16
sub
pop
mov
imul
mov
adc
sub
add
cmpsl
adc
sahf
lds
clc
and
rolb
ss
mov
push
sub
inc
cli
insb
outsl
loopne
jo
cmpsl
xor
push
jno
stos
push
lock
pushf
sbb
inc
dec
mov
dec
subb
and
lret
cmp
cmp
mov
pop
loope
dec
in
arpl
jecxz
loope
sub
inc
dec
and
clc
lret
addb
cwtl
push
loopne
inc
jmp
mov
and
loop
arpl
in
in
sbb
repnz
jns
and
cmp
fildll
arpl
or
cld
jl
mov
push
sbb
js
in
outsl
adc
insb
out
ret
jns
push
cld
icebp
pop
out
dec
jmp
xchg
lcall
movb
and
mov
or
cmp
sub
out
adc
lret
cmp
jns
mov
xchg
inc
fsub
ljmp
cmpsb
pop
mov
mov
jl
imul
xchg
cld
pop
std
dec
nop
dec
xor
mov
sbb
mov
cwtl
mov
jl
in
in
sub
add
decl
lea
leave
push
dec
cwtl
dec
fmull
shll
dec
dec
outsb
aam
and
mov
fwait
dec
lods
dec
push
jle
fbld
sarl
mov
rcrl
sub
scas
pop
mov
and
or
cmp
sub
pop
test
jno
mov
sbbb
pushf
jne
lods
push
inc
xchg
jl
andl
lea
xchg
hlt
adc
ret
inc
sub
mov
push
ss
cmpsb
mov
sub
jae
cmp
or
aaa
mov
add
cmp
sbb
orb
pop
orb
shll
xchg
cmc
cmp
jg
test
jle
mov
sbb
sbb
push
jge
xchg
inc
outsb
push
dec
cmp
push
push
iret
scas
es
xchg
add
and
je
push
add
sti
outsl
xchg
fsubrp
ljmp
lret
ds
dec
dec
mov
lods
jns
pmuludq
mov
sbb
jecxz
in
xor
mov
filds
push
cmp
xchg
jg
or
lods
lcall
cmp
arpl
and
inc
xor
mov
push
or
ficomps
ljmp
idiv
jnp,pn
sbb
adc
cmpsb
pop
ss
clc
lcall
popa
imul
push
arpl
insb
mov
js
call
popl
pop
inc
fdivrl
push
inc
mov
cmp
movsb
push
pop
pusha
leave
xchg
inc
mov
daa
das
sahf
int
mov
xchg
add
loop
pop
or
arpl
sahf
mov
arpl
push
push
cmp
lahf
ficoml
xchg
push
jg
and
rcr
repnz
mov
mov
jnp,pn
push
mov
std
das
push
ret
push
sbb
xchg
pop
int3
lahf
dec
jp
sarl
in
mov
je
sbbl
add
mov
cmp
ja
andl
sbb
mov
cmc
lock
inc
popl
cmp
movsl
je
es
xchg
mov
sub
test
icebp
sub
pop
ret
pop
pop
iret
sbb
pushf
xlat
or
pop
out
sti
in
dec
nop
xchg
popf
xlat
sbb
dec
cmp
add
add
push
push
xor
mov
ret
cmp
out
imul
sbb
push
es
xchg
ret
ljmp
xor
mov
inc
fbld
mov
or
xchg
pop
mov
lahf
movl
fstpl
aaa
dec
fisubrs
bound
nop
leave
psubq
daa
mov
loope
sahf
push
aas
push
adc
mov
adc
lret
mov
mov
xor
sub
xchg
push
mov
mov
popa
in
add
xlat
mov
mov
jb
mov
adc
pushw
je
xchg
add
xchg
repz
cmovae
les
push
cli
movsl
test
sbb
cmpl
int3
push
lock
in
cmpsl
cli
jl
xchg
jge
dec
add
xor
add
xchg
dec
repnz
xlat
ret
pop
fwait
cs
xchg
mov
xchg
ret
ljmp
push
sbb
insl
mov
int
inc
subb
xor
dec
orl
mov
jne
sbb
sub
cmp
into
xor
clc
cmpsb
mov
jns
sarb
mov
js
rolb
push
movsb
inc
loope
das
push
test
popa
sub
fisubrs
xchg
andb
jle
hlt
dec
fsts
inc
outsb
dec
sbb
or
divb
and
adc
cltd
push
or
jne
sub
shrl
dec
lret
fcmovnu
ffree
push
jo
imul
push
imul
icebp
aas
loope
push
incl
jmp
popa
rcrb
mov
dec
mull
mov
lods
rorl
aad
jo
outsl
mov
add
mov
ret
mov
fcmovb
xchg
les
sbb
xchg
push
ffreep
pusha
sbb
and
jno
inc
mov
pusha
pop
push
pop
mov
xchg
fadds
mov
pop
cmc
push
aad
lcall
aas
and
cmp
push
cli
inc
xchg
pushf
into
and
imul
mov
dec
add
sbb
adc
ljmp
dec
popf
sahf
jl
and
mov
pop
repnz
scas
xchg
push
je
push
loope
dec
ds
dec
repnz
push
inc
mov
inc
fwait
lods
cmp
push
fs
cmc
pop
sbb
or
or
mov
xchg
fdivl
mov
and
dec
ror
fwait
cwtl
enter
jp
sti
cli
lods
cmp
inc
add
cmp
js
pop
out
mov
insl
cmp
xchg
mov
xor
or
sti
push
lock
popl
xchg
fsubrl
lahf
nop
je
lods
adcb
jae
lret
xor
pusha
adc
sbb
dec
popl
test
and
push
ds
cmp
bound
add
dec
int
pop
call
dec
mov
cmpsb
dec
repz
dec
arpl
aas
clc
dec
std
adc
jns
mov
dec
jnp,pn
dec
push
lods
cmp
jne
ficoms
or
cwtl
ret
push
mov
adc
loope
pushf
adc
cmpsb
mov
push
outsl
push
sub
pop
xor
inc
aas
lods
jmp
aad
out
fmul
jle
sub
pushf
and
sti
sbb
rolb
andb
negl
and
and
incl
movsl
xor
les
mov
sbb
sbb
add
out
xlat
mov
adc
popa
repnz
out
lret
fldl
aam
sbb
loopne
dec
test
xchg
ficoml
call
cmp
cmp
mov
loop
lcall
ja
test
loope
daa
movsl
loop
or
arpl
lahf
dec
sub
out
orl
push
push
xor
loopne
sbb
mov
fildll
pop
stc
pop
in
out
sub
sub
loop
push
pushf
or
and
push
adc
adc
fstpt
js
cmp
mov
shl
pop
loopne
in
pop
pushf
or
cltd
andb
adc
add
mov
addr16
mov
add
sti
test
fs
popf
jne
fistpl
test
cmp
pop
cs
pop
repnz
lods
mov
pop
push
adc
shlb
mov
imulb
aad
mov
push
pop
xchg
cmpsl
cmp
add
or
jae
xchg
bound
js
adc
into
fisttpll
insl
subl
or
jo
add
out
pop
addb
aam
popf
in
add
and
sahf
aad
xor
jo
adc
or
loop
adc
mov
rol
jbe
cwtl
ss
stos
iret
les
cmpsb
pop
outsb
fsubrs
push
xchg
lea
lods
mov
ds
add
xchg
inc
repz
dec
or
js
and
xlat
js
dec
cmpsb
frstor
shll
ja
push
jle
dec
lahf
lret
outsl
pop
cmp
das
sub
scas
arpl
jo
ljmp
fistps
mov
clc
pop
jne
mov
jl
movsb
xor
push
mov
pop
mov
jbe
adc
in
inc
icebp
decl
dec
and
mov
lods
leave
icebp
ja
xor
mov
loope
repz
mov
mov
test
push
fwait
icebp
ret
imul
adc
xchg
jmp
mov
sub
sbb
mov
stos
adcl
sbb
push
sub
cltd
cltd
sahf
lods
out
movsb
pop
cmp
mov
jmp
jo
pop
sbb
out
jae
pop
jns
or
cmp
sbb
loop
out
loop
sbb
sub
adcl
test
les
das
jmp
mov
jmp
imul
outsl
insl
and
push
add
mov
mov
add
outsl
mov
repnz
jne,pt
push
mov
mov
sub
test
pushf
inc
mov
pop
lcall
pop
xor
fcoml
and
das
in
and
cmpsl
cmpsl
xor
inc
xchg
xor
cmp
andb
enter
pop
int
fwait
test
and
and
cmc
mov
jo
fcompl
push
jo
out
fcomip
sbb
fbld
out
mov
stc
lret
lret
pop
xor
mov
cli
sbb
dec
or
inc
push
mov
dec
sti
jbe
xchg
mov
jl
jp
lds
repnz
inc
xor
pop
inc
rcrl
cmp
cmp
adc
stc
xchg
inc
xchg
jns
or
xchg
inc
jo
jl
sub
mov
fcomip
mov
xchg
jb
mov
leave
pop
mov
push
pop
int
jno
popa
mov
call
add
adc
shll
push
mov
es
fstp
popf
xor
outsl
adc
sub
stos
or
lods
jge
add
inc
mov
das
mov
xchg
mov
loope
jnp
jecxz
and
inc
push
fiadds
ss
repnz
push
sub
imul
mov
shrb
ret
pop
ja
test
addr16
fnsave
mov
aad
icebp
and
sbb
xchg
sub
pop
xchg
imul
xor
pop
fsubp
loopne
cmc
ret
inc
jl
out
sarb
xchg
push
aaa
inc
jae
loop
jbe
xlat
mov
lret
test
jge
cwtl
cmp
js
mov
push
pop
movsb
imul
rcl
xchg
or
mov
pop
and
dec
stos
adc
adc
mov
lcall
data16
mov
mov
jge
push
shlb
push
inc
xchg
aas
shll
stos
xchg
rcll
cmp
clc
jg
inc
mov
and
mov
or
jmp
lret
mov
lcall
mov
mov
jae
adc
shl
push
orl
xor
cmp
pop
xchg
in
mov
pop
out
pop
sahf
cmp
movsl
sar
push
add
mov
inc
sbbb
inc
pop
fidivrs
add
xor
adc
imul
pop
cmpl
ret
movsb
ja
lea
sub
sub
cmp
mov
rolb
dec
sbb
jle
xor
popa
aad
shl
les
adc
int3
ret
arpl
out
cmp
pop
adc
in
add
push
lret
fbld
ficoms
mov
mov
lret
and
pop
xor
in
addr16
mov
sub
imul
fiaddl
jle
outsb
cmp
aas
in
repnz
into
scas
xor
dec
sbb
sarl
ret
sub
mov
adc
xchg
leave
push
fistpl
add
aaa
jle
mov
mov
stos
or
jle
or
or
mov
push
test
ret
mov
jg
cld
push
cltd
mov
daa
cmpsl
sbb
adc
mov
nop
mov
and
pop
hlt
xchg
sub
lods
ja
push
enter
jns
popa
mov
mov
or
lea
inc
inc
mov
shll
or
enter
xchg
push
hlt
push
and
lock
push
leave
stos
push
loopne
sbb
adc
subl
or
inc
fyl2xp1
cmp
cli
cmp
sbb
adcl
or
pop
repz
push
xchg
mov
xor
sbb
add
iret
push
adc
push
rcll
push
popa
add
mov
xor
aas
fldenv
inc
and
rol
scas
repz
jg
out
ret
outsb
inc
adc
sbb
insb
popa
mov
mov
lods
out
ljmp
rorb
and
pushf
filds
xchg
inc
js
insl
ja
mov
movsl
dec
jb
hlt
or
mov
jno
and
sahf
popa
movsl
add
aad
jle
mov
jne
outsl
dec
ret
scas
xchg
test
dec
jnp
lret
xchg
and
mov
push
scas
loope
xor
clc
push
dec
cltd
aam
push
pop
sub
cmp
ret
in
lahf
xchg
ja
sub
pusha
repz
mov
jo
enter
or
dec
and
sbb
roll
nop
aad
pushf
rorl
jmp
es
hlt
pop
jns
mov
ja
sbb
mov
addr16
fcoml
and
lods
insl
je
mov
gs
sbb
mull
loop
arpl
push
mov
mov
stc
jb
pop
out
pop
scas
add
hlt
push
insl
fistpll
vmovups
loop
mov
popf
mov
push
test
lods
xchg
inc
or
ret
mov
lock
cmpsl
fwait
loopne
sub
jle
pushl
pushf
insl
add
add
jge
repnz
sahf
jmp
fdivrl
lea
pop
movsl
and
inc
das
push
ds
xchg
test
loop
in
pushf
adc
sub
out
int
adc
popa
shlb
lods
push
roll
jge
ficoms
add
dec
and
mov
cmp
scas
cmpl
gs
pop
stos
addl
jge
and
cmp
in
dec
sub
cmp
jmp
cmc
pop
fsubl
movsl
pop
push
out
stc
pop
xchg
add
mov
xor
lods
pop
hlt
inc
add
pop
xchg
and
movsl
mov
and
jne
int3
pop
xchg
mov
inc
fmulp
aas
dec
js
sbb
outsl
in
push
and
jb
or
into
lret
in
aaa
call
dec
mov
repnz
or
xorb
adc
cmp
lret
cli
mov
call
shr
je
ljmp
in
dec
cwtl
jb
enter
loopne
test
ljmp
ss
adc
int3
movsb
data16
jp
and
loop
jo
adc
push
lahf
imul
testl
inc
mov
sbb
out
push
cs
pop
aas
dec
xchg
and
call
mov
xchg
sti
sbb
call
and
popl
lea
lock
roll
adcb
inc
inc
dec
scas
lcall
mov
test
sbb
or
jnp
sbb
test
jb
pop
int
lock
fcmovbe
popf
pop
jmp
in
cmc
jne
sub
fmul
mov
rol
pop
lcall
out
jo
lods
pop
decl
pop
and
and
push
aaa
aam
push
xchg
dec
or
test
inc
enter
sbb
mov
cmp
xchg
jns
inc
adc
rcrb
shlb
rolb
clc
icebp
push
push
fistl
mov
jg
dec
stos
ss
sbb
jle
inc
mov
mov
adcb
fnstcw
mov
push
in
pop
xor
pop
sahf
pop
mov
mov
jne
fstpl
into
cli
ljmp
and
loope
and
mul
mov
insb
shll
jae
xchg
int3
popf
adc
stos
pop
or
mov
pop
jns
mov
lods
lret
outsl
cmp
xchg
faddp
pop
xorl
nop
scas
les
xchg
leave
in
inc
stos
divl
popf
xor
ljmp
push
add
repz
or
adc
adc
js
inc
xchg
inc
aaa
int3
aaa
test
pop
cmc
into
or
sbb
test
xor
push
xchg
in
pushf
cld
mov
pop
mov
add
xchg
add
aaa
or
lcall
mov
add
int
repz
lds
insl
aad
xchg
pop
enter
cmp
mov
fmul
push
addb
or
sbb
dec
nopl
inc
in
push
mov
push
and
shll
imul
stos
pop
mov
inc
sbb
pop
aad
xchg
pushf
out
ja
push
dec
movsl
negl
loopne
loop
jno
test
dec
aam
andl
xlat
lret
sbb
pop
pop
mov
mov
sbb
mov
adc
cltd
in
push
jns
int
sub
rcr
je
lret
imul
cmp
xor
jge
push
loop
in
lds
popa
outsb
jge
or
scas
pop
ljmp
push
adc
cwtl
ret
sub
jg
lock
jl
mov
rclb
mov
cwtl
data16
std
out
jmp
jge
push
leave
cld
jl
mov
outsl
mov
cmp
call
roll
mov
aaa
inc
in
sub
xchg
icebp
inc
pop
iret
jb
push
loopne
ljmp
mov
dec
sub
or
fcmovne
jl
aad
lahf
loop
lods
and
cli
adc
mov
mov
icebp
das
aas
mov
lret
jecxz
dec
daa
ss
mov
push
add
sbbb
or
int3
test
int3
inc
pop
fidivl
sbb
add
sbb
in
aaa
mov
sar
pop
flds
inc
in
stos
cmpb
leave
mov
mov
pop
mov
push
pop
ret
je
lret
mov
xor
pop
mov
notb
cld
xor
sbb
adc
loopne
adc
add
sub
in
rol
xor
add
xor
push
mov
insl
xchg
sub
imul
test
xchg
inc
clc
mov
int3
insl
cwtl
or
push
out
add
aad
and
add
ror
ret
das
pop
adc
nop
sub
add
fmulp
or
lret
mov
jg
push
lods
inc
hlt
out
cmp
das
mov
js
xchg
fstpt
jbe
xchg
ljmp
sahf
loope
push
in
xchg
pop
dec
call
adc
shl
push
and
andb
mov
xchg
mov
mov
dec
push
push
outsb
pop
and
loopne
cmp
les
push
in
shll
pop
dec
inc
cmpsl
into
mov
xchg
notb
ret
test
sbb
outsb
divb
jl
jne
add
sahf
test
flds
test
aaa
cltd
imul
pop
xchg
xchg
cmp
jmp
ja
pop
test
aaa
cltd
imul
pop
xchg
xchg
cmp
jmp
ja
xchg
test
negl
pop
dec
negl
sub
sbb
or
cmp
test
mov
imul
lock
dec
out
adcl
mov
lds
shr
shrl
incl
mov
xor
or
pop
in
fucomi
add
mov
fisubl
jne
and
ret
push
and
mov
inc
jmp
ficoml
mov
lods
pop
mov
aam
idivb
icebp
lret
pop
dec
xor
mov
fisubs
popf
scas
pop
lahf
lcall
and
orl
xchg
pop
jno
into
or
cli
push
jmp
jg
jnp
pop
out
inc
cmp
cmp
sbb
mov
sub
sub
adc
push
add
add
mov
mov
test
addr16
jnp
xchg
in
and
stc
cmc
mov
jne
ja
call
or
pop
lret
imul
aam
and
or
cli
inc
lds
inc
mov
mov
push
shrb
fists
push
inc
fwait
repz
sub
ficompl
or
sub
jp
cs
in
addr16
add
xchg
or
jge
inc
dec
test
leave
fsts
pop
mov
fildl
gs
push
xchg
add
cmp
mov
fsts
xchg
or
andb
ja
add
scas
add
jne
leave
dec
fnstcw
mov
pop
in
cmc
mov
and
ljmp
test
xchg
sbb
push
pop
in
cmc
mov
and
ljmp
test
ret
mov
push
pop
mov
cs
sbb
mov
mov
mov
jns
out
xor
xlat
mov
push
jne
outsb
xlat
add
scas
jmp
inc
addr16
nop
loop
cmp
pop
adc
pusha
cld
sub
dec
sub
and
xor
mov
outsb
lea
xor
loope
outsb
aad
stos
push
repz
lock
mov
iret
jg
mov
pop
fs
xlat
jle
rcrb
rcll
pop
mov
cmp
pop
mov
push
xchg
fnsave
push
lahf
sbb
lods
cmp
mov
loop
pop
jge
les
jbe
into
push
call
mov
push
mov
lds
dec
push
es
mov
divb
flds
jo
test
adc
outsb
push
cmpsl
js
adc
push
mov
mov
and
xchg
adc
aam
lret
stos
cmpsb
sub
mov
adc
ret
and
push
xchg
jp
jb
sbb
cmpsb
dec
sbb
adc
pop
arpl
push
mov
lcall
mov
xchg
aaa
or
xor
test
movsl
ret
stos
jb
jp
dec
arpl
fnstcw
mov
or
enter
std
cmp
orb
or
sbb
repnz
mov
xchg
jl
lods
aam
sbb
mov
xchg
xor
mov
mov
dec
icebp
aas
mov
pop
mov
repnz
xchg
in
mov
mov
daa
sbb
or
mov
aad
bound
loopne
sti
rcll
xor
adcb
sub
mov
call
call
pop
fists
test
inc
enter
sub
add
pop
mov
pop
push
sbb
inc
jbe
lods
sbb
or
loop
xor
pop
cmp
or
cmp
push
push
mov
enter
movsl
in
loop
dec
movsl
or
mov
xchg
pop
fcmovu
fmuls
lcall
lds
mov
and
cmp
dec
inc
mov
cwtl
jecxz
mov
push
mov
cmp
xor
rorl
stc
adcl
jg
enter
sub
pop
sbb
call
ljmp
cmp
adc
cld
inc
cmp
pop
xor
aad
or
dec
sbb
dec
adcb
mov
add
xchg
mov
add
popa
push
adc
mov
aaa
xor
adc
or
adc
xchg
sbb
sub
js
add
xchg
jo
scas
rcl
ss
sub
aas
mov
lcall
xor
mov
push
mov
sub
js
pop
xchg
lds
push
and
inc
mov
add
lret
sub
cmpb
jecxz
sub
dec
sbbl
xchg
shll
jge
psraw
jmp
lcall
fdivl
or
mov
repz
ret
mull
out
movsb
pop
cmp
lods
addr16
and
cmp
xor
and
xchg
cmpsb
mov
jb
add
add
jbe
mov
cwtl
mov
in
inc
stc
pop
push
push
mov
js
sbb
push
arpl
or
push
mov
xchg
sbbb
lret
fistl
int
es
pop
push
xor
loope
pusha
and
fidivrl
movsb
dec
cwtl
rcr
imulb
out
xor
sub
adc
pop
loope
mov
hlt
loop
and
ss
xor
icebp
xor
jae
cmp
cmpsb
icebp
adc
arpl
jae
xchg
jp
mov
clc
es
mov
mov
lods
xchg
cltd
or
xchg
fwait
adc
xlat
dec
andb
leave
add
cmp
and
xchg
jle
dec
mov
lods
shlb
popf
xchg
pop
xor
out
negl
add
push
pop
not
jecxz
dec
push
addr16
mov
orb
or
dec
iret
mov
or
adc
mov
bnd
sub
cwtl
testl
sub
test
lcall
mov
adc
and
call
mov
shll
das
mov
add
mov
sub
stos
test
jg
sti
and
or
loopne
and
inc
movsb
insl
mov
pop
xor
cmpsb
lods
xor
and
mov
jne
xchg
sbb
xor
fwait
mov
div
mov
and
pop
lds
mov
bound
sub
ja
rorl
stos
dec
dec
xchg
das
addr16
dec
lret
jmp
jle
popa
dec
sbb
lds
pop
xchg
cli
scas
inc
popa
adc
jb
sub
inc
lea
add
xchg
testb
dec
sub
xchg
sti
nop
shlb
mov
push
shrl
cmpsl
aaa
lock
in
jns
adc
or
imul
xchg
jecxz
or
inc
enter
jp
dec
jge
fs
adc
test
cmp
jp
imulb
cmp
push
xchg
mov
inc
daa
inc
movsb
sti
dec
jns
ds
sub
enter
jle
adc
sbb
je
rolb
pushf
push
stos
lahf
inc
enter
call
adc
sbb
or
sub
xor
ljmp
fcmovnb
push
dec
stos
nop
mov
dec
mov
push
into
add
cmp
pusha
dec
int3
loop
cmp
sbb
jno
jbe
cmpsb
pop
scas
je
push
lods
and
jl
hlt
test
in
sbb
mov
inc
or
lock
mov
xchg
nop
jl
mov
mov
pop
dec
mov
sti
xor
imul
in
pop
out
jo
test
mov
pop
push
in
cmp
cmpsb
cmc
leave
push
inc
cmp
cmpsb
push
data16
mov
push
stos
add
dec
push
fsub
lretw
sbb
scas
ret
pop
sbb
js
cld
push
mov
stos
push
fwait
aaa
mov
mov
leave
adc
into
mov
ss
and
mov
mov
lds
aaa
je
mov
fdivrl
and
sbb
pop
or
sbb
xchg
mov
inc
das
mov
mov
ds
add
int
jge
mov
lods
fisubrs
sbb
cli
or
cmpsb
fdivl
xlat
sbb
sub
jg
xchg
adc
adc
jge
aad
shll
mov
add
daa
fistpl
sbb
jbe
mov
inc
jns
and
xchg
mov
sub
and
sbb
or
mov
xchg
dec
ret
rcl
xchg
jmp
shll
ljmp
inc
mov
fwait
mov
fwait
cmp
sbb
lret
jmp
daa
loop
mov
fsubrs
js
push
loope
jb
jle
push
and
jns
or
sahf
push
adc
aad
enter
cmp
push
xchg
inc
sbb
in
inc
cmpsb
adcl
fnstenv
enter
out
push
and
frstor
mov
push
aad
cmp
arpl
cwtl
jo
iret
xchg
push
rcll
mov
sub
pop
cwtl
jno
dec
jle
enter
adc
shrb
int
adc
in
sub
cwtl
pop
scas
inc
stos
mov
jge
dec
out
test
jmp
fdivrs
xchg
rdpmc
lds
sbb
aas
lret
repnz
cmpsb
testb
dec
xchg
aas
dec
out
mov
jge
mov
out
cmpsb
jp
test
pop
xchg
push
lods
inc
dec
mov
add
xor
mov
sub
lret
lods
sub
gs
repnz
xchg
pop
lea
lahf
jge
mov
lods
sub
or
jnp
jge
scas
out
mov
sarl
getsec
xchg
sbb
adc
xor
movsb
xor
cld
push
outsb
xor
aam
cs
lea
sbb
mov
jbe
icebp
or
xchg
imul
adcb
sub
clc
and
push
and
iret
cmp
xchg
fidivrs
call
add
sbb
mov
pop
shlb
mov
pop
or
sub
xor
adc
test
inc
aam
mov
pushf
and
insl
xchg
add
movsl
sahf
cmp
sbbb
in
jno
sbb
test
xor
cmp
or
aas
loope
sub
xlat
adc
int
lahf
and
cltd
mov
lock
pop
xor
adc
popa
jae
jb
mov
ljmp
cmp
loop
or
jecxz
inc
jmp
icebp
pop
mov
cwtl
jae
jp
xor
popa
testl
flds
outsb
adc
lret
nop
xchg
fmull
cld
xchg
xchg
mov
and
outsl
sub
pop
fstpt
mov
ret
fstpl
in
out
fsubrp
sbb
pop
inc
jo
or
mov
pusha
jb
jmp
out
jmp
jle
cmc
fmull
adc
jg
clc
dec
popa
push
adc
mov
and
and
cli
or
and
xchg
jbe
mov
lods
sarl
jl
fdivrs
clc
cmp
bound
ja
inc
jge
push
idiv
les
out
js
jge
xchg
mov
out
push
testl
and
adc
aas
fnstenv
sub
push
mov
pop
bound
xlat
outsl
sbb
das
scas
es
pop
mov
in
mov
pop
pop
push
pushf
adc
inc
cltd
pop
xchg
aas
popf
mov
pop
adc
movsl
cmpsb
rcr
xlat
mov
fstp
or
aaa
push
pop
inc
jg
xchg
sub
jae
push
fidivrl
cmp
insb
mov
cli
mov
repz
push
out
dec
out
xchg
scas
jo
scas
out
nop
adc
cld
loope
andb
cmpsb
cltd
adc
ss
and
js
daa
push
subl
jb
pop
mov
xor
mov
ja
test
cmp
add
popa
js
mov
pop
inc
adc
cmp
shrl
mov
ret
pop
or
cmp
lcall
scas
push
sub
xchg
test
or
clc
push
mov
mov
arpl
push
pop
sbbl
mov
bound
imul
pusha
mov
outsl
adc
dec
loopne
das
pop
cmp
aaa
outsl
mov
sub
inc
pop
insl
sahf
add
mov
adc
sbb
enter
jae
cmp
ficoml
pop
addr16
xchg
add
and
or
out
mov
mov
cmpsl
push
xchg
insb
repz
xor
jnp
fimuls
jmp
cs
rorl
pop
mov
subb
lcall
inc
cwtl
push
testb
inc
rolb
mov
test
orb
xchg
xchg
insb
fadds
inc
jns
loope
insb
add
mov
loope
xchg
adc
push
sti
cmp
cmp
xchg
add
icebp
stc
lcall
mov
push
mov
xchg
xor
sbbl
es
jmp
inc
rorl
mov
aaa
inc
adc
test
out
js
push
iret
xchg
xor
sub
or
xor
in
mov
es
shrb
test
lahf
arpl
cwtl
leave
fisttpll
add
push
imul
add
push
pop
subb
inc
jl
or
and
push
adc
jb
pop
sbb
mov
fdivs
frstor
jmp
dec
ret
rcrl
les
sbb
sahf
mov
mov
mov
inc
dec
mov
or
pop
push
in
idivb
xor
push
add
shrb
outsl
int
cmpsl
js
gs
adcl
lret
outsb
add
mov
sbb
jmp
fcmovu
out
ret
in
jge
stc
aam
jb
test
sub
fsubs
mov
adc
mov
out
test
test
sub
ret
fistpll
inc
pop
mov
aas
inc
decb
fwait
mov
add
movsb
lea
xor
call
sahf
in
jae
int
push
dec
push
mov
shl
fstps
push
inc
sub
mov
sti
mov
insl
dec
loope
dec
inc
daa
rolb
or
je
dec
cmp
cs
iret
sub
and
inc
mov
push
sbb
pop
mov
cmp
pop
cmpsl
repz
out
ja
in
and
out
mov
inc
mov
or
int
das
xor
testb
add
enter
mov
popa
xor
sahf
aas
fs
test
pop
sub
jns
mov
adc
lea
push
out
in
iret
mov
pop
es
xchg
pop
sbb
mov
and
leave
imul
cs
cmp
mov
je
or
imul
ret
repz
add
jge
rcrb
sbb
inc
mov
and
mov
dec
cmpsl
test
add
or
xchg
sub
jne
jp
cmpsl
mov
pop
mov
push
daa
and
inc
bound
std
mov
jle
and
pop
jnp
adc
ret
dec
jecxz
lods
pop
pushf
push
fcompl
add
xor
xchg
xchg
xlat
clc
mov
idivl
xchg
andb
notl
push
add
sbb
lock
ss
mov
sbb
add
fildl
cmp
cmp
lahf
push
cmc
lret
inc
mov
fwait
xor
xchg
int
jmp
xchg
or
jle
xor
adc
cmp
add
loop
and
pop
jnp
daa
cmp
mov
loope
mov
dec
jne
pop
cmp
mov
ds
movsb
sarl
sar
cli
xor
mov
push
push
arpl
stc
and
fs
mov
mov
or
push
lahf
pop
movsl
lahf
mov
dec
enter
arpl
mov
mov
std
dec
mov
xchg
shlb
pop
sub
or
stos
push
aad
dec
cmp
pcmpeqb
push
insl
nop
lahf
imul
out
sub
ss
mov
mov
loopne
stc
fs
sahf
test
jnp
cmp
push
int3
imul
mov
xchg
pop
inc
xor
sbb
mov
mov
aad
xchg
pushf
dec
insl
loopne
lahf
sub
insl
xlat
mov
cmp
dec
sidtl
leave
out
inc
mov
xchg
je
push
adc
inc
jbe
testb
xorb
pop
stc
xor
dec
test
in
shl
cmpsb
mov
int3
in
call
das
cmp
mov
arpl
cli
cs
das
mov
xchg
pop
lock
mov
fisubrs
cs
push
test
push
insb
mov
js
push
inc
pushf
cmpxchg
mov
test
mov
aad
adc
mov
xchg
pusha
adc
ljmp
mov
jp
mov
popf
mov
outsb
xor
shlb
fsubp
mov
mov
ds
mov
pop
xchg
jbe
adc
rorb
test
mov
test
cmp
and
adc
push
imul
push
dec
daa
out
push
cmp
jle
js
stos
xor
jg
pop
es
jo
loope
dec
jno
imul
sbb
stc
and
lcall
mov
testl
out
inc
pop
dec
cmp
icebp
ficoms
ds
loop
xor
fnstenv
jp
mov
and
sbb
sbbl
fwait
xor
or
sahf
add
in
fwait
arpl
loopne
mov
ds
sbbl
xchg
mov
cmp
jle
out
push
test
mov
jmp
pop
arpl
int3
xor
inc
cltd
ljmp
das
push
and
shll
cmp
mov
mov
pop
sahf
xchg
fmul
cmc
mov
sbb
mov
shll
xchg
test
mov
int
addr16
pop
js
pop
addr16
mov
loopne
or
cmc
lret
and
fwait
xchg
cltd
xlat
mov
jnp
sbb
jne
adc
cli
adc
mov
test
adc
pusha
mov
pop
xchg
pop
and
fimuls
jns
push
and
aam
pop
xchg
mov
lods
loop
xchg
jno
jmp
adc
sub
in
adcb
mov
mov
outsb
push
sub
fiadds
dec
sti
dec
mov
dec
jnp
lock
in
add
enter
mov
jle
inc
sub
xchg
dec
int
push
call
lahf
stos
xchg
pushf
nop
popa
mov
add
mov
into
xchg
inc
inc
push
mov
sub
and
pop
push
sub
jae
push
out
cmpsl
mov
outsl
arpl
sbb
aaa
outsb
cli
push
mov
adc
scas
sub
fisttpll
sbb
xorb
mov
std
fstpl
xchg
xor
adc
push
ret
xorb
push
mov
push
push
je
add
dec
mov
pop
ror
mov
or
ret
pop
ja
in
xchg
popf
jl
xchg
sahf
mov
push
sub
movsb
les
cmc
repnz
lods
lret
lret
push
fwait
je
or
pusha
loopne
dec
cmp
xor
cmp
testb
mov
pop
popa
sub
aas
pop
cmp
and
in
mov
das
imul
mov
inc
lock
cld
lcall
aam
mov
pop
lock
sbb
xchg
add
mov
lcall
arpl
in
mov
cli
jmp
sbb
cmpsl
cmp
std
adc
inc
mov
sti
add
xchg
push
and
popf
pop
push
fnsave
mov
aad
jge
inc
insl
push
adc
xchg
sbb
and
and
subl
adc
pop
adc
mov
and
cmp
jp
int3
nop
push
pop
ret
sbb
xchg
dec
repz
aas
mov
cmpsb
jne
sub
aas
push
inc
adc
fstps
pusha
sahf
push
cmpsb
sbb
fistps
xchg
push
and
aad
les
xchg
mov
cmpsb
jl
jge
mov
jge
outsb
or
call
jbe
sub
testb
pusha
sub
fstl
cmpsb
push
fs
cmp
fcoms
pop
cli
cli
xor
shlb
div
stos
daa
iret
dec
mov
out
fdivl
cld
imul
mov
cmpsl
fwait
inc
sub
cmpsb
jle
sub
hlt
xlat
mov
push
sbb
adc
lock
addr16
xor
and
pop
xor
fisttpll
push
mov
out
and
xor
cld
sbb
push
js
pop
bt
and
leave
mov
arpl
push
add
mov
pusha
jl
popa
xchg
cld
xor
addr16
pmuludq
es
push
push
arpl
push
jmp
mov
out
add
cmovs
adc
lret
inc
mov
dec
mov
idivb
lea
bound
stos
lea
xchg
dec
jge
jl
push
cmp
mov
xchg
xor
push
mov
das
mov
fldt
mov
stc
push
ja
push
and
dec
adc
pop
scas
cld
test
daa
not
pop
inc
int
lods
cld
iret
decb
inc
mov
or
jmp
inc
imul
adc
inc
mov
add
cli
jl
or
add
loope
xor
rorl
daa
movsb
jbe
test
mov
stos
mov
mov
divb
push
jmp
inc
in
int
testb
mov
xor
inc
jl
hlt
sbb
scas
sub
add
xchg
test
dec
clc
inc
gs
xor
cmp
xchg
shrb
push
jne
leave
xchg
cmp
xor
call
jge
add
pop
shrl
pop
in
pop
clc
fwait
jmp
or
adc
mov
insl
lret
mov
pop
fmull
pop
add
and
or
sbb
mov
xor
xchg
into
pop
mov
mov
fdivr
insb
clc
mov
push
lcall
ljmp
and
xor
pop
mov
divl
pop
push
jl
and
inc
push
jl
sub
xchg
loope
loop
sarb
popf
xor
aas
mov
inc
test
mov
sbb
mov
fdivrl
pop
dec
cmp
sbbb
push
ds
fisttps
pop
daa
fsub
popa
nop
pop
cmp
or
stos
cwtl
add
scas
lods
sti
gs
jb
add
mov
out
fsubrl
ljmp
jmp
jle
mov
dec
mov
int
daa
dec
cmpsl
std
arpl
stos
cs
cmp
notl
daa
jg
jno
mov
sbb
jnp
les
clc
je
mov
xor
iret
xchg
rcrb
imul
push
daa
orl
sar
inc
xchg
fcomps
fiadds
add
pop
mov
push
pop
in
cmc
mov
and
ljmp
test
xchg
sbb
push
pop
in
cmc
mov
and
ljmp
subl
mov
lds
pop
loope
cmc
mov
and
repz
fisubrs
and
jno
inc
and
jp
jp
pop
gs
cli
push
mov
lea
xor
pop
daa
aaa
aaa
daa
dec
add
sub
and
test
cmpsl
mov
cmpsl
xlat
xlat
xchg
div
out
pop
pop
pop
daa
aaa
aaa
daa
inc
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
out
mul
pop
pop
pop
pop
daa
aaa
aaa
daa
inc
push
push
inc
addr16
xchg
xlat
shlb
movsb
xchg
sahf
out
pop
jbe
daa
push
pop
lret
dec
xchg
add
dec
mov
dec
rcrb
jl
cs
call
fadds
push
mov
cmp
sbb
pop
mov
cmpsb
nop
pop
xlat
dec
mov
cmpsb
sbb
add
dec
sarb
add
out
push
cmpb
xor
xlat
pop
hlt
fs
out
call
xor
das
push
test
ds
ja
ja
sbb
xchg
test
xchg
pop
or
mov
fidivrl
mov
xor
dec
cmp
xchg
pop
push
sbbb
divl
sbb
pushf
faddl
loopw
push
frstor
and
cmc
out
pop
pop
pop
daa
aaa
aaa
daa
inc
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
xlat
out
mull
popa
jno
popa
and
cmp
or
repz
idiv
repnz
aam
repnz
inc
mov
xchg
inc
aaa
jbe
and
sbb
and
xor
shl
jmp
loope
lret
xor
popf
mov
pop
jae
inc
push
push
add
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
xlat
out
mul
pop
pop
pop
pop
daa
aaa
aaa
daa
inc
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
xlat
out
mul
pop
pop
jbe
mov
xchg
movsl
push
aaa
and
sbb
inc
inc
cwtl
in
out
stc
out
fildl
inc
mov
vmread
xchg
into
adc
cwtl
push
mov
jmp
out
jmp
sub
jns
adc
xor
sbb
jmp
or
xchg
cwtl
xchg
sbb
cmp
leave
inc
mov
fmuls
aam
lock
cmpsb
vsqrtsd
adc
pushf
xchg
cmp
jmp
sub
out
lea
xor
loope
shlb
fsubrp
mov
mov
add
adc
push
dec
lods
and
sub
adc
ret
jl
jns
jle
test
shll
sahf
in
push
mov
stc
or
cmp
pop
inc
mov
lods
mov
pop
mov
cmp
jl
cmp
or
loopne
jae
mov
idivl
ficoml
xchg
ss
xchg
mov
pop
sub
mov
mov
jo
cmp
std
insb
scas
test
mov
into
cmpsb
scas
dec
push
fldcw
rcrl
out
bound
xor
pop
push
mov
insb
aas
lock
mov
dec
fxch
jecxz
rorb
xchg
mov
out
dec
sarl
ss
out
push
and
int
insl
adc
in
push
mov
fsubrl
movsb
stos
enter
pop
push
pop
fidivs
fcompl
jbe
ds
dec
sbb
lcall
test
lock
jns
add
cmp
sbb
inc
fsubrs
in
sbb
sub
pop
lret
loope
mov
scas
mov
mov
jb
popf
inc
cmp
int
sub
push
out
xlat
inc
mov
inc
repz
fdivrs
and
cmp
popa
ret
out
mov
out
add
sbb
jecxz
scas
sub
mov
call
and
loope
sbb
movsl
int3
out
mov
rol
xor
jne
psllw
ja
iret
testb
dec
jnp
dec
in
in
sar
mov
mov
dec
push
dec
imul
mov
push
scas
daa
inc
add
mov
fbstp
test
enter
jp
inc
dec
push
push
pop
xchg
inc
inc
mov
mov
mov
sbb
adc
jne
xchg
pop
in
ret
inc
jmp
inc
ja
lahf
add
dec
test
mov
mov
mov
pop
into
mov
add
pusha
ljmp
ret
jo
shlb
shrl
cmp
cmpl
adc
cmp
test
test
sbb
adc
shll
xor
aad
fisubl
or
jecxz
inc
out
inc
pop
dec
inc
data16
clc
imul
push
into
int3
add
inc
lods
iret
push
pop
dec
jecxz
cmpb
dec
out
and
add
jge
daa
loop
rcr
and
or
lds
mov
jl
cs
rsm
lods
jl
xorl
push
scas
dec
sbb
lret
adc
mov
loopne
call
inc
push
dec
std
sub
jl
leave
insb
cld
cwtl
mov
push
mov
adc
adc
inc
imul
adc
insl
jecxz
rcrb
sbb
pop
cmp
dec
scas
sti
and
mov
cmp
push
test
inc
add
or
cmpsl
xor
cmp
or
sarb
shl
mov
orb
sbb
cmp
test
adc
or
negl
push
pop
je
loop
fistpll
sub
das
test
push
lods
push
lret
shl
push
mov
mov
push
addl
enter
leave
xor
and
je
push
jmp
cltd
sub
daa
jo
lret
clc
mov
push
pop
pop
cmp
mull
loop
xorl
add
out
xchg
cmp
jmp
inc
push
jl
and
and
in
push
test
pop
pop
pop
pop
or
arpl
mov
xor
lods
popa
xorl
mov
mov
rol
repz
xor
lock
outsb
adcb
sub
push
data16
scas
push
je
popf
cmp
pop
push
or
jg
fisubl
ljmp
cmpsb
mov
inc
mov
mov
push
jmp
cmp
ret
pop
data16
ret
cmpsb
orb
cmpb
mov
mov
sbb
and
dec
insl
adc
mov
nop
test
add
push
xchg
adc
loop
shll
pop
push
dec
dec
sbbb
incb
es
aas
dec
mov
xor
int
sahf
and
stos
iret
push
pop
mov
bswap
sbb
push
fimuls
ror
cmc
pop
or
arpl
sub
inc
jne
lret
cltd
test
test
inc
and
xor
sbb
fldenv
inc
xor
pusha
and
push
push
mov
mov
insl
sbb
fdivrs
mov
popf
je
rolb
sub
or
scas
xchg
push
inc
xchg
test
fmuls
jo
and
repnz
add
mov
call
hlt
push
les
push
inc
jo
adc
roll
mov
sbb
add
int3
mov
in
push
aam
mov
rcrl
cmp
daa
ja
sbb
inc
in
jle
test
sub
sahf
movsl
jmp
subl
mov
test
jle
jbe
inc
ss
mov
mov
or
insl
jp
sub
sbb
mov
xchg
ss
fcomip
jne
or
in
push
popf
mov
movsl
mov
loopne
movsb
shll
push
pop
into
xchg
cmc
jl
jle
mov
dec
cld
test
fiadds
icebp
ja
js
xchg
pop
lea
xor
in
data16
sti
rolb
lahf
das
jns
mov
mov
add
push
inc
popa
mov
mov
cltd
inc
xor
repz
and
inc
xor
popf
pop
adc
ret
pop
mov
int3
inc
out
mov
pop
cmpb
pop
and
and
mov
adc
add
arpl
sub
dec
add
es
nop
subl
xchg
fbld
inc
xor
test
dec
xor
jnp
cmp
shlb
mov
mov
cmp
cld
add
xor
mov
out
add
push
leave
jle
xlat
jmp
push
shl
inc
je
mov
add
xlat
lods
stos
push
cmpsb
mov
movsb
sahf
sub
xor
lea
arpl
adc
push
cs
or
inc
outsb
mov
push
inc
stos
imul
cmp
push
xchg
sbb
scas
dec
aaa
inc
fistps
inc
jge
mov
dec
cmp
jb
mov
stos
jg
xchg
dec
jmp
and
xor
cmp
dec
inc
cmp
bound
pop
fsubrs
mov
fsts
push
mov
outsl
hlt
clc
pop
add
mov
and
and
in
pop
rolb
dec
ficompl
push
inc
push
fcmovnbe
dec
xor
or
xadd
xor
dec
test
pusha
ljmp
loope
jg
cmc
popf
ds
idivl
ss
xor
sbb
dec
call
loopne
leave
and
sub
out
mov
jnp
or
sub
inc
and
js
and
sbbl
xchg
sbb
outsb
push
adc
in
inc
sbb
xchg
jo
shl
add
adc
outsl
sbb
imul
sub
arpl
test
stos
pop
xchg
aas
je
mov
mov
lea
mov
movsl
scas
jge
jnp
push
pop
out
lcall
dec
mov
mov
mov
popf
or
inc
xchg
sub
shll
jae
loope
mov
test
fsts
and
dec
sbb
push
gs
dec
dec
stos
loope
lds
call
adc
movsb
push
mov
gs
jle
or
mov
int3
push
insb
stos
insb
ss
cmp
push
ret
fcoms
jne
inc
and
rep
adc
lock
std
cmp
sub
sbb
cmp
xor
lock
popa
and
stos
xchg
dec
mov
das
mov
std
fldcw
cmpsb
jne
cmp
add
mov
jmp
aaa
mov
icebp
push
xor
into
lahf
and
roll
and
xchg
xlat
imul
sbb
decb
enter
dec
aad
mov
stos
cmpsb
inc
xchg
push
lea
in
in
mov
rcl
mov
sbb
not
pop
les
cmp
jbe
mov
push
dec
pop
outsl
insl
je
cmpsb
fcomps
mov
sub
jne
movsl
dec
sub
cmp
loopne
mov
ljmp
mov
jmp
or
jle
test
lcall
ret
push
sarl
data16
les
sar
xchg
adc
jns
adc
dec
push
mov
pop
xchg
lret
pcmpeqb
or
or
cmp
xor
cmp
and
adc
cmpsb
cli
pop
xchg
rol
ja
mov
insb
push
sbb
fdivrl
aad
in
jge
mov
lock
sbbb
repz
in
hlt
jae
sub
jno
popa
sub
test
ret
fs
add
cmc
into
scas
pop
scas
negb
mov
sub
push
cli
ja
movsb
and
push
imul
lret
push
and
mov
xor
in
mov
in
or
dec
mov
outsb
aad
jl
inc
cld
in
ret
or
jne
xchg
paddsb
idivl
jae
shlb
inc
imul
fldt
jl
xorl
lods
jl
xchg
popa
nop
push
sbb
jo
dec
test
lcall
xor
push
adc
or
xchg
add
sub
cld
pop
insb
sbb
add
test
fs
dec
pop
movaps
outsb
test
xor
pop
out
loop
insb
gs
das
mov
push
and
outsb
push
loop
push
std
xchg
push
cltd
notb
aad
inc
adc
sbb
cs
push
jno
push
mov
dec
enter
std
gs
mov
xchg
stc
add
push
stos
clc
mov
in
inc
loop
outsl
mov
enter
mov
out
ret
mov
lods
dec
and
mov
mov
jb
sub
lods
jnp
rcr
pop
xchg
cmc
cld
and
fisubrl
add
jmp
das
add
sbb
and
ret
xor
and
pop
dec
cmc
lcall
jnp
cli
mov
outsb
jmp
jo
cmpsl
fcmovnu
ja
or
dec
sbb
cld
xor
imul
icebp
sbb
jmp
das
mov
cmc
pop
test
and
sbb
xchg
mov
inc
pop
cli
sbb
dec
pop
mov
sbb
adc
inc
adc
cmp
cmp
movb
rcll
push
cs
push
push
inc
push
push
mov
jbe
adc
jmp
sbb
aad
mov
xchg
popa
stos
fildll
aad
adc
rcl
pop
mov
and
test
insl
fidivrl
loop
cld
mov
jp
cmp
outsb
stos
lds
and
dec
cmpsb
jae
mov
fistpl
sti
popa
pop
and
dec
mov
and
data16
fcmovnb
cmc
inc
inc
adc
imulb
mov
gs
cmp
push
inc
daa
jo
xchg
jp
push
mov
cmpsl
pop
sub
pop
adc
movsb
xchg
jb
xchg
movsb
adcl
dec
stc
rol
pop
push
test
sub
outsb
xor
je
dec
push
adc
lcall
push
or
stos
push
mov
mov
dec
in
daa
lret
xchg
and
cwtl
jl
jns
mov
stos
xchg
jmp
int
pop
adcb
or
mov
loop
shr
pop
ret
cmpsb
sbb
or
pop
xchg
cltd
les
pusha
push
je
gs
std
or
add
lods
lret
push
fstpl
dec
jecxz
repnz
mov
fimuls
xchg
adc
stc
test
push
ret
das
fimuls
xchg
shr
test
inc
mov
pop
bound
ficoml
sbb
xchg
or
mov
pop
testb
popa
insl
adcl
sbb
push
xchg
cmpsb
jb
xor
loopne
mov
imul
mov
mov
jne
in
dec
jle
sahf
adc
ficoms
fisubrs
or
in
adc
mov
cmpl
mov
imul
es
and
insb
mov
mov
xchg
in
lret
mov
mov
xlat
movsb
mov
mov
or
lahf
les
imul
push
mov
loop
lock
adc
jmp
stos
mov
call
fldcw
les
adc
fisubs
sub
mov
or
pop
popf
rcrl
insl
push
inc
xchg
lods
repnz
pop
fs
or
sbb
pop
andl
lods
push
sub
push
add
pop
xchg
jo
lds
mov
movsl
gs
xchg
lcall
arpl
dec
ror
cmp
or
jl
cwtl
js
out
inc
mulb
shll
or
enter
sarb
loop
jg
cld
bound
mov
and
bound
adc
gs
pop
test
xor
leave
leave
imul
cmp
push
stos
lret
lods
jg
mov
sub
ds
dec
cltd
adc
das
lret
movsl
sub
aaa
cmp
sarl
stos
pop
dec
mov
int3
adc
bound
lret
sbbb
es
lret
cs
xchg
pop
cmc
dec
xchg
mov
dec
cli
bound
outsb
sti
mov
add
ror
leave
clc
out
rcr
mov
pop
scas
jb
push
cmc
mov
out
icebp
pusha
mov
jb
adc
jnp
cmp
stc
and
into
es
inc
sub
jmp
iret
sub
adc
icebp
mov
add
dec
push
cmp
ret
mov
push
push
daa
mov
sbb
xchg
sahf
xchg
cmc
or
sahf
dec
repnz
sahf
int
add
fneni(8087
cmp
mov
insl
invlpg
test
lahf
popa
jg
lea
or
fs
sbb
push
mov
lods
stos
ficompl
aam
fwait
jne
stc
addl
push
jo
xchg
hlt
in
sub
out
xor
mov
mov
add
inc
pop
jmp
mov
cmc
and
sahf
cmc
je
xchg
push
rorl
dec
sarb
xor
dec
adc
push
dec
sub
xor
sahf
in
lea
int3
pop
fcoms
scas
setbe
js
sbb
cmc
push
outsb
xor
fidivrs
add
pop
fs
pop
icebp
roll
jge
pop
ljmp
cmp
inc
dec
roll
cmpsl
add
push
lret
les
ss
pop
or
push
mov
and
or
lods
xchg
daa
mov
cmp
jo
out
sbb
shll
sub
pop
orl
insb
roll
mov
dec
push
aas
das
in
mov
mov
cmp
jp
sub
adc
sti
into
or
ljmp
out
cmp
adc
mov
mov
stc
xlat
in
jge
in
iret
sti
das
cmp
and
sbb
jle
xor
jbe
ss
mov
lret
in
in
outsl
sub
dec
mov
loope
sbb
mov
je
je
mov
xchg
or
add
dec
xor
inc
daa
test
mov
and
jmp
repz
shrl
mov
mov
mov
adc
cmp
ljmp
jl
dec
cmpsb
mov
sbb
push
in
and
into
dec
jns
xor
outsb
push
fildl
push
jne
shll
mov
repnz
jbe
data16
xchg
adc
mov
add
jne
pop
and
xor
add
add
inc
ret
xchg
cmp
sbbl
sbb
test
ret
cmpsl
dec
arpl
mov
insb
and
mull
loop
sub
repz
pop
je
push
enter
outsl
mov
scas
or
pop
dec
imul
or
rorl
xchg
enter
xor
lods
imul
push
pop
or
mov
xlat
adc
or
lds
cmp
pushf
push
in
mov
aam
pushf
mov
sbb
cmp
test
comiss
ret
sarb
inc
pop
sub
mov
push
psllq
cmp
push
mov
repz
movsl
fcmovbe
outsb
fdivl
mov
mov
out
mov
ja
dec
repnz
lds
fimull
stos
lea
aam
js
xchg
leave
adc
push
or
add
dec
mulb
mov
je
add
dec
mov
fcomps
rorb
stc
push
add
mov
xchg
sahf
lret
fldenv
std
arpl
in
push
jle
adc
gs
adcl
out
int
popa
xchg
inc
fcmovnb
jne
xchg
loopne
adc
and
call
mov
adc
pop
fidivs
mov
out
mul
and
bound
sbb
movsl
pop
jno
mov
inc
orb
jnp
outsl
inc
popl
inc
in
pop
xor
cwtl
inc
xchg
fcmove
xor
add
add
adc
pop
or
mov
loop
inc
ds
sti
sub
push
dec
mov
or
xor
pushl
xchg
nop
subb
cld
mov
dec
push
and
daa
mov
iret
movsl
mov
mov
ret
ret
mov
adc
cld
ljmp
stos
jle
cs
fldenv
push
sti
cwtl
sarb
inc
cmc
jae
and
cmp
jbe
ja
or
scas
add
sub
lret
pushl
lret
out
sahf
cmpl
mov
xlat
daa
cmp
dec
xor
push
xor
sub
shrb
or
ss
sub
mov
cld
out
cmp
arpl
out
pop
or
cmp
sahf
icebp
xor
rcrl
popa
mov
std
mov
mov
push
xchg
jmp
cmp
daa
scas
popf
add
mov
shlb
mov
mov
xchg
sub
pop
mov
pusha
repz
nop
xchg
add
adc
jae
cmp
inc
mov
push
mov
stos
dec
and
jne
scas
pusha
inc
xchg
int3
dec
or
rcr
ret
push
fistps
out
sbb
add
rcr
mov
cmc
or
xlat
sti
out
sub
pop
lcall
xchg
out
scas
and
mov
xchg
mov
dec
ljmp
jbe
pop
psubsb
sahf
cmp
ss
jmp
or
xchg
lcall
mov
xchg
insb
hlt
aad
idiv
cwtl
sub
mov
adc
or
jmp
inc
in
push
xchg
cli
scas
jne
sbb
xchg
out
rcll
lcall
mov
sub
adc
hlt
js
addr16
pushf
xchg
jbe
push
sbb
out
into
inc
movsl
stos
pop
stc
pop
pop
xor
mov
cmp
daa
out
scas
add
aas
mov
das
imul
aaa
sar
and
stc
push
mov
lahf
or
aas
sbb
test
daa
mov
xchg
lock
mov
inc
bound
hlt
mov
jae
add
add
jne
xorb
out
out
out
rclb
inc
pop
push
ja
sbb
dec
cmpsb
outsb
addb
sahf
mov
pop
test
pop
pop
add
fiaddl
in
sbb
or
mov
scas
fcomps
push
mov
call
fistpll
mov
adc
and
add
dec
loopne
test
add
cli
popf
stos
repnz
int
pop
dec
sarb
or
lods
mov
sbb
pop
jmp
nop
pop
test
pop
movsl
popa
cli
das
js
push
sub
into
arpl
out
test
or
lcall
scas
repnz
mov
jae
ljmp
push
sub
or
mov
push
addr16
int3
add
xchg
cmc
push
dec
test
stos
or
sub
pop
mov
and
popa
lret
add
mov
test
sub
mov
pop
and
inc
lret
mov
push
aam
aaa
mov
insb
sbb
test
dec
imul
imul
ja
loopne
incb
sbb
add
xor
mov
xchg
ret
sbb
aaa
daa
inc
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
xlat
out
mul
pop
pop
pop
pop
daa
aaa
aaa
daa
inc
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
xlat
out
mul
pop
adc
pop
daa
aaa
aaa
es
push
push
inc
addr16
xchg
cmpsl
mov
cmpsl
xlat
out
mul
pop
pop
pop
pop
daa
aaa
aaa
and
push
out
negl
or
pop
pop
cmp
or
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
push
sbb
dec
aas
xor
lods
repz
ret
in
mov
fstl
cmp
inc
insl
xor
dec
adc
mov
rcll
mov
xor
and
adc
xor
push
adc
mov
sahf
jecxz
mov
ret
in
notb
addl
or
hlt
jge
mov
lcall
xchg
inc
in
cld
sub
and
mov
fmul
adc
xchg
sbb
shlb
mov
ret
and
shrb
shll
pop
das
scas
mov
popf
out
cli
push
inc
sbb
adc
ds
mov
arpl
insb
fisttpll
sub
sub
inc
xchg
xor
pushf
pop
cld
sub
adc
std
pop
inc
insb
fisttpll
jge
mov
adc
mov
add
lods
subb
insl
add
insb
int
vpaddusw
inc
jg
mov
xchg
jecxz
ret
int
test
scas
fs
fldl
or
xor
dec
adc
rep
jecxz
roll
xlat
xchg
fucomp
inc
sbb
arpl
imul
add
push
lods
xchg
rcll
in
rcrb
ret
pop
popa
bound
xor
jnp
inc
dec
fs
add
mov
xchg
lea
xchg
enter
rorl
push
xor
jne
and
adc
lods
repz
ret
in
mov
mov
sub
push
sbb
and
pop
add
rcrl
mov
sub
loope
add
lcall
lahf
dec
insl
cwtl
lds
addb
inc
test
cli
and
mov
test
mov
inc
sbb
mov
cmp
call
cli
nop
stos
or
push
or
pop
add
out
push
mov
sbb
push
in
lock
pop
stc
adc
aaa
cmpsl
cmc
jmp
movsb
rolb
icebp
lock
cmc
cwtl
mov
add
ds
daa
neg
lods
mov
stos
jl
inc
push
dec
lods
adc
push
xor
int3
pop
cmp
push
mov
andl
push
mov
add
dec
or
fucom
icebp
lret
push
std
outsb
fiaddl
lock
sub
aas
mov
inc
sahf
es
orl
dec
fildl
xor
adc
out
jns
pop
test
shll
into
in
out
test
in
nop
mov
lret
pop
or
jo
xchg
sbb
fwait
xlat
sahf
lret
and
aaa
gs
jl
pop
sbb
xor
movsl
dec
in
cwtl
inc
outsl
xor
jecxz
or
icebp
push
jae
sub
xchg
imul
outsl
movsl
orb
imul
and
sub
xor
mov
add
mov
mov
sub
cmc
sahf
cwtl
fs
aam
mov
jg,pn
fcoms
popa
push
fstps
push
js
sub
std
xor
and
push
ret
test
mov
insl
or
pushl
aam
mov
adc
pop
jne
imul
arpl
xchg
addl
aas
icebp
fdivrs
and
pushf
rcll
iret
je
pop
std
push
sbb
push
and
jmp
in
icebp
pop
nop
and
imul
test
imul
xor
push
xor
sbb
in
push
cld
andl
lds
fst
lds
mov
mov
push
insl
movsb
ljmp
dec
aad
sub
ret
sub
pop
inc
adc
and
dec
sub
pop
mov
sbb
test
cmp
inc
jmp
mov
pop
pop
add
loopne
mov
xor
or
cmp
jo
pushf
fpatan
cmp
jmp
aas
lret
mov
out
repz
add
dec
inc
arpl
add
ret
adc
pop
cmpsl
aad
gs
std
mov
mov
mov
aaa
ja
mov
xor
mov
ss
jl
and
inc
adc
sbb
pop
data16
lret
cmp
out
sub
sbb
cmp
cs
mov
mov
xorl
mov
push
daa
adc
fdivrl
and
xchg
nop
mov
cmp
mov
dec
jmp
xor
js
ret
sahf
and
int3
enter
jmp
cmp
mov
andl
call
and
neg
xchg
lea
rclb
fadds
jne
mov
sbb
cmp
lea
xor
mov
jl
pop
sub
add
sbb
push
js
fs
and
stos
cli
ret
cmp
push
xchg
pop
js
dec
lahf
mov
decb
aad
or
or
xor
or
mov
enter
xchg
inc
out
push
xor
push
dec
jb
mov
ljmp
adcl
movsb
pop
dec
cwtl
pop
aam
in
mov
mov
xchg
pop
add
ret
call
loop
fldt
xchg
add
lret
loop
push
insl
popf
fs
mov
fstl
mov
je
or
sub
ljmp
push
xor
jae
jo
into
adc
mov
add
push
mov
out
pop
pop
push
jp
scas
shl
push
mov
js
fists
mov
xchg
mov
mov
sbb
mov
sub
dec
fwait
into
adc
adc
imull
inc
aaa
mov
pop
inc
mov
dec
movsb
mov
aas
cmp
rcr
fcmovnb
xchg
repnz
or
add
pop
xchg
jnp
out
out
mov
scas
mov
sbb
adc
inc
dec
or
cld
ds
imul
nop
aas
mov
iret
inc
mov
push
cmp
in
mov
arpl
add
popa
fstpt
in
stc
sub
or
cmp
lea
movsb
fdivrl
push
or
imul
shrl
push
or
pop
jge
xor
fcoms
lods
pop
or
ret
pop
mov
adc
insl
xlat
mov
cs
sub
push
addl
cmp
and
lods
pop
sti
pop
unpcklps
pop
and
out
shl
fisttpl
mov
xlat
push
dec
sbb
addr16
sbb
push
and
sbb
sbb
pop
adc
dec
shrb
pop
jle
repnz
insb
sub
scas
inc
dec
jbe
push
cmp
mov
cltd
popa
xor
sahf
sub
xchg
sub
or
lret
imull
pop
xor
cmp
leave
fisubrs
mov
push
insb
pop
lods
jg
mov
mov
fildll
lcall
sbb
scas
nop
and
sbb
add
test
and
mov
sbb
xchg
popf
fwait
mov
rcrb
fdivrs
pop
jo
push
repz
das
gs
sub
test
push
adc
out
xor
addr16
ret
sub
dec
add
int3
mov
sbb
mov
mov
cmpl
pop
inc
enter
fistl
pushf
sbb
push
or
sub
ret
sbb
repnz
sbb
into
or
sahf
ds
test
scas
push
mov
scas
dec
dec
cmp
out
sub
sar
test
cwtl
movsb
js
inc
xchg
popa
mov
into
adc
loope
mov
daa
mov
fildl
jae
and
jmp
stc
pusha
push
lea
or
int
jle
inc
sbbl
bound
faddl
inc
push
xchg
xchg
push
sbb
lahf
test
pop
inc
mov
jae
sub
idivb
jl
bound
js
and
or
stos
mov
mov
aaa
cmp
mov
fwait
rorb
mov
cmp
pop
in
scas
cmp
pop
test
mov
inc
pop
jb
out
pop
lea
mov
mov
jmp
test
sbb
frstor
cld
mov
cmp
pop
dec
std
aad
jmp
and
cmp
lret
push
daa
repnz
cmp
cmpsb
xchg
int
aad
icebp
std
xchg
push
jmp
jp
jle
mov
adc
add
clc
xor
shll
add
sahf
insl
bound
les
fwait
xchg
jg
shrb
shlb
jae
lret
mov
rorb
adc
cwtl
inc
mov
or
fbld
ss
sbb
in
into
fisubrl
mov
cmp
jae
ret
jno
sub
roll
cwtl
test
es
push
loop
mov
fs
xlat
dec
ficoms
jns
dec
xor
clc
and
xor
shrl
fistps
pop
mov
push
bound
sub
ja
jno
inc
pop
loope
mov
fsubr
ja
mov
push
rclb
mov
lods
or
movsb
popa
sub
ficoms
adc
scas
xchg
sahf
mov
cli
into
aaa
push
xlat
mov
leave
push
lock
stc
movsb
inc
push
sub
mov
rcrl
lods
fsubrl
lods
and
mov
test
jbe
repnz
jp
cs
rorl
push
push
adc
sub
push
jne
pop
addr16
push
cmp
xchg
mov
xchg
and
mov
mov
test
jg
fnsave
outsl
sahf
pop
popl
xor
leave
mov
jae
mov
imul
lds
mov
jns
lcall
xchg
js
inc
sbb
jno
and
adc
outsb
ljmp
jb
idivl
jmp
divl
push
xchg
int3
cmp
mov
cmpsl
add
rcll
push
faddl
xchg
mov
fdivl
int
movsl
sbb
incl
sub
dec
popf
jg
es
cli
dec
sub
xchg
out
aas
gs
sub
nop
pop
lcall
mov
cmp
out
xor
scas
shlb
sbb
imul
dec
mov
cmpsb
jg
sahf
jmp
cmp
ret
xorb
add
mov
push
adc
daa
mov
ficompl
sti
mov
lods
ja
movsb
out
and
loope
add
xor
int
adc
rcr
push
mov
sbb
std
adc
sub
jp
sub
push
das
cmpsb
pop
xor
adc
imul
mov
jg
add
pushf
cmp
xchg
pop
mov
movsb
mov
push
shl
dec
sbb
int3
xor
jl
mov
lret
pop
and
and
pop
ljmp
inc
push
repz
imul
outsl
or
and
or
int
sti
mov
mov
shll
mov
lret
dec
and
mov
ret
or
repz
inc
adc
negl
adc
bound
imul
xor
pop
mov
jle
dec
jo
repnz
aad
ss
xchg
aaa
jmp
fwait
jb
andb
int
or
xchg
push
jp
inc
test
out
outsb
std
subl
out
jle
stos
std
fbstp
fwait
cmpsl
push
adc
in
nop
dec
sub
mov
jge
mov
cmp
test
iret
nop
popa
sbb
lahf
push
pop
dec
shrl
js
addr16
ret
add
fbstp
or
dec
hlt
push
mov
xor
lcall
or
into
cmpsb
and
aaa
add
and
lds
cltd
addr16
in
aas
inc
xor
push
mov
or
outsb
mov
pop
in
push
js
stos
pop
add
pop
xchg
or
int3
cltd
fdivl
sbb
ret
jmp
pop
gs
data16
pop
dec
push
std
js
ljmp
movsl
pop
test
std
and
xor
nop
les
icebp
leave
add
mov
mov
mov
or
xchg
jb
mov
fistps
cs
lea
push
cmp
ss
daa
movsl
insl
xchg
jg
xchg
dec
jecxz
adc
into
mov
adc
xor
mov
push
into
pop
cmp
pusha
mov
mov
lds
dec
push
scas
cmpsl
jg
dec
in
jb
or
jns
mov
or
arpl
das
test
inc
xchg
mov
mov
push
pop
outsl
test
ret
xchg
es
inc
push
add
aad
add
jo
insl
scas
mov
ror
outsl
loop
xchg
mov
inc
cmp
and
inc
mov
xchg
dec
dec
aad
std
loopne
jns
cmp
addr16
daa
ret
or
ja
mov
shr
add
xor
xlat
sbb
dec
jbe
mov
add
je
call
pusha
andl
into
or
mov
fwait
and
xor
push
outsl
sahf
xchg
sub
dec
cltd
test
test
jns
sbb
scas
jg
hlt
dec
inc
repnz
sub
mov
mov
mov
fstp
stc
dec
mov
jge
repnz
push
call
jecxz
clc
push
mov
mov
ja
lret
xchg
inc
push
shl
lret
aaa
rcl
adc
shl
push
mov
cltd
cltd
pop
stos
popa
push
xor
mov
or
jnp
mov
xchg
sbb
repnz
xor
mov
jbe
scas
rclb
xchg
leave
sub
bound
fists
repz
loope
push
and
fdivrp
push
mov
pushf
gs
adc
push
pop
inc
inc
mov
sub
test
sbb
shl
in
imul
cmp
xor
repnz
push
mov
lcall
sbb
and
adc
pop
dec
loop
mov
mov
int
xor
filds
cmpsl
lods
test
xor
lds
mov
mov
movsl
jle
sub
ljmp
or
push
cmc
mov
mov
fnstenv
movsl
add
or
adc
andl
inc
and
sub
pop
jp
lods
pop
pop
jae
bnd
dec
mov
mov
sub
pop
sub
adc
shll
fwait
xchg
in
or
push
jb
mov
cmpsb
mov
cld
fwait
pop
mov
add
jg
fwait
inc
and
addr16
or
xor
repz
mov
adc
mov
and
fnstcw
lea
mov
add
dec
xchg
cli
pop
or
in
loop
pop
mov
or
aas
mov
clc
jecxz
mov
jecxz
fstps
fldcw
scas
lret
mov
loop
pop
mov
dec
push
cli
and
xor
push
pop
test
dec
cmp
pop
inc
mov
add
push
dec
mov
jg
test
out
loope
aaa
cmp
mov
xchg
mov
sti
inc
xchg
loope
cli
or
pop
lds
jbe
xor
mov
xor
or
shll
jae
mov
pop
mov
and
adc
xchg
jns
xchg
rcrl
aad
insl
pusha
lods
insb
movsb
xor
imul
cmp
mov
inc
out
xor
imull
cmpl
incl
call
push
mov
aas
xchg
lret
sbb
aaa
dec
mov
in
nop
inc
es
adc
or
arpl
inc
pop
aad
sub
sbb
xchg
sub
ljmp
lret
pushf
mov
out
roll
roll
fs
mov
aas
fimull
or
repnz
lcall
fmuls
movsl
mov
repnz
push
hlt
jmp
mov
rcl
cltd
mov
pusha
cli
or
test
aas
and
inc
mov
mov
xchg
sbb
mov
cwtl
inc
es
jb
pop
in
sbb
sub
movsl
enter
mov
mov
inc
adc
jo
push
cmp
aam
clc
mov
insl
shl
cwtl
orb
lock
test
or
pop
pop
mov
inc
pop
mov
push
mov
addr16
mov
inc
nop
out
add
inc
int3
jb
sub
scas
inc
sub
xchg
push
cld
int3
int3
or
ja
pop
popa
bound
push
mov
out
lock
fstl
push
add
sbb
xor
adc
xorl
adc
mov
sub
shll
push
lods
adcl
cmp
fcmovbe
adcl
lea
repnz
roll
push
pop
insl
ds
jb
cmp
out
cmp
dec
cwtl
stos
stc
cmp
cmp
jge
and
pop
jae
fs
xchg
insl
fs
jbe
mov
loop
or
sbb
mov
mov
jo
insl
mov
push
inc
cld
jl
imul
ret
out
cmp
ret
jne
ljmp
sahf
mov
mov
and
sub
movsl
cli
and
rorb
mov
jmp
sbb
mov
jg
or
cmpsb
pusha
push
ret
and
sub
pop
int3
movsl
xchg
sub
mov
jns
sbb
mov
adc
jp
addr16
int3
add
gs
cltd
dec
arpl
std
popa
fistps
enter
push
insb
fsubs
push
pushf
sbb
out
push
dec
pop
lock
sbb
fldt
sbb
dec
sub
adc
push
xor
in
and
in
in
and
and
mov
adc
or
les
adc
cmp
lret
aas
mov
popa
outsb
fsubrl
jbe
sub
pop
or
fcompl
and
sub
test
bound
hlt
stc
fcomip
mov
mov
push
into
sub
iret
mov
add
ja
or
shrl
adc
mov
movsb
outsb
xchg
xchg
flds
xlat
add
inc
pop
cmpsl
mov
lret
ret
into
jle
dec
xchg
dec
cmpsb
or
add
xchg
dec
das
or
ret
test
adc
mov
fcmove
adc
cmp
mov
jne
mov
sti
ret
lret
dec
dec
shrl
out
adc
addb
iret
nop
pop
ss
sahf
and
cwtl
lcall
js
mov
rol
xchg
pop
into
push
imul
dec
mov
cmpsb
scas
or
pop
jb
sub
dec
das
in
jg
mov
inc
not
pushf
mov
int3
xchg
stos
dec
sbb
ds
inc
jge
les
sub
push
and
and
lret
jp
outsl
push
les
sub
cmp
subb
hlt
pop
mov
xor
mov
or
sub
cmp
in
and
and
add
pushf
xor
scas
mov
mov
xchg
adc
add
mov
mov
ret
inc
mov
mov
cltd
movsb
fstpt
fsubrl
in
inc
adc
sbb
mov
xchg
aam
and
fisttps
adc
adc
push
outsl
sbb
inc
sub
add
stc
ret
pop
jecxz
mov
mov
push
jbe
push
movsl
fildl
mov
mov
mov
mov
test
leave
rcrl
pop
and
inc
push
cmp
call
mov
clc
aam
inc
fisubrs
mov
popf
push
cli
cmpl
cmp
mov
mov
xchg
jmp
cmpsl
pusha
test
clc
xchg
sahf
dec
and
xor
mov
push
xor
xor
shlb
push
int
xor
into
repnz
movsb
xchg
mov
and
imul
cmp
out
stos
repnz
xlat
daa
lods
push
push
negl
loope
xchg
test
push
inc
dec
add
les
mov
inc
mov
sub
mov
pop
adc
loop
fldcw
js
aam
push
and
ljmp
push
jo
or
xchg
add
insl
cmp
jg
test
sub
test
xor
cmovge
dec
mov
insb
call
xchg
shrl
push
sub
fimuls
nop
xchg
out
jecxz
jns
fdivrl
aaa
jae
movsl
sbb
dec
dec
and
movsl
out
dec
pop
dec
push
shrl
popa
popa
jno
add
add
shrl
mov
loope
mov
and
mov
push
cltd
or
mov
inc
test
push
jns
data16
xor
mov
xlat
imul
jmp
mov
mov
das
mov
gs
mov
pushf
inc
inc
cld
int
jae
cmpsl
lods
jns
mov
sub
icebp
aam
pop
movsl
fwait
add
jp,pt
insl
movsb
cmp
mov
enter
push
je
dec
xor
in
cli
test
fildl
sub
movsl
cmp
aad
cltd
loop,pn
popf
arpl
in
out
sbb
cs
pop
stos
js
das
es
xchg
decl
aas
lret
jno
dec
mov
iret
pop
mov
xlat
push
shl
pushf
mov
dec
ljmp
cmp
jno
inc
in
rclb
aad
adc
and
add
jp
mov
stos
mov
mov
push
jae
mov
mov
mov
es
or
addr16
or
mulb
test
jne
orl
lret
sbb
sbb
inc
push
mov
ja
bound
mov
pushl
and
cmc
xlat
lahf
dec
ret
dec
push
jns
and
fdivs
faddl
out
inc
ret
mov
nop
inc
data16
add
test
pushl
popa
popf
push
push
xchg
sbb
jecxz
push
adc
sbb
jmp
jno
in
cltd
in
xchg
rcl
mov
mov
and
sub
or
insb
push
cmp
sub
or
xchg
push
dec
hlt
aam
call
mov
dec
lcall
rcr
xchg
and
jae
cli
lret
push
dec
scas
sbb
dec
movups
repz
lods
mov
xchg
mov
jb
cmp
mov
sti
add
xchg
jmp
ljmp
xchg
popf
adc
enter
sti
push
fabs
test
xor
xlat
xchg
pop
cld
jnp
stc
repz
ret
aam
cs
jg
push
mov
and
js
add
mov
faddl
pop
nop
dec
std
data16
jp
inc
pusha
pop
enter
cli
loope
cltd
out
pop
and
pop
push
sbb
and
pop
add
rcrl
mov
sub
push
sbb
and
pop
add
rcrl
mov
sub
rcrl
mov
lods
jae
jecxz
rcrl
mov
sub
push
sbb
and
adc
add
inc
dec
daa
rcrl
pop
xor
mov
loop
lea
int
pop
insb
inc
xor
inc
adc
bound
xor
push
lds
loop
xchg
loop
repnz
mov
xor
add
jb
inc
and
mov
cli
xchg
mov
fwait
repnz
ret
push
and
push
jo
jae
ss
and
mov
ljmp
orl
inc
mov
daa
bound
leave
sub
cmp
fdivp
pop
push
loop
ja
lret
fwait
push
mov
jbe
bound
fiadds
add
ret
call
xorl
mov
mov
in
ja
jb
in
add
rclb
mov
xchg
repz
test
sub
int
xchg
repnz
bound
jb
lret
push
xor
cmp
pop
ret
jnp
test
repnz
fnstsw
push
mov
inc
fisubrl
xchg
outsl
shrb
jecxz
cmp
mov
cli
arpl
shlb
and
inc
and
mov
cmc
xchg
and
repnz
mov
xor
jnp
or
jb
inc
cmp
mov
addb
mov
iret
xchg
pop
inc
xor
addr16
jle
popw
push
cmp
rol
ret
out
xchg
out
in
mov
push
imul
ja
jno
inc
adc
cmp
xchg
lock
ljmp
rclb
inc
xor
bound
adc
jb
inc
and
mov
loop
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
and
mov
mov
xchg
scas
sbb
jl
xor
scas
mov
sbb
sar
test
xchg
add
mov
and
or
sbb
cltd
bound
mov
fmulp
xchg
adc
xor
push
ret
std
test
jmp
mov
clc
push
popa
pop
fs
cmpsb
cli
inc
jge
stos
push
call
sbb
sahf
test
arpl
mov
mov
stc
lea
rolb
push
mov
lret
push
push
push
push
push
in
mov
or
add
mov
push
adc
xchg
mov
incl
es
aam
sbb
jmp
out
xchg
scas
loope
test
sub
sbb
inc
div
pop
jecxz
stos
adc
pop
sarl
push
mov
jp
sbb
hlt
mov
xchg
icebp
stos
or
dec
stos
jl
mov
fbstp
mov
xor
outsl
jnp
fdivs
rcrb
and
push
scas
rclb
inc
cmp
out
jle
scas
movsbl
enter
jno
push
mov
mov
movl
js
aad
xchg
pop
mov
test
xchg
mov
xchg
mov
jo
jb
mov
dec
into
loope
or
mov
xor
pop
push
adc
jne
inc
imul
cmp
das
sbb
pop
sahf
rcrb
pop
data16
popf
xchg
mov
mov
xchg
jae
inc
in
in
mov
lods
testl
fs
jp
jnp
sahf
notl
sub
out
out
inc
mov
jle
inc
jne
aad
subl
lds
dec
jmp
cmp
pop
mov
cmpsb
cmp
mov
adc
and
push
sbbl
pop
into
jle
lea
add
mov
in
loope
pop
inc
and
popa
adc
insl
jno
pop
enter
add
sarb
pop
xchg
iret
dec
pop
adc
pop
and
xor
ds
ds
sub
cmp
mov
div
fwait
test
cmp
movsl
xchg
gs
int
stc
add
mov
adc
rolb
inc
pop
cltd
mov
pop
mov
popa
popa
inc
cmp
xor
pop
test
ds
pop
mov
pushf
xor
test
scas
push
rcll
sbb
cwtl
in
std
shlb
lock
outsl
jns
scas
scas
push
jmp
lcall
xor
lods
int
mov
inc
adcl
push
test
dec
xchg
cld
sbb
inc
movsl
and
sbb
sbb
push
mov
fs
jecxz
stc
jg
fistpl
out
mov
addr16
xchg
and
ja
leave
stos
xor
mov
jecxz
jl
mov
scas
in
push
mov
mov
xchg
ljmp
in
push
insl
call
mov
lcall
xor
out
popl
add
out
sbb
or
gs
fisttpll
scas
roll
xchg
aad
jnp
push
mov
stos
enter
push
jo
addr16
cmp
cmc
mov
shlb
lcall
nop
adc
movsl
adc
mov
sbb
pop
scas
xchg
rolb
pushf
push
ficomps
in
and
out
jge
into
mov
fistl
sahf
and
int
cmp
xchg
loope
jb
jecxz
into
xor
and
shr
std
add
push
ss
cmp
push
shll
insb
inc
xchg
popa
in
inc
cmc
jle
jne
icebp
aaa
idivl
fmull
jle
or
fs
addr16
dec
out
popa
push
ljmp
ljmp
cltd
call
mov
sub
sbb
dec
mov
xor
pop
push
in
insb
data16
jno
pop
ja
xchg
add
sub
sub
mov
adc
ret
mov
mov
aas
rcrb
adcl
jne
stos
shrb
or
lods
push
test
add
sbb
cwtl
fs
xor
aad
in
or
xor
xchg
mov
jp
lock
cmp
dec
sti
addr16
insb
dec
fdivp
or
fwait
and
daa
mov
xchg
sub
pop
ljmp
jo
popa
add
jle
mull
orl
cltd
insl
sub
cmp
movsl
cmp
and
in
sbb
xchg
es
add
or
out
ja
adc
std
mov
jns
mov
xchg
push
jnp
xchg
push
xorb
add
pop
sbb
sbb
xor
push
stos
or
lods
cmp
out
sub
sbb
ljmp
push
shl
bound
jbe
insb
fcmovnu
rol
mov
lret
push
inc
iret
jecxz
push
add
lods
cmpsl
cmp
lcall
int3
les
fildll
xor
xor
sbb
fcmovbe
sti
aas
ficompl
aas
jmp
mov
sub
push
mov
adc
test
or
adc
jb
ljmp
sti
into
stos
out
daa
cmp
test
adc
outsb
add
mov
sub
jecxz
jno
mov
sbb
push
push
das
sbb
push
fidivs
push
or
outsb
jbe
fsubp
xchg
jne
ds
movsb
dec
add
dec
mov
rorl
jecxz
repz
dec
push
insw
jo
and
in
out
mov
pop
xchg
sbb
sub
rcrb
xchg
in
sarl
std
sahf
loope
dec
mov
das
jle
pop
cwtl
faddl
sti
xchg
ret
in
clc
lods
aas
leave
jo
jae
sarl
leave
sub
and
loopne
mov
in
sub
testb
and
xor
stos
xchg
jo
push
sbb
sahf
mov
stos
xor
xchg
xor
jmp
xor
lock
add
sahf
jg
mov
ljmp
push
jmp
loop
dec
ret
es
push
mov
mov
test
dec
cmpsl
jne
ss
xchg
aaa
pop
pusha
scas
xor
test
testb
push
aaa
cltd
es
push
daa
pop
jp
xchg
dec
inc
sub
rep
pop
jle
mov
stc
cs
xor
je
aad
call
fisubl
inc
mov
inc
movsb
mov
xchg
rcll
or
in
jae
push
add
push
cs
in
cmp
data16
outsb
mov
xlat
xorb
push
popf
imul
test
xor
cmpsb
fadds
mov
sbb
pop
adc
dec
mov
outsl
cwtl
and
fsubl
aas
das
psraw
cmp
movb
xchg
into
cmp
cmp
jns
jo
popa
pop
ret
or
es
inc
loopne
xor
mov
int3
sarl
or
xchg
add
dec
mov
imul
adc
pusha
iret
stos
and
fwait
mov
fs
iret
push
xchg
je
dec
js
roll
aas
cmc
ljmp
xchg
int3
jge
cmp
xchg
mov
iret
sti
xchg
lea
nop
aaa
xor
push
faddl
mov
xor
enter
fnstcw
xor
cmpsb
cmp
addr16
pop
mov
int
mov
xchg
shll
pop
lret
out
mov
adc
aad
adc
xchg
mov
loope
dec
xor
jg
pop
sub
movsb
mov
jge
mov
int
jns
push
pop
lods
and
cmpl
lods
jecxz
sbb
cltd
inc
push
nop
push
or
xchg
lret
adc
dec
lods
out
fsubr
fnstenv
iret
xor
insb
inc
enter
pop
jne
in
or
xchg
outsl
or
stos
dec
outsb
ljmp
and
out
push
xor
pop
inc
hlt
clc
or
add
cmpsb
adc
adcb
mov
dec
not
mov
lea
cmpsl
mov
jp
addr16
stos
xchg
rcr
or
and
xor
movsb
pusha
mov
dec
dec
adc
xor
sbb
jl
shlb
pop
gs
sbb
out
inc
lods
jge
xor
pop
in
arpl
xchg
sti
push
hlt
in
scas
cli
cli
mov
sbb
loop
mov
xchg
lock
adc
lret
loopne
lods
lcall
sub
xchg
scas
loop
add
dec
dec
adc
movsl
sbb
cmp
int
mov
mov
ja
adc
mov
cmp
inc
jne
dec
mov
xor
add
add
adc
nop
nop
mov
add
adc
mov
xchg
or
dec
aam
mov
das
mov
pop
or
lahf
mov
sub
into
testl
leave
mov
push
or
mov
mov
mov
mov
roll
fcomps
jge
and
or
sub
mov
loope
xchg
hlt
lods
jne
arpl
or
fnsave
xor
jo
cmp
nop
or
cmp
xchg
jae
or
cmc
movsl
fisubl
dec
pop
pop
mov
mov
jl
xlat
inc
repnz
loope
push
sbb
mov
lods
in
inc
pop
leave
pop
dec
cmp
addb
xchg
jge
pop
cli
xchg
jo
idiv
int3
jns
popf
xchg
mov
dec
aas
jmp
and
jmp
dec
and
int3
stc
push
pop
dec
adcb
dec
mov
idivl
sti
les
xlat
in
loop
mov
ljmp
shr
call
leave
jae
rcrl
jbe
les
gs
adc
inc
jp
cld
sub
iret
sbb
loop
xor
xchg
xor
out
sbb
xchg
inc
out
and
cmp
sub
pop
add
mov
cli
sbb
cwtl
popa
es
lds
mov
bound
into
jbe
lahf
lods
xor
sti
adc
sar
out
int3
adc
push
test
jns
std
or
xchg
into
inc
enter
jb
inc
push
xor
popf
xchg
or
movsl
dec
les
xchg
sub
and
pop
pop
sahf
push
aad
loopne
aad
jp
aas
out
jecxz
jg
pusha
adc
jo
jl
jl
out
ficoml
lret
repnz
and
cmp
sbb
dec
les
int3
mov
dec
sub
rorb
push
pop
in
pop
xchg
stos
mov
lock
mov
pop
inc
aad
and
in
and
mov
insl
jg
lods
scas
rcrl
push
lea
sbb
add
dec
popa
shl
jecxz
movsl
dec
xchg
in
mov
stos
pop
imul
xchg
pop
mov
popa
aas
mov
iret
stos
inc
loop
ret
mov
and
ret
cs
dec
outsb
cltd
adc
or
mov
ds
pop
push
movsl
sub
pop
and
shll
in
jmp
insw
cwtl
mov
outsb
idivl
push
sub
mov
mov
mov
jmp
inc
movsl
mov
mov
out
jo
popa
mull
jp
rcll
lods
sbb
imul
xorb
cld
sahf
push
rcrb
mov
add
ja
adc
insb
dec
adc
lret
mov
leave
in
enter
subl
icebp
and
inc
xor
and
mov
data16
xchg
stos
xor
arpl
clc
sbb
push
sbb
cmp
ss
pop
arpl
ret
jge
daa
rolb
and
aas
xchg
lret
fidivrs
addr16
daa
insb
sbb
push
and
xlat
lods
xchg
popf
inc
fcompl
inc
push
in
adc
mov
call
ja
mov
or
xchg
fldl
add
push
pop
jo
add
push
and
lret
fstpt
mov
fs
popf
push
adc
push
je
pop
cli
push
or
jecxz
cmp
inc
aam
je
mov
sarb
lods
push
and
pop
add
pop
pop
mov
sub
sub
pop
jne
pop
cmpsl
mov
jecxz
inc
sub
jge
adc
movb
mov
push
cmp
or
sarw
out
jg
test
into
sub
sbb
das
push
fbld
dec
pop
jg
xor
mov
jmp
imul
xor
clc
inc
call
aas
adc
andl
xchg
adc
out
gs
in
popa
mov
int
out
jecxz
test
push
dec
jmp
mov
daa
cmpsl
aam
ss
mov
dec
xchg
loopne
aaa
mov
cmp
daa
mov
vsubsd
dec
inc
xor
xor
aam
jge
xlat
xchg
push
cwtl
into
cs
inc
lret
ffree
jecxz
xchg
nop
push
pop
mov
aad
jg
fst
mov
xor
pop
cmpsl
out
add
test
cmc
push
out
xor
or
jno
add
es
shl
add
or
xchg
clc
mov
sub
jae
mov
cmp
ret
xor
mov
js
adc
xchg
std
jae
pop
and
jle
imul
cld
in
cmp
jo
sbb
xchg
jmp
nop
mov
lds
mov
or
daa
push
test
mov
shrb
rcll
out
dec
mov
jl
dec
das
idivl
cmp
inc
adc
enter
pushf
sarb
jl
mov
stc
sbb
sbb
sahf
lahf
push
push
adc
mull
aas
lea
out
adc
add
sub
je
movsb
fsubr
push
pop
mov
mov
pop
loopne
pop
xor
jle
push
jmp
xchg
orl
lds
hlt
xchg
repnz
arpl
stos
inc
jle
xchg
test
and
lds
or
cmpsl
or
mov
sub
cmp
aaa
addr16
nop
out
adc
jle
daa
popf
movsb
cmovne
push
in
test
dec
mov
popa
es
mov
sbb
push
cld
and
inc
scas
ss
jo
repnz
sbb
pushf
push
xchg
jne
mov
arpl
test
sbb
and
or
lods
and
lds
cmpsb
jl
xor
xor
popf
xchg
or
hlt
dec
inc
shll
loope
stos
ret
push
sbb
push
jl
sahf
shll
clc
cvtdq2ps
or
lcall
daa
call
into
cmp
int
mov
and
addr16
pop
scas
je
popf
int
mov
pusha
pop
repnz
pop
mov
popf
rcll
ss
ss
xchg
xchg
fmul
push
mov
adc
xchg
adcl
test
stos
clc
add
leave
dec
xchg
and
mov
mov
loop
test
push
iret
aas
mov
arpl
pop
xchg
sarl
mov
icebp
mov
stos
enter
xchg
mov
lods
mov
ja
dec
and
jl
inc
das
xchg
cmpsl
mov
xlat
cli
aaa
push
loop
xor
cmc
add
mov
pop
and
pop
ljmp
aaa
ds
push
out
and
mov
or
outsb
and
pushf
stos
xor
insb
push
and
adc
in
int3
aad
loope
imul
in
mov
sahf
lds
sub
xor
iret
jbe
xor
addr16
cmp
cltd
addl
jmp
clc
pusha
js
xchg
aas
jae
icebp
shlb
mov
loope
sbbl
pop
sub
das
test
loopne
mov
imul
adc
loopne
sbb
add
pop
mov
cmp
movsl
jg
data16
out
push
xchg
cmp
outsl
or
jne
test
lahf
add
push
mov
xchg
pusha
into
repnz
ljmp
test
cltd
in
pop
in
inc
inc
sbb
lret
inc
xchg
in
fsubrl
into
popf
sub
pop
inc
dec
aad
shrl
aad
clc
inc
lea
lret
cmc
jbe
pop
mov
dec
xor
pop
lahf
jae
sti
or
imull
out
inc
pop
or
inc
pushf
loope
outsb
and
add
movsb
pop
jmp
fnstsw
mov
cmp
test
mov
outsl
jl
inc
sub
jnp
mov
ret
jge
negb
ret
in
std
imul
sbb
jno
add
andb
loope
inc
andb
popf
xchg
js
je
lret
in
pop
or
xor
repnz
push
pop
insl
xchg
sbb
or
sbb
repz
inc
xlat
mov
or
ja
lret
movsl
mov
xchg
lret
cmpsl
pop
shrl
sub
loope
jle
out
sub
inc
push
dec
lcall
dec
pop
stos
enter
xchg
dec
adc
das
xchg
mov
cmpsb
mov
js
lds
test
sub
sub
mov
add
test
lds
mov
icebp
and
mov
cwtl
lods
sbb
lods
or
ja
push
pop
mov
pop
bound
lds
nop
call
or
pop
jl
test
sti
jae
fldcw
add
stc
jbe
push
dec
call
or
xor
movsl
mov
or
fdivrl
xchg
pop
adc
mov
subl
pusha
mov
mov
mov
icebp
jne
outsl
add
xor
cli
and
jo
cld
pop
inc
aas
outsl
out
inc
pause
test
ja
fcmovnu
cmp
mov
ljmp
das
and
das
es
repz
xor
es
imulb
andb
out
sti
mov
ds
push
outsl
insl
rolb
mov
dec
inc
mov
negb
mov
pop
scas
aaa
xchg
lock
and
mov
sbb
scas
fwait
mov
stos
cmp
lret
jmp
in
mov
jmp
pop
adc
mov
mov
and
imulb
mov
pop
je
daa
mov
in
jle
mov
dec
leave
ret
enter
aas
insl
cli
xor
add
addr16
outsb
mov
dec
and
jmp
add
incb
in
mov
sti
mov
ss
pop
daa
out
pushf
fwait
cltd
shlb
xchg
je
int
stos
mov
leave
test
push
and
gs
mov
xchg
mov
or
enter
adc
outsb
and
and
nop
addr16
add
int3
lret
xor
sbbl
scas
fiadds
lret
pop
in
test
outsl
sbb
data16
pop
ret
xorb
jg
test
movsb
movsb
add
jno
sub
rcl
lds
or
stc
push
cmc
rcrb
fs
inc
and
xorb
aas
in
bsr
adc
cld
xchg
fmulp
or
inc
mov
mov
and
inc
test
insl
cmpb
add
loope
fwait
aad
rclb
test
push
stc
mov
int
adc
sti
cmp
ret
cmp
scas
push
add
sub
sub
cmp
popa
push
lea
das
test
cltd
lds
lods
or
cmc
xchg
call
roll
aam
push
test
repz
jns
movsb
cmp
sub
je
xor
xchg
ret
movsl
pinsrw
mov
js
xor
out
adc
lret
jo
fistl
sarb
insb
pop
xlat
xorb
xchg
inc
jne
xlat
jb
pop
sub
add
int3
inc
push
mov
ret
aas
fisubs
mov
pop
jo
popa
sbb
movsb
shll
mov
in
ljmp
sarb
in
mov
lcall
xchg
inc
adc
ja
mov
sbb
and
mov
pop
mov
add
mov
test
iret
and
dec
xor
pop
jmp
mov
call
jns
call
jnp
xor
cmp
dec
lcall
pop
decl
lret
jl
jp
loope
inc
adc
pushf
push
inc
and
loop
ret
mov
pop
scas
push
int3
sub
xor
inc
sub
adc
ja
jnp
stos
push
bound
or
xchg
or
shl
add
icebp
or
hlt
adc
jl
mov
js
inc
add
mov
mov
adc
mov
lahf
ss
sahf
pop
or
fcompl
js
test
fstpl
insl
xlat
icebp
stos
xchg
push
bound
pop
adcb
xchg
adc
or
sbb
in
arpl
jnp
enter
testb
fwait
les
mov
sub
inc
jge
loop
sub
xchg
or
mov
neg
mov
cmp
inc
stos
imul
loope
je
lods
hlt
add
sahf
pop
dec
xor
push
xchg
xchg
mov
cmp
out
daa
add
mov
push
fcoml
aaa
mov
insb
lahf
mov
push
incl
pop
hlt
xchg
adc
ljmp
stc
mov
xlat
lret
ja
mov
sub
fidivl
loope
inc
inc
insl
cmpsb
mov
mov
mov
dec
movsb
pop
push
push
mov
and
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
and
mov
loop
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
and
mov
loop
xchg
loop
repnz
mov
xor
bound
adc
jb
inc
adc
mov
loop
xchg
loop
repnz
and
lods
and
gs
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
mov
mov
pushf
sbb
add
add
push
add
add
pop
stos
add
add
inc
add
mov
mov
roll
xchg
cmp
xor
cld
add
sub
push
add
add
cld
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
mov
add
or
and
add
mov
fiaddl
add
and
add
add
add
add
add
mov
arpl
xlat
add
add
add
pusha
add
add
add
add
cmp
inc
add
add
add
add
add
movl
rolb
add
add
add
mov
ret
add
movl
sahf
add
add
add
add
add
add
add
add
addl
out
add
add
add
adc
or
loop
adc
inc
add
mov
stos
add
add
add
and
add
add
add
add
add
add
add
jnp
or
fadds
sbb
bound
loopne
push
inc
add
xlat
add
or
filds
xor
outsb
add
add
flds
inc
add
add
add
add
add
xlat
add
add
add
pop
add
add
add
add
add
inc
add
add
add
add
add
dec
add
dec
add
add
add
xchg
add
add
loop
push
xor
add
add
add
add
add
add
add
add
add
add
add
enter
sti
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
leave
add
add
add
add
mov
add
mov
pop
add
dec
add
add
add
add
add
and
gs
add
add
xor
add
add
add
dec
add
add
add
add
add
daa
add
add
push
push
add
mov
add
add
or
add
xlat
add
add
add
push
xchg
add
push
add
add
cmp
rolb
add
add
add
add
add
add
add
add
je
add
add
add
add
or
je
add
mov
mov
dec
add
add
add
add
inc
add
movl
xchg
add
xchg
add
add
add
add
xchg
add
add
out
add
add
mov
add
test
add
add
add
sub
test
sub
add
xlat
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
pop
add
add
mov
xchg
add
add
add
add
dec
add
add
xlat
add
add
add
add
test
add
add
add
add
pusha
or
add
outsl
pop
push
mov
mov
push
jae
xchg
adc
bound
and
and
stc
mov
in
repz
aaa
leave
sub
and
inc
or
faddl
frstor
xchg
mov
scas
push
xchg
insl
sub
out
xchg
add
add
mov
sti
cmp
cmp
push
dec
ds
jb
xor
sahf
mov
add
and
ja
lahf
mov
adc
rcrb
ss
mov
addr16
dec
jp
mov
imul
pop
cli
push
cld
mov
dec
addr16
out
mov
sti
pop
ss
icebp
jo
push
fwait
adc
test
notl
icebp
pop
push
push
mov
xchg
je
xor
mov
call
mov
dec
or
test
jg
mov
imul
xchg
fdivs
inc
jae
aad
rcr
into
cmp
pop
leave
into
dec
lds
jne
cmpsl
xchg
pop
pop
pop
jae
dec
mov
outsb
cmp
adc
mov
sbb
clc
in
jo
push
sub
xchg
jb
dec
jnp
sti
popf
mov
add
push
mov
push
pop
shlb
sbb
pop
push
es
addr16
mov
add
pop
mov
dec
roll
lahf
or
sbb
cmp
gs
addr16
fdiv
inc
stos
push
mov
xchg
ss
sbb
xchg
loope
add
cmpl
mov
mov
push
adc
inc
cmp
push
or
outsb
push
lea
add
jecxz
adc
subb
out
sahf
loopne
jg
sti
xchg
sbb
aam
inc
je
xchg
pop
jp
loopne
rcrl
xor
sub
jmp
fwait
and
js
stos
push
sbb
dec
lds
ds
andb
xor
or
mov
mov
out
sbb
adc
gs
stc
inc
dec
fsub
pop
sub
xor
and
mov
lock
cmpsb
lcall
pop
xchg
mov
ja
inc
sub
xor
ss
insl
pop
outsl
add
lods
dec
mov
clc
arpl
xchg
out
fwait
testl
push
cmp
int3
bnd
mov
nop
fsubrp
jb
je
xchg
sbb
outsl
aad
sbb
stc
sub
bound
ss
clc
rol
lods
jnp
repnz
add
mov
xchg
mov
push
push
push
adc
scas
shrl
mov
sub
mov
cwtl
daa
add
cmp
cmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
