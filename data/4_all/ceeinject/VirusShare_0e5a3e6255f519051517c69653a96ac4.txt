adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
add
shll
jecxz
jae
dec
and
inc
out
mov
inc
jae
mov
add
adc
and
xor
adc
dec
jecxz
repz
adcl
mov
xchg
jae
arpl
adc
arpl
xor
dec
jmp
pop
mov
jae
out
mov
lret
cmp
add
push
scas
xor
pop
mov
inc
mov
sbb
inc
mov
xor
imulw
dec
out
ret
mov
insl
adc
out
jecxz
icebp
jne
out
or
cmp
shl
and
std
ret
push
stc
and
stos
imul
mov
mov
shll
xchg
adc
jecxz
and
add
repz
adcl
pop
jae
cmpb
cmp
shr
loop
repz
cld
push
cmp
mov
jbe
cmpsl
fcmovnbe
call
adc
inc
mov
push
rcll
sbb
dec
cld
add
leave
mov
jecxz
dec
mov
xchg
cmp
pushf
inc
imul
in
jecxz
lock
ret
inc
and
addr16
cmpsl
subl
arpl
xor
or
mov
fldpi
shll
repz
push
popa
rcll
dec
cmp
addl
sbb
bound
xchg
push
adcb
in
mov
in
roll
push
mov
pop
outsl
xchg
jg
inc
mov
nop
adc
push
xchg
arpl
xchg
push
mov
add
adc
and
xor
ret
adc
and
xor
inc
adcl
mov
xchg
push
mov
add
adc
and
xor
ret
mov
loope
repz
sar
ljmp
fstps
aaa
add
mov
cmp
mov
sbb
aaa
jo
mov
repnz
or
adc
or
adc
insl
adc
sub
outsb
adc
sbb
add
out
mov
sub
cmp
mov
mov
mov
pop
in
inc
adc
int3
inc
pop
ret
nop
das
add
inc
add
cmp
int
out
rorb
push
and
cmp
test
aas
fs
sbbb
inc
pop
out
xchg
pop
sahf
in
xchg
fdivrl
push
test
and
das
pop
div
and
or
dec
jp
sub
inc
mov
inc
sub
mov
lds
lock
adc
mov
sub
push
les
mov
test
push
jl
gs
cmp
xor
scas
mov
mov
into
cmp
and
xor
jl
leave
cmp
pop
xchg
iret
adc
cs
push
sbb
sbb
xchg
sub
test
jle
or
jbe
mov
sub
pop
lea
outsb
repnz
stc
push
repz
das
pop
addl
lcall
mov
xchg
add
add
je
adc
shrl
jle
and
adc
test
cmp
pop
mov
push
or
shrl
div
push
cmp
sti
out
mov
mov
std
jp
cmp
lret
outsb
cmpsl
adc
cli
filds
xor
dec
stc
leave
or
adc
cmp
popa
fwait
mov
xor
sub
mulb
in
pop
cmpsb
in
xor
sbbl
scas
ret
inc
aas
or
inc
iret
shl
call
xchg
pop
or
fidivl
add
lock
and
or
in
sub
test
bound
inc
jno
sti
mov
movsb
fnstcw
dec
loopne
and
stos
inc
mov
sbb
cs
mov
cld
pop
mov
mov
jne
loope
test
add
jle
adc
cmp
ret
je
loope
pop
mov
insl
push
cwtl
jo
imul
sub
mov
call
inc
jle,pt
inc
adc
fsubr
nop
inc
adc
outsl
stos
ror
outsb
fcoms
xchg
pusha
das
call
test
adc
cwtl
push
adc
mov
les
jnp
adc
push
scas
lcall
xchg
das
test
nop
fstpl
mov
sub
repnz
dec
stos
shll
dec
pop
or
rclb
push
sbb
sahf
jae
orb
mov
mov
loop
dec
pop
aas
and
mov
loopne,pn
adc
in
xchg
outsl
rolb
pop
and
or
cmp
ja
cmp
shlb
scas
imul
inc
shl
das
push
lock
xchg
mov
jg
cmp
or
jnp
neg
rolb
mov
dec
jne
xor
mov
mov
xchg
cmp
stos
xchg
pop
mov
stc
push
mov
out
pushl
stos
movsb
sbb
mov
and
add
adc
mov
js
mov
inc
mull
xchg
mov
sub
loopne
cmp
inc
mov
jo
mov
call
fnstcw
adc
inc
out
imul
fildl
fistl
pop
adc
sub
repz
shll
fs
sbbb
add
cmp
xor
aam
aas
gs
mov
inc
ret
loope,pt
nop
je
push
dec
fbstp
push
stos
jp
inc
sbb
imul
add
mov
xor
imul
fmul
adc
and
mov
sub
flds
pop
cmc
jmp
rol
icebp
pushf
pop
insb
push
shlb
or
cmp
aam
or
or
xchg
loope
addr16
adc
lret
push
mov
stc
cmpsl
and
add
lods
std
arpl
lcall
adc
cli
or
sbb
and
std
xchg
lock
xor
addr16
mov
shr
and
cmpb
stos
push
jg
lock
xor
test
xchg
mov
push
insb
xchg
xchg
and
aad
or
call
mov
dec
and
cmp
pop
push
mov
mov
iret
movsl
or
outsl
lea
and
or
push
mov
sbb
cmp
add
pop
or
xchg
popf
dec
stc
sbb
bound
lcall
call
fisttpl
stos
or
sub
scas
imul
std
test
sbb
push
pop
lret
xor
or
sti
stos
outsl
sub
xchg
mov
cmp
mov
adc
add
cmp
movb
into
xchg
movsb
je
aas
mov
es
in
sub
sbb
sarl
or
mov
hlt
xor
adc
out
mov
shrb
aas
and
negb
lods
repz
aam
cld
enter
aam
test
xchg
xchg
movsb
ret
cmp
fsts
cltd
jecxz
or
pop
sub
addr16
test
popf
mov
push
add
test
mov
ds
pop
outsb
imul
inc
ficoml
xchg
sbb
sub
test
mov
dec
sbb
xchg
cmp
dec
je
adc
dec
repz
cmp
js
mov
ss
xchg
repnz
cmp
mov
and
lcall
xor
out
mov
mov
jp
sub
fld
pushf
and
inc
rcrl
pop
mov
pusha
and
adc
aas
sub
inc
and
fisttpll
or
movsl
je
sub
mov
or
cwtl
stc
sbb
xchg
adc
or
int
xchg
les
out
pop
pop
out
push
and
imul
mov
xlat
int3
in
hlt
shrl
push
lret
push
shll
cmc
jge
hlt
mov
test
sub
subb
jo
cmp
fstpt
sbb
sarl
cwtl
jmp
push
fldl
dec
int3
jb
dec
mov
mov
adc
leave
mov
mov
inc
fwait
test
mov
addl
stc
cld
fbld
sbb
aaa
pop
xor
aad
nop
cmc
jno
leave
inc
pop
add
pop
inc
lret
add
sub
jecxz
mov
imul
int
xlat
ficomps
scas
jl
xor
or
fst
mov
cmp
adc
cmpsl
cs
cltd
and
mov
lock
push
xor
add
insl
mov
rolb
sub
test
mov
stos
add
addb
cli
in
mov
sbb
call
mov
xor
xor
hlt
mov
lods
faddp
clc
mov
mov
sbb
sbb
add
lret
and
mov
inc
ja
pop
pusha
shrl
cs
adc
mov
pavgb
lods
scas
sub
inc
loope
jmp
and
fdivl
xor
xchg
shll
jno
ud0
dec
jg
inc
mov
clc
mov
jns
jno
jae
hlt
mov
sbb
jl
popa
mov
rol
inc
adc
mov
mov
or
mov
mov
jle
sti
mov
aad
pop
push
push
data16
xchg
mov
cld
stos
outsb
or
dec
sub
and
adc
pusha
movsl
xchg
adc
out
lahf
dec
jns
sbb
or
push
mov
or
out
fsubl
out
fsubl
xchg
sub
pop
push
pop
pop
jno
aas
jo
iret
lods
stos
mov
and
mov
lea
icebp
out
mov
xor
cli
js
jl
jp
and
outsl
mov
cmp
rcl
cmpsl
into
inc
mov
jmp
xor
popa
ja
adc
loopne
dec
subl
test
sbb
mov
je
xchg
sbb
movsl
mov
setb
loop
sub
and
out
test
repnz
out
xchg
add
lahf
test
sub
into
xchg
xchg
shll
mov
fnsave
and
lods
ret
push
sbb
pop
repz
jb
mov
bound
jno
out
shll
cwtl
enter
adc
add
fldenv
jmp
push
mov
mov
inc
mov
cmpsl
and
cmc
lock
mov
call
sub
sub
imul
sub
and
push
outsl
cmp
dec
inc
xor
popf
mov
popf
mov
mov
xchg
insl
jbe
cwtl
mov
dec
inc
push
add
adc
sbb
js
stos
enter
clc
xchg
movsb
enter
sahf
or
dec
jbe
mov
popf
jno
pop
mov
mov
popa
jge
std
inc
lock
inc
jl
sbb
pushf
sbb
cltd
mov
imul
insl
and
sub
cli
push
fsubrs
enter
push
or
inc
pop
inc
mov
in
rcr
jl
inc
insl
test
mov
arpl
mov
lcall
jle
jg
mov
enter
adc
test
or
aaa
shlb
mov
hlt
add
and
pop
push
mov
mov
jnp
mov
loop
mov
inc
xchg
data16
mov
push
rep
int
mov
push
mov
decb
gs
mov
jo
mov
cs
jmp
sbb
mov
scas
lcall
and
dec
mov
in
fidivrl
mov
add
shll
adc
add
jmp
ficoms
lods
popa
xchg
das
lcall
imul
decb
inc
push
cmpsb
clc
xor
aam
jne
sub
or
push
inc
sub
or
ds
rcrb
outsl
push
lret
cmp
mov
outsl
or
movsl
dec
xor
sti
push
inc
arpl
es
scas
loopne
push
sub
xor
ret
cli
inc
lock
clc
adc
fs
hlt
das
lret
loop
sbb
aas
push
rcrb
cmpsl
ret
andl
push
jb
cmp
jb
adc
jb
or
sub
notl
cmc
clc
cld
scas
or
sahf
mov
jno
xor
xchg
cltd
push
inc
aam
outsl
daa
jl
dec
sub
mov
out
mov
or
das
sub
or
out
or
dec
jb
int
push
jbe
inc
and
adc
jbe
movsb
clc
int
pop
enter
push
mov
iret
imul
mov
movsb
sbb
or
jae
shl
out
stos
mov
mov
fdivrs
ss
movsb
cmpl
int
adc
fadds
cmp
leave
mov
in
enter
in
mov
sbb
jo
adc
loop
mov
ljmp
mov
sti
cmc
dec
push
xchg
add
inc
insb
int3
repnz
xchg
mov
adc
rcrb
out
push
jns
outsl
dec
add
mov
jecxz
sbb
sbb
rclb
xchg
ret
rcr
mov
sub
jp
call
leave
shrb
push
push
mov
sbb
imul
popa
ret
movsl
jno
sub
inc
xchg
pop
inc
and
cwtl
movsl
mov
rcrb
movups
ljmp
push
imul
cmp
repnz
aas
sbb
sub
adc
cmp
dec
jle
mov
repz
mov
sbb
mov
jne
xchg
mov
adcl
scas
or
pop
jmp
ret
xchg
outsb
cmpsl
imul
aad
sub
sub
or
xchg
minps
scas
xchg
sub
loopne
xchg
inc
daa
mov
mov
fstpt
jbe
insb
mov
pop
lea
daa
iret
aaa
dec
mov
ret
push
inc
aam
and
sbb
test
cmp
xor
pop
xor
jb
jmp
test
adc
test
cwtl
jns
cs
out
fildll
push
sub
stc
xor
iret
dec
xchg
xchg
repnz
jnp
frstor
mov
adc
fcomps
ljmp
lahf
test
daa
xlat
repz
dec
rcrl
out
sub
xor
jo
adc
lahf
sbb
pop
jp
push
mov
imul
mov
jo
inc
fs
xchg
jl
sar
nop
mov
and
scas
ds
fwait
orl
adc
iret
scas
scas
xchg
and
or
popl
push
adc
sub
mov
icebp
mov
sbb
rcl
mov
mov
cmp
dec
sbb
xchg
je
and
mov
pop
fdivrs
shrb
lods
call
int3
dec
shlb
or
jl
xor
lret
or
shr
int
stos
std
adc
jnp
lock
aad
adc
les
inc
adc
mov
cli
outsb
mov
xchg
fists
popf
in
fnstenv
mov
pop
push
imul
pop
jge
xorl
test
xchg
sub
pop
pop
inc
dec
and
fs
fimull
sahf
inc
xor
leave
mov
lock
xor
mov
int
lods
dec
pop
jo
jno
xor
iret
push
push
xor
decb
sub
out
fsub
fcompl
shrb
out
std
or
lret
add
mov
xchg
daa
loop
mov
dec
mov
sbbl
stos
push
clc
cli
in
mov
xchg
popa
sub
fcompl
sbbl
push
dec
aaa
scas
xchg
out
fwait
mov
xchg
js
xchg
or
sbb
inc
add
fwait
mov
push
dec
jnp
sbb
mov
add
mov
dec
pushf
xchg
push
stos
fsubr
idivb
xlat
test
jp
inc
lcall
mov
insl
add
ror
imul
nop
int3
xchg
out
push
mov
add
or
sbb
clc
stos
lods
imul
sarb
xor
ds
cmc
fidivrl
sub
mov
std
outsb
loop
dec
xchg
add
addr16
inc
in
sbb
subb
push
sub
pop
fists
inc
mov
jecxz
in
call
cmp
shr
ss
clc
scas
sbb
mov
sub
add
loope
push
mov
aas
mov
popa
and
loope
fldlg2
mov
aaa
in
cld
mov
scas
ret
fs
fs
out
mov
dec
mov
push
push
pop
sub
lcall
xchg
out
jne
out
cmp
dec
mov
insl
mov
mov
fwait
outsb
xchg
and
data16
xchg
or
add
shrb
sahf
jmp
inc
push
imul
jb
in
mov
cmp
in
icebp
je
push
mov
int3
je
inc
dec
sub
repz
dec
push
rolb
insb
enter
lcall
push
mov
mov
mov
dec
and
rorl
xchg
popa
sarb
jbe
cltd
popf
xor
add
lahf
daa
mov
mov
cwtl
jg
pop
iret
mov
jnp
push
jns
xchg
xlat
jnp
sbb
testb
adc
test
jbe
push
out
mov
imul
adc
sbb
ss
out
fdivs
inc
push
push
jmp
daa
cmp
sub
fwait
gs
sbb
xor
sub
xor
push
mov
gs
cmpsl
pop
lods
mov
shll
mov
fnstenv
sub
rcr
arpl
add
out
loop
jge
shrl
dec
test
ret
shl
jae
mov
xor
mov
sti
popa
nop
adc
negl
add
xchg
mov
cwtl
es
aaa
sbb
pop
lret
sbb
or
mov
addr16
sbb
or
sub
test
cmp
fstl
mov
jmp
push
dec
dec
mov
imul
mov
iret
adc
iret
mov
push
icebp
call
jmp
lea
fs
lret
sub
jo
ret
dec
xchg
jl
push
or
adc
arpl
bound
mov
stos
jne
push
mov
cmp
add
jle
sub
push
xor
test
int3
adcb
loope
jl
dec
cmp
push
rolb
sbb
and
pop
pushf
fldl2t
jns
mov
frstor
test
repnz
test
out
js
xchg
adc
lcall
add
mov
cli
out
fstpl
in
movsl
jg
mov
lods
add
in
loop
cwtl
pop
push
mov
iret
fstps
sub
inc
aad
inc
dec
or
popf
scas
lods
sub
dec
insb
dec
outsb
push
mov
push
add
mov
or
adc
pusha
push
rolb
push
outsb
in
add
pop
leave
push
cwtl
or
loope
push
ljmp
xchg
push
mov
cli
mov
xchg
sub
dec
adc
fs
std
pop
fcmovnbe
repnz
dec
stos
adc
pop
aam
aam
scas
jb
aas
jns
dec
xor
xor
xor
lods
xor
push
push
fstp
mov
mov
add
and
dec
jl
gs
mov
inc
push
and
push
jmp
and
adc
scas
sahf
int
add
test
push
je
sbb
js
out
lock
cwtl
and
xchg
jmp
xchg
and
or
adc
xchg
xor
and
movsb
fcomi
cmp
in
adc
in
and
loope
aas
add
aas
xor
fcompl
int3
cmp
xor
mov
dec
mov
adc
jne
sti
mov
rcrl
xor
stos
adcb
int
pushf
fldenv
in
test
in
shrb
cmp
adc
xchg
movsb
xrelease
andl
jp
daa
or
gs
repnz
jp
push
out
rclb
insl
test
sub
push
mov
mov
in
pop
inc
in
jae
xchg
jnp
adcb
inc
inc
add
fcoml
jg
js
dec
or
sarb
test
popa
mov
les
dec
or
xor
mov
sub
xchg
inc
cmp
sbbl
insb
nop
add
lock
mov
sub
out
test
cld
add
jl
cmp
mov
cmpsb
or
or
cld
test
and
add
jns
scas
jo
ja
mov
xchg
adc
jne
test
adc
mov
mov
mov
mov
into
cli
std
shll
pop
xor
push
jg
scas
sahf
out
cmp
loopne
ljmp
cmp
nop
xchg
sbb
lods
ficoml
sahf
and
jno
enter
test
or
in
out
cmp
sub
cld
pop
in
fwait
add
pop
cmc
push
xorl
or
std
inc
test
repz
mov
cmp
dec
aad
and
idivl
fwait
sti
xchg
aam
xchg
clc
out
dec
jle
imul
mov
mov
mov
jecxz
or
repnz
cmpsb
add
mov
mov
aad
imul
cmp
lds
xor
lea
je
cmpsl
shl
xabort
xor
in
mov
dec
repnz
nop
push
lock
int3
mov
mov
xchg
hlt
adc
icebp
cmp
inc
sub
mov
dec
cs
xor
pop
cwtl
mov
ds
push
inc
aad
sbb
and
pop
mov
in
jbe
loop
inc
loop
fsubl
popl
mov
and
mov
adc
out
setbe
call
push
xchg
mov
mov
mov
jmp
jne
jnp
scas
dec
xor
ret
ljmp
mov
lret
pop
sub
and
inc
cmp
push
inc
mov
mov
xor
stos
test
or
sub
fisubrl
dec
lcall
js
repnz
or
adc
push
dec
aad
mov
sub
mov
xchg
ljmp
bnd
rorb
pop
or
adc
mov
shlb
call
adc
bound
outsl
mov
in
adc
or
js
pushf
lds
sub
push
icebp
xor
xchg
xor
pop
push
push
push
mov
jae
out
out
cld
mov
aas
pop
out
xor
mov
mov
xchg
mov
mov
stos
repz
lcall
out
sub
sti
push
out
in
mov
add
push
push
stos
orl
xor
inc
adcl
mov
xchg
push
mov
add
adc
and
xor
ret
adc
and
xor
inc
adcl
mov
xchg
push
mov
add
adc
and
xor
ret
and
roll
mov
sbbl
jae
add
adc
add
xor
ret
dec
sarl
adc
inc
addl
and
mov
mov
mov
mov
pop
in
sbb
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsl
xchg
dec
cmpsl
pop
mov
mov
push
jp
out
dec
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
out
pop
call
mov
sub
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
pushl
push
icebp
push
adc
add
or
add
hlt
jg
cmp
sub
rolb
and
dec
and
scas
inc
add
fildll
in
ret
pop
mov
mov
std
sbb
call
push
inc
stos
sahf
mov
es
xchg
lcall
cs
jb
icebp
mov
xor
rsqrtps
loop
iret
sub
jle
cmp
das
icebp
lea
out
clc
out
call
push
inc
xlat
test
nop
repz
and
dec
xor
push
lea
xlat
clc
add
fcoms
and
mov
mov
not
pop
lock
xchg
mov
push
xchg
inc
aaa
fistps
add
mull
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
call
iret
daa
fbstp
scas
inc
mov
push
sub
cmp
push
pop
mov
lods
inc
mov
lret
xor
push
lret
cmp
repnz
ret
imul
std
outsb
mov
lret
push
std
xor
fbld
aad
shrb
jmp
pop
imul
pop
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
push
dec
jnp
cmc
mov
cmp
out
mov
cltd
push
aad
fldl
pop
cmp
xor
jg
or
mov
rcll
xor
xor
dec
pop
dec
sahf
faddl
repz
test
mov
xor
xchg
mov
jnp
dec
shll
movsl
push
xor
into
cmp
scas
lahf
lret
pop
inc
outsb
dec
jmp
dec
lea
and
sbb
pop
xlat
stos
fs
mov
mov
dec
addr16
out
test
fistpl
and
jae
popa
or
pop
add
outsb
stos
mov
aam
push
fistpll
lahf
and
xor
rorl
movsb
push
mov
shll
in
add
insb
mov
push
enter
jecxz
cmpsl
rorl
inc
icebp
and
and
or
rcl
stos
jb
jl
sbb
call
xor
xchg
popa
jb
call
adc
jnp
push
inc
and
lahf
cld
mov
sub
or
popa
movsl
pop
xchg
aam
ret
cltd
mov
lock
pushf
lret
in
shr
ja
add
into
jg
movl
jmp
js
fisubrl
fisubrl
mov
push
out
ljmp
jmp
in
cmc
jl
scas
daa
or
mov
rorb
dec
in
ficomps
lret
or
icebp
sub
adc
cli
inc
and
xchg
lods
int3
test
dec
dec
xlat
mov
xor
in
rorl
hlt
pop
daa
ret
push
lret
push
mov
fsubrs
jae
xchg
add
ret
fimuls
out
push
pusha
sub
mov
mov
xlat
jp
cli
enter
dec
jne
mov
sti
and
ret
sarl
mov
scas
inc
paddsw
jae
mov
add
push
mov
sub
bnd
nop
adc
adc
popa
out
sahf
mov
sahf
jp
mov
mov
cltd
sbb
adc
jp
clc
and
aaa
or
mov
je
and
push
sub
in
insb
or
jnp
aas
lret
mov
es
mov
mov
icebp
std
ja
push
or
fdiv
inc
and
sbb
adc
inc
out
xchg
jp
mov
inc
stos
imul
dec
pop
insb
dec
or
pop
xor
stos
xchg
push
and
dec
in
popa
rcl
stos
inc
adc
in
mov
out
jg
shr
fs
pminsw
out
inc
xchg
shlb
pop
xchg
orb
dec
push
jo
leave
rcrb
loope
cltd
jne
addr16
jne
sub
ja
insb
inc
sbb
subb
adc
shll
sahf
dec
fiadds
mov
push
and
inc
clc
push
out
mov
imul
and
cmp
mov
in
call
inc
push
inc
lret
cmp
inc
out
xchg
inc
inc
mov
mov
sbb
bound
outsl
mov
xchg
and
mov
mov
pop
mov
out
mov
jge
sbb
cmc
push
or
out
ret
jns
ja
and
incb
mov
movsb
mov
sbb
std
adc
cmp
add
adc
jmp
push
jb
pop
pop
fadd
cmp
dec
mov
cmp
pop
rorb
out
and
mov
repnz
into
cmp
rol
push
xchg
dec
pop
xor
jge
xchg
into
int
nop
ljmp
and
cmp
out
mov
out
jl
mov
cmc
xchg
inc
or
js
xchg
jmp
inc
ljmp
xchg
rcrl
push
jb
and
jno
sbb
mov
mov
mov
sarb
xchg
sbb
dec
dec
nop
mov
jae
sbb
sub
je
or
orl
pop
adc
in
pushf
mov
out
cmp
pop
pop
and
jp
fucomip
fs
add
fwait
ret
pop
mov
lods
jbe
xchg
pop
pop
aam
push
xor
jmp
push
mov
jecxz
mov
fs
cmp
adc
xor
dec
rolb
or
inc
jmp
mov
jo
cmp
sahf
xchg
xor
movl
push
std
pop
lods
jg
dec
adc
adc
daa
sub
adc
sub
int3
cli
mov
add
pop
mov
sbb
nopl
cmc
jb
out
pop
int
mov
in
aad
fists
shl
sbb
jecxz
es
shll
cli
inc
jns
pop
mov
inc
dec
jbe
mov
sti
xor
or
adc
outsb
arpl
into
fcoml
mov
stc
dec
fwait
aad
xchg
pop
xor
ds
xchg
add
ror
mov
rorl
mov
push
mov
mov
sbb
xchg
gs
nop
in
and
negl
out
fwait
jg
and
push
cmc
sbb
pop
sbb
cmp
cli
jle
shr
xchg
sbb
or
mov
inc
lret
push
mov
call
shlb
enter
or
inc
icebp
inc
xor
jl
add
mov
jecxz
xchg
mov
sub
pop
sbb
pusha
sbb
push
push
pop
mov
int3
xor
mov
loopne
or
or
enter
or
loopne
ror
sti
add
js
pop
dec
add
andb
push
dec
fbld
push
inc
jg
sbb
movsb
pop
iret
jne
jno
jecxz
mov
add
or
fldt
dec
nop
mull
jmp
push
dec
insb
mov
fs
jp
cmpsl
mov
cmp
xchg
cmc
insl
xor
int
dec
xor
cmpsl
aam
int3
xor
push
adc
mov
mov
sbb
and
xor
cmpsb
ja
movsl
cs
arpl
jle
pop
jle
pop
dec
ja
shl
aad
test
nop
mov
cmpsb
js
lea
stc
xchg
or
popa
and
dec
mov
and
push
lret
fmull
xchg
sub
test
mov
and
jo
out
shrb
lahf
imul
mov
sbb
insb
mov
fistpl
xchg
mov
xor
xchg
stos
adc
in
push
sub
cmp
stc
in
xchg
sbb
popa
pop
pop
lods
mov
fidivs
mov
rorb
cmp
js
cld
dec
lret
movsl
aam
add
rcr
je
pop
jecxz
xchg
cwtl
cltd
clc
icebp
out
adc
or
mov
pop
or
mov
clc
sti
iret
in
pop
jb
push
or
les
fisubs
les
addb
mov
ss
sbb
jl
mov
int3
fnstcw
leave
aam
fs
out
rcrb
rcll
sbb
jl
fsubl
add
mov
adc
push
cmpsl
aam
inc
mov
lcall
push
shll
dec
mov
push
lods
or
jle
jmp
repz
xchg
dec
and
rcpps
popf
or
inc
sbb
mov
rorb
jecxz
repnz
inc
shlb
jns
das
les
cmpsb
sbb
cs
shll
sbb
mov
int
or
push
sub
fs
dec
mov
pop
mov
xor
fcmovnbe
jns
jae
shll
lret
push
lret
lods
dec
movsl
cmp
xchg
addr16
adc
scas
jg
leave
xchg
into
leave
mov
adc
fs
xchg
jl
pushf
fidivs
daa
xchg
daa
fnstenv
jbe
test
fldcw
inc
mov
enter
scas
ja
adc
cmc
pop
out
or
push
repz
shlb
test
xchg
adc
insb
mov
xchg
sbbb
jbe
loope
cli
daa
pop
mov
mov
out
fcomp
and
incb
pushl
mov
add
insl
push
pop
icebp
or
add
adc
pop
push
aam
sbb
out
imul
lods
movsl
cwtl
push
and
or
fdivs
pop
int
rclb
dec
pop
xchg
imul
mov
sti
pop
cltd
dec
bound
dec
xchg
push
das
add
das
fmull
inc
jle
pop
sbb
je
pop
pop
lahf
push
in
icebp
inc
jp
imul
push
sahf
add
iret
push
sbb
loopne
dec
int
das
jnp
and
cmc
fistps
pushl
xchg
adcl
lods
mov
sbb
mov
outsb
fildl
mov
jne
xchg
or
repz
mov
add
sbb
data16
jp
inc
lea
push
addb
jnp
repnz
or
scas
jmp
sbb
sub
adc
lods
mov
int3
or
mov
inc
cmp
lcall
sub
cmp
fnstcw
xor
rolb
pop
sbb
sbb
mov
pop
ja
jmp
cmp
scas
sub
ret
int3
lret
sbb
add
dec
pushf
inc
out
dec
ss
sbb
pop
add
sub
out
gs
jge
popf
cmc
inc
fdivl
mov
inc
or
inc
lcall
mov
mov
cmpsb
pop
stos
jp
mov
jg
pop
jecxz
loope
push
dec
jmp
fstpl
xchg
xor
mov
push
dec
in
into
mov
jns
int
stos
add
inc
inc
jge
adc
dec
cmp
scas
xchg
push
jb
je
jbe
sahf
xlat
in
add
xchg
out
mov
rcl
ja
out
dec
lock
mov
mov
jns
xchg
jbe
add
mov
ret
jmp
xchg
cmpsl
xchg
es
sbb
pop
loopne
and
cltd
test
xor
jae
ljmp
insb
mov
faddl
add
xchg
outsl
cwtl
es
push
or
jle
ss
out
jns
les
fistl
sub
adc
aam
iret
clc
in
inc
pop
je
ja
vmwrite
orb
addr16
pop
mov
rcrl
push
sub
mov
jge
lock
ljmp
insb
push
popa
jge
pop
lret
push
loopne
cld
repnz
cmp
test
out
pop
jbe
mov
shll
ljmp
xchg
mov
sbb
hlt
xchg
adc
mov
jecxz
imul
xchg
aad
imul
pop
inc
mov
stos
mov
sahf
dec
inc
mov
xchg
jle
leave
sub
push
lret
inc
pop
daa
pop
inc
es
shl
mov
adc
fimuls
sarl
add
sbb
ljmp
inc
lock
inc
sbb
xor
push
cld
mov
adc
popf
pusha
jp
test
popf
sub
xor
mov
cli
mov
scas
push
repnz
inc
orl
inc
mov
dec
add
adc
sub
mov
out
jno
int3
sbb
lods
cmp
push
xchg
fldcw
insb
xchg
fcmovnbe
jns
mov
sti
sub
xchg
add
pop
or
inc
ja
lods
mov
sahf
cmp
jge
aas
sbb
mov
pop
rolb
loopne
test
aad
xor
cld
ja
shll
cwtl
mov
test
inc
mov
sub
pop
data16
xchg
out
xchg
add
adc
xor
cmp
cli
add
cmpsb
es
xor
clc
xor
out
fwait
adc
adc
mov
jecxz
scas
jle
ja
sarl
ss
xor
insb
pop
push
pusha
add
orl
dec
jne
mov
dec
je
or
and
dec
xchg
inc
inc
dec
rcrb
xchg
xchg
cs
sub
jl
subl
adc
add
and
fnstenv
push
inc
das
xor
cmp
push
mov
inc
inc
and
test
ljmp
sbbb
add
mov
test
mov
insb
mov
mov
loope
add
or
jl
fldenv
loope
mov
enter
dec
je
cmpsb
jae
out
popf
mov
add
rcrl
adc
dec
test
inc
mov
sahf
xchg
and
lcall
repz
mov
sub
call
pop
mov
xchg
push
rclb
repnz
repz
int3
or
fisubrs
adc
fisubrl
inc
shlb
sub
shl
pmaxub
add
pop
push
dec
inc
push
xchg
dec
out
das
jns
add
add
rcll
jae
lcall
mov
mov
mov
in
lea
lock
and
adcl
pop
mov
scas
cmp
mov
sarl
sti
mov
sub
imul
xchg
jb
push
out
xlat
fidivs
mov
mov
lea
and
xchg
add
les
scas
in
mov
jno
icebp
aad
adc
pop
ja
movsb
push
test
mov
movl
and
lret
push
xchg
das
xchg
and
fisttps
or
pop
mov
mov
push
aam
fidivrs
sub
mov
add
push
movsb
pusha
das
divb
push
ss
jne
adc
lock
pop
jae
xor
sbb
es
jmp
sahf
pop
jo
adc
mov
popf
cmc
push
roll
xor
and
imul
inc
pop
adc
in
add
pop
add
jecxz
sub
xchg
andl
stc
insb
test
jp
jno
xchg
dec
mov
cwtl
cmp
mov
sub
xchg
loopne
aad
fiaddl
sub
out
jp
in
repnz
lret
cmp
testb
pop
hlt
mov
clc
dec
add
pusha
inc
int
fistl
pop
inc
xor
and
stc
jge
enter
neg
imull
sub
sub
repz
add
add
dec
popa
dec
mov
sub
test
push
jg
test
es
int3
cli
inc
pop
dec
push
sbb
movl
imul
jge
aas
sbb
xor
addl
test
mov
jecxz
mov
inc
push
rol
add
push
xchg
or
pop
in
xchg
adc
push
stc
les
iret
xor
mov
push
inc
mov
fisttps
idivl
adc
push
dec
push
and
jo
push
movsl
push
push
andb
or
popf
dec
lea
or
cmp
cmp
in
outsl
add
push
mov
and
push
xor
popa
lret
push
jne
lea
out
jo
lock
dec
and
or
adc
cltd
pop
dec
cmc
clc
xor
push
cld
xor
inc
cltd
iret
cwtl
xchg
in
adc
mov
stos
mov
imul
pop
xlat
loope
jno
push
push
f2xm1
add
xor
stos
dec
int
ja
sub
das
mov
mov
popa
stos
testb
gs
pop
cmp
mov
ficoml
jl
popf
repnz
or
das
fcompp
inc
add
or
repz
fisubrs
add
dec
int3
and
mov
add
scas
dec
addb
lods
in
jne
loopne
testl
dec
scas
icebp
push
inc
adc
xchg
jbe
xor
cmp
sti
shlb
sarb
clc
inc
pusha
loop
int
and
iret
imul
cmp
inc
addr16
ds
stos
mov
adcb
stos
or
pop
push
insl
lret
inc
xor
and
lret
insl
call
jmp
inc
jne
ja
push
fs
cmp
jo
jle
rorb
jle
scas
mov
xchg
ret
lret
pop
movsl
enter
cmc
lods
test
lds
jmp
es
jns
jge,pn
mov
rorb
push
stc
and
movlps
fucomp
aaa
loopne
lret
je
int
xchg
subl
pop
div
in
in
das
cmpb
sub
in
in
jp
ret
in
mov
sub
idiv
adc
mov
inc
js
loope
shlb
add
stc
pop
loope
jb
jno
cmp
outsb
mov
in
mov
in
dec
cmp
push
jg
rcrb
fists
cmp
aad
ja
in
sbb
or
mov
pop
push
out
testb
sub
dec
outsb
movsl
sarb
lods
mov
fsubr
dec
rorb
dec
pop
pusha
lods
lcall
in
mov
out
jo
jmp
and
ja
xchg
add
adc
lods
stc
fwait
push
mov
mov
inc
sub
dec
push
das
mov
mov
stc
rorl
mull
mov
mov
inc
sub
fiaddl
pop
scas
aas
jg
sti
outsb
mov
inc
mov
jbe
mov
das
sti
in
mov
adc
ret
out
lret
lret
loopne
sar
fadd
cli
repnz
xchg
and
adc
je
mov
cmpsb
mov
jb
jne
stos
not
and
ret
subb
loopne
repnz
and
das
paddd
xchg
in
stc
cmp
jnp
jge
or
cmpsl
dec
call
sbb
xlat
cmp
sub
xor
xor
aam
shlb
pop
cmp
xchg
sbb
out
lcall
push
xlat
sahf
rcrl
repnz
int
sti
jecxz
dec
xor
pop
mov
jns
ja
lods
fimuls
cmp
mov
add
test
lahf
add
lods
push
adc
mov
jbe
cmc
aaa
xor
pop
cwtl
movsl
push
icebp
sbb
pop
cmp
shlb
imul
neg
cmp
jmp
notl
stos
cmp
adc
jns
sub
enter
pop
cmp
push
dec
out
imull
popa
xchg
and
fwait
roll
lock
sbb
mov
inc
sub
jbe
jle
movmskps
bound
fcomi
in
popa
or
inc
push
pop
jmp
xor
ret
add
mov
adc
cmpsb
xchg
push
roll
pop
iret
inc
sbb
push
insb
insb
mov
data16
sahf
mov
ret
push
test
and
fcmove
add
jnp
and
jb
dec
int
jns
jl
sarb
dec
mov
cmc
mov
ljmp
loope
fisubs
inc
mov
cmpl
rcl
lock
es
jo
cwtl
dec
js
stos
out
mov
mov
add
add
pushf
inc
mov
decb
mov
cmpsl
mov
push
xor
xchg
push
pop
cwtl
repz
sbb
mov
cmp
push
xor
fcmovnu
mov
fsubrs
ret
loop
loopne
scas
fidivl
adc
xchg
lret
mov
push
xchg
int3
mov
mov
pop
xlat
clc
or
jle
mov
icebp
push
clc
js
mov
mov
adc
dec
cmp
inc
xchg
test
clc
adc
popa
dec
mov
cmpsb
pop
ret
mov
cmp
adcb
xchg
shlb
adc
dec
inc
out
push
pushf
inc
jns
mov
nop
sub
cmp
add
xor
sbb
shlb
aas
les
mov
test
les
and
ds
push
mov
xchg
xor
adc
or
andl
vcvttpd2dqy
push
mov
xor
les
mov
das
jb
lds
jns
push
ljmp
and
push
jno
mov
in
inc
pmuludq
test
xchg
lods
in
in
aaa
mov
frstor
mov
in
scas
or
push
pop
pop
jle
xor
pop
mov
mov
push
ja
lea
int
mov
sbb
nop
mov
pop
push
das
rcl
lds
inc
decb
enter
loopne
jo
insl
imul
test
sbb
adc
inc
mov
add
aad
jmp
cmp
aad
cltd
stos
jg
dec
stos
jge
inc
int
les
sbb
sub
pop
rcr
jae
jl
scas
jae
and
loopne
scas
push
shrb
sbb
jge
cmpsb
dec
push
add
call
mov
mov
xchg
dec
andl
pushf
imul
fprem1
and
lea
sbbb
pop
xchg
je
gs
inc
jnp
insl
jg
xor
or
xlat
enter
bt
jle
lcall
out
push
stc
sbb
add
sbb
sub
test
add
pop
mov
mov
js
les
jo
jl
jo
or
dec
inc
jmp
jbe
and
jnp
xchg
mov
or
jge
insl
sbb
push
enter
cmpsl
mov
movsb
mov
mov
sbb
test
aad
lea
sub
sbb
mov
jmp
sbb
jae
pop
outsb
xor
dec
mov
test
shll
add
pop
mov
aas
xlat
movntq
imul
pop
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
call
iret
daa
fbstp
scas
inc
mov
ja
xchg
dec
cmpsl
pop
mov
aas
xlat
movntq
imul
pop
mov
fmul
aaa
test
cwtl
pusha
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jnp
sahf
xor
add
adc
nopl
sub
push
out
cmpsb
mov
xchg
xchg
rol
and
xor
add
adc
popaw
push
inc
inc
and
mov
xchg
xor
rol
in
cmp
or
imul
lret
clc
out
scas
mov
mov
push
fs
std
test
inc
mov
cltd
test
jp
imull
or
cmpb
scas
xor
dec
imul
ja
push
xor
mov
push
xor
pop
and
or
mov
js
or
and
jg
into
imul
inc
ja
cltd
popa
push
xor
cmc
dec
xchg
sbb
fucom
je
ds
mov
fcmovne
jmp
mov
push
cmp
testb
test
add
xchg
mov
mov
es
jmp
jmp
aam
inc
mov
fistl
leave
out
xchg
ret
xlat
add
sbb
jbe
and
inc
decb
mov
cwtl
mov
inc
push
fs
adc
daa
xor
into
out
movb
repz
dec
scas
pop
push
jb
jle
popa
pop
aas
cmp
out
repz
xchg
test
xchg
gs
push
xor
jno
inc
inc
push
mov
cmpsb
mov
addl
shll
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addl
shll
and
and
ljmp
cmc
cmp
dec
mov
pop
bound
jne
mov
fsubrl
mov
in
sub
bound
jb
loope
stos
mov
jb
daa
outsb
iret
fstps
inc
xchg
ret
add
mov
xchg
pop
jecxz
mulb
lds
sti
clc
fnstenv
lds
mov
xchg
and
mov
std
pushf
push
call
inc
pusha
xchg
mov
adc
cli
call
adc
add
sbb
popf
xor
testb
rorl
xor
sub
jns
push
stc
inc
mov
pop
sbb
lahf
jge
pop
and
jae
cmp
push
lahf
inc
jle
mov
pop
mov
shlb
inc
pushf
std
xorb
int
sub
xor
dec
sub
ds
push
xchg
add
and
jne
dec
and
repnz
sbb
shrb
cmc
and
fcmovb
mov
leave
xchg
cmp
and
jae
mov
mov
dec
mov
lcall
outsl
mov
add
push
andb
sbb
loope
jge
fwait
gs
aaa
inc
repz
add
mov
je
xor
mov
cmp
mov
adc
ss
lods
jbe
fsubs
pop
pop
push
pop
lcall
ja
inc
scas
xor
adc
out
aaa
call
mov
xor
xchg
xor
pop
jbe
jb
xchg
std
in
lea
inc
inc
adc
xor
bt
pop
idivb
mov
je
inc
ror
in
nop
out
ja
nop
mov
mov
idivl
mov
lret
xchg
lret
cmp
sbb
adc
fstps
es
movsl
inc
das
push
jle
dec
mov
aad
inc
test
xchg
shrb
sbb
jns
or
movsb
movsb
or
xor
popf
push
adc
aaa
fists
fwait
cwtl
fstps
mov
pushf
rcrb
mov
or
sbb
sbb
add
ret
pop
mov
push
add
loop
adc
push
daa
inc
sbb
mov
inc
sbb
and
sub
jl
shlb
push
pop
iret
pop
sarb
repnz
dec
lahf
sbb
cmp
jne
jbe
in
jae
lret
imul
mov
mov
ficoml
push
cltd
add
sar
out
jno
mov
int
pop
shr
add
xchg
sub
mov
or
mov
push
insb
lds
insl
shl
sub
sub
mov
sub
pop
popa
mov
roll
xchg
mov
ja
push
loopne
inc
cmp
jle
or
push
sarl
mov
orl
adc
cmp
or
enter
jbe
sarl
xchg
mov
xorb
xchg
jecxz
xchg
pop
push
jbe
lods
push
clc
pop
mov
andb
cmp
js
cmp
pop
repz
clc
or
adc
scas
sub
add
and
mov
xor
clc
das
pushf
fsubr
pop
add
xchg
into
xchg
and
push
fdivrl
int3
mov
sahf
in
cs
cmp
les
jecxz
enter
adc
test
bound
jns
nop
pop
movsl
daa
stos
js
movsl
mov
outsl
jl
fsubs
je
repz
dec
pop
xchg
dec
movsb
jo
push
push
dec
repnz
test
xchg
inc
push
pop
testl
pushf
and
mov
fstpl
mov
cltd
sub
dec
lea
aaa
push
push
mov
inc
in
push
sahf
in
xchg
pop
dec
shl
js
fnsetpm(287
sub
xor
popa
popa
leave
pop
mov
jb
aaa
bound
scas
sub
jae
and
mov
xchg
mov
inc
push
pop
icebp
inc
xchg
js
test
and
mov
mov
add
test
int
aad
je
sbb
addb
jmp
decb
add
and
and
jp
stos
pushf
pusha
arpl
inc
or
ficoml
xor
and
pop
addr16
dec
dec
cmpsb
sub
pusha
pop
out
pop
add
test
mov
pusha
arpl
out
lahf
cmpl
movsl
in
cmp
dec
addl
jl
mov
ret
scas
xor
icebp
gs
mov
fucomi
sub
addr16
jbe
sbb
xchg
and
test
addr16
cltd
fucompp
cltd
or
jb
add
stc
cmp
imul
pop
mov
dec
mov
xor
xor
clc
addr16
cld
ds
push
sarb
outsb
outsl
loope
dec
stos
or
sub
sbb
lea
or
mov
clc
jne
pusha
xlat
lahf
insb
int
sahf
push
or
divb
pop
xor
inc
lods
jecxz
int
mov
dec
inc
xchg
shr
mov
jo
int3
mov
jmp
fnstcw
xchg
pop
jmp
movsl
adc
inc
and
mov
lea
jne
jae
sahf
orb
aam
sahf
xchg
adc
push
xor
leave
xor
sub
adc
push
jmp
jae
xchg
push
notl
sbb
insl
push
iret
pop
decb
sbb
mov
shl
jb
mov
mov
mov
ds
sbb
lahf
push
movsb
test
xchg
adc
inc
out
xchg
int3
push
mov
iret
xor
jl
shll
inc
pop
jmp
jp
and
imul
fisubl
in
sub
mov
int
or
sbb
dec
xchg
popf
leave
rclb
cmpsb
cltd
lcall
js
mov
cltd
mov
jecxz
mov
jle
dec
js
jns
jge
cmp
out
cltd
pop
push
nop
int
test
sbb
inc
cmpsb
mov
mov
iret
mov
inc
mov
pop
push
sbb
dec
das
mov
mov
pop
aaa
pop
jne
inc
es
data16
les
fdivl
sub
cmp
or
cli
test
push
sbb
inc
sti
pop
or
inc
inc
jno
mov
fiaddl
je
int
fisttps
adc
sbb
lock
or
ds
negb
jl
push
fnstsw
cmp
mov
loope
xor
jge
inc
aaa
mov
shlb
shl
dec
sub
repnz
cmpb
or
dec
mov
push
bound
sbb
adc
mov
mov
ljmp
push
scas
push
fisubl
mov
cld
mov
ja
inc
jb
ror
adcb
pop
popa
fcoml
adc
imul
inc
inc
sarl
add
je
sbb
shl
push
shl
ljmp
repnz
sub
jg
cmpsb
bnd
push
xor
pop
cmp
pop
scas
dec
aad
loop
imul
and
push
std
mov
sbb
push
pop
pop
imul
sbb
cwtl
arpl
pop
pop
xor
and
adc
xchg
xor
popf
lock
arpl
mov
mov
adc
pop
rclb
pusha
test
and
lahf
gs
lods
jl
pusha
xor
xchg
daa
dec
out
lock
add
js
test
cs
xchg
fbstp
mov
pop
jno
scas
xor
and
mov
test
xchg
add
jae
gs
or
sbb
outsl
mov
dec
push
dec
fsts
pop
pop
repz
mov
sub
nop
pop
cltd
insl
rcrl
cli
push
xchg
mov
hlt
adc
cmp
add
jmp
inc
cli
inc
or
jo
cmp
jp
xchg
mov
adc
enter
cmp
xchg
dec
pop
outsb
int
repz
unpcklps
mov
inc
aas
jbe
imul
call
jns
movsb
fwait
push
pop
pop
hlt
fidivl
xchg
in
int
push
cmp
pop
add
dec
jb
push
ss
loopne
pop
popa
or
in
testb
je
orb
sarb
sbb
jecxz
stos
cltd
insl
insl
addr16
frstor
cltd
gs
inc
jmp
push
pop
dec
test
adc
test
imul
into
sub
movsb
lods
xchg
push
jg
push
rclb
push
sahf
sahf
cmp
and
xorb
jo
test
xor
test
lcall
arpl
lret
xchg
scas
jae
mov
push
or
dec
addl
add
rolb
xchg
popf
add
jle
mov
ds
pop
jmp
and
aas
lods
jae
jns
insb
sti
shrb
xor
jo
pop
dec
sbb
outsb
mov
xor
adc
sti
je
arpl
test
popf
and
mov
or
in
cltd
loope,pt
and
and
sbb
pop
pop
lret
push
dec
data16
xor
pop
inc
inc
sub
inc
mov
ljmp
cs
out
leave
ret
xchg
push
in
imulb
adc
xchg
or
in
scas
cmp
mov
call
movsb
mov
push
in
xchg
aad
inc
mov
xor
pop
gs
aaa
adc
pop
sub
aad
leave
push
addb
data16
mov
mov
call
orb
loope
leave
and
pop
mov
aam
popf
adc
cmp
adc
jbe
jecxz
decb
cmpsl
inc
jno
pop
jmp
daa
and
or
stos
push
add
mov
sub
jge
mov
mov
fs
ret
lea
or
repnz
pop
scas
aas
push
js
push
or
push
adc
adc
mov
sbb
sbb
mov
rorl
jge
mov
movsb
addb
arpl
shl
ss
xchg
gs
add
xchg
mov
lock
adc
lahf
scas
test
int3
mov
xchg
and
adc
xchg
mov
roll
jns
arpl
pushf
out
loop
push
cwtl
das
sbb
jp
ss
enter
cmp
jno
loope
and
clc
and
pusha
aam
aam
jecxz
int3
inc
sahf
jns
inc
push
cli
xchg
pop
mov
xchg
sub
mov
push
imul
daa
outsl
lcall
test
test
push
data16
inc
cmp
jno
pop
xchg
xlat
mov
add
pop
mov
sbb
into
dec
test
into
inc
idivb
jl
push
pushf
imul
jno
daa
mov
jno
sub
push
pop
aad
sub
inc
add
adc
push
jb
loop
xor
sbb
ror
pop
adc
push
imul
je
lods
lds
call
ljmp
push
or
adc
push
ja
push
jmp
and
xchg
jge
adc
addl
adc
cld
cmp
test
push
xchg
aaa
pop
pusha
test
arpl
repnz
jp
xor
and
pop
lahf
in
mov
sbb
imul
mov
xchg
fwait
sbb
mov
mov
cmpsb
and
arpl
das
lahf
lods
das
jge
loopne
adc
jge
dec
repnz
dec
jge
sub
mov
mov
sti
and
in
test
insl
iret
pusha
popa
nop
mov
sbb
pop
and
inc
jnp
push
leave
in
leave
sub
sub
test
cmc
xchg
xchg
add
inc
int3
or
and
sbb
loopne
addl
fucom
aam
push
out
insb
cmp
cs
cmp
adc
test
cli
jb
jg
ret
std
jecxz
nop
lahf
enter
rorb
mov
arpl
std
sub
mov
add
sarl
nop
sbb
xor
mov
mov
into
dec
les
dec
pop
dec
data16
push
loop
pop
cmp
sub
fidivrl
mov
sarl
adc
scas
lret
cmp
orb
pop
or
scas
aaa
sbb
sbb
adc
into
adc
sub
in
gs
ljmp
or
aaa
dec
mov
and
push
adc
mov
lods
mov
push
out
xchg
or
std
sbb
or
xor
mov
fistl
nop
out
std
les
dec
arpl
fwait
popa
nop
pop
outsl
sub
cld
into
movsb
movsb
xor
inc
jge
mov
cmp
push
cld
int3
xor
je
mov
and
mov
jnp
dec
dec
fs
lret
push
arpl
cld
sub
and
stc
fmuls
cwtl
outsb
jae
jmp
lret
lock
cmpsb
or
aas
fldcw
test
cmp
imul
loopne
lds
adc
mov
pop
xchg
out
mov
pop
sbbl
repnz
mov
sub
sub
inc
jb
cmp
pop
fstl
and
jne
mov
movl
jnp
add
out
iret
test
dec
shr
out
repz
mov
mull
sahf
hlt
sti
inc
lds
scas
out
int3
das
xchg
adc
xorb
adc
sub
adc
sbb
jmp
into
dec
gs
mov
clc
jns
je
repz
cltd
int3
outsl
fucom
int3
dec
push
adc
dec
cld
lock
aad
insl
pop
shrb
dec
movsb
hlt
or
add
mov
xor
sbb
icebp
stos
fisttps
xor
sti
jne
and
insl
inc
or
pushf
sbb
pop
ss
testb
xor
xchg
mov
jbe
mov
adc
das
dec
dec
jge
into
push
cltd
into
mov
lcall
outsb
ja
movsb
aam
outsb
push
mov
jbe
lods
dec
add
mov
adc
xor
xchg
pop
outsl
sub
and
call
jb
xchg
sbb
xor
cmp
je
dec
and
inc
imul
add
shll
jecxz
xchg
mov
and
fiadds
les
js
push
jo
cmp
xlat
inc
dec
xor
xor
push
in
jbe
mov
jl
addb
cmpsb
push
adc
mov
je
or
test
cld
xor
shll
pop
adc
jns
cs
or
pop
es
jnp
inc
in
lds
loop
int3
mov
xchg
adc
aam
aas
dec
inc
sti
and
mov
mov
sti
scas
xchg
mov
shll
addb
add
xor
sub
mov
bnd
sbb
xor
dec
xor
push
jno
enter
lock
mov
mov
std
insl
fwait
notb
pop
mov
rcl
add
push
repnz
sarb
and
and
dec
mov
xchg
cs
or
imul
cmpsl
andb
loopne
test
mov
mov
inc
xchg
push
movsl
bound
xchg
inc
enter
scas
orl
dec
repz
cs
fsubl
stos
sbbl
or
fwait
out
rorb
mov
into
scas
lock
dec
adc
daa
out
adc
mov
inc
jge
cmp
jg
arpl
push
dec
mov
cwtl
and
and
out
cmpsl
fnsave
insl
add
xchg
data16
loope
addb
and
test
jmp
mov
inc
shl
dec
lods
sub
and
mov
mov
xchg
aam
js
push
adc
pandn
ret
sub
lret
push
push
push
lods
xchg
fnsave
sbb
frstor
xor
sub
popf
in
fdivrl
arpl
adc
mov
mov
lea
push
sti
sahf
or
inc
sarb
jl
mov
and
mov
cmpsb
arpl
or
bound
xchg
add
ljmp
out
sub
pop
pop
and
popf
scas
xchg
add
add
push
call
mov
mov
and
enter
xchg
in
cmp
pop
loopne
pusha
hlt
imul
fnstsw
rcrl
fstp
psubusb
out
mov
and
and
sbb
cmc
lret
iret
adc
sbb
push
loop
aas
jbe
movsb
insl
inc
dec
outsb
imul
cmp
icebp
bound
jge
push
sub
aam
in
xchg
sub
inc
jbe
xor
repz
xlat
rorl
jmp
push
fnop
push
sub
jbe
inc
adc
and
fdivl
jbe
jns
lret
outsl
dec
int3
add
insb
pop
xchg
or
jmp
inc
fisttps
jl
add
add
sahf
je
lea
sti
fidivrs
pop
adc
es
cmp
xorl
pop
mov
icebp
bound
push
mov
in
outsl
adc
cld
cwtl
js
in
fdiv
sub
mov
cmpsb
cltd
sub
push
and
mov
int3
xor
jmp
inc
pop
and
mov
repz
hlt
fisubl
in
sub
dec
addr16
lods
hlt
jmp
push
inc
add
clc
daa
sub
lcall
insb
jne
jae
mov
ficompl
adc
outsl
scas
popl
out
jae
shlb
mov
pop
stc
xchg
sahf
mov
push
push
hlt
push
mov
pusha
jnp
and
test
clc
ja
add
mov
pop
lods
sub
mov
movsb
inc
repz
out
je
adc
push
xchg
mov
fdivrp
xchg
mov
pop
enter
and
je
sti
pop
cmp
mov
xacquire
je
jno,pt
dec
out
fwait
adc
cmp
xor
and
pop
adc
adc
jmp
push
adc
jl
inc
in
inc
cmp
test
dec
fsubr
cmp
arpl
inc
sahf
push
xor
lahf
mov
jg
shl
cwtl
cmp
push
iret
lret
inc
clc
adcl
add
or
into
aaa
jb
jo
sbb
xchg
bnd
sbb
js
lods
push
scas
out
sbb
scas
mov
pop
mov
std
xchg
cmp
aas
inc
inc
cmpsb
pop
daa
shlb
fdivs
out
xchg
lods
or
or
sbb
pop
lahf
jmp
push
movsl
pop
sbb
movsl
dec
jns
sahf
cmpsl
sti
aam
cli
jg
xchg
jg
mov
pop
loopne
jge
outsb
scas
jecxz
dec
pop
div
in
loope
rcl
enter
mov
inc
adc
cmp
cmp
xchg
or
imul
mov
js
fwait
cmp
std
mov
xchg
test
jge
inc
inc
stc
fwait
test
xor
out
or
mov
out
es
mov
adc
test
add
neg
aas
clc
or
mov
fmull
cltd
pop
push
fistl
aam
jno
fsubl
push
add
subl
lret
add
push
add
fdecstp
movsl
subl
leave
xchg
loopne
ret
daa
jne
mov
in
cmp
ret
cmp
das
fsubrl
sbb
cwtl
popa
shrb
sarb
mov
shlb
xchg
in
rcl
sub
sub
and
popf
pop
pop
inc
test
std
inc
loope
add
sbb
add
jmp
push
inc
loop
gs
mov
lahf
add
xchg
icebp
push
ds
iret
jns
adc
sub
lea
adcl
jmp
pop
push
xlat
jne
pop
mov
mov
push
adc
fldl
fstl
mov
inc
mov
sbb
out
xchg
outsl
iret
and
mov
out
pop
sbb
inc
imul
xor
mov
cwtl
mov
sbb
push
icebp
insb
imul
sub
fnstsw
inc
push
xchg
mov
jne
sub
mov
and
sub
add
aad
mov
outsl
push
gs
jmp
ljmp
mov
mov
in
pop
jns
and
pop
loop
movsb
mov
add
sbb
cmp
add
lea
sub
xor
jg
insl
ret
add
or
lea
mov
add
stos
cmp
cmp
pop
xchg
xor
ret
xchg
lahf
insb
mov
orb
dec
cmpb
pop
dec
ror
jl
sub
loope
je
mov
rorl
jbe
sub
out
adc
call
push
gs
in
ror
inc
in
xlat
sbb
cmpsb
in
jge
xchg
ja
sbb
sbb
in
fwait
lahf
insb
mov
repnz
rolb
loope
pop
cwtl
pop
leave
shrl
fpatan
sub
shr
dec
aad
cld
cmp
push
bsf
jbe
test
enter
and
ret
adc
xor
mov
outsl
imul
push
mov
ret
cmpsl
xor
popa
data16
inc
inc
push
mov
cmpsb
mov
addl
shll
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addl
shll
and
adc
bound
inc
inc
push
mov
cmpsb
mov
addl
aad
and
adc
jbe
push
inc
xchg
mov
pop
sbb
xchg
subl
scas
sbb
push
cmpsl
pusha
xlat
jo
pop
xchg
arpl
add
shrb
rolb
xor
lret
mov
push
notl
push
xlat
jo
add
xor
test
inc
sbbb
daa
mov
push
dec
and
push
out
cmp
fildl
test
shll
arpl
mov
cmpsb
sub
push
mov
adc
inc
cmp
sub
hlt
out
insb
sub
hlt
frstor
mov
out
sub
push
das
fwait
pop
test
pop
cmp
js
pushf
cmp
mov
dec
pop
adc
addr16
ret
ja
push
ud1
aad
or
ja
nop
testl
and
push
xor
hlt
repnz
inc
add
call
scas
sbb
sub
push
test
cmpsb
xor
jnp
push
das
xor
mov
mov
pop
xchg
xor
or
das
mov
fwait
push
shl
xchg
and
aaa
pop
xor
bound
mov
cmpb
pusha
mov
or
fnstenv
iret
clc
push
jmp
leave
mov
divl
stos
adc
and
pop
shlb
and
jo
dec
lds
outsb
inc
mov
mov
je
jle
dec
jne
ret
adc
js
daa
shlb
je
test
add
sti
adc
shlb
loopne
lock
xorb
daa
mov
notl
pusha
xlat
jo
add
xor
loopne
lock
xorb
daa
mov
notl
sub
sarb
lahf
ds
sbb
cmp
and
les
in
loope
lods
pop
dec
repz
xchg
insl
xchg
addl
push
mov
shlb
inc
or
mov
dec
icebp
sar
jne
adc
pop
or
cs
int
add
roll
and
sbb
inc
and
rorl
fsubp
sarl
mov
mov
fimull
inc
adc
ret
jmp
and
gs
mov
mov
adc
jb
ror
movsl
out
mov
xlat
insl
scas
xor
mov
sbbb
mov
loopne
sahf
sub
stc
xchg
add
cli
ja
cmpl
nop
fucomp
jne
and
or
insl
xor
push
and
rcr
pop
pmaxub
mov
scas
cmpsl
nop
and
sub
sbb
in
int
cmpsb
add
pushf
cmp
cmpsb
mov
push
das
adc
andl
cmp
sbb
imulb
shl
xchg
aas
dec
sub
repz
or
mov
cmp
fdivrs
push
dec
inc
add
sub
xchg
jmp
clc
out
pop
ljmp
hlt
bound
dec
mov
push
sbb
xor
cmpb
or
js
dec
push
sub
adc
jns
adc
sahf
add
dec
ror
push
pop
inc
out
add
sbb
lahf
daa
out
gs
or
rcll
add
test
out
daa
popf
push
push
dec
jno
mov
mov
out
fxch
mov
mov
rcrl
mov
and
add
les
lds
or
popf
xchg
xchg
xchg
mov
mov
hlt
fldcw
xorl
mov
jecxz
push
pop
jle
ss
mov
movsl
inc
jmp
icebp
sub
fidivl
rcrl
sub
call
outsb
and
mov
enter
in
and
dec
adc
xor
pop
adc
imul
push
push
jo
mov
arpl
cmpsb
subb
negl
sbb
ror
inc
pop
mov
jge
or
jl
dec
xchg
lret
pop
push
fistl
daa
pop
gs
inc
rcll
mov
out
out
jno
pop
loope
push
and
pushf
jns
lock
test
sub
lock
iretw
sbb
ljmp
xor
je
dec
mov
push
mov
std
lods
cwtl
das
icebp
pusha
adc
lahf
xlat
mov
incb
or
orl
cmpl
or
push
pop
cmpsb
mov
xchg
aam
sub
pop
push
movsl
mov
jbe
enter
popf
int3
sbbl
in
push
cs
clc
imul
inc
push
jae
lcall
lock
jecxz
ret
and
push
loop
ljmp
mov
shlb
daa
int
shrb
stos
clc
push
ds
and
xchg
aam
xor
xorl
cmpsl
mov
sbb
xor
in
add
test
repz
aam
mov
daa
out
mull
je
int3
movsb
mov
dec
test
ret
sub
cld
and
jae
subl
jne
xchg
icebp
lea
stos
data16
insl
fadd
xchg
bound
xlat
push
mov
mov
pop
adc
pop
jae
mov
push
mov
mov
lock
jbe
ljmp
pop
js
jae
fbstp
pop
or
leave
mov
dec
push
cltd
xor
insl
jae
xor
insl
jne
or
and
lods
cmp
and
xor
mov
outsl
mov
sub
add
or
push
mov
xor
push
pop
lcall
xchg
movsl
xor
repnz
sub
xchg
lods
mov
in
add
aas
orl
cmp
fld
xchg
xor
or
pop
imul
daa
push
mov
add
shlb
in
cmp
cmp
jnp
or
or
sahf
loope
filds
movsb
xor
cmpsb
incb
ficoml
fs
pop
cmp
pop
sub
pop
data16
jl
jno
push
jle
xchg
adc
dec
cmp
bound
mov
in
push
icebp
scas
mov
rclb
scas
dec
scas
fstl
lea
mov
jle
dec
fisubrs
ret
test
icebp
pop
mov
push
mov
inc
repnz
cmp
and
push
out
add
enter
or
mov
in
inc
or
jmp
mov
insb
arpl
adc
loop
sbb
xchg
mov
sti
adc
jb
dec
and
mov
inc
call
imul
xchg
stc
repnz
jp
lcall
push
arpl
stc
jno
pop
shl
inc
aam
test
add
inc
and
test
imul
cmpsl
mov
int
nop
jge
adc
in
hlt
pusha
cmp
xor
mov
sbb
and
mov
insb
dec
inc
sub
jbe
fldcw
or
ss
or
xor
add
xchg
xchg
filds
loop
lcall
push
sti
popa
add
pop
xchg
xchg
jg
pop
aas
xor
cld
pop
inc
inc
out
add
jmp
addr16
mov
enter
push
or
jecxz
pushf
adc
neg
mov
js
cmc
int
arpl
fstpl
fldt
pop
push
sbb
popf
jge
jne
mov
movsb
push
or
test
mov
mov
pop
stc
push
cld
fbld
pop
xchg
push
and
pusha
mov
adc
aam
pop
fwait
mov
stos
or
mov
fs
mov
and
and
and
leave
xor
js
cltd
addb
std
sub
andl
pop
aam
mov
iret
mov
push
bound
mov
push
arpl
sub
aam
push
fidivs
pop
cmc
scas
pop
lcall
pop
dec
adc
pushf
mov
cmpsl
xchg
movsb
daa
adc
jno
les
fldenv
out
and
addr16
outsl
add
lahf
push
dec
pop
sub
fsubrs
pop
test
imul
ljmp
test
ret
push
xlat
call
scas
or
out
or
xlat
inc
data16
cltd
cmpl
mov
mov
mov
jg
jbe
fldenv
orb
push
or
adc
lods
ljmp
jmp
cmp
lea
push
imul
je
pop
sub
pop
movsb
or
scas
stos
adc
icebp
push
push
iret
xchg
popa
mov
ds
and
and
mov
das
xor
dec
mov
sbb
shlb
cmp
mov
es
fidivs
inc
sub
adc
jge
push
mov
dec
sarl
das
push
cmp
mov
push
pop
aad
sarb
mov
xchg
fisttpl
mov
and
pop
add
int3
cmpsb
outsb
xchg
into
add
shl
jae
loopne
lock
out
mov
clc
cmp
pop
pop
add
jle
cmp
mov
inc
je
rolb
xor
inc
icebp
xchg
fdivrp
cmp
push
pop
aad
xor
movsl
vmovss
insl
arpl
fsubrp
inc
outsl
mov
out
push
jmp
pop
je
xchg
adc
sbb
adc
sub
cmp
mov
call
or
xchg
rorl
push
mov
lods
inc
mov
lds
loope
sbb
ss
mov
sahf
jecxz
sub
push
mov
mov
jnp
push
shr
scas
jnp
xchg
loop
mov
jb
psubd
cwtl
inc
xor
sbb
insb
mov
hlt
adc
cli
arpl
scas
jl
mov
arpl
scas
jnp
scas
mov
xor
outsb
aas
push
and
jbe
test
ss
stc
or
lahf
mov
cltd
mov
jo
xchg
cmp
inc
orb
sub
in
pop
in
stc
mov
mov
or
mov
mov
cmp
sahf
sub
mov
pop
into
outsb
popa
popf
es
loope
das
scas
sti
and
lods
pop
popa
gs
fwait
cli
sarb
xor
mov
pop
outsb
rorb
or
sbb
sbb
pop
and
push
stos
inc
or
pop
decb
call
cs
shrb
enter
xchg
leave
in
cltd
dec
jns
popf
pmulhuw
inc
push
inc
cmp
call
sarb
mov
push
das
cmpl
in
lea
mov
pop
cmpsl
xchg
cmp
adc
or
test
fdivrl
jbe
mov
dec
repnz
iret
nop
cld
repnz
fcoms
push
lret
ljmp
ret
pop
xorb
mov
addl
inc
mov
shrb
repz
fcoml
xchg
in
mov
nop
les
lds
and
fimull
les
inc
sub
enter
lods
push
xor
loope
mov
call
mov
fistpll
cli
in
cmc
mov
dec
mov
lcall
pop
mov
in
or
fmuls
add
and
insl
std
in
mov
stos
loope
pop
pushl
push
sub
sarl
cltd
inc
jno
inc
add
inc
add
nop
jg
subl
lret
xchg
cmpsl
in
orl
push
aad
add
mov
adc
adc
popa
rcll
inc
inc
mov
pop
into
lods
adc
fs
xor
iret
jge
lret
imul
dec
sub
inc
repnz
jnp
push
aad
cld
out
mov
daa
push
cld
fnsave
hlt
pop
insb
insb
sub
test
out
loopne
loope
jmp
xchg
inc
push
adc
cmp
jecxz
push
inc
xchg
aaa
fdivl
mov
jmp
inc
sub
frstor
push
insb
ficomps
adc
add
mov
push
mov
cmp
xchg
fldl
aad
cmp
sub
jo
adc
insb
pop
in
lds
push
lea
in
aas
addr16
pop
xchg
push
jbe
jge
inc
mov
cmp
pushf
dec
dec
mov
adc
fnstsw
mov
pop
cs
lret
ljmp
mov
cmpsb
dec
adc
stc
rorb
hlt
add
in
adc
add
push
and
or
push
icebp
stc
mov
xor
je
push
jno
sub
jecxz
adc
add
and
jle
add
xor
xor
mov
and
mulb
or
add
fisubrl
mov
push
insb
testb
lds
push
cmpsl
andb
arpl
jno
and
mov
xor
lea
sahf
fisttpl
adc
push
push
rcrb
mov
test
loopne
cs
addr16
sbb
pop
push
inc
arpl
stos
jbe
test
aaa
pop
xchg
mov
sbb
pop
lods
std
aaa
test
sbb
and
in
sbb
fstpt
ret
push
xchg
xchg
sbb
inc
out
mov
cs
mov
dec
inc
lret
sbb
pusha
ret
push
dec
cmpsb
sub
xchg
sub
pop
sbbl
dec
and
lods
mov
inc
adc
push
rcl
or
or
inc
imul
add
incb
imul
xchg
cmpsl
sub
sub
lret
cwtl
sarl
es
lahf
ljmp
int3
ficompl
mov
stos
movsl
sbb
loopne
pop
xor
sbb
daa
cltd
mov
int3
dec
lret
fnstenv
dec
and
push
aam
lds
scas
stos
sbb
daa
dec
cmp
cmp
repnz
pop
sti
cmp
xor
mov
ljmp
cmp
push
jno
pop
mov
xlat
cli
sbb
dec
call
push
jmp
ss
sbb
adc
movsl
popf
cmpsb
les
cmp
fcomps
rcrb
mov
loop
outsb
out
mov
mov
xchg
test
inc
stos
fsubs
movsl
pop
out
cmovg
xor
mov
sbbb
pop
pop
scas
fistps
cwtl
cmpsb
rorb
push
js
sbb
mov
adc
jmp
inc
sbb
jo
nop
mov
pop
arpl
aad
inc
and
xor
add
fstp
daa
out
fcompl
cmp
sbb
xchg
sbb
add
shl
cmp
cli
xor
fistps
add
inc
fucomi
ljmp
mov
out
push
ror
rcll
pop
push
jg
cs
nop
shll
mov
notl
xchg
jl
dec
popa
repnz
rclb
xchg
mov
inc
lock
in
pop
imul
xor
pop
inc
mov
add
mov
jbe
stos
repz
in
repz
inc
fsubl
dec
and
mov
dec
out
mov
dec
add
pushf
mov
adc
mov
jecxz
jno
lahf
imul
sahf
mov
fstpt
cmp
lahf
std
into
scas
lret
inc
push
test
mov
add
arpl
sub
out
aas
iret
fbstp
lret
stc
scas
cmpsl
rcrb
jnp
loope
adc
sbb
cmp
sbb
and
xor
jb,pt
pop
adc
fists
sbb
adc
insb
fld
inc
out
dec
xor
mov
xor
lock
jmp
add
push
imul
fscale
and
lods
and
jmp
and
lahf
xor
leave
push
and
push
mov
jnp
movsl
rcrl
mov
adc
cmp
dec
mov
test
incb
test
push
cmc
cmp
iret
test
dec
fs
and
add
jne
test
mov
xchg
adc
test
pop
cmpsl
aaa
xor
pop
cmc
mov
ret
fdivl
lcall
jle
ja
cld
shlb
mov
xchg
dec
mov
iret
pop
sbb
xchg
cmc
leave
fildl
addr16
inc
stos
xchg
jl
pop
testb
enter
ret
in
mov
adc
rolb
test
int3
or
dec
cmpsl
or
cld
gs
iret
sbb
and
xor
dec
xchg
cs
push
jge
out
xchg
mov
cltd
into
push
xchg
mov
and
js
shlb
rolb
xchg
sarb
xor
dec
xchg
pop
lret
rcll
xchg
push
orb
mov
xor
movsl
push
cld
push
pop
inc
lds
inc
pusha
out
negb
mov
sarl
jnp
int3
cmp
int3
push
ja
aas
sub
pop
xorl
cmp
adc
inc
in
pop
and
sbb
adcb
lods
stos
ljmp
xchg
mov
push
adc
push
cwtl
dec
out
leave
ret
cmp
xor
xchg
lret
lods
push
xchg
inc
pop
leave
sbbl
outsb
lods
xor
jp
push
ljmp
mov
into
loope
push
js
and
lea
mov
adc
jecxz
dec
rclb
out
and
or
or
je
mov
mov
push
inc
mov
adc
ret
cmp
es
jns
out
insb
cmp
test
imul
insl
push
and
outsl
subb
mov
insl
xchg
add
fsubrs
pop
pop
out
stc
jle
add
hlt
loop
sub
test
jb
or
stc
xor
jbe
sahf
push
out
push
bound
inc
sub
xchg
jmp
decl
jg
sub
mov
mov
sbb
and
in
pop
inc
movsb
les
ret
shrb
xor
shlb
push
mov
ret
jno
push
shlb
mov
shrl
sbb
pop
test
adc
and
inc
out
ret
adc
lods
ss
icebp
add
cwtl
mov
add
rorl
loopne
mull
out
pushw
pop
inc
sbb
push
pop
dec
push
js
stc
shll
repnz
jno
pop
xchg
cmp
jle
cmpsl
es
sbb
stos
in
test
cmp
cs
mov
pop
mov
rorl
or
sar
repnz
ud2
lods
xchg
loopne
mov
xchg
mov
and
sub
adc
push
incl
push
mov
and
mov
cwtl
inc
push
divl
cwtl
sbb
push
into
jmp
lahf
int3
pop
xchg
js
jmp
pushf
sbb
test
fisttpll
add
gs
push
mov
in
dec
sbb
shlb
dec
pusha
add
sbb
adc
call
ror
push
es
pop
dec
stos
insl
mov
outsl
jmp
or
adc
test
test
ret
pop
mov
add
or
and
pushf
xchg
sarl
ds
daa
push
das
adc
or
aaa
aaa
sbb
xor
inc
popf
jmp
jb
in
cs
popa
les
jmp
pushf
pinsrw
rcr
jo
sbbb
popf
vpavgb
cmp
inc
inc
ret
icebp
cmpsl
sbb
ja
sub
ror
push
inc
adc
lods
test
jge
mov
arpl
jecxz
mov
aas
sbb
in
inc
call
jmp
gs
mov
roll
js
das
ja
mov
neg
cli
out
xchg
pop
mov
fildll
push
xor
adc
stos
nop
mov
orb
sahf
add
pusha
sbb
xchg
outsb
inc
and
repnz
fscale
out
xchg
loope
adcb
lahf
add
add
xor
xchg
adc
loop
xor
mov
and
and
push
mov
jbe
push
mov
ljmp
cwtl
jno
xlat
xor
dec
jp
add
aas
insl
ss
inc
jecxz
fdivr
test
rcrb
test
cld
test
xor
stos
imul
movsb
sub
push
pop
rorb
lret
mov
dec
test
cmp
mov
idivl
sbb
jbe
and
xlat
mov
cmp
sub
mov
sti
ds
aas
jb
xchg
movsb
bnd
aam
xchg
dec
dec
push
push
jp
sub
push
cmp
lcall
push
fadds
cltd
xchg
das
xchg
sbb
repnz
dec
inc
mov
daa
pusha
jl
bound
mov
jae
cmp
mov
mul
iret
jae
pop
jecxz
test
xchg
jecxz
shl
popf
adc
mov
mov
mov
mov
add
test
sbb
cmp
aaa
aaa
mov
mov
push
mov
sbb
fcomps
bound
out
xchg
out
out
hlt
sub
jne
xor
sub
fimull
rorl
mov
aaa
je
or
adc
jae
stos
ret
mov
lcall
cmc
clc
aad
xchg
push
add
in
lds
add
xchg
mov
int3
inc
xchg
mov
int
adc
push
lret
jbe
sub
xchg
pop
outsl
je
jb
fdivs
push
std
mov
push
xchg
add
xor
sub
cmp
arpl
es
mov
add
sarl
xchg
int
sub
in
insl
dec
dec
xchg
jno
sti
lret
negb
dec
or
cmpsl
je
cwtl
not
ret
fisubl
cwtl
scas
xchg
mov
jp
sbb
xchg
sub
jae
cmp
and
jp
mov
xor
pushf
xchg
xorb
jne
dec
repz
lods
xchg
jecxz
movsl
xchg
ss
out
movsl
sahf
call
cli
sub
out
cmpsl
jmp
cmpsb
cld
jb
ljmp
mov
add
int3
sub
dec
outsb
outsb
push
or
adc
cwtl
adc
rolb
pop
mov
subl
out
pop
js
jae
mov
insb
dec
mov
mov
aas
das
pop
cmp
sbb
mov
xchg
je
loope
ja
dec
and
sbb
aam
or
pop
fcomps
push
cwtl
lods
adc
xor
mov
jbe
cld
divl
cmp
pushf
mov
push
cmc
scas
mov
adc
xchg
test
cs
or
scas
insb
pop
aas
jmp
sbb
lea
or
shlb
imul
add
mov
daa
pop
fisubl
loope
push
stc
xor
and
loopne
js
fcomps
hlt
lods
pop
mov
scas
sbbl
xor
movsb
incb
xchg
jnp
std
shlb
add
xor
loopne
lock
xorb
daa
mov
notl
pusha
xlat
jo
add
xor
loopne
lock
xorb
daa
mov
repz
jmp
add
xor
in
lock
xorb
daa
mov
adc
xor
add
mov
aas
mov
int
push
lock
dec
sbb
outsl
dec
jg
popf
sbb
inc
cmp
add
pop
pop
dec
jae
mov
cwtl
test
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
rcr
jmp
jnp
jb
pop
cmp
cmp
imul
mov
ror
jecxz
fcompl
jge
sub
push
flds
pushf
adc
and
js
lea
mov
aas
xchg
xor
scas
mov
pop
int3
xchg
mov
push
rolb
ss
fsub
mov
popf
adc
cs
sub
loop
daa
decb
jle
push
cltd
mov
mov
jl
xchg
or
sbb
inc
cmp
add
pop
jns
add
sbb
push
and
sub
push
int3
clc
negb
xchg
leave
mov
pop
into
ljmp
repnz
rcrb
cmp
hlt
insl
out
ljmp
shl
cmp
fsubp
imul
cltd
icebp
push
lods
jge
add
sbb
push
cmp
and
imul
cltd
ljmp
fldenv
dec
pop
insl
jb
inc
push
push
dec
je
pop
or
mov
mov
iret
fabs
mov
jl
dec
xor
dec
push
sbb
adc
jle
fwait
enter
mov
fldl
and
pop
inc
and
add
add
mov
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
cmc
mov
push
inc
mov
pop
push
cmpb
cltd
stos
dec
sbb
fsubrs
adc
sub
xlat
inc
push
sub
inc
adc
xor
hlt
out
cmpsb
lahf
and
jnp
cmp
add
jb
sti
jne
push
mov
pop
lods
cwtl
push
inc
outsw
pop
mov
and
sti
push
add
sbb
stc
add
cmpsb
and
sub
mov
sub
mov
xchg
clc
sbbb
bound
sbb
adc
rep
adc
dec
inc
fs
sbb
gs
jae
adc
aad
loopne
sub
pop
scas
jmp
push
sub
or
dec
out
sub
mov
scas
es
fucomp
and
icebp
adc
pop
xchg
mov
je
aad
mov
out
repnz
js
pop
jae
xor
roll
mov
sbb
sub
jp
jae
pop
or
fstps
out
enter
cmp
ja
or
imul
js
inc
cmp
scas
push
ret
in
sbb
cltd
dec
sub
sub
mov
lahf
int
mov
loop
mov
jne
rorb
mov
pop
dec
fnstsw
cs
jns
sbb
leave
cmp
pop
cmpsl
pushf
stc
jbe
sbb
xchg
ja
fidivrs
or
out
iret
inc
jge
call
dec
das
mov
js
mov
cmp
mov
stc
aaa
adc
mov
cmp
or
fmulp
lcall
aam
lret
movsb
sbb
je
jmp
cmpsl
lds
dec
stos
xor
add
fisubl
lock
mov
rcrl
and
sub
outsl
inc
or
nop
mov
add
jecxz
xchg
fcompl
mov
loope
xchg
cmp
sub
mov
jge
out
xor
cmpsl
test
in
outsb
aam
mov
sarb
in
mov
fsubs
jo
lock
jle
xchg
out
lds
lret
js
or
and
xor
inc
cmpsl
dec
jne
xchg
dec
in
movsb
xchg
aam
imul
shll
insb
daa
call
sbb
fimuls
jb
push
xchg
mov
loope
dec
out
mov
dec
sar
enter
inc
pushf
ret
gs
imul
adc
in
push
sarl
das
mov
mov
add
outsb
pusha
cmc
and
outsb
mov
adc
pop
shll
pop
ret
jb,pn
dec
sub
mov
xor
sbb
cmpsl
xchg
popf
mov
jp
xchg
in
pop
mov
cs
nop
and
enter
sub
jle
inc
and
stc
mov
xchg
jecxz
xchg
dec
cmp
pop
testb
les
sbb
inc
and
add
or
or
jp
inc
cmp
int
lahf
mov
mov
add
and
inc
xchg
adc
andb
jne
xchg
popf
mov
adc
pop
mov
fildll
push
dec
inc
cs
cmp
xchg
clc
lds
sahf
aas
xchg
idivl
or
xor
clc
or
or
imul
and
test
sbb
dec
mov
adc
cmp
out
cmpsl
add
mov
dec
inc
pop
movsl
aas
jmp
jmp
dec
push
lods
cltd
add
adc
pop
cmp
lea
in
cmp
incl
arpl
or
imul
push
out
repnz
sbb
pop
outsl
mov
negb
adc
inc
pop
les
pop
imul
arpl
pusha
pop
jl
repz
adc
push
clc
cmp
aas
push
jns
inc
push
lds
lcall
fldt
adc
adc
out
xor
pop
mov
addb
inc
xor
mov
pop
or
notl
mov
mov
jp
stc
iret
test
pop
or
sub
pushf
inc
pushf
js
hlt
and
aad
mov
lea
dec
mov
jge
jl
push
sub
adc
or
dec
in
xor
mov
lods
inc
push
cwtl
iret
pop
fnstsw
sub
cmp
push
lods
adcb
into
movl
pop
push
or
xchg
es
fdivr
jbe
mov
push
out
push
add
adc
lods
aad
push
pop
adc
call
fisubl
adc
dec
adc
sub
jb,pn
pop
xor
lods
mov
xorl
mov
in
insb
sarl
fiadds
mov
ljmp
jnp
ds
movsb
out
and
mov
cld
mov
stos
mov
mov
lcall
js
fldl
push
and
lahf
and
mov
stos
in
push
aaa
or
jecxz
mov
iret
in
aaa
leave
adc
mov
mov
out
pop
add
js
add
sub
cld
ds
sbb
mov
jg
add
inc
jae
leave
add
xchg
xchg
push
inc
stc
pop
loop
in
mov
cmp
pop
cmpsl
out
and
ds
push
inc
inc
and
or
cmpsb
mov
mov
dec
bnd
sbb
lods
stos
jl
lea
push
std
inc
mov
scas
jbe
mov
mov
dec
jne
mov
sbb
pushf
xchg
mov
xchg
stos
rorb
inc
cmc
add
inc
push
or
icebp
mov
lcall
inc
or
mov
in
and
jg
orb
ljmp
cld
xor
push
adc
dec
int
inc
sub
dec
cmp
out
test
in
mov
sub
cmpsl
test
dec
cmp
inc
inc
pop
ljmp
mov
cmp
sbb
adc
mov
stos
mov
test
call
push
incl
lret
scas
xchg
hlt
daa
mov
rol
idivl
cwtl
jmp
inc
popf
in
std
cmp
push
ljmp
jl
pop
shlb
fdivrl
fistps
pop
sub
jle
xchg
fwait
cmp
cmc
lret
pop
jo
adc
lods
test
jbe
xor
dec
cmc
lcall
and
mov
pop
xchg
cwtl
cmc
inc
inc
xor
movsl
dec
adcb
ret
push
daa
pop
or
in
mov
jne
sti
sbbb
ljmp
lahf
cmpsl
xchg
cmpl
adc
jno
addl
std
mov
and
inc
stos
jno
lret
iret
adc
push
in
add
std
sub
xchg
mov
decb
daa
aaa
pop
enter
push
cmc
mov
cmpsl
gs
sub
popa
popa
jno
lahf
out
or
inc
add
mov
lret
cltd
mov
cmp
stos
dec
scas
and
push
fisttpl
add
clc
mov
fs
xchg
in
push
cmp
push
ljmp
sub
push
xor
ret
jb
insb
movsb
jl
pusha
rclb
push
lahf
mov
xor
test
in
sbb
mov
lret
ficomps
outsb
fsubl
mov
inc
dec
cmpsl
mov
and
lds
add
mov
lds
add
or
dec
lods
add
inc
sub
cwtl
inc
cs
mov
bound
mov
mov
cmpsb
pop
lcall
dec
daa
fwait
jb
scas
adc
scas
mov
addr16
jo
add
lea
call
clc
nop
and
mov
push
jmp
jl
out
ljmp
icebp
rcr
imul
das
add
mov
mov
or
insb
mov
mov
pop
sbb
outsb
mov
sarb
or
cmp
xchg
in
clc
pop
mov
sub
mov
popa
orl
fs
pop
icebp
mov
mov
mov
jge
rcl
pmovmskb
cmp
pop
xor
jo
int3
aad
mov
jle
push
jmp
adc
stos
cmc
les
out
push
das
push
push
mov
xor
shrb
pop
sbb
adc
sub
mov
inc
xor
scas
fnstsw
jp
lahf
inc
hlt
mov
cmc
and
xlat
dec
lods
inc
cmp
enter
add
add
aaa
fistpll
fsts
pop
or
mov
mov
pop
push
rcr
mov
mov
inc
mov
sysexit
inc
or
clc
mov
inc
imul
sub
imul
pop
xchg
or
or
ja
mov
stc
and
or
imul
mov
inc
in
fstpl
dec
push
out
imul
stc
add
sti
inc
sbb
movsl
inc
cld
data16
leave
jl
jb
icebp
int3
push
mov
dec
and
stos
adc
jle
je
push
jle
sbb
popl
jecxz
sub
lcall
fildll
lods
mov
xchg
pmaxsw
xorl
push
push
sub
js
push
push
stc
or
in
pop
and
lods
mov
ret
test
dec
scas
pop
out
cmp
jns
aad
call
mov
jns
sub
cmc
inc
cmp
rorb
mov
add
mov
mov
pop
pop
pop
mov
mov
sub
into
popa
jecxz
in
sbb
xchg
das
pop
mov
add
push
call
loopne
imul
fiadds
js
mov
int
out
mov
dec
mov
rol
scas
popa
dec
or
insb
dec
or
cli
ss
lret
adc
in
rcrb
pop
ljmp
dec
jg
cmp
dec
mov
sub
ret
push
push
lods
adc
pushf
test
xchg
nop
lods
xchg
xor
das
data16
cmp
push
stc
mov
pop
js
aam
arpl
data16
insl
xchg
sahf
cmp
movsb
cs
and
scas
lcall
inc
cmp
cmp
sarl
jae
mov
stos
dec
ljmp
mov
call
roll
pop
ljmp
sti
repnz
dec
cmp
mulb
mov
add
pop
and
xchg
adc
xor
mov
sbb
dec
enter
push
add
add
and
mov
sub
test
shrb
jbe
xor
movsb
daa
inc
ret
ss
jle
clc
sub
add
cli
pop
xlat
add
xchg
rorb
out
dec
mov
mov
insb
in
aas
fnstsw
int3
or
push
lods
jo
test
cwtl
mov
cld
and
mov
pop
cmp
mov
add
and
cmp
xchg
dec
insl
jae
pusha
mov
loop
insl
flds
inc
pop
cmp
mov
dec
inc
mov
xor
divb
sub
xchg
sbb
movsl
jnp
push
fwait
pop
jmp
ds
sub
fs
xor
hlt
dec
lea
pop
das
xchg
sub
lods
or
stos
add
cmp
cltd
aad
pop
inc
stc
loop
jmp
repz
loopne
fldt
xchg
jle
xor
xchg
add
cmp
icebp
mov
imul
mov
xchg
mov
jo
add
push
push
xor
jmp
cmp
sub
cmpsb
adc
ljmp
dec
stc
cld
into
mov
loope
cmp
xchg
popa
imul
lods
fidivl
mov
pop
jns
xchg
aad
jnp
sbb
jp
and
sub
jge
push
pop
or
out
call
in
pop
scas
or
cmpsl
popa
xchg
xacquire
jo
xchg
mov
dec
rolb
je
mov
ss
cvtdq2ps
jp
test
popf
pop
inc
sbb
jns
fnstcw
adc
add
dec
unpcklps
inc
inc
dec
cli
or
jo
xchg
fstpl
insl
ljmp
ss
imul
shrb
jle
imull
stos
adc
in
stos
xor
test
pop
outsl
push
enter
push
cltd
testb
sarb
rcr
sti
icebp
add
fbstp
cmp
fisttpl
xchg
scas
out
fimull
xor
mov
repnz
fwait
push
lcall
jl
lcall
jp
stc
or
adc
mov
aad
ss
mov
mov
ss
lahf
call
mov
notb
into
push
lahf
xchg
mov
cwtl
mov
in
pop
add
jecxz
mov
pusha
inc
mov
jge
lock
sti
jle
pop
clc
mov
push
js
and
push
ja
stos
test
or
lahf
sub
in
or
pcmpeqd
test
push
aas
cmp
cld
xchg
in
xor
cld
inc
xchg
outsl
cmp
addr16
ljmp
xor
push
ret
sbb
stos
cmp
lcall
mov
repnz
gs
and
pusha
pop
mov
and
fisubrs
xor
lcall
aaa
out
outsl
mov
xchg
adc
imul
fdivl
mov
or
icebp
or
mov
insl
inc
fstpl
and
aam
cmc
mov
inc
mov
dec
xchg
dec
mov
mov
pop
adc
inc
xchg
cmc
xor
mov
dec
lret
stc
in
test
dec
nop
dec
sub
loopne
lods
xchg
or
mov
mov
jp
jns
pop
jl
xor
test
outsb
sub
push
push
sbb
cmp
push
xor
add
add
push
sub
dec
ret
xchg
mov
cmp
jnp
jge
fimuls
pop
pusha
inc
sub
xor
in
or
pop
jns
xor
call
xchg
xor
pop
in
enter
scas
pop
push
jnp
push
ret
xor
pop
testl
scas
inc
xchg
inc
inc
mov
xor
push
jmp
in
cld
shll
push
lahf
je
xchg
loopne
es
jae
push
jo
mov
lods
fdivrs
mov
popf
out
pop
adc
pop
hlt
shl
clc
fcmove
loop
in
xlat
jecxz
enter
std
mov
filds
xchg
cs
imul
mov
push
inc
bound
aas
popf
dec
pop
sbb
movsl
mov
push
lcall
and
sub
stc
and
xchg
aas
mov
cmp
mov
pusha
in
cmp
fucomip
imul
insb
in
aaa
push
les
inc
cmp
ret
das
inc
push
xor
jmp
cmpsb
and
mov
pop
and
out
dec
mov
pop
xor
cli
mov
lahf
jmp
js
leave
imul
push
push
iret
adc
sbb
jb
and
testb
fnop
fld
shl
shrb
cltd
std
stos
aam
pop
sub
push
jb
lods
mov
nop
in
mov
int
stc
lret
popa
adc
cld
xor
add
and
mov
ds
mov
lahf
decl
dec
in
mov
jl
daa
imul
adc
inc
mov
leave
rorb
imul
loope
push
jp
ret
enter
push
mov
insl
inc
jge
jg
mov
jle
lret
pushf
sti
mov
dec
into
data16
fwait
pop
and
push
loop
pop
js
push
inc
pop
repz
mov
jns
sarl
xchg
shrb
sub
push
pop
movsl
jmp
mov
cmp
out
push
into
dec
stos
xchg
dec
mov
les
xchg
push
jae
add
dec
xchg
push
sub
ret
add
adc
inc
jb
pop
sbb
sti
add
imul
adc
aad
pop
add
cmp
lds
outsb
cs
test
sbb
daa
dec
and
clc
mov
ss
sub
stos
mov
aam
js
movsb
out
test
mov
ds
ss
mov
movsl
add
mov
sbb
or
testb
fwait
movsb
or
mov
pop
push
out
icebp
ds
fistpl
pop
inc
movl
test
mov
icebp
dec
cmpsl
jne
pop
mov
test
mov
sysret
fwait
jb
and
loopne
jg
inc
scas
loop
stos
inc
push
mov
cmpsl
sbb
into
push
xchg
add
loop
pop
andb
jb
sbb
add
push
jo
inc
popa
sbb
movsl
xchg
clc
jle
ficomps
sbb
and
sub
sub
xchg
push
cmp
out
sbb
mov
xchg
xlat
mov
sbb
daa
ss
sti
jne
jl
mov
xchg
inc
bnd
sub
in
stos
call
mov
push
dec
push
sub
decl
outsl
ud1
xor
mov
and
fidivl
pop
or
cmp
stc
rol
add
and
lcall
jle
cmpb
push
inc
fwait
popf
cmp
and
pop
sbb
pop
insb
inc
xor
dec
mull
daa
loope,pt
ljmp
imul
dec
call
loope
sar
and
jge
cld
inc
ror
push
nop
mov
rorb
ss
nopl
call
adc
mov
pushf
cwtl
xchg
or
sub
aad
jno
push
pop
shrb
cli
mov
jae
sbb
ja
add
cs
or
inc
roll
ljmp
pop
insl
je
not
add
cmpsl
sub
outsb
lock
in
sub
out
push
jo
xchg
cmp
inc
loopne
mov
pop
pop
fiaddl
push
sub
push
movsl
mov
enter
lret
mov
mov
ficoml
insb
shlb
insl
mov
adc
push
lods
or
pushf
push
insl
divb
mov
fs
push
pop
rorl
mov
mov
jns
out
xor
jnp
push
bound
mov
cwtl
mov
mov
mov
add
imul
das
cwtl
push
repz
aaa
sbb
mov
jmp
inc
repnz
mov
pop
xlat
pop
dec
dec
loope
inc
and
incb
or
test
and
mov
enter
jbe
mov
jbe
mov
lret
add
decb
mov
and
mov
push
xchg
lods
into
jle
test
sbb
add
aad
xchg
mov
arpl
ljmp
xchg
je
lret
fistpll
loop
pop
subl
add
repnz
data16
jecxz
xchg
sbb
pop
dec
push
and
adc
dec
subl
xor
loope
mov
dec
sbb
mov
mov
jmp
int
movsl
push
cmp
xchg
xchg
enter
fildll
mov
mov
and
inc
scas
scas
aaa
adc
adcb
outsb
repnz
xchg
pop
pop
lret
push
adc
in
or
out
scas
dec
xchg
outsl
and
je
mov
jnp
xchg
cmpsl
add
xor
inc
lcall
iret
mov
xlat
xchg
cmp
stos
loopne
mov
xor
push
sbb
loop
pushf
inc
dec
jo
mov
xchg
popf
movsl
mov
incb
insl
mov
cmp
fsin
mov
pushf
movsb
popl
mov
stos
jmp
and
cmp
rorb
pop
add
mov
pop
jns
dec
xor
nop
es
pushf
mov
mov
mov
in
mov
sbb
push
fnstenv
in
and
sbb
btc
xor
or
inc
ljmp
aam
or
jne
push
js
push
pop
out
aam
inc
cmp
mov
inc
xlat
pop
mov
icebp
sub
stc
cmpl
cli
jno
mov
leave
andl
or
mov
push
loopne
jbe
or
add
sarb
lods
pop
push
repnz
popa
push
adcb
inc
sbbb
gs
test
dec
mov
dec
cmp
cwtl
mov
pop
cmp
push
cmp
ds
xor
aaa
icebp
out
cmc
push
roll
std
mov
jno
lock
jg
imul
xor
add
orb
add
mov
imul
push
lds
sub
pop
sub
cld
adc
bound
lods
xchg
dec
mov
inc
xlat
jbe
jb
jle
sbb
jns
fldl
inc
jae
xchg
mov
adc
xor
icebp
cltd
inc
in
roll
push
push
subb
int3
loope
dec
push
stos
xlat
ret
sbb
or
subl
jbe
sub
fistps
test
inc
sahf
xchg
push
clc
push
shlb
jle
xor
adc
dec
inc
shll
test
pop
rcrb
inc
dec
and
dec
lahf
mov
push
aaa
test
test
int
pop
jb
lods
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
pop
add
mov
dec
cltd
jge
insl
sub
cmp
or
sbb
les
lods
push
pushf
test
mov
pop
jmp
sti
mov
sub
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
cli
cmp
dec
fistpl
in
cmp
or
sbb
imul
stos
les
pop
jmp
mov
jle
sbb
in
pop
mov
imul
push
rcrb
sbbl
jo
and
faddp
mov
out
imul
inc
mov
mov
pop
test
xorl
sarl
mov
mov
out
popa
cmp
and
jo
xchg
scas
sbbl
jo
dec
repz
enter
add
pop
arpl
adc
fs
inc
sti
ret
xor
push
xchg
js
mov
and
rcrb
stos
nop
mov
push
mov
pushf
mov
repz
xor
lock
stc
dec
jl
sbb
jl
pop
icebp
pop
test
or
fstps
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
jne
sbbl
movsl
pop
mov
rclb
ret
fisttpl
fimuls
clc
and
sbb
mov
pop
pop
in
dec
push
in
fmuls
sti
push
pushf
fsts
or
sub
sahf
push
mov
movsl
cmp
lods
jnp
dec
mov
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
pop
mov
jle
fwait
mov
repnz
mov
mov
negb
idivl
adc
mov
jp
into
sub
cmp
stos
lret
jmp
jae
pop
adc
push
xor
pop
ret
gs
mov
aas
fisttpll
sbb
das
bound
rcr
mov
lea
xchg
xchg
inc
call
push
jecxz
adc
and
or
in
js
inc
jg
sti
jns
and
sub
imul
xchg
stc
sub
or
fstpt
and
pop
jge,pn
xchg
outsl
push
jbe
jecxz
pop
mov
pop
jg
int3
xorb
xchg
andl
xchg
les
pop
lret
dec
xchg
mov
iret
std
inc
dec
iret
pop
or
fidivl
imul
test
lods
jo
roll
shll
dec
xor
mov
pop
dec
test
xchg
insl
sub
mov
cmp
aas
dec
push
lods
pop
xor
jmp
aaa
and
dec
sub
enter
jge
iret
mov
negb
jle
mov
imulb
int3
dec
xor
repz
fisubrl
fcoml
icebp
jno
jo
into
pop
pop
mov
adc
cltd
inc
xchg
xchg
mov
outsl
pop
dec
jge
aam
in
cvttps2pi
les
ds
jo
jbe
adc
push
and
fistl
xchg
or
mov
stc
jns
cld
xchg
xor
xchg
je
push
and
js
mov
into
std
jp
ret
sbb
dec
and
and
sub
mov
ret
scas
add
fcomps
xor
mov
xorb
mov
fildl
in
aam
jns
adc
imul
jg
inc
mov
bswap
xchg
lea
sahf
xchg
mov
sub
and
rclb
je
adc
mov
int3
adc
jmp
adc
mov
jecxz
mov
or
in
jbe
jnp
xor
mov
into
add
dec
fwait
sahf
or
jbe
xor
aaa
aaa
decl
loope
mov
jg
adcb
stc
pop
jl
push
sbb
icebp
inc
mov
in
xor
inc
push
cmc
sahf
insb
pop
mov
rorb
mov
xchg
cmpb
adc
imul
push
popl
outsl
loop
push
mov
out
loop
cmp
xchg
out
lock
rcrb
push
adc
or
setbe
inc
imul
pusha
jmp
cmp
daa
push
fimull
leave
pop
xchg
pushf
fnstsw
mov
xor
in
out
jnp
xchg
sub
or
popa
inc
adc
inc
jl
add
xchg
sbb
ret
rolb
xchg
cwtl
mov
gs
movsl
or
out
inc
out
std
adc
cpuid
clc
cli
daa
jmp
lret
pop
cwtl
ss
mov
aas
fucomi
out
push
push
xor
not
mov
loop
mov
inc
pop
add
lods
cmp
cmpsl
cmp
cmp
inc
cltd
testl
mov
pop
lods
pop
cmpsl
lcall
cmp
scas
addr16
jmp
pop
out
pop
or
ja
in
xchg
xlat
sub
pop
scas
outsb
arpl
insl
and
jmp
cmp
out
daa
jge
push
out
mov
imul
andb
shll
mov
int3
leave
enter
aad
out
push
out
pop
dec
add
sub
or
fs
lds
inc
gs
mov
mov
subl
cmpsl
add
dec
inc
rcll
gs
xor
cmc
scas
add
mov
cmp
pop
aam
test
push
mov
mov
shrb
out
fadds
pop
inc
das
test
fisubs
dec
imul
jo
inc
ret
dec
jle
les
dec
pusha
rorb
int
inc
ss
cmp
or
roll
scas
jno
sbb
aaa
js
sbb
xor
scas
cld
js
cmp
loop
sbb
adc
adc
xor
mov
cmpsb
imul
sub
in
scas
stos
sbb
mov
std
bound
add
movsl
fbstp
pop
sub
lea
jecxz
subl
xorl
daa
leave
lods
cmp
cmp
inc
stos
xchg
ja
mov
xchg
fwait
add
mov
pop
dec
popa
add
mov
push
insb
xor
mov
shlb
sub
bound
mov
int
nop
mov
int3
mov
xchg
imul
push
or
mov
cmp
mov
cmp
or
push
push
add
scas
rorb
pop
pop
leave
inc
cltd
inc
pop
sub
out
ds
mov
lret
push
cmc
sub
pop
sub
outsb
insl
pop
add
icebp
push
in
inc
enter
sbb
pushf
inc
inc
iret
adc
adc
sub
push
rcrl
push
insl
push
cmp
jl
push
or
pop
mov
mov
stc
adc
stos
movdq2q
cld
aas
movsb
sub
insb
pop
dec
mov
cmp
push
test
cli
xor
jmp
fisubrs
ljmp
inc
jbe
scas
arpl
pop
and
sti
mov
add
cld
xchg
pop
incb
into
aas
xor
mov
mov
mov
jno
test
dec
lret
stos
jbe
adc
aad
test
aas
add
mov
sbb
shrb
inc
lea
lcall
sbb
cltd
mov
xchg
xchg
stos
lcall
fwait
sub
and
rcrb
inc
pop
mov
enter
in
jne
mov
ds
fwait
enter
inc
shrb
mov
mov
stos
sub
fdivs
mov
pop
add
pop
hlt
in
iret
xor
sub
lods
mov
mov
out
popa
test
clc
hlt
loope
ljmp
or
lds
ret
push
imul
popa
pop
stc
xor
pusha
mov
push
outsl
rorb
xchg
inc
pushf
mov
sbb
loope
ljmp
sub
sub
pop
adc
dec
test
iret
adc
mov
leave
and
fldl2e
ja
cli
lods
and
mov
pop
outsl
outsl
sbb
std
dec
ret
outsb
dec
out
pusha
mov
inc
add
inc
loopne
lea
xchg
addl
mov
add
jmp
jmp
or
adc
decb
mov
xlat
shll
iret
mov
ret
popa
mov
jae
je
jne
cld
mov
sahf
test
mov
mov
xchg
xchg
sahf
loope
je
out
inc
cltd
sbb
test
stc
repz
push
jnp
add
lea
test
into
lahf
sub
lds
add
or
xchg
std
sub
iret
mov
adc
mov
cmp
pop
adc
pushf
and
cmpsl
jns
add
cld
addb
mov
in
jne
or
daa
adc
jecxz
sbbl
adc
es
jl
jle
or
mov
popa
adc
push
dec
mov
jmp
daa
stos
ret
mov
add
cmp
je
and
test
fwait
xor
cmp
jno
cmp
dec
std
and
lahf
cmp
js
mov
add
add
nop
iret
jge
dec
cmp
inc
push
jg
stos
enter
loop
push
in
leave
std
push
jg
xlat
lcall
pop
and
sarl
mov
insl
addr16
icebp
sbb
test
scas
lods
jo
xchg
cli
xor
dec
mov
data16
push
or
loope
adc
xchg
cmp
icebp
pop
imul
test
push
mov
pop
xor
stos
mov
into
xchg
lea
pop
clc
ficoml
ljmp
not
idiv
ret
and
xchg
aad
xchg
dec
add
cmp
ds
push
pop
xchg
mov
or
dec
fwait
mov
inc
jno
shl
xor
xchg
daa
mov
dec
popf
loopne
mov
inc
in
leave
rcl
sbb
push
push
add
lahf
imul
pop
mov
stos
mov
push
mov
test
dec
xor
mov
insb
cmp
fstpt
test
rcrb
loopne
movsl
std
divb
sbb
cwtl
xor
mov
xchg
scas
push
mov
aam
sub
adc
dec
test
fmull
cmc
cmp
adc
testl
rorb
hlt
mov
lea
sbb
mov
add
lret
aad
mov
mov
mul
mov
and
push
out
xchg
dec
inc
adc
fisubl
or
xor
fwait
and
hlt
xor
adcl
cmpb
dec
mov
and
xor
sbb
ja
call
sub
popa
mov
pop
and
mov
pusha
jl
test
fs
fimull
sbb
xchg
aad
cmp
pop
push
sbb
in
add
adc
jecxz
push
inc
xchg
aaa
adc
lcall
iret
lcall
jl
cmp
fists
sub
cmp
les
enter
dec
dec
cli
jecxz
imul
sbb
xchg
cmpsb
or
std
pop
nop
jo
dec
adcl
mov
mov
popa
out
or
outsw
jle
jne
mov
mov
pop
lods
xorb
arpl
jg,pt
roll
es
fisubs
insb
pop
bnd
out
outsl
testl
pop
outsb
mov
loopne
lret
pop
mov
jmp
fstps
jge
sarb
xchg
das
adc
mov
or
adc
sahf
adc
lret
nop
loop
xchg
adc
xor
inc
lods
pmaddwd
lret
push
ret
stc
inc
pop
out
gs
je
ret
mov
mov
rorb
pop
inc
sub
sbb
into
xor
lods
in
movsb
pushl
mov
imul
pop
jbe
adc
jns
dec
pop
insb
adc
cltd
roll
bound
cmpsb
cmc
cwtl
popa
popf
add
sbb
fs
jle
jns
or
in
jge
dec
jno
cmp
movsl
bound
pop
cmp
cmp
adc
lret
inc
notb
add
or
mov
or
mov
movsb
and
adc
xlat
mov
lods
in
arpl
outsl
stos
das
pop
sahf
mov
enter
mov
aam
fdivrs
sbb
call
sub
daa
inc
gs
sub
cmpsl
jb
mov
icebp
xchg
notl
mov
out
sahf
sub
add
xlat
and
loope
pop
imulb
inc
orb
sti
mov
mov
fcomps
cmp
xchg
cmp
popa
and
mov
mov
leave
imul
xor
xchg
xchg
ss
inc
push
stc
jbe
cwtl
stc
inc
imul
fs
js
mov
or
movsl
ss
push
das
mov
push
lret
ds
lock
or
xchg
jbe
das
xchg
cmp
add
push
and
xor
lret
cwtl
xchg
pop
lcall
mov
lea
jp
or
xchg
cmp
push
std
and
xchg
in
xchg
loopew
stos
aaa
or
out
mov
lret
xchg
xchg
cmp
les
and
pushf
inc
sbb
dec
leave
icebp
cmp
mov
jae
xchg
inc
xchg
cmp
insl
cmpsl
cmp
repnz
sub
jecxz
sub
and
xchg
sub
adc
popa
add
fmul
mov
in
sub
sahf
mov
sub
adc
push
add
xchg
adc
es
ds
sub
and
jns
dec
into
sbb
in
out
inc
subps
and
int
add
xor
and
mov
fidivl
ja
cmpsl
mov
mov
sub
jnp
hlt
add
and
fwait
pop
dec
jne
adc
or
jmp
in
call
sbb
add
and
jb
call
adc
sti
xchg
mov
sub
sti
cli
pop
add
shl
inc
enter
add
imul
adc
xchg
cmpsl
arpl
jne
cwtl
pop
mov
xabort
inc
mov
cmc
rclb
xor
dec
hlt
jg
ret
add
cmp
int3
sub
scas
repnz
icebp
out
mov
insl
das
jno
inc
mov
add
js
push
test
fistpl
jb
push
mov
ja
push
aam
stos
ss
sbb
fstpt
sub
jnp
andb
dec
adc
xor
fidivrs
lds
mov
and
incb
cmp
mov
mov
pop
stos
ja
jmp
out
adc
test
dec
and
jecxz
push
jo
mov
sbb
add
aas
pop
pop
repz
cmpsb
push
js
mov
and
pusha
mov
mov
cmpsl
stos
jo
pop
mov
or
insb
or
cmc
mov
xchg
in
xchg
jecxz
jae
jecxz
sti
cmp
xchg
nop
in
dec
xchg
test
mov
movsb
popa
adc
leave
mov
call
dec
jp
aam
stc
or
sbb
sub
inc
int
rol
jns
mov
dec
mov
outsl
aaa
nop
sub
pop
lock
out
mov
xorb
or
sarb
das
lea
xor
push
arpl
xchg
add
push
sbb
lds
add
icebp
sub
fwait
mov
xchg
mov
sti
cmp
ja
xor
push
cmpsl
or
js
testl
scas
and
outsb
in
dec
iret
mov
mov
dec
fstps
mov
cmc
cmc
test
sbb
cs
xlat
mov
xor
movsb
out
xor
shll
mov
xor
loop
cmp
or
loop
or
mov
fcmovb
adc
push
movsl
mov
loopne
test
dec
add
frstor
daa
andb
mov
fs
mov
sarb
les
xchg
fstps
pusha
jae
inc
fstpl
lds
mov
dec
fs
jb
mov
and
shl
inc
dec
ja
es
ljmp
pop
mov
dec
std
aaa
push
sub
push
dec
mov
xchg
fadds
pushf
pop
pop
mov
fucomi
jecxz
lahf
sbb
xor
fisubl
jmp
or
pop
inc
dec
push
ja
and
out
or
orb
test
test
xor
pop
mov
pop
pusha
pop
sbb
adc
jns
data16
gs
cmp
xor
pop
testl
sub
push
mov
cli
dec
outsb
hlt
pop
xchg
jmp
add
ss
in
out
pop
in
mov
movsl
push
rcrb
sub
into
test
ds
push
cmp
jmp
lods
enter
aas
bt
pop
cmp
nop
clc
sti
jbe
jne
insb
and
pop
sub
xchg
mov
inc
add
lock
lret
bound
mov
mov
lret
incl
sbb
orb
xor
ljmp
insl
lea
push
sti
sbb
stc
shl
aad
xchg
in
sbb
xor
push
js
sahf
sub
testl
testb
mov
ret
daa
xchg
outsb
movsb
outsl
mov
jmp
data16
jmp
faddl
aaa
dec
aas
dec
cs
xor
pop
aam
daa
inc
push
mov
ja
call
je
loopne
mov
test
cli
inc
mov
mov
cld
or
or
mov
nop
inc
mov
push
stos
stos
rolb
popa
push
cwtl
inc
bound
pop
xchg
mov
sbb
pop
lahf
lea
iret
scas
and
cmp
scas
xor
sub
inc
jmp
lods
push
inc
leave
mov
fst
mov
out
dec
pop
sub
out
inc
xchg
leave
ret
pushf
pop
pop
dec
cmpb
cli
mov
cmpsb
push
xchg
pop
xlat
pop
or
int
xor
sbb
rclb
lods
mov
mov
cmp
jp
inc
fmulp
lcall
les
add
jbe
inc
or
dec
sbb
arpl
mov
rcll
pop
cmp
in
mov
ljmp
filds
mov
add
adc
insl
aas
push
cmpsb
pushf
pop
add
mov
push
adc
gs
and
jo
incb
sbb
inc
int
orl
xor
dec
fdecstp
mov
xchg
pop
bound
ret
jnp
adc
mov
popf
xor
lahf
xor
fistl
cmp
nop
sbb
add
mov
mov
pop
sarb
sar
pop
dec
stos
testb
hlt
enter
cld
push
pop
push
imul
lds
sbb
or
rcll
daa
or
gs
enter
dec
repz
cli
fisttps
xchg
inc
add
mov
fdivs
adc
pushf
repz
pushf
fdivp
cltd
jle
out
xlat
loope
mov
mov
jle
pop
stos
mov
jl
pop
insb
je
jno
adc
addr16
jmp
add
jl
fs
stc
sbb
jmp
xor
ja
enter
or
lds
mov
hlt
iret
cmp
jbe
mov
loope
sub
push
lods
push
mov
movsl
adc
pop
dec
dec
push
and
push
sahf
mov
adc
sbb
jecxz
popf
mov
cmp
dec
sub
fildll
push
insb
mov
mov
aaa
cld
jbe
add
ret
mov
mov
adc
pop
das
xorb
push
nop
jmp
fiadds
test
sarl
aaa
pop
push
push
adc
push
in
test
jne
in
ret
sarb
addr16
mov
mov
popa
fchs
sub
ds
push
out
jecxz
cmpsl
mov
add
lret
fbld
or
mov
sub
bnd
nop
adc
mov
adc
fisttpll
movsb
iret
adc
fucomi
in
cmp
imul
jns
dec
pop
popf
inc
ljmp
idivb
sbbb
inc
xor
sub
mov
leave
mov
push
add
xchg
inc
movsl
push
test
sub
je
shr
dec
mov
mov
push
dec
cmp
movsl
mov
xor
jae
out
cmpsl
int3
sub
scas
mov
inc
mov
mov
aam
pop
push
pop
aaa
iret
popf
loope
stc
lret
adc
int3
cmc
insb
dec
into
xor
mov
mov
and
adc
add
lea
ss
aas
mov
and
arpl
and
cmc
pusha
into
or
add
std
aad
cmpsb
imul
pop
push
test
jp
mov
pop
js
test
mov
sbb
inc
push
mov
push
out
cmp
loopne
lret
imul
nop
out
sbb
rcll
ljmp
jmp
push
sahf
pop
ret
mov
push
adc
mov
xor
xor
popf
mov
in
xor
test
loopne
mov
inc
sbb
test
pop
adc
or
sub
sahf
lret
test
jg
mov
adc
and
and
push
mov
mov
shr
or
lahf
shl
pop
jecxz
loope
pop
incb
xchg
aad
jle
jnp
push
ss
add
clc
pushf
mov
add
cmp
mov
ret
movsl
jge
mov
mov
adc
push
popf
pop
cmp
add
and
ret
pop
fstpt
loope
and
test
arpl
pop
fwait
jo
inc
pop
mov
jo
jge
leave
add
rolb
fsubrl
mov
xor
rcrb
repnz
xor
daa
jg
fnstsw
sub
insb
loope
xchg
sbb
jecxz
hlt
dec
and
mov
insl
sbb
nop
sbb
clc
add
dec
xchg
pop
imul
add
and
dec
movsl
clc
add
pop
add
xchg
mov
dec
cmp
xlat
jo
fst
sub
rol
lock
cmp
xor
cmpsb
ret
inc
repz
and
movb
daa
push
jns
in
jg
fsubs
pop
loopne
cmp
ficoml
outsl
xor
or
pop
push
iret
pop
cmp
push
bound
stos
fiadds
xchg
jbe
push
adc
insb
cmp
pop
push
or
mov
xor
push
dec
sbb
dec
adcl
or
mov
sbb
imul
pop
jb
push
rorb
fdivrl
jb
cmpsl
xchg
adc
std
sbb
stos
jg
add
mov
xor
jb
pop
xorb
xchg
push
mov
movsb
imul
stos
in
sub
and
inc
fisubl
cld
xor
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
or
sbb
imul
stos
insb
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
sbb
imul
stos
in
mov
pop
jmp
sti
cmp
or
sbb
in
cmp
or
sbb
imul
push
insb
inc
and
pushf
movsb
jae
xor
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sbb
lods
sub
mov
mov
lea
dec
iret
sbb
insb
in
jl
mov
mov
jge
insl
cld
lea
cmp
dec
std
pop
std
insb
in
jl
mov
and
int3
push
fsubl
insl
cld
test
scas
inc
loop
aad
fstpl
mov
jl
mov
cmp
or
mov
adc
xor
cmc
imul
int3
test
test
faddl
xchg
inc
ja
dec
and
loopne
hlt
sbb
push
cmp
std
insb
adc
into
pop
imul
fwait
leave
push
imul
lods
jge
int3
jb
test
and
fisttpll
std
xchg
in
jge
jae
popf
hlt
lods
or
addb
or
pop
int
jbe
in
pop
dec
adc
inc
mov
adc
sbb
and
insl
std
sub
or
fs
ror
mov
daa
gs
repz
cwtl
mov
test
jns
jl
mov
cmp
int3
pop
fdivrl
je
test
cmp
dec
aad
out
in
cmp
push
cli
mov
insl
mov
inc
leave
push
frstor
test
out
sbbb
int
push
lods
pop
jmp
test
ds
fimuls
jo
jp
push
frstor
cmpsb
xor
fsubl
push
fadds
adc
in
insl
cld
popf
or
sbb
sub
cmp
dec
int
std
insb
in
jl
mov
mov
jge
insl
cld
popf
or
sbb
sub
cmp
dec
int
std
insb
in
jl
mov
mov
or
lret
test
mov
ja
jp
bound
pusha
xor
push
out
push
push
cli
pop
icebp
ja
std
or
out
push
pushf
cmp
addr16
sti
or
cmp
sub
jl
das
cmpsb
inc
outsl
fisubl
cmp
inc
dec
mov
push
inc
out
in
mov
xchg
mov
out
sahf
mov
inc
push
cli
insl
cmc
cmc
repnz
popf
dec
ret
rorl
mov
cs
mov
xor
movsb
test
aaa
loopne
loope
mov
ds
add
or
pop
pop
bound
xchg
mov
pop
xor
xchg
pushf
das
out
jbe
rcll
push
rolb
mov
push
clc
jo
push
cmovge
les
lret
sub
hlt
cmp
in
adc
and
xlat
and
into
cmp
mulb
loop
cmp
xor
popf
shr
push
push
int
lock
ja
aam
shll
jne
xchg
std
pop
inc
mov
popa
sbb
jb
leave
cmpsb
popa
jge
push
add
xor
out
pop
xchg
movsl
inc
lret
mov
jo
lret
xor
or
call
jb
stos
sub
shrl
sqrtps
mov
gs
fs
in
sub
adc
jp
outsl
cltd
pop
mov
and
mov
clc
jbe
loope
xchg
inc
test
sub
xchg
ret
sbb
hlt
pop
inc
incb
cld
mov
push
jo
loop
mov
mov
in
mov
into
pop
mov
mov
xchg
dec
xor
ret
stos
xchg
int
dec
mov
inc
push
adc
in
adc
dec
enter
frstor
xchg
and
jmp
mov
icebp
cmpsb
dec
insb
sbb
jne
mov
mov
jecxz
jl
js
jg
dec
dec
pop
shrb
mov
cli
mov
es
rol
daa
xor
cmp
adc
sub
in
add
cmp
dec
mov
mov
jo
outsl
add
and
or
divl
xor
pop
xlat
shr
pop
ret
jb
xchg
mov
loop
fs
roll
jo
insl
cs
into
inc
or
lret
xor
xor
push
popf
jle
xor
loop
incl
mov
jmp
cli
stc
mov
xchg
movsb
sbbb
hlt
or
lea
jecxz
enter
push
inc
neg
xchg
in
pop
push
iret
lahf
inc
mov
jg
xor
dec
ljmp
or
sbb
leave
mov
pop
inc
push
cmovno
and
mov
ficoml
test
jns
jp
add
push
pop
jbe
mov
fwait
or
pop
xchg
fidivs
fcmovne
dec
or
jb
cmp
inc
iret
cli
test
bound
lsl
mov
mov
repnz
mov
rorb
xor
lods
lock
incl
jle
frstor
adc
inc
mov
mov
icebp
repnz
ja
out
inc
out
cmp
loope
add
out
fsubr
stc
notb
outsb
pop
push
xchg
andl
jnp
add
mov
aam
stc
subl
cwtl
lret
mov
rcl
inc
adc
inc
int3
xor
inc
inc
cltd
adc
xchg
fdivrs
push
cmp
pusha
push
cmp
jne
dec
and
repz
call
pop
shll
inc
lods
jle
pop
dec
hlt
cmc
dec
cmpsl
mov
push
pop
insl
mov
and
pop
test
xor
add
imul
dec
sbb
sbb
dec
or
outsl
push
mov
push
mov
ret
xor
add
xchg
push
and
mov
pop
add
enter
imul
movsl
cmc
clc
push
sahf
pusha
jnp
insb
dec
xchg
mov
lods
movsl
push
jmp
test
mov
sbb
gs
sbb
jnp
cmp
lods
xchg
inc
add
inc
into
mov
aaa
xchg
sbb
scas
dec
push
jo
jmp
lods
lcall
mov
mov
inc
pop
cmpl
inc
out
rcrb
outsb
pop
xor
js
rorb
push
xchg
popf
mov
push
lods
sbb
or
lcall
sbb
ds
test
push
sub
out
pushf
sub
xchg
cmp
je
cs
jle
pop
pop
and
push
fildll
icebp
jp
jnp
mov
rolb
xor
mov
jae
cmp
repz
lock
jns
lods
out
cvtdq2ps
lods
mov
int
mov
add
and
dec
leave
pop
mov
loop
movsl
pop
fsubr
enter
add
adc
cs
out
ja
ret
loope
aaa
mov
sub
test
xor
xor
xor
repz
cmp
fs
mov
cmpsl
xchg
xchg
lahf
rol
push
rcl
jno
repz
inc
dec
loopne
dec
int3
cltd
lea
enter
mov
xor
fbld
xchg
jnp
in
add
arpl
les
sbb
ret
int
lods
int3
or
push
mov
and
inc
xchg
fbld
int
test
call
leave
jns
push
addr16
mov
stos
clc
loope
and
or
sbb
mov
sbb
pop
rcrb
sub
dec
out
mov
inc
mov
movsb
popf
scas
imul
cltd
add
jne
push
xor
cld
out
inc
rclb
mov
clc
inc
cld
adc
cltd
leave
adc
cmp
jo
dec
adcb
lea
mov
jle
mov
cmp
cmp
push
mov
roll
rorl
cmp
mov
lret
xchg
mov
xchg
std
mov
lock
jmp
loopne
faddl
and
jae
push
xor
les
add
pop
or
xchg
mov
jecxz
mov
sbb
inc
int
aad
lret
mov
int
mov
das
adc
inc
ret
dec
gs
jecxz
push
add
jb
repz
or
test
mov
jns
mov
ss
pop
jne
sahf
mov
mov
lret
push
jle
ret
add
or
dec
lret
jno
cmp
jns
loopne
mov
jno
popf
mov
jo
lret
and
xor
pop
fs
and
sbb
mov
out
lea
stos
xor
ds
leave
cmp
rol
pop
or
out
jge
rclb
fiaddl
inc
cmc
enter
adc
test
ret
jle
push
sub
les
inc
adc
ljmp
pop
xor
or
aam
shll
adc
lret
jbe
mov
or
sbb
lds
cwtl
icebp
in
push
mov
xor
cwtl
push
mov
inc
xchg
inc
push
push
xchg
cld
les
xchg
out
mov
mov
fidivrl
leave
lock
xchg
dec
jecxz
ror
lods
mov
adc
jno
mov
and
push
cmc
mov
sbb
add
and
xorb
push
cmp
mov
fisttpll
pop
cmpsl
add
mov
sbb
and
dec
fs
stos
sbb
fwait
add
ficoml
mov
jmp
int3
mov
xor
jge
popa
daa
loopne
fstps
lock
xchg
xor
and
xor
and
arpl
mov
ds
xchg
aam
cmp
and
mov
mov
enter
fdivl
inc
scas
dec
lds
xchg
mov
fidivl
jg,pn
jae
lcall
xchg
sub
xchg
or
rcr
sub
pop
jl
and
sbb
movsb
in
insl
call
push
out
hlt
add
mov
orb
and
fcmovne
test
adc
and
bnd
cmpl
cltd
sbb
lds
push
stos
sbb
aaa
mov
ljmp
iret
std
dec
in
jns
repz
lods
mov
push
imul
test
adc
ds
aas
push
lock
outsl
xchg
scas
loope
aad
scas
push
imul
jne
movl
shll
mov
add
dec
cld
lcall
rep
and
or
pop
pop
jg
scas
incb
mov
dec
cmp
xor
cmp
jno
loopne
or
imul
sub
lods
bound
mov
push
bound
adc
jno
orb
mov
fbld
aas
cld
addps
shll
sub
adc
sbb
jge
shlb
push
or
pop
ret
inc
xchg
fsubl
xchg
cli
rcl
push
mov
jb
mov
mov
mov
sub
push
add
inc
jg
das
inc
sti
rclb
sbb
insl
ljmp
push
gs
xchg
sub
lahf
fistpll
dec
dec
iret
test
sbb
ret
mov
jecxz
add
fwait
sbb
lret
add
lock
add
pop
fwait
je
push
rorb
subl
icebp
jnp
xor
fisubrs
xlat
mov
lret
ljmp
insl
xor
jne
in
mov
inc
add
add
pop
jbe
jno
es
adc
mov
ss
imul
stc
pop
in
bound
les
inc
pop
hlt
mov
and
jns
gs
jae
sbb
cs
mov
mov
ror
jbe
xchg
mov
ficompl
lret
cmp
adc
dec
aaa
andl
sub
xor
shll
jne
call
subl
add
aas
mov
cmp
xor
push
call
pop
pop
xchg
daa
aas
lret
and
fmulp
add
jbe
in
mov
mov
xchg
lcall
inc
adcb
adc
loop
dec
shl
cmpsb
daa
lock
hlt
pop
outsl
xlat
ret
xchg
addr16
push
fstl
ds
mov
xorb
js
mov
mov
mov
push
aas
mov
sti
xor
mov
xchg
pushf
sub
ja
les
fistpl
push
cwtl
dec
test
fstps
add
sub
enter
jp
jl
fs
loopne
xchg
add
lret
mov
xor
cmp
push
jnp
popl
adc
push
hlt
jno
adc
aaa
rorl
jno
dec
inc
jmp
jle
cltd
push
and
mov
jmp
sub
inc
and
fldenv
lret
cmc
sub
fbstp
dec
cmp
dec
mov
sbb
mov
mov
xor
or
mov
repz
push
jge
and
mov
ret
mov
fbld
and
inc
cmc
mov
or
cmp
inc
cmc
nop
imull
fsin
jmp
push
sbb
cmpb
mov
jno
pop
xchg
into
inc
pop
and
lahf
jnp,pn
cmpsb
add
push
cmpsl
loop
loop
lret
jo
addr16
adc
cmpsl
scas
rclb
push
and
and
into
lds
dec
xchg
xchg
mov
pop
sbb
loope
into
xorb
pop
pushf
or
fistpll
imul
lcall
mov
lock
dec
pusha
pop
fdivl
in
dec
cs
xchg
adc
mov
inc
outsl
pop
mov
dec
sbb
std
mov
icebp
jp
pop
or
lock
cmp
jne
sub
fadds
cmp
test
loop
pop
inc
push
inc
dec
into
stc
test
hlt
xchg
sbb
and
and
rorl
in
aaa
lret
sbb
cmc
pop
stos
je
mov
push
jo
sar
out
cmp
adc
and
inc
pop
mov
or
jl
xor
cltd
pop
push
imul
mov
mov
xor
sbb
add
pop
xor
adc
sbb
mov
dec
pop
int
and
xorb
shrb
xchg
mov
sub
ficompl
mov
fiadds
lret
mov
stc
sub
ret
or
push
insb
rcrb
pop
mov
inc
test
mov
stos
xlat
xchg
mov
xchg
push
push
shlb
ja
mov
dec
push
ja
aas
leave
mov
stc
push
mov
inc
cmp
and
movsb
out
shlb
lods
leave
cmp
in
mov
sarb
sbb
push
adc
push
push
mov
lods
testb
jae
test
mov
int3
int3
loopne
sub
bound
push
push
sub
jl
add
mov
xorb
mov
fmull
inc
sub
das
int3
mov
fs
dec
mov
sub
aaa
inc
push
int3
xchg
push
loopew
mov
mov
negl
and
ja
push
add
mov
pop
pop
ret
sarb
mov
mov
fdivl
leave
jecxz
lret
test
das
jnp
jne
push
jmp
or
mov
adc
sub
or
fdiv
mov
xchg
pop
int3
insb
in
xor
and
xchg
dec
stos
adc
mov
jo
fisttpll
xchg
insl
sbb
adc
jl
push
nop
inc
int
out
dec
jae
and
sub
in
cmp
into
test
push
aam
lds
mov
pop
xchg
adc
or
popa
pop
and
movsl
mov
icebp
mov
jl
adc
les
push
mov
cmp
mov
mov
movsb
leave
xchg
adc
fdivrl
inc
sbb
into
sbb
mov
inc
push
shlb
push
mov
popf
mov
mov
std
push
pop
mov
jl
rorb
leave
lret
inc
aas
cmp
in
aaa
sbb
stos
imul
rcl
mov
add
adc
mov
jp
lock
sarl
call
inc
scas
lahf
mov
test
mov
mov
jmp
stc
pop
xor
push
push
pop
hlt
ret
lahf
adc
adc
cmp
fwait
push
and
adc
jae
xchg
vdivss
xor
pop
mov
push
xchg
lods
push
test
ficoms
dec
push
add
mov
adc
adc
and
and
std
and
push
fcoms
pop
icebp
imul
iret
and
push
xchg
nop
or
test
mov
clc
scas
push
xchg
inc
sbb
hlt
jge
xor
mov
sbb
cmp
cs
addr16
sub
out
cmpxchg
xchg
int
and
mov
fs
mov
push
dec
int3
sub
mov
stos
pop
stc
sub
inc
inc
test
jl
mov
loop
mov
aas
lea
in
push
inc
cmp
ds
xor
aas
je
push
mov
or
add
repnz
cli
cmpsl
int
pop
pop
dec
xchg
stc
inc
out
mov
das
ds
daa
imul
mov
outsb
mov
cmp
xorl
mov
fsubr
inc
insb
add
pop
cld
inc
scas
std
icebp
test
sbb
js
mov
jbe
lret
mov
jge
sbb
rolb
loope
dec
clc
jge
add
shll
aas
lahf
dec
jne
call
push
orl
xchg
fisubs
mov
mov
int
dec
inc
sub
pop
lcall
sti
and
gs
les
cmpsb
sub
jne
repz
xchg
pop
ficomps
sbb
adc
lods
das
in
leave
ja
pop
mov
mov
push
push
sbb
sub
xchg
movsb
out
jo
loop
push
adc
mov
out
mov
sbb
fnstenv
mov
dec
sbb
and
jmp
cmp
call
sahf
jg
pop
mov
sub
fdivs
add
or
sub
pop
mov
cmpsl
pop
push
sbb
int3
stc
movsl
mov
cs
xor
nop
cld
loope
mov
out
cmp
mov
xchg
or
cs
popf
cmp
sbb
sub
cmpsl
cmp
and
lea
push
lds
pop
rep
dec
fs
mov
xchg
cs
std
sub
sub
jle
ror
lcall
jp
lret
inc
aas
jle
out
cs
into
fcompl
jo
sarl
arpl
lret
adc
cmp
cwtl
add
dec
outsl
cmp
lea
mov
cwtl
test
dec
loop
repz
jae
cwtl
sub
imul
pop
dec
inc
clc
sbb
popa
test
arpl
mov
jo
ljmp
aad
rcrb
adc
in
dec
cli
mov
call
cmp
aam
pushf
mov
cmc
iret
or
mov
inc
inc
push
jg
outsb
leave
mov
imulb
mov
dec
mov
mov
and
inc
daa
shrb
test
cmp
mov
cmp
mov
cmpl
dec
les
push
jae
xor
outsb
adc
xchg
std
fstps
sbbb
push
mov
rcrl
sub
xor
push
cwtl
das
outsb
iret
shrl
xor
std
call
btr
rolb
sbb
test
loope
push
xchg
fldl
mov
jb
xchg
fnsave
jge
sub
and
mov
lcall
fnsave
cltd
push
jno
xor
sti
jmp
cmp
cmp
and
inc
cmp
ret
cmc
test
jae
ret
cs
inc
loope
dec
sbb
cmpsb
and
xchg
ja
jg
adc
xchg
adc
hlt
fstps
mov
jmp
ss
pop
les
cmp
sbb
pop
popa
push
fs
adcb
fmuls
pop
ljmp
add
cmp
pop
idivb
adc
dec
dec
xchg
lea
xchg
icebp
fs
pop
idivb
enter
lock
xor
aas
or
cli
scas
mov
insb
cmp
jge
cld
xchg
pushf
cmp
pop
aad
push
pop
shrb
int
aad
pop
imul
imul
jns
dec
push
mov
ret
dec
cltd
daa
sub
int
pop
cmpsb
fdivs
adc
add
and
insb
in
add
test
mov
xchg
cltd
or
dec
out
mov
stos
cs
mov
mov
fwait
ret
cmc
rclb
push
or
fs
hlt
pop
enter
inc
xchg
bound
outsl
pop
outsl
nop
sub
adc
cmp
movsl
cmpsl
rol
inc
leave
push
mov
xchg
pushf
sub
in
sti
push
ds
mov
jne
mov
jb
pop
fldt
je
sahf
adc
faddl
frstor
dec
sub
cmp
or
movb
xchg
stc
inc
cmpsl
out
gs
je
loope
lea
scas
aam
or
fcmovb
xchg
pop
pop
xchg
pop
jecxz
jb
lods
add
mov
or
xor
xchg
dec
dec
cmc
and
xor
sub
clc
dec
xchg
lret
call
xor
inc
adc
lea
push
js
aad
sbb
out
dec
ret
outsl
adc
insb
pushf
sub
pop
sub
and
cwtl
out
mov
lea
lds
outsl
mov
or
out
or
scas
jg
mov
movsb
int
icebp
xchg
std
out
cmp
out
ljmp
iret
jns
xchg
pop
or
inc
mov
fnsave
add
int
dec
out
in
mov
ljmp
mov
pop
push
ss
mov
push
cmpsl
jmp
cmp
sbb
fbld
xchg
ds
mov
mov
das
xchg
xor
mov
add
ja
jmp
push
daa
cmp
jge
movsl
lret
aaa
fwait
jle
je
cld
in
js
movsl
pop
lods
jmp
scas
test
fdivrl
pop
insb
jno
mov
lahf
xchg
sbb
xchg
in
loop
add
push
mov
fwait
pop
push
dec
push
pop
sub
xlat
int
inc
addr16
mov
arpl
lock
xchg
adc
sbbl
ret
cmp
mov
sti
jp
cmpb
fwait
mov
jno
lcall
les
test
js
lds
test
aas
push
mov
mov
sbb
mov
outsl
jl
or
xchg
dec
movsl
sbb
dec
add
push
negb
jecxz
cmp
sbb
shll
aaa
mov
dec
mov
pop
sbb
outsl
test
xchg
stos
outsl
cltd
cmp
cmp
mov
nop
addr16
outsb
xorl
mov
and
aas
inc
or
jbe
jae
lahf
mov
mov
insl
ja
pushf
aaa
lods
sub
fdivrl
insl
cld
popf
or
sbb
sub
cmp
dec
int
std
insb
in
jl
mov
mov
jge
insl
cld
popf
or
sbb
sub
cmp
dec
int
std
insb
in
jl
mov
mov
jge
insl
cld
popf
or
sbb
fisttpll
pop
std
insb
out
jl
mov
pushf
cmp
sub
pop
std
insb
in
add
jb
pop
sub
dec
stos
les
add
cli
jp
dec
ficompl
sub
sbb
jp
dec
lret
sub
sbb
lret
dec
ficompl
sub
jg
ljmp
sub
cmp
ljmp
pop
stos
sub
sbb
jp
sub
push
out
out
jne
lcall
aas
and
test
push
inc
xchg
or
pop
jne
pop
mov
and
mov
sub
pop
cli
test
xlat
mov
loop
outsl
jp
mov
scas
addr16
add
out
fldcw
sub
sbb
movsl
and
mov
pop
push
sub
pop
ss
sub
cli
jp
mov
pop
lret
pop
sbb
adc
cltd
mov
push
inc
mov
lcall
xor
push
stos
loop
jp
xor
insb
inc
hlt
pop
push
dec
gs
jb
pop
xchg
xchg
ljmp
pop
mov
sbb
push
jp
dec
ficompl
sub
sbb
jp
dec
lret
sub
sbb
sahf
push
add
insl
fisttps
outsl
ljmp
lcall
pop
fidivs
addr16
outsb
pushl
add
jg
pop
loop
cmp
aas
mov
dec
sub
out
add
sub
sbb
sbb
jp
dec
lret
sub
sbb
lret
pop
stos
sub
sbb
jp
dec
lret
sub
sbb
inc
and
mov
clc
pop
outsb
jge
and
leave
mov
insl
rcll
mov
cli
mov
adc
push
pop
test
dec
add
push
xor
test
cmpsl
mov
or
ret
adc
dec
fnsave
or
cld
mov
cmp
xchg
xlat
add
pop
rclb
cli
enter
cs
jne
mov
call
inc
push
roll
jecxz
out
in
sbb
dec
mov
fs
leave
mov
aas
test
mov
outsl
mov
shlb
test
repz
call
mov
cmpsl
mov
sbb
js
nop
mov
and
fs
inc
stos
jae
cmp
shll
jmp
dec
imul
mov
adc
fdivrs
cmp
and
sarl
outsb
push
mov
xor
jb
push
adc
faddl
cmp
cli
add
orl
cld
pop
pop
push
lds
adc
sbb
movsl
shlb
call
add
xchg
or
enter
adc
outsb
inc
push
sbb
sbb
adc
pop
fiadds
rcll
and
push
jle
cmp
or
shl
xchg
mov
inc
mov
inc
test
sub
stos
cld
aam
sub
adcb
imul
imul
test
xor
lret
cmpsb
ja
inc
adcl
pop
jnp
push
pop
leavew
push
out
ljmp
push
jbe
cmp
mov
mov
roll
call
push
add
out
shll
enter
lods
out
and
insl
mov
iret
cmp
xor
and
out
into
insb
dec
rcr
aam
xchg
mov
sub
fistps
xchg
int3
jns
es
cmp
mov
stc
jle
in
inc
dec
pushf
or
cld
and
fnstsw
xor
scas
loopne
push
outsl
dec
cld
jnp
das
dec
push
rcrl
push
fdivrs
sbb
xor
dec
mov
sbb
iret
stos
getsec
xchg
or
mov
dec
movb
and
fs
add
mov
xor
add
int
jmp
mov
sub
out
leave
xchg
mov
xchg
cmp
dec
pop
push
xchg
push
add
inc
cmp
dec
jo
jae
inc
les
ret
mov
lahf
mov
cs
push
mov
xlat
fwait
sahf
mov
ret
adc
sahf
ds
sub
sbb
sti
push
push
ret
push
push
jmp
aam
inc
cmc
xor
mov
jmp
sbb
pop
cmp
pop
and
arpl
or
js
inc
lods
adc
cltd
pop
shlb
xchg
in
mov
cmp
push
out
daa
fwait
pop
pop
nop
in
insl
mov
ret
outsl
mov
inc
push
xor
inc
out
mov
aam
les
dec
int3
adc
scas
cmpsl
scas
inc
mov
test
inc
int3
cld
loope
test
test
jne
jns
mov
xorb
sar
and
out
jne
inc
cmpsl
mov
cwtl
insl
repnz
stos
fsubrs
push
cmp
sbb
dec
dec
enter
inc
fstpl
dec
test
imul
arpl
stos
in
or
cld
rclb
and
out
xchg
mov
adc
xor
cmpsl
repz
xchg
outsb
les
loopne
inc
rolb
ja
xchg
aaa
mov
mov
ljmp
test
and
mov
xchg
ja
adc
xor
mov
and
jo
adc
or
pop
ret
mov
jbe
push
rcrb
rcrb
jb
inc
push
xchg
push
testl
dec
mov
sub
shl
xor
sbb
pop
cmp
sub
repz
leave
adc
dec
ja
shl
out
sub
mov
or
fsubr
lods
or
or
test
repnz
fisttpl
mov
inc
sbb
jno
fstpt
or
mov
scas
push
cli
mov
ss
cmp
sti
std
out
xchg
test
cltd
or
insl
cmpsb
cmp
arpl
icebp
out
or
fists
mov
sub
popa
gs
divw
neg
cmp
ds
in
adc
sbb
out
repz
sbb
out
popa
call
pop
lods
iret
lea
iret
stc
add
rcl
fistl
inc
or
das
push
xchg
mov
mov
aaa
enter
movsl
enter
push
pop
leave
jg
orl
aam
aas
jg
notb
loope
fs
ja
js
loop
cmp
push
aaa
nop
cmp
pmulhw
inc
push
lea
push
lods
mov
lahf
fisttpl
stc
daa
xchg
xor
sbb
jl
fstl
mov
rorb
pop
mov
push
push
inc
lahf
mov
jae
scas
xor
or
fdivrl
add
shlb
mov
pop
js
xor
loopne
scas
stos
dec
xor
inc
aad
repz
dec
adc
mov
mov
inc
ds
in
sbbb
pop
sbbb
les
xor
mov
mov
mov
xor
outsb
cwtl
sbb
lods
pop
repz
shrl
xchg
fadds
mov
mov
xchg
cmp
adc
push
xchg
shr
or
or
add
inc
int
cmpsb
cld
xchg
test
pop
add
shlb
mov
xchg
fwait
pop
jmp
data16
push
push
sbb
mov
out
inc
cltd
in
test
mov
lds
daa
icebp
data16
stos
adc
hlt
iret
aad
and
adc
ds
xor
push
loop
loopne
jb
cmp
stos
xchg
out
adc
orl
enter
fisttpl
lods
push
cmp
and
lahf
or
cmpsb
aad
lret
cmc
sub
stos
sbb
xor
xlat
mov
pop
bound
ds
or
jnp
xchg
xchg
icebp
sbb
mov
cmp
xchg
mov
int
das
imul
xor
mov
push
and
adc
mov
rcll
xor
inc
jl
push
adc
push
scas
mov
ljmp
in
fistl
es
push
cli
jecxz
inc
pop
jge
scas
clc
adc
pop
dec
xchg
push
inc
xlat
fnstcw
in
stos
test
or
add
mov
cwtl
fnstsw
ja
xor
je
dec
orl
fimuls
jmp
sti
scas
dec
pop
pop
sub
into
outsl
aad
push
lods
enter
fistpl
add
push
mov
xchg
mov
mov
in
rolb
filds
fisubrs
sbb
dec
inc
fwait
out
fsts
pop
stc
push
rcr
xchg
jg
dec
or
stc
and
push
jmp
push
lea
sbb
decl
fidivl
cmp
xlat
fwait
daa
add
lahf
fwait
inc
icebp
je
mov
fdiv
shll
fldl
sub
ret
testb
mov
fimull
sti
inc
cmp
push
and
aad
xor
cld
jle
xor
mov
sbb
pusha
sbb
push
cmpsb
sub
ljmp
out
or
fnsave
add
xor
icebp
push
jno
mov
les
fbstp
mov
pusha
jg
in
incb
jns
insl
jle
aas
sub
cmp
mov
imul
hlt
jp
jbe
mov
loope
scas
sti
push
imull
mov
daa
push
pop
cld
jmp
or
into
xchg
and
or
adc
aas
cmp
out
add
loopne
movsl
addr16
rcr
lock
mov
fsubrs
shlb
xchg
lahf
enter
jecxz
daa
clc
popf
ljmp
jle
or
hlt
and
inc
andl
pushf
sbb
popa
int3
sbb
cmpsb
add
or
fsubl
or
xor
mov
xor
ja
xchg
pop
dec
mov
sarl
xlat
adc
neg
lcall
adcl
pop
les
push
cmpsb
push
xchg
pop
pop
addr16
add
mov
adc
mov
fadd
pavgb
shlb
jae
dec
adc
pusha
xor
mov
cmpl
mov
push
pop
push
xchg
stos
inc
jae
daa
inc
in
into
addr16
dec
adc
sti
jle
mov
or
in
lahf
rol
sti
or
jecxz,pt
clc
jne
roll
sub
push
icebp
daa
cmp
push
test
or
fmull
mov
int
es
xchg
add
addr16
xchg
sbb
mov
loop
push
dec
repz
cld
jl
or
dec
add
in
inc
ljmp
mov
add
inc
push
data16
jp
sbb
fcmovne
xchg
test
pop
ljmp
scas
dec
fistpl
sahf
mov
cwtl
fwait
jbe
and
mov
xorl
cs
mov
inc
in
inc
push
inc
dec
mov
leave
xchg
xchg
jns
adc
adc
push
rolb
mov
sahf
and
bound
mov
lcall
mov
cmp
push
out
orl
dec
gs
mov
repz
and
inc
jp
sbb
inc
jg
dec
push
repz
push
and
cmc
cmp
int
mov
sub
leave
imul
testb
adc
loope
lret
icebp
push
daa
sbb
adc
test
in
jle
lds
in
pop
mov
push
cs
sbb
stos
adc
lcall
xchg
add
pop
ret
mov
ss
dec
call
iret
loopne
mov
test
outsl
add
pop
fwait
xchg
jp
xlat
cwtl
ret
inc
dec
jae
out
out
jnp
pop
das
insb
loope
stos
daa
lcall
addb
mov
mov
icebp
scas
fsubrl
fucomip
sub
int
mov
or
hlt
adc
test
imul
mov
dec
mov
cmpsb
sub
scas
aam
pop
ret
sbb
pop
push
aad
rol
pop
aas
cmp
inc
aaa
icebp
mov
test
mov
pop
jnp
sub
fcoms
dec
cmp
push
out
jle
out
sbb
mov
and
push
xchg
or
sub
aad
sbb
mov
add
mov
repnz
sti
pop
insl
push
fldl
ja
fiadds
cmp
or
stos
rorb
pop
and
test
lods
adc
sub
mov
or
in
cwtl
jae
aam
sub
xchg
les
andps
daa
push
cli
int
pop
sbb
dec
test
daa
inc
lahf
cs
mov
inc
repnz
xchg
daa
out
shr
adc
mov
or
aas
mov
sarl
movsl
lods
dec
sub
pop
adc
adc
out
and
mov
leave
mov
mov
and
mov
and
aam
mov
shl
imul
xor
adc
scas
aas
inc
xor
and
popa
fdivr
bnd
out
sub
sbb
xchg
inc
and
cmp
adc
dec
adc
out
stc
icebp
sub
add
ret
cmovbe
jo
lret
out
xchg
and
cmp
mov
shrl
lock
mov
push
movsb
fmulp
sbb
imul
out
fisubl
mov
sahf
nop
aad
dec
inc
rol
mov
das
in
in
dec
dec
mov
push
in
jbe
fmulp
or
shlb
mov
mov
xchg
or
ud2
dec
or
ds
cld
jmp
dec
cltd
test
inc
test
out
mov
mov
jecxz
inc
ds
mov
push
test
rcrl
mov
xor
test
fists
cwtl
sbb
xchg
daa
push
or
lods
cmp
enter
push
cmc
jbe
popl
push
jns
test
test
imul
cmp
and
mull
xchg
xchg
jp
jo
fcmovnu
xchg
stos
call
data16
cld
adc
mov
out
sub
add
dec
pop
adc
push
sub
loope
mulb
movsl
jmp
popf
mov
stos
dec
aaa
aas
in
add
movsl
cmp
fbld
popa
or
inc
mov
aaa
sbb
add
or
lcall
adc
aam
mov
lcall
aas
in
ja
cltd
xchg
xchg
test
in
jb
icebp
or
loop
pushf
es
out
xor
mov
xchg
add
mov
shlb
mov
idivb
mov
jle
fsubrs
push
cmp
imul
mov
and
test
out
adc
jmp
cmp
fistpl
cmp
test
lds
mov
jmp
imul
cmpsb
leave
loop
xchg
cmpsb
and
mov
jnp
jg
jg
lods
jbe
jne
dec
add
jns
lahf
adc
int3
rclb
shlb
dec
adc
push
out
mov
cld
jge,pt
data16
sub
mov
cmp
add
sub
fstpl
imul
sbb
decb
jmp
or
push
dec
cmpsb
push
out
sub
movsb
sub
fs
sub
push
mov
lock
push
and
incb
and
in
ficompl
mov
fsubrl
mov
les
cmpsb
ret
jo
leave
mov
pushf
inc
mov
mov
mov
or
xchg
sbb
repz
mov
jg
xor
adc
lret
and
scas
in
scas
sub
push
into
sub
fnstenv
jns
or
inc
and
jns
adc
pop
mov
jbe
push
popf
jmp
movhps
in
mov
xchg
xchg
inc
pop
push
cli
mov
ret
aas
inc
test
mov
mov
pusha
bound
and
dec
pop
mov
mov
inc
add
int
fisttps
xor
sbb
mov
sub
mov
stos
cmp
lea
jnp
mov
cmp
ss
mov
mov
sub
cmp
adc
mov
out
movsl
das
repnz
enter
in
jge
inc
push
stc
cltd
adc
push
jl
je
inc
adc
mov
pop
cmpsl
xlat
push
and
push
sbbl
jecxz
mov
sub
lea
sub
fmull
xchg
roll
jns
cli
xchg
addr16
ret
cmp
hlt
movsl
je
adc
daa
mov
xor
mov
add
fdivl
xor
inc
and
sub
test
sub
call
data16
sbb
data16
mul
xchg
daa
notl
and
faddl
lock
cmp
js
test
add
sbb
sbb
push
mov
push
adcb
lock
stos
repz
lods
int3
gs
push
testb
dec
inc
inc
sub
jp
mov
stos
mov
inc
test
sub
lea
inc
inc
pop
mov
dec
sbb
popa
inc
sub
movsb
imul
popa
jge
or
push
fldl
test
mov
pop
jecxz
lea
es
decb
jb
adc
mov
sub
lret
jno
xor
pop
bound
xchg
mov
movsl
or
xor
hlt
sub
movsb
xchg
insb
in
lods
incl
sub
test
xchg
stos
cmp
mov
pop
clc
mov
push
sbb
in
dec
lods
leave
jne
popf
dec
orl
leave
xor
mov
into
inc
iret
jmp
das
js
and
dec
jbe
adc
dec
fdivrl
push
jle
dec
cmp
xchg
inc
fists
nop
jo
inc
sub
sbb
push
fistpll
ficoml
cwtl
inc
adc
test
stos
pop
mov
inc
lcall
lods
mov
jp
cmp
mov
xor
cld
jae
imul
sti
fdivr
inc
iret
sarb
cmpsl
test
sbb
rolb
mov
mov
stos
cmp
add
inc
dec
cmp
ljmp
lret
cmpsb
xor
inc
ds
lea
xor
das
pop
out
adc
arpl
add
fisubrl
rcl
inc
xchg
ret
test
mov
push
and
push
sbb
addb
xchg
mov
loopne
jno
push
or
push
rolb
js
addl
mov
mov
sub
ja
enter
outsl
repnz
xlat
mov
shlb
pop
xchg
subl
dec
movsl
sti
dec
dec
cmc
gs
movsl
fs
aad
pop
jl
int3
jg
or
push
pop
cmp
mov
lock
mov
mov
xchg
push
lds
fwait
int3
inc
mov
pop
pusha
rorb
inc
lds
aaa
push
pop
das
pusha
movsb
sub
mov
ja
mov
stos
xor
ja
dec
adc
inc
inc
icebp
xor
and
pushf
jae
out
xchg
shr
xchg
ret
mov
jmp
rolw
pop
shrl
into
push
cld
push
out
sti
rcrb
xchg
decl
cwtl
cmp
pop
sti
mov
out
ret
mov
pop
adc
mov
jb
scas
lahf
rcl
lock
rorl
pop
push
xchg
lods
rorl
and
shrl
dec
cmc
shl
xchg
clc
out
push
lret
or
icebp
scas
mov
adc
mov
lea
jl
in
loope
xchg
sbb
mov
or
cmp
jbe
lods
gs
xchg
mov
mov
outsl
dec
cmpsl
mull
inc
aad
loop
insb
mov
out
or
sbb
leave
lds
hlt
cmpsb
or
leave
add
das
push
leave
es
notb
and
jne
mov
pop
jno
dec
lret
out
aad
loopne
notb
xchg
push
adc
in
push
inc
push
and
test
jecxz
push
pop
fsubs
dec
adc
dec
cmpsb
mov
aam
test
xchg
jg
fisttpl
mov
jno,pn
loopne
cli
push
mov
dec
adc
inc
adc
cs
or
test
mov
jne
inc
in
leave
or
insb
gs
mov
loop
std
into
dec
fidivrl
xor
daa
std
ret
stc
and
lret
notl
inc
or
cs
sbb
sti
data16
lods
enter
andl
int
inc
xor
adc
push
pop
sub
fildl
inc
icebp
leave
and
in
int
loop
xor
out
inc
popa
je
xchg
push
in
push
xor
sbb
cmp
test
jo
test
mov
cmc
aas
and
cmpb
rorb
mov
adc
int
xchg
push
mov
out
jp
push
push
push
dec
pop
dec
sub
jne
jno
fs
pusha
in
ficoml
mov
test
pop
jg
pop
les
and
sub
push
sbb
lcall
out
sub
sub
add
lcall
loopne
stos
imulb
imul
adc
andb
iret
mov
outsl
cmp
dec
jecxz
pop
jae
xchg
pop
mov
mov
stos
and
jnp
inc
adc
rclb
sub
and
fnstcw
pop
inc
cltd
int
shlb
xor
or
xor
jmp
mov
into
es
testl
fs
lds
pop
repnz
xchg
in
cmpsb
and
mov
lcall
shlb
lahf
mov
popa
or
add
and
xchg
cmp
les
scas
pop
mov
lea
icebp
aad
leave
xlat
and
imul
push
rorb
cmp
repnz
jae
dec
inc
fabs
aam
and
and
mov
ja
adc
pushw
or
xlat
pop
cltd
inc
faddl
and
cmp
imull
or
adc
mov
pusha
test
jno
fsub
mov
mov
jl
cmp
lds
sbbb
jno
out
jne
and
ja
add
into
jmp
cmp
es
and
adc
test
or
test
push
insl
and
aam
loop
in
add
pop
pop
pop
enter
xchg
out
imul
sti
inc
mov
mov
add
out
and
jb
pop
pop
cmp
daa
pushf
outsb
pop
push
int
pop
mov
fildl
mov
inc
cmpsb
pop
adc
test
fistl
jbe
xchg
sub
test
pushl
jle
dec
rol
cmp
ficoml
inc
pop
rcrl
mov
mov
movsb
mov
sbb
aam
incl
jmp
add
mov
call
shlb
das
jp
dec
ficompl
sub
sbb
jp
dec
lret
sub
sbb
lret
pop
stos
sub
sbb
jp
dec
lret
sub
sbb
lret
pop
stos
sub
sbb
jp
dec
lret
sub
sbb
lret
dec
ficompl
sub
fisubrl
jp
loopne
pop
lods
pop
and
gs
call
push
ljmp
pusha
mov
outsl
and
add
add
pop
push
add
add
adc
add
add
add
push
pop
pop
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
cmp
add
add
add
add
js
inc
add
add
add
add
push
add
add
dec
add
push
add
imul
into
add
add
push
add
add
add
add
insl
add
test
xor
imul
imul
push
add
mov
add
add
add
stos
add
add
add
mov
dec
add
add
add
add
add
add
add
add
add
or
cmp
xchg
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sub
inc
add
add
popf
add
or
sbb
sbb
inc
add
add
add
insl
add
popl
lea
jb
jb
sbb
cmp
jge
xchg
sub
add
push
add
cmp
dec
add
add
add
pop
add
add
add
add
add
add
add
mov
add
mov
xchg
add
add
add
add
add
sub
xchg
add
add
add
add
add
add
xlat
add
add
add
add
stos
add
xor
dec
add
push
add
push
add
add
add
inc
add
pop
add
add
add
push
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
xchg
add
dec
add
enter
sub
movl
jno
sub
sub
xchg
add
sub
sub
dec
add
add
jb
outsb
add
repz
cmp
add
xchg
add
adc
add
add
add
add
add
add
inc
add
add
add
add
add
aad
testl
inc
add
jb
sub
pop
add
inc
add
add
add
xchg
add
add
add
add
dec
add
sub
popf
add
inc
add
add
add
je
les
inc
add
add
add
add
add
add
add
add
fildl
xchg
push
pop
mov
test
test
xlat
add
add
add
add
add
and
mov
xor
fiaddl
xor
inc
add
add
jo
stos
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
dec
add
add
adc
sahf
add
add
add
sub
sub
mov
and
push
add
add
add
add
add
add
add
mov
sbb
inc
add
add
mov
add
add
dec
add
add
add
sub
lcall
add
les
add
arpl
push
in
out
jns
dec
sti
jb
or
int3
in
ss
inc
dec
cmp
jno
and
test
in
jmp
cmp
cmpsb
pop
xor
pusha
jbe
in
scas
enter
add
jl
movsl
dec
imul
outsl
daa
jl
movsb
pop
je
stos
push
jno
ja
sbb
in
and
les
andl
xor
pop
inc
insl
pop
sub
push
in
inc
cltd
mov
and
inc
pop
arpl
in
sub
rclb
lock
mov
mov
jb
repnz
xor
or
stos
fisttps
sarl
dec
cltd
cmp
popf
mov
and
out
inc
bound
mov
gs
xor
lds
das
jns
pop
data16
xlat
jno
sub
subb
fildl
mov
sbb
mov
pusha
sarb
idiv
xchg
dec
outsb
outsb
push
sarb
adc
subb
fsubr
push
inc
jno
cwtl
adc
insl
and
adc
popf
xor
pop
pop
cmp
mov
fmull
sbb
pushf
pop
sub
mov
jbe
and
fs
jle
push
lods
xchg
pushf
data16
push
push
mov
test
xchg
add
add
rolb
push
add
or
pusha
jbe
mov
add
add
scas
or
fildl
aam
adc
adc
add
add
or
aad
fcoms
insl
inc
popa
aaa
dec
jp
mov
jno
mov
shlb
clc
xchg
push
test
out
mov
add
iret
push
loopne
dec
lock
mov
cltd
stc
mov
xor
scas
popl
xlat
clc
sub
iret
xchg
in
cmc
push
xchg
adc
test
scas
imul
or
dec
push
repz
flds
out
jns
dec
xor
xchg
jle
mov
popf
mov
mov
faddl
lret
lret
dec
nop
jle
xchg
lcall
push
dec
cmpsb
push
push
loopne
xor
fsubrl
push
adc
xchg
lahf
mov
movsl
cmpsb
arpl
jmp
pop
add
addr16
mov
movsb
xchg
push
push
hlt
sahf
out
pop
out
enter
and
add
cmpsl
add
sbb
mov
mov
jno
jnp
fcomip
shr
rorl
jle
sti
cmp
ja
inc
cmpsb
xor
pop
jecxz
inc
push
mov
pop
mov
mov
lds
hlt
and
rcll
mov
xor
mulb
xchg
clc
or
or
aad
in
repz
nop
jae
call
outsl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
