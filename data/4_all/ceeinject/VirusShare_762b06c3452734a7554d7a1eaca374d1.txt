fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
je
fs
dec
inc
pop
cmp
push
pop
jno
popa
cmp
sub
cmc
aam
fidivs
test
push
dec
inc
pop
xor
and
adc
add
hlt
out
in
mov
andb
enter
aam
sub
and
adc
add
hlt
out
in
cmpsl
scas
ljmp
cld
ljmp
sbb
and
lahf
fbstp
gs
xchg
xor
sbb
aad
insl
fdivrs
push
cmp
loope
adc
add
inc
mov
mov
xchg
add
out
daa
pushf
pop
int3
scas
push
xor
inc
hlt
out
mov
sub
scas
and
inc
pop
xor
jle
dec
lds
cmp
ljmp
push
pop
xor
fisttps
int3
xor
adc
sbb
add
test
cmp
cmpsb
stos
je
xchg
adc
cmp
jmp
pop
movsb
mov
xorl
loop
pop
push
cmp
cs
adc
add
hlt
out
in
aam
movsb
push
xchg
xchg
test
and
xor
insl
push
jno
inc
pop
mov
loopne
mov
test
shr
int
sar
shl
ja
push
cmp
dec
insb
adc
add
xchg
out
xchg
pushf
sub
out
test
sbb
and
xor
and
adc
add
hlt
out
in
aam
fidivs
test
push
dec
inc
pop
xor
and
adc
add
hlt
out
in
aam
fidivs
test
out
xor
out
dec
mov
lods
cmpsl
sbb
popf
mov
xchg
dec
cmp
sbb
mov
push
cltd
shrb
scas
mov
movsl
mov
push
pop
lea
xor
cld
cs
test
out
sti
dec
fcoms
int
in
std
arpl
add
test
dec
mov
in
imul
mov
adc
adc
ss
fcoms
mov
xor
inc
jne
ds
loopne
sysenter
enter
out
xor
ljmp
mov
and
mov
std
push
cmp
pop
popa
push
push
mov
stos
nop
mov
xchg
inc
ss
fsubs
nop
mov
insl
pop
sti
das
loop
mov
mov
nop
mov
xchg
daa
addr16
pop
lret
mov
sbb
cli
mov
test
sub
and
lock
icebp
int
or
sbb
fbstp
out
xor
mov
addb
lock
roll
es
mov
xor
lock
xor
jmp
jb
or
pushf
mov
xchg
adc
dec
sti
sti
sti
idivl
xor
mov
xchg
dec
jns
ljmp
aad
or
xor
xchg
cld
add
mov
adc
xlat
divl
adc
sarb
or
add
lods
es
xor
imul
mov
mov
xor
cld
mov
cltd
jae
loope
adc
xlat
out
aas
cmpsb
mov
mov
ja
jae
sub
adcl
xchg
add
push
fnstsw
xor
mov
nop
in
stos
sub
sbb
dec
lret
test
jae
out
test
into
fadd
lahf
fdivs
loopne
lea
rclb
fstpl
adc
lahf
push
xchg
loop
cmc
push
movsl
push
loope
lcall
pop
add
inc
popf
push
push
push
cmp
sbbb
pusha
aam
mov
rolb
xchg
test
popf
leave
std
orb
dec
cmpsb
and
mov
mov
add
pop
lcall
adc
mov
or
movsb
push
daa
icebp
xor
test
and
sahf
pushf
mov
pop
adc
push
jl
mov
insl
andb
ds
negl
cmp
ret
adc
das
dec
push
mov
arpl
mov
mov
outsl
insl
sahf
rcr
sbb
fwait
ds
loop
daa
call
imul
and
xchg
movsb
dec
jnp
bound
test
adc
test
popa
insl
lods
add
clc
xchg
call
cmp
incb
shrl
leave
rcr
ljmp
sub
adc
jo
fsin
push
xchg
dec
lret
lods
sbb
cmp
xchg
or
clc
xor
mov
sub
ss
and
mov
inc
dec
add
repnz
stos
jno
cmpsl
push
gs
fstps
fsubrl
push
loopne
data16
mov
mov
inc
adc
jns
lock
sub
das
lcall
loopne
and
xchg
adc
divps
xchg
inc
ja
dec
adc
pusha
rclb
jne
xchg
rorl
xchg
das
outsl
out
xchg
sub
je
daa
jge
or
jmp
popf
shll
imul
ljmp
mov
xchg
mov
inc
dec
arpl
xor
jno
popf
dec
call
jg
dec
fimull
sub
gs
les
xor
add
xchg
pop
xlat
cmp
inc
bound
mov
decl
and
mov
pop
repnz
jne
ljmp
pushf
mov
mov
test
sub
aam
and
fnsave
lcall
sbb
repnz
cmp
xchg
xchg
mov
xor
pop
dec
lahf
pop
push
adc
lods
adc
inc
or
push
and
sub
xorl
loope
cli
cli
mov
add
rorb
mov
mov
or
adc
loop
fs
bound
pusha
xchg
push
xchg
add
loop
xor
js
dec
bound
fwait
mov
orb
push
js
inc
or
jo
inc
sahf
inc
and
xorl
lea
lods
aaa
xchg
xchg
inc
rep
icebp
popf
fcmovnu
out
cmp
xorb
mulb
shlb
pushf
ror
push
xchg
lods
insl
and
xor
sbb
and
mov
cmp
adcl
arpl
cli
in
movsb
fdivrs
out
fnop
pop
push
fcoml
es
sbb
mov
push
call
ljmp
pop
dec
push
push
cmp
jae
arpl
jnp
jnp
pop
stc
in
lock
ds
iret
jae
push
inc
fs
outsb
dec
xor
mov
mov
mov
mov
insl
sbb
outsl
inc
jge
repz
mov
je
lret
fidivl
je
sub
inc
movsb
in
hlt
pushf
out
pushf
es
mov
jb
int
xor
push
inc
pop
jno
and
cmp
lods
and
add
adc
lds
cmpsl
dec
xor
fcmovnbe
iret
les
cwtl
jo
add
test
addl
in
dec
xor
stos
jmp
dec
fs
movsl
ja
lret
movsl
jns
in
out
push
cmp
ja
gs
pop
dec
adc
xchg
mov
or
xlat
mov
and
mov
dec
cmp
lods
ret
stos
inc
add
sbb
adc
iret
mov
xor
mov
scas
lods
mov
dec
cli
subb
lahf
loop
sub
test
add
cmpsl
mov
mov
mov
arpl
ljmp
sub
pop
add
xchg
push
mov
xchg
data16
outsb
sti
inc
adc
test
roll
sbb
jnp
mov
dec
push
mov
add
sbbl
setnp
pop
imulb
ss
mov
add
fstl
sbb
jecxz
xchg
adc
cwtl
dec
mov
cs
sbb
arpl
imul
add
imul
xor
push
push
leave
mov
cmpsb
movsb
fldcw
adc
aas
adc
les
outsb
mov
mov
xor
add
cmp
push
out
popf
fucomp
addr16
xchg
aam
add
dec
into
xchg
add
lods
fbstp
imul
cmp
push
into
fcmovnbe
ror
mov
repnz
in
andb
cwtl
jg
inc
mov
outsl
fwait
pop
sub
shlb
add
mov
scas
enter
lods
xor
ret
push
loope
subl
jnp
sti
lods
ljmp
sahf
lods
mov
repnz
dec
sub
xlat
insl
jl
adc
loop
test
jg
call
xchg
pushf
lods
lcall
or
mov
shl
xlat
stos
in
jmp
fmul
inc
push
cmpsl
outsl
xchg
stc
clc
arpl
inc
sub
jnp
push
add
mov
mov
adc
ljmp
mov
int
out
call
call
xor
dec
aad
shrl
xlat
push
fidivs
fsubs
push
mov
push
adcl
les
lret
mov
mov
inc
mov
scas
ljmp
mov
cmpsb
ja
sbb
shrb
mov
mov
xor
jecxz
mov
int
xchg
jmp
add
into
shl
mov
aad
pop
pushf
pusha
aam
stc
imul
into
and
dec
addl
and
xchg
mov
mov
mov
inc
or
mov
scas
into
mov
jmp
test
mov
adc
ret
mov
mov
and
in
leave
xchg
push
cmp
fildll
jle
test
pop
jecxz
mov
add
lods
aaa
imul
sar
cmp
cmpsl
push
cmp
scas
mov
int3
mov
dec
sub
lods
fisubs
xchg
pop
mov
test
mov
pop
cmpb
in
loop
outsb
or
je
popf
jae
xchg
cli
add
fisubs
add
xor
sahf
lds
cmpb
mov
xor
xchg
xchg
dec
leave
popf
xor
iret
adc
inc
movl
dec
mov
dec
push
mov
jno
xchg
sahf
movsb
adc
roll
popf
mov
cmp
sbb
pop
pop
pop
jp
mov
cld
add
xchg
dec
push
out
mov
lods
cmp
int
adc
lret
and
repnz
out
popa
jle
mov
mov
int3
jae
xchg
cmp
push
push
jmp
push
js
cmpsl
pop
ret
cltd
cld
sti
das
test
cmp
mov
xchg
jnp
jg
adc
cmp
stos
push
push
cmp
leave
hlt
cmp
test
ljmp
xor
mov
fwait
popa
xlat
repz
nop
clc
sbb
pop
inc
in
jge
frstor
in
rorb
pop
lcall
or
int
lods
pusha
fwait
popf
jg
pop
call
ds
mov
jnp
inc
sbbb
mov
pop
mov
push
inc
xchg
shl
xchg
icebp
and
fcoml
shrl
daa
imul
pop
and
pop
or
pop
push
sbb
rolb
push
jns
mov
jl
stc
and
or
lea
repnz
lret
mov
loope
inc
dec
clc
out
nop
dec
into
jbe
mov
sub
add
inc
mov
enter
fcmovu
adc
sbb
arpl
adc
or
inc
popa
jp
movsb
pop
pop
loope
adc
or
pop
cmc
popf
pop
notl
in
cwtl
or
movsb
xor
inc
adc
jne
mov
arpl
inc
hlt
lahf
into
lret
pop
xchg
test
inc
stos
cs
push
pop
andb
xchg
mov
or
les
orl
leave
insl
jb
mov
aaa
inc
sbbb
aaa
sub
mov
movsl
sahf
insb
scas
shlb
inc
hlt
push
into
sahf
or
sub
mov
jle
pop
xchg
inc
fcmovb
stos
ret
sub
test
push
into
loope
pusha
roll
sbb
sahf
mov
mov
push
adc
das
into
and
adc
adc
jmp
push
cmp
loope
inc
ss
mov
inc
and
mov
add
repnz
add
pop
inc
adcb
arpl
inc
and
test
fwait
and
mov
decb
cli
sbb
xchg
adc
xlat
sbbl
stc
push
jno
pop
js
mov
test
xchg
addr16
dec
pop
push
cmp
sbb
sub
lahf
add
mov
leave
dec
mov
cmp
shlb
scas
movsb
and
mov
lret
cs
cmp
adc
jmp
sub
out
mov
fs
adc
test
dec
xchg
inc
out
lods
rclb
lret
xor
out
cmp
cmpsl
rcrl
dec
mov
pusha
push
in
adc
xor
dec
jo
inc
add
lods
rcrb
out
fistpll
sbb
mov
cmp
dec
movsb
je
jns
aaa
mov
repz
int3
outsl
jb
pusha
add
lods
or
push
mov
mov
rorl
stc
lods
mov
sbb
jno
sbb
int
fmull
add
stc
out
and
dec
lahf
enter
mov
js
sbb
pushf
pop
jo
mov
pop
xor
pushf
out
std
inc
shlb
sbb
adc
inc
mov
adc
divb
xor
ja
push
sbb
cmp
push
xor
xor
adc
inc
shlb
jo
adc
or
jno
cmp
xchg
paddb
push
xlat
movsb
pop
mov
jl
pushf
out
cmpsl
push
push
jb
daa
in
cwtl
push
lahf
and
enter
jecxz
sti
mov
mov
out
push
mov
incl
lock
fdivs
push
sbb
lods
jnp
jne
sbb
jecxz
sbbb
xor
push
inc
xor
xor
push
mov
push
movsl
jne
add
daa
call
loop
xchg
cmp
aas
loopne
mov
mov
push
rolb
add
mov
push
icebp
sbb
sbbl
jge
fdivs
movsl
hlt
das
mov
movsl
cmc
cmp
lds
and
pop
repnz
es
call
jnp
test
cmp
sbb
shr
gs
jnp
push
mov
xor
arpl
inc
imul
cmp
fisttpl
js
gs
adc
add
dec
fnsave
push
fsubrs
add
add
xchg
lret
leave
in
cmp
ret
lret
dec
inc
int
adc
int
scas
add
add
shll
ljmp
notb
aas
pop
leave
sub
cld
jp
call
mov
push
jne
pop
adc
cmp
pop
shll
ret
mov
inc
enter
in
iret
inc
stc
shlb
adc
sahf
nop
xor
sbb
stc
test
cli
jb
inc
mov
push
imul
ret
jnp
pop
shrb
push
mov
fs
leave
jge
inc
lcall
fiaddl
pop
ljmp
sbb
add
add
pop
or
mov
push
cmp
dec
xchg
or
or
iret
dec
inc
int
mov
or
lret
xchg
mov
test
jno
and
iret
stc
arpl
in
dec
int
sbb
cmp
fdivrl
inc
mov
ficoml
ja
xchg
roll
ret
jp
mov
sub
jmp
inc
push
out
jecxz
xchg
mov
xchg
stos
push
jl
arpl
sub
fs
jno
inc
sub
xchg
je
outsl
test
dec
int
cmp
or
xor
xor
mov
push
mov
sub
mov
or
mov
jmp
fisttpl
out
mov
pop
xor
lock
cld
arpl
sbb
rcrl
fldl
sbb
mov
sub
rcrb
aam
in
jo
pushf
dec
rorb
ror
clc
mov
nop
xchg
jo
repz
aaa
mov
cmp
movsl
lret
pushl
lods
push
pop
jo
outsl
inc
mov
jmp
adc
popf
cmp
pushf
nop
bound
mov
push
lcall
loopne
int3
test
mov
and
push
pop
and
fnstenv
pop
hlt
ja
sti
je
mov
fimull
or
mov
pop
jno
push
push
lahf
push
jmp
pop
and
rcll
sahf
ljmp
fimuls
bound
out
xor
lods
repnz
and
cs
dec
stos
loopne
into
das
push
in
inc
lock
sub
out
pop
cmp
push
inc
nop
mov
cltd
add
jnp
fs
mov
scas
jns
ret
ficomps
jp
imul
out
ficoml
sbb
push
xorl
xor
jge
test
leave
jns
xchg
or
pop
push
js
add
sub
sub
dec
fimuls
add
lods
cs
ficompl
sub
aam
dec
sub
mov
aad
mov
inc
jbe
xchg
xor
ret
jp
outsb
lea
fwait
and
shlb
shll
xor
les
cli
cmp
fcoms
push
add
inc
mov
xor
stc
rcl
mov
pop
mov
sti
outsl
or
sahf
cwtl
out
ds
inc
cmp
je
scas
jnp
out
dec
movsl
push
call
scas
cmpsl
xchg
mov
or
push
mov
outsb
insb
aas
and
xor
mov
ret
adc
xchg
mov
add
jae
popa
xchg
pusha
mov
lds
add
fdivrp
es
add
jg
andb
ljmp
sbb
in
scas
movsl
das
insb
lods
dec
xchg
dec
and
sbb
mov
push
push
lock
sub
jnp
sbb
dec
mov
mov
fstpt
nop
rclb
sbb
ss
mov
cmp
add
adc
dec
cwtl
or
dec
inc
jo
inc
or
sbb
shrb
repz
inc
xor
xor
cli
shlb
dec
stos
lods
mov
sbb
lock
and
fdivrp
mov
cwtl
cmc
out
pop
pop
ret
ror
mov
leave
jns
flds
iret
inc
dec
subb
cmp
loop
jbe
insl
jecxz
xlat
jb
sub
fisubl
inc
dec
adc
xchg
sub
repnz
sbb
loop
mov
ret
sbb
or
cmp
pop
push
sbb
pop
out
scas
adc
fstps
loop
sub
pop
push
push
xchg
xchg
and
mov
sub
sbb
in
pop
jnp
mov
mov
dec
add
or
jmp
pop
pop
dec
xor
cwtl
sbb
pop
or
and
dec
xchg
cmc
cwtl
push
jb
mov
xor
mov
mov
or
fimuls
xor
orl
push
les
mov
or
enter
lahf
cmpsb
or
out
aam
pop
fisubrl
and
adc
push
out
push
pop
imul
js
in
cmp
sub
ret
push
mov
dec
movsb
dec
adc
in
add
and
lahf
cmp
jp
pop
mov
test
sub
fdivr
mov
mov
cmp
pop
push
add
add
arpl
jns
dec
repz
pop
lods
sbb
enter
jle
sbb
int3
inc
mov
pop
fldt
jo
test
cld
adcb
sbb
xchg
dec
pop
fisubrs
xchg
push
jg
xor
or
lret
cmp
out
loopne
fcompl
mov
cmpsl
mov
xchg
les
pop
xchg
cltd
or
lret
addr16
test
adc
addl
loope
pop
mov
add
and
sbb
std
jle
cmp
cmp
arpl
dec
in
ficompl
pop
stos
rcrl
dec
mov
add
jae
das
mov
cmp
loope
and
xor
add
mov
scas
stc
cld
imul
in
in
into
and
xchg
in
xchg
lret
mov
sbb
in
ret
xchg
xor
sub
outsl
xchg
mov
mov
fistpll
imul
movsl
xor
mov
adc
test
mov
aad
mov
cmc
repz
shrl
mov
push
outsl
test
mov
jns
sbb
fucomp
fdivs
mov
inc
add
outsl
push
sub
ret
adc
cmpps
mov
filds
or
dec
ret
xor
pushf
ljmp
and
push
sbb
lods
pusha
or
mov
pop
cmp
sbb
jmp
das
lcall
xchg
and
mov
test
cmc
xchg
pop
packssdw
xor
clc
cmp
aam
add
ja
xor
push
pop
insb
xor
jno
adc
int
mov
aad
cltd
jmp
xlat
jmp
pop
in
stos
arpl
icebp
or
test
mov
jmp
leave
push
adcl
cwtl
ud0
fmul
cmp
sbb
cmp
in
mov
xchg
rcr
aas
sub
push
inc
sub
int
stos
cmp
pop
in
inc
and
mov
cwtl
cld
fcomi
jg
mov
adc
dec
mov
or
adc
ret
or
in
movsb
js
and
int3
fdivrs
ss
cli
lret
ret
stos
ficoms
fwait
sarl
or
xadd
pop
test
dec
cli
stos
cmp
repz
sbb
lea
out
mov
sahf
pop
push
popa
nop
mov
sbb
mov
mul
adc
orb
hlt
push
fdivr
push
testb
inc
xor
sti
leave
xchg
popf
mov
xchg
shrb
dec
loopne
in
sub
outsb
ror
cmp
push
rorb
xor
push
jle
mov
dec
sub
lods
adc
stos
clc
shlb
lea
dec
xchg
icebp
daa
fs
dec
out
loop
xchg
iret
jbe
pop
repz
pushl
cwtl
mov
popf
push
and
dec
push
lcall
sarl
mov
loope
inc
sbb
cmp
test
add
ret
push
dec
dec
sbb
test
out
or
inc
pop
xor
and
adc
add
hlt
out
in
aam
fidivs
test
push
dec
inc
pop
xor
and
adc
add
hlt
out
in
aam
fidivs
test
push
push
inc
pop
xor
and
adc
add
hlt
out
in
aam
xlat
mov
movsb
mov
je
fs
and
adc
add
hlt
adc
push
jle
les
imul
out
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
lret
or
sbb
push
adc
stos
stos
pop
mov
imul
clc
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
lret
jnp
sub
dec
and
adc
jmp
push
push
pop
mov
test
sbb
dec
xchg
bound
fistl
or
jp
mov
inc
icebp
add
sti
xchg
jle
jne
push
mov
jp
iret
sti
iret
jmp
jbe
fs
sbb
enter
cmpsb
aad
into
stc
loope
lds
sbb
inc
into
mov
pop
out
cmp
or
sti
fidivrl
sub
sub
ret
jmp
push
xchg
fwait
jnp
mov
pop
push
and
xchg
adc
rcr
js
into
mov
xchg
into
pop
mov
stos
stos
or
mov
cli
or
sbb
jbe
ljmp
mov
pop
aaa
and
test
jae
sbb
scas
jecxz
and
or
loope
fwait
push
dec
popa
inc
sub
imul
sarb
fiaddl
mov
outsl
mov
sbb
pop
rcrb
stos
sbb
incb
ljmp
dec
inc
sahf
pop
mov
push
push
hlt
jp
dec
aad
jmp
push
fisttpl
dec
xchg
inc
mov
lea
stos
jb
and
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fistl
movl
in
loopne
fwait
cli
and
xchg
adc
sbb
pusha
popa
cltd
leave
mov
movb
frstor
cwtl
into
mov
stos
pop
push
push
sub
pop
shll
inc
and
stos
rclb
pop
mov
jns
scas
sub
mov
adc
jecxz
xchg
pushf
mov
adc
pusha
aad
call
jns
xor
testb
int3
xchg
mov
aas
fbstp
pop
xor
cmp
or
fildll
xchg
cmc
mov
mov
inc
rcrb
loope
pop
das
or
adc
and
xor
cwtl
sub
insb
sub
add
loope
insb
es
push
fsubr
rorb
cltd
jge
fcmove
fmull
jns
mov
inc
jbe
xchg
jbe
mov
dec
jb
mov
lods
fnstsw
popl
and
mov
and
leave
fldt
adc
outsb
mov
jns
loop
jbe
insl
data16
pusha
mov
jle
iret
in
aam
into
inc
ror
popf
jmp
call
mov
jae
jns
add
xchg
mov
mov
jnp
gs
push
into
ss
dec
mov
ss
pop
push
rcr
push
lock
icebp
fbstp
mov
mov
push
inc
cmp
stos
sbb
sbb
mov
mov
mov
push
negl
enter
out
in
test
imul
pop
add
push
xchg
mov
xchg
or
mov
sbb
fcoml
push
ret
lcall
push
sbb
inc
mov
call
in
int3
push
and
cltd
sbb
xor
inc
enter
pop
push
aas
ja
ljmp
add
sbb
arpl
lds
xor
pop
fwait
push
fs
pop
mov
mov
dec
inc
mov
enter
push
or
sbb
pop
popl
and
in
outsl
or
enter
ds
push
addb
jno
test
sub
shll
jne
mov
mov
out
pushf
pop
pop
sbbl
dec
fiaddl
add
fisubl
decl
rcrl
aaa
out
jne
je
repz
je
test
out
or
pop
mov
cli
dec
mov
pop
pop
aam
mov
dec
mov
dec
arpl
add
enter
shl
jg
lods
aam
dec
mov
rcll
inc
sti
inc
ss
adc
fiadds
lods
xchg
and
mov
push
out
js
cli
inc
jmp
inc
cld
sti
mov
mov
mov
xchg
pop
shrl
xchg
dec
imul
shll
dec
dec
aad
mov
cmpsl
and
sub
repz
data16
std
jnp
ret
xchg
pop
cmp
push
addr16
mov
daa
rcr
lret
inc
add
popf
outsb
enter
mov
in
mov
mov
cmp
mov
pop
sub
jns
addr16
mov
fwait
iret
iret
adc
fdivrp
pop
daa
shlb
imul
pop
dec
and
lds
pop
sbb
dec
into
cmp
int3
mov
stos
jae
mov
hlt
into
mov
aas
xor
push
push
sub
push
sarl
mov
clc
sahf
data16
les
std
xor
xchg
mov
stos
push
inc
out
sub
int
mov
fcmovne
and
rcll
cmp
loop
xor
rclb
movsb
frstor
sahf
pop
cmpsb
sahf
cld
adc
adc
and
test
add
int
add
adc
test
pop
push
pushf
mov
lret
push
and
inc
and
imul
notb
push
mov
jnp
clts
mov
int3
fadd
ss
scas
adc
xor
jle
popf
imul
ds
or
push
dec
iret
fldt
inc
inc
popa
shrb
and
sbb
mov
cmpsb
popa
add
sbb
mov
xchg
out
sbb
lods
xor
mov
dec
inc
call
and
aad
int3
xchg
shlb
loop
adcl
iret
shlb
cmpsb
sub
lods
pop
xor
xor
mov
push
mov
mov
xchg
pop
aam
xchg
iret
in
xor
jl
jno
inc
iret
push
cmp
dec
xor
jecxz
mov
je
and
sbb
xor
mov
sub
jmp
dec
bound
fs
xchg
mov
cld
mov
fldcw
dec
jg
add
les
mov
pop
or
inc
mov
jno
testl
inc
loope
addl
insl
mov
or
xor
or
nop
arpl
xor
mov
cld
add
pop
push
lahf
ja
xor
mov
fnsave
std
fnstenv
lea
aas
jecxz
gs
jb
sbb
mov
add
lds
inc
pop
in
mov
pop
fimuls
push
popa
lret
pop
movsb
dec
addr16
ud1
mov
pop
inc
xor
idivb
jp
jmp
add
push
add
xor
xlat
mov
aam
mov
lret
mov
dec
jp
outsl
cltd
xchg
rclb
pusha
mov
sbb
mov
xor
outsl
repnz
sbb
call
dec
sub
insb
ds
aaa
adc
sub
dec
dec
outsb
sahf
jge
fwait
gs
push
ds
mov
stos
jbe
bound
sub
pop
loope
pusha
pop
int3
jb
inc
xor
lret
in
lock
aam
or
push
aad
or
jnp
test
enter
xchg
imul
out
pop
stc
lods
data16
lea
push
pusha
loop
mov
fsubr
jns
mov
pop
cld
push
or
mov
ret
leave
dec
clc
xor
or
icebp
jecxz
cli
pop
or
stc
xchg
andl
std
adc
cltd
mov
sub
pop
ffreep
dec
nop
dec
xor
dec
lret
or
cltd
push
adc
rorb
fs
jmp
cs
iret
stos
je
inc
aad
xor
push
repnz
lahf
xchg
xchg
movsl
ss
sub
rorb
push
int3
mov
xor
lods
push
addr16
jle
and
in
fsts
sbbb
adcl
fwait
inc
test
mov
or
loop
fistpl
aam
xor
jb
push
adc
or
and
dec
inc
mov
push
cld
aaa
cmpsb
jns
mov
jbe
mov
cmp
shlb
scas
sbb
or
in
or
orl
mov
and
mov
pop
and
dec
pop
iret
cmc
cs
in
es
daa
repnz
mov
adc
subb
aad
jge
push
mov
xlat
cli
cmpsl
mov
xor
lahf
jecxz
stos
into
sub
out
mov
into
inc
cs
inc
lods
sub
arpl
cltd
jb
arpl
jae
push
or
adc
rol
inc
xor
insb
adc
mov
xor
aas
add
into
out
xchg
popf
aaa
and
mov
pop
mov
fwait
out
fmuls
fs
add
mov
sbb
arpl
mov
iret
arpl
push
mov
or
push
mov
sub
pop
sbb
test
add
jle
arpl
lahf
hlt
push
fmuls
int3
ljmp
rcll
push
pushf
pusha
test
int3
pop
and
pop
jmp
jl
movsl
adc
lods
push
mov
lahf
jo
in
jnp
dec
nop
int3
inc
aam
leave
mov
sub
iret
aaa
iret
pop
imulb
adc
xor
dec
mov
loope
shrb
dec
and
jecxz
ss
in
cmp
mov
test
inc
in
push
loope
mull
cmc
fidivl
push
adc
sub
mov
xchg
inc
cmpsl
bound
mov
scas
out
xorl
int
sbb
lods
mov
cwtl
pop
pop
push
dec
xchg
add
mov
test
pop
fistpl
dec
jecxz
mov
out
fwait
xchg
sub
movsl
lahf
xor
lret
shl
popa
pop
xchg
mov
xor
sub
jb
bound
push
xchg
xor
mov
push
mov
cmp
iret
inc
xor
pop
addr16
mov
sub
inc
ljmp
mov
pop
jg
ljmp
pop
xor
in
or
sub
shrb
mov
and
in
shl
repnz
xchg
repz
lds
js
sbb
mov
fbld
push
adc
inc
je
xlat
out
outsl
mov
mov
sbb
frstor
lods
pop
sarb
cwtl
push
and
jmp
mov
add
ss
xor
aaa
mov
std
dec
pop
fisubrl
lcall
je
or
iret
scas
or
cmp
test
push
mov
mov
adc
mov
mov
decl
adc
imul
into
fwait
push
rcll
jg
mov
and
ret
mov
clc
xchg
pop
repz
incb
sub
in
push
test
push
pusha
sahf
lcall
push
roll
test
pusha
js
sub
mov
adc
mov
sbb
mov
nop
xor
mov
mov
in
push
adc
aam
lods
xchg
outsb
mov
jb
dec
mov
sub
jg
add
inc
cwtl
dec
mov
push
and
out
mov
ret
mov
rcrb
subb
push
pop
xchg
pusha
andb
cmp
test
mov
push
xchg
les
jmp
imul
pop
mov
jb
out
cmp
hlt
shl
test
nop
or
dec
xor
mov
pop
repz
or
xor
mov
test
mov
ljmp
cmp
adc
sub
out
xlat
bound
sub
pop
popa
sub
jg
pop
mov
xor
jg
pop
mov
divl
stos
sub
add
jg
rcrb
mov
adc
or
add
rcr
xor
dec
xor
lret
test
aas
jno
sub
stc
clc
movsl
lret
cmc
cmp
sub
mov
push
push
and
rclb
scas
lock
xor
add
lcall
scas
mov
cs
subl
iret
sub
cli
pop
je
les
ljmp
push
insb
adc
push
fwait
sub
shlb
pop
pop
mov
pop
ror
mov
push
les
push
xchg
lahf
test
dec
lods
pop
popf
lret
mov
adc
xchg
movsl
stos
fnstcw
inc
cs
iret
icebp
sub
in
push
sbb
lahf
add
xchg
jb
iret
xor
xchg
or
sarb
mov
add
push
cs
adc
aad
push
adc
sub
jge
sbb
test
outsb
inc
mov
shrb
mov
stc
cld
gs
jo
inc
pop
xchg
in
subl
jg
jle
sub
jecxz
inc
adcb
ficomps
hlt
mov
in
dec
insb
mov
movl
mov
sub
jo
pop
push
dec
fs
pop
mov
add
sbb
daa
call
dec
xor
ret
xchg
leave
out
dec
mov
test
insl
psubsb
or
dec
ja
inc
in
push
dec
imul
fstps
repnz
cmp
mov
and
jnp
mov
popf
xchg
mov
data16
aad
adc
es
mov
mov
sbb
in
out
mov
mov
andb
testb
les
push
push
ljmp
inc
mov
push
mov
push
sub
lea
fildll
ja
lods
push
ret
cmp
cmp
lahf
mov
adc
add
jmp
jle
out
pusha
es
cmp
push
jle
call
inc
mov
and
inc
sbb
add
push
xchg
int3
pop
aas
cltd
cmp
sub
into
arpl
je
jb
jge
test
leave
mov
mov
sbb
scas
fs
pop
mov
je
sbb
fwait
jbe
xchg
jno
sub
sub
xor
cmp
repnz
es
or
push
ss
mov
push
push
pop
in
daa
ficoml
cmp
jecxz
add
mov
dec
pop
fstpt
mov
in
and
jp
scas
cmc
jg
mov
scas
daa
ljmp
loop
jmp
decb
aaa
invd
into
fldl
out
aam
dec
das
popa
cmp
gs
or
adc
dec
jmp
mov
push
xchg
icebp
lahf
mov
push
push
dec
mov
jmp
lahf
pop
mov
std
cmpb
daa
push
dec
mov
mov
or
negb
adc
orb
lock
push
mov
mov
aas
add
mov
cmpsl
fwait
mov
adc
sbb
xor
push
pop
les
mov
add
mov
adc
out
pop
imul
enter
fld
fstl
push
jne
bound
dec
repnz
fs
pop
lret
mov
inc
out
lods
aad
das
push
cmp
pop
mov
ss
shrb
jg
outsl
push
iret
rolb
pop
pop
cmp
fcmovnb
and
push
pusha
mov
cmc
mov
adc
sbb
sub
mov
xchg
push
cmc
aad
jmp
pushf
les
xchg
push
fistpl
pop
sbb
mov
outsb
mov
and
cmp
nop
cli
jb
popf
adc
stos
sbbb
jp
pop
push
lods
and
cld
cmpsb
cmpsb
pop
imul
jp
inc
ja
pop
rorl
inc
jne
mov
adc
inc
mov
mov
jp
adc
xlat
sbb
icebp
mov
out
pop
lock
dec
push
mov
xchg
inc
and
xchg
xchg
mov
and
jb
fdivrs
addl
mov
rcl
mov
adc
int
ret
fidivrs
inc
cmpsl
outsl
push
add
sbbb
out
and
xchg
sub
jnp
jge
mov
lock
sbb
pop
and
xchg
in
xor
pop
in
and
push
pusha
js
mov
cmpsb
or
pop
cwtl
or
aad
xchg
or
addb
out
imul
push
ret
sub
cmp
inc
dec
or
dec
mov
mov
sub
adc
mov
pusha
popa
js
jb
mov
cmpsl
xchg
cmp
xchg
lds
xchg
xchg
xlat
ffree
ret
es
add
lods
mov
ljmp
je
stc
test
call
cltd
sbb
dec
outsl
xchg
and
sbb
shll
adc
mov
cmp
cmp
inc
movl
jb
lea
lahf
xor
xor
mov
mov
jo
imul
xchg
mov
mov
xchg
dec
inc
xchg
add
cmp
dec
out
pop
std
add
mov
or
stos
mov
dec
add
jno
mov
pop
or
mov
push
adc
add
shrb
js
les
sub
fwait
xchg
je
sub
ret
stc
std
gs
add
push
fmull
mov
hlt
loope
mov
pop
inc
push
js
ljmp
xlat
or
sbb
out
add
add
xor
and
jl
in
dec
jo
push
daa
lock
enter
and
mov
mov
xchg
pop
xor
xor
mov
faddl
mov
jp
dec
gs
push
push
inc
xchg
push
sbb
push
sub
cltd
mov
mov
sub
xor
mov
adc
popf
outsl
mov
fists
mov
dec
xchg
imul
psrad
dec
push
push
xor
sub
dec
add
out
mov
sahf
and
pop
lret
inc
inc
shr
dec
jno
jb
ffree
mov
sbb
je
xlat
mov
mov
add
adc
bnd
es
fwait
outsb
aam
outsl
xor
pop
addr16
mov
adc
insb
sub
jmp
pop
movsl
mov
loopne
cmpsb
arpl
hlt
or
iret
in
jb
pop
jecxz
decb
fistpl
sti
addr16
lret
pop
fs
sbb
sub
ds
pop
push
lcall
xlat
cmc
mov
sbb
rol
lea
and
dec
add
or
cmp
xchg
jnp
cltd
mov
mov
or
out
dec
sub
sub
ljmp
add
fisubrs
mov
jbe
adc
stc
out
xlat
test
xchg
adc
std
sti
inc
jge
sbb
inc
aaa
mov
pop
ljmp
pop
inc
inc
mov
nop
faddp
sarb
outsb
jae
xchg
jae
imul
hlt
pop
cmp
xlat
sub
or
cwtl
fidivl
shlb
int3
subl
add
clc
sbb
lret
rcrb
cmp
adc
mov
fadds
fwait
iret
lds
cmp
jge
cs
xor
dec
mov
pop
push
dec
push
sub
dec
mov
lods
imul
mov
data16
cmp
scas
ds
inc
inc
scas
cwtl
jae
loop
cmpsl
out
add
outsb
lods
xor
mov
mov
loopne
lods
movsl
pop
jg
cmpl
push
mov
pop
rcl
sub
movsl
pop
gs
and
pop
cli
mov
mov
pop
leave
jns
sub
sbb
insb
insl
dec
push
mov
push
aad
outsb
mov
push
mov
jnp
or
xchg
adc
pop
iret
mov
xchg
cli
mov
pop
stc
addr16
push
jg
movsl
mov
lcall
rorb
movsb
jbe
mov
enter
mov
dec
clc
cmpsl
arpl
das
hlt
arpl
push
shll
loop
pushf
mov
repnz
mov
jae
ja
lds
push
outsl
xor
add
cwtl
xor
loopne
and
ds
push
xor
adc
in
dec
or
push
sbb
out
and
push
mov
adc
cli
lret
xor
adc
jae
ds
or
out
inc
push
hlt
jae
and
sbb
xchg
mov
dec
mov
outsl
inc
add
pop
test
pop
cmp
stos
pop
std
cwtl
iret
clc
pop
cmp
xor
jge
les
subb
addl
test
jp
dec
mov
mov
in
push
repnz
add
test
fsts
add
push
ds
add
mov
insb
icebp
add
xor
mov
into
cmp
dec
adc
out
jl
lret
sub
cli
push
mov
sub
jecxz
jns
inc
test
xor
xor
mov
xor
lock
push
sti
adc
pop
out
sbb
or
out
ret
cld
popf
stc
lret
sti
sub
xchg
push
lcall
je
xor
daa
xchg
push
adc
or
mov
ret
mov
jl
imulb
orl
pusha
repz
lret
or
insl
addr16
mov
nop
jg
push
and
mov
std
jge
jae
imul
movsl
out
ss
xlat
lea
enter
leave
sub
pop
nop
xlat
xor
xchg
cmp
sbb
and
dec
divb
mov
dec
in
jmp
cmc
lea
subl
mov
inc
jb
pop
bound
sti
je
jp
xor
fs
adc
xor
addl
dec
bound
mov
push
fldl
in
scas
cmp
jne
fmul
movsb
inc
sarl
loopne
jmp
lods
push
fwait
iret
push
ljmp
mov
mov
or
dec
xchg
stos
jnp
pshufw
out
sub
sub
xor
jp
icebp
out
xchg
test
lea
int3
les
sti
mov
dec
cmp
insl
fdivrs
bound
sub
xor
add
jno
mov
and
mov
hlt
mov
push
mov
inc
aas
fdivl
inc
shr
lahf
push
add
mov
cmp
in
adc
cli
insb
stos
cmpsl
and
xchg
mov
loopne
or
data16
pop
sub
aam
push
aad
aad
lret
nop
and
test
dec
sub
add
es
push
xor
mov
adc
fildl
mov
inc
add
aas
mov
cmp
xchg
or
lods
push
pop
aas
nop
aaa
cmc
inc
cmp
add
hlt
adc
mov
cmp
xor
stos
mov
mov
pop
outsb
je
xchg
ja
mov
and
mov
xor
inc
es
inc
jg
cmc
scas
cld
xor
xchg
jbe
jp
xor
sahf
mov
jne
stc
and
repnz
call
mov
mov
jbe
jl
xchg
and
cmc
dec
and
jmp
fwait
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
orl
sbb
push
jp
dec
mov
mov
imul
sti
or
sbb
sub
fstpt
lret
or
sbb
push
cmp
stos
push
movsb
inc
loope
jnp
sbb
xchg
jb
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
inc
push
push
ds
add
fs
jp
fidivrs
test
xchg
mov
mov
inc
push
push
ds
add
adc
and
push
sahf
les
hlt
push
loope
xchg
movsb
out
mov
inc
push
push
ds
add
adc
and
xor
les
lcall
add
or
ds
inc
adc
daa
xchg
xor
inc
inc
sub
mov
mov
scas
pop
ljmp
push
sar
mov
lods
xchg
mov
inc
sbb
and
in
push
push
xchg
cmp
cmp
cmc
pushl
negl
loop
or
sub
js
leave
push
inc
push
jno
and
pop
adc
sub
aam
cmp
sub
les
xchg
mov
fwait
sarl
dec
sti
std
jne
xor
cmp
sarl
shl
xlat
xor
sbb
movsl
jl
dec
mov
mov
inc
xchg
xchg
mov
outsb
dec
rolb
ds
add
adc
and
xor
les
hlt
fiadds
repnz
inc
jp
push
and
cmp
sbb
inc
sahf
mov
int
mov
test
lock
rcrl
sub
pop
sub
pop
pop
inc
or
jae
sbb
mov
scas
cmpsb
mov
loopne
add
inc
or
ss
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
xor
les
hlt
fiadds
mov
inc
sub
add
xchg
jae
shr
aam
lret
xchg
and
mov
icebp
sub
jbe
or
mov
js
and
cmpl
lea
icebp
shll
ret
add
xchg
mov
add
inc
aaa
mov
outsb
lret
mov
stc
dec
jnp
in
adc
xchg
aad
mov
mov
mov
in
cmpb
push
lcall
pop
xlat
dec
ret
dec
fwait
adc
dec
xor
nop
test
jge
sub
pusha
sbb
jne
cmp
flds
and
enter
mov
push
mov
and
jnp
pop
jbe
dec
adc
and
jbe
movsb
jbe
pop
or
inc
stos
dec
dec
fisttpl
mov
mov
xor
rorb
loope
push
jg
add
mov
pop
push
sub
jo
or
shlb
sbb
shrb
insl
add
stc
mov
jecxz
repnz
and
lds
lds
sub
sub
push
rorl
cmp
pop
outsl
adc
out
mov
fldenv
movsl
jmp
lahf
out
movaps
add
jbe
mov
js
jno
sahf
nop
aad
push
imul
push
rcrl
dec
movsl
jbe
inc
jne
aam
mov
daa
and
or
repnz
out
subb
sbb
aam
lods
arpl
js
test
cmp
add
push
rolb
or
rol
xor
sbb
and
dec
addl
dec
cmp
adc
dec
inc
gs
out
or
sbb
add
gs
cmp
jmp
jne
mov
and
mov
mov
int
mov
lods
adc
jb
jge
and
add
and
loope
in
mov
sbb
xchg
pop
dec
lods
cmp
mull
je
xlat
test
enter
pop
popf
fnstcw
testl
daa
imul
repz
rcl
stos
xchg
cmp
imul
and
pop
push
sar
lret
sarb
fsubrs
sub
std
insl
cwtl
jle
adc
jbe
aaa
insl
setg
push
xor
movsb
incb
add
out
xchg
sbb
xchg
push
fmulp
xchg
loope
fstpl
xor
xchg
jl
rcr
icebp
sbb
jnp
adc
cmpsb
sahf
cwtl
notb
xchg
adc
and
mov
add
jno
adc
and
bound
gs
xorb
int
adc
mov
repz
icebp
sbb
sub
fildl
mov
aam
fistl
sbb
jno
stos
jns
ds
mov
neg
adcl
outsb
outsl
xchg
cwtl
xchg
lds
mov
cmpl
xor
aas
les
mov
mov
mov
xor
mov
cmp
pushf
dec
and
xor
into
push
pop
mov
test
cltd
xor
pop
xchg
into
cmp
inc
xchg
out
fsubrl
mov
aad
mov
movhps
mov
jl
jmp
arpl
outsl
daa
sbb
in
or
push
adc
outsb
lds
cmp
cmpsl
push
repnz
mov
fldt
data16
fadds
loop
outsb
insb
mov
xor
sbb
dec
scas
jge
jle
mov
add
ret
pop
lea
push
rol
cld
dec
adc
dec
and
pushf
in
mov
test
bound
stc
movsl
fwait
mov
orb
pop
push
aam
ljmp
sub
jo
lock
pop
dec
in
sbb
xor
mov
in
repz
adc
in
js
repnz
dec
push
enter
movsb
adc
lret
loop
mov
xchg
lock
dec
out
bound
pop
push
add
cmp
lcall
and
cmovbe
ret
adc
adc
call
and
fsub
push
xchg
mov
push
jbe
dec
lods
pandn
adc
pop
stos
mov
dec
sbb
sbb
jns
cmpsl
fyl2xp1
cld
imul
fmul
scas
xor
jg
mov
mov
xor
movl
jl
push
adc
ds
xchg
ret
pop
test
cmp
je
mov
mov
js
pop
stc
das
add
xor
addr16
push
in
loopne
lds
sarl
dec
sub
pop
push
jne
inc
call
push
lcall
fisttpl
imul
mov
xchg
out
ficomps
fisubrl
mov
mov
std
inc
push
std
fs
inc
pop
xor
fnsave
bound
mov
mov
inc
push
sbbb
jae
inc
mov
pop
fs
mov
fmuls
fimuls
icebp
sub
mov
push
xor
out
lods
movsl
aam
insl
iret
andb
adc
add
mov
aas
jmp
cmp
pop
call
add
mov
inc
flds
out
add
push
push
sbb
add
and
sbb
pop
push
loop
xor
add
ss
nop
push
sbb
pop
push
push
xor
addr16
stc
mov
nop
mov
xlat
aam
xor
cmpsb
and
fsts
dec
adc
mov
aad
inc
cmpsb
sbb
mov
sbb
fiadds
jnp
cltd
out
push
fwait
mov
psubsw
mov
movsb
faddl
lds
hlt
lret
ds
ror
jge
pop
orb
frstor
cltd
xchg
pop
stos
inc
notl
dec
pushf
cmp
popf
into
pop
test
jb
sarb
in
cmp
lahf
jle,pt
loop
into
xchg
sti
popa
imulb
mov
or
pusha
aad
adc
lret
shlb
jle
in
push
aam
mov
orb
lods
jae
ljmp
mov
ret
inc
add
pop
and
and
pop
adc
mov
xchg
rcrb
rorl
sarl
push
insl
ret
js
mov
int3
jo
jmp
jbe
lods
adc
push
clc
icebp
das
cmpb
stos
mov
cmp
daa
fistpll
movsb
out
pop
add
pop
xor
dec
adc
jmp
sub
inc
xchg
aam
ret
sub
mov
lret
pop
dec
xor
mov
or
pop
xchg
push
in
pushf
push
stos
cli
scas
mov
or
dec
enter
fdivrs
mov
push
roll
pop
or
mov
fwait
aam
sbb
xchg
arpl
mov
test
dec
mov
push
ja
shll
cmp
lods
jg
mov
mov
inc
pop
sub
add
adc
cmp
push
je
xor
out
mov
and
lcall
neg
sbb
jecxz
decl
mov
lock
clc
js
inc
dec
stc
jno
push
pop
jle
jmp
popa
clc
cmp
jbe
sbb
adc
lds
pop
sub
mov
jmp
xchg
mov
lock
movsb
xchg
mov
test
fisubrs
pop
sbb
outsb
add
mov
add
test
pop
test
insl
arpl
dec
xor
pop
aas
divb
dec
mov
inc
lds
xor
mov
lcall
ret
ret
and
push
lret
jne
adc
fwait
int3
push
xchg
inc
les
hlt
inc
jp
lock
xlat
leave
dec
imul
mov
sub
inc
push
cmp
xchg
jl
pop
clc
les
mov
lods
dec
add
call
mov
ds
mov
rcrl
sub
inc
subb
xchg
fcoml
pop
sbb
in
cmp
clc
jmp
dec
push
inc
loop
push
scas
mov
das
push
lds
in
popa
call
sub
xchg
push
mov
jmp
ss
fs
fsubrl
aaa
mov
cmp
mov
sti
dec
lods
push
addr16
add
jnp
mov
inc
inc
inc
jo
hlt
add
aaa
sbb
dec
push
in
jmp
dec
test
clc
xlat
into
mov
lds
cmpsl
arpl
ja
repnz
cltd
ja
cs
jecxz
lret
mov
mov
aas
mov
out
enter
dec
push
roll
mov
jecxz
movsl
xchg
push
out
cmpsl
into
and
into
xor
jbe
cmpsb
data16
adc
adc
fimuls
sub
xor
xchg
or
icebp
es
icebp
xchg
pop
cmp
pop
pushf
pop
cmpsl
mov
lcall
sub
loop
inc
or
jge
sahf
add
mov
dec
pop
out
out
addr16
mov
loop
ljmp
pop
or
int3
mov
mov
aas
mov
outsl
loop
push
and
mov
aaa
xlat
xchg
sbb
mov
popf
inc
lahf
int3
pop
mov
stos
fildll
es
pop
or
lea
mov
xor
dec
out
push
xlat
or
repz
lods
inc
add
jbe
cld
xor
aaa
jo
mov
pushf
push
fdivs
sahf
dec
jo
push
jg
jnp
insb
pusha
hlt
shlb
dec
je
xor
pop
push
leave
test
cmp
jae
lcall
mov
and
ljmp
jbe
mov
and
inc
add
test
fldt
bnd
jb
mov
add
insb
push
xor
sub
or
cmp
mov
lret
fimuls
in
pop
sbb
imul
sahf
ret
and
mov
sub
imul
pushw
mov
aaa
inc
outsl
push
out
cmp
movsb
movsb
lret
pop
jae
decb
jle
mov
adc
mov
adc
arpl
movsl
test
outsb
push
mov
push
ds
mov
lcall
jmp
ficoml
cmp
xlat
cli
xor
mov
stos
lcall
and
jge
enter
popf
sub
jo
lcall
mov
cmp
shlb
dec
dec
out
sub
lcall
xchg
rcll
sub
aam
movsl
ficomps
in
stos
dec
outsl
mov
pushl
or
pop
cmp
push
fists
icebp
cmpsl
out
scas
jle
adcb
cmp
jne
fwait
std
mov
pop
dec
popf
mov
int3
les
stc
lock
arpl
inc
icebp
gs
adc
imul
cld
mov
push
mov
inc
daa
ljmp
fadd
pop
mov
in
iret
pop
mov
je
in
cld
sbb
push
int
enter
outsl
testl
push
push
jl
push
jne
jo
xor
aad
jecxz
mov
sbb
push
push
add
inc
dec
sub
pop
cmpsl
and
lock
or
jnp
aam
mov
das
shrl
mov
jnp
push
call
xchg
inc
or
mov
jb
sbb
push
xorb
roll
or
mov
sahf
cmp
sbb
icebp
std
js
scas
gs
xchg
xor
push
cmp
dec
and
add
lock
leave
xor
mov
cmp
jge
dec
dec
cmp
mov
mov
test
test
mov
or
push
out
jge
arpl
jp
mov
jle
pop
jmp
mov
sbb
pop
jg
enter
pop
les
xchg
jno
mov
dec
fmul
je
jo
fbstp
dec
inc
jbe
jge
pop
add
fldcw
xor
mov
mov
push
mov
movsb
xchg
repz
push
inc
repz
shlb
push
out
xchg
adc
les
jg
jne
sbb
out
cwtl
call
cmp
inc
out
insl
popa
les
idivl
arpl
decb
in
adc
aam
lds
fcomps
xor
and
sti
pop
into
mov
or
pop
outsl
repnz
loopne
sbb
loope
dec
xchg
xor
jno
std
push
cmpsl
aaa
mov
test
mov
pop
imul
mov
xchg
cmp
add
das
adc
mov
jg
mov
xchg
loop
nop
or
sbb
inc
cli
adc
sub
jle
out
dec
push
pop
ficompl
and
stos
dec
mov
push
jo
add
xor
fdivrp
imul
and
jg
mov
decl
jl
and
jb
and
out
mov
lcall
mov
nop
stos
fs
mov
gs
pop
pop
sub
dec
sub
fimull
decl
xchg
sahf
out
push
or
push
stos
jno
mov
into
pop
sub
bnd
add
in
push
fcompl
push
sub
sbb
rcrl
outsb
inc
out
xchg
fisubs
adc
lock
flds
jecxz
inc
fwait
lods
lret
xor
adc
repnz
roll
or
je
adc
nop
loop
sub
and
jl
or
xor
pop
sbb
inc
sbb
xlat
leave
mov
mov
insl
adcb
dec
add
movsl
ret
mov
ja,pn
hlt
test
cltd
test
mov
xor
or
shrl
stos
mov
call
jo
push
and
jns
daa
adc
add
in
jnp
xchg
dec
aaa
popf
movsb
xor
adc
xor
lret
popa
ret
rcrb
lods
and
xor
xchg
xchg
and
shrl
test
daa
daa
cmp
clc
imul
push
in
xchg
daa
jecxz
sbb
cltd
loop
inc
mov
leave
jae
push
xchg
lahf
enter
lds
mov
gs
add
push
dec
fsubr
hlt
sar
popa
sbb
cmp
test
jne
dec
dec
mov
mov
into
xchg
jg
mov
dec
pop
inc
mov
mov
in
out
mov
mov
sub
pop
push
cmp
addr16
or
imul
adc
popa
xchg
dec
jns
les
pop
jl
cwtl
mov
xor
xor
ja
in
xor
test
orl
xor
std
adc
dec
and
or
inc
out
sbb
sbb
shrb
inc
pop
sti
les
add
fsubrp
frstor
addr16
jo
dec
hlt
sbb
adc
or
cmpb
lsl
and
pop
js
cmpsl
fwait
xchg
mov
mov
movsb
jg
adcb
and
cmpsl
pop
jne
push
jecxz
xor
xor
adc
dec
outsl
mov
aam
pop
fwait
mov
insb
jno
adc
xchg
fnsave
ret
ret
loope
mov
enter
aaa
xchg
xor
scas
lods
lret
popf
xor
pop
or
ss
lret
mov
dec
outsl
xchg
push
mov
insl
idivl
pusha
jns
cmp
jg
movsb
imul
sub
cmp
or
bound
push
out
sub
sbb
xor
pusha
add
imul
lods
xchg
cmpsl
movsl
arpl
add
and
and
add
outsl
jg
jb
rol
pop
jae
add
mov
or
xchg
cmp
stc
in
lret
push
loope
inc
loopne
cmc
cwtl
mov
stos
cli
mov
pop
lods
xchg
movsb
xchg
stos
in
jns
fdivrl
icebp
lods
in
pop
sbb
cmp
lret
enter
pop
push
leave
cld
ljmp
mov
add
outsl
out
cli
js
js
mov
rorb
in
xchg
popa
cld
adc
pop
push
call
sub
cmc
cld
cltd
imul
mov
in
xor
lret
push
lods
stc
dec
cmpsl
stc
inc
loop
jmp
shlb
stc
adcl
or
jno
in
mov
lret
jne
pop
dec
addl
lods
dec
iret
in
fcmovu
pop
out
aam
sub
add
push
sub
inc
stc
push
in
stos
popf
outsl
add
arpl
cs
jl
fnsave
cmc
pop
mov
lods
mov
sbb
pop
mov
div
loop
adc
mov
push
andb
test
lret
inc
inc
xchg
mov
adc
add
and
test
jo
ljmp
inc
ficoms
in
mov
out
ret
and
sbbl
xchg
fdivl
les
cmpb
xchg
sbbb
mov
pop
out
cli
lods
rol
xchg
out
jmp
addr16
xchg
sub
in
leave
ds
jno
aam
add
cmp
sub
scas
jb
adc
push
adc
je
sub
loopne
mov
xchg
jp
dec
sbb
mov
aam
arpl
imul
sar
cmp
leave
push
push
cmc
pop
mul
std
xorl
mov
out
sarb
xor
or
mov
clc
outsb
push
ja
and
cs
ja
mov
fdivrl
lods
js
in
xlat
sub
inc
xchg
ja
mov
stos
fwait
cmpsb
jge
lods
and
in
push
pop
out
xor
jle
daa
pop
insb
xchg
or
inc
add
push
sbb
dec
cmp
mov
int3
test
xchg
movsb
add
pushf
push
shll
or
movsb
mov
jecxz
sahf
pop
cmp
pusha
or
add
in
xchg
mov
xor
ret
daa
inc
xor
lods
pop
sbb
xor
mov
cmpsl
cmp
ret
jecxz
dec
sub
and
mov
xor
daa
lahf
jne
pop
mov
and
cmp
xlat
mov
adc
outsl
test
stos
ja
mov
xor
mov
js
ja
push
add
cmpsb
inc
aas
mov
imul
inc
mov
rorl
call
aaa
jbe
pusha
xor
negb
push
movsl
rcl
imulb
icebp
add
mov
notl
cmpsb
push
stc
adc
sub
imul
pushf
xor
out
inc
mov
or
cwtl
je
cmp
jb
out
test
fldcw
add
repnz
outsb
pop
in
or
or
mov
xchg
ds
jbe
adc
mov
push
dec
dec
jo
adc
cmpb
lret
dec
mov
pushf
mov
cli
imul
jbe
insb
cmp
sti
es
push
lcall
pushf
icebp
lahf
fwait
aad
fimuls
pop
nop
in
cmp
test
enter
xlat
xchg
hlt
cltd
pop
xchg
xor
mov
daa
fbstp
js
cltd
xchg
xor
rcl
inc
data16
flds
or
jbe
aad
lods
addr16
push
cld
mov
mov
push
cmp
push
xchg
push
adc
mov
loopne
aad
enter
popf
decl
scas
int
popf
mov
mov
sbb
pop
cmpsl
inc
popa
pop
sub
hlt
in
lcall
jmp
jne
std
fldl
in
repnz
sub
pop
xor
jne
stos
pop
mov
mov
mov
cmc
sbb
lods
adc
imul
inc
cmpsb
jecxz
stos
cmc
fcompl
xlat
sub
mov
cwtl
mov
js
test
je
lret
in
dec
mov
push
xchg
in
xor
mov
mov
mov
cwtl
xor
cmp
sub
cmpl
scas
clc
jno
cmp
repz
leave
mov
iret
dec
pop
cmpsb
add
aaa
mov
or
dec
test
push
add
out
sub
pop
ja
xor
fnstenv
sbb
divl
pop
sub
push
roll
data16
je
jmp
mov
arpl
jns
push
fiadds
cmp
adc
lods
and
jnp,pn
add
cmc
repnz
cmp
out
fcmove
imul
and
std
imul
or
dec
inc
ss
xchg
mov
sub
xchg
add
add
sti
pop
pop
xchg
insb
mov
cwtl
sbb
ficoml
add
imul
inc
imul
xchg
repz
pop
inc
imul
dec
scas
mov
rclb
mov
pushf
mov
dec
push
into
sub
xchg
push
ds
lods
xlat
aad
push
popf
sub
bound
sbb
jnp
loope
xchg
cmpsl
mov
enter
mov
adc
push
pusha
movsl
and
mov
pop
pop
in
les
mov
dec
aam
lock
cmpsb
or
lock
dec
cltd
lret
jne
cld
push
xchg
mov
fdivs
pop
mov
cmp
xor
aam
into
pop
call
cmp
jno
xchg
sub
pop
scas
or
outsl
xchg
jo
mov
mov
xchg
or
mov
fimuls
xchg
add
pop
loope
jle
or
xchg
pop
adc
cmp
xor
add
outsb
adc
hlt
push
icebp
aas
fisubl
cwtl
movsb
mov
xor
in
mov
cmpsb
mov
and
ret
push
out
inc
outsl
sahf
mov
movsb
ja
mov
or
adc
sub
imul
mov
push
aas
fs
add
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
xor
les
hlt
fiadds
mov
inc
mov
je,pn
add
adc
and
xor
les
hlt
fiadds
mov
inc
push
push
ds
add
adc
and
hlt
sahf
les
subl
sahf
dec
mov
cmpsb
dec
xchg
jge
insl
decl
arpl
frstor
jbe
data16
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
lea
jbe
adc
lods
ret
cmp
into
inc
or
mov
mov
push
pop
or
mul
out
sub
cs
call
pop
pushw
add
int3
fwait
cld
mov
add
cmp
xor
clc
subl
inc
inc
lods
mov
orl
sbb
out
stos
fdiv
add
adc
into
data16
shlb
adc
repnz
dec
jnp
cwtl
cs
fwait
add
enter
std
mov
pop
mov
jl
sbb
insl
push
jb
test
and
out
insb
in
xchg
bound
lods
jne
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
jmp
xor
sahf
sarb
shrb
jb
dec
mov
mov
movsb
gs
inc
xor
daa
hlt
xor
ss
pop
cmc
jge
cmp
push
subl
stos
push
addl
or
jecxz
mov
out
cmp
es
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
lods
mov
pop
or
adc
xchg
push
test
cmc
or
cmpsb
imul
dec
idivl
xchg
les
daa
je
fsubp
add
pop
add
adc
dec
out
adcb
mov
xchg
sbbb
in
or
pop
addr16
sbb
xor
mov
ljmp
mov
test
push
jp
xor
inc
dec
sbb
or
adc
or
sbb
jmp
xchg
jo
fs
xlat
or
adc
outsb
sub
data16
mov
or
in
es
dec
sbb
jle
sti
push
mov
or
adc
cmpsb
insl
int3
fcmovu
cli
mov
repz
fucom
sbb
add
push
js
inc
fadds
adc
or
hlt
dec
dec
adc
push
or
adc
es
xchg
pusha
adc
lret
xor
or
add
fidivs
mov
rcll
data16
popf
aas
aad
dec
cmp
xor
xor
ljmp
stos
push
fistpll
mov
arpl
call
test
jl
mov
call
mov
es
add
add
loope
frstor
jbe
adc
fwait
mov
lock
sbb
inc
and
push
mov
xor
mov
mov
dec
scas
fistpll
jge
loopne
pop
cmpsl
xchg
das
pop
clc
mov
sti
into
in
sar
or
sbb
repnz
out
mov
jno
test
xor
add
cmp
jae
sbb
push
gs
ret
xchg
add
sub
imul
lahf
shll
and
out
mulb
data16
add
jae
xor
hlt
jecxz
js
int3
out
cltd
insb
mov
sahf
dec
pop
cmp
xchg
loope
mov
filds
fs
mov
stc
push
aaa
aas
mov
cld
mov
jmp
adc
mov
sahf
out
jns
sarl
mov
repz
cmp
aaa
ret
dec
add
sbb
sahf
mov
das
sub
arpl
scas
test
std
pusha
mov
sbb
inc
lods
icebp
xchg
and
inc
lret
in
cmp
jle
mov
loopne
mov
bound
add
fisubl
repz
jb
rcrb
add
cmp
adc
cmpsl
shr
and
fdiv
xchg
or
xchg
adc
lods
fdivr
adc
push
out
int
sbb
test
repz
mov
iret
pop
lret
rcrl
cmpsl
out
sbb
dec
adc
addl
test
or
add
jecxz
pop
hlt
adc
and
jle
mov
lea
dec
stos
sub
addr16
sbb
xchg
pop
test
fisttps
push
lods
and
cmp
scas
loope
mov
rcrl
data16
imul
hlt
loope
xchg
pop
dec
sar
gs
les
push
jne
loop
mov
popa
pop
ret
enter
xchg
dec
xchg
cmc
addr16
stc
roll
add
stos
mov
cmp
xchg
mov
inc
mov
xchg
out
jne
cmc
pop
xor
testl
clts
mov
fldln2
sub
sbb
outsl
xor
mov
sbb
imul
out
stos
lret
sub
popf
fiaddl
jb
push
movsb
lods
jb
jp
mov
test
shll
jge
aaa
mov
jecxz
xchg
repnz
cs
pop
scas
and
aas
mov
sub
popa
inc
cmp
and
ja
pop
jge
xchg
imull
inc
adc
xchg
adc
jge
shrl
shr
jno
jp
ret
pop
lods
adc
pusha
push
push
sarl
cmc
fwait
sbb
sahf
pop
jmp
pop
shlb
xor
imul
fmulp
aam
inc
sbb
mov
das
xor
out
adc
lods
cmp
int
in
out
hlt
xchg
cli
clc
jne
leave
jo
pop
lcall
aad
pop
clc
fldenv
and
push
hlt
cmpsl
cli
pop
test
pop
shr
cmp
loop
lcall
add
mov
test
insb
ret
ds
fiaddl
inc
or
sbb
and
jns
dec
jae
push
mov
mov
fwait
add
adc
lods
adc
push
xor
insl
mov
adc
inc
stc
jae
mov
lea
xchg
adc
pushf
dec
inc
cmp
fs
xor
xchg
sbb
jge
cld
inc
fstps
int
cmp
mov
call
sahf
xchg
xlat
mov
mov
cmpsb
ljmp
adc
loop
jg
mov
mov
lahf
jge
jne
ss
jge
jl
xchg
jns
mov
sub
dec
xor
das
aad
mov
dec
cmp
loope
cmp
xchg
pop
and
imul
call
adc
xchg
nop
mov
insl
ja
cmp
push
bound
rcr
into
xchg
sbb
xor
imul
sar
flds
mov
notb
loopne
xor
sbbl
sub
push
and
imul
call
pop
pop
int
mov
mov
inc
stos
pop
insb
stos
ds
cwtl
in
ss
cmc
pop
dec
add
int
pusha
pop
jo
mov
mov
xchg
jbe
dec
sbb
pop
push
mov
gs
xlat
popf
test
addr16
inc
rorb
cmp
sbb
mov
ret
mov
mov
fimull
daa
mov
aam
fwait
in
sbb
pop
mov
lcall
jge
dec
xchg
insb
fucom
mov
xchg
call
scas
xchg
in
idivl
pop
inc
push
xor
cmp
mov
or
jle
hlt
jb
jl
inc
push
int3
xchg
arpl
pop
cmp
adc
mov
test
divb
faddl
or
fstps
cmc
adc
in
dec
les
sub
cwtl
pushf
cmp
inc
sub
xor
lods
or
cmp
xor
sbb
add
sahf
or
mov
mull
lds
mov
loopne
test
jp
mov
jnp
mov
inc
in
dec
fs
mov
mov
test
into
les
add
add
inc
xchg
add
push
in
cli
xchg
es
xlat
cmp
dec
pop
test
push
mov
ljmp
mov
sub
adc
imul
arpl
add
jl
cld
popaw
xchg
xor
mov
aad
push
stos
xor
cmpsl
adc
cmp
imul
aam
andl
push
jns
add
iret
fcmovbe
cmpsl
mov
push
jg
fstps
bound
jne
dec
dec
add
or
cmpsb
stc
sub
stos
xor
sub
aaa
hlt
insl
or
mov
push
cmc
pop
arpl
cmp
mov
lret
cmp
fisubrl
jb
cmp
push
mov
cmp
push
adcb
xor
mov
movsb
push
cmp
out
or
je
inc
das
sbb
jg
fidivrl
test
add
mov
and
in
mov
and
mov
mov
xchg
mov
push
pop
inc
inc
xchg
pavgw
fwait
mov
cmpsb
fcompl
mov
out
inc
dec
pop
fnstsw
xchg
inc
jle
loop
pop
inc
test
add
jge
cmp
mov
sarl
fnsave
and
outsb
add
movsl
push
loopne
adc
sbb
mov
sarb
sub
bound
aad
cli
push
gs
add
aaa
xchg
push
mov
jg
fbstp
int
jae
pop
mov
and
cmp
and
adc
loope
and
js
dec
fs
insb
xchg
aad
xchg
pop
daa
xor
cmpsl
insl
fdivs
mov
add
andb
daa
pop
xchg
jno
adc
and
jge
and
add
xchg
ret
add
out
jae
call
cmpsb
mov
loope
mull
xor
add
cmpsb
mov
jge
or
imul
mov
out
movsl
repnz
mov
mov
sbb
lea
imulb
pop
je
push
xchg
and
das
or
pop
adc
xchg
andb
test
cmpsb
fisubs
add
push
sahf
aam
push
jle
gs
inc
mov
dec
mov
out
adc
sbb
dec
xchg
imul
ja
mov
mov
inc
push
push
in
sahf
incl
sub
mov
fcomp
xor
dec
pushf
jcxz
scas
push
cmpsl
icebp
mov
dec
rcl
decl
cmp
inc
jmp
loope
sti
aad
mov
in
xchg
push
pop
dec
push
insl
cs
pop
popf
jmp
sarl
inc
mov
lods
sub
or
test
xor
jmp
jns
nop
pop
sarb
mov
stos
outsl
cli
je
xchg
in
das
or
jo
aaa
lahf
and
divb
adc
adc
xchg
mov
dec
addr16
inc
xor
jmp
ljmp
sbb
mov
sub
aad
sub
sbb
xchg
mov
xor
lret
les
scas
pusha
stos
jo
jl
jb
mov
jp
je
mov
in
gs
pop
lods
mov
mov
mov
jae
outsl
lahf
mov
lahf
inc
pop
inc
push
stc
xchg
sub
cmp
cmpsl
aam
imul
adc
push
adc
and
ret
mov
dec
imul
ret
mov
lret
aas
imul
dec
and
loope
xchg
inc
pop
hlt
mov
fwait
pop
mov
pop
xor
xchg
mov
cmp
sub
movb
sti
mov
movsl
adc
cmpsl
lcall
std
xchg
dec
inc
and
ljmp
xchg
iret
in
sbb
stos
pusha
jle
fstpt
xchg
and
aad
ret
cmp
stc
inc
orb
xor
movsb
enter
out
loope
jb
inc
mov
enter
mov
mov
ret
movsl
hlt
push
enter
lea
arpl
push
jl
lods
cs
pop
sahf
scas
push
shrl
in
cwtl
clc
cmpsb
or
imul
sub
xor
mov
adc
dec
cmpsl
sbb
movsb
mov
std
xor
pop
pop
inc
ret
rcll
das
xor
out
ret
inc
jg
cli
test
ljmp
or
lods
mov
out
leave
mov
mov
shrb
xchg
xlat
or
mov
push
movnti
push
mov
mov
inc
js
xchg
iret
mov
cli
jae,pt
jae
sbb
inc
lods
mov
push
pop
sub
fs
mov
mov
dec
and
hlt
or
push
cmpb
pusha
jecxz
xchg
inc
outsb
mov
jle
or
shll
mov
adc
aas
cmp
aas
jno
and
fisttpl
sti
xor
pop
jbe
lcall
sbb
xor
outsb
cmp
dec
cmp
and
sar
subb
and
mov
sbb
jecxz
push
xchg
pop
out
jle
insb
in
mov
adc
pop
mov
imul
std
sbb
pop
aaa
sub
dec
sbb
jg
mov
in
ja
aas
jnp
jle
xchg
sub
inc
sbb
mov
clc
inc
mov
pop
jmp
mov
sti
gs
jg
push
in
mov
mov
imul
push
sub
popa
or
mov
inc
mov
mov
pusha
loopne
outsb
dec
add
or
bound
pop
xchg
mov
lea
xor
mov
fstpl
mov
push
cli
pop
pop
xor
rcll
cltd
mov
push
addr16
adc
mov
pop
jo
mov
add
addr16
insl
addl
jno
mov
lcall
pop
subl
rcrb
lds
fbld
daa
call
rorl
sub
xchg
loop
enter
pop
mov
cmp
cmp
mov
ds
and
cmpsl
xor
pop
aam
pop
sub
jmp
add
stos
mov
pop
test
or
movsl
sub
or
sub
sbb
jmp
and
lahf
mov
mov
sub
std
test
popf
add
push
fwait
aam
jns
mov
fistl
mov
test
rcr
push
stos
popf
push
leave
repnz
out
mov
lock
add
out
xchg
or
xchg
mov
lcall
jmpw
lret
inc
mov
inc
xchg
adc
popl
pop
jb
movsb
fwait
js
movsl
out
fimuls
jo
movsb
aad
pop
and
imul
movsb
arpl
rclb
xchg
imul
cli
into
divl
xchg
out
aas
movsl
mov
or
scas
lret
pop
rorl
movsb
insb
rcrb
js
outsb
sahf
ja
mov
in
mov
fwait
insl
js
and
in
scas
cmp
in
mov
leave
push
pop
push
or
divb
jo
es
xchg
mov
inc
scas
cmc
mov
sub
add
scas
andb
adc
xor
sub
add
out
out
mov
rcll
xchg
jno
xchg
fwait
les
or
cmpsl
mov
dec
outsb
mov
adc
pop
jg
rclb
mov
mov
je
lret
jns
ja
popa
xchg
inc
rcrb
pushf
addb
data16
xchg
xchg
inc
adc
popf
scas
orl
pop
and
arpl
xlat
inc
vcvttss2si
inc
sbb
lret
aas
sub
jo
jne
fwait
or
popa
insl
pop
popa
in
xchg
repnz
lock
out
outsl
sbb
sbb
jns
mov
sbb
jne
loop
inc
or
ldmxcsr
dec
cli
test
inc
pop
hlt
inc
rcrl
pop
call
inc
cvtps2pd
mov
adc
stos
lock
add
in
mov
mov
imul
pop
jmp
ljmp
andb
lea
frstor
scas
fsubs
jp
and
lcall
mov
addr16
cmp
mov
push
aaa
add
mov
sub
lock
mov
ljmp
jo
cs
aad
mov
je
push
jne
and
ljmp
pop
bound
inc
test
insb
hlt
add
sbb
loope
lods
arpl
shrl
in
negl
jae
aaa
ljmp
pusha
adcb
je
inc
cld
push
mov
push
lods
cmpb
test
inc
add
xor
insb
mov
addl
jecxz
or
lahf
mov
jle
ret
pop
iret
cs
push
sub
loop
subl
pop
popa
pop
mov
mov
div
in
and
cwtl
jg
fistl
jnp
stos
rcrl
dec
dec
out
popa
imul
aas
mov
jp
dec
mov
push
sub
imul
mov
sbb
mov
mov
pusha
lret
sbb
js
and
cmpsl
jbe
andb
jb
int3
dec
inc
mov
mov
jno
or
inc
in
adc
push
mov
lret
adc
adc
stos
pop
mov
push
ljmp
test
arpl
std
mov
add
mov
and
mov
jl
mov
sbb
and
mov
mov
cmp
out
icebp
roll
pop
sbb
cmc
push
les
dec
repnz
xchg
cmp
dec
je
lret
fcmovb
sub
es
movsb
stos
scas
scas
sarb
movsb
jge
xchg
jbe
scas
out
scas
jecxz
adc
sbb
inc
lret
stc
jno
leavew
arpl
popf
jp
std
inc
out
pop
jg
sarb
lock
adcl
int
out
std
mov
jne
imul
sub
fcoms
ja
mov
stos
xor
shr
fsts
or
dec
sub
dec
xchg
jp
test
lcall
notb
cmp
jae
cmp
aam
pop
imull
push
lcallw
lcall
inc
cmc
inc
push
inc
push
push
xchg
mov
adc
sbb
ljmp
rol
mov
rcrb
mov
lds
mov
fwait
imulb
sti
mov
loopne
addl
ficompl
std
shr
in
testb
int
xor
js
ja
jle
int3
cld
jnp
fabs
test
out
xor
add
and
mov
in
sti
xor
pop
insl
out
or
data16
sbbl
sbb
test
xchg
inc
push
roll
ret
and
dec
push
fildll
mov
or
or
inc
dec
leave
inc
imul
dec
insb
mov
adc
xor
ficoms
fildl
es
lock
ret
roll
repnz
loopne
loopne
rclb
pop
cmpsb
jno
or
adc
mov
add
popf
iret
mov
fcoml
punpckhwd
or
dec
or
out
jge
jnp
pop
jl
movsl
push
dec
mov
popf
jns
push
insb
stc
loop
sub
dec
xor
inc
mov
pop
loope
and
push
faddl
xor
stos
add
mov
js
mov
or
fcoml
xchg
pop
mov
adc
test
or
mov
xchg
out
test
push
mov
sub
pop
mov
mov
jl
rolb
outsb
sub
in
into
or
inc
adc
test
hlt
add
jns
xchg
adc
or
and
ja
fwait
lahf
out
jbe
stc
aas
add
inc
outsb
repnz
mov
jo
mov
pop
lret
into
stos
nop
mov
test
jb
jbe
dec
fiadds
pop
jbe
sahf
mov
mov
imul
call
add
mov
mov
sub
add
dec
je
dec
xor
fadds
scas
das
sub
adc
dec
push
arpl
jbe
push
push
cltd
fisttpll
dec
stc
xor
aaa
inc
inc
push
out
or
lock
je
rorl
and
aas
enter
push
pop
imul
lods
sarb
or
adc
or
gs
and
push
sbb
mov
mov
or
std
jae
xor
add
popa
jl
jge
fisttpll
das
jne
fwait
lcall
std
movsb
sub
rclb
fisubl
cmp
cld
push
ds
xor
out
mov
push
push
pop
sub
dec
divb
push
add
mov
fsubrs
sbb
fsubrl
into
das
dec
and
mov
nop
push
fimull
sbb
pop
xorl
mov
shrb
push
or
lret
cld
pusha
or
jno
filds
adc
pop
xor
data16
push
dec
mov
mov
xor
or
xchg
neg
cmp
addr16
leave
aad
xchg
and
idiv
bnd
mov
add
xchg
shl
testl
sahf
adc
xor
inc
push
negl
aam
mov
jl
push
inc
jmp
inc
mov
lea
mov
imul
inc
sbb
cmp
pop
fnstcw
push
and
dec
popf
mov
add
dec
fdivp
repz
dec
aaa
mov
mov
sti
movsl
ret
outsb
and
fdivrl
cmp
clc
loopne
call
insl
add
sub
and
dec
jae
cmp
std
sub
cmp
insl
in
fwait
pop
cmp
cmp
fnclex
xor
push
dec
xchg
lahf
jmp
xor
fs
psrad
cmp
xchg
out
and
sbb
mov
in
aaa
adc
cltd
xchg
sbb
xorl
jae
call
mov
mov
push
dec
int3
mov
dec
add
out
movl
inc
sub
jb
cmp
inc
sub
stc
pop
lcall
cmpsl
cmp
jns
xor
icebp
and
and
xchg
fisubrs
popf
sbb
imul
imul
andl
xor
xchg
add
sbb
pop
test
sub
dec
mov
mov
pusha
je
aam
sub
inc
cli
aad
dec
add
cmpsl
sub
jmp
je
pushf
lret
xor
jmp
dec
xor
out
push
gs
xchg
pop
inc
xchg
jmp
sub
in
cmc
push
add
ss
push
sti
xor
inc
mov
lods
stos
inc
pop
pop
clc
loop
jno
loop
pop
pop
adc
xchg
leave
push
pop
movsb
dec
test
sbb
sub
push
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insb
negb
sub
push
std
pop
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
imul
mov
fldenv
std
push
lcall
mov
jecxz
rcrl
and
push
sarb
cmpl
fiaddl
xor
add
jp
dec
rcrl
sub
sbb
mov
push
fiaddl
pop
fisubs
mov
lcall
rcrl
es
loop
ljmp
and
jge
jo
sbbb
mov
jg
push
sbb
or
nop
stc
push
lds
pushl
iret
cwtl
stos
pop
data16
roll
mov
and
pop
pushf
xor
xor
ljmp
push
dec
mov
dec
and
and
stos
and
and
push
es
and
lds
aaa
sti
sete
adc
mov
decl
mov
lahf
sbb
out
xchg
dec
aad
mov
mov
xor
pusha
mov
std
out
jbe
outsb
mov
incl
fwait
jecxz
adc
xor
stos
ficoml
xor
push
pop
repz
dec
shll
ret
sub
mov
arpl
push
les
xor
sbb
or
push
shll
inc
dec
lret
jnp
mov
mov
aaa
ret
jo
inc
push
dec
push
xacquire
fistps
data16
imul
scas
add
and
inc
fldt
dec
stos
cmp
cmp
ljmp
inc
stos
xor
add
jp
dec
rcrl
sub
sbb
lret
inc
stos
xor
add
mov
add
push
dec
push
jle
test
adc
mov
lods
mov
mov
jge
xchg
scas
ret
inc
and
pop
mov
iret
hlt
mov
mov
repnz
mov
repnz
jecxz
sarl
fldl
xchg
cmp
lods
adc
lods
lret
add
inc
xchg
pop
push
dec
sarb
shr
inc
mov
enter
lahf
mov
xor
and
cmpsl
arpl
mov
lret
pop
mov
sub
xor
jnp
sbb
fisttpll
call
pop
adc
add
adc
xor
loopne
jno
jns
mov
fs
bnd
xchg
mov
pop
arpl
call
repnz
and
cmpsl
shrl
repnz
sahf
outsb
outsb
out
adc
das
aas
cmp
out
stos
xor
imul
jle
inc
pop
rep
in
fs
mov
jecxz
std
xchg
sbb
idivl
mov
outsb
mov
lea
dec
pop
and
sub
jg
pushf
sbbb
xor
mov
out
cmp
xchg
mov
test
imul
add
imul
jno
pop
sbb
nopl
mov
aas
cli
in
pop
dec
sub
lods
sbb
fcmove
xor
pop
sarl
fdivrs
sbbl
insb
insl
icebp
xlat
inc
jp
data16
hlt
dec
dec
mov
jns
test
sbb
inc
enter
lods
add
inc
mov
iret
ficompl
sbb
clc
xchg
cmc
ret
push
xor
adc
fcoml
lea
fwait
or
pushf
dec
arpl
dec
les
ret
xor
mov
sbb
std
dec
ja
loopne
jnp
ret
movsl
clc
test
mov
arpl
leave
cmpsl
test
or
inc
mov
cmp
imul
xor
cmp
xchg
sub
or
dec
cmc
xchg
xchg
lods
addr16
dec
cmpsb
daa
or
xchg
xlat
ja
xchg
sbb
xchg
leave
xor
call
testl
shlb
mov
push
cwtl
xchg
lock
js
dec
jecxz
mov
pop
jecxz
xor
cltd
xchg
add
rcll
jmp
test
dec
push
xchg
cs
inc
sti
call
inc
ret
insl
ds
cwtl
pop
ds
loopne
dec
repnz
std
addr16
sbb
push
fisubs
mov
outsb
push
pop
or
xor
and
rclb
pop
dec
fwait
clc
ds
adc
push
xor
mov
sub
cli
mov
pop
aas
iret
arpl
push
sub
xor
cmp
push
popa
pop
enter
enter
fxch
shl
es
cli
testb
fcmovne
mov
add
push
xchg
jge
jns
push
xor
in
jmp
jb
sub
cmp
loope
or
dec
mov
mov
inc
imul
mov
sbb
fwait
jbe
jp
xor
int3
dec
xorl
sub
mov
out
sarb
incl
fs
mov
daa
std
pop
popa
jecxz
jecxz
fcoms
pop
in
pop
fldl
insb
orl
dec
mov
inc
mov
insb
ljmp
lahf
inc
pop
push
xchg
jg
push
lods
cs
sbb
sub
je
fdivrl
imul
test
popf
xchg
inc
mov
or
jle
cmpsb
sub
ss
filds
mov
or
aam
jecxz
adc
outsb
mov
arpl
and
bound
loopne
int3
pop
test
mov
add
cltd
or
rcll
pop
push
jg
lret
push
jne
imul
je
push
xchg
in
outsl
mov
divl
inc
dec
fnstenv
popf
test
push
lahf
mov
push
out
loopne
push
adc
popa
sahf
shrl
rolb
mov
adc
rcr
cld
xor
shlb
mov
ficoms
stos
adc
cmp
scas
sahf
out
stc
xor
js
daa
and
mov
rorb
ret
dec
imul
xor
and
mov
notl
les
mov
and
sub
lods
movsl
mov
fstp
inc
xor
cmp
jbe
fisubl
push
cmp
or
adcl
nop
faddl
jle
addr16
lods
inc
jle
mov
pop
aas
das
insl
cmpl
adc
sbb
sahf
fidivl
lea
movsb
dec
lret
cmp
jns
jbe
xchg
gs
pop
mov
dec
push
rorb
les
cmc
sub
int3
jbe
push
dec
cmp
loop
lret
bnd
cmpsb
cmp
movsb
add
test
repnz
shlb
add
mov
ss
jbe
hlt
xchg
jecxz
dec
nop
adc
fsubs
inc
jmp
bound
test
cltd
cmp
adc
rol
shrb
cmp
cld
test
jnp
neg
sbb
pop
data16
out
stos
js
lods
pop
ss
lds
imul
pop
mov
xor
push
add
sub
mov
dec
add
jg
inc
shlb
iret
push
xor
iret
lea
xor
or
into
lods
xchg
call
dec
test
in
aas
add
scas
inc
mov
pop
fwait
ss
pushf
inc
pop
scas
jl
and
pop
mov
inc
int3
jnp
add
fsubrp
ss
sub
xchg
xor
or
pop
xchg
lcall
loopne
mov
sub
nop
stos
cmp
lock
andb
into
push
stos
adc
lock
jp
jbe
mov
sbb
fisttps
fwait
sub
mov
cmp
push
and
xchg
cltd
mov
mov
cs
es
xor
cmp
inc
cli
cmp
testb
ret
dec
hlt
adc
movb
lahf
ljmp
insl
inc
inc
jno
push
cmp
pop
sub
fucomip
outsb
imul
scas
add
stos
fldt
pop
push
add
das
push
xchg
lret
jp
fisttpl
and
mov
divb
cs
daa
fmulp
in
mov
loope
jp
repz
scas
mov
std
out
xlat
shr
adc
imul
inc
inc
add
push
adc
lahf
aaa
xchg
out
or
mov
test
stc
rolb
clc
sub
iret
pop
or
icebp
stos
lds
inc
mov
mov
clts
push
enter
out
jne
dec
fsts
into
jne,pn
ja
jge
loop
jne
jnp
popf
add
jno
jp
cmc
mov
dec
xchg
xor
xchg
dec
push
push
mov
mov
icebp
push
adc
cmp
sub
or
pop
dec
imul
push
dec
mov
sub
sbb
jmp
xchg
push
jmp
push
insl
shlb
lahf
adc
out
mov
pop
pop
je
push
lret
sub
push
and
jbe
es
xorl
mov
sub
lret
xchg
push
and
icebp
data16
fnstsw
cmpsb
add
adc
fidivrs
push
and
lret
push
ds
insl
icebp
out
clc
xchg
or
aam
int3
dec
xchg
push
push
or
arpl
cmpsl
bound
sub
push
xchg
and
cld
jge
jae
jg
in
jecxz
gs
stos
push
test
movsb
push
xchg
pushf
pop
xchg
mov
jne
sub
sub
sub
push
dec
fsubl
scas
mov
jmp
pop
inc
push
mov
in
insl
dec
addr16
mov
iret
jae
repz
iret
sti
jge
or
mov
sbb
cmp
aad
mov
xchg
inc
mov
xchg
popf
nop
fcomps
jle
pop
lahf
clc
cli
outsl
or
mov
sbb
sahf
push
pushf
call
sbb
in
add
call
stos
pop
test
arpl
xlat
cli
mov
fsubrs
push
sub
fildll
jle
gs
dec
out
loopne
sbb
jg
xchg
pusha
sarl
sub
cmpsb
jno
mov
fstp
mov
insb
ss
sbb
and
repz
popf
adc
ja
ret
dec
mov
sub
pop
pop
gs
into
aam
mov
lea
mov
xchg
outsb
cmpsb
mov
add
addl
cmp
cli
mov
sub
push
mov
addr16
jp
mov
aad
ljmp
out
adc
fbstp
lods
mov
cltd
and
mov
add
and
mov
pop
mov
pop
das
jg
add
xchg
xchg
or
enter
jp
mov
inc
jo
nop
in
and
mov
jns
xlat
xchg
xchg
addb
stos
fisttpll
adc
mov
pop
shld
in
adc
outsb
pop
test
loope
pop
shlb
mov
inc
jle
dec
jecxz
pop
xchg
mov
cmpsl
xor
adc
pusha
xchg
lods
pop
out
cli
adc
aam
popf
repnz
mov
xor
push
dec
xchg
cmp
shrb
test
dec
or
movsl
xchg
jnp
inc
mov
mov
mov
movl
in
fisubrs
shlb
cmpsl
bound
jmp
xchg
mov
sub
push
mov
xchg
add
popfw
inc
ljmp
jle
lret
adc
xchg
xchg
ficoms
jg
inc
and
adc
test
adc
push
cmpsb
xlat
outsl
jne
rorb
mov
scas
dec
pop
and
jb
jl
jle
and
rol
pop
popf
cmp
mov
and
aas
sub
cmc
pushf
xor
es
ret
cmpsl
aaa
sbb
adc
push
aas
adc
add
cli
dec
loope
mov
out
out
shlb
inc
jge
setle
xlat
stos
mov
sub
in
cs
jbe
out
adc
dec
out
dec
sbb
push
jnp
xor
aas
testb
pusha
mov
sub
adc
aas
cmpsl
stc
out
jno
adc
sbb
test
adc
push
pop
gs
stc
hlt
xor
subb
fldt
cltd
sub
sub
jns
cmp
sub
add
push
imul
mov
rcll
gs
dec
aad
dec
inc
sarb
jnp
rorl
sub
loope
mov
sbb
adc
and
pushf
xor
ficoml
cs
mov
xchg
xor
dec
out
nop
mov
xlat
jg
fdivrl
push
and
sub
xchg
push
pop
sahf
cmp
mov
dec
pop
xlat
pop
fcoms
fisttpll
jecxz
jbe
les
into
xchg
lock
mov
arpl
fidivrs
lods
sbb
nop
jne
cmp
lahf
xchg
lret
pop
sahf
xor
jbe
mov
das
or
ljmp
ret
sub
iret
add
sbb
lods
fisubrs
jl
outsb
loope
dec
xor
mov
mov
mov
stc
stc
repnz
cwtl
gs
cmp
divb
into
jbe
sahf
idivb
iret
mov
jge
xchg
cli
mov
push
mov
mov
loope
stos
jne
filds
cs
dec
jno
rcrl
add
inc
push
aaa
cmp
lcall
mov
pusha
stos
jnp
lods
das
mov
test
jno
xor
dec
cmp
add
int
mov
into
subl
mov
sbb
pop
movsl
push
sub
xor
mov
add
addr16
hlt
xorb
jb
add
mov
in
jnp
xor
inc
ret
mov
sub
xor
add
cmovne
cmc
push
bound
mov
ds
inc
mov
pusha
or
push
mov
leave
push
mov
mov
ret
mov
xchg
cmpsl
imul
movsb
movsl
outsl
jp
shrl
cmc
xchg
inc
fwait
je
adc
shlb
jl
jno
dec
dec
sbb
pop
pusha
ficoms
fdivl
test
inc
jle
mov
cmp
lahf
ljmp
aam
stos
jp
test
push
mov
out
movsl
cld
lods
stc
rcrl
sbb
adc
into
sarb
push
dec
pusha
sub
sbb
mov
jns
or
cmp
rol
jmp
outsb
test
fldl
mov
pop
jb
mov
or
sahf
cmp
leave
sbb
jle
xchg
fistl
roll
daa
push
aam
fbld
pop
sbb
jl
mov
push
and
call
jbe
or
aaa
lods
sub
sub
idivb
ds
jno
out
cmp
cmp
fnstsw
mov
lea
out
xchg
aad
cs
xlat
adc
mov
faddl
and
sbb
xor
inc
mov
loop
aad
push
andb
mov
fstpl
test
xchg
add
mov
lods
mov
aas
insb
addr16
add
sar
sbb
aad
mov
jl
push
lcall
or
decb
push
loopne
xor
cmp
std
push
inc
out
enter
add
insl
aas
inc
cli
inc
or
pop
cmp
inc
das
and
jmp
xchg
repnz
sbb
jmp
repnz
cld
inc
hlt
or
movsb
out
xchg
inc
mov
jbe
mov
mov
ficomps
lods
sbb
and
jl
sub
aad
repz
icebp
mov
mov
rorb
jl
sbb
mov
or
push
mov
inc
cld
rep
out
xchg
cmc
push
int3
add
sub
pop
mov
mov
push
adc
push
jmp
dec
inc
cltd
popf
sub
lcall
sti
xchg
in
jecxz
out
and
sub
push
mov
lock
xor
and
adc
lret
dec
xor
mov
in
xor
lods
fwait
and
push
sub
imul
shll
inc
mov
roll
sub
mov
repnz
insl
adc
add
aas
adc
adc
or
stc
test
pop
inc
inc
lcall
jo
test
adc
jns
pop
xor
outsb
sub
jl
mov
lock
gs
adc
cwtl
mov
test
repz
dec
cmp
dec
repz
icebp
cmc
adc
pop
mov
jno
popa
sub
jne
stos
cld
mov
dec
xchg
sub
in
in
mov
nop
shlb
sub
sub
adc
in
pop
adc
push
clc
sbb
xor
or
mov
sarb
js
cmc
in
pop
cmp
mov
cmp
outsb
insl
mov
mov
mov
push
lea
les
dec
dec
and
fs
mov
test
ds
xchg
and
push
stos
and
xchg
and
scas
dec
cmp
jae
add
das
and
jp
mov
ja
cmp
lahf
lods
pop
das
jae
cmpl
cmpsb
sti
ret
mov
test
popf
dec
jnp
call
loop
dec
and
into
scas
dec
sbb
inc
andb
xor
add
or
push
and
sbb
push
insl
fisttps
jnp
inc
fwait
cmp
jp
pop
mov
cmp
push
pop
stc
mov
sub
frstor
daa
outsl
mov
xlat
lahf
adcl
sbb
jp
mov
rcrb
push
sub
xchg
test
add
mov
aas
imul
lahf
cld
ja
lods
xor
outsb
and
pop
pop
jecxz
imul
add
nop
pop
test
xchg
icebp
push
push
dec
dec
mov
movsl
jno
mov
subb
sbb
xchg
hlt
xchg
cwtl
sub
lret
sub
add
jmp
inc
pushf
mov
sub
ret
stc
pusha
loope
mov
mov
lods
cmp
adc
jb
xchg
push
mov
mov
cmp
lahf
pop
shl
pop
fadds
xlat
gs
dec
or
faddl
sub
pop
cmp
add
pop
negl
pushf
imul
sub
and
mov
dec
or
aad
popa
mov
leave
cmc
outsl
and
mov
in
pushf
jle
xor
aad
jmp
sub
loop
orb
mov
cmpsb
fld
repnz
xchg
lock
mov
cmp
adc
sbb
pop
stc
int
in
dec
outsb
aam
mov
lcall
add
setle
scas
addr16
nop
mov
and
pop
in
ret
mov
aaa
rorb
mov
push
xor
ljmp
lea
mov
xchg
das
mov
test
scas
sub
cli
push
fstps
cmp
imul
cmp
jae
jo
stos
add
es
fdivl
pop
fcmove
jge
or
and
bound
in
movsb
ss
add
stc
adc
out
dec
aaa
or
cmpsb
dec
push
loope
pop
mov
mov
imul
pusha
int
stos
jmp
cmp
outsl
cmp
mov
mov
lahf
xchg
push
mov
push
ror
int3
inc
dec
fwait
mov
add
pushf
sub
lock
jecxz
fisttpll
sbbb
push
mov
pop
xchg
sbb
daa
fs
daa
mov
les
dec
xchg
adc
adc
insb
jnp
lret
inc
xor
push
push
cltd
jecxz
adc
sbb
sub
test
rol
aad
sahf
neg
mov
sbb
test
insl
inc
inc
adc
es
adc
and
data16
fwait
adc
lcall
orl
jmp
xchg
mov
into
jbe
mov
lea
fst
fwait
fwait
sbb
push
add
fistps
pop
jb
dec
movsl
dec
cli
popa
cmpsb
dec
sbb
sahf
stos
ficompl
pop
inc
sub
repnz
lods
jl
cmc
sub
mull
and
push
xchg
push
xor
cltd
push
fisubrs
clc
cmpsl
mov
xchg
cli
dec
push
pusha
int
shlb
sbb
dec
fildl
bound
cltd
shlb
adc
adcl
fnstenv
xchg
mov
in
ffree
xchg
icebp
sub
test
fsub
subb
mov
jge
cmp
mov
leave
dec
aas
push
pusha
xchg
add
stc
inc
roll
mov
es
adc
sub
clc
inc
cmp
inc
daa
cmpsl
fcoms
je
imul
pop
sti
jo
loope
push
cmp
xlat
cmc
pop
test
aaa
inc
lahf
xchg
adc
fcmovnu
loope
sbb
push
mov
lods
jno
cmp
inc
rep
cmc
push
jnp
rcrb
or
test
lret
push
mov
or
push
icebp
pop
js
aaa
test
repz
mov
xor
sahf
std
adc
lret
movsb
lock
cmp
mov
dec
jecxz
mov
sub
clc
lea
push
arpl
lods
pop
lret
and
bound
pop
loopne
push
adc
test
fldcw
pusha
adc
nopl
adc
inc
into
dec
inc
je
mov
int
cmpsl
push
sub
sbb
sub
insb
jae
xchg
imull
popa
jle
pop
inc
push
push
dec
lea
addr16
call
cli
pop
inc
push
ss
mov
rcrb
fs
push
subw
adc
dec
outsl
adc
xchg
outsl
dec
ja
out
or
sub
mov
loop
popf
sbb
nop
pop
popf
lret
enter
mov
int3
stos
aaa
lods
jne
mov
adc
add
pop
lahf
and
dec
out
lods
ds
movsl
inc
inc
pop
mov
mov
mov
test
or
or
fisubrs
nop
ret
mov
mov
test
jne
adc
pop
sbb
jbe
mov
sti
sub
jns
in
cmpsl
adc
sbb
push
jnp
xchg
test
mov
sub
pop
aas
xchg
cmpsb
push
xor
sbb
sbb
lea
dec
inc
push
je
movsb
out
lcall
pushf
cmpsl
xchg
cmpl
add
xchg
addr16
xchg
pop
rorb
inc
jo
jecxz
push
sub
mov
test
js
and
mov
or
int3
pusha
xchg
inc
inc
call
outsl
adc
sbb
insl
pop
ret
out
mov
or
cmp
mov
sbbb
sub
xadd
and
push
push
fdivp
push
inc
test
out
xor
rcl
movsl
popf
cli
cmp
fisttps
mov
sar
loopne
xchg
push
lret
sub
pop
xchg
mov
push
pop
and
inc
xchg
xor
pop
xchg
aad
mov
outsl
jns
fists
jnp
fisubrs
and
xchg
xor
sub
inc
jecxz
roll
sub
sbb
lret
inc
stos
xor
add
jp
dec
rcrl
sub
sbb
lret
inc
stos
xor
add
jns
pop
rcrl
sub
sbb
ret
push
fiadds
xor
add
push
jecxz
shll
sub
lcall
push
fidivl
in
gs
aam
xor
xchg
or
mov
movsl
cmpsl
mov
test
pop
in
jo
lds
aad
and
out
xchg
xchg
inc
cmpsl
push
push
movsl
inc
aad
test
push
in
cmc
aaa
xchg
aad
and
aas
adc
test
or
add
arpl
mov
push
inc
xchg
mov
mov
cmp
shr
adc
pop
jle
int
pop
cmp
mov
arpl
mov
inc
sub
repnz
sbb
xchg
fadds
repnz
jns
call
xchg
mov
bound
push
cmp
pop
or
scas
mov
leave
or
dec
lret
push
jle
fpatan
jp
pop
or
cmp
pop
sub
lret
cmpb
punpcklbw
sub
ja
and
cmc
pop
or
cmp
pop
sub
sbb
push
xor
mov
xchg
xchg
xchg
lcall
aam
and
out
jae
pushl
inc
add
movsl
fnsave
pop
in
cmc
add
dec
mov
subl
or
jne
or
rcll
add
test
pop
movl
test
loop
inc
xor
push
xor
adc
cli
outsb
xchg
pop
mov
stos
xchg
insl
mov
les
jne
inc
cmpsl
push
push
movsl
inc
mov
test
pop
in
cmc
aaa
lds
aad
and
out
xchg
xchg
inc
cmpsl
push
push
movsl
inc
mov
test
pop
in
cmc
aaa
lds
aad
and
daa
push
pop
test
add
jmp
sbb
push
mov
jecxz
out
mov
jmp
test
adc
hlt
xchg
adc
mov
notb
stos
inc
lcall
sbb
cmpsl
jl
xor
fs
in
outsb
adc
dec
dec
adc
push
and
in
jp
push
and
xchg
push
into
mov
mov
aad
ss
pop
xchg
push
test
ret
out
xchg
notl
icebp
push
nop
pop
pushf
add
arpl
mov
fs
mov
push
sub
ret
mov
adc
negl
fdivs
mov
and
ds
pop
xor
jp
insl
in
inc
rcrl
push
xlat
mov
out
xchg
pop
outsl
ret
dec
xchg
add
roll
dec
clc
insl
mov
rcr
mov
jl
int
sub
ja
lahf
lcall
sub
push
dec
dec
sub
cld
add
jb
int
outsb
adcb
sbb
add
mov
mov
push
or
pop
or
dec
sub
std
cli
popf
arpl
xchg
xor
xor
mov
mov
pop
test
fdivl
jecxz
lret
fcmovnu
and
xchg
aas
push
xor
sub
xor
loopne
stos
and
xlat
cld
dec
mov
or
xchg
xor
cmp
pusha
jae
sarl
or
fwait
push
ret
loope
adcb
dec
mov
sub
xor
xchg
aaa
inc
xchg
mov
xor
mov
lahf
repnz
jnp
jnp
jne
or
jg
lret
sti
push
pushf
pop
stos
push
sub
imul
mov
leave
jmp
shr
inc
fnstcw
sti
mov
xchg
fiaddl
cwtl
xor
xlat
mov
push
stos
jns
enter
add
xchg
mov
test
pusha
mov
adc
rcrb
test
mov
bound
cs
adc
sub
cwtl
aad
sti
xchg
aaa
leave
push
cwtl
inc
ret
out
jle
sub
int
push
add
and
and
dec
mov
mov
lea
mov
lcall
jmp
sbb
repz
cmp
or
push
adc
loope
or
fstl
hlt
shrb
push
mov
mov
ss
ljmp
mov
movsl
push
pop
inc
push
rol
and
pop
adc
and
mov
inc
and
ret
pop
pop
inc
or
jle
add
and
jb
imul
inc
xor
fwait
sub
adc
sar
cmp
fldl
mov
dec
jmp
add
push
pop
out
and
xchg
push
pop
lret
movsl
ljmp
ljmp
mov
mov
xor
leave
rep
lods
jb
repz
pop
test
push
arpl
into
outsb
mov
out
imull
jecxz
add
inc
aam
scas
arpl
pop
jb
dec
push
sub
push
lods
push
nop
aad
loope
push
jl
push
jge
ret
adc
cwtl
cltd
rorl
pushf
in
mov
insb
popw
cmp
mov
pop
divl
imul
dec
sbb
dec
jne
es
push
lods
push
lret
xchg
jbe
mov
cmp
xlat
out
mov
pop
mov
ret
popa
pop
and
imul
ret
xchg
jne
mov
lcall
xchg
fwait
or
push
mov
adc
cli
les
or
mov
sbb
mov
repz
xor
sub
dec
addr16
jb
or
aaa
dec
mov
cwtl
and
and
testb
lds
cmp
test
jb
jne
add
mov
in
hlt
imul
xchg
inc
pusha
push
pop
mov
cmpsl
lock
push
inc
pop
jbe
cli
xchg
mov
fs
in
cmp
int
jns
pop
xor
pushf
loope
mov
dec
loopne
or
sbb
orl
xchg
sub
adc
push
test
push
pop
out
jb
jg
jb
iret
pop
push
stos
inc
sbb
scas
add
daa
fcoms
cs
sti
mov
and
clc
stc
inc
mov
cmp
imul
adc
add
mov
mov
xchg
pop
pop
xlat
shl
jmp
push
jb
out
call
add
adcb
clc
xor
out
dec
out
in
cmp
addr16
sub
mov
xor
sarb
mov
fadd
cmp
pop
push
inc
lret
add
inc
shlb
sti
dec
pop
fst
sbb
movsl
cmp
sub
xchg
fldt
sahf
mov
shl
mov
mov
mov
lods
in
lret
sub
fs
cs
mov
xor
rcl
push
addr16
dec
fwait
iret
popf
int
outsb
cmp
std
and
enter
jle
xlat
and
inc
mov
cmp
insl
scas
jge
nop
les
aaa
test
jmp
pminsw
pop
stos
test
mov
add
jecxz
and
adc
imul
jge
sub
sahf
leave
test
push
xchg
imul
dec
mov
mov
inc
roll
push
mov
gs
ds
adc
sub
cmpsl
addr16
addr16
out
repnz
outsb
jl
push
sbb
lods
lods
mov
pop
adc
cmpsb
je
inc
gs
sbb
stos
hlt
test
mov
addr16
jae
cmp
and
addr16
mov
jle
jno
cmp
sub
jbe
loopne
data16
push
mov
mov
aad
stc
dec
xor
pop
decl
xor
dec
push
inc
daa
inc
aas
cli
sbb
cli
hlt
or
stos
fs
pop
xchg
jo
pop
sbb
jle
imul
pop
call
cmp
ljmp
and
and
adc
test
bnd
add
mov
sub
fisubs
inc
push
fisubrs
stos
ss
cmp
call
imul
mov
add
mov
add
jne
das
push
mov
mov
into
fldt
fldenv
inc
sub
out
inc
test
rcll
stos
shl
aam
das
lods
cmpsb
xor
lods
add
sahf
mov
add
dec
mov
add
inc
repnz
sbb
sbbl
xchg
nop
sbb
out
xor
cltd
push
xchg
in
push
lahf
ja
add
mov
inc
cmp
adc
xchg
dec
xor
mov
jge
and
pop
clc
je
inc
push
lock
icebp
sub
xchg
adc
loop
out
and
cmc
fwait
out
movsb
stos
cld
es
inc
test
mov
dec
loope
mov
les
sahf
negb
popa
cmp
aaa
iret
pop
add
sbb
sbb
loopne
ret
loope
leave
fimuls
or
xor
sbb
ljmp
das
fbld
dec
rclb
dec
mov
sbb
fcmovne
in
pop
lock
xor
pusha
mov
and
rorl
push
sbb
inc
add
fptan
and
push
fldt
ret
test
lcall
sub
pop
mov
stc
inc
xchg
xchg
mov
jb
pop
add
stc
lods
loopne
or
push
pop
jns
fcoms
mov
movsb
ja
enter
adc
ss
lods
dec
into
jne
jg
xor
in
sub
div
or
xchg
mov
push
mov
mov
cld
gs
inc
add
sbb
in
inc
cmpsb
lds
outsb
xchg
and
rorb
repnz
je
loope
test
xchg
sti
mov
mov
pop
test
sahf
sub
dec
mov
or
mov
or
add
lock
and
xchg
cmc
pushf
cmpsl
push
scas
sbbl
pop
jmp
mov
xchg
inc
je
push
inc
sbb
arpl
imulb
aas
mov
jp
sbb
subb
add
aas
push
xchg
mov
push
cmp
je
xchg
bound
or
popa
rcr
dec
test
mov
std
sarb
jb
and
xchg
mov
mov
jnp
pop
xor
add
daa
mov
add
lock
nop
push
dec
jne
jge
cli
js
push
inc
lods
mov
xor
cmpsl
and
fwait
jnp
inc
jle
and
push
shlb
mov
addr16
inc
iret
xchg
sbb
sub
sbb
js
fwait
mov
and
pop
adc
add
iret
mov
sbb
mov
mov
hlt
fs
in
mov
imul
push
int
jne
dec
cmp
push
mov
mov
movsb
mov
dec
inc
lea
dec
dec
into
jecxz
adc
lcall
shl
lds
fidivrs
inc
lods
xor
dec
push
xor
movsl
push
insl
inc
mov
or
push
incl
hlt
dec
fcomps
cmp
mov
daa
sbb
xor
jmp
adc
mov
dec
idiv
or
adc
adc
js
adc
mov
xchg
lret
fwait
daa
sub
mov
jo
gs
cmp
xchg
movsb
inc
xor
hlt
pusha
dec
sub
dec
dec
mov
cmp
in
cmpl
cs
mov
push
xchg
jnp
loop
xchg
fmuls
cmp
insl
pop
cmp
incb
stos
test
pop
and
mov
dec
mov
aas
lcall
je
mov
iret
pop
jno
inc
push
sub
push
dec
bound
jmp
popf
test
arpl
cmpsl
lds
sub
mov
es
add
xchg
negl
cmp
roll
and
add
popf
add
jle
add
add
cmc
rol
xchg
sbb
pusha
stc
jb
adc
inc
sarb
sbb
repnz
and
xchg
mov
pop
push
stos
fstpl
or
dec
jg
sti
addr16
jl
push
arpl
jl
sahf
jno
dec
adc
add
inc
dec
fcomps
addr16
testl
imul
mov
clc
jge
jle
shlb
and
pop
test
sub
not
sub
mov
mov
adc
mov
adc
subl
sbb
mov
jg
mov
mov
push
dec
sbb
sbb
xchg
dec
xchg
lret
jle
clc
adc
cwtl
push
mov
loop
ret
ss
test
sti
jb
push
popf
inc
negl
push
add
pop
mov
std
fs
pop
icebp
pop
xchg
in
es
adc
xchg
imul
rcr
xor
jae
push
jg
sub
xlat
inc
dec
sbb
or
cli
es
ret
arpl
fidivs
lahf
cmpl
lds
mov
sub
loop
mov
push
xchg
test
mov
or
add
add
lret
std
mov
xor
out
dec
test
cmpsl
cmpsl
jne
lcall
ss
imul
jg
mov
loopne
cs
xor
sbb
loop
nop
negl
shll
xor
inc
out
loop
push
mov
mov
enter
push
int
cmp
xchg
fwait
cmpl
jno
icebp
rclb
daa
xchg
mov
inc
xchg
push
mov
cmp
or
pop
mov
pop
cmp
cld
or
xchg
gs
xchg
add
cli
xchg
xchg
clc
daa
ret
dec
pop
xchg
nop
mov
sarb
mov
xchg
repnz
adc
insb
loop
xchg
gs
movsl
test
pop
push
popa
mov
jp
sbb
push
insb
and
push
lret
push
int
xchg
popf
jno
push
sbb
lock
push
shll
int
jo
pushf
adc
jge
jnp
sar
pop
xchg
call
jae
or
or
add
mov
or
push
pushf
jne
pop
cs
sbb
js
push
repz
xor
mov
push
outsl
add
rcrl
divb
sub
lahf
dec
cmp
test
or
les
enter
pop
movsl
cmp
imulb
pop
enter
push
add
aad
outsb
hlt
jae,pn
xor
pusha
mov
sub
sbb
sbb
jne
jp
es
mov
xor
jecxz
adc
adc
xchg
mov
mov
pop
xchg
insl
mov
ret
cmpsb
mov
or
pop
mul
add
or
inc
shrl
mov
fs
xchg
into
cmp
aam
push
sub
or
dec
sub
push
leave
incb
in
clc
xor
adc
scas
push
cmp
fcomip
mov
or
adc
call
test
arpl
xlat
mov
pop
lret
rclb
mov
mov
out
mov
push
into
inc
shlb
adc
jb
jb
ret
in
icebp
push
inc
or
mov
fistps
xchg
fldl
out
sbb
xchg
or
sub
fcom
lea
into
adc
sub
adc
clc
add
mov
and
rcrl
add
xor
iret
into
mov
int
hlt
mov
push
or
mov
jle
inc
xchg
mov
imul
icebp
in
outsb
aas
cmp
push
pop
mov
js
xchg
sub
in
ret
xlat
push
add
sbb
in
fwait
stos
inc
adc
or
xor
dec
out
loop
fldenv
stc
add
rcrl
or
or
rorl
rcl
inc
dec
test
dec
addr16
lcall
cli
lods
movsb
fucomp
mov
mov
mov
or
or
loopne
lods
fucomp
push
repnz
xchg
mov
xor
cmp
in
mov
sahf
ljmp
cmp
jb
stos
push
mov
inc
imul
stc
cld
push
xlat
add
and
push
jg
push
push
leave
cld
scas
ret
icebp
lret
nop
dec
sbb
clc
fisubrl
sub
test
test
add
xlat
sbb
pop
fmuls
loop
ljmp
dec
scas
fists
mov
xchg
or
shlb
mov
mov
or
xchg
cwtl
loop
xchg
inc
and
repz
je
cmp
pop
adc
mov
dec
mov
mov
pop
sbb
push
outsb
mov
mov
sub
mov
rcrb
xlat
or
testl
andl
sub
inc
mov
and
or
sahf
imul
mov
xchg
adc
es
inc
mov
xchg
shl
outsl
orb
push
ja
lods
cs
popa
mov
lcall
xchg
dec
and
adc
test
cmp
cmp
cmp
add
imul
out
imul
inc
cmpsb
repz
nop
jne
jge
ss
sbb
sub
mov
out
stos
push
mov
jmp
test
hlt
dec
mov
mov
lahf
loope
xor
pusha
push
mov
xor
adc
repz
hlt
adc
test
push
fmuls
shll
and
movsb
lcall
dec
or
insl
mov
jle
cs
lods
xchg
jae
jo
fdivr
loop
outsl
add
pop
test
loop
data16
in
or
sbb
in
xor
sbb
insl
out
pop
arpl
insl
sbb
or
iret
sahf
cmpsl
imul
pop
push
cmpsl
gs
clc
add
adc
xchg
or
mov
fxch
fiaddl
shll
ds
out
rcll
push
test
sbb
bound
repz
adc
test
pop
imul
cmpsb
cmp
push
fmuls
das
out
mov
test
fnsave
sub
mov
adc
int3
stos
sub
imul
pop
stc
jecxz
dec
adcb
fisubrl
std
mov
cmpsb
pusha
mov
cmpb
push
mov
in
mov
lock
add
pop
xchg
inc
outsb
and
int
dec
sahf
pop
out
call
lahf
dec
sub
or
sbb
push
in
jp
in
loopne
fsubrp
jecxz
ljmp
clc
cmp
je
and
dec
push
mov
dec
or
dec
jae
inc
into
enter
jg
out
push
xor
fstl
xchg
xchg
or
cmp
mov
jnp
insb
fists
push
mov
xchg
pop
xchg
pushf
cmp
lcall
adc
xchg
scas
dec
ficomps
test
mov
xor
sarl
adcb
fcomip
xor
adc
int
jo
bound
pop
js
mov
daa
dec
jns
lahf
adc
add
outsl
pop
fcoml
push
ja
inc
cmp
loop
icebp
push
mov
rcrb
xor
and
aaa
and
mov
push
loopne
adc
sub
mov
jle
out
shlb
mov
mov
loopne
adc
lock
mov
and
pop
mov
ljmp
inc
inc
pop
mov
enter
push
inc
adc
daa
pop
cmp
xor
addb
cmp
lea
mov
fiadds
jecxz
jb
fisubs
mov
cmp
jecxz
ret
pusha
in
mov
inc
xor
loope
rorl
xchg
mov
mov
in
cwtl
adc
push
std
push
jns
mov
stc
cmp
xor
loop,pt
bnd
xchg
subb
imul
push
movsb
sub
sub
dec
jne
cmp
jg
mov
mov
xchg
mov
xchg
in
and
idivl
dec
xchg
xchg
icebp
or
aad
ficompl
cmp
cmp
or
mov
je
into
or
pop
cmpsb
mov
jl
mov
addr16
adc
rcrl
adc
pusha
pop
jge
int3
in
jb,pn
push
faddl
dec
inc
stc
inc
xchg
andb
leave
fildl
mov
mov
inc
cltd
test
loopne
aad
mov
push
jbe
mov
outsb
mov
add
add
je
lds
dec
dec
push
xchg
sbb
rcrl
push
insl
cmp
jl
jns
cmpsl
lock
push
pop
xor
inc
popa
cs
sub
inc
add
out
or
movsb
rcrb
sahf
imul
mov
pop
dec
xchg
in
test
or
rcl
daa
and
sbb
mov
aaa
sub
adc
jge
lret
lods
sti
int3
fwait
sbb
pand
or
outsb
stc
imul
mov
fwait
lock
push
jge
inc
xchg
popa
outsl
outsb
and
fmull
outsb
mov
push
test
xor
dec
pop
in
add
cli
add
pop
das
sub
fisubs
push
lahf
and
cld
adc
mov
icebp
movsb
sbb
or
ret
push
out
mov
xchg
push
lods
mov
std
movsl
cmp
push
lahf
js
inc
xorb
ljmp
sub
das
mov
out
outsb
std
outsl
and
ret
ja
loopne
adc
aas
mov
je
in
mov
sub
mov
sar
loopne
xchg
adc
ja
mov
pop
xchg
sub
sbb
mov
shll
mov
mov
push
adc
push
xchg
sub
mov
stc
mov
out
insl
test
mov
jmp
push
cmp
add
push
jno
add
push
xchg
mov
pop
inc
adc
pushf
or
ljmp
add
aaa
std
sub
sub
mov
jo
jnp
iret
xor
dec
lcall
scas
inc
pop
push
cwtl
cmc
or
push
mov
mov
shrl
sub
push
cmpsl
imulb
adc
scas
push
and
jmp
dec
jbe
mov
push
repz
test
clc
mov
inc
out
out
movsbl
push
cmp
push
cmp
add
popa
popa
xchg
adc
xor
fisttps
push
cmp
adc
mov
test
fwait
shll
ret
xor
inc
push
sub
cmp
lcall
and
pushf
jbe
pop
sbb
inc
xor
ljmp
lea
and
cltd
in
stos
icebp
dec
sbb
jne
sub
daa
test
jne
push
test
sbb
dec
lcall
jl
jge
mov
icebp
dec
sub
stc
rcrb
clc
pop
mov
int3
in
dec
cmc
jmp
loop
xchg
push
addl
ljmp
addl
iret
lods
xor
mov
aad
jmp
cli
push
sbb
push
pushf
xor
jae
xor
stc
int
sbb
outsb
jb
push
xchg
shll
out
xchg
ja
dec
push
or
adc
test
mov
mov
bound
imul
imul
mov
dec
mov
cmp
jecxz
ljmp
insb
dec
push
jb
idiv
pop
xor
xchg
xchg
inc
cmpsl
push
push
movsl
inc
mov
test
pop
in
cmc
aaa
lds
aad
and
out
xchg
xchg
inc
cmpsl
push
push
movsl
inc
mov
test
pop
in
cmc
aaa
lds
aad
and
out
pop
gs
mov
addr16
push
and
addr16
pop
in
cmc
aaa
ret
and
adc
mov
daa
push
push
movsl
mov
loop
insl
fsubrs
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
lret
mov
push
mov
inc
pop
mov
test
pop
cmc
or
jns
imul
mov
leave
gs
push
jmp
movsl
pop
mov
test
dec
xor
subb
mov
insb
sarb
dec
pop
sbb
lahf
push
loopne
test
add
or
mov
mov
lcall
loop
icebp
cs
vcvtsd2si
mov
jno
data16
cltd
push
mov
fwait
or
and
shlb
and
in
push
mov
aad
mov
mov
xchg
and
gs
icebp
test
imul
or
shrl
scas
lds
cltd
and
cld
push
fsubl
sub
jne
jp
cmpsb
sbb
cmp
scas
jns
jbe
loopne
fucom
mov
cltd
jmp
cmp
movsl
sub
sub
hlt
aad
cmp
mov
notb
inc
test
outsl
ret
mov
mov
subb
cltd
cmpsb
pop
nop
cltd
sub
pop
xor
mov
gs
dec
lock
add
xor
aad
mov
fcoml
or
cmp
dec
rolb
cwtl
sub
test
dec
mov
lods
push
cmpsl
push
xchg
xor
jl
pop
cmp
cmp
lock
inc
fdivl
mov
push
jmp
movsl
cmp
dec
in
aad
lds
adc
leave
gs
push
jmp
movsl
cmp
dec
in
aad
lds
xor
push
testb
inc
jmp
jp
pop
push
mov
stc
int3
je
les
adc
and
stc
pushf
jbe
and
pop
mov
pop
fisttpll
add
xor
loop
sbb
and
ds
xchg
dec
jp
in
adc
fsubs
popl
enter
sub
dec
adc
pop
repnz
dec
adc
dec
int3
lds
in
mov
insl
xlat
mov
cmp
or
push
push
negl
xchg
jmp
mov
mov
in
rcll
adc
loope
cwtl
enter
xchg
dec
jle
and
adc
iret
mov
cmpsb
cli
mov
pop
stc
ret
dec
push
mov
jge
xor
clc
hlt
dec
dec
pop
push
xchg
or
cli
inc
xchg
movsl
mov
inc
inc
lcall
inc
aas
xchg
xor
int3
nop
dec
icebp
inc
cmp
or
mov
test
scas
xchg
leave
add
sarb
fwait
addr16
mov
daa
push
adc
push
lds
insb
mov
incb
inc
inc
mov
loopne
fistps
dec
gs
and
jnp
fwait
fwait
xchg
jmp
pop
ljmp
cmpb
xchg
or
mov
pop
aaa
out
sahf
dec
cs
out
add
push
cmp
push
daa
stc
mov
sahf
pushl
outsb
rorl
sub
sub
lods
dec
push
repnz
into
sub
rol
es
rorl
add
sbb
popa
lods
and
mov
and
popf
inc
cli
lret
cli
push
xor
daa
into
adc
push
xor
xor
or
sub
addl
push
mov
mov
mov
lcall
inc
sahf
inc
mov
inc
popf
sbb
xorl
sbb
push
popa
insb
lods
and
sub
add
aas
bound
sbb
xlat
lods
jg
cmp
fisubrs
mov
ljmp
xchg
xlat
cmc
and
movsb
bound
and
sub
ss
repz
or
movl
add
xchg
cmp
iret
rcrb
add
mov
movsb
mov
rcll
fildl
fcom
les
pop
push
int
scas
ljmp
xor
scas
dec
dec
pop
rcll
in
out
or
in
lea
cmp
xchg
loop
sbb
addr16
or
ljmp
in
jp
xchg
sbb
stos
sbb
dec
out
cmp
cmp
push
dec
stos
iret
cli
insb
pushf
add
aam
xchg
mov
fidivrl
inc
cs
xchg
repnz
xchg
or
repnz
std
jnp
inc
push
sub
in
cmp
and
out
lcall
cltd
mov
push
pop
sub
stos
jne
cmp
pop
in
rorb
sub
gs
shll
push
jle
sub
int
mov
mov
pop
mov
push
aad
push
jno
cli
dec
pop
repz
add
xor
cmp
jge
inc
lods
inc
out
sub
ss
lcall
dec
and
push
je
sbb
subb
sbb
push
inc
inc
xor
stos
test
cmc
fnstsw
sub
or
mov
sarl
fildl
pusha
sbb
lds
pop
inc
insl
mov
dec
cmp
fwait
pop
movsb
loopne
or
dec
andb
pop
push
je
push
push
dec
push
jb
lret
pop
ficoml
sub
inc
mov
out
daa
cmp
jbe
inc
xchg
cmc
inc
xor
push
clc
repz
popf
or
imul
jl
and
push
movsl
adc
pop
pop
das
sbb
mov
aam
push
stos
fs
popf
mov
call
jno
mov
xor
sahf
inc
cli
add
mov
out
xor
push
push
fadds
xlat
dec
inc
fs
adc
add
shll
mov
imul
lods
loopne
push
test
jbe
daa
imul
stc
js
add
into
add
nop
divl
adc
pop
stos
jg
jnp
jmp
mov
loop
fcmovnu
push
sti
gs
mov
test
fdivl
lret
or
or
lahf
pop
cltd
incb
cmp
add
mov
cmc
xor
fbld
roll
outsl
jb
push
inc
mul
xchg
or
and
lahf
jnp
inc
cmp
stos
cmpsb
es
arpl
in
sub
jmp
pusha
adc
xchg
mov
jae
or
dec
xor
scas
dec
inc
add
or
sbb
dec
daa
xchg
mov
push
or
ljmp
mov
nop
cmp
xor
mov
lock
dec
xchg
xlat
std
daa
push
xchg
sub
add
and
pop
sbb
popa
xor
or
pop
shll
das
ja
jne
sub
sahf
mov
add
xchg
insb
int3
pop
test
jnp
cltd
pushf
cmp
and
inc
mov
call
adc
in
cltd
and
insl
xor
js
cmp
or
leave
rcr
push
mov
lods
lods
push
and
orl
mov
insl
mov
aaa
adc
fmull
out
sub
mov
dec
mov
push
lahf
popa
push
les
andb
mov
cmpsl
add
mov
scas
lods
cld
add
mov
cmp
call
pop
sbb
mov
push
mov
pop
sbb
call
test
adc
insb
ret
hlt
in
dec
insb
or
iret
adc
mov
xor
dec
and
shll
fs
adc
sahf
in
xlat
or
mov
adc
lret
mov
sub
aas
ljmp
nop
bswap
ret
push
arpl
js
stc
not
lock
lret
sub
xchg
and
mov
sbb
js
lods
clc
push
call
cmp
fldenv
leave
in
mov
leave
divb
push
in
mov
dec
in
mov
aad
leave
pushf
loop
sbb
xlat
mov
lcall
inc
loopne
pop
pop
jge
pusha
gs
pop
mov
push
adc
cltd
sub
fimuls
pusha
ret
adcb
mov
loopne
fstps
sbb
and
xchg
cmpsb
gs
xchg
sbb
outsl
mov
jp
or
or
ljmp
or
mov
jg
pop
in
in
mov
cmpsl
stc
je
mov
mov
leave
mov
xchg
jb
cli
out
xor
xor
stos
mov
xchg
stos
xchg
sbb
mov
xchg
in
pop
dec
shlb
or
xchg
cmpsl
sti
inc
outsb
iret
sahf
jb
xchg
inc
adc
push
filds
xchg
out
jecxz
add
inc
in
sub
mov
repnz
in
mov
cmp
movsb
sbb
mov
jb
push
xor
hlt
mov
in
rolb
sbb
int
imul
push
fnstenv
sarb
mov
cmpb
aam
loop
and
or
xor
pmullw
mov
or
rcl
jle
or
xlat
sub
loopne
and
push
dec
fldcw
shll
add
es
insl
dec
pop
jnp
bound
inc
stos
push
mov
and
or
and
xchg
inc
mov
pop
or
mov
cmpsl
add
lret
jmp
daa
jne
mov
add
or
out
dec
pop
sub
jae
popa
mov
mov
ss
sub
lods
and
mov
fsts
adc
icebp
filds
fnstsw
mov
popf
cmp
push
lahf
loopne
hlt
inc
jmp
leave
adc
add
push
outsb
movsb
sbb
aad
push
int3
outsl
in
inc
loop
cmp
ljmp
in
lock
add
jecxz
lret
jbe
aaa
divb
pop
icebp
test
fistl
je
push
test
pop
and
xchg
push
add
ret
push
add
fs
and
xchg
mov
out
in
mov
subl
add
jbe
test
mov
sbb
adc
sbb
scas
push
movsb
mov
lods
gs
sub
mov
push
push
out
jmp
jle
add
fcompl
lods
leave
out
sbb
or
dec
aam
or
int3
js
out
or
add
repz
cmp
sbb
push
pop
cs
imul
adc
cmpsb
add
fidivl
push
pop
popf
jmp
mov
bound
jnp
mov
push
push
std
sarl
inc
mov
mov
push
mov
jne
inc
push
imul
icebp
and
mov
jmp
test
in
cs
jb
aas
lods
sub
and
xorb
cltd
subb
sub
mov
divl
jbe
adc
dec
mov
repz
push
jl
insb
mov
aas
xchg
mov
jb
pop
inc
add
sbb
in
jno
scas
mov
orb
cmpsb
xchg
test
adc
andb
rsm
mov
mov
movsb
movsb
pop
pop
mov
sahf
outsb
mov
in
mov
pusha
roll
pop
into
int3
pop
or
mov
jp
dec
lea
push
jle
jl
xchg
xchg
push
stos
dec
shll
es
sbb
and
mov
xchg
dec
dec
xchg
inc
or
sahf
insl
push
pop
or
int
cmp
fwait
pop
mov
cmp
mov
xor
in
mov
popa
dec
out
push
mov
adc
add
mov
aas
arpl
jecxz
fsubl
pop
lret
mov
sbb
fs
scas
adc
ror
leave
fbstp
fsubp
sti
enter
jg
or
aaa
bound
cltd
fwait
sahf
xchg
or
cmpb
jge
jp
fnsave
push
scas
dec
xchg
ljmp
pop
repz
subl
push
push
inc
lcall
push
push
hlt
movsl
cmp
mov
ljmp
mov
loopne
imul
mov
fst
out
fildll
pusha
stc
into
cmp
mov
and
cmpsl
sub
jge
cli
cmp
push
cld
mov
xlat
cmp
mov
and
scas
pusha
mov
test
and
xchg
push
pop
cmpb
jno
sbb
xchg
mov
in
ljmp
call
shll
popa
push
cmp
mov
or
pop
dec
or
fldenv
aas
xor
pop
lahf
mov
stos
adc
mov
and
xor
sbbl
jb
sbb
sahf
insb
data16
mov
dec
xchg
sbb
in
pusha
sub
dec
repz
fldl
movsb
fisubl
add
xlat
cmp
mov
test
adc
xchg
iret
out
ds
iret
sub
jl
mov
addl
sbb
mov
in
mov
ret
xor
in
scas
ret
mov
mov
call
pushf
adc
and
lds
es
hlt
inc
sub
mov
imul
or
mov
push
sbb
repz
xchg
adc
in
decb
dec
loop
daa
sarb
cld
cmp
or
jae
adc
push
sbb
subb
and
push
addl
push
sub
push
mov
jno,pt
inc
stc
pop
and
icebp
js
sbb
hlt
sbbb
add
out
popf
or
icebp
and
pushf
jl
or
mov
xchg
push
scas
pop
cmpsl
dec
push
xchg
and
sub
xor
mov
aaa
icebp
pop
adc
repz
mov
jo
lods
add
mov
adc
cmp
mov
mov
sbb
ret
addr16
adc
mov
push
sar
sbbl
mov
jl
xor
dec
scas
enter
out
xchg
xchg
dec
jge
or
loop
test
loop
in
cwtl
mov
xchg
in
out
jl
sbb
test
adc
lock
ret
sti
mov
sub
fsubl
fstl
and
dec
not
inc
jnp
mov
xchg
or
repz
adc
inc
aam
mov
sub
test
inc
insl
xchg
sbb
mov
notb
adc
test
not
sub
dec
and
mull
int3
enter
pop
xchg
sub
pop
pop
jmp
and
mov
or
ja
pop
popa
xchg
jb
jg
es
adc
jo
int
jg
fisubrl
xchg
into
outsl
pop
nop
pop
ds
lahf
sbb
cmp
lret
stc
pop
roll
idivb
cmp
lods
in
scas
sbb
inc
lret
inc
cltd
adcb
or
mov
fldpi
inc
jbe
enter
sub
mov
push
inc
pop
mov
fiaddl
push
addr16
lods
and
pop
jmp
mov
repnz
repz
movsb
pop
out
mov
mov
les
dec
dec
sahf
sahf
push
xor
cmp
dec
lds
adc
repnz
and
popf
scas
mov
inc
add
sub
push
mov
inc
leave
in
push
out
lret
inc
jge
cmp
and
jns
and
ss
pop
pushf
lahf
sbb
pushf
lcall
pop
movsl
xchg
dec
cmc
mov
imul
jmp
sub
mov
ds
dec
and
pop
lret
sub
aaa
lret
das
jns
ret
jno
push
hlt
clc
repnz
js
gs
mov
inc
fadd
mov
mov
shrb
je
jae
mov
scas
loopne
neg
xchg
mov
push
pop
mov
push
int
xchg
nop
push
out
add
aas
cmp
ss
and
cmp
inc
mov
outsl
imul
cmp
push
xchg
cmp
loope
fcoms
pop
mov
mov
subb
mov
out
push
pop
dec
xchg
rcll
push
hlt
aam
or
push
xor
adc
mov
or
mov
cmp
jnp
les
aam
xlat
testl
xchg
sub
loope
mov
push
mov
inc
ficompl
movl
sbb
cmp
xchg
sub
stos
cmp
out
jge
pop
icebp
or
add
aam
inc
dec
cmpb
or
fst
push
and
push
mov
inc
es
lods
mov
and
stos
or
mov
in
cmp
sub
addr16
ret
outsb
daa
aaa
ljmp
mov
push
mov
mov
or
pop
add
cmp
ud1
cs
pop
sub
icebp
jecxz
mov
pop
dec
ret
stos
testl
ds
push
add
fdivrs
mov
cmp
add
push
and
popf
test
push
in
testb
dec
sbb
rcrb
dec
stos
sub
mov
dec
push
cmpsl
dec
push
ja
stc
enter
pop
mov
and
jmp
jns
push
and
imul
insl
adc
ljmp
mov
mov
out
gs
leave
add
outsb
push
int3
imul
push
pop
shl
push
jge
or
push
dec
pop
pop
mov
jnp
xchg
fcmovnb
xchg
push
pop
xchg
lahf
pop
lahf
lret
cmp
inc
jns
movsl
sub
mov
mov
sbb
int3
scas
neg
lods
in
jnp
jl
pop
ffreep
icebp
ja
lea
ret
cmc
xor
fidivrl
xchg
mov
mov
aaa
push
loop
repnz
mov
arpl
xchg
push
cmpl
jnp
push
pushf
or
repnz
push
push
and
sbb
xchg
nopl
scas
lret
add
inc
mov
in
insb
push
sbb
pop
in
sbb
ret
nop
scas
cmc
add
push
xlat
pop
sti
xchg
jb
addr16
add
rorl
xchg
call
and
loop
push
add
jo
outsb
jg
adc
and
nop
roll
add
scas
push
and
cltd
aaa
push
or
cmc
mov
sbb
in
ja
outsl
inc
cmp
sbb
or
xchg
lds
mov
xor
cmp
jae
pop
test
add
pop
xchg
aad
out
sbb
mov
adc
lahf
sbb
aaa
jg
sbb
pop
inc
je
aas
pop
in
adc
jo
cmp
test
test
dec
call
dec
imul
cmp
inc
push
out
and
and
imul
hlt
adc
inc
cwtl
int
xor
das
ds
pop
jnp
enter
ja
jp
sbb
insl
out
inc
pop
sbb
test
and
adc
addl
and
jecxz
in
adc
cmpsb
pop
cwtl
aaa
or
jmp
push
ljmp
push
int
xlat
mov
call
or
cltd
imul
xchg
jge
fidivl
stos
mov
enter
shlb
imul
ss
sti
scas
pop
mov
and
mov
dec
mov
testl
pop
sub
xor
cld
call
inc
sub
mov
enter
outsl
add
sarb
jle
outsb
cmpsb
nop
fsubl
shll
outsb
mov
das
lock
aam
xchg
pop
mov
jg
ds
push
jg
arpl
incb
mov
orb
rclb
mov
add
stos
pop
sub
cmp
jmp
fnstcw
mov
aam
adc
js
cld
data16
push
cmpsb
leave
sbb
xor
iret
sbb
outsb
mov
mov
std
js
outsb
les
pop
lds
and
cwtl
lcall
sbb
jl
cli
pop
icebp
vcvttps2dq
sub
inc
push
xchg
das
shr
test
adc
jns
cwtl
add
cli
arpl
iret
fcoms
adc
arpl
daa
mov
mov
inc
divb
pop
push
add
mov
stos
adc
xor
outsb
inc
and
cmp
sbb
push
enter
inc
adcb
stos
pop
mov
and
add
pop
aad
push
mov
bound
xchg
xor
push
inc
sub
sti
pop
in
cmp
jl
jl
call
ret
inc
xchg
adc
call
ds
mov
xor
sub
dec
test
popw
inc
sub
pop
outsl
jmp
jle
shlb
push
aad
xchg
xor
pop
adc
or
pop
mov
xchg
or
inc
ret
mov
dec
inc
sub
out
xchg
jle
push
hlt
movsl
orb
pop
mov
mov
inc
iret
xchg
push
push
js
adc
xor
sar
mov
lcall
sub
add
xor
in
mov
aam
ret
sub
mov
mov
mov
lea
lcall
aas
stc
shll
jl
loopne,pt
addb
out
mov
adc
iret
xchg
fstpl
test
ret
les
ret
pop
ja
jge
pop
mov
sbb
and
in
xacquire
pop
adc
icebp
adc
mov
xchg
dec
outsb
sub
mov
in
cltd
fcompp
xchg
or
sub
mov
dec
xchg
sub
ja
shll
addb
fidivrs
dec
cltd
adc
and
lahf
aad
pop
jmp
xchg
cmpsb
std
push
fisttpll
daa
clc
adc
pusha
call
das
mov
jge
dec
mov
mov
adc
ja
rcl
lods
movsb
ret
repnz
int3
je
loop
fistl
jne
xchg
ljmp
xor
pusha
call
xor
in
cmpsb
test
adc
mov
cld
imul
xchg
sbb
outsb
lret
in
adc
insb
cld
iret
dec
cld
mov
and
lods
pushl
xchg
test
mov
lahf
idivb
mov
enter
nop
nop
add
inc
dec
mov
shl
xor
cmpsl
imul
out
arpl
cs
lahf
ficoml
leave
repnz
cmp
xchg
fs
add
pop
sbb
mov
ret
dec
sbb
repnz
shl
push
sub
pop
or
sub
mov
je
xchg
xor
push
sbb
insl
adc
sbb
adc
xchg
ljmp
push
dec
jmp
xor
out
sbb
push
jnp
mov
std
xor
jp
add
adc
aam
jns
repz
cmpsl
insb
nop
loope
mov
ret
inc
cmp
or
outsb
sti
imul
xchg
cmp
xor
leave
jl
mov
out
xchg
jp
sbb
xchg
xor
push
jecxz
xchg
mov
lret
pop
iret
cmpsl
push
lret
stos
mov
mov
xchg
popa
and
push
js
aas
into
ret
jae
mov
nop
fmuls
xor
shlb
mov
inc
jecxz
xchg
shrb
push
inc
aas
loop
jle
in
pop
pop
into
push
pop
gs
stos
fwait
call
pop
xchg
bound
ljmp
mov
mov
jl
xchg
and
fnstenv
gs
push
jmp
movsl
cmp
dec
in
aad
lds
adc
leave
gs
push
jmp
movsl
cmp
dec
in
aad
lds
adc
leave
gs
push
jmp
movsl
cmp
cmc
dec
in
aam
lds
adc
leave
gs
imul
xchg
sub
jge,pn
sbb
push
lock
shlb
sbb
hlt
and
jo
inc
in
lock
adc
shll
mov
xor
shlb
push
loopne
loop
addb
adc
shrb
mov
sub
jecxz
mov
hlt
and
jg
nop
sbb
xor
nop
sarl
iret
loope
jae
dec
hlt
add
sub
movsb
or
fstenv
jns
xor
iret
in
adc
mov
iret
fimuls
inc
call
sub
inc
mov
movsb
fwait
cmp
or
in
pusha
shlb
rclb
scas
pop
sahf
xor
push
in
push
lock
mov
inc
nop
movsl
jo
mov
inc
insl
shrb
sbb
pop
adc
sarb
dec
or
pop
jae
pop
nop
test
out
and
dec
mov
inc
lcall
lahf
mov
fstpl
push
mov
adc
shrb
mov
xor
fadds
push
stc
and
adc
lods
adc
aad
pop
cmc
inc
or
xor
push
cmc
jl
insl
fbld
cmp
pextrw
adc
dec
addb
movsb
sbb
loop
loopne
adcb
aam
push
fiadds
adc
and
xorb
and
jo
inc
lock
loopne
nop
xor
loopne
lock
shlb
mov
xor
rolb
loopne
nop
xor
loopne
cmc
push
dec
testl
aas
ja
sub
call
addr16
push
std
mov
push
cmpsb
or
cmp
jp
jae
add
and
fldcw
jae
js
enter
cmpsl
push
notb
imul
pusha
shlb
cmpsl
inc
addr16
mov
mov
lods
push
pop
and
mov
adc
dec
int3
test
inc
mov
sarb
nop
mov
or
stos
mov
jp
xor
in
cmpsb
scas
je
lods
jp
sbb
aam
push
sbb
in
xchg
les
mov
xchg
add
lahf
adc
outsl
stc
xchg
shll
lods
mov
es
cltd
insb
and
xchg
xorb
pop
frstpm(287
mov
lret
aad
arpl
repnz
ds
mov
dec
cs
inc
lret
jmp
push
scas
test
scas
out
lahf
push
inc
and
push
outsl
pop
push
maskmovq
notl
clc
sbb
or
inc
sarb
in
movl
fcmovbe
cmp
dec
or
xor
inc
lea
inc
xchg
mov
adc
jp
sub
dec
and
outsl
sbb
pushf
sbb
push
fwait
aam
cmp
ds
je
mov
pusha
call
int
push
and
imulb
cld
imul
mov
push
sub
dec
ss
inc
xchg
sub
int3
dec
fsubrp
mov
or
test
decl
test
push
nop
add
adc
mov
std
pusha
loopne
jle
sub
add
lea
popa
js
mov
xor
sub
jns
pop
jnp
cmp
ja
xor
imulb
sbb
or
paddb
cmpsl
bound
movsl
aam
dec
dec
cmp
test
aad
inc
loop
nop
xchg
mov
mov
push
lcall
int
xorl
pop
cmp
pushl
or
testl
jnp
out
mov
xchg
mov
xchg
pop
int
jmp
loope
or
adc
pop
cmpsb
call
xchg
ret
xlat
sub
jl
out
loopne
int
mov
inc
enter
push
pop
xor
or
loope
xor
push
out
mov
jecxz
mov
mov
aam
inc
repz
lahf
jmp
pusha
fcoms
or
es
ja
pop
lret
out
xchg
cmp
shlb
xor
iret
dec
lret
es
dec
scas
clc
rorb
sbbb
jb
cltd
gs
xor
xchg
push
and
sbb
fadds
push
xchg
mov
push
add
or
stos
lock
dec
test
out
jge
mov
lret
cmpl
fwait
and
pop
mov
icebp
push
inc
das
sbb
sub
pop
sahf
mov
sbb
dec
sbb
sbb
jno
xchg
pop
push
pushf
xchg
mov
dec
cmp
leave
sbbl
addr16
subb
xlat
stos
mov
daa
inc
xor
repz
cmp
pop
inc
and
roll
lock
pusha
jb
loope
cmp
dec
xor
sahf
stos
inc
and
and
inc
out
inc
dec
mov
aas
in
rorb
dec
mov
pop
sub
setne
pop
cmp
loop
test
in
scas
pop
repz
loope
jb
scas
jecxz,pn
jno
dec
fistl
out
shrb
sbb
addr16
mov
scas
push
add
lret
pop
loopne
inc
push
inc
mov
add
jge
cmp
or
xchg
imul
sti
cmc
lea
mov
and
inc
mov
and
lock
loope
jne
in
jge
xchg
mov
sub
inc
and
jne
imul
lea
adcl
mov
jecxz
push
fldcw
addl
jbe
push
popf
sub
jb
and
push
push
in
pushf
add
mov
lods
out
pop
push
outsb
fidivl
mov
leave
xor
imul
imul
mov
mov
or
jo
ret
in
jbe
inc
inc
xchg
adc
pop
in
add
push
addr16
mov
inc
mov
loopne
arpl
scas
fsubrs
mov
inc
mov
sub
adc
lcall
fwait
neg
mov
in
or
test
sbb
adc
outsb
shlb
repz
in
mov
insl
sub
lock
cmp
mov
push
dec
fcoms
enter
dec
std
sti
loopne
test
dec
ja
pop
shlb
mov
fstpt
arpl
dec
push
xor
jg
mov
and
mov
ds
mov
add
push
inc
ljmp
es
pop
arpl
inc
adc
push
pop
shll
cmp
aas
xor
test
dec
hlt
stc
aam
addr16
out
jecxz
mov
xor
jne
sbb
in
movq
cld
or
shlb
cmpl
lret
repz
and
pop
fidivrl
xor
stc
sub
adc
divb
loop
xchg
mov
inc
lret
mov
cmp
xor
mov
pusha
rcrl
int3
lahf
daa
ljmp
add
pop
lods
xchg
out
scas
stos
das
dec
idivb
jno
shlb
cli
mov
aas
cli
xlat
jbe
cwtl
or
imul
dec
sbb
adc
aas
ja
pcmpeqd
mov
iret
lods
bound
stos
daa
call
and
pushf
stos
int
push
jp
and
add
mov
mov
pop
xor
pop
inc
mov
mov
dec
shlb
jmp
out
mov
and
es
jmp
push
sub
push
es
push
adc
call
push
mov
outsl
fldt
jge
daa
xor
inc
mov
pop
mov
je
inc
mov
push
add
arpl
test
stc
mov
jecxz
ja
mov
cwtl
pop
int3
fwait
inc
movnti
shl
cwtl
repnz
sub
mov
xor
lret
push
das
fsts
xor
adc
fwait
mul
jecxz
cld
mov
stos
push
repnz
fcoms
sbb
int
stc
fistps
loopne
je
push
lock
wrmsr
aas
and
jle
and
test
ljmp
mov
xchg
aaa
jge
sbb
jl
lods
loop
outsb
clc
fs
popa
and
loopne
sbb
mov
xchg
pop
das
mov
xchg
pop
fisttps
leave
and
pop
mov
dec
pop
insb
idiv
sbb
sti
jmp
xchg
repz
in
push
and
mov
xor
jge
add
outsb
cmpsl
pop
jecxz
xchg
dec
clc
and
and
in
xchg
stos
test
pop
xor
insb
mov
mov
pop
push
cmp
push
sbb
outsb
addr16
sbbl
mov
movsl
or
dec
insb
lock
sarl
cmp
ret
pop
dec
out
fmul
in
pushf
add
shlb
sub
enter
loope
mov
lcall
lcall
and
inc
inc
dec
xchg
and
mov
dec
add
adc
pop
mov
jl
addb
xchg
jmp
mov
in
or
idiv
aaa
mov
dec
mov
and
clc
cmp
cli
sub
test
sub
test
xor
insl
xchg
aaa
pop
and
popf
cmp
mov
adc
xor
push
enter
sahf
xchg
hlt
lea
mov
pop
inc
pop
pop
cmp
mov
in
lock
mov
in
push
sbb
outsl
xchg
xchg
aam
lds
dec
dec
jns
stc
int
pop
xchg
mov
ss
pushf
mov
jno
nop
add
mov
int3
out
in
jno
fs
nop
mov
bound
and
mov
cmc
popf
inc
jns
hlt
lret
or
cltd
jnp
sbb
into
insb
sub
pop
clc
stos
mov
test
xchg
or
mov
mov
mov
sbb
leave
nop
and
push
aad
mov
inc
inc
rcrb
gs
scas
movsb
gs
jbe
test
jbe
mov
out
jp
scas
xchg
stc
xchg
mov
lods
out
or
dec
cmc
clc
imul
cld
mov
jle
sbb
dec
lds
pusha
push
cli
jge
inc
pop
mov
nop
insb
or
mov
sub
lds
sbb
outsl
mov
lock
ret
arpl
outsl
xchg
jns
stos
sub
add
js
cmp
adc
jnp
push
push
stos
and
pop
pop
lret
pop
scas
clc
cmp
fucompp
imul
mov
push
mov
aaa
xchg
add
push
adc
mov
jle
inc
adcl
sti
sbb
hlt
sbb
sub
jne
mov
cmp
out
mov
dec
dec
insl
mov
ja
out
stos
imul
inc
push
dec
push
or
mov
pop
fdivrp
jbe
leave
add
ss
and
icebp
inc
push
add
movsl
add
int
sbb
jnp
lret
cld
lods
cmp
dec
jb
outsb
enter
mov
aaa
or
int3
xchg
mov
jnp
xchg
bound
es
rorl
lock
jp
out
lods
fcmovb
sarb
pxor
pushf
cltd
mov
sbb
push
frstor
sub
add
in
out
or
insl
jne
int3
lods
mov
fimuls
scas
pop
xchg
cmp
movsb
mov
jb
enter
lahf
push
cmp
out
xor
lods
sub
enter
nop
pusha
loopne
add
cmp
orl
shl
add
je
popf
je
data16
add
mov
out
xchg
aad
std
cmp
fdivl
fwait
xchg
xor
inc
iret
fistps
enter
jmp
cld
jecxz
aaa
iret
jge
fcompl
cmpsl
shll
iret
pop
pop
inc
sub
leave
js
adc
cmp
xchg
sti
lretw
xchg
stos
cltd
push
pop
cmp
adc
xchg
and
mov
icebp
in
movsb
add
adc
sbb
aad
imul
mov
cmp
push
jbe
cld
int
mov
mov
push
lea
sbb
xchg
push
or
xor
sub
xchg
or
ret
inc
daa
mov
test
cli
adc
xchg
fildll
push
xchg
call
lcall
cmp
add
mov
mov
loope
cmp
mov
mov
add
in
jg
sub
pop
push
lret
cmpl
or
rcl
jg,pt
xor
popf
or
inc
sbb
add
iret
cmpsl
lods
jmp
cmp
pop
arpl
sub
pusha
cmpsb
ret
aaa
mov
jp
fistps
pushf
rclb
pop
out
clc
stc
loopne
cli
sub
imulb
test
rcrl
outsl
dec
add
pusha
add
iret
cmp
cmpsb
shr
imul
outsl
test
cmpsb
mov
add
cmpsl
jecxz
lcall
out
add
jge
test
adc
mov
mov
lock
call
adc
push
std
aaa
ss
aas
int3
jecxz
mov
adc
jnp
jno
lock
xor
fildl
xchg
cmovge
shr
mov
mov
into
pop
stc
inc
mov
les
jl
mov
imul
cwtl
insl
mov
int
add
push
xor
pushf
add
push
jge
xchg
push
pop
mov
pusha
adc
mov
mov
sub
mov
push
mov
lods
mov
rorb
xor
pushf
jbe
inc
ljmp
jne
jecxz
stos
or
in
lods
sub
xchg
cs
adc
insl
xchg
or
outsb
mov
push
pushl
xchg
les
hlt
sub
mov
inc
push
cwtl
mov
std
sub
fwait
push
imul
adc
dec
pop
pop
test
stos
bound
repnz
inc
stos
push
pop
inc
jecxz
cli
adc
addb
insb
ljmp
sbb
add
inc
xor
sbb
rolb
les
pop
adc
cmc
add
dec
sti
pop
pushf
ds
and
or
mov
cmp
lods
cmp
xchg
jnp
mov
cmpsb
aas
lret
and
jmp
sarl
mov
cld
mov
loope
jle
mov
push
loope
pop
sahf
sbb
sar
rorb
mulb
int3
ret
lcall
ret
inc
in
xchg
outsl
adc
mov
movsl
popa
and
jge
ds
mov
incl
pop
mov
and
lcall
xchg
pushf
push
ds
stos
lock
cmpsb
mov
test
and
jbe
or
sarb
nop
dec
repz
loop
or
in
jge
loop
mov
movsl
ljmp
mov
mov
push
lret
fnstcw
xchg
aad
faddl
stos
rclb
movsb
push
shll
or
and
jmp
into
loop
loopne
xor
loop
or
cwtl
movsl
and
pop
push
push
jle
mov
inc
push
int3
mov
fidivrs
and
sub
mov
ss
mov
pop
push
jmp
fs
lcall
cwtl
adc
repz
scas
sahf
cld
cmpsl
xchg
push
fisttpl
mov
out
jl
dec
sub
dec
addl
and
nop
fwait
jge
rorl
faddp
es
adc
inc
cmp
mov
pop
ljmp
sub
inc
xlat
xor
mov
aas
sahf
mov
sub
dec
iret
adcb
push
add
scas
sbb
sub
push
jge
push
or
push
cld
mov
shll
in
push
mov
adc
insl
or
jne
movsl
jp
adc
push
jbe
shrb
lock
push
into
movsb
lret
faddl
xor
jbe
jmp
es
inc
ret
xor
inc
insb
adc
cmp
mov
stos
inc
sbb
out
push
jecxz
insl
push
fsubrl
aad
jl
mov
movsb
lock
xchg
mov
inc
jl
outsl
sub
xor
mov
sahf
sbb
mov
ss
push
sbb
stc
cwtl
sub
push
addr16
daa
mov
mov
xlat
fidivrl
ret
mov
and
fildl
es
sub
jo
mov
cs
test
test
xchg
inc
sbb
push
lcall
stos
popa
into
sub
movsb
cmp
lock
xor
adc
into
shlb
xchg
dec
mov
push
jb
adc
dec
cs
or
js
push
enter
cld
lret
test
mov
ljmp
lret
mov
in
fnstsw
sub
or
jo
xor
add
sub
arpl
cmp
and
or
inc
dec
mov
lcall
jne
repnz
pop
cmp
std
pop
xchg
xchg
xor
cmp
hlt
imul
mov
sub
jns
popl
lds
or
push
mov
xchg
lret
sbbl
mov
lcall
daa
mov
icebp
daa
mov
inc
sub
mov
mov
xor
cltd
shl
hlt
xchg
sbb
pop
nop
push
dec
fbstp
pop
cmp
pop
mov
inc
repz
cmpsl
pop
push
mov
movsl
inc
jecxz
pop
popf
bswap
repz
jae
jo
and
xor
inc
scas
sub
in
popa
int3
test
into
xchg
loop
fstpl
sub
sti
sarb
inc
pop
notl
jg
scas
int
addr16
popa
repnz
lahf
in
adc
ficompl
out
aam
jo
pop
sub
inc
cmp
sbb
add
push
mov
frstor
outsl
mov
cmp
xchg
test
aad
sbbl
add
sbb
jnp
xchg
clc
push
ret
ss
stc
dec
popf
mov
mov
pusha
mov
mov
int
rcr
xor
xor
add
and
push
or
mov
jle
sub
in
pop
ficoms
mov
cli
lods
mov
mov
scas
cs
mov
mov
call
arpl
add
stos
push
mov
mov
outsl
out
adc
mov
dec
pusha
xchg
dec
daa
rclb
pusha
lds
sbb
xchg
les
cmp
add
xor
es
decb
stos
add
repz
or
dec
inc
xchg
in
adc
decl
sbb
stos
push
mov
add
insl
lds
leave
mov
test
popa
inc
pop
imul
cmpsb
push
pop
in
mov
cmpb
mov
dec
in
jmp
aaa
shlb
and
cmc
push
jne
addl
push
fwait
js
add
or
ja
out
mov
inc
xchg
fs
shl
lcall
mov
leave
add
mov
add
mov
rorl
push
adc
fldcw
sub
lods
loop
mov
imul
sbb
xor
inc
adc
lret
shrb
sub
sub
xchg
lds
sbb
jg
idivb
cltd
stos
movsbl
fucomip
in
or
in
lock
insl
in
mov
or
cmpsl
in
jb
pop
jno
jle
and
push
popa
loop
sub
cs
sbb
lcall
stos
lds
lret
inc
inc
and
push
out
xor
dec
leave
shll
adc
sahf
xor
push
jae
aad
pop
adc
hlt
and
movsb
mov
add
cmp
sub
rclw
dec
leave
add
hlt
ror
xchg
jno
adc
sbb
das
xchg
sbb
ffreep
add
mov
dec
jae
jl
mov
es
insb
pop
sub
cmp
fistpll
mov
int3
aaa
xor
jne
enter
mov
sbb
sub
fldcw
cmp
scas
dec
add
nop
pop
xchg
or
call
leave
aas
add
int3
shrb
into
or
xor
dec
mov
push
lock
mov
sbb
jp
les
cmc
loopne
push
and
leave
popf
jl
leave
arpl
cmp
sbb
mov
fwait
push
cld
xchg
sar
jae
shrl
lret
adc
scas
fimull
ret
leave
movsb
push
xlat
lds
sub
push
adc
ds
dec
shrl
and
jo
xlat
les
jg
nop
adc
mov
nop
je
lods
xchg
insb
shll
dec
in
push
and
jl
adc
mov
scas
dec
testb
andb
xor
mov
testl
fsubl
jl
bound
nop
xor
pop
mov
and
inc
out
jbe
jne
or
mov
mov
fisubl
push
dec
inc
shrl
lods
inc
fisubrl
mov
jl
sub
cltd
mov
in
clc
sub
or
roll
shrb
pop
pop
jns
push
test
lock
adc
mov
or
xchg
lock
cmpsb
pop
das
shlb
test
sub
lcall
test
clc
or
shlb
xor
sarb
leave
lret
push
jecxz
cs
add
mov
test
out
inc
pop
test
sarl
out
jg
jle
nop
icebp
cmpsb
cmpsb
sub
in
jle
je
enter
fucom
loopne
xorl
clc
fsubr
push
pop
mov
test
data16
adc
mov
sbb
stos
test
sbb
sarl
inc
sub
and
sub
adc
cmp
fstl
dec
fidivl
aas
pop
pop
ja
adc
xchg
hlt
enter
movsb
inc
out
lods
mov
dec
xor
pushf
push
stc
lods
pop
xchg
fstps
icebp
nop
mov
repz
imul
decl
jle
je
cwtl
xchg
adc
push
push
aaa
sahf
subl
mov
or
jnp
xor
dec
jnp
lea
cwtl
mov
xchg
or
push
mov
xchg
pusha
mov
cmp
das
outsl
dec
cmp
sbb
adc
les
das
xor
xchg
dec
jmp
cmp
imul
xor
lods
jecxz
outsl
loopne
sub
inc
sahf
sub
lret
mov
cmp
lcall
xchg
mov
mov
dec
push
inc
movsb
dec
adc
cltd
les
dec
popa
jb
mov
rorb
ret
in
clc
pushf
push
std
roll
nop
dec
aam
pushf
je
ret
sbb
mov
mov
mov
jge
adc
test
repz
inc
movsl
adc
es
jae
shlb
adc
and
jo
inc
lock
loopne
nop
xor
loopne
lock
shlb
mov
xor
rolb
loopne
nop
xor
loopne
lock
shlb
mov
xor
rolb
in
nop
xor
loope
icebp
inc
shll
adc
loopne
shlb
ljmp
dec
out
fildll
loop
shrl
mov
pop
dec
clc
xlat
cmp
add
add
add
add
loope
les
inc
add
test
mov
add
add
add
add
add
add
dec
add
add
add
scas
add
add
add
add
add
add
add
testb
add
adc
xchg
add
add
add
adc
aaa
add
add
add
add
add
add
sbb
outsb
add
add
add
jl
call
add
add
add
add
add
nop
add
add
mov
add
add
add
add
add
add
add
add
add
int3
add
add
cmpsb
add
add
push
inc
add
add
add
add
add
add
scas
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
scas
add
movsl
add
arpl
add
imul
sub
imul
add
add
stos
push
fldl
dec
add
add
xchg
add
add
add
add
add
add
add
add
into
add
add
add
imul
sub
add
add
add
push
add
xor
fldl
popl
pop
add
add
add
cmp
or
std
add
add
add
add
add
add
push
add
add
jmp
cwtl
add
add
add
adc
dec
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
std
add
add
add
add
add
add
xor
sub
or
pop
add
or
add
add
add
add
add
add
add
add
add
add
verr
add
fadds
adc
or
call
add
add
add
add
add
add
adc
xor
add
add
jno
fldl
jle
movb
add
add
add
sbb
cwtl
add
add
testb
add
add
xlat
add
add
add
add
add
add
add
add
cltd
add
dec
add
add
cmpsb
add
ds
add
addl
dec
add
add
xor
dec
add
xor
add
add
add
add
add
add
and
rolb
lods
add
adc
testb
add
add
add
add
jb
dec
add
add
add
adc
fisttps
repz
dec
add
add
add
add
add
add
sub
add
add
add
lods
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
ret
add
add
add
add
cmp
xor
xchg
add
add
adc
cmp
pop
bound
adc
xor
dec
push
repnz
push
push
repz
test
and
in
xchg
xor
mov
pop
mov
jns
ss
in
ret
pop
jno
testb
inc
push
mov
mov
mov
lea
add
shll
jp
inc
in
mov
inc
stos
push
add
pop
cmp
pop
into
pop
pop
adcb
jns
push
lds
dec
ss
mov
sub
cmc
push
leave
ficompl
mov
inc
clc
fidivs
sbb
sbb
sub
ds
fwait
sbb
lret
push
out
push
xchg
shrl
nop
mov
xor
xor
in
ret
fldcw
std
push
mov
mov
dec
xchg
fnstcw
aad
imul
adc
into
loopne
in
cmp
fistps
loope
fdiv
mov
mov
xor
or
dec
leave
cmc
hlt
push
arpl
sub
and
in
int3
adc
pop
ret
sti
pop
out
js
jno
pop
pop
mov
cltd
sbb
pop
pop
in
cmp
mov
sub
loope
data16
lahf
sbb
loope
xchg
sbb
mov
dec
add
dec
cmc
pop
xor
into
dec
push
in
iret
push
repz
scas
sbb
popa
insb
int
inc
and
aad
pop
push
data16
mov
cmp
push
mov
in
mov
sub
mov
push
add
add
inc
inc
fwait
sbb
adc
jmp
mov
inc
loopne
mov
lahf
sarl
sbb
inc
jmp
mov
xchg
and
insb
enter
test
loopne
or
push
mov
mov
int
adc
int3
loop
loopne
rdtsc
stos
cmpsl
adcl
ss
outsb
cmp
lret
jne
mov
inc
jg
or
xchg
sub
lret
jge
dec
mov
push
les
rolb
imul
scas
inc
aad
inc
mov
stos
shlb
adc
or
xor
daa
push
jnp
lahf
out
out
or
mov
jp
add
cmp
lock
pop
cmp
add
cld
test
rclb
in
push
pop
ja
lock
mov
push
pop
and
xor
aam
cmpxchg
sbb
mov
out
addr16
fwait
aaa
push
out
xchg
cld
xor
bound
jmp
sbb
push
enter
stos
mov
test
jb
jbe
adc
pop
xchg
fldenv
daa
lahf
ds
lock
insb
dec
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
