call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
test
push
pop
into
lret
fisttpll
pop
loope
cmp
outsb
ljmp
outsb
test
lcall
out
pop
into
dec
mov
sbb
lret
mov
ds
stos
push
fimull
mov
call
dec
cmpsl
push
mov
xchg
cltd
adc
mov
test
mov
insl
out
mov
add
das
mov
mov
test
xchg
push
xchg
sbb
daa
push
filds
aam
icebp
arpl
add
idivb
push
outsb
pop
inc
dec
mov
xchg
mov
cmpb
pop
jae
out
outsl
xchg
inc
or
lock
outsl
push
push
mov
rcrl
lcall
inc
repnz
cmp
cmc
dec
add
adc
mov
jb
fstps
outsl
adc
out
push
outsb
outsl
mov
sahf
or
xchg
cli
dec
sbb
das
stos
xchg
mov
jne
mov
inc
jo
jge
test
cmp
dec
sar
mov
push
push
jp,pt
lcall
mov
sahf
rclb
inc
lret
es
ss
push
lcall
mov
dec
ret
inc
pushf
jae
outsl
or
mov
jnp
imul
aas
out
sub
push
rcrb
je
data16
outsb
mov
pop
ljmp
xchg
sub
sub
pop
scas
sub
cli
outsb
ljmp
cs
push
lcall
ficomps
dec
mov
sbb
ljmp
cs
push
lcall
xchg
cmpsb
xchg
mov
inc
push
cmp
pusha
sbb
mov
out
sahf
outsl
pushf
fsubr
frstor
call
lret
jle
or
jl
dec
data16
cmp
mov
push
mov
sub
add
jge
fldenv
rolb
xchg
cs
iret
gs
enter
pop
and
ret
lcall
xchg
jg
push
aaa
add
das
scas
aad
add
sbb
js
loop
out
push
xor
in
mov
pop
aad
sbb
xchg
and
stc
sti
mov
call
pop
in
bound
cwtl
mov
scas
cs
dec
dec
mov
dec
xor
cltd
or
adc
clc
pop
movsb
xchg
aaa
xchg
negb
jno
nop
mov
imulb
lods
pushl
in
stc
loope
cmpsb
out
add
aas
test
add
dec
jle
pop
mov
add
xchg
je
xchg
std
sbb
sbbb
int
je
cmpsl
mov
fnstenv
and
das
push
inc
jmp
cltd
push
jl
mov
pop
dec
clc
push
insb
outsl
inc
test
or
lds
aaa
mov
shlb
mov
outsb
scas
popa
mov
xor
aad
ja
outsb
or
mov
adc
mov
daa
adc
sub
or
dec
push
jns
xor
rcrb
and
loopne
mov
xchg
in
cmpsb
ss
stos
mov
mov
test
fsubs
cmc
sbb
repz
insl
adc
push
and
ret
pushf
fsubrl
ljmp
xchg
xor
or
ljmp
xor
pop
int
iret
iret
push
outsl
mov
gs
fwait
insl
mov
xchg
xor
insl
sub
cmp
stc
adc
aas
inc
fcompl
inc
in
cmp
sub
sub
movsb
mov
lret
fstpl
pop
adc
adc
and
sbb
push
aad
add
push
in
ror
ret
dec
mov
push
jmp
int
push
adc
out
stos
sbb
xchg
or
dec
aaa
popf
andps
sbb
out
or
xchg
jno
in
jb
mov
cmp
xchg
cmp
fnstenv
in
pop
inc
inc
xchg
rorb
adc
sbb
adc
es
sti
or
adc
repnz
and
retw
andl
gs
or
mov
fcmovb
fldl
filds
push
sbbl
jmp
data16
cmp
and
mov
sbb
mov
shrl
adc
mov
mov
mov
pop
in
pop
aaa
push
out
mull
push
adc
sub
es
enter
stos
insl
lds
cmpsb
jmp
and
cmp
or
adc
pop
int3
jl
mov
ljmp
cs
je
push
push
fwait
repnz
lret
jb
and
data16
call
mov
mov
sub
mov
mov
repnz
inc
cmp
pop
sub
push
mov
sti
mov
and
stos
mov
xchg
jmp
shld
push
pop
lcall
call
and
or
cld
push
mov
adc
mov
inc
cmc
lcall
xchg
scas
inc
ret
cmp
add
pop
je
pop
daa
jae
das
xchg
stc
inc
je
cmpb
mov
xchg
add
aad
mov
cld
inc
rcr
jp
or
add
dec
daa
loope
popf
pop
sti
addl
add
in
mov
je
inc
cmp
cmp
nop
scas
push
popf
pop
or
dec
cmp
add
jl
and
jecxz
hlt
imul
enter
dec
mov
ljmp
arpl
mov
jns
add
out
idivb
push
inc
adc
fnstsw
mov
pusha
pop
jg
rorb
and
sti
adc
inc
stos
mov
outsb
pop
push
push
lcall
jb
push
repz
push
dec
xor
or
sbb
jae
idiv
mov
mov
ret
sub
or
or
in
and
pop
mov
mov
insb
xchg
aaa
dec
add
lods
jno
in
mov
je
jb
cltd
aas
shll
loope
sub
out
fildl
idivl
ljmp
decl
pop
and
imul
xor
mov
leave
les
adc
sbb
cmp
xchg
pusha
mov
popf
ss
and
xor
je
test
dec
in
fstp
pop
cltd
lock
mov
mov
sarl
jecxz
gs
push
push
je
inc
lods
cmp
addb
fists
aam
sbb
or
cmp
inc
pop
shlb
adcl
jecxz
iret
inc
adc
shrl
sub
lcall
arpl
out
push
dec
pusha
dec
icebp
addl
scas
dec
aaa
mov
push
add
pop
sarl
sbb
fisttpll
pop
inc
mov
std
add
cltd
mov
push
fmull
fisubrl
adc
xor
jbe
xor
mov
outsl
or
scas
pop
ret
push
lds
popa
jne
mov
fisubrl
jns
jae
frstor
out
out
or
cmc
inc
insl
int
cmp
rcl
call
lahf
ret
jp
sets
sbb
push
pop
add
cmp
push
sub
xlat
jmp
and
xchg
sbb
dec
adc
fstl
adc
or
pop
xchg
ljmp
jle
insl
pop
and
dec
fwait
xor
pop
or
imul
test
pop
pop
fidivs
xor
mov
mov
mov
je
lcall
jb
jbe
jnp
addr16
jp
xchg
mov
mull
aad
cmp
push
cli
sar
xor
adc
hlt
sbb
aas
mov
dec
dec
fcmovnb
sbb
dec
mov
test
or
push
dec
cmp
cmc
mov
cmp
pop
pop
lods
push
pop
cmp
cmp
push
in
or
mov
jecxz
repz
ljmp
scas
fs
lods
or
hlt
imull
xchg
inc
sbb
aad
pop
daa
lret
mov
ret
sbb
dec
xchg
dec
fsub
fs
jns
mov
jne
xor
pop
xor
xor
jae
mov
pusha
adc
sbb
xchg
cmovb
jbe
and
ret
aam
out
mov
mov
insb
enter
les
mov
mov
inc
bound
out
pop
add
popf
mov
mov
in
push
or
xor
jecxz
cmp
adc
sete
adc
out
mov
pop
cmp
dec
mov
and
hlt
add
outsb
push
or
ljmp
cmc
mov
push
xor
dec
fisubrl
std
mov
stos
push
mov
inc
jbe
das
push
xlat
sub
std
mov
aam
mov
outsb
out
data16
dec
mov
test
mov
mov
sub
dec
or
or
dec
bound
cmp
dec
bound
or
rorb
inc
mov
scas
das
push
rcl
cld
jle
imul
sahf
xor
loopne
lahf
das
ljmp
clc
sbb
je
push
push
stos
je
icebp
mov
sbb
ljmp
pop
pop
dec
sahf
enter
ljmp
sbb
add
sar
jl
aad
js
or
jb
or
into
das
arpl
sub
pop
pusha
addr16
adc
jnp
nop
inc
sub
rorl
pop
sbb
and
jb
mov
test
xchg
stc
in
pop
loopne
xor
cltd
loopne
inc
jne
inc
mov
jle
add
aad
sbb
dec
dec
or
loop
aam
mov
outsl
push
fnstsw
push
mov
mov
sub
pusha
mov
xor
out
mov
data16
fadds
leave
lods
les
lock
popf
ja
dec
lret
xlat
adc
inc
cmp
les
xlat
add
dec
pop
cld
call
call
loopne
xchg
xchg
imul
fcoml
in
sbb
loopne
mov
or
push
dec
mov
mov
test
ljmp
gs
mov
hlt
lret
sub
xchg
inc
push
int
mov
and
jle
sbb
rolb
jno
inc
mov
pop
cmp
es
lret
dec
cmpsl
adc
pop
lcall
add
cmp
fs
xor
imul
daa
pop
dec
fwait
js
ret
sti
movsb
fwait
mov
daa
add
sub
jno
clc
scas
dec
dec
call
mov
push
ja
test
leave
jns
jne
in
adc
mov
out
mov
in
mov
adc
mov
xor
and
or
mov
jecxz
ror
call
xchg
pop
outsl
pop
and
jo
adc
mov
xlat
inc
imulb
pop
sub
mov
inc
sub
sbb
add
pushf
inc
imul
push
sbb
jae
pop
jmp
repz
mov
mov
xor
lret
out
or
enter
int3
xchg
in
adc
mov
cmp
mov
cmc
cwtl
lds
pop
cmp
rorl
je
mov
inc
lcall
lea
pop
sarb
xor
addr16
xor
jp
xchg
outsl
scas
int
lods
out
loop
push
cmp
imul
mov
sahf
stos
push
stc
jns,pt
cmp
clc
cs
cmp
and
int3
push
outsb
fidivl
mov
scas
xchg
jle
jnp
jo
sti
cmpsb
mull
inc
mov
seto
sbb
pop
dec
out
pop
dec
in
or
push
jecxz
mov
dec
movsb
loopne
jnp
leave
in
mov
mov
gs
adc
test
pop
xchg
inc
dec
dec
pop
call
sbb
jns
or
test
push
stc
push
clc
cmpl
cmp
fcompl
sbb
sarb
stos
clc
sbb
repz
jno
lods
pushf
fcoml
in
mov
cmp
ljmp
hlt
lods
sub
inc
jg
faddl
lret
cmpb
lret
in
movsb
mov
inc
pop
repnz
pop
pop
push
test
dec
and
stos
sbb
jo
js
bound
inc
add
pusha
pop
bound
pop
fcmovnbe
pushl
xchg
xor
add
adcb
popf
push
pushf
sub
push
test
pop
cmp
gs
gs
imul
inc
or
lds
imul
sti
outsb
fincstp
loop
jle
gs
mov
mov
add
addr16
xchg
push
mov
clc
lret
pop
into
aad
pop
in
and
push
jl
shr
aas
loop
push
cmp
loop
addr16
inc
or
sahf
adc
jg
sub
test
push
pop
leave
dec
and
pop
sub
stc
mov
daa
or
repz
loopne
add
push
ret
or
in
arpl
movsb
ret
aam
jbe
inc
jns
xlat
data16
xchg
in
es
jg
mov
xor
enter
cs
sbb
aaa
loopne
and
lcall
or
inc
sahf
xor
jb
and
lea
sub
xor
cli
in
outsl
std
jmp
fcoml
gs
mov
mov
xchg
or
int
inc
js
push
mov
ret
or
nop
cs
mov
sub
movsb
sub
mov
sahf
jno
inc
int
sub
popf
jg
lods
mov
pop
stc
repz
and
jbe
insb
test
call
ret
dec
out
stos
ficompl
mov
lds
xor
shl
pop
push
dec
xor
push
jno
fists
adc
mov
pop
mov
ret
aaa
int3
outsl
add
and
xor
xorl
xchg
pop
ds
mov
les
cltd
cld
sbb
ljmp
lcall
dec
mov
and
pop
out
sub
cmp
cmp
repz
test
jge
cld
mov
std
adc
cmpsb
arpl
inc
daa
ficoms
lea
mov
les
and
jno
adc
mov
imul
adc
mov
into
sbb
repz
xchg
xchg
jo
hlt
xchg
aas
sub
in
mov
pop
mov
stos
push
jno
stc
add
int3
lret
filds
enter
mov
fwait
nop
sub
dec
xchg
mov
dec
add
daa
pop
jp
fldt
fiadds
imul
dec
ss
jnp
or
roll
xchg
sbb
cmc
and
mov
stos
sti
jnp
dec
int3
test
adc
sbb
mov
and
fs
data16
xor
or
loop
in
push
dec
rclb
lret
arpl
outsl
std
imul
sbb
outsb
inc
jecxz
jno
and
repz
test
popf
fidivrs
repnz
mov
dec
mov
jne
pop
mov
data16
cltd
dec
sbb
in
mov
addr16
ja
mov
sub
xchg
dec
xchg
gs
push
jne
jp
xor
loope
xchg
adc
outsl
leave
loopne
jmp
repz
fwait
jb
adc
popa
or
inc
clc
mov
sub
cmpsb
mov
add
mov
fldenv
xor
xchg
push
fmulp
sbb
add
out
enter
mov
es
push
das
fst
outsl
js
lods
fdiv
mov
popa
cmp
sbb
sbb
mov
mov
mov
gs
fwait
jb
add
pop
movsl
cwtl
jge
fnstsw
xchg
jmp
popf
sub
xchg
mov
jmp
inc
push
adc
fldt
arpl
sbb
inc
mov
bound
jns
popf
gs
lea
gs
addr16
pop
add
in
cmp
jbe
out
ss
or
cmp
test
es
fidivrl
sbb
xor
stos
fldl
jo
fwait
neg
cmp
adc
push
mov
sub
jae
out
xor
loop
cmp
loope
mov
push
pop
cs
jns
js
ja
jg
jnp
push
ret
cmp
adcb
scas
stos
mov
jae
pop
adc
mov
iret
repnz
sub
and
add
cmp
imul
cmp
adc
or
jb
and
jae
inc
mov
test
pusha
lock
mov
into
sbb
popa
outsl
push
testl
cs
cmp
mov
jle
stc
sahf
sub
dec
add
in
push
pop
mov
lcall
jp
cmc
mov
pop
addr16
add
sub
popf
push
test
in
lret
jge
cli
xchg
ds
cmp
rolb
fcmove
xor
test
inc
popa
jp
test
jle
std
jb
fs
push
data16
scas
jb
iret
mov
xor
cmp
mov
popa
bnd
mov
mov
sti
sub
shrl
loopne
jns
int3
inc
lods
xchg
xchg
dec
loop
sahf
sub
fcomps
imul
out
add
loopne
mov
pop
jo
mov
jp
movsw
fbld
sahf
sub
adc
sub
or
sub
repz
mov
out
dec
rcrl
jecxz
imul
mov
inc
in
mov
cmp
adc
addr16
jp
jnp
dec
sbb
or
pop
inc
out
and
inc
xchg
xor
loopne
xchg
pop
inc
popf
inc
cld
leave
fsubs
sbb
mov
mov
xchg
and
test
fcmovbe
sbb
sbb
pop
xlat
xchg
xchg
ss
or
nop
pop
stos
xor
pop
stos
jno
cmpsl
cld
out
mov
rolb
stc
jge
mov
dec
inc
imul
jnp
lcall
xchg
inc
jge
push
loope
sbb
ja
sub
jno
test
adc
sub
lcall
sbb
js
cli
or
adc
dec
lods
push
das
push
push
cmp
jbe
outsb
sub
cmp
pop
aad
mov
cmp
jnp
push
daa
inc
xlat
fxch
scas
jae
mov
mov
inc
lcall
mov
push
aas
jg
popa
xor
dec
jbe
scas
mov
jb
outsb
pop
loop
inc
push
cmp
outsl
jo
xor
imul
repnz
pusha
mov
sub
push
pop
inc
push
xchg
subb
mov
dec
mov
mov
sbb
test
pop
jbe
or
and
lcall
and
push
jge
les
testb
inc
jge
pop
lahf
test
and
outsl
cmp
rcrl
pop
adc
xor
sbb
sahf
push
loope
sub
stc
mov
cmp
mov
divb
out
loopne
xchg
add
lds
mov
ret
js
in
std
jb
shrb
in
cld
repz
sub
adc
sbb
pop
pop
stos
jbe
dec
xchg
ret
ds
lods
into
loope
imul
inc
lods
add
cmp
int3
mov
adc
out
mov
shrb
adc
push
inc
lea
jecxz
call
enter
pop
adc
lock
das
clc
xor
lods
mov
cmpb
adc
jae
push
pop
pop
xchg
jne
popf
cmp
cmp
mov
pop
lds
scas
les
clc
cmpsl
mov
jbe
shrl
gs
push
ret
push
adc
cmp
or
xchg
daa
xor
mov
xor
mov
in
lret
sub
mov
in
icebp
jmp
sub
ss
cmp
and
rclb
addr16
cmp
in
fcompl
sbb
sarl
push
std
adc
mov
jecxz
clc
fstps
shl
repz
popa
sbb
gs
lea
xor
arpl
sbb
jmp
fbld
adc
js
pop
mov
and
jl
popf
or
or
in
jae
sbb
mov
mov
mov
ljmp
inc
mov
clc
jo
lds
aam
cmp
adc
cltd
pop
sbb
scas
and
fcomps
xchg
icebp
insb
mov
test
mov
ret
inc
iret
inc
mov
clc
fsubrs
cmp
lds
in
sbb
pop
inc
mov
mov
movsb
ja
addr16
outsl
sahf
test
enter
jmp
mov
ret
mov
push
sbb
add
mov
sbb
add
add
bound
movsb
cmp
jbe
mov
xchg
cvttps2pi
shr
sbbb
pushl
pop
fwait
pop
xorb
adc
rol
inc
loope
jl
xchg
in
ret
iret
loope
mov
pop
and
nop
lcall
and
out
lock
push
push
sbb
enter
mov
lods
cli
test
pop
aas
inc
dec
pop
stos
push
jne
sub
ljmp
and
outsb
mov
lret
cmc
xor
mov
loopne
gs
stc
in
fisttps
data16
fucomp
push
inc
fdiv
shrl
ret
call
mov
insl
dec
popf
lret
movsb
cmp
xchg
sbb
cmpsl
push
sub
xlat
outsb
repz
leave
pop
adc
je
imul
inc
loopne
dec
das
fbstp
cmp
adc
ficoml
popf
adc
push
pop
jbe
lods
or
loope
cmp
aad
dec
enter
add
cmp
xchg
push
popa
jmp
jns
add
and
cmp
gs
movsl
jle
cmp
test
adc
fistl
or
pop
mov
outsb
out
or
adc
lahf
or
push
fwait
jbe
arpl
mov
cmp
xlat
es
dec
in
or
pop
cs
mov
negb
scas
loop
push
pop
sub
sbbl
pushl
sub
loop
dec
lcall
sub
xchg
xor
push
mov
pop
stos
inc
out
sbb
popa
shrb
out
cmp
jnp
orl
das
bound
mov
cmp
pop
lods
cmpsl
imul
and
fmull
push
movsb
lea
ret
xor
xor
in
jg
scas
xchg
leave
sub
aam
jnp
cmc
pop
fs
test
push
inc
ljmp
dec
stos
fnsave
cwtl
xchg
jb
in
cmp
cltd
or
mov
mov
fsubrl
ss
dec
mov
sbb
ljmp
cs
push
lcall
ficomps
dec
mov
sbb
ljmp
cs
push
lcall
fisubs
into
dec
mov
sbb
ljmp
sub
lret
push
pop
into
dec
mov
lcall
hlt
fimull
dec
xor
jne
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
or
cmp
xor
dec
adc
lea
mov
in
in
std
std
add
sub
pop
pop
insl
insl
jge
fisttpll
mov
fucomp
scas
std
std
xlat
or
sti
cmp
inc
insl
test
and
fdivrl
lcall
inc
imul
mov
mov
clc
cmp
or
aas
add
popf
adc
into
mov
cmp
push
lods
push
xor
dec
xor
lods
pop
push
or
push
mov
sub
bound
insl
inc
inc
xor
push
sbb
dec
sbb
push
loope
cmp
insb
loop
sbbb
inc
in
inc
cmpsl
fbld
clc
adc
jo
in
loopne
shrb
fimuls
js
decb
int
push
push
mov
and
fwait
sbb
sarb
shr
sbb
lods
mov
fstpl
test
in
cld
ds
push
cmp
insl
insl
lds
lea
popf
jne
mov
fucomp
in
cltd
xchg
jg
imul
and
pop
jle
sbb
in
call
fdivr
movsb
lods
mov
cltd
out
mov
pop
push
testb
cmp
add
push
jge
cmc
fsubr
enter
mov
mov
pop
inc
jl
or
pop
insl
insl
jge
lea
mov
fucomp
in
std
std
or
sub
pop
pop
insl
insl
jge
lea
mov
fucomp
in
std
std
or
lahf
bound
xorl
mov
mov
js
ds
fadds
mov
xchg
pop
orl
sbb
or
xor
jle
cli
testl
xor
or
cmpsl
mov
in
ret
pop
push
inc
test
add
dec
loop
xor
rcl
mov
stos
mov
stos
mov
clc
pusha
repnz
aaa
idivl
cmp
pop
call
inc
clc
lods
daa
ds
lret
pop
mov
push
push
rclb
push
sub
pop
mov
pop
jnp
or
mov
jg
inc
sub
xor
pop
sbb
jne
inc
imul
cwtl
sub
pop
xchg
dec
test
inc
dec
gs
dec
cmpsb
inc
out
ret
fwait
and
popa
addl
test
add
xchg
dec
sbb
arpl
inc
and
and
jge
dec
sahf
mov
into
push
jp
fisubrl
das
cltd
fsubrs
stos
xchg
int
out
lock
cmp
push
adc
push
mov
cmp
xchg
add
and
addl
jge
cld
cmp
mov
aam
fnsave
sub
das
mov
lds
sbb
adc
mov
popa
aam
orb
fcomps
out
stos
mov
xor
in
pop
pop
jmp
xchg
insb
test
fstpl
pop
ja
pop
lret
mov
pop
sbb
lret
shlb
or
sbb
loop
jge
inc
mov
cltd
mov
clc
in
insb
mov
push
outsl
xchg
data16
cld
push
inc
jmp
icebp
xlat
inc
push
xor
movsl
and
adc
cltd
cmp
stc
mov
cmp
aaa
fistl
insl
lahf
xchg
push
push
pop
int
jl
lcall
push
jo,pt
mov
mov
ficomps
mov
mov
loop
icebp
pop
daa
cmpsb
mov
mov
xchg
jge
or
int3
xchg
in
dec
in
mov
in
lahf
push
adc
cmp
cmp
sarl
sahf
lods
out
sbbl
sarl
cld
mov
mov
cwtl
dec
fucom
mov
insb
cmp
pop
pop
push
push
push
xlat
mov
cs
ja
cmpsl
dec
imul
jb
sub
shr
mov
adc
fbstp
test
sar
je
cmpsl
xchg
add
mov
or
jge
xor
ss
shlb
pop
loop
jl
fadds
lds
test
cmp
jecxz
and
idivl
cmp
enter
xchg
and
cld
leave
sahf
add
xor
sar
cli
aad
ret
or
rcll
and
shr
outsb
test
or
shlb
add
fwait
sbbb
test
and
sbb
add
pop
mov
cmc
push
and
pop
orb
gs
roll
adc
inc
scas
movsb
subb
mov
jg
and
sub
mov
add
jle
xchg
iret
mov
adc
adc
fcmovbe
jbe
push
out
jg
xor
cmpsb
dec
jge
or
xchg
aas
std
lcall
mov
pushf
add
stc
out
jmp
in
mov
mov
and
fisttpl
sbb
jl
ds
push
int
cmp
mov
jbe
xchg
cli
mov
lahf
fwait
add
sbbb
popa
stc
push
bound
inc
je
push
mov
mov
jmp
sbb
push
cld
push
adc
adc
fidivl
sub
sub
mov
ds
push
pushf
push
sbb
mov
xchg
xor
call
push
cli
push
sarl
jae
dec
jp
push
push
int
ret
jg
sbb
movsb
add
lods
xlat
stc
sbb
dec
lahf
dec
fdivs
stos
mov
mov
andl
test
lds
jbe
mov
rolb
xchg
pop
mov
jmp
push
out
push
stos
sahf
pop
loope
loop
dec
nop
pop
xchg
addr16
push
dec
cmc
int
loope
xchg
or
lods
aas
stos
add
sbb
xchg
neg
jge
adc
cwtl
or
rol
sub
mov
mov
std
mov
rcrl
neg
hlt
lds
pop
in
les
shll
cmp
jns
xor
pop
pop
shr
outsb
ss
dec
stos
je
push
sub
addr16
xor
xor
mov
inc
pop
cltd
or
out
pop
gs
sbb
cmp
fcomip
mov
das
icebp
cmp
int
inc
test
cmp
mov
cltd
pop
adc
push
mov
jle
repz
cmp
or
push
pop
or
jle
jo
fdivl
cli
xchg
das
in
fdivrp
push
hlt
push
or
js
daa
inc
lret
cmp
push
mov
lea
arpl
and
and
xchg
and
aaa
mov
rorl
push
inc
lahf
xchg
cs
orb
sar
popl
jbe
add
push
scas
movzwl
mov
imul
ljmp
and
aaa
inc
pop
repz
ret
pop
push
cwtl
mov
sub
leave
jns
sbb
sbb
lods
cmp
aam
cwtl
mov
call
and
jle
scas
adc
out
cwtl
sbb
sub
inc
xor
xchg
cmp
fcompl
idiv
push
in
xor
inc
pop
pusha
push
mov
mov
mov
add
pop
sti
in
test
pop
ds
stos
ds
cli
mov
inc
lds
mov
cwtl
pop
into
or
cltd
mov
cli
ja
push
jmp
iret
popa
aaa
jecxz
je
stos
sbb
out
push
and
ds
sbb
mov
ret
fiadds
mov
mov
dec
jmp
xchg
xchg
repnz
pop
cmp
inc
mov
sub
mov
mov
cli
inc
push
jecxz
stos
lret
pop
mov
pop
sti
add
dec
fs
cmp
fdivrs
push
loopne
js
in
dec
sub
or
jg
cmp
lret
mov
xchg
rcl
and
dec
lret
add
mov
or
fiaddl
pop
jle
test
dec
sub
cmp
xor
ja
out
adcl
or
jg
pop
push
pop
sub
lods
test
out
push
aas
fldcw
and
mov
inc
mov
fstpt
sar
stos
gs
ds
or
dec
bound
out
movb
pop
pop
stos
fldln2
sbb
push
inc
fdivrp
dec
dec
ret
arpl
dec
sahf
sub
xchg
pop
dec
insl
sbbl
in
adc
cmpsl
dec
mov
shlb
dec
dec
cmp
repnz
sahf
aaa
and
mov
daa
sub
push
pop
pop
pop
xor
push
and
cltd
sub
mov
and
push
pop
jno
outsl
fists
cli
ficomps
mov
adc
int3
decb
push
pop
fldcw
mov
sub
cwtl
mov
leave
addr16
dec
scas
or
lock
mov
pop
lods
cli
xchg
lods
rorl
mov
mov
aaa
ljmp
add
adc
mov
dec
dec
movsl
bound
add
cmp
cltd
mov
mov
ss
in
je
xor
daa
fistl
add
aas
add
push
ja
mov
out
je
out
rol
mov
lret
repz
push
xor
movsl
les
hlt
popa
stc
pop
or
aam
dec
outsl
push
and
and
add
aam
test
out
int
sbb
aas
arpl
out
int3
or
shrl
lea
add
inc
ja
cmp
test
push
xor
inc
or
movl
sbb
mov
sbbb
dec
jae
mov
jge
or
add
sbb
in
push
inc
out
mov
outsl
lods
jo
sub
mov
push
in
or
sbb
rclb
add
adc
xchg
pushl
ja
popa
xlat
out
xchg
push
adcl
mov
mov
pop
int3
jns
xchg
push
cmp
dec
inc
outsb
xchg
cmp
xchg
jbe
flds
cmp
jne
ret
lcall
sub
movsl
negl
inc
inc
sti
inc
push
rcll
sub
push
xchg
scas
push
shlb
test
pop
arpl
je
mov
and
andb
in
dec
mov
aad
loop
mov
jns
sbb
aaa
dec
adc
mov
sub
inc
and
jbe
out
aad
add
sti
insb
inc
pop
les
test
aas
setp
or
roll
mov
sub
xchg
std
insb
mov
jg
xor
daa
leave
mov
pop
movsl
or
xor
mov
js
dec
xchg
mov
jae
test
jbe
frstor
sbb
fbld
push
dec
fs
inc
fsts
jns
aam
adc
fmull
dec
nop
mov
mov
faddl
das
and
xchg
out
daa
xor
push
cmp
or
in
add
push
pop
pop
xchg
in
mov
imul
xchg
xorb
mov
nop
dec
cli
mov
rcrb
push
sub
or
ljmp
inc
inc
outsb
cmp
jbe
in
mov
push
inc
rcrl
xlat
stos
ljmp
sub
sub
out
clc
inc
fisubs
aaa
jl
cmp
mov
fimull
out
repnz
mov
into
xchg
or
xchg
mov
xchg
adc
jecxz
jp
mov
repz
enter
add
mov
xchg
dec
js
in
stos
cmp
or
lods
bound
andl
mov
std
mov
ja
adc
mov
sahf
lods
jb
push
sbb
test
mov
lea
dec
cmp
add
jno
cmp
outsl
cmp
pop
adc
fnsetpm(287
sbb
push
repz
loop
lret
mov
or
sarb
js
dec
adc
mov
mov
icebp
sub
daa
add
aaa
mov
cmp
xchg
pop
jne
add
hlt
mov
out
cld
ljmp
xchg
stos
insl
cmp
and
ret
test
jnp
pop
xor
mov
ljmp
jno
in
ljmp
dec
dec
jns
psrad
out
int
dec
cmpsb
push
cs
adc
les
jne
cmp
sahf
fsubrs
insb
mov
in
ja
inc
lret
fmull
es
mov
inc
mov
popa
fadds
push
das
cmp
pop
mov
add
insl
fcoml
push
or
or
add
push
push
decb
arpl
outsl
jne
add
mov
mov
jae
cltd
js
mov
xlat
loope
scas
filds
outsb
ret
mov
sbb
fidivrl
mov
shll
jp
and
push
loopne
cs
movntps
scas
out
mov
pop
sbb
repnz
cmc
fwait
mov
push
roll
mov
adc
out
or
loope
js
add
sub
dec
scas
xchg
les
std
jns
movsb
or
das
andl
enter
mov
dec
inc
les
or
leave
outsb
dec
mov
ret
fcomps
xor
out
pop
sub
push
inc
add
addl
cmp
pop
dec
cmc
sbb
adc
cmp
lods
add
xchg
add
push
xor
stc
xchg
and
cltd
add
sub
popa
out
jecxz
fimull
pop
test
arpl
add
call
xor
cmpb
mov
into
fcomps
xchg
add
push
mov
in
cmpsl
ja
fadd
sub
push
pop
or
or
mov
fs
mov
jns
pop
mov
sbbl
sub
das
js
dec
mov
add
or
adc
or
test
pop
addb
dec
and
stos
lock
inc
repnz
dec
repnz
out
lahf
push
mov
pop
adc
mov
fs
bound
in
add
cli
sub
fs
mov
notl
sbb
mov
enter
shlb
jbe
mov
cmpsb
fcoml
add
rolb
pop
cs
or
sbb
insb
xor
cmp
mov
outsl
rolb
fldenv
fcoml
cmp
into
sub
and
xor
mov
jg
xchg
sub
add
imul
cld
ret
push
sub
sub
aad
cmp
xchg
dec
or
adc
in
lcall
xchg
mov
xchg
jb
cmp
xchg
das
insl
pop
vmovntps
into
jmp
xchg
orb
fwait
test
mov
enter
sarl
sbb
cltd
xchg
or
mov
jl
mov
lcall
test
mov
push
stc
fisttpl
add
sahf
cmp
ss
movsb
xor
and
cmpsl
stos
push
cmpsl
xor
clc
lds
hlt
xchg
lock
into
movsb
push
cwtl
fidivrs
xor
pop
je
testl
mov
fisttpl
hlt
lret
fiadds
lahf
and
pop
int
xchg
lods
push
out
repnz
ljmp
fmuls
jo
testl
fildl
pop
clc
cltd
lret
cmc
sbb
mov
in
inc
sub
push
lret
lahf
outsl
push
mov
stos
mov
std
imul
add
pushf
adc
sahf
mov
icebp
lahf
xchg
mov
dec
push
push
dec
je
inc
test
test
sti
dec
divb
movsl
pop
pop
sbb
rclb
pushf
pop
cmp
push
test
push
jp
sbb
sahf
loope
aam
push
sbb
pop
aas
outsb
mov
pop
movsl
push
dec
lods
adc
lock
clc
in
or
popa
int
push
dec
lret
test
jnp
adc
cli
and
or
mov
pop
xlat
push
inc
addr16
pop
mov
inc
sti
cmpsl
out
xchg
ficoml
into
xchg
or
jmp
ja
int
data16
adc
sub
push
lret
in
pop
dec
div
xchg
imul
int
dec
das
inc
adc
xchg
adc
cmpsb
out
push
sub
fistl
testb
sub
fcoml
imul
pop
int
jle
frstor
andb
push
xchg
or
mov
xor
cmpsb
push
loop
mov
mov
hlt
cltd
pop
iret
fsubrs
pop
inc
data16
negb
aas
push
pop
je
outsb
and
jg
inc
or
sub
negb
mov
mulb
out
lcall
cmpsl
add
push
adc
or
pushf
xor
push
mov
imul
ret
lret
add
add
dec
lret
test
cmp
push
push
inc
adc
fimuls
or
dec
test
xor
add
daa
pop
mov
addr16
je
cmp
adc
jns
xchg
dec
das
mov
dec
dec
gs
rcrl
les
jecxz
mov
xchg
push
sbb
lods
sbb
ffree
xchg
xor
clc
push
int
lock
mov
cs
jmp
das
add
jb
ds
add
pop
test
ret
repz
fs
add
mov
xor
movsb
xchg
adcl
pushf
mov
jle
nop
jo
jp
xor
in
jbe
pop
sbb
stos
mov
loop
daa
xchg
adc
xor
xlat
loopne
enter
fld
out
shlb
inc
cmpsb
jno
mov
or
inc
lcall
adc
mov
or
movsb
cmp
out
mov
push
stos
test
mov
jo
imul
dec
fisttps
icebp
adc
adc
mov
inc
add
cmp
dec
pop
stos
push
jge
dec
jns
sub
pop
addr16
cmp
and
mov
or
sub
dec
cld
push
cmpsl
lret
push
lret
insl
inc
or
xchg
sti
xor
sbb
cmp
es
push
add
lods
shll
icebp
mov
in
mov
push
mov
and
jge
aam
in
dec
adc
and
push
and
cmp
dec
in
push
rol
ss
rclb
xchg
in
xor
push
shr
aad
push
dec
lds
jb
cmp
sbb
push
jo
lock
outsl
push
pop
int
inc
mov
xor
ret
mov
inc
mov
insl
pop
ss
pop
int
icebp
or
cmp
idiv
nop
push
sti
jbe
sbb
fwait
jg
dec
adc
test
mov
dec
call
mov
add
inc
fsub
mov
jbe
fsub
das
popa
pop
xor
xchg
sbb
cmp
int
pop
mov
mov
dec
dec
adc
fidivs
inc
nop
ja
popf
inc
scas
gs
jecxz
cmp
cmpsb
scas
shll
imul
jae
in
aas
or
sar
fsubr
fwait
dec
lea
in
cmpsb
stc
mov
mov
scas
ljmp
loop
int
shl
or
cs
pop
mov
rcrb
and
icebp
mov
cmp
dec
xor
mov
inc
jle
push
lods
mov
mov
and
lods
pop
jp
sbb
andb
push
mov
sub
pusha
jl
adc
dec
lods
xchg
xchg
test
jne
push
cmpsb
xor
cmp
insl
mov
sub
hlt
test
xchg
or
imul
ljmp
cwtl
aas
cmpsb
add
pop
push
pop
mov
shlb
sub
or
jb
outsb
mov
sti
inc
cmp
mul
iret
mov
adc
pushfw
inc
mov
incb
adc
push
sti
mov
fldenv
add
or
mov
subb
xchg
into
stos
leave
push
test
or
imul
and
addr16
xor
push
add
pop
cmp
maxps
or
mov
cmpsb
mov
mov
test
js
gs
movsb
push
xchg
inc
xlat
in
sti
in
test
adc
ds
sub
dec
sbb
loope
fs
jl
xor
icebp
cmp
shr
lds
test
data16
add
xchg
loop
out
xchg
ljmp
xchg
lret
int
in
sbb
mov
dec
dec
ja
out
push
xchg
test
xchg
and
jnp
push
rcrb
push
dec
xor
push
add
lock
lea
xlat
xchg
movsb
and
push
inc
ds
push
test
aaa
lret
sbb
or
jge
jnp
xchg
mov
sbb
dec
es
inc
push
mov
es
in
inc
addl
push
fadd
mov
pop
fs
pause
addr16
xchg
jg
jp
loopne
in
xchg
das
dec
sahf
inc
inc
push
repnz
mov
jbe
add
fdivrs
icebp
xchg
movb
add
scas
mov
or
fmul
sub
dec
nop
cmpsb
lds
cmp
js
ja
lcall
xchg
out
inc
movsl
sbb
cmp
and
push
test
scas
pop
aad
xchg
fwait
test
ret
ds
outsl
stos
aas
cltd
pop
cli
mov
mov
and
push
push
or
pop
imul
into
lods
lock
push
add
pop
xor
ret
cs
and
dec
stc
fnstsw
fsubrl
clc
addr16
mov
mov
add
mov
mov
mov
test
jb
lret
pop
sbb
pop
shll
mov
lcall
lods
cmp
enter
push
sub
mov
out
xor
dec
adc
aas
and
dec
sahf
lret
cltd
sbb
fstp
mov
and
lret
xchg
sbb
inc
cmp
test
notb
cli
les
adc
das
sbb
and
movsb
push
fildll
lods
add
enter
cmc
lret
repz
sbb
imul
or
pop
jecxz
leave
pusha
clc
shl
jge
dec
cmc
lods
addr16
inc
and
into
adc
mov
xchg
sbb
out
out
sbb
jnp
cmpsb
je
adc
pop
inc
fs
push
stos
imul
xlat
jmp
outsb
xchg
jae
or
cwtl
fxrstor
shrl
pop
xchg
sbb
std
pop
filds
xsha1
cmpsb
mov
xor
mov
leave
inc
mov
lahf
cmpsb
add
cmp
test
mov
jl
jmp
xchg
inc
ds
sub
dec
pushl
jbe
dec
jmp
and
sub
cs
std
daa
cmp
inc
lods
aaa
push
daa
mov
ja
inc
jae
ret
mov
mov
aas
xor
mov
dec
iret
sub
mov
and
and
pop
mov
jnp
cmp
mov
mov
adc
lret
ret
dec
stos
fdivrs
fiaddl
sbb
dec
dec
pop
pop
insl
insl
jge
lea
mov
fucomp
in
std
std
or
sub
pop
pop
insl
insl
jge
lea
mov
fucomp
in
std
std
or
lods
cmp
jl
mov
mov
fucomp
in
int
adc
sub
dec
pop
insl
insl
std
jge
lea
pop
lods
mov
and
adc
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ds
sbb
sub
cmp
push
xor
mov
mov
out
fcmovnu
sti
into
sti
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
adc
sbb
xor
and
outsb
inc
pop
jae
popa
mov
fisubs
mov
mov
jb,pn
pop
jl
movsb
outsb
adc
mov
jl
je
push
scas
fucomp
jne
out
pop
mov
jmp
add
shr
push
loope
repz
or
mov
fucomip
xor
je
pop
and
mov
pop
popa
pop
in
pop
mov
pop
das
sbb
or
jle
mov
fstpt
inc
add
int3
xchg
shll
cli
je
ss
imul
cmp
scas
push
push
fwait
mov
pop
mov
ds
add
add
sti
pop
sub
lock
mov
out
mov
mov
ret
scas
ficoms
jmp
or
or
cmp
and
outsb
pop
pop
jb
bound
mov
mov
fsubrp
into
lahf
js
inc
sbb
imul
sbb
movlhps
loop
jecxz
loop
fwait
cmpsb
xchg
cmp
pop
imul
cmp
imul
lods
cli
lret
clc
fwait
mov
into
sahf
push
dec
dec
jle
dec
cmovle
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
or
sub
push
xchg
xlat
sbb
fdivl
pop
push
movsl
mov
test
push
repz
sbb
push
or
sbb
mov
int
fidivrl
jno
sub
cmp
in
lret
shl
sbb
ret
lods
je
stos
mov
pop
enter
aaa
in
inc
ljmp
inc
pop
add
push
jle
sub
icebp
cmp
dec
stos
stos
test
fsubl
cmp
lock
jle
add
push
mov
or
cmpsl
push
inc
sti
add
jp
dec
mov
cltd
pop
push
sub
mov
sbb
inc
outsl
jg
jp
jge
jnp
add
add
push
jne
dec
mov
lahf
into
movsb
stc
dec
fs
sarl
and
loope
sub
leave
mov
inc
jl
add
gs
cmpsb
and
and
inc
nop
fwait
dec
xchg
outsl
gs
sbb
imul
pop
cltd
dec
cs
jb
sbb
adc
pop
fistpl
adc
call
sub
dec
lcall
dec
jnp
daa
imul
fnstsw
pop
xor
mov
fdivp
shrl
mov
stc
inc
jp
sbbl
sub
inc
std
lds
jl
shll
int3
cmp
sub
insb
push
jmp
add
dec
jl
or
pop
pop
mov
add
test
shll
nop
outsb
scas
sbb
jmp
push
lret
fdivr
pusha
inc
pop
jae
leave
call
enter
movsb
add
mov
cmc
and
adc
ss
stc
outsb
test
inc
mov
iret
iret
mov
mov
xchg
call
sub
std
lods
loope
nop
addr16
aaa
rorb
cld
pop
xchg
push
mov
mov
dec
in
sbb
dec
add
data16
pop
icebp
jg
xor
jnp
lret
fadd
imul
inc
jp
mov
or
inc
add
aad
sub
mov
outsb
testb
xchg
or
lods
push
mov
imul
jl
out
mov
ja
or
sbb
sub
jmp
clc
fs
pushf
outsb
and
sub
adc
push
movb
xlat
call
idivl
adc
and
inc
mov
stos
mov
sub
xor
std
das
paddb
push
lods
adc
adc
and
sti
mov
rcl
iret
jecxz
cs
pop
outsb
inc
cmp
fbstp
ret
and
sar
mov
cmc
adc
loop
push
jbe
addr16
sahf
dec
mov
jnp
xor
pop
xchg
xor
inc
and
rorl
shl
dec
lods
or
scas
jnp
jl
shlb
aam
iret
stc
lods
stos
push
cmpsb
push
jge
xchg
mov
outsl
repnz
push
push
or
clc
arpl
inc
mov
pop
mov
add
rolb
add
ret
dec
rorb
shl
mov
xor
hlt
xchg
std
dec
pop
xor
jle
cmpsb
xor
sbb
iret
cld
cmp
sarb
movsl
pop
popf
jle,pt
push
lcall
mov
xchg
xchg
dec
mov
ret
sbb
sub
ret
push
xchg
bound
lea
jle
aad
push
inc
loopne
jno
xor
popf
push
sarl
pusha
subb
loop
sahf
notb
sbb
repnz
insb
lcall
push
mov
inc
mov
or
mov
jecxz
inc
mov
mov
je
mov
push
add
rcl
jae
arpl
mov
push
pusha
sti
roll
sub
and
int3
and
xlat
push
idivb
push
sete
repz
stos
int3
mov
mov
xchg
xchg
movsl
jbe
jl
jecxz
hlt
mov
xor
adc
pop
lcall
jp
test
xchg
or
addr16
neg
call
arpl
sbb
cmp
fdivl
stos
add
add
mov
int
outsb
push
outsl
dec
sub
stc
or
aas
mov
les
add
or
and
outsb
out
adc
mov
add
loopne
add
outsl
xchg
xchg
into
cli
dec
jecxz
mov
sub
jmp
aaa
mov
push
clc
cmp
imul
adc
aas
sbb
imul
fistpl
fldt
ret
push
les
insb
movsl
xor
test
fnsave
dec
outsb
inc
dec
sub
sbb
sub
jecxz
outsl
jae
mov
jb
and
adc
arpl
xchg
ret
adc
pop
inc
std
pop
test
hlt
out
or
adc
sub
int
dec
add
stc
icebp
sub
in
fstl
xor
loope
enter
or
mov
lods
sub
add
xor
xor
in
jbe
out
jnp
push
fcom
scas
jae
out
inc
ret
or
sub
cmp
leave
mov
or
adc
push
adcb
popa
test
addr16
add
push
mov
jne
pop
inc
repz
movsl
jecxz
aam
cmp
movb
pop
or
test
dec
inc
mov
rcrb
das
insb
dec
mov
std
inc
mov
or
call
xchg
xor
add
adc
xor
or
bound
push
enter
icebp
sahf
jl
xchg
test
xor
bound
cwtl
push
mov
add
mov
xor
jmp
lahf
in
xchg
add
into
or
and
xchg
adc
xchg
mov
daa
bound
push
imul
or
mov
int3
test
nop
repnz
jb
dec
jmp
loop
mov
movups
dec
cmp
and
mov
pop
arpl
std
icebp
cmp
xor
lock
cmp
aaa
sbb
cmp
inc
mov
lcall
dec
inc
add
cli
popf
nop
leave
push
xor
mov
mov
lods
cltd
clc
or
rol
xchg
cs
mov
mov
or
repz
dec
into
gs
pushf
das
cmpxchg
lret
push
jg
pop
test
push
test
popa
cmc
stos
in
mov
bound
mov
adc
out
dec
adc
pop
mov
add
adcb
movsb
mov
clc
inc
icebp
jecxz
test
loopne
leave
and
inc
pushf
mov
cmp
lcall
inc
xor
int3
inc
pop
adc
sbb
das
pop
pop
mov
dec
sahf
mov
mov
pop
jb
or
shlb
fsubrl
imul
sarl
xorb
jns
unpcklps
pop
ja
xchg
mov
add
jb
add
xor
mov
lahf
push
cld
mov
jne
xor
ja
pop
push
inc
cmp
push
inc
adc
push
das
push
push
adc
outsb
imul
aas
mov
orb
and
lds
cmp
sub
lds
xor
inc
das
es
repnz
push
xor
push
lock
and
cmpb
mov
push
daa
adc
adc
dec
test
inc
mov
lahf
int
cltd
and
outsl
psraw
cmp
adc
push
loope
and
cmp
and
mov
ja
movsb
add
jns
xor
cmc
sub
mov
jae
popf
add
xor
roll
testl
fs
xchg
inc
lahf
mov
shrb
and
sub
or
push
cld
and
mov
pop
sbb
lods
loopne
mov
in
mov
xor
dec
ja
mov
aas
xor
lea
mov
inc
out
daa
add
dec
int3
outsb
fmul
imul
rolb
pop
fistl
dec
dec
or
and
xor
into
roll
std
jge
out
lods
ljmp
jp
call
cltd
sahf
pop
ds
sub
popa
push
ss
push
ret
test
les
inc
pop
ret
jle
out
sahf
fildl
jbe
mov
and
adc
or
fld
xchg
stc
fmull
scas
daa
dec
ret
pop
mov
in
shl
inc
in
and
push
cmpsl
add
xchg
or
gs
mov
pop
fimull
fwait
mov
push
xlat
repnz
fucom
xor
mov
xor
inc
je
mov
pop
call
popf
pop
jno
pop
lds
loope
es
jg
sbb
repnz
cs
test
xchg
gs
jae
xor
push
aam
and
mov
fimull
mulb
push
test
addr16
ljmp
mov
push
dec
aas
inc
in
fcoml
adc
or
addr16
jne
fsubrl
mov
lret
sbb
dec
loop
add
inc
pop
mov
addr16
roll
or
inc
mov
popa
test
xor
or
sbb
pop
sbb
mov
dec
cltd
leave
cmp
fisubl
pop
xchg
cmp
inc
sub
repnz
and
mov
jne
aaa
sti
push
jmp
insl
jge
ja
movsb
pop
arpl
xchg
nop
mov
or
fcomps
push
push
inc
arpl
add
sbbl
adc
sarb
into
adc
push
xor
dec
sbb
fldenv
sbb
popf
mov
or
add
push
jl
stos
fs
jb
xchg
xor
lcall
push
fidivrl
dec
mov
in
push
sbb
sub
lock
mov
push
mov
std
or
mov
jmp
fadds
and
xchg
movsl
push
pop
jg
mov
pusha
ret
out
mov
lea
mov
nop
sbb
lods
dec
imul
push
shlb
sub
cmpl
leave
fcmovbe
in
test
pop
adc
inc
jno
jo
adc
scas
jg
mov
lret
mov
cmp
repz
adc
mov
mov
jnp
sti
in
adc
fcmovne
inc
outsb
mov
ds
dec
cmpsb
jecxz
int
fidivl
ret
into
or
shll
dec
movsl
sub
nop
enter
lahf
xchg
popa
xor
push
pusha
xor
popf
push
cmpsl
pop
and
repnz
cmp
add
call
sarl
xor
cmp
stos
adc
xchg
loop
dec
aad
ror
adc
cmp
loop
mov
sub
icebp
mov
bound
mov
call
xchg
push
xchg
stos
call
pop
movsl
fstpl
scas
cmpsb
add
addr16
outsl
or
icebp
iret
adc
pop
imul
xlat
popfw
push
xor
sub
xor
sub
cwtl
std
push
cli
fstps
shr
sbb
jmp
mov
nop
mov
cmp
cmpb
cmp
in
adc
sbb
add
mov
sti
aas
icebp
jg
sub
pop
stos
repz
add
sbb
cmp
cs
cwtl
push
lahf
gs
decb
sbb
push
inc
lret
lcall
aaa
scas
inc
or
pop
clc
jg
fwait
mov
add
lcall
das
stc
lea
mov
push
ret
sti
jb
int3
shlb
loopne
xchg
cmp
cmc
clc
lcall
xchg
cmp
pusha
pushf
mov
and
outsl
aas
xchg
lcall
inc
jne
mov
jge
xchg
dec
mov
pop
test
adc
fisubrs
or
adc
in
pushl
xchg
jne
fwait
or
stc
cld
sbb
into
inc
lods
pop
push
adc
cmp
or
dec
pop
out
test
and
push
mov
cs
ss
cmpsb
jl
sbb
sbb
enter
dec
sbb
sbb
pop
mull
jae
pusha
daa
cli
les
xchg
cmp
adc
leave
xchg
mov
shll
popa
jmp
xor
and
xchg
mov
in
sbb
and
movsl
jae
fldcw
lock
jb
push
bound
sub
pop
bnd
jg
xlat
mov
jb
push
mov
out
pushf
sahf
push
imul
addl
dec
xor
in
pop
dec
fidivs
cmp
inc
lods
lahf
jne
jns
aas
out
stos
push
mov
pop
xorl
insl
push
outsb
push
push
fldl
jnp
jle
sbb
loope
mov
rolb
xlat
das
adc
pop
cwtl
in
out
lock
hlt
inc
push
adc
test
add
sub
jns
push
icebp
imul
repz
add
subl
das
sub
push
cmp
hlt
loope
pushf
mov
lods
mov
mov
xorl
rolb
push
fistl
push
fldenv
test
movsl
fsubr
add
xor
xchg
cmpl
xchg
dec
mov
stos
adc
adc
cmpsb
mov
and
add
enter
fnsave
xor
ret
filds
je
addw
call
mov
popa
cmp
sti
cld
sbbl
pop
test
out
testl
imul
movsb
and
and
mov
lea
sub
adc
cmpsl
pop
test
inc
xchg
mov
ror
lds
mov
adc
adc
rorl
fisttpl
fcmovbe
sti
popa
aam
mov
adc
scas
nop
mov
sbb
add
cmpsb
aam
sbb
mov
xchg
xchg
mov
inc
lods
xchg
inc
xor
jp
je
adc
je
repz
xchg
mov
out
gs
or
lret
stc
push
inc
sbb
xchg
stos
ficompl
mov
push
mov
pop
or
scas
cwtl
loopne
mov
cs
loope
sub
loopne
popf
xorb
into
andb
mov
fwait
movsl
push
or
into
arpl
xchg
adc
lea
insl
outsb
push
sub
hlt
cwtl
hlt
and
or
push
fcoms
ljmp
rcll
xor
leave
movsb
sbb
int3
and
es
push
jns
out
inc
mov
jo
pop
or
and
out
fldl
dec
dec
test
gs
jmp
push
jno
mov
jno
test
mov
in
jmp
mov
orb
cmpl
xchg
xchg
sahf
into
pop
push
adc
push
call
scas
dec
orb
inc
cmpl
nop
in
in
rcll
es
mov
enter
jne
cmp
xchg
cmp
test
popa
cmp
xor
adc
mov
movsb
add
mov
and
daa
jb
in
push
add
psubusw
sub
push
clc
jnp
adc
add
cmp
dec
dec
mov
je
cli
icebp
in
sub
pop
out
pushf
jg
test
pop
inc
mov
cmp
lods
dec
jb
jbe
lock
mov
call
jmp
insb
loope
mov
fcomps
sbbl
iret
adc
lret
test
mov
out
icebp
mov
and
out
push
xchg
jbe
movsb
icebp
mov
stos
in
jb
loop
jbe
call
xchg
lock
aaa
js
sbb
ss
lds
inc
mov
lods
movntps
out
clc
dec
sbb
in
lret
mov
cld
xor
dec
aaa
mov
or
inc
xchg
filds
or
lret
push
and
pop
mov
jmp
jns
stos
sbb
mov
mov
adc
dec
lock
pop
adc
pushf
sub
aam
xchg
pop
cmpsl
or
test
lcall
movsb
pop
pushf
or
jge
ret
insl
cmp
xchg
inc
sbb
jns
out
adc
movsl
or
mov
mov
adc
fldcw
mov
rorl
or
and
lgs
mov
orb
rolb
push
hlt
cmp
gs
addr16
lahf
xor
push
xor
scas
arpl
mov
stos
testb
rorl
sub
pop
mov
gs
mov
inc
mov
rclb
loope
mov
push
nop
aam
xchg
out
lcall
ficomps
addr16
std
shll
inc
or
out
repz
cmpl
dec
aas
outsl
shlb
fsubrl
pop
das
sbbb
lock
enter
dec
xor
in
sbb
sub
dec
fidivrl
and
iret
or
mov
jb
cltd
push
sub
dec
ret
scas
sub
lret
dec
cli
insb
inc
add
cmp
mov
mov
dec
push
mov
jge
push
negb
clc
testb
stos
mov
ljmp
jl
mov
xchg
sub
mov
or
cmp
xor
loop
push
lock
xor
lcall
push
or
and
pop
mov
test
or
push
sub
das
out
dec
cmp
pop
call
ret
mov
xor
scas
xchg
out
mov
cmp
sub
xor
sbb
stos
ds
add
es
ja
inc
cli
xlat
imul
ss
fnstcw
sbb
add
daa
shr
out
xor
mov
xchg
push
mov
add
xchg
shr
jmp
dec
pop
inc
ret
test
or
push
gs
sbbl
in
mov
fsubl
or
and
sbb
and
aaa
push
pop
fimuls
mov
ret
pop
mov
leave
fwait
sti
dec
dec
int
jl
sub
adc
je
pushf
push
adc
in
xor
jecxz
gs
jmp
add
lcall
sbb
push
sbb
add
sub
xchg
jp
test
add
hlt
or
sbb
fisubrl
jns
ret
lret
test
inc
movsl
xchg
jnp
out
xlat
push
cwtl
xchg
jmp
push
sub
cmp
mov
nop
enter
iret
and
sub
xor
jne
pop
rorl
imul
pusha
in
cmpsb
dec
xchg
scas
adc
cli
xor
mov
or
popf
mov
ljmp
stc
mov
xchg
clc
insb
mov
jo
stos
xchg
push
pop
xor
dec
push
insl
arpl
mov
movsl
add
sbb
or
and
lods
xchg
lock
popf
sbb
xor
pop
in
jecxz
xchg
pop
lds
or
xchg
out
sbb
es
adc
jno
inc
cwtl
cmp
dec
cmp
mov
and
xor
loope
mov
pop
outsl
sub
daa
dec
je
mov
fsub
xor
outsl
mov
mov
dec
lret
pop
cmp
push
dec
outsl
push
dec
xchg
add
das
ljmp
icebp
jp
int3
fisubrl
ret
mov
add
insb
mov
pop
lret
loopne
roll
jge
sahf
imul
lock
adc
aad
mov
dec
pushf
loop
mov
add
ss
leave
jmp
sbb
sbbl
dec
loop
fildl
ret
jmp
ret
pushf
xor
and
mov
adc
scas
test
enter
std
xchg
js
mov
sbb
sub
push
test
mov
xor
cmp
pop
insb
mov
and
cmp
xor
inc
dec
add
loope
push
test
movsl
mov
push
test
lret
xchg
and
jp
jle
inc
jne
rolb
and
jmp
cmp
dec
xchg
adc
addb
add
das
aam
ret
movsb
sub
xchg
mov
arpl
pop
out
fs
cli
jp
in
xorl
sbb
jo
push
cmp
cmp
xor
add
icebp
mov
inc
int
push
aaa
rcr
cmp
nop
pop
fwait
aas
imull
pushf
or
mov
into
daa
ds
inc
cld
xchg
ss
in
ljmp
movsl
pop
mov
dec
pop
jge
push
jno
jmp
push
sub
mov
mov
inc
cmc
test
loopne
adc
pop
sbb
xchg
xorb
rolb
add
pop
movsl
out
mov
xchg
mov
fmuls
push
sub
mov
adc
psubd
ret
mov
stos
adc
rorl
push
or
jno
pop
or
lcall
sub
mov
int3
movsb
stos
xchg
sbb
fldenvs
jge
cmpb
xlat
pushf
notl
xor
pop
cmpsb
shlb
ljmp
push
sub
or
scas
xlat
and
cmp
inc
push
mov
sub
scas
xchg
sbb
push
cmp
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
mov
fsubrp
into
sti
or
sbb
sub
cmp
outsb
pop
pop
imul
mov
int3
mov
and
adc
add
in
cmc
pop
lds
repz
pop
add
gs
jne
inc
iret
push
mov
add
outsb
cmc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
jle
scas
xor
jle
outsb
cmc
pop
lds
movsl
cs
test
xchg
pop
int
mov
into
push
mov
pusha
loopne
and
or
mull
je
xchg
jbe
jns
and
lar
and
in
iret
mov
mov
aam
sub
pop
cs
loopne
repz
add
imul
in
mov
lock
cmp
xchg
adcb
movsl
mov
xchg
out
and
mov
sbb
xor
dec
rcrl
cmp
jae
imul
movsb
stos
inc
jbe
gs
js
or
movsl
cs
popf
jp
ret
push
and
in
in
push
jo
add
inc
andl
popf
lds
xchg
dec
push
adc
inc
out
out
fisubl
rcr
push
adc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
sbb
aaa
andl
ds
jp
or
decb
mov
sub
dec
std
xchg
jo
movsb
or
shrb
ljmp
fcoml
into
cmp
jo
jnp
mov
xorl
leave
cs
test
xchg
gs
jne
inc
into
push
mov
add
outsb
cmc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
dec
loopne
aaa
popa
add
pusha
sub
cmc
sar
jmp
jl
mov
push
notl
cmp
fbld
hlt
test
call
lret
mov
pop
repz
adc
inc
pop
jge
xchg
sti
xchg
leave
stc
dec
jmp
arpl
jecxz
xlat
push
mov
mov
add
shrb
inc
insb
test
rcl
dec
mov
mov
inc
aad
pop
push
pop
jle
inc
mov
jne
jno
stos
stc
inc
lret
xor
std
sub
or
ljmp
stos
add
push
imul
add
test
xchg
jb
mov
ljmp
lret
loop
aas
dec
mov
es
gs
mov
cmp
sub
jno
mov
mov
pop
and
cmp
insb
test
pop
and
rep
js
push
and
imul
mov
add
xor
lods
test
fbld
stc
dec
mov
jmp
sub
xchg
and
lods
fstpl
xor
fcompl
xorl
dec
mov
addr16
inc
push
js
mov
pop
sub
pop
jl
rcrb
pusha
add
sbb
fsubs
aaa
mov
movsl
cmp
pop
pop
bound
mov
xchg
aam
push
xchg
mov
sub
xchg
shll
mov
fwait
movsl
xor
sbb
dec
dec
pop
add
arpl
leave
dec
xor
xchg
push
lahf
popa
push
pop
loope
andb
push
bound
aaa
int3
or
insb
dec
jnp
add
lahf
and
incb
inc
add
outsb
stos
xor
lcall
and
jno
int
nop
stos
sub
movsl
jnp
lfs
lahf
pop
bound
adc
jnp
jns
cwtl
pop
pop
nop
bound
lret
or
mov
sti
lret
in
xchg
cmc
es
movsl
push
cmp
mov
insl
out
and
inc
and
sti
sbb
lret
rcrl
int
sub
mov
loope
cmp
ds
pop
pop
mov
adc
or
sub
jg
pop
pushf
fisubrs
dec
and
lahf
shl
shll
xlat
shr
sbb
or
add
push
das
mov
fisubs
cmpb
add
xlat
lahf
movsb
les
hlt
andb
stos
dec
and
inc
and
test
js
leave
imul
mov
push
idivb
xchg
or
add
cli
shlb
mov
in
adc
std
scas
xor
xchg
data16
adc
mov
jmp
inc
cmpsb
popa
test
mov
popf
xor
in
push
jns
xchg
int
and
sbb
test
ljmp
add
je
fcmovb
test
xor
adc
sub
loope
cmc
dec
push
dec
push
mov
fimull
ret
dec
mov
cltd
pusha
andl
in
ljmp
int
or
jg
mov
mov
scas
sub
fmul
movsb
cmp
adc
xor
adc
jl
and
sub
js
jge
test
lea
mov
stos
jg
cld
test
xchg
mov
insl
fsts
mov
in
stos
insl
pop
sbb
neg
ds
xor
ds
mov
jnp
cs
loope
jbe
in
insb
lret
or
out
in
nop
mov
mov
scas
std
cmp
mov
cmp
inc
rcll
mov
call
js
clc
insl
les
mov
mov
gs
test
add
mov
pop
fcoms
mov
push
xor
test
ja
cmp
cltd
and
and
shrb
outsl
jae
jmp
push
adc
dec
xchg
mov
sub
das
decl
jbe
jae
out
frstor
push
jp
mov
movsl
cmc
rcr
lret
mov
ds
ret
and
mov
div
das
and
addr16
addr16
js
pop
add
sub
xchg
push
mov
mov
xor
jns
pop
mov
test
push
push
stos
data16
jae
xor
loopne
repnz
lock
adc
and
push
and
cmp
cmpsb
pop
cwtl
hlt
dec
rcrl
adc
lret
mov
mov
in
fsub
cmp
inc
daa
add
and
mov
xor
or
pop
mov
bnd
xchg
adc
pusha
or
push
jmp
push
aas
sub
sbb
ljmp
jge
loopne
pop
xor
cmp
mov
cmp
ficoml
mov
adc
push
push
push
push
mov
xchg
addr16
imul
iret
pop
xor
cli
sahf
loop
lea
and
xchg
test
jno
pop
push
mov
mov
fnstcw
fcmovb
dec
cmpsb
lods
int3
mov
mov
sub
and
and
mov
js
xor
add
jno
sbb
add
mov
jne
pop
pop
scas
mov
push
pushf
sti
push
inc
jno
and
add
inc
add
xchg
jnp
in
iret
ds
mov
push
dec
dec
pushf
shrl
lods
mov
jns
ja
nop
scas
stos
mov
fbstp
dec
cmp
and
mov
aad
in
fistps
sub
aas
pop
xor
movsl
mov
orb
add
jl
leave
out
enter
in
push
popa
fcmovb
mov
mov
imul
aam
stos
les
std
sub
imul
arpl
sti
push
mov
dec
pop
jnp
sbbl
and
stos
lds
flds
inc
js
mov
mov
aas
movsb
aam
push
and
es
sub
mov
lods
or
mov
xor
stos
fstpt
in
xor
and
lea
and
jg
dec
cld
dec
cli
fidivrs
mov
and
out
mov
decl
test
insb
xchg
add
add
lods
mov
popf
dec
jle
mov
push
push
inc
fadds
movntps
cvtps2pi
cmp
and
cltd
movsb
scas
rcll
imulb
mov
test
fwait
cld
dec
jecxz
out
fimull
xchg
int
mul
repnz
pusha
das
push
andl
test
dec
sahf
dec
mov
adc
test
cmp
cmp
pushf
inc
sub
push
mov
mov
in
fimull
pop
push
sti
jnp
lea
pop
jnp
psllw
add
out
cmp
and
mov
lret
rcrl
push
mov
pop
inc
pop
cmc
cli
out
mov
fstpt
or
cmc
jmp
mov
jbe
push
fs
jnp
mov
mov
and
cmp
mov
mov
popf
das
cmp
inc
xchg
cmp
jne
inc
xchg
sti
insl
inc
or
loop
add
pop
fdivrl
bound
mov
jno
dec
jle
push
pop
and
ss
fwait
jle
sbb
outsl
popa
jecxz
and
dec
lret
test
xchg
pop
jb
pop
ljmp
orb
inc
jae
adc
sbb
cmp
or
sub
mov
mov
scas
xor
xchg
xor
sbb
inc
bound
mov
cmp
sub
push
roll
jb
xor
cmp
aam
clc
jl
enter
ja
dec
inc
imul
sbb
sub
jge
jmp
lcall
es
xchg
or
sub
movsl
mov
enter
inc
jp
loop
lods
mov
sub
xchg
cmp
sbb
negb
dec
dec
pop
call
or
subb
test
arpl
fistpl
cltd
test
fildll
cmpsb
test
mov
in
xchg
jg
pushl
sbb
popa
dec
push
mov
jmp
shl
cmp
lds
mov
fsub
sub
lret
pop
adc
push
pusha
and
xchg
fdivl
leave
rol
sti
cwtl
out
lcall
cmp
jge
sbb
inc
fbld
pop
cmp
and
mov
sub
jb
pop
jge
mov
dec
push
imul
dec
in
sbb
xor
inc
es
and
mov
jmp
xchg
rorl
insb
or
xchg
and
dec
mov
iret
xchg
and
pop
dec
aas
retw
mov
adc
mov
dec
mov
fmull
cmp
in
orl
js
xor
lock
jae
mov
mov
pusha
and
cmp
shl
cli
and
inc
cmp
leave
adc
mov
lret
inc
popf
or
hlt
mov
mov
rcl
arpl
cmpsb
dec
fidivrl
push
lcall
bound
mov
xchg
repnz
mov
push
sub
in
lock
sti
push
mov
add
push
mov
popa
xor
mov
push
in
cmpsb
nop
xchg
fwait
xchg
aas
ret
jecxz
mov
js
or
ja
push
push
cmp
or
cmp
sbbb
icebp
push
mov
cmpsb
sbb
push
int
dec
mov
mov
sub
push
daa
push
or
rorl
mov
pop
scas
sub
lcall
mov
push
test
jnp
and
fs
jbe
adc
hlt
mov
ficoml
mov
sub
jae
cmp
gs
inc
xor
or
fwait
lods
push
shrl
je
or
test
shrl
xchg
xchg
mov
xor
rcll
test
sub
or
or
fstpl
imul
pop
in
ss
mov
ja
in
inc
out
inc
xor
aaa
jne
push
in
fwait
sub
outsb
movsl
dec
sahf
sbb
inc
cmp
mov
sub
mov
push
pop
xchg
sahf
outsl
out
push
mov
push
mov
fimull
or
or
inc
mov
mov
lret
push
jb
mulb
sub
add
or
sub
in
jmp
cs
sub
mov
and
arpl
rcll
jp
aad
inc
inc
movsb
add
cmpsb
dec
jne
sahf
into
sbb
aad
in
xchg
sbb
dec
or
push
dec
sbb
xlat
jge
in
into
enter
inc
or
xchg
clc
iret
inc
inc
inc
stos
ret
aad
mov
inc
cmp
mov
pop
sahf
pop
push
shr
idivb
fs
xchg
inc
inc
cmp
gs
pop
into
mov
lods
cmp
inc
adc
mov
inc
test
mov
pop
jl
stc
xor
cmp
add
xchg
mov
xchg
scas
icebp
mov
xor
loope
add
pop
mov
stos
aas
jns
push
mov
dec
sub
or
mov
inc
sbb
adc
cmp
fs
repz
hlt
ffree
out
jle
or
inc
ret
jg
pusha
ds
add
and
dec
lret
jns
mov
out
sbb
xchg
loope
cmpsl
dec
mov
lods
je
xchg
pusha
adc
push
jae
adc
pusha
aas
pop
cmp
xchg
pop
cmp
xchg
mov
jecxz
mov
dec
cmp
push
fistps
add
sbb
jo
js
in
imul
arpl
and
in
cli
gs
shlb
xchg
stc
pusha
lcall
in
xor
fnstsw
dec
fldz
pop
fmuls
jge
lea
mov
pusha
aam
jbe
mov
andb
and
push
in
mov
push
rol
addr16
pusha
fcomps
pop
fucom
jmp
pop
pop
enter
fwait
lock
loop
sub
hlt
and
out
cmc
fcom
push
push
in
loopne
jb
daa
mov
xor
or
pop
jno
cwtl
sarb
fcoms
leave
mov
sarb
cmpsb
xlat
jp
dec
inc
push
xchg
xor
xor
add
sub
adc
push
dec
pop
xchg
fcmovnu
add
add
inc
add
and
mov
push
scas
imul
push
jecxz
jp
xlat
xlat
in
push
mov
jl
sub
mov
and
lcall
pop
mov
aaa
adc
pop
sbb
xor
mov
push
aad
cmpsb
cmp
loop
dec
mov
xchg
xchg
mov
cld
push
mov
jae
jge
xor
in
pop
enter
popf
or
dec
mov
cmp
js
mov
and
add
sbb
popf
popf
push
bound
jmp
iret
mov
lcall
out
sahf
mov
mov
clc
or
mov
jbe
xor
movsb
je
cwtl
dec
es
es
push
inc
cmp
mov
xor
jne
adc
stos
and
mov
inc
mov
mov
test
and
insl
sbbl
jae
xor
mov
push
pop
add
lods
inc
testl
call
test
lret
leave
loope
shlb
xchg
dec
inc
insl
add
jno
dec
adc
mov
mov
mov
test
inc
mov
das
out
outsl
jae
sub
jno
pop
jl
fisttpl
sbb
cmpsb
add
out
mov
mov
xchg
add
lcall
cmp
bound
in
incb
jl
lods
aaa
xchg
std
push
push
imul
es
push
out
xchg
sbbb
pop
sbb
push
jns
lea
cltd
call
enter
sbb
xchg
cld
sbb
xchg
and
test
jle
xlat
lock
lret
add
pusha
int
xchg
jns
and
ljmp
sub
mov
jbe
cwtl
xor
and
lock
add
or
fsts
push
imul
pushw
sahf
sub
adc
jno
mov
iret
pop
roll
lock
xor
sbb
inc
mov
iret
add
out
or
aam
insl
clc
xor
out
jp
pop
pop
leave
xchg
icebp
mov
and
pop
or
test
cwtl
inc
ret
int3
xor
pop
mov
dec
inc
dec
or
xor
xor
fwait
pop
cld
or
shlb
sbb
out
dec
in
lret
inc
fidivs
ds
cmp
test
negl
mov
mov
sub
and
pusha
ja
test
add
nop
adc
add
repz
fstp
mov
cmp
mov
sbbb
and
pop
adc
fldl
lret
sbb
and
xor
popf
cmpsb
xchg
fwait
jns
xchg
push
cmp
les
test
sti
stos
lods
mov
sub
mov
or
lods
leave
in
jne
mov
int
mov
daa
test
js
jg
and
mov
pop
shlb
jle
mov
mov
inc
cmpsb
sbb
mov
push
xor
adc
xchg
xor
jmp
or
mov
xchg
jnp
call
cmp
arpl
push
sbb
sub
or
jb
dec
hlt
dec
arpl
cmp
push
pop
out
movsl
lahf
push
scas
push
movsb
mov
das
mov
insl
lret
cmpb
imul
stos
sub
or
outsb
decb
cli
push
mov
fisubrl
nop
cmp
mov
sbb
adc
jo
add
jmp
arpl
sti
out
add
or
mov
enter
mov
dec
jnp
jno
imul
hlt
xor
mov
mov
js
inc
into
adc
mov
pop
sub
adc
pop
mov
mov
xchg
out
mov
call
push
subl
cmp
xchg
push
or
in
sti
cmp
sti
cmp
sub
aas
data16
push
add
in
popa
les
out
rcll
sbb
out
neg
mov
cmp
out
in
pop
and
nop
mov
pop
popa
adc
cmp
add
fsubl
addb
mov
scas
ret
daa
mov
lea
pop
mov
movsb
sar
inc
lahf
fwait
js
addr16
repz
rclb
pop
test
stos
push
aaa
xor
stos
pop
fcoms
lret
sbb
sbb
cmp
xchg
rclb
pop
push
rorl
xchg
mov
data16
and
lods
insb
pop
adc
add
mov
fcomps
mov
popa
pop
insl
inc
mov
insl
push
in
add
cmpsl
popf
bound
fs
or
stc
roll
shll
mov
out
lret
in
cmpsl
insl
arpl
cs
inc
and
aam
jb
cld
mov
cmp
scas
decl
jne
xor
incb
sar
leave
pop
cwtl
pop
fdivr
clc
adc
inc
pop
bound
jmp
inc
call
pop
add
push
xor
mov
push
jl
lret
xor
xlat
stc
dec
xor
imul
dec
lret
ret
cmp
jo
sahf
ja
and
or
pop
mov
cltd
mov
pop
cmpsl
jbe
mov
push
sub
cwtl
cmpsb
dec
addb
out
xchg
pusha
mov
stc
adc
xchg
insl
imul
mov
mov
fldt
push
push
cmpb
mov
es
and
inc
dec
lcall
jno
xchg
or
xchg
mov
and
adc
sub
xor
dec
fwait
outsb
test
fwait
jae
cs
or
adc
jg
gs
sti
xor
mov
idivb
jecxz
push
mov
cmc
mov
ficompl
mov
rolb
movsl
hlt
mov
fs
cli
inc
mov
call
pop
sbb
cmpsb
inc
sbb
lret
xchg
cmp
pusha
lahf
ss
mov
shl
lcall
int3
jno
gs
push
jge
addl
daa
push
dec
cmp
sysenter
ficoms
in
out
push
leave
jmp
cmpsl
out
push
js
imul
jg
sub
push
push
data16
or
adc
stc
neg
lds
dec
pusha
push
call
dec
les
js
mov
lods
insl
int
mov
pop
sub
lcall
sahf
jmp
bsf
lret
test
ljmp
and
loopne
adc
pop
repz
mov
stos
js
daa
movl
pop
repnz
jg
sbb
lods
shrb
add
ja
scas
stos
xor
mov
stc
dec
out
sbb
leave
mov
mov
out
cmp
loope
add
stc
fs
or
dec
div
inc
xlat
iret
inc
push
dec
rol
loopne
lcall
or
xor
pop
stc
popf
mov
mov
push
xor
outsb
outsl
pop
repz
inc
jne
or
mov
in
or
xor
lret
mov
js
xchg
out
je
outsb
lock
out
inc
xlat
repz
pop
cmp
into
jmp
ss
inc
mov
pop
imul
pop
dec
inc
cmp
aas
inc
mov
fwait
jne
and
push
push
xchg
xlat
pop
xor
cmp
cs
xchg
dec
arpl
cmp
sahf
cli
aas
cltd
hlt
sahf
insl
xor
sbb
dec
jno
mov
jo
inc
pop
dec
out
jns
jge
movsl
sbb
and
in
daa
xchg
mov
int3
or
cmp
int3
add
test
adc
and
in
pop
aad
mov
aas
fdivrp
mov
inc
add
sti
and
pop
cli
mov
xchg
mov
push
mov
ljmp
adc
lods
js
mov
xor
mov
pop
fnstsw
js
sbb
ficompl
scas
scas
mov
cmp
or
lea
jne
mov
aaa
movsl
mov
pusha
sub
cmp
mov
out
aad
leave
lret
xor
les
leave
add
mov
rcrb
or
stos
pusha
aas
xor
mov
fbstp
mov
cmp
dec
stos
or
out
pop
jae
pop
sub
sub
add
iret
cmc
je
inc
add
mov
test
sbb
push
sub
cltd
add
out
mov
repz
inc
adc
inc
clc
out
and
add
dec
jg
ljmp
outsb
outsb
clc
mov
ljmp
fiaddl
dec
sbb
inc
inc
mov
xchg
mov
loopne
adc
loopne
decl
rcr
jl
into
xchg
push
pushf
out
popf
daa
push
nop
into
adc
xchg
pop
outsb
xor
cmpsw
xor
or
mov
vaddss
mov
arpl
jl
pop
les
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
outsb
cmc
pop
lds
movsl
cs
test
xchg
gs
jne
inc
into
push
mov
add
out
cmc
faddp
dec
aam
movsl
cs
test
je
inc
into
push
mov
add
outsb
cmc
pop
lds
movsl
cs
lcall
into
lods
fmulp
out
cli
ljmp
xor
dec
mov
dec
adc
add
les
in
hlt
addb
pusha
and
xor
inc
xor
adc
cld
xchg
loopne
shlb
in
hlt
addb
jns
dec
xor
inc
sub
or
lock
aam
shll
cmpsl
loop
out
jo
jne
and
pop
daa
dec
clc
add
repz
out
dec
sub
ret
dec
dec
pop
sub
mov
call
pop
leave
adc
rcrl
nopl
pop
orb
rcl
mov
movsl
js
in
jle
dec
arpl
adc
sub
lock
lds
hlt
lds
xor
sub
stos
xor
adc
push
inc
das
dec
dec
xchg
mov
and
push
cmc
xchg
lahf
mov
lock
cwtl
sbb
push
sub
aas
jns
mov
mov
ret
hlt
add
push
test
lret
filds
ret
cwtl
rorl
and
testb
dec
xor
inc
xor
adc
lock
clc
movsb
leave
mov
les
hlt
andl
jb
and
cmp
jl
gs
lahf
icebp
loopne
aam
movsl
inc
aad
mov
jb
pusha
or
jne
and
pop
outsb
and
testb
xor
mov
negl
pusha
bound
add
adc
lock
loopne
shlb
in
hlt
addb
pusha
and
xor
inc
xor
adc
lock
loopne
shlb
in
hlt
addb
jae
xlat
dec
inc
xchg
mov
jmp
aaa
imul
in
inc
in
fcomp
inc
jae
cli
addb
sbb
and
rcr
pop
mov
push
imul
je
inc
ja
mov
bound
filds
out
mov
fwait
push
inc
pop
outsb
addr16
mov
push
ja
add
cld
lret
add
stc
jge
mov
rcl
rcll
or
data16
mov
jp
mov
mov
push
cmp
jecxz
and
xor
int
mov
pop
fs
jb
cmc
xchg
push
test
sub
cmp
cmp
jb
or
pop
add
jnp
push
pop
xchg
sahf
arpl
xor
fistl
xchg
arpl
out
pop
add
lods
inc
inc
adc
xchg
mov
shr
mov
fisubl
popf
into
push
xchg
sub
push
loope
xor
pop
mov
or
je
or
mov
dec
hlt
cmp
sahf
push
insb
fisubs
in
pop
cs
jl
ss
xchg
lahf
mov
shll
jle
mov
sub
movhps
xor
mov
adc
shll
inc
pop
shlb
outsb
test
cltd
mov
sub
push
sub
xchg
popf
cmp
ret
and
adc
push
jle,pt
addr16
test
cmpsb
push
mov
sub
fcoms
push
mov
pop
sbb
inc
inc
push
lcall
xlat
popf
xchg
xchg
fcoms
xchg
push
dec
add
fdiv
cltd
scas
push
dec
int3
pop
pushf
inc
mov
adc
cmp
enter
or
notl
mov
adc
es
adc
inc
xor
adc
jmp
jp
sub
mov
roll
xchg
std
test
push
and
or
pop
pop
lcall
mov
stc
lea
outsl
cli
jb
testl
sub
xlat
loopne
lds
scas
fsubrl
cli
imul
and
push
or
ret
cld
out
scas
push
pop
jecxz
test
xor
ret
pop
push
xor
push
cmp
inc
shl
in
ja
int
mov
pop
rcl
dec
idivb
daa
adc
test
sub
movsl
mov
icebp
sbb
std
call
ficoml
sub
sub
add
ret
mov
xorb
add
push
rcll
adc
dec
xorb
aaa
cmp
out
test
sbb
rcll
mov
xor
mov
lret
inc
lea
cmpsl
xchg
inc
push
mov
and
dec
fxtract
and
push
das
and
add
outsb
inc
inc
imul
es
ficompl
sarb
je
jmp
out
das
mov
and
repnz
cmp
push
jne
add
jmp
jbe
xorl
andb
xor
dec
sub
add
push
sub
xchg
fwait
jp
jle
pop
push
and
dec
or
repnz
sub
fwait
paddb
bound
in
mov
dec
push
test
outsl
ficoml
insl
sbb
lock
dec
mov
sub
stc
cmp
add
sbb
call
xchg
add
cmpsb
imul
pusha
pusha
jae
int
mov
cmp
in
popf
inc
movsl
rorb
movsb
cwtl
or
xlat
pop
adc
sub
aad
imul
push
sub
leave
inc
call
icebp
add
test
daa
lea
clc
int3
std
mov
int3
ret
mov
adc
jmp
test
sarb
mov
in
mov
cmpsb
pop
pop
sahf
int3
shll
sbb
or
outsb
add
dec
cmp
out
xchg
loopne
cmovs
adc
movsl
hlt
cmp
mov
pop
subb
jp
xchg
push
js
jns
incl
mov
lret
add
fwait
and
sub
fsts
and
out
mov
mov
js
call
jp
cmp
cltd
mov
or
pop
jnp
xor
and
mov
je
adc
cmp
pop
jo
movsb
repnz
repnz
jno
outsl
mov
sub
aas
pop
mov
sbb
negl
push
lret
or
je
imul
pop
mov
aaa
dec
arpl
gs
pop
stos
push
dec
stos
xchg
loopne
ja
or
cltd
shrb
jno
imul
cmpsb
repnz
sbbb
aam
jae
cld
pop
imul
lock
popa
pop
lcall
fistps
mov
js
sbb
jae
pop
dec
arpl
mov
sub
adc
push
push
testl
cwtl
xchg
sub
inc
adc
das
rorl
cmp
mov
pop
sub
lret
mov
in
dec
mov
sub
inc
in
xor
test
ror
std
dec
int
or
fwait
mov
call
cli
dec
in
cmovl
pop
das
mov
dec
sbb
test
in
adc
add
sarl
mov
sbb
sti
aas
fwait
pop
push
adc
shlb
test
adc
mov
leave
aam
aam
js
fwait
test
into
push
shr
jns
sbbb
stos
xlat
mov
in
loopne
dec
jp
cmpsb
sub
iret
popf
insb
mov
test
sbb
pop
cltd
push
repz
stos
mov
mov
fsubl
add
fisubrs
jae
fdivrs
add
aam
mov
es
vpcmpgtw
and
movsb
sub
fwait
movsb
add
mov
xor
clc
pop
fstps
icebp
les
es
jb
lret
mov
mov
mov
test
xor
push
aam
and
dec
mov
les
fbld
push
ss
adc
mov
ds
sti
cwtl
jl
or
test
test
ret
aam
adc
jo
cmp
pop
dec
mov
xchg
or
push
cmp
mov
in
mov
pushf
jbe
lods
jge
int
cs
jns
cmp
inc
inc
push
iret
repz
mov
and
dec
xchg
lahf
popf
inc
jns
push
or
xor
sbb
fs
out
movsb
pop
dec
mov
popa
cmp
inc
mov
sbb
push
add
dec
dec
xchg
mov
inc
bound
shrl
rol
outsl
jmp
scas
pop
jne
ljmp
and
pop
ds
lods
jge
imul
mov
cmp
mov
sbb
bnd
nop
lahf
push
inc
or
mov
popa
or
inc
and
dec
mov
addr16
aaa
mov
adc
cmpsl
push
pusha
jb
daa
and
repnz
ret
cmc
pop
adc
adc
jmp
add
std
mov
movsl
negl
sbb
xor
xchg
mov
ret
lods
jle
ss
stc
xchg
bound
insl
bound
mov
or
mov
pop
divl
fisttpll
lcall
arpl
movsl
aas
lret
mov
xor
mov
mov
fmul
lock
adcl
repz
std
mov
rclb
icebp
add
push
dec
add
mov
loop
cli
xchg
out
in
into
filds
shr
loopnew
xor
sbb
loop
sti
mov
cmp
aam
xchg
rolb
push
cli
inc
cmp
divl
dec
adcb
sti
mov
std
cmc
mov
mov
pop
add
jmp
inc
jle
leave
adcb
push
inc
shlb
test
insb
cmpb
je
gs
or
iret
int3
sub
repz
add
ljmp
xchg
jns
inc
mov
aas
stos
out
jns
inc
jbe
ret
das
jmp
push
arpl
shrl
cwtl
inc
inc
mov
cmp
pop
cmp
cs
ja
sub
aam
bnd
fldt
fs
sti
cld
lock
in
inc
dec
stos
mov
mov
daa
repz
shl
pop
and
outsb
lods
sti
jle
sub
jbe
mov
fidivs
movb
cltd
daa
aas
xchg
std
inc
cmc
clc
jle
push
bound
lds
sti
inc
fidivrs
fldt
jae
push
jbe
aad
sbb
mov
jl
out
pop
sub
add
sub
push
pop
xchg
mov
mov
xchg
pop
push
push
push
mov
jne
lods
sbb
cld
dec
es
sub
lret
sub
mov
adc
shrb
cmpb
sysenter
mov
stos
pop
xrelease
mov
int
sar
push
mov
pop
sub
sbb
out
dec
ja
and
int
dec
jne
pop
data16
jg
pop
inc
mov
adc
push
hlt
mov
jnp
outsl
sub
je
inc
fidivrl
mov
sub
stc
fwait
xchg
jnp
cmp
xor
test
je
mov
mov
fdivr
dec
xchg
mov
lds
dec
paddusb
xor
cmp
sbb
xor
ss
cwtl
in
and
arpl
dec
cld
loop
fistl
add
or
testb
sub
push
push
add
xchg
jnp
nop
cmpsb
clc
inc
xor
pop
test
repnz
adc
push
popa
jns
out
cmp
data16
jb
iret
shll
fcoml
mov
stc
ljmp
sbb
jge
mov
pop
dec
cltd
flds
mov
call
jne
in
push
and
push
cmp
mov
shrb
ffree
enter
aas
jmp
add
xchg
imul
jns
or
ja
or
fidivrl
jns
bound
and
xchg
ret
fimuls
stos
movsb
pusha
mov
sbb
fiaddl
add
pop
repnz
ds
imul
in
scas
repz
int
and
fbstp
sbb
stos
jb
mov
mov
loopne
xchg
testl
xchg
rclb
mov
and
iret
mov
pop
pop
push
stc
sbb
enter
sbb
not
mov
ja
nop
lret
and
stos
roll
popa
jl
pop
adc
insl
sbb
adc
sub
outsl
xchg
xor
and
scas
fldenv
shrb
pop
rolb
fs
icebp
stos
movsl
aaa
mov
shld
mov
mov
jecxz
scas
xchg
mov
out
sub
movb
es
popf
lods
cld
fwait
repnz
jge
aaa
push
sbb
outsb
insl
aam
xchg
filds
repz
jle
adc
adc
inc
sbb
stos
lods
out
sub
test
jge
add
jae
cmp
jle
out
mov
jmp
mov
daa
add
mov
mov
cwtl
scas
or
in
in
mov
mov
pop
cmp
test
xor
xrelease
aas
iret
fistl
sbb
std
sub
fwait
dec
mov
icebp
pushf
loopne
lea
or
dec
hlt
lret
iret
andl
ret
pop
mov
inc
push
sti
jmp
jmp
add
xchg
jmp
clc
fnstenv
jmp
pop
in
into
xchg
xchg
sub
cli
push
mov
dec
cmpsl
push
js
and
imul
test
xor
out
pop
xchg
dec
mov
rorb
test
mov
leave
mov
push
sub
mov
pushf
lret
fcmovnu
mov
lret
pop
leave
iret
out
stos
fs
mov
add
repz
pop
ljmp
mov
insb
pop
lds
or
xchg
test
xchg
mov
sbb
inc
lret
xor
orb
cmp
jmp
adc
stos
cltd
xchg
movsl
lock
std
scas
inc
rcr
jne
mov
aaa
fldl
push
adc
cmp
cmp
loop
jge
mov
xor
rolb
loope
push
scas
cmp
fs
mov
and
fs
fstpt
jge
addb
xorl
pushf
add
ljmp
cmp
call
in
pop
inc
fcompl
xlat
mov
repz
sub
xchg
jmp
sub
rorl
mov
cmpsb
push
inc
cs
ss
cltd
dec
sbb
cmc
jb
and
add
cli
pop
out
rol
xor
mov
imul
stos
mov
pop
in
sbb
stos
mov
es
jo
mov
adc
mov
push
jb
out
adc
cld
and
adcb
inc
out
in
lock
pop
pop
ljmp
pop
pop
sbb
es
testb
aaa
loopne
call
push
ja
aaa
sbb
push
lods
imul
jb
jp
clc
aad
ss
push
mov
or
shll
je
and
ds
xchg
mov
xchg
into
jp
lcall
mov
add
pop
dec
in
jns
popf
mov
xor
mov
fsubrl
pop
jbe
test
mov
sbb
sti
xor
xor
cmp
fdivrs
jecxz
xor
xchg
dec
dec
jle
loop
sbb
daa
adc
adc
xchg
mov
data16
cmpb
outsb
or
push
ror
fcom
in
pop
jbe
mov
movsl
cld
mov
mov
adc
lret
aaa
push
lods
aas
pop
pop
jo
push
cmp
fmul
mov
dec
mov
sbb
cmp
je
jge
pop
pushf
mov
imul
leave
movsl
push
outsb
lret
test
jns
xor
push
clc
xchg
fdivr
in
push
jg
mov
rol
aas
aam
sbb
imul
scas
fmul
std
pop
dec
and
aas
dec
adc
push
insl
loopne
fbld
fwait
shlb
cs
lock
leave
lret
repnz
mov
test
insl
lock
xchg
cli
jne
add
test
and
xlat
arpl
sahf
push
cmp
ffree
add
push
jp
mov
fistps
jge
aas
call
xor
dec
jmp
pop
insb
xchg
jnp
lea
sub
add
inc
xchg
cld
and
les
jp
dec
pop
outsb
insb
xor
fwait
inc
jns
out
dec
shl
or
insl
fsubl
in
into
or
pop
adc
xchg
sub
push
push
pusha
adc
inc
int
dec
inc
dec
mov
ljmp
sub
daa
xor
jo
stos
jmp
push
fldenv
jns
outsl
mov
and
and
add
push
mov
loop
popa
bound
andl
or
jns
iret
xchg
leave
cs
sub
ret
or
adc
aaa
shr
out
sbb
daa
fdivp
aaa
icebp
adc
rclb
xchg
jecxz
mov
pushf
xchg
mov
insl
jmp
xchg
movsl
mov
in
ja
mov
das
jbe
idiv
fisubrs
adc
sbb
and
js
sbb
cmp
test
sbb
loopne
daa
test
test
dec
fldl
ret
sub
addr16
add
fs
das
jae
mov
fcmovbe
sbb
xchg
lret
add
fs
push
mov
fildl
push
notl
sub
inc
ret
and
mov
adc
enter
mov
jecxz
jne
loopne
hlt
into
pushf
dec
outsl
bound
mov
mov
std
enter
xor
add
outsb
mov
hlt
sub
cmp
cltd
sarl
xchg
fmull
loopne
and
lcall
and
mov
loope
pop
test
mov
push
in
in
or
and
and
cmpb
mov
pop
sbb
mov
icebp
pop
call
and
mov
or
out
sub
mov
mov
add
or
aad
cmc
dec
mov
jmp
mov
mov
push
aam
repnz
dec
xor
or
and
mov
jb
mov
jmp
out
or
pop
push
les
xor
in
sahf
mov
inc
sbb
mov
setge
push
das
push
push
mov
mov
es
dec
cmp
scas
test
or
ficoms
jmp
shlb
out
xor
jl
ja
fs
mov
aas
movsl
sub
or
inc
push
pushf
insl
shl
adc
mov
lods
adc
pop
mov
jbe
mov
out
jo
mov
or
jg
je
mov
mov
push
iret
popf
jo
cmpsb
push
repz
xchg
pop
jl
push
mov
mov
cwtl
test
cmp
adc
lods
and
and
repnz
mov
enter
adc
aas
mov
lahf
lds
push
xor
jo
into
jmp
lret
repnz
fnstsw
cmpsl
or
stos
mov
std
mov
mov
ja
fsts
xchg
out
mov
js
inc
dec
das
gs
mov
push
ret
popa
outsl
nop
sub
lods
push
mov
je
fsubrs
xchg
xor
or
mov
clc
lret
lret
out
add
scas
stos
aas
jp
aam
out
ljmp
bound
jbe
aas
jmp
add
xchg
mov
test
adc
js
imulb
out
mov
sbb
in
mov
or
xchg
sbb
in
xchg
out
dec
jb
lea
sbb
and
stos
or
sub
imull
jl
into
ret
sbb
mov
and
dec
sub
je
int
sbb
loopne
sub
enterw
or
sub
das
push
out
and
adc
push
mov
xchg
pop
push
jo
cmp
xchg
rcl
loope
add
lock
ljmp
pop
jg
sahf
test
jge
add
jl
jbe
ljmp
pop
pop
and
test
push
rol
aad
cwtl
loopne
imul
add
test
pop
inc
sar
in
push
adc
insl
loop
adc
ret
inc
pop
sub
outsb
rcr
movsl
out
ret
test
and
pop
cmp
ret
pop
push
xor
movsb
sub
push
mov
push
add
pop
push
adc
nop
out
jmp
sub
sub
adc
inc
and
addl
mov
dec
aad
xchg
in
lret
data16
dec
lret
adcb
out
js
in
fwait
rclb
pop
sub
repz
adc
add
or
add
and
repz
push
inc
add
sbb
sbb
push
mov
insb
xchg
jl
icebp
iret
push
lods
cld
test
icebp
jo
mov
arpl
shrb
idiv
fsts
loop
popa
mov
in
mov
loopne
imul
inc
mov
call
cwtl
aas
adc
inc
test
push
mov
dec
ljmp
sbb
aas
or
cmp
push
movsl
cmpl
xchg
mov
les
pop
dec
scas
sbb
xor
push
dec
mov
imul
je
subb
dec
and
repz
mov
inc
lret
notb
lock
rorb
cltd
lret
ja
enter
jnp
cmova
and
lea
and
adc
mov
jp
push
mov
lds
cwtl
popf
mov
lods
push
mov
mov
pop
mov
lods
lcall
cmp
dec
and
fdivs
movsb
xor
inc
inc
and
jbe
mov
mov
dec
mov
adc
loope
out
xor
scas
mov
scas
stos
mov
and
adc
and
and
add
lock
lret
or
add
imul
add
sbb
ret
mov
add
jecxz
push
and
jnp
push
jmp
aad
js
mov
mov
jnp
mov
xchg
lahf
jle
cmpsl
dec
sarb
mov
aam
loop
xor
scas
jae
test
repnz
push
mov
repnz
cwtl
ret
cli
fists
ja
dec
mov
adc
test
es
ljmp
outsl
cmpsl
jmp
lret
mov
adc
sti
hlt
out
aas
clc
cmp
xchg
aas
addb
push
lock
push
pop
inc
cld
test
stc
adc
ds
and
inc
aad
or
cmc
clc
push
fwait
dec
outsl
imul
ret
mov
pop
loopne
sti
popa
and
jne
scas
jno
jae
pop
addr16
loope
xor
cmp
xchg
sbb
xchg
inc
adcb
push
xchg
lods
test
pop
popa
daa
jmp
xor
insb
fsub
repnz
mov
adc
adc
sarb
dec
cmp
sarb
adc
ret
mov
dec
inc
lea
es
sbb
inc
inc
xor
adc
lock
loopne
shlb
in
hlt
addb
pusha
and
xor
inc
xor
adc
lock
loopne
shlb
in
hlt
addb
pusha
and
xor
inc
xor
adc
lock
loopne
shlb
mov
add
adc
and
xor
inc
xor
adc
sarb
dec
push
shlb
sbb
or
lcall
pop
lock
or
push
mov
lcall
out
idiv
cli
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
cli
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
fcomip
test
test
sbb
outsl
push
roll
xchg
int3
dec
fmull
inc
cltd
ret
jmp
mov
jno
pop
je
mov
dec
addr16
repnz
minps
shll
repz
aaa
repz
out
loop,pt
add
and
outsl
shl
loope
lar
fiadds
je
sbb
imul
adc
das
inc
dec
les
mov
pop
dec
stos
add
sub
mov
cli
int
notl
addr16
das
lcall
jp
loop
out
sti
cli
js
xchg
cltd
mov
imull
add
mov
stos
xchg
mov
jne
dec
in
jg
cmpb
sti
ret
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
cli
mov
inc
pop
je
or
aas
push
sub
fisubrs
mov
loop
jecxz
movsb
xchg
xchg
xchg
pop
push
pop
bound
das
or
cmp
add
fsubr
test
orl
xor
dec
jne
jb
dec
pop
ja
inc
jp
mov
mov
imul
cli
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
cli
xlat
or
pop
pop
cmpsl
ljmp
sbb
mov
sub
out
lret
cmp
push
jl
loope
ret
pop
mov
dec
test
push
imul
cmpsl
stos
shlb
lods
in
mov
push
cmp
sbb
lcall
xor
sbb
pop
fstpt
inc
push
and
jl
lods
mov
and
aaa
and
mov
xchg
push
mov
btr
jle
mov
push
std
push
push
xchg
pop
push
add
mov
mov
gs
fnstcw
lods
sub
dec
xchg
ljmp
repnz
cltd
jmp
inc
jmp
xchg
pop
test
pop
mov
adc
or
push
lret
pop
sbb
rclb
aas
adc
add
mov
repnz
mov
shl
sub
adc
lahf
cli
add
and
shlb
and
mov
pop
ret
jnp
mov
arpl
mov
xchg
push
pop
shrl
mov
xchg
movsb
call
inc
stos
adc
aad
inc
es
mov
lret
mov
test
inc
cli
test
mov
jg
and
mov
or
pop
adc
inc
int
xor
jecxz
lods
enter
and
mov
jne
cmc
and
mov
pop
and
dec
sub
lret
ret
fnstsw
push
clc
xlat
mov
movsl
inc
sub
test
lock
sbb
scas
sarl
push
xor
push
rorl
xchg
xchg
fwait
xor
fsubp
adc
inc
pusha
data16
int
sub
pushf
popf
jns
adc
lods
xor
mov
push
add
xor
inc
popf
cmp
sub
ljmp
rcr
test
push
jb
in
or
jo
jo
xchg
fiaddl
cmp
dec
inc
sub
ret
mov
js
dec
sub
nop
out
mov
pushf
xorb
xchg
leave
test
movsl
jo
adc
sbb
sti
or
mov
mov
fdivs
gs
jne
sbb
rcrb
and
popa
or
pop
push
cmp
daa
and
sti
and
jp
pop
sbb
xchg
xchg
loop
popf
xor
scas
movsb
push
aam
shlb
das
dec
mov
pop
outsb
mul
push
sbb
imul
ds
jb
lahf
xchg
aad
popf
adc
fs
daa
mov
loopne
iret
std
daa
in
seta
in
inc
in
pop
cmc
cltd
cmp
leave
sbbb
in
clc
enter
add
sbb
inc
pop
addr16
or
jno
in
cmpsl
cs
mov
cmpsb
loope
lea
pop
cmp
ret
mov
sub
fdiv
jmp
xor
jnp
fwait
bound
adc
add
mov
or
shll
fldt
in
xchg
cltd
test
dec
sub
add
and
pop
fistpll
lahf
sbb
xchg
aaa
aas
mov
test
clc
dec
mov
xor
pop
fdiv
enter
mov
pop
cmp
jl
xchg
aam
inc
mov
sub
pop
inc
jl
cwtl
pop
add
fld
cmpsb
ds
ljmp
rorb
int3
std
nop
aam
test
out
dec
push
or
pushl
sub
insb
mov
ljmp
adc
mov
dec
arpl
cwtl
icebp
push
test
inc
xchg
imul
mov
test
xchg
or
pop
cltd
lret
push
mov
nop
xor
fcompl
inc
cmpb
jo
xor
cmp
out
sbb
lods
or
add
fcmovnb
xchg
inc
jbe
cltd
jge
inc
orl
or
stc
and
jbe
in
mov
inc
jno
sbb
sbb
add
pusha
daa
add
imul
sub
push
mov
jnp
ret
lcall
ss
adc
es
mov
push
aas
xor
stos
mov
cltd
into
and
cmp
loop
fnsave
insb
bswap
and
pop
inc
push
ljmp
mov
or
in
fsubl
lds
push
leave
xchg
js
shll
test
mov
adc
popf
test
or
mov
daa
outsl
out
call
outsb
out
adc
imul
test
movsl
jo
cs
stc
nop
addl
sbb
ljmp
sbb
jb
adc
out
repnz
sahf
insl
push
adcl
in
test
sbb
adc
shll
js
add
iret
jae
mov
lods
mov
and
loope
sbbl
lret
and
fcoml
cmp
inc
xor
mov
lea
jbe
gs
in
ror
add
push
mov
xor
test
xchg
arpl
push
js
adc
mov
hlt
cmpsl
les
in
push
ret
jae
adc
xchg
sbb
xor
or
xor
mov
cmc
adc
or
ss
mov
out
out
jg
mov
decb
mov
clc
jmp
adc
mov
jle
scas
or
je
xor
mov
pop
in
lds
inc
shlb
xorl
or
enter
cmp
jge
loop
xchg
std
shr
call
adc
inc
lret
xchg
pusha
add
lahf
and
mov
sti
aas
fisttps
cmc
push
mov
xchg
xchg
scas
pushf
sbb
movsb
jae
sahf
cmpsb
test
cs
xchg
into
xor
push
mov
add
sbb
adc
sub
jg
dec
sysexit
stos
push
xchg
fildl
jo
push
imul
xor
pop
mov
fistpll
mov
js
mov
push
test
out
fistps
inc
movsl
andb
push
mov
in
or
stos
sbb
rcll
fwait
out
test
xchg
jno
mov
bound
xchg
and
adc
xor
and
movsl
cli
aad
push
cs
popa
fstpt
mov
fbld
mov
jmp
addr16
dec
arpl
mov
xchg
jmp
dec
arpl
test
outsb
pop
pop
or
pop
mov
das
lods
lcall
ret
js
dec
mov
jmp
repnz
das
aaa
add
push
push
adc
jge
jle
jecxz
cmp
cmpsb
ds
aam
push
ljmp
push
push
mov
inc
xchg
insb
dec
sbb
jle
or
outsb
dec
leave
push
out
mov
dec
mov
cli
cwtl
loope
out
sub
xlat
scas
lret
in
nop
sub
mov
jg
sbb
mov
es
les
out
bound
mov
enter
jl
sti
in
xor
mov
fnstsw
xchg
call
pop
jp
aas
lea
adc
call
jmp
jno
xor
push
lods
clc
xchg
sbb
out
sub
xchg
cmp
sub
inc
or
repz
xor
je
jle
ret
insl
jbe
and
sub
inc
mov
inc
mov
iret
add
dec
sbb
push
in
ret
or
pusha
or
ds
xchg
adc
fidivrl
rcrb
cmp
fwait
test
scas
sbb
cmp
mov
pusha
call
test
leave
rcl
test
out
push
call
dec
and
lahf
xchg
arpl
test
adc
xchg
mov
movsb
scas
mov
inc
sub
dec
iret
push
jecxz
xchg
ret
pop
push
enter
mov
loope
cmp
lods
pop
mov
jl
sbb
repz
jae
jnp
pop
inc
xor
addr16
dec
add
cli
push
mov
xorb
sub
popa
xor
movsb
int3
or
pop
mov
push
inc
mov
xor
jne
inc
int
jle
mov
out
xchg
cmp
fldln2
push
outsb
cmpsb
lods
sahf
xchg
setge
jno
insl
es
ret
add
push
mov
add
out
mov
push
xor
fsubp
push
insb
push
bnd
bound
pop
shl
inc
gs
sub
mov
mov
sub
push
fidivs
fstpl
cmp
cmc
mov
and
bound
insb
inc
xchg
cld
dec
icebp
ss
push
sbb
or
rcll
mov
sbb
jno
aaa
faddp
rcrb
pcmpeqb
add
mov
pushf
jno
sbb
outsb
cmp
push
imul
cmp
in
stos
mov
xchg
leave
nop
sbb
jb
fwait
jno
or
or
std
inc
cs
add
loopne
mov
push
lods
jp
test
lods
movsb
mov
sbb
mov
xor
das
push
scas
insb
mov
sub
jno
mov
dec
mov
jb
enter
test
inc
out
je
sub
push
stos
adc
add
scas
mov
cli
jl
inc
mov
popf
add
ljmp
sub
adc
bnd
jne
mov
repnz
cmpsb
jns
sbb
mov
movsl
pop
stc
hlt
sbb
xlat
js
jp
js
lock
js
insl
mov
mov
test
mov
adcb
in
or
push
iret
xlat
xchg
dec
mov
jnp
pop
das
std
or
cli
inc
jb
mov
stos
push
adc
jne
hlt
and
pop
je
inc
rcrl
in
scas
mov
xor
jg
in
push
cwtl
ja
addr16
ja
sub
xchg
adc
fcomps
sbb
leave
test
and
dec
dec
cld
lcall
lods
mov
je
add
push
sbb
enter
inc
repz
adc
cmp
xlat
adc
push
push
in
int
cmp
push
into
pop
fimull
and
mov
sub
in
scas
fistps
sub
mov
jo
sbb
xor
cld
fnstcw
mov
mov
jae
and
add
push
bound
pop
hlt
jns
aaa
jae
daa
test
sbb
mov
xchg
sbb
call
cmp
push
shlb
adc
mov
je
imul
loope
and
jge
dec
js
dec
aas
fnsave
adc
sbb
xor
movb
and
rcrl
jle
mov
mov
insl
pusha
mov
mov
bound
dec
sub
in
aam
int
fldl
cmpsb
pop
pop
xor
icebp
aas
pop
lds
addr16
xchg
add
test
test
loopne
lahf
test
pushf
xchg
xor
dec
push
out
jg
icebp
popf
xor
adc
fiadds
xor
sub
inc
pusha
lea
sahf
inc
inc
aas
xor
stc
nop
lret
xor
pusha
xchg
scas
std
bound
jmp
scas
mov
mov
xchg
into
pop
mov
and
pop
xchg
movsl
cmp
cmpsl
dec
sbb
aam
fildll
outsb
xor
lock
ja
push
outsb
pushf
xchg
ja
xor
and
test
icebp
mov
into
into
pushf
fdivrs
mov
leave
adc
adc
xor
cld
adc
dec
push
mov
shrl
loop
ss
lods
das
clc
jge
scas
sti
loope
pushf
jb
mov
in
insb
sarl
leave
mov
sub
sub
adc
and
lahf
push
or
xchg
inc
movhps
imul
loopne
lcall
fidivl
popf
pusha
stc
fisttps
xchg
fs
jnp
mov
fcomp
gs
ror
nop
ret
cwtl
xchg
loope
xor
or
dec
cli
popa
movsb
sahf
mov
inc
pushf
loope
arpl
test
cmpb
fstps
mov
out
shl
add
scas
loop
clc
dec
add
jge
lcall
fdivrl
jp
or
aam
inc
lock
andb
add
in
xlat
in
xor
mov
jecxz
sbb
mov
fcompl
adc
loope
pop
jmp
mull
jecxz,pn
out
and
jmp
fimull
xor
jo
xchg
pop
mov
gs
pop
adc
sbb
mov
subl
scas
lods
out
hlt
test
notb
loopne
pop
jo
inc
jae
call
jo
int3
pop
xor
cmp
cmp
clc
in
push
and
sbb
fsubrl
xchg
outsl
cld
cmc
push
idiv
repz
loope
dec
xchg
jg
push
push
dec
jb
mov
ret
cmp
dec
insb
push
aaa
lods
xchg
cmp
cmp
fxch
fdiv
adc
xchg
es
add
push
xor
in
jo
jl
pop
into
sbb
adc
mov
cmp
sub
jnp
fists
xchg
cmp
push
jmp
fstps
lea
push
dec
ficomps
or
xorl
push
pushf
push
mov
xchg
sbb
sbb
stc
mov
xchg
ja
fs
iret
xchg
in
aad
sub
or
das
jl
push
int
pop
movsb
xor
sahf
repz
in
sub
sub
out
scas
xchg
cmpsb
call
ret
test
ret
or
mov
enter
push
jbe
xchg
mov
out
icebp
add
cmp
into
add
sub
pop
push
ss
mov
je
add
cmp
jno
popa
jecxz
test
mov
or
lods
jns
cmp
fdivrs
outsl
movsb
push
andl
or
dec
push
or
xchg
scas
loop
mov
popa
es
pop
jle
xchg
adc
push
dec
rcrb
sbb
mov
sbb
mov
loop
xchg
jbe
inc
xchg
lahf
sbb
shl
cmp
push
xchg
mov
aas
and
orb
jnp
xchg
xor
push
or
js
mov
push
mov
xor
mov
fldt
ja
mov
repz
nop
aaa
lods
icebp
or
shll
outsb
adc
imul
mov
gs
cmp
dec
stos
mov
pop
fstl
cmp
sbb
movsb
nop
inc
stos
mov
adc
imul
mov
std
push
sbb
add
stos
stos
mov
pushf
xor
mov
xchg
push
mov
jg
mov
mov
xor
daa
adcl
in
lret
mov
das
in
inc
or
cmp
das
dec
test
xchg
xor
or
xchg
push
jp
pop
cltd
ret
mov
lds
jmp
cs
cs
sub
enter
push
push
aad
pop
push
out
out
loopne
insl
adc
iret
in
mov
and
jne
jl
xor
and
imul
sub
aam
cmp
data16
mov
push
and
fs
insl
inc
xchg
lret
and
mov
nop
test
lret
sahf
jbe
leave
aaa
pop
mov
in
jnp
fwait
jle
lcall
push
mov
mov
push
testl
imul
lret
dec
sbb
pop
popf
clc
stos
jae
sbb
cmpsb
in
add
jns
mov
or
sub
negb
mov
in
repnz
lods
push
pop
int3
mov
add
outsl
das
adc
mov
test
mov
aas
lret
xchg
sahf
lea
and
add
pop
loope
aad
fsts
pop
sti
or
xchg
int
lret
shl
or
ss
inc
add
inc
jnp
xchg
rcr
rcrb
cmp
add
dec
and
sbbl
in
fs
mov
cmp
push
push
loop
in
push
add
mov
into
mov
mov
mov
mov
mov
fcoml
jg
add
add
xchg
mov
stc
mov
xor
lock
adc
jns
pusha
and
rolb
push
mov
mov
sub
gs
mov
inc
and
aam
mov
mov
pop
jle
adc
add
jg
cmp
ds
je
punpcklwd
lods
ja
mov
jne
out
and
push
gs
das
jle
sbb
and
xlat
pop
inc
push
sbb
test
adc
test
pop
cmp
sbb
lret
aam
mov
lret
idivb
ret
pop
int3
xor
daa
jne
dec
xchg
sub
lret
int
ja
scas
and
fcomp
fsubs
sub
pop
xor
pop
push
shlb
rcll
mov
insl
mov
add
mov
sub
jle
mov
icebp
sahf
mov
das
inc
lods
outsb
int3
jp
xchg
js
jmp
adcl
sub
cld
dec
test
std
xchg
mov
sub
or
mov
imul
push
xor
lock
pop
dec
pop
jmp
ror
call
push
aas
sbbl
jl
sub
jle
adc
cmp
pop
std
rolb
outsl
or
inc
xchg
sub
adc
pop
sub
push
int3
movb
sbb
ret
out
jle
xor
call
out
data16
fiaddl
dec
jae
sub
push
jmp
pop
nop
sub
idivb
dec
movsb
test
out
push
xor
fcoml
stos
or
mov
mov
add
outsb
mov
lahf
xchg
addl
ret
pusha
inc
xchg
adc
jno
outsl
scas
pop
and
sbb
add
les
dec
aaa
faddl
stos
mov
jo
sbb
je
nop
push
in
std
xlat
or
adc
push
dec
mov
jmp
lcall
fwait
push
out
cmp
and
pusha
xchg
cltd
clc
dec
hlt
sub
ret
sbb
insl
ret
lds
adc
adc
mov
test
or
add
out
rol
roll
jno
mov
in
inc
and
push
xchg
movsl
mov
shrb
imul
cltd
mov
adc
xor
inc
in
fbld
popf
pushf
mov
sbbl
stos
fs
sub
push
mov
sub
cmp
sub
adc
xchg
aam
nop
xchg
mov
pop
push
xor
mov
hlt
jns
mov
or
insl
fnstenv
cs
adc
outsl
dec
scas
int3
mov
jns
mov
leave
mov
mov
shll
jmp
add
rol
rolb
pop
add
popa
pop
sub
mov
pop
dec
nop
mov
pop
shrl
pusha
and
lds
into
or
in
ja
test
lret
cmp
jge
cmp
and
outsl
insl
fimull
aas
leave
jmp
add
ret
pusha
in
mov
xor
sbb
stc
lods
jmp
and
lcall
sbb
jo
dec
js,pn
test
adc
jge
mov
mov
sahf
pop
movsl
pop
or
jae
cwtl
lods
fwait
cmp
jb
jmp
ror
pop
rcr
mov
aaa
fwait
mov
dec
sub
int
aad
jne
xchg
mov
xor
stc
jmp
xor
push
mov
adc
inc
andb
mov
xchg
rcrl
ficoml
xor
pop
add
jnp
or
dec
jbe
in
xchg
std
sbb
push
je
test
pop
mov
leave
fiaddl
inc
and
pop
xchg
mov
lret
inc
pop
rcll
jae
iret
jmp
les
popa
and
mov
push
adc
pop
push
js
repz
leave
add
and
sub
icebp
imul
shlb
jb
inc
mov
shr
mov
outsb
int
xchg
orl
mov
pop
push
outsl
pop
cmp
icebp
dec
xorb
movsl
sub
sahf
or
shll
frstor
xchg
mov
iret
je
pop
shlb
jns
and
xchg
mov
pushf
idivb
shll
pushf
jb
mov
dec
test
pop
stos
fildl
pusha
xchg
jmp
xor
inc
movsb
movsb
adc
cmpsb
imul
xchg
push
mov
aaa
add
inc
div
cvtdq2ps
sbb
pop
push
inc
mov
test
ljmp
pop
jnp
mov
or
mov
mov
mov
sub
lahf
sbb
sub
std
pop
into
push
adc
dec
fs
xlat
js
arpl
fdivs
jge
or
negl
xor
xchg
mov
sti
into
shll
mov
ds
aaa
fucomip
in
cmp
cwtl
add
clc
adc
lret
lahf
pusha
insl
and
je
xchg
xlat
jb
adc
dec
push
and
js
sub
mov
jl
dec
jle
jb
mov
insb
adc
ror
mov
push
ret
and
imul
adc
jb
cs
push
leave
cmc
jp
xlat
pop
pop
outsb
mov
push
jp
lock
ret
lahf
out
shrb
lock
andl
jge
xor
mov
add
dec
pop
dec
add
inc
subl
add
fwait
mov
aaa
xor
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
cli
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
cli
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
imul
sti
xlat
or
sbb
sub
cmp
dec
addr16
ja
inc
jp
mov
mov
or
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
data16
pop
test
test
cmp
fcompl
out
idivb
push
mov
inc
stos
push
lcall
push
fisubl
lret
sub
sbb
add
jp
pop
xchg
pop
cmpsb
dec
mov
inc
mov
andb
jecxz
repnz
ret
ss
or
inc
xorl
rolb
rorl
lds
lcall
stc
sbb
shrl
xchg
mov
imul
pop
jnp
cmp
inc
loop
ss
rclb
ljmp
add
out
hlt
jecxz
xchg
jp
pop
push
mov
inc
push
push
xchg
imul
cmc
insl
aad
and
xchg
jp
xchg
stos
pop
sub
mov
jae
and
cs
mov
sub
das
and
jae
xchg
push
rcl
dec
mov
xchg
test
add
ja
cmp
in
ret
sbb
cli
testb
pop
push
push
pop
dec
inc
fstp
jne
add
lods
ret
cmpsl
shlb
pop
or
xchg
cmp
pop
cmpsb
dec
dec
jae
mov
lcall
push
fisubl
shll
and
xor
add
adc
bound
dec
lock
inc
iret
das
jmp
aaa
mov
bound
mov
iret
imul
daa
rcl
sub
cmp
cs
adc
fidivl
sbb
dec
movsb
sbb
add
sub
loop,pn
pop
movb
xor
push
fisubl
lret
sub
sbb
or
jp
push
pop
cmpsb
dec
mov
inc
stos
push
lcall
push
fisubl
lret
sub
sbb
or
jp
push
pop
cmpsb
dec
mov
inc
test
or
mov
xrelease
sbb
push
notb
std
adc
loope
mov
lods
xchg
leave
add
das
test
test
and
icebp
gs
adc
and
push
repz
aaa
fmuls
test
in
add
or
cmp
fnstsw
cmpsl
sbb
inc
enter
lods
push
sahf
out
test
popa
lds
test
mov
inc
nop
jge
push
dec
xchg
add
mov
cmc
dec
jae
pop
mulb
xchg
add
movsb
inc
imul
movsb
sub
add
push
fwait
pusha
lret
pop
sub
dec
jns
xor
cmpsb
clc
xchg
xchg
inc
aam
mov
xor
jmp
in
mov
mov
addr16
insl
jge
fadds
jecxz
out
dec
push
fwait
sti
xchg
jno
lea
jg
xchg
xor
and
lcall
stc
dec
push
mov
dec
movsb
cli
xor
out
cmp
xor
out
shl
fcmovnu
push
mov
cli
lods
lea
xor
pop
push
aad
aam
cmp
cwtl
loop
pop
push
xor
jbe
insl
inc
push
out
add
jb
cmc
sahf
jns
fdivrs
shl
hlt
or
ret
mov
dec
mov
dec
add
out
inc
mov
xchg
sub
subl
and
and
xor
cmp
loopne
pop
xchg
sub
jne
add
test
mov
mov
xor
mov
out
arpl
xor
xchg
xor
mov
ret
aad
test
fdivs
shll
nop
jg
mov
mov
aaa
inc
les
dec
into
sub
out
jge
js
hlt
out
popa
cmpsb
add
push
hlt
cmp
hlt
nop
cmp
in
outsb
in
out
testl
inc
movsl
leave
pop
xchg
mov
imul
fidivrl
call
mov
adc
test
arpl
or
scas
push
inc
fcomip
lods
pusha
inc
sub
or
std
jnp
sub
sti
xor
mov
mov
arpl
xchg
lcall
insl
mov
in
inc
dec
xor
mov
ret
jb
insl
leave
lret
loopne
mov
push
sub
cmc
pop
dec
lret
fbld
or
pop
popf
pmaddwd
cmpsl
sub
ljmp
dec
incl
test
js
pusha
test
dec
lods
mov
es
popf
xor
add
xchg
jecxz
pushf
in
pop
cli
outsb
bound
dec
sbb
rcrl
ljmp
rorb
lock
lcall
sbb
jle
sbb
cmp
scas
je
mov
mov
es
dec
lods
sub
xchg
push
cwtl
in
lea
std
out
cwtl
adc
inc
insb
lret
push
scas
aad
cmp
and
add
pushf
push
and
and
repz
dec
pop
sbb
arpl
jl
cvtps2pd
sub
xor
xor
push
xor
js
pusha
cmp
stos
cli
stos
jns
addr16
mov
and
xchg
insl
and
es
and
movsl
mov
into
add
xor
aaa
sarb
call
int
mov
fwait
and
inc
add
idivb
lret
jno
in
jge
aas
push
rcll
sbb
ss
push
mov
loop
cs
int
mov
imul
cs
lahf
repnz
or
xor
testl
sub
and
leave
out
push
lea
fildl
jg
cmc
cmc
cltd
xor
and
outsl
lea
mov
dec
lret
cwtl
xlat
pushf
cmp
stos
cld
jns
test
pop
sahf
or
outsb
test
aam
sbb
imul
xchg
xor
rol
imull
push
in
decb
or
or
cmp
pushf
mov
jb
out
xchg
rcrb
jp
xor
sub
stos
je
fucomi
and
popl
loop
stos
inc
jno
movsb
leave
pop
or
inc
shr
inc
and
mov
stos
aas
jno
mov
xchg
jae
cmp
cmp
cli
or
mov
mov
add
fwait
jmp
dec
pop
ss
stos
xchg
push
scas
or
mov
push
sub
rorl
arpl
dec
mov
jge
testb
or
insb
or
push
adc
in
or
jg
mov
roll
nop
mov
nop
sub
inc
arpl
je
cmp
jecxz
lods
mov
in
pop
in
mov
out
mov
mov
fldenv
and
mov
lret
inc
loopne
ja
fisubrl
pop
ja
add
dec
sbb
dec
arpl
loopne
cmp
and
bnd
add
push
inc
sahf
xor
adc
icebp
mov
lret
and
inc
lods
pop
inc
mov
jnp
jp
fldcw
rcrl
mov
stos
ret
imul
out
je
dec
fdiv
fsubs
popa
sub
inc
push
dec
out
pop
push
es
push
fstl
jo,pn
sar
in
divb
ljmp
pop
iret
repz
inc
loop
push
jg
out
ss
xor
fwait
pop
xchg
jg
js
je
xor
mov
jb
or
ljmp
arpl
pop
adc
mov
imul
xor
mov
dec
sbb
mov
lods
mov
fldcw
bound
ret
mov
jnp
outsb
sbb
adcb
inc
xlat
push
xor
jno
mov
xor
test
cltd
lcall
fisubrl
mov
fcomps
stos
sahf
push
ret
cmp
pop
or
xchg
pop
fbld
push
cwtl
shrb
add
addl
mov
ja
sub
mov
sbb
js
cmpsb
ljmp
popa
mov
mov
pusha
in
das
jle
cmpsb
fwait
mov
mov
js
pop
cwtl
mov
movsl
je
rorb
cld
push
xchg
insl
mov
push
push
fldl
cwtl
sub
cltd
lock
xchg
or
into
jnp
mov
mov
pop
ljmp
mov
lcall
jo
stos
in
jge
pop
insb
aas
lds
xchg
add
pusha
sbb
loope
dec
mov
sbb
jp
rol
loope
inc
cmp
imul
aad
imul
xchg
addr16
sbb
scas
pop
lcall
xchg
push
ds
jnp
inc
cmpl
sub
fsubr
ret
es
pop
lock
add
in
in
mov
hlt
imul
push
popa
loope
sub
inc
call
std
fdivs
push
in
stc
jge
aas
hlt
out
pop
popl
adc
mov
das
loop
and
movsb
outsl
imul
jg
mov
test
xor
and
push
fwait
dec
or
jp
xor
sbb
out
adc
outsl
adc
ret
movsb
hlt
push
cmc
lds
inc
and
filds
sub
xor
push
xchg
hlt
pop
dec
popa
test
insl
fcmovu
pop
mov
pop
negb
fs
fwait
nop
bound
sbbb
mov
fistpl
jns
push
lret
xchg
pop
fs
mov
xchg
je
mov
push
in
mov
and
mov
test
bound
jecxz,pt
add
mov
jbe
shrl
ss
jp
cwtl
jle
xchg
xlat
dec
shll
pop
push
or
mov
je
mov
pushf
aad
fcoml
mov
xor
ret
lds
push
add
mov
clc
jmp
mov
popa
fldt
mov
and
pop
icebp
cli
cmp
mov
and
bound
lret
pop
sahf
stos
imul
mov
scas
or
and
lret
jnp
and
sub
in
or
xor
das
gs
sbb
and
call
out
mov
push
repz
mov
add
jo
mov
inc
lods
pop
jp
adc
jns
inc
xor
test
dec
pushf
in
lea
lods
sbb
xchg
and
xchg
mull
pop
mov
sub
jmp
jbe
lea
cmp
adc
rclb
ret
cmp
mov
push
jl
aas
xor
mov
push
sub
pushf
mov
je
fimull
jo
jb
in
sti
cli
fcomps
jbe
lret
mov
call
out
xchg
bound
push
ds
cltd
ret
lret
jecxz
mov
sub
mov
or
jle
mov
sbb
inc
pop
das
and
xchg
pop
inc
adcb
cmp
test
clc
imul
orb
add
out
je
into
movsl
lea
aaa
in
mov
scas
fidivl
pop
sbb
add
out
xlat
push
test
push
call
das
je
xor
lea
orl
lret
out
adc
mov
push
mov
out
cli
lea
jle
ds
mov
and
jne
in
scas
mov
jne
jns
adc
xchg
aam
xchg
sbb
flds
sbbb
adc
push
ja
dec
jns
pop
scas
loopne
outsl
mov
lods
sbb
mov
and
jle
xchg
leave
xchg
mov
xor
dec
adc
push
push
mov
jo
int3
push
loop
adc
cld
xlat
xchg
into
pop
lods
rclb
sub
test
push
cmpb
pxor
cld
das
fucomip
cmc
adc
pop
cmc
cmc
xor
jp
clts
shlb
fsubrp
sub
push
adc
push
popa
push
mov
inc
cltd
jmp
jp
or
negl
pop
repz
loop
movsb
sbb
push
push
cmc
in
je
cmc
or
inc
fstpt
in
adc
jnp
mov
cmpsb
fidivs
enter
pop
testl
cmp
ljmp
pop
fdivrs
or
push
cmpsb
fnsave
mov
pusha
and
call
in
sub
pushf
je
fwait
popf
dec
mov
icebp
daa
mov
pop
in
sbb
ret
push
push
jbe
xchg
sbbl
adc
std
andl
hlt
inc
adc
jnp
xchg
repnz
fcompl
dec
shl
xor
mov
lock
or
mov
sbb
mov
aad
fcomip
nop
push
into
add
mov
cmp
aas
xor
in
jne
cmp
aas
mov
imul
pop
pop
imul
dec
out
in
scas
jge
into
fadd
jle
outsl
jp
adc
cmp
lret
xor
jge
pop
jne
andb
mov
clc
xor
push
call
xor
inc
push
jb
adc
dec
and
cwtl
cltd
jo
xor
pop
adc
imul
jmp
ret
xor
inc
jge
xchg
xor
push
xchg
sub
lea
mov
jnp
fists
pop
dec
ja
xor
cltd
jns
pop
lods
jge
ja
stos
cmp
clc
jge
cmp
lcall
xor
jg
sub
mov
cmp
dec
jbe
stos
mov
inc
test
and
ds
mov
ficoms
stos
fdivrs
mov
cltd
sub
bound
dec
mov
jns
and
mov
ljmp
jmp
inc
or
push
push
dec
movsb
fdivl
test
jo
lock
lret
mov
mov
xchg
sub
pusha
xchg
dec
mov
in
mov
das
arpl
mov
pop
fimuls
add
les
sub
mov
mov
movsb
jp
sub
xchg
sub
and
xchg
lock
daa
add
cmpsb
call
into
mov
pop
cmp
cwtl
sub
imul
int
fcomps
jns
out
sub
ret
and
mov
mov
push
push
sbb
xor
in
and
dec
push
push
adc
pop
bound
andl
mov
pop
les
mov
scas
lret
ss
sahf
enter
cld
sub
inc
lret
mov
call
test
rcrb
push
or
addr16
ret
xchg
pop
mov
sbb
mov
pop
shlb
pusha
adc
std
push
outsb
lahf
mov
scas
addl
pop
jne
pop
add
loope
imul
or
out
fisttps
inc
xor
mov
loop
fnsave
loope
jp
mov
dec
test
leave
adc
in
hlt
mov
jl
sub
xchg
push
dec
cs
int3
shll
jl
push
sub
inc
mov
idivl
imul
dec
daa
pop
outsl
pusha
inc
sti
cld
pop
sub
push
xchg
insb
outsb
faddp
mov
xchg
std
pop
test
popf
rorb
testb
jg
pop
and
pop
push
stos
jmp
inc
fsts
jp
roll
or
push
pushl
out
call
in
fidivrs
or
repz
fildl
lret
sub
scas
mov
loope
lods
hlt
out
xor
ds
mov
ret
cli
leave
ljmp
cmc
fdivs
cli
sbb
inc
lahf
lds
addr16
sub
rcll
fiadds
test
fsubs
hlt
inc
les
mov
push
or
into
and
into
stc
sub
sbb
sahf
pop
push
les
xchg
sbb
movsl
xor
lock
movsl
loope
mov
jp
loop
test
ljmp
decb
lods
gs
pop
imul
jbe
cld
sbb
outsb
mov
repz
jmp
ret
jle
int3
in
out
jmp
jl
imul
sbb
clc
int
cmp
sub
clc
sub
icebp
xor
cmpb
shll
xlat
es
lods
jmp
dec
jle
jnp
push
lods
adc
push
pop
inc
push
test
shl
jae
mov
bound
iret
push
fnstcw
push
push
lods
and
aad
xchg
adc
xchg
ds
stos
mov
int
cmp
or
push
fdiv
cmp
jmp
lds
lods
pushf
orl
jmp
dec
jecxz
sbb
pop
dec
pusha
test
jecxz
adc
push
or
mov
ficomps
cmp
add
aad
addr16
roll
insl
dec
or
inc
xchg
push
sarb
stos
cmp
mov
outsb
enter
push
inc
sbb
hlt
sahf
gs
in
push
es
insl
dec
gs
aaa
mov
jbe
ss
add
ja
pop
ljmp
dec
pop
and
or
daa
sahf
xchg
divl
outsb
test
outsl
lret
fstpt
scas
std
or
aas
adc
or
leave
mov
mov
std
push
pop
cmc
mov
mov
jp
and
cli
test
xchg
stos
mov
fsubp
cmpsb
test
ror
in
and
popf
mov
cmp
or
push
mov
es
fnstcw
pop
mov
add
jo
and
or
jmp
pop
or
inc
mov
aad
xor
xchg
mov
xchg
jle
lods
inc
out
and
cld
sub
xor
xchg
xor
sub
jbe
ret
cmp
testb
cmp
pop
outsb
xor
mov
movsb
lcall
popf
add
xor
mov
std
sub
inc
jge
insl
aaa
inc
insl
jl
stos
loop
push
mov
dec
push
inc
dec
ds
pop
cli
fs
testb
sbbb
pop
stos
and
push
adc
je
mov
mov
insb
mov
filds
out
loop
sbb
pop
lds
bound
push
aas
add
mov
push
mov
jbe
testl
fs
or
add
xchg
mov
jp
pop
out
cmp
ficompl
dec
in
xchg
sbbl
mov
das
xlat
leave
xor
adc
popl
jecxz
and
pusha
lods
mov
leave
add
mov
test
cli
push
in
in
xor
outsb
outsl
ds
fucomip
jl
and
mov
sub
stos
pop
dec
imul
push
adc
add
js
xchg
sti
dec
dec
ret
xchg
push
out
cwtl
in
leave
dec
daa
cmpb
aad
jg
ret
pop
mov
adc
mov
sbb
sti
in
data16
scas
rolb
cltd
jbe
mov
jae
add
push
mov
ficoml
into
pusha
movb
jbe
and
fwait
xor
shl
mov
je
and
fidivl
mov
sub
push
std
mov
addr16
mov
add
subl
ficoml
rcr
int
mov
mov
das
pushf
lods
mov
dec
mov
mov
push
dec
js
pop
jno
aam
les
add
cmp
xchg
mov
out
xor
je
punpckhwd
adc
xchg
movsb
push
and
jp
in
pop
std
xor
inc
sbb
into
mov
scas
cmc
js
mov
aam
cmp
push
lea
push
lret
mov
lds
shl
jne
imull
adc
movsb
in
or
imul
mov
mov
mov
jo
jg
cmp
icebp
jnp
push
sub
dec
mov
ror
sbb
lret
add
fadd
dec
adc
jo
jmp
enter
mov
fmuls
in
cmp
pusha
sbb
iret
repz
cmp
cmpsl
inc
sbb
mov
push
dec
icebp
dec
push
das
rclb
popa
inc
mov
or
push
sub
enter
pop
xor
daa
push
and
add
aaa
sub
fisubrs
lret
cld
cmp
or
movd
sahf
jg
xor
pop
push
sahf
je,pn
cmp
sbb
cltd
movsl
scas
popf
cmp
cmc
mov
push
push
loop
pop
mov
cmp
mov
jo
mov
add
pop
aam
cli
repz
xor
or
stos
inc
dec
cmp
test
test
inc
js
sub
pop
add
xor
jp
sbb
inc
mov
push
or
sub
pop
test
enter
jae
sub
xchg
push
push
and
jecxz
cmpsl
ljmp
in
dec
sub
xor
mov
xchg
fstps
sbb
and
hlt
xor
imul
in
push
stc
add
call
sbb
dec
rclb
add
xchg
mov
push
mov
out
hlt
in
adc
mov
inc
inc
cmc
ret
xor
dec
dec
testb
xor
lahf
sub
aad
call
push
out
rclb
push
sub
jnp
out
fdivs
pushl
jo
les
or
adc
mov
inc
repnz
test
dec
sbb
test
bound
dec
xchg
cmp
pop
ret
xchg
insb
mov
jns
in
push
and
ds
or
int
add
cmp
pop
pop
outsb
ja
movb
mov
sub
in
iret
sbb
pop
arpl
sub
pushl
pop
mov
mov
inc
sbb
push
add
dec
cs
test
or
sub
jg
inc
fs
decb
xchg
add
test
push
or
in
adc
out
push
xchg
mov
shr
rorb
push
pop
popf
jmp
in
jae
sub
dec
jg
jns
insb
jmp
or
repz
push
imul
std
push
add
sub
test
sub
xor
ss
mov
out
push
xor
popf
je
sbb
lea
cs
ja
xor
fs
mov
and
mov
outsl
outsl
jno
hlt
push
mov
iret
ret
int
imul
sahf
push
shufps
sbb
mov
shl
es
push
cmp
mov
imul
dec
push
mov
add
dec
xlat
imul
jo
mov
adc
roll
push
jb
mov
insb
arpl
std
jae
jl
movsl
mov
cmp
aas
lea
cmp
pusha
sti
push
and
sbbl
jo
aas
xchg
sub
aad
mov
dec
xor
inc
idivl
pop
xor
sbb
enter
inc
pop
aaa
test
cwtl
mov
push
in
ss
les
mov
mov
outsb
je
sbb
jo
xchg
movsl
xor
test
dec
stos
jp
lock
lret
push
sbb
and
fs
inc
in
add
xor
scas
in
or
rorb
lret
cmpl
jno
sbb
int3
out
inc
and
sub
negl
mov
pop
repz
das
les
das
push
imul
cmc
orl
add
add
and
lock
repz
out
mov
or
in
add
mov
nop
data16
push
ljmp
sub
sbb
or
jp
push
pop
cmpsb
dec
mov
inc
stos
push
lcall
push
fisubl
lret
sub
sbb
or
jp
push
pop
cmpsb
dec
mov
inc
stos
push
lcall
push
fisubl
lret
sub
sbb
or
jp
imul
inc
test
fwait
data16
push
ljmp
aad
mov
or
movsl
pop
mov
xchg
xchg
dec
movsb
cmp
sub
jge
sub
dec
pop
hlt
xchg
xor
inc
fsts
cld
fs
loopne
xchg
or
cmp
sub
pop
aam
in
hlt
inc
add
adc
inc
mov
lods
add
push
int3
fs
je
cmp
lretw
insb
pop
fisubrl
cli
jbe
pop
pusha
pushf
aaa
scas
dec
fstl
das
es
xor
fmuls
outsl
fisttpll
push
aam
ds
fildll
jnp
mov
shlb
cmpsl
push
dec
xor
ljmp
xchg
repnz
mov
leave
or
jp
rcll
mov
mov
mov
aaa
push
popf
adc
xor
adc
lods
sub
pop
sbb
or
cmp
cmp
jl
mov
adc
mov
leave
push
inc
add
lret
test
sub
cmp
dec
outsl
mov
xchg
jno
add
js
jnp
or
movsl
dec
dec
cld
cmp
cmp
insl
aaa
iret
adc
lods
push
leave
mov
mov
xchg
nop
ret
dec
mov
and
in
push
inc
pushf
mov
mov
pop
and
je
in
sbb
arpl
push
int3
inc
stos
stc
mov
sub
inc
cld
inc
sbb
ss
cmp
leave
pop
icebp
dec
dec
aad
lods
push
mov
adc
inc
stc
and
dec
pushf
cmp
cltd
xor
in
lds
inc
xchg
adc
dec
in
hlt
insb
add
adc
and
xor
inc
fcoml
cld
je
test
or
cmp
sub
pop
aam
in
hlt
insb
add
adc
and
xor
inc
fcoml
cld
je
test
pop
inc
je
or
cmp
mov
push
push
insl
shl
testb
cmp
cmp
sbb
sbb
into
clc
loopne
movsl
out
pop
mov
mov
jne
push
sbb
jmp
push
or
pop
jo
fcmovnu
stos
xor
nop
sub
inc
adc
adc
mov
popl
jg
sbb
and
push
jl
out
jo
pop
cs
aad
sti
test
mov
pop
mov
push
pop
lods
xor
xor
cmpsb
cli
cmpsb
cmp
sub
xchg
add
jo
js
mov
xor
iret
inc
cli
fiadds
inc
cmp
mov
mov
and
jp
mov
dec
inc
outsb
test
cli
sbb
cltd
mov
xchg
push
mov
test
fwait
sub
or
jne
ja
mov
and
adc
pop
ss
sbb
arpl
outsb
stc
pushl
xchg
outsb
jl
cs
xor
dec
imul
inc
int3
mull
sbb
clc
and
rcrl
sbb
insb
push
inc
xchg
or
in
cli
push
pop
push
imul
das
addl
sbb
mov
fsubp
fisttpl
push
lock
imul
or
sub
icebp
ret
ds
dec
jne
push
loope
fwait
push
ja
test
adc
push
mov
inc
add
adc
imul
adc
clc
dec
add
jg
cmp
cmp
enter
cmpsl
and
jp
cld
xchg
adcb
and
js
sbb
test
add
inc
sbb
jno
notb
fsubrs
dec
lret
fildll
or
fdivrp
arpl
cmp
push
pusha
imul
xlat
ret
adc
movsb
jns
addr16
xchg
loop
add
aam
push
mov
lahf
sti
inc
pop
popa
setno
pop
mov
dec
dec
pushf
cld
inc
sbb
adc
fisubs
dec
pop
mov
push
add
xor
mov
mov
popa
cltd
push
scas
loop
pushf
dec
lahf
out
sub
cmp
pop
jg
repz
or
add
push
int
xchg
mov
add
xchg
sbb
stos
add
cmovnp
push
lret
fs
dec
les
mov
jno
out
repz
sub
nop
mov
add
fwait
jns
inc
setg
jmp
shl
jp
lret
mov
add
cmp
ficompl
in
sub
pusha
stos
bound
jb
adc
xchg
mov
sti
aad
or
js,pt
pop
adc
jle
cmp
sub
les
mul
popa
cmp
cmp
lret
adc
repz
and
jp
rcll
mov
fidivs
xchg
jne
sti
jno
mov
addl
cli
aam
test
xor
stos
fmull
sbb
dec
xchg
fidivl
sar
lods
outsb
cmp
xlat
std
lahf
inc
call
xor
pop
cmp
jbe
pop
fnstcw
xchg
icebp
repz
pop
push
push
fmul
inc
mov
lds
mov
repnz
cmp
int
dec
negl
or
cmc
jnp
mov
jge
xchg
push
adc
andl
mov
scas
push
pop
popf
arpl
jb
add
test
lret
xchg
decb
andb
and
xchg
jbe
cltd
sbb
mov
xchg
je
mov
rcl
or
inc
mov
push
stos
insl
sbb
mov
mov
das
pop
push
jp
push
mov
ret
adc
in
mov
test
pop
cld
fisubl
xchg
nop
lret
ljmp
sub
shlb
test
in
and
aad
xchg
subb
cmc
aaa
or
pop
loopne
xchg
repnz
icebp
insb
push
hlt
aam
mov
or
add
lods
pop
pop
out
push
ret
xlat
outsl
scas
jg
dec
bound
dec
fildl
mov
cmpsl
jp
xor
cmc
dec
rcr
dec
dec
nop
insb
lcall
inc
jae
ljmp
pop
xlat
inc
into
test
sub
js
inc
mov
dec
divb
jae
loop
lret
sbb
xchg
pop
xor
ja
sbbl
imulb
shl
cltd
loop
in
stos
jne
push
dec
pushl
movb
cmp
mov
sbb
rclb
inc
cmp
fs
jmp
rcrb
push
mov
outsb
aad
cmp
scas
mov
btc
dec
or
cltd
std
lods
sub
pop
cwtl
cld
inc
or
mov
inc
xchg
mov
jle
pop
and
adc
jmp
or
clc
out
inc
mov
in
insb
xor
lods
cwtl
aam
gs
adc
mov
and
mov
addl
sub
xchg
sub
jo
pop
in
fcompl
jne
push
sbb
mov
or
push
sti
and
loop
jle
xchg
or
and
cmpsb
loop
mov
rcll
pop
lods
sub
mov
jmp
xor
leave
fbld
pop
pop
fnstcw
cmp
sbb
mov
popa
inc
jmp
and
xchg
mov
test
mov
push
push
sbb
jl
scas
subb
and
fs
xchg
xor
pop
sahf
imul
cltd
jl
and
add
xchg
out
mov
xor
test
ror
rol
xor
or
lock
es
adc
mov
mov
aam
cltd
addl
sti
xchg
cli
insb
pop
lret
data16
adc
sbb
rorb
sete
or
aad
cli
mov
stos
inc
pop
mov
dec
jae
mov
sub
sahf
jle
mov
outsb
test
scas
or
into
push
stos
movsl
cs
adc
lds
aaa
in
pop
cmpsl
ss
push
mov
cwtl
insb
pop
enter
push
mov
aad
dec
testb
or
iretw
inc
pushl
je
fisttps
dec
out
daa
daa
fs
sub
pop
ljmp
push
adc
or
ss
push
and
pushf
imul
push
ficoml
xorl
cmp
inc
sub
lret
adc
mov
xchg
sub
aam
xor
sub
movb
pop
pop
fmuls
pop
iret
bound
orl
imul
fstpl
xor
or
icebp
push
ficoms
dec
aam
lods
push
lds
jp
add
fwait
mov
and
mov
xchg
push
addr16
dec
pop
dec
xlat
mov
inc
fisubl
mov
cmp
mov
sti
and
and
adc
sbb
outsb
sub
and
pop
std
ljmp
and
test
mov
dec
std
mov
mov
pop
pop
cmpsb
call
cmpsl
test
stos
ljmp
shll
mov
repnz
ljmp
xchg
fs
inc
dec
push
pushf
lock
cltd
push
or
xor
filds
lret
mov
psllq
lods
mov
adc
xchg
adcl
push
fwait
xchg
fld
int
subl
ret
add
xor
mov
sbb
add
inc
test
adc
mov
sbb
jns
arpl
cmpl
mov
push
and
jno
loope
pop
inc
mov
jae
sub
dec
inc
mov
andb
mov
adc
mov
mov
fsubp
inc
out
adc
js
das
mov
inc
dec
xchg
fwait
outsb
lcall
ja
and
mov
cmp
sbb
cmpsl
jns
inc
jle
call
or
sbb
jge
jmp
fnstenv
repnz
adc
mov
pop
push
pushf
xchg
sub
dec
and
test
adc
ror
xchg
popa
mov
stos
cli
xor
in
dec
push
sub
push
mov
ret
je
cmp
in
test
mov
mov
js
das
ret
fnstenv
and
lods
outsb
xor
sbb
inc
mov
iret
roll
adc
add
xchg
inc
ja
jne
dec
mov
movsl
cs
xor
mov
les
jne
mov
cmpsb
leave
push
fcompl
pop
iret
push
dec
jnp
mov
mov
shlb
push
or
aas
in
sbb
das
xor
pop
outsb
push
pop
and
scas
cmpsb
pop
push
test
mov
ds
xchg
add
aam
xor
dec
popf
outsl
or
icebp
adc
incl
sbb
jns
sub
ret
mov
push
inc
mov
nop
xchg
xor
into
hlt
lahf
cmp
sti
mov
push
mov
shl
inc
jne
xor
sub
dec
jmp
and
fs
xor
push
movsl
jecxz
sub
xor
push
fnstenv
and
popa
xchg
ret
jb
loopne
mov
test
clc
mov
repz
sub
add
xchg
and
cmp
add
js
sub
cwtl
xor
add
sarl
ret
inc
jbe
jae
ret
adc
sub
ficoml
call
dec
nop
jmp
insb
leave
mov
xor
pop
imul
xchg
aas
mov
pop
mov
aaa
lret
and
cmp
fld
fldcw
add
mov
sbb
xchg
inc
imul
pop
sbb
clc
sahf
fsubr
pop
dec
rcll
xlat
in
jnp
push
fimuls
gs
sbb
mov
jp
fucomp
ja
cmc
gs
add
xchg
xchg
daa
fwait
mov
out
sub
cmc
sub
shl
jl
push
loope
mov
subl
fsubrs
and
push
dec
xlat
pop
mov
inc
insb
aad
pop
loop
mov
movsl
push
mov
mov
cli
sti
adc
imul
jb
mov
jl
mov
fdivrp
test
pop
rolb
dec
subl
std
mov
jp
jno
repz
inc
ret
rcpps
cld
pop
cwtl
dec
aam
xchg
fisubl
dec
ss
push
ficoms
xchg
mov
dec
mov
adc
lds
loope
into
sub
js
in
stc
shr
sub
mov
test
mov
in
insb
cmpsb
and
xchg
xorb
lea
das
add
ret
sub
xor
or
and
mov
idivl
mov
stos
mov
xor
fcmovu
jns
pop
sub
cmp
jbe
push
insb
ss
jp
and
sbb
loopne
lock
inc
add
sbb
and
loopne
xchg
pop
shll
pop
sbb
pop
mov
stos
and
inc
jbe
mov
aaa
lods
lea
adc
outsb
xchg
out
mov
pusha
fstl
leave
cmp
push
mov
push
stos
rcll
xlat
mov
insl
rcrl
shr
or
jno
ret
repnz
pop
xorb
pop
imul
dec
mov
ss
sahf
outsl
dec
lcall
fs
jne
or
mov
adc
bound
std
cmp
sbb
subb
movsb
inc
test
scas
mov
iret
das
mov
andl
ficoms
cmc
leave
and
and
cmp
shlb
std
adc
pop
cmp
mov
mov
mov
je
mov
or
jbe
or
mov
jbe
mov
cmp
push
xchg
cltd
mov
fildll
sub
in
sub
push
scas
jge
mov
fisubl
fst
outsl
pop
scas
mov
jg
xor
popl
orb
arpl
lret
add
push
xor
fidivrs
xor
push
push
rorb
xchg
sub
in
dec
push
cwtl
lods
js
mov
push
test
lea
je
push
sbb
cmpsb
xor
jnp
jae
rolb
jmp
mov
inc
aaa
xchg
and
int
fsubrl
dec
sbb
movsb
sub
ret
repnz
jb
mov
mov
lds
jmp
cmc
and
cmp
sbb
testl
mov
push
mov
push
lcall
mov
int
xchg
xor
mov
xchg
xor
and
lahf
clc
out
orb
bound
leave
daa
into
stos
mov
push
sbb
or
sbb
addr16
sub
movsl
mov
lods
in
jl
xchg
push
and
out
test
adc
mov
pop
mov
jle
repnz
je
sbb
loope
mov
mov
fidivrs
inc
pushf
mov
lock
push
call
sbb
pop
pop
cli
xor
int
fimull
pop
addr16
xchg
jo
mov
jmp
pop
rcrl
adc
cld
clc
repnz
repz
fnstenv
rorb
cmp
std
push
stc
lock
aas
pop
cmc
jge
out
daa
sbb
mov
jle
cs
xchg
addl
mov
stos
mov
roll
movsl
dec
inc
xchg
push
inc
add
mov
ret
or
mov
jb,pn
pusha
dec
and
sbb
adc
lahf
mov
cli
adc
jo
fwait
inc
stc
push
daa
mov
test
out
arpl
jge
dec
leave
push
sbbl
and
je
inc
jge
scas
push
test
test
scas
cmp
xchg
adc
xor
aad
dec
repz
fidivrl
std
outsb
mov
out
inc
mov
sub
dec
xlat
and
jno
adc
push
out
adc
xchg
xor
inc
into
aad
and
pop
xor
cmp
sti
adc
push
shrb
sub
cld
sbb
xor
mov
sbb
inc
sbb
mov
pop
popa
xor
mov
push
cs
out
popf
test
nop
dec
add
push
movsb
mov
aam
sarl
sbb
addr16
mov
lods
ret
iret
rcll
fldt
and
inc
aad
sub
push
push
xorb
enter
inc
pusha
cmp
sqrtps
dec
in
sahf
std
xchg
test
pop
movq
loopne
sbb
mov
enter
cmovl
sub
jno
push
mov
out
iret
and
dec
dec
dec
push
xchg
mov
mov
shrb
mov
int
xchg
mov
sub
sbb
pushf
push
jge
into
sti
or
and
sbb
shlb
jne
sub
scas
ds
inc
or
lahf
mov
popa
rolb
xchg
lock
incb
ficoms
mov
xor
stos
push
push
mov
pop
mov
xor
aas
fiadds
mov
sbb
mov
fisubs
dec
add
jbe
leave
mov
fsubrs
inc
inc
adc
jo
decb
aas
mov
mov
and
lahf
lret
imul
int3
add
sbb
mov
loop
mov
movsb
mov
into
jbe
cmp
sti
pop
dec
bsf
push
mov
and
jno
fcoms
sbb
or
or
dec
jmp
mov
jmp
enter
push
xchg
lods
push
lods
sub
push
adc
sbb
push
adc
cmp
mov
les
jge
pop
repnz
add
out
ljmp
aam
sbb
das
adc
aam
bnd
mov
dec
dec
push
mov
push
jl
bound
wrmsr
sbb
orb
jmp
or
push
andl
popf
cwtl
pop
push
adc
adc
push
aaa
nop
push
loop
push
repnz
ret
mov
push
xor
pop
dec
lret
es
push
push
inc
negb
stos
shr
das
loopne
jns
lods
push
cltd
mov
stc
jno
add
mov
mov
nop
out
mov
pusha
dec
shlb
adc
test
dec
ljmp
mov
lret
sbb
arpl
xor
xchg
in
pop
pop
pop
aaa
jns
push
stos
mov
push
xchg
fiadds
lret
inc
mov
cmp
sub
mov
jmp
mov
insb
pop
adc
out
fcmovnb
lods
jb
insb
jbe
add
mov
adc
dec
stos
lfs
cmp
movsl
jecxz
push
pop
sub
cmp
inc
outsl
call
push
shlb
mov
out
cmc
nop
push
pop
mov
lea
ja
out
and
jp
fildl
xchg
and
imul
cmp
incb
add
data16
je
jne
lret
cld
jg
in
mov
cmp
pop
fcmovb
cmc
mov
push
jle
xchg
adc
ss
sbb
cs
in
pop
pop
xchg
adc
xor
mov
mov
ljmp
fldenv
sbb
fimull
mov
push
fldt
lods
cmc
outsb
adc
imul
mov
add
fdiv
lds
inc
push
jl
dec
inc
push
in
mov
imul
xchg
inc
ds
mov
push
fscale
xchg
mov
dec
int
fistps
icebp
pop
xchg
mov
sahf
pop
js
es
aas
outsb
fisubrl
xor
jne
sub
mov
dec
movl
cmp
pop
push
hlt
leave
rcrb
lds
lret
pushf
jecxz
sbb
mov
scas
mov
sbb
jne
cwtl
jp
mov
or
enter
xchg
daa
icebp
in
aad
fwait
repnz
incb
jle
mov
mov
cld
mov
popa
das
mov
popf
fcoms
in
jle
adc
fdivrl
pop
lcall
pop
lock
xor
frstor
ljmp
gs
xchg
sahf
lret
or
orb
xchg
xor
popf
pop
int
cmp
jge
in
call
sub
inc
dec
test
inc
xor
ja
dec
jecxz
sbb
push
jl
cmp
cmp
addl
out
das
pop
lds
rcr
stos
add
or
into
and
push
out
ljmp
sub
push
cmp
pop
or
xchg
rorl
mov
add
mov
inc
xchg
fwait
pusha
add
iret
jecxz
and
push
lahf
and
sub
inc
lock
jecxz
push
loop
ret
scas
inc
inc
adc
cli
iret
loop
icebp
out
jmp
jmp
pop
cmpsl
lods
decl
inc
mov
enter
loop
popf
call
test
and
pop
cltd
fsubrl
repnz
out
outsl
outsl
aam
das
daa
adc
aam
dec
test
andb
xor
dec
outsl
xor
into
dec
rcll
test
jnp
mov
and
xor
jnp
ret
pop
sub
sbb
sbb
fwait
dec
xchg
mov
adc
ds
ss
and
mov
negb
cmp
push
jb
ss
fwait
dec
insl
cmp
pop
test
pop
pop
ret
inc
insl
pop
pop
xchg
dec
mov
scas
in
or
stos
nop
mov
and
pop
or
sbb
rcrl
lcall
push
mov
xor
orl
mov
subl
pop
nop
add
shr
pop
lods
stos
xchg
xchg
leave
sbb
xchg
shrb
sbb
sbb
addb
push
push
mov
or
dec
cmp
or
loope
sub
lds
shl
jbe
and
inc
test
daa
xor
add
ds
cmp
add
xor
int
inc
das
adc
xor
movsl
add
cmp
imul
jbe
mov
sub
iret
std
jle
xor
mov
jns
mov
outsb
push
dec
lahf
outsl
add
dec
or
add
dec
inc
mov
cld
dec
fisubl
ss
sbb
pop
push
aad
sbb
adc
jne
pop
mov
ss
mov
mov
icebp
stos
mov
and
mov
repz
andl
pop
add
test
ss
pop
jp
mov
and
test
xchg
cmp
stos
dec
pop
push
les
addr16
test
nop
jmp
jl
mov
xchg
and
ljmp
cmc
pop
aas
cltd
and
dec
nop
push
and
fdivr
arpl
dec
dec
lds
mov
lret
lret
jle
add
or
pushf
bound
ja
je
jo
xchg
popa
inc
iret
bound
ret
cmp
sbb
push
push
or
int3
call
js
lret
xchg
xchg
icebp
fstpt
cltd
cmpsb
flds
les
insl
cwtl
pop
xor
inc
fwait
lock
cwtl
iret
adc
cmp
pop
cmp
stos
arpl
pop
push
sub
push
daa
cmp
add
or
cmp
in
hlt
insb
add
adc
and
xor
inc
fcoml
cld
je
test
or
cmp
sub
pop
aam
in
hlt
insb
add
adc
and
xor
inc
fcoml
cld
je
test
movsb
add
and
sub
daa
in
xor
add
adc
aam
xor
inc
fadds
cmc
pushf
or
fcoms
in
je
add
jmp
mov
mov
test
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
or
mov
dec
sub
push
jmp
add
push
add
pop
add
push
add
add
cmp
add
mov
add
out
add
xchg
pop
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
sub
xor
add
add
xor
add
out
leave
add
xchg
add
add
add
incb
add
jp
pusha
add
add
xchg
add
add
add
add
dec
add
add
add
loopne
jmp
add
add
add
add
add
add
pop
add
add
add
add
add
sti
add
lea
and
add
add
add
add
xchg
add
add
add
add
add
add
add
sub
add
mov
cmp
lock
add
incb
mov
push
add
push
add
add
add
mov
xor
add
add
ltr
add
add
add
add
add
add
add
add
add
xchg
add
add
add
jl
pop
add
mov
push
fadds
add
sbb
xchg
add
mov
add
add
add
adc
push
add
add
add
sub
add
add
add
add
mov
add
add
add
jle
xor
add
add
add
add
add
add
add
loopne
lock
add
add
add
add
add
sahf
add
add
mov
add
jne
jp
roll
test
add
add
sahf
add
add
add
mov
dec
add
add
mov
pusha
add
add
add
add
add
add
xor
add
test
add
add
mov
add
add
add
dec
add
add
add
add
add
add
adc
pusha
add
add
add
add
add
add
add
add
out
add
add
add
lea
or
cmp
mov
pop
add
add
add
add
add
nop
add
bound
lea
inc
add
add
mov
add
xor
mov
verw
add
outsb
add
pop
add
cmp
xor
add
outsb
add
add
aam
jp
lea
lcall
add
add
flds
lea
or
cmp
push
add
add
add
add
aaa
add
add
add
bound
xor
leave
add
sub
add
add
add
add
bound
scas
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
xor
add
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
scas
add
add
add
add
out
push
and
lods
dec
or
sbb
jb
daa
cmp
or
mov
xor
mov
mov
mov
aas
cmp
jp
cwtl
inc
cltd
fs
pop
insb
pop
js
inc
pushf
push
and
inc
or
int
dec
scas
dec
cmp
mov
lcall
or
sbb
push
pop
das
inc
scas
add
xchg
rolb
lret
push
add
add
lock
out
shll
jns
ja
scas
cmovg
push
mov
add
xchg
in
adcl
push
rclb
fwait
sarb
lods
test
cmc
pop
xchg
or
or
add
lods
enter
xor
cmp
push
sti
subb
mov
dec
lock
xchg
pop
aam
arpl
pop
mov
ffreep
mov
shr
pop
jmp
test
push
leave
xor
jl
adc
dec
out
xlat
pop
xor
mov
inc
mov
stc
jb
or
pop
pop
aas
xchg
xchg
das
pop
jge
cmpsb
mov
pop
lahf
lret
jo
rcr
adc
sub
lret
cmp
cmp
dec
mov
dec
mov
and
add
adc
push
sub
bound
fs
sub
out
xchg
repnz
cld
mov
push
in
mov
jb
xor
pop
fdivrs
loop
mov
sub
sub
add
xor
xor
popa
push
dec
mull
jmp
and
std
mov
mov
sub
xchg
inc
std
add
fwait
outsb
mov
xchg
inc
push
int3
xor
jecxz
mov
lods
mov
jb
xchg
imull
adc
adc
pop
jns
rcl
adc
stc
push
incl
sub
fistl
jne
ss
mov
inc
fmuls
mov
adc
sub
out
sbb
cmpsl
jle
das
pop
int3
pop
and
pop
cmp
popf
test
mov
mov
out
mov
arpl
cmp
insl
mov
stos
testl
or
dec
sahf
and
lods
cmpsl
or
fsubrs
fisubl
pop
add
jb
aas
mov
xchg
mov
xchg
popf
jg
cmp
ja
jae
mov
jbe
adc
in
test
pop
icebp
ret
adc
push
and
sub
je
inc
das
mov
test
push
fs
sar
inc
jg
mov
scas
fsubs
mov
xor
test
mov
jmp
mov
adc
mov
int3
in
stc
xchg
into
xchg
pop
mov
and
rcl
stc
stos
popa
mov
jl
mov
or
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
