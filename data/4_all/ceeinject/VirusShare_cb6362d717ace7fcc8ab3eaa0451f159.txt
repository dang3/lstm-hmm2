call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
into
sar
jecxz
repz
shll
ja
arpl
add
and
xor
ret
into
ror
jecxz
repz
orl
push
dec
dec
push
sbb
jae
jno
adc
and
xor
fcmovbe
lret
imul
xchg
mov
jo
sbb
push
xor
dec
push
inc
pop
scas
into
mov
xchg
dec
jb
lea
pop
movsl
cltd
mov
mov
xorb
repnz
fsubl
dec
faddp
inc
pop
ljmp
dec
pop
addr16
xchg
mov
arpl
shll
mov
rorb
mov
pop
inc
mov
or
stos
xchg
and
jbe
popf
fisubrs
sbb
mov
push
xlat
scas
ss
lods
jle
xor
fwait
aas
pop
xchg
jle
and
inc
xor
sbb
xchg
inc
dec
out
stos
mov
lods
imul
add
cmp
cmpsl
mov
arpl
or
jecxz
sub
mov
sub
repz
cs
cli
stc
repz
mov
inc
inc
push
dec
data16
push
sbb
or
cmp
xor
xchg
repnz
sub
push
or
add
jb
push
pop
dec
dec
pop
fisubrs
in
pushf
ljmp
sbbl
jno
jae
adc
cs
mov
cld
rcrl
mov
xchg
mov
inc
dec
push
jle
outsb
jae
add
adc
and
xor
ret
into
sar
jecxz
repz
orl
pop
inc
dec
push
jle
outsb
jae
add
adc
and
xor
ret
or
icebp
mov
mov
lods
jo
cmp
and
repnz
cmpsb
jns
sbbl
cmp
jl
out
sbb
or
lcall
push
fwait
cmpsb
and
fs
mov
std
xor
mov
xor
dec
mov
popf
mov
popf
lea
mov
pop
push
dec
repnz
adc
outsl
push
clc
inc
dec
hlt
aaa
addr16
hlt
inc
and
inc
outsl
xchg
fildl
dec
iret
push
mov
aad
pop
cmp
push
xchg
dec
mov
frstor
int3
hlt
or
add
fadds
and
out
xor
cld
push
shl
jge
data16
xor
testl
gs
daa
lahf
aad
mov
rcr
addr16
iret
ret
push
push
pop
imul
fisttpl
sbb
fldcw
popf
xor
rolb
into
lret
cmp
enter
loopne
lock
test
daa
aas
fldcw
ss
and
stc
stos
xor
in
mov
fstpl
mov
pop
bound
mov
ss
icebp
pop
or
sub
push
js
in
push
imul
and
fwait
inc
add
adc
subb
inc
pop
or
outsl
pop
mov
xor
pop
sbb
xor
push
or
sbb
ja
push
inc
nop
push
adc
adcb
je
jbe
dec
enter
cmp
push
xchg
ffreep
lret
jbe
mov
mov
jge
ficomps
pop
idivl
xor
cltd
scas
lods
pop
sbb
sti
jno
int
clc
movsb
outsb
and
mov
push
inc
push
mov
and
lret
mov
sub
adc
xchg
rdtsc
jle
xchg
stc
or
mov
aad
jbe
cmp
jnp
lret
pop
je
add
lods
pop
daa
les
push
mov
cs
xlat
lods
das
notb
mov
hlt
in
sub
scas
xchg
es
test
daa
je
jns
jne
mov
out
lcall
and
inc
popa
mov
leave
lds
jecxz
mov
push
test
sub
incl
ja
push
jmp
shrl
and
out
lock
jb
repnz
jo
xor
and
gs
lret
out
push
imul
aam
xor
enter
js
movsl
fstpl
cmpsl
adc
les
mov
aas
push
sub
fidivl
sbb
push
or
inc
xchg
test
data16
push
daa
xor
xor
idivb
mov
jmp
xchg
stos
sbb
push
push
lds
ficompl
xchg
mov
or
ret
or
movsb
sbb
xchg
push
jle
lods
aad
je
ret
sbb
jl
cmpsl
adc
lock
pop
jecxz
dec
cmp
nop
jl
cmp
shlb
mov
pop
dec
insl
sbb
inc
or
sbb
xchg
jmp
icebp
test
cmp
pop
lods
insl
push
sub
mov
xchg
sbb
pop
push
inc
bound
rol
pop
jae
mov
dec
jbe
outsb
stos
dec
fwait
loopne
adc
mov
sub
inc
cmp
jno
sub
sarb
dec
mov
shrb
adc
arpl
dec
jg
cmp
sub
adc
push
cmp
jmp
stos
adc
push
sub
in
out
dec
inc
mov
add
xor
jnp
icebp
jmp
jb
scas
inc
push
mov
xor
popa
cmp
and
pop
insb
xchg
cmovno
pop
lret
inc
sbb
push
sbb
mov
pop
pop
sub
mov
pop
aaa
xor
inc
sti
add
push
lret
mov
repnz
subl
cli
mov
xchg
jecxz
push
sub
mov
mov
icebp
jecxz
lcall
shll
ret
push
in
and
and
cltd
das
fistps
mov
fldt
unpckhps
xchg
cld
lds
lahf
ficoml
jns
adc
cwtl
cltd
xor
or
sbb
lea
addl
mov
inc
mov
push
sub
inc
jmp
fs
mov
xchg
imul
stc
mov
stc
pop
xchg
icebp
jb
or
loopne
push
and
xor
pop
mov
orl
aad
cmpsl
aad
dec
sbb
lock
mov
sub
xor
arpl
mov
jns
ret
mov
std
jne
or
imul
out
pop
xchg
or
fs
add
jle
adc
sub
xor
shll
pop
or
and
aam
mov
lds
mov
mov
or
add
dec
data16
mov
dec
add
fstl
pop
pop
xor
sub
mov
jae
adc
or
mull
mov
aam
shl
addb
mov
clc
pop
push
pop
rol
std
xor
cmp
cmp
mov
add
repz
out
stc
aaa
mov
pop
lock
in
and
loope
jbe
lods
sub
inc
cmp
data16
leave
jp
xor
or
repnz
lret
mov
sub
mov
cmpsl
push
add
movsb
movsb
push
lods
fwait
sbb
mov
cmc
fimuls
cmp
mov
and
adc
or
mov
stc
mov
mov
mov
mov
sarb
ss
adc
mov
mov
stc
mov
outsl
idiv
aas
stc
lods
ja
jl
pop
stos
popa
out
xor
mov
jbe
ret
jnp
cmp
shll
cmp
push
sub
jge
imul
adc
and
sbb
xor
pop
loop
xchg
pop
adc
or
fdivrs
pop
mov
jns
gs
sbb
xlat
test
mov
xlat
add
pushf
add
sarl
push
into
adc
mov
loopne
inc
add
adc
jmp
xor
arpl
dec
int
mov
inc
jecxz
pop
popf
pop
rol
ja
push
mov
fcmovnu
pop
adc
mov
loopne
dec
inc
sahf
push
rclb
imul
sbb
cmp
lcall
inc
lcall
dec
xchg
scas
xor
sbb
add
fnsave
sti
push
stc
lahf
dec
adc
push
mov
cmpsl
pop
sbb
push
insb
mov
nop
loop
mov
jnp
and
fstps
fisttpll
fdivl
out
outsl
sub
inc
mov
aaa
mov
sti
xor
fstpt
andl
test
repnz
loop
cmp
lret
xchg
push
push
data16
rolb
mov
mov
push
jle
jns
bound
es
inc
lret
mov
dec
push
bound
enter
xor
lea
mov
push
xor
ficoms
mov
ja
xor
add
adc
cmc
int
or
mov
testb
mov
arpl
pop
adc
pop
mov
push
outsl
test
xor
ss
test
add
fidivrl
sar
iret
daa
dec
add
sub
jb
dec
lret
into
cmp
xor
lret
mov
dec
mov
cmp
rorl
ja
nop
stos
lcall
imul
dec
cmp
xchg
sub
and
dec
add
test
cmpsb
cmp
into
stos
ss
jmp
jbe
cmp
clc
push
jmp
sub
mov
or
mov
cli
dec
jmp
mov
mov
fdivp
loop
hlt
mov
mov
fisubl
int3
jae
sbb
add
jg
push
aad
jmp
pop
pop
inc
lea
scas
fiadds
inc
inc
cmpsl
fs
iret
push
cltd
pop
adc
push
pop
loope
dec
mov
adc
mov
dec
and
orb
rolb
push
pushf
lahf
fists
rcrl
fcomps
rorb
lods
outsb
push
sub
or
decl
pop
xor
orl
and
mov
jns
push
pop
test
jl
in
dec
mov
xor
imul
jmp
into
orl
jno
xchg
sbb
scas
gs
cwtl
mov
mov
xchg
out
xor
fdivr
xchg
xor
xor
rorb
mov
lock
xchg
dec
adcb
aas
pop
xorl
pop
add
push
mov
subl
in
lcall
sbb
mov
jp
adc
cli
mov
ss
je
pop
imul
test
jl
sarb
ds
sbb
xor
ljmp
or
adc
mov
xchg
dec
sti
sti
movsl
inc
dec
out
ret
push
fdivrl
pop
jne
in
and
rorl
fnstcw
fwait
sbb
icebp
aaa
xlat
xor
cmpsb
je
push
arpl
jl
hlt
jmp
inc
xor
pop
dec
loopne
hlt
add
push
cmp
mov
mov
ljmp
mov
add
xchg
add
pop
adc
fwait
lods
jbe
test
lret
jle
test
sti
das
sbb
or
test
pop
mov
mov
mov
sbb
out
in
mov
andl
adc
push
and
add
adc
jnp
shrb
xchg
push
sub
xor
jmp
dec
shll
repnz
into
jno
add
dec
adc
lods
xchg
or
pop
jmp
inc
out
jbe
btc
pop
or
cmpsb
xchg
lea
pop
mov
mov
dec
pop
mov
dec
les
inc
rol
sbb
mov
hlt
push
imul
fdivr
popf
cld
mov
sub
pop
sub
insb
cmp
cmp
rcll
push
cs
stc
adc
adc
dec
imul
mov
xchg
mov
or
sti
and
push
cmp
and
lret
jne
and
insb
sub
cmp
sbb
mov
mov
jmp
add
push
jb
imul
mov
pusha
lahf
icebp
mov
push
add
cmpps
lcall
fs
mov
push
pusha
xchg
lret
mov
lock
adc
inc
loop
aas
into
sbb
and
shrl
sub
xchg
xlat
sub
sub
out
fnsave
gs
pop
xor
bound
jno
out
mov
jecxz
sbbl
int
or
clc
add
adc
push
dec
sbb
shlb
roll
shrl
push
insb
sahf
and
pop
sarb
push
push
and
dec
lret
outsb
or
adc
comiss
mov
and
adc
add
adc
clc
icebp
dec
xor
cmpsl
fcmovnbe
ja
testb
xor
int
inc
xchg
aaa
ret
test
mov
xor
sbb
out
pop
mov
lods
negl
sbb
addr16
push
sub
cmp
mov
sti
push
pop
cmpsb
pop
xor
cmp
jne
xchg
scas
lcall
ss
and
sti
lock
out
pop
dec
pusha
xchg
test
inc
fwait
sub
cmpsb
lcall
push
rcrl
push
stc
mov
popa
push
xor
stc
dec
lock
sub
imul
in
cltd
aas
sti
aad
adc
out
jmp
cmc
or
mov
mov
cmp
loopne
mov
pushf
std
data16
cmp
ds
xchg
adc
cmpsb
sub
out
xchg
jbe
inc
push
icebp
mov
or
nop
push
or
lcall
jmp
stos
movsb
push
mov
xor
pop
sahf
push
fcomip
xchg
inc
and
inc
mov
and
xchg
jp
enter
dec
out
stos
mov
cmp
stos
and
cmp
stos
pushl
lea
or
push
jnp
subb
push
add
ret
push
dec
lret
sbb
sub
add
aaa
iret
inc
jmp
clc
inc
adc
in
add
sbb
or
dec
test
xchg
push
mov
jmp
push
inc
xchg
add
push
adc
es
pop
pop
fnsave
add
jmp
jae
push
adc
fsts
mov
dec
dec
les
in
pop
subl
pop
icebp
outsl
mov
jnp
jbe
hlt
js
inc
in
aaa
adc
daa
or
loope
arpl
mov
lcall
sub
jle
fwait
xor
jne
das
test
fcmove
jecxz
lcall
aad
adc
in
xor
xor
pop
mov
xor
lods
jl
ds
lahf
xor
add
repnz
int3
xchg
dec
xlat
push
cmc
clc
push
and
ljmp
stos
out
into
fisttps
out
xor
les
sub
mov
mov
test
ss
mov
xor
xchg
mov
cltd
das
and
sarb
add
sub
movsl
aad
sub
or
sub
push
mov
jo
push
push
mov
mov
xor
mov
add
or
xchg
imul
aad
adc
jne
sub
mov
cmp
sahf
test
cmpsl
sbb
jo
jne
sub
into
insb
push
sbb
push
mov
lods
mov
mov
dec
mov
cmp
aam
addl
jo
lea
jne
and
fimuls
hlt
xor
das
movsb
in
fsubrs
mov
xorl
cmpsb
dec
dec
lahf
push
mov
push
lock
mov
pushf
mov
test
fsubl
lret
adc
and
sbb
push
cltd
test
movsb
mov
or
dec
aam
cmpsb
outsb
mov
cmp
dec
jo
mov
push
fwait
and
dec
popa
es
jmp
std
sbb
mov
js
mov
push
out
jae
mov
cltd
testb
push
mov
dec
sti
jge
notl
sub
xor
mov
fcoms
dec
imul
jecxz
out
aad
mov
dec
add
in
push
xchg
imul
jne
pop
pop
pop
bound
ficomps
ret
ret
fimull
call
ret
mov
xchg
cmc
fs
gs
sbb
es
xchg
sbb
popf
stos
xacquire
mov
aad
xchg
lret
mov
jge
mov
mov
into
subl
or
das
std
je
mov
sbb
movsb
mov
hlt
mov
ljmp
outsl
stc
and
arpl
dec
and
call
movsb
inc
mov
pop
icebp
xor
cld
jae
jecxz
call
iret
xor
sbb
or
jbe
int
or
xchg
inc
lea
and
loopne
inc
sbb
and
jecxz
or
lods
adc
ret
push
jmp
sub
jbe
xchg
pusha
repnz
pop
jp
mov
addr16
dec
mov
push
fdivr
add
pop
pop
cmpsl
stc
mov
loop
cli
add
cwtl
dec
xor
push
insl
add
imul
je
sub
or
and
sarl
and
mov
mov
mov
adc
outsb
shlb
test
test
loope
jae
jle
jg
and
dec
pop
cmpsl
test
push
push
call
xchg
pusha
lret
outsb
sub
push
xchg
lods
sbb
stos
or
je
call
jecxz
inc
mov
loope
mov
cld
inc
fwait
scas
cld
push
and
into
mov
divl
das
sub
lcall
sub
out
mov
shll
daa
lock
sbb
sub
add
les
shrb
cwtl
push
call
dec
sbb
adc
mov
adc
push
or
dec
cld
mov
mov
cltd
push
push
pusha
lods
daa
movsl
sub
inc
mov
cld
pop
xchg
mov
fwait
jp
cmp
or
inc
insl
lret
mov
adc
stos
enter
add
dec
imul
int
jae
sub
outsl
shl
out
decl
mov
loope
subl
and
xchg
xchg
subl
and
push
sub
sub
mov
int3
fisttpl
inc
hlt
lds
jle
cmp
jp
lods
cmc
dec
sti
push
xor
imul
popa
push
sub
loop
cmp
xor
sub
out
pop
cmp
mov
scas
or
in
or
push
dec
push
les
mov
fsubs
std
push
std
inc
push
jo,pn
sbb
mov
test
add
dec
out
sbb
cltd
xchg
adcb
mov
nop
ss
outsb
mov
rorb
pop
pop
rcrb
or
pop
imul
cwtl
repnz
test
fwait
xchg
sbb
jp
push
mov
mov
es
js
push
insb
and
jmp
leave
imul
popa
mov
inc
jp
out
inc
loopne
pop
jns
popf
testl
dec
mov
stc
dec
jnp
push
jb
cmpsb
in
arpl
jg
mov
cmp
dec
mov
adc
fbstp
xchg
cmc
pop
ficoml
aaa
lods
mov
and
lahf
adc
insb
dec
pop
ret
xchg
push
xchg
pop
sbb
xchg
mov
mov
jbe
cmpsb
daa
jnp
adc
movsl
push
inc
fs
push
ss
int3
pop
lock
outsb
mov
and
cld
mov
sub
adc
std
adc
push
aas
jo
int3
or
mov
jo
and
and
pop
mov
push
pop
and
pop
xor
mov
aad
push
je
adc
mov
jns
in
sub
leave
xchg
jmp
ret
ret
daa
dec
int
jae
cmp
inc
mov
jb
xchg
in
mov
daa
jp
pop
test
xchg
sbb
dec
xchg
pop
pmullw
sbb
jecxz
adc
mov
add
mov
dec
cmpsl
xor
aam
pop
sbb
ret
mov
mov
sbb
fninit
cmp
mov
fnstenv
pop
mov
test
into
dec
rolb
push
ret
fildl
xchg
xor
popf
adc
add
ljmp
jno
xchg
mov
pop
test
out
movsl
jae
fimuls
lock
lods
inc
mov
mov
mov
pop
pop
adc
mov
ljmp
aad
lods
jne
sub
pop
jb
add
adc
rolb
sub
dec
sti
negb
insl
data16
insl
cmp
fisubrl
mov
stos
ss
xchg
test
sbb
xchg
jb
pop
mov
add
cmp
popf
adcl
push
lret
mov
dec
dec
cmp
in
adc
xchg
call
test
jl
ds
daa
dec
dec
jne
fidivl
sbb
mov
sbb
orl
push
xchg
and
int
rorb
push
pop
ja
sub
fcomi
pop
or
cmp
or
into
stos
and
mov
inc
mov
push
push
repnz
sbb
pusha
test
jo
mov
mov
sbb
cwtl
cltd
sub
xchg
and
mov
sbb
loopne
andl
shll
jne
aam
sub
add
test
cld
outsb
lock
mov
fisubs
sub
lret
and
xchg
insl
imul
mov
and
scas
je
in
push
je
pop
fwait
lods
dec
push
mov
push
scas
xor
lret
add
pop
jg
mov
in
add
adc
rcll
dec
je
push
xchg
sahf
sbb
out
imul
sbb
inc
ret
mov
scas
lcall
or
dec
jle
push
cld
dec
mov
mov
fistpll
icebp
lds
and
fdivrs
cmp
daa
dec
push
mov
enter
xor
mov
xor
insl
jns
push
xor
pop
xchg
fisubl
add
cli
pop
inc
fstps
call
pop
xor
jne
mov
lret
icebp
roll
es
test
aad
jbe
dec
pop
push
cmc
stos
xlat
insl
rol
xlat
int3
xor
adc
jb
or
mov
repnz
pminub
iret
lods
mov
gs
xchg
or
and
adc
sub
sub
sub
imul
mov
test
aas
adc
pop
jo
xchg
decb
call
jo
mov
dec
xchg
je
shlb
in
add
gs
shll
sub
adc
push
jo
mov
bound
adc
mov
dec
arpl
out
leave
pop
cmpsb
mov
add
pop
in
fsubs
mov
adc
addl
xchg
adc
dec
or
mov
icebp
dec
out
lret
add
cltd
mov
jmp
testb
fiadds
pop
shrb
cli
cmp
pop
fldl
inc
mov
mul
movsl
sbb
enter
mov
push
mov
cmp
adc
rcll
orl
pop
inc
dec
push
jle
outsb
jae
add
adc
and
xor
ret
into
sar
jecxz
repz
orl
pop
inc
dec
push
jle
outsb
jae
add
adc
and
xor
ret
into
sar
jecxz
repz
orl
pop
inc
dec
push
jp
outsb
ja
add
adc
daa
pop
aaa
ljmp
repz
orl
mov
arpl
imul
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
and
jae
arpl
adc
push
adc
or
mov
xchg
loopne
lock
mov
aaa
and
pop
add
adc
jno
inc
and
mov
jecxz
roll
shr
and
adc
inc
and
mov
xchg
clc
cmpsl
icebp
lods
out
jmp
jae
or
add
xchg
and
dec
lods
fisubrl
push
cmpsl
adc
repz
cmp
leave
scas
jle
test
stos
mov
pop
subb
jne
fisubrl
mov
test
jecxz
sbbl
int
dec
lahf
sbb
xchg
adc
inc
in
pusha
add
dec
and
ja
sbb
adc
loope
into
push
sbb
ljmp
repz
inc
movsb
repz
xchg
mov
loope
test
fisubs
jb
popf
sbb
cs
mov
pop
outsb
push
lock
or
adc
adc
popa
jnp
xor
push
adc
adc
icebp
add
xor
inc
sbb
es
add
rcl
nop
test
rolb
mov
mov
mov
dec
es
add
jb
and
push
jbe
mov
xchg
ret
repz
ret
ljmp
test
pusha
das
bound
xor
push
add
inc
and
mov
jecxz
xchg
loope
icebp
mov
mov
xor
arpl
adc
jno
inc
and
mov
jecxz
xchg
loope
icebp
mov
mov
sbb
xchg
jmp
pop
push
xorl
push
andb
jp
pop
adc
cmpsb
cmpb
inc
sbb
mov
stos
and
mov
insl
or
cmp
adc
mov
rorl
mov
cli
xorl
pop
stc
cmp
pop
xchg
test
cmp
fdiv
sub
adc
mov
ja
stc
mov
lds
and
pop
mov
pop
icebp
pop
and
sbb
sti
lods
add
mov
scas
or
repz
xchg
jl
mov
cmp
dec
xchg
fcomps
inc
inc
ljmp
inc
pop
add
xchg
xor
jo
aam
fs
lahf
adc
dec
xor
fidivs
mov
mov
popa
pop
icebp
or
inc
adcb
popa
dec
jno
loope
sti
cmp
lret
popf
test
outsl
sbb
in
test
push
cmpsl
repz
dec
subl
mov
jmp
stos
gs
sub
and
stos
mov
or
js
push
popf
lods
out
jns
out
roll
push
mov
and
mov
pop
xchg
mov
inc
scas
pushf
dec
sbb
jmp
incb
pop
inc
outsb
mov
xor
pop
dec
das
ret
fcom
dec
mov
pushf
sbb
subl
sbb
mull
or
test
aas
sbb
js
outsb
scas
mov
leave
and
xchg
cmp
repz
pop
in
hlt
xchg
and
mov
add
mov
inc
push
pop
stos
insl
imul
in
xchg
xor
aas
adc
mov
inc
push
test
jbe
imul
movsl
repnz
mov
outsb
movsb
xchg
push
nop
aas
push
subl
jo
cmp
sbbl
hlt
sub
or
fldenv
and
cmp
shlb
bound
inc
mov
cmp
loop
pop
aaa
mov
packssdw
test
jo
and
adc
inc
dec
and
cmp
mov
sbb
ret
mov
mov
ret
pop
lock
repnz
ds
add
xchg
and
in
daa
inc
and
xor
bound
sbb
call
mov
adc
or
mov
mov
icebp
xchg
push
jg
mov
lea
mov
push
jo
jo
sbb
lahf
pop
xor
or
dec
dec
repnz
xchg
mov
xchg
add
add
jo
cmp
int3
xor
pop
cmp
lret
and
icebp
xchg
pushf
mov
sub
fucomi
mov
in
enter
movsl
push
jnp
movsb
push
repz
or
das
fwait
mov
jecxz
rorb
into
mov
ret
imul
std
cli
inc
xchg
pop
ss
jne
shlb
cmpsb
inc
push
sahf
lock
pop
ret
mul
cmp
cmp
fisubl
mov
and
outsb
xchg
fldenv
add
mov
lahf
std
cli
test
cmc
gs
xchg
hlt
das
mov
outsb
push
je
ds
push
inc
ja
mov
pop
cltd
adcl
cmp
popa
fs
inc
jmp
mov
shl
mov
xor
pop
pop
xchg
lods
xchg
jb
or
and
nop
xchg
shlb
adc
out
or
test
pop
mov
movq
pop
mov
int
pushf
sbb
or
pusha
and
dec
push
mov
mov
adc
lods
inc
fcomps
sbb
or
sbb
ret
pop
cli
mov
inc
inc
fstps
jae
and
push
push
cld
push
mov
add
push
and
aad
cmp
xchg
cmpsl
cmpsl
inc
jns
test
push
lea
mov
cmp
in
mov
xor
push
jle
movsb
and
mov
xchg
cmpsl
dec
mov
push
ret
and
mov
ret
push
aaa
stc
lods
jne
or
adc
stos
pop
jno
mov
js
scas
std
adc
cld
cmc
inc
fdivrl
inc
popf
add
movsb
push
jle
rcrl
incb
lds
imul
das
lcall
push
xorb
xor
cltd
adc
mov
mov
push
cmp
ret
rcrl
mov
shr
adc
mov
fnstenv
imul
mov
mov
je
insb
dec
iret
insb
cmp
sti
daa
mov
flds
cmp
bnd
inc
xor
cwtl
dec
xchg
xchg
mov
push
in
mov
iret
and
lods
jns
icebp
aaa
xor
sbb
cmp
cwtl
mov
cwtl
add
and
dec
popa
cld
inc
cmpsb
mov
sbb
xlat
repnz
mov
int3
push
adcl
inc
movsl
insb
dec
push
imul
add
lea
jb
pop
lret
aas
adc
dec
pop
mov
inc
mov
jge
pop
push
ss
adc
test
out
mov
sub
adc
dec
xchg
jne
push
test
push
dec
mov
fs
out
mov
mov
sti
enter
iret
jne
rclb
cmovl
aam
and
dec
ja
mov
ljmp
rolb
call
stos
out
jecxz
sbb
xchg
ja
hlt
pop
add
mov
stc
push
test
jne
pop
shrl
mov
or
cmp
jb
in
shll
push
push
xchg
enter
add
out
dec
arpl
shrl
enter
xchg
movsb
mulb
fmul
mov
push
add
jno
rcr
into
mov
in
pop
ds
or
mov
mov
jns
repz
mov
xchg
daa
pop
dec
push
iret
aaa
pop
mov
outsl
dec
inc
daa
push
mov
scas
mov
pop
mov
adc
sbb
outsl
imul
int
out
or
mov
ret
inc
xor
sbb
in
repnz
jmp
and
jnp
jle
dec
mov
mov
orl
outsb
mov
add
cmp
testl
stc
lret
push
adc
js
ficoms
popa
mov
xorb
mov
dec
test
test
add
js
cmp
cld
loop
sbb
fs
inc
pushf
jl
subb
mov
jns
leave
fdivrp
repz
lea
mov
cvttps2pi
sti
fdivrs
xchg
jb
addl
mov
lret
jns
and
dec
cltd
sbb
loopne
sub
pop
dec
pop
aam
and
sti
jecxz
daa
lcall
jne
loope
rcll
add
leave
push
scas
jge
jns
push
imul
roll
pop
lret
push
scas
push
push
sbb
lds
das
adc
mov
mov
jl
faddl
push
mov
jb
pushf
loopne
sub
test
xchg
xchg
mov
sub
rclb
pop
push
inc
jne
outsl
mov
dec
mov
push
inc
cmp
pop
jecxz
cmp
out
push
jno
sarl
ret
in
dec
cltd
push
dec
sub
adc
or
inc
enter
sbb
dec
mov
xor
shll
scas
xchg
jge
and
mov
mov
push
pop
adc
outsl
push
mov
repz
jno
cmpsb
cmp
cmpsb
gs
cmp
lock
xlat
dec
bound
xor
stc
bswap
stos
xor
insb
xchg
inc
rcll
inc
mov
jns
js
jo
mov
push
daa
fidivs
sbb
mov
insl
outsl
mov
adcl
mov
out
mov
and
pop
nop
insb
scas
add
push
addb
fs
adc
andl
aad
cmp
mov
jbe
dec
cs
lahf
push
adc
lods
and
and
xchg
aam
movsb
or
out
mov
and
outsb
xlat
fcomps
pop
in
imul
xor
mov
xor
or
push
in
adc
imul
xor
adcb
adc
push
push
lahf
leave
push
add
mov
xor
mov
fdivrl
sbb
cmp
add
mov
dec
shlb
lret
mov
orl
shll
xchg
or
sbb
adc
loope
xchg
and
cld
adc
arpl
and
jne
sbb
xor
leave
mov
inc
inc
paddq
aam
xor
gs
cmc
lods
or
mov
push
sti
out
xor
xchg
push
popf
or
jmp
icebp
dec
andb
mov
push
test
out
mov
xchg
sub
xor
jmp
and
inc
into
negb
popf
mov
mov
pop
cmp
dec
inc
mov
add
sbb
scas
inc
rcrb
pop
add
mov
test
das
mov
js
mov
shll
rolb
cmp
adc
xchg
lahf
mulb
or
sbb
or
push
rolb
mov
mov
dec
stos
and
dec
xchg
adc
int
mov
add
es
push
jo
aad
sub
inc
sti
out
sbb
mov
push
in
or
call
cli
add
fistpl
aas
lods
cmp
mov
mov
ljmp
int
jae
jmp
cld
mov
add
pop
inc
int
and
jge
xchg
xlat
fs
mull
call
andb
addl
int
inc
aaa
mov
inc
and
jns
sbb
mov
cwtl
mov
and
mov
out
sti
jb
cmp
mov
adc
clc
in
push
lret
mov
xcrypt-ctr
cmpsl
pop
mov
jns
lods
or
add
push
sub
int3
lret
sbb
adc
inc
push
sub
and
scas
add
popf
or
pop
pop
and
xchg
add
pop
add
push
cld
cmpsb
fwait
push
lret
idivb
xor
mov
into
xchg
sub
sahf
adc
mov
int3
inc
ljmp
shll
pop
loope
sub
dec
sbb
ljmp
jp
xor
push
jb
rcll
xor
mov
cld
cmpsb
and
loopne
dec
fstpt
cwtl
lcall
das
in
sub
into
pop
sbb
sar
mov
ret
int3
mov
inc
sub
fildll
add
cld
xchg
jae
xchg
test
add
cmp
inc
fsubs
in
imul
inc
push
sahf
lcall
addb
lods
pusha
xchg
stos
jno
repz
xchg
stos
and
adc
mov
inc
adc
jns
mov
mov
push
in
jg
lods
enter
cmp
cld
mov
cld
add
xchg
jno
popa
ret
jnp
inc
popf
roll
inc
mov
in
pop
iret
xor
arpl
adc
aas
data16
cli
or
sahf
or
xchg
fldl
pop
dec
addr16
or
cmp
notb
aaa
jb
fs
xor
add
das
aam
and
daa
pop
add
cld
imul
lods
hlt
cwtl
lods
xlat
xchg
cld
loopne
add
mov
sub
mov
xor
pop
xor
pop
dec
mov
je
sub
cmovbe
es
xchg
jnp
lret
jmp
je
jecxz
pop
mov
fstps
jne
inc
inc
sbb
mov
inc
adc
iret
mov
rcrl
jg
ret
sbb
fs
cmp
dec
rolb
push
ss
or
arpl
mov
es
movsb
pop
cmp
cmpsl
push
cld
iret
sub
cli
or
shrl
and
xor
test
cmpsb
mov
fiadds
jmp
pusha
sbb
mov
shrl
xchg
movsb
xchg
loopne
or
cs
popf
rcll
aaa
mov
pop
fbstp
mov
loopne
pop
pop
xor
inc
xchg
fmul
add
lock
lahf
mov
lret
jae
addr16
xchg
or
jo
add
dec
xchg
cmp
ss
mov
stos
sub
inc
shl
mov
cmpb
dec
push
dec
insl
sbb
add
aas
cld
jle
scas
cltd
aaa
adc
lock
icebp
std
cmp
push
test
movsb
inc
daa
jmp
aas
iret
fdivl
pop
push
push
loope
arpl
and
ljmp
inc
jp
dec
call
in
dec
ljmp
mov
movsl
mov
xor
push
fsubrs
jmp
lds
pop
sbb
ja
imul
mov
inc
xchg
testl
lock
arpl
pop
out
push
icebp
add
lods
repnz
fisubl
jecxz
fnstsw
stos
aad
cmp
mov
movsb
push
out
or
inc
push
out
sarl
or
js
hlt
sarl
or
lds
lods
inc
or
jnp
jp
repz
dec
and
pusha
adc
and
inc
and
out
lahf
push
push
pop
push
outsl
jb
xor
pop
stos
fs
cmpsl
inc
bound
sti
pop
adcb
jmp
jae
aas
mov
and
cmp
cmc
and
mov
add
jns
cwtl
jmp
int
call
lret
out
loop
push
popf
sub
xchg
mov
clc
fldt
imul
lds
adc
inc
in
out
mov
cmp
mov
stos
adc
out
xchg
push
in
fucomp
push
cwtl
aaa
push
aaa
xor
lahf
dec
lods
lahf
test
sbb
cmp
inc
std
cmp
pop
dec
les
jge
sbb
dec
bound
or
xchg
test
xor
push
movsl
test
insl
lcall
lcall
movsb
aad
cltd
int
loop
or
scas
lock
sbb
in
mov
outsl
rcrl
js
jnp
insb
sub
add
mov
xchg
fdivr
and
sub
adc
leave
mov
sbbl
jmp
mov
or
dec
insb
shrb
or
and
xor
outsl
mov
dec
fcomps
out
shlb
xchg
mov
andb
outsb
loope
inc
mov
je
mov
fs
fldenv
cmpsl
fldl
mov
repnz
or
pop
rolb
pusha
icebp
dec
mov
pop
pop
jae
outsl
mov
or
inc
xchg
fsub
repz
cmp
adc
cmp
push
mov
rcr
and
and
and
mov
aam
sti
popf
push
or
adc
or
test
push
arpl
pop
repnz
sahf
mov
das
sbbb
gs
loope
ss
shl
xchg
mov
sbb
and
ljmp
sub
jnp
fs
out
sbb
mov
mov
cmp
jle
xchg
xchg
test
fnsave
cltd
jb
fistps
sub
orb
movsl
mov
test
rolb
jae
nop
insl
mov
push
or
xor
or
push
lahf
div
nop
sarb
push
ds
mov
jge
imul
test
xor
inc
xchg
push
mov
add
jb
negb
lods
hlt
cmpsb
sbb
dec
mov
cmc
jo
scas
mov
inc
mov
ds
inc
retw
in
iret
xchg
inc
mov
add
cmovp
fsub
je
push
push
out
mov
int
jae
and
adc
out
adc
mov
mov
push
mov
push
xor
inc
pop
dec
int
xchg
inc
push
or
cmp
dec
cmp
das
mov
in
pop
push
repnz
pop
add
dec
incl
mov
ds
jo
mov
in
into
ss
push
dec
es
stos
mov
sub
test
jb
push
jl
mov
jg
stos
mov
pop
int
scas
loopne
dec
iret
ds
jmp
clc
pusha
cmp
adc
or
enter
idivl
dec
lahf
orl
jb
cmp
iret
sbb
sbb
es
lea
and
sbb
pop
sbb
xorb
rcll
mov
inc
out
mov
cmp
aam
xchg
dec
jmp
mov
mov
mov
jns
push
std
addr16
imul
sub
enter
leave
out
jnp
push
insl
aad
test
fnstcw
push
jnp
push
std
loope
or
loopne
mov
aad
scas
ds
xchg
mov
xor
sub
test
lds
sub
inc
push
andb
das
inc
in
sub
push
cwtl
pop
cltd
mov
xchg
fldt
rolb
imul
lds
mov
ljmp
dec
and
test
mov
cltd
sahf
mov
and
sub
cmpsb
rclb
call
mov
iret
sbb
xchg
sub
sbb
push
xchg
nop
mov
cmpsb
scas
pop
repnz
fidivrl
das
jmp
inc
sub
mov
aam
inc
loope
jmp
mov
out
pop
mov
xor
sub
push
in
or
sahf
xor
scas
and
add
js
dec
cmp
add
pop
sub
nop
and
sub
inc
popf
mov
test
push
adc
adcl
jmp
lds
lods
push
add
sbb
decb
repnz
cmp
out
cmp
sub
inc
sbb
hlt
cmp
jo
pop
cmp
loopne
aad
movsl
out
xor
sbb
push
or
xchg
arpl
insb
daa
mov
lods
addl
test
jae
pop
mov
xor
fidivl
clc
call
test
xchg
xchg
xor
arpl
jno
mov
gs
out
arpl
mov
mov
and
adc
adc
enter
pop
xor
push
pop
push
sbb
mov
jecxz
in
mov
xchg
ljmp
pop
push
test
test
loopne
mov
push
mov
mov
leave
roll
cwtl
mov
mov
les
jno
inc
pop
rorb
sub
push
das
jo
mov
xchg
jmp
rorb
push
adc
xor
xchg
add
ffree
call
lods
inc
cmp
dec
cmpsb
dec
loope
xchg
ret
orb
movsl
stos
mov
icebp
cmp
mov
popa
mov
inc
adc
jg
hlt
popa
mov
push
imul
aas
adc
mov
aas
ljmp
or
test
inc
adc
sub
fucomi
jne
mov
insl
insl
insb
in
mov
in
insl
ss
jecxz
or
pusha
xlat
decl
push
add
cmc
shll
xchg
rcrl
imul
cmc
xchg
mov
rolb
cmpb
mov
jbe
jnp
xor
and
sbb
sbb
sbb
xor
adc
pop
es
xchg
pop
mov
test
jnp
xchg
adc
add
stc
movsb
lods
push
xchg
mov
scas
ret
jb
push
scas
into
popa
jp
cld
dec
pop
sbb
ss
fwait
addb
inc
xchg
mov
adc
lods
aas
sbb
fwait
rcrb
and
mov
sbbb
inc
ret
xchg
cltd
and
xchg
out
mov
mov
divb
outsl
out
jecxz
flds
mov
sti
cmpsl
movsl
imul
add
push
pop
lods
aad
jg
test
mov
add
ds
lock
sbb
mov
lret
mov
vminps
popa
fstpt
jno
sub
add
mov
js
sub
imull
pop
scas
out
arpl
repz
push
xor
jge
fmuls
mov
into
or
stos
jns
or
sbb
std
orl
test
and
jb
pop
dec
test
pop
sbb
add
jp
mov
or
lods
push
ret
xchg
adcl
cmpl
lods
cmp
ret
in
mov
adc
dec
aad
dec
stos
push
or
lods
mov
cmp
jp
dec
sub
xor
adc
xchg
out
sub
dec
dec
test
cmpsl
es
call
mov
adc
movsb
dec
dec
nop
add
ss
xchg
icebp
cmp
add
lods
cmpsl
xchg
xor
shlb
xchg
pop
and
out
cmpsl
add
jl
call
mov
sub
sbb
push
add
decb
lcall
ret
enter
in
aas
std
add
das
cli
fxch
or
das
test
stos
loop
outsb
or
or
jo
xor
push
dec
sti
cmp
repnz
cwtl
mov
add
shrb
and
sbbl
lea
fstpl
arpl
adc
jno
inc
and
mov
jecxz
xchg
loope
icebp
mov
mov
xor
arpl
adc
jno
inc
and
mov
jecxz
xchg
loope
icebp
mov
mov
xor
add
andl
xor
push
shll
jecxz
xchg
loope
icebp
mov
dec
roll
pop
xor
add
adc
jno
inc
mov
sbb
jecxz
in
or
dec
ds
cs
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lcall
xor
or
out
sbb
or
cmp
sub
pop
inc
dec
push
jp
push
lcall
mov
ror
cli
loopne
test
add
xor
and
xor
dec
push
jp
push
lcall
mov
cld
lret
push
ljmp
jg
inc
pop
pop
cmp
cmp
jo
sub
mov
negl
sub
add
stos
xor
sub
fstl
or
inc
cli
push
or
ror
push
mov
xchg
dec
aad
or
popa
cmp
gs
sahf
xchg
sbb
xor
jnp
lea
xchg
sub
rcll
push
lcall
or
sbb
pminsw
xchg
adc
dec
scas
orb
js
repz
xor
push
call
add
mov
mov
push
test
cmpsb
inc
jb
xorb
push
pop
mov
dec
js
filds
mov
pusha
push
pusha
mov
ror
cli
cmp
jo
xchg
cmp
sub
insb
dec
test
pusha
push
call
jmp
sahf
mov
mov
push
outsl
push
dec
push
outsl
pop
fsubrl
or
and
adc
fld
jmp
mov
mov
inc
inc
inc
sub
adc
sbb
add
sbb
mov
cld
lock
rcrl
loopne
lock
or
cmp
sub
pop
inc
dec
push
jp
push
lcall
mov
ror
cli
loopne
lock
or
cmp
sub
pop
inc
dec
push
jp
push
lcall
pushf
or
rep
mov
fnstcw
inc
inc
lcall
fcmovne
xchg
dec
outsl
fwait
sbb
movsb
sub
cltd
jg
lret
cli
rcl
mov
jle
or
sti
mov
add
pushl
xchg
pop
test
push
in
cmpsl
add
fwait
jecxz
in
out
jle
xchg
jns
inc
outsb
mov
xchg
in
or
lea
jb
stc
jmp
pop
or
test
adc
jle
or
xchg
stos
shrb
daa
sbb
push
loop
sets
ss
inc
cmp
aad
adc
xchg
jge
adc
aas
dec
mov
cmp
or
mov
icebp
xchg
and
lock
inc
sbb
imul
out
dec
scas
add
jmp
adc
je
add
popa
repnz
mov
sub
xor
pop
jmp
pop
fwait
mov
lock
xor
in
mov
fcmovnb
adc
push
cs
adc
sbb
mov
mov
lds
lock
pop
xor
jno
sbb
mov
mov
dec
iret
ret
and
mov
jo
sub
incl
jo
or
loope
test
xlat
into
push
std
repz
jecxz
cwtl
and
test
and
les
jl
fmul
enter
xchg
arpl
xchg
imul
jl
in
sbb
xorl
mov
cmp
sahf
dec
sbbb
stos
pushf
cmp
lods
loope
and
dec
jb
adc
pop
push
cmc
push
je
in
rcrl
movb
mov
jne
andl
out
out
push
hlt
jnp
sbb
add
cmp
test
mov
pslld
inc
lret
lods
fmuls
comiss
out
ret
cltd
movsb
dec
imul
or
rorb
lods
cmp
daa
push
in
cmpsl
lcall
push
xor
repz
lea
sbb
xor
pop
cmp
test
imul
push
xchg
neg
popf
cmp
es
xchg
inc
outsl
dec
pop
pushf
xchg
xor
pop
jl
xor
pop
ss
inc
jbe
pop
lods
ret
out
gs
xchg
and
test
sub
mov
nop
jge
mov
imul
and
mov
pop
repnz
out
test
mov
jle
fs
pusha
xchg
and
add
xchg
pushf
mov
mov
push
xor
pop
dec
int3
addl
cs
and
fiaddl
add
sbb
xor
aaa
loop
fcmove
push
mov
rclb
daa
mov
lea
add
jmp
xchg
sub
loop
aam
mov
fcomp
pop
lret
mov
mov
mov
push
cwtl
pop
and
xor
cmp
and
shll
pop
cwtl
lds
repnz
mov
fwait
sbb
aas
push
test
nop
pop
insl
dec
mov
enter
mov
mov
lret
adc
jmp
inc
jns
sub
inc
xor
mov
mov
mov
push
inc
push
fidivrl
loopne
add
out
inc
fisttps
ja
sub
lcall
or
shlb
lret
add
or
mov
loopne
mov
mov
dec
leave
adc
pop
jmp
dec
fisubrs
clc
push
jp
loope
pop
mov
sahf
push
nop
jns
mov
in
insl
pop
cmp
mov
test
sbb
sahf
push
mov
inc
fstps
mov
mov
test
adcl
mov
add
test
arpl
cli
out
add
mov
adc
xor
fcomps
fidivs
ss
mov
int3
add
lret
add
push
dec
dec
xrelease
aad
lret
bound
icebp
ret
push
je
andb
add
fisubs
maxps
aam
inc
jae
mov
mov
push
lods
imul
or
xor
repnz
repz
pop
out
call
cmc
pop
xchg
sbb
or
in
add
out
push
pop
push
push
add
cmp
enter
lock
lea
mov
and
jo
or
sub
fisubs
adc
jno
mov
jp
xchg
out
or
arpl
negl
testl
pop
ret
mov
cmp
cmp
mov
clc
insb
dec
emms
out
enter
icebp
leave
jno
mov
jno
xchg
cmp
mov
insb
push
adc
mov
push
mov
xchg
add
pop
cwtl
lea
repnz
jmp
pop
xorb
cmc
lcall
push
ss
jne
jbe
dec
mov
xchg
cld
pusha
leave
add
loope
loope
fwait
cli
mov
add
lods
mov
inc
cwtl
sbb
jno
mov
mov
fdiv
jns
das
jl
repnz
cltd
std
subl
outsl
mov
cli
iret
stos
xchg
inc
pop
fistl
pop
or
mov
cmp
xor
add
mov
pop
xchg
mov
and
push
mov
dec
lret
jb
lret
arpl
or
mov
mov
and
xor
bound
fcomp
sbb
loope
inc
inc
aam
sub
aaa
add
sbb
ret
pop
sbb
xchg
cwtl
cmp
jmp
in
pop
stc
sbb
gs
sub
push
int
mov
mov
inc
das
and
das
ret
xor
push
in
sbb
mov
cmp
jbe
loop
pusha
add
jo
shr
push
call
cmp
stos
xchg
mov
cmp
and
sbb
jbe
ficompl
add
ljmp
movsb
push
cli
or
sbb
push
in
and
xchg
sbb
jae
mov
cmp
mov
mov
dec
loop
lahf
mov
hlt
test
scas
lcall
mov
xchg
lods
insl
lods
pop
mov
pop
jl
dec
repz
test
lds
movsb
sarl
addr16
sub
mov
jl
push
sub
mov
xor
mov
mov
mull
pop
mov
lock
jb
ljmp
lock
mov
loopne
mov
lock
movb
adc
xchg
xchg
clc
mov
and
push
mov
or
add
or
out
mov
mov
in
mov
jne,pn
mov
out
inc
outsl
inc
cltd
mov
movsb
dec
dec
push
push
mov
mov
mov
daa
xchg
jmp
mov
sub
addr16
fsub
jl
inc
cmp
leave
int
xchg
xchg
jnp
loope
cmc
mov
enter
push
gs
es
push
jmp
mov
jmp
mov
jne
dec
sbb
cld
mov
sub
cmc
testb
sbb
and
outsb
mov
fsub
xchg
push
stos
gs
pop
xor
cmc
ret
out
xchg
cmp
cwtl
cld
clc
mov
testb
movsb
push
inc
push
pop
adc
inc
mov
cmc
cmp
push
push
fsubl
xchg
iret
clc
jbe
shll
xlat
pop
xor
aas
mov
js
outsb
insl
lea
xchg
push
jmp
mov
add
cmp
mov
xchg
sub
pop
daa
inc
aas
das
push
pop
and
pop
cmpsb
add
lods
pop
cli
hlt
repz
hlt
dec
std
aad
push
loop
test
push
or
dec
mov
or
jb
cmpsb
imul
imul
hlt
je
push
out
pop
mov
xor
std
mov
cli
icebp
arpl
mov
pop
cltd
scas
inc
and
jae
repz
fildll
or
ret
cwtl
mov
repnz
cmpl
jl
daa
gs
das
mov
add
cmp
stos
pop
jmp
shlb
shll
imul
call
adc
xchg
xor
ss
aas
dec
aad
fwait
jo
js
shlb
ljmp
push
add
push
in
fs
lea
idivb
andl
xlat
xchg
xor
jns
adc
pop
dec
or
mov
inc
movsl
inc
notl
imul
insl
popa
push
sub
arpl
mov
fldt
jae
sub
dec
xor
xor
inc
popa
neg
sar
out
nop
push
dec
push
dec
movsl
lock
rclb
scas
jmp
xchg
xchg
xor
lahf
cmpsl
sub
loop
mov
dec
or
mov
pop
xor
mov
nop
rclb
dec
dec
and
fs
pusha
cli
push
and
jne
jae
xor
sbb
sahf
and
lods
adcl
std
mov
sub
jnp
xchg
cwtl
div
lret
stos
or
pop
jae
scas
mov
out
arpl
xchg
pop
rcrl
cld
pushf
mov
mov
jmp
fsubs
push
addr16
mov
sahf
sub
scas
mov
and
push
pop
loopne
mov
cmp
dec
shlb
jle
mov
or
mov
insb
sbb
das
xor
and
fs
and
xchg
pop
push
mov
push
jnp
shlb
out
lds
loop
je
movsb
shlb
xchg
mull
jg
in
std
xor
add
lahf
shlb
ret
ljmp
lods
pop
mov
inc
inc
jmp
rol
add
fadd
inc
or
mov
push
jg
sub
cmp
inc
mov
movsl
and
jle
mov
push
fisttpl
jns
or
lret
pushf
ret
bound
push
outsl
dec
dec
in
sub
cmc
add
dec
add
pop
or
push
in
es
push
mov
fidivrl
and
dec
jns
jecxz
aad
add
cmp
cltd
outsl
xlat
iret
jecxz
cmp
xor
mov
imul
sub
sbb
mov
data16
cmc
test
lret
fsubs
xor
dec
in
fucomp
or
les
loopne
testl
shrl
movsl
sbb
mov
add
adc
push
add
mov
insl
imul
xor
xlat
inc
std
fnstenv
cmp
icebp
push
adc
xchg
mov
pop
xchg
push
adc
or
rolb
add
cmpsb
mov
mov
orb
xor
or
arpl
int3
fdivrl
sub
popl
insl
or
pusha
or
sub
addr16
mov
test
sub
pop
dec
adc
arpl
jmp
icebp
orb
sahf
jno
rorl
or
add
in
pop
fwait
inc
scas
sti
mov
mov
and
mov
cmc
ja
add
test
imul
js
push
mov
mov
xchg
popa
leave
mov
ljmp
mov
sub
iret
cltd
and
and
mov
dec
loopne
push
scas
jb
pop
jbe
fwait
lcall
jg
cmpl
sub
dec
stos
lock
insl
lahf
or
xchg
cmpb
ja
insl
les
or
or
das
ljmp
add
pop
adc
test
fs
stc
cltd
or
mov
add
aas
mov
push
sub
jp
pusha
sahf
call
lods
add
jne
dec
xchg
pop
sub
in
push
dec
rorb
pop
mov
push
repz
lock
jge
ret
push
arpl
mov
lret
sbb
sarb
movsb
inc
mov
jae
nop
jb
xor
fldenv
dec
mov
cmp
xlat
sub
adc
jbe
dec
nop
mov
sub
jmp
insb
mov
cs
fwait
mov
lea
sbb
xchg
std
push
xchg
ljmp
xchg
sbb
and
mov
in
ljmp
xor
test
addr16
inc
bound
lahf
sub
mov
push
iret
mov
sbb
cmp
dec
repz
test
rep
inc
cld
mov
test
repnz
mov
mov
inc
add
repz
sbb
xchg
lahf
xor
adc
jae
inc
mov
lods
sbb
fldl
adc
push
outsb
sub
pop
push
pusha
cltd
repnz
popa
cmpl
add
and
jne
mov
outsl
xchg
iret
addr16
mov
cli
add
aam
jecxz
ret
shr
lods
xchg
sub
inc
jne
jmp
out
mov
clc
adc
mov
xchg
sbb
call
sub
inc
mov
sbbb
dec
sub
data16
push
xor
mov
fsub
pop
push
xchg
ja
rcr
sub
pop
xlat
jo
push
andb
imul
inc
and
in
xchg
or
xlat
xor
adc
mov
and
xor
mov
or
jg
push
idivb
sbb
sbb
mov
push
lods
lock
xchg
cltd
or
adc
invd
push
ret
jmp
hlt
incb
xchg
pop
and
aam
pusha
sub
cld
push
mov
jne
pop
sbb
iret
pushf
jns
sbb
leave
xchg
adc
ret
add
fwait
mov
mov
mov
mov
jns
add
dec
ret
lock
add
or
mov
roll
push
ss
jnp
mov
int3
pusha
pop
in
notl
mov
sub
shrd
sub
dec
xor
rorb
test
ljmp
sub
fstpl
push
pop
push
cld
or
cmp
mov
call
fs
dec
jno
loopne
loopne
aaa
cmp
and
test
jp
imul
leave
fwait
dec
rolb
loop
out
in
pop
ja
rcrb
jnp
mov
loop
aad
add
mov
mov
cmp
test
fsubr
xchg
sub
movb
lcall
pop
cmp
xchg
pop
mov
cmpsl
mov
std
cmpb
loopne
add
xor
lock
pushf
sbb
leave
xorb
je
outsl
pop
fistps
aam
int3
xor
cs
clc
lods
cmc
sbb
and
sahf
mov
fisubrl
pop
das
cmp
fbld
pop
shrl
push
mov
je
jge
xlat
ficoms
subb
pushf
daa
cmp
in
push
add
xchg
add
jne
push
sub
idivl
setns
stos
fildl
dec
popa
in
sub
and
dec
add
mov
out
popf
or
xchg
cmp
sub
inc
leave
xchg
imul
int
mov
call
xor
cmpsl
xchg
and
jle
inc
xchg
bound
aas
mov
inc
cli
arpl
pop
mov
loop
test
jo
pop
push
jmp
add
mov
in
nop
or
push
add
fldcw
ds
bound
xchg
sub
mov
dec
popl
mov
aam
pop
andl
sub
out
push
fcoml
jo
mov
aam
sub
outsl
and
push
push
mov
ss
cmp
adc
std
cltd
out
xlat
xchg
jmp
push
ret
mov
xchg
fldcw
outsb
push
cli
sub
inc
push
cmp
sti
mov
outsl
gs
stc
sbb
loopne
testb
repz
imul
jecxz
pop
add
data16
adc
dec
or
les
xchg
push
sbb
ficomps
mov
dec
mov
push
adc
mov
push
add
test
sahf
sbb
and
lcall
int
into
inc
sbb
jns
out
xchg
aaa
mov
daa
imul
pop
lcall
pusha
inc
jnp
mov
push
mov
xchg
sbb
nop
lret
jle
bound
pop
pushf
insl
jmp
ret
test
in
out
mov
test
scas
out
or
adc
mov
lret
and
inc
test
fsubrl
leave
lods
inc
adc
cmpsl
outsl
addr16
insb
or
add
sub
inc
sub
aad
mov
lock
insb
jecxz
xchg
jne
shlb
add
xchg
lret
mov
sbb
add
or
push
bound
inc
mov
sub
ret
aaa
clc
jbe
outsb
push
scas
adc
xchg
xorb
out
mov
xor
rep
mov
jno
ds
lods
scas
hlt
addl
mov
or
gs
mov
mov
inc
sub
mov
push
aad
or
pop
jl
lods
scas
cli
mulb
lcall
jae
cli
sbb
cwtl
outsl
clc
enter
push
push
cli
js
pop
cmp
ljmp
rol
fldl
mov
popf
negb
pop
mov
insl
push
mov
jg
mov
push
ss
rol
iret
jmp
jb
push
sbb
lahf
adc
or
jg
ds
sarb
call
inc
jb
mov
jmp
incb
sub
gs
sbbb
cld
sbb
or
mov
jnp
sbb
dec
enter
lret
mov
cmp
js
sahf
xor
bnd
inc
sub
dec
jno
and
imul
int
inc
sub
sub
mov
push
xor
cli
sub
xor
pop
pop
aad
fstp
sub
mov
mov
scas
movsl
xchg
out
push
dec
xor
xor
sahf
cltd
sub
lock
aam
inc
and
fwait
mov
insl
loop
in
sbb
sahf
imul
jmp
adc
insl
dec
ret
push
loopne
and
enter
in
dec
mov
push
es
inc
scas
fisttps
decb
inc
enter
pop
fwait
or
xchg
sbb
mov
push
cwtl
add
enter
jmp
cmpsb
mov
shr
rclb
call
popa
mov
mov
test
cmp
fldl
mov
sub
pop
fistpl
mov
data16
das
unpcklps
cld
dec
xchg
loope
js
test
shll
enter
pop
in
out
leave
add
cli
jg
or
xlat
ja
mov
pop
inc
js
cmp
mov
xor
mov
enter
xchg
subl
daa
xchg
sub
mov
xor
int
push
iret
xchg
std
or
test
lret
lret
pop
inc
call
repnz
test
aaa
mov
imul
push
push
pushf
cmp
xchg
jne
mov
sbb
aas
mov
cld
adc
test
stc
jae
fbstp
insl
test
push
shlb
imul
mov
into
push
jl
loope
movsb
cwtl
outsl
ret
cld
clc
lods
mov
popa
movsb
filds
mov
xor
xchg
imul
nop
xchg
js
jo
popa
push
stos
xchg
stc
push
shrl
rcr
movsl
inc
cmp
pushf
out
sub
fistpl
popf
push
dec
add
lea
ljmp
scas
fwait
jg
bound
imul
loopne
arpl
lret
push
sbb
cmpsl
dec
xor
out
mov
adc
push
inc
out
and
mov
sub
pop
punpckhwd
mov
adc
fld
mov
lret
mov
jo
mov
out
fwait
and
cmp
push
negl
test
sbb
push
cmp
xchg
mov
sahf
lret
cltd
test
lea
arpl
mov
mov
push
in
and
scas
mov
push
popa
in
lds
lret
push
add
test
mov
sub
movsl
cmc
cmp
mov
test
das
mov
outsb
or
scas
shrl
cld
add
add
jae
iret
ja
mov
jge
lock
out
inc
clc
xchg
outsb
pop
inc
imull
pop
fidivl
xor
in
popf
data16
push
jmp
jp
bound
fildl
xor
xorb
mov
hlt
aas
and
xorb
xor
pop
pop
mov
sub
aaa
leave
jecxz
pop
bound
jns
fisttpl
repnz
in
push
push
fmull
mov
mov
fisttpll
cmc
lret
cwtl
sti
dec
xor
stc
pop
xor
cld
mov
jmp
and
xchg
lret
pop
sahf
xchg
xor
in
pop
jnp
jnp
mov
mov
nop
mov
mov
iret
fmull
push
jae
cwtl
mov
or
add
test
fcmovbe
data16
out
push
mov
mov
or
stos
repnz
sti
jl
xchg
cmp
push
enter
fwait
push
xlat
push
fwait
leave
xchg
std
mov
cli
cli
jecxz
leave
stos
jmp
add
mov
cld
xlat
adc
das
mov
js
mov
cmp
or
enter
or
sub
shlb
lods
stos
jb
mov
and
shrb
addr16
int3
stos
mov
ror
cli
loopne
lock
or
cmp
sub
pop
inc
dec
push
jp
push
lcall
mov
ror
cli
loopne
lock
or
cmp
sub
pop
inc
dec
push
jp
push
lcall
mov
ror
cli
loopne
lock
or
cmp
sub
pop
inc
dec
push
jnp
push
lcall
mov
ror
jp
push
in
cmc
mov
sub
lahf
xchg
stc
in
sbb
xchg
int3
test
cli
clc
shlb
insb
and
adc
add
jno
fs
or
sbb
in
movsb
cld
xchg
int3
test
hlt
lods
in
aam
les
dec
add
je
add
or
sbb
in
and
adc
inc
fsub
lods
lods
mov
xor
dec
and
gs
push
jle
pop
and
sbb
in
test
jg
mov
jg
jo
sub
dec
or
xchg
mov
fisttpll
inc
incl
fstps
dec
out
pop
icebp
in
cmc
mov
or
loopne
stc
mov
xchg
cmp
jl
xchg
aaa
mov
lods
fildl
mov
repz
jmp
lods
sbb
pop
ja
add
sti
mov
inc
repnz
add
inc
and
lods
addr16
nop
jae
lret
je
jmp
pop
outsl
xchg
fs
or
movsb
add
int
test
push
inc
cmp
insl
adc
shll
sbb
in
movsb
cld
xchg
int3
call
mov
insb
mov
int3
dec
sbb
jp
push
or
pop
movb
lcall
movsl
in
push
add
inc
and
sbb
mov
jns
lods
sub
ror
dec
mov
jecxz
pushf
or
adc
push
push
and
jb
mov
lds
aam
les
dec
add
je
fs
or
sbb
in
movsb
cld
xchg
int3
test
hlt
lods
in
aam
les
dec
add
je
fs
or
sbb
in
pusha
jmp
mov
mov
loopne
imull
std
mull
ss
pop
inc
mov
mov
xorb
adc
insb
nop
mov
clc
shlb
push
or
int3
xor
cwtl
out
cmp
xchg
and
mov
push
inc
js
pusha
sti
mov
out
sub
ret
mov
inc
int3
addl
dec
aas
inc
loop
mov
pop
cmpsl
xchg
add
or
data16
push
aas
mov
push
cmp
mov
lcall
adc
in
mov
xor
loope,pn
sbb
shrl
in
push
or
mov
adc
and
repnz
inc
mov
push
xor
cmp
pop
pop
xchg
sub
adc
in
outsl
add
mov
mov
cmpsl
call
adc
outsl
mov
adc
and
cmpsb
popf
lods
sub
cs
into
in
iret
mov
xrelease
add
jno
xlat
mov
pop
aaa
andl
ljmp
add
adc
ret
in
pusha
adc
mov
sahf
lret
or
addr16
and
notl
ja
sub
movsl
aas
lret
fnsave
jl
mov
pop
mov
xlat
and
xor
inc
ret
hlt
mov
inc
jno
inc
jno
cmp
mov
jae
hlt
scas
xor
xor
lods
xchg
mov
sub
cmp
sbb
push
jb
xchg
mov
fistps
mov
pop
add
and
jns
xor
cmp
ret
xor
enter
mov
or
pop
push
mov
inc
cmp
jmp
inc
pop
inc
mov
sub
sbbb
je
push
dec
mov
imul
jg
fidivrs
jbe
cmp
add
cmpsl
enter
sub
les
sahf
jge
xchg
xchg
adc
std
mov
lahf
push
insl
ror
adc
fnstcw
scas
loop
les
js
repz
mov
inc
dec
lock
add
and
mov
shl
and
jmp
push
dec
fs
sbb
jae
xor
sarb
lea
inc
xor
aas
daa
lcall
loop
pushf
xor
imul
jb
in
push
jl
pop
mov
jns
testb
lcall
loopne
xor
mov
jle
pop
pop
cmp
push
cmc
gs
cmp
ret
push
mov
lods
cltd
mov
push
mov
mov
lds
push
sub
sbb
mov
shrl
dec
mov
xchg
adc
xchg
mov
out
push
adc
mov
and
or
mov
sub
outsl
clc
bound
or
stos
cmp
mov
inc
push
out
scas
hlt
sbb
aad
sub
es
lret
mov
sti
ljmp
out
mov
pop
loopne
loope
in
xor
jecxz
mov
push
sub
stos
popf
jne
aaa
sub
ret
jo
jnp
std
aad
inc
lods
xchg
outsl
adc
add
roll
sub
bound
cs
jbe
mov
movsb
push
arpl
dec
mov
push
xor
dec
sbb
cmpsl
sub
inc
cli
pop
jmp
sarl
in
mov
sbb
js
mov
mov
imul
je
jp
dec
xchg
mov
push
jle
lock
add
ljmp
rorl
xor
idivb
cs
xchg
inc
mov
fisubl
mov
jp
inc
sbb
mov
test
xor
into
dec
int3
iret
les
out
into
push
mov
mov
in
popa
mov
fdivr
std
gs
test
xchg
xchg
sbb
ret
xchg
pop
dec
nop
adc
clc
xchg
das
jne
cmp
stos
movsl
sub
mov
test
fcoms
scas
cld
aas
push
fiaddl
sbb
inc
jp
pop
int
lods
adc
rcll
sub
test
and
shrb
call
arpl
jns
sbb
xor
je
popa
sbb
movsb
mov
ficoml
test
loop
add
add
mov
jmp
sub
lahf
out
in
clc
push
dec
xchg
and
cld
jmp
and
pop
mov
fidivrs
bound
add
mov
push
ret
gs
jne
push
pushf
shr
jnp
or
sti
pop
sbb
push
int3
push
cmp
and
ret
or
sbb
mov
mov
inc
or
mov
stc
ficomps
push
int3
adc
mov
cld
sub
cs
inc
add
lods
sbb
psraw
cmp
loopne
mov
rolb
cmp
movsl
test
das
jae
mov
pop
popf
jae
cmp
jp
dec
mov
fstl
pop
lods
outsb
or
iret
hlt
hlt
sub
jg
push
pushf
add
jns
inc
pop
and
inc
sbb
cmc
adc
adc
and
cmp
ja
mov
hlt
outsb
xchg
loope
out
notb
xchg
adc
lock
int
hlt
xor
inc
pop
into
and
dec
or
sbb
xchg
pop
aaa
daa
rol
sbb
mov
cmp
lods
insb
sbb
cmp
fwait
push
dec
mov
xchg
cmp
sbb
cmpsb
xchg
aaa
ficoml
push
movsb
xor
and
sahf
push
xor
clc
les
sbb
aas
mov
imul
notl
enter
rorb
lcall
nop
cmp
into
lcall
jp
aaa
mov
enter
daa
pop
push
inc
je
fwait
ret
pop
cld
pop
bound
mov
mov
call
inc
pop
push
dec
xchg
xchg
cmp
inc
or
rorl
sbb
mov
push
aad
ja
jnp
into
sub
or
jo
adc
lds
dec
fs
mov
or
mov
aas
out
dec
repnz
idivb
std
jae
nop
xor
mov
cmpsb
mov
inc
js
aas
push
nop
jae
mov
mov
jo
pop
or
add
rcr
jno
xor
sub
fisttpl
fcoml
jp
dec
pop
insb
and
in
lret
jne
sbb
enter
lock
out
add
mov
ljmp
mov
out
insb
jo
pop
insl
cld
mov
dec
pop
sbb
fildl
aas
jnp
pusha
stc
dec
lea
out
bound
mov
inc
cmp
cli
gs
inc
imul
inc
lret
mov
test
aad
sub
mov
js
int
stc
sbb
fsts
dec
into
dec
mov
inc
and
aam
jmp
fcmovnbe
mov
pop
scas
out
fstl
push
mov
pop
aaa
loop
pusha
lods
or
jge
data16
nop
les
cwtl
cvtps2pd
enter
fcomi
mov
repz
mov
pop
adcb
add
xchg
mov
movsl
rcl
in
inc
push
jne
inc
call
sub
xorl
ss
pop
jb
dec
stos
jo
fs
xchg
push
add
test
xlat
inc
enter
adc
sub
sbb
mov
push
call
inc
testb
cmp
imul
test
cmp
orl
insl
mov
ja
inc
lock
push
sub
or
ja
cmp
push
add
ja
insb
adc
in
sahf
out
pop
sub
mov
lods
add
cmp
jg
lods
push
cli
hlt
jmp
xor
sahf
ljmp
aad
mov
jmp
adc
mov
rolb
fs
ficomps
xlat
loope
sub
inc
sub
xchg
pusha
in
sahf
sbb
aaa
stc
mov
stos
mov
or
addr16
mov
xor
ret
iret
jp
fucompp
inc
cmc
mov
add
mov
jnp
fdivrl
inc
mov
pop
push
pop
dec
xchg
sub
ss
lock
stc
stos
cmpsb
jle
shrl
addl
sti
adc
fmuls
mov
pop
fstl
inc
xchg
xchg
into
aam
shll
rclb
scas
enter
movlps
arpl
dec
mov
push
negl
out
lds
jns
nop
add
lcall
frstor
shlb
sbb
scas
fists
arpl
mov
out
aam
push
mov
shrl
push
adc
mov
adc
jno
add
fwait
ret
inc
pop
lahf
cltd
add
incl
rol
sub
rorb
test
gs
inc
ds
arpl
xchg
xor
mov
dec
or
nop
mov
lret
jb
adc
cld
inc
or
cmpsb
add
daa
repz
sti
scas
roll
push
fldcw
data16
cwtl
rcl
fstl
andb
xchg
call
call
push
push
mov
mov
mov
stos
popa
aaa
and
in
int3
push
push
inc
pushf
xchg
cmp
xlat
xor
out
aaa
or
or
adc
mov
movsl
ficompl
pop
jg
push
mov
sub
shrl
fdivs
push
jns
cmp
mov
lahf
cmp
or
mov
in
xchg
adc
aaa
cs
in
jno
mov
xor
lret
add
pop
sbb
loopne
inc
pop
mov
incl
jns
daa
or
xchg
imul
out
pop
in
les
in
pop
out
cmp
arpl
in
stos
stos
inc
add
mov
icebp
dec
popa
mov
mov
lret
mov
enter
cmp
add
pushf
out
adc
push
imul
adc
sub
sbb
xor
test
and
adc
mov
inc
out
loopne
add
sub
mov
cld
pop
inc
mov
mov
xchg
sbb
xchg
clc
ja
xchg
rorl
cli
sahf
imulb
sahf
xor
and
and
bound
pushf
movsb
call
jecxz
xrelease
cmp
rcrl
add
icebp
scas
mov
sahf
test
jp
test
mov
stc
cmc
mov
mov
jae
add
xor
pop
aad
cmp
nop
add
inc
mov
dec
sbb
fptan
subl
icebp
iret
adc
pop
pop
dec
jae
pop
adc
dec
pop
adc
mov
mov
xchg
mov
adc
adc
sub
pop
dec
inc
jg
or
pop
popf
push
push
xor
dec
mov
xlat
scas
mov
inc
jecxz
sub
les
xor
lds
sti
mov
inc
ds
cmp
std
fimuls
mov
fwait
cltd
xorb
les
imul
lcall
aad
mov
add
xchg
xchg
pop
lods
arpl
push
sub
repnz
mov
int
adc
jno
aaa
clc
fisubrl
imul
adc
jle
add
test
mov
mov
inc
out
cmp
jbe
or
je
cld
lret
inc
jp
xchg
or
pop
adc
push
push
inc
jns
jno
push
push
jmp
leave
mov
sbb
movsb
test
sub
jle
data16
xchg
jp
fs
lahf
fnstsw
adc
inc
sbb
outsb
int
jecxz
or
push
xchg
lret
dec
insb
test
cmp
lcall
mov
xchg
xlat
stos
mov
popf
xchg
mov
out
aaa
fcomip
add
cmp
mov
adc
sub
rorl
aad
or
mov
in
jns
fs
dec
sub
dec
fcoms
cmp
mov
mov
cmpsl
adc
pop
jbe
lock
int
ret
fwait
xchg
iret
xor
ja
int3
and
pop
ja
or
test
sti
mov
iret
arpl
jbe
jmp
mov
jle
push
out
add
xlat
cwtl
outsb
dec
adc
pop
stc
daa
or
lods
push
adc
sbb
jge
xor
mov
add
aas
push
ss
stc
cmp
adc
stos
xchg
mov
inc
push
xchg
cltd
jne
mov
mov
or
pop
das
icebp
insb
and
es
pop
sbb
int
jbe
mov
lods
dec
stos
inc
jno
push
stc
stc
add
aad
mov
scas
and
and
dec
cmc
aas
in
pop
out
push
push
mov
daa
subb
sarb
inc
sub
sub
mov
jmp
idivl
mov
mov
adc
pushw
xor
or
mov
pop
jg
repz
mov
loope
icebp
mov
movsb
adc
idivb
imul
scas
and
cmp
mov
mov
jne
lods
movsl
pop
mov
pop
stc
and
mov
jb
sub
lcall
mov
sbb
cltd
popf
jecxz
in
xor
inc
jle
aad
mov
int
imul
jo
cs
mov
mov
xchg
loope
out
les
out
imul
jb
in
pop
mov
icebp
movsl
jne
dec
fwait
add
and
scas
mov
push
jge
in
sbbl
mov
mov
rorl
and
jl
bound
or
adc
xor
mov
aam
leave
adc
push
mov
adc
lret
mov
inc
jbe
sbb
sbb
xchg
movb
sub
pop
outsb
pop
mov
ss
mov
cmc
xchg
lods
mov
or
sarl
mov
lods
movsl
pushf
jmp
cmp
imull
stos
loopne
xchg
jns
aam
rclb
test
mov
shrl
dec
and
je
add
push
mov
gs
push
lret
fidivrs
push
loopne
sbb
subl
loopne
test
sbb
xchg
xor
daa
cmp
mov
pop
or
jbe
or
pop
stc
mov
aam
int3
and
nop
jo
and
mov
std
pop
push
and
jae
inc
sbb
jo
jecxz
repz
xor
cmp
mov
icebp
xchg
xor
bound
repz
mov
add
gs
sbb
sar
aam
in
icebp
sub
gs
es
movb
inc
xlat
mov
sbb
ja
and
mul
pop
push
mov
xchg
xor
jnp
mov
add
adc
orl
sbb
xchg
pushf
pop
mov
pop
lods
inc
inc
lcall
xchg
cltd
xor
in
pop
arpl
push
int
jbe
aam
mov
jg
sub
ja
imul
fcomip
xchg
sub
xchg
idiv
mov
jge
mov
mov
or
mov
xor
out
pop
or
gs
jo
clc
xchg
bswap
adc
int3
orb
dec
adc
sahf
orb
push
test
jl
inc
mov
and
movsw
outsb
mov
lret
xor
lahf
pop
mov
xor
hlt
es
and
rcll
xor
or
adc
mov
xchg
addr16
sub
add
dec
es
int3
pop
daa
arpl
and
adc
addr16
push
xchg
rorb
bnd
shr
lret
xor
sub
add
cli
jmp
push
repz
sahf
cmp
js
mov
addr16
push
or
inc
imull
add
in
andb
shrb
dec
aas
mov
orl
popl
push
and
ja
mov
jb
inc
sub
sbb
mov
lea
in
int3
push
movsb
pop
rcrb
xchg
insl
lcall
pop
mov
jle
adcb
fdivrs
fsubrl
sbb
sbb
ret
aaa
add
ret
jp
inc
inc
mov
fdiv
lahf
fcomip
repz
push
movsl
scas
enter
cs
push
xchg
nop
lea
andl
cmp
int
push
mov
cmp
cld
jmp
or
rclb
fwait
jbe
inc
adcl
and
xchg
or
or
push
movl
sarb
jbe
inc
ucomiss
sub
out
mov
inc
outsb
jae
or
inc
lods
xor
adc
jbe
popf
or
push
adc
int3
cmp
inc
adc
push
sub
outsb
pushl
call
enter
sub
popa
sub
stos
sub
xchg
jae
mov
int3
insb
mov
roll
and
xor
bound
sahf
je
popa
add
repnz
dec
jg
xchg
inc
push
sahf
shrl
xchg
pop
and
pop
sub
gs
cmpsl
rcl
jno
test
mov
insl
mov
xchg
pop
push
xchg
stos
aad
addl
add
xchg
push
aad
int3
add
lret
in
adc
cmp
roll
pop
sbb
gs
loope
inc
inc
out
shll
mov
mov
arpl
rorb
dec
xchg
cmp
add
pop
call
rcr
or
in
adc
jmp
mov
xor
jb
mov
pop
loop
cs
and
dec
addr16
jl
pop
mov
outsb
insb
rol
into
cmp
jle
sub
arpl
cmpsb
mov
mov
mov
sub
lret
imul
mov
push
mov
mov
and
cmpsb
jg
fcmovnbe
sub
pop
add
mov
shr
icebp
and
rcrl
and
xchg
xchg
mov
push
mov
xor
in
and
test
adc
lods
mov
cmc
mov
pop
mov
xchg
cwtl
push
dec
insl
popf
test
or
xor
mov
and
daa
inc
jne
xor
xchg
cwtl
out
push
xchg
mov
icebp
jnp
fldl
cmp
mov
sbb
push
or
mov
loop
mov
movsb
fdivs
das
jle
enter
mov
xchg
and
rcll
into
aas
sub
add
cmpps
adc
cld
inc
jbe
sahf
jp
ffree
insb
ret
and
jmp
out
mov
pop
xchg
mov
mov
mov
mov
jge
inc
into
mov
clc
mov
sahf
jb
adc
mov
dec
push
add
cmp
cmpsb
add
sarl
and
ss
add
mov
mov
aas
imul
push
jecxz
dec
and
adc
lea
dec
and
lret
into
jns
iret
into
or
fsubrl
stos
jnp
nop
inc
jmp
test
jae
mov
outsl
pop
iret
fiadds
daa
pop
or
lods
scas
jo
push
xchg
test
test
pop
fnstcw
pop
jne
push
adc
add
push
mov
adc
addr16
or
adc
jb
pop
jg
xchg
repz
lcall
movsb
mov
xchg
shl
dec
popa
adc
pusha
jae
jnp
cmp
cmp
jg
or
inc
mov
pop
push
dec
fistpl
fwait
jae
aam
or
test
subb
jae
push
sbb
dec
loop
mov
inc
out
aaa
mov
jo
ficompl
jge
xchg
fnstsw
mov
xor
add
movsl
int
mov
int3
es
adc
jp
dec
and
jge
mov
mov
outsb
dec
sbb
lea
cltd
loope
push
dec
and
aam
adc
xchg
fwait
adc
popf
inc
mov
mov
mov
fistps
jno
and
jecxz
xchg
mov
add
into
test
and
jmp
mov
addr16
mov
lods
cmpsl
lods
inc
push
or
push
movsb
mov
mov
test
stos
jge
add
sub
jle
cld
add
xor
fnstcw
ror
sbb
scas
mov
lahf
xor
xchg
in
in
enter
xor
ljmp
std
pop
adc
lahf
aas
or
add
xor
add
leave
hlt
mov
ja
addr16
mov
ret
mov
mov
dec
dec
fs
mov
xor
into
fcmovu
jno
xor
and
push
test
loopne
xor
and
mov
push
xor
pop
mov
cld
lods
push
mov
out
push
ds
pusha
add
ret
add
sub
push
jmp
mov
popf
mov
inc
es
mov
mov
dec
fs
out
lret
xchg
test
sbb
int
mov
mov
jl
pop
jnp
and
incl
cli
insl
jle
jns
inc
loop
inc
movsb
out
std
xchg
jnp
call
add
out
icebp
orl
pusha
pop
xchg
cmp
and
mov
daa
insl
out
adc
mov
ds
repnz
cltd
or
lods
jp
pusha
cmp
dec
cld
mov
cwtl
fdiv
lods
in
aam
les
dec
add
je
fs
or
sbb
in
movsb
cld
xchg
int3
test
hlt
lods
in
aam
les
dec
add
je
fs
or
sbb
call
test
cmc
lods
loopne
aam
lds
dec
add
jge
push
or
sbb
in
mov
sbb
lods
fdiv
lods
hlt
cmp
or
arpl
fcmovnbe
mov
movsb
in
ret
stos
repz
push
xor
pop
aaa
xor
push
add
xchg
adc
out
xchg
shrl
loope
adc
inc
xor
push
push
inc
push
jno
popa
or
mov
xchg
mov
cmpsb
adc
add
push
es
dec
jno
popa
adc
and
mov
les
pop
inc
and
inc
cli
mov
out
pop
pop
cmp
repnz
jl
mov
test
add
jp
xchg
fldenv
scas
cmp
and
cs
lock
mov
stc
das
test
decl
jge
xlat
jmp
dec
test
jp
bound
popa
push
push
add
jb
push
add
testb
xchg
push
xchg
es
xchg
das
subl
out
xorb
mov
cltd
ljmp
fiaddl
push
sub
pop
cld
ret
xchg
adc
hlt
sub
test
shll
inc
ljmp
and
mov
inc
ret
icebp
pop
mov
dec
fiaddl
xor
and
push
inc
push
jno
popa
mov
subl
stos
shrl
loope
push
push
push
or
inc
and
xchg
test
mov
test
mov
mov
adc
jae
popa
add
sub
adc
lock
in
mov
xchg
xchg
and
and
push
pop
inc
push
jno
popa
es
add
rcll
loope
adc
inc
xor
push
push
inc
push
jno
popa
es
add
rcll
loope
adc
adc
jno
bswap
lahf
jle
clc
cltd
idivb
jo
cmp
add
jge
repnz
adc
int
pushf
add
hlt
shr
or
cltd
mov
xchg
push
mov
aam
cmp
xor
push
xlat
stos
sarl
out
xchg
inc
clc
movsb
adc
mov
jge
jbe
mov
mov
jbe
icebp
and
ror
xchg
mov
pop
rcr
addr16
std
dec
sub
imul
movsl
jmp
xlat
jp
decb
lods
js
je
jo
add
sbb
adc
popf
mov
mov
cwtl
movsl
dec
jmp
inc
loop
test
push
clc
mov
mov
mov
es
inc
ret
or
ret
fidivl
sbbb
push
xchg
lods
jmp
jecxz
jp
pop
jp
xchg
and
icebp
fidivs
je
ljmp
gs
jp
int
das
insl
pop
sarl
mov
xchg
imul
cmp
lock
adc
and
fldcw
mov
mov
push
pop
popa
xor
pop
push
xor
xchg
adc
mov
push
fistl
inc
imul
pop
and
rorl
addr16
repnz
mov
mov
mov
mov
pop
cltd
stos
xor
fs
and
jmp
xor
add
mov
jnp
xor
sub
hlt
push
mov
mov
into
inc
mov
das
push
xlat
pop
sbb
and
inc
outsb
add
fbld
movsb
adc
push
ficoml
enter
adc
imul
mov
ds
xchg
push
frstor
mov
xor
mov
out
mov
sub
inc
jl
adc
dec
and
inc
add
clc
sbb
pop
sbb
push
or
int3
rol
pop
push
cmp
fidivrl
pop
mov
pop
mov
jae
mov
xor
adc
repz
or
xor
adc
sub
repz
fs
rcrl
sbb
inc
xadd
gs
and
lahf
sub
mov
fidivrs
sbb
push
cmp
ret
cmp
cmp
fisubrl
and
pop
arpl
jecxz
cwtl
dec
and
stos
shrb
add
pop
mov
and
jnp
mov
sub
cld
rcl
xor
test
push
mov
scas
sbb
push
sub
adc
stos
cli
fwait
loopne
xchg
or
repz
andl
pop
fnstsw
and
test
xor
scas
test
adc
add
aad
ljmp
rorb
out
jecxz
je
push
push
aas
jns
popa
fidivrl
push
mov
lcall
mov
mov
push
or
aad
cmc
xlat
push
adc
adc
test
cwtl
scas
and
ret
out
jb
sahf
aas
es
jb
pop
and
inc
push
mov
or
xchg
or
push
test
push
or
sahf
addl
xchg
imul
dec
push
lds
sub
pushf
push
and
imul
and
mov
adc
test
add
adc
nop
clc
mov
inc
test
add
inc
ljmp
sahf
xchg
pop
ss
inc
add
add
ret
jg
sti
inc
or
dec
in
and
xchg
aaa
imul
rorl
lahf
adcb
fimuls
sarb
lock
inc
imul
test
mov
pop
mov
dec
cmp
fs
ficoms
sub
jno
je
int
pop
test
or
xorl
jmp
mov
or
cmp
jne
jecxz
subb
cmpb
mov
push
mov
jecxz
andb
cltd
jns
inc
popa
adc
pushf
stos
jecxz
mov
cld
xor
addr16
jp
stos
fstl
inc
and
xlat
and
mov
stos
adc
aam
add
sub
and
add
ja
fcmovnb
dec
dec
pop
xorb
mov
aaa
pop
dec
pop
out
push
lods
lods
iret
jnp
nop
nop
pop
and
xchg
data16
sbb
mov
xor
mov
ljmp
mov
add
orl
jno
pop
lahf
mov
ret
pushf
dec
mov
cmp
xchg
xchg
ret
test
pop
mov
xor
fiadds
dec
jle
or
jb
int
stos
adc
push
xchg
ret
loope
jae
sbb
gs
sbb
jne
mov
fsubrs
ficompl
sbb
dec
ss
xchg
inc
xchg
dec
pop
pop
cli
and
call
cmpsl
arpl
xlat
and
or
sub
sbb
mov
add
pushf
arpl
add
setle
xlat
ret
sub
repnz
jb
rorb
xor
push
fwait
sbb
std
xor
lock
mov
adc
pop
sti
std
pushf
add
stos
int
mov
inc
test
mov
lahf
jne
cld
or
stos
sbb
fs
mov
or
idivb
mov
jne
xchg
mov
jnp
les
hlt
mov
test
xor
ficoms
sub
cli
sbb
das
imul
sarb
and
mov
dec
jg
mov
dec
sahf
jecxz
jnp
pop
and
mov
not
lods
pop
lahf
ret
adc
int
stc
ds
sub
pop
mov
inc
sub
and
imul
pop
dec
frstor
int
cmp
mov
inc
dec
ficompl
fnstsw
fnstcw
dec
cltd
notl
push
sbb
sahf
or
sbb
inc
mov
lods
mov
push
dec
sbb
scas
rcll
pmaxsw
sbb
iret
cmc
sub
add
mov
add
repz
or
sub
leave
hlt
push
lret
int
loope
iret
lcall
mov
mov
sahf
insb
cmc
les
pop
and
mov
imul
sub
pop
lock
mov
dec
pop
inc
in
cmp
cld
mov
icebp
cmp
aas
fdecstp
shr
push
mov
stos
mov
shrd
sbb
lods
dec
mov
movsl
xchg
outsl
or
test
cmp
test
sbb
and
iret
add
and
aad
push
insl
mov
xor
fmuls
ret
jb
adc
or
loopne
mov
hlt
icebp
test
push
dec
jle
repnz
test
std
bound
ret
or
push
xchg
lods
ljmp
xor
cmp
pop
push
std
mov
ss
inc
mov
mov
and
jp
lods
sub
leave
add
pop
xchg
outsb
loope
loop
jg
mov
mov
cmp
repz
repz
xchg
test
fisubrl
rcrb
xor
push
cwtl
repnz
pop
hlt
das
popa
mov
dec
je
dec
loop
pop
test
xchg
fistps
cmp
push
enter
mov
flds
sarl
push
pop
clc
rcr
mov
outsl
loopne
loope
cs
pop
bound
lods
or
imul
cmpsb
sti
lds
xor
mov
dec
mov
push
cltd
imul
mov
mov
inc
and
mov
rorb
adc
mov
popa
cmp
dec
jo
iret
sbb
stos
stc
orb
xlat
mov
pop
cltd
jnp
test
mov
inc
ss
sti
pop
rolb
jecxz
inc
mov
add
orb
out
dec
iret
or
cmpsl
jno
xchg
divps
pushw
mov
or
sbb
adc
pop
add
jmp
xchg
jle
movsb
push
loope,pn
sbb
dec
jle
dec
jg
out
cld
in
test
mov
mov
test
and
pop
enter
fiadds
push
fs
sub
dec
mov
adc
mov
pushl
lock
popa
jmp
add
cmp
repz
insl
decb
arpl
movsb
cmp
sqrtps
sbb
cmp
push
sarb
mov
sub
cs
or
cmp
xchg
cmovs
mov
imul
sub
jp
dec
pop
sahf
cmp
sahf
jecxz
rcrl
push
and
mov
repnz
into
div
mov
movsb
push
jb
sub
inc
loopne
cwtl
dec
stos
fcmovnbe
outsb
imul
mov
test
pop
xchg
dec
movsb
xor
std
lret
jl
ficomps
test
stos
ljmp
pop
mov
and
sarl
mov
sub
sub
movsl
into
std
movsb
cmp
test
testl
aad
aad
mov
xorps
cmp
cmp
movsl
xchg
jmp
je
adc
and
hlt
jp
daa
cmp
fisubl
add
fdiv
dec
lret
ja
cmp
push
sbb
outsb
inc
rcrl
adc
pop
es
dec
sbb
shll
pusha
repz
mov
das
dec
ret
inc
lcall
or
ds
ficompl
jnp
or
lcall
pop
cld
inc
sub
cmp
fldcw
frstor
mov
stc
loopne
push
dec
out
jo
dec
sbb
fidivs
fmull
loopne
xor
push
cmpsb
xchg
test
push
sbb
cwtl
push
mov
fabs
repnz
loope
xchg
cmp
ret
xor
pushf
mov
xchg
lahf
int
push
push
ror
mov
jbe
gs
mov
inc
fwait
dec
sub
in
les
push
stos
xchg
adc
sbb
fstpt
push
adc
push
push
jecxz
mov
vpor
lcall
mov
xor
loope
loopne
cmpsl
shll
push
pusha
arpl
stos
pop
mov
or
fidivrl
insl
xchg
iret
or
push
mov
popf
push
mov
dec
push
sub
jle
sarl
adc
pop
xor
mov
jnp
sbb
inc
test
xchg
add
stos
mov
xor
imul
mov
pushl
push
outsb
sub
adc
dec
or
xchg
mov
js
dec
push
lds
in
mov
inc
bound
mov
test
icebp
sub
rcrl
into
mov
leave
loop
loope
mov
es
roll
jl
pop
add
test
test
and
sub
sahf
out
and
sbb
push
insb
pop
fwait
jae
push
or
leave
loopne
cmc
xchg
push
subl
pushf
shrl
scas
adc
mov
into
push
and
sbb
inc
in
test
fs
fistl
inc
fbstp
push
push
test
push
hlt
xlat
rorl
ret
and
lret
mov
jmp
mov
sbb
and
add
data16
std
out
imul
mov
sub
cmpsl
flds
cmc
mov
imul
mov
add
inc
out
sub
pop
mov
dec
jbe
pop
fildl
push
jne
cwtl
flds
sbbb
fldenv
mov
mov
xchg
add
sub
push
fsub
movsb
xchg
aad
adc
lahf
fdivrl
stc
arpl
dec
test
mov
mov
cs
push
lahf
ror
xor
ss
xor
fbld
xchg
out
push
mov
xor
jnp
stc
or
ret
rcrb
fsubrp
pop
lret
es
mov
xchg
out
shrb
push
jns
ret
adc
jecxz
fists
stos
test
test
adc
rcrl
fsubrl
adc
mov
inc
pop
sub
cmp
push
jns
out
fidivrl
in
ret
sahf
imul
jecxz
and
mov
jae
incb
xor
jl
ljmp
adc
pop
lret
idivl
inc
push
addr16
aam
xlat
mov
rcrb
daa
in
loope
sub
in
test
mov
mov
mov
ret
mov
and
jae
out
gs
xor
jb
cmpsl
adc
xor
out
dec
jo
int
subb
aaa
inc
cmp
sahf
jns
icebp
int3
jp
cmp
fdivl
push
jb
sbbl
mov
sbb
xor
adcl
imul
ret
cs
pop
pmaxsw
out
enter
out
push
pop
fildl
jnp
and
pop
fsubs
mov
jo
movsb
inc
scas
dec
sbb
adcb
js
ja
inc
cli
sbbb
ficompl
sarl
sbb
leave
xor
fcmovb
mov
push
or
sub
jne
stos
cmp
leave
jge
test
mov
jb
lods
mov
jmp
inc
iret
push
stos
mov
cld
pop
mov
jecxz
sbb
xchg
decl
inc
mov
ljmp
and
imul
dec
je
dec
out
pop
daa
pop
les
inc
push
loopne
mov
adc
dec
js
pop
pop
aaa
add
mov
push
test
lret
bound
add
push
jnp
into
inc
jg
lea
sbb
xchg
sub
push
mov
jno
and
enter
adc
adc
arpl
pop
in
test
mov
and
mov
ljmp
jbe
lret
lock
push
out
mov
mov
bound
push
loop
sbb
sbb
fidivrl
in
sub
data16
adc
jnp
in
call
mov
hlt
fwait
stos
lock
lea
jne
xlat
clc
sarl
dec
rorl
mov
or
add
pop
mov
cmp
popf
jmp
jmp
jbe
push
aad
push
movsb
ljmp
ljmp
adc
mov
sub
inc
jp
stc
jp
in
or
into
push
movsb
daa
inc
adc
movsl
inc
xchg
insb
xchg
sub
test
repnz
out
es
jg
cmp
stc
and
mov
cmp
addr16
data16
adc
fisubrl
mov
mov
shrb
test
fcoms
cwtl
xchg
mov
or
iret
dec
aam
xchg
adc
clc
std
icebp
lods
aas
arpl
and
jnp
xor
addb
das
sbb
adc
or
xor
push
movsl
jbe
jb
mov
cli
pusha
mov
cmp
addr16
lret
setne
and
call
and
mov
addr16
xor
loop
lahf
sub
into
loopne
xor
dec
mov
in
cmpsl
add
adc
pop
push
sarl
push
lea
dec
or
rcr
push
pop
cmpsl
lcall
or
adc
cwtl
jbe
and
pusha
loop
mov
cmp
arpl
arpl
cmp
sbbb
mov
xchg
out
clc
push
hlt
cmpb
pop
pop
jle
xchg
add
paddb
inc
inc
and
inc
outsb
insl
aaa
inc
movsb
ljmp
aaa
fs
sbb
xchg
rcll
divl
aad
or
aaa
sub
mov
das
lds
popf
cmp
jb
notl
add
pop
nop
sbb
pop
sub
lods
shl
or
pop
imul
pusha
popf
insb
ficompl
mov
lea
xor
inc
cmp
das
cmp
mov
sbb
daa
loopne
pop
lahf
repz
imul
test
nop
sub
sbb
stos
sub
jnp
leave
jecxz
mov
mov
add
pop
jae
dec
aaa
xor
outsb
xchg
cwtl
cs
xor
out
inc
cwtl
dec
xor
aaa
mov
in
push
hlt
je
push
orl
and
stos
jbe
or
inc
shl
pop
add
gs
jae
mov
xchg
sub
sbb
mov
or
jbe
jae
jg
push
jae
push
sbb
mov
aam
fisttps
bound
mov
data16
dec
xor
lret
xor
scas
addr16
repnz
xchg
inc
xchg
cmc
jo
or
mov
rcrb
test
xchg
push
ds
cli
lahf
push
push
incb
dec
sub
push
fcoms
or
decl
cmp
fcoms
cmp
pop
push
fmuls
enter
mov
pop
pop
iret
jle
mov
js
jg
fistps
jmp
push
stos
adc
mov
out
mov
ds
sbb
cwtl
xor
ret
jae
inc
xor
inc
xchg
bnd
jae
push
fidivl
push
jg
mov
cmpsb
dec
imul
xchg
daa
lods
out
out
xchg
ret
jno
jmp
jno
fsubr
sbb
test
and
jecxz
int3
jp
mov
adc
sub
inc
aaa
lret
mov
mov
pop
loope
arpl
lock
rcll
xor
lods
movsl
nop
daa
jb
outsb
and
lods
and
roll
fldenv
mov
movsb
jecxz
push
bnd
shl
cmp
popa
inc
pop
pop
fwait
xchg
sub
mov
inc
std
and
mov
or
in
inc
rorl
fsub
mov
stc
leave
mov
push
popa
sbb
or
outsb
and
xchg
xorl
add
lock
pop
mov
fldenv
aas
insl
leave
movsb
sub
fcomps
pop
lahf
insb
jle
mov
mov
repnz
sbb
mov
sahf
popa
std
sub
add
mov
adc
mov
mov
xchg
movsb
cli
sbb
xchg
aad
lret
xchg
fs
pushf
xchg
push
sbb
jmp
daa
jae
scas
sub
adc
mov
and
add
inc
or
scas
pop
arpl
xor
or
inc
xor
ret
sbb
inc
daa
vphadddq
push
and
mov
sub
cmp
jge
mov
dec
ret
or
push
jge
les
fstps
or
out
test
fwait
in
sbb
mov
xor
push
fcmovu
mov
mov
adc
repnz
adc
adc
insb
dec
ljmp
nop
xor
insb
adc
adc
mov
mov
outsl
enter
sbb
or
dec
or
addb
pop
sbb
sbb
testb
sub
icebp
mov
aaa
jge
test
sbb
ljmp
test
pop
dec
leave
adc
in
sub
dec
sahf
sbb
xchg
movsl
adc
push
roll
adc
pop
jle
gs
mov
pop
mov
sbb
jg
loop
push
jge
aaa
stc
and
fdivp
pushf
and
cmpsl
hlt
fisubrl
aas
cltd
stc
dec
out
inc
lret
loopne
cmp
movsl
lea
jmp
scas
xor
add
inc
cli
jbe
xlat
repz
adc
out
jl
inc
sbb
iret
mov
mov
in
inc
popf
outsl
ret
cli
jp
lods
push
stos
push
in
test
mov
sub
sbb
lahf
adc
pop
xor
dec
aas
std
cmc
sub
dec
fcoms
out
xchg
sub
ja
adc
adc
sbbl
icebp
outsl
ret
movsl
mov
ss
sub
test
addb
mov
sub
jb
pop
arpl
xchg
hlt
dec
xlat
roll
lods
mov
cs
dec
sbb
cmp
fcomps
adc
popa
xchg
fs
leave
lahf
jbe
imul
outsb
sbb
lret
ja
repz
sub
or
xchg
inc
mov
shlb
or
sbb
and
movsb
mov
mov
sub
inc
int3
idivb
jb
pop
xchg
add
js
mov
aam
xor
aam
fidivs
sbb
jae
js
das
pop
jns
lahf
jg
mov
or
data16
je
mov
xchg
stc
mov
mov
iret
jno
pop
cwtl
inc
adc
or
xor
sub
out
or
dec
pop
push
add
es
jne
pushf
popa
lds
out
mov
add
xor
pop
xor
jae
arpl
jl
xchg
and
push
adcb
sbb
and
decb
stos
imulb
mov
mov
stos
jne
mov
lret
inc
sahf
daa
test
sub
adc
sbb
sbbb
pushf
jb
mov
out
lret
sarl
cmp
aam
call
ret
or
mov
or
jae
test
add
mov
mov
adc
push
cmp
cmp
int
jo
lods
negb
pop
shll
into
cwtl
sbb
lods
aam
aaa
inc
stc
cmpsl
stc
aas
lods
mov
pusha
sbb
xchg
fsubp
frstor
addl
and
push
inc
push
jno
popa
es
add
rcll
loope
adc
inc
xor
push
push
inc
push
jno
popa
es
add
rcll
loope
adc
dec
xor
bound
inc
insl
jno
popa
es
xlat
add
rcll
loope
adc
and
push
push
inc
push
jno
popa
out
sub
xchg
cmpsb
out
dec
decb
into
push
fimuls
clc
insb
enter
mov
pop
xor
in
pop
cld
pop
mov
sahf
cmp
pop
clc
insb
enter
test
mov
fsubrl
js
push
lods
call
push
icebp
inc
clc
je
rcll
cmp
aad
incl
cmp
repz
lock
jmp
and
mov
sbb
in
push
sti
pop
dec
jecxz
repz
movsb
push
test
popf
add
hlt
lea
mov
mov
and
test
call
add
lods
mov
or
mov
mov
mov
cmpsl
cld
cld
je
in
and
mov
pusha
cmp
dec
clc
movsl
enter
mov
addr16
cmp
xchg
test
cmpsl
jae
pushf
daa
cmpb
aaa
pushf
cmp
mov
popa
fmul
cltd
int3
in
js
or
pushf
mov
or
sub
adcl
xchg
push
pop
fbstp
push
insb
xchg
pop
lods
dec
leave
jnp
dec
lods
idivl
insb
fdivrs
test
mov
aad
les
push
in
xchg
xor
and
or
jg
jp
popa
in
cmc
int3
add
aaa
mov
imul
shll
nop
cmp
frstor
sbb
sub
outsl
hlt
adc
sbb
fdivrs
test
adc
inc
les
sub
cmp
int3
push
cld
pop
mov
pushf
cmp
pop
clc
insb
enter
test
mov
int3
push
cld
pop
mov
pushf
cmp
jae
shr
bswap
pusha
xchg
jle
cs
jo
pushf
adc
ret
ja
enter
shrb
cmp
pop
insl
push
cmp
loope
lds
jo
xchg
sti
idiv
mov
lods
out
out
hlt
inc
or
xchg
repz
mov
scas
or
xor
jl
adcb
sub
aad
mov
sub
add
enter
int
gs
das
push
add
push
popf
inc
rolb
jb
and
sub
ljmp
dec
xor
cmc
mov
fcmovne
sub
push
pop
sbb
sub
stos
pop
cmp
stos
mov
mov
xchg
test
xor
sbb
inc
inc
mov
jmp
jo
or
lds
mov
adc
and
sahf
lret
mov
shrb
mov
fiaddl
push
addr16
jg
xchg
push
loope
xchg
mov
popf
fisubrl
dec
xchg
pop
stos
mov
adc
rorb
subps
or
mov
push
jmp
pop
daa
cmp
jp
shll
shr
fsubrl
add
mov
ljmp
push
out
out
jb
push
loop
popa
in
mov
push
inc
cmpl
push
loopne
cmp
imul
and
and
cmp
fprem
imul
xchg
jo
sbb
std
add
insb
mov
je
xorb
lret
pop
in
mov
addr16
inc
fstps
mov
or
dec
jecxz
into
jae
mov
out
fisubrl
sti
sub
xor
aaa
inc
stc
push
mov
dec
fiaddl
movsb
lret
insl
sti
pop
enter
negl
shr
gs
cmpsl
and
loope
int
ljmp
add
pop
sbb
out
sub
xchg
jns
data16
jecxz
sub
lret
sub
outsb
pop
lods
xchg
or
xor
push
adc
or
or
jecxz
dec
cmp
in
push
ss
imul
test
and
out
cltd
push
or
icebp
inc
xchg
ret
es
cmp
bound
test
cmpsl
insl
mov
mov
sahf
cmp
push
sub
sbb
and
mov
ss
ds
fnsave
sbb
jle
out
xor
ss
loop
xor
dec
add
mov
aad
jno
insl
adc
int3
data16
xor
mov
mov
imul
cli
pushf
stos
add
insl
adc
shlb
adc
dec
imul
jp
loope
mov
call
addr16
sbb
lret
lea
repnz
or
stos
pop
dec
out
pop
xor
add
aam
sub
mov
in
sbb
mov
xchg
adc
mov
ja
xor
or
xchg
sahf
fs
and
xchg
xchg
mov
cli
cmp
stos
test
pop
fwait
cmp
lretw
pop
xor
test
loopne
negl
in
out
add
adc
aas
pop
adc
inc
in
pop
addl
sbb
xchg
cmp
pop
or
jne
pop
cli
xchg
cwtl
aam
mov
mov
inc
mov
and
jns
ss
popa
daa
call
cmp
dec
js
xchg
movsb
repnz
mov
popa
push
xlat
sahf
push
jg
pop
lret
das
fidivl
out
pop
mov
test
cmp
mov
leave
push
mov
mov
fwait
lahf
inc
add
test
or
mov
push
add
daa
int
test
dec
in
cmp
cltd
adc
lea
daa
add
int
sarl
in
mov
pop
or
cmp
sbb
adc
insl
outsb
inc
sti
fstl
push
push
xor
imul
aaa
mul
sahf
cld
cmp
jecxz
outsl
bound
aad
push
jle
shrl
mov
jg
stos
mov
ljmp
call
outsl
ds
jns
jno
push
push
jp
jl
xchg
pusha
lods
adc
jo
lahf
ret
mov
pop
push
pop
lret
xchg
es
push
sahf
lcall
in
pusha
dec
pop
and
ds
ss
test
and
mov
xchg
lock
lods
ret
sbb
pusha
add
pop
in
mov
xor
cmpsb
xchg
enter
test
mov
out
pop
mov
dec
or
sub
cmp
or
rcr
cmpsl
push
mov
sbb
fistl
test
adc
push
xchg
xor
push
mov
push
imul
mov
popf
mov
pop
jp
ljmp
ss
rsqrtps
cmp
and
jbe
loope
inc
add
dec
ljmp
loope
cmp
ret
jmp
jp
test
rol
xor
into
lods
sbb
mov
jne
pop
jns
xchg
leave
or
cwtl
jp
dec
inc
xchg
mov
pop
push
xor
lret
mov
xlat
add
mov
pop
loope
imul
fnstenv
sub
pcmpeqb
mov
out
or
mov
stos
push
mov
fs
test
push
mov
fs
std
push
int
jb
xor
mov
or
out
test
mov
pop
je
cld
and
cmpsb
xchg
mov
mov
lret
enter
jnp
test
cmp
sbb
sahf
insl
jmp
adc
pushl
push
jbe
jo
loope
lods
in
jbe
jno
int
lea
sbb
andl
jle
sub
in
dec
lock
aam
jecxz
scas
adc
dec
pop
repz
pop
andl
push
je
rcrl
cltd
nop
push
icebp
les
fldpi
jbe
inc
mov
mov
cmp
mov
or
add
cmpxchg
pop
mov
mov
pop
arpl
add
ret
mov
and
and
jno
cmc
gs
nop
pop
push
or
fsts
loop
in
das
ss
adcl
adc
xchg
mov
test
mov
ljmp
mov
and
xlat
dec
rorl
jp
ret
xchg
shr
add
pop
fsub
inc
enter
sub
and
lcall
sub
push
loope
inc
lock
mov
mov
cmp
pop
into
insb
arpl
jns
mov
lahf
mov
fdivrp
cs
sbb
inc
cwtl
sahf
push
popa
negb
dec
and
inc
dec
inc
xor
stos
pop
fdivrs
pop
cmp
fbld
inc
inc
push
cmp
movsl
pop
test
sub
mov
jmp
mov
jecxz
daa
sarb
and
cmp
sub
dec
adc
rolb
sub
arpl
lahf
push
inc
push
cmp
pop
pop
or
loopne
xor
in
in
aaa
int3
ret
jo
pushf
repz
and
fs
scas
loop
rcrl
pop
mulb
or
mov
and
sbb
jg
adc
jno
lret
and
xchg
cmp
adc
loop
mov
aas
clc
push
pop
adc
mov
stos
test
mov
ds
push
sub
leave
leave
out
mov
mov
pop
sbb
aam
push
imul
mov
cltd
cltd
xchg
sub
xor
mov
adc
ss
outsb
mov
and
dec
pop
popa
jle
dec
arpl
repz
lock
int
add
and
push
mov
xchg
ret
lock
xchg
rorb
std
cmovg
in
mov
xchg
xchg
lods
or
sbbb
cmc
xchg
jg
les
xchg
test
dec
mov
jo
jae
xorb
repnz
adc
xchg
scas
ret
xchg
xchg
push
insb
push
clc
sub
xchg
bound
and
push
pop
test
sub
test
out
and
lahf
in
xor
repz
shrl
cmpsb
mov
or
stos
idiv
insb
rol
mov
pop
xchg
or
dec
in
add
fwait
lods
mov
pop
mov
adc
push
clc
and
dec
xchg
xor
test
dec
mov
jmp
and
adc
push
shlb
lret
adc
push
adc
ds
stos
into
fmulp
aas
rcrl
and
fwait
mov
inc
jle
pop
jge
jns
or
and
imul
ds
ds
mov
cmpl
adc
xorb
mov
fwait
cltd
cmpsl
xchg
lock
shll
pusha
and
adc
mov
loopne
jo
push
in
lcall
fcomp
enter
sub
js
out
push
sub
cmp
mov
sbb
addb
and
aas
rorb
mov
xor
aam
mov
and
push
adc
xchg
aad
or
mov
arpl
ljmp
stos
out
call
popf
dec
adc
daa
sbb
std
sbb
mov
mov
imul
or
lahf
xlat
test
imul
enter
movsl
pushf
mov
xchg
std
stc
stos
dec
movsb
jae
sub
rorl
sub
loop
cmp
add
sbb
jg
shrb
in
idivb
pop
add
rorb
xor
icebp
cltd
cmp
das
test
push
insl
jge
lds
mov
mov
lods
xor
cmc
dec
std
out
jne
cltd
mov
or
leave
sbb
mov
sbb
clc
and
stos
push
dec
mov
test
jno
decb
imulb
pop
movb
adc
jns
mov
cmp
stos
cmp
sbb
nop
jp
in
xor
adc
fs
jo
fld
lock
or
add
cwtl
aam
loop
xchg
xor
jmp
mov
lret
add
mov
lret
add
mov
shll
xchg
xor
repz
test
addr16
je
into
test
and
pop
mov
call
mov
mulb
dec
fmuls
cwtl
lods
dec
das
popl
jp
sbbb
mov
sarl
jg
sub
cmpsl
push
or
ds
xor
add
insl
jns
sub
mov
test
in
enter
or
pop
sbbl
jle
sbb
out
or
push
ror
sbb
inc
mov
mov
mov
sub
push
inc
shrl
jp
mov
stos
insb
aam
inc
cmp
fisttps
test
pop
pop
jp
in
nop
jbe
leave
lcall
test
test
xchg
jp
add
dec
scas
in
or
loope
push
mov
call
aas
xchg
cmpsl
sub
push
push
jnp
cld
incl
inc
jae
shrb
dec
sub
lret
repz
mov
cld
aaa
lcall
mov
sbb
arpl
push
fimull
roll
add
xor
shlb
idiv
aam
lock
out
enter
xchg
sahf
fwait
push
cwtl
pop
insb
hlt
sub
dec
mov
jo
in
rorl
push
mov
clc
rol
jno
iret
cld
cvtps2pi
je
mov
les
dec
pop
pop
jo
push
xor
inc
xchg
dec
pop
imul
sbb
popa
sbb
cmp
dec
loope
enter
adc
cld
loop
sahf
jbe
addl
sbb
idivl
inc
and
aaa
cmc
shll
mov
sahf
add
push
xchg
testl
outsl
fscale
je
rorl
outsb
pushf
roll
lods
pusha
mov
add
mov
xor
push
mov
incl
jno
xchg
xor
pop
pop
clc
sub
cmp
mov
or
iret
mov
das
adc
cmp
fisttpl
aas
subps
scas
push
dec
mov
rcr
movsl
xchg
inc
jne
xchg
add
loop
push
xor
arpl
adc
bound
insl
pop
add
sub
cmp
cmp
xchg
in
xchg
aam
sub
or
jnp
add
inc
gs
xchg
mov
lcall
lea
or
add
pop
cli
add
inc
mov
frstor
xlat
pop
push
jb
pop
hlt
ss
push
icebp
pop
aaa
jp
pop
outsb
xorb
or
pop
sbb
cmp
adc
sub
mov
add
rclb
data16
dec
sarb
adc
xchg
out
xchg
push
pop
cmovbe
pop
mov
into
sbb
test
out
sub
cs
mov
mov
xchg
or
outsb
enter
call
xchg
movsl
xchg
push
sbb
pop
lahf
std
sbb
cltd
mov
in
adc
sarl
rclb
popa
clc
mov
mov
adc
test
xor
sub
sahf
mov
cmp
or
nop
pop
aaa
inc
jne
pop
repnz
mov
ljmp
sbb
adc
and
and
jns
sbb
adc
adc
fs
mov
jno
adc
divb
ret
push
push
hlt
les
and
or
push
add
or
and
test
jb
jne
cmpsb
repz
inc
lods
sbb
cmpsw
lret
rol
daa
jp
aam
out
dec
or
ret
test
mov
sub
cli
test
push
lret
lds
das
dec
js
loop
cmc
dec
scas
leave
lock
xlat
add
ss
in
and
sahf
mov
inc
lock
mov
lahf
pop
mov
imul
push
cmpsl
jb
jge
mov
sbb
xor
add
add
adc
pop
adc
mov
pusha
mov
fcmovnb
hlt
add
add
xor
insb
bound
imulb
andl
xor
aad
pop
push
out
inc
daa
ljmp
xchg
push
dec
and
lea
hlt
mov
pop
pop
xchg
in
pushf
jbe
jb
mov
cltd
leave
ret
inc
mov
jbe
lock
inc
and
sti
add
pop
fistl
push
inc
jb
bound
and
jge
push
adc
gs
cs
or
cmp
adc
mov
pop
int
cmp
sarl
scas
ss
xor
lcall
shrb
repz
inc
mov
call
mov
test
jne
nop
adc
out
pop
mov
pop
mov
mov
cmp
lcall
cld
movsb
cld
xlat
sti
sarb
mov
clc
mov
inc
icebp
stos
sbb
dec
mov
lods
pop
test
enter
movsl
inc
lds
inc
push
imul
cld
notb
xchg
fsubrs
mov
lcall
mov
add
in
sbb
outsb
fldenv
sub
pusha
mov
daa
sbb
leave
inc
aad
rcr
jmp
inc
pushf
repnz
stc
or
jae
lds
scas
pop
mov
sub
icebp
push
stos
aad
outsl
sub
xchg
fnstsw
fldcw
fs
les
mov
and
out
pop
fninit
dec
mov
sub
je
dec
mov
repz
xor
fdiv
aam
dec
ljmp
imul
add
xchg
mov
xchg
scas
inc
paddusb
pop
and
stos
vmovhps
cmc
jno
add
fsts
push
mov
enter
jno
push
jns
fstpl
adc
mov
add
adc
dec
or
cmp
jle
les
popf
mov
mov
xorb
cmp
outsb
lahf
clc
add
lods
or
jo
shrl
and
and
push
mov
push
sub
mov
aaa
ljmp
jnp
adc
fisttpl
fst
insl
out
add
outsb
jl
mov
cmp
scas
or
or
addb
ja
mov
pop
xchg
xchg
pop
mov
sbb
sbb
in
jl
push
xchg
loope
xor
mov
sbb
das
in
fisubs
inc
sbb
ja
jg
mov
data16
mov
pop
mov
xchg
pop
scas
in
sahf
or
xlat
cs
sbb
clc
stos
stos
iret
mov
adc
sbb
nop
jno
fs
enter
lods
xor
or
jle
mov
loop
mov
mov
outsl
add
test
cltd
cmp
jno
xor
jmp
dec
sub
hlt
inc
rcrl
jne
mov
sbb
gs
nop
cmp
jae
icebp
pop
loopne
cld
dec
mov
inc
or
sbb
lock
popf
adc
pop
out
outsb
adc
cwtl
ret
jns
leave
mov
jns
ljmp
cltd
lret
daa
mov
mov
mov
push
in
cmpsl
pop
in
fldt
pop
clc
les
jae
sbb
push
xor
pop
les
lret
aas
ljmp
fstps
pop
pop
cmp
jbe
lods
or
or
pop
ljmp
lret
cmpl
xlat
pop
repnz
push
mov
push
lods
or
mov
out
sbb
adc
test
or
loop
lret
and
clc
nop
shr
dec
gs
imull
notl
aad
dec
outsb
fidivl
pushf
movsl
daa
pop
mov
insl
aas
dec
lock
lods
popa
in
data16
data16
mov
jno
movsb
out
loop
pop
fcompl
fsubs
cld
push
xchg
test
orb
scas
add
pop
xor
xor
cltd
mov
xchg
cmpsl
add
pop
and
cs
mov
inc
pop
mov
rorl
dec
insb
pop
test
jae
dec
and
and
cmp
scas
insb
pop
out
add
fdivrs
or
test
mov
xchg
sub
stos
add
mov
sub
fisttps
mov
repnz
out
lock
imul
mov
jns
pop
out
xchg
pop
or
popa
cli
nop
mov
fwait
push
je
sbb
adc
test
jl
push
pop
jb
xchg
and
cmp
test
jno
jmp
outsb
mov
fs
and
mov
scas
mov
and
scas
ds
inc
adc
fucomip
aaa
push
pop
pop
pop
mov
push
bound
push
clc
mov
push
cmp
mov
or
lahf
arpl
lods
xlat
into
ljmp
mov
xchg
out
and
scas
xor
lret
dec
mov
push
dec
jo
inc
push
push
push
xor
notb
lods
mov
shl
jge
into
clc
mov
ret
xchg
mov
gs
mov
ror
addl
add
mov
aaa
lea
and
subb
loopne
rcrb
cmp
pop
je
fadds
ficoml
jnp
mov
in
inc
inc
xchg
mov
add
int
out
mov
jmp
stc
ret
sbb
gs
mov
cltd
adc
repnz
rcr
insb
leave
scas
stos
test
inc
popa
mov
mov
jae
push
jg
int
sub
inc
fcoml
aaa
xor
or
stc
lock
xor
test
and
push
mov
nop
hlt
dec
xlat
mov
push
clc
jecxz
dec
fs
aam
stc
xchg
mov
roll
and
cmpsb
cmp
int
sub
mov
dec
push
xor
cwtl
sahf
arpl
lcall
les
pop
insb
mov
scas
out
mov
lret
addr16
addr16
scas
cmp
out
sbb
dec
jecxz
sub
pop
cwtl
pop
leave
stos
xchg
test
cmp
int3
cmp
out
inc
cmc
jbe
cmc
fdivrl
cmp
add
cmp
xor
sarl
mov
repz
xchg
mov
adc
fistl
fstl
sahf
aas
insl
add
pop
xlat
mov
adc
adc
fimuls
pop
aas
stos
jbe
xchg
cmp
jnp
xor
sub
insb
fsubrl
mov
mov
push
mov
push
pop
mov
in
iret
jecxz
pop
decb
xchg
test
add
fadds
fwait
ja
xchg
and
lcall
sti
mov
fs
jns
out
cmc
sti
stos
sbb
mov
insl
push
orb
push
cmc
sahf
scas
push
push
inc
iret
imul
adc
adc
fnstsw
push
push
int3
dec
fbld
jge
xchg
cmp
and
loope
dec
xchg
popf
cmp
sbb
xor
sub
jp
inc
loop
stc
xchg
pmulhuw
sbb
sbb
mov
xor
imul
inc
imul
addb
adc
pushf
nop
clc
data16
jl
or
sbb
sub
cmp
int3
push
cld
pop
mov
pushf
cmp
pop
clc
insb
enter
test
mov
int3
push
cld
pop
mov
pushf
cmp
pop
clc
insb
enter
test
mov
int3
push
cld
pop
mov
popf
cmp
pop
clc
insl
enter
test
mov
xor
rolb
cld
das
sti
mov
inc
out
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
bound
push
or
pop
sbb
xor
mov
rorb
daa
fistl
sub
push
or
xor
pop
adc
mov
rorb
mov
cmp
bound
push
or
xor
pop
adc
mov
mov
ret
test
scas
loopne
andb
sbb
loopne
push
enter
insb
fs
scas
sub
and
loop
xor
mov
movsl
adc
inc
inc
sbb
sbb
add
ljmp
sub
jo
movsl
jle
lock
adc
sbb
stos
mov
bound
addr16
jno
or
xor
ficomps
mov
loope
add
stos
pop
pop
insl
decb
les
hlt
mov
fadds
push
adcl
testb
mov
lret
in
popf
fdivs
mov
addr16
loop
xchg
fs
stos
cmpsl
data16
xchg
divl
bound
push
or
xor
pop
adc
mov
rorb
mov
jp
pop
bound
bound
jnp
sbb
aas
pop
dec
push
mov
mov
jmp
mov
jb
pusha
jle
xor
cs
and
add
mov
xchg
cltd
mov
lods
cli
roll
rcrb
sub
je
addr16
aaa
xor
pop
adc
mov
rorb
mov
cmp
bound
push
or
xor
pop
adc
mov
rorb
mov
cmp
sub
imul
cwtl
dec
mov
jg
lcall
or
movq
mov
add
scas
adc
dec
xor
rclb
fbld
out
or
lret
mov
pop
pop
push
dec
push
mulb
es
jg
nop
daa
dec
sub
loope
repnz
sahf
sub
add
js
nop
add
and
xchg
inc
inc
lcall
cld
test
pop
jecxz
push
lret
aad
lods
sbb
jmp
dec
sahf
adc
adc
sbb
mov
add
inc
mov
mov
jnp
cmp
idivl
int3
or
call
fs
xlat
jo
inc
insl
in
movsl
divl
les
stos
add
pop
test
sub
xchg
dec
bound
ljmp
mov
stc
int3
and
and
inc
cmp
mov
pop
xor
mov
pop
ret
mov
test
pop
sub
aas
sub
movsl
imul
xchg
mov
jge
icebp
push
pop
clc
sub
or
andb
cmp
xlat
push
mov
fucomp
mov
inc
lods
or
and
out
xchg
popf
nop
push
lcall
mov
mov
inc
add
outsb
out
xchg
jb
les
xchg
cs
sub
leave
sbb
cmp
hlt
add
push
call
into
and
test
mov
pop
fsubl
daa
mov
les
mov
push
test
mov
xor
sbb
out
insb
xchg
lds
inc
jae
cld
xor
dec
popa
clc
xchg
int
lods
into
mov
adc
test
daa
int3
adc
fs
imul
pop
xor
in
cmc
push
je
orb
push
pop
rorl
xacquire
bound
fstpt
jg
pushw
inc
lea
sub
in
mov
mov
pop
cli
je
or
push
fidivs
lds
pushf
inc
imul
outsb
lods
mov
or
rcrl
je
mov
sub
xor
pop
mov
in
sbb
sbb
mov
mov
or
mov
adc
jge
inc
mov
jge,pt
cs
sub
test
sub
arpl
xchg
enter
call
call
ss
fmuls
add
add
out
adc
add
sahf
and
push
mov
in
nop
xchg
shrb
or
and
lahf
mov
xchg
sbb
adc
shl
xor
sub
push
or
scas
sub
cmp
cwtl
pop
add
in
rcrl
pop
clc
call
aaa
mov
jns
int3
outsb
aaa
dec
loopne
add
stos
push
jno
cmpsl
dec
sub
lods
arpl
mov
fidivrs
leave
jp
loop
mov
ljmp
loop
dec
xor
or
add
loopne
sbb
fbld
pop
das
sub
adc
push
insl
adc
xchg
popa
jmp
push
mov
sub
fdivrl
ffree
loope
dec
mov
push
push
insb
xlat
adc
test
mov
lcall
call
pusha
cld
dec
jb
jae
dec
sahf
sbb
adc
mov
mov
push
test
je
shrb
sbb
jecxz
mov
cmpsl
arpl
xchg
jle
mov
outsb
push
cmc
xor
daa
in
lock
mov
daa
ss
mov
cmp
lods
sub
ret
test
mov
jae
loope
cli
insb
leave
adc
sahf
cmp
xchg
in
jo
sub
cmp
mov
add
data16
inc
push
jg
repnz
mov
jle
ds
fsts
mov
pop
mov
test
xchg
inc
mov
mov
inc
lcall
sub
inc
push
movl
dec
test
pop
cmp
mov
incl
test
hlt
in
xlat
js
lcall
pushf
cmpsl
ljmp
loop
xchg
mov
lds
mov
sbb
pop
out
xchg
bound
sub
adc
push
stos
subl
dec
sarl
lret
das
fdiv
lret
cmp
add
popf
aam
xor
inc
xchg
rorb
jae
push
call
and
push
js
je
lock
jb
repnz
nop
jmp
jnp
jle
mov
repz
cmp
out
stc
popf
ss
inc
dec
sbb
mov
out
das
into
cs
add
es
mov
push
xor
outsl
xorl
cwtl
mov
push
pop
fdivl
dec
movsl
push
leave
data16
adc
pop
adc
roll
lods
movsb
sub
clc
inc
sbb
repz
inc
xchg
and
sbb
jno
iret
push
adc
cmp
aas
aam
sub
push
cmp
sahf
xorl
test
ja
mov
push
pop
mov
mov
mov
add
pop
lret
sub
pop
mov
je
xchg
xor
sar
pop
add
push
push
mov
adcl
and
adcb
and
in
dec
mov
loope
mov
add
push
jbe
fstpt
or
dec
lds
fsub
inc
xchg
mov
rcrb
pop
bound
out
xor
sarl
out
jbe
xor
add
sbb
movsb
aaa
scas
mov
sbb
and
ljmp
outsb
mov
stc
pop
dec
lahf
test
and
lock
sahf
cmp
mov
stc
lock
and
or
jl
jge
dec
lock
xor
push
sub
pop
mov
testb
ret
sub
sbb
xlat
stos
imul
stos
clc
jge
jno
scas
movsl
gs
mov
xlat
mov
daa
fdivrs
loopne
add
lods
subb
out
daa
mov
sub
out
add
cmpsb
repnz
imul
enter
pop
push
mov
fwait
in
or
jp
adc
mov
pop
int3
xchg
cmpsl
fisubrs
pop
imul
fucom
jg
addl
push
cli
sbb
jle
daa
mov
sbb
hlt
push
xchg
mov
mov
out
popa
and
and
insl
fdivl
xor
push
mov
jo
inc
xchg
jne
lahf
inc
enter
adc
and
dec
lcall
pop
pop
inc
mov
mov
cwtl
pmulhuw
cs
lcall
xchg
jg
out
jae
push
fcoml
test
cltd
xchg
in
dec
or
xlat
dec
pop
push
pop
fstpl
and
fcoms
mov
sub
mov
ret
push
mov
xor
cli
mov
cmp
cmp
scas
jb
sub
maxps
mov
test
pushf
leave
or
jbe
rcr
fnstcw
lds
lock
add
out
mov
fmull
sbb
push
lods
pusha
xor
movsb
hlt
cmp
cmpsb
icebp
call
and
ret
js
add
cmpsl
jo
and
popf
addb
push
out
xchg
cmp
sub
pop
mov
clc
movb
mov
xchg
mov
dec
dec
aas
lock
sbb
mov
ret
mov
mov
fcomi
sbb
xor
pop
popa
or
jne
pushf
or
jne
push
scas
cmp
inc
mov
mov
lock
jge
lods
mov
mov
add
out
inc
and
xchg
roll
sbbb
mov
test
dec
or
nop
outsb
mov
jg
inc
pop
inc
movsb
adc
add
insl
and
add
xchg
jmp
arpl
sbb
stos
sub
mov
and
and
add
push
std
push
mov
push
int3
jmp
xor
repnz
mov
scas
sti
xchg
loop
mov
inc
jbe
bound
inc
dec
ret
cmp
lea
mov
idivl
mov
cmp
mov
outsb
jbe
mov
push
mov
adc
hlt
push
sub
inc
pop
cmp
mov
sub
clc
adc
adc
ret
mov
clc
out
sub
cmp
add
rcrl
addr16
jae
outsb
push
xor
sar
clc
outsb
lds
pop
loope
testl
lock
pop
xchg
push
icebp
popf
sbb
adc
ja
lds
jo
popf
fildl
xor
mov
leave
mov
adc
sub
and
dec
leave
in
test
test
cmpsb
xor
out
insb
ljmp
lcall
orb
cmp
jae
xchg
jmp
sarl
es
repz
xchg
fwait
inc
sbb
fcompl
mov
mov
sbb
sub
xchg
jmp
gs
sub
pop
ljmp
ss
mov
xor
roll
mov
xchg
insb
push
rolb
clc
sub
sbb
pop
adc
dec
sub
andb
pop
pop
fisttpl
push
cmp
sarl
repz
sub
inc
in
rorl
add
shlb
fisubs
xchg
and
pop
xor
mov
imul
cli
mov
fisubrl
in
xchg
and
adcl
rorl
sarb
add
fwait
push
es
xchg
push
adc
xchg
sub
jne
es
xor
push
sbb
push
pop
jne
pop
ja
imul
fsubs
xor
clc
or
pop
sbb
movlps
jl
push
add
mov
jnp
int3
call
push
add
insl
fdivl
repz
out
cmp
movsb
adc
call
lods
cmpsb
popf
outsl
subl
mov
adc
or
jae
ja
inc
pop
sbb
pop
mov
ret
lods
fadds
cmp
sti
or
dec
jecxz
out
repnz
out
test
cld
clc
sbb
sbb
xchg
into
inc
pushf
mov
sbbl
fsts
movsb
sbb
enter
aaa
sbb
ja
scas
xchg
mov
test
adc
sti
test
adc
jl
mov
mov
cltd
insl
dec
cld
stc
cmpsl
clc
and
inc
divb
rcl
loope
xchg
ret
xor
inc
add
imul
xchg
cmp
adc
js
repz
push
jb
rcrb
mov
jmp
or
loop
jnp
jge
mov
pop
insl
and
sbb
push
pushf
add
call
dec
and
icebp
cmp
enter
fmull
lret
xchg
outsl
push
dec
adc
aas
xor
filds
loopne
cli
xor
cwtl
pop
push
adcl
fwait
cmp
stos
ds
in
mov
insb
stc
add
fwait
les
int3
sub
push
mov
inc
mov
or
dec
pop
adc
ds
out
lret
cwtl
enter
inc
or
pop
pop
pop
jmp
add
cmp
arpl
cwtl
xchg
xchg
jnp
mov
mov
imul
out
out
xchg
dec
in
js
cmp
outsb
mov
mov
imul
sbb
adc
gs
push
fwait
aaa
popf
les
inc
push
enter
or
pusha
cmc
inc
sub
add
xchg
inc
xchg
cmp
xor
jl
xorl
mov
arpl
es
mov
in
xor
cmpsb
ljmp
mov
out
mov
lret
adc
xlat
fcoms
shlb
addr16
sbb
fwait
inc
cmp
dec
cwtl
loop
sbb
test
ret
nop
jns
imul
jnp
and
into
cmpsl
xchg
mov
jmp
insb
insb
mov
mov
fmull
sarl
sbb
dec
loope
push
ds
and
fs
lods
xchg
ja
enter
push
imul
ss
mov
xchg
faddp
pop
xor
ss
test
xchg
dec
orb
lods
fistl
insl
pop
or
sub
mov
inc
mov
inc
ja
out
cwtl
inc
sub
cwtl
dec
jmp
xor
jnp
rorb
popl
test
in
lcall
mov
scas
lea
scas
push
inc
jmp
imull
jo
xor
adc
xchg
jns
lret
out
push
push
repnz
ljmp
adc
push
lea
rolb
out
aas
dec
hlt
jne
lcall
lret
cmp
aad
outsl
in
loopne
xabort
inc
repnz
inc
int
ja
clc
jno
repnz
rcll
push
inc
clc
cmpsl
sarl
lahf
add
flds
mov
and
jp
fisttpll
in
lret
cmp
fdivl
mov
rcr
push
orl
int3
lcall
mov
pop
loop
shrb
in
nop
cmp
pop
stc
sbb
pusha
mov
leave
das
mov
mov
xor
ret
push
ja
in
int3
je
fstpt
xor
pop
inc
sub
push
adc
dec
xor
push
dec
pop
out
adc
fstl
or
push
mov
push
mov
dec
movsb
or
lret
dec
mov
inc
xor
and
fcompl
andl
fdivrl
cmpsl
mov
inc
clc
cmp
mov
lret
xor
sub
xor
sahf
cmp
add
leave
in
fmull
mov
jnp
xchg
push
and
repnz
clc
into
cmp
dec
sti
mov
add
out
xchg
xchg
push
mov
mov
xchg
mov
add
jge
lret
xchg
push
cmp
loopne
pop
out
jmp
orb
adcb
outsb
xchg
je
inc
cmp
xor
pop
jb
insl
or
sbb
inc
es
enter
or
xor
lods
dec
ret
mov
fstpl
in
adc
mov
xchg
xor
mov
xor
xor
xor
out
mul
inc
jno
push
ljmp
test
imul
jmp
cltd
add
add
lret
push
mov
fimuls
push
and
xlat
push
xor
pop
in
das
add
fisttpl
push
call
pop
add
mov
cmpxchg
cmp
js
pop
fsubs
stos
xor
dec
lock
rorl
sub
pop
mov
xor
jae
aam
xor
incl
stos
loop
sub
inc
and
jb
xchg
dec
test
add
movsb
inc
xchg
cmp
cmc
lret
inc
inc
sub
or
sbb
add
or
mov
adcl
adc
inc
sub
jmp
cmc
les
adc
testl
pusha
dec
cmpsb
sbb
in
or
leave
jp
in
fldcw
adc
mov
sarb
popa
imul
or
mov
sub
sahf
mov
cmpsb
xchg
mov
adc
xor
or
xor
mov
mov
adc
insl
pop
xor
mov
mov
aad
data16
dec
sub
pop
pop
lea
test
jmp
xchg
fidivrl
rorl
repz
insb
sbb
sub
pop
add
icebp
cs
xchg
dec
subl
ja
test
repz
fwait
enter
sub
lods
mov
in
pop
mov
dec
dec
mov
cmc
mov
jge
stos
and
xchg
loop
mov
fildll
xor
mov
or
sti
test
cld
popa
rclb
mov
mov
jmp
push
pop
mov
leave
jge
inc
je
dec
and
ja
jo
iret
add
xchg
adc
mov
and
loopne
dec
loope
xor
aam
xor
pop
ficomps
dec
push
fisttpl
mov
sub
data16
pop
adc
call
inc
addr16
pop
int3
gs
push
mov
pop
or
xchg
mov
and
imul
out
add
hlt
jg
dec
xor
pop
orb
in
inc
xlat
out
jp
dec
out
or
fidivrs
cs
pushf
fiaddl
data16
or
icebp
pop
test
inc
data16
fcoml
xchg
ljmp
xor
lds
ficompl
sbb
cmp
jg
pusha
pop
mov
aas
push
ret
xchg
sub
fists
clc
das
cltd
dec
sbb
add
sub
add
xchg
push
push
lcall
pop
dec
jecxz
fstps
outsl
scas
dec
lods
shlb
shlb
dec
xchg
pop
inc
sti
add
and
cmp
fcomi
xchg
testl
hlt
shrl
das
mov
sub
dec
test
ss
fs
mov
cmp
fwait
inc
subb
push
mov
jp
sub
ret
push
popa
js
xchg
popf
call
adc
mov
jne
cmpsl
ror
rorb
push
out
mov
jbe
mull
adc
adc
push
loopne
lahf
mov
ret
or
xor
lds
sti
sbb
fwait
inc
call
push
jnp
xchg
sahf
mov
jge
inc
push
push
loope
sbb
jg
jbe
pop
add
adc
jnp
sahf
add
sbb
push
stc
call
adc
cli
mov
loope
loope
or
gs
and
and
xchg
int
outsb
popf
inc
and
mov
jnp
int3
bound
jmp
and
inc
mov
aaa
mov
repnz
enter
into
cmp
push
fcoms
stos
xchg
nop
jecxz
push
sub
repz
add
arpl
dec
mov
add
push
pop
lods
jae
mov
push
fsubr
jp
ja
inc
fisubl
mov
imul
or
scas
out
xchg
inc
push
js
sbb
jle
cmp
stos
mov
mov
pop
inc
and
out
mov
icebp
mov
or
push
aam
cmc
mov
call
clc
loop
xchg
push
call
mov
clc
cltd
cli
mov
xor
push
mov
lcall
jbe
mov
arpl
popa
aaa
dec
or
lods
shlb
xlat
lcall
dec
adc
lcall
outsb
dec
in
movsl
mov
sbb
xchg
push
pop
lds
inc
mov
iret
push
lret
std
inc
and
mov
mov
cmpsb
notl
leave
ret
cmpsb
fwait
pop
mov
push
mov
ds
pusha
dec
filds
and
adc
push
fdivp
mov
out
dec
add
cmp
jmp
faddl
pop
pop
imul
xor
xchg
sub
push
adc
cmpsl
jg
out
dec
pop
mov
movsb
call
sbb
pop
mov
jno
add
fbstp
jg
movsb
mov
int
aam
iret
mov
out
push
cmpl
fsubrl
data16
mov
int3
mov
cmp
adc
xlat
or
hlt
sub
fwait
mov
mov
addr16
mov
xchg
mov
in
fmull
push
mov
push
sbb
jne
cmpsl
repz
scas
outsb
fists
dec
test
aam
movsb
stos
cld
aad
test
test
ja
push
ffreep
cwtl
popa
push
data16
xorb
stos
cmc
imul
sbb
add
lds
dec
pop
sub
add
sti
pop
loope
jp
fst
sub
xchg
push
jg
cwtl
fmulp
std
lods
scas
mov
mov
in
out
cmp
cwtl
js
imul
stos
cmp
mov
loopne
pop
push
mov
xchg
mov
xlat
daa
repnz
lret
jecxz
imull
movsl
ljmp
ret
pop
mov
dec
add
inc
clc
adc
xor
lds
shll
mov
je
fisttpl
add
pushf
dec
mov
loop
cwtl
mov
inc
dec
and
adc
das
mov
out
cwtl
in
jnp
repnz
mov
fistpll
xor
gs
jp
daa
test
jp
dec
push
xchg
inc
popf
push
icebp
jo
mov
push
mov
dec
add
aas
mov
dec
je
enter
xchg
cmp
jb
fildll
inc
push
dec
mov
xor
cwtl
and
test
mov
adc
jg
mov
push
add
test
sbb
insb
scas
mov
cs
mov
push
int3
cmpsl
push
or
mov
mov
repnz
in
mov
xchg
inc
jae
cmp
fwait
push
inc
xor
adc
push
mov
sbb
fiaddl
rcrb
subb
push
inc
aaa
fldenv
xlat
cmp
loopne
push
popf
xlat
mov
cli
cmpsb
loop
fstl
pushf
mov
bound
das
nop
movsb
or
mov
or
xor
pop
adc
mov
rorb
mov
cmp
bound
push
or
xor
pop
adc
mov
rorb
mov
cmp
loop
rorb
inc
sti
xor
pop
adc
add
rorb
mov
cmp
bound
push
or
xor
pop
adc
mov
rorb
pop
stos
insl
mov
jae
inc
pop
push
push
and
lods
mov
xchg
xchg
shl
mov
xlat
xchg
daa
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
iret
divl
daa
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
shl
mov
mov
negl
loopne
adc
cmp
inc
push
in
add
mov
add
jmp
arpl
jb
mov
and
int
and
rclb
sbb
iret
subl
mov
sub
arpl
std
mov
lock
mov
jle
lcall
inc
push
xchg
sub
es
push
daa
imul
sbbb
imul
xchg
xor
mov
fstl
push
adc
fimuls
imul
xlat
cmp
xlat
mov
lahf
mov
subl
aaa
decb
and
push
pop
repnz
mov
xchg
mov
xchg
aaa
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
mov
xlat
cli
push
addr16
imul
and
adc
inc
xor
lcall
xchg
loopne
stos
cli
mov
push
jae
pop
push
add
jg
push
ja
test
mov
nop
repnz
int
mov
aad
cld
push
daa
sbb
xor
ss
push
adc
ret
xchg
shl
mov
xlat
xchg
daa
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
mov
xlat
xchg
daa
arpl
sbb
push
jl
xor
or
push
out
mov
cmc
addb
add
das
adc
mov
mov
aaa
or
je
movl
jno
cwtl
push
hlt
leave
jb
push
xchg
test
and
stc
or
lcall
mov
es
ds
xor
adc
into
ss
daa
test
pop
jmp
shr
adc
sahf
loopne
aad
dec
fnsave
push
les
push
fdivrs
jae
insb
adc
inc
cmpsl
arpl
aas
pop
jae
push
int
xor
mov
mov
mov
daa
std
daa
retw
cmp
jmp
add
pop
icebp
mov
fnstsw
decl
fldenv
scas
jae
pop
cmp
inc
sub
xlat
mov
faddl
push
xchg
cmp
mov
out
adc
aam
mulb
dec
mov
push
xor
div
xor
ret
dec
repz
sub
hlt
pop
orb
aam
loope
dec
or
int3
imul
icebp
lds
mov
mov
std
shlb
ds
push
stos
cwtl
dec
bound
and
push
adc
jns
adc
loop
das
in
cmp
inc
loopne
or
scas
dec
push
jbe
psubb
push
mov
or
add
shll
std
aad
mov
incb
hlt
push
stos
mov
fsubl
loop
mov
ja
movsl
repnz
jno
aaa
xchg
pop
loope
dec
aas
jge
jg
mov
or
sbb
lahf
sarl
mov
lcall
jne
and
cmpsb
mov
inc
test
sub
or
mov
mov
fidivrs
pop
pop
inc
sub
mov
xchg
cmp
pusha
fisubrs
jl
rcrb
mov
pop
adc
je
ja
jbe
or
jmp
aaa
outsl
imull
jl
pop
push
or
pop
lret
clc
std
ret
or
xchg
fists
jne
jg
jb
pop
push
xlat
rorb
test
movsb
adc
scas
sbb
inc
xor
subl
mov
lea
popa
insl
mov
jp
cmpsb
repz
dec
push
cmp
mov
or
rcll
lods
rcrl
jmp
mov
ds
mov
push
xchg
dec
in
ffreep
aas
mov
aad
cwtl
jnp
push
inc
int3
cmpsb
cmc
lret
pop
pushf
and
into
xor
mov
stos
pop
mov
cmp
fildl
test
mov
or
andb
mov
test
dec
cmpsb
lds
push
arpl
mov
or
xchg
add
sbb
and
aad
jl
into
and
ud0
int
js
repz
adc
stc
mov
mov
inc
xor
je
mov
icebp
repz
jnp
push
push
mov
movsb
sub
test
push
adc
push
lret
repz
jbe
ss
jne
add
cmp
outsl
inc
fcomps
xchg
mov
mov
fidivrs
cli
push
pusha
jge
xchg
xchg
mov
iret
cmp
inc
mov
and
ds
cltd
mov
fidivrs
inc
jl
ds
xor
imul
inc
test
loope
sub
mov
adc
fnstsw
loop,pn
pop
lds
out
cwtl
push
das
sbb
mov
bnd
notl
fisttpll
mov
dec
lahf
xlat
daa
lock
in
imul
and
out
jno
push
mov
shll
jge
das
mulb
repz
xchg
test
pop
cmp
call
movsb
and
inc
jbe
push
xchg
mov
or
or
gs
jl
les
repz
test
mov
adc
in
and
sub
fldl
inc
xlat
inc
xchg
pop
dec
cmp
cmp
fld
adc
push
jo
mov
sub
push
inc
dec
push
cmpsb
call
sbb
loopne
jl
mov
shll
aas
xchg
sbb
inc
out
xchg
fistl
xchg
mov
push
fs
cltd
add
adc
out
leave
insl
dec
and
bound
pop
lahf
lahf
jb
xchg
fdivr
xchg
andl
sub
add
mov
inc
lcall
addr16
aad
iret
andl
or
inc
xor
scas
mov
and
mov
sahf
mov
mov
bnd
dec
jnp
repnz
and
inc
mov
cmp
dec
lea
sti
dec
cmp
push
xlat
addr16
or
or
shrb
cmpsl
inc
out
insb
inc
lcall
sbb
inc
jmp
scas
stos
sub
inc
addr16
sub
mov
int3
loop
push
cmp
add
cltd
fsubl
arpl
xchg
cmp
sbb
test
dec
decl
mov
ss
outsb
fwait
xorb
repz
mov
mov
fstps
cmpsl
sbb
jle
movsb
loop
shrb
iret
jecxz
movsl
and
daa
or
adc
imul
mov
mov
fcoml
lods
xor
inc
mov
jae
test
movsl
cmp
faddl
dec
mov
scas
mov
das
loopne
lock
mov
xchg
and
jno
insl
stos
and
or
movsb
cli
mov
mov
mov
mov
mov
push
push
ljmp
fnstenv
jge
jmp
lret
mov
cmp
decl
add
push
pop
adc
or
dec
pop
outsb
outsb
icebp
mov
inc
dec
jbe
cmp
test
mov
ror
jb
push
mov
call
cmp
shlb
andb
sarb
push
add
test
daa
cmp
movsb
das
lock
push
cmp
stos
ss
mov
dec
pop
adcl
cmc
movsl
or
sub
dec
js
dec
aad
add
mov
outsl
inc
dec
adcl
rorl
paddb
mov
or
mov
or
push
or
add
das
pushf
adc
sub
inc
pop
push
inc
data16
mov
xchg
ret
lcall
ss
mov
push
push
dec
jg
je
insl
mov
out
push
or
mov
inc
cli
testb
inc
pop
push
adc
jne
adc
push
push
je
sub
cmp
sub
pusha
frstpm(287
imul
inc
ja
pop
enter
ljmp
outsl
addr16
push
or
mov
lret
test
sub
jl
popa
repnz
cs
push
insb
push
notb
mov
inc
xchg
ret
jl
cmp
enter
lret
iret
test
fwait
sbb
int
imul
mov
data16
inc
stos
imul
aas
push
rcl
push
mov
in
xchg
mov
jno
xchg
inc
pop
jns
sub
mov
cs
jmp
out
mov
shrb
rorb
push
out
cmc
pop
mov
imulb
cmc
or
icebp
mov
jnp
xchg
and
add
or
arpl
dec
fcoms
std
and
adc
fadd
adc
icebp
pop
push
aas
sub
sub
push
loope,pn
inc
add
popa
and
in
mov
mov
cltd
mov
das
popf
nop
fldenv
push
enter
rorb
pop
cmp
jle
test
adc
mov
cmp
add
clc
std
test
and
dec
dec
xchg
xor
dec
jns
clc
das
je
xor
fisubs
int
out
inc
mov
stos
shl
mov
xchg
and
nop
inc
inc
mov
sti
ds
mov
xchg
and
adc
and
adc
or
loopne
cmpsl
mov
xchg
bound
repnz
mov
pop
sbb
add
jne
cmp
out
out
insb
or
or
sbb
leave
shld
adc
ljmp
out
jns
int3
loope
enter
hlt
stos
sbb
fistpll
sbb
icebp
movsw
stos
shl
xchg
mov
jnp
mov
and
xchg
std
pop
jbe
pop
pop
xchg
mov
sub
shll
lret
sub
cmp
sbb
jo
shl
add
dec
sbb
ficoml
lock
call
aas
xor
mov
adc
pop
sbb
out
xchg
out
inc
hlt
and
loop
ss
mov
fistpl
adc
xor
call
push
hlt
inc
and
aas
lds
jmp
lock
ficompl
shr
pushf
aaa
xchg
jl
inc
mov
push
fsub
xchg
cltd
cmp
shrl
mov
dec
out
cmp
out
push
iret
test
int3
xor
mov
lahf
mov
psraw
loope
jo
les
in
cmpsb
bound
inc
xor
and
ss
pop
stos
add
ret
testl
ljmp
aad
push
or
std
add
rclb
js
add
inc
push
mov
dec
inc
jne
ret
inc
ss
movsl
push
std
sub
lock
mov
lock
sbb
inc
dec
mov
sub
adc
mov
pushf
stos
dec
mov
jge
aaa
ret
xchg
sbb
jnp
xchg
and
fidivrl
mov
mov
jnp
xchg
xchg
lret
insb
fcom
aam
jno
jge
xor
lret
notb
setns
pop
mov
jecxz
orl
cs
out
mov
cs
xchg
mov
inc
subb
pop
cmp
nop
scas
mov
dec
nop
mov
call
mov
shrl
mov
mov
sub
inc
pop
stos
inc
mov
data16
jne
movsl
or
push
xchg
cmp
push
pusha
mov
xor
inc
inc
pop
dec
clc
cmp
icebp
repz
sub
push
repz
adc
ljmp
inc
or
and
repz
and
cmpsb
icebp
sbb
roll
mov
xchg
add
imul
pushf
xchg
fstpt
jl
cltd
leave
aas
push
ret
sub
push
fs
movsb
and
fisttpll
aam
lock
enter
imul
scas
scas
jbe
pop
inc
push
mov
rorl
and
inc
rol
out
ja
lea
sub
cmp
push
dec
mov
xor
mov
popf
sarl
fldenv
fidivl
adc
and
iret
fldl
addr16
bound
test
out
outsb
sbb
pop
popa
jb
lods
subb
orl
xor
sbb
xor
jp
mov
or
jmp
xor
daa
jns
push
sbb
lret
mov
mov
and
fwait
int3
repnz
aad
mov
xor
mov
push
push
test
adc
mov
filds
aam
xchg
pop
xchg
xchg
lods
loope
ret
scas
arpl
cmp
cmp
or
push
repz
fwait
outsl
xlat
inc
ja
test
push
sahf
cmpsl
inc
mov
add
movsb
lea
sbb
int3
gs
mov
enter
add
xchg
jno
sbb
inc
mov
dec
call
adc
lods
jae
imul
add
leave
fnstenv
icebp
xchg
dec
and
adc
out
pop
inc
xor
ljmp
out
flds
jmp
loopne
xchg
jb
inc
jge
lret
cs
xchg
inc
jle
imul
out
in
dec
insb
fcmovnu
cmp
mov
test
aam
sbb
lcall
mov
cmc
jle
inc
mov
pop
sbb
ficompl
jne
bound
jae
daa
cmc
nop
leave
cmc
mov
sahf
sbb
ja
pushf
jo
stos
push
mov
fmul
xor
mov
pop
mov
jmp
xor
loope
xchg
and
ret
sbb
in
sub
imul
inc
push
mov
pop
out
jne
jae
jbe
cs
out
or
lret
sub
or
adc
stos
xchg
xor
and
jle
dec
test
push
lcall
inc
fdivrs
jno
xor
punpcklbw
push
dec
adc
dec
push
jl
jg
cmp
cmc
pusha
and
call
pop
push
cli
dec
or
lcall
nop
sub
pushf
out
mov
in
rcrl
std
mov
in
fiaddl
inc
sbb
cld
jmp
push
leave
lods
fldcw
jl
mov
ss
xor
cld
add
nop
mov
dec
lret
lods
or
lret
mov
dec
adc
add
pop
jle
jle
add
push
gs
repnz
cmp
cmp
xor
xchg
mov
aad
insb
leave
cmp
push
or
ljmp
adc
adc
mov
arpl
xchg
xchg
fbld
xor
enter
pause
sti
in
push
mov
jecxz
push
cltd
mul
int3
jne
lods
cmpsl
dec
lods
jl
jo
je
data16
icebp
sbb
inc
adc
into
cmp
test
jge
xchg
fnstcw
ss
jns
add
pop
dec
xchg
jnp
stc
fisubs
jae
cwtl
jb
push
pop
nop
sahf
shlb
shr
rolb
inc
inc
inc
inc
pop
in
mov
pop
jl
or
das
cwtl
mov
mov
ficoml
fcoms
and
sbb
jmp
cmpsb
shrb
in
mov
movsb
dec
ljmp
add
outsl
aaa
int3
jp
icebp
jns
cmpsl
jle
inc
push
icebp
inc
cltd
leave
divb
mov
mov
dec
sub
cmp
out
fisttpll
cmpsl
pop
push
mov
stc
pop
popa
cmc
pop
out
pushf
enter
and
sahf
jge
pusha
adc
mov
jns
decl
cli
cmpsb
sub
mov
fistl
add
out
sub
sbb
psubb
rorl
adc
pop
push
fidivrl
pop
push
out
pop
sbbl
addl
lods
push
dec
mov
add
into
inc
jns
out
negb
pop
mov
pop
cmp
sbb
sub
fmul
inc
add
or
cmpsb
or
and
inc
or
mov
jo
xor
sub
inc
cltd
popa
movsl
test
jle
inc
test
std
xchg
push
mov
loopne
cmp
lcall
fidivrl
and
test
inc
outsl
push
cmp
mov
inc
loope
dec
test
aaa
mov
cld
sbb
sbb
aaa
cmpsl
loope
lret
outsb
repz
lods
push
insb
cmc
mov
mov
fistpl
mov
sbb
arpl
sbb
mov
ja
add
in
inc
and
insb
pop
repz
test
jg
loope
aaa
test
jg
cmc
lret
sbb
add
adc
adc
cs
or
sub
dec
xlat
inc
push
lcall
add
lcall
xor
ja
popf
xor
xchg
and
xchg
and
out
inc
pop
pop
sub
leave
fwait
clc
xchg
mov
fisubrs
outsl
or
add
ret
sbb
fildll
icebp
daa
dec
in
mov
popa
loope
mov
bound
lret
add
cmpsl
fldcw
out
or
in
out
mov
loope
inc
movsl
pop
dec
mov
dec
mov
fidivl
xchg
xlat
and
pop
je
mov
adc
push
cltd
mov
mov
cmp
mov
push
lods
jbe,pt
fsubrl
pop
sub
incl
fisubl
dec
jb
addr16
shrl
rcrl
cmpsb
adc
movsl
das
xchg
cmp
loope
mov
inc
inc
out
shl
sub
fwait
leave
sarb
jl
int3
jecxz
aad
jno
fistl
bound
scas
jp
mov
inc
fdivrp
dec
push
ds
mov
push
inc
scas
sbb
sarb
push
mov
das
adc
aas
xor
stc
inc
loope
mov
add
pop
inc
outsb
repz
cmp
lret
outsb
adc
bnd
repnz
adc
loopne
sbbl
lods
add
out
or
push
arpl
imul
mov
rolb
mov
jl
cmp
mov
pop
test
aam
pop
inc
xchg
mov
shr
mov
xchg
xchg
out
jnp
xlat
sbb
jge
cmp
cmp
inc
cmpsb
imul
push
pushl
jnp
and
inc
cmp
loope
iret
mov
ljmp
push
adc
lret
jp
popf
xchg
loopne
push
daa
or
dec
repnz
jmp
shrb
cmpsl
or
dec
mov
jmp
fdivl
xchg
out
lods
ret
rcrb
dec
mov
cli
mov
xor
mov
fisubrl
mov
clc
fst
mov
push
cmp
in
push
in
xor
inc
clc
scas
out
test
lret
test
mov
or
pusha
xlat
mov
cmpsb
ret
out
pop
xorb
cmc
or
inc
test
push
fs
mov
cwtl
mov
ja
ret
xor
aaa
xlat
sbb
cld
mov
pop
idivl
jmp
loope
aas
mov
leave
sub
or
mov
inc
push
push
int3
into
sbb
sub
xor
outsb
insl
and
push
cs
aad
xchg
inc
dec
cmp
pop
inc
jge
jecxz
or
mov
mov
adc
mov
jmp
movsb
cmpsl
mov
fcompl
jne
jmp
inc
cmp
mov
jecxz
notb
adc
pop
dec
fidivs
nop
lds
int3
add
xor
lock
sbb
movsb
stos
cmc
cmp
cmpsb
inc
or
dec
xchg
xchg
idivb
out
nop
jnp
imulb
and
fcmovu
xchg
mov
imul
jbe
aas
sbb
fnstcw
xor
mov
push
push
fistpll
lods
pop
pop
xor
cmp
lcall
mov
xor
mov
sbb
in
sti
lods
sti
shrl
pusha
je
out
rcl
ljmp
cmpxchg
test
les
push
mov
push
mov
sarb
cmc
xchg
add
into
std
lock
ja
xor
bound
out
mulb
inc
test
push
mull
mov
sub
adc
ljmp
push
sbb
fs
xchg
push
sbb
mov
xchg
push
adc
negl
stos
call
and
pop
aam
or
test
or
lods
jb
xchg
push
lock
iret
movsb
lds
shll
mov
dec
ret
sbb
jb
xor
stc
inc
adc
mov
sti
push
mov
les
dec
cmpsl
popf
lock
outsb
pop
xchg
out
inc
out
popf
les
xorl
jl
jne
subl
test
insl
je
or
pop
dec
pop
les
ficomps
scas
push
aam
mov
insb
lods
popa
lds
xorl
aam
addr16
adc
pop
fiadds
cmp
push
popl
sbbl
adc
mov
loope
icebp
lcall
push
test
xchg
and
adcl
inc
inc
or
lahf
test
scas
xchg
mov
adcl
lods
in
out
push
add
mov
cmp
push
stc
fildl
stos
xchg
xchg
adc
or
jns
mov
scas
arpl
lret
xor
jecxz
add
js
push
data16
sub
jg
jo
mov
add
add
insl
push
loop
mov
fldcw
inc
into
aad
push
pusha
mov
pop
cs
inc
mov
scas
out
fldl
out
cld
dec
dec
test
int3
jmp
xor
imul
out
dec
jb
xchg
dec
push
scas
adc
jge
dec
test
sub
lods
xor
sbb
mov
or
leave
mov
lds
pop
into
jecxz
add
dec
sbb
loop
lea
mov
je
imul
bound
mov
clc
les
aaa
mov
test
add
push
sahf
mov
lcall
inc
scas
shr
mov
and
or
movsl
inc
lods
xchg
sahf
sbb
xor
or
mov
bound
negb
addr16
movsb
repz
adc
daa
neg
in
cmp
dec
jno
test
outsb
push
and
mov
roll
xchg
xor
iret
pushf
xchg
xchg
pushl
aam
jns
cs
mov
and
cli
sar
jge
pop
sub
push
adc
push
and
dec
jg
daa
xchg
out
jg
cli
push
andb
in
inc
inc
and
rorb
push
push
cli
cmpsl
ret
mov
dec
ret
pop
mov
inc
jg
inc
xchg
lea
test
test
add
mov
cmp
ja
repnz
push
test
mov
xchg
adc
scas
data16
dec
lods
jl
lret
aam
and
mov
cmp
dec
int3
xor
rclb
inc
cmpl
jle
xchg
jb
inc
push
xor
push
jle
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
mov
xlat
xchg
daa
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
mov
xlat
xchg
daa
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
repz
xchg
shl
mov
xchg
arpl
jae
inc
pop
push
and
inc
add
cmpsl
jecxz
pop
sub
sub
cmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
and
cmp
lret
mov
loop
add
or
add
push
add
call
add
add
add
add
add
mov
dec
add
jmp
cwtl
add
add
add
dec
add
push
add
add
add
js
push
add
add
loope
pop
add
add
add
add
add
add
add
add
push
add
pushf
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
jmp
sbb
lds
sbb
imul
add
add
add
add
jo
ret
add
add
add
add
add
mov
pop
add
xchg
add
push
add
incl
into
add
add
add
xchg
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
loopne
cmp
inc
add
add
add
mov
add
add
add
repz
add
dec
add
testl
adc
xchg
add
add
add
add
insl
add
add
add
jecxz
mov
xchg
add
inc
add
inc
add
add
dec
add
add
add
add
pop
add
add
add
add
dec
add
adc
insl
add
add
add
add
add
push
add
add
add
add
sbb
jno
mov
add
add
sbb
cmpsb
add
add
add
add
add
add
lds
and
add
add
xchg
add
insl
add
add
or
inc
add
add
add
pop
add
call
add
cmp
or
jo
or
imul
or
sbb
pop
add
add
add
add
aam
jecxz
roll
insl
add
add
add
add
dec
add
adc
add
popl
mov
add
testl
jp
ret
add
popf
add
add
push
xor
add
add
add
add
popa
add
add
add
cwtl
add
in
xor
or
fs
add
int
sub
push
add
outsb
add
add
add
add
push
or
dec
add
add
add
add
add
add
add
inc
add
add
mov
popa
add
add
add
add
pop
add
lahf
add
add
add
add
sbb
push
add
jo
cmp
add
add
add
add
add
add
and
add
add
out
mov
add
add
sbb
jbe
insl
add
add
adc
ja
xchg
add
add
add
add
add
add
add
add
add
or
loope
adc
pop
add
add
add
add
add
add
add
add
add
add
mov
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
lret
xchg
mov
nop
ja
mov
lods
jb
cltd
mov
imul
jb
sub
popa
insb
stos
dec
jmp
add
incb
mov
push
sub
push
mov
popa
mov
cmc
push
fisubrl
or
aas
jle
testb
xchg
rcrb
cmp
pop
std
pusha
jae
cmp
nop
sbb
enter
fsin
scas
stos
aas
popa
adc
sbb
inc
add
jmp
sbb
jo
push
in
sub
pop
mov
lods
inc
mov
xor
add
rorb
pop
ss
mov
lds
pop
mov
call
pop
add
mov
sub
xorb
xchg
xchg
lret
gs
out
testb
out
fwait
mov
out
inc
mov
cmp
jne
jecxz
repz
daa
mov
xorb
in
nop
outsb
loop
pop
jbe
stos
sub
xchg
sbb
or
and
rcr
mov
ror
movl
je
stos
or
cmp
jb
and
jno
sbb
jle
iret
cmp
sahf
out
sbb
xchg
fcomip
push
dec
shrb
jecxz
fwait
fidivrs
rorl
sarl
cli
shlb
lret
mov
shlb
inc
push
pop
fcmovbe
jnp
fs
xchg
les
cmp
imul
push
and
push
std
filds
movb
cmpsb
clc
cmc
cmp
inc
adc
dec
test
test
xorb
mov
dec
push
cltd
sarl
dec
cmpsb
cli
inc
mov
mov
test
bound
orl
push
mov
stos
fbstp
inc
cmp
xchg
xor
mov
jmp
add
adc
aam
sub
pop
lahf
push
sbb
pop
push
bound
cmp
push
test
mov
pop
rcrb
das
lds
mov
hlt
lds
cwtl
mov
sbb
cli
rcrb
pop
and
sbb
dec
push
shll
call
lret
xchg
push
add
jl
inc
adc
dec
out
mov
push
add
loop
lahf
cli
jbe
xor
xor
fildl
fs
pop
mov
lret
mov
cmp
jge
xchg
add
cltd
sub
xor
shlb
sub
cmp
cmp
mov
cmp
imul
hlt
call
ljmp
push
pop
sbb
cmp
rcll
add
cmpsl
push
cmp
ret
xchg
movsl
out
ss
inc
jle
rclb
xchg
lods
mov
je
shlb
mov
repnz
cmp
in
add
divb
dec
movsb
xchg
mov
arpl
icebp
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
