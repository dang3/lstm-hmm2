fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
dec
aad
lds
in
fldcw
xchg
pop
movsl
int3
sbb
inc
in
jne
mov
mov
lds
in
xchg
sbb
sub
cmp
int3
push
faddl
jne
mov
add
dec
aad
lds
in
xchg
sbb
sub
cmp
int3
push
fsubl
pop
rolb
inc
call
pop
rclb
cmpsb
pop
mov
popf
push
in
mov
andb
push
xor
scas
sbb
and
loopne
cltd
test
cwtl
add
mov
repnz
jae
mov
lods
xor
xlat
enter
jecxz
popf
or
lock
add
xor
leave
mov
popf
or
std
mov
ss
rcr
push
pop
int3
stos
int3
mov
jb
hlt
sti
lods
aas
mov
xchg
push
movsl
inc
push
sub
stos
and
cld
mov
add
add
mov
fs
sub
pushf
movsl
hlt
xchg
fisttpll
mov
mov
adc
mov
push
lods
xor
pop
lds
in
xchg
sbb
sub
cmp
int3
push
faddl
jne
mov
mov
test
cmc
sbb
pusha
lock
in
dec
repz
lea
inc
adc
pusha
call
mov
mov
dec
stc
jo
sub
cmp
test
es
add
arpl
add
mov
cmp
int3
push
faddl
jne
mov
mov
lds
in
xchg
sbb
sub
cmp
int3
push
faddl
jne
mov
mov
lods
xlat
sbb
loope
push
cmp
out
mov
scas
add
and
inc
scas
xlat
and
cmp
out
cmp
jl
lret
xchg
lcall
stc
push
fnstsw
jl
jbe
fdiv
lods
pusha
mov
cmc
addr16
int
ret
ja
popf
fisubl
fwait
hlt
ja
xchg
fucomp
lret
mov
jmp
push
movsl
ja
js
mov
lods
mov
cmpsb
lret
push
or
mov
mov
push
mov
dec
mov
mov
and
dec
clc
dec
lods
mov
out
ljmp
mov
adc
iret
out
sub
movsl
add
pop
lock
cld
lea
mulb
in
in
push
mov
sub
ss
fs
call
adc
lock
and
sbbl
and
in
jmp
aas
aas
test
lahf
cmp
adc
fmul
fwait
cmp
mov
dec
in
loope
xorb
std
sbbl
adc
sahf
movsl
dec
xchg
dec
nop
jb
adc
addb
and
popf
rcrb
arpl
lret
cli
xor
les
repnz
scas
mov
fisubs
xchg
cmpsl
adc
pop
daa
movl
mov
lret
std
loopne
inc
stos
in
and
in
push
lcall
push
into
jmp
imul
je
sbbb
add
cmp
sub
push
pop
sahf
shll
ja
push
mov
mov
jne
shlb
mov
xchg
shrl
jmp
dec
scas
sub
adc
add
jp
add
enter
cld
dec
orb
in
inc
cwtl
jnp
int3
inc
int
adc
mov
sbb
adc
jle,pt
push
jecxz
rcrl
movsl
fisttps
ret
test
push
xchg
push
repnz
cmpsl
pop
jmp
out
movb
rol
xchg
roll
sub
imul
xchg
outsb
adc
lret
cltd
movups
push
jmp
mov
out
ds
test
mov
xor
loopne
mov
push
xchg
jle
outsl
fsubrl
sub
lock
cmp
pop
jns
movsb
xchg
test
into
xchg
mov
in
out
xlat
add
xor
lods
cltd
xor
test
dec
cmc
jmp
ljmp
pop
nop
call
sbb
daa
out
mov
mov
jnp
sti
aam
mov
call
std
cmp
sub
sbb
jae
ss
or
push
pop
faddl
xor
push
cs
call
mov
or
int3
mov
aaa
into
cmp
sar
out
cli
fistps
push
outsl
in
sub
icebp
ret
cwtl
aaa
divb
inc
sub
roll
dec
out
sbb
xchg
sub
push
retw
sub
jae
repz
loopne
and
push
sbb
leave
push
cwtl
xchg
sub
cmp
add
push
pop
pop
fistpll
cmpsl
subb
icebp
ljmp
xchg
movsl
pop
cmp
popf
push
inc
std
push
inc
adc
xor
mov
jp
lret
dec
fisttpll
mov
mov
push
ret
aam
outsl
ficomps
mov
scas
adc
or
in
push
aam
shrl
out
mov
jo
fsubrp
inc
std
lods
dec
mov
out
subb
addr16
dec
add
dec
pusha
mov
cmp
ja
xchg
lods
sub
sub
dec
fwait
imul
add
clc
jno
add
adc
jae
insb
dec
test
push
add
fcomi
inc
pop
std
ss
or
mov
inc
mov
mov
cld
test
shl
cltd
pushf
jne
test
or
and
lods
mov
ret
dec
mov
add
imul
push
sbb
xor
sub
mov
xchg
dec
xor
loopw
mov
sbb
stos
adc
and
pop
push
imul
lahf
ljmp
mov
or
stos
cmc
push
leave
int
sbb
mov
jno
je
push
inc
testb
lds
mov
mov
inc
push
in
pushf
popf
mov
jb
cmp
jecxz
and
push
sbb
shll
out
mov
xchg
dec
imul
sbb
inc
pop
loope
inc
je
jb
xchg
pop
jo
outsb
sti
or
pop
mov
jb
fildl
mov
aad
dec
inc
in
jo
xor
xchg
mov
fs
in
pop
ljmp
jo
push
mov
xor
jno
push
mov
arpl
pop
xchg
or
rorb
add
jmp
xor
xor
out
sbb
mov
inc
aaa
xor
jl
arpl
jp
popf
sbbb
mov
lcall
xchg
sbb
pop
popf
inc
outsl
in
add
into
mov
mov
stos
pushf
dec
lcall
push
pushf
sbb
pop
addr16
or
ret
or
repz
xor
dec
cs
xchg
shrb
xor
mov
outsb
adc
adc
jno
mov
stos
test
cs
or
iret
daa
dec
pusha
sahf
fsubs
hlt
cld
pop
lret
mov
ja
out
pop
push
inc
xor
xchg
inc
jbe
xchg
js
in
pop
mov
shl
jo
dec
xor
mov
outsl
pop
adc
sbb
sti
or
jno
jmp
dec
test
lea
out
out
xor
add
int
aad
loopne
outsb
scas
daa
cmp
frstor
loope
loopne
pop
add
mul
mov
or
mov
mov
sbb
cwtl
adc
mov
jbe
rcrl
mov
lcall
pop
inc
sti
jns
cmp
inc
sub
sub
cmp
pop
test
data16
and
loope
rcll
jl
jns
push
ret
test
mov
mov
jge
xchg
in
mov
inc
jnp
shrl
cmp
xor
shr
jne
adc
mov
data16
notb
jns
adc
test
sbb
inc
mov
xchg
lahf
arpl
xor
inc
push
pop
jnp
dec
cmpsl
and
sar
mov
ja
neg
imul
push
cltd
cmp
cmp
xor
cld
and
lea
in
xor
stc
sbb
outsb
cmp
mov
sbbb
push
cmpsb
push
dec
pop
rorb
add
bound
dec
nop
mov
jnp
in
ss
push
das
adcb
int
push
insb
icebp
rorl
adc
pop
cwtl
sbb
mov
movsb
rorb
out
test
stos
push
scas
enter
dec
pop
test
lock
rolb
jne
mov
jbe
dec
andb
pop
fdivrp
or
push
popf
call
fs
adc
cltd
call
xchg
pop
jae
mov
stos
cmpsl
mov
test
jle
ret
insb
add
sub
xchg
jl
sub
arpl
dec
lret
dec
or
int3
pop
push
rolb
mov
cmpsb
clc
pop
sbbl
dec
xlat
dec
push
push
daa
repz
daa
push
xchg
sub
iret
gs
stos
mov
adc
imul
lock
lret
and
or
mov
mov
xlat
jb
fwait
xor
dec
ficoms
mov
mov
cmp
jo
testl
test
add
andb
and
jg
push
bound
mov
xchg
adc
out
mov
inc
or
hlt
test
adc
aam
sbb
push
negl
hlt
cltd
repnz
add
lcall
stc
fildll
jne
scas
rorb
or
lret
adc
xchg
rorb
rcrb
ficomps
sti
and
xchg
xchg
lea
jo
add
cmp
jecxz
xor
inc
jb
lods
mov
int3
push
inc
push
rcll
adc
outsb
mov
add
loope
push
cmp
repz
mov
sbb
scas
mov
cmp
mov
lods
lret
les
stos
cmp
stos
dec
leave
orb
test
sbb
or
inc
push
outsl
cmp
sbbl
jne
push
cwtl
loope
push
pop
sbb
das
scas
adc
fldcw
mov
inc
pushl
cmc
and
jge
mov
aad
aas
mov
pop
pop
in
rorb
aad
pop
orb
out
mov
or
jo
xor
pushf
mov
pop
or
addb
mov
mov
add
outsb
outsl
push
out
rorl
out
push
xor
cmpb
mov
jge
movl
sub
into
lods
cmc
xchg
sub
lds
test
mov
push
xchg
sub
neg
dec
add
rol
dec
sti
inc
mov
mov
push
in
or
or
mov
adc
jp
dec
mov
mov
xlat
add
fimuls
xor
mov
out
mov
loope
mov
sub
lds
fwait
lds
dec
sbb
frstor
pop
push
inc
daa
xchg
sub
insb
push
cltd
lahf
hlt
dec
pop
mov
out
int
test
xor
xchg
aam
pop
int
into
mov
jmp
push
push
mov
pusha
cmp
or
gs
hlt
mov
test
out
push
push
mov
in
iret
pusha
neg
push
psrad
push
lods
sub
fisubs
fstpt
or
dec
aaa
inc
js
jmp
imulb
mov
mov
insb
mov
out
pop
iret
inc
jg
adc
sbb
lcall
pushf
push
aad
push
cmp
push
test
dec
fistps
mov
lcall
aaa
cmp
xchg
testb
cld
mov
fmuls
mov
push
clc
inc
adc
movb
xchg
lea
lock
jg
add
xchg
push
dec
lods
orl
xlat
xor
add
lahf
xor
fadd
cmp
adc
inc
add
or
xor
push
movsb
arpl
pop
cmpsl
inc
xchg
push
cltd
mov
mov
sarb
fsts
test
push
xchg
aam
shrl
aam
or
pop
pushf
push
repnz
pop
test
push
dec
push
xchg
lcall
gs
aaa
xor
or
jle
in
mov
sbb
sbbb
sub
in
mov
mov
xor
pop
iret
push
mov
pop
into
movsl
xorl
cld
repz
out
push
jp
push
dec
fsubl
jnp
movsb
and
shll
and
xchg
mov
adc
push
jo
fnstenv
push
adc
inc
into
cli
mov
mov
aaa
rep
xchg
aaa
push
mov
lock
shr
testl
loope
cs
pop
cmp
xlat
repnz
in
push
repz
repz
inc
push
dec
lds
sub
ja
insl
cmp
outsb
add
mov
lcall
dec
cli
in
push
pop
cmp
mov
cmp
imul
xor
push
scas
mov
shl
clc
cmc
pop
test
hlt
xchg
lods
int3
test
bound
inc
jae
dec
aas
mov
andl
addb
xchg
lods
test
sbb
dec
push
or
push
popa
lods
ret
lock
adc
add
ret
loope
xor
lahf
cmp
ss
xor
or
cmp
cmp
arpl
test
mov
rclb
dec
in
and
addr16
dec
gs
mov
sbb
push
in
sbb
pop
inc
xchg
arpl
adc
fmull
test
mov
fcomps
sub
xchg
insl
mov
adc
pop
push
pop
pop
pushf
cmpsb
pop
pop
popa
sub
mov
inc
xchg
fistpl
and
fnstsw
ret
aam
dec
cmpsl
or
sbb
mov
mov
pop
adc
or
mov
push
sbb
fcos
push
mov
xor
pop
call
in
pusha
aas
sbb
rcrb
jno
inc
fwait
cmp
stos
and
outsb
and
lret
xorl
rcll
add
and
push
mov
push
pop
fsubr
mov
cmp
sahf
ja
stos
in
mov
sahf
cmpsb
fs
test
incl
test
movsb
in
subb
mov
popf
stos
dec
loopne
stos
xchg
or
je
mov
push
fadds
xchg
imul
lock
add
loop
adc
ljmp
stos
ret
fstp
xchg
jmp
inc
fmull
sbb
or
jne
dec
ss
fdivrl
outsl
dec
pop
adc
dec
in
cmp
mov
stos
adc
lahf
pusha
out
int3
das
xor
arpl
jp
rcl
in
out
popa
push
xor
loopne
dec
imul
sbb
popa
inc
xorl
sarl
push
les
sub
pop
std
sub
dec
imul
jnp
int
push
int3
les
pushf
lar
dec
xor
cltd
jbe
inc
xchg
mov
enter
enter
mov
addr16
or
jns
mov
add
sarl
adc
inc
dec
cmp
in
adcb
pop
int3
stos
dec
xor
jg
dec
roll
xchg
or
or
xor
mov
outsl
mov
push
shl
gs
jbe
xchg
daa
jae
dec
sub
in
lock
orl
fstpl
flds
mov
jnp
sub
out
imul
in
std
mov
xlat
cmpsb
and
insl
dec
sub
or
daa
insl
dec
and
inc
hlt
pop
dec
inc
or
addb
mov
cmpsb
mov
pop
jp
or
loopne
test
cmp
xlat
jmp
mov
or
pop
mov
popa
and
adc
cltd
leave
cmpsb
or
cwtl
push
stc
cmpsl
das
lret
cld
jae
pop
sbb
mov
add
ret
jnp
mov
xlat
push
jg
xchg
outsb
fcmovbe
or
sti
fwait
lret
lahf
xor
add
sub
sbb
and
fs
mov
or
repz
movsl
push
inc
mov
rcrl
xor
stc
jl
push
cmpsb
sbb
fisubrs
pop
ror
outsl
shlb
mov
dec
or
mov
imul
jle
shl
jno
pop
cmp
ja
dec
push
imul
dec
jns,pn
mov
rcll
push
loopne
lcall
rorb
xor
leave
or
jne
icebp
and
mov
mov
icebp
sub
jb
sub
xchg
lcall
mov
add
jnp
mov
notb
popf
fstp
pop
repz
mov
negb
and
cmp
mov
fnsave
mov
cwtl
inc
cmp
js
or
pop
pop
dec
mov
inc
insb
mov
or
add
idivb
arpl
ja
rcll
gs
in
jnp
cmp
repnz
clc
pop
xor
pop
outsb
pop
fs
push
mov
sbb
popl
cmp
push
xchg
sbb
cmpsl
je
push
stc
jp
cmp
mov
push
inc
jnp
fwait
xchg
jns
dec
mov
mov
jbe
scas
inc
inc
jge
xor
rorl
jae
inc
addb
roll
data16
adc
addb
push
mov
cltd
fst
fwait
push
sbbl
test
iret
scas
lret
mov
int
mov
push
push
cmovo
inc
mov
popf
test
mov
in
into
xor
xor
jl
call
push
aas
jge
stc
cs
jecxz
push
int
jnp
adc
les
xchg
mov
xchg
out
mov
xchg
xor
pop
icebp
mov
mov
add
iret
pop
xlat
scas
jle
les
inc
sub
pop
cmp
dec
jnp
push
int3
sub
movsb
pushf
aas
je
test
inc
dec
and
outsb
add
lods
hlt
and
pop
out
das
jno
xor
ret
push
shlb
add
movsb
xlat
repz
dec
adc
int
stos
sbb
sbb
mov
sti
jmp
rcll
sub
adc
lret
movsb
jae
loop
clc
jl
lahf
xchg
add
jbe
mov
imul
dec
insb
sub
inc
push
dec
and
sbb
adc
mov
mov
lahf
mov
loop
icebp
push
adc
icebp
ljmp
sbb
aad
je
jbe
cmp
jbe
push
lods
push
test
and
xchg
mov
insb
add
int3
decl
je
cmp
popf
arpl
icebp
mov
inc
sti
movsl
ret
daa
rorb
in
xchg
xor
pop
sbb
lds
xchg
leave
ret
dec
jno
adc
add
add
mov
pop
mov
push
cmp
lods
add
bound
addr16
aad
cwtl
xchg
or
jo
mov
jb
arpl
cli
pop
movsb
popl
adc
jge
add
pop
and
rcl
js
sbb
cmp
push
bound
outsl
testl
in
adc
movsl
enter
dec
in
repz
rorb
fs
test
rolb
mov
stos
and
hlt
incb
sti
sbb
sub
adc
adc
jne
fs
add
mov
mov
clc
fucom
add
gs
jl
mull
bound
pop
lock
inc
bound
adc
mov
dec
imull
inc
push
xchg
mov
adc
xor
push
cmp
in
outsl
int3
add
jae
pop
movsl
add
pop
dec
call
jae
call
and
push
mov
cmp
sub
and
or
inc
pop
popf
push
pop
sub
int3
leave
adc
add
jmp
mov
inc
dec
loop
cmpsb
cmp
fstl
jg
into
sub
inc
popa
hlt
enter
insb
popa
repnz
into
cwtl
cmc
faddp
sub
loop
stos
dec
cmp
js
sbb
mov
fstpl
fldenv
stc
hlt
mov
sub
push
setne
test
ficomps
jg
inc
cld
add
push
add
push
incl
or
icebp
out
xor
inc
sbb
xchg
iret
pop
stc
call
into
sbb
fdivl
mov
inc
sub
push
fimuls
sbb
fs
movsb
lret
pop
insl
sti
jo
aam
adc
or
outsl
adcb
scas
mov
jge
shr
negb
mov
out
pop
in
and
add
sbb
add
arpl
xor
mov
mov
add
test
dec
mov
sbb
ss
jo
mov
outsb
mov
mov
aas
pop
ss
sarb
into
addr16
lods
test
pop
mov
or
incb
or
aaa
jge
loop
and
inc
scas
dec
jecxz
pop
sbb
filds
cwtl
jo
pop
rcrl
popf
movsb
add
sbb
mov
mov
add
call
xchg
ljmp
push
in
test
mov
xchg
pop
popa
mov
frstor
mov
push
pop
fsubl
icebp
fnstenv
lcall
add
sar
push
sub
je
and
sbbl
inc
mov
jecxz
mov
add
shrb
test
inc
add
dec
repz
pushf
repz
bound
ljmp
adc
fwait
jns
push
in
lock
xchg
xchg
in
mov
sub
lock
cmp
enter
jbe
ss
mov
xor
mov
jl
fbld
lods
les
mov
xor
push
inc
test
sub
adc
gs
xlat
js
divb
lahf
cmp
sub
push
mov
push
push
scas
adc
in
mov
xchg
mov
popf
fnstsw
loop
pop
imul
inc
sbb
sub
pop
cltd
mov
outsl
lods
movsl
fidivrs
add
inc
ds
xor
add
jno
sub
push
xor
mov
pushf
sbb
pop
sti
pop
ss
outsb
push
push
shll
dec
xor
mov
xor
fiaddl
push
stos
jle
inc
ss
add
mov
and
cmp
add
int3
push
popa
scas
cli
dec
aad
ficoms
ljmp
inc
rol
hlt
pop
mov
push
cmp
mov
add
mov
push
pop
jg
je
push
loopne
inc
shlb
scas
mov
mov
push
sahf
stos
shl
sub
inc
aaa
aaa
jmp
call
inc
popa
jne
inc
ja
ljmp
imul
cltd
loopne
dec
xchg
push
stos
sbb
popa
enter
dec
sbb
sub
daa
and
std
push
scas
leave
lds
test
aad
pop
sbb
cmp
fscale
add
inc
xor
ljmp
jnp
stos
movsl
xor
fwait
push
mov
push
cli
cmc
jl
or
sbb
sub
cmp
int3
push
faddl
jne
mov
mov
lds
in
xchg
sbb
sub
cmp
int3
push
faddl
jne
mov
mov
lds
in
xchg
sbb
sub
cmp
int3
push
faddl
jne
mov
mov
lds
in
xchg
sbb
sub
cmp
int3
push
fsubr
inc
jne
adc
popf
adc
push
lret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
lods
test
jecxz
lahf
xchg
xchg
mov
and
jl
sub
pop
dec
dec
dec
stos
mov
mov
int3
leave
cmp
js
into
or
mov
movsl
mov
xchg
nop
in
cmc
icebp
cmp
daa
adc
js
push
cmp
pop
das
dec
int3
mov
loop
hlt
push
adc
out
inc
xor
mov
or
inc
adc
pushf
jne
jb
pop
sub
add
shl
add
sar
cmp
pop
roll
lods
cs
dec
in
mov
in
jmp
ds
repz
cmpsl
mov
jmp
pop
mov
xor
int3
or
sbb
push
idiv
sub
xchg
sbb
movsl
and
dec
lds
imul
shrl
or
adc
rcrl
mov
mov
dec
rcrl
or
jecxz
inc
ret
cmp
cmp
mov
cmpsb
dec
pop
jl
lods
mov
in
stc
imul
fadd
aad
and
add
jle
pop
push
sub
stc
cwtl
call
xchg
mov
movsb
dec
push
sub
outsb
dec
bound
adc
cmp
pop
sub
shrl
mov
movsl
ds
sub
pop
insl
jns
sbb
pop
push
sub
dec
sub
clc
sahf
int3
stc
clc
mov
test
int3
leave
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
lds
rorb
pop
inc
loop
cmp
push
je
fstpt
repz
adc
cwtl
popf
xor
hlt
roll
adc
inc
adc
adc
add
lret
adc
sahf
xor
dec
sbb
ds
mov
cltd
clc
mov
sub
adcl
loop
ret
or
mov
ror
and
dec
loopne
sahf
sub
dec
out
shll
xchg
jne
ljmp
mov
out
add
and
ljmp
add
sbb
enter
pop
xchg
sbb
gs
fcmovnbe
addr16
test
loop
loope
add
sbb
dec
xlat
out
cmp
into
fwait
adc
loopne
jge
aaa
cmp
ds
shr
pusha
mov
lods
push
and
iret
mov
stos
clc
mov
pop
adc
in
movsb
in
outsb
jo
jg
ds
bound
pushf
and
insb
outsl
push
mov
jb
ret
sbb
adc
push
int3
fcoms
xchg
loop
ss
xchg
push
pop
hlt
mov
scas
aaa
sti
ds
shll
in
aad
cmp
test
rorb
adc
xchg
adc
jle
call
arpl
ljmp
pop
mov
es
push
dec
mov
mov
stos
jmp
int3
arpl
lds
adc
jle
cwtl
sti
mov
mov
xchg
mov
and
sbb
inc
push
movsb
inc
adc
and
loope
mov
bsr
repz
call
pop
pushf
and
push
or
xor
idiv
fdiv
add
das
mov
push
xor
fisubl
aad
sub
cmp
pop
outsb
fwait
and
lret
pop
mov
repz
xor
dec
js
xchg
pop
movsl
push
jp
jne
cli
xchg
cmc
das
xor
sbbb
jl
push
shrl
mov
aas
ljmp
push
shrb
fdivr
push
xchg
add
mov
pop
roll
sahf
and
js
push
dec
sub
daa
dec
movsl
mov
aad
and
addr16
jb
lahf
mov
repz
aas
es
push
adc
cmp
inc
shll
pop
push
fidivl
xchg
icebp
punpckhdq
pop
and
or
sub
adc
shrl
dec
pusha
lcall
test
je
pushf
nop
dec
cmp
adc
lret
clc
xorl
or
sub
add
mov
cmp
pop
mov
inc
inc
mov
push
je
or
int3
or
addb
in
sbb
jne
lcall
push
push
into
sbb
inc
out
inc
dec
xchg
loop
mov
scas
mov
stos
or
xor
out
lret
add
inc
shlb
dec
sahf
pop
nop
dec
fnstenv
inc
mov
sub
enter
sbb
xchg
add
sbb
xchg
fidivs
mov
pop
out
inc
jg
test
or
add
sub
xchg
mov
xchg
and
mov
lods
mov
cmp
repnz
jae
shll
push
loopne
adc
xchg
int
js
imul
sub
lods
push
dec
in
ja
xchg
mov
adc
out
cmp
int3
cmp
std
or
jns
xlat
sbb
sub
pop
lahf
imul
xor
xchg
negb
imul
jnp
repnz
test
movsb
insb
fstl
pop
mov
mov
cmp
xchg
cmp
xor
int3
cmc
sbb
dec
xchg
lods
repnz
and
pushf
int
jmp
fnstcw
jmp
jle
jno
fsub
add
jb
je
or
repz
unpcklps
insb
xchg
js
sub
dec
mov
inc
out
sub
push
dec
add
and
inc
into
aaa
or
sbb
fbstp
cwtl
and
fiaddl
adc
imul
test
lea
push
jnp
aas
jmp
xor
lds
sub
daa
mov
scas
and
repz
pop
sbb
outsb
inc
mov
scas
lret
das
sti
lcall
xchg
gs
pop
in
lods
and
cmp
arpl
and
out
inc
ss
popf
inc
mov
jecxz
jmp
stos
inc
dec
fld
and
or
pop
xchg
orb
mov
outsl
xchg
frstor
pop
shrl
roll
insl
pop
xchg
jo
daa
push
inc
sub
dec
popf
mov
mov
loop
aam
in
lret
xchg
push
sbb
xor
cmpsl
aaa
arpl
test
xchg
out
push
notb
push
bound
popf
fisubs
fimuls
cmp
pop
sub
cmp
dec
icebp
and
das
lret
or
btr
jg
mov
pop
std
dec
mov
lret
shlb
scas
mov
in
jle
test
js
jecxz
fsubrs
or
jns
and
add
cli
jmp
push
sti
pop
inc
push
add
scas
push
push
nop
cmp
loopne
mov
hlt
xor
inc
test
push
or
pop
jle
sar
and
bnd
movsl
mov
std
cmc
sub
mov
movsl
sub
pop
movsl
jo
xchg
push
mov
fisttps
js
fisubrs
mov
xlat
xchg
add
rcrl
dec
push
inc
jb
in
push
shlb
xor
mov
cmp
int3
and
in
pop
and
jne
add
xor
js
out
jne
cli
ljmp
mov
cmp
mov
xor
mov
lods
popf
lods
outsl
iret
and
not
dec
or
lods
inc
xchg
add
ret
push
push
adc
cmp
rcpps
insb
push
fildl
cmp
inc
in
mov
jne
and
nop
movsl
stc
mov
aaa
call
pop
sti
fcompl
nop
jo
js
xor
in
mov
push
mov
int3
aaa
popa
in
icebp
dec
mov
fsubrl
mov
sbb
in
ficompl
sbb
xor
in
je
and
jb
adc
inc
push
pop
lret
jge
xchg
push
or
movsb
mov
aas
pop
pushf
and
push
std
inc
andl
jmp
cwtl
xchg
or
popf
sbb
clc
mov
lods
push
mov
mov
cld
add
cld
cmp
mov
sbb
jmp
out
add
pop
fcmovb
movsb
jmp
push
nop
mov
dec
adc
ss
xchg
fs
xchg
loopne
lock
lods
push
lds
mov
stc
sbb
mov
test
int
ror
inc
addr16
dec
dec
lods
scas
sub
sbb
scas
in
adc
das
into
mov
dec
jp
and
or
or
in
pop
mov
ja
dec
js
xchg
inc
out
sti
data16
push
pop
mov
xlat
mov
mov
lds
mov
mov
cmpsl
inc
es
mulb
shrb
dec
out
mov
cmp
jl
push
sarb
sub
jecxz
cwtl
lcall
call
sbb
xchg
stos
sub
stos
sub
mov
pop
bound
lahf
aam
mov
cmp
aam
imul
push
gs
pop
sti
lcall
repz
dec
lcall
cli
enter
ljmp
fisttps
cmp
adc
or
arpl
pop
out
hlt
xor
lret
push
fstl
test
int
inc
and
push
dec
pushf
lea
pop
xor
clc
adc
scas
inc
shrl
stos
cmp
call
adc
loop
pop
aad
aaa
movq
test
popl
and
and
xchg
push
sbb
testb
mov
dec
mov
jns
int
or
xchg
xchg
fisubrl
or
rcrl
int3
int
xchg
pop
incb
ds
dec
int
test
jp
cld
fwait
imul
sbb
out
addr16
arpl
pop
push
sbb
out
cmpsl
add
cmp
mov
inc
xchg
cwtl
dec
xchg
hlt
xchg
jmp
adc
mov
dec
mov
rcrl
cmp
inc
loop
pop
adc
nop
jb
out
jecxz
outsl
fcmovu
lcall
scas
int
mov
push
les
subl
pop
inc
popf
mov
scas
push
dec
add
and
mov
repnz
push
imul
pop
sar
and
jmp
ja
or
dec
movsl
dec
repz
push
test
sbb
test
sti
shll
xchg
jge
jmp
cltd
mov
jo
ja
pop
aaa
mov
push
ss
pushf
negb
pop
stos
jle
out
inc
nop
sbb
cmpsb
ss
adc
loopne
jg
test
popa
sbbl
outsl
mov
mov
fwait
rcll
stos
push
or
jae
lcall
cmp
rcll
mov
mov
clc
cmp
xchg
and
push
in
sahf
fnsave
lahf
inc
xchg
pop
pop
loope
dec
into
pop
jns
jae
mov
cmp
pop
lcall
mov
test
pop
sarl
add
out
rcrb
je
popf
shr
inc
inc
mov
aas
repz
mov
or
inc
push
inc
scas
in
fwait
push
xchg
dec
and
pop
push
mov
lcall
shlb
test
xchg
pop
outsl
jb
pavgb
sbb
add
adc
lahf
scas
inc
or
ljmp
mov
and
imull
jmp
dec
xchg
pop
xor
lods
outsl
sbb
loopne
sub
adc
into
jmp
hlt
xchg
jmp
push
xorb
mov
je
daa
inc
mov
jo
xor
adc
ds
test
push
cld
xchg
dec
cmp
mov
cld
mov
push
sub
sbbb
sbb
test
add
ds
mov
inc
pushf
xchg
sub
test
xor
push
mov
roll
cmp
fiaddl
mov
movsb
mov
mov
xor
xchg
clc
shrb
adc
cmpsl
cmpsb
arpl
inc
pop
lret
adc
insl
std
std
pop
sar
fwait
pop
ds
sub
in
inc
bound
ss
popa
mov
dec
test
adc
int
gs
ljmp
push
sbbb
inc
inc
jg
test
adc
shll
lds
das
int
mov
repz
enter
test
je
aad
fdivrs
je
clc
mov
and
out
dec
test
popf
mov
pop
and
sbb
jbe
add
push
pop
test
ljmp
adc
adc
into
cmpl
add
shrb
dec
loopne
xchg
or
sti
mov
lret
mov
mov
or
enter
icebp
pop
lods
push
ljmp
jb
dec
push
cmc
jg
jg
mov
stos
leave
cmpsl
add
cld
lods
shlb
test
xchg
push
mov
push
cmp
sbb
lret
sbb
sbb
dec
nop
jl
and
js
mul
in
mov
pop
sti
or
push
fidivrs
popa
cmp
inc
add
mov
mov
stos
jecxz
jmp
sbb
icebp
call
push
call
xchg
mov
les
or
call
push
lcall
cli
addr16
mov
adc
aaa
dec
scas
mov
fsubrl
xchg
daa
mov
dec
pop
fcomp
or
mov
push
pop
ret
lret
out
iret
pop
and
sti
dec
jmp
icebp
data16
sbb
mov
movsl
jnp
push
std
mov
cli
pop
rcrl
imul
hlt
mov
aad
adc
push
cmp
add
sub
push
sti
ds
stos
ret
popa
mov
sub
lret
push
mov
dec
aaa
bound
pusha
out
xchg
jp
and
push
movsl
mov
addr16
stc
pop
shrl
mov
stos
bound
outsb
push
aam
pop
lods
pop
fs
popf
rcl
icebp
inc
jno
in
nop
leave
jnp
pusha
fimuls
test
repz
or
and
leave
and
shll
xor
mov
mov
js
pop
mov
cli
lcall
out
push
adc
adc
adc
mov
xor
jo
push
addr16
sub
push
in
pusha
insb
mov
pop
ror
xor
push
inc
pop
sti
js
addr16
mov
mov
fistps
enter
pop
fs
scas
or
sarb
push
bnd
jp
es
orl
jnp
dec
movsl
ficompl
aam
pop
mov
mov
sbb
js
xchg
fistpll
cmc
test
xor
adc
pop
cli
mov
mov
push
add
cmp
push
jne
mov
mov
sbb
xchg
push
mov
cmp
out
fldl
add
push
cs
mov
nop
stos
iret
stos
sub
mov
mov
xor
jne
dec
cld
leave
andl
std
mov
or
rep
cmp
adc
in
mov
sub
mov
or
cli
lcall
mov
aas
push
int
imul
sbb
popa
or
mov
rcll
push
inc
mov
pop
lods
sbb
iret
jmp
push
je
imul
mov
or
dec
xor
daa
xor
push
push
int3
mov
inc
sbb
test
insl
dec
loopne
into
les
dec
pop
xchg
orl
pop
ret
adc
fldcw
clc
movsb
push
pushf
aaa
popl
push
stos
xor
divb
add
fadd
call
push
sti
popa
ja
push
aam
sti
push
mov
dec
xor
push
xor
xor
cmpsb
sbb
jg
add
jae
xlat
imul
sar
jnp
gs
xchg
and
ss
jge
fisubrs
pop
jge
test
jne
std
sbb
cltd
sbb
inc
jae
cmp
push
fstpl
into
scas
sub
cmp
ret
stc
adc
in
mov
xchg
sub
push
test
pop
jge
nop
sbb
push
xlat
filds
mov
mov
jno
mov
pop
insl
repnz
mov
lret
imul
mov
jl
and
lret
int
in
bound
nop
pop
mov
lods
ds
jbe
dec
cmp
shll
push
les
mov
rcll
push
out
jbe
ds
cmp
lret
stos
dec
pop
repz
clc
icebp
scas
bound
xchg
inc
pop
int3
push
outsb
sub
mov
push
repz
sbb
insb
inc
add
clc
sub
mov
repnz
pop
hlt
pop
loope
mov
push
push
mul
add
mov
aad
js
popf
stos
in
in
or
inc
and
mov
loopne
out
test
lret
inc
cmp
out
jecxz
cmp
fwait
dec
add
pop
ret
imul
stc
out
loope
mov
xchg
or
jp
pop
pop
mov
xor
into
cmp
xchg
bound
fwait
ds
adc
mov
in
js
jmp
adc
jb
xchg
lret
insb
adc
mov
or
les
rep
adc
mov
pop
lods
sbb
xlat
sti
pop
cmpsb
popl
adc
mov
fistl
mov
adcb
sbb
xchg
iret
push
xchg
mov
mov
movsb
pop
ds
pop
repnz
lcall
fsubl
pop
cmp
test
popa
scas
movsl
iret
xchg
call
fcomps
push
fsubr
inc
test
mov
inc
pop
push
xchg
mov
jns
sub
or
into
mov
pushf
push
sbb
push
xor
ror
adc
lea
gs
jb
sub
cli
sub
rorb
or
xor
add
es
cmpsb
inc
call
sbb
cmp
js
into
push
stos
les
sbb
pop
pop
adc
xchg
mov
add
cwtl
adc
mov
or
movsb
jae
lods
andb
fdivl
hlt
ljmp
scas
pushf
cli
dec
call
imul
stc
outsl
sub
mov
cmc
sub
bound
aaa
ljmp
leave
sbbb
pop
fistpll
aam
pop
test
mov
aam
fsubrp
xchg
jo
inc
jmp
sbb
sbb
inc
xchg
push
and
shl
add
mov
cmp
xchg
or
lds
ret
pop
sti
int3
divb
mov
cmp
mov
test
cld
push
push
inc
mov
mov
add
jge
push
add
in
inc
cmp
daa
incl
out
or
add
lock
test
icebp
test
mov
ret
and
xorb
mov
aad
out
iret
imull
sub
mov
xor
decb
icebp
outsl
jnp
push
js
add
cli
xor
stos
aad
adc
mov
pop
inc
mov
inc
dec
push
jns
adc
sbb
fsubs
stos
dec
icebp
inc
movsb
adc
loope
or
cmc
cmp
inc
aam
sarb
xchg
dec
or
hlt
lahf
int3
ret
xchg
inc
sbb
xor
ljmp
data16
outsl
mov
shll
sahf
insb
pop
test
loope
or
mov
add
push
stos
addr16
fidivrs
test
rorb
push
push
test
inc
daa
jmp
out
stos
mov
mov
loop
jno
and
nop
pop
lds
les
fsubl
sti
imulb
xor
aam
mov
cmp
mov
cmp
outsl
aaa
pop
lcall
dec
push
push
shlb
negl
or
movsb
sub
nop
enter
cld
jmp
xlat
lods
das
stos
and
xchg
pop
dec
jmp
aad
cmpsb
add
jecxz
movsl
sbb
les
leave
push
pop
int
andl
stos
fmul
ljmp
push
push
stos
dec
mov
mov
sarl
xchg
mov
mov
pop
ja
int
mov
shr
pop
dec
push
int
dec
or
in
mov
mov
std
and
fldl
xchg
fcomps
or
adc
mov
sti
jg
in
and
push
mov
stos
pop
shr
sbb
enter
push
das
adc
stos
adc
and
rcll
stos
push
sub
pushf
pop
and
adc
xlat
stc
mov
sub
jbe
out
mov
scas
in
lret
push
cmp
jecxz
inc
bound
jns
push
push
cmp
enter
sbb
lods
cmp
and
jmp
dec
add
jle
cltd
mov
jae
in
pop
and
repnz
sub
mov
aad
lret
or
rcl
xor
ret
insl
js
adc
insl
insl
jae
mov
sbb
scas
pusha
dec
push
dec
and
pusha
testl
mov
sub
es
and
roll
or
push
cmp
pop
xchg
ss
add
fdivs
test
push
rol
push
and
aaa
sub
in
cmp
push
push
lret
mov
hlt
loop
ja
mov
mov
std
inc
fistpl
jbe
jb
in
imul
loope
pop
xchg
pop
inc
out
popf
popa
les
dec
xchg
aam
push
or
jne
daa
aad
sbb
rorl
push
lods
adc
call
je
cmp
data16
shl
aam
sub
addr16
dec
sahf
stos
xchg
pop
pop
or
mov
icebp
and
mov
int
sub
out
mov
gs
dec
cld
adc
add
mov
lcall
test
adc
sahf
les
mov
push
jno
fcmovbe
enter
mov
and
ss
xchg
imul
xchg
xchg
das
mov
mov
daa
ljmp
mov
push
out
cmpsl
mov
das
ret
call
outsl
adc
iret
int
mov
sub
sub
dec
scas
or
mov
lock
out
lret
rorb
pop
ret
and
test
pushf
sahf
mov
lret
fidivl
std
fldt
arpl
repz
hlt
fucom
icebp
xor
shll
rorb
adc
inc
aad
xchg
data16
lahf
cs
repnz
js
jne
jge
mov
sub
cmp
cmpsl
andl
out
mov
mov
sete
mov
callw
xor
rorb
test
push
jge
mov
mov
nop
mov
iret
mov
ret
into
std
in
cmpsl
mov
adc
bound
lcall
push
mov
fs
dec
sub
sub
lods
shrb
push
add
push
fisubl
sub
aad
inc
xchg
dec
dec
xchg
pusha
out
cmpsl
push
inc
add
sub
add
repnz
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
push
dec
mov
mov
pop
cmp
xorl
in
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pushf
lock
mov
in
into
mov
loope
pop
jo
pusha
cmp
sub
pop
xor
adc
lock
mov
mov
mov
sbb
or
cmp
sub
pop
xor
jl
insb
add
lods
rcr
int3
mov
sbb
das
cmp
and
pop
bound
inc
aas
jne
add
lock
xchg
mov
jbe
popa
pop
xchg
addr16
insb
daa
xor
shll
xbegin
jo
jae
inc
rcll
dec
int3
pop
add
add
push
roll
lock
stos
sub
cmp
ss
daa
in
mov
push
sub
xchg
mov
mov
push
test
adc
out
insb
add
stos
aam
mov
mov
jns
shr
inc
xorl
arpl
out
out
iret
insl
or
push
push
cmp
add
sbb
lods
cmpsl
jae
clc
int3
adcl
push
mov
rcll
idivl
mov
pop
push
inc
inc
mov
add
mov
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
popf
out
xor
xchg
ljmp
cmc
push
or
imul
sbb
clc
stos
in
xchg
mov
ljmp
or
push
sub
stos
pop
sub
gs
outsb
sti
mov
leave
mov
fmul
mov
sbb
or
cmp
sub
pop
xor
adc
lock
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
lock
cmc
and
rcll
or
ds
jae
scas
imul
push
jne
jge
inc
loope
cmp
jne
xor
xor
rolb
idiv
xchg
sub
mov
dec
test
push
push
ss
nop
in
pushf
imul
mov
ds
adc
xchg
aad
andb
add
xor
outsb
ljmp
cmp
cld
inc
fstps
jns
pop
shl
ret
das
xchg
add
add
test
stos
test
js
mov
insl
pop
xor
jg
ret
xor
testl
in
pushf
into
and
iret
or
imul
pushf
popa
das
mov
inc
mov
enter
cwtl
dec
xlat
adc
xchg
sbb
pop
jmp
mov
repz
out
jb
cmp
push
or
fisubrl
or
jl
cmp
or
lea
jno
add
pushf
in
imul
dec
lock
int3
mov
add
mov
cmp
mov
jae
xchg
addr16
bound
movsl
daa
jp
ss
imul
sbb
inc
xor
sbbb
jmp
jne
mov
xor
push
mov
dec
sub
and
cmp
cmp
mov
mov
and
adc
mov
jmp
and
xchg
fdiv
jae
arpl
mov
leave
fcmovu
pop
jno
les
scas
les
outsl
mov
fcoml
and
push
push
in
dec
push
int
lods
bound
les
hlt
mov
pop
in
and
fwait
sbb
sahf
aad
add
push
jb
stos
clc
jb
loope
pusha
pop
mov
jmp
in
adc
cmp
bound
pop
outsb
popa
push
js
movsl
cmpsb
fldl
mov
ret
mov
or
test
pop
inc
inc
arpl
inc
xchg
fsubrl
sbb
jmp
fisubrs
inc
add
into
das
cs
add
pop
out
dec
je
xor
enter
add
xchg
not
sbb
out
test
xor
int3
scas
jns
adc
sub
sahf
mov
add
jb
push
or
or
data16
loop
pop
jnp
es
lea
aaa
dec
stos
and
mov
rcrb
mov
dec
nop
cmp
mov
sarb
lds
cmp
sub
xlat
popf
fldenv
mov
jnp
lcall
fsubrl
sbb
ret
sti
out
outsb
push
add
cmp
into
int3
fnstsw
outsl
adc
jl
pop
jbe
xor
sub
adc
je
neg
out
and
xor
in
stc
into
cmp
dec
stos
cmp
mov
bound
mov
jg
mov
xchg
imul
jae
cli
out
nop
mov
cmp
and
jb
or
sub
push
sti
stc
in
hlt
mov
push
xor
push
test
out
mov
cmp
in
repnz
jle
jno
aad
cmpb
dec
jecxz
aad
int3
push
sbb
cmp
push
pop
jg
mov
imul
movsl
jle
lcall
adc
xor
pusha
fwait
sbb
enter
testb
xchg
xchg
andl
inc
mov
ss
test
inc
pop
ss
xchg
repz
mov
std
in
cmp
pop
jge
and
sbb
outsb
sti
xchg
jno
cmp
lods
or
cmp
loopne
gs
cmpsl
and
and
or
pop
dec
xor
ds
mov
pop
jb
pushf
out
jmp
jg
cli
lea
cmpsb
fcomps
sub
sbb
test
cld
lcall
xchg
add
push
hlt
loop
in
push
outsl
dec
es
fwait
mov
mov
adc
ja
fst
mov
test
ss
aad
push
mov
push
fwait
mov
jg
push
js
fistpll
jnp
mov
mov
loopne
jne
jbe
sub
adc
pop
loop
add
and
inc
movsl
mov
or
inc
repz
mov
and
addb
xchg
out
mov
das
xor
push
xor
pop
out
push
dec
movsl
and
or
aad
aam
mov
movsl
in
mov
push
aaa
add
iret
fs
sub
jecxz
hlt
jp
cld
aas
mov
adc
cli
in
test
icebp
fsubs
mov
lods
arpl
stc
jg
mov
push
in
rorl
aam
out
rorb
push
ret
icebp
fsubrp
int3
mov
lods
inc
sbb
mov
add
adc
je
adc
pop
pop
fldcw
ja
std
inc
jmp
jo
dec
outsl
roll
xchg
dec
les
nop
sbb
jp
and
jno
xchg
add
jge
scas
aad
xchg
sahf
and
orl
bound
sub
jle
int
out
cmp
push
sbb
dec
push
imul
orl
mov
mov
insl
movl
adc
jge
add
cwtl
iret
popa
out
mov
in
jge
sbb
mov
hlt
in
and
push
inc
mov
mov
ret
cmp
pop
lcall
adc
xor
add
xor
jmp
pop
dec
xlat
pop
loopne
repnz
aaa
pop
divl
testl
sbbb
bound
hlt
sbb
mov
data16
mov
jnp
sbb
ljmp
mov
es
or
mov
loop
mov
jae
dec
xor
adc
xrelease
addr16
inc
rcll
mov
sub
cs
xchg
jo
xor
or
mov
lock
rorl
repz
add
cmp
adcl
mov
sbb
push
mulb
cld
pop
sbb
xchg
fildll
cmpsl
popf
mov
ss
push
push
mov
idivb
mov
and
popl
xor
aas
add
mov
stos
add
pusha
aas
push
movsb
popa
bound
in
lds
mov
add
lods
sub
push
test
into
sbb
xor
cmpsl
pop
lds
fmull
imul
dec
push
pop
lret
xor
or
outsb
lret
stos
jg
or
sbb
mov
push
xorb
iret
pop
inc
push
push
fisubrs
jg
out
push
mov
adc
jg
and
mov
mov
jg
adc
dec
aam
xchg
stc
orl
cli
mov
inc
inc
and
repnz
outsl
std
shr
iret
mov
adc
sti
jl
and
pusha
sub
subl
lods
pushf
mov
ret
xchg
or
push
sub
pop
movsl
enter
or
call
nop
lods
jb
out
enter
loop
stos
and
xchg
xchg
adc
pop
adc
push
jns
ljmp
imul
int
dec
jecxz
or
fptan
fs
mov
sbb
mov
sub
popl
cmpsb
push
rclb
arpl
cmp
shll
xchg
outsl
jmp
sub
nop
bound
cmp
xor
pop
fcmovne
lods
xchg
aas
pop
rcll
lods
sbb
jl
dec
lret
in
inc
push
je
or
xchg
xchg
popa
fisubrl
and
ret
cmpsl
xor
iret
jb
fbstp
pop
add
adc
lea
xchg
push
and
add
jbe
cmp
jecxz
mov
and
subl
mov
lea
dec
add
push
movl
sub
add
xchg
jge
adc
cmpsl
bound
loope
mov
mov
scas
mov
push
cmpsl
push
pop
inc
mov
fisubrl
dec
test
jo
and
out
dec
mov
xor
ds
jmp
sub
pop
hlt
cmpsb
test
in
mov
mov
fwait
jae
jl,pn
pop
dec
cltd
push
xlat
loop
mov
fbld
mov
call
lret
mov
in
push
stos
stos
cli
dec
or
jb
addr16
cmc
shll
fs
in
inc
repnz
or
dec
cmp
jp
sbb
in
inc
xchg
fsub
jmp
adc
pop
cmp
repz
xchg
repz
dec
xchg
insl
pop
xchg
ljmp
inc
xchg
cmp
xchg
pop
pop
jbe
pop
data16
xchg
push
jne
scas
cld
xchg
sti
movsb
addb
inc
xorl
push
leave
out
negb
cmp
pop
push
or
dec
xlat
out
adc
loopne
jecxz
jecxz
mov
adc
je
stc
out
inc
loop
jb
movsbl
rclb
push
lret
cltd
movl
mov
loopne
iret
push
popa
aaa
or
jno
xchg
repz
mov
dec
jmp
gs
pop
push
call
adc
sub
daa
cltd
popa
cmpl
in
fisttpl
aas
dec
push
jb
stos
and
scas
daa
insb
popa
in
dec
adc
ljmp
out
sbb
inc
jl
sub
pop
xor
pop
incb
xlat
push
and
mull
add
movb
stos
adc
out
gs
fsubrs
lret
sbb
fsubrp
jb
cli
iret
rorl
cmp
sub
fs
aad
jl
shll
sti
sub
xlat
jb
pop
mov
and
addl
pop
and
push
in
gs
mov
mov
add
clc
mov
out
cmp
or
fistpll
les
stos
push
mov
inc
cs
mov
mov
pop
push
loope
inc
rcrl
xor
cmp
and
sub
mov
sti
int3
sbb
aam
ficoml
push
cmpsb
sbb
pop
test
and
and
push
pop
loopne
adc
dec
mov
adc
jge
pop
sbb
out
je
mov
test
rcll
hlt
addr16
lret
lret
jbe
fists
push
enter
sbb
xchg
gs
sbb
std
push
fldenv
add
mov
xor
mov
pop
aam
push
sti
das
out
fmull
push
sbb
js
sub
jle
cmp
push
dec
xchg
or
shrb
xor
jbe
lret
add
cltd
and
loop
in
test
aas
movsl
les
add
push
fabs
ret
xor
dec
stos
xchg
dec
xor
xlat
stos
out
jle
lods
inc
dec
cli
pop
add
stos
sub
hlt
movsb
sub
sbb
inc
fs
xor
rorl
mov
fmulp
sub
adc
fwait
add
lods
repz
or
mov
sti
xchg
into
cmp
mov
push
mov
stos
repnz
push
and
add
jns
dec
std
sub
cmp
out
idivb
je
insl
sahf
movsl
in
out
xlat
mov
cmp
das
imul
idivl
adc
inc
loop
sar
xor
inc
cld
xchg
stc
ret
dec
xchg
fs
inc
xchg
jbe
mov
call
sub
repnz
jbe
jo
mov
inc
xor
xchg
adc
loopne
daa
cli
or
and
inc
out
jb
adc
jnp
loop
push
into
pop
ja
outsl
dec
rclb
std
idiv
pop
mov
sub
push
cmp
fsubrl
incb
testb
mov
push
sub
or
fmull
sbb
lcall
cltd
jecxz
sbb
lock
aas
fistpll
hlt
xor
adc
filds
cli
dec
in
push
mov
rorb
cwtl
jmp
inc
inc
scas
lods
dec
data16
push
and
icebp
push
stos
mov
xchg
jbe
scas
lds
mov
repnz
arpl
lahf
stc
ja
dec
daa
addr16
pop
xor
scas
scas
or
xor
fdivp
movsb
pop
loopne
sbb
in
pop
test
pop
sahf
in
sub
mov
xor
sbb
pop
push
into
int3
cmp
int3
sub
cwtl
stc
sarb
insl
push
sub
ffreep
xor
dec
cld
inc
jbe
jl
daa
jge
xchg
or
jo
mov
fsubrl
in
or
push
pushf
xchg
adc
leave
arpl
add
jl
fs
pop
sar
add
add
mov
movsl
cltd
inc
lea
add
dec
test
xchg
loop
mov
stos
sub
jae
or
xor
mov
xchg
lods
xchg
pop
xchg
or
cwtl
stc
xchg
xor
dec
cld
pop
push
jg
sub
push
and
cmp
mov
lret
in
filds
divl
pop
les
adc
jb
popf
cmp
inc
fsubl
int
xchg
scas
jae
push
xchg
mov
sbb
test
pop
ds
loopne
stc
mov
mov
mov
sbb
aaa
fisttpll
setle
pop
in
ret
sub
mov
rep
push
out
mov
xchg
popa
and
jecxz
aam
and
inc
push
push
out
xchg
fistpll
and
lods
mov
daa
inc
lods
xor
jns
sbb
jo,pn
and
insl
stos
inc
mov
fstpl
adc
pusha
xchg
xchg
in
xchg
xor
mov
sub
insb
mov
idivb
cld
xchg
mov
stos
or
loope
or
loopne
es
and
mov
sub
jns
packsswb
addl
cld
cmp
ds
lahf
mov
sbb
push
stc
int3
inc
jecxz
jle
xchg
mov
mov
scas
pop
out
fcomip
js
xchg
fsubl
mov
mov
je
and
shrl
inc
outsb
cmp
sbb
jnp
fs
psubsb
test
dec
cs
out
mov
aam
imul
outsl
shll
xchg
jnp
and
loop
iret
or
out
xchg
scas
add
leave
pop
add
jns
pop
push
icebp
jp
xchg
stos
hlt
jl
leave
shlb
out
inc
jle
mov
lret
in
xchg
divl
cmp
mov
shll
aaa
daa
data16
mov
sub
dec
push
mov
mov
in
in
or
ficoms
cmp
jne
pop
mov
xchg
cltd
loopne
mov
mov
outsl
je
out
es
jae
mov
lcall
or
inc
cmp
inc
int
movsl
pusha
scas
es
jle
xchg
xchg
scas
lock
sbb
and
imul
lahf
push
and
mov
pop
jp
xchg
ror
lods
in
mov
fs
aaa
cltd
addr16
jmp
mov
in
adc
popf
ret
in
push
add
mov
test
inc
inc
repnz
mov
out
lcall
mov
push
stos
jbe
dec
and
push
adc
lock
cmc
loopne
adc
inc
sti
xor
cld
js
push
pop
dec
xchg
xchg
cwtl
sbb
push
iret
mov
xor
cmp
jne
dec
adc
imull
mov
push
clc
in
repnz
push
sub
sbb
pop
adc
jnp
jnp
inc
sbb
fmuls
lods
push
xchg
test
xchg
sub
cmovl
sub
mov
popf
mov
pop
add
lea
add
sahf
push
sub
xchg
mov
test
ljmp
xchg
or
lret
ret
or
aam
test
sbb
mov
adc
mov
xor
jo
das
cmp
mov
jl
lret
xchg
test
adc
pop
xor
std
jne
int3
pop
cmp
test
or
cmp
jbe
cmpsb
mov
data16
xor
movsl
jae
mov
scas
leave
loopne
inc
sarb
jecxz
mov
dec
arpl
push
cmp
dec
popa
or
pop
inc
in
imul
xchg
mov
xchg
loopne
sub
in
mov
and
in
cli
adc
push
jo
mov
scas
lcall
jno
imul
bound
mov
jb
ljmp
or
fidivs
mov
rclb
push
hlt
data16
cmp
imul
sbb
jbe
push
cltd
in
inc
movsl
lock
or
lret
pop
jno
neg
mov
mov
jmp
fdivl
arpl
cmp
cs
dec
notb
fs
xchg
loopne
pop
addr16
ja
jb
rep
jle
iret
jno
dec
fs
maxps
cmp
stc
sarb
dec
mov
scas
int3
push
repz
push
inc
pop
mov
and
mov
in
dec
adc
jne
roll
inc
ja
mov
ja
jmp
icebp
movsl
and
arpl
push
sub
and
adc
add
nop
or
push
fcmovnu
enter
xchg
mov
aaa
rorb
cmp
xlat
mov
and
js
add
js
aam
xchg
pop
rcrb
xor
lret
bswap
or
push
xor
sub
outsb
cmp
pop
or
lcall
jno
jg
out
xchg
adc
mov
int3
mov
popa
test
call
out
xor
lea
xchg
popa
add
jbe
or
inc
mov
insl
pop
and
mov
pop
icebp
cmp
pop
flds
inc
test
js
cld
leave
addr16
and
bound
out
jnp,pt
dec
dec
testl
and
cmc
repz
sbb
cmp
push
aas
fldcw
mov
cmp
and
mov
mov
out
inc
repnz
ret
mov
popa
lods
sbb
nop
lds
mov
mov
sti
icebp
and
xor
sbb
cmp
cmp
aad
xchg
push
cmc
jne
jecxz
push
sbb
sbb
lods
push
inc
mov
xchg
lea
pop
xchg
in
xorl
pop
sub
mov
int3
mov
inc
mov
xor
sbb
dec
push
pop
and
mov
mov
dec
test
movsb
push
call
mov
mov
jmp
dec
idivb
or
shrl
jle
push
mov
bound
bound
inc
pop
adc
xchg
sbb
xchg
xchg
dec
mov
lods
ljmp
popa
and
sahf
cltd
sbb
mov
insb
int3
dec
nop
and
xchg
xchg
mov
xchg
xchg
xchg
pop
push
inc
outsb
dec
sbb
mov
adc
ds
adc
loop
mov
enter
xchg
out
push
sbb
xor
xchg
jae
add
das
cli
loope
outsb
rcll
xlat
lods
jg
fnstsw
fadds
out
or
cli
push
adc
or
test
and
jmp
push
jge
stos
mov
jo
inc
sbb
idivl
loopne
mov
test
jnp
adc
sbb
push
xchg
inc
jecxz
pop
xchg
stos
or
movb
imul
jmp
leave
jnp
adc
arpl
stos
ss
xchg
jecxz
mov
cmp
jns
movsb
bound
sbb
daa
test
stos
imul
sarb
imul
aas
in
sti
mov
shl
stc
add
addr16
xchg
lret
lcall
xchg
aas
sbb
in
fisubs
sbb
cwtl
jp
adc
jae
xor
push
decl
push
stc
imul
pop
and
mov
xor
add
add
in
push
xchg
addr16
mov
out
sbb
or
stc
out
mov
lret
jp
decl
push
mov
rcrl
out
pop
out
pop
outsl
xchg
dec
je
sub
pop
jbe
add
enter
lods
xor
cld
xchg
dec
popf
xrelease
xchg
outsb
pop
lret
aaa
xor
insl
in
incl
lret
shrb
jp
fisubrl
inc
mov
inc
and
dec
movsb
xorb
aas
or
and
cltd
mov
mov
mov
mov
adc
and
sbb
loop
addr16
xchg
test
js
adc
cmp
xlat
or
and
push
mov
cmpsb
test
mov
loope
xor
and
cmp
ljmp
lret
and
out
xchg
lahf
rcll
adc
jo
ret
xor
clc
movl
push
pop
out
scas
sete
neg
xchg
adc
pop
call
pop
or
fucomp
mov
sahf
adc
or
add
in
mov
out
dec
outsl
mov
repz
jecxz
test
lret
or
daa
icebp
jno
and
inc
out
sbb
sarb
lret
mov
shrl
decl
mov
in
cmpl
ds
cltd
sbb
and
mov
inc
movsb
pop
push
pushf
ds
mov
dec
sti
and
adcl
fisttpll
lcall
sub
insb
in
add
and
out
mov
push
into
or
loope
add
xchg
mov
out
iret
stos
mov
xchg
add
ret
pop
push
fdivrs
mov
jnp
scas
lret
mov
pop
xchg
adc
rcr
int3
mov
sbb
or
cmp
sub
pop
xor
adc
lock
mov
mov
mov
sbb
or
cmp
sub
pop
xor
adc
hlt
mov
mov
mov
mov
sbb
push
sub
and
insb
add
lods
fdivl
insb
jg
repz
sub
sub
xchg
push
lahf
loope
sarl
shll
jno
pusha
push
push
sub
xor
rclb
add
lahf
loope
sarl
mov
fwait
jno
popa
sqrtps
inc
das
icebp
sub
add
xchg
xchg
shll
mov
cmc
jno
inc
sub
inc
inc
pop
xor
dec
cmp
add
fisubrl
push
lcall
inc
fdivrs
subb
add
add
dec
scas
mov
adc
mov
adc
mov
mov
sbb
fbstp
push
push
adc
je
add
icebp
shl
mov
fbstp
cld
jmp
icebp
scas
shrb
into
arpl
xchg
xorb
sbb
jo
inc
ds
pop
mov
xchg
cmp
bound
pop
inc
sub
ljmp
dec
and
sbb
cmpl
popa
ja
scas
push
jge
imul
fbld
divb
popa
pop
push
es
xor
push
adc
outsb
mov
xchg
std
mov
fst
scas
cmc
xchg
orl
cmp
dec
xor
and
adc
xchg
testb
sub
imul
push
pop
inc
sub
jge
je
xchg
lahf
loope
mov
in
mov
out
jno
popa
sqrtps
inc
das
xor
dec
adc
outsl
icebp
lahf
loope
sarl
mov
out
jno
popa
sqrtps
inc
das
xor
dec
adc
outsl
icebp
lahf
les
push
mov
lock
xchg
push
daa
js
mov
push
mov
xor
aad
pop
jecxz
cmp
call
dec
jne
fdiv
testl
push
adc
mov
aaa
lods
cmp
repnz
lret
inc
dec
mov
xchg
push
dec
xchg
push
out
inc
dec
in
push
mov
jo
leave
lds
lds
ss
dec
mov
or
inc
je
fbstp
loop
int
out
and
les
lcall
ss
mov
push
mov
and
testb
push
mov
insb
adc
in
mov
cmc
mov
popf
pushf
stc
xchg
nopl
out
xchg
fyl2x
lods
fiaddl
adc
jb
jmp
nop
pop
das
mov
cmp
pop
mov
int3
adc
push
sbb
xchg
mov
xor
add
fcom
das
dec
sbb
frstpm(287
add
jbe
test
jg,pn
and
icebp
mov
cld
test
inc
das
jmp
loopne
mov
cmp
out
dec
jmp
int
pop
test
stos
push
lahf
or
lds
in
xor
jle
dec
mov
movsl
lret
jecxz
push
imul
popa
lcall
fimull
mov
in
cmpsb
push
lea
xor
jne
adc
pop
mov
push
movsl
sahf
js
or
xor
add
or
xchg
aas
jmp
pop
cmp
sbb
pop
dec
inc
xchg
imul
and
lea
rol
sahf
jp
sub
vminsd
push
or
xor
mov
lods
adc
loop
push
jge
ret
mov
aaa
adc
inc
scas
test
lret
sub
and
pop
mov
adc
js
mov
mov
pop
into
push
and
repz
mov
mov
mov
out
test
fimuls
cmp
gs
subl
push
jns
xchg
jno
stc
cld
mov
inc
and
movsb
jo
fisubrl
ds
jb
in
inc
cmp
push
jo
push
sbb
sbb
or
leave
jle
mov
push
popf
add
iret
lods
test
sub
sbbl
ret
sub
fucomp
lcall
mov
ja
into
adc
in
pusha
xor
movsl
xor
fstp
and
fadds
stos
fwait
jg
pop
pop
testb
mov
sahf
xchg
mov
lahf
pop
xchg
push
push
jae
lahf
pop
andl
jb
stos
pop
mov
and
test
push
pop
dec
xchg
xchg
pop
mov
push
cmpsl
imul
pop
xor
lock
frstor
imul
scas
data16
icebp
sbb
les
xor
sahf
repz
push
in
push
jns
inc
push
push
mov
repz
addb
xchg
or
aad
or
pop
aad
push
mov
pop
mov
insb
add
enter
bound
sbb
mov
movzbl
testl
ret
and
push
xchg
outsl
subb
bound
insl
dec
xor
adc
out
inc
jecxz
cs
hlt
scas
push
cli
push
movsl
aad
in
aaa
addr16
das
mov
mov
cmpsl
xchg
icebp
push
imul
test
jae
into
mov
pushl
pushf
add
dec
mov
sti
mov
int
pop
dec
inc
cmp
js
inc
jge
imul
shrl
add
add
in
call
cld
jg
and
mov
sbb
push
out
es
test
insl
or
xchg
insb
xchg
inc
add
cmpsl
sbb
test
movsb
dec
mov
mov
aam
push
sbb
out
aaa
xchg
sahf
mov
push
xchg
cltd
inc
jg
pop
xchg
add
insb
repnz
arpl
mov
mov
lods
xchg
or
jmp
add
adc
andl
aad
jno
xchg
mov
jae
adc
imul
leave
lock
xorb
mov
idiv
sbb
mov
in
call
into
mov
pop
sbb
cmp
or
dec
movsb
xor
mov
shll
adc
inc
sub
cmp
pop
rep
daa
pop
jl
mov
inc
getsec
lcall
test
scas
push
jmp
stos
jle
lea
pop
sub
ljmp
movsl
rclb
aas
add
and
imul
jne
push
loopne
inc
lahf
add
insb
stos
jns
mov
mov
cmpsl
push
addr16
inc
mov
or
sbb
add
lea
sahf
jmp
and
js
lcall
mov
xor
ds
cmp
aam
push
fsubrl
adc
xor
arpl
pushf
push
aas
mov
inc
xor
repnz
fcoms
xor
notl
fildll
sbbl
data16
xchg
les
loope
sbb
push
out
test
add
mov
cmp
mov
js
lods
xor
adc
sti
shlb
add
add
int3
hlt
test
pop
dec
iret
fnstcw
iret
imul
arpl
mov
inc
sbb
std
sarb
cmp
pop
ret
and
dec
je
out
pushf
dec
lahf
mov
jb
or
sahf
sbb
mov
lods
lahf
out
cmpsb
gs
cmp
insl
jne
mov
add
mov
mov
dec
inc
scas
clc
out
push
subb
pop
outsb
scas
jne
jnp
je
in
aam
and
out
ja
dec
or
mov
xor
enter
xchg
mov
daa
idivl
adc
pop
das
shlb
test
dec
adc
divb
jno
cld
clc
jbe
dec
mov
movb
mov
mov
ljmp
lret
scas
ret
inc
lock
pop
cmp
xor
inc
aad
adc
pop
lds
and
nop
repz
movsl
mov
add
leave
ljmp
dec
daa
fdivrs
mov
jl
cmp
push
push
pop
mov
insl
or
xchg
inc
adc
cmp
adc
and
and
xchg
dec
mov
or
pop
cmp
push
arpl
push
cmc
dec
push
fs
pusha
aad
jns
cwtl
adc
rcl
jle
lods
sub
jno
imul
mov
dec
stos
sbb
or
ds
adc
mov
mov
iret
mov
pop
xchg
fsubp
fcomps
xchg
out
cmpsb
jle
push
mov
push
mov
push
mov
xchg
pause
mov
iret
out
xor
push
adc
add
out
insb
lods
fcomi
cmpl
loop
jecxz
cmp
pop
sbb
ljmp
lods
imul
and
cmp
insb
lock
sahf
ret
xor
jmp
sbb
jns
dec
cld
xchg
sub
sti
add
js
add
inc
loopne
pop
das
or
popa
gs
mov
cmc
sahf
popf
xchg
movsb
pop
and
adc
push
loope
pop
fwait
in
xchg
loopne
mov
test
int3
outsl
adc
arpl
xchg
xchg
mov
or
fisubs
adc
adc
or
mov
rcrb
pop
cwtl
jg
and
xchg
mov
sub
negl
shll
mov
pop
mov
mov
sbb
das
dec
in
push
repz
loopne
cmp
shrb
les
cwtl
and
repz
or
mov
xchg
test
inc
pop
mov
inc
dec
loop
lahf
sub
mov
pusha
out
mov
loop
pop
fbld
stos
cli
pop
fldl
in
cmc
insl
enter
cli
xorl
cmp
pop
mov
lods
xorb
fwait
jmp
or
push
sti
xchg
mov
mov
in
into
add
cli
pop
sbb
loope
xchg
push
ljmp
fstl
pop
test
add
mov
xor
adc
sbb
pop
mov
push
jp
in
arpl
mov
jo
adc
jg
fsubr
scas
call
cltd
dec
push
cltd
imull
adc
or
push
pop
adc
mov
out
inc
shll
cmpsb
fldcw
jl
andl
insb
filds
aas
out
fwait
inc
in
mov
mov
jecxz
test
and
mov
lods
mov
hlt
aas
loope
mov
adc
es
mov
mov
scas
bound
push
mov
lcall
jecxz
in
stc
jg
shlb
sbb
mov
ret
jp
out
mov
aas
xchg
subb
xchg
insl
insb
dec
jmp
mov
sbb
das
incl
sub
shl
pop
hlt
and
xlat
sbb
xchg
xlat
push
pop
scas
shrl
xchg
cmp
clc
xchg
add
xchg
cli
add
sbb
pushl
jmp
rcr
xor
dec
jns
xor
fldl
lock
and
out
cmp
scas
cli
jg
jecxz
ror
data16
mov
dec
dec
sub
lds
jbe
roll
mov
jmp
inc
add
into
popf
and
das
insl
xchg
mov
push
push
cmp
adc
loop
mov
mov
sub
xor
mov
outsl
jp
inc
movsl
ficomps
adcb
sbb
dec
mov
xchg
std
mov
jne
testb
rcrl
aad
js
mov
jnp
mov
out
add
insl
stc
cmp
push
ret
pop
insb
loopne
pop
xchg
dec
sub
mov
lret
sbb
lea
sbb
adc
dec
cmpsb
arpl
jp
ret
aad
cwtl
mov
cwtl
cmpsb
mov
inc
sub
push
push
icebp
dec
mov
xchg
jge
sub
push
xor
sbb
pop
mov
ret
sbb
adc
adc
pushf
lock
push
pop
test
adc
push
add
push
js
xor
adc
call
cltd
mov
loop
mov
js
popl
insl
ret
stos
sbb
xchg
push
repz
and
sub
scas
push
mov
mov
loopne
xor
push
mov
push
inc
scas
sbbl
fdivl
sbb
mov
rclb
data16
fnstsw
mov
lods
xchg
pusha
push
adc
rcrb
jmp
sub
inc
int3
cs
push
popf
jl
mov
cmpsl
cmp
xchg
sbb
leave
lods
call
ja
pop
fistps
in
mov
addl
inc
leave
jecxz
outsl
xlat
psrlq
lods
not
mov
adc
inc
call
test
lods
movsl
mov
nop
pop
mov
inc
out
lahf
mov
and
xor
test
push
in
sti
fmulp
and
icebp
inc
call
repnz
jmp
adc
loop
popf
imul
jg
jg
cli
push
lods
cld
leave
insb
fstps
dec
js
fadds
xchg
adc
lods
divb
adc
mov
daa
js
mov
in
shll
imul
or
std
rcrb
rcrb
mov
push
dec
fwait
test
jb
mov
mov
imul
mov
leave
call
lcall
xor
or
mov
ss
mov
test
addl
mov
into
test
daa
fisubrl
pop
shrl
cmc
in
shl
or
pop
mov
cld
out
mov
fs
gs
in
sub
push
addr16
jno
pop
aad
adc
rorb
hlt
mov
xchg
clc
iret
fsubs
jns
imul
and
jnp
das
sbb
ret
jno
fildll
cli
push
jno
mov
fistl
daa
js
mov
pop
sbb
mov
repz
mov
xchg
or
lahf
fstps
pop
mov
shlb
inc
and
into
inc
inc
outsl
lea
das
and
adc
rorl
cli
or
add
test
stc
daa
test
gs
mov
pop
std
pop
adc
ljmp
int3
mov
scas
jl
ja
push
sbb
stos
jmp
cmpsl
lock
lods
dec
cltd
andl
or
cmp
insb
mov
sub
or
jle
mov
cmp
out
inc
sbb
rorb
or
lahf
mov
add
mov
out
dec
or
push
push
clc
xor
jmp
jns
cmp
sub
in
push
je
sbb
orl
jge
inc
std
jle
arpl
add
mov
lcall
cld
fdivrp
dec
ljmp
inc
ljmp
cs
outsl
test
sub
add
adc
jnp
inc
ror
push
popf
insl
mov
add
dec
fnstcw
adc
and
xchg
inc
push
fmull
dec
insl
ret
xorb
adc
cltd
dec
mov
pop
pop
pushf
adc
cmc
sub
fs
lock
mov
xor
pop
add
dec
jle
outsb
test
mov
std
pop
lret
add
arpl
xchg
push
add
xor
out
jbe
das
int3
loope
jp
ds
movsb
or
icebp
dec
hlt
sarb
fmull
and
inc
movsl
xor
dec
and
cmp
xor
push
cmpsb
mov
push
pop
jle
dec
mov
push
test
adc
daa
stc
mov
mov
arpl
xchg
and
pop
imul
xor
adcl
rorb
inc
shlb
lds
in
jbe
inc
test
xlat
test
fidivrl
lods
pop
stc
cltd
adc
add
dec
xchg
and
sub
scas
push
les
and
and
jb
add
push
arpl
ret
scas
jp
mov
notl
adcl
xchg
mov
pusha
leave
xchg
test
aad
enter
add
mov
je
sbb
mov
cmp
ret
push
outsl
cmpsb
leave
or
push
and
lods
iret
insb
xor
clc
pop
nop
adc
pop
je
lcall
lahf
adc
xor
es
stos
jnp
into
sub
insl
mov
mov
cli
xor
outsb
xchg
xor
and
jp
mov
push
repz
mov
lahf
ja
dec
das
pop
aam
add
js
push
cwtl
lcall
jns
lahf
or
int3
fstpl
movsb
jmp
cmp
and
xchg
test
les
cld
sub
xchg
sub
pop
push
fwait
lahf
imul
mov
sbb
rol
add
mov
inc
sub
ret
daa
call
int3
dec
icebp
out
mov
adc
mov
xchg
xor
sbb
rorl
cmp
jnp
inc
aas
mov
aas
mov
lcall
dec
sub
xor
lret
xchg
imul
lret
mov
popa
loop,pt
in
mov
pop
add
fcoml
lahf
mov
adc
les
jmp
rorl
iret
push
test
add
dec
and
dec
push
lea
xchg
xor
sub
out
repz
xchg
cmpl
and
adc
imul
add
popa
cwtl
fidivs
out
scas
std
push
and
mov
sar
mov
in
cwtl
pop
sub
pop
mov
sbb
sahf
jle
inc
add
clc
pop
cmp
dec
lea
lods
fisttpl
scas
ja
sbb
inc
and
add
inc
mov
fadd
sub
add
xor
aas
xorb
std
jle
or
push
adc
pop
ja
iret
pusha
fwait
xor
lods
cmp
jp
dec
adc
jge
into
jmp
out
fwait
movsl
das
testl
mov
hlt
sti
mov
in
jmp
js
insl
push
pop
mov
jbe
ret
pusha
test
adcb
add
scas
outsl
repnz
dec
call
push
jmp
loop
xchg
mov
stos
dec
std
clc
sbb
or
insl
loope
push
int3
adc
rcrb
inc
sub
push
out
enter
lret
call
arpl
or
push
dec
sahf
or
aaa
lea
nop
cmpsl
add
test
aad
mov
scas
mov
adc
cmpsl
sahf
iret
aad
add
add
jbe
in
sbb
cltd
mov
fdivrl
stos
aaa
mov
addr16
fisttps
jne
imul
call
dec
adc
fisubl
push
dec
mov
add
inc
stos
jl
adc
inc
cwtl
cmp
mov
pop
and
or
out
dec
mov
push
or
lds
mov
call
mov
xchg
jp
das
mov
cmpsb
adc
fistpll
push
cmp
and
adc
enter
xor
out
pop
mov
jnp
mov
mov
or
jge
lock
ljmp
fistl
inc
inc
cmpsb
pushf
sub
addr16
cmp
cs
or
sar
cmp
outsb
stos
mov
or
out
cmc
cmp
push
jg
push
imul
flds
sub
mov
outsb
sbb
push
sbb
arpl
xchg
popa
sti
push
cltd
arpl
cmp
dec
in
das
repz
push
rclb
ret
adc
imul
je
lret
loope
cmp
ja
in
sbb
leave
jno
sbbb
loopne
andl
mov
mov
shlb
enter
mov
ret
lock
pop
jmp
mov
pop
mov
jbe
mov
inc
add
fwait
xchg
test
lods
mov
rcr
xchg
adc
mov
lret
or
push
loopne
ret
and
jmp
fldenv
lahf
aam
cltd
and
adc
mov
ds
push
fs
bnd
and
cmpsl
fcomi
ficompl
xchg
test
lock
ret
cmpb
call
pop
inc
mov
mov
pop
ss
sub
movsl
mov
sbb
fs
push
mov
mov
mulb
pushf
xchg
test
in
mov
or
add
out
rorb
add
push
lret
cwtl
mov
dec
lahf
adc
and
cltd
insb
mov
ja
jmp
cmpsb
push
mov
sbb
int3
push
add
inc
test
jbe
xchg
out
pushf
mov
sbb
insb
mov
shlb
in
or
mov
sbb
lret
stos
ret
insl
into
jmp
xchg
pushf
mov
ss
popl
outsb
xor
iret
inc
pop
xchg
test
outsb
jnp
fs
clc
aas
cmp
pop
pop
dec
movsb
imul
xor
and
adc
loopne
sbb
push
lods
jnp
xor
cmp
inc
inc
push
lea
aas
sub
aaa
mov
shll
dec
and
jns
and
xor
outsl
fldcw
stos
mov
or
cli
or
sbb
mov
shlb
out
mov
fadd
push
mov
mov
arpl
pop
adc
mov
divb
mov
out
inc
fs
data16
add
dec
fnstenv
sbb
aad
movsb
mov
xor
adc
jle
push
dec
jg
pushf
cmpsb
and
pop
stc
pop
lea
add
pop
mov
inc
rorl
xchg
inc
repnz
or
mov
gs
cs
mov
add
jp
pushf
or
xor
push
out
mov
pop
mov
push
out
mov
and
sbb
xchg
fistps
stc
add
adc
lret
add
xchg
outsb
rolb
leave
jo
std
roll
jbe
pushl
je
pop
adc
faddp
test
js
repz
dec
je
sub
hlt
leave
add
pop
push
aam
sbb
pop
sbb
mov
mov
xchg
adc
xchg
xchg
cltd
and
mov
sbb
mov
lahf
int
pop
outsl
sahf
push
cltd
xchg
scas
mov
out
cltd
enter
daa
push
dec
xchg
sbb
int3
or
xorl
push
and
add
jge
jle
mov
sahf
mov
out
cltd
fdivl
repnz
cmp
leave
arpl
mov
shrb
add
mov
xchg
push
movsl
push
adc
pop
test
xchg
fs
cli
out
pop
jne
fadd
pushf
mov
ss
mov
shl
xchg
add
test
push
aam
in
pop
pop
add
jle
inc
push
mov
pop
test
or
or
out
inc
scas
test
mov
xchg
and
mov
icebp
int
cmp
nop
cmp
fisubs
cmp
pop
fdivrp
inc
in
pop
add
sub
mov
imull
push
scas
test
mov
xlat
movsl
decb
xlat
mov
fldt
scas
push
push
test
or
add
sbb
push
push
and
insb
xchg
mov
sub
adc
data16
test
mov
mov
out
jno
popa
sqrtps
inc
das
xor
dec
adc
outsl
icebp
lahf
loope
sarl
mov
out
jno
popa
sqrtps
inc
das
xor
dec
adc
outsl
icebp
lahf
popa
push
mov
mov
out
jno
popa
sqrtps
inc
sub
pop
and
jnp
imul
loope
sarl
mov
das
jno
popa
movsl
sti
aas
inc
pop
inc
xlat
push
xor
jno
or
jne
or
pop
icebp
xchg
add
adc
and
xor
popa
mov
dec
adcl
add
loope
icebp
xchg
add
jno
and
xor
and
xchg
jecxz
mov
adc
loope
icebp
lds
xchg
xor
adc
jno
xorl
mov
push
xor
cmp
cmc
negb
jle
pop
xchg
imul
push
inc
ljmp
jmp
push
mov
and
cmp
adc
push
cmc
fisttpll
mov
sub
sbb
or
jp
sbb
add
mov
shr
and
aaa
push
rcr
xchg
fimuls
popa
or
xchg
scas
mov
dec
cld
shlb
lcall
les
jge
add
fdivp
icebp
jbe
xchg
lods
cmc
sahf
sar
pop
push
outsb
lcall
pop
mov
je
adc
xor
xor
push
xchg
xchg
loopne
movsl
jo
adcl
add
loope
icebp
aaa
add
cmp
inc
mov
popa
rcrl
aaa
out
and
imul
mov
mov
xchg
ja
and
and
arpl
xor
fstl
insb
mov
xchg
inc
icebp
std
jns
addb
mulb
lock
add
and
enter
leave
xor
inc
rcll
lds
aad
in
cmc
xor
popa
mov
inc
adcl
add
loope
icebp
lds
aad
in
cmc
xor
popa
mov
inc
adcl
insl
inc
lahf
push
aaa
xchg
fs
ret
hlt
adc
push
cs
fs
sbb
testl
xchg
xchg
testb
inc
xchg
bound
or
test
jb
fucomp
sarl
xchg
test
int3
xchg
jp
jns
mov
pop
adc
repz
push
scas
rorb
push
in
loop
int3
iret
inc
or
in
cli
lea
push
movsl
and
xor
inc
iret
or
xlat
les
mulb
cmp
sti
lock
imul
mov
mov
push
jl
loopne
or
cmp
ret
mov
mov
adc
lret
addl
cld
pmullw
mov
jl
je
ror
inc
fwait
and
jecxz
mov
mov
cltd
sbb
mov
xor
es
cmp
jo
push
jle
mov
xchg
mov
mov
dec
mov
add
shll
enter
sub
add
sbb
jbe
iret
pop
xchg
aad
fbstp
sbb
rcll
dec
cltd
inc
xchg
ds
xor
test
xor
and
sbb
mov
pushf
pop
mov
out
xor
aam
ret
hlt
ljmp
loope
mov
mov
cmp
pop
insb
in
adc
push
in
fistps
repz
add
adc
pop
fsubr
mov
pop
lods
inc
cltd
sub
or
cmovns
jb
movsb
jo
dec
adc
mov
notl
lahf
dec
xor
xor
mov
push
inc
sub
gs
and
pop
lds
inc
sub
clc
jno
ljmp
jmp
adc
addb
xchg
dec
orb
mov
adcl
in
adc
lds
lds
int
dec
aas
and
sbb
cld
pop
jo
cmp
pop
xor
inc
push
inc
cmp
test
fstl
cs
loop
es
mov
pop
mov
dec
fbstp
sub
aad
stc
push
jo
clc
xchg
mov
orb
mov
pusha
sub
test
into
test
arpl
sub
pop
jbe
mov
and
mov
adc
cltd
lods
sub
mov
or
in
pop
add
lret
mul
dec
dec
xchg
mov
cmp
jns
bound
lods
xchg
adc
out
arpl
cmp
mov
test
jp
arpl
repnz
add
inc
push
fsts
in
sub
push
popf
pop
inc
mov
sbb
or
sub
mov
cwtl
cmp
inc
ds
add
or
cli
sub
in
loopne
cmpl
xchg
push
jno
xor
push
outsl
sarl
sub
sbb
sbb
ror
inc
ret
push
push
push
and
in
sub
inc
leave
mov
cmpsl
push
xor
shr
in
pop
cltd
mov
xor
das
imul
mov
xchg
lods
addb
popl
dec
imul
pop
push
dec
cwtl
outsb
mov
test
or
jb
adc
add
pop
mov
mov
sub
mov
sbb
lock
xor
in
je
int
imul
or
inc
popf
int
lret
aas
mov
mov
mov
cmp
mov
aam
out
gs
dec
pop
adc
dec
or
fwait
push
sub
or
push
mov
addl
and
jnp
stos
xor
fadds
sahf
sahf
or
and
dec
sahf
les
movsl
sbb
pop
push
mov
mov
pop
cld
shlb
push
sub
in
std
pop
pop
xor
and
adc
ret
mov
sub
fwait
dec
mov
fbld
out
and
mov
lret
test
das
or
scas
test
xchg
mov
xchg
sub
and
inc
jne
dec
mov
sahf
and
xchg
ds
adc
push
or
scas
lret
jmp
cld
add
dec
shll
int
nop
push
push
lods
cmc
enter
test
inc
pop
fdivr
ss
insb
lea
in
push
dec
add
lahf
sbb
inc
out
fwait
cltd
or
push
inc
mov
pop
ljmp
iret
xor
add
dec
add
push
add
dec
loop
clc
xor
adc
xchg
popf
pushf
mov
or
dec
sbb
out
sarl
enter
mov
mov
and
in
xchg
mov
cmp
sbb
dec
scas
jg
in
fists
mov
xor
cs
xchg
in
enter
mov
push
or
push
push
mov
jmp
add
scas
inc
lock
fcmovnu
xor
stos
pop
cmp
sar
pop
lahf
mov
pop
rolb
stos
outsb
pushf
add
and
sbb
sahf
dec
adc
mov
push
adc
js
loope
push
sub
jne
out
sbb
jmp
icebp
mov
loope
ljmp
mov
gs
push
cmp
xchg
xchg
and
movsb
add
fucomip
mov
test
test
xor
jae
dec
out
shll
mov
iret
ficoms
lcall
lahf
out
add
ret
pop
or
inc
shlb
push
xor
andl
push
add
stos
jno
fldt
ret
popf
sbb
add
loope
xchg
mov
xor
dec
pop
dec
add
pop
pop
call
shll
sub
add
out
jns
stc
ret
rclb
out
shrl
sbb
and
loopne
daa
or
xlat
pop
movsl
test
fildll
and
xchg
inc
orl
pop
outsl
outsl
sti
push
in
sub
stos
xor
mov
pop
add
mov
std
push
stc
xor
jno
cmp
popf
adc
cmpsl
adc
pop
or
or
mov
cltd
sbbl
clc
inc
pop
mov
pop
iret
insl
cmpsb
sub
sahf
imul
pop
adc
shrl
xchg
fistl
pop
lds
mov
es
call
inc
mov
pop
subl
hlt
lea
sub
xor
pop
les
jb
pop
jnp
dec
andl
xlat
mov
cmp
not
push
dec
adc
sub
outsb
ss
cmp
xchg
push
pop
aaa
cwtl
pushf
dec
push
fdivrl
xchg
jecxz
out
adc
pop
rolb
push
push
pusha
push
and
push
mov
mov
xchg
cli
jmp
rclb
jge
mov
push
xor
cld
test
jns
adc
cmpsl
mov
push
cld
mov
push
sbb
aas
mov
pop
jp
mov
add
inc
push
push
cmp
arpl
push
out
mov
xor
mov
cmp
cli
jmp
mov
cwtl
aam
sarb
movsl
vmread
movsl
sbb
push
inc
sahf
ds
xchg
jp
mov
and
aam
bound
mov
fcmovnu
sub
pusha
sarl
test
push
shl
lock
xchg
jb
sbb
aas
cld
fdivr
or
lea
xchg
cmpsb
mov
xchg
stc
pop
in
adc
mov
or
outsl
cmpsb
aaa
dec
int
inc
and
add
loop
testl
fldenv
pop
jo
sub
sarl
dec
pop
jae
out
test
push
lahf
out
pop
add
ds
mov
fs
sub
ret
jmp
inc
xlat
cld
cmp
mov
jnp
outsl
jle
cmpsl
xchg
mov
jmp
ss
sub
add
lahf
xor
mov
ljmp
xchg
lds
or
int3
mov
fidivrs
push
scas
push
jmp
mov
mov
cwtl
fisubrl
ljmp
dec
xchg
test
xor
popa
into
outsb
jecxz
adcb
ss
loopne
movl
push
sub
cmp
ja
or
es
sbb
fwait
push
mov
adc
dec
add
out
inc
test
xchg
repnz
sti
dec
inc
xor
push
pop
mov
sub
pop
push
adc
and
mov
adcb
xor
sub
lcall
sub
ja
roll
pop
stos
push
cmc
sub
daa
divb
dec
jg
adc
inc
mov
mov
push
sub
or
sbb
inc
sbb
pushf
leave
pusha
add
mov
sbb
das
lds
fwait
add
cltd
jge
xor
leave
xor
mov
lea
mov
orb
dec
xchg
fidivs
stos
push
in
dec
scas
jo
cmc
mov
aas
xchg
add
loope
push
xor
push
rcll
lcall
cmp
popa
push
mov
or
pusha
lahf
bswap
insb
ja
test
divl
int
mov
jp
test
sub
cwtl
xchg
sbb
push
dec
push
loop
imul
enter
sbb
gs
daa
cmp
push
sub
cmp
push
sbb
mov
in
negl
inc
pop
and
call
gs
imul
in
aaa
jle
sbb
xchg
pushf
icebp
sub
jl
xchg
cmp
mov
jne
jl
sahf
out
call
lret
cmc
cwtl
mov
loop
decl
in
push
js
dec
adc
dec
adc
xlat
popl
xchg
divb
inc
cmp
push
xchg
std
xchg
mov
lahf
adc
pushf
test
jb
inc
mov
test
cmp
outsl
pushf
add
xor
aam
adc
or
ret
add
add
addr16
adc
push
adc
jae
add
add
mov
xor
mov
push
pop
dec
or
push
push
sbb
test
lahf
aas
jmp
call
jb
push
fmull
dec
add
jecxz
pushf
sbb
cmp
cltd
jne
aas
aaa
fwait
dec
xchg
mov
mov
mov
test
ljmp
push
cwtl
add
sub
mov
fstpl
mov
inc
lahf
sub
push
or
fbstp
cld
daa
add
cmp
int3
mov
insb
mov
push
mov
sbbb
or
fdivs
sub
and
sbb
and
addr16
aam
mov
add
or
mov
adc
pop
rcl
push
ret
mov
je
adc
mov
nop
nop
ficoms
cmp
repnz
pusha
sahf
and
sub
dec
sub
cmp
rcrb
mov
pop
sti
ficoml
adc
loopne
in
sahf
adc
pop
lahf
mov
into
in
dec
mov
push
mov
dec
xor
jno
mov
jp
daa
out
cmp
addl
push
xchg
jo
hlt
sbb
xor
nop
scas
idivb
in
xchg
cmp
inc
rclb
xchg
or
lcall
out
shlb
sbb
arpl
jle
inc
lock
sub
call
lret
out
je
pop
sub
sti
adc
add
mov
lret
push
push
push
pusha
jp
mov
xor
mov
sub
mov
leave
xor
adc
lds
dec
inc
sbb
sbb
dec
iret
cs
mov
imul
jl
xchg
cmp
cld
sti
dec
push
cli
xchg
mov
int3
decl
adc
sbb
lods
shlb
ja
or
pop
sub
mov
pop
mov
dec
test
loopne
or
hlt
les
lahf
repz
sete
mov
loop
test
inc
jo
pop
mov
push
scas
push
rol
ljmp
test
add
pop
popa
clc
pop
ds
mov
xchg
push
sub
and
mov
push
mov
clc
dec
fsts
stos
sbb
and
loopne
mov
push
push
sub
inc
lods
mov
rolb
xor
sub
xor
leave
mov
icebp
xor
xor
fbld
cld
or
mov
inc
mov
dec
adc
fcmove
sbb
push
or
out
mov
pop
xchg
and
pop
mov
sub
cmpsb
loopne
xchg
inc
xchg
sub
jp
dec
mov
dec
pop
mov
push
xchg
push
jle
jne
ja
mov
xchg
lea
adc
and
mov
lds
sbbl
pusha
int
ret
dec
scas
pop
fcmove
aad
xchg
test
sbb
pusha
adc
je
gs
es
sub
testl
bound
dec
lock
addr16
push
mov
adc
pop
xchg
fldenv
in
mov
pop
sti
mov
int
mov
es
mov
cld
lock
aam
lret
inc
xor
call
sbb
jecxz
sub
sub
xchg
stc
fidivs
cmp
rorb
sbb
test
ds
adc
inc
lock
lds
imul
sub
push
test
sub
sub
loope
inc
call
sub
mov
ret
aaa
pop
mov
and
int
adc
shrb
mov
sbb
xor
ss
icebp
shrb
aad
jecxz
out
daa
inc
sub
nop
mov
aas
push
aas
in
push
popa
int
mov
inc
xor
xchg
insb
inc
outsb
mov
arpl
int3
in
stc
jne
mov
mov
adc
xchg
cwtl
xchg
mov
push
cmp
insb
std
adc
xchg
das
jecxz
fldcw
sub
aam
mov
fs
insb
ja
mov
sbb
mov
je
dec
jns
scas
stos
dec
push
inc
jmp
mov
rdpmc
lea
mov
and
push
mov
inc
mov
adc
dec
pop
xchg
aam
adcl
icebp
bound
pop
jecxz
ret
sub
out
fs
mov
lock
ja
lahf
outsb
push
cmc
call
mov
cmp
add
or
inc
jb
xor
pop
xlat
xchg
lret
sub
lock
loope
add
scas
pop
ret
mov
stc
jo
cmpl
sbb
insb
fists
not
add
mov
fnsave
xchg
or
add
gs
cltd
add
mov
cmp
mov
jle
shl
inc
arpl
mov
int
movsl
cmp
add
inc
sbb
aam
adc
cltd
test
cmpsb
das
inc
jmp
fwait
int
lahf
mov
rcrb
repz
jp
sub
dec
aam
lcall
mov
rorl
inc
fst
add
fstps
call
aam
in
cltd
mov
testl
leave
out
sti
adc
aad
scas
sub
adc
mov
mov
sbb
or
jmp
out
cmp
push
xchg
push
pusha
pop
xor
jbe
add
call
mov
and
xor
mov
inc
lock
adc
shlb
ljmp
and
mov
dec
sbb
sbb
sahf
mov
xchg
pop
lds
mov
mov
not
adc
add
test
mov
lods
push
dec
mov
lahf
push
xchg
xorl
leave
xchg
sbb
nop
xor
test
or
repnz
pop
cwtl
imul
pop
pop
sbb
jno
sahf
push
idivl
mov
lea
sub
adc
jmp
or
mov
pop
ret
push
leave
lods
int3
test
out
mov
xchg
xchg
lea
out
jb
cmc
push
xchg
mov
adc
ja
cmp
or
clc
mov
stc
fstl
fcomip
mov
and
imul
inc
pop
popf
orb
mov
decl
mov
frstor
sti
mov
lahf
sub
pop
or
negl
aad
into
mov
dec
inc
ficoml
mov
push
sar
outsl
jle
add
mov
repnz
cmp
pop
fs
mov
or
cmp
cli
inc
mov
hlt
xchg
test
call
andl
and
cld
loope
jg
push
ljmp
mov
test
mov
xor
insb
jp
cmp
fsubrs
or
push
leave
push
cmp
in
test
jl
sbb
xchg
dec
xchg
cmc
and
adc
push
testb
jmp
mov
popf
push
add
loopne
cmpsl
insb
pop
cltd
js
lea
jno
outsb
fisttpl
dec
fmull
lcall
jecxz
xchg
iret
int
push
mov
adc
daa
mov
push
imul
lock
mov
inc
retw
cmc
ds
add
push
inc
and
ret
cmp
ljmp
arpl
jns
jno
inc
pushf
adc
stc
mov
xor
popf
add
pop
jecxz
cmp
pusha
sub
outsb
push
std
mov
xchg
mov
push
scas
andl
loop
into
sahf
adc
loop
add
add
xor
orb
adc
popa
mov
mov
xor
dec
jo
scas
and
outsl
lcall
push
push
fstpl
icebp
and
cmp
xchg
jne
aas
or
pop
fadd
imul
loop
adc
push
pop
imul
pusha
dec
add
xchg
fistpll
pop
lds
mov
push
sahf
cmp
data16
mov
fldcw
call
mov
aam
xchg
mov
dec
repnz
iret
popf
jae
cmovnp
dec
outsl
sub
movsb
dec
int
pop
test
subl
fs
push
jns
xlat
stc
push
mov
push
fsts
mov
dec
mov
push
xor
jp
and
les
mov
mov
idivb
pop
xor
xor
lds
mov
dec
or
mov
inc
jl
aaa
es
or
cmp
add
mov
mov
cmp
out
mov
out
lods
cmp
pop
inc
xor
pop
iret
in
lds
xor
cmp
in
shr
outsb
push
ss
pop
jle
pop
je
aam
fwait
inc
js
arpl
cwtl
addr16
sbb
cwtl
push
mov
repz
cli
or
sbb
mov
mov
dec
push
inc
cmpsb
int
cmpsl
push
call
setl
aas
cmpsl
fildll
data16
sbb
cmpb
jno
sub
mov
mov
inc
test
rorb
iret
xlat
and
or
arpl
sbb
sbb
fucomp
pop
in
push
mov
jae
mov
or
pop
adc
or
jb
enter
dec
xor
mov
xchg
arpl
pop
cwtl
inc
movsl
push
pop
lahf
fstpt
out
nop
aad
das
add
dec
pop
pop
push
rol
subl
xchg
push
ss
push
repnz
ffreep
jno
int3
aaa
and
imul
push
add
pop
jbe
out
push
jmp
mov
pop
push
pop
and
fwait
inc
aaa
jmp
sub
mov
jae
scas
adc
add
stos
jg
mov
xchg
sbb
lock
push
and
adc
stos
jg
mov
jl
mov
cmpsl
icebp
aad
pcmpeqw
mov
mov
pop
addb
xchg
lds
incb
andb
in
mov
and
mov
imul
cmp
lret
xchg
lret
popa
hlt
into
inc
pop
pop
inc
in
jmp
lcall
leave
jbe
inc
in
xchg
in
jne
test
push
xchg
mov
or
xor
adc
mov
dec
ss
out
lock
push
jb
pop
roll
or
test
icebp
push
mov
loop
inc
cli
cmp
sarb
jne
rcl
add
stos
clc
fcoml
add
and
dec
outsb
sbbl
add
add
cmpsl
sub
out
out
inc
dec
pop
fnstcw
push
popa
packsswb
mov
ljmp
scas
push
lock
or
pop
test
push
scas
add
xchg
subb
pushf
or
rorb
jle
and
negl
call
xlat
aad
add
divl
call
inc
and
jl
out
add
loopne
in
xchg
mov
adc
icebp
lds
aad
in
cmc
xor
popa
mov
inc
adcl
add
loope
icebp
lds
aad
in
cmc
xor
popa
mov
inc
adcl
add
adc
loope
icebp
roll
xor
popa
test
cmpl
add
loope
icebp
lds
sub
repnz
sbb
mov
xor
jl
inc
jmp
cltd
call
or
sub
dec
push
imul
fwait
int3
mov
mov
mov
adc
lods
jmp
sbb
pop
insb
sub
dec
sbb
insb
imul
mov
mov
mov
mov
sbb
dec
and
pop
add
jmp
mov
push
mov
fsubs
or
xor
jp
push
lock
into
inc
push
int
mov
inc
fimull
sahf
outsb
imul
insb
cmpsb
or
xchg
mov
int
fnstenv
inc
movsb
jo
sahf
aaa
sbb
pop
fldcw
aam
in
mov
in
cs
or
int3
fwait
cld
inc
inc
fisttpl
inc
or
ret
cmpb
popa
outsl
fnstenvs
mov
ret
fsincos
movsb
jmp
jae
jle
imul
sbb
arpl
popa
xor
cs
cmp
add
add
sub
xor
xchg
cmpsb
fs
or
push
int3
mov
push
lret
pushf
sti
jbe
cmp
lret
cmp
pop
and
jnp
imul
iret
scas
in
cwtl
clc
scas
repz
or
adc
push
insl
pop
pop
les
jecxz
mov
ret
dec
sub
inc
or
adc
sub
push
in
lcall
lcall
mov
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
int3
mov
ss
stc
shrb
repnz
testl
jbe
pop
outsb
sbb
gs
xchg
mov
std
xorl
inc
jle
inc
inc
fidivl
cmovno
mov
pop
mov
xchg
xor
jo
test
fcomip
sub
mov
or
jns
insb
add
cld
sub
fwait
mov
push
jbe
shrl
test
or
and
add
cmp
mov
mov
adc
sbb
and
and
dec
mov
push
jmp
sub
test
add
cwtl
scas
mov
jge
sub
push
cli
pop
imul
lahf
xor
add
and
shl
mov
sbb
into
jo
xlat
mov
push
mov
inc
pop
mov
lret
scas
cmp
addr16
clc
push
ja
call
add
push
pop
ret
and
jmp
aas
cmpsl
xlat
xchg
and
sub
hlt
nop
out
ficoml
orb
pop
add
pop
jge
adc
sbb
push
test
jecxz
cmpsb
pop
push
fs
bnd
and
jnp
fs
dec
mov
push
and
jmpw
push
xor
xchg
mov
rclb
pop
push
aaa
inc
aam
mov
enter
lret
fstl
sub
outsb
cmp
data16
xchg
int3
pop
aas
daa
lds
xchg
in
bound
ja
daa
sahf
push
test
mov
xchg
ja
fwait
pop
jge
or
add
lods
pop
xchg
repnz
mov
push
mov
or
jne
mov
arpl
test
mov
mov
or
outsb
push
mov
xchg
sbb
lret
mov
adc
adc
mov
fstpl
dec
jo
scas
mov
or
sbb
mov
mov
subl
es
lea
sbb
fstpt
aam
pop
xor
inc
cmp
lea
inc
dec
sub
sub
ss
sub
dec
test
push
fdivl
dec
jp
mov
pop
jg
lods
add
push
divb
outsl
adc
ret
cmc
movb
iret
flds
aas
test
inc
in
int3
pusha
jmp
mov
sub
or
andb
std
imul
add
lahf
cmpsb
lods
ficomps
int3
cmp
cmp
insl
push
out
cmp
dec
inc
inc
aas
fldpi
stos
sub
push
lahf
imul
jno
dec
outsb
push
xor
xchg
imul
mov
cwtl
div
jo
ficoms
aam
pop
addr16
stos
pop
pop
ja
push
dec
jo
in
mov
mov
adc
repz
cmp
fsubl
test
jg
mov
fs
add
movsl
ds
repz
sbb
mov
aam
sbb
jno
cld
mov
rcr
inc
and
mov
mov
adcl
imul
pop
js
je
loopne
lret
repz
xor
stos
fs
jo
fcomp
lret
shl
nop
mov
shrl
je
shll
iret
addl
sar
imul
outsb
mov
ss
stc
mov
adc
into
xchg
test
adc
sti
ja
cltd
es
stos
cmpsb
test
push
push
or
mov
mov
daa
mov
sbbl
inc
out
pusha
sub
lds
and
jne
cmp
mov
dec
xchg
fisubrl
stos
leave
testb
cwtl
rclb
nop
and
ja
fiaddl
std
hlt
sub
les
in
sti
pop
fcomip
rorb
aaa
lea
pop
jmp
sub
inc
pop
xor
add
loopne
into
xchg
jae
pop
xchg
add
push
mov
adc
add
sub
orb
xchg
jl
cld
imulb
dec
add
aas
orb
ss
adc
or
aas
fstpl
stos
daa
sahf
loopne
pop
outsl
repz
rorb
xor
lods
or
lds
mov
aad
int
push
lds
insl
orb
iret
and
pop
cli
adc
xchg
inc
stc
pop
xor
xchg
push
shlb
cltd
dec
ret
pop
mov
incl
xchg
shl
xchg
mov
sbb
jne
adc
pushl
mov
xchg
test
mov
andl
aas
or
lret
mov
mov
and
test
or
xor
fdivl
sbb
jnp
sahf
lea
pop
les
cli
lret
icebp
out
dec
dec
stc
ficoml
std
js
in
adc
fcomi
jnp
fstl
pop
sbb
adc
mov
sub
sahf
xchg
add
test
push
rcll
mov
cmpsb
test
mov
sbb
mov
xor
add
data16
dec
popa
shrl
dec
mov
jg
or
pushf
out
icebp
es
inc
pop
iret
pushf
add
popf
pop
push
cmp
rcrl
out
push
mov
fsub
shrb
aad
aam
aam
cld
mov
mov
clc
jge
insl
pop
jl
loope
push
dec
or
icebp
sub
outsb
mov
dec
dec
aas
out
ja
pop
out
fidivs
lcall
lahf
xlat
xchg
mov
or
imul
jp
out
adc
mov
or
xorl
arpl
push
sub
gs
fistps
xor
xchg
stos
push
movsl
ds
pop
int3
fstl
cmp
push
xor
or
in
lock
adc
xor
add
mov
mov
push
test
mov
gs
in
or
and
cmp
pop
xchg
popf
and
in
add
pop
inc
jns
adc
js
xchg
mov
ljmp
inc
push
fnstsw
and
mov
repnz
pop
push
add
sbb
mov
mov
cmp
mulb
jnp
pop
push
out
test
dec
cmp
fildll
andb
arpl
adc
fistpl
out
cmp
cs
mov
out
sub
push
fisttpl
rcll
andl
stos
xchg
test
data16
out
xchg
push
aaa
pop
je
jg
daa
dec
jge
xchg
dec
jae
mov
leave
test
fstpt
fstps
add
mov
inc
das
jle
xor
fcomp
mov
cwtl
out
js
cmp
xchg
inc
nop
jae
lods
lret
shll
out
push
add
pop
pop
stc
sbbl
mov
insl
pop
pop
cmpsl
movsl
testl
rcl
pop
cs
lock
push
inc
mov
pop
ljmp
dec
adc
or
lds
ret
inc
lcall
mov
rorl
xor
ret
mov
dec
sub
mov
cmpsb
leave
jns
rcrb
mov
cmpsl
cltd
jecxz
adc
mov
gs
jl
and
and
lret
int
push
xchg
dec
loop
gs
pusha
mov
lahf
pop
daa
frstor
xchg
outsb
jb
mov
clc
bound
sti
fcomp
pop
xor
mov
mov
mov
mov
cmc
icebp
pushf
and
ds
shlb
pop
inc
inc
mov
int
in
shll
int3
test
scas
adc
test
out
out
ds
adc
call
aaa
scas
and
sbb
mov
imul
push
pushw
push
push
xor
ja
ss
jmp
int
push
or
out
xlat
xor
mov
adc
and
mov
and
sub
loop
in
cmpsl
sbb
mov
sarl
xorb
mov
fistpll
pop
aad
cmp
rcll
hlt
and
xlat
jae
mov
jmp
loope
pop
xor
inc
mov
inc
dec
dec
jl
lret
pop
pushf
rcr
shlb
arpl
sarb
inc
lods
repz
add
push
test
inc
ficompl
and
fnstenv
sbb
popa
push
std
stos
std
pop
lds
xchg
test
dec
outsb
pop
inc
jmp
mov
js
pop
test
jmp
jl
movsl
jnp,pt
xchg
lods
mov
nop
fcompl
fimull
bound
in
std
sbb
in
sbb
sbb
push
pop
push
xchg
dec
adc
fwait
pop
fistps
mov
faddl
xchg
cmp
push
push
xchg
xchg
addl
jge
movsl
inc
xchg
fmull
xchg
out
mov
scas
sbb
mov
in
mov
adc
sbb
shrl
or
aaa
and
mov
push
out
jo
int3
cmp
loopne
dec
pop
inc
jge
dec
cvttps2pi
push
xchg
daa
and
inc
loop
jns
dec
jle
in
int
sub
pop
cltd
sbb
enter
fcomps
and
dec
xchg
ret
xchg
push
add
dec
pushf
push
cld
push
mov
xor
cmc
or
jmp
sub
int3
insb
push
add
fs
cwtl
mov
leave
iret
lods
fists
cmp
pusha
xor
or
lcall
mov
lds
push
stos
xorl
push
cltd
stc
imul
xor
adc
fldcw
hlt
insb
orl
push
add
push
jbe
out
cmpsl
pop
clc
sbb
mov
es
sbb
xlat
lret
and
sbb
pop
push
notb
lock
test
cwtl
mov
xchg
adc
enter
enter
adc
jo
shl
pushf
cld
adc
pop
js
sub
cmp
sub
xchg
in
inc
inc
in
mov
fdivl
dec
movzwl
rcl
jl
lret
out
lret
adc
add
cmp
cmpsb
xor
rcrb
les
mov
add
mov
loop
or
jp
push
fsubrs
shlb
mov
testb
dec
xor
shll
stos
mov
insb
divl
call
push
aas
stos
inc
and
or
int
lea
and
jge
ja
jo
adc
xor
jg
loope
mov
lcall
orl
lods
je
sar
psubusb
and
rclb
jg
pop
data16
mov
sub
decl
adcb
jae
mov
js
mov
incb
in
outsl
lcall
in
sub
mov
mov
cmp
xor
mov
nop
jae
and
frstor
cmpl
xor
dec
push
call
int
or
movsb
out
jnp
cmp
adc
loopne
mov
sub
lock
movsb
sub
rcr
aas
jbe
jecxz
xchg
adc
cmp
scas
hlt
push
add
pop
jno
mov
dec
add
nop
out
xchg
inc
cmp
add
shrl
enter
ljmp
imul
movsl
int
out
jle
sub
ljmp
sbb
cmc
cmpsb
cmp
punpckhdq
iret
sti
adc
cld
jle
fdivr
pop
data16
lret
mov
lods
pop
mov
xchg
xor
sub
cmp
push
mov
inc
xchg
inc
pop
outsb
es
pop
lock
mov
mov
gs
xor
dec
xchg
stos
dec
ret
div
fidivl
adc
inc
in
adc
jg
aas
fwait
pop
mov
enter
in
int
adc
imul
jle
aaa
popa
mov
adc
fdivrl
scas
push
fbstp
or
mov
or
adc
out
jb
inc
mov
mov
sub
xchg
mov
into
mov
jns
cmc
lds
pop
mov
xchg
mov
cwtl
xor
xchg
rorb
test
jp
add
xor
mov
cltd
in
aaa
xor
adc
jmp
add
pop
or
popf
nop
adcb
mov
dec
sbb
repnz
add
cmc
xchg
cmp
or
cld
gs
push
sub
inc
cmp
dec
ret
xor
scas
cmp
popf
mov
sbb
stos
mov
push
aam
mov
ret
dec
sbb
fstpl
add
sub
pop
xchg
adc
cmpsb
insl
xchg
pop
in
test
and
fwait
movsl
pop
xchg
pusha
movsl
dec
in
mov
ret
test
aad
xor
mov
leave
lret
mov
adc
mov
cmp
repnz
xchg
fnstsw
dec
in
sub
jecxz
dec
aam
rcrb
cltd
and
bound
xor
add
insb
arpl
xor
hlt
in
gs
adc
xorl
sub
xor
xor
lods
ret
je
lods
xor
in
mov
in
xchg
inc
out
mov
adc
outsb
mov
cs
test
negl
mov
mov
out
sbb
or
inc
jl
inc
dec
jmp
out
cmp
mov
int
stos
mov
fdiv
pop
jp
not
int
insl
mov
pop
mov
push
mov
data16
cmp
xchg
out
cmp
adc
lret
in
fisttps
dec
sbb
mov
sbb
inc
repz
aaa
pushf
adc
jp
xchg
lods
fmuls
mov
out
stos
push
mov
cs
mov
fwait
leave
xlat
adc
or
add
pop
flds
jae
pop
icebp
mov
lahf
jae
rcrb
jecxz
mov
and
xlat
outsl
mov
fs
out
ret
fdecstp
dec
mov
gs
repz
pop
mov
lcall
and
pusha
push
dec
test
mov
pop
scas
idivb
out
stos
lds
cmpsb
jmp
out
mul
cwtl
mov
adc
hlt
mov
es
or
arpl
jmp
cwtl
inc
std
jmp
dec
sub
rolb
mov
xor
pop
das
pop
mov
lods
and
sar
in
dec
mov
lret
adc
sarb
xchg
incl
jp
jo
sub
les
andl
rol
lock
sub
popf
or
lcall
sbb
xchg
jno
mov
shl
stc
jns
movsb
insb
stc
bound
mov
jl
adc
jnp
jle
pop
pop
inc
fcompl
sbb
enter
sub
enter
xchg
loop
jle
xchg
repz
dec
and
jb
sub
xor
or
or
ret
cmp
xor
rorb
idiv
popa
sub
in
cmp
fs
fisubl
xchg
std
push
or
imul
and
rorb
aam
and
jo
pop
dec
jecxz
cltd
mov
imul
insl
int
xor
icebp
movsb
dec
into
js
mov
fwait
or
mov
es
test
mov
jbe
je
pop
jne
mov
cltd
test
outsl
stos
add
push
lods
stos
icebp
bound
rsqrtps
dec
out
imulb
dec
xchg
mov
mov
rcrb
and
and
imul
sarb
dec
jg
xchg
push
test
mov
jo
dec
test
push
std
popf
insb
aas
fstpl
outsb
cmp
dec
inc
push
rclb
mov
or
push
push
lds
pushf
imul
stc
adc
adc
or
or
pop
fwait
jb
das
and
inc
ret
in
lea
jne
lahf
je
mov
dec
movsb
add
cmpsl
pop
lea
sub
pop
outsl
pop
std
add
mov
adcl
inc
push
repz
mov
sti
pop
leave
push
push
mov
aas
cmp
xchg
mov
sub
or
add
sbb
rcr
add
divl
pop
cmp
ljmp
adc
scas
lods
sbb
aad
fucom
pop
sbb
push
pusha
loop
xchg
jne
push
mov
out
sub
sahf
inc
push
mov
std
inc
pop
aas
repnz
imul
pop
inc
das
xchg
cmp
add
push
jmp
movsb
addr16
pop
dec
scas
push
mov
inc
shll
push
sbb
and
xor
lods
shl
jne
xchg
mov
les
or
scas
or
sti
cmp
mov
pop
push
test
scas
cmp
mulb
fldenv
cmpsl
loopne
add
mov
jl
rcll
or
push
test
jb
inc
add
pop
or
or
popa
xor
xchg
mov
mov
jb
mov
aam
add
xor
add
inc
mov
xchg
out
inc
mov
cmp
ja
and
dec
stc
sbb
dec
aaa
bound
xor
cmp
adc
mov
ret
outsb
or
push
dec
daa
pop
in
mov
lcall
jne
subb
mov
mov
das
xchg
and
out
sub
or
decl
insb
cmpsl
push
jle
push
pop
add
insl
imul
xchg
pop
jnp
int3
pop
mov
pop
lcall
mov
mov
jmp
mov
outsb
jle
imul
fnstcw
lcall
sti
mulb
push
pop
leave
dec
aam
loop
sarl
and
cwtl
movsl
fldcw
mov
daa
mov
or
sub
or
dec
cmc
sahf
push
pop
int3
into
dec
and
xchg
inc
mov
xorb
and
lret
push
push
inc
leave
pop
dec
jl
loope
and
movl
shrl
jecxz
rorl
ret
jo
andb
and
rcrl
sbb
flds
loop
push
xchg
dec
mov
es
hlt
in
test
xchg
add
daa
out
jg
cld
outsl
out
in
insl
sarl
ror
jg
dec
inc
std
xchg
movsb
xchg
cli
dec
in
rorb
inc
cli
test
or
add
bound
xor
cwtl
mov
ja
and
or
xor
imul
shll
int3
xor
outsb
xchg
je
scas
add
pusha
in
stos
pop
mov
inc
loopne
add
and
cltd
push
push
inc
or
or
popa
inc
lea
fucom
xor
fs
sub
fldcw
orl
es
pop
add
roll
mov
or
mul
out
test
lcall
cmp
test
fdivs
cmpsl
cmc
cltd
ja
add
sarl
jns
inc
int
in
mov
insb
jmp
xchg
pop
push
lret
xchg
mov
aas
enter
js
insb
or
push
lret
test
mov
in
or
adc
cmp
xchg
gs
jo
ret
sub
jle
dec
repz
push
pop
xchg
push
cmpsb
bnd
mov
rcrl
mov
leave
xchg
scas
orl
movsb
adc
cwtl
mov
mov
sbb
inc
jnp
ret
lods
int
pop
or
adc
in
and
daa
icebp
ret
mov
mov
jmp
and
push
in
inc
cmp
fists
hlt
mov
sti
push
mov
and
mov
insl
jge
adc
into
int3
jge
sub
dec
iret
test
das
jg
out
into
mov
and
icebp
jns
mov
lahf
fmulp
ret
pop
lcall
fildll
sahf
push
in
lea
xchg
repz
test
xlat
inc
mov
jecxz
sub
daa
std
into
mov
sub
adc
mov
sub
pop
xchg
lea
cld
jle
mov
jl
int
adc
xchg
mov
je
cld
push
mov
enter
aad
jge
mov
push
pushf
sbb
and
cli
sbb
into
ret
pop
stos
xchg
xchg
mov
pop
or
call
sahf
cbtw
lods
in
adc
adc
je
sub
lret
fldt
adc
mov
push
sub
pop
adc
lods
cmc
movsb
sub
xchg
xorl
add
jp
xchg
jmp
insl
jmp
xchg
jo
mov
jle
mov
sbb
cli
mov
add
in
lods
fistps
stos
cmp
sub
jmp
gs
inc
jle
mov
insb
mov
lcall
or
cs
xor
sub
clc
shrl
push
push
hlt
mov
ss
fidivrl
sbb
inc
dec
icebp
cmp
or
inc
lods
scas
adc
in
fisubrl
in
dec
dec
test
jmp
shld
sub
pop
sbb
inc
jle
sbb
cwtl
mov
movsb
fildl
scas
test
mov
int
pop
ret
das
test
sbb
les
aas
jne
arpl
sbb
inc
and
push
int3
inc
aad
mov
push
cmp
mov
jl
and
and
sahf
sub
bound
test
imul
ja
pop
shl
adc
bound
sub
cltd
in
fnstenv
pop
dec
mov
dec
cmp
jno
jb
out
jmp
jns
jnp
inc
cmp
push
mov
outsb
adc
push
jmp
in
pushf
pushf
or
movsl
push
mov
cmp
jo
sub
jo
dec
faddl
stos
cld
fisttpl
mov
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
sti
lods
jmp
sbb
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
xor
lods
jmp
sbb
jl
or
sbb
or
cmp
int3
mov
mov
mov
pushf
sti
sub
mov
xchg
insb
sub
sub
ret
jecxz
rcll
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
cmovle
jle
outsb
aas
stos
dec
popa
jg
add
jg
xor
xchg
scas
out
mov
scas
ljmp
pop
jle
outsb
aas
push
dec
push
pop
outsl
cs
into
lahf
scas
loopne
sahf
stos
mov
incl
push
pop
data16
jbe
pop
dec
push
pop
outsl
jg,pn
in
mov
sahf
mov
and
stc
mov
inc
and
jl
pop
dec
cmc
push
mov
insb
jmp
arpl
mov
xchg
inc
bextr
mov
pop
push
sarb
lahf
out
add
stos
into
fistps
scas
mov
std
sub
fldl
mov
mov
arpl
xor
mov
sbbb
cmp
loope
maxps
addr16
lahf
push
jae
pusha
lret
imul
aas
xor
iret
ret
loopne
rorb
mov
fidivrs
jo
mov
push
push
mov
inc
xchg
or
xchg
xchg
aaa
loope
or
int
mulb
popl
sbb
inc
fcmovnu
fisttpll
xchg
xorps
jle
outsb
aas
or
pop
outsl
aaa
jg
lahf
out
idivl
movsb
out
scas
mov
sbb
jle
or
jae
cs
jmp
iret
sahf
mov
ret
lcall
push
pop
jb
push
sbb
cmp
popf
ljmp
sahf
stos
in
enter
cmp
dec
adc
inc
push
jge
pop
outsl
jg,pn
into
lahf
scas
out
mov
mov
cmovle
jle
outsb
aas
push
dec
push
pop
outsl
jg,pn
into
lahf
scas
out
mov
mov
punpcklwd
roll
jb
insb
fdivrl
jmp
lcall
repz
notb
mov
and
jae
adc
push
enter
scas
xchg
ljmp
addr16
enter
dec
jae
sub
cmp
popa
xchg
inc
sbb
add
push
jmp
out
push
dec
cmp
and
mov
int
in
sbb
sarl
les
inc
jg
movsb
movsl
pushf
sti
mov
popf
jl
add
cld
inc
data16
lret
mov
adc
in
xchg
bound
es
dec
push
cmp
jg
fcoml
add
stos
jno
movsb
add
adcl
fstl
sub
ds
popa
jbe
cmp
es
mov
lcall
repz
xchg
sbb
adc
sbb
adc
xchg
jns
cmp
mov
mov
jne
cs
inc
notl
xchg
cmp
jp
inc
cmpsl
aaa
outsb
mov
ret
nop
fisttps
sti
mov
pop
in
outsb
fnstenv
in
push
out
sub
aaa
pop
sub
jns
fcompl
inc
das
fisubs
push
mov
mov
xor
orl
xor
jae
jne
aaa
lret
call
dec
push
xor
xchg
and
jbe
insl
inc
dec
aas
add
dec
call
xchg
jle
jge
aad
enter
xor
jmp
js
xor
sbb
xchg
loope
lds
and
xor
cmovl
xor
aad
rclb
sbb
mov
inc
fpatan
or
jecxz
inc
lds
and
repz
arpl
lods
or
rol
jno
sub
scas
rcl
orl
aaa
das
mov
pop
adcl
aam
test
cmc
shll
clc
and
loop
popf
imul
jmp
ja
lcall
jle
and
loop
pop
xchg
xchg
aas
adc
mov
mov
hlt
mov
ret
inc
fmull
adc
shll
xchg
mov
push
and
push
jg
pop
fmuls
sbb
lret
fsubs
add
aam
iret
jmp
mov
mov
in
mov
mov
call
mov
test
jae
and
xchg
nop
pop
xlat
pop
out
nop
sub
sti
jmp
ret
call
or
pop
sub
test
roll
xchg
sub
stos
pusha
sbb
mov
mul
iret
loopne
outsb
ret
sub
fisttps
movsb
les
arpl
or
xchg
in
scas
and
or
mov
dec
int
jmp
jo
cs
cmp
and
jno
and
dec
stos
scas
xchg
lods
mov
lock
sbb
mov
out
pop
pop
adc
sub
add
inc
or
xchg
jns
add
sbb
adcb
xchg
pop
xchg
or
push
push
adc
fisubrs
pop
pop
xchg
xlat
lock
sbb
mov
and
add
adc
ret
inc
aas
bound
adc
ss
fimuls
lods
outsl
dec
mov
pop
mov
cld
out
cld
test
scas
or
xor
movsb
mov
sysenter
and
push
ljmp
or
push
mov
das
dec
daa
aas
in
push
nop
mov
push
in
xor
lret
dec
popf
jl
push
lea
lock
xchg
popa
ja
lret
scas
cmp
dec
jae
xchg
xchg
jns
pop
mov
cs
mov
je
scas
lret
jbe
cmp
or
movsb
inc
test
pop
sti
int
pop
test
dec
xor
lret
test
mov
add
xchg
mov
notl
test
aaa
in
xchg
push
mov
inc
popa
xchg
push
ret
mov
sarb
cmp
jecxz
push
fdivrs
xchg
xchg
lea
push
loopne
add
repz
in
call
into
push
sar
adc
xchg
stos
or
stos
clc
out
pop
hlt
inc
add
iret
lock
fadds
and
xlat
pop
push
dec
ret
mov
and
loopne
xor
add
cmpsb
fsubl
jnp
or
imul
add
jns
fnstsw
fs
adc
adc
push
jae
faddl
adc
ss
mov
pop
xor
lret
cltd
cld
shl
and
or
out
sub
dec
mov
or
sbb
xorb
pop
mov
cmp
or
pop
xchg
xchg
dec
lret
xchg
hlt
fs
in
push
or
outsl
cmp
mov
fs
and
into
sarl
inc
out
std
ror
imulb
repz
stos
xor
cmpsl
sbb
sub
mov
dec
rcr
adc
lcall
mov
aaa
mov
inc
xchg
adc
push
xchg
out
icebp
pop
sub
mov
push
call
call
push
sub
mov
adc
xchg
push
xorl
aad
js
push
loop
popf
stos
mov
inc
sbb
pop
dec
arpl
sub
sub
out
mov
mov
movsl
jns
mov
inc
fstpl
mov
sub
js
push
popa
fiaddl
push
cmpsb
mov
dec
dec
pop
cld
rcl
in
sarl
pushf
mov
dec
jp
mov
lods
cmc
popa
enter
fsubr
push
mov
push
mov
insb
push
mov
push
push
shlb
mov
repz
aaa
cmpsb
andb
dec
inc
push
repz
nop
call
lret
rcrb
lods
xchg
mov
cmc
notb
inc
cltd
or
or
or
push
add
lret
faddp
out
add
outsb
adc
bound
pop
popa
cld
pop
gs
cmp
or
or
mov
in
xchg
mov
ficoml
icebp
pop
and
pop
and
divl
pop
mov
insl
aam
test
lock
pop
int3
sbb
xor
pop
insl
sbb
lret
jmp
fsubs
and
fmulp
adc
int
mov
add
cmpsl
xor
xor
int3
sbb
dec
jp
dec
les
push
cmp
mov
outsb
in
sbb
sar
lock
add
in
jge
mov
ljmp
push
adc
jmp
ljmp
data16
pop
loop
dec
insl
jle
out
imul
add
out
inc
pop
repnz
lock
ss
or
sub
mov
mov
dec
pop
fisttpll
mov
push
jno
addr16
pop
bound
dec
or
xor
jno
fsub
add
test
inc
adc
fwait
aas
hlt
aam
out
dec
mov
lahf
sbb
daa
push
sti
mov
mov
mov
repz
test
aam
add
aas
outsb
jnp
xor
out
mov
mov
inc
fcoms
push
or
or
clc
xchg
sbbl
ds
add
int
popf
pop
jp
out
pop
int
sbb
mov
loop
pushf
rorb
xor
shrb
and
mov
push
lods
in
mov
mov
int3
stos
cwtl
fidivs
shl
fnstsw
sbb
dec
or
mov
jg
add
aaa
push
rolb
pop
push
aas
mov
repnz
sahf
inc
orl
xchg
cmp
loope
divl
inc
cmpsb
and
xor
lods
push
orl
outsb
fwait
outsl
cmpsl
inc
sub
ret
mov
lret
ljmp
sbb
dec
push
imul
test
jp
aam
mov
lods
fcoml
cmp
aaa
xchg
std
jmp
les
out
xor
add
mov
loop
rolb
testl
xchg
mov
mov
std
fisubs
sub
dec
jecxz
mov
cltd
ret
test
mov
lods
cli
mov
xor
mov
mov
lret
ret
ljmp
xor
mov
pop
and
pop
and
bnd
stc
add
sub
clc
test
or
iret
mov
inc
mov
mov
dec
dec
ficoml
aaa
inc
pop
xchg
inc
and
insb
movsb
add
sbb
loopne
push
fildl
fdivrl
js
iret
daa
mov
cli
rol
ljmp
dec
shr
xchg
mov
call
sti
leave
fimull
pop
xor
test
xor
pop
sub
add
xlat
sbb
aad
lods
sub
mov
and
aaa
push
add
iret
lods
xor
push
leave
sub
xor
sbb
in
idivl
jle
in
xor
outsb
xor
xchg
push
inc
xchg
fistl
pop
jl
and
aam
out
adc
sub
push
lea
adc
mov
cmp
adc
xchg
mov
idivl
sub
mov
lods
dec
rcl
out
enter
mov
lods
mov
fdivrs
add
xor
or
insb
fs
push
and
pop
and
xchg
mov
andb
mov
adc
sti
sub
loop
mov
fcoms
cld
inc
push
or
mov
lock
jae
adc
dec
dec
push
dec
mov
stc
hlt
cmp
lods
xchg
and
push
int
mov
jmp
adc
ja
dec
sarb
call
test
push
aas
mov
cli
inc
fists
jge
insb
int
fisttpl
pop
cmp
aam
lahf
push
cmp
cltd
stc
or
sbb
pop
js
or
sbb
js
fucomi
jne
ret
mov
xor
push
andl
mov
sti
pop
add
insl
int3
mov
sti
out
sbb
sahf
jns
mov
adc
rcll
stos
jle
push
ret
inc
and
pop
sub
push
dec
lret
shl
sub
pop
inc
rol
sub
sbb
mov
clc
mov
cmp
xor
enter
mov
lods
sbb
in
imul
shll
xor
dec
popa
pop
inc
lret
adc
insl
sbb
cmp
cmpsb
sub
lods
bound
fs
xchg
popa
lods
sub
mov
jg
jmp
js
flds
popa
enter
lock
mov
inc
adc
js
rolb
sub
insl
lahf
dec
cmpsb
sbb
cmp
das
repnz
inc
outsl
pop
lds
cltd
pushf
je
mov
pop
cmpsl
mov
or
int3
jo
pop
mov
xchg
insl
push
mov
mov
sub
sbb
repz
outsl
rcrb
rsm
or
cmpsl
mov
push
push
adc
addb
dec
cmpsl
popf
pop
ja
mov
sbb
dec
lods
pop
or
dec
test
mov
call
ret
sahf
mov
add
mov
out
and
push
pop
daa
push
sub
sub
test
jecxz
mov
test
popa
enter
fnstcw
ficomps
inc
jle
fwait
leave
std
pop
push
pop
mov
mov
repnz
jg
fldcw
push
inc
or
mov
loop
push
ss
sub
lea
jl
add
mov
jb
imul
xchg
pop
dec
push
push
lods
sub
std
or
movsb
mov
leave
iret
cmc
sbb
testb
sti
sbb
pop
lods
inc
hlt
cmpsl
mov
dec
dec
mov
mov
add
sbb
ss
mov
add
adc
pop
in
dec
es
into
mov
shll
movsl
int
push
test
dec
mov
inc
insb
xchg
or
cmp
es
dec
dec
mov
icebp
mov
clc
repnz
dec
sub
dec
aaa
repz
xchg
ret
jo
adc
inc
popa
xlat
push
xchg
jge
ljmp
sbb
mov
cmp
ss
scas
jle
out
jmp
add
jne
movsl
jns
les
or
call
pop
push
mov
ficoms
mov
mov
fistpl
xchg
push
call
mov
sub
xor
in
sub
pop
fucom
mov
sub
dec
shll
dec
insl
repnz
mov
test
dec
addl
and
out
pop
popf
test
lods
arpl
xchg
mov
xor
sub
leave
pop
mov
stos
inc
out
cmpsl
andb
pop
cli
adc
fst
add
xchg
inc
fmull
inc
xchg
popl
mov
fstl
inc
fadd
iret
jle
sbbb
mov
sub
roll
in
jae
push
aas
jp
enter
xor
stc
jmp
loope
jp
addr16
xor
xor
pop
inc
and
and
push
fldenv
dec
or
push
jns
jmp
jbe
out
in
lahf
movsl
mov
pop
xchg
mov
xor
jp
out
into
cmpsl
shrb
inc
insb
adc
mov
and
dec
or
push
lret
pop
mov
xchg
jg
test
cli
mov
std
sbb
pop
mov
pop
lret
cmp
mov
sub
int
movsb
mov
shl
insl
mov
je
in
mov
and
pushf
sbb
enter
push
mov
or
add
int3
mov
arpl
aad
out
enter
push
add
jecxz
xor
inc
mov
sbb
call
sbb
xchg
inc
dec
imul
enter
or
sub
and
mov
mov
stos
insl
lods
jne
pop
sbb
lahf
popf
sbb
adc
rep
sub
push
aas
aas
cmp
scas
cmpsb
pop
pop
mov
call
ret
call
repnz
pop
test
cmp
pop
mov
mov
test
icebp
insl
mov
inc
gs
shrl
shll
out
fstp
mov
pop
add
mov
fnsave
or
pop
cwtl
leave
loope
mov
mov
mov
test
fldt
cmp
test
cltd
inc
sub
or
pop
nop
sbb
lods
adc
sub
sub
sub
cwtl
psubd
aas
push
sahf
sub
dec
xor
cmpsl
dec
fs
shrb
cmp
rep
pop
popf
dec
xchg
cs
pop
hlt
push
int3
add
insb
jmp
lods
imul
xor
ret
mov
clc
xor
ja
push
push
fwait
pop
test
pop
shl
or
push
rorl
dec
pop
pop
sahf
jb
push
mov
sub
jno
fisubrl
aaa
sub
scas
adc
cs
mov
aam
push
xchg
lods
mov
stos
inc
or
in
xor
dec
inc
loop
jb
push
mov
cmp
xchg
push
fimull
das
and
cmp
jle
fimull
clc
cltd
aaa
push
fs
mov
xchg
cmp
sub
inc
je
sbb
adc
ret
stos
aaa
loopne
psrad
ror
and
lret
pop
jge
sti
add
js
fs
inc
mov
add
mov
stc
repz
push
idiv
lahf
add
inc
pop
insl
cmp
sub
popf
pop
imul
xor
xchg
xor
mov
imulb
mov
cmpsl
jle
xor
mov
enter
test
dec
sbb
mov
inc
bound
sbb
add
xor
lods
adc
loop
loop
dec
mov
scas
out
enter
xchg
dec
and
or
xorl
decb
nop
sub
fidivrs
lea
cmp
cmp
movsb
push
mov
pop
lahf
pop
sbb
lret
jbe
jmp
jle
fs
lcall
pop
ss
push
popf
out
pushw
add
outsl
jns
mov
mov
lds
jo
jns
jno
out
push
xor
mov
push
out
xchg
sbb
sub
inc
mov
insl
xor
popa
cmpsl
frstpm(287
popa
push
jb
push
into
push
fisubrl
push
xor
inc
cmp
mov
jbe
mov
push
lret
dec
fisubl
rcrl
sub
pop
dec
push
adc
xchg
sub
sahf
aaa
je
iret
in
push
pop
nop
imul
jo
dec
in
sub
jns
loopne
jnp
addr16
xor
add
leave
adc
inc
push
mov
inc
jo
dec
aaa
push
ja
push
stos
dec
push
fld
sbb
mov
lahf
in
test
iret
ret
leave
pop
sub
mov
out
dec
lods
adc
jmp
pusha
pushf
pop
xlat
arpl
int
stos
pop
aas
xchg
mov
pop
adc
test
lock
mov
cli
iret
loope
jp
dec
les
in
inc
sub
add
insb
fdivr
jecxz
add
jbe
cltd
push
xchg
clc
cmp
aas
sbb
jle
inc
cld
xchg
mov
data16
xlat
and
mov
je
or
into
adc
xchg
inc
repz
or
ud2
push
stos
es
and
xchg
jmp
mov
fmull
loopne
cmp
jmp
and
fsts
std
stos
cwtl
imul
xor
lods
mov
xchg
inc
daa
nopl
cmc
cmpsb
xor
inc
gs
sbb
notb
call
dec
push
push
xchg
in
pop
rcrb
or
jno
push
or
mov
shll
icebp
sbb
cld
aad
xor
loop
and
cmpsl
mov
or
popa
out
out
dec
cmp
clc
in
xor
in
out
xorb
add
push
aas
loop
mov
jl
jbe
inc
popa
and
test
in
pushf
cmp
cmp
jnp
bswap
mov
pop
jl
cmp
xchg
mov
xor
sbb
pop
xor
mov
push
jp
test
pop
mov
jecxz
dec
int3
sub
out
cmp
dec
jp
psubd
nop
cmp
mov
sarl
mov
je
and
dec
adc
push
jne
push
out
cwtl
int
and
cmp
ret
jl
movsb
adc
mov
ljmp
test
mov
mov
je
cmp
jle
clc
fwait
cmp
test
push
mov
jmp
push
lret
jo
int3
mov
fmuls
mov
pop
out
push
jecxz
mov
push
dec
dec
insb
and
cmp
pop
or
popa
mov
je
bound
in
sub
ds
adc
hlt
or
jp
push
test
mov
ficoml
mov
xor
pop
in
imull
stos
imul
pop
stos
icebp
lods
enter
dec
insb
icebp
aaa
xchg
and
test
inc
fistps
jge
enter
outsb
fcompp
add
ficompl
dec
dec
inc
pop
out
iret
loopne
insb
inc
movsl
jbe
sbbl
push
lock
adc
sbb
loope
outsl
scas
cs
sbb
fsubrl
mov
insb
sub
stc
inc
jae
fildl
mov
mov
mov
shll
pop
sahf
out
inc
insb
mulb
fprem
cmp
cwtl
dec
jecxz
and
ret
rol
js
cmpsl
cld
ja
sub
adc
enter
pusha
scas
lret
scas
dec
inc
inc
enter
gs
mov
xchg
and
lcall
imul
mov
pmaxsw
dec
imul
inc
or
lcall
cmp
xor
adc
dec
cmp
jl
cld
notb
dec
mov
test
fwait
cmp
mov
ja
cwtl
push
ret
pop
inc
aad
push
jns
pop
xorb
mov
jl
mov
fs
push
lock
repz
xor
into
mov
jae
cltd
jg
jae
or
push
enter
jl
andb
add
jno
jnp
mov
mov
push
mov
faddp
stos
test
fstpl
ja
sbb
aaa
mov
sbb
outsb
adc
push
mov
mov
push
ret
xchg
sarl
xchg
addr16
adc
mov
test
inc
cmp
divb
sub
sbb
cli
pusha
scas
jg
sti
and
hlt
adc
xlat
mov
inc
adc
lcall
jle
xchg
sub
mov
dec
and
fs
repnz
xchg
sub
cs
icebp
test
std
inc
xchg
shll
push
je
mov
cmp
mov
loop
sub
or
push
in
fists
imulb
fisubrl
and
pop
sub
fstpl
jne
in
mov
and
fcmovnbe
cld
lods
xchg
in
jmp
jbe
pop
pop
stos
lds
repz
icebp
inc
movsl
xor
insl
mov
imul
mov
lock
and
sarl
inc
negb
mov
test
inc
add
das
inc
ss
outsl
pop
outsb
repnz
sub
fcompl
mov
lret
mov
hlt
imul
jmp
dec
imul
add
out
popa
mov
xchg
nop
pop
je
outsb
aas
push
dec
push
pop
outsl
jg,pn
into
lahf
scas
out
mov
mov
cmovle
jle
outsb
aas
push
dec
push
pop
outsl
jg,pn
into
lahf
scas
out
mov
mov
cmovle
jle
outsb
aas
push
dec
push
pop
outsl
jg,pn
into
lahf
scas
out
mov
mov
cmovl
jg
outsb
aas
sbb
push
pop
mov
xor
jmp
adc
add
adc
adc
add
and
inc
jb
data16
jno
mov
not
psraw
loope
xor
and
xor
inc
jb
bound
jno
xorl
shl
loope
icebp
ret
jecxz
mov
jmp
sub
jno
in
mov
leave
repz
stos
mov
lods
cmpsb
outsl
jbe
arpl
inc
pop
addr16
jge
fwait
mov
cmp
imul
in
loope
data16
outsl
addr16
in
lods
cld
mov
and
dec
sarb
out
mov
lcall
jnp
dec
daa
repnz
inc
sbb
mov
mov
xchg
mov
roll
xchg
push
sub
int
fnsave
jns
les
fldl
mov
xchg
jno
xorb
inc
and
out
outsl
loopne
icebp
mov
add
lods
std
mov
xchg
cli
mov
mov
cwtl
shl
sbb
mov
and
sarb
and
loope
repnz
dec
lcall
pop
mov
xor
movsl
jb
bound
xlat
rolb
or
xlat
nop
cmpl
push
jle
outsb
xlat
aas
unpckhps
jno
xor
aam
mov
mov
stos
dec
je
fs
popa
push
outsb
sub
xor
xchg
cmp
out
ret
xlat
mov
mov
mov
insl
inc
jge
inc
jle
outsb
adc
push
bound
jno
xorl
shl
loope
icebp
ret
adc
and
xor
inc
jb
bound
jno
xorl
shl
loope
icebp
ret
mov
jecxz
icebp
in
mov
sarl
std
fadd
add
pop
cmp
inc
shrb
scas
je
mov
rcll
mov
mov
mov
cmc
mov
test
cmp
bound
mov
addw
repz
sysret
inc
push
call
xchg
add
add
pop
jne
add
aam
cmpsb
or
push
mov
sbb
xorl
mov
aaa
inc
adc
lcall
andl
jmp
or
xchg
bound
lods
xor
dec
xor
mov
push
in
icebp
decl
and
add
cmp
sbbl
and
in
dec
or
mov
outsb
adc
cmp
cltd
test
and
repnz
mov
or
cmp
test
xchg
mov
jae
add
stos
in
outsl
fstps
and
fsubrp
lret
adc
pop
out
push
adc
repz
fadd
test
and
popf
arpl
lret
cltd
jns
in
and
bound
add
dec
imul
sbb
or
mov
pop
inc
xor
xchg
ja
cmp
adc
add
loope
push
dec
jne
aas
cmp
adc
mov
je
dec
or
in
mov
shrl
rcll
sub
out
cmp
xchg
push
lods
mov
or
dec
les
jb
movsb
fnsave
shll
jb
pop
out
insb
mov
fs
clc
add
iret
mull
movsl
js
shl
aam
outsl
das
pop
mov
mov
xlat
mov
sub
ret
jmp
xor
and
push
jne
xchg
push
xor
or
enter
mov
mov
ja
sub
cltd
sub
mov
negb
xor
and
or
jb
mov
dec
inc
stos
cmpsb
add
mov
filds
push
add
jo
sbb
lock
jg
jge
mov
fdivr
jmp
add
fidivl
pop
cmp
stos
jle
sub
mov
jle
cmp
stos
cmpsb
lret
dec
insl
lahf
mov
sbb
loopne
xor
pop
pushaw
aad
inc
popa
movsb
repz
cmp
addr16
push
and
stos
outsb
cmp
adc
out
push
lock
enter
pop
hlt
xchg
xchg
lcall
test
xchg
mov
loopne
pcmpgtw
push
outsl
jns,pt
scas
std
sbb
add
mov
mov
mov
mov
call
aad
or
push
jae
sbb
add
adc
out
pop
imul
push
les
or
into
sub
add
jecxz
or
mov
in
jb
push
imul
movsl
add
js
dec
sbb
add
leave
enter
jge
push
in
inc
mov
movsb
test
mov
push
aam
xor
mov
shld
mov
push
jnp
dec
mov
jno
inc
das
push
gs
scas
or
sbb
les
sub
push
pop
daa
xchg
test
push
cwtl
fisubrs
push
cmc
pop
lret
in
std
fnstsw
clc
fnsave
and
aaa
and
mov
mov
stos
aas
sbb
sti
push
lds
cmp
or
pushf
ret
mov
aaa
jnp
mov
or
outsl
icebp
mov
aaa
xchg
add
cmp
sub
lret
out
mov
insb
jb
enter
lret
adc
jae
mov
sub
add
inc
pop
loopne
mov
jb
push
sbb
pop
insb
ret
loop
arpl
insb
add
shrb
fstpt
cmp
push
fstl
lds
pop
inc
loop
pop
fwait
test
sub
fdivrs
add
lods
test
pop
or
mov
mov
cld
adc
iret
mov
imul
cltd
lock
dec
pusha
and
sub
sbb
and
inc
push
dec
add
fs
cwtl
and
push
pushf
jp
lret
in
mov
mov
daa
xchg
ss
adc
cmpsl
ret
lods
daa
mov
pop
inc
ret
mov
mull
fisttps
add
mov
shrl
cmp
dec
dec
dec
es
jp
sbb
adc
and
mov
iret
inc
add
cs
and
pop
sub
jl
fidivrl
incl
aam
jbe
and
mov
ficoms
jge
js
dec
fdiv
add
jg
pop
inc
pop
mov
loope
daa
pop
or
push
adc
lea
nop
mov
arpl
int3
ror
int
scas
mov
sbb
and
xchg
or
pop
lods
int
xchg
mov
xor
out
imul
adc
adc
cmc
cwtl
xlat
ja
xlat
mov
add
jecxz
xchg
mov
push
pop
das
faddp
ret
outsb
aaa
cmpsb
sahf
ja
test
jle
in
inc
push
clc
popa
aas
sbb
cmp
std
dec
add
mov
divb
sbb
xor
or
jg
inc
iret
mov
xchg
test
xlat
into
insl
sbb
mov
push
xchg
mov
fcmovnu
push
sbb
pop
lcall
xor
or
or
xchg
sbb
lds
addr16
xor
lcall
daa
fwait
mov
jl
fimuls
mov
dec
adc
jae
cmp
popa
shlb
adc
dec
aad
inc
sub
mov
test
daa
lds
addr16
cmpsb
stos
orb
fisubrl
push
cltd
mov
push
loopne
xor
fnstcw
xor
in
outsl
xchg
jl
add
push
mov
and
inc
and
scas
loope
rclb
xchg
mov
in
mov
pop
test
lcall
aad
fistpll
jns
mov
sub
dec
mov
xchg
mov
fstp
rcrl
jb
push
adc
imul
jmp
push
inc
jae
fistpl
dec
aad
stos
in
movsl
negl
shll
push
push
inc
jl
adc
ret
into
mov
sahf
pop
dec
cmp
jl
sub
sbb
ret
dec
xor
sbb
push
pop
jbe
push
sub
mov
dec
call
or
and
push
cmp
dec
lods
outsl
mov
mov
mov
adc
in
push
or
and
xchg
dec
hlt
add
in
mov
lea
dec
es
in
cmp
shll
push
mov
int3
add
dec
add
nop
pop
cmpsb
push
mov
inc
scas
sub
or
pop
orl
imul
outsl
mov
mov
add
adc
fildll
add
dec
mov
lahf
push
cmc
lods
xor
cwtl
sbb
pop
xor
jp
lods
mov
cltd
cmp
repz
mov
ss
push
les
std
cwtl
jnp
and
fdivrs
cld
nop
ret
push
imul
mov
ljmp
mov
test
repz
or
cld
mov
arpl
cmc
pop
fisubs
es
out
jp
in
xchg
insl
cmp
lret
cmp
jecxz
mov
lcall
daa
add
jae
jnp
ja
stos
or
repnz
mov
push
xchg
incb
loope
xor
dec
jle
outsb
in
aaa
enter
aad
xor
adc
dec
dec
pop
jl
pop
jmp
dec
mov
jo
push
addr16
imul
pusha
dec
cmc
adc
xchg
and
jmp
mov
add
jl
sbb
pop
mov
or
aad
inc
je
aad
or
pusha
in
cmp
and
xlat
mov
in
lock
gs
push
mov
fnstenv
sti
lock
xchg
add
sub
popf
pop
addr16
fistps
movsb
fsubp
stc
and
xchg
dec
pop
mov
bound
insb
lods
cld
aad
aaa
movsb
negb
in
add
ss
loop
jne
bound
add
cltd
movsb
sahf
mov
jae
jp
std
pop
hlt
pop
and
xchg
enter
push
lea
mov
dec
call
dec
xchg
add
or
dec
mov
clc
outsl
clc
sub
stos
test
enter
xor
stos
push
cld
outsb
arpl
adc
inc
popa
inc
jle
aam
mov
push
ret
fsubr
scas
cmp
xor
lds
stos
mov
xlat
and
push
jg
test
or
testl
aaa
adc
ja
or
testb
outsb
enter
xchg
xchg
cmp
fwait
inc
pop
cmp
fs
mov
add
and
xchg
in
cli
adc
insb
xor
push
mov
div
xor
loopne
dec
test
cmpsb
out
jmp
les
outsb
add
icebp
jle
lret
inc
cmp
insl
pop
ds
xchg
mov
xor
push
pop
gs
xchg
xchg
dec
lock
ljmp
movsb
fistpl
or
sbb
xchg
sub
xchg
jmp
jns
icebp
jecxz
popf
xlat
sbbb
pop
jle
and
ret
repz
push
cmc
xor
sbb
add
dec
rsm
mov
jae
fcmovb
lods
pop
xchg
sub
push
mov
inc
cs
insb
out
mov
xchg
push
lds
pop
or
repnz
mov
jnp
pop
dec
test
rcrl
inc
sahf
int
fsubs
or
test
or
mov
push
loopne
mov
in
xor
mov
mov
jns
push
pop
push
loop
mov
dec
add
xchg
xor
jbe
jns
jg
jecxz
nop
push
inc
inc
frstor
or
and
pop
enter
ljmp
adc
sbb
mov
scas
or
imul
mov
or
int3
xchg
cmp
into
mov
pushf
cmpsb
mov
pop
xchg
and
into
stos
pop
mov
in
outsl
adc
mov
push
pop
lret
sarl
out
pusha
mov
lret
or
shlb
icebp
cmp
cwtl
pop
ja
jl
shrl
jg
enter
xlat
iret
or
adcl
adc
and
xor
daa
push
and
lret
js
mov
outsb
jmp
xor
fisubrs
mov
stc
jp
gs
ret
adc
cmp
test
jmp
movsl
adc
loope
xchg
jns
add
jl
arpl
jne
mov
push
test
xor
cmp
aam
hlt
aas
outsl
andb
xchg
aam
lods
cs
stos
pop
xchg
sbb
jnp
pop
or
jge
daa
call
ret
loope
add
jp
aaa
rdpmc
daa
repz
cltd
xchg
xor
mov
data16
cmp
stos
add
lea
add
inc
pop
test
mov
xor
push
ret
loopne
mov
popa
imul
inc
icebp
xchg
jno
out
rcrl
mov
and
mov
pushf
xor
jp
pop
into
fmuls
mov
ljmp
jg
dec
push
out
lock
das
push
mov
xor
pop
mov
add
test
shrl
movsb
inc
out
clc
fadds
outsb
jg
mov
stos
out
mov
notl
or
dec
mov
inc
into
pop
jg
dec
xlat
jl
sbb
and
outsl
dec
cmp
mov
inc
sbb
cmp
imul
push
mov
xchg
adc
mov
stos
scas
pop
pop
aam
add
add
mov
jmp
aam
ret
ret
adc
adc
or
addb
or
add
jg
mov
dec
jnp
imul
jne
pop
sbb
sbb
xchg
push
adc
outsb
jmp
cltd
cwtl
or
je
dec
jns
mov
mov
stos
push
aaa
cmp
mov
dec
aas
jecxz
jb
inc
inc
fimuls
out
hlt
xchg
ret
add
call
mov
shlb
fmull
push
cmc
pusha
nop
adc
popf
xchg
mov
decb
shrl
gs
nopl
sub
jge
xor
pop
in
aaa
pop
outsb
icebp
mov
daa
pop
inc
pop
cwtl
das
sub
outsl
cltd
lods
cmc
xchg
push
sbb
fbld
repnz
inc
insl
vmread
add
lret
xor
hlt
lock
es
sahf
mov
ljmp
xchg
mov
mov
dec
add
jecxz
mov
xchg
or
popf
in
push
mov
in
imul
bound
stos
shrb
and
xchg
sbb
push
fnsave
mov
out
jne
cmc
arpl
or
adc
fsubrl
mov
icebp
dec
xor
enter
fs
fmul
cmpsb
add
ljmp
and
call
in
or
mov
gs
ljmp
inc
xor
into
insb
mov
pop
pop
or
in
dec
jmp
rolb
add
jg
mov
iret
xchg
in
lea
repnz
sbb
popf
fwait
sbb
mov
and
ret
jno
mov
mov
sub
outsb
and
inc
push
lock
jb
inc
shlb
push
aad
cmp
jnp
enter
inc
pop
sbb
pop
xor
pop
push
lret
repz
icebp
adc
fs
lock
pop
popf
push
jb
ss
out
cltd
or
shr
js
mov
xor
imul
adc
fcmovne
cmpsl
dec
in
jle
jmp
and
pop
clc
xchg
outsb
xor
movsl
scas
push
pop
adc
adc
into
stos
mov
xor
pop
ret
dec
add
fidivl
and
lahf
scas
sub
fsubrl
mov
mov
in
xchg
xchg
mov
dec
int
out
jg
leave
xchg
lahf
xchg
mov
sbb
jne
mov
mov
ret
push
negl
xchg
insb
add
dec
xchg
pusha
add
test
add
jecxz
inc
sahf
outsb
cmp
cld
shll
xchg
sub
repnz
xchg
sti
cmpsb
jl
test
xor
je
pushf
jp
cmpsl
insl
sarl
ret
and
mov
mov
rol
adc
das
and
insl
cltd
lret
ja
jmp
dec
push
test
lea
xor
out
pop
xchg
push
loopne
sub
fnstcw
daa
fidivrl
ss
xchg
mov
aas
dec
pop
inc
mov
dec
pop
xor
insb
dec
pusha
cmp
mov
push
lods
mov
rcrb
mov
frstor
cmpsb
sbb
mov
inc
aad
lahf
sub
mov
mov
arpl
aad
aam
or
je
test
inc
mov
hlt
mov
sahf
mov
push
lcall
jne
test
push
sbb
mov
lcall
sbb
in
push
int3
xor
mov
sub
mov
fistps
fcompl
push
xor
pop
test
ret
leave
cmpb
dec
aam
jmp
mov
arpl
xlat
fscale
add
mov
ljmp
jg
adc
add
std
and
pushf
sbb
lods
mov
and
ret
ret
sbb
jae
cwtl
out
mov
pushf
mov
or
or
dec
aam
out
and
mov
mov
ljmp
mov
push
and
sti
adc
inc
mov
ds
dec
rcll
mov
add
jp
sarl
fbld
mov
cmp
jl
push
pop
jnp
jl
cmpsb
cmp
adc
mov
jne
and
jmp
aas
hlt
sub
dec
je
loope
lods
inc
sub
mov
jp
out
mov
jb
fwait
hlt
call
sbb
jmp
ss
and
aaa
mov
inc
lods
dec
mov
sub
dec
popf
jmp
movsl
xchg
xchg
dec
xchg
cmpsb
pop
sbb
lret
imul
test
push
jl
daa
andl
data16
push
mov
dec
fwait
mov
pop
ljmp
push
mov
sbb
ljmp
pop
pop
mov
loop
and
fildl
cmp
cmp
sub
pop
jp
movsb
lret
enter
jns
fbstp
push
movsb
mov
nop
fistps
push
or
divb
and
mov
xor
sub
fiadds
pop
inc
clc
enter
addb
push
push
and
es
fstpl
adc
xchg
in
mov
aad
mov
imulb
sbb
jno
fisttps
orb
cli
mov
fistl
dec
sub
lock
orl
push
pushf
divb
jnp
call
dec
ret
jne
mov
shll
mov
out
push
icebp
push
clc
sub
inc
sub
sbb
stos
and
and
xchg
sbb
xor
add
pop
popa
mov
xchg
jp
mov
jle
lcall
mov
push
stos
fisubrl
and
mov
cs
jmp
mov
stc
push
jmp
in
and
or
es
mov
add
cli
aaa
ret
fucom
sbb
int3
mov
rclb
push
mov
pop
add
pop
fsts
and
out
xchg
fs
sbb
inc
xchg
comiss
dec
hlt
popa
pop
xor
or
or
cmp
lret
movsb
jb
dec
insb
add
sbb
sub
pop
addr16
insb
mov
mov
mov
dec
mov
push
cmpb
adc
cvtpi2ps
mov
sub
xor
mov
mov
mov
xor
js
xchg
xor
inc
inc
adc
sub
pop
lea
das
loopne
xchg
xchg
pop
adc
adc
jne
in
pop
movsb
icebp
gs
out
inc
fistpll
shlb
loopne
addr16
out
outsb
sub
ret
pop
cltd
mov
inc
xor
gs
fiadds
push
adc
les
out
popf
sub
les
jle
jne
ficomps
inc
sub
ja
mov
jnp
dec
jmp
mov
mov
jmp
push
inc
lret
push
cmp
hlt
in
test
inc
cli
sbb
mov
stos
sbb
jmp
lods
cmpsl
aam
push
push
jb
mov
jbe
faddl
fmulp
bound
jl
test
adc
in
insl
inc
mov
jecxz
lret
cmp
aaa
insb
push
push
sbb
or
addl
pop
xchg
push
mov
and
cmp
scas
hlt
cmc
xchg
movsb
inc
aad
sub
cmp
or
mov
lock
stc
pusha
jmp
dec
cmc
pop
sbb
xchg
pop
imulb
out
cs
test
pop
outsl
icebp
bound
lret
aam
cmp
mov
jb
popf
outsb
stos
inc
dec
pop
js
cmp
add
jbe
pop
cs
scas
or
push
mov
jno
enter
lcall
push
cmp
lret
cmpsb
mov
pop
mov
mov
adc
dec
pop
push
xchg
aam
imul
sub
nop
scas
jl
mov
or
rolb
lock
and
sbbl
mov
sub
js
pop
imul
dec
subb
push
shlb
cwtl
cmp
popf
iret
ss
in
enter
lods
stc
and
sti
sarl
adc
push
dec
fistps
mov
rorl
sbb
cli
and
jne
in
out
ret
and
xlat
jge
scas
pop
popa
fwait
pushf
fcmove
xor
and
mov
and
incl
fs
daa
mov
push
mov
pop
insl
fildll
jg
cli
cmp
xor
jo
rol
add
mov
inc
or
push
es
jge
sub
cwtl
int
sub
fs
sti
cld
sbb
outsb
popa
dec
fnstsw
mov
xchg
inc
mov
jb
stc
cmp
testb
insb
lret
xor
es
ret
adc
movsl
dec
xor
int3
xlat
imul
das
ds
lret
pop
xchg
cmp
iret
or
int3
scas
and
aas
jmp
mov
andps
mov
ficoml
outsb
fldcw
jmp
aaa
cmc
mov
inc
inc
lret
push
clc
push
std
sti
dec
mov
aam
sarl
mov
addr16
jb
inc
pop
das
out
adc
leave
mov
mov
sbb
jmp
ds
xor
jo
mov
adc
andl
cmpsb
push
jno
xchg
test
imul
xchg
les
add
push
arpl
and
iret
clc
outsl
stos
hlt
mov
add
mov
sub
gs
cmpsl
rcl
jecxz
pushf
lea
stos
jmp
inc
jp
outsl
add
pop
dec
push
mov
and
repz
mov
and
lds
lds
sub
shl
push
dec
jl
ja
popa
cmp
arpl
mov
fwait
ja
aam
add
aas
pop
or
mov
cmpsl
negb
fimull
lock
and
xor
inc
jb
bound
jno
xorl
shl
loope
icebp
ret
adc
and
xor
inc
jb
bound
jno
xorl
shl
loope
icebp
ret
and
or
push
shll
or
mov
xorl
shl
fistpl
es
notb
inc
inc
jb
bound
icebp
addb
mov
mov
pop
lcall
cltd
dec
add
xchg
add
mov
pop
add
add
add
add
add
fiaddl
add
add
mov
add
pop
add
add
add
add
lods
add
add
add
add
add
inc
add
jns
nop
add
add
ret
add
add
adc
dec
add
add
add
adc
rolb
aas
add
add
add
xor
add
push
add
add
add
add
adc
dec
add
add
add
dec
add
add
add
add
pop
add
add
add
add
and
xor
add
sub
dec
add
add
mov
add
add
add
add
insb
add
and
pop
add
cmp
add
add
add
add
adc
pop
add
dec
add
add
fildl
push
push
add
add
add
add
add
add
add
incb
cmp
add
add
add
add
add
add
add
add
add
movsl
add
and
lock
add
add
add
add
add
adc
add
add
add
add
cmp
add
add
pop
add
add
add
add
dec
add
add
add
xor
add
push
mov
adc
and
push
add
add
add
add
add
push
or
add
leave
add
add
add
add
add
add
add
add
mov
add
loope
pop
add
add
add
add
rolb
movsl
add
push
or
add
add
mov
add
add
add
sub
jl
js
movsl
add
add
add
pop
test
add
or
insb
add
dec
add
add
add
add
dec
add
add
xor
jmp
push
push
int3
add
add
add
add
add
add
add
add
add
dec
add
add
add
imul
xchg
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
sub
push
or
or
add
add
pop
add
add
add
add
aaa
add
add
add
bound
nop
add
outsb
add
add
jmp
add
lods
add
arpl
int
outsb
add
lahf
add
add
stc
add
sti
add
add
mov
add
dec
add
add
add
add
add
pop
add
cmp
add
add
add
add
add
xor
add
mov
and
add
add
pop
add
add
add
add
add
add
lret
add
push
lea
das
add
add
or
pop
add
add
add
add
dec
add
add
add
add
add
add
add
add
lods
add
add
pop
add
lret
add
push
push
add
add
add
add
add
add
aaa
ja
in
cmp
mov
int3
pop
pop
stc
mov
xor
and
mov
aad
and
sbbl
cli
ret
or
icebp
sbb
cmc
je
push
pop
push
sub
hlt
in
add
mov
jae
fdivs
in
fisttpl
dec
sub
inc
adc
lods
jl
test
test
xor
roll
scas
out
push
lds
inc
cs
shrb
out
xor
inc
cmc
stc
scas
xor
inc
cld
out
aam
loopne
adc
sarb
adc
sbb
mov
xchg
outsb
adc
mov
clc
rclb
mov
sar
in
dec
xor
mov
cmpsl
mov
int3
add
xchg
dec
adc
xchg
sub
imul
mov
xchg
out
jno
dec
pop
inc
ret
sub
sbb
mov
mov
fs
pushf
jp
addr16
dec
shlb
mov
sub
cltd
movsl
push
sub
das
call
leave
outsl
cld
fsubl
dec
push
jb
jno
enter
push
inc
dec
xchg
shll
test
mov
adc
icebp
cltd
push
jmp
fisubrl
sub
jge
pusha
ds
sbb
fiaddl
and
arpl
jns
xlat
mov
add
data16
xchg
js
jb
sbb
bnd
jo
inc
add
fcoml
into
or
mov
movsb
and
adc
scas
outsl
scas
shll
cmp
add
or
mov
adc
stos
sbb
mov
xchg
insb
cmp
lods
pop
inc
fiadds
cs
gs
xchg
dec
rcll
cltd
and
mov
insb
jp
out
ret
das
ja
es
add
pop
sbb
xor
cvtpi2ps
inc
movsl
imul
test
mov
movsl
imul
mov
jbe
cltd
movsl
cmpsl
div
mov
xchg
sub
xchg
movsb
mov
loope
test
push
mov
pop
cmp
addr16
or
push
xor
daa
ret
aam
nop
bound
test
cld
adc
lock
dec
push
fsts
enter
jle
xor
lea
les
clc
clc
mov
dec
push
iret
jl
add
imul
add
cwtl
mov
add
cmp
cli
test
ss
inc
mov
fwait
dec
sub
sbb
xor
adc
xor
xor
xor
sbb
lock
cld
sub
mov
js
dec
xor
cmp
cmp
popf
pop
dec
sbb
sub
iret
icebp
jmp
push
pop
sub
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
