call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
xor
and
adc
add
jne
inc
inc
cmp
inc
aad
les
xchg
cmc
xchg
movsb
les
je
fs
je
fs
and
les
test
movsb
les
pop
and
adc
add
je
fs
and
int
out
stos
icebp
pushf
ljmp
repz
js
push
je
adc
into
add
cmc
push
jecxz
push
aaa
aas
pop
jge
mov
xchg
insb
sub
xor
jle
mov
fs
mov
mov
push
movsb
in
pop
or
xchg
in
mov
stos
and
in
and
xlat
cmp
xchg
xchg
imul
pop
movsb
or
push
xor
jne
fs
pop
and
pop
rcll
imul
add
mov
leave
jmp
or
lcall
jns
aam
aam
add
insb
cmpsl
test
dec
mov
movsb
xor
stos
fwait
or
cmp
out
fisubrs
mov
mov
shl
xlat
mov
aam
cmp
adc
add
je
fs
cmp
movsb
in
xchg
std
test
movsb
cmpb
and
push
adc
xor
jns
and
aam
test
xchg
xor
and
cmpsb
leave
mov
sbb
js
add
xor
ja
xchg
shll
xchg
xchg
out
jb
mov
nop
xor
ja
jno
jl
inc
add
xor
and
aam
les
hlt
test
mov
movsb
les
and
adc
add
je
fs
and
aam
les
hlt
test
mov
movsb
les
or
jnp
ret
js
out
add
mov
sbb
stc
push
outsl
xchg
rorb
icebp
push
mov
sub
cmp
les
and
clc
jecxz
xor
enter
mov
cwtl
fidivrs
repnz
inc
mov
adc
jl
lcall
lret
in
sbb
pusha
js
out
push
cmpsl
fstpl
pop
adc
push
or
mov
cmpsl
jl
icebp
dec
mov
pop
jbe
loopne
and
out
jmp
pop
add
pop
add
cmc
adc
push
jae
sub
sbb
sub
push
inc
cltd
sbb
dec
jge
cwtl
and
push
jns
pop
outsl
jbe
addr16
roll
add
sub
out
jb
pop
ret
aam
ja
sti
pusha
data16
sub
jb
je
arpl
and
dec
mov
cwtl
daa
aam
xor
pop
adc
into
cmp
jnp
inc
scas
dec
fdivr
sti
sbb
clc
ror
orb
jl
cmpsb
negb
xchg
push
inc
push
not
rclb
rorl
loope
lods
push
icebp
jo
jne
cmp
dec
arpl
jne
sbb
mov
ljmp
jne
add
mov
scas
cmovs
sbb
sahf
scas
inc
and
push
daa
pushf
push
aad
loop
cs
out
cld
je
sbb
clc
and
aad
xchg
jecxz
push
and
cmp
mov
sbb
mov
and
cltd
inc
or
js
jle
or
arpl
fldcw
clc
xor
mov
mov
xchg
mov
fbld
xchg
jecxz
aad
and
lcall
jne
aad
and
or
scas
jnp
shrb
cld
add
pusha
lcall
aam
pushf
aam
icebp
mov
inc
inc
push
and
call
xchg
mov
int
movsl
push
decb
jbe
int
aam
adc
mov
mov
jo
adc
add
rolb
or
aaa
dec
mov
pop
es
in
add
and
std
movsl
lret
leave
stos
jl
mov
fld
xchg
lods
aas
outsb
add
jmp
mov
lods
fistps
xor
shrb
dec
ds
xor
aam
add
mov
push
data16
mov
fsubrl
and
dec
in
xor
adc
or
addr16
dec
or
xor
pop
in
fmull
ret
push
mov
add
adc
and
xchg
push
adc
mov
pop
mov
add
faddl
sbb
cli
pop
xor
add
mov
sbb
scas
push
jne
pop
das
jne
negb
sub
std
mov
fcoml
jne
aam
push
sub
arpl
or
or
mov
das
stos
movl
fucom
aas
inc
stos
sbb
dec
lea
or
lods
icebp
mov
mov
scas
mov
pop
sti
cmp
add
jno
popf
dec
xchg
lret
lds
call
les
js
test
aaa
or
mov
mov
popa
adc
push
and
mov
scas
test
adc
or
cmc
in
mov
les
adc
fdivrl
insl
call
push
mov
push
sbb
nop
aaa
mov
ret
xor
stc
mov
int3
jl
scas
lret
or
xchg
fs
push
shll
movl
xor
lea
push
ret
stos
lods
popa
iret
add
inc
js
ffree
fistpll
fwait
or
mov
mov
and
sub
xchg
jge,pt
scas
nop
aad
cli
cmp
out
push
addr16
popf
outsb
push
inc
push
xchg
and
lahf
jg
testb
mov
ljmp
inc
pop
or
fbld
jg
cmp
lret
push
sbb
in
dec
push
sbb
xor
xor
cld
pop
xchg
cmp
icebp
add
clc
cmp
aaa
xor
xchg
mov
pop
mov
inc
sahf
pop
insb
fistl
ret
pop
mov
pop
mov
pusha
loop
ljmp
adc
dec
adc
mov
pop
arpl
adc
fdivs
js
mov
bnd
mov
inc
jmp
lahf
jmp
mov
dec
sub
pop
sbb
jne
sub
stos
mov
data16
or
jg
fsubrp
xor
sarb
cmpsb
xchg
xor
divb
xlat
loop
shrl
mov
jmp
push
sub
xlat
stc
fwait
sbb
aam
cmp
es
mov
inc
test
push
xchg
dec
pop
stos
mov
cmpb
enter
stos
das
arpl
test
sub
jg
mov
adc
aam
adc
or
sbb
fs
in
or
mov
divl
int
repz
or
shlb
mov
sub
in
sub
push
outsl
adc
sbb
push
cli
imul
lret
lods
outsb
add
repz
xor
add
je
aas
cld
or
dec
pop
mov
icebp
sarl
jmp
leave
mov
in
jne
jno
int3
out
push
sub
lcall
fwait
bound
arpl
adc
sarl
push
adc
mov
sub
add
stc
adc
fwait
out
in
xlat
jae
arpl
nop
aaa
popf
jecxz
aaa
or
std
out
add
add
mov
pop
sbb
fmuls
mov
bound
aas
pop
jecxz
outsb
out
push
dec
in
divb
js
idiv
shrb
sub
popa
push
in
or
inc
cmc
mov
js
std
pop
adc
xor
cwtl
sahf
push
testb
lahf
cmc
cmp
int
push
ljmp
and
or
int
jmp
cmp
lret
daa
sub
rorb
es
push
add
inc
ja
int3
add
inc
add
sub
mov
push
cmpsb
in
add
stos
popf
dec
lea
fcomip
adc
test
push
movb
sbb
mov
orl
inc
or
add
jo
frstor
data16
cmpsb
adc
xor
out
xchg
mov
xor
out
arpl
filds
imull
cmp
int
or
push
cmpps
shll
cmpsb
cld
pusha
shlb
inc
lock
jno
sbb
push
push
jl
test
iret
dec
push
xchg
int3
xor
cmpl
dec
jecxz
lret
mov
lahf
movsb
mov
sbb
xchg
jbe
mov
pop
adc
rcrl
cmp
sub
inc
out
push
mov
lock
leave
sbbl
les
add
adc
ljmp
loopne
mov
adc
xchg
neg
sbb
jle
push
pop
pop
pop
mov
les
and
mov
push
lods
stc
ljmp
lret
pusha
out
in
cmp
mov
or
lret
xchg
insl
push
iret
es
xor
loop
adc
rol
aad
fisubrs
xchg
nop
inc
push
faddl
test
mov
xchg
pop
cli
in
jl
jmp
testb
mov
add
imul
xchg
mov
icebp
shr
lret
add
cs
add
xor
pop
loope
adc
and
into
mov
dec
shr
inc
dec
adc
lret
clc
cmp
fwait
push
mov
shl
push
xor
ror
or
rcrl
ret
adc
cmpps
cltd
fwait
jne
imul
xchg
mov
into
or
push
fisttpll
inc
or
sarl
sbb
pop
push
mov
add
shl
popf
and
setge
data16
push
int3
sub
dec
cltd
std
adc
in
loopne
test
repz
inc
scas
or
inc
iret
mov
and
fstpl
lret
mov
roll
sbb
test
and
hlt
jmp
cmpb
stos
inc
mov
pop
jle
lret
shl
mov
sti
jno
out
pushaw
lcall
ret
addr16
sub
jo
push
aad
loopne
movsb
in
xor
daa
cld
cmpsl
mov
jnp
sbb
mov
mov
loope
pop
jmp
ficoml
dec
bound
cmp
sub
stos
loopne
xchg
fcmovnbe
test
lret
inc
pushf
push
xchg
xsaves
int3
sub
sti
frstor
mov
mov
popl
push
loopne
pop
fildll
fstl
push
icebp
cmp
call
cmp
dec
outsb
push
leave
mov
imul
out
rorb
mov
std
push
fisttps
and
enter
cwtl
imul
adcl
xlat
or
in
mov
jne
imul
lahf
imul
sbb
cmc
cmc
mov
xor
neg
les
xchg
push
mov
stos
pop
sub
aas
sub
orl
inc
or
push
push
mov
arpl
cmp
push
jae
inc
sub
mov
in
push
sbb
mov
movb
clc
pusha
and
mov
loope
hlt
ret
fadd
mov
test
bound
fcompl
loopne
repz
sub
daa
and
ror
ja
lcall
fwait
mov
int3
je
mov
and
and
nop
mov
daa
cmp
mov
sbb
sbb
dec
test
add
jl
and
fistpl
leave
pop
insb
bound
jbe
lret
push
cmp
in
push
shrb
xor
push
dec
shrl
push
loopne
xchg
xchg
push
cmp
mov
inc
cmp
mov
mov
push
xchg
inc
jnp
js
mov
sub
fsubrl
out
insb
sarb
mov
add
inc
dec
lret
mov
insb
push
jb
add
push
negb
shll
lods
mov
rol
shl
pop
mov
fisttpll
test
js
ds
jle
fidivrl
pop
lods
pop
test
push
cmpb
cwtl
mov
xchg
and
stos
cld
mov
and
mov
push
sbbl
lods
sub
inc
jmp
jl
xor
xor
xor
sub
jae
enter
stos
jne
sub
lret
das
cltd
sub
mov
ds
jmp
cmpsl
popf
xor
mov
mov
bound
lret
jge
stc
fcomps
push
push
adc
adc
inc
mov
inc
push
pop
sub
push
stc
jae
aam
mov
scas
sar
xor
mov
out
ljmp
mov
mov
or
jp
adc
mov
iret
and
in
scas
call
dec
inc
or
sbb
xchg
loope
add
mov
std
stos
xor
insb
icebp
or
loope
push
cmp
repz
sub
in
cmc
loopne,pt
cmp
jge
dec
das
sbb
std
cmp
fwait
gs
andb
das
xchg
jmp
fwait
sbb
xchg
mov
xchg
int3
xorb
dec
dec
xor
mov
jo
jge
mov
xchg
mov
outsb
test
imul
popf
xchg
shlb
jns
or
ficoms
adc
test
or
pop
imul
add
in
aaa
or
daa
je
fdivrl
rcrb
pop
es
sub
jl
rcrl
mov
inc
and
repnz
mov
cmp
xor
imul
lea
stos
test
push
sahf
aam
gs
mov
push
into
push
push
lcall
and
in
aam
lea
jle
loop
xchg
popf
adc
cmp
jbe
or
cmp
sbb
pop
adc
mov
mov
je
and
into
sti
jle
punpcklbw
push
jle
cwtl
xchg
jl
mov
aad
xlat
push
lret
jns
mov
insb
dec
mov
sub
inc
xchg
push
faddl
arpl
repnz
push
inc
push
mov
jbe
add
mov
scas
in
addr16
jnp
or
rcrb
add
or
insl
aad
xchg
dec
pop
div
lahf
imull
xor
push
lods
dec
pop
loop
cmp
test
out
mov
xchg
cmpsb
mov
aam
and
xchg
test
adc
leave
faddp
jb
es
scas
fdivr
int3
fst
and
jne
pop
cmpb
repz
add
ja
bound
sbb
mov
stos
add
stos
subl
pop
dec
sbb
js
out
cmovno
push
mov
mov
fs
pop
mov
sbb
xor
nop
pop
outsl
sub
out
lcall
fcmove
or
cmp
add
mov
int
pop
scas
mov
add
call
xchg
mov
aas
or
ficompl
cmc
orl
sbb
xor
fsub
xchg
stos
add
jno
inc
xchg
negb
push
jo
jmp
scas
icebp
repz
xor
scas
ret
lods
es
mov
movsb
pop
cmc
jo
mov
add
int
pop
repnz
push
imul
jge
movsb
mov
pop
sbb
xorb
mov
aas
xor
xchg
adc
test
mov
and
mov
push
jl,pn
push
es
fsubrl
cmpsl
jno
test
adc
sbb
out
push
xchg
aam
inc
mov
push
jl
dec
sbbb
call
stos
repz
cmp
mov
inc
xor
inc
mov
fldt
mov
roll
fimuls
sub
inc
in
sti
inc
and
xchg
cwtl
inc
in
jmp
or
fpatan
bound
or
add
icebp
dec
pop
add
jb
pop
push
mov
loop
mov
cli
add
adc
call
push
div
xchg
mov
xchg
mov
out
sub
imul
xchg
movsl
scas
lods
jecxz
iret
outsb
mov
enter
or
sub
aas
loop
repz
sbbl
pop
dec
cmp
data16
dec
ss
adc
inc
adc
adc
fdivrs
push
xor
in
inc
in
dec
dec
inc
orb
adc
inc
xchg
ja
push
pusha
inc
mov
xor
cmp
lretw
pushf
and
mov
or
insl
sbb
jp
shl
mov
dec
scas
mov
pop
lods
mov
xor
mov
xchg
in
popa
cltd
movsb
mov
jb
stos
aam
sub
dec
sbb
push
mov
outsb
hlt
xchg
lcall
movups
sti
mov
add
repz
das
adc
jecxz
cmp
mov
xchg
pop
pop
mov
stos
sub
ljmp
lods
xchg
push
into
pop
movsl
mov
dec
stos
and
mov
jae
push
mov
fsubrp
test
mov
push
pop
adc
out
push
aas
fldt
enter
jne
mov
lock
rolb
daa
cmp
mov
lret
daa
add
in
lcall
in
adc
and
mov
cmp
in
mov
ret
ret
push
mov
inc
test
out
jle
jno
cmp
xor
or
sbb
mov
inc
out
sbb
dec
fwait
add
xlat
bnd
pop
int3
xor
popa
dec
sti
aas
nop
lods
ret
jo
adc
adc
mov
xchg
loope
mov
test
outsl
sub
adc
pop
xor
popf
cmp
dec
xor
leave
and
sub
mov
mov
test
push
fsubrl
inc
sub
outsl
stc
lahf
jnp
jl
pop
xchg
aad
loope
stos
or
pop
mov
stos
xor
rorl
cld
les
or
pop
movsb
cmpb
icebp
cli
sbb
mov
dec
pop
xchg
jo
push
lret
lods
and
push
leave
dec
pusha
jo
adcl
stc
ja
adc
fs
int
js
je
sahf
loopne
jnp
add
push
rolb
sub
js
cltd
dec
sahf
out
and
stc
test
sub
insb
mov
fistpl
lret
orl
pop
cmp
sbb
lret
outsl
int3
and
loopne
sahf
sub
and
cld
into
mov
pusha
idiv
stc
fildl
aad
push
xor
cmc
cltd
or
lret
out
mov
mov
push
jbe
push
mov
push
mov
inc
mov
std
pop
lds
hlt
fcmovnb
shrl
nop
mov
push
mov
aaa
ret
push
cmp
adc
push
test
inc
int3
sahf
sub
daa
pop
into
inc
stos
icebp
incl
mov
in
mov
fwait
cmp
aaa
and
mov
outsb
int
dec
mov
sbb
out
fisttpll
xchg
push
and
jge
add
pop
in
pop
or
push
in
out
out
outsl
xor
and
out
mov
lahf
xchg
or
push
mov
sub
jbe
jbe
hlt
ds
imul
push
lcall
dec
mov
dec
mov
xor
jo
out
mov
clc
fwait
shll
test
out
lahf
push
sahf
and
mov
iret
and
js
dec
cmpsb
stos
das
arpl
repnz
or
rcl
aam
sbb
cmpl
ret
sqrtps
daa
and
sub
mov
addr16
lahf
fiadds
out
or
inc
push
mov
cmpsb
fstl
lret
rcll
push
aas
mov
xchg
and
lods
les
or
fldcw
inc
push
or
int
dec
or
jbe,pt
clc
lock
ret
dec
popa
aaa
test
lods
sub
fcmovne
pop
mov
cmp
mov
push
inc
pusha
sub
pop
inc
maskmovq
divl
lret
pop
aad
mov
push
es
ret
xor
xorl
into
mov
or
insb
inc
cmpl
jp
inc
ja
dec
lds
adc
into
mov
in
cmp
and
lods
mov
ljmp
fnstenv
loope
mov
movsl
loopne
data16
cmp
icebp
lcall
mov
movsb
xchg
push
inc
xor
xor
cmp
fnsave
hlt
inc
lret
push
lahf
insb
adc
jecxz
mov
mov
mov
les
outsb
stos
mov
mov
mov
pop
ja
fnstenv
xor
rolb
push
pop
outsb
mov
push
fadds
dec
push
negb
jno
ss
sbb
inc
mov
sbb
mov
popl
lret
xor
dec
or
mov
int
inc
out
adc
je
lods
and
pusha
mov
dec
mov
fstl
xor
movsl
inc
daa
adc
mov
lret
test
cs
xlat
icebp
cmpsb
pop
nop
dec
lret
mov
outsl
jle
push
add
gs
in
jbe
std
dec
pop
xchg
ret
mov
or
adc
outsb
add
fildll
inc
inc
jnp
rcrl
and
and
inc
cmpsb
sarl
mov
dec
mov
test
testl
fimuls
aam
mov
xor
cmp
insl
repnz
leave
pop
or
daa
negl
nop
jmp
popf
inc
jo
fisubrl
fildll
clc
xchg
mov
in
add
out
pop
and
out
jecxz
jmp
loop
std
jecxz
jmp
test
xor
cli
jp
aas
xor
dec
push
xchg
jnp
add
cmc
adc
std
pop
sbb
inc
iret
or
inc
pop
shlb
mov
and
adc
sub
lret
cmp
push
divb
sub
aas
pop
std
push
push
ss
test
out
je
or
andb
sbb
divl
jge
mov
movsb
imul
clc
dec
cmp
iret
movsb
dec
or
adc
mov
fdivrp
out
outsl
mov
decl
cli
dec
xchg
inc
jb
and
push
and
dec
cmp
cmpsl
mov
test
mov
lret
add
mov
cmp
add
in
stc
mov
jbe
mov
mov
js
dec
jge
push
jne
das
pop
fmull
pop
or
mov
rolb
dec
xchg
and
fbld
test
ljmp
pop
movsb
in
inc
leave
sbb
pop
lods
xchg
add
xchg
or
cmp
rclb
mov
xchg
sbb
aaa
cs
lahf
test
icebp
out
cmp
push
adc
shll
dec
adc
addb
pop
pop
pop
dec
in
inc
sub
cli
pop
test
xor
lcall
scas
add
in
sub
mov
clc
fs
orb
mov
dec
fnsave
xor
xor
ss
xchg
aaa
adc
adc
add
je
fs
and
aam
les
hlt
test
mov
movsb
les
and
adc
add
je
fs
and
aam
les
hlt
test
mov
movsb
les
and
adc
add
je
fs
and
aam
les
hlt
test
mov
cmpsb
les
and
adc
add
je
fs
movsb
test
mov
push
pop
xchg
in
jecxz
or
dec
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
aaa
sbb
add
je
push
fdivl
xchg
clc
bound
push
test
and
xor
adc
adc
and
js
add
je
fs
addb
movsb
jb
bound
aam
les
mov
repnz
fmul
push
add
dec
lcall
cld
aaa
loope
lahf
arpl
adc
push
pop
jo
imul
xchg
stc
lret
inc
or
leave
in
sar
rorb
fdivs
pop
sub
dec
leave
sbb
rcrb
or
cmp
sbb
adc
pop
divb
loop
movsb
mov
incb
sbb
clc
adc
mov
repnz
ret
mov
inc
insl
mov
movsb
lea
mov
in
aad
les
fisubrl
adc
in
dec
iret
xchg
xchg
out
daa
jb
pop
rcll
in
sub
enter
mov
sbb
mov
mov
inc
jns
mov
aam
movl
adc
add
nop
mov
loop
jb
ds
pop
mov
mov
add
jbe
xchg
pusha
ret
jl
sbb
or
and
inc
pushl
loope
xchg
popa
mov
lcall
sbb
out
rcrl
notb
xchg
ss
adc
outsb
test
mov
push
cmpsl
daa
into
fs
addb
movsb
jb
inc
test
and
xor
add
adc
and
adc
add
je
fs
addb
movsb
jb
inc
test
and
xor
add
adc
xorb
mov
cmp
out
push
sbb
enter
pop
add
or
pop
pusha
xchg
pop
int
in
in
jns
div
lods
ret
push
pop
jb
cld
sbb
xchg
jns
addl
dec
mov
shll
pop
cmp
push
ret
push
mov
test
mov
jecxz
in
imul
lahf
xchg
lock
movsl
sub
cmc
pushf
cs
outsl
jg
fmulp
or
jp
cmp
aas
in
or
xor
cmp
add
sub
add
mov
mov
ljmp
mov
cmp
daa
dec
imul
xchg
out
pusha
dec
imul
xlat
dec
sub
or
jp
insl
jmp
pushf
data16
aad
outsl
push
mov
lret
xchg
add
pop
arpl
mov
push
cmp
mov
stos
cmc
mov
or
cld
cmc
sbb
in
sbbb
in
jge
std
mov
push
cmpsb
test
push
jbe
ljmp
adc
sti
dec
and
xor
test
adc
push
dec
mov
adc
push
stc
cltd
dec
cltd
dec
pop
in
dec
jnp
cwtd
and
sub
mov
out
fidivrs
push
cltd
xor
lea
out
adcb
jae
jbe
lahf
jg
mov
dec
mull
add
js
sbb
xor
and
pushf
add
int3
gs
testl
or
add
adc
inc
mov
sub
in
out
cmp
ret
into
aam
inc
inc
bound
movsl
in
or
in
dec
jne
jno
leave
adcl
call
pop
fsubrp
scas
dec
insl
mov
inc
pop
xchg
jns
pop
push
test
pop
scas
cltd
mov
loope
mov
xor
sbb
add
fwait
and
jg
aam
pop
ficoms
xchg
jne
call
movl
mov
pop
push
in
push
or
outsl
cmp
mov
ss
jecxz
rcrb
push
scas
sbb
loope
mov
jno
shr
mov
jb
jecxz
test
loopne
xlat
push
or
add
sub
mov
les
cltd
xor
inc
insl
xchg
cld
xor
sub
popf
repnz
mov
sbb
cmp
ret
xchg
xor
sbb
xor
mov
add
cmp
rolb
jmp
mov
xchg
gs
jmp
xor
daa
xor
sub
in
or
rorl
in
pop
push
jb
pop
in
cmp
int3
pusha
xor
leave
je
adc
jo
movsb
rcll
mov
out
xchg
dec
adc
dec
clc
lds
fiaddl
dec
xchg
outsb
pop
mov
xor
push
push
sbb
lods
xchg
cltd
push
test
jae
aam
cmovg
sbb
cmp
or
mov
inc
xor
sbb
in
and
adc
es
movsl
and
push
int
cmp
in
out
pop
inc
mov
inc
leave
add
test
push
sub
xlat
outsb
ss
dec
mov
adc
sub
stos
inc
push
jecxz
mov
jl
mov
mov
sub
add
pop
xor
and
in
xor
push
in
into
ds
jb
cmpsl
bound
loopne
jnp
fstpl
mov
jbe
add
clc
insb
pusha
jnp
gs
adc
mov
pop
outsb
rclb
dec
mov
fwait
dec
or
test
insb
mov
scas
mov
test
mov
push
pop
add
add
or
jnp
hlt
hlt
xor
adc
jns
jl
daa
jbe
test
aam
dec
mul
pusha
test
xor
int
lods
fs
xor
jle
push
sbb
add
movsl
and
in
insb
aad
pop
cmp
in
lods
icebp
mov
repnz
test
fnstcw
adc
pushf
ret
in
xlat
pop
out
fldt
xchg
enter
cmp
fidivrs
inc
or
inc
dec
arpl
push
pop
sbb
aaa
repz
sbbl
mov
xor
dec
rolb
ret
jp
xor
int
jmp
mov
jbe
xor
mov
sbb
clc
ljmp
jne
xchg
push
mov
out
mov
pop
imul
and
mov
push
dec
movzbl
mov
mov
aaa
jl
mov
dec
sarl
or
sbb
jl
mov
cmp
mov
sbb
popa
and
or
push
xchg
fcom
xor
push
jmp
adc
leave
int3
faddl
stc
or
pop
cmpsb
ja
jns
ret
push
sbb
push
push
jne
mov
dec
add
mov
sbb
cmp
mov
cmp
repz
fcmovnu
push
jecxz
lds
jne
pusha
rcr
xchg
aam
cli
dec
repz
das
push
cwtl
imul
sub
sbb
repnz
imull
or
rolb
pop
std
mov
jb
mov
es
xor
xchg
xchg
dec
fistl
cld
mov
cmpsl
stc
and
jle
stos
sub
negb
inc
push
inc
daa
flds
outsb
inc
mov
xor
stc
fstpl
xlat
repnz
aas
and
sub
add
adc
insl
lret
sub
hlt
mov
mov
jge
or
pusha
cmc
pushf
popa
orb
iret
call
mov
pop
xchg
push
sub
sbbl
cltd
subb
scas
inc
jl
idiv
scas
adc
or
jmp
in
jns
dec
arpl
push
inc
sbb
call
or
cs
xlat
fidivrl
cli
fst
inc
mov
lahf
inc
pop
lds
imul
lahf
lods
ret
mov
ret
push
jecxz
add
leave
mov
roll
xor
in
test
out
push
adc
jl
or
sub
leave
pop
jb
inc
popf
in
imul
je
lods
lcall
dec
or
push
shlb
xchg
in
loope
clc
rcrb
lea
lcall
mov
lea
dec
inc
dec
scas
stc
push
int3
into
int
inc
adc
pushf
test
mov
rcrl
out
shrl
sbb
add
test
mov
pop
aaa
dec
test
adc
adc
les
xchg
mov
jbe
sbb
into
popf
sbbb
fwait
xchg
lcall
xchg
pop
push
sbb
mov
xor
int3
mov
cmpsl
or
out
call
idivl
mov
stc
bound
icebp
dec
xchg
pop
sub
push
sbb
mov
pop
dec
out
and
sbb
repnz
xor
sub
aad
pop
fiadds
or
pop
add
xlat
push
in
inc
jecxz
inc
arpl
scas
jle
or
movsb
push
popf
into
or
or
andl
addr16
inc
cltd
dec
add
sti
in
push
push
mov
push
repz
jg
scas
std
adc
insb
adc
xor
mov
ja
add
pop
insb
sbb
pop
pop
ficoms
pop
les
lret
adc
js
int
pop
jbe
out
xchg
insb
fistpl
mov
sub
aas
out
das
loopne
pop
cmp
mov
mov
mov
pop
iret
and
lret
loope
fnstenv
jmp
jg
dec
jb
in
das
pop
inc
sbb
into
notb
inc
adc
push
ljmp
std
dec
push
jno
in
outsb
ret
mov
popw
fsubrs
push
jns
imul
adc
mov
add
pop
mov
mov
or
inc
mov
adc
mov
push
lcall
mov
xlat
pop
or
xlat
int3
mov
inc
jge
xor
xchg
pop
pop
push
faddl
mov
push
in
cmc
fdivs
pushf
idivl
inc
jne
je
xor
negb
shl
movsl
lods
inc
sbb
dec
ss
push
xor
or
inc
dec
addl
jle
and
fwait
or
pop
in
or
inc
aaa
pop
lods
xchg
or
cli
sbb
js
or
dec
jl
mov
dec
lret
lahf
test
pop
nop
ret
or
adc
scas
mov
cli
push
push
xor
icebp
jmp
or
outsb
mov
lea
out
sub
push
outsb
movsb
lret
cltd
cwtl
add
out
pop
rorb
rorb
and
lods
push
movsb
mov
add
stc
lods
dec
or
andl
push
sub
jl
insb
inc
lea
adc
mov
ja
mov
sub
jmp
in
arpl
xor
icebp
cwtl
xor
fbld
shlb
pop
xchg
mov
add
xor
rcr
jnp
arpl
cmp
cmpsl
xlat
mov
jb
mov
enter
or
sub
bound
popa
and
xchg
jno
out
aad
daa
es
pop
sub
je
xchg
xor
sub
adc
dec
sarl
out
and
add
gs
es
mov
push
ret
sti
scas
pop
jecxz
ds
jns
mov
test
out
xchg
divl
mov
sub
xchg
cmp
fwait
mov
mov
dec
jecxz
pop
frstor
and
or
sbb
out
sub
xchg
or
pop
shl
addl
jnp
insl
pop
cltd
decb
rcrb
dec
add
in
mov
sub
add
dec
mov
fiaddl
mov
cmp
push
xor
cmp
jmp
cmpsl
xor
shl
xor
cmc
xor
cwtd
cli
insb
mov
push
add
jg
inc
mov
mov
sub
jmp
fildl
mov
cli
in
pop
xchg
flds
outsl
pop
sti
lock
and
adcb
gs
pop
aam
mov
mov
loopne
out
std
test
test
ss
inc
push
mov
ror
aaa
adcl
mov
roll
notb
xchg
inc
pop
fcomip
pop
sub
jg
and
ret
ljmp
lahf
push
and
inc
or
jb
xor
imul
mov
xchg
jbe
sub
jbe
push
add
mov
orl
pushf
stos
mov
sahf
cltd
xchg
mov
call
call
dec
aaa
dec
js
div
into
cmp
int3
mov
add
xchg
pop
mov
int3
arpl
push
pop
mov
mov
xchg
subl
jg
or
push
sub
sbb
ja
mov
mov
out
dec
sbb
add
arpl
xchg
dec
out
fwait
xchg
sbb
jmp
mov
lret
enter
leave
loope
fs
faddl
insl
adc
lret
push
pop
les
sub
cs
scas
inc
imul
cmpsl
fdivs
ret
mov
outsl
data16
jecxz
push
xchg
mov
shll
dec
addr16
cmp
fisubl
add
ljmp
pop
mov
sub
pop
inc
cmc
mov
jae
cmpsb
mov
add
out
lcall
cmp
movsb
dec
outsb
and
fs
fstps
test
mov
lods
mulb
mov
pusha
mov
dec
xlat
fsubr
mov
mov
adc
mov
mov
into
pop
in
stc
shll
aam
popf
in
sub
movsb
clc
sbbb
inc
xchg
sub
icebp
orl
mov
mov
loope
test
jnp
inc
lret
sbb
jge
sub
pushf
aad
out
mov
aad
sti
test
data16
scas
nop
push
rcrl
clc
out
jmp
xor
and
xor
inc
sub
lcall
xchg
mov
push
sbb
mov
or
ficompl
pop
mov
clc
enter
mov
test
sub
std
mov
stos
fs
inc
rolb
mov
out
xchg
jno
divb
rol
inc
mov
and
std
inc
arpl
lcall
pop
shrb
add
and
jge
pop
xchg
ja
inc
jns
mov
cmp
lret
subb
mov
sahf
dec
inc
xor
hlt
or
push
stos
shlb
mov
or
mov
rclb
pop
cld
or
xlat
jno
xchg
out
jp
lds
enter
sti
lret
roll
imul
mov
sub
fcmovbe
arpl
and
bound
sbb
and
sbb
push
out
fwait
xor
pop
das
jp
mov
pop
in
inc
jns
xorb
cmpsb
insb
lahf
mov
fidivrl
fadds
adc
ja
lret
loope
js
sbb
sub
je
jmp
cmc
adc
xor
cmp
xchg
addr16
call
xchg
cwtl
hlt
sti
out
test
data16
data16
sub
push
idivb
rclb
pop
adc
dec
sub
xchg
cwtl
ror
jno
or
cmp
nop
or
add
test
loope
pop
push
fcmovnb
mov
xchg
xor
out
dec
test
int
mov
mov
mov
fisttpl
movsb
dec
cmp
lahf
out
inc
fwait
loope
dec
inc
push
test
jmp
in
lods
adc
icebp
aaa
adc
add
fnstenv
or
js
mov
dec
add
sarl
and
cmp
ds
call
dec
je
movsb
scas
pop
lods
jb
lods
jp
pop
cmp
int3
add
out
dec
mov
ja
imul
popf
cmp
lock
push
push
sti
cmc
push
push
or
loopne
pop
stos
jl
cmp
push
dec
adc
mov
std
mov
inc
jmp
mov
mov
mov
addr16
or
jne
sbb
cmp
jl
jmp
fdivrl
fidivl
scas
jp
enter
or
mov
addl
fdivs
dec
sub
jmp
mov
xor
mov
cli
and
push
cmp
mov
xlat
shl
fwait
mov
sub
lock
mov
jo
mov
shlb
imul
jns
adc
stos
xchg
push
and
sbb
push
pop
sub
daa
fcompl
jmp
pop
gs
sbb
bound
add
aaa
popf
inc
lret
push
push
push
mov
jle
mov
arpl
push
ret
jge
push
call
stos
fwait
lods
xchg
lds
inc
push
data16
loope
out
paddb
test
jl
xchg
imul
mov
inc
push
popa
adc
scas
jne
or
mov
inc
sahf
in
jl
pop
cld
adc
xchg
popa
add
pop
add
xorb
incl
ss
push
sarb
call
in
aad
sub
sbb
fcoms
mov
lods
movd
inc
mov
es
ret
ficoml
xor
pop
stos
xchg
loope
inc
pusha
cltd
test
bound
mov
adc
jp
jo
mov
sbb
dec
add
pop
scas
mov
lock
popf
inc
stos
cmp
mov
adc
cmp
mov
rolb
idivl
sbb
sbb
shrl
xchg
push
int3
je
xor
faddl
pop
adc
cs
inc
fildl
rcrl
lods
les
xchg
push
jne
in
mov
lahf
daa
negl
fimull
imul
mov
push
popf
push
icebp
inc
rcrl
pusha
mov
xchg
xor
xchg
mov
cli
xchg
outsl
sbb
enter
lret
xor
andl
imul
cmp
cwtl
mov
inc
pop
pop
adc
sbb
mov
jl
lods
jno
push
sub
or
aam
fsubr
lcall
lock
out
jp
lcall
or
xchg
add
shlb
sbb
sub
push
xor
sahf
outsb
mov
inc
or
adc
pusha
addr16
aas
lock
inc
mov
andl
jnp
xor
lea
pmaddwd
das
ret
std
add
inc
fadds
mov
adc
in
jl
xor
jge
fnstsw
addl
int3
xchg
daa
loope
xchg
mov
push
rorl
arpl
es
push
in
jecxz
cmpsl
ja
rcl
add
mov
loopne
repz
arpl
adc
push
mov
cs
into
sub
ret
xor
pop
add
and
or
cmpsb
pop
pop
mov
mov
test
add
cmc
xor
arpl
xor
in
mov
repz
push
mov
or
fcoml
hlt
pop
dec
cwtl
imul
mov
cmpsl
repz
in
enter
scas
or
mov
gs
pop
es
in
add
loope
jo
jo
popa
inc
shll
test
out
pop
xor
sbb
insb
cltd
rcll
mov
xchg
test
aam
mov
les
aaa
xchg
dec
and
cwtl
shrl
pusha
call
jl
push
add
jno
rclb
cmp
push
sbb
dec
mov
pop
add
arpl
lods
mov
and
pop
ret
pop
lcall
adc
jbe
lea
cmpsb
test
jb
push
add
orl
or
dec
pop
cmpl
cmp
sbb
test
pop
imul
rorb
sahf
ja
xor
jle
jae
fld
cmp
out
mov
cli
xchg
out
inc
adc
jmp
add
or
and
lds
sub
sbb
push
mov
sbb
daa
adcl
mov
sub
mov
and
mov
in
scas
insl
fimuls
inc
sti
in
and
or
aas
mov
or
loop
test
mov
jbe
in
mov
xlat
lcall
push
push
sbb
xor
pop
pusha
pop
jb
sbb
cmp
bound
outsl
std
gs
pop
push
movsl
comiss
add
pop
data16
fdivrl
stos
es
mov
xchg
lock
inc
bound
adc
outsl
mov
mov
pushf
testb
mov
rcll
daa
call
test
or
pusha
leave
mov
ja
addr16
pop
mov
adc
xor
or
add
mov
and
pop
mov
lret
sub
outsb
lds
imul
sahf
cmp
lret
fcom
jnp
mov
add
cmpsl
repnz
cmp
cmp
in
mov
and
xor
repnz
mov
push
xchg
in
sarb
repnz
dec
loope
in
lock
mov
jne
pop
pop
movsl
lods
add
lahf
pop
jo
push
addr16
lds
mov
jns
stos
xchg
sub
xlat
and
lods
xchg
lea
nop
lea
jl
inc
in
push
leave
rcll
mov
push
mov
sub
xchg
outsl
enter
or
push
shl
and
cmpsl
lock
pop
or
dec
adc
cltd
orl
xor
test
ret
jecxz
inc
stos
xchg
jbe
bound
add
add
lret
mov
rcl
xchg
ja
push
jmp
scas
sahf
sbbl
sub
push
ja
jnp
mov
adc
popl
test
inc
lcall
push
adc
jecxz
inc
fidivrs
pop
push
cs
mov
xchg
addr16
dec
into
fisubrl
sub
pop
add
and
adc
test
jg
mov
or
loope
dec
mov
lock
mul
pop
ficoml
jb
in
adc
dec
ja
int3
mov
movsl
cmp
and
out
hlt
jmp
and
fdivr
jbe
sub
lock
lret
outsb
mov
mov
mov
mov
cwtl
dec
pop
pusha
push
or
test
dec
jle
sbb
mov
cmpsb
stos
aas
sbb
pcmpgtw
xor
outsl
sbb
adc
es
mov
ja
das
pop
jg
lret
adc
movsl
fistps
and
push
ret
sbb
rcrb
popa
push
iret
loope
out
mov
push
mov
or
fsubs
ret
bound
sbb
movsl
fwait
xchg
sbb
aaa
fcoms
lods
das
mov
repz
push
sbb
cmp
mov
mov
xor
stos
dec
push
in
xor
add
lret
dec
sub
and
idivl
xchg
lods
sub
xor
test
stos
fcomp
push
ljmp
inc
or
xchg
add
xor
or
add
leave
xlat
mov
xchg
sbb
mov
lds
add
je
fs
addb
movsb
jb
inc
test
and
xor
add
adc
and
adc
add
je
fs
addb
movsb
jb
inc
test
and
xor
add
adc
adc
je
add
in
fs
addb
inc
test
and
xor
add
and
js
dec
ret
je
je
push
add
mov
pop
fdivrs
inc
test
sub
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
add
mov
fsubp
xchg
sarl
outsb
cmp
dec
sbb
jnp,pn
dec
push
pop
push
mov
into
fsubrp
scas
sti
mov
jnp
cmp
and
cs
ds
dec
pop
push
jno
cmp
or
scas
mov
out
and
insl
sub
dec
imul
cmp
sub
ljmp
pusha
imul
jbe
sbb
mov
push
push
cmpsl
mov
adc
mov
mov
scas
xchg
xor
pop
ljmp
mov
in
mov
sbb
mov
xchg
les
xchg
das
idiv
mov
sti
ret
jge
add
fsubrp
scas
add
lret
popa
ds
adc
mov
push
out
jns
pop
icebp
movsb
xchg
cs
inc
add
and
js
fwait
xchg
sbb
hlt
mov
sahf
cwtl
jnp,pt
sbb
cs
js,pn
add
daa
data16
xor
and
sbb
jle
pop
sbb
cmp
push
sbb
cwtl
out
mov
fsubrp
scas
mov
sahf
fldcw
jle
dec
add
ds
push
aas
ja
or
mov
ret
fadd
mov
or
jp
add
dec
aas
or
pop
stos
out
xor
int3
into
push
lods
and
fisubl
push
jp
outsb
das
ja
sbb
push
imul
fldenv
fidivrl
lret
mov
sahf
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
jg
and
cmpsl
bound
push
xlat
les
and
call
cmp
mov
jo
mov
mov
cmp
repnz
mov
xor
aas
or
ret
xchg
stos
clc
cli
sub
mov
mov
xchg
sbb
jno
out
call
ja
push
pushf
cltd
adc
mov
pop
clc
test
add
jge
mov
or
jge
roll
rcrl
cli
sahf
mov
addr16
fnop
sub
cmc
jmp
les
mov
mov
adc
cmp
data16
pop
iret
mov
or
sub
sub
inc
mov
mov
push
xchg
int3
imul
or
mov
xor
sub
sbb
xor
add
jo
xchg
out
push
ss
loopne
xor
lock
mov
in
repz
mov
sbb
mov
add
test
arpl
inc
popa
and
in
lahf
iret
call
loop
or
pop
movsl
lahf
insl
cmp
add
in
and
into
cmp
test
adc
gs
push
ret
inc
ja
jo
nop
jb
jae
mov
jno
jecxz
xchg
dec
scas
mov
xor
add
rolb
rolb
das
or
movsb
fwait
enter
xchg
imul
dec
out
jecxz
cmp
test
pop
xchg
fbstp
adc
pop
cmp
push
les
add
mov
jmp
ret
orb
mov
ret
fiaddl
in
stos
sbb
cmp
add
shufps
int3
fldt
dec
lahf
adc
cmp
psubd
pop
cmc
pop
dec
clc
adc
cltd
stos
lods
fs
mov
cld
in
lods
iret
loope
loopne
aad
adc
cltd
mov
mov
notb
pop
andl
xor
gs
cmp
inc
clc
out
mov
addr16
cmp
scas
in
push
sbb
xchg
sbb
or
mov
or
cli
sub
adc
pop
push
dec
popa
cld
inc
out
inc
in
repnz
jmp
push
or
ja
aas
pop
push
mov
dec
xchg
push
dec
aam
or
and
sub
sub
sahf
pop
push
mov
dec
mov
cmp
sbb
addr16
iret
pop
lret
push
sbb
imul
jp
and
in
cs
mov
popa
push
xor
addr16
call
push
xchg
and
negb
sbbl
mov
jno
push
xor
add
repnz
lds
aam
inc
mov
cli
popf
mov
movsl
mov
jp
dec
push
outsl
aaa
cmp
clc
inc
shl
out
outsb
or
mov
lock
inc
xchg
lds
pop
cmc
xor
in
lods
pop
mov
shr
push
out
lods
in
pop
dec
mov
scas
mov
mov
mov
sub
inc
test
mov
inc
sub
xchg
scas
out
mov
mov
imul
sub
pop
int
or
aad
movsl
mov
and
push
loopne
movb
dec
jbe
pop
pslld
rcrb
mov
xor
pop
mov
mov
pop
sub
mov
pop
fisttpl
enter
inc
outsb
out
push
clc
jb
jmp
jo
or
rcrb
inc
out
cs
loope
fs
es
xchg
or
push
pop
mov
push
cld
es
hlt
add
out
add
in
mov
mov
mov
add
mov
push
or
or
jo
add
popa
push
add
mov
xchg
movsl
mov
mov
lahf
adc
sbb
or
pop
mov
imul
int3
jae
mov
scas
jns
or
mov
outsb
mov
repnz
sbb
pop
pop
cmp
fidivrl
mov
loope
lret
cmpl
pop
stc
or
dec
inc
mov
adc
lods
push
mov
dec
sub
and
xorl
aam
cmp
fs
popl
aas
mov
scas
mov
jmp
imulb
push
sub
divl
shrl
jae
pop
lret
dec
mov
movsl
mov
icebp
xchg
insb
sti
dec
imul
imull
in
mov
xor
enter
or
cmp
sahf
mov
xchg
mov
jp
in
test
loopne
jp
ds
xchg
test
and
add
push
loope
xchg
ret
std
mov
sbb
clc
adc
xchg
mov
fs
dec
ret
sub
pop
xorl
ss
std
fidivl
je
pop
pop
push
cmp
lods
pop
loop
xchg
xor
mov
scas
in
aam
scas
lcall
adc
adc
pop
hlt
mov
movsl
xchg
lret
mov
sub
fcmove
mov
aad
les
xlat
cmp
in
push
inc
movsl
bound
jge
or
imul
stos
sub
pop
push
sti
dec
sub
xchg
add
cmp
sahf
jecxz
adc
test
movsb
fld
add
mov
jnp
idiv
mov
and
shr
ret
iret
addb
mov
mov
fs
imull
in
scas
push
scas
pop
push
lret
ret
in
fmull
data16
xor
fiadds
call
xchg
negl
mov
dec
mov
mov
loop
xchg
pop
inc
xor
xchg
aaa
nop
inc
sub
outsl
dec
lock
cmp
mov
pop
inc
int3
or
dec
fidivrl
mulb
mov
lods
jmp
out
lock
fsubr
add
sbb
jb
outsb
dec
sbb
mov
and
mov
pushl
mulb
dec
addb
nop
cmp
sbb
dec
call
add
or
push
adcl
jmp
xor
xor
mov
add
jecxz
cmc
sub
lahf
out
in
dec
jnp
sub
hlt
push
dec
push
xchg
imulb
jnp
and
frstor
repnz
shrb
fs
cld
cmpsl
add
cld
jnp
into
dec
arpl
stos
out
xor
adc
xor
jg
std
dec
jo
pop
cmp
mov
test
jle
lahf
xor
movsl
out
in
jnp
pop
mov
jne
nop
dec
xchg
aaa
dec
push
sub
rcll
push
mulb
add
jp
sbb
add
xlat
loopne
pop
inc
insb
mov
mov
inc
push
ds
adc
std
ss
add
lahf
sahf
sub
iret
rcr
inc
xchg
dec
mov
into
mov
adc
mov
ficompl
cmpsb
xchg
pop
pop
sub
rol
mov
imul
fdivrl
mov
add
pop
inc
call
pop
cmp
xchg
mov
mov
mov
sbb
gs
lret
inc
iret
push
testb
rorl
movsb
xchg
lcall
adc
xchg
mov
les
dec
loop
mov
and
loopne
push
adc
ret
add
loop
aam
int3
lock
and
xor
sahf
flds
roll
jo
dec
sti
js
adc
inc
mov
xor
popa
push
mov
stos
xchg
xchg
add
bound
cmp
mov
sbb
ja
inc
into
pop
xchg
xor
std
outsb
mov
jl
stos
loopne
jg
xchg
in
adc
scas
movsb
int3
mov
popf
cmpsb
repz
je
arpl
in
pop
and
inc
in
inc
jae
decl
lock
cmp
xchg
ret
inc
loop
sahf
xchg
hlt
cmp
sti
ljmp
push
out
jge
in
stos
mov
jge
test
xchg
mov
add
scas
xchg
stos
jle
pusha
repz
fisttpl
jb
popf
lea
andl
jg
test
dec
fimuls
sub
dec
lret
dec
cmp
xor
mov
fildl
jg
lahf
adc
cmp
inc
mov
popa
in
rorb
xchg
rclb
test
jecxz
cmp
mov
jo
push
ret
sub
push
popf
pop
jb
cmp
xor
idivl
ja
inc
lods
add
push
stc
enter
roll
sbb
push
loop
cmp
pop
xchg
rol
vmwrite
mov
adc
adc
scas
mov
inc
push
xchg
jp
jo
out
outsl
sub
cmc
stc
insl
shl
orb
mov
add
push
push
sbb
sti
cld
jo
fisubrs
ljmp
popl
repz
sti
sbb
push
sahf
es
pop
stos
adc
jmp
mov
mov
mov
aam
lcall
mov
pusha
add
push
jbe
rcrl
xlat
movq
outsb
cmp
inc
jmp
push
and
xor
and
adc
mov
mov
daa
sub
mov
mov
mov
cmpsb
ss
cltd
jnp,pn
mov
sbb
les
or
jno
les
in
mov
ljmp
cmp
loop
pop
popa
and
sub
adc
in
push
out
push
out
call
repz
xchg
aam
or
push
or
outsl
stc
add
test
roll
shrl
imul
leave
pop
sub
sbb
cltd
xor
inc
mov
bound
xchg
pop
and
and
loope
cwtl
jno
jg
lahf
out
mov
push
mov
xor
pop
mov
inc
popa
js
pushf
mov
and
add
js
rol
xchg
xchg
out
xlat
enter
ds
xor
or
fadd
ss
scas
and
sbb
daa
mov
or
bound
sub
loope
aas
push
ret
leave
mov
loop
subb
jge
out
push
pop
fildl
orb
jbe
pushf
std
gs
gs
jp
pop
xor
adc
add
push
jge
mov
cmp
out
aaa
pusha
mov
cltd
mov
sbb
sub
insl
jno
inc
jne
in
add
mov
mov
xor
test
ret
pop
in
call
inc
and
cmpsl
xor
push
lret
je
mov
aad
mov
scas
push
pop
hlt
mov
xor
inc
enter
xsave
rcll
sbb
out
cmp
inc
pop
les
lea
xchg
pop
cld
hlt
sub
push
fdivrl
rcrl
sti
fdivp
data16
stc
add
std
mov
mov
daa
dec
aad
lret
sti
loope
mov
pop
repz
lods
and
xchg
ja
divb
cmpsb
add
add
in
data16
aaa
mov
ret
cwtl
inc
mov
cmp
call
idivl
jae
cs
inc
xchg
mov
insl
fistps
aad
inc
pop
mov
and
add
stc
fsubs
out
stc
pop
pop
and
xor
sarb
ss
add
aas
mov
inc
xchg
mov
mov
out
jmp
out
clc
inc
arpl
repz
jg
rcl
add
dec
jb
jo
or
mov
inc
movsl
das
je
xchg
adc
xor
adc
or
cltd
or
pop
mov
fstps
sahf
jge
and
out
enter
mov
into
lea
jae
cwtl
pop
rcrb
xor
xchg
fwait
mov
cmpsb
dec
mov
push
shrl
ret
stos
sbb
mov
pop
cmp
cmpsb
pop
dec
adc
cmp
aaa
push
popf
loope
mov
push
je
in
call
sub
dec
inc
cs
out
dec
mov
cmc
je
clc
fwait
js,pt
lcall
cld
cld
mov
cltd
push
and
mov
repnz
out
hlt
pop
testb
xor
and
jb
dec
shlb
xchg
and
jnp
dec
push
ja
push
int3
cli
popf
dec
enter
pushf
inc
lods
lea
movsb
cmp
int
jns
push
inc
xchg
lcall
lock
adc
icebp
aam
sbbl
push
sub
inc
sbb
dec
mov
xor
mov
mov
jp
test
fwait
cwtl
outsb
inc
push
cmpb
xor
inc
push
lcall
cwtl
jbe
movsb
cli
sub
xchg
jnp
ljmp
fwait
jbe
ss
mov
lods
fldcw
pop
int3
test
js
cmpsb
xor
cmpsl
test
xor
xor
jmp
out
push
dec
mov
lret
outsl
sar
jmp
ljmp
xor
nop
movsl
lret
pop
ret
hlt
inc
inc
sbb
inc
pop
sub
lmsw
inc
mov
test
pop
testl
repnz
mov
test
mov
mov
lock
fcomi
inc
lock
popa
cmp
mov
lcall
mov
rcl
xchg
jge
not
lods
xchg
xchg
pop
sub
cmp
inc
mov
gs
mov
cltd
pop
movsl
out
inc
mov
imul
iret
test
mov
cmpsl
push
idivb
push
dec
insl
sub
inc
int3
jo
add
je
adc
repz
cmpsb
pop
int
sub
sbb
xchg
xchg
ljmp
int
xor
jge
out
in
push
mov
shll
push
cmc
sbbl
mov
inc
std
mov
pop
sti
push
scas
push
jge
iret
inc
movsb
inc
jecxz
cmc
mov
mov
jmp
mov
scas
pop
popf
sbb
jge
sub
mov
mov
lds
aad
pop
add
iret
je
cmp
push
movlps
jg
iret
ficompl
aaa
adc
punpckhdq
and
sub
scas
sbb
mov
bound
ljmp
mov
out
rcrl
xor
cmp
mov
out
add
add
dec
sar
cmp
or
jecxz
fbld
js
fisubrs
lock
out
mov
push
jo
rcrl
fmuls
into
sub
pop
mov
gs
adc
sub
jg
out
or
mov
sbb
lds
cmp
push
rorb
sub
sub
mov
inc
inc
cmpsl
arpl
cmp
pop
cmp
or
enter
add
mov
dec
testb
sub
add
fstps
adc
icebp
insb
mov
mov
dec
lret
in
and
imul
scas
cmp
inc
into
test
fnstsw
and
out
pop
popf
xchg
mov
xchg
mov
mov
jae
mov
push
fadds
mov
inc
jmp
mov
iret
lock
int3
lcall
ret
cmp
mov
sub
int
mov
divl
ret
stc
or
mov
mov
jg
imul
rcrl
out
cmp
sahf
lcall
dec
movl
sbb
aad
fld
and
mov
adc
ffree
rcr
sbb
xchg
add
xlat
xor
loope
popa
shlb
push
sub
add
push
pop
pusha
xchg
mov
jg
shrb
adc
xchg
pop
arpl
imul
pop
cmp
jge
idivb
loop
mov
adc
fdivrs
nop
cli
fstp
mov
dec
lea
pop
int3
bound
hlt
jl
xor
int
xor
xchg
dec
gs
daa
add
pop
add
or
sbb
dec
addb
mov
outsl
insb
inc
cli
arpl
sahf
jmp
ljmp
sarb
inc
xor
adc
or
daa
add
sub
sub
xchg
cmp
aad
out
imul
mov
mov
xor
pop
cmp
mov
aam
in
cmp
mov
fwait
aaa
sbb
cmp
mov
push
repz
lods
fmuls
jns
mov
xchg
lcall
push
insb
icebp
dec
sbb
ss
addr16
pop
pop
lret
xlat
xchg
mov
sti
cmp
orb
int3
cmpsb
aad
rep
mov
call
xchg
jns
outsl
mov
mov
pusha
push
xchg
pop
cmc
fwait
mov
xchg
insb
fildl
mov
push
mov
inc
jmp
std
mov
mov
pusha
cmp
dec
sahf
in
scas
popf
sub
jnp
xor
pop
jns
and
xchg
ds
adc
inc
inc
sbb
mov
xchg
lea
fwait
inc
xchg
push
lcall
push
pop
xor
push
add
mov
scas
lock
lret
les
fldt
push
mov
and
lret
in
sbb
sti
out
add
adc
xorb
jnp
nop
inc
fldenv
pop
lds
shlb
shrb
int3
stc
daa
cmp
das
enter
pop
mov
or
xchg
add
pop
or
push
mov
repz
push
and
in
add
lods
sub
add
imul
inc
addr16
sbbb
iret
test
xchg
push
insb
test
sbb
dec
faddl
mov
cld
adc
sbb
jmp
dec
lret
and
idivl
out
inc
f2xm1
aad
andb
fisubl
repz
aam
push
mov
rcrb
test
xchg
xor
mov
sahf
rorb
pop
dec
mov
mov
scas
inc
sti
loope
test
aam
rcl
rclb
push
lcall
inc
fwait
xor
scas
outsb
mov
fnstcw
in
xchg
jp
loope
fimull
mov
adc
xchg
xchg
imul
loope
lea
add
fucomip
jns
mov
xor
mov
popa
shl
fiadds
hlt
aad
addr16
in
or
inc
std
mov
cli
popf
in
jecxz
push
scas
insb
dec
dec
mov
cltd
mov
inc
mov
mov
jge
pop
pop
sarl
icebp
sub
xchg
cld
out
fs
inc
fmuls
into
xor
cmp
mov
les
hlt
pop
loope
fcompl
fiadds
in
adc
repnz
and
cmp
sbb
lods
push
fnstenv
aam
test
daa
mov
insl
add
add
xchg
pop
fidivs
out
sbb
mov
out
mov
mov
test
pop
sbb
xlat
mov
mov
icebp
loope
add
cmp
xor
adc
pop
jns
push
cwtl
pop
divl
sub
sti
sbb
jmp
or
enter
xchg
hlt
sub
out
and
scas
cmp
sub
lahf
push
or
sub
mov
rclb
clc
mov
mov
inc
adc
jb
add
sbb
in
fwait
xchg
xlat
fwait
add
jl
push
add
popa
mov
jle
adc
sbb
jmp
dec
push
jae
mov
push
sbb
stos
dec
jg
adc
sbb
mov
cmp
out
push
sub
and
ret
mov
cmp
pop
xor
mov
mov
sbb
jbe
ljmp
imul
ds
std
movsl
fcomps
in
ror
incb
insb
in
mov
mov
and
test
xchg
mov
add
rclb
xor
push
inc
push
sarb
pop
pop
push
and
add
add
or
push
xchg
pusha
jo
sub
outsl
cwtl
jl
xchg
lret
jbe
inc
xor
insl
xlat
cmc
cs
xor
push
fisttps
mov
or
out
shrb
adc
ljmp
leave
movsl
mov
dec
and
dec
sub
inc
pushf
inc
mov
int3
fdivr
and
rol
loope
sub
push
out
inc
push
jnp
mov
xor
push
mov
out
cmc
lret
lret
pop
into
es
sub
popa
pop
das
jns
mov
daa
cs
in
imul
cmp
addr16
ret
pop
insb
mov
std
xchg
fistps
lock
pop
divl
add
fbstp
int3
xchg
jo
aad
movsl
dec
dec
aaa
dec
jge
cmp
mov
pop
jno
test
xchg
mov
sbb
push
rcrb
fidivrl
xchg
dec
cmp
sbbb
mov
add
sub
test
dec
cltd
pop
insl
xchg
dec
mov
sub
xchg
daa
jp
or
ret
xlat
imul
sbb
iret
and
mov
push
in
push
pop
cmp
sbb
insl
sub
cld
mov
int
aaa
adc
in
out
pop
xor
ja
inc
or
cmp
pop
inc
jmp
inc
push
cli
xor
fdivl
insl
inc
dec
shr
pop
cmp
enter
lret
adc
cmp
jg
xchg
xlat
lds
push
xor
adc
addr16
js
lds
loop,pn
scas
dec
ss
or
mov
aam
or
push
das
mov
push
lds
test
test
pop
cli
cmp
rorl
sbb
push
testb
mov
mov
std
stos
int
cmp
dec
test
mov
leave
and
sub
in
cmp
or
mov
pop
stos
lret
sahf
sub
and
cmpsb
rcrb
pmulhw
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
sti
mov
sub
jle
dec
sbb
jnp,pn
dec
push
pop
push
stos
out
mov
fsubrp
scas
ds
mov
sahf
das
out
cmp
dec
pop
pop
imul
ds
push
imul
out
xchg
incb
into
mov
jmp
jmp
lret
mov
sub
aam
dec
sbb
sbb
repz
and
inc
mov
add
mov
movsl
mov
cmc
out
aad
lds
xor
sub
jmp
xchg
mov
test
xchg
outsl
test
lcall
add
adc
and
dec
push
pop
gs
xchg
ror
fdecstp
repnz
test
insl
xor
inc
push
push
inc
mov
dec
dec
xchg
popf
data16
pop
je
inc
lds
nop
loop
sbb
dec
cmp
cltd
lea
jb
inc
std
mov
es
pusha
dec
nop
xor
and
sub
es
pop
outsl
repz
lahf
cmp
in
sbb
and
mov
push
adc
sbb
mov
xchg
scas
insl
mov
mov
hlt
sahf
sbb
and
int
inc
pop
orb
jge
xchg
out
mov
push
lods
test
int3
in
les
cwtl
jb
mov
out
adc
jb
inc
push
popf
sbb
aad
inc
fnsave
cmp
dec
jne
gs
je
test
xchg
arpl
sbb
outsb
addr16
sub
add
or
add
jmp
loope
in
mov
test
movsb
sbb
je
and
sbb
push
adc
sub
lahf
rorb
loop
movsl
mov
scas
je
aas
bound
sub
gs
insl
inc
popf
mov
movsl
mov
cmc
int
std
aad
lds
adc
dec
gs
insl
inc
popf
mov
movsl
mov
cmc
int
std
aad
lds
mov
sub
popa
inc
ret
push
mov
dec
inc
repz
inc
inc
and
int3
mov
jno
adc
jb
pop
ljmp
jbe
mov
fldl
call
dec
mov
and
repz
data16
adc
adc
cs
scas
dec
lods
js
mov
mov
cmpsl
sahf
jne
movsl
or
mov
push
push
mov
lret
xchg
jmp
divl
cli
sub
ret
movsl
pushl
mov
push
jle
bound
push
sbb
xchg
mov
or
cmp
cs
jmp
jb
iret
lret
push
or
sub
jns
xchg
mov
cld
xor
mul
lret
adc
cltd
sti
ret
lea
outsl
push
add
sub
fnstsw
ljmp
iret
orb
fldt
xchg
pop
ds
and
filds
push
out
inc
cs
sub
mov
ljmp
in
aam
loopne
add
repnz
add
pusha
je
outsb
sbb
fucom
or
jmp
lahf
mov
cs
push
cmp
dec
sub
mov
data16
out
cs
call
clc
jne
imul
push
stos
xchg
in
call
add
mov
mov
test
pop
mov
dec
push
mov
out
in
stc
mov
nop
in
cmp
cltd
dec
cmpl
pop
xchg
xchg
scas
mov
mov
jl
popa
mov
outsb
xor
xchg
mov
jno
aas
sub
mov
xor
popa
fiaddl
push
mov
jo
in
xchg
bound
push
jl
push
cmpsl
dec
fsubrs
xchg
pop
sbbl
arpl
inc
or
adc
inc
in
jp
pop
and
out
mov
push
or
sub
leave
add
push
dec
xchg
das
jecxz
in
mov
mov
mov
adc
push
add
xor
mov
xchg
mov
inc
js
gs
pop
mov
dec
ja
hlt
mov
inc
movsb
mov
in
ret
popf
sub
push
int
fstps
xor
in
ds
leave
nop
mov
stc
push
xchg
je
mov
and
inc
fs
js
sti
mov
into
push
mov
mov
inc
test
aam
cmpsb
aad
movsb
and
repz
jmp
mov
dec
dec
mov
pop
adc
orb
jne
mov
xchg
scas
add
add
adc
adc
jp
enter
leave
push
pop
xchg
repz
fwait
xchg
mov
fxch
loopne
es
stos
loop
inc
test
outsl
inc
mov
js
pop
mov
mov
xchg
repnz
gs
adc
addr16
psubq
mov
adc
ds
jno
cltd
mov
pop
add
aaa
sbb
dec
mov
jns
inc
shl
es
fbstp
push
add
std
leave
mov
dec
stos
inc
movsb
adc
sti
sbb
push
scas
ja
lock
test
dec
xchg
and
test
or
push
mov
aad
mov
mov
out
fidivrs
xor
lock
push
and
jmp
sbb
sbb
sbbb
adc
loopne
sbb
mov
jg
jb
push
mov
movsb
out
inc
dec
lahf
cmpsl
fisubs
jl
iret
insb
clc
cwtl
push
in
and
cmpl
or
js
adc
cmp
jg
cmp
rcr
jmp
xchg
test
adc
lods
add
sbb
cmc
out
pop
push
xchg
mov
mov
stos
mov
in
ret
lahf
hlt
mov
je
or
aas
push
hlt
adc
and
jl
sbb
fadds
mov
inc
jle
adc
fstpt
mov
test
fwait
aam
push
push
jp
shll
mov
or
jecxz
out
mov
jbe
jbe,pt
out
fisubs
dec
ja
aam
test
jle
loop
movsb
pushf
pusha
call
push
and
hlt
scas
pushf
xlat
xlat
cmpsb
lea
xor
pushf
imul
add
insb
add
pop
orl
or
mov
xchg
sbb
ficoml
jl
popf
cmpsl
not
sti
subb
cmc
lret
push
pushf
loopne
push
push
jbe
or
cmp
jp
push
dec
xor
popf
stos
pop
je
and
sub
sub
adc
add
dec
jle
sbb
mov
clc
xchg
xchg
ret
icebp
inc
pop
xchg
rorb
fists
mulb
inc
lcall
jmp
xchg
sbb
mov
in
data16
and
mov
mov
cmp
push
lcall
shll
fdivrl
xchg
and
mov
xchg
add
notb
mov
pop
pushw
xor
mov
or
jge
movsb
sti
fcoms
out
cmp
pop
das
push
and
rcl
dec
adc
and
in
and
mov
lret
xchg
loop
bound
xchg
loop
push
adc
adc
stos
pop
inc
out
add
orb
xchg
ficomps
neg
aaa
jmp
push
add
sbb
xchg
movsw
inc
mov
jg
in
ljmp
fucomip
stc
mov
jp
add
pop
inc
cmp
cmp
cmp
add
jl
pop
inc
jecxz
js
mov
repz
xor
mov
ja
pop
inc
xor
inc
lret
mov
jmp
call
call
xor
sbb
pop
dec
jmp
add
cmp
pop
int
out
sub
jns
popa
mov
iret
lock
out
add
lea
mov
popf
test
nop
sub
out
imulb
mov
jno
push
dec
xor
sub
xchg
sub
addr16
xchg
push
movsl
cli
mov
dec
orb
andb
scas
inc
mov
xchg
jp
push
mov
notl
pop
icebp
fdivrl
dec
cld
pop
add
push
aam
cld
test
dec
mov
sub
and
js
lds
rolb
xchg
cmovp
repz
mov
repz
inc
push
xchg
or
ja
fsubl
and
gs
in
sar
std
shlb
xchg
lret
mov
stos
lret
addr16
ret
jnp
jge
mov
enter
sub
push
push
pop
je
xor
mov
or
das
jne
fnstcw
add
fidivrs
mov
push
xchg
or
daa
test
mov
loopne
or
jne
sqrtps
loopne
sbb
dec
push
adc
insb
or
xor
imul
pop
mov
sbb
scas
es
cld
inc
fcompl
lcall
jns
lock
clc
jnp
and
fstpt
pushf
sbb
pushf
stos
clc
rcl
dec
xor
gs
lock
jge
jo
pusha
sub
neg
mov
roll
lea
mov
lods
adc
roll
js
inc
mov
pusha
mov
sub
xor
in
fisttps
in
mov
push
fcmovnb
push
dec
das
xor
popa
mov
sarb
add
inc
arpl
dec
pop
movsl
mov
pop
fdivrl
push
dec
pop
test
mov
stos
cmpsl
mov
mov
jb
lods
and
jns
lret
dec
and
insl
push
stos
std
outsb
stos
fistl
call
adc
out
imul
and
inc
sti
jnp
jge
xchg
daa
rcrl
jno
idivb
es
gs
pop
data16
pop
jno
das
rcr
push
test
stos
and
dec
jp
dec
daa
jns
mov
out
outsb
jge
push
out
add
dec
cmp
sbb
dec
xlat
and
ret
fadds
xchg
cli
jge
cmpsl
rolb
mov
js
data16
not
adc
add
pop
out
pop
roll
xor
xchg
pop
fwait
mov
orb
sbb
cmp
inc
and
sub
outsl
pop
hlt
mov
out
adc
cld
add
xlat
mov
aas
in
xor
and
lea
jns
adc
jae
xor
rorl
cmp
shrl
imulb
int
addr16
mov
shl
ficompl
pop
in
sbb
pop
and
pop
in
push
mov
inc
inc
dec
add
mov
std
andl
inc
je
xchg
adc
dec
mov
int
out
jge
movsl
adc
addr16
mov
pusha
push
jle
jno
xor
lcall
fmuls
jmp
sbb
and
fiaddl
mov
addb
sbb
and
push
in
jg
sarb
fistl
loop
hlt
decl
jo
test
outsb
subl
mov
xchg
adc
inc
add
mov
dec
push
enter
jb
loopnew
xlat
pop
push
jne
lods
pop
shr
and
jbe
cmp
jp
clc
fimuls
mov
adc
repz
mov
in
enter
cmp
rol
mov
xchg
pop
dec
add
adc
loopne
mov
fneni(8087
in
pop
lret
mov
stc
je
push
xor
lret
xlat
pop
push
jmp
add
nop
in
outsb
fcomps
inc
cwtl
incl
outsb
adc
mov
lcall
pusha
nop
jno
sbb
aas
test
pop
mov
and
das
add
mov
lods
divb
push
push
sub
push
inc
mov
imul
mov
stos
in
push
shll
jmp
shlb
pusha
das
sub
js
pop
mov
mov
lods
test
outsl
cmp
imul
cmp
sahf
out
jo
fistpl
shrb
jae
lret
mov
adc
pop
insb
inc
outsl
pop
lods
ds
divl
mov
pop
cmp
xchg
jbe
js
andb
testl
dec
scas
jo
mov
inc
cmp
sbb
mov
hlt
xlat
in
in
jb
jmp
push
push
xchg
stc
mov
pop
push
lret
add
test
std
jbe
les
cmp
push
dec
cmp
pop
xor
pop
sub
stos
fmuls
sarl
xchg
cmpsl
out
jbe
mov
int
inc
pop
jl
int3
stc
mov
mov
mov
repz
testl
inc
xchg
and
and
inc
out
nop
aam
jae
cmpsl
jno
enter
and
cmpsl
mov
push
cld
sub
imul
sbb
xchg
adc
cmp
mov
ss
sarb
sbb
nop
mov
ljmp
mov
push
ja
das
jp
and
scas
and
xchg
mov
movsl
push
push
mov
mov
mov
inc
jecxz
cmpb
mov
and
sub
dec
or
push
cltd
lret
jecxz
cmp
inc
fdivl
adc
jp
cmpsl
jo
add
leave
or
inc
sub
or
fwait
js
sub
push
add
mov
mov
sub
daa
fcompl
out
cmpsl
push
dec
cwtl
in
jge
push
jp
and
sarb
enter
jno
pop
cmc
mov
xor
out
int3
mull
mov
lea
imul
fsubrl
imul
popf
xchg
mov
xor
push
gs
cltd
or
inc
xchg
shlb
jle
lock
mov
loop
mov
mov
rcrl
push
and
sub
mov
enter
es
cli
scas
xor
xchg
sbb
sub
cmp
jge
adc
popa
js
popa
aam
pop
addb
inc
add
icebp
adc
mov
xchg
xor
faddp
mov
sub
je
ja
out
test
xchg
add
out
add
popa
arpl
adc
addr16
push
inc
int3
cmpsl
int3
cmp
in
mov
or
mov
cltd
xchg
daa
das
rolb
sbb
pop
jecxz
sbb
xchg
in
push
repz
and
out
inc
int3
jle
adc
mov
pop
fcmovnb
mov
movsb
lds
int3
out
jp
sbb
or
mov
popa
inc
adc
aaa
cmp
hlt
add
in
outsl
and
outsb
dec
out
xor
cs
add
mov
shlb
cmp
mov
mov
shl
fdivrs
stos
inc
incl
push
js
cmpsl
pop
xor
xor
mov
in
rcll
dec
mov
jo
add
push
and
mov
add
or
ret
mov
loope
inc
adc
jecxz
movsl
mov
push
pop
shrb
mov
pop
pop
lcall
push
xor
sbb
sub
fcoms
push
jo
lahf
mov
add
pop
dec
dec
mov
cmc
ficompl
mov
adc
mov
sub
mov
bound
test
std
jnp
jmp
lcall
lods
xor
sarb
xchg
mov
lret
xorl
ja
inc
enter
les
cld
test
sbb
fwait
mov
inc
out
cmp
loopne
outsb
push
xor
or
dec
aam
mov
enter
mov
jne
int
sub
jge
pop
xor
std
aad
cmpsb
dec
fscale
jmp
or
rcrb
push
fucom
mov
jp
jbe
inc
ret
push
insl
xlat
mov
and
mov
out
sbb
out
lds
pop
xor
cmpsb
arpl
scas
jns
add
repnz
les
lods
mov
stos
les
test
mov
clc
stos
push
mov
pop
pop
ffreep
mov
lea
imul
and
adc
xchg
repz
lahf
adc
push
dec
ss
pop
fdivrl
daa
push
jb
mov
fcompl
push
mov
cmpsl
fbstp
dec
sbb
xor
enter
ret
test
adc
mov
scas
push
jnp
shrl
fs
inc
leave
add
or
inc
out
dec
xor
outsb
out
dec
in
jg
lahf
in
push
jp
mov
xchg
push
pop
sub
jle
push
jno
fucomi
mov
cmpsl
shr
sub
incb
sti
and
stos
loope
mov
jo
call
mov
jae
shll
fildll
clc
mov
test
sbb
enter
adc
pop
xchg
jne
adc
gs
push
inc
insl
addr16
xchg
int
dec
mov
xor
fnstsw
mov
shll
adc
push
in
lods
push
mov
and
xor
xor
jbe
das
mov
xor
xchg
jne
pop
mov
cli
jecxz
sbb
pop
imul
jne
sub
dec
add
ret
jnp
imul
push
out
or
imul
push
mov
push
stc
lea
mov
cmp
and
loop
cltd
jl
mov
inc
sub
add
in
int
xor
pushf
or
or
loop
dec
push
iret
sti
lahf
and
idivl
insl
xor
sub
cs
popf
push
and
mov
push
adc
sub
insl
mov
push
enter
sub
addl
out
cmp
jne
cmpsl
js
xor
mov
cmpsb
fsubp
cmp
shl
hlt
jmp
mov
mov
fwait
cltd
int3
sbb
hlt
popa
mov
out
stos
mov
pop
push
stos
xor
xchg
xchg
ljmp
stos
mov
stos
test
imul
mov
add
pop
ljmp
add
xchg
int3
icebp
lahf
and
xor
shlb
loopne
mov
movsl
outsb
inc
std
aam
arpl
dec
lods
and
movsb
scas
push
pop
jae
xor
lods
jbe
xor
insb
xchg
mov
mov
ljmp
push
into
mov
into
and
icebp
leave
mov
dec
mov
cmp
xor
stos
mov
repnz
or
shrb
cmp
mov
mov
in
cmp
mov
jne
adc
push
outsb
pop
dec
dec
leave
push
jne
cltd
test
push
cbtw
inc
push
xchg
or
or
outsl
daa
in
cmp
cmp
aad
pop
sar
and
iret
xchg
xchg
adc
cwtl
test
inc
jmp
mov
dec
dec
sahf
ficompl
adc
sahf
fcomp
xor
stc
aas
movsb
lock
cli
nop
fwait
inc
cmp
aas
xchg
xchg
dec
shll
in
sub
and
insl
dec
or
lret
push
scas
dec
jbe
xchg
jle
pop
xor
jl
icebp
mov
shrl
pop
jmp
mov
xchg
repnz
ljmp
mov
in
movsl
movsb
add
push
and
stc
test
sahf
push
ss
int
xchg
movsl
cmp
push
sbb
mov
xchg
test
clc
inc
jge
pop
pushf
stc
push
arpl
inc
mov
and
out
add
out
fidivrs
adc
repnz
stos
mov
loop
fistpl
mov
and
in
sbbl
pop
ret
jns
pop
jno
jb
xor
jmp
xor
xchg
movsb
sbb
sub
push
cld
outsl
adc
cmc
or
std
jae
fisttpll
in
jne
scas
mov
ret
xchg
lret
pusha
pop
pop
push
cmpsl
jne
xchg
xchg
divl
push
xor
jl
sub
lds
sub
imul
imul
movsl
in
mov
inc
lea
xchg
jmp
mov
push
in
jmp
xchg
lea
icebp
and
in
sub
clc
ficoml
clc
js
sub
sub
push
jge
rolb
push
leave
sbb
add
or
jle
jae
pop
mov
rcl
hlt
out
movsl
lds
std
aaa
repnz
mov
xchg
fnstenv
lods
mov
stos
add
test
mov
xor
mov
fnstcw
inc
lret
and
sti
xchg
push
dec
or
stos
jl
mov
aaa
xchg
dec
mov
dec
dec
adc
cmpsl
jmp
and
xchg
sbbb
test
push
jns
movsl
sarl
mov
fst
add
xor
jo
lret
arpl
push
mov
das
jmp
out
xor
jg
call
add
inc
push
into
jmp
stc
or
xor
popl
push
repz
mov
inc
stos
rorl
cmpsl
in
dec
adc
insl
int3
dec
stos
pop
test
adc
pop
int
je
sub
lret
cmpsl
js
push
scas
cmp
aas
push
dec
in
dec
fdivl
push
cmp
test
jg
mov
adc
ret
jo
mov
lods
adc
push
cli
pusha
ret
lds
rcll
loope
mov
lds
sbb
cmp
push
push
mov
les
cld
pop
insl
pop
push
das
and
xlat
adc
adc
xor
dec
xchg
or
or
sbb
sbb
and
or
xchg
mov
add
dec
pushf
sub
test
rcrb
jp
mov
mov
shlb
cmp
mov
sub
jo
mov
jge
or
add
test
cmp
sbb
sti
sti
sub
jle
test
loopne
xacquire
shl
adc
subb
xor
dec
xchg
js
mov
cli
es
push
pop
push
inc
xor
test
jb
nop
cld
nop
sbb
push
adc
pop
jecxz
leave
fisttpl
dec
jnp
lea
xor
add
push
adc
sub
or
dec
sbb
mov
mov
adc
mov
push
sbb
dec
test
nop
sahf
sbb
sub
xchg
mov
sub
jl
in
adc
jmp
sub
pop
pop
test
out
xor
pop
arpl
sti
add
and
xchg
mov
addl
call
pop
pop
int3
fsts
out
dec
jp
inc
aad
inc
inc
test
sti
add
jnp
jne
call
fstpt
leave
sti
sbb
ljmp
lea
mov
aam
dec
shr
sbb
and
mov
mov
ret
or
inc
in
iret
xchg
outsb
and
mov
movsb
test
shll
popa
cmpsb
sti
sbb
lahf
ja
out
and
mov
movsl
cmp
popf
sahf
repz
adc
stos
jge
outsb
push
scas
nop
inc
jns
mov
inc
adc
pop
dec
and
mov
jmp
fiadds
push
add
nop
stos
ja
pop
mov
cmp
pusha
dec
frstpm(287
js
mov
call
jae
and
mov
rol
popf
jecxz
add
clc
inc
incb
popf
mov
jmp
pop
inc
cmp
mov
push
out
rorl
or
int
test
sbb
and
fsubrs
pop
mov
loopne
pop
cli
addr16
sbb
xor
pop
lds
fidivrl
cmp
je
adc
push
addl
and
pop
jne
gs
insl
inc
popf
mov
movsl
mov
cmc
int
std
aad
lds
adc
dec
gs
insl
inc
popf
mov
movsl
mov
cmc
int
std
aad
lds
insl
sub
int
push
insl
inc
popf
insl
lea
leave
in
cmc
fadd
sub
sub
gs
aad
inc
bound
movhps
inc
sbb
sub
cmp
push
add
arpl
xor
mov
mov
icebp
mov
out
xchg
rolb
push
add
aaa
pusha
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
and
push
add
aaa
pusha
daa
push
pop
inc
pop
mov
mov
xchg
in
ret
lock
xchg
and
pop
xor
sti
icebp
inc
out
adc
in
jmp
mov
xlat
rcll
xchg
dec
gs
daa
gs
inc
mov
ficompl
xor
xchg
xlat
or
sub
xchg
cmp
bound
mov
mov
ljmp
aaa
lock
sarb
dec
mov
xchg
push
push
and
push
in
push
jo
dec
aaa
mov
inc
push
mov
sub
adc
mov
shrb
int
fistps
cwtl
aaa
push
push
fdivs
xor
jg
loop
xchg
aas
xlat
enter
lcall
and
faddl
mul
rorl
push
roll
and
push
add
aaa
pusha
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
fs
adc
xor
popw
jb
ja
fwait
adc
test
lods
fidivrs
arpl
adc
js
pop
loop
int
call
fcoms
jmp
jae
and
xor
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
and
push
add
aaa
pusha
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
and
xchg
add
imul
inc
mov
cmpsl
out
stc
and
mov
xor
fs
imul
ja
imul
cltd
lods
aam
in
sbb
insb
and
dec
xchg
popa
push
adc
std
dec
cmp
pop
or
dec
pop
inc
and
jge
mov
stos
push
call
mov
mov
xlat
xchg
add
cmp
incb
nop
scas
cmp
xchg
rorb
jp
loopne
push
stos
pop
hlt
mov
cmp
pop
test
sbb
lea
mov
add
push
repz
pop
sbb
dec
inc
cs
jge
pop
cmpsl
fcomps
cs
insl
shrb
pop
loopne
xchg
and
insl
loopne
xchg
cmp
add
daa
mov
sbb
aad
clc
dec
mov
out
repz
ljmp
lods
xor
push
in
pop
mov
ret
add
cmp
mov
lods
add
xor
pushf
inc
mov
lds
in
sarl
mov
and
cltd
les
test
jge
jo
dec
std
push
call
in
leave
mov
xchg
push
and
iret
movsb
cmc
xor
test
mov
sub
adc
in
cwtl
push
mov
idivb
fstpt
hlt
xor
and
and
cmp
pop
sti
ss
out
popf
sub
xchg
sub
scas
cmp
jl
out
cmp
cld
mov
das
test
sub
ret
repz
mov
lods
call
or
mov
inc
das
sub
xchg
or
nop
and
dec
enter
imul
loopne
rolb
dec
out
jg
out
test
add
fucomi
ficompl
lds
push
mov
aad
sbb
inc
test
fwait
and
je
jb
pop
and
sahf
cmp
ret
addr16
out
adcb
pop
fsubl
or
xchg
mov
in
jne
in
nop
mov
adc
shlb
pusha
lds
lahf
adc
sub
popf
pop
cmp
dec
and
sub
push
scas
lock
pop
mov
or
push
sbb
push
xor
xor
mov
test
push
sbb
jo
adc
inc
adc
icebp
jnp
out
pop
js
dec
mov
sub
push
dec
aam
cwtl
adc
std
cmpsb
out
push
jae
fs
pop
mov
inc
dec
adc
jecxz
and
adc
mov
push
sub
push
add
loopne
aas
lods
mov
jo
sub
jmp
in
dec
xchg
mov
outsl
xor
gs
dec
cmp
and
insl
mov
inc
loop
adc
and
mov
sbb
neg
xor
mov
ficompl
ret
xor
inc
sub
inc
lahf
adc
imul
ljmp
mov
fildl
sbb
pop
cld
imul
lcall
ret
shrl
mov
ss
jp
and
or
add
fldenv
in
push
xorl
lret
jge
and
cmp
or
mov
dec
dec
test
outsb
sahf
mov
dec
dec
popf
sbbb
cmp
push
scas
movsl
fidivl
and
and
dec
mov
and
mov
and
out
dec
pop
sti
or
push
push
icebp
sub
add
cmp
sarb
mov
mov
xor
aaa
push
pop
ret
lods
sbb
xchg
sbb
bound
roll
push
cmp
icebp
sub
or
jb
lock
pushf
xor
mov
lods
iret
shrd
hlt
fs
js
xor
dec
hlt
cld
cwtl
inc
js
mov
arpl
cmp
in
dec
fisubrl
movswl
push
cmpxchg
xchg
mov
mov
xchg
pop
add
testb
or
call
jae
call
and
jae
pop
fs
int
inc
xchg
mov
lcall
cmp
icebp
stos
shr
pop
dec
movsl
cmovl
aad
fildl
push
pop
pop
pop
adc
cwtl
cmc
xchg
shr
push
adc
cmpsl
cmp
xchg
arpl
xchg
or
xchg
shl
sub
pop
movsb
xchg
mov
negb
jbe
pop
adc
cld
mov
inc
or
imul
daa
test
mov
rcrl
jle
add
sti
jl
out
dec
xchg
repz
pop
cmp
fmull
sbb
push
je
or
add
insl
aad
inc
orl
lods
sub
scas
mov
addr16
sbb
in
call
pop
pop
dec
inc
pop
out
sbb
mov
inc
lret
and
add
lahf
pop
andl
jg
and
xlat
push
int
stc
or
repnz
push
movsb
cmc
mov
icebp
cmpsl
adc
xor
mov
add
xlat
je
test
lret
push
lock
mov
jle
test
loopne
dec
in
lea
push
imul
test
push
frstor
jl
es
aad
mov
das
fisubs
test
xor
inc
stos
call
stc
cmpsl
xor
dec
ret
jge
sub
jno
scas
out
mov
loopne
addr16
adc
inc
mov
mov
jl
ljmp
loope
pop
jo
call
push
clc
or
das
rcr
nop
inc
push
fildll
movsl
dec
call
lea
inc
xor
add
add
push
ljmp
or
nop
xchg
inc
js
bound
test
bound
push
dec
lock
cmpsb
fs
or
xchg
mov
mov
cli
jg
and
movb
call
push
stos
cmpsl
movsl
cmp
mov
lahf
ljmp
pusha
rcrl
enter
in
shlb
mov
into
aas
inc
add
shll
stos
test
add
cmp
icebp
cwtl
data16
mov
lcall
mov
arpl
adc
cmp
lret
mov
jnp
jo
inc
repnz
movb
cmpsb
lcall
pop
dec
repz
incl
inc
cmc
adc
and
inc
jle
rcl
sub
lock
push
fildll
cmp
xchg
rol
jp
xchg
xchg
cld
pop
and
sbb
leave
das
adc
push
lahf
adc
lods
add
bnd
outsl
push
xor
ljmp
cltd
aad
mov
cmp
fistpll
push
xor
xor
adc
or
cmp
adc
pop
popf
xchg
jmp
cli
and
popa
sub
outsb
fists
subb
mov
adc
push
aaa
mov
lea
sbb
lcall
fisubrs
sbb
sti
mov
dec
lods
stos
push
das
push
jbe
xor
hlt
jg
movsl
inc
rorl
sub
push
mov
cli
mov
jo
clc
sub
leave
xchg
jp
sbb
aas
adc
sbb
test
or
xchg
jo
xor
adc
cmp
pop
das
ljmp
and
cmp
dec
bound
in
push
pop
jmp
lcall
dec
adc
adc
add
scas
mov
scas
inc
cs
mov
pop
insl
sub
inc
mov
aam
jae
test
mov
out
or
out
mov
or
jbe
xchg
int3
in
inc
mov
insl
inc
repnz
mov
int3
imul
inc
clc
lcall
lret
xlat
popf
xchg
cmp
mov
mov
and
in
xorb
inc
arpl
pop
adcb
leave
mov
popf
fcompl
test
sahf
mov
or
mov
or
xorl
fists
leave
ret
push
cld
xor
gs
out
and
mov
dec
mov
pusha
lret
lret
int3
int
pmullw
orl
vsubsd
adc
push
jno
gs
cld
pop
popa
push
sub
int
call
pop
call
cmp
mov
pop
adc
lea
loope
xchg
shlb
xchg
aaa
into
rep
and
shrl
mov
outsb
sbb
hlt
jg
inc
and
ret
cmp
and
hlt
dec
pop
xchg
int3
orl
dec
add
mov
push
jbe
out
xlat
test
or
inc
addl
cmp
movsb
fildll
mov
stos
popa
add
sbb
mov
rol
sub
std
xlat
inc
rolb
sub
cltd
mov
js
arpl
insl
lahf
in
daa
xor
inc
pop
pop
jo
push
pop
je
movsb
jecxz
cmc
mov
mov
dec
xchg
or
jmp
sarb
or
add
das
cli
xchg
pushl
push
mov
ret
pop
mov
sbb
div
sub
dec
or
push
mov
iret
jg
fdivrl
sarl
rcrl
dec
inc
pop
out
mov
pcmpgtb
cmpl
movsb
mov
lahf
lea
scas
fs
inc
cmp
sarb
or
fiaddl
lods
inc
ja
mov
leave
pop
mov
fldenv
jmp
mov
rorb
mov
jmp
lcall
pxor
cwtl
imul
loope
fbld
jg
ja
sub
lds
sub
jns
scas
adc
ret
push
add
sbb
mov
dec
or
xor
mov
int
mov
jecxz
mov
jmp
cmp
ja
xchg
scas
call
xor
fldl
cmp
out
mov
adc
pop
loope
xchg
int3
xchg
push
xchg
sbb
notb
jbe
jmp
fadds
rcr
pop
jno
loopne
push
push
mov
xor
mov
movsl
or
dec
imull
popw
test
mov
leave
add
mov
push
shl
jb
add
arpl
mov
or
jno
aaa
clc
test
in
stc
push
andb
mov
push
hlt
inc
dec
sub
icebp
xchg
int
mov
sub
push
hlt
cwtl
outsl
jmp
lods
add
and
sbb
sub
jl
sti
dec
or
gs
out
lods
test
insl
mov
int
mov
es
mov
or
mov
dec
adc
pop
jo
add
fwait
jg
inc
ret
pop
stos
pusha
jle
jo
aas
push
insb
inc
clc
stos
mov
ja
fwait
mov
lcall
je
insb
bound
shlb
inc
imul
lret
test
pushf
lock
cmp
xchg
mov
bound
push
outsb
or
mov
xchg
add
xorl
arpl
mov
pop
mov
lea
inc
test
sub
pusha
jno
aam
and
idivl
add
test
jns
out
call
popf
fsts
mov
repz
jno
enter
cmp
clc
adc
dec
adc
sahf
pop
xorl
loope
mov
xlat
jp
dec
xor
mov
and
push
xchg
sbb
outsl
mov
cltd
push
mov
shrb
or
ds
nop
jecxz
or
cmp
xchg
les
xchg
mov
orb
ret
dec
pushf
shll
popa
subb
or
mov
cmpsb
insl
fisubs
xor
lcall
insl
movsb
fs
stos
push
stc
scas
add
push
shrb
and
pop
mov
out
xchg
adc
sbb
popa
jbe
inc
add
dec
aam
inc
icebp
or
aas
lods
and
mov
mov
mov
push
fists
icebp
sti
ret
stos
ss
test
lea
xchg
push
or
inc
fstpt
leave
pushf
jne
jns
imul
adc
leave
jge
fs
push
jp
mov
pop
cs
test
ret
adc
pop
cmc
mov
les
sbbl
cmc
fndisi(8087
sti
or
jle
std
lea
jno
inc
cmpb
pop
fisubs
lret
int3
aad
cmp
inc
mov
push
test
fwait
or
xor
notb
jb
push
or
sbb
lods
jns
mov
in
and
scas
cmp
push
mov
push
shrl
subl
push
movsl
fdivrs
outsb
dec
sub
daa
jo
scas
or
sbbl
xor
mov
push
cmp
aaa
scas
stos
xchg
lds
insb
je
inc
aas
out
sub
and
jbe
out
or
fdecstp
xor
xor
jae
xor
shlb
adc
popa
pop
sub
loopne
mov
jnp
or
cmp
jp
mov
mov
cwtl
dec
inc
mov
bound
fwait
rorb
cmp
mov
loop
push
cmp
mov
cltd
int3
add
sbbl
adc
fucom
loop
mov
xor
notl
push
mov
out
insb
pushf
mov
ss
xchg
js
outsb
xchg
or
xchg
adc
dec
ret
call
mov
inc
push
jo
fs
cmp
jmp
mov
xchg
pusha
lcall
and
pop
and
cwtl
lods
xor
inc
pop
addb
add
pop
dec
mov
repz
fcoml
cmp
push
jp
and
sbb
and
adc
jo
mov
mov
mov
popf
sub
mov
fucomp
not
xchg
pop
xchg
jl
popf
jo
sbb
mov
xor
inc
xor
xor
fidivrs
nop
or
jns
push
sti
mov
test
rolb
stc
outsb
push
sub
ret
dec
lcall
mov
adc
inc
movsb
cmp
mov
xchg
popf
and
dec
in
lcall
cmp
sbb
dec
pop
xchg
outsl
jle
pushf
xchg
subl
push
out
dec
mov
and
test
lock
mov
push
adc
cmpb
cmp
pop
dec
or
fsubs
mov
sbb
in
ret
or
sbb
imul
push
enter
notb
imul
push
test
imul
roll
mov
ss
or
inc
mov
push
stos
test
shl
movsb
loope
inc
ljmp
dec
cmp
xor
sbb
push
xor
and
adc
sub
adcl
loop
cmp
ds
lret
push
fmull
rcll
mov
mov
cld
cmc
lret
and
les
and
or
add
arpl
mov
adc
xor
mov
repz
mov
sub
pop
sub
lret
ds
mov
fidivs
add
push
cmc
andb
sub
and
sbb
sub
int
adc
xchg
cmpl
loopne
sbb
notb
push
mov
add
or
mov
test
jmp
test
imull
add
cmp
popa
ja
pop
cmc
inc
adcb
pop
iret
xchg
pop
aaa
and
ret
nop
xchg
imul
xor
jnp
mov
test
lcall
mov
aam
std
xor
xor
clc
xchg
xchg
jle
mov
xor
imul
das
xorb
push
xchg
or
mov
fisubrs
add
push
pop
dec
fldt
add
pop
xchg
bound
in
cmp
rorb
out
int3
cmp
push
xor
js
test
shlb
or
cmp
das
xorb
pushf
cli
cmpsl
call
imul
sub
dec
repnz
jne
fbld
inc
lods
aad
nop
xor
icebp
notl
inc
icebp
jge
jb
mov
add
xchg
sbb
gs
xchg
aad
inc
imul
jno
leave
sbb
into
cld
dec
xchg
add
lahf
mov
gs
shl
shlb
imull
aaa
aam
out
mov
xor
ficoms
push
dec
aam
ljmp
mov
aas
sbbb
les
adc
repnz
lods
mov
cmp
pop
mov
js
cmp
cltd
insl
or
xchg
xor
pop
dec
sub
rclb
out
or
mov
mov
lods
aam
mov
fmuls
pop
scas
jp
jno
lahf
xor
pop
lcall
test
inc
and
push
test
loop
shr
mov
or
out
and
cmc
movsb
lahf
inc
jg
fmuls
pop
lds
aam
and
or
mov
mov
cltd
push
js
mov
ret
xchg
mov
mov
mov
mov
bound
and
shlb
ja
inc
cmpsl
mov
xchg
test
test
mov
sbb
arpl
je
dec
ss
orl
outsb
or
jnp
cmp
sub
ds
fdivr
cmp
and
and
pop
lret
push
xchg
sub
inc
testb
into
pop
je
lret
and
imul
sar
push
mov
cli
cmp
push
inc
sbb
push
stos
int3
outsb
mov
cmpsl
outsl
imul
cli
in
orl
inc
int3
test
pop
in
jp
ljmp
fidivrl
test
xchg
hlt
and
mov
pop
dec
mov
mov
jo
das
inc
hlt
sbb
in
aaa
test
dec
jnp
add
das
mov
lahf
adc
test
int
xor
enter
je
sarb
mov
ljmp
mov
cmp
add
lods
rolb
imul
adc
xchg
add
add
mov
add
cmp
out
mov
jge
add
mov
je
outsb
stos
pop
dec
cmp
inc
lea
cmpsl
loope
data16
rdpmc
pop
dec
int3
cmp
ret
xor
jno
roll
xor
testb
fdivrs
push
pusha
sub
ss
sbb
cltd
clc
out
dec
adc
jae
scas
iret
lret
mov
jl
sti
add
pop
data16
incl
mov
push
fdivrl
cltd
subb
jne
loop
rcrb
jns
pop
inc
jo
push
js
push
lcall
pop
pushf
xchg
sbb
mov
mov
sti
xchg
data16
sbb
jg
push
lds
cmp
aam
shlb
ret
notl
pop
mov
out
push
in
lock
jne
lds
call
inc
into
test
dec
pop
lcall
mov
cmpsl
jbe
insl
std
push
jo
fmul
mov
repnz
test
scas
mov
inc
ja
push
push
out
xor
test
xchg
cmpsb
ret
scas
pushf
lock
rclw
mov
cmp
scas
dec
adc
in
xchg
mov
les
mov
pop
mov
mov
addps
std
addl
sarl
scas
cmp
movsb
add
int
adcl
dec
leave
fsubrl
in
in
adc
ffreep
dec
lahf
out
adcb
xchg
push
cld
cmp
cmp
mov
xor
popa
dec
inc
fstpl
jle
jmp
mov
shrl
pop
cmp
push
out
or
data16
in
push
inc
cmp
cli
andl
jge
fwait
repnz
mov
xchg
mov
mov
inc
cmp
aaa
mov
xor
out
mov
cmpsl
scas
mov
xchg
enter
lcall
sbb
cmpl
pop
jns
lahf
cwtl
dec
inc
inc
pushf
xchg
mov
mov
ljmp
mov
repz
stos
mov
mov
insb
push
dec
cli
xchg
int3
mov
jmp
sub
mov
jp
lret
scas
mov
mov
push
je
std
jmp
repz
inc
xchg
or
pusha
vmovlpd
into
setg
dec
int3
mov
in
or
hlt
ja
push
dec
andl
lret
jp
movsb
sub
pushf
jmp
sbb
aad
dec
add
lds
sbb
loope
cmpsl
lock
mov
pop
inc
test
lret
jns
pushf
adc
gs
pop
push
loope
push
push
cmp
dec
testl
es
sahf
xor
add
es
mov
ss
push
xchg
mov
out
jbe
movsb
xor
inc
jg
jo
or
rcl
mov
gs
movsl
cmp
das
xchg
imul
sub
inc
xchg
ficoms
xor
sbb
mov
push
imul
dec
cli
sub
iret
movsb
movswl
scas
dec
jge
adcl
push
cmp
and
lret
jl
bound
lret
ret
sbb
int3
or
sub
adc
jae
rcrb
jge
call
jecxz
js
adc
mov
rol
shrl
lret
fimull
outsb
mov
jo
jg
xor
push
in
loop
xchg
cs
stos
das
pop
cmpsb
adc
jb
dec
popa
nop
mov
xchg
je
out
mov
in
out
add
inc
jo
pusha
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
and
push
add
aaa
pusha
daa
push
pop
inc
pop
mov
mov
lock
cmpsl
rclb
and
push
add
aaa
pusha
daa
push
push
inc
pop
mov
mov
lock
cmpsl
rclb
and
push
add
aaa
pusha
cmpsl
push
xchg
inc
clc
mov
mov
mov
aas
push
js
lcall
xchg
test
mov
loop
sbb
or
sub
dec
dec
jg
outsl
push
lcall
iret
lret
out
xchg
pop
sbb
or
cmp
sub
dec
dec
jg
outsl
push
lcall
iret
lret
out
ljmp
dec
dec
pop
push
cmp
cmp
push
sbb
jmp
stos
sar
cwtl
iret
adc
fs
xlat
stc
and
xor
pop
les
icebp
sub
inc
out
das
iret
dec
add
pop
loopne
outsb
xor
das
rorb
pop
dec
subl
cmp
in
aad
out
mov
sbb
mov
das
arpl
dec
cld
ljmp
lahf
fildll
std
mov
xor
cmpsb
nop
out
adc
in
cmc
fidivrs
dec
mov
jo
imul
or
cmp
push
daa
and
inc
add
pop
inc
mov
movsb
cs
iret
dec
cmpb
mov
stos
push
ljmp
ljmp
iret
ret
mov
jp
jg
lcall
iret
lret
out
ljmp
das
sub
dec
dec
jg
outsl
add
sahf
in
lret
stc
mov
mov
mov
dec
pop
push
fstps
push
das
sbb
pop
and
sti
out
out
stos
mov
xchg
stos
mov
push
dec
test
sub
sub
add
stc
enter
hlt
iret
lret
out
ljmp
das
sub
dec
dec
jg
outsl
push
lcall
iret
lret
out
ljmp
das
sub
dec
dec
jg
outsl
push
lcall
clflush
test
repz
jbe
jle
inc
rcr
mov
cmp
call
inc
fnstenv
push
jp
cmp
add
xor
adc
mov
cmp
insl
lahf
sbb
test
or
insl
fisttpll
and
mov
fimull
lods
mov
sbb
push
or
push
fisttps
sub
fs
pusha
sbb
and
jb
jns
out
cli
in
and
stc
cs
lea
fstpt
add
xchg
push
mov
loope
sbb
jecxz
movsb
sbb
lcall
ds
cmp
pushf
hlt
shlb
mov
and
test
jmp
repz
out
outsl
icebp
xchg
sbb
adc
sub
fstps
and
out
push
or
test
mov
sub
es
xchg
mov
pop
xlat
mov
outsl
out
test
pop
nop
lcall
xor
lret
and
dec
mov
int
lods
xchg
jecxz
pop
pop
pushf
mul
out
adc
cmpsl
scas
jp
movsl
mov
test
jecxz
sbb
xchg
aas
fiaddl
stc
pop
stos
inc
and
iret
mov
test
fistps
sbb
push
insb
fdivrl
mov
push
lea
int3
lret
sub
pop
mov
out
fisubs
xor
add
jmp
push
xor
jns
adc
lahf
cld
out
fwait
rclb
rclb
and
int3
sbb
add
push
cld
mov
sub
cmp
xchg
mov
daa
lcall
mov
das
push
mov
cmp
lahf
out
inc
mov
xchg
addl
shrl
xchg
xchg
push
ja
xor
xchg
sub
xchg
mov
rcr
loope
loope
jbe
sarl
dec
out
sti
rclb
push
movsb
adc
imulb
mov
stos
bound
fldcw
stc
sbb
cs
mov
xchg
push
popf
mov
scas
cltd
cli
icebp
sbb
js
push
fsubl
pop
xchg
pop
addr16
push
mov
mov
push
mov
jmp
lods
aas
cmpsl
in
popa
js
clc
pushl
pusha
and
iret
sub
lret
pushw
ret
dec
dec
inc
lahf
xor
das
cmp
out
jl
fnstcw
sbb
movsb
mov
push
xchg
mov
nop
stos
inc
mov
mov
xchg
xchg
mov
in
jg
mov
inc
in
das
cmp
xor
xor
mov
mov
scas
and
fcomps
lds
dec
daa
lcall
cmp
dec
in
stos
xchg
or
adc
adcb
loope
cmpl
mov
repnz
rcll
call
jbe
lds
in
xor
fwait
nop
jmp
fldl
iret
roll
xchg
bound
adc
cmp
iret
int3
mov
repz
bound
mov
fdivs
mov
lods
push
cmp
sbbl
push
shr
mov
insl
mov
loope
ret
out
cmpsb
test
pop
mov
pop
jecxz
test
adc
cli
dec
sub
rclb
mov
push
fsubrp
adc
cwtl
sub
fdivl
dec
aam
mov
fninit
jo
test
cmpsl
push
mov
outsb
pop
sub
mov
mov
ret
lods
lcall
sub
jmp
lods
pop
shlb
dec
push
addr16
fdivl
imul
das
stos
out
lds
push
bound
pop
iret
into
xchg
xchg
push
jb
jnp
dec
movsl
jo
and
enter
fiadds
add
ja
xchg
dec
scas
adcl
and
and
or
sub
jg
inc
xchg
cltd
daa
sub
rcrb
insb
mov
imul
jmp
popa
iret
lods
mov
jno
je
jmp
push
cmc
jge
jecxz
cmp
lcall
xchg
xchg
push
nop
push
popl
sub
lret
jne
push
mov
dec
and
in
les
in
cmpsb
pushf
jns
mov
test
jno
sub
stc
ljmp
add
sub
cmc
psrld
sbb
icebp
lcall
cmp
movsl
dec
xor
stos
inc
xlat
mov
mov
and
mov
pop
imul
push
mov
mov
mov
std
xchg
jp
sub
shll
lahf
out
xchg
movsl
or
adc
int3
out
mov
or
jecxz
cmp
mov
add
cmpsb
sbb
xchg
in
push
dec
int3
xor
nop
xor
aad
stc
mov
jbe
loopne
adc
and
out
mov
push
inc
xchg
xchg
sub
add
daa
pop
push
sub
pop
and
dec
sub
sbb
out
or
flds
fldenv
xor
fidivl
dec
pop
lret
stc
outsl
add
scas
ja
fcomps
movsb
push
inc
fisttps
add
adcb
or
sbb
dec
or
hlt
jl
jnp
xorb
jns
mov
cli
xchg
popa
adcl
orb
mov
imul
jb
add
and
in
xchg
adc
out
aad
out
stos
and
iret
pushf
loop
shlb
in
jmp
ja
lods
imull
shrl
std
push
cmp
and
ficomps
stc
addr16
cmp
xor
lea
push
add
and
dec
xchg
xchg
fnstsw
shll
loopne
fadd
sub
dec
aad
jmp
cmp
addr16
push
aas
repnz
jmp
jbe
sbb
idiv
sub
mov
inc
stc
xor
jae
cmp
or
jecxz
cmp
fwait
dec
fdivrl
in
addl
sub
dec
inc
loop
mov
sbb
test
aam
mov
push
je
cmp
bound
xor
mov
stos
dec
cwtl
aad
fisttpll
ret
data16
lcall
cmpsb
addb
add
das
loop
cmp
inc
xorl
cli
mov
shrb
insb
mov
mov
lods
ja
jge
out
mov
push
insl
jo
das
int
pop
ds
daa
icebp
bound
sub
mov
xchg
dec
fcompl
fadds
jae
mov
pop
outsb
mov
dec
outsl
jno
xchg
call
idivb
pop
fmul
sahf
ret
inc
lock
sahf
in
mov
pop
sub
push
lret
adc
push
stos
int3
sarl
sbb
cli
mov
popf
rcrl
xor
mov
xor
pop
mov
in
mulb
fstps
fs
fcoml
das
pop
int3
stos
sub
adc
inc
mov
nop
shlb
and
nop
cltd
cmpsl
imul
pop
xchg
dec
ffreep
xlat
dec
adc
pop
jge
scas
dec
mov
jl
psubw
lret
movsb
js
std
test
adc
dec
mov
pop
and
cmpsl
je
cmp
or
jae
int3
add
jle
jecxz
sub
sahf
mov
inc
subl
dec
mov
sub
push
adc
movsl
scas
adc
add
jns
pop
inc
cli
aas
xor
cmp
jae
lret
push
mov
std
xchg
imul
gs
daa
push
divb
popf
mov
sbbb
aad
push
outsb
sub
bnd
in
push
imul
fs
inc
jecxz
inc
cmpb
addb
or
je
add
fsubs
scas
call
inc
es
std
sbb
or
jle
in
imull
jmp
lock
aam
leave
adc
cld
arpl
adc
jns
or
pop
in
fwait
sbb
leave
outsb
push
mov
loope
adc
xor
pop
adc
jno
mov
jnp
lret
je
push
ret
jmp
imul
fimuls
popf
mov
jge
mov
and
in
movsb
xchg
pop
popf
jno
je
int
inc
and
test
gs
lods
std
cmp
lods
jmp
shr
xchg
fmuls
ret
cmp
xchg
lods
jp
jecxz
push
sub
dec
jg
dec
jno
aam
xor
jg
int3
repnz
scas
pop
xchg
rclb
pop
pusha
mov
pusha
xor
cmp
push
imul
cmp
or
ret
scas
adc
cmp
mov
aaa
insb
sub
push
rol
pop
call
add
mov
xor
test
jb
jmp
es
aaa
pop
mov
mov
in
rcll
cmpb
jae
xchg
push
mov
dec
pop
jo
xor
xchg
hlt
mov
jnp
or
jl
pop
jo
xchg
cmc
sbb
push
mov
sahf
jg
sbb
cmc
jge
mov
mov
insl
outsb
xchg
decl
popf
xor
xchg
je
dec
cmp
int3
leave
lahf
nop
mov
add
pop
mov
std
mov
push
shlb
incl
pusha
push
icebp
jb
push
scas
cmpsl
sub
dec
movl
pushf
dec
loop
mov
xchg
mov
pop
jne
int
jge
push
and
or
cli
jle
or
sbb
xchg
stc
sbb
rcr
lods
adc
cmp
mov
inc
sbb
mov
stos
jno
mov
bound
mov
xor
cli
jne
and
jns
xchg
xchg
push
std
xor
ja
lcall
nop
imul
lea
mov
in
cmp
ss
pop
imul
ss
mov
aad
adc
adc
in
jns
inc
loopne
insl
ljmp
out
imul
mov
mov
jae
data16
adc
andl
repnz
jne
pcmpeqd
pop
inc
adc
insl
sbb
pusha
mov
sub
jae
mov
orb
cmp
push
sbb
lret
cli
sbb
aas
pop
das
and
dec
xchg
sbb
mov
cmp
xlat
pop
notb
aas
mov
sbb
pop
mov
outsl
dec
mov
movsb
nop
xrelease
daa
push
adc
clc
or
mov
stc
les
clc
sub
hlt
xor
mov
loop
push
je
push
leave
dec
lea
mov
outsb
repz
leave
pop
addr16
mov
dec
or
mov
lods
push
and
xor
loope
stc
ss
xor
fwait
sub
inc
jnp
xlat
aas
mov
ja
mov
jae
cmpsl
sbb
fs
sbbb
mov
into
fidivs
jo
xchg
mov
in
mov
decb
repz
dec
mov
jl
in
lds
fwait
repz
add
stos
fcmovbe
out
mov
cs
sbb
insb
sahf
filds
sbb
or
es
cmpsb
inc
lea
jae
in
in
movb
adc
xchg
orl
popa
inc
idivb
mov
movsl
fdivl
cwtl
xchg
sahf
fimuls
push
inc
add
leave
add
pusha
inc
sub
mov
mov
or
xchg
test
cmp
rolb
fimuls
mov
out
mov
scas
out
pop
or
or
add
adc
mov
enter
cmp
mov
add
outsb
push
lahf
je
lret
push
inc
iret
adc
fidivrs
cmp
pop
push
jnp
jle
cmp
subps
cltd
sub
pop
sbb
out
xlat
test
stos
outsl
push
mov
popf
cmp
push
outsb
into
into
icebp
lret
lods
dec
xchg
lock
add
sub
jl
notb
repz
outsb
adc
push
adc
out
sub
in
jmp
mov
daa
lcall
test
je
pop
xchg
bound
loope
stos
out
mov
int3
push
mov
xchg
scas
add
imul
xchg
movsb
popf
sbb
xor
orb
out
mov
adc
pop
arpl
push
ljmp
add
and
lea
cmpsl
aas
cmpl
mull
push
pop
pop
fisubrs
inc
or
negb
jmp
sbb
shlb
in
shll
mov
and
in
pop
mov
ret
mov
testl
jb
int3
add
clc
xchg
and
hlt
xorl
jae
mov
cli
jno
xchg
call
jno
int3
cmp
or
and
adc
mov
and
xchg
pop
inc
cwtl
pop
leave
into
pop
push
cmp
mov
lcall
fdivrl
inc
dec
xorl
imul
jns
push
ja
aaa
xor
or
push
pusha
adcl
int
repz
jnp
push
cmp
loope
sbb
addb
mov
mov
mov
cmpsl
pop
sbb
push
mov
xchg
inc
mov
lods
cmp
stos
xchg
fsubr
fldenv
lret
rol
jno
mov
incb
clc
mov
and
xchg
pusha
fcompl
push
mov
int
xchg
ja
mov
jge
lds
or
jl
sbb
rorl
imul
xchg
mov
mov
stos
fistl
sahf
aaa
cmp
push
mov
pop
shrb
xchg
pop
sti
arpl
xchg
imul
lret
xchg
sub
jl
push
stos
mov
aam
and
pop
cmp
arpl
sub
cmc
idivl
inc
mov
movsb
call
out
pop
mov
push
dec
xor
mov
stc
test
sbb
cmp
rorl
ret
inc
repnz
sub
icebp
fildl
lds
sbb
in
mov
pop
fstpl
lock
inc
mov
xor
scas
ficoms
dec
pop
test
mov
cmp
push
scas
mov
les
mov
scas
and
mov
pop
cmp
sub
cld
adc
jbe
pop
jb
mov
aad
movsl
jmp
movsl
test
test
sbb
cld
aaa
out
push
int
xor
push
push
pop
jl
push
or
and
in
sub
add
stos
popa
loope
adc
and
es
xchg
xchg
jp
aas
pop
adc
sbb
and
xchg
sub
shlb
jg
out
dec
pop
push
dec
add
cli
outsl
lods
cmp
mov
mov
data16
frstpm(287
push
jae
insl
jo
outsl
loopne
push
pop
xchg
jle
mov
dec
xor
pop
xor
andb
icebp
adc
test
pop
xchg
js
dec
pop
rcl
lods
in
dec
roll
jle
sti
js
inc
ret
push
sbb
mov
and
hlt
insb
add
std
jle
dec
cmp
orl
lret
or
push
and
push
in
mov
pop
mov
push
xchg
xlat
sub
pop
and
orb
das
mov
xchg
imul
in
lods
aaa
mov
enter
insl
lods
push
push
lcall
loopne
icebp
push
ljmp
testl
int
mov
or
ss
fwait
rol
xchg
fsubr
rclb
xchg
pop
jl
push
sbb
fdivl
popa
dec
xor
fimull
gs
cmp
and
fmull
and
popf
push
fxch
sbb
std
ljmp
sub
pop
cmp
lea
or
insl
leave
arpl
cmpsl
dec
add
sbb
sub
mov
mov
and
insl
sti
jp
cmpsb
dec
push
lods
jns
call
dec
cmp
jmp
aam
lcall
add
in
xor
mov
imul
cwtl
imul
jne
leave
repnz
int3
xchg
push
das
es
xchg
pop
popa
std
sbb
xchg
jnp
lret
pop
pop
xchg
insb
pop
mov
xchg
cmp
stos
js
mov
in
mov
dec
es
in
ljmp
or
shll
or
call
cmp
enter
push
adc
enter
lds
dec
inc
enter
mov
inc
jns
imul
out
fs
adcl
inc
or
ficoml
iret
rol
fisubrs
xchg
or
and
lods
dec
adc
sub
xchg
lods
dec
and
push
mov
or
out
adc
aas
out
or
pop
push
cmp
popf
dec
and
js
and
test
ja
cmp
xchg
pop
pop
sub
clc
ret
push
addr16
pop
mov
xor
xchg
mov
jns
jne
push
and
or
mov
movsb
aam
pop
scas
inc
sbb
mov
jge
addr16
pop
inc
pop
rolb
pop
mov
dec
mov
shlb
leave
sub
push
xchg
push
inc
testb
int3
inc
sti
clc
into
dec
add
mov
ret
fiadds
movsl
mov
pop
mov
cmc
sahf
cmc
mov
fsubrs
jnp
fdivl
cmp
xchg
sub
cmp
xor
int3
sbbb
dec
mov
test
rclb
lea
adc
lahf
or
jecxz
ret
aam
popa
imul
popa
pop
idiv
aad
adc
sbb
shlb
mov
sbb
dec
fiadds
mov
sbb
cltd
xchg
mov
sbb
bound
jp
sub
nop
mov
ljmp
fcoml
lcall
xor
ja
add
pop
jno
sub
bnd
inc
imul
adc
mov
pop
pop
fisttpll
rcrb
aas
pop
mov
mov
xor
sub
sub
xor
xlat
sbb
icebp
pop
add
fwait
cmpl
or
dec
jns
test
ret
fstpl
dec
sub
ss
mov
mov
dec
int3
pop
enter
in
pop
inc
out
fwait
clc
aas
cmpl
leave
insl
adc
or
repnz
test
mov
loopne
ljmp
push
push
pop
inc
mov
sub
andb
out
xchg
cmpsb
mov
xchg
into
ret
push
mov
cmp
add
fimuls
ret
sub
test
xlat
adc
jg
hlt
lods
add
rclb
lret
insb
jns
xor
es
cmpsb
lods
cmc
sub
sbb
mov
push
xchg
cmp
cmp
fldl
loop
loope
xor
in
mov
sbb
in
dec
mov
jp
ds
out
push
call
sbb
sahf
xchg
aam
outsl
ret
and
add
es
aas
jg
arpl
cltd
push
sub
test
add
xorb
and
pop
inc
loopne
push
out
fcmove
push
in
mov
pop
sahf
and
js
imul
add
mov
mov
cmc
jne
dec
lret
mov
jecxz
xlat
mov
outsb
xorl
aam
sar
shl
adc
pop
int
insl
adc
dec
mov
fidivs
mov
mov
dec
fisubrs
lods
jb
sub
roll
push
mov
sub
cld
xor
dec
sbb
movntps
or
inc
cli
fs
push
gs
lds
push
enter
or
mov
cmc
and
pop
xchg
adc
rolb
loop
jge
das
inc
cwtl
std
rcll
adc
in
rcl
insl
xchg
stc
mov
mov
stc
call
int3
loop
mov
in
int3
rcrb
rorl
mov
mov
xchg
inc
or
ljmp
hlt
jl
ss
inc
test
int
mov
sub
xchg
or
pop
mov
fcmovnb
xor
loop
lds
mov
push
bound
mov
sbb
mov
inc
loop
cs
xor
pop
xor
jbe
mov
lods
in
fucomip
movsb
imul
pop
dec
loope
aad
mov
aad
dec
mov
pop
fldenv
add
fs
mov
inc
sub
popa
inc
movsb
sbb
and
jge
sarb
sti
testl
fs
sub
ret
movsb
arpl
leave
lods
jl
push
addl
cmpsb
ret
xor
push
loopne
push
mov
rorb
push
push
jo
adc
daa
mov
not
adc
cmp
or
loope
test
xchg
xor
dec
xor
daa
enter
leave
lret
jge
aad
adc
dec
lock
add
bound
adc
sbbb
xorl
cwtl
sub
int3
or
loop
mov
lea
fwait
cmp
iret
lret
out
ljmp
das
sub
dec
dec
jg
outsl
push
lcall
iret
lret
out
ljmp
das
sub
dec
dec
jg
outsl
push
lcall
into
lret
out
ljmp
sub
dec
dec
jle
outsl
push
lcall
iret
lret
outsl
ljmp
das
pop
sub
mov
test
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
leave
psubusw
jmp
cmp
mov
mov
or
xchg
ljmp
out
cmp
leave
psubusw
jmp
dec
mov
outsl
int
inc
pop
mov
jnp
sbb
sub
cmp
rorb
sarb
das
loope
nop
dec
cmpl
lods
jp
adc
insl
mov
push
inc
test
aas
mov
xchg
inc
les
dec
xchg
push
xchg
inc
adc
insl
outsb
jp
icebp
mov
push
leave
test
loopne
test
adcl
cmpsl
inc
cmp
and
inc
test
mov
ficompl
aam
cmp
lahf
dec
fistpl
add
lods
mov
lcall
es
push
das
stos
js
pop
mov
adc
xor
fisubrl
loopne
out
fists
rorb
cld
mov
fldenv
mov
xor
scas
jp
mov
cld
adc
repnz
jmp
inc
xchg
xchg
mov
fimuls
leave
aas
lock
stc
pop
mov
jg
outsl
mov
mov
adc
add
xor
cmp
jnp
push
mov
pop
mov
fcompl
insl
xlat
sbb
insb
iret
sbb
push
pop
lcall
pop
fnstsw
cmp
or
jnp
jns
sbb
leave
psubusw
inc
mov
jg
outsl
mov
mov
or
sbb
sub
cmp
leave
psubusw
jmp
dec
cltd
jg
outsl
mov
mov
or
sbb
sub
cmp
leave
sub
mov
add
xchg
addr16
cmpsb
call
jno
cs
clc
mov
mov
push
xorl
pop
jns
enter
or
pop
xchg
nop
jmp
data16
and
hlt
out
imul
sub
sbbb
pop
sbb
jp
movsb
les
jno
xor
mov
xchg
fcoms
or
gs
adc
jo
test
into
xor
mov
add
je,pt
pcmpgtb
push
test
mov
xor
subl
pop
or
jl
pop
mov
push
iret
outsl
mov
add
out
pop
out
xchg
fnstsw
jne
xchg
es
mov
stc
enter
out
add
mov
pop
loope
fbld
das
xchg
push
push
outsb
jge
mov
mov
jg
push
push
jle
lret
xor
fldt
test
jns
ja,pn
jge
push
imul
inc
dec
in
sub
insb
bound
jecxz
push
cmp
roll
jne
arpl
xor
ja
ficomps
push
ret
mov
sub
adc
std
cmp
and
iret
xchg
xchg
fldcw
sbb
pop
gs
jbe
xor
adc
daa
pop
add
mov
xchg
jecxz
xchg
into
xor
cmp
xchg
jg
sahf
add
jge
sbb
mov
mov
xchg
push
jp
and
xlat
mov
push
xorb
and
test
or
mov
push
inc
nop
xor
mov
iret
rolb
inc
sti
cmpsb
fmull
popa
enter
insb
in
call
repnz
mov
pop
sbb
push
cltd
cltd
aad
mov
mov
addr16
jnp
test
aas
sbb
movsb
pop
data16
popa
push
out
inc
mov
pop
inc
fcmovb
mov
into
inc
ret
bound
aam
shrb
mov
xor
cmp
in
bound
and
inc
test
add
fisttpl
xor
jns
jns
and
subl
xchg
je
jmp
stos
filds
jecxz
push
cmc
jno
cmp
xorl
sti
ds
das
inc
mov
or
add
hlt
loope
test
int3
sub
mov
jl
adc
pusha
inc
fistpl
jae
dec
pop
adc
push
cmpsl
or
inc
addb
jbe
iret
movsb
das
shld
pushf
mov
mov
push
or
pop
fisubrl
jns
mov
pop
addr16
cmp
and
mov
sbb
sar
cmp
ljmp
jbe
or
aaa
aam
movsl
mov
pop
sbb
loop
imul
jp
mov
push
jle
mov
mov
mov
in
and
lea
jne
scas
jno
into
xor
ret
jmp
jecxz
daa
and
loope
pop
sbb
sbb
sbbl
icebp
or
or
sahf
jo
movsb
cmp
shrb
jbe
pop
jg
pop
outsb
insb
fcompp
and
mov
push
jmp
jecxz
fdivs
inc
dec
push
leave
xor
ja
imul
ss
test
push
mov
sub
int
hlt
les
test
ret
xchg
mov
mov
jecxz
ret
into
mov
push
je
aaa
pop
sbb
pop
push
es
lret
mov
inc
fs
and
sbb
pop
pop
dec
xchg
nop
insb
cmpsl
push
xchg
jecxz
jo
xor
push
or
inc
sbb
xor
xchg
push
sub
mov
pop
lahf
cmc
jl
mov
int3
shlb
div
or
adc
pop
push
leave
adc
cmpl
mov
cmovbe
add
or
pop
out
mov
xlat
mov
rcll
inc
mov
xchg
add
jb
dec
mov
push
adc
mov
orb
mov
cmp
cmp
test
cmp
loopne
ljmp
inc
js
pop
add
in
lcall
loope
lock
push
bnd
add
mov
xor
packssdw
jno
cmp
shll
sbbb
cwtl
cwtl
dec
push
xor
jb
outsl
sub
xor
cmc
mov
or
xchg
mov
xor
pop
add
xchg
int3
ja
add
mov
lods
mov
cltd
lea
pop
imul
jb
roll
xchg
aam
pusha
push
insl
xchg
inc
dec
mov
xorb
subl
jmp
xor
iret
lods
mov
ljmp
mov
stc
aaa
ret
mov
sahf
cltd
scas
test
je
nop
adc
dec
loop
dec
and
fimull
fists
sub
jl
and
mov
pushf
xchg
aad
dec
xchg
cmp
into
xchg
stos
aas
xchg
cmpsb
mov
loopne
inc
push
dec
ss
push
cmpsl
iret
pop
mov
incb
pop
outsl
ds
sbb
repnz
sub
pop
jne
xchg
sub
ss
pop
pop
sub
lds
ds
push
mull
sbb
mov
mov
add
cmpsb
bound
mov
add
out
fcoms
mov
adcb
pop
xorb
ss
fldcw
lcall
sub
cwtl
pop
mov
jne
hlt
movl
call
xchg
adc
divb
mov
jle
adc
xor
lods
shlb
subb
cmp
addr16
or
dec
inc
mov
add
push
mov
xlat
mov
and
push
adc
push
sbb
mov
xor
pop
xor
add
scas
int
imul
push
inc
sub
ret
js
sbb
jbe
shr
mov
sub
ds
xor
movl
mov
jno
arpl
sbb
daa
mov
mov
sbb
jl
inc
fistpll
jne
aam
insb
adc
call
out
cld
stc
jl
test
lahf
hlt
mov
inc
pop
pop
orl
fildll
or
jmp
pop
sahf
add
adc
into
mov
test
iret
stos
aas
ja
mov
jge
aad
shufps
cmp
xchg
aas
xchg
insl
sbb
push
mov
inc
xchg
cmc
cltd
subl
es
movb
mov
mov
add
adc
xchg
and
and
aaa
mov
and
stos
mov
lds
addr16
ja
shlb
dec
sub
cmpsl
mov
fucomi
pop
and
fnstenv
bswap
xor
inc
inc
mov
cmc
add
or
jle
ljmp
xchg
dec
clc
mov
adc
shr
ljmp
xchg
ficomps
fwait
push
sub
ja
mov
and
add
cmp
dec
adc
shlb
or
and
scas
or
mov
mov
sahf
mov
out
fisubrs
sbb
pop
je
cmp
shrl
into
or
or
outsl
jl
pusha
sahf
sub
sbb
dec
scas
sbb
xchg
notl
push
js
nop
xor
inc
xchg
push
pop
jb
stc
insb
outsl
call
sub
ss
popf
pop
loopne
sbb
test
mov
paddsw
cwtl
pop
mov
pop
mov
and
std
or
in
xchg
stc
pop
mov
test
aam
mov
pop
inc
sbb
ret
in
adcb
inc
pop
repz
pop
adc
and
inc
insb
gs
addr16
icebp
popf
jle
cmpsb
xor
lock
mov
aas
sarb
ds
pop
xchg
stc
out
xchg
gs
xor
and
test
pop
sbb
jbe
jmp
xchg
mov
enter
popf
mov
out
adc
data16
jmp
punpckhwd
xor
mov
add
mov
cmp
aas
push
fs
xor
xor
or
mov
jns
test
xor
es
xchg
mov
add
cltd
lds
cld
icebp
popf
jge
faddl
jmp
ror
push
add
fisubs
add
jg
jle
ds
inc
jo
xchg
adc
icebp
flds
imul
mov
sub
out
call
and
out
ret
jo
mov
nop
push
xchg
mov
xor
ret
jg
scas
push
enter
and
lock
xchg
std
shlb
jl
outsl
loope
inc
dec
push
sbb
sub
cwtl
inc
aad
outsl
movsb
sahf
pop
mov
rorl
arpl
cmc
sub
mov
mov
bound
dec
xorl
adc
cld
lods
xor
mov
push
xor
mov
dec
mov
xchg
sbb
jge
pop
insl
mov
xor
adc
mov
enter
stc
push
aad
pusha
dec
test
dec
and
jb
cltd
call
adc
push
inc
test
gs
lcall
test
iret
in
popa
mov
dec
cmpsl
push
sub
cs
mov
je
sbb
xchg
dec
inc
jns
add
or
inc
mov
xlat
outsl
pusha
pop
test
aam
mov
int3
inc
ljmp
inc
out
pop
mov
test
in
dec
gs
jmp
shll
jmp
fucomp
popf
xor
xchg
idivl
mov
cmp
jecxz
mov
movsl
jo
fisttpll
movsl
imul
push
das
and
lret
je
subb
inc
std
dec
xor
or
xor
and
xor
cmp
sub
dec
mov
aaa
scas
jnp
jbe
xchg
and
repnz
leave
adc
mov
in
scas
cmp
jns
mov
jp
hlt
call
arpl
cmp
pop
mov
mov
stc
scas
push
sti
lds
loopne
push
jne
sub
icebp
mov
xchg
and
shrl
sbb
fdivr
call
jmp
out
lahf
sahf
and
imul
sahf
fs
add
mov
cmp
inc
and
aad
jge
daa
xchg
sahf
ror
xchg
in
sarb
mov
in
pusha
inc
stos
ja
or
hlt
outsb
sub
pop
xor
imul
adc
push
push
mov
push
scas
outsl
dec
cmpsb
xchg
testb
fs
insb
sub
leave
fisubl
push
adcl
movsl
inc
lea
push
push
repz
lret
scas
pop
mov
fcom
daa
sbb
dec
stos
or
dec
inc
mov
push
scas
push
scas
dec
dec
xchg
leave
cwtl
add
out
push
pop
lret
mov
pop
mov
cmp
and
popf
into
bound
mov
dec
aaa
pop
sub
fisubs
mov
ret
sarl
int3
mov
pop
clc
cltd
sub
pop
daa
or
gs
dec
fmul
inc
mov
popf
mov
or
adc
sbb
movsl
xor
int3
xchg
rorb
adc
adc
mov
scas
add
sti
mov
lods
int
push
sbb
cmpsl
cmc
into
lret
or
pop
pop
adc
mov
mov
popa
sub
rcrb
xorb
int3
inc
loop
adc
push
and
sbb
fsubl
jle
stc
shrl
test
jnp
xor
aaa
mov
test
nop
imul
xor
cmpsl
outsb
jmp
incl
inc
rcll
pop
mov
aam
cmpsb
dec
fs
mov
jge
aad
and
imul
and
inc
jecxz
gs
dec
je
xchg
movb
daa
repz
ret
pop
std
test
add
test
scas
pop
mov
imul
std
das
push
lods
repz
sbb
push
dec
lods
pop
popa
sub
sbb
es
jmp
test
push
outsl
ror
sahf
sub
xchg
imul
cltd
cmp
adc
fninit
fdivp
jne
loopne
cmpsb
xor
inc
jp
jns
and
repnz
jle
or
popl
outsl
add
mov
cmp
sbb
cld
mov
repz
aas
fstpt
push
push
and
mov
hlt
fs
vmovups
lock
inc
stc
jp
arpl
in
fwait
es
fldenv
dec
add
add
pushf
cmp
cli
roll
push
je
sub
mov
jl
dec
xchg
mov
fwait
xchg
jle
iret
mov
call
adcb
or
jl
mov
hlt
adc
push
jbe
std
dec
andb
pop
add
xlat
fldenv
cld
std
xor
in
xorl
jle
pop
fdivl
fs
and
xchg
repz
adc
dec
icebp
push
jae
ret
add
cltd
lds
shll
inc
push
mov
inc
and
out
mov
mov
push
dec
cmp
xor
mov
jecxz
mov
or
jmp
xchg
into
lds
mov
in
sub
adcl
lret
fldenv
inc
pop
movsb
movsb
or
pop
jp
sbb
sbbl
push
dec
pop
xchg
imul
test
hlt
push
fcmovnbe
mov
mov
pop
inc
pop
aad
and
jge
nop
loop
pop
in
mov
mov
mov
jmp
pop
jbe
dec
cwtl
and
cli
jno
cli
lcall
pop
outsb
pop
fildll
pop
repz
add
and
or
cli
inc
in
xor
insl
hlt
movsl
pop
scas
xor
xor
imul
aaa
xor
loop
push
push
rcrb
int3
addl
rcr
sub
sti
test
mov
inc
or
push
mov
imul
jmp
imulb
jge
js
lcall
out
push
daa
divps
fldt
sarl
sub
rclb
add
push
mov
fdivl
push
gs
call
aas
es
sbb
cmp
jbe
mov
pop
xor
scas
sbb
xchg
jo
jmp
lea
add
jecxz
cs
dec
xor
sbb
jl
js
dec
mov
pusha
add
loop
ja
mov
mov
jo
lods
shll
push
mov
int
push
cli
out
sub
loop
mov
sbb
push
arpl
cmp
or
aad
fistpll
scas
gs
cld
mov
mov
xchg
fdivl
jae
lock
ljmp
jae
adc
stos
bound
sbb
cmc
clc
mov
and
mov
jmp
jmp
dec
add
and
lret
jbe
arpl
push
popa
xchg
cwtl
clc
push
sbb
push
cmp
lods
sbb
xchg
or
push
out
test
inc
int3
pop
daa
arpl
pop
mov
sbb
xor
xor
xchg
sahf
xchg
xchg
vmread
xchg
sbb
and
inc
arpl
loope
add
inc
loop
out
out
inc
mov
test
ret
xor
lods
repnz
jb
mov
ds
pop
fwait
scas
sub
cmp
fiadds
test
cs
or
and
pushf
hlt
mov
cltd
sti
mov
insl
cli
mov
cmp
dec
xchg
xchg
xor
fmuls
add
xor
jecxz
insb
fldlg2
xlat
mov
pop
xchg
pusha
scas
fisubrl
enter
xor
adc
and
cmpsb
dec
ret
repnz
ljmp
insb
mov
cli
fbstp
int
fwait
test
lcall
insl
movsb
push
jae
cltd
hlt
pop
xor
xchg
out
jge
cltd
in
inc
sub
xor
sbbl
in
negb
inc
push
scas
cwtl
xchg
jl
cmpsl
stc
aad
dec
test
pop
repz
xor
mov
add
pop
int
adc
sbb
leave
jge
ja
cmp
repnz
movsl
adc
and
pop
leave
addr16
fstpl
sub
sub
or
roll
loope
lea
inc
or
and
lea
mov
lock
cmc
and
rorl
cmp
mov
clc
out
cmpsl
clc
ljmp
jmp
push
lret
arpl
push
mov
std
jo
pop
jns
out
mov
rcrl
nop
inc
xor
adc
xor
movsb
icebp
fnstsw
cmp
shrl
adc
ret
jae
adc
dec
or
or
push
std
xchg
xchg
lock
cmp
outsl
inc
dec
lea
mov
xor
cmp
inc
add
or
inc
pop
imul
lcall
and
mov
and
xchg
inc
mov
mov
adc
mov
adcl
jmp
pushl
fsts
jge
dec
repz
add
rcrb
sub
dec
dec
add
sahf
subl
ret
shl
pop
fimull
int3
popa
ds
inc
es
jbe
inc
shll
jae
push
cmp
jl
pop
push
stos
adc
cmc
add
and
sbbl
hlt
lods
pop
xor
jae
das
mov
xor
jnp
loop
addl
mov
cwtl
es
ds
mov
lds
push
push
push
inc
inc
iret
add
add
push
mulb
pop
push
scas
pop
pushf
and
or
mov
jnp
movsb
aaa
insl
subb
repnz
jns
push
stc
xor
adc
xor
movsl
or
cmp
into
in
cmp
lock
mov
lahf
mov
test
inc
xorb
add
mov
mov
data16
movsb
push
cltd
test
mov
cwtl
dec
and
add
xor
popf
icebp
pop
and
aad
adc
imul
push
sub
xor
mov
mov
mov
push
mov
or
mov
mov
xchg
xor
fdivs
inc
imul
push
sar
push
mov
pusha
or
aad
xor
mov
fdivrp
push
popa
xchg
xor
push
es
popf
mov
das
add
jo
lret
inc
xchg
add
and
mov
and
hlt
jns
ss
enter
or
cli
je
movsb
push
dec
test
push
sti
xchg
dec
pop
lock
cmp
mov
push
and
in
dec
or
mov
pop
fnstsw
arpl
xor
mov
add
in
out
into
or
into
jno
inc
adc
dec
das
add
paddd
jb
or
sti
pop
push
push
loopne
movsl
imul
call
leave
inc
xchg
fstps
jmp
js
out
movsl
push
jle
daa
pushf
shll
add
push
xchg
pop
lods
inc
push
insb
lret
movsl
test
cmp
mov
push
jp
sbb
mov
movsb
sbb
movsb
mov
sbb
and
fs
dec
sbb
cmpsl
adc
pop
pushf
sbb
pop
jo
jle
pop
or
xor
sub
cmc
mov
pop
cmp
scas
fldcw
mov
je
sahf
xor
cmp
inc
movl
scas
das
mov
xorb
icebp
repz
insl
xchg
mov
jno
sysexit
jl
es
push
jg
add
mov
aad
lret
out
adc
cmpsl
out
fs
mov
int
fs
fwait
sub
jg
adc
pop
add
sbb
jl
sahf
out
shlb
jl
inc
call
iret
xchg
movsb
cwtl
push
gs
fsubl
sbb
or
cli
test
jns
inc
cmp
loope
dec
mov
adcb
in
jge
cmpsb
test
fucomi
sub
addl
dec
mov
push
add
in
jg
xchg
sbb
scas
mov
cs
cs
test
or
out
jne
stc
xchg
movsl
adc
cld
popa
push
imul
scas
mov
std
xchg
cmp
push
and
fldenv
and
xor
mov
jg
inc
cmp
mov
popf
mov
and
addr16
and
pushf
mov
lock
xchg
dec
in
xchg
xor
push
or
xorb
loopne
leave
test
enter
mov
cld
xchg
lods
fucomi
bound
jle
jg
imul
add
mov
out
sub
mov
int
push
repz
negb
and
scas
mov
out
test
xor
or
push
add
ja
sbb
mov
test
push
jp
jnp
sbb
mov
loope
jp
pushf
pop
mov
push
sbb
mov
lock
push
ret
push
inc
fadd
jne
stos
or
jl
pop
in
xor
in
or
jnp
sbb
test
test
andb
xchg
inc
xchg
out
jg
dec
xchg
int
rorb
das
mov
rorl
enter
add
pop
insl
and
sbb
cwtl
icebp
fnstcw
jmp
dec
cltd
jg
outsl
mov
mov
or
sbb
sub
cmp
leave
psubusw
jmp
dec
cltd
jg
outsl
mov
mov
or
sbb
sub
cmp
leave
fnstcw
mov
jg
out
mov
mov
or
sbb
sub
paddusw
in
das
stc
pop
mov
jg
outsl
jns
dec
repz
cmpl
stos
pop
fimull
aaa
fwait
pop
lret
jl
insb
scas
stc
mov
leave
dec
mov
sbb
ljmp
sub
stc
jp
push
push
leave
dec
mov
sbb
sub
inc
dec
mov
sbb
jmp
cmp
imul
outsb
xor
cmp
xchg
sbb
dec
cmp
xor
xor
mov
inc
repnz
aad
lods
scas
les
adc
jne
test
xchg
push
movsl
dec
sbb
mov
inc
adcl
cmp
push
sar
jnp
jp
pop
mov
cld
into
dec
int
cli
push
lret
cmp
stc
stc
mov
dec
inc
das
shll
sub
pop
xor
jno
orb
jbe
pop
adc
mov
jns
pushf
xchg
scas
test
pop
out
orb
mov
cltd
mul
pusha
daa
jbe
lret
dec
lret
sub
stc
jp
ret
leave
jbe
push
test
cmp
cli
add
push
pop
pusha
jl
dec
int
cmp
sbb
jge
inc
arpl
sbb
call
or
cwtl
or
jmp
mov
mov
cmpsb
cmp
sub
stc
jp
push
pop
leave
dec
mov
sbb
ljmp
sub
stc
jp
push
pop
leave
dec
mov
sbb
mov
jecxz
test
nop
xor
fidivs
fcompl
xchg
pop
inc
adc
ret
hlt
out
nop
cmp
pushf
xchg
adc
jns
insb
or
xchg
xchg
cli
mov
les
aam
cmpsb
or
std
jecxz
lods
push
int
movsb
adc
or
aam
xor
inc
mov
rolb
xchg
jmp
and
xor
and
pop
adc
mov
ret
fidivs
std
loopne
xchg
xor
stos
bswap
xchg
jmp
push
jge
mov
push
filds
push
iret
loop
mov
cmp
mov
and
dec
loopne
sbb
pop
push
mov
sbb
jne
cmpl
fldl
sbb
pushf
cmp
sub
jg
inc
mov
loope
jmp
ss
xlat
dec
push
sbb
leave
and
leave
repnz
cltd
icebp
rorl
js
add
xor
repz
and
add
sbb
sub
js
cli
mov
and
outsw
out
subl
test
or
repz
jp
scas
pop
bound
js
enter
aas
in
mov
inc
jle
int3
xchg
stos
movsl
aad
dec
cwtl
rorl
bswap
pop
mov
add
xchg
in
add
and
cmp
repnz
xchg
xor
decl
xchg
and
push
roll
pop
sbb
mov
cmp
sub
adc
jmp
add
lcall
cmpsb
jmp
nop
test
xchg
jnp
push
jnp
push
inc
lods
rol
mov
pop
int3
add
fildll
dec
mov
adc
aas
loop
mov
add
lods
jns
test
repz
popa
or
mov
repz
and
pop
cwtl
mov
cwtl
push
mov
lea
cli
lcall
jmp
sti
lds
jle
lret
xor
cmp
and
test
sbb
loope
mov
imul
iret
adc
leave
dec
push
lock
sti
icebp
xchg
in
sbb
adc
xor
xor
push
cmp
lea
jge
cmp
and
xchg
testl
aas
pop
cmp
dec
iret
in
imul
fisttpll
push
sub
into
in
pop
mov
sub
cs
pop
fmull
sbb
or
mov
mov
cmc
and
pop
jp
mov
popf
stos
popf
xchg
ds
mov
mov
pop
arpl
mov
xor
fisubl
xor
jp
mov
stc
xchg
in
aas
jae
xor
insl
and
jns
xchg
mov
xlat
movsl
rcll
lods
lahf
push
jae
and
pop
jle
pop
out
data16
pop
aaa
mov
scas
mov
jge
addl
xchg
rcrb
sti
pushw
mov
jg
jg
mov
dec
pop
int3
leave
lret
int3
mov
mov
lahf
push
mov
lahf
push
outsb
cmp
sub
sbb
ret
mov
cltd
xchg
or
mov
fbld
jl
xor
rcr
daa
cmc
call
or
sarb
lahf
cmp
fbstp
sbb
dec
push
mov
and
addb
jae
cld
test
dec
push
xchg
lahf
mov
mov
ret
jg
addr16
mov
or
and
pop
decb
jbe
dec
outsb
movsb
scas
fmuls
xor
mov
cmp
adcb
daa
push
ljmp
jo
lea
js
cmp
addr16
aas
cmc
hlt
mov
shrb
adc
lret
jns
push
dec
cmc
xor
jae
xchg
cmp
int3
mov
mov
mov
inc
lea
pop
lock
nop
or
es
mov
and
xchg
test
mov
sbb
adc
sarl
sbb
pop
and
sahf
mov
in
fcmovbe
jg
add
aas
cmp
call
fdivp
out
aad
je
clc
aam
mov
and
push
cmp
jno
mov
ror
popf
and
inc
iret
xor
out
adc
xor
mov
mov
push
test
push
insl
fldcw
in
in
pushf
inc
or
scas
push
or
inc
leave
cmp
or
jns
xor
pop
outsl
jp
fs
xlat
ds
jns
and
sub
inc
sbb
lods
or
jbe
lock
pop
jp
add
shll
dec
push
cmp
repnz
sti
pop
pop
xchg
lcallw
and
push
cmp
movsb
ljmp
fwait
push
or
inc
cmp
aas
adc
into
sbb
test
fsubrp
or
xor
into
add
mov
add
push
in
mov
xchg
les
mov
addr16
dec
hlt
jg
xor
lret
dec
pop
xchg
mov
lds
movsb
test
loop
imul
sar
cld
pop
sub
and
scas
mov
inc
cmp
in
loopne
pop
sbb
mov
jbe
push
sbb
sahf
and
addr16
fiadds
and
xor
and
outsl
push
pop
sbb
orl
ja
fists
xchg
and
cli
cmpsb
jmp
imul
js
test
and
add
xor
mov
popf
dec
in
jl
inc
roll
add
loop
mov
js
jecxz
test
xor
lret
cmp
jp
or
xor
fidivs
aad
push
dec
dec
fwait
jmp
mov
sbb
xor
insl
cmp
fnsave
mov
push
add
clc
lock
pop
cld
push
cmp
test
mov
jnp
or
or
sub
fsubrs
fists
cmp
xchg
cmp
inc
aas
mov
mov
loope
pushf
mov
dec
add
not
call
cmc
sbbl
ja
leave
mov
pop
mov
jbe
scas
add
pop
ficoms
cmp
fdivr
xchg
lret
fcomps
aas
sbb
fmuls
push
xlat
inc
or
mov
movsb
pop
popf
xchg
pop
cmp
sti
call
out
out
lret
in
aad
testl
fidivl
out
push
adc
imul
pop
mov
testl
dec
xor
jbe
lcall
fsts
stos
pop
loopne
stos
sti
mov
int
cmpsl
fs
dec
repnz
sub
mov
pop
sbb
fdivs
pop
push
xchg
add
xchg
push
mov
mov
dec
call
mov
jp
jle
mov
dec
sbb
out
aad
subl
mov
dec
cs
push
movsl
jl
aam
imul
into
clc
jle
gs
inc
movsl
pusha
addr16
adc
adc
and
test
push
xchg
clc
sbb
ds
dec
mov
sub
orb
cwtl
cmp
sbbl
sahf
in
mov
icebp
data16
jb
addr16
jmp
push
mov
jmp
jae
addr16
leave
xor
push
or
jge
mov
sbb
cmp
ss
lods
push
mov
lcall
adc
jno
jmp
inc
mov
mov
sub
shlb
jno
cld
nop
sub
arpl
jbe
mov
jle
sub
xor
push
fldl
test
cltd
dec
jnp
ljmp
and
pop
push
arpl
pop
cmp
ja
clc
fwait
inc
movsb
mov
mov
outsl
fcomps
sarb
ficoms
sbbb
jo
xchg
push
leave
pop
mov
dec
jae
lods
xlat
cmp
push
sbb
mov
sub
inc
pop
fwait
mov
adc
push
mov
push
mov
mov
test
mov
dec
jae
push
sahf
push
lret
out
push
pop
mov
dec
sbb
mov
and
or
xchg
and
rorb
cli
scas
xchg
stc
idivb
pop
and
popf
filds
push
addr16
jno
jb
or
lods
jbe
xchg
mov
jb
add
testl
sub
in
call
xchg
scas
or
inc
push
imul
call
xchg
sub
jl
lret
sub
mov
shrb
out
push
adc
loop
test
es
adc
std
and
repnz
adc
lds
sub
ljmp
negb
cmpsb
nop
divl
cmp
fidivrl
fimull
xchg
pop
rcrb
push
xchg
adc
in
dec
cwtl
pop
xor
sbb
es
test
shll
cmpsb
push
sti
pop
xchg
mov
call
sbbl
jnp
and
sub
in
scas
xchg
jp
clc
in
mov
loopne
push
repz
jnp
icebp
shlb
iret
test
test
inc
lret
fistpll
scas
mov
lcall
and
cltd
int
and
push
jmp
xchg
pop
or
push
pop
insl
cmp
rcll
lock
addr16
iret
add
stos
add
je
int
lods
mov
or
pop
or
xchg
cmp
out
xchg
fcmovne
push
pusha
jg
mov
lret
cmp
cld
sub
adc
jle
sysret
xor
jne
ret
xor
fstpl
sub
mov
orb
ret
pop
popa
aam
in
xor
into
lcall
jo
insb
mov
test
mov
cmp
lods
push
xchg
aaa
add
mov
enter
jl
mov
dec
clc
or
or
dec
mov
mov
add
out
mov
icebp
fistps
cs
insb
out
iret
and
imul
adc
stos
mov
rolb
pushf
xchg
dec
adc
test
pop
arpl
scas
adc
xchg
push
in
adc
xchg
stos
cmp
mov
mov
push
in
data16
pop
sbb
leave
jmp
int
pop
mov
and
fmull
lods
cs
out
mulb
dec
dec
into
shll
insl
sahf
cmp
sub
mov
mov
loopne
cmp
add
mov
or
jno
push
lahf
xchg
arpl
xchg
xchg
dec
lret
orl
sub
push
aam
inc
and
mov
fs
xchg
push
mov
mov
push
push
aas
jp
cld
fists
sub
std
cmp
fwait
aad
mov
andb
or
mov
popa
dec
xchg
movsb
out
pop
push
ja
ret
adc
inc
mov
lahf
mov
push
jo
lahf
xor
sub
sub
lds
fsubs
js
pcmpgtd
sub
test
or
stc
cmp
div
cltd
aas
or
and
ljmp
push
and
add
jne
icebp
rorb
loopne
add
mov
ret
mov
lods
jg
in
push
mov
clc
push
lret
dec
fcomps
shlb
mov
push
dec
ja
stc
cwtl
lods
fmul
pop
dec
dec
sbb
jns
addr16
cmp
clc
xlat
xchg
mov
push
sbb
jecxz
xchg
fsubs
mov
in
inc
shlb
insb
je
loope
pop
push
adcb
aas
jne
inc
pushf
xorl
jmp
orl
add
lahf
sbb
lods
mov
adc
hlt
sub
fdiv
add
mov
pop
jecxz
cmp
mov
adc
enter
pusha
and
cwtl
jge
lret
roll
imul
sub
repnz
mov
or
scas
jg
push
push
fisttpl
pop
jle
enter
hlt
dec
loopne
or
mov
xor
js
xchg
mov
outsl
and
out
test
ret
jmp
cmp
jmp
pop
scas
mov
and
and
xor
out
gs
sub
push
sbb
pop
pop
pop
push
lret
add
ficompl
jecxz
daa
adc
dec
pxor
test
cmpsb
test
stos
movl
iret
pushf
cmp
mov
dec
dec
pop
inc
jmp
xchg
and
sub
push
repz
xchg
push
jle
std
pushf
ja
adc
and
popa
mov
add
adcb
mov
punpckldq
inc
and
addr16
xchg
int
sub
jl
sbb
fsubs
int
aad
mov
out
cmp
and
icebp
cmpl
cltd
sub
aas
dec
mov
nop
cld
adc
pop
stos
cli
push
mov
bound
sub
std
addr16
aaa
sbb
shll
je
sub
xchg
cmpsb
ret
cmp
push
fwait
sbbl
add
mov
loopne
add
fwait
aas
push
push
std
xchg
test
pop
cmp
pop
cmpsl
subb
push
jae
sub
xchg
mov
mov
xchg
cmovge
jbe
and
push
and
sub
xor
stos
lds
mov
test
cs
xchg
xor
cld
xchg
cmp
sub
jmp
into
xchg
imulb
or
fildll
adc
pop
xchg
jg
stc
jge
mov
add
out
jo
xchg
inc
inc
xchg
mov
adc
and
inc
outsl
mov
dec
xor
lds
dec
push
cmc
pop
push
inc
or
ret
push
pop
push
mov
push
lcall
jle
pop
mov
out
add
jns
lret
push
adc
pop
mov
inc
cmc
dec
sarl
mov
or
adc
addb
pop
stos
push
out
imul
lods
xchg
jb
lods
dec
sub
dec
sub
sub
push
inc
notb
test
adc
mov
xchg
nop
or
mov
arpl
popa
mov
das
or
inc
ss
sub
inc
push
loop
cmp
jge
lret
xchg
cmp
sub
cmp
mov
rcrl
jl
push
arpl
pusha
jecxz
movsb
les
xchg
xlat
mov
adc
js
in
imul
int3
mov
xor
jp
cmp
or
or
dec
jle
or
shll
mov
pushf
aad
fucomi
rcr
cmp
pop
enter
and
or
mov
icebp
icebp
pop
scas
push
add
jl
xlat
cli
data16
pop
push
mov
movsb
adc
or
ror
or
sub
dec
lock
adc
sub
or
or
jns
cmp
lahf
ljmp
arpl
dec
jmp
xchg
je
lods
xchg
xor
mov
je
jns
xchg
enter
punpckhwd
xor
jae
test
or
pop
sub
movsl
fs
xchg
fisubl
push
mov
and
fcos
xor
stc
jns
mov
sbb
mov
xchg
and
adc
cwtl
mov
aaa
imul
sub
insl
inc
cld
fwait
add
sbb
jo
jne
fstpt
inc
loop,pn
test
je
xchg
mov
inc
push
pop
daa
adc
addr16
sub
aas
sub
mov
pusha
cmc
lcallw
jb
frstor
aam
xchg
sbb
adc
or
mov
stos
xchg
cmp
pushf
cmp
adc
ret
dec
cwtl
ljmp
xchg
leave
xchg
sub
push
shlb
add
fisubrs
test
pop
sarl
dec
test
loop
loopne
cmp
daa
loop
jmp
ja
les
lods
dec
and
or
push
out
jno
es
cmpsb
xchg
divl
sbbb
scas
fistpll
daa
das
in
adc
adc
pop
sbb
push
xor
xor
stos
cmpsb
test
mov
outsl
xchg
xor
ss
mov
or
jmp
sbb
add
sarl
push
mov
roll
lahf
or
call
push
insb
sub
lds
mov
cs
adc
jmp
neg
es
mov
add
cmp
test
pop
test
or
pop
insb
pop
push
add
call
push
sbb
fiaddl
mov
cmpsb
xor
jnp
call
inc
les
loope
pop
cmp
pop
jge
cmp
xchg
dec
stos
pop
int3
jbe
adc
or
ret
loopne
xchg
jns
mov
adc
jo
adc
andl
jle
jmp
push
sub
push
push
les
mov
cmp
insb
sub
data16
adc
and
gs
pop
pop
fldcw
sbb
stos
dec
or
jo
xchg
sbb
sbb
pop
outsl
pop
es
adc
dec
loop
dec
dec
out
jge
pop
std
insb
dec
in
push
jno
loope
mov
loope
or
mov
cmp
lret
inc
enter
inc
ds
cmp
cmpsl
pop
sbb
mov
jo
jp
cli
cmpb
incb
cltd
out
fs
inc
pop
jb
cmp
jae
into
ss
repz
jae
jg
xchg
clc
in
mov
sbb
ljmp
daa
sub
jmp
lahf
jmp
push
adc
push
add
adc
sbb
stos
stos
push
jp
enter
cmp
or
test
sbb
xchg
sbb
mov
pushf
aad
cmp
xorb
cmp
lret
lds
pop
xchg
paddusw
shll
dec
jnp
leave
cwtl
push
push
adc
dec
gs
cmovp
cs
sub
aaa
push
or
cmp
sub
call
add
cmp
push
pop
bound
ljmp
enter
dec
ret
sub
mov
stc
dec
mov
sbb
push
mov
mov
dec
call
sub
stc
dec
adc
loope
cld
sub
or
ret
decl
scas
adc
ret
addr16
enter
into
mov
or
out
adc
push
mov
repnz
adc
mov
test
mov
mov
jg
mov
imul
fldenv
cmp
gs
outsl
shlb
call
mov
out
mov
push
movsb
xchg
mov
push
iret
cmp
xor
insl
sar
in
addr16
pop
inc
mov
jmp
popa
in
stos
cmp
ja
xchg
adc
inc
dec
add
flds
ljmp
bound
dec
dec
push
cmpsb
es
nop
fwait
cmpsl
xlat
call
addr16
movsb
in
and
jns
test
mov
and
or
arpl
int3
sub
daa
scas
mov
mov
xchg
inc
arpl
stc
pop
jg
adc
and
xchg
mov
rcl
cmpsl
shr
repz
in
into
jne
mov
fistl
pop
pusha
sub
into
dec
test
push
test
repnz
or
pop
lea
and
adc
xchg
mov
mov
pop
add
cmp
mov
in
nop
sub
gs
mov
movsl
dec
jmp
push
push
jno
loope
or
dec
mov
nop
cwtl
pop
sub
fists
inc
test
int3
mov
in
mov
movb
mov
call
inc
rorb
xchg
divb
sbb
push
jbe
sbb
outsl
test
imul
jp
mov
push
xor
xchg
dec
cmp
mov
rol
mov
insb
cmc
je
decb
push
sub
jmp
and
mov
ror
test
xor
fs
xchg
jne
push
pusha
push
shlb
mov
sti
sub
lea
lret
mov
and
stos
movsl
xor
es
invd
das
xchg
call
out
mov
lcall
pushw
cs
jae
mov
pop
dec
repz
xchg
aaa
jge
jge
movsl
rolb
jge
xchg
ljmp
mov
lahf
xor
fnstenv
push
fwait
ret
lcall
xor
mov
out
adc
inc
jp
das
inc
pop
mov
frstor
sbb
inc
jmp
jl
ljmp
in
fcomps
xor
call
sub
in
and
fdiv
daa
cwtl
leave
test
jge
jge
push
lds
add
sub
xchg
iret
pop
movsb
xlat
repnz
mov
pop
adc
insb
add
sbb
fiaddl
sbb
inc
call
pop
imul
dec
adc
sbb
pop
cmp
ror
aam
xchg
add
push
mov
int3
dec
jno
daa
push
mov
xor
popf
push
aam
or
bound
fadds
clc
cmpsl
sub
dec
mov
mov
ljmp
sub
stc
jp
push
pop
leave
dec
mov
sbb
ljmp
sub
stc
jp
push
pop
leave
dec
mov
sbb
in
ret
cmp
or
fstps
inc
mov
adc
push
pop
ds
mov
mov
or
test
shlb
cmp
bound
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stos
sbb
jp
push
cltd
sbb
sarb
cmp
jns
add
pop
or
add
add
add
add
or
or
addl
mov
mov
and
push
add
icebp
add
imul
xchg
add
aaa
add
add
add
add
add
scas
add
inc
add
add
test
add
add
add
add
addb
add
sbb
loopne
and
jge
mov
out
cmp
leave
add
dec
add
add
or
pop
add
out
add
add
add
add
dec
add
add
add
adc
dec
add
add
add
icebp
add
add
jb
jo
jae
push
add
push
sub
jno
xchg
add
imul
cmp
jo
insl
add
add
add
add
loope
scas
add
add
repz
popf
add
out
add
add
pop
add
add
add
add
add
add
push
add
add
sub
sub
incb
movb
add
add
add
add
add
add
cmp
mov
add
add
add
add
add
rolb
filds
leave
add
add
pushf
add
add
sub
out
scas
add
add
add
add
ja
filds
test
cmp
add
add
add
add
sub
repz
add
add
add
add
add
arpl
out
add
filds
pop
add
add
add
add
add
add
or
sub
jge
call
add
add
insb
add
add
add
add
add
outsb
add
add
add
add
add
or
sub
sub
add
mov
add
loop
insl
add
add
add
add
jae
ja
addl
out
repz
push
add
add
sub
and
dec
add
inc
add
add
mov
add
stc
add
or
jge
out
lods
add
add
add
add
add
pop
add
add
add
add
cmp
xchg
add
sub
sub
add
add
add
pop
add
add
or
pop
add
and
lods
add
movl
aaa
add
test
loope
mov
pop
add
push
xchg
add
sub
stc
add
add
pop
add
add
add
sub
dec
add
lock
add
add
add
add
push
jge
cmp
pop
add
test
repz
push
add
cmp
scas
add
add
add
add
add
pop
add
add
add
add
xor
jg
and
cmpsl
add
out
add
add
add
arpl
inc
add
add
add
dec
add
arpl
inc
add
addl
add
add
scas
add
add
hlt
add
aaa
add
add
or
jmp
daa
add
add
add
push
repz
jnp
jge
scas
add
add
add
add
push
int
insl
add
add
add
add
xor
add
push
add
add
add
add
add
push
add
push
imul
or
insl
add
add
add
mov
or
dec
add
jo
adc
sub
sub
sub
mov
add
sbb
inc
add
add
add
add
add
add
add
sub
imul
adc
dec
add
loop
movb
add
add
add
add
xchg
fdivr
fdivs
adc
negb
aaa
out
stos
pop
lahf
pop
adc
addr16
lret
and
jb
aas
out
je
js
push
je
push
ret
stos
lcall
xchg
push
stc
mov
test
fwait
add
fisttps
add
cmp
dec
jo
in
inc
sub
in
idiv
out
inc
incb
dec
pop
addr16
aas
leave
stc
fnstsw
mov
sub
je
out
cmp
mov
jb
inc
xchg
jmp
cmp
cmp
out
jno
les
mov
daa
outsl
pop
jb
xor
lds
adc
loopne
sub
fwait
ret
cmpsl
daa
xchg
or
pop
push
jne
cmp
mov
scas
test
cmc
subb
dec
insb
clc
aaa
loope
rorb
inc
nop
sub
pop
ja
xchg
pop
stc
jo
dec
aad
mov
subl
divl
loope
jl
push
cwtl
out
cmc
shlb
push
or
push
pop
lahf
xchg
cmpsl
xor
push
mov
and
int
stos
xchg
scas
mov
hlt
pusha
int
jne
out
call
das
and
xchg
into
cwtl
fisubs
jp
scas
pop
xchg
je
mov
jmp
stc
je
lahf
rcr
jae
inc
mov
lret
sti
dec
xor
sti
lcall
sub
adc
push
int
fbld
iret
ja
sbb
clc
push
iret
sub
iret
call
icebp
fcompl
sbb
popa
dec
pop
mov
ds
pmulhw
pop
pop
dec
jmp
es
insb
inc
jne
sbbl
lock
lret
sub
adc
aad
lea
lods
xlat
mov
push
jge
xchg
out
rcl
xchg
adc
dec
in
loop
shl
push
mov
loopne
outsl
pop
dec
lahf
test
ret
pop
dec
lods
in
or
data16
subb
jno
push
pop
pop
cli
mov
and
mov
outsw
cmpsl
add
jne
pop
mov
stos
hlt
mov
cmp
ret
sbb
dec
jo
and
jl
ficomps
test
xor
pop
aas
dec
add
in
lods
cmp
aas
cmp
aaa
out
xchg
out
cmp
or
push
xor
out
cmpsb
jno
stos
adcb
aam
add
nop
jne
or
enter
jnp
cmp
push
ss
sti
push
inc
sub
enter
jno
testl
out
aad
xchg
shl
sbb
xchg
sti
jmp
ret
sbb
jmp
loopne
mov
cmp
cmc
xor
cmc
je
pop
add
sub
sub
pushf
mov
lcall
repz
mov
xchg
mov
cmpsb
ja
insl
stos
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
