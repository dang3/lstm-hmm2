call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
or
jp
fs
cmovp
lcall
fcmovu
outsl
fidivrl
scas
or
pop
out
dec
mov
das
mov
mov
sub
fcomps
fs
or
inc
out
dec
fisubs
out
aas
xchg
or
jg
data16
arpl
jle
push
xorb
pop
lds
mov
fisubs
mov
lcall
and
jmp
fsubp
pop
jbe,pn
add
aas
xor
lea
sbb
mov
sub
push
scas
jns
in
repnz
loopne
out
mov
ljmp
mul
lcall
test
push
movsl
pusha
dec
add
shlb
and
lret
outsl
daa
pusha
cmp
xchg
inc
xchg
loop
sar
sarl
dec
lcall
mov
lds
mov
sbb
hlt
inc
test
jg
mov
pop
adc
jle
ja
mov
jle
jl
sbb
adc
pop
out
in
jl
xor
in
das
mov
pop
call
loopne
lahf
outsb
jb
adc
mov
stc
imul
out
jns
test
insl
scas
ja,pt
dec
popf
push
xchg
mov
fnsave
push
dec
repnz
subl
push
movb
pop
fisubrl
iret
push
pop
out
dec
mov
das
mov
cli
dec
ljmp
scas
or
pop
out
dec
mov
das
mov
cli
dec
ljmp
mov
fcomps
andb
call
inc
stc
mov
cli
addr16
insb
xorl
lock
pop
gs
pop
mov
adc
mov
and
clc
jle
xchg
cmpsb
sbb
xor
sahf
enter
cld
sub
ret
mov
xchg
dec
loop
adc
arpl
xchg
aad
sub
sbb
pop
divb
sbb
imul
push
fnstsw
lock
inc
sub
inc
hlt
adc
xchg
mov
xor
lret
or
and
fmull
out
ss
jb
insl
fs
fwait
push
push
lret
int3
rol
movsb
cmp
fcoms
push
xor
orb
out
mov
popf
in
int
out
inc
dec
pop
pop
add
repnz
mov
ljmp
and
push
aam
xlat
insl
lret
aam
cmp
push
loopne
ljmp
test
jge
or
or
lods
popa
mov
or
inc
mov
push
out
jg
or
sbb
adc
jg
sti
cli
push
ficoml
lret
scas
xchg
test
xchg
push
fmull
mov
in
xchg
push
rcl
inc
jb
push
push
xlat
sub
cld
loop
pusha
adc
xor
cmpl
dec
inc
arpl
dec
or
mov
imull
adc
out
mov
repnz
dec
inc
inc
pusha
in
or
daa
rcl
stos
pop
gs
xchg
imul
setne
mov
pop
or
daa
pop
lret
mov
cmp
pop
aas
sub
push
in
jne
pop
xchg
divl
mov
scas
mov
ljmp
roll
ljmp
cmp
sbb
dec
add
mov
jbe
dec
cmpsb
movsl
shrb
xchg
movntq
inc
adc
push
mov
rcr
dec
mov
pop
and
in
sbb
sub
lret
mov
push
sbb
sbb
repz
dec
add
rorl
dec
jo
xchg
inc
inc
jno
pop
cli
into
loop
cmpsb
stc
xchg
sub
pop
test
xchg
iret
test
push
adc
push
sub
cmp
jl
mov
leave
dec
inc
dec
mov
test
sbbl
cmp
add
leave
je
mov
pop
mov
xor
xchg
mov
out
mov
cwtl
mov
fwait
movsl
in
pusha
cld
adc
sbb
sub
dec
stos
add
movsl
push
xchg
inc
or
mov
pop
pop
ret
cmp
dec
xchg
adc
je
insl
out
lret
out
std
sbb
mov
mov
mov
aas
inc
arpl
jle
int3
inc
leave
mov
nop
lds
jno
test
dec
mov
jbe
and
sub
or
lret
lret
mov
push
push
mov
scas
fists
inc
or
fisttpll
dec
mov
lahf
cmp
xor
dec
push
cmp
insb
fdivrl
addr16
sub
jmp
loopne
add
lock
add
ret
mov
psubd
test
jge
pop
xor
xchg
test
fcomps
sub
pop
lahf
inc
cmp
xchg
sahf
inc
icebp
cld
sub
aaa
or
sub
inc
sbb
cmp
arpl
loop
rorl
das
pop
mov
popf
add
fiadds
gs
adc
in
dec
insb
outsl
mov
push
mov
mov
popf
dec
jb
nop
dec
cmc
mov
popa
jne
sub
fcoml
push
ljmp
mov
movsl
clc
loopne
test
cmp
negl
add
dec
in
sub
push
ucomiss
icebp
xor
lock
idiv
ret
inc
and
aas
or
mov
rcrb
cmp
mov
fwait
push
pop
int3
add
outsl
dec
push
loope
dec
shlb
mov
jle
dec
xor
int
jnp
iret
push
ljmp
xor
xor
rcrb
xor
inc
mov
ret
arpl
jmp
sbb
lea
jp
iret
inc
xor
inc
push
push
out
pushf
jns
jmp
fbld
pop
dec
pushf
sahf
popf
mov
movsl
mov
popf
mov
xchg
mov
cmp
push
lea
push
xchg
and
mov
mov
outsb
mov
sub
or
fistpll
jns
mov
mov
pop
jecxz
dec
mov
inc
push
std
jb
fsts
mov
scas
scas
pop
inc
movsl
pop
ds
inc
mov
mov
and
and
dec
xlat
jo
mov
jge
repz
in
sub
ror
add
or
in
sahf
aas
ret
test
les
add
ds
cli
adc
mov
push
popw
inc
cmp
cmpsb
push
mov
fistpll
jne
or
or
lods
stos
out
cmp
cmp
mov
xor
aam
adc
dec
push
test
mov
aad
push
lods
xchg
movsb
and
ficompl
xchg
je
sbb
gs
mov
std
dec
and
dec
mov
push
mov
cmp
ret
adc
sbb
sub
mov
sub
jle
xchg
lret
xchg
add
pop
ja
pushf
test
lea
pop
jg
cli
fsts
cmp
ret
and
xchg
flds
popf
roll
sbb
cli
sbb
dec
bound
jp
arpl
cmpb
dec
dec
ret
sub
cmp
mov
cmpsb
or
mov
dec
mov
inc
inc
pop
sub
adc
jge
push
adc
mov
sub
mov
fdiv
shlb
jbe
icebp
xchg
test
outsb
pop
xchg
mov
shlb
mov
fildl
xchg
cmp
adc
cmp
arpl
sub
push
rclb
pop
inc
fiaddl
ret
shl
rcrb
inc
scas
mov
and
out
xchg
lock
fprem
push
and
leave
shl
xor
mov
aaa
ljmp
jle
pop
pop
push
popa
jne
xchg
or
loopne
mov
mov
mov
sub
je
or
fwait
inc
cli
das
cmpb
or
xor
scas
jnp
out
pop
inc
lgs
add
fstpl
inc
cmp
mov
movswl
data16
xor
popa
pushf
mov
push
fildll
mov
xor
cmc
icebp
imul
loope
in
in
repz
lds
sti
push
getsec
sub
lret
xchg
pop
xor
mov
fisttpl
or
pop
lods
jmp
xchg
cmp
fisubrs
mov
stos
dec
adc
adc
fidivl
cmpsb
js
xchg
insb
or
outsb
cli
paddusb
cmp
sub
rol
dec
sub
mov
sti
sbb
pushf
pushf
std
mov
jns
pusha
enter
push
clc
and
int3
push
sahf
dec
out
enter
xor
and
mov
shll
xchg
outsb
out
fdivl
jmp
popa
das
mov
imul
and
pop
iret
iret
pop
mov
fbstp
shl
mov
cvttps2pi
fstpl
es
pushf
sbb
outsb
mov
inc
add
pop
daa
lret
ds
loopne
inc
xchg
sbb
jns
test
fisttps
clc
inc
push
in
jmp
jb
cmp
inc
and
sbb
mov
loope
ds
xchg
add
gs
movsl
jo
xchg
cmp
ret
push
dec
cmp
jmp
xor
jbe
or
xchg
in
mov
pop
push
push
fsubp
stc
add
jno
outsb
shrl
pusha
decb
jae
cld
jbe
lods
aad
cwtl
jo
sti
sub
xor
jecxz
pop
xchg
out
adc
mov
rcr
mov
mov
inc
cmp
and
xor
ljmp
push
jnp
cs
insl
ss
push
das
sub
adc
test
and
xchg
jnp
cmp
bnd
cmp
ss
push
lods
fmull
sysenter
jo
dec
scas
pop
lret
jns
and
push
jle
lret
xchg
adc
mov
btr
ret
loopne
sub
mov
test
dec
xchg
dec
sbb
xchg
sbb
cmp
or
mov
repz
jns
cmp
adc
cmc
dec
mov
popa
nop
pop
rclb
add
lock
jecxz
fcmovbe
rcrb
inc
xchg
cli
mov
ds
cwtl
insb
stos
jp
test
clc
adc
stc
iret
mov
push
jae
cmp
push
rorb
addb
out
add
mov
and
xchg
xchg
adc
in
pop
xchg
jno
push
icebp
fldenv
or
popa
and
loop
aam
js
cli
pop
and
inc
sub
push
stos
dec
aas
pop
mov
pop
mov
jb
jge
add
mov
aas
leave
inc
jp
fcmovb
scas
or
mov
outsb
les
xor
pushf
pop
addr16
fildll
mov
xchg
dec
mov
xchg
lock
aas
pop
lock
sti
rcll
scas
call
sub
cmp
adc
out
rcrb
inc
fcoms
rclb
push
subl
mov
sbb
or
in
subl
add
push
jbe
pop
sbb
jo
cli
push
jmp
loopne
xor
rcll
pop
hlt
cmpl
xlat
xchg
lock
ret
rcrl
pop
clc
mov
mov
add
dec
mov
mov
mov
lahf
outsl
push
jg
into
pop
aaa
sti
xor
pop
push
sbbb
jne
jmp
sub
pusha
pop
inc
mov
std
mov
pop
aad
mov
xchg
sbb
xchg
sar
lods
or
loopne
sbb
xchg
rclb
incb
mov
and
dec
xchg
jge
xchg
xlat
sbb
fdivs
dec
call
xchg
divl
cmp
xor
jle
rcrb
shl
clc
shrb
in
cmpsl
sbb
cmp
push
pop
and
inc
stos
leave
int3
xacquire
cs
lods
ret
jne
sub
js
xchg
inc
pop
sti
cmp
pop
pop
xor
adc
push
test
pop
popf
bound
adc
push
ljmp
sbb
fcmovnu
rolb
dec
add
adc
lods
loop
aaa
adc
pop
jg
mov
ret
and
lods
sti
cmp
test
rcrl
mov
in
pop
jns
andl
push
push
mov
js
and
dec
movsl
ja
jle
sub
pop
negb
xor
mov
cmpsl
das
cmpsb
sub
hlt
mov
xor
into
or
cld
test
inc
xlat
ds
or
lds
sahf
ljmp
jns
push
pop
push
subl
xchg
enter
mov
adc
inc
xlat
out
test
or
cmp
loope
les
sub
fmul
dec
ret
stos
dec
push
or
pusha
notl
adc
cmp
nop
loop
ss
icebp
inc
fwait
mov
mov
mov
fildll
mov
sub
add
push
xchg
outsb
stc
js
lea
test
or
push
leave
imul
inc
mov
and
push
mov
inc
jl
mov
add
mov
push
sbb
shl
fcoml
loop
dec
dec
and
jo
lret
mov
fwait
xor
add
cmp
bound
jg
adc
pop
cmp
int3
mov
and
adc
mov
push
mov
or
sbb
ret
mov
sar
out
adc
out
xlat
mov
inc
push
insl
mov
xor
mov
xchg
in
mov
dec
add
je
out
pop
or
data16
sbb
xor
jg
or
xchg
xlat
out
or
push
leave
rorl
xchg
push
jmp
cld
mov
mov
xchg
aam
fstp
cs
leave
xlat
in
xchg
cmp
mov
imul
mov
enter
scas
pop
sub
sbb
dec
and
pop
jae
or
jecxz
jne
mov
in
test
sub
pushf
and
cs
cli
mov
bound
pop
ljmp
or
loop
cmp
shrb
int
jnp
popa
push
icebp
shll
pusha
mov
fwait
call
iret
xor
inc
rol
pop
insl
cmpsl
jp
les
pop
cmc
xor
loopne
push
and
add
ja
push
inc
push
cmp
push
ds
jle
inc
sbbb
imul
pop
ret
push
sbb
loop
mov
icebp
pop
test
mov
add
imul
ljmp
push
mov
adc
push
lret
jmp
popf
xchg
mov
jno
imul
add
cwtl
adc
lahf
mov
and
and
dec
jmp
in
and
icebp
ret
adc
dec
or
call
dec
sbb
cmc
jo
inc
add
adc
or
fwait
xchg
xchg
mov
sarb
add
jmp
add
imul
push
jo
test
add
out
sbb
cli
lock
and
adc
mov
imul
fcomps
pop
insb
fisubl
pop
fwait
orb
sbb
rorb
xchg
sbb
loope
cmp
jmp
and
aas
sbb
sbb
rorl
clc
xchg
lahf
add
fstps
sbb
ret
adcb
nop
enter
addb
inc
dec
addb
fmul
sbb
in
aad
add
jbe
dec
lret
adc
fidivrl
or
push
pusha
jp
movsl
fimull
mov
or
int
sbb
mov
orb
gs
xchg
pushf
loope
int
xor
pop
mov
or
repnz
jae
lcall
inc
sbb
cmp
stos
insl
xchg
jne
dec
dec
stc
sbb
stos
sub
or
jae
or
fstps
jle
inc
int3
enter
popf
jmp
ret
mov
subl
push
mov
dec
les
scas
int3
jg
pop
sbbl
and
sub
add
mov
cmp
je
sbb
jmp
repz
xchg
pop
cmc
out
push
and
jnp
push
push
leave
lret
cwtl
es
sbb
jge
or
test
mov
call
and
xor
jl
inc
int
unpckhps
pusha
fwait
mov
add
icebp
sarb
aaa
push
push
addr16
minps
idivl
cmp
jo
notb
out
cltd
data16
and
in
and
push
fistpll
ror
lret
psrlw
push
adc
addr16
stos
jae
mov
loopne
cmp
and
and
jp,pn
jecxz
add
mov
dec
pop
pop
sbb
jns
pop
sbb
movsl
pushf
sar
imul
movsb
mov
imul
or
mov
les
xchg
xor
xchg
pushf
test
dec
sub
stc
cmp
pushf
cmp
pop
sbb
in
sbb
xor
cmp
out
mov
jb
inc
or
cs
insb
out
add
sub
inc
or
inc
cmp
mov
jnp
adc
lods
mov
cmp
adc
iret
mov
fdivl
jmp
incb
pop
lds
jmp
sahf
rcr
sub
mov
fimull
pop
mov
inc
rcl
sub
and
insb
nop
add
nop
jae
lret
push
and
popf
mov
pop
xlat
movsl
cmp
stos
cwtl
aaa
xchg
fstpl
ret
sbb
mov
inc
lret
xor
aaa
mov
add
cmpsl
cs
adc
pop
shlb
inc
data16
out
jg
xor
pop
mov
sbb
adc
lods
xchg
jo
in
pop
inc
test
cmp
test
push
int3
push
imul
mov
adc
lret
cli
pop
mov
lock
ljmp
pop
sbb
push
jp
popa
rcrl
xchg
push
xchg
cli
xchg
stos
xchg
xchg
shrb
jbe
xchg
cs
jge
or
int3
mov
pop
pop
inc
es
jns
sahf
inc
fisubrs
add
push
sarl
sub
in
jbe
scas
add
xchg
push
hlt
xchg
or
mov
leave
mov
and
out
jecxz
fsubrs
mov
lret
iret
aas
cmp
dec
pop
clc
dec
mov
cmp
retw
rolb
pop
sbb
push
push
add
rclb
fwait
mov
popa
xlat
cs
fyl2x
sbb
pop
push
mov
dec
fmull
jne
xchg
pop
adc
xchg
jg
inc
pushf
orl
mov
cmc
scas
cmc
add
mov
xchg
popf
and
push
mov
cmp
fistpll
xchg
add
scas
loope
dec
bound
xorb
enter
rcrl
mov
loopne
shrb
movsl
xchg
dec
jmp
mov
pop
shlb
xchg
sub
xchg
pop
pop
dec
stos
sub
xchg
popf
sbb
je
and
je
lar
mov
mov
push
pushf
out
fidivrs
movsl
lcall
pop
push
repnz
shl
lea
test
push
test
xor
xchg
scas
es
mov
inc
jae
shll
jg
lcall
frstor
and
pop
fists
cld
loope
and
xchg
sub
inc
inc
sub
jnp
sub
sub
mov
xor
test
lahf
cmp
test
xor
jno
inc
push
jle
ja
stos
pop
in
lock
pushf
negl
xchg
fisubrl
add
push
insb
jge
push
rcll
fdivl
push
mov
sar
je
outsb
lahf
stos
xchg
call
xchg
sbb
in
lret
jae
data16
stos
ror
std
sub
dec
mov
dec
dec
cs
adc
and
outsl
mov
ja
rorb
js
ffree
mov
pop
push
jge
lea
mov
imul
mov
jg
dec
fstps
add
adc
pushf
pop
fcomip
add
mov
push
popa
sahf
mov
mov
aas
xor
movups
test
push
pop
jb
sub
mov
push
cmp
inc
push
inc
adc
ja
mov
jb
outsl
lock
dec
clc
xchg
std
add
xchg
std
fs
sbb
push
sbb
adc
lea
sub
fs
fdivs
call
or
es
shll
and
and
xor
popa
mov
fwait
ljmp
mov
daa
enter
push
hlt
lret
jge
lret
xchg
or
sbb
pop
data16
jno
adcl
mov
fwait
repz
add
jle
call
and
leave
popf
cmp
imul
je
xor
push
push
repnz
pop
or
out
pop
sub
xchg
test
roll
in
test
imul
stos
arpl
jmp
lods
pop
mov
cmp
xor
sub
mov
idivb
jne
dec
fdivl
into
ret
add
add
jmp
aaa
loope
xor
jl
jb
scas
in
gs
jne
popf
xor
push
in
add
scas
scas
js
and
push
push
inc
xor
xchg
les
clc
cmp
sbb
ret
mov
mov
mov
cwtl
loop
shlb
outsl
cmp
fisubl
or
mov
jne
pushf
aaa
enter
arpl
mov
and
push
inc
jmp
ds
aaa
jne
fstpl
mul
dec
dec
out
inc
cmp
fsubs
dec
ret
mov
xchg
dec
jne
jae
je
in
leave
lea
das
xchg
lret
hlt
cwtl
mov
adc
imul
sbb
ja
btc
push
push
mov
jo
cmpsl
mov
ror
ss
xchg
in
arpl
sbb
cmpsl
repnz
lds
dec
test
push
in
adc
xchg
in
and
scas
pop
mov
lock
mov
push
adc
push
pop
jno
dec
xchg
dec
sub
dec
push
inc
data16
jp
cmp
add
js
add
sbb
mov
mov
aam
mov
push
jecxz
in
xchg
jns
int
push
addr16
xchg
and
xor
out
jb
jge
dec
jae
fwait
jnp
inc
fsts
out
movsl
inc
movsb
test
sbb
roll
cmp
inc
movsl
test
jge
nop
add
xor
fldcw
popf
mov
mull
fwait
lods
mov
sbb
cmp
or
ret
mov
cmp
pop
lahf
pop
scas
or
pop
out
dec
mov
das
mov
cli
dec
ljmp
scas
or
pop
out
dec
mov
das
mov
cli
dec
ljmp
sbb
jp
or
pop
out
mov
mov
das
mov
cli
dec
cli
pop
fisubrl
jg
jbe
inc
scas
sub
pop
out
lret
andnps
bound
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmpsb
shlb
call
test
pop
push
push
push
je
add
inc
and
xor
les
hlt
out
notb
inc
ss
jb
push
je
sub
inc
and
xor
bound
and
neg
scas
xchg
inc
ss
add
adc
push
out
xorb
cmpsb
mov
insl
dec
daa
sub
stos
into
es
lahf
in
fsubl
lret
fistl
jg
or
jae
sbb
int3
xchg
jb
int
and
mov
xchg
and
adc
inc
scas
test
pop
lods
cmp
add
push
cmp
es
pop
inc
stc
gs
idiv
call
jecxz
mov
lock
hlt
out
out
cmp
shll
mov
push
cltd
inc
fistl
adc
sub
sbb
xchg
xlat
dec
ss
test
add
cmp
and
lret
aaa
addr16
pop
mov
pop
pop
add
mov
push
pop
insb
ja
inc
enter
dec
mov
xchg
notb
inc
ss
push
pushw
dec
data16
inc
cmp
push
loopne
fistpll
mov
mov
repz
xor
inc
pop
jnp
push
add
add
xchg
repz
mov
int
xchg
xor
inc
ss
inc
add
adc
inc
push
inc
iret
mov
xor
mov
xchg
movsb
mov
inc
ss
push
fs
je
add
adc
and
xor
les
hlt
out
notb
inc
ss
push
fs
je
add
adc
and
xor
les
cmpb
pop
popf
jg
leave
mov
inc
cs
cmc
inc
loopne
loop
scas
xchg
pop
out
mov
lods
out
das
dec
lcall
pop
insl
mov
xor
int
test
fs
push
sub
adc
pushf
daa
lods
or
and
sub
pusha
adc
xor
sub
sbb
dec
ds
sti
add
mov
ret
lods
push
js
sbb
xchg
sbb
fistpll
das
xchg
arpl
sub
jmp
dec
test
jp
xor
stos
jg
call
cmp
inc
jmp
push
dec
ret
stos
mov
ss
shll
xor
fucomi
lret
and
mov
cmp
cmpsl
pop
jl
roll
jnp
clc
andl
icebp
adc
es
sub
fcompl
aad
mov
mov
or
bound
rorb
and
mov
subl
movsb
sbb
dec
push
cmp
push
adc
lret
xor
mov
int3
cli
jle
mov
sub
push
cs
leave
cmp
jne
sbb
ljmp
repz
rcrb
vcvtdq2pd
scas
outsl
leave
in
test
mov
mov
sub
or
jge
outsl
jb
fnstcw
mov
mov
inc
dec
add
push
adc
xor
dec
test
imul
in
int3
mov
sbb
fnsave
sbb
inc
cmp
cmp
push
dec
ds
sub
sbb
sub
hlt
adc
into
mov
mov
insb
movsl
lock
lcall
into
sbb
stos
mov
aas
repnz
push
sbb
sbb
js
jne
sti
jno
lret
mov
pop
mov
sti
js
ret
xorl
bswap
mov
fimuls
sbbb
out
cmpsb
std
cmp
in
lock
call
in
jl
cli
mov
ficomps
push
jp
mov
push
sub
stos
into
adc
sub
loop
rorb
push
jecxz
cwtl
mov
std
mov
daa
rorl
jae
push
mov
push
sbb
sbb
imul
add
lea
ss
movsl
add
leave
push
test
add
mov
sub
cmc
nop
xor
out
dec
movsl
test
add
lods
mov
add
cmp
adc
xchg
loope
mov
xchg
mov
push
int
xor
jg
scas
pop
sahf
dec
in
cs
adc
lds
out
sub
mov
sbb
ja
mov
lds
sub
mov
jae
mov
andl
insl
into
dec
dec
mov
sub
sub
jl
xor
sahf
xor
out
out
dec
dec
pusha
aaa
iret
adc
and
pop
or
adc
xor
pop
xchg
push
mov
jle
subb
std
jne
mov
adc
mov
or
sbb
mov
lods
aas
mov
outsl
movsb
mov
mov
and
push
test
addr16
sub
and
sahf
lock
pop
aam
jp
pop
push
mov
sbb
scas
ret
mov
or
sub
cmp
into
inc
aaa
lods
add
xchg
adc
clc
testl
jg
jo
push
leave
xchg
rorb
cwtl
cmp
mov
mov
sti
cmpsl
movsl
sub
cmp
xor
pop
das
and
stos
imul
adc
int
xor
mov
decl
movsl
push
sub
dec
inc
es
push
pop
push
shll
adc
cmp
cmp
mov
mov
sub
sarl
mov
es
ret
cmp
movsb
shll
or
pushl
popa
iret
call
or
pop
fsts
cmpb
icebp
ja
stc
divb
loopne
addl
sti
mov
push
push
aaa
pushf
mov
dec
enter
xor
mov
sbb
sbb
jl
xchg
daa
adc
andl
xchg
loopne
pop
lock
fsubp
movsl
mov
fwait
push
out
pop
cmp
pop
dec
sub
cmp
adc
jecxz
out
cmp
dec
mov
sub
addr16
xchg
xchg
jae
nop
inc
push
out
rclb
push
movb
imul
mov
jne
fdivs
inc
addr16
xchg
dec
dec
ljmp
pop
push
orl
mov
mov
stos
mov
cli
dec
jmp
cmp
xor
add
adc
inc
xor
xchg
jne
subb
out
dec
jecxz
inc
fldenv
lods
js
jle
scas
out
mov
xchg
lock
xchg
scas
outsb
fldl
iret
jmp
sbb
and
nop
jg
jae
cltd
icebp
push
aam
add
sub
int
arpl
lds
adc
aam
mov
dec
mov
ror
push
push
je
mov
loopne
insl
fcoms
xor
ret
outsb
orb
repnz
maxps
mov
adcl
xchg
out
ret
mov
dec
std
mov
lock
push
and
aas
rclb
int3
aas
cmc
cs
or
jecxz
dec
pop
mov
ret
pop
pop
loopne
mov
pop
fs
xor
into
inc
inc
gs
sub
pushl
enter
cli
or
mov
mov
xchg
cwtl
cmpsb
js
ljmp
inc
imul
test
popf
mov
pushf
mov
mov
pop
les
stc
fisttpl
mov
push
or
sysexit
cmpl
lods
in
fstpl
mov
inc
fidivs
andl
adc
stc
leave
push
jmp
mov
lods
insb
adc
push
shlb
xor
xor
pop
mov
clc
add
jge
sbb
mov
les
cmp
stos
or
or
into
cmp
cmp
inc
jl
cwtl
and
popf
shr
sub
push
sti
sub
out
out
int3
dec
or
icebp
xchg
insl
jb
mov
lret
fists
mov
loope
add
pop
sub
jno
stc
imul
xchg
rorl
cmp
jmp
cmp
cmpsl
sbb
pop
test
xor
sbb
pusha
sar
out
pop
push
inc
dec
das
dec
cmp
push
jo
pop
inc
jp
dec
adc
mov
inc
out
stos
xchg
je
subl
into
aaa
mov
cld
inc
jo
pop
mov
cmp
mov
cmpsb
dec
inc
pop
ret
push
push
push
sub
bswap
inc
es
leave
xor
fstps
sarl
inc
insl
mov
aas
sbb
adc
cmp
in
dec
arpl
dec
and
fdiv
jbe
jns
les
ret
mov
enter
mov
xchg
popf
add
mov
sbb
idivl
adc
rolb
push
or
mov
push
divl
cmp
inc
sbb
cmpb
add
sub
out
dec
push
fstpt
mov
sti
int
pop
outsl
cmc
pop
pop
scas
mov
mov
loopne
mov
xchg
bt
adc
das
fdivrl
jb
inc
lods
xor
xor
xchg
in
or
xchg
loopne
scas
mov
mov
push
dec
sbb
xor
xchg
pop
insl
iret
sub
xchg
pop
jmp
ds
xlat
pop
int3
jnp
jb
add
adc
mov
inc
scas
ljmp
inc
sub
loop
adc
fnsave
test
int
xchg
cmp
psubq
dec
aad
scas
and
and
insl
in
cmp
sub
loop
daa
adc
cmpsl
xchg
ja
out
or
mov
sti
out
repnz
pop
push
cs
mov
mov
negb
inc
shlb
cs
push
pop
fisttpll
lods
dec
cmc
sub
loopne
repz
sbb
sbb
adc
scas
add
dec
jae
cmp
popf
hlt
cs
loopne
popf
je
inc
adc
cmp
rcr
in
dec
or
jg
int3
sti
xchg
pushf
push
fimuls
cmpsb
xor
sub
inc
es
mov
fdivrp
leave
in
in
aam
in
clc
inc
movsl
dec
lods
ret
cli
adc
push
lods
mov
neg
movsl
xchg
js
sarl
fcomps
leave
mov
imul
mov
out
xor
push
repz
and
mov
xor
fcmovne
or
or
fildll
loop
push
jp
jmp
push
outsl
test
mov
negl
add
xchg
imul
cmpsl
xor
and
dec
jmp
notb
les
mov
cmp
stos
inc
in
aad
dec
pop
clc
dec
push
jns
lods
cmp
mov
testb
or
jg
jbe
jmp
push
pop
jmp
out
mov
out
lcall
or
nop
movl
adcl
push
mov
sub
cmp
movsb
adc
jg
icebp
xor
test
pop
and
mov
ljmp
movsb
lahf
andl
pop
pop
jbe
lods
dec
sbb
cmp
test
faddl
stos
or
sub
rcrb
or
push
jecxz
sbb
adc
lock
adc
cmpsb
mov
xor
clc
dec
fs
and
dec
lds
jae
xchg
nop
dec
repnz
or
dec
push
xor
push
mov
push
xchg
iret
xchg
and
add
daa
outsb
ret
loope
sub
fcmove
wrmsr
cltd
jbe
adc
cmp
and
or
xchg
inc
adc
dec
stc
iret
xchg
pop
stos
out
jns
in
jp
stos
pop
lea
movsb
xor
sahf
xchg
jns
std
push
test
and
and
cmp
jae
mul
test
pop
imul
repz
rcrl
inc
dec
push
jb
adc
lahf
xchg
sub
into
xor
mov
push
mov
sbb
lcall
dec
jl
pop
ds
fdivrl
sub
push
jle
cmp
push
cmc
lds
mov
test
jno
xor
pop
rolb
cld
mov
mov
inc
loope
ds
inc
lds
movsl
lcall
push
lods
or
pop
pushfw
scas
imul
and
and
push
push
or
stos
imul
adc
in
fdivr
pusha
iret
pop
sti
sbb
test
inc
push
in
jae
pop
mov
push
pop
test
icebp
movl
cmp
stos
sub
xchg
fs
cmc
push
incb
inc
add
and
cs
ja
push
add
adc
popa
mov
ljmp
loop
sarb
out
scas
bound
inc
lcall
je
jg
push
frstors
push
sbb
dec
mov
in
jno
dec
movsl
or
aaa
test
sahf
inc
push
aad
mov
mov
xchg
jle
cmp
imul
or
add
adcl
add
test
in
push
inc
pop
out
mov
cs
jle
ret
jns
adc
lret
cmp
andb
ficomps
ficoml
out
je
lods
push
jo
fdivrl
push
pop
mov
cs
fsubl
cmpsb
adc
or
xor
jno
add
push
popa
sub
enter
xchg
ret
mov
xor
out
sbb
dec
push
inc
ds
mov
mov
add
jno
cmp
gs
jae
es
cli
jns
adc
cmpsb
cmc
push
add
stos
xor
stos
inc
loope
in
loope
dec
inc
jl
jecxz
mov
and
insb
scas
test
orb
sbb
lret
sub
mov
xchg
push
jg
mov
adcl
je
dec
addr16
mov
aam
lret
roll
cli
add
loop
test
mov
mov
mov
adc
dec
mov
shrb
push
pop
mov
test
enter
lds
dec
mov
add
xor
adcl
imul
lret
pop
addr16
mov
add
insb
pop
mov
add
dec
push
xorl
sbb
mov
push
cmpl
imul
mov
leave
dec
cld
cmpsl
cmp
xor
dec
add
sbb
adc
xlat
jo
test
popl
cmpsb
mov
xlat
int3
sbb
push
js
cmp
fldl
sub
xorl
pusha
xor
aam
and
xchg
mov
cld
fisubrs
jne
adc
jno
mov
lea
inc
aam
das
fidivrl
aaa
dec
mov
xlat
mov
sub
and
fadds
mov
jo
js
movsb
sbb
cmp
shll
jge
popa
mov
sub
jle
sbb
jecxz
bound
inc
testb
roll
ss
int3
push
jo
inc
inc
lret
cltd
loop
xor
gs
sbb
cmp
xchg
add
push
pop
xor
pop
pop
push
fmull
cmc
push
test
adc
aaa
jp
mov
enter
int3
mov
adc
mov
aam
daa
push
sub
inc
rolb
xor
leave
or
loope
popf
push
fldt
in
data16
and
je
rolb
cmp
inc
sar
lods
pop
mov
aas
mov
mov
shlb
clc
orb
push
loop
dec
fdivr
adc
adc
cmpsb
leave
leave
insl
cmove
lods
imul
out
movsb
std
or
xor
dec
rcrl
cmpsl
pop
mov
cmp
cmc
rclb
arpl
ret
jg
xchg
pop
mov
add
fs
inc
aaa
sbb
mov
js
in
push
in
call
dec
outsb
cmp
cmp
sbb
push
dec
dec
fiadds
lret
adc
ja
les
movb
pop
mov
movsl
sahf
mov
jo
lret
aad
test
xor
movb
out
inc
jne
subb
sub
inc
popf
lods
cwtl
gs
jne
inc
mov
pop
xchg
lods
notl
jle
mov
xchg
jb
push
dec
shlb
mov
fsubrl
xor
mov
fsubrs
lret
inc
mov
shlb
bound
xor
popf
mov
fbld
cld
cmp
cmp
xchg
movsb
bound
lret
clc
iret
xor
and
push
jns
fdivl
adc
add
sbb
in
ljmp
out
and
imul
adc
mov
cmp
jae
xchg
add
ds
cmp
push
xchg
add
cmp
sub
xor
aaa
aaa
repz
pop
arpl
jp
and
dec
sub
xor
imul
inc
stc
push
jle
push
test
mov
mov
jne
xor
sub
lahf
test
lret
into
inc
call
jnp
sub
mov
xchg
pushf
pusha
add
xchg
loop
mov
scas
jp
and
jmp
cmp
sub
pop
ds
leave
jns
out
inc
mov
pop
cmp
cmp
loop
adcl
sub
push
push
inc
or
xor
mov
popa
dec
scas
mov
pop
movsb
decb
sti
cmp
jl
xor
sbb
inc
fidivrl
repnz
pop
xlat
or
lea
fcomp
pop
movsl
or
mov
mov
xchg
add
sub
pop
push
cmp
shrl
add
movsb
ss
movsb
push
arpl
dec
mov
test
and
in
add
cmp
cmp
dec
inc
or
push
push
jmp
push
jg,pn
loopne
mov
mov
scas
arpl
lock
in
push
push
ret
jnp
mov
cmp
dec
out
cmc
xor
pushf
les
mov
inc
std
xor
xorb
lret
fistpll
add
dec
xor
push
sub
adc
mov
int3
and
hlt
out
jno
jno
orl
xlat
stos
or
cmp
and
dec
pop
adc
ret
push
and
or
add
push
mov
into
sbb
dec
enter
dec
pop
pop
xlat
fsts
iret
js
dec
int
pop
xchg
sub
sbb
sub
sbb
cmpsl
ret
pop
mov
and
orb
insl
jmp
pusha
mov
xchg
ffreep
in
cmp
pop
dec
pop
das
pop
xorb
add
aam
mov
mov
cs
sub
mov
pop
jns
negl
mov
sub
and
pop
jbe
mov
fistpll
ss
mov
out
cli
out
push
xchg
push
js
int3
inc
imul
ret
or
xchg
xchg
in
test
mov
lea
and
and
push
loope
add
push
push
xchg
mov
cmp
cmc
inc
outsl
sub
ret
and
mov
jns
mov
enter
mov
rorb
cwtl
cmpsl
hlt
jmp
sub
mov
out
sbb
push
sub
pop
xchg
mov
sbb
cmp
cmpb
cs
cmp
repnz
scas
cltd
nop
mov
sbb
fidivs
jns
nop
int3
mov
fmuls
push
lods
xor
ret
test
cmp
add
pop
mov
stc
ficoms
push
push
mov
ret
ds
subb
popa
adc
mov
cmp
xchg
or
sbb
mov
push
add
ljmp
repz
insb
push
inc
or
ljmp
mov
loop
lret
mov
ret
pop
popa
idivl
nop
repz
push
xor
aad
jb
lcall
imul
lcall
ds
icebp
insb
pop
test
xchg
dec
andl
shll
mov
repnz
int3
mov
jp
fsts
and
mov
mov
pop
roll
scas
jb
xchg
inc
mov
sub
lods
lods
bound
lods
aad
cmp
sbb
je
dec
mov
icebp
xchg
jl
or
rcrl
dec
scas
mov
hlt
ljmp
or
jle
imul
sbb
test
scas
movsb
rol
adc
mov
fwait
push
or
fidivrs
jnp
and
mov
push
jmp
mov
xor
adc
pop
lock
mov
xor
sub
dec
push
fdivs
sbb
bound
inc
scas
mov
jecxz
cli
jle
iret
xor
test
aas
test
mov
xchg
inc
or
mov
add
mov
std
test
out
nop
sub
pushf
xor
pop
cld
jnp
ja
pusha
jl
scas
inc
push
sti
and
icebp
in
test
lods
lret
pop
ss
cmpsl
pop
push
mov
test
xor
outsl
dec
inc
mov
sbb
pop
cmp
cmpsb
out
mov
pop
iret
push
dec
mov
data16
ret
push
jge
mov
stos
mov
scas
das
mov
inc
cwtl
mov
std
jae
xchg
add
sub
or
pop
bound
std
lahf
push
adc
jne
stos
pop
pop
xor
push
push
mov
sbb
mov
xchg
ja
xor
in
sub
mov
xchg
adc
mov
add
lahf
jne
dec
test
sbb
and
std
jno
xchg
ja
mov
loopne
jne
push
and
push
cmpsl
and
les
xlat
frstor
mov
sbb
fldcw
xlat
movsl
sub
imul
pop
cmp
or
or
dec
or
ror
adc
rorl
sbb
sub
lods
scas
ficoml
push
pop
out
xchg
push
test
xor
sub
xchg
aas
mov
mov
and
add
andl
and
inc
push
mov
jg
jl
lahf
shll
rorl
jae
lahf
lret
pop
call
mov
xchg
es
test
cmp
add
in
fmuls
aaa
cmpsb
mov
fmuls
pop
inc
or
or
imul
ficoms
jg
inc
clc
lahf
jb
push
iret
popa
idivb
mov
push
aaa
push
add
shll
inc
outsl
cmp
dec
sbb
adc
icebp
xor
fisubl
adc
xchg
xor
mov
dec
jmp
add
ss
js
shlb
into
cmp
hlt
out
notb
inc
ss
push
fs
je
add
adc
and
xor
les
hlt
out
notb
inc
ss
push
fs
je
add
adc
and
xor
shlb
out
idiv
mov
ss
push
fs
jge
add
inc
sub
mov
xchg
xchg
mov
test
xchg
and
je
mov
push
add
jl
insb
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
leave
outsl
fnstcw
dec
stc
pop
cmp
das
mov
dec
mov
jns
or
cmp
jmp
das
cltd
aas
test
out
pop
ljmp
ja
or
sub
shrb
jg
dec
loope
nop
das
cmpl
push
out
jp
ss
jbe
jne
outsb
in
mov
daa
pop
fimull
cltd
cmp
jle
iret
or
mov
push
and
icebp
add
rorb
notl
das
cltd
mov
int3
fwait
jo
xchg
fiaddl
jbe
pop
into
outsl
and
pop
dec
daa
sbb
dec
push
mov
hlt
mov
enter
and
or
cwtl
ds
gs
add
aas
imulb
cmp
fs
sbb
jbe
xorl
push
cld
sbb
and
cmp
scas
pop
push
pop
jbe
fwait
negl
mov
mov
aam
adc
sub
dec
scas
dec
in
sub
sarb
stc
pop
sahf
das
mov
test
out
inc
pushl
pusha
fists
scas
add
movsl
imul
dec
call
dec
mov
sbb
jl
pop
notb
or
pop
in
cltd
jae
ljmpw
xchg
cmp
pop
fstps
lods
sub
cmp
add
pop
dec
out
pop
ljmp
jns
or
cmp
jmp
das
cltd
aas
test
out
pop
ljmp
jns
or
cmp
push
mov
sti
shrb
push
sbb
fs
popa
xor
adc
cs
and
pop
stos
and
rorb
mov
and
ss
jle
sbb
insb
fsubrl
out
sbb
je
dec
out
mov
or
out
scas
or
push
mov
sbb
xchg
je
icebp
test
inc
push
pop
sarb
ljmp
adc
pop
jp
pop
movsb
add
xchg
mov
or
jge
pop
jns
cs
mov
nop
insb
adc
loop
add
pop
fmull
pop
sahf
lret
sahf
lods
cmp
push
dec
ds
out
out
dec
cwtl
loope
icebp
jbe
or
xor
adc
mov
lcall
popa
ss
lods
pop
test
add
cmp
in
or
shr
xor
push
adc
in
and
sub
xor
pop
dec
mov
js
in
lock
data16
insb
xor
and
mov
dec
nop
inc
mov
mov
xchg
das
outsl
in
test
add
jmp
sub
lods
jbe
loop
out
mov
mov
std
inc
cmpl
data16
mov
int3
lock
adc
ljmp
in
pop
mov
mov
sbb
arpl
or
xchg
cltd
nop
iret
jns
mov
rolb
push
and
cmp
jle
or
add
stc
push
xor
idivb
addr16
add
ret
cmp
notl
std
fadds
scas
outsb
dec
lret
sub
mov
ffree
scas
rcll
jl
adc
aam
bound
ljmp
leave
adc
jecxz
pop
cmp
inc
decl
cltd
cmp
stc
push
scas
mov
in
xor
mov
cmpsb
js
enter
jecxz
pop
push
dec
lret
insl
or
xlat
out
icebp
int
jl
aam
adc
movswl
inc
lcall
dec
int3
cmp
fistps
leave
cmc
adc
fidivs
mov
adc
add
repz
shlb
cmp
jle
jmp
sarb
push
fidivs
repnz
sub
hlt
cmc
movsb
pop
mov
mov
outsl
sar
outsl
push
and
fistpll
sbb
subl
and
mov
mov
pop
test
pop
mov
inc
pop
test
clc
movsl
scas
nop
xorl
dec
fmuls
push
add
popf
enter
xchg
or
sti
rcll
jbe
rcr
sub
out
or
lahf
sub
addr16
and
mov
inc
cmp
or
aad
outsb
cmp
in
sbb
lcall
sar
inc
mov
aam
mov
faddp
ficoms
cmc
iret
mov
pop
jmp
mov
push
lods
std
or
popa
mov
js
lods
sub
cmp
icebp
sub
aad
icebp
push
pop
aam
jae
insl
test
adc
adc
sti
shll
jno
cmp
jl
imul
jmp
popa
je
incb
nop
jae
addl
inc
sbb
mov
dec
cmp
add
sbb
dec
dec
cmc
sahf
mov
dec
adc
stos
insb
sub
sti
or
mov
lret
cmc
dec
insl
mov
and
mov
jl
or
cmovae
mov
mov
lods
add
jl
daa
repz
mov
xchg
jno
daa
sub
jl
inc
push
aaa
ror
in
jns
and
add
dec
and
xor
pop
pusha
pop
and
test
inc
xchg
roll
lock
cmpb
adc
xchg
cmp
cwtl
cmp
push
sbb
sbb
cmc
push
stos
daa
push
or
jne
sub
adc
lods
loop
out
es
jo
idiv
outsb
idiv
jo
mov
outsb
and
cmp
inc
sbb
cmp
mov
or
dec
cmp
pop
addr16
add
pcmpgtw
push
pop
mov
shlb
loop
push
filds
fnsave
jae
cmpsb
stc
inc
out
pop
mov
add
xor
jno
xchg
testb
cmpsl
sbb
jns
pop
and
xchg
inc
mov
test
dec
mov
push
mov
jne
in
int3
in
xchg
cwtl
cmp
mov
adc
xchg
rorb
fistpll
mov
mov
xor
sbb
fisubl
testl
inc
jg
and
mov
es
sub
and
and
xor
inc
cmpb
je
aas
cwtl
out
jne
sbbl
ret
jmp
push
rcrb
sti
out
pop
pop
cmp
inc
push
bnd
pop
xor
imul
aam
inc
inc
fucomip
iret
cwtl
xchg
lret
pop
psubw
mov
mov
shll
push
sub
ss
in
adc
pop
mov
pop
jo
add
sbbb
add
mov
cmp
sub
mov
mov
add
sar
sbb
cmp
popa
lods
push
jno
subb
mov
test
mov
dec
cmp
and
repz
dec
popf
xchg
es
sub
adc
out
stos
rorl
insl
jp
pop
lcall
add
jecxz
ja
push
inc
push
xsaves
addr16
sarl
push
imul
outsl
mov
sbb
pop
cmc
aas
pop
es
push
in
stos
icebp
dec
pop
and
adc
pusha
push
sub
test
test
out
ljmp
jb
std
iret
inc
push
pop
cld
outsl
cld
mov
aaa
fstpl
ja
and
stos
cmp
test
sub
lods
out
jns
fadds
addr16
xchg
xlat
jle
sub
jnp
roll
pop
loop
in
mov
or
push
arpl
imul
les
les
mov
jno
jns
dec
out
xchg
loop
and
mov
int3
jecxz
xor
jbe
icebp
and
jb
repz
insl
decl
pusha
int3
daa
aad
cld
push
aam
mov
jbe
cmp
sbb
mov
pop
das
jmp
mov
or
lcall
xchg
push
push
sub
das
or
or
in
mov
ljmp
push
fisttpll
push
int3
dec
outsb
and
rolb
pop
movsl
out
negl
ret
dec
and
lock
xor
pop
fcoml
push
daa
outsl
push
sbb
fidivs
loopne
out
int3
sub
pop
andl
pop
mov
cmp
mov
mov
jp
les
mov
xor
push
inc
pop
imul
sbb
mov
sbb
and
and
js
notl
repnz
stc
in
add
arpl
xchg
or
pop
jno
xchg
inc
jno
adc
xlat
jecxz
lcall
ret
iret
mov
lcall
imul
jge
in
adc
jno
inc
roll
test
fcmovb
sbb
push
adc
push
sbb
cli
adc
rclb
pop
and
out
jecxz
cwtl
test
jl
or
imul
cmp
xchg
arpl
nop
fs
es
jns
xchg
add
in
mov
das
mov
into
sbb
js
mov
lcall
jl
xchg
pop
int
mov
adc
push
ret
push
imul
jmp
inc
sarl
add
push
outsl
ret
adc
xchg
test
and
insb
fsubrs
pop
mov
out
dec
mov
popa
jmp
add
push
cmpsl
cmpsl
push
aaa
jp
dec
jmp
mov
dec
jns
jne
or
call
addb
adc
rclb
repnz
stos
dec
mov
loop
mov
cld
addr16
push
pop
mov
push
inc
out
rcll
imul
stos
imul
insb
fwait
jg
xchg
loopne
stc
fidivs
mov
cli
add
add
jb
out
inc
std
out
mov
jp
imul
push
pop
lods
xchg
and
popa
in
inc
xor
dec
lret
and
mov
jmp
ret
rol
outsb
repnz
jle
mov
outsb
notl
and
test
mov
mov
mov
inc
aad
inc
shll
xchg
inc
jl
push
cs
loope
int3
loopne
into
iret
mov
dec
or
out
imul
fstp
nop
add
repz
repnz
sbbb
mov
adc
pushf
inc
xlat
das
sbb
sbb
sub
aas
sbb
aam
mov
mov
fwait
les
std
push
xor
jns
mov
jge
pop
xchg
sub
xor
adc
mov
inc
cwtl
or
sub
push
xchg
xchg
shll
rcrb
push
jne
mov
jno
ljmp
push
jle
sahf
ret
outsb
rcpps
xor
pop
aas
push
xor
mov
js
and
dec
sbb
fistl
filds
scas
dec
jne
cld
pop
lods
fistpll
adc
sbb
sbb
add
or
dec
add
mov
ss
mov
out
dec
cmc
sub
in
xor
popf
sbb
add
mov
std
xor
xchg
inc
sahf
xchg
xor
pop
arpl
mov
adc
insl
sub
fiadds
sbb
test
fmull
and
repnz
mov
push
cmp
mov
pop
cltd
mov
fdivr
xchg
mov
sbb
mov
dec
fcoml
insl
mov
ret
ja
ss
popf
sbb
pop
into
in
xor
lret
adc
adc
jp
dec
mov
subl
outsl
xor
das
mov
xchg
movsb
inc
or
and
gs
hlt
scas
cwtl
enter
adc
mov
mov
cmp
sbb
adc
cmc
sti
push
inc
jmp
jmp
xchg
dec
inc
dec
addb
je
sbb
jbe
sbb
je
fidivrl
lcall
add
insl
test
pop
ds
js
es
jecxz
rcrb
adc
fisttpl
mov
in
js
daa
inc
rolb
jnp
bnd
mulb
mov
mov
cs
xlat
clc
mov
enter
push
add
pop
movsb
cmc
add
lods
jne
lods
and
fstl
sub
adc
sbb
fidivs
mov
pushf
push
adc
ljmp
divb
aad
ffree
sub
push
aad
std
pop
xor
int
std
dec
lea
xchg
fildll
rol
xchg
jp
fidivl
mov
hlt
shrl
mov
daa
inc
out
inc
lret
jge
aam
das
int
mov
lods
or
pop
ret
sbb
fstpt
jg
xchg
int
cmp
pop
xchg
adc
insl
ret
xor
cmp
push
in
sbbl
sbb
dec
xchg
rorl
or
negl
mov
stc
pop
test
sti
pop
pop
fmull
jl
pop
or
lret
xor
loopne
cmpb
or
mov
fwait
lods
mov
cmpsb
mov
sub
rcr
or
mov
lcall
mov
mov
jb
out
fscale
jge
paddd
lret
inc
sbb
add
jb
jne
push
insl
mov
das
sub
cs
jne
testl
or
jns
movb
xor
fs
popf
jle
mov
loop
pushf
sbb
or
or
inc
adcl
sbb
repz
cmpsb
lret
adc
inc
push
and
sbb
dec
int3
add
and
pop
in
add
ds
pop
in
rcrb
sbb
pop
mov
fwait
lea
cmpl
popa
lea
mov
xor
sbb
int
jle
loopne
or
out
icebp
mov
sbb
sti
insl
pop
icebp
or
pop
or
pop
je
mov
jp
cmpb
jecxz
adc
mov
push
std
jmp
jae
cli
cld
fdivp
enter
popa
cmp
cmp
mov
lods
int
inc
rcrb
daa
mov
or
sub
jb
xchg
cmp
dec
jecxz
rolb
je
sub
repz
enter
push
mov
pop
loopne
decl
aad
addr16
pop
push
test
ss
faddl
lcall
mov
sbb
push
dec
ror
mov
std
cmpsl
into
stc
jae
push
mov
mov
mov
ficomps
dec
mov
jecxz
movl
and
andl
mov
pop
out
addl
jle
dec
add
ret
xor
jmp
lcall
in
ret
mov
mov
in
pop
not
and
xlat
out
unpcklps
and
xchg
repz
mov
jg
shrl
leave
xor
fsubl
sub
call
test
push
push
test
sub
jno
or
rcr
mov
adc
add
insl
mov
inc
push
scas
mov
jne
pop
mov
push
inc
sbb
push
xchg
mov
mov
cmp
jnp
or
in
dec
push
add
mov
mov
and
xor
testb
dec
inc
aad
mov
loop
cmp
orl
mov
mov
and
xor
xor
mov
out
mov
dec
repnz
pushf
dec
dec
push
aad
jo
int3
sub
test
add
mov
cli
push
mov
cmp
lock
cmp
test
push
add
jne
xchg
xor
jmp
mov
mov
notb
pop
inc
into
inc
dec
lds
jb
lea
subl
rolb
js
test
psubusw
pushf
sti
pmaddwd
push
push
xor
adc
mov
add
xor
inc
jecxz
fists
mov
mov
lcall
int3
push
cmp
lock
push
ss
popa
out
testl
jbe
imul
mov
aaa
xchg
mov
jae
int
cmc
ret
push
adcb
ret
insl
js
adc
pop
push
sbb
out
xor
or
cmpsb
mov
adc
add
jae
scas
lret
in
lds
adc
adc
push
cmp
mov
js
jge
ljmp
movsb
cwtl
inc
lret
pop
aaa
out
mov
xchg
popf
mov
jbe
rcr
add
lods
cmp
ss
das
pop
push
pusha
shll
das
sbb
xor
mov
ljmp
loopne
in
inc
jns
mov
fwait
xlat
js
inc
mov
rolb
xchg
adc
int3
popf
mov
or
mov
sbb
adc
adc
mov
les
dec
push
inc
lock
or
pop
cwtl
inc
data16
ja
out
loop
add
add
aad
mov
mov
push
cmp
sbbl
fsubp
repz
sbb
add
jle
fcompl
shlb
and
jmp
sub
repnz
adc
lods
in
mov
push
jae
dec
fldenv
fadd
call
mov
add
rolb
mov
into
test
outsl
test
mov
fsubs
mov
movsb
jns
lods
negb
inc
aad
xor
clc
pop
pusha
mov
stos
outsb
and
test
clc
ret
or
fstpl
sub
jmp
pop
dec
xor
push
push
xlat
repnz
fwait
cmp
cmp
loopne
add
push
pushf
lods
outsb
mov
std
mov
shrl
mov
pusha
dec
cli
shll
sbb
push
fstpt
out
jo
mov
in
and
pop
pop
sbb
push
xor
cmp
inc
adc
aas
mov
icebp
pop
iret
xchg
push
xor
add
mov
movsl
mov
in
cli
pop
mov
test
mov
push
mov
out
lods
pop
fidivrs
xor
fistl
dec
adc
mov
ret
lahf
andl
pop
decl
fs
jbe
dec
in
roll
dec
add
test
xor
ret
imul
jo
xor
sbb
mov
scas
pushf
sbb
test
xchg
data16
cmp
test
cltd
jae
adc
call
and
or
popf
or
pop
pop
scas
jle
out
add
movsb
arpl
dec
dec
mov
stc
arpl
cmp
js
dec
xchg
push
dec
mov
nop
push
push
jne
adc
xchg
in
loope
mov
adc
aam
jl
or
pop
lods
pusha
dec
dec
fisttps
jo
xchg
adc
cmp
jmp
inc
mov
add
jae
inc
loop
inc
pcmpeqd
dec
sti
push
ss
scas
outsl
scas
cmc
stos
dec
push
clc
cmp
imul
jbe
daa
cmp
cmc
sub
sbb
shlb
push
sub
jl
movsb
jecxz
scas
jo
mov
sar
cmpsb
cwtl
hlt
fxch
in
push
addr16
sub
push
test
fwait
call
rclb
xor
sti
out
stos
scas
adc
add
insl
dec
stos
and
repnz
dec
dec
loopne
xchg
ret
cs
dec
cmpsl
xlat
aaa
sbb
or
xchg
loop
push
sub
subl
popa
pusha
cwtl
scas
leave
mov
dec
pop
nop
insb
mov
int
xlat
cmp
lods
test
push
pop
dec
xor
data16
dec
mov
xor
aas
outsb
jo
clc
sbb
xchg
scas
ret
jmp
test
aaa
mov
adc
push
mov
stos
enter
add
xor
dec
dec
hlt
out
paddsw
lret
enter
insl
fucomip
lock
pusha
fstpt
aad
loop
aam
mov
xchg
or
imul
stc
or
mov
sub
cwtl
or
and
add
lahf
dec
dec
testl
rclb
clc
insl
fistps
out
dec
pop
lret
cltd
stc
hlt
xchg
pop
and
imul
aad
pop
jnp
std
scas
xchg
mov
xchg
repnz
push
mov
mov
loope
ror
jns
rorb
push
stos
les
stos
out
loop
stc
jmp
fstl
out
fneni(8087
mull
jbe
adc
push
fisubrs
push
imul
ds
rcl
mov
in
push
adc
out
pusha
push
sbb
je
fimull
je
xor
shrl
jp
inc
push
cld
sub
add
insl
inc
pop
frstor
jmp
mov
shll
dec
jo
mov
js
jnp
rcrl
imul
or
xor
stc
jb
sub
in
push
and
jecxz
inc
fisubl
adc
movsb
fcmovbe
mov
scas
rol
movb
fldl
imul
lcall
mov
out
ss
clc
push
notb
aas
pop
pop
cmp
ss
xchg
gs
inc
repnz
xor
sbb
xchg
jne
insb
sub
imulb
pop
movsl
into
fwait
cs
adc
and
out
shlb
mov
imull
cmp
inc
sbb
in
and
dec
xor
and
pop
mov
repnz
imul
sahf
sti
in
pop
cmp
mov
adc
lods
movsb
fisubs
imul
fs
pop
mov
mov
inc
cs
push
pop
jl
mov
jns
mov
mov
mov
imul
inc
pop
mov
dec
jge
or
loop
push
pop
push
xchg
movb
test
decl
adc
adc
pop
mov
jecxz
push
jp
cltd
clc
nop
and
push
aas
push
aad
arpl
mov
adc
lahf
inc
stos
sbb
push
inc
mov
cmpl
mov
in
jnp
dec
enter
cmp
mov
jns
inc
mov
adc
icebp
loop
or
loope
push
add
in
out
xor
test
mov
mov
push
outsl
sbb
mov
mov
mov
leave
ret
fs
mov
jle
xlat
xlat
or
mov
xor
or
mov
clc
in
xchg
dec
or
insb
scas
pop
repnz
jb
mov
pop
aam
pop
push
sub
adc
addr16
and
test
adc
xorl
stc
push
add
mov
ja
popf
add
cmpsb
addb
xchg
std
push
inc
or
dec
stc
pop
mov
cltd
aas
test
out
pop
ljmp
jns
or
cmp
jmp
das
cltd
aas
test
out
pop
ljmp
jns
or
cmp
jmp
das
cltd
aas
test
out
pop
ljmp
jns
or
cmp
call
das
cltd
aas
sub
cmp
mov
cmpsb
push
ret
iret
jns
jle
xchg
inc
jo
pusha
cmp
pop
or
or
ja
or
fisttpll
sub
dec
jge
insl
sub
dec
insb
mov
fmuls
test
cmp
pop
or
sub
dec
or
mov
xor
cld
mov
sbb
and
push
sbb
adc
mov
leavew
dec
jne
cmpsb
jns
xor
les
xchg
mov
inc
jmp
jb
add
inc
fsubrs
and
mov
je
out
ret
mov
fisttps
lods
inc
nop
xchg
mov
hlt
sub
pop
pop
cmp
fcoms
dec
jmp
arpl
out
add
clc
mov
mov
repnz
and
insl
fimuls
or
sti
cld
sbb
lock
scas
ljmp
shlb
jg
out
inc
mov
xchg
dec
sub
pop
in
bound
stc
cwtl
cltd
dec
jbe
jns
imul
sbb
mov
test
jl
pop
adc
or
pop
pop
cmp
mov
mov
mov
mov
adc
popa
sub
sub
pop
daa
fcomps
fwait
cld
faddl
fstpl
sub
xor
or
pop
sbb
mov
test
cmp
pop
or
sub
dec
or
test
cmp
and
mov
mov
negl
ficompl
in
xchg
mov
jp
push
and
mov
jmp
cli
xchg
clc
outsl
stc
sub
pop
test
pop
rorb
shrl
xchg
fndisi(8087
cmp
xor
sbbb
js
jo
gs
int
adc
dec
mov
ficoms
inc
clc
cld
jae
pop
xor
outsl
outsb
add
inc
mov
mov
push
sbb
fs
stos
push
xor
in
mov
cmpsb
movsl
scas
and
hlt
das
sub
and
popf
add
pop
jb
clc
push
push
stc
aaa
push
push
or
xor
add
repz
addb
pop
inc
sbb
enter
dec
dec
or
xchg
jle
sub
in
in
add
cs
mov
into
jbe
dec
rcrl
or
jbe
push
outsb
pop
jb
sbb
pop
insl
mov
addl
adc
inc
push
adc
mov
dec
fabs
push
cmp
cli
std
push
sbb
jge
or
scas
sti
es
sarl
jno
cli
xchg
daa
or
je
ds
cmp
test
fucomip
lods
sbb
xchg
sbb
scas
mov
mov
mov
push
pop
jo
sti
add
xlat
mov
in
test
insl
lcall
mov
mov
shll
and
xchg
mov
sti
add
nop
in
dec
rcr
inc
cmp
sti
or
mov
push
dec
adc
push
shll
cltd
mov
stos
ljmp
inc
and
mov
lcall
jmp
dec
mov
mov
dec
inc
jo
les
dec
sub
rcrl
add
adc
xchg
lret
addr16
adc
push
sbb
lock
shll
jecxz
cmp
xor
aas
aad
adc
scas
mov
out
cs
popa
incb
sahf
sbb
jl
orl
mov
inc
add
pop
lcall
inc
cmp
aam
filds
test
jo
sub
or
xorl
adc
xchg
push
and
fcomps
jb
cmpsb
stos
xor
push
int3
inc
dec
in
xchg
or
out
lret
loop
mov
jp,pt
mov
hlt
jae
xor
shrb
cmpsb
xchg
dec
jno
clc
push
mov
cmp
push
xor
shl
push
adc
add
xchg
adc
mov
sub
ljmp
dec
fnstsw
xchg
daa
in
xchg
dec
cmp
stos
jl
mov
mov
iret
push
mov
push
add
xor
lock
int
push
pop
icebp
mov
sbb
ret
inc
dec
sub
out
les
fdivrp
mov
arpl
inc
push
mov
push
lea
data16
or
pop
push
xchg
subl
in
dec
imul
jbe
repnz
bound
icebp
dec
dec
push
outsl
out
adc
loop
loope
shll
sub
icebp
popf
add
mov
xchg
and
pop
push
xchg
fistpll
cmp
inc
pushf
and
dec
and
push
sbb
jl
sbb
cmp
lret
cmpsl
cmp
cld
push
out
out
cmc
ficoml
and
mov
sub
xchg
xchg
and
lea
mov
sub
or
push
dec
mov
repz
lods
pop
push
mov
mov
cltd
xor
xchg
or
mov
fists
pop
lahf
or
inc
cmp
and
sub
mov
cld
push
popa
stos
lea
push
fsubs
jmp
lcall
inc
pop
xorb
mov
enter
clc
sbb
sbb
jb
lock
std
sub
movsl
sbb
adc
fstpl
push
cmp
pop
push
pop
arpl
push
popf
std
cmp
repz
jne
inc
movsb
lahf
dec
insl
and
xchg
pop
imul
mov
jmp
arpl
ficoml
inc
push
mov
es
pushf
lock
sbb
ret
mov
jmp
je
rolb
jns
aad
loope
dec
and
xchg
scas
jle
push
jg
jle
or
fwait
pop
inc
lcall
inc
and
popf
cmp
dec
jbe
push
jle
popl
mov
jbe
pop
aas
pop
jp
add
rcrb
push
inc
mov
adc
pop
lcall
nop
pop
dec
push
rolb
xor
jmp
aad
jb
or
je
mov
add
cmc
xchg
adc
xlat
ret
int
aaa
fnsave
inc
cmp
mov
inc
lea
sbb
mov
xor
aam
sbb
or
mov
pop
adc
inc
jns
xlat
cmp
icebp
into
loopne
ret
rclb
es
sbb
cli
repz
jnp
xor
push
mov
push
pop
add
ret
push
sbb
sti
subl
sti
lods
aad
mov
sub
jge
repz
xor
inc
mov
add
shlb
lock
mov
fmul
movsl
push
jnp
xchg
xchg
sahf
xor
les
repnz
and
shr
cmp
sub
push
mov
sub
stc
cmpsl
hlt
inc
call
arpl
jmp
push
and
int3
popf
xchg
adc
mov
sbb
or
clc
mov
mov
addb
cmc
imul
cli
movsl
mov
adc
fadd
mov
adcl
insb
xchg
data16
mov
movsb
jle
xor
sub
mov
dec
mov
mov
jne
jns
cmp
mov
notb
dec
mov
push
les
xchg
mov
inc
ss
addl
mov
loop
mov
insb
fisubl
ror
push
or
cld
lcall
adc
call
cmc
loopne
mov
fidivrs
mov
aaa
in
xchg
mov
andb
push
jmp
cmp
ja
sbb
cmp
hlt
adc
mov
xlat
fucomip
jo
jecxz
in
mov
add
in
cmp
cmp
movsb
xchg
test
sar
shlb
into
and
or
pop
into
adc
test
xor
icebp
loop
mov
and
push
xchg
loop
push
das
sbbb
mov
pop
movsl
lods
cmp
and
lahf
loope
jmp
aam
imul
or
mov
adc
add
pop
cli
adc
push
loop
cmp
cmp
in
pop
xchg
lret
inc
ds
cmp
leave
enter
adc
mov
stc
mov
pop
sub
push
mov
in
stos
inc
out
adc
inc
sarl
pop
cld
pushf
or
sbbb
sbb
or
stc
aas
xchg
aas
addl
pusha
xor
aad
lahf
rclb
xchg
dec
or
push
and
adc
inc
mov
cmp
fists
cmp
sbbl
mov
cmpsb
int3
shlb
dec
add
mulb
andb
movsl
inc
mov
lret
pop
jp
rclb
push
add
pop
add
mov
jne
pop
jo
outsl
sbb
ds
sub
fadds
inc
int
xor
cmp
stos
aaa
cltd
push
popf
lods
icebp
int
js
lods
inc
add
aam
or
add
pusha
lods
lret
btc
in
mov
dec
or
test
add
cli
mov
inc
inc
lods
enter
mulb
inc
subl
pop
fbld
cmp
or
push
stos
sbb
in
add
xchg
daa
jo
adc
jl
xor
xchg
shll
jb
test
pop
or
mov
inc
outsl
aam
adc
xchg
sub
cmp
mov
aam
mov
movb
inc
adc
add
jae
and
mov
mov
lock
int
xchg
test
pop
movsb
sub
add
mov
pop
sub
movsb
sar
out
sub
shrl
jg
adc
cwtl
icebp
push
rorl
pusha
push
xchg
fs
adc
inc
inc
mov
roll
adc
mov
adc
xlat
lahf
mov
or
cwtl
sbb
xchg
add
xchg
loop
sbb
lds
pop
sbb
cmp
into
mov
mov
adc
fs
hlt
jge
dec
jmp
mov
loope
push
pop
loopne
aad
iret
mov
lods
orb
pushf
pop
mov
add
dec
test
shr
sbb
aam
sarb
cli
add
notrack
sbb
leave
test
xlat
sbb
mov
aaa
popf
add
add
ret
outsb
fldcw
cmc
test
call
outsl
sbb
push
out
pop
dec
push
ret
mov
rcrl
repz
cmp
gs
int3
mov
push
inc
push
push
outsb
and
testb
loopne
mov
into
orb
or
mov
clc
cmp
sub
and
rorb
push
stos
pushf
push
add
pop
movl
and
adc
rcrb
add
lret
add
imul
push
add
pop
xchg
outsb
addl
fucom
mov
rcrl
or
sbb
mov
fcoml
mov
lods
cmc
dec
xor
jg
mov
iret
push
minps
dec
jg
flds
jnp
sub
pop
jne
nop
and
xor
mov
divl
jmp
or
sub
pop
jns
outsl
dec
jnp
sub
jbe
push
fs
push
fnstenv
lds
fnstcw
test
ret
in
decb
sbb
inc
sbb
sub
lahf
mov
mov
sbb
adc
test
jg
xor
sub
add
scas
out
in
push
push
test
rolb
push
je
es
pop
jbe
and
add
jo
mov
mov
sub
imul
mov
loop
gs
stc
inc
jl
cmp
loop
in
pop
mov
mov
cwtl
enter
popl
sub
push
inc
pusha
jmp
enter
mov
lods
insl
sub
lcall
in
iret
xorl
or
mov
pusha
xor
sub
rcll
repnz
mov
scas
icebp
clc
inc
movsb
jno
icebp
cld
test
sbb
arpl
insl
clc
pusha
sarb
sub
mov
pop
push
mov
js
js
sahf
sbb
scas
enter
xor
out
fsubl
xor
xchg
add
jmp
out
inc
cmpsl
lock
fildl
push
shlb
mov
add
xor
xchg
inc
ret
pushl
mov
fstpl
dec
inc
jp
mov
shll
cmp
push
call
daa
ja
inc
es
add
lods
std
inc
movsb
jo
sub
pop
dec
xchg
mov
mov
pop
push
mov
jmp
mov
pop
in
insl
dec
scas
jecxz
mov
mov
repnz
jo
cltd
lret
lock
mov
mov
sarb
inc
fnstenv
and
push
adc
dec
out
xor
imul
cmp
cmp
sbb
xor
mov
adc
add
insl
jg
out
sub
sar
arpl
push
jne
in
xchg
pop
dec
adc
jbe
sub
popa
in
fs
fs
push
fsubs
xchg
jnp
sub
or
or
adc
repz
mov
xchg
xor
aaa
or
push
and
jg
xchg
push
sarl
mov
and
mov
test
or
bound
mov
mov
xchg
shll
jo
sti
mov
pushf
jbe
int
jg
sahf
pop
xor
test
jmp
lea
xor
aad
or
in
icebp
and
int
and
popa
jns
sbb
mov
orl
loope
jno
cmp
mov
sbb
sbb
cmp
mov
sub
xlat
in
lock
mov
cmp
out
dec
mov
inc
dec
flds
push
pushf
add
stc
dec
test
xchg
adc
sbb
out
mov
jp
inc
cld
push
ret
jecxz
js
jmp
lods
dec
sbb
mov
jb
cmp
inc
aam
dec
lds
outsb
nop
dec
imul
mov
push
inc
mov
sahf
in
pop
lods
jmp
loope
jne
les
int
int3
mov
fdivs
inc
dec
pop
mov
xchg
enter
push
xor
push
lret
gs
and
or
je
pusha
fimuls
in
test
xor
int
mov
shrb
xor
stc
in
es
js
inc
call
push
lods
inc
out
ret
sub
jp
fdivs
mov
or
fstps
mov
aam
aam
vandnps
lods
pop
xor
dec
jp
orb
sub
cmpsl
pop
cmp
jge
xchg
jecxz
cltd
xchg
mov
inc
or
je
mov
mov
sbb
jp
push
divl
xchg
inc
or
imul
iret
inc
gs
jne
lock
adc
loopne
dec
enter
and
mov
push
pop
jno
loope
or
adc
out
sbb
xchg
pop
dec
adc
pop
incb
add
adc
insl
cmp
stc
mov
add
xchg
mov
insl
jmp
ja
hlt
int
ror
test
sbb
repnz
and
andl
jae
push
mov
enter
in
outsl
dec
fwait
mov
mov
mul
dec
movsb
sbb
cs
mov
jne
pop
cwtl
rcrb
in
or
jo
mov
lahf
mov
jecxz
sbb
cmp
scas
idivl
imul
aad
push
faddl
push
movsb
jne
ret
aam
fldl
push
dec
push
out
cmp
lods
push
rcrl
out
insl
cmpsl
fs
rcl
pop
add
rcrl
movsb
pop
or
xchg
scas
or
lret
gs
sub
fwait
js
xor
rolb
pusha
add
lret
xchg
fsubs
rolb
out
xor
jl
cmpsl
iret
stos
data16
fstps
add
adc
mov
ss
xchg
mov
ds
push
adc
bound
shl
pusha
xor
nop
and
psubusb
sarb
lret
mov
lods
push
jge
mov
xchg
and
mov
cld
icebp
mov
notl
cltd
arpl
scas
test
leave
mov
stc
es
mov
sbb
and
mov
hlt
das
in
sbb
ja
xor
mov
insb
pusha
ds
testb
imul
and
cmp
xchg
push
add
ja
sarb
imul
cmp
jnp
andl
dec
jle
sub
sub
cmp
cmpsb
stos
jl
xor
addb
add
scas
imull
popa
das
mov
adc
inc
dec
lret
sub
cmp
mov
lret
scas
mov
mov
ss
icebp
adc
pop
cmpsl
jecxz
lods
push
adc
inc
icebp
outsb
xor
jmp
inc
cs
and
jb
std
xlat
mov
add
xchg
pop
cs
jbe
fidivs
cltd
jno
stc
add
dec
and
mov
mov
adc
outsl
fwait
ljmp
push
push
or
jl
jl
ds
mov
icebp
mov
cmovnp
nop
sbb
fucomip
mov
ja
mov
jno
xlat
test
add
xchg
mov
clc
jo
xor
jg
mov
inc
xor
mov
js
loope
js
pop
dec
mov
sbb
sbb
xchg
outsb
inc
xor
sbb
sbb
xchg
cmp
ret
fstl
mulps
loope
mov
sbb
lcall
jnp
push
push
in
pop
arpl
or
fldenv
iret
js
xor
adc
out
add
jp
mov
xchg
in
loopne
sbb
pop
xchg
sbb
repnz
pop
mov
pop
cmp
ss
sub
xchg
in
pop
insl
push
pushf
dec
mov
loope
bound
pop
imul
cmpsb
jle
mov
nop
lds
fisttps
cld
jmp
adc
aam
jge
fsubr
scas
xchg
and
cmc
repnz
mov
pusha
clc
xchg
out
jne
jb
ljmp
jae
mov
mov
or
xchg
cmp
pop
out
xlat
lock
bound
and
loopne
mov
arpl
and
cmp
sub
sub
jl
jecxz
movsl
jno
xchg
int
mov
outsl
jnp
mov
daa
testb
aam
test
mov
stc
sbb
and
fisubl
ja
pop
sub
test
xchg
or
push
push
pop
xchg
shl
adc
shlb
shll
push
sub
stos
sbb
push
mov
mov
add
inc
mov
and
xlat
cltd
sub
shl
sub
aam
jbe
add
shll
lds
push
mov
pop
mov
push
cmp
int3
jle
cmpsl
stc
jg
jbe
mov
mov
stos
add
inc
jmp
add
movsb
jmp
dec
int
cmc
leave
das
mov
sahf
rcr
out
std
repz
add
mov
mov
push
sbb
xchg
leave
jmp
cmpsl
pushf
push
add
lahf
push
mov
mov
xchg
imul
loop
mov
mov
inc
ds
out
sub
adc
in
dec
xchg
ss
icebp
sbb
imul
or
and
and
sar
cld
sbb
addl
inc
xor
hlt
sar
sarl
addr16
sub
mov
stos
adcl
cmp
adc
orb
sbb
xchg
repnz
inc
stc
inc
push
sbb
mov
xchg
jb
adc
aam
fwait
icebp
aas
inc
scas
mov
pop
inc
loope
pop
sub
jb
ljmp
sarl
popa
cli
jb
pop
push
repnz
hlt
cmp
ficoms
inc
jbe
inc
jns
arpl
jmp
clc
and
dec
cli
push
sub
dec
imul
sete
fildll
js
ficoms
clc
ret
add
pop
adc
mov
mov
mov
mov
mov
out
jne
es
sub
pop
out
mov
inc
sti
push
and
sub
cmpb
mov
iret
xchg
mov
inc
cs
jmp
imul
mov
dec
cltd
pop
add
xlat
cmp
test
mov
mov
xor
inc
and
or
jae
add
stos
in
fdivp
and
repnz
aad
imul
shlb
sbb
and
cmp
add
pop
ja
fisubrs
mov
xor
rcl
adc
shrl
sub
sbb
dec
mov
cmp
xor
jbe
jp
sbb
inc
xchg
push
cmp
aad
or
imulb
mov
fisubl
jg
cmpsl
mov
xchg
outsl
cmp
xchg
stos
xchg
shll
pop
pop
xchg
jecxz
mov
jge
mov
add
addb
popa
or
nop
jne
mov
movsb
aaa
shll
shl
push
xchg
fnstenv
pushf
jecxz
dec
mov
jg
inc
add
cmc
int
imul
insb
loope
leave
lea
int
iret
push
iret
stc
imul
cmp
pop
mov
push
inc
in
mov
mov
or
data16
cltd
js
sbb
sub
cwtl
push
pop
ret
and
int
inc
dec
adc
mov
push
iret
in
pop
loope
in
repnz
dec
lahf
movsb
inc
pop
sbb
cmpsl
sbb
inc
insl
nop
sbb
or
xchg
sub
dec
jmp
fiaddl
inc
insb
les
xchg
xchg
ja
call
xlat
cmp
int
popf
lahf
mov
inc
xor
rcll
pop
mov
daa
inc
cmc
rcrl
jmp
test
mov
daa
sbb
test
mov
test
in
or
jp
mov
pop
ds
in
adc
aad
out
repnz
push
mov
jp
cld
sbb
dec
std
cmc
and
xchg
xchg
xchg
or
insl
fldt
cmp
sti
mov
and
movsl
or
or
pop
jmp
push
cltd
mov
cld
out
stos
push
mov
adc
repz
test
pop
or
sub
dec
or
test
cmp
pop
or
sub
dec
or
test
cmp
pop
or
sub
int
mov
test
cmp
pop
or
sub
dec
leave
mov
push
lods
mov
int
ffree
in
sar
stos
repz
lahf
mov
inc
insl
push
jge
or
adc
ret
std
mov
lods
xchg
mov
inc
insl
push
jge
or
adc
ret
std
mov
lods
xchg
mov
xor
inc
jns
dec
jnp
xchg
int
test
lods
dec
in
imul
push
sub
cmpsb
push
hlt
push
lds
add
mov
cmp
jne
xor
sbb
sbb
push
dec
stos
int
fmull
xlat
mov
adc
aad
add
aad
lret
fildl
xchg
jle
dec
mov
pop
xor
rcrl
and
das
add
xchg
bound
sbb
arpl
jp
iret
xchg
lds
insl
fimuls
and
mov
sahf
data16
mov
dec
mov
cmp
repnz
jmp
and
repnz
in
sar
mov
lods
xchg
mov
inc
insl
push
jge
or
adc
mov
xchg
mov
in
enter
and
xor
add
adc
bound
mov
stos
call
xlat
mov
aas
cmp
aad
push
jb
pop
js
test
mov
out
mov
subb
pop
inc
insl
push
jge
or
adc
ret
std
mov
lods
xchg
mov
inc
insl
push
jge
or
adc
pop
pop
lods
sub
dec
inc
mov
cli
or
cltd
jge
aas
cmp
and
dec
fsubl
sarl
in
jo
clc
inc
and
xchg
xchg
mov
cmp
cmp
xor
iret
jno
mov
test
lcall
popa
jnp
cmpsl
xchg
ficoml
test
dec
in
loop
enter
adc
mov
pop
or
or
rol
push
dec
sbb
ret
ja
xchg
aam
lahf
mov
jbe
cwtl
add
jbe
cld
into
fs
out
push
sub
xlat
fstpl
shlb
repz
cmpsb
mov
pusha
pop
pop
pop
js
sbb
cmpb
xor
sbb
push
iret
insl
ss
or
mov
xchg
jp
and
mov
mov
lret
inc
xor
iret
fcoms
dec
mov
loopne
scas
xor
xchg
and
dec
adc
in
jge
insb
and
push
push
mov
dec
jbe
in
stos
mov
scas
adc
fildl
xor
and
add
sbb
outsb
and
outsl
popf
scas
pop
es
aas
mov
push
and
xchg
dec
or
mov
fstpt
xchg
insl
or
int3
cwtl
mov
outsl
fcoms
xor
dec
sti
push
mov
mov
loope
push
frstor
loop
lock
push
push
cmp
cli
pop
sub
fdivrl
imul
inc
jmp
jbe
call
push
rcrl
dec
inc
adc
push
clc
rcrb
and
movsb
adc
subl
mov
filds
xchg
ds
adc
mov
int3
jl
out
nop
xchg
add
test
fwait
xchg
and
sbb
and
icebp
sti
cmpsb
or
dec
icebp
pop
mov
aas
mov
push
adc
cmpsb
mov
xorl
out
mov
pop
add
lds
mov
xchg
jbe
and
lods
mov
adc
repnz
pop
jnp
dec
jne
xor
aam
outsb
bound
in
pop
jp
adc
addr16
mov
ds
jmp
mov
cmp
movsb
push
inc
push
push
repnz
lret
cmp
add
push
jb
lods
test
mov
dec
add
sub
test
fwait
cmpsb
int3
bnd
dec
test
ret
cmp
pop
mov
sub
pop
insl
adc
add
outsb
sub
cs
mov
sbb
pop
enter
hlt
push
sub
sti
psrlw
rcrl
pop
shrl
call
imul
cli
push
sbb
iret
sub
inc
jno
cmc
shl
fwait
scas
pop
cltd
pop
xchg
or
in
out
popa
sti
subb
test
test
fwait
sbb
in
mov
popa
shlb
jbe
xor
insb
es
mov
pop
cmp
cmpsl
hlt
cmp
push
mov
sub
pushf
and
daa
cmp
lock
das
push
and
call
lret
add
adc
gs
lcall
test
sub
ds
sub
and
push
mov
mov
test
push
or
fistpl
add
cs
mov
cmp
jg
outsb
xchg
sub
dec
cmp
adc
xor
test
or
xor
movsb
and
sub
cmp
jo
int
push
cmpsl
clc
push
cmp
insb
mov
aaa
scas
mov
fstpt
fdivl
jle
cmp
dec
loope
xor
cld
inc
js
xchg
dec
sbb
jp
sub
xchg
or
jl
and
or
and
fs
xor
pop
jb
aad
js
ret
sbb
cmpsb
sub
or
cmpsb
test
xchg
add
lcall
adc
cmp
adc
push
scas
and
xor
mov
adc
stc
loop
xchg
insb
out
jb
lods
adc
daa
sub
mov
lret
cmpsl
dec
or
js
pusha
jg
mov
fidivs
xchg
xchg
fdivl
out
or
push
ror
in
fs
out
std
jmp
fsubs
pop
out
in
push
insl
adc
lret
ret
je
das
lret
movsl
add
pusha
jne
repz
adc
call
push
xchg
ret
mov
lods
xor
outsb
les
mov
in
rorl
jge
sub
jns
pop
xchg
testl
jge
leave
sahf
addl
aam
mov
cmpl
sbb
inc
or
loop
dec
movl
test
enter
es
or
push
mov
jbe
and
fnstcw
in
cmp
pop
mov
inc
das
gs
iret
cmpl
sti
push
mov
xchg
dec
jb
sbb
jge
ret
shlb
subb
out
sbb
jmp
ret
push
inc
mov
sbb
andb
arpl
mov
fs
add
insl
jo
pusha
cld
les
in
mov
or
repnz
jg
int3
jne
push
mov
cmp
loop
dec
fistpl
mov
dec
and
lds
jb
pop
ret
add
pop
dec
sahf
cmp
pop
xor
dec
jns
jge
cld
cmc
in
lret
inc
and
leave
push
and
cmc
sub
scas
xchg
loop
cmp
pop
sbb
cwtl
pop
or
clc
dec
outsb
in
pop
clc
mov
mov
popf
push
in
mov
fdivrl
pop
push
mov
andl
xchg
mov
mov
aam
cwtl
dec
cld
dec
xor
sbb
filds
aas
jae
mov
rol
xchg
mov
push
pop
pusha
lea
push
repz
inc
xor
cltd
push
pop
cmpb
ja
stos
cmp
xchg
pop
cld
cmp
dec
and
mov
jp
cmp
cmp
jmp
in
outsl
jg
movsb
sub
movsb
mov
jmp
push
enter
or
push
sar
or
sub
or
outsb
ja
into
test
lods
jl
shl
std
xchg
cltd
mov
stc
addr16
aam
push
push
aam
int3
dec
cmp
push
dec
out
mull
inc
cs
dec
xchg
sub
inc
sbb
notb
push
mov
dec
pop
fisubrs
mov
scas
push
or
daa
stos
cmc
push
loope
icebp
inc
addr16
pop
jmp
jmp
jle
stc
pop
jno
pop
inc
mov
push
xchg
imul
fnstenv
lahf
filds
jp
pop
stc
out
cmp
fnsave
pop
push
xor
and
lahf
imul
in
push
push
aam
mov
or
push
push
xchg
aad
stos
dec
xor
pop
and
push
mov
xchg
stos
ja
mov
enter
inc
push
loop
iret
je
lret
repnz
stos
sbb
lock
int
sub
in
mov
stos
xor
lea
in
xor
mov
int3
dec
movb
or
inc
xchg
cmp
aad
mov
cmp
cmpsl
lcall
hlt
cld
test
ret
fldenv
jbe
ja
mov
int3
mov
testb
das
and
sarl
mov
das
shll
add
xchg
inc
jmp
dec
and
movsl
sbb
and
cmc
adc
cwtl
jae
pop
rol
enter
mov
scas
cmpsb
loop
and
inc
fidivrs
jno
ss
sbb
inc
adc
repz
or
jne
xor
and
gs
sub
push
cmpsl
jmp
ljmp
les
push
mov
mov
cmp
pop
outsl
adc
mov
and
push
add
sahf
movsl
mov
fadd
jno
fcoms
clc
test
movsb
movsb
sahf
pop
jo
jl
das
es
xchg
in
lcall
mov
xor
inc
ret
fnstcw
je
mov
sbb
pop
aad
sbb
aad
xchg
push
jg
pop
cld
inc
mov
xlat
mov
lods
mov
cmpsb
mov
add
pop
das
pop
pop
jbe
mov
and
mull
mov
popa
adc
pop
pop
and
cwtl
sub
aaa
and
outsb
popf
ja
cltd
pop
jns
and
mov
in
sbb
fistpll
out
outsl
in
aas
pusha
lahf
xchg
push
xor
in
stc
lret
xchg
mov
ss
iret
cmp
push
leave
inc
loope
xchg
pop
out
jns
dec
sub
cld
rcr
adc
fildl
popa
sub
lods
inc
scas
mov
mov
ss
popa
clc
pop
mov
shl
jb
repnz
inc
pop
stos
or
adc
cmpsb
lds
les
pop
es
cltd
mov
xor
lods
jae
dec
mov
lds
push
std
push
outsl
jmp
or
add
pushf
mov
fists
test
test
mov
stc
andl
aad
je
les
push
and
cltd
in
or
dec
and
dec
ret
aas
add
ss
mov
pop
push
mov
repz
and
call
bound
jp
jge
or
mov
test
mov
sbb
std
xor
imul
fcmove
xchg
fwait
rorl
cli
sub
lret
stos
inc
ret
enter
pop
inc
or
cmpsb
pop
icebp
fldcw
test
ds
lret
mov
pusha
or
stos
out
stc
dec
in
icebp
lret
or
xor
and
mov
into
cs
popa
xchg
cmp
fadds
imul
sbb
pop
imul
dec
loop
in
add
mov
mov
and
fildll
mov
popa
push
lods
imul
adc
in
mov
cmpsl
ds
pop
fiaddl
jne
adc
push
mov
movsb
scas
mov
jl
xlat
test
lret
ja
test
notl
jo
lock
in
in
jl
jl
cwtl
pop
adc
jle
stos
or
xchg
sub
sti
sub
lods
psraw
xchg
dec
mov
mov
jecxz,pt
cwtl
mov
dec
sub
or
es
enter
int
or
pop
mov
adc
rcll
sbb
xor
data16
cld
inc
sarb
push
xchg
sub
out
jg
push
scas
rorb
add
add
cli
mov
and
mov
dec
cmp
roll
hlt
sub
add
or
and
daa
mov
cwtl
xchg
cli
jno
lea
int3
sbb
in
dec
fcomi
test
sbb
mov
pop
cld
pop
jno
into
ss
cmp
loope
add
inc
dec
aaa
aam
and
ret
fbld
mov
inc
mov
movsb
pushf
test
addr16
dec
loop
shl
mov
dec
int
cmpb
fiaddl
inc
fldt
lret
fwait
push
faddl
push
leave
inc
insb
sub
ficompl
fwait
loopne
dec
jge
scas
lea
xchg
xchg
cmpsl
rcrl
sub
aam
push
int3
mov
inc
loope
ss
enter
outsl
xchg
push
lods
mov
dec
sti
sbb
cs
js
fsubr
dec
mov
lock
sbb
inc
ficoml
adc
std
gs
jecxz
inc
mov
mov
fmull
dec
or
sbb
mov
fwait
or
fidivrs
outsl
into
repnz
dec
lret
shll
add
adc
iret
cmpsb
fsubr
xchg
scas
dec
lret
jmp
popa
mov
pop
fdiv
rorb
pop
fs
ljmp
repnz
or
lahf
subl
adc
sbb
push
ss
sbb
inc
je
movsl
out
jne
pop
testb
shlb
call
inc
add
enter
dec
mov
pop
push
movsl
adc
test
int
std
add
and
stos
cmp
lret
cmpsl
mov
sub
frstor
xchg
mov
pop
push
cmp
sbb
into
jmp
daa
mov
sbb
xchg
jbe
test
push
or
fists
mov
in
dec
fs
mov
or
stc
push
out
cmp
jnp
dec
sub
mov
push
fwait
je
jge
push
mov
sub
pusha
loope
or
out
cmpsl
pop
popa
push
pushf
or
dec
mov
cmp
xchg
test
aad
pop
mov
stos
xchg
loopne
test
inc
andl
mov
fadds
jl
and
andl
daa
ljmp
mov
mov
mov
repz
sbb
dec
xchg
lcall
inc
cmp
xchg
xor
dec
cmp
pop
adcb
jne
aam
cmp
xchg
iret
mov
push
pushf
and
xor
pop
push
ljmp
ret
xchg
shl
mov
cli
int
jb
sub
mov
mov
gs
dec
fsubrs
daa
stos
sti
xchg
fsub
lods
ret
movsb
mov
adc
es
sbb
push
cmpsl
stos
xchg
adc
adc
andl
xchg
aaa
cs
adcl
lds
jb
std
adcb
ds
push
loopne
mov
dec
mov
jg
mov
out
imul
daa
sub
test
fiaddl
inc
mov
cmp
call
outsl
imul
iret
push
inc
mov
loope
inc
xchg
xchg
jnp
cli
int
lods
xchg
mov
push
mov
pop
sar
sahf
flds
jge
and
or
sbb
test
mov
adc
jne
pop
inc
pop
xchg
js
insl
pop
clc
xor
mov
mov
xchg
push
mov
in
or
or
mov
pop
decb
pop
or
adc
int
cs
xchg
cmpb
shrl
sub
inc
push
loopne
sbb
jo
xchg
jl
inc
pop
sbb
in
aaa
mov
frstor
jns
or
es
xchg
push
pop
test
out
popf
and
ljmp
jg
dec
sti
add
push
ret
cmp
pop
dec
pop
bound
push
popa
mov
popa
xor
sti
fildl
or
loop
ja
or
lret
mov
cmp
enter
les
sub
fadds
jg
fdivrs
outsl
jmp
das
sbb
push
mov
fwait
mov
mov
aad
adc
xor
hlt
cmp
and
cwtl
mov
sbb
add
mov
ret
sahf
inc
stos
xchg
loope
push
fwait
les
arpl
xchg
gs
sbb
and
sbb
or
sbb
pushf
add
ret
fistpll
mov
into
add
adc
and
inc
sub
aaa
pop
cmp
into
mov
inc
cwtl
repnz
arpl
mov
test
sti
fs
pop
adc
xor
mov
stc
ds
jb
pop
je
call
cmpsl
push
dec
fdivr
popa
ficoml
enter
lahf
sub
pop
inc
aaa
imul
xchg
stc
cwtl
sub
mov
fildll
push
pop
dec
loopne
adc
mov
dec
dec
stc
push
fiaddl
and
scas
adc
pop
leave
jp
call
push
xor
leave
or
scas
cmc
cmp
jge
dec
test
mov
mov
sti
popf
ljmp
arpl
xor
in
mov
rclb
and
jo
adc
fsubs
cmp
mov
inc
shl
je
ljmp
mov
or
aaa
addb
lods
push
mov
jl
fimuls
add
xor
mov
mov
fistpl
sbb
xor
pop
xlat
mov
push
vcvtsd2si
mov
test
xchg
vcvtps2pd
adc
sbb
call
adc
int3
mov
stos
dec
decb
lods
cmp
mov
jns
xchg
or
or
xchg
jne
call
out
xor
mov
jecxz
add
ret
bound
mov
push
dec
jne
xlat
scas
aam
subb
mov
sbb
mov
outsb
xor
mov
jb
bound
add
inc
or
dec
arpl
jb
mov
ret
shll
popf
mov
mov
pop
lret
sahf
dec
daa
xchg
cmc
int3
sti
lock
xor
in
dec
inc
pusha
mov
inc
iret
and
xchg
icebp
adc
lret
ror
jne
cmp
mov
lret
or
cmp
ret
or
addb
jb
jae
pop
mov
pusha
in
cld
inc
pop
sbb
movsb
adc
cltd
mov
gs
int
test
aam
push
rcrl
stc
imul
adc
test
push
xlat
fsubrs
mov
pop
cmp
lods
pop
test
in
mov
ret
sbb
dec
test
fdivr
fldenv
jecxz
push
add
hlt
je
mov
pop
cs
mov
cmp
pusha
push
and
or
ss
aad
ficompl
aam
sbbb
ljmp
jne
cmp
fsubr
inc
cmp
incl
or
cmpsl
inc
mov
pop
mov
mov
sub
jnp
pop
pusha
les
pop
jnp
inc
xchg
imul
xchg
sub
push
sub
mov
push
fucomip
push
jle
and
jmp
jmp
mov
dec
imul
or
mov
cltd
jle
dec
aas
pop
sbb
enter
fimull
es
in
sub
hlt
push
xlat
aad
nop
rorb
jnp
addl
repz
cld
and
inc
cwtl
in
adc
stc
xorl
icebp
sahf
roll
adc
pusha
imul
out
out
push
adc
and
mov
fldcw
jle
pop
inc
imul
push
adc
int
in
mov
scas
mov
cmp
test
test
or
ljmp
xchg
pop
mov
adc
shll
outsl
xchg
enter
xlat
sbb
cmpsb
push
in
add
popf
jno
cli
dec
popa
subb
stos
cmpsb
jle
or
aaa
xchg
jle
inc
js
out
mov
add
rorb
mov
and
popf
ret
mov
and
andb
cmp
mov
jecxz
sbb
and
dec
xchg
cmpl
das
mov
jb
into
push
std
and
pop
incl
mov
pop
mov
inc
scas
movsb
movsl
in
stos
data16
cld
sub
sbb
popa
add
inc
int
sbb
sbb
arpl
stc
js
inc
test
and
in
mov
ret
stos
out
inc
aad
in
pop
jns
jns
mov
push
sbb
mov
pop
lods
dec
je
dec
cmc
push
xor
push
jnp
add
xchg
or
sbb
xchg
outsb
int
ret
mov
mov
int3
adc
divl
cmpsl
es
mov
xchg
ljmp
jae
mov
jecxz
push
push
inc
dec
and
jmp
jg
test
dec
gs
add
pop
jb
adc
dec
mov
mov
aaa
mov
leave
cmpsb
addr16
lock
stc
aas
or
stc
test
repz
repz
mov
and
xchg
repnz
dec
aam
mov
call
push
insl
arpl
addr16
cmp
aas
pushf
pop
mov
sar
sbb
fdivr
push
inc
mov
fildl
aas
lea
mov
xchg
clc
cltd
mov
or
add
dec
fwait
cld
shll
inc
jl
adc
mov
lcall
mov
pop
inc
adc
pop
movb
mov
or
jno
or
mov
add
shr
mov
lea
add
popfw
add
xchg
lods
insb
orl
xor
jnp
or
add
push
and
ret
cmp
shlb
sub
scas
call
cmpsb
mov
fisttpll
push
push
cmp
pop
test
jo
lea
sbb
fcoml
sbb
jne
notl
shlb
push
sub
test
rorl
je
fsts
mov
jbe
hlt
xchg
loope
shll
idivb
sub
cmpsl
dec
fdivrl
add
jo
in
inc
ficompl
daa
ss
mov
xor
ret
jle
xor
movsl
repz
sub
jnp
push
push
xchg
in
in
mov
int3
mov
and
fcmovbe
add
cs
xchg
shrb
sub
bound
jmp
inc
aas
push
pop
test
std
push
lods
and
daa
test
and
add
push
jge
cmp
or
mov
clc
lret
or
cmp
fs
mov
xchg
xchg
push
xchg
inc
fistpll
stos
into
adc
mov
sar
mov
lods
xchg
mov
inc
insl
push
jge
or
adc
ret
std
mov
lods
xchg
mov
inc
insl
push
jge
or
adc
ret
cld
mov
lods
xchg
mov
inc
insl
push
jge
or
sbb
loop
repnz
in
sar
mov
sub
imul
insl
push
or
mov
ret
push
in
fcomps
cmp
and
call
xchg
push
push
cmp
or
aad
in
cmc
or
mov
cmc
mov
inc
fstl
and
xor
add
pop
cmp
mov
mov
in
jmp
loope
or
sub
xor
and
mov
sub
std
add
adc
aaa
and
int3
imul
fsubp
push
pop
das
pop
fcos
adc
stc
call
lock
xchg
daa
popf
xchg
incl
mov
sub
push
push
dec
jbe
sub
cli
pop
pop
inc
mov
push
xor
mov
xchg
js
mov
adc
or
int3
sub
sbb
pop
popa
negb
es
push
cmp
pop
aad
xor
in
test
pop
cwtl
xchg
push
pop
test
xchg
jne
flds
aad
lods
daa
or
std
js
mov
and
icebp
pop
outsl
sub
adc
shl
lods
mov
mov
lret
or
or
dec
pop
popa
inc
push
pop
gs
mov
cmpsb
mov
cli
int3
icebp
std
hlt
in
les
push
inc
dec
jp
ss
dec
dec
cli
mov
xchg
popf
nop
mov
leave
call
add
cmp
jno
add
clc
aad
enter
test
cwtl
mov
movsl
js
push
cmp
or
fdiv
enter
test
cwtl
mov
movsl
js
stos
xchg
add
and
mov
cmpsl
imul
adc
decl
negl
xchg
xchg
and
imul
jp
xchg
inc
pop
mov
lods
pop
leave
sub
and
xchg
insl
pop
in
fnsave
push
jo
mov
mov
icebp
stos
adc
xchg
xchg
sub
push
nop
test
push
pop
icebp
cmpsl
mov
icebp
and
fldcw
insb
mov
sahf
pop
xor
xor
pushf
outsb
mov
dec
jne
mov
stc
in
add
add
enter
or
enter
test
enter
pop
stos
lcall
lret
push
mov
jo
lcall
inc
mov
in
cmp
clc
dec
rorl
dec
mov
call
jnp
popf
add
xor
data16
lea
cmpsb
dec
pop
mov
enter
mov
push
arpl
push
test
lahf
leave
push
cmpsl
mov
sub
cld
fwait
mov
lea
xchg
pop
pop
jg
pop
scas
jnp
xor
shl
in
orl
data16
negl
pop
jmp
adc
cmp
decb
fldt
aaa
dec
or
mov
pusha
mov
imul
sbbl
ss
cmc
dec
test
pop
ss
jmp
leave
in
pop
mov
xor
mov
push
cli
out
or
pusha
lret
daa
cmpsl
stos
push
push
inc
cld
lea
fistl
fs
jmp
xchg
out
inc
mov
daa
fucomip
add
les
mov
adc
xchg
in
sub
cs
rcrl
cli
jno
pop
mov
dec
in
xchg
bound
pop
pop
mov
pop
push
mov
sbb
adc
icebp
inc
and
inc
in
mov
lret
mov
cmpsb
js
mov
xor
insl
mov
jge
cmp
test
repz
adc
add
mov
std
std
cmpsb
fmuls
inc
lea
push
mov
mov
lret
pushf
xor
xor
lds
push
mov
push
xchg
lods
repnz
out
stos
mov
stos
cld
loope
mov
aam
adc
push
sub
mov
pop
test
mov
mov
test
fs
imul
popf
in
cli
stos
imul
and
xor
arpl
jg
sahf
adc
test
std
jecxz
sub
xchg
xor
mov
push
mov
inc
dec
xchg
jb
xchg
push
hlt
or
lcall
imul
pop
jns
mov
ret
jb
cld
push
pop
pop
pminsw
add
xchg
sbb
lods
dec
mov
shrb
pop
cmp
lods
xor
fwait
loop
sbb
jb
xor
or
insb
inc
or
sub
gs
mov
xchg
mov
imul
test
cwtl
jns
repnz
and
xchg
xchg
mov
daa
loop
pop
push
sub
movsb
or
inc
pop
ds
imul
imul
push
dec
mov
and
enter
lahf
and
inc
subl
inc
adc
shll
push
pop
out
mov
in
mov
mov
cwtl
jb
in
aas
andl
cld
push
rcrb
and
sub
leave
add
sar
cmp
clc
xor
movsl
jecxz
in
xchg
sub
mov
jle
ret
sti
mov
bound
fdiv
outsb
shrb
aas
daa
add
mov
push
adcl
es
cmpsl
dec
push
cwtl
mov
loope
insb
out
scas
out
jnp
pop
push
mov
mov
repz
and
shrl
daa
sti
movsb
jo
xor
or
push
cmpl
mov
cmp
sti
push
mov
mov
popa
rorl
pop
dec
adc
stc
icebp
sub
in
lret
mov
jns
add
scas
inc
pop
pop
mov
test
sub
fldcw
shlb
dec
sbb
sahf
imull
lret
adc
das
mov
stc
sbb
push
mov
push
cmp
dec
sub
fs
pop
les
sbb
addr16
ja
xor
or
mov
movsb
cmp
jne
and
push
mov
stos
and
in
mov
es
pop
mov
pushf
imull
inc
jnp
xlat
repnz
mov
or
sub
xor
mov
data16
sti
mov
test
fs
xor
mov
add
lock
lods
xor
inc
icebp
dec
lock
iret
mov
sbb
push
imulb
and
pop
mov
outsb
inc
test
mov
or
push
pop
mov
lahf
call
push
cld
lods
lock
stos
lds
imul
fsub
out
cmp
bound
jae
sub
ljmp
mov
mov
mov
cwtl
fs
cmp
adc
sbb
mov
js
ret
lcall
test
lahf
mov
nop
inc
repz
inc
jmp
mov
arpl
js
pop
xchg
push
sbb
pushf
ljmp
lea
sbb
ja
or
daa
clc
pop
inc
int
xor
push
daa
lds
roll
mov
pop
int3
outsl
dec
fisttpll
lcall
mov
ds
sub
pop
test
sub
rcrb
sbb
push
pop
int3
add
call
push
jbe
cmpsl
clc
push
pop
jp
cmpsb
xchg
test
test
pop
scas
and
xchg
mov
jmp
pop
add
cmp
xchg
pop
push
stc
lcall
xor
sbb
cwtl
ja
in
sbb
pusha
inc
add
inc
cltd
movsl
pop
xchg
shlb
gs
adc
in
into
sbb
adc
lret
dec
nop
std
cmp
mov
adc
je
cs
push
xlat
pop
xor
add
enter
repz
xor
iret
inc
cmpsb
cmp
cmp
popf
daa
push
sub
push
pop
push
sub
mov
jnp
and
popf
test
adc
cmp
lahf
les
add
les
adc
ret
jo
push
mov
push
outsl
and
sar
add
in
mov
lock
sbb
int3
adcb
sub
push
lea
ja
filds
fistl
cmpsb
jbe
inc
rolb
bound
sti
inc
sub
jns
cld
pusha
lock
xchg
cmpsb
ret
adc
fs
mov
je
push
mov
cmpsb
lahf
call
into
stos
mov
and
and
lret
cmc
je
pop
xchg
mov
cwtl
lret
mov
les
neg
push
in
xchg
shl
cmpl
mov
shr
mov
mov
nop
in
mov
testb
pop
lds
sub
add
mov
mov
or
js
jl
sbb
jnp
fisubs
jae
dec
repz
inc
dec
add
pop
jmp
movsl
sub
xor
add
rolb
mov
ljmp
nop
cmpsb
jbe
call
cltd
int3
jecxz
push
mov
or
xor
adc
cmpsb
push
push
shr
imul
xor
cmp
mov
mov
mov
aam
xchg
pop
jne
aaa
push
jl
loop
mov
push
pop
xchg
sub
or
out
push
mov
dec
push
aas
nop
xchg
out
cmp
dec
stos
jnp
xchg
and
push
loop
or
cmpl
aaa
cltd
pop
mov
js
dec
dec
mov
xlat
js
stos
shll
and
pushl
insb
push
mov
stos
pop
aas
inc
cld
adc
jecxz
stos
inc
push
sbb
adc
jle
xor
aam
pop
fiaddl
ja
adc
jecxz
into
lret
aas
lahf
xor
fmulp
aas
pop
jno
sbb
and
sahf
mov
int3
stos
loopne
imul
adc
stos
jo
popa
push
jle
icebp
xor
xchg
call
inc
fnstcw
and
pop
imul
cltd
and
adc
outsl
mov
lahf
cmpsl
hlt
add
outsb
popf
xchg
or
div
pop
stc
scas
ret
stos
sbb
cwtl
repz
xor
ret
mov
ret
cli
rorb
cmpsl
mov
mov
ret
mov
imul
lcall
pop
fistps
fwait
and
fsubrs
mov
sbb
xchg
imul
mov
adc
mov
xchg
pop
mov
pop
add
mov
xchg
mov
arpl
std
gs
mov
dec
and
out
in
push
addr16
jle
push
test
xchg
addl
add
xrelease
and
mov
pop
pop
sub
push
gs
xlat
pop
jl
js
rorb
mov
imul
cli
ret
es
sbb
ljmp
xchg
push
sbb
adc
push
mov
gs
je
xchg
push
inc
xchg
shll
std
cmp
xchg
mov
addl
cmp
insl
xchg
xchg
dec
sbb
pop
add
xchg
jl
sbb
lea
xchg
sub
mov
push
jmp
ret
dec
mov
push
out
pushf
xor
jo
std
jle
out
xchg
and
lods
push
mov
out
movl
in
adc
mov
sbb
movsl
mov
xchg
inc
loopne
dec
sub
fiaddl
pop
inc
sbb
imul
mov
jg
js
push
test
cltd
fsubrs
popa
mov
add
mov
pushl
imul
gs
adc
inc
outsl
inc
push
sar
jmp
push
jl
test
popf
cltd
jae
cmp
push
lea
test
jl
pop
pusha
and
jecxz
fs
mov
mov
mov
mov
lahf
mov
and
push
hlt
or
addl
jge
inc
mov
inc
mov
das
lds
jno
fs
push
or
loope
xchg
rcl
orb
sub
xlat
cmpsb
jae
add
inc
mov
outsb
pop
call
pop
movsb
ret
mov
je,pn
jmp
adc
scas
fidivs
and
cmp
push
pop
jno
dec
out
stc
bound
jmp
xchg
xor
lods
sbb
mov
divl
xlat
andl
lods
mov
dec
leave
cld
loopne
push
xor
stos
cs
mov
popa
add
fidivl
pop
je
icebp
jg
add
enter
adc
cmp
fninit
loope
xchg
stc
cmpsl
bound
sbb
std
call
pop
int
into
cltd
mov
push
jle
sahf
inc
andb
iret
push
lods
mov
daa
repz
les
je
dec
jae
pslld
in
push
mov
addr16
repnz
scas
sbb
clc
sahf
adc
pusha
inc
das
xor
sub
xchg
cmp
repnz
movsb
in
mov
mov
pop
pop
les
mov
mov
jmp
sbb
cmp
sub
outsl
outsl
outsl
adc
xchg
push
mov
ss
inc
push
xchg
xor
lahf
push
mov
xor
pop
dec
and
shll
push
outsb
mov
prefetch
push
and
call
mov
and
sub
lods
xchg
dec
jmp
rcll
pop
inc
es
mov
rcrb
rorl
xchg
ss
mov
cltd
sbb
and
call
iret
aas
out
inc
cmp
aad
outsl
xor
icebp
stos
insb
mov
push
inc
into
movsl
cmpsl
in
stos
mov
or
int3
jb
stos
hlt
fadds
push
inc
or
sub
fistpl
or
mov
loope
xor
scas
pop
sbb
inc
insb
push
roll
dec
ss
jle
push
pop
and
xchg
mov
xchg
cli
push
mov
add
int
mov
daa
aad
jmp
mov
dec
lods
inc
inc
insl
sbb
test
jb
mov
divl
jns
push
scas
ret
mov
daa
mov
ret
cmp
test
lret
pop
icebp
pop
in
sub
jl
mulb
cwtl
sub
and
inc
cs
mov
fisttps
gs
mov
mov
xor
lret
add
loopne
rclb
jo
xchg
push
jbe
sbb
pop
scas
faddl
inc
xchg
xor
jno
out
ljmp
scas
in
cmp
je
enter
and
add
lods
and
clc
inc
jg
inc
inc
repnz
jecxz
outsl
jae
push
mov
inc
ljmp
push
leave
adc
and
fidivrs
xchg
mov
fwait
push
cmp
insb
adc
mov
popa
andl
shlb
cltd
jp
scas
add
inc
mov
pop
and
pop
cwtl
sub
and
jmp
push
bound
sbb
jp
mov
stc
iret
jecxz
push
out
mov
enter
insl
fadds
test
into
pushl
inc
push
outsl
dec
jl
shl
arpl
in
std
or
loope
sub
mov
sub
lods
xchg
push
idiv
pop
nop
dec
or
gs
sub
push
sub
lock
out
add
lcall
sub
and
and
mov
inc
inc
mov
andb
jmp
arpl
dec
jp
xor
cltd
push
add
cwtl
out
sbb
popa
sbb
and
popf
pop
out
outsb
jg
lods
sbbl
test
movsb
xchg
dec
xchg
fimull
mov
lret
in
push
push
sbbl
cli
xchg
icebp
adc
dec
xor
mov
cs
shrb
jno
shlb
mov
fs
dec
test
iret
sub
sub
cmp
pushf
sti
gs
xchg
pushf
mov
pushf
outsb
jl
cmp
std
and
mul
cld
push
jo
fldt
sub
add
or
pop
loope
outsl
sub
jno
pusha
jp
mov
call
push
xchg
mov
stos
js
mov
popf
vandnps
add
scas
fisubs
push
fists
aam
mov
sbb
scas
repz
sbb
in
push
jo
mov
dec
push
mov
test
jp
aam
sub
inc
push
or
cmp
jle
and
loopne
adc
xor
mov
xor
lcall
xchg
lea
cmp
mov
xchg
jb
repnz
cltd
xchg
mov
push
dec
pushf
pop
push
sub
mov
out
sub
iret
cmp
clc
adc
mov
pop
mov
cmc
lea
out
cmp
or
lods
jle
or
leave
gs
mov
mov
leave
test
idivl
mov
inc
adc
call
xchg
xchg
push
out
lret
in
mov
leave
mov
fcoms
push
sbb
cld
jo
inc
rcrb
cmp
sub
pusha
lahf
imul
mov
int
adc
xor
test
stos
push
popa
mov
jmp
push
ja
rcrl
test
jbe
and
pop
sub
test
shlw
sub
fmulp
pusha
inc
imul
dec
push
xchg
rcl
out
cli
ja
jne
adc
ret
cwtl
push
or
stos
adc
mov
pop
ds
xor
inc
loop
pop
cmpsb
push
loope
sub
int
cmp
cld
lods
lds
fstps
mov
iret
cmc
fisubrs
push
sub
jne
pop
sub
jmp
fnstsw
push
dec
in
jns
xor
leave
push
xor
add
das
mov
cmp
pop
lret
jmp
or
jnp
int3
scas
jecxz
mov
lds
jmp
lods
sub
sti
xchg
outsl
or
out
xchg
or
into
sarl
sbb
decb
and
call
inc
and
imul
mov
out
inc
mov
jecxz
add
fwait
sub
les
pop
push
jne
adc
sub
xchg
test
js
mov
in
fnsave
xacquire
xchg
mov
outsl
adc
ret
rcrb
test
aam
or
daa
hlt
mov
pop
sbb
push
xor
fucompp
out
xchg
sbb
mov
arpl
leave
sub
loop
int
inc
xlat
jle
mov
ja
popf
dec
adc
adc
xor
repnz
cmp
xorl
stos
jge
or
mov
rcrl
popa
fisubrl
pop
lods
negl
clc
mov
sar
int
adc
inc
inc
ret
cli
mov
xchg
and
cs
add
push
xorb
lods
and
icebp
mov
cmp
mov
cmp
xchg
lahf
popf
jecxz
repz
sbb
decb
jnp
je
pop
lea
xchg
outsl
imul
or
inc
sbb
dec
pop
push
test
adc
jne
xchg
pop
sbb
jo
xor
enter
andb
and
sbb
mov
cld
repz
dec
or
lahf
filds
fdivrs
mov
mov
movsl
les
inc
or
decb
les
stos
pop
mov
or
out
mov
push
test
pop
sub
pop
push
std
mov
imul
and
inc
fimull
pop
sarb
sarl
testl
pop
mov
or
mov
arpl
xor
repz
lods
rcrb
rol
cmp
xor
ret
jl
fmuls
xchg
adc
fimuls
imul
add
inc
call
rorl
sub
loope
sbb
sbbl
into
enter
pop
lods
scas
std
es
imul
int
adc
stos
test
cmpsb
mov
mov
in
dec
data16
or
xchg
fsincos
inc
addb
or
xchg
xlat
pop
repz
jle
pop
pop
iret
call
cmp
stos
sbb
pusha
inc
daa
xchg
and
mov
fmulp
push
and
mov
or
xchg
adcb
test
test
push
dec
sahf
pop
fcmove
lret
jno
stos
fs
out
xchg
ja
aaa
xchg
push
lods
loopne
repz
mov
mov
sarb
jmp
pop
daa
mov
popa
or
jge
cwtl
xchg
sbb
jo
movsb
into
mov
popf
popf
mov
sbb
cmp
ss
push
mov
js
inc
imul
pop
pop
inc
inc
fsub
adcl
adc
jns
lock
rcl
shll
push
stos
push
outsl
mov
mov
fidivrs
adc
mov
ds
rorb
fsub
jb
into
in
push
and
inc
or
add
push
clc
xor
and
lds
test
loope
jge
xchg
aaa
hlt
xchg
cli
xchg
mov
cmp
and
arpl
cmc
xchg
scas
jae
cltd
push
dec
xchg
jle
fwait
cmp
inc
inc
jl
das
add
subb
push
xor
frstor
xchg
flds
out
sbbl
fdivs
rcrb
daa
mov
repnz
insb
pop
js
mov
into
pop
test
adc
fisubrl
outsb
sarb
dec
call
or
icebp
mov
xchg
inc
mov
ret
push
ds
rorl
jbe
and
int3
std
mov
lret
mov
outsl
out
insl
int3
mov
gs
jle
push
ret
arpl
aam
ficoml
test
into
or
push
or
scas
sbb
pop
mov
cmp
adc
sbb
jb
push
stos
imul
adc
add
fsubs
sub
cmp
or
repz
adc
mov
fst
adc
pop
leave
dec
ficompl
mov
and
jne
popf
dec
je
dec
sbb
adc
inc
movb
ds
sub
mov
in
push
repz
lock
fdivl
dec
pop
out
fld1
cmp
lret
in
cmp
jns
cmp
jecxz
jns
xor
iret
aaa
lret
cs
cmp
cmp
inc
jecxz
in
xchg
xchg
lock
stos
xchg
push
push
mov
cmp
push
fs
mov
aad
sbb
loop
outsb
push
lods
sub
cmp
pop
adcb
ret
pop
out
sbb
cld
iret
test
xchg
js
sti
outsb
dec
cmp
lods
leave
cmp
dec
enter
outsb
and
and
push
imul
or
scas
test
jmp
mov
sti
insb
xor
insl
add
lock
je
mov
imulb
xchg
aas
leave
push
iret
and
imul
cltd
sarb
xor
shl
ja
xchg
fs
or
aas
jecxz
add
stc
pop
jb
pop
bound
lret
xchg
add
in
sub
sub
fadd
pusha
jo
shrb
aas
ret
fs
enter
rorl
jle
mov
or
rol
movsl
call
dec
add
mov
pushf
pop
call
xor
shll
mov
ss
push
jnp
hlt
push
adc
fwait
push
pop
mov
into
jge
icebp
cmpsb
out
decb
into
and
cmp
aad
lock
test
repnz
mov
add
push
mov
test
negb
cmp
or
fdiv
enter
test
cwtl
mov
movsl
js
push
cmp
or
fdiv
enter
test
cwtl
mov
movsl
js
push
cmp
or
fdiv
enter
lods
test
push
pop
inc
outsb
jne
cmp
mov
jb
enter
and
dec
ja
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cli
dec
jp
dec
xchg
pop
test
fwait
jle
ljmp
push
stos
je
fs
movsb
dec
xchg
pop
test
hlt
cmp
or
sbb
ljmp
add
pop
mov
inc
push
jp
dec
mov
sub
cmp
or
sbb
ljmp
add
xor
cmc
inc
sbb
pop
sbb
cmp
imul
push
cmpsb
lahf
cs
mul
aas
sbb
js
jg
sbb
mov
int3
xchg
add
add
icebp
inc
xor
dec
jnp
inc
lret
cmp
mov
outsl
sub
mov
in
test
adcl
filds
jp
push
mov
sub
push
and
mov
cmp
fs
lret
hlt
xor
dec
daa
jmp
cs
mov
fs
sbb
test
lds
push
fiaddl
sbb
jmp
xchg
mov
fisttps
into
repnz
adc
add
fisubs
mov
push
xor
test
sub
cmp
or
sbb
ljmp
sbb
mov
push
sarl
movsb
es
adc
imul
dec
pop
movsl
inc
mov
aaa
out
out
sub
in
orl
bound
mov
mov
or
cmp
shrl
jp
imul
ljmp
add
je
mov
push
jp
dec
xchg
pop
test
hlt
cmp
or
sbb
ljmp
add
je
mov
push
jg
mov
xchg
pop
leave
xor
std
mov
xchg
stos
push
in
dec
xchg
jns
xchg
cld
in
ss
loope
mov
enter
loope
enter
fnsave
cmp
adc
or
xchg
adc
sbb
repz
inc
rcr
nop
xor
fwait
pushf
int
pop
push
int3
cmpsb
sbbl
pop
xor
and
data16
sti
jns
push
repnz
lods
dec
movsb
adc
int3
sub
or
mov
or
push
test
es
or
dec
jl
cmp
xor
sbb
xor
test
xchg
jle
popf
and
cmpsl
push
push
cwtl
mov
mov
adc
dec
adc
lock
rcrl
daa
push
jb
push
jecxz
adc
rcll
mov
aaa
sbb
imul
adc
fisubs
cmp
mov
adc
lods
add
int3
xchg
dec
and
and
sbb
jb
inc
test
bnd
pop
and
jle
adc
test
fldt
sahf
mov
leave
fidivs
xchg
dec
cmpsb
jbe
jnp
jb
outsb
mov
jle
fcoml
insb
into
insl
adcb
popa
mov
mov
pop
sbb
pop
push
or
cmpsb
in
dec
mull
cld
inc
push
in
mov
popf
mov
std
add
mov
stc
xor
cmp
push
dec
xor
jge
xchg
pushf
lds
add
jge,pn
stos
ret
cs
sub
out
imul
pop
loop
and
pushf
dec
mov
call
push
pop
fcom
out
dec
in
jp
jl
in
xor
out
iret
jge
push
loop
mov
clc
cmpl
scas
fs
xor
fcmovnu
dec
sbb
push
mov
int
add
fst
cli
gs
les
xchg
icebp
addr16
jl
ret
jp
pop
pop
in
sub
add
pop
ret
mov
inc
add
mov
ljmp
aaa
adc
popf
jae
add
sbb
xor
outsb
push
icebp
popf
lea
negb
andb
rclb
inc
test
repnz
aad
sti
movsl
cmp
xchg
lods
bound
gs
lahf
icebp
loopne
popa
adc
mov
int3
sahf
xor
push
js
jns
mov
sub
imul
xchg
xchg
testl
sub
orl
hlt
icebp
mov
rclb
jbe
inc
movsb
int3
sbb
add
daa
push
adc
xchg
push
mov
imul
cmp
xchg
add
mov
stc
sbb
push
sarb
sbb
pop
mov
cmp
adc
sub
cmp
out
lods
in
sub
xor
repnz
pop
mov
roll
or
jge
sbb
push
cmpb
loopne
cltd
add
mov
rolb
and
ret
adc
add
movsl
mov
cmpsb
fwait
adc
add
adc
sub
jmp
fcmovbe
je
mov
mov
xchg
and
mov
movsl
mov
testb
loop
pushf
jmp
loopne
lcall
sarb
aad
cmp
cmp
dec
jmp
or
and
rolb
sbb
jne
dec
into
fsubp
cli
inc
xor
stc
dec
js
sub
push
jmp
es
out
out
mov
enter
imul
iret
push
jge
ret
jge
add
xchg
cwtl
mov
pop
fisubs
fimull
fnstsw
pop
dec
pushf
stc
inc
add
mov
sarl
pop
test
dec
jl
cmp
bound
push
jmp
or
rclb
into
repnz
jp
scas
sub
jmp
aas
cli
mov
int3
popa
inc
and
mov
cmpb
dec
cmc
movsl
les
or
add
mov
jle
lret
inc
sub
divb
dec
nop
jl
aam
stos
xchg
xchg
dec
stos
insl
ds
mov
out
pop
and
xor
cwtl
sbbl
iretw
push
lods
sub
notl
sub
and
out
add
mov
cli
jl
das
jo
adc
popf
ss
lahf
test
fildl
dec
fcmovb
testb
sbbb
xor
add
xchg
adc
ficoml
dec
mov
shlb
lods
dec
jo
push
pop
cli
xchg
clc
push
mov
sbb
sbb
inc
in
repnz
cmp
cmc
ja
imul
adc
aaa
jecxz
adc
outsl
movsl
xor
xchg
in
mov
mov
jl
fs
and
lcall
notl
mov
dec
dec
es
adcl
mov
sahf
aad
jo
mov
loope
add
fistpll
iret
imul
jl
push
dec
adc
cmp
mov
leave
jge
add
stc
lret
sub
nop
mov
push
mov
cltd
paddusw
fs
inc
jnp
xchg
repz
scas
mov
test
xor
cwtl
push
das
dec
sbb
cwtl
mov
mov
or
pop
fldl
in
jg
sub
repz
out
cmp
ds
lods
ja
mov
and
sub
push
pop
pop
push
add
popf
jo
mov
int
mov
pop
pextrw
ss
or
mov
mov
push
xor
frstor
fisttpl
dec
scas
sbbb
fimull
add
int3
inc
inc
fnstenv
mov
add
dec
mov
shll
mov
add
cmpsl
xchg
adcb
sbb
insb
jnp
sarl
or
addl
mov
mov
loopne
xor
loopne
lods
adc
mov
inc
mov
mov
xor
jp
in
cld
fpatan
and
clc
xor
or
jmp
jb
popf
xor
mov
test
fcoml
cmp
jecxz
mov
jmp
jo
mov
ja
out
sbb
ret
cmc
push
jmp
or
jae
sbb
stos
lods
xor
movsl
dec
clc
pop
cs
inc
mov
sbb
or
inc
jne
push
mov
sar
je
test
and
adc
xchg
scas
jnp
or
shlb
addr16
lock
in
mov
mov
outsb
fimuls
mov
lods
ret
loopne
mov
mov
mov
pop
mov
jmp
call
cs
cmpsb
lock
jg
push
add
and
arpl
call
add
mov
cs
fstpt
pop
outsb
and
pop
nop
pop
iret
lret
adc
and
icebp
inc
pop
lock
rorl
repz
mov
scas
cmpsl
xorl
mov
scas
xor
xchg
ljmp
pop
ja
iret
push
mov
negb
inc
inc
adc
pop
add
dec
dec
add
je
add
xchg
mov
ljmp
loopne
lods
rorb
sub
addr16
mov
int
shrl
testb
loopne
adc
xchg
aad
add
mov
test
or
jns
sbb
jmp
pushf
test
dec
push
mov
mov
mov
out
ljmp
mov
ret
cli
divb
mov
push
lds
test
pop
inc
mov
mov
ficompl
aad
sbb
cmp
add
fmuls
and
lock
pop
push
pop
repnz
adc
sbb
dec
jnp
popf
xorb
dec
out
pop
cld
idivl
dec
cmpsb
jne
adc
dec
dec
mov
pop
pop
fwait
sahf
xorb
push
fxch
dec
and
sbb
push
stc
pusha
sbb
nop
incb
push
lret
sub
dec
shrl
sahf
jle
scas
jb
dec
mov
and
hlt
xor
nop
sub
mov
mov
ds
int3
lret
mov
addr16
pop
mov
arpl
call
cld
xor
mov
sbb
jns
mov
sub
icebp
dec
aas
mov
lcall
pop
fwait
cwtl
mov
mov
and
xchg
repz
in
cmpsl
dec
cwtl
cmp
popf
fwait
les
divb
cmc
fiaddl
mov
xlat
mov
negb
rorb
sti
outsb
fistl
jecxz
jecxz
cmp
fiadds
mov
subb
sub
jnp
jbe
out
sbb
out
push
cmpsb
cwtl
mov
push
int
scas
mov
dec
sbb
and
mov
cmpsb
out
jg
sub
stc
fstpt
clc
dec
ds
sbbl
ss
or
and
adc
movsl
int3
or
sub
loope
pop
scas
dec
add
xchg
pop
xlat
adc
lret
sbb
mov
mov
jecxz
and
negl
aam
ret
or
dec
outsb
inc
shrb
jmp
mov
inc
filds
adc
icebp
xchg
or
dec
lret
jo
aaa
cmpsl
jo
je
je
mov
and
test
cmpl
daa
push
mov
jae
ror
adc
xor
cmp
xchg
call
aad
repz
dec
arpl
mov
popf
je
pop
mov
mov
dec
mov
addl
cli
adcb
and
cwtl
bound
mov
or
push
mov
in
mov
shrb
adc
imulb
xchg
add
mov
xchg
icebp
push
jo
out
push
int
inc
sub
jae
push
cmp
cmpsb
cmp
mov
test
fistps
icebp
jge
or
out
stos
ja
lcall
dec
hlt
fisubrs
xor
test
fsts
or
push
xor
jbe
sbb
push
fwait
sub
mulb
in
inc
jecxz
mov
adc
cmpsb
out
daa
mov
xor
cvtpi2ps
test
loopne
bound
add
mov
push
jl
fsubrl
rclb
ret
jg
xlat
aaa
cmp
mov
mov
sarl
mov
repz
mov
pop
lret
movsl
cmp
orb
movsb
cmp
aad
cmp
push
lea
inc
pop
pop
pusha
xor
shrl
jmp
pop
cltd
int
push
rcll
jb
aam
outsb
and
jecxz
mov
mov
cmpsb
or
adc
lock
xor
outsl
push
cmp
jecxz
xchg
insb
mov
js
repz
cld
sub
mov
inc
loop
enter
inc
pushf
fidivrl
jno
cmp
loope
sub
push
and
fwait
dec
dec
push
pop
adc
sbb
lds
xlat
adc
jae
and
cmp
je
adc
inc
lds
xor
jne
imul
nop
lods
data16
cltd
and
movsl
pop
mov
push
insl
dec
mov
mov
je
cwtl
push
lret
mov
and
inc
sbb
sub
sbb
movb
incl
cli
rcrl
pop
push
mov
cmp
cmp
mov
or
rclb
dec
test
scas
jmp
add
subb
sbb
xorl
ret
es
adc
rol
mov
testb
inc
push
xchg
ret
mov
adc
or
fwait
sbb
push
or
ss
imulb
addr16
lock
leave
cmpsb
push
or
mov
adc
pop
js
int3
pop
mov
pop
scas
and
pop
inc
sub
popa
push
lods
xchg
insb
and
out
mov
cmovs
into
jb
xchg
mov
les
xor
in
sub
and
pop
push
xchg
movsb
pop
icebp
jl
xchg
cmc
shll
cmp
add
jo
in
out
dec
lea
mov
xchg
mov
dec
sub
jle
inc
insb
push
fstl
add
mov
leave
test
insb
xor
cmc
sub
mov
scas
lds
int
and
aam
and
iret
pop
ss
sahf
inc
inc
pusha
lock
jnp
das
icebp
adc
pop
jle
mov
ret
ja
repz
fistpl
cwtl
xchg
push
add
mov
sarb
inc
or
mov
aas
jg
mov
inc
jae
out
xlat
cltd
push
cmpsb
out
je
aaa
loopne
add
call
dec
mov
rclb
repz
xchg
adc
popa
pop
jo
add
mov
loope
jg
cli
pop
and
jge
lahf
scas
cmpsl
stos
gs
addr16
out
stc
or
rcll
jo
fmul
cld
xlat
jne
jnp
cli
cmc
adc
mov
pop
lahf
or
inc
inc
repz
out
pop
jmp
cmpsb
loopne
lods
sub
das
and
mov
in
psrlq
test
jmp
cmp
dec
xabort
dec
in
fs
add
push
xlat
jnp
push
sti
mov
mov
jecxz
or
xorb
sbb
stos
inc
mov
in
xor
xor
push
test
sbb
xchg
mov
rorb
mov
scas
daa
and
mov
jns
mov
int3
call
fwait
mov
push
push
psubb
xchg
test
ret
pusha
sbb
sbb
mov
mov
mov
mov
adc
jmp
inc
lea
outsl
xor
add
sbb
pop
jo
jl
xor
dec
jle
dec
xor
imul
dec
mov
jle
iret
clc
xlat
jmp
loopne
fwait
xchg
roll
push
xlat
push
mov
pop
mov
mov
scas
fldl
or
fcomps
add
xor
inc
insl
adc
hlt
movsl
lock
cwtl
inc
cmp
ja
mov
sbb
inc
jno
mov
imul
fisubl
lret
pop
pusha
dec
enter
or
lret
icebp
xchg
in
outsl
inc
scas
pop
inc
lods
shlb
loop
rolb
ja
mov
mov
mov
push
dec
mov
and
adc
mov
imul
xchg
jmp
pop
jb
pushf
shl
jno
or
pop
lods
and
imul
cmpsb
aad
adc
lods
add
rcl
and
pop
ljmp
cmp
lret
fidivl
negb
in
jl
pop
lods
ljmp
imul
jb
push
enter
scas
shll
and
adc
dec
int
mov
push
jmp
lods
lahf
fcmovu
gs
mov
arpl
xchg
pop
mov
push
sbb
test
aad
inc
outsb
and
shlb
mov
xor
or
fcmovu
add
cmp
pop
mov
imull
enter
subl
push
pop
ret
fisttpll
dec
mov
stos
push
pusha
imul
rorl
sbb
pop
aam
scas
push
dec
jge
add
inc
cmp
xchg
add
in
cmp
sti
cmpsl
rcrl
add
in
mov
ror
aam
aad
xchg
jae
xchg
ret
aaa
arpl
scas
pop
ffree
push
aad
mov
ss
inc
in
push
mov
es
and
push
fidivl
dec
cmpsb
mov
xchg
inc
add
ret
xor
push
push
aam
push
mov
xchg
jno
clc
les
subl
dec
int3
aaa
sbb
lea
dec
xchg
shll
sub
cmp
xor
hlt
inc
jb
mov
adc
xchg
or
mov
rep
adc
jae
int
flds
push
pusha
shlb
pop
pop
xor
out
add
mov
or
cmp
sbb
inc
and
xchg
add
test
mov
xchg
adc
adc
sub
lret
cmc
push
push
loop
push
mov
xor
aam
add
sub
cli
inc
xchg
fsubrs
lods
and
rorl
jge
push
test
fst
push
popf
sub
std
push
lret
lods
jnp
inc
and
sub
sub
fstp
gs
cmp
aam
test
mov
test
ret
dec
add
cmp
scas
push
data16
push
mov
pop
sub
jl
and
scas
xchg
stos
mov
dec
or
clc
xchg
xor
mov
in
inc
sbb
pop
push
insl
jecxz
ja
xchg
ljmp
mov
lods
loope
push
inc
test
lret
xchg
add
fildll
xorb
jmp
jns
and
add
xchg
mov
jg
dec
sbb
mov
cli
pop
add
sbb
sbb
shl
mov
cltd
jno
jo
cmp
cmp
pop
loope
cmpsl
jne
or
lock
xor
cmp
sub
dec
push
aaa
into
ljmp
popf
cs
jmp
adc
push
dec
pushf
dec
ljmp
jmp
dec
cmp
push
add
jge
lahf
mov
faddl
clc
jnp
mov
icebp
xor
push
pop
jns
ffree
add
mov
xchg
scas
leave
xchg
xchg
cli
push
daa
repnz
xor
sahf
pop
sbb
inc
mov
loopne
add
popf
cmp
xor
iret
dec
test
scas
cmp
fdivs
mov
add
out
lds
in
xchg
pop
int
adc
aaa
adc
or
sbb
lahf
je
or
pop
jbe
or
cmpsl
mov
pop
int3
sbb
mov
push
mov
push
test
dec
mov
sbb
dec
sbb
push
push
call
test
push
fs
call
and
imull
xor
scas
add
inc
push
pusha
mov
addr16
lret
sti
addr16
rcl
cmc
or
sbb
sbb
les
mov
clc
mov
xor
mov
pop
inc
xor
icebp
out
sub
fs
jmp
mov
fcmovu
imull
imul
imul
sub
push
ret
mov
mov
pop
and
sbb
mov
cli
scas
xchg
in
mov
or
sbb
lea
sub
sbb
mov
pop
and
jp
xor
cmpsb
xchg
icebp
sbb
jno
in
push
mov
mov
repz
fldenv
mov
loop
fdivr
loope
sub
insb
cmp
and
and
dec
cmp
add
or
mov
jp
sahf
fistpl
cli
out
add
shl
push
sarl
repnz
scas
lods
cmp
nop
inc
test
test
les
insb
enter
dec
inc
subb
dec
push
add
add
cmp
in
xchg
xor
sub
cmp
push
jo
rorb
pop
mov
aaa
testl
mov
dec
dec
divb
xchg
push
in
add
dec
imul
out
rcrl
xorl
popa
and
mov
cmp
jne
mov
and
rol
sbb
adc
dec
and
addr16
mov
xor
in
inc
insb
push
xchg
push
test
sbb
sbb
mov
and
inc
sti
sub
xchg
cmpsl
push
int3
enter
inc
push
jne
mov
cmp
add
mov
xor
aas
cmc
pop
into
mov
add
popf
jp
sub
gs
imul
in
rcll
pop
fsubp
addl
xor
fwait
and
stos
mov
jne
dec
xor
mov
sti
dec
in
inc
sbb
rolb
lods
xchg
or
add
testl
rcll
dec
repz
mov
ljmp
outsb
addr16
lret
in
mov
bound
xchg
adc
rclb
pushf
dec
xchg
jne
insb
cli
in
daa
mov
fsubrs
fs
rorl
inc
pusha
jl
jecxz
imull
push
pop
insl
test
gs
adc
add
cltd
cmpsb
dec
fldt
ret
ljmp
popf
sahf
and
inc
jb
lea
sbb
insl
or
pop
testl
cmpsb
arpl
and
into
sarb
fiaddl
lea
mov
aad
enter
lret
push
xchg
inc
xchg
xor
add
dec
mov
bswap
fldt
cmp
pop
fcos
mov
sub
inc
mov
gs
insl
fidivrl
xchg
insb
xor
bound
outsb
sub
int3
push
xchg
cmp
sahf
jg
xlat
mov
mov
pop
int3
mov
loope
inc
dec
bound
ficompl
lcall
mov
jae
mov
mov
cmpsb
jnp
adc
mov
shl
movsl
pop
mov
mov
mov
sysenter
in
pop
int3
xchg
mov
clc
xchg
xor
mov
dec
push
push
dec
push
sbb
rorb
loopne
push
shrl
sbb
int
nop
lret
pop
faddl
stos
dec
xchg
out
shll
jo
adc
ss
je
cmp
push
sub
in
divl
jp
push
push
movsb
es
add
dec
sahf
ljmp
leave
jg
or
imul
sahf
imul
aam
ljmp
add
je
mov
push
jp
dec
xchg
pop
test
hlt
cmp
or
sbb
ljmp
add
je
mov
push
jp
dec
xchg
pop
test
hlt
cmp
or
sbb
ljmp
add
mov
inc
imul
sub
cmp
or
sbb
ljmp
jae
cld
xor
mov
push
jp
dec
lret
pop
mov
ret
arpl
sbb
fildll
pop
fimuls
ds
sub
repz
jp
dec
lret
pop
mov
or
cli
jne
dec
fidivrl
fmuls
sbb
imul
or
and
ljmp
sbb
ja
insb
clc
js
mov
das
mov
sti
lahf
jmp
push
fchs
push
outsb
xor
cmp
imull
lock
inc
or
pop
push
leave
mov
pmulhw
adc
mov
in
jp
bound
jns
add
out
cmp
cli
movsb
mov
cmpsb
add
mov
xor
test
sub
jle
lahf
outsb
or
add
xor
sub
push
jne
mov
push
test
sub
add
jb
push
cmp
enter
dec
fnstcw
jle
jmp
and
outsb
shlb
mov
jb
addl
and
pop
mov
pushf
enter
fistl
pop
mov
or
add
rcll
pop
mov
mov
mov
or
sub
pop
mov
jg
test
cli
or
sub
outsl
in
idiv
add
pushf
cmp
xor
idivl
sub
sub
dec
fimull
outsb
in
dec
out
mov
jp
mov
sbb
sbb
imul
lret
cmp
or
fisttpl
pop
mov
or
cli
pop
lret
cmp
or
jae
xchg
pop
mull
out
add
jl
xchg
lea
mov
fsubs
sbb
xor
fcoml
pop
into
loope
in
andb
sbb
and
mov
cmpsb
in
insl
push
les
pop
dec
jl
test
mov
push
lcall
loope
in
cmp
cmp
xchg
xchg
inc
xlat
outsb
and
sahf
into
sub
std
dec
push
fwait
mov
inc
adc
push
faddp
outsb
sub
push
sbb
sti
add
inc
stos
pop
push
and
dec
or
sar
push
cwtl
mov
pop
adcb
cmc
push
sti
loopne
sbb
mov
pop
inc
cmpsb
jo
sub
mov
insl
jno
sbb
push
cmp
jnp
mov
repnz
xchg
xor
jnp
cmp
test
in
lods
xor
xlat
out
test
and
push
jp
xor
jnp
jp
adc
dec
jns
gs
mov
add
jno
scas
or
sahf
loop
rcll
and
cmp
lock
cmp
fsts
pop
and
mov
scas
movsb
das
xchg
jge
daa
into
arpl
jno
mov
loop
fldenv
stc
sub
mov
or
xchg
fists
pop
xor
loop
rorb
push
sub
testl
insl
mov
or
rclb
adc
mov
dec
jnp
jne
lods
jmp
gs
icebp
cld
jecxz
adc
push
test
xchg
test
mov
ffreep
loope
xchg
enter
pop
jnp
jmp
or
bound
and
xchg
add
das
fiaddl
ret
xor
cli
adc
fdivrs
pop
mov
or
xadd
and
movsl
sub
push
loop
sarb
cmpsl
pusha
and
popa
lcall
inc
mov
xchg
fwait
int3
ss
in
sub
xchg
movsb
mov
cli
mov
popf
dec
in
lds
sbbb
or
push
fisttpll
bound
sbb
aaa
xlat
popa
sub
fmulp
pop
lea
pop
xchg
adc
dec
int3
cmp
in
sbb
pusha
ja
mov
xchg
jnp
dec
xchg
sub
div
add
shll
insl
pushf
fdivrp
xlat
sub
outsb
inc
jmp
mov
cmp
xor
push
xor
aam
pop
ljmp
dec
push
pushl
pop
ret
rorl
sbbb
add
push
xchg
scas
sahf
xor
fistl
xchg
aas
scas
pop
push
cwtl
movsl
push
stos
fucomp
push
xor
divl
push
icebp
mov
sbb
dec
popa
rorl
js
notl
mov
push
mov
out
cmpsl
lahf
nop
xlat
out
into
jp
push
icebp
outsl
dec
out
push
adc
rcll
cmpsb
pop
mov
mov
adc
dec
das
or
push
pop
inc
jo,pt
test
outsl
sbb
movsb
mov
inc
popa
and
mov
xchg
out
cmp
outsl
popf
loop
sub
sti
xchg
mov
lods
in
xor
mov
cmpsl
cmp
mov
scas
jl
or
cmp
gs
add
push
std
adc
stc
mov
daa
inc
mov
mov
movsb
popa
mov
sbbl
xchg
mov
dec
aaa
nop
sub
mov
pop
cmp
cltd
adc
or
int3
jb
dec
jge
mov
iret
jnp
sbbb
sarl
add
stc
gs
lock
insl
das
out
jge
fistpll
sbb
push
jae
aam
mov
mov
add
lahf
pop
inc
in
or
ret
movsb
dec
sbb
ret
mov
std
ja
pop
ljmp
orl
mov
cltd
mov
fsubrs
xchg
jecxz
add
mov
arpl
movsl
mov
lret
cmpsl
cltd
cli
lea
cmpsl
xchg
movsb
bnd
jl
lret
test
mov
and
jge
ror
sbb
push
addr16
add
fidivrs
scas
push
movsb
mov
pop
add
movsb
push
aaa
cmp
push
lret
lea
fwait
bound
into
jns
inc
xchg
add
push
lock
dec
sbb
jne
add
int3
jnp
mov
xchg
add
int3
int
js
add
es
jb
pop
mov
std
ss
out
pop
pop
mov
fsts
sbb
lcall
sub
mov
js
or
or
loopne
xchg
add
xchg
fwait
cmp
sbb
jne
orb
scas
lds
shll
addr16
add
push
daa
xor
sub
dec
xchg
test
mov
js
adc
enter
rcll
xor
cmp
xor
mov
jmp
sub
inc
xor
push
fcoms
add
cmp
sub
xlat
jg
lar
outsl
jnp
jp
xchg
rcll
cmpsl
popf
cmpsl
cmpsb
stos
and
js
fs
dec
xchg
out
adc
pusha
pop
push
aam
mov
or
add
dec
mov
push
insl
mov
fldl
into
lcall
dec
and
call
popa
cltd
add
xchg
daa
push
mov
xor
das
cltd
scas
fadds
lods
insl
ja
sbb
les
sub
pushf
and
or
sub
arpl
xchg
cld
and
addr16
or
xlat
and
cmp
ret
lea
sub
adc
jecxz
xchg
fwait
adc
mov
out
xchg
fnsave
push
jno
fnsave
jp
or
mov
arpl
push
int3
mov
push
in
or
add
jno
push
icebp
enter
push
daa
and
js
pop
fsubs
adc
pusha
pop
jo
nop
stos
inc
dec
mov
sub
movl
out
outsl
pop
mov
push
mov
daa
pop
adc
jno
lods
lret
js
mov
adc
jle
outsl
imul
test
scas
cld
cld
mov
sub
mov
and
leave
push
std
jns
pop
fisubs
jmp
inc
cmp
inc
xchg
dec
in
xor
fsubp
arpl
sbb
sub
lret
mov
mov
leave
sti
shrl
insl
dec
call
pop
sbb
inc
or
mov
cld
adc
mov
dec
mov
mov
rcll
jne
cltd
loop
add
mov
mov
fstl
imul
stc
mov
sub
pushf
into
loopne
cltd
mov
sbb
loop
rorb
out
adc
xchg
mov
mov
sbb
sbb
cmp
pop
inc
lds
xor
scas
hlt
pop
mov
sahf
out
or
push
loope
push
mov
add
hlt
call
ret
xchg
pusha
lods
les
ret
xlat
cmp
mov
ret
lahf
out
icebp
push
mov
xchg
cmp
pop
mov
cmp
dec
into
lods
loop
subl
or
lret
cmp
pop
arpl
fsts
lods
out
or
pop
int3
mov
out
js
sub
push
faddl
out
adc
sbb
ret
aam
inc
or
mov
imul
cmpsl
inc
push
inc
test
or
cmp
arpl
ds
cmp
lods
jl
in
cmp
jmp
cmp
or
repnz
add
arpl
sub
adc
iret
mov
mov
nop
rorl
ror
stos
or
add
and
push
dec
xor
aas
mov
push
adc
jns
xor
inc
xchg
and
add
mov
divl
inc
dec
xchg
mov
push
xchg
dec
dec
daa
push
repz
dec
xor
rolb
mov
push
and
or
mov
xchg
or
ljmp
add
cwtl
sub
mov
adc
and
popa
test
adc
jg
and
or
stos
pop
fcmovnb
clc
mov
dec
iret
jecxz
test
adc
xor
sub
in
movsl
mov
xor
mov
outsl
rcll
pop
stos
fdiv
fsub
sarl
sub
popa
scas
mov
lret
hlt
pop
in
adc
pop
inc
js
push
sub
out
jnp
adc
loop
cltd
cmpsl
repz
cmpsl
cmp
mov
sbb
mov
inc
sahf
lock
std
cmp
sarb
outsl
mov
cmpl
fidivrl
popl
lret
imul
stos
inc
inc
sbb
mov
inc
jmp
mov
ja
sub
sbb
sub
cmp
std
stos
jp
mov
enter
cld
in
adc
rorl
dec
repnz
and
ds
mov
iret
mov
sti
ljmp
shlb
sti
repz
push
inc
xor
jg
inc
sarl
dec
lds
adc
xchg
jecxz
mov
push
insl
arpl
mov
sbb
push
push
mov
adc
inc
ds
lahf
sbb
jbe
add
jp
inc
pop
stos
sti
mov
iret
fdivrl
orb
cmp
inc
movups
cmc
pop
jnp
lret
mov
jo
xorl
testl
sbb
add
push
sbb
dec
in
push
jecxz
loop
lahf
mov
gs
cmp
bound
xor
push
push
fidivl
and
orl
add
mov
js
and
arpl
push
mov
arpl
mov
mov
cwtl
fdivrs
push
inc
test
outsl
jnp
and
dec
inc
test
loope
jl
push
imul
imul
pop
and
jbe
and
fcmovnb
insb
aas
mov
in
add
fldenv
push
dec
scas
pop
ret
jge
jnp
fs
sub
mov
lock
add
mov
pusha
hlt
idiv
pusha
or
inc
xlat
push
fimuls
xchg
imul
movsb
out
adc
cmpsb
popf
xchg
ljmp
xchg
xchg
lret
int
pushf
sbb
enter
mov
jg
sub
xchg
jns
lahf
inc
jecxz
mov
int
ljmp
fsubr
sub
popf
shlb
dec
mov
scas
dec
sub
data16
subl
dec
mov
cmpsb
iret
imul
out
adc
pop
pavgw
mov
xchg
add
xchg
xor
sub
jle
hlt
cmc
roll
int
mov
out
push
sub
or
mull
pop
out
std
mov
pop
jge
imul
jge
adc
mov
inc
xchg
pushf
flds
ja
dec
fmull
das
pop
and
push
add
in
add
jle
sar
loope
icebp
insl
mov
jnp
cmp
push
int
jno
cmp
jle
push
call
xlat
inc
ja
into
lahf
xchg
xor
iret
ljmp
lods
sub
popa
leave
das
cs
mull
imul
ss
mov
dec
push
jno
sub
add
push
call
pop
inc
inc
negb
aaa
pop
insl
push
movsb
cmpsl
or
inc
into
out
call
jmp
cmpsl
cs
jge
test
mov
lods
dec
jmp
dec
stos
in
in
add
jo
mov
sbb
push
decb
fldcw
push
pop
xchg
hlt
sub
inc
cltd
dec
je
arpl
mov
cmpsl
inc
adc
cli
ljmp
inc
dec
dec
pop
push
pusha
in
js
out
gs
aas
mov
aas
popa
das
adc
xor
shrb
push
sub
dec
mov
out
stc
out
clc
cmp
push
adc
enter
jl
es
enter
jbe
cli
in
je
mov
stos
pusha
jmp
cs
data16
dec
clc
jecxz
and
jb
jle
fiadds
fdivl
adc
or
or
jp
push
scas
std
ss
jno
inc
push
dec
jno
mov
in
xor
push
or
pop
fs
std
enter
mov
lahf
fs
add
aam
test
pop
cmpsl
jb
jb
ret
insl
outsl
xchg
jecxz
in
in
pushf
mov
pop
jnp
dec
mov
jnp
xchg
inc
cmpsb
decb
movsb
jle
stos
jae
sti
dec
insb
test
sub
inc
pop
push
push
scas
pop
cmp
call
aas
andb
sbb
pop
push
or
loop
mov
xchg
ja
mov
maskmovq
testl
inc
inc
xor
shl
fcmovb
cwtl
stos
push
or
ret
and
lretw
mov
idivl
faddl
xorl
clc
cmp
and
sub
adc
dec
sub
popa
add
mov
sub
rorb
xorl
cmpsb
sbb
jne
sti
cmp
adc
pop
mov
lahf
cli
push
cld
fwait
popa
mov
addl
jp
aas
pop
fimull
mov
or
push
mov
jl
movsl
push
and
aam
and
push
mov
js
popf
push
aad
or
xlat
in
xchg
and
add
mov
add
roll
inc
add
dec
in
xchg
int
xchg
data16
loope
xlat
lahf
sbb
sbb
xchg
movb
xchg
inc
in
mov
cmpsl
jae
xlat
jg
jno
icebp
imul
push
jo
jb
lods
imul
div
daa
lea
out
add
adc
shll
and
push
cmpsl
sbb
inc
jae
dec
lret
ds
jne
cmp
ds
loop
mov
adc
filds
out
and
pop
dec
mov
stos
fsubl
mov
bnd
pop
pushfw
xor
testl
adc
mov
movsl
in
or
dec
mov
jnp
movsl
gs
notl
fwait
sub
lods
or
add
cltd
icebp
lcall
sbb
mov
pushl
xor
mov
inc
pop
pop
out
arpl
xchg
or
pop
les
out
test
or
ss
push
push
insb
inc
clc
in
shrl
push
stos
dec
mov
pop
xchg
mov
or
das
popa
dec
pop
lods
jno
mov
pop
fwait
jno
inc
movl
outsb
pop
pop
int
out
dec
lahf
fs
aad
out
scas
lret
loopne
push
xchg
cmp
repnz
mov
fbstp
push
daa
and
jle
pop
sti
ret
inc
out
lods
xor
cmc
sbb
outsb
ds
mov
jo
push
and
xchg
sub
pop
andl
push
in
test
loop
adc
jl
outsb
test
push
and
sahf
pop
lea
into
push
adc
push
inc
pop
lds
jecxz
push
mov
dec
daa
scas
lods
mov
iret
loopne
repnz
stos
popf
sub
sahf
insl
ja
push
arpl
pop
jp
push
fisubrs
addr16
aaa
pop
call
testl
push
icebp
or
test
add
fwait
icebp
jnp
nop
adc
ljmp
mov
dec
jecxz
vpackuswb
test
ficoms
mov
push
mov
in
jle
lcall
incb
jae
andl
sub
bound
sbb
pushf
add
mov
xor
push
roll
ret
xchg
jmp
test
jl
mov
xor
lods
xchg
out
scas
lods
sbb
fisttpll
bound
aad
cmpl
xchg
push
mov
popf
imul
lahf
push
xchg
cmpsb
in
js
and
mov
and
add
mov
filds
jg
xlat
pop
fdivr
inc
or
mov
push
cwtl
push
pop
call
orl
sbb
repnz
adc
xor
mov
push
push
and
add
imul
shufps
pop
and
les
dec
xor
rcrb
fcoms
mov
fcompl
in
xchg
movsl
imul
cmc
cmp
fcmovbe
dec
in
mov
mov
popf
cmp
add
inc
scas
imul
iret
xchg
mov
jae
cli
dec
jb
mov
sbb
incl
jmp
ret
sbb
add
cld
adc
nop
xor
xchg
cmc
sbb
xor
dec
out
jecxz
lds
cmc
inc
or
cmp
je
add
ss
push
sbb
lock
popf
push
dec
jb
mov
fstp
dec
adc
aas
jecxz
mov
repz
movsb
leave
aaa
loopne
push
pop
mov
jmp
popf
fs
scas
stc
test
or
lods
sub
xchg
adc
ja
mov
push
xchg
add
pop
sti
out
jns
mov
sbb
or
scas
shl
mov
mov
fsubrs
loope
arpl
xlat
hlt
loop
stos
xor
mov
pop
mov
mov
sahf
sahf
cltd
data16
jle
ds
mov
mov
outsb
lcall
divl
in
mov
push
adc
push
xor
cld
xorl
test
mov
mov
insb
out
in
mov
ljmp
into
xchg
inc
jge
sub
shlb
popf
mov
movsb
aam
outsb
pop
pop
cld
in
insb
or
push
frstor
test
orl
fcompl
es
aaa
stos
notl
enter
das
sub
movsb
fs
xchg
les
lds
xor
js
pusha
inc
add
adc
imul
sbb
pop
add
inc
pop
cmp
adc
mov
dec
or
std
lods
or
out
or
mov
imul
mov
push
xchg
lds
inc
ss
xor
pushl
cld
fcmovnu
mov
mov
jns
adc
xor
mov
mov
lea
idivl
cmp
adc
push
mov
xchg
lret
divb
nop
sbb
xchg
jge
fcoml
mov
xchg
lock
xorb
ljmp
mov
inc
ljmp
xor
ficomps
pop
xchg
jmp
cs
lds
jle
mov
dec
fiaddl
cli
push
mov
fwait
pop
lea
inc
jmp
nop
ss
push
sub
imul
imul
inc
add
dec
iret
mov
jbe
out
or
into
or
mov
push
sub
js
pop
sub
jecxz
lahf
xchg
dec
out
push
loope
mov
call
xchg
call
add
test
inc
jl
out
jae
ss
mov
dec
jmp
in
fisttpll
sbb
arpl
or
scas
or
jno
and
pop
sarl
push
dec
lcall
mov
push
in
ret
jl
scas
xchg
int
sub
ficoms
pop
sub
cs
sbb
sbb
xlat
xchg
mov
lret
mov
ficoms
mov
jo
xor
clc
jmp
push
addr16
cli
inc
sub
push
test
fisttpl
ljmp
sti
imul
imul
fcmovnu
sarb
pop
xchg
ret
sub
addl
fiaddl
stos
aad
fcmovb
imul
push
out
xchg
xchg
int3
std
add
imul
in
xchg
mov
lret
inc
in
fdivl
mov
int3
xchg
out
add
ror
popf
test
int3
xor
or
rcll
ss
icebp
lock
clc
mov
dec
mov
rorl
sub
mov
cltd
loope
fs
xchg
inc
scas
cmp
icebp
inc
loop
nop
add
xchg
out
hlt
fimuls
cli
xor
xchg
flds
mov
jl
jp
xlat
or
push
or
loope
add
dec
out
inc
and
cmp
dec
ret
popf
or
xlat
stos
cmpsl
lods
mov
fs
xor
pop
call
setl
jnp
movsl
or
stc
imul
or
and
and
xchg
mov
or
jbe
mov
iret
push
sarb
lcall
outsb
xchg
mov
leave
jb
dec
das
xor
es
mov
movsl
test
cwtl
inc
adc
je
int3
and
mov
orb
push
test
xchg
inc
mov
mov
je
xchg
clc
ret
shlb
insb
testb
fidivrl
inc
fistpl
in
cmp
rorl
xchg
dec
nop
gs
insl
or
cmp
pop
mov
jle
fdivl
dec
add
fnstsw
call
push
icebp
and
scas
sub
fdivrl
mov
add
pop
cld
mov
mov
push
lea
imul
pop
lea
xor
out
and
insb
enter
push
add
sub
in
jp
out
fldenv
xchg
ret
dec
jnp
and
push
ficompl
notb
fisubs
jge
inc
nop
mov
sub
test
and
pop
push
cmp
cmp
imul
jb
lcall
pop
and
sub
rorb
es
ja
fdiv
jl
paddd
inc
loopne
sub
addl
and
lock
lods
mov
outsb
fwait
ja
cmp
fisttps
mov
pop
jp
dec
xlat
pop
mov
or
cli
pop
lret
cmp
or
fisttpl
pop
mov
or
cli
pop
lret
cmp
or
lret
dec
lret
pop
mov
or
cli
push
lret
cmp
cmp
push
dec
jecxz
mov
or
fidivrl
xchg
push
icebp
lret
dec
and
in
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sti
jns
movsl
ds
in
int3
arpl
pop
mov
pop
add
add
add
pop
add
add
add
outsb
add
add
add
add
dec
add
add
or
xor
add
imul
add
in
add
add
out
pop
add
add
imul
add
add
xor
add
add
add
add
add
xor
add
or
dec
add
mov
mov
add
add
inc
add
in
add
add
add
xor
cmp
add
add
mov
or
sbb
add
add
add
add
fs
or
rolb
daa
add
add
add
add
mov
add
add
lea
ds
add
jb
icebp
add
add
jg
inc
add
movsb
add
add
cltd
add
enter
cmp
xchg
jg
dec
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
lea
jo
and
cmp
add
add
rolb
jne
add
add
add
jne
mov
add
add
xor
and
add
add
add
add
add
add
add
add
add
addr16
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
int3
add
pushf
add
ljmp
add
add
fadds
push
add
jp
cmp
dec
add
add
add
ljmp
add
add
inc
add
add
add
xchg
add
add
icebp
add
adc
dec
add
repz
add
add
add
add
jp
lock
add
and
add
add
add
add
add
add
add
add
add
add
add
pop
icebp
add
add
add
mov
push
add
imul
add
add
add
add
xor
enter
ljmp
add
add
add
add
addb
add
add
popf
add
add
add
add
add
jecxz
sub
add
add
jo
pop
add
add
add
add
sub
add
xor
lock
add
add
add
add
jae
mov
add
add
inc
add
push
jae
add
add
add
lret
add
pop
add
loope
jp
imul
add
add
add
ljmp
add
add
loope
enter
jno
push
add
add
addb
add
add
arpl
and
rolb
in
add
add
add
add
add
add
or
or
lea
jno
faddl
jae
arpl
mov
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
insb
add
add
add
add
add
lods
imul
mov
sti
aas
lds
gs
test
or
rorb
lgs
lret
pop
or
fistpl
je
push
cld
mov
jl
ljmp
mov
inc
mov
ret
mov
pop
xchg
or
call
dec
int
clc
add
or
jp
xchg
push
ficomps
testb
enter
mov
cmc
xchg
sbb
jo
and
xchg
xchg
adc
sbb
and
mov
cmp
push
dec
push
lahf
cli
xchg
fisttps
sub
cltd
and
add
jb
mov
aas
xchg
mov
add
push
iret
fwait
push
cmp
or
ficoms
mov
mov
jl
adc
adc
out
jno
stos
inc
repnz
sarb
mov
ret
lret
fbstp
clc
mov
push
and
cltd
xchg
jp
int
popf
jg
dec
mov
outsb
pop
addb
push
mov
inc
shlb
xchg
outsl
or
sub
icebp
loope
enter
je
sarb
xlat
add
call
cmp
clc
dec
pop
or
ljmp
out
pop
ja
mov
xlat
push
out
pop
mov
pop
test
xchg
push
rcl
gs
adc
inc
testl
movsl
incl
ds
stos
xchg
sub
push
stos
push
stos
sub
mov
stc
in
cmp
bound
es
mov
add
push
dec
hlt
inc
fildll
sub
xor
mov
sub
pop
scas
pusha
stos
mov
mov
nop
xchg
jg
mov
sbb
xchg
cwtl
shll
cmp
push
leave
bound
gs
cwtl
addr16
cmp
test
mov
in
xlat
sub
or
in
mov
test
jle
pop
dec
clc
fisttps
out
inc
insl
lret
subl
sub
mov
int3
push
les
shll
mov
pop
pop
insb
and
fst
add
lods
add
sbbl
mov
inc
out
xorb
inc
sbb
xor
imul
or
fidivl
mov
push
aam
inc
xchg
xchg
xchg
negl
dec
ss
sahf
mov
decb
loope
test
stos
andb
insl
rcr
adc
int3
xchg
and
fstp
sbb
fsubp
sub
stc
clc
aas
fwait
sub
push
loopne
adc
jmp
movsb
inc
lret
and
sti
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
