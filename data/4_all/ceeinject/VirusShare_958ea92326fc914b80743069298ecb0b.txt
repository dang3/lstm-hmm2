call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
inc
in
push
std
gs
fisttpll
lds
inc
lods
push
popf
lds
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
sbb
test
mov
inc
in
push
std
gs
fldl
lea
jge
sub
pop
in
push
fistpl
push
mov
adc
cltd
pop
repz
sub
ljmp
into
mov
clc
and
cs
inc
cs
fnsave
test
subb
sarb
adc
pop
dec
dec
mov
cmp
mov
and
pop
int
jno
nop
mov
mov
shl
xchg
add
push
jle
add
fldl
add
lds
rorl
movsl
repnz
mov
dec
dec
and
cwtl
xor
aad
sub
cmc
mov
popf
or
mov
add
stos
xchg
and
fcom
xor
clc
mov
jge
pop
mov
mov
sbb
sbb
in
push
std
gs
fldl
lea
jge
dec
cmc
pop
test
mov
add
adc
ret
je
test
rorl
xchg
cld
dec
loope
loope
inc
in
daa
pushl
in
fldenv
adc
mov
loopne
rcll
mov
sub
xor
add
lea
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
jge
dec
cmc
pop
test
mov
inc
in
lock
jg
lcall
sub
mov
cwtl
or
and
fs
jne
dec
jno
adc
add
mov
rcll
mov
push
insb
xor
out
lret
loopne
xchg
cmp
cmpsb
xor
mov
aaa
in
jp
push
neg
in
add
fistpl
jae
lea
int3
add
dec
inc
push
ljmp
andl
jecxz
xor
ret
sub
popa
xor
insl
cmp
dec
xor
iret
lahf
lahf
sbb
loopne
dec
jmp
fldln2
jle
xchg
and
dec
sub
jle
xchg
loope
or
cmpsb
cmp
xchg
push
and
adc
inc
lea
push
sub
aaa
and
testl
push
scas
call
rcl
jne
push
or
sbb
cld
add
sbb
scas
mov
push
loop
notb
mov
jno
icebp
push
jae
inc
sub
cmp
in
pop
xorl
adc
ljmp
movsb
in
dec
pop
xchg
add
fidivrl
imul
sub
mov
repnz
mov
lds
mov
sarl
ljmp
cld
sbb
mov
aaa
inc
dec
icebp
and
mov
ret
inc
mov
clc
stos
jge
mov
or
inc
push
mov
lret
lret
xorb
ret
int
mov
repnz
inc
or
out
mov
adc
test
insb
in
lahf
orb
lods
mov
pop
insl
pop
sub
lret
cmp
test
xchg
scas
ljmp
push
cmpsl
aas
sub
mov
fs
outsb
mov
pop
push
insb
fnstcw
imul
xchg
mov
lds
cs
inc
add
dec
psrad
or
push
sbb
mov
aad
nop
and
arpl
das
inc
insl
add
arpl
xchg
mov
sbb
mov
sbb
push
push
pop
jne
adc
out
sub
fidivs
mov
stos
fimuls
add
sahf
pushf
iret
inc
dec
and
enter
sbb
dec
xor
aad
lret
imul
ret
xor
pop
cmp
mov
mov
mov
jge
insb
ljmp
clc
ret
mov
cld
insb
or
or
test
sahf
in
repz
lcall
ror
push
or
adcl
stos
cwtl
xchg
inc
jne
gs
in
xor
icebp
subb
push
sub
cmpsw
pop
lods
call
mov
xchg
mov
loop
ja
out
push
out
pop
in
fnstenv
pusha
cmp
add
rcrl
ss
lods
mov
sti
inc
push
mov
add
push
aam
and
imul
int3
jecxz
int3
xorl
fildll
dec
inc
jge
scas
push
fists
pop
push
pushf
js
arpl
push
dec
les
adc
xchg
sub
mov
nop
push
cmp
or
jge
mov
push
add
xchg
popf
xchg
fidivs
outsl
jae
cmpsl
dec
insl
inc
mov
daa
scas
mov
es
mov
mov
lods
push
sbb
mov
push
enter
jbe
pusha
and
mov
mov
mov
mov
lds
inc
jns
push
rcl
mov
stos
loope
jns
inc
pop
sub
ret
hlt
shll
out
test
and
daa
ss
push
leave
outsb
enter
xor
cs
test
push
pop
fisubs
test
add
inc
loop
out
fcoml
pop
mov
mov
in
sbb
mov
fsubrl
movsb
add
xorl
or
imul
pop
aad
in
cmpb
cmp
pop
and
mov
inc
jp
sbb
mov
inc
into
jne
mov
hlt
cmp
lea
stos
dec
jb
out
std
shll
lea
mov
repz
ljmp
pop
loop
andb
mov
and
in
mov
pop
sub
sub
adc
push
lret
scas
cmp
adc
lods
xchg
sub
out
xchg
push
mov
sub
orl
mov
stc
push
je
es
in
inc
xor
push
arpl
jb
jge
jnp
push
mov
cld
pop
and
clc
stc
daa
pop
and
jbe
imul
mov
or
js
inc
mov
adc
daa
jo,pn
inc
add
loope
cmpsb
mov
addr16
jmp
add
loop
jle
xor
or
sbb
adcb
cli
add
mov
pop
dec
dec
jo
das
sub
inc
push
or
jbe
cmp
cmp
jb
push
inc
in
stos
in
push
mov
nop
and
cmp
mov
cmpl
cmp
pop
fs
pop
popf
test
inc
hlt
pop
mov
iret
push
or
mov
divl
fsubl
or
push
push
add
xor
or
fcompp
aam
in
gs
int
test
in
lret
in
repnz
xor
call
xchg
inc
dec
inc
loopne
push
xor
daa
jae
rol
loopne
mov
pop
scas
inc
iret
movsb
cmp
fwait
xchg
xor
daa
or
mov
inc
mov
xchg
mov
repz
hlt
dec
or
loopne
out
push
push
mov
in
xchg
xor
inc
push
pop
push
outsb
jno
mov
add
or
pop
add
repnz
lret
jo
out
mulb
sub
out
arpl
mov
dec
mov
push
fcoml
mov
mov
jle
gs
stos
imul
mov
sbb
ja
inc
scas
mov
xchg
addb
pop
jge
pop
out
adc
cmpsl
mov
push
ss
fdivrl
ja
fdivs
cmpsl
sub
xchg
mov
lea
dec
imul
sbb
xchg
loopne
jb
mov
xchg
cmpsl
pop
mov
outsb
push
popf
retw
pop
mov
fld
out
jo
and
cmc
in
cmpb
xlat
jne
adcb
sub
in
mov
je
mov
movsb
mov
xchg
sbb
subb
xor
lds
ss
cmp
sahf
imul
ds
lds
push
mov
sub
repnz
movsl
adc
mov
pushf
daa
clc
fnstcw
mov
mov
icebp
mov
push
cmpsb
mov
adc
and
mov
sbb
push
xorl
rorb
adc
lret
push
cmp
pop
mov
pop
ss
loope
push
stos
pop
lret
in
out
imul
mov
mov
sub
and
cmp
dec
dec
mov
xchg
ret
add
gs
adc
ret
xor
jns
cmpsb
jg
sub
jmp
in
test
push
mov
xor
repnz
push
es
xlat
dec
adc
leave
aas
lret
movsl
fadds
inc
mov
stc
ljmp
cmp
jnp
daa
pcmpeqb
pop
aad
repz
xor
adc
out
mov
mov
adc
stos
mov
pop
pushf
ficoms
out
cs
pop
push
js
popa
cmp
adc
sub
or
lahf
loop
xor
imul
mov
sub
cmp
sti
dec
test
stc
or
loop
out
add
bound
iret
lods
push
sub
xor
ja
addr16
pop
int
movsl
flds
stos
ja
jle
cwtl
shrb
jge
xchg
push
xchg
push
sub
sub
jp
jl
sbb
imul
pop
mov
rcll
push
add
sub
or
out
xchg
dec
mov
mov
pop
pop
aaa
mov
adc
mov
jmp
jle
mov
rcrb
jne
hlt
push
adc
inc
cmp
sbb
inc
stos
sub
add
mov
pop
dec
in
sub
push
pop
mov
and
xor
in
bound
out
scas
test
sub
mov
cmc
or
aas
pop
arpl
jmp
shrl
mov
push
sub
pop
xchg
rcll
dec
sub
push
cmp
jb
dec
or
mov
xor
inc
mov
cld
aam
loopne
add
push
push
xchg
pop
xchg
lcall
pusha
aad
insb
and
std
mov
jno
push
stos
jbe
popa
and
add
jg
shll
sar
lahf
dec
cmpsb
lea
push
into
data16
inc
push
mov
jl
popa
ds
out
inc
cld
cmp
movsb
out
out
stos
pop
out
pop
cmp
cmpsb
pop
adc
mov
jge
jl
popa
mov
jge
mov
sbb
mov
out
hlt
hlt
stc
add
js
fiaddl
fstpt
out
cmp
xchg
dec
inc
fistpll
or
sbb
xchg
cmp
repz
cltd
adc
ficoms
loopne
sti
sbb
cmpsl
add
gs
insl
out
pusha
add
or
fmul
or
mov
fxtract
adc
sub
inc
out
jg
push
xlat
lcall
push
or
sbb
ja
lret
xchg
lock
jge
inc
insl
mov
push
or
ret
icebp
inc
imul
mov
dec
mov
hlt
pop
movsb
jge
push
cmpl
inc
xor
inc
stos
sbb
mov
or
neg
xor
cld
enter
adc
adc
jg
fst
cmp
fidivrs
mov
pop
and
or
pop
cli
push
jle
pop
fcoml
stc
out
mov
in
pop
push
aaa
cmpsb
xor
jns
adc
ljmp
mov
int
test
lock
inc
sub
jp
jge
int
enter
cmpsb
jns
loope
xchg
pop
mov
ljmp
clc
or
cld
in
or
push
ret
dec
inc
xchg
int
rorb
fdiv
add
push
test
aam
nop
out
call
ds
cmp
in
jle
sbb
inc
test
xor
repnz
insl
lea
int3
add
xlat
repnz
je
add
lret
mov
out
fcoml
push
ret
add
xor
mov
mov
setg
add
lcall
and
out
loopne
mov
mov
add
xchg
jb
cs
jns
mov
cld
popa
gs
daa
cmp
adc
add
add
push
repz
jge
jbe
sbb
outsl
jmp
dec
or
sub
inc
imull
xchg
daa
out
aam
sub
xor
loop
call
lods
push
dec
mov
or
adc
and
pushf
and
jmp
dec
dec
cmc
loopne
cmp
sbb
sbb
in
daa
inc
push
das
fadd
lcall
sbb
mov
adc
cmpsl
xchg
xchg
mov
out
fmull
out
shrb
inc
aam
insl
dec
push
sbb
addr16
or
push
ret
lret
add
mov
cltd
inc
push
sub
jb
mov
xor
shll
les
pusha
mov
mov
scas
xor
notb
adc
jnp
test
leave
int
mov
int3
mov
clc
xchg
leave
aam
or
fcompl
xchg
fcomp
test
mov
jb
adc
cmp
sub
or
lock
stos
mov
insb
lea
pop
push
loopne
xor
aas
inc
jae
jnp
scas
in
xchg
ds
divb
and
adc
pop
sub
shrb
idivl
xchg
and
fcoms
push
push
cli
dec
mov
dec
rorb
arpl
movsb
or
cmc
ret
insb
arpl
cmp
mov
daa
jle
pop
in
xor
mov
bound
faddl
arpl
mov
ljmp
mov
mov
mov
push
dec
jmp
cmp
xlat
mov
popa
push
sbb
jecxz
decb
jnp
popa
outsb
out
fstpl
cmpb
jne
sbb
adc
aaa
dec
dec
dec
addl
mov
mov
out
shrb
mov
in
test
pushf
pop
or
ret
imul
sbb
cmp
dec
push
mov
je
inc
adc
stos
adc
lods
mov
fisttpll
adc
negl
or
into
in
mov
push
inc
aas
push
mov
scas
jp
dec
ja
sbb
cs
clc
pop
fs
mov
lods
add
mov
pop
dec
push
jb
pushf
test
sub
movsb
andb
lods
daa
clc
mov
sbbl
in
addr16
mov
outsl
adc
adc
stos
in
or
test
movsl
iret
stos
or
mov
add
xor
outsl
adc
inc
xchg
arpl
movsb
and
mov
sbb
pushf
stos
jbe
inc
mov
push
inc
xor
jle
cmp
and
or
imul
sbb
sub
fadds
leave
mov
mov
xor
out
ljmp
ret
pop
add
jae
pop
ficoml
scas
sub
pop
mov
fwait
arpl
aas
inc
lods
sbb
repnz
xchg
jno
xor
outsb
jno
and
bound
call
in
sub
xor
jno
cld
int
push
aas
adcb
popf
outsb
mov
rcr
dec
pop
sbb
mov
cmc
mov
cmp
insl
notl
test
mov
xor
and
dec
int3
push
hlt
xchg
loope
test
sti
mov
into
xchg
fistpll
repnz
and
faddl
cli
mov
jl
xlat
cs
pop
xor
xchg
lcall
sub
jle
push
sbbb
int
pop
test
xchg
notl
pop
and
mov
mov
mov
js
jno
gs
jne
or
cltd
lea
stos
or
adc
dec
fsubrs
sub
sahf
in
int
rcl
xor
pusha
les
dec
fcomp
imul
popf
mov
adc
loope
adc
inc
repnz
mov
pop
jb
xor
xchg
iret
sub
inc
call
sub
mov
or
fs
push
sub
mov
repnz
push
mov
and
mov
jno
insl
js
frstor
fxch
mov
cmp
lret
cmp
inc
add
add
lret
xchg
sub
jecxz
mov
fwait
pop
and
sbb
movsb
mov
xor
bound
js
fidivl
aam
adc
sub
lea
mov
out
mov
add
insl
xor
and
or
push
data16
push
out
lods
je
dec
dec
das
mov
imul
dec
sub
adc
jmp
js
jne
idivb
sbb
sbb
cmpsl
xchg
mov
orb
mov
push
push
fldl
pop
xor
xlat
cwtl
inc
out
nop
xchg
sub
fimuls
dec
aam
add
or
insl
push
les
incl
aaa
stos
enter
cwtl
fistpll
push
xchg
das
cld
movsb
fists
ret
jo
iret
sarb
imul
std
jno
lret
mov
std
jnp
push
shlb
xchg
sbb
and
insl
mov
add
aad
xchg
inc
adc
xchg
sti
in
inc
inc
or
sub
out
inc
jb
xchg
cmc
push
jnp
and
stos
scas
mov
cltd
xor
xchg
mov
mov
imul
mov
jbe
fldenv
xchg
adc
pop
outsl
jge
push
test
aam
mov
andl
add
ret
push
mov
xor
orb
mov
xor
es
loop
outsl
or
sbb
fsubr
ljmp
adc
push
cltd
stos
dec
push
xchg
fildl
sbb
es
inc
mov
jle
in
mov
in
mov
popf
jge
jmp
fiaddl
xlat
jo
mov
xchg
arpl
mov
sbb
adc
pop
dec
int
mov
std
scas
mov
jbe
mov
push
xchg
push
rcr
or
ds
data16
push
outsb
inc
mov
pop
xchg
clc
xchg
mov
sbb
adc
in
jns
stos
cmp
cmp
mov
mov
addr16
xchg
push
aam
icebp
inc
mov
cltd
inc
sub
decb
cmp
test
aad
aas
addb
aaa
in
test
jge
mov
outsl
test
sub
cmpsl
ficoml
cmc
push
lods
insl
pop
repz
or
xor
stc
mov
movsl
xor
pop
mov
inc
push
dec
lods
loopw
lods
push
push
jle
push
loopne
notb
cmp
push
mov
popf
mov
sbb
xor
ficompl
dec
fcoms
and
test
jb
pop
jl
xor
xchg
cmp
push
xlat
aas
movb
mull
movsl
xchg
add
lds
popf
pop
inc
imul
jne
icebp
fcomps
adcl
or
mov
sarl
mov
pop
push
jp,pn
out
stc
cltd
movsb
xchg
mov
or
fcmovne
adc
sbbl
lods
loop
push
ds
mov
or
movb
pop
test
xchg
mov
hlt
out
pop
inc
clc
sub
mov
xlat
or
bound
andl
xchg
stos
and
sbbb
mov
mov
cs
push
mov
jl
lods
stos
dec
dec
ficompl
add
jbe
call
mov
frstor
mov
repz
rcrl
push
fs
ret
mov
xchg
cmpsb
sub
jnp
mov
lret
stc
ficoms
mov
mov
sub
rcrb
mov
lret
add
mov
push
adc
int3
icebp
push
mov
or
mov
out
or
fdivl
pop
and
outsl
cli
repnz
xchg
in
cmp
ret
aad
and
inc
mov
in
cltd
jecxz
cwtl
or
fsts
mov
mov
in
xchg
dec
and
cwtl
jl
adc
int3
jo
xchg
pushf
add
mov
aad
mov
pusha
int
mov
loopne
out
push
dec
cmp
scas
pushf
push
xchg
cmp
mov
in
xor
out
inc
cmp
into
cwtl
insb
jo
stos
shlb
dec
sub
push
int
xchg
out
jno
xor
sub
fcomps
dec
mov
cmp
orb
cmpsl
ret
loop
pusha
lds
incl
lock
scas
lcall
pusha
add
lods
mov
in
push
cmpsb
stc
sub
nop
xchg
push
dec
jle
pop
lods
fnstenv
shrl
shll
mov
adc
xchg
adc
adc
int3
enter
jns
fcom
je
ja
push
lahf
add
into
insb
and
cmpsl
sbb
lods
cmp
pop
enter
sbb
dec
dec
stc
fildll
movsb
inc
push
pop
jg
cmp
cmp
fisttpl
imul
and
cwtl
mov
int3
test
pop
mov
mov
xor
das
pop
mov
add
pop
jbe
adc
jmp
popa
push
and
sub
out
adc
int
pusha
std
icebp
std
data16
lods
int
jl
lahf
dec
dec
push
inc
sbb
cmp
in
push
pop
jbe
test
lods
fs
sub
mov
sub
mov
testb
nop
push
jge
adc
pop
fs
lahf
mov
mov
sbb
sbb
addr16
movsb
cmp
xor
lret
xrelease
rcr
inc
movsb
mov
cmp
mov
pop
cltd
in
in
mov
xchg
jo
jb
or
aad
jp
sub
add
jge
js
addl
repnz
fsubp
int3
ja
or
pushf
cs
push
and
and
jbe
ds
cmc
test
notl
fcoml
stos
push
notl
out
cltd
or
sbb
jb
loope
adc
popa
inc
add
inc
lret
ja
and
in
mov
and
push
dec
cmp
mov
arpl
jp
aad
sub
xchg
inc
sbb
iret
filds
mov
ror
xor
mov
repz
mov
inc
inc
repnz
std
inc
push
lock
jae
fwait
mov
fmull
fdivrs
stc
mov
out
pop
leave
mov
lret
jb
mov
jb
out
or
mov
movb
push
pop
enter
in
sti
popa
subb
out
and
jno
and
mov
std
add
loopne
cs
cmp
sub
jmp
xor
xor
jo
push
in
loop
loopne
and
arpl
sub
or
aad
sti
pushf
repz
xor
mov
outsb
lcall
aas
imul
shll
daa
ja
jb
fldl
mov
pop
in
add
cmpsl
or
pop
cld
fs
das
mov
push
shlb
roll
sahf
imul
dec
out
xchg
loop
sub
sub
adc
jno
mov
jne
add
lea
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
jge
dec
cmc
pop
test
mov
inc
in
push
jge
dec
jne
add
lea
jge
dec
cmc
pop
test
mov
inc
in
push
std
gs
fldl
lea
xlat
dec
dec
cmc
sub
movsl
sbb
loop
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
arpl
push
mov
jno
push
jecxz
adc
add
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
repz
add
xor
and
jae
arpl
push
pop
mov
mov
sbb
adc
cli
sub
stos
and
push
les
xchg
sbb
inc
xlat
and
add
lock
gs
push
dec
xor
fwait
pop
clc
mov
ret
cmp
xor
incl
arpl
xor
enter
lahf
pushf
xchg
iret
loopne
mov
mov
shll
rorl
mov
mov
orb
xor
cld
sbb
mov
and
push
test
fcompl
adc
lea
jg
gs
sub
or
mov
push
xor
adc
mov
jl
xorl
push
xchg
jnp
mov
fcompl
xor
lock
data16
jle
mov
lods
loopne
andl
stos
xchg
push
inc
mov
mov
add
or
cli
adc
add
xor
and
jae
and
es
daa
in
mov
adc
mov
mov
mov
icebp
incb
or
adc
sub
and
dec
mov
in
add
outsl
ret
gs
dec
mov
push
testl
imul
jecxz
adc
add
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
repz
xor
and
jae
arpl
pop
xchg
cld
inc
and
push
push
aad
movsb
popf
ret
das
push
out
lret
cmp
movsb
scas
in
outsl
adc
cmpsl
data16
fnsave
cmp
add
int3
sbb
inc
mov
cli
xor
or
stc
ret
dec
dec
cli
jmp
imul
or
adc
dec
stos
cmpsl
mov
out
std
mov
int3
push
enter
and
mov
mov
pusha
or
xchg
lret
and
mov
add
mov
xor
ret
in
push
push
inc
aas
out
xor
xchg
dec
jecxz
sbb
xchg
imul
sbb
mov
fst
fsubrl
iret
scas
cmpl
mov
adc
adc
pop
out
test
dec
pop
mov
mull
lds
add
sub
jg
mov
pop
cmp
fsubrl
lret
mov
and
shrb
sar
push
jae
add
push
dec
xchg
pop
lock
in
mov
popf
imul
dec
jne
pop
pop
mov
lock
xchg
inc
jg
sub
push
jge
pop
shll
xorl
test
push
nop
subb
xlat
imul
xchg
xchg
sbb
enter
xchg
dec
pop
jbe
adc
pusha
dec
pop
sbb
lahf
jg
sahf
js
xorl
and
js
fdivrl
inc
xchg
arpl
and
mov
lahf
stos
dec
or
push
or
rcrb
negb
adc
icebp
test
jg
add
cmp
ljmp
push
rcll
mulb
and
mov
stos
cli
xorl
xor
test
sarb
negb
scas
sub
adc
push
mov
and
sub
jae
add
dec
sub
push
jns
or
lods
sarb
std
xlat
push
dec
cmc
shrl
shrb
xor
bound
lods
sahf
push
mov
mov
insb
mov
psrlq
mov
insl
repnz
enter
push
jle
cld
mov
push
lcall
add
push
loop
push
push
xor
enter
adc
dec
nop
das
lcall
xchg
push
mov
adc
daa
xor
dec
sti
in
shl
mov
nop
das
imull
xor
sbb
and
mov
and
std
jb
mov
repz
cmp
repnz
lods
stos
pop
pop
add
and
mov
mov
jnp
xchg
dec
loopne
stc
xor
mov
mov
xor
out
aaa
inc
cmp
inc
test
shlb
test
into
adc
cmp
int
int3
add
aaa
mov
xchg
lahf
pop
mov
push
mov
and
shrl
xorb
xchg
repnz
stos
pop
cmp
pop
sub
jnp
clc
mov
outsl
add
dec
inc
dec
inc
outsl
int
scas
add
leave
mov
push
into
dec
jb
dec
push
test
loop
jg
fwait
mov
fs
sub
and
out
lods
ret
pop
lret
sub
inc
add
adc
jae
cmp
mov
test
jge
popf
orl
cmpsl
xchg
cmp
aad
mov
adc
test
mov
outsb
mov
rolb
and
mov
aaa
mov
addr16
or
sub
dec
mov
lret
stos
mov
inc
test
das
or
or
and
aas
outsb
lea
xor
cmpsb
sub
mov
adc
or
fwait
iret
add
shll
xchg
or
sub
jno
push
xchg
jmp
andb
mov
xchg
jge
inc
fildl
movsb
pop
mov
sbb
xchg
stc
and
mov
loopne
and
sub
aas
mov
pushf
outsl
adc
nop
pop
scas
mov
jae
mov
fs
and
mov
xor
or
insb
xchg
adc
pop
in
xor
aas
bound
sub
shrl
mov
inc
inc
lods
mov
je
pop
add
jns
push
add
test
cld
sbb
jo
pop
stos
cld
loopne
or
cmpsl
inc
int
stos
dec
popf
mov
mov
mov
aaa
xor
gs
fiaddl
aam
sbbb
mov
enter
jb
inc
insb
jl
lcall
xchg
mov
sub
out
int
loop
or
pop
and
xor
jb
xchg
aam
ljmp
negb
pop
mov
loopne
xchg
stc
mov
addr16
notl
gs
push
data16
fdiv
cmp
push
fbstp
adc
cmpsl
push
add
mov
mov
dec
mov
hlt
cmp
test
adc
dec
lock
dec
mov
data16
test
sbb
outsl
mov
jmp
push
in
gs
cmc
outsl
out
ja
adc
xor
fiaddl
mov
in
rcll
int
js
jle
sahf
inc
lods
ds
aaa
shll
cltd
inc
sti
loop
jb
loope
imul
cmp
xchg
int3
outsb
cmpsl
rolb
mov
push
dec
fildl
mov
loopne
or
cmp
pop
push
insb
mov
movsl
add
pop
sub
into
xor
out
pop
into
ss
cltd
mulb
std
or
in
xchg
test
cmc
outsb
sub
shlb
mov
js
or
sub
ja
adc
add
insl
aad
jg
jmp
cmp
iret
shrb
pusha
cmp
ljmp
or
aad
sbb
in
stos
repnz
jl
fildll
lcall
adc
or
push
mov
iret
ret
push
push
mov
mov
or
pop
rcrb
jge
decl
push
xchg
stc
iret
xlat
stos
and
loop
fmull
mov
xor
dec
mov
adc
jae
mov
stc
je
punpckldq
fldl
fdivr
or
test
lea
jnp
scas
sub
lahf
cltd
adc
cmpsb
es
mov
outsl
sub
pop
xchg
mov
push
popa
lds
dec
adc
mov
shll
and
std
out
or
and
sarb
aad
aad
jne
pop
data16
ret
inc
mov
xchg
mov
xor
ljmp
shlb
dec
pop
mov
ret
call
rolb
cwtl
adc
mov
push
mull
iret
mov
lea
mov
pop
in
dec
jnp
mov
push
fcmovb
mov
outsl
inc
mov
sahf
inc
bound
pop
movsl
sbb
jle
data16
push
fsubrp
je
mov
cli
in
pop
adc
popf
int3
aaa
adc
icebp
jnp
leave
xor
mov
cld
icebp
and
xchg
rcll
xor
lods
mov
inc
shr
ja
insl
pop
jg
jb
jae
test
mov
ja
jns
xchg
push
js
xor
insb
shrl
rcrb
out
push
pop
xlat
mov
mov
arpl
into
push
add
enter
mov
imull
push
rorl
loop
sbb
jecxz
pop
outsl
push
mov
jns
pop
jbe
pop
sbbl
orb
mov
pusha
sub
sub
jmp
rorb
lret
jg
mov
cmpsb
stos
arpl
mov
scas
loop
sbb
push
enter
inc
jne
int
in
sub
push
pop
add
mov
in
leave
or
sub
or
jmp
dec
int3
test
mov
js
insb
call
les
popf
fwait
ret
scas
mov
dec
cs
pop
push
cli
inc
in
xchg
cmp
out
adc
jp
or
int3
arpl
es
pop
scas
popf
addr16
push
jecxz
adc
fisttps
xor
imul
fldl
stos
or
ljmp
cmp
dec
and
fucomp
test
mov
dec
sub
fcomi
mov
add
mov
push
pop
xchg
mov
div
cmc
or
xor
xchg
pop
out
jnp
mov
xlat
leave
lahf
pop
fnstsw
loope,pn
es
das
adc
lea
mov
fistpl
pop
je
xor
andps
cs
xchg
jbe
mov
loopne
jae
clc
add
mov
lahf
jmp
shll
mov
dec
lea
or
add
call
popa
fsubrs
fcomps
out
stc
or
fnop
lcall
and
cwtl
sub
shr
dec
arpl
mov
stos
pusha
jb
pop
mov
xor
pop
enter
push
lret
pop
out
fnsave
pop
les
and
adc
pop
lods
addr16
movsb
lret
dec
adc
pushf
inc
mov
mov
adc
mov
test
xor
or
lea
int
pop
push
inc
jecxz
add
cld
lcall
movsl
cmp
leave
mov
pop
or
mov
inc
xor
mov
mov
mov
mov
flds
dec
sti
stc
push
shrl
sbb
out
mov
xchg
or
inc
inc
std
into
ja
movzbl
sbb
mov
jb
stos
das
iret
fwait
in
xor
sub
and
sarl
dec
inc
mov
jne
into
cs
test
ja
pushf
in
loop
idiv
push
pop
aaa
sbb
fs
xor
mov
xchg
std
cmp
sub
movsl
and
add
add
jne
aaa
xlat
cmpsb
out
xor
xor
mov
fstl
and
jb
push
data16
jge
xor
jbe
mov
cmp
jg
xor
loopne
sub
btc
ljmp
aas
jbe
mov
push
inc
adc
je
or
push
pushf
and
jo
cmc
push
jmp
sbb
sub
sbb
cmova
out
in
fsubrl
cltd
xchg
leave
dec
enter
add
ret
mov
cli
inc
stc
imul
mov
pop
pop
lods
add
mov
aas
adc
out
and
es
ret
in
mov
mov
and
adc
insl
add
mov
into
inc
sar
cld
push
fs
cmp
inc
cwtl
mov
jle
insb
out
ret
mov
aam
data16
sbbl
push
xor
pusha
push
dec
aas
sbb
add
pop
mov
cmp
iret
adc
movsb
lret
xchg
dec
insb
bnd
out
push
hlt
pusha
jl
mov
rclb
sub
loop
stos
fisttpl
adc
mov
jno
fmul
lahf
sub
bound
fadds
and
push
mov
sub
xor
push
push
popf
or
into
push
mov
in
outsl
push
call
jnp
cli
jecxz
icebp
adc
shlb
jo
jp
cmp
xchg
lods
jmp
inc
xor
inc
test
aaa
or
je
in
xor
clc
movsb
adc
push
outsb
inc
std
mov
lds
xchg
jne
xchg
std
in
inc
add
sub
iret
push
outsl
push
cs
add
int
push
out
jl
jne
push
idivb
push
gs
dec
lea
cmp
adc
xchg
pop
rcll
loope
jnp
shlb
mov
leave
and
into
or
jp
data16
or
int
lret
lea
insl
test
rorb
mov
push
inc
movsl
and
insl
cmc
lods
push
sahf
dec
les
fisubl
add
inc
fidivl
add
push
cmp
adc
xchg
or
inc
loopne
dec
nop
sbb
dec
xchg
stos
push
adc
adc
jle
push
out
dec
mov
int
rcrb
inc
mov
push
add
sub
pop
sbb
mov
mov
xchg
xor
inc
insl
jne
addr16
pop
pop
pop
add
xor
popf
cmp
gs
fstl
sbbl
add
cmp
pop
jbe
scas
dec
mov
in
pop
xor
shlb
and
int3
mov
lods
outsl
shlb
dec
xchg
inc
ret
adc
insl
mov
dec
adcl
mov
lcall
mov
sbb
ss
mov
lods
fidivrl
mov
sub
pop
dec
push
mov
lea
jmp
sbb
cmp
mov
test
jp
xchg
sub
sbb
push
loopne
lods
shr
movsl
xor
orl
add
adc
out
mov
xchg
or
insl
ficomps
in
cmp
xchg
jmp
into
dec
in
jns
cltd
xchg
or
pop
fsubrs
lret
or
pop
adc
lds
fbld
and
fisubl
orl
not
mov
dec
push
inc
or
pop
inc
fidivs
push
sub
mov
fs
shll
test
clc
push
mov
and
js
ror
clc
hlt
add
in
das
xchg
jecxz
js
int
xchg
push
bound
es
sub
jae
xchg
push
xchg
scas
frstor
cmp
and
shl
addr16
cli
fnstenv
js
or
jecxz
pop
imul
or
mov
cltd
ljmp
and
pop
jmp
lock
xchg
jnp
sbbb
loop,pt
inc
loopne
cmc
push
in
fstl
sbb
push
arpl
mov
sbbl
push
mov
inc
jmp
mov
push
inc
sub
cmp
dec
sahf
jnp
adc
ja
imul
push
aad
push
or
inc
and
jp
es
pop
mov
lahf
adc
pop
fistpl
dec
or
pushl
fs
lds
addr16
das
sbb
sub
ja
mov
jns
adc
mov
into
sbbb
std
add
mov
sbb
dec
rcrb
sbb
inc
and
fnsave
enter
lahf
xchg
pop
push
cmp
out
inc
jmp
push
cld
or
rol
outsb
inc
xor
jne
mov
int
mov
hlt
pop
pop
xor
jno
cmp
pop
mov
xchg
push
sti
call
repz
xchg
call
iret
enter
lock
sbb
jecxz
jne
cmp
mov
add
aam
adcl
fadds
inc
aas
js
imul
pop
cmp
mov
xchg
pop
add
sbb
jmp
dec
and
imul
sbb
jg
sub
jb
xchg
gs
and
mov
daa
adc
lret
mov
or
shlb
push
loopne
dec
out
mov
mov
or
or
cld
adc
mov
fadds
adc
ljmp
nop
jg
jns
lcall
and
dec
lock
cwtl
cld
loope
dec
lods
ja
pop
pop
or
rorb
shll
inc
jbe
jle
lret
jns
imul
fmull
inc
sti
jmp
das
mov
aaa
lock
and
cltd
push
pop
jb
outsb
and
lret
or
or
insb
add
cmp
cli
push
mov
test
pop
aam
inc
mov
or
les
sub
sbb
lahf
sub
stos
fldl
inc
dec
sahf
sub
jge
add
sbb
adc
test
or
imul
adc
leave
inc
mov
test
hlt
clc
push
popf
sbb
loope
adc
xor
je
dec
mov
stos
jae
push
mov
or
fwait
pop
repz
sahf
pop
pop
sbbb
lock
cmc
jae
inc
pop
daa
pop
mov
rcrl
xorl
mov
or
ss
icebp
inc
loop
jl
mov
pop
xor
rcrl
fsubrp
rorl
mov
and
sar
inc
jle
dec
mov
mov
in
cmpl
out
push
outsb
pop
xchg
fwait
out
andb
sub
lea
stos
or
or
dec
push
pusha
mulb
adc
push
jns
sub
push
pop
cmpsl
repnz
cmp
jbe
dec
mov
test
xchg
outsl
push
repz
daa
mov
out
sub
mov
pop
icebp
xchg
and
jmp
popf
mov
shl
testb
mov
ss
inc
jg
xlat
mov
das
out
lods
divl
xor
dec
gs
sbb
push
ds
scas
scas
xchg
dec
std
cmp
cmp
adc
or
shl
fstpl
dec
xchg
jg
xchg
scas
enter
lret
in
je
sub
jmp
fimull
pop
das
mov
ds
jne
jmp
jno
stc
imulb
mov
sub
add
mov
mov
insl
sarl
out
cltd
shrb
pop
lods
sub
inc
pushf
loop
int3
les
and
stc
pop
fistps
mov
cs
xor
sahf
das
nop
dec
pop
movsl
hlt
dec
inc
sub
cli
insb
shrb
shll
sti
or
pushl
shlb
push
dec
add
xchg
push
pop
es
test
dec
out
imul
lret
mov
cmp
mov
call
mov
ljmp
adc
fstpl
dec
imul
inc
mov
testb
mov
xchg
push
cli
add
inc
xor
notl
jecxz
pop
pop
ljmp
hlt
adcb
and
sets
aam
aam
dec
out
sub
jl
sbb
sahf
je
add
in
xchg
lds
out
mov
leave
in
inc
cld
fnstcw
dec
cmp
in
orb
inc
addr16
ss
xor
bound
mov
sarb
ljmp
fildl
insl
mov
adc
daa
adc
push
jnp
in
xor
jnp
clc
cmp
fsubrl
test
jns
push
minps
sbb
in
xor
and
inc
ud1
jge
lods
aaa
pop
push
xchg
inc
je
cltd
push
dec
ja
and
jmp
jl
dec
xchg
gs
test
in
in
mov
xchg
negb
cli
sub
scas
jo
lds
loope
sub
cwtl
cmp
and
sub
xchg
rol
mov
jo
add
std
repnz
add
gs
out
sbb
ljmp
out
inc
jb
mov
sahf
rclb
int3
cmpsb
and
aam
lahf
or
jmp
xchg
fsubl
mov
aaa
push
inc
fisubrs
arpl
shr
xchg
cmp
call
ds
int
push
add
test
mov
loope
out
push
push
cmpsl
rsm
repz
je
fidivl
pop
xchg
jmp
stc
aaa
movsb
dec
mov
jmp
add
xchg
lock
sbb
subb
mov
enter
out
cmp
pop
daa
or
stos
ljmp
sub
imul
scas
outsl
out
mov
dec
outsl
sub
mov
fs
loop
pop
sub
inc
mov
or
imul
xor
test
adc
test
pop
adc
leave
sub
sbb
sarl
sbb
push
add
jp
nop
cmp
cmp
imul
incl
iret
pop
push
test
enter
shrl
sub
adc
adc
jns
stos
mov
test
das
das
cmp
push
adc
dec
mov
call
and
divb
std
mov
mov
jp
pusha
in
jne
out
outsb
imull
insb
xchg
adc
xchg
pop
pop
call
jne
out
cmp
cmpb
jl
xchg
sarb
jle
mov
adc
push
mov
jl
ja
adcl
mov
inc
orps
xor
xchg
ret
inc
dec
dec
sbb
adc
repz
jno
arpl
imul
data16
ja
sbb
pop
stos
pusha
pop
out
jecxz
mov
imul
ds
std
aad
int
xchg
mov
xorb
les
rorb
ror
dec
fs
aas
inc
push
mov
pop
das
loope
dec
add
cmp
mov
das
cld
adc
ret
adc
push
cmp
jbe
rep
inc
adc
ljmp
sub
pop
adc
fnsave
push
push
insl
and
fstpl
test
aam
sub
call
xchg
lea
dec
icebp
stos
jns
push
icebp
mov
scas
les
push
sub
ds
mov
mov
cli
or
or
sub
pop
lahf
xchg
push
pop
pop
iret
or
push
mov
mov
cmp
cmpl
into
adc
lahf
xor
sub
and
iret
dec
cmpsl
pop
aad
aas
mov
add
jmp
loope
jo
push
mov
shlb
test
sub
cmpsb
call
sbb
or
pusha
movsl
mov
mov
mov
lret
rcll
mov
adc
inc
push
cmpsb
subl
lcall
dec
mov
mov
add
adc
jecxz
repz
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
repz
xor
and
jae
arpl
jae
inc
mov
mov
add
adc
jecxz
repz
xor
and
jae
arpl
jno
inc
mov
cmpsl
and
xor
jae
sbb
in
or
imul
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
push
adc
popa
int3
jno
and
jo
add
adc
pop
rorl
test
sbb
or
hlt
inc
in
push
fsubl
jno
add
sub
insb
shll
dec
icebp
cmp
dec
xchg
sbb
or
es
xchg
pop
sti
or
lods
xor
pop
mov
je
jl
add
cmp
jo
imul
aad
add
mov
call
dec
dec
outsl
cs
mov
imul
in
inc
mov
adc
lcall
xchg
sub
mov
sub
or
cmp
in
fucomp
call
rclb
ret
jb
insl
out
jne
jbe
inc
xchg
push
mov
adc
mov
push
mov
mov
cs
pop
repz
xchg
adc
xor
adc
loopne
int
loop
xchg
jmp
test
cmp
mov
imul
test
dec
fwait
mov
dec
sbb
iret
int
jno
adc
call
mov
test
push
int
mov
push
ds
or
fnstcw
in
jbe
subb
push
movb
aad
fdivr
pop
fs
fwait
adc
sbb
lock
incl
inc
mov
and
dec
into
dec
xchg
imul
fbstp
stc
dec
lods
adc
insb
rcrl
icebp
cmp
sub
sbb
or
cld
inc
in
push
fsubl
jno
add
jl
insb
rcrl
icebp
cmp
sub
sbb
or
cld
inc
sub
je
xchg
lahf
lock
sbb
mov
push
aas
mov
stos
jnp
xchg
gs
mov
idivb
push
movsl
push
cmp
in
cwtl
hlt
mov
sub
out
jl
adc
mov
fcomip
lods
push
adc
das
cli
add
sbb
je
xor
push
sbb
loop
outsb
lods
cs
mov
dec
mov
cmp
and
sbb
mov
mov
pop
cmp
jmp
dec
cmc
cmp
pusha
imul
movsb
sub
mov
rclb
or
test
movl
ds
incl
push
movsb
in
pop
pop
rol
dec
mov
test
pop
mov
inc
or
xchg
dec
jge
test
jb
pop
cmp
ss
push
push
out
in
pop
mov
jge
fisubs
out
inc
out
aaa
pop
mov
sbb
or
stc
sbb
repnz
ja
and
cmp
outsb
inc
mov
jns
mov
mov
sub
jp
scas
push
mov
nop
or
sbb
fdivrs
cwtl
or
clc
xchg
aas
mov
jno
enter
or
iret
pop
jge
mov
fnstsw
lds
push
xorb
sbb
aad
out
push
cmpsb
mov
aas
leave
xchg
imul
mov
cmpl
in
push
repnz
bound
or
out
pop
xlat
fmull
mov
sub
pop
loope
das
ljmp
out
jl
cmp
dec
push
push
insl
test
aas
xor
fisttpl
sub
es
adc
mov
add
lahf
ss
rcr
jo
cltd
out
sbb
out
in
xchg
imul
cmp
rcr
shl
fwait
sub
adc
test
mov
xchg
mov
xchg
pop
push
xor
imul
push
movsl
inc
push
call
dec
sub
test
dec
sub
mov
pop
or
add
sub
jl
into
xchg
jg
imul
jg
pop
pop
dec
lods
scas
adc
mov
sti
ljmp
mov
bnd
lock
adc
xchg
pusha
ret
outsb
cmc
imul
enter
pop
dec
loopne
js
sub
mov
sub
fsubs
aaa
incb
cmpsl
aad
xchg
js
outsb
decb
pop
dec
push
ret
adc
outsl
scas
shll
cmp
in
jmp
mov
fisttps
jae
dec
movsl
sub
ds
pop
pop
ret
adc
mov
cmpsl
ljmp
push
mov
push
ds
ljmp
mov
xchg
aam
dec
jecxz
push
jmp
js
or
arpl
jg
mov
cmc
mov
leave
or
outsl
pop
imul
mov
xor
jl
or
js
or
mov
stos
xchg
pop
cwtl
mov
cmpsb
pop
pop
cmp
push
inc
fwait
pop
adc
movsl
and
xlat
xor
xor
cli
cmp
das
add
hlt
xchg
bound
jb
or
pop
and
mov
movsb
fs
call
dec
popf
lahf
fdiv
jno
ss
idiv
idivb
cmpl
pop
cld
in
aaa
cmp
xor
mov
adc
or
daa
cmp
inc
jae
stc
rorb
mov
sub
scas
scas
outsb
scas
adc
jbe
sarl
sbb
int
addr16
push
pop
imul
add
mov
movsl
dec
cld
mov
test
cmc
aaa
adc
mov
fstps
cmp
and
fmuls
and
jb
lret
lods
pop
ljmp
test
or
bound
push
add
and
ret
jo
cmp
xor
push
sub
push
or
mov
scas
daa
cltd
mov
repz
in
inc
inc
enter
scas
lret
aas
or
mov
dec
stos
pop
add
adc
test
add
mov
adc
sarl
stc
adc
mov
lret
popa
jle
push
jl
jg
mov
sbb
mov
add
into
pusha
loope
push
mov
ss
cmp
lods
push
sub
jle
adcl
adcl
lods
outsl
dec
adc
xchg
xchg
out
push
add
xor
fsubr
fsubp
pop
inc
jne
enter
sets
mov
call
in
bound
andl
addr16
js
xchg
icebp
mov
cwtl
pushf
fimuls
loope
ss
xor
imul
rorb
xor
dec
orb
ljmp
mov
inc
dec
lret
xchg
adc
lret
dec
or
fmul
sbb
pop
fstl
lret
pop
rorl
push
mov
int3
sub
and
lock
adc
adc
out
movsl
pop
pshufw
mov
cmc
add
sbb
dec
dec
add
and
call
scas
imul
cmp
inc
mov
iret
cli
cmp
jno
xchg
call
mov
lock
jo
mov
sbb
push
loop
pop
nop
pop
lods
fisttps
add
cmpsl
push
loopne
mov
pop
mov
and
jmp
push
or
leave
xor
push
inc
xchg
pop
pop
les
inc
test
jo
jnp
call
jae
push
dec
inc
in
cmp
pop
mov
stc
fwait
adc
push
cwtl
nop
jmp
repnz
int3
xchg
stc
cmp
imul
or
sub
mov
and
add
out
xchg
fwait
or
outsl
dec
dec
in
out
xor
out
bound
aas
les
rolb
movswl
pop
xlat
lret
fdivr
sbb
and
in
dec
cli
cmp
xor
jb
lods
push
jno
in
cmp
xor
es
call
mov
dec
lods
push
out
jmp
mov
sbb
cmp
fdivs
cld
mov
dec
xchg
xor
shll
dec
xchg
adc
addr16
test
das
je
sbb
pop
sahf
xchg
or
cmc
int3
int
ds
or
addr16
or
adc
sub
inc
imul
xorl
dec
test
jle
mov
pop
push
movsl
addr16
push
mov
cli
add
push
inc
mov
pop
inc
add
jae
pop
or
outsl
loopne
push
test
cmpsl
das
je
aam
push
stc
je
adc
ret
mov
jns
sbb
cmp
add
dec
sbb
and
ret
inc
out
inc
or
pop
lcall
es
inc
dec
clc
add
in
arpl
mov
fldenv
outsb
rcrb
xchg
adc
cmp
lea
jbe
lcall
sbb
xlat
pop
jecxz
sbb
dec
lods
fsubr
lahf
jmp
pop
ljmp
pusha
inc
data16
inc
mov
ret
jmp
xchg
xchg
adc
xor
push
test
and
xbegin
jb
push
add
mov
clc
push
cmp
orl
pop
shl
imul
mov
lods
fdecstp
daa
cmp
nop
mov
fcoml
mov
push
mov
in
rcll
ror
and
sar
and
sarb
or
icebp
je
adc
jnp
cs
popa
or
jb
cld
pop
push
mov
pop
cmp
mov
mov
xor
xor
push
fwait
dec
daa
cmp
ret
pop
nop
push
mov
dec
inc
and
push
add
fld
pop
movsl
mov
push
mov
pop
cwtl
adc
add
or
das
xchg
dec
stc
jg
in
pop
in
mov
add
or
adc
std
mov
pop
push
out
movsb
dec
outsl
add
adc
or
and
std
shll
adc
loop
jl
pop
pop
xchg
divb
cli
pop
test
adc
cmp
cs
fcoms
cmp
outsl
mov
addr16
mov
adc
repz
jnp
and
testl
pop
jg
std
cli
enter
or
push
shrb
inc
leave
push
ss
xlat
fs
orb
in
pop
xor
cli
fcoml
cwtl
cli
add
adc
or
adc
sahf
nop
or
in
add
and
fldcw
mov
aam
xchg
imul
out
fmull
mov
leave
add
jmp
push
stos
dec
push
jb
push
jns
cmpl
pop
in
sbb
inc
movsb
and
in
lods
pop
mov
sbb
ss
pop
clc
sub
jg
jl
les
sarl
shll
xorl
seta
scas
scas
test
inc
into
xor
pop
mov
adc
or
imul
js
sti
jnp
or
xchg
sarb
mov
cmpsl
jl
test
add
stc
pop
movsl
insl
pop
mov
fildll
lahf
fwait
outsb
fwait
mov
arpl
fcompl
sti
jae
in
mov
and
mov
rcrl
xchg
arpl
imul
xor
jg
push
jne
cmpsb
outsl
jl
mov
dec
xor
push
xor
scas
roll
fcomps
dec
dec
subl
pop
fmull
sbb
sbb
inc
push
mov
sbb
test
jl
xor
mov
xchg
push
sub
sub
in
sbb
add
mov
add
std
repnz
mov
outsl
ss
lods
jmp
fcomi
and
nop
mov
push
jge
jo
add
and
mov
rcr
mov
fyl2x
rcrb
sahf
mov
xor
popf
loope
call
sbb
pop
xlat
cmovl
mov
leave
cmp
jecxz
mov
insb
pop
hlt
jge
frstor
fidivs
negb
mov
data16
mov
sbb
data16
jns
xorb
sarb
inc
lret
std
mov
sub
fcmovb
pop
test
jno
pop
je
mov
push
mov
sahf
fsubrl
jns
jne
mov
addb
pop
add
xlat
xchg
jns
dec
fiaddl
aaa
mov
fnstsw
xor
xor
out
popa
and
or
mov
xor
pmaxub
add
movsb
cmpsl
jp
adc
xchg
or
push
inc
xchg
push
shll
mov
jmp
imul
pop
mov
xchg
xor
jle
loope
cltd
enter
cltd
mov
cltd
adc
inc
jbe
imul
call
nop
xor
xor
outsl
jle
lds
sub
jg
bound
mov
cmp
pop
jnp
in
and
mov
test
cltd
repz
std
push
lods
aam
cwtl
adc
popf
cs
dec
cltd
movsl
or
test
adc
cmp
cwtl
cmp
mov
int3
push
out
lods
push
negb
sbb
stos
inc
int3
inc
sub
cmp
int
add
mov
pop
mov
cmp
push
lret
push
jo
push
fwait
repnz
push
push
push
stos
dec
xchg
roll
cli
inc
into
out
in
pop
cmpsl
jmp
arpl
lock
push
test
cmp
pop
addb
xsavec
movsb
cmc
xchg
dec
add
ret
movsl
and
addr16
push
js
sbb
sub
or
push
fs
jae
fcmovnu
jmp
sub
pop
aam
lret
push
xchg
adc
mov
mov
stos
aam
adc
xor
test
jl
scas
xchg
mov
sbb
or
and
xor
pop
mov
pop
into
adc
push
pop
mov
cld
xor
inc
out
fucomp
outsb
inc
sub
fidivl
lahf
test
push
pop
jbe
xchg
cmp
and
jbe
mov
sti
and
cmp
loope
ja
push
aas
out
or
pop
loopne
iret
sub
jl
jp
testb
push
sub
push
rclb
mov
and
hlt
mov
es
pusha
inc
imul
inc
std
xor
jo
lret
jg
mov
out
xor
mov
mov
push
jmp
sbb
inc
fdivs
aaa
ficomps
xchg
in
mov
icebp
cli
add
inc
xchg
cli
leave
lahf
dec
push
gs
into
mov
imul
push
cli
stos
sbb
and
clc
and
movsl
ja
stos
dec
shll
pop
pop
daa
aam
rclb
adc
xchg
inc
or
nop
mov
sarl
mov
pop
inc
mov
test
cmpsl
mov
call
mov
xor
stos
inc
add
mov
int
je
mov
test
bound
lret
push
jg
mov
sub
push
pop
xor
incb
inc
push
stc
inc
or
or
pop
es
aas
or
pop
fwait
add
insb
jb
cwtl
movlhps
mov
push
jo
sahf
and
jp
arpl
test
mov
popf
clc
mov
push
fcompl
xchg
xor
loope
out
mov
sbb
push
jge
stos
push
sahf
gs
in
mov
stos
push
popf
xor
xor
rcrb
push
adc
movl
cmp
xor
lods
push
push
adc
scas
mov
lock
mov
pop
xor
or
outsl
mov
rcl
and
mov
loopew
mov
imul
pop
push
notl
in
adc
or
sub
aaa
shll
push
cmc
call
pop
dec
in
xor
pop
jb
xchg
movsl
pusha
and
inc
insb
mov
jmp
pop
int3
add
das
imull
ret
outsl
jne
movsb
mov
fisttps
pop
inc
pushf
sbb
push
sbb
sub
adc
fdivp
jno
int3
mov
mov
rorb
clc
xor
testb
jno
push
sahf
inc
inc
fstps
into
hlt
inc
in
and
inc
xor
xchg
test
lock
daa
ret
fdivrp
push
or
lret
jno
ss
in
loop
cmp
dec
push
enter
clc
xor
and
cmp
out
jecxz
xchg
sbb
fisttps
clc
dec
lock
arpl
lods
xlat
scas
sarl
mov
add
inc
inc
faddl
fists
and
fistpll
xchg
int
add
xchg
shlb
or
jle
hlt
clc
jns
test
imull
fwait
nop
mov
lret
dec
xchg
icebp
mov
out
in
add
mov
loope
scas
jb
fsts
sub
nop
and
aas
mov
inc
sub
jmp
jb
lret
xchg
std
iret
adc
leave
fs
sbb
cmp
lahf
or
mov
jbe
inc
pop
dec
popa
dec
jmp
dec
mov
inc
pop
loopne
clc
movsl
lods
ds
ljmp
adc
les
pusha
jl
cmp
mov
insb
lahf
sbb
push
fcoms
es
mov
pop
out
inc
pop
push
add
ja
cld
enter
cli
neg
sub
jp
or
jo
cmpsl
fsubs
add
pop
xor
fisubs
out
push
imul
dec
fwait
into
cltd
scas
adc
add
outsl
cmpsb
outsl
sub
incl
mov
popf
add
dec
je
test
das
and
mov
andb
fiadds
pop
imul
mov
ret
ljmp
push
mov
pusha
fnstcw
outsl
aad
pop
xor
mov
fnstenv
dec
in
lea
xchg
mov
int3
pop
and
outsl
loope
es
ja
movsl
push
mov
mulb
div
cmpsl
fst
xchg
push
xor
sub
or
in
adc
cmc
out
jb
ror
cmp
inc
pushf
dec
xchg
dec
adc
mov
pushw
adc
mov
enter
sarb
jae
cltd
fcomp
adc
adcb
jne
mov
pop
mov
xorl
subb
std
push
adc
jbe
push
loop
jae
jmp
andb
cwtl
addr16
dec
jmp
mov
adc
inc
fimull
jge
pop
int
inc
and
popf
and
test
sub
orb
pop
mov
mov
cmp
dec
and
ds
pop
cmp
dec
ret
jb
fistpll
hlt
leave
push
pop
mov
dec
and
cmp
aam
lock
int3
fsubp
cmp
lods
out
xor
imul
jb
or
cmpsb
mov
loopne
mov
adc
and
call
mov
sub
in
mov
cmp
out
mov
mov
imul
pop
imul
ds
int3
jecxz
sbb
xlat
inc
loop
mov
push
push
sbb
push
jmp
push
pop
mov
scas
jb
fld
mov
inc
jecxz
bound
add
xorb
adc
push
ds
mov
ret
cvtpi2ps
rcrb
pop
add
mov
or
or
mov
jp
sbb
xchg
pop
sti
movsl
int
daa
add
inc
and
fcoms
test
ret
push
pop
jb
imul
adc
and
adc
fsub
jo
pop
push
and
popf
ljmp
fldenv
push
fists
inc
insb
or
popf
push
fwait
imul
lret
pusha
mov
xor
xor
mov
pusha
loopne
test
inc
movsl
ds
adc
movsb
inc
and
into
lea
adc
orl
popf
ret
push
dec
addr16
jae
lret
or
sub
aad
divl
inc
dec
stc
stos
mov
sti
fdivrl
or
fdivl
jb
arpl
xchg
ljmp
sarl
sub
xor
push
pop
sbb
sub
pop
mov
lods
pop
ret
mov
jg
popf
enter
sub
movb
aad
rcrl
fst
negl
or
stos
mov
test
sub
xlat
pushf
sbb
inc
cmp
imul
faddl
xchg
pop
scas
push
dec
fiaddl
loopne
pop
mov
andl
jo
sbb
jnp
jecxz
mov
ret
addl
ret
inc
out
test
rclb
test
sub
and
xchg
lahf
inc
fsubs
mov
inc
push
cmp
xchg
or
repz
push
cmp
rcrb
jg
pop
mov
pop
push
push
lods
mov
cli
sub
jo
push
xlat
rorb
sub
jl
or
pop
push
push
or
push
inc
sbb
decb
mov
testl
lds
jbe
pop
jl
or
and
inc
push
jl
inc
inc
and
mov
aad
icebp
xchg
test
popf
cwtl
nop
sbb
enter
je
cmp
pop
xchg
lret
xor
push
add
dec
cs
lea
pushf
aam
pusha
push
xor
dec
js
sub
jp
sbb
jb
int
adc
push
inc
sbb
inc
inc
iret
imul
test
xor
push
ficoml
pusha
push
xor
ds
xlat
push
rcr
ljmp
or
loopne
clc
mov
xchg
repnz
jmp
test
aas
mov
cmp
mov
push
add
xlat
hlt
mov
ret
adcl
loope
mov
pusha
xchg
not
adc
mov
adc
jg
rclb
and
mov
and
shlb
adc
lock
mov
mov
fbld
jge
and
pop
sub
in
repnz
ret
shl
jno
cmp
xchg
loopne
cmp
sub
hlt
scas
dec
push
or
cmp
idivb
add
mov
in
decb
xlat
outsl
pop
rcrb
fildll
gs
imul
inc
cmc
outsb
or
push
push
arpl
mov
or
adc
in
cmp
arpl
xchg
sbb
mov
or
mov
pop
add
mov
sbb
ja
pop
ljmp
scas
mov
xor
nop
bound
mov
popa
and
cmp
repnz
ret
popaw
imul
fisubs
loopne
inc
jae
ja
or
ljmp
inc
divl
int
add
icebp
jge
pop
xlat
pop
xlat
inc
and
cmp
hlt
pop
pop
sbb
in
mov
cmp
mov
hlt
repnz
xchg
lods
hlt
addr16
mov
cmp
dec
push
mov
push
or
jmp
out
into
fistpll
fldt
push
xchg
repz
testb
dec
jp
cmc
inc
cli
rorb
jbe
cmpl
mov
icebp
dec
jl
out
inc
xchg
inc
xor
mov
movsl
loop
lods
and
fwait
js
push
sbb
mov
and
pop
loope
icebp
cmp
sub
sbb
or
cld
inc
in
push
fsubl
jno
add
jl
insb
rcrl
icebp
cmp
sub
sbb
or
cld
inc
out
pop
int3
jns
jne
add
xor
insb
aad
loope
clc
cmp
xor
push
in
shlb
add
jl
xchg
jnp
loope
xchg
movsb
jmp
nop
cmc
ljmp
mov
pop
gs
xor
cmp
fcmovbe
cli
lds
xchg
mov
gs
push
mov
and
shl
ret
in
aad
lds
xchg
lods
test
push
inc
push
daa
push
and
popa
push
jb
jnp
jbe
xchg
lods
cmpsb
mov
data16
mov
mov
cmp
and
push
insl
ljmp
and
jae
addl
lcall
dec
in
adc
mov
mov
mov
call
cmc
and
adcb
rorl
jno
scas
push
movsb
inc
mov
lcall
dec
fldt
roll
andl
sub
ljmp
sub
jp
mov
adc
fisubrl
lds
aaa
mov
insl
dec
popf
xchg
shlb
jnp
lret
jbe
adc
ljmp
movsl
stos
xchg
mov
gs
arpl
xor
and
mov
test
ds
sbb
adc
data16
inc
dec
insb
pop
dec
lret
orb
hlt
jmp
dec
ds
sbb
push
mov
pop
imul
mov
lods
cmpsl
cli
mov
stos
xchg
mov
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
jp
or
cmp
mov
xchg
pop
movsl
shll
fs
sub
xchg
adc
stos
cmpsl
daa
scas
xchg
add
insl
imul
scas
cmpsl
pop
lret
xchg
pop
inc
lret
push
pop
jo
push
enter
xor
and
sub
adc
aam
xchg
clc
mov
dec
aad
cmp
call
adc
push
sub
call
pop
incb
lock
lcall
add
mov
das
fs
inc
xchg
cmpsl
xor
xor
push
and
cmpsl
pop
std
xchg
fcompl
mov
fdivl
add
mov
je
jbe
negl
std
insb
andl
dec
fcmovnbe
inc
pop
sub
sbb
test
inc
data16
add
jp
enter
xor
push
push
push
and
xorb
pop
dec
clc
adc
daa
add
xor
push
jmp
lds
cwtl
mov
das
cmp
fisubs
mov
fimull
push
stos
sbb
add
out
arpl
shlb
jmp
aam
mov
dec
scas
fs
adc
jecxz
and
cmp
inc
lds
sbb
sbb
sahf
sbb
add
aaa
int3
ret
pop
fmul
adc
sub
xchg
ret
std
cs
xchg
sahf
jecxz
push
push
lret
jbe
clc
outsl
push
ljmp
ret
mov
in
push
cli
sbb
test
iret
lods
pop
ss
shll
cmpsb
cmpsb
fiaddl
jecxz
add
mov
js
lcall
es
adc
ds
xor
shll
dec
push
aaa
stc
je
sbb
aaa
push
mov
mov
in
stc
fldl
negl
cld
test
push
or
addl
js
dec
jecxz
fisubrs
lods
inc
enter
mov
pop
pop
push
jge
pop
mov
inc
sbb
xchg
lods
je
inc
push
mov
lret
pop
aas
mov
jo
test
jge
inc
jbe
in
xor
hlt
clc
mov
lret
push
sarb
or
das
add
test
fdivrs
ss
pop
stc
or
scas
imul
pop
aam
mov
and
pop
adc
aaa
xchg
repnz
add
dec
cmp
pop
dec
jnp
lret
or
xlat
enter
xchg
cmp
fisttpll
jecxz
mov
sbb
data16
mov
sub
dec
lret
outsb
jl
stos
cmp
loope
dec
das
out
ds
in
aas
lock
js
das
inc
and
in
into
push
clc
and
ret
adcb
arpl
arpl
mov
mov
push
ja
xlat
xor
pop
cltd
outsb
mov
xchg
inc
mov
push
xor
cmp
inc
rcrb
test
mov
test
add
mov
mov
insb
adc
xchg
rorb
push
aas
sbb
lea
lods
ds
jecxz
fisubrs
pop
sub
movsb
nop
je
daa
sahf
cltd
jb
mov
aaa
daa
xor
xchg
push
mov
cmp
lea
mov
insl
int3
out
inc
inc
cmp
pop
cld
cmp
out
sub
clc
stc
addr16
sub
or
and
inc
sub
pop
sub
mov
adc
adc
lret
or
cld
lahf
popf
mov
fidivrl
or
mov
or
inc
mov
clc
inc
add
sub
lods
aad
sbb
xchg
out
add
add
adc
cld
dec
jne
sub
mov
imul
lock
xchg
clc
mov
enter
fisttpll
sbb
dec
or
dec
incb
or
push
rcll
push
sbb
jns
sub
sbb
sub
push
out
adcb
rcrl
sub
test
xchg
push
adc
in
cwtl
sub
ja
cli
mov
sar
pop
les
fistl
incl
aas
mov
jle
iret
adc
je
ret
pusha
sub
call
clc
gs
int3
sub
xchg
out
add
push
mov
ret
arpl
xor
std
adc
aaa
pop
cmp
in
stos
pavgw
mov
pop
adc
xchg
xor
test
xor
and
arpl
aad
mov
push
les
sub
sub
or
jnp
rcl
and
pop
add
push
add
mov
lods
bound
inc
and
dec
push
sbb
jmp
fbstp
outsb
out
sahf
jno
add
or
je
mov
dec
sbb
jecxz
js
repz
subb
movsl
pop
jg
push
xchg
cmp
cmpsb
or
loope
add
xchg
jg
das
arpl
lret
mov
ret
daa
mov
pop
adc
aam
stos
and
and
iret
pop
pushf
adcb
xchg
xchg
cmp
sub
rclb
cmp
inc
icebp
and
xchg
sub
jae
es
insl
mov
outsb
je
or
stos
imul
mov
pop
cli
xor
jecxz
sar
andb
jmp
fwait
in
sahf
sti
cmpsb
das
jge
ss
xchg
lahf
aas
sub
or
mov
pushf
pusha
push
les
cld
pop
mov
pop
sub
jecxz
pop
push
xlat
popf
or
out
pop
cmpsb
nop
fwait
shrl
mov
inc
mov
fists
mov
push
std
adc
xchg
sbb
movsl
insb
out
jp
inc
negb
mov
and
sub
mov
mov
dec
scas
adc
mov
mov
cmpsl
in
repz
fs
loope
mov
push
cmpsb
adcb
test
rolb
adc
in
add
sub
in
sub
xchg
cld
in
xor
sarb
or
mov
add
in
aas
add
fwait
rcrb
jno
jne
sbb
adc
add
mov
pop
mov
sub
iret
pop
cmc
pop
enter
decb
or
insl
popa
pop
rolb
mov
outsl
rcll
cmpsl
pop
fs
mov
mov
icebp
cltd
hlt
xchg
fldcw
inc
add
cmp
ds
add
leave
icebp
ret
jmp
inc
xchg
fiaddl
add
jo
out
cmpsb
rcll
and
insb
fcmovu
inc
es
cmp
iret
roll
stc
inc
adc
int
popf
popa
sbb
je
loopne
cmp
dec
mov
arpl
push
stc
add
test
call
loopne
xchg
lods
jne
iret
xor
jae
lcall
xchg
cmp
mov
into
pop
xor
bswap
orl
mov
into
aad
push
dec
push
mov
add
clc
pop
xor
xor
hlt
jns
je
sub
nop
lock
je
fsts
jp
je
mov
outsl
push
or
xchg
jbe
pushf
sahf
mov
or
shlb
mov
jmp
cmc
sub
pop
cltd
push
popa
mov
mov
in
les
jo
mov
inc
in
out
sti
inc
scas
stc
xor
and
test
js
sbb
jo
xchg
lahf
dec
punpckhwd
sbb
mov
es
mov
jne
cli
jecxz
ds
add
xchg
fs
cmpb
rol
push
stos
push
xor
mov
stc
mov
pop
mov
fs
dec
mov
push
mov
or
test
scas
jl
or
jno
mov
xlat
or
pop
sbb
jge
jge
lret
pslld
jae
pop
nop
add
cld
pop
lea
cmp
negl
cli
std
enter
inc
add
pop
imul
ljmp
jnp
dec
rcl
lods
ret
ljmp
cmpsb
cli
clc
pop
sbb
movsb
push
outsl
sub
shll
ret
xchg
push
ja
and
stos
dec
das
sbb
mov
jnp
push
ret
rolb
mov
out
sub
pop
xchg
lret
xor
in
xchg
jne
repnz
shl
mov
cmp
in
call
jg
xor
mov
push
xor
imul
lea
inc
inc
pop
test
jmp
pop
mov
leave
xchg
xorl
or
repz
push
imull
push
scas
mov
mov
leave
ljmp
cli
push
cmp
out
xchg
div
mov
or
sbb
cli
pushf
fisttpl
rcrb
outsb
daa
lods
sbb
enter
xor
shl
dec
add
and
mov
out
push
or
or
cmp
ss
sbb
pop
repz
pusha
rcrb
push
jl
xchg
popf
test
fsub
lea
mov
xchg
mov
jae
mov
test
xor
test
out
xchg
ret
imul
movsl
jg
lret
cmc
xchg
je
pop
add
inc
jmp
aam
shl
jb
in
out
mov
fidivs
mov
loope
dec
cs
loop
pop
or
dec
jne
stc
dec
cltd
jp
mov
sti
push
sub
nop
mov
clc
dec
in
cli
xchg
jmp
sbb
jge
pop
out
xchg
sarl
push
xchg
fcoml
outsl
jle
mov
cmp
das
aaa
add
ficomps
jmp
mov
jo
mov
stc
and
lods
mov
cmp
cmp
lods
das
jbe
add
lret
mov
adc
sti
or
cmp
into
ror
sub
es
pusha
or
in
pusha
lahf
jp
or
adc
gs
pusha
sub
cmp
xor
mov
sbb
clc
dec
cmp
jmp
lret
stc
adc
cmp
dec
jmp
outsb
mov
inc
mov
mov
orb
mov
dec
xchg
in
popa
xchg
icebp
push
jl
movsl
pop
cld
mov
incb
mov
or
adc
mov
push
mov
into
stc
aaa
pop
fimuls
pop
jp
stos
ljmp
ja
and
jle
out
pop
and
sarb
rorl
insb
dec
push
or
or
sub
mov
shlb
adc
fsubrp
ficomps
pop
pop
lea
cmp
ss
movsl
xchg
outsb
daa
cmp
mov
sarl
hlt
pop
lds
arpl
push
add
mov
jno
add
push
add
enter
cld
clc
jnp
test
jbe
push
test
std
insb
jecxz
pop
sub
and
pop
sub
sbb
into
mov
fildl
mov
xlat
fimull
out
rolb
icebp
pop
cld
mov
dec
jb
ja
mov
or
out
adc
outsb
push
push
cld
sbb
push
push
std
dec
movsl
out
sbbb
clc
shlb
or
pop
mov
dec
mov
cs
xchg
inc
repnz
xor
mov
iret
sub
lea
and
mov
loop
xchg
in
or
jp
cmp
adc
sub
in
dec
in
fistpl
xchg
mov
call
lret
ror
cmp
mov
nop
stos
or
stc
iret
fs
popa
enter
push
sbb
outsl
movsl
out
imul
mov
fwait
dec
inc
add
data16
rcrb
inc
sub
pusha
std
daa
push
and
jle
mov
cmpsb
xchg
xchg
or
lds
pop
scas
frstpm(287
rorb
push
call
xchg
mov
xlat
xchg
and
bound
and
ja
cmp
and
pop
arpl
out
aad
movsl
rorl
aad
cld
inc
jnp
mov
mov
adc
fs
insb
lret
fmuls
nop
push
jge
sub
testl
aam
ljmp
dec
mov
jl
dec
std
dec
xchg
inc
adc
jecxz
cmp
icebp
setg
in
cmp
and
add
incl
rcll
pop
andb
testl
mov
out
jecxz
subl
shll
cmp
add
fldenv
aam
dec
int
mov
and
test
setno
mov
or
mov
add
xchg
dec
or
dec
and
xchg
enter
cmp
push
mov
or
adc
gs
xchg
push
mov
inc
mov
dec
lahf
fidivrl
or
divl
and
gs
sbb
mov
test
jl
into
inc
jmp
test
shl
mov
mov
cltd
sti
lods
dec
orb
sahf
bound
repz
inc
xchg
mov
pop
lret
adc
sub
pop
sub
inc
push
outsb
mov
push
imul
fisubl
scas
arpl
mov
cli
arpl
lds
xor
jge
sub
mov
test
sbb
mov
jle
pop
into
jns
stc
sbb
push
lahf
shlb
cwtl
fildll
or
inc
push
in
sbb
sub
sbb
out
xchg
in
inc
test
icebp
lret
push
adc
retw
sub
ljmp
in
pop
orl
adc
sbb
repz
les
pop
imul
mov
pop
mov
daa
lock
xchg
push
lcall
rcll
imul
jbe
nop
xchg
mov
les
inc
test
and
inc
inc
sahf
test
mov
mov
lock
sub
lret
xlat
out
ja
in
dec
lahf
pop
dec
jne
push
and
cltd
lods
mov
sub
mov
es
or
movb
or
mov
add
cltd
inc
js
call
mov
mov
add
mov
les
push
inc
int3
xchg
mov
sub
jns
outsl
sahf
scas
clc
xor
std
test
push
dec
repnz
stos
hlt
pop
repnz
push
in
jne
ret
repnz
hlt
mov
outsl
int
decl
mov
outsb
pop
popa
adc
fdivr
adc
cmp
in
sbb
mov
xor
pop
sub
mov
mov
lods
xor
insl
sub
xor
lods
dec
xchg
push
out
into
in
jmp
mov
cld
pop
popf
pop
push
sbb
test
and
jb
adc
fimull
xchg
xor
mov
dec
push
cld
addl
mov
adc
xchg
pop
repnz
dec
imul
adc
push
hlt
fcmovnu
imul
shll
test
lahf
xor
aad
ss
mov
repnz
and
jle
in
leave
cs
sub
pop
mov
or
pop
hlt
mov
lods
loop
faddl
test
rorb
fcomps
push
xchg
ja
pop
stos
sub
sahf
jno
jmp
test
sbb
xlat
sbb
mov
lods
insl
dec
fisubrl
fs
add
aas
test
xchg
data16
pop
mov
in
jge
nop
fs
dec
pop
int3
sahf
das
add
dec
dec
imul
pushf
add
sbb
lahf
mov
push
test
sti
pop
cmp
sub
and
mov
jmp
or
pop
jecxz
cli
hlt
dec
test
cmp
cltd
xchg
sbb
mov
add
daa
stc
add
orl
notb
mov
js
dec
dec
xor
cltd
faddp
in
pop
add
fistpll
ds
xchg
rcrl
ss
pop
cmc
setns
adc
dec
jecxz
addr16
mov
dec
ret
cli
fldenv
pop
dec
ss
fdivr
cwtl
add
jae
jmp
mov
lret
mov
add
jb
pop
stos
fwait
out
mov
cmp
movsl
jle
loopne
adc
ljmp
int
add
inc
push
lret
sbb
je
mov
xchg
test
mov
nop
sbb
inc
fldt
fcompl
outsb
mov
dec
jl
notl
fcoms
lret
or
stc
int3
fbld
push
adc
ret
mov
ret
xchg
cli
mov
cmpsb
or
jne
or
movsb
aas
add
push
pop
jmp
loop
lods
ljmp
fidivl
insl
adc
pop
das
lock
add
popf
gs
pusha
cmp
loope
mov
outsl
shr
push
and
and
subb
outsb
mov
clc
js
fisttpll
lret
mov
scas
out
outsl
dec
es
pop
cmp
iret
rcll
insb
arpl
pushf
cs
or
arpl
pop
xor
shlb
fbld
clc
cmp
dec
imull
addr16
xor
push
mov
dec
dec
aas
inc
int3
ja
adc
hlt
cwtl
sub
adc
push
cmp
in
inc
cmpsb
mov
out
int
loop
lds
cmpsl
jg
movsb
xchg
push
mov
cmp
mov
test
jmp
or
adc
ret
pushf
fcomi
pushf
out
pop
ret
xchg
into
aam
xor
or
mov
lods
jb
push
ds
loope
mov
outsl
xchg
repz
js
int3
and
add
pop
jmp
xor
cmc
push
notb
inc
mov
addl
cwtl
leave
sbb
icebp
inc
mov
js
sub
pop
adc
repz
lods
lods
mov
aas
mov
imul
mov
jmp
pop
rorl
enter
rcl
or
into
jns
jmp
inc
aam
pop
push
out
or
mov
aad
popa
sahf
ret
fmull
imul
push
ret
pop
adc
stos
aam
js
and
push
int3
jno
cli
cmp
data16
mov
test
das
ret
pop
test
inc
mov
xor
push
mov
outsb
out
adc
mov
sahf
imul
inc
fstpl
ret
xor
in
push
cltd
sub
jl
nop
or
sub
mov
outsb
jle
adc
pop
or
mov
mov
leave
lea
leave
inc
mov
movsl
aas
jns
ss
push
bound
aad
insl
insl
push
or
pop
mov
aas
out
mov
popa
xchg
sub
out
jmp
push
sti
mov
adc
xchg
stos
stos
stos
leave
leave
xchg
and
mov
sahf
loope
dec
fwait
xchg
mov
test
cwtl
stc
js
jmp
mov
out
popf
hlt
add
ret
mov
mov
xor
les
aam
pop
and
movsl
adc
loop
lret
hlt
jno
sub
lds
in
js
iret
scas
cmp
pop
pop
adc
lret
sub
cltd
repz
rcl
sub
js
or
cmp
outsb
scas
mov
pop
cmp
cld
das
scas
and
sbb
int3
add
pop
aad
adc
inc
ficoms
xchg
pusha
mov
mov
lret
add
ja
sub
dec
ds
sahf
xchg
cltd
and
xchg
adc
ret
jl
sbb
gs
cltd
xorl
test
mov
jl
push
xor
movsb
jge
fsts
stos
push
adc
and
out
das
inc
adc
mov
lea
sub
pusha
outsb
cs
daa
into
and
xor
rcrl
sbb
cwtl
inc
mov
movsb
sub
pop
lods
iret
subl
cmp
jno
aaa
addr16
jne
scas
daa
imul
ja
mov
jb
ds
iret
mov
add
movsl
ret
inc
jle
loop
xor
or
std
cli
fmul
js
push
mov
inc
fstl
cs
ret
sbb
push
roll
jg
mov
pop
mov
mov
mov
clc
jns
idivb
loop
test
xor
fnsave
push
insl
daa
mov
and
adc
jge
dec
bswap
cltd
mov
fmulp
gs
pusha
adc
in
nop
mov
mov
sub
jge
repz
adc
or
jecxz
loopne
xchg
jmp
aam
mov
ret
scas
dec
adc
inc
adc
pop
movsl
in
lcall
mov
adc
outsb
xor
pop
push
adc
pop
test
stc
and
popa
xor
xchg
adc
sbb
mov
loope
mov
pop
bound
mov
jecxz
lods
ret
push
imul
std
pusha
lret
cmp
pushl
jae
fstpt
es
add
xor
push
push
sub
ss
xlat
pushf
je
pusha
xchg
push
push
xchg
or
repz
pop
sahf
std
push
pushf
dec
mov
dec
cmpsb
jp
add
and
xchg
mov
shl
xchg
adc
fwait
out
xchg
or
int3
cmc
in
shlb
aad
rorb
push
into
sbb
divl
pusha
push
into
add
xor
hlt
xchg
call
lret
adc
xor
fstps
movsb
ljmp
in
add
sub
mov
roll
loopne
and
cmp
fcoml
or
cmp
mov
push
das
mov
pop
mov
negl
lods
dec
pop
call
mov
icebp
loop
cltd
push
inc
pop
sbb
pushl
and
addr16
mov
push
outsb
or
add
mov
shll
repnz
test
inc
int
rolb
xor
inc
std
dec
outsl
sbb
sub
in
aad
lds
xchg
mov
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
gs
jp
or
cmp
ljmp
movsl
stos
xchg
mov
outsb
push
jp
or
or
cli
lds
xchg
cmp
rclb
jge
xchg
fcmovbe
ljmp
pop
push
dec
push
cmc
into
pop
or
add
sub
fadds
test
cwtl
mov
js
push
push
cmp
jbe
push
or
clc
mov
enter
test
cwtl
mov
js
push
push
cmp
jle
dec
or
lret
test
xchg
in
movsb
out
daa
jp
push
pop
jae
popa
icebp
mov
lock
push
xchg
or
leave
sub
add
mov
movl
cmc
mov
daa
aaa
jns
xchg
test
sub
cmp
dec
xchg
gs
sbb
mov
cmpsb
fdivr
or
push
aad
std
mov
xor
dec
push
pop
jbe
jbe
and
ret
jne
insl
pop
imul
xchg
mov
popa
mov
adc
dec
mov
aas
jmp
push
test
mov
leave
xchg
push
fwait
out
ret
mov
cld
fcmovb
xchg
push
or
scas
ficomps
int3
daa
imul
push
fst
or
mov
push
push
cmp
data16
pop
clc
mov
mov
mov
int3
mov
cmp
sbb
xor
arpl
je
pop
jl
or
clc
jecxz
xchg
test
sti
mov
or
imul
and
popf
ret
enter
out
mov
mov
ss
inc
je
sub
push
or
mov
cmpsb
fcoms
test
cwtl
mov
js
push
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
dec
xor
std
sub
repz
lcall
das
fstps
mov
sarl
fldenv
shrl
dec
push
aaa
lahf
fucomip
xchg
xchg
ret
mov
sahf
js
pushl
sbb
fistps
mov
dec
adc
in
lds
add
jns
mov
insl
pop
lea
pop
mov
cld
mov
in
je
ret
cli
in
push
sub
jg
sbb
mov
dec
and
out
mov
in
dec
jbe
mov
out
movsb
lods
jo
adc
shrb
movsb
out
les
push
pop
test
push
das
or
mov
dec
sbb
mov
movsb
inc
jge
out
pop
sbb
pop
dec
fisttpl
xor
or
inc
iret
mov
or
shll
cmpsl
rclb
and
icebp
pusha
xor
leave
cmp
inc
or
xchg
cmp
and
mov
xchg
jmp
stos
fldpi
and
push
stos
ret
adc
insl
popa
mov
int3
and
xchg
xchg
test
cmp
push
or
dec
mov
xor
aaa
cs
add
push
mov
add
movsb
fs
pop
stos
js
push
add
and
dec
jge
sbb
adc
in
dec
stos
test
xor
push
xchg
aas
add
add
test
mov
mov
sub
imul
je
test
xor
sub
xlat
sub
jb
ljmp
es
push
push
or
fisttpl
add
cs
and
mov
push
xor
inc
sbb
and
mov
shl
adc
mov
aas
cmpsb
sahf
push
in
mov
clc
ja
xchg
ljmp
and
notl
mov
int3
ja
xor
pop
or
mov
add
xor
cs
pop
xchg
jns
out
lods
scas
lock
dec
dec
movsb
pop
dec
fildl
cld
inc
push
cmp
mov
xor
test
ret
ljmp
neg
mov
cmp
sbb
mov
lock
adc
imul
cmp
lea
movsb
jmp
lea
pusha
mov
push
scas
cs
cmp
xchg
ljmp
sbb
jle
cmp
lahf
mov
sbbl
in
xor
les
xchg
xchg
outsb
test
fwait
fwait
jo
cmpsb
pop
push
adc
pop
aas
out
mov
or
xor
pop
out
in
xchg
bound
cmp
add
sub
xor
scas
insl
sub
mov
sub
dec
mov
inc
fldt
sahf
sbb
sub
mov
gs
jle
dec
fabs
rolb
scas
xchg
mov
or
subb
leave
insl
and
jl
jmp
mov
jo
les
stc
ss
inc
mov
push
xchg
dec
out
push
jnp
rcrb
mov
lods
mov
into
or
xor
lds
dec
in
push
movl
mov
test
in
push
arpl
adc
mov
test
xchg
mov
aas
pop
and
loopne
js
jmp
mov
insb
repz
cld
int3
dec
add
add
insb
mull
insb
fnstenv
jo
sbb
imul
add
sbb
sar
mov
repz
inc
pop
je
inc
popf
gs
push
ret
push
cld
dec
stos
inc
cmpb
sbb
and
inc
stos
cmp
sub
clc
xor
pop
ret
add
pop
push
inc
fs
push
dec
adc
push
pop
sti
jae
jnp
cli
inc
int
loope
outsl
cli
inc
xchg
inc
push
inc
gs
inc
into
lret
addr16
mov
leave
cmp
and
lea
push
dec
dec
xchg
xor
cmp
fldcw
std
pop
add
pop
das
rcll
cmp
cmp
sbb
mov
push
sub
ror
cmp
enter
cmp
cmp
orb
scas
mov
xor
inc
ljmp
sbb
nop
fistps
aad
addl
push
mov
sti
mov
xchg
ret
xor
aam
mov
mov
dec
jno
jnp
push
add
out
or
xor
xchg
xchg
ret
jge
dec
stos
dec
rcrl
aam
adc
imull
push
jb
mov
xor
pop
cmp
pop
inc
shrb
and
dec
scas
push
scas
repnz
mov
jg
push
and
push
stos
in
clc
test
or
push
shufps
inc
mov
dec
lds
push
pushf
fmull
repnz
leave
pop
mov
add
insl
inc
cmpb
scas
jns
aam
lcall
aas
lods
daa
wrmsr
dec
ds
int
mov
and
ss
inc
cmc
les
les
jbe
in
cmp
iret
push
mov
lahf
adc
sarl
dec
outsl
ja
push
scas
dec
dec
adc
arpl
push
push
adc
int
sbb
ret
insb
daa
cmpsb
insl
bound
shrb
lret
and
in
xchg
out
mov
add
rorb
icebp
adc
in
and
push
movsl
jnp
test
scas
adc
push
dec
pop
hlt
sbb
js
loop
xchg
sbb
mov
fmul
out
push
sub
push
test
mov
out
sbb
add
outsb
mov
rcrb
outsl
mov
add
aaa
add
int
or
or
add
cwtl
call
das
leave
adc
mov
cmc
cmp
rcr
or
sub
insb
jmp
sbb
mov
stos
push
mov
std
adc
push
jbe
pop
push
mov
sbb
cmpsl
mov
repnz
lods
mov
data16
mov
jnp
addr16
cs
rcrl
cwtl
std
push
sbbb
cmc
repz
xchg
call
pop
push
lea
jne
mov
mov
adc
push
imul
clc
push
shr
js
push
pushf
je
mov
pop
fisttpl
pop
xlat
xor
pop
and
or
and
jmp
test
or
push
inc
xchg
inc
lcall
xchg
xchg
jecxz
mov
das
js
in
sarl
data16
pop
and
sbb
pop
fwait
mov
sahf
fmul
or
cmpsb
dec
mov
adc
push
sarb
mov
cmp
js
or
xor
arpl
or
test
icebp
sub
pop
aaa
mov
adc
in
jg
jg
dec
out
mov
in
cmp
shrl
mov
mov
mov
repz
mov
adc
xchg
mov
pop
xchg
xor
je
scas
gs
sub
mov
fnsave
div
fcoml
add
repnz
loop
lret
and
ds
ror
paddusw
inc
mov
das
icebp
ret
aaa
pusha
push
repnz
xchg
mov
imul
xor
mov
cs
cmp
imul
push
xchg
cmp
xlat
add
pop
sti
add
imul
insb
sub
inc
jo
shll
mov
sbb
or
jle
imul
call
into
cltd
add
jmp
sbb
mov
popf
push
xchg
inc
jl
fists
jle
aaa
cmp
insb
sub
xchg
sti
pop
cmpb
fdivrl
imul
adc
out
sub
out
dec
fidivs
out
xor
andl
lret
das
ljmp
push
or
or
gs
imul
clc
fldenv
test
scas
fs
filds
shl
das
iret
push
pop
mov
dec
clc
cmp
jl
insl
lock
and
js
in
dec
xor
rolb
xchg
xchg
cmp
xlat
ljmp
rcr
shrb
idivl
xchg
sbb
inc
jg
xchg
jecxz,pn
mov
ficoms
lcallw
in
sub
inc
push
mov
les
pop
mov
xchg
into
ret
mov
sbb
dec
pop
data16
popl
or
jg
jbe
xchg
jbe
mov
bound
mov
jp
call
pop
dec
ljmp
xor
lret
jns
mov
out
aad
aam
cld
cmp
lret
sbb
decl
imul
push
ret
inc
xlat
jg
mov
push
aad
and
lcall
addr16
daa
mov
cmp
pop
das
mov
mov
or
sub
imul
sub
pop
daa
push
mov
inc
add
add
cli
js
mov
mov
inc
mov
jge
inc
rolb
mov
sbb
adc
loop
cmpb
pop
adc
inc
and
cld
bound
jo
mov
ljmp
pop
imul
fildl
push
sub
sti
aas
jbe
push
xor
cli
sbb
sbb
movsl
jmp
imul
aaa
inc
sub
pop
sbb
add
imul
jl
or
jmp
dec
hlt
mov
stos
sahf
clc
jb
cmp
xchg
jo
std
outsb
or
push
or
cmp
mov
jb
mov
in
inc
insl
fidivrl
inc
push
push
clc
cmpsb
sbb
push
cltd
cli
rcll
and
or
mov
dec
or
and
fwait
dec
in
scas
fdiv
pushf
mov
jp
cmp
fwait
cmp
and
negl
adc
in
sarb
fwait
add
addr16
int
sti
xchg
xchg
fs
pusha
mov
jle
sub
jnp
pop
xor
sub
inc
jp
cmp
jecxz
xchg
jo
pop
push
adc
xor
adc
sub
cmp
mov
jl
insl
scas
mov
fadds
or
mov
inc
outsl
pop
fidivrl
ljmp
inc
push
push
push
dec
xor
jle
push
movsl
fiadds
push
mov
push
mov
mov
cmp
in
testb
loope
push
fucomp
call
leave
push
aam
enter
aad
or
dec
jno
and
ljmp
popa
rcr
jge
out
je
mov
ret
cmpsb
dec
sbbb
sub
cmp
pop
inc
faddl
cwtl
mov
shrl
sbbl
or
jns
mov
pop
fstpl
ds
push
xchg
ficomps
cmpb
shl
pusha
cmpsb
mov
adc
inc
dec
jmp
mov
ret
dec
repz
pop
gs
shrl
int
cmp
adc
test
pop
fcmovu
rcrb
adc
orl
adc
pop
repz
ret
jae
popf
dec
xchg
addr16
aaa
xor
mov
push
mov
arpl
popa
jge
mov
jb
fwait
sub
test
sbb
dec
int
jmp
sub
lods
std
pop
pop
in
push
call
ret
xor
or
jne
nop
popa
repz
jnp
cmp
cmp
push
les
outsl
imul
imul
adc
je
push
js
and
mov
adc
in
adc
fdivs
pop
pop
jo
leave
mov
out
push
inc
frstpm(287
addb
mov
cli
mov
repz
jg
mov
jmp
ja
and
test
pop
cmpsb
push
sbb
ret
sbb
std
out
push
insl
test
add
lcall
std
jbe
repnz
lret
repz
pop
rcll
xor
cltd
sub
insb
mov
or
add
dec
scas
push
pushf
and
fldcw
pop
jne
adc
fcoml
imul
pop
mov
and
pop
sbb
mov
mov
popf
push
leave
jb
adc
pop
mov
dec
and
int
jl
and
es
fadd
cmp
ljmp
mov
pop
mov
sti
call
stos
adc
push
jno
jmp
xchg
pop
dec
mov
and
daa
xchg
out
out
mov
mov
mov
addr16
xchg
pop
xor
js
fs
je
test
out
and
rcrl
clc
in
outsl
pop
popf
pop
inc
sbb
cltd
inc
stc
add
cmc
mov
shlb
sbb
loope
insb
in
cmpsb
inc
lods
jle
in
jecxz
icebp
js
xchg
cwtl
stos
xchg
dec
in
mov
and
leave
cmp
ljmp
xchg
pop
test
adcb
mov
jecxz
leave
pushf
gs
out
jno
sbb
mov
mov
test
outsb
imul
in
dec
jp
ds
mov
dec
adc
out
inc
and
jmp
mov
int3
xchg
pop
push
add
dec
sub
or
mov
enter
pop
sub
mov
or
mov
sbb
dec
repnz
push
sub
xchg
dec
sbb
inc
popa
stc
sub
mov
into
mov
and
push
pop
movl
pop
cli
pop
adc
test
sarb
ja
inc
and
lock
aas
arpl
iret
cli
out
in
dec
mov
add
jno
jecxz
mov
and
mov
push
das
mov
testb
xor
pop
lret
leave
push
je
insb
dec
pop
cmp
xchg
daa
mov
jg
popl
out
cs
dec
jno
xorb
hlt
push
scas
jl
mov
and
inc
jae
sbb
push
jle
mov
adc
in
das
fnsave
jb
adc
notb
clc
test
aam
lret
cld
xorps
rcrb
mov
jae
lahf
or
sbb
fwait
in
pop
xchg
out
and
daa
pop
ficoms
pop
pop
insl
divb
or
orb
push
pop
push
push
out
insb
aam
cmpsb
sub
fildll
scas
mov
outsb
daa
xchg
fistl
in
xor
xchg
cmp
xchg
pop
loop
jge
dec
push
cmp
outsl
iret
insb
bound
xor
addr16
cmp
cmpsl
inc
sarb
xchg
add
ja
loope
jge
js
popf
iret
inc
push
std
incb
mov
sub
shlb
rcrb
xchg
ret
leave
imul
xor
mov
pop
daa
and
or
aad
std
jae
pop
cli
gs
or
repnz
pop
pop
loop
xchg
inc
test
add
xor
jecxz
sub
rorl
mov
jge
nop
sti
jae
jae
jmp
dec
cmpsb
jno
push
mov
push
stc
daa
pop
jae
shll
push
sbb
push
jmp
fmull
in
inc
cmp
ss
scas
cli
ss
das
add
inc
shrl
jnp
scas
jae
jmp
mov
es
and
addr16
adcl
mov
out
scas
mov
loopne
outsl
sbb
sbb
pop
push
call
ror
dec
sub
std
mov
out
mov
in
lods
fbstp
push
in
out
pop
mov
outsl
fists
mov
mov
pop
xchg
add
cmc
sbbl
inc
add
flds
fdivrl
xor
int3
pop
push
stc
pusha
cmp
adc
arpl
lcall
daa
fdivrs
push
sarl
and
pop
das
mov
dec
add
and
inc
pop
test
outsl
pop
jge
leave
inc
push
sub
pop
mov
push
push
outsb
mov
lahf
cli
and
stos
dec
push
jb
lods
sub
arpl
and
fmul
pop
adcb
movsb
cmp
imul
mov
iret
add
inc
shl
int
add
sahf
nop
fdivrs
mov
fisubrs
lret
call
mov
lret
push
cmpsb
pop
repz
mov
scas
or
mov
ljmpw
inc
sub
inc
adc
int3
icebp
sarl
pop
xor
ja
mov
and
push
dec
repnz
jmp
adc
sub
cmp
pop
add
test
xchg
js
loop
mov
cld
lahf
push
add
scas
lret
adc
rclb
loopne
js
jmp
inc
sbb
stos
pop
cld
cmp
xchg
lods
or
lock
dec
adc
sub
aas
or
or
mov
fs
or
lcall
aad
fidivrs
test
sbb
je
lret
je
adc
jmp
lret
aam
inc
in
repz
fstps
sbb
sbb
jne
mov
lcall
repnz
into
mov
add
cmpsl
in
sbb
mov
es
mov
mov
in
out
mov
ret
sbb
adc
xchg
sbb
jo
inc
inc
cmc
pop
imul
lahf
mov
or
adc
xor
sub
inc
or
sar
fisubl
or
cmp
push
add
lcall
mov
movsl
lods
fnsave
inc
add
enter
test
ljmp
mov
mov
or
jnp
lods
rcll
pop
fbstp
cmp
js
clc
push
xchg
les
lock
sarl
vaddps
push
clc
sub
and
pop
jbe
scas
jecxz,pt
cmpb
xlat
mov
xchg
cld
std
mov
pop
lahf
mov
sub
or
cmp
les
lahf
xchg
std
push
xor
cli
cs
lods
int3
mov
pop
sbb
insb
adc
xor
scas
fidivs
dec
push
lahf
fdivrp
movsl
cld
push
enter
fdivl
and
shrl
pop
dec
inc
mov
inc
sbb
xchg
mov
push
sub
sarb
pop
mov
lds
xorl
dec
lret
imul
out
lods
mov
out
cmpsb
mov
mov
inc
dec
popf
dec
add
in
xchg
xchg
les
stos
adc
loope
sahf
and
sbb
jae
aad
popf
and
shlb
sarl
inc
xchg
cmpsb
jg
mov
jns
mov
mov
mov
fstp
add
sub
test
inc
dec
sbb
or
gs
in
jbe
jnp
pushf
fistpll
iret
xchg
dec
push
rcll
xchg
cwtl
notl
imul
xchg
pop
push
int
sbb
add
out
inc
sbb
adc
ljmp
addr16
negb
mov
inc
push
rcr
cmpsl
dec
pop
mov
test
mov
cmc
cmc
mov
and
lock
mov
lret
sub
xchg
xchg
mov
fbld
and
lods
outsl
push
cmp
cmp
movsb
iret
lahf
jl
dec
push
scas
pop
ret
add
pusha
xchg
xchg
lret
mov
mov
shlb
pop
insb
or
rorl
scas
test
movl
pusha
xor
pushf
sub
lds
pop
jl
and
xor
xor
lahf
sbb
gs
test
add
pop
loop
mov
pop
int3
adc
and
dec
mov
cmp
hlt
leave
popf
mov
inc
sub
test
dec
mov
push
aad
faddl
fbld
ret
aam
sbb
les
or
addr16
jno
and
dec
dec
sub
mov
clc
xor
add
aaa
or
or
popf
mov
sbb
arpl
movsb
and
subl
lret
push
loope
jne
xchg
xor
cmp
cmp
fs
gs
mov
inc
pop
xor
jo
fs
cmp
xchg
add
jl
or
dec
dec
mov
inc
cmp
aaa
cltd
stos
js
mov
or
lock
imul
ljmp
and
xchg
xor
sbb
mov
ror
inc
cmp
fmuls
mov
push
test
inc
mov
loop
inc
sbb
jae
xor
lea
cmc
aad
or
leave
jns
and
subb
fisubrs
addr16
dec
adc
inc
inc
or
sub
inc
push
jg
pusha
jp
out
lret
mov
push
pop
repnz
cli
pop
in
ja
pop
iret
popf
dec
daa
rcll
lock
jecxz
cld
xchg
jb
in
dec
stos
xlat
pop
cmpsb
xor
je
xchg
popa
sti
xor
mov
imul
cmp
rolb
clc
add
shlb
jb
mov
cmp
idivb
jge
sub
mov
jecxz
cmp
adc
jne
movsl
and
mov
outsl
mov
pop
jg
mov
or
outsl
xor
add
jg
test
jb
push
xchg
cmp
shlb
and
out
outsb
fs
push
bound
adc
nop
roll
out
mov
popa
mov
scas
xchg
push
daa
cmp
cltd
inc
sub
fs
lock
pop
push
dec
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
push
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
call
push
mov
push
mov
mov
cmpsb
fcoms
test
cwtl
rorb
and
dec
push
cmp
data16
xchg
mov
or
xchg
enter
fcomps
push
addb
pop
bound
sbb
inc
inc
push
das
or
repnz
iret
xchg
mov
mov
insl
jb
bound
cmp
and
repnz
loop
xchg
fiadds
lea
inc
insl
jb
bound
add
rcrb
loope
subb
ret
icebp
lret
lret
lea
jge
add
sub
sbb
subl
clc
fxam
fwait
pop
push
or
mov
aad
mov
mov
ror
xchg
lret
jge
add
lds
cmp
popf
repz
sub
inc
imul
clc
imul
loop
addr16
xchg
lods
or
push
sub
gs
sbb
and
and
sbb
push
dec
pop
sub
add
mov
mov
and
into
dec
test
in
jg
imul
dec
popf
mov
lea
popf
xchg
pop
mov
xchg
daa
xor
add
mov
jbe
rcr
jne
mov
jp
dec
bound
cmp
and
in
cmc
repnz
movsl
cmpb
sbb
insl
xor
and
ja
insl
inc
pop
jno
pusha
mov
mov
xlat
popf
shl
and
ss
adc
dec
pop
ja
addr16
mov
test
out
fcomi
enter
inc
or
pop
cmp
add
sar
ret
fucom
int
mov
mov
insl
jb
bound
cmp
and
repnz
int
mov
mov
ljmp
lock
bound
adc
mov
mov
loope
loope
test
int
lds
addr16
out
hlt
pop
lea
push
xchg
and
mov
outsb
mov
je
xchg
pop
sub
dec
dec
into
aaa
mov
fistpll
jl
dec
lea
bound
ss
mov
fcoml
add
aaa
sahf
jle
cld
fstpl
iret
fnsave
ljmp
lea
stos
mov
jg
out
or
and
inc
std
shlb
and
push
cmpsb
sbb
xor
push
rcll
bound
addr16
pop
pop
nopl
or
and
mov
shlb
sbb
rorb
push
jg
xor
cmp
jg
aas
mov
or
sarl
mov
out
lcall
add
sub
push
mov
cltd
outsb
or
mov
sti
cs
mov
cmp
jnp
mov
sub
cltd
mov
xor
loopne
jl
and
xchg
xor
add
insl
clc
aam
repnz
or
adc
int3
shr
and
shrb
test
filds
jb
xchg
pop
xor
mov
or
or
fwait
out
mov
into
push
movsl
adc
sub
jno
faddl
xor
mov
imul
sahf
pop
dec
xlat
pop
insl
daa
xor
add
mov
jb
or
adc
xchg
mov
clc
lret
or
ret
xor
mov
cmp
enter
js
fidivrl
or
cmpsl
mov
mov
add
mov
daa
sub
xchg
fsubs
push
mov
stc
andb
test
je
jmp
loopne
pop
mov
loop
adcb
mov
lcall
adc
rcr
popa
lcall
xchg
aad
setg
fwait
mov
pop
jmp
add
push
add
sbb
ds
xchg
fcom
pop
xor
pop
or
mov
jbe
sbb
push
js
sbb
pop
jecxz
mov
rcll
mov
dec
jo
aas
cwtl
xchg
out
cmpsl
dec
lock
jl
mov
pusha
fsts
pop
xor
add
sbb
imull
ret
dec
sub
jge
xlat
pop
sub
dec
mov
test
leave
xor
lods
jmp
int3
lds
xor
scas
pushf
in
dec
or
mov
fstl
adc
dec
std
jne
jle
in
out
ss
adc
subl
mov
dec
enter
arpl
push
xchg
and
scas
fists
nop
stos
push
add
in
fdivrl
add
or
pusha
xchg
push
sub
sub
idivb
addr16
xchg
insb
cmp
add
aad
inc
scas
int
xchg
push
xchg
mov
mov
push
out
sub
or
scas
loope
cmpsl
sub
addr16
xor
sbb
cmc
dec
call
adc
or
addb
sbb
fsin
icebp
xchg
jbe
in
add
out
jo
mov
sub
mov
int
cmp
jmp
dec
xor
mov
dec
insl
add
jmp
shll
aaa
mov
mov
lret
push
adc
or
cmp
ja
push
lea
jnp
clc
fimuls
movsb
stos
lea
inc
or
sbb
nop
mov
popa
sbb
lcall
fistps
cmp
cmpsb
sbb
mov
dec
dec
jnp
insl
les
cltd
js
test
mov
cmpsl
popa
xlat
push
sbb
out
inc
adc
jp
or
xlat
jg
fldl
sub
mov
inc
mov
fiaddl
jg
pop
xor
data16
or
sti
aaa
and
loope
rolb
xchg
xor
popa
mov
push
push
lretw
lret
stc
xor
cmpsb
das
call
jg
add
dec
loope
push
stc
dec
nop
sbb
cmp
cmp
mov
and
xor
sbb
or
push
rol
xor
xchg
xchg
insb
push
xchg
mov
movsl
adc
mov
adc
mov
popa
repnz
or
cmpsl
jecxz
xorb
ja
dec
mov
inc
mov
fcmovnu
popa
sbb
mov
jle
mov
nop
outsl
add
pop
sti
cld
data16
sub
jmp
xor
clc
in
mov
dec
ret
ret
xlat
xchg
repz
mov
ret
xlat
aaa
or
mov
xor
or
jbe
and
add
jno
aam
imul
aas
out
cs
xchg
sub
dec
cmc
pushf
in
mov
fiaddl
xchg
stos
fiaddl
imul
push
adc
scas
add
jmp
lret
movsl
xchg
jno
cltd
adc
aaa
cli
inc
dec
fdivl
jl
jbe
repnz
out
sub
dec
es
cmp
cmpsb
sbb
clc
les
ja
add
push
pop
es
iret
rorb
jecxz
dec
cmc
or
pop
push
ljmp
cmpsl
dec
jo
pop
mov
jb
js
pop
aam
mov
std
fmul
ss
iret
mov
popa
sahf
pushf
sahf
mov
inc
daa
call
out
inc
sub
decl
nop
jo
aaa
inc
mov
aad
lds
adcl
aaa
jo
mov
sbb
xor
push
bound
jae
lret
xchg
xchg
mov
dec
add
mov
arpl
sub
test
inc
cmp
daa
scas
lea
mov
cmpsb
hlt
in
and
or
jmp
loope
sbb
imul
inc
cmp
dec
pusha
mov
fistps
sub
inc
ja
cmp
sbb
or
mov
push
mov
nop
cmpsl
xchg
pcmpeqb
mov
enter
xchg
xchg
or
cmp
das
aad
mov
sbb
stc
loopne
mov
mov
cmp
arpl
rcrl
xor
out
jmp
xor
frstor
in
push
sbb
test
in
inc
cwtl
cmpsl
out
mov
or
insb
enter
mov
mov
mov
pop
cmp
gs
cwtl
mov
add
cld
lret
mov
mov
cmc
dec
sbb
cmp
mov
in
xchg
mov
push
dec
in
cmp
or
mov
ss
stc
iret
icebp
in
fistps
popa
push
lods
and
stc
aas
ljmp
nop
dec
and
cmp
cmp
xor
jne
xchg
mov
ja
mov
push
icebp
rcrl
inc
sub
inc
adc
jge
mov
fucom
or
inc
jmp
and
addr16
insl
inc
lret
or
ficompl
or
insb
into
lret
daa
adc
int
cmpsb
push
or
mov
clc
es
sbb
mov
adc
adc
mov
gs
or
icebp
and
cmp
and
scas
sbb
mov
rcrl
and
and
add
sub
pop
loope
iret
in
out
je
imul
push
roll
stos
mov
or
mov
aaa
stc
pusha
and
mov
xor
pop
mov
dec
or
addb
lahf
jecxz
imul
stos
in
cmp
dec
mov
pop
push
cld
ffree
mov
mov
cwtl
sub
pop
xchg
int
mov
pop
outsb
sarl
inc
inc
push
inc
sub
mov
scas
icebp
sub
push
ret
mov
mov
lret
in
pop
in
mov
cmp
cltd
add
mov
mov
loopne
mov
arpl
ret
xor
loop
dec
mov
lods
cs
pop
fwait
xor
nop
add
xchg
xor
mov
push
xor
xchg
insl
pop
jmp
xlat
jmp
mov
cwtl
out
add
aas
jmp
stc
cmp
dec
jmp
add
mov
mov
push
sub
loop
pop
adc
inc
shll
popa
imul
add
sbb
jecxz
stc
xorl
inc
mov
shlb
repnz
icebp
js
sub
clc
cwtl
aam
sub
add
fldenv
mov
inc
pop
mov
and
mov
jecxz
fistl
outsb
jmp
inc
mov
cwtl
push
fcmovnbe
aam
mov
in
xchg
test
push
push
lods
jmp
add
je
cmp
add
fidivl
xor
push
das
cld
push
jl
xchg
jmp
and
int
nop
push
clc
cmp
inc
cltd
push
add
rcll
push
sbb
inc
adc
pop
loope
sbb
scas
iret
push
push
or
inc
add
push
inc
repz
jbe
mov
inc
pop
dec
fisttpl
fidivrl
jecxz
imul
loope
cwtl
inc
sbb
and
out
fnstcw
mov
add
mov
sbb
dec
pop
push
loope
mov
jp
xlat
mov
xchg
mov
fisubs
xlat
cli
jl
cld
arpl
dec
and
pop
scas
xchg
jp
lods
fisttpl
jmp
in
push
fiaddl
mov
sub
xchg
int
das
fadds
cltd
lret
inc
fdivs
mov
pop
mov
pop
adc
icebp
std
inc
mov
aaa
mov
inc
cmp
pop
push
bound
pop
sbb
test
pop
xor
mov
jp
sbb
adc
mov
cltd
dec
test
arpl
fcomip
clc
lahf
push
inc
test
lret
subl
mov
pop
repnz
adc
faddl
xor
push
mov
adc
fwait
push
mov
jge
out
test
sar
jmp
imul
incb
ljmp
fdivs
cmp
pop
orb
pop
in
nop
mov
cmp
mov
out
xchg
gs
push
pop
pop
rcr
adc
cmp
mov
pushf
sub
aaa
push
hlt
xor
ja,pt
shrb
push
jns
movsb
shlb
dec
push
bound
nopl
stos
mov
cld
pop
push
inc
stos
fsubl
inc
push
pop
fcompl
call
jno
add
push
push
jp
int
push
aam
inc
in
repz
xor
sub
mov
cmpsb
shlb
pusha
icebp
outsb
notb
das
test
add
ljmp
imul
fs
sbb
aaa
adc
in
jmp
adc
cld
inc
fmull
movsb
fsubs
mov
xor
scas
leave
loopne
fwait
mov
cmpsb
push
push
ljmp
jle
and
lds
mov
mov
arpl
xchg
push
orl
daa
ljmp
lret
adc
dec
lret
popf
dec
mov
mov
arpl
out
out
xor
out
dec
sub
arpl
push
inc
pop
pusha
push
in
shll
icebp
jno
jecxz
jae
pop
jns
sbb
xchg
in
aad
mov
insb
sbb
cmp
adcb
aam
mov
imul
mov
mov
xchg
jmp
pop
iret
add
sti
mov
lods
fs
mov
scas
les
fs
test
adc
push
gs
push
fcmovb
or
push
loope
mov
mov
data16
cmp
loop
inc
jns,pn
add
sti
sahf
push
imul
cltd
and
and
dec
and
sub
lret
pop
xor
cmp
xchg
mov
imul
mov
add
ret
and
mov
scas
inc
jbe
push
push
push
leave
push
loope
xchg
lret
lcall
jb
push
dec
repz
mov
pop
cmp
mov
ljmp
mov
jp
xor
dec
or
insl
movsl
cmp
mov
cmp
aam
jl
scas
mov
fsts
pop
xlat
in
inc
hlt
xchg
cmp
adc
out
inc
sub
inc
push
sbb
sub
call
insl
push
insb
sti
mov
enter
addb
imul
outsb
adc
test
xchg
fidivrl
xchg
xchg
inc
mov
mov
clc
mov
add
dec
mov
adc
push
daa
aam
push
int
dec
and
or
dec
into
lahf
arpl
mov
adc
sub
rolb
out
and
fimull
xchg
push
fisubrl
jb
jmp
mov
push
iret
cmp
and
repz
jl
xchg
jg
enter
loopne
cmp
fdivp
in
mov
leave
loope
add
fnstsw
add
test
push
movsb
pop
or
or
aaa
and
popa
cmp
sub
cmp
clc
orb
fcomps
pop
xchg
cmp
in
inc
fstpl
shlb
adc
shll
xchg
add
mov
sub
or
fidivl
push
xchg
push
inc
hlt
sub
sub
inc
rolb
mulb
cmp
fisttpl
cmp
and
sbb
push
adc
lods
push
rorl
push
or
rolb
repnz
jae
xchg
jne
sti
cld
xchg
test
jecxz
dec
dec
repz
dec
add
sub
lods
sahf
or
rcl
test
int3
cmp
and
dec
out
sti
retw
cmp
add
aaa
mov
push
push
push
xorl
decl
cli
dec
pop
sub
mov
jno
sbb
and
jno
ret
fcmovb
sub
outsb
insl
ret
test
pop
mov
lods
add
test
xor
dec
stos
and
nop
sub
push
mov
jns
mov
pop
cmp
in
pop
ret
jg
inc
sbb
fildl
fnstsw
ficomps
mov
dec
imul
aas
push
add
mov
daa
push
test
mov
imull
cmpl
jb
jle
outsb
and
xor
push
gs
lcall
sub
aad
lods
iret
and
test
jb
cmpsl
sub
xchg
movsl
int
mov
xchg
and
and
ficompl
mov
xor
int
sbb
aad
inc
xor
outsb
push
xchg
cmpsl
and
pop
ret
mul
jns
push
mov
cmp
js
cmp
mov
lret
lahf
test
aas
stos
iret
pop
imul
popa
cmp
sbb
nop
xchg
mov
pop
or
sub
cs
scas
inc
sub
dec
or
inc
mov
or
repz
aam
add
incl
repnz
mov
movb
std
out
mov
or
testb
pusha
sub
cli
mov
inc
mov
dec
pushf
test
cs
addr16
sbb
fs
push
insb
enter
iret
rorb
push
es
fdivs
js
cmpsl
jmp
or
into
js
sahf
ljmp
ds
push
cmp
stc
adc
sbb
test
and
repnz
sbb
push
cltd
scas
pop
je
rorb
daa
add
fucomp
dec
adc
cmp
ljmp
xor
push
or
ret
xchg
sub
pop
push
fisubl
sub
pop
sub
sub
add
in
inc
cs
clc
or
jg
pop
popa
mov
lahf
insb
jp
loop
aad
cld
shrb
int3
mov
cmp
and
das
insl
mov
movsb
lods
dec
lret
xor
sti
dec
add
adc
mov
repnz
stc
lret
jbe
hlt
push
sahf
mov
aam
mov
pop
sti
pop
mov
inc
mov
out
and
push
hlt
sbb
pop
adc
cmp
or
xchg
leave
mov
dec
add
mov
jns
mov
andl
test
pusha
mov
push
leave
or
stc
shlb
jecxz
jns
into
mov
mov
add
cmp
ret
lret
sub
fs
pushf
dec
cmp
addr16
pop
addr16
sbb
shlb
lock
xchg
movsl
pop
adc
or
jo
sti
in
cmpsl
mov
jl
push
xchg
mov
sub
andl
xchg
xor
sarb
mov
sbb
ret
test
lods
les
cmp
idivl
sbb
insl
ret
scas
stc
or
xor
sahf
cltd
mov
mov
cmpsb
add
dec
stc
aaa
ljmp
mov
lds
xor
jns
mov
ds
test
cmp
stos
dec
test
js
mov
pop
jnp
daa
cli
mov
sbb
jg
or
fs
and
mov
xor
mov
out
fs
les
mov
jae
test
mov
pop
lret
enter
or
mov
int
mov
mov
aad
ss
in
or
std
mov
pop
ret
pop
adc
fdivs
aad
push
push
lds
add
or
jb
lods
aaa
jmpw
iret
and
lock
inc
cmpsb
popf
repz
into
jns
repnz
aam
shlb
push
jmp
adc
hlt
xor
cmpsb
dec
xchg
adc
fs
mov
dec
xor
js
test
out
add
adc
es
add
rorl
adc
mov
std
imul
cmp
loope
cmpsb
pop
fs
pop
mov
shll
movsl
lock
faddl
jp
pushf
pop
push
xchg
popa
loope
loope
pop
out
xor
inc
mov
mov
cmp
pop
jae
push
jo
inc
add
cltd
aam
movsl
inc
pop
add
and
scas
inc
add
mov
std
or
insl
in
roll
clc
leave
and
mov
mov
dec
mov
adcl
jp
mov
aam
icebp
bound
or
mov
cmp
push
test
pop
sbb
clc
test
xor
jecxz
stos
rcrb
lds
jle
stos
cld
add
xchg
or
mov
cmp
xchg
popa
inc
push
pop
dec
pop
frstor
std
insl
push
ds
mov
adc
lea
pop
or
push
mov
jle
add
imulb
pop
push
arpl
adc
xchg
enter
adc
pop
mov
cli
insb
sub
out
incb
mov
lret
mov
loop
sub
dec
and
push
sub
lcall
movsb
sub
and
mov
add
out
pop
lods
xchg
mov
call
sbb
sbbl
daa
inc
mov
stos
sbbb
sub
jae
daa
fs
lea
jnp
and
cmc
shll
mov
je
scas
dec
mov
adc
ljmp
cmp
or
stos
push
and
imul
inc
fstl
add
or
out
xor
mov
testb
mov
mov
inc
in
jmp
je
ljmp
lock
jb
pop
das
pop
push
xlat
lret
repz
popa
push
repnz
sub
dec
xor
out
and
jge
subl
pop
test
bound
xchg
mov
in
pop
add
inc
jecxz
out
stos
jns
jnp
or
in
loope
mov
jb
filds
mov
fsubl
jmp
xchg
dec
sub
sbb
pop
fcmovnbe
sbb
and
or
adcb
ljmp
mov
or
push
mov
jns
cmp
mov
mov
xchg
xchg
movl
adc
lret
decl
fimuls
rcll
repz
movsb
push
inc
jmp
cmp
repnz
clc
lret
and
loop
adc
cmp
mov
fstl
push
and
repz
cmpsl
jne
loopne
cmp
ret
xor
insb
jmp
adc
lahf
out
das
mov
out
aam
bound
test
or
rclb
cld
sub
push
mov
or
lret
jbe
fisubrl
pushf
push
cmpsb
popa
testl
cmp
push
cmp
out
mov
xchg
bnd
loop
lret
dec
neg
inc
enter
in
andl
lock
nopl
aaa
hlt
push
pop
ret
mov
scas
cs
daa
xchg
cmpsb
mov
cmpsb
cmp
outsb
xchg
cmp
in
mov
into
push
adc
addr16
in
xor
cwtl
jb
sub
rcrb
and
enter
cltd
divl
lea
cmc
cli
cmc
mov
sub
adcb
add
std
sarl
aas
rcrb
test
pop
hlt
or
arpl
pop
notl
mov
inc
jecxz
outsl
mov
aam
xchg
mov
not
bound
dec
les
xor
push
aad
cmovnp
pop
pop
mov
xchg
lcall
mov
jl
push
ss
xchg
sub
push
mov
gs
sbb
xor
or
in
xlat
mov
cmp
cmp
cwtl
fidivs
mov
enter
lock
fidivs
sbbb
int
dec
sahf
xchg
inc
pushf
fiaddl
outsl
jl
lret
sahf
testl
in
je
jle
xchg
jns
jp
or
lock
and
mov
mov
daa
pop
fbstp
movb
dec
mov
dec
adc
and
repnz
int
mov
mov
insl
jb
bound
cmp
and
repnz
int
mov
mov
insl
jb
bound
cmp
and
repnz
int3
xchg
mov
mov
insl
jb
bound
cmp
mov
inc
pop
fucom
mov
dec
bound
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
pushf
mov
int3
aas
scas
or
rol
inc
xor
and
cmp
dec
jb
pusha
insb
push
insb
inc
call
xchg
mov
outsb
in
sar
mov
xor
dec
adc
or
pop
bound
inc
xor
outsb
mov
ror
mov
fisubrl
aas
inc
inc
dec
pop
jno
and
and
mov
int3
lods
out
xlat
enter
ss
xlat
sbb
das
cwtl
jae
mov
or
js
pusha
cmp
sub
cmp
loop
pop
push
popa
xchg
jno
cli
pop
push
adc
push
or
mov
cmpsl
popf
je
dec
pop
mov
cmp
pop
push
sbb
xchg
inc
push
push
jb
mov
adcb
repnz
or
daa
ret
jae
popf
insl
mov
xchg
dec
mov
and
xor
push
cmpsl
fidivl
sub
lahf
xor
pop
arpl
add
lods
addl
mov
popa
adc
sbb
in
enter
setge
xlat
mov
push
lods
push
mov
loop
or
lret
in
add
add
push
lcall
out
mov
mov
mov
dec
addr16
pop
imul
xor
add
idiv
jecxz
repz
sbb
je
ja
gs
xor
in
ret
lahf
xchg
fsub
in
sar
ret
sbb
sub
cmp
dec
jb
bound
inc
mov
mov
loop
sar
ret
sbb
sub
cmp
dec
jb
bound
inc
mov
jl
add
roll
out
dec
dec
je
test
adc
mov
mov
mov
aas
cmp
sbb
mov
dec
sbb
ss
cmp
xchg
pop
adc
je
int
ret
test
cmpsl
jne
sahf
ret
in
inc
dec
mov
jo
clc
popa
inc
lea
fsubl
sub
aas
clc
jle
andl
or
add
in
dec
mov
mov
hlt
stc
fldpi
mov
and
mov
test
and
xchg
scas
push
pop
xor
aaa
and
push
pusha
pop
inc
into
inc
sahf
stc
or
test
pop
imul
add
xor
sbb
and
repnz
pusha
aam
cmp
or
cmp
jo
cmpsb
inc
inc
mov
aam
and
lds
xlat
stos
cmp
notb
jl
int3
popa
mov
shlb
jmp
sarl
ds
jne
js
jl
mov
jmp
mov
add
adc
cmp
xchg
or
fists
lds
fdivl
mov
les
mov
outsl
xchg
or
scas
push
int3
call
aaa
add
pop
iret
mov
mov
fsubs
in
les
sub
mov
test
in
lock
pop
push
stos
and
xor
cmp
pop
test
movsl
mov
outsl
fs
push
subb
js
cmp
mov
sbb
mull
cltd
rcll
push
ja
and
rcll
or
inc
loope
xchg
cmpsb
or
fimuls
insl
xchg
pop
hlt
test
jge
nop
adc
leave
testb
cwtl
ret
js
pop
aam
mov
mov
mov
lods
or
mov
and
ljmp
out
popa
repnz
mov
add
mov
das
sub
int
hlt
out
sti
imul
shrl
fildl
out
jae
fsubr
push
imul
inc
clc
and
pop
outsb
mov
les
cmp
and
mov
sbb
shl
lds
pop
jb
movsb
ss
xlat
notl
cmp
xchg
push
sbb
ljmp
loopne
lret
loope
pop
insl
loopne
ret
arpl
mov
jne
sub
or
xor
cld
inc
ja
mov
xchg
dec
fbld
add
in
ficompl
lcall
add
push
adc
out
jle
jo
pushf
ja
add
enter
jne
pusha
es
xchg
dec
sti
insb
cmp
sbb
xor
aas
push
loope
jl
xchg
pop
push
mov
daa
or
jne
mov
movsl
insb
outsl
inc
std
aaa
xchg
daa
and
mov
mov
test
outsb
cwtl
cmpsl
dec
addr16
mov
push
jns
dec
or
push
scas
ret
in
cmp
sbb
insb
add
lret
add
add
sarl
ss
enter
sarl
popf
pop
mov
ss
cli
loopne
jns
sbbl
dec
pop
js
ret
std
cltd
daa
jb
xchg
xor
out
dec
add
js
ja
lods
dec
loop
inc
dec
inc
ljmp
pushf
test
dec
push
sar
mov
xchg
popf
test
pop
lods
xchg
fistps
call
adc
lods
xchg
jle
stos
out
cmp
jnp
movsl
lcall
add
das
popf
or
scas
pop
pop
ja
dec
testb
int
mov
call
or
ret
call
clc
das
daa
in
xor
jbe
ja
push
stos
adc
call
pop
mov
cmpsl
in
test
bnd
movl
ret
mov
mov
mov
mulb
lcall
fdivs
inc
xchg
or
inc
adcl
leave
or
add
and
mov
dec
fs
adc
lock
gs
fs
rcll
lahf
sub
dec
arpl
out
js
stos
in
or
stos
push
push
insl
inc
dec
jb
pop
sti
out
cmp
mov
ret
inc
cvtpi2ps
sub
ljmp
in
inc
dec
loopne
push
insb
inc
xchg
push
jg
cmp
xor
push
iret
in
scas
in
inc
inc
add
sti
jecxz
and
in
lret
cmp
mov
int
imul
inc
mov
sub
xlat
enter
mov
hlt
fwait
pop
repnz
adc
popa
repz
jmp
or
scas
mov
inc
push
pop
mov
sub
xor
shrl
inc
xlat
arpl
test
cmp
cmp
outsl
lcall
fidivl
cmpb
or
test
repz
lahf
or
imul
mov
es
sbb
xor
mov
jns
jo
xlat
fsubrs
mov
fs
js
rol
clc
pop
or
pop
mov
cmpsl
jge
xchg
bound
sub
movsb
push
or
adc
mov
mulb
cwtl
fadds
push
lea
xlat
push
inc
sbb
int
xchg
cmp
push
push
adc
outsb
mov
dec
xor
and
jae
jmp
and
insl
lret
hlt
mov
jno
xchg
call
jp
xlat
pop
out
sbb
lds
insl
xchg
jl
push
push
mov
push
orb
mov
movsl
push
imul
pop
shrl
rclb
jae
add
adc
lret
sbb
jne
jo
dec
sub
sbb
jne
jb
loop
ds
jnp
pop
adc
mov
adc
push
push
xchg
insl
cmpsl
dec
out
mov
add
and
loop
jmp
cltd
pushf
stc
orl
inc
adc
inc
incl
dec
cmp
ret
cltd
jbe
les
xchg
adc
jle
imul
cmp
inc
adc
iret
sub
push
fsubl
fnstsw
out
pop
lcall
addb
dec
add
paddw
addl
fs
shll
jecxz,pn
mov
sahf
sahf
sub
movsl
pop
push
adc
and
mov
jae
rorl
imul
sahf
sbb
sbbb
inc
int3
jmp
mov
fistl
jecxz
push
dec
push
lods
incl
fcoml
mov
in
movsb
push
nop
inc
lods
and
inc
pop
inc
mov
shrl
aas
pop
sub
je
xor
mov
push
mov
xchg
aaa
aas
jmp
cmp
xor
add
popf
or
es
cmp
and
pop
leave
icebp
in
lcall
hlt
dec
nop
int
cmpsb
mov
sub
shlb
inc
mov
outsl
mov
repnz
dec
hlt
les
inc
push
into
inc
sub
das
jge
in
out
mov
ds
push
pop
test
mov
xor
push
orl
std
mov
fisttpl
push
ds
dec
dec
push
xchg
xchg
dec
cmp
repz
cmp
inc
dec
push
addl
loop
sub
nop
pop
out
sbb
inc
xchg
dec
enter
stc
mov
pop
test
xchg
pop
pop
sub
jmp
subb
add
adc
sbb
pop
jne
in
loop
mov
jecxz
jecxz
loopne
mov
dec
mov
shll
cltd
in
cmpsl
cmpsl
loope
movsb
cld
jg
imul
movb
das
dec
in
mov
ss
jle
xchg
push
and
mov
add
ljmp
sub
dec
mov
shrb
popf
mov
aam
aad
loopne
sbb
fs
aad
je
repz
dec
es
shll
jne
xchg
pop
push
imul
pop
jne
aad
mov
cmp
es
xor
mov
cld
jecxz
repnz
rcl
mov
in
push
cli
arpl
cli
xor
test
add
fnstcw
fs
stos
cmpsb
pop
or
orb
add
scas
std
es
add
dec
sub
decl
and
clc
ret
mov
dec
ss
jge
mov
in
cmp
xchg
push
loop
cmp
mov
sbbb
aaa
lret
ss
shr
jge
or
or
cmpsb
xchg
sbb
sbb
shl
rcll
int
add
bound
or
scas
mov
daa
gs
xchg
cmp
fs
cmpsb
or
imul
mov
push
lret
adc
lods
mov
lret
pushf
xchg
leave
stos
pop
push
mov
jecxz
dec
mov
xchg
popf
daa
push
xchg
mov
mov
scas
jnp
fdivrs
push
test
xchg
mov
ret
adc
push
aad
jae
out
fmul
lcall
ja
into
xor
xor
mov
shll
lock
clc
mov
sbb
jbe
repz
faddl
dec
pop
testl
jge
push
xor
mov
or
inc
push
or
and
and
movsb
xor
mov
dec
outsb
lcall
mov
jae
jl
sub
add
and
lea
data16
or
xor
mov
push
or
cli
sub
mov
lret
repz
into
cltd
lcall
loop
nop
jl
ss
out
scas
cmp
jbe
fistpll
and
adc
lret
shrb
dec
sbb
icebp
sahf
icebp
lds
aas
insb
jns
dec
xchg
in
sub
adc
fs
xor
mov
jmp
imulb
jp
ficoml
jns
mov
push
mov
inc
or
fwait
cmpsb
push
jae
loopne
mov
mov
jno
popa
popl
pusha
fildl
sub
test
jns
aad
add
cmp
mov
rorl
cld
adcl
addr16
outsl
sbb
rolb
sub
sbb
arpl
dec
test
rclb
cmp
sbb
pushf
and
mov
enter
xchg
mov
or
jns
adc
ss
inc
inc
mov
lret
sub
ficompl
or
loope
sub
out
sbb
cmpsl
push
or
hlt
ja
jle
inc
hlt
fmuls
fs
stc
mulb
andb
jg
mov
pop
lcall
inc
insl
sbb
push
push
xor
lock
adc
mov
or
xchg
rep
and
scas
mov
out
or
addl
add
cmp
pop
push
icebp
adc
cmpsb
or
loope
dec
rcll
xchg
cmpsb
ret
push
int
inc
push
mov
cwtl
mov
repnz
pop
mov
and
add
xor
std
or
add
mov
sub
or
cmp
add
or
je
pop
lock
ja
fcompl
out
shll
jae
push
mov
dec
dec
cmp
cmpsl
mov
inc
cmpsl
push
fdivl
in
loope
fldt
add
les
fs
outsb
roll
jo
inc
in
clc
mov
cmp
sub
pop
subb
out
test
mov
xchg
jne
or
xlat
nop
scas
mov
adc
pop
mov
xchg
repnz
sahf
out
push
mov
and
aam
mov
push
sub
adc
test
fs
cmpsl
in
jae
je
int3
jnp
inc
in
mov
aad
aad
push
jl
scas
pop
sbb
push
decl
int
or
mov
loope
mov
push
dec
xchg
pusha
outsb
sbb
ljmp
scas
mov
out
iret
xchg
movsl
stc
xor
adc
inc
add
mov
movsb
pop
outsl
adc
fdivl
jecxz
cld
xchg
dec
xor
movsl
adc
sub
mov
cmc
out
pop
hlt
xchg
ss
mov
push
dec
rcrl
nop
cs
or
xchg
pop
fdiv
mov
sbb
and
mov
out
aad
sub
shl
adc
fwait
cmp
dec
add
mov
cmpsb
xchg
push
xchg
sub
mov
push
adc
loop
or
insb
xor
cmc
sub
mov
sti
nop
cmp
add
pusha
arpl
neg
test
inc
mov
mov
jne
mov
call
cmp
insl
hlt
leave
jg
das
scas
nop
std
pop
test
xlat
clc
inc
pop
lahf
popa
add
enter
cmpsb
test
jne
fnsave
or
cli
stos
fidivl
inc
icebp
popf
add
cwtl
lods
ret
pop
cs
adc
sbb
add
inc
mov
adc
push
leave
adc
pop
inc
lahf
push
cmp
es
aad
push
push
xor
aaa
push
mov
cld
icebp
call
dec
add
fisubrl
mov
sub
mov
xor
out
dec
xchg
lock
mov
enter
jge
sbb
push
mov
xorw
add
daa
test
mov
fs
jmp
leave
lret
add
or
xchg
dec
into
mov
out
xchg
outsb
jge
ja
sbb
cld
iret
fsubrs
sti
cmp
cmp
nop
cmp
xchg
jge
out
les
sbb
sub
loop
and
mov
mov
lahf
ljmp
pop
jl
insl
in
aam
sbb
loopne
jl
mov
out
sbb
test
test
pushf
mov
mov
ss
dec
pop
inc
mov
or
popf
jns
lods
cmpsb
fldenv
and
repz
stc
fbstp
adc
test
push
xor
jmp
idivl
sbb
pop
mov
in
fidivl
xchg
cli
nop
and
cmp
inc
mov
inc
loop
faddl
cmp
adc
ds
mov
mov
sbb
enter
mov
aam
mov
jmp
andb
add
cwtl
test
mov
push
push
mov
jb
pop
mov
mov
mov
pop
jns
add
andb
scas
into
mov
lahf
test
xor
arpl
xor
insb
lret
pushf
dec
lahf
enter
fcomip
xlat
xchg
sub
aad
lcall
scas
dec
push
mov
popf
test
mov
mov
aam
clc
jg
sahf
les
mov
out
jnp
aam
pop
xchg
adc
add
aaa
lcall
mov
inc
xor
add
sub
lock
cmp
cli
xchg
outsl
xchg
icebp
loopne,pt
jb
inc
add
ret
pop
or
dec
pop
mov
adc
xchg
mov
push
es
jns
imul
mov
fisubrs
jmp
pop
mov
xchg
push
lcall
pop
cmp
xchg
jne
addr16
repnz
lcall
mov
adc
pop
pop
mov
test
or
test
mov
adc
out
ret
fistpll
xchg
shr
cmp
and
and
jmp
aaa
inc
arpl
lods
sbbb
xchg
call
pushl
add
xchg
sub
subl
inc
push
aad
stc
mov
jmp
xorb
mov
hlt
test
inc
lock
xor
fdivrs
hlt
sub
insl
mov
mov
cmp
ja
ret
rcr
and
push
inc
cmc
ja
cmc
pushf
sbb
push
cmp
dec
into
push
xchg
dec
movsb
cs
xchg
mov
inc
shrl
xor
dec
jbe
jle
outsb
mov
adc
leave
xchg
mov
in
xchg
stos
stos
mov
inc
add
loop
mov
rolb
add
mov
push
cmp
lahf
cmp
pusha
jns
push
or
loop
mov
addr16
xorl
ss
movsb
add
loope
loope
cs
pop
subl
mov
fcomps
xchg
int
pop
in
mov
aad
cld
data16
lock
dec
shlb
cmp
jae
cli
inc
cmc
and
or
push
fincstp
push
sbb
arpl
bound
gs
lea
add
or
iret
pop
shlb
jae
push
xchg
sbbl
xlat
or
loopne
aam
or
sbb
push
pop
sbb
mov
in
repz
xor
mov
fst
fildl
ljmp
mov
clc
in
lret
mov
lcall
push
mov
bound
inc
stos
dec
int
hlt
push
rorl
lret
inc
test
cmp
jl
outsb
fucom
data16
jmp
imul
xchg
loopne
inc
cld
mov
push
mov
clc
fidivs
mov
cmpb
dec
iret
sub
and
cwtl
sub
ljmp
sub
leave
xlat
mov
xchg
push
cltd
mov
loopne
loope
dec
movsb
dec
icebp
adc
sbb
arpl
inc
in
fsub
mov
and
data16
div
popa
ss
inc
adc
mov
sub
adcb
dec
dec
in
mov
mov
dec
test
lret
stos
add
sub
or
ja
add
xchg
les
mov
pop
pushf
push
stos
bound
fldcw
daa
jno
mov
mov
mov
mov
scas
ja
call
push
imul
call
out
in
test
mov
ljmp
jne
loope
cmp
ret
xor
gs
movsl
mov
mov
lds
jno
add
aad
cmp
mov
subb
and
cmp
push
lahf
scas
push
add
sbb
xor
mov
lret
and
and
sub
mov
push
jnp
jecxz
inc
movsb
popf
sub
mov
dec
cmp
sub
mov
cld
sarl
mov
stos
push
jge
pop
gs
and
sti
lret
xor
repz
jge
pop
scas
sbb
fsubs
stc
push
jecxz
ficomps
xor
cmpsl
xlat
mov
fldt
inc
fbstp
fldenv
push
jae
cs
mov
and
shlb
mov
scas
imul
into
xchg
repz
xor
aaa
mov
jp
jge
outsb
pop
and
mov
add
inc
lds
inc
or
or
gs
sbb
fimull
jne
jns
adc
dec
int
ja
js
clc
fimuls
clc
xchg
mov
shrl
push
stos
shll
inc
jl
int3
out
cmp
add
cmp
fildll
jge
mov
jmp
sahf
mov
fsubl
inc
fmull
adc
ss
bound
lds
xor
jae
incb
push
vucomiss
cmpsl
fldenv
push
xchg
hlt
jno
arpl
mov
mov
clc
ss
inc
in
sti
mov
mov
movsl
xor
loope
scas
adc
imul
mov
mov
nop
pop
arpl
sbbb
xlat
add
hlt
imul
std
jnp
dec
outsb
and
pop
xchg
fisubrs
push
insb
loopne
mov
fcomps
lret
xchg
push
xor
jg
mov
and
loopne
into
dec
movsb
adc
std
dec
mov
leave
mov
sub
cld
cmpsb
mov
mov
into
in
rcll
push
sbb
rcrl
cmp
lret
stos
repz
mov
xlat
lcall
rorb
test
fwait
sub
jnp
adc
jo
dec
sbb
mov
cmp
jmp
dec
jge
and
bound
orl
or
call
adc
lods
sbb
dec
adc
shll
jo
mov
lods
test
stos
inc
outsl
mov
mov
pop
xor
add
mov
dec
mov
mov
movsb
cmp
cmpsl
pop
imul
dec
lds
lea
jb
mov
or
pop
or
scas
or
pop
xor
xchg
inc
push
hlt
ljmp
sahf
loopne
inc
jnp
adc
shr
enterw
movlps
shl
shlb
mov
mov
insl
cmpsb
es
adc
adc
pop
push
outsb
sti
addr16
ss
test
inc
sbb
scas
lods
xor
push
cli
pop
xchg
sti
pop
xor
sub
push
insb
xor
jae
int3
in
subl
inc
dec
cltd
pop
jae
cmpsb
fistpl
scas
cmpsb
dec
popa
mov
sti
mov
jmp
orb
imul
pop
je
mov
cs
jno
xchg
in
cmp
mov
xchg
inc
lahf
mov
or
ret
or
lahf
dec
gs
mov
orl
fistps
lahf
sub
push
mov
or
shrl
xchg
adcl
sub
mov
lods
jnp
add
fstl
stc
ljmp
add
fcmove
cmp
jle
fucomip
add
arpl
mov
jmp
mov
loop
sar
ret
sbb
sub
cmp
dec
jb
bound
inc
mov
mov
loop
sar
ret
sbb
sub
cmp
dec
jb
bound
inc
mov
mov
dec
in
sarb
or
sbb
fcoml
cmp
dec
jb
bound
inc
cwtl
mov
mov
int3
repnz
loop
push
jl
or
jecxz
xchg
cmp
cmp
aam
xchg
lods
cmpl
cwtl
ret
stc
or
mov
enter
and
inc
or
jns
imul
mov
ret
clc
mov
lods
jb
bound
xor
inc
or
sbb
add
mov
ret
clc
mov
enter
or
jge
push
ds
xor
cmp
loop
sahf
lret
xchg
in
cmp
pop
imul
popa
aam
inc
adc
icebp
mov
inc
cmpsl
mov
repnz
push
testl
out
sbb
sbb
cli
sbb
jecxz
fisttpll
dec
mov
sub
sbb
testl
add
mov
push
xchg
aad
test
lea
fidivs
rolb
xlat
push
fisubrs
mov
sub
sbb
test
stos
pop
xchg
mov
cmp
popa
sub
xchg
xor
test
loope
mov
push
mov
arpl
inc
inc
lea
mov
daa
insl
iret
testl
add
rcrb
mov
enter
sub
inc
or
js
push
xchg
mov
icebp
mov
out
sbb
xor
or
das
jg
jbe
lods
aam
les
mov
cli
out
pop
cvtps2pd
jg
pop
jns
push
incb
sbb
sti
mov
loop
repz
xchg
fadds
sub
inc
or
js
push
repnz
ret
clc
mov
enter
sub
inc
or
js
push
repnz
nop
dec
rorl
sub
sub
shrl
fbstp
sbb
or
cmpsb
ds
shlb
bound
sub
mov
ss
imul
cmpsl
sti
dec
enter
mov
xchg
jno
push
mov
lret
repz
enter
cmpsb
add
jbe
ret
cmpb
cmpsb
out
orl
pop
int
sub
pop
imul
or
shl
dec
or
lret
sbb
pavgb
jo
xchg
stos
cmp
xor
xlat
adc
addb
inc
insl
mov
pop
push
cli
in
repnz
lea
data16
xchg
and
pop
lods
lcall
mov
ja
push
add
dec
mov
mov
xchg
sahf
sub
jmp
jno
icebp
mull
popa
jp
mov
cmpsl
cmp
dec
xor
cmp
sbb
mov
and
or
xor
cmp
cmp
and
add
and
das
mul
shr
enter
lea
andl
push
enter
pushf
xorb
das
mov
adcl
push
mov
adc
mov
xor
mov
shl
add
pop
pop
sbb
les
mov
add
xchg
test
xchg
shrl
mov
push
pop
dec
flds
push
jbe
pop
jl,pn
fbld
test
cmp
out
cmp
ja
jecxz
and
jbe
clc
and
and
push
scas
mov
rcrl
lods
mov
add
jne
mov
outsb
jmp
cmpsb
push
imul
pusha
adc
adc
imul
test
push
out
sub
mov
mov
add
xorb
mov
orb
mov
sub
ret
inc
add
xor
sbb
mov
stos
imul
stc
mov
xchg
xchg
fsubrl
adc
lods
hlt
dec
ds
jp
popf
out
mov
scas
stc
push
leave
mov
jle
mov
stc
inc
and
in
popa
aas
sti
push
sbb
xchg
push
cmpb
xor
dec
popf
inc
cltd
jns
push
cmp
push
sub
out
outsb
xchg
loope
loope
jl
xlat
dec
and
mov
adc
push
jp,pn
sbb
fwait
clc
lods
xor
mov
imul
fwait
jo
or
scas
mov
shlb
test
mov
outsl
cmp
dec
mov
mov
mov
scas
dec
fimull
sbbl
es
loope
movsb
or
js
push
push
push
aad
jp
lds
mov
out
sub
cmc
xor
mov
cwtl
sbb
icebp
das
mov
jle
mov
inc
cmpsl
rclb
out
cmp
movsb
dec
adc
adc
ret
push
fs
hlt
popa
repz
addr16
aam
sub
and
fistl
mov
je
xchg
lcall
scas
pop
rcr
mov
cmc
dec
cwtl
enter
adc
icebp
mov
pop
push
sbb
cmp
mov
and
and
sbbl
test
out
pop
rcl
cmpsb
in
push
in
xchg
stos
ffree
leave
lea
ss
sbb
pop
imull
int
jbe
je
ds
push
dec
mov
sub
test
mov
mov
aam
cs
xchg
cmp
or
int
hlt
jle
sti
push
fistl
xor
and
data16
lret
lret
push
jp
aam
mov
jg
fistpll
popa
fbld
jb
sbb
setne
add
pop
aaa
xchg
aad
pop
icebp
dec
mov
sbb
andb
into
push
mov
sub
popf
dec
bnd
dec
int3
in
mov
imul
sar
dec
jb
mov
dec
aaa
pop
in
dec
jo
daa
repz
xchg
inc
das
mov
je
lods
xchg
push
rcrb
test
ljmp
repnz
dec
mov
mov
dec
sub
xchg
lods
and
fisubrs
mov
push
pop
outsl
aam
out
xor
out
lock
data16
mov
fs
pushf
xchg
dec
and
popa
push
aad
lds
xchg
sbb
ficomps
push
test
lods
outsb
cmp
mov
test
push
add
std
insb
test
test
fcomps
dec
jno
into
push
push
psubusb
jno,pt
push
int
dec
int
lret
push
iret
cmp
shlb
mov
pop
aaa
or
sahf
inc
or
mov
mov
mov
dec
outsl
lahf
sti
xchg
xor
or
int
cs
shlb
popf
or
add
push
andl
push
xor
lret
testl
mov
xor
outsb
jg
loope
ret
pop
int
xchg
nop
mov
fldcw
sarb
mov
sub
add
shrl
outsb
xchg
adc
leave
pop
xchg
cmp
xor
dec
sbb
lret
dec
push
jp
ljmp
rorb
outsb
jg
fyl2xp1
add
mov
jle,pt
pop
add
rcrl
mov
test
fisubrl
inc
add
push
cmp
std
repz
mov
cli
xor
cmp
or
mov
clc
in
cmp
addr16
push
subl
shl
pop
cmp
pop
movsl
aam
sbb
sub
clc
jne
dec
enter
pop
xchg
pop
push
mov
mov
or
push
sti
pusha
mov
mov
jns
je
lret
imul
scas
xor
jmp
or
push
nop
dec
pop
jle
mov
mov
xchg
jge
push
sti
add
leave
popa
mov
ficoms
mov
movsbl
ja
xlat
ljmp
pop
shll
add
je
in
adc
push
loope
sub
pushf
push
shll
adc
jge
repnz
cmp
sub
outsl
arpl
mov
sbb
out
into
push
push
and
ds
jb
push
mov
repz
jb
mov
ss
out
and
sub
test
mov
mov
sub
inc
stos
cld
mov
adc
out
adc
out
loope
xor
inc
mov
xor
adc
mov
insl
lcall
mov
sbb
adc
js
or
fcmovb
mov
sub
adc
jle
inc
lahf
xchg
sti
sarb
mov
addr16
jo
cmc
fdivl
mov
dec
clc
cmp
adc
decl
icebp
fisubl
mov
pop
jo
adc
out
pop
outsb
inc
out
sbb
rcr
js
jb
pop
bound
js
inc
loopne
rcl
enter
mov
das
push
xchg
insl
ret
out
rol
sbb
enter
mov
pusha
adc
bound
bound
dec
mov
pop
sub
jnp
mov
and
gs
inc
gs
int3
out
in
xchg
popf
pop
addr16
mov
xchg
fidivs
mov
jl
mov
add
add
popl
sub
mov
subl
cld
int3
sub
mov
mov
test
adc
xchg
fisttpll
jp
mov
pop
dec
mov
pop
imul
call
fbstp
and
sbb
dec
xchg
push
and
mov
ficoml
mov
dec
orl
int3
mov
push
fists
dec
insl
pop
dec
push
or
ss
cltd
add
mov
mov
adc
sbb
or
sub
inc
mov
xchg
roll
xor
rorb
adc
data16
mov
xlat
data16
std
rcl
fs
xchg
js
lret
or
mov
scas
adc
divl
xchg
mov
cli
in
inc
andl
gs
imul
in
inc
jecxz
sub
cwtl
popa
pop
out
movsl
push
jbe
test
jo
cs
je
sbb
cmpsb
icebp
adc
xor
lret
sub
jl
arpl
lds
pop
out
or
push
movsl
in
nop
cmp
sahf
test
icebp
xchg
mov
stc
or
and
fcoml
icebp
sub
adc
jb
dec
xchg
mov
push
pop
aad
mov
outsb
lods
repz
jbe
jbe
xlat
sti
idivl
int
inc
sti
dec
cmovnp
daa
js
aaa
adc
xor
loopne
cmpsb
sub
inc
das
cwtl
push
stos
jg
dec
scas
frstor
das
mov
mov
stos
mov
mull
push
cmpsb
cmp
leave
dec
mov
in
je
loop
pop
repnz
aas
aam
dec
ret
xchg
imul
or
push
scas
or
enter
fisubrl
and
ljmp
cmp
jo
lock
pop
aad
in
lea
scas
pusha
popa
sbb
sbb
icebp
mov
sub
outsb
orl
and
inc
dec
xchg
inc
cli
xor
add
mov
stos
push
push
dec
or
in
sbb
mov
dec
pop
push
jno
iret
stos
gs
mov
rclb
pushf
pop
aad
inc
pop
pop
cmpsb
inc
or
pushf
push
or
cmp
pop
aas
push
fs
dec
icebp
in
icebp
xlat
or
push
cld
fcomi
test
fdivl
dec
mov
jne
mov
sbb
jle
dec
in
mov
jb
es
stos
sub
loope
mov
test
shrl
test
xlat
stc
fcoms
add
or
repnz
fs
ret
nop
leave
push
cli
xor
std
int3
xchg
movsb
popf
and
in
mov
out
int
insl
dec
shll
sub
jecxz
or
fistpll
idivl
jae
int3
into
jl
cmp
test
cli
dec
jno
hlt
adc
sub
pop
and
cmp
push
leave
flds
pop
cmp
lret
notl
stc
outsl
fwait
push
push
arpl
push
xor
dec
fildl
loope
mov
adc
xchg
imul
adc
cmp
jge
call
stos
jmp
add
loopne
inc
adc
cmc
ja
xchg
xlat
lahf
add
xchg
sbbl
xchg
dec
dec
push
in
or
sbb
rolb
xchg
fisttps
add
mov
cmp
movsb
sbbb
aam
pop
lahf
sbb
fists
mov
dec
das
push
shrb
leave
enter
or
mov
stc
daa
and
add
aam
bound
ss
icebp
dec
imul
jmp
stc
push
or
push
jecxz
mov
insb
stos
test
sbb
cmp
aam
sbb
push
cmp
cs
fwait
dec
adc
adc
jno
pop
mov
push
bound
jp
add
test
mov
popf
outsb
cltd
loope
dec
loope
xchg
inc
dec
aas
sbb
ss
stos
cld
xchg
xchg
lret
dec
jmp
push
sar
cmpsb
mov
in
rcr
negb
test
aas
addr16
test
ja
push
adc
ja
or
sahf
nop
mov
lcall
mov
adc
xlat
and
je
pusha
adc
mov
inc
test
nop
sub
test
push
add
dec
int
push
lock
pop
int3
hlt
dec
popf
cmp
mov
mov
inc
lods
or
push
mov
mov
pop
mov
repnz
je
jae
push
js
das
mov
stos
insl
or
jne
popa
dec
das
mov
add
xchg
repz
ljmp
push
lods
fs
and
insb
jmp
leave
cltd
xchg
andl
cld
mov
lods
lods
adc
adc
mov
add
popa
out
sub
lods
sub
mov
leave
leave
call
cli
dec
push
adc
push
mov
loop
ror
fildl
fdivrs
outsl
xor
or
cmpsl
or
arpl
dec
fidivl
loopne
inc
mov
mov
xchg
adc
xchg
mov
in
dec
jb
add
dec
sub
rorl
aam
cmp
dec
daa
mov
push
jbe
mov
mov
ret
mov
ja
ss
xor
into
repnz
daa
and
mov
fs
movb
pop
mov
push
mov
or
mov
sub
xchg
aam
stos
sub
xchg
fisttpll
leave
mov
mov
js
jmp
or
out
xchg
dec
les
push
mov
adc
fcomps
sbb
lcall
or
mov
ljmp
fdivrs
adc
dec
test
popf
xor
outsb
cmp
pop
mov
enter
fsubs
out
fldl
push
sub
into
cmp
lahf
das
inc
vpavgb
aaa
decl
sub
test
cmp
jo
cmpl
je
add
push
fwait
loop
test
jae
pop
dec
jne
adc
scas
imul
sub
sbb
push
jmp
jle
loopne
cmp
pop
mov
and
mov
mov
cmp
push
xor
mov
shlb
or
dec
jl
sbb
jle
adc
dec
jae
stc
jae
xchg
loope
or
nop
imul
or
sub
pop
roll
or
inc
dec
lea
adc
xor
and
pushf
adc
fmull
jl
sbb
inc
sub
sbb
inc
arpl
sub
jo
ljmp
pop
xchg
xchg
jbe
and
mov
fisttps
repz
mov
cmp
fsts
fnstenv
adc
xchg
ret
addr16
inc
enter
jecxz
xchg
pop
lret
stos
frstor
outsl
orb
adc
sarl
js
mov
mov
cwtl
xchg
dec
inc
mov
mov
out
push
clc
sbb
out
sbb
es
cmp
inc
pusha
dec
std
jns
xor
addl
mov
sahf
xchg
test
js
sbb
cmp
mov
and
pop
test
into
aam
xchg
xchg
rcll
push
insl
test
insb
scas
push
lcall
sar
pop
vxorps
call
or
pushf
mov
dec
and
arpl
dec
xor
ret
push
cmp
push
iret
bound
xor
dec
rorl
xor
jl
xor
xor
xor
mov
add
out
and
or
ss
fcoms
jae
pusha
adc
lods
jbe
push
cmp
pop
shlb
repz
adc
std
out
cmp
jl
in
and
sti
mov
xor
or
jbe
fldl
push
mov
out
sub
jecxz
sahf
lods
rol
leave
movsl
sbb
and
push
mov
pop
aaa
lahf
jns
xlat
sub
arpl
pop
inc
jmp
lcall
mov
or
int3
mov
lds
and
ret
stos
push
adc
mov
sbb
jmp
jl
dec
ljmp
mov
inc
cmc
out
test
insb
sub
jae
mov
and
outsb
add
cmpsb
pushf
dec
stos
push
or
ljmp
mov
fstpl
mov
pop
je
sbb
leave
jno
xchg
xchg
pop
mov
rol
iret
in
jns
int
out
push
or
xlat
push
xchg
xor
leave
dec
mov
rcr
fnstsw
push
push
mov
push
and
mov
nop
cmp
pop
pushf
sbb
sbbb
mov
or
xlat
xchg
rolb
and
jnp
mov
xor
ffreep
mov
test
cmc
call
inc
iret
cmp
les
mov
push
cmp
cmp
jne
ja
jecxz
lods
sub
push
popa
lcall
pop
into
add
fwait
sbb
ret
into
out
xor
jno
outsl
or
push
mov
fildl
xor
inc
test
push
pop
and
das
nop
push
pop
and
ds
gs
jnp
mov
mov
fucomi
fisubrs
mov
xor
pop
push
push
xchg
fsubl
adc
mov
xlat
nop
into
pop
sub
cmp
cmpsb
bound
jmp
decb
mov
cmpsl
sbb
daa
add
xor
cmc
xor
mov
dec
fwait
xchg
out
add
mov
push
imul
in
pushf
loopne
fs
push
pop
jnp
in
xchg
bound
gs
imul
shrd
xor
js
mov
sarb
lcall
or
push
cmp
loopne
dec
xor
nop
loop
adc
jle
mov
cmpsb
lea
jecxz
adc
call
push
out
stc
pop
testb
push
shll
je
test
in
inc
in
mov
push
pusha
int3
aaa
movl
push
mov
pusha
fcoml
sbb
loopne
rorb
fwait
pop
pop
xor
inc
xchg
jl
fadd
movsl
sbb
iret
pop
or
cmp
sti
rcl
scas
add
out
pop
imul
filds
push
xor
sub
sahf
pushl
imul
push
jae
in
fadds
lock
xor
adcb
pop
fdivl
divl
cmp
fistl
cmpsb
and
int
aas
mov
xor
test
push
or
sahf
cmp
and
fildl
fnsave
xchg
xchg
adc
mov
cltd
cmpsb
aad
push
cmp
outsl
and
sti
xlat
push
int
push
ret
xor
out
jge
dec
out
cli
add
ljmp
add
jb
jo
add
repz
mov
fsubp
lock
mov
or
sbb
cmp
or
sets
mov
jno
les
in
addr16
arpl
cltd
rclb
imul
data16
inc
insb
inc
xor
pop
and
xor
lods
add
imul
scas
ljmp
sahf
jbe
dec
sar
mov
lret
fmulp
push
and
adc
dec
xor
adc
data16
and
mov
sub
inc
loope
inc
xor
xor
pop
mov
pop
cs
xchg
ss
pop
insl
lods
enter
sub
and
lcall
lahf
in
jbe
xchg
or
rclb
dec
insl
add
mov
mov
xor
xchg
loope
xchg
and
imul
fidivl
and
inc
mov
fisttps
out
roll
mov
sub
mov
adc
and
or
sti
arpl
dec
cmc
pushf
xchg
dec
pop
fisttpll
inc
lods
mov
mov
xor
xchg
aam
sub
adc
fcomp
jge
sub
mov
clc
cmp
out
rol
aam
aam
sub
adc
mov
into
int3
xchg
enter
xor
cmpsl
stc
pusha
out
dec
lock
xchg
inc
inc
ja
dec
lcall
das
shll
dec
stc
and
imul
loope
inc
inc
ret
shrl
mov
push
inc
push
and
cmp
ret
cld
int3
push
imul
push
dec
mov
sbb
xchg
das
repnz
jae
les
jbe
mov
pop
xchg
andl
cmp
aaa
les
sbb
dec
pop
add
mov
jl
and
and
cmp
mov
iret
pop
int
or
das
lahf
call
pop
mov
pusha
dec
out
cmp
loopne
push
xor
dec
dec
rcll
stos
push
pop
shll
add
mov
subb
imul
pop
ds
ds
pop
cltd
mov
or
or
sub
mov
scas
emms
push
rorl
adc
mov
add
inc
sbb
mov
fisubrl
push
iret
imul
test
adc
shl
cltd
movsb
sub
int3
sar
mov
cli
adc
push
in
js
aam
add
cmp
add
fnsave
iret
ljmp
mov
test
sbbb
js
lods
pop
test
or
fstpl
and
stos
decl
out
jnp
jle
popf
idivb
es
xor
shr
sahf
out
repnz
loopne
dec
sub
shlb
xchg
dec
cld
nop
add
or
jne
cmp
fwait
rorb
nop
dec
add
call
ss
stos
push
mov
ds
scas
js
add
imul
scas
push
ret
aad
loop
mov
add
lcall
orl
xchg
fbstp
push
jo
push
in
jns
inc
jle
sub
mov
fs
pop
sub
addl
daa
dec
mov
mov
mov
daa
lock
hlt
out
pop
sbb
dec
stc
xchg
inc
shll
pop
jnp
bts
inc
repz
mov
mov
inc
sbb
scas
sbb
int
int
mov
idivb
adc
rorl
inc
push
push
cmp
xchg
rcr
xorl
jae
ss
cwtl
in
push
test
cwtl
ret
clc
mov
enter
sub
inc
or
js
push
repnz
ret
clc
mov
enter
sub
inc
or
js
push
repnz
ret
clc
mov
enter
sub
inc
or
js
push
repz
ret
clc
mov
or
bound
inc
lock
xchg
in
cmpsl
std
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cld
lret
lock
mov
jg
aas
mov
mov
add
add
add
add
pop
push
add
mov
add
push
cmpsl
add
add
mov
faddl
js
ltr
add
add
add
add
pop
add
bound
addb
add
popa
add
and
jmp
add
add
add
mov
popa
add
add
add
add
add
add
add
add
push
add
add
add
add
add
cmp
jge
pop
add
sahf
add
jo
adc
add
push
add
add
add
add
mov
or
add
add
jne
imul
add
add
add
add
add
add
add
mov
xchg
add
add
sub
cmp
icebp
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
xor
add
add
cmp
jo
xor
mov
daa
add
jge
faddl
jecxz
popa
add
add
add
add
add
add
add
add
add
add
lea
leave
add
add
add
add
add
add
sbb
xor
dec
add
add
add
add
add
add
add
cmp
jl
scas
add
add
add
pop
add
add
sbb
jge
iret
add
movsl
add
add
add
add
lret
add
push
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
pop
add
lock
add
sbb
xor
cmp
jmp
add
add
add
add
add
add
push
cmp
out
add
and
xor
lock
mov
push
add
add
add
add
or
sub
mov
and
lret
add
push
add
add
add
add
xchg
add
jo
add
xchg
cmp
pop
add
leave
add
add
add
add
add
add
add
imul
stc
add
int
sbb
add
add
jmp
in
test
add
push
add
add
add
add
add
pop
add
add
add
add
mov
and
add
add
add
add
jge
add
stos
add
add
incl
sub
mov
add
add
add
add
add
add
add
mov
add
sub
nop
add
repnz
add
add
push
add
add
add
int
push
add
add
or
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
xchg
add
inc
add
jmp
add
add
jnp
mov
add
push
add
and
popa
add
add
add
push
add
add
add
add
push
add
dec
add
enter
lea
xchg
add
add
add
add
pop
fnstcw
xchg
in
cld
lea
test
xor
cmc
cmc
loopne
in
and
movsl
mov
push
je
inc
xor
xchg
cld
stc
mov
lcall
jne
insl
sub
adc
push
mov
pop
mov
jbe
xlat
jmp
pop
imul
adc
shll
pop
pop
jb
push
shrb
loop
popa
out
ljmp
inc
aaa
shlb
xchg
dec
jno
and
dec
mov
mov
in
cmpsb
adc
lahf
mov
clc
movsb
mov
mov
dec
loope
sbb
jne
shrb
push
jg
lock
mov
fidivl
mov
dec
int3
xor
fsubrs
out
cmp
mov
cwtl
dec
xor
or
add
lock
outsl
scas
loopne
sbb
or
mov
jo
mov
mov
fists
cmp
dec
dec
inc
sub
pop
jno
shll
into
jmp
into
mov
in
lcall
xchg
lahf
sbb
popa
or
push
mov
sub
cmp
test
bound
sub
stos
fdivrl
sbb
fcomip
push
rcrl
fmul
push
fcomps
push
or
add
xchg
jbe
push
enter
pop
cwtl
mov
sbb
inc
stos
inc
inc
dec
push
sbb
dec
jmp
jnp
sahf
xor
les
push
jmp
ret
not
xor
pusha
inc
orl
mov
adc
gs
dec
shl
jno
add
mov
push
jae
pushf
cwtl
pop
lret
sbb
push
sub
push
fcmovbe
negb
and
bound
xor
sbb
cs
sarb
pop
movb
negl
rorb
mov
outsl
pop
inc
mov
in
sarb
pop
mov
add
pop
ss
insb
shl
sbbb
popa
mov
out
adc
jb
popa
adc
lret
dec
test
jne
aaa
jmp
mov
dec
pusha
lea
push
mov
mov
mov
jp
scas
outsl
adc
add
push
push
loopne
cmpsb
ret
cmp
mov
add
cwtl
push
pop
std
push
sbb
mov
into
int
jge
dec
jmp
sub
pop
int
mov
jno
xor
pop
imul
aaa
mov
hlt
sbb
mov
sbb
mov
push
xchg
andl
push
pop
push
inc
icebp
cmp
stc
in
lcall
pop
outsl
inc
stc
sbb
out
xchg
stos
pop
inc
push
loope
pop
outsb
dec
pusha
fsubrl
xchg
jp
fcoml
imul
lds
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
