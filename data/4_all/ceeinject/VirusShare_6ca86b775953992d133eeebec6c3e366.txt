call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
out
mov
test
hlt
ljmp
and
das
and
je
and
push
pop
inc
dec
mov
lahf
test
aam
and
jo
pcmpeqb
outsl
push
pop
inc
dec
lods
sbb
stc
in
iret
std
cmpsl
int3
aad
std
xor
das
or
jle
jge
sub
or
sub
movsb
out
fmul
ljmp
pop
cmp
rcr
pop
call
arpl
add
mov
xchg
jo
ljmp
std
rcr
jmp
or
push
xor
xlat
movsb
neg
movb
adc
push
das
fcoml
push
sti
icebp
mov
mov
scas
je
jg
cmp
les
mov
pop
push
icebp
push
loop
mov
pop
push
int
lock
int3
and
les
aam
cmp
fstpt
incl
ficoms
mov
push
fucomi
or
mov
sbb
scas
out
into
lret
insb
fstpt
leave
add
sub
movsb
xchg
jmp
in
out
aam
fstpl
aas
cmp
or
sbb
adcl
shl
loopne
nop
pop
mov
inc
jl
pop
mov
sbb
add
xor
and
mov
movsb
jmp
subb
cld
ss
and
push
dec
jno
adc
pop
outsl
and
inc
cmp
int3
xchg
dec
icebp
repz
mov
iret
xor
and
adc
add
je
outsl
push
pop
inc
dec
mov
movsb
scas
xchg
lahf
test
aam
iret
xor
and
adc
add
je
outsl
push
pop
inc
dec
mov
addr16
int
in
popa
fistpl
pushf
lock
push
ljmp
aam
pop
jmp
pop
pop
xchg
lods
insl
inc
jb
cli
dec
rcrl
lock
fdivrl
dec
mov
loopne
popf
adc
mov
and
jecxz
and
decl
push
xchg
jp
mov
push
fcomps
xchg
push
push
pushf
mov
cli
repnz
cs
jbe
xchg
notl
fwait
jbe
jne
push
adc
into
and
shrl
pusha
inc
push
xchg
out
jmp
es
push
push
jbe
fisubrs
jge
cmp
add
dec
inc
in
and
pop
mov
call
xor
adc
xchg
repz
je
in
loopne
shll
push
stc
test
xchg
mov
mov
dec
and
das
push
jno
ret
jg
sahf
cmp
adc
dec
stc
and
push
loope
ror
xchg
cmpsl
sub
adc
aas
adc
adc
pop
lods
icebp
inc
mov
test
mul
xorb
xchg
fisubs
nop
pop
xor
int3
jmp
push
jae
lret
mov
clc
jno
adc
mov
dec
movsl
insb
push
dec
mov
or
pop
inc
jecxz
negb
jns
or
call
pop
enter
jl
orb
jge
stc
inc
add
or
outsl
xor
in
les
mov
in
and
fwait
std
inc
adc
loop
adcb
testl
dec
push
sbb
pop
mov
jmp
sub
sub
xor
mov
mov
into
in
add
fistpll
pusha
orl
sbb
call
lea
mov
jbe
inc
jge
sbb
sbb
push
pop
pop
aam
test
cmc
push
popf
mov
int
cmp
imul
mov
int3
mov
push
in
mov
push
adc
outsl
stc
and
in
inc
dec
aad
pusha
stos
inc
ds
or
mov
cmp
std
test
loopne
push
pop
add
aaa
pop
in
cli
and
jmp
xor
decb
jbe
and
push
lds
lret
push
sub
popf
out
xor
les
pop
fists
pop
lea
rcl
leave
test
cmp
stos
int3
mov
or
jecxz
jno
inc
sarl
bound
sbb
cmp
sbb
mov
mov
mov
mov
rolb
je
push
jg
dec
cmpsb
pop
inc
mov
lahf
mov
pushl
lds
iret
push
xor
jecxz
call
xchg
mov
mov
dec
or
add
ds
test
lods
cmpsl
mov
inc
sahf
mov
jecxz
mov
jl
xor
test
jp
mov
dec
add
pushf
ja
dec
sub
dec
jae
pop
iret
adc
xchg
cmp
out
sbb
pop
addr16
gs
pop
dec
xor
jns
movsl
push
rcrl
cld
icebp
adc
int3
xchg
pop
stos
jb
xchg
test
jo
ret
mov
mov
cmp
outsb
adc
sub
pop
mov
inc
sbb
popf
sbb
and
pop
frstpm(287
mul
inc
adc
int3
pop
push
dec
or
mov
aad
int3
testl
mov
cmpsb
movsl
inc
jge
mov
aaa
xor
in
push
mov
adc
scas
in
negb
adc
loopne
cmp
ror
pop
adcb
addb
in
mov
aas
stc
push
iret
and
xor
pop
in
lahf
std
mov
inc
aam
pop
push
mov
mov
std
inc
sub
push
jg
mov
cmp
sahf
cmp
or
adc
lea
add
adc
sub
dec
es
jnp
pop
cmp
enter
mov
aam
es
xor
and
jmp
dec
inc
filds
mov
jg
clc
pop
jmp
imul
adc
mov
push
decb
fwait
icebp
jns
add
mov
dec
cltd
or
and
cwtl
in
js
or
lahf
test
ds
iret
xor
inc
stc
mov
fcoms
inc
mov
call
and
outsb
or
mov
jne
dec
ljmp
pop
jg
mov
or
sbb
pop
icebp
and
divb
cmp
jge
sbb
cwtl
sahf
cmpsb
sbb
sub
inc
xchg
enter
jp
lea
repnz
loop
push
pop
lcall
dec
lea
shrl
shl
dec
or
fiaddl
push
cmp
pusha
mov
inc
push
std
ja
loop
jl
test
rolb
jg
je
xor
jb
mov
pushf
dec
push
sub
sbb
add
and
sub
or
add
mov
lock
mov
hlt
mov
mov
je
mov
xchg
jnp
movsb
push
outsb
push
mov
fistps
int3
dec
test
repz
divps
rorl
addr16
and
cmp
rcrl
jne
test
les
sbb
xchg
fyl2xp1
sti
inc
dec
push
icebp
aad
test
popl
dec
repnz
movsb
cmc
imul
pop
mov
jne
movsb
mov
pop
iret
aad
adc
stc
push
xor
mov
les
int
dec
out
cmp
pop
mov
insl
mov
jg
pop
aas
mov
shlb
gs
mov
push
pop
jno
sub
into
push
mov
jne
test
repz
xor
ficoms
rcrl
ljmp
or
mov
into
test
fwait
sbb
adc
cmpsb
lods
xor
sub
jl
fldcw
push
stc
sub
and
fidivl
cmp
or
add
int3
inc
notl
movsl
sbb
dec
xor
push
mov
push
aas
jo
insl
gs
outsb
outsl
sbb
scas
out
out
and
fcomps
push
adc
add
mov
addb
mov
cmp
sbb
cwtl
xlat
add
jno
mov
mov
das
sbb
push
and
cmp
mov
dec
pop
inc
mov
inc
mov
dec
xor
or
loop
aad
add
and
out
cs
call
xor
push
pop
and
sbb
cmpsl
pop
lret
adc
mov
or
cli
cltd
pop
ficoms
imul
addl
push
cs
dec
movsb
fistpl
sub
mov
lea
xor
xchg
setne
jnp
mov
pop
out
rcr
imul
rcll
dec
mov
subl
inc
sbb
sbb
dec
hlt
mov
mov
jne
jmp
xchg
dec
mov
lds
sub
push
mov
pop
xlat
lcall
cmp
enter
mov
push
pmuludq
jbe
mov
pop
out
cmp
adc
es
mov
divl
lret
gs
cmpsb
andb
pop
test
mov
jmp
test
xchg
adc
jo
or
test
cmp
ljmp
adc
out
jp
cmpb
push
sbb
pop
insl
cmp
mov
lea
scas
je
dec
insb
pop
cmpsl
xor
mov
imul
jp
fsubrl
subb
sub
test
lahf
aad
sarl
ds
jge
daa
mov
loop
mov
xlat
add
pop
call
xchg
ljmp
push
dec
jecxz
push
sub
xchg
cmp
xchg
test
mov
popa
scas
scas
sub
or
imul
je
pavgw
fiaddl
aad
outsl
mov
js
shlb
or
jecxz
mov
push
test
inc
xor
outsb
aaa
ss
mov
inc
jne
xor
orl
js
mov
jl
test
cmp
rclb
cmp
mov
js
sub
addr16
jp
aam
pop
out
in
loopne
loopne
movsb
mov
mov
cwtl
sub
icebp
lds
sti
adc
pusha
pop
mov
jne
jmp
adc
shrb
xchg
mov
stc
add
imull
xor
sbb
or
pop
lods
test
push
ror
out
pop
sbb
xchg
add
mov
adc
jb
call
in
dec
in
mov
or
mov
fidivl
ret
loopne
pop
andl
jbe
fadds
jae
rcrb
adc
push
in
mov
roll
pop
xor
je
push
mov
cwtl
xchg
dec
and
jnp
popa
outsb
mov
sahf
mov
mov
add
jg
mul
fwait
lock
aad
je
addb
pop
outsl
inc
pop
test
sbb
xchg
arpl
mov
lods
dec
jmp
xor
imul
fwait
shl
push
pop
push
inc
nop
push
test
jo
add
in
mov
xor
push
ljmp
sti
mov
imulb
mov
inc
repnz
and
mov
mov
mov
jmp
movsl
mov
inc
nop
ljmp
ljmp
out
lret
mov
lods
cmpsb
js
push
or
lock
jae
mulb
fidivs
add
cmc
lret
es
xor
imul
and
jg
in
push
push
repnz
enter
cmc
das
ljmp
dec
outsb
and
xchg
add
jmp
cltd
cmp
add
dec
cltd
cmpsb
in
mov
gs
xchg
push
xor
loopne
dec
iret
or
and
inc
in
add
test
xchg
in
in
rcll
jmp
jne
dec
flds
or
scas
pop
es
mov
ret
sub
xchg
loopne
ret
and
xlat
push
mov
loop
std
bound
mov
popa
in
pop
mov
pop
fdivrs
adc
or
add
mov
mov
xor
jns
test
out
lea
pop
ror
and
mov
sti
push
sbb
add
push
and
in
sbb
adc
inc
fs
movsb
cmp
mov
das
jge
cmpsl
mov
dec
popw
int
fsts
sbb
mov
jle
mov
insl
or
js
shld
adc
sbb
mov
fmul
push
mov
ret
int3
aas
or
aaa
fisubs
jb
xchg
jg
and
mov
dec
sbb
mov
add
addr16
sub
xchg
mov
mov
mov
test
xchg
loope
add
sub
pop
sub
lock
andl
dec
xor
outsl
adc
xlat
pop
jl
imul
lea
inc
or
dec
cwtl
inc
pop
fs
cmp
cltd
jnp
sar
orb
sbb
aam
pushf
fisttps
sub
popf
pop
pusha
fs
sbb
outsl
rcll
js
or
sub
outsl
in
xchg
int3
popf
lret
inc
outsb
add
mov
cmpsb
xchg
jmp
xchg
mov
in
sarb
mov
mov
adc
push
les
add
inc
lock
inc
xchg
cmp
sbb
in
loopne
test
mov
push
push
out
mov
sahf
stos
lods
movsl
cmpsl
cld
hlt
mov
cmp
pop
sahf
pop
leave
out
and
dec
xchg
hlt
mov
inc
ret
ja
fnstenv
fcmove
pop
adc
mov
sbb
repz
sar
ret
adc
xchg
cmp
bound
xchg
subb
inc
pusha
add
mov
cmpb
or
les
xor
mov
test
aas
cmp
fcom
shrl
in
cmp
push
fsubrp
jge
dec
mov
pop
insl
push
repz
fnstenv
lret
mov
xor
xchg
nop
jle
jg
in
outsb
inc
or
movsb
sti
mov
mov
popf
pop
mov
lret
test
dec
mov
mov
icebp
and
push
ss
test
mov
dec
ret
sub
orl
sti
outsl
mov
nop
es
subl
adc
add
jae
pushf
or
les
sti
xor
xlat
xchg
imul
jae
icebp
xor
mov
scas
scas
or
subl
sub
out
scas
repz
jne
xorb
fxch
jo
and
or
mov
repnz
mov
add
mov
push
sub
fldl
cltd
stos
xor
stos
jo
mov
aaa
cli
push
mov
lods
out
pop
and
repnz
cmp
es
cs
add
lods
scas
xchg
cmp
push
std
subl
mov
jo
nop
xchg
inc
xchg
xlat
lock
sahf
fldcw
mov
pop
mov
ljmp
add
inc
mov
outsb
icebp
sbbb
add
std
fcmovnb
xlat
mov
popa
call
popa
cmpsl
out
cwtl
leave
add
mov
jp
jns
add
test
add
iret
les
daa
mov
dec
movsb
pop
cmp
int
pop
and
dec
aaa
push
push
repz
mov
fcompl
xorb
mov
pop
in
scas
jb
and
mov
rolb
push
in
std
push
pop
rorb
ss
push
add
loope
cld
cmp
sub
lds
ja
cmp
mov
add
mov
push
loopne
es
scas
jne
push
dec
xor
xchg
outsl
or
cmp
adc
lods
inc
rorl
pushl
mov
int3
mov
enter
shrl
mov
sbb
dec
movsb
fcomip
sbb
sti
jns
and
repz
add
cli
push
gs
adc
mov
add
or
sarb
and
es
shll
pop
cmpl
icebp
push
sahf
ja
clc
jecxz
outsl
and
fsubr
mov
aaa
sahf
loop
push
sub
bound
cwtl
jb
mov
in
jb
cli
jp
fstps
adc
loope
pushf
in
sbbb
sub
or
dec
int
cmp
jge
jae
push
mov
inc
mov
pop
and
xchg
roll
cld
push
sbb
mov
icebp
outsb
xchg
mov
ja
sub
xor
sbb
cli
inc
push
icebp
pusha
inc
dec
xlat
daa
push
or
mov
das
jl
stos
movsb
sub
fdivl
adc
mov
xchg
dec
nop
xor
iret
add
push
out
int3
mov
lods
pop
cmpsl
push
test
subb
push
cmp
pop
in
xor
and
cmpsl
aas
addl
push
fidivrl
arpl
jb
fcoml
fs
dec
mov
lods
rol
shl
lret
fs
popf
sarl
cmp
xchg
pushf
inc
ja
inc
xor
mov
sub
pop
pop
pop
inc
jle
inc
arpl
mov
loop
scas
sahf
sbb
adc
popf
cmp
mov
inc
or
xchg
xor
or
cmp
pop
das
mov
fidivrl
lea
push
mov
shrb
adc
icebp
jge
int
push
and
repz
pop
aam
mov
mov
movsl
xlat
mov
inc
fsts
ret
hlt
scas
rorl
scas
or
or
inc
or
ds
xor
jp
js
jnp
les
adc
sub
inc
adcb
sbb
mov
sub
mov
xor
jnp
and
jns
jmp
fiadds
roll
das
mov
push
mov
xor
cmp
xchg
je
stos
add
nop
jg
out
lret
out
push
es
and
loopne
jp
dec
inc
add
cli
fildl
jb
or
cmp
fs
into
xor
stos
pop
pushl
jb
daa
outsb
pop
push
in
and
sub
dec
push
dec
jge
mov
mov
cs
sti
cmp
push
movsb
push
xchg
fdivr
jmp
decb
xchg
fstl
xor
in
into
sahf
cmp
leave
sahf
fidivl
pop
pop
pushf
fists
xchg
mov
mov
js
nop
push
movsl
aad
icebp
or
pop
dec
jns
mov
int
cmpsl
hlt
std
shll
ret
xor
adc
movsl
sub
xchg
imul
out
jae
rolb
fdivr
mov
cld
cmp
and
cmp
xchg
leave
or
outsb
or
mov
aad
push
sbb
jno
mov
mov
pop
and
and
xchg
ljmp
int3
lcall
lret
dec
daa
push
mov
cmp
cmp
jg
sub
jnp
fucom
dec
push
mov
arpl
sub
sbb
cltd
lods
sbb
int3
inc
rol
arpl
pop
rolb
into
outsb
jbe
scas
xchg
xor
test
into
inc
je
aam
lcall
ljmp
and
xorl
fmul
xor
xlat
add
lret
int3
xchg
out
xadd
ja
loop
out
dec
and
daa
pop
adc
mov
lcall
jl
in
jge
repnz
outsb
mov
or
mov
or
into
pop
push
jbe
hlt
cmp
jg
cmp
and
push
cltd
cld
xor
fsubl
or
add
out
jg
fisubrs
rol
pop
adc
adc
insb
adc
push
vprotd
sbb
call
mov
in
mov
add
xor
inc
testl
stc
data16
aas
mov
mov
fwait
std
in
xorb
shrb
cmp
shll
jae
scas
jmp
mov
clc
jge
and
mov
movsl
dec
push
repnz
mov
add
lahf
cmp
test
enter
cmp
jmp
adc
insl
sbb
or
pop
icebp
mov
and
sub
popf
ret
mov
js
or
ret
in
cmp
loop
xchg
dec
jne
jb
pop
loope
sbb
adc
inc
fnstcw
adc
cmpl
sub
pop
hlt
call
dec
or
dec
mov
arpl
jmp
sub
jg
xchg
aaa
push
add
in
xchg
cld
fstpt
mov
mov
or
fiadds
mov
or
idivl
jecxz
insl
push
lods
dec
xchg
and
adc
ljmp
add
vmovaps
mov
dec
inc
lret
or
pop
pop
jmp
xchg
jno
call
mov
outsl
jecxz
mov
inc
jle
adc
cwtl
and
stos
sbb
mulb
mov
cmp
ficomps
es
add
or
fnstcw
loopne
arpl
dec
mov
das
ficompl
push
pushf
mov
mov
dec
xchg
in
mov
aad
test
xchg
jle
mov
jge
pop
movsl
cmpsl
adc
sahf
inc
aaa
jae
push
cmpsl
push
jnp
into
inc
xchg
ljmp
jecxz
inc
das
dec
sub
inc
xchg
aas
sbb
lods
sbb
cmp
xchg
inc
rcll
push
or
pop
scas
add
pop
in
dec
mov
lea
mov
shlb
push
test
ds
push
cmp
les
pusha
shl
pop
lret
mov
push
sbb
test
arpl
daa
loop
push
mov
iret
xchg
shl
or
push
ss
mov
dec
stos
in
adc
movsl
ret
mov
ljmp
out
rcll
ljmp
fidivl
jns
aad
imul
cmp
enter
add
mov
or
sub
or
inc
cld
and
or
jbe
clc
dec
push
addr16
repz
js
mov
lahf
out
xor
andl
insb
push
lods
outsb
push
push
jbe
cmpsb
fdivrs
stos
cmp
adc
mov
mov
xchg
xor
xchg
jmp
stc
cmp
or
call
stc
jle
loop
ss
cmc
or
and
lret
lahf
cltd
sbb
iret
popa
dec
fdivrl
addr16
test
push
scas
sti
inc
push
fwait
cmp
xor
inc
jne
sahf
outsl
pusha
bound
fdivrp
xchg
stos
mov
decl
cmpsb
fsubrs
shrb
int3
mov
jno
mov
pop
addl
lods
add
adc
enter
inc
or
in
in
mov
cmp
inc
imul
add
sarb
mov
jbe
xor
xchg
rolb
xchg
push
stc
fdivrp
and
add
stos
aas
push
inc
cmc
and
pop
adc
outsl
aas
push
mov
adc
lods
movsl
sbb
sahf
movsb
mov
addb
insb
enter
push
jnp
xchg
pop
adc
fisttpl
push
loope
sub
xor
repnz
daa
test
imul
dec
mov
jns
popa
les
mov
fimuls
pusha
pushf
adc
test
sbb
xchg
in
test
mov
add
push
mov
sahf
iret
cld
sub
inc
mov
mov
mov
pop
das
aam
arpl
push
jecxz
xchg
cmc
jle
adc
xor
adc
scas
jae
test
aam
iret
xor
and
adc
add
je
outsl
push
pop
inc
dec
mov
movsb
scas
xchg
lahf
test
aam
iret
xor
and
adc
add
je
outsl
push
pop
inc
dec
mov
movsb
mov
hlt
jmp
test
fcmovnb
iret
xor
and
adc
add
je
pusha
outsl
push
push
jne
sbbb
mov
jmp
out
push
pop
inc
bswap
rcr
mov
pop
in
pop
stos
daa
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
into
incl
xchg
ret
mov
movsb
mov
dec
and
dec
add
ds
mov
mov
mov
into
icebp
mov
sar
jb
outsb
gs
add
dec
popa
sub
push
inc
push
mov
mov
icebp
cmpsl
loope
roll
and
daa
das
cmp
jno
pop
pop
insb
das
popa
clc
mov
sahf
loop
repz
pop
jge
popa
rep
sti
and
pop
push
dec
cli
jno
fsub
add
sbb
sahf
fcmovne
gs
fisubl
jno
orl
mov
pop
je
push
out
mov
test
or
lods
lods
das
shll
jle
outsb
out
xor
mov
fwait
call
dec
hlt
mov
add
das
ljmp
pushf
mov
or
dec
jnp
adc
and
fcmovnbe
xchg
shl
sbb
add
arpl
mov
push
mov
cltd
lcall
and
cs
dec
fisubs
dec
add
mov
pusha
into
push
sbb
or
jmp
or
rcrl
and
inc
add
es
ss
add
maskmovq
enter
in
popf
mov
sub
adc
sub
or
xchg
roll
mov
loopne
ljmp
push
cmp
dec
xor
jp
inc
out
clc
mov
loope
rcrl
and
pop
add
ds
cs
push
inc
push
mov
mov
into
icebp
mov
rorl
pop
add
ds
cs
push
inc
push
mov
add
sub
int3
sub
ficoms
addl
clc
iret
shr
nop
push
fmuls
stos
pusha
jg
mov
push
iret
jp
jle
aaa
adc
mov
add
xchg
sbb
jno
xor
xchg
or
jge
clc
dec
movsb
cltd
stos
lahf
aam
xchg
jge
xchg
xor
jae
cmp
sub
mov
mov
mov
push
fisubrs
fcomi
jecxz
jo
lock
sub
sti
cmp
xchg
ds
mov
add
sti
cmove
pop
movl
push
adc
cmp
sbb
lds
imul
adc
mov
push
adc
inc
jne
add
loope
nop
scas
in
aad
pop
inc
je
rcll
ljmp
sub
pop
jns
fdivrs
mov
sbb
movsl
add
cmp
jb
stos
into
fldt
sub
sbb
stc
inc
dec
ficompl
and
aas
jmp
lods
sub
test
loope
daa
mov
sub
scas
js
dec
dec
in
dec
dec
lds
cld
andb
pusha
outsl
aas
xlat
aam
cmp
cs
adc
ds
mov
ret
lock
mov
cmp
mov
lods
arpl
jge
xchg
imul
out
lods
jno
pop
insl
fiadds
lret
add
or
xchg
mov
ljmp
xor
jg
cli
jno
inc
pusha
pop
shl
sbb
mov
roll
fld1
adc
and
pusha
dec
adc
lds
sti
mov
mov
cmp
jno
inc
mov
scas
fnstsw
fisttpll
jg
call
gs
cmp
lock
scas
lea
push
adc
jecxz
sti
in
pop
sub
push
add
xchg
or
arpl
cmc
cs
and
int3
mov
push
stc
popf
pop
movsl
or
adc
scas
aad
pop
call
mov
push
mov
push
fsts
inc
fists
addr16
mov
ret
cmp
xor
mov
sub
mov
and
fldl
jmpw
sti
sub
dec
enter
sbb
aad
xor
push
popa
pop
mov
js
cld
stos
dec
hlt
mov
pusha
cmp
call
cmp
mov
mov
mov
push
xchg
push
lock
add
inc
mov
outsl
jmp
fistps
dec
jp
outsl
push
fimuls
adc
out
daa
xor
nop
stos
inc
sbb
test
and
ror
and
and
shlb
xchg
cmp
cmpsb
cli
and
jbe
jp
das
or
in
clc
fstpt
insl
sub
loope
sbb
scas
iret
push
sbb
cmp
xchg
xchg
idivb
sub
ss
sbb
add
lods
push
cmp
xor
lods
jb
ret
imul
jne
cwtl
arpl
out
arpl
adc
pushf
mov
adcb
jl
test
int3
sarb
test
aam
mov
mov
cmp
xchg
or
shl
pop
aaa
sub
dec
jp
and
outsl
ds
xchg
scas
imul
xchg
in
add
out
addb
leave
xor
mov
lds
push
nop
dec
popa
xchg
adc
in
add
lock
and
pop
cli
pop
or
cld
push
test
mov
sub
xchg
cltd
cmpsb
imul
inc
cli
xor
mov
hlt
push
pop
xchg
push
out
or
mov
push
fistpl
push
lods
mov
jae
ja
loope
lea
adc
mov
mov
jecxz
or
xchg
and
add
stos
mov
aam
pop
fs
sub
imul
jo
push
push
scas
rcll
fldl
jns
test
flds
xchg
fldenv
cmpsb
xchg
mov
push
mov
or
sub
lahf
fnstcw
adc
movl
test
inc
pop
xchg
add
jg
adc
and
daa
clc
fwait
jl
pop
clc
sahf
adc
out
stos
mov
outsb
addl
jb
data16
dec
pop
sub
icebp
imul
sub
and
and
pop
jbe
sbb
es
push
sbb
cltd
or
js
xchg
das
jg
inc
lret
xor
movsl
push
popf
jecxz,pn
mov
les
dec
mov
cmp
jae
xchg
shll
std
pop
pushf
addr16
faddp
inc
fidivl
out
pop
into
rcl
inc
add
mov
pop
ret
mov
jns
xchg
dec
push
jns
orb
sahf
pop
and
ljmp
rol
mov
push
fstps
inc
cmpsb
xchg
pushf
inc
jnp
test
repz
insb
popf
add
icebp
adc
in
mov
clc
sbb
das
inc
sub
ss
jb
movsb
push
fs
add
shll
inc
test
dec
pop
dec
and
pop
outsl
pop
imul
and
inc
sbb
or
xor
inc
bnd
popa
lahf
push
xchg
rcrl
jns
fiadds
jno
and
pop
push
push
dec
add
mov
jp
jns
lods
movsl
out
xor
sub
push
lahf
jne
mov
in
dec
mov
mov
ljmp
and
scas
aaa
inc
bnd
dec
addr16
repz
fdecstp
sti
jo
repnz
scas
aaa
fildll
xchg
add
or
leave
xor
mov
pop
xchg
jb
or
mov
mov
and
test
dec
test
fildl
ret
fidivs
icebp
fwait
push
jle
shrb
push
ret
dec
imul
imul
int3
sti
cltd
lahf
and
fcmovnb
incl
mov
add
iret
push
xchg
jae
mov
mov
and
dec
sbb
lret
call
fs
adc
sahf
addl
adc
jbe
jmp
xor
xchg
push
notl
lods
inc
pop
mov
fisubs
adc
fisubrs
pop
dec
cs
dec
test
dec
cmpsb
add
or
jns
xchg
icebp
ljmp
movl
bound
mov
xchg
and
jmp
jle
mov
cmpsl
jmp
and
fldenv
jmp
pop
sub
sub
and
lods
xchg
fnstsw
sti
insl
in
jge
daa
sbb
sti
data16
call
add
cmpsl
or
push
andb
arpl
push
ja
ljmp
loope
mov
inc
sbb
inc
push
fimull
aam
mov
andb
mov
mov
xor
das
adc
cmpsb
and
or
push
sbbb
mov
sub
in
jp
js
jo
mov
dec
adc
aam
aad
mov
jno
or
outsb
out
dec
xchg
rcrl
inc
sbb
in
incb
out
jns
dec
mov
dec
sub
push
fabs
push
jns
push
sub
and
add
jno
sub
mov
push
adc
ljmp
xchg
shlb
jp
mov
or
add
enter
pop
rcrb
xor
pop
or
mov
cmpsb
jns
push
add
sbbb
imul
into
xchg
rcl
dec
aas
into
dec
out
je
cmp
jl
sub
dec
or
imul
shlb
das
sbb
mov
add
inc
sbb
mov
incl
jecxz
pop
adc
add
push
jge
add
loopne
push
cmpb
jb
out
insb
je
push
push
int
jp
aam
outsl
sub
pop
lds
adc
aas
in
sbb
test
flds
or
cmp
pop
sbb
mov
loopne
fcom
xor
pop
rorl
js
shlw
bt
jl
js
xlat
insb
mov
push
mov
int3
lods
jg
arpl
orl
cmp
or
and
out
adc
push
leave
add
jno
loop
dec
loopne
pop
xor
add
jle
jae
sub
pop
sub
dec
fistps
fucom
xchg
repnz
add
outsb
xor
push
mov
xor
in
or
xchg
mov
and
pop
pop
call
jae
xlat
test
mov
adc
imul
jo
cmp
push
fcoms
bound
pushf
in
jb
xor
dec
pop
lret
repz
daa
cmp
cmc
stc
popf
mov
dec
push
lods
fsubr
sahf
insb
imull
sarb
iret
stc
test
and
ret
lods
and
xor
sahf
scas
and
add
test
cmp
and
dec
xchg
clc
mov
call
inc
in
mov
jno
cmpl
inc
stc
adc
orb
pop
in
loope
cmp
push
jg
ret
mov
lret
add
xor
xor
xchg
loopne
int
out
outsl
jp
cmp
hlt
daa
popa
int
jbe
repz
mov
adc
mov
pop
imul
sub
pop
mov
in
pop
jb
jno
iretw
stos
inc
or
stos
aaa
mov
sbb
or
mov
or
fxtract
mov
mov
or
push
orb
dec
xor
xchg
cli
add
incb
and
sbb
jne
ja
sub
push
enter
add
mov
mov
and
cli
popf
scas
int
and
clc
sub
push
dec
mov
data16
or
dec
mov
pop
jl
ja
pushf
std
dec
push
cmp
xor
xchg
adc
stos
mov
insl
lods
aaa
add
ds
fidivl
mov
lock
test
push
test
addl
inc
or
mov
cmp
stc
iret
sbb
dec
pop
inc
out
jno
push
pusha
add
mov
push
xchg
jbe
jne
mov
dec
push
in
mov
cmp
cmpsb
int3
aad
test
pop
in
sbb
imul
push
pop
popf
pop
cwtl
and
icebp
pop
mov
incl
clc
xchg
add
in
pushf
pop
inc
fwait
xchg
call
shll
xlat
lea
into
add
xchg
sub
jecxz
cmp
pop
fadds
sbb
cmp
jecxz
repnz
jno
jp
push
pop
outsl
lods
push
popf
add
dec
lret
inc
push
ss
mov
cmp
out
mov
jp
dec
push
leave
ljmp
adc
xchg
and
or
das
and
aad
push
dec
push
jb
xor
push
adc
scas
push
push
mov
pop
aaa
pop
call
push
aaa
ja
loope
imul
jnp
ret
das
push
sbb
lret
sbb
mov
lds
mov
addr16
aas
cmp
enter
or
jae
jecxz
je
and
mov
lods
mov
sbb
xchg
lcall
inc
cli
xlat
mov
pop
xchg
xor
push
test
mov
inc
and
pop
mov
sub
lock
rclb
or
pop
lods
mov
divb
mov
inc
out
mov
rolb
fcomps
fidivrs
das
cmp
jmp
cltd
lret
cli
ss
jp
pusha
dec
or
mov
pop
stos
or
adc
dec
add
xor
in
shlb
int
push
rorl
ljmp
pop
pushf
sub
divl
jae
out
push
fwait
shl
daa
lahf
cmp
das
loopne
xchg
or
pop
xor
fadd
pop
jmp
test
lret
xchg
rcl
push
cmpsl
jo
aad
jp
subl
adcb
push
or
ficoml
clc
or
cwtl
pop
clc
add
xchg
lret
xchg
stos
jge
popf
movb
idiv
mov
popa
jno
jne,pt
leave
ljmp
aad
jb
lods
arpl
int3
inc
and
insl
adc
cmpl
fnsave
mov
inc
mov
xchg
lock
out
push
rorb
and
test
daa
push
sub
stc
push
mov
pop
cmpb
loop
sub
mov
ret
movsb
push
insl
popf
jae
or
xchg
mov
cmp
dec
mov
jnp
mov
int
mov
data16
xor
scas
rcrl
fildll
imul
lret
and
in
pusha
test
sbb
adc
inc
in
ret
xchg
dec
mov
add
aas
mov
cs
push
lods
adc
aam
aaa
ljmp
fsts
jmp
add
arpl
or
add
adc
or
insl
ffree
sarb
xchg
cmp
repnz
mov
inc
mov
dec
pop
push
cs
push
ficoms
das
add
into
ror
mov
adc
pushf
add
dec
mov
test
imul
lcall
xor
imul
add
scas
jp
jmp
and
xchg
xor
testl
push
add
dec
lea
or
mov
sbb
shr
lret
sahf
cli
sbb
sbb
lds
repz
cld
imul
adc
dec
jge
adc
lcall
push
adc
sub
sbb
and
lods
push
rorb
xchg
les
sti
iret
jmp
mov
lock
lods
jo
pop
or
lock
cmc
inc
pop
sub
imul
out
sbb
test
call
dec
push
mov
push
call
rorb
mov
pop
inc
push
push
popa
call
decl
cmp
test
xor
cmp
cmp
or
lahf
fs
xchg
jmp
loope
jno
clc
mov
scas
mov
sbb
sbb
dec
jl
lret
cli
sub
daa
mov
fcmovu
mov
popf
mov
out
mov
gs
dec
inc
movsb
ret
adc
int
or
mov
jbe
inc
fidivrl
mov
or
add
xor
pop
lds
add
pop
pop
pop
pop
mov
into
imul
cmp
int
add
xchg
arpl
add
dec
aaa
fimull
into
add
icebp
dec
ja
ficoms
push
out
out
incl
cmp
push
dec
pop
pusha
popa
sbb
mov
jmp
into
add
mov
loope
ret
insb
in
xchg
aaa
pop
sbb
dec
add
or
popa
out
loop
sbb
inc
lea
sbb
lock
mov
mov
xchg
jbe
xchg
sbb
mov
jbe
cmpsl
inc
or
lret
in
push
mov
mov
ror
hlt
inc
clc
mov
into
mov
mov
aam
sbb
xor
pop
push
out
movsb
push
cmp
sar
pop
mov
xor
negl
adc
mov
pop
add
ljmp
mov
js
frstor
lock
cwtl
pop
mulb
les
mov
push
pusha
adc
inc
shrb
mov
push
movsl
and
sbb
add
push
mov
lods
mov
add
out
xchg
mov
add
pop
cwtl
jae
or
mov
mov
xor
push
jns
leave
mov
and
add
ffree
push
dec
cmp
int3
cmp
cltd
xor
mov
cmp
rolb
inc
scas
sahf
addb
mov
loopne
call
scas
cmp
mov
mov
cmp
push
mov
stc
out
add
in
mov
js
inc
mov
inc
xorl
scas
adc
jo
xor
inc
jo
fsubl
inc
push
bound
hlt
xor
pop
mov
xor
pop
cwtl
jae
ja
push
mov
out
xor
int3
stc
and
inc
and
addl
sbb
or
jmp
fldcw
popa
jns
bound
in
xor
cltd
test
aam
nop
inc
add
popa
jmp
shlb
ret
out
add
js
aas
mov
pop
mov
jmp
leave
cmp
pop
jmp
aad
lock
sub
xchg
xor
iret
fucomi
ret
adc
mov
std
push
out
jbe
mov
jmp
iret
mov
mov
mov
pusha
aaa
pusha
js
pop
push
push
dec
jb
repz
aaa
inc
mov
es
and
jmp
insb
fsubrs
call
lea
int3
mov
repz
inc
push
mov
leave
test
dec
adc
in
add
cli
pop
mov
mov
lods
hlt
leave
cmpb
dec
outsl
pop
add
in
mov
shrl
iret
xchg
insb
cli
push
ljmp
outsb
shll
add
pop
pusha
pushf
dec
cltd
test
cmp
dec
push
repnz
cmp
daa
adc
cmp
mov
dec
sub
clc
rorl
test
cwtl
cwtl
inc
je
add
pop
cltd
into
rcll
gs
rcll
fcomip
jmp
pop
or
gs
lods
inc
out
je
out
push
fs
cs
and
jns
sub
inc
mov
in
pop
lods
or
mov
pusha
data16
xchg
mov
addb
cwtl
mov
inc
jecxz
cmp
xchg
fcompl
shr
pusha
and
es
pop
rorl
sbb
inc
lahf
movsl
movsb
cwtl
dec
out
ja
arpl
inc
cs
jge
dec
cmp
out
push
inc
arpl
cmp
in
rcrl
andb
bound
pop
clc
fsts
bound
sub
or
pop
add
leave
mov
jo
in
enter
mov
lds
push
or
mov
in
pop
in
push
mov
in
scas
sub
mov
inc
mov
push
test
outsb
sbb
les
daa
fmul
mov
imul
push
jle
popa
push
dec
in
les
sbb
push
xchg
fcomip
xchg
lock
test
pusha
jg
push
xchg
add
ljmp
insb
loope
lcall
fsubrs
jmp
hlt
insb
lods
scas
xchg
cmc
loop
adc
or
or
sub
icebp
cmpsb
sahf
push
stos
add
addl
orb
lds
daa
fistps
lds
mov
orb
std
fsubr
arpl
inc
scas
pop
push
mov
stos
xlat
nop
testb
mov
out
stc
pop
mov
pop
nop
sbbb
loop
lahf
pop
neg
fdivrs
loopne
repz
sti
sub
mov
es
mov
cli
mov
and
adc
inc
pop
mov
mov
aam
xchg
inc
cmp
cmc
test
fnstcw
adc
popf
xchg
pop
jg
inc
cmp
mov
or
or
rclb
mov
outsb
in
add
movsl
add
in
xchg
popf
add
mov
arpl
mov
shll
mov
mull
jecxz
lret
daa
or
push
pusha
sbb
mov
movsb
out
movsl
je
iret
jmp
inc
in
lcall
rcl
sub
inc
enter
mov
jl
or
mov
xchg
sahf
mov
push
pusha
fbstp
or
sarb
sub
xor
add
pop
pop
shlb
int3
roll
cs
or
sti
cmp
dec
pop
ds
mov
jmp
in
jbe
pop
inc
xor
dec
and
scas
cmp
shlb
xchg
call
jb
push
mov
fimuls
stos
cli
push
mov
mov
cmpb
add
into
add
insb
loopne
insl
mov
sti
in
mov
sub
fs
pop
sub
mov
or
stos
cmp
push
sbb
test
hlt
nop
xchg
out
fisubrs
jno
lret
jnp
cmp
sahf
pop
pop
fstpt
add
jge
in
add
dec
mov
fldt
fbstp
xchg
ljmp
adc
pop
shlb
sub
lock
or
xchg
test
pop
pop
sub
cld
out
cmp
mov
mov
movsl
aad
or
imul
incb
fcoml
push
shll
adc
pushf
cmp
adcl
sti
ja
jns
push
out
div
jb
outsb
imul
cs
mov
mov
rorb
outsl
mov
jns
stc
shrb
in
int
or
test
sbb
pop
cmp
in
hlt
test
ficomps
loope
pusha
cmp
faddl
cmp
in
inc
or
and
imul
jmp
adc
into
fisttps
lods
adc
push
jne
push
pop
sbb
es
pop
bound
ret
jae
push
pop
mov
pop
cwtl
cmp
movsb
stos
dec
and
xchg
xchg
sub
mov
rorl
pop
add
ds
cs
push
inc
push
mov
mov
into
icebp
mov
rorl
pop
add
ds
cs
push
inc
push
mov
mov
into
icebp
mov
rorl
pop
add
ds
cs
sbb
mov
mov
into
icebp
mov
rorl
and
mov
mov
push
scas
popa
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
push
adc
add
cmc
dec
mov
test
xchg
cmc
movsb
lds
xor
inc
gs
push
pusha
cmc
cmc
mov
stos
aam
vaddsubpd
test
jne
adcl
jne
cmp
add
jecxz
hlt
stos
stc
mov
cmpsb
repnz
and
xor
inc
push
push
add
mov
mov
cmp
rolb
jne
jne
aas
pushf
enter
test
popf
rorl
jp
jle
pusha
movsl
incb
aam
gs
sub
add
xor
insl
in
dec
in
shrl
sbb
cltd
sbb
jo
inc
inc
adc
and
mov
out
xchg
adc
push
loopne
test
stos
aad
lcall
add
jp
xchg
lds
out
mov
std
mov
jae
jmp
dec
call
lahf
lods
mov
dec
loope
mov
cmc
cmc
adcb
gs
xor
in
add
pop
aad
lds
xchg
mov
push
jne
sbb
adc
add
jb
push
push
jo
jno
test
cld
aad
hlt
mov
rcrl
and
sbb
adc
sub
sub
mov
xchg
xchg
rclb
rcll
push
ss
push
cmp
inc
adc
mov
test
xchg
cmc
movsl
lds
xor
inc
gs
push
add
test
xchg
cmc
movsl
lds
icebp
dec
lods
cmp
sub
sbb
out
add
mov
data16
stos
cs
xor
or
pop
sub
cmp
bound
lgs
neg
rolb
add
stos
test
mov
les
push
ret
rolb
sbb
jns
aam
jmp
cltd
pop
inc
leave
cld
or
in
cmc
mov
cmp
sti
int
xchg
sarl
out
mov
xchg
mov
decl
xchg
addr16
icebp
pusha
add
leave
ret
mov
sub
mov
cmc
dec
roll
pop
cmp
loop
lds
lock
mov
add
jg
int3
test
aam
add
jg
fsqrt
adc
or
shll
sub
cmp
ss
pop
lret
repnz
sub
jae
mov
scas
in
and
lods
pushf
cmp
repz
es
int
jmp
repz
fimull
xlat
std
loop
xor
imul
repz
cmp
dec
or
sahf
sub
idivb
fiadds
add
jo
jmp
dec
xchg
fnstenv
in
or
dec
or
xchg
loopne
int3
ret
cld
lock
adc
cmc
cs
out
pushf
test
outsl
jl
push
fcoml
cwtl
incb
xor
mov
enter
in
mov
xor
mov
test
dec
insl
sbb
or
leave
mov
push
mov
jb
cs
ret
stos
inc
pop
push
lret
push
in
push
push
push
lret
out
mov
scas
outsl
or
fildll
lods
or
pop
shl
repnz
lret
xor
imull
mov
sbb
pushf
in
sbb
push
mov
push
fidivrs
movsb
pop
inc
and
mov
iret
movsl
in
test
sbb
sub
and
ret
add
xchg
xchg
jl
faddl
rcrb
cmpsl
and
jg
hlt
push
std
fisttpl
xchg
das
and
lahf
mov
lahf
xor
sbb
pop
shll
fnstsw
cltd
adc
inc
mov
je
stos
les
gs
jb
cld
sbb
idivb
adc
enter
adc
xorl
or
cmp
lea
inc
cmp
xchg
mov
adcb
jo
imul
inc
xchg
cmp
ds
cmp
stos
push
ret
jno
mov
mov
js
enter
xchg
mov
fisubrs
lahf
loope
pop
cmp
leave
pop
jns
cmp
jg
jb
bnd
cmp
push
mov
or
xor
cli
push
rorl
arpl
movsl
cltd
cmpsl
jmp
ja
std
ret
call
lret
insb
int3
and
jbe
cmp
fwait
aas
aad
inc
pcmpgtd
shlb
and
pop
inc
xlat
mov
out
lds
xor
shr
push
xlat
pop
das
popa
leave
dec
cmpsb
mov
add
add
pop
pop
adc
stc
nop
clc
mov
dec
das
xchg
jg
ret
push
pop
insl
mov
mov
in
jecxz
xchg
int
out
mov
sub
mov
hlt
push
cmp
rcrb
jnp
cmp
or
pop
fistpl
sarl
adc
mov
int
xchg
mov
pushf
hlt
into
mov
adc
push
addr16
jb
fnsave
enter
cmp
testl
scas
cmpsb
addl
ja
jp
lock
ret
imul
cli
push
negb
xor
dec
inc
in
subb
out
lret
push
inc
sub
sbb
jae
dec
or
jns
inc
jns
lock
insb
pop
mov
push
insb
inc
in
arpl
repnz
mov
and
sub
dec
push
dec
daa
sbb
xchg
cld
mov
adc
mov
pop
sahf
lahf
add
je
rcll
out
sub
lods
mov
ljmp
icebp
ret
or
fcom
gs
mov
push
pusha
mov
sar
ja
cltd
out
cmp
adc
ds
or
pop
and
insl
insl
mov
jp
cs
mov
dec
pop
cmp
jl
jne
add
cltd
mov
faddl
inc
and
pop
inc
add
js
mov
pop
sub
les
int3
adc
leave
out
pushf
push
rcrb
jnp
adc
neg
add
enter
enter
push
out
inc
rorl
mov
push
hlt
std
jmp
push
xor
pop
test
pop
mov
inc
ss
dec
mov
sbb
mov
adc
lods
or
push
dec
cmpsb
mov
sahf
inc
fmull
mov
sbb
push
mov
xchg
stos
add
sbb
cmpsl
add
add
setbe
pop
jmp
adc
jb
shlb
stos
push
add
bound
and
js
mov
pop
insb
pop
movsl
aad
dec
outsl
ss
sbb
sub
mov
std
and
inc
fwait
in
xor
mov
push
js
decl
mov
xor
scas
cld
jbe
inc
push
iret
aam
push
lret
push
inc
and
push
sbb
movsl
add
nop
pushf
xchg
sbb
aaa
push
jns
and
cmp
or
dec
push
mov
cltd
jle
out
orl
out
out
mov
repz
adc
mov
mov
pop
xor
add
mov
repz
ret
std
add
iret
cmp
les
cs
scas
push
or
data16
incb
aas
outsl
cltd
and
cmp
pop
mov
pop
xchg
dec
cwtl
mov
jns
mov
push
sbb
dec
and
push
out
loope
in
popa
mov
cmp
sbb
repnz
bound
adc
rcrb
inc
outsb
xor
add
je
sub
hlt
xor
movsb
and
subb
scas
lock
mov
filds
mov
sbb
pop
push
xor
xchg
lret
push
mov
sub
in
hlt
jb
cwtl
je
lret
lahf
cmpsl
xchg
sbb
dec
mov
in
xchg
in
push
xchg
fildl
push
icebp
push
loope
inc
lock
mov
stc
xchg
lds
inc
in
adc
outsb
sub
and
out
test
dec
lcall
push
mov
icebp
into
and
mov
inc
cmp
cmp
push
pop
insl
sti
shrl
inc
cmovp
clc
xchg
fsubrl
sub
pop
into
mov
dec
das
xor
ret
sbb
push
mov
fs
lret
stc
fidivrs
insl
mov
push
leave
mov
mov
dec
rorb
xchg
cltd
jp
add
sub
jecxz
and
outsb
cmp
jle
lds
addl
aaa
add
lret
pushf
xchg
cltd
push
xchg
cmp
rorl
pextrw
sub
inc
int
ret
mov
pop
pop
ja
clc
xor
test
cmp
outsl
insb
jnp
mov
fidivs
jg
mov
cltd
daa
sbb
adcb
out
data16
jmp
loop
enter
mov
jmp
loop
and
lret
jecxz
push
les
sbb
mov
push
iret
fidivrl
sub
in
in
subl
jp
adc
in
repz
lret
inc
rorl
adc
out
popf
fwait
scas
mov
jecxz
mov
movsb
mov
cmpl
jnp
mov
or
push
inc
cmpsb
inc
xor
imul
ja
mov
jge
ret
and
mov
andb
aad
out
sbbb
scas
sahf
xchg
dec
imulb
in
pusha
or
movsb
test
addr16
jecxz
lods
lods
push
pop
jb
lock
add
jo
ja
je
in
pop
stos
cmp
sarb
xchg
pop
mov
add
jmp
lock
mov
das
cs
cs
fsubl
mov
xchg
push
in
jmp
ffreep
mov
out
jmp
mov
test
sub
test
scas
sbb
out
mov
pop
test
mov
aam
ficoms
mov
movsb
jbe
call
mov
mov
pop
ret
ficomps
push
pop
pushf
add
in
pop
loopne
data16
popf
xor
ljmp
leave
adcl
or
movd
mov
jmp
inc
loop
popa
cmovb
mov
mov
xchg
insb
push
lret
mov
scas
jbe
rolb
or
in
mov
inc
dec
mov
add
cmpsl
xchg
mov
push
aam
sbb
cmpb
mov
or
iret
movsl
dec
icebp
mov
dec
ljmp
les
adc
std
pushw
repz
into
lods
addr16
mov
aas
pushf
inc
sbb
mov
mov
pop
add
fdivrp
imul
retw
or
pop
pusha
repz
xor
mov
and
hlt
fcomi
dec
add
mov
pop
int3
sbb
insl
push
xchg
dec
int3
xchg
cmp
out
int
sbbb
jno
ljmp
cmp
les
jbe
scas
mov
adc
out
push
xor
ds
add
sbb
mov
and
pusha
pop
push
jno
roll
sbb
addb
cmp
scas
cmp
iret
sbb
or
push
cmp
lock
loope
cs
or
add
mov
sbb
aam
jg
mov
xor
and
mov
fstpl
in
sub
repz
mov
cmp
sahf
test
jle
mov
mov
jno
movsl
aad
roll
inc
inc
lcall
loop
les
fstpt
mov
bound
je
lods
add
xor
xlat
mov
mov
dec
mov
xlat
fst
adc
xchg
cmp
jmp
enter
cmc
xorl
stos
repz
push
out
aaa
jmp
jp
mov
inc
fldcw
les
mov
stos
cmc
cltd
pop
sbb
push
adcl
push
fiaddl
fcmovnb
stos
test
mov
daa
mov
mov
and
sbb
mov
add
add
lret
inc
cmp
dec
push
arpl
xor
out
retw
mov
add
mov
push
sbb
xchg
lock
gs
jg
push
xchg
cmp
sarb
data16
dec
sarb
test
out
or
dec
out
in
lea
mov
fisubs
imul
fldcw
sarb
aad
arpl
or
int3
xchg
mov
stc
iret
xchg
test
or
xlat
out
popa
movsl
in
repnz
je
repnz
add
adc
xchg
das
sbbb
das
push
dec
pop
in
loopne
xchg
or
dec
xchg
insl
jmp
jae
push
ss
or
jnp
mov
push
mov
jl
adc
mov
aam
cmpb
adc
leave
popa
jg
cmp
mov
jl
mov
or
inc
ss
fcomps
dec
pusha
sar
out
dec
mov
aam
cwtl
shl
sti
add
stos
mov
mov
leave
fildl
stc
jge
jle
flds
xchg
and
call
adc
xor
inc
lahf
mov
pop
hlt
aad
push
inc
jno
pop
jns
xor
xchg
je
cmp
sub
popf
inc
xchg
out
out
lea
xlat
out
cmp
lods
xor
jmp
ss
decl
into
fs
xor
jge
xor
or
add
ljmp
sub
jnp
lahf
in
sub
mov
jp
mov
xor
shll
inc
cs
xor
mov
mov
rcrl
jbe
leave
mov
jecxz
inc
add
cwtl
cwtl
push
push
stc
pushl
and
add
ja
outsl
fists
repz
mov
cmp
push
jmp
sbb
aad
je
lret
ret
cmpsb
out
push
loopne
addr16
in
inc
inc
xchg
or
mov
pop
cmp
add
and
jno
adc
cmp
into
add
xchg
out
test
inc
lods
sti
iret
sub
dec
sub
cmp
scas
nop
jmp
gs
popa
sub
dec
mov
mov
lret
fwait
sbb
mov
dec
jl
sbb
adc
push
ss
das
nop
shlb
adc
dec
adc
lcall
mov
movsl
pusha
loopne
lcall
and
lea
sub
bound
xor
bound
mov
lds
fbstp
lret
mov
lock
shll
cmp
jle
xor
adc
pop
dec
cwtl
pop
pop
arpl
sbb
cltd
mov
js
aas
out
cmc
rcll
xchg
bound
cmp
mov
xchg
das
lret
push
adc
fnstsw
mov
cmp
push
pop
cltd
gs
jle
rorl
hlt
fdiv
imul
mov
mov
mov
mov
mov
jns
in
push
xchg
xchg
out
push
mov
dec
cmpb
add
in
cmp
push
or
pop
dec
dec
and
xor
mov
cmp
cmpsl
jne
test
mov
cmpsl
movsb
and
xor
xor
mov
cmp
vmread
js
fisttps
fldt
ret
clc
push
iret
sbb
ret
cmp
pop
imul
or
inc
sub
in
cmp
icebp
mov
in
adc
std
insl
or
push
adc
mov
mov
fldenv
repz
jmp
cmp
cwtl
jo
xor
mov
aaa
lods
adc
addr16
lahf
jg
push
movsb
cmp
jne
test
lods
pusha
mov
pusha
xor
sbb
cltd
xchg
jge
push
sbb
roll
adc
xchg
shl
insb
cmp
stos
mov
inc
nop
cmpb
jmp
xor
mov
push
push
stc
mov
icebp
pop
pop
ljmp
and
mov
leave
sub
xchg
jmp
sbb
jge
out
stos
cmpb
test
idivl
stc
out
shlb
sbb
dec
and
xlat
dec
testl
and
pusha
iret
push
fcompl
outsb
ds
cltd
mov
mov
lock
add
mov
add
arpl
cmp
xchg
cld
ds
xchg
xchg
pop
outsl
arpl
sub
cmp
adc
or
jae
popa
test
mov
ret
movsl
mov
xchg
fcoml
xchg
test
jne
repz
dec
adc
push
pop
insb
shl
into
jge
popa
adc
dec
add
sub
ret
ja
in
sbb
xor
inc
out
pop
daa
out
mov
or
jb
pop
inc
mov
mov
int3
jmp
outsl
dec
rorl
insb
scas
gs
inc
fnstenv
icebp
mov
pop
xor
push
sbb
and
rcl
les
mov
je
jle
jae
into
mov
addb
test
dec
jnp
adc
decb
shlb
enter
jl
jmp
push
dec
push
mov
and
push
sub
dec
jnp
dec
test
sub
add
pop
or
das
push
jecxz
ja
fsubrl
mov
pop
int
imul
out
test
sub
xchg
mov
test
adc
xor
cmpsb
ds
sbb
repz
lret
or
jb
jns
xor
imul
push
dec
sarb
aad
xor
nop
out
cld
leave
test
and
ret
cs
aad
fnstsw
dec
hlt
leave
or
lea
xchg
lret
push
out
addr16
add
cmc
fisubl
mov
push
xchg
push
aad
into
mov
xor
or
xchg
outsb
mov
jle
mov
and
es
push
adc
xchg
cwtl
mov
sti
jno
mov
mov
cltd
iret
out
xchg
enter
lods
mov
lods
out
inc
fwait
scas
mov
je
xchg
je
shll
stos
inc
outsl
cmpsb
mov
stc
cmp
cmp
shrb
rcrl
add
lock
in
dec
dec
sbb
int3
leave
test
or
das
adc
ljmp
push
or
ror
add
push
xlat
xchg
sti
mov
push
out
movsl
fdivrs
imul
mov
jno
sub
outsb
sbb
push
cmpsl
repnz
and
ss
push
lds
cmc
push
mov
and
xchg
fbstp
or
adc
or
fwait
cmc
xchg
xor
popa
cmc
add
and
push
pop
adc
leave
out
pop
je
pop
aaa
mov
shr
push
or
pop
mov
mov
push
mov
mov
xchg
lods
xchg
xchg
inc
cmp
clc
sub
lods
and
scas
popf
cmpsb
int3
aaa
mov
rorb
and
sti
movsb
in
sbb
xchg
cmp
add
mov
jo
loope
lods
adc
addl
rorb
enter
ja
divl
out
dec
out
clc
out
subb
pop
dec
push
in
mov
or
mov
sbb
mov
dec
enter
lods
dec
cmp
fdivr
push
and
jns
push
adc
ds
mov
mov
cmp
fucomp
add
loop
ljmp
sahf
push
dec
jno
sbb
stos
iret
sbb
cld
cld
pushf
in
dec
fdivrs
or
sub
arpl
xchg
xor
jns
aas
adc
insl
mov
mov
lods
add
out
outsl
mov
push
inc
pop
ret
icebp
xor
in
and
xchg
or
or
sbb
jno
and
cltd
int
mov
xchg
fnstenv
or
jno
xchg
les
outsl
test
mov
or
or
pop
repz
inc
fcoml
and
dec
pop
call
dec
in
mov
cld
xor
xchg
cmp
cmp
sub
inc
lock
lea
hlt
or
int
icebp
in
xor
pop
lret
rcl
mov
xor
outsl
cmpsl
lret
je
in
fs
fbstp
lret
loope
jle
pop
jge
push
les
es
lret
rorl
sti
sub
cmp
pop
scas
ret
dec
jnp
jmp
lds
pushf
stos
lods
fwait
out
jns
icebp
xchg
into
into
int
adc
and
mov
xchg
pop
cvtps2pd
add
fwait
sub
enter
sarl
xor
out
dec
pop
jg
scas
jns
test
adc
dec
test
mov
fdivrs
dec
cmp
jge
sti
xchg
outsl
je
aam
int
imul
les
fsubrl
xchg
xchg
sbb
mov
test
xlat
sub
mov
nop
inc
jge
ds
jle
aas
lret
out
cld
pop
ret
jmp
jne
xchg
add
adc
outsl
imul
ss
jle
sbb
xor
sub
adcl
dec
pop
sbb
dec
cld
add
inc
std
xlat
test
sti
mov
ds
jle
adc
lods
sbb
xor
in
jb
add
mov
adc
aad
loop
mov
mov
scas
jmp
mov
xor
es
nop
pavgb
je
push
pusha
cs
les
hlt
lahf
and
push
jns
mov
mov
mov
pushf
mov
imul
test
pop
lods
dec
jo
loope
dec
xchg
sbb
test
fisttpl
sbb
stc
or
mov
std
int
push
fldl
rcl
cs
insb
jmp
mov
les
imul
jnp
dec
or
lea
jl
mov
mov
sahf
pop
rcrb
daa
outsb
push
cli
es
jb
pop
int
outsl
xchg
jnp
insb
rorl
mov
cmc
ss
lds
push
les
ja
rcrb
ljmp
leave
pop
fmuls
jb
stos
inc
xchg
push
das
mov
cld
ffreep
je
iret
inc
jp
jp
aam
cli
xor
lds
add
mov
jp,pt
lods
hlt
pop
cmp
mov
ss
dec
out
hlt
push
mov
inc
pop
jno
lea
sub
movsb
cld
adc
sarb
cmp
sbb
add
aad
cwtl
xchg
arpl
fcompl
push
in
inc
aam
inc
sarl
mov
ds
cmp
fs
mov
imul
fcmove
cli
jne
push
mov
bound
push
pop
sbb
xchg
pushf
sbb
pop
cmpsb
pop
lea
lahf
imul
mov
pop
fnstcw
xlat
stc
aad
shll
jge
and
lahf
inc
icebp
dec
cld
push
jbe
ss
aaa
outsb
push
pop
pop
adc
jno
lret
lds
sbb
mov
es
jge
js
dec
ljmp
shll
sub
outsl
push
sub
cmp
pop
jbe
call
jmp
pop
cwtl
fsubrs
cwtl
mov
push
cwtl
in
aas
push
or
xor
push
add
test
xchg
cmc
movsl
lds
xor
inc
gs
push
add
test
xchg
cmc
movsl
lds
ss
xor
push
add
mov
xchg
in
movsl
rcll
lea
inc
gs
aad
movsl
cmc
dec
dec
das
aad
mov
cmp
sub
icebp
std
push
int
fnstsw
movsb
outsl
fidivl
clc
and
xchg
dec
mov
cmp
in
push
std
push
int
fnstsw
lods
dec
mov
jle
mov
dec
mov
sub
out
sbb
push
int
frstor
lods
push
mov
fs
insl
pop
movsb
cmp
dec
mov
mov
pushf
ja
pop
mov
mov
lock
mov
inc
stos
pop
call
in
pop
movsl
add
pop
xor
mov
not
push
lock
mov
cmp
mov
icebp
xchg
cltd
cmpsl
jno
pop
clc
sbb
inc
sbb
xchg
rorl
push
cmp
mov
mov
sbb
push
push
fimull
lds
sahf
aam
popf
sbbl
popf
cmp
xchg
mov
shll
ficoms
popf
mov
insb
add
shr
mov
repnz
sbb
imull
and
xchg
sub
sub
aaa
scas
leave
popf
outsb
stos
lret
out
cs
std
or
frstor
ja
insl
xchg
jge
dec
mov
cmpsl
sub
out
sbb
push
mov
fwait
aas
enter
loop
sbb
sbb
sti
sbb
stos
mov
insl
xchg
fwait
jbe
push
scas
pop
pushf
cmp
cmp
fcoms
pop
negl
pushl
ficompl
fidivrl
fwait
mov
jnp
dec
mov
pop
lea
jle
mov
dec
scas
pop
mov
or
push
std
push
int
fnstsw
lods
dec
mov
jle
mov
dec
scas
pop
mov
or
push
pushf
cltd
push
cpuid
sub
fst
add
jb
xor
xor
lods
ljmp
jae
sarl
aad
mov
inc
inc
pop
cld
stos
mov
sbb
or
inc
xor
jle
xchg
repz
sub
jg
jb
addl
add
jbe
xlat
jb
in
sbbb
push
sarl
jne
idivl
jge
adc
cmc
mov
push
mov
inc
sub
dec
mov
pop
jecxz
andb
xor
jne
lds
cwtl
dec
or
aas
sub
and
push
fs
test
or
pop
mov
mov
push
jmp
test
pop
ds
inc
mov
push
in
mov
pop
dec
lret
xor
dec
les
sub
sti
stos
add
stc
clc
xchg
lahf
shlb
shr
stos
adc
idiv
xor
sbb
inc
fimull
push
mov
mov
into
dec
sti
and
leave
loopne
out
jnp
mov
outsb
add
fdivs
je
lahf
cmp
pusha
push
sbb
cmp
ljmp
iret
push
cmp
jl
inc
aam
mov
repz
lods
inc
dec
cmpsl
movsl
cmp
xor
insb
mov
mov
pop
inc
orl
adc
jg
outsb
movsl
xchg
mov
lods
sub
mov
stos
movsb
mov
cmp
jns
xchg
in
and
or
sub
dec
jecxz
outsb
mov
xor
lds
cltd
jle
xor
add
pop
repz
mov
jne
sub
insl
popf
xchg
mov
in
jb
cwtl
pop
xlat
in
sbb
mov
mov
leave
std
add
ja
push
push
push
repz
test
ljmp
lcall
xor
add
hlt
pop
imul
fistl
push
jne
cmp
push
or
xchg
add
fildll
out
sbb
mov
mov
sub
mov
jecxz
xchg
jle
scas
xlat
sbb
inc
lea
sahf
adc
adc
stos
jne
in
cmpsl
cmpsl
sub
mov
int
push
jge
mov
gs
imul
or
addl
ljmp
lods
fcoml
ja
into
pop
inc
arpl
je
test
jne
pop
pop
cmpsb
push
add
push
nop
sbb
out
in
je
loopne
push
jp
sbb
mov
flds
insl
jle
aas
xchg
int3
lea
and
pushf
xor
aaa
push
mov
cltd
jnp
out
inc
ljmp
ficoms
add
or
cmc
fisubrs
adc
mov
sti
mov
repz
hlt
lock
pop
lcall
loopne
rorl
jle
jns
xchg
popl
and
pop
xchg
call
pop
sbbb
jle
loope
xchg
mov
xor
ret
mov
incl
mov
addr16
js
popf
xlat
mov
jns
jecxz
lret
mov
loope
and
pop
aam
push
lods
mov
hlt
pop
movsl
repnz
xor
in
xorb
inc
fwait
xor
sbb
xlat
mov
mov
enter
add
or
dec
test
add
aaa
cld
jmp
cs
pop
out
cmp
in
push
aaa
lahf
arpl
dec
adc
cltd
xchg
test
std
dec
mov
ljmp
leave
into
daa
int
xor
pop
cmp
mov
lcall
cwtl
push
cmp
je
into
aaa
sti
mov
js
cmp
pop
jle
jg
mov
rcll
inc
mov
mov
jg
stos
or
mov
mov
push
pop
mov
or
das
les
cmp
jbe
sbb
dec
mov
mov
lcall
jg
mov
pusha
pop
jecxz
push
mov
push
sbb
lea
lea
int3
mov
xchg
jb
xchg
and
sub
out
inc
dec
pop
jg
leave
es
enter
ficomps
not
or
mov
movb
dec
jbe
flds
stos
jbe
std
dec
dec
stos
ficoms
in
dec
jns
mov
cmp
mov
add
mov
jg
pusha
mov
ret
sub
xchg
add
xor
les
jmp
jmp
sub
out
xor
pop
xor
insb
dec
out
jns
out
push
addr16
inc
mov
add
rolb
es
notb
test
lods
lret
mov
push
loopne
adc
mov
mov
and
xor
add
push
lds
jbe
inc
or
push
shl
decl
add
mov
sbb
jp
jno
inc
arpl
imul
and
cmc
cmpsl
or
lock
adc
dec
mov
gs
mov
jo
das
adc
cmp
jae
mov
imul
pop
gs
jmp
pop
inc
repnz
adc
mov
inc
scas
leave
mov
mull
adc
aad
inc
ror
mov
notb
fsubr
popa
cli
fisubrs
push
cmpsb
jb
insb
mov
pop
cmpsb
pop
mov
test
mov
setl
adc
inc
mov
leave
mov
lea
mov
or
popa
cmp
std
xchg
cs
mov
or
mov
add
mov
mov
inc
in
movb
sub
xor
xor
sub
fucomp
inc
int3
mov
daa
iret
aas
sub
pop
mov
pop
push
or
std
popf
test
daa
pop
in
pop
lods
dec
xchg
push
js
daa
cmp
call
ret
repnz
mov
cmp
clc
inc
shrl
pop
jmp
loopne
adc
out
sbb
sbb
aas
lds
test
sbb
fwait
cmp
stc
repz
push
in
je
push
adc
repz
cmp
sbb
sarb
daa
lcall
inc
add
sub
adc
and
jl
xor
mov
mov
mov
cmp
pusha
cmpsl
das
leave
push
sbb
scas
pop
xchg
pop
int3
xor
sbb
and
ljmp
test
sbb
mov
fldcw
ficomps
jl
movsb
jnp
cltd
data16
cs
out
inc
rcll
dec
push
sbb
je
add
pop
or
subl
jne
xor
fbld
adc
xchg
sub
xor
iret
mov
fwait
insb
arpl
outsb
lods
mov
mov
xchg
inc
or
fs
jle
sbb
pop
insl
fstl
scas
pop
rorb
test
ret
inc
lods
int3
mov
push
cmc
shrb
sub
mov
fsubp
add
cmp
scas
cmp
cltd
push
sbb
jo
iret
cmpsl
mov
sbb
cmp
lcall
popf
std
outsb
dec
das
rcll
mov
add
in
in
sbb
jae
cmc
es
push
rcrb
inc
add
fwait
in
cli
or
icebp
test
shll
pop
movsb
movsb
xchg
jno
dec
or
mov
mov
jmp
or
inc
jne
xchg
lahf
lock
add
push
sahf
shrb
mov
cmp
ret
mov
pop
cmp
jne
dec
pop
cmp
xchg
xor
adc
test
aad
xchg
pop
push
inc
dec
inc
or
sbb
sub
mov
xchg
movsl
pop
pop
push
and
cmp
lea
aam
mov
mov
hlt
das
jmp
xchg
pop
jle
loop
gs
mov
jge
fwait
cmc
in
fdivrs
mov
inc
push
fs
and
add
mov
mov
mov
cmp
inc
pop
cmp
in
jmp
imul
push
sahf
mov
iret
cltd
jno
push
es
sbb
sub
inc
jno
xchg
push
ss
xchg
cmc
add
cld
jb
adc
dec
sub
dec
shll
rorl
push
push
and
shlb
int
adc
aas
mov
mov
pushf
cmp
mov
inc
cmpsl
mov
jbe
jno
and
sbb
sbb
xchg
insl
pop
mov
xchg
adc
test
and
pop
enter
dec
fwait
inc
cmp
je
mov
inc
lock
iret
repnz
pop
iret
pop
sub
jp
and
cmc
jecxz
jbe
or
jnp
repnz
ja
dec
mov
fdivrl
push
andl
aam
mull
pop
or
jle
xor
jl
jo
inc
mov
cmp
mov
and
and
cwtl
dec
sti
rorl
or
repz
pop
and
sbb
fidivrs
insb
in
adc
add
iret
nop
cmp
jnp
xor
sub
and
outsb
push
sub
or
int
negb
add
xchg
ss
jg
lahf
cli
jne
add
cmc
xor
js
push
aaa
xor
cld
cmp
fistps
dec
ja
popf
jno
or
mulb
xchg
cmpsl
ret
movsl
xchg
out
js
mov
aas
test
pop
or
repz
and
outsl
or
sbb
and
xchg
lret
push
add
adc
sub
pop
xchg
adc
popf
cmpsl
dec
sub
rcl
insb
cmp
shll
jbe
mov
jbe
sar
fildl
jge
fst
xchg
lcall
adc
push
jecxz
fidivrl
push
cs
es
filds
out
jg
jge
cmp
adc
scas
push
lea
mov
mov
lcall
add
xchg
push
inc
push
cmp
cmp
aad
push
movsb
iret
icebp
dec
mov
xchg
mov
popa
mov
popf
push
xchg
push
xor
xor
out
adc
out
cli
xchg
adc
int
loop
jnp
add
inc
lds
divl
lods
pusha
loopne
mov
out
jg
fadds
jmp
ficoms
mov
cs
xchg
push
js
cmp
test
ficoms
fcmovbe
mov
mov
mov
test
dec
outsb
push
lods
rcr
gs
mov
xchg
sub
aaa
popa
rcrl
les
pop
adc
xor
push
or
jbe
in
lds
mov
cltd
xor
leave
add
js
xor
js
or
fildl
outsl
gs
insb
adc
int
sbb
xchg
sahf
int3
ljmp
xchg
arpl
pushf
aam
sbb
sbb
outsb
rcrl
gs
cld
int
ret
xor
dec
insl
push
xchg
sub
sbb
sbbb
rcll
lret
iret
mov
lds
sti
jecxz
cltd
xchg
out
xor
roll
shr
sti
and
aas
out
movsb
sub
inc
stos
mov
das
cmpsl
mov
push
push
sub
push
mov
in
and
and
mov
inc
jns
fnsave
mov
sbb
mov
jae
andb
jnp
sbbl
jmp
xorb
cmp
pop
push
enter
fmull
jl
and
mov
sub
divb
lret
inc
clc
mov
lahf
jmp
mov
inc
or
jb
lods
clc
popf
lcall
sub
das
push
movsl
push
add
fldcw
inc
popf
imul
mov
nop
sar
or
add
inc
les
xchg
rcll
repnz
out
push
shl
loopne
sti
shlb
aam
into
les
in
fcompl
in
fildll
hlt
aam
mov
or
and
inc
loope
imul
aas
sub
or
push
jge
incb
fstpl
or
stos
out
sub
add
call
incl
xorb
xor
inc
mov
addr16
xor
icebp
test
mov
fnstcw
iret
dec
push
mov
sti
test
sub
imul
in
mov
out
mov
idivb
nop
pushl
lret
cs
jbe
scas
scas
scas
inc
cld
inc
icebp
xchg
jmp
inc
das
loop
sbb
mov
inc
sub
ret
test
mov
cmp
test
leave
clc
into
andb
pop
mov
xchg
nop
dec
pop
inc
mov
out
icebp
test
mov
cltd
cmpsl
mov
jbe
out
pop
sarb
adcl
pop
scas
outsb
das
push
jg
jge
pusha
xchg
ljmp
aaa
movsb
nop
jne
cmp
dec
mov
jge
iret
lods
xchg
xor
out
sub
into
sub
stc
ds
fmul
push
jbe
daa
in
xchg
dec
divl
dec
lret
cmp
jb
loop
mov
imul
in
sarl
inc
jl
js
or
pop
xorl
jne
repnz
mulb
push
movsl
jns
sub
rcrb
cwtl
and
xor
push
mov
lods
cmp
jle
int
pop
push
out
sbb
hlt
xchg
pop
pop
push
mov
lods
push
mov
jl
add
sbb
rol
imul
ret
subb
mov
xor
into
adc
ficompl
xor
sub
je
enter
repnz
insb
cmpsl
push
sub
call
std
aad
sub
or
lods
addr16
imul
popf
mov
scas
ret
lock
test
mov
bound
into
mov
sbb
xchg
jo
add
or
or
or
sub
fs
adc
mov
out
pop
and
jnp
or
pop
loope
mov
mov
testl
xchg
jns
out
mov
cs
insl
movsl
push
cli
sub
and
push
mov
ss
mov
out
out
loope
push
push
fisttpl
mov
mov
xor
sub
mov
push
push
insl
mov
jbe
sarb
lods
js
mov
cmp
xor
iret
and
inc
inc
mov
mov
cmp
xlat
dec
jmp
insl
movsb
xor
int
roll
mov
sub
xchg
ljmp
test
pop
pop
xorb
inc
out
lret
dec
cmp
xor
inc
insb
lods
mov
pop
or
push
pushf
add
sbb
push
and
jmp
xor
arpl
xchg
jmp
xchg
or
sbb
sbb
adc
js
pop
aaa
jns
add
dec
loopne
enter
sbb
mov
mov
loope
pop
mov
repnz
mov
jecxz
incl
and
push
pop
lock
inc
std
jo
add
data16
fisttps
out
lods
jp
icebp
insl
outsb
pop
adc
mov
mov
add
adc
pop
rcrb
out
in
jbe
mov
into
test
movsl
iret
aam
jg
js
lods
cltd
idivl
jecxz
add
mov
jnp
ss
inc
mov
lahf
in
test
or
mov
mov
adc
dec
cmp
pop
cmpsb
sub
lahf
sub
fcoms
xchg
mov
pop
push
adc
or
sbb
ljmp
imul
test
das
test
cs
mov
das
rclb
arpl
add
mov
les
and
ret
jne
lcall
call
push
js
inc
add
push
out
jo
int
jb
sbb
dec
out
xchg
out
xchg
out
sub
imul
add
mov
xchg
test
adc
pop
arpl
xchg
push
sub
inc
inc
adc
cli
imul
inc
fstl
sub
int
pop
cmp
les
jne
xchg
jmp
stc
jo
cmc
push
arpl
scas
xchg
into
std
fdivrp
in
and
mov
subb
out
or
push
sbb
pop
cmpsb
pop
in
imul
or
jl
pop
mov
adc
sbb
mov
fdivrl
push
jl
mov
push
mov
xchg
sub
sub
repnz
in
push
cmp
pop
pop
call
pop
fmull
mov
push
aam
fisubrl
pop
ja
sub
inc
call
bound
dec
repz
add
out
lahf
dec
mov
or
pop
adc
mov
xchg
orl
mov
sub
mov
or
mov
sub
mov
sti
mov
nop
fists
jns
mov
pop
jb
in
mov
mov
adc
leave
xor
mov
arpl
jle
sub
inc
sahf
stc
sub
aam
daa
pop
mov
cmpsb
sub
adc
cs
mov
mov
mov
mov
out
cmp
mov
jl
mov
xchg
std
or
sub
add
popf
hlt
sub
sahf
sbb
sub
lret
dec
dec
jle
xchg
decb
cltd
in
mov
ja
in
inc
mull
decb
faddl
stos
shl
and
or
jmp
imul
mov
jl
jbe
add
mov
mov
stos
mov
in
shl
out
add
mov
cmp
or
ljmp
push
xchg
mov
or
daa
scas
push
jge
push
pop
loopne
pop
mov
out
int
out
ret
mov
or
add
or
xchg
adc
dec
jp
push
mov
mov
lods
dec
add
hlt
sbb
xor
pushf
mov
sub
addr16
xchg
out
dec
mov
das
jg
push
and
jb
int3
and
mov
cwtl
hlt
rcrb
jne
or
loope
push
inc
cltd
leave
stos
scas
or
fs
jl
pop
and
mov
int3
and
push
jmp
inc
fwait
ss
cmp
adc
push
push
je
repnz
inc
adc
jl
subl
test
adc
xchg
scas
xchg
sub
dec
jnp
push
aaa
out
pop
push
inc
repnz
or
outsl
call
push
stc
adc
fs
pop
mov
inc
cmpsb
dec
movsl
rcr
mov
push
jno
shrl
xchg
ds
add
cld
adc
das
xor
push
add
fwait
sbbl
loope
jmp
cmp
or
and
jecxz
je
jns
cs
add
pop
adcb
mov
cmp
push
and
lock
js
stc
jmp
inc
mov
fwait
sbb
fisubl
mov
xchg
adc
scas
pop
jl
pop
sub
xchg
push
jns
xchg
ret
insb
lret
repz
sbb
adc
adc
fcompl
add
or
jl
repnz
sbb
sbb
cmc
adc
lret
push
or
jl
mov
scas
fwait
in
pusha
cmpsl
pusha
xchg
in
cmp
loopne
mov
cltd
pop
fidivrl
rorl
add
pusha
inc
jae
test
dec
sub
in
xor
push
cmp
pop
dec
test
in
mov
outsb
add
shrl
fs
inc
ret
test
mov
lods
mov
iret
mov
cmp
int
popa
add
imul
dec
jb
lahf
bound
stc
out
jae
adc
pop
hlt
mov
jmp
jle
aas
adc
es
dec
or
ja
inc
inc
les
adc
sbb
das
pop
stc
xor
outsb
popa
inc
jp
and
fadd
pop
popa
sbb
inc
into
mov
xchg
xchg
pop
movsl
mov
bound
js
xchg
jle
loopne
cwtl
notl
lods
test
or
xchg
lock
xchg
sbb
lret
popa
inc
push
aas
hlt
push
sub
mov
and
cmp
or
test
sarl
enter
jno
into
imul
fmull
test
mov
ja
nop
sbb
cmc
out
jbe
ffreep
mov
in
cs
shrb
xchg
rcll
inc
mov
adc
insl
movsl
nop
aaa
xchg
xchg
jmp
or
sub
jmp
lahf
jmp
test
mov
adc
bound
loop
pop
adc
cmp
out
cmpsl
and
adc
pusha
pop
mov
jb
fsubrl
sub
pop
inc
loopne
mov
ret
std
pop
push
jecxz
sub
adc
xor
aas
aaa
or
enter
and
jl
aas
push
ljmp
sbb
sub
das
push
imul
mov
jmp
repz
inc
mov
dec
pop
push
jl
scas
lahf
and
aaa
enter
dec
loopne
xchg
xor
inc
popf
insb
repz
inc
stos
incl
jg
adc
sbb
icebp
outsb
cmpb
push
mov
add
add
add
fcmovnu
inc
popf
out
mov
mov
shll
hlt
dec
cltd
xchg
push
add
xchg
fsubrs
imul
add
xchg
ljmp
inc
jg
fwait
and
aad
fdiv
sti
xorl
test
leave
mov
inc
repnz
std
fistpl
repnz
lods
dec
mov
jle
mov
dec
scas
pop
mov
or
push
std
push
int
fnstsw
lods
dec
mov
jle
mov
dec
scas
pop
mov
or
push
std
push
int
fnstsw
lods
dec
mov
jle
mov
dec
scas
pop
mov
or
sbb
push
int
fnstsw
lods
dec
mov
jle
mov
leave
pop
inc
mov
cmc
adc
add
out
mov
or
cmpsl
icebp
mov
adc
and
push
push
fwait
gs
test
xchg
fisubs
mov
sahf
in
cmc
mov
and
push
push
push
gs
jne
test
xchg
fisubs
mov
sahf
in
cmc
mov
dec
or
jno
pop
sbb
fcmove
icebp
andl
je
mov
lods
cmp
sti
add
adc
int
push
pop
stc
mov
cmp
or
clc
cmpsb
nop
mov
mov
jle
outsl
aad
popf
int3
mov
add
push
add
scas
cmc
adcl
jne
test
xchg
pop
iret
and
sahf
pusha
and
inc
mov
pop
cs
roll
jp
jne
inc
imul
aad
mov
in
mov
or
push
stos
loop
shll
pop
push
data16
pop
pop
sti
daa
adc
cmc
pop
push
cmp
pop
fidivrl
jg
sbb
fldenv
cmp
aas
dec
into
xchg
fisubs
mov
sahf
in
cmc
mov
and
push
push
push
gs
les
fcoml
and
jo
and
outsl
push
insl
push
sub
jg
into
lock
out
fldenv
sub
sysexit
adc
jne
dec
add
xchg
fwait
mov
cmc
mov
and
push
push
push
gs
test
xchg
fisubs
mov
sahf
in
cmc
mov
and
push
push
push
gs
test
mov
cmp
cmp
and
rolb
js
lods
and
testl
mov
jle
lea
dec
jne
inc
xchg
mov
sbb
pop
adc
mov
sbb
cmp
clc
insb
insb
in
mov
dec
mov
dec
cwtl
inc
imul
push
mov
and
push
jmp
in
mov
jns
cmp
das
mov
arpl
ja
add
int3
push
into
adc
lcall
hlt
jmp
sbb
test
mov
fsts
cmc
dec
fs
sbb
loope
sbbb
jle
rcl
inc
cmp
xor
gs
or
mov
mov
out
cltd
dec
xchg
incb
scas
rcll
xor
ja
aam
cmpsl
cmpsb
movsb
cwtl
adc
xchg
shlb
out
xlat
lds
std
fucomi
pop
enter
shlb
jno
leave
and
dec
push
pop
das
or
xchg
shrl
out
ret
push
cld
outsl
jae
cwtl
fs
aam
push
jge
sub
jge
scas
xchg
mov
lea
mov
cmp
push
push
inc
or
call
pop
mov
inc
xchg
movsb
mov
leave
lods
movsb
lods
dec
insl
cmp
mov
mov
adc
pop
pop
push
icebp
xor
cwtl
inc
les
cmp
test
in
shrb
jbe
out
mov
jg
sub
jne
push
inc
mov
dec
sahf
lods
mov
rcll
stc
les
mov
jl
aaa
int3
lods
aas
fisubrs
and
movsb
pop
and
or
idiv
mov
test
jmp
fnstenv
imul
push
gs
int
ds
lahf
and
test
bswap
push
sti
and
sbb
in
cmp
scas
leave
test
stc
iret
std
bound
mov
movsb
ret
leave
data16
push
std
jg
cmp
out
inc
ja
push
scas
xchg
adc
cs
mov
or
insb
sbb
mov
cmp
stc
icebp
xchg
inc
adc
mov
xor
mov
add
les
mov
popf
jmp
pop
jbe
jl
mov
cld
loope
pop
aas
mov
mov
lret
js
fs
out
dec
jg
lret
xor
xchg
ror
or
adc
xchg
jp
cmp
lea
inc
mov
dec
in
mov
adcl
mov
push
lds
shrl
outsl
jg
inc
or
negl
and
xchg
movsb
test
stos
cmp
adc
jge
xor
fcoms
int
pop
rcll
sbb
stos
out
imul
jbe
add
fs
adc
jne
jb
in
and
cmc
popf
jne
pop
sbb
pop
sahf
movsb
test
cmpsl
popa
jne
hlt
dec
push
dec
int
bound
nop
outsb
add
testl
inc
sub
mov
inc
scas
mov
inc
test
inc
inc
out
ja
pop
xchg
in
gs
adcb
and
pop
bound
jp
jns
and
push
inc
popf
push
dec
jecxz
add
dec
and
sbb
mov
jne
push
test
mov
nop
jo,pt
repnz
add
pop
push
arpl
fiadds
xor
push
fs
pop
mov
enter
adc
mov
stc
xchg
add
hlt
imul
or
pop
popa
mov
mov
hlt
or
addr16
mov
xchg
inc
push
dec
jbe
cmp
int
movsl
jo
sti
inc
stc
xor
aam
pusha
mov
cmc
sbb
cmp
xor
xlat
das
push
cmpb
test
loopne
lods
mov
inc
push
push
inc
leave
and
mov
call
cli
inc
out
xor
daa
push
movsb
add
in
mov
mov
jp
adc
dec
mov
pushf
inc
push
sbb
call
pushf
ret
test
in
ja
iret
dec
mov
fucomip
in
lea
int
mov
cld
jnp
add
jp
add
lock
inc
sub
cmp
lret
cli
in
xchg
repnz
pop
pushf
data16
dec
clc
je
aas
pushf
repz
ret
fadd
pop
or
xor
add
sbb
filds
sbb
adc
aad
jno
iret
add
pushf
in
fscale
xor
iret
cmpsb
stos
mov
popf
out
fadds
call
fcmovbe
jmp
shrb
popf
mov
in
sbb
jge
sarb
inc
movl
add
inc
std
mov
jb
dec
sbb
sbb
inc
ss
ljmp
add
dec
cmp
push
push
ss
loopne
mov
stos
es
lret
lret
jp
mov
ret
std
mov
or
js
ja
push
jnp
jbe
pop
or
push
popa
adc
lcall
push
inc
xor
add
ffreep
inc
mov
dec
mov
mov
lea
out
mov
adc
pop
lret
insb
pop
xchg
adc
or
dec
mov
and
pop
into
add
lret
icebp
xchg
ret
fdivs
sbb
mov
push
cmp
mov
test
push
pop
gs
mov
cwtl
xor
or
mov
and
sbb
fadds
fidivrs
jae
cmpsb
xchg
or
das
aas
or
loopne
add
push
or
cmp
ret
cmc
sbb
loopne
dec
xor
push
ret
mov
loope
or
lret
daa
fs
and
xlat
push
push
inc
push
vmovss
scas
imul
adc
inc
jge
dec
mov
sub
pop
push
pop
pop
ret
or
bound
fcmovbe
mov
push
js
cmp
stos
sti
cmpsl
test
sub
pop
stos
rsqrtps
cmc
xor
xchg
inc
leave
mov
cmp
fadds
cmp
and
mov
bound
cli
leave
jns
mov
mov
pop
je
inc
add
mov
lods
enter
shlb
jecxz
imul
dec
inc
adc
pusha
xchg
push
sbbb
daa
jl
insl
stos
sbb
push
cmp
mov
adc
push
or
push
xor
adc
cmp
sbb
sbb
mov
pop
xor
loop
outsl
test
flds
mov
fwait
movb
jmp
leave
das
aaa
dec
mov
mov
inc
pusha
sub
sbb
lock
movsb
mov
add
pop
mov
test
and
pushf
ficoml
leave
lcall
pop
loop
int3
mov
negl
sub
jnp,pt
jne
dec
and
hlt
or
inc
mov
enter
cmp
mov
fcmovnu
dec
fiaddl
push
xor
mov
cltd
into
cmc
in
sub
or
mov
xchg
inc
and
rorl
lock
xchg
sub
in
sahf
rcrl
aas
lods
xchg
int
inc
das
ja
nop
push
push
arpl
iret
pop
jo
xchg
dec
imul
test
pause
fxtract
jne
shlb
lds
loop
in
mov
pop
xchg
inc
sbb
gs
and
enter
mov
mov
ljmp
jle
lahf
inc
xor
arpl
and
adc
shr
inc
push
inc
pop
sarl
loope
pop
shll
mov
das
pop
out
lahf
inc
js
xchg
jge
mov
shl
nop
mov
cmp
mov
mov
jmp
testb
fldenv
cmp
test
or
push
mov
add
cmp
pop
adc
inc
sub
cmp
clc
pop
sbb
push
sbb
fistl
mov
sbb
cwtl
mov
add
mov
cmp
cmpl
sbb
hlt
hlt
push
mov
jnp
mov
or
out
adcl
lret
xor
popa
sub
pmulhw
rdpmc
adc
int
in
push
mov
hlt
add
dec
adc
pop
mov
in
in
or
in
loope
aad
std
sbb
inc
cld
mov
xlat
shlb
js
mov
jle
push
leave
jae
fwait
pop
jp
in
icebp
adc
push
sub
lahf
int
nop
pop
xor
or
mov
xor
mov
shlb
jg
shl
jge
imul
xor
jecxz
ja
push
in
fistps
pop
inc
mov
cmp
xchg
aad
scas
scas
xchg
out
cmp
shlb
jb
imul
hlt
fsubs
push
add
mov
pop
dec
loopne
pop
hlt
pop
jl
gs
sti
jle
das
jecxz
jmp
xchg
mov
add
cmp
pop
adc
cmp
je
mov
xor
fcomps
outsl
loopne
bnd
or
jl
sbb
in
in
insb
test
xchg
or
cmp
push
and
and
std
pop
rcll
mov
jb
mov
aam
out
stc
jl
jge
jb
or
push
mov
fimuls
push
cmc
sarb
xchg
push
dec
sub
stos
jmp
cltd
pop
rorl
pop
adc
gs
repz
loopne
aas
cltd
gs
push
inc
ret
icebp
xchg
jne
dec
pop
xchg
dec
xlat
out
orb
repz
ficompl
or
cmp
mov
mov
pop
inc
sub
pop
pusha
enter
out
mov
or
cli
pusha
push
mov
xchg
or
std
xor
stc
lds
mov
aas
or
cmp
push
iret
xchg
rcll
jecxz
or
rol
mov
int3
sub
xor
or
sub
leave
aad
test
cmp
cmp
hlt
mov
das
mov
out
cmp
jo
sti
shl
sbb
mov
nop
jbe
and
dec
test
ja
push
mov
cmc
push
cmpsl
js
sbb
inc
dec
dec
loop
dec
ss
pop
imul
push
push
push
mov
sub
mov
mov
lods
imul
icebp
call
cld
sub
and
rol
in
xor
insl
test
movsl
cmp
pop
xchg
xor
add
jle
out
icebp
stc
or
loop
jecxz
mov
mov
add
cmp
sub
inc
dec
pop
sub
sbb
dec
mov
shlb
jb
inc
add
push
cs
xchg
fs
and
pusha
rolb
dec
in
mov
shll
popf
mov
lods
addr16
fidivs
xchg
mov
mov
mov
fmulp
mov
inc
cmp
pop
push
fst
adc
rorb
xchg
xchg
lods
push
or
icebp
dec
mov
insl
lds
jno
xor
pushf
push
cmp
test
stos
sub
scas
push
lret
xchg
xor
lcall
clc
enter
pop
or
int3
mov
xor
xor
pop
mov
xorb
test
repz
hlt
add
fs
sub
sub
call
ret
adc
ds
repnz
adc
adc
mov
adc
test
outsl
xorb
sbb
inc
sbb
push
jg
xchg
or
outsl
dec
cli
test
pusha
out
ljmp
jge
cld
inc
cmc
push
push
std
xchg
pop
cmpsl
aaa
cld
cwtl
fcomp
push
adcl
and
subb
loop
cmpsb
xor
mov
jbe
fdivs
fisttpl
data16
in
bound
loop
and
adc
int3
lea
cwtl
mov
mov
rcl
xor
or
gs
xor
xor
pop
daa
arpl
sbb
int
mov
jmp
sete
push
repnz
mov
mov
pop
jg
push
pop
push
and
pop
faddl
mov
fmuls
xchg
mov
test
fistps
cltd
pop
cmpsl
stos
jno
dec
add
repnz
scas
mov
or
outsb
movsb
sbb
or
cmp
push
shll
add
dec
sub
test
sub
faddl
sbbb
add
push
sbb
add
pop
inc
lcall
push
pop
out
movsb
push
movsb
inc
jp
jo
xlat
lea
ja
pushf
bound
ljmp
mov
jno
xor
xchg
repnz
mov
out
pop
bound
fldt
das
je
mov
pop
jo
fmuls
stos
outsl
sub
sub
xchg
dec
push
mov
xor
bound
les
cmp
lods
xor
mov
enter
mov
pusha
jo
sbb
movl
aam
les
jge
cmp
cwtl
flds
mov
inc
push
cwtl
dec
push
xor
mov
pushf
pusha
stos
cmc
fldt
lret
or
cltd
bound
fdecstp
pop
outsb
jle
into
es
mov
dec
add
cmp
push
in
cmovs
dec
loop
repnz
jge
cmp
push
loope
fstpl
jg
mov
push
lcall
loope
inc
addl
sbb
push
cmp
inc
leave
mov
push
ds
lahf
loopne
and
rolb
scas
mov
xor
shrb
and
pop
jmp
sbb
sarl
imul
mov
mov
notb
mov
pop
aas
mov
push
xchg
push
mov
je
mov
dec
mov
imul
add
inc
ficoml
js
aaa
leave
sub
adc
leave
addb
adc
dec
pop
jno
test
push
cmc
jge
lock
push
mov
mov
leavew
dec
out
pusha
inc
push
clc
jno
dec
jb
aam
shll
out
mov
sbb
in
jle
xlat
rcll
mov
pop
daa
and
dec
test
mov
dec
mov
or
xlat
ja
or
iret
xchg
inc
cli
pop
lock
test
adc
pop
adc
push
or
enter
dec
push
or
push
dec
pop
xlat
adc
jbe
ret
mov
xchg
lret
mov
div
xor
repz
adc
cmpsb
daa
enter
lods
mov
mull
add
aam
xor
aaa
call
lods
popf
inc
push
sahf
adc
movd
loop
test
loop
and
loope
adc
insb
mov
insl
and
imul
loopne
jbe
inc
push
mov
jne
cmp
scas
fwait
xlat
imul
pop
cmpsl
cmp
adc
push
push
cmp
decb
mov
cmpsb
nop
ja
ljmp
loop
fs
shll
scas
mov
jbe
clc
mov
or
mov
and
fmuls
cld
mov
mov
or
jmp
mov
xchg
and
dec
dec
jbe
lret
add
fmulp
xchg
cmp
lock
pusha
mov
mov
jl
nop
sbb
xchg
mov
sub
testb
mov
cli
pop
add
outsl
outsb
sub
push
push
out
ja
mov
sbb
xlat
loope
add
sarl
sub
icebp
in
push
loope
jae
bound
mov
adc
xchg
jno
in
test
add
cs
enter
dec
xor
sbb
std
xor
mov
pusha
sub
lods
sub
inc
aad
lret
ret
mov
jmp
repz
shrl
gs
popa
popa
cmp
jns
mov
and
mov
push
xchg
jp
dec
mov
jae
pop
in
in
aad
adc
xchg
out
pushf
or
xchg
mov
pop
push
mov
or
adc
scas
mov
push
jmp
jb
loope
into
adc
xchg
insl
and
out
repz
xchg
scas
and
mov
or
dec
in
lcall
lret
xor
pop
shrb
cwtl
jne
pop
add
sub
and
and
inc
das
sahf
mov
fisubl
insl
pop
and
add
sbb
mov
mov
dec
imul
fdivl
mov
cltd
adc
aaa
xchg
and
mov
js
bt
jge
xchg
dec
xchg
arpl
aas
inc
call
sahf
xchg
mov
xor
jbe
sbb
stos
fdivs
pop
mov
arpl
mov
cmpsl
inc
rol
pusha
push
aad
sub
and
stos
pop
je
gs
adc
sar
mov
cmp
sbb
scas
mov
shll
xor
dec
push
mov
or
xchg
cmc
xor
pop
sbb
xor
fadd
out
mov
movsb
mov
mov
bound
dec
dec
adc
or
aam
mov
fs
pushf
cmp
push
sub
mov
cli
sub
add
adc
insl
push
cltd
dec
pop
xor
inc
jns
and
sub
xchg
inc
sarb
aam
sarl
cmp
out
nop
ljmp
cmc
test
jno
mov
xchg
cwtl
dec
xchg
out
xor
mov
stos
cmc
jo
xchg
cmp
push
and
inc
pop
sub
add
xchg
sub
adc
out
addr16
or
rcrl
xor
popa
cmpb
pop
ljmp
fildl
mov
in
cmpsl
in
inc
cmovg
jmp
adc
leave
push
insl
les
filds
insl
stos
xlat
xchg
mov
mov
mov
mov
stos
and
or
clc
js
ret
imul
jmp
ret
and
inc
clc
movsl
fs
xchg
mov
mov
cmpsl
xchg
not
out
and
ds
lods
lds
mov
jo
bound
pop
stc
jge
gs
inc
scas
loop
sbb
jle
cmpsl
mov
rorb
xchg
dec
cmc
imul
test
lock
and
fdivp
lock
cmpsb
out
xchg
adc
daa
pop
inc
mov
out
xor
sbb
xor
cld
pop
adc
icebp
rolb
dec
xchg
arpl
in
mov
jbe
lahf
rolb
pop
mov
test
stos
mov
cmp
cmpsb
fwait
iret
dec
hlt
ss
enter
pop
cmpsb
and
jno
sbb
mov
pushf
and
rclb
mov
mov
mov
dec
adc
test
decb
mov
es
shr
pusha
sbb
ljmp
dec
test
pop
lea
push
mov
movsb
call
ja
xchg
cltd
xchg
sub
cs
ja
es
mov
enter
push
popa
stos
adc
cmp
dec
pusha
pop
addr16
outsl
inc
adc
add
ret
aad
rol
adc
cmp
or
adc
in
sbb
dec
mov
stos
repnz
aaa
lahf
daa
inc
sbb
xchg
add
sub
dec
and
popf
nop
and
jg
or
or
jae
lahf
sbb
das
push
jbe
mov
fwait
mov
movsb
mov
ljmp
rclb
sti
or
adc
rorb
je
ja
and
sbb
sahf
enter
test
mov
or
scas
pop
outsb
xchg
repz
negb
mov
ret
mov
cmpb
lahf
dec
inc
and
sub
mov
mov
aam
jl
push
movsl
jl
jecxz
adc
cmp
rcrw
sub
mov
mov
cmp
and
sbb
adc
adc
jo
pop
mov
out
adc
dec
lret
cmp
iret
sub
xchg
popa
insl
xchg
inc
mov
dec
mov
add
xchg
mov
data16
adc
mov
lret
add
add
adc
inc
sti
xor
aam
iret
dec
enter
cmp
in
xchg
jmp
ret
dec
xor
xchg
nop
xchg
cltd
cmp
mov
push
test
jns
xor
sbb
mov
mov
orl
and
cmpsb
sub
call
or
and
arpl
mov
inc
test
cmpsb
jne
dec
jge
jmp
scas
repz
test
movsl
shrl
push
shll
xor
fsubrl
cmp
arpl
cmpsb
ficoml
push
jns
scas
lds
inc
int
mov
sti
push
mov
add
mov
sbb
int3
int3
push
xchg
mov
mov
xchg
mov
daa
outsl
hlt
jo
add
mov
push
pusha
in
std
rcrb
es
sub
outsl
sub
scas
mov
add
inc
insb
lods
pop
cmp
sbb
xlat
pop
jle
aad
movsb
je
jle
dec
das
pop
mov
sti
pop
or
mov
dec
fs
ja
aas
jp
xor
add
fsts
fmuls
inc
push
add
mov
and
pop
test
push
add
jns
in
leave
adc
or
cmp
subb
lods
popa
xchg
int
inc
mov
int3
fwait
into
mov
loop
orps
dec
and
add
fisubs
aad
in
cmc
mov
and
push
push
push
gs
test
xchg
fisubs
mov
sahf
in
cmc
mov
and
push
push
push
gs
test
adc
incb
aad
in
jne
add
outsb
xor
push
gs
test
xchg
fisubs
mov
sahf
in
cmc
mov
outsb
xor
loope
roll
addb
and
mov
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
xchg
out
mull
cmpsb
xor
and
xor
addb
mov
pop
sbb
cli
out
mull
insl
mov
les
clc
bound
xchg
ja
or
pop
imull
and
adc
mov
stos
scas
and
shlb
sbb
xor
cli
xchg
xor
push
push
sarl
lea
or
pop
pop
xor
dec
orl
test
mov
cmpl
xchg
jb
inc
add
shlb
push
ja
addr16
daa
rcrb
stos
out
pop
sbb
movb
fiadds
in
xchg
lcall
adc
inc
daa
iret
idivb
xchg
cli
pop
loop
inc
adcb
cmc
xlat
and
add
inc
add
popf
lahf
push
ja
int
rcrb
pushl
and
int
cmp
push
mov
xchg
out
xchg
ja
inc
ss
test
shlb
ret
pop
out
test
cmpsl
jle
mov
adc
xor
cmpsb
push
lods
inc
fwait
jb
push
inc
inc
test
mov
sarl
jecxz
cmp
xor
xor
pop
xchg
push
icebp
pop
pushf
outsl
mov
push
mov
in
add
push
xlat
adc
lds
ja
data16
ret
pop
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
jb
lret
mov
loope
lods
jecxz
lock
mov
out
stos
dec
mov
sbb
push
xor
mov
repz
pop
mov
lds
mov
stos
add
into
push
insb
sbb
rol
andb
add
xchg
jb
jns
mov
ss
sub
cltd
imul
fs
out
dec
adc
or
testl
add
lods
ja
jecxz
imul
mov
cs
add
xchg
sar
fimuls
pop
xlat
and
stc
addl
out
and
in
mov
xchg
and
jns
lret
popa
aas
or
jbe
das
je
les
sti
cltd
cltd
and
and
out
push
jmp
push
mov
jae
and
mov
jmp
stc
call
xor
aas
stos
xor
aas
adc
jns
push
pop
or
mov
imul
ja
cmp
mov
jb
ljmp
inc
fwait
hlt
imul
pop
mov
cwtl
mov
lret
push
cmp
xchg
mov
mov
int
or
int
mov
xchg
aaa
mov
negb
push
popa
inc
test
push
pop
iret
mov
or
pop
pop
or
push
hlt
mov
es
push
cmp
push
push
sbbb
pop
xor
popf
add
inc
mov
cmpsb
xchg
imul
dec
mov
fdivl
rcll
mov
orb
cwtl
sub
fnstcw
adc
cmp
lret
mov
hlt
mov
or
les
aaa
fwait
enter
aas
push
push
ds
add
inc
jg
xor
mov
test
push
push
mov
mov
xchg
adc
jbe
insl
iret
repnz
std
gs
mov
rorb
shll
xor
or
cmp
ja
push
sbb
pop
jbe
popf
mov
xchg
fnstcw
cmp
dec
xlat
push
arpl
sbb
xchg
adc
divb
mov
subb
or
xchg
enter
arpl
xchg
pop
into
pop
addl
std
cmpsl
dec
push
push
test
mov
xlat
test
repz
das
inc
jns
push
aaa
xor
jl
push
fsubrl
or
pop
dec
mov
hlt
aas
mov
mov
cltd
in
out
xor
pop
pop
mov
cmc
push
cld
stc
inc
shll
jne
sub
sbbl
fistps
xchg
dec
in
test
iret
xchg
adc
outsl
xchg
push
shr
nop
pop
pop
or
push
je
shll
test
sbb
cmp
test
mov
cmp
insl
jmp
xor
outsb
jae
push
inc
lods
jg
aaa
push
jb
rorb
jl
dec
leave
ds
mov
call
repnz
mov
cmp
xor
aam
in
stos
lahf
inc
enter
mov
sar
push
stc
inc
ljmp
stos
int3
pop
or
dec
repz
ljmp
xchg
cmpsb
std
loop
lea
inc
push
ja
pop
mov
pushf
jnp
sub
loope
hlt
jge
push
mov
scas
xchg
add
scas
out
leave
inc
cmp
fsubrs
fiaddl
loopne
out
sub
loope
or
mov
cmp
fdivrs
cmc
fcoms
sbb
ret
jb
gs
ljmp
mov
pop
cmpsb
adc
dec
out
adc
pop
and
imul
jecxz
roll
jno
and
dec
outsl
pop
data16
nop
out
in
pop
dec
divb
test
xchg
add
or
push
lret
jecxz
jno
rol
add
sub
mov
ret
fdivr
jge
fistps
push
jmp
jecxz
inc
movl
fnclex
shlb
mov
cltd
xor
push
pop
ficoms
cmp
cmp
or
push
pop
les
xchg
cmp
mov
pop
pop
and
cmp
in
jge
jmp
jg
cld
fstpt
pop
add
jg
push
nop
cmp
cmpsb
mov
rcrb
mov
inc
scas
pop
shrl
pushf
and
xchg
add
aas
or
adc
mov
sub
cmp
les
xlat
daa
enter
cli
and
in
adc
pop
mov
inc
mov
nop
int
cli
fs
outsb
pop
pop
das
rorl
or
pop
mov
call
inc
mov
dec
pusha
or
loop
into
movsl
push
movsb
lds
lret
cmp
movmskps
pop
std
or
addr16
lods
jecxz
sbb
and
xor
in
ja
mov
push
xchg
test
cmpsb
mov
iret
sbb
sbbb
frstor
mov
dec
lahf
dec
cmc
daa
and
mov
fbstp
insl
adc
loopne
repz
pop
fmull
in
movsb
or
arpl
push
clc
jo
mov
mov
hlt
sub
jno
xchg
stos
inc
dec
clc
jne
jge
cmpsl
fcompl
js
shl
jae
cmpsb
aam
shlb
or
stc
mov
negl
sbb
pop
icebp
inc
cmp
push
lods
enter
mov
cmc
in
lds
xchg
aaa
push
cmpsb
fisubs
orl
in
adc
jae
cmp
cmp
jbe
sbb
xchg
mov
iret
push
inc
xor
fimull
jo
je
ljmp
jmp
cmpsb
and
or
int3
fsts
mov
or
mov
imul
dec
adc
mov
xor
addr16
mov
movsl
cmp
in
inc
in
shrl
adc
jmp
sbb
adc
xor
pop
cmp
pop
mov
push
push
pusha
adc
sti
inc
cmpsb
rclb
sub
add
arpl
daa
sbb
sub
xchg
pop
mov
and
int
pop
nop
xchg
pushf
fwait
xor
add
imul
adc
adc
xchg
mov
imul
dec
pop
xlat
adc
mov
gs
aaa
or
out
daa
jbe
stos
push
ror
sub
and
stc
or
and
movsb
dec
std
jo
jge
stos
pop
and
jns
cmp
dec
jne
xor
scas
fcmovb
movsb
pusha
cli
sbb
jl
jne
sub
mov
xor
pop
in
leave
dec
scas
pop
pop
or
loopne
sti
or
xchg
jle
or
adc
movsb
js
pushf
clc
xor
sti
sbb
stc
xchg
and
adc
popa
push
outsb
inc
in
lcall
xchg
movsl
inc
dec
mov
or
xor
pop
mov
pusha
dec
out
or
outsb
mov
push
out
jge
sub
add
mov
sbb
lock
out
cmp
adc
dec
push
dec
mov
mov
mov
push
in
lahf
xchg
push
pop
add
push
pushf
pop
lret
xchg
bnd
xchg
lret
xchg
cmc
ja
sub
aaa
pushf
in
fisttps
dec
dec
scas
mov
or
jl
push
in
inc
in
mov
nop
adc
ret
or
pop
sbb
insb
mov
movsb
sbb
lock
or
adc
shlb
call
test
or
push
mov
test
mov
iret
jmp
inc
test
mulb
xchg
mov
cwtl
dec
rol
jae
xor
mov
mov
shlb
stc
xor
push
not
and
rcrl
add
jmp
imul
mov
insl
hlt
rorb
into
xchg
jnp
add
mov
xchg
aas
lret
push
lods
push
xchg
clc
loope
mov
mov
inc
ja
sbb
pop
aaa
mov
push
icebp
pop
inc
aam
movsl
lea
inc
sbb
mov
mov
neg
daa
sarl
mov
mov
cmp
xor
rcl
mov
or
into
daa
and
add
push
enter
dec
out
push
pop
fwait
mov
mov
subl
push
in
push
adc
push
xchg
ja
test
xchg
das
pop
into
jae
cmp
daa
sub
lds
rcrl
xchg
jl
fs
xchg
lret
dec
daa
imul
repz
adc
imul
adc
sbb
cltd
cmp
pusha
out
mov
adc
rcrl
mov
rorl
push
dec
xchg
cs
jl
sub
push
rcrl
adc
fwait
lret
and
out
push
jb
mov
addr16
pushf
stc
testb
inc
pop
insb
jge
fwait
aaa
mov
adc
mov
and
testl
xor
outsl
fstps
xrelease
shr
cmp
jge
pop
pop
jg
push
pop
cmp
and
push
mov
int
arpl
clc
sahf
mov
cld
icebp
push
cli
ret
das
push
incl
inc
jne
sbb
aam
xchg
and
movsb
outsb
fs
sahf
xor
js
or
sub
sub
mov
pop
add
lahf
in
mov
daa
dec
enter
les
push
mov
stos
push
pop
or
stc
leave
lea
sbb
out
inc
mov
sub
loopne
lcall
dec
xor
or
notl
popf
mov
xchg
fsts
cmp
jo
ret
popa
xor
out
dec
ret
cmp
jp
xchg
push
push
loop
push
test
cwtl
popa
push
ss
out
push
push
and
add
into
add
sub
cmp
imul
aaa
xor
push
mov
cld
frstor
mov
loope
pop
repnz
dec
notb
pop
adc
inc
and
mov
rolb
jg
add
adc
icebp
mov
mov
int
in
pop
aam
out
inc
lcall
pop
scas
sbb
fs
clc
xchg
xchg
cmp
ss
in
int
aad
sbb
jb
xchg
icebp
enter
sbb
or
adc
mov
pop
pop
scas
das
sub
sub
lock
jp
js
jo
or
cmpsb
arpl
cmp
dec
call
xchg
cwtl
lahf
test
mov
jg
and
or
or
movl
jmp
fildll
lock
inc
adc
hlt
leave
push
cmp
test
or
cmp
frstor
xchg
out
xchg
ljmp
loop
sti
add
jnp
sbb
xor
aam
add
push
arpl
sub
fdiv
movl
popa
mov
sbb
cmp
cmp
push
dec
pop
mov
inc
shrb
xchg
dec
sub
mov
inc
jge
xchg
adc
mov
in
adc
clc
dec
mov
lahf
in
scas
movsl
and
test
jno
fs
pop
aad
inc
insl
and
jnp
add
js
loop
loopne
addb
lods
inc
cmp
out
push
in
push
mov
iret
pop
loopne
scas
sbb
aad
movsl
xor
push
imul
lea
js
repnz
loop
aam
pop
sub
outsl
out
push
imul
inc
or
mull
fiadds
sbb
xchg
fs
dec
test
mov
bswap
fsubl
cmp
mov
insl
push
adc
test
adc
fistps
adc
push
int
int
test
adc
xchg
mov
test
pop
fdivl
in
mov
pop
fcompl
mov
icebp
xor
add
jg
dec
hlt
add
mov
mov
ret
push
push
push
xorb
add
or
push
adcb
add
clc
icebp
push
sub
sub
mov
sbb
cs
outsb
dec
lret
mov
es
scas
je
jbe
inc
jmp
jnp
mov
pop
xchg
lret
cmc
sbb
dec
rolb
fstpt
xlat
je
cmp
pop
jb
ljmp
or
inc
cmp
push
movsb
sbb
sub
shl
jecxz
pop
pop
jl
outsb
mov
loop
pop
pop
fdivrl
xchg
cmc
fmull
xchg
add
fiadds
lea
repz
sbbl
xor
outsl
in
sub
outsb
or
nop
xchg
lret
in
leave
add
push
shl
sarl
out
fadds
pop
mov
mov
xor
xor
out
jae
sub
lcall
cli
mov
mov
ss
add
js
push
pop
mov
out
xlat
movsl
fbld
mov
xor
rcl
enter
add
aad
xorl
push
jg
lcall
cs
clc
lea
jb
mul
push
xchg
into
imul
sbb
arpl
push
je
cmp
das
dec
gs
cmp
jae
xor
or
arpl
dec
sub
cmpsb
lcall
jge
and
xor
jg
in
jns
mov
inc
out
sti
lcall
xor
jmp
mov
daa
lret
shl
or
icebp
pop
inc
shrb
cmp
sub
xor
inc
push
ja
pop
sub
pop
dec
loope
xchg
jecxz
rcll
sbb
cmpsl
inc
mov
imulb
cmp
movsl
jnp
gs
push
loope
in
nop
mov
dec
out
movsl
sub
gs
stos
loopne
mov
pop
mov
inc
dec
xor
pop
xor
adc
fildl
mov
aad
xor
lahf
dec
mov
pop
pushf
fistps
pop
ljmp
ds
push
mov
push
test
and
mov
cmpsl
mov
test
xor
mov
inc
js
sbb
arpl
add
adc
std
jmp
shlb
mov
xor
xor
jnp
add
mov
jne
sahf
mov
mov
adc
ds
pop
arpl
xchg
push
dec
popa
jmp
cld
cmp
push
or
sbb
dec
adc
icebp
outsl
in
sbb
test
push
addr16
adc
xchg
sbb
in
idiv
in
jle
les
mov
dec
push
cmpsl
stmxcsr
mov
xchg
add
lcall
mov
mov
push
andb
jle
push
mov
inc
insb
ds
sbb
lods
adc
bound
shlb
push
hlt
cltd
jg
mov
add
pop
jns
outsl
mov
gs
in
mov
xor
cltd
fisubrs
and
mov
inc
pop
jge
mov
std
loope
js
push
jbe
jecxz
dec
pop
jne
or
xor
fsubl
shrl
sub
arpl
xchg
jbe
mov
arpl
push
mov
fsubs
xchg
mov
fwait
pop
push
lods
pop
into
push
add
loop
or
push
cmp
fidivrl
fdivp
loop
dec
ljmp
xchg
iret
popf
inc
ljmp
adc
and
adc
sub
loope
and
ret
fwait
test
sub
test
push
sarb
or
mov
js
mov
lea
shl
jmp
std
out
mov
inc
lds
fcompl
stos
ds
xchg
stos
popa
imul
or
and
nop
and
push
inc
xchg
stos
lcall
lods
dec
push
stos
test
jg
pop
cmp
cmp
notl
sub
shlb
adcl
leave
sbb
dec
xchg
pop
fildll
notb
outsb
push
xchg
pop
and
mov
jmp
sti
inc
sti
dec
mov
lcall
adc
lea
repz
sbb
or
mov
icebp
adc
adc
jle
cmp
fwait
adc
mov
adc
sbb
push
hlt
lahf
out
jnp
jmp
adc
add
in
sbb
and
pop
cmc
repnz
ficomps
addr16
adc
jl
iret
jle
lea
jp
shrb
and
mov
ss
std
jae
ds
sbb
mov
add
and
add
out
xor
push
xchg
mov
imul
sub
outsl
stos
sbb
fbstp
jno
fcompl
mov
adc
insl
leave
stos
in
mov
leave
mov
sub
orb
enter
shlb
sahf
sbbb
cmpsl
mov
mov
mov
add
movsb
dec
or
clc
inc
fsubr
loop
in
fcom
inc
lods
push
decb
dec
sub
mov
rolb
stos
sbb
push
jb
add
inc
pop
dec
out
fwait
push
mov
in
outsl
dec
sub
xchg
jnp
je
mov
imulb
daa
test
hlt
pop
mov
cli
movsl
shrl
call
fisttpl
negl
outsl
inc
sub
cmp
iret
fadds
arpl
and
test
addr16
mov
mov
int3
pop
test
dec
in
stos
fwait
lods
dec
pop
cld
sbb
es
push
mov
mov
inc
nop
inc
es
ss
popa
mov
cltd
mov
cmp
out
jo
lods
cmp
add
push
push
loopne
movsb
js
inc
push
xchg
ret
mov
imul
insb
xchg
and
xchg
inc
in
imul
or
mov
dec
or
test
into
lret
test
and
dec
and
fisubrs
pop
pop
and
sbb
jecxz
scas
cmp
inc
mov
ret
mov
xorl
jb
xor
push
inc
shrl
ror
sub
call
or
fsubs
imull
pop
iret
ficomps
int
adc
sbb
inc
adc
cmp
test
push
test
mov
mov
fsubl
dec
hlt
sub
stos
pop
jns
mulb
out
adc
mov
or
movsb
ret
mov
mov
inc
and
hlt
mov
cmp
mov
stos
sarl
repz
mov
aaa
outsl
sbb
out
xor
xchg
or
jae
jg
js
mov
jae
dec
stc
xchg
ja
nop
push
mov
int3
jno
add
xchg
pop
punpckldq
sbb
mov
xor
or
and
sbb
adcl
ja
xlat
add
cmp
xchg
add
out
sbb
pop
pop
bound
push
jno
insl
sub
pusha
sbb
ljmp
or
sahf
mov
dec
les
adc
loop
jecxz
outsb
loopne
pushf
or
xchg
push
add
mov
shlb
mov
les
or
pushf
lret
cmp
sub
sub
dec
dec
sbb
bound
xor
cmpsb
sbb
xor
push
cmpsb
sbb
mov
ljmp
jo
pop
mov
push
push
fisubrs
xlat
jo
jb
call
cmp
sbb
mov
cmp
repnz
jne
popa
jbe
jbe
cltd
rcr
shl
and
movsb
add
scas
fcoms
bound
xor
clc
mov
out
inc
sbb
ds
out
insb
adc
popf
shll
fsubr
mov
into
mov
in
xchg
rcrl
aas
ljmp
sarl
sbb
mov
mov
adcl
push
dec
xor
xor
and
adc
adc
jno
rcrl
mov
iret
ret
ja
rcr
dec
clc
hlt
xor
mov
scas
mov
xor
imul
scas
push
movsl
xchg
fcmovnbe
inc
out
aas
fistl
scas
xchg
cs
leave
mov
adc
sbb
fs
push
je
shlb
dec
push
cmp
dec
outsl
adc
and
dec
jp
sub
pusha
lock
cltd
scas
jo
popf
stos
lods
bound
mov
mov
xchg
dec
push
push
sbb
mov
cwtl
out
push
sub
and
mov
movsb
sub
jae
leave
adc
or
test
les
scas
cmp
out
pop
inc
std
inc
pop
dec
inc
mov
enter
dec
jmp
aas
mov
jp
dec
jno
mov
sarl
shr
lods
sbb
pop
mov
push
scas
test
pop
adc
inc
add
in
out
les
cli
jae
xchg
stos
add
insb
xchg
adc
mov
jns
jnp
pmullw
rcpps
push
pushf
jmp
jne
cltd
push
clc
cmpsl
dec
ja
adc
fistpl
cltd
nop
imul
imulw
cmpsb
cmp
sarl
in
outsl
fcompl
fidivl
and
pop
or
xchg
or
add
mov
das
mov
enter
jmp
dec
fistps
sub
jge
test
or
push
out
xor
int3
leave
mov
adc
outsb
lret
testl
divl
push
iret
mov
out
divl
cmp
cmc
movsl
repz
imul
adc
std
daa
paddsb
dec
fdivr
daa
sbb
push
mov
ret
ficoms
daa
shlb
ret
pop
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
ja
inc
lret
daa
shlb
push
repnz
loop
lret
xor
and
push
xchg
bound
jbe
inc
mov
mov
pop
jb
loop
in
imull
rcr
aas
mov
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
fwait
dec
mov
push
movsl
sbb
sub
clc
cmp
sub
jnp
imul
mov
push
lret
cmp
sub
fcomps
enter
call
dec
mov
fwait
mov
stos
push
fldt
es
sub
mov
dec
lea
repz
das
in
push
hlt
imul
add
js
add
sbb
add
lahf
pop
sti
pop
cmpsl
cmp
fstpl
mov
xchg
mov
clc
stos
in
push
and
jecxz
cmpsb
mov
sub
aam
mov
mov
rorl
push
fcmovne
cmc
in
ds
js
test
popf
mov
or
adc
mov
jl
push
aam
or
dec
cmpsl
push
inc
ja
insl
cmc
push
in
xorb
mov
or
lods
sbb
xchg
mov
inc
jp
cmp
mov
loope
xor
sbb
sbb
adc
outsb
stos
imul
push
mov
push
lret
cmp
mov
push
sbb
mov
fsubrs
rcrb
dec
mov
sub
or
adc
ja
data16
fdivs
bound
ss
sar
int
adc
mov
insl
in
xchg
jge
mov
insl
nop
inc
loope
out
rorl
jmp
lcall
iret
cmp
dec
mov
lret
cmp
sub
fcomps
enter
call
dec
mov
fwait
dec
mov
push
lret
cmp
sub
fcomps
enter
call
dec
mov
fwait
out
sahf
mov
push
loopne
push
lods
mov
fwait
pusha
ret
insl
add
mov
movsl
push
shlb
fildll
enter
cmp
xchg
add
pop
jo
adc
inc
xchg
mov
pop
movsl
pop
sbb
or
adc
subb
sub
enter
jle
test
std
push
fcmovnb
out
add
sahf
shrl
jecxz
mov
jns
arpl
mov
adc
sbb
pop
call
xlat
adc
adc
addr16
adc
mov
orb
fisttpll
test
inc
xlat
sbb
ret
xlat
jle
es
in
out
rcrb
pusha
or
pop
add
or
enter
and
mov
and
mov
cmpsl
out
lret
les
out
cwtl
push
and
scas
dec
mov
int3
into
mov
jle
loop
sub
loope
lret
xchg
mov
sbb
and
xchg
cmp
out
xor
fistps
dec
xor
and
lds
out
pop
jp
bound
jb
stos
mov
sub
clc
inc
inc
or
movsl
ja
jb
loope
imull
sbb
xchg
loop
adc
daa
in
mov
out
lcall
add
repnz
out
mov
fisubl
or
xchg
adc
popf
sbb
mov
iret
int3
stos
call
aaa
lret
add
ja
adc
lcall
repz
xor
cmp
das
mov
imul
mov
call
push
cmp
decb
jno
incb
mov
pop
xor
mov
bound
jmp
andb
jp
lret
stos
jp
dec
stc
inc
sahf
loop
cld
mov
adc
cmp
sbb
loop
xchg
movsb
cmpsl
cmp
ds
cmp
enter
rclb
jns
ret
pop
lods
cmp
inc
mov
inc
aam
pop
add
fiaddl
ret
adc
into
cld
mov
aam
in
cs
jp
insb
stos
in
std
push
lcall
inc
mov
bound
lcall
outsl
mov
mov
int3
sub
test
xchg
mov
or
mov
outsl
push
cmp
and
sbb
or
sbb
inc
shr
scas
movsl
es
ret
sub
repnz
imul
adc
mov
pop
add
mov
fwait
pop
mov
stos
iret
push
sbb
je
ja
ror
ljmp
loopne
cmp
mov
outsb
xor
and
mov
push
popa
xchg
xor
int
jp
push
in
or
push
xor
fsubrl
fdiv
add
xor
mov
cmp
pop
mov
dec
jne
pop
mov
push
xor
cmc
popf
call
push
lahf
mov
cmpsl
es
jecxz
rol
push
cmp
jns
insb
jnp
push
push
and
push
push
jo
popl
and
sbb
bound
scas
hlt
add
mov
mov
sti
push
mov
or
xchg
aaa
nop
je
xor
add
iret
jno
pop
xlat
inc
or
popa
das
inc
ret
arpl
ds
sti
or
xchg
mov
arpl
in
adc
dec
xchg
lods
mov
pop
lcall
xchg
inc
xchg
lds
cmp
add
loop
sbb
pop
ss
dec
pop
enter
jnp
push
sbb
xchg
xchg
push
movups
push
mov
repz
sbb
lds
dec
xchg
cwtl
xchg
pop
dec
test
add
push
mov
and
jge
and
xchg
stc
adc
sub
adc
mov
jno
and
test
push
repz
stos
loopne
push
xorb
rcrb
lods
data16
pop
mov
or
pop
cmp
jno
fdivs
pop
xorb
ficomps
mov
loope
xchg
adc
dec
mov
sub
add
jno
dec
mov
xorl
mov
xchg
mov
jne
adc
mov
push
testb
out
fucomp
mov
or
cmpsb
jno
icebp
xchg
test
xchg
pop
test
push
jnp
dec
jle
mov
stos
bound
int3
repz
dec
fs
cwtl
out
repnz
aas
lahf
push
pop
push
xor
or
xor
mov
jae
test
fldt
add
dec
push
sbb
ror
out
out
cmp
sbb
ja
push
addl
lret
dec
stos
arpl
add
xchg
cltd
daa
cltd
cmp
fistpll
jmp
cmp
jbe
scas
shrl
jns
push
sbb
xorl
loopne
add
ss
andb
and
xchg
xor
arpl
cs
ja
movsb
cli
ss
add
cmp
mov
push
pusha
loope
dec
sbb
pop
mov
adcl
jle
and
paddusb
dec
pop
mov
cltd
sub
pusha
or
out
lock
mov
cmp
jns
andps
out
sub
jp
repz
icebp
push
js
andb
testb
stc
inc
sub
lret
les
xor
cmc
call
adc
ret
popa
mov
xor
mov
mov
lea
sahf
mov
data16
stc
pop
test
mov
and
cmp
mov
jg
mov
test
dec
mov
jns
rcr
pop
jns
aad
cmp
rcr
out
jge
popf
das
mov
pop
dec
faddl
movsl
pop
sbb
xor
ja
outsb
adc
outsl
dec
pusha
in
test
jle
fstps
sub
out
dec
mov
je
xor
nop
leave
std
inc
icebp
jecxz
pop
addl
bound
lahf
pop
push
mov
sbb
je
movsb
or
movsb
iret
xchg
insl
pop
dec
bswap
push
mov
fs
or
and
and
adc
xchg
addb
or
sub
bound
icebp
int
or
jns
lahf
incb
add
dec
mov
or
push
add
ficoms
push
cs
pop
push
lea
jne
push
pop
jae
mov
adc
jns
in
hlt
rclb
idivb
repz
cmp
out
xor
jne
subb
lahf
ficompl
mov
sbb
addl
cmp
imul
mov
sub
test
xlat
int
sahf
jle
rcr
lcall
and
int3
sarl
lcall
loopne
leave
xor
jg
jae
cmpsb
sbb
mov
add
clc
pop
lods
cmp
xor
sbb
into
add
sbb
int
xlat
pop
jp
test
lods
mov
mov
jp
adc
dec
inc
push
pop
stc
xchg
iret
hlt
lahf
enter
lcall
push
sbb
mov
pop
stc
add
incb
sub
movsl
cmp
test
adc
push
xchg
das
or
dec
xor
and
rcrb
aad
fldcw
mov
xrelease
fistpll
mov
icebp
pop
push
out
pop
inc
adc
aaa
cmp
icebp
mov
cmp
sbb
in
in
in
and
add
lea
pop
mov
cld
out
and
stos
xor
mov
std
shll
lahf
mov
orl
or
push
pop
push
pop
movsl
shlb
lcall
pushf
or
pop
push
lret
je
ljmp
mov
int3
dec
test
xor
pushf
cmp
enter
push
cmp
adc
mov
sub
movsb
add
push
clc
jg
leave
mov
mov
add
icebp
fidivrl
fisubrl
mov
mov
es
imulb
aas
jae
or
mov
inc
shrl
int
repz
mov
cmpsb
mov
add
mov
xchg
cmp
adc
mov
es
adc
mov
int3
push
or
ds
aad
lock
xor
add
push
sbb
addb
or
xchg
inc
clc
fldenv
rclb
jp
add
xor
mov
pop
fs
mov
mov
or
mov
data16
addr16
push
loop
push
pop
xchg
rorl
jo
xor
push
xchg
cmp
fidivrs
adc
mov
jmp
lods
fistpll
lahf
or
not
lods
cmp
dec
inc
enter
test
xor
fninit
outsb
test
jge
int3
imul
movsl
fnstcw
ret
sub
stos
sbb
jbe
push
sbbb
sub
mov
scas
lods
rcll
rorb
cmp
pop
jns
mov
sub
xor
pop
pusha
adc
mov
clc
pop
js
pop
shrl
sbb
frstor
lcall
mov
stc
popf
and
xchg
out
fidivl
sahf
adc
jns
mov
push
jg
xchg
mov
dec
jl
mov
insl
psubusb
or
jns
xor
mov
dec
mov
lret
xchg
lcall
sbb
inc
shrl
shlb
repz
jb
push
mov
add
jecxz
jbe
popaw
cs
mov
bound
addl
xlat
jecxz
fs
mov
inc
pop
jg
adc
lock
cmc
mov
lret
testl
gs
sbb
inc
mov
jg
xor
dec
jmp
je
push
imul
aam
add
xorl
lcall
adc
inc
shl
xor
faddl
loope
test
xlat
pop
inc
testb
or
test
jle
pop
push
sub
add
inc
jle
cmp
cmp
int3
icebp
xchg
mov
ss
call
or
cs
xor
stc
mov
sub
mov
out
cld
mov
leave
push
dec
popa
insb
pop
push
xor
clc
dec
int
fs
xchg
pop
into
fiadds
incb
push
jbe
or
popf
sbb
xor
mov
jbe
je
jns
mov
push
shrl
scas
movsl
push
adc
aaa
sbb
xchg
sub
sar
cmc
sbb
imul
jne
jmp
and
test
jbe
or
pop
loope
dec
mov
pop
je
cmpsl
fwait
in
ljmp
push
fpatan
sub
add
gs
movsb
pop
adcb
inc
hlt
aas
jo
jle
jne
shlb
mov
or
out
pop
dec
sub
das
aam
aam
ja
jmp
pop
pop
hlt
push
das
mov
xchg
stos
adc
mov
adc
sbb
stc
mov
cwtl
sbb
xchg
mov
fdivrs
sbb
ret
stos
imul
mov
dec
rcl
rolb
fcmove
frstor
xor
stos
out
mov
shll
sbb
sar
lahf
jg
xor
pop
jmp
ljmp
in
adc
xchg
xchg
std
cld
je
and
sub
sub
fdivr
mov
in
push
clc
inc
jge
int3
movsl
cld
cmp
mov
dec
pop
adc
lahf
lret
lcall
mov
imul
lea
sbb
adc
dec
rcll
inc
dec
jge
out
mov
pop
sub
jg
pop
shlb
cmp
jnp
xchg
jno
pop
jb
cmpsl
cld
push
push
jne
repz
loop
int3
push
dec
add
dec
hlt
stos
aam
xchg
fstps
mov
ljmp
shll
cli
jecxz
push
ficoml
mov
push
in
test
iret
divl
lods
ja
push
frstor
cli
pusha
add
cmp
imul
xchg
mov
jbe
push
mov
movsb
mull
cmp
arpl
dec
orb
pusha
and
pop
jne
and
xchg
sbb
fdivrl
repnz
sbb
in
add
rcrb
daa
arpl
imul
aas
movsl
push
leave
ds
dec
pop
movb
addr16
mov
xchg
lock
cmpsl
dec
xchg
int3
setb
xlat
scas
xchg
inc
divl
push
repnz
scas
lret
push
mov
ljmp
sbb
jne
and
mov
mov
push
add
push
out
test
push
addl
sti
mov
imul
pop
test
movsl
ret
and
call
push
pop
add
sbb
pop
xchg
icebp
inc
jmp
daa
ret
add
mov
sbb
mov
push
mov
sbb
out
in
scas
adc
pop
popa
in
mov
jno
aam
mov
jae
daa
ret
outsl
mov
decl
push
push
repz
mov
call
cmp
loope
jbe
cmp
or
cmp
shrb
jnp
mov
cltd
mov
imul
je
das
shlb
pop
imull
stos
or
out
repnz
fldcw
pop
insl
xlat
mov
push
push
xchg
jl
sbb
arpl
rcr
push
add
fstps
or
shr
mov
adc
lds
nop
lea
dec
fisubrs
cmp
aas
or
add
mov
xor
cmp
fnstcw
sub
xchg
or
fistpl
lods
fs
xchg
dec
out
icebp
popa
or
jbe
repz
ljmp
cmpsl
cmpsl
or
and
mov
mov
jbe
mov
adc
insl
pop
xchg
cmp
or
sub
popf
lcall
imul
adc
out
mov
inc
cmp
push
imul
sub
test
and
flds
cs
mov
insl
mov
push
fxam
mov
add
in
movsl
nop
jns
push
in
aaa
push
ss
xor
packuswb
cmp
mov
pop
lea
shrb
movsb
adcb
dec
xchg
dec
sti
push
cmpsb
scas
sbb
mov
adcb
mov
add
jp
dec
mov
mov
pop
test
mov
xor
aaa
jne
cmp
mov
lahf
push
movsb
pop
fisttpl
aam
fadd
sbb
mov
and
inc
xor
aas
out
pop
cld
arpl
jb
ret
cmpsb
cmp
arpl
cwtl
push
pop
fistpll
cmpsl
shrb
nop
stos
test
xchg
mov
dec
xchg
push
adc
jmp
inc
rclb
mov
and
gs
push
in
addr16
inc
loope
mov
gs
adcl
mov
and
mull
test
outsb
cmp
sub
xor
icebp
dec
mov
jmp
insb
imulb
cli
add
cmpb
stc
push
cmc
push
push
jns
rcll
xchg
loopne
cs
cltd
pop
add
mov
dec
xchg
repnz
jecxz
add
mov
jnp
fidivs
cwtl
aas
sub
jg
mov
jns
pop
push
je
jecxz
cli
dec
mov
xor
in
movsb
loop
pop
push
dec
adc
jae
sbb
xchg
push
pop
mov
outsl
lds
mov
movsb
mov
stos
stos
add
and
adc
bound
ljmp
int
pop
and
movsl
arpl
pusha
jge
and
fimull
mov
addr16
aam
push
aam
loopne
push
inc
test
xor
cmp
flds
mov
jne
or
fldt
cmp
ret
popa
in
filds
lret
pop
add
imul
jge
adc
jne
in
add
outsl
jns
cmp
sub
ficoml
mov
les
cmpsl
inc
sbb
test
and
jae
lock
bound
mov
repz
orl
decl
xchg
or
sbb
pcmpeqw
shlb
fists
lcall
xchg
sbb
pop
inc
fmull
mov
xlat
sbb
jno
jns
pop
cmp
cmp
lds
icebp
stos
jb
cmovno
movsl
subl
out
arpl
sbb
pop
fcoml
inc
dec
xchg
and
push
mov
push
xor
sahf
daa
jmp
bswap
push
inc
jle
xchg
jl
xchg
enter
sti
jg
and
xchg
add
dec
inc
fdivl
test
dec
ret
adc
cld
dec
jmp
fs
into
fadd
sbb
insl
shrb
mov
adc
les
jno
xor
lcall
lea
adc
jae
ljmp
scas
jle
or
inc
stc
push
mov
jne
in
dec
pop
xor
mov
inc
repnz
popa
jmp
mov
pop
xchg
cmpsb
enter
mulps
xor
imul
aam
sbb
jg
stos
test
jae
cs
ds
sbb
outsb
insb
add
xchg
xchg
jno
dec
mov
push
and
xchg
sub
inc
sbb
fnstcw
insl
mov
xchg
outsb
xor
add
mov
adc
sub
call
fstpl
fisttpl
xor
mov
push
mov
sbb
sar
je
leave
push
dec
out
or
gs
jo
les
aas
nop
dec
pop
pop
inc
stos
lahf
xchg
xchg
lds
int3
fnsave
icebp
inc
push
pop
xchg
jo
push
pop
sub
insb
cmp
sbb
sub
lret
cmp
and
mov
filds
push
test
pushf
mov
pusha
dec
dec
xor
loop
inc
add
ss
mov
das
out
jl
loop
gs
arpl
ljmp
mov
mov
lret
jo
sbb
fadd
js
mov
jbe
popl
test
jns
test
pop
xchg
scas
cmp
lea
cltd
xor
roll
adc
sbb
rcll
mov
push
into
sub
repz
xor
jg
pushf
mov
imul
lods
lods
fdiv
push
xchg
inc
in
shlb
int3
fldcw
mov
mov
adc
movsb
imul
xorl
or
ljmp
cwtd
xchg
sbb
je
dec
fs
enter
xchg
or
rcl
in
push
fmul
jg
push
dec
and
cmp
adc
popf
mov
scas
mov
iret
inc
pop
fldcw
es
jmp
mov
mov
xlat
mov
fiaddl
mov
cs
pop
out
mov
stos
cltd
xor
pop
ljmp
push
inc
xchg
mov
adc
lds
rcll
mov
dec
rcll
cmp
inc
scas
mov
pop
mov
test
xor
lahf
fidivl
ret
movsb
mov
xchg
loopne
xor
inc
mov
sti
mov
sbb
jnp
pushf
inc
fdivp
or
push
and
cmc
std
mov
das
and
cltd
insb
push
lahf
ret
or
cld
sub
lahf
ret
inc
sarb
fistpl
inc
stos
mov
mov
push
ja
jmp
push
lds
bound
movsl
std
xor
push
loope
mov
mov
loopne
cmp
push
and
clc
ret
adc
test
pop
in
dec
mov
inc
filds
stc
cmp
pop
xchg
addr16
out
mov
fcmovb
repnz
int3
sbb
inc
rolb
js
xor
dec
mov
inc
dec
dec
jns
dec
fwait
mov
sub
into
jmp
sub
lcall
clc
push
nop/reserved
sub
and
xchg
scas
cmc
or
pop
nop
int3
and
ja
repnz
add
leave
std
pop
inc
inc
test
addb
out
lods
stos
leave
out
outsl
lcall
stos
dec
or
cmp
clc
cmpsb
jnp
out
leave
leave
cmp
jbe
dec
cwtl
in
jl
jg
popf
in
ret
push
sub
shlb
jo
jnp
mov
xchg
adc
xor
aam
testl
mov
and
pop
sbb
scas
pop
divb
mov
es
jno
in
lret
xlat
and
mov
clc
popa
std
pop
pushf
cmp
jo
in
incl
push
ret
cltd
mov
dec
pop
inc
add
push
dec
push
jg
adc
adc
popf
enter
dec
sub
loopne
js
mov
and
mov
jp
and
call
push
mov
push
xor
sub
sarb
test
mov
dec
cltd
lret
add
cmp
and
repnz
mov
subl
fisubs
inc
push
stos
jno
pop
fnstsw
sbb
notl
add
pop
std
ljmp
push
xor
push
into
dec
aaa
lea
fwait
fwait
xchg
mov
fwait
daa
dec
push
sub
pop
push
adc
mov
js
and
xor
or
lret
xchg
ds
xchg
inc
iret
ret
aas
mov
or
cmp
sub
fcomps
enter
call
dec
mov
fwait
dec
mov
push
lret
cmp
sub
fcomps
enter
call
dec
mov
lahf
js
sbb
or
cmp
call
or
cmp
sub
jnp
imul
and
sbb
jnp
adc
in
mov
out
roll
mov
test
mov
dec
mov
sbbl
movsl
cs
push
lret
push
fstpt
insb
mov
mov
dec
mov
sub
cmp
or
arpl
jmp
sti
push
lret
add
jle
pop
mov
cmpsl
imul
out
idivb
or
sbb
jmp
fadds
jbe
jle
add
add
sbb
xlat
sbb
xor
or
ds
orb
mov
add
jbe
outsl
stos
xchg
jg
aas
cmp
out
xor
aam
out
mov
mov
fdivp
mov
pop
mov
jbe
and
pop
cmp
clc
push
dec
imul
xchg
mov
mov
arpl
cmp
popa
iret
in
adc
add
dec
icebp
cmp
orl
adc
outsb
add
cmp
adc
mov
xor
filds
mov
push
out
dec
neg
pop
jno
add
in
repz
cli
mov
into
cmp
dec
mov
mov
sahf
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
pop
jbe
inc
mov
shrb
cmp
dec
cli
pop
lea
push
xchg
dec
into
dec
ds
inc
cli
insl
scas
push
jle
or
sub
and
rorl
iret
push
icebp
cs
pop
xchg
inc
out
ja
bound
sbbb
dec
mov
sub
sub
fldt
ret
cmp
ds
out
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
cmpsb
std
cltd
xchg
pop
mov
faddl
pusha
repnz
mov
push
xor
adc
out
inc
sub
push
add
jne
xchg
push
xchg
outsb
add
xchg
ljmp
xor
and
mov
movb
sub
pop
inc
gs
mov
dec
sbb
out
sub
jns
jmp
aad
adc
lods
dec
pusha
jmp
pushf
in
loope
iret
loope
xchg
js
xchg
repnz
es
call
mov
ss
stos
cwtl
mov
ss
iret
mov
stc
sub
loop
xor
pop
or
mov
popa
push
jne
push
js
mov
mull
insb
jp
sahf
xchg
movb
mov
xchg
out
jp
sbb
int
sbb
leave
cmp
xchg
sub
xor
std
sbbl
out
add
sbb
jne
scas
fisttpll
cmp
and
orl
icebp
jae
pop
push
cld
gs
sbb
gs
fstl
out
jne
cmpsl
push
jge
out
mov
pop
daa
pop
imulb
cmp
jae,pt
icebp
sbb
xchg
loop
inc
and
lcall
sub
mov
je
nop
nop
jne
jmp
or
lcall
mov
xchg
jecxz
or
popa
bound
add
jmp
push
dec
pop
mov
outsl
push
xor
aad
jbe
and
arpl
movsb
stc
adc
push
je
inc
xchg
push
repz
ja
nop
stos
vucomisd
xchg
mov
fneni(8087
aaa
jge
pusha
jle
push
xor
inc
lods
jge
in
cld
scas
int3
mov
jae
mov
incl
jg
pop
dec
cld
andl
mov
cmpsb
shrb
mov
cmp
scas
test
adc
mov
hlt
js
test
xchg
dec
xchg
in
test
sbb
lods
cmc
sahf
js
les
sti
xchg
mov
test
dec
add
pop
hlt
out
scas
sub
xor
lret
rcrl
lea
out
cmp
cmp
lds
push
in
pop
int3
add
divl
jle
cli
mov
xchg
push
pop
adc
lods
xor
jo
sbb
fs
sbb
and
inc
shl
xchg
or
cmpsb
mov
sbb
push
insb
jmp
ret
lcall
imul
lahf
aaa
aam
popl
sub
push
addr16
lods
fcomp
sti
pusha
inc
sub
push
shll
xchg
call
subb
fbld
mov
dec
negl
add
insb
dec
pop
pop
and
jp
shlb
les
cld
mov
fcmovnb
mov
pop
in
sbb
lods
dec
mov
std
sbb
cmc
cmp
cs
fs
lret
mov
mov
xchg
inc
jle
rorb
adc
pop
cmp
imul
pushf
in
ljmp
mov
add
in
add
add
stos
dec
sbb
loope
iret
std
sbb
push
jmp
frstor
cmp
dec
fwait
sbb
ja
or
jle
dec
es
push
or
pushf
fstpl
xchg
lock
push
dec
push
lods
mov
lahf
push
and
loop
or
jo
outsl
mov
xlat
add
stos
adc
inc
imul
add
enter
lds
ds
jg
sahf
adc
lret
cwtl
pop
jp
mov
push
cltd
loope
mov
push
lret
dec
jae
or
daa
pop
jae
push
sbb
es
outsb
adc
repnz
das
adc
inc
mov
mov
dec
enter
scas
repz
pop
icebp
mov
mov
shl
or
push
mov
push
mov
mov
sub
xchg
call
lcall
xchg
repnz
lods
xchg
dec
les
push
push
mov
insb
sbb
cmc
rcrl
adc
mov
jmp
lahf
push
and
xchg
xor
sbb
sti
push
pop
fimull
rolb
pusha
push
and
and
imul
repz
cmpl
out
mov
fnstcw
mov
imulb
mov
pop
je
push
pop
xchg
popf
adc
push
into
inc
sbb
mov
mov
xor
stos
cltd
jae
dec
popa
cmc
lret
and
les
pop
icebp
jae
xlat
out
mov
push
out
jns
dec
mov
push
in
push
fstl
dec
loop
inc
out
imul
push
mov
les
adc
inc
mov
or
mov
test
aaa
push
js,pt
jle
aam
adc
xor
xchg
jb
decl
jno
mov
push
cmp
sbb
push
jbe
scas
add
adc
adc
imul
lods
xchg
sub
and
jle
and
and
mov
lods
imul
loopne
pop
xor
cmp
insb
adc
inc
push
inc
in
pop
push
push
nop
insl
fcmovb
adc
clc
dec
xlat
adc
aaa
add
sbb
mov
or
fstpt
stos
rorb
sub
aaa
mull
repnz
mov
bnd
sbb
mov
mov
adc
jne
dec
push
jle
es
icebp
inc
adc
std
mov
pop
cmp
adc
jge
jp
out
jecxz
stos
push
pop
jg
ja
test
and
imul
sub
lock
jle
sbb
shrl
inc
mov
dec
pop
movsb
pop
fs
lods
adc
push
ja
add
jo
cmp
cmp
inc
or
pusha
das
inc
sub
mov
mov
sub
icebp
stos
xor
ret
arpl
mov
xlat
rcll
dec
popf
xchg
push
push
roll
enter
jno
mov
das
sahf
cmpl
add
ficomps
iret
adc
pop
arpl
incl
in
loop,pn
dec
mov
pushl
adc
movl
and
fwait
xchg
mov
sub
hlt
iret
lock
mov
sbb
hlt
data16
adc
pop
sub
inc
sub
aad
or
iret
cmpl
or
sarl
movsl
and
cmp
out
inc
lret
sbb
xchg
cmpsl
imul
jae
lods
call
push
sti
bound
xor
pop
or
or
loop
adc
test
jbe
dec
lods
dec
and
push
push
in
mov
mov
mov
shl
jg
pop
sbb
mov
outsl
leave
and
fiadds
xlat
dec
fdivrs
lcall
or
sbb
adc
ljmp
adc
adc
out
push
scas
mov
adc
mov
icebp
std
lahf
pusha
lods
mov
adc
jns
sti
and
push
in
mov
jge
mov
fstl
push
repz
popf
sbb
push
jne
inc
dec
pop
mov
cmp
jl
sub
jo
je
pushf
mov
inc
lahf
adc
cld
mov
ret
pop
jp
jnp
in
nop
das
dec
or
das
inc
rclb
nop
mov
inc
movsl
sbb
into
daa
cltd
stos
rolb
out
pop
inc
cmpsl
loop
cmpsb
add
mov
repnz
idivb
pop
cwtl
cmp
cltd
aas
fisubrl
ret
mov
xor
inc
scas
push
les
xor
inc
in
mov
mov
sti
mov
and
pop
jl
pop
int
dec
lock
imul
hlt
lea
clc
push
pop
js
pusha
lods
daa
loop
mov
js
shrb
das
aaa
mov
jbe
out
push
mov
inc
mov
test
test
rorl
pop
out
into
les
out
sbb
fwait
cmp
push
lds
cmpsb
aas
int
push
xchg
decb
or
xor
lret
mov
in
add
dec
sarl
add
test
in
lcall
lods
into
mov
pop
sti
push
inc
and
mov
inc
and
in
sub
xor
cs
iret
add
mulb
xchg
lahf
xlat
addr16
mov
cmp
ret
and
inc
mov
jg
insl
fstpt
popf
sbb
push
fimuls
mov
push
cmp
call
divl
mov
ja
xchg
adc
xor
xchg
subl
mov
pop
mov
inc
push
jp
inc
jg
pop
mov
xchg
pop
pop
lock
loop
jnp
push
imul
call
xchg
mov
xchg
ja
and
out
test
mov
push
dec
inc
cwtl
pop
add
and
jmp
aam
cmp
jge
cwtl
mov
add
mov
lods
add
push
dec
test
hlt
in
pop
rcrl
sbb
out
jle
cwtl
pusha
imul
mov
pushf
or
cli
insb
pop
movsl
and
add
js
push
pop
xor
cmpsb
ss
xchg
imul
jae
cmp
outsb
jns
out
insl
adc
xor
pushf
pop
js
ret
or
ss
cwtl
push
mov
mov
dec
sub
push
clc
push
pop
lock
mov
mov
scas
loop
stc
repnz
lahf
aam
dec
lods
push
aam
jne
mov
and
scas
add
call
and
rcll
xchg
mov
lds
mov
dec
notl
or
gs
xchg
and
lret
jne
stc
push
add
inc
sbb
imull
cmpsl
test
xchg
int
ret
iret
arpl
test
adc
outsb
cs
fsubrl
sub
hlt
insl
pop
lea
or
cmc
out
pop
add
popa
sbb
filds
xchg
popf
hlt
mov
mov
mov
inc
ret
jl
lret
add
xor
addr16
je
jno
call
jp
stos
or
push
jmp
sahf
cld
shrl
add
andl
aad
dec
sahf
insl
in
or
push
and
lds
sub
fistpl
mov
call
test
push
mov
cmp
and
jne
rcrl
push
mov
push
clc
pop
mov
inc
add
xchg
mov
mov
xor
pop
aas
data16
xor
fimuls
sub
jmp
push
fldt
sbb
xchg
adc
sbb
cmc
orl
cmp
xchg
and
lock
jne
dec
int
arpl
imul
ret
enter
roll
outsb
and
xorb
bnd
xacquire
push
imulw
mov
notl
leave
xlat
movsl
inc
stos
pop
adc
xchg
fwait
or
mov
aas
push
movsb
inc
xchg
call
lret
decl
mov
pushf
out
fs
cmp
cmp
xorb
pop
mov
rcrl
dec
mov
add
mov
dec
cmp
and
and
push
push
adc
or
mov
lock
das
push
andb
es
pusha
pusha
leave
cmp
divb
testl
bound
inc
push
xor
inc
dec
dec
push
nop
inc
jo
ds
pop
mov
fnsave
xor
jb
cld
adcb
andl
in
adc
in
sahf
popf
int3
cld
mov
inc
and
repnz
jmp
add
movsl
add
fcom
int3
dec
and
dec
jne
sub
xchg
std
pop
test
mov
icebp
stos
mov
bound
sbb
or
enter
and
adc
ret
ja
sub
push
push
sub
push
cmpsb
push
imul
inc
mov
movsl
sbb
rolb
cwtl
xor
mov
lahf
and
out
jae
mov
pop
mov
dec
hlt
std
or
or
popa
out
imul
popa
push
or
adc
jecxz
xchg
push
push
pop
nopl
cs
std
push
and
adc
mov
jo
sbb
leave
push
add
mov
inc
sub
mov
mov
inc
cltd
fchs
cmp
adc
inc
xor
repz
xchg
mov
add
sahf
movsl
dec
ja
pusha
jns
push
mov
pop
mov
pmuludq
enter
in
cld
add
rclb
sub
cmp
cs
insl
or
loopne
data16
test
pop
negl
sub
inc
nop
xchg
enter
xor
adc
ds
xchg
cld
pop
and
add
loope
cmp
or
insb
mov
pop
repnz
mov
jecxz
jle
divl
popa
nop
pop
jg
and
fstl
jo
stos
dec
jg
cld
lods
sub
xchg
cmp
outsb
add
jno
mov
test
jns
cli
inc
push
pop
add
jmp
aas
and
mov
repz
pop
add
mov
dec
inc
call
add
fstl
bound
fbld
dec
test
mov
stos
out
std
inc
mov
pop
adc
jl
sbb
jge
pop
fsub
sub
aam
bound
mov
pop
cmc
sbb
repz
and
jno
mov
repz
lret
mov
test
cmc
pushf
jbe
fldpi
neg
cmp
int
lahf
call
fdivp
inc
loop
inc
xchg
dec
mov
mov
outsb
add
addb
lret
rcrl
jnp
sub
jne
lahf
leave
dec
in
sbbl
rclb
cmp
ds
mov
mov
mov
out
mov
dec
push
mov
shll
scas
fsubr
pop
push
inc
sub
pusha
pop
mov
call
jle
ret
push
push
push
jp
leave
nop
in
orb
mov
and
inc
adc
div
jns,pn
or
in
loopne
stos
pushf
jb
test
push
sub
in
pop
movsl
fcmovb
jecxz
outsl
int
fwait
cmpsb
iret
pop
lret
mov
xchg
add
popa
mov
pushf
dec
fisttpll
inc
push
xlat
jecxz
insl
xor
ds
ljmp
std
popf
mov
bound
das
ljmp
jne
xchg
inc
or
pushl
mov
daa
adc
popf
jb
outsb
push
stos
jnp
mov
cli
dec
test
inc
mov
jmp
lcall
das
stc
ficompl
pop
cmp
aam
rol
cmpsb
push
ljmp
mov
add
jne
sub
jl
fistpll
test
dec
inc
pop
mov
lret
ret
pop
dec
push
inc
fbstp
xlat
dec
in
xlat
and
scas
add
daa
cli
pop
aaa
sub
or
mov
sub
call
push
cmp
cwtl
xchg
xchg
adc
xor
enter
test
das
repnz
xchg
cmp
inc
fwait
daa
and
xor
dec
pop
add
rcr
jbe
addl
pop
mov
mov
adc
add
dec
jecxz
adc
loop
shlb
push
pop
xchg
dec
xchg
jmp
push
scas
out
gs
ljmp
addr16
lea
repz
xor
out
xchg
jne
data16
mov
fnstenv
popf
inc
and
adc
leave
mov
jb
xchg
xchg
mov
mov
lret
mov
in
push
mov
dec
mov
aad
jnp
add
popa
aaa
xlat
out
mov
clc
and
fidivs
sti
xchg
push
adc
cmp
insl
jg
js
pushf
pop
lahf
mov
cli
pop
mov
bound
mov
shrl
push
nop
add
pop
add
xchg
cmc
mov
mov
mov
mov
sub
sub
adc
incb
daa
stos
or
jns
stos
dec
add
mov
pop
inc
mov
mov
sub
outsb
je
dec
fs
sahf
daa
fdivl
lret
and
testl
pop
add
adc
out
xor
fwait
and
hlt
rcrl
nop
and
mov
aad
xchg
push
in
push
aaa
mov
pusha
je
sub
mov
ds
fbld
jecxz
pop
test
movsb
and
push
cmp
add
sbb
lods
xor
xchg
decl
jmp
xor
xor
pushf
dec
iret
mov
imull
call
loop
jmp
and
mov
push
pop
sub
xor
or
mov
sub
scas
sub
pop
pop
add
inc
push
pop
push
jb
pop
pop
cs
mov
sub
jg
sti
test
icebp
js
test
cld
lret
cmp
inc
stc
idivb
filds
mov
mov
flds
imul
add
dec
jae
mov
fucomi
inc
adc
pushf
dec
xor
jbe
icebp
outsl
es
ret
inc
xor
pusha
jno
sti
sub
out
arpl
inc
xor
and
call
inc
cmp
scas
push
dec
js
mov
stos
sbb
sahf
cli
test
sbb
rorl
orl
inc
adc
xchg
shlb
outsl
loopne
inc
pop
aaa
jecxz
aas
or
adc
cmp
inc
aaa
and
add
in
sub
xlat
mov
push
in
pop
dec
les
sbb
xchg
mov
out
mov
out
lcall
test
inc
or
jl
dec
jp
cmpsl
cmpsb
sbb
xor
inc
cmp
jae
test
sti
int
stc
mov
sbb
bound
cmp
and
aas
pop
outsl
inc
hlt
sub
pop
cmp
mov
or
fldl2e
pop
cmpsl
rclb
xchg
sbb
push
lahf
fsts
jmp
push
insb
mov
hlt
jo
fdivs
ja
jge
jg
pop
daa
in
dec
sub
in
xchg
pop
pop
dec
cmp
test
les
and
mov
aam
loop
iret
ja
nop
xlat
mov
fsubl
cld
mov
cwtl
out
inc
inc
mov
arpl
mov
repnz
inc
js
daa
nop
sbb
mov
jecxz
pop
mov
pop
nop
sbb
mov
dec
xchg
xchg
mov
add
jbe
sbb
pop
and
pushf
testl
loopne
sbb
or
negl
cmp
mov
mov
inc
js
mov
xchg
ret
xor
scas
pop
out
ret
and
aad
idiv
fdivrl
notb
mov
test
mov
sbb
stos
aas
and
int
in
mov
mov
stc
call
ljmp
sub
xlat
lahf
enter
daa
mov
xor
enter
test
mov
pop
mov
push
sub
shlb
xorl
pushf
dec
js
add
sub
int
mov
arpl
sbb
cmp
jp
push
mov
xor
pop
ret
ds
les
pop
es
lahf
sbb
sti
and
mov
ret
andb
movb
cld
or
mov
mov
aas
pop
inc
repz
pop
into
mov
sub
adc
fcompl
adc
fisttpl
or
xor
out
les
pop
movsl
pop
lcall
aas
bound
pop
repnz
sub
outsb
jno
dec
mov
loope
loop
inc
adc
out
in
mov
cmpsb
hlt
aas
sar
sbb
cltd
in
push
push
push
cmpsb
mov
cli
aad
mov
imul
inc
mov
pop
fcmovb
daa
ret
push
push
in
mov
fidivl
add
jge
cwtl
sub
xchg
mov
or
lods
lods
lret
data16
inc
mov
cmp
sub
xchg
enter
inc
dec
mov
push
push
sub
pop
les
mov
dec
es
fs
adc
shl
jae
repnz
mov
adc
ret
jg
cmc
and
mov
movsl
popf
mov
cmp
lods
call
out
cmpsl
or
adc
scas
cmp
adc
mov
add
and
imul
test
loop
mov
cmp
popa
rcl
js
in
push
sub
mov
je
pusha
lods
lcall
fcoms
mov
mov
jb
lcallw
and
mov
and
push
scas
xchg
mov
adc
rcll
mov
popa
push
rcr
nop
dec
mov
fincstp
pusha
lods
sbb
dec
sub
mov
jg
leave
push
mov
pop
js
fcomps
movsb
sub
cmp
insb
bndldx
aad
int
std
adc
add
push
cs
enter
adc
std
cmp
stos
xchg
jnp
outsl
addb
pop
push
mov
push
push
rcrb
dec
push
dec
and
sub
shr
mov
add
hlt
add
sbb
ret
and
mov
loop
xor
or
xchg
aam
subb
cmc
lret
cmc
mov
pop
out
in
add
mov
push
stos
push
mov
pop
aas
ds
sbb
add
shrb
inc
dec
cmp
sbb
push
pop
pop
mov
test
insb
test
xchg
stos
add
pushf
test
inc
mov
pop
mov
xchg
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsb
mov
mov
dec
mov
sub
cmp
or
sbb
jmp
sti
push
lret
push
fstpt
outsl
mov
mov
dec
mov
sub
cmp
dec
sbb
jmp
push
mov
push
lods
or
out
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
mov
jg
sahf
add
add
or
push
add
add
mov
add
add
xor
aaa
add
add
xor
push
add
mov
add
adc
jp
test
push
add
add
add
sbb
cmp
test
cmp
add
sub
cmp
add
mov
add
pop
add
add
add
inc
add
add
add
cmp
and
xor
in
push
or
add
sbb
or
mov
add
add
add
add
aam
out
mov
add
lea
jb
sub
aad
cmp
add
mov
add
add
add
add
add
aaa
add
or
jge
aam
leave
add
add
add
iret
add
push
or
add
add
add
add
add
jo
jns
cmpsl
add
add
add
xor
pop
add
int3
add
add
add
add
add
add
add
add
flds
out
jp
daa
add
add
mov
push
add
cmpsl
add
add
add
add
add
add
dec
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
jecxz
inc
add
push
add
add
pop
add
dec
add
add
add
add
add
or
add
add
add
add
add
add
inc
add
aam
faddl
inc
add
xor
inc
add
add
cmp
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
mov
add
add
lea
dec
add
aam
and
pop
add
add
add
push
add
add
mov
adc
and
add
addr16
add
add
add
sbb
push
add
aam
and
xor
jp
arpl
push
or
add
sbb
cmp
popl
push
add
push
add
add
add
add
push
add
push
xchg
add
add
add
or
add
or
cmp
add
add
add
or
cmp
rolb
test
mov
add
add
add
add
add
add
push
add
or
add
aam
popl
add
fiadds
les
mov
repz
xlat
add
add
add
add
add
add
xchg
add
add
add
sahf
add
add
cmp
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fildl
mov
add
add
add
xor
iret
add
lret
add
add
jo
mov
mov
data16
fcmovne
and
fwait
enter
gs
ror
cli
inc
das
push
push
push
fwait
mov
cld
adc
jle
arpl
pop
push
pop
mov
and
in
lods
aad
aaa
jo
sub
in
mov
stos
pop
sub
and
dec
sbb
iret
enter
imul
dec
or
jg
sbb
popf
cmpsb
movsl
mov
dec
adc
sahf
mov
cmp
mov
or
jl
out
enter
dec
push
addl
xchg
lahf
xchg
in
imull
mov
jecxz
mov
inc
pusha
sbb
dec
mov
push
adc
jne
addr16
test
flds
mov
mov
cmpsb
call
push
aad
xchg
pop
xor
add
loop
inc
xor
inc
movsb
mov
mov
jns
aas
add
repnz
cld
pop
xor
push
jbe
adc
into
inc
mov
pop
ret
pop
outsb
and
adc
enter
xlat
inc
iret
cltd
xlat
jo
es
dec
mov
push
ja
add
mov
ret
inc
or
das
andb
adc
inc
ss
fstpt
or
call
mov
insl
add
cmp
lea
lcall
inc
ficomps
cli
mov
and
mov
jp
mov
imul
xchg
lahf
and
jge
das
sbb
aad
xchg
mov
fimull
pop
lea
insl
cmpsb
int
rcrl
int
test
and
pop
dec
inc
out
xchg
mov
fdivs
shrl
sub
mov
dec
pop
add
fcmovbe
jecxz
stc
mov
xchg
xchg
and
jns
dec
or
dec
into
aas
and
mov
icebp
into
cmp
xor
sub
dec
test
adc
sbb
push
int
lahf
call
sbb
push
repnz
cli
cmp
js
mulb
ret
inc
sub
lret
lea
mov
pop
stos
mov
lret
sbb
fimuls
hlt
or
dec
push
xor
xor
jecxz
cmc
lret
xchg
cmp
imul
xchg
lret
pop
dec
pop
in
jl
xor
outsb
mov
rcrb
push
hlt
loope
dec
in
adcb
lock
cmpsl
push
push
mov
pop
pop
cmp
scas
inc
fstpl
mov
aad
in
pop
inc
add
push
fcmove
push
cwtl
xor
or
outsl
lret
xchg
and
cmc
sub
pop
dec
add
dec
out
adc
in
test
gs
pop
div
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
