call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
sbb
sub
cmp
sbb
jbe
mov
mov
call
or
sbb
sub
cmp
dec
jp
out
pop
jnp
fwait
mov
mov
lret
xchg
jmp
jmp
sti
lret
add
xor
inc
push
jae
jnp
xchg
gs
stc
lret
lods
mov
mov
lods
lret
je
sub
pop
sbb
loope
inc
mov
adc
pop
jecxz
ret
push
fisubl
lahf
lret
mov
cmp
xchg
out
sbb
or
lahf
mov
push
repnz
lcall
add
hlt
cmp
das
fadds
jge
mov
fists
cld
mov
das
xchg
pop
ss
lret
fisubl
ljmp
or
loop
pop
mov
jp
add
lcall
sti
fistl
pop
das
xchg
ret
fisttpl
es
mov
jmp
dec
mov
test
jmp
jecxz
sti
xchg
insb
or
xor
jae
je
push
ret
jmp
mov
mov
ret
fisubrl
sahf
cmp
pop
jp
push
andb
cmp
insb
mov
mov
adc
movsb
addr16
dec
and
push
cmp
das
mov
imul
fsubr
lret
xchg
mov
stos
fs
imul
daa
adc
sub
enter
stos
cli
in
lret
stos
mov
popf
mov
ja
inc
dec
push
imul
pop
jnp
mov
mov
ljmp
sbb
sub
cmp
dec
jp
push
pop
jnp
mov
mov
ljmp
xor
xchg
mov
cmp
add
add
cld
cmpsb
and
cwtl
cli
mov
xchg
dec
out
fistl
mov
or
push
dec
hlt
mov
mov
pop
push
loop
std
cmpsl
pop
jecxz
add
pop
pop
leave
adc
pop
lods
mov
into
sub
stos
test
push
cs
daa
fisubl
aam
mov
dec
inc
call
xchg
xor
cmp
andl
mov
rol
push
int3
adc
inc
loop
lcall
movsb
adc
mov
cwtl
pushl
xor
pop
xor
ffreep
xchg
pop
out
xchg
push
mov
das
jl
ret
mov
push
insl
jg
add
pop
xor
jb
dec
pop
aaa
push
lret
mov
pop
leave
mov
mov
inc
lods
ss
cmp
and
cmpsl
mov
mov
repnz
jae
add
push
and
jnp
pop
stos
sbb
dec
test
fstpl
lods
xor
sbb
and
int3
inc
push
sub
out
push
and
jmp
or
imul
adc
into
xor
xchg
std
push
or
movsb
dec
jecxz
out
lock
test
mov
xchg
jle
cmp
push
mov
dec
mov
mov
aam
repz
push
fs
xor
xchg
or
dec
pop
out
mov
mov
xchg
jmp
inc
out
mov
cmp
mov
mov
or
and
gs
ljmp
loop
fsubrs
jle
and
rorl
out
bnd
mov
pop
mov
push
push
push
and
icebp
fadd
ds
sub
lock
imul
lods
add
lock
int3
xlat
pop
je
int3
cmp
jno
push
push
mov
rolb
push
xchg
cmpl
adc
add
cwtl
sub
sub
jge
xor
stos
ljmp
mov
jmp
fs
mov
sahf
add
std
jp
hlt
shrl
mov
dec
inc
adc
lds
outsb
fwait
mov
adc
jl
mov
in
in
adc
mov
xorb
mov
pop
jmp
inc
sbb
in
sbb
test
add
pop
sub
sbb
lods
lcall
pop
repnz
adcl
xchg
sbb
push
int3
add
pop
ret
or
lret
pop
jno
xchg
dec
call
jle
data16
jl
and
loope
jae
and
add
loope
dec
fwait
add
cli
scas
add
ljmp
outsb
es
jl
daa
cmc
aad
inc
inc
xor
sbb
mov
xlat
stc
and
push
pop
scas
mov
popf
mov
mov
pop
lret
pop
je
mov
icebp
outsb
xor
and
je
or
push
sti
cli
cmp
push
push
ret
outsl
test
dec
test
xlat
daa
push
repnz
ror
xlat
popf
inc
mov
out
mov
out
cwtl
hlt
sbb
lret
out
or
std
sub
jg
mov
jns
les
aas
jecxz
push
jb
in
sti
ds
mov
pop
rcrl
mov
test
mov
vmovaps
loope
or
xor
unpckhps
sbb
cmp
pusha
adc
cmp
mov
jge
scas
frstor
push
in
mov
mov
cmpsl
test
xchg
sub
cmp
je
mul
js
mov
xchg
rol
inc
fwait
jle
outsl
stos
cmp
jg
test
dec
jns
or
stc
add
mov
ret
sub
dec
dec
fsub
dec
enter
mov
xchg
cmpsb
cmc
and
dec
jle
dec
xor
pop
outsb
and
xchg
sahf
rcrl
rorb
ljmp
and
cmpsb
push
cmpsl
and
cmpsb
push
add
push
inc
enter
jmp
in
clc
xor
es
cmp
mov
xchg
ret
and
pop
mov
movsl
mov
int
out
adc
xor
orb
fs
mov
xchg
and
adc
xchg
mov
mov
pop
enter
xchg
fistl
add
loope
push
fbstp
out
dec
sbb
push
movsl
push
or
outsb
pop
cmpl
pop
mov
fisubl
das
xor
ss
mov
adc
pop
fxam
jae
bound
lahf
repz
lds
lods
mov
out
mov
mov
in
nop
gs
fucom
or
dec
pop
pop
add
movlps
mov
inc
jae
sub
pusha
pop
jle
pop
jecxz
arpl
mov
mov
insb
arpl
jb
inc
lcall
xchg
and
mov
mov
pop
hlt
xor
mov
scas
shlb
out
xchg
test
rcrb
fisttps
loop
idivl
cmpsl
and
popf
aam
xchg
inc
push
ficompl
xchg
rcll
mov
jmp
outsl
sbb
pop
lret
mov
movsb
push
leave
stos
and
mov
in
xchg
mov
aad
lea
inc
leave
jl
repz
mov
rcll
add
test
pop
pop
adc
mov
inc
fs
cmp
mov
scas
outsl
repz
das
push
and
cmp
int3
xchg
out
pop
lret
pushf
test
test
xorl
imull
push
out
cli
sub
mov
pop
dec
rolb
push
add
mov
iret
and
call
dec
clc
mov
fsubl
aam
repz
cli
sbb
pop
js
repnz
aaa
dec
xchg
dec
popf
xchg
sbb
jl
mov
sbb
fstps
mov
mov
add
adc
sarb
pop
enter
mov
rclb
pop
or
cli
out
shl
push
fisttpll
into
add
push
pop
and
jecxz
clc
hlt
je
lods
lock
enter
addl
and
fbstp
lahf
jmp
cmp
sbb
lock
fldl
push
pushf
sub
add
mov
adc
call
mov
shrl
adc
fcoms
test
adc
mov
into
xchg
pop
arpl
cmp
push
push
jl
adc
xor
cli
stos
cmp
fcompl
jle
jmp
loope
test
push
xchg
roll
jb
insl
xchg
xchg
ss
popa
inc
pushf
pop
inc
inc
lahf
rcrl
add
pop
outsl
scas
iret
jae
adc
call
fmul
inc
sub
mov
dec
fs
lcall
xchg
sbb
lret
sahf
jle
mov
mov
or
rcrb
movsb
insl
xchg
sarb
mov
fistpll
mov
iret
nop
scas
sbb
pushf
movsl
frstor
xchg
jmp
push
xorb
push
push
in
gs
xchg
pop
pop
incb
test
pop
mov
outsl
in
imul
aad
js
mov
mov
mov
and
fdivrs
xchg
mov
shlb
lret
dec
shlb
adc
in
adc
out
jge
shr
loope
xor
jl
in
mov
loop
jnp
lret
loopne
movsb
or
call
xor
rcll
je
jg
scas
xchg
or
xchg
testb
cmpsl
add
sub
aaa
enter
pop
mov
adc
sar
jecxz
ret
jp
mov
pop
adc
xchg
mov
xchg
and
bound
mov
sbb
test
aad
jb
shr
add
mov
adc
cltd
jno
push
dec
sbb
ret
rcrb
int
rorl
stos
lods
xchg
stos
sbb
test
in
adc
mov
scas
rcll
ds
aam
subb
pop
repz
lcall
arpl
movsb
lret
mov
and
in
cmpsl
lods
jae
ljmp
mov
stc
mov
cmp
sbb
enter
lock
subb
imulb
hlt
cs
lods
cld
cmc
push
mov
cld
pop
cli
or
cld
aaa
arpl
loope
filds
xchg
clc
fadd
sub
pause
inc
and
sub
sub
cs
mov
mov
xchg
jb
cmp
xor
mov
xchg
and
movsb
dec
lret
mov
aam
pop
or
lods
out
sub
repz
lods
clc
imul
xchg
stos
dec
scas
cmp
sub
xchg
lret
popa
lea
vpaddsw
stos
mov
jne
std
stos
adc
mov
imul
mov
shlb
pop
popf
jo
mov
outsb
add
sahf
ds
sbb
jle
clc
cmp
sbb
sbb
int
lock
mov
cli
sub
pop
push
or
pushf
xchg
xchg
jecxz
push
dec
iret
sub
and
pusha
fildll
outsb
or
inc
repnz
push
or
repz
xchg
mov
mov
outsl
jp
pusha
cmc
es
mov
add
ret
pop
dec
mov
pop
ja
pop
ljmp
loope
jle
nop
insb
jmp
cmp
jnp
gs
jbe
pop
clc
mov
cmp
frstor
jbe
xor
push
aad
scas
rolb
mov
sbb
xchg
call
xor
xchg
push
sub
aas
xor
sbb
scas
and
loop
mov
aas
pop
adc
ds
fldcw
mov
cmp
sbbb
test
ss
xorl
cmp
mov
sub
int
fmuls
inc
fwait
cmp
popa
test
sarl
popf
ret
pop
xchg
push
sti
mov
fcoml
xchg
loopne
in
test
imul
les
xchg
out
jecxz
sbb
faddp
mov
lds
inc
pop
sub
das
or
in
jp
adc
push
cwtl
mov
jns
cmpsl
out
test
cmp
loop
xchg
mov
pop
in
ljmp
icebp
orb
mov
ficoml
cmc
lods
mov
and
mov
inc
lds
test
ret
sub
shlb
dec
jg
cmp
sub
push
adc
lds
pop
shll
int3
stc
jb
mov
xchg
pop
push
mov
pop
dec
subb
lods
daa
push
mov
inc
dec
aas
aad
dec
or
out
leave
in
pop
nop
add
test
sbbb
inc
cmc
andl
mov
and
ljmp
xchg
jno
inc
mov
push
mov
test
fildll
je
sbb
pop
out
sub
sub
push
and
mov
jge
aad
sub
cld
pop
in
jne
fdivp
mov
lret
loope
jg
sub
inc
adc
cmpsl
jae
xor
mov
fidivrs
dec
insl
jg
rcrb
loop
hlt
pop
sahf
xor
xchg
fwait
lds
popf
ja
mov
mov
or
fldenv
sbb
in
dec
rorl
test
lret
adcb
dec
sub
sbb
mov
pop
cmp
jg
rcrl
fildl
and
mov
scas
mov
dec
stos
inc
pop
cmp
sti
cmpsb
mov
jnp
repnz
movsl
out
int
xor
ret
mov
sbbb
lahf
or
ficoml
add
sub
leave
xchg
pop
in
mov
iret
sbb
adc
aam
insl
lcall
adc
in
divb
into
xchg
inc
mov
mov
in
inc
dec
xchg
fldl
mov
subl
shlb
add
pop
adc
add
mov
inc
hlt
xlat
test
xchg
and
add
xchg
add
out
push
cmc
cwtl
xchg
lcall
arpl
mov
mov
mov
in
jp
cld
xlat
dec
scas
icebp
sub
xor
fcoml
stos
push
xchg
in
movsb
pop
adc
out
xchg
jno
mov
sbb
jmp
imul
jle
pushw
repz
dec
pop
pop
hlt
lods
jb
adc
xchg
push
inc
pop
fisubrs
movsl
ja
iret
out
aas
xor
sub
xchg
cmp
xchg
adc
and
pop
loop
daa
mov
adc
ret
xor
stos
scas
mov
mov
add
dec
inc
loopne
lcall
pop
dec
rol
inc
mov
push
mov
fbld
push
pop
sbb
mov
stc
lret
mov
daa
and
or
pop
fld
adc
sub
gs
xchg
inc
outsl
dec
int
dec
popf
in
mov
or
mov
fidivrl
mov
push
rcrb
mov
imulb
adc
cwtl
push
mov
addr16
shrl
jecxz
sub
in
das
les
mov
dec
add
test
push
xchg
push
push
mov
call
out
ret
in
mov
xor
jge
mov
lret
mov
sub
or
in
push
fs
in
cmp
sbb
in
cs
pop
int3
testl
repz
jp
mov
xor
mov
je
jae
lahf
popa
scas
stc
mov
cs
scas
shll
mov
pop
popa
cli
xorl
dec
jge
repz
fsubs
decb
sbb
rol
and
xchg
cmp
incl
pop
jo
push
mov
xor
enter
lea
xchg
add
mov
mov
xor
out
push
je
xor
rorl
xlat
aaa
lret
push
cmpsl
hlt
in
pop
test
test
mov
xchg
into
push
mov
daa
out
bound
stc
push
push
xchg
lcall
and
sub
adc
dec
jmp
xchg
test
push
sub
stc
call
lret
in
and
mov
dec
in
daa
adcb
mov
xor
cwtl
data16
jno
decl
jmp
into
cmp
addr16
mov
nop
xchg
iret
inc
lods
loope
dec
add
cld
ret
subl
and
xor
int3
mov
icebp
fsubs
daa
push
dec
idivb
cmp
mov
inc
movsl
mov
loope
ret
out
push
mov
mov
pop
jne
mov
or
push
cmp
mov
pushf
pop
adc
icebp
shll
or
lock
das
shrl
enter
jbe
mov
dec
test
push
dec
fmul
push
mov
ret
add
mov
jo
insb
es
lock
jb
lcall
cltd
pop
xchg
push
iret
adc
jl
orb
xor
sbb
or
mov
lods
pop
sbb
push
jle
lods
loop
aaa
adc
scas
jecxz,pt
and
xchg
in
popa
sbb
push
adc
add
xchg
in
aam
popf
negw
mov
xchg
xor
jl
lock
mov
mov
pusha
pop
icebp
pop
jecxz
mov
repnz
test
adc
arpl
or
push
xchg
pop
movsb
mov
cld
or
pop
in
mov
repnz
in
ja
jb
dec
push
inc
sub
mov
jle
or
fs
add
insl
pop
inc
xor
jae
dec
mov
daa
fs
lcall
clc
and
les
js
movsl
test
lea
hlt
adc
push
scas
aaa
dec
inc
jbe
and
push
or
xchg
cltd
ja
sub
sbb
mov
aam
mov
xor
test
fisttpl
insb
cmp
mov
push
or
aas
xchg
subl
pop
pop
mov
fnsave
movsb
sub
dec
mov
xor
push
mov
mov
cmp
nop
cmp
popf
xor
add
or
ret
sbb
in
mov
scas
in
sub
ss
push
ds
out
les
mov
mov
ret
shlb
push
fcomip
jno
push
add
ljmp
pop
or
inc
into
and
rolb
popf
stos
loop
sub
jp
fistpll
dec
iret
mov
push
insl
rcrl
dec
scas
push
lcall
in
push
test
sub
lock
sub
inc
add
mov
inc
pop
jmp
lret
fidivrl
aaa
cs
adc
adc
jl
mov
imul
dec
mov
cmc
add
and
pop
mov
and
out
inc
cld
push
xor
les
daa
push
mov
int3
mov
sahf
pop
lea
dec
gs
xchg
mov
stos
out
sbb
lods
out
cmp
pop
mov
jge
fldcw
mov
lods
mov
das
xchg
dec
or
mov
js
push
aam
dec
jge
popa
aas
fisttps
imul
fdivrs
sbb
je
mov
mov
leave
in
push
push
loop
fdiv
and
push
mov
mov
xor
mov
popf
inc
sbb
xchg
inc
out
std
das
xchg
jno
push
sbb
or
mov
pushf
stos
mov
mov
sub
push
and
es
sbb
mov
int
outsl
pop
mov
gs
pop
cmp
inc
negw
ret
mov
xor
sub
test
push
sarl
cmp
mov
dec
mov
xor
mov
xor
loopne
es
mov
inc
pop
xchg
insb
das
inc
subb
push
imul
into
or
and
sbb
lods
add
adc
xor
sbb
out
fcmovbe
les
and
pusha
movb
fwait
fs
addl
sub
inc
lahf
ret
mov
inc
pop
sti
push
push
pop
stc
mov
adc
dec
int
cmp
iret
xor
dec
add
or
xor
cli
cmp
lock
enter
pusha
mov
loop
dec
and
test
jns
andl
loope
mov
xor
mov
in
mov
and
cmp
xchg
add
pop
cmpsl
int
dec
decb
fwait
push
cmp
out
neg
cltd
lds
xchg
sbb
push
mov
jo
push
scas
xchg
cmp
mov
xlat
or
mov
dec
sub
fstl
into
push
repz
scas
fwait
es
xor
daa
jae
aaa
movsb
mov
call
shl
lods
xor
ret
stos
mov
sarb
hlt
mov
loopne
pop
xor
pop
inc
lret
loop
or
sub
nop
jb
imul
mov
shrb
or
mov
lea
ljmp
dec
xchg
or
mov
rcll
in
add
inc
mov
jae
cmpsl
loop
testb
fnstenv
xor
dec
dec
xchg
add
xchg
push
push
mov
adc
pop
sub
bound
mov
lock
ficoms
into
ret
xchg
shll
xchg
aad
popa
cmp
pop
repz
movsl
dec
dec
sbb
movsl
add
call
sarb
pop
push
or
mov
inc
dec
test
filds
sbb
mov
push
stos
mov
add
fs
les
movsl
sbb
xor
imul
rcrb
hlt
test
mov
scas
mov
outsl
std
and
mov
cmp
popa
mov
or
fwait
fwait
aas
shll
mov
in
and
pop
lods
andps
jg
nop/reserved
mov
roll
fwait
pop
mov
push
jp
insl
jmp
ds
je
cmp
imul
adc
mov
jne
xor
jmp
mov
loop
clc
mov
ret
imul
in
std
fs
inc
outsl
dec
shrb
xchg
xchg
xor
xchg
loopne
mov
int3
lret
dec
movsb
cmpsl
pop
stos
popf
iret
jno
loopne
and
mov
mov
dec
in
pop
sahf
out
sti
mov
jbe
and
jmp
stc
jl
pop
jp
jg
in
fdivrs
sbb
test
mov
mov
cmp
aad
arpl
orb
jne
xchg
jns
cmp
int
mov
and
ret
ret
mov
pop
dec
arpl
test
aam
pop
or
xor
push
mov
mov
in
call
stc
mov
int
lret
enter
xchg
sub
aas
xor
fdivrs
cltd
aam
xor
pop
mov
scas
idivl
insb
pop
orl
sub
loopne
lock
in
icebp
mov
sub
mov
jnp
movsl
mov
incl
jmp
or
out
loope
mov
insl
cmp
or
jmp
mov
jge
mov
scas
mov
mov
ja
cld
sti
bnd
push
std
pushl
pusha
sarb
xor
xchg
jo
sbb
movsb
mov
sahf
sti
ljmp
adc
and
cld
pop
notb
in
cmpsb
jmp
and
clc
aam
sti
jp
mov
and
sub
jbe
or
pop
push
pop
jnp
mov
mov
ljmp
sbb
sub
cmp
dec
jp
push
pop
jnp
mov
mov
ljmp
sbb
bound
or
pop
ret
jnp
mov
stos
stos
lcall
jmp
stc
lret
sbb
sub
cmp
dec
jp
push
dec
je
add
lcall
adc
add
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
dec
addb
mov
aaa
mov
roll
test
mov
test
aam
test
hlt
in
add
and
push
ret
je
fs
add
aam
lds
in
or
mov
pop
shrb
repnz
cmp
dec
fcoms
xor
adc
jb
addb
dec
pop
pop
add
adc
popf
adc
jl
jge
dec
mov
jmp
mov
xor
xor
xchg
cmp
cli
pop
mov
test
fstps
bound
cltd
xchg
add
jge
out
sbb
jl
xchg
ret
in
pop
repnz
popa
pop
popf
and
jge
xchg
aam
scas
cmpsb
jno
push
ret
mov
mov
clc
int
adc
push
hlt
pop
sti
outsb
insl
je
dec
add
test
pushf
inc
jnp
mov
mov
pop
jns
sbb
hlt
pop
add
jnp
test
rcll
jnp
dec
movsl
xor
in
aam
add
xor
xor
je
jge
lea
pushf
adc
fcoml
std
xor
out
popa
inc
push
in
hlt
xor
or
dec
lret
das
mov
pop
adc
add
push
mov
sub
sbb
test
je
pop
mov
mov
test
in
jge
ss
and
sub
inc
shlb
repnz
add
aam
les
in
adc
add
xor
and
push
ret
je
fs
add
aam
les
in
adc
movl
lret
mov
mov
jns
je
insb
je
stc
xchg
dec
clc
jp
arpl
xorb
pop
mov
xchg
cmp
mov
es
mov
cmpsl
dec
div
cmp
pop
jecxz
xchg
out
scas
adc
lcall
stos
mov
cmp
dec
jg
jmp
imul
aaa
jg
sahf
rcrb
int3
push
or
jns
mov
lret
ljmp
push
jg
cmp
shll
inc
das
inc
data16
cltd
mov
test
mov
inc
cmpsb
mov
adc
add
sub
into
pop
aas
ljmp
div
mov
pop
pop
pop
popf
repz
ljmp
xchg
icebp
repz
cltd
fs
data16
fwait
xchg
test
dec
and
movsb
push
sbb
xchg
clc
cmp
aas
scas
xchg
mov
push
mov
sahf
sub
xchg
push
aas
lcall
jge
inc
call
jl
out
das
xchg
mov
in
push
xchg
rcr
shr
jo
jge
stos
xor
mov
xchg
icebp
mov
cmp
and
fstpt
rolb
jge
inc
out
mov
push
or
lods
enter
lret
dec
or
mov
jmp
or
or
mov
scas
shrb
adc
jb
mov
js
sbb
cmp
scas
and
lret
mov
xor
shrl
push
push
shrb
adc
mov
loopne
xchg
nop
pop
ds
ds
enter
mov
mov
movsl
cli
pop
lahf
pop
int3
sub
sub
cmp
aad
addr16
inc
pop
adc
pop
arpl
adc
push
or
jns
aas
mov
cs
loope
xor
or
xchg
push
incl
jle
stc
scas
mov
icebp
cmpsb
cmp
jbe
or
push
push
insb
fldt
fnstsw
fildll
scas
es
sub
out
test
ss
je
fimull
stc
repnz
mov
in
xchg
add
pop
data16
sbb
mov
jmp
gs
push
jns
ljmp
xor
adc
mov
lret
sbb
add
inc
pusha
movsb
mov
jo
mov
cld
clc
scas
adc
push
in
enter
imul
mov
out
mov
pop
aaa
and
test
push
subl
decb
push
sbb
mov
shr
jo
sti
cli
dec
sbb
rolb
xchg
mov
add
sahf
xor
xlat
outsl
lods
add
daa
pushf
xchg
jle
sub
enter
in
in
pop
push
dec
cmp
addr16
aad
pop
xor
ljmp
add
in
jbe
mov
mov
mov
mov
add
scas
or
shrl
loopne
sub
ds
arpl
ss
dec
xor
sbb
gs
or
jne
fs
sub
mov
lods
cmc
je
je
dec
jl
mov
sub
cli
add
cltd
sbb
push
mov
test
pop
add
sbb
mov
call
shl
scas
or
push
and
dec
or
xchg
xchg
xor
leave
fiadds
mov
repnz
fwait
outsl
cld
test
hlt
mov
push
xchg
ret
mov
mov
aad
stc
inc
lahf
push
ss
dec
sbb
mov
inc
mov
sbb
sbb
xor
enter
scas
push
adc
push
inc
sub
rorb
insb
inc
push
cmp
pop
ret
les
or
dec
inc
jns
lret
pushf
testl
xor
and
insl
inc
pop
jg
xor
lods
insl
pop
addb
stc
leave
add
push
idivb
les
cld
mov
push
and
inc
jns
inc
ds
jne
add
dec
orl
inc
fcmovnb
aas
fisubrs
mov
or
inc
xchg
dec
jne
xor
push
mov
jno
fdivrl
pop
cmp
repz
mov
and
sbb
and
iret
stos
fldl
movsb
and
orb
push
aas
xchg
insl
sbb
mov
movsl
jg
or
pop
mov
pushf
push
pop
cmpsl
notl
bound
and
insl
imul
or
xlat
cmpsb
in
gs
cltd
mov
lret
pop
cltd
jnp
add
jbe
and
fisttps
iret
xor
lcall
pop
into
or
push
insb
dec
xchg
pop
lret
lock
cmp
aas
cld
adc
fcompl
push
arpl
xorl
pop
jnp
cmp
clc
and
mov
sti
cwtl
daa
roll
jle
lahf
mov
pushf
in
xchg
fwait
mov
iret
cwtl
jo
stc
and
xchg
imul
popf
out
or
pop
xchg
shlb
shl
out
push
aas
pop
stos
or
pop
ja
daa
loopne
cltd
or
insl
pop
cli
lock
filds
or
adc
dec
jle
mov
rcll
and
push
jb
sti
pop
sbb
push
xchg
jmp
xchg
and
sbb
stos
in
sar
and
outsb
les
pop
loop
lcall
adc
adc
jbe
mov
mov
push
xor
inc
fadds
lcall
fiadds
mov
shll
in
cwtl
out
jecxz
pop
push
insl
in
mov
roll
xor
mov
fdivs
std
into
jne
push
popa
cwtl
lret
enter
sub
out
hlt
out
aam
xchg
and
add
lds
div
leave
mov
mov
shr
and
mov
sbb
jne
and
push
test
inc
jae
or
es
insb
hlt
repz
cmpsb
sahf
addl
pushf
test
jo
mov
andb
pop
mov
push
pop
mov
testb
enter
dec
stos
in
xor
pop
popf
mov
xchg
lret
cmpsl
jno
hlt
or
xchg
xchg
stos
mov
movsl
test
ja
test
lret
pop
subl
popf
insb
push
xor
xchg
in
popf
dec
cmp
lret
cmc
dec
cmpsl
mov
cmc
rorb
fdivrs
loop
in
sarb
mov
pop
imul
and
sub
ret
or
mov
insb
scas
in
lea
xchg
push
out
xchg
mov
popf
lret
icebp
scas
add
les
push
jp
push
shll
test
leave
pushf
sbb
test
enter
outsl
add
stc
pop
out
clc
pop
xchg
orb
sahf
sub
pop
cmp
adc
fidivl
push
cwtl
sarb
sbb
push
jmp
ds
or
les
mov
push
icebp
inc
stos
mov
pushf
or
mov
loop
mov
scas
pop
mov
mov
xor
icebp
cmc
bound
cmpsb
mov
outsl
lods
xchg
or
and
xor
mov
lahf
cmp
sahf
xchg
popf
mov
cs
clc
push
dec
popa
inc
cld
repnz
xor
xchg
or
cli
cmp
fldcw
sub
popa
pop
jle
push
popa
pop
pop
es
push
jnp
popa
and
das
inc
add
addr16
push
ljmp
insb
mov
test
inc
jo
dec
pop
push
mov
rcl
jmp
cmp
jo
sahf
into
add
lcall
aaa
in
mov
mov
mov
xchg
cld
adc
mov
cld
inc
jle
and
jle
adc
pop
cmp
xchg
add
in
iret
xchg
into
ja
in
out
cmp
mov
ds
and
idivl
mov
mov
inc
pop
fldt
adc
bound
ss
sub
popa
stos
add
fisubrl
mov
in
mov
xlat
pop
testb
test
mov
pop
sbb
sbb
bound
jb
push
lock
imul
lret
out
pop
loopne
pop
jp
jb
test
imul
adc
andl
add
shll
call
mov
dec
push
in
ljmp
xchg
add
out
xchg
jnp
add
cmp
sub
push
out
int3
rorb
fbld
insb
cmpsl
ja
popf
pop
and
outsb
mov
out
dec
sub
rorb
rorl
inc
mov
and
push
sub
jae
mov
rorl
push
xchg
xor
int3
mov
adc
dec
and
stos
testl
scas
std
iret
jmp
mulb
cmp
pop
lds
popa
inc
rolb
and
adc
insb
aas
push
loopne
push
movsb
ja
scas
fnstsw
jle
mov
inc
add
push
jns
mov
adcb
mov
and
shll
std
or
push
stc
or
arpl
paddsb
mov
push
lret
or
pop
loope
push
adc
addr16
addr16
aad
int3
xchg
or
jno
fnstcw
jbe
mov
jge
push
lock
arpl
scas
out
and
ret
fmulp
fmul
pop
movsb
mov
icebp
icebp
mov
sub
test
out
ret
adc
lret
jl
xchg
shlb
dec
or
cli
inc
mov
fisubrl
pop
or
loop
xorb
cmpsb
out
jns
cmc
pop
rorb
xorl
inc
or
mov
dec
out
pop
jecxz
push
nop
mov
sub
cmp
in
rorb
fstl
stos
cs
cmpsl
jp
test
lea
adc
inc
sbb
int3
lcall
mov
pusha
xor
xor
jb
mov
and
mov
scas
jns
mov
popa
jno
outsb
pop
sub
ret
orl
decb
lahf
dec
fstpl
and
mov
dec
mov
pop
and
rcrl
cmp
shrb
adc
add
ss
and
jbe
inc
xor
mov
or
scas
xor
and
dec
pop
imul
scas
pop
in
aad
jnp
ljmp
movsb
insl
push
lods
cwtl
sub
inc
dec
and
push
lahf
jmp
add
aas
not
addr16
jb
popf
in
dec
mov
mov
jge
ret
in
pushf
mulb
scas
outsb
add
jbe
jmp
xchg
and
mov
ds
sub
lahf
in
lea
pop
sub
stos
and
je
pop
arpl
in
jmp
test
add
sbb
dec
pop
sbbl
insl
push
jle
outsl
and
dec
xchg
sbbb
dec
jge
pop
adc
stos
xchg
inc
sbb
xchg
inc
mov
inc
xor
pop
jo
es
mov
cmp
sub
cmp
fistps
gs
fdivs
jo
dec
xchg
in
adc
sub
dec
and
push
mov
stc
test
jae
gs
xchg
mov
jle
shll
cmp
xor
xor
data16
lahf
iret
lret
sub
or
cmp
clc
push
xchg
pop
adc
add
fmuls
dec
add
push
ds
pop
imul
add
inc
jg
add
jg
push
push
repnz
loop
cmp
add
fmulp
aad
nop
cmp
adc
adc
shlb
pop
inc
jbe
fxch
movb
outsl
ss
xor
push
mov
stc
mov
adc
jle
in
in
jp
stc
sub
pop
sbb
outsb
mov
push
xor
jle
mulb
das
ss
add
fists
xor
stc
push
pop
cmp
movsl
mov
inc
xor
jl
lods
inc
jmp
cli
sub
hlt
mov
mov
das
scas
cmpsb
adcb
jg
pop
jecxz
mov
mov
mov
dec
xlat
out
cmpsb
or
js
or
ss
iret
sub
and
add
xchg
pushf
cmp
adc
arpl
mov
mov
push
test
popa
addb
push
mov
mov
outsb
fsubrl
stos
pusha
pop
lret
pop
cmc
in
xlat
xchg
adcb
xlat
lods
icebp
movsb
pop
stos
pop
lods
jb
pusha
mov
je
and
adc
in
jmp
xor
add
inc
out
adc
sbb
dec
imul
jge
pop
insb
std
mov
or
sub
idiv
hlt
negl
je
mov
decb
cmp
mov
dec
dec
and
sbb
adcl
mov
sbb
std
push
and
mov
int3
mov
cltd
insl
roll
cmp
mov
int3
jl
pop
mov
jno
inc
and
mov
cmc
loope
mov
mov
and
clc
sbb
or
xor
sbb
mov
je
popf
test
lods
or
orb
inc
pop
pop
xlat
negb
mov
data16
cmc
jns
mov
push
jl
mov
dec
pushf
fisttpll
adc
sarl
repnz
mov
out
scas
addl
lods
in
push
fcomp
or
and
mov
outsb
mov
rcl
xor
add
jne
fidivs
dec
rcrb
adc
adc
add
dec
movsb
pop
xchg
hlt
cli
scas
cmpsl
enter
fadds
addr16
mov
jmp
add
scas
pop
jmp
inc
dec
mov
sbb
insb
fmuls
sbb
inc
js
es
mov
aaa
mov
cmp
adc
sahf
daa
ret
push
cmpb
and
call
jbe
mov
jne
push
cli
cmc
pop
sbb
cmp
mov
aad
push
cwtl
xlat
sbb
mov
adc
cmp
sahf
cvtps2pi
fimull
fwait
rorb
push
mov
dec
jns
stc
mov
ret
xchg
cmc
out
lret
in
and
xlat
int3
int3
jo
sbb
xor
mov
ror
jbe
aam
leave
mov
out
add
push
scas
test
test
push
and
lock
int3
xchg
popa
mov
inc
popf
repnz
jp
shl
arpl
cltd
pop
jbe
loop
ret
xor
mov
push
insl
or
adc
xlat
repz
vmovlhps
mov
and
sahf
cmp
ljmp
xchg
mov
dec
lahf
call
xor
dec
mov
fsts
xchg
adcb
xchg
ljmp
insb
xor
and
xlat
lret
mov
cmp
jb
clc
pusha
fcompl
xchg
add
aas
mov
sqrtps
nop
pop
jnp
and
mov
cmc
std
mov
cmp
push
push
nop
into
fwait
sar
icebp
out
jae
popa
adc
lock
ja
dec
mov
xor
jmp
mov
and
xchg
lret
outsb
ljmp
cmc
and
mov
ret
int3
das
jle
add
loope
cmp
xchg
std
jno
fildl
daa
xchg
mov
inc
shlb
bnd
lcall
xor
push
xor
dec
xchg
pop
mov
adc
push
aam
xchg
cmp
xorb
adc
mov
cmp
and
movsb
lret
or
xor
pusha
xor
inc
mov
clc
inc
adc
xchg
pop
jl
push
repnz
sub
mov
or
fisttpll
push
inc
rol
test
and
mov
orl
cs
xchg
subb
push
stos
aad
adc
jl
mov
jmp
stos
xor
xchg
jg
sahf
pop
pop
fwait
lock
imul
test
dec
call
add
sub
adc
lret
stos
out
and
jae
iret
inc
sti
jg
add
mov
or
arpl
aaa
adc
add
jne,pn
test
lcall
out
fdivrs
lds
cwtl
dec
dec
clc
push
and
mov
pop
outsb
inc
popf
sub
cld
xor
lea
cmp
sub
push
popf
mov
xchg
jb
add
int3
mov
mov
mov
ret
xor
xchg
iret
aam
scas
fmulp
jb
mov
lods
enter
xor
mov
int
cmpsl
ja
xchg
addl
mov
xchg
mov
loope
or
add
lahf
dec
cmp
dec
inc
ljmp
or
jbe
jb
cmp
ret
lahf
add
inc
xor
dec
scas
cmp
and
jne
pop
xchg
cli
fwait
adc
xor
add
js
cmp
xor
icebp
or
loop
inc
push
addr16
add
push
jo
sub
repz
and
rorb
stos
aas
out
push
mov
pop
cmp
in
lret
shl
bound
add
dec
lcall
test
xchg
jle
push
mov
int3
out
inc
xchg
arpl
cmpl
adc
lret
jmp
loop
in
mov
sbb
jmp
xor
mov
outsb
lds
daa
mov
mov
into
repz
fs
sub
dec
loop
lds
and
sbb
jmp
mov
xor
pop
mov
mov
inc
in
cltd
fcoml
or
mov
add
mov
ficomps
loope
xor
gs
arpl
and
rorl
mov
xchg
push
or
add
sbb
pop
imul
cmpsb
les
into
addr16
sbb
jae
cwtl
daa
cmp
cmp
mov
loope
sbb
xchg
mov
or
out
adc
cmpsb
je
pop
inc
test
loopne
jmp
or
popf
dec
pop
xchg
imul
rcrl
mov
mov
sub
rol
mov
mov
pop
lock
les
add
jmp
sbb
dec
popa
jbe
fstl
push
sbbl
jns
sub
std
cmp
fadds
push
xor
popf
push
jecxz
xor
cld
jmp
dec
rorl
cmp
movsl
sbb
subps
add
out
sub
decb
imul
add
jno
mov
rorb
push
xchg
in
test
xchg
dec
lea
mov
xor
dec
fists
push
cld
mov
push
cltd
or
roll
xor
dec
aad
sbbl
push
loopne
jb
lea
test
sbb
push
loop
dec
sbb
pop
repz
xorb
bound
ss
mov
xchg
pop
lock
ds
jae
mov
pop
pop
arpl
fcoml
lods
xchg
and
adc
loopne
jne
icebp
xor
add
fimuls
add
subb
movsl
inc
int
inc
fwait
daa
mov
mov
int3
adc
lock
imul
jno
into
xor
loopne
in
int3
movl
sti
inc
loop
or
xor
sub
das
or
push
and
js
push
sub
insl
test
fcmovnu
rolb
sbb
in
inc
imul
addb
cmpsb
sub
xchg
push
sub
xchg
xchg
xor
lods
dec
inc
mov
je
pusha
test
push
lcall
push
xchg
cmp
bndldx
imul
aad
lods
and
sarl
lods
mov
mov
jns
test
int
mov
and
push
es
and
mov
ret
inc
lcall
adc
dec
outsb
and
mov
sbb
sbb
aas
int3
mov
xchg
iret
out
and
insl
adc
pop
outsl
bound
mov
xchg
lods
jnp
sarb
mov
loop
add
int
push
loope
dec
jle
inc
out
xor
pop
lahf
mov
in
add
jno
push
imul
ret
scas
gs
shll
cmc
inc
jg
test
icebp
lock
xchg
iret
and
inc
into
out
or
icebp
pop
or
mov
fs
push
add
daa
push
fcoms
lea
inc
inc
mov
jnp
dec
inc
sti
xchg
aaa
dec
movsb
test
pop
lods
jne
test
dec
mov
loop
jne
cltd
jne
negl
dec
and
stc
test
adc
and
sbb
xchg
pop
inc
inc
loopne
loopne
dec
xor
adc
xchg
lds
daa
mov
je
cmp
or
repz
push
fwait
pop
imul
stos
mov
xor
jecxz
lret
cmp
ss
aad
aad
push
call
aaa
jnp
and
pusha
cmpsb
adc
jge
jp
and
ret
js
mov
mov
mulb
and
jl
and
sub
xchg
rclb
dec
jno
aad
mov
std
aad
scas
pop
xchg
mov
stc
xor
jb
mov
dec
jne
mov
dec
hlt
sti
pop
fisubl
fcmovnb
imul
adc
call
shrb
xchg
mov
fmuls
jne
aam
ret
mov
sbbb
jbe
in
clc
sub
divl
mov
daa
out
pop
push
jns
mov
jbe
and
lcall
xor
mov
ret
je
fs
add
aam
les
in
adc
add
xor
and
push
ret
je
fs
add
aam
les
in
adc
add
xor
and
push
ret
je
fs
add
aam
rclb
aad
and
and
push
ret
hlt
in
imul
mov
mov
popf
sbb
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stos
inc
mov
jne
mov
xlat
xor
or
sbb
push
jp
dec
movsl
pop
mov
inc
mov
jne
add
fiaddl
leave
cmp
or
sbb
push
jnp
dec
movsl
pop
mov
pop
mov
insl
ljmp
das
sub
sbb
jp
jg
push
or
or
xor
fimuls
in
lods
aam
push
pop
adc
out
icebp
push
mov
inc
inc
fbstp
addr16
fidivl
lret
mov
hlt
mov
or
push
or
fnop
loopne,pt
shrl
mov
push
test
lds
aad
lahf
or
icebp
sub
movsl
pop
lock
sbb
addb
mov
and
in
cmp
shll
setp
adc
sub
xor
xchg
cli
test
mov
gs
jno
outsb
and
gs
lods
jg
cli
sbb
mov
pop
mov
push
mov
jne
add
fisubrl
lds
int
cld
sbb
push
jp
dec
mov
fldenv
int3
add
adc
dec
pop
push
pop
stos
pop
aad
loope
nop
in
loopne
xchg
das
lret
fsubrl
cmp
push
fistpl
popl
lahf
pop
pop
mov
mov
sbbb
popf
cmc
pop
xchg
and
xor
int
mov
xor
and
cmp
or
sbb
push
jp
dec
movsl
pop
mov
inc
mov
jne
add
fidivl
or
sbb
push
jp
dec
movsl
pop
mov
inc
fildl
loop
ja
mov
mov
pop
jmp
mov
jbe
jmp
testl
js
scas
test
lret
and
mov
jo
mov
sahf
ds
test
pusha
insb
jp
cmp
leave
jns
dec
dec
fs
xor
cwtl
pushl
adc
fwait
sub
or
aam
push
xchg
mov
aad
jbe
jae
je
into
xor
mov
test
mov
adcl
push
mov
cwtl
fwait
fisubrs
xlat
pop
pop
inc
mov
add
jg
call
outsl
mov
pop
hlt
aad
mov
movsb
mov
inc
dec
xchg
jb
rcrl
out
inc
mov
cwtl
pop
scas
adc
call
es
mov
inc
cli
ja
jmp
das
xor
jne
mov
push
int3
jno
xchg
inc
dec
add
loopne
jl
addb
jnp
int3
xchg
clc
add
inc
sbb
pop
sbb
cmp
mov
or
jo
lret
mov
push
xor
mov
leave
insl
pop
mov
lds
aaa
popa
mov
rolb
aas
shr
sbb
ds
pop
popf
push
in
mov
pusha
dec
cmp
xor
pop
jle
fidivrs
repnz
enter
lcall
fstpl
sahf
jb
and
scas
xchg
mov
or
inc
pop
sbb
and
or
and
push
pop
mov
nop
stos
popf
and
das
aas
cmpsb
addr16
add
sbbl
dec
dec
and
and
pop
js
pusha
mov
xchg
xchg
mov
xor
mov
pop
in
push
inc
dec
sti
dec
xor
mov
repnz
dec
fdivr
adc
mov
xchg
imul
add
push
mov
and
call
test
jnp
and
xchg
push
mov
xchg
adc
push
pop
ljmp
dec
jg
icebp
inc
les
out
shlb
push
es
mov
ret
js
and
sbb
dec
into
out
mov
or
hlt
and
imul
clc
push
xchg
mov
push
pop
imul
xor
xorl
sub
test
icebp
cltd
sbb
inc
cli
mov
xor
sbb
arpl
jg
or
outsl
mov
enter
sbb
push
cmpsb
in
ret
lock
stos
stos
outsb
adc
mov
int
out
sub
or
and
cmp
pop
lds
adc
mov
out
sub
aas
fadds
les
mov
dec
mov
insb
jbe
add
mov
rcrb
hlt
xor
mov
cmp
int3
adc
ds
test
divl
add
xor
dec
xor
lret
cmp
fistpll
dec
jmp
daa
nop
data16
push
pop
je
jle
jl
pop
shlb
ret
dec
jge
cmovg
and
testl
push
push
jle
in
adc
mov
shll
lods
or
jne
dec
or
cmpsl
and
jne
jg
push
pop
hlt
imul
or
add
fs
mov
pop
js
mov
lret
shlb
push
inc
ds
dec
sahf
xchg
sbb
xor
mov
cmpb
sbb
test
push
inc
test
jg
dec
xorl
rclb
xchg
iret
je
push
add
imul
mov
pop
jg
push
negl
loopne
sbb
call
add
loopne
adc
ss
daa
xchg
mov
xchg
dec
cs
mov
or
ror
pop
pop
sahf
dec
mov
aad
or
out
imul
repz
add
lock
shl
xchg
lret
out
pop
scas
cmc
pop
lods
sub
hlt
mull
xchg
pop
es
push
sub
or
cld
test
subl
inc
idivl
sub
sub
fstps
cli
orb
jns
sbb
addr16
inc
pop
or
mov
je
or
xor
lahf
cld
lcall
sub
jae
xchg
arpl
sbb
filds
cwtl
push
insl
pop
idiv
jns
add
in
fstp
fwait
dec
sbb
mov
push
jge
xchg
mov
cld
pushf
insb
push
add
xchg
cmp
lahf
xchg
into
pop
lret
xor
int3
pop
lea
mov
sbb
ret
inc
mov
or
xor
jmp
mov
leave
and
ss
add
mov
mov
and
push
mov
mov
loopne
xchg
adc
outsl
lock
lods
cmp
jmp
aad
jae
cmp
call
cwtl
test
mov
add
fwait
inc
cmc
push
dec
test
imul
sbb
popf
sub
loop
data16
andl
dec
mov
add
adc
int3
mov
push
push
repz
pusha
add
jp
cmp
cmpsb
loope
dec
sahf
dec
jne
cmp
inc
jge
mov
shlb
fisubrl
push
cmp
push
or
push
push
test
mov
std
lret
adc
mov
bnd
test
mov
add
int
rol
scas
adc
aad
pop
ja
xor
adc
pop
jne
dec
std
cwtl
out
jnp
push
inc
lds
aas
xchg
mov
std
js
adc
lcall
out
and
jbe
and
ds
pop
daa
pusha
xor
imul
push
cld
mov
mov
mov
push
mov
in
and
out
outsb
push
jg
subl
mov
cltd
sub
jp
fistl
push
subl
cmpb
outsb
jnp
or
cmp
push
pop
fnstenv
in
test
mov
add
jp
cmpsb
sub
jmp
movsl
jbe
cmc
enter
push
inc
cmp
cli
fbld
jecxz
cmp
or
mov
or
in
cli
lods
fwait
out
sbb
daa
jmp
pusha
ljmp
test
sbb
dec
das
in
gs
mov
sti
adc
mov
xchg
in
imul
hlt
lods
int3
cmp
pop
adc
mov
jge
pop
push
hlt
adcb
fidivl
into
or
dec
popa
gs
dec
mov
xchg
mov
jb
lcall
jp
lret
mov
adc
push
out
jnp
jae
add
pop
push
mov
adc
mov
mov
stos
add
das
mov
adc
adc
inc
enter
add
repz
sbb
and
sbb
cwtl
pushf
je
cmp
test
dec
jg
jb
inc
push
pop
jb
lods
sbb
in
mov
inc
into
lret
cmp
jmp
cmpsl
repz
sbb
aam
lcall
pop
xlat
dec
push
movsb
ss
and
std
jb
hlt
rcr
fadds
dec
inc
fmulp
push
pushf
mov
mov
mov
adc
insb
push
scas
lods
stos
sub
popl
aad
popf
adc
data16
adc
imul
push
out
test
fs
mov
enter
add
scas
add
clc
insl
pop
rclb
in
pop
outsl
lret
push
pop
adc
out
and
cmp
or
addr16
cltd
xchg
adc
mov
outsb
and
mov
int
sub
mov
mov
inc
orl
test
xchg
mov
out
cmp
or
pop
push
aaa
dec
inc
aad
jae
mov
es
cmp
cs
jo
sar
jmp
mov
jecxz
pop
cmpl
shrb
leave
scas
jb
mov
adc
scas
cmpsb
jle
sbb
mov
and
push
push
icebp
movsl
vaddpd
cld
fisubl
into
and
mov
pop
xchg
xor
mov
call
jecxz
push
jns
sub
push
ret
lock
insl
std
or
xor
je
mov
sbb
inc
incb
stos
sahf
dec
imul
sbb
mov
jg
lret
push
aaa
mov
xchg
imul
fwait
mov
aam
xchg
push
pop
mov
and
hlt
sti
add
mov
sub
imull
mov
pop
lock
dec
lret
push
inc
xchg
sbb
inc
lcall
jecxz
cmp
shlb
mov
outsb
add
mov
les
mov
xor
xchg
mov
test
fwait
push
xor
mov
jmp
push
xor
xchg
idivl
jne
or
dec
pop
sti
xchg
or
in
outsl
in
test
push
mov
push
mov
popf
and
das
add
lods
in
sbb
mov
mov
sub
pusha
sti
movsb
imul
cltd
lods
aam
test
divb
jg
mov
add
leave
lahf
adc
and
or
inc
jnp
in
cmp
fists
xor
sarb
leave
aas
sub
ret
aaa
fnstenv
lods
lcall
pop
and
jg
add
mov
sbb
cwtl
dec
push
je
jns
add
test
daa
out
adc
mov
mov
sahf
adc
xchg
dec
jl
imul
xorl
stos
dec
and
fisubrs
into
loop
and
jp
pop
andl
adc
adc
jno
fldenv
or
pop
mov
and
leave
mov
inc
jb
inc
pushf
stos
ljmp
xchg
xor
pop
mov
pop
dec
cmpsl
lret
lock
inc
cwtl
or
jno
mov
in
ljmp
test
ss
push
les
xorb
mov
dec
mov
icebp
jg
mov
push
sub
out
mov
mov
mov
push
stos
lahf
mov
or
sub
mov
dec
arpl
fwait
in
ror
pop
aaa
test
leave
outsl
push
mov
dec
mov
out
sbb
mov
rep
out
mov
adc
in
cli
inc
sahf
mov
sbb
and
xlat
outsb
movsb
push
cmpsl
fcoml
arpl
in
fstps
out
mov
ret
adc
in
sbb
mov
je
xchg
cmpsb
fidivrl
repz
enter
jp
insb
sbb
add
pop
dec
mov
in
cltd
daa
push
sbb
testl
jg
out
sub
fiaddl
jl
cld
push
push
rep
xchg
inc
push
push
add
cmpsl
out
sub
outsb
movsb
inc
loop
xchg
aad
pop
xor
aad
xchg
and
xchg
mov
jae
ret
cs
rcrl
pop
adc
mov
fstpl
mov
and
lcall
mov
push
mov
mov
pop
jmp
xchg
repnz
data16
mov
icebp
push
or
mov
aad
test
or
das
psrlq
mov
loop
mov
fnsave
cwtl
out
cmp
jno
or
lock
enter
hlt
stos
pop
or
cmp
movsl
stos
add
into
out
bound
dec
jg
sub
pop
ret
out
sub
jne
adc
lods
push
cs
popa
dec
pop
jp
outsb
pop
into
lret
push
adc
xor
jnp
pop
or
sub
gs
out
dec
sbb
imul
push
mov
aad
imul
inc
sub
neg
add
lds
or
mov
fmuls
jns
jno
xor
mov
testb
ret
mov
inc
dec
sub
pop
mov
nop
jmp
popa
push
adcl
bound
dec
push
dec
push
xchg
cmp
leave
ret
sub
xchg
push
sub
pop
andb
push
sbb
pushl
sbb
decb
pop
out
icebp
stc
addr16
cld
xchg
imul
std
push
xchg
pop
mov
jl
jle
shll
push
jae
mov
aas
sub
cltd
stc
hlt
inc
frstor
xchg
jg
or
pop
adc
popa
adc
aad
mov
xor
or
push
vpunpckhdq
inc
xor
lcall
xchg
ja
rcrb
movl
push
insl
sbb
and
cmp
xor
stos
mov
ds
mov
cmp
dec
push
subl
pop
sahf
pop
dec
xlat
pushf
mov
shlb
mov
clc
movsb
gs
sbbb
pop
sbb
rcll
into
sub
subb
sbb
sbb
es
cli
hlt
push
xchg
jns
mov
popa
aam
lret
cwtl
and
cld
xor
mov
stos
outsb
sbb
adc
nop
iret
jnp
xchg
jne
jg
pop
and
sub
pop
xchg
lret
add
jmp
addb
insb
dec
xor
jno
jnp
jnp
shll
pop
test
cli
test
inc
inc
mov
cmpsb
cltd
cli
and
lock
pushf
jp
shll
stos
and
shlb
test
xor
sbb
inc
test
out
nop
cmp
sbb
gs
jnp
dec
imul
fbstp
xchg
jno
scas
inc
mul
xor
mov
mov
in
js
out
stos
loopne
cmpsb
xor
mov
mov
push
scas
loop
push
nop
outsl
clc
sub
fmul
scas
sub
and
jae
adc
or
mov
fdivl
sbb
stos
cmc
mov
cmpsl
mov
inc
add
ja,pt
push
mov
inc
shl
out
adc
inc
mov
out
jl
test
cmp
negl
jg
loope
aaa
mov
push
cmp
std
cmp
insb
inc
pop
sbbb
and
cmp
stc
mov
cs
ljmp
sub
je
xchg
fsubrl
jo
jp
mov
stc
push
cmp
add
aaa
sub
loope
xchg
pop
jae
add
je
push
push
push
pop
outsl
ror
add
xlat
push
dec
and
adc
aaa
mov
mov
xchg
loopne
mov
jle
sarb
inc
test
add
or
shlb
sub
pop
fistl
nop
pop
cltd
call
push
adc
xor
sbb
scas
inc
jp
test
and
scas
repnz
xchg
aas
mov
pop
leave
movl
mov
mov
ret
lcall
jecxz
enter
sub
xchg
jmp
mov
sti
xchg
out
lret
inc
hlt
push
icebp
mov
jno
jge
inc
and
mov
pop
xchg
jecxz
adc
aas
cwtl
js
pop
sbb
andl
into
sbb
in
mov
pop
mov
test
movsl
xor
dec
jge
xor
xchg
jno
iret
mulb
inc
testb
dec
stos
movsl
cmp
push
mov
add
jmp
imul
push
xorb
cli
test
fiadds
sbb
arpl
cmp
ret
jbe
jp
mov
imul
and
js
pop
icebp
inc
xchg
outsl
add
and
jnp
cli
jae,pt
je
mov
mov
inc
mov
loop
loopne
out
sbb
loope
mov
sub
stos
mov
xor
xor
fstpl
ljmp
mov
int3
repz
pop
aad
add
es
push
cmp
pop
movsl
stos
cmpsl
or
out
sbb
sbb
loope
add
dec
test
dec
imul
and
out
aas
xor
push
orl
jo
xor
aas
mov
add
es
scas
push
repz
dec
mov
sbb
lods
pop
mov
lret
neg
dec
call
lret
add
incl
out
cmp
or
movsb
repnz
inc
ss
adc
push
add
ja
mov
mov
into
sbb
iret
pusha
xchg
cli
push
fwait
xchg
cli
and
xchg
jmp
mov
les
stc
dec
jne
jecxz
lcall
cld
fimull
sti
jmp
jnp
idivl
inc
push
inc
sbb
nop
pop
mov
insl
in
or
push
or
bound
mov
adc
js
jae
cmpsb
or
jne
inc
lcall
fldenv
test
cli
sbb
shlb
jno
jmp
xchg
aas
testl
cmp
inc
xchg
cmc
in
mov
iret
sub
pop
push
lcall
jae
mov
cs
clc
outsl
repnz
mov
nop
mov
aaa
insb
mov
pop
xor
xchg
fadd
sar
mov
stc
push
cmp
dec
mov
imul
out
inc
std
in
dec
popa
arpl
add
xchg
xor
dec
xchg
or
sub
dec
sub
or
mov
push
and
dec
push
sarb
fs
test
aam
rolb
out
stos
dec
leave
xchg
mov
int3
cmpsl
add
xchg
fmul
leave
stc
push
paddusb
repz
xor
and
xor
or
add
js
mov
idivl
cmp
movsl
fisttps
test
xor
out
lcall
pop
int
loop
fisubrs
dec
jle
or
sbbl
aas
jno
fdivl
sub
cltd
mov
js
mulb
inc
icebp
ljmp
stc
or
ret
sbb
out
mov
js
jnp
jmp
cmp
xchg
adc
imul
adc
pop
pusha
jnp
insb
daa
loop
dec
or
lock
jo
shl
jb
fstps
sahf
inc
sbb
mov
in
mov
pop
and
cmp
xor
jns
xchg
mov
and
xchg
push
mov
in
jb
push
jmp
push
pushf
dec
sub
fldenv
jnp
mov
psubq
push
test
addr16
or
cmp
bsr
jo
mov
pusha
or
mov
sti
add
loopne
dec
pop
mov
outsb
loope
sub
cs
hlt
jo
sarl
shl
adc
push
popa
outsb
jb
sarb
and
dec
stos
xlat
js
sbb
push
test
inc
add
inc
push
inc
xchg
mov
out
rclb
xor
push
push
ljmp
pop
pop
out
cmp
pop
ficoml
cmpsb
test
sbb
add
jge
jnp
scas
pop
mov
or
adc
mov
shlb
testb
cmp
jmp
mov
lods
xor
mov
cmp
out
je
les
mov
xchg
pop
jae
mov
mov
arpl
sbb
stc
mov
push
aam
mov
lahf
fcmovu
and
pop
adcl
sub
fnstenv
outsb
add
pop
mov
in
lcall
add
or
mov
push
push
lret
mov
sbb
repz
nop
hlt
ds
out
rcrl
roll
push
add
sub
pop
iretw
ds
in
add
iret
movsl
subb
pusha
xor
call
iret
adc
xor
adc
jns
addr16
mov
out
inc
scas
and
xchg
jg
add
pop
jb
or
push
mov
dec
pop
jns
imul
rclb
cltd
sbb
xor
adc
xorb
push
repnz
test
xchg
mov
stos
xor
lods
add
add
ljmp
aaa
call
mov
outsl
dec
mov
int3
jnp
inc
gs
xlat
xor
aaa
jns
adc
ljmp
push
adc
sub
cli
stos
xchg
shll
rcrb
test
dec
pop
jecxz
popf
in
or
cld
loope
subb
sbb
inc
jp
sub
dec
leave
dec
dec
lret
cs
mov
movsb
sub
dec
mov
cltd
or
movlps
dec
movsb
mov
fs
or
sub
frstor
add
cli
ffreep
into
ficomps
fcom
jne
mov
pop
inc
fstps
xchg
inc
add
iret
cmpsb
mov
test
sbb
fadd
mov
xchg
imull
push
pop
sbb
mov
xlat
out
adc
inc
ljmp
out
or
les
push
scas
sbb
cmp
mov
movsl
ds
adc
mov
xor
lds
gs
je
sbb
and
mov
ss
outsb
in
fimull
arpl
ret
in
fcmovne
int3
mov
add
popa
aaa
into
int3
in
shl
test
add
mov
mov
fsubr
sub
add
mov
cld
xchg
xlat
and
aas
es
insb
xor
mov
pop
inc
mov
push
xchg
add
mov
cmp
aas
leave
arpl
cmp
xchg
gs
and
cmp
or
sbb
push
jp
dec
movsl
pop
mov
inc
mov
jne
add
fidivl
or
sbb
push
jp
dec
movsl
pop
mov
inc
mov
jne
add
fidivl
or
sbb
push
jp
dec
mov
mov
jne
add
pop
cmc
aad
lds
in
sbbb
mov
ljmp
xchg
lds
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
gs
add
cmp
push
pop
inc
or
fiaddl
stos
rcrl
and
ds
dec
sbb
inc
pop
push
mov
fwait
mov
loope
pop
inc
cmp
push
iret
cli
std
jno
fcoml
add
cmp
xor
ficompl
xchg
pushf
pop
test
mov
push
dec
mov
clc
pop
sub
lock
fisubrl
xor
imul
in
xor
mov
lret
icebp
stos
das
adc
xor
pushf
movsl
daa
sbb
in
xchg
aad
sti
pop
mov
mov
and
mov
mov
push
xchg
cltd
adc
or
and
cs
dec
push
cmovnp
dec
inc
dec
dec
das
pusha
in
push
push
sub
out
cli
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
notl
in
popf
test
mov
sbb
pop
and
or
pop
or
sbb
call
mov
into
shr
rorl
cmp
pop
xor
pop
fdivs
subb
lcall
adc
dec
jno
popa
sub
inc
or
fiaddl
stos
rcrl
and
pop
add
cmp
push
sbb
mov
add
sub
lea
jbe
push
push
cwtl
push
xor
ret
push
clc
leave
shrb
nop
insb
fdivs
mov
lret
in
adcl
fcompl
pop
stos
adc
or
in
and
jge
sarb
hlt
cmp
cmp
adc
pop
add
es
push
or
push
mov
add
lcall
push
aam
push
aaa
ja
stos
in
test
push
insl
inc
hlt
fwait
push
pop
stos
bound
sub
test
mov
fsubl
sbb
fildl
dec
mov
xchg
mov
add
dec
jne
imul
add
repz
fidivrl
shll
sub
cwtl
jp
nop
add
dec
mov
mov
inc
xchg
lds
lcall
bnd
lret
std
aas
subb
lock
pop
xchg
movsl
cmp
mov
insl
inc
push
dec
fstps
clc
push
lcall
inc
mov
ja
dec
std
es
push
push
movsb
push
repz
call
sbb
stc
shrl
ljmp
shl
ficoml
push
inc
iret
mov
mov
pop
out
sarl
xchg
sbb
mov
mov
sbbl
lods
cmp
dec
es
andb
lcall
call
add
and
push
sbb
ljmp
push
add
or
repz
xor
scas
imul
pop
mov
data16
jle
mov
ljmp
adc
xchg
mov
xchg
in
es
stos
bound
adc
inc
stos
push
test
or
cmp
fists
pop
inc
repz
scas
sub
dec
inc
pslld
out
adc
pusha
pop
cmp
mov
jl
addr16
xchg
call
mov
loopne
lret
jmp
jecxz
rorb
cmpsb
lret
jle
sti
aam
cld
pusha
repnz
insb
std
add
pop
and
out
cmp
jno
movsl
nop
fidivs
dec
scas
inc
dec
scas
xchg
pop
imul
fistpl
sub
add
add
jns
nop
sahf
test
push
pusha
dec
lcall
iret
jnp
cli
iret
pop
sub
sar
stos
and
cmp
lea
inc
into
outsl
push
lea
scas
sbb
xor
or
cmpsl
daa
sarb
aas
add
fadd
cmpsl
aad
popf
jnp
insl
arpl
dec
ss
lea
or
out
ds
lods
inc
and
add
leave
adc
pop
popa
popa
xchg
call
jbe
xchg
es
popa
or
test
xchg
daa
jo
push
xchg
mov
shlb
adc
xor
xchg
mov
fdivp
lcall
sub
test
mov
xor
aaa
mov
pop
mov
pop
push
cmp
lcall
pop
sub
sti
cmpsl
fucomi
das
pop
jg
gs
lcall
les
in
test
stc
sbb
lock
cmp
repz
pop
mov
cli
or
jg
mov
cwtl
xor
jp
lret
push
arpl
outsb
inc
lcall
and
inc
fnstenv
mov
in
cs
clc
loop
test
push
cli
in
inc
and
pop
out
je
pop
mulb
xchg
sbb
xchg
shrl
fisttps
scas
xor
and
repnz
jge
sbbb
jns
push
or
mov
mov
sub
push
sbb
enter
and
and
scas
or
cmc
stos
test
pop
int3
cmp
test
xchg
rorl
sarl
xchg
cmpsl
jl
xchg
xorl
loop
xchg
or
enter
cmpsl
xchg
fsub
xor
int3
and
inc
fstpt
inc
fdiv
cmc
and
call
rorb
xchg
lea
push
flds
jmp
push
lds
icebp
sub
dec
dec
sub
sbb
sub
jecxz
add
or
dec
call
inc
mov
mov
pop
sahf
and
mov
pop
mov
rclb
out
jae
ljmp
decl
cmp
jbe
sub
dec
jne
mov
push
scas
lret
orl
push
aaa
bound
push
pop
scas
sbb
es
cmp
inc
xchg
xchg
mov
cmp
out
test
in
or
outsb
inc
mov
test
cwtl
mov
push
popa
aad
lods
mov
adc
xchg
mov
mov
out
mov
mov
cmp
int
je
popf
lods
mov
loop
insb
je
testl
shll
sbb
insl
test
cmp
int3
shlb
add
sub
stos
push
ficompl
cltd
sbb
adc
cmp
dec
jmp
sbb
jle
data16
scas
into
and
lret
dec
sbb
jns
pop
sub
mov
outsl
nop
cmpsb
mov
rcrb
add
ret
stos
arpl
roll
jecxz
insl
scas
test
sbb
adc
xlat
dec
dec
and
loopne
or
aam
mov
ss
mov
imul
popa
mov
sub
sub
mov
cmp
fcom
pop
add
std
push
push
jecxz
xor
jne
mull
sbb
out
push
adc
mov
jmp
xor
test
je
mov
popf
fsubr
jge
dec
mov
sbb
push
imul
in
rcll
in
out
sbb
scas
adc
mov
lret
icebp
outsl
sbb
dec
shl
imulb
adcl
cltd
sbb
cmpl
sub
mov
insl
sbb
shrd
xlat
xor
mov
or
adc
or
jge
cmp
hlt
xchg
cli
cli
fwait
jo
push
cmp
mov
in
ja
int3
and
add
add
lret
cmp
pop
push
and
das
jo
je
jmp
dec
push
sbb
or
add
add
pop
cmp
cmp
cmp
and
test
in
sbb
push
and
repnz
cmp
and
xchg
jp
lret
imul
idivl
cli
loop
dec
dec
js
pop
and
leave
fildl
dec
jne
mov
dec
push
out
gs
mov
inc
dec
xor
sbb
push
outsb
enter
stos
cmpsb
mov
scas
fisttps
sbb
pop
xor
mov
in
and
repnz
mov
jno
push
sub
mov
in
aas
cmp
pop
push
mov
data16
repz
and
mov
fnstsw
popa
mov
xchg
xchg
nop
popf
cmp
push
sub
push
fidivrs
and
or
es
push
out
adc
test
pusha
stos
add
fstpl
mov
fwait
jnp
rcrl
or
xor
jmp
cmp
inc
pop
orl
inc
mov
dec
add
lods
imul
movsl
xor
icebp
iret
add
sub
jp
jns
cmp
xor
dec
mov
sbb
rcll
out
ja
pop
fimull
mov
jbe
ja
cmp
pusha
fucompp
sahf
mov
add
stc
cmp
sbb
inc
pop
imull
repnz
push
fiadds
pop
push
pusha
xor
inc
bound
sub
mov
js
inc
aaa
les
mov
lahf
loope
stos
cmp
push
idivl
inc
es
shlb
mov
or
xchg
pop
ljmp
cld
clc
enter
shl
xor
push
aad
int3
jb
jnp,pn
movsb
jno
aad
test
push
jne
test
pop
jecxz
out
adc
shlb
psubusb
addl
in
repz
rcrb
ret
jle
push
jmp
loope
cs
xchg
movsl
inc
cmc
pop
adc
xchg
fisttpll
and
xchg
mov
or
mov
enter
sub
cmp
into
fildll
lock
inc
inc
stos
iret
pop
or
jg
sar
inc
sub
push
popf
jecxz
inc
xor
loop
add
scas
fidivl
mov
mov
xchg
xchg
popa
adcb
dec
imul
xchg
jbe
stc
mov
sahf
dec
adc
cld
pop
jno
call
lock
jo
inc
mov
lahf
into
aas
adc
fwait
sub
cmpsl
add
imul
test
arpl
or
push
test
fwait
or
mov
sahf
and
pop
xor
jbe
dec
mov
aas
nop
push
xchg
dec
xchg
sub
or
ret
push
mov
pop
jp
sub
jno
mov
and
mov
fstpl
scas
jg
pop
adc
stc
out
aaa
pop
dec
xchg
shlb
mov
jl
push
test
lahf
jg
jmp
in
mov
out
jmp
cli
push
push
mov
xchg
jns
movsl
lret
bound
xchg
fisubrl
repz
ljmp
adc
ret
outsb
and
push
inc
addr16
call
cmp
xor
mov
inc
lahf
loop
cmp
mov
sbb
or
scas
imul
adc
in
int3
adc
fimull
hlt
iret
add
pop
sub
adc
pop
aad
push
out
scas
cmp
sub
mov
push
dec
add
adc
es
add
adc
lret
dec
movsl
shrl
outsl
aad
push
xchg
int
dec
lret
je
insl
adc
xchg
jecxz
lods
out
push
mov
test
adc
and
mov
fidivrs
notb
iret
fnsave
int
ds
sbb
sbb
ret
ljmp
dec
mov
adc
push
mov
lret
insb
les
lret
in
mull
lret
div
test
xchg
inc
in
sbb
loopne
cld
fisubrs
cmpsl
rcrl
call
sub
push
push
jle
es
jnp
inc
popa
out
out
and
fnstcw
addl
fmul
cli
jmp
lahf
and
mov
mov
ss
out
xchg
imul
push
sbb
sbb
and
pop
mov
jbe
ret
adc
xchg
repnz
cli
into
scas
test
pop
push
andb
xor
dec
aas
icebp
lods
imul
cmp
aas
out
inc
daa
clc
mov
add
inc
mov
pop
push
mov
jnp
mov
icebp
ss
jp
or
jae
lods
xor
jmp
dec
inc
add
vpsrad
movsb
fisttps
jl
nop
mov
cwtl
adc
imul
adc
ds
out
jl
fcomps
xchg
jne
int
paddb
or
xor
or
popf
or
xchg
fiadds
leave
subl
cmp
pop
inc
testl
and
mov
push
sub
dec
push
adc
mov
xchg
inc
popf
inc
mov
in
inc
pusha
jb
xor
and
daa
sbb
push
mov
mov
lret
sbb
mov
sub
lcall
or
int
mov
dec
inc
pop
pop
in
test
ret
aad
sbb
bound
subl
jnp
sbb
cmp
stos
cmp
inc
dec
or
hlt
fisubrl
ret
inc
into
mov
insl
out
out
sub
or
or
xlat
test
jo
xchg
js
sub
jg
jno
fadds
mov
push
hlt
fsubp
jnp
inc
push
ljmp
imul
imul
sub
stos
fldenv
mov
inc
fidivrl
dec
cmp
shlb
int3
xchg
js
filds
jl
mov
xchg
repz
jp
xor
cs
ss
mov
jecxz
sbb
rcrl
outsl
insl
insl
mov
test
shl
pop
and
xor
cmp
jne
shl
inc
inc
jne
pop
ss
sub
push
pop
add
cmp
xchg
mov
mov
insl
xor
or
sub
cmp
mov
mov
and
cmpsl
mov
pop
sub
es
xchg
jo
xchg
and
test
test
iret
icebp
out
cmp
stos
jmp
jge
movl
imul
xchg
pop
mov
or
adc
cmp
jp
sarl
loope
pop
outsb
test
bound
dec
loopne
jge
push
pop
jmp
dec
cmpsb
pop
ret
jo
insl
popl
into
mov
or
dec
daa
jge
ljmp
mov
push
push
cmp
movsl
clc
loop
adc
dec
icebp
and
mov
out
rcl
movsb
sarb
cwtl
or
test
jp
ljmp
cmp
ds
test
ljmp
and
pop
mov
sub
scas
aad
push
jmp
jge
es
daa
cld
scas
sub
clc
scas
push
test
fwait
xchg
xchg
imul
adc
fistpll
out
sbb
leave
add
push
jne
lcall
scas
std
inc
out
mov
ja
sahf
cmp
adc
and
lock
push
xchg
pop
into
xchg
xchg
pushf
and
xor
movsl
mov
lods
dec
jl
dec
ret
add
out
push
flds
cmp
call
inc
adc
sbb
fsubrs
sti
add
popf
cmp
mov
cmp
push
mov
mov
roll
sub
push
mov
and
loop
inc
cmpsl
inc
xchg
ja
cmp
pushf
and
and
movsb
xor
pushf
and
sub
les
or
cmpb
adc
repnz
push
xor
sbb
and
pop
cld
out
mov
das
lea
xchg
mov
mov
jnp
xchg
adc
xor
sbbl
cmp
adc
gs
stos
mov
mov
jp
xor
sbb
inc
into
inc
cmp
push
mov
shrb
repz
dec
test
sbb
outsb
jl
jno
das
inc
pop
jg
int
out
icebp
aas
dec
mov
add
or
mov
dec
iret
cmpsl
notb
popa
and
mov
call
adc
pop
addr16
add
mov
popa
push
cltd
in
mov
scas
jp
xor
movsb
mov
adc
inc
mov
adc
xchg
cmp
push
out
call
push
mov
loope
mov
fwait
xchg
mov
xchg
inc
stc
pop
adc
leave
mov
fdivs
paddb
pop
sub
dec
jg
jne
movsl
repz
cld
out
mov
clc
loopne
call
sbb
out
aas
arpl
leave
mov
push
rcrb
or
jo
out
jecxz
loopne
nop
leave
adc
pop
or
bound
sbb
cmp
xor
mov
enter
sub
in
sub
lds
js
xchg
mov
jl
cld
cltd
push
jae
cmpsb
in
xor
pop
scas
rcrb
repz
push
mov
pop
mov
sub
int
xor
xor
and
push
ds
and
stc
adc
add
jno
push
bound
xchg
jl
aam
aam
and
and
mov
adc
add
mov
nop
call
daa
rcl
dec
repz
je
stos
and
js
xchg
ret
fwait
test
xchg
jge
push
leave
pop
jo
and
jns
mov
jo
cmp
inc
popf
loop
cld
xor
inc
and
cmpsb
data16
ja
xchg
jp
scas
in
sub
je
or
data16
inc
lret
roll
leave
pop
jae
sbb
xlat
push
jle
inc
cmp
pusha
dec
inc
xchg
or
inc
dec
je
sub
repz
std
or
gs
mov
adc
xchg
shlb
fwait
mov
mov
and
xchg
lret
imulb
sbb
xchg
sub
pop
fistpll
sarb
jo
shll
xchg
dec
xor
cmpsl
shrb
push
lea
in
in
mov
mov
test
cmpsb
sub
dec
mov
ds
xchg
in
ja
jecxz
mov
and
in
stos
imul
inc
pop
in
imul
icebp
jge
in
mov
jo
fistpll
or
ret
push
fxtract
hlt
xchg
add
cld
aas
movsb
mov
ss
pop
cmp
iret
incl
jmp
orb
dec
jnp
insb
fcompl
mov
and
push
mov
lret
pextrw
ror
sub
push
scas
xor
fiadds
xchg
notb
jns
loopne
add
daa
fisttpll
sti
shlb
add
mov
xchg
or
stc
mov
aaa
test
adc
sarb
pop
rcr
js
scas
jecxz
fldenv
mov
push
adc
jnp
stos
jmp
xor
mov
divb
pushf
imul
xchg
movsl
and
add
push
sbb
loop
push
cmp
aad
sub
jo
out
call
lds
mov
aas
push
xchg
cmp
cmc
dec
cltd
mov
gs
andl
imul
mov
call
xorl
popa
mov
fstpl
shlb
dec
lds
cmpsl
out
or
xchg
and
add
cmp
xor
jnp
inc
pusha
jns
out
int3
xor
or
iret
dec
push
xchg
lcall
jp
cmpsl
mov
dec
addr16
add
dec
movsl
sbb
jmp
xor
andb
xchg
dec
mov
pop
push
sbb
shr
out
push
out
loopne
add
xchg
mov
shrl
push
lahf
pop
mov
lcall
movb
or
and
pop
mov
incb
into
adc
rclb
cld
daa
push
sub
jo
sbb
adc
pop
or
xchg
dec
les
add
popl
test
xorb
mov
jbe
repnz
fistps
loope
mov
repz
pop
sub
dec
push
fcmovbe
mov
out
mov
mov
pop
jmp
inc
inc
sahf
je
roll
aam
cmp
arpl
sbb
and
and
out
and
dec
fcmovbe
mov
sub
mov
pop
mov
ret
sub
lahf
loope
mov
aam
adc
addl
pop
ja
lcall
loopne
movsl
in
loope
sub
daa
cmpsl
mov
push
xor
outsl
and
pop
scas
adc
arpl
mov
push
lods
jbe
dec
fbld
outsl
fadds
sub
mov
xchg
iret
stos
sbb
mov
out
push
stc
mov
call
fsubrs
in
ret
mov
mov
cmp
lods
rorl
lcall
or
and
mov
add
les
jno
shrb
imul
mov
test
test
jge
mov
hlt
dec
pop
imul
mov
xor
push
dec
mov
aad
add
pop
push
jo
adcl
sbb
push
or
out
in
jne
adc
leave
shll
gs
xchg
jns
lea
fldcw
mov
dec
sbb
xchg
inc
sbb
mov
ret
push
push
adc
push
std
adc
cwtl
sbb
xchg
xlat
sub
pop
dec
dec
push
add
sti
cli
iret
jno
mov
push
mov
lock
add
xchg
repz
cmpsl
xor
daa
push
stos
mov
stos
movsl
loope
cmp
cmp
mov
cmp
xchg
mov
adc
sbb
jmp
mov
mov
lahf
xchg
jae
mov
imul
xchg
leave
int
mov
scas
clc
mov
outsb
jns
jmp
repnz
mov
andl
push
adc
sub
test
outsl
mov
sbbl
jbe
sbb
adc
or
sbb
xchg
add
mov
mov
mov
or
in
push
mov
xchg
sbb
lahf
push
push
pushf
sbb
jge
xchg
out
fsubl
mov
add
xchg
test
lods
movsb
dec
es
addr16
ret
jo
lcall
jl
fucomip
xchg
insb
push
xor
fdivr
shll
lahf
sub
loopne
clc
mov
cs
xor
mov
adc
movsb
jecxz
insl
test
les
push
pop
jae
xchg
cmp
and
jae
fidivrs
inc
sbb
daa
mov
jae
xchg
popf
mov
sub
cmp
or
sub
inc
in
add
dec
adc
out
stc
pop
in
add
or
mov
outsl
add
xchg
lods
fmull
or
mov
ljmp
orl
mov
jnp
outsl
pop
xchg
add
fwait
or
jne
subb
cmpsb
and
cltd
cmp
rcll
xor
mov
push
inc
or
cmpsl
adc
lret
idiv
mov
push
dec
and
iret
push
add
xlat
lock
cltd
dec
mov
icebp
mov
rorl
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
pop
add
cmp
push
sbb
mov
mov
lret
loope
rcrl
and
mov
mov
aad
in
cmc
and
push
dec
jle
outsb
and
push
outsl
jp
jae
mov
into
fsubrp
stos
fwait
mov
scas
pop
jle
dec
jle
outsb
cs
ds
push
ds
add
neg
out
scas
mov
mov
clc
decb
ds
and
sbb
ficoms
pushf
mov
loop
stc
int3
in
lret
pop
sub
jnp
or
std
xor
mov
sti
or
scas
in
pop
sub
jle
roll
and
xor
add
rorl
xor
outsb
pop
dec
daa
ficomps
jp
es
filds
fidivs
jmp
adc
xor
push
imul
jp
outsb
das
or
paddd
sti
pop
lods
fiadds
and
and
popa
shr
mov
xchg
shrl
push
shrb
std
scas
cltd
xor
fstpl
pop
hlt
mov
and
mov
sti
mov
mov
das
push
lea
sahf
iret
sub
test
idivb
les
jle
dec
or
outsb
cs
jp
push
cmpsb
mov
push
cld
rcl
mov
cli
pushf
sbb
or
or
xor
inc
mov
jg
popf
mov
fnop
loope
lret
outsb
sbb
or
or
pop
pop
bound
sbb
stos
lods
mov
fst
fisttpl
sbb
dec
scas
adc
add
ds
push
ds
cs
fdivrp
into
into
fsubrp
scas
sahf
mov
scas
outsb
pop
jle
dec
jle
outsb
cs
ds
push
ds
cs
fdivrp
into
into
fsubrp
scas
sahf
mov
scas
outsb
pop
mov
andb
pop
outsb
xchg
jp
lods
xchg
dec
mov
outsl
add
js
xor
and
xchg
fs
push
lret
jmp
fidivrs
xchg
popf
pop
lret
je
ret
ljmp
lods
mov
or
repnz
sbb
addr16
inc
insl
pop
jb
popf
cmp
aam
stos
cmp
pop
ss
lods
jmp
fmul
je
andb
subb
lods
push
loopne
and
fcomp
mov
roll
test
mov
cmp
xchg
cmp
and
outsl
inc
jne
hlt
test
pop
cmp
pminsw
xor
add
aam
xchg
adc
aaa
out
aaa
movsb
adcl
aad
mov
ljmp
push
test
jl
sbb
or
adc
dec
inc
xchg
mov
sub
or
jg
pop
movsb
mov
or
test
mov
cmp
pop
add
push
pop
popf
sbb
mov
dec
iret
dec
test
fnsave
sub
inc
lret
adc
push
aam
fisubrl
test
push
cmp
dec
and
imulb
fisubrs
xor
insb
push
aad
bound
lcall
pop
xchg
cmc
ja
xor
call
ret
ss
icebp
sbb
mov
add
mov
sarb
rcl
loopne
jg
adc
cmpsb
pop
mov
pop
bnd
pop
inc
add
pop
push
mov
xchg
xchg
ds
push
inc
push
jne
pop
add
xor
xor
xchg
cmp
mov
push
cmp
ja
mov
dec
pusha
lods
inc
pop
or
fisttpll
pop
call
inc
cmp
mov
arpl
out
jp
xchg
xchg
push
mov
or
mov
xorl
mov
loope
data16
push
mov
icebp
lcall
repnz
push
add
cmpsb
jmp
cmp
xchg
or
imul
pop
mov
ss
lcall
xchg
cwtl
mov
lods
insb
test
and
fildl
jnp
push
fbld
dec
mov
pop
mov
xor
adc
jecxz
sub
jmp
fdivr
dec
and
inc
sbb
inc
mov
sahf
fstps
iret
ljmp
or
and
call
inc
out
cmp
or
lret
stos
pop
xor
sahf
cmp
testl
and
dec
add
fsubrl
in
lahf
push
dec
cmc
xchg
fbld
scas
out
cmp
dec
mov
lock
mov
and
xor
push
fists
xlat
mov
jnp
daa
loopne
scas
imul
adc
cmp
pop
xchg
std
adc
adc
sub
add
loop
sbb
push
ret
aaa
insb
in
lret
add
adc
or
jo
ljmp
sub
lahf
xchg
mov
add
cmp
or
cmpsb
in
xchg
xchg
test
xor
push
pop
adc
xchg
out
xlat
int3
imull
sub
sub
pop
das
and
adc
and
iret
ret
aam
pop
adc
pop
cmpsl
das
inc
in
xchg
aaa
mov
ret
adc
sbbb
mov
test
ret
repnz
loope
idivl
iret
outsl
lods
xor
fwait
adc
jmp
lcall
sub
add
push
xchg
fwait
shr
sbb
push
lret
xchg
pop
pop
aam
aam
cmp
cmp
add
push
loope
push
mov
pop
daa
bound
mov
inc
lods
xchg
cltd
mov
jmp
lods
fcomps
mov
outsb
inc
cwtl
gs
test
push
mov
xchg
paddw
stc
sub
cltd
ljmp
sarl
test
arpl
rorl
aad
cld
jb
bound
movsb
pop
call
cmpsb
push
addr16
push
and
icebp
fdivl
into
sub
xchg
adc
mov
hlt
and
adc
mov
das
pop
xchg
lret
enter
pop
int3
xor
ljmp
mov
mov
loop
pop
mov
cmc
xor
test
fnstenv
std
cmp
cmp
ret
mov
mov
push
jb
xor
sub
mov
fsubs
mov
adc
rcrl
incb
inc
jb
test
loope
int3
xchg
pop
sbb
mov
jl
push
fwait
push
nop
mov
sti
popf
adcl
inc
sub
test
fisubl
outsb
mov
fildl
xchg
inc
test
pop
outsb
mov
filds
push
leave
movsl
dec
in
cwtl
jg
adc
xchg
sti
mov
mov
daa
cs
ret
ds
cltd
inc
scas
jns
lds
mov
pop
jns
in
call
sbb
jp
mov
popf
lds
in
je
sub
xchg
or
in
pop
mov
add
pop
mov
pop
sbb
das
cmp
repnz
icebp
popf
adc
sbb
inc
es
mov
xor
xlat
je
jno
sti
and
mov
mov
out
stos
clc
adcb
and
int3
idivb
sub
dec
arpl
rol
inc
pop
add
mov
lcall
jmp
sub
xor
aad
ret
xor
ds
push
push
pop
stc
adc
jp
cmp
mov
fildll
xchg
into
in
xchg
popa
cs
sub
sbb
int
inc
in
jae
sbb
sub
or
mov
xchg
lods
dec
xchg
xor
xor
outsb
xor
add
ss
cwtl
mov
pop
fwait
gs
and
xchg
sti
lods
aad
adc
push
sub
adc
popf
jbe
mov
popa
pop
mov
xor
or
xor
pusha
sahf
ds
jno
push
fldcw
mov
mov
mov
test
pop
and
add
push
movsb
lahf
xor
jl
cmp
imul
mov
aas
lcall
xchg
in
sbb
push
movsl
inc
mov
xchg
aas
xor
add
add
dec
jns
pusha
movsl
or
add
adc
pxor
inc
add
outsl
mov
daa
std
xchg
cmpsb
xor
loope
push
popf
mov
cmp
add
in
jmp
dec
clc
fs
sub
mov
pop
xchg
or
test
mov
add
jae
out
rcll
dec
xorl
out
enter
mov
push
inc
jp
push
jns
push
push
cmc
std
fs
fcoms
dec
mov
jno
aas
ljmp
xlat
shrb
add
insl
dec
dec
scas
lcall
inc
mov
xor
das
inc
test
jge
fstpl
push
lret
iret
nop
sbb
sbb
out
mov
loopne
lock
in
jb
inc
std
sbb
mov
aam
pop
push
push
mov
das
js
shl
jp
xchg
fcoms
shll
adc
push
test
pop
sbb
shlb
mov
sub
lods
pusha
arpl
data16
gs
xchg
add
push
rcrb
popf
in
xchg
lcall
add
sbb
dec
das
int3
xlat
push
in
addb
jnp
movsb
mov
jns
adcl
dec
jecxz,pn
popa
push
inc
mov
adc
add
sub
in
cmpsb
daa
ds
jg
call
loop
add
dec
push
or
xchg
jmp
push
xor
cmp
jbe
sub
mov
mov
fldl
push
fcom
adc
inc
rcrb
jl
movsb
lods
lahf
xchg
sbb
in
andl
lods
inc
cld
add
sbb
or
mov
mov
sbb
mov
fldenv
insb
ss
cmp
dec
push
repz
aaa
inc
sub
sbb
divb
adc
idivl
sub
adc
iret
mov
sarl
xchg
sbb
in
mov
dec
scas
arpl
hlt
mov
popf
add
sbb
aaa
je
mov
fstpl
dec
mov
inc
mov
into
loop
aam
insl
in
mov
lods
fdivrs
addr16
test
fidivrs
arpl
pop
enter
cmp
fisubl
mov
push
decl
add
stos
mov
add
push
aam
outsb
cmp
dec
add
jo
push
out
mov
popf
push
hlt
andb
push
jge
push
dec
loopne
je
dec
mov
lock
jmp
int
pop
shll
test
push
decl
mov
pop
push
inc
and
in
sahf
inc
pop
cld
rcr
outsb
cmp
sar
cmpsb
jg
fldenv
adc
test
jmp
jns
popf
xor
xor
jbe
and
cmpsb
and
xchg
das
sbb
and
fstl
cltd
imulb
mov
gs
icebp
fldenv
decb
pop
inc
mov
or
sti
inc
popa
adc
dec
int3
inc
or
stos
push
int3
data16
aas
mov
fdivp
mov
add
orb
mov
scas
rolb
mov
mov
dec
or
mov
outsb
into
jle
divl
mov
push
div
les
out
jg
aam
icebp
pop
jge
adc
das
cs
nop
xchg
mov
cmp
xor
negl
and
sbb
dec
dec
insl
inc
fsubrs
push
or
and
pop
mov
mov
push
push
test
xor
repnz
inc
js
mov
repnz
loopne
mov
mov
arpl
or
clc
fstp
pop
call
cmpsb
xor
mov
mov
lret
dec
lret
fisttpl
ret
push
push
push
adc
push
aad
adc
loopne
dec
add
dec
in
loopne
adc
out
movb
push
mov
add
pop
or
dec
lods
add
and
addr16
jecxz
push
sbb
sti
pop
sbb
mov
ljmp
mov
cmp
add
cmc
cs
or
mov
xor
sub
mov
inc
mov
incl
jle
sti
mov
es
icebp
repz
rcrl
test
lcall
mov
xchg
mov
push
lsl
pop
leave
cmp
inc
inc
or
ror
flds
fimull
inc
fildl
jg
push
mov
fsubr
in
dec
stos
loope
fistl
inc
sar
jg
je
movsb
fadd
jbe
xlat
mov
jle
dec
jo
cmpsb
add
cwtl
pushf
sub
test
xchg
dec
fcomps
dec
or
test
add
push
scas
push
popa
lahf
mov
cli
scas
xlat
inc
mov
mov
pushl
shlb
jbe
lahf
call
hlt
pop
fs
or
jo
fucomip
aas
add
out
adc
cmc
lret
mov
out
push
js
cmp
and
in
pop
sti
pushf
in
push
shlb
jnp
and
pop
std
ljmp
mov
into
and
sub
ror
push
sbb
cmp
orl
add
xchg
xor
add
jmp
shrl
rcrl
cld
mov
lds
lahf
stos
repz
fdiv
inc
enter
xchg
in
ja
test
adc
xchg
test
add
iret
add
sbb
aaa
jmp
add
or
loope
stc
push
imul
jl
mov
dec
mov
dec
fcmovbe
movsb
je
jo
rcrb
int3
lds
pop
xor
pop
xor
fs
jl
fwait
hlt
lods
jg
adc
cld
xor
sbb
loop
ljmp
jecxz
fwait
lret
mov
sahf
inc
push
loop
cwtl
xchg
aas
jns
and
lret
adcb
sbb
loop
imul
dec
and
sar
pop
jne
das
pusha
je
lods
mov
adc
cld
in
mov
lds
pop
and
push
jge
sahf
frstor
bound
jns
ret
xor
loopne
xchg
add
imul
dec
or
jnp
or
xchg
repz
inc
sub
push
xchg
pop
xchg
ret
ja
jmp
mov
into
dec
jp
push
mov
cmp
fcmove
int3
inc
mov
lds
cmp
loope
test
push
fdivl
mov
xor
pop
jnp
mov
aam
gs
popf
xchg
inc
rcll
inc
lods
insb
sbb
vpslld
fnstsw
xchg
inc
inc
sub
cmpsb
int
push
jl
mov
add
fstpl
sub
pop
jns
gs
out
mov
xchg
and
je
pop
pop
popa
sahf
pop
pop
shlb
xchg
adc
pop
std
fisttps
lret
pop
popa
sub
jge
inc
call
iret
inc
push
int3
push
bound
push
dec
arpl
pop
shrl
fwait
sar
stc
or
mov
sahf
int3
inc
mov
insl
idivl
loope
cmc
dec
jbe,pn
fsub
lret
test
xor
xlat
inc
push
push
push
cmp
mov
push
les
cmp
and
shrb
xor
mov
test
pop
aad
popa
jge
mov
idivl
testb
inc
sahf
shrl
and
sub
into
jge
rcll
inc
add
lret
push
popa
repnz
iret
gs
movsl
mov
shll
lock
jnp
data16
sub
pop
sti
push
cltd
out
cmovbe
lods
inc
enter
cmpsb
loopne
jge
test
xor
sbb
inc
xchg
sub
into
dec
mov
cltd
in
adc
push
adcb
scas
repz
nop
jle
inc
imul
dec
and
les
jmp
xchg
adc
sbb
mov
add
lret
mov
loope
pop
pop
xlat
jge
sub
scas
mov
inc
mov
sahf
je
rolb
dec
dec
add
add
mov
sub
lahf
stc
xor
xor
xchg
ficompl
mov
and
push
orl
into
dec
leave
ficomps
xor
cwtl
test
lods
in
and
mov
and
pop
jge
xor
pusha
jns
int
mov
pop
dec
dec
adc
pop
test
icebp
sarb
insb
vmovdqu
pop
inc
mov
faddl
int3
adc
lods
mov
iret
test
aaa
add
xchg
or
add
pop
mov
lea
jbe
inc
movsb
ret
push
add
pop
mov
add
push
and
sahf
jbe
mov
and
andl
stos
mov
jg
jnp
icebp
dec
and
xor
and
adc
fisubl
in
sub
out
jmp
jmp
loop
add
sub
shl
jb
cwtl
sub
loopne
xor
jg
scas
cmp
inc
push
push
call
out
in
mov
data16
lret
inc
outsl
rorl
pop
xor
out
mov
xchg
dec
aaa
fstpl
daa
mov
cmp
adc
jg
int3
cmpsb
add
mov
repz
inc
fcoml
int3
xor
in
int
push
add
call
addr16
aaa
push
push
mov
jnp
xchg
cmp
and
int
test
push
inc
out
fsts
scas
aam
movsl
cmp
dec
push
cmpsl
jmp
in
fisttpll
jl
sub
jbe
mov
lahf
out
out
jp
sub
inc
jecxz
jns
daa
pop
subl
rcl
jge
jecxz
pop
lsl
loop
adc
or
sbb
sti
cmp
pop
lret
mov
push
jle
pushf
int
push
jg
lods
and
and
jle
sub
lods
and
mov
repnz
iret
pushf
xor
in
fdivs
lods
cmp
sbb
outsl
js
out
adcl
sbb
sub
sbb
outsb
dec
dec
mov
mulb
repz
mov
mov
lea
fdivrl
push
or
fldt
lret
gs
sbb
das
push
icebp
stc
push
sub
roll
stos
mov
push
aad
sbbl
mov
int3
cmp
adc
cmp
repnz
in
test
clc
mov
sub
pop
test
cmp
inc
xor
mov
sbb
nop
sub
lock
mov
xor
js
sahf
xchg
xchg
test
pop
je
lods
mov
es
int
lock
js
add
jae
ret
jmp
popf
and
cmp
jp
jns
mov
mov
push
dec
rcll
cld
lahf
or
pop
imul
jmp
in
jbe
negb
xor
dec
shlb
xchg
dec
pop
in
iret
add
add
movsb
inc
dec
mov
shlb
jnp
or
inc
fldcw
mov
cmp
mov
cs
or
fstps
xchg
xlat
adc
rcll
mul
xor
xchg
jnp
outsb
jp
aaa
in
xchg
cmp
sub
jbe
xchg
repz
iret
adc
and
flds
fsubrl
jo
iret
xchg
mov
shr
xchg
mov
pop
pop
cmp
adc
or
addl
xchg
fwait
inc
and
aad
cmp
pop
sub
and
push
cld
pop
sub
sbb
sub
call
push
js
lock
adc
cmp
sbb
xor
sbb
add
imul
cli
mov
sub
sbb
fldcw
adc
ljmp
jmp
xchg
inc
notb
clc
nop
jo
lahf
fimull
pop
mov
push
fisubrs
out
cmp
std
int3
cmp
inc
xlat
cld
add
mov
pop
push
imul
dec
sti
fidivrs
fldcw
xchg
add
sub
nop
rcr
icebp
orb
inc
movsb
outsb
adc
js
lods
enter
and
idivb
sub
ret
inc
pushf
lods
lock
fcompp
adc
hlt
popa
push
adc
and
jne
mov
and
shrl
test
mov
mov
cmp
insb
ss
into
push
cltd
jbe
sarb
mull
int3
add
dec
shl
rdmsr
sbb
mov
mov
bound
xchg
pop
ss
ss
cwtl
jno
popa
or
mov
nop
ret
xchg
lret
jecxz
cwtl
jne
dec
jne
shr
ds
arpl
mov
hlt
inc
cmpsb
pop
das
sbb
lahf
fwait
and
cmpsl
lods
imulb
mov
add
movb
bound
dec
xchg
mov
xor
in
lods
or
push
sbb
and
andl
jl
sbb
jo
arpl
clc
mov
les
xor
inc
push
cmp
sbb
jno
push
mov
mov
int3
outsl
stos
int3
pop
add
cld
lods
shufps
hlt
xlat
lock
bound
cmp
mulps
cld
jmp
cmp
loopne
data16
loopne
xlat
mov
andl
lea
jb
push
imul
pop
inc
xchg
push
mov
pushf
jb
and
cmp
pop
xor
sub
cmpsb
push
push
aas
imulb
fnstsw
popa
loope
jmp
sbb
ljmp
add
stos
js
jmp
push
testl
imul
cmp
mov
imul
sbb
stos
std
push
inc
roll
mov
sub
loope
repz
loope
mov
lds
aad
cmp
repz
xor
push
add
adc
pop
xor
enter
xor
adc
xor
xor
daa
jmp
lds
add
ja
sub
fwait
sahf
test
push
shll
pop
xor
sbb
jne
cmpsl
sbb
ror
inc
jg
mov
mov
push
insb
out
inc
mov
sub
fdivr
push
sbb
insl
out
or
test
mull
shll
rcrb
scas
cwtl
mov
add
out
push
xlat
push
jbe
rclb
arpl
dec
jo
jae
mov
dec
cwtl
mov
lea
sbb
add
cmp
ret
lea
or
xchg
adcl
pop
mov
cmpsl
jns
mov
adc
idivl
dec
cwtl
or
cs
leave
aam
bound
lods
pushf
hlt
into
repz
xchg
shll
je
outsb
pop
push
ja
fwait
cmp
lahf
clc
addr16
pop
negl
std
xor
mov
out
lret
test
push
push
loope
mov
out
mov
dec
sub
loopne
xchg
ja
nop
outsb
sbb
jno
fisubrs
lods
into
loope
jbe
aam
sbb
cld
aad
mov
and
mov
lahf
xor
dec
inc
dec
lds
sarl
xchg
pushl
sbb
cmpsl
outsb
mov
push
out
jmp
xor
lret
push
mov
mov
sub
jnp
outsb
cs
ds
push
ds
cs
fdivrp
into
into
fsubrp
scas
sahf
mov
scas
outsb
pop
jle
dec
jle
outsb
cs
ds
push
ds
cs
fdivrp
into
into
fsubrp
scas
sahf
mov
scas
outsb
pop
jge
pop
pop
push
push
cmp
cmp
cs
out
lcall
jbe
push
stos
lcall
push
mov
add
ficomps
jno
popa
and
aaa
int
std
pop
in
addr16
jns
jmp
push
inc
xchg
outsl
out
testl
imul
in
addr16
ja
inc
mov
mov
out
xchg
insl
cmpsl
jle
ffree
cmp
in
hlt
jns
pop
xchg
pop
movsl
push
mov
mov
repnz
mov
xchg
imul
pop
mov
arpl
push
popf
and
test
fdivrs
cmp
rcl
lret
or
xchg
adc
divl
aaa
fisubl
add
insl
sbb
sub
and
jb
add
dec
leave
fs
icebp
fdivs
call
jmp
sti
lea
loop
sti
fstpl
in
push
cmpsb
or
imul
fsub
cmp
add
jno
in
fsubrl
cmp
insl
mov
cmp
stos
sub
cwtl
cmpsl
sahf
insb
mov
pop
mov
push
push
movsb
js
ret
jl
popa
fiaddl
in
pop
testl
inc
sub
je
add
xlat
dec
dec
mov
outsl
in
or
sbb
xor
push
shlb
repnz
cmp
push
int
lea
push
out
adc
shlb
sahf
outsl
cwtl
bound
pushf
pop
test
pushf
inc
cwtl
xor
ja
inc
mov
mov
xchg
insl
out
testl
pop
std
pop
in
addr16
ja
inc
mov
mov
xchg
insl
out
testl
test
lahf
call
into
lret
inc
es
mov
and
adc
in
pop
push
mov
mov
rcll
add
jl
dec
repz
mov
mov
push
cs
les
jmp
add
xchg
mov
mov
sub
outsb
or
es
pop
enter
and
adc
or
arpl
scas
mov
jl
aam
xchg
adc
aas
adc
and
mov
aaa
add
jnp
mov
into
and
adc
roll
and
shlb
push
dec
nop
xchg
std
sub
and
add
push
fdivs
pop
fs
push
inc
mov
pusha
aas
popa
andb
hlt
and
iret
call
xchg
mov
inc
inc
sbb
push
shr
testb
in
push
jecxz
xchg
or
sub
push
push
sub
popf
das
sbb
call
xchg
mov
sub
pop
xchg
popa
test
inc
notb
xchg
jno
pop
cli
inc
xorl
enter
cmp
push
inc
loopne
mov
stos
in
scas
dec
cmp
sbb
hlt
int
mov
arpl
scas
push
js
ljmp
pusha
inc
push
in
adc
mov
mov
or
repnz
test
dec
das
sti
or
push
push
dec
sub
lods
push
nop
mov
andl
push
out
mov
sbb
mov
loopne
sub
jno
mov
push
inc
dec
xor
ljmp
lret
leave
ljmp
mov
sbb
cmpsl
into
or
adc
push
inc
adc
xchg
lods
sub
icebp
fs
push
add
loop
jae
mov
cmpsb
sub
hlt
call
loop
push
lods
mov
push
mov
test
adc
adc
lock
jb
dec
mov
cwtl
jo
fs
cmc
pushf
aas
xlat
in
mov
sub
inc
mov
cmpsl
cmp
and
insb
aas
mov
ds
or
imul
jge
jl
lods
ljmp
test
or
int3
jns
movl
push
jecxz
jno
adc
fwait
push
test
mov
push
push
adc
adc
daa
mov
dec
ret
or
mov
les
out
shr
jle
lret
test
inc
dec
dec
int3
fdiv
outsl
data16
test
dec
jnp
lcall
aam
mov
dec
pop
pop
mov
xor
xchg
loop
subl
xchg
xchg
jb
xchg
xchg
cmp
adc
mov
inc
cwtl
mov
leave
xchg
mov
lret
out
imul
sbb
insl
jns
and
mov
in
mov
adc
rcr
out
mov
push
popf
cmpsl
loopne
push
sahf
ficoms
gs
enter
adc
out
movsb
test
hlt
imul
add
cld
pop
mov
mov
cmpsb
call
aad
pop
pusha
test
mov
mov
fstpl
adc
dec
push
pop
add
mov
add
push
push
ret
negl
xchg
clc
push
call
cli
rcrb
and
aam
xlat
sub
pop
or
xor
and
ds
cmpl
jo
icebp
adc
in
subl
insb
pop
xchg
sahf
dec
lret
cmp
cs
cmp
aaa
test
push
into
xchg
out
push
adc
sub
popa
fadds
call
mov
lcall
mov
popa
movsl
mov
enter
rcrb
je
adc
adc
jae
aam
mov
mov
mov
adc
xor
push
ret
push
push
emms
pop
mov
adc
ss
inc
push
pop
adc
lock
or
outsl
and
test
dec
mov
mov
sbb
dec
xchg
xchg
or
cmp
xchg
xchg
in
sub
mov
and
sbb
sub
les
iret
rcll
xor
xor
push
pop
jns
sbb
dec
mov
enter
pop
inc
data16
andl
scas
lods
inc
sahf
arpl
mov
cld
cli
cltd
loopw
and
push
adc
movb
loopne
fdiv
pop
jae
push
sbb
es
icebp
mov
incl
dec
loop
gs
mov
inc
pusha
scas
loope
rorl
fbstp
pushf
inc
dec
dec
add
mov
cmp
push
cmp
imul
xchg
jecxz
aad
lea
jle
dec
dec
imul
lret
push
jecxz
xchg
xor
lods
pop
dec
repz
addr16
repnz
call
sbb
out
and
pop
imul
insb
mov
jne
mov
mov
sub
jl
gs
ret
pop
mov
fldenv
imulb
pop
aaa
js
loope
push
xor
pop
add
xor
mov
ja
mulb
cmpsb
or
or
ljmp
pop
cmp
inc
mov
jns
pop
fsubl
dec
mov
cmp
mov
inc
lods
jmp
push
cmp
cmpb
aas
sbbl
xor
sbb
mov
xchg
cmp
add
hlt
jnp
mov
hlt
idivl
inc
gs
jne
pop
adc
or
mov
je
xchg
lock
ja
insl
test
mov
lea
out
mov
repnz
jo
sub
imull
fisubrs
mov
mov
xor
sub
mov
imul
jnp
outsl
and
dec
pop
push
out
out
dec
movsb
in
push
xchg
daa
cwtl
jbe
mov
pop
fadd
out
xor
lret
repz
fstps
sub
aaa
icebp
fcmovbe
xchg
dec
sbbb
dec
bound
jmp
lock
jbe
push
xor
adc
std
push
call
cli
daa
xchg
xchg
inc
dec
mov
sahf
jmp
cmpsl
mov
push
dec
or
in
mov
mov
cli
inc
and
in
mov
and
divb
scas
sbb
lret
sub
leave
in
xchg
cmp
inc
les
imul
or
imul
rcll
push
cmc
lea
add
pop
ficoml
mov
arpl
adc
mov
nop
dec
pop
inc
jns
push
adc
xchg
popa
inc
pop
mov
push
shll
push
stos
leave
xor
mov
lret
pop
pop
push
andb
jmp
aas
and
stc
ret
imul
add
popf
pop
push
mov
int
sti
roll
jnp
rcl
mov
xchg
lock
lock
jge
jp
xchg
jmp
mov
mov
lret
sarl
fidivrl
mov
adc
push
xlat
cmp
int3
dec
sar
adc
jg
outsb
pusha
cmp
rol
push
outsl
subl
pushf
mov
stos
fiaddl
lret
not
mov
cmp
dec
fs
xor
push
std
mov
cmp
or
mov
add
ljmp
pop
adc
xor
aam
jnp
cltd
xchg
dec
repnz
in
shlb
imul
mov
push
movl
xorl
aaa
mov
xchg
icebp
jp
in
shlb
mov
adc
setl
imul
dec
sbb
out
add
jmp
cmpsl
and
in
xlat
loopne
into
sbb
jecxz
mov
loop
lock
jp
mov
popa
cmp
xchg
shrb
jo
mov
inc
mov
filds
ss
cmp
sbb
cmp
scas
nop
test
test
jl
mov
lods
and
into
dec
shrb
test
out
xchg
movsl
clc
mov
loope
add
jg
inc
lcall
repz
or
sbb
jo
insl
loopne
out
or
pop
int3
loopne
cmpsl
nop
and
pop
ss
sbb
pop
test
cld
pusha
sub
mov
imul
sub
jl
jmp
sarl
push
push
inc
push
test
loopne
jmp
xchg
call
iret
shll
aaa
js
into
fnstsw
imul
push
xchg
or
push
fdivl
rol
sub
push
lahf
mov
sbb
daa
imul
ret
mov
rorl
mov
push
mov
inc
cmp
mov
cltd
adc
mov
in
imull
aam
mov
scas
lret
fists
in
rorb
mov
out
test
push
ret
insb
aas
lret
cwtl
test
clc
add
sar
ficoml
int
ss
adc
pop
mov
mov
xchg
sub
jb
sti
sar
jecxz
bound
mov
into
xor
add
hlt
xchg
push
and
dec
lret
std
in
popf
cmp
popa
jecxz
jl
or
sub
lret
jo
xor
imul
push
scas
jge
data16
cmp
daa
loop
bts
test
enter
stos
xorps
decb
lock
dec
add
pop
push
pop
movsb
xchg
jae
daa
lahf
xor
testl
mov
mov
jp
xchg
inc
in
sbb
nop
xor
inc
cmp
aad
dec
push
mov
dec
xchg
decl
popa
jmp
sbb
test
add
fdivrl
jae
loop
inc
into
jp
sbb
dec
int
jnp
stos
repz
stc
je
sbb
push
test
ljmp
fs
scas
pop
xchg
mov
lahf
adc
mov
cmp
cli
and
je
pop
xchg
popf
mov
sub
rclb
pop
adc
xchg
ret
xlat
fwait
mov
icebp
jle
push
loopnew
es
out
repnz
clc
pop
pusha
mov
lahf
push
stos
xchg
adc
mov
std
or
clc
arpl
decl
nop
jge
jb
sub
movsb
mov
fs
xor
pop
out
adcb
scas
insb
xor
jmp
popa
pushf
fs
jb
mov
lock
jle
sub
mov
xlat
insb
test
and
lods
cmp
add
jne
les
dec
mov
xchg
fcmove
jecxz
add
sbb
xor
push
xor
aas
addr16
pop
fs
xchg
ljmp
shl
add
push
xor
sbb
aaa
jl
dec
add
adc
movsl
cmpsl
sbb
fisttps
cmp
and
xchg
mov
adc
lahf
cmpsl
lahf
js
and
adc
nop
addb
xor
ficompl
xlat
sub
shrb
and
js
js
addr16
mov
fwait
loopne
push
or
push
push
fdivrl
mov
push
push
fstl
insb
or
lret
lock
pop
shrb
cmc
xorb
rorb
adc
dec
js
cmp
inc
lods
sbb
adc
xor
add
or
mov
popl
xchg
ljmp
stos
mov
shlb
or
jmp
mov
xlat
jns
pop
pop
shrl
nop
mov
pop
test
pop
pop
pushf
lret
mov
and
mov
data16
fsts
movsl
out
pop
cmpsb
filds
es
lcall
stc
cmpl
inc
pop
out
sub
jbe
and
and
int3
movb
jae
mov
fnstenv
out
shrb
mov
sub
es
push
jo
xchg
fimuls
filds
out
in
das
lds
fisttpll
sbb
cmp
rclb
mov
gs
mov
inc
mov
and
add
fistl
xor
xchg
nop
stos
cmp
cmpsl
xor
sbb
xchg
pop
or
mov
push
mov
inc
fucomip
xorl
cmp
in
pop
jbe
pop
and
imul
fdivrl
cmc
andl
daa
shl
adc
jecxz
sbb
adc
out
mov
arpl
and
inc
pop
adc
mov
hlt
add
xor
inc
fimuls
cmpb
xchg
xor
clc
xlat
rclb
dec
and
and
dec
jb
repz
xor
sbb
dec
adc
test
fmuls
push
jne
dec
push
lds
jle
mov
jle
pop
cmpsb
lret
test
stc
mov
or
add
insl
outsb
scas
imul
pop
dec
sbb
sub
pop
dec
xorl
adc
mov
xchg
mov
mov
sub
mov
or
stos
mov
dec
hlt
ja
sti
or
fadd
adc
orb
push
cwtl
icebp
iret
mov
or
cmp
jg
cmp
fcomip
add
adcb
or
mov
cmp
call
nop
push
mov
loop
add
and
pop
inc
ljmp
call
cmpsl
push
enter
decl
jb
in
push
adc
or
movsl
mov
outsb
jge
dec
fisttps
cmpb
push
and
in
popa
fcompl
cmp
sti
inc
xor
jno
dec
ja
dec
jb
push
adc
xchg
pop
xlat
inc
xor
pop
in
push
mov
and
adc
lret
pop
inc
out
fcmovnu
sbbb
pop
inc
jns
sahf
hlt
cs
sbb
mov
jge
push
lcall
or
lret
test
sarl
sbb
push
cmpsb
pop
xor
and
or
xchg
je
push
inc
pop
xor
pop
outsl
mov
lahf
jae
pop
xchg
mov
cmp
mov
cltd
outsl
xor
lods
loope
push
adc
cmp
sti
pop
scas
rolb
inc
and
call
scas
cmp
dec
cmpsb
lods
lock
cmp
dec
dec
call
sbb
imul
movsl
outsl
test
neg
sub
cmp
dec
mov
out
stos
cmpsb
sub
addl
cs
push
pop
scas
add
or
mov
call
adc
gs
xor
mov
mov
dec
mov
cmp
mov
popa
cmpsb
out
ret
sbb
testb
xchg
pop
or
scas
add
cmp
xor
jmp
mov
mov
adc
cmp
jae
mov
adc
xor
sbb
adc
cli
dec
jbe
jno
fdivrp
fstpl
sarl
sbb
xchg
sub
rorb
sbb
mov
sbbl
repz
jp
popa
inc
or
std
lds
imul
pop
stos
xchg
aaa
add
sahf
pop
lret
fprem
les
dec
pusha
pop
push
in
js
int3
mov
adc
xorl
sub
mov
cwtl
xchg
rcr
ja
lods
lahf
pop
xchg
jae
dec
adc
sbb
jae
loopne
repnz
inc
adc
sbb
gs
sbb
jecxz
pop
sub
sbb
jnp
xorb
and
mov
movsl
push
clc
aad
pop
notl
pop
aad
bound
adc
mulb
jge
and
xor
fmuls
clc
adc
cmpsl
test
fsubrl
test
stos
pushf
cs
shr
aad
mov
inc
pop
loop
sbb
cmp
cmp
lret
movsb
adc
inc
mov
insl
ret
lahf
aaa
insl
fs
loop
fidivrs
xchg
loop
rolb
or
xchg
arpl
data16
mov
out
add
xchg
call
lahf
shl
aam
xchg
das
bound
add
push
push
mov
cld
jns,pn
aaa
rol
clc
mov
popf
aad
insb
sbb
mov
adc
jle
aam
int
loopne
loop
mov
insb
fisttpll
rcrb
adc
das
jle
mov
or
mov
repnz
cmpsb
cmp
aad
jmp
add
adc
mov
loope
mov
xor
insb
jb
iret
movsb
xchg
xor
or
loopne
adc
or
test
movsb
and
mov
mov
jp
and
aaa
dec
aas
mov
stos
stos
ret
sar
arpl
dec
es
es
mov
xor
mov
add
mov
ficoml
pushf
cmp
orl
jno
int
stos
or
add
int
push
notl
pop
cs
pop
repz
sbb
mov
add
cs
int3
or
mov
fnstenv
jle
ret
sahf
pop
xchg
insl
push
fisubrl
xlat
cmpsb
push
fwait
call
loop
mov
or
push
mov
mov
sub
aam
das
mov
jmp
or
lods
xchg
pop
cli
xchg
shl
add
repz
push
aaa
adc
daa
hlt
jmp
in
testl
jae
dec
ficomps
jge
icebp
scas
hlt
and
loope
cli
addr16
addr16
int3
cmp
push
in
cltd
inc
into
fstl
imul
jecxz
adc
inc
dec
sarb
and
fs
and
stos
aam
jns
inc
aas
mov
add
jmp
xchg
cmp
dec
int
xchg
sbb
test
xor
jg
push
lods
cmpsb
jns
imul
cmp
or
xchg
in
xchg
dec
jno
sbb
in
test
enter
enter
xor
imul
and
movl
pop
lret
sbbl
ja
imul
loope
dec
mov
sahf
add
fistl
fnsave
arpl
lret
jnp
sti
mov
xchg
mov
and
enter
adc
or
cmp
shlb
add
movsb
mov
aas
out
xchg
xlat
lcall
ja
pop
pop
dec
lcall
dec
sbb
es
loope
mov
ret
loopne
sub
nop
mov
sbb
mov
sbb
adc
mov
xchg
cmp
dec
xor
mov
out
push
fwait
aad
push
into
push
stos
or
jo
fmul
sti
mov
out
pop
enter
jno
imul
pop
repnz
mov
daa
std
out
ljmp
pop
shrl
mov
push
xchg
dec
outsl
not
movsl
adc
inc
mull
into
sbb
xor
xor
sub
out
lahf
add
incl
cmp
sub
popf
loope
fldenv
or
sbb
loop
sbb
mov
xchg
add
cmpsl
cmp
xchg
dec
stos
sub
xchg
sub
ss
dec
sub
add
je
or
test
adc
dec
sti
or
lods
xchg
call
scas
push
lcall
mov
xor
mov
cmpsl
in
es
arpl
sbb
and
inc
jno
or
mov
les
stos
in
push
xchg
jno
lcall
dec
out
mov
sub
sub
pop
xor
mov
lock
jno
repnz
lret
dec
sub
ss
pop
jmp
stos
sub
movsb
out
ret
lea
jns
pop
sbb
outsl
or
lods
inc
iret
jne
inc
mov
clc
mov
fsubl
mov
sti
fmuls
test
push
out
inc
aam
mov
cltd
mov
jle
add
dec
push
inc
jge
mov
or
xor
stc
mov
sub
shrb
cmpsl
jl
dec
jbe
or
rclb
ret
or
push
mov
or
add
stc
fsubs
rcrb
fs
cld
mov
dec
iret
in
xchg
mov
push
push
pop
mov
push
adc
insl
mov
inc
repnz
cli
mov
jg
sub
mov
fcompl
pushf
ss
jp
rcr
push
pusha
lcall
les
inc
xor
sti
xor
dec
enter
pushf
test
sbb
push
fwait
cmp
cltd
pusha
les
adc
cmc
int3
scas
into
jl
jns
inc
icebp
leave
mov
cmpsb
sub
shl
aaa
mov
sbb
or
dec
jge
pop
jo
cmp
mov
lods
idivl
push
sbb
xor
pop
fcoml
mov
add
xor
add
push
fs
js
test
dec
lds
lret
add
clc
call
addr16
jg
xchg
cld
push
rorl
or
xchg
lock
xlat
xchg
sub
decb
sahf
xchg
push
out
jnp
jle
adc
mov
in
adc
add
daa
idivl
sti
js
imul
hlt
test
cmp
inc
out
sbb
pop
mov
cltd
jl
add
mov
push
jge
push
daa
or
jnp
pusha
int
or
cli
mov
insb
int3
out
pop
inc
rcrb
mov
mov
pushf
jne
int3
sub
test
push
loope
sub
xchg
xlat
push
js
mov
pop
mov
fdivrl
xchg
mov
loop
dec
jne
aaa
cmpsb
das
out
roll
aam
mov
and
in
jge
cli
and
or
sbb
pop
nop
fiadds
mov
jmp
mov
lods
int
adc
in
addr16
ja
inc
mov
mov
xchg
insl
out
testl
pop
std
pop
in
addr16
ja
inc
mov
mov
xchg
insl
out
testl
addr16
pop
in
negl
xchg
lods
cmpsl
pop
mov
ja
xchg
insb
out
out
cmp
sub
pop
std
aaa
in
addr16
lea
xlat
lods
cmpsl
pop
dec
out
jge
sbb
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
adc
and
xor
mov
jns
sbb
js
inc
mov
ret
and
xor
adc
adc
loop
repnz
xor
inc
mov
jae
andl
mov
inc
shll
jecxz
repz
loop
repnz
xor
inc
mov
jae
andl
iret
daa
mov
ret
fs
gs
scas
ja
and
fcomps
orl
sbb
std
not
dec
loop
loop
test
pop
mov
or
lea
inc
cmp
shrb
mov
sbb
and
inc
adc
call
jae
inc
jae
xchg
fiadds
outsl
adc
dec
xlat
xor
mov
push
sahf
push
lea
cmp
xchg
shlb
adc
and
or
sbb
push
pop
loopne
ss
imul
push
nop
jno
and
mov
mov
cmp
or
aam
arpl
aaa
fwait
lods
xchg
xor
cmpsb
add
iret
loop
repnz
xor
inc
mov
jae
andl
mov
and
xor
add
push
inc
loop
mov
pop
xchg
inc
in
movb
jno
adcl
imul
shll
jo
ja
mov
inc
mov
inc
loope
negl
aad
mov
mov
inc
mov
inc
mov
pop
stos
seto
arpl
xchg
jb
inc
mov
ret
and
xor
add
adc
loop
repnz
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loop
fidivrl
push
push
xor
jb
insb
mov
inc
mov
cmp
je
sbb
ds
out
movsb
sub
and
andl
jae
sub
lret
push
dec
clc
cmp
mov
cmpsb
mov
dec
jg
push
sbb
mov
push
roll
mov
inc
sbbl
xchg
aaa
sbb
lcall
stos
inc
ljmp
outsl
in
and
sarb
fcoms
xorb
push
ret
inc
xchg
cli
or
pop
dec
outsl
ficoml
fisubrl
scas
movsl
jle
das
add
imul
push
inc
inc
add
imul
jp
jl
pusha
das
mov
inc
jne
loop
test
pop
or
sub
aas
addl
sbb
in
test
pop
rcll
jl
fwait
pop
xchg
out
fldenv
gs
stos
cs
mov
push
cmp
mov
push
xor
mov
adc
fs
out
inc
ja
adc
cmp
jge
inc
mov
jmp
out
fadd
je
mov
fldcw
imul
and
gs
arpl
out
jns
loop
loopne
jne
jno
out
jg
popf
and
leave
xor
ffree
jno
adc
aaa
imull
arpl
shrb
lret
jbe
mov
bound
inc
aam
cmp
xchg
add
test
adc
mov
imul
and
push
test
aas
fadd
dec
das
popa
mov
mov
lahf
jp
sbb
std
mov
gs
aaa
subb
popa
inc
mov
roll
sub
cli
addr16
mov
xlat
push
testl
pop
dec
and
mov
pop
xor
imul
mov
mov
dec
mov
lret
inc
jns
xchg
fwait
lock
push
das
adc
pop
out
xchg
cmp
in
cmpsb
pop
push
add
pop
and
add
xchg
repz
mov
pop
cmpsl
xchg
js
pop
scas
xor
pop
inc
jnp
fdivs
fwait
pop
imulb
shrl
and
mov
lods
inc
mov
cmpsl
mov
pop
mov
pop
je
pusha
adc
push
push
xor
outsb
xorl
inc
or
mov
loop,pt
fiadds
sarl
and
push
inc
mov
out
push
loopne
mov
lcall
fwait
popf
xchg
enter
dec
mov
push
mov
add
ljmp
out
xor
xchg
inc
lods
cmpsb
rorb
mov
fistl
mulps
xor
mov
arpl
into
daa
mov
and
sbb
clc
cltd
jmp
xlat
or
push
inc
push
jge
adc
adc
xchg
pushf
xchg
mov
push
sub
or
es
jbe
nop
aaa
pop
or
cld
test
inc
lds
arpl
cmp
push
jns
loop
jne
and
je
mov
pop
adc
fnstcw
jno
mov
out
shll
jg
lahf
movsl
push
lea
sbb
jge
cltd
orb
push
stos
ja
daa
jmp
jo
rclb
mov
das
mov
bound
in
or
and
jle
ret
test
jg
scas
aam
mov
mov
sahf
sub
sbb
fwait
xchg
add
int
test
daa
xchg
gs
les
adc
sub
mov
fwait
or
push
mov
sub
dec
push
js
dec
stos
mov
loop
sbb
xchg
cs
sbb
jp
xchg
adc
cmp
in
and
lds
hlt
jg
sbb
or
imul
rorb
pop
cmp
inc
jle
push
je
lret
daa
add
pop
clc
xchg
stos
xorl
mov
insb
cmp
imul
jmp
insl
xor
pop
scas
mov
data16
add
ret
mov
or
lea
adc
xchg
cmp
pop
stc
int
in
and
mov
jbe
adc
mov
or
jno
adcl
icebp
mov
enter
push
in
mov
and
mov
mov
fxch
data16
jmp
xor
rolb
dec
lcall
nop
xchg
lcall
inc
sub
mov
and
stos
mov
test
dec
pop
pop
cmpsl
add
icebp
rorl
loop
inc
dec
ss
cmpsl
or
jae
dec
mov
xor
pop
dec
adc
ja
inc
cltd
scas
loope
xchg
inc
rolb
dec
jo
bound
dec
sbb
imul
addb
call
mov
mov
push
mov
adcl
fwait
cmc
outsb
lret
stos
cmc
sbb
lock
xor
pop
pushf
cs
inc
sub
jnp
sub
lcall
mov
pop
jmp
push
lret
stc
cld
push
push
negl
and
loopne
outsl
add
out
sbb
mov
push
daa
push
popa
dec
fsubrs
push
and
imul
add
js
cmp
push
mov
jb
cmp
or
and
lock
popf
test
lret
or
pushf
xchg
add
jle
and
lea
or
mov
pop
mov
xchg
cmp
or
in
jge
sub
sti
shll
adc
lret
lcall
cltd
repnz
add
lds
inc
ret
ficoms
incb
pop
dec
andb
icebp
mov
pop
adc
or
int
push
ljmp
ret
shrb
sub
dec
mov
jae
scas
xchg
shlb
mov
int3
ret
cmp
jl
lcall
lret
hlt
ja
mov
push
je
fisubs
cs
mov
in
adc
aaa
sub
movsb
cmp
andl
mov
loop
xchg
and
in
outsl
xchg
push
mov
mov
out
mov
dec
push
outsb
add
xorl
mov
xchg
into
lods
jns
ds
ret
push
or
adc
add
std
mov
xchg
ror
jb
cmpsb
out
xchg
shlb
push
mov
sub
adc
mov
and
repz
pop
push
test
add
mov
jmp
imul
push
xor
movsl
sbb
pushf
insb
inc
rolb
sub
mov
pop
dec
std
rcl
cmp
das
dec
fdivs
cmp
rolb
cmp
into
mov
das
int
movsl
mull
jecxz
mov
sub
cmp
add
ss
sbb
cmpsb
lock
scas
out
mov
dec
lcall
push
mov
repz
test
testb
xor
mov
stos
repz
notl
ljmp
xchg
xlat
cmc
jae
jne
add
push
jne
jle
xchg
sbb
sub
aaa
iret
frstor
addr16
pushf
lret
inc
jp
jb
mov
jl
jbe
into
sbb
inc
sarb
repnz
bound
es
cmp
adc
inc
sbb
xor
es
js
stos
mov
xor
stos
push
enter
mov
xchg
mov
pop
sub
mov
add
cli
inc
loop
add
rolb
xor
cli
inc
inc
inc
pushf
orl
stc
cltd
test
nopl
sub
dec
xchg
xchg
dec
inc
dec
jbe
mov
loope
ds
repnz
mov
cmp
je
loop,pn
mov
sbb
mov
jbe
fwait
les
popa
mov
push
inc
inc
push
subb
xor
sahf
mov
out
jmp
inc
sub
jo
call
out
outsb
push
jge
push
lret
arpl
int
xor
add
pusha
ret
mov
jmp
jg
inc
or
jl
cmp
repnz
pop
jae
cmp
cwtl
jno
jae
push
imul
insl
test
jmp
jno
xchg
out
mov
ret
sub
cmpb
stc
jle
inc
jae
jae
imulb
pop
mov
cmpsb
ret
in
incl
scas
push
js
xchg
stos
iret
push
dec
jle
mov
and
daa
mov
clc
insb
jne
push
aaa
popf
inc
sbb
jge
push
mov
cmp
es
add
repz
cmpb
aaa
pop
cli
push
mov
stos
push
xchg
jnp
add
jge
jg
rorl
cmp
add
jb
xor
pop
into
rclb
int3
leave
cmp
adc
cs
jne
jl
idivb
lods
scas
arpl
fildl
popa
sbb
push
je
call
xchg
jne
pop
sbb
mov
xchg
cs
dec
or
movsl
adc
push
js
das
mov
imul
addr16
int3
fsubrl
lret
adc
jmp
lahf
mov
fwait
jno
pop
lds
sbb
aad
jmp
or
iret
fisubrl
or
add
pop
ja
push
bound
cltd
sub
addb
shll
inc
mov
fmull
cmp
mov
fcomps
and
xchg
sbb
cs
loope
int
test
pop
into
icebp
mov
inc
dec
mov
push
sbb
mov
mov
cld
xor
imul
sbbl
push
add
jbe
xchg
movaps
cwtl
addb
mov
in
xor
cmp
out
dec
push
enter
nop
cmp
nop
add
jnp
insb
or
dec
cwtl
dec
out
lret
sbb
cwtl
mov
dec
mov
mov
mov
shl
push
xor
mov
dec
or
nop
jb
daa
or
je
mov
shl
aam
jge
cmpb
jmp
push
icebp
icebp
insb
dec
jbe
jnp
mov
movsb
test
xor
popf
imul
xchg
sub
call
lcall
out
sbb
adc
mov
inc
xlat
mov
push
jecxz
jp
icebp
aas
mov
stc
cmc
push
jbe
stos
and
andl
sbb
in
jo
in
jbe
ja
pop
incl
sbb
repz
mov
pop
or
fidivrs
sti
test
ja
data16
sub
dec
in
aas
sbb
leave
xchg
shlb
and
or
mov
push
push
pop
aas
outsl
sbbl
adc
xchg
mov
mov
mov
fldcw
into
insb
or
mov
xchg
jp
test
notb
pusha
sbb
xchg
sub
orl
fcoms
sbb
daa
mov
mov
jns
mov
pop
and
movsb
jbe
sub
xor
dec
pushf
mov
shll
mov
add
adc
jbe
mov
push
scas
xlat
icebp
call
je
mov
std
lcall
dec
mov
mov
out
pop
out
jle
testb
lods
push
outsl
popf
add
jno
jnp
insl
sub
mov
in
xchg
xchg
out
sub
les
pushl
cmp
mov
movhps
push
adcl
je
cmp
sbb
xchg
xor
or
jl
pop
pop
and
sub
adc
sti
clc
cli
mov
sbb
mov
pushf
dec
mov
mov
or
push
loope
lock
sub
push
xchg
lods
xlat
or
rcll
pop
mov
jge
xor
jge
pop
in
out
cli
lahf
cli
sbb
add
jae
in
jnp
cs
cmp
into
dec
std
mov
fisttpll
aam
insb
jg
xchg
mov
jne
push
sub
stc
aam
scas
push
mov
clc
js
dec
popa
lcall
sbb
pop
test
pop
pop
loope
pop
repnz
lods
and
loope
scas
dec
inc
jne
xchg
cmc
in
cmp
movl
mov
out
inc
xchg
dec
jg
inc
jne
insl
inc
adc
xchg
mov
xchg
dec
stos
xchg
inc
pop
sub
cmc
dec
mov
stos
mov
in
mov
rol
or
sub
xorb
hlt
decl
incb
and
add
sub
icebp
hlt
rsm
mov
cmp
inc
cwtl
mov
dec
roll
outsl
fwait
cwtl
jae
inc
or
in
sbb
xchg
cmpsl
push
loope
ds
int
nop
sub
movsl
out
ret
xchg
xchg
rcl
inc
push
push
xorl
pushf
adc
fwait
push
pop
aad
cmp
addr16
subb
sbb
xchg
xorl
add
xchg
push
fwait
mov
cld
mov
iret
push
adc
ja
mov
and
cmp
aas
and
cmpsb
jp
outsb
xor
fdivrl
inc
sub
dec
pop
cmpsb
sbb
arpl
stos
call
xchg
pop
push
loope
mov
push
pop
fcompp
fistpll
pop
cmpsb
mov
jge
inc
push
lcall
incl
nop
or
xlat
call
les
and
mov
mov
cwtl
push
dec
sub
leave
arpl
fsubs
rol
jle
imul
cmpsl
lods
sub
or
ss
xor
adc
xor
addr16
and
sub
mov
ficomps
inc
inc
js
les
sub
add
sbb
dec
and
pop
repnz
addl
pop
mull
pop
scas
es
movsl
mov
sbb
out
mov
fs
adc
gs
jg
ret
dec
lock
sub
loop
dec
xor
repz
jle
inc
mov
xor
out
out
push
jl
ret
xchg
fwait
add
lods
and
add
iret
into
neg
lods
movsb
jo
cmp
mov
xor
lcall
xchg
lahf
test
pop
in
popa
iret
fimull
ds
sarb
pusha
mov
xchg
lret
dec
mov
xchg
inc
out
lock
repnz
and
imul
popa
mov
or
xchg
loop
roll
push
push
pop
lea
aas
out
mov
roll
add
fsubrl
jns
lock
aas
nop
xlat
lahf
pop
adc
push
and
repz
mov
mov
fcoms
loopne
scas
dec
pushf
mov
adc
and
fcomp
loop
inc
sahf
popa
and
std
push
les
fidivs
mov
movsb
insl
mov
pop
adc
orl
xor
addl
pop
fwait
or
inc
pop
aaa
mov
aas
iret
mov
ret
mov
push
icebp
out
stc
sub
cmc
les
adc
stc
in
es
add
outsb
in
in
cmp
pop
and
pop
cwtl
xlat
cmp
inc
xor
out
loope
dec
xchg
aaa
add
ficompl
ljmp
xchg
mov
pop
dec
or
sbb
adc
rolb
add
inc
test
mov
cltd
out
jns
lcall
push
xor
cltd
arpl
cmc
iret
les
push
sti
xchg
ret
cmp
mov
mov
or
test
ja
imul
or
xchg
or
loopne
cmpsb
cmp
push
leave
cmp
adc
cmc
and
add
fucom
scas
inc
push
adc
fstpl
cmpsl
sub
cltd
ja
test
mov
mov
les
or
and
push
jne
jmp
shl
inc
dec
outsb
sub
sar
cmc
cwtl
loope
fwait
into
add
mov
rcrl
ret
inc
sbb
sub
xchg
popf
jae
sub
xor
inc
sahf
loop
jg
out
add
dec
jg
out
lods
jne
sub
jb
lods
pushf
daa
pop
fisttps
clc
aas
jne
fstp
pop
dec
xchg
imul
jg
imul
fcompl
jle
sbbl
jae
xor
loope
cld
repz
xchg
pusha
dec
xor
pop
and
sbb
imul
inc
in
mov
inc
or
sub
push
js
sbb
mov
mov
orb
movsl
es
push
adc
lea
pop
adc
mov
aam
outsl
xlat
mov
enter
hlt
lret
jmp
out
into
rcrl
jl
mov
adcl
jmp
mov
rol
cmc
and
xchg
popf
push
push
sub
jecxz
cmp
movsb
cli
pop
adc
push
inc
pop
out
sbb
leave
leave
sub
pop
add
xchg
test
and
out
lock
call
inc
or
pop
pop
loop
jg
je
das
xchg
dec
xor
cmp
push
mov
push
xchg
out
rcrl
add
and
and
and
in
add
push
aad
movsb
sub
xlat
div
xchg
push
sub
imul
and
ret
in
jmp
inc
push
sub
sub
daa
fimull
mov
orb
in
push
stos
call
mov
push
pop
and
adc
jns
cmp
dec
clc
aaa
inc
jmp
dec
ret
orb
pop
in
sahf
mov
scas
mov
push
mov
xchg
xor
in
mov
arpl
ljmp
fnstenv
jecxz
xchg
xlat
imul
outsl
mov
mov
cmpb
pop
jp
out
adc
outsl
sbb
mov
jo
sub
cmp
stos
jmp
imul
xchg
sub
test
add
mov
jns
and
insb
pop
rclb
pushf
and
jns
push
push
fwait
sbb
cmp
dec
imul
push
pop
xlat
push
push
dec
dec
push
inc
mov
push
mov
sbb
arpl
xor
fwait
mov
jp
sahf
pop
call
arpl
adc
mov
sar
xchg
daa
add
add
jecxz
xchg
jge
xor
in
into
sub
cmp
jno
sbb
xchg
idivl
rcr
dec
stos
and
into
shlb
push
mov
adc
pop
mov
jg
and
inc
and
and
cmpsb
jl
jle
or
js
xor
mov
cmp
mov
push
iret
sbb
gs
or
xor
or
shll
xor
lds
shlb
mov
aad
test
xorl
pop
jae
sub
aam
out
cltd
les
leave
xchg
sub
sti
fstps
insl
cmp
cs
enter
js
mov
jb
xor
out
sbb
mov
lret
xchg
jo
shrl
push
cli
add
negb
mov
repz
xchg
sub
aad
inc
jmp
inc
inc
movsl
jns
iret
xchg
xchg
shll
data16
das
imul
jg
and
ret
and
bnd
call
dec
mov
xlat
cmp
add
or
imul
sbb
repz
mov
push
scas
out
test
sbb
sbbb
cwtl
ds
push
repnz
jg
notl
jno
stos
lahf
pusha
mov
mov
jecxz
pop
mov
out
or
mov
push
insl
xorl
xor
cwtl
xchg
mov
and
inc
cmpsl
mov
negb
add
push
sti
adc
push
ds
xchg
cmp
mov
lcall
xor
dec
jno
jne
lock
aaa
dec
iret
js
xchg
icebp
out
push
xchg
inc
cmp
mov
cmpsl
jb
jb
sbb
sbb
outsl
xor
fstpt
in
inc
mov
lock
shll
inc
mov
fldcw
lods
inc
and
jno
fs
mov
pop
fsubr
push
movsb
addl
dec
out
push
mov
scas
loope
lock
outsb
ss
mov
mov
push
jns
sub
iret
xor
inc
fidivrs
test
shrb
test
cltd
and
adc
jo
inc
inc
and
dec
loopne
xchg
test
and
dec
or
lcall
dec
cmp
ret
insb
adc
jbe
sbb
outsl
pop
mov
mov
add
pop
dec
or
xchg
mov
mov
sub
cmp
daa
adc
xor
imul
out
adc
add
xchg
push
xchg
add
pushf
enter
call
cmpsb
mulb
jle
pop
dec
mov
jecxz
adc
iret
jb
jg
call
dec
lahf
lods
mov
dec
in
les
cmpsb
je
jp
stos
xchg
stc
jecxz
icebp
cmc
push
push
add
mov
or
mov
cltd
ja
xorl
mov
mov
call
cmc
mov
in
xchg
cmpsb
and
mov
and
nop
in
mov
cli
mov
ds
ret
imul
hlt
sub
aad
push
repnz
aas
inc
jb
adcb
inc
lods
hlt
js
imul
jns
mov
inc
jge
dec
rcrl
gs
test
and
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loop
repnz
xor
inc
mov
jae
andl
mov
and
xor
add
adc
loop
repnz
mov
repz
andl
mov
and
xor
add
adc
loop
repnz
xor
inc
mov
jae
andl
or
and
xchg
std
sub
int
fnstsw
insl
std
cmpsl
shrl
fldl
int
cld
insl
in
jge
or
lods
cmp
jl
insl
std
sbb
lods
sub
pop
pushf
insl
in
jge
popa
lea
pop
int
fnstsw
insl
std
sbb
lods
sub
jle
pop
mov
pop
in
popf
inc
ret
mov
cmp
cwtl
es
ss
scas
into
sub
movsb
mov
or
or
sub
sbb
add
mov
pop
mov
cmp
mov
pusha
or
push
insb
fmul
dec
shlb
or
sbb
pop
call
stos
xor
sub
ds
test
lds
pushf
ffree
sub
mov
jge
fsubp
lods
daa
cmpsl
cmp
mov
js
cmc
add
sub
adc
pop
in
cmp
dec
push
idiv
call
push
lds
sbb
mov
lea
sub
dec
fnstsw
insl
std
sbb
lods
sub
pop
std
insl
in
jge
or
lods
push
sub
or
call
dec
jmp
xchg
or
js
push
fnstenv
test
mov
js
imul
popl
mov
sbb
arpl
sbb
jnp
push
sub
dec
cwtl
pop
mov
sub
pop
std
insl
in
jge
or
lods
cmp
jge
insl
std
sbb
lods
sub
pop
std
insl
in
jge
or
lods
cmp
lock
aas
outsb
stc
push
jb
and
dec
movsb
xchg
jle
mov
pushf
rcr
lahf
mov
mov
sub
mov
int
ret
mov
pop
mov
or
inc
test
mov
sti
or
test
add
pop
sbb
pop
cli
sub
xor
sahf
lret
xchg
xorb
cld
int
xor
mov
lods
adc
xlat
dec
hlt
inc
test
dec
adc
push
push
call
rorl
mov
cmp
ret
mov
mov
clc
push
push
jbe
loope
fwait
rcll
push
xor
mov
rcrb
cmc
cmp
cwtl
ljmp
mov
xchg
xor
mov
fcompl
cmp
pop
testl
add
js
mov
sti
jno
pop
inc
and
dec
sub
lea
dec
push
aas
or
jnp
ja
push
fldln2
mov
dec
mov
inc
in
push
xorb
inc
mov
mov
push
cmpsl
adc
jge
and
fwait
loop
or
or
push
loopne
cltd
shll
in
in
cmp
loop
movntps
mov
mov
cmp
xchg
ja
roll
sbb
mov
adc
sbb
sbb
dec
adc
inc
mov
xor
fs
add
and
dec
xchg
shlb
jle
icebp
xorl
decl
popa
ja
sbb
jnp
adc
cmpps
dec
scas
dec
int
sar
pop
sarl
fwait
sbb
scas
lea
xor
movsb
mov
cmp
mov
jmp
inc
cmp
mov
dec
push
lret
add
sbbl
jae
dec
daa
mulb
inc
xor
test
pop
add
sub
and
imul
push
in
adc
daa
jl
repz
in
pop
sub
js
mov
insb
jno
stos
loope
inc
xor
inc
pop
aam
inc
fisubl
test
mov
int3
sbb
lock
lods
pop
fwait
shll
cli
jno
popf
push
sub
mov
adc
xchg
rorb
xlat
outsl
out
fsts
jo
aad
adc
gs
mov
enter
xlat
and
sarb
out
lock
negl
movsl
std
jle
test
inc
into
push
mov
cmpsl
mov
push
fwait
xor
cld
mov
add
push
xor
fisubl
jnp
pop
jae
aam
pop
pop
lret
pop
mov
xchg
mov
enter
aas
loope
aas
jecxz
enter
sbb
mov
in
jne
lods
pop
mov
xchg
sub
sbbb
mov
mov
inc
loop
jbe
fisubrs
sbb
xchg
in
movsb
adc
adc
loopne
jl
jo
ret
jne
gs
lret
frstor
sbb
sti
xor
add
je
ljmp
push
ja
jno
ja
clc
push
mov
call
push
or
and
ja
aam
lods
mov
out
out
add
out
sub
out
xchg
stos
sbb
test
pushf
mov
mov
fnstcw
inc
dec
push
and
imul
sub
popf
push
js
shrl
pop
hlt
mov
jo
movsb
xchg
scas
cmp
lret
dec
out
jbe
out
jl
movsb
mov
sbb
push
jge
lahf
cld
sub
cmp
out
adc
lods
sub
cmp
push
adc
push
dec
xorl
mov
add
xchg
ret
inc
add
lods
out
xchg
dec
cmp
cmp
add
or
sub
flds
push
ds
mov
mov
mov
cmpsl
dec
aad
and
dec
fucomp
xor
sbb
adc
cmpsl
testl
ret
pop
pop
mov
inc
push
xchg
mov
stc
and
into
or
or
insb
xchg
cld
inc
jl
cwtl
xchg
or
push
ret
cmp
fsubs
test
mov
jl
mov
pop
aas
cmp
stos
fidivrs
outsb
stos
gs
aam
xchg
jmp
xchg
cs
decb
bound
mov
and
pop
shlb
xchg
rolb
fcoml
daa
mov
xchg
add
pop
aas
mov
mov
and
push
sub
sbb
and
shll
in
rclb
icebp
jae
fsubrs
dec
dec
sti
lcall
jle
pop
push
cmp
adcl
sbb
out
xchg
ds
icebp
push
call
repnz
sbb
cmpsl
cmp
iret
out
inc
sbb
rorb
in
mov
cld
mov
and
cmp
jmp
out
adc
sub
xor
lret
int3
cmp
out
and
and
shrl
cmpl
je
adc
cmpb
mov
sbb
and
fs
rolb
cmp
pushf
ret
push
xor
sbb
aaa
mov
sub
push
mov
fcmovu
mov
mov
add
push
ds
mov
mov
mov
out
jp
jns
cwtl
cli
and
mov
mov
sbb
orl
int
cmpsl
pop
test
int3
or
outsb
test
leave
and
mov
mov
or
neg
outsl
fcoml
or
subl
mov
in
push
jbe
push
mov
test
loopne
scas
inc
leave
insb
stos
mov
mulb
mov
inc
out
push
and
mov
and
xor
cli
daa
jmp
int
xor
push
cwtl
lret
adc
cmp
mov
add
aas
pop
std
fistl
dec
mov
hlt
cmc
cmp
mov
std
aam
dec
pop
xor
mov
jge
scas
or
pop
jbe
addr16
mov
cli
pop
loop
pop
pop
pop
adc
jns
xchg
das
fcomip
pop
or
and
pop
std
adc
fnstsw
push
push
jmp
outsb
loope
mov
pop
xchg
pop
or
ljmp
mov
jbe
cmpl
or
pop
sbb
mov
push
in
xchg
pushf
mov
sbb
push
fwait
inc
jae
movsb
sub
cmp
xchg
mov
sahf
mov
orb
push
adc
mov
dec
lds
out
cmpsb
pop
adc
dec
movsl
pop
push
sahf
xor
cltd
fcoml
jp
inc
repnz
push
jge
sub
subb
adc
xor
in
mov
dec
ljmp
imul
mov
cli
or
mov
stc
bound
scas
jo
push
or
imul
sub
pop
in
bnd
cmc
xchg
ret
shl
jmp
inc
out
call
inc
outsl
cmp
or
aad
std
popf
rolb
mov
arpl
lret
outsb
push
mov
lcall
pop
dec
sub
sbb
std
test
inc
jae
mov
xchg
loopne
cwtl
sbbb
mov
inc
sbb
ljmp
aam
dec
mov
inc
ret
insl
cmp
stc
adc
mov
pop
stc
adcl
sar
mov
xor
ret
pop
pop
sub
xchg
jle
bound
xor
cmpl
test
lahf
sbb
dec
sub
fisubrs
js
psubsb
mov
out
icebp
cmpsl
mov
xlat
dec
adc
xchg
aas
out
scas
mov
cmc
mov
imul
push
inc
mov
jbe
or
adc
inc
sub
out
pusha
adc
movsl
imul
and
sub
les
aam
aaa
out
xor
cmp
push
xlat
xlat
iret
adc
dec
je
aas
mov
push
mov
inc
insb
rcl
fstps
int
xchg
arpl
dec
dec
idivl
xchg
fldl
pop
push
out
cmp
jns
loope
or
test
push
lahf
ja
fistl
enter
cmp
data16
gs
cmpsl
sub
mov
mov
dec
or
inc
adc
iret
cmp
repz
jle
mov
push
mov
aas
enter
arpl
sbb
fnstenv
rcll
mov
lcall
xor
ds
adc
pop
sbb
xor
adcb
xor
sub
mov
mov
hlt
jne
sahf
jmp
fsubrp
scas
xchg
push
push
mov
mov
int
dec
movsb
jo
xor
sbb
mulb
insl
mov
ss
adc
pop
fldcw
addr16
add
mov
ja
mov
ror
out
in
jns
dec
xor
cmc
cs
push
js
xor
mov
jl
cmp
std
negb
inc
je
mov
xchg
mulb
xor
and
ja
and
movsl
imul
daa
sub
shll
jno
hlt
push
mov
or
sbb
popf
shl
call
sbb
mov
xchg
lock
mov
icebp
je
mov
repnz
popa
stos
jle
mov
jns
movsl
sbb
out
adc
pop
lcall
xchg
in
sbb
mov
imul
mov
hlt
pusha
pop
sub
add
adc
rcrb
repz
ret
andl
daa
sbb
adc
fdivp
mov
ficompl
leave
xlat
insb
cmp
sar
movsb
jmp
enter
fucomip
mov
add
nop
adc
sti
filds
call
pop
mov
push
mov
in
push
sub
adc
jmp
xlat
or
mov
icebp
jo
popf
push
test
leave
lods
push
dec
std
dec
xchg
rclb
add
add
shlb
call
in
push
fiadds
xchg
rolb
pop
or
addl
ds
pop
movsl
pop
sbb
mov
insb
jbe
jmp
pop
roll
dec
dec
adc
ret
adc
fdivr
sbb
leave
mov
fistl
cltd
jl
in
inc
add
fistps
out
fucom
dec
dec
sbb
sbb
xchg
mov
adc
mov
push
add
jae
addb
sub
ja
and
enter
out
jnp
ds
push
scas
xor
iret
nop
xchg
xor
fistpll
lcall
mov
adc
out
inc
insb
divl
jp,pt
repnz
pop
nop
fdivrs
stos
jb
fistpll
mov
pop
outsl
cltd
push
call
adc
dec
cmpsb
sahf
insb
xchg
jg
rorb
daa
jmp
sub
js
in
adc
out
inc
in
fwait
loopne
cltd
iret
dec
out
cmc
ret
out
cli
xor
push
int
cli
out
aam
loopew
push
pop
jbe
push
leave
and
adc
jmp
in
and
bnd
movsb
mov
cmpsb
xchg
mov
in
sub
in
stos
dec
cs
imul
xchg
es
test
mov
jo
je
xor
sub
adc
adc
movsb
push
xor
inc
ljmp
push
inc
sbb
mov
out
pop
push
loope
and
jl
push
and
cmp
int3
adc
and
cmp
fs
fwait
rclb
sbb
decb
in
into
call
adc
pop
stos
std
adc
inc
movsl
loop
rol
cmp
push
cmc
out
imul
xchg
push
aad
or
xor
push
mov
push
inc
insb
add
pop
loopne
or
out
xchg
dec
insb
or
sbb
fs
push
mov
pop
xchg
inc
adc
cmp
sub
add
loope
mov
inc
test
jmp
adc
adc
leave
sbb
xchg
cwtl
mov
mov
jne
inc
jne
push
xor
out
inc
adc
and
push
mov
push
aas
add
push
in
out
mov
mov
test
stos
lret
lret
push
adc
out
add
adc
cltd
xorb
fldenv
das
add
shll
mov
lret
jno
mov
lds
and
xchg
pusha
mov
xchg
fadd
insl
pop
mov
inc
or
sub
fsubrs
leave
push
push
lret
mov
sub
and
lea
mov
sub
mov
test
aaa
ds
adc
sbb
je
pusha
inc
pop
in
mov
in
mov
sbb
gs
ds
sub
add
shrl
push
jae
insb
sub
xchg
out
pop
mov
mov
out
test
les
pusha
adc
sbb
cmc
sbb
lock
stos
mov
rcl
lock
adc
cwtl
xchg
cmp
push
lods
inc
mov
xor
inc
dec
call
and
cmpsl
add
dec
insb
ficomps
xchg
movsl
sbb
mov
push
push
addr16
test
cs
inc
lods
sti
idiv
inc
mov
pushf
iret
out
adc
dec
and
stc
lock
sbb
inc
std
in
pop
imul
mov
je
sbbb
xchg
addl
xchg
loopne
jne
addr16
into
cltd
push
jg
fisttpl
mov
movsl
in
pop
jecxz
in
sbb
dec
sbb
sbb
xchg
loopne
iret
in
movsb
jmp
rcl
or
sarb
mov
into
mov
push
lods
clc
mov
push
adc
inc
push
and
mov
adc
mov
jne
int
jmp
sbb
cld
sbb
cmc
and
icebp
add
xor
or
push
loop
es
mov
xor
push
repz
call
or
and
push
scas
sub
jp
imulb
jo
lahf
ja
sbb
pop
std
inc
ret
call
jns
mov
mov
mov
shl
pop
fstpl
cld
pop
add
adc
es
fwait
xlat
cmp
jle
std
jp
and
sbb
js
and
cmp
js
iret
aam
jle
mov
stos
test
dec
jne
stc
scas
push
outsl
lcall
sub
mov
adc
xor
push
and
es
jae
cmp
mov
jnp
sbb
sbb
xchg
lcall
cmp
jp
arpl
push
jo
jl
lret
sahf
mov
test
add
or
inc
faddl
daa
loop
lcall
pop
cmp
ror
jnp
xor
fldl
lea
pop
fldcw
fsubrl
pop
js
bound
repz
inc
pop
and
xchg
xor
leave
outsb
add
lret
push
jb
pop
test
dec
dec
cwtl
push
arpl
stc
js
aam
add
mov
adc
or
int
xor
les
arpl
mov
int
push
push
pop
or
rorl
imul
divb
pop
ja
test
jns
fwait
sub
sbb
cwtl
fcomps
xchg
subb
movntq
out
test
mov
mov
mov
jmp
ret
xor
das
xchg
call
inc
inc
mov
mov
mov
je
xchg
push
xchg
popf
in
cltd
mov
test
push
or
or
pop
inc
dec
iret
data16
push
leave
lds
dec
fdiv
jb
xchg
push
cmp
das
and
or
and
xchg
adc
mov
in
insb
push
push
loope
cmp
imul
xor
pushf
rcl
cmp
stc
dec
add
mov
aam
aas
mov
pusha
loopne
pop
popf
sti
jecxz
stos
es
cmpsl
cmp
or
pop
orl
xrelease
sti
rorb
mov
dec
push
sub
add
mov
or
cmc
or
or
loop
pop
xor
call
xchg
and
fadds
pop
mov
rol
xchg
mov
mov
movsl
shrb
adc
jno
push
aaa
cld
inc
mov
mov
pop
add
pop
in
sbb
lcall
xchg
lods
mov
hlt
push
call
sbb
ljmp
rorb
mov
jns
sarl
test
fisubrl
push
adc
mov
jmp
cmpsl
roll
pushf
repnz
in
push
jle
mov
rcl
adc
push
push
bound
sarb
icebp
dec
dec
xor
shrb
adc
cwtl
lahf
imul
sbbl
push
pop
lret
lods
ljmp
imul
pop
cmpsl
sub
jne
ret
es
xchg
rclb
test
xor
mov
sbb
dec
imul
rorl
push
ja
or
xchg
xlat
inc
shrl
mov
push
hlt
sbb
fimull
sub
lret
loop
sub
je
push
push
xchg
mov
inc
and
xchg
or
lret
sub
in
sbb
mov
inc
cmp
xor
in
pushf
cmp
inc
or
dec
lods
dec
aaa
mov
mov
popa
cltd
or
inc
and
push
jae
push
inc
pop
cld
out
js,pt
mov
out
cmp
icebp
mov
dec
and
cmp
cwtl
inc
aaa
fsubrs
lea
add
cs
addr16
orl
adc
shlb
push
ss
mov
repz
pop
add
mov
and
mov
or
out
rolb
jmp
lret
shrb
loop
and
jp
sbb
in
rorb
inc
lods
adc
js
incb
shrl
out
jae
push
loopne
or
sbb
and
test
insl
out
pushf
fs
data16
into
add
mov
push
pop
stc
insl
sbb
outsb
or
mov
push
in
dec
or
jbe
jo
sbb
out
iret
sarl
mov
out
stos
arpl
cmp
iret
push
les
xchg
jg
or
cmp
inc
bound
push
cmpsb
and
cmpsl
cs
stos
dec
js
daa
adc
fstl
ds
imul
mov
icebp
inc
xchg
pop
cmp
testl
fadd
mov
push
sbb
adc
mov
pop
xchg
sbbb
xor
lock
pop
mov
les
or
mov
inc
pushf
loope
cli
xor
mov
mov
subl
mov
aaa
scas
scas
test
lcall
inc
icebp
rorl
dec
pop
xor
rol
das
sbb
xor
popf
pop
mov
loopne
jae
push
jp
ds
insl
cmc
repz
xlat
fs
clc
lea
jae
adc
cwtl
add
insl
iretw
pop
add
jo
pop
sub
sub
inc
xchg
dec
cmpsl
leave
cmc
inc
out
xchg
dec
sti
push
inc
es
mov
scas
sub
ret
into
ss
shrb
ret
cs
ret
adc
stos
pop
and
das
repnz
loope
ret
push
ret
inc
cmpsb
xchg
dec
pop
adc
fstpl
pop
cmpsl
aad
imul
rcll
pop
std
lcall
jmp
stos
mov
les
add
mov
sub
aam
pop
push
adc
mov
and
adc
dec
lahf
sbb
cmpsl
clc
sub
mov
mov
gs
or
cld
scas
cmp
pop
lods
push
xor
sub
gs
pop
test
lods
arpl
push
cmp
pop
testb
repz
cltd
xor
lret
notl
mov
push
out
push
fildll
and
sarb
in
and
add
mov
inc
sub
push
pusha
out
or
push
mov
lods
lcall
jecxz
inc
sub
jns
gs
mov
lret
xchg
mov
fildll
in
es
pop
cmp
out
movsl
sub
int3
and
fstl
ss
mov
scas
stc
jl
test
pop
cs
push
es
cld
mov
lea
dec
cmpl
sbb
bound
dec
test
and
inc
scas
popa
aaa
jne
ret
cmc
add
stos
in
or
stc
push
push
fiaddl
out
test
inc
inc
dec
scas
ss
xchg
pop
mov
in
push
movsb
jne
push
sub
inc
xor
ljmp
dec
sahf
xchg
in
cli
sub
into
xor
rol
xchg
dec
cld
aam
dec
jmp
add
and
dec
mov
pop
jmp
popf
out
push
rorb
push
mov
ss
popf
push
pop
and
inc
xchg
loop
xchg
data16
pop
fcomps
mov
push
das
inc
sub
inc
insl
dec
add
adc
rclb
call
cmpsl
dec
jecxz
rclb
jle
stos
ret
repnz
push
das
outsb
pop
xchg
ror
mov
fistpl
mov
adc
ret
imul
adc
jle
mov
cmp
and
leave
jbe
pop
sub
push
cld
push
and
jns
and
stos
rol
pop
fcmovu
mov
cmp
mov
pop
dec
dec
rcrl
adc
out
xchg
xchg
adc
push
dec
or
in
jmp
pusha
mov
cwtl
or
jns
inc
in
out
scas
pop
out
fsubrs
aas
or
imul
sbb
lods
sub
pop
std
insl
in
jge
or
lods
cmp
jge
insl
std
sbb
lods
sub
pop
std
insl
in
jge
or
lods
cmp
jge
insl
std
sbb
lods
sub
pop
std
insl
in
jge
or
lods
cmp
jl
insl
std
sbb
lods
sub
notl
in
or
test
ret
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
outsb
adc
lods
add
dec
call
cmc
add
add
pop
add
push
add
add
adc
add
mov
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
push
add
add
add
add
add
into
add
add
add
mov
add
add
add
add
int3
add
xchg
movl
into
add
add
add
add
mov
pop
rolb
jo
add
popa
add
mov
mov
mov
or
add
add
add
sub
xchg
add
add
cltd
add
add
mov
add
add
add
iret
add
add
add
add
add
add
add
add
iret
add
add
out
add
xchg
add
add
sub
pop
cmp
mov
add
add
add
sub
jne
sbb
add
add
add
add
add
xchg
add
add
add
add
hlt
add
add
mov
add
add
add
add
add
mov
das
add
add
cmp
cmp
or
out
add
call
add
dec
add
add
inc
add
add
add
add
add
add
add
add
add
mov
add
xor
push
add
pop
int3
add
mov
mov
aaa
add
add
add
xor
add
add
mov
add
add
add
add
add
roll
sbb
outsl
add
push
add
add
add
add
lea
cmc
add
fadds
sbb
in
push
add
add
add
sbb
mov
int3
add
add
add
add
add
add
add
add
add
add
add
adc
popf
add
add
add
mov
out
add
add
add
aas
add
add
add
add
add
add
add
xor
jns
and
or
sub
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
xlat
add
add
add
add
movl
addb
add
jb
push
add
pop
movl
mov
mov
add
push
add
add
add
add
add
add
add
jns
roll
dec
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
mov
add
push
add
add
add
leave
add
add
adc
leave
add
add
cmp
jecxz
adc
outsl
add
add
add
add
int
mov
add
add
add
add
add
add
addl
add
add
add
add
cmp
and
push
mov
paddusw
cli
outsb
push
repnz
add
jnp
inc
repnz
inc
lret
loop
push
adc
and
adc
xchg
outsl
enter
or
gs
lods
sar
mov
lret
cltd
sbbl
insl
test
dec
sub
sbb
lods
fcomps
push
sti
xor
adcb
and
or
mov
pusha
inc
shll
and
call
test
es
cmp
or
cmpl
xor
movb
dec
cltd
daa
fidivrl
test
mov
ss
lock
xlat
bound
sti
inc
pop
scas
and
adc
cmp
dec
inc
sbb
mov
lret
jns
cmp
mov
in
ret
shl
filds
adc
test
shr
pop
xor
popf
mov
sahf
mov
push
lock
add
roll
in
popa
xor
stos
mov
mov
cli
or
pop
mov
inc
lds
outsl
rcrl
lds
xlat
cmp
ficoms
out
mov
cltd
cwtl
scas
ficompl
or
imul
mov
mov
xlat
jae
out
cmc
ret
inc
pop
mov
scas
mov
imul
fildl
lret
and
lock
mov
movsl
aad
cmp
jl
fcomps
jle
lock
loop
add
in
popf
or
aaa
movsl
and
fwait
cmp
into
test
xchg
sahf
fidivrs
pop
stos
or
sub
divb
insl
shl
test
jo
rcrl
add
sar
fcompl
lock
add
jnp
inc
mov
sahf
out
xor
pop
and
sarl
insb
je
push
jo
xchg
leave
sbb
ljmp
push
jne
test
sub
pop
das
loop
or
xlat
adc
or
int
fisubl
outsl
shrl
mov
cmp
std
xlat
pop
jge
arpl
je
lock
roll
std
js
inc
popa
inc
fwait
icebp
fcmovbe
mov
je
add
dec
sbb
fsubs
shrb
into
add
js
imul
dec
sub
jno
out
push
mov
mov
cli
mov
fmulp
or
inc
mov
jle
dec
inc
jl
sbb
xchg
dec
shl
mov
fcmove
add
and
sbb
into
jnp
mov
push
inc
dec
clc
mov
push
xor
dec
outsb
cli
dec
sub
mov
or
mov
pop
jl
inc
cmp
xchg
iret
sub
cmc
jo
mov
sbb
lcall
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
