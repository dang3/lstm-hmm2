adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
cmpb
sub
mov
dec
add
xor
pusha
fidivl
cmpb
sub
jp
push
pop
lock
add
xor
pusha
fidivl
cmpb
sub
jp
push
pop
lock
add
mov
aas
mov
cmp
pop
mov
mov
or
test
std
adc
add
xor
push
or
aas
adc
push
push
or
lret
iret
mov
shrb
cwtl
cld
cmpsl
in
lds
sub
scas
lret
add
push
and
sub
lret
add
sub
sbb
jp
mov
sbb
fs
jne
test
inc
jmp
cmpsl
jo
inc
int3
dec
negl
movsl
mov
call
dec
mov
xor
jno
jge
outsl
shlb
cmp
mov
imul
loopne
fistps
fstpl
and
cmp
or
jp
push
pop
lock
add
xor
pusha
fidivl
rcll
leave
pop
mov
cmp
jne
and
dec
in
xchg
push
xchg
add
scas
in
cmc
pusha
lds
fcompl
pop
xchg
inc
cwtl
xor
inc
and
xor
inc
xchg
test
add
pop
iret
outsb
fdivrl
push
shrb
pop
lock
add
xor
pusha
fidivl
cmpb
sub
jp
push
pop
lock
add
xor
pusha
fidivl
cmpb
aas
cmp
mov
pop
xor
mov
or
aam
mov
jp
lods
test
lds
jae
xchg
jno
ss
sbb
pop
gs
jb
insl
ljmp
insl
push
rcrb
stc
fldl
into
dec
addb
mov
in
mov
mov
mov
cwtl
cmpsl
out
enter
iret
lods
fwait
xchg
fmulp
adc
xchg
hlt
cmp
enter
dec
jmp
lret
stos
inc
cmpsb
lret
enter
dec
pop
jl
cmpsl
sbb
in
int3
xor
inc
loopne
bound
out
jmp
mov
ret
ja
hlt
ret
pop
cmpsb
out
fwait
enter
ret
xchg
mov
push
imul
dec
stos
adc
xor
adc
rcrl
pop
pop
mov
add
dec
or
addr16
xchg
and
adc
adc
out
jmp
cmpsb
xor
or
or
outsb
sbb
jae
bound
shll
fwait
jg
into
ret
bound
pop
cs
cmp
outsl
inc
pop
popa
stos
aaa
pop
daa
add
testb
adc
push
insb
mov
jge
cmp
scas
add
cmp
push
xor
leave
je
out
sub
loop
mov
cmp
lods
inc
fiaddl
push
mov
shl
mov
pop
pop
xchg
iret
call
iret
daa
popf
dec
ja
xlat
outsb
xor
cmp
scas
das
sbb
inc
pop
lods
mov
push
sub
push
dec
loopne
xchg
aaa
mov
sti
lcall
adc
mov
pop
mov
xor
adc
inc
fimull
subl
cli
loope
call
into
out
ds
stos
inc
dec
dec
fwait
shl
or
fimuls
pushf
clc
dec
mov
jp
in
xadd
jl
cmpl
lcall
inc
out
mov
mov
lds
jle
mov
cmp
xor
lods
inc
sub
repnz
sub
cmp
sbb
fsubrp
movsl
in
dec
stc
repz
test
xor
cmp
xchg
push
das
int3
pop
inc
xchg
push
push
mov
jo
lods
lret
mov
aaa
fisubrl
iret
pop
push
ljmp
mov
mulb
adc
int
adc
js
cld
pop
sub
jo
sti
insb
aaa
dec
pop
adc
out
mov
add
addr16
fdivrl
outsl
fstl
dec
hlt
out
push
jp
insb
pop
mov
addl
xor
inc
movsl
aas
cmp
scas
dec
lods
mov
and
cmc
sub
push
sbb
in
mov
cmp
les
xchg
and
int
pop
sub
lret
and
hlt
out
jae
mov
cli
fs
out
lods
jae
addr16
pushf
xor
mov
pop
aas
or
sbb
popa
mov
or
push
out
adc
cmpsb
int3
fiadds
dec
sub
ret
mov
shll
inc
cmc
mov
pop
addb
jecxz
jae
scas
adc
push
je
xchg
adc
faddl
xchg
mov
js
imul
xor
cmc
adc
dec
out
add
outsl
stc
mulb
inc
in
mov
jbe
fs
lock
js
inc
mov
ret
sahf
pop
or
scas
xchg
mov
cmp
orb
xor
and
andb
sub
and
mov
in
ror
andb
jb
repnz
arpl
and
rcl
int
ret
test
enter
cmpsb
out
push
inc
cld
pop
jne
hlt
add
cmp
pop
lods
sbb
into
dec
leave
dec
pushf
xchg
xor
mov
shl
and
pop
sbb
iret
dec
lcall
and
and
ss
fmul
sbb
je
aam
cwtl
int
mov
stos
sti
sub
test
cmp
insl
es
mov
fidivs
mov
inc
cmp
pop
cmp
mov
popf
xor
and
je
jno
lock
push
and
cmp
divl
jle
inc
bound
xor
rcr
sbb
sarb
imul
xor
lcall
mov
fidivrs
lods
call
mov
outsl
and
xchg
lock
lods
jg
sbb
lret
sub
loopne
and
test
js
js
ja
adcb
mov
or
cld
data16
push
lock
push
sub
push
pop
xchg
nop
sub
fdivs
leave
or
cli
mov
mov
insl
bnd
adc
inc
sub
jl
aaa
and
movsb
cmpsb
or
lret
mov
hlt
dec
clc
mov
test
scas
das
add
pop
notb
adc
rolb
mov
faddp
push
punpckhdq
dec
xor
and
jge
std
andl
loop
and
push
loope
mov
nop
sbb
das
daa
push
je
ljmp
das
out
cmp
pusha
mov
xchg
shll
dec
cld
stos
xchg
sub
add
test
divl
push
mov
jb
adc
dec
xor
xchg
mov
push
inc
adc
mov
and
mov
add
cmp
dec
es
insb
into
mov
jge
pop
test
lock
in
mov
push
in
stos
arpl
and
xor
sbb
psubq
cmp
data16
stos
enter
ds
xchg
push
fninit
add
aas
hlt
daa
sti
dec
jl
daa
lret
ljmp
rcll
leave
dec
ffree
mov
jg
mov
nop
lret
xchg
arpl
lahf
sbb
lock
or
mov
rorb
sub
xor
repz
fildll
sti
and
mov
mov
inc
imul
into
push
mov
aad
pop
or
push
cld
lcall
and
xor
in
pop
mov
shlb
inc
ss
xchg
cmc
jmp
push
std
je
xchg
push
aaa
or
movsl
mov
push
ficompl
aad
cmpsl
jp
stc
pusha
outsl
xchg
aad
mov
jle
sub
mov
mov
sbb
fsqrt
xchg
mov
imul
repnz
jae
in
adc
and
jmp
cwtl
bound
adc
cltd
sub
insb
jb
aam
cmp
dec
mov
movsb
sti
bound
sub
popf
push
pushf
xchg
sub
adc
daa
cmpsb
pop
lret
xchg
mov
cmp
test
aas
fs
out
test
or
mov
adc
int3
mov
lods
shlb
adc
jge
test
add
inc
inc
lret
jecxz
pop
adc
mov
pop
test
mov
repz
rorl
loope
loope
add
cmp
mov
cmp
xor
mov
fisubrl
pop
and
pop
jae
mov
les
push
lods
adc
adc
iret
jecxz
int
inc
dec
pop
jne
aas
pop
les
add
pop
cmpsl
aas
pop
push
das
mov
les
or
fisttps
test
inc
pop
xchg
ret
faddl
rclb
add
ror
mov
sbb
shlb
js
add
push
inc
call
shrl
inc
dec
mov
sbb
mov
std
cld
adc
repnz
outsl
push
leave
sahf
out
pushl
sub
scas
mov
js
mov
insl
cmp
dec
sub
inc
aam
adc
inc
push
mov
adc
lods
ret
sarb
ja
out
mov
pop
jno
shll
sbb
loopne
dec
cmpsb
pop
pop
jae
dec
inc
sbb
in
pop
bound
cli
movsb
xchg
cld
inc
idivb
inc
movsb
aad
out
into
in
xchg
adc
out
insb
mov
cld
lret
test
stos
out
arpl
bound
pop
in
ret
or
xchg
pushf
dec
mov
aad
cmpsb
cmp
pushw
dec
insb
xor
push
xchg
inc
push
lahf
arpl
test
jmp
pop
mov
pusha
orl
call
xchg
subb
pop
sbbb
cmp
adc
std
inc
cld
xchg
shll
outsl
test
xchg
push
in
push
movb
mov
addr16
or
and
cmp
aas
enter
adc
aam
sub
xor
call
pushf
push
push
add
cmc
or
and
pop
jge
adc
pop
out
inc
mov
lods
push
test
pop
outsl
cmpsl
and
cli
jnp
dec
int3
xchg
mov
movl
out
adc
ret
or
or
adc
loopne
pop
shlb
mov
mov
cmp
mov
lods
xchg
mov
mov
sub
add
and
lcall
ret
iret
or
test
jae
adc
jne
sbb
lods
push
addr16
adc
mov
cwtl
push
pop
or
mov
pop
xor
jae
movsl
xchg
in
pop
out
mov
stos
sbb
and
cwtl
add
xchg
cmp
aaa
sti
mov
je
push
rcrl
push
fucom
push
leave
insl
and
cmp
xor
repz
xchg
pop
mov
and
adc
leave
adc
xchg
mov
pop
movsl
bound
call
nop
fcmovnb
into
sbb
scas
push
cld
test
scas
jo
orb
sbb
mov
sbb
test
xchg
push
jp
adc
inc
dec
and
xor
std
mov
test
push
xlat
sub
ss
leave
cli
pop
mov
ja
out
ds
jne
xchg
mov
test
das
test
insl
xlat
rcrb
cmp
out
cltd
cli
inc
xor
aam
daa
add
sahf
int
or
lods
or
xor
int3
aad
lock
or
repnz
mov
fs
mov
pop
push
push
daa
out
jnp
out
stos
or
enter
inc
sub
repz
std
pushf
mov
sbb
cmpsl
js
loop
jle
sahf
sbb
push
repz
mov
jns
push
inc
cs
lret
lock
cwtl
push
leave
ss
fmulp
ret
out
sub
enter
ja
pop
jne
add
loop
ret
add
mov
iret
push
push
mov
mov
inc
xchg
pop
adc
mov
imul
fnstsw
sti
ficoml
push
test
adc
push
subl
mov
in
dec
mov
icebp
insl
fstps
inc
and
add
cs
mov
stos
xor
add
aam
or
out
fcmovne
shll
int
push
js
aam
sbb
cmpsb
fidivl
stos
enter
js
add
out
mov
aad
pushf
adc
bound
adc
addl
out
rcll
dec
cltd
shll
mov
sub
sbb
fs
xor
add
add
movsl
and
inc
and
int
outsb
mov
adc
loop
scas
fidivs
mov
xor
pop
adc
cltd
sbb
out
into
out
pop
cli
ret
pop
jne
lcall
or
dec
cmp
xchg
ret
pop
popl
les
xor
jbe
arpl
sub
push
inc
inc
cmp
dec
movsl
mov
push
imul
and
clc
test
jle
and
out
into
sbb
xor
jns
ror
into
out
add
insl
add
mov
es
repz
dec
test
mov
test
test
adc
adc
or
jg
aas
sbbb
dec
orb
and
lret
add
push
fidivl
daa
or
ss
adc
call
dec
cmpsl
jne
mov
hlt
addr16
cli
aaa
xchg
pusha
add
imul
mov
mov
mov
push
dec
fstpt
pop
cs
adc
xor
push
xchg
push
mov
push
mov
jmp
int
imull
aas
pop
cli
pop
xchg
movl
xlat
mov
cmp
rclb
cmp
xchg
ror
ljmp
pushf
int3
fstpl
iret
lcall
test
and
mov
mov
sbb
push
repnz
push
loope
pop
outsl
shlb
mov
or
push
xor
lahf
and
xchg
sahf
adc
sbb
gs
and
fcmovbe
lock
into
pop
cmp
and
sub
sahf
lcall
mov
xchg
nop
rorb
cld
xchg
mov
xchg
push
fisubrs
sub
mov
or
pop
lahf
mov
cmp
push
orb
mov
or
in
push
sub
or
movsb
or
addr16
cmpb
mov
xchg
dec
mov
pushf
push
xor
and
push
sub
rcrl
test
popf
stos
sub
scas
mov
adc
lcall
fisubrs
inc
adc
mov
sbb
inc
pop
mov
mov
negl
scas
dec
jl
inc
cmp
and
adc
xor
pop
jne
push
enter
mov
sub
cmp
xchg
sti
push
mov
jae
cmpsl
cli
jb
arpl
out
dec
movsl
xchg
inc
in
pop
jb
jge
insb
mov
addb
push
jb
and
adc
pop
test
iret
popf
xor
and
xor
mov
leave
insb
daa
hlt
jno
push
mov
aam
inc
and
gs
pop
jp
mov
les
pop
rorl
lea
cld
adc
lock
in
mov
cmpsl
push
adc
scas
inc
inc
cld
jge
push
jmp
and
dec
stos
bound
sub
fnstenv
and
mov
cltd
jnp
mov
push
cmpsl
mov
ss
mov
dec
mov
pop
shlb
xchg
push
cwtl
push
repz
or
jmp
add
mov
pop
pop
jecxz
mov
leave
enter
dec
inc
dec
inc
jl
and
sub
pop
ljmp
pop
mov
cmpsb
dec
cmc
idivl
nop
cld
sub
iret
lret
inc
jle
push
add
mov
add
testb
lahf
push
sub
xor
fistps
bound
xor
inc
jno
mov
int
fmull
icebp
xor
hlt
mov
cmpsb
fildll
loop
push
jmp
pop
inc
lds
jmp
sti
rclb
xchg
loopne
imul
mov
sbb
mov
mov
xchg
push
adc
adc
xlat
repnz
mov
xchg
pavgw
popf
clc
mov
xchg
add
mov
into
ljmp
jbe
loope
inc
hlt
or
or
jmp
jne
jns
out
pusha
and
inc
cmp
mov
push
push
stos
jo
je
divb
sbbb
fistpl
cmp
repz
push
in
dec
xchg
push
ret
in
shrl
pusha
pop
pop
pop
in
je
inc
sbb
jle
pop
lcall
mov
mov
fldt
mov
ja
leave
sbb
js
sub
pop
xorl
lret
or
stos
in
cmpsb
dec
inc
jg
mov
fistps
sbb
jecxz
xchg
push
pop
fistpl
lods
inc
ja
inc
pop
and
addr16
or
dec
push
pop
jg
mov
loope
mov
fistpl
lds
in
loop
lret
loop
outsb
mov
pop
or
je
movsb
and
shll
mov
imul
mov
xchg
je
sbb
in
jecxz
pop
es
dec
test
cmpl
mov
or
shrb
xor
insb
out
xchg
mov
xor
ret
adc
mov
stos
dec
push
repnz
push
xchg
sbb
shll
mov
leave
sub
out
jg
shrb
mov
lahf
popa
mov
dec
in
ret
cmc
ret
xchg
enter
fs
or
push
inc
hlt
and
fucom
push
mov
xchg
mov
lds
xchg
xor
mov
mov
lods
lods
sbb
cmp
repnz
stos
lret
ja
add
mov
mov
xchg
pusha
movsb
fwait
mov
dec
mov
sti
test
cmp
mov
fnstenv
hlt
call
fidivrs
fstps
ja
adc
cltd
xor
xlat
mov
jbe
inc
pop
jmp
jmp
addl
inc
test
push
dec
inc
jo
sub
and
loope
push
pop
cmp
dec
or
xor
sarb
jae
xchg
ret
js
mov
cld
gs
scas
mov
dec
sbb
cmp
or
or
xor
popf
call
sarl
fsubr
cmp
inc
in
jo
push
inc
push
mov
fiadds
maskmovq
cmp
stc
mov
pop
mov
sub
movsl
pop
inc
pusha
into
orl
cld
sbb
inc
adc
or
insl
std
dec
jae
scas
adc
or
add
sar
arpl
gs
mov
rcl
mov
add
or
fsubs
rcrl
inc
inc
sub
push
push
adc
xchg
sub
leave
xlat
repnz
sti
mov
mov
lret
xchg
sbb
lock
jbe
movsb
aam
inc
mov
enter
arpl
mov
push
je
mov
rol
cwtl
dec
aas
mov
cmp
inc
or
nop
xchg
sbb
inc
adc
ret
sub
jmp
clc
call
cld
fnstcw
mov
imul
fs
mov
jp
xor
add
or
lret
scas
pop
dec
cmp
bound
outsl
add
stc
int3
ret
aas
out
bound
cmp
cli
mov
imul
push
xchg
lock
movsl
adc
or
out
notl
mov
add
add
aad
xor
jno
mov
xchg
or
lahf
push
jge
cld
loopne
xchg
lock
pop
movb
pusha
pop
ret
int
sub
fadd
lea
std
pop
out
dec
daa
jmp
pop
jae
cmpsb
dec
leave
sbbb
leave
test
rorl
sbb
stos
and
sub
and
jne
cli
mov
or
jb
mov
and
or
rcll
xchg
in
pop
xchg
add
dec
adc
stos
dec
sbb
test
je
fwait
leave
pushf
push
xchg
divb
shlb
scas
adc
mov
cmp
mov
cltd
rcrl
aaa
lds
cs
xchg
out
mov
popa
sub
test
jl
out
pop
sbb
or
push
in
push
outsb
and
and
leave
mov
mov
enter
inc
popa
es
push
daa
fiaddl
jne
rcll
divl
stc
sbb
pop
adc
fsubl
cmp
lcall
add
fisubl
dec
ret
add
jno
and
cmpl
mov
pop
fldt
sub
testb
es
daa
gs
ja
loope
es
mulb
pop
in
cmp
addr16
or
cld
cmp
mov
cmp
ret
or
sbb
jns
xchg
or
mov
sub
cltd
lea
adc
jmp
and
in
dec
sti
xchg
adc
lcall
push
or
repz
mov
push
jae
push
mov
push
faddl
fstps
xor
aad
sahf
xchg
xor
sub
jle
stc
lods
out
xchg
mov
es
inc
out
mov
xchg
pop
lock
nop
cmp
test
addb
sbb
mov
shll
enter
lock
push
add
xchg
mov
cli
push
pop
movsb
sbb
mov
ret
or
xchg
cmp
jmp
scas
pop
add
xor
cmp
cmp
orl
adc
and
es
hlt
mov
mov
outsl
xor
ds
mov
jmp
fwait
das
and
fcmovne
lods
mov
jbe
pushf
xorl
pandn
add
frstor
ja
inc
jb
adc
lods
pushf
jbe
popf
int3
aam
mov
imul
cmpl
insl
push
push
std
scas
push
aad
stos
sub
lcall
push
or
pop
xchg
fisttpl
sbb
jg
call
shl
pop
adc
adc
lret
aad
in
lcall
fnsave
ss
pop
push
stos
mov
xchg
pop
dec
add
sub
sarl
loop
push
jne
mov
push
cmpb
addr16
cli
inc
or
mov
in
sahf
push
arpl
pop
pop
cmp
xor
lds
xor
inc
inc
or
or
loopne
pusha
mov
xorl
and
jo
cmp
loope
xor
or
xor
add
push
popf
xchg
mov
dec
jl
mov
ror
fistpll
nop
pop
loop
cmp
les
cmp
xor
pop
sbb
test
out
inc
fistpll
jb
hlt
or
sub
test
mov
push
scas
sub
jp
push
pop
lock
add
xor
pusha
fidivl
cmpb
sub
jp
push
pop
lock
add
xor
pusha
fidivl
cmpb
sub
sbb
push
pop
jo
add
xor
pusha
fidivl
cmpb
sub
jp
ljmp
adc
mov
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
das
xchg
mov
iret
idivl
mov
getsec
jle
outsb
push
dec
ja
ja
xchg
mov
out
xlat
iret
xchg
aas
pop
das
pop
jle
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
xor
inc
push
sbb
push
or
and
iret
lret
scas
out
hlt
je
iret
cmp
cld
repnz
jl
jl
into
sti
and
cwtl
les
ljmp
pop
push
outsl
mov
call
adcb
push
fbstp
push
nop
jne
jo
mov
push
cmp
xor
pop
jg
dec
and
enter
imul
or
mov
mov
aas
out
iret
pop
das
sti
jmp
mov
push
cmp
dec
adc
inc
inc
push
push
pop
dec
out
fbstp
pop
add
getsec
sub
pop
inc
fimull
mov
inc
fisubrs
mov
daa
insl
or
pop
stc
adc
or
push
outsl
pop
pop
addr16
mov
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
xor
xchg
out
repz
idivb
stos
adcl
push
jo
imul
and
xor
in
sti
jmp
aam
test
fldcw
inc
gs
push
xor
sbb
lar
leave
movb
mov
out
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
jo
xor
push
lods
mov
adc
pop
jbe
pushf
push
push
loopne
and
cmp
fsubr
and
mov
les
mov
xchg
addl
scas
sub
sbb
clc
nop
aas
out
xorl
cmpsb
or
sub
in
int3
sub
inc
pusha
ljmp
push
cmp
outsb
mov
sbb
sbb
xchg
cltd
mov
popa
out
pop
cmpsl
dec
mulb
out
lods
xchg
test
xchg
pop
rorb
xchg
int3
out
sti
jae
ss
mov
ss
popa
sbb
repz
shrl
shr
push
xchg
or
xor
hlt
xor
xchg
pushf
jbe
inc
mov
lcall
movsl
push
add
push
mov
out
mov
fnstcw
adc
mov
xlat
cltd
xchg
mov
xor
stos
xchg
int3
pop
sub
sbb
jle
loopne
mov
bound
xchg
outsl
sub
lret
ror
sbb
ja
xchg
push
aaa
das
mov
enter
lcall
add
inc
xlat
mov
xor
inc
adc
movsl
cs
or
push
mov
sbb
mov
dec
or
insl
js
mov
cmc
pop
mov
ds
out
enter
adc
dec
cli
es
orl
aas
mov
lcall
lods
imul
pop
fbld
lds
movsb
pop
adc
xlat
mov
dec
mov
cmpsl
mov
imul
mov
pop
incl
and
scas
mov
roll
pop
cmpb
inc
daa
mov
outsb
daa
jle
dec
outsl
xor
dec
adc
cltd
mov
mov
pushf
in
out
adc
dec
fcomp
stos
rorl
aas
cmp
mov
bound
rolb
mov
inc
pusha
cmp
loop
mov
mov
lods
push
pusha
lea
jo
cmp
mov
mov
jae
jg
jno
jno
test
and
mov
in
sbb
push
adc
sbb
pushf
xchg
mov
push
rcrb
loopne
std
add
in
xor
or
sub
and
dec
xchg
popf
inc
loope
dec
xor
orb
mov
inc
enter
inc
and
or
clc
jg
orb
sub
sbb
call
ret
ret
in
fisttps
xchg
sahf
repz
aad
pop
enter
pusha
mov
int
popf
and
push
in
les
cli
cmc
or
pop
jnp
fwait
out
shlb
shll
shrb
dec
xchg
ret
lret
test
dec
inc
mov
xchg
sub
in
xchg
shlb
data16
sub
sub
mov
int3
aam
mov
mov
mov
lods
mov
fldcw
dec
pop
push
decb
int3
inc
les
gs
cwtl
pop
dec
syscall
mov
jg
push
ret
arpl
jmp
pop
xchg
xorl
shll
das
mov
or
inc
stc
sbb
mov
repz
out
xchg
dec
add
pusha
mov
inc
inc
xchg
push
sbb
ret
xchg
cmp
push
adc
mov
adc
stc
icebp
mov
add
xchg
fsubrs
xchg
fiadds
imul
mov
or
inc
aad
lds
dec
dec
bound
repz
icebp
movsb
ljmp
mov
xor
push
sub
pop
or
outsb
scas
test
add
adc
xchg
adc
push
test
mov
mov
adc
mov
inc
popl
xor
add
fs
lcall
es
mov
pop
mov
sbb
pop
shl
pop
out
pop
repz
pop
lret
pop
mov
fmull
scas
in
sti
dec
mov
out
sbb
lahf
test
pop
push
push
and
test
in
int3
mov
in
mov
xor
stos
ficomps
inc
inc
lods
stos
mov
inc
jo
mov
ss
pop
jg
ljmp
das
jno
xchg
jecxz
arpl
adc
stc
into
fwait
jno
fsubrl
or
aad
lret
insl
out
out
int
xchg
pusha
xor
inc
jecxz
sub
test
je
xor
add
gs
mov
add
arpl
jbe,pt
xor
jmp
aam
jae
sbb
std
inc
enter
and
pop
fnstcw
cmpb
sbb
ficoml
inc
push
lret
push
bound
jp
mul
ljmp
cvtps2pd
dec
pop
jg
sbb
sub
sub
jns
gs
push
enter
xor
sub
sbb
testb
testl
jo
scas
pop
sbb
out
and
repnz
popa
aas
sbb
push
repnz
and
scas
dec
jo
test
pop
mov
adc
push
jecxz
imul
iret
and
dec
adc
lret
stos
dec
loope
and
adc
cmp
adc
jecxz
popa
mov
push
shlb
pop
subb
or
adc
rcll
cs
scas
shll
stos
in
leave
sub
cmp
in
ljmp
orl
pop
sbb
add
aam
ficompl
cmp
xlat
xor
xchg
cmpl
xchg
cmp
mov
pop
ljmp
lods
sbb
addl
or
out
sti
push
cmp
aam
movsl
lea
sub
inc
pop
int3
inc
fucomi
leave
xchg
lahf
mov
mov
pop
mov
arpl
aaa
sub
adc
dec
pop
mov
adc
sarl
or
insb
popf
cmp
jmp
jns
jge
test
ret
mov
out
or
daa
in
adc
xlat
inc
sbb
pop
mov
and
dec
dec
and
sbb
add
xchg
and
dec
aas
or
jo
sbb
shll
add
shlb
dec
adc
popl
inc
adc
popa
jp
out
jno
mull
leave
inc
sbbb
test
daa
jns
inc
subl
mov
test
imul
lahf
jae
mov
jg
loopne
mov
sub
cmp
cli
mov
test
mov
in
inc
int3
mov
lcall
push
xchg
push
adc
sub
loop
adc
mov
rorb
fwait
into
mov
shlb
jmp
and
xchg
cmpsb
in
test
mov
fsubl
call
das
add
inc
sbb
scas
cmp
popf
jo
lret
mov
inc
dec
mov
ror
fxch
mov
stos
mov
jl
mov
loope
mov
push
aaa
xor
fwait
lcall
xor
xor
sub
insb
test
add
and
rcrb
or
mov
mov
mov
pop
xchg
in
lods
adc
fwait
xchg
add
jno
rclb
subb
fwait
repz
mov
les
outsb
das
cpuid
xchg
mov
mov
ds
movsb
mov
test
push
mov
repnz
das
pop
dec
outsb
jnp
mov
mov
sub
jnp
mov
bnd
pop
outsl
daa
push
xchg
ja
mov
pop
mov
adc
ss
and
jno
xchg
fwait
jecxz
inc
add
divl
and
test
loop
repz
or
in
jecxz
sbb
ret
adc
xchg
xchg
mov
arpl
out
sub
and
ret
sbb
pop
sbb
test
cmp
push
iret
mov
mov
jl
movsb
cmc
in
sub
inc
pop
mov
cltd
sbb
leave
insl
mov
dec
push
jnp
das
bound
mov
and
mov
ljmp
push
out
mov
pushf
xchg
fnstsw
push
sahf
scas
push
stos
xor
push
loope
add
incb
mov
jae
or
das
xchg
jb
sbb
mov
and
dec
jecxz
addr16
data16
stos
ja
cmpsb
inc
enter
ds
mov
mov
fwait
std
popa
jns
push
dec
inc
aas
rolb
push
pop
decl
cmp
filds
ss
imul
adc
negb
mov
cltd
mov
sbb
popf
xchg
dec
jno
or
jecxz
sbb
clc
cmc
mov
aad
mov
lea
into
lahf
cwtl
push
ret
jmp
and
adc
mov
test
int
xchg
in
sbb
jns
push
vmovlps
xor
cmp
hlt
mov
bound
cmp
inc
mov
sahf
add
daa
pusha
ljmp
or
test
add
stc
repnz
imul
dec
xor
jno
jb
out
adc
aas
das
in
jmp
pushf
pop
add
dec
or
out
fdivs
dec
mov
sub
xchg
std
test
pop
cs
outsb
add
aaa
sub
push
cmpsb
add
std
repz
push
add
daa
cmp
js
pop
std
sub
jp
lret
mov
push
cmp
or
xchg
jp
xor
notb
cmp
xor
andb
push
iret
mov
pop
xchg
inc
mov
sbb
mov
pusha
loopne
test
cli
data16
xor
out
cli
sbb
push
and
aam
inc
in
dec
jecxz
jne,pn
push
testb
xchg
mov
mov
loope
dec
sub
and
je
sahf
inc
xor
iret
push
movnti
push
push
xor
sbb
pop
and
xor
imul
pushf
mov
test
orl
mov
pop
dec
xor
addr16
int
daa
repz
jmp
and
or
sub
nop
fldl
in
pop
pop
add
cmc
pop
cmpsl
shrb
sub
ror
push
mov
lret
inc
and
in
out
in
sbb
sahf
imul
ret
sub
orb
sub
mov
insl
test
nop
xchg
mov
idivl
std
lahf
jb
push
mov
lds
adc
push
js
out
mov
pop
mov
xor
xor
sub
sbb
loopne
pcmpgtw
cmpsl
mov
addr16
xlat
scas
cmp
lock
aad
ljmp
and
dec
lret
ja
testl
mov
xchg
out
sub
and
in
push
add
cli
cmpb
pop
push
xchg
leave
jp
sbb
in
push
int
test
and
shrl
scas
cmp
push
inc
icebp
test
lea
sbb
shll
mov
sub
test
iret
pop
pop
xor
loope
jmp
fldenv
pop
std
inc
inc
add
sbb
lret
cmpb
mov
pop
leave
out
pop
cmpsl
mov
adc
mov
std
jae
add
cmp
adc
mov
js
stc
pop
adc
jbe
cli
in
icebp
sbb
mov
adc
pop
rcr
and
test
insb
xor
mov
jecxz
fmull
in
cld
mov
lds
mov
xor
mov
jne
xchg
jo
mov
mov
rcl
clc
ret
mov
mov
pusha
sub
dec
imul
add
scas
stos
mov
push
inc
imul
jbe
out
lds
xchg
test
mov
fisttpll
std
imul
test
fnstenv
push
push
psubq
mov
in
mov
jbe
or
xchg
lahf
leave
adc
out
mov
test
pop
decb
or
adc
in
mov
sub
inc
pop
mov
sbb
shlb
lret
out
or
inc
into
out
sub
loop
in
lods
hlt
mov
dec
and
fcoml
or
xchg
jecxz
movsb
aas
loope
mov
mov
push
inc
lahf
xor
mov
push
lret
xor
or
jnp
je
dec
xchg
mov
test
add
out
loop
into
lods
pop
lret
test
aas
add
cmp
clc
aam
mov
mov
add
popf
mov
or
pop
and
push
sbb
push
adc
lea
xor
push
sub
outsb
lock
pusha
jp
push
xchg
xor
dec
pop
or
inc
inc
fildll
pop
addr16
gs
je
sub
sbb
jp
jo
push
add
pop
and
push
or
pop
and
insb
lahf
imul
sbb
mov
lret
out
mov
inc
inc
es
movl
or
mov
imul
imul
dec
mov
pmullw
int3
and
es
cmpsl
inc
mov
pminub
dec
outsb
int
sbb
imul
ret
ss
out
xchg
xor
mov
lods
loop
mov
in
sbb
fisubrl
dec
fistpl
or
and
push
cmpsb
and
dec
sub
sarb
adc
and
fiaddl
cmp
outsl
dec
mov
push
or
cmp
xchg
repz
and
aam
dec
dec
adc
cmp
adc
out
out
or
bound
cli
pop
mov
jae
and
in
mov
or
cltd
mov
mov
int3
aaa
xlat
lods
push
mov
add
pop
pop
xor
push
aam
lods
adcl
ds
insb
xchg
push
movsl
mov
lds
icebp
pop
jl
pop
sub
in
dec
call
and
sar
repnz
imul
mov
mov
push
sub
faddp
push
or
dec
lds
inc
jp
dec
cs
aas
adc
andb
mov
mov
lret
pop
ds
cmpsb
mov
and
insl
sub
jmp
loope
push
icebp
ja
ss
clc
int3
fwait
pusha
adc
out
loop
or
cmpsb
xorl
xchg
ficoms
and
data16
or
xor
cld
xor
outsb
test
outsl
adc
pop
xchg
add
fsubr
sarb
lret
ja
popf
fsubs
aas
icebp
sahf
mov
mov
ds
and
sub
mov
popa
sbb
scas
cmpsl
push
mov
xchg
and
inc
mov
adc
filds
pushf
sub
mov
rolb
adcl
movsl
loopne
sahf
cmc
mov
adc
std
push
aas
sbb
addb
cld
adc
idivl
push
pop
ljmp
jae
sarb
ljmp
push
mov
sub
les
sti
add
pop
push
outsb
dec
push
gs
jne
repz
xor
sbb
addr16
pop
dec
jae
push
mov
aad
jb
cmp
jg
xchg
xor
dec
aad
outsb
mov
ret
in
daa
hlt
stos
ljmp
pop
jo
frstor
movsb
pop
daa
or
rorl
lea
popa
mov
add
xchg
ss
std
jns
les
jmp
and
fisubs
cmp
in
dec
fwait
outsl
xor
shrb
ja
or
push
test
dec
sbb
mov
xor
sbb
out
push
lfs
push
out
bound
dec
or
popf
into
imul
push
mov
mov
sub
mov
call
insb
pushf
scas
inc
and
cld
mov
jp
mov
mov
mov
mov
cmc
pop
int3
out
popa
sub
sub
fisttpll
enter
xchg
dec
mov
jae
les
stc
out
insb
pop
iret
adc
dec
into
mov
dec
shl
aad
xchg
cld
shlb
mov
imulb
icebp
ret
and
imulb
test
inc
or
adc
add
imul
sarb
mov
ds
leave
mov
scas
and
mov
add
mov
add
cmp
jp
mov
lea
xor
pop
lea
adc
jle
sub
push
out
pop
in
jb
roll
ret
leave
jge
adc
daa
ret
mov
je
pushw
jmp
push
ds
test
inc
int3
mov
loope
inc
push
sub
mov
shrl
xor
cltd
aad
push
rol
pop
inc
xor
jmp
shrl
cmpsb
andb
lds
push
daa
pusha
aad
and
stos
fisttpll
ret
test
cmpsl
inc
xchg
idivl
int3
insb
sub
cmc
sbb
subb
enter
clc
stc
cmp
popa
push
xchg
push
bound
movsl
ss
stos
pop
das
xchg
ljmp
fistpll
add
aad
mov
fimull
cltd
nop
inc
in
xor
imul
xor
or
sti
and
rcl
mov
cmp
popf
cltd
mov
sti
inc
es
or
dec
mov
sti
pushf
cld
cmp
push
mov
lcall
mov
int
adc
mov
lret
add
dec
jb
cmp
mov
test
cmp
in
sbb
pop
cli
repnz
aaa
popf
fmull
aas
pop
aaa
imul
test
mov
in
cmpsb
mov
jnp
or
xchg
test
imul
or
mov
push
add
mov
pusha
inc
leave
aam
popa
push
jns
push
jl
shrl
mov
jnp
cmp
pop
fstps
or
aam
je
xor
add
add
xchg
hlt
shll
sbb
or
inc
adc
or
and
movsb
stos
lcall
push
out
aam
push
imul
insl
aaa
dec
and
xor
xor
in
flds
in
hlt
ret
cmp
loopne
popa
insb
inc
xor
inc
clc
inc
adc
xor
aad
and
cmp
out
movsb
loop
xchg
inc
inc
subb
hlt
pushf
add
xlat
dec
out
mov
stos
sarl
cmpsb
jns
lret
xchg
or
mov
jno
push
test
fmull
sbb
rclb
fs
mov
xor
add
pop
mov
stos
repnz
mov
push
lret
aad
push
cld
xor
or
sub
jp
insl
inc
fbld
aas
insl
xor
aas
xor
jns
addr16
push
fstpt
push
fmuls
outsl
or
mov
cmp
negb
fdivrs
jnp
adc
xor
lods
loope
shll
mov
aad
xchg
push
adc
add
sbb
call
data16
xor
je
and
jmp
out
cmp
sub
adc
and
leave
and
mov
out
in
pop
sbb
xor
decl
icebp
sub
in
test
xchg
pop
and
pop
data16
mov
and
inc
sub
push
rcrl
movsl
push
adc
push
mov
scas
xlat
icebp
fidivrl
inc
rclb
ds
aam
mov
lock
pop
and
adc
push
test
call
jp
jo
xchg
xor
stos
push
enter
rcrl
adc
inc
mov
test
add
les
and
mov
xchg
add
xchg
inc
xor
aad
fwait
das
mov
mov
mov
adc
das
imul
fdivrl
xchg
inc
nop
or
xchg
mov
mov
fists
lods
add
dec
push
xchg
scas
mov
lods
or
and
inc
add
xchg
push
call
push
xor
outsl
outsb
cli
push
cmp
stos
inc
imul
clc
add
lods
pop
ror
cmp
dec
gs
pop
mov
pop
jae
pusha
sub
or
dec
pop
cwtl
mov
push
ds
stos
jg
push
aas
xchg
lds
xor
mov
iret
jmp
roll
pop
jb
jnp
push
dec
and
aas
fwait
test
xlat
or
movaps
int3
inc
jb
ret
movsb
xor
les
das
jecxz
xlat
xchg
js
in
in
cmp
jno
out
pop
scas
lea
sbb
out
cmp
pop
or
daa
shlb
mov
aad
in
cvtps2pd
insl
addb
aaa
incl
fs
jb
stos
arpl
bound
mov
push
fisttpll
jg
jmp
sub
dec
lea
ja
dec
xchg
mov
mov
inc
adc
loope
in
and
push
aas
mov
sub
jecxz
mov
movsl
add
shl
test
fs
pop
push
mov
sbb
enter
jne
call
xchg
inc
mov
imul
adc
cmp
jne
cmp
cmp
jae
movsl
ret
jae
push
jns
inc
sti
pop
xchg
dec
dec
adc
pop
and
or
shl
pop
out
sbb
pop
call
mov
cmp
cmp
xor
lret
les
xor
shlb
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
idivl
pop
das
pop
pop
daa
getsec
jg
outsl
push
pop
addr16
ja
xchg
mov
out
xlat
iret
aaa
aas
pop
das
mov
or
out
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
addb
xor
xchg
or
jne
mov
xchg
and
push
pop
jo
jo
addb
xor
loopne
lock
mov
xchg
and
pusha
xlat
pusha
in
cmc
cltd
sbb
or
cmp
enter
lock
sbb
dec
rolb
mov
jmp
inc
push
xchg
rclb
pop
jmp
test
cmp
inc
mov
add
or
ljmp
mov
cmc
into
dec
adc
or
push
push
imulb
into
push
jle
push
xor
push
test
xchg
sbb
mov
insb
pusha
in
mov
pop
sub
ficoml
pop
adc
lock
imul
push
push
jmp
jo
rolb
push
inc
aas
test
and
jns
push
pop
rorb
push
lds
cli
jo
out
dec
mov
adc
in
popf
lcall
pusha
dec
add
out
repz
adc
xor
loopne
jmp
lea
mov
dec
int
pushl
in
add
les
inc
mov
lods
or
adc
ljmp
inc
mov
sbb
jl
push
rcrb
rcrb
loopne
mov
lock
jno
inc
mov
aad
adcb
add
fdivs
jbe
push
loopne
lock
test
xchg
and
push
aad
in
cmc
addb
xor
loopne
lock
test
xchg
and
push
aad
in
cmc
addb
aaa
lods
into
mov
loop
xor
imul
xor
push
sub
ret
movsb
jge
jo
mov
or
aas
push
orl
lods
add
xor
gs
pop
mov
xchg
mov
dec
sub
arpl
aad
cmp
arpl
xchg
test
mov
in
loope,pt
mov
xor
test
or
int
push
adc
sub
inc
daa
lock
sbb
jnp
add
loopne
pop
cmp
jge
push
adc
sti
incb
divl
es
out
add
cltd
mov
icebp
push
cmc
arpl
xchg
sub
sub
pop
adc
inc
decb
out
dec
orl
inc
in
in
jnp
pop
xor
jmp
insl
pop
loop
call
sbb
cmp
push
ret
and
push
imul
loop
aam
es
or
stos
or
loopne
addr16
mov
daa
call
cmpsl
sub
imul
sub
adc
xchg
idivl
add
ljmp
jo
ret
sub
subl
fildll
lret
sub
push
ja
enter
adcb
stc
cwtl
bound
sub
stos
shll
stos
jbe
cmp
dec
push
adc
repnz
mov
div
mov
mov
or
mov
sub
cmp
andb
push
sbb
stos
or
push
add
sbb
xlat
enter
mov
push
and
outsl
inc
lret
mov
testl
mov
addl
vmovapd
sbb
mov
jae
lock
int3
or
cmp
int3
inc
loope
and
and
mov
and
push
mov
outsb
xchg
lods
out
xor
sub
xor
fmuls
ret
fiadds
popa
add
outsl
outsl
jle
ljmp
in
inc
leave
adc
repz
cmp
outsb
jae
xlat
pop
lock
add
insl
mov
shlb
inc
icebp
into
ret
inc
push
mov
mov
test
inc
mov
cmp
dec
push
rcrl
push
jmp
test
loope
mov
mov
push
in
xor
lods
gs
aaa
cmpb
inc
jbe
in
adc
or
xor
add
je
pop
add
pop
jmp
and
mov
jp
nop
rol
mov
notb
jge
xchg
sbb
daa
ret
jb
addr16
push
jge
xchg
bnd
and
jmp
les
cltd
add
dec
push
cmp
fdivrs
or
fldenv
cmp
cmp
out
xor
fcompl
int3
pop
bound
or
pop
testb
lret
xchg
cmp
dec
sub
inc
and
outsl
adc
pop
pusha
pop
outsb
test
push
xlat
pop
sahf
aad
insb
xchg
xor
iret
sub
mov
jae
clc
or
jo
jne,pt
insb
and
dec
in
dec
mov
insb
mov
lcall
sbb
popf
push
lret
and
sub
or
push
outsl
sbb
stc
or
test
sub
fnstenv
fstl
sub
cmp
mov
lods
xchg
add
cld
das
push
lea
or
mov
popa
mov
popf
sahf
sahf
ss
sbb
jmp
aam
je
jle
push
mov
lea
inc
arpl
jmp
pop
jl
mov
lock
xor
inc
mov
cmpsl
idivb
and
inc
fstp
pop
pusha
sbb
pop
mov
push
fildll
jle
aas
leave
repz
inc
sbb
add
fs
or
lds
bound
dec
sbb
stc
ds
jl
in
cltd
inc
sahf
inc
jecxz
jo
sub
je
or
adc
leave
mov
jnp
inc
das
jb
pop
or
icebp
test
sbb
and
flds
jle
ret
push
arpl
xor
and
xchg
enter
jne
das
out
cmp
and
loop
ss
jo
lods
outsb
xor
xchg
pop
lds
movsl
enter
fidivs
dec
cltd
lea
pop
dec
mov
jg
jmp
out
pushf
cmp
pop
pop
mov
subb
test
add
mov
cmpsl
push
setae
jno
nop
bound
test
xchg
add
loope
sahf
and
mov
mov
in
into
add
rcl
or
mov
push
pop
add
sub
ffreep
imul
push
test
adc
pop
fdivrl
bndstx
add
add
icebp
add
jmp
movsl
pushf
adc
ja
dec
lcall
ljmp
xchg
cmp
push
inc
mov
mov
sub
pop
mov
jne
mov
cltd
xchg
add
lret
push
inc
lret
jnp
jae
cmpsl
out
adc
add
sbb
mov
adc
ja
fmull
adcl
lods
bnd
mov
fisttps
adc
xor
push
int3
pusha
xor
aas
incb
xor
xor
push
push
mov
ficoml
loopne
and
repz
outsl
fs
and
push
and
dec
imul
enter
bound
aas
rcrl
xor
mov
dec
xor
lock
das
or
aad
jmp
xchg
dec
xchg
cmpl
cmp
scas
push
adc
xor
ret
xchg
jp
loope
pop
cmpsl
sarb
jg
out
mov
dec
sbb
cmp
dec
scas
pusha
repnz
sbb
push
pusha
mov
push
jp
sub
enter
sti
filds
movsb
out
test
out
dec
test
and
jae
and
shrb
in
leave
aad
enter
add
dec
pop
test
mov
sbbb
bound
lahf
mov
xor
dec
cwtl
cmp
call
fwait
sbb
sti
inc
and
fcmovu
stc
adc
pop
add
pop
jnp
in
add
mov
xchg
jbe
mov
and
loopne
test
repnz
jbe
and
pop
sub
adc
ljmp
mov
call
xlat
iret
cmpsl
andb
xchg
sbb
aad
data16
xor
xchg
scas
pop
jecxz
pop
sub
or
mov
pop
cmc
scas
mov
stos
in
sub
aas
dec
or
adc
xchg
jp
addl
imul
xor
mov
fs
mulb
jg
mov
add
outsb
adc
jge
push
cmpsl
fldcw
dec
jnp
orl
dec
mov
mov
clc
push
xchg
push
mov
mov
push
pop
out
mov
popa
popf
xlat
lcall
sbb
xor
sub
xchg
xchg
dec
ss
jmp
in
sti
fisttps
movsl
add
loopne
inc
pop
mov
and
cmpsb
test
test
nop
sbb
lods
test
fists
scas
test
jno
pop
pop
sarl
out
push
dec
aad
jmp
and
shlb
lods
cmc
mov
je
ja
in
test
leave
lahf
or
or
mov
sub
dec
pop
rcl
push
pop
aaa
mov
xchg
lods
mul
stc
cmpb
xor
push
ja
inc
arpl
mov
lods
dec
pop
sbb
pop
in
pop
push
data16
lahf
stos
jg
jge
mov
inc
mov
lahf
cmp
call
ret
mov
aad
xchg
xor
shll
jbe
mov
dec
cmp
jmp
mov
xchg
repz
insb
in
test
adc
jmp
add
mov
inc
test
call
pop
je
xor
sbb
sbb
and
xchg
out
scas
imul
imul
jbe
orb
nop
das
setl
lods
cs
movsb
imul
and
mov
xchg
cmp
ja
leave
jno
mov
xchg
test
insl
mov
lds
mov
in
inc
xchg
or
push
dec
adc
inc
jl
orl
scas
dec
fildl
or
push
xchg
fsubl
ret
and
inc
add
inc
nop
add
add
adc
je
mov
out
outsb
lods
les
arpl
push
cld
ja
outsl
sub
xor
std
ret
sub
sbb
loop
call
hlt
stc
pop
or
aam
inc
push
dec
mov
stos
bound
add
jbe
pop
xlat
push
lret
rcll
lea
mov
aam
out
mov
fidivrs
push
mov
rcrb
popa
test
imul
jmp
xchg
btr
int3
fwait
pop
fwait
or
sarb
cmp
hlt
icebp
or
pop
sbb
mov
or
bound
add
inc
loop
xchg
or
pop
bound
out
jno
js
in
jo
mov
jmp
stos
pop
imul
jge
push
stos
scas
and
decl
fldcw
cltd
testl
xchg
pusha
aaa
daa
and
mov
fiadds
xchg
out
add
dec
ret
movsb
xor
xchg
leave
pushf
sbb
jns
out
inc
repnz
pop
ds
wrmsr
cmc
cmp
cltd
ret
xor
or
jbe
jp
scas
xchg
cmp
rolb
or
cmpsb
std
iret
add
iret
sbb
add
dec
mov
mov
sti
call
sbb
aaa
scas
lods
sbb
inc
or
jl
mov
and
xor
aaa
cmp
aad
push
in
cld
mov
dec
adc
mov
sbb
pop
dec
add
lods
xor
std
mov
repz
xchg
sub
cmp
and
outsb
xor
xchg
push
dec
mov
inc
pop
rep
aas
mov
mov
repz
xchg
push
xor
push
add
arpl
mov
subl
mov
adc
jle
fmull
gs
pop
jg
loop
repnz
push
fbstp
stos
adc
and
xchg
dec
sub
mov
cmp
inc
pop
inc
push
mov
dec
pop
ds
pop
iret
inc
ret
lahf
cld
insl
mov
push
popf
aad
add
testb
push
inc
mov
sti
aas
out
loop
xorb
push
dec
dec
stos
mov
or
mov
lret
bnd
add
mov
pop
in
sbb
jmp
movsb
nop
sub
mov
xchg
fcomp
in
pop
leave
cmc
into
dec
mov
and
mov
sbb
push
loopne
jno
add
sbb
push
xlat
jno
movsb
hlt
push
bound
divl
mov
enter
sti
cmp
cmp
pop
jo
jl
xchg
push
sbb
in
lea
dec
mov
rorl
mov
roll
scas
jge
mov
lahf
add
movsl
push
xchg
scas
mov
fs
lcall
jb
mov
imulb
cs
lods
call
xchg
xor
mov
mov
and
mov
loope
in
adc
pop
mov
cs
lds
add
inc
inc
nop
call
xchg
iret
adc
jae
jmp
not
fmuls
cmp
cld
fsubrl
xor
push
clc
clc
dec
aad
add
iret
shld
dec
adc
xchg
cld
aam
stos
ljmp
data16
icebp
mov
or
pop
daa
hlt
mov
push
out
inc
fucomip
add
mov
in
mov
jno
aam
and
fld
in
push
cmpsl
add
in
xchg
inc
xchg
fistpll
scas
popa
or
loope
xor
and
mov
insb
js
add
daa
pop
push
in
mov
orl
stos
stos
jb
and
mov
jp
aaa
push
mov
jns
test
cmp
ret
lods
test
out
sub
aaa
cwtl
cld
or
sbb
fldt
call
je
test
out
xchg
cld
pmaxub
add
xchg
add
lods
insb
popf
sbb
cmp
mov
or
ljmp
jl
mov
push
cmp
mov
stos
dec
cmp
or
in
mov
scas
or
add
xchg
dec
mov
pop
sub
mov
dec
xchg
inc
mov
test
ss
incb
ja
xchg
outsl
imul
mov
mov
and
mov
pop
sbb
sbb
call
xor
into
mov
inc
iret
jge
sub
mov
pushf
mov
push
xor
in
adc
mov
sub
or
lds
imul
and
jo
or
xlat
leave
js
push
xchg
in
ret
or
fs
dec
jo
enter
outsl
push
in
fmull
mov
sbb
inc
or
arpl
in
aad
lret
push
pop
ror
mov
ret
push
jne
pusha
dec
cmpsl
sub
dec
call
insb
popa
sbb
insl
cld
fdivrp
jo
jmp
and
pop
sbb
jg
sbb
test
enter
xchg
mov
dec
sbb
outsb
sbb
insb
ret
xchg
pop
rclb
jecxz
pop
lahf
lcall
fwait
inc
sub
mov
fcompl
push
sub
adc
xchg
jae
sbb
push
add
inc
mov
mov
test
add
adc
enter
out
cmpl
loop
movsb
push
xor
insb
adc
push
jb
movsl
inc
sbb
push
fsubrs
test
adc
xchg
cmp
pushf
in
pop
cmp
mov
icebp
inc
cltd
push
mov
sub
inc
int3
repz
movsl
inc
ja
jp
cmpsl
loope
xchg
pop
mov
dec
adc
push
mulb
adc
std
pop
xchg
daa
movsl
shll
js
cmp
out
out
or
adc
lret
jbe
ret
sahf
push
out
maskmovq
imull
inc
pop
stos
dec
outsl
loop
loop
fs
jp
or
popl
ret
gs
and
dec
inc
cmpsl
mov
mov
mov
xchg
dec
outsb
aaa
or
pop
outsl
int3
in
push
call
cwtl
jns
neg
gs
pop
add
mov
cwtl
es
negl
std
push
add
sub
jmp
push
jmp
inc
xchg
movb
adc
cmpsl
mov
push
icebp
xchg
ficompl
sub
in
dec
and
loope
xchg
cmp
adc
sub
sbb
or
cmpl
aam
jecxz
cmp
add
stos
or
fistl
das
add
xlat
mov
sbb
mov
pop
cmp
inc
sub
cmp
adc
jecxz
xor
add
pop
cmpsb
or
test
es
push
mov
mov
xchg
mov
std
and
bound
cmp
push
mull
mov
mov
push
ret
dec
mov
hlt
sbb
js
and
mov
dec
mov
rorl
lret
xchg
push
rcrb
insb
xchg
lods
adc
mov
popa
sub
hlt
sbb
out
jbe
out
lret
mov
clc
push
and
pop
loopne
cld
ret
sub
lcall
push
aas
xor
cmp
mov
arpl
out
xchg
inc
outsl
or
leave
sub
inc
pop
mov
jle
addb
push
cmp
mov
fiaddl
jo
shrl
insl
adc
cmp
in
xor
dec
mov
cltd
out
std
xor
and
stos
fisttpl
inc
fimull
jns
loopne
sbb
jnp
cmc
add
lahf
movsb
mov
push
loopne
adc
fld
in
rcrb
imul
enter
popa
xchg
xlat
xor
pusha
push
mov
aad
adc
xchg
scas
push
xor
dec
shl
cmp
add
lcall
jmp
and
fcoms
jns
push
movsl
mov
sub
into
xchg
fidivrl
cmp
xor
xor
push
jnp
ret
jns
sub
aad
adcl
fs
outsb
mov
pop
lea
add
test
jmp
push
subl
icebp
movsb
cmpsl
or
push
mov
sub
jb
addl
mov
xor
mov
in
ret
int
loopne
mov
lods
in
jns
xchg
lahf
mov
xchg
fcmovnbe
inc
sbb
xchg
push
push
ret
adc
shr
call
fisttpl
lcall
adc
dec
adc
fcoml
jb
mov
and
lods
xor
inc
xorb
mov
sarl
testb
and
sahf
mov
dec
outsl
add
fcomps
mov
aad
fstp
aaa
xor
mov
int
out
popl
insb
xor
test
test
movsl
mov
call
mov
jge
mov
xchg
cltd
fldl
in
idivb
sub
cmp
xorl
or
lret
pop
mov
sahf
cmc
xchg
add
push
cmpsl
divl
aad
push
into
stc
xchg
xor
scas
fwait
loopne
ljmp
scas
dec
inc
push
js
jecxz
mov
push
xor
jns
xor
pop
jnp
inc
out
testb
pop
cmc
out
xchg
das
jmp
aad
cmp
daa
cmp
inc
and
pop
inc
mov
jp
cli
jecxz
push
out
inc
adc
int3
aaa
rorl
arpl
stos
js
in
jl
lds
lcall
cmp
jge
int
xor
pop
outsb
xchg
jo
aaa
call
jae
jmp
pop
bound
outsl
and
mov
mov
cmc
sub
bound
sahf
sub
jne
pop
mov
ljmp
inc
loopne
mov
sbb
mov
pop
mov
dec
jmp
xor
sbb
mov
dec
jne
sub
mov
cmp
pop
add
jb
stos
cwtl
pop
lret
aad
mov
cli
stos
xchg
sarb
mov
jl
jmp
and
enter
jnp
pop
dec
push
push
sbb
push
scas
sub
xchg
push
adcb
btr
ds
inc
inc
outsb
mov
fldenv
bnd
jo
insl
mov
xchg
inc
mov
xchg
add
push
and
or
cmp
dec
test
add
mov
insl
mov
xor
je
imul
pop
lds
add
mov
and
adcl
xchg
jno
jge
adc
mov
dec
sub
mov
xchg
negb
scas
mov
push
ds
jge
xor
es
mov
mov
jns
inc
and
lock
ja
imul
ss
jnp
mov
or
jb
mov
daa
add
mov
mov
mov
cmpl
movsb
push
dec
addr16
addr16
push
call
jae
inc
ret
push
jnp
push
fsubl
mov
les
inc
nop
pop
out
push
je
or
imull
sub
movsb
jecxz
cmp
dec
adc
dec
les
pop
fucomp
push
in
pusha
rcrb
cmp
or
mov
inc
push
add
out
outsl
sub
mov
jbe
lret
aad
adc
and
or
addr16
iret
out
mov
push
mov
out
aaa
mov
sub
xor
adc
shrb
mov
sarb
lahf
jmp
jecxz
xlat
adc
ror
cld
repnz
mov
adc
inc
mov
inc
scas
roll
repz
call
and
mov
js
push
xchg
jge
sub
jp
mov
mov
mov
in
xor
xorb
or
mov
dec
nop
cmp
lcall
cmpsl
data16
es
or
xchg
int3
sbb
shll
outsl
stos
sbb
mov
sub
pop
jno
jmp
outsl
ret
rcr
xchg
je
cld
or
lods
les
stos
loope
xor
sub
adc
test
fistps
cmp
dec
dec
lds
popf
mov
cmc
cmc
ds
mov
outsl
sbb
cmp
sbb
insb
lret
mov
or
sub
fcompl
push
inc
mov
sbb
add
ret
sub
mov
push
xchg
std
mov
test
pop
scas
test
in
js
inc
popf
les
xchg
pop
popa
add
inc
xlat
push
jns
and
movsl
push
mov
repz
cmp
jg
pop
cmpsb
jae
pop
fwait
aas
or
pop
xchg
cmp
test
mov
xchg
std
jg
enter
aaa
adc
adc
rolb
loopne
lock
test
xchg
and
push
aad
in
cmc
addb
xor
loopne
lock
test
xchg
and
push
aad
in
cmc
addb
xor
loopne
lock
test
xchg
and
push
aad
loope
icebp
addb
adc
inc
rclb
gs
incl
xor
aaa
dec
fsubrs
or
inc
aas
jb
bound
or
outsl
dec
pop
xchg
scas
ret
pop
lahf
xchg
out
ret
iret
mov
aas
inc
punpckldq
adc
jg
dec
and
scas
ret
and
mov
mov
aas
push
jp
or
jg
dec
xor
mov
mov
mov
inc
pusha
ds
or
sbb
fistpl
xor
mov
fimull
sbb
sub
mov
jns
mov
aad
std
add
jmp
sbb
inc
or
lcall
fbstp
sub
pop
loop
scas
and
cmp
mov
out
aas
sbb
gs
cmpb
mov
aaa
outsb
pop
jg
shlb
out
stos
shl
jo
iret
pop
test
add
xor
mov
mov
loopne
outsb
ret
pop
xor
ficoml
call
cmp
addl
xor
mov
inc
sarb
mov
sarb
or
or
cli
xchg
cmp
mov
aas
jb
jne
add
jg
dec
cmp
scas
fidivrl
mov
lcall
inc
daa
aas
pop
pushw
jbe
add
xor
dec
xsha1
cmpsb
lret
and
fsin
mov
mov
int
sahf
push
das
inc
cmp
data16
insb
sbb
addr16
rcl
ret
out
xchg
lock
insb
pop
bound
outsl
add
dec
and
scas
ret
loop
xchg
out
cmp
iret
mov
aas
jb
bound
adc
jg
dec
and
scas
ret
loop
xchg
out
cmp
iret
mov
jbe
mov
cs
lea
jp
cld
dec
mov
or
aad
cs
cli
mov
push
stos
xchg
loopne
test
push
test
adc
mov
dec
mov
push
in
sub
inc
fldt
mov
pop
adc
mov
cmp
push
sub
mov
das
hlt
sbb
pop
sub
adc
cli
push
mov
xchg
lret
out
xchg
out
sbb
mov
push
fsubrl
cmc
push
mov
fildll
fistps
and
sbb
mov
hlt
icebp
cmpsl
pop
or
repz
add
outsl
lds
dec
mov
adc
sti
test
imul
lods
xor
outsb
icebp
cmpsl
pop
sbb
or
ljmp
cmp
pop
jb
femms
xor
adc
fistl
movsb
loopne
addl
sbb
cmp
or
xchg
xchg
cs
jne
ljmp
aas
sbbl
cli
or
negl
push
rcll
xlat
and
loopne
add
push
add
out
adc
lret
add
and
sub
fcompl
es
mov
test
lock
mov
mov
mov
adc
popa
scas
lcall
sbb
icebp
dec
adc
cmc
imul
jl
mov
inc
jp
fsubs
mov
rcll
xchg
sahf
add
adc
and
lcall
mov
loop
mov
inc
divl
filds
inc
sub
sub
data16
in
repnz
pop
popa
pop
cmp
lret
pop
push
int3
pop
imul
sub
mov
std
push
mov
lods
lock
xor
lcall
out
adc
adc
insl
push
ljmp
adc
mov
negb
xor
int3
aam
or
mov
addr16
push
fwait
lods
dec
pop
sub
lea
xchg
iret
or
or
inc
mov
pop
stc
mov
cmp
xchg
es
cs
mov
jno
jp
lahf
adc
divl
addr16
xchg
in
sbb
adc
push
sub
addb
jp
or
pop
or
xor
mov
sub
xlat
adc
and
jbe
sbbl
hlt
mull
and
fisttpll
xlat
scas
iret
test
ja
imul
fnstcw
lds
add
xchg
sbb
fisttpll
in
mov
adc
lods
add
cs
test
pushf
out
push
rcrb
mov
push
add
dec
jp
repnz
ret
in
pop
mov
aas
pop
cmpsb
out
lods
cs
fildll
add
mov
inc
or
mov
addl
mov
pop
jge
outsl
push
hlt
lock
push
pop
lea
ds
imul
jno
lock
jnp
outsb
xor
sbb
jo
cld
rorl
imul
in
cmpsl
fwait
daa
xchg
arpl
jg
push
jno
fldenv
and
gs
lods
cmp
jnp
ljmp
aas
andl
jle
dec
test
push
mov
mov
and
lods
or
inc
cs
pop
adc
aaa
pop
pop
pop
aam
aas
or
mov
xchg
les
jb
in
pop
mov
fwait
popf
push
or
popf
xchg
push
sub
and
xor
cmp
notl
xlat
pop
adcb
in
and
stos
mov
in
xor
sbb
add
nop
dec
out
loopne
jns
mov
xor
mov
insl
mov
jbe
lahf
inc
addr16
dec
xchg
or
ret
lret
cs
mov
bound
or
out
out
or
and
jle
imul
arpl
insb
mov
jno
test
jno
loopne
ret
out
imul
out
or
xor
or
or
pop
push
sti
xchg
adc
sub
mov
and
lock
add
push
lods
mov
pop
aad
lea
in
and
jbe
inc
lock
inc
cmp
dec
sarb
sbb
mov
mov
push
cmp
fldt
sti
out
pop
lcall
cltd
push
jmp
fst
cmpsl
adc
push
std
inc
push
ljmp
mov
ret
or
xchg
mov
clc
adc
test
mov
mov
mov
xchg
sub
movsl
inc
jne
xor
xor
mov
cmp
mov
popa
std
xchg
fstpl
pop
flds
or
repnz
mov
neg
aad
cmp
pushf
and
ja
mov
sub
cli
push
jl
sub
xchg
ds
ljmp
and
loop
push
sub
js
add
mov
shl
sub
enter
mov
std
adc
xor
jo
jno
das
mov
push
jb
fwait
int3
add
popa
jne
ljmp
cmc
push
mov
popa
fmull
aam
or
push
sub
pop
cmpsb
and
test
inc
inc
outsl
mov
mov
add
hlt
push
xor
and
add
mov
mov
outsl
adc
movsl
mov
jbe
loop
pop
les
test
shr
or
sbb
daa
into
jb
cmpsb
xchg
cmpl
shrb
pop
stos
inc
call
and
std
fcmovbe
scas
sbb
test
add
inc
adc
out
arpl
mov
insb
jmp
cmpsl
ficompl
iret
xor
pop
cs
or
sub
mov
pop
stos
cli
lock
repnz
mov
sbb
popa
clc
iret
js
outsl
roll
lea
out
pop
or
dec
arpl
outsl
lret
imul
lahf
xlat
aad
cmc
dec
rorb
fisttps
pop
sbb
sub
fistpll
sub
push
iret
cwtl
jmp
outsl
mov
out
jg
test
nop
xchg
pop
scas
dec
mov
pop
xor
jecxz
nop
sbb
mov
push
imulb
aam
add
mov
addb
cmp
stos
and
mov
xchg
test
call
sub
inc
jne
dec
lret
push
mov
inc
mov
pop
dec
mov
dec
fisubl
sub
repz
cmp
mov
mov
mov
pop
pop
and
shl
ret
popa
xor
insb
jnp
incb
sub
mov
pop
jle
xchg
mov
mov
movsb
cmpsb
out
pop
push
movsb
jnp
push
or
adc
test
mov
jle
mov
mov
cmpsl
lret
fldl
orl
push
jp
in
outsb
push
dec
lcall
dec
sub
or
cmp
test
pop
fdivrl
cmp
pop
int3
xor
jp
mov
and
jbe
test
lcall
int
jmp
je
iret
add
jp
sub
or
dec
test
ja
or
ljmp
lret
and
std
jmp
jns
jo
pop
movsb
adc
push
adc
cwtl
cmc
push
cmp
repnz
push
mov
sbb
das
push
in
cli
add
je
and
inc
pop
inc
aas
pop
pop
pop
out
loope
andl
in
ret
sahf
out
inc
lret
xchg
loope
adc
repz
xchg
clc
das
cs
cmp
cltd
xchg
push
cmp
outsb
and
xchg
add
orb
hlt
xor
jb
xchg
push
xchg
das
or
adc
out
test
sbb
dec
pushl
lahf
jge
ss
scas
pop
sbb
inc
xor
pop
pop
sub
xor
xchg
jg
cmc
dec
sbb
fcomip
or
pop
xor
sbb
sbb
out
jne
xor
inc
enter
dec
and
mov
add
sbb
scas
inc
ds
imul
sub
mov
cmp
xchg
stos
xor
mov
mov
sub
jae
and
jno
das
inc
jp
adc
ret
push
inc
daa
sbbb
inc
jo
xchg
sbb
sti
in
push
loopne
and
stos
mov
inc
push
bound
iret
jo
and
bound
iret
mov
in
add
das
popa
lcall
int
dec
lods
int
cmpsl
in
orl
gs
mov
dec
movsb
ret
insb
aaa
jle
xchg
jns
mov
jecxz
inc
sub
icebp
sub
cmp
movl
arpl
sub
inc
inc
bnd
int
iret
inc
pop
imul
fwait
mov
hlt
xchg
cld
in
push
sub
mov
sbb
cltd
mov
pop
sbbb
adc
in
jg
or
dec
xchg
push
movsl
movsl
fistl
xchg
jns
loopne
inc
or
in
daa
fld
push
ret
pushl
mov
icebp
sub
in
aaa
sbb
ja
adc
jl
mov
lret
sub
mov
int3
stc
into
filds
mov
sbb
mov
mov
mov
xor
fnsave
mov
sbb
addr16
sbb
cmpsb
cmp
aam
adc
mov
idivl
sahf
into
std
xor
mov
sub
mull
addr16
xor
outsl
dec
and
pop
sbb
pop
test
lods
dec
add
popf
wbinvd
inc
xlat
xor
and
in
jbe
cmpb
outsb
popf
jae
jb
enter
pop
lret
in
jb
or
hlt
add
mov
bound
shl
mov
mov
or
in
add
in
out
nop
adcb
mov
js
outsl
jmp
cmp
out
push
loop
adc
dec
lea
mov
jne
dec
and
insl
shl
push
pop
pop
in
fdivrs
bound
mov
addb
test
ret
gs
xor
jle
test
mov
mov
fsubrs
imul
sahf
jle
jae
mov
sbb
ret
push
test
xor
jns
jbe
push
mov
sub
insl
cmp
mov
xchg
rcll
xchg
push
fchs
movsl
sub
lahf
mov
ljmp
jg
sub
insb
stc
xor
test
or
cmpsl
jb
xor
sbb
pop
mov
sub
or
cmp
test
icebp
jg
int3
pop
push
lahf
jns
fldt
sti
adc
stc
adc
adc
test
aad
xor
out
jg
mov
repz
cmp
cmc
mov
and
xor
xor
rolb
ds
sbb
dec
leave
fdivl
add
sub
inc
push
sti
aaa
shll
cmp
pop
jbe
inc
scas
mov
pusha
iret
xchg
push
insb
outsl
lods
dec
inc
add
jo
dec
jnp
pop
mov
xchg
insb
mov
mov
push
scas
mov
sbb
lret
js
das
subb
adcb
push
je
adc
push
cld
mov
adcb
and
lods
or
inc
dec
test
pop
sub
arpl
ss
fsubr
out
mov
sbb
cwtl
cmp
pop
dec
rorl
out
and
xor
movsb
mov
adc
cli
push
push
out
or
test
ljmp
outsb
inc
inc
jp
outsl
cmpb
aaa
push
clc
imul
add
dec
dec
out
cltd
jmp
hlt
dec
call
xchg
sbb
add
cltd
sbb
ljmp
adc
mov
push
sub
andb
testl
lahf
or
lahf
and
gs
in
sbb
shrl
pop
into
leave
sub
test
andb
mov
lock
push
mov
jmp
sub
jp
imul
lahf
or
mov
add
adc
push
push
jne
out
xchg
int3
repnz
into
fdivrs
adc
aad
or
and
mov
sti
add
mov
cmp
adc
push
fsub
cmp
loop
mov
xor
jno
testl
xchg
xor
pop
outsl
fwait
sbb
xor
mov
scas
or
data16
scas
mov
ret
adc
jns
push
xchg
add
add
xchg
ja
xchg
sub
pop
stc
mov
inc
push
in
push
mov
ret
add
mov
jo
xchg
add
pop
pop
pusha
rcrb
std
inc
into
movsl
lock
data16
ss
add
xchg
out
add
mov
loopne
cmp
push
out
mov
test
or
push
pop
aam
stos
cltd
cmc
pusha
or
out
cmp
pushf
test
push
jle
int3
mov
pop
cli
ds
insl
cmp
add
sahf
cmp
adc
ljmp
mov
add
imul
orl
pop
cwtl
ja
jmp
or
xor
out
inc
jmp
gs
movsb
pop
mov
daa
dec
xor
dec
push
fnsetpm(287
loop
fimull
nop
rcrb
push
jae
mov
int
scas
test
lods
fildll
or
xchg
mov
in
imul
pop
insl
in
clc
add
dec
into
lds
mov
dec
cltd
mov
repz
jae
loopne
mov
pushf
in
stos
jns
lods
add
xlat
cmp
cltd
push
mov
fs
out
mov
mov
dec
pop
jle
loop
pop
nop
insl
into
jbe
outsl
cli
stos
and
cmp
mov
dec
movsl
mov
outsb
shrl
fbstp
push
cmp
jo
test
paddsb
push
adc
cmp
add
jmp
movsb
mov
lds
outsl
nop
jne
lods
pop
ret
lds
gs
mov
jne
leave
imul
hlt
js
lods
ljmp
shrb
pop
sahf
fiadds
jmp
push
hlt
sbb
roll
xchg
xor
sti
mov
sub
mov
xchg
and
cmpb
mov
sbb
cmp
sub
stc
push
jge
push
outsl
cmp
dec
sub
xchg
subb
add
jb
push
xlat
addr16
jg
leave
and
lds
push
and
mov
fnstenv
inc
adc
dec
add
mov
mov
or
fadds
cs
fs
iret
outsl
movsl
mov
dec
or
sarl
mov
outsb
xor
lahf
xchg
shl
call
or
pushf
inc
dec
pop
xor
mov
mov
addl
scas
call
in
mul
push
add
mov
xchg
test
arpl
std
fdivr
jo
ds
pop
and
dec
pop
inc
add
movsl
std
sbb
jo
daa
or
shll
stos
xchg
iret
xchg
popf
notl
push
sbb
jne
test
and
and
leave
adc
fmul
jp
cld
into
xchg
sti
dec
addr16
push
cld
or
or
mov
push
jp
jae
fistps
push
xor
shrb
add
arpl
cwtl
and
rorb
iret
adc
and
and
shlb
stc
js
fnsave
repz
mov
les
das
cwtl
loop
nop
popa
pop
sarl
add
iret
mov
sub
les
fwait
stos
add
sbb
cmpsb
repz
sub
cli
lods
jg
lds
push
mov
xchg
inc
outsl
dec
stos
inc
mov
cmp
js
cmpsl
fdivrs
out
add
fiadds
mov
or
movsl
fsts
sbb
cmp
call
add
sub
repz
roll
pop
aaa
int3
pop
jns
sub
movsb
mov
clc
xchg
shrl
jl
jb
mov
hlt
aad
cli
sbb
adc
gs
pop
mov
sarb
push
in
fbstp
call
dec
enter
cmp
mov
sbb
fnstcw
mov
hlt
adc
fcoms
dec
aam
sbb
cmpsb
rorl
pop
insl
push
dec
push
and
clc
leave
adc
jge
inc
int
pop
dec
add
xchg
mov
pop
cmp
pushf
cmc
das
ds
push
adc
and
jl
fsub
mov
out
pop
pop
add
dec
cmp
inc
imul
arpl
xchg
imul
jno
pushl
dec
adc
je
lret
es
add
and
xor
enter
mov
mull
inc
lcall
test
inc
push
das
fs
out
into
push
jl
xchg
mov
mov
loope
shl
rcll
inc
andb
mov
ja
add
push
cltd
cmp
iret
pop
bound
xor
dec
jo
pop
xchg
xor
int3
push
inc
cmc
push
mov
stos
in
or
mov
jne
mov
daa
push
pop
ret
fstpl
cmp
mov
loopne
mov
or
pop
xor
popf
pushl
adc
mov
sub
xor
fsubl
int3
dec
out
jbe
lahf
mov
push
jo
dec
mov
mov
sar
enter
loop
test
insl
cmp
iret
cmp
and
mov
testl
sbb
mov
pop
lds
jae
ss
andb
and
sti
xchg
xchg
mov
lret
or
cmp
fadd
test
jp
inc
repz
jo
or
adc
out
pop
nop
fs
add
nop
mov
sbb
inc
ss
js
cmp
add
lret
pop
js
sub
es
fbld
scas
pop
add
ret
adc
imul
les
mov
and
dec
inc
mov
shll
xor
mov
dec
outsb
or
xor
outsb
pushf
mov
mov
lea
push
adc
sbb
pop
int3
stos
icebp
xchg
or
cs
bound
push
adc
cmpsl
in
push
push
cmpsb
loopne
rcrb
jl
add
mov
out
call
push
sub
mov
mov
inc
xor
lcall
cltd
lock
call
push
fisubs
out
jecxz
enter
push
mov
jge
push
leave
pop
mov
and
pop
je
int
sbb
add
fldenv
test
fsubrs
and
repz
cmc
xchg
add
js
xchg
jb
imul
pop
insl
or
sub
inc
imul
or
adc
sbb
cmp
mov
mov
stos
addr16
sbb
aas
pop
pop
cmpl
mov
test
addr16
mov
xchg
test
cmc
fisttps
mov
out
out
std
rolb
fwait
insb
fcomps
js
xchg
jg
push
pop
sub
sarb
stos
lods
ret
hlt
inc
jne
add
fisttpll
mov
mov
insb
pop
pusha
xor
imul
and
clc
loop
cmpsl
xchg
and
nop
push
dec
push
and
mov
mov
fbstp
push
mov
sbb
adc
push
cmp
push
into
insb
inc
cmp
sti
fs
jbe
add
lahf
popa
ja
jg
push
addb
sti
mov
and
xor
jnp
xchg
lods
cld
mov
add
adc
lods
les
or
sti
push
add
adc
mov
push
or
pusha
mov
inc
and
in
adc
sarb
or
mov
loope
pop
icebp
or
mov
ljmp
ret
pop
das
mov
sub
cmp
arpl
in
adc
lods
jl
add
push
test
ss
and
lock
sbb
aaa
sarl
mov
flds
or
stc
inc
inc
push
ret
cmp
and
sbb
loope
imulb
xor
scas
mov
out
insb
push
or
int3
cmc
test
lods
rorl
pusha
dec
aam
or
mov
jecxz
cmpsl
repnz
push
cmp
imulb
rorb
jns
and
stc
stos
mov
and
or
push
sbb
out
lahf
xor
sahf
add
or
js
in
ret
or
fistps
les
mov
imul
mov
dec
lahf
outsl
jp
adc
add
and
cmp
insl
mov
call
mov
div
cmp
ds
jo
arpl
rolb
into
inc
fwait
adc
andl
ret
cmpsl
int3
push
pop
sti
sub
push
xchg
jns
rolb
hlt
xchg
int3
mov
push
cmpsb
mov
loop
inc
inc
std
mov
ror
push
cmp
add
stos
mov
inc
into
subl
jg
dec
and
scas
ret
loop
xchg
out
cmp
iret
mov
aas
jb
bound
adc
jg
dec
and
scas
ret
loop
xchg
out
cmp
iret
mov
mov
adc
pushl
dec
and
das
ret
loop
xchg
out
xchg
mov
xchg
fbld
jbe
inc
punpckldq
adc
jg
dec
mov
adc
in
or
dec
xor
icebp
xor
and
adc
add
jno
inc
jno
popa
mov
xor
and
adc
add
icebp
xor
and
adc
add
push
cmpl
and
popf
and
adc
add
icebp
xor
and
adc
add
push
addl
jecxz
loopne
movsl
inc
mov
mov
loope
mov
push
mov
lret
mov
stc
mov
pop
inc
sahf
jp
pop
test
fwait
jno
in
pop
ja
xchg
dec
pop
faddl
sub
sar
nop
or
push
sbb
pop
out
jns
loope
mov
or
enter
in
loope
push
sarl
loopne
cmpsl
cmp
mov
mov
outsl
cmp
mov
fcoml
dec
pop
adc
add
push
inc
xchg
jno
inc
stc
mov
stc
stos
call
popa
dec
popf
in
inc
outsb
enter
and
icebp
rcll
push
mov
lods
xchg
add
inc
dec
jo
test
and
add
or
shrl
scas
xor
and
adc
add
push
addl
xchg
inc
xorl
roll
test
xor
movsb
add
adc
or
pop
rclb
hlt
sub
test
push
repnz
xchg
inc
xorl
xchg
cmp
fcoms
ret
push
lahf
jne
arpl
test
arpl
fs
mov
inc
jno
popa
mov
xor
and
adc
add
icebp
xor
and
adc
add
push
addl
xchg
inc
xorl
roll
shl
inc
dec
push
in
imul
add
pop
push
cmp
rcll
in
das
nop
arpl
imul
cmp
jmp
pop
jge
add
sub
add
mov
js
int
stc
jb
adc
jg
and
gs
sbb
inc
fadd
and
xchg
xor
add
push
jnp
into
and
pop
stc
jbe
push
xchg
in
pop
adc
hlt
mov
ret
or
dec
pop
pop
jmp
mov
sub
cs
nop
das
jmp
mov
pop
add
nop
scas
in
rorb
mov
mov
dec
mov
testb
and
popf
ds
in
or
adc
jno
xchg
not
jge
inc
int
xchg
push
cld
push
fldt
clc
mov
out
frstor
push
pop
inc
rclb
into
or
lods
loop
clc
lods
sbb
cmp
inc
stc
push
out
push
push
cwtl
xor
sbb
imul
xchg
lahf
sbb
stc
loop
test
xor
mov
sahf
xchg
xchg
and
cli
push
jns
nop
pop
add
cmpsb
jbe
js
lret
lret
fiaddl
xchg
aad
int3
mov
push
cmp
jge
and
pusha
pop
xchg
xchg
adc
jno
test
ficompl
jae
int
lcall
repnz
addr16
mov
out
into
xor
adc
std
push
aad
andb
imul
push
sub
mov
ficoms
imul
out
int3
xchg
inc
in
rorb
movsl
call
jns
mov
fisubrl
pop
xor
dec
int3
mov
xchg
sbb
popa
jnp
out
jge
scas
mov
adc
shll
pop
mov
sbb
aad
push
lret
sbb
ret
stos
and
sub
fwait
jp
push
rolb
cmp
mov
fwait
mov
in
sbb
imul
jbe
cwtl
ss
inc
sbb
fsub
pop
cmpsl
subb
mov
adc
cmpsl
je
dec
add
adc
aad
jnp
pop
push
mov
inc
into
cmp
mov
shlb
mov
leave
aas
ret
sbb
es
rcrl
lret
push
mov
adc
inc
test
clc
sub
outsb
or
ret
mov
daa
in
mov
mov
jle
sub
rorb
fsubl
jecxz
mov
int3
xor
fimull
mov
add
inc
and
sub
or
jnp
sbb
cmc
test
je
shlb
arpl
xchg
xchg
es
jl
and
xchg
pop
ja
movsb
in
hlt
push
movsb
push
repz
mov
daa
sbb
push
push
scas
les
insl
imul
mov
lock
mov
mov
shl
xor
xorl
rorb
mov
pop
adc
add
sub
inc
in
daa
pusha
adc
jnp
inc
jo
xchg
push
rcr
jbe
cmp
scas
and
sub
push
pusha
std
xchg
xchg
sahf
push
gs
mov
adc
jo
inc
push
aam
jle
dec
outsb
lock
sbb
add
mov
pop
lea
push
add
xchg
repz
jae
ss
jae
test
icebp
cmp
dec
aad
xchg
es
movsb
sbb
mov
testb
xchg
jae
push
cmp
xlat
inc
stc
mov
pop
bound
lcall
mov
dec
dec
push
xchg
mov
filds
pusha
lret
stos
out
movsb
add
insb
dec
inc
mov
rcrl
add
pop
xlat
or
pushf
jbe
mov
inc
mov
mov
int3
cmp
lret
jno
xchg
addr16
fnsave
push
cmp
mov
dec
mov
pusha
dec
pop
sahf
cmpsl
xchg
mov
in
xchg
setb
popa
sbb
outsl
mov
unpcklps
imulb
notl
fwait
mov
enter
mov
clc
bound
mov
mov
clc
addl
push
daa
mov
inc
mov
xchg
mov
outsb
mov
movsl
xchg
or
frstor
jl
orb
mov
insb
inc
insl
in
jno
outsb
xchg
cmpsl
out
cltd
cli
or
inc
adc
ret
mov
xor
lret
sahf
cmp
ror
fs
cmp
sbb
push
or
into
jns
movsb
mov
mov
add
cli
mov
mov
iret
call
popf
jne
addl
jb
fs
xor
mov
xchg
xchg
adc
dec
sbb
push
fwait
shll
andl
and
mov
addb
mov
ljmp
mov
cld
dec
and
in
cmpl
adc
adc
stos
hlt
jae
iret
mov
mov
fwait
mov
jne
sahf
scas
jbe
roll
aas
pop
scas
adc
mov
mov
xor
mov
inc
sub
mov
ss
insb
ret
xchg
and
or
mov
stos
dec
or
rcrb
scas
sbb
ss
cmp
je
sbb
loopne
les
xchg
lcall
mov
mov
mov
aas
lcall
scas
adc
mov
jp
xor
cmpsl
adc
outsb
mov
xchg
cmc
cmp
mov
fnsave
test
lret
ret
out
mov
jnp
data16
rclb
rorl
jbe
test
push
jnp
sbbb
divb
loopne
push
aaa
and
cltd
cmpsl
int3
cli
lret
rcl
xchg
sub
pop
cmp
sti
test
out
xchg
insb
inc
cmp
sbb
and
lds
arpl
pop
ret
sub
fwait
ret
lods
addr16
loop
sub
cmp
mov
nop
jnp
loope
movsl
into
add
inc
add
les
ja
mov
pusha
clc
testl
bound
add
imul
movsl
inc
pop
cmpsb
mov
pop
add
cmpl
rolb
jbe
sub
pop
test
push
sahf
lahf
and
pushf
xchg
cld
xor
xchg
cmc
test
cmp
divb
icebp
xor
push
fucomi
pop
imul
push
xchg
enter
pusha
pop
or
test
pop
adc
rorl
aad
pop
sbb
stc
and
out
cmpb
mov
lock
stc
inc
hlt
push
mov
ror
mov
xchg
push
popa
mul
cwtl
cmp
hlt
lret
cmc
popa
xor
jmp
jge
shl
adc
xor
pop
push
add
addr16
and
scas
int
mov
bound
jmp
adc
movsb
pop
addr16
std
fstpl
cmpsl
xor
xchg
add
loopne
outsl
or
xchg
lret
sub
mov
add
repnz
test
ja
faddl
xchg
int
push
sbb
aaa
fstpl
fisubrl
fildl
enter
jmp
pop
addr16
sub
es
jge
push
sbb
pop
push
std
and
sub
push
mov
ds
or
mov
lret
leave
push
mov
mov
add
insb
jns
in
scas
push
pop
in
xor
sbb
outsb
jmp
mov
and
inc
pusha
push
fiadds
fdivl
test
sarb
psrlq
data16
insl
bnd
outsl
mov
les
aas
iret
pushf
mov
jg
insl
daa
push
sbb
pop
rcrb
and
mov
aas
sbb
test
js
add
mov
push
ficompl
xlat
cs
out
pusha
loop
les
dec
mov
fxch
aas
inc
js
mov
inc
roll
push
sbb
repnz
ret
pop
mov
into
adc
leave
stos
iret
sub
in
aaa
adc
scas
mov
pop
sbb
and
outsb
js
je
or
rcll
movsl
or
inc
stc
aad
rorb
pop
mov
add
mov
cmp
push
inc
inc
jno
cmpsl
addl
dec
inc
mov
arpl
and
and
cmpsb
jne
dec
add
add
and
push
popa
testl
call
testb
lahf
ja
mov
rcr
enter
add
fs
idivb
pop
imul
mov
xor
cmpsl
pop
jge
je
mov
adc
rclb
out
daa
mov
pop
ret
mov
or
sub
or
aas
push
xchg
sahf
popa
fs
jno
add
xchg
push
test
xor
pop
mov
fs
jmp
and
and
or
cmp
inc
sahf
adc
push
and
testl
incb
and
jge
xor
pusha
rcrb
jge
imul
jmp
xlat
pushf
bound
push
mov
int
fsub
push
fcompl
fsincos
sub
je
xchg
out
out
add
daa
xchg
or
jns
push
mov
out
aas
or
pop
adc
add
loop
sub
int3
sub
aas
imul
add
loope
inc
push
orb
push
bound
fistps
mov
aam
xchg
in
sti
xor
cmp
xor
es
aaa
sbb
jbe
fcompl
xchg
add
dec
stos
pop
xchg
mov
out
dec
stos
cwtl
loopne
rorl
lcall
push
adc
call
xlat
cmpsb
xor
mov
and
xor
pop
out
scas
add
push
inc
jge
push
xor
into
dec
cltd
ja
dec
fucomip
mov
push
xchg
in
inc
and
dec
mov
shrb
bound
push
sbb
jle
jns
mov
inc
pop
fwait
add
pushf
mov
pushf
cli
lods
fstpt
aas
mov
das
lcall
adc
not
lock
push
fmul
es
mov
adc
stc
and
cmpsb
jecxz
adc
inc
test
sbb
mov
adc
jecxz
mov
push
lods
sub
pop
stos
jecxz
movsb
jle
notl
insb
push
and
repz
sti
out
xchg
cmpsb
in
xchg
adc
scas
cmc
jne
jns
mov
mov
addl
xor
inc
loopne
xor
popa
icebp
int
xor
test
and
loopne
mov
sub
in
push
dec
sbb
idivb
mov
mov
gs
dec
push
jge
fdivl
add
fbstp
mov
push
xor
jae
jno
inc
or
sub
xchg
ret
mov
and
adc
idivb
scas
lock
lods
adc
mov
mov
ljmp
mov
subl
mov
mov
xor
xchg
or
pop
out
jae
mov
cli
lock
enter
and
clc
gs
out
push
mov
pop
repz
notb
stos
fimuls
jecxz
inc
sarb
add
ljmp
loopne
cmp
cs
jge
shll
notl
ss
mov
cmp
arpl
das
pop
sub
aaa
in
int3
adc
cltd
das
sets
or
repnz
push
jmp
cmpsl
mov
cld
cmp
lock
mov
mov
cmp
dec
and
stc
jnp
mov
and
sarl
push
pcmpgtw
in
xlat
aad
bound
xchg
leave
int3
outsl
gs
or
leave
push
jno
lret
cmp
subb
jecxz
mov
inc
dec
test
imul
ret
sub
aas
in
std
insb
jge
cltd
divb
rcll
or
xchg
add
loopne
or
dec
mov
jo
leave
mov
or
js
jno
pop
or
les
mov
xchg
fidivl
jno
pop
jae
dec
mov
ret
inc
add
jb
lock
mov
pop
xor
fadd
pushf
test
into
icebp
ds
sub
add
jp
pop
inc
add
mov
dec
out
adc
mov
or
inc
scas
or
mov
dec
adc
enter
mov
mov
sbb
in
jle
xchg
xchg
lods
aaa
aas
cmc
cltd
mov
jle
and
jo
xchg
mov
enter
mov
outsb
rolb
dec
movsb
imul
push
je
fildll
push
push
mov
push
and
adc
fldt
aam
stos
sub
lret
push
call
repnz
xchg
test
cmp
dec
into
add
add
call
aas
aaa
ljmp
gs
sbb
sti
mov
sbb
rolb
xorl
sbbl
fsts
mov
jg
stos
add
cmp
cmp
and
add
add
cmp
push
roll
push
xchg
stos
push
xlat
gs
cltd
mov
sti
jnp
xchg
inc
push
sub
mov
push
sub
jb
mov
pushf
test
sub
xchg
mov
ja
mov
cmpl
mov
imul
cld
mov
and
or
lock
iret
mov
cmpl
add
aad
leave
sub
add
cmp
pop
xor
mov
cmp
repnz
js
pop
icebp
push
add
or
pop
rclb
sbb
mov
cltd
or
adc
dec
pop
addr16
mov
dec
sbb
push
add
outsl
jecxz
pusha
dec
xor
sub
mov
fwait
xchg
jb
out
scas
xor
mov
xchg
add
xor
and
fadds
xchg
aam
inc
mov
inc
cltd
movsl
xorb
and
jns
in
pop
mov
loope
or
mov
out
int
or
cmp
mov
inc
jp
adc
je
lods
sbb
and
jbe
cmp
sub
pop
add
inc
shl
out
dec
push
fadds
sub
pop
mov
popa
ja
or
add
mov
and
jecxz
sarb
cs
into
mov
jg
xchg
and
aam
xor
adc
lods
mov
in
imul
mov
ss
adc
in
out
addb
mov
push
or
inc
mov
ja
in
in
cltd
outsb
inc
outsb
shll
das
mov
outsb
sti
nop
out
jl
xchg
je
sti
mov
in
jo
roll
add
xor
mov
out
sahf
imul
outsb
cltd
loop
mov
cltd
outsb
mov
xchg
ret
mov
addr16
call
cmp
clc
int
stc
xchg
xchg
das
fst
loopne,pt
mov
or
add
pop
mov
mov
sar
pop
push
mov
mov
aad
sbb
xchg
jb
into
jne
xor
dec
ret
mov
fs
subb
jle
mov
cmp
xchg
mov
push
jo
mov
sub
xchg
iret
fisubrl
mov
enter
mov
ja
xchg
mov
mov
pushf
fsubrs
shlb
std
dec
and
xor
cltd
jmp
mov
and
pop
jle
es
addr16
push
add
push
push
cmp
lret
and
hlt
dec
cmp
mov
fwait
xor
mov
dec
je
dec
lods
jl
push
dec
mov
dec
das
pushf
in
pushw
call
out
lock
cmp
repnz
mov
xchg
dec
push
push
repz
fsub
mov
nop
inc
popf
insl
mov
enter
push
cmpsl
and
cmp
adc
lret
in
repnz
mov
leave
jo
sub
push
out
lret
fld
mov
push
inc
ja
das
push
outsb
rcrl
loope
nop
pushf
adc
call
aas
in
out
xchg
cmp
mov
xchg
andl
push
mov
add
leave
push
ds
dec
call
int
mov
sbb
std
and
pop
inc
sub
sbb
or
cs
cmp
xor
divb
mov
loop
scas
test
fisubrs
aaa
dec
jmp
imul
enter
mov
dec
mov
pop
and
and
add
and
cmp
out
pusha
mov
xchg
jge
into
call
loop
inc
and
or
dec
jle
or
into
fcmovnbe
clc
lcallw
imulb
jmp
idivb
jge
xor
or
std
clc
std
sbb
fs
test
in
dec
bound
movsb
pop
pop
cmp
es
xor
jbe
stos
mov
push
ljmp
test
ss
and
dec
adc
lods
fs
addb
mov
sbb
fnop
stos
pop
outsl
mov
mov
push
out
ja
cmp
repz
pop
sbb
sub
jg
lcall
loope
leave
xor
mov
inc
push
hlt
shrl
and
mov
jnp
pop
xor
jle
mov
xchg
mov
inc
ret
pop
jae
pop
sub
rorl
jo
lods
push
cwtl
mov
jbe
add
fimuls
inc
ret
or
cltd
pop
testl
fs
pushf
and
cwtl
sub
and
adc
gs
mov
repnz
jno
lret
mov
adc
enter
jecxz
push
or
scas
jmp
xchg
push
mov
xchg
or
ret
lods
cs
cld
push
lahf
repz
fsubr
call
or
mov
jbe
pop
pushf
lret
xor
stc
std
push
test
pop
aas
or
pop
cwtl
cwtl
dec
repnz
imul
fbld
xorb
outsl
mov
in
pop
push
in
and
in
lods
fnstcw
out
cs
shlb
mov
push
cmpsb
stos
adc
insb
out
mov
loop
fbstp
xchg
fistpll
dec
faddl
and
dec
pop
bound
cmpl
iret
and
aas
aaa
push
push
sahf
daa
mov
pop
adc
push
and
and
shrb
loopne
lea
jmp
mov
or
pusha
xchg
mov
cmp
inc
mov
mov
mov
dec
sub
xchg
testb
sbb
mov
ljmp
cltd
std
js
les
aam
je
xor
pop
mov
pop
or
add
xchg
mov
sbb
xor
mov
push
gs
jle
pop
pop
cwtl
jle
mov
sbb
and
jle
or
enter
push
sti
hlt
in
out
pop
sahf
mov
incl
in
pop
int3
pop
ret
inc
jmp
fsts
ret
pop
pop
jecxz
jae
inc
js
test
xchg
enter
out
dec
loop
push
outsb
jbe
adc
jo
stos
sbb
mov
inc
and
cmc
mov
sbb
test
jmp
add
clc
adc
repz
xchg
mov
jno
mov
push
inc
movsb
mov
ja
shlb
repnz
push
xor
jo
in
dec
iret
rclb
popf
in
push
andb
popf
adc
out
mov
sub
pushf
notl
pop
call
pop
add
and
cmp
xchg
fs
xchg
jo
out
cmc
repnz
sbb
jae
data16
jnp
sub
xchg
sbb
xor
xchg
mov
lock
pop
test
adc
loope
scas
int
jo
jne
jae
adcb
sub
inc
sar
pop
mov
adc
fcoms
or
or
movsl
xor
sub
lds
push
repz
js
xchg
sub
jo
jo
shl
mov
movsb
stos
jl
or
jecxz
ss
add
pushf
test
mov
xor
movb
arpl
iret
data16
out
cmp
pop
test
les
mov
shl
mov
inc
incb
mov
ss
popf
or
out
jns
dec
and
scas
mov
fwait
into
daa
js
or
inc
iret
pop
insl
pop
cmpsl
xor
testl
xchg
and
ror
in
push
cli
sbb
repnz
pop
sahf
inc
pop
push
pop
inc
jno
push
es
jp
in
imul
movsb
xchg
ror
out
cmp
cmpsl
jae
mov
outsb
clc
mov
cmc
xor
int
imul
mov
insb
and
pop
mov
mov
xchg
mov
fidivrs
mov
mov
lock
xchg
dec
jmp
push
jmp
and
adc
add
push
addl
xchg
inc
xorl
roll
shl
loope
rcll
roll
jno
popa
xchg
push
addl
xchg
inc
xorl
roll
shl
loope
rcll
roll
jno
popa
xchg
push
addl
xchg
inc
xorl
roll
shl
loope
rcll
roll
jno
popa
xchg
push
addl
xchg
inc
testb
push
out
cs
ds
ljmp
pop
je
sub
inc
rcll
lods
cmpsl
fst
int
std
in
in
adc
sub
inc
jge
insl
gs
xchg
lea
popf
mov
adc
movsl
or
add
inc
dec
sub
jg
jbe
mov
mov
mov
in
adc
inc
scas
pop
mov
inc
movsb
ficompl
mov
repz
ds
stc
or
mov
mov
fmulp
mov
imul
movsl
and
nop
std
cmc
adc
dec
push
inc
xchg
add
lret
adc
and
lds
in
inc
gs
mov
sub
lea
push
push
pop
and
in
loop
add
sbb
jne
mov
mov
lock
dec
add
sbb
out
mov
dec
pop
call
xor
pop
mov
xchg
cmc
inc
adc
sub
inc
jge
lret
jl
lea
popf
lret
lods
popf
mov
iret
cmc
in
xorl
and
add
sub
sbb
popf
cld
fdivrp
fsub
enter
mov
mov
push
and
sub
adc
or
in
mov
cmpsl
mov
xorb
pusha
pop
push
jle
push
cmp
jge
insl
gs
xchg
lea
fst
int
std
cmc
in
in
adc
sub
inc
jge
insl
gs
xchg
lea
fst
int
std
cmc
in
in
adc
in
ss
push
iret
hlt
add
fidivrs
xchg
and
dec
inc
cltd
hlt
mov
lahf
push
pusha
push
mov
clc
push
ja
push
fcoml
push
arpl
add
int3
ror
stos
push
arpl
rcll
adc
add
cwtl
scas
andb
out
insl
add
stos
and
gs
std
sub
adc
fisubl
daa
mov
mov
mov
pop
fadds
sub
push
xlat
jmp
mov
cmp
dec
or
mov
dec
mov
and
dec
push
dec
push
add
xor
xchg
mov
pop
push
xor
mov
inc
data16
ss
cmpsl
push
pusha
shl
ja
jmp
xchg
push
imul
ficoms
adc
xchg
fnsave
cli
cwtl
inc
pop
add
push
jb
push
jnp
pop
xchg
iret
or
xor
jle
cld
fiaddl
shl
cmp
icebp
pop
repnz
outsb
push
test
pushf
mov
negl
inc
mov
sbb
in
fsubrs
call
icebp
mov
imul
xchg
fsubrl
sub
xor
movsb
hlt
push
stos
mov
fstpl
lods
ljmp
icebp
in
stos
cmpb
scas
lret
xchg
lds
inc
push
dec
or
call
pop
sub
dec
jmp
fnstsw
xor
scas
repnz
idivl
ss
outsl
add
cmpsl
cltd
cmp
jnp
scas
pop
js
test
gs
es
imul
fucomi
loop
pop
stos
push
sbb
push
cmp
mov
inc
inc
fimuls
pop
scas
mov
mov
xchg
movsl
inc
ja
jnp
adc
jb
hlt
loop
loope
hlt
mov
cld
movsb
pop
jb
adc
sbb
or
fnsave
lret
ljmp
negl
xchg
mov
fwait
out
movsl
jmp
ret
sahf
sub
mov
scas
add
ds
sub
inc
push
inc
mov
bound
fs
iret
sub
js
testb
mov
dec
mov
in
je
std
push
jne
dec
and
sti
nop
pop
jno
iret
add
rol
aas
cmpsb
mov
xor
or
dec
pop
insb
icebp
lahf
push
sub
jne
es
popf
xor
push
ficoms
loopew
push
add
scas
sub
popa
or
jecxz
into
inc
packsswb
xchg
jge
and
arpl
xchg
sbb
dec
adc
mov
fs
icebp
dec
pop
xchg
mov
outsb
imul
dec
cmp
insl
loop
enter
popf
out
push
fidivs
add
jno
adc
and
dec
sub
js
dec
inc
cmpsl
jno
iret
je
mov
push
xchg
mov
pushf
mov
mov
inc
adc
and
insl
pushf
fcmovnbe
das
js
mov
test
xchg
lea
lret
andb
rcrb
jl
sahf
dec
iret
push
add
mov
xchg
imul
mov
jb
add
int3
fisttpll
cmp
stos
push
je
mov
xchg
pop
test
or
sub
cmpsb
cs
popa
bound
cmp
fidivrs
loopne
out
inc
repz
adc
ret
frstor
pop
ljmp
lds
in
sbb
xor
xchg
movsb
stos
cmc
shll
cmp
dec
cwtl
cmp
sub
ljmp
ret
pushf
repnz
mov
fstl
jg
pop
xor
stc
dec
mov
movsl
sub
push
pusha
fwait
in
push
jbe
jp
out
inc
shlb
sub
jno
xchg
add
rol
enter
xchg
push
test
pop
xor
cli
fcomip
xchg
pusha
jp
out
mov
dec
sub
push
push
scas
gs
push
test
fmull
iret
fsubr
mov
imul
fs
push
pop
push
adc
mov
inc
mov
pop
sbb
cmpsb
push
loopne
nop
mov
adc
lock
sbb
adc
mov
lods
pop
pop
and
mov
lcall
div
in
lret
xchg
add
or
repnz
xchg
jo
je
dec
into
and
loop
pop
rclb
sbb
fldt
les
js
sub
mov
xchg
mov
push
insl
cmpsb
movsb
or
add
insl
sub
dec
cld
stos
mov
push
push
jo
cld
dec
add
int
bound
cli
in
push
xchg
mov
dec
pop
bound
mov
jl
cmpsl
pop
push
arpl
xchg
and
or
xchg
adcb
pop
jecxz
push
add
fst
mov
mov
mov
repz
pop
movsb
xor
dec
mov
subl
adc
jmp
cltd
aas
imul
fildl
jns
test
in
call
mov
aas
stos
ret
push
pop
jo
sub
sbb
mov
fwait
add
ja
dec
ss
xchg
cmp
out
sbb
andb
pop
sub
dec
int3
jl
add
std
aaa
out
jae
pop
pusha
mov
pop
xor
fsubs
push
data16
rorb
mov
pop
sbb
pxor
ljmp
cmpl
sbbl
mull
cmc
dec
fdiv
xor
dec
out
pop
in
int
mov
and
pop
loopne
fs
mov
sbb
aas
mull
imul
mov
aad
ljmp
enter
inc
push
popf
outsl
add
jae
xor
sbb
subl
bound
inc
cmp
mov
bound
mov
pop
scas
or
stc
lret
fwait
out
push
inc
jnp
mov
push
xchg
push
loope
jmp
idivb
shll
js
jbe
fcmovnb
cmpsl
insb
cmp
mov
pusha
popf
and
in
xchg
add
rolb
cli
in
cmp
test
add
mov
gs
mov
adc
std
add
fisubrs
mov
lret
ss
and
andb
andb
int
xor
jo
jnp
mov
adc
jne
repnz
adc
mov
adc
stc
sub
rcl
jmp
fildl
out
and
push
ret
push
ds
insb
mov
negl
je
cld
inc
pop
and
cmp
ss
inc
cli
in
movsb
movsb
or
sbb
sbb
pusha
mov
xor
fwait
es
push
adc
mov
fidivrl
movsl
jne
and
xchg
cmpsl
inc
faddl
or
mov
pop
or
fdivl
ja
xor
sbb
stc
mov
mov
jecxz
call
xchg
sahf
sub
xor
je
in
lahf
fs
xor
cmp
jl
repnz
out
lods
outsb
test
fs
push
cmp
xchg
fsts
adc
or
test
sub
ja
movsl
lock
sub
cmp
adc
test
in
adc
lds
inc
lods
jb
out
dec
out
mov
stc
cmp
lea
loope
xchg
and
add
je
mov
sub
orl
add
or
jmp
push
test
jle
les
mov
mov
push
cmpsb
test
and
lcall
daa
adc
loop
test
movsb
cltd
cmp
xchg
xor
mov
lret
and
call
loop
sbb
jg
dec
mov
add
bnd
icebp
or
std
shll
je
xchg
sub
mov
mov
mov
leave
inc
ds
or
scas
fdiv
ss
jno
shl
ljmp
sub
push
push
push
das
aaa
iret
push
mov
lret
push
mov
and
xor
cmpsb
pusha
or
cmpl
imul
add
les
xchg
sahf
sbb
pop
push
icebp
pop
sti
aas
idivb
or
mov
adc
push
mov
lret
int
int
test
cld
lret
jecxz
and
outsl
nop
push
mov
lcall
les
je
mov
je
fsubrs
push
js
dec
dec
in
pop
das
pop
dec
fdivs
push
rcl
jno
sbb
push
shl
lret
test
inc
cli
xchg
dec
inc
mov
and
aas
fdivrs
test
pop
mov
popa
cvttps2pi
ds
pop
cmpb
mov
xchg
aam
bound
add
out
loopne
in
frstor
mov
filds
sti
cltd
pushf
sbb
in
in
ds
mov
push
cltd
dec
mov
mov
pop
mov
mov
mov
in
jnp
mov
ljmp
pop
js
test
xchg
mov
or
lock
dec
pop
aaa
mov
xor
mov
or
addr16
in
mov
lods
out
mov
divb
inc
inc
dec
psrld
lret
jns
es
ja
clc
stos
adcl
int3
es
mov
cmp
mov
fsubrp
insb
test
cmp
sub
imul
test
shl
add
pop
add
cmp
out
mov
xlat
imul
lods
es
stc
fwait
imul
cmp
rol
xchg
pop
or
add
in
out
es
jl
adc
scas
insl
jae
inc
insb
imul
lock
mov
dec
hlt
sbb
arpl
popa
push
movl
incb
fdivrs
mov
push
pushl
dec
dec
cli
out
fst
pop
imulb
push
fstpl
dec
jns
xchg
mov
bound
mov
mov
loope
mov
push
rolb
icebp
adc
sub
leave
and
sub
gs
pop
add
clc
and
jge
or
mov
cs
movl
push
imul
je
ljmp
mov
jo
or
rol
shrl
push
mov
jg,pt
hlt
mov
push
test
push
data16
lret
imul
jbe
jge
or
lods
push
rcrb
repz
mov
dec
push
xchg
stos
mov
mov
fwait
repz
lret
mov
cld
fs
fimuls
fwait
sahf
aam
jecxz,pn
and
sbb
pop
adc
scas
cmp
xchg
add
inc
adc
and
add
aam
inc
and
and
lcall
addr16
push
daa
xor
push
ds
adc
xchg
cmp
xor
jmp
add
pop
sub
imul
adcl
sahf
in
push
repz
jae
jg
addr16
cmp
aas
fistps
inc
imul
fcmovu
in
xchg
mov
and
jns
xor
test
test
loop
xchg
or
pop
sub
jo
jno
dec
mov
in
gs
std
mov
pop
xchg
cmpsl
pop
fwait
leave
pop
popa
lods
mov
imul
pusha
dec
mov
xchg
or
fcmovnbe
adc
clc
je
test
mov
movsl
cmp
push
ret
adcl
dec
sbb
push
adc
or
inc
pop
in
sti
xlat
test
mov
cmpb
jmp
pop
sub
cmp
mov
ficoms
push
pop
lahf
pop
cmpsl
hlt
inc
sahf
sub
int3
lock
lds
testb
inc
test
jbe
push
movsb
test
popf
cmp
push
sbb
cmp
ja
daa
push
cmpsl
outsl
sti
lcall
dec
mov
xor
mov
sysenter
push
lods
imul
in
mov
ljmp
add
fsubs
mov
shlb
push
rorl
gs
jmp
rcrl
ds
mov
cmc
sub
push
cld
mov
rcrl
lcall
pop
mov
mov
xchg
jb
or
mov
aam
stos
test
lods
inc
shll
dec
mov
pushf
jae
clc
rol
loop
push
mov
jo
outsl
inc
mov
imul
or
testl
pop
dec
daa
imul
pop
test
cltd
xor
sti
ljmp
dec
fadds
dec
stc
sbb
test
mov
sti
movl
xchg
push
cs
pushf
pop
sbb
clc
jmp
fidivrl
jo
int
test
pop
dec
pop
movsb
push
dec
push
out
je
mov
and
dec
ja
dec
dec
sub
imul
call
lcall
push
sub
push
in
and
out
mov
xchg
jle
mov
pop
jns
das
lods
or
cmpsb
push
xchg
fidivrs
pop
sub
movsl
aas
ret
mov
xchg
lahf
add
icebp
fninit
repnz
dec
xchg
xor
sti
or
cmp
stos
lret
dec
xor
pop
sub
sub
cmp
add
cmp
aam
mov
cmp
mov
xchg
das
sub
push
sub
xor
inc
cmpb
lea
popf
add
cmp
loopne
jno
outsl
xor
loopne
sub
push
cmp
lock
mov
xor
xchg
xchg
xchg
test
dec
in
pop
cli
test
cwtl
mov
xor
lds
mov
adc
aam
mov
xor
mov
fistl
xor
pop
cld
movsb
dec
cli
mov
outsb
push
or
add
pop
lock
lret
rcrb
gs
dec
xor
arpl
xlat
and
hlt
inc
rol
fcoms
xor
movzbl
push
rcrb
mov
cmp
ja
cs
mov
push
jge
std
add
movsb
call
jae
mov
in
push
outsl
hlt
xchg
loop
dec
adc
movsb
aaa
out
jno
xorb
mov
testl
xlat
sbb
add
out
std
arpl
jl
push
push
cmp
icebp
lods
aas
ds
addr16
mov
test
addr16
push
sub
gs
push
mov
mov
push
movsb
dec
fiadds
xchg
stos
enter
inc
scas
into
loopne
xor
jge
pop
aaa
add
imul
cmp
mov
int3
or
pop
mov
fmul
pop
mov
jmp
mov
lds
insl
pop
sub
mov
inc
outsb
int
test
lock
mov
mov
sbb
push
stos
bound
cmp
and
mov
mov
push
inc
mov
push
or
lret
js
test
movsl
mov
sub
and
pop
mov
mov
and
lret
je
jne
add
jae
call
adc
cmp
and
mov
jg
lods
sub
shrb
ja
and
ljmp
lret
fdivs
jae
pop
popa
aas
inc
clc
push
ljmp
dec
iret
inc
jmp
ret
repz
pop
adc
hlt
pop
lcall
loope
xor
sub
lret
adc
jl
push
adc
pop
nop
mov
shl
and
push
mov
out
add
add
pop
or
mov
mov
jnp
aad
fstpt
jnp
inc
mov
mov
rcrb
pop
cwtl
out
iret
sbb
icebp
in
test
test
and
or
sarb
and
push
mov
pop
add
xor
add
jb
fisubrl
mov
fisubl
mov
push
mov
cs
xchg
ja
fucom
les
out
ljmp
and
ljmp
int
out
xchg
xchg
gs
pushf
mov
repz
mov
push
dec
insb
lea
insl
jns
push
cmp
cld
pop
sbb
sahf
mov
mov
sub
int
xchg
push
push
mov
push
and
jecxz
test
lahf
mov
or
out
je
dec
call
or
ss
call
or
sub
fwait
scas
push
mov
adc
jmp
repnz
push
inc
xchg
ss
adc
xchg
inc
and
dec
andb
pushw
cwtl
inc
and
sub
stos
pushf
pushf
push
push
adc
sti
mov
shlb
pop
mov
jnp
mov
pop
fs
jge
pop
inc
mov
scas
add
je
loop
les
dec
sbb
push
jmp
cmc
push
out
sbb
mov
es
xor
inc
adc
les
negb
jg
pop
dec
sub
je
dec
xchg
mov
push
push
sahf
mov
cmpsb
mov
sbb
es
xchg
jno
pop
test
je
ficoml
push
jle
arpl
pop
inc
mov
int
sub
loopne
xor
push
inc
adc
jmp
pusha
xchg
pop
fcoml
clc
sbb
fstps
aaa
add
and
inc
sub
sbb
popf
pop
xor
subl
xor
push
mov
pushf
push
cmp
mov
scas
push
adc
xor
pop
inc
cmp
out
xor
push
ljmp
adc
shrb
in
mov
movsb
push
int
xchg
mov
leave
pop
adc
add
adc
sub
aaa
xor
inc
repnz
push
xor
cmp
fstl
mov
es
cmpsl
cs
lods
add
or
out
imul
inc
pop
fmuls
cmp
cltd
out
gs
sahf
nop
loope
daa
mov
mov
jbe
lods
mul
mov
lock
mov
mov
in
push
lds
gs
ret
jle
jecxz
out
push
scas
add
loopne
cmp
scas
xchg
sbb
or
lods
jle
mov
dec
xor
mov
ficompl
fisubs
fcoms
add
push
pop
out
test
fcoml
mov
or
daa
inc
clc
jle
clc
dec
sub
stos
jle
mov
iret
mov
dec
and
roll
ret
cmc
jb
lock
cld
nop
push
lcall
pushl
mov
aas
pop
cmpsb
push
sub
in
mov
push
add
pop
mov
shrl
cmp
mov
loopne
dec
aaa
iret
push
or
sub
cmpsb
js
jmp
cmp
jns
jp
js
out
jbe
sbb
ljmp
add
mov
pop
dec
repnz
hlt
jne
popf
scas
lret
inc
lods
and
jp
rorl
xchg
mov
and
fwait
ljmp
xlat
popl
fxch
push
adc
ljmp
dec
sbb
lret
push
mov
andb
push
push
shrb
mov
mov
ret
popf
push
adc
repnz
aad
xor
loope
xor
stos
daa
test
dec
pop
ret
rolb
pushf
and
push
and
outsb
cmp
insl
testl
daa
lock
mov
repnz
dec
jge
shrl
xchg
popf
stos
jne
out
pop
stc
fs
xchg
sbb
insb
andb
mov
and
jle
jae
dec
popf
shlb
cmp
decl
movsl
loope
mov
outsb
cmp
ficoml
sbb
aaa
xor
push
dec
ficoml
xchg
mov
cmp
mov
cmp
ret
xchg
ljmp
loop
pop
loopne
pop
js
jne
xchg
push
stos
adc
shrl
leave
aam
leave
jge
bound
testl
movsl
mov
dec
hlt
push
mov
inc
lods
mov
pop
pop
mov
test
js
int
cli
add
push
adc
mov
and
cmpl
jmp
adc
jmp
fldcw
cld
jl
dec
sbb
push
dec
fisubrl
daa
hlt
pop
mov
mov
out
daa
inc
jae
scas
push
push
ja,pn
sub
or
inc
outsl
test
jb
movsl
es
and
test
adc
mov
cmpsl
je
loopne
sbb
jb
imull
ret
mov
pop
jb
cmp
fisttpl
dec
xor
int3
jle
sbb
loopne
add
push
test
push
dec
jmp
sub
mov
mov
or
mov
popf
cmpl
push
ret
xor
lcall
xor
int3
and
xchg
jl
jo
mov
add
mov
inc
aaa
mov
add
add
jle
push
xchg
push
fistl
in
xchg
xor
mov
fisttpll
push
push
sti
into
jg
adcl
sbb
xlat
clc
xor
orl
mov
rorb
lea
cmpsl
pop
mov
cmp
mov
movsl
lcall
repnz
dec
dec
call
aas
inc
pushf
fwait
xor
push
push
cmp
sub
adc
sub
nop
pop
mov
inc
test
hlt
mov
push
shll
mov
pushf
loope
mov
outsb
push
movsl
ss
or
clc
or
pop
rol
inc
pop
sbb
mov
inc
xchg
imul
push
sbb
add
push
int3
cwtl
adc
mov
je
mov
les
xchg
mov
ss
mov
or
daa
das
in
xchg
and
sub
inc
jge
insl
gs
xchg
lea
fst
int
std
cmc
in
in
adc
sub
inc
jge
insl
gs
xchg
lea
fst
int
std
cmc
in
in
adc
sub
inc
jge
lods
gs
xchg
lea
fst
ffree
std
hlt
add
add
pop
push
pop
inc
jge
in
gs
xchg
jb
pop
mov
shrb
or
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lods
add
dec
in
lcall
jl
insb
or
cmp
cs
sbb
or
cld
mov
int3
in
mov
sub
pop
sbb
sub
pop
pop
or
outsb
mov
into
in
cmp
int
fstl
add
insl
imul
push
push
faddl
loop
stos
daa
adcb
jg
pop
sahf
sbb
shl
movsl
pop
sbb
ja
std
jb
pusha
jo
mov
xor
cmp
xor
pop
cmp
or
push
std
xlat
jmp
mov
cmp
jmp
insb
sbb
sub
fcompl
lods
cmp
cld
dec
int3
lcall
fnsave
xorl
cmp
hlt
pop
jmp
pusha
dec
adc
push
mov
xor
dec
cmp
or
inc
push
mov
test
jbe
imul
js
std
mov
rorl
cld
mov
in
mov
fisttpll
dec
sbb
aam
sbb
enter
lret
lahf
fnclex
mov
xchg
ret
mov
cmp
jle
pop
and
sub
insl
fstpt
fsubr
mov
mov
mov
cwtl
loopne
sbb
jo
sbb
pusha
and
aaa
addr16
stos
lret
mov
scas
test
std
lods
int
fisttpll
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
fdivrl
adc
loopne
and
inc
sahf
mov
jo
inc
pop
dec
cmp
mov
adc
mov
rcrl
inc
stos
bound
inc
lahf
jo
in
or
xor
mov
xchg
and
inc
nop
outsl
into
ret
fidivs
adc
inc
and
push
xchg
lar
rcr
fistpll
sti
jle
ja
sub
push
add
cmpsl
loop
cld
cli
mov
aad
stc
mov
movsb
hlt
leave
jmp
test
push
sbb
repz
fdiv
and
enter
aam
fwait
ljmp
out
enter
xor
adc
cmp
insl
enter
push
lea
xor
inc
lods
mov
outsb
adc
inc
add
mov
adc
xchg
dec
push
repz
clc
lcall
repz
mov
cmp
fstpl
mov
les
scas
pop
jl
pop
mov
repnz
mov
ss
mov
pop
sub
dec
or
gs
mov
mov
and
mov
mov
dec
int3
scas
inc
inc
test
bound
and
mov
fwait
pop
inc
mov
les
mov
cmp
xchg
jo
lea
rcrb
stos
rcr
adc
fbstp
sti
jmp
or
popa
shrl
push
sbb
lods
or
mov
addl
outsl
lcall
adc
lds
insl
in
mov
sub
dec
fcmovnb
hlt
lcall
adc
add
push
mov
jns
mov
stos
mov
aas
stc
pop
stos
sbb
iret
adcb
ret
mov
pop
int3
mov
test
pop
in
push
dec
aad
mov
xchg
jne
arpl
shl
shlb
scas
fcompl
xor
push
ds
imul
cltd
pop
nop
xchg
jns
pop
dec
rcll
sub
aas
push
mov
inc
jns
sti
sahf
push
decb
rcrb
lcall
sub
lcall
aad
dec
mov
adc
ficoml
xchg
push
ret
jge
jge
inc
pusha
pop
in
iret
sarl
fists
cli
xor
iret
enter
int
mov
mov
push
xchg
pusha
inc
cmp
mov
sub
stos
mov
dec
cs
out
cltd
or
and
mov
iret
int3
sub
in
cmp
dec
dec
imul
out
inc
or
das
movsb
rorb
icebp
inc
into
movsl
add
shll
sub
out
sahf
icebp
fsubr
lock
ljmp
jbe
inc
inc
xor
push
mov
jmp
bound
xor
icebp
sub
outsb
sahf
stos
lock
mov
pop
add
aaa
jno
sbb
mov
cmc
iret
sbb
adc
fidivl
rcr
sub
push
cmpsl
addl
sbb
das
mov
repz
xchg
xor
and
sbb
popf
xor
popf
das
insl
jne
loope
mov
push
lcall
pop
mov
in
aaa
jl
xchg
mov
shlb
sahf
and
cli
in
movb
push
add
nop
push
mov
cld
repz
xor
inc
dec
jae
je
jbe
cmp
xlat
pop
lret
test
pop
pusha
lods
xor
xchg
mov
fldenv
das
cmp
pop
fistl
pop
out
test
mov
mov
jae
cmp
sbb
lock
or
xorb
mov
push
cmpsl
aas
cmpsl
test
js
push
iret
cli
xor
ficompl
and
mov
adc
inc
loop
jle
mov
add
mov
lods
push
lret
add
and
adc
mov
add
cmp
push
push
out
inc
jns
xor
push
jne
jle
adc
jns
inc
sbb
inc
or
inc
hlt
std
cwtl
icebp
aas
jge
lret
adc
mov
rorl
out
mov
xchg
mov
into
imul
cmp
adc
out
xchg
jo
pop
adc
lods
rcrl
aaa
stos
dec
fldt
xlat
mov
out
adc
cmpsb
mov
mov
lds
cmp
jmp
xchg
fsubr
push
out
dec
fisttpl
xlat
lods
test
daa
subb
fs
xchg
sub
bound
stos
mov
mov
clc
sti
mov
jb
mov
jnp
jno
loop
sub
les
mov
or
mov
mov
jbe
pop
sbb
iretw
pushf
fsubrs
cmpsl
jl
pop
fwait
movsb
mov
add
fsub
jmp
push
xor
mov
outsl
gs
aaa
adcl
push
fstpt
out
cmp
nop
jmp
push
sub
iret
sahf
stc
bound
push
rolb
xchg
ret
jl
sbb
xlat
lcall
pusha
push
xchg
mov
xchg
xchg
icebp
sub
or
dec
adc
aas
pop
jno
cs
cmp
dec
mov
cmp
rcll
cmp
int
xchg
pop
dec
sub
mov
mov
bound
jp
lret
adc
xor
and
lret
inc
cmp
cmp
mov
addr16
in
lods
repz
les
insb
xchg
pop
xchg
scas
inc
jp
out
sbbb
repz
sbb
push
xchg
mov
jns
or
in
cltd
add
push
ja
xor
xorb
inc
pop
jge
or
dec
fstpl
xor
push
xchg
cmp
adc
mov
lret
scas
test
inc
cltd
xor
push
inc
or
sub
or
inc
in
ja
dec
add
testb
aaa
mov
pop
xlat
xlat
adcb
sub
xor
movsl
pusha
dec
nop
sarb
lods
jp
fldpi
xor
lret
adc
loopne
dec
lret
call
add
mov
call
leave
cmp
sar
lea
mov
into
dec
sbb
sbb
mov
sbb
xor
loop
mov
hlt
xchg
mov
mov
ficoml
shl
decb
ljmp
jns
mov
sub
xor
and
push
ficomps
aad
dec
popa
aas
push
fwait
into
push
imul
jg
loope,pt
push
fs
movsl
or
pop
mov
jp
scas
mov
cs
inc
std
mov
pop
dec
lds
mov
pop
out
sbb
test
xchg
in
xchg
mov
adc
xchg
push
pop
loope
icebp
cmp
sarb
sbb
and
aad
shl
mov
cltd
mov
clc
jmp
mov
adc
add
and
jmp
ja
mov
in
inc
lods
shll
std
add
sbb
mov
add
jl
mov
and
inc
add
stos
testb
into
xor
scas
sub
add
or
test
push
fs
xchg
cmp
imul
je
pushf
lcall
leave
aas
dec
cmc
push
insl
imul
inc
sti
dec
mov
ljmp
pop
xchg
mov
cli
push
rorl
divb
jno
sub
sub
in
mov
push
nop
mov
adc
cmc
imul
push
pop
out
and
pop
ret
add
out
mov
call
sarb
mov
push
icebp
aam
add
add
mov
out
ja
push
inc
push
jae
dec
inc
jne
pop
into
mov
ret
dec
mov
mov
pusha
repz
rcrb
cmp
or
test
xchg
cli
lcall
jecxz
cmp
sub
push
shlb
dec
dec
pop
inc
cmpb
test
or
adc
cmp
mov
lods
iret
jl
pop
xlat
push
inc
stos
insl
jg
in
push
sahf
cmpsl
and
dec
fisubrs
cmpsb
push
out
lret
jmp
cwtl
ret
nop
inc
pop
xchg
inc
mov
pop
jns
jae
repnz
mov
sahf
cld
xor
or
dec
sbb
mov
insl
push
test
aad
mov
outsl
shl
add
out
leave
andb
mov
std
dec
sub
test
movsl
jg
jne
push
jmp
jne
lods
fwait
jo
mov
jae
aad
push
pop
xor
es
ss
inc
addr16
adc
into
push
fnclex
ror
pusha
pop
lcall
or
sub
jmp
sub
in
mov
cmp
jg
push
xchg
pop
shll
mov
lods
arpl
pop
shrb
stos
cmpsb
jnp
mov
adc
jmp
and
lock
sub
int3
cmp
mov
pop
rolb
ficoms
pop
fisubl
pop
push
out
mov
add
pop
sub
cli
outsl
pop
call
insl
push
push
outsb
adc
mov
inc
or
pusha
insl
or
jns
and
cli
mov
pop
sub
cmp
or
das
push
lret
es
movsl
test
rcr
jb
pusha
lea
shl
jmp
outsl
loop
imul
cmp
mov
mov
nop
pop
nop
mov
and
movsl
bound
cmp
popf
and
sub
xchg
mov
lods
or
and
loope
sbb
sbb
jno
inc
inc
std
sbb
mov
mov
call
push
stc
xchg
inc
sbb
cmc
cmpsb
sub
lret
mov
pop
sub
hlt
nop
push
aam
mov
cmpl
imul
pop
adc
jne
out
cmp
jo
iret
lea
cwtl
and
and
jae
mov
xor
call
cmp
jnp
cmpsb
cs
cwtl
xor
out
pop
in
inc
pop
push
iret
inc
mov
imul
xor
fcmovne
pusha
mov
mov
xchg
mov
mov
push
or
inc
mov
mov
cmp
je
cli
push
and
fwait
popa
push
jmp
xchg
and
lcall
xor
push
stos
fwait
dec
fcmovu
out
repz
jge
sbb
es
sbb
mov
mov
popa
shl
ja
dec
repnz
inc
scas
out
push
movsb
push
add
stos
int3
mov
into
outsl
adc
cmp
je
insb
and
shlb
or
popf
aam
pushf
movsl
pop
imull
subl
xor
data16
push
ljmp
sbb
in
mov
pop
inc
idiv
push
stos
push
and
mov
popa
sub
daa
pusha
scas
mov
cmp
mov
icebp
arpl
loopne
shrl
dec
mov
mov
test
jae
mov
rcrb
mov
jl
push
mov
add
and
out
enter
mov
test
dec
push
add
cmpsb
pushf
pop
orl
adc
sbb
dec
test
out
sub
xchg
pop
gs
stc
sbb
inc
aaa
ret
xor
mov
adc
jmp
leave
dec
movsl
jecxz
outsb
adc
es
dec
dec
jno
outsb
push
mov
shlb
sub
rol
shrl
sbb
movsb
mov
mov
mov
repnz
and
ja
sarl
adc
and
stos
ds
pop
adc
loop
in
sub
and
pop
pushf
stos
xor
in
addl
sbb
cmpsl
cmpsb
add
pop
pop
sbb
adc
scas
fistpll
push
das
or
nop
repnz
mov
adc
into
dec
enter
daa
movsb
ljmp
push
stos
xor
inc
je
sbb
inc
jmp
adc
cmp
imul
cmp
xor
stos
inc
fwait
mov
fcomp
hlt
aam
push
pop
loopne
fidivrl
xchg
mov
sahf
iret
mov
pop
cmpsl
or
stc
mov
mov
dec
ss
mov
cs
adc
mov
mov
shrb
pop
sub
sub
mov
push
cmp
pop
lods
shrl
js
in
lcall
mov
xor
jle
mov
lahf
cmpsb
cwtl
mov
out
cmp
shrb
stos
ja
mov
ss
jb
adcb
mov
or
cld
and
fnstsw
or
aad
mov
lret
cld
pop
test
repnz
std
ds
aam
mov
sbb
add
xor
jecxz
cltd
mov
add
jno
ret
cmp
xchg
shrb
jg
in
ficomps
lea
push
sbb
xchg
sub
push
or
pusha
xchg
cmpsb
xor
test
dec
xchg
mov
cmpsl
test
subl
and
out
or
sbb
xor
ret
mov
pushf
clc
test
jg
and
pushf
add
inc
jo
xchg
or
xchg
mov
jg
xchg
pop
xchg
ror
lret
mov
mov
insb
aaa
push
lahf
inc
sahf
in
sub
jecxz
cmpsl
fidivrl
mov
inc
daa
sbb
mov
inc
mov
pop
sbb
ja
rol
jb
mov
fsubr
in
xchg
add
mov
pusha
jo
or
in
fimuls
sub
je
arpl
xchg
or
lret
aas
int3
xor
movsl
iret
std
mov
adc
dec
imul
push
lcall
loop
test
mov
cmc
sbb
inc
lea
pop
sahf
push
cmp
inc
lahf
dec
jne
test
cltd
fdivs
fiadds
aad
pop
sub
jae
std
jge
sub
int3
pop
ret
nop
pop
pop
addl
pop
cwtl
test
pusha
xchg
cmp
cmp
cmp
mov
sbb
jecxz
in
xor
inc
rorl
cmp
mov
mov
ss
jmp
xor
sbb
jge
inc
push
mov
and
xor
lods
adcb
jge
mov
mov
xor
sbb
push
int3
or
and
aad
rcrb
addr16
push
and
add
rcrl
lods
in
jae,pn
test
sbb
movsb
cmc
pop
adc
pop
cmpsl
cwtl
data16
dec
lods
xchg
stc
roll
rolb
sbb
xchg
sub
jmp
inc
jmp
movsb
pop
mov
mov
push
xchg
loop
popf
das
xorb
add
negb
inc
xor
dec
popf
push
std
add
dec
js
mov
pop
leave
test
xor
xchg
mov
or
lods
jno
ficompl
jb
lods
xor
pop
sub
pop
sub
mov
inc
sbb
adc
mov
pop
jge
jmp
cmp
imul
sbbl
sub
in
lahf
test
hlt
inc
jge
adc
icebp
push
or
or
sub
imul
jbe
mov
push
push
das
cld
xchg
arpl
mov
mov
cmp
popf
rol
sub
repz
jae
or
adc
mov
inc
jge
std
sahf
les
call
dec
insb
call
sbb
mov
jecxz
outsl
xorps
adc
out
cld
xor
pop
insl
mov
pop
mov
pop
iret
dec
addr16
jle
mov
inc
pop
jnp
xor
nop
repnz
sub
sbb
movsbl
popa
xchg
push
not
enter
sub
jp
jno
mov
fnstcw
sub
mov
es
movb
das
inc
popf
js
leave
ja
shrb
or
adc
push
fnstcw
mov
test
aaa
or
mov
ss
adc
mov
inc
xchg
lret
test
sbb
sbb
clc
punpckhbw
jae
add
cld
add
cli
sub
lret
sub
lods
loop
adc
bound
adc
fisubrs
add
lock
pusha
arpl
outsb
loop
negl
and
add
cmp
cmp
jp
add
pop
decl
out
mov
xchg
sbb
je
mov
adc
xor
in
inc
mov
mul
gs
pop
icebp
add
mov
mov
mov
ficoml
xor
pop
lret
outsl
sahf
bnd
repz
pop
xchg
scas
cmpsb
mov
cld
data16
je
pop
jl
nop
cwtl
sbbb
mov
dec
inc
rorl
fwait
lea
lcall
cmp
adc
subb
mov
cmp
pop
lret
and
sahf
imul
adc
rolb
flds
push
jnp
sub
dec
repnz
jae
cmpsb
push
jp
push
les
addr16
fists
sahf
and
lods
jge
cs
push
das
stos
xchg
insb
in
cli
and
xchg
fiaddl
xchg
pop
cmpsb
in
push
call
dec
sbb
movsb
sarl
pop
out
and
sbb
sbb
pop
mov
dec
test
xchg
ljmp
fcoml
sbb
pop
push
ja
sahf
xchg
ss
popa
push
inc
sti
pop
ds
jecxz
and
sbb
ljmp
jae
stc
aaa
pop
jne
js
push
push
add
jb
loop
jo
sub
add
xchg
xchg
into
das
jecxz
sub
mov
jae
jge
and
clc
xor
testl
ja
dec
scas
cmpsb
das
scas
mov
clc
repnz
jb
dec
pop
xor
mov
mov
inc
out
loopne
fdivs
out
stos
jp
sub
and
or
xchg
lds
jno
jae
or
cld
mov
sub
lds
cmp
je
mov
cmpsl
bound
add
inc
jae
jle
popf
push
mov
lock
mov
xor
add
out
loopne
pop
ja
mov
jnp
mov
jp
imul
push
insb
test
sbb
and
iret
out
inc
and
sub
xchg
dec
sub
dec
mov
xchg
inc
dec
fwait
pusha
lret
aad
call
jmp
sbb
imul
jge
ss
test
cwtl
or
fwait
mov
xchg
add
add
push
jne
xchg
jge
test
xor
in
fsubl
and
and
cmp
nop
or
sbb
adc
not
xor
lock
cwtl
mov
jbe
aas
add
pop
cmp
insl
icebp
mov
subl
inc
pop
add
mov
sarb
add
push
fistps
sub
incb
mov
cmp
mov
adc
cwtl
push
jg
sub
mov
mov
jp
test
ja
clc
mov
repnz
int
cli
mov
or
iret
cmp
sbb
jge
stos
sub
ja
not
xchg
mov
inc
and
add
inc
roll
outsb
sti
sbb
outsl
sbb
mov
aad
jmp
mov
sbb
xchg
outsl
in
inc
mov
jae
sub
mov
andl
aas
jnp
add
xchg
js
arpl
mov
xchg
jae
lods
mov
sti
jno
mov
xor
mov
fimuls
jno
test
xor
cmp
ja
jo
push
or
pop
sti
jns
mov
cmc
call
cltd
mov
sbb
jmp
movsb
test
into
xor
cmpsl
mov
stc
sbb
jle
jb
dec
jne
push
inc
cmp
mov
movsl
icebp
sahf
xchg
ds
xchg
in
push
and
sbb
and
push
lahf
adc
stos
addl
ljmp
aam
adc
test
cmpsb
mull
sahf
pop
mov
or
xchg
or
mov
and
xchg
dec
pusha
dec
sbb
fucom
cltd
roll
xlat
dec
sub
inc
cmp
ja
and
int
out
adc
adc
iret
int3
and
cmc
lret
adc
mull
xor
add
cmp
or
jae
mov
testl
mov
sub
push
pop
cmp
andl
xchg
and
scas
add
mov
mov
sbb
jnp
fdivr
jmp
cwtl
loope
fisttpll
ret
clc
pusha
dec
popf
outsl
in
adc
lods
pop
das
mov
push
loopne
cmp
ss
dec
push
test
adc
fisubrl
dec
pop
test
dec
lock
mov
xchg
xchg
xchg
adc
shlb
mov
xor
xorl
mov
dec
mov
sub
xor
lods
fbstp
fs
add
add
fs
pop
in
mov
aam
mov
into
enter
jae
sbb
xor
xor
cld
or
pusha
xor
movb
daa
test
orl
cmp
push
adc
push
repnz
iret
out
aaa
mov
jp
shlb
mov
test
lahf
adc
add
mov
pushf
add
loope
sub
adc
sbb
leave
pop
sub
fsubs
push
imulb
or
inc
mov
stc
pop
lds
insl
imul
arpl
test
add
sahf
repnz
push
std
lds
icebp
inc
sti
sub
movsl
mov
popf
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
sub
sbb
or
cld
mov
int3
in
mov
fisttpll
pop
sbb
insl
cmp
sub
cmp
or
cld
mov
int
mov
pop
mov
add
cmpsl
pop
sbb
shll
pop
xor
inc
rclb
leave
push
in
in
and
pusha
stc
push
repnz
shlb
addb
clc
loopne
rolb
push
mov
mov
cmp
loop
bnd
inc
shlb
mov
addb
sub
pusha
mov
fadds
and
adc
jp
or
jo
or
mov
jl
addr16
mov
shlb
adc
lret
xchg
addl
cmp
jp
mov
cld
popa
mov
call
aaa
pop
mov
hlt
sbb
stos
xorb
fbld
sbb
cmp
ror
in
mov
loop
ret
mov
dec
jecxz
pop
push
mov
cwtl
jb
inc
xchg
push
mov
pop
add
xor
inc
cmp
and
add
mov
das
mov
and
aam
enter
xor
ret
enter
shll
jne
loopne
das
aaa
cmpb
jns
mov
inc
mov
push
outsb
adc
ret
out
loopne
shlb
lods
push
mov
in
nop
add
addb
pop
out
push
sahf
ds
adc
xchg
sbb
fiadds
loope
adc
and
testb
and
xor
xor
fnstenv
pusha
cld
imul
dec
andl
xor
in
inc
mov
out
loope
adc
xchg
mov
outsb
mov
adc
pusha
repnz
ret
xor
add
rolb
push
mov
mov
adc
pusha
repnz
ret
xor
add
js
lahf
mov
lock
in
xor
lahf
inc
movsb
inc
mov
jg
mov
stos
call
add
inc
ret
push
loop
out
dec
push
test
mov
xchg
ret
pop
and
xorl
imul
push
lods
sbb
xchg
mov
mov
mov
pop
leave
mov
xor
inc
xlat
in
jb
pop
jnp
insl
insb
push
jb
add
sbb
dec
fstpt
add
mov
sub
ret
inc
ss
or
push
test
jge
and
into
imul
lods
xor
xor
js
pop
lahf
adc
ret
sbb
pop
icebp
jecxz
inc
inc
in
testl
or
sbb
inc
add
jp
ret
xchg
lahf
mov
scas
mov
aad
lahf
dec
push
pop
fistpl
in
cmovnp
mov
xchg
adc
xchg
inc
fldcw
lds
fwait
call
fdivl
mov
fsubl
jno
jns
ret
ficompl
enter
arpl
je
test
push
jge
in
push
jecxz
adc
xchg
popa
popf
xor
fwait
cmp
or
jne
add
leave
jmp
dec
rcll
dec
mov
mov
aaa
mov
mov
add
cld
out
push
pop
pop
jp
cmp
pop
sbb
std
xchg
xor
fdivrl
or
pop
inc
and
mov
mov
sbb
push
mov
adc
pop
dec
adc
cmp
mov
push
fwait
lods
aam
mov
mov
clc
cltd
xor
add
lahf
pop
sub
lahf
or
fld
iretw
mov
decl
mov
dec
pop
popf
out
dec
mov
push
movl
jne
jb
push
shrb
negl
fwait
xchg
repz
sahf
enter
jge
mov
push
mov
call
fidivrl
test
inc
fucomip
fs
xchg
pop
push
repz
and
aam
mov
cmp
out
xor
int3
test
push
dec
movsb
mov
js
inc
inc
jns
xchg
jmp
push
pusha
scas
mov
and
repnz
idivb
daa
pop
es
pop
clc
popf
insl
and
ljmp
fmulp
sbb
lock
cmp
push
movsb
push
cmp
sbb
and
push
mov
lds
add
ljmp
pusha
sarb
mov
cwtl
dec
outsb
cwtl
inc
fwait
mov
cwtl
leave
stos
jmp
or
xchg
xchg
rclb
inc
sbb
jmp
sbb
call
std
in
inc
inc
lds
mov
lahf
mov
xlat
aad
mov
push
cwtl
dec
push
jne
add
stos
and
in
pop
jo
out
lret
repz
add
fbstp
mov
out
bound
in
lds
or
jl
mov
mov
mov
test
cmp
cmp
jecxz
clc
cmp
inc
es
cmpsl
cmpsl
cmpsb
aad
jl
lods
test
mov
xor
mov
mov
jno
or
push
test
ja
dec
clc
mov
xor
mov
iret
test
fs
loopne
hlt
popf
jl
and
test
jno
mov
xlat
push
push
lahf
ds
js
adc
out
ret
loopne
sub
dec
inc
mov
xchg
loopne
es
push
jmp
push
and
je
push
lcall
jnp
in
bnd
ret
pop
mov
inc
or
nop
push
pop
das
pop
sub
sbb
dec
jae
loop
dec
js
scas
push
loope
jae
xchg
clc
dec
stc
stos
mov
jne
test
jae
push
test
xor
test
xchg
jne
sub
mov
mov
xchg
pop
dec
push
popa
stos
stc
mov
xchg
in
jnp
stos
xor
mov
imul
popf
jbe
insl
xor
push
and
add
movsb
pop
ss
dec
xchg
add
movsl
inc
jle
incb
add
and
xchg
loope
aam
mov
add
mov
xchg
out
aad
imul
inc
out
repz
pushf
push
int
repz
xchg
je
pop
dec
mov
pop
sbb
xchg
arpl
into
movsb
sub
mov
aaa
xchg
or
loopne
xor
cmp
or
loop
insb
mov
fisttpl
xor
les
add
je
test
enter
inc
add
or
movsl
rcll
and
sbb
pop
cmp
leave
mov
in
stc
mov
test
daa
push
pusha
scas
in
aad
repnz
xlat
mov
fisttpl
xchg
and
aad
or
lahf
push
and
lods
mov
roll
lock
out
jp
inc
mov
inc
cmp
mov
sbb
cli
pop
nop
imul
lock
icebp
push
inc
pop
mov
and
add
popf
lock
sbb
insl
cld
sub
xor
dec
sub
inc
jp
out
pop
out
fidivrl
mov
mov
std
jnp
dec
xlat
sysenter
inc
mov
dec
push
test
xor
jmp
sbb
xorb
test
mov
shll
inc
mov
xchg
fiaddl
fisubrs
stc
inc
push
data16
cmp
mov
pusha
pop
idivb
out
cmp
jp
iret
lods
clc
je
jno
push
xor
cld
pushf
pop
aas
data16
xor
fcomi
loop
jnp
and
mov
cli
lret
stos
sub
add
push
test
pop
ljmp
add
mov
xlat
mov
jp
fsubr
adc
inc
inc
pop
in
xor
push
inc
outsl
xor
dec
dec
dec
push
lahf
pop
out
jae
addb
data16
scas
mov
fsubs
test
in
inc
ficompl
sub
pushf
lods
mov
loope
xchg
les
repnz
ss
push
lds
jno
fnsave
and
movsl
xchg
bound
rclb
pop
mov
lret
shl
out
rcll
cs
jns
sahf
push
inc
mov
cli
int
cmc
cs
pushf
outsb
xor
rcrb
leave
push
jge
pop
fstpt
fidivrs
jns
hlt
xchg
sub
aad
cmp
pop
dec
mov
mov
rcrl
mov
arpl
cmp
pop
ret
xchg
pop
add
cwtl
mov
push
jne
mov
lret
ret
sbb
test
jae
and
insb
mov
xor
or
outsb
jp
mov
mov
xchg
or
dec
mov
xor
pusha
push
xor
inc
popa
or
jbe
inc
mov
pop
cmp
insl
lock
rcll
jo
insl
mov
mov
scas
push
test
and
je
xorb
out
cs
pop
in
sub
jae
mov
add
cmp
pop
sar
cmpb
inc
test
std
dec
fsubl
fiadds
sbb
mov
or
xor
dec
sub
dec
add
subb
orl
test
cmpsb
ds
scas
js
stc
and
iret
pop
minps
into
jbe
loop
aaa
or
xchg
adc
fwait
das
and
dec
jnp
movlps
inc
imul
xchg
xor
in
rolb
outsb
cs
stos
jecxz
push
push
daa
adc
cmp
insl
cs
xlat
dec
jae
mov
mov
mov
les
mov
stc
jg
push
pop
cmp
mov
xor
icebp
in
push
push
insl
cs
xor
lahf
aad
stc
enter
xchg
sub
lea
jne
test
les
out
rdtsc
bound
and
cmp
sti
mov
add
jnp
sbb
xor
enter
sub
mov
mov
mov
repz
push
into
imul
mov
out
enter
aas
xchg
xor
mov
insb
fisttpll
rcrl
sub
or
sub
pop
and
enter
nop
mov
add
movsb
or
shlb
test
popa
mov
cmp
movsl
inc
cmp
in
jp
jp
cmp
dec
loop
xchg
shrl
fstpt
or
ffreep
xor
shr
popf
out
lods
push
xchg
jns
add
mov
stos
clc
push
add
cwtl
inc
jmp
pop
shl
int
cltd
data16
sub
int
lea
and
das
cwtl
lcall
lret
or
mov
in
inc
movb
iret
mov
mov
loopne
shlb
mov
jecxz
xor
outsl
xor
xlat
mov
cmpsl
pop
dec
pop
and
or
dec
or
pop
lds
jmp
lret
mov
add
mov
dec
sbb
das
mov
ja
mov
sti
add
mov
sbb
sbb
pop
mov
nop
push
aas
ret
mov
cmp
cmp
jp
and
ljmp
sbb
push
dec
add
or
insb
pop
pop
out
xor
not
and
and
xchg
aaa
data16
and
je
popf
sahf
in
inc
inc
mov
or
dec
test
inc
xor
sub
loopne
mov
sbb
cmc
and
jnp
sahf
mov
jle
scas
xor
mov
hlt
mov
push
inc
stos
bound
imul
pop
adc
sub
lret
fs
addr16
rorb
and
pusha
xor
js
xchg
dec
int
fistpl
pop
cltd
shrl
cmpsl
pop
push
inc
in
xchg
pushf
decb
imul
sub
fistl
repz
orb
xlat
test
mov
rorl
adc
aas
ljmp
pop
notl
jno
nop
pause
fcomip
mov
mov
out
push
or
leave
out
lods
and
inc
inc
fildl
insl
loope
mov
pop
mov
pushf
ljmp
push
repnz
js
notb
inc
push
xlat
out
mov
push
insb
sbb
pop
inc
and
aam
inc
rolb
cmp
ss
es
sbb
push
popf
inc
or
xchg
cmpsb
mov
cmp
push
push
mov
pop
or
lds
popa
mov
fdivl
xor
push
mov
sbbb
es
sbb
add
test
fstps
mov
fsts
jp
or
out
mov
cli
inc
adc
sub
pop
pop
movsl
jns
pop
mov
adc
les
xchg
scas
sub
loop
pusha
pop
stos
push
cmc
mov
pop
add
pop
pushf
arpl
mov
mov
mov
dec
xor
sahf
xchg
into
rorl
faddl
in
out
xchg
mov
mov
inc
xor
push
outsl
jg
jecxz
out
mov
sbbb
mov
push
pop
xchg
movsl
dec
pop
add
dec
rcrl
sub
int
pop
mov
xchg
shlb
xchg
aam
call
scas
or
pop
lods
out
xlat
xchg
repz
sub
jo,pn
push
lock
mov
add
jmp
cmp
add
test
fidivl
flds
add
mov
add
imul
mov
test
cmpsb
adc
cmp
sbb
mov
sbb
les
repnz
inc
sub
outsl
mov
dec
mull
mov
and
movl
in
jp
or
mov
xchg
adc
loopne,pt
fisubrs
bound
leave
lret
out
fisubrs
adc
movsb
mov
shr
jae
jns
insb
mov
in
xchg
shll
aam
decb
bnd
loopne
add
pushf
ror
add
lret
or
sbb
lods
pop
push
xchg
fnstsw
mov
add
je
js
mov
mov
mov
xor
or
imul
or
pop
and
sbb
repnz
mov
std
clc
fnstenv
push
ss
push
out
inc
fcomi
mov
sub
out
xor
nop
mov
ja
rolb
aas
mov
out
dec
sbb
cmpsl
jne
in
fwait
cmpsb
cmpsl
sub
pop
stos
push
lods
jg
inc
pushf
push
shlb
test
cld
ljmp
or
sub
dec
jg
test
and
stc
hlt
or
inc
clc
inc
lea
in
sar
mov
sbb
int
gs
push
jns
or
push
in
dec
push
add
outsl
lods
xor
sbb
mov
cltd
push
loope
fbld
loopne
mov
nop
loopne
add
scas
xchg
lods
cmp
inc
and
pusha
sub
adc
lods
pop
in
movsl
dec
iret
or
inc
fwait
test
sub
hlt
iret
push
add
test
stos
inc
jno
pushf
mov
fsubr
jns
out
inc
jmp
imul
mov
insl
lahf
loope
xchg
dec
mov
jns
scas
mov
int3
xor
jecxz
test
mov
jecxz
jle
add
std
ficompl
push
mov
jg
xor
jle
sub
ja
mov
xchg
adc
pusha
cmpsl
add
mov
push
cmpsb
mov
repz
shll
push
and
insb
stos
inc
inc
and
arpl
add
lret
dec
das
aad
dec
add
pop
bound
inc
sub
addr16
pop
icebp
inc
and
pop
xchg
jmp
in
setns
jl
jae
xchg
rcll
fsubl
mov
adc
je
adc
and
pop
inc
push
orl
sbb
push
sbb
mov
add
mov
shlb
popa
sub
iret
mov
push
inc
sub
ja
and
movsl
mov
fsubr
pop
pop
xor
sbbb
xor
rcrl
stos
bnd
shlb
test
in
hlt
call
shll
icebp
adc
fcoml
repz
test
push
rcrl
pop
push
pusha
outsl
adc
inc
aam
push
and
rcrl
xlat
or
sti
mov
and
adc
outsb
scas
and
xacquire
aas
popf
insb
inc
sbb
loop
inc
call
xor
fists
xor
push
xchg
adc
cmpsb
pop
fcom
jbe
xchg
push
aas
movsb
repz
shll
lock
or
cmp
mov
repz
xchg
inc
call
adc
inc
lcall
inc
and
std
fs
pusha
pop
rol
mov
out
dec
mov
ret
out
pushl
push
sub
ret
out
js
sub
outsb
popf
divl
imulb
jp
xchg
jge
rcrb
pop
fsub
add
xchg
or
mov
jecxz
loope
mov
jbe
and
adc
add
push
jmp
pop
xchg
clc
psllw
jo,pn
pop
dec
sub
mov
add
mov
push
jbe
mov
jae
pop
enterw
in
sbb
aaa
pop
movsb
mov
pop
lcall
bound
adc
push
dec
lret
push
xor
fwait
lods
mov
xor
popf
pop
neg
sbb
xor
jp
dec
sahf
cmc
imul
adc
cmp
xor
dec
fstpl
xchg
and
test
dec
das
fcoms
or
sub
ret
aad
es
aad
add
push
imul
xchg
sub
lret
xchg
pop
andb
out
test
adc
sbb
inc
xor
jne
cmp
aaa
jne
in
mov
and
add
mov
js
cmpsb
cli
jne
adc
loop
popf
xor
outsb
pop
fldt
cmpsb
push
mov
int
inc
cmp
scas
pop
fwait
or
push
pop
imul
jecxz
and
pop
lcall
lret
lcall
pop
pop
or
sbb
ljmp
or
test
add
addl
fisubrl
mov
sbb
mov
enter
cmp
movsb
fnstenv
push
pop
sub
gs
in
aam
comiss
gs
or
es
lods
sub
push
pop
sbb
nop
mov
cmpsl
sti
subl
pop
pushf
cwtl
xchg
inc
xlat
mov
or
inc
ret
inc
sti
inc
sbb
and
imul
lock
add
pop
aam
sbb
arpl
adc
cmpsb
les
ss
aam
dec
sbb
cli
mov
das
in
pusha
insl
insl
addb
xorb
push
mov
or
pop
dec
orl
pop
int3
sbb
add
jae
cmp
or
lahf
jp
dec
leave
jne
sbb
cmpl
shlb
sub
addr16
out
mov
je
enter
das
nop
jbe
leave
mov
mov
mov
push
aam
cmp
inc
cmc
xor
xchg
or
xchg
scas
xchg
adcb
les
cmpl
adc
sahf
rcrl
out
cmp
inc
stc
sahf
xchg
mov
movsl
and
or
aas
mov
sbb
in
int3
dec
pop
add
aad
inc
shl
fs
cmp
and
jae
call
stos
pop
shrb
shll
jmp
mov
pop
jb
xchg
pushf
mov
insb
popf
xchg
mov
mov
test
dec
daa
sbb
dec
cmc
xlat
in
daa
jae
fimuls
mov
inc
stos
adc
mov
cwtl
scas
jb
movsl
mov
push
jge
adc
inc
and
mov
sbb
sbb
dec
add
sbb
dec
jbe
cmc
outsl
and
pop
jecxz
dec
imulb
jne
push
lods
push
roll
xchg
jmp
cwtl
pop
xchg
repz
xor
loop
movsb
add
cltd
es
mov
arpl
and
gs
mov
pusha
out
int3
call
lcall
outsb
adc
out
sub
jmp
fwait
dec
stos
iret
fwait
push
sub
cmp
mov
insl
xorl
mov
push
outsl
loopne
pushl
adc
push
lds
ja
ret
add
decb
xchg
cmp
inc
andb
fisttpll
out
lahf
ret
sub
aas
pop
and
and
jp
lods
add
xchg
dec
stos
xchg
rcl
scas
xor
es
jno
mov
lcall
push
jb
jne
popa
xchg
dec
adc
bound
mov
and
imul
push
push
mov
xor
sub
sbb
lret
adc
dec
add
lcall
mov
sub
ror
push
loop
dec
and
pushf
push
into
mov
leave
pop
push
enter
inc
fwait
jne
movsb
push
xchg
in
inc
leave
dec
push
into
mov
inc
dec
out
add
in
pop
add
in
inc
outsb
push
mov
and
jae
jmp
jle
sahf
pop
in
lret
icebp
sub
daa
mov
push
pop
xchg
icebp
scas
ss
popa
add
jg
cmp
in
push
sub
push
repz
scas
mov
jp
inc
xor
in
xor
mov
addr16
adc
lods
imul
cwtl
in
cli
gs
lcall
adc
or
lahf
jae
push
sar
pop
loop
sarl
lods
xorl
inc
xchg
mov
mov
loopne
sub
rcr
dec
pop
insb
sbbl
push
outsb
popf
xchg
add
mov
or
enter
notb
pop
mov
and
pop
outsl
push
cli
push
and
shlb
popa
mov
cmpsl
pop
push
and
mull
add
rolb
into
into
mov
xchg
test
xor
pop
mov
adc
enter
in
decb
ja
dec
lock
xor
push
push
dec
jecxz
lods
cli
fldl
insb
dec
clc
aas
scas
adc
xchg
loop
pop
inc
sub
push
xor
push
shlb
imul
dec
inc
les
cld
repnz
mov
repnz
sbb
ret
add
xchg
mov
negb
mov
popa
jp
pop
incl
adc
or
mov
add
js
or
or
arpl
pop
in
aam
pop
nop
dec
pop
enter
popf
mov
sbb
mov
push
adc
mov
insb
mov
fdivrs
dec
das
fldt
jmp
sub
xchg
pop
push
iret
icebp
clc
and
imul
sbb
jae
pop
dec
loope
or
push
pop
mov
insb
mov
jmp
bound
je
pop
adc
fcoms
lods
sub
in
jmp
jne
pop
or
fmull
dec
pop
or
inc
scas
push
lea
gs
sahf
jb
or
cmpsl
int3
adc
addl
push
stc
cs
xchg
loop
dec
ror
adc
ror
push
clc
daa
sbb
bound
insl
and
mov
mov
or
loope
pop
test
cmp
nop
stos
fisttps
cmp
decb
dec
testb
sub
in
lods
jb
inc
fcoml
and
adc
pusha
repnz
ret
xor
add
rolb
push
mov
mov
adc
pusha
repnz
ret
xor
add
rcrb
mov
movsb
pop
nop
push
adcl
pop
ret
xor
xor
xchg
xchg
pop
cmpsb
call
xor
sbb
inc
movsl
inc
fisubrl
ljmp
stos
xchg
lea
lock
or
add
or
add
test
add
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
test
add
add
add
add
add
add
add
sub
dec
add
add
add
add
add
iret
add
add
add
nop
add
add
add
add
add
mov
add
add
add
add
mov
xor
jl
pop
add
add
push
add
sbb
mov
add
add
xchg
jl
aas
add
add
add
add
sbb
test
loop
mov
mov
cmp
and
xor
out
add
aam
jl
pop
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
stos
add
add
add
add
add
pop
add
pushf
add
add
push
add
add
add
push
adc
mov
rolb
xchg
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
add
add
add
add
add
and
dec
add
add
add
add
add
add
xor
add
add
add
add
add
add
mov
add
add
add
add
add
add
aam
lret
add
outsb
add
pushf
add
add
cmp
or
push
add
add
sahf
add
add
dec
add
add
add
add
inc
add
add
jno
mov
les
mov
add
add
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
iret
add
add
cmp
sub
push
add
add
push
sahf
add
js
xor
mov
add
data16
add
xchg
xchg
sahf
add
add
add
add
pop
add
cwtl
add
add
add
add
add
lret
add
add
aas
add
add
test
add
add
add
add
add
add
xchg
or
mov
add
add
add
lcall
add
add
xchg
add
add
add
add
add
insb
add
ret
add
dec
add
add
add
add
add
xchg
add
add
add
add
js
pop
add
add
int3
add
add
or
add
add
add
add
add
add
jl
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
cmp
mov
add
add
add
add
add
in
lds
sarl
lock
mov
ret
pop
xchg
xor
movsb
notl
das
mov
dec
out
or
sbb
push
in
movsl
add
jb
pop
pop
in
sub
mov
int3
adcb
add
test
sbb
in
lcall
mov
ret
cmpsl
mov
mov
mov
pop
lock
jl
aas
push
sbb
data16
loopne
fisubs
mov
pop
dec
push
insl
roll
xchg
xchg
les
jns
lods
mov
add
mov
push
sbb
cmp
add
push
and
or
jno
jecxz
lods
add
jnp
leave
idivl
xor
mov
push
lods
mov
pop
negl
sbb
pop
frstor
add
dec
push
ja
inc
push
xlat
sbb
pop
jbe
fbstp
jl
fisubs
mov
push
sbb
jb
mov
stc
jg
outsb
das
xchg
push
and
xchg
imul
mov
sub
xchg
xchg
push
icebp
lods
scas
aam
pop
push
push
movnti
popf
or
add
mov
jbe
push
dec
loop
jmp
repz
add
and
jbe
inc
lahf
cmp
int
push
popa
insb
or
jbe
lds
out
pusha
cwtl
jl
pop
cmp
repnz
sub
jo
mull
or
test
out
inc
add
pop
fists
ds
fbstp
and
fldenv
push
repz
xchg
aas
add
ret
or
inc
and
cmp
jns
sbbb
inc
adc
push
loope
dec
scas
negl
dec
jle
pop
sub
les
pop
dec
shll
xlat
jl
mov
int
fmulp
lods
sbb
cli
stc
jne
sub
into
int3
ljmp
mov
mov
icebp
sarb
jp
add
pop
andl
mov
jecxz
outsl
or
lahf
rcrl
negl
ja
xchg
es
dec
dec
inc
pop
cmp
enter
test
insb
arpl
add
and
into
push
push
inc
lock
int
jbe
ret
jne
movsb
test
and
in
mov
pop
and
leave
mov
push
les
mov
movsb
cmp
xchg
cli
add
add
out
xchg
adc
dec
cmp
dec
add
roll
xor
inc
jl
add
cmc
sub
lahf
data16
or
add
test
xchg
popf
push
testl
xor
dec
mov
push
divb
mov
jb
xor
add
lods
lock
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
