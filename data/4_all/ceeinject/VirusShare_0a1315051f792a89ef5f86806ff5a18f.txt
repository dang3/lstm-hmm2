call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
lret
pop
out
dec
incb
mov
cld
mov
push
fstpl
jle
or
jl,pt
insb
ficomps
dec
cmp
sub
sbb
or
cld
dec
in
pop
mov
and
jl
insb
sbb
mov
sub
sbb
or
cld
dec
in
jge
pop
or
pop
lds
pop
jecxz
or
insb
lahf
adc
or
out
aas
jg
shrl
adc
roll
jne
int
sbb
cmp
push
jns
mov
inc
cs
sbb
xchg
movsl
je
stc
cmpsb
insl
xchg
sub
addr16
pop
jns
cld
dec
mov
addb
insb
loop
cli
leave
stc
mov
ljmp
cld
outsb
or
in
lret
sub
pop
sbb
xchg
mov
xchg
sbb
add
mov
or
xchg
insl
cltd
or
les
sbb
mov
xor
fwait
leave
cs
in
in
lret
sbb
inc
adc
data16
pop
popf
ret
and
pop
lcall
sbb
or
cld
dec
in
neg
insb
int3
inc
mov
mov
into
sub
jg
dec
repz
fldt
xchg
or
test
enter
icebp
pop
clc
push
and
add
pop
fmull
sbb
je
scas
das
subl
testl
dec
or
insb
xchg
jge
sub
sbb
or
cld
dec
in
pop
fsubrl
jle
push
lods
push
pushf
mov
jl
insb
ficomps
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jle
push
lods
push
pushf
mov
jl
imul
outsb
pop
clc
sub
call
movsl
xorb
pop
int3
and
scas
xor
xchg
cmp
mov
and
xor
push
jb
and
or
dec
jmp
insl
pop
lret
mov
pop
cs
roll
push
addb
xlat
testb
decb
mov
movsb
rcr
and
in
inc
mov
test
jbe
lods
sub
dec
scas
insl
sub
push
lcall
inc
movsb
gs
add
out
idivb
mov
jo
daa
cltd
scas
adc
sar
pop
mov
sbb
xlat
sub
repnz
js
scas
xchg
cmpsb
outsl
add
mov
movsl
inc
movsb
xchg
or
lret
imull
adc
es
icebp
sbb
cwtl
incb
daa
sahf
dec
pop
and
and
out
dec
rcll
lahf
sbb
repnz
in
xor
adc
or
sub
xchg
fxch
aam
js
nop
and
insl
jp
push
jmp
adc
mov
xor
imul
scas
xchg
pop
daa
aad
push
lcall
jb
inc
es
jnp
clc
fcoml
fidivrl
cmp
inc
imul
pop
cwtl
pop
mov
xchg
pop
ret
arpl
int3
fiadds
pop
mov
lcall
xchg
cmp
push
fidivl
mov
push
test
leave
adcl
dec
cmp
lret
sub
mov
inc
icebp
inc
lock
popf
mov
mov
inc
push
and
clc
mov
or
fldcw
das
inc
les
fptan
and
dec
lds
ret
pop
xor
cs
and
cmp
movsl
repnz
fadds
testl
jne
pop
call
xchg
enter
in
jnp
lcall
mov
rcrb
sub
fwait
mov
add
inc
jns
js
mov
push
jmp
lret
out
mov
sub
jb
add
xchg
lds
add
fldt
and
scas
shlb
mov
sar
pop
sarb
and
xlat
sbb
add
push
push
icebp
push
mov
fisttps
push
insb
std
scas
sub
dec
jmp
js
adc
aad
in
xchg
in
sub
xchg
test
mov
fisubl
lds
out
xor
mov
aas
std
insl
xchg
nop
seto
adc
xor
push
ret
sub
lods
stc
mov
jecxz
sti
cmpsb
js
pop
cmp
lret
rcrb
fisubl
pop
loopne
pop
sbbl
and
rclb
dec
cmp
aad
ja
xchg
add
jg
mov
rorb
push
stc
sub
mov
ljmp
or
in
sbb
ret
jbe
cmpsl
sub
mov
pop
inc
push
pop
les
cmpsl
das
pop
xor
adc
cmpsb
lods
jmp
push
insb
js
sti
sbb
loopne
das
or
push
loope
mov
fs
pop
idiv
jmp
push
in
inc
loope
lods
mov
mov
popa
sbb
sub
xchg
push
mov
cmp
inc
or
negl
sbb
test
mov
es
xor
pop
enter
lret
movsb
sbb
mov
dec
mov
mov
pop
bound
into
and
loop
stc
cmp
jne
sbbl
cld
or
jecxz
or
inc
adc
out
arpl
stc
cmp
push
push
sbb
loopne
decl
or
jp
pop
pop
stc
mov
jae
or
jne
push
cmpl
das
je
sahf
stc
pusha
into
or
fnsave
insb
rol
mov
or
push
mov
cmpsl
mov
cwtl
and
dec
mov
push
ss
jmp
fisttpl
cli
lods
les
adc
xor
mov
mov
in
andl
data16
xor
sbb
dec
popa
enter
sahf
lea
lea
mov
imul
or
jle
insb
and
jg
cmp
dec
fsubl
mov
adc
and
popf
shl
pop
lods
jg
inc
sub
imul
jge
movsb
outsb
mov
dec
and
jmp
cmpsl
cmp
sub
inc
push
cltd
in
inc
add
xchg
test
stos
jo
sbb
scas
popf
flds
inc
jo
adc
rcrb
push
cmp
cmpsb
iret
hlt
rcrb
cmc
loop
je
inc
mov
lcall
stc
les
xchg
pop
in
mov
bound
data16
int
lcall
bswap
data16
into
sub
divl
out
int
cwtl
loope
idivl
inc
leave
in
fcoml
mov
sbb
ret
fisubl
ds
sahf
jb
dec
and
ret
enter
arpl
inc
dec
out
adc
andl
dec
movaps
inc
dec
lods
jmp
es
pop
cli
fsub
into
jecxz
into
cld
adc
lahf
xor
inc
mov
xchg
push
sub
lret
sub
bound
aas
test
int3
xchg
rcpps
push
orl
cmpsb
push
test
and
inc
test
sbb
lret
stc
aas
mov
push
jnp
xchg
push
adc
jg
insb
mov
xlat
roll
adc
nop
push
pusha
movsl
lods
jbe
ficomps
pop
xchg
adc
fisubrl
test
xor
out
jo
in
hlt
sbb
in
insl
in
mov
andb
das
inc
sbb
in
out
aas
and
xchg
stos
push
pop
mov
ljmp
xchg
pop
icebp
inc
sub
lcall
fcoms
mov
sub
jge
mov
sub
stc
and
xorl
sbb
ficoml
out
xchg
dec
and
jp
std
push
jle
pop
push
and
mov
mov
cs
sub
ljmp
sbb
xchg
rorl
inc
popa
repz
outsb
loope
mov
cmp
icebp
pushf
shll
jbe
loope
popa
mov
and
sbb
nop
ja
dec
push
add
sub
add
pop
jmp
arpl
jp
cld
cmp
xor
popf
aam
dec
cmpsb
add
out
pop
sti
jae
adc
dec
leave
pop
in
push
repz
mov
sub
nop
mov
and
stc
movb
movsb
and
test
cmovg
inc
sti
cmpsb
or
pop
rcl
pusha
jne
sbb
out
in
and
sub
jmp
int3
lret
mov
icebp
push
push
push
js
dec
mov
xchg
pop
sbbl
repz
orl
adc
and
inc
pop
scas
popf
and
aam
jge
sbb
inc
out
add
cmc
jmp
push
or
jbe
mov
dec
insb
push
scas
out
jge
into
pop
fdivrs
xchg
mov
fimull
rclb
cld
int3
mov
xchg
imull
call
add
jnp
jb
test
jnp
enter
lahf
adc
out
xor
mov
fnsave
leave
aad
push
jmp
daa
scas
dec
arpl
lods
mov
mov
dec
mov
sub
mov
pop
sahf
imul
jg
cmc
mov
loopne
ljmp
mov
xor
and
pop
movsb
pushf
jmp
loop
adc
xchg
rcr
and
sbb
ret
xchg
or
int
adc
dec
bt
dec
adc
jl
jecxz
mov
push
scas
popf
and
mov
pop
cmp
lret
jecxz
out
cli
xor
in
mov
das
push
nop
push
stos
rcrb
fldcw
or
icebp
inc
popf
ret
rcr
xchg
mov
shl
sbbl
inc
aaa
ret
mov
cmpsl
mov
push
sub
aad
sub
jo
push
pop
cmp
add
pusha
xchg
inc
push
insb
mov
xchg
and
aas
inc
push
push
mov
jg
aam
ds
push
movsl
data16
js
adc
add
insw
mov
jecxz
pop
jge
inc
jno
push
adc
mov
ret
or
sti
mov
lret
add
faddl
imul
int
xor
nop
movups
mov
mov
xor
sbb
bound
popf
and
dec
mov
mov
inc
cld
xchg
cmc
push
in
cmc
testb
push
popl
or
push
cmc
loop
xor
arpl
mov
fcompp
mov
sub
ret
push
arpl
mov
push
test
cmp
cmp
push
adc
cmc
xchg
in
dec
pop
mov
dec
jg
add
cltd
push
sbb
or
jmp
in
sbb
adc
and
mov
sbb
ljmp
outsb
push
mov
scas
outsl
clc
inc
dec
vmovlps
push
xchg
xor
je
adc
lea
js
js
repz
cli
cmc
nop
mov
mov
xor
add
loope
shrl
pop
shl
cmpsb
lahf
mov
rcr
call
bound
xchg
and
mov
ss
enter
es
mov
push
movsb
loop
outsl
or
hlt
imul
xchg
or
jmp
and
loop
sbb
out
xchg
out
sbb
pop
lahf
xor
loope
cmc
imul
les
jbe
es
mov
mov
dec
in
ret
nop
sahf
popa
and
or
mov
aad
insb
or
add
repnz
and
loop
cmpsb
lods
mov
rorb
stos
fnstenv
roll
sti
loope
sub
mov
pop
jo
pop
sbb
mov
fisttps
sbb
add
jecxz
cmp
cmp
orl
pop
incb
fwait
sbb
test
insl
push
jno
je
inc
idiv
adc
adc
push
lods
sbb
daa
dec
or
leave
fiaddl
dec
sub
mov
cmpsl
push
mov
icebp
dec
outsl
fsubrl
cld
or
mov
lret
fs
jns
lahf
pop
mov
push
mov
pop
daa
jmp
mov
mov
add
jno
rolb
ds
pusha
movsl
sti
add
into
test
ljmp
ret
cmc
pop
and
insl
or
cmp
xchg
mov
xchg
mov
call
xor
stos
jb
lea
rorb
leave
mov
jnp
xchg
inc
cmpsb
rorb
aas
pop
mov
mov
lret
stos
mov
out
popa
aas
jne
inc
sub
mov
leave
dec
bound
gs
lcall
mov
cwtl
out
dec
xchg
mov
stc
leave
pushf
scas
rol
dec
inc
sbb
xor
pop
sub
fidivl
scas
xchg
daa
les
mov
or
iret
jp
out
in
jnp
dec
aam
rclb
daa
pop
adc
aas
mov
repnz
sub
mulb
call
and
and
in
jo
or
jl
pop
vunpckhps
es
ror
xchg
loopne
ljmp
add
in
loopne
jl
xor
clc
adc
add
or
ret
mov
dec
mov
push
dec
adc
fstpt
push
lea
jecxz
sti
or
xchg
adcb
in
rcrb
mov
mov
call
scas
and
push
or
mov
stc
add
out
arpl
and
fwait
sbb
leave
aam
cmp
fwait
lods
jno
mov
sub
mov
add
cwtl
cmp
roll
or
mov
jns
outsl
subb
arpl
xor
daa
into
cmpsl
gs
les
pop
data16
ss
out
jecxz
or
out
sbb
mov
mov
sarb
jp
lahf
push
xchg
pop
es
out
repnz
cli
aam
sub
iret
pop
dec
stos
jns
hlt
inc
leave
sub
jg
mov
xor
jo
cmp
addr16
mov
clc
lods
rolb
scas
ss
pop
xchg
les
clc
sub
daa
jo
mov
dec
fsubs
xchg
fwait
xchg
and
out
mov
ja
lahf
repz
sub
xchg
jg
mov
test
xchg
sbb
in
add
movsb
mov
movsb
lds
sbb
push
outsl
cwtl
shll
pop
adc
inc
jb
lea
insl
lods
jb
inc
cmp
arpl
cmp
fisttpl
sub
xlat
das
in
sbb
xchg
in
das
sarl
jno
pop
push
xor
outsl
dec
cmp
adc
ficoms
cmp
pusha
iret
shl
inc
xor
fnstsw
xor
pop
mov
int
pop
js
bswap
rcrb
orl
and
xchg
daa
sbb
adc
jge
notb
or
dec
or
fsubs
out
imul
lea
inc
xor
mov
mov
inc
and
inc
sub
pop
pop
jl
int3
cmp
fcmovnb
aam
xchg
pushf
addr16
imul
cld
ret
movsl
sub
mov
add
fldcw
push
pop
and
dec
mov
cmp
cld
ss
scas
or
push
inc
cmc
std
adc
fs
push
mov
adc
loope
popf
sahf
mov
dec
out
data16
in
gs
dec
in
cmp
push
sbb
mov
sahf
mov
or
mov
jl
aad
xor
dec
pop
movsb
jmp
mov
add
mov
dec
jmp
add
cli
mov
scas
push
test
out
ds
add
repnz
lret
mov
add
rorl
in
insl
lock
xlat
dec
or
rcrl
sub
scas
pop
mov
dec
sub
dec
mov
xchg
add
int
push
scas
cmp
cs
xor
push
pop
imul
int3
test
push
or
scas
xor
lret
cld
xlat
dec
and
jae
pop
shll
adc
sbb
or
jns
add
incb
adc
add
xchg
int
leave
or
fmull
jl
mov
dec
stos
in
mov
mov
push
outsb
pop
mov
in
repnz
push
lret
dec
sarl
stc
scas
adc
ret
stos
add
out
sbb
lret
stc
dec
pop
pop
dec
jge
mov
pop
inc
loop
push
jmp
and
jl
inc
lret
insl
sub
imul
and
xchg
sbb
xor
insl
sub
lret
mov
mov
xor
outsl
cmpb
mov
mov
sti
mov
mov
and
aad
lret
sbb
fsubr
lcall
icebp
addl
aam
jo
repz
repz
jbe
scas
cmp
add
push
fstps
or
jne
xchg
out
cltd
pop
jl
pop
popa
aad
daa
into
and
or
jb
out
sti
cmp
es
inc
pop
xchg
jnp
cmp
sub
jp
mov
sete
mov
sahf
popf
xchg
mov
movsb
pushf
ljmp
aas
add
out
mov
cmp
pop
mov
jo
aas
arpl
out
mov
adc
inc
negb
mov
ds
jbe
mov
sbb
mov
cmpsl
dec
gs
hlt
shll
test
and
arpl
jmp
imul
mov
pop
xchg
mov
dec
pop
into
dec
mov
jno
enter
cli
mov
pop
xchg
in
mov
loope
mov
push
mov
repnz
pop
mov
push
jno
loopne
js
popa
inc
inc
sub
mov
leave
mov
xchg
xor
pop
sub
sub
aaa
or
xchg
and
loope
data16
adc
daa
shlb
mov
ja
insl
xchg
cmp
xchg
or
add
inc
jmp
adcl
in
jo
adc
adc
movsl
xchg
add
int3
in
sub
jo
movsl
jmp
and
pop
xor
jnp
lea
in
sub
lds
xor
inc
and
lods
cmpsl
test
cmp
mov
mov
push
fildll
jg
adc
call
push
fisubs
sbb
aam
lock
pop
pop
mov
sbb
sub
sub
jl
popf
jns
icebp
je
movsb
orl
stc
loope
dec
movsl
pusha
push
cmc
pop
fsubl
in
out
pop
mov
shlb
lock
fidivl
movsw
push
in
pusha
pop
jbe
xchg
arpl
jle
xchg
sub
outsb
inc
imul
push
push
sahf
int
pushf
rcrl
icebp
adc
lea
pop
jns
outsl
stc
enter
mov
out
shll
jbe
fstl
das
fcom
iret
repz
pop
movsb
shll
lea
int3
add
bound
dec
mov
mov
icebp
mov
xor
and
xor
jnp
mov
jae
mov
sbbb
dec
cmp
fs
lret
test
fidivl
xchg
sub
fldenv
mov
mov
push
xor
das
repz
xor
aas
mov
fisttps
sarl
test
mov
xlat
jecxz
mov
dec
sub
push
in
ljmp
lds
push
mov
ljmp
xor
cmpb
daa
mov
int3
mov
std
lock
or
xchg
jmp
lret
mov
imul
pop
int3
aam
fsub
outsb
aas
xor
outsb
mov
xchg
xchg
jge
rorl
push
adc
and
das
dec
movl
adc
aad
inc
test
jbe
or
mull
inc
xorl
mov
jbe
scas
lods
stc
sbb
inc
rclb
cmp
mov
add
push
sbb
push
mov
fildll
lea
mov
sub
mov
daa
sarl
lahf
lret
add
addb
shl
jp
fs
or
shlb
sti
mov
jle
push
push
jnp
scas
out
mov
sti
arpl
jmp
int
dec
fdivrl
stos
inc
inc
cmc
mov
mul
xchg
insb
dec
lds
dec
testb
or
insb
and
mov
push
outsb
andb
xchg
and
loope
inc
mov
mov
adc
pusha
insl
xchg
pslld
sbb
lcall
sub
outsl
xchg
mov
sub
push
mov
xchg
sub
int
insb
adc
lods
pop
popf
jbe
jb
imul
xchg
xor
adc
cltd
adcl
pop
push
cmp
outsl
dec
sub
sbb
push
mov
xor
jg
push
xor
push
mov
jns
adc
test
pop
add
add
cmc
jno
mov
pop
hlt
pop
shr
mov
gs
cmp
into
lahf
lea
jne
cmp
or
mov
jge
sbb
mov
xchg
xchg
enter
lea
mov
xchg
push
mov
je
lea
into
mov
xchg
inc
cmp
test
and
dec
popa
or
lcall
icebp
and
push
cmp
lahf
or
xor
roll
mov
in
scas
cmp
push
insb
xor
test
sbb
mov
rcr
push
hlt
sbb
lea
loope
mov
or
jb
jmp
push
add
dec
mov
sahf
xor
in
push
mov
pusha
sbb
push
mov
lahf
mov
add
xor
jno
cmp
in
sbb
fldcw
in
in
fisubrs
sub
ja
jne
sub
xchg
outsl
and
gs
dec
int3
in
icebp
pop
mov
jp
push
ficompl
cmc
push
jecxz
fdivrp
orl
xor
sub
xor
xchg
xchg
outsl
sti
adc
fisubrl
sahf
xchg
loopne
push
fistpll
shlb
dec
stc
gs
and
sub
pushf
sub
les
sub
addr16
sbb
pop
cmp
sub
ds
lcall
cli
sbb
mov
insb
jno
mov
mov
ja,pt
adc
adc
sbb
orb
mov
decb
je
test
mov
jns
enter
ret
loopne
xor
lea
mov
aad
adc
xchg
in
sub
push
jbe
pop
add
pop
adc
loopne
jmp
sbb
jp
test
outsb
stos
ret
jae
fs
dec
gs
stos
stos
or
cs
pusha
clc
lods
sub
adc
mov
and
sub
inc
dec
arpl
scas
fucomi
test
nop
in
movsb
push
aas
push
dec
arpl
mov
or
inc
rcl
mov
ret
lock
test
jp
roll
fisttpl
rorb
xchg
adc
and
ret
xor
into
xchg
push
mov
mov
mov
daa
and
cmpsl
into
push
lret
into
stc
lock
repnz
mov
jmp
sub
xchg
or
neg
adc
les
mov
jmp
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jle
push
lods
push
pushf
mov
jl
insb
ficomps
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
jle
push
lods
push
pushf
mov
jl
insb
rcrb
cli
cmp
sub
sbb
or
cld
dec
in
pop
fsubrl
ja
or
jge
insl
cmp
dec
mov
sbb
or
cld
mov
hlt
jbe
int3
or
jbe
data16
inc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
push
adc
jno
js
mov
cmc
mov
test
xchg
mov
lds
xor
and
inc
adc
mov
test
xchg
movsl
mov
cmc
test
xchg
aad
and
xchg
adc
sub
push
in
cltd
xchg
mov
mov
mov
and
push
jl
insl
and
add
push
inc
test
dec
pop
in
jle
lock
dec
movsb
mov
and
jne
lret
dec
xchg
pop
popa
rorl
dec
cmp
and
add
sbb
outsl
aad
lods
insl
inc
cmc
jno
sub
cmp
fsubrl
lds
cmp
jbe
lret
pusha
or
inc
and
lret
das
pop
stos
lock
cmpsb
dec
aad
sub
in
or
push
mov
push
xchg
cwtl
mov
inc
das
pop
jne
pop
movsl
stc
cmp
xchg
push
mov
cmc
aad
loopne
loopne
jne
mov
fs
orb
sbb
jge
andb
mov
rol
rclb
xor
and
inc
lods
push
pop
movsl
addr16
test
xchg
cmc
test
icebp
mov
add
inc
sbb
add
fdivl
int3
cmpsb
fistl
gs
std
push
add
adc
imul
int3
mov
mov
hlt
lock
aam
pop
popa
inc
jge
ja
jo
dec
xor
push
in
cmc
mov
test
xchg
movsl
in
cmc
test
xchg
aad
and
push
adc
add
movsl
cmc
mov
test
xchg
movsl
in
cmc
test
xchg
aad
and
or
imul
jno
cmpsb
dec
inc
loop,pn
or
xor
es
jg
fildl
mov
or
fstps
and
xlat
xchg
lea
hlt
mov
xor
and
jmp
mov
sbb
jns
fs
ret
dec
jmp
jp
outsb
mov
dec
push
jo
in
fnstsw
jbe
mov
dec
jmp
ror
dec
sbb
daa
test
and
pop
lret
xchg
xor
ja
ljmp
jg
test
cmp
mov
sub
hlt
stos
xlat
in
lods
iret
adc
inc
sti
jg
cli
sub
pop
stos
sbb
cmp
lahf
inc
mov
je
ljmp
and
xlat
aas
shl
scas
scas
jae
xor
lods
mov
xchg
inc
insl
or
les
mov
insb
and
ds
aad
inc
or
fistps
add
add
add
xchg
insl
mov
das
or
test
sub
aaa
xchg
jae
adc
je,pn
ljmp
mov
testb
dec
repz
mov
cwtl
dec
movsb
fcmovne
in
imul
jp
fimull
xchg
push
xor
fimuls
dec
sbb
mov
fnstenv
mov
and
xchg
xchg
leave
pop
repz
inc
pusha
and
mov
roll
xchg
and
jo
imul
mov
push
mov
ss
notl
pop
adc
sbb
fldl2t
fldcw
sub
sub
pop
lret
stc
loopne
testl
in
imulb
and
push
std
jl
fst
push
into
jnp
gs
xchg
mov
mov
nop
and
fwait
xchg
stc
pop
ret
decb
inc
adc
stos
cmpsl
shl
lea
loop
adc
cltd
add
add
push
pop
cmpsl
and
cwtl
stos
cmp
test
or
mov
outsb
xor
pop
sub
lcall
dec
gs
xchg
mov
push
add
push
or
inc
lods
push
es
sahf
dec
cli
incb
xchg
push
aad
ds
mov
push
addr16
out
or
lret
or
mov
inc
and
dec
in
in
bound
lahf
test
xor
mov
pop
scas
xchg
add
pusha
push
fdivs
mov
cmp
ret
push
ljmp
xchg
xchg
dec
lret
push
iret
inc
cwtl
mov
mov
and
push
push
fcompl
mov
jg
mov
loope
repz
inc
cmpsb
push
std
mov
fisubl
or
cmp
dec
in
mov
inc
test
jmp
insb
pop
sbb
and
fdivl
push
jge
gs
inc
add
clc
add
adc
aas
sbbb
aas
test
aam
loopne
in
lds
cltd
pop
fiaddl
inc
insl
push
push
imul
and
xchg
shr
dec
movsl
pushl
inc
sbb
lods
cmc
js
pop
ss
jb,pt
ret
repnz
add
jno
sub
pop
rclb
les
movl
arpl
adc
mov
sub
xor
mov
fs
cs
hlt
xor
xor
dec
mov
mov
aaa
add
lret
sbb
xor
lahf
ret
inc
mov
bound
mov
insb
sub
mov
sbb
mov
xor
ficomps
pop
leave
inc
jbe
or
mov
sti
or
sub
nop
jmp
push
mov
outsb
mov
cwtl
std
out
cmp
push
rcrl
pop
jl
in
inc
xorb
jg
ss
lcall
jb
lcall
mov
pop
clc
push
sub
shrl
push
daa
xchg
push
fsubr
push
insb
int3
push
xchg
insl
daa
pushf
leave
jp
sbb
clc
adc
xor
xchg
stc
rcll
cmpsl
pop
ret
aaa
jno
cs
jl
shr
aad
and
jmp
inc
ret
cmc
jp
xlat
push
shlb
icebp
jp
sub
mov
and
rolb
insl
out
xlat
mov
inc
push
pushf
push
sub
decl
xor
inc
xor
repz
orl
adc
je
or
fstpt
fimull
movsb
mov
mov
add
cmc
shlb
js
mov
mov
sub
lds
out
or
lock
rolb
fistl
test
ret
cmc
jb
ret
insl
cmp
mov
mov
sbb
sub
into
and
dec
imul
or
sub
mov
dec
fmuls
je
cld
imul
xchg
fistpl
push
mov
xor
xor
sub
out
shlb
inc
cwtl
adc
in
negl
dec
movsl
aam
xor
mov
cwtl
jle
fdivrl
jl
movsb
mov
push
xchg
scas
adc
mov
dec
sbb
out
fisubs
jecxz
icebp
gs
imul
stos
push
mov
movsb
inc
fwait
lds
sub
daa
out
adc
dec
divl
outsl
mov
dec
push
in
cmp
stos
inc
gs
lcall
clts
mov
mov
jle
andb
scas
enter
out
push
cs
decl
mov
jo
add
fdivrs
push
xchg
dec
dec
clc
pop
mov
xchg
mov
rsm
xorb
mov
jae
pop
fsubl
rcrl
pop
insl
xchg
mov
lods
test
sub
jg
outsb
imul
and
xor
sbb
mov
cmc
jg
movsl
mov
leave
loope
ds
push
cmp
es
into
dec
andl
mov
sub
ret
xchg
pop
addl
mov
lret
sti
cmp
sbb
insb
mov
inc
fwait
dec
jge
cltd
mov
push
ret
sub
andb
and
or
in
test
orl
out
je
outsb
dec
sub
inc
loopne
adc
xor
outsl
hlt
mov
push
add
imul
insl
ja
mov
movsl
loop
bound
push
int3
inc
in
int3
and
pop
jno
jecxz
xlat
mov
jmp
dec
jg
jb
add
push
adc
adcb
stc
push
jo
sub
movsl
pop
lcall
fistpll
dec
pop
pop
ret
xchg
inc
popa
aam
loopne
test
jmp
and
test
add
mov
lods
sub
mov
sub
inc
xor
sub
rsqrtps
in
gs
nop
rcl
loop
repz
dec
int3
sbb
call
les
push
mov
je
fiadds
outsl
shrb
and
mov
test
cmp
jnp
loope
mulb
cmp
nop
test
push
fadd
or
mov
push
jae
fisubrs
into
mov
jmp
fwait
out
mov
stos
adc
in
jo
jl,pn
or
add
inc
lret
fsubrl
sti
mov
mov
xchg
fdivrs
push
sbb
vpsubusw
inc
std
sarl
sbb
lcall
xchg
mov
add
mov
movsl
aad
sub
dec
dec
repz
adc
pop
push
xchg
ss
orl
lds
stos
mov
sub
xchg
mov
mov
mov
inc
pop
jge
xchg
ret
scas
insl
jecxz
lret
insl
adc
pop
jae
or
jae
aas
js
out
aas
add
mov
popa
jnp
cltd
je
aam
add
pusha
dec
pop
jo
mov
jmp
test
mov
in
inc
fwait
jg
stos
rcl
cmpsb
dec
and
cmc
inc
loope
data16
outsb
movsb
xlat
inc
dec
xor
lds
adc
addl
adc
add
mov
push
add
daa
daa
mov
clc
gs
dec
movsl
pop
xor
mov
ljmp
xchg
call
mov
mov
xchg
push
out
inc
adc
jmp
jp
push
push
iret
push
mov
push
inc
mov
addr16
fadd
xor
mov
cmp
add
mov
jp
xadd
mov
jns
mov
mov
int
bound
cmp
les
movups
mov
cltd
out
icebp
les
mov
fs
pop
sbb
pop
inc
rolb
mov
adcl
push
lcall
icebp
divb
adc
jge
aad
cli
rorb
test
or
xchg
scas
cmpsb
movsl
loopne
push
pop
das
popf
int
push
pop
pop
test
or
and
adc
adc
xchg
push
pop
mov
jecxz
int3
and
mov
xchg
push
xchg
xor
imul
cld
mov
mov
sub
jne
cmp
xchg
mov
gs
shl
pushf
scas
push
sbb
enter
movsb
xor
push
mov
ficompl
jbe
negl
aam
mov
cmc
repz
jb
outsl
fsubl
mov
xor
push
sub
sbb
pop
cmp
arpl
nop
stc
dec
sub
mov
xor
mov
cld
inc
push
icebp
mov
xor
in
orl
dec
mov
imul
mov
xchg
push
mov
xchg
ds
xchg
int3
mov
sbb
xchg
or
in
enter
mov
dec
bound
inc
and
jae
pop
stos
out
and
jp
adc
lds
xor
scas
dec
and
xchg
leave
mov
ss
outsb
and
mov
mov
jecxz
xchg
das
out
and
in
call
push
jp
stos
push
inc
pop
mov
inc
test
mov
out
sub
push
popf
cmp
xor
rclb
inc
mov
push
mov
lahf
int
add
and
movsl
add
jp
fisubrl
mov
add
adc
call
cmpsl
xchg
adc
xchg
pop
adc
cmp
push
mov
pop
cmc
mov
movsb
and
outsl
mov
imul
cld
ljmp
orb
lcall
test
push
gs
mov
mov
mov
mov
insb
cwtl
pop
mov
subb
add
hlt
js
adc
inc
cmc
out
cwtl
leave
mov
xlat
adcb
inc
cld
xor
inc
inc
xor
mov
into
in
aam
sahf
es
jecxz
add
sub
inc
ss
xor
loop
and
push
decb
pusha
stos
sub
cld
movzwl
fstps
pusha
outsl
mov
insb
sub
and
stos
jne
add
shrb
jle
fsts
xchg
push
xor
cmp
add
fs
in
and
out
cltd
jne
inc
and
ret
fwait
dec
add
int3
push
shlb
dec
and
mov
jl
inc
inc
fldenv
in
sti
jnp
ret
ss
push
sbb
lea
lcall
movsb
ja
and
jl
lret
aaa
push
or
push
adc
les
das
mov
in
les
mov
orl
stc
or
test
and
iret
int
lcall
in
nop
mov
cmp
sti
jno
repz
into
lahf
mov
cmp
xchg
shr
adc
mov
scas
xor
dec
mov
pop
fisubrs
test
or
mov
mov
xchg
daa
or
sub
outsl
adc
imul
insl
and
sbb
stc
decb
dec
popa
xchg
pop
inc
sub
out
mov
dec
leave
test
test
lret
xlat
cli
mov
or
push
or
dec
push
and
imul
xchg
mov
push
in
push
adc
cmp
cmc
shlb
and
nop
cmp
xchg
xor
and
lret
sbb
fldcw
jbe
jl,pn
pop
arpl
mov
loope
sub
icebp
push
xor
push
adc
or
cmpsl
shrb
fsubl
add
cltd
dec
inc
outsb
aad
sbb
cmpsb
vpandn
lock
outsl
mov
xor
inc
shll
dec
pop
pop
lahf
fimull
jnp
xchg
bound
cli
pushf
add
cmpsl
js
mov
scas
pop
xor
cli
ret
add
enter
call
cmp
rol
cmc
mov
and
cmpsb
push
mov
sbb
xchg
inc
adc
adc
inc
in
dec
push
outsl
cmc
push
pop
jmp
clc
aad
enter
and
mov
cli
or
arpl
lds
pop
insb
pop
in
ret
or
aad
and
cltd
hlt
jl
lret
push
out
shll
mov
addr16
sub
push
das
add
inc
and
adc
push
jbe
jge
jp
and
mov
imul
sub
loope
adc
push
lds
in
pop
and
aas
lea
fcomps
xchg
cmp
push
xchg
xor
ds
sub
adc
mov
fmull
arpl
mov
dec
mov
jle
roll
inc
jl
lods
int3
lea
cmp
rolb
popa
test
cmp
push
pop
mov
or
cmp
imul
std
js
testl
aaa
scas
imul
leave
xchg
dec
xorl
aad
jb
dec
int3
ds
std
movsl
pop
mov
loop
and
fidivs
pop
mov
pop
mov
xchg
popf
dec
xchg
mov
pusha
xchg
cwtl
sub
jg
in
cwtl
dec
clc
xchg
adc
ljmp
testb
repz
rclb
test
gs
lods
sbb
and
cmp
hlt
mov
and
mov
push
push
aam
push
cmpsb
bound
loop
sbb
lods
shrb
call
in
neg
jge
fcomip
pop
adc
xor
lea
adc
ret
movsb
fisubrl
mov
loope
add
adc
std
aam
aad
push
data16
pop
popf
inc
mov
out
adc
sub
pop
pop
push
aad
test
data16
addl
cmp
dec
lods
pop
sub
add
repz
popf
cmp
push
pop
sub
in
mov
pop
gs
jae
xchg
jno
xor
dec
std
outsl
bound
imul
xlat
loop
clc
and
lahf
rorl
in
add
dec
cs
xor
popf
pop
imulb
pop
or
adc
aam
pop
lock
addl
sbb
xor
jmp
mov
add
lds
nop
aaa
pushf
das
xlat
cltd
sarb
out
or
mov
cmc
shrb
mov
jp
cmp
jmp
push
push
push
das
jbe
sbb
cmp
pop
xchg
pop
adc
cld
rcrb
add
xor
jp
lahf
icebp
andl
push
add
stos
loope
in
jnp
cmc
repz
or
cli
mov
mov
xchg
adc
adc
in
fadd
sbb
cmp
leave
les
cld
push
xorb
pop
mov
push
xchg
popf
xor
inc
shrl
fs
mov
or
adc
pop
pushw
dec
cmp
fsubrs
xor
fisubl
and
cmp
fdivr
fmull
cmp
ja
add
leave
ret
inc
add
aas
cmp
or
loopne
les
jmp
in
popw
outsb
cwtl
sti
push
jmp
sahf
arpl
mov
add
adc
mov
xchg
dec
roll
jl
mov
fisubl
mov
cli
pop
cwtl
inc
mov
jmp
cmp
sub
cmp
addr16
inc
icebp
adc
test
mov
pop
adc
lock
mov
mov
rclb
lea
test
cwtl
adc
std
out
fbstp
mov
sub
stc
mov
shll
decb
mov
sub
lods
mov
mov
scas
jp
movsb
mov
mov
jmp
cmp
push
jne
adc
arpl
loope
mov
adc
stos
mov
xor
test
adc
mov
sub
push
mov
dec
mul
xor
cmp
pop
and
mov
push
ss
test
mov
dec
cmp
and
cmp
xor
in
jp
dec
dec
dec
mov
xchg
insl
jle
adcb
inc
shrb
mov
mov
call
xchg
xor
je
rclb
sar
lock
xlat
push
adc
in
xchg
push
jns
cmp
mov
idivl
mov
cmpsb
mov
fwait
insb
pop
and
lock
divb
mov
xchg
fisubrs
mov
rolb
aad
lock
arpl
and
cltd
shrb
sahf
out
cmpsl
push
in
add
push
enter
jg
loopne
dec
lcall
sbb
jns
negl
inc
mov
addb
ret
outsl
or
jne
mov
fstpl
lret
xchg
push
andb
std
fistpll
and
lods
imul
mov
stos
push
movsb
loope
push
mov
in
jnp
out
shll
mov
into
push
scas
fsubrl
pop
fcoml
mov
push
add
mov
mov
fs
lcall
push
mov
and
ss
popf
push
into
aad
mov
xchg
add
jg
pop
lock
int
insl
mov
out
jg
sub
mov
shlb
jbe
cs
push
jge
mov
inc
adc
cmp
and
pusha
popf
sub
push
xchg
add
sub
jl
out
or
cmp
xor
lea
js
add
push
outsl
movsb
xchg
sub
in
lcall
scas
xchg
data16
fdivrs
loopne
mov
cmpsb
cli
and
ds
ds
xor
cmp
lea
and
dec
insb
or
inc
insl
popf
adc
in
and
lods
push
int3
or
jae
xchg
jnp
adc
jmp
loope
mov
mov
fsubp
shrb
pop
inc
repz
mov
sbbb
data16
pop
lea
scas
insb
xchg
cmp
movsl
add
popf
mov
sbb
insl
aam
add
lock
sbb
inc
test
loope
sub
test
add
and
inc
xor
xor
addb
jmp
mov
out
sub
pop
mov
fisubs
insb
adc
fldenv
mov
inc
mov
xchg
outsb
add
ret
lods
cmpsb
jnp
jmp
push
rorl
sbb
jbe
mov
ds
push
dec
xchg
ss
test
gs
shlb
xchg
inc
dec
and
ljmp
shll
insl
insb
mov
gs
lock
mov
mov
inc
and
lret
and
cmpsb
jb
fs
lahf
out
dec
and
fbld
mov
mov
fwait
mov
cmpsb
sbb
lods
jb
lret
addr16
dec
inc
jnp
pop
cld
call
lea
sub
les
jecxz
hlt
xlat
leave
fbld
outsl
jmp
pop
cld
or
xlat
add
inc
sub
pop
pop
sarb
sbb
sub
pop
fimuls
push
add
rolb
repz
and
xor
aaa
or
push
ret
jmp
out
push
mov
adc
add
rcll
mov
mov
adc
cmc
add
aas
sub
or
bound
lea
or
js
cli
sbb
ss
mov
jp
and
lds
jge
inc
add
lds
xor
cltd
xor
inc
push
add
cmp
push
ret
loope
xor
sub
push
lret
out
and
xlat
pop
push
adc
arpl
cs
aaa
repnz
test
lcall
inc
lahf
adcl
bound
mov
mov
les
xchg
and
add
adc
das
cmp
addr16
jne
pop
test
pop
iret
imul
add
fcompl
mov
mov
push
mov
dec
push
and
xlat
arpl
and
inc
das
pop
dec
test
into
scas
pop
add
fldenv
scas
inc
popa
xlat
repz
scas
sar
or
rcr
jno
jnp
adc
pop
pop
mov
xchg
test
mov
sub
jne
das
mov
mov
dec
ja
arpl
pop
aas
add
pop
aam
imul
add
xchg
pop
sarl
mov
test
dec
push
cmpsl
mov
dec
fmuls
pop
ret
adc
nop
mov
roll
rcl
push
jnp
dec
out
push
popa
xor
and
inc
adc
mov
test
xchg
movsl
in
cmc
test
xchg
aad
and
push
adc
add
movsl
cmc
mov
test
xchg
movsl
in
cmc
test
xchg
aad
and
push
adc
add
movsl
cmc
mov
test
xchg
movsl
in
cmc
add
pop
xor
and
inc
xchg
push
in
or
outsl
test
loop
insl
cmp
sub
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
sub
or
dec
lcall
popf
leave
jmp
jmp
sbb
sub
jnp
imul
mov
lods
mov
sti
out
sti
fucomp
int
and
xor
add
push
jne
inc
imul
test
in
sar
mov
pop
cmp
push
mov
lods
mov
addr16
xor
lret
and
mov
cmp
xchg
pop
jno
dec
sahf
mov
mov
jb
popf
in
testl
test
lock
stos
adc
mov
es
pop
aaa
push
sti
fucomp
mov
arpl
shl
loop
pop
movsb
jge
jge
sub
adc
push
mov
add
lret
push
dec
mov
lret
jns
mov
fwait
and
mov
dec
std
add
sti
dec
repz
jl
aam
movsb
testl
fs
mov
aad
or
shrb
adc
dec
jge
insl
jnp
jb
cmpb
xchg
ret
in
cmc
loope
jmp
ja
outsb
pop
pop
js
push
xor
fwait
shl
lods
enter
fistpl
xchg
push
outsb
pop
bound
jge
and
cmp
leave
out
enter
fisttpl
mov
push
jns
dec
adc
insl
jnp
imul
mov
lret
in
sti
fucomp
int
cmp
sub
jnp
imul
mov
lret
in
sti
fucomp
int
cmp
pop
getsec
imulb
repz
scas
push
mov
test
cs
test
xlat
frstor
mov
lock
inc
inc
es
push
mov
adc
dec
mov
inc
dec
jne
xchg
es
or
adc
in
mov
add
xchg
dec
icebp
scas
aad
sbb
lods
mov
push
pop
inc
jno
push
and
xchg
out
insl
or
notl
fildl
and
sbbl
jns
or
push
and
fnstenv
push
dec
mov
jo
sti
sub
js
and
out
push
cmpsl
aaa
xchg
adc
sub
pop
push
rolb
pop
js
cmp
xor
loop
orb
sbb
jno
push
mov
jae
mov
lahf
add
dec
pop
sub
add
repz
icebp
cld
test
push
or
cli
scas
cmc
fidivl
shll
or
push
pop
push
icebp
out
fsub
sbb
mov
mov
or
adc
test
pushf
int3
jns
or
jge
out
imull
mov
push
mov
rol
iret
imul
lret
mov
mov
jle
mov
leave
out
sub
aad
int3
daa
repnz
mov
mov
test
in
mov
mov
xchg
scas
sbb
push
jae
push
stos
iret
in
jnp
mov
push
es
dec
adc
pop
inc
and
or
rcll
pop
mov
inc
fnsave
jb
and
mov
lret
lods
mov
inc
in
dec
mov
shlb
push
and
xchg
cwtl
inc
iret
sbb
mov
inc
arpl
rorl
insl
jmp
lret
jmp
scas
jnp
jnp
repnz
fdivrp
dec
mov
and
cwtl
fildll
cmp
mov
out
push
push
shl
test
dec
lea
sbb
mov
inc
sub
dec
mov
imul
mov
sub
mov
mov
in
hlt
pop
adc
push
jmp
xchg
scas
push
pop
mov
or
mov
testb
je
add
dec
and
sub
dec
adc
dec
sub
mov
add
mov
mov
test
fnstenv
cmp
push
bound
repnz
mov
popf
add
insb
sub
xchg
cmpsl
dec
add
and
scas
ds
loopne
call
mov
data16
mov
jg
out
mov
int3
out
jge
pop
out
mov
lock
dec
leave
cmp
subb
in
repnz
sbb
aam
adc
hlt
cmp
dec
add
jno
mov
clc
sub
dec
leave
xchg
inc
and
cs
addb
ficompl
jl
mov
mov
jo
dec
js
mov
mov
adc
aam
addr16
loop
cmp
insb
mov
adc
mov
je
inc
xor
sub
push
lea
lcall
xor
and
mov
imul
gs
inc
iret
mov
fiaddl
xor
pop
fdivs
mov
icebp
xlat
mov
xorl
icebp
xchg
xchg
in
mov
les
mov
lods
and
jb
stos
cmpsl
loop
out
stc
jae
popf
pop
push
mov
testl
mov
sub
cmpsl
dec
xlat
or
clc
jns
ret
loopne
lahf
mov
pushf
mov
xchg
jp
push
or
mov
ret
int
push
sahf
lock
lods
cmp
int3
sub
mov
mov
inc
test
pop
loopne
imul
popa
adc
insb
sbb
in
mov
outsl
lahf
sub
ficoml
and
stos
mov
in
mov
or
xchg
adc
or
mov
sbb
subl
clc
rclb
scas
sbb
adc
loope
xchg
dec
mov
xchg
inc
stos
fstpl
lcall
inc
inc
adcl
mov
inc
movsl
stc
or
mov
cmpsl
sbb
ret
add
xor
popf
cmp
pusha
arpl
xchg
popf
jns
xchg
mov
or
ret
cmpsb
mov
lea
insb
mov
mov
sub
mov
jmp
ret
jecxz
hlt
xchg
xor
mov
daa
add
addr16
aam
mov
fsub
jp
mov
mov
mov
xchg
jecxz
rcr
jg
jge
ljmp
xchg
mov
int3
adc
loope
add
mov
jmp
adc
pop
sahf
xchg
jp
lahf
dec
jp
out
cwtl
test
repnz
mov
sbb
mov
adcl
outsl
rcrl
addb
mov
mov
xchg
jno
aaa
xchg
fisubl
and
daa
scas
or
movsl
stos
mov
cmpsl
pop
jnp
sahf
test
adc
xchg
mov
adc
add
jmp
daa
negl
mov
inc
inc
inc
adc
jns
mov
sbb
jmp
pop
cmp
ljmp
aam
adc
sbb
les
mov
mov
mov
int
pop
lock
push
or
popf
fnstcw
jle
ss
mov
dec
inc
scas
dec
mov
dec
sti
negl
in
jo
out
mov
jg
mov
push
push
xchg
cltd
dec
dec
inc
jae
stos
les
xchg
cmpsl
mov
stos
sub
dec
xor
sub
scas
mov
stos
mov
pushf
dec
jp
and
mov
in
fisubs
dec
mov
clc
insb
mov
in
leave
fldz
mov
test
adcb
xchg
mov
cmp
cmp
push
cltd
mov
out
fldenv
ret
push
and
lret
xchg
and
std
mov
jecxz
and
mov
gs
cmp
in
cmpsb
or
int
fnsave
mov
lods
adc
mov
aam
fucomi
cmp
out
and
dec
or
fstpt
mov
mov
pop
mov
notl
mov
nop
in
mov
dec
sub
and
mov
iret
hlt
add
mov
cmp
push
js
mov
jo
cli
std
ja
dec
jae
stc
or
mov
outsl
mov
ss
rcr
adc
ds
ja
pop
mov
jmp
std
jmp
movsl
xor
fdivl
inc
in
test
jmp
sbb
imul
insl
and
pop
add
mov
test
or
sbb
inc
and
jmp
push
push
xchg
add
cmp
out
or
adcl
fildl
and
mov
pop
inc
stos
dec
jg
daa
hlt
arpl
mov
inc
call
jo
mov
bnd
loop
sti
inc
and
and
push
in
jo
mov
push
push
jno
jno
test
fistps
sarl
or
je
insb
mov
ret
and
lds
loope
lods
ljmp
int3
jne
outsl
jp
pop
cld
dec
enter
and
scas
push
gs
add
inc
dec
sbb
jecxz
movsb
add
int
loopne
out
arpl
and
insb
icebp
adc
shll
fildll
in
test
neg
xor
scas
test
pop
xor
out
mov
dec
testl
sub
into
dec
cmp
rcrb
aam
jg
sbb
outsb
mov
push
test
testb
sti
cs
stc
shll
sub
lret
je
pushf
push
xchg
pop
ds
ss
jno
adc
pop
gs
push
pop
sbb
aas
inc
adc
pushf
shlb
and
out
xorb
sbb
fucomi
dec
pop
les
fnstsw
rol
in
or
mov
xchg
adc
mov
test
sbb
sub
xchg
sbb
cmp
xor
jmp
xor
in
aam
mov
push
in
sbb
push
mull
int3
jge
mov
into
sarb
jo
scas
dec
mov
ds
ss
dec
push
pop
data16
cs
sbb
dec
pop
dec
sbb
push
add
sub
ds
xchg
or
pop
hlt
ret
sub
ds
rep
lods
aaa
jb
adc
js
xchg
adc
mov
inc
sbb
ja
icebp
ja
dec
loopne
xlat
fsubrp
sahf
gs
ja
pusha
or
push
inc
sub
push
add
pop
movsb
adc
fistl
mov
mov
out
mov
adc
xchg
jmp
fistps
fldenv
sti
or
xchg
mov
xor
adcb
pop
xchg
jmp
imulb
dec
xchg
or
lahf
cmp
shll
pop
mov
adc
add
mov
pushf
enter
test
imul
fcmovnbe
cs
iret
mov
pop
mov
push
cmp
nop
dec
flds
push
cwtl
call
pop
pop
cmp
mov
jecxz
mov
push
and
mov
inc
mov
mov
cltd
xchg
ljmp
adc
xor
es
lods
loopne
mov
dec
mov
enter
or
add
out
mov
outsb
sar
adc
lock
lds
repnz
jmp
sub
and
jno
mov
push
push
into
push
ds
lock
sub
sarb
or
push
xor
mulb
mov
js
in
out
push
inc
int3
shll
push
mov
xor
loop
cwtl
adc
mov
clc
gs
fs
adc
sbb
sbbb
mov
testb
cmp
xchg
call
jb
sti
shl
int
or
subl
imul
dec
mov
adc
mov
push
add
lcall
mov
and
mov
lret
int3
adc
fsubrl
gs
fninit
icebp
incl
sub
clc
scas
push
aam
and
xchg
mov
in
mov
ret
jne
mov
mov
imul
insl
test
dec
push
mov
jno
icebp
je
mov
push
movsl
mov
fs
rol
aas
mull
xor
fstps
push
mov
bound
xchg
adc
add
adc
div
pop
pop
and
cwtl
test
dec
lahf
lods
or
mov
aaa
imul
das
sub
and
loopne
in
xlat
cmpl
push
outsl
sub
jo
mov
outsl
jmp
cmpsb
xor
pop
push
in
xchg
sub
inc
enter
or
mov
test
fs
jne
lcall
imul
repz
jno
aam
mov
sbb
sub
loope
bound
mov
daa
cmc
adc
mov
mov
insl
outsb
int
push
jnp
call
push
repz
xor
xor
js
scas
ret
repnz
movsb
or
sbb
sub
mov
scas
jg
lret
xchg
fisubl
leave
push
cmp
das
pop
cmpsl
mov
jecxz
scas
aas
inc
popf
push
idivl
out
xlat
mov
pushf
in
in
lea
out
pop
xchg
addb
rcrb
test
outsb
and
mov
lds
outsb
rcl
fldenv
imul
mov
insl
xor
dec
push
sbb
jnp
clc
inc
inc
cmp
fcoms
stc
mov
les
xor
hlt
mov
fdivl
push
int
mov
ljmp
inc
xor
adc
or
push
pop
rolb
mov
lea
xchg
out
stos
test
fildl
push
xchg
nop
cli
jno
mov
jmp
jae
cmp
sub
dec
cmp
mov
in
or
iret
push
pop
mov
leave
adc
xchg
dec
dec
lock
test
out
mulb
addr16
mov
mov
addb
in
bound
scas
pop
out
inc
pop
int3
fdiv
or
insb
xchg
sbb
push
sarl
out
xchg
js
or
daa
adc
outsb
mov
sbb
or
jmp
in
add
test
push
jge
insl
xchg
pop
or
mov
xchg
pusha
inc
sbb
xchg
cli
cmpsb
in
sub
pop
fsubl
mov
rolb
test
pusha
add
loope
cli
in
fisttpl
inc
aam
outsl
xorb
sti
jae
in
jae
xchg
lock
test
les
repz
repz
jmp
movl
ret
inc
adc
rclb
and
and
mov
and
sahf
ljmp
sbb
pop
cwtl
nop
notl
pop
push
adc
jae
call
rorb
mov
scas
es
push
std
and
outsl
xlat
imul
mov
mov
mov
outsb
addr16
int3
or
cmp
pop
adc
in
mov
gs
and
movsl
lcall
scas
rcr
sbb
mov
push
mov
imul
or
dec
fcmovnbe
lret
sub
push
aad
cmpsb
push
jnp
mov
fstpt
mov
inc
ret
mov
sub
repnz
xchg
adc
pop
xor
xor
sub
icebp
enter
jns
jo
stos
hlt
dec
add
xor
or
outsb
rclb
push
out
pop
xorl
int3
add
cmc
pusha
push
mov
test
loopne
inc
or
fcomps
lcall
cmp
or
jo
stos
insl
pop
or
mov
fldenv
inc
or
xor
inc
outsb
notl
shrl
inc
daa
jge
sbb
cmp
push
xchg
fsubs
xchg
inc
mov
test
ret
les
inc
sbb
push
mov
shll
add
push
pop
or
jl
dec
ds
addr16
ss
and
shlb
nop
lock
aaa
shrl
xchg
push
sbb
fidivs
and
mov
add
call
push
xlat
push
in
ret
sahf
stos
inc
or
fyl2xp1
nop
xchg
xor
in
mov
sbb
jo
mov
inc
testb
fiaddl
sub
mov
xor
mov
or
xchg
lods
pushf
cld
sbb
cmpsl
add
aas
mov
imul
into
gs
mov
sbb
call
in
dec
push
xchg
cmc
cmp
xchg
mov
sbb
lea
push
pop
insb
pop
push
roll
stos
sub
pop
out
or
ss
mov
jnp
es
pop
mov
aad
add
pop
xchg
and
mov
sbb
pushf
aaa
cmp
daa
mov
or
pusha
lcall
stc
icebp
mov
mov
sub
xchg
ljmp
mov
adc
jno
dec
cld
ret
jno
or
mov
jle
and
les
xor
push
stc
xor
and
or
clc
pop
cwtl
lods
enter
out
jp
sbb
movsb
sub
pop
cmp
scas
dec
jb
in
fisttpl
cli
pop
imul
xor
cmp
and
movsl
add
mov
iret
dec
ja
aam
mov
pop
cmp
sbb
mov
jp
dec
pop
jle
and
cld
or
push
fwait
subb
push
movl
je
fcmovb
das
add
inc
mov
das
dec
jnp
insb
sahf
out
loopne
cmpl
dec
pop
lods
sub
lea
adcb
popf
cmp
push
stos
es
or
mov
xchg
xchg
insl
add
test
push
adc
in
enter
push
popa
fidivrs
push
jnp,pt
xor
add
inc
imul
fisttps
fcomip
cmp
imul
out
cmpsl
mov
jg
pop
dec
mov
adc
mov
pop
out
les
jl
mov
push
loope
push
fbld
inc
outsb
pop
ds
popf
mov
push
mov
rorl
in
stos
ret
mov
imulb
movsl
cmp
mov
push
enter
je
sbb
or
mov
lds
inc
push
xor
in
push
push
clc
std
in
mov
int3
shl
test
push
mov
mov
sbb
push
jecxz
mov
scas
fdivs
and
lea
push
jmp
fldenv
pop
addr16
fstl
xchg
hlt
mov
jbe
add
in
pop
pop
cld
inc
sbb
mov
pop
roll
xlat
cmpsl
out
cmp
jnp
or
cltd
adc
sub
jae
xor
data16
push
cli
stc
push
sbb
xchg
or
and
repnz
aaa
sbb
addb
push
xchg
fwait
sbb
daa
pop
jmp
add
lret
and
das
scas
inc
sub
sti
sbb
add
xor
mov
pop
iret
add
inc
dec
jnp
xor
sbb
sub
cmpsl
fwait
mov
pop
xor
shlb
pop
daa
mov
std
fstpl
add
mov
and
hlt
and
popa
jl
test
nop
decl
std
lock
jae
out
push
inc
sahf
pop
jns
cmp
sbb
fwait
cmpsb
and
stos
xlat
jmp
xchg
xor
gs
imul
das
bound
je
lea
mov
pop
inc
push
and
fmull
push
add
mov
mov
pop
fmul
movsl
dec
data16
xlat
test
aaa
in
sbb
mov
adc
fsubrs
out
push
fisubs
shlb
adc
mov
js
jno
ret
cmpsb
mov
or
or
in
icebp
in
xor
das
out
or
jmp
ret
rorb
movsb
out
bound
into
add
jmp
add
scas
in
sahf
push
ja
icebp
mov
mov
mov
dec
add
xlat
mov
hlt
subl
lods
arpl
repnz
pop
cwtl
sub
xchg
xchg
push
xor
lea
sarb
inc
lret
jns
data16
jbe
xchg
call
jo
js
cwtl
sub
mul
cs
les
and
orb
das
aam
push
stc
mov
shrl
fcom
mov
push
ljmp
mov
inc
mov
ret
cmc
mov
push
les
add
inc
xchg
sahf
mov
lret
sahf
adc
stos
mov
cmpl
sbb
mov
push
adc
xor
push
int
add
and
mov
icebp
cli
xor
cmpsb
call
jl
js
std
jecxz
push
scas
iret
xchg
lods
fcomps
push
bound
add
adc
sbb
filds
lea
sub
fnstcw
or
cwtl
pop
mov
xchg
mov
aas
push
jmp
jno
stos
test
pop
es
xor
outsl
int
push
cmp
inc
sti
hlt
insl
mov
push
pop
sbb
loope
pop
cmpsb
xchg
mov
daa
jge
ds
out
inc
iret
daa
cmp
arpl
and
sbb
push
pop
cmp
or
scas
jmp
sub
test
out
neg
jbe
std
pop
dec
call
xlat
xchg
in
jp
push
jb
fwait
mov
cmp
ret
and
loop
mov
out
push
pop
sbb
adc
xchg
ja
pop
push
xchg
addr16
push
cli
rolb
loop
pusha
and
and
sub
xchg
mov
push
sbb
xchg
and
shrb
and
ja
jo
cmpsb
adc
cmp
lods
or
fcmovu
repnz
add
push
pop
jns
leave
adcb
sbb
subb
imul
and
sbb
outsb
and
rcr
mov
cmp
jo
outsl
xor
insb
sub
inc
xlat
xchg
mov
cmp
lods
andb
stc
outsb
pop
test
push
mov
mov
fs
push
push
lahf
mov
sub
mov
arpl
lret
sub
add
pushf
call
mov
mov
mov
lret
cld
mov
out
cltd
rclb
movsb
or
sarb
ljmp
xchg
pop
mov
shrl
jle
nop
inc
hlt
add
icebp
fisttpll
jmp
jbe
or
mov
cli
ds
iret
sbb
xor
fcomi
pop
adc
iret
cli
pop
xchg
clc
pop
xor
sbb
fucomi
jmp
pop
push
and
or
adc
add
xor
cmp
es
inc
aad
xchg
movsl
mov
inc
lret
fisubl
xor
xchg
lahf
mov
sub
push
adc
je
sahf
mov
push
push
xor
jno
mov
xlat
push
inc
in
push
inc
mov
ficompl
je
mov
insl
sbb
pop
movsl
and
fmuls
xor
jecxz
dec
jo
popf
mov
add
imul
pop
addb
and
sub
or
movsb
jae
pop
add
out
mov
pop
xor
xor
dec
insl
jnp
imul
mov
lret
in
sti
fucomp
int
cmp
sub
jnp
imul
mov
lret
in
sti
fucomp
int
cmp
sub
jnp
imul
mov
lret
fldl2t
leave
sbb
or
cmp
sub
sti
pop
jmp
fs
stos
cli
lods
jne
xchg
add
adc
rolb
out
loopne
lock
mov
into
popl
push
outsl
pusha
pop
jo
add
adc
sar
out
loopne
lock
cmpb
sti
inc
jg
dec
adc
jo
add
das
and
xadd
out
loopne
lock
adcl
inc
mov
pop
cmp
push
pop
jns
stos
sbbb
orl
jl
aad
popf
and
mov
add
dec
je
adc
mov
inc
int
pop
jle
in
aaa
cmc
pop
ds
cmpb
pop
ljmp
adcl
lahf
rcrb
ret
cltd
das
inc
fcomip
pop
test
sar
xchg
iret
jno
cmpb
jo
addb
push
mov
js,pt
and
xor
movsb
pop
mov
ljmp
lods
jg
cwtl
stc
dec
lea
rorb
lock
aas
call
cmc
js
push
sub
fistpll
jae
jg
pop
cwtl
mov
adc
and
pop
mov
pop
lock
inc
mov
inc
stc
push
test
add
adc
and
xor
lods
mov
loope
lret
fld
ljmp
sbb
gs
jns
fs
outsb
ret
mov
xchg
ljmp
mov
and
cmp
arpl
xor
mov
mov
nop
scas
mov
jg
outsl
pusha
pop
jo
add
adc
and
xor
sar
out
loopne
lock
cmpb
popl
push
outsl
pusha
pop
jo
add
adc
and
xor
sar
cmp
aam
pop
es
sbb
scas
les
mov
and
mov
aas
loope
test
pop
inc
xchg
jecxz
xchg
inc
xor
or
decb
shll
pop
insb
sbb
das
pop
and
push
jp
nop
mov
mov
test
mov
ds
sub
scas
mov
dec
fisubrl
aaa
jge
insl
add
les
popa
ja
leave
hlt
pop
mov
inc
sub
adc
fsubrp
mov
in
sub
mov
push
xchg
stos
dec
cltd
add
out
dec
and
imul
lods
xlat
cltd
cli
pop
int3
sarl
aas
inc
mov
inc
mov
inc
pop
push
dec
rorl
mov
mov
and
sbb
mov
in
mov
in
aas
cwtl
pop
xchg
push
xchg
pushf
test
ljmp
cmp
dec
xor
jge
jns
inc
lcall
out
sbb
mov
gs
ljmp
repnz
pusha
xor
xchg
pop
lods
inc
fwait
mov
lods
inc
cs
jno
add
pop
aad
fcmovnu
mov
xchg
inc
mov
xor
jle
or
cwtl
pop
loopne
out
add
jl
push
xor
negl
test
mov
mov
sbb
mov
mov
pop
fwait
test
pop
das
andl
xchg
cmp
jmp
and
rclb
leave
fimull
pop
das
int
push
inc
mov
cmp
xor
es
cmp
cmp
mov
hlt
imul
add
xchg
inc
jnp
sub
inc
andl
pop
cmpsb
cmp
negb
xor
xor
rcrl
inc
adcl
cli
sbb
pop
inc
incl
fiadds
fadds
push
jae
cmp
dec
cmpl
push
lret
jne
sarl
mov
ja
adc
lock
int
pop
sbb
cli
movb
sbb
dec
cmpsl
xchg
out
push
ret
jle
add
pusha
lea
adc
sbb
in
mov
addr16
jp
fisttpll
or
push
rcrl
fldenv
cmpsl
mov
push
push
xchg
dec
mov
into
outsb
fdivrl
jne
and
pop
arpl
adc
add
inc
and
out
clc
sarl
shrb
adc
call
inc
leave
js
pop
test
popf
sub
test
mov
int
das
pop
mov
mov
daa
add
inc
mov
mov
mov
jbe
mov
enter
push
ret
jns
je
aas
push
pusha
dec
ret
xchg
ljmp
fcom
jb
cmp
dec
inc
or
ja
pop
sbbl
and
enter
inc
mov
dec
xchg
pop
outsl
repnz
addl
rcrl
test
xchg
pop
jmp
lret
sbb
iret
stc
jecxz
out
push
push
pop
jp
sbb
movl
shll
outsb
adc
xchg
nop
lods
popf
out
fildl
leave
aaa
adc
jns
adc
xlat
mov
movsl
adc
mov
imul
outsl
mov
and
sub
sbb
and
fistpll
lods
jne
adc
fbld
cmp
fcomip
and
jmp
aam
sub
pop
mov
xchg
dec
or
testl
test
popf
adc
inc
rcrb
or
ret
and
test
imul
sub
jo
dec
push
out
add
movsl
scas
mov
add
push
xchg
aas
pop
or
mov
xchg
test
jbe
sti
dec
ror
aas
lea
fstps
repz
leave
push
sbb
adc
out
pop
mov
aam
add
jae
and
jl
inc
scas
test
mov
and
jge
pop
push
mov
stos
adcb
repnz
sub
jnp
jecxz
jp
rcrl
in
test
push
cmp
lock
jbe
cmp
pushf
cmp
lea
dec
inc
lret
nop
repnz
pushf
aad
scas
imul
imul
sar
xchg
outsb
sti
scas
sbb
jne
xchg
imulb
push
adc
mov
arpl
jns
push
xchg
dec
flds
dec
xorl
daa
cltd
push
clc
mov
stos
cmp
imul
cmp
xor
adc
adc
sbb
adc
aam
popa
int
lods
add
imulb
sub
in
scas
xchg
mov
arpl
mov
notl
xchg
xchg
mov
in
jl
push
out
stos
dec
mov
dec
hlt
xchg
loope
nop
shrl
lods
lds
sbb
mov
cmp
fisubrs
in
imul
dec
sahf
jb
adc
stos
cmp
and
jo
daa
std
pop
push
lods
test
xchg
clc
imul
test
adc
or
outsb
pop
popf
pop
paddsb
adc
xor
sarl
pop
fwait
int3
and
fcmovnbe
insl
pop
inc
xchg
mov
lods
sbb
xor
and
aad
add
and
pushf
adc
xchg
xor
aad
aaa
adc
jne
rolb
hlt
and
adc
and
adc
mov
movsb
push
sub
scas
adc
pop
pushf
cmp
getsec
dec
pop
clc
cmp
mov
sbb
xchg
xor
ja
pop
mov
fdivrp
cmp
jg
aas
inc
mov
in
stc
cli
daa
xor
mov
cmp
imul
cld
xor
xor
dec
adc
sar
insb
pop
pop
call
xchg
ja
scas
pop
popf
outsl
movsb
dec
addr16
js
dec
push
outsl
pusha
jecxz
inc
sbb
mov
fldl
cmp
jg
inc
sbb
popf
mov
sahf
pop
dec
mov
out
jecxz
and
and
lock
pop
stos
repz
cmpsl
xor
mov
inc
movsb
xchg
xchg
ja
gs
test
jb
pop
pop
lock
sub
stos
jb
push
push
mov
rcll
and
hlt
add
scas
scas
mov
loop
test
add
add
out
fdivl
fistpll
sahf
sarl
outsl
mov
and
sahf
les
xchg
rorb
hlt
sbb
push
inc
jmp
pmaddwd
shll
mov
add
push
pop
cmpsb
pop
mov
ret
stc
and
outsl
int3
xchg
mov
testb
jmp
pop
jp
and
inc
cmpsl
jae
pop
es
mov
fsubs
aas
add
ficoml
cld
testl
pop
cli
mov
insl
scas
pop
jge
cltd
adc
jle
jl
xchg
cmp
ljmp
imul
xchg
or
stc
sbb
repnz
inc
adc
mov
mov
push
outsb
data16
xchg
ljmp
test
jge
jo
or
icebp
insl
cmp
mov
imul
je
ret
cwtl
iret
stc
push
test
jmp
adc
or
out
arpl
stc
cmp
jb
sahf
imul
pop
or
std
scas
dec
testb
cmp
popf
popa
icebp
xor
lea
inc
and
addr16
in
pop
and
ja
or
into
push
mov
or
adc
dec
rcrl
cmp
and
pminsw
pushf
lret
sub
xchg
push
in
in
call
jno
xor
xchg
cmpsb
repz
fsubrl
pop
test
and
sahf
stos
adc
loopne
es
mov
fisttpl
xchg
movsl
mov
das
fs
popa
mov
add
and
push
jg
in
clc
hlt
xchg
orb
sbbb
dec
cltd
sarl
rcrl
les
outsl
dec
shll
dec
shlb
xchg
or
jae
mov
mov
xor
sub
popf
mov
insb
sbb
mov
dec
sub
and
fwait
xor
add
lock
pop
adc
lcall
in
insl
and
ja
cmp
pop
mov
mov
daa
and
leave
cmp
test
test
call
jne
popa
dec
sahf
xchg
dec
and
inc
xlat
xchg
jns
pusha
rorb
inc
push
adc
mov
push
mov
push
xlat
xchg
dec
fwait
leave
sahf
push
xchg
xchg
mov
add
sbb
lods
sti
ret
jle
sub
test
out
enter
jbe
jns
mov
out
or
fxtract
hlt
les
ja
push
out
cmp
and
daa
sbb
shlb
bound
inc
fimull
jbe
inc
shl
sbb
push
pop
std
push
outsb
mov
or
sbb
cmp
dec
or
push
and
dec
enter
lds
test
lret
inc
push
add
sbb
pushf
imull
cmpsl
mov
mov
out
loopne
scas
adc
inc
shr
mov
jo
pop
push
movsb
lret
stos
and
jmp
ja
mov
pop
daa
dec
ja
xchg
xor
outsb
cmp
jp
mov
fsubs
mov
add
inc
out
in
fwait
sbb
sub
mov
call
mov
lea
out
scas
stc
pop
and
push
fwait
pusha
xchg
stc
clc
mov
xchg
mov
es
sub
es
testb
mov
mov
flds
stos
lods
aaa
dec
ljmp
mov
or
jg
xor
mov
pop
divl
into
cmp
bound
jmp
lock
push
lahf
aas
in
stos
shll
fistps
xchg
dec
mov
and
bound
ret
mov
push
push
test
push
dec
inc
jne
dec
imul
dec
mov
mov
push
dec
inc
add
ror
dec
je
xor
loop
dec
vpsubsb
fcoms
jnp
nop
pop
mov
add
stos
jb
pop
pusha
or
xchg
push
repz
mov
arpl
xor
adc
enter
and
jno
out
cmp
push
mov
jg
clc
mov
and
lods
popf
push
adc
adc
xor
dec
popa
xchg
out
inc
jnp
mov
rorb
ja
lcall
fwait
repnz
es
stc
sub
es
or
addr16
flds
cmpsb
clc
insb
sbb
shlb
bound
cmc
or
inc
test
movsb
push
aaa
mov
jae
rorl
push
test
cmp
mov
jg
pushf
stc
out
push
dec
mov
lahf
mov
jmp
pop
ret
and
push
jns
xchg
push
loope
ds
loop
mov
jo
fstl
pop
or
daa
mov
iret
flds
hlt
adc
xor
jns
arpl
dec
in
adc
lods
insb
jns
mov
adc
jp
dec
rcrb
pop
insl
not
outsb
mov
inc
aaa
addr16
jne
loopne
pop
ret
pop
out
adc
dec
or
xchg
mov
mov
pop
inc
mov
dec
aam
hlt
ficomps
stos
mulb
sbb
push
jge
dec
das
jmp
addb
push
cmp
inc
pop
pop
add
mov
mov
andb
icebp
repnz
and
lret
mov
lret
xor
test
jp
ljmp
lcall
inc
xchg
ret
push
inc
fsubrl
cmp
mov
orps
cmp
and
test
je
int
ds
adc
fdivrs
addr16
loop
setge
or
leave
pop
cmp
dec
adc
aam
shll
mov
sbb
int3
loop
sti
dec
push
je
cltd
jae
xchg
jmp
add
xlat
push
dec
rcll
cmpsb
test
mov
in
lds
loope
movsb
rclb
push
push
js
mov
add
jecxz
adc
jns
dec
jg
fdivrl
sub
pop
cmp
in
mov
jbe
and
mov
lret
int
repnz
cmp
adc
mov
hlt
dec
jecxz
inc
jp
mov
or
imul
js,pn
cmc
nop
loop
jmp
and
sbb
mov
jge
adc
mov
movsl
mov
in
fidivs
mov
sub
adc
pop
xchg
xor
lds
inc
test
fstpt
lcall
sub
or
insl
int
xor
bound
sub
push
xor
xor
dec
insb
sbb
mov
daa
push
das
mov
jne
les
gs
jo
insl
xchg
xchg
mov
arpl
cld
sbb
test
leave
push
sub
inc
lea
xchg
cmpsb
jo
mov
mov
mov
push
movsb
push
data16
sbb
pop
adc
sahf
outsl
cmp
jnp
lds
adc
cmpsb
je
jmp
xor
das
test
lods
inc
xor
out
and
lds
in
xchg
fisttpl
inc
mov
xor
push
jns
sbb
adc
xor
push
pop
add
inc
into
shlb
or
pop
adc
mov
rcrl
sub
or
mov
ret
lods
and
jg
and
fcomps
xor
arpl
xchg
je
add
pop
sahf
rcrl
push
jne
clc
sbb
inc
insl
inc
imul
nop
in
mov
inc
out
jae
sub
add
pop
in
mov
test
mov
clc
add
xlat
les
mov
push
aaa
push
jl
push
scas
adc
mov
pop
mov
mov
sub
ljmp
adc
dec
repnz
stc
dec
and
sub
mov
outsl
sbb
mov
jno
outsl
jl
xchg
inc
leave
lds
stos
push
in
das
loope
or
fs
mov
sahf
fldt
dec
mov
call
sub
out
sbb
fbstp
fimuls
jbe
inc
mov
mov
xorl
into
adc
insb
cmpsb
decb
mulb
test
js
setle
lock
rdpmc
stc
inc
sbb
sub
sbb
es
dec
ja
mov
iret
adc
add
dec
test
add
lock
scas
shll
push
icebp
mov
das
aaa
lds
jle
js
pop
mov
jmp
mov
gs
mov
loopne
test
push
jb
xchg
lock
pushf
jg
mov
pop
sahf
push
fdivs
cmp
int3
subl
aad
mov
cmc
stos
mov
and
mov
xchg
sub
mov
sbb
jbe
pop
in
movsb
insl
jmp
mov
aam
xchg
dec
xchg
jo
or
dec
test
aas
adc
cmp
mov
ss
mov
ret
sbb
int
pushf
loope
xor
fcmovnbe
sub
in
mov
call
xor
push
add
je
push
faddl
scas
jle
ret
icebp
add
iret
mov
imul
dec
jbe
scas
and
add
loop
mov
pop
lods
inc
stos
loop
jns
or
push
ja
clc
lock
mov
mov
and
pop
sbb
fs
in
ja
mov
dec
xchg
dec
dec
in
in
mov
movsb
das
inc
sbb
les
xchg
and
sti
mov
jne
out
inc
dec
sarb
rcrb
fsubp
xorb
mov
pop
je
into
shlb
xor
push
pop
fistl
sub
movsl
out
dec
cld
push
mov
out
pop
js
into
xor
lods
addr16
inc
xor
fs
ret
and
in
sbb
lock
dec
add
add
sar
xchg
xor
lea
and
cmc
js
sub
leave
out
add
xor
add
mov
or
push
mov
push
aas
aam
adcb
fdivrs
xor
jo
shr
pop
fldcw
std
pop
and
testl
pushf
shl
sbb
jg
lahf
dec
fdivl
std
and
xor
stos
cmp
and
movsl
ja
test
add
sbbb
fwait
outsl
iret
lods
aaa
ljmp
mov
mov
and
adc
into
pop
pop
fsts
xor
xor
mov
cs
adc
dec
out
stos
dec
mov
xchg
cmp
or
iret
jb,pn
mov
pop
rorb
inc
stos
test
cltd
outsl
sub
pop
ret
lret
xor
in
adc
inc
dec
ret
jae
mov
insl
ss
jecxz
push
sbb
mov
pop
push
inc
pop
mov
mov
and
pop
adc
xchg
xchg
and
xchg
add
sti
mov
lods
dec
andb
rorl
or
daa
test
xor
mov
jle
pop
sub
jecxz
addr16
rolb
iret
jmp
scas
nop
out
add
scas
sbb
inc
popf
ret
jo
mov
mov
movsl
fwait
or
inc
dec
pusha
sti
mov
dec
arpl
sbb
cmp
jecxz
mov
das
lds
adc
lret
std
das
ret
push
lret
mov
in
xor
je
xchg
inc
jbe
ja
imul
cmp
push
add
inc
jg
mul
ficomps
stos
pop
pop
or
imul
inc
test
xchg
cmc
dec
sub
xchg
fwait
lret
mov
in
dec
ja
imul
test
fildl
jne
in
cwtl
dec
clc
aam
push
into
shl
lods
inc
loop
or
mov
adc
in
push
mov
and
ljmp
mov
dec
dec
adc
dec
pop
fistps
sub
dec
xor
push
xor
mov
mov
in
mov
jmp
and
mov
mov
lods
rorb
sbb
mov
push
lods
das
leave
cmpsb
adc
adc
clc
ja
sbb
je
dec
pop
aas
popa
mov
into
insb
and
pop
jg
cs
adc
fcoms
ds
js
mov
cld
xchg
xor
or
push
fdivrl
lds
sbb
jl
aaa
das
xchg
test
sbb
cmp
and
cmc
rclb
xchg
jne
inc
cmp
adc
inc
adcb
inc
fists
pop
add
std
cmp
add
jle
pop
pop
les
xchg
push
data16
jns
and
xor
push
xchg
shr
xchg
movsb
loop
jb
mulb
sbbl
fcmovne
ljmp
push
test
mov
jno
loopne
adc
pop
push
rclb
pop
mov
dec
outsb
addr16
jne
mov
mov
add
push
cli
inc
xor
insl
movsb
repnz
dec
dec
cmpsb
cmpsl
mov
ds
inc
or
adc
add
mov
cltd
call
enter
sub
rcrb
cwtl
mov
imul
stc
leave
mov
pop
cmc
movsl
cmp
jbe
enter
icebp
cltd
std
faddl
jnp
push
pusha
and
movsb
inc
xchg
mov
ret
push
stos
xor
push
push
mov
addr16
add
adc
lods
push
adc
push
cmp
shrb
cmp
sarb
sbb
xor
mov
push
scas
sub
push
decl
lods
shll
je
pop
push
das
mov
mov
push
aam
mov
ljmp
pop
ror
int
adc
test
pop
or
push
das
sub
idivb
inc
push
sub
push
and
jecxz
mov
xor
addr16
mov
mov
mov
add
jnp
inc
aad
mov
cwtl
push
xchg
testl
xchg
and
mov
sti
int
cmc
xchg
movsb
fld
test
daa
push
hlt
sarb
inc
test
push
inc
sub
rcll
leave
mov
inc
arpl
sarl
xlat
push
cmp
ret
test
adc
test
es
mov
in
mov
mov
xchg
mov
arpl
fcmovnu
fcompl
iret
pop
scas
jecxz
jne
fmulp
adc
mov
stc
mov
out
in
cmpsl
stos
gs
int
push
out
mov
popa
xor
fldt
inc
hlt
inc
pusha
ret
push
call
or
jne
lcall
sbb
lock
xor
out
ljmp
into
pop
mov
cmp
lcall
and
cltd
pop
pop
sarl
test
fsts
jl
jae
fcom
adc
mov
loop
push
ss
repz
mov
add
das
dec
dec
mov
sbb
cmp
aad
cmp
dec
popa
fiadds
mov
push
lock
mov
adc
jle
add
pop
clc
mov
pop
iret
add
leave
sbbb
mov
push
arpl
sbb
jmp
lret
aad
fdivrl
loopne
shr
scas
or
dec
movsl
jl
or
fistpll
scas
or
mov
or
cmovno
lods
xchg
adc
mov
outsl
mov
mov
dec
out
mov
lock
cmpb
popl
push
outsl
pusha
pop
jo
add
adc
and
xor
sar
out
loopne
lock
cmpb
popl
push
outsl
pusha
pop
jo
add
adc
and
xor
sar
cmpsl
loopne
lock
cmpb
popl
push
outsl
pusha
pop
jo
add
adc
and
xor
sar
out
loopne
lock
cmpb
popl
push
vmaxss
ja
cwtl
rcr
loopne
lock
fdivl
in
hlt
xchg
jecxz
pushf
fldcw
jl
insb
fs
mov
sub
fdivl
in
hlt
mov
mov
xor
add
adc
fs
or
jle
sub
fdivl
in
hlt
mov
mov
pop
dec
je
jno
fs
pop
arpl
dec
cmp
xchg
test
mov
test
ret
push
sub
jmp
lods
xor
out
dec
mov
jnp
imul
cmp
mov
loope
imul
test
fsubrp
or
xorb
mov
mov
xchg
xchg
gs
push
movsl
movsb
leave
xchg
dec
inc
xor
mov
xchg
cmp
jbe
repz
cmp
xor
jns
adc
popf
aam
cmp
cmp
mov
hlt
lock
dec
dec
xor
jmp
les
jno
hlt
insb
jle
orb
lret
subl
sub
test
xchg
in
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
inc
shll
test
repnz
cld
push
cmp
ja
push
sub
jge
jg
ds
rcr
ror
cld
aad
adc
xchg
lods
push
and
cmp
adc
xchg
jg
addr16
xchg
mov
ret
mov
mov
xor
add
adc
fs
or
cmp
sub
fdivl
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
test
dec
jmp
xor
push
xor
out
cmp
jns
dec
out
inc
or
in
lock
mov
inc
adc
ret
push
xchg
push
xchg
cmp
jl
cmp
lea
xchg
fsts
jae
jne
mov
lea
aaa
jbe
mov
push
aas
adc
dec
fs
std
push
out
shlb
xchg
or
loop
das
inc
in
insb
mov
je
shlb
call
adc
fadd
iret
sub
xor
sti
dec
test
arpl
shlb
push
mov
push
jp
ucomiss
push
loopne
stos
xor
push
sbb
mov
aaa
pop
scas
or
in
pop
mov
adc
pop
sub
sbb
dec
inc
jg
fdivl
and
psubsb
dec
fwait
mov
sub
outsb
arpl
int3
jecxz
inc
pop
pop
ret
in
inc
push
fsts
pop
sbb
loope
sbb
mov
ret
cmp
sub
sub
xchg
inc
jbe
jmp
or
test
enter
loope
xchg
add
es
push
cld
mov
jnp
dec
lods
outsb
adcb
scas
out
mov
insl
mov
jge
movsl
cmc
addr16
sbb
mov
aaa
xchg
or
jecxz
stc
pop
daa
out
xchg
rorl
cmp
inc
inc
pop
xor
pop
fbld
inc
inc
negb
pop
lods
in
and
add
xor
mov
mov
imul
aad
adc
mov
in
jmp
add
loope
xchg
mov
loopne
lea
xchg
lret
xor
mov
mov
je
int
inc
push
cmp
lahf
jmp
inc
rcrb
jae
pop
and
cmp
push
push
xchg
sahf
mov
dec
enter
jg
outsl
gs
inc
imul
out
cmpsl
mov
cmpsb
pop
inc
jmp
icebp
cmc
cmp
pop
xchg
mov
loope
pop
iret
push
mov
jmp
mov
sti
add
xchg
adc
xchg
jle
add
mov
sti
loope
testb
cmp
jge
std
mov
loopne
fs
or
sub
lahf
test
mov
ret
movsl
repz
pop
arpl
or
sbb
loopne
repnz
mov
les
sub
dec
bnd
push
sbb
out
arpl
ds
leave
xlat
aas
mov
and
lcall
mov
xorb
mov
push
mov
fidivs
mov
inc
push
push
ret
insl
outsl
cwtl
lock
xchg
add
fsubrs
out
jb
push
stc
push
cmp
or
add
in
out
out
jb
call
imul
loopne
jecxz
sarl
push
sub
mov
sub
cltd
icebp
test
mov
iret
gs
imul
int3
mov
xor
push
jp
addr16
mov
lods
push
mov
fdivl
pop
sbb
pminsw
enter
fldl
faddl
xchg
in
frstor
push
aaa
leave
jp
jp
outsb
add
cmc
cmp
pop
icebp
mov
in
aas
dec
or
xchg
bound
ficoms
imul
std
cli
cmc
xlat
iret
lret
cmp
cmp
gs
jb
hlt
push
jbe
std
test
xor
pusha
sbb
popf
or
jg
enter
sbb
in
lret
mov
xchg
subb
nop
fsubp
cs
mov
in
in
push
test
cmp
mov
addb
mov
or
cmp
in
jb
fsub
lea
jno
cmp
pop
sbb
inc
inc
jnp
stos
pushl
mov
stc
or
cs
or
sub
leave
das
ja
xchg
ror
jbe
jge
repnz
daa
mov
loop
inc
cmp
into
sbb
dec
sub
cmc
cmp
mov
and
cmp
xchg
imul
pop
inc
inc
xor
xor
out
sub
cmpsl
scas
out
add
jle
dec
mov
out
xchg
lods
push
pop
dec
adc
jno
movsl
dec
cltd
clc
or
repz
adc
xchg
cwtl
ja
jne
or
xchg
xlat
cmp
aaa
mov
loopne
insb
pop
clc
fsubrs
lock
enter
loope
out
fistps
ds
rorb
int
out
lret
mov
shlb
xchg
adc
test
cwtl
xlat
jle
cmp
fucom
clc
mov
push
add
or
sti
pop
jns
dec
daa
push
test
jge
mov
ja
ss
jns
mov
push
inc
push
sbb
movsb
les
xchg
mov
pmaxsw
xor
push
in
fnstcw
mov
jecxz
dec
jecxz
cli
add
pop
shlb
or
jno
sbb
aaa
mov
mov
fs
push
clc
fsub
pushf
mov
dec
scas
clc
mov
dec
pop
xor
cmp
mov
enter
or
pushl
repnz
mov
aad
jle
mov
cld
and
and
push
out
hlt
out
test
int3
mov
bound
cmp
jnp
adc
dec
adc
outsb
pop
imul
pop
jecxz
push
daa
iret
sub
or
jmp
jmp
or
sbb
add
cmp
and
iret
fstps
push
lock
cmp
popa
dec
adc
jmp
add
arpl
mov
cld
cmp
repz
xchg
insl
xor
xchg
pop
cld
mov
movsb
dec
mov
or
ror
sbb
push
sti
sbb
lret
in
jns
rclb
out
ja
js
inc
add
jle
imul
sub
loop
or
push
mov
add
mov
jno
sub
pop
test
jp
xchg
xor
push
cmc
setg
ja
xor
dec
js
leave
mov
sbb
in
loope
cmp
rcl
push
jp
imul
mov
lds
shrb
sub
jo
popf
iret
mov
addr16
adc
repnz
add
imul
enter
xchg
sbb
movsb
inc
insb
in
sbb
and
dec
or
jge
in
test
mov
imul
mov
push
cld
inc
cs
nop
cmp
mov
mov
out
or
mov
dec
inc
movsl
fwait
inc
jns
cmp
pop
sahf
adc
inc
cmp
adc
jae
push
mov
aas
pop
inc
loopne
add
lcall
clc
dec
jnp
test
pop
insl
pusha
ljmp
jle
or
jl
inc
std
jl
in
adc
movsb
mov
xchg
pop
xor
jp
xor
lods
mov
dec
ja
inc
mov
leave
mov
sub
jns
sbb
inc
shlb
push
jne
cld
dec
loopne
sbb
testb
mov
movsl
lods
dec
sub
pop
jg
stc
ret
or
xor
fwait
add
aas
mov
hlt
std
inc
adc
out
loop
lods
testl
ja
mov
sbb
add
test
xchg
or
inc
jmp
stos
xchg
ficoms
jge
imul
fcompl
popf
lahf
inc
dec
stos
and
mov
in
mov
fldl
loopne
fistpll
xchg
bound
cmp
out
rcrl
setge
mov
jns
cmp
pop
or
push
lahf
paddq
mov
push
xlat
fiadds
mov
test
pop
and
cmp
mov
add
and
sub
ret
sbb
push
mov
or
fsubs
xchg
inc
in
push
pushf
fistpl
out
xor
movsl
jge
imul
inc
mov
inc
out
mov
fcmovne
mov
incb
jns
cmp
shrb
push
int
hlt
sbb
cmp
sub
push
xchg
push
sub
jne
enter
jecxz
add
jmp
test
lods
cmp
lods
lods
out
adc
das
xchg
pop
jo
jecxz
js
mov
cmc
and
inc
push
mov
hlt
mov
xchg
fnsave
ljmp
or
and
js
jl
mov
inc
mov
mov
mov
aad
xchg
lods
clc
iret
sarl
sbb
or
mov
jbe
pop
xorl
shrl
jne
push
scas
inc
rcll
popf
movsl
jb
dec
push
and
out
xchg
das
shrl
int
push
idivb
mov
hlt
mov
inc
push
js
push
or
cltd
sbb
adc
mov
lcall
jo
lods
lods
mov
and
out
mov
fs
enter
fdivs
insl
je
pop
jecxz
test
jecxz
or
mov
push
daa
loopne
adc
cld
outsl
iret
push
xor
fdivrs
adc
xor
add
lret
imul
aad
xchg
mov
push
pop
adcb
cld
dec
cmp
movsl
and
popa
sarl
mov
push
invd
ds
fnsave
mov
orl
xlat
jg
dec
clc
and
pop
sbb
cmp
and
enter
xchg
xchg
movsl
mov
sbb
jge
cmc
std
dec
int
sahf
std
pop
add
cmp
sub
xchg
out
or
inc
int3
xlat
out
imul
dec
cmp
incl
inc
in
aam
sub
fistl
add
cmp
fstps
add
xchg
fldenv
sbb
sarb
outsl
or
mov
scas
inc
gs
inc
out
cmpsl
test
pop
xchg
jmp
sub
jne
mov
dec
mov
mov
js
bound
stc
fstps
daa
cmp
xor
pop
or
pop
jmp
add
in
pushf
inc
sbb
loope
imul
lret
pop
or
stos
enter
adc
fwait
inc
jp,pt
push
xorb
sub
in
stos
mov
and
jne
sbb
or
xor
movsb
mov
dec
outsb
mov
xchg
mov
loope
nop
popa
int3
dec
stc
adc
or
sub
aas
adc
adc
cmc
outsl
pop
xchg
mov
sti
cltd
iret
testb
cmp
dec
jno
mov
jg
pusha
xchg
std
mov
and
shl
test
lds
mov
fcompl
clc
sahf
call
add
mov
xchg
fcoms
xor
lds
xchg
jge
mov
hlt
jmp
add
pop
loop
cmpsl
cmp
cmc
sub
xor
lahf
mov
push
sbb
cmpsl
das
push
mov
outsl
cwtl
xor
push
mov
mov
sub
jl
push
add
adc
or
push
xchg
rcl
data16
lret
adc
jle
imul
sbb
sub
dec
stos
loop
popf
jnp
out
adc
or
ret
sbb
cli
popf
fcompl
ret
shll
pop
dec
subl
inc
ds
pop
sbb
pop
dec
mov
jg
outsl
add
stos
jle
pop
push
in
add
stc
dec
mov
aad
push
mov
out
dec
int3
lds
out
cmp
jae
rorl
pop
sbb
rdtsc
mov
adc
ficomps
out
jnp
xor
pop
aam
push
fwait
pop
add
cmp
xchg
out
jno
mov
pushf
out
shlb
loopne
std
or
inc
push
add
cwtl
cmp
repz
and
ret
jo
pop
iret
and
iret
scas
or
lret
lea
fdivl
inc
fcom
int
ljmp
enter
aas
testb
dec
ret
xor
andl
data16
xor
xchg
rcrl
sub
cwtl
es
insb
mov
inc
hlt
push
lea
adc
sahf
jp
icebp
mov
es
jl
adc
cmp
cwtl
in
fcmovnb
inc
insl
adc
xor
icebp
cmp
jecxz
cld
aad
scas
mov
int3
mov
cmc
imul
add
pop
js
xor
les
and
xchg
or
repz
ljmp
repz
xor
out
or
out
leave
sbb
jnp
fistpl
inc
xchg
and
push
push
scas
jae
pop
xor
out
pop
ret
jmp
sarl
mov
pop
ja
xchg
sti
outsl
fcoml
mov
cmp
into
push
xchg
jo
pop
mov
enter
and
lods
adc
xor
sbbl
js
sbb
xchg
arpl
or
push
leave
lock
pusha
lods
pop
xchg
dec
mov
and
loope
subl
adc
outsb
in
enter
imul
mov
dec
into
cmp
in
push
decb
lcall
jecxz
adc
inc
ret
jns
test
int
and
mov
lcall
push
xchg
or
lret
xor
lods
sbbl
mov
fstpt
rolb
shrb
and
pusha
mov
push
jmp
pop
lahf
enter
push
rol
add
xor
push
into
aam
in
loop
sahf
cmpsb
popf
jns
xor
stc
mov
fisttps
mov
mov
testb
push
out
xchg
mov
mov
mov
rcll
pop
in
sahf
and
push
das
mov
lods
loope
in
cmp
and
xchg
adc
popa
sti
xchg
cmpsl
mov
outsb
xchg
out
xchg
scas
jmp
sub
loop
ds
das
imul
xchg
xor
and
ja
cwtl
pop
rorb
in
push
std
bswap
jo
sbb
outsb
sub
sbb
test
adc
out
jle
loop
ljmp
add
and
out
lods
sbb
push
or
arpl
xchg
out
pop
mov
inc
cmp
cmpsb
xchg
rcll
subb
push
or
add
ret
jmp
sub
out
add
mov
jae
mov
inc
mov
ljmp
pop
lahf
mov
jecxz
pushf
xchg
push
js
aaa
fdivl
adc
testb
xchg
hlt
lret
test
fidivs
aas
cmp
int3
loope
cltd
cli
cmp
pop
sub
sarb
xor
cmpsb
pop
lods
mov
fcoml
shrb
pop
add
push
lods
or
inc
xchg
data16
inc
push
insb
cwtl
ss
stos
jmp
push
cmp
ds
in
mov
loopne
jb
dec
aas
adc
cmc
inc
rorb
cmp
ret
bound
push
inc
push
push
sti
adc
fs
jno
sub
push
scas
jmp
fidivs
xlat
adc
push
or
nop
shrb
aad
cmp
data16
dec
scas
cli
push
sbb
cli
pop
xlat
mov
lea
icebp
ret
xor
add
dec
adc
xchg
stos
ljmp
xchg
jp
dec
push
cmp
lret
in
aad
xor
xchg
adc
adc
push
mov
or
loope
and
cmp
test
sbb
cmpsb
sbb
pop
cmc
out
shr
mov
test
xchg
push
and
cmp
notl
and
inc
xlat
mov
add
add
adcl
xor
mov
mov
dec
push
inc
mov
shlb
adc
pop
adc
add
repz
out
lods
dec
lcall
mov
mov
pop
std
cld
imul
mov
xor
bound
insl
das
aaa
cwtl
mov
movsl
xor
sbb
ret
jb
scas
and
push
sbb
pop
sbb
orb
mov
and
sub
loopne
or
sub
out
dec
push
aaa
lahf
ret
adc
fistl
aam
xchg
dec
loop
adc
or
insl
mov
je
test
pop
popl
movsb
xor
push
std
popa
sbb
inc
and
movsl
cld
xchg
push
rolb
divb
sarl
xor
push
jl
mov
push
mov
loopne
jb
addr16
inc
insl
mov
jle
int3
mov
dec
decb
dec
sub
xchg
cmc
ret
lahf
dec
mov
ljmp
dec
sbb
roll
fdivrs
push
lods
cmpl
test
jns
jle
pushf
jle
test
mov
mov
ss
mov
incl
in
mov
xor
and
jg
cmc
aaa
aas
insl
pusha
xor
mov
std
mov
inc
lds
xor
xlat
lods
cmp
sbb
jne
cmc
jecxz
mov
aam
push
fs
movsb
insb
or
sbb
scas
or
imul
push
call
inc
daa
loopne
xor
test
mov
dec
dec
inc
lods
sub
mov
adc
test
push
push
adc
dec
xchg
imull
out
test
ss
add
imul
jo
adc
push
cs
enter
sub
repz
arpl
push
nop
sub
cmp
sub
and
mov
add
adc
pop
data16
jne
or
iret
stos
and
dec
lcall
mov
aam
lock
jge
out
xchg
cmpl
sub
aas
insl
imul
in
xor
mov
mov
xor
jne
mov
push
sti
jo
int
gs
adc
loop
jns
xchg
lret
rolb
shlb
les
push
repz
mov
lods
or
orl
fs
leave
mov
insb
jle
or
push
int3
jp
push
sarl
push
and
mov
test
xlat
cltd
mov
pop
sub
sti
std
push
or
and
lds
inc
push
dec
loopne
test
mov
aas
or
leave
pop
jle
jae
minps
inc
xor
fstps
bound
fdivrl
roll
pop
adc
std
fxch
jmp
das
shlb
inc
movsl
or
sarl
pop
pop
sbb
stos
mov
xorl
xchg
push
xor
and
push
xchg
or
inc
jg
push
aas
iret
add
ficoml
jg
jle
sbb
mov
cltd
filds
fmull
cmp
sti
cltd
sbb
xchg
and
push
cmpb
push
add
inc
cmova
repz
jb
jmp
test
mov
test
push
add
loop
add
out
sbb
mov
pop
insb
pushf
cmp
dec
int
cmpsl
sub
mov
sbb
outsb
pop
push
jo
gs
sub
iret
fstl
int3
leave
test
jo
scas
push
xlat
leave
jae
sub
xchg
xchg
xor
flds
xor
icebp
push
ficoms
pop
scas
and
mov
jl
mov
jg
jmp
aam
ret
push
xchg
xlat
sub
add
ljmp
xor
aaa
aas
add
imul
cmp
pop
clc
jb
push
lea
sub
aam
adc
xor
xor
orl
daa
add
and
mov
pop
int
xor
fstps
xlat
jecxz
aad
sub
mov
lock
inc
fwait
loopne
mov
loopne
inc
mov
pop
xor
loope
lcall
nop
mov
mov
dec
inc
cld
lods
ret
push
jp
mov
loop
addr16
mov
fadds
out
jp
insl
and
jge
call
scas
xchg
cmp
fwait
out
std
jb
jg
daa
xchg
in
mov
ret
mov
push
jae
mov
rcrb
sbb
insl
pusha
push
mov
subl
leave
cmp
hlt
xor
push
mov
pop
pop
shll
loope
imul
adc
nop
xor
sub
je
xor
adc
add
call
mov
ret
hlt
dec
add
pop
negl
sub
xchg
rcrb
add
nop
stos
xchg
or
jbe
les
sbb
hlt
es
jae
cmp
out
stc
dec
hlt
test
xchg
std
mov
sub
lcall
inc
test
loope
popa
xor
sub
push
aam
push
add
mov
fcmovne
lcall
fs
fwait
js
lret
inc
dec
loop
pop
mov
cmp
scas
out
insl
lret
sbb
bswap
xlat
out
loopne
test
rcll
cs
adc
aaa
movsl
fs
pop
adc
test
andl
xchg
aam
xorb
cs
sbb
movsl
adc
mov
rclb
mov
mov
movsl
pop
cmp
push
ja
out
sbb
mov
cmp
es
inc
rcrl
std
sti
sti
mov
inc
movsl
scas
sahf
xchg
aad
jp
outsl
adc
lcall
call
jb
dec
fucomip
fisubs
repz
inc
lret
mov
mov
cmpl
xchg
mov
pop
std
aam
cli
sub
mov
dec
imul
mov
add
mov
pushf
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
fdivl
in
hlt
mov
mov
xor
add
adc
fs
or
cmp
sub
fdivl
in
cmc
or
mov
xor
add
adc
or
cmp
sub
fdivl
in
hlt
mov
lods
fistpl
scas
jl
sbb
xchg
cld
repz
pop
pop
mov
cmpb
outsb
sahf
inc
ss
and
cmp
adc
adc
mov
mov
cmpb
sbb
sub
cmp
int3
and
xor
and
adc
mov
dec
mov
jl
or
sbb
sub
cmp
int3
ret
decl
xorb
mov
repz
fsts
rclb
mov
adc
lds
xchg
sub
pop
les
lods
stos
adc
enter
std
mov
xlat
icebp
xor
subl
push
rorb
pop
xor
add
jae
popf
and
sbb
push
aaa
imul
hlt
xchg
bound
movsl
mov
in
mov
loope
leave
mov
pop
mov
cmpb
or
test
jo
iret
adc
xchg
out
jae
fmull
mov
mov
jo
rcrb
nop
jns
and
mov
imul
std
cld
inc
mov
push
scas
xor
into
adc
and
adc
adc
andb
mov
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
mov
adcl
mov
in
push
test
or
cli
cmp
or
adc
push
movsb
outsb
mov
out
je
push
lea
repnz
shrb
sub
pop
aad
loope
in
mov
sub
cmp
int3
and
xor
add
adc
mov
mov
cmpb
sbb
sub
cmp
int3
and
xor
add
adc
mov
aaa
icebp
mov
push
xchg
jl
cmp
mov
sbb
sbb
pop
jl
mov
in
dec
pop
in
test
sarl
insl
stos
leave
icebp
or
fildll
inc
cli
jl
cmpsb
mov
subb
xchg
lcall
pop
xor
ret
rorl
add
hlt
call
out
mov
mov
jmp
push
pusha
cmpl
ss
leave
and
mov
pop
or
rorl
push
pop
mov
pop
xor
jo
lods
mov
or
dec
insb
mov
cli
loope
and
in
cs
pop
sti
lods
sub
arpl
cmpsl
ljmp
aaa
orb
in
mov
lahf
jg
inc
push
aas
and
inc
mov
mov
mov
fisttpll
fimull
adc
inc
or
lock
jle
fcmovne
or
pop
pushf
insl
jl
ret
movsb
mov
faddp
stc
test
mov
or
lret
mov
adc
lret
imul
rclb
rclb
pop
sub
adcb
cltd
jecxz
add
adc
fnstcw
sub
repnz
test
pop
xchg
and
mov
push
ret
inc
fdivp
ljmp
push
dec
xchg
cmp
push
sbb
mov
lret
popa
push
cltd
cwtl
push
cld
push
test
push
lock
pop
fdivrl
xchg
dec
dec
jns
inc
vandps
add
or
xlat
out
pop
inc
xchg
inc
sub
ret
and
repz
iret
fsubl
mov
fistps
aad
addr16
and
clc
xlat
mov
push
jmp
sbb
lea
shlb
int
and
in
sahf
repz
mov
lds
cmp
in
mov
aas
ffree
notl
mov
sbb
mov
pop
nop
dec
sahf
sub
push
into
in
loopne
dec
pop
add
mov
in
mov
mov
push
test
ljmp
ljmp
mov
add
arpl
and
sbb
or
lock
sti
inc
inc
jg
mov
jne
cwtl
jg
and
or
nop
xchg
xchg
aaa
out
add
testl
imul
cwtl
in
jecxz
pop
sub
sbb
mov
dec
aam
popa
test
add
jle
jae
into
outsl
repz
lods
mov
sub
push
or
repz
popa
mov
pop
and
or
mov
mov
sbb
cmp
gs
cmp
mov
cs
and
fadds
popf
push
push
cmp
lcall
lahf
shrl
sbb
xchg
insl
mov
lock
movsl
add
xchg
or
pop
test
push
int
push
faddp
mov
decl
xchg
xor
stos
cmpsb
and
jp
leave
nop
inc
dec
or
fdivs
push
std
and
in
cmp
mov
js
jp
xor
clc
mov
cltd
faddl
stc
hlt
add
dec
lock
sub
jbe
mov
and
test
push
rol
stos
mov
popf
les
repnz
loopne
ds
mov
jg
fidivrs
pusha
sub
fs
jmp
rorl
jge
cmp
rol
inc
inc
ficomps
cmc
scas
sbb
dec
sub
xchg
cmp
fildl
cmp
shrl
popf
inc
arpl
dec
jmp
ret
std
jno
incl
inc
mov
popa
mov
mov
jecxz
nop
testl
mov
fxam
fs
loope
ljmp
dec
push
adc
out
xor
mov
scas
jl
mov
sarl
dec
add
subb
ret
xor
mov
decb
xchg
mov
es
adc
test
jbe
xchg
pop
jg
cmp
adc
xchg
add
xor
xchg
mov
sub
mov
out
jne
jg
xchg
pmuludq
dec
rcrl
sbb
mov
jno
or
push
mov
sti
dec
cmp
ret
pop
mov
jbe
rcrl
rolb
nop
rcrl
xchg
and
mov
jecxz
inc
iret
mov
out
xchg
mov
mov
stos
mov
cmp
call
push
push
jb
xor
inc
data16
cmpsl
xor
lret
xchg
jmp
inc
mov
and
dec
rcll
shr
jmp
stos
int
fidivs
adc
sbb
cmp
adc
testb
inc
cmp
scas
xchg
rcl
sbb
dec
jae
stos
das
jmp
cwtl
popa
bound
dec
jbe
jg
xchg
pop
or
pop
jo
cmp
pop
lea
sub
mov
jle
jge
pushf
push
cli
sarb
dec
mov
lea
jecxz
and
outsl
dec
shll
cld
sbb
lcall
mov
fimull
ljmp
fildl
scas
adc
movl
mov
xchg
in
outsl
insb
loope
out
leave
or
ffreep
inc
mov
sbb
pop
out
pop
int3
das
dec
or
mov
inc
loopew,pt
dec
fxch
aad
mov
lahf
add
int
sub
and
sbb
popa
dec
lcall
ret
inc
fs
or
push
and
movsl
inc
pop
ret
or
pop
add
out
sbb
inc
aaa
shrl
in
pop
inc
dec
pop
inc
fnstenv
xchg
pop
push
push
dec
inc
inc
rcrb
cli
or
cmpsl
ss
push
adc
xchg
mov
jne
pop
sbb
push
jl
add
lods
je
adc
cli
je
roll
push
jb
push
out
call
test
jbe
arpl
adc
test
aad
scas
dec
inc
sub
mov
add
cmc
sbb
mov
sub
cmp
shlb
dec
add
push
in
in
push
push
dec
shlb
push
jle
add
gs
out
sahf
add
mov
mov
add
mov
into
pop
stc
or
mov
inc
in
xor
je
jg
mov
dec
xor
push
insl
cld
loope
mov
push
add
loop
mov
bound
mov
movsb
lahf
fcmovnb
xchg
outsl
int3
ret
jl
cli
in
pop
xor
data16
nop
fwait
and
insb
push
add
xchg
iret
fsub
push
jle
pop
xor
and
add
push
movsb
dec
jmp
inc
ret
rcr
or
das
mov
cwtl
into
lcall
scas
add
sahf
mov
sub
les
or
gs
sbb
ret
fidivrl
inc
sarl
and
leave
popf
mov
stc
sti
adc
pop
arpl
mov
fsubrs
fsubr
loope
test
decb
push
jmp
movsl
mov
mov
push
pop
cmp
cmp
mov
test
add
sub
ret
and
xor
push
sbb
xor
movsb
daa
xor
jb
insb
sbb
aam
testb
sarb
sub
adc
push
pop
mov
jne
and
loop
sub
sbb
pushf
insl
adc
mov
pop
xor
mov
outsl
cltd
out
idivl
adc
or
inc
mov
fdivs
lcall
push
xchg
adc
push
xchg
int3
and
fwait
scas
fbstp
mov
rolb
clc
adc
sbb
lods
mov
pushf
scas
lock
push
into
je
or
adc
lcall
or
ja
jge
inc
dec
dec
clc
faddl
das
xor
sub
jg
negb
xor
js
outsl
ret
cmp
sbb
or
pop
xor
push
lea
imul
mov
inc
lcall
insl
add
dec
loopne
sub
dec
aam
mov
dec
sti
push
aad
and
test
dec
arpl
sbb
sarb
inc
xchg
js
adc
int3
cli
fs
jno
inc
data16
sub
pusha
popl
out
jnp
pop
push
test
cmp
xlat
icebp
pop
and
jne
dec
inc
add
cmp
jbe,pt
outsl
mov
out
or
ja
lret
sti
and
rorb
cmp
hlt
cmp
iret
mov
xor
sbb
jb
ret
std
bound
out
mov
lds
adc
lds
insb
jle
lahf
push
adc
cmc
je
loop
gs
push
out
cmp
cmp
dec
add
shlb
jns
mov
add
test
arpl
xchg
dec
push
push
push
cmp
sbb
pop
rcr
js
xlat
add
sub
loop,pt
test
cmp
xor
mulb
cwtl
dec
xchg
mov
rol
rcll
loope
cmc
sbb
lods
sub
dec
cmc
out
mov
or
scas
push
aaa
iret
xchg
scas
pop
cmp
cmpsb
mov
lret
testl
pushl
insb
xchg
pop
push
jno
mov
mov
dec
jl
cmpsl
push
xor
popa
out
inc
mov
push
pop
mov
gs
lea
xchg
fwait
cmp
xchg
out
sbb
sbb
cli
add
sub
dec
jmp
adc
out
fstpt
enter
mov
imul
inc
nop
testb
add
gs
lahf
mov
outsb
lock
std
cld
mov
repnz
pop
mov
out
push
popa
mov
jbe
lods
mov
addr16
inc
dec
or
iret
ror
cmp
sbb
adc
sbb
imul
dec
and
lods
push
adc
jns
jmp
outsb
arpl
dec
sbbb
fs
mov
ljmp
xor
jge
inc
divl
notb
jne
shrl
mov
pop
inc
loop
sbb
lods
repnz
adc
cmc
out
push
cmp
fsubl
add
xlat
std
clc
adc
loopne
xorl
pop
mov
clc
cmpb
in
dec
fsubrl
stos
sbb
lahf
mov
sub
jmp
fnstcw
jmp
fsubrl
ja
jbe
mov
mov
xchg
dec
lret
mov
dec
mov
subl
jbe
loop
jnp
clc
nop
imul
xchg
wbinvd
loope
xchg
movsb
push
or
test
mov
pop
gs
or
sarl
int
loopne
mov
add
mov
xor
push
fcomip
int3
imul
inc
je
andl
daa
fs
adc
jae
mov
iret
cmp
mov
push
pop
adc
les
push
sub
jae
and
cmp
cmp
inc
addr16
insb
jo
out
test
jbe
aam
fwait
rorb
sub
mov
sub
mov
icebp
shrb
push
ja
cmp
jne
into
push
aam
orl
shrl
loopne
mull
mov
cltd
push
jg
jecxz
jmp
jns
mov
data16
lds
or
ss
dec
inc
xor
pop
push
push
mov
stos
ret
cld
push
rcll
or
and
nop
clc
ljmp
jns
notl
pop
stos
cmp
mov
inc
xor
ret
mov
fisubrs
fwait
jg
dec
push
mov
xchg
enter
push
sub
data16
or
lea
xchg
sbb
dec
test
lea
jne
jb
sub
lea
mov
pop
dec
sbb
and
jno
mov
jge
xchg
xor
xlat
xor
sub
movsb
lock
add
cmpsb
or
jle
popa
mov
xor
movsb
add
push
xor
pop
add
jns
mov
out
push
mov
jo
sbb
push
and
fs
pop
sub
loopne
mov
lea
add
xchg
mov
mov
aad
das
out
fmull
movsl
xchg
pop
ficompl
aas
sub
dec
gs
stos
ss
dec
xor
stc
sahf
stos
mov
popa
in
add
or
jge
xor
ds
cmc
int3
rorl
stc
std
jg
adc
push
cmp
pop
fld1
add
sbbl
xor
jb
lret
cltd
mov
std
and
xlat
add
dec
adc
fnsave
dec
cmp
loopne
scas
adcb
cmpsl
je
mov
and
mov
jb
fucomp
push
cltd
stos
xchg
orb
nop
clc
dec
popa
scas
data16
je
sbb
inc
mov
sahf
push
in
inc
sbb
in
or
pop
inc
push
or
jb
jecxz
xor
push
push
in
inc
jb
and
out
jns
mov
mov
fcomip
icebp
in
push
fwait
mov
mov
lret
push
fwait
inc
mov
int
out
nop
jae
xchg
sbb
mov
stc
imul
iret
mov
mov
dec
int
dec
mov
hlt
inc
push
jge
cmp
jmp
push
cmp
roll
jg
add
fiaddl
push
add
insl
sbb
mov
incl
inc
adc
mov
insl
inc
hlt
and
popf
pop
loopne
decb
sbb
push
push
cmp
aaa
adc
outsb
sbb
out
cmpsl
dec
fwait
insl
jno
and
loopne
jnp
popa
scas
andb
push
scas
int
add
push
xchg
lahf
addr16
jg
loope
mov
inc
inc
pop
push
and
imul
std
call
mov
je
enter
std
mov
sub
enter
imul
loopne
add
push
nop
mov
into
ret
cmc
sub
cmp
inc
mov
out
pop
inc
imul
shrl
dec
pop
insl
xor
addl
cltd
lret
ss
adc
mov
repz
cmp
or
sub
idivl
pop
jg
sbb
movsl
pop
cmpsl
adc
pop
push
mov
lock
les
adc
push
shl
ljmp
wrmsr
and
adc
loope
pop
xchg
gs
adc
xor
and
jne
out
arpl
jns
pop
loope
ret
popa
mov
mov
push
jae
sub
adc
sbb
fidivrs
pop
imul
sbbb
inc
es
mov
sub
mov
popa
rolb
mov
add
add
int
addl
shl
or
cmp
xchg
ds
push
pop
mov
mov
xchg
sbb
mov
pop
mov
xorb
xchg
xchg
cmpsl
adc
sub
int3
in
inc
ret
cmp
sub
mov
or
ret
idivl
add
movsl
add
std
xchg
sbb
mov
aad
inc
xchg
push
jp
sub
cltd
xchg
in
mov
dec
inc
fldl
sbb
in
data16
in
adc
jb
sub
mov
aas
int
repz
test
xchg
mov
ret
aad
mov
mov
mov
dec
add
push
nop
and
fnstcw
test
addl
dec
imul
push
lods
and
sub
xchg
stos
stos
stos
pop
pop
cmp
inc
pop
sbb
inc
adc
ret
jecxz
fistps
sarb
and
outsb
mov
lahf
gs
fdivrl
jns
das
xor
ja
fnstenv
std
cltd
test
mov
jae
push
dec
loopne
mov
cmp
fstpt
les
aas
jae
mov
inc
sbb
sub
lcall
jmp
mov
ret
loopne
xchg
xchg
ret
test
std
cld
int3
jae
vucomiss
or
rorb
shll
mov
xchg
orb
xor
jge
fstpt
mov
mov
or
push
sbb
prefetch
push
adc
push
insl
xchg
call
sub
jle
mov
jo
out
jno
popf
xchg
mov
mov
sbb
bound
sahf
and
xchg
jmp
repnz
movsl
notl
int3
ret
lods
in
scas
dec
not
lret
out
push
sbb
dec
mov
sub
scas
insl
in
add
stos
jp
jb
sbb
popa
dec
movsb
push
popa
test
testl
mov
fdivl
cmp
notl
add
cmp
cmp
ud2
xchg
jmp
or
pop
mov
fdivrs
push
ret
ret
inc
fsub
test
dec
sub
adc
stos
ret
outsb
cmp
sub
cmpsb
bound
xchg
mov
sub
or
adc
bound
adc
push
xchg
aam
psubusb
inc
jb
and
adc
inc
jge
decl
fs
sbb
jecxz
in
fld
cmpsb
mov
out
scas
pop
into
pop
jg
xchg
adc
cwtl
data16
aam
imul
ss
adc
cli
mov
into
inc
and
dec
xor
pop
mov
ja
ds
xchg
mov
scas
cmpb
push
mov
dec
push
imul
xchg
mov
mov
add
aaa
dec
push
sub
js
fdivrl
adc
pop
shrl
or
add
test
add
inc
cwtl
inc
scas
rorb
pop
loop
mov
cmp
or
or
fmuls
mov
je
lcall
pop
xor
in
mov
sub
xchg
insb
xor
inc
sbb
inc
jnp
sub
add
int
cmovne
flds
xchg
insl
mov
scas
mov
dec
in
in
adc
sbb
rorb
or
jbe
push
and
fnstcw
mov
es
adc
lret
cltd
or
repnz
mov
icebp
cld
out
leave
movsl
test
push
fisttpll
sub
loope
and
xlat
or
xchg
push
push
add
popa
cld
xor
cmpl
sbb
outsb
andb
ja
pop
pushf
mov
pop
xor
sar
ret
mov
or
pop
adc
fidivrs
lahf
iret
mov
cmp
or
sbb
mov
arpl
sbb
xor
xor
add
outsb
pop
repnz
test
mov
ret
push
mov
fistpll
lahf
adc
or
test
fistps
dec
cmpsb
fcomps
mov
mov
test
out
ss
add
lods
hlt
cmpsl
and
call
testb
mov
inc
test
testb
jno
sub
das
sti
iret
dec
xor
loop
iret
shl
sbb
cld
mul
and
fisubrs
out
insb
dec
dec
dec
or
fstl
repz
pop
outsb
hlt
xor
mov
push
out
mov
jl
or
mov
push
xor
fadds
pop
pop
dec
or
es
ret
popa
enter
xlat
mov
ret
mov
inc
jno
dec
jp
jmp
lret
push
xchg
mov
inc
and
dec
int3
mov
lret
inc
push
mov
sti
das
xchg
dec
out
out
lret
push
jbe
enter
mov
cmp
pusha
in
lds
dec
int3
cmp
adc
mov
xor
fwait
test
push
xchg
mul
lods
pop
je
sub
dec
insb
mov
test
mov
push
pop
out
pop
jno
cltd
jp
loop
sti
sahf
mov
pop
mov
jle
or
push
loope
xchg
repz
shrl
push
push
jae
and
xchg
inc
jo
inc
ret
adc
ret
aad
xchg
mov
mov
pop
sbb
aam
outsl
inc
popa
cmpsb
rol
dec
push
mov
in
dec
mov
icebp
fldenv
imul
push
insb
mov
xchg
in
movsb
mov
sub
sub
pop
ljmp
gs
mov
adc
loop
lcall
jnp
inc
fmull
push
mov
leave
pop
add
pop
in
pushf
dec
cli
mov
lods
sti
cmp
scas
push
mov
jns
push
imul
or
push
lock
lret
lods
add
scas
es
cmp
jmp
add
imul
int
xchg
es
icebp
xor
cwtl
pop
push
and
cmp
sbb
fwait
lcall
adc
xorb
mov
xor
fisubrs
pop
test
in
clc
cmp
cmpsb
mov
pshufw
shll
pop
xor
idivl
outsl
pushf
pop
rorb
xchg
shll
call
scas
push
scas
mov
cmpl
out
add
incl
dec
and
adc
xor
xchg
frstor
xor
call
add
mov
jmp
pop
sbb
xchg
xchg
stos
dec
xchg
inc
icebp
mov
aas
inc
rcrl
pop
arpl
pop
add
mov
xor
jge
notl
lret
mov
fbld
fwait
mov
stos
rorb
jge
xchg
shll
stos
inc
popa
xor
insl
outsl
jl
or
sbb
sub
cmp
int3
and
xor
add
adc
mov
mov
cmpb
sbb
sub
cmp
int3
and
xor
add
adc
mov
mov
cmpb
sbb
sub
mov
xor
add
adc
mov
mov
cmpb
sbb
sub
cmp
int3
and
lcall
in
fdivrl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
daa
xor
add
adc
fs
call
pop
xchg
dec
in
hlt
outsb
les
les
inc
xor
push
mov
push
mov
xchg
dec
movsb
ds
les
aam
pushf
inc
out
xchg
fmulp
into
jp
adc
pop
sahf
push
mov
inc
xchg
xor
cs
dec
insb
xchg
jnp
push
dec
js
add
jge
pusha
js
outsl
sahf
popf
jg
jecxz
xchg
fistpl
sbb
xchg
rol
enter
test
xchg
xor
hlt
push
leave
xchg
flds
add
dec
sbb
test
les
sub
jno
jno
add
dec
cltd
pslld
xchg
pop
xchg
mov
ds
or
call
out
loope
clc
ficompl
ja
fisubs
mov
hlt
jle
loopne
das
adc
mov
cwtl
mov
test
aaa
outsl
test
hlt
imul
pop
fstpt
push
add
jne
lods
mov
xorl
fcmovb
or
push
jg
out
add
adc
cmpb
mov
outsb
repnz
movsb
dec
lods
ds
negb
aam
dec
xchg
inc
cmp
or
sbb
xor
push
movsb
adc
pop
loope
icebp
and
pushf
mov
imul
adc
ret
cmp
add
fwait
inc
lods
imul
gs
inc
mov
inc
sahf
push
mov
xchg
dec
in
hlt
les
aam
and
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
les
aam
and
xchg
sti
sub
pop
stos
jnp
mov
int
inc
stos
out
mov
jl
out
jb
mov
and
outsb
jmp
jb
mov
jo
lods
sar
inc
in
mov
call
mov
iret
adcl
jno
or
jle
adc
fwait
gs
shrl
xchg
xor
xlat
dec
pop
dec
orl
enter
mov
jmp
mov
bnd
ficoml
jo
lds
sbb
add
mov
xor
and
addr16
clc
repnz
fs
outsl
push
clc
aad
dec
push
ja
lock
sbb
mov
fistl
mov
adc
jnp
jg
mov
mov
add
add
sub
mov
pushf
es
adc
call
cmc
cmp
pop
pandn
dec
jge
add
cmp
xor
or
aas
adc
xchg
fstp
pop
sahf
popa
dec
jg
rol
cmp
arpl
pop
fwait
rclb
clc
cmpsl
dec
cli
out
pop
pusha
mov
push
xor
testb
cmp
and
sub
push
push
push
faddl
or
adc
cmp
xchg
mov
xchg
and
add
push
jge
inc
add
add
imul
xchg
add
jmp
imul
add
cltd
push
movb
lods
in
cmp
lcall
fmull
dec
xchg
popf
sub
adc
dec
mov
imul
mov
xor
fsts
ret
stos
pop
aad
xchg
fstpl
test
dec
test
hlt
adc
inc
loop
arpl
stos
in
enter
push
and
or
aaa
pop
out
aas
insb
mov
push
scas
pop
add
inc
fucomip
cli
jnp
xchg
and
cmp
outsb
jo
sub
mov
cli
mov
inc
sbb
data16
pushf
lret
into
popf
cltd
mov
xor
xchg
push
mov
icebp
cmp
popa
imul
mov
fidivrl
pop
pop
enter
orl
int
shrb
dec
frstor
sbb
je
jae
mov
push
and
adc
fidivrs
xor
stos
xorl
adc
stos
inc
adc
mov
hlt
jnp
les
out
shrl
jg
xlat
icebp
cmpsl
ljmp
clc
test
into
loope
or
movsb
xor
or
adcl
ret
imul
shlb
cmpsb
inc
jno
inc
sbb
adc
xchg
cmpb
push
popa
push
imul
sbb
push
dec
mov
sub
fs
jmp
mov
sbb
push
xchg
decl
lret
rolb
mov
adc
insl
cs
addr16
ret
test
test
lea
arpl
in
push
mov
dec
popa
pop
cmpsl
daa
cld
xor
sbb
and
pop
jl
push
int
jle
add
outsb
jecxz
repnz
add
sub
jmp
popa
push
lahf
stos
bound
fsubs
negb
aaa
adc
sub
into
cmp
pop
pop
iret
std
pop
rcll
dec
fcoms
push
fucom
ja
pusha
add
push
test
pop
jae
pop
fs
test
adc
es
jnp
sub
xchg
push
and
add
stos
mov
mov
mov
add
mull
cmpsl
insb
in
ficoms
adc
push
xor
sbb
fimuls
pop
in
sbb
popl
les
scas
mov
repnz
pop
xchg
or
push
mov
cmp
push
dec
adc
loop
jecxz
mov
add
xor
jge
sub
subb
hlt
xchg
rol
mov
ljmp
xor
pop
mov
mov
fs
sbb
call
jmp
dec
push
mov
decb
mov
mov
and
insb
or
push
jno
mov
xor
xchg
sub
dec
insl
mov
push
scas
fstpt
add
mov
mov
mov
daa
out
mov
sub
call
xor
inc
or
push
pop
test
into
es
fwait
ss
gs
mov
xor
nop
pop
inc
pop
orb
lret
fwait
xor
icebp
mov
push
pushf
mov
pop
es
xchg
clc
and
sahf
movsl
and
insb
gs
xchg
scas
popl
int3
inc
inc
outsb
inc
std
aam
push
out
fcomps
sub
stc
lock
push
adc
scas
orl
or
add
xchg
arpl
mov
pop
shrl
push
ret
sub
jns
push
push
mov
scas
scas
sub
add
ja
movsl
rorl
stc
adc
aad
xchg
adc
fcoml
inc
cs
push
jbe
loopne
pop
lods
movl
out
shll
loope
vpand
mov
push
and
scas
rorl
aaa
xchg
mov
xor
and
jl
out
ret
add
cmpsb
jmp
jns
xor
xor
cltd
repnz
jl
mov
insl
scas
aad
xchg
mov
addb
mov
cmp
mov
outsb
xchg
aaa
jbe
repnz
sbb
xor
clc
pushf
and
jnp
pop
mov
pop
mulb
insl
dec
add
sbb
or
cmp
roll
clc
mov
ljmp
jge
stc
cmc
repnz
fcmovb
out
xor
fcoms
push
jae
xchg
sbb
push
inc
jmp
jle
xor
cmp
mov
in
pop
dec
adc
rcr
mov
add
jmp
fcompl
xor
xlat
movsb
movsl
notl
pop
daa
daa
adc
fs
lods
sbb
xchg
adc
pop
mov
aaa
mov
sbb
imul
adc
sub
cs
movsb
cmp
inc
mov
xor
ret
mov
pop
repnz
inc
sbb
dec
mov
xor
inc
inc
jnp
mov
pop
jg
add
sbb
lret
lret
cli
sub
ret
loop
inc
push
pop
cmp
inc
lret
add
fildl
mov
es
into
lods
bound
rcll
ds
cltd
bound
add
leave
fadds
nop
imul
ds
mov
or
ret
subl
lock
pusha
jl
jle
stos
popf
mov
out
push
loope
movsl
fwait
add
mov
inc
jbe
ret
int
adc
dec
jno
scas
and
cwtl
mov
stos
hlt
lret
shll
scas
add
test
mov
mov
dec
xor
fnstcw
cmp
lock
inc
fldenv
push
and
sbb
jmp
mov
sti
aaa
lods
std
or
shrb
pop
mov
pusha
jmp
dec
or
xchg
push
adc
scas
add
shlb
nop
dec
jbe
leave
sbb
xlat
rcr
leave
dec
iret
jbe
inc
aad
lret
addr16
cmp
cld
mov
sbb
out
ret
out
cmpb
ret
addb
in
mov
icebp
add
cmp
push
inc
mov
roll
dec
aam
dec
jnp
mov
sub
enter
mov
fstp
or
or
or
push
ret
loope
mov
insb
xchg
cmp
test
add
rol
je
adc
push
jl
aad
std
mov
repz
add
push
bnd
and
repnz
aaa
push
roll
lock
aam
sbb
inc
sbb
ja
push
pop
cli
or
or
jnp
js
aam
cwtl
push
pusha
or
js
fistl
xchg
pusha
pop
dec
xchg
or
ja
and
or
popa
arpl
mov
pop
test
movsb
shll
dec
inc
outsl
pop
nop
xchg
inc
mov
flds
add
cltd
test
xchg
cmpsb
ss
cltd
out
pop
add
imul
sub
pop
push
mov
lahf
dec
ljmp
and
ds
push
sahf
addl
mov
dec
loopne
dec
lods
sbb
aas
cmp
jmp
jae
cmc
push
add
das
pusha
scas
aas
adc
jp
addr16
push
sub
adc
or
into
cmpsb
inc
mov
cmp
and
dec
fs
test
fwait
in
pop
mov
xor
imull
push
and
fcmove
fs
xchg
idivl
mov
ret
jle
and
pop
aam
xchg
push
fdivrs
sub
repz
xchg
xchg
test
push
jecxz
mov
int
incl
sub
nop
aaa
nop
inc
push
fnsave
movsl
xchg
inc
clc
les
cwtl
sti
mov
dec
push
jae
cmp
pop
push
stos
xchg
mov
hlt
cmpl
cmp
push
pop
and
outsl
jecxz
cwtl
insl
pop
mov
push
sbb
push
inc
jb
mov
loop
lret
mov
cmp
addr16
push
leave
ljmp
sbb
cmpsl
lahf
in
mov
mov
stos
jl
sbb
imul
add
cmp
lds
scas
mov
mov
inc
in
insl
js
fdivr
mov
xchg
sahf
xchg
cmova
lahf
jge
loope
stos
daa
adc
pop
dec
adc
pop
or
lods
ljmp
repz
int3
sub
imul
sbb
icebp
leave
cmpsl
out
lods
gs
pop
ss
outsl
jbe
out
insb
and
pop
and
into
cltd
inc
adc
mov
into
cli
fsubr
mov
pop
cmc
push
push
mov
mov
dec
ret
ret
out
pusha
jl
cmp
xchg
jle
pop
jg
lea
call
push
pushf
scas
jg
cmc
sahf
rolb
scas
movsb
rcrl
insl
daa
sub
call
iret
and
mov
xchg
ficoms
jne
pusha
mov
and
fs
push
mov
data16
pushf
and
dec
xlat
fldenv
or
adc
loop
push
jbe
jmp
repz
mov
cs
in
mov
and
dec
leave
mov
stc
mov
mov
pop
test
add
push
inc
ficoml
call
aas
inc
stos
shlb
insl
cwtl
sub
or
push
sbb
aam
xchg
add
hlt
push
pop
enter
add
in
shll
sub
iret
xor
cmpsl
jo
pop
xor
cmpl
pop
push
add
sbb
cmp
xchg
xchg
and
sub
sarl
sbb
imul
or
dec
cmp
aad
adc
pop
add
imul
mov
test
and
lcall
rorb
rorl
push
les
push
ljmp
lret
jns
scas
cmp
icebp
xchg
push
pop
pop
das
mov
push
or
mov
in
fistpl
pop
pushf
mov
inc
fnstenv
std
loope
imul
cmp
mov
push
cwtl
xor
jmp
add
add
add
pop
cmpsl
stc
push
xchg
xchg
sub
pop
lds
negb
lods
js
and
cs
cmp
inc
test
ret
ret
jge
cwtl
xchg
test
mov
jbe
jo
shlb
rcrl
bound
or
stc
mov
fisubrs
adc
pop
ret
jo
push
jne
shl
or
xchg
xchg
mov
lret
inc
cmp
ret
cmp
lahf
aam
in
push
pop
outsb
sub
sub
cmp
call
scas
lcall
out
mov
sub
into
inc
adc
or
loopne
gs
push
xor
mov
cli
xchg
imul
inc
dec
sbb
mov
imulb
inc
xor
fldt
movsb
or
stos
in
push
sub
data16
pop
mov
dec
push
mov
pop
cld
mov
out
mov
xor
sti
bswap
sub
mov
xchg
inc
mov
add
xor
inc
scas
rolb
pop
jp
inc
cli
jo
ja
mov
cltd
clc
std
fldl
shrb
mov
lret
fldcw
dec
pop
call
sbb
push
into
js
addr16
out
inc
push
loop
repz
call
jae
inc
sub
mov
mov
adc
mov
and
mov
in
pop
mov
fisubrl
jle
loope
jmp
outsb
les
ret
cmpl
jbe
mov
test
outsb
seto
dec
push
dec
xor
mov
mov
jge
mov
jo
les
je
or
push
shll
cmp
ja
insb
fcoms
xchg
xlat
sub
cmp
mov
hlt
fninit
es
push
hlt
mov
icebp
mov
cmp
dec
pop
and
inc
adc
jns
push
cltd
jg
xlat
jno
std
mov
in
mov
push
movsl
add
outsb
fwait
loopne
repnz
and
or
and
and
icebp
and
jmp
bnd
fsubrs
cmp
pop
ljmp
jb
or
xchg
xchg
adc
push
shll
test
pop
or
mov
pop
fidivl
das
push
adc
xor
mov
mov
lock
jge
fidivl
xor
adc
enter
push
les
xchg
add
xchg
push
dec
xchg
call
push
sbb
lcall
dec
negl
scas
test
jo
push
pop
jno
adc
jns
cwtl
lcall
out
mov
iret
icebp
lahf
xor
jne
mov
sbb
mov
xor
arpl
ds
mov
jl
int3
fiaddl
test
jb
lea
dec
pop
add
sarl
cli
notb
push
jb
cmp
push
out
cmp
aam
push
les
lods
fwait
ja
xor
jns
call
cmpl
mov
mov
lds
xchg
popa
xchg
pop
push
and
in
jmp
mov
jae
or
aas
pusha
mov
test
add
mov
cld
nop
inc
imul
xcrypt-cbc
cmpsl
adc
push
mov
fbstp
inc
inc
xchg
cmp
mov
pop
fdivrs
mov
mov
pop
adc
clc
shrb
test
ficoms
push
mov
mov
test
and
incb
xor
ss
adc
inc
adc
sbb
adc
std
dec
mov
jbe
inc
dec
lret
dec
pop
ds
jne
sbb
sub
mov
fnsave
mov
jmp
lret
push
mov
in
out
cmp
mov
test
clc
imul
push
xchg
out
es
xchg
pushf
sbb
sbb
cmc
insb
subl
jo
dec
mov
cmp
xchg
gs
mov
mov
rclb
arpl
push
mov
and
push
jno
dec
lock
push
adc
jae
movsl
clc
insb
sbb
repz
inc
out
fisubl
lahf
scas
cmp
or
sti
mov
shrl
hlt
flds
lea
dec
repnz
bnd
int
add
popa
mov
add
sbb
pop
push
adc
xor
ljmp
sbb
mov
movsb
imul
cmp
cwtl
imul
mov
lods
xor
aaa
or
addr16
mov
mov
mov
lret
pop
repz
out
sar
fisubrs
fildll
jns
jbe
and
xchg
cmp
inc
cmp
call
pop
jg
pop
push
cmpsb
jmp
insb
jae
pop
or
les
jg
cmp
psllw
lea
xchg
std
mov
add
adc
dec
mov
stos
cmpsb
inc
adc
cmp
dec
sbb
cmp
cs
out
and
xor
in
xchg
ret
inc
pop
cmc
jae
insl
jl
lret
add
mov
pop
and
sbb
imul
lcall
or
addb
into
rcrb
repz
adc
pop
scas
cmp
icebp
outsl
xor
sbb
adc
or
cmp
mov
mov
adc
sbb
loop
dec
mov
adc
imul
cmpsl
mov
imul
outsb
nop
hlt
jle
dec
pop
and
leave
addl
mov
pushf
int3
test
push
xchg
push
push
insb
sbb
push
xchg
iret
sbb
daa
sub
adc
ds
je
loop
out
or
rolb
dec
mov
jmp
mov
ja
ret
rcrb
push
mov
push
or
add
repz
sub
add
subb
sbb
ss
scas
fwait
movsb
cmpsl
mov
fcomps
inc
jecxz
sarl
cli
push
pop
push
jbe
loopne
les
popa
es
sub
adc
stos
xchg
mov
imul
lret
and
pop
imul
push
cld
sbb
sub
test
daa
jg
jecxz
mov
lds
xchg
cmc
jp
data16
inc
cli
vandps
mov
movsl
ret
in
jns
jbe
jecxz
call
data16
xchg
repnz
dec
or
sbb
nop
pop
inc
mov
dec
jne
push
in
sub
push
add
pop
mov
icebp
inc
leave
jbe
and
stc
testb
jno
inc
sbbl
adc
jg
rol
js
sub
xor
fucomi
sub
sub
rolb
push
jecxz
into
loop
inc
mov
stos
scas
ss
sbb
xchg
push
and
push
add
test
lret
jmp
lods
and
scas
addb
outsb
push
ret
sub
or
cmpsb
in
je
xor
insl
mov
jmp
rcrb
cld
scas
and
add
push
cmp
push
mov
mov
jecxz
aas
pop
aam
fidivrl
test
outsl
fmul
pusha
outsl
xchg
test
int3
mov
jno
or
out
sbb
popa
or
sbbl
xor
push
lock
adc
loope
mov
sub
aad
fsubs
ja
adc
pop
mov
ss
adc
lcall
add
sub
out
test
xchg
lret
pop
xlat
jae
xor
push
sbb
cli
cmp
stc
shll
xorb
inc
insb
pop
lds
xchg
inc
setbe
mov
pop
pop
rcl
jecxz
fcomps
aaa
and
out
outsl
sti
rorb
push
mov
sub
imul
iret
sub
mov
sahf
daa
data16
je
enter
je
aaa
add
mov
stos
cmpsb
adc
mov
or
rcll
mov
mov
cmp
out
adc
xor
out
stos
popf
mov
lock
ffreep
in
iret
adc
outsb
rsqrtps
in
push
mov
stos
or
lea
mov
gs
pusha
push
das
test
dec
cmpsl
es
xchg
int3
sub
shl
jle
in
mov
add
cmpsb
or
rcr
adc
mov
cmp
lods
sahf
push
stc
adc
xchg
dec
inc
pop
out
insb
negb
cmp
sub
repnz
ds
adc
xchg
cltd
repz
xlat
mov
or
inc
imul
icebp
xor
cld
and
jg
push
jecxz
lret
xor
imul
fadds
scas
vpmaddwd
ds
sbb
mov
data16
or
mov
or
xor
cmp
push
lds
mov
outsl
out
push
subb
push
rcrb
into
dec
push
cwtl
out
out
adc
jae
xchg
es
mov
and
push
mov
jg,pn
mov
xchg
dec
popf
lods
jl
jbe,pt
mov
and
lret
xor
cwtl
push
dec
sub
sub
insb
clc
push
cmpl
cld
out
push
jmp
inc
loop
scas
insl
jmp
lods
adc
sbb
push
xlat
aad
aas
movsl
push
iret
test
shld
test
nop
repnz
pop
je
cmp
scas
xor
mov
push
pop
ds
dec
pop
xchg
lock
or
in
rolb
sahf
push
sub
jae
cmp
jge
mov
add
ja
fucomi
cmp
aad
or
cmp
xor
xor
divps
jmp
cmc
xor
adc
inc
and
stos
mov
fcmovbe
mov
cmp
popa
push
ds
das
les
out
inc
fists
fs
push
mov
xchg
dec
in
hlt
les
aam
and
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
les
aam
and
add
ficoms
hlt
mov
xchg
mov
xchg
dec
in
in
les
cmp
xor
push
lret
fs
push
aam
movsb
orl
xchg
mov
sarl
loope
icebp
mov
test
xchg
movsb
in
aam
stos
in
ds
cmp
jne
push
or
jmp
jmp
lret
xchg
mov
les
xor
add
sub
or
repnz
test
xchg
mov
les
aaa
popa
aas
jp
and
push
call
movsl
icebp
mov
push
sbb
cmpsl
xchg
enter
pop
dec
in
xlat
add
mov
data16
fucomi
fistpl
jl
push
jns
dec
inc
pop
mov
xchg
lret
movsb
sti
inc
add
cld
xchg
xchg
push
or
test
xchg
pop
jns
xchg
xor
les
int3
cwtl
sub
sti
mov
sahf
in
hlt
jae
mov
fadds
lret
pop
ret
mov
xor
push
sbb
cmpb
jmp
imul
xchg
fwait
aam
fistl
xchg
aaa
sub
repz
std
jmp
xchg
cmp
push
stos
and
dec
mov
xor
cmp
inc
or
fildl
hlt
fwait
les
xor
add
adc
xor
adc
mov
aad
mov
out
andps
sub
fs
adc
jle
outsb
xor
enter
int3
leave
test
xchg
into
cli
jns
imul
ds
pop
add
imul
add
loope
in
ret
stos
hlt
fwait
les
xor
add
adc
sub
or
jmp
fildl
hlt
fwait
les
xor
add
adc
sub
or
sub
adc
xor
sbb
movsl
jbe
ret
xchg
fwait
pop
push
jmp
stos
and
int
push
xchg
js
add
mov
ret
or
sub
cli
jb
push
sbb
jb
popf
pop
or
shrb
gs
aad
psubsb
cld
jno
out
in
ret
dec
dec
enter
and
xchg
mov
or
insb
fs
sbb
dec
and
notl
inc
cli
mov
cli
test
jbe
std
int3
inc
xchg
sahf
mov
popf
mov
fisttps
popf
mov
pop
fdivl
xchg
stos
add
dec
pop
outsb
cmp
push
add
pop
hlt
loop
pop
adc
outsb
add
imul
sbb
test
aas
mov
pop
push
mull
ficoms
fidivl
sarl
mov
xor
pop
sub
mov
cmp
sahf
xor
inc
out
dec
mov
dec
mov
inc
mov
aam
dec
fcoms
sub
fs
scas
andb
fsts
mov
xlat
jns
mov
aad
adcb
adc
loopne
std
cmp
or
int3
aam
lret
jmp
dec
xchg
loop
iret
mov
or
ss
inc
sub
xchg
pop
mov
test
mov
mov
inc
lds
shrb
mov
mov
js
sub
mov
fnstsw
adc
mov
sti
or
push
fistl
push
outsl
nop
das
pop
lock
jbe
or
and
or
and
movsb
pop
inc
and
cld
notl
add
fcoms
loope
jg
pop
popa
mov
les
add
insl
or
sub
jo
repz
imul
add
xchg
pop
or
xchg
cld
mov
pop
mov
fcoms
lds
das
stos
dec
sub
jle
or
sbb
adc
mov
dec
xchg
add
and
or
cld
xchg
xlat
arpl
or
pop
mov
and
mov
les
mov
das
addr16
fcmovb
adcb
int3
xchg
pop
sbb
xor
cmp
out
das
sti
popa
adc
and
xchg
xchg
pop
add
cmpsb
dec
xchg
cld
push
lods
enter
inc
xchg
push
daa
rorb
subb
hlt
dec
je
pop
or
in
ret
jne
or
mov
add
inc
gs
xlat
jle
outsb
add
nop
jg
push
and
push
popf
in
sub
data16
int3
ja
pusha
fldcw
mov
loope
mov
mov
inc
dec
out
andl
scas
or
push
daa
push
push
mov
or
xor
mov
sbb
ljmp
into
mov
out
xor
lods
xchg
stos
arpl
dec
or
cmp
inc
lahf
mov
repnz
mov
push
bound
dec
shlb
call
add
dec
xlat
adc
or
mov
jb
push
test
push
xchg
les
test
jl
mov
pushf
and
pop
lds
dec
shrb
ret
pop
jne
pop
fcmovb
cwtl
ja,pn
lcall
inc
outsl
fucomi
fs
repz
pop
mov
test
xor
and
mov
hlt
nop
and
gs
insb
dec
scas
clc
cs
test
mov
lds
push
pop
movsb
xchg
push
into
shll
xlat
push
pop
and
cmpsb
test
lods
repz
jne
out
inc
add
hlt
cmc
inc
push
lret
mov
je
dec
jns
xchg
es
iret
or
fsubrs
gs
xchg
daa
aaa
cld
lods
add
cs
insl
mov
push
xor
mov
pusha
popf
ret
testl
orb
int
lcall
fdivs
dec
frstor
mov
stc
push
into
push
sbb
push
sarl
adc
sub
inc
bound
test
mov
ljmp
push
sub
sarb
ja
or
fs
xchg
jns
call
popa
and
mov
outsl
sti
push
fwait
loope
fwait
sub
stos
mov
loopne
jnp
jge
jge
gs
es
orb
mov
test
or
mov
sub
add
ds
and
popa
jae
jmp
ja
inc
leave
xchg
inc
sahf
addr16
data16
adc
xlat
decl
cmp
pop
mov
or
or
dec
aas
xchg
lods
les
in
lock
mov
jnp
add
mov
mov
xor
mov
call
or
xchg
pusha
mov
push
jecxz
jno
arpl
nop
fstl
daa
jecxz
xor
push
or
push
les
jp
lret
jno
cwtl
cmp
addr16
rorl
outsl
push
repz
popa
rclb
std
and
push
push
cmpsl
imul
xor
bt
arpl
mov
inc
ret
jecxz
scas
sti
addr16
cmpsb
mov
incl
jmp
and
cmp
cmp
inc
jg
pop
dec
test
xorb
adc
push
ja
sar
mov
jb
fs
mov
jno
js
pop
jmp
std
sahf
shlb
push
lcall
mov
std
pop
add
movsb
popf
insl
mov
sbb
mov
shll
insl
aam
dec
jge
push
mov
out
ja
in
out
inc
cwtl
add
ret
lock
dec
add
mov
sbb
push
fs
int3
mov
stos
push
clc
scas
adc
out
cs
jle
sub
popf
mov
leave
pop
and
push
push
and
mov
sbb
movsl
fisubl
mov
push
mov
mov
pop
mov
push
cmp
sbb
cmp
int3
aad
lret
xchg
outsl
dec
push
mov
xchg
sbb
movsb
or
stos
mov
loope
popf
lods
xchg
lret
jp
sbb
fisttpll
or
jb
jns
negl
inc
or
xchg
loopne
mov
jmp
mov
movsb
filds
lahf
into
icebp
stc
imul
push
sbb
mov
test
mov
xchg
pop
and
hlt
nop
shr
adc
sub
outsb
push
lahf
dec
mov
into
pop
ljmp
fwait
ret
sub
ljmp
movsb
jb
stc
clc
js
mov
fsubrp
popf
xor
jne
das
nop
out
cwtl
repnz
dec
jae
out
movsb
xchg
pmaddwd
add
and
movsl
cltd
popf
dec
mov
out
fcomps
pop
push
sbb
pop
xchg
cmp
clc
and
xor
notb
pop
gs
or
sbb
mov
repz
xchg
cs
mov
sbbl
clc
das
and
sbb
mov
cmp
mov
insl
addb
add
pop
add
mov
insl
insb
xchg
xlat
and
out
jbe
cmp
mov
js
es
into
scas
push
mov
jno
scas
sub
mov
push
scas
mov
and
add
repz
and
cmpsl
push
and
push
mov
dec
mov
xor
jo
mov
stos
jg
jae
movsl
sbb
addr16
or
hlt
pop
xor
dec
inc
push
hlt
mov
dec
bound
bound
xchg
iret
mov
dec
pop
inc
xchg
inc
xor
jg
out
dec
add
fimull
jl
xor
scas
cs
cmpsb
or
pop
lea
jge
outsb
addb
pop
sub
push
std
mov
movl
sbb
push
mov
repnz
add
subl
fmuls
int
xor
ret
pop
cli
dec
cs
aas
ret
mov
sub
sbb
pop
lret
jae
enter
ss
dec
mov
lock
sub
inc
fdivl
faddl
fnstenv
nop
imul
jg
and
mov
xchg
scas
inc
lcall
and
rcll
pop
outsl
cmpsl
outsl
lods
loope
pop
lahf
js
inc
dec
adc
sbb
xor
sub
rcrb
push
fiadds
sub
aam
add
gs
cs
subl
lock
dec
jg
out
cmp
sbb
jno
mov
in
mov
cltd
into
daa
fcmovb
jge
scas
jp
inc
cld
rcll
orb
stc
arpl
or
pop
push
ret
mov
test
adc
mov
cmp
pushf
pushf
addr16
cmp
mov
or
sbb
popf
insb
mov
pop
xchg
pop
aas
adc
insl
fstpt
push
pushf
fcmovu
cmp
mov
fucomp
adc
scas
or
xor
fnstcw
add
mov
aad
xor
aam
add
dec
push
sub
push
mov
mov
mov
sub
lds
scas
adc
pushl
pop
mov
das
mov
or
das
and
xchg
xor
mov
outsb
fcmovb
aam
rolb
xchg
imul
int
sbb
cli
dec
fimuls
mov
inc
jg
iret
jb
stos
adc
xchg
gs
outsl
add
add
and
mov
fdiv
and
cmpsb
mov
addr16
fstpl
mov
mov
dec
enter
or
pop
call
addr16
sbb
mov
stos
sub
lahf
xchg
xchg
das
insl
push
js
mov
mov
xor
mov
inc
jge
test
xor
mov
stc
stc
jno
icebp
nop
xchg
sbb
cmpsb
popa
push
and
les
inc
xchg
cmp
scas
jb
adc
adc
cmp
or
jecxz
cltd
in
cmpsb
add
insl
xor
mul
push
daa
xor
scas
cmp
xchg
mov
das
dec
cli
loope
mov
fldt
sub
js
mov
mov
addr16
sbb
pop
mov
lret
and
loope
xorb
test
ds
and
insb
mov
xchg
dec
mov
push
orb
popa
bound
and
add
enter
sub
add
andl
xor
in
int3
aaa
rcll
jb
leave
xor
xor
in
cli
leave
test
mov
lock
lcall
mov
mov
cmp
dec
sbb
mov
and
dec
xor
js
xchg
jmp
mov
sub
mov
xchg
mov
pop
lret
xorl
sbb
test
xor
out
in
enter
rol
repz
mov
and
dec
mov
mov
push
sbb
call
sbbb
mov
fs
jbe
pshufw
lock
pop
movsl
mov
inc
and
mov
sbb
ljmp
xchg
repnz
mov
mov
shrb
test
repnz
popa
enter
psubusw
lea
ret
mov
jp
jb
popf
xor
out
or
jmp
out
mov
mov
popa
ljmp
jo
test
ja
xchg
adc
mov
sub
in
ror
ja
mov
lret
jae
pop
jb
or
out
pop
mov
add
ds
cltd
ss
mov
xchg
pop
push
cmp
stos
icebp
outsb
mov
push
mov
aam
lods
jmp
out
dec
ud0
mov
add
fcmovne
jnp
outsb
pop
loope
xchg
test
movsl
or
or
pop
pusha
test
or
je
xchg
cmp
out
push
adc
nop
inc
ss
add
enter
in
push
ror
sub
sub
incl
ffreep
out
insl
scas
cmpsl
lds
rorl
icebp
into
pushf
mov
pop
cld
not
adc
jbe
mov
out
rolb
ret
out
int
dec
mov
inc
cmp
pop
push
stos
push
mov
cmc
incb
pop
mov
addb
jno
and
stc
xor
out
mov
pop
addr16
movsb
int3
subb
iret
xchg
mov
push
adc
lret
lcall
loopne
mov
and
sbb
inc
leave
jne
int
sar
stc
mov
jge
sbb
mov
xchg
test
push
mov
scas
mov
test
lods
sbb
cmp
xor
cmp
scas
nop
xchg
mov
arpl
push
ret
sub
fcmovnbe
dec
xchg
sub
mov
dec
popf
scas
xchg
push
xchg
lret
lds
push
push
aaa
stos
push
shrb
fadd
push
pushl
and
cmp
pop
fdivr
pusha
sbb
cmpsl
cmp
inc
xchg
insb
aam
dec
cmp
cmp
jnp
icebp
dec
add
push
mov
mov
and
sbb
imul
xor
cmpl
mov
test
mov
rclb
mov
adc
andl
outsb
mov
pusha
cmpsl
push
ja
movsb
out
into
jo
pop
andl
cmp
iret
das
je
enter
sbb
cmp
xchg
pop
hlt
sbb
movsl
cmc
rcrl
mov
cmpsb
inc
push
pop
cmp
lods
xor
out
mov
fcmovu
dec
mov
xchg
shlb
ss
sub
mov
cmp
hlt
fistl
dec
data16
mov
pop
daa
jbe
jmp
and
mov
mov
out
stos
xchg
mov
ja
pop
in
pop
xchg
out
int3
cmc
xchg
pop
scas
cmp
mov
cmp
in
in
fwait
orb
es
jnp
push
ja
or
loopne
imul
sbb
loope
xchg
inc
xchg
js
xchg
adc
in
daa
lcall
push
pusha
decb
xchg
push
xchg
fdivrs
mov
sahf
adc
mov
sub
mov
jnp
inc
adc
mov
pop
sbb
mov
inc
mov
mov
cld
cmp
lods
add
xchg
xchg
sbb
out
in
mov
pop
mov
pop
mov
sbb
dec
or
mov
mov
lret
cmp
gs
cmp
imul
add
adc
insb
out
push
inc
pop
scas
imul
jne
xor
jg
pusha
into
fistl
sahf
repz
push
insl
repz
shr
shrl
mov
les
popf
movsb
pop
mov
xor
ror
aam
cmpsb
jge
lret
xchg
incl
into
scas
fwait
mov
mov
add
loop
stos
lea
sbb
arpl
sub
mov
or
fistl
leave
inc
cwtl
jge
push
mov
pop
outsl
push
jno
fwait
sbbb
xor
xchg
cmc
cmp
insl
jle
xchg
nop
repz
shlb
aam
nop
sub
sub
notl
jge
enter
test
in
mov
xor
jge
repz
fistl
or
fwait
add
movsb
xor
mov
faddp
jns
cs
test
inc
ds
pop
jbe
adc
std
fldt
mov
dec
push
mov
mov
out
dec
dec
fcom
jl
cltd
fdivp
hlt
fsubs
pop
addr16
mov
xlat
inc
adc
std
and
add
sub
mov
lods
into
mov
add
adc
adc
arpl
push
lret
push
jmp
push
nop
clc
adc
ret
leave
and
and
scas
roll
mov
fbld
and
sbb
sbb
out
int
jae
cltd
dec
xchg
pop
jp
ret
imul
enter
dec
aas
mov
int3
jle
mov
mulb
int
loop
imull
imul
ret
and
scas
les
shrb
mov
jne
adc
nop
mov
fcompp
push
push
mov
lret
jmp
ds
mov
hlt
sub
fsubrl
sub
in
movsl
pop
int3
pop
enter
aas
cltd
adc
sbb
mov
sbbb
iret
stos
sahf
mov
jl
pop
subl
movsl
out
mov
pop
xchg
xchg
shl
ja
cmp
out
mov
les
fdivp
cltd
aaa
rclb
mov
xlat
push
orb
xor
inc
mov
push
fimuls
repnz
arpl
push
clc
hlt
lret
hlt
sbb
inc
cmp
xchg
loopne
pop
pop
xchg
cmp
stos
xchg
add
frstor
push
or
xlat
in
push
lods
mov
or
das
inc
bound
push
xlat
in
xchg
or
cs
xchg
or
inc
xor
aaa
dec
ret
into
sahf
push
jg
es
negl
cld
xor
mov
pop
lods
lods
mov
divb
and
icebp
mov
pop
mov
mov
inc
dec
inc
push
mov
push
test
jns
fwait
and
nop/reserved
and
fisttpl
arpl
rcll
sahf
mov
loopne
bound
cmp
inc
pop
mov
mov
mov
negb
jno
jecxz
es
dec
pushf
or
xchg
pop
adc
test
test
or
jmp
dec
push
test
pusha
inc
jle
enter
repnz
fsubrl
cmp
push
pop
sbb
clc
test
dec
pop
jnp
mov
jle
xchg
jne
test
bound
adc
push
fwait
out
sti
nop
xor
xchg
sbb
mov
nop
sub
out
cs
sbb
je
push
outsb
ljmp
test
repz
nop
mov
jl
fwait
mov
outsb
cmpsl
test
xor
adc
jnp
cs
sarl
jp
mov
movsb
xchg
xchg
cmp
mov
bound
push
inc
ret
push
lock
loopne
cmp
inc
xchg
fyl2x
rcll
pop
stos
sub
aam
in
adc
aaa
cld
mov
mov
in
sbb
inc
cmpsb
pop
push
mov
add
icebp
test
int
jns
cmp
pop
jnp
rorl
icebp
jae
cwtl
xor
pop
jns
cmp
and
rcrl
dec
mov
jg
mov
mov
test
test
xchg
mov
jno
stc
out
aaa
adc
daa
cmpsb
and
loope
div
movsb
pop
cmpsl
movsb
mov
imul
mov
sub
push
fiadds
int
repz
je
cmp
fisttpll
cmp
popf
hlt
out
pop
pop
rcl
subl
jne
sbb
push
push
inc
es
sub
dec
inc
jno
lods
mov
push
pop
jl
xchg
cmp
or
xor
or
sbb
sub
movsb
mov
scas
out
in
jnp
call
enter
enter
xor
mov
pop
add
xchg
ret
push
xchg
xchg
leave
jne
push
arpl
push
mov
movsl
mov
cs
sub
dec
add
test
mov
gs
movsb
lods
xor
mov
mov
sbb
jge
leave
std
add
and
leave
cmp
mov
mov
repnz
dec
sub
mov
iret
push
lret
xor
xor
xchg
shlb
stc
cmp
sub
icebp
inc
mov
insl
pop
pop
outsb
sbb
std
mov
add
and
add
jb
or
xor
jge
mov
lea
and
shlb
adc
sbb
pop
data16
mov
in
mov
enter
cmpsb
imul
and
add
sbb
insb
xor
pop
out
pop
adc
xor
lret
mov
push
pop
adc
movsl
stos
nop
mov
pop
pop
mov
xor
mov
andb
jp
arpl
pop
shrl
mov
adc
add
pop
outsl
push
mov
test
clc
jl
aas
sbb
push
test
mov
loop
cmp
outsb
mov
xchg
loop
add
lea
push
mov
icebp
sbb
jne
jo
push
xchg
pusha
jg
inc
insl
out
shlb
adcl
fistps
ss
shll
lcall
ret
mov
lods
jns
add
nop
shl
jge
daa
out
out
in
sbb
fs
or
lock
pop
imul
push
cmpsl
mov
inc
stos
add
or
daa
out
mov
shll
gs
cmp
dec
jbe
xchg
cmpsl
lock
int
out
stos
xor
lret
push
int3
in
in
push
push
mov
xchg
sub
jmp
notl
or
lock
pop
jnp
loopne
xor
inc
push
in
xchg
xchg
mov
test
xchg
mov
les
xor
add
adc
sub
or
jmp
fildl
hlt
fwait
les
xor
add
adc
sub
or
jmp
fildl
hlt
fwait
les
xor
add
adc
fs
je
inc
cmp
fbstp
in
hlt
sbb
or
and
sahf
icebp
add
arpl
mov
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
gs
jle
and
mov
rep
lock
or
add
add
add
pop
add
add
push
add
add
sub
cmp
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
or
mov
push
add
add
dec
add
add
pop
add
add
push
add
sbb
fiaddl
jge
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
and
test
inc
add
sbb
jns
mov
mov
add
add
test
add
add
add
add
js
aad
das
add
add
mov
add
pop
add
add
add
jge
dec
add
pop
add
add
popl
add
mov
add
add
jge
add
add
add
lret
add
add
or
add
mov
imul
add
add
add
add
add
add
or
add
testl
rolb
push
add
aaa
add
add
cld
add
pop
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
test
add
add
add
mov
add
add
push
add
mov
pop
add
add
add
add
add
lret
add
add
add
jg
push
or
mov
push
push
add
mov
or
or
push
add
add
add
add
adc
add
cld
add
add
sbb
adc
js
jl
sub
jg
sbb
lret
add
add
add
add
add
add
rolb
mov
jo
mov
add
test
faddl
aaa
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sbb
test
add
addl
sub
sbb
mov
add
add
add
add
add
mov
add
add
sbb
jo
xor
and
incb
rolb
cmp
cmp
add
sub
pop
add
mov
add
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
xor
or
mov
add
mov
xor
aad
jg
adc
add
add
add
adc
inc
add
add
sbb
adc
stos
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
add
add
adc
or
add
add
xor
inc
enter
ret
scas
lret
fsubl
shl
add
xorl
cmp
xor
push
cmp
or
adc
push
fistpl
jns
fldt
xchg
aam
adc
int
ljmp
hlt
mov
imul
push
adc
dec
loopne
mov
mov
fisttpll
sub
add
lret
push
jg
fs
imul
aam
sub
jg
sti
movsb
jae
int
daa
xlat
imul
mov
jge
test
sub
in
rcl
mov
push
jo
jecxz
adc
imul
sub
cmp
sbb
sub
xor
loopne
add
mov
ret
shrl
nop
push
gs
pop
push
mov
dec
mov
sahf
jnp
jbe
pop
ret
loope
loopne
mov
mov
mov
loopne
mov
inc
inc
pop
movsb
xchg
lds
faddl
cld
out
mov
cmp
fcmove
mov
aas
push
push
add
sar
push
cmp
jae
sub
and
shr
mov
rorb
mov
stos
jge
je
mov
cld
scas
ret
addr16
xchg
lcall
pop
dec
sbb
dec
add
out
xor
mov
jbe
push
xor
and
xchg
fneni(8087
jae
xor
fadds
pop
std
lret
loopne
mov
pushf
lahf
bnd
adc
jno
ret
or
out
loopne
pop
aas
test
sbb
repz
xor
scas
jecxz
add
aas
push
mov
pop
jns
call
cmc
das
stc
imul
sbb
mov
ja
stos
adc
rclb
loopne
loop
mov
adc
jo
enter
dec
into
push
movsb
fcmove
pop
stos
xor
pop
sub
mov
mov
lret
xlat
mov
loope
mov
push
jg
loopne
stos
cli
mov
lock
dec
pop
cmp
mov
xchg
or
or
push
outsl
or
mov
scas
lahf
mulb
jae
ja
or
xor
out
xor
inc
jnp
lods
ficoml
mov
sbb
dec
inc
mov
cltd
lods
add
dec
pop
into
rolb
out
cld
gs
push
mov
repz
repz
xor
and
xchg
bound
add
mov
sbb
jne
cs
jnp
sub
insb
repz
into
je
mov
or
rcrl
mov
adc
push
mov
inc
outsb
idivl
pop
test
add
pop
lea
stos
jl
jp
out
incl
scas
sub
dec
popf
es
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
