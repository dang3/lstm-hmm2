call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fdivs
jmp
fwait
mov
test
pop
jnp
and
sbb
cmp
inc
mov
xchg
jmp
fwait
cmc
mov
mov
xor
imul
push
sub
mov
movsl
imul
stos
lds
xor
push
fs
jns
outsl
cmp
mov
xchg
sti
std
addb
pop
orb
js
and
out
pop
xor
jne
fisubrs
sbb
out
sub
mov
or
frstor
iret
lods
inc
aas
add
lods
cmp
adc
mov
test
std
adcl
gs
cwtl
nop
or
dec
imul
dec
repz
std
pop
lock
shlb
in
mov
dec
xchg
xchg
in
jne
fwait
cmp
inc
and
cmc
fcmovnb
jbe
addr16
insb
xor
enter
add
or
push
daa
mov
cli
test
sub
push
in
lahf
adc
push
sub
mov
movsl
sti
xchg
jmp
jg
repz
aad
lds
adc
add
push
sub
mov
in
xchg
xchg
test
nop
in
iret
xchg
stos
xchg
pop
dec
sbb
jo
jno
ss
dec
or
lock
dec
mov
sbb
adc
sbb
add
mov
cmpsl
in
lcall
in
aad
lds
dec
and
sbb
cmp
inc
jmp
fwait
cmc
mov
mov
xor
imul
push
sub
mov
int
js
inc
push
andl
xor
mov
pusha
xchg
lea
dec
scas
jmp
movsl
fiadds
push
pusha
push
pop
push
rorl
xor
pop
adcb
sub
fnsave
movsb
scas
lods
pop
mov
and
jae
dec
mov
insl
ret
leave
push
sub
movsb
pop
adc
aas
aaa
ficompl
fucomp
sar
dec
mov
pop
inc
add
lock
lods
add
imul
and
jnp
push
sub
cmpsb
sbb
mov
pushf
or
bound
popl
cmp
mov
sbb
push
mov
sub
negb
or
mov
outsb
shrl
int3
popw
in
dec
xlat
adc
std
lcall
popf
and
sub
sbb
ss
jae
push
mov
movsl
mov
icebp
adc
imul
mov
rol
enter
js
xchg
lock
xor
pop
in
adc
repz
inc
je
sar
xchg
jnp
mov
mov
and
icebp
sub
or
enter
fs
popa
xchg
scas
aad
xchg
sti
mov
push
std
cmp
test
cmc
add
pop
cmpsl
or
ret
testb
push
mov
ret
and
add
pushf
fs
into
xchg
inc
shlb
xchg
icebp
xchg
ds
xlat
jecxz
mov
fldenv
mov
test
jo
cmpsb
jb
xchg
in
rcrl
insb
loopne
lods
push
pusha
mov
sti
jno
ret
mov
cs
pop
sbb
aad
cld
adc
out
jge
scas
in
mov
out
sub
xlat
repz
jmp
cmp
aaa
push
add
bound
sar
cltd
inc
mov
cmpsb
mov
lret
clc
rclb
loope
xchg
dec
mov
push
cmp
mov
xchg
cwtl
push
int3
aaa
push
or
sbb
push
add
dec
cmp
pop
sub
idivl
shll
push
sub
sub
push
or
cltd
stos
movsw
gs
sbb
mov
mov
aaa
add
test
aaa
mov
and
aam
movsb
lahf
mov
dec
and
mov
fwait
andl
js
in
aas
int3
dec
cs
push
mov
les
cwtl
aaa
push
mov
pop
fildl
icebp
cmpsl
and
sbb
cltd
jnp
stc
repz
dec
inc
mov
adc
jno
adc
mov
sub
lret
and
sbb
pop
and
arpl
push
popf
out
jmp
jb
mov
rcrb
sbb
xor
xchg
inc
sub
jmp
imul
in
data16
or
movsb
cmp
test
add
cmp
enter
les
test
testl
xlat
call
movsl
or
fcoml
ror
aam
stos
imul
ss
mov
ret
and
call
lds
mov
mov
shlb
jge
int3
sbb
or
mov
popf
xchg
xor
mov
aaa
jns
fwait
xchg
pop
dec
sub
sahf
or
xchg
arpl
lahf
xor
or
in
sbb
icebp
mov
sub
jo
xchg
push
mov
jmp
dec
inc
jl
jp
fwait
xrelease
and
xchg
lock
push
mov
stos
mov
call
xor
into
jns
mov
jmp
fdivs
ret
and
jnp
lock
imul
cmp
es
divl
and
mov
enter
insb
hlt
adc
shlb
ret
rcrl
lea
popf
imul
add
or
cmp
xchg
add
ret
idivl
dec
inc
inc
mov
push
ja
xor
ss
and
xchg
notb
and
loope
in
pop
xchg
cmpb
push
lds
gs
popl
xchg
pop
outsl
jmp
aaa
mov
mov
iret
mov
dec
aam
push
pop
push
adc
pop
jle
xchg
inc
leave
or
or
add
into
or
fcmovnu
cli
stos
lcall
negl
or
mov
outsb
sahf
daa
adcl
xor
iret
add
es
mov
cmpsl
imul
dec
sbb
lret
in
dec
push
out
fbld
cmp
xor
mov
sub
and
imul
iret
adc
mov
dec
ljmp
stc
aaa
ja
jp
xor
lret
push
xor
cmp
xchg
pop
cmc
add
or
push
mov
jnp
and
mov
stc
inc
repnz
orps
inc
stos
xchg
imul
add
lcall
push
or
dec
ds
jne
repnz
cld
cmp
or
mov
xchg
fisubrl
mov
dec
stc
add
es
mov
pop
mov
mov
cmc
nop
pop
jle,pt
lret
push
pop
pop
and
xor
pop
mov
movsl
data16
push
lods
inc
hlt
pop
shlb
cltd
cmc
pusha
cs
sub
sbb
scas
xchg
xchg
ss
test
sbb
ror
jmp
inc
jbe
jnp
inc
xor
idivb
fsubs
pop
or
jbe
mov
sub
call
and
sarl
mov
pop
inc
fmul
inc
xor
insb
or
dec
pop
cmpl
scas
ja
mov
cmp
andb
mov
xchg
iret
dec
and
sbb
mov
imul
pop
enter
push
mov
push
inc
adc
mov
mov
mov
testb
pop
pusha
push
jnp
stc
cmp
or
push
je
imul
int3
mov
pop
pushf
mov
mov
daa
shlb
in
mov
xchg
push
xor
mov
lea
adc
bound
dec
or
daa
push
pop
mov
popa
and
les
mov
pushf
inc
push
inc
shlb
push
lret
mov
mov
or
dec
sub
cmp
shrb
imul
pop
andb
andb
data16
inc
pop
ret
pop
mov
add
out
cmpsl
jb
sub
into
rcr
adcl
mov
sub
scas
cmp
or
lea
add
repnz
repnz
sub
shlb
adc
push
into
ret
int3
pop
mov
xchg
xlat
inc
push
jge
test
outsl
loope
movsl
scas
dec
faddl
xchg
xor
xchg
add
jl
mov
jbe
cmp
loopne
inc
arpl
adc
adc
imul
popf
ficoms
fcmovu
jge
push
xor
add
mov
lods
cmc
and
imul
mov
test
dec
ret
mov
ret
pushf
mov
loopne
push
aas
outsl
xor
adc
repnz
jb
adc
inc
testl
ret
bound
test
dec
mov
pusha
lahf
lock
pop
dec
adc
lret
scas
inc
and
dec
dec
imul
stc
push
outsl
or
jnp
subb
lods
loopne
adc
push
fs
aas
or
mov
jne
add
shlb
sti
insb
inc
les
out
push
and
mov
sbb
cmpsb
out
cs
and
std
sahf
fcompl
push
dec
add
dec
ds
stos
icebp
and
loopne
enter
int
js
add
lahf
arpl
test
mov
fldl2t
push
sahf
arpl
pop
addr16
inc
pop
std
out
push
iret
cmpsl
enter
aad
cmp
test
negb
out
adc
cld
call
jmp
and
lods
cmp
inc
push
xchg
mov
pushf
cwtl
jle
rclb
push
pop
dec
pop
sbb
xor
xchg
mov
adc
add
push
add
push
pop
rcrl
sbb
push
fdivr
or
add
push
or
outsb
xchg
push
push
fadds
test
outsb
ficoml
pop
mov
fcmovne
test
pop
fwait
and
dec
sbb
sbb
das
decl
leave
es
lods
and
imul
inc
ret
mov
cld
in
outsb
out
xorl
adc
movsb
dec
hlt
lret
test
xchg
jl
bound
daa
xchg
adc
sbb
mov
push
call
mov
or
imul
pop
or
adc
roll
popa
xchg
sbb
mov
aad
sub
sbb
dec
xor
add
sub
xchg
push
shl
mov
data16
test
xchg
adc
test
in
sub
ds
mov
xor
out
stc
mov
xchg
mov
xchg
pop
jp
nop
jecxz
jae
gs
idiv
or
movsl
das
shrb
outsl
out
cmp
lea
stos
pop
push
xchg
inc
pop
rcrl
ss
jecxz
adc
stc
adcl
mov
jl
stos
js
stos
bound
dec
jge
js
in
push
sbbl
lea
clc
add
sbb
jmp
xor
sbb
lock
jmp
xchg
dec
or
mov
imul
stos
cmp
xor
adcl
mov
xor
loop
sbb
icebp
fldenv
mov
mov
sub
not
jmp
dec
cmpsb
mov
dec
sub
push
push
cs
jge
add
in
movsb
adc
pop
or
xchg
out
xorl
dec
cmp
sarb
call
int
out
sbb
scas
daa
xor
adc
roll
inc
cmp
imul
xchg
add
adc
push
xor
shl
ficompl
test
xchg
aaa
pop
fistpll
repnz
ret
and
loope
icebp
aaa
lret
das
insb
jle
or
sub
lret
sub
and
sarb
test
and
ds
nop
mov
cltd
or
mov
or
mov
or
popa
push
inc
ljmp
pop
cmp
mov
pop
dec
add
pushl
inc
cmp
in
cmp
push
ja
mov
mov
out
push
aad
leave
test
dec
arpl
repnz
mov
ret
lods
incl
mov
xchg
sub
and
push
mov
jmp
xor
dec
repz
arpl
pop
jns
dec
xor
mov
jle
stos
jns
clc
mov
inc
push
dec
js
movsl
cmp
and
and
jns
movsb
sub
lcall
out
jl
stos
push
sub
xor
mov
xor
sbbb
addr16
lds
jl
mov
movsl
idivb
and
out
es
movb
les
int
fcmovnbe
or
or
mov
scas
int3
cmp
rorb
lahf
sbb
cmpsb
fldcw
dec
mov
aas
jg
mov
ret
test
and
call
cmp
jp
in
sub
xor
push
sbb
lcall
jg
icebp
imul
jp
xchg
push
fildl
sbb
push
jb
pop
rclb
insl
xchg
mov
das
push
push
inc
dec
or
inc
mov
pop
add
and
xchg
mov
jbe
sub
movsb
dec
lcall
dec
and
test
inc
xor
lods
popf
int3
add
sub
inc
dec
lret
cmp
xchg
adc
cmc
cmp
test
outsb
ss
rsqrtps
aaa
mov
rcrb
stos
gs
pop
and
sbb
mov
les
jle
pop
xlat
fisubl
push
iret
push
stos
pop
xor
pop
xchg
inc
lods
ljmp
test
shll
cmp
or
fidivl
and
add
cld
sti
mov
push
fdivp
and
mov
mov
push
or
xchg
cld
mov
sbb
mov
inc
out
mov
ror
shl
and
pushf
sbb
push
push
rolb
fxch
daa
lret
dec
cmpsl
mov
mov
sti
aam
mov
push
mov
cmp
shll
inc
cmp
cltd
lret
outsl
or
dec
mov
fsubs
rcll
rclb
jg
add
stc
jns
leave
mov
or
xchg
mov
sbb
inc
or
inc
inc
mov
cmpsb
icebp
mov
dec
insl
divl
scas
cli
shll
das
clc
mov
push
dec
mov
xchg
push
pop
adc
pop
repz
jle
aam
repz
leave
mov
sub
lods
mov
fidivrl
mov
outsl
push
sbb
cmp
icebp
pushl
push
nop
lahf
int
mov
iret
pop
mov
jnp
cmp
xchg
or
cmp
fisubl
aas
scas
inc
jno
subb
imul
jns
das
pushf
cmpsb
push
or
jbe
mov
dec
fwait
sbb
xor
fcomps
mov
mov
dec
mov
imul
inc
cmpsb
dec
dec
pop
imul
pop
push
lods
xor
repz
add
mov
mov
mov
or
fistpl
add
push
inc
hlt
inc
hlt
sbb
fnsave
fs
lret
aad
ss
ret
nop
lahf
xor
sub
mov
jp
shlb
push
jbe
movsb
sub
loopne
lcall
add
inc
inc
mov
lods
mov
stos
or
xor
dec
fwait
loope
mov
leave
out
pop
mov
lock
pop
ds
ret
or
cltd
mov
sub
cwtl
xor
int3
das
or
lock
lea
enter
pop
mov
insb
lret
sahf
push
rcl
out
addl
push
inc
testl
imul
mov
cmp
lock
pop
es
ss
sub
jge
xchg
fwait
test
das
jge
or
roll
mov
lahf
fbld
push
sub
mov
jle
testl
mov
cmp
inc
data16
push
sahf
mov
scas
push
jg
stos
mov
jo
and
out
or
xor
ret
xorb
xor
test
or
fbstp
jbe
outsb
inc
jbe
pusha
add
cmpsb
xchg
sbb
es
mov
and
xchg
je
cmp
mov
lods
push
dec
push
xchg
mov
sbb
add
dec
add
pop
roll
fs
lret
cmp
xchg
mov
loop
outsb
mov
sarl
fsubrs
and
cmpl
ja
in
pushf
lcall
and
push
unpckhps
inc
xchg
mov
lock
call
into
sub
outsb
cmc
das
mov
enter
movsl
push
adc
fdivs
or
ds
rclb
in
aaa
push
ja
mov
sub
jbe
push
mov
or
clc
ror
inc
add
dec
pop
sub
pop
ficoms
cmp
mov
xchg
out
sbb
sbb
test
aas
mov
out
cld
mov
mov
faddl
enter
mov
pusha
ljmp
pushf
repz
pusha
or
push
les
nop
cmc
sub
push
cmc
adc
out
inc
inc
ljmp
rcrb
add
das
push
jecxz
dec
cmpsl
xchg
data16
xlat
test
and
mov
cmpsl
xchg
stc
sub
repnz
ret
sub
mov
data16
imul
in
or
push
je
adc
imul
adc
mov
mov
test
cmp
hlt
sahf
loopne
inc
jecxz
cmc
js
out
ja
adc
mov
out
aas
pop
in
in
ja
lods
ret
mov
push
in
push
mov
outsb
pop
into
sahf
lret
test
add
shll
sub
pop
stos
fcmovu
push
xchg
dec
imul
pop
xchg
cmp
imul
xchg
pop
xor
sub
fldl
cmp
mov
cli
outsl
jne
jg
xor
xchg
fcompl
aas
mov
mov
lret
hlt
je
lds
mov
xchg
ljmp
push
sub
fsts
pop
jb
push
fisubrl
lds
mov
daa
sbb
mov
mov
and
data16
sub
pop
inc
jp
fwait
aad
xor
push
in
lods
xchg
iret
or
mov
sub
cltd
pop
ja
push
pop
lea
es
call
stc
lahf
mov
movsb
adc
subb
notb
loopne
outsl
and
adc
iret
int3
rolb
inc
lods
icebp
adc
out
loope
add
sti
insl
and
cs
xor
into
outsb
sbb
xchg
stos
out
cmp
dec
fnstenv
scas
jbe
jnp
mov
dec
test
fisubrl
and
out
pushf
lea
repnz
or
out
cwtl
sub
pop
mov
dec
xor
xchg
sub
outsb
cs
add
jle
jecxz
out
inc
dec
or
push
push
cmp
test
in
ret
ja
hlt
loopne
add
push
addr16
and
std
jge
shlb
push
sub
inc
insl
ret
into
nop
mov
mov
jmp
inc
mov
je
into
jbe
pop
daa
adc
test
ja
and
mov
lret
jecxz
repnz
idivb
bound
fwait
test
adc
jmp
mov
sti
cs
lods
and
inc
dec
repnz
fcoml
sub
aas
push
jecxz
dec
mov
mov
cmpsb
hlt
jns
icebp
sbb
inc
loope
icebp
mov
ja
pop
fst
mov
xchg
push
mov
shr
or
xlat
mov
xchg
jnp
test
lahf
mov
pop
xchg
dec
cmp
lret
mov
imul
out
xchg
inc
fisubs
lock
mov
lret
daa
pop
mov
add
enter
daa
mov
jmp
pop
lods
adc
push
jae
ja
mov
int
lods
xor
jns
add
int3
sub
decb
jb
movl
cmp
stos
push
bound
mov
test
shll
xchg
sub
add
mov
jne
inc
imul
push
mov
popa
sbb
xor
stc
or
inc
jo
das
int
adc
xchg
sbb
xor
or
mov
and
sbb
adc
xchg
mov
mov
mov
push
out
jge
mov
and
in
mov
das
xor
or
int3
pop
inc
adc
xchg
lahf
test
subb
pop
add
sbb
jge
mov
cmc
lds
mov
std
rcr
mov
cmovnp
push
js
pusha
in
icebp
push
inc
es
test
dec
add
imulb
aad
or
xchg
stc
push
int3
shl
or
pusha
dec
push
push
add
dec
imull
ss
dec
call
sub
rcl
lahf
mov
push
or
stc
xor
pop
les
aas
push
jns
or
add
nop
mov
ret
out
out
movsb
adc
mov
or
mov
shlb
mov
pop
cmp
adc
and
js
mov
and
in
sbb
sub
jge
dec
int3
and
rcpps
shrb
gs
pop
mov
icebp
repz
adc
imul
test
cmc
lcall
pop
dec
loope
mov
movsb
test
adc
push
jnp
xor
sub
jg
outsl
xor
aaa
lahf
push
xchg
imul
leave
into
out
adc
push
mov
popa
and
jae
repz
ljmp
push
or
dec
xchg
lcall
mov
in
mov
jle
test
jbe
mov
in
sub
dec
shll
add
scas
in
cld
mov
add
outsl
push
mov
cmp
movsl
cmp
fdivl
xor
scas
adc
add
dec
data16
in
ficoms
dec
gs
and
mov
xchg
fs
sbb
nop
sbb
cwtl
push
fwait
adc
jno
sbbl
pop
loopne
xor
stos
shr
dec
sub
mov
jae
lahf
shlb
jmp
sbb
fstpt
pop
insl
sbb
arpl
xor
add
lods
pushf
and
sbb
dec
ret
mov
dec
repz
aad
insb
enter
jns
fwait
push
mov
cmp
pop
mov
cmpsl
pushl
mov
roll
test
daa
xchg
arpl
repz
mov
outsb
bound
xchg
das
push
add
pop
cmp
sub
call
xorb
cmp
mov
inc
ficoms
ret
neg
test
fstp
pop
pop
lahf
or
movsl
mov
cmc
mov
mov
xor
imul
push
sub
mov
movsl
sti
xchg
jmp
fwait
cmc
mov
mov
xor
imul
push
sub
mov
movsl
fwait
xchg
jmp
or
mov
mov
xor
imul
push
ret
inc
iret
mov
movsl
mov
cmc
fwait
in
aad
lds
mov
rcll
sbbl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jge
insl
sub
dec
push
push
sub
cmp
lcall
mov
cli
lea
pop
cmp
cmp
jp
cmp
into
fnstsw
lret
lods
ljmp
insl
xor
dec
push
cmp
insl
or
mov
xchg
ret
xchg
lea
sbb
data16
cli
cmpsb
into
pop
movl
dec
mov
xchg
cmc
dec
or
xchg
in
sub
sub
lcall
adc
mov
jbe
lea
int
faddl
stos
clc
and
pop
cld
js
mov
gs
sbb
lahf
insl
inc
bound
out
lret
dec
outsl
cmp
sub
mov
and
popf
dec
xlat
mov
bound
add
popf
in
jae
dec
mov
cmp
cmp
push
addb
mov
pusha
lods
fistl
bound
add
jmp
xchg
cmp
mov
jne
gs
push
int
int3
or
cli
mov
jge
insl
sub
dec
pop
cmp
arpl
mov
mov
lods
ljmp
insl
dec
xor
and
push
aaa
sub
cwtl
lcall
fdivrl
int3
or
outsl
dec
pop
cmp
jne,pt
dec
push
push
or
out
mov
test
frstor
sub
dec
xor
pop
sub
mov
lcall
mov
cli
lea
jge
insl
sub
dec
dec
cmp
jp
mov
lcall
mov
cli
lea
jge
and
out
push
or
jbe
aad
and
movsb
pop
jmp
or
push
out
push
into
mov
jl
mov
jmp
inc
mov
xor
push
or
cmp
or
inc
clc
mov
pop
mov
pop
fdivr
adc
adc
xor
aaa
adc
xchg
out
xor
mov
sbb
sahf
andl
dec
mov
add
stos
je
xchg
push
movsb
or
adc
lods
push
sti
jnp
jecxz
nop
lea
adcl
icebp
xlat
fnstcw
dec
cld
inc
mov
add
dec
mov
push
testl
in
aas
xor
inc
dec
andl
sbb
lock
into
fdivrl
mov
mov
lods
mov
xor
dec
fiaddl
cmp
iret
mov
add
pop
ja
xchg
nop
jg
cmp
mov
ret
int3
leave
rcrl
out
xchg
jnp
fistpll
fcmovbe
push
mov
fstp
push
test
inc
fists
push
popf
mov
xchg
mov
jae
dec
sbb
out
lds
paddd
outsl
shll
pop
cld
in
jp
cmp
lods
add
pop
pop
xor
movups
loop
rolb
enter
pop
mov
mov
mov
sub
fdiv
xor
sbb
leave
in
add
aad
int3
cltd
mov
xor
sti
das
ljmp
rcrl
jp
lock
jae
stos
xor
call
outsl
or
loope
jbe
sub
mov
in
cli
xor
aaa
inc
dec
popl
and
add
daa
mov
pop
xor
or
mov
xor
jmp
or
mov
pop
fdivrs
sub
outsl
subl
xor
divb
addr16
xchg
push
push
stc
xor
jl
xor
rolb
lock
in
and
sti
test
iret
and
jge
or
or
sahf
ljmp
fidivrs
xchg
shl
je
lock
add
insl
loope
or
xor
xchg
aam
mov
shr
push
fistps
mov
jo
cld
dec
and
jbe
pop
inc
xchg
xchg
mov
adcl
inc
bound
fwait
jp
arpl
adc
lret
mov
xchg
lods
mov
pop
pop
pop
push
test
test
je
sbb
mov
je
xor
aad
xlat
mov
xchg
mov
inc
subl
cmpsb
xchg
cli
and
and
mov
ds
into
jo
pop
cmpsl
aaa
fldz
lods
cmp
cmp
test
jbe
jecxz
enter
jno
mov
lret
dec
cmp
xlat
jp
jg
pop
rcrl
sbb
xchg
sub
daa
cli
add
call
mov
movsb
mov
pop
add
js
xorl
or
xchg
sub
lods
adcl
pusha
inc
add
or
add
enter
lret
popf
xor
add
mov
mov
addr16
adc
orb
mov
cs
cwtl
test
gs
jge
jno
pop
ret
subb
push
mov
enter
vpcmpestri
xor
stos
cmpb
mov
iret
inc
repz
xchg
xor
cmp
loope
popf
leave
pushf
fwait
mov
iret
dec
cltd
push
sbb
in
or
in
xorb
stos
push
jns
rcrb
push
or
mov
push
lea
mov
lret
mov
movb
mov
jmp
mov
xchg
and
xor
aam
popf
movsb
adc
add
cwtl
dec
pop
fwait
sbb
aas
cld
add
cmpb
hlt
mov
inc
das
inc
mov
or
and
mov
dec
shll
mov
rorl
pop
pop
mov
inc
cmp
aas
push
push
dec
mov
cmp
mov
hlt
xor
mov
je
sbb
and
out
jmp
clc
stos
aad
cli
clc
ja
negb
js
rcrl
push
mov
cmp
in
cwtl
insb
outsb
in
es
std
or
cmp
dec
push
dec
mov
sub
lock
je
dec
mov
sbb
xor
daa
or
mov
cli
popa
adc
cs
pop
mov
jmp
mov
scas
dec
int3
jmp
pop
cltd
inc
push
add
mov
popf
int3
sarb
and
jmp
add
and
cmp
mov
out
adc
jns
insl
loopne
leave
jge
mov
repz
sub
pushf
ret
cmpsl
jb
test
jge
dec
jp
pusha
repnz
test
lods
push
push
add
hlt
outsb
add
and
hlt
loopne
ret
xor
outsl
xchg
hlt
test
sub
in
in
sub
pop
aaa
cld
lock
nop
iret
jmp
arpl
sti
in
sub
jo
es
xchg
sub
sub
addb
push
jle
jecxz
call
sub
or
sbb
fcoms
sbb
lods
jp
lds
add
jne
fistpll
mov
mov
inc
stos
negl
adc
int3
push
or
dec
jno
cmc
pop
popf
dec
inc
ret
arpl
jecxz
outsl
mov
movsb
sti
push
ds
out
xchg
or
cmp
add
jne
mov
mov
cld
mov
ss
mov
adc
rclb
mov
shrb
xor
jmp
movsb
cltd
bound
inc
xor
xor
je
pop
xor
mov
sahf
pusha
pop
cmp
mov
loop
scas
pop
int
mov
push
xor
lret
xor
aad
dec
lahf
push
inc
mov
mov
outsl
mov
xchg
test
pop
dec
xor
test
out
leave
divl
fiadds
xor
dec
pop
cld
cmc
cmpsb
jg
and
mov
dec
fmuls
cmp
mov
pop
lea
bound
jb
mov
dec
xor
out
int3
outsl
and
sbb
adcb
mov
testl
mov
pushf
cmp
cmp
mov
fldenv
das
cmp
adc
cwtl
or
xchg
fisttpl
rolb
push
sub
push
jb
cmpsb
ret
leave
clc
pop
mov
jne
add
jne
loop
or
insb
mov
inc
outsb
rcll
cmp
add
lret
push
jno
popf
jo
and
inc
lahf
lock
inc
cmp
sub
mov
xchg
sbb
in
ror
cmp
cmpps
cs
pop
js
cld
cmc
movsl
jmp
stos
dec
mov
mov
xor
cmp
movsb
jo
sbb
xor
jb
or
sbb
fstp
gs
aam
lods
in
mov
or
outsb
lods
mov
cmp
xchg
and
int
push
push
in
inc
push
sub
shrl
or
adc
cld
lods
mov
push
mov
xchg
dec
sbb
scas
push
lea
and
pop
xor
incb
xor
sti
pop
and
sti
pop
mov
insl
jecxz
arpl
mov
adc
mov
cmpsl
push
insb
cltd
jle
in
ljmp
mov
outsb
add
xchg
mov
push
mul
mov
scas
inc
std
daa
data16
cmp
stos
repnz
addr16
loop
mov
sbb
add
and
loope
adc
jae
xlat
mov
pop
insl
js
lods
sbb
ror
jnp
mov
push
lahf
fdivrl
hlt
div
scas
gs
inc
ret
jecxz
fcoms
leave
xchg
inc
cmc
mov
aas
adc
jle
jmp
dec
fadds
stc
subl
xor
dec
dec
loope
sbbb
and
adc
gs
xchg
or
jbe
dec
mull
mov
lcall
sbb
sub
pop
push
out
mov
pop
je
test
jne
fisubl
push
call
loope
mov
add
pop
xlat
imul
lock
movsb
imul
dec
out
addb
test
movsb
aam
out
lret
pusha
mov
test
pop
mov
add
into
sbb
pop
mov
das
mov
test
lods
mov
xchg
push
insl
in
sbb
into
dec
je
cmp
test
fsub
mov
shlb
outsl
std
jecxz
push
lahf
mov
mov
push
je
xchg
jmp
mov
dec
nop
mov
push
xchg
in
mov
inc
aam
cltd
mov
cs
mov
push
mov
push
sub
pop
inc
fs
shrb
sti
in
fimuls
mov
pop
gs
enter
aam
adc
int
cld
sub
hlt
jno
outsl
xor
cmp
adc
cmp
xchg
add
out
out
repnz
fcoms
insb
sbb
push
jns
cmp
jge
adcl
dec
xor
lods
mov
cmp
lods
cmp
mov
popa
scas
loope
xchg
insb
xchg
dec
xchg
dec
xchg
jp
f2xm1
add
nop
adc
test
stc
xchg
jge
sbb
xchg
js
out
arpl
add
scas
fwait
mov
push
push
cmp
mov
mov
adc
push
call
inc
add
or
dec
jg
push
push
call
cmp
sbb
or
inc
dec
mov
enter
mov
test
les
scas
xor
sbb
lds
or
cltd
push
and
push
neg
jmp
push
xchg
negl
fmull
xchg
adc
mov
inc
mov
out
fisubl
fwait
push
or
add
mov
test
push
dec
mov
ret
add
fstl
ljmp
lds
mov
push
in
nop
mov
pop
icebp
jle
cmpsb
mov
imul
dec
mov
jno
fwait
iret
and
and
push
lea
test
aad
jmp
push
roll
iret
movsl
xor
push
std
xlat
mov
cwtl
mov
pop
jb
push
js
outsb
hlt
xor
cmovns
push
push
sub
adc
adc
pop
sbb
mov
dec
popf
rol
mov
cmpsl
pop
lods
jo
lret
and
xchg
dec
jecxz
addl
daa
stc
mov
andl
xor
fsubrs
js
cmp
xchg
pop
fucom
dec
ret
inc
sahf
dec
sub
mov
push
lea
mov
js
stc
pop
adc
stos
inc
jp
lds
dec
out
cli
out
mov
push
pop
sbb
test
push
decb
adc
mov
mov
cmp
fisubrl
inc
dec
jmp
dec
sar
int
dec
pop
jb
mov
add
pop
inc
sbb
ljmp
xor
sbb
jne
xchg
les
add
pop
xchg
push
mov
clc
rcl
sub
cmp
push
inc
iret
aad
and
sahf
and
aaa
add
pop
mov
mov
cwtl
out
push
data16
push
sets
and
mov
pop
clc
stos
push
adc
and
pop
cltd
inc
adc
jmp
daa
lods
call
pop
lock
mov
out
inc
outsl
xor
fsubl
mov
push
xchg
inc
sub
imul
sbb
pop
push
xchg
fstpl
and
std
inc
out
jl
test
jle
adc
lret
imul
aad
jo
icebp
std
push
xchg
cmpsb
mov
in
rcrb
imul
adc
jnp
cmp
stc
pusha
sbb
fisubs
cmp
sub
sub
xorl
orl
xchg
or
fistpll
adc
out
hlt
mov
sbb
push
or
jle
in
push
lea
add
xchg
inc
sti
xor
pop
xorb
scas
outsl
add
add
jmp
adc
das
push
mov
sub
sub
adc
cmp
in
sti
dec
mov
mov
inc
lods
aad
and
push
jmp
mov
jns
in
inc
mov
sub
es
mov
out
movsl
pop
jo
in
mov
push
push
mov
lds
in
mov
icebp
mov
iret
ret
fstps
clc
or
test
packuswb
cmp
mov
ljmp
sub
and
data16
push
xlat
mov
int
sbb
lea
dec
out
cli
int
packuswb
bound
aaa
mov
inc
sbb
cmp
adc
rorl
adc
jo
addr16
add
inc
jmp
xchg
sbb
xlat
adc
push
pop
push
clc
outsb
scas
lret
enter
mov
lods
fdivp
out
and
push
dec
mov
jle
pusha
fwait
adc
mov
outsb
or
xchg
in
mov
fcomi
out
lods
adc
movsl
pop
aam
lock
lcall
sahf
mov
mov
cli
das
rolb
xchg
jl
insb
mov
cli
jne
pop
js
dec
cmp
mov
scas
mov
xchg
pop
push
les
ds
xchg
leave
sahf
sub
cmp
int
lods
and
idivl
pop
xor
lahf
mov
mov
stos
cli
dec
pop
xor
jg
cmpl
xchg
xor
sbb
pop
loop
out
mov
aaa
pop
fstl
sbb
mov
dec
movsb
jle
invd
sbb
or
push
mov
mov
mov
xlat
dec
incl
aas
mov
dec
rcrl
fistl
adc
jns
sub
sbb
mov
clc
int3
push
pushf
jb
mov
xchg
xchg
outsb
in
inc
rcrb
loope
fists
scas
fwait
jl
cld
movsb
cmp
push
iret
pop
inc
popa
pop
dec
rcrb
lods
dec
adc
and
test
scas
les
out
pushf
cmp
jns
call
jbe
push
mull
jmp
xchg
and
das
imul
xor
cmp
sarl
andl
std
rol
sub
popf
cld
cmp
mov
and
pusha
into
iret
xchg
mov
and
sbb
xor
mov
rcl
adcb
add
lret
ret
xor
push
mov
jg
stc
pop
test
ret
lcall
sarl
adc
pushf
sarb
adc
cltd
pushf
mov
inc
test
cmp
jmp
jp
bswap
pop
sbb
cltd
push
xor
fsubp
cmp
pushf
sbb
sbb
mov
sbb
pop
sar
lods
mov
clc
mov
add
lret
xchg
std
inc
cmp
add
sub
add
bound
mov
stos
ret
hlt
rcrb
and
sub
mov
outsb
lock
bound
fs
mov
push
test
imul
aas
fnstenv
mov
imul
orb
bound
push
scas
push
es
cltd
jmp
jno,pt
mov
or
xchg
bound
mov
mov
pop
adc
insl
pusha
ja
cmp
or
push
mov
jns
push
ja
popa
inc
outsl
and
xor
mov
scas
sbb
stos
mov
jnp
lods
xlat
lcall
fucomp
dec
out
add
sub
lret
jg
cs
bound
and
sbbl
in
sub
aam
je
in
int3
and
cwtl
fiadds
icebp
inc
pop
shlb
adc
stos
hlt
pop
mov
jp
repz
lret
add
cmp
push
mov
jbe
arpl
sub
ror
push
xlat
js
cmp
ret
adc
das
cmp
fisubrs
test
gs
imul
sti
cld
outsl
or
out
sub
sub
mov
test
scas
mov
jg
fs
cmp
push
mov
push
jge
push
fcmovbe
add
mov
xchg
sub
xchg
popa
jp
movsb
popa
sbb
ret
addl
out
rorb
pop
inc
add
ret
loop
jne
es
shrb
mov
sbb
das
out
or
lock
jno
cmp
arpl
mov
outsb
test
and
jg
jmp
dec
xor
mov
loop
pop
ja
cmp
cmp
lcall
mov
out
xorb
pop
push
add
fwait
sub
mov
stos
mov
bound
ljmp
adc
jae
es
mov
inc
xchg
popf
sbb
cli
xchg
test
adc
xor
dec
js
shrl
inc
pop
es
pop
jb
fisubs
add
ss
jp
jle
mov
pop
inc
jmp
ror
cmp
inc
mov
pop
mov
lcall
mov
cmpsb
jge
orl
add
pop
adc
mov
stos
rcrb
aaa
test
jnp
imul
das
pushf
mov
dec
mov
pop
das
xchg
in
inc
jmp
and
test
insb
popf
std
lret
loope
bound
pop
ss
mov
adc
jp
or
adc
cmp
std
loope
sbb
adc
pop
mov
rcrb
jb
lcall
xchg
cmp
cmp
dec
mov
push
mov
xchg
adc
sbb
fstpt
push
push
popf
pop
stos
cmp
scas
dec
mov
jp
cmp
cmp
icebp
xchg
mov
jge
cli
mov
clc
stc
xchg
mov
mov
dec
roll
or
mov
sbb
insb
xchg
in
int3
mov
cmpsl
bound
test
dec
mov
in
push
xor
push
mov
fs
nop
dec
jg
inc
out
out
idivl
mov
sbb
and
roll
je
arpl
fisttpll
fistpll
adc
scas
or
ret
xorl
js
push
jge
mov
sub
outsl
and
jg
aad
popa
and
cmpsb
and
and
sub
and
jp
dec
icebp
push
push
decb
jge
cmp
outsl
addr16
jne
dec
push
push
aas
mov
jge
xchg
xor
int
jmp
mov
jno
mov
in
dec
in
mov
mov
or
insl
mov
movsl
fldl
mov
push
es
jns
lods
lahf
sbb
pop
push
int
cli
loop
or
xor
enter
inc
cld
mov
cmp
mov
cld
fisubl
xchg
fwait
adc
movsl
nop
xor
mov
push
insb
les
shl
lock
rcll
mov
sub
xchg
mov
in
push
ret
insl
scas
pop
aas
jecxz
xchg
je
iret
out
xchg
or
cmpsb
ss
sbb
jbe
icebp
mov
sbb
daa
jnp
aad
push
sbb
icebp
aas
hlt
dec
mov
ja
stos
cmpb
mov
jle
dec
int3
icebp
rolb
xor
cmpsl
xchg
nop
add
dec
push
ds
jnp
call
xor
sub
andb
pushf
loopne
outsb
dec
mov
cmp
push
sub
outsb
jnp
push
fistl
mov
xor
std
loopne
out
cmp
aas
iret
aam
lcall
addl
mov
addr16
bound
decl
cmpb
insl
jl
rol
test
and
inc
add
mov
out
test
in
push
adc
fs
ljmp
sub
mov
cltd
lret
push
test
jns
test
sbb
loope
sbb
xor
xchg
sbb
inc
loop
add
pop
nop
ror
xchg
xorl
repnz
xchg
loop
cltd
idivb
sub
adc
iret
cmpsb
sbb
jns
scas
and
xor
gs
icebp
mov
lahf
or
imul
mov
enter
addb
push
mov
dec
das
push
jb
or
inc
push
mov
cmp
mov
pop
jl
xor
out
enter
mov
movsl
add
fstpl
ret
xor
dec
hlt
xchg
mov
js
and
icebp
jns
popf
out
pop
mov
mov
mov
adc
cltd
jp
sysexit
lock
lahf
int
mov
lcall
clc
cmc
test
xchg
pusha
xor
lret
push
pop
xchg
arpl
lea
jnp
jecxz
xchg
jl
mov
das
ljmp
and
imul
pop
stos
cmp
sub
push
jne
es
adc
sub
jne
outsl
mov
scas
cs
cmpsb
add
loopne
dec
or
xor
repz
xchg
cmp
push
leave
xor
add
out
pop
shr
mov
mov
mov
call
xchg
es
xor
dec
jge
daa
ficomps
shll
ret
movsb
sti
sub
xlat
sub
std
ja
adc
xor
xchg
add
pushf
and
add
fiaddl
push
test
mov
adc
mov
aas
test
es
sahf
gs
mov
cmp
xchg
loop
pop
js
outsl
popf
aam
mov
rorb
scas
dec
ret
push
sub
cmp
cmp
jp
mov
lcall
mov
cli
lea
jge
insl
sub
dec
dec
cmp
jp
mov
lcall
mov
cli
lea
jge
in
sub
cmp
cmp
jp
mov
in
scas
fnstsw
lods
ljmp
insl
sbb
cmp
cmp
cli
or
add
mov
push
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aam
les
hlt
cs
pop
dec
idivb
add
xchg
je
gs
xor
and
aam
les
hlt
cs
xchg
dec
test
outsb
movsb
sbb
sahf
je
fs
xor
and
aam
les
hlt
cs
xchg
dec
test
outsb
movsb
jle
mov
sbb
rclb
imul
inc
mov
pop
pop
hlt
cmpxchg
or
movsl
cmc
push
inc
inc
stos
adc
cmp
sbb
dec
out
hlt
test
push
fwait
stos
jmp
add
scas
test
int3
fdivp
cld
xchg
stc
pop
add
nop
aas
mov
mov
je
movsb
inc
inc
xor
push
arpl
aam
les
sahf
cmp
push
xor
sahf
fnstenv
popa
mov
cmp
fiadds
fwait
adc
sub
and
adc
sbb
int
test
mov
push
sbb
xchg
or
nop
outsl
ss
add
cmp
movsb
testl
fisttpl
fisttps
add
push
les
hlt
cs
xchg
dec
test
outsb
movsb
jle
mov
scas
fs
xor
and
xchg
push
mov
popf
outsl
lea
or
sub
or
xchg
into
adc
pushf
bound
xchg
data16
or
notb
jmp
in
jbe
fs
adc
mov
mov
les
dec
mov
jl
pop
mov
movsb
jle
mov
scas
fs
xor
and
aam
les
hlt
cs
xchg
dec
test
outsb
movsb
jle
mov
scas
fs
xor
and
aam
loope
imul
fstpl
push
lcall
pop
imul
dec
jbe
dec
in
mov
jae
sub
jge
stos
inc
loopne
aad
lods
sub
cli
loope
add
mov
inc
pop
pusha
pop
hlt
in
sub
fimull
jl
and
fcoms
inc
jge
xor
faddp
scas
lods
movsb
test
cmp
stos
stos
and
cmp
mov
arpl
mov
out
adc
fistpll
cmpsl
ja
test
dec
xorl
xchg
icebp
les
adc
xor
cwtl
jbe
add
or
push
in
popa
mov
scas
fistpl
jg
mov
mov
sub
xchg
mov
mov
cmp
loope
fwait
out
dec
mov
jae
insl
outsl
push
and
mov
pop
and
out
sub
inc
mov
test
xchg
or
push
negl
iret
loope
aas
xchg
push
rorb
jne
mov
cmpsb
pop
cmp
dec
neg
xor
imull
ret
test
cwtl
mov
movsl
inc
cmp
fistpll
shl
lret
mov
jo
or
fisttps
fnstsw
or
dec
or
jl
xor
in
add
push
dec
xor
cwtl
xor
xor
cmpsl
ds
in
loopne
mov
mov
aas
mov
sub
das
xchg
lahf
jp
push
loopne
test
ret
xchg
mov
int
inc
icebp
sbb
popa
sub
jp
ret
sbb
into
cli
sarb
flds
mov
lea
testb
sbb
and
jl
data16
loop
inc
fs
leave
mov
xor
int
xlat
mov
xchg
cmp
mov
popf
jge
mov
push
popf
das
in
hlt
repnz
xlat
and
test
xchg
and
movsl
aaa
mov
mov
cmp
das
imul
data16
movsl
jmp
fs
xorl
adc
pop
imul
mov
imul
add
pusha
leave
lods
add
push
or
inc
sbb
insb
add
pop
stc
fmul
pusha
jae
xchg
ljmp
stos
mov
add
cs
jmp
scas
in
out
addl
movsl
adc
dec
sarb
jmp
lea
jbe
cmp
push
aaa
faddp
or
xchg
cmp
ror
xor
sahf
mov
out
xlat
push
pop
mov
aaa
cmp
lea
mov
mov
sub
outsl
and
nop
pop
push
sub
mov
inc
mov
jmp
xchg
sbb
jbe
pop
xor
and
sbb
clc
popl
mov
andl
andb
fldl
jae
add
and
pop
sbbb
inc
dec
pushf
push
xchg
dec
aam
repz
loopne
push
cmp
mov
inc
jmp
sar
cmp
xor
enter
push
and
aad
mov
xor
xor
in
leave
add
in
inc
cltd
out
adc
mov
add
insl
out
mov
ficomps
out
mov
pop
push
xchg
test
and
movsl
aaa
iret
cli
adc
dec
lock
push
jbe
inc
dec
lret
dec
insb
test
test
adc
jp
jno
popa
add
mov
adc
inc
cmpsb
lcall
and
mov
lret
jb
xor
jg
push
adc
scas
ss
stos
rclb
xchg
lret
das
inc
subb
dec
cltd
adc
jge
jns
xlat
or
dec
bound
imul
ljmp
inc
or
cli
pand
xchg
push
dec
cmc
or
fdivs
or
fcoml
cmp
adc
popf
lds
or
xor
jmp
mov
mov
jmp
push
sub
mov
xchg
add
jmp
sub
sub
mov
sti
sub
sub
scas
jmp
nop
dec
xchg
sbb
push
mov
stc
ljmp
and
push
jmp
rorb
daa
xchg
jg
or
cmc
inc
adc
scas
in
sub
pop
mov
or
lds
push
je
pop
rcrl
jl
jle
cmp
insb
pop
and
insl
mov
or
xchg
cmpsl
repz
add
sub
repz
cltd
and
xchg
lcall
sub
faddp
pop
ret
cltd
sbb
xchg
pop
loopne
loop
or
cs
divb
test
mov
gs
inc
push
and
or
cltd
imul
fcomip
rol
inc
jbe
jnp
cmp
mov
insb
int
ret
pop
popa
pop
in
in
jae
pusha
pushf
repnz
test
jns
scas
lcall
pop
pop
xor
jp
cli
call
test
mov
mov
mov
scas
mov
jl
adc
cltd
cmp
xchg
cmc
mov
jmp
data16
ljmp
bound
xchg
jns
xor
sub
es
jb
das
sbb
or
bound
outsb
inc
test
stc
mov
dec
out
push
loopne
pusha
ficoms
inc
adc
mov
jge
push
xchg
mov
cmp
cs
lahf
and
movsb
xor
sub
insl
mov
pop
in
add
xorl
into
sbbl
data16
adc
inc
xor
aad
cld
mov
xlat
adc
jge
mov
repnz
dec
inc
je
rcll
je
xchg
hlt
mov
clc
xor
and
lret
out
inc
sub
dec
bound
xchg
pusha
and
rcr
push
and
inc
nop
sbb
pop
sbb
and
add
mov
subb
cmp
xchg
inc
pop
mov
pop
test
mov
je
cmp
mov
rorl
loop
mov
and
adc
and
sub
lea
adc
rorb
pushf
mov
or
mov
sub
add
gs
and
iret
sbb
sub
loope
and
and
pop
sbb
rorb
aas
dec
and
lods
pop
mov
or
frstor
mov
movsb
rcll
std
cmp
dec
popa
push
inc
adc
leave
imul
sub
je
aas
in
pushl
add
pushf
lock
pop
ja
fidivrs
jle
cmpsl
enter
pop
sub
cmp
jle
sbb
adc
popf
sbb
int
sub
jmp
ficoms
push
sbb
push
xchg
cmc
clc
mov
das
mov
mov
lahf
adc
les
ret
scas
ret
mov
inc
sbb
testb
jbe
lea
pop
pop
xorb
in
xor
xor
jno
and
popf
or
call
inc
shrb
sub
stos
jmp
push
add
shl
psubq
sbb
inc
xchg
jne
or
mov
adcl
test
cli
push
call
pop
dec
or
inc
jp
xchg
bound
scas
movsb
outsl
je
jg
stos
sub
jnp
fs
cltd
xor
xchg
inc
es
and
push
mov
xor
test
add
xor
int3
fisttpl
jp
sbb
jns
dec
std
hlt
push
mov
test
push
stos
or
aam
pushl
mov
sub
mov
in
insl
cmp
lods
or
in
in
dec
out
mov
xor
ja
psrlw
into
jns
pop
lods
fs
add
inc
pop
jge
js
es
nop
xchg
and
jg
bound
or
dec
and
mov
je
call
inc
lock
pop
and
mov
ret
out
aam
lods
std
in
mov
stc
popf
sbb
inc
pop
xor
mov
mov
xorb
or
or
sub
and
add
cmp
mov
int
xchg
inc
push
loope
fsubl
popa
sub
adc
jp
pavgb
lods
shlb
jnp
sub
jmp
int
sbb
and
loopne
dec
mov
lods
sub
xchg
scas
push
dec
mov
or
xchg
push
lock
xchg
aad
mov
jecxz
stos
xchg
xor
std
or
icebp
jecxz
fcmovnb
pop
jns
push
lods
mov
mov
enterw
jle
pop
es
and
jne
pop
add
jno
cmp
adc
shrb
icebp
adc
dec
outsl
sbb
inc
sub
pop
imul
ds
jecxz
mov
testb
sarl
jb
cli
fdivrs
pop
inc
je
push
ret
movsb
pop
jmp
pop
cmp
test
popw
jae
cmp
pop
lahf
dec
in
or
xor
inc
je
add
insl
xchg
add
add
insb
push
imul
je
out
xor
test
shll
inc
adc
mov
mov
pop
cmpps
arpl
fldenv
jno
cs
popa
test
and
add
daa
cmpsb
pop
xchg
xchg
loope
stc
iret
std
xchg
lods
xchg
fwait
shll
adc
nop
jbe
mov
std
add
loop
scas
addr16
in
push
nop
cmc
pop
jp
pop
mov
sahf
test
jg
add
inc
outsl
test
enter
movsl
mov
xor
xlat
cmp
mov
xchg
iret
jmp
imull
and
enter
cwtl
cmp
mov
mov
add
scas
loope
stos
shlb
andb
mov
int3
dec
movl
xor
out
das
fidivs
cmpsb
aas
jp
cmp
sub
test
fldenv
pop
lret
out
sahf
shlb
repz
stos
mov
mov
pop
roll
insl
mov
inc
fistpll
shrb
test
xlat
stc
repnz
ds
mov
sti
shrl
dec
push
pushf
cvtpi2ps
leave
scas
or
mov
jbe
movsb
xor
jnp
mov
lods
test
jns
adc
sub
inc
in
scas
xlat
les
testb
push
popa
push
stc
xchg
or
mov
inc
or
sub
inc
dec
or
in
dec
jecxz
dec
fcoml
imul
in
and
mov
xor
mov
adc
push
inc
push
movsl
ret
cmp
jecxz
pushf
inc
and
sti
dec
inc
cltd
je
pop
or
mov
dec
cmpsb
and
xchg
sbb
rclb
ficoml
jmp
inc
rclb
sub
mov
xor
in
inc
xor
pop
or
sub
inc
cwtl
xchg
pop
cltd
mov
test
bound
fcom
and
cmpsb
dec
push
mov
ss
mov
jp
sbb
ficoml
and
and
add
xor
cmp
push
popf
mov
mov
lcall
add
scas
push
mov
inc
xchg
or
jns
lret
fdivs
bound
enter
je
add
sub
popf
popf
rorl
jge
popa
jle
push
xchg
hlt
dec
mov
test
cmp
addb
pop
fdivrs
push
push
or
aaa
cwtl
mov
xor
sub
div
push
mov
mov
in
pop
test
push
pusha
movsl
pop
mov
aaa
xchg
mov
adc
inc
fldl
cmp
jne
or
rclb
cld
mov
sub
fstl
sub
add
or
mov
xorl
xchg
andl
insl
xchg
leave
nop
gs
das
ret
ja
pushf
dec
popa
call
stc
jmp
lods
lea
cmp
or
mov
jno
gs
loopne
fcmovne
imul
out
stos
pop
inc
sbb
mov
mov
test
lods
mov
cmp
fwait
or
int3
push
fidivrl
insb
add
aaa
in
sbb
or
xor
mov
movsl
xchg
or
ret
or
lret
mov
and
cwtl
cltd
call
xor
lods
nop
fnstcw
iret
fldcw
pop
aas
mov
push
jecxz
int
push
xor
aaa
std
add
sub
std
cmp
xor
shll
jbe
int
in
and
dec
rcll
out
popf
ss
lahf
push
enter
xchg
cmp
lret
pop
int3
js
xchg
and
sub
cmc
sbb
fsts
pusha
xchg
push
aam
jne
insb
inc
sbb
insl
out
gs
je
mov
pop
popf
pop
mov
adc
cld
scas
scas
push
or
shrl
pop
cld
fdivrl
stos
ret
or
ficompl
sbb
pop
jg
icebp
mov
ret
sub
fstps
mov
cmpsb
jl
mov
pop
ret
stos
loop
sbb
enter
or
xor
loopne
repz
jno
or
inc
cmp
fdiv
cltd
enter
loopne
int
adc
in
fs
mov
shrb
cmc
outsb
outsl
or
jb
or
jge
inc
pop
lret
sub
inc
into
pop
pop
mov
jle
loope
push
lret
cmc
call
and
fadds
jmp
jle
xchg
sub
add
sbb
stos
sub
jecxz
mov
sub
pop
sti
adc
inc
fsubs
or
arpl
js
cmp
inc
sar
inc
call
outsl
xchg
insb
sbb
dec
in
cmpsl
iret
xor
jmp
xchg
loopne
idivl
lds
hlt
adc
jns
pop
dec
sbb
adc
out
mov
faddl
insl
dec
and
imul
mov
fadds
or
xchg
push
sub
push
cmp
stos
mov
rolb
jb
testl
adc
cmp
jg
jae
gs
dec
iret
cmp
jmp
cli
lret
xchg
sub
sbb
adc
inc
mov
dec
aad
jno
xchg
gs
sub
lahf
leave
mov
popa
mov
pushf
jnp,pt
jo
inc
sub
push
out
pop
pop
jl
shrb
movsl
mov
or
or
test
jmp
mov
mov
push
lahf
xchg
add
int
mov
dec
pop
out
add
xor
push
addl
pop
jbe
and
adc
int3
dec
ljmp
loop,pn
sbbb
mov
into
inc
push
xor
aam
mov
insl
or
popf
cli
jge
inc
mov
data16
sbb
lahf
int3
or
outsb
push
lock
stos
clc
addr16
fadds
out
loopne
cld
push
cli
in
mov
cltd
popa
stc
shlb
mov
fbstp
shlb
adc
sbb
or
jnp
xor
rcrb
dec
or
inc
daa
cli
mov
addr16
xchg
ljmp
cld
into
lds
push
shll
push
mov
movsl
mov
mov
mov
out
out
jno
roll
mov
add
or
sbb
push
cmp
lcall
mov
adc
aad
cwtl
adcl
jle
sub
cmc
and
dec
jns
lcall
inc
cmp
jb
ds
jl
jbe
lock
ss
inc
pop
push
inc
jecxz
enter
popf
and
lret
adc
pop
add
daa
xor
jecxz
xchg
adc
adc
inc
xchg
scas
les
out
mov
dec
out
int
lods
mov
cld
mov
push
mov
int3
add
push
out
imul
movsb
jb
ret
xor
sbb
mov
push
ljmp
fisttpll
adc
sbb
push
fnstenv
cmp
cs
xchg
cmp
inc
add
push
push
cmpsl
call
xchg
pushf
das
or
cmp
push
add
cmc
test
hlt
inc
mov
push
mov
mov
push
or
pop
mov
lcall
push
mov
gs
push
push
pop
add
jb
push
pop
jns
enter
fbstp
push
out
jge
jg
pop
sbb
insl
push
add
sti
outsb
jne
pushf
loope
pop
cltd
xor
loopne
jnp
xchg
inc
dec
cmp
sub
inc
cmc
repnz
add
sahf
adc
mov
mov
fs
mulb
pop
test
adc
icebp
shl
and
mov
add
push
stos
sbb
pop
fucomi
xor
ret
gs
push
insb
pop
inc
cmpsl
out
xchg
adc
in
cmp
cld
xchg
shll
adc
stc
jge
mov
sbbb
aas
sbb
test
sbb
dec
loope
push
push
and
fdivrs
add
cli
scas
call
xor
fnstenv
fstpl
dec
es
or
xor
lods
or
adc
sarw
mov
cwtl
pop
xor
xchg
mov
and
imul
dec
mov
pop
lods
fsubl
mov
xorb
popf
or
out
test
adc
mov
lods
jae
push
mov
lea
addr16
fcmovu
out
arpl
fildl
cmp
push
mov
inc
test
dec
jl
mov
outsb
fidivs
jle
and
sti
stc
jl
pop
and
push
adc
mov
imul
fimull
repz
mov
scas
pop
inc
sbb
mov
lret
cmp
push
inc
and
nop
xchg
loope
mov
push
jecxz
in
cwtl
and
and
rorb
mov
ss
lahf
cmpsb
mov
in
bound
dec
push
mov
cmp
add
mov
stos
push
loope
leave
lds
loop
add
pop
cmp
test
jge
push
pop
sahf
nop
mov
jecxz
dec
xchg
imul
pop
ret
mov
in
xor
idiv
pop
cmp
and
loopne
pop
rclb
scas
mov
and
loope
dec
outsl
mov
fisttps
ret
scas
leave
orb
xlat
aad
adc
pop
lods
incb
ljmp
pusha
lret
ret
add
daa
cmc
cmpsb
jge
cmc
adc
push
jecxz
add
mov
lret
test
ret
je
push
je
not
xor
inc
in
push
push
lds
push
pop
cmp
push
pop
mov
jl
dec
jmp
xor
jle
jge
popf
add
data16
enter
jmp
adc
add
int
sti
dec
inc
sub
mov
jae
adc
pop
add
gs
int3
inc
add
add
cli
xor
scas
cmc
xchg
or
gs
sbb
sub
movsl
mov
or
testb
jae
sarl
add
xlat
int
ficompl
adc
push
ds
xor
cmp
add
fimuls
lds
or
xchg
mov
loope
lret
outsl
mov
pop
sbb
shlb
enter
jo
jbe
mov
mov
and
mov
xor
jmp
mov
lcall
fs
xor
add
fldcw
and
add
fistl
aam
push
xlat
std
std
aam
mov
dec
mov
sahf
mov
dec
cmp
int3
mov
pop
pop
dec
mov
lret
inc
push
imul
test
sahf
arpl
mov
xchg
stos
push
seto
pop
jnp
outsl
aas
in
lret
mov
repz
dec
mov
cs
mov
mov
data16
repnz
xor
xor
add
pop
enter
test
stos
mov
jbe
stos
fists
mov
stos
mov
pop
dec
xchg
lods
dec
inc
mov
push
mov
mov
add
push
js
jmp
push
ret
dec
cltd
outsb
daa
ds
cmpsl
mov
sbb
ror
dec
ror
rcl
popa
stc
push
push
inc
push
push
xchg
xchg
and
or
jmp
xor
cmp
jne
xchg
and
xchg
inc
insb
ret
mov
or
pusha
jne
xor
test
cmc
daa
xor
sub
repnz
sbb
fsts
ds
mov
push
punpcklbw
movsb
jnp
mov
inc
jns
mov
stos
sub
inc
inc
mov
fdiv
push
mov
dec
pop
cld
call
cmp
pushf
inc
popa
in
pop
out
lods
sub
pop
fdiv
mov
mov
insb
in
xchg
cmp
int
stos
popa
testb
sbb
cltd
and
sarb
test
sbb
xor
jno
add
clc
mov
jecxz
clc
imul
jle
push
and
repz
loop
cmpsb
push
cmc
cs
xchg
dec
test
outsb
movsb
jle
mov
scas
fs
xor
and
aam
les
hlt
cs
xchg
dec
test
outsb
movsb
jle
mov
scas
fs
xor
and
aam
inc
push
je
in
adc
test
outsb
and
push
mov
scas
fs
xor
and
aam
les
hlt
cs
xchg
dec
test
outsb
movsb
mov
fisubrs
je
inc
adc
test
pusha
movsl
jo
push
xchg
pusha
mov
rolb
xor
mov
test
pusha
movsl
jo
add
adc
and
xor
rolb
xor
mov
test
pusha
movsl
jo
add
adc
and
xor
sarb
dec
xchg
push
fidivs
out
add
jne
test
adc
add
add
adc
out
push
add
or
and
orb
in
aad
mov
dec
sub
std
ss
jne
jg
test
mov
nop
fildl
push
clc
fstps
add
loop
je
lds
cmc
and
lds
push
xchg
push
movsb
icebp
mov
fimuls
movsl
shlb
add
lret
clc
add
mov
jae
dec
mov
sbb
mov
lock
or
movsl
and
daa
movsb
nop
sar
rcl
fildll
mov
add
and
mov
push
test
pusha
movsl
jo
add
adc
and
xor
rolb
xor
mov
call
adc
xchg
inc
xorb
imul
pop
in
stc
sub
out
adc
and
xor
jl
and
sarb
jae
pop
in
les
rclb
mov
sub
xor
or
jno
add
xor
rolb
xor
mov
test
pusha
movsl
jo
add
adc
and
xor
rolb
xor
mov
test
sbb
push
fiaddl
mov
mov
jle
jae
imul
popa
xchg
sub
mov
cmp
or
xchg
loopne
fwait
out
xchg
or
jle
iret
lds
inc
mov
mov
mov
xor
mov
sti
daa
lock
and
pop
cmp
fwait
loop
or
jo
inc
push
enter
les
dec
rcrl
pop
sbb
and
mov
sbb
sub
mov
cmp
hlt
push
test
bound
out
daa
hlt
leave
call
cwtl
gs
push
cld
arpl
rcll
jnp
jo
pusha
push
bound
pop
and
mov
sbb
and
cmp
lret
movsb
dec
int3
mov
jg
inc
sahf
push
ret
jg
sub
ss
cld
add
add
lds
dec
imul
das
out
sub
fnstsw
mov
test
mov
pusha
jecxz
pop
nop
test
cmp
mov
lods
xor
pop
ja
jmp
jnp
into
popf
inc
nop
cli
mov
sbb
dec
out
push
inc
add
xchg
jnp
lcall
push
jmp
imul
jmp
aas
push
jbe
das
cwtl
pop
mov
mov
lock
mov
cmpb
sbb
jae
pusha
lea
iret
jne
sub
xor
jae
out
sbb
gs
enter
or
pop
dec
aaa
push
xor
cmp
pop
aam
sbb
xor
pop
pop
xor
ss
cmp
mov
fists
pop
sti
sbb
cld
enter
insb
jle
and
inc
mov
test
clc
or
stos
nop
fwait
push
shlb
adc
enter
ss
shll
cmp
mov
sahf
imul
es
ret
or
inc
add
fmul
ja
pop
inc
push
mov
inc
mov
jecxz
pushf
xchg
test
xchg
ja
inc
sub
push
cmp
ror
out
in
test
cmpsb
push
mov
rorb
cmp
lret
add
arpl
mov
je
scas
lock
adc
or
push
mov
mov
icebp
xor
pop
lret
xchg
lret
outsb
enter
jmp
out
xlat
das
jne
sbb
xor
int
in
jb
imul
fsubl
inc
add
xor
rol
pop
xchg
mov
and
movsb
lret
nop
out
pop
sub
jnp
xor
jo
shrb
dec
push
arpl
dec
cmpsl
push
dec
leave
fcmovnbe
sub
int3
iret
mov
mov
das
loop
and
mov
adc
ljmp
pusha
mov
xchg
xor
xor
imul
pop
sub
dec
popa
fldcw
ja
int3
in
clc
xchg
add
popa
mov
push
inc
inc
jle
out
cmpsl
shrl
lahf
test
xor
jno
push
and
dec
cmp
mov
dec
inc
insb
mov
lods
xor
and
pop
movsb
sbb
mov
fidivl
or
pop
rclb
cmp
jl
push
adc
or
out
imul
jl
nop
push
ja
loop
scas
shll
xor
pop
sbb
pop
sar
in
fbld
data16
fisubs
cld
and
adc
jmp
int
xor
mov
push
ret
dec
pop
adc
les
pushf
sub
adc
lret
in
pop
mov
add
mov
fs
stos
mov
sbb
lds
loopne
jns
jecxz
inc
fnstcw
mov
xchg
lock
sbb
orps
pop
pop
lock
js
sub
stc
pop
bound
jle
jecxz
enter
sub
cli
sbb
cmp
call
sarb
jmp
subl
mov
pusha
pop
pop
mov
or
pop
std
adc
in
icebp
xchg
jns
mov
leave
std
test
outsb
notrack
pop
mov
mov
fistpll
xor
sub
and
jecxz
add
daa
mov
aam
shrl
mov
inc
pop
or
sub
xchg
mov
cmp
push
add
push
jg
repnz
cmp
lcall
cld
adc
jp
outsl
fidivrs
out
sarb
stos
scas
mov
add
sub
mov
dec
or
mov
std
mov
fidivrl
repnz
sub
in
repz
xor
test
mov
in
inc
jge
push
or
loope
std
cmpb
pop
jp
dec
ret
adc
inc
mov
and
fadd
fsubs
xor
mov
sbb
xor
test
dec
aam
in
leave
mov
pop
or
ss
dec
cli
negb
dec
ja
cmp
xchg
test
sbb
inc
xchg
jmp
mov
add
popa
push
and
les
data16
jmp
mov
pushf
push
jmp
and
xorb
adc
clc
dec
push
andb
mov
fs
scas
aas
jmp
bound
int3
lret
push
push
xor
es
inc
push
sbb
js
movsl
shlb
andb
sbb
pop
outsl
popa
lds
sub
cwtl
hlt
scas
sub
cmpsl
sub
cmp
in
insl
xchg
adc
jno
aad
mov
inc
pop
rcrb
enter
das
lahf
outsl
add
jae
sub
sbb
enter
out
push
jne
ljmp
lods
dec
shll
mov
jecxz
dec
pop
mov
xchg
stos
jle
incl
fdivrl
adc
cld
out
xchg
imul
dec
and
ds
pop
repz
mov
fstps
or
jle
cmpl
cs
add
push
adc
scas
insl
mov
inc
pop
jo
dec
pop
stos
jnp
loopne
xchg
sbb
mov
adc
pop
dec
dec
in
jae
std
mov
pop
push
sub
cmp
mov
dec
mov
lret
push
inc
fld
adc
push
dec
fmul
push
pavgb
push
or
cmp
mov
test
push
sub
call
mov
ficoms
xorb
xlat
pop
scas
dec
sub
out
sbb
cmp
push
push
call
int
mov
pop
lea
sbb
mov
stos
les
xorb
data16
icebp
test
cmp
enter
pop
and
pop
xchg
je
jno
data16
xor
les
pop
jnp
xor
push
sub
flds
enter
or
xchg
iret
outsl
or
xchg
adcl
sbb
les
imul
jb
insl
ds
mov
xchg
arpl
cs
push
xor
cltd
mov
test
test
ret
mov
movsl
push
popa
jge
stos
pop
xor
imul
push
push
and
mov
lds
jp
mov
out
xor
and
adc
jbe
inc
mov
mov
orb
nop
adc
sti
mov
repz
rolb
lret
mov
imul
negb
jb
int
inc
outsl
iret
pushf
call
arpl
ljmp
sbbl
test
push
jae
mov
js
orl
sub
mov
pop
leave
iret
jmp
push
push
adc
sub
xor
mov
dec
pop
pushf
mov
jge
popa
ljmp
test
gs
fcompl
cmpsl
jmp
out
xor
jmp
nop
or
scas
mov
adcl
mov
lock
std
loop
fisubrl
andb
pop
xchg
decl
pop
aaa
cwtl
roll
mov
in
sub
and
pop
push
push
push
sbb
clc
push
jno
mov
or
insl
movsb
cltd
adc
and
jae
add
insl
fmul
jno
cmp
add
in
xor
mov
movsb
mov
push
insl
in
add
push
frstor
cmpsl
out
dec
jg
jge
mov
test
xchg
mov
in
add
lahf
jne
mov
mov
inc
lods
sbb
mov
ljmp
xchg
or
xor
jns
loop
outsb
sub
ds
loop
mov
in
sbb
adc
dec
mov
or
jne
jne
xlat
jns
xchg
dec
std
lret
adc
sub
sbb
pushf
pushf
int3
inc
aam
jne
and
fwait
daa
adc
out
xadd
dec
sti
adc
adc
andb
mov
int
mov
push
push
andb
cli
jmp
es
xchg
in
pop
or
or
popf
jmp
pop
inc
fs
sub
bound
jns
mov
xor
push
ljmp
mov
sbb
push
mov
mov
mov
cmp
push
loopne
mov
lock
ret
adc
dec
sub
push
cmp
jae
adc
and
push
pop
mov
nop
pop
pop
int3
ss
pop
sub
dec
inc
ljmp
lds
mov
cmpsb
pushf
fdivr
mov
jecxz
sub
xchg
subb
xchg
pop
ror
daa
dec
xor
mov
cmp
inc
das
call
shl
ficoml
movsb
dec
mov
out
pushf
scas
dec
loopne
and
and
cwtl
cmpsl
xlat
iret
xchg
imul
sub
bound
test
push
js
or
cmpsb
in
test
add
cld
dec
mov
leave
jnp
mov
jne
jmp
add
out
push
movsb
data16
sbb
jge
ret
pusha
push
push
test
inc
mov
test
jns
inc
push
loope
stos
test
lahf
cmpsl
cli
incl
mov
nop
imul
jbe
push
fsubl
or
movsl
dec
inc
cltd
inc
mov
jmp
cmp
cmp
lret
loop
movsl
lahf
xchg
jne
je
xchg
xchg
cwtl
push
xorl
test
enter
sbb
mov
int
call
sub
cmpl
xchg
fcoml
insb
pop
xor
adc
daa
punpckhdq
aad
jbe
xor
mov
push
xchg
inc
pusha
mov
and
popl
xchg
ficompl
or
xchg
fstpt
sar
pop
repnz
jae
inc
rcll
je
into
sbb
lods
jl
or
xor
jne
imul
je
xor
testb
pop
loopne
out
pop
shll
mov
cmp
push
iret
add
add
fisubrl
ss
cmpl
scas
push
cmp
and
test
mov
mov
dec
jg
xchg
loope
push
and
cmp
pusha
adc
fnstsw
add
popf
mov
mov
add
ds
and
in
mov
fwait
rorb
push
add
adc
mov
int
scas
jb
push
jle
into
jne
mov
mov
push
inc
mov
inc
repz
pop
jg
pop
imul
or
sub
jbe
push
call
cmp
sti
loope
cmc
insl
loop
inc
xor
fsubrs
adc
mov
inc
aam
daa
pop
jp
repz
xor
xor
and
jbe
inc
jmp
out
loopne
cwtl
xchg
xorl
es
daa
cmp
out
sbb
cld
cmp
and
mov
int
rolb
cmpb
fucomp
jecxz
jmp
insl
mov
pop
aam
int
xor
mov
pop
sbbl
dec
pop
js
orb
jnp
mov
adc
outsb
push
ret
insl
iret
push
sub
lds
or
data16
dec
fdivr
or
into
subl
jnp
mov
xchg
add
inc
in
in
mov
push
out
stos
add
scas
adc
loop
jp
scas
movsb
pop
cmp
dec
int3
dec
xor
inc
mov
and
xchg
mov
lea
aas
test
mov
lret
fidivs
pop
fdivrs
jnp
dec
ret
sbb
inc
mov
pop
imul
insl
imull
or
pop
inc
pop
out
lods
pop
pop
mov
loopne
add
call
add
adc
pop
cli
int
and
push
sbb
mov
jg
mov
das
xchg
push
inc
sti
xor
jp
popf
sbb
xor
dec
pusha
xlat
lret
or
iret
or
pushf
out
sbb
push
push
add
mov
push
add
add
fcoml
pop
xchg
xor
repnz
dec
leave
or
jne
and
nop
push
mov
sub
addl
dec
call
fldcw
sbb
mov
push
and
jb
dec
lret
pop
cmp
sub
outsl
mov
fisttps
scas
pop
mov
sub
andb
fdivs
adc
popf
stos
lock
cld
xchg
and
bswap
cmpl
sti
notl
push
push
aas
fs
ja
mov
mov
and
loopne
mov
xchg
mov
scas
shll
fmuls
mov
daa
pop
mov
aad
fisttpll
push
mov
cli
or
jbe
std
push
icebp
lcall
daa
pop
lret
lods
or
jp
ds
out
adc
in
push
test
jno
jmp
inc
sbb
xchg
xor
inc
dec
out
test
mov
aas
dec
fldl
stos
hlt
mov
decl
or
push
jge
cmp
arpl
dec
mov
mov
fiaddl
stos
cltd
pop
mov
fldcw
adc
mov
cmp
xchg
sbb
pop
test
pop
ja
mov
sub
xor
xchg
lret
mov
jle
mov
mov
gs
sbbb
pop
pop
pop
xlat
out
data16
sbb
jmp
jb
mov
cmp
cwtl
icebp
insl
mov
jl
cli
int3
lahf
jnp
fcmovnbe
in
into
pushf
ja
out
mov
mov
jae
xchg
xor
add
jecxz
in
call
mov
lds
cwtl
mov
jge
stos
xlat
pop
push
mov
sahf
out
inc
jae
sub
in
cmp
movsb
and
or
lods
popa
jle
dec
ja
push
jnp
mov
xor
or
mov
aam
mov
repnz
mov
ss
imul
lcall
jnp
mov
adc
mov
pop
and
outsb
and
es
leave
dec
pop
pop
loope
inc
pusha
rorl
enter
dec
adc
mov
outsl
push
inc
inc
inc
mov
shrb
mov
dec
and
or
push
jns
outsb
shrl
push
ds
jle
andb
cwtl
mov
movsb
add
cli
inc
shll
pusha
arpl
mov
lods
xor
dec
jo
mov
insb
rolb
in
mov
add
fs
pusha
push
mov
jnp
sbb
les
or
xor
rcrl
ret
dec
mov
stos
sub
sarl
inc
cmp
add
adc
fistpll
stos
or
cmp
outsl
ds
scas
jno
push
lcall
cltd
shl
imul
jmp
sbbb
test
sbb
mov
cltd
psadbw
jne
ss
sbb
pop
sub
js
jo
fistps
repz
add
dec
pushf
pop
stos
jo
mov
scas
call
and
cmpsl
rorl
xchg
int3
mov
rcrb
in
pusha
ja
push
outsl
mov
aas
cmp
push
mov
loop
and
int
ret
roll
test
addr16
add
sbb
fwait
shll
imul
mov
call
pop
add
lret
hlt
jno
adc
call
push
mov
jo
mov
xchg
sbb
push
cmc
jle
xchg
jae
stos
icebp
mov
dec
mov
xor
inc
shl
jmp
ds
fnstcw
cmp
cmp
fldcw
jae
adc
or
adc
out
arpl
pop
scas
popa
lret
sbb
or
and
shrb
mov
sub
imul
mov
pop
inc
xchg
jbe
push
and
adc
shlb
pop
pop
sbb
dec
outsb
popa
aam
or
inc
inc
or
sub
fildll
or
sti
jmp
or
movsl
dec
outsl
shlb
js
in
das
cmp
jne
xchg
adc
test
xchg
in
jge
outsb
mov
xchg
movsb
movsl
push
dec
lds
into
push
dec
jno
jl
das
rcl
adc
ja
jg
add
cwtl
out
and
add
jl
addr16
jmp
mov
mov
lahf
mov
jecxz
mov
mov
adc
mov
std
sub
mov
test
mov
pop
pop
cmpl
iret
pop
cmpsl
mov
jns
mov
cmp
inc
xchg
and
inc
ret
aas
xor
mov
arpl
mov
add
loopne
cmp
dec
lcall
or
insb
xchg
push
inc
xorb
push
insb
fnstsw
adc
pop
xor
jp
and
xor
cmpsl
inc
mov
and
xchg
add
mov
cmp
fstl
xlat
xlat
sub
xchg
mov
test
andb
jbe
pop
fsubs
jl
gs
dec
push
jb
int
cmpb
ss
cmp
loop
xchg
je
test
xchg
dec
pop
lds
jg
es
dec
mov
fdivl
dec
ret
int3
in
pop
or
iret
out
mov
loop
js
mov
subl
jb
push
mov
popf
fbld
mov
cmp
add
lcall
pop
sbbl
cmp
hlt
pop
mov
adc
mov
push
cmpsb
xchg
inc
out
pop
addr16
rclb
pop
aaa
mov
adc
pop
inc
ret
test
ljmp
stc
adc
sub
inc
jne
dec
pop
scas
clc
jbe
pop
leave
inc
loop
sbb
out
inc
or
bound
lcall
test
in
cmp
outsl
out
cmp
iret
aam
fstpt
inc
jmp
mov
mov
inc
push
or
push
pop
or
arpl
out
jne
sub
lds
iret
inc
iret
mov
and
cli
or
movd
movsb
in
rol
sub
push
inc
mov
pushf
and
out
std
push
pusha
aam
jo
jl
aad
sar
popa
sahf
pusha
xchg
jnp
pop
mov
cmp
inc
scas
or
inc
mov
lret
jo
xchg
mov
hlt
sbb
ja
push
in
pop
rorb
stos
dec
push
xchg
mov
pop
xchg
mov
aas
cmp
fsts
arpl
aas
movsb
aas
btc
adc
in
jne
xchg
mov
ficoms
jnp
and
push
enter
xchg
lock
sti
scas
mov
xlat
push
push
std
out
mov
push
test
aam
jmp
jge
inc
inc
mov
cli
mov
icebp
jg
fcompl
fcmovb
and
pop
sub
and
inc
and
repnz
insb
loopne
pop
lds
cmp
icebp
jno
imul
sub
sub
jne
cmp
xor
addr16
xor
bound
cltd
pushf
pop
or
fisubl
mov
xor
cld
stos
mov
sahf
push
testb
cmp
lahf
xchg
mov
leave
shlb
ficomps
subb
mov
iret
arpl
add
popf
idiv
aad
out
cld
push
mov
sti
ds
test
jecxz
mov
clc
mov
rclb
add
jg
into
lret
aaa
call
idivb
cmc
lea
mov
fnstenv
fdivrs
in
push
xchg
dec
stos
imul
or
xlat
sub
mov
in
mov
add
push
cwtl
sbbl
mov
ss
xor
push
pop
mov
mov
sub
xor
dec
push
lcall
lock
adc
arpl
out
lods
adc
and
lcall
push
jbe
sbb
sub
ja
aam
int
aaa
sub
jb
std
mov
in
xchg
mov
dec
daa
bswap
movsb
daa
xor
ret
rcl
sahf
xchg
jno
jns
icebp
aad
dec
sahf
repz
pop
cmp
add
mov
or
add
jb
stos
sbb
subb
movsl
and
xor
mov
ja
repz
xchg
ss
test
pop
mov
mov
fwait
xchg
mov
xor
push
lcall
aas
pop
stc
cltd
adcl
fstpt
outsl
cmpsb
sbb
mov
out
movsb
jo
add
adc
and
xor
rolb
xor
mov
test
pusha
movsl
jo
add
adc
and
xor
rolb
xor
mov
adcl
add
adc
and
xor
rolb
xor
mov
test
pusha
movsl
jo
add
adc
xor
sar
mov
test
dec
mov
add
out
dec
adc
iret
hlt
ficompl
outsb
inc
pop
push
dec
es
push
push
push
push
out
imul
into
cmpsb
mov
xchg
cli
jbe
jbe
inc
pop
pop
dec
es
push
cs
pop
push
push
ljmp
fidivs
int3
mov
jo
xchg
jg
push
or
imul
cltd
add
mov
and
loopne
aam
pushf
push
push
cs
ficomps
push
addr16
mov
mov
add
jecxz
pop
ds
aas
es
push
pop
jmp
jmp
les
xchg
or
repz
jle
fcmovnb
es
lret
ficoms
push
out
out
bswap
bnd
mov
xchg
jno
xorl
fnstcw
rorl
jmp
push
dec
lea
dec
pop
lcall
sub
inc
cltd
cmpsb
dec
fisubrs
das
stc
clts
icebp
push
ds
push
or
mov
jne
sahf
jb
jle
push
cmp
roll
push
push
mov
out
push
pop
les
inc
push
jg
outsb
test
dec
dec
push
adc
sbb
push
pusha
mov
loopne
lret
lret
notl
sub
push
push
pop
je
jnp
mov
cmpsb
jmp
shll
loop
sbb
cmp
pop
sub
outsb
pop
bound
jb
subl
lods
out
fidivl
mov
jbe
inc
pop
push
dec
es
push
push
push
out
imul
into
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
es
push
push
push
out
fnstcw
jns
movsl
loop
daa
aam
test
push
lds
ss
stos
cmp
fstpl
dec
mov
dec
mov
mov
and
in
movsl
push
popf
inc
bound
jnp
cmp
push
scas
sbb
add
ds
push
jne
mov
inc
add
jmp
cmpsb
xor
xchg
inc
jb
pop
inc
sbb
cmpsb
mov
mov
push
les
and
lret
in
or
add
push
add
ds
data16
les
mov
fbstp
icebp
enter
xchg
test
jmp
push
mov
mov
push
sbb
mov
adc
adc
sahf
mov
jg
ret
std
cltd
hlt
lcall
and
jle
cmpsb
das
int
sbb
jmp
insb
mov
test
jo
cmpsb
data16
sub
addr16
push
stos
and
dec
mov
cld
dec
mov
jns
sbb
addb
jnp
dec
loop
add
xor
in
sub
cmpsb
imul
add
and
xlat
mov
movsl
dec
cmpsl
pop
jg
pop
jae
or
dec
mov
in
sbb
pop
adc
adc
popf
pushf
cmp
dec
push
es
cmpsl
push
pop
push
sub
ret
gs
cwtl
into
xchg
bound
add
adc
shrb
pushf
pushl
cli
scas
bound
das
stc
rclb
das
push
sub
sbbl
jae
scas
out
punpcklwd
push
adc
mov
pushf
adc
jge
cltd
movsb
jl
scas
or
jne
loop
push
aaa
adc
aam
pop
jecxz
or
or
aas
test
push
jno
fwait
clc
pop
inc
sub
inc
or
or
xchg
push
xchg
cmp
jnp
nop
push
jae
in
sqrtps
out
mov
mov
push
scas
imul
lock
lock
scas
mov
push
dec
jnp
jb
shrb
jle
add
pop
jg
jecxz
mov
or
add
jp
xchg
dec
js
ss
repnz
mov
inc
test
lahf
ss
loop
das
orb
outsl
push
lcall
out
and
movsl
or
pushf
je
movl
push
sbb
nop
push
and
dec
jo
iret
pop
cmp
pop
aam
add
dec
popl
xchg
inc
pushf
in
fnsave
aas
std
popf
in
fmul
sub
aas
test
jecxz
push
xor
push
or
push
adc
sbbl
sub
mov
loop
enter
adc
cmpsb
xchg
xchg
aad
lods
test
fildl
lret
mov
mov
xchg
and
cli
xor
lock
xchg
aaa
adc
sub
shrl
and
ss
xor
adcb
inc
push
xchg
push
clc
mov
jp
roll
jae
dec
mov
push
jb
adc
or
mov
mov
dec
mov
jle
pop
mov
es
mov
pop
push
mov
mov
xor
clc
mov
mov
push
fbstp
xchg
pop
jmp
jle
cld
mov
dec
mov
fidivs
pop
test
mov
leave
jl
or
mov
jmp
mov
push
repnz
cld
pop
mov
shrl
xor
lret
lcall
add
mov
addr16
pop
popf
iret
cli
outsb
ret
push
rorl
bound
push
stc
rol
and
negl
or
push
or
ret
sbb
xchg
sbb
mov
mov
popl
mov
sub
push
loop
in
cmp
or
xor
pop
inc
rcrl
sbb
dec
das
negb
or
mov
lret
pop
mov
mov
dec
std
scas
push
and
ljmp
xor
inc
cmc
stos
mov
push
mov
mov
inc
shll
stc
subl
mov
sbb
and
hlt
xchg
dec
insl
xor
enter
stos
test
xor
lock
es
sub
mov
inc
sub
prefetch
push
cltd
clc
cmpb
ja
adc
ja
pushf
mov
sbb
into
or
push
stc
dec
cmpsb
fistps
stos
mov
pop
dec
subb
int3
rcl
pop
xor
jmp
add
es
stc
out
leave
xchg
fistps
rclb
mov
mov
dec
pushf
mov
sbb
int
fdivr
cmc
or
pop
daa
icebp
inc
sub
cwtl
sbb
pop
scas
sbb
ljmp
jo
sbb
aas
add
dec
movsb
sbb
adc
xchg
dec
insl
movsb
mov
jo
pop
scas
jge
push
jns
orl
fidivl
je
push
cld
xchg
sbb
jle
daa
lahf
xchg
xor
js
inc
cmp
or
loope,pt
jmp
dec
inc
dec
push
sbb
lcall
inc
imul
mov
popa
cmpsl
push
xchg
es
xor
enter
mov
int3
push
cli
jb
lods
insb
pop
das
sub
clc
inc
insb
push
adc
insb
fisubl
lahf
cmp
iret
fsubs
xchg
loop
sbb
call
pushf
mov
std
stos
outsl
or
repnz
cmp
lea
pop
pop
rcll
xchg
dec
xchg
xor
cs
jo
and
jg
push
in
and
addb
outsl
sbb
int3
xchg
push
push
fs
sarb
aad
scas
icebp
in
ss
and
xchg
or
xchg
into
stos
sub
repz
arpl
mov
into
mov
pop
pop
add
fwait
cmc
rorl
mov
inc
inc
push
dec
inc
movq
daa
ret
daa
sub
das
pop
aas
mov
arpl
mov
or
pop
dec
out
add
in
and
icebp
sub
fcmove
out
sub
js
push
icebp
sub
inc
cmp
cltd
inc
mov
push
inc
push
js
lret
enter
push
mov
jnp
rcrl
inc
aam
cwtl
mov
sub
push
clc
dec
jo
pop
ficompl
imul
push
xchg
mov
cmc
push
xchg
cwtl
and
push
negb
xchg
bt
loopne
fstpl
movsl
ljmp
xlat
mov
stc
mov
jmp
push
sahf
stc
cltd
movsb
sub
js
pusha
add
or
aaa
lds
icebp
lret
push
out
and
insb
pop
push
shrl
push
int
jmp
xchg
jecxz
scas
mov
cmpsb
xlat
push
fmuls
jge
int3
ss
repnz
jle
ret
jle
sbb
fisttps
mov
mov
pop
dec
inc
mov
outsl
pushf
std
mov
sub
pop
jo
out
pop
mov
movsl
sub
mov
ss
out
out
and
pushf
xchg
push
xchg
loopne
call
jbe
in
sbb
dec
dec
mov
jae
jb
mov
inc
xchg
lods
jno
pop
dec
fwait
xor
mov
sub
dec
xlat
iret
repz
sbb
inc
jno
xor
jnp
mov
adc
es
or
stos
xchg
inc
lods
rcrb
jecxz
mov
mov
aas
movsl
pushf
jo
es
mov
enter
iret
aam
xchg
bound
notb
sbbb
cld
pop
push
imul
xlat
inc
icebp
adc
rorb
cltd
inc
movsl
and
aaa
rcrb
add
in
and
mov
xor
inc
aaa
push
inc
xor
loope
add
cmpsl
mov
jne
mov
push
jo
enter
mov
in
pusha
mov
andb
mov
sbb
jae
ret
jae
std
fldcw
adc
jbe
bound
mov
inc
lods
sahf
lock
subb
repnz
lods
es
inc
push
cmp
popf
jb
mov
insb
xor
bnd
adcb
dec
xorl
sub
xchg
xchg
push
lret
les
fsts
pop
jb
or
pop
sbb
out
imul
mov
inc
mov
mov
out
sbb
fiadds
negl
stos
pop
out
gs
sti
inc
cmp
and
mov
push
insb
leave
ss
rorb
pop
daa
inc
cmpsl
xlat
fsin
add
lock
inc
mov
adc
cmpsb
cmp
fldt
mov
andl
pop
les
scas
jne
cli
cmc
xchg
mov
out
push
popa
pop
mov
das
movsb
push
xchg
in
add
lahf
pop
fs
xchg
and
dec
mov
add
cwtl
je
out
sti
sti
lcall
nop
std
call
jnp
push
cli
add
subl
pushf
cmp
xchg
popa
divl
sbb
jb
push
into
pop
and
mov
ja
inc
pop
js
mov
lea
jl
mov
popa
je
adc
insb
sub
out
mov
sub
or
mov
and
jbe
icebp
xchg
or
xchg
je
das
jbe
iret
inc
enter
mov
ja
rcrl
fstl
jbe
ret
test
pop
out
shll
and
mov
jg
fsin
lahf
push
movsb
lock
or
and
pop
adc
cmp
or
mov
mov
or
subb
or
mov
mov
icebp
into
or
insl
cltd
loopne
unpcklps
inc
inc
test
xchg
sub
leave
les
sub
movl
inc
enter
xor
in
push
outsb
sub
ss
xor
and
add
sub
sub
mov
sbb
test
nop
cltd
pop
cmp
jnp
mov
cmp
sbb
sub
xor
shlb
add
inc
notl
mov
shrl
mov
mov
gs
adc
les
pop
dec
mov
push
xchg
std
imul
xchg
aam
addr16
pop
stos
push
mov
jnp
jg
mov
lret
insb
pop
shll
movsl
mov
inc
mov
mov
int3
out
fists
push
adcb
push
in
adc
push
jp
mov
je
lods
cld
les
push
jne
pop
ret
ret
or
scas
or
mov
jp
aam
mov
adc
outsb
stos
adcl
and
test
xor
sbb
xor
and
push
mov
and
inc
sbb
sub
jmp
cld
xor
imul
int3
inc
or
lock
pusha
in
jp
fildll
mov
lds
rolb
insl
sbbl
fstl
and
imul
add
adc
cmp
cmpsl
or
stos
loope
sbb
inc
pusha
xchg
or
mov
sbb
je
ret
mov
popa
push
test
cli
bound
imul
and
outsb
pop
cmpsb
add
movsl
add
les
repnz
mov
mov
out
adc
pop
clc
lret
adc
stc
push
leave
in
xlat
stos
mov
divps
jle
dec
push
ret
test
xor
or
out
enter
push
cmp
out
mov
add
repz
lahf
enter
shlb
or
pop
jg
pop
push
cmp
or
rcrb
dec
roll
out
test
notl
lods
adc
adc
jo
pop
mov
xor
jp
push
data16
test
xchg
dec
mov
sub
outsl
enter
js
adc
dec
enter
sbb
push
lea
ljmp
stc
ret
push
aad
lcall
push
rorl
mov
hlt
xchg
leave
stos
push
int3
enter
int3
iret
andb
ret
cmpsb
shll
clc
stos
scas
and
push
daa
jbe
aas
add
jp
sub
pushf
pop
arpl
mov
mov
xlat
ja
inc
cmc
aas
mov
adc
sub
js
or
push
cwtl
ret
inc
xchg
xchg
enter
sbb
out
repnz
or
xchg
jecxz
or
fsts
mov
aas
sbb
cmp
jne
and
mov
ret
mov
out
enter
popa
sbb
jne
mov
popa
cmp
in
add
push
imul
js
mov
out
rorb
aam
arpl
cmpsl
dec
ja
je
fbstp
gs
scas
and
pushf
andl
in
cld
pushw
sti
dec
adcb
out
xchg
fwait
dec
cmp
icebp
nop
push
fwait
dec
or
mov
cld
sub
pop
lret
fidivrs
sub
ret
cmp
les
jbe
dec
arpl
mov
movsb
push
popf
jge
push
add
pusha
daa
or
test
bswap
inc
inc
sahf
popf
and
pop
lea
lock
lahf
iret
pop
add
cli
shl
mov
xchg
test
pop
adc
xchg
ror
push
jp
mov
push
movb
pop
into
push
sbb
mov
mov
inc
dec
loop
cwtl
gs
or
je
sbb
sahf
mov
push
fcmovbe
cmp
jge
js
xchg
sub
mov
xchg
sbb
rcl
out
or
ss
cmp
inc
or
std
mov
xchg
pushf
add
fadd
scas
incb
neg
xlat
pop
and
xchg
clc
sub
test
aam
sub
push
inc
ret
fmuls
inc
mov
dec
mov
mov
and
loope
lret
cmp
xchg
inc
dec
outsl
inc
sub
test
sub
sub
cld
dec
decb
out
cmpsb
xor
lret
xor
mov
xchg
and
in
leave
enter
jne
fimuls
xor
jno
stos
scas
scas
xchg
or
fsts
arpl
lods
fwait
sti
bound
cmpsb
je
pop
shlb
mov
icebp
inc
int
add
shl
jp
mov
sub
outsl
and
push
out
sbb
adc
sub
pop
pop
xor
mov
ljmp
and
mov
xor
xchg
icebp
xchg
pusha
or
pop
mov
inc
in
jne
stc
pop
mov
out
or
jmp
jnp
push
movsl
xchg
lea
xchg
adc
out
add
add
bound
jae
notl
leave
jb
sbb
js
lods
jb
pop
pop
sbb
lret
mov
mov
test
jl
inc
cwtl
test
imul
add
inc
icebp
out
mov
sar
test
mov
sahf
loopne
mov
jbe
jne
sbb
push
and
and
push
stc
dec
outsl
cld
fs
es
xchg
push
and
jl
out
test
push
cld
cltd
and
and
pop
repz
incb
jnp
js
popf
out
xchg
in
adc
out
movsb
mov
or
xor
in
push
lods
pop
dec
mov
pop
mov
pop
test
into
push
dec
push
lcall
cmp
push
sub
mov
and
sbbb
aas
mov
sub
add
sub
jae
mov
adc
stos
sbb
dec
arpl
push
xor
xchg
or
xor
lods
jmp
jg
mov
mov
cmp
adc
jns
xchg
push
jl
add
movsl
mov
xchg
shrl
dec
sub
aas
lods
sub
mov
imulb
mov
push
add
out
daa
repnz
mov
lds
aas
movsl
jbe
mov
pusha
dec
inc
push
mov
daa
mov
inc
jl
mov
xchg
add
popl
repnz
mov
insl
adc
lcall
inc
dec
sahf
sbb
mov
and
sti
shlb
in
cltd
aaa
mov
mov
mov
stos
and
sbb
pushf
daa
sbb
aad
jb
sbb
inc
stos
sbbl
pop
bound
fisttpl
add
lods
push
mov
inc
adc
xor
aad
sbb
test
sar
add
icebp
outsb
movsl
jmp
pop
cmp
cmc
xlat
cltd
dec
push
xor
sbb
pop
lods
out
xchg
lds
sbb
jb
lds
mov
xchg
inc
mov
pop
and
xchg
push
lcall
mov
xor
dec
mov
pop
adc
pop
jmp
cmpl
xchg
sbb
scas
js
cwtl
or
aas
popf
cmpl
data16
in
jl
pop
fsubs
push
pop
cli
sti
push
insb
divb
cmp
push
cltd
cmc
in
andl
mov
pop
inc
jg
push
aad
cmp
cli
xchg
mov
dec
shlb
sub
shrl
pop
stos
sbb
mov
cmp
clc
jns
inc
mov
lods
into
dec
mov
notl
outsl
clc
push
arpl
sti
rorb
pop
dec
adc
pop
cmp
inc
test
add
jns
pop
push
cld
jb
dec
xchg
outsl
pop
xchg
xchg
sub
jno
push
mov
sub
cmp
mov
pop
in
xor
xchg
xor
es
das
xor
rorl
mov
mov
inc
mov
cwtl
jnp
popf
jmp
jg
ja
mov
repnz
sub
repnz
rcr
push
sub
add
pop
inc
cmp
push
mov
mov
ja
adc
sbb
lods
inc
dec
icebp
mov
jbe
mov
fsts
es
pop
das
jns
xchg
std
mov
fimull
mov
in
rcll
and
ds
xchg
adc
rorl
fisubrs
push
xor
mov
shl
fnstsw
cs
jecxz
add
mov
outsl
sahf
lods
jnp
ss
das
test
ljmp
or
jecxz
enter
inc
rcrl
ret
mov
pop
jle
mov
rcr
lret
rol
and
add
push
in
in
push
jle
pop
pushf
sahf
jne
inc
xor
and
cltd
repnz
sbb
pop
mov
dec
int
sbb
insb
and
sub
xchg
mov
push
mov
std
mov
lcall
popa
scas
popf
icebp
jae
mov
lods
leave
xchg
mov
and
inc
lret
xchg
sbb
cmp
pop
xor
sub
xor
inc
mov
mov
mov
dec
adc
cmpsl
loopne
inc
clc
loop
push
sub
mov
pop
out
pop
inc
push
int3
call
les
aas
cmp
inc
push
add
sbb
jecxz
lods
imulb
push
lock
mov
or
pop
arpl
xor
std
xor
add
cli
cmpsl
imul
adc
cli
cld
cs
jecxz
dec
mov
sub
in
mov
icebp
mov
clc
mov
test
test
or
jmp
ficomps
arpl
addr16
test
xchg
sub
jp
inc
ret
push
cmp
xor
and
pop
cmp
adc
enter
xchg
mov
js
sub
ljmp
repnz
cmc
jo
adc
and
mov
out
mov
or
nop
es
pop
mov
sub
stos
es
fidivl
mov
sub
repz
imul
adc
mull
adc
sbb
inc
cwtl
ss
cld
cmp
ret
imul
lahf
addl
fcomps
push
sub
mov
lret
or
nop
xor
dec
clc
mov
cwtl
adc
xor
jg
add
xor
arpl
or
int
fneni(8087
lock
adc
sbbl
push
mov
mov
inc
mov
sbb
mov
jle
stos
dec
loop
add
or
movsb
imul
out
shrl
xchg
sub
push
xor
mov
ljmp
inc
jp
loopne
cmpsb
shll
mov
sahf
pop
imul
xor
lcall
xchg
out
out
push
fwait
aad
cmp
fdivr
test
xlat
cmp
adc
xchg
inc
lds
std
out
jmp
xchg
inc
mov
jae
rcll
clc
sub
xchg
mov
dec
push
into
pop
mov
js
sbb
mov
es
dec
mov
add
or
and
clc
mov
jl
adc
xchg
inc
jg
je
or
das
jg
mov
push
pop
inc
dec
xchg
and
inc
jmp
mov
fnstenv
loopne
cld
std
adc
icebp
add
inc
notb
push
xor
andl
outsl
repz
enter
ss
das
les
aas
rcrl
push
cwtl
daa
mov
fwait
xchg
fisubrs
dec
ss
das
jmp
sub
pop
xlat
mov
inc
mov
mov
pusha
bound
jecxz
adc
mov
push
fcomps
push
inc
or
and
gs
xchg
outsl
out
and
lds
pop
leave
mov
xchg
mov
shlb
scas
and
call
adc
std
push
xchg
ja
insb
sbb
rcrl
jl
fimuls
sbb
movsb
fidivl
stos
add
cmp
and
js
fisttps
scas
test
cmp
dec
jecxz
cmp
and
loop
mov
cld
add
add
mov
push
push
out
mov
test
add
xchg
loope
xchg
in
cmpsl
cli
js
sbb
and
out
mov
into
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
es
push
push
push
out
imul
into
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
es
push
push
push
out
mulb
cmpsb
mov
xchg
mov
jbe
inc
pop
push
dec
es
cs
ds
out
hlt
out
iret
movsb
mov
push
mov
pop
push
cmp
mov
icebp
mov
push
adc
and
xor
or
jo
mov
xchg
pop
mov
mov
pop
loopne
lock
iret
xor
pusha
popl
mov
jno
dec
mov
mov
rcrb
loopne
lock
cmp
sub
js
push
addb
cmp
lds
jae
push
dec
iret
pusha
fwait
inc
mov
xchg
fwait
orl
movsb
les
pop
pop
ds
add
pusha
out
xor
mov
or
mov
mov
orb
pushf
jnp
adc
aaa
lret
fidivrs
push
mov
aas
adcb
shlb
in
loopne
mov
pop
xchg
out
mov
inc
push
inc
sahf
adc
cmc
push
cmp
dec
pop
mov
mov
sub
loopne
test
out
and
cmove
sub
fldt
sbb
pop
dec
or
ret
dec
mov
jne
out
fs
push
xor
push
cmc
sbb
and
pop
dec
dec
mov
loop
test
out
add
cmp
push
lahf
pusha
aaa
imul
fdivs
enter
icebp
lea
cltd
bound
inc
fidivl
mov
adc
shld
push
movsl
inc
shrb
dec
pushf
ljmp
jns
push
add
inc
into
push
repz
inc
inc
hlt
cs
cmp
and
push
dec
test
inc
mov
jae
push
lahf
pusha
jo
subb
mov
das
rcrb
loopne
lock
out
adc
and
xor
pusha
jo
subb
mov
das
rcrb
loopne
lock
sub
ja
nop
xor
lret
ror
scas
jmp
cmp
fisubrs
nop
out
xor
stos
pop
mov
xchg
cmp
dec
loope
dec
stos
popa
pop
jbe
pop
fidivl
call
nop
fnsave
cmp
in
test
jmp
call
mov
push
and
arpl
sbb
outsl
test
cli
in
push
sahf
test
sbb
add
cltd
lock
insl
push
lret
cli
out
cmp
outsb
push
sub
iret
mov
mov
pop
sbb
xor
xchg
loopne
clc
daa
lods
cmp
lds
or
sbb
inc
lods
jno
vmptrst
adc
xchg
jmp
pushf
xchg
push
dec
mov
nop
mov
mov
mov
lods
icebp
clc
ja
or
stos
jae
xchg
xor
push
imull
or
push
xchg
jno
mov
fnstenv
rcll
loope
test
lcall
insb
cmc
fs
movsl
sub
mov
repnz
and
xchg
sub
test
dec
and
cmp
mov
xor
icebp
push
pop
ror
cmp
dec
cltd
mov
imul
dec
scas
lahf
cmp
sbb
rorl
xor
nop
vxorpd
fwait
jb
sbb
mov
or
lea
das
cmp
inc
out
jg
pop
pop
pop
inc
out
pop
inc
cmp
jno
push
mov
ret
pop
push
push
hlt
mov
lea
pop
lret
cmp
cmp
jecxz
dec
mov
sub
pop
fisubl
pop
sub
repnz
lods
and
sbb
push
mov
dec
jnp
fs
out
insl
mov
sub
loope
and
xor
cmp
dec
jbe
fldt
adc
add
jno
cmp
bound
jg
add
repnz
jne
repnz
gs
mov
dec
call
ds
and
clc
shrb
lahf
iret
pusha
jo
rolb
jg,pt
call
sbb
in
mov
mul
adc
test
push
mov
and
lret
std
std
xchg
xchg
fsubrs
jecxz
xor
jmp
out
push
movsl
xor
mov
push
push
daa
fimull
fdivrl
and
pop
js
les
in
adc
lds
ret
xor
xorl
in
and
push
daa
aad
jne
pushf
jecxz
mov
nop
sub
leave
enter
popa
jmp
cs
sbb
mov
mov
push
dec
pop
jmp
dec
sti
pop
pop
and
movsb
outsl
cmp
fwait
xlat
jl
out
push
mov
push
cmp
jno
cmpsl
js
pop
mov
repz
or
or
or
add
xchg
sub
out
add
sub
cmp
add
xorb
push
ljmp
mov
ret
bound
test
fimull
mov
repnz
out
out
add
and
lahf
mov
xor
repnz
outsl
xor
clc
dec
adc
arpl
lret
ret
pop
push
mov
mov
fwait
ss
jge
sbbl
mov
or
and
add
cmp
bound
shr
cli
inc
adc
and
jbe
pop
or
scas
mov
push
pushf
cmp
push
leave
jo
mov
jecxz
jae
addb
or
push
add
inc
inc
mov
cmpsl
cmpsb
pop
mov
repz
mov
sbb
out
sbb
lock
popa
cmpb
call
push
int
or
add
cli
repz
filds
cmp
xchg
aad
jmp
add
adc
adc
aaa
inc
or
mov
mov
xor
stos
xor
xor
cmp
or
bound
cmp
aad
mov
fistpll
and
test
sahf
pop
aad
sbb
xor
push
adc
cmp
das
cmp
imul
sub
jg
pop
sbb
dec
mov
mov
sbb
cli
xchg
xchg
mov
dec
in
imul
int3
dec
mov
add
cmp
cmc
les
in
or
mov
mov
sub
cmp
shl
iret
les
scas
push
movl
aad
popf
jmp
inc
in
lea
lock
sbb
xchg
out
andl
dec
mov
jno
sub
fcmovnu
sub
xchg
sbb
fwait
mov
pop
pop
ss
add
mov
in
mov
xchg
jno
pop
loop
fwait
pop
popf
xchg
or
sbb
ret
sub
jnp
jmp
and
push
mov
testl
lds
mov
aam
lock
adcb
adc
fmull
jp
nop
ret
in
sub
cltd
and
adc
xor
push
cmp
xchg
lret
icebp
cwtl
fldl
mov
leave
xchg
push
pop
and
dec
jo
cmpsb
scas
xchg
dec
sbb
xor
mov
mov
mov
jge
jmpw
xlat
cmp
es
movsb
daa
fiaddl
stos
push
mov
imul
cs
fdivp
cmp
xchg
jge
push
aam
mov
inc
mov
or
scas
adc
mov
cli
insb
dec
les
xchg
gs
leave
pop
pop
fcoms
jns
pushl
sub
call
mov
arpl
jnp
cli
push
ja
jbe
and
sub
cmp
cwtl
cld
stos
stc
mov
inc
add
cmp
ja
pop
mov
rol
movsl
xor
push
inc
shrw
dec
add
mov
mov
push
dec
jae
inc
jb
cld
add
pop
outsb
bt
lock
nop
mov
push
push
jl
imul
ljmp
ret
adc
sub
cmpsl
pop
mov
add
sahf
fisubl
fildl
insb
outsl
insb
xchg
ljmp
jle
mov
fwait
push
lock
pop
faddl
dec
pop
or
push
repnz
adc
mov
mov
xchg
push
insb
scas
pop
fs
rcr
xchg
jp
sub
sbb
int
cmovno
jmp
pop
ja
sbb
stc
fdivrs
movsb
and
add
sub
lahf
cli
jo
inc
montmul
cmpsb
addb
adc
fadds
enter
ret
inc
sub
dec
insl
imul
dec
or
fsubrl
loop
xchg
mov
jmp
scas
mov
jge
cmpsb
xchg
mov
das
xchg
aaa
insl
dec
mov
rcll
mov
jmp
int3
xchg
pop
cmp
test
ds
jno
or
mov
sbb
fdivl
pusha
pop
xlat
movsb
mov
and
es
dec
jnp
sub
dec
xor
shll
fxch
xorb
pushf
sub
into
jmp
scas
movsb
test
leave
mov
mov
add
and
inc
adc
sub
xor
dec
xor
push
leave
inc
out
jo
popf
add
sub
es
or
iret
xchg
mov
nop
xchg
push
dec
in
xchg
mov
ret
jb
push
adc
mov
sahf
popa
xchg
jmp
mov
test
leave
ror
add
sub
lahf
arpl
mov
aas
and
dec
js
hlt
in
pop
and
jmp
mov
mov
lcall
cmp
test
int
in
pop
cld
xchg
mov
icebp
aam
mov
mov
cli
pop
aam
and
jno
sti
pop
mov
es
add
sub
mov
mov
js
jno
xchg
out
adc
push
adc
in
xor
rcll
rorl
push
es
add
cmpsb
bound
dec
pusha
sub
div
dec
lea
decl
dec
fs
xchg
cld
add
les
mov
ljmp
cmc
push
jmp
or
mov
adc
into
pop
paddb
gs
mov
pop
cwtl
push
addr16
mov
cltd
inc
sti
inc
or
xor
scas
and
sbb
push
adc
lahf
mov
aam
add
push
mov
xor
test
sub
dec
sbb
icebp
pop
pop
maxps
lcall
data16
shlb
pop
mov
xor
mov
mov
sbb
std
aas
mov
xlat
leave
sub
push
aaa
int3
std
mov
add
push
cs
cmp
aas
inc
ss
xlat
jbe
pop
sub
mov
push
sub
adc
dec
pusha
cmp
icebp
test
mov
cwtl
mov
xor
test
and
aaa
sbb
mov
or
je
xor
xchg
mov
push
xchg
in
dec
xchg
mov
xor
fs
cmp
lahf
or
sub
push
push
pop
cmpsb
inc
jae
push
nop
add
xchg
add
je
cs
xchg
lahf
push
sub
inc
daa
pusha
sub
dec
adc
pusha
insl
jge
cs
push
insb
daa
shl
imul
pop
test
lahf
mov
sahf
xlat
add
jnp
pop
push
jge
xchg
ds
sub
fsubrs
dec
and
mov
cmc
sub
in
fwait
lret
pop
sbb
pop
jecxz
movb
ja
add
aas
mov
mov
mov
pop
test
mov
sub
or
and
pop
xchg
fadd
jl
faddl
rcl
aaa
push
jno
mov
mov
sbb
mov
and
adc
scas
inc
in
pslld
or
js
add
push
data16
adc
xor
push
lea
loop
fsubs
mov
mov
imul
dec
lret
fadd
push
dec
dec
inc
add
iret
fadd
xor
sub
in
sub
push
adc
jnp
and
jmp
pop
fidivrl
mov
jecxz
dec
lods
inc
push
jbe
es
out
dec
pop
xor
insl
loopne
mov
inc
add
inc
out
dec
mov
out
clc
std
xchg
hlt
scas
dec
cli
out
into
and
mov
sub
pop
les
jge
add
xor
mov
adc
dec
addr16
ret
std
xor
movsl
test
xchg
insb
pop
into
daa
sarb
fwait
test
push
or
and
lods
ret
leave
testb
lods
xor
lcall
scas
add
xchg
leave
push
cs
lcall
daa
pop
jle
mulb
mov
push
dec
insb
pop
fsubrp
jmp
repnz
outsl
movsb
jo
xor
mov
ljmp
mov
loop
xchg
and
xchg
mov
inc
std
push
std
pop
dec
clc
clc
fldl
in
cmp
jnp
xchg
inc
jbe
sbb
bound
mov
sbb
sbb
and
les
rolb
mov
xchg
add
insl
adc
shr
bound
cld
mov
divl
mov
dec
test
pushf
jae
jmp
cmp
insb
cli
negl
or
lret
cmp
cmpsb
and
push
mov
imul
out
mov
push
mov
lock
push
mov
sbb
sub
stos
pop
ljmp
and
cmp
jns
dec
xor
pop
jb
fldt
sarb
scas
testb
push
fisubs
lret
xlat
inc
push
adc
das
mov
jp
sub
frstor
sbb
je
jl
ret
xchg
fstps
sub
adc
cmp
movsl
pop
pop
jge
repnz
pop
inc
jne
dec
ret
dec
mov
in
xor
xor
lock
in
jne
movsb
add
add
ficomps
clc
jge
inc
ds
js
jno
jo
xchg
pop
clc
mov
lods
out
es
jnp
jl
adc
add
jg
outsb
pop
roll
test
push
pop
cmc
cmp
ret
loop
in
les
icebp
xchg
out
fcmovnbe
lock
mov
push
push
add
jns
add
rorl
push
test
shlb
sub
xchg
pop
xchg
sbb
or
insb
xor
ret
int
movsl
dec
adc
adc
mov
xchg
add
and
fwait
pop
outsl
scas
dec
stos
call
xchg
fstpl
stos
shr
pop
mov
adc
xchg
mov
pop
xchg
out
jecxz
xchg
and
cmp
push
aad
mov
mov
or
js
sti
mov
and
dec
or
stos
add
nop
nop
clc
loop
push
movl
dec
xchg
outsb
mov
cmp
or
out
adc
lahf
push
and
adc
inc
in
push
sbb
xor
cmpsl
sar
cs
sub
xchg
and
sti
loop
daa
stc
sbb
lcall
sub
dec
addb
data16
sbb
jbe
push
mov
arpl
xlat
jg
or
add
jmp
fiadds
inc
bound
test
push
mov
push
mov
call
mov
lea
cmpl
shrl
test
lds
jmp
push
out
insl
inc
jl
jb
mov
mov
int3
xchg
sub
pop
int
mulb
mov
incb
xchg
adc
add
pop
notb
imulb
cmp
insl
iret
sbb
mov
sbb
or
bound
roll
pop
mov
lock
sub
bnd
cmp
movsl
mov
fwait
jb
ljmp
pop
push
loopne
je
ds
lcall
cmp
push
jp
adc
arpl
std
lods
mov
popf
mov
loopne
icebp
ret
push
and
std
insl
sub
pop
xor
loop
out
lahf
pop
and
pop
inc
or
popa
jbe
fdivrl
cltd
xchg
or
cmp
insl
scas
or
int
jl
xchg
mov
pushf
push
je
and
pop
aam
mov
adc
mov
push
mov
or
inc
in
cmp
or
add
nop
jmp
adc
scas
pop
mov
es
mov
out
loopne
insl
or
push
insb
mov
or
in
add
mov
cwtl
iret
ficompl
sub
dec
clc
push
pop
insb
xchg
js
pop
lahf
mov
jns
cmp
lret
sub
pop
inc
cwtl
les
jbe
sbb
in
rcrl
jmp
dec
insb
and
jns
xlat
clc
jg
out
int3
adc
sbb
lcall
or
cld
xor
sarb
xor
push
fcomps
out
and
pop
add
cmpsl
test
adc
leave
lcall
push
pop
mov
or
push
fcmovu
mov
scas
dec
jecxz
stos
ds
pop
mov
xchg
xchg
jge
adcb
jl
pop
fisttps
inc
cs
cltd
xchg
jae
lret
dec
mov
pusha
and
xor
cmpsb
gs
jle
fmulp
and
mov
insb
mov
pop
xorl
loop
int
test
aaa
aas
add
mov
add
into
jmp
unpcklps
mov
adc
jecxz
jl
inc
add
cmc
or
icebp
mov
test
imull
xor
daa
test
ja
push
xor
add
loopne
pop
jmp
jno
lods
push
or
lods
mov
in
cmp
mov
adc
cmp
dec
xchg
out
cmp
cltd
aas
int
out
int
les
mov
jnp
add
in
arpl
push
das
pop
push
in
daa
xchg
mov
cmp
jle
ret
inc
lea
fdiv
jp
fcoms
imul
sbbl
mov
and
mov
inc
cli
pop
cmc
push
aaa
adc
pop
push
sti
add
ljmp
outsl
cmpsb
push
and
inc
jmp
mov
pop
mov
push
lcall
in
jne
pop
or
cmp
sbb
xchg
pop
mov
popf
or
das
stc
ss
mov
mov
cli
and
jno
mov
push
test
ret
lahf
dec
cmp
mov
jne
add
push
iret
sbb
in
mov
jb
lea
ficompl
dec
popf
cltd
or
jae
cwtl
dec
xor
pop
mov
jle
cmp
sti
adc
mov
and
lds
and
xlat
jecxz
int3
push
mov
sbb
xchg
xchg
xchg
inc
adc
pop
sub
push
movsb
cmpl
mov
inc
adcl
xor
push
and
faddl
in
inc
addr16
jl
rclb
sahf
or
mov
in
inc
mov
pop
push
cmp
or
push
fldt
dec
fwait
xchg
xor
cmpb
sbb
inc
dec
ja
je
into
repz
dec
out
inc
inc
loopne
add
mov
or
xor
mov
lret
popf
xchg
mov
push
imul
and
ret
sbb
jge
test
cs
or
lock
xchg
mov
dec
stos
sbb
lcall
mov
bound
icebp
out
dec
data16
jmp
test
jg
inc
rclb
adc
pop
shrb
test
or
insl
icebp
cmp
mov
push
dec
inc
add
add
pop
rorl
ljmp
aam
cmp
imul
repnz
out
xchg
inc
dec
pop
or
pushf
rorl
in
pop
out
and
jmp
sub
xor
cmp
repz
or
add
xchg
cmpsb
subl
stc
jbe
xchg
pop
sub
sub
pop
leave
mov
inc
pusha
shlb
xor
fcomi
pushf
out
loop
loope
mov
lods
loope
adc
fmuls
das
aam
and
mov
sbb
rorb
shll
adc
jo
shrb
sbb
fs
enter
cmp
push
sbb
xchg
lret
bound
stos
mulb
aas
xchg
mov
hlt
fwait
outsl
xor
pop
lahf
lea
cmc
imul
enter
loope
ficoms
cmpsb
loope
daa
adc
cmp
icebp
out
sbb
dec
shrb
fstps
dec
call
enter
ljmp
dec
nop
mov
clc
push
incl
inc
push
loope
cs
sub
xchg
pusha
lods
popf
push
jnp
adcb
xchg
jmp
lods
addb
inc
arpl
cmp
adc
jns
inc
out
mov
mov
push
dec
cmp
stos
ret
pop
jns
xorl
ret
scas
daa
call
out
mov
push
push
daa
faddp
dec
pop
shrb
xor
aad
frstor
es
mov
cli
cmpsl
scas
out
cmp
mov
cwtl
jbe
daa
sub
inc
mov
das
lret
rcll
sub
insl
das
std
repz
mov
xor
jl
mov
adc
adc
adc
sarb
pop
sti
xor
mov
rcr
xchg
stos
arpl
ds
mov
cs
push
aaa
pop
adc
scas
js
clc
cmp
jle
inc
adc
pop
mov
sahf
mov
mov
fdivrl
inc
pop
jmp
insl
leave
loop
sub
or
aad
inc
fmull
pop
iret
aas
cmc
sbb
push
and
pmaxsw
mov
and
xchg
bnd
shrb
and
sbb
mov
adc
xor
jbe
mov
testb
or
add
mov
mov
divb
pop
fldcw
imul
popa
sub
add
pop
xchg
or
cmp
push
lea
cmp
jmp
fimuls
xchg
mov
cmpl
sub
add
jge
leave
pop
aad
lods
or
adc
ficomps
inc
cmp
xchg
int3
fucomi
dec
outsb
mov
loope
dec
and
loopne
mov
std
fsubrs
lods
fldl
out
std
sbb
int
xor
lods
mov
xchg
in
fadds
mov
xchg
rorb
cmp
jecxz
jnp
in
repz
roll
mov
and
cmp
les
rol
ljmp
sub
int3
push
fistps
cmpsb
pop
xchg
push
xlat
testl
inc
jo
fadds
push
xor
mov
loop
in
push
xchg
xchg
cmpsl
sub
and
jns
fs
add
jns
aas
stos
mov
mov
inc
mov
pop
movsb
mov
negb
ficompl
or
mov
jns
cltd
into
dec
notb
cs
icebp
push
xchg
dec
push
add
push
cmp
pop
dec
xchg
inc
jg
dec
in
pop
xchg
sub
pop
mov
in
rorb
add
or
push
loope
lods
notb
dec
movsb
or
push
inc
sub
lods
add
mull
xchg
subl
mov
sbb
cld
lahf
imul
aad
mov
mov
pop
lea
dec
fcmovnu
inc
dec
nop
aad
jae
les
push
cltd
je
dec
mov
cmp
ds
xor
pusha
jo
subb
mov
das
rcrb
loopne
lock
out
adc
and
xor
pusha
jo
subb
mov
das
rcrb
loopne
lock
in
adc
and
xor
pusha
mov
subb
mov
rcrb
in
hlt
out
ret
adc
and
xor
pusha
cmpxchg
nop
cmp
mov
cmpsl
scas
loopne
lock
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
and
jle
outsb
in
pop
mov
and
insl
out
outsl
sahf
sbb
scas
sub
jle
outsb
in
push
popf
push
lea
mov
into
dec
pop
out
insl
sahf
jle
fnstsw
les
jle
outsb
hlt
push
test
xchg
movsl
cs
mov
mov
pop
std
arpl
imul
sub
das
movsb
jle
pop
adc
push
aad
movsl
insb
push
in
hlt
jns
cmp
testb
mov
mov
xorl
jae
aaa
and
add
insl
leave
cwtl
mov
cmp
and
adc
daa
mov
fmull
pusha
fcomp
out
shrl
or
scas
sub
mov
mov
cs
cs
adc
inc
mov
inc
or
add
jno
in
movsl
lods
dec
jae
gs
into
jne
addb
shlb
mov
inc
std
xchg
es
xchg
and
push
fnstsw
ret
popf
fisttpll
jle
outsb
negl
popf
push
lea
movsb
cs
inc
into
push
fs
je
add
scas
dec
cmp
sub
jnp
popa
jecxz
shrl
xor
sbb
pop
fstpt
cmp
sbb
out
inc
mov
lods
and
sub
or
imul
dec
cmp
cwtl
pop
icebp
push
lea
mov
into
dec
jge
insl
sahf
sbb
scas
sub
jle
outsb
in
push
popf
push
lea
mov
into
dec
jge
insl
sahf
sbb
scas
sub
jecxz
adc
into
mov
mov
insl
lret
sbb
popa
mov
mov
rclb
lock
cmpsb
insb
fdivrl
fbstp
jmp
or
push
jne
loopne
sub
mov
flds
inc
lahf
and
movsb
sti
push
ja
je
sub
jmp
sub
pusha
xchg
cmpsb
or
pop
dec
fdivrl
dec
cs
sbb
mov
icebp
adc
jbe
add
hlt
subb
out
inc
sahf
sbb
ret
out
cmp
mov
sbb
push
add
pop
fldl
aas
outsb
in
or
nop
lods
lds
pop
outsb
cmp
xchg
sbb
pushf
repnz
insl
xchg
inc
inc
fwait
mov
call
shr
pop
arpl
ucomiss
pusha
and
pop
arpl
pop
push
jnp
pop
mov
mov
movsl
call
addr16
mov
mov
popf
inc
xlat
lret
out
adc
jecxz
rcrl
into
gs
das
dec
pushf
and
pop
inc
and
mov
ficompl
push
xchg
jl
int3
leave
inc
negl
xor
bnd
sti
fmulp
loope
mov
loop
mov
ljmp
ret
insb
sbb
push
lods
cmp
shrb
mov
mov
lcall
cwtl
cmp
test
test
pop
and
aas
mov
outsb
cmpsb
shlb
push
fs
xor
inc
fistpll
arpl
xchg
or
hlt
insb
jmp
mov
push
xor
xchg
or
push
mov
and
xchg
pop
pushf
cmc
ret
pop
aad
jl
dec
inc
and
repz
mov
es
sahf
popf
rolb
imulb
je
add
jnp
aaa
ss
loope
mov
mov
mov
push
push
jo
xchg
push
sbb
stos
mov
movsb
sub
scas
jg
ljmp
fnstenv
mov
xchg
jecxz
push
lret
mov
dec
fdivs
sahf
xchg
jge
mov
jp
inc
into
out
fisttpl
push
dec
loopne
and
mull
lret
push
out
ffree
nop
nop
icebp
and
repz
addr16
pop
xchg
dec
mov
lods
test
das
jno
add
adc
int
test
ss
test
adc
adc
scas
out
pop
jb
ljmp
pop
adc
ret
imul
js
das
xchg
sbb
jl
js
xchg
push
or
jne
movsb
int
das
inc
push
ljmp
enter
and
cmp
int3
dec
add
mov
orl
ret
rclb
push
ret
loope
xchg
das
push
mov
mov
mov
xchg
vpsubb
outsb
int3
ds
je
cmp
jns
out
mov
cmp
jge
xchg
dec
lock
or
xorl
push
ds
dec
inc
fucom
add
inc
in
cs
outsb
std
fidivrs
or
mov
out
xor
inc
xor
in
xchg
and
pushf
popf
xchg
ljmp
adc
dec
je
xor
adc
push
sbb
dec
jae
jmp
call
mov
mov
leave
loop
je
xor
adc
rolb
ja
clc
ds
les
lahf
lods
in
adc
scas
stc
outsb
and
adc
sbb
cltd
outsl
xor
mov
lea
mov
ret
fs
adc
mov
mov
jp
leave
pop
call
fdivrs
sti
jns
pop
and
movsl
pop
gs
loopne
adc
jns
sbb
in
movsl
cwtl
leave
and
and
sub
addr16
sub
mov
dec
mov
xchg
xchg
dec
xor
repz
sbb
add
mov
icebp
add
fldenv
in
addl
inc
add
test
add
data16
dec
mov
sbb
and
jl
mov
int
push
xor
into
cwtl
mov
mov
std
shll
dec
pop
sbb
push
sub
lock
sbb
in
mov
mov
push
lods
and
lea
or
es
mov
je
stc
pop
test
test
push
pop
das
test
jno
fdivrl
aad
pop
cmp
jbe
or
inc
lods
outsb
pop
push
scas
popf
test
scas
cwtl
not
cli
shrl
out
rcrb
repz
loopne
mov
mov
addl
mov
dec
daa
dec
cltd
mov
pop
and
jae
pop
jae
push
xor
push
je
push
and
jg
cmpsl
popa
negb
lods
cld
lret
mov
lea
xchg
stc
mov
sub
jne
outsl
pop
sub
or
leave
or
test
jp
lahf
xlat
xor
pop
jnp
push
and
cltd
dec
dec
out
push
xor
fwait
ret
mov
popa
stos
aaa
push
lret
pop
into
dec
adc
jmp
das
ret
mov
sbb
mov
lret
int3
or
and
and
cltd
cmp
js
push
clc
and
mov
jle
mov
push
shll
int
cmpl
cwtl
js
lods
enter
lahf
dec
cmpsl
das
cld
leave
or
jne
xlat
popf
jbe
les
flds
sub
jo
gs
jmp
je
pop
inc
xchg
add
inc
fcmovu
mov
pop
xor
mov
push
addr16
pop
pop
shrl
mov
inc
or
inc
inc
sar
inc
ret
pusha
int3
mov
fsts
rcrl
repnz
repnz
pop
fsubl
mov
ss
adc
in
test
xchg
ja
jmp
es
or
loopne
lahf
rcl
in
mov
inc
hlt
outsb
lret
mov
sub
fldt
or
loopne
dec
sub
push
mov
pop
adc
cmp
push
mov
or
repnz
push
mov
mov
pop
cmpsb
or
sbb
int3
pop
fsub
jg
mov
pop
setge
mov
and
sbb
stc
sbb
fiaddl
adc
or
addr16
flds
push
sti
setno
xchg
xchg
inc
test
sysexit
xchg
rorb
rclb
lret
je
aas
push
jno
cmp
cmc
rcll
orl
and
sub
mov
ss
stos
scas
cmp
stc
cwtl
loop
stos
pop
mov
mov
fdiv
mov
int3
int
pop
fdivr
into
sbb
mov
rcrl
scas
inc
push
ret
cli
cmc
dec
or
jno
out
xlat
stos
cld
lea
fcmovbe
das
fnstenv
loop
fstl
mov
mov
mov
push
inc
pop
in
orb
inc
push
jl
cmp
lcall
xor
lods
add
loop
loop
icebp
popa
cwtl
inc
pushf
jg
imul
xor
lea
fistl
repz
mov
and
nop
fmuls
das
adc
iret
pushf
add
rsm
icebp
jl
mov
je
std
dec
adc
xchg
lods
enter
inc
sub
subb
adc
mov
cmp
fsubs
mov
notb
sahf
inc
clc
mov
rcrl
cmp
insl
or
pop
jno
mov
jbe
mov
push
dec
popf
xchg
mov
scas
push
mov
bound
cmc
bound
xor
or
out
aaa
cld
in
insl
lea
or
lcall
cmp
jns
loopne
iret
mov
sbb
pusha
sbb
enter
cmpsl
lock
ja
fucom
rcrb
jne
inc
fwait
ret
lret
xor
mov
xor
adc
lcall
pop
push
push
leave
hlt
pop
adc
inc
cmp
fcomi
outsl
loopne
add
adc
xchg
repz
mov
dec
adc
imul
in
xchg
adc
push
orb
cmp
cmp
pop
xchg
dec
jb
and
lcall
fwait
cwtl
adc
add
ljmp
sti
shlb
mov
arpl
inc
or
scas
es
cmp
out
or
hlt
mov
jge
sub
mov
mov
push
xchg
iret
dec
xor
jg
test
cmp
addb
cwtl
fs
shl
enter
loope
out
insl
lods
and
cmp
iret
mov
jge
cvtps2pd
mov
push
push
mov
loope
push
or
add
mov
in
leave
adc
data16
in
mov
fucom
jbe
mov
idivl
mov
mov
pop
mov
xor
xor
mov
je
inc
jae
and
xor
pop
ret
sbb
das
lods
adc
sub
ljmp
and
add
xchg
push
subb
movsl
sub
es
out
mov
inc
xor
movsb
pop
push
mull
int3
das
iret
stc
imul
cmp
rclb
jns
scas
push
add
ja
sbb
fistl
hlt
enter
repz
push
aas
test
test
cmovbe
dec
jno
fisubrl
fsubrs
sarl
mov
arpl
lret
push
out
das
push
add
repz
lcall
mov
jmp
push
pop
inc
jnp
popf
fisubs
lock
mov
xor
xchg
mov
sub
rcrl
sbbl
jmp
push
xchg
mov
inc
pop
cmp
cmc
push
mov
mov
lret
inc
lods
push
cld
addr16
cmp
into
push
and
addb
int3
into
aaa
sbb
dec
xchg
ret
dec
add
mov
testb
lahf
cld
mulb
xlat
xor
imul
pusha
loope
ficoml
fimuls
add
push
push
hlt
jo
daa
jb
xor
cs
mov
sbb
sub
adc
rcrb
xchg
in
adc
jae
imul
ljmp
pop
in
hlt
scas
mov
mov
jne
nop
pushf
mov
mov
cwtl
pushf
rcr
add
mov
repz
or
int
js
hlt
xor
mov
mov
shr
popa
or
lods
jnp
xchg
loop
add
mov
mov
xor
scas
push
push
in
cmpsb
dec
mov
jg
sub
xor
mov
push
pop
std
cmp
leave
movsl
sbb
adc
push
sti
adc
adc
xor
pop
test
xchg
ljmp
add
imul
xor
stc
incl
xchg
xchg
xorl
mov
push
xor
test
enter
data16
and
sub
cwtl
jne
arpl
out
mov
sbb
dec
cmpsl
popf
pop
or
in
xor
movsb
cld
in
or
fsubrl
icebp
mov
fnstsw
sbb
sahf
dec
daa
orl
lret
scas
mov
mov
ret
cltd
addb
adc
es
jne
xchg
add
pop
nop
sub
xchg
adc
aam
jns
stc
das
lock
test
ja
push
dec
scas
ljmp
or
fwait
lahf
jecxz
mov
xchg
out
dec
inc
movd
shlb
adc
or
jg
aas
mov
imul
cwtl
rcll
lret
pop
dec
cmp
cmc
fbstp
mov
add
ja
pop
into
xor
rcrl
mov
sbbl
pop
aad
rol
enter
out
add
insb
mov
push
pop
xchg
jbe
lahf
or
adc
sub
cmp
jbe
dec
inc
jae
dec
pop
xchg
insl
push
jnp
adc
mov
adc
inc
dec
push
jns
jno
repnz
lds
gs
daa
and
jecxz
mov
ret
stos
xchg
stos
cmp
dec
sub
xorl
lret
add
pusha
andl
pop
adc
test
mov
ud1
mov
iret
orl
cwtl
das
jecxz
nop
shll
sub
xchg
mov
or
add
adc
testb
push
sbb
pop
mov
loopne
sbb
lock
push
xor
and
jle
jns
add
icebp
std
out
or
xlat
sub
cmc
jp
mov
pop
xor
adc
push
imul
add
push
aaa
gs
dec
pop
jae
push
or
mov
fmull
inc
je
aaa
call
push
das
fadd
fldt
jg
icebp
cmpsb
outsb
popf
daa
cmc
mov
or
pop
scas
mov
adc
cmp
sbb
fwait
movsb
lahf
xchg
lcall
lcall
rorb
adc
cwtl
lds
sti
sbb
fwait
jge
xchg
mov
dec
aad
jo
mov
pop
adc
movsb
sub
mov
je
jnp
and
cmp
mov
repz
into
or
loopne
and
sbb
mov
cmpl
fildll
aam
gs
xchg
pop
jp
sbb
lods
out
jnp
ja
sub
mov
cmp
es
jle
add
mov
jmp
daa
or
xchg
jg
call
out
mov
test
pop
data16
mov
xorl
sbb
rcll
rcrb
lcall
xchg
aaa
std
pusha
out
push
in
hlt
xor
push
outsb
inc
push
add
mov
push
int3
out
sbb
and
int3
subl
out
adc
xor
hlt
dec
and
cmpsl
jae
sarl
insl
jle
mov
mov
jmp
push
in
lret
cmp
xorl
cmp
dec
fs
cmp
dec
inc
mov
lea
arpl
dec
pusha
sahf
jns
sub
sbb
gs
mov
frstor
and
cmpsl
shrl
scas
mov
add
jg
testl
cmpsl
inc
cmpl
dec
int
sarb
xor
sbb
std
add
lds
pushf
lcall
outsl
les
jns
lret
popf
xor
xchg
sbb
rolb
lods
mov
lret
or
notl
adc
loope
divl
test
clc
push
movsb
in
mov
repz
lahf
fadds
mov
push
pop
jnp
mov
repz
push
and
xchg
push
adc
jle
ljmp
mov
stc
inc
roll
out
lods
int3
jne
in
adc
pop
js
and
mov
daa
cwtl
cli
xlat
mov
js
jle
cli
fucomi
out
pop
xchg
add
jge
jecxz
cmc
aad
das
push
insb
push
or
lock
pop
lods
cmp
shrl
jb
stos
lea
cmc
adc
mov
and
jnp
sub
fbstp
jmp
xor
inc
jno
pop
dec
loop
and
pop
and
sub
je
leave
ficompl
sbb
inc
push
inc
and
lret
xchg
jecxz
add
repnz
sbb
imul
jmp
cltd
in
int
adc
cmpsl
jnp
cmp
popa
mov
xchg
or
test
push
pop
repz
in
xchg
adc
push
mov
sub
push
jge
or
icebp
dec
pop
push
push
lret
push
loope
push
jo
loop
push
dec
mov
stos
mov
daa
repnz
lcall
push
leave
xchg
je
or
pop
call
lea
push
cld
mov
jae
repnz
les
mov
cmpsl
jno
dec
cmpsl
xadd
adc
or
mov
int3
cmp
ljmp
jge
orb
push
sub
je
xchg
loopne
lea
dec
lcall
into
cmp
mov
xor
jno
and
fwait
inc
xor
mov
cs
add
cltd
cwtl
add
lahf
adc
lea
mov
mov
pushf
add
adc
fiadds
mov
inc
sbb
decb
loop
mov
mov
sub
push
mov
adc
aas
or
mov
rorb
dec
mov
xchg
inc
dec
fcmovnb
outsl
lret
jmp
nop
dec
hlt
dec
push
sub
dec
cli
push
cld
clc
addb
sbb
xchg
xor
cs
inc
xor
pop
sbb
repnz
jmp
xchg
outsl
ds
mov
push
pop
mov
and
test
lahf
jae
fs
and
icebp
test
xchg
sub
adcl
xlat
mov
repz
push
data16
mov
push
int
fcoms
inc
jmp
add
pop
xor
out
push
sub
loopne
bound
lds
mov
add
in
or
pusha
enter
add
push
test
mov
cs
sbb
dec
dec
jg
cld
pop
jp
jno
pushf
ja
mov
jg
dec
pop
mov
das
lcall
pmaddwd
out
dec
adc
sub
jbe
fs
push
cmpb
addb
movsl
pusha
imul
popa
test
add
cmpb
xor
jne
jle
and
inc
into
orl
pop
mov
push
sti
js
push
cmp
jbe
lds
lock
dec
and
stos
push
or
sbb
jno
xlat
inc
imul
adc
movsl
popa
fcom
pop
pop
xor
cmp
jp
arpl
subb
sub
jl
sti
scas
int
rcr
pop
and
insb
sti
fbld
fwait
out
pop
stos
xchg
mov
shll
sub
sub
stos
xor
cmp
enter
cmp
scas
xchg
and
ds
dec
das
or
pop
dec
lds
add
in
or
mov
loop
push
outsl
dec
pusha
lcall
pop
sti
lret
lret
cmp
cmc
std
hlt
jnp
ja
inc
add
lret
dec
out
push
repnz
xor
sub
in
dec
adc
pop
dec
loop
push
mov
inc
sbb
repz
xchg
xchg
leave
push
jne
pop
pop
fldenv
mov
add
and
pushf
push
movsl
sub
add
push
add
pop
popf
cmpsl
shr
and
rcrl
aam
lods
sub
scas
std
or
insb
mov
int3
adc
inc
mov
add
fadd
push
mov
js
sbb
in
test
out
adc
mov
popl
test
lods
sub
push
loop
mov
cmpsb
inc
notb
jmp
daa
ljmp
push
lds
ret
jle
mov
adc
push
jo
mov
test
or
mov
adc
ret
mov
jge
sub
mov
outsl
dec
popa
adc
dec
out
fbstp
les
insl
fstpl
mov
lds
test
pop
add
daa
add
adc
adc
pop
out
lods
enter
pop
js
ds
mov
pop
dec
test
fs
inc
adc
int
fldt
fisubrl
jne
push
mov
sti
out
es
sbb
cltd
adc
mov
insb
jb
pusha
scas
aam
movsb
dec
outsb
inc
add
das
push
xor
xchg
sahf
outsb
xor
xchg
mov
shrb
fmuls
fsts
clc
sti
adc
sbb
inc
push
pop
test
mov
sbb
push
cmp
lahf
test
daa
dec
sbb
inc
loopne
lods
xor
fidivs
add
push
xchg
and
out
mov
clc
sahf
lds
jmp
xor
stos
and
into
mov
mov
imul
sub
jmp
or
mov
xadd
movsl
lock
fldenv
scas
loopne
imull
fistl
test
push
adc
icebp
xchg
incl
lds
sbb
loop
pop
sbb
leave
or
stc
lret
or
pop
push
mov
or
jl
adc
rcrb
push
dec
ss
or
or
mov
insl
fisttpll
adc
jno
in
aas
pop
jbe
mov
or
and
or
xor
scas
cs
lods
cli
and
push
outsl
push
out
add
lock
es
and
dec
addb
mov
mov
arpl
jl
stos
add
or
adc
mov
xchg
sub
xchg
lock
rorl
inc
adc
add
mov
push
lods
addl
mov
in
dec
dec
mov
xor
xchg
push
or
add
out
mov
mull
and
add
and
dec
into
add
sahf
jne
sub
daa
cmp
inc
pop
fadds
inc
lds
adc
cld
shlb
rclb
mov
jp
sti
paddq
sub
je
lahf
int
pop
cmpsb
jns
lds
test
lret
push
rcr
mov
jle
test
push
popf
push
lea
mov
into
dec
jge
insl
sahf
sbb
scas
sub
jle
outsb
in
push
popf
push
lea
mov
into
dec
jge
insl
sahf
sbb
scas
sub
jle
outsb
in
push
popf
jge
fistps
dec
jge
insb
sahf
sbb
scas
sub
jle
outsb
in
push
popf
push
lea
pop
xor
push
jge
sbb
xchg
push
repnz
ret
mov
xor
add
push
andl
hlt
mov
andl
add
jne
rclb
inc
and
adc
inc
rclb
mov
sbb
pusha
ret
inc
and
xor
or
mulb
jb
inc
ficoml
mov
jno
jb
and
and
hlt
xor
dec
ret
inc
in
call
mov
mov
ret
jmp
test
insb
xchg
scas
pop
or
mov
jg
in
imul
daa
aas
xlat
iret
dec
out
pop
push
pop
gs
or
or
sbb
sbb
and
fwait
mov
adc
pop
xorl
inc
test
mov
in
shlb
mov
rolb
mov
cmp
data16
push
insl
pop
jg
ret
jp
inc
adc
lret
ja
lock
lock
lcall
dec
xor
in
push
cmpb
rcrl
jo
pop
push
sbb
and
jge
xor
lock
inc
rclb
mov
adc
mov
dec
shlb
mov
iret
outsb
cld
pop
in
and
lea
jae
push
in
mov
arpl
and
sub
jno
jbe
pop
in
pop
mov
sub
lock
fists
inc
divl
test
xor
sbb
popa
cld
xor
and
shlb
xchg
add
jo
pusha
ret
inc
and
adc
inc
rclb
mov
adc
pusha
ret
inc
and
inc
outsb
adc
cmpsb
pushl
or
fcmovnu
or
aam
cmp
mov
mov
int
lods
stos
mov
mov
inc
xor
sub
pop
push
xchg
rolb
push
and
call
imul
or
inc
insb
sbb
out
xor
add
loop
ja
bound
cltd
xchg
jnp
xchg
dec
add
sub
sbb
jmp
enter
sub
or
sbb
lahf
scas
dec
mov
les
and
pusha
out
or
or
movsl
push
push
cmp
xchg
in
mov
sub
lcall
sub
movsl
push
mov
dec
and
dec
cltd
xchg
adc
dec
ds
or
call
repz
ror
xor
dec
cltd
mov
dec
lods
jl
lods
inc
sti
hlt
das
dec
mov
enter
xlat
aaa
daa
outsb
lahf
fsubrs
outsb
aaa
cmpsb
call
daa
mov
jae
mov
popa
xchg
xor
mov
jecxz
sub
cli
mov
adc
scas
aad
push
fildl
lds
stos
and
inc
mov
and
aam
mov
cmp
pop
or
jbe
imul
mov
xchg
ljmp
or
xor
push
fsubs
stc
mov
xor
mov
push
xchg
int
lcall
fsubrl
xchg
push
leave
aas
pop
add
es
cli
sbbl
mov
aaa
cmp
pop
inc
arpl
xor
pusha
aaa
and
ja
jbe
scas
sub
pop
or
ds
movsbl
jl
lds
xchg
inc
jbe
jge
stos
add
in
xchg
xor
push
lods
test
jmp
movb
xchg
int3
mov
stos
lds
add
pop
rorb
movsl
push
hlt
cmp
cmp
pop
add
mov
sub
rolb
pop
fadd
movsb
adc
loop
mov
sqrtps
pop
xchg
add
jbe
andl
lret
pop
andl
out
cmp
cmp
js
jne
xchg
lahf
and
cmc
cmpsb
jb
jmp
xchg
js
nop
and
ds
cmp
fisttpll
cmp
mov
das
pop
fbld
jne
call
pusha
cmpsb
sbb
fldcw
dec
mov
movaps
shll
pop
mov
jmp
lds
add
sbb
movsb
add
cmp
cmpsb
mov
xor
cmp
push
fstpl
adc
sbb
loop
subb
lea
cwtl
popa
sub
stc
jmp
ss
bound
aas
daa
roll
push
dec
xchg
gs
mov
xor
push
mov
and
movsb
push
pushf
rol
pop
movsb
xchg
adc
mov
or
call
jge
aas
aas
in
xchg
add
lods
mov
push
lock
dec
add
sbb
lahf
mov
or
int3
into
int3
into
add
xchg
pusha
pop
xor
cmp
in
mov
or
repz
xchg
cmp
mov
out
repz
je
jge
test
cmp
pop
movsb
or
movsl
das
sahf
add
lret
in
insb
and
in
jnp
fcmovb
loop
rclb
sub
les
inc
sti
lods
lcall
sub
mov
mov
shll
aas
cmpsb
xor
lods
stc
repnz
out
cmpsl
mov
icebp
or
xor
or
aaa
sbb
mov
popf
loopne
sahf
mov
ja
cmp
or
scas
sub
mov
lds
mov
adc
xor
stos
mov
sti
nop
cmp
iret
push
lret
dec
sahf
es
repz
sbb
les
aad
or
ret
mov
mov
mov
mov
mov
mov
mov
add
repnz
rcrb
cmc
fcmove
jb
or
jne
adc
push
loopne
push
cmp
jg
loope
jg
js
sti
out
cli
xchg
inc
ljmp
jns
mov
mull
sahf
jg
dec
or
mov
and
dec
pop
sbb
loopne
and
mov
stc
mov
and
mov
xchg
ds
std
stos
out
inc
mov
mov
in
xchg
jns
inc
out
popa
fwait
in
lcall
xor
jns
mov
mov
cmc
fwait
jnp
enter
rclb
popa
loopne
in
fstps
fisubrs
in
mov
and
ficoms
sbb
ljmp
mov
mov
bound
dec
mov
pop
push
addr16
xchg
xor
xor
dec
inc
pop
outsl
jbe
lahf
push
dec
pop
bound
nop
inc
daa
mov
iret
push
pusha
out
or
cmc
sub
cmpsl
testb
popa
lds
mov
dec
mov
sbb
fs
adc
add
inc
mov
int
rcrb
inc
outsb
add
push
sbb
cmc
and
inc
xlat
add
sub
ret
int3
adc
sti
enter
hlt
aas
jno
filds
popf
add
push
sbb
sbb
add
push
out
xor
fcmovnbe
jns
fcomp
jle
data16
fcomps
cwtl
das
cmovo
shlb
and
test
shll
stos
xor
in
push
xor
sbb
or
aam
jle
pushf
xchg
mov
fwait
js
jbe
cmp
mov
int3
push
aas
in
sbb
push
ror
and
ret
pop
mov
sub
mov
je
outsl
out
push
sbb
xchg
adc
in
xor
xchg
push
stos
lret
add
xchg
sub
pop
mov
jp
mov
decb
dec
shrl
fadds
adc
cmp
setnp
insl
lcall
xlat
clc
notl
jecxz
sbb
jecxz
push
rcr
pop
mov
mov
pop
jmp
ss
dec
ret
nop
incl
fistl
out
loope
pop
xchg
mov
mov
outsb
mov
xchg
jge
cltd
pop
push
loopne
loop
pop
sbbb
xor
jg
mov
in
jl
hlt
popa
lock
dec
sub
sub
push
add
adc
fildll
dec
xor
inc
fidivs
xchg
add
add
int
loop
lcall
and
loope
loopne
mov
dec
imul
mov
das
inc
imul
cmpsb
out
imul
sub
sti
dec
or
mov
mov
fcoml
jg
clc
add
cmp
movsb
dec
pop
cmp
mov
dec
add
aaa
mov
mov
mov
adc
sbb
sub
or
mov
push
mov
inc
pop
and
adc
jl
nop
jle
sbb
jmp
xchg
hlt
dec
daa
pusha
jg
mull
aaa
xchg
scas
mov
clc
shl
call
push
lcall
sub
fisubrl
mov
insl
je
sub
out
pop
push
lods
lcall
movsb
sub
ret
stos
pop
jae
jns
aam
gs
pop
cmp
neg
rclb
insb
push
sar
pushf
mov
sub
addr16
scas
daa
xor
jae
sub
push
push
mov
push
lods
unpcklps
push
fistps
dec
jle
mov
or
hlt
cmp
jbe
dec
sub
out
mul
sbb
enter
lahf
loopne
mov
cli
aas
and
sti
adc
sub
jge
popf
das
jno
pop
mov
aad
adc
sub
mov
add
out
inc
xchg
mov
fdivs
hlt
sub
and
push
inc
int3
faddl
push
mov
loopne
inc
mov
sub
test
fmuls
mov
dec
mov
in
loope
add
out
aam
adc
jbe
mov
pop
dec
xor
mov
sbb
sbb
fidivl
js
in
cs
or
xor
es
sbb
shl
xlat
or
cmpsb
test
mov
jb
int3
dec
mov
adc
test
mov
es
dec
sbb
into
xor
push
stc
lcall
out
add
push
lret
dec
ret
add
das
shrb
in
insl
in
mov
and
aas
loopne
jmp
fdivrp
repz
and
adc
push
stos
xchg
cmp
push
mov
out
xchg
sub
adc
sbbl
pop
xorl
xlat
cmpsl
add
inc
je
cmp
lret
mov
jge
imul
push
push
cmpsb
jns
std
jnp
inc
pop
les
lods
outsl
cwtl
scas
xor
fidivs
push
sub
xchg
push
imul
dec
ss
jp
jo
sbb
and
sti
mov
fwait
pop
fwait
jbe
mov
and
ret
repz
test
push
lods
enter
aad
and
sub
dec
and
mov
xchg
jb
fildll
push
test
aas
aam
in
dec
dec
loopne
jg
push
adc
push
iret
movsl
in
loope
mov
xchg
shrb
shr
mov
or
les
sbb
add
int
dec
sub
lods
jb
lea
lods
in
cmc
jne
dec
iret
jae
xor
push
xor
mov
mov
dec
loope
cmp
add
inc
and
cld
mov
jmp
cltd
pop
adc
or
popl
mov
aas
push
jnp
push
mov
test
fld
pop
out
push
xchg
fxch
xchg
push
jg
lods
mov
or
add
cmp
adc
fdivrs
daa
mov
ss
xchg
xchg
test
push
sti
cli
stc
jns
pop
ljmp
call
fdivl
outsl
dec
icebp
pop
out
xchg
push
xlat
test
mov
mov
pop
or
add
pop
mov
daa
or
push
imul
sbb
xchg
inc
aam
lret
sbb
jle
mov
jmp
inc
movsl
add
rorl
jecxz
cmp
push
pop
or
pushf
popf
lock
lds
inc
push
pop
loop
gs
and
frstor
pop
xchg
dec
imul
in
inc
inc
loop
mov
imul
xor
stos
jns
enter
fidivrl
mov
pushf
sbb
stc
sbb
outsl
sub
jl
pushf
mov
or
out
mov
into
mov
pop
sbb
jg
fistl
push
add
or
mov
rcrb
xchg
in
adc
xchg
lret
push
movsl
mov
mov
mov
test
jmp
cmpsl
xlat
lods
movsl
insl
xchg
pop
je
mov
xchg
cli
or
xlat
cmovg
test
fdivs
popf
xlat
aam
mov
rcrb
out
rorl
pusha
add
dec
testb
sub
cli
cmpsb
imul
fs
xor
xor
push
adc
stos
and
push
jns
xchg
jbe
inc
push
adc
adc
fisttpl
loop
dec
jl
cmpl
fstl
xchg
mov
pop
or
xchg
push
inc
sub
mov
lea
sub
xor
mov
push
push
arpl
lret
jo
fmulp
mull
fldl
cmc
push
loopne
jo
je
adc
insl
aaa
into
data16
add
mov
testl
scas
mov
adc
push
sbb
cld
fadds
xor
rorb
out
xchg
mov
ja
mov
lods
inc
dec
adc
cmpsl
dec
xchg
shll
test
out
sbb
enter
rorb
stc
add
mov
jne
mov
movsl
mov
rorl
adc
sub
movsb
loope
vandps
mov
out
jnp
mov
je
aaa
std
xor
xlat
scas
jno
cwtl
mov
fbld
hlt
pop
mov
jno
ljmp
xor
pop
push
sti
adc
ss
sub
push
mov
shlb
cwtl
adc
mov
lret
xor
push
push
add
cmpl
xchg
imul
jbe
out
or
hlt
mov
inc
jmp
jge
xchg
ljmp
mov
dec
imul
and
out
rol
shrl
sub
dec
sti
fisubrl
mov
std
xchg
mov
test
xchg
pusha
stos
jmp
jne
inc
and
jns
jp
aad
cli
std
add
dec
add
inc
lret
loope
or
mov
pop
clc
cmp
push
sbb
outsl
or
clc
lret
xor
push
sbb
mov
mov
repz
cmp
call
ret
ljmp
xor
mov
test
std
fisubrs
fs
mov
iret
sbb
adc
lods
stc
rcrl
xor
adc
mov
pop
js
insl
mov
sub
jecxz
outsl
filds
sbb
xchg
sub
imulb
xchg
rcrb
jbe
orb
repz
jle
push
and
mov
sbb
mov
stos
lret
sbb
test
sub
add
push
jg
daa
mov
call
cltd
or
xchg
mov
loopne
jne
or
and
addb
mov
adc
mov
mov
dec
pusha
pop
rcr
push
push
ja
or
mov
loopne
shll
mov
ret
dec
inc
cmpsl
sti
xchg
dec
mov
push
aaa
dec
insl
push
or
cmp
popa
fstpl
cmp
incb
add
sub
stc
jmp
lds
push
loop
cmp
das
std
sub
dec
pop
add
mov
push
pop
dec
inc
xor
test
adc
push
loopne
out
out
in
push
cmpb
sub
daa
push
mov
xor
fsubrs
pop
loop
pop
clc
adc
leave
nop
add
xor
stos
bound
popf
leave
cmpb
cmp
repz
dec
adc
in
push
push
xchg
movsl
loope
sbb
add
and
adc
mul
ss
adc
hlt
clc
cmp
mov
ja
adc
lret
loop
jp
outsl
aaa
shll
xchg
fstpl
xor
mov
adc
cmpsl
xor
fs
jp
test
pop
inc
or
movsl
pop
popa
jb
scas
mov
sarl
and
mov
dec
mov
arpl
add
adc
add
cmp
xchg
sbb
mov
cmp
mov
loopne
fyl2x
mov
xchg
ljmp
mov
popa
xor
jecxz
dec
stos
push
mov
daa
sahf
inc
xor
mov
adcb
sub
dec
stos
adc
push
jecxz
and
mov
ficoml
scas
mov
push
add
push
test
sbb
mov
cmpsb
in
cmp
std
mov
sbb
pop
ljmp
mov
popa
loopne
jle
frstor
hlt
ja
xor
lds
ret
movsb
add
sub
lret
push
repz
mov
or
stos
sub
movsb
cli
pop
mov
mov
inc
xchg
cld
imul
xchg
or
fimull
jb
mov
push
test
mov
or
pusha
icebp
cmp
add
mov
shll
cmpsl
lret
jo
and
shll
adc
xor
sti
cmpl
push
push
lods
cmpb
push
stos
ds
inc
xchg
test
sub
xlat
fisttpll
xor
out
xchg
or
push
sub
dec
clc
rcll
test
mov
mov
inc
sbbb
and
cwtl
insb
dec
test
inc
popf
lret
xor
ljmp
pop
repnz
ss
xorb
lods
mov
xor
push
cmc
cltd
rcll
mov
bound
scas
cmp
and
enter
shll
out
sbb
dec
jge
imul
push
loop
push
pop
leave
inc
dec
mov
cmc
mov
adc
aas
inc
jp
push
cld
or
jo
pushf
add
mov
aas
je
and
and
lds
bound
adc
out
int3
out
mov
mov
popa
and
jns
mov
push
cmp
inc
loop
adc
inc
cmp
mov
imul
or
add
lods
out
jg
cmp
mov
xchg
dec
pop
jge
inc
push
ficomps
xor
test
into
cmp
cmpsb
into
mov
push
mov
lock
inc
jl
pop
pop
dec
in
sub
fs
or
repnz
cmp
push
in
jg
popf
mov
fwait
add
pop
repnz
insb
mov
push
stos
cmp
jbe
loopne
inc
push
scas
ja
leave
sarl
pop
sbb
cmp
loopw
jl
out
xchg
pop
jno
cmp
out
test
dec
mov
cmp
imul
xor
aas
mov
mov
sahf
sub
sar
pusha
mov
imul
and
dec
xchg
sub
shl
test
adc
mov
mov
xchg
push
jns
and
sub
pop
or
mov
in
dec
fsts
push
pusha
push
outsl
mov
push
in
les
pop
push
and
dec
mov
push
push
pop
lods
inc
arpl
mov
mov
dec
test
mov
out
in
mov
lret
jl
call
mov
mov
mov
loope
stos
sub
sub
mov
or
cmp
or
int
add
or
in
imul
ret
sub
xchg
inc
jb
push
out
jnp
pusha
sub
jno
jb
mov
leave
int3
js
daa
cld
nop
sub
mov
imul
mov
cmc
dec
lea
sbb
rolb
push
pop
pop
nop
pop
xchg
inc
dec
daa
sub
adc
jge
xchg
gs
xor
xchg
sub
out
cmp
mov
fsubrl
out
push
fstps
or
addl
or
sti
or
fwait
cmp
push
add
movsb
pop
lcall
dec
cli
lods
pushf
lds
ret
ja
aad
hlt
mov
xor
insl
aaa
daa
and
rcll
cmpsb
mov
out
push
daa
add
loopne
mov
sub
lods
sahf
rcrb
out
adc
pop
adc
sahf
jecxz
lret
lcall
push
xchg
push
inc
stos
test
inc
dec
fs
mov
push
insb
cmp
fists
cmp
mov
std
aas
jmp
in
cmp
push
push
push
imul
fwait
cmpsb
decb
ja
mov
adc
dec
push
icebp
pop
cmp
push
jmp
popf
xchg
gs
int
lock
dec
adc
add
mov
mov
js
in
jne
aam
fistpll
sub
je
test
bound
out
pop
mov
sub
inc
xchg
add
mov
jne
bnd
fnstcw
add
std
mov
iret
pop
and
mov
lea
test
inc
fcoms
imul
push
jo
test
rcl
cs
jle
xchg
xchg
push
leave
sub
adc
lea
sbb
mov
je
outsl
xchg
inc
ret
repz
aas
cmovl
add
xchg
push
orb
dec
rorl
adc
pop
scas
sbb
sub
or
icebp
fistl
out
jle
int3
lahf
jmp
nop
adc
cmp
in
fsts
or
mov
add
ds
test
nop
sub
or
adc
cmp
lds
xchg
push
clc
sti
cmp
cld
fiaddl
mov
ret
lock
cmc
mov
push
push
jo
pop
sarb
test
mov
pusha
icebp
push
mov
mov
je
xchg
fmulp
cmp
dec
aam
scas
mov
imul
in
or
clc
xor
add
mov
and
int
out
xor
dec
arpl
mov
insb
dec
push
sub
pop
out
or
xchg
out
adc
repz
clc
xchg
and
jle
scas
xlat
pusha
jns
outsb
xchg
clc
pop
add
jmp
mov
lcall
scas
inc
les
cs
add
sbb
out
loope
sub
push
inc
mov
add
addr16
pop
decb
jge
push
mov
in
jae
mov
pop
repz
fdiv
push
xchg
pusha
or
ss
lock
and
or
fs
mov
push
shrb
inc
add
lods
xchg
jb
stos
mov
clc
jmp
stos
xor
cmp
dec
pop
mov
aad
lcall
jo
xor
xchg
add
int
stos
in
outsl
inc
or
outsb
jo
pop
gs
iret
filds
imul
pop
arpl
mov
popf
mov
cmp
push
xchg
ljmp
push
push
push
mov
cmp
push
xchg
sti
pushf
push
js
bound
lock
cs
mov
adc
sahf
je
cld
cmpl
xchg
mov
push
push
add
pop
shlb
lock
inc
rclb
mov
adc
pusha
ret
inc
and
adc
inc
rclb
mov
adc
pusha
ret
inc
and
test
jb
inc
aam
shlb
xchg
or
je
pusha
ret
movsb
and
add
lock
inc
push
push
add
adc
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
decl
and
jecxz
sarl
rorb
add
add
add
add
add
addl
add
add
push
add
add
add
cmp
add
add
add
add
add
faddl
or
and
addl
xor
add
add
add
push
addl
add
roll
add
sbb
lret
add
add
addb
add
xchg
add
lret
add
add
add
add
add
push
add
add
add
add
add
add
and
add
add
add
add
cmp
or
or
and
pop
add
addl
add
add
add
add
adc
aas
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
and
jnp
xor
or
or
adc
mov
add
add
add
add
add
mov
pop
add
lock
add
add
loop
mov
and
addl
pop
add
mov
push
add
and
sbb
addl
add
add
add
add
add
add
add
xor
add
and
add
add
add
add
inc
add
add
add
add
int3
add
add
add
add
add
add
stos
add
add
add
push
add
int3
add
add
mov
add
add
add
add
add
xor
push
add
add
outsb
push
cli
add
add
add
add
add
add
add
add
add
add
lret
add
cmc
add
sbb
enter
xor
add
lret
add
add
xchg
add
add
add
add
aam
adc
mov
add
add
add
and
add
add
inc
add
insl
add
add
add
add
mov
aad
dec
add
add
add
add
lock
sub
add
fadds
movb
add
add
add
add
enter
filds
xchg
add
add
add
add
add
add
lret
add
and
or
cli
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
jg
sub
lret
add
add
add
add
add
add
add
add
add
add
add
addl
or
addb
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
lods
add
add
add
add
testl
or
add
mov
add
cmp
addl
testl
int
cmp
sbb
lock
dec
add
add
inc
add
add
add
sub
add
add
add
add
add
adc
mov
ffree
jge
dec
lea
ret
jnp
adc
push
mov
inc
int
and
push
jmp
gs
xchg
push
stc
scas
es
xor
jmp
cmp
push
mov
push
cmpsl
leave
or
mov
repz
enter
jmp
push
hlt
xorl
nop
inc
mov
in
cmp
fwait
xchg
imull
addb
fisubrl
jo
data16
std
enter
push
xchg
sbb
mov
je
bnd
sub
cwtl
loop
imul
inc
fwait
inc
dec
stc
mov
into
mov
in
inc
popf
and
push
mov
sbb
push
adc
scas
mov
mov
add
mov
loope
sbb
sub
roll
inc
je
push
ret
mov
clc
or
jge
or
gs
sub
pop
stos
rcrl
rclb
test
int3
leave
je
xchg
shrb
fnstcw
mov
dec
xchg
sub
jp
mov
pop
and
dec
pop
je
sbb
sbb
nop
les
mov
fs
push
xor
fwait
pusha
fisubl
xlat
adc
push
add
les
imull
dec
icebp
sbb
jbe
cs
popa
jo
rclb
rol
or
dec
and
lea
and
inc
in
cmpsl
adcb
imul
stos
jns
jnp
ret
sub
test
xchg
mov
fcomp
gs
movsl
xchg
in
imul
cwtl
inc
xchg
jo
push
pop
push
shll
pop
and
inc
mov
dec
adc
jb
adc
addr16
mov
mov
push
dec
into
and
xchg
loopne
je
dec
mov
shlb
ss
stos
shrl
inc
jle
nop
and
push
loope
rcrb
inc
add
mov
mov
xchg
out
jbe
inc
pop
orb
cmpb
xor
shrl
or
mov
push
insl
mov
outsl
dec
sub
in
xor
les
rcrl
sti
xor
das
jne
enter
fnsave
add
std
sbb
stc
test
lea
add
sbb
cs
jmp
sti
leave
add
jle
mov
sti
sbbb
vprotd
sub
inc
int
mov
repnz
sbb
mov
iret
pop
scas
xchg
cld
dec
inc
jmp
pusha
pushf
mov
dec
inc
cmp
insl
mov
push
and
pushf
cmp
add
jge
mov
dec
xor
mov
insl
dec
push
incl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
