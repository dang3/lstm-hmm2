call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbbb
dec
out
ljmp
cmpl
dec
pop
pop
pop
test
jg
or
pop
and
aas
out
push
fisttps
out
ljmp
pop
lahf
dec
scas
jle
inc
pop
sahf
pop
mov
jg
jnp
das
aas
out
adc
movsb
cmp
outsb
xlat
push
xorl
sahf
xor
das
lea
pop
mov
pop
decl
insl
mov
push
fidivl
jl
pop
jno
cld
hlt
inc
aam
pop
ret
push
movsl
ret
sbb
jbe
fisttps
lds
mov
decb
jne
mov
out
addr16
pop
mov
mov
mov
sahf
nop
mov
xchg
xor
sub
mov
cmpsl
push
xchg
cmp
jle
mov
or
jg
subb
add
xchg
dec
enter
ret
aas
shll
sbb
jmp
notl
nop
pop
jl
cld
mov
fstpt
dec
arpl
fcomip
adc
incb
adc
sub
inc
outsl
mov
cmpsl
fisubrs
jg
mov
das
test
xchg
fildll
out
dec
xchg
cs
pop
fisttpl
jle
cld
mov
mov
add
das
out
fdivrl
push
xchg
inc
loope
ljmp
fstpl
aas
sbb
int
cltd
jno
pop
mov
iret
pop
push
dec
test
xor
out
sbb
pop
int3
pop
ja
push
sti
or
adc
pop
fwait
jle
mov
push
mov
dec
scas
jle
outsb
dec
sahf
pop
mov
jg
pmaxub
into
das
aas
out
iret
push
fisttps
out
ljmp
pop
lahf
dec
scas
jle
outsb
dec
sahf
pop
mov
jg
pmaxub
into
das
aas
out
iret
push
sbb
inc
mov
inc
iret
xlat
fistl
shr
hlt
dec
das
mov
jne
cmpsb
mov
mov
rol
les
jl
scas
fwait
pop
xchg
repz
xor
int3
xchg
ja
leave
adc
push
call
lcall
pop
cmp
lds
mov
stos
jnp
filds
lcall
cmp
mov
pushf
sub
out
sub
adc
stc
out
jo
lds
mov
rorb
jle
pop
xor
mov
mov
mov
inc
inc
ljmp
sbb
or
imul
cmp
add
inc
dec
mov
addr16
push
ret
push
mov
xchg
adc
and
mov
das
mov
mov
cmp
ror
arpl
scas
mov
fwait
test
add
fs
sbb
cli
dec
aas
pop
out
stos
xchg
adc
fisubrs
dec
mov
xchg
or
jns
jl
inc
sahf
shrl
pop
adc
scas
cmp
sub
jns
dec
aaa
add
xor
sbb
add
scas
mov
jmp
in
addr16
aaa
xchg
gs
mov
int3
cli
and
push
pop
or
stos
mov
and
mov
cmp
or
dec
std
or
js
inc
push
xchg
sbb
xchg
xchg
stos
lret
xor
stos
jge
imulb
int3
xchg
xor
out
sahf
pop
xor
dec
ja
lods
add
pop
leave
adc
in
outsb
mov
sub
lods
lds
push
adc
shl
cmp
mov
lahf
inc
fsubrs
jecxz
push
cltd
icebp
iret
cmp
cmp
scas
cmpb
xchg
pop
fildl
das
stos
jno
arpl
or
push
mov
daa
push
ljmp
stc
mov
cmpsb
loope
push
inc
push
mov
or
arpl
lret
push
sub
fisttps
inc
lret
xor
fwait
rclb
push
mov
inc
and
sarl
mov
mov
cs
imul
dec
xchg
xor
mov
sti
sub
inc
jae
xor
lret
push
and
pusha
jbe
push
inc
popa
popa
std
stc
movsl
fwait
in
ja
inc
adc
negb
xchg
test
mov
dec
out
cmc
adc
jmp
mov
dec
push
mov
xchg
fcoml
inc
orl
aad
fwait
or
dec
jnp
pop
fwait
and
sub
andb
jmp
add
mov
pop
lea
fldpi
xchg
xchg
lret
xor
aas
jg
cmp
addr16
fwait
aaa
and
test
sbb
subl
mov
gs
or
test
or
sub
pop
dec
and
lahf
xchg
cmp
mov
loope
jmp
insl
cmc
pop
cmp
xchg
insb
in
sbb
push
movsb
ret
movsl
add
bound
push
add
test
and
pop
add
test
fidivs
mov
pop
shlb
jb
cmp
cmc
jnp
loope
jmp
pop
xlat
xor
std
mov
aas
in
mov
leave
mov
jae
aam
mov
sbb
popa
aaa
mov
popf
sahf
test
pop
and
daa
add
testb
dec
hlt
lods
cmp
pop
sahf
aaa
mov
adc
sub
lods
sub
mov
mov
dec
cmpsl
cmpsl
pop
stos
push
lock
jp
aaa
push
sahf
cmp
cmp
js
gs
jg
shll
addr16
js
jae
xchg
pushf
out
out
lret
je
sbb
fdivrp
or
pop
dec
lds
cwtl
add
jo
xchg
jnp
test
xor
add
or
dec
shrl
mov
inc
je
add
mov
sti
sbb
hlt
or
jnp
loop
push
xor
inc
jo
test
inc
test
popa
and
cmp
sbb
nop
aad
lods
cmp
test
jle
adc
test
jns
std
andb
jg
dec
or
data16
cs
sbb
rorl
insb
mov
xorl
mov
add
out
xchg
in
fincstp
enter
mov
push
mov
or
pop
pop
lea
ss
enter
push
ss
js
insl
test
in
mov
ret
xor
lods
sub
pop
xchg
insb
cmc
cmpsl
fsub
dec
jbe
jb
std
jno
fldl
lret
dec
mov
pop
cs
jns
xchg
leave
sbb
daa
fwait
inc
inc
ds
rclb
pop
icebp
insl
jmp
dec
dec
cmc
rorb
xchg
fdivp
mov
int
in
bound
and
cwtl
imul
add
test
jmp
clc
sub
mov
pop
nop
push
sub
sub
xchg
pushf
jge
jns
mov
and
jp
out
dec
push
or
pop
or
outsb
je
cmpb
loope
push
or
dec
mov
fwait
pop
repnz
mov
leave
pop
adc
xor
jp
xor
ud1
adc
push
ss
fmull
xchg
jg
xor
and
bound
cli
xchg
cmp
sbb
mov
mov
ror
outsb
or
int
icebp
lahf
insb
cmp
xchg
mov
dec
push
push
pop
adc
ret
test
cltd
into
int3
stos
sbb
jge
add
xchg
inc
orb
push
xor
js
cmpsb
xchg
adc
loop
push
jnp
sbb
mov
and
cmp
push
fdivrs
out
gs
add
jbe
jmp
inc
inc
sbb
inc
out
and
sub
out
push
pop
inc
pop
push
add
mov
jge
inc
insl
fsubl
mov
mov
sub
xchg
sub
mov
mov
roll
sahf
mov
pop
pusha
ja
mov
pop
adcb
sub
out
ss
push
xor
jne
out
or
out
mov
lods
push
ficoml
popa
clc
sbb
lret
fadds
mov
test
xchg
movsl
andl
pop
mov
xchg
iret
popf
ds
mov
in
xor
inc
sti
jne
les
movsl
mov
pop
inc
push
fcompl
jnp
pop
add
pxor
scas
pusha
mov
cmpsl
testl
pop
push
push
fsts
jecxz
stc
popa
cmpsb
dec
add
loope
cmc
mov
jmp
ss
fistps
arpl
jne
ss
movups
xchg
inc
pusha
mov
xchg
lret
or
xor
out
lods
sbb
pop
enter
xchg
and
iret
and
ss
sub
and
and
mov
adc
iret
fbstp
lahf
jns
and
adc
or
xor
pop
scas
cmc
inc
cmp
jo
jl
aaa
xchg
insb
xor
dec
shr
xor
cmp
lods
jmp
xor
jno
aas
push
cmpsb
fs
inc
pop
lock
shr
cmpsb
dec
int
or
out
roll
xchg
shll
inc
out
fsubl
xor
in
pop
int3
dec
push
out
imul
push
add
scas
ret
and
ret
pop
call
mov
pop
mov
aam
push
mov
add
push
pushf
push
mov
ljmp
cmp
cmpb
xchg
jmp
repnz
push
sbb
aaa
add
push
test
mov
fildll
sbb
sub
add
mov
arpl
and
ret
inc
dec
js
and
pop
dec
push
iret
in
in
inc
push
jbe
xor
popa
cmp
int3
or
je
roll
and
cmp
xor
movsb
push
jmp
push
mov
in
lret
testl
adc
cli
enter
push
lcall
and
adc
add
or
sub
mov
pop
xor
cmp
sub
in
and
jmp
ret
mov
xor
sbb
incl
dec
pop
xchg
decl
push
fadd
lahf
in
and
jmp
cmp
jp
lret
pop
mov
xor
xchg
scas
adc
cmp
andl
in
push
sub
in
adc
dec
mov
mov
adc
sub
jne
push
int3
and
rolb
sub
fwait
sub
stos
je
std
adc
xchg
inc
mov
sub
mov
int
dec
push
jl
pop
pop
jnp
loopne
sub
movsl
and
pop
inc
push
jae
bound
mov
lcall
lock
push
aaa
cmp
or
fisttpl
adc
mov
aaa
push
stos
push
add
jno
lret
mov
pop
into
push
movsb
add
push
mov
cli
cmpsl
push
lods
test
mov
mov
mov
push
fcompl
jg
daa
je
mov
pop
mov
ljmp
stos
cwtl
out
or
aaa
ja
cmp
movsb
xchg
inc
inc
aam
mov
sub
adc
arpl
hlt
repz
scas
movsb
notl
iret
fstpt
pop
adc
sub
sbb
inc
lret
gs
mov
jg
pop
mov
jb
outsl
cltd
lods
and
jmp
mov
xor
dec
mov
or
cmp
and
xor
cld
jmp
icebp
jg
mov
xchg
push
push
or
inc
sub
xchg
jecxz
cmp
call
jnp
lret
cltd
cmp
pop
mov
ja
orb
cmc
mov
jno
mov
ljmp
sbb
pop
mov
dec
pop
pop
aad
push
outsb
hlt
mov
cmp
inc
lret
outsb
pop
mov
cld
sub
and
adc
shlb
lock
jae
sub
inc
aam
movsb
mov
arpl
loop
mov
jmp
sar
push
xchg
add
push
sub
jno
arpl
dec
loope
in
bound
ljmp
mov
dec
and
in
test
repz
ds
pop
ret
fcompl
inc
lret
out
pop
and
lret
shrl
pop
pop
lret
rolb
out
jo
nop
xchg
or
cli
sub
or
sbb
outsl
out
aad
loope
jmp
cwtl
jle
mov
call
leave
in
ret
and
adc
push
pop
inc
rorb
imull
pop
jnp
cmp
pop
in
dec
sub
push
out
lods
gs
rol
dec
and
aaa
push
pop
or
mov
lds
outsl
jns
xchg
aam
out
dec
jne
out
mov
test
push
mov
add
popf
push
add
mov
rcl
jnp
pop
mov
push
in
push
scas
sub
orb
mov
popf
xchg
mov
cwtl
mov
test
out
aad
sub
addr16
fistpll
sbb
push
lock
lods
out
js
pop
xchg
ja
jge
jne
outsl
sar
jl
push
or
xchg
js
mov
je
loope
leave
sbb
push
hlt
push
dec
sub
push
mov
cmc
jg
bound
lods
and
inc
xchg
test
fldenv
in
jns
call
jmp
outsl
xchg
jo
dec
out
decb
ss
and
adc
pop
mov
jo
clc
xor
ja
adc
pop
mov
inc
or
push
mov
pop
dec
fimuls
xor
js
mov
push
sahf
lahf
sub
test
es
ror
test
push
call
adc
push
xor
or
lahf
sub
loope
jno
pop
test
xorb
out
mov
or
sub
pop
fldpi
push
adcl
inc
fwait
dec
jp
mov
fistl
push
or
xor
ss
repnz
jp
mov
xchg
clc
inc
sub
es
aas
outsl
lret
scas
js
jne
xor
scas
inc
pop
das
ljmp
push
mov
out
mov
mov
push
sub
sbb
sbb
insb
pop
xchg
mov
cmc
mulb
sbb
insb
mov
and
aad
leave
dec
sbb
jge
mov
clc
cltd
jnp
inc
stc
mov
mov
xor
push
xchg
mov
sub
sarb
aaa
enter
out
dec
enter
les
bound
and
mov
dec
out
xchg
bndstx
into
imul
mov
cmp
outsb
lds
or
lret
ljmp
xchg
xchg
cld
mov
js
mov
jbe
ds
push
push
jp
mov
adc
adc
add
push
xor
mov
js
mov
out
bound
mov
mov
fiadds
sti
jecxz
les
movsl
jno
xchg
fists
ret
inc
pop
ds
mov
test
test
inc
pop
js
mov
fcompl
jae
push
inc
jmp
in
shl
dec
rcl
movsb
adc
or
or
test
in
jno
push
or
push
inc
mov
adc
subb
inc
mov
jo
rorl
sub
test
insl
jno
and
mov
decb
jle
dec
ja
push
mov
jecxz
mov
int3
mov
xchg
sub
push
push
push
out
push
push
dec
mov
dec
sbb
lcall
mov
rcl
bound
jp
pop
in
cmp
mov
lds
inc
inc
mov
xor
sahf
dec
pop
pushf
cli
stos
dec
cmpl
cli
and
int
xchg
int3
cmp
data16
rol
andb
rol
dec
clc
repz
or
xorl
in
add
daa
imul
xchg
aad
aam
aaa
test
push
or
lods
mov
and
mov
sub
pop
and
and
inc
inc
cli
movsb
into
and
add
inc
pop
cwtl
pop
jge
push
push
scas
iret
fdivl
mov
sahf
in
push
pushl
mov
jne
mov
mov
fwait
fs
xchg
cmp
add
add
scas
sub
pop
gs
xor
leave
lcall
sub
mov
mov
movsb
or
jg
push
mov
rcll
das
cmp
inc
data16
jo
dec
and
inc
aam
dec
lods
imul
add
cmc
fists
andl
sub
sub
jecxz
div
sub
movsl
outsb
adc
cmpsb
aas
pop
pop
je
lods
jp
scas
and
leave
or
out
cmp
mov
mov
int3
mov
in
out
mov
xchg
jo
int3
cli
mov
add
xor
mov
scas
daa
loopne
mov
into
ljmp
push
push
scas
jno
pop
push
test
push
push
cmc
stc
add
in
shlb
fcoml
imul
aaa
and
push
mov
std
cltd
or
or
and
jns
in
movb
mov
sbb
jg
iret
jns
push
dec
cmp
clts
mov
xchg
addb
pop
add
test
dec
mov
out
loope
sarl
and
lahf
int3
cmp
dec
xchg
sarl
loope
aas
and
fadd
mov
cmp
das
mov
mov
cli
insb
roll
mov
push
movsb
out
push
ja
or
xchg
jnp
push
mov
daa
sbb
cmp
push
pop
cld
nop
iret
push
xor
or
popa
cld
sbb
xchg
xor
popa
sbb
loop
dec
mov
sqrtps
ja
ret
add
sti
mov
repnz
or
mov
inc
jg
add
int
inc
and
addr16
das
ja
arpl
rcll
call
jle
sub
sbb
xchg
mov
dec
dec
shlb
lcall
lods
shlb
cltd
in
adc
mov
mov
test
add
jnp
test
pop
aaa
jne
xchg
pop
xorb
in
imul
or
outsb
insl
mov
jo
xorb
shlb
xchg
sub
adc
rclb
push
outsb
xor
bound
mov
je
and
fxch
and
int
and
mov
ret
cmp
nopl
into
mov
adc
cld
xchg
mov
xchg
and
adc
fxch
and
jl
mov
aaa
or
and
dec
imul
jno
das
cmpsb
mov
aaa
gs
inc
and
nop
lret
push
xor
jne
xchg
lods
push
pop
xor
push
xor
mov
jge
xor
loope
adc
and
lahf
stos
jno
mov
or
push
daa
adc
xchg
lods
mov
pop
scas
mov
mov
ja
scas
push
dec
lods
cmp
fsubs
mov
inc
lret
dec
mov
sub
outsb
out
xor
push
lods
iret
cli
inc
into
mov
mov
sub
mov
fcmovu
xchg
popa
fsubp
adc
pop
je
ja
cmp
jg
cwtl
sbb
push
les
cli
mov
or
imul
mov
mov
mov
sbb
mov
xchg
outsb
loopne
sbb
adc
sbb
call
rorl
pop
js
data16
push
inc
mov
or
rcrb
push
mov
into
adc
mov
cmp
cltd
adc
add
push
push
ss
add
orb
cli
adc
dec
fisubs
cltd
xchg
cmp
or
addb
push
test
xchg
push
pop
dec
scas
mov
xchg
sub
mov
dec
inc
add
std
adc
popf
cld
adc
lock
mov
and
aam
mov
mov
fldl
xchg
mov
lods
enter
lret
mov
fwait
js
int
adc
adc
sahf
sub
xorb
mov
pop
cmp
mov
push
lret
mov
xor
sbb
insb
mov
or
call
and
add
int3
xchg
sti
inc
add
jne
jns
sbb
jmp
jnp
or
fldenv
aad
sahf
imul
sub
mov
xchg
mov
mov
repz
mov
fistpll
or
push
test
add
mov
push
cmc
xor
and
cmp
aad
in
cld
inc
pop
jmp
int
pusha
dec
and
mov
out
mov
fistpll
fisubrs
cmpb
lret
cmp
orb
inc
or
frstor
inc
mov
add
push
arpl
gs
imul
jp
or
das
lock
xor
rcr
add
test
mov
pop
dec
jle
mov
ret
push
sbb
hlt
ret
mov
pop
sbb
insb
xor
inc
sbb
in
cwtl
ret
fildll
test
xchg
lea
pop
test
and
lock
test
add
dec
jecxz
dec
popf
ss
mov
dec
les
add
adc
out
mov
dec
xchg
nop
xchg
lcall
xchg
movsb
jns
arpl
in
mov
lret
xlat
fcmovnbe
hlt
lret
outsl
aad
insb
hlt
fnsave
xor
mov
andb
adcb
bound
pop
lds
out
je
add
xchg
int3
add
testb
stos
das
sbb
inc
in
cmc
jae
int3
jp
cmp
sbb
icebp
lea
popf
popa
sub
pusha
ret
fisubl
insl
fwait
xchg
cld
lods
cmp
mov
out
xchg
pushf
cmp
shrl
hlt
jae
icebp
mov
xor
mov
xchg
mov
out
xor
lods
jno
mov
shrl
jns
mov
iret
xchg
pop
push
or
cmp
fnstenv
outsb
jb
push
les
test
jne
mov
addr16
pop
adc
cld
pop
jbe
mov
mov
icebp
mov
xchg
push
fnsave
push
push
inc
xor
mov
dec
out
sbbb
insb
mov
mov
iret
std
fdivp
xchg
xchg
cmpsb
push
movsb
add
push
pop
jnp
mov
push
icebp
sbb
xchg
xor
sti
jle
data16
bound
inc
lcall
inc
xchg
ss
lods
jmp
cmpsl
arpl
loopne
cmpsb
push
and
and
sub
jp
fdivrs
push
in
lea
jmp
popf
or
cmp
ja
xchg
push
xor
rorb
mov
sti
movlhps
mov
mov
push
int
into
mov
insl
lret
mov
mov
and
sbb
mov
jnp
cmp
mov
cltd
clc
gs
int
das
outsb
data16
pusha
mov
add
xchg
inc
or
dec
sbb
aam
shlb
xor
ret
and
and
xchg
jnp
loopne
sub
inc
sahf
out
mov
lret
leave
int3
xor
mov
mov
dec
cmp
shrb
push
ja
lahf
pop
mov
jge
lods
fidivrs
fsubr
arpl
addr16
fst
clc
dec
dec
jge
cmp
dec
scas
xor
sahf
sti
cwtl
mov
push
jno
ficompl
imul
sbb
mov
sub
xlat
dec
lods
test
dec
jmp
add
jecxz
pop
lahf
dec
scas
jle
outsb
dec
sahf
pop
mov
jg
pmaxub
into
das
aas
out
iret
push
fisttps
out
ljmp
pop
lahf
dec
scas
jle
outsb
dec
sahf
pop
mov
jg
pmaxub
into
das
aas
out
iret
sbb
add
ljmp
mov
and
dec
lahf
pop
mov
jnp
pminub
into
sub
xlat
cli
repz
dec
scas
aas
scas
dec
popa
mov
fnstcw
xchg
mov
xchg
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
gs
fs
push
push
inc
sub
inc
pusha
xor
add
mov
aad
movsl
mov
movsb
test
fs
push
push
inc
and
adc
jl
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
mov
sti
movsl
int
repz
cli
sti
imull
jne
ss
inc
gs
and
pop
das
xchg
or
icebp
movsl
mov
pop
aad
out
daa
leave
in
mov
fadd
sysenter
mov
push
sbb
push
adc
push
mov
test
imul
out
push
in
lahf
imul
mov
push
cmp
xor
jl
adc
jle
cli
in
in
dec
push
repz
mov
pop
test
add
add
leave
sahf
mov
adc
cmc
or
test
sub
out
movsb
gs
cmpb
dec
jmp
fnsave
sahf
inc
mov
lahf
mov
sub
rcrl
xchg
std
xchg
cmp
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
in
and
and
dec
push
jl
pusha
push
push
push
movsb
icebp
in
mov
mov
neg
rol
ror
adc
add
pop
pop
push
cmpb
mov
test
adc
es
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
rorb
mov
cltd
lret
mov
sbb
xchg
inc
cs
push
fcoms
outsl
mov
sub
pop
repnz
mov
adc
pop
gs
sub
xor
jg
out
aas
negl
ljmp
xchg
sarl
rclb
ret
scas
lods
ds
or
call
pop
add
adc
push
rorl
lods
xor
cmp
and
and
in
mov
shl
dec
cmp
repnz
cmp
mov
in
add
and
push
adc
leave
sub
push
mov
cmp
mov
insl
lock
movsb
xchg
dec
lcall
fs
addr16
xor
push
rclb
inc
pop
and
add
push
stc
jp
inc
popl
mov
and
jno
in
roll
lahf
lret
cmc
mov
pop
les
jp
add
jecxz
fldt
aaa
cmpb
lods
call
push
outsb
lods
dec
push
adc
mov
sub
push
xchg
adc
add
xchg
rorb
movsl
adc
jl
xchg
push
daa
mov
sbb
jmp
stc
sarl
pop
rclb
addl
xchg
out
sti
sub
jae
inc
pop
cmp
scas
jl
cmp
adc
mov
or
out
rorb
lods
sub
and
cmp
je
outsb
sbb
sbb
or
sbb
gs
jecxz
mov
pop
sub
andl
inc
or
xor
out
movsl
roll
enter
js
dec
dec
in
mov
js
mov
xlat
stos
out
repnz
lods
outsb
xchg
aaa
or
aaa
cmc
xor
fisttpl
jecxz
add
mov
jp
cld
add
fldenv
or
jbe
fld
aad
jle
std
push
and
inc
mov
add
data16
and
outsb
divl
mov
popa
fildll
xor
fnsave
es
cmp
imul
add
xor
push
ret
cld
mov
inc
cmpsb
test
cmpsb
imul
repz
lods
iret
push
push
jbe
std
scas
inc
mov
inc
enter
cmp
or
ljmp
pop
jbe
add
mov
in
adc
loop
hlt
xchg
sub
mov
data16
or
lret
adc
mov
or
push
xchg
ja
aad
sar
orl
ljmp
stos
sti
loope
and
jne
sub
das
ret
cmp
inc
sub
cmp
daa
xchg
aas
and
fadds
in
daa
and
inc
mov
cmp
xor
mov
xor
push
aas
scas
or
shrl
sti
add
xchg
out
sbb
loope
test
fidivs
call
mov
fidivrl
lahf
mov
inc
sti
jne
imul
loopne
add
aaa
fldcw
lahf
sbb
cwtl
inc
inc
iret
cmp
cmpsl
jge
pop
shll
jo
jge
mov
mov
push
or
mov
and
loop
xchg
adc
xor
movsb
add
push
es
testl
sub
or
and
mov
pushf
push
add
mov
mov
out
std
addr16
movsb
imul
push
outsb
inc
or
sbb
lahf
addr16
pop
inc
xor
pop
aas
frstor
mov
cld
call
insb
push
jae
movsl
or
push
mov
fbstp
repnz
ret
test
int3
std
lds
popa
jmp
cmc
ja
test
push
arpl
stos
sbb
sub
mov
jno
jns
mov
add
fld
fmuls
std
outsb
jp
mov
pop
adc
pushf
mov
adcb
adc
cs
out
lds
mov
je
fwait
mov
repz
je
aam
and
sub
inc
jl
push
inc
mov
cli
fimull
pop
int3
cmp
stos
mov
pop
xor
in
imul
testb
xchg
aad
push
push
sub
or
iret
pop
xorl
mov
jl
sbb
fs
dec
push
ret
dec
dec
jne
inc
inc
scas
fsubr
inc
jno
xor
mov
popf
in
lock
out
adc
fsts
adc
sub
jb
fbstp
xchg
test
jno
add
mov
call
testb
rcll
je
xchg
aaa
das
mov
mov
shlb
sub
pop
sub
push
jge
xchg
shll
xor
pop
leave
movsl
aam
mov
rorl
sbbl
cld
dec
pop
push
cmp
lods
pop
std
and
push
cmp
pusha
mov
inc
or
mov
sbb
and
mov
aam
data16
sbb
push
pop
xor
fcmovbe
daa
test
xor
aam
xor
push
or
es
adc
arpl
cmp
pop
jecxz
imul
jne
lret
pop
or
rolb
adc
je
xchg
lcall
mov
test
dec
xor
and
loopne
pushl
pop
rep
cld
jle
xor
adcb
push
xchg
movsb
cs
cmp
lock
cmp
or
add
outsb
or
out
xor
xor
mov
or
lock
scas
mov
in
pop
xor
sbb
mov
xor
pop
aas
jnp
cld
popa
push
jns
push
roll
dec
xor
jl
lcall
xchg
push
xor
dec
mov
xchg
adc
jle
jecxz
jmp
mov
xchg
test
lods
cmpsb
test
sti
js
cli
adc
fnstsw
ret
push
jecxz
xchg
dec
mov
push
cmp
in
rcrl
push
popa
xchg
add
dec
into
jp
mov
jecxz
into
lahf
dec
push
cwtl
pop
sub
fistps
cmp
inc
mov
jo
inc
stos
lea
and
jae
jl
lods
mov
das
mov
mov
inc
sub
dec
xor
clc
pushf
push
pop
sub
cmp
pusha
jno
mov
test
add
mov
addb
add
pop
xchg
pop
push
pop
aaa
sbb
in
clc
fsubp
sub
jns
add
dec
or
aas
rcl
pusha
mov
mov
cmp
and
fstpl
in
scas
xor
xchg
mov
aas
sub
mov
add
les
mov
dec
ret
dec
adc
and
push
and
int
jmp
fimull
test
aas
mov
add
push
lods
jg
ja
shr
fldl
pop
out
sbb
mov
out
pop
push
jns
and
loope
cmpsl
aaa
lcall
pop
dec
inc
and
daa
out
jne
call
adc
pop
repnz
sub
xchg
stos
mov
mov
and
arpl
icebp
lods
mov
jmp
xor
jo
push
sbb
movsb
jg
in
xchg
add
popf
mov
push
mov
insl
and
std
sub
call
mov
idivb
xor
push
and
dec
cld
loopne
push
pop
and
cmp
mov
fiaddl
xlat
mov
mov
test
pushf
mov
push
out
lret
push
sub
push
clc
sub
daa
iret
cmc
xchg
sbb
push
fwait
enter
adc
mov
das
mov
cmp
dec
mov
sbb
mulb
dec
mov
jb
nop
jo
sti
shlb
sub
divb
sbb
jle
jne
adc
divl
dec
jnp
inc
mov
inc
movsb
test
lods
mov
sbb
lock
push
das
lahf
xor
arpl
xchg
and
sub
mov
push
rcrb
outsb
push
dec
ret
clc
popf
push
mov
cmp
adc
sarb
sbb
bound
pop
push
loop
divb
fistpll
aas
test
ficoms
cmp
out
loop
roll
or
mov
push
xchg
mov
dec
dec
jb
mov
andb
mov
dec
in
xor
addr16
adc
or
dec
xchg
push
popa
xor
idiv
xchg
cli
xor
mov
inc
jge
ror
push
fbstp
inc
and
jecxz
mov
popa
pop
jno
out
jg
push
loopne
jmp
or
mov
sbb
lahf
in
je
popa
xchg
xor
mov
cmp
mov
inc
lahf
sub
xchg
pop
pop
pop
in
stos
shrb
push
sub
jae
cwtl
or
add
popa
pop
inc
cmpl
pop
push
incl
and
or
mov
js
inc
inc
cld
push
sbb
outsl
scas
call
lret
push
sbb
mov
ja
inc
dec
mov
gs
in
pop
mov
ret
jle
loop
in
fadds
sbb
dec
es
addr16
sub
lods
sbb
movsb
sub
jne
pushf
mov
pop
push
or
ret
out
push
out
es
xchg
mov
in
shlb
les
icebp
adc
mov
add
rcl
xor
pop
loop
or
ret
adc
in
xor
nop
insb
loopne
jge
dec
ljmp
data16
pop
loope
movsb
inc
xor
ret
and
sbb
adc
iret
daa
out
mov
pop
adc
in
es
testl
nop
add
jecxz
xor
and
shl
jmp
mov
push
in
call
ss
pop
js
sahf
cmc
xchg
cmp
dec
xchg
cld
imul
mov
outsl
mov
cmp
or
xchg
fwait
jmp
push
cmp
add
dec
pextrw
sbb
negb
xchg
pop
xor
xor
test
mov
out
cmp
inc
sub
js
ljmp
mov
enter
jecxz
mov
sbb
xlat
out
decl
dec
iret
cli
inc
pop
cmp
lods
cmc
lds
pop
aas
mov
loope
out
scas
shll
mov
pop
pop
movsl
lcall
dec
xor
xchg
ja
sti
ret
dec
add
mov
push
add
pop
jl
dec
nop
or
movsl
mov
popa
add
je
and
int
xchg
mov
mov
cmp
cmp
test
jl
jecxz
mov
add
add
cmpsl
fidivl
icebp
ret
xchg
jp
add
pop
adc
movsb
or
mov
nop
pop
jge
fs
data16
pop
ljmp
pop
pop
xor
add
imul
inc
mov
xor
xacquire
sub
push
push
sbb
sahf
mov
call
dec
aad
int3
andb
sbb
xor
mov
aad
xor
and
push
stos
adc
aam
in
inc
ss
push
and
fnstsw
push
popa
popa
jnp
insb
sub
sub
test
in
daa
pop
enter
popf
addr16
mov
leave
addr16
lods
test
dec
sahf
xchg
dec
push
adc
add
jmp
outsl
pushl
mov
test
int3
ret
or
adc
ficoms
mov
bound
movsl
scas
cld
and
lods
sub
mov
lods
push
dec
mov
mov
mov
or
add
rolb
mov
testb
andb
fstps
pop
and
lods
loop
dec
roll
push
mov
xor
mov
fistpl
jbe
jno
repnz
sub
xchg
ja
jnp
xchg
lds
sbb
jne
shr
loopne
shlb
push
rcr
into
orl
mov
mov
dec
mov
into
loope
mov
insb
shrb
cmp
cmp
mov
mov
mov
dec
aam
push
pop
test
xor
mov
fwait
mov
aad
sub
mov
jae
into
and
jge
in
pop
and
rorl
aas
mov
nop
jbe
pop
pop
jne
jbe
jmp
pushf
das
fucomi
mov
xchg
pop
xchg
xchg
inc
popa
jle
push
lret
sbb
or
and
sahf
rol
lret
xor
mov
adc
xchg
mov
dec
shl
nop
nop
ja
sbb
push
dec
lcall
inc
xor
out
push
mov
pop
scas
jle
pop
or
test
mov
sbb
mov
jbe
mov
sahf
nop
cli
mov
dec
xchg
push
xorb
xor
xlat
rcll
xor
jg
out
std
mov
mov
dec
jno
decl
inc
jp
fwait
lahf
ror
add
int
xor
inc
sbb
lret
es
mov
mov
out
sti
sbb
xlat
xchg
push
push
sub
fldenv
mov
inc
dec
jmp
inc
repz
adc
ss
pushf
movsl
dec
in
push
repz
lods
mov
cmpsl
test
testl
insl
stos
push
out
ljmp
ja
fsubs
ljmp
int3
or
shrb
and
jb
int3
es
pop
push
xor
inc
xchg
addl
jne
jp
nop
lret
repnz
xor
push
mov
gs
mov
sarb
pop
inc
popa
idivb
or
adc
sbb
push
add
mov
or
or
xchg
sbb
out
ljmp
xor
test
mov
lock
adc
xchg
jmp
inc
inc
inc
xor
pop
imul
hlt
xor
ljmp
xor
scas
inc
jae
jno
adc
dec
scas
dec
test
sbb
sarl
rorl
cmpsl
pusha
int
push
mov
inc
jnp
mov
adc
test
dec
cmp
adc
daa
fsubs
sub
fldenv
sbb
stc
push
xor
or
jae
mov
ret
roll
scas
cmpsb
ljmp
aad
mov
jae
int3
in
mov
lcall
mov
cmp
popf
cmpsb
cmp
dec
xchg
in
add
outsb
inc
ret
dec
inc
fnsave
test
pop
sub
xlat
xchg
mov
loope
adc
ret
jp
in
inc
pop
cmp
and
or
gs
in
dec
lods
jb
stc
insb
add
pop
daa
push
call
push
data16
clc
xor
int3
cmp
inc
pop
pop
aam
mov
dec
pop
jno
mov
mov
sbb
movsb
test
mov
sar
cmp
push
in
or
mov
xor
out
mov
jg
pop
sub
in
lret
ja
bound
add
mov
mov
push
movsl
mov
in
jo
jb
call
cwtl
sar
aad
vpmacssdd
sti
aam
xor
push
cli
daa
jmp
insl
pusha
sub
xchg
or
lret
fcompp
pop
adcl
lret
add
jmp
xlat
mov
jno
test
jmp
jmp
inc
adc
jg
mov
cmp
dec
outsl
and
cmp
bound
js
xor
jge,pt
jge
xor
and
jl
dec
mov
jl
mov
lret
scas
dec
sbb
and
cmp
push
cmp
mov
jns
inc
fst
cmpsl
xchg
scas
push
imul
cltd
push
xor
filds
fst
mov
cwtl
enter
ljmp
enter
mov
mov
pop
movsb
data16
pop
hlt
adc
out
lds
mov
lret
sbb
stos
movsl
xor
pop
xchg
adc
repz
mov
adc
out
push
out
mov
xchg
xchg
jo
jle
add
cmp
ret
adc
and
dec
push
sbb
ret
xor
sbb
scas
mov
sub
pop
push
jecxz
arpl
push
popf
and
push
cmpsb
push
jb
incb
loope
aas
xchg
ljmp
sahf
in
add
ret
mov
xor
fidivl
and
mov
mov
cmp
push
push
je
icebp
jb
test
jle
aad
mov
inc
sarb
les
lock
test
aam
push
cld
push
xor
adc
cmpsb
cmp
jg
mov
and
lds
pop
mov
insb
testl
sbb
sbb
repz
push
jnp
cmp
dec
cmpsb
add
std
das
stos
lret
mov
or
mov
adc
add
lock
mov
jb
leave
fcmove
mov
repz
push
add
push
faddl
and
imul
inc
xorb
dec
cmpsl
sbb
jle
into
hlt
std
fwait
pushf
jmp
aad
lahf
sub
jecxz
nop
cltd
ret
dec
hlt
sub
in
les
iret
cmp
stos
inc
addb
lret
es
imull
jge
cwtl
loop
xchg
push
xor
test
cltd
add
xchg
pop
cmp
add
fcos
mov
fiadds
add
xorb
push
insb
fistpll
adc
inc
mov
jnp
imul
jl
clc
or
jne
aad
xor
mov
adc
mov
add
sub
insl
pop
loop
imul
out
adc
mov
sbb
call
imul
clc
sbb
jb
and
subl
xor
ja
daa
jecxz
lahf
mov
adc
es
cmpsl
mov
dec
sbb
imul
and
cld
xchg
jg
mov
push
popf
lcall
fstpt
daa
push
xor
lahf
cli
loop
add
lcall
fcoms
dec
clc
cmp
jno
push
add
call
xor
xlat
mov
out
inc
js
and
inc
arpl
je
es
jo
sbb
in
dec
push
push
fistl
cmc
repnz
cmpsl
dec
dec
std
jle
hlt
inc
stc
add
je
or
jae
inc
stc
lahf
iret
popa
loopne
xchg
sbb
mov
jae
mov
xchg
lods
ljmp
cli
mov
pusha
das
cmp
mov
jle
jbe
jecxz
xchg
ret
out
jae
push
fadds
push
stos
jecxz
std
jns
jb
push
cmpsb
pop
cmp
adc
scas
mov
xchg
cmpl
mov
add
cltd
cmp
jmp
cmp
mov
in
out
and
cmp
ja
addr16
jecxz
or
mov
adcl
mov
iret
pop
cmp
and
sbb
test
mov
out
mov
and
inc
xor
sbb
lret
fstl
cmp
xchg
cmp
push
jmp
dec
add
or
lock
inc
mov
cmc
bound
mov
cmp
pop
add
xchg
xor
lods
sub
sub
orps
mov
nop
and
enter
movsl
in
dec
das
mov
adcl
sub
fstl
pop
mov
insb
or
jl
push
inc
enter
insl
push
ror
jns
or
and
and
add
sub
sbb
sbb
testb
fisttpl
movl
push
sub
xor
xchg
sahf
fimull
pop
cmc
test
cmp
xor
adc
or
cmpsb
xlat
push
js
stos
push
mov
push
cmp
mov
xor
add
mov
aas
mov
add
repnz
cmp
mov
and
mov
in
mov
or
clc
and
scas
std
in
lahf
cmpsl
into
je
fdivrl
orb
fsubrs
cmp
xchg
rclb
out
cmp
mov
pop
fistpl
les
xchg
cmc
dec
and
and
out
push
inc
xchg
lret
fisubl
pop
xor
push
test
outsb
in
popa
mov
dec
std
mov
stos
adc
push
shll
clc
and
adc
add
or
stc
add
lret
lcall
sbb
dec
fcmovnu
inc
mov
mov
stos
call
repz
sbb
mov
sti
xchg
out
stc
aad
xchg
cmp
std
rcrl
jns
pop
fidivrs
call
xor
xorl
jmp
in
and
and
jmp
xchg
jl
int3
outsb
mov
adc
nopl
cmp
test
notb
or
jae,pn
scas
pop
xchg
lea
subb
popa
addl
dec
cmpsl
adcb
adc
ljmp
xor
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
in
aam
les
xchg
xchg
test
jne
inc
push
push
inc
and
adc
add
hlt
cmc
dec
outsl
aam
mov
cmp
pop
jp
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jbe
not
in
cmc
sbb
xchg
sti
in
repnz
inc
jbe
inc
gs
jne
add
push
xor
in
cmc
cmpsb
test
mov
inc
jbe
daa
gs
jne
add
push
xor
in
cmc
cmpsb
test
mov
jnp
or
adc
pop
jno
inc
jns
xchg
mov
xchg
push
jge
movsl
push
out
jne
dec
gs
and
add
cld
mov
jnp
mov
xchg
or
test
mov
fcmovnb
leave
sahf
push
and
testl
mov
mov
es
adc
mov
add
push
xor
cmp
aam
in
loope
test
in
jbe
inc
inc
fwait
mov
inc
push
fistpl
sbb
sub
test
jecxz
add
push
push
cltd
push
inc
jne
pop
push
andl
push
inc
imulb
inc
dec
jle
jle
push
xor
popa
cli
ss
xor
xor
in
cmc
cmpsb
test
mov
inc
jbe
inc
gs
jne
add
push
jae
test
push
stos
mov
rcl
rol
lds
sub
cmp
or
sbb
jp
imul
lahf
mov
sahf
mov
xchg
out
mov
add
cmp
xor
sbb
inc
jp
push
or
xchg
fsubs
out
mov
xchg
jbe
inc
gs
jne
add
push
xor
in
cmc
cmpsb
test
mov
inc
jbe
inc
gs
jne
add
push
xor
dec
pop
test
repnz
lret
jno
das
xchg
lds
or
daa
sub
sbb
mov
call
sub
mov
mov
iret
sub
ret
xchg
pop
and
movl
and
xchg
pusha
push
inc
call
loope
pop
push
jle
or
sub
imul
mov
xor
and
mov
pop
adc
in
push
rolb
imul
je
rcr
dec
dec
stos
in
adc
inc
sub
pop
xchg
xchg
popf
sub
std
sub
inc
fnstenv
imul
test
push
adc
mov
xorps
pop
pushf
out
call
adc
xor
in
xor
or
sbb
rolb
inc
inc
xchg
rclb
dec
mov
sbb
sbb
push
stos
lahf
mov
jae
jne
or
adc
mov
dec
adc
pop
pop
sahf
lods
mov
push
cld
stc
sub
test
mov
push
mov
mov
test
push
xchg
mov
stos
pop
int3
mov
addr16
mov
movb
test
pop
and
sub
sbb
fidivrl
out
mov
xor
call
inc
cmpsb
add
adc
adc
add
cmpsl
lds
mov
adc
lret
daa
mov
push
dec
aam
mov
movsb
jb
sub
notl
test
sarb
outsl
jb
dec
imul
repz
test
mov
or
xchg
ret
cmp
add
and
jecxz
mov
mov
add
loope
add
fsubrs
das
notl
fstp
jecxz
fcomps
cmp
sbb
call
fldenv
loope
push
mov
into
daa
mov
mov
adc
test
jecxz
test
in
rorb
jb
movsb
pop
jecxz
pop
sbb
push
push
inc
call
jnp
scas
xchg
inc
jg
mov
out
dec
xchg
scas
or
popf
mov
in
iret
push
call
dec
lret
std
arpl
pop
sub
out
aas
in
xchg
mov
and
cmpsb
adc
popa
test
popa
loop
out
mov
fcmovbe
xor
or
cld
dec
aad
mov
push
in
lahf
dec
clc
cmpsb
lods
stos
sub
jmp
ja
add
rol
in
xchg
add
ficoml
ret
pop
aad
mov
cwtl
mov
xor
add
cmpsb
addb
dec
jbe
mov
mov
testl
mov
jnp
adc
mov
push
push
std
notb
pop
ljmp
cld
jge
sahf
fdivrs
push
es
popa
fwait
cmpsl
mulb
scas
jb
push
inc
mov
jne
mov
add
mov
popf
mov
push
aam
jo
pop
jmp
loop
inc
pop
into
mov
dec
and
mov
inc
loop
mov
jb
stc
fcmovnu
push
add
mov
stc
dec
dec
and
ljmp
add
cmpsl
push
or
pop
mov
push
arpl
jne
xchg
jmp
or
in
xor
ja
jb
out
xchg
jl
lea
xchg
jbe
movsl
jnp
and
mov
fwait
push
nop
insl
insl
add
loopne
testb
add
adcl
mov
jmp
jecxz
call
and
mov
adc
fsub
sbb
sub
jno,pn
test
inc
mov
pop
or
xor
imul
fnsave
xchg
inc
call
fs
icebp
sbb
les
jbe
rorl
inc
dec
mov
add
ds
xchg
push
push
dec
mov
out
add
das
popa
jg
movsb
stc
stc
cmp
shl
lods
inc
mov
push
out
bound
test
dec
ja
fstpl
jl
and
and
lret
sti
test
gs
pop
push
jl
out
dec
ds
mov
and
jp
and
ja
mov
pop
and
sahf
push
ds
fcmovnu
xchg
mov
test
adc
test
popf
test
mov
inc
out
roll
and
fnstsw
add
insb
out
iret
xchg
out
or
cli
mov
cs
mov
sbb
daa
insb
addl
ss
loop
push
ret
adc
sbb
repnz
imul
dec
and
jge
cmp
in
pop
cmpsb
lods
ss
lret
mov
fsubrl
push
cltd
jno
jae
loop
aaa
mov
subb
xchg
xchg
sbb
je
and
pop
aam
sbb
mov
push
rolb
sbb
stos
pop
fstps
clc
push
or
sbb
mov
call
sub
test
sbb
ss
cmp
outsl
mov
clc
jb
enter
xchg
jle
dec
jb,pn
orb
add
subl
incl
xchg
lods
mov
xchg
xor
mov
insb
std
mov
in
inc
dec
dec
fxch
sub
loop
into
cmp
jae
push
xchg
lret
dec
jp
jl
xchg
sub
push
add
enter
xor
clc
cmc
inc
add
or
lcall
test
sbb
inc
jns
adc
xchg
cmpb
cwtd
mov
add
push
sbb
sahf
sub
scas
push
loope,pt
pop
mov
ret
pand
sub
and
out
push
out
int
jae
inc
gs
inc
sbb
std
add
xchg
pop
pop
mov
cli
sarl
pop
inc
dec
movsl
insb
call
fwait
shll
bound
sub
movsl
push
stos
inc
xchg
push
arpl
dec
enter
jl
cmp
jnp
je
icebp
xchg
inc
jp
div
xor
psrlq
dec
rorl
dec
std
and
mov
xchg
cmp
fisubrs
ret
psubusb
lock
jne
mov
out
clc
lea
shlb
insl
xor
push
sub
sbb
sbb
icebp
cmp
faddl
movsl
xor
lock
pop
std
stc
aaa
xor
pop
popf
xor
in
mov
inc
std
mov
xchg
mov
repz
push
sub
in
sbb
mov
sub
or
imul
cmp
push
cltd
pop
inc
push
xchg
cmp
aad
mov
sti
cmp
das
enter
cli
dec
cld
shr
add
test
xchg
testl
push
sbb
sbb
shlb
push
fimuls
fdivrl
out
cmp
fistpll
testl
inc
jl
xor
sub
or
cs
xor
pop
cld
push
rorb
scas
insl
nop
and
cld
inc
cmpsl
pop
rcrl
outsb
add
bound
clc
jge
fwait
or
dec
xchg
cmp
dec
arpl
sub
and
popa
das
mov
lods
mov
int3
mov
subl
mov
cs
cmp
icebp
push
fwait
dec
jb
add
xor
inc
cli
setbe
adc
test
mov
push
ss
leave
repz
in
mov
lcall
in
aad
push
inc
outsb
rcrw
pop
and
jle
add
pop
int
add
jns
add
in
sub
mov
leave
insl
popf
mov
mov
inc
out
popa
call
jg
stos
sbb
cmp
fldl
fstpt
add
xor
xlat
lods
push
xchg
sub
daa
jg
xchg
xor
mov
stos
or
xor
repnz
je
cmovp
and
pushf
lods
repz
add
jnp
insl
adc
jo
push
bsf
push
call
jo
sahf
push
das
test
arpl
lea
inc
mov
inc
imulb
rcll
daa
rolb
test
push
adc
insb
stc
xchg
pop
jbe
sub
jbe
insb
xchg
insb
dec
call
in
inc
leave
cmovno
out
jg
enter
int3
jbe
sbb
ret
rclb
pop
imul
pop
push
loopne
leave
jp
loopne
bound
js
loope
out
aam
mov
add
add
cwtl
and
shrb
lods
mov
jp
mov
not
fcom
sbb
sbb
cmpsl
fstpl
ret
test
cmp
iret
ficoms
jnp
les
test
adcl
jg
mov
adc
xchg
pop
fisubrs
jecxz
popf
ficoml
mov
leave
cwtl
ret
lds
cld
mov
sbb
cmpsl
xchg
shl
not
cmp
fdivrp
ja
cmpb
in
pop
and
and
push
xchg
addr16
or
fdivs
popf
jo
fisttps
dec
aam
jg
pop
or
pop
xchg
pop
cmpsb
loope
pop
fsubs
ljmp
testb
add
fwait
shr
mov
pop
rclb
lods
and
jp
sub
es
das
stos
jae
cmc
out
cmp
ja
pop
in
cld
lcall
pop
mov
or
test
lods
subb
or
jp
xlat
adc
and
mov
cmpsb
gs
mov
adc
adc
ret
mov
inc
push
push
addl
gs
or
pop
add
push
test
iret
add
std
add
add
cmpsl
jns
out
and
add
pushf
inc
lods
testb
pop
mov
xchg
enter
hlt
adc
shl
and
inc
push
dec
mov
pop
mov
lock
mov
lahf
lcall
cwtl
xchg
or
sub
sbb
mov
dec
mov
mov
sbb
add
dec
mov
mov
pop
repz
leave
mov
mov
push
pop
or
insl
jne
icebp
xor
je
loop
mov
daa
jmp
popf
xchg
fs
sub
lahf
roll
pop
rclb
adc
loopne
xchg
int3
mov
dec
dec
sarb
out
xchg
sbb
out
adc
xchg
sub
pop
test
loope
xor
cmpsb
sbb
ds
push
inc
xor
loopne
pop
test
inc
test
aad
jae
mov
addr16
jl
jmp
inc
push
fwait
mov
cltd
add
jge
and
xor
pop
insb
cmpsl
cs
ds
inc
inc
sbb
mov
mov
xchg
xchg
push
push
loopne
inc
sbb
pop
jmp
pop
adc
pop
sti
faddl
mov
and
jmpw
lret
mov
and
lret
xchg
movsb
outsl
and
cmc
dec
bound
jle
dec
pop
clc
or
mov
add
js
mov
cmc
inc
mov
icebp
iret
and
dec
stos
add
mov
icebp
cmp
sub
cmpsb
mov
or
adcl
dec
ljmp
dec
lret
bound
rep
push
cmp
cmp
add
mov
movsb
aam
and
sbb
mov
aas
and
push
mov
iret
out
push
adc
jb
lods
and
dec
jl
dec
cmpsl
dec
mov
dec
xchg
imul
repnz
dec
push
push
dec
pop
mov
es
rolb
mov
into
rcr
push
shr
inc
dec
xchg
test
push
lods
cwtl
in
jecxz
out
mov
cmp
ds
repnz
cmp
cld
xor
jle
cli
jecxz
pushf
push
iret
cwtl
adcl
lds
loop
jno
ret
daa
test
jbe
loopne
aad
add
outsl
mov
int3
push
insb
mov
mov
iret
imul
cmp
movsb
mul
cmpsl
clc
mov
inc
or
in
lahf
int3
pushf
xchg
sti
sbb
sbb
push
daa
cmc
xchg
add
cwtl
lods
movsl
movsl
push
test
push
ror
xchg
xor
fistl
loop
push
mov
ja
mov
push
icebp
or
xchg
pop
into
xor
dec
cmpl
add
aas
push
cli
mov
mov
mov
iret
add
jns
lods
out
push
fists
repz
jle
rcrl
sbb
mov
cli
daa
cwtl
leave
movsb
adc
ljmp
lahf
xchg
das
mov
jne
or
and
pop
and
enter
xor
popa
je
lret
add
sub
cmp
sbb
fsubrl
xor
sahf
popf
mov
fcmovnu
push
inc
cltd
les
mov
mov
mov
ss
popf
dec
and
fidivl
sub
inc
movsl
sub
stos
dec
bnd
adcb
mov
jae
rcrl
inc
add
or
popf
ss
das
jecxz
aad
pop
shrl
shl
into
loope
fwait
stos
xor
jge
ret
sbb
insl
cld
jge
rcrb
in
movsl
fsubp
subb
test
je
leave
pop
and
mov
jae
shll
lret
popa
lret
jae
cli
fwait
dec
mov
bound
dec
mov
lret
pop
jl
cmp
not
lret
hlt
inc
or
mov
negb
dec
rclb
imul
dec
xor
jbe
shlb
decl
inc
stc
or
in
lcall
call
jg
or
jo
cwtl
test
in
test
aam
sbbb
lds
sbb
sub
movsb
out
ret
cmp
arpl
mov
adc
out
adc
jle
mov
js
scas
fcomps
add
test
mov
or
jecxz
das
sahf
outsb
fstl
push
or
stos
ret
popf
push
jmp
inc
in
sub
or
in
shll
mov
inc
lret
or
jnp
mov
not
fwait
lea
not
pop
cmp
stc
push
and
jbe
jge
xor
jg
jp
fcmovbe
cmp
fs
add
jno
jle
aaa
xchg
lret
adc
dec
jl
roll
ror
lret
loope
dec
bound
sub
fxch
push
jmp
cmp
or
mov
notl
push
pavgw
les
movsl
ret
sbb
out
xor
lea
cmp
out
lock
xchg
cs
adc
sub
mov
mov
call
decl
mov
insl
outsb
cmpsb
adc
pusha
insl
mov
addl
mov
pop
inc
push
icebp
out
roll
hlt
push
test
jl
data16
test
outsb
sub
imul
inc
push
xchg
inc
pop
aaa
xor
mov
fwait
out
jns
in
push
inc
lods
repnz
mov
push
repz
ret
scas
adc
add
push
fcoms
and
decl
jl
out
fwait
sbb
dec
test
sub
push
push
sub
nop
adcb
push
fwait
cmpsb
stc
js
dec
pop
and
filds
xlat
outsl
cmp
into
insl
jge
lret
in
mov
cmp
outsl
ficomps
jnp
or
lods
ljmp
ljmp
pop
push
aam
jns
and
outsl
sti
out
aas
enter
cltd
cmpsb
dec
cmp
inc
or
mov
cltd
lahf
mov
mov
and
jge,pt
int3
and
adcb
push
test
sahf
insl
push
cmp
dec
sbb
lods
adc
loop
lods
sub
mov
nop
outsl
psllw
inc
dec
cwtl
leave
subl
mov
stos
and
jmp
cltd
in
xor
add
lods
add
mov
out
pusha
fidivs
mov
stc
mov
dec
jae
or
roll
push
lds
inc
incb
nop
mov
cltd
int
cmp
lea
cmpsl
aad
movsb
xor
push
insl
cmp
adc
mov
arpl
jecxz
push
add
or
sti
ss
pop
adc
lea
xchg
mov
sbb
cmpsl
mov
out
fisttpll
jae
push
rolb
js
pop
mov
push
cmc
fwait
mov
fwait
pop
test
leave
push
loop
mov
cli
fildll
fadds
shr
inc
jo
inc
mov
or
nopl
mov
mov
jle
cmp
xchg
pop
fldcw
ja,pt
push
cli
jp
push
loope
mov
loopne
pop
jle
inc
add
mov
sbb
sub
aaa
jbe
loop
inc
stos
cmp
inc
jb
in
aam
pop
xchg
xor
add
push
outsl
xor
fsubl
insl
loope
sbb
inc
sbb
out
adc
je
fcompl
enter
jle
inc
out
add
cwtl
cmpsl
xchg
or
pop
mov
push
scas
jns
scas
xchg
sbb
pop
dec
xchg
add
imul
xchg
lock
dec
pop
cs
push
pop
xchg
ret
in
push
call
sub
std
xchg
xor
lcall
dec
into
lcall
out
int
adc
push
je
aam
fs
testb
sbb
ja
outsb
jb
stos
cmpsl
or
daa
sbb
or
mov
mov
pushf
cmpsb
dec
add
jmp
dec
mov
jnp
mov
fwait
addl
ss
aad
mov
add
repnz
mov
dec
iret
and
movsl
add
enter
call
repz
test
data16
pop
mov
xchg
pusha
mov
pusha
scas
mov
xchg
ds
jge
cmpsl
add
xor
sahf
and
push
imul
push
push
cld
fwait
lcall
js
and
dec
movsb
and
cltd
daa
adc
sub
xor
lds
or
loop
dec
push
inc
sub
pop
jne
and
mov
lods
jns
cwtl
in
mov
jno
jecxz
push
push
xchg
adc
mov
mov
adc
es
jge
ss
cmp
or
push
jb
lret
jecxz
jb
nop
fdivp
jne
adc
scas
mov
out
js
or
cmp
in
or
lods
mov
mov
inc
mov
popa
loope
test
popf
std
jnp
push
and
pop
or
xchg
lods
mov
xchg
sarl
sbbb
xor
test
push
sbb
fdivl
sub
dec
test
ret
int3
or
testl
xchg
into
cld
loop
aas
xor
icebp
int3
cmp
cmp
inc
jne
out
mov
scas
push
mov
cmp
cmc
repnz
xchg
mov
mov
adc
or
dec
mov
ja
arpl
fisttps
imul
adc
mov
pop
xchg
sub
lret
push
movsl
sbb
sub
pop
or
cmc
jge
jg
dec
out
pushl
mov
enter
mov
xchg
lret
mov
pop
push
mov
cmpsb
mov
mov
mov
int3
or
and
sub
cmc
sbb
xor
mov
aaa
addr16
sarl
sbb
pop
shl
sbb
pop
push
jae
jb
ret
sbb
repz
es
movsl
lret
rcll
jle
stos
adc
xor
inc
push
cmpsl
arpl
test
shlb
xlat
test
push
sbb
aad
roll
push
je
pop
fisubl
ret
xchg
jne
test
sub
mov
and
add
rcl
jo
adc
pop
sbb
jge
or
sub
cltd
rorb
jnp
or
jno
ficoms
mov
push
sbb
jnp
jle
lret
cld
das
fnstenv
mov
ja
pop
mov
bound
lret
xchg
mov
fidivrl
mov
add
pop
fmull
dec
lods
jl
cld
gs
push
pop
fisttps
inc
ffree
int3
in
iret
dec
lcall
mov
inc
mov
cmp
int3
js
xor
ss
lock
in
mov
jmp
or
add
xchg
int3
sub
and
mov
jae
out
cmc
pusha
xor
mov
nop
xor
pop
mov
pop
push
mov
add
addr16
mov
ds
add
and
lret
inc
cmpsl
jne
mov
xlat
rcrb
jb
mov
js
jae
test
xchg
xchg
cmp
nop
aam
pop
in
xchg
fists
xor
gs
and
xchg
fnstenv
or
sar
adc
loop
test
repz
popf
pop
cmp
out
push
scas
jb
sub
mov
sub
stos
adc
daa
jnp
aas
addl
mov
xchg
jne
sub
scas
ret
std
add
push
jnp
push
mov
inc
xchg
xor
and
sub
xor
in
push
stc
addr16
or
adc
mov
std
add
cmp
dec
pop
adc
add
xlat
jecxz
stc
pop
mov
arpl
loope
pop
dec
push
cli
orb
insl
movnti
sub
sbb
cmp
into
cwtl
push
push
ss
sub
inc
insb
xchg
inc
ret
or
mov
in
fs
iret
lds
fdivrl
imul
dec
fcmovnb
idivl
mov
dec
fsubs
and
pushf
ror
in
pop
das
sbb
jmp
out
out
das
cmp
idivb
fiaddl
push
push
fs
inc
jns
loopne
pushl
fsub
fisttpl
push
imul
cltd
mov
shll
or
push
fidivs
cli
je
cmp
mov
ljmp
rcrb
fsts
push
push
jae
mov
fnstsw
cmpsb
test
mov
inc
jbe
inc
gs
jne
add
push
xor
in
cmc
cmpsb
test
mov
inc
jbe
inc
gs
jne
add
push
xor
in
hlt
cmpsb
test
mov
inc
jbe
inc
gs
jne
add
adc
out
not
in
icebp
cmpsb
test
dec
mov
in
gs
add
mov
lret
mov
lds
lea
iret
add
adc
add
jb
pusha
cmpsl
inc
xchg
inc
test
push
addb
loop
rclb
and
adc
or
jb
push
movsl
push
aad
test
std
lcall
sti
ret
sub
xchg
jp
jb
or
test
jne
or
add
scas
adc
add
pop
fwait
pop
pop
test
arpl
mov
jae
xor
pop
je
stc
fdivs
fsts
push
inc
mov
or
and
or
pop
pusha
popa
dec
les
data16
add
sub
dec
jb
sahf
movsl
push
push
inc
xchg
mov
mov
pop
inc
cmpsb
std
or
out
ret
cli
mov
loopne
cmp
jge
loop
das
lea
push
rorb
xor
adc
repnz
test
pop
mov
fcom
inc
jge
or
push
lret
cmc
scas
lea
push
fnsave
mov
pop
push
xchg
inc
add
mov
dec
in
repnz
sub
and
lds
lea
jp
dec
xchg
inc
jmp
daa
notl
imulb
inc
test
jl
pusha
xor
data16
jb
pop
shll
aam
in
xor
and
xor
pusha
sahf
pop
loop
sarb
imul
inc
mov
and
es
xlat
and
and
add
loop
rclb
and
adc
add
jb
bound
mov
mov
inc
repnz
ret
cmc
and
adc
add
jb
bound
mov
lea
sahf
lods
addb
dec
pop
dec
adc
pop
outsl
mov
ss
add
jecxz
mov
fcomip
test
mov
sbb
pop
fidivrs
jmp
mov
inc
test
hlt
mov
ljmp
hlt
mov
loopne
sarb
push
cmp
jg
push
and
cmpsl
cmp
inc
pop
jge
xchg
mov
mov
mov
pop
mov
mov
xchg
inc
xlat
sub
xor
ss
sbb
xor
adc
int3
into
mov
and
push
fsubrl
adc
sbb
push
adc
pop
in
add
ljmp
imul
pop
xor
in
rolb
jns
stos
repnz
cmp
push
jnp
filds
jecxz
mov
mov
xchg
cmp
nop
sbb
aad
mov
lock
fldt
pop
mov
fwait
orb
xor
fsubrl
sub
aad
out
xchg
inc
pusha
stos
fsts
cltd
stc
mov
mov
cmp
xor
aam
add
mov
pop
push
xchg
pextrw
mov
adc
push
iret
mov
xchg
aad
popf
adc
stos
mov
mov
mov
sahf
pop
sbb
pusha
xlat
stos
push
add
icebp
ja
xchg
mov
xchg
rol
sarl
out
pop
dec
ret
aad
aam
or
icebp
cs
xchg
aaa
cld
xchg
test
int
push
xchg
stos
add
loopne
shlb
mov
dec
and
fbstp
or
arpl
fsts
mov
xchg
dec
cmp
push
adcl
jno
lds
repnz
dec
or
stc
loope
inc
dec
lods
inc
xor
hlt
loopne
mov
cmpsb
icebp
loop
pop
cmp
pop
mov
sbb
into
iret
js
out
int3
jae
shrb
mov
pop
cmpsb
or
iret
cmc
pop
scas
shll
mov
adc
stos
jmp
xor
imul
push
std
test
lods
adc
jecxz
ds
push
loopne
test
and
and
fldcw
pop
cmp
bound
cli
or
mov
rorb
loope
sub
xor
enter
mov
movsl
mov
aas
cmp
add
lcall
roll
sub
outsl
or
hlt
mov
inc
xor
or
inc
xchg
pop
inc
jmp
push
popf
mov
mov
imul
inc
ret
sub
mov
push
adc
push
xor
inc
adc
mov
xor
mov
sahf
jae
iret
xor
jbe
jmp
sub
fwait
mov
mov
adc
jp
cmp
cmp
ret
subb
inc
mov
adc
inc
sub
loopne
jle
push
outsl
in
shrl
in
xor
and
cmpsl
loop
outsl
loopne
loopne
mov
adcb
sub
and
pop
adc
sbbl
cmp
fisubrs
dec
loope
xchg
pusha
push
es
xchg
jecxz
mov
mov
mov
popa
hlt
sti
fimull
jnp
adc
int
in
mov
rcll
inc
or
xchg
mov
out
sub
sbb
add
sub
dec
into
out
stos
adc
data16
aas
int3
dec
imul
dec
add
xchg
test
and
les
mov
shll
repnz
mov
jno
cli
sbb
subl
pushw
push
jns
call
cld
xorb
je
pop
pop
loop
pop
sub
xchg
cwtl
and
pop
cld
ljmp
cwtl
inc
aam
cli
mov
arpl
fsubrp
stos
arpl
sub
push
dec
stc
add
inc
lods
xchg
in
das
repz
cmp
sub
into
xchg
sub
cld
mov
in
movsb
cmp
xorps
pusha
call
rcll
addr16
sbb
mov
xchg
add
push
adc
mov
ret
sub
jecxz
clc
clc
mov
xor
aam
in
xchg
jp
xchg
xor
pop
sbb
dec
loop
xchg
rorb
jl
in
xchg
gs
inc
inc
pop
ljmp
mov
inc
cmp
jb
in
xor
mul
xor
ret
je
scas
jg
mov
or
xchg
cs
jnp
mov
mov
sub
and
dec
inc
sbb
aaa
nop
fucomp
xchg
fldl
popa
mov
test
pop
call
cs
push
shl
and
jl
xor
je
je
imul
pop
scas
pop
xor
mov
sahf
shl
je
jne
adc
adc
or
jno
cmpsl
div
sbb
jle
or
sub
call
inc
push
jp
outsl
inc
xor
ja
mov
xlat
ja
xchg
aam
repnz
stos
fs
ja
jl
push
inc
shlb
out
jge
mov
popa
lahf
inc
mov
sbb
fs
or
sub
fsub
dec
ret
sbb
push
jl
mov
sbb
inc
xchg
pop
mov
adc
and
dec
xchg
aam
les
push
scas
xlat
push
dec
xchg
jne
push
enter
mov
in
mov
sbb
shlb
int3
mov
outsb
cmp
test
out
lcall
iret
xor
add
lret
mov
rcll
call
push
test
xchg
sbb
imul
xchg
mov
incb
or
xlat
orb
in
inc
ljmp
cmpsl
vpmacsdqh
sbb
shlb
cwtl
mov
xchg
in
pushf
ret
js
lahf
aam
pop
sbb
cld
push
inc
jne
adc
jecxz
or
jl
loope
cmpl
sub
push
sub
aam
adc
pop
in
sahf
pcmpgtb
pop
and
add
loop
xchg
pop
in
mov
xchg
push
pcmpgtd
jno
arpl
jmp
subb
cmc
sub
leave
test
decb
hlt
lcall
dec
xor
jne
cmpsl
or
stc
pop
dec
call
js
inc
loopne
mov
mov
push
jne
icebp
jl
lcall
stos
add
in
into
pop
and
xor
call
imul
mov
dec
sub
cmp
mov
sub
cld
iret
nop
daa
sbb
xchg
inc
mov
ljmp
push
adc
lahf
jne
xor
mov
test
jmp
add
mov
cmp
push
xchg
rcrl
jecxz
ljmp
sbb
nop
faddl
jle
and
orl
mov
jmp
push
mov
add
mov
leave
addr16
or
negb
xchg
rcll
dec
jg
cmp
in
bound
jbe
std
pop
fiadds
mov
xor
jecxz
aam
pop
and
movsb
es
jg
adc
ret
ja
loopne
popa
mov
pop
fsubrp
xor
sbb
add
mov
notb
mov
push
pop
stos
push
mov
xor
scas
cmp
sbb
and
popa
inc
test
mov
xchg
pop
cmp
sahf
push
ret
daa
in
icebp
ret
pop
add
mov
in
pop
sbb
dec
cmc
mulb
ds
push
jbe
out
mov
push
xor
sub
ljmp
js
xchg
jp
je
adc
jmp
out
sbb
xchg
popa
fcomi
mov
mov
fistpl
stos
xchg
sbb
and
sbb
fisubrl
jo
les
inc
push
push
les
test
xchg
mov
cmc
popf
xchg
mov
xchg
add
jle
jb
adc
mov
cmpsl
xchg
cmc
fsts
cmc
fnstenv
pushf
loope
pop
out
pop
and
push
add
movsl
xor
adc
fdivp
dec
int
mov
xor
ss
inc
pop
movb
in
push
cmp
push
outsl
repnz
push
out
cmp
das
pop
mov
xchg
ds
in
dec
xchg
mov
inc
or
xor
ret
inc
nop
sbb
push
iret
daa
fsubl
leave
je
mov
mov
sub
and
mov
loope
iret
icebp
ret
ljmp
pop
sub
pop
push
outsl
fmul
or
into
cmpsl
aad
out
dec
or
xor
ficompl
sbb
dec
xor
les
xor
insb
icebp
adc
out
into
xchg
in
movl
scas
jecxz
mov
xchg
les
movsb
sbb
mov
fs
dec
cmp
imul
outsl
pusha
adc
sti
notb
sub
or
xor
inc
mov
jae
movb
les
fsubrl
cmp
xor
push
test
mov
jg
mov
fildl
jb
cmp
js
sbbb
cmp
mov
adc
pop
push
aaa
pusha
bound
adc
ret
movsl
rcr
lods
popf
sti
outsb
mov
je
mov
hlt
rcrb
les
scas
xchg
jl
inc
rcrb
jo
outsl
push
inc
mov
aaa
ja
xchg
cwtl
sbb
scas
daa
insw
push
xor
xchg
scas
mov
mov
lahf
pop
push
call
or
push
inc
arpl
popa
adc
aam
leave
mov
push
fcmovu
push
adc
in
insl
leave
lahf
or
cmp
leave
pop
jmp
jmp
pop
addr16
negl
pop
jp
scas
push
cmpl
in
in
xchg
dec
push
inc
sarl
add
push
sarb
inc
xlat
pop
mov
cmp
inc
fwait
mov
sub
movsl
or
cltd
xor
mov
jle
adc
sti
cmpsl
mov
push
sub
movsb
arpl
cltd
shlb
and
dec
push
add
arpl
add
loopne
jo
inc
int3
int3
mov
clc
push
popf
mov
adc
sub
lods
jle
mov
hlt
and
cmpsl
ljmp
mov
mov
inc
mov
mov
mov
insb
test
icebp
roll
cwtl
fimull
mov
test
xchg
xchg
in
pop
mov
adc
lret
imul
mov
fstl
daa
pop
push
daa
pop
out
gs
aam
xlat
adcl
push
or
dec
shlb
cli
je
mov
lea
cld
aaa
xchg
mov
push
rclb
dec
dec
jg
jo
mov
fistl
pop
push
cmpsb
stc
xchg
pop
sbb
xchg
mov
push
sub
fisttps
pop
shrb
xchg
leave
shr
push
dec
xor
sbb
lods
cltd
sub
ljmp
cmp
outsl
gs
in
pop
loop
fucomp
xchg
mov
sub
push
mov
enter
push
mov
fnstcw
mov
hlt
jp
pop
scas
in
lods
lret
aaa
std
outsl
lahf
imul
dec
int
xchg
and
xchg
mov
inc
nop
loopne
or
jnp
push
jae
push
loope
shlb
scas
adc
push
or
xchg
inc
adc
sub
pop
scas
movsb
test
and
je
inc
mov
add
push
call
add
add
andb
icebp
cld
je
in
mov
into
int
adc
ficompl
push
xchg
xchg
sbb
insl
inc
std
lret
lods
cmc
xchg
mov
push
pop
sbb
loop
loopne
insb
fstl
add
in
dec
mov
fsubs
or
xchg
insb
jns
cmp
test
mov
flds
das
ja
aaa
call
arpl
mov
lret
scas
movsb
add
sbb
es
adc
fdivrs
mov
xor
insb
push
or
arpl
andb
push
sbb
fcoms
jmp
mov
lods
roll
lock
inc
add
mov
push
stos
mov
xchg
and
xchg
sbb
adc
mov
jp
sldt
cmpsl
ja
scas
xorb
push
push
scas
mov
enter
mov
stos
mov
pop
ljmp
sub
jge
das
scas
lcall
mov
sub
mov
sub
test
dec
push
cwtl
push
inc
and
cld
jnp
inc
xlat
fnsetpm(287
jmp
popf
xchg
cmp
mov
clc
mov
outsb
arpl
lea
movsb
stos
scas
faddl
xchg
fwait
mov
push
jle
int3
push
vmovdqa
or
insb
int
aas
ljmp
ja
xchg
sbb
ficomps
mov
push
xchg
adc
mov
cwtl
mov
je
jle
and
adc
push
mov
or
adc
jns
add
ret
jmp
jmp
pop
xchg
scas
adc
cmp
push
sub
push
cmc
pop
outsb
in
cmp
jae
fwait
mov
pop
or
scas
mov
mov
push
inc
sbb
ret
shll
mov
mov
sbb
pop
xor
ljmp
pusha
lret
aas
or
fucom
or
pop
addr16
fnstenv
add
in
shll
scas
pop
cmp
cmp
hlt
cmc
andl
xlat
jle
jo
test
push
ficoml
sbb
xchg
mov
jns
ret
lret
aas
js
jo
movsl
movsl
ret
mov
xor
arpl
cld
loope
sahf
rolb
xchg
cwtl
rol
sti
and
std
mov
jno
lret
or
add
push
dec
mov
cmp
loope
mov
int3
and
jmp
cmp
popf
or
pusha
jle
fwait
mov
mov
cmp
lock
and
xchg
pop
ror
mov
aaa
test
dec
insl
xor
sahf
mov
scas
in
add
inc
cli
sar
mov
xchg
popa
roll
inc
cmc
std
adc
sub
cmp
sub
inc
outsl
insl
xchg
adc
fimull
cmp
lods
lahf
mov
pop
jl
in
mov
pop
dec
and
pop
dec
cmovs
cmp
lods
mov
pop
outsl
fldenv
xchg
or
cltd
ss
cmp
sarl
orl
xchg
fs
mov
sub
repnz
cmp
outsb
add
lret
jmp
mov
ret
cs
mov
sti
loop
mov
dec
dec
out
cs
test
je
dec
mov
push
orb
sti
sbb
or
idiv
fucomi
clc
mul
cmp
sbb
test
jg
adc
aam
or
inc
and
push
cmp
js
dec
jbe
add
or
jo
cs
aad
mov
jp
xor
imul
cli
das
lods
dec
adc
adc
outsl
push
mov
mov
mov
mov
loop
fwait
mov
dec
ja
mov
cltd
pop
pop
nop
jl
in
dec
stc
lret
or
aad
test
out
je
sub
adc
lds
sbb
jb
les
ret
sti
add
push
xchg
daa
scas
push
addr16
pop
test
lods
pop
ds
and
in
cmp
and
dec
hlt
push
fnstcw
cmpl
mov
inc
or
cld
repz
xchg
or
pop
out
add
arpl
mov
data16
sbb
fs
pop
movsb
faddl
or
sub
inc
pop
pushf
dec
xor
or
bound
jns
jge
jecxz
aas
xchg
xchg
stos
das
repnz
lea
ss
pusha
and
jbe
sbb
aam
movsl
add
arpl
fsubrp
loopne
cmc
sbb
cmp
add
cmp
cld
xor
jmp
out
fidivl
stos
lods
cmp
in
jmp
out
sub
lods
inc
notl
test
add
push
xor
adc
push
or
mov
test
sub
mov
push
inc
cwtl
mov
popa
daa
dec
jle
push
test
mov
pop
inc
jns
xor
pushf
xor
sub
push
mov
lds
sub
iret
sub
sub
punpcklbw
pop
cmpsl
mov
add
push
sub
xor
push
ja
and
cmp
pop
fwait
std
js
subb
fadd
iret
mov
sarb
inc
jge
scas
push
mov
cmp
cs
sub
popa
jns
ret
aas
push
jmp
cmpsl
fwait
dec
aad
or
dec
push
jb
mov
jge
xlat
movups
fnstsw
lds
cmp
and
ret
lahf
xor
scas
or
ljmp
inc
sub
not
mov
and
sbb
sarl
aam
pop
mov
add
adc
fidivs
in
rcrb
push
jecxz,pt
xor
movsl
clc
std
jecxz
xor
and
dec
jge
aaa
jp
add
push
xor
int
shll
push
insb
or
roll
and
jge
jae
inc
pop
in
adc
adc
ljmp
adc
ja
push
mull
inc
int3
add
sub
movsb
loop
ret
insl
push
xchg
adc
lea
lods
cmp
pop
cmp
dec
and
mov
mov
aad
pop
out
mov
fsubs
lcall
push
mov
dec
mov
xchg
pop
cmp
shl
pop
xchg
dec
adc
mov
sar
push
xchg
mov
xor
xor
dec
inc
jge
and
mov
repz
push
out
roll
push
js
xorl
jno
lods
sub
jae
push
insl
or
orl
pop
jp
and
orl
loopne
or
cmp
adc
loop
inc
fistps
out
in
out
pop
lods
cmovle
jbe
dec
in
test
rcr
push
das
and
jbe
out
sub
push
dec
mov
dec
xor
cmpsb
xor
sub
gs
dec
xor
jmp
jb
mov
jo
jns
enter
inc
push
push
mov
rorb
mov
daa
xor
push
sub
push
dec
mov
scas
dec
mov
cld
jl
cmpsb
push
pushf
scas
test
outsl
mov
jno
rcl
bound
push
imul
dec
dec
pop
jge
cmp
and
in
sub
cmpsb
in
test
pop
outsb
mov
mov
jmp
mov
out
cmpsl
or
fisubrl
cmpsl
push
inc
imul
ss
xlat
push
into
jmp
add
movsl
mov
popa
xchg
cld
pop
inc
mov
add
nop
rorb
push
push
test
nop
jl
sbb
inc
mov
test
inc
inc
dec
in
sti
and
and
xchg
mov
adc
lret
popa
ss
pushf
mov
push
mov
shlb
aaa
push
aas
ret
add
frstor
fcomps
or
cwtl
mov
push
lret
sub
dec
aad
pop
imul
and
adc
adc
call
and
push
scas
cmp
or
pop
stc
fidivrs
clc
call
ljmp
cmp
out
jns
inc
jp
dec
sbb
pop
jo
test
and
inc
out
mov
mov
scas
push
orl
jno
inc
xchg
dec
add
out
lahf
push
int
stos
ficoml
addr16
add
mov
mov
fs
xchg
inc
dec
pop
enter
pop
ja
xor
push
inc
sub
add
dec
jns
mov
push
sub
lock
xchg
xchg
mov
movsl
in
sarb
adc
cmp
pop
mov
roll
sub
fs
rorl
ret
xchg
jg
out
adc
mov
sahf
cli
xchg
inc
inc
add
add
dec
int
rcrl
gs
mov
ret
pop
inc
insl
pop
rolb
and
pop
rolb
cli
out
pop
je
sub
adc
cmpsb
push
aad
xchg
imul
or
inc
call
xchg
jne
dec
mov
pop
mov
lods
popf
push
mov
xchg
cmpsl
lods
push
lret
cltd
sbb
shlb
and
call
repnz
popf
push
jo
rorl
cmp
add
ficoms
in
and
fdivrl
scas
in
into
fistl
fs
xchg
jg
xchg
mov
jb
cmp
xchg
rcl
sub
fdiv
outsl
xor
adc
das
pop
lahf
xchg
jge
je
shr
fdiv
push
into
jp
testl
ret
aad
inc
into
out
inc
ja
add
sub
or
je
enter
pxor
cmc
stos
adc
push
aam
xor
imul
cmp
pop
enter
jbe
mov
inc
repnz
ret
cmc
and
adc
add
jb
bound
mov
mov
inc
repnz
ret
cmc
and
adc
add
jb
bound
mov
mov
inc
repnz
ret
sub
add
jb
arpl
mov
mov
inc
lock
inc
add
mov
cmp
mov
mov
test
lcall
cmc
cmp
fs
je
push
gs
loope
xchg
mov
test
hlt
in
cmc
aam
es
adc
pop
push
movsb
gs
jne
cmp
pushf
insl
mov
sti
fdiv
into
popa
ss
dec
jno
adc
and
sub
movsl
lock
rorl
sub
inc
scas
es
add
jno
imul
xor
outsl
push
or
js
rep
popa
fsubl
loope
and
mov
jnp
shlb
rcr
mov
hlt
in
mov
cmp
adc
xchg
push
je
je
mov
std
mov
test
cmp
aad
sbb
lret
mov
aaa
push
mov
jp,pt
cwtl
push
test
je
les
outsb
xchg
jle
and
inc
jo
add
stos
jp
or
dec
pop
cmp
cmp
sbb
rcrb
adc
lods
adc
add
aaa
push
add
jbe
fisubs
mov
in
hlt
in
push
int
cmp
sub
sbb
pop
arpl
jne
in
shl
roll
mov
mov
inc
push
push
jnp
or
daa
or
adc
enter
xlat
hlt
aam
lods
xchg
mov
adc
inc
push
and
push
cmp
or
xor
jmp
in
loope
mov
hlt
in
cmc
aam
and
xor
add
adc
fs
je
inc
jne
test
xchg
hlt
in
cmc
aam
and
xor
add
adc
fs
je
inc
jne
test
xchg
fnstcw
cmp
mov
pop
inc
mov
sbb
push
mov
mov
sbb
les
sbb
add
add
xor
rclb
sbb
int
or
lahf
push
mov
mov
xor
fildll
cmp
jbe
aas
and
std
mov
movl
mov
mov
int
std
or
cmp
pop
scas
sub
aas
scas
loop
pop
xor
iret
insl
outsb
mov
call
xchg
dec
fisttps
ss
lds
sar
dec
outsb
lods
xchg
movsl
jne
cwtl
pop
cmp
cmpsb
mov
mov
xor
out
andl
ss
mov
daa
push
shlb
ret
xor
sub
imul
inc
pop
inc
dec
idiv
push
jg
shl
mov
inc
std
sub
lods
ljmp
aas
addr16
ds
mov
mov
dec
and
dec
in
cmp
aaa
jge
in
jp
sbb
loopne
adcl
inc
es
decb
lods
aaa
add
jno
daa
dec
dec
cld
push
shll
or
cld
iret
push
xchg
inc
in
cmp
xchg
movsl
push
adc
jns
shlb
mov
and
add
cmpsb
pop
xchg
xchg
pushf
rol
cltd
aam
loop
sti
leave
pushf
mov
sub
and
add
add
or
inc
sub
ret
dec
cmp
ficoml
mov
sti
mov
mov
rcr
mov
test
ret
or
push
fmull
sub
loopne
test
xchg
sahf
mov
push
mov
adcl
lods
iret
int
fistl
repnz
inc
stos
mov
ja
or
mov
lods
mov
and
xchg
sub
ret
mov
jns
out
sbb
mov
or
push
roll
popf
mov
xchg
xchg
or
lock
push
and
push
fisubl
jecxz
ret
jge
jmp
std
fcoml
jecxz
add
fistpll
or
xchg
scas
pop
cmp
xchg
ja
jg
cwtl
cmpl
adc
fistpl
jns
mov
vcvtpd2dqy
repnz
inc
enter
dec
mov
in
sbb
push
in
dec
xchg
dec
xchg
fsubrl
out
mov
pushf
arpl
aas
sub
fcomps
movsb
jl
jmp
call
inc
cwtl
iret
inc
dec
or
fistl
lret
jno
add
stos
pushf
sbb
ret
inc
cmp
push
push
sbb
aad
jmp
push
push
cld
addr16
sbb
xchg
test
jns
cwtl
popa
pop
jmp
or
mov
push
xchg
mov
push
xchg
fbld
nop
jmp
enter
push
adc
pop
in
dec
add
leave
pop
or
out
mov
mov
cmp
cmp
jb
mov
pushf
inc
scas
cmp
sub
out
xor
lret
and
cltd
ljmp
add
sti
test
stos
in
push
xchg
rcrl
aad
and
jp
nop
add
mov
cld
xchg
lds
andb
pop
rcr
xor
repnz
mov
enter
lcall
jo
lods
dec
imul
lock
lods
cmpsl
adc
fildll
xchg
out
ljmp
and
jp
inc
push
inc
std
mov
out
jno
lret
push
adc
mov
xchg
cmp
mov
adcb
pop
jl
pop
lods
or
stc
jno
and
rcrl
pop
xor
mov
dec
cmp
sbb
xchg
or
adc
stos
lret
push
dec
jecxz
testl
pop
sti
sub
jge
scas
scas
sbb
test
out
mov
das
dec
inc
outsb
dec
and
push
ret
or
es
adc
mov
push
idiv
inc
out
jg
out
fldt
clc
imul
or
push
addl
in
jmp
ret
stc
and
sub
fnstenv
xchg
ja
fmuls
sub
sbb
push
int3
iret
insl
add
filds
mov
repz
jno
push
mov
lahf
xchg
stos
clc
mov
daa
mov
stos
lahf
loopne
testl
inc
leave
rcll
popf
jp
cmp
xchg
mov
cld
gs
add
rcll
lret
test
mov
cmpsl
sbb
dec
pop
das
orb
push
mov
pop
mov
dec
test
mov
sub
or
jae
shrl
jbe
ret
xor
shll
inc
xchg
sahf
scas
gs
icebp
sub
fcmove
push
mov
in
cli
mov
push
std
cmp
jge
dec
bound
sub
imul
pop
add
sbb
pop
imul
dec
in
inc
fcompl
cmpsb
repnz
dec
test
jb
into
movsb
mov
mov
push
call
gs
out
mov
mov
inc
mov
cltd
pushf
out
nop
jmp
and
mov
jne
xor
enter
ds
add
cs
and
stc
adc
xor
std
rcl
stos
push
inc
ljmp
mov
fmul
pusha
sub
data16
mov
adc
nop
mov
xchg
jmp
aaa
sti
outsb
inc
xor
jle
outsl
iret
jno
insl
cmpsb
and
mov
push
mov
pop
jnp
xchg
or
sar
ljmp
push
push
or
int
clc
lock
stc
sti
fistl
fwait
push
or
std
fcomps
fsubs
add
mov
jns
stos
adc
mov
mov
jge
mov
push
dec
pop
aam
cmpsl
or
mov
jecxz
cmpsb
arpl
imul
cld
jae
sbb
mov
cs
xchg
aam
mov
lcall
mov
stos
mov
test
lods
mov
jmp
xchg
clc
or
push
sbb
jecxz
add
sub
js
pop
sub
aaa
out
and
jge
inc
push
in
pop
ja
jne
mov
rorb
scas
push
inc
std
fnstcw
sbb
pop
dec
pop
fmull
fistps
pop
xor
stc
repnz
aad
setne
in
pushf
pop
add
cmp
mov
test
xor
das
inc
insl
dec
out
inc
pop
push
and
xor
in
dec
dec
outsb
ja
jg
mov
xchg
adc
or
test
pop
loopne
sbb
jecxz
stos
push
pop
mov
jge
scas
xchg
push
or
imul
fisubrs
cmp
mov
jp
loop
lret
clc
loop
mov
lods
mov
movsl
jp
or
nopl
sub
popa
cmp
mov
sbb
clc
dec
mov
in
mov
insl
popf
and
out
and
pop
dec
jae
ret
mov
and
inc
cmp
std
cli
shlb
and
dec
pop
mov
es
mov
lods
repz
jo
out
inc
jae
cld
ret
and
sub
lret
je
frstor
gs
fiadds
mov
int3
scas
std
fisubl
hlt
stos
clc
sub
dec
cmpsb
cmp
cs
add
lcall
pop
jbe,pt
xor
pop
mov
jmp
xchg
dec
cmp
add
mov
roll
imul
adc
xchg
jb
and
mov
hlt
mov
or
outsb
jae
mov
inc
int3
and
mov
jmp
cmp
outsb
jae
inc
cld
cmpsb
jle
xchg
int
pop
fstps
cmpsl
lods
stc
push
xchg
mov
mov
fbld
mov
dec
ret
jl
mov
js
loopne
mov
mov
in
leave
pushl
test
sbb
add
mov
cmp
sbb
dec
dec
pop
pop
imul
mov
mov
outsb
lea
mov
nop
mov
sub
dec
or
ret
jbe
jnp
cmc
fdiv
inc
sbbl
sub
xchg
xchg
repz
fdivrl
mov
inc
jle
subl
lds
repnz
sbb
and
push
and
ja
fdivrs
mov
or
out
xor
mov
lcall
push
arpl
stos
rorb
popa
test
rorl
xchg
pop
cmp
lcall
mov
mov
ret
or
pop
cmovg
or
mov
xchg
stos
adc
cmp
or
divb
mov
sar
cld
cmc
and
int
cmp
add
sbb
push
inc
cld
dec
lret
in
push
inc
sub
loopne
stos
pop
pop
adc
loop
mov
xchg
imul
out
movb
sbb
insb
xchg
aam
pop
dec
in
and
mov
sub
aas
sub
test
sub
jge
out
lret
adc
lds
mov
in
add
stc
rcrl
inc
sahf
cmpsl
repnz
mov
movsb
push
pop
xchg
scas
push
aad
mov
in
adc
xchg
jo
test
sbb
roll
mov
jne
inc
ds
push
adc
inc
fstps
add
scas
out
outsb
adc
push
iret
or
aaa
adc
push
mov
lods
std
xor
enter
mov
pop
stc
and
pop
adcl
lock
sbb
inc
adc
aam
jmp
out
in
inc
rcrl
je
lret
outsl
stos
enter
dec
btr
push
lock
push
push
fs
fwait
enter
das
rclb
mov
test
test
dec
out
pop
dec
jg
mov
xor
pop
xchg
mov
jb
out
cmp
in
add
dec
shll
sbb
mov
adc
cmpsl
test
or
jmp
push
add
cmp
xor
dec
inc
in
lret
out
sbb
push
lahf
mov
jne
cs
sub
mov
pop
loope
shrb
adc
arpl
sbb
or
jmp
imul
dec
or
test
ja
ja
mov
lds
and
out
mov
adc
sub
repz
andl
adc
push
xlat
icebp
add
add
add
imul
mov
and
les
and
ret
icebp
lock
stc
sar
lret
mov
out
pop
xor
pop
int3
cmp
mov
imul
adc
add
dec
sub
xor
or
aad
add
scas
sub
xlat
mov
sub
cmp
out
loop
mov
stc
lods
and
inc
mov
lds
push
xor
fcompl
outsb
or
adc
cmp
inc
stos
out
inc
aam
mov
pop
int3
xor
sarb
push
inc
ljmp
stc
and
jno
adc
pop
xchg
leave
leave
adc
pop
das
loope
imul
xor
sbb
enter
push
not
mov
lea
loopne
xor
sarb
fildll
imul
xorb
and
in
sub
xchg
negl
mov
dec
fcmovu
push
scas
div
xchg
mov
mov
add
inc
pop
les
or
mov
not
mov
xchg
shlb
push
jg
dec
adc
or
out
insl
in
or
push
bound
cwtl
insb
out
test
inc
andl
jno
xor
push
sbb
lahf
je
mov
popa
or
sti
not
cld
cmp
or
ret
jl
or
cmp
cmp
shrb
pop
cmp
xchg
shrl
aaa
mov
fadds
cld
repz
jmp
popf
mov
mov
or
jo
cltd
jo
mov
cwtl
imul
lods
and
arpl
imulb
xchg
push
push
jbe
inc
jl
and
cmpl
mov
or
jecxz
sti
xor
cli
push
aas
popf
inc
das
mov
rcrl
scas
movl
rcrl
fs
mov
inc
mov
mov
mov
cli
lret
fisttps
das
or
mov
popf
mov
jb
jno
xor
dec
sbb
hlt
hlt
sahf
and
cmpl
lods
and
mov
jb
push
test
adc
lea
loope
and
mov
add
jb
loope
cs
xchg
arpl
sub
or
dec
pop
fists
in
imul
arpl
inc
add
fwait
jne
rclb
jno
aaa
jnp
jb
push
ss
inc
std
fistps
lret
mov
pop
and
mov
mov
movsb
jbe
sbb
stos
shrl
inc
jo
cmp
adc
push
sbb
lds
leave
cmp
dec
push
xchg
inc
sbb
gs
imul
push
loope
jno
imul
mov
enter
sbb
scas
mov
test
fwait
xor
xor
movsl
cmp
cmpsl
ret
mov
mov
jbe
enter
cltd
icebp
inc
sti
add
add
test
and
gs
cs
jle
fidivrl
outsb
fidivl
cmp
dec
shrb
lea
xlat
add
ret
rcll
mull
ret
push
dec
sar
popa
lea
adc
add
xor
and
xor
pop
adc
dec
push
jmp
stc
aaa
std
scas
and
stos
test
inc
data16
xchg
loopne
pop
mov
out
stc
mov
push
frstor
cmp
cltd
mov
pop
outsb
push
push
pop
roll
xchg
out
add
bound
xchg
insb
std
aaa
ds
sub
adc
inc
or
mov
arpl
cmp
and
xor
inc
cmpsl
add
adc
sarb
adc
dec
jp
in
lahf
out
mov
and
ss
aaa
rolb
pop
jns
ds
sbb
jmp
cmc
stos
mov
imul
fisubrs
pop
push
popf
imul
call
jecxz
jle
sub
out
movsl
repnz
pop
cld
call
imul
lahf
or
mov
mov
out
jb
sub
rclb
dec
stc
add
pop
add
nop
out
adc
rorl
pop
xchg
and
xor
movsl
es
mov
jmp
add
movl
mov
jae
int
adc
add
into
arpl
jns
inc
roll
mov
mov
dec
loop
lahf
cmc
and
andl
and
aad
mov
icebp
sub
jg
jl
stos
xchg
push
fidivs
int3
and
xor
test
pop
push
cmp
pop
dec
and
hlt
fisubrl
lcall
jnp
xchg
or
inc
cs
xchg
xchg
sub
mov
aas
cmpsb
int
or
clc
jnp
inc
sub
nop
xor
int
mov
adc
sti
js
nop
cmovae
mov
dec
push
loop
mov
mov
shl
jo
pop
rorl
and
aam
daa
in
xor
dec
pushf
and
and
mov
dec
out
shrb
sti
pop
stos
out
das
jl
jmp
stos
xor
ret
movl
stc
rorb
inc
cmc
xchg
cmpsl
sbb
or
leave
xchg
test
cmpsb
sti
repnz
adc
and
dec
ja
stos
xrelease
mov
jge
lahf
mov
push
mov
jge
into
mov
test
addr16
mov
dec
fisubl
outsb
or
push
inc
sub
ret
ja
jnp
jl
ljmp
enter
jnp
stos
push
mov
xor
mov
xchg
mov
sbb
clc
cmp
push
jbe
jl
cmpl
enter
loop
mov
out
mov
dec
int
lahf
or
jp
push
fs
insl
cmp
adc
nop
cs
push
loopne
lock
imul
rdtsc
in
lret
or
mov
push
fsubl
sub
xchg
pop
fs
es
out
cld
repz
jmp
daa
loop
aam
sbb
aaa
cmpb
sub
push
mov
filds
sub
add
cmp
fsubs
test
xchg
push
aas
add
sbb
mov
lods
out
mov
fiaddl
mov
popf
negl
clc
sbb
out
scas
pusha
pop
stos
aad
lret
push
push
in
fwait
push
pop
movsb
inc
addr16
out
in
inc
pop
pop
mov
aam
push
mov
mov
std
ret
push
in
jmp
jecxz
pop
adc
insl
inc
jp
or
inc
push
sbb
dec
ss
and
adc
jb
and
inc
repnz
test
out
add
dec
cs
inc
lcall
aaa
test
cmpsl
jl
adc
mov
notb
or
jne
inc
adc
xor
mov
xor
or
iret
std
lahf
jle
cld
rorb
adc
aas
lods
clc
sbb
outsl
jno
test
sbbl
ret
pop
iret
cmp
loopne
lahf
push
mov
test
dec
sbb
std
lahf
jle
stc
ljmp
repnz
xor
or
mov
sbb
or
gs
ret
sarl
add
pop
mov
lock
sahf
mov
jo
enter
pop
push
adc
lods
jmp
xchg
adc
dec
cmp
push
adc
add
push
and
paddsb
test
xchg
mov
xor
movsl
sub
cmc
cmp
or
lods
neg
dec
cltd
aam
out
jne
lret
mov
adcl
or
iret
jae
jge
cmpsb
jl
jnp
fsubrs
insl
mov
out
and
sti
lods
sarb
jge
fcomi
lock
out
mov
scas
out
insb
rcrl
les
outsb
push
dec
sub
les
mov
movl
add
jp
sub
mov
pushf
jnp
pop
xchg
jne
rolb
fisubs
xchg
sub
jg
mov
je
insb
mov
pushl
jae
fstpl
add
test
fisttps
and
jl
xchg
je
stos
hlt
stos
sbb
mov
mov
mov
imul
shll
fldenv
add
push
fsubr
push
sbb
insl
mov
in
push
dec
or
mov
jbe
dec
test
mov
push
sbb
or
clc
mov
xchg
sub
lods
fldcw
xchg
xlat
mov
xchg
mov
xchg
sub
add
xor
and
push
jb
push
ret
push
fcoml
loopne
adc
or
enter
push
lods
movsb
int3
cmp
jecxz
cmp
add
les
fdivs
shr
out
sub
or
outsl
shl
cli
sbb
into
sahf
cmp
addl
pop
inc
pop
mov
into
xchg
dec
mov
or
jae
stos
mulb
mov
icebp
or
mov
dec
das
pop
or
push
push
lret
pop
out
sub
aam
mov
imul
in
adc
fadds
sub
lds
ds
mov
sbb
scas
scas
out
imul
cltd
jecxz
aaa
andb
add
jo
push
outsb
and
mov
mov
pop
in
inc
das
mov
sarl
and
adc
xor
jge
andl
adc
fimuls
mov
sar
mov
xor
push
mov
or
and
cmp
dec
jns
mov
push
roll
adc
xor
scas
ret
jnp
pop
jno
out
arpl
test
scas
xchg
ret
pushf
movsb
sti
les
push
cmp
fsubl
loopne
push
add
pop
pop
push
push
push
sbb
sahf
lods
pop
shr
xchg
daa
ret
rorl
clc
add
in
dec
xor
pop
fs
mov
gs
dec
dec
jle
inc
fistpl
adc
ds
stc
jecxz
pop
cmp
outsl
dec
mov
addr16
out
cli
add
cmp
add
add
daa
mov
shrl
dec
push
xor
lods
push
jbe
outsl
push
jno
mov
xchg
cltd
in
add
add
call
icebp
frstor
cmc
adc
sub
dec
roll
mov
sbb
cltd
lock
sbb
hlt
outsl
mov
push
ljmp
jb
pusha
shr
enter
and
add
mov
fistpll
jo
addr16
mov
cmp
jge
subl
jne
and
popf
imul
xlat
lcall
add
iret
fiaddl
pop
ret
gs
mov
jns
test
movsl
xlat
dec
test
test
sbb
and
outsb
into
push
xchg
fwait
sarb
push
or
xor
mov
imul
in
cmc
aam
and
xor
add
adc
fs
je
inc
jne
test
xchg
hlt
in
cmc
aam
and
xor
add
adc
fs
je
inc
jne
test
xchg
push
in
hlt
in
xor
xor
add
adc
gs
popf
push
xchg
movsb
leave
mov
test
hlt
in
jne
add
add
arpl
in
fisttpll
or
sbb
sub
cmp
test
sub
pop
lods
jae
mov
jge
dec
mov
mov
or
sbb
sub
cmp
dec
lods
pop
mov
mov
sbb
or
stc
sbb
sub
cmp
dec
lods
pop
mov
mov
mov
pop
leave
push
xchg
sbb
sub
rcrb
push
sbbl
ljmp
inc
mov
and
mov
push
dec
inc
shlb
pop
fcom
mov
mov
out
cmp
and
loop
daa
jno
nop
int
test
sub
std
mov
stc
xchg
or
sbb
add
dec
mov
add
sbb
push
mov
or
push
int3
nop
testb
and
lods
pop
test
cwtl
cmp
popa
xchg
iret
sub
les
mov
jnp
add
stos
mov
mov
stos
xor
clc
jns
ficomps
imul
cmp
sbb
std
sub
cmp
dec
lods
pop
mov
mov
jge
dec
mov
cmp
dec
subb
movsb
push
mov
shrl
or
or
or
dec
movswl
jl
dec
int
scas
dec
in
fsts
cli
sub
stos
sub
xor
dec
mov
test
dec
insb
movsb
sbb
add
lea
mov
jge
dec
mov
cmp
or
sbb
sub
cmp
dec
lods
pop
mov
mov
jge
dec
mov
cmp
or
cmp
mov
push
lcall
mov
aam
cwtl
dec
fisubrs
nop
xchg
cwtl
data16
outsl
shrl
jbe,pn
jg
divb
jle
test
je
mov
pop
mov
mov
mov
xchg
aaa
mov
lea
push
setg
movsb
xor
imul
xor
cwtl
dec
mov
mov
jns
inc
int3
jo
sti
stos
mov
xchg
mov
mov
mov
fwait
adc
imul
les
mov
cmpsl
inc
pop
mov
pop
into
push
test
mov
push
rcl
jecxz
aad
dec
sub
das
sub
pop
outsb
adc
pop
aad
or
mov
push
stos
fnstsw
adc
pusha
pop
dec
ds
pushf
jno
lods
imul
inc
in
repnz
js
sbb
out
fs
and
mov
xor
aas
dec
xor
dec
lock
clc
int3
es
test
out
or
mov
inc
lds
xchg
cltd
not
or
enter
mov
sub
jae
aad
lds
mov
rcr
repz
es
cld
arpl
sbbl
jbe
lods
cld
mov
repnz
fbld
hlt
xchg
aam
inc
add
xor
cld
aaa
and
fs
xor
popa
adc
dec
jp
ja
into
insb
clc
testl
ficomps
mov
hlt
imul
add
push
adc
das
lcall
nop
sbb
pop
pop
xor
or
cltd
adc
mov
cmpb
pop
cmpb
xor
inc
pop
cmp
push
nop
decb
sbb
mov
jmp
loope
stos
cltd
and
inc
aaa
xor
lods
out
test
and
into
sbb
call
sbb
cmp
lea
cmp
push
mov
add
dec
lcall
cmp
out
jne
xchg
pop
filds
insb
out
testl
pop
cwtl
dec
lds
inc
xchg
lods
lds
sub
push
sbb
lea
mov
and
and
mov
pushf
loopne
mov
pop
scas
sahf
dec
sbb
sub
add
pop
push
stc
jnp
or
jno
je
jle
out
inc
jbe
out
imul
add
pop
fisubs
xchg
cltd
fwait
inc
pop
aad
out
bound
in
out
push
gs
nop
xchg
cmpsb
jb
cmc
xor
and
mov
hlt
pop
das
lcall
mov
adc
xchg
je
mov
js
sub
push
repnz
fucomp
mov
push
mov
stc
cmpsb
call
out
jo
aam
or
repnz
and
jp
push
or
xor
cmp
or
mov
push
push
out
xlat
test
testl
push
repnz
icebp
scas
test
sub
push
and
shlb
add
or
dec
test
mov
mov
test
adc
popl
leave
jbe
push
cmpsl
clc
fwait
pop
das
jno
arpl
xchg
jge
pop
call
xor
jb
mov
outsl
pop
aam
push
jle
lcall
dec
fmul
leave
int
das
jo
movsl
mov
mov
les
inc
cmp
adc
filds
sub
mov
loopne
je
push
pushf
movsl
repz
lds
push
repz
popa
aam
push
pop
stos
popa
inc
sub
out
dec
ret
hlt
adc
push
mov
cmpsb
cli
mov
nop
mov
add
sub
push
mov
mov
jg
lods
pop
cmp
push
sub
aam
add
std
xlat
add
popf
jnp
mov
mov
out
mov
roll
repz
dec
mov
pop
dec
sub
mov
push
adc
jnp
pop
insl
inc
xor
add
dec
or
or
mov
add
lods
and
add
xchg
mov
imul
fdivrp
nop
popa
int
xchg
pop
cmpl
xor
push
outsb
mov
popa
xlat
xchg
jno
fnstenv
dec
pop
adc
push
adc
hlt
mov
or
jns
aas
leave
add
inc
mov
mov
cmpsb
icebp
inc
push
js
sbb
mov
repnz
xor
inc
imul
push
sbb
cmp
popf
shlb
outsl
rol
xchg
testb
cmp
test
lea
pop
mov
mov
mov
mov
cmpl
jecxz
dec
repz
cmp
add
push
adc
jg
cld
enter
sub
adc
mov
in
adc
mov
pop
xchg
lret
xor
mov
push
and
popa
icebp
dec
addr16
mov
lahf
test
mov
inc
push
xor
fsub
xlat
jmp
xor
addr16
popa
lret
lahf
popa
call
in
lock
in
cmpl
inc
jecxz
fiadds
xor
mov
fcoml
andb
pop
out
jns
or
lret
push
dec
in
leave
aad
cwtl
mov
xor
jne
sub
mov
mov
add
decl
int
xor
inc
aaa
aaa
cmp
ss
push
loope
push
loop
in
adc
int3
add
add
mov
jne
call
lret
scas
mov
add
cmc
test
cli
out
sahf
xor
test
push
popf
sbb
rcrl
xchg
fistpll
mov
sub
cmovae
xor
leave
push
call
jno
jl
and
sub
bound
lds
cmp
jp
xor
icebp
lea
push
outsl
jge
jge
scas
cmpsb
mov
jge
and
stos
xor
fldln2
mov
and
cltd
rcl
inc
aaa
stc
dec
rcrl
xchg
enter
xchg
std
cmp
in
pop
sub
gs
adc
test
adc
xor
ror
popf
push
stc
out
sbb
shll
ficompl
jge
mov
sbb
inc
call
cmp
cwtl
rcr
mov
push
jno
nop
mov
add
inc
mov
and
lods
and
imul
mov
mov
cwtd
xchg
test
imul
cmovbe
inc
enter
notl
out
gs
cmp
or
cmp
push
addl
adc
cmp
mov
xchg
mov
dec
sbb
adc
nop
into
outsl
mov
in
dec
and
jge
sbb
popa
bound
test
movsb
test
inc
mov
pusha
data16
pusha
mov
mov
and
pusha
sub
and
jbe
scas
pop
sub
bound
call
rcl
out
mov
mov
scas
scas
sbb
mov
pop
dec
mov
inc
jmp
dec
mov
lods
pop
mov
push
xchg
fcom
push
mov
push
iret
insl
sbb
repnz
jle
sub
je
jecxz
cwtl
dec
and
cli
xchg
cmp
mov
mov
push
loopne
xor
inc
jno
dec
xchg
push
shlb
add
loop
or
xlat
sbb
mov
and
dec
nop
enter
xchg
inc
and
out
jns
mov
jnp
ss
clc
insb
mov
in
push
mov
xchg
and
cmp
add
ds
push
cmp
hlt
pop
add
cli
adc
pushf
or
lods
sub
imul
xchg
out
jl
sub
sahf
jne
lock
push
pop
xchg
adc
iret
mov
push
inc
test
mov
dec
pop
lret
rclb
cmp
scas
scas
sbb
cmp
cmp
and
loop
cltd
mov
mov
sub
icebp
jmp
std
loopne
jmp
and
and
inc
arpl
add
repnz
stos
xchg
pop
mov
out
inc
filds
jae
xchg
mov
jg
out
scas
cmp
mov
stos
ja
push
mov
jg
hlt
push
xchg
mov
jno
mov
cmp
push
adc
pop
popf
ljmp
bswap
sbb
sbb
adc
ret
xchg
js
mov
push
jae
jns
int
mov
sbb
aas
aad
lock
dec
aaa
dec
inc
addl
in
ja
inc
mov
into
or
adc
sti
jmp
dec
sbb
repnz
mov
test
out
xchg
jno
jecxz
or
fildll
addr16
das
hlt
sbb
mov
pop
xchg
lret
sbb
push
mov
lea
mov
loope
or
add
sub
adc
fsubrl
and
lcall
or
and
mov
ret
push
in
inc
push
inc
xor
cmp
lods
inc
pop
jae
mov
in
shlb
test
flds
mov
ficoml
cli
and
pop
in
sub
mov
dec
pop
aad
jmp
ss
bound
xor
stos
shrl
insl
jo
daa
mov
lcall
in
lcall
mov
mov
add
push
push
fwait
es
mov
pop
rcrb
cltd
mov
sarl
aam
xchg
cltd
addr16
lods
lods
arpl
xchg
push
mov
sub
sbb
movsl
mov
sbb
outsb
or
and
ret
dec
mov
shrb
sbb
jecxz
inc
in
dec
sbb
sub
std
sbb
int3
orb
std
push
or
pop
xor
mov
aad
push
lock
xchg
aad
xor
cwtl
mov
cmpsb
outsb
mov
and
dec
push
jb
mov
hlt
mulb
inc
stos
dec
bound
add
mov
sahf
sbb
enter
cs
test
rol
gs
or
paddq
jb
movsb
leave
and
icebp
and
and
xchg
pop
in
sub
fcom
adc
sbb
sbb
test
fs
imul
adc
lcall
std
call
cld
mov
jg
push
outsl
and
jne
lcallw
lea
decl
xchg
cmp
xor
jle
add
mov
lret
hlt
ss
insl
mov
push
stos
sbb
hlt
jnp
outsb
mov
call
pop
dec
movsl
or
inc
fadd
or
xchg
movsl
rcrb
int3
ja
mov
bound
leave
sbb
push
mov
popa
ja
xchg
mov
lods
cmp
hlt
mov
in
lret
cs
rcr
and
mov
movb
xor
inc
ja
dec
scas
adcl
js
test
scas
fwait
inc
inc
loopne
and
sbbb
jne
popf
mov
sbb
xchg
ja
cmp
sbb
loop
imul
add
mov
in
xchg
out
pop
dec
lods
aas
sbb
dec
sbb
mov
dec
mov
fdivrl
xchg
mov
cltd
jns
enter
faddl
popa
mov
cmp
insb
sub
cld
mov
jbe
pop
xchg
scas
xor
scas
loope
inc
sub
mov
shll
push
out
xchg
scas
jno
outsl
test
test
les
push
enter
or
insb
clc
ljmp
imul
mov
shll
xor
sbb
and
adc
ds
dec
rclb
cli
jmp
and
arpl
repnz
aam
mov
aad
ficompl
icebp
sbb
pop
jbe
fstpt
mov
pop
mov
call
xchg
loop
pop
mov
pop
push
pushf
pop
push
xor
out
pop
mov
in
cld
decl
ss
rol
adc
and
sub
shrd
pop
mov
mov
adc
jp
pushf
adc
xchg
and
adc
cli
mov
out
out
mov
push
sti
nop
xor
and
add
dec
testb
and
jp
cmp
lret
mov
lret
add
or
jno
jne
adc
mov
insl
rcl
mov
lock
and
fdivl
push
xchg
dec
movsl
cmp
sahf
sbb
addr16
mov
rorl
dec
mov
mov
das
sbb
dec
leave
js
pop
sub
mov
mov
sbb
test
das
sbb
jns
out
push
jmp
mov
out
sbb
xchg
daa
insl
ljmp
sub
cld
ds
or
repnz
outsb
addb
testb
xor
push
mov
jbe
pop
and
pop
xor
pop
jp
div
stos
into
inc
mov
dec
adc
mov
mov
or
sbb
jmp
jl
sbb
mov
add
ds
repz
pop
adc
test
mov
sub
cmp
loop
gs
scas
adc
dec
in
shrl
into
stos
push
xchg
test
mov
arpl
xor
fisttpl
outsb
repnz
pushf
bound
test
dec
dec
push
ret
cmpsb
jno
stos
inc
dec
push
test
je
shll
mov
icebp
popf
mov
sub
xchg
insl
fcoml
out
sub
loope
aam
ljmp
xor
aad
out
xor
adc
lret
mov
jbe
lods
sbb
jne
out
inc
sbb
in
nop
inc
mov
push
pop
cmp
adc
shrl
stc
mov
dec
dec
rcrb
rcll
pop
int3
cltd
cmp
stc
xchg
mov
aad
sbb
cmp
fisubs
aas
daa
sub
dec
sub
aam
bnd
jns
mov
test
stos
xchg
sbb
xchg
inc
pushf
adc
sub
test
xchg
adc
or
stos
push
test
or
loop
test
shll
mov
std
ljmp
jl
mov
pushf
leave
stos
mov
dec
dec
fidivs
xchg
jmp
ja
mov
add
mov
or
inc
or
ljmp
popf
xchg
int
cmp
popf
jp
jle
test
jle
sbb
jp
mov
lret
ljmp
lcall
inc
and
xor
jp
inc
leave
pusha
in
ja
addl
ljmp
int3
cmc
adc
cmpsl
xor
sbb
aam
cwtl
nop
dec
mov
adc
sub
push
pushf
lcall
sbb
data16
sbb
mov
cmc
insb
adc
xchg
out
and
jae
mulb
fiaddl
push
xchg
repnz
inc
mov
daa
bound
lret
inc
nop
rorl
lods
ja
mov
xchg
lcall
scas
sti
jmp
sub
leave
fisubrs
outsl
mov
xchg
inc
mov
daa
push
dec
icebp
xchg
pop
mov
jnp
cmp
adc
into
mov
jb
sub
mov
fcmovne
jmp
mov
aas
loopne
mov
mov
inc
mov
dec
divl
sub
loope
and
mov
js
mov
add
shrb
test
dec
pushw
adcl
lahf
push
mov
xlat
mov
dec
dec
inc
sarl
pop
roll
fcoms
pop
ret
hlt
xor
mov
xor
pop
push
jae
int
or
adc
xchg
aam
in
out
clc
mov
ret
je
int3
fldcw
cmp
jo
jle
fwait
cvtpi2ps
inc
fldt
jo
pop
jno
sbb
inc
xchg
jae
mov
jmp
jno
lock
mov
cmp
scas
sbb
decl
dec
adc
es
enter
pushf
rolb
dec
ja
and
out
add
notb
sub
inc
pop
les
imul
test
dec
daa
pop
push
les
cmpsl
outsb
daa
xor
mov
push
shll
mov
aas
fs
loopne
aad
add
xchg
push
je
push
cmp
daa
shrl
push
rclb
push
test
pop
stos
sub
cli
mov
int3
push
das
sub
push
pop
ror
divb
sub
shl
notb
rclb
lods
xor
ljmp
in
icebp
sub
inc
insl
mov
popf
cwtl
sub
out
mov
xchg
loop
adc
int
cmp
imul
pop
cmp
mov
cmp
xor
xchg
jo
or
stos
xor
in
xchg
sub
repnz
fiaddl
aas
scas
sbb
xchg
popf
jno
in
and
je
add
add
cli
das
sbb
ret
mov
add
dec
cwtl
mov
push
mov
jg
inc
ljmp
sti
daa
or
mov
add
roll
pop
imull
sbbl
add
les
sbb
js
int
mov
xchg
push
inc
sbb
fistl
xchg
fbld
negb
sahf
andl
lods
aam
cmp
cmpsb
mov
movsb
test
cltd
mov
mov
lods
mov
mov
mov
jmp
mov
pop
clc
shrl
inc
or
movsl
dec
jns
and
mov
sarl
dec
lcall
mov
dec
cmp
test
test
ret
xchg
or
in
lock
push
jl
push
adc
arpl
mov
cmp
fcomps
ret
outsl
mov
divl
popa
pop
inc
jne
loop
pop
mov
mov
mov
cmp
rolb
push
adc
xorb
lret
pop
lea
mov
xor
sahf
adc
mov
ljmp
and
movl
enter
scas
mov
mov
jae
outsl
sub
inc
add
out
lret
adc
ja,pt
pop
mov
xchg
fwait
mov
dec
ja
std
cmp
daa
mov
jo
cmp
in
addl
xor
loop
sbb
lahf
popf
repnz
mov
jle
cmp
xchg
test
xor
cs
loope
jge
sbb
outsl
cmp
cmp
fsubrs
mov
cld
xor
aaa
mov
cmpsb
mov
incl
aaa
aam
cmp
cmp
out
sbb
sbb
fdivs
lahf
xchg
and
lcall
shrb
imul
and
xchg
adc
jg
add
das
pop
and
fsubrl
cmp
sub
jmp
jle
loope
call
jecxz
mov
xchg
movsl
fisttpl
inc
mov
cs
xor
test
mov
or
test
aam
outsb
ret
ljmp
gs
push
sbb
fstl
int
mov
in
cld
sub
arpl
popf
sub
pop
jbe
xor
xchg
push
into
mov
xchg
add
xchg
bound
lds
rolb
mov
push
or
fcoms
and
punpckldq
lahf
aas
scas
cli
scas
mov
in
aam
lcall
leave
mov
mov
clc
push
arpl
cwtl
jns
insb
bound
lret
pand
lcall
dec
pop
mov
fdivrs
subl
test
jmp
pop
pop
xlat
cmp
test
jecxz
add
pop
cli
outsb
sbb
lret
lret
or
fcoml
pop
sbb
fdivl
xchg
or
sbb
fcoml
sub
shl
pop
les
mov
push
cmp
test
pop
popf
imul
ljmp
lods
lea
sarb
push
mov
push
mov
frstor
pop
pushl
and
enter
lea
or
push
mov
jb
imul
push
and
scas
aas
xchg
add
and
pop
mov
sarl
cmp
xchg
push
ficoml
ret
fcmove
je
inc
inc
and
inc
ds
fldcw
inc
sub
sbb
data16
insb
sub
dec
dec
icebp
mov
jb
arpl
sub
dec
lcall
mov
adc
scas
aaa
add
fs
cmp
mov
addr16
cmp
in
jp
pop
fadd
inc
inc
xchg
bound
jmp
popf
stos
movsl
and
insb
add
and
mov
add
push
inc
icebp
fbstp
push
rcrb
cmp
fdivrl
push
pop
mov
jno,pn
jo
dec
add
pop
xchg
data16
add
mov
in
mov
daa
pop
add
cmp
je
ret
in
adc
int3
pop
cltd
xor
hlt
push
mov
push
test
ss
stc
xchg
fisubl
push
push
es
in
jo
mov
flds
dec
xchg
sbb
scas
fsubs
test
pop
shlb
js,pt
hlt
jo
shrl
mov
adc
test
add
adc
xlat
jbe
popa
fsubp
in
lds
mov
stc
mov
push
test
mov
xchg
xchg
pop
push
mov
pop
std
sub
cmp
dec
lods
pop
mov
mov
jge
dec
mov
cmp
or
sbb
sub
cmp
dec
lods
pop
mov
mov
jge
dec
mov
cmp
or
cltd
jge
dec
cmp
leave
lods
pop
cmp
mov
cltd
jge
dec
mov
cmp
or
sbb
sub
cmp
dec
lods
pop
mov
mov
xlat
add
sub
repnz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
cmp
or
sbb
gs
sbb
or
jb
cmp
cwtl
mov
cld
ror
repnz
sub
cmp
or
sbb
insb
inc
jl
dec
bound
cmpb
cmpsl
std
ror
loop
repnz
cmp
or
sbb
insb
inc
jl
dec
bound
sbbb
in
test
test
pop
bound
jne
arpl
sub
add
stc
popa
dec
ja
and
fwait
rolb
add
dec
loope
insb
push
jl
mov
mov
adc
arpl
lcall
shlb
push
cmc
cmp
scas
pushf
xchg
test
dec
in
cmp
fdivrl
sub
sbb
iret
aaa
sbb
adcl
pop
xchg
pop
jle
insl
insl
arpl
mov
xchg
push
bnd
mov
aas
xchg
leave
pop
mov
lods
jge
xchg
pop
pop
mov
xchg
jl
xor
les
pushf
jecxz
inc
or
dec
sti
jmp
stc
xchg
jl
testb
scas
orb
fimuls
or
sbb
insb
inc
jl
dec
bound
cmpb
ret
int3
loop
mov
add
dec
arpl
or
fadds
fdiv
push
mov
xchg
pop
outsb
dec
jle
push
push
or
aaa
pop
or
fneni(8087
icebp
lds
movsl
xchg
inc
dec
inc
jns
sub
push
dec
bound
cmpb
ret
int3
loop
repnz
cmp
or
sbb
insb
inc
jl
dec
bound
cmpb
ret
int3
loop
repnz
pop
cmp
mov
rcrl
outsl
mov
mov
insl
fcoml
in
xchg
mov
xor
loop
sub
ja
add
enter
ljmp
out
inc
jb
aad
leave
xchg
insb
adc
xor
pop
fisubs
dec
lcall
test
in
int
mov
in
push
cli
sarl
mov
add
pop
in
pop
lahf
cmp
jecxz
cwtl
pop
stos
popa
das
lret
loopne
add
fisubrs
cmp
pushf
adc
xorb
rcrl
das
nop
ljmp
into
and
add
pop
mov
rorb
inc
imul
dec
test
xor
pop
jl
add
popf
pop
xorl
xchg
inc
mov
shl
inc
inc
bound
push
xchg
xlat
mov
sbb
in
in
push
or
imul
stc
jge
pop
mov
cmp
fildll
xor
ds
aaa
clc
cli
cwtl
imul
xor
pop
inc
jne
jae
icebp
sub
lret
js
jnp
jo
clc
repz
in
jbe
out
adc
ja
stos
push
push
mov
call
push
outsl
mov
and
inc
decb
sbb
sbb
sub
loopne
lahf
test
popf
je
bswap
pop
sub
cmpsb
in
ds
jae
enter
sarl
arpl
js
mov
jmp
fbstp
cmp
sbb
add
cmc
or
je
mov
jecxz
shrl
add
outsl
sub
jecxz
push
stos
jl
icebp
add
or
xor
iret
push
outsl
lahf
and
mov
cmp
insb
mov
inc
sbb
sbb
pop
sub
cmp
mov
jge
addr16
and
and
andl
xchg
bound
jmp
xchg
jae
xor
mov
repnz
lods
incl
int3
adc
pop
test
sahf
and
stos
mov
icebp
dec
test
mov
jb,pt
in
xchg
jo,pn
mov
and
fadds
adcl
lea
xor
cli
cmp
mov
mov
pop
mov
pop
in
sbb
xchg
lret
mov
nop
cltd
mov
pop
lock
movb
fdivrs
icebp
cmp
lahf
xor
mov
dec
popf
pop
cmp
sbb
pop
inc
xchg
mov
mov
outsb
inc
sbb
xchg
in
push
pop
push
int3
mulb
inc
jecxz
xchg
addr16
mov
adc
aad
xlat
shll
inc
cmpl
and
aas
xor
push
out
xorl
repnz
pop
ss
add
xlat
cmp
mov
cmp
call
imul
dec
sbb
dec
jle
es
mov
jno
data16
pusha
dec
dec
rcll
sbb
in
sbb
jno
rolb
mov
xchg
push
nop
test
push
mov
in
outsl
rcrb
pop
arpl
pop
adc
jae
sbb
cmp
lods
cli
xor
pop
or
ja
or
mov
repnz
pop
scas
sbb
cwtl
cmp
sub
leave
and
push
cs
movsl
inc
lock
adc
fs
pop
es
mov
add
and
pop
pop
fwait
arpl
add
out
sub
icebp
mov
sub
int
add
clc
push
jno
and
imul
lds
mov
xchg
lahf
xor
xchg
jb
mov
lretw
test
cld
jp
jae
into
mov
add
mov
xchg
mov
mov
sbb
nop
pop
jne
mov
push
in
mov
fs
sub
cmp
cmp
cld
or
outsl
mov
cmp
cld
mov
daa
js
jns
cwtl
and
jl
pusha
push
lods
jae
test
leave
xor
mov
pop
adc
je
sub
pop
daa
dec
mov
push
pop
jns
mov
outsb
push
ret
repnz
insl
xor
stos
jo
push
inc
and
orb
sub
stos
push
es
push
lret
mov
dec
jo
orb
sbb
dec
xchg
ss
bswap
push
jnp
fnstcw
mov
xchg
jbe
push
jg
dec
sub
lret
mov
lods
sarb
pushf
xor
repnz
fxam
mov
out
outsl
sbb
test
mov
fld1
ds
sbb
cmpsb
inc
jg
lret
add
nop
icebp
mov
mov
jle
call
into
and
mov
jg
jo
loopne
mov
fwait
jnp
mov
icebp
mov
ss
and
cmp
iret
nop
sbb
push
mov
stc
inc
ljmp
sub
int3
aas
pop
les
lea
fs
cmpsb
fisubs
dec
insb
popa
les
pop
testb
lret
addr16
jb
jge
test
iret
sahf
or
push
dec
or
jmp
fdiv
dec
cs
push
fdivp
mov
push
xor
mov
pushf
or
lods
cmp
pop
stos
inc
movsl
mov
repnz
mov
and
gs
lock
mov
jnp
cs
hlt
fisubrs
sub
inc
jg
mov
pop
mov
testl
mov
pop
pusha
push
fildl
or
les
push
mov
add
push
pop
cmp
jg
push
sbb
pop
outsl
repnz
and
incl
loop
and
cltd
ficoml
and
ret
jg
cmp
in
out
cld
mov
jl
xchg
mov
sub
inc
cmpsb
push
mov
std
mov
lds
inc
xchg
icebp
ds
xlat
and
inc
enter
mov
mov
inc
mov
xor
xlat
sbb
pushf
les
insl
pop
and
jge
mov
fstpt
add
pop
hlt
rclb
dec
rol
fiaddl
xor
mov
cmp
dec
xor
das
push
mov
sbb
cmp
jae
push
push
xor
mov
test
pop
sbb
jne
popa
enter
gs
add
adc
cwtl
outsl
shr
enter
pop
sub
gs
out
ljmp
and
push
ss
jne
movsl
lret
pop
mov
aaa
inc
mov
xor
cmc
pop
aaa
xorb
loop
pop
xor
lods
shrb
mov
jne
inc
cltd
jae
inc
add
cmpsb
and
xchg
dec
cmp
adc
push
out
fcomp
mov
loopne
jae
pop
xchg
push
adc
adc
adc
inc
mov
dec
push
leave
and
shrb
pop
es
pop
push
push
lret
popf
xchg
or
xchg
rclb
lds
jle
sahf
cmc
inc
es
jns
inc
mov
push
sbb
movsb
cltd
dec
jp
pop
faddl
addb
add
lret
pop
add
xchg
fbstp
data16
out
aam
adcb
adc
addr16
aam
jp
enter
ret
pop
out
cmc
addr16
and
inc
mov
loopne
mov
imul
int3
arpl
stc
fists
jno
lret
push
xor
fs
xchg
mov
in
clc
inc
mov
adc
add
hlt
add
call
fadd
add
lcall
cmpsl
cli
inc
mov
lock
test
in
jbe
or
lock
pusha
jecxz
in
dec
mov
vphaddubd
and
out
dec
lods
push
pop
pop
xor
inc
xchg
xchg
cli
out
and
filds
xor
test
mov
cmp
cmovo
jbe
push
repz
pop
lcall
inc
cld
or
sub
cmp
xchg
push
adc
or
aas
insb
mov
ja
scas
ja
and
cmpsl
and
and
pop
sbb
test
loopne
push
push
sub
or
xchg
lock
xchg
jmp
jmp
or
aas
scas
jmp
aad
sar
aaa
repnz
xor
pop
dec
fs
or
dec
packssdw
test
gs
insl
mov
addr16
pusha
stc
mov
pop
mov
add
aad
fsubrl
scas
outsb
mov
cmc
sub
pushf
xchg
jb
xor
mov
sbb
repnz
enter
cmpsl
xor
bound
pop
mov
aaa
jle
mov
or
mov
fbld
popa
mov
mov
sbb
dec
jne
pop
lea
mov
push
sti
mov
iret
bswap
inc
cli
loop
loopne
lcall
mov
insb
sub
pop
mov
adc
inc
adc
pop
push
push
jl
stos
push
add
xchg
call
push
test
cmc
mov
aas
dec
gs
xor
jmp
popa
hlt
mov
mov
mov
sbb
in
lock
fidivrl
or
out
cmp
fiaddl
es
sbb
hlt
sub
add
ja
negb
cwtl
cli
je
push
cwtl
test
and
xor
stos
mov
ss
cmp
orb
sbb
movsb
mov
subb
xor
push
and
clc
xchg
test
jl
mov
faddl
dec
adc
push
fisubs
int
stos
insl
sbb
push
lds
pushf
adcl
mov
loope
add
mov
mov
out
pop
or
push
cmpsb
cmp
call
loope
shrl
push
dec
inc
das
cmpsb
call
mov
ret
push
mov
out
mov
je
and
or
sbb
scas
xchg
inc
sbb
pop
cmpsb
sub
sub
cmp
das
push
xchg
test
mov
sahf
popa
sahf
mov
mov
and
bound
or
clc
mov
adc
cs
je
or
sbb
adc
cmpsl
repnz
jp
push
fdivrs
and
outsb
push
stc
pop
arpl
ret
outsl
repz
fs
cmp
mov
sub
add
add
test
jnp
lock
lret
sub
lods
cmpsb
stos
cli
jge
jge
push
pushf
test
sbb
shll
xor
jp
jmp
mov
push
icebp
nop
es
and
xor
xchg
in
or
push
cltd
pop
push
sub
adc
push
or
mov
add
xchg
lret
pop
pop
xchg
inc
adc
fiaddl
xor
arpl
pop
cmpb
and
add
mov
cmp
in
xor
adc
fucomip
iret
mov
negl
cmp
outsl
fdivrl
imul
mov
mov
mov
in
or
mov
lods
subb
jg
and
outsb
dec
into
dec
repz
sub
loope
cltd
dec
dec
fists
cmpsb
mov
lcall
cmpl
fdiv
out
and
push
bound
xor
faddl
lods
inc
imull
add
or
xchg
push
sub
cmp
scas
inc
push
and
jb
aam
lods
push
call
cmp
rcl
pop
dec
insb
cmp
jns
icebp
shrb
and
mov
scas
aas
andl
mov
jae
outsl
dec
dec
aas
shr
jp
divb
cwtl
rorl
lods
repnz
add
xor
inc
and
std
mov
addr16
xor
bound
leave
mov
mov
arpl
mov
or
pop
movsl
shlb
add
mov
js
sahf
loopne
loop
loopne
dec
dec
xor
or
or
add
push
out
inc
push
popa
jmp
or
add
dec
sub
lock
or
xor
aaa
push
cltd
imul
jnp
pop
or
clc
lret
inc
mov
jbe
adc
dec
enter
dec
pop
shlb
in
mov
xchg
icebp
in
std
fs
loopne
xor
bound
and
loope
jns
rolb
adc
and
mov
ja
mov
jmp
mov
cld
jle
mov
outsb
dec
or
adc
leave
insl
sti
push
sti
pop
out
inc
ljmp
mov
stos
pop
cmc
faddl
dec
add
fstl
mov
mov
push
jecxz
add
sub
ffree
repnz
dec
fwait
dec
adc
xor
sub
inc
mov
clc
das
adc
neg
or
xor
fsubs
jecxz
rcrb
push
ret
sub
insb
jo
pop
or
fcomip
fs
out
je
hlt
and
arpl
sbb
xor
dec
addl
inc
mov
das
pop
pop
add
inc
test
pusha
jle
xchg
fadds
mov
fisttpll
jg
xor
mov
hlt
aad
out
iret
sbb
sub
pop
push
fwait
cmc
faddl
nop
adc
movsb
in
dec
inc
jg
in
ss
outsl
sub
cltd
andl
out
mov
dec
sbb
out
lret
ret
addr16
or
int
inc
push
clc
pop
or
call
pop
sbb
mov
daa
insl
aas
or
add
push
sbb
or
faddp
xor
and
pop
ficoms
mov
rcr
mov
rol
pop
pop
xchg
jmp
ret
lock
es
pop
hlt
push
clc
in
cli
or
pop
inc
add
adc
stc
inc
xlat
sub
sbb
std
daa
rcr
das
mov
jmp
cmpl
sub
mov
out
and
stos
cmc
lret
adc
sbbl
inc
sbb
nop
add
and
push
add
xor
cld
push
roll
sarb
jmp
cmp
test
sbb
jg
in
adc
stc
push
sbb
sub
and
push
ret
mov
or
push
lock
xchg
lods
jne
movsb
push
xchg
test
pop
lods
decl
push
test
jo
push
cld
pushf
fs
adc
dec
mov
fwait
and
movsl
mov
inc
add
adc
std
or
fcoms
imulb
pop
xchg
sahf
jecxz
aaa
ds
jge
fimull
inc
sub
push
xor
xchg
in
mov
stc
xchg
aam
add
xor
xchg
lret
pop
xchg
jmp
ret
lret
fistl
repz
jl
out
push
cmp
sbb
jno
les
xchg
xchg
lods
push
mov
jle
sti
or
dec
add
cmp
pop
stos
cmp
xchg
jge
push
xchg
sub
mov
xor
lcall
test
and
pop
cltd
sub
stc
flds
inc
cli
push
mov
lods
out
inc
jno
in
mov
cmc
ss
inc
push
push
out
jmp
in
lcall
out
adc
icebp
ret
mov
add
sbb
popa
cwtl
pop
pop
repz
test
daa
movsl
mov
jns
jecxz
pop
test
and
sub
addr16
cld
cmp
out
lock
dec
gs
jbe
stc
in
int3
xchg
pushf
jl
cld
cmp
cld
xchg
fildl
cmove
jg
cmp
mov
lahf
jle
sub
pusha
push
and
adc
enter
xchg
rcrl
lock
js
flds
std
ret
pop
dec
push
aaa
xchg
sbb
mov
fidivs
daa
mov
mov
outsb
test
vmread
and
sub
jno
ror
pop
push
push
push
sbb
fsubrp
mov
xor
repz
loope
mov
roll
and
mov
cmp
sbb
mov
jb
shr
fsubrl
rcrb
adc
and
adc
cmp
lcall
mov
jg
fnstsw
outsb
cld
push
jb
test
and
xchg
leave
add
mov
data16
pop
sub
adc
cmp
repnz
lret
outsl
lcall
dec
and
sub
ds
shll
pop
and
popa
inc
and
jl
insl
bound
test
icebp
add
mov
test
add
inc
roll
mov
inc
mov
mov
lock
jecxz
mov
ret
pusha
push
or
sub
mov
iret
leave
jne
loop
aad
iret
push
push
lahf
movsb
xor
mov
add
imul
adc
xor
ss
dec
imul
add
add
shll
mov
js
imul
xchg
lods
xor
push
popl
jbe
adc
add
icebp
sub
jge
push
jge
call
jge
cmpsb
nop
cld
iret
js
jecxz
imul
or
sub
xorl
xor
sub
adc
sbb
sbb
mov
pop
adc
std
xlat
jb
out
jmp
test
test
and
adc
scas
roll
xor
adc
icebp
add
call
ret
insb
test
sbb
into
mov
or
leave
sbb
sbb
stc
ficoml
fs
insl
rol
jp
mov
andb
mov
pop
int3
jmp
xchg
jp
popa
jmp
pop
xor
rclb
cmpsb
jo
mov
lock
lock
out
mov
xorl
enter
lret
sbbb
sti
cmp
rclb
int
int
mov
fstpt
std
mov
xchg
inc
icebp
jle
adc
addr16
aaa
ja
fisubrs
push
push
sbb
push
add
sbb
pop
adc
loope
sub
xchg
test
mov
in
and
lcall
bound
pop
xchg
mov
int
shr
iret
test
fwait
add
jnp
cltd
jle
mov
mov
shl
mov
iret
sbb
fmull
xchg
shl
imul
aas
and
sbbb
rorl
enter
pop
push
push
adc
movsb
loop
mov
lds
stos
dec
leave
push
jnp
mov
movsl
jbe
jbe
xchg
popl
xor
lods
xchg
mov
sub
mov
scas
or
cmp
fdivrl
sub
in
pop
pop
loopne
cltd
out
cwtl
std
cmp
mov
dec
test
mov
sbb
pop
sub
test
aad
jbe
sahf
jg
or
ret
imul
adcb
mov
shlb
loopne
and
mov
pop
sub
wbinvd
mov
adc
inc
mov
shr
and
cli
outsl
bswap
pop
imul
and
stos
dec
xchg
sub
jmp
or
nop
jo
xor
enter
andl
mov
loopne
out
loop
cmp
push
mov
xor
xchg
negl
xchg
outsb
scas
cmp
inc
push
fsubl
fsubl
rcr
add
or
inc
insl
jb
sbb
and
mov
leave
repnz
test
mov
leave
mov
jae
aas
ds
and
mov
int
dec
fs
repz
xchg
sub
cmp
fwait
popa
xchg
sbbb
loopne
sbb
dec
cmp
es
je
mov
push
or
notl
imul
scas
mov
cs
and
mov
leave
jo
je
lods
sar
leave
mov
ja
fbld
mov
adc
orl
push
mov
test
fs
xchg
int
or
push
cltd
or
mov
cwtl
sahf
xchg
inc
dec
or
bnd
lea
inc
in
lcall
jl
add
fcomps
jo
stc
xchg
mov
les
inc
lcall
shlb
adc
cs
mov
sub
and
sbb
xchg
outsl
add
mov
add
mov
sbb
and
xchg
pop
ja
repz
mov
jmp
fistl
cmp
sub
add
cmp
test
xor
es
mov
cs
xor
fcmovbe
insl
push
insb
cmpsl
or
leave
push
push
js
mov
or
out
push
sub
fwait
jb
jmp
or
cmp
push
pop
repnz
ljmp
jb
imul
mov
and
in
test
pop
mov
jo
and
sbb
xchg
jl
movsb
arpl
inc
and
xchg
and
in
outsb
ret
insl
inc
jne
mov
ss
testb
cli
out
repnz
imul
int
lods
dec
lock
jns
sarl
jle
pop
mov
in
xor
pushf
pop
mov
repnz
sbb
inc
pop
popa
imul
dec
je
in
sub
inc
ret
mov
sub
mulb
or
pop
dec
pop
jo
shlb
jle
jnp
inc
jecxz
aaa
xor
rol
cmp
fisubrs
push
inc
sbb
or
shlb
lret
cmpsb
pop
adc
and
insb
inc
jl
dec
bound
cmpb
ret
int3
loop
repnz
cmp
or
sbb
insb
inc
jl
dec
bound
cmpb
ret
int3
loop
repnz
cmp
or
sbb
insb
inc
jge
dec
bound
cmpb
ret
int
fdiv
sub
cmp
or
sbb
insb
inc
jl
int3
fdivl
mov
je
xor
and
dec
push
add
xor
and
dec
xor
push
pcmpeqd
mov
xchg
mov
andb
out
testb
add
add
and
push
inc
inc
inc
jo
pusha
add
cmpsb
bound
lock
testb
sbb
sub
cmp
dec
pop
pop
dec
push
xchg
ret
decl
mov
jl
dec
push
pop
mov
imul
mov
cmp
clc
sbb
adc
lea
ss
mov
jg
dec
imulb
mov
insl
push
popf
lcall
push
int
jge
push
js
xchg
xchg
loopne
pop
dec
das
arpl
mov
pop
adc
rcr
stos
gs
push
inc
cwtl
adc
movsb
callw
pop
cld
cmp
xchg
push
mov
or
lock
imul
andb
outsb
jo
cwtl
jp
imul
mov
jae
stc
add
fisubrs
pause
addr16
outsl
out
jg
dec
pop
mov
ss
loopne
rclb
add
xor
aaa
ss
inc
pop
push
jo
jns
mov
mov
into
lock
stc
mull
gs
inc
inc
push
xor
sub
adc
jmp
into
sarl
test
push
push
and
inc
sbb
and
repz
ret
aad
mov
mov
addb
push
push
inc
and
jne
push
jo
pusha
jbe
xchg
mov
mov
lock
notb
push
add
xor
and
push
inc
inc
push
jo
pusha
jbe
xchg
mov
mov
lock
notb
push
ret
add
jg
insb
enter
imul
aaa
jo
std
stos
dec
imul
pushf
test
adcb
mov
dec
mov
push
repnz
or
cwtl
and
inc
out
gs
out
out
in
hlt
pop
mov
outsl
cs
fwait
leave
jge
xchg
or
repz
shlb
stos
fldcw
aam
popl
mov
cmpsl
popf
daa
outsb
jne
push
jb
cmp
pop
loop
xchg
icebp
push
and
shrl
pop
in
push
dec
iret
fcomp
daa
shlb
out
cwtl
arpl
sub
test
movsl
clc
fiaddl
sti
lahf
mov
dec
jne
push
cltd
out
inc
movsl
cmp
xchg
jo
or
fsave
cmpsb
mov
mov
push
out
into
xchg
mov
or
and
push
call
stos
sbb
fmulp
push
jecxz
lret
ljmp
xor
cwtl
mov
aas
mov
inc
les
jne
movsb
mov
mov
ljmp
cmpsl
les
dec
fwait
cmp
rcll
jp
and
cmp
push
scas
jg
inc
inc
movsl
shrb
fisttpll
push
out
mov
and
mov
and
stos
or
inc
test
dec
mov
fwait
pop
dec
jo
cmpb
sbb
test
hlt
gs
dec
loop
cmp
pop
xchg
cmp
cmp
sub
add
lds
xor
add
pusha
test
pushaw
loope
and
mov
xor
aaa
stos
xor
sub
sbb
call
dec
pop
sbb
fmull
add
xor
xor
in
test
cltd
imul
insl
mov
jo
add
mov
fcmovne
out
rorb
mov
pop
cmp
faddl
add
subl
test
mov
std
lret
push
lcall
int3
cmp
jg
add
add
pop
mov
subb
mov
push
in
push
into
dec
arpl
pop
mov
daa
jae
in
pop
jns
shl
cmp
dec
popf
sub
addr16
ljmp
jns
stos
xchg
lret
pop
loope
in
push
call
jmp
jo
imul
pop
repnz
ret
mov
insl
sub
and
iret
test
sti
pop
cmp
cli
mov
mov
xor
ucomiss
out
and
aaa
into
cwtl
movsl
fnclex
adc
lret
jecxz
in
dec
push
jnp
test
outsb
sub
push
xor
cmp
test
and
lcall
notb
xor
pop
mov
sarb
aaa
jecxz
shl
mov
sbbb
addb
xchg
inc
or
imul
int3
call
out
dec
push
dec
sub
orb
and
xchg
lcall
pop
push
orl
mov
in
hlt
jp
xchg
dec
idivl
and
jnp
icebp
and
cmp
cmp
iret
push
rcll
sbb
pushf
mov
adc
mov
and
push
out
ret
shll
push
sahf
xchg
xor
cmpsb
gs
lcall
mov
ss
imul
lret
dec
fimull
inc
data16
ss
test
rorl
imul
movsb
into
inc
out
pusha
adc
jl
or
decl
lock
aad
lahf
data16
pop
bound
push
add
lret
push
cmpsl
aaa
icebp
scas
sti
xchg
ficomps
je
mov
in
mov
mov
mov
sti
shlb
outsl
fisubrl
jl
adc
into
mov
adc
push
outsl
call
enter
negb
jge
out
cmp
fistl
cltd
popf
jge
push
orb
into
outsb
repz
cltd
icebp
pop
mov
cmp
jae
mov
dec
inc
xor
xchg
icebp
mov
jae
push
push
xor
xchg
les
dec
pop
mov
jnp
mov
jmp
les
mov
pushf
or
jmp
jle
ds
call
add
cmp
inc
pop
lcall
aad
dec
sub
push
add
int3
ja
jne
ficoml
adc
dec
add
clc
inc
pusha
cmp
push
pop
cs
mov
or
fnstsw
repz
inc
mov
arpl
jae
cltd
or
aaa
stc
lock
pop
std
and
sbb
aaa
inc
rorb
sahf
push
mov
in
xchg
dec
xchg
cmp
loop
rol
sub
mov
bound
dec
add
ljmp
jp
dec
adc
and
std
cmp
pushf
dec
jae
and
add
jno
mov
mov
push
out
push
push
dec
and
fcomi
mov
les
test
sbb
pusha
xor
test
add
pop
rcl
fadds
jb
sub
rcll
sub
mov
int3
call
in
lcall
scas
fst
and
jbe
push
inc
sahf
xor
fnstcw
imul
cmp
movsb
push
jno
outsb
fildl
mov
jns
icebp
or
pop
idivl
jne
push
imul
repz
mov
hlt
jge
pop
sub
cmp
cmpsb
andl
cmp
outsb
mov
cmp
pushf
lds
test
jnp
inc
adc
hlt
sub
neg
or
fldl
xchg
popa
popa
mov
hlt
or
add
sbb
lods
adc
pop
rcrb
into
push
add
aam
nop
dec
jo
or
mov
push
dec
imul
test
push
push
pop
sbb
xor
or
int3
movsl
ja
test
mov
popf
sbb
and
sub
mov
cmc
mov
and
jno
pop
push
xchg
pop
mov
push
sti
lock
xchg
shlb
lds
add
pop
cmpps
int3
cwtl
add
cmp
mov
lock
cmc
jae
xor
cmc
out
push
mov
test
out
nop
cmp
adc
sbb
mov
add
fwait
mov
repz
jnp
pushf
inc
fpatan
cmp
cmp
popa
jo
fisttpll
pusha
xor
push
or
lea
adc
mov
data16
sbb
test
cwtl
test
mov
dec
fisubs
sub
ret
addb
aam
arpl
test
leave
or
mov
xlat
jb
fsubl
cltd
ds
push
fcom
stos
mov
sub
aas
out
mov
xchg
mov
xchg
int
lods
scas
jle
push
and
lods
mov
icebp
cld
cmpsl
gs
imul
les
mov
enter
xchg
in
cmp
pop
jae
jns
xchg
mov
inc
ja
jno
pop
lahf
call
xor
test
out
cmp
addr16
inc
lahf
cwtl
pop
fbstp
stos
aam
push
or
push
mov
aam
push
mov
js
leave
adc
or
stos
iret
mov
dec
addr16
inc
inc
inc
fimuls
sbb
jno
dec
repz
mov
dec
jns
jne
jecxz
adc
add
sub
js
lcall
or
test
xor
cmpsl
jbe
jno
and
popa
fadds
sbb
aas
ds
rclb
and
sub
ret
sub
adc
add
subl
imul
push
xor
pushf
cli
sub
adc
hlt
xchg
out
push
hlt
adc
push
addps
or
jge
outsb
or
or
or
lret
adc
mov
imulb
gs
les
jecxz
es
es
js
inc
outsl
iret
es
shrb
adc
mov
and
lea
fdivrl
fnsave
pop
xchg
jno
push
popf
or
int3
nop
xchg
xchg
out
pop
ljmp
mov
and
xchg
xchg
jae
xlat
bound
rcl
mov
sub
out
push
mov
ljmp
dec
pop
dec
loope
mov
jb
inc
int3
adc
ror
inc
pop
test
enter
xchg
xor
divb
mov
rcll
mov
pop
and
aad
push
lea
jbe
jae
in
lea
pop
inc
roll
sbb
jno
push
lcall
jno
xor
dec
or
mov
pop
dec
shlb
add
adc
inc
je
es
cmp
icebp
into
lds
shlb
and
out
dec
cmpsb
fcmovb
sbb
jl
pop
out
xchg
imulb
xchg
sbb
mov
sbb
cwtl
pop
out
insl
int
jnp
xor
hlt
lret
pop
jle
mov
imul
int3
fisubl
push
bnd
fstps
pop
xchg
mov
test
mov
inc
fwait
push
sub
aas
xor
mov
pop
test
mov
adc
cli
inc
dec
rcr
test
in
loop
jl
xchg
and
mul
aad
xor
mov
data16
mov
ja
fnstcw
cmp
mov
testl
mov
int3
imul
sub
iret
mov
jp
cmp
xlat
addr16
sahf
lahf
insl
pusha
int3
jb
dec
js
fabs
lret
mov
repnz
sbb
adc
jge
jne
test
inc
cmpsb
inc
dec
add
lahf
mov
cmc
pop
inc
or
and
or
pop
mov
sbb
sbb
xchg
fidivrl
mov
and
sbb
mov
ret
xchg
addr16
call
dec
cmpsl
xchg
int
xchg
cmp
cmpsb
cltd
cmpsl
pop
rcll
daa
mov
icebp
daa
fwait
mov
cmc
push
sbb
lock
lret
pop
pop
inc
into
mov
mov
dec
pop
push
ja
sub
push
fidivs
sahf
ds
sbb
insb
sub
cmp
clc
lods
xor
mov
mov
mov
cwtl
add
add
pop
pop
dec
pop
and
or
lret
cwtl
loope
push
mov
dec
lahf
dec
mov
xchg
pop
rol
call
int
sti
test
lods
shlb
flds
cli
repnz
popf
inc
jne
xchg
sub
aad
dec
add
pop
xchg
adc
add
pop
sbb
sub
icebp
out
and
loopne
inc
sub
mov
fiaddl
push
std
add
out
mov
cltd
mov
sub
ficompl
or
filds
les
mov
jg
dec
out
das
icebp
int
xor
sbb
loopne
ret
push
imul
repnz
and
hlt
test
leave
mov
add
repnz
in
mov
pop
jmp
outsl
dec
xchg
test
adc
cltd
push
jp
lds
stos
loop
dec
dec
add
cmp
dec
lock
xchg
imul
mov
xchg
jecxz
mov
addb
dec
mov
inc
addr16
aam
xchg
sti
rcrb
mov
sbb
fiadds
and
test
xchg
xchg
cld
int3
out
data16
jmp
sub
jmp
aas
daa
mov
cmp
je
cmpl
fidivs
enter
aaa
arpl
jns
inc
and
mov
movsb
dec
push
dec
xlat
pusha
sti
bound
in
test
xchg
stos
shll
push
js
ficomps
sbb
sub
adc
imulb
ret
pop
pop
dec
pop
lcall
rcl
popf
and
mov
popf
shlb
xchg
push
jecxz
cmp
stc
xorb
xor
push
out
pop
inc
push
jo
xor
pop
outsl
int
mov
fidivs
or
push
adc
lret
xchg
jge
jmp
outsb
adc
pop
mov
xor
and
or
insl
jne
mov
cwtl
loopne
stc
mov
ficoml
sbb
out
mov
aam
mov
xor
fwait
and
aam
push
addr16
jge
lret
sub
pop
jle
sub
hlt
dec
scas
popf
mov
loope
addr16
mov
jle
rcr
out
mov
adc
push
inc
fucom
nop
test
adc
shl
jbe
inc
adc
ficompl
and
stos
ret
pop
jge
push
subb
dec
or
adc
or
stos
rcrl
jle
imul
sub
test
push
mov
pop
mov
test
cld
or
jge
ror
mov
fnstcw
daa
pop
jecxz
xchg
mov
hlt
imul
xor
dec
xchg
mov
xchg
dec
or
mov
sbbl
lret
iret
mov
mov
mov
push
cltd
mov
inc
lock
cmp
cmc
popa
mov
sub
mov
sbb
insb
mov
mov
fcmove
mov
gs
data16
stc
jp
sbb
adc
add
fiadds
rcr
out
imul
adc
inc
addb
mov
dec
jbe
test
icebp
dec
enter
shll
ficomps
add
insl
loopne
xorl
or
ss
inc
rorl
mov
cmp
xchg
push
jge
sub
add
xchg
lock
mov
addr16
std
outsl
jae
out
inc
hlt
fcmovbe
push
push
sub
clc
outsb
sti
adc
ret
lods
call
fildll
inc
lret
les
push
shl
xchg
es
out
aaa
adc
push
adc
shl
inc
xlat
dec
icebp
mov
scas
adc
lret
push
clc
mov
push
push
mov
rolb
mov
mov
jb
ret
mov
cld
cs
jg
pop
mov
sbb
roll
dec
fdivs
and
mov
adc
repz
imull
das
outsb
jg
enter
inc
mov
jmp
lods
aad
aas
ret
loop
sub
jnp
pop
mov
add
mov
jns
fs
stc
push
ret
pop
xor
popa
sub
add
fisttpll
or
xor
iret
cmp
or
scas
adc
pop
scas
dec
add
insb
mov
fld
adc
lahf
lea
jne
and
fidivrs
lds
xorl
out
push
out
arpl
into
cli
jle
or
push
and
xchg
jmp
pusha
mov
sbb
ret
fcmovnbe
je
pop
loopne
mov
int
add
mov
lcall
js
or
daa
ds
jne
jae
jne
test
cmc
loop
xor
adc
ja
sti
pop
and
dec
adc
jno
jae
sti
and
sbb
mov
pop
inc
div
movsb
jnp
mov
repnz
xor
jecxz
inc
jle
fmull
sbb
or
push
nop
push
sub
jge
fcmovnu
dec
mov
bt
sarb
repz
fwait
daa
xor
cmpsl
pusha
arpl
ds
adc
push
rol
jecxz
es
ficomps
pop
pop
imul
and
clc
mov
cmp
andl
mov
rorb
loope
fistl
fwait
mov
mov
lds
aaa
adc
mov
int
xor
sbb
in
mov
and
push
mov
das
popa
add
jl
mov
dec
test
stc
pop
pushf
pusha
lock
dec
notb
sub
push
lods
xchg
les
aaa
adc
out
mov
int3
pushf
aaa
add
insl
divb
int
out
cmp
repnz
adc
pop
push
jmp
xchg
test
pop
sbb
push
xor
sarb
adc
xor
jae
lods
mov
shrb
mov
js
dec
add
mov
jl
pop
dec
xchg
sbb
rcl
aas
inc
add
test
shrb
in
iret
into
icebp
cmpb
or
and
insl
es
mov
dec
notl
ret
jmp
pop
push
jnp
lea
adc
hlt
push
xchg
rcrb
adc
jae
pop
sub
call
sahf
fadds
sti
popa
out
cmp
xor
inc
es
xor
dec
add
pop
or
cmpsl
sbb
xlat
push
loop
mov
negl
test
pop
add
pop
pop
fucomp
jmp
inc
and
push
lcall
mov
fnstenv
cmp
cmp
jns
scas
jbe
jmp
insb
xor
jbe
push
xchg
in
es
pop
stos
jg
cmp
sub
mov
cmp
lret
andl
data16
sti
add
sbb
sarl
pop
stos
aad
or
xchg
popa
pop
inc
fisubrs
push
sub
mov
sub
and
pop
sahf
fstpl
mov
dec
cli
xor
pop
mov
jbe
jae
mov
loopne
mov
sti
xchg
and
jnp
cmpsl
leave
dec
inc
push
dec
mul
sbb
lret
test
xor
xchg
int
add
fcomps
mov
cmp
stos
outsl
xchg
js
jl
pop
sbb
js
rcll
mov
sub
fists
rcrl
addr16
and
aas
dec
insl
mov
dec
sbb
sub
test
insb
cmp
dec
cs
xchg
jl
cmc
test
jnp
sub
fidivrs
xchg
cld
fdivrl
sub
mov
jo
fs
dec
inc
rolb
dec
dec
xor
and
xchg
mov
arpl
ss
stc
adc
mov
jge
pop
mov
rclb
push
mov
cli
stos
mov
jmp
mov
mov
adc
int
int
jecxz
out
call
sbb
jle
rol
cli
sbb
pop
mov
stc
mov
pop
imul
in
out
jmp
gs
jp
or
imul
insl
and
xchg
or
cmp
mov
xchg
inc
ret
push
lods
cwtl
mov
sub
call
aaa
push
ret
pop
sub
cmp
arpl
jno
pushf
ret
push
jmp
loop
inc
sbb
bound
add
ret
or
mov
adc
xchg
lret
int
pop
mov
bound
jae
xor
jbe
scas
jo
call
loope
icebp
cli
not
mov
mov
adc
aas
jae
pop
adc
cli
and
aad
outsb
adc
lock
mov
push
fistpl
bound
xchg
inc
pop
loopne
dec
in
aad
pop
les
jmp
lea
fildll
bound
ret
imul
ljmp
pop
pop
popf
adc
lods
lcall
mov
stos
adc
pushf
xchg
jno
sbbl
dec
dec
ljmp
iret
add
sbb
aam
mov
jnp
adc
xor
ror
imul
loope
rolb
pop
lds
adc
mov
aas
cmp
cld
shl
jge
stos
inc
test
mov
ss
sub
xchg
insb
insl
cmp
jb
xor
mov
add
mov
mov
std
cmp
xlat
jecxz
test
imulb
ds
dec
mov
pop
mov
out
psubw
inc
sub
and
in
adc
aad
adc
xchg
dec
pop
addb
dec
push
add
lcall
sbb
std
pusha
jnp
adc
mull
sbb
pop
shrb
packsswb
push
and
flds
mov
dec
fwait
inc
add
cmpsb
cmc
jns
aam
mov
dec
xchg
mov
jo
cmp
sbb
cltd
pop
push
sahf
mov
inc
outsb
pop
pop
dec
mov
stos
cmc
mov
mov
daa
shrl
imul
inc
mov
push
decb
shll
push
cmp
mov
xchg
fdivrl
sub
js
xor
orb
jo
sbb
mov
inc
into
imulb
mov
les
pusha
fsubr
pop
dec
cli
ljmp
insb
jns
jno
jnp
jp
sub
or
add
hlt
jg
cs
daa
scas
jecxz
leave
test
popa
fdivl
mov
push
cmc
dec
mov
repz
adc
js
out
dec
or
repnz
shl
sub
inc
das
loope
aaa
push
xchg
dec
inc
cmp
loop
sbb
mov
pop
mov
leave
stc
sbb
fldcw
dec
call
das
pop
aam
into
in
das
mov
jmp
or
mov
sbb
xor
inc
jno
and
mov
and
cmpsb
and
aaa
xor
mov
push
add
push
pop
fldcw
pop
hlt
xchg
arpl
lahf
or
sub
sub
adc
addr16
sarb
adc
insl
aad
mov
cltd
into
xor
push
mov
les
xchg
daa
pusha
or
sub
xor
icebp
jge
cmpb
fs
test
shll
ficompl
sbb
cmp
mov
jo
xchg
jmp
sbb
jecxz
aas
jl
fisubrl
insb
jae
pushf
cmp
xorl
cmp
push
pusha
and
push
inc
inc
push
jo
pusha
jbe
xchg
mov
mov
lock
notb
push
add
xor
and
push
inc
inc
push
jo
pusha
jbe
xchg
mov
mov
lock
notb
push
add
xor
and
push
inc
inc
push
jo
pusha
jbe
xchg
mov
mov
lock
repnz
xor
push
and
ss
inc
inc
push
lock
outsl
xchg
sbb
dec
test
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
iret
adc
xorw
jns
lret
loop
or
add
or
add
fildl
push
add
add
lret
add
add
add
insb
add
add
add
add
add
push
add
pop
add
add
loope
push
add
or
or
sbb
add
xor
pop
add
add
add
testl
test
add
cmp
cmp
xor
bound
xor
testl
adc
add
test
or
and
adc
pop
add
movsl
add
add
popf
add
add
add
add
add
add
add
add
sub
xchg
add
add
push
add
add
add
add
add
sldt
and
scas
add
add
add
xor
push
add
add
push
add
add
xor
xchg
pop
add
movl
or
pop
add
add
add
ljmp
add
add
add
add
add
add
add
push
add
add
add
add
add
rolb
adc
or
or
add
adc
add
add
or
ret
add
add
insl
add
add
xor
add
adc
add
add
add
add
add
add
dec
add
add
add
add
insb
add
je
test
add
add
add
add
testb
add
add
testl
add
add
iret
add
lret
add
add
add
add
das
add
xchg
incl
movsb
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
ret
add
adc
add
add
add
add
add
mov
add
xor
dec
add
pop
add
add
add
cmp
pusha
add
add
xor
imul
mov
and
mov
add
add
add
jb
lock
or
or
jecxz
loope
cmpsb
add
dec
add
add
adc
mov
adc
or
add
dec
add
add
add
mov
xchg
add
add
add
add
add
add
rolb
adc
and
push
add
add
arpl
sbb
add
add
testl
xor
insl
add
das
add
jecxz
insl
add
lods
add
add
add
sbb
out
out
add
add
add
addl
cmpsl
add
add
push
add
insl
add
add
add
dec
add
push
add
xchg
inc
add
mov
lock
add
add
add
add
add
add
add
inc
add
add
add
add
fwait
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
sub
or
in
sub
lea
jbe
cmp
incl
xchg
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
cmpsl
dec
adc
incl
test
iret
push
dec
inc
mov
add
je
cmp
test
arpl
stos
sub
xor
out
inc
out
and
jl
scas
jo
and
insb
pop
or
pop
aam
xor
pop
lea
bound
cmpsb
cwtl
fistpl
fsubrs
aad
mov
sub
cmp
popa
aad
adc
add
lea
pop
rclb
mov
lods
jns
mov
pop
lcall
pop
inc
mov
xchg
adc
jnp
adc
sub
pop
imul
movsb
inc
jmp
cmc
dec
hlt
das
mov
fsub
hlt
xchg
mov
cmp
pushf
cmp
cmp
jbe
pop
lahf
stos
shrb
aas
jp
mov
pop
ret
fldt
ficompl
inc
nop
push
notl
mov
mov
inc
pop
loopne
sub
inc
incb
mov
test
push
pop
loop
add
jmp
gs
ret
pop
pop
shrl
jmp
lret
test
ja
jg
enter
push
das
push
xchg
xor
xor
pop
aad
sub
and
pop
test
rorb
jmp
pop
stos
jp
add
andl
fwait
stc
mov
pusha
inc
cmp
mov
sbb
push
cmc
xchg
and
or
fiaddl
cmp
fists
dec
sub
dec
imul
cs
mov
pop
andb
dec
es
mov
xchg
rolb
daa
pusha
push
jo
shll
incl
sub
xchg
sbbl
sbb
inc
decb
cmc
out
mov
mov
fwait
mov
or
insb
add
shlb
xor
sarl
fwait
and
jnp
sbb
or
ds
nop
lret
jl
push
shl
jle
mov
xor
add
out
fildl
xchg
scas
pop
lret
jmp
rorb
pop
fldenv
jg
cmp
test
jmp
ljmp
loope
les
cld
mov
adc
cli
addr16
add
popa
dec
imul
sbb
sub
ret
inc
pop
testl
mov
ja
aad
fnsave
pop
mov
orb
xor
mov
fsts
adc
jl
pop
xchg
je
and
mov
add
gs
pop
movsb
nop
lcall
outsb
iret
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
