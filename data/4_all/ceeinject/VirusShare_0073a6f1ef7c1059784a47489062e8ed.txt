call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
or
cs
inc
sarb
add
xor
inc
lret
push
cmp
or
pop
ret
mov
add
jb
inc
lret
push
cmp
or
pop
ret
mov
jb
adc
xor
push
dec
mov
bound
and
xor
andb
mov
gs
stos
xor
mov
in
imulb
sbb
cmpsl
into
mov
push
add
mov
lcall
jne
cs
jns
lds
add
pop
push
sar
bound
pop
mov
or
fadds
xchg
loop
sub
dec
adc
daa
jp
je
stos
xor
and
mov
scas
dec
sahf
push
imulb
loop
or
mov
incb
and
inc
lret
add
daa
rorl
xor
push
sub
icebp
decl
pop
push
cld
fucomp
and
loope
pop
popf
mov
push
clc
mov
or
pop
ret
mov
add
jb
inc
lret
adc
iret
dec
popa
pop
les
push
lea
xor
iret
mov
call
rsm
or
jecxz
clc
js
dec
lds
xchg
fcompl
lods
push
ror
addr16
pop
out
mov
or
mov
pop
imulb
mov
pop
ret
mov
add
jb
inc
lret
push
cmp
or
pop
ret
mov
add
jb
inc
lret
push
cmp
je
stos
daa
cltd
in
xchg
aam
or
js
movsb
pop
out
rorb
out
jp
jg
imul
data16
pop
cmp
popa
mov
cmpsb
dec
iret
fdivrs
dec
lea
or
daa
pushf
sub
lods
fisttpll
imul
ss
adc
adc
push
push
mov
aas
jg
cmp
ret
mov
in
enter
dec
push
mov
adc
lods
adc
js
jle
sbb
fwait
sub
dec
pop
add
icebp
mov
cmp
sub
xchg
test
rol
push
movsl
or
fs
test
movsl
out
rcrl
jmp
cmpsb
jb
scas
mov
dec
scas
jl
mov
pushf
outsb
lahf
inc
stos
sub
lahf
mov
or
fwait
push
mov
aam
xorb
or
push
cld
nop
nop
mov
xchg
mov
int3
imull
lods
adc
sbb
mov
pop
shrb
sbb
sti
add
adc
inc
out
in
sbb
dec
and
sbb
mov
scas
xchg
push
mov
add
dec
jg
icebp
xchg
jne
inc
xlat
stc
push
jmp
std
mov
jg
jne
and
xor
stos
or
mov
mov
divl
hlt
cmp
test
push
mov
pop
gs
sub
outsl
or
addr16
lret
xor
cmp
inc
scas
pop
pop
rcrl
aaa
inc
ffree
mov
or
jp
nop
ret
cmpsb
dec
adc
jle
push
ljmp
dec
lea
out
mov
xor
lret
sub
xor
push
ret
popf
or
adc
fs
test
out
xor
mov
jecxz
xor
aad
pop
fdivp
scas
mov
or
dec
sub
push
mov
push
push
inc
pop
push
dec
adcl
dec
and
repnz
or
clc
pop
mov
or
sarl
inc
xchg
imul
enter
dec
out
iret
outsl
cli
scas
fisttpl
mov
scas
pop
xchg
test
and
icebp
fidivl
sbb
xchg
xchg
andnps
mov
mov
mov
xchg
bound
mov
and
test
cmc
stos
xchg
inc
imul
xchg
sbb
repz
into
outsb
mov
test
lods
push
gs
iret
pop
in
and
cs
ss
loope
das
push
stos
mov
jle
loope
mov
rorb
aas
insb
sub
ja
pusha
fcompl
iret
icebp
pop
jo
fwait
jmp
push
test
cltd
mov
enter
jp
test
jne
sbb
sub
xor
stc
sbb
xor
jecxz
inc
pop
inc
or
adc
sub
lret
std
popl
aaa
sub
fldenv
das
and
test
push
cltd
loope
xchg
cmp
xor
inc
push
sbb
sar
data16
enter
popa
iret
mov
sub
ss
ds
push
fsub
je
inc
lods
xchg
jg
dec
mov
in
shlb
dec
xchg
sub
daa
rorl
repnz
or
loope
inc
xchg
int
loop
mov
sbb
mov
inc
aaa
pop
out
andb
call
pop
stos
jmp
jp
xor
mov
adc
push
rorb
mov
leave
mov
pop
mov
xlat
cwtd
mov
push
cmc
pop
popa
outsl
pop
faddl
out
mov
out
ret
insb
and
add
pop
mov
lret
stos
fisttpl
or
out
pop
imul
shl
imul
movsl
ror
loope
jmp
popf
mov
xor
dec
pop
test
bound
arpl
fisubrs
mov
fdivs
and
cmp
test
cmp
inc
mov
xchg
push
mov
inc
adc
jmp
adc
das
ret
cld
pushf
loop
adc
jbe
jp
pop
pop
daa
ficoml
push
and
dec
xchg
cs
and
addr16
push
sbb
cltd
xor
hlt
lock
mov
sub
mov
mov
fmul
popf
cli
movsl
and
xchg
mov
adc
xchg
sbb
mov
mov
nop
inc
or
dec
outsl
sub
out
ret
loope
mov
bound
jno
cmp
movsb
push
aad
cmp
daa
insb
repnz
inc
jb
jb
cld
pop
jnp
sub
loopne
nopl
in
mov
aad
fdivrp
sbb
arpl
jg
aam
ds
mov
pop
adc
test
je
lcall
fcomp
jmp
or
adc
mov
push
cmp
mov
xchg
xor
in
ficomps
imul
insb
test
push
adc
sbb
mov
cmp
movsb
hlt
or
dec
push
or
pop
sbb
push
add
pop
sub
mov
and
scas
sbb
test
or
and
fnstsw
dec
or
lret
cmpsb
pop
and
outsb
pop
sbb
inc
lret
je
lock
mov
lock
jno
mov
jns
push
outsl
push
adc
cltd
jg
xor
loope
enter
lea
mov
call
add
push
std
xchg
arpl
js,pt
outsb
mov
xor
bound
cmpsl
cmc
scas
dec
in
push
mov
xor
mov
movsl
inc
mov
in
inc
cld
fs
mov
in
dec
pop
xor
push
ss
cmovb
lods
cli
jle
xor
lahf
jne
daa
arpl
test
movsl
cmp
mov
jne
incb
or
cmp
arpl
lcall
pop
push
inc
mov
aaa
add
push
or
pop
mov
cs
pop
mov
sub
cmpsl
mov
in
push
push
subb
dec
xchg
mov
sti
push
fldcw
jae
das
mov
inc
or
test
enter
andl
cmpsb
push
dec
xchg
test
jns
jle
xor
mov
js
cli
cmp
add
das
outsb
mov
xor
mov
cmp
jnp
int
js
pop
mov
in
pop
outsl
pop
jmp
fbld
shll
outsb
inc
out
rorl
adc
dec
mov
test
fwait
sbb
mov
ss
sbb
xchg
jl
leave
adc
pop
jno
mov
xlat
mov
loopne
enter
int3
andl
xchg
pushf
mov
cmc
hlt
sub
scas
out
jns
out
push
subl
xchg
int
daa
pop
push
push
lods
pop
sbb
repz
inc
lahf
push
dec
std
adc
fstpl
int
and
add
mov
test
jle
lret
lods
mov
call
das
push
xorb
cmp
aad
mov
shl
fistpll
or
jl
es
jns
inc
mov
sbb
imul
les
mov
mov
sub
sub
cmp
cld
jns
pop
push
push
pushf
pop
enter
cmovnp
mov
insb
add
adc
out
notl
leave
jbe
push
mov
int
sub
cmpsl
daa
clc
xchg
pop
clc
in
js
jbe
mov
js
pop
xor
iret
sbb
aaa
popf
mov
mov
xchg
movsl
fcomps
mov
fnsave
pop
push
push
mov
in
bound
jmp
repnz
aad
sbb
loopne
add
cld
pop
jo
inc
dec
sub
mov
daa
in
call
adc
jb
sub
xor
mov
inc
adc
pop
jnp
test
jg
xchg
jl
jle
es
outsb
lahf
adc
scas
mov
inc
ret
xchg
dec
in
out
iret
lcall
mov
mov
push
jecxz
imul
mov
stc
test
rcr
pop
stc
cld
add
add
xchg
cmp
daa
dec
fnstcw
and
fs
in
out
sbb
jp
es
push
dec
stos
mov
mov
add
dec
loopne
lret
fisubrs
fisttps
jbe
add
lock
sahf
push
packssdw
and
mov
cmp
adc
scas
push
lea
in
add
pusha
in
pop
aas
or
jp
and
sahf
push
pop
inc
sbb
dec
mov
adc
cwtl
xchg
mov
shlb
xlat
imul
cmp
xor
pop
lods
push
ret
or
sar
push
mov
sub
sets
xchg
shr
test
and
adc
bound
mov
fnstcw
lret
pushf
mov
mov
or
testl
xchg
add
adc
fldenv
lock
mov
pop
inc
push
icebp
inc
jp
pusha
fisubs
rcrl
stos
add
push
shl
adc
movsl
out
cmpsl
add
jg
sub
inc
or
incb
mov
int
sbb
dec
mov
testb
out
xor
pop
les
jno
add
bound
out
sti
mov
rorb
pop
cmp
fmul
push
or
jg
mov
mov
ficoms
jp
pop
cmp
mov
sub
jne
negl
dec
int
add
ret
movsl
pop
sbb
jne
orl
mov
mov
out
push
imul
bound
mov
repnz
pusha
imul
cmp
pop
cmp
outsb
push
aad
stos
loope
arpl
out
subb
in
jae
daa
xchg
cmp
lahf
scas
mov
and
mov
fiadds
pushf
sub
sarl
and
stos
add
pop
jne
int
jmp
add
mov
inc
sub
jg
pop
setns
cltd
aad
inc
cmpsb
push
lock
xor
or
push
sti
pop
lahf
xchg
ljmp
out
push
xchg
pusha
pop
cmpb
inc
and
mov
pop
cltd
data16
mulb
jl
out
stos
xor
hlt
sbb
insb
sub
mov
jb
sahf
inc
aad
and
pop
xor
inc
daa
test
pop
xchg
mov
gs
leave
mov
ret
xchg
rorl
fsubl
out
data16
aam
dec
stc
ds
dec
mov
cltd
pop
xorl
xchg
in
iret
sub
or
scas
push
inc
sub
les
cmpsb
jmp
dec
bound
mov
pop
add
bnd
shrb
sub
add
push
int3
out
jae
loop
and
lahf
fistpll
mov
inc
and
andb
add
mov
outsb
out
sub
popf
jo
outsb
inc
inc
fsubs
in
hlt
cmc
lods
sahf
aaa
pop
addl
enter
imul
in
jl
lcall
movsb
repz
lods
rcll
rorb
nop
sbb
mov
aam
fimuls
stc
stos
pcmpgtb
lock
mov
scas
or
bound
fcmovb
xor
push
sbb
or
ljmp
pop
repnz
loop
mov
add
mov
or
and
mov
jg
xor
ss
pop
add
sub
sub
cli
mov
mov
shlb
adcb
push
bound
xor
faddl
jmp
test
jo
popa
aam
out
repnz
clc
sbb
cmc
iret
mov
pop
jl
ret
cmp
push
hlt
xor
fidivrs
pop
lret
adc
es
jne
push
sahf
imul
inc
shlb
out
test
movsb
divb
pop
mov
jecxz
in
lret
inc
out
or
iret
adc
test
std
fucomp
fwait
loop
test
dec
adc
in
sbb
jl
cmpb
sub
add
mov
dec
fs
sub
sqrtps
popa
add
push
xchg
jge
dec
sbbb
xchg
inc
adc
mov
dec
cmp
ficoms
sub
mov
int
lods
in
mov
cmp
jp
orl
repz
ljmp
cmpsl
dec
xchg
mov
pop
mov
xchg
sbb
aas
das
gs
lods
sub
cmp
add
fisubrl
pop
jge
popa
xor
and
lret
sarl
xor
test
clc
mov
and
mov
ss
clc
inc
fnstenv
rcl
dec
fwait
cltd
cld
jbe
jle
outsb
cmp
cmp
fstps
push
sub
mov
popa
fidivs
push
cli
insb
int
sub
clc
cmc
in
cwtl
in
pop
sub
add
sbbl
inc
aaa
push
dec
mov
out
lret
sub
dec
sub
test
push
repz
mov
mov
cmp
in
jbe
movsl
cmp
xchg
mov
stos
dec
jne
sbb
fimuls
in
fisubrs
sbb
add
sti
loope
xor
push
ficoms
test
iret
xchg
push
or
idiv
call
into
cs
int
aas
sbb
push
jmp
mov
iret
mov
xor
fiadds
adc
xor
dec
xor
jb
cmpsl
fs
dec
test
mov
jbe
push
dec
pop
pop
mov
lea
pop
adc
adc
sub
xchg
xchg
das
in
je
pop
out
push
push
daa
lret
in
loope
and
int
cmp
lcall
or
stos
xor
loopne
test
and
ror
out
or
ss
xlat
jbe
jae
and
add
arpl
cmp
pop
scas
mov
push
add
out
add
rcrb
pop
push
jb
scas
cltd
lcall
outsl
dec
mov
jp
pop
dec
push
mov
mov
mov
jecxz
sub
pop
dec
jno
aam
jmp
xchg
rolb
lret
push
and
push
mov
pop
and
sub
mov
arpl
xchg
mov
rolb
inc
movb
and
dec
pop
mov
add
push
sub
mov
mov
addr16
lds
dec
std
aas
mov
adc
clc
test
pop
jb
adcl
cmpb
bound
arpl
add
divb
dec
incl
ja
push
jne
push
xchg
add
adc
and
push
xchg
test
and
cmc
mov
in
jnp
add
inc
push
mov
pop
or
xor
test
push
and
adc
je
pop
mov
mov
pop
dec
inc
cmp
mov
cli
loopne
inc
mov
add
sti
or
mov
out
std
mov
push
push
sbb
add
bound
imul
pop
or
fildll
jno
ret
or
or
repnz
adc
out
leave
mov
popf
add
sub
mov
pop
inc
mov
jne
pop
scas
and
jno
sahf
sahf
mov
ss
insb
sub
and
sub
stos
add
lcall
push
mov
shll
add
pop
mov
aas
jne
scas
cld
ljmp
and
movsl
imul
loope
imul
mov
test
sub
cmp
and
fwait
push
cmp
imul
cs
rcrl
iret
pop
scas
and
aam
mov
mov
pop
cld
fs
cmpb
sbb
ret
rcl
pop
jmp
int
xor
adc
or
out
mov
mov
ficoml
mov
push
cmp
push
inc
jp
aaa
push
lods
pop
ljmp
jne
loope
idivl
add
add
imul
sub
not
mov
jno
add
pop
mov
fs
xor
xchg
and
ljmp
daa
cs
cwtl
adcl
arpl
cwtl
ds
fs
cli
adcl
adc
ror
xchg
popa
int3
jmp
js
pop
add
ficomps
pop
fisttpll
inc
push
outsb
xchg
push
sub
dec
dec
lcall
cmp
popf
xor
inc
adcb
out
jns
bound
inc
cwtl
push
pop
outsb
jno
adc
xrelease
pop
jne
xchg
lret
js
cmp
ljmp
aas
cmpb
mov
xchg
fidivrl
lods
lock
ds
pop
pop
sub
data16
cld
mov
push
jmp
outsl
jmp
scas
iret
out
jmp
rorb
shl
ret
cmp
or
mov
jmp
sar
mov
inc
push
arpl
outsb
push
fidivrl
dec
sbb
int
pop
in
ds
push
cmpsb
sub
jg
cmp
xor
mov
adc
clc
inc
into
lods
sub
sbb
test
lret
mov
cmpsb
adc
dec
fisttpl
jl
pop
push
pushl
andb
imul
loope
cmp
iret
cwtl
mov
dec
mov
mov
loop
push
pushf
fldt
shr
mov
push
dec
mov
scas
das
mov
aas
cmp
leave
pop
ljmp
sub
jge
cmp
mov
inc
push
insb
aaa
arpl
scas
jb
dec
cmp
rorl
cmp
jg
int3
pop
dec
outsl
cld
lods
add
data16
out
nop
mov
jmp
fidivrs
mov
repz
adc
daa
insb
jg
push
push
jae
or
push
loopne
ja
ret
add
xchg
adc
jbe
stos
ret
cmpsl
hlt
lods
xor
lcall
cmp
adc
addr16
pushf
scas
je
gs
xchg
cmp
das
pop
popa
jecxz
int
dec
lea
cmp
push
push
in
lahf
dec
or
add
and
and
xchg
cmpsl
stos
push
add
mov
jb
addr16
jmp
rolb
add
jae
inc
mov
insl
in
lods
int
cmp
push
xor
mov
stos
and
cs
jmp
pop
mov
scas
mov
in
pop
sbbl
mov
ja
pop
cmp
pushf
notl
out
mov
mov
push
call
and
inc
pop
jno
int3
add
sbb
popa
js
mov
fidivl
mov
push
and
insb
outsl
inc
pop
or
leave
add
push
cmp
lcall
lock
leave
jbe
or
and
inc
xchg
lods
pop
sbb
xchg
inc
mov
cmp
and
push
clc
fsubp
aas
xor
cld
lock
cmpsb
aas
sahf
cmpb
cld
shrb
or
das
mov
push
into
push
pop
xchg
pop
fincstp
nop
faddl
ljmp
mov
mov
pop
js
or
lcall
or
push
mov
cmp
cmp
mov
testl
enter
jp
inc
inc
add
jnp
lret
xlat
jo
data16
or
or
repz
jno
sti
jo
inc
mov
and
cmpsb
les
data16
cmp
xchg
cld
inc
inc
mov
insb
sbb
dec
dec
mov
lret
jae
ficoms
cmpb
jo
adc
ret
mov
inc
mov
popa
pop
fwait
out
stc
mov
pop
cmpsb
aas
sbb
sub
pop
lret
stc
aad
sbb
sbb
mov
std
cmpsb
mov
push
or
sub
mov
outsl
into
icebp
aaa
ret
pop
mov
mov
fcompl
gs
dec
push
dec
jecxz
hlt
in
movsb
popf
in
jno
je
aam
push
ret
adc
imul
cmp
insb
xchg
fisubs
repz
cltd
xchg
aam
mov
mov
pop
out
inc
sbb
cmp
xchg
test
lock
js
fistpll
mov
adc
fwait
mov
sbb
mov
inc
xorl
lea
js
mov
leave
push
inc
push
push
mov
inc
imul
inc
daa
test
test
cmp
and
stos
adc
pop
scas
pop
loopne
cmpsb
xchg
mov
outsl
cmc
aad
xor
mov
in
inc
push
xchg
pop
fnstenv
lret
fistl
shlb
in
shlb
cmpsb
push
ja
lret
ds
outsb
out
je
lcall
aam
pusha
or
xchg
lods
sti
jne
outsb
js
negb
imul
mov
xlat
lods
xchg
cmpsb
stc
rclb
addb
leave
cmc
adc
outsb
icebp
and
jmp
out
jle
movsl
fwait
call
mov
jmp
push
pop
mov
mov
enter
out
dec
inc
aad
loope
stos
xchg
dec
sbb
mov
or
sub
mov
xchg
sti
hlt
mov
imul
add
dec
call
int3
inc
add
mov
shl
pop
mov
jecxz
rcrb
scas
sbb
and
jecxz
mov
lods
or
mov
lret
sbb
lahf
mov
adc
pushf
pop
jg
dec
xchg
xchg
gs
orl
jnp
imul
ret
mov
add
jb
inc
lret
push
cmp
or
pop
ret
mov
add
jb
inc
lret
push
cmp
or
pop
ret
dec
sarb
add
jb
inc
lret
push
cmp
or
fildl
sub
xor
mov
ljmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
cwtl
jno
inc
mov
adc
loope
icebp
pop
rorb
mov
jl
insb
popa
pushf
jno
inc
mov
xor
add
adc
loope
icebp
or
xor
sub
jb
dec
cmpl
inc
es
fisubl
in
xor
sbb
das
mov
psubusb
mov
fdivs
or
rcll
xor
pusha
xchg
repnz
jle
lods
test
daa
xor
cld
dec
xor
adc
leave
ds
mov
adc
pop
jl
dec
dec
adc
hlt
jo
dec
in
pop
and
or
mov
sbb
rcrb
scas
jno
add
jno
popa
mov
sbb
popa
icebp
cltd
aaa
in
rol
sub
xchg
sbbl
adc
push
leave
out
cmp
add
test
fdiv
fstps
das
outsb
loope
arpl
lret
leave
aam
rcll
in
push
dec
daa
pop
mov
pop
inc
aad
mov
adcb
lods
inc
enter
fdivl
int3
add
adc
sbb
movsb
sarl
adc
fs
pop
adc
rcrb
shlb
mov
mov
jl
cltd
mov
aad
std
and
or
add
xor
mov
add
pushf
jns
outsb
mov
ljmp
pop
pop
out
pop
insb
and
jno
pusha
nop
xor
add
adc
loope
icebp
or
cmp
sub
pop
mov
cmpl
inc
mov
xor
add
adc
loope
icebp
or
cmp
sub
pop
mov
cmpl
int3
roll
push
mov
in
notb
jbe
lods
mov
lahf
and
inc
push
cmp
loopne
xchg
or
icebp
cmpsl
test
xchg
mov
push
mov
mov
mov
rolw
dec
and
and
lahf
imul
lea
leave
pop
mov
repnz
sarb
lcall
idivb
and
popa
out
push
out
in
jbe
dec
out
outsb
dec
clc
pop
pop
ja
movsl
push
xor
xchg
add
bound
adc
sbb
push
push
stos
sbbl
pop
pop
dec
ljmp
enter
jb
or
mov
cmp
shlb
cmc
cmpsb
adc
shlb
cmp
movsb
fisubrl
js
push
into
push
sbb
inc
shlb
push
stc
testl
sub
inc
call
imul
pop
adc
call
sub
and
xor
dec
mov
push
movsb
inc
adc
loope
cmpsb
outsb
out
gs
loopne
shll
pop
push
subb
mov
cmp
sbb
rorl
mov
addb
mov
out
xchg
dec
jp
mov
ja
dec
adc
mov
adc
xchg
mov
pop
mov
mov
int3
ficomps
dec
out
mov
cmp
jns
mov
xchg
cmpsl
sarb
push
adc
inc
mov
cmp
inc
xchg
inc
mov
hlt
out
add
test
leave
lcall
js
or
rorb
sbb
loop
lcall
loop
stos
movsl
mov
cltd
sbb
hlt
cmp
adc
xchg
push
ds
loope
pop
adc
notb
das
inc
cld
add
jl
or
lret
mov
jae
adc
in
inc
out
loopne
add
jle
inc
xchg
jle
sbb
dec
es
lret
das
lea
cmp
jno
gs
xchg
outsb
repnz
jb
push
mov
dec
daa
dec
loopne
cld
imul
das
lret
icebp
or
pusha
inc
mov
or
add
les
sbb
inc
xlat
xchg
jp
mov
and
jle
fistps
ret
cmp
cmp
mov
sub
not
fbld
sub
das
stc
cmp
push
out
or
sbbl
push
leave
xchg
movsb
test
mov
xchg
inc
mov
mov
mov
cmp
shll
inc
iret
scas
subb
jo
js
jge
push
xchg
pop
cs
enter
pop
andb
fisttpl
dec
stos
push
push
and
fcompl
imul
xlat
cs
xor
fsubl
xchg
push
out
and
stc
rcrl
pop
push
xchg
dec
mov
push
xchg
xchg
cmp
leave
divl
inc
cmp
test
add
adc
loope
or
mov
in
imul
out
jne
clc
sub
and
nop
movsb
cmp
or
gs
cmpl
mov
mov
jb
imul
enter
int3
fsubrl
dec
mov
adc
cltd
mov
lcall
in
icebp
fidivrl
ss
mov
mov
add
push
in
xor
push
rcrb
jnp
imul
pop
fdivr
popa
mov
cmpl
pop
pop
dec
test
push
mov
xchg
scas
dec
ss
mov
ljmp
sub
scas
push
cs
xlat
xor
fsubrs
ret
js
jmp
test
dec
adc
push
rolb
pusha
or
aaa
sub
dec
clc
jno
ja
sti
imul
jo
stos
movsb
cld
out
adc
lods
adc
pop
fildll
lods
dec
lret
xor
dec
loopne
mov
shl
fwait
sahf
adc
leave
stos
fs
lds
sub
dec
js
push
das
aam
ds
in
cmp
es
in
adc
xchg
mulb
test
mov
addb
inc
movsb
lods
push
xchg
nop
jnp
arpl
mov
or
inc
fwait
sbbl
fs
out
push
jnp
add
aas
in
je
or
test
sbb
lock
push
fidivl
ja
imul
xor
mov
sub
or
dec
fmuls
shlb
mov
ds
cmpb
adc
dec
mov
test
push
dec
insl
movsb
mov
sub
xor
push
sahf
jno
in
mov
mov
xchg
mov
in
shrl
inc
stos
push
jb
pop
jl
test
or
or
arpl
int3
push
add
xchg
jmp
sahf
scas
jnp
mov
cs
out
enter
jo
mov
xlat
inc
mov
xor
jl
fsub
testb
adc
idivl
push
ds
mov
jle
fs
inc
das
inc
dec
sbb
dec
stc
dec
cltd
push
add
jb
inc
imul
pop
xchg
je
rorl
push
arpl
in
cs
js
jmp
sub
lret
shrb
call
cli
push
cli
fucomi
call
push
mov
adc
jp
lea
sti
popa
daa
insl
outsb
inc
xchg
jnp
pushf
sub
daa
or
adc
push
loopne
fcoml
jb
dec
inc
mov
adc
cmp
iret
jb
lods
outsb
dec
mov
pushf
lahf
ret
add
inc
mov
frstor
sub
decl
popa
into
mov
dec
xlat
and
out
cltd
out
fnsave
adc
mov
js
jns
mov
out
xor
bound
pop
sbb
push
push
pop
sbb
or
test
cmpxchg8b
enter
jle
mov
mov
and
daa
sbb
cmp
and
pop
xchg
add
stos
mov
in
stc
inc
sbb
sub
rcrb
pop
lahf
sbb
cmpl
lods
jecxz
jne
pop
inc
shll
lcall
jns
jns
xor
mov
ss
cmp
imul
inc
push
out
inc
ds
or
dec
aad
cld
push
or
push
mov
adc
mov
stc
xchg
mov
jp
dec
mov
cmpl
test
mov
cmp
and
push
cmp
pop
push
adc
outsb
fstp
inc
mov
xchg
and
jne
add
shlb
es
mov
daa
cmp
mov
int3
or
adc
pusha
dec
mov
or
in
scas
aad
cmpsl
jnp
push
inc
decb
lock
add
je
loop
push
cmp
sbb
pusha
jne
shl
sahf
dec
arpl
imul
mov
stos
add
xchg
cld
frstor
into
xchg
ret
dec
dec
cmp
cmp
xlat
or
xor
xlat
iret
sub
sub
popf
xchg
mov
inc
cmp
mov
push
pop
ja
idivb
repz
int3
leave
sbb
pop
jns
fsubr
xchg
dec
cmpsl
cmpl
ret
or
movsl
xchg
pop
mov
and
scas
xchg
sbb
sarb
mov
xor
push
inc
enter
leave
xor
in
jbe
popf
cltd
ds
jo
jne
hlt
fsubs
fistl
dec
mov
lods
loopne
sti
lret
into
adc
add
push
popa
scas
in
mov
nop
sbbl
push
out
jmp
inc
mov
jnp
dec
xor
push
movsl
cwtl
push
cmpsl
sbb
loopne
test
mov
adc
sbb
push
outsb
xchg
shr
fistpll
shl
mov
loope
in
jle
mov
sbb
push
aas
mov
xchg
test
lods
jo
out
mov
cld
xlat
lds
cmp
inc
inc
das
xchg
xorb
out
ds
mov
imul
js
pushf
inc
adc
sahf
jl
fadds
mov
lock
insb
lret
push
imul
int3
jl
arpl
mov
dec
xor
jo
cs
dec
pop
xchg
mov
test
js
scas
dec
stos
push
mov
shll
nop
scas
xchg
mov
mov
mov
pushf
xchg
inc
mov
cmp
push
cld
scas
ljmp
sub
jno
push
jno
mov
jg
fisttpl
popa
sub
xor
lret
std
stos
xor
popf
lret
and
orl
clc
cld
xchg
add
xchg
test
lods
leave
jb
pop
xchg
xor
push
xchg
addb
adcl
stos
cmp
jmp
pop
mov
insl
ljmp
ficomps
lock
and
sub
stos
sbb
out
stos
out
out
adc
stos
xchg
and
pop
popa
stc
xchg
icebp
jmp
xchg
leave
mov
mov
lods
lahf
or
rcrb
or
testl
pop
fsubr
lock
addr16
fwait
iret
fs
pop
cmpsl
jecxz
in
and
or
das
sub
scas
in
adc
cmpsb
xchg
or
inc
xchg
std
out
sbb
in
test
mov
lret
jnp
fs
xor
filds
mov
mov
cli
cld
push
hlt
cmp
and
adc
fnstcw
push
push
push
cs
lret
in
lods
mov
push
mov
call
sbb
fwait
mov
icebp
jbe
cmpsl
jge
push
mov
stos
sbb
cmpb
jb
arpl
outsb
pusha
cmpsl
test
repnz
adc
pop
push
jo,pt
sti
outsl
adc
push
pop
push
test
insl
mov
orl
fadds
push
pop
push
or
je
dec
out
pop
shll
loop
ficoml
ret
mov
scas
fisubl
pop
hlt
rolb
mov
data16
imul
js
jne
mov
sbb
jle
pop
mov
aaa
jo
scas
iret
in
sti
sbb
std
stc
sahf
mov
push
xor
pop
mov
out
ficompl
popf
data16
dec
xchg
or
shlb
jmp
into
std
mov
lock
imul
insb
cli
popa
sti
and
pop
andl
xchg
cmp
mov
aad
ret
mov
gs
add
mov
xchg
call
mov
xchg
mov
shlb
jae
shl
repnz
xchg
movsb
mov
ror
mov
mov
sbb
sub
mov
lods
xchg
fcoml
pop
cld
push
stos
pop
imul
popa
sbb
adc
push
js
mov
je
pop
xchg
incl
pop
test
nop
inc
sbb
and
mov
fs
pushf
mov
or
fstps
jl
cmpsb
push
stos
jnp
imul
sbb
pop
or
sbb
insl
aaa
test
mov
addr16
sub
xchg
push
int3
push
scas
dec
bound
jbe
xor
jmp
les
mov
jmp
test
mov
xchg
repz
jmp
movsl
mov
orb
mov
ret
clc
shrb
mov
mov
pop
xchg
add
add
mull
pop
push
inc
add
and
ret
sahf
adc
xchg
cld
mov
stc
dec
orl
pop
pop
int3
or
xor
aaa
lock
jp
ret
sbb
rcrb
add
xchg
sub
clc
filds
mov
hlt
mov
out
add
mov
pop
out
push
test
or
fs
or
test
jle
ror
mov
xchg
push
cs
inc
and
fptan
xchg
test
push
mov
sub
pop
add
xchg
and
mov
rorl
leave
adc
hlt
fdivrp
mov
subl
jne
xchg
sbb
or
dec
mov
cltd
push
es
daa
cld
jmp
xchg
xchg
pop
int3
arpl
rcrl
divb
rclb
sti
cmp
fmull
mov
cmpsl
cmc
xchg
xchg
out
mov
in
xchg
cmp
aad
aas
jl
cmp
push
jae
xor
add
filds
push
mov
and
sbb
ret
add
ljmp
fildll
add
dec
ret
sbb
mov
les
or
adc
loop
cmpb
sub
stos
mov
dec
xchg
pop
es
insb
jge
fucomip
pushf
push
xchg
xchg
popf
lea
rorb
or
sahf
push
sub
int
out
jns
call
jnp
cmpsb
loopne
mov
popa
xor
in
xor
xor
sbb
push
inc
dec
shll
pop
mov
push
dec
inc
jnp
jb
add
mov
mov
ficoms
enter
popa
dec
adc
pop
sbb
push
mov
outsb
jecxz
xchg
loop
into
std
and
fwait
rcr
inc
pop
push
data16
inc
cmp
test
imul
jp
mov
ljmp
dec
sbb
xchg
test
xor
jno
addr16
outsl
push
inc
std
fisubl
lea
pop
cld
mov
cmp
mov
js
mov
in
jno
cltd
mov
idivl
out
xchg
mov
xchg
dec
xor
mov
jno
adc
adc
es
inc
dec
cltd
mov
ret
ja
push
jbe
movsb
jae
imul
das
call
das
data16
enter
sub
push
dec
mulb
rcrl
or
data16
loop
adc
fisubs
dec
sbb
stos
sbb
dec
aam
inc
lcall
das
and
add
dec
sbb
fstl
movsb
lret
mov
inc
popf
repnz
test
loopne
cmp
out
lret
hlt
adc
fisttpl
mov
mov
lret
lock
pop
stc
sbb
pushf
loope
add
sub
stos
in
jecxz
inc
mov
sahf
lea
inc
jl
xchg
mov
sub
push
icebp
jae
sbb
repnz
icebp
add
leave
push
push
pop
or
int3
sub
sbb
pushf
pop
add
mov
ljmp
jns
push
les
pop
dec
fildll
adc
mov
sarb
roll
inc
add
cmp
lret
sub
sarb
ss
mov
popa
pop
xchg
ss
mov
and
adc
cmp
xchg
aam
push
cmp
insb
inc
lcall
xchg
int
into
adc
loopnew,pn
rcrl
cmp
shl
mov
jo
das
mov
dec
jae
push
es
cli
cmpsl
inc
jg
sahf
sahf
push
mov
inc
sti
scas
hlt
pop
invd
stos
int
insl
sbb
xchg
lds
xorl
jl
cmc
add
xor
dec
and
mov
push
mov
std
and
mov
fisubrs
xchg
pop
loope
dec
mov
into
std
ja
jb
jge
sub
je
lret
push
lahf
sbb
adc
mov
es
shrl
jecxz
mov
pop
stos
lds
mov
ficomps
data16
fucomi
mov
mov
sti
xlat
mov
out
inc
fcmove
sbb
mov
mov
inc
cmpsl
push
mov
or
add
or
dec
in
adc
sarl
xor
jmp
out
and
bound
or
js
test
pop
mov
lods
push
jae
xchg
push
fs
test
je
shr
sub
fdivp
out
in
test
push
xor
stos
ret
mov
test
aas
int3
stos
mov
lahf
sahf
aaa
test
leave
pop
enter
adc
lret
scas
out
lds
add
rcll
jae
xchg
ficompl
xlat
lret
stc
xor
xor
sub
sbb
mov
mov
pop
aam
test
pushf
out
mov
or
pop
dec
adc
xchg
mov
int
sbb
js
movsl
adc
push
imul
rolb
add
xchg
jbe
loop
repz
shll
aam
sub
sub
or
fcoms
sbb
mov
adc
inc
movsl
es
add
xlat
outsl
jnp
insl
add
inc
addb
pop
push
inc
lods
xor
nop
mov
xchg
ret
mov
xchg
out
or
pop
cmp
sahf
call
repnz
stos
dec
pop
into
inc
jae
movsl
sahf
jb
int
jg
movsl
xchg
dec
pop
push
lahf
test
add
aas
rcll
dec
and
cld
jg
int3
mov
cmp
jle
or
rcrb
push
int3
inc
mov
pop
mov
cmp
mov
fisubs
add
int3
iret
arpl
inc
xor
int
adc
push
jg
xor
mov
dec
imul
inc
adc
pop
aad
inc
scas
sub
pop
sub
adc
sbb
pushf
mov
jbe
mov
fsubrs
cmovp
cmp
movsl
push
fiaddl
jno
clc
aam
sbb
outsb
adc
in
loopne
ja
jno
rep
xchg
xchg
cmp
outsl
roll
cltd
mov
xor
dec
ljmp
imul
out
and
mov
mov
mov
and
dec
dec
pop
aas
fnstenv
jp
sub
xor
addr16
add
fwait
mov
push
fisttpl
push
xchg
aam
test
xchg
inc
pop
dec
pop
pop
popf
xor
sub
fbld
sbb
dec
mov
subl
xorb
inc
idivl
push
adc
test
cmp
fisttpll
mov
mov
ret
xchg
lods
or
out
notl
je,pn
mov
sbb
lret
repz
in
push
jmp
fs
xor
xchg
pop
inc
leave
shl
mov
mov
scas
aam
mov
add
xor
lods
mov
push
aad
rorb
jnp
jecxz
push
lcall
int
arpl
xchg
sbb
mov
pop
std
aad
scas
add
cmc
icebp
add
imul
jle
xor
pusha
mov
into
pop
out
mov
rcll
mov
popl
or
call
std
cli
add
pop
jge
cmc
sbb
jbe
mov
dec
jno
js
in
jns
push
icebp
mov
fidivs
enter
cmpsb
and
out
push
inc
fdivrl
xchg
add
dec
and
fcomps
or
aam
xor
test
sbb
or
dec
inc
ss
sti
add
xchg
adc
sub
push
in
adc
dec
pusha
lods
stos
xor
add
inc
rcrl
lock
xchg
xchg
inc
bound
mov
jmp
je
fdivl
or
in
mov
cmp
mov
cmpb
dec
pop
adc
lret
sti
out
aam
je
jp
inc
sbb
outsl
xchg
pop
ja
mov
push
sub
push
fpatan
mov
cmpsl
xor
xor
enter
push
or
jb
test
push
les
dec
cld
pop
cld
and
xor
lret
push
movsl
jg
sub
shlb
rclb
jl
mov
push
dec
imul
ret
xchg
popa
inc
fnsave
sub
ja
jne
xchg
xor
jmp
fnstenv
lcall
mov
cltd
sbb
sbb
pop
ja
out
xchg
jle
jbe
xchg
aas
and
aaa
or
sbb
dec
and
fwait
push
ja
scas
push
repz
out
jle
rep
ficompl
in
inc
pop
pop
sub
loope
cmp
sub
and
pop
sbb
into
mov
cmp
rorl
in
and
fbstp
ds
push
shrl
fstl
pop
dec
arpl
mov
les
adc
int
mov
sub
loop
bound
mov
xchg
imul
scas
sbb
mov
lret
and
pusha
int3
and
das
mov
xor
nop
mov
les
pop
mov
insb
shl
cmp
sbb
sbb
xchg
sub
fst
jg
jmp
aaa
fnstcw
addl
jmp
mov
pop
dec
sbbl
ds
hlt
mov
mov
dec
mov
sbb
jg
mov
push
outsb
popf
push
inc
jne
or
push
push
clc
mov
pop
dec
ss
push
sub
and
push
dec
pop
hlt
sbb
jmp
mov
repz
iret
lock
pushf
es
icebp
lret
xchg
jle
pop
inc
dec
mov
cmp
incl
mov
jg
cmp
out
adc
mov
jge
repz
insb
mov
xchg
ljmp
dec
and
mov
xchg
jne
pop
adc
adc
testb
ffree
cmp
jecxz
mov
xchg
xchg
add
js
stos
mov
cmp
xchg
pusha
adc
and
jl
jno
test
fcom
xchg
ss
jmp
push
mov
xor
add
adc
loope
icebp
or
cmp
sub
pop
mov
cmpl
inc
mov
xor
add
adc
loope
icebp
or
cmp
sub
pop
mov
cmpl
inc
movsb
push
test
fdivl
cmpsl
add
adc
loope
icebp
or
cmp
and
xorl
push
and
xor
add
loope
icebp
cmpsb
imul
and
xor
add
adc
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stc
sub
xchg
or
mov
pop
and
adc
add
jno
fs
push
flds
sub
hlt
imul
cmp
test
add
je
add
push
leave
inc
fldcw
and
adc
inc
sbb
imul
jb
notl
movsl
and
dec
rcrb
jl
shll
pop
pop
sub
inc
sbb
shrb
ss
mov
arpl
hlt
inc
inc
shll
jbe
mov
stc
cmc
mov
in
mov
xchg
fildl
jl
xchg
mov
xchg
cld
lcall
cli
mov
jmp
adc
jmp
push
mov
add
sti
sbb
stc
sbb
mov
imul
adc
loop
xchg
nop
sbb
jmp
pop
cltd
xchg
xor
xor
das
imul
repnz
ret
cmp
mov
icebp
clc
fs
xchg
movsb
cmp
mov
pop
test
sbb
push
leave
and
rorb
pop
lcall
sub
inc
fisubl
sbb
mov
sub
roll
jp
sub
ja
int3
gs
jno
push
outsl
and
push
insb
lds
pop
in
aam
les
test
add
je
fs
push
leave
inc
fnstenv
test
hlt
imul
pop
xor
and
adc
add
je
fs
push
leave
inc
fnstenv
fcmovnu
mov
push
mov
cmpsl
xor
fisttpl
mov
xchg
cmp
mov
xor
cwtl
adc
pushf
sub
add
clc
clc
mov
imul
pop
mov
push
repz
imul
iret
fldenv
push
sarb
popf
jne
clc
sbb
aas
pop
cld
lret
jo
jecxz
xor
jns
lahf
jae
jae
mov
enter
adc
xor
push
xchg
or
mov
pop
dec
add
int3
loop
push
sub
jle
mov
xor
gs
push
xorb
xchg
inc
dec
cltd
ds
pop
pop
cmp
pop
ljmp
sbb
daa
adc
inc
fisubrs
test
and
push
and
sub
test
repz
cmpsl
nop
daa
cmp
into
or
xchg
adc
adc
inc
push
insb
mov
sbb
sub
sbb
dec
rclb
scas
xor
cmp
enter
pop
es
rcrb
fcoms
bound
cltd
idivb
mov
add
xchg
rcrb
pop
jecxz
add
test
loop
xor
fistps
cld
pop
and
mov
cld
mov
hlt
push
sub
xlat
ljmp
shrl
sahf
inc
daa
jle
xlat
mov
push
cmp
cmp
sahf
ljmp
mov
shrb
jbe
pop
js
cwtl
mov
sbb
js
int3
in
xor
and
lock
mov
inc
inc
or
inc
sbb
jge
aad
scas
dec
decb
lea
cmpsb
call
pop
js
fidivrs
fldt
xchg
leave
jo
dec
int3
push
fmuls
sbb
adc
ljmp
gs
add
jno
pop
popa
cmp
sub
jno
xchg
cltd
outsl
je
mov
sub
fnstsw
and
scas
xor
clc
aaa
sub
mulb
sub
aam
lcall
sbb
shl
jbe
pop
out
popf
pop
in
pop
cltd
mov
stc
xchg
divb
loop
in
add
lea
adc
shll
push
pop
dec
mov
cmp
jo
daa
loop
lcall
fcoms
loopne
or
icebp
sbb
out
cmp
int
cmp
inc
jb
enter
imul
jecxz
sub
inc
andb
int3
sub
fisttpll
ficompl
cli
xchg
mov
dec
movsb
and
xlat
test
mov
and
addr16
neg
aaa
js
repnz
pop
fs
mov
and
push
jo
jg
mov
mov
sub
fs
push
pushl
paddusb
inc
mov
jp
fisubrl
xor
pop
cmp
aaa
push
lods
fadds
addl
call
xor
cmp
lcall
cmpb
xor
sub
ret
ror
mov
xor
movsl
lcall
xchg
pop
cmpsl
pop
lahf
inc
gs
push
icebp
xchg
dec
mov
gs
sbb
popa
cltd
or
pop
inc
push
out
das
out
or
stos
jae
push
fs
imulb
pop
clc
dec
pop
pop
lds
repnz
bound
stos
pop
dec
popf
popa
fsubr
es
sub
rcll
cli
jp
and
sub
movsl
mov
cltd
xchg
out
xchg
mov
mov
or
cltd
orb
adc
dec
and
add
fstpt
mov
subl
lret
aad
fimull
push
jno
out
out
push
stos
cmp
xchg
test
ja
repnz
xchg
neg
aas
rcll
jl
out
stos
pop
and
into
imul
cmpsb
mov
adc
ret
jns
lea
icebp
xchg
fisubrl
mov
popf
pop
cltd
inc
je
shll
xchg
push
sbb
popa
xchg
pop
ret
mov
cli
test
out
adc
into
pop
and
sti
popf
xlat
aaa
inc
ud2
into
xchg
inc
pop
xchg
mov
or
push
outsb
cwtl
out
dec
xchg
sbb
xchg
stos
pusha
sti
data16
fwait
sub
sarb
jmp
or
data16
movsl
fs
fists
sub
adc
cmp
fwait
das
repz
clc
inc
rolb
ds
es
jmp
imul
sub
mov
in
aad
mov
jbe
mov
sub
mov
pop
or
cmpsb
sbb
cli
mov
int
xchg
dec
pop
in
fnsetpm(287
or
pop
lahf
xlat
sub
or
rclb
or
stos
adc
jae
adc
sub
ficoml
mov
sti
in
outsl
mov
xchg
fbld
pop
nop
pushf
in
inc
xor
in
sti
subb
in
cs
inc
cmc
mov
arpl
push
mov
adc
loop
mov
and
insb
mov
addr16
fsubrp
sub
out
mov
inc
xor
push
cmp
adc
in
rol
fadd
ds
gs
dec
add
fsub
xchg
mov
cli
movsb
lods
adc
movsl
clc
add
mov
in
jge
cmp
add
mov
out
inc
xchg
data16
adc
iret
sub
jg
xchg
fmulp
addr16
and
push
xchg
icebp
cmp
cltd
xlat
daa
pop
mov
or
xchg
js
gs
lcall
mov
adc
jl
lods
lret
fisubs
and
leave
inc
rclb
xchg
outsb
cld
jmp
jae
mov
jno
sbb
sarl
insb
enter
xor
int
repnz
add
cld
sbb
mov
es
in
enter
jb
adc
push
out
xor
push
in
jno
ja
jae
jge
mov
cmp
jns
loope
mov
cli
push
xor
pop
popa
cmp
inc
cld
xchg
pop
fwait
rcl
test
adc
daa
mov
jnp
dec
push
ret
jp
dec
loopne
mov
repz
repz
fs
jo
cli
loope
daa
addl
daa
pop
out
push
cmpsl
ret
push
mov
and
fistps
mov
inc
clc
adc
inc
push
popa
pop
or
push
inc
lods
cmp
push
cs
out
ljmp
xor
stc
clc
pusha
or
jmp
mov
aad
xchg
xchg
mov
add
fwait
aad
imul
and
xor
arpl
ret
adc
loope
sbb
and
push
pushf
lods
clc
insb
mov
xchg
mov
mov
out
inc
arpl
ret
repnz
mov
xchg
cltd
popf
rorl
mov
sbb
xor
lcall
pop
leave
in
mov
xorl
rclb
mov
jns
xor
adc
shlb
pusha
cli
inc
push
outsb
mov
pushf
dec
sbb
fmuls
jmp
mov
outsl
dec
jb
fiadds
jne
mov
test
jns
dec
fwait
xor
andb
dec
cli
xchg
push
mov
or
ret
fidivs
mov
mov
enter
pop
pop
sbb
test
aas
dec
jge
mov
cmpsl
push
imul
push
ljmp
push
and
push
add
add
lcall
popl
sub
sub
rcll
movsl
pop
fsubrs
inc
push
xor
inc
pusha
call
int3
mov
cmp
lea
push
cmp
pop
std
jp
lret
mov
fsubr
jae
mov
ds
xchg
shll
movsb
scas
cli
dec
jb
hlt
enter
aam
test
cmpsb
je
les
xchg
into
movsl
icebp
sbb
pop
cmpsl
ljmp
lret
dec
int3
loopne
cmp
sub
and
gs
les
pop
jnp
aam
add
push
mov
sti
loopne
xchg
push
or
ljmp
add
pop
in
scas
sbb
stos
sub
xchg
and
cmp
push
xchg
fisttps
push
adc
jl
dec
sub
push
xchg
xor
inc
or
movhps
in
dec
cs
movsb
outsl
fldt
lock
or
enter
out
scas
xlat
andl
and
mov
pop
and
call
mov
cli
and
push
ss
ret
stc
in
sub
push
jge
ror
adc
repz
xchg
mov
xor
lret
addl
xor
hlt
les
dec
push
xor
adc
push
xchg
into
sub
pop
imul
lret
lahf
sbb
jne
js
sbb
aad
cmc
jmp
xchg
test
arpl
fnsave
test
aad
imul
xchg
rcl
xchg
in
and
jns
cmpsb
cmp
push
js,pt
jle
pop
mov
push
sbb
pop
push
xchg
imul
outsb
stc
jecxz
lock
jb
mov
jbe
jmp
cmp
test
cmpsb
lds
cmp
xchg
jno
sub
lds
andb
aas
call
xor
xor
lcall
shll
cmp
aad
push
cmp
mov
sbb
mov
into
lods
sbb
inc
jno
lea
jmp
push
pusha
rcr
shrd
inc
dec
icebp
sbb
xchg
orl
enter
testl
shr
or
inc
jecxz
in
push
sbb
int3
fdivrs
daa
ljmp
push
cmpl
jle
mov
repz
leave
stc
pushf
pop
xchg
fistpll
rcr
adc
ds
sub
xchg
jo
cmpl
push
fnstsw
mov
sub
movsb
mov
jne
cs
movsl
xchg
inc
or
fimuls
lahf
les
fiaddl
hlt
jae
das
stos
lds
jnp
xchg
xor
xor
adc
and
jno
aam
cs
mov
mov
lods
movsb
cld
out
xchg
into
std
jecxz
imul
inc
inc
or
rclb
movl
sub
nop
dec
push
pop
cmp
xchg
sbb
dec
xchg
hlt
push
xorb
mov
inc
dec
daa
xor
lret
cmp
js
push
sub
imulb
inc
mov
mov
stos
and
pop
test
insb
mov
jl
adc
hlt
ficoml
gs
stos
pop
xchg
lods
mov
and
sub
sbb
jmp
iret
cld
ds
mov
mov
jp
sbb
inc
jmp
fcoms
mov
shlb
movsb
repz
xor
out
mov
out
adc
push
jl
cmp
xchg
test
cmp
aad
inc
daa
ja
push
mov
aad
sbb
aam
inc
shrl
int
fucomip
fs
jo
xchg
lds
fwait
xchg
addr16
in
adcb
push
adc
mov
and
cltd
cs
les
pusha
in
dec
xchg
pop
or
repz
bswap
ja
pop
jne
cmp
and
mov
mov
push
xchg
xchg
xor
mov
or
sbb
xor
mov
xchg
push
aad
ja
clc
mov
or
rclb
and
add
jle
imul
add
fisubrl
adc
sarb
fsubrs
inc
push
lds
loope
mov
push
frstor
xor
inc
mov
inc
popf
dec
adc
int
ss
sbb
cmp
sbb
movsl
push
cmc
adc
add
and
aaa
ljmp
in
jl
sbb
jmp
into
inc
nop
decl
fldl
stos
fwait
and
repz
imul
dec
adc
add
hlt
ljmp
lahf
jnp
insl
jmp
add
sti
shll
mov
inc
iret
dec
mov
out
popa
pop
enter
lahf
fists
xchg
sub
cmp
div
ret
xlat
bound
test
jo
xchg
add
in
lcall
popf
and
jl,pt
jg
inc
push
mov
pop
icebp
hlt
push
and
xchg
inc
pop
mov
scas
in
shrl
xchg
cmp
mov
mov
popa
push
repz
fxch
adc
sub
aas
cmp
scas
orl
test
sbb
pop
xchg
stos
xor
mov
lods
movsl
nop
push
leave
xor
divb
or
pop
rcrl
dec
mov
movsl
sub
sbb
in
jg
fdivrs
pop
pushf
ret
cmp
or
arpl
pop
mov
add
mov
pusha
das
xor
xchg
fimuls
movsb
outsl
popf
push
popf
jnp
mov
repz
pop
incl
icebp
in
pusha
pop
add
inc
xchg
out
jecxz
outsb
imull
imul
jecxz
insl
adc
sbb
mov
cli
aad
loope
jmp
int3
xor
cwtl
into
ficompl
iret
pushf
dec
sub
mov
or
mov
je
les
ljmp
mov
js
std
mov
shrd
push
arpl
ds
inc
ds
dec
fidivrs
sar
lods
add
or
add
lcall
dec
imul
popa
sti
push
push
int3
cmp
push
sbb
jb
ja
out
ja
fildl
scas
daa
cmp
pop
movl
ljmp
mov
repz
jo
dec
ljmp
push
pop
sbb
sbb
mov
sahf
fs
mov
mov
inc
add
xchg
sub
xchg
rol
out
icebp
pusha
aad
inc
mov
jp
lcall
aam
and
xorb
outsl
push
jno
icebp
or
das
inc
sbb
sahf
jecxz
scas
fcompl
mov
and
jne
int3
inc
loope
pop
or
xor
movsb
rcll
and
xlat
dec
sbb
jg
mov
movsl
lcall
mov
inc
loop
xor
scas
repz
dec
repnz
aad
dec
aam
mov
mov
dec
adcl
push
stos
daa
in
sti
mov
ds
adc
movsb
pop
inc
jbe
sub
lahf
lea
fs
aam
cli
arpl
nop
add
jge
pop
std
daa
mov
in
mov
pop
and
cli
cmpsb
cmp
adc
aaa
sbb
roll
ljmp
add
hlt
push
clc
das
add
mov
psubusb
mov
pop
mov
fildl
jnp
clc
pop
fidivrs
adc
jne
sbb
inc
orl
xchg
cwtl
xchg
cli
sbb
fisubs
push
sbb
cli
cmp
insb
into
xchg
icebp
jl
mov
jge
out
push
loop
jns
sti
jno
les
sbb
pushf
inc
mov
mov
ret
cwtl
popa
stc
adc
xor
fisubl
in
or
pusha
sub
mov
cmc
xchg
repz
dec
ss
vucomisd
jb
inc
push
mov
or
lock
adcl
out
js
dec
jge
idiv
shrl
pop
inc
xor
insl
and
xchg
in
jnp
mov
scas
outsb
mov
in
adc
pop
sbb
or
pushf
dec
push
push
pop
xlat
jl
ss
or
js
mov
lods
popa
jecxz
stos
test
insb
dec
je
mov
mov
jnp
enter
xorl
clc
push
ljmp
addb
add
ss
xchg
daa
icebp
jbe
and
jg
movsb
divl
into
dec
leave
adc
rcrb
jg
aad
in
cmc
les
test
pop
sbb
stos
stc
xor
cli
push
fmuls
xchg
inc
cmc
pop
sub
mov
insl
cmc
int
xchg
inc
mov
lcall
pop
pop
mov
icebp
add
test
gs
test
add
mov
andb
and
sub
aaa
mov
lods
inc
xchg
sub
jb
push
dec
jne
call
jae
inc
cli
fdivr
ss
aaa
std
repz
jmp
cmp
mov
inc
mov
jmp
das
mov
arpl
mov
pusha
lods
cmp
aam
jecxz
xchg
add
xor
hlt
add
add
int
test
xchg
mov
test
test
push
xor
lock
enter
xor
movsb
cmpsl
aaa
cmpsl
pusha
jne
imul
mov
xor
adc
fdivl
movsb
push
hlt
stos
xchg
mov
dec
or
loop
jne
aam
add
push
and
mulb
dec
jecxz
mov
in
icebp
add
dec
cld
shl
loope
add
mov
adc
or
or
cs
jae
mov
std
dec
jne
data16
add
in
imul
push
ret
jno
lods
jbe
mov
xchg
mov
aad
xchg
inc
imul
xchg
lods
dec
rcll
sub
std
jp
aas
sbb
pop
mov
mov
scas
scas
cmp
dec
push
pop
xchg
cwtl
popa
shlb
mov
out
out
out
pop
lret
push
push
daa
stc
xchg
loopne
sbb
cli
popa
addr16
shlb
cmp
lds
push
sub
cmpsl
out
ss
xchg
lcall
lds
mov
adc
enter
mov
jmp
cltd
sub
mov
decb
xor
dec
or
addr16
ljmp
dec
nop
out
xchg
nop
xlat
xchg
ljmp
cmpsb
pop
cmp
jge
pushf
add
outsl
push
mov
rcrl
mov
mov
mov
sbb
iret
xchg
xchg
repnz
insb
shlb
mov
test
mov
loope
clc
xor
cld
push
orb
sbb
out
shll
out
xlat
cmpsl
mov
in
jecxz
mov
dec
hlt
in
pop
cmpsl
xchg
inc
mov
sahf
xor
lcall
and
adc
push
cmpsb
inc
add
into
jno
or
xor
ja
xlat
adc
mov
add
sahf
sbb
rcll
mov
lds
loopne
fdivl
cmp
sbb
rclb
out
dec
fmull
push
push
mov
add
jb
or
or
lods
mov
cli
jb
sub
mov
out
arpl
mov
inc
xchg
aad
xor
imul
insl
add
fs
jae
movsl
push
shlb
out
or
mov
pmullw
ret
pushl
scas
inc
sbb
dec
sbb
jge
and
jb
xorl
jmp
ja
xchg
dec
mov
cmpsl
icebp
ret
push
cmpb
xlat
arpl
jb
jns
adc
mov
ficoml
adc
out
ljmp
adc
inc
add
jmp
cs
movsl
mov
scas
sub
mov
nop
data16
mov
test
std
mov
les
loop
ret
mov
ret
ljmp
ffreep
push
in
in
sahf
jbe
sub
in
stc
push
cmp
cmp
cmpsb
fistpl
rclb
ja
sbb
dec
add
sbb
aam
dec
daa
dec
aas
in
rcrb
cmc
fisubrl
stc
xadd
mov
popf
pop
sub
xor
sub
dec
fidivs
mov
jge
ja
fsubl
mov
jne
mov
fsubrl
adcl
or
or
mov
inc
mov
xchg
out
xchg
enter
js
mov
push
imul
adc
fcoms
adc
mov
iret
data16
mov
loop
push
sbb
sub
mov
in
out
lahf
xchg
sub
xor
cmp
cld
dec
loop
xlat
leave
fmul
aaa
sbb
cmpsb
fstpl
outsl
or
ja
add
or
mov
fidivrl
cmp
xor
mov
or
pop
sub
loope
push
fdivs
push
js
pushf
jp
sbb
push
out
dec
lea
out
jno
js
inc
jb
xchg
mov
clc
jecxz
stos
xchg
or
mov
pop
dec
les
add
xchg
icebp
rcl
xchg
out
popf
movsl
es
aad
nop
add
mov
add
sub
lcall
push
push
mov
or
pop
mov
call
jge
out
jle
xchg
lret
xlat
mov
fnstsw
ja
or
xor
jbe
in
push
and
dec
outsl
outsl
imul
push
fs
mov
mov
xor
in
mov
or
in
mov
mov
mov
test
adc
adc
cld
mov
fidivs
int3
mov
inc
jae
pop
ret
fsubrl
sbbb
popl
cmovns
rcll
cmc
scas
inc
jle
imul
ljmp
imul
sbb
jle
fldcw
out
je
adc
cwtl
and
ss
lea
xchg
and
fiaddl
test
cld
cmp
cld
add
icebp
and
jg
push
cmp
jnp
cmp
int
les
notl
inc
dec
repnz
adc
mov
sarl
fs
ret
loopne
cmp
aaa
sub
push
iret
es
repnz
fisttps
and
gs
mov
lods
pop
loop
xor
stos
test
xlat
adc
dec
sub
jmp
xor
dec
test
addr16
sub
int
pop
mov
jle
frndint
mov
pop
stos
cmpb
pop
cmp
sbb
imul
pop
xor
and
adc
add
je
fs
push
leave
inc
fnstenv
test
hlt
imul
pop
xor
and
adc
add
je
fs
push
leave
inc
fnstenv
test
cmc
imul
pop
xor
add
push
leave
je
lods
sub
sbb
imul
cltd
xor
fistl
mov
popa
in
push
stos
ss
pop
sahf
aaa
mov
jbe
sub
cmp
addr16
into
mov
cmpsl
push
movsl
jle
outsb
pop
out
out
pop
scas
pop
repnz
mov
push
out
inc
fidivs
addr16
xchg
push
cmpsl
ds
pop
pop
testl
or
push
loopne,pt
mov
outsl
into
jge
je
mov
adc
mov
loop
sahf
inc
out
cli
mov
in
jns
sbb
icebp
cmp
sti
pop
or
push
dec
push
inc
push
mov
outsb
mov
enter
fwait
cmpsl
repnz
adcl
stos
inc
call
cwtl
inc
aaa
add
mov
cs
or
push
and
sub
xchg
or
bound
pop
jnp
bound
add
xchg
das
into
cwtl
aas
js,pn
push
lock
addl
out
enter
ja
mov
push
sbb
cmpsl
cmp
inc
sbb
xor
lahf
aaa
jo
add
cmpsb
and
ljmp
cli
mov
test
mul
pop
clc
adc
push
xchg
inc
fisubrs
jle
mov
push
iret
shrb
adc
faddl
ljmp
sub
jge
jnp
imul
mov
sub
in
inc
out
and
adc
out
ret
jbe
pop
movsl
add
rclb
call
push
lods
cmp
inc
fidivs
addr16
xchg
mov
cmpsl
jle
outsb
pop
testl
sahf
aaa
mov
push
out
inc
fidivs
addr16
xchg
mov
cmpsl
jle
outsb
pop
testl
pop
push
dec
xor
push
and
add
in
jge
and
out
xchg
call
nop
repz
lret
cmpsl
sbb
pop
or
mov
lret
jmpw
mov
sti
xor
data16
hlt
shl
ja
jns
add
mov
vprotd
jno
xchg
jae
cmp
inc
shrl
xchg
xor
insb
inc
inc
js
lret
addr16
lcall
jbe
popf
orl
loopne
popa
mov
mov
xlat
das
fbstp
cmp
loop
lods
test
lret
sbb
jb
fs
push
xor
jle
mov
jnp
rol
cs
rolb
aad
sub
call
movsb
xchg
outsb
mov
sub
mov
clc
test
test
nop
mov
and
sub
repnz
pop
mov
sbb
std
mov
iret
scas
fnsave
xchg
sbb
cmp
dec
sahf
sub
sbb
jae
push
aam
add
movsb
cltd
cwtl
sbb
and
testl
loopne
mov
cmpsl
sub
dec
daa
ss
xchg
or
or
jns
add
add
add
outsl
mov
clc
push
xor
xor
dec
dec
push
sub
push
dec
int3
or
filds
jl
jbe
icebp
xor
fsubrs
test
lods
cmp
inc
scas
xchg
pop
adc
or
xor
jecxz
imul
orl
jecxz
aam
outsb
fdivp
shlb
lret
pop
push
mov
mov
and
add
jge
ror
pusha
bound
cmp
sub
dec
cltd
sub
sub
or
push
outsl
xchg
sbb
andl
sbb
test
ucomiss
inc
or
fst
or
movsb
push
lret
sbb
fsubl
call
stc
repz
divb
pop
shl
lods
add
dec
pop
addr16
or
dec
jg
les
dec
sahf
aam
and
xchg
fdivp
int
hlt
pop
mov
ds
inc
or
adc
out
lods
sahf
ss
in
ljmp
xor
mov
jecxz
cmp
movsl
inc
and
mov
jb
sbb
lock
repnz
std
push
insb
cltd
gs
popf
lret
iret
std
in
push
mov
push
sbbl
push
test
clc
mov
loopne
mov
aas
ss
add
mov
jecxz
xor
cmpsl
inc
xchg
leave
cmpl
lea
push
cmp
imulb
jbe
lret
push
xor
pop
add
inc
aam
clc
pxor
sbbl
add
adc
xchg
into
ljmp
pop
hlt
mov
stos
lods
mov
adc
inc
mov
cmp
jle
mov
add
mov
outsl
mov
fcmovnb
rclb
xchg
adc
jo
addl
daa
mov
cmp
mov
lea
or
rorb
stos
iret
jmp
int
jno
arpl
js
inc
les
or
inc
mov
nop
inc
add
push
pop
loopne
ljmp
xor
mov
cs
out
test
in
adc
addr16
lret
divb
in
lds
cld
or
cld
inc
mov
jg
add
aas
jnp
pop
pop
jge
js
fsubl
lea
cmpsb
insl
scas
leave
daa
fbstp
jle
fwait
in
insb
shll
mov
arpl
in
or
xchg
sub
mov
mov
cmpsl
push
cmp
mov
mov
xor
clc
std
jle
mov
loopne
add
dec
sbb
jg
repnz
xor
clc
jne
enter
dec
fdivrl
push
cwtl
leave
or
clc
pop
mov
call
test
cs
int3
xchg
mov
or
push
jno
or
jno
fstpl
jb
jmp
dec
daa
insb
adc
xchg
inc
cmp
bound
mov
neg
or
mov
dec
cmp
das
ljmp
je
je
scas
xchg
mull
iret
enter
mov
rclb
leave
andb
bt
icebp
outsb
push
push
scas
ss
mov
in
jle
test
push
popf
inc
scas
add
stos
stos
pop
andb
cwtl
mov
mov
dec
add
mov
cmp
inc
pop
mov
push
mov
mov
pop
cs
ds
mov
dec
aaa
int
and
movsb
int
ds
pop
mov
adc
inc
xor
or
inc
jmp
xor
dec
inc
out
pop
adc
add
mov
jmp
repz
repnz
lahf
inc
pop
pop
mov
and
adc
fwait
out
dec
das
push
push
xor
push
jge
mull
and
shll
or
cmp
xor
cli
xor
std
mov
test
stc
test
xlat
fsubrl
adc
cmpsb
xchg
and
pop
mov
imul
add
add
or
lock
or
jge
xchg
ficompl
sub
xchg
cmp
cmp
arpl
aaa
rcrl
adc
inc
mulb
xlat
pusha
mov
cmp
push
jne
jp
mov
loop
inc
pop
in
jnp
cmp
xchg
add
cs
aam
out
mov
dec
jle
or
iret
mull
or
and
ficompl
sub
pop
and
loope
push
loop
ror
fwait
lret
dec
jne
and
sbbb
dec
sahf
mov
push
mov
loopne
repnz
in
add
sub
jne
xchg
out
and
int3
inc
lahf
add
cs
jle
dec
jmp
mov
sbb
sbb
inc
jmp
lds
jmp
fs
adcb
or
xchg
xchg
sahf
testl
sbbl
inc
pop
cmp
inc
sub
sbb
std
jp
pop
and
popf
inc
iret
adc
mov
sahf
and
fldl2t
adc
jbe
mov
in
pop
push
adc
iret
sarl
xor
outsl
push
ds
push
push
add
inc
mov
jbe
push
imul
push
lea
cmp
push
mov
les
jbe
cmp
mov
js
daa
pop
jmp
jbe
clc
sub
cmp
adc
xchg
xor
pop
pushf
adc
mov
pop
cmp
in
pop
pop
sbb
aas
dec
fnstsw
icebp
add
xor
dec
subb
out
xchg
shrb
fisubrl
cs
lea
mov
push
or
mov
mov
lods
mov
mov
mov
jno
lcall
and
xor
mov
arpl
xor
mov
lock
mov
sbb
addr16
inc
mov
inc
lcall
mov
sub
jge
in
sbb
data16
je
adc
mov
mov
push
pop
in
insl
into
jge
in
xor
rep
inc
nop
dec
mov
lds
sbb
xchg
pushaw
jle
or
xchg
inc
or
xchg
lcall
test
xor
stos
sahf
xor
jbe
jbe
ret
cmp
out
add
rcrl
rcl
mov
dec
pusha
into
push
ret
jle
movsb
in
clc
mov
jp
push
sbb
mov
jne
sub
outsb
xor
call
push
and
jg
xlat
adcb
jbe
push
inc
loop
sub
pusha
icebp
imul
mov
jmp
in
push
push
bound
hlt
sbb
loopne
ds
mov
std
xlat
cmp
sbb
insl
mov
enter
icebp
pop
push
push
lea
adc
and
xchg
lahf
pop
pushf
xchg
inc
push
sbb
sbb
push
std
mov
stos
push
xchg
dec
or
aad
dec
stos
pop
or
insb
mov
and
ret
pop
mov
loope
inc
jb
sub
adc
push
sti
sbb
sub
mov
cld
and
fwait
xchg
push
mov
jo
aaa
loope
dec
sbb
push
out
stc
xor
sub
sbb
sbb
stos
stc
sub
xchg
imul
hlt
pop
dec
lret
mov
addr16
push
imul
es
outsb
cmp
loop
leave
addr16
daa
ds
pushf
dec
or
mov
in
mov
enter
pop
out
xor
mov
add
stos
mov
mov
movsb
std
mov
adc
pop
fiaddl
pop
pop
push
in
jecxz
addl
jae
xor
mov
test
or
loope
mov
sub
mov
cmc
mov
lahf
xor
orb
sub
pop
pop
fisttps
mov
scas
inc
jle
inc
mov
sbb
lea
and
xchg
aam
rcr
aaa
jb
mov
push
cli
mov
add
arpl
aam
test
into
popa
jmp
inc
jbe
insl
mov
stos
and
scas
insl
cmp
aaa
sar
jg
cmp
lahf
push
loop
out
shll
clc
xchg
fcmovbe
adcb
xor
jno
dec
std
cmp
jg
or
pusha
xor
lods
pusha
mov
push
lods
mov
mov
movsb
rorb
xor
or
sub
pop
mov
or
insl
out
test
mov
fistl
gs
cmpsl
add
cmc
push
xor
leave
dec
dec
out
dec
xchg
mov
dec
xchg
outsb
dec
mov
adc
adc
or
pop
dec
push
hlt
mov
fcmovb
xchg
push
pop
ret
sbb
clc
cwtl
bound
popa
cli
dec
xchg
adc
or
pop
xchg
mov
lods
push
shl
insl
jl
pop
insb
mov
aaa
dec
rcll
mov
int
cmp
std
xchg
ret
jnp
lock
adc
mov
pop
sbb
xor
push
rcrb
sub
out
into
or
jle
fsubl
mul
loop
cs
sub
pop
push
inc
pop
aas
xchg
leave
ljmp
pop
popf
lret
pop
mov
adc
adc
mov
rorl
add
xchg
jge
clc
mov
rcll
mov
daa
mov
pop
jno
ss
xlat
ds
mov
cwtl
out
pop
movsb
cmpl
mov
hlt
and
mov
cs
fdivs
stc
inc
shrl
jl
lret
clc
push
mov
int3
sbb
dec
ret
push
repz
mov
dec
test
mov
xor
mov
adc
imul
test
sub
jb
dec
mov
mov
sarb
scas
inc
test
jns
xlat
jb
dec
mov
inc
in
btrl
pop
test
pop
sub
add
push
xor
fidivl
mov
mov
or
arpl
pop
dec
neg
outsl
xchg
rcll
sub
insb
push
mov
ret
push
sbb
in
movsl
sub
jae
mov
test
cld
iret
sbb
in
out
test
outsl
xor
xchg
stos
jg
cmp
loope
jae
mov
xlat
or
xor
movsb
rorl
inc
pop
or
jne
orl
aas
aas
sarb
mov
xchg
xchg
dec
jns
sub
mov
test
es
or
aad
jge
push
int
lcall
popa
popa
inc
xor
shlb
push
add
aas
push
pop
lds
push
jnp
or
addr16
jns
mov
jae
ja
or
std
mov
icebp
ret
xlat
addl
jns
or
out
fidivl
lahf
insl
loop
cwtl
hlt
sbb
imul
js
lock
pop
ljmp
jp
call
xor
das
loope
dec
push
iret
pusha
js
mov
ljmp
or
inc
out
xchg
loop
sub
sbb
push
jo
loope
jns
sti
jmp
imul
hlt
mov
stos
cs
sbb
sbbb
loop
sub
sbb
fwait
dec
in
lock
mov
mov
mov
push
xor
and
cmp
stos
shl
into
sub
mov
outsl
push
adc
sbb
out
decb
and
or
mov
nop
adc
sub
cmp
stos
mov
pop
mov
pop
mov
xor
iret
or
or
sub
push
mov
gs
movsb
das
cmpxchg
cld
push
adc
insl
pop
jg
fsubrp
or
sbb
jecxz
sbb
dec
jne
dec
pop
pop
or
dec
lret
cmc
leave
hlt
pushf
mov
faddp
push
loop
dec
inc
pop
sbb
mov
loopne
nop
cld
scas
pop
call
push
dec
cmpsb
loopne
and
sub
inc
mov
loopne
jmp
outsb
cltd
clc
vucomisd
ja
xchg
loop
xchg
push
lock
daa
sbb
and
pushw
mov
or
add
ja
aad
push
adc
stc
ss
pop
xchg
xchg
idivb
adc
int3
add
lds
into
add
jb
nop
mov
xchg
xchg
and
stos
mov
dec
testb
out
in
sbb
mov
es
push
pop
cmpb
test
addr16
xor
fisubrs
or
xor
cmp
call
aaa
inc
adc
xchg
imul
pop
dec
fnstsw
addr16
pop
pop
icebp
xor
lds
adc
aad
shl
icebp
xor
test
pop
cmpb
clc
pop
cs
iret
sub
int
xchg
je
repnz
bound
aas
jecxz
xor
shlb
imul
sarb
lea
mov
inc
imul
or
iret
testb
dec
sbb
pop
stos
mov
sub
pop
dec
push
leave
push
sub
stos
out
and
stos
lods
xchg
imul
sbb
outsb
jae
push
in
mov
mov
push
xchg
sub
fwait
pop
addl
pop
add
das
cmp
sub
push
mov
and
and
mov
mov
out
stos
dec
jge
jg
ja
incl
pop
jmp
mov
adc
adc
cmc
pop
cli
sbb
dec
and
aas
mov
pop
mov
iret
sub
push
cld
sbbb
push
adc
movsl
sub
ja
lret
jne
jo
cmp
ljmp
pop
popf
mov
cmp
mov
sti
popf
xorl
push
lret
mov
in
xor
pop
or
adc
dec
xor
fidivs
mov
lret
popf
push
or
pusha
xor
mov
mov
jmp
mov
inc
es
push
pop
rolb
pop
sub
jmp
int3
push
mov
mov
jo
jns
fidivrl
fdivr
jecxz
mov
pop
repz
and
cmp
inc
and
and
add
sbb
shlb
repz
in
add
ja
lret
call
scas
shl
aad
outsb
outsl
pop
jne
ss
inc
lret
mov
or
dec
ret
jo
xchg
nop
or
mov
mov
xchg
test
and
xor
pop
out
aam
sbb
in
mov
add
xor
add
fcomi
mov
les
sbb
mov
or
sar
ret
pusha
fisubrs
frstor
push
popa
mov
jns
scas
dec
clc
cs
daa
add
test
mov
int3
jae
ljmp
call
in
jecxz
and
xor
xchg
pop
stc
mov
ss
rep
sbb
gs
in
iret
movsbl
movl
test
mov
scas
enter
cmp
jmp
mov
cmp
inc
fstl
nop
or
push
iret
fldenv
jmp
xorl
and
in
lret
mov
xor
jns
inc
adc
mov
lods
push
xchg
data16
mov
repnz
jmp
mov
push
inc
push
jg
fcompp
or
mov
xor
or
sarb
sbb
add
cmp
rcrb
add
fimull
jns
ficoms
into
icebp
mov
cmpsl
iret
addl
stos
push
and
lea
clc
dec
outsb
jb
int3
mov
out
add
and
cltd
add
push
shrl
xlat
int
movsl
out
daa
dec
add
push
lods
push
pop
mov
sahf
js
les
xchg
lods
std
push
cmpsb
or
adc
outsl
jg
add
push
test
ss
aaa
sbb
jne
hlt
add
mov
dec
or
xor
pop
adc
pop
jb
mov
mov
pop
mov
xorb
push
xor
mov
jbe
in
jecxz
pop
cmp
das
adc
mov
stc
sbb
ror
dec
mov
mov
xor
sti
stos
cs
in
push
mov
sub
mov
aam
lahf
jmp
std
test
inc
sahf
pop
push
fsubp
dec
sub
fisubrl
out
loope
cmpsl
xchg
gs
mov
jno
arpl
test
out
fbstp
mov
xchg
xor
pop
stos
jmp
lea
dec
pop
shlb
scas
popa
add
les
clc
movsb
outsl
out
sub
dec
or
mov
movsl
cmp
lods
lock
jb
sbb
xchg
lret
jb
cmp
jne
cmp
cmp
mov
lahf
cmpsb
loope
fbld
pop
in
loopne
or
lahf
jge
xchg
pop
cmp
mov
sbb
mov
push
or
push
jp
popl
xchg
sbb
and
push
int
sub
adc
dec
rclb
loop
sahf
pop
imul
rcll
loop
int
aaa
jge
or
fwait
scas
idivl
inc
adc
pop
jns
lret
sahf
ds
jmp
ds
sahf
xor
xor
cmpsl
pushf
lods
insl
jle
mov
pusha
push
ja
fdiv
fwait
inc
mov
and
loope
out
and
inc
sub
mov
cmp
push
stc
push
daa
inc
adc
cmc
aaa
repnz
std
in
pop
jmp
in
xchg
dec
dec
pushf
adc
push
sti
add
push
jno
rolb
lret
mov
sbb
jo
in
sarl
cltd
push
popa
mov
aad
loopne
movsl
test
movsl
out
or
jmp
xchg
xor
je
aas
iret
cmp
xchg
daa
pop
sbb
xor
dec
pop
movsb
sub
stos
add
pop
sub
jmp
fstpl
stos
inc
or
test
mov
rcll
mov
lcall
test
push
push
xor
test
add
add
inc
xchg
fisttpll
in
adc
mov
mov
nop
and
loop
orl
sar
icebp
jg
icebp
sub
xchg
mov
mov
adc
pop
mov
jl
jmp
mov
inc
sub
shr
cmp
pop
or
outsb
jb
iret
or
pop
mov
leave
imul
pop
cmpsl
je
cmpb
fucomip
pop
lds
outsb
lret
movl
aas
or
inc
test
enter
adc
mov
and
sahf
repz
dec
lds
adc
insb
add
mov
subb
adc
or
or
pop
sub
xlat
imull
dec
les
and
aam
aas
mov
insb
mov
test
test
sub
jae
push
cli
repz
or
rclb
mov
dec
cwtl
lret
inc
push
popf
push
cmp
fstpt
jg
test
push
fs
or
aam
int3
mov
cmp
insl
lret
mov
icebp
and
sub
add
adc
or
inc
dec
sarb
cld
jge
or
in
and
inc
jbe
mov
pop
icebp
out
and
inc
movsb
xor
xor
adc
out
gs
loop
push
fcompl
pop
push
xor
dec
push
mov
arpl
sbb
lock
jl
js
cmp
out
js
scas
imulb
or
cwtl
inc
std
sub
lods
or
mov
addr16
not
cmp
mov
popa
scas
jp
mov
push
int
movsl
xor
inc
outsb
scas
ss
bound
or
out
inc
lret
cmp
xlat
and
push
repz
jge
push
addl
inc
stc
dec
xor
pop
xchg
push
cltd
mov
mov
sbb
cmc
or
into
lret
pop
jge
aad
xor
aam
jp
sbbl
xchg
data16
or
andl
mov
aas
xor
movsb
nop
pop
jmp
lahf
cmpl
aaa
iret
jne
shr
daa
int3
lahf
mov
loopne
sbb
push
mov
lock
test
scas
popa
push
push
sub
cli
xor
pusha
and
mov
push
out
inc
fidivs
addr16
xchg
mov
cmpsl
jle
outsb
pop
testl
sahf
aaa
mov
push
out
inc
fidivs
addr16
xchg
mov
cmpsl
jle
outsb
pop
testl
aaa
mov
outsb
push
out
inc
fidivs
addr16
cs
mov
cmpsb
jle
jle
pop
mulb
pop
les
scas
daa
push
incb
ja
addr16
shrl
or
cmp
pop
daa
dec
pop
jp
push
jb
xor
and
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
stos
jecxz
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
test
in
enter
pop
daa
adc
aaa
frstor
fsub
mov
ret
aam
jl
testl
mov
sbb
xchg
pop
cltd
jecxz
pop
cmp
push
xor
addr16
repnz
ljmp
fisttps
jbe
sub
mov
int
push
fwait
outsb
dec
mov
pop
and
es
popa
mov
push
sbb
test
add
mov
xlat
inc
lds
enter
jge
aas
xchg
int3
sbb
das
inc
test
xchg
in
aaa
inc
shlb
enter
push
sbb
xchg
outsl
cmpsb
xchg
scas
int
outsl
ljmp
xlat
scas
scas
stos
imul
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
mov
jb
bound
sbb
or
je
jp
mov
jmp
xchg
sti
mov
xchg
mov
push
dec
inc
jp
sbb
push
or
dec
inc
sub
mov
ret
stc
mov
movsl
ffreep
cli
pop
adc
jle
push
emms
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
addb
enter
lret
mov
inc
pop
in
fidivrs
rclb
imul
adc
sub
mov
jge
jae
sahf
bound
mov
vpshaq
sbb
popa
popf
dec
and
loopne
push
fdivrp
cmp
out
jne
cs
imul
mov
and
or
xor
jmp
jp
or
mov
pop
mov
inc
mov
mov
mov
or
sub
cmp
xchg
cmp
jmp
pushf
xor
outsb
rcll
push
cltd
stos
pop
hlt
xlat
sbb
sbb
mov
or
rorb
xchg
mov
push
jbe
insb
addb
cmc
out
push
xchg
mov
data16
jp
xlat
mov
sar
inc
out
or
or
pushf
mov
cmp
es
cmp
cli
bound
clc
jg
cwtl
sbb
sbb
adc
pop
jg
rorl
mov
mov
outsb
xor
cmp
stos
mov
out
aad
lcall
dec
dec
mov
cmp
ss
adc
cs
sub
jge
popa
rcll
sub
jo
movsb
out
scas
sbb
xchg
mov
aas
das
cmp
je
jb
repz
mov
test
and
lahf
sbb
lahf
xchg
jecxz
mov
rcll
sar
mov
insb
add
rclb
mov
repz
lods
cs
fisttps
insb
test
test
jo
or
add
mov
aas
dec
jbe
out
lahf
jle
mov
leave
int3
and
in
jp
mov
xchg
imull
mov
pop
mov
sbb
loope
jle
int3
dec
mov
int
das
inc
sbb
pop
seto
aas
push
bound
enter
pop
pop
dec
mov
lock
gs
jbe
cli
fisubrs
repz
scas
scas
or
lret
push
pop
mov
ljmp
add
leave
jmp
rcr
pop
xor
dec
sbb
sub
aas
add
imul
jo
jno
outsb
rcrl
stos
jmp
aam
popf
xorb
push
xchg
rcrb
jle
leave
jae
or
in
adc
ljmp
push
das
add
iret
fadd
cmp
fmull
adc
sub
jo
adc
popf
into
jae
mov
rol
je
pop
faddl
sub
fadds
sub
mov
xchg
fldt
into
cmp
fnstenv
shll
aaa
movsb
in
test
movsb
pusha
add
push
mov
bound
jne
bound
mov
or
cwtl
addb
neg
cmp
stos
mov
jge
lods
push
jl
xlat
cs
push
and
inc
call
es
outsb
dec
jne
inc
ss
scas
movsl
inc
pop
stos
xor
sbb
stos
in
pop
ret
in
out
movsl
jmp
lahf
fs
cltd
mov
jmp
je
cmp
mov
cmp
rcll
andb
aad
jp
addl
dec
or
fldcw
adc
or
or
testb
pusha
scas
mov
hlt
sub
cmpsb
nop
inc
rorl
fmul
je
aas
rcrb
cpuid
popf
mov
test
ret
pop
adc
repz
jecxz
ret
inc
and
sub
or
xchg
loop
cli
pop
mov
jbe
push
add
lcall
sbb
inc
add
inc
mov
push
outsl
rclb
addl
iret
cli
movsb
inc
xchg
add
outsl
sbb
out
pop
adcl
jns
mov
mov
sbb
cmp
lods
loop
sbb
push
test
add
dec
mov
ss
or
leave
add
xor
test
enter
lcall
mov
xor
inc
lahf
xchg
repnz
sub
cmpb
subb
mov
mov
leave
outsb
push
pop
mov
shrb
ljmp
cmp
push
inc
cmpsb
arpl
push
pushf
cs
mov
mov
mov
ja
xchg
imul
es
arpl
xchg
mov
push
dec
dec
inc
mov
push
je
add
out
movsb
push
and
hlt
inc
add
push
mov
add
lahf
jl
xchg
cmp
inc
jl
sbb
loop
sub
pop
sti
mov
jns
sub
push
aas
sbb
pop
inc
jmp
push
lret
cld
cmpsl
jnp
cmp
es
loope
inc
adc
addr16
cmp
and
orb
data16
mov
pop
sbb
jbe
dec
out
hlt
dec
jb
jb
stc
inc
stos
sub
or
sbb
push
mov
push
jg
imul
inc
and
or
cmp
lret
pop
or
cmp
and
add
in
pusha
rcll
dec
dec
aaa
push
stos
scas
push
inc
and
adc
lret
add
xlat
or
mov
nop
cmp
jns
push
std
movsb
mov
ljmp
sub
outsb
or
jo
cwtl
out
or
fnsave
pop
test
shl
ss
pop
dec
xchg
sub
decl
xor
adc
ret
addr16
mov
jmp
add
dec
loop
lods
fucomip
mov
dec
decl
stos
das
add
aaa
ret
adc
pop
data16
inc
xor
iret
or
daa
rcrl
aad
dec
jnp
and
pop
insb
shrl
and
inc
mov
test
into
ljmp
mov
shr
mov
insb
cmp
dec
push
mov
and
mov
dec
dec
test
push
jmp
mov
and
mov
fs
out
cli
inc
xchg
inc
bound
fbld
fdiv
pop
cmp
into
jb
cltd
icebp
jmp
mov
mov
push
dec
and
adc
sbb
and
adc
or
mov
or
xor
into
ret
lods
push
divl
into
sbb
out
test
aaa
cmp
nop
mov
mov
and
mov
in
or
jge
cmp
sahf
adc
sarb
call
mov
xchg
pop
mov
cmp
inc
pop
fldpi
mov
jbe
jno
in
test
pop
push
xchg
sti
inc
in
and
stos
dec
int
aad
popa
jnp
lods
lds
inc
nop
add
push
dec
push
dec
push
pop
jle
cltd
je
jle
rorl
add
pop
push
xor
cmp
rolb
sar
sbb
test
movsl
mov
test
push
pop
cmp
inc
outsb
push
in
push
lret
sub
push
xchg
xchg
pop
or
into
daa
ja
and
sahf
xchg
arpl
out
dec
call
cmp
out
dec
xor
pop
enter
int3
cmpsl
and
or
cltd
sub
jle
imul
adc
push
cltd
xchg
out
test
sbb
pop
cmp
ljmp
sahf
cmp
shrb
sbb
jbe
insl
jbe
xor
test
shll
das
mov
ljmp
inc
sbb
inc
mov
and
sub
cmp
and
in
lock
mov
xor
jp
sub
cmc
xlat
hlt
outsb
dec
iret
jp
mov
xlat
mov
adc
mov
sbb
adc
inc
xor
data16
xlat
cmp
outsl
xorb
popa
fisttpl
cltd
fnstcw
test
fwait
test
pusha
mov
pop
xchg
jp
mov
ret
test
clc
inc
push
xor
push
push
mov
jb
jl
xlat
jg
cmc
ret
xor
jmp
add
mov
ret
dec
lods
inc
scas
push
sbb
les
add
out
jecxz
or
jp
enter
jnp
xchg
xchg
jmp
mov
dec
ljmp
pop
push
hlt
cmp
out
mov
add
jl
xor
in
xor
hlt
or
outsb
out
push
mov
jnp
lock
enter
jns
jmp
cmp
imul
outsb
and
push
lea
cmp
mov
mov
add
fsubrl
cmc
pusha
cmp
sbb
pop
push
mov
stos
sbb
sahf
adc
cmp
aad
sbb
test
les
mov
aam
inc
int
sub
nop
sbb
sub
out
xchg
mov
jg
jne
fcmovne
add
sbb
ljmp
stc
mov
inc
mov
pop
enter
push
mov
in
aas
std
out
paddusw
push
mov
nop
push
sub
fcompl
push
rclb
fcmovne
popa
pop
fs
popf
ret
out
cltd
out
sub
dec
jbe
cmp
aam
xchg
mov
mov
pop
inc
leave
sub
adc
filds
filds
fsubrl
push
xor
aam
jg
mov
jecxz
cmp
ljmp
pushf
inc
push
idivb
and
push
fmulp
or
ret
lock
lock
jg
mov
popw
aas
or
nop
sbb
stc
ficoms
ljmp
int3
inc
ljmp
pusha
stc
ja
sub
push
jp
xor
jns
xlat
mov
test
imul
push
adc
cli
mov
in
outsl
sub
call
mov
xchg
sbb
lods
push
jmp
push
sbb
ret
bound
xchg
in
cld
or
aam
add
lea
in
out
sub
push
movl
sbb
fsubrs
cmp
lods
ret
cmp
lcall
jbe
fnstsw
xor
out
and
push
je
pusha
jbe
mov
rolb
gs
mov
in
addb
sub
mov
fwait
stos
leave
add
mov
std
shl
pop
push
pop
bound
sub
les
pop
inc
repz
jnp
fcmovu
mov
xlat
sbb
mov
pop
mov
outsb
push
adc
cmp
and
sbb
mov
mov
rcll
lock
in
cmp
hlt
test
lds
pop
inc
mov
insb
jmp
insb
hlt
xor
and
and
xor
jo
add
inc
add
and
mov
push
fidivl
mov
imul
and
push
call
test
jecxz
dec
sub
or
popw
negl
or
or
inc
decb
fxch
pop
test
or
icebp
cmpsb
inc
gs
in
cmp
nop
push
push
mov
sbb
movsb
enter
xorb
rorb
add
dec
inc
jnp
and
adc
push
imul
sbb
cmp
ret
loope
jae
daa
jnp
cmpsb
jno
outsl
dec
mov
push
aam
mov
jmp
repnz
cmp
sbb
cld
subb
pop
int
jns
jae
lods
shr
xchg
scas
mov
mov
mov
sub
xchg
out
jl
cmp
dec
ds
scas
aas
add
sahf
cmp
mov
inc
test
jecxz
jb
out
add
push
and
icebp
add
xor
loope
pop
or
push
mov
xchg
jge
fistl
sub
imul
inc
shrb
mov
and
and
mov
js
call
push
das
push
inc
mov
in
cmp
xchg
arpl
xchg
inc
in
inc
jecxz
push
pop
or
push
movsl
xchg
leave
loop
inc
lds
fcoms
push
cmc
xchg
lods
cmpb
dec
gs
push
inc
sbb
mov
pushf
mov
dec
lahf
sbb
jb
orl
push
mov
xchg
iret
jne
push
int
mov
and
ja
cmc
jno
mov
fdiv
cmp
lahf
or
in
sub
add
push
mov
jns
insl
test
pop
or
sub
dec
adc
leave
mov
call
int
cld
lahf
outsb
cmpsb
imul
push
jle
test
inc
sub
repnz
push
jl
jl
ret
sub
mov
lds
repz
or
mov
jbe
test
dec
jge
enter
repnz
out
push
in
push
sub
jg
mov
not
sub
push
mov
cltd
das
mov
jle
mov
or
aam
out
mov
imul
jo
mov
es
cmp
sbb
adc
cmp
add
in
xor
repz
fbld
out
mov
jne
jae
sub
je
cld
add
ja
cmp
mov
je
dec
cli
std
clc
and
xchg
fcoml
lods
imul
push
mov
adc
stos
nop
loope
cmp
mov
sahf
inc
fsubs
fstps
lea
sahf
out
cmpsb
lods
lret
sbb
cmp
icebp
sub
dec
popf
cmp
outsl
jne
dec
ja
lret
mov
mov
es
cmp
loop
mov
mov
xor
ret
outsb
lret
xchg
push
jg
mov
lds
outsb
test
imul
and
xorb
addr16
jo
repnz
out
push
out
sub
mov
and
or
cs
xchg
add
mov
dec
dec
xchg
movsl
push
xchg
repnz
sbb
in
xor
cld
aam
xchg
jne
decl
lcall
repz
aas
adc
adc
xchg
add
repnz
xor
mov
aaa
mov
mov
outsl
fisubl
aaa
fistpll
lret
and
test
aad
push
nop
dec
jge
dec
mov
push
pop
mov
cmp
pushf
mov
pop
mov
out
pop
mov
add
push
xchg
sti
mov
dec
fiadds
mov
ret
adc
hlt
loop
call
dec
mov
push
dec
xchg
jmp
cmp
js
imul
mov
pop
sub
inc
pop
push
mov
out
icebp
ret
inc
cwtl
sbb
lds
xchg
ret
int
xor
out
and
out
shl
pop
inc
cli
scas
adc
data16
repnz
jb
ja
test
clc
jp
lds
repz
inc
jle
mov
pop
clc
mov
test
xchg
cmp
repz
mov
mov
mov
xchg
fdivl
roll
scas
jo
inc
out
test
xor
lahf
or
lds
ret
cli
xchg
mov
clc
int3
xchg
bound
leave
push
loopne
push
cmc
inc
cmp
and
mov
ror
or
in
das
mov
lcall
xchg
add
stc
imul
xor
xor
mov
fwait
into
in
mov
sarl
push
jp
bound
movsb
mov
cmpsb
dec
dec
sti
sub
das
push
mov
sbb
mov
pop
sub
mov
jbe
jno
roll
sti
mov
jecxz
outsl
or
inc
je
and
dec
sbb
mov
push
call
pop
inc
push
mov
aam
gs
cmpsl
imull
insl
pusha
xchg
js
mov
fs
or
mov
inc
and
push
mov
rcll
repnz
jmp
adc
repz
in
cmc
mov
mov
addr16
adc
int3
out
adc
inc
icebp
aaa
inc
lds
idivl
out
jle
pushf
push
lock
or
xchg
andb
ja
cli
lcall
aaa
sub
sub
popf
xlat
movb
inc
adc
pop
in
dec
jp
and
push
das
push
ret
dec
outsb
rolb
ficoms
xchg
adcb
inc
loope
ljmp
imul
jae
push
sub
int3
mov
push
sbb
xchg
jle
shlb
pand
dec
cmp
arpl
gs
out
pop
ljmp
sahf
push
jnp
scas
or
adcl
test
adc
or
mov
aad
bnd
je
setae
pop
jg
adc
loope
aaa
scas
jbe
int3
outsl
mov
mov
xchg
loop
xchg
cmpsl
mov
add
xlat
add
add
aas
inc
or
orl
or
mov
stos
stos
pop
mov
cmpsl
outsl
xchg
inc
sbb
addl
jno
jae
sub
cmpsb
sub
push
dec
and
subb
pop
inc
mov
xor
orb
add
les
std
addr16
imul
lods
mov
pop
adc
push
repnz
loop
jg
sbb
adc
jge
mov
pop
pop
popa
xchg
sbb
dec
mov
insb
cmp
mov
into
lods
xchg
pop
pop
mov
cmp
lock
sub
hlt
jmp
loope
pop
push
mov
add
adc
sti
or
mov
repz
loopne
mov
addl
dec
fs
or
adcl
scas
je
push
or
mov
pop
movsb
sbb
rol
popf
arpl
xor
mov
repz
mov
outsb
shlb
jns
in
clc
cwtl
push
outsb
xchg
or
dec
and
negb
scas
mov
imul
pop
push
dec
in
dec
sti
cltd
dec
jle
pop
lea
or
jno
mov
jae
pop
mov
rclb
ret
imul
mov
insb
and
test
push
xorl
push
js
sub
xor
lahf
mov
rcrl
mov
jge
jl
test
rcl
addr16
dec
ret
and
mov
sbb
adc
cmp
scas
jg
fnsave
test
adc
mulb
mov
xor
inc
mov
push
pop
inc
mov
test
push
sub
mov
nop
xchg
test
push
jp
xchg
push
insl
std
mov
inc
cmpsl
cs
out
int3
orl
mov
jge
out
movsl
gs
je
movsl
in
adc
inc
xor
ja
lods
call
lods
std
sbb
data16
mov
pushf
adc
imul
outsl
adc
mov
jg
cmp
pop
inc
loope
or
repz
add
xchg
xor
cli
inc
fiadds
mov
mov
adc
jbe
aas
mov
insb
out
in
aad
push
and
inc
adc
fnstsw
insb
inc
iret
aaa
aaa
fistps
fs
fs
jp
out
ja
imul
sti
mov
pop
jmp
add
and
push
stc
orl
enter
xor
jge
jmp
sub
pop
push
cmp
sbb
sbb
inc
repnz
dec
test
movb
mov
push
jo
ficomps
cmp
nop
out
jo
ret
imul
inc
mov
sbb
cmp
aas
out
loope
aas
pop
loop
add
test
jmp
aad
xchg
mov
mov
gs
in
aaa
lea
aad
bound
jb
in
pop
dec
sbbb
dec
xor
mov
and
sbb
lea
hlt
sarl
mov
lret
adc
mov
pusha
jo
mov
or
sub
test
pop
push
sbb
out
push
lods
add
mov
loope
jno
sbb
orb
jns
jno
jno
adcb
aam
shrl
js
dec
cmp
mov
xchg
xchg
js
popf
cmp
push
jecxz
daa
and
stos
sub
in
sarb
fdiv
nop
lahf
inc
cmp
es
mov
mov
sbb
idivl
mov
jecxz
icebp
stos
lahf
les
jg
fiaddl
mov
js
enter
bound
jb
dec
sub
bound
mov
xchg
xchg
mov
or
xchg
in
es
mov
movsb
clc
pushl
rolb
fcomi
sbb
sbb
mov
xor
lock
mov
jne
bound
dec
fdivs
cwtl
pushf
xchg
data16
xor
jb
mov
push
jbe
dec
push
jbe
sbb
hlt
test
dec
mov
icebp
sahf
xorl
xchg
pop
js
jno
xchg
fcomps
call
and
lahf
fucom
loop
cmp
adc
push
dec
in
addr16
cmpsl
test
adc
xor
aam
mov
mov
in
scas
sbb
int
mov
hlt
sub
ja
sarb
inc
sbb
rcll
pop
and
or
mov
std
pusha
sbb
mov
mov
dec
mulb
les
cld
or
lds
or
adc
xchg
pop
shld
test
cmp
test
pop
mov
dec
icebp
push
fistps
stos
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
lret
pop
push
sbb
push
cmp
mov
cmpsl
lret
xchg
negl
stos
aaa
pop
daa
dec
pop
jp
push
sbb
push
cmp
mov
cmpsl
pusha
cmp
adc
sub
push
data16
xchg
inc
movsb
push
xor
or
je
sbb
out
notb
and
xor
inc
mov
xchg
fs
je
test
inc
movsb
push
mov
les
pop
push
in
xor
divb
and
xor
sub
je
push
outsl
xchg
pop
or
mov
clc
cs
fcmovnbe
ja
jnp
inc
cmpsb
adc
cmp
je
and
jne
ss
xbegin
or
je
mov
cmpsl
sub
jns
or
xorl
dec
sub
inc
cmpsb
xchg
xchg
stc
cltd
test
lcall
jg
mov
xchg
test
dec
push
xchg
test
les
mov
insl
sti
testl
mov
or
xchg
sti
jl
divl
xchg
dec
in
out
out
xor
jecxz
xor
pop
mov
jns
xchg
add
xor
cmc
movsb
push
or
add
jl
fildl
stos
xchg
scas
test
inc
and
xor
es
ds
sub
fidivs
jl
push
xchg
sbb
adc
mov
mov
out
lcall
sub
and
and
pop
aad
lds
xchg
dec
stos
ss
mov
movsl
popa
xchg
inc
movb
cmpsb
adc
sbb
add
sbb
sub
xlat
outsb
mov
push
hlt
out
notb
and
xor
inc
mov
xchg
data16
inc
movsb
push
mov
les
aam
in
hlt
out
notb
and
xor
inc
mov
xchg
data16
stc
pop
and
testl
mov
sub
sahf
pop
es
into
lock
mov
adc
fistpl
or
pop
xor
bound
je
pop
or
push
fwait
jmp
adc
jp
and
pop
push
out
fs
jle
jecxz
leave
ljmp
adc
test
xor
cmp
in
inc
sub
xchg
hlt
cmp
dec
or
sub
mov
lock
repz
or
adc
out
dec
in
aam
scas
sbb
jmp
dec
clc
sbbb
data16
push
mov
xchg
popa
push
test
movsb
sbbb
mov
push
add
test
clc
in
pop
adc
mov
scas
test
into
ljmp
cmp
fldl
nop
pushf
pop
cmp
mov
scas
cmp
js
cmpsb
jle
scas
jb
mov
xor
aaa
inc
dec
xlat
push
cvtdq2ps
push
ss
scas
cs
xlat
das
je
dec
jns
lret
mov
fidivrl
jl
repnz
cmp
xacquire
xchg
mov
shll
enter
test
add
pushf
inc
inc
repnz
mov
mov
insb
gs
push
es
xchg
call
sub
push
add
inc
or
mov
rcr
out
mov
std
fistl
jecxz
xor
jp
data16
xor
inc
or
sbb
rclb
pop
stos
mov
mov
loope
or
dec
inc
pop
loope
es
iret
jl
loop
int3
int3
adc
push
icebp
pusha
or
mov
dec
insl
aam
xchg
adc
shlb
jbe
push
aas
adc
sub
dec
lods
insb
hlt
mov
rcll
xchg
loope
mov
sahf
sarl
sub
fildl
fwait
int3
cmpsb
and
xor
or
and
leave
shlb
adc
mov
inc
hlt
mov
sahf
lahf
ret
sbb
cmp
seto
pushf
push
jmp
sbb
dec
mov
xorl
arpl
and
cmp
mov
popa
adc
and
or
push
mov
pop
sahf
mov
ds
rorl
pop
adc
lds
sbb
and
jp
xor
dec
test
sbb
mov
mov
and
loope
divl
sub
ja
scas
cltd
mov
xchg
push
add
or
xchg
adc
mov
pop
stc
out
pop
insb
dec
xor
mov
xchg
push
cli
add
sub
addl
push
int3
cli
cmpsl
aam
pop
fs
adc
lea
xchg
int3
inc
push
add
mul
cmpsb
or
or
jecxz
push
repnz
sbb
cmc
mov
pop
cwtl
and
outsl
and
xchg
pop
pop
repz
cmp
nop
sub
adc
inc
add
xchg
inc
mov
out
jb
sahf
out
xchg
cmp
call
daa
in
cwtl
cmp
jp
add
adc
data16
lcall
or
cmpsl
adc
repz
int3
lahf
jno
push
test
fucom
lds
adc
lret
jno
inc
mov
jmp
add
pusha
or
int3
shlb
xchg
cmp
das
push
mov
test
inc
iret
pushf
rclb
cld
popf
push
mov
xor
xchg
repz
mov
jne
mov
dec
inc
fnstsw
stc
mull
dec
insl
iret
andb
push
loope
dec
mov
jl
cmp
mov
inc
jae
adc
das
fs
push
pop
mov
jmp
adc
mov
push
inc
stos
jl
sub
mov
pop
stc
jo
or
jmp
push
outsl
adc
lock
or
cld
cld
pop
pop
cmp
fbstp
in
outsb
fidivs
jge
call
cmp
fs
jns
jo
outsb
jle
sub
arpl
inc
pop
shll
xor
add
shrl
insb
mov
dec
aam
gs
je
jb
fiaddl
fld1
daa
fst
push
inc
mov
xchg
xor
sbb
xchg
sti
and
sbb
mov
leave
punpckhdq
imul
pushf
lock
in
sbb
ret
std
nop
sbb
xor
movsl
xor
inc
stos
pop
ret
imul
lret
fbstp
mov
pop
xchg
adc
movsl
mov
jg
jae
es
mov
outsl
mov
sub
outsl
jbe
xchg
lret
cmp
js
mov
enter
orb
lods
shll
mov
out
cld
out
cwtl
cmp
stos
mov
jo
sahf
popa
cmp
sub
xchg
inc
mov
mov
jnp
pop
data16
shlb
push
and
mov
push
shlb
adc
mul
push
push
int
setge
das
mov
into
jne
out
inc
in
rcl
or
rorl
mov
lea
sbb
mov
nop
imul
xchg
addr16
int3
callw
push
test
mov
in
cmpsl
or
sub
sub
xchg
xlat
popa
push
mov
sub
inc
scas
inc
xor
sbb
lea
mov
fstpl
in
insl
sahf
and
fstpt
inc
dec
sub
lcall
call
enter
pop
nop
xchg
fldt
nop
inc
scas
aaa
pop
mov
xchg
ljmp
fs
addr16
repnz
aas
addr16
xchg
sub
mov
push
repnz
ljmp
add
mov
ret
and
js
in
mov
test
les
divb
pop
push
test
out
and
pop
cmp
inc
pop
inc
test
adc
and
scas
mov
ret
cs
test
in
sbb
aas
adc
xchg
addl
fimull
push
and
ss
aaa
mov
cmpsl
pop
aaa
mov
aad
or
and
pop
int3
push
call
xlat
inc
mov
push
imul
push
jne
stos
mov
popf
adc
xchg
xor
mov
xchg
xor
ja
stos
enter
and
push
pop
ja
cmc
push
jp
jl
push
jl
or
ret
sub
xor
inc
mov
lods
test
mov
shlb
bswap
inc
mov
std
pushf
hlt
xor
pop
shrb
inc
push
adc
testb
pop
cmc
or
pop
int
out
fdiv
dec
ss
je
idivb
xor
nop
xor
fdivrs
fwait
pop
outsl
cmc
adc
ficoms
pushf
pushf
xchg
rcrb
sahf
and
jg
xchg
test
xchg
mov
aaa
icebp
in
pop
mov
js
xchg
cmc
leave
or
inc
ret
rorb
sub
push
jecxz
pop
or
insl
push
mov
int3
test
fistl
mov
test
lcall
in
les
sbb
mov
inc
icebp
jmp
sbb
repz
das
int
aam
dec
popf
in
cmpb
repnz
mov
test
mov
dec
mov
fwait
sbb
pop
enter
insb
fimull
xchg
xor
and
imul
jbe
adc
bound
cmpsl
frstpm(287
sbb
leave
aas
aas
call
jns
outsb
call
pop
inc
mov
xchg
push
dec
jns
sarb
in
inc
in
xchg
jp
jmp
jbe
js
andl
out
mov
pop
mov
xchg
add
shrl
push
jb
and
sub
mov
icebp
mov
rcrl
and
in
cltd
push
fnstenv
jp
xchg
mov
mov
orps
ja
mov
ret
fs
inc
sbb
stc
and
arpl
or
orl
aam
mov
lahf
scas
aam
in
mov
test
xchg
cmp
fiaddl
cltd
jno
inc
mov
insb
add
pop
jmp
shll
mov
insb
imul
lret
xchg
icebp
notb
jge
mov
aad
inc
adc
xlat
sub
cmp
mov
cmp
leave
adc
fsub
mov
sbb
xor
push
test
lock
fidivl
push
push
and
mov
mov
and
mov
popa
not
testl
sbb
stc
and
cmp
mov
stos
sbb
inc
sub
xor
test
aam
enter
adc
cltd
sahf
stc
push
cmc
mov
push
gs
arpl
adc
test
jbe
mov
lret
jns
xlat
fidivs
or
shrl
aam
mov
repz
lods
stos
pop
ja
repnz
repz
push
mov
fucom
xor
mov
push
adcl
inc
pop
adc
dec
mov
aad
out
scas
cli
sahf
push
mov
xchg
sbb
ja
enter
lods
iret
lods
fsubs
in
sub
cmp
and
adc
les
popa
loopne
push
adc
ret
jbe
icebp
mov
adc
loopne
cwtl
rcl
sub
arpl
xor
stos
xor
data16
sbb
loope
jg
hlt
adc
pop
pusha
dec
mov
repz
sbb
mov
mov
scas
mov
push
arpl
pop
test
dec
cmpsl
adc
adc
es
fidivrl
and
sub
aas
jg
popa
and
fidivs
arpl
xor
cmc
out
push
lock
inc
xchg
xor
xchg
add
sub
mov
ss
jecxz
jl
sub
mov
fcomps
and
mov
sbb
add
mov
stos
and
arpl
mov
shrl
mov
xor
mov
mov
lods
test
push
testl
mov
inc
jo
rcr
jl
mov
sub
pop
sub
pop
sub
lahf
mov
or
mov
xor
pop
jb
test
lds
int3
sbb
push
pop
mov
loopne
sahf
xor
js
add
loop
mov
inc
stos
je
lods
xchg
dec
push
mov
and
leave
xor
js
and
mov
push
lea
addr16
sti
int
pop
lret
mov
jnp
das
jne
mov
aas
xchg
cli
cmc
sub
adcl
pop
xor
xor
loope
mov
scas
mov
jns
sbb
into
aaa
pop
sahf
sbb
inc
fcmovb
pop
mov
cmpsb
cmpsl
xor
addb
cmp
fbld
mov
push
test
add
inc
add
mov
clc
sbb
ss
rorl
mov
dec
xor
push
out
sarb
out
push
dec
and
subb
mov
and
bound
mov
ds
or
push
mov
pop
push
popf
ljmp
punpcklwd
mov
sar
and
dec
fwait
rcrl
and
aad
inc
push
cmp
dec
mov
xor
cmpsb
leave
rolb
or
cs
cld
sub
bound
in
mov
sub
pushf
fsubl
lcall
lret
fiaddl
jg
jae
aam
aaa
sub
mov
mov
test
pop
rcrb
mov
mov
mov
fwait
stos
lea
xchg
rcl
adc
sub
and
fcoms
cld
mov
jns
fdiv
lock
mov
pop
cmpb
mov
mov
mov
and
scas
imul
jg
push
xor
ret
cmp
inc
jnp
pop
loop
mov
pop
or
jp
xchg
mov
ret
dec
sub
add
int3
mov
push
ja
cmp
push
fwait
movsl
test
pop
je
rol
and
mov
adc
pop
test
add
mov
shl
fstl
pop
imul
movsb
jmp
adc
push
mov
pop
dec
pop
xor
pop
push
add
cmc
pop
nop
and
lcall
ljmp
int
and
xchg
inc
adc
cmp
cmp
push
dec
scas
xor
xor
lock
push
or
xor
loopne
and
popf
mov
repnz
divb
push
sub
adcb
aam
lea
leave
mov
pop
mov
dec
adc
ss
aam
popf
inc
mov
scas
shlb
les
aam
repnz
sub
fucomip
test
std
decl
mov
mov
iret
dec
int
jo
dec
ficoml
nop
lcall
add
jne
pop
int
add
and
movsb
insb
fiadds
les
test
jg
imul
aaa
aas
push
sub
enter
out
inc
push
icebp
jns
cli
aaa
mov
js
jl
jle
es
rcll
or
in
jmp
sbb
xor
mov
movsl
dec
xor
sub
pushl
fdivrl
les
outsl
jg
jle
xchg
mov
push
mov
lds
dec
and
dec
mov
jecxz
in
stc
sub
jo
mov
cmp
ud0
ljmp
pop
idivl
pop
xchg
fmuls
adc
rorl
mov
lods
mov
dec
iret
push
sahf
push
loopne
adcl
xchg
into
pop
jne
rcrb
inc
pop
or
lods
dec
dec
sbb
jp
aad
inc
push
ds
stc
fwait
xor
pop
xor
ss
jmp
lahf
ss
jg
pop
vmaxss
adc
mov
and
shlb
cli
sub
and
aam
pop
movb
ret
mov
filds
lahf
sub
cltd
lea
xor
jmp
cmp
add
jnp
or
mov
dec
imul
hlt
xor
std
popf
std
or
add
fs
mov
xor
jb
lret
and
aad
xorl
imul
ds
out
xchg
push
xor
or
or
rorl
loope
icebp
inc
jns
jnp
scas
dec
mov
stos
mov
sahf
inc
adc
or
jnp
dec
mov
arpl
test
iret
ficoms
mov
adc
push
test
add
and
mov
mov
fistpll
je
lea
gs
xchg
lahf
cltd
es
xchg
iret
push
mov
push
lret
mov
push
dec
aaa
xchg
aad
push
repz
fistps
sbb
ret
pushf
test
dec
xor
mov
xor
cmp
lods
cmp
out
test
push
sub
mov
inc
es
cltd
fcoms
mov
jae
sbb
ss
jne
inc
sahf
shr
rcl
push
and
xchg
in
cmc
loope
js
sahf
insb
push
xor
xchg
int3
jae
cmpl
xchg
mov
out
xchg
xchg
push
xchg
filds
pop
js
dec
cld
iret
ds
lods
outsb
mov
mov
in
fmul
repz
sbb
mov
adc
sub
lahf
push
and
mov
cmp
fimuls
xchg
mov
pop
jp
arpl
xor
sub
add
andl
dec
fdivr
ds
mov
imul
or
mov
mov
xchg
pop
jp
test
lock
repnz
push
movsl
sbb
push
inc
xor
movsl
lcall
test
xor
mov
popa
jp
sub
rolb
inc
add
mov
mov
xchg
or
shrl
sahf
and
imul
adc
mov
sti
inc
mov
push
inc
adc
xor
cmpsl
pop
mov
mov
test
sub
gs
or
jnp
imulb
lods
sbb
insl
or
aad
call
pop
inc
test
out
jbe
movsl
sbb
out
add
cmp
daa
negl
cmp
mov
xor
test
push
aad
outsl
cmp
add
cmp
shll
pushl
mov
pop
pop
and
fisttps
notb
idivb
lea
stc
test
dec
mull
fdivr
mov
ret
pop
mov
xchg
mov
rclb
dec
push
in
lret
or
bound
xchg
mov
dec
xorb
daa
in
mov
cmp
sub
lods
adc
push
insb
cmp
incb
loop
mov
pop
adc
roll
mov
cs
xchg
mov
mov
push
shlb
inc
or
and
mov
push
inc
mov
fisubl
dec
adcb
pop
mov
mov
dec
jb
popa
push
or
addr16
pop
int
pop
push
xor
mov
pop
inc
add
push
jle
lock
or
push
ss
test
adc
pusha
out
sub
stos
jo
inc
sti
roll
xchg
in
add
add
inc
adc
push
inc
ds
pop
inc
int3
xchg
pop
imul
out
push
dec
mov
cld
jno
sub
fcomps
jb
jecxz
hlt
out
cmpsb
cld
data16
mov
stos
pop
sbb
loopne
mov
iret
push
pop
int
lret
shrb
cli
je
sahf
test
add
bound
fildl
inc
cmc
aaa
mov
mov
mov
lea
adc
mov
dec
out
stos
popf
push
sbb
adc
addl
pop
xor
sahf
test
jns
xchg
cmpsb
out
jbe
mov
xchg
and
jge
cmp
jge
imul
and
mov
bound
sub
jp
sbb
cld
jbe
nop
adcb
inc
and
int
jle
or
mov
fistpll
rol
dec
sbb
clc
sbb
or
test
cltd
mov
std
js
jle
push
mov
jb
xchg
in
sahf
sub
adc
cltd
bnd
lods
mov
mov
inc
sub
mov
icebp
in
jae
adc
mov
fsubl
mov
loop
lret
mov
stc
xor
in
push
mov
mov
call
cwtl
shrb
push
pop
push
hlt
clc
cs
push
push
ret
push
mov
push
push
xchg
cltd
lret
lock
xchg
push
cld
adc
outsb
or
pop
push
loop
inc
sahf
pop
jl
adc
in
dec
cld
cmp
ret
cmp
mov
fistpl
pop
mov
push
jge
pop
mov
sub
push
adc
xor
in
out
outsl
adc
dec
pop
in
sbb
jecxz
sbb
mov
imul
fs
adc
or
jmp
sbb
xor
repnz
pop
loopne
sbb
jge
push
add
sub
pop
mov
ret
dec
fs
cld
cmp
mov
popa
test
inc
std
lods
pop
cwtl
mov
cwtl
cltd
sub
stc
enter
out
add
sub
lret
and
enter
pop
cltd
xor
jnp
sub
push
std
je
dec
sti
je
out
jb
mov
lret
cmovae
dec
adc
pop
dec
cmp
lods
in
adc
jmp
fdivl
mov
es
adc
loope
inc
pop
cs
sub
repz
mov
xlat
add
push
lods
cltd
test
cmp
mov
jle
cs
fcmovnu
and
inc
out
add
xchg
loopne
mov
push
stc
xchg
xor
adc
movsb
jno
dec
insb
mov
sub
jp
dec
call
cmp
lret
les
pop
push
lcall
push
add
sbb
daa
inc
mov
insb
dec
jmp
adc
dec
inc
cmp
icebp
mov
mov
rolb
stos
int3
adc
sub
fsub
pop
loopne
lea
addl
aas
xor
dec
popf
sahf
leave
movsb
out
dec
data16
jnp
cmp
cwtl
int3
mov
aaa
dec
mov
gs
daa
pushf
jae
dec
jnp,pt
rcrb
xchg
insb
repz
jo
xchg
mov
mov
xor
jns
pop
iret
es
cld
pop
and
dec
cmp
cmp
aaa
mull
and
or
stos
pop
xor
outsw
loope
lahf
pop
push
or
mov
ja
int3
dec
mov
xor
stc
dec
sbb
inc
andb
pop
inc
cs
xor
inc
push
push
sub
out
loop
sti
es
fwait
movl
jge
or
sbb
xchg
mov
xchg
in
inc
ret
jno
dec
sti
lea
clc
dec
sbb
loope
outsb
lret
fimuls
jle
jbe
fisttps
loop
pop
push
push
popa
add
or
inc
dec
jae
push
into
add
lds
pop
xchg
jns
xchg
imul
add
add
inc
mov
ds
or
ja
and
xchg
les
aam
in
hlt
out
notb
and
xor
inc
mov
xchg
data16
inc
movsb
push
mov
les
aam
in
hlt
out
notb
and
xor
inc
mov
xchg
data16
inc
fcoml
les
jl
in
hlt
out
notb
and
xor
inc
mov
xchg
data16
movsb
push
mov
les
aam
fs
hlt
sbb
or
ror
ds
jns
imul
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cmpsb
jl
dec
xchg
xchg
pop
mov
mov
pop
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
fs
es
push
int3
push
fdivl
mov
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
add
mov
and
sub
jmp
and
pop
aas
or
cmp
xchg
xchg
push
psubsw
xor
and
aas
sub
sub
mov
lret
cwtl
mov
mov
add
jno
es
jge
xchg
mov
ss
mov
mov
inc
and
sub
or
repz
mov
dec
insb
cmp
lods
es
aad
jae
dec
sbb
jbe
jns
scas
movsb
out
push
cmpw
jo
xchg
xor
and
mov
dec
jmp
or
hlt
pop
add
pop
popa
std
scas
jmp
lods
jmp
adc
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
cmc
imull
cmp
testb
mov
les
xchg
inc
std
push
test
fnstenvs
or
sbb
sub
pop
testb
scas
gs
js
cmpsl
ja
adc
push
mov
cmp
xor
shrl
cmpsb
xor
ds
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
adcl
test
sarl
add
aas
mov
xchg
dec
js
push
mov
sbb
jae
pop
cld
jne
into
cld
mov
and
dec
les
sub
bound
pop
adcb
fcompl
pop
mov
push
repnz
mov
stos
lea
add
xor
into
jno
aad
pop
mov
jmp
xor
fiaddl
insb
cmp
jle
mov
out
cltd
or
test
xor
push
and
adc
pushf
sti
sbb
push
sbb
cld
sbb
sbb
mov
sub
insl
add
mov
push
push
xchg
cmpsl
jmp
stc
lock
fildl
cmc
inc
add
fnstcw
int3
cltd
ror
loop
cmc
sahf
mov
enter
xchg
xor
push
mov
xlat
fwait
cltd
insb
sbb
sbb
dec
xor
ljmp
rclb
lea
jo
adc
jg
lahf
jb
pop
sbb
dec
mov
hlt
dec
cmp
cmp
inc
mov
popf
mov
pop
xor
push
push
sub
mov
inc
jmp
inc
ss
lahf
roll
mov
jne
sub
pop
sub
mov
pop
mov
mov
lea
inc
sub
insl
jae
lds
sbb
addl
mov
sub
ljmp
inc
dec
fistl
xchg
mov
les
pop
int3
pop
dec
cltd
loope
or
sti
fwait
sbb
fists
adc
movsb
mov
fldt
aas
in
in
xor
jo
jo
sub
mov
repz
daa
incl
icebp
mulb
jmp
out
out
sbb
lods
inc
fdivrp
cmp
xor
movsb
aas
icebp
movsb
dec
push
stos
sub
aam
dec
lahf
lock
inc
push
cmp
and
xchg
push
imul
gs
mov
xor
xor
lahf
mov
pop
push
dec
dec
pop
je
xchg
repz
in
xor
bound
ds
or
call
cmc
or
adc
es
cld
jb
pop
dec
mov
inc
add
ja
inc
nop
push
xchg
adc
cmp
mov
lds
xor
mov
xor
adc
pop
and
add
scas
lcall
dec
nop
xchg
sahf
mov
inc
das
stc
jne
mov
pop
sti
je
push
add
movsl
and
sbb
shll
or
je
in
pop
jl
lods
cld
xchg
dec
lret
add
sub
out
or
mov
xor
test
inc
xchg
imul
insb
push
jmp
ret
mov
jbe
aaa
ret
and
mov
mull
sahf
mov
cs
sub
mov
xchg
imul
out
jge
add
out
ds
jnp
enter
jne
in
and
insl
aam
pop
sub
push
pop
mov
das
or
out
ss
stos
pop
dec
inc
or
inc
cld
out
adc
jl
lret
sub
add
jne
in
pop
movaps
loopne
adc
cmpl
sahf
and
dec
movsl
aad
outsl
lahf
add
clc
dec
dec
push
leave
ret
mov
lods
jnp
fcompl
push
dec
bound
jmp
jno
mov
inc
mov
or
rolb
in
mov
push
ret
jl
cmc
and
stos
jae
inc
insl
insl
cltd
clc
iret
jl
sbb
xor
xlat
adc
cmp
push
imul
rcll
rcrl
xor
sbb
mov
or
add
addr16
xor
or
xchg
push
jnp
ret
pusha
ja
adc
test
push
out
dec
mov
push
jbe
pop
fwait
lods
outsl
sbb
add
sbb
int
inc
xor
shlb
pop
out
adc
mov
jmp
cmp
fisubs
mov
cwtl
loop
mov
sbb
fsubs
std
mov
fsubs
pop
cs
mov
pop
dec
rorl
fwait
cmp
popf
push
ds
push
sarb
jl
out
stos
xor
or
mov
call
aaa
mov
clc
lcall
icebp
push
xor
sub
mov
popa
out
add
push
shrl
fidivl
or
clc
inc
push
cmpsb
negb
jmp
push
movsl
lods
xchg
decl
repz
or
mov
pop
inc
adc
push
fsubl
or
lret
mov
insl
inc
adc
loope
pop
stos
in
cmp
adc
sub
imul
mov
jnp
in
push
pop
pop
sub
cmp
jl
pop
mov
sub
mov
xchg
xor
or
cvtps2pd
jns
cmp
adc
push
nop
pusha
push
into
add
jg
pop
dec
xchg
dec
sub
pop
xor
movsl
js
in
cmp
xlat
pushf
dec
stos
inc
movaps
jecxz
jle
push
xor
cmpsl
pop
jnp
inc
inc
mov
push
in
je
aam
lret
fcomp
sahf
adc
pusha
rcr
jbe
and
mov
pop
push
dec
cmp
xchg
inc
lret
addr16
mov
in
mov
sub
dec
mov
dec
shrb
jne
jl
pop
dec
and
xchg
cltd
mov
ljmp
scas
pop
dec
dec
int
pop
decb
std
xlat
dec
jno
push
cmp
cmp
adc
xchg
aaa
stos
sarl
jecxz
stos
mov
scas
push
fcmovnbe
stos
cmp
loope
mov
int
lcall
setle
sbb
shrl
ds
imul
cmp
cld
and
enter
push
iret
jb
stc
lods
roll
out
push
aas
xor
loopne
mov
push
xchg
rcrl
xchg
xchg
and
scas
icebp
or
scas
ret
jg
sbb
lcall
ds
cmpsl
adc
sti
jecxz
push
inc
sahf
iret
loopne
jbe
aam
cmpsl
in
int3
mov
stos
mov
xchg
decb
addr16
and
test
xchg
jge
mov
push
dec
inc
addb
sub
mov
insl
fs
add
popf
sti
popf
notb
fnstenv
push
scas
jae
sub
mov
cmp
shll
push
xchg
mov
push
imul
mov
sub
stc
sbb
xor
sbb
sub
mov
add
and
ret
lret
or
push
inc
cld
pusha
in
mov
stos
push
fisttpl
push
in
inc
iret
bound
aam
mov
pop
out
movsb
test
push
jno
hlt
inc
push
stc
cwtl
cmp
aam
push
dec
arpl
in
add
cmpl
xchg
mov
std
scas
ja
in
sbb
imul
lods
fisubrs
xchg
fs
aas
and
xor
scas
and
xor
inc
gs
scas
jle
push
xchg
shll
push
pop
jmp
scas
and
sbb
cmp
jl
data16
pop
fistpl
negb
repz
int
inc
mov
or
pop
cmc
inc
and
mov
dec
sbb
pusha
mov
lods
xchg
nop
stc
mov
dec
jnp
or
clc
xchg
or
push
call
mov
gs
stc
or
movsb
sbb
mov
xor
and
or
push
nop
jne
sub
test
shl
inc
jae
sbb
jle
lahf
xchg
xchg
sbb
mov
xchg
cmp
insb
pop
insl
imul
mov
mov
sub
inc
mov
mov
call
sbb
je
mov
iret
insl
roll
shll
fs
mov
popa
xor
mov
sub
sub
and
or
mov
imul
mov
mov
inc
out
test
push
mov
sbb
loopne
sbb
mov
and
pop
sub
lahf
in
xchg
insl
jne
jp
jmp
imul
pop
insb
lea
and
shll
int
pop
fisubrs
fcmovb
cmc
inc
and
sbb
mov
cli
enter
cmp
hlt
std
cld
in
imul
or
add
xchg
dec
pop
or
push
mov
cmpsl
pop
mov
lret
js
pop
ret
movsl
inc
pop
push
adc
out
xchg
mov
sub
lds
iret
jbe
push
jne
roll
ret
test
gs
fnstenv
jo
push
les
xor
xchg
popa
and
jbe
mov
mov
bound
les
ret
mov
dec
xor
int3
push
push
test
es
enter
and
mov
aad
or
cmp
mov
fstps
lods
dec
or
test
loopne
adc
mov
jb
lock
icebp
inc
inc
or
std
push
test
loope
and
xor
fdivr
cmp
sub
mov
push
inc
pop
rcrl
ja
jno
aas
clc
push
outsb
les
loop
cmc
jnp
add
mov
inc
inc
cmp
sahf
or
lcall
mov
shlb
push
dec
cmpsl
fsubr
jge
arpl
dec
movsb
mov
sub
jg
shlb
xchg
test
aam
ret
arpl
push
ret
xor
hlt
mov
jae
cmpl
insl
rorl
or
call
add
mov
aam
cmp
pop
sub
rorb
jns
imul
popf
jae
mov
and
mov
or
cmp
test
rorb
jmp
in
sub
arpl
pop
push
push
jl
test
cwtl
inc
int
fcomi
in
ret
sub
roll
clc
int3
mov
daa
iret
and
mov
sti
roll
pop
out
lock
jl
mov
roll
mov
pushf
xchg
sbb
lods
popf
rorl
cmp
xchg
fcmove
pop
test
xor
sbb
push
push
in
gs
and
daa
insb
fsub
dec
and
cmp
pushf
cmc
xchg
out
fwait
nop
mov
dec
sbb
ja
xchg
rcrl
and
pop
pop
add
scas
sbb
push
cmpb
loope
adc
inc
roll
jno
xor
mov
pop
fmul
jae
out
mov
sbb
jno
call
mov
inc
imul
mov
cwtl
jno
ja
aad
lret
push
es
aaa
movsb
data16
adc
scas
mov
out
xor
fstpt
sub
push
pop
mov
cli
in
repnz
mov
xchg
inc
fdivr
and
mov
movsb
inc
dec
jae
lret
out
jns
aam
pushf
jns
jl
lret
cld
pop
lcall
outsb
icebp
shlb
outsl
mov
pop
shr
inc
fisttpll
or
pop
inc
jb
dec
outsb
loop
shlb
mov
push
xlat
mov
sub
add
sbb
inc
shll
inc
push
fisubl
push
imul
mov
push
xchg
push
in
jg
out
ret
push
jmp
push
xor
adc
jp
imul
mov
mov
adc
les
xchg
cmp
outsb
and
dec
push
mov
xchg
in
sarl
aaa
pusha
xor
pop
insb
mov
imul
dec
pop
ret
add
sbb
fisubrl
mov
adc
fisubrl
movb
sub
xor
cmp
pushf
pop
outsl
ljmp
cmc
mov
mov
cmp
inc
pop
pop
adc
dec
mov
icebp
push
hlt
lcall
test
inc
popf
imul
test
stos
cmp
inc
sub
arpl
or
and
pop
clc
cmp
sub
mov
jno
adc
sub
mov
inc
out
push
rorl
addb
jb
sbb
add
sbb
push
fnsave
sbb
hlt
ljmp
cwtl
icebp
mov
bound
xor
mov
icebp
lahf
pop
lret
sahf
loopne
rorb
xlat
adc
in
mov
and
cmpsb
jl
sbb
inc
aad
mov
mov
sub
ret
jg
and
jns
adc
or
inc
push
and
ret
divb
cmp
pop
rcll
popa
ffreep
movsb
add
pop
daa
push
add
std
aaa
mov
inc
pop
pop
mov
cs
sub
add
xor
cmp
daa
clc
shl
xchg
mul
fnstcw
xor
xchg
call
pop
scas
add
fsubrl
push
or
xor
repnz
jg
pop
lret
or
sbb
in
and
mov
push
and
loope
fcomi
adc
jno
add
inc
rorl
pop
cli
push
arpl
jmp
loopne
and
js
mov
sbb
jo
adc
mov
and
pop
cmp
push
xor
jb
arpl
mov
or
adcl
mov
aaa
push
jbe
rcll
testl
pop
sbb
bound
lock
mov
in
rol
mov
out
pop
or
ja
lods
inc
fildll
and
stos
sub
jmp
in
es
adc
sbbl
pop
inc
xor
loop
inc
inc
sbb
movsl
xchg
and
xchg
mov
pop
stos
fildl
mov
jns
push
push
imul
jp
jle
xchg
ljmp
or
add
or
and
es
xor
inc
mov
xorb
out
xchg
pop
shlb
pop
jns
sub
mov
inc
cmp
aas
int
jne
cmpsb
divb
push
sbb
mov
jl
in
ja
adc
ficomps
mov
mov
pop
xor
cmp
jle
xchg
clc
add
sahf
mov
push
sub
inc
push
jns
ss
ret
dec
dec
push
arpl
add
daa
adc
mov
out
dec
jecxz
outsl
cld
into
lock
inc
ret
fucom
xor
sbbb
push
aam
shlb
cmp
push
cli
jae
sub
loopne
rolb
stos
jecxz
sbb
or
dec
fnstsw
data16
idiv
mov
stos
lret
and
xchg
out
and
mov
adc
xchg
or
cld
or
dec
lahf
mov
and
ret
movsb
stos
adc
dec
mov
mov
shlb
adc
pop
or
in
cld
in
test
xchg
pop
repnz
mov
test
push
mov
insl
incl
jae
pushf
aaa
cmp
sub
sahf
pop
out
jbe
xchg
xchg
ret
sbb
sub
push
outsl
adc
and
push
fwait
aam
cmc
xor
add
push
add
imul
movsl
jle
mov
jae
mov
mov
pop
lods
fildl
xchg
mov
iret
cmp
cld
and
mov
ret
or
lods
out
jecxz
ret
repz
lods
sbb
and
mov
mov
sahf
inc
popa
enter
jns
leave
mov
push
cli
fimull
out
int3
and
push
mov
popa
mov
je
cmpl
mov
push
addr16
push
pop
jb
aas
pop
or
dec
out
insb
cli
test
fwait
cmp
negl
jecxz
das
aaa
clc
dec
insl
mov
sbb
jno
and
or
out
movsb
sub
fdivr
sbb
dec
or
inc
icebp
das
subl
addr16
xchg
movsb
cmp
inc
sbb
adc
icebp
fs
sbb
jae
out
scas
xchg
jmp
add
cli
cmc
xchg
mov
mov
adc
cmpsl
mov
push
dec
add
push
lret
xchg
mov
decb
inc
iret
scas
push
test
movsb
aaa
push
enter
mov
repnz
int
cld
or
arpl
or
mov
pop
jnp
imul
out
add
push
mov
ret
frstor
lods
testl
add
mov
and
push
andnps
movsb
sub
mov
loope
xchg
sbb
lahf
xchg
xchg
pop
sub
lea
in
cmpsb
dec
ror
pop
mov
js
dec
out
popf
out
jecxz
xor
lods
pusha
sahf
xchg
enter
mov
add
add
roll
cwtl
xor
popl
pusha
pop
xor
xlat
leave
push
dec
pop
push
push
pop
dec
jmp
cs
cld
jmp
pop
dec
cmp
mov
jo
xlat
mov
sahf
mov
xchg
out
icebp
push
xor
scas
sahf
jge
popf
out
adc
enter
sbb
xor
mov
cmp
bound
cltd
push
pop
les
ja
mov
ret
sbb
je
sub
lods
fcompl
lock
arpl
cld
push
xor
cs
mov
dec
insl
xor
xchg
sub
mov
and
push
inc
mov
push
loopne
stos
jb
enter
cmp
mov
dec
push
stc
mov
adcl
inc
call
pop
cmp
pop
xor
xchg
sub
les
push
or
lods
jbe
jb
inc
pop
sahf
lea
call
mov
loopne
pop
jno
xor
movsb
cmp
das
jp
xor
sbb
mov
in
jnp
and
adc
jns
cmc
sub
mov
cmpsl
mov
test
adc
pop
add
rcrb
jl
cmpsl
pop
movsl
mov
pop
sbb
inc
inc
pop
jle
lahf
sarl
ret
pop
fimull
xchg
sub
dec
mov
pop
inc
jnp
cmpsl
in
loop
nop
jnp
fs
jbe
mov
sub
ds
push
mov
dec
popa
in
add
sub
dec
incb
subb
dec
loope
daa
cmpsb
push
push
les
test
hlt
inc
mov
dec
hlt
gs
into
ds
or
insl
and
inc
push
imul
sarl
push
inc
es
fldenv
out
sbb
cltd
pusha
int
rorb
or
clc
outsb
lds
push
testl
js
clc
push
outsb
icebp
or
inc
test
lret
lret
dec
add
jg
orb
dec
repz
add
out
icebp
punpckhdq
or
fsubl
scas
lcall
sahf
aad
sahf
out
mov
inc
xor
xchg
popf
leave
jne
loope
pushf
ds
or
dec
xchg
sbb
jge
xchg
mov
es
xor
mov
dec
daa
sub
or
jg
pop
clc
repnz
cltd
fimull
leave
mov
imul
dec
mov
int3
ret
sbb
push
dec
sub
xor
ja
dec
enter
loope
xor
push
pop
mov
das
cmp
adc
dec
inc
test
mov
daa
stc
add
negl
lcall
out
and
gs
xchg
inc
xchg
nop
inc
pop
push
cmp
mov
pop
pmaxsw
xchg
ja
mov
dec
jecxz
test
sarl
cltd
jl
mov
rcr
pop
jmp
adc
sarb
popf
and
add
inc
lret
lds
push
adc
shlb
and
pop
mov
andb
inc
push
pop
out
inc
in
fnclex
js
sub
add
mov
xchg
sahf
mov
aaa
aam
sbb
iret
sub
adc
rcrb
add
ss
add
hlt
cmpsl
xlat
sbb
stc
xchg
insl
fstps
in
fld
loope
pop
sti
xor
mov
setbe
xchg
push
test
sbb
mov
arpl
sarb
enter
mov
mov
ret
aad
mov
add
mov
xchg
xchg
fdivl
push
xchg
sbb
xor
popf
push
ja
adc
cwtl
xchg
faddl
iret
stc
pushf
add
fucompp
add
pop
aas
mov
repnz
cmp
int
aam
push
js
repz
cltd
aaa
xchg
xor
add
test
cmp
mov
and
orb
pop
pop
mov
sub
adc
add
dec
orb
xchg
cli
inc
imul
or
cmp
je
adc
notl
pop
pop
push
jge
xlat
imul
or
mov
push
inc
and
lods
enter
mov
inc
das
adc
rol
add
sub
pop
pop
and
std
stos
into
clc
and
out
arpl
stos
inc
in
mov
fwait
lods
mov
adc
and
movsb
xchg
sub
je
jge
add
mov
test
stc
mov
cmp
mov
add
sbb
popf
add
lcall
aaa
and
in
cmp
xchg
sub
movsb
pop
push
jle
aaa
sub
mov
mov
imulb
stc
sbb
xchg
push
inc
sbb
mov
pushf
shl
lds
cmpsb
push
enter
push
sbb
gs
pop
nop
pop
imul
fiaddl
xchg
movsl
xchg
loope
addr16
lods
mov
or
xchg
mov
dec
push
fstl
pop
and
adc
nop
push
xchg
add
pop
xor
xor
std
outsb
ss
lahf
dec
dec
clc
jnp
shll
popf
xor
negl
arpl
fstpl
cmp
imul
adc
push
and
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
es
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
mov
and
inc
es
arpl
xor
add
enter
cmp
mov
push
rcrb
mov
adc
jo
push
fdivs
mov
fiaddl
dec
rcrb
mov
mov
sbb
imul
pop
sub
insb
cmc
inc
mov
xor
les
loopnew
add
sti
mov
scas
shrl
in
rcll
inc
das
push
mov
mov
mov
add
xchg
cmp
pop
test
das
mov
and
and
cmpsb
sti
stc
dec
fisubl
sbb
pop
cli
out
xchg
push
cmp
test
test
push
jo
jo
and
lds
push
pop
or
or
or
mov
dec
mov
out
in
je
mov
adc
and
sbb
bnd
lds
mov
mov
jae
sub
adc
fadd
lret
sbb
fsubrs
test
pop
push
or
pusha
enter
xor
add
dec
lret
fstl
jne
mov
add
cmp
and
jp
jbe
add
sbb
sub
pop
mov
outsl
pushf
jo
movsb
and
jb
les
lds
insl
orb
pop
mov
xor
inc
nop
inc
clc
pusha
enter
sub
sbb
dec
rcrb
test
mov
add
jo
pusha
enter
sub
sbb
dec
rcrb
test
jnp
rcll
aam
ja
sbbb
dec
pop
testb
and
cmc
sbb
push
mov
daa
pop
out
sti
sub
fwait
push
sbb
sbb
xchg
addb
inc
ja
ret
add
test
sbb
int
sti
stos
sub
cli
sbb
pop
lcall
mov
sub
int
dec
je
lods
maxps
mov
clc
mov
in
dec
xchg
cmp
and
xchg
cmp
mov
popf
mov
pop
je
jno
xchg
pop
xor
arpl
testl
clc
sbb
dec
mov
jnp
and
dec
popa
cmp
add
or
push
cld
lret
js
mov
mov
cmpsb
xor
ja
pop
int
jne
mov
mov
pop
mov
add
inc
nop
cmp
jl
loope
xchg
mov
fwait
cmp
pop
mov
sbb
dec
add
jecxz
and
jae
xchg
jecxz,pt
or
jmp
daa
arpl
sub
pop
inc
loope
mov
sub
mov
bound
and
inc
fbld
mov
mov
loope
jp
jo
mov
aaa
cwtl
fidivrl
and
lret
movsb
jmp
sub
call
das
outsb
pop
pop
stos
lods
scas
xchg
or
pop
test
mov
jmp
mov
jecxz
mov
aam
push
pop
lds
sbb
cmpsb
es
pop
mov
bound
xchg
pop
inc
out
mov
adc
outsl
sti
xchg
inc
adc
movsl
jno
fnstsw
mov
adc
pop
push
jo
and
push
shl
jge
fdiv
jns,pn
sbb
jmp
orb
test
repz
mov
lods
sbbl
mov
jne
ficomps
mov
jge
out
lcall
jno
jno
orb
popf
popa
jle
idivb
out
dec
cmp
mov
imul
xor
inc
inc
sbb
cld
xchg
pop
bound
rorl
xor
jecxz
stos
and
fildll
fsubs
lock
mov
aam
int3
jl
jg
roll
test
lds
inc
outsl
cmc
fdivrs
test
out
bound
cmc
insb
aam
icebp
or
les
push
ljmp
cli
jge
jns
or
fidivrs
out
jl
jge
push
repz
lcall
push
mov
rclb
lock
mov
pop
dec
push
cmp
test
aam
nopl
cmp
inc
cmp
xchg
cmp
or
decl
mov
mov
xchg
push
adc
push
ljmp
or
inc
sub
push
xor
pop
jle
aad
ss
jo
stos
test
cmp
mov
imul
insb
int
dec
fldenv
pusha
jnp
mov
insb
mov
cmp
and
mov
push
mov
fidivrl
jge
xchg
outsb
imul
repnz
jns
sub
fsubrl
aaa
scas
dec
add
shlb
mov
sbb
sub
clc
mov
fs
or
push
das
mov
jno
sub
add
mov
pop
frstor
addr16
mov
mov
icebp
nop
push
test
mov
jnp
shl
call
outsl
jge
pop
rclb
movsb
repz
mov
push
mov
clc
je
and
dec
enter
ret
inc
lods
lock
jmp
cmpsb
jle
dec
pop
ret
cltd
or
sbb
sub
sbb
shlb
jne
ljmp
divb
dec
imul
jae
xor
mov
shrl
les
inc
push
aas
in
ja
xor
pop
imul
cs
stos
stos
scas
dec
add
pop
pop
pop
in
incl
stc
loopne
push
dec
stos
ret
lret
jno
or
insb
add
cmp
xchg
sti
jecxz
sub
inc
arpl
clc
and
inc
divb
xchg
jg
sbb
cmc
fdivrp
cmp
jno
arpl
aaa
roll
push
arpl
cmpsl
loopne
pop
ljmp
leave
dec
arpl
pop
inc
test
cmp
xor
push
aad
jb
scas
sti
mov
imulb
inc
mov
push
mov
jbe
sbb
fmull
mov
add
lret
mov
fcmovne
add
fnsetpm(287
pop
or
xorb
push
cmp
sbb
mov
mov
int
lret
mov
out
cmp
mov
dec
jae,pt
jae
lea
aam
add
xorb
into
arpl
mov
jl
sarl
cmc
insb
fstl
fisttpl
sub
iret
les
inc
mov
adc
adc
push
mov
outsl
or
or
in
lods
ficompl
jne
pop
dec
sbb
sub
mov
cmp
popa
cli
pop
xchg
mov
fstpt
push
scas
stos
adc
stos
push
sti
jmp
jbe
inc
sbb
out
mov
sbb
sbb
scas
pop
movsl
les
dec
sbb
dec
repz
sbbb
testl
mov
mov
jmp
lock
das
push
jp
stc
sahf
push
fdivrl
push
insb
mov
idivl
shlb
int3
cs
test
popa
adc
xchg
lock
popf
hlt
test
lret
dec
or
xchg
xor
jle
fadd
jl
mov
sti
jl
rolb
cmp
sti
ficompl
ds
xchg
lock
nop
testl
dec
jno
mov
sbb
cmp
add
mov
mov
jbe
adc
test
pop
xchg
inc
mov
adc
mov
loop
ret
pop
dec
jmp
inc
push
xchg
loop
mov
add
cli
jle,pt
and
jbe
cmp
or
sti
ret
retw
push
jnp
add
sbb
adc
cmpsl
mov
mov
nop
adc
das
xchg
es
xchg
icebp
xor
shrb
dec
fcoml
adc
jp
shlb
inc
adc
leave
sbb
xchg
fimull
cmp
out
aam
enter
mov
clc
test
jle
dec
jmp
inc
sbb
mov
lcall
shrb
mov
out
sub
out
enter
fs
jno
push
test
dec
or
sbb
xchg
dec
and
std
out
xchg
fwait
push
mov
sbb
cld
or
lret
pop
jp
das
adc
mov
mov
cmp
mov
seto
ficoml
inc
loop
pop
arpl
or
push
jb
nop
js
lea
test
shl
lock
or
cmp
push
xor
mov
mov
mov
inc
jp
repnz
fbstp
dec
inc
jge
fistpll
cmpb
loop
lea
jp
lds
lea
ret
dec
mov
push
xchg
lret
shlb
add
leave
jmp
les
nop
loopne
sbb
repnz
inc
popa
mov
inc
mov
nop
or
pop
mov
pop
nop
fisttps
pop
lods
or
insb
jle
aaa
xchg
push
xor
push
xchg
push
lahf
pop
popa
leave
out
add
push
mov
cs
mov
sub
pop
jbe
jne
test
lret
sbbl
fs
or
fsub
cmp
mov
cmp
jle
adc
add
ror
inc
dec
gs
out
cld
ljmp
ja
push
jno
xchg
dec
ja
or
push
arpl
je
sub
jmp
popf
sub
dec
sub
mov
sahf
xchg
stc
mulb
adc
xchg
mov
scas
mov
or
or
fdivrs
shrl
mov
flds
sbb
xchg
mov
push
int3
js
mov
push
loopne
andl
push
add
pop
or
xchg
dec
xor
bound
jmp
inc
pop
cwtl
je
ja
insl
dec
or
stos
inc
fidivl
es
pop
cmp
adc
enter
outsl
loop
jne
pop
pusha
mov
ret
xor
add
jnp
pop
jnp
xchg
jp
pop
mov
arpl
cmpsb
ret
je
add
dec
xchg
mov
out
out
pusha
or
xchg
cmp
je
push
int
jle
dec
mov
icebp
fsubrs
push
mov
sti
push
test
fnstenv
cmpsb
lret
idivb
add
push
xor
scas
mov
xchg
in
adc
sub
jns
xorl
inc
sbb
xlat
dec
cmp
push
sbb
xchg
hlt
scas
adc
mov
scas
stos
push
jno
lds
in
push
rcrl
jge
lcall
ret
fstpl
mov
roll
mov
in
push
cs
dec
mov
stc
push
aad
adc
mov
add
and
jmp
adc
sub
add
rolb
mov
inc
aas
cmove
gs
sbb
dec
cmp
int3
and
out
incb
outsb
mov
mov
or
adcb
rcr
pop
lods
test
adc
std
add
lret
jne
jae
push
daa
lods
inc
add
pop
repnz
stos
and
sbb
mov
cmpl
dec
clc
sahf
jo
and
mov
or
orb
add
lcall
cwtl
xor
xchg
test
push
sub
sbb
lods
pop
imul
stos
push
rcrb
cmc
fisttpll
mov
je
cmpsl
mov
mov
or
std
push
mov
call
call
iret
xchg
sub
movsb
pop
outsb
or
mov
fdivl
mov
ss
icebp
add
mov
jns
mov
mov
in
adcl
or
xchg
mov
mov
jp
test
sub
push
jle
pop
ror
les
and
nop
insb
push
addr16
sarb
adc
xor
adc
pop
into
cmpsb
pop
out
mov
adc
push
mov
cld
in
dec
xchg
fdivl
sub
jnp
add
dec
mov
ja
lcall
repnz
sbb
mov
or
ret
mov
mov
aas
push
movsl
ret
jbe
mov
or
jge
mov
pop
push
lret
mov
add
jmp
pop
popf
jp
je
lds
xchg
arpl
pop
inc
jo
out
inc
jecxz
jnp
enter
jbe
pop
cmp
stos
arpl
std
cmp
sbb
xchg
mov
das
xlat
ficoms
cmp
stos
jnp
test
movb
in
jle
or
push
sbb
jb
inc
ljmp
pop
and
imul
jp
fcompl
mov
jne
cs
push
pop
je
push
dec
scas
or
sub
movsb
repnz
into
test
stc
int
add
repnz
into
je
pop
insb
mov
mov
mov
cmp
mov
pop
push
mov
add
arpl
jae
jae
test
mov
in
aas
lar
fildl
orb
add
popa
loope
mov
lret
fcmovb
xchg
and
cmp
movsl
sub
mov
push
or
cwtl
sbb
addr16
fisttpll
xchg
frstor
pushf
mov
pop
dec
sub
push
sub
insb
enter
push
test
das
shll
sub
push
leave
loopne,pn
push
push
jo
test
jae
inc
sbb
xchg
xor
mov
add
add
outsl
nop
adc
stos
lods
rclb
cli
fcmovb
jl
dec
fldcw
pop
jecxz
xchg
inc
sub
and
push
lea
ljmp
popa
shll
mov
pop
pop
xchg
int3
mov
sahf
add
pusha
into
test
cmc
jp
mov
xor
sbb
lahf
aaa
ficompl
sbb
jb
lahf
out
hlt
jmp
cmc
ljmp
jl
pusha
lds
pushf
shlb
lods
enter
lea
adc
pusha
call
mov
jecxz
push
pop
movsl
cmp
add
or
mov
fcompl
notb
mov
mov
cmc
hlt
addr16
lret
xchg
pop
push
clc
loop
test
cmc
push
mov
nop
and
aad
in
cmpb
or
dec
sar
xor
hlt
inc
inc
ljmp
xchg
push
insl
cs
mov
loop
adc
cmp
loop
test
inc
das
inc
xor
daa
push
js
sahf
xchg
aaa
sarl
dec
fists
xor
push
mov
xor
mov
cmp
xchg
testl
cmc
push
xchg
daa
mov
push
and
xor
or
mov
test
mov
sbb
mov
test
movsl
dec
adc
cli
imul
lds
fisttpl
outsb
push
outsb
mov
jbe
jnp
xchg
cmp
pop
push
pushf
repz
adc
orl
xchg
roll
jne
xchg
je
outsl
and
test
mov
adc
test
or
shll
aaa
push
gs
test
mov
mov
in
cmpl
cmp
nop
jl
ss
inc
scas
push
aaa
inc
popa
aas
jae
mov
aad
jle
push
pop
inc
xchg
xchg
outsl
cmc
repnz
ljmp
mov
jnp
ret
mov
add
lret
add
test
popf
fdivrl
sbb
mov
push
pop
or
fisttpl
insb
xor
or
addr16
jg
bound
or
inc
call
or
xor
outsl
outsb
dec
jno
mov
mov
notb
jge
push
cmp
and
fwait
xlat
subl
pop
cmc
add
adc
and
adc
sarl
dec
dec
ljmp
repnz
fsubs
in
imul
int
cli
fstl
and
loop
gs
xchg
pop
sbb
mov
add
or
std
fnstenv
xchg
sti
jge
jg
push
jnp
push
and
or
and
mov
sub
imul
and
add
and
sub
rorb
ja
mov
cmp
imul
sub
mov
out
mov
xchg
or
out
in
sub
scas
movsb
pop
inc
fildl
cmpsb
adc
push
jno
fstpt
dec
lods
sub
push
aam
mov
cmp
sub
fadd
dec
mov
imul
das
jbe
lods
lea
out
pop
or
jnp
xchg
add
pop
mov
aad
xchg
outsl
add
hlt
add
xchg
cmp
dec
lret
lds
xchg
rcrl
jp
inc
pop
setnp
mov
xchg
push
lea
inc
dec
out
jp
lock
jb
dec
test
cld
jo
push
sub
insl
add
cmpsl
inc
lds
int
xor
nop
lods
or
in
movb
in
idivl
or
ret
jb
inc
jo
mov
lea
mov
addl
xchg
insl
gs
or
sbb
mov
inc
or
das
out
pusha
dec
pop
es
ja
or
fwait
inc
aam
lds
fidivrs
xlat
fldl
push
mov
lods
pop
sub
out
ficoml
mov
popa
out
shr
test
inc
dec
mov
pop
mov
dec
mov
cmc
mov
mov
inc
and
add
popa
push
or
sbb
insl
ror
xlat
push
cmp
or
ja
push
mov
scas
mov
loop
jno
dec
mov
inc
push
clc
or
rcrb
sub
arpl
dec
inc
cmpsl
add
mov
iret
mov
and
std
out
outsb
inc
ret
data16
or
or
xor
pusha
rep
cs
push
fadd
cmp
sub
test
cld
and
out
adc
cmpsl
imul
mov
aad
xchg
in
mov
cmp
fdivrs
cwtl
movsb
jnp
stos
imull
inc
mov
pop
cmc
insl
push
mov
dec
adc
ja
push
testb
out
sub
cmpsb
mov
or
jmp
pop
insl
shll
sub
cli
pop
call
bound
lock
rorl
jmp
popf
xor
pop
jmp
xchg
mov
cmc
pop
cli
inc
in
ja
push
stos
mov
mov
subl
dec
jno
testb
jb
xor
sub
sbb
push
mov
popa
mov
inc
clc
push
testl
mov
or
rorb
sti
test
mov
jge
mov
movsb
jecxz
mov
push
mov
pushf
mov
jb
in
or
int
pop
aas
xchg
test
and
mov
mov
sbb
mov
jmp
adc
push
push
sarl
pusha
adc
inc
add
xor
incl
lods
ja
pop
scas
pop
int3
lret
xlat
mov
dec
repz
sti
in
dec
push
jg
hlt
test
adc
les
mov
xchg
inc
sub
mov
mov
cltd
mov
jno
adc
fsubs
mov
ja
push
aas
std
movsb
inc
outsl
push
jb
add
mov
xchg
cmp
popa
cmp
fwait
aaa
inc
daa
or
hlt
loop
cmp
cmp
cltd
lea
cmpsb
xchg
cmp
and
ja
mov
or
popa
mov
je
mov
dec
popf
incb
lock
ret
pop
or
or
ret
xchg
mulb
cwtl
sbb
insb
stos
pusha
lods
xchg
hlt
out
mov
lcall
jno
in
out
xchg
push
leave
hlt
adc
pushf
cwtl
mov
iret
cltd
mov
jp
cli
lret
outsb
ret
adc
and
push
decb
cmp
add
in
sahf
jne
mov
ds
aam
mov
push
cmc
loop
xor
push
dec
dec
pop
sarb
xchg
les
in
cs
sbb
mov
ljmp
or
js
ljmp
pop
jns
jnp
mov
xchg
icebp
aam
lods
repnz
xor
dec
popa
mov
out
or
mov
jbe
lcall
inc
mov
mov
mov
insb
stc
cld
fadd
mov
shrl
jp
sub
out
bound
adc
adc
mov
hlt
repz
jg
arpl
addr16
in
pop
xchg
int3
sbb
pusha
pop
add
lea
xchg
mov
mov
push
fcmove
and
ja
fs
leave
mov
clc
das
mov
xchg
pop
stos
mov
arpl
mov
dec
or
bound
add
and
pop
rcrl
inc
ret
and
icebp
lcall
and
push
push
std
or
xchg
mov
andl
jae
movsb
push
scas
add
push
movsb
insl
test
push
pushf
push
inc
and
lret
jle
lods
gs
and
les
test
dec
xor
xor
or
xchg
mov
xchg
ret
pop
aam
fwait
iret
xor
enter
js
sub
push
push
mov
movsl
xor
inc
push
and
cmp
jl
cs
cli
jle
enter
pop
or
loopne
adc
push
movsb
gs
iret
cwtl
repz
and
out
xchg
xor
ret
sbb
mov
in
pop
pushf
roll
push
xor
cmp
xchg
in
mov
sub
dec
insl
int
dec
mov
mov
mov
nop
stos
dec
mov
incb
pop
fcoms
sub
mov
adc
push
and
ja
mov
data16
xor
xchg
push
jne
mov
cwtl
xor
adc
fistpll
fildl
leave
push
pop
inc
notl
mov
push
mov
test
jle
arpl
repz
jnp
pop
pop
sahf
adc
xchg
es
into
sub
inc
jge
mov
iret
xor
sbb
shr
inc
in
cli
mov
xlat
push
push
mov
cmp
out
pop
rcl
xor
dec
xor
bound
negl
enter
fxch
adc
adc
out
xchg
test
or
arpl
and
outsb
cli
pop
in
sbb
repnz
fwait
jne
sub
jnp
mov
fisubl
lret
xchg
hlt
xor
stos
test
add
dec
sbb
cmp
les
inc
mov
mov
dec
mov
ret
idivb
test
cs
mov
sub
jno
xor
jecxz
jns
loope
movb
push
sbb
xor
inc
fildl
push
mov
lods
xchg
stos
inc
or
adc
xor
mov
rcrl
add
cli
test
pop
push
in
xlat
outsl
pop
push
fnstcw
inc
jne
mov
xchg
adc
lahf
push
push
cmp
cmp
xchg
mov
cmp
je
adc
adc
and
dec
in
popa
pusha
leave
push
or
sar
dec
icebp
push
divl
inc
push
outsl
ret
rcrl
in
pop
ficompl
add
sub
mov
or
loope
stos
stos
lods
fisubl
cltd
jb
fcomp
jl
stos
je
test
call
adc
cmp
inc
in
mov
and
and
int
xchg
sub
pushf
clc
xor
std
mov
xor
jne
mov
notl
cwtl
add
jo
pusha
enter
sub
sbb
dec
rcrb
test
mov
add
jo
pusha
enter
sub
sbb
dec
rcrb
test
mov
add
jo
pusha
enter
sub
sbb
aam
les
cwtl
add
jo
pusha
dec
push
pop
adc
or
js
lahf
mov
cmpsl
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
arpl
arpl
mov
lods
push
add
add
add
add
push
add
add
mov
add
add
add
add
les
cltd
add
add
add
dec
add
add
add
pop
add
add
mov
sub
add
add
add
filds
cmp
add
lahf
add
add
sub
and
push
add
add
push
add
les
iret
add
add
add
add
sti
add
push
add
add
add
add
and
pop
add
add
cltd
add
add
add
add
scas
add
add
add
add
add
add
add
dec
add
add
pop
add
add
stos
add
add
add
add
add
jmp
jo
test
or
add
add
add
add
add
bound
mov
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
jo
outsb
add
add
fwait
add
add
add
add
add
add
dec
add
add
test
int
push
add
add
jmp
add
xchg
aad
jle
test
add
add
add
aam
verw
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
filds
and
leave
add
xor
fwait
add
add
add
push
add
add
add
roll
bound
bound
xchg
add
add
add
add
add
add
add
dec
add
add
add
mov
cltd
add
test
stos
add
add
pop
add
loop
adc
bound
sub
jb
sbb
add
bound
and
fldl
cmp
add
xor
add
add
jb
push
add
add
cltd
add
add
add
add
add
add
add
add
test
add
lahf
add
add
add
add
mov
and
pop
add
add
in
sub
add
xor
adc
bound
push
add
bound
xor
add
sub
push
add
add
add
add
fwait
add
add
add
add
add
add
add
add
add
hlt
add
test
push
add
add
add
add
push
mov
sub
push
add
add
pop
add
out
mov
test
add
add
add
add
add
add
add
loopne
cmp
add
hlt
add
fiaddl
filds
les
or
or
sub
add
add
add
add
add
add
add
add
and
sub
outsl
add
push
add
add
add
jns
xchg
cmc
add
cmp
add
add
test
bound
rolb
incl
mov
add
add
add
add
add
add
imul
test
filds
out
add
add
add
filds
dec
add
add
adc
addb
add
xor
ljmp
add
add
add
and
pause
arpl
mov
loop
mov
into
adc
xor
insb
ret
mov
pop
imul
mov
shll
dec
push
lret
cmpsb
hlt
push
pop
movsb
jo
das
sbb
negl
sbb
out
stc
sub
cmp
and
addr16
sbb
in
xor
pop
add
pop
pop
dec
push
add
push
xor
sbb
xchg
scas
fdivrl
push
dec
xchg
xchg
dec
add
cmpsl
and
mov
xchg
das
dec
and
pop
les
ss
cmp
add
xchg
sbb
sbb
inc
cwtl
cmp
mov
ret
imul
cmpsl
pop
jae
sbbl
sahf
fsub
xorb
inc
push
stc
movl
sub
inc
and
xor
cmp
inc
dec
xchg
test
data16
loopne
mov
push
cmp
pop
outsb
negb
scas
cli
fbld
xor
adc
cmp
dec
push
movsl
pop
dec
in
fwait
jp
daa
push
mov
imul
lock
or
cmc
lea
cltd
lcall
lods
je
adc
aas
loop
in
pusha
or
inc
sub
cmp
fcmovnb
xchg
push
pop
pop
stos
push
ret
je
mov
ret
push
jo
sahf
lods
rcr
jg
sub
jnp
mov
test
push
mov
dec
or
inc
test
inc
bound
jmp
jo
push
stos
aaa
sar
push
jp
mov
lods
movsb
xchg
fdivrl
cmp
fsubrl
jae
mov
bound
test
repz
bnd
aaa
sbb
add
sub
cltd
out
mov
xchg
pop
lds
push
nop
outsb
fcoml
pop
and
mov
pop
sub
stos
getsec
and
out
adc
mov
cwtl
cli
cld
pushf
and
sbb
fwait
aaa
idivl
inc
pop
cli
xor
sub
and
cmp
mov
lock
pop
mov
das
dec
adc
sbb
jae
ja
imul
fmul
repnz
adc
cs
fiadds
pop
push
mov
repz
ror
push
push
mov
adc
jns
fisubrl
xlat
xchg
mov
pop
xor
xchg
cs
lock
jne
xor
xor
mov
push
add
rclb
cmp
outsl
fcoml
jnp
pop
xor
dec
mov
push
repnz
and
roll
xor
call
sub
mov
dec
lods
xchg
fnsave
mov
call
pop
xchg
pop
mov
fidivs
cmp
mov
sbb
and
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
