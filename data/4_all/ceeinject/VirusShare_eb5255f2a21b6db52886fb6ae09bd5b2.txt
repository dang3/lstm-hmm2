fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
fcoms
movsb
fldt
sbbl
and
lret
jne
gs
xchg
test
aam
aam
hlt
in
inc
sbb
and
and
je
fs
lea
mov
fldlg2
sbb
daa
push
dec
inc
push
jne
sbb
add
push
or
fsubs
ret
pop
sbb
add
es
push
dec
cmp
scas
daa
mov
sbb
lea
cmp
fimuls
popa
sbb
fs
fcmovnbe
xor
sbb
test
pushf
lds
xchg
out
mov
and
out
add
cli
add
pop
fcmovnu
stos
icebp
enter
cmp
ror
std
jnp
dec
lock
aam
aam
and
add
push
cli
and
push
lcall
dec
shrb
adc
mov
cld
lods
mov
call
es
cmpsb
push
inc
push
and
imul
pop
pop
cmp
mov
jl
outsb
xor
and
movsb
xor
bound
lods
leave
movsb
aad
add
out
xchg
sbb
sub
pop
pop
jne
add
xchg
repz
ror
sarl
test
xor
xor
inc
add
and
xchg
std
or
lret
mov
adcb
push
push
dec
es
inc
add
and
out
mov
loope
out
cmc
hlt
in
adc
xor
and
push
inc
inc
jne
gs
xchg
test
aam
cmc
hlt
in
adc
xor
and
push
inc
inc
jne
gs
xchg
inc
xchg
sbb
pop
stos
pop
xchg
cmp
clc
adc
jae
movsl
xchg
cmp
syscall
push
out
pop
inc
jg
data16
loope
aas
dec
dec
jge
dec
mov
insl
mov
call
aas
mull
jnp
and
cmp
push
fnstcw
push
mov
mov
shlb
push
pop
scas
in
add
dec
pop
mov
lock
test
es
fistl
push
sub
in
sti
fcmovu
adc
and
xchg
les
jle
ja
mul
mov
in
js
icebp
xchg
std
inc
inc
add
cltd
xchg
aad
int
subb
add
pop
mov
xchg
or
mov
xchg
daa
iret
outsl
push
shll
add
mov
push
mov
or
jl
xchg
dec
scas
adc
mov
fsubl
jns
push
cmpsb
xor
hlt
ret
xchg
in
mov
bound
cld
pushf
loope
fadd
push
push
or
cmc
jecxz
test
pop
aam
add
dec
mov
add
mov
push
out
mov
test
xor
pop
imul
jno
xlat
loope
gs
add
pusha
sti
dec
xor
push
pop
mov
fs
cmp
jecxz
adc
mov
and
out
fs
and
push
sbb
ds
test
loop
test
jl
mov
push
in
enter
pushf
jge
xor
jl
xchg
mov
adc
lods
aaa
pusha
mov
stos
jb
jl
sbb
in
pop
and
fsubrl
in
insb
jmp
repnz
outsb
sbb
push
jb
push
repz
inc
sbbl
or
loopne
push
pushf
sbb
adc
pop
insb
mov
jbe
mov
push
sub
lea
test
add
dec
or
and
cmp
pop
outsb
cmp
and
dec
push
sbb
pop
rcrl
cmp
xchg
add
or
push
dec
pop
jecxz
cmpsl
cmpsl
lret
inc
aad
loop
push
enter
sbb
and
jb
fwait
or
into
sub
or
xor
push
int3
cmc
jne
test
loop
bound
cmpb
inc
outsb
lods
push
mov
lods
pop
daa
xor
lods
mov
out
fsubrs
insl
mov
inc
sbb
jns
mov
xor
jb
aad
push
push
jmp
pop
sbb
leave
push
out
nop
and
andl
jbe
lahf
adc
aam
push
jp
inc
cmc
jmp
mov
addr16
pop
loopne
mov
clc
sub
out
addl
jns
stc
adcl
jo
sbb
pop
ret
addr16
and
imul
out
addr16
outsl
call
fisubs
inc
push
mov
scas
jp
add
pop
jg
ja
rclb
outsb
arpl
xor
mov
std
pop
lret
dec
inc
jb
pop
add
dec
sbb
sti
adc
sbb
or
sbb
sbb
cmp
jbe
nop
xor
shrb
inc
jnp
movswl
std
popf
std
jns
push
test
sbb
dec
cltd
fistl
iret
push
xchg
push
enter
and
dec
mov
rol
loope
mov
push
dec
cmc
sub
and
inc
mov
int
dec
inc
shll
sarb
stos
ljmp
xchg
sub
test
mov
inc
jg
das
ds
icebp
mov
aad
sub
loope
dec
mov
jb
pusha
pop
sahf
les
push
push
dec
mov
aam
data16
in
pop
xchg
popf
sub
iret
jl
movsb
jmp
sub
dec
or
push
pop
push
fs
jp
adc
push
mov
faddl
jmp
sub
rcll
outsb
pop
cwtl
pop
or
lcall
mov
xchg
jp
sbb
int3
mov
cmpsb
int
inc
fnstcw
jmp
xor
shll
mov
and
loopne
sarb
insl
das
sub
popa
in
push
mov
inc
xor
mov
and
mov
fcompl
aas
add
push
shlb
cmp
or
sbb
clc
movsb
adc
jmp
imul
pop
jg
push
mov
lods
cmp
cmc
stos
sub
and
lret
cmp
leave
xor
xor
pop
jl
outsb
orl
in
sbb
mov
icebp
subb
fdivs
lahf
jae
aaa
lcall
and
jmp
mov
pop
lods
xchg
mov
pop
cmpsl
sbb
or
xchg
and
or
fsubs
mov
sbb
dec
cld
test
cmp
or
jle
or
push
in
nop
mov
jnp
jmp
call
popf
and
adc
in
push
rcl
jle
fnsave
ficoms
pop
xor
or
inc
sbb
cwtl
in
xorb
adc
fsubrs
push
xchg
xor
add
xor
push
mov
mov
sbb
cmpl
loope
mov
pop
loop
in
jne
stos
sub
in
sbb
inc
lods
push
sahf
or
cwtl
movsl
imul
push
sbb
neg
and
cmc
dec
and
je
xchg
outsl
neg
pusha
fdivrl
sub
imul
shlb
movsl
insb
das
pop
xchg
lea
sub
stos
dec
add
inc
fidivrl
or
jl
mov
ss
fcmovnu
mov
and
mov
lret
stos
add
xor
dec
cli
mov
mov
fwait
leave
outsb
enter
mov
sbb
add
cmpsl
mov
cmpsl
stc
add
xchg
mov
mov
mov
mov
ljmp
inc
test
rorl
or
aas
add
testl
push
ds
mov
jl
dec
mov
pop
jne
mov
cwtl
imul
fisubrs
mov
int3
stos
mov
push
inc
cs
sub
jae
mov
arpl
adc
insb
cmp
lock
ds
xchg
pop
scas
cmp
outsl
inc
push
xchg
dec
jo
ss
inc
test
fsubrs
adc
pop
stos
and
sbb
xchg
sbb
cmc
lods
jae
mov
and
xchg
inc
lahf
mov
pushf
iret
ret
movsb
inc
xor
daa
js
mov
mov
lret
push
or
scas
cmp
cmpsb
push
mov
dec
jecxz
cwtl
arpl
mov
cwtl
stos
lret
dec
xchg
div
fidivrl
lods
pop
in
out
leave
aaa
mov
push
pusha
mov
cmpsb
packuswb
adc
xchg
jg
and
js
jns
pusha
jne
bnd
loop
mov
inc
sub
daa
push
in
sbb
ja
repnz
or
int3
out
sbb
out
lods
sub
sbb
stc
sbb
inc
in
jmp
cmpsl
in
sub
in
xor
adcb
add
pop
jns
xchg
jne
imul
and
mov
or
cs
test
pop
jle
roll
inc
jg
sub
xor
and
mov
inc
cmp
push
rcll
xchg
xor
push
fildll
dec
mov
test
adc
jmp
jle
cmpsl
lods
test
mov
addl
adc
push
test
lcall
fsts
call
into
pop
sahf
jecxz
outsb
test
mov
mov
ret
cmp
fs
shll
sbb
adc
cwtl
xchg
push
jecxz
outsl
test
scas
push
mov
out
inc
push
popa
jecxz
adc
mov
lds
fnsave
fcompl
lahf
lds
in
hlt
pusha
insl
lock
jp
push
ficomps
dec
rol
and
shlb
adc
cwtl
in
jbe
xor
mov
mov
lcall
ja
mull
jno
or
sbbb
frstor
add
ja
call
cld
ja
sub
shll
mov
xor
cmc
cmp
mov
pushf
jbe
insl
adc
aaa
fdivp
or
bts
pusha
in
jbe
and
push
popa
andb
movntps
je
sub
in
xor
xchg
jbe
or
or
jmp
repnz
pop
lods
lret
je
outsb
in
inc
in
mov
aam
add
lahf
loop
cmpsb
cli
stc
lods
jge,pt
imul
fiaddl
sbb
add
popf
loop
mov
sbb
push
or
cmovae
mov
fwait
pop
div
jns
adc
mov
or
js
mov
iret
inc
jp
dec
xor
xchg
ret
rcrb
push
mov
xor
inc
inc
jp
iret
test
iret
lds
cld
test
cld
andb
lods
sahf
push
sbb
pop
scas
repz
jecxz
cmp
jmp
out
jmp
aad
gs
inc
or
mov
pop
mul
into
int
mov
bound
sahf
aam
aam
mov
inc
mov
shl
addr16
inc
sar
push
jg
scas
or
push
sahf
sub
xchg
js
jne
add
into
mov
imul
mov
jg,pt
loop
rcrl
cmp
int
pop
sub
xor
jns
jmp
movsb
stos
pushw
arpl
xor
sbb
xor
and
xor
aas
sbb
mov
imul
xchg
fistpll
jne
add
xchg
inc
inc
sahf
mov
subl
mov
popf
xchg
dec
pop
rcll
mov
cwtl
pop
xchg
and
sbb
data16
dec
sub
les
sub
insb
sub
test
or
mov
loop
pop
fcoml
ret
jecxz
shr
cmp
cmpb
divl
iret
dec
lds
dec
push
lcall
xchg
and
mov
xor
cmp
add
adc
inc
or
cmpsb
in
clc
mov
sub
xchg
inc
mov
aaa
inc
out
push
sbb
sbb
ds
jnp
outsl
cld
jg
mov
inc
icebp
xchg
mov
in
add
pop
inc
inc
or
push
daa
outsl
lret
fcoms
lahf
jge
pop
mov
mov
and
lret
or
mov
rcll
sarb
push
test
mov
stos
mov
or
push
adcb
xor
rcrb
push
repz
scas
jo
mov
jecxz
test
cmpsl
sub
add
add
scas
push
sbb
out
sti
aaa
fcomps
popa
bound
test
nop
xchg
loope
dec
push
sub
icebp
out
xchg
jg
dec
pop
scas
cmp
or
jl
das
xchg
out
loop
mov
mov
mov
cmp
rclb
jno
stos
dec
sbb
out
scas
dec
mov
into
mov
rcrb
push
push
mov
xchg
mov
lret
ret
mov
daa
mov
mov
cmp
loope
push
leave
mov
push
pop
mov
cmp
mov
test
sbb
jns
das
sahf
loopne
xor
push
mov
movsl
out
xlat
jne
clc
fcmovu
in
out
and
insb
xor
push
cs
mulps
cmp
add
mov
mull
into
mov
je
ds
insl
repnz
cmpsl
mov
test
add
adc
jnp
das
xor
imul
lret
hlt
mov
push
cmpl
hlt
std
cmp
loopne
dec
mov
mov
mov
push
mov
pop
xor
adc
lods
inc
aad
mov
mov
je
xchg
pop
and
dec
jmp
inc
mov
clc
mov
pop
nop
xchg
loopne
mov
adc
adc
test
scas
mulb
mov
insl
sbbb
in
xor
xchg
push
adc
xchg
add
mov
imul
cmpsb
out
sub
mov
ret
sub
mov
and
shlb
dec
adc
and
mov
dec
and
push
bound
dec
mov
ja
mov
out
cmpsl
xchg
sbb
xchg
push
sbb
lea
mov
movl
roll
and
test
leave
idivb
adc
fsubl
xchg
outsb
add
xor
or
scas
movsl
adc
popa
mov
mov
scas
in
jge
mov
cmc
scas
jg
lcall
mov
jbe
dec
movsb
testl
orl
fs
pop
mov
xor
xchg
lea
mov
push
adc
cli
out
outsb
mov
lods
fnsave
mov
gs
push
jle
pop
dec
cli
mov
icebp
test
push
out
and
xlat
cmp
addr16
pop
mov
jl
lahf
dec
and
push
incb
lahf
inc
and
xlat
adc
cmp
xor
imul
add
inc
or
mov
ljmp
mov
orb
sbb
xor
fistpl
repnz
and
inc
adc
data16
pop
ret
in
notb
sarl
fsubrs
lock
inc
mov
pop
add
scas
jno
lds
pop
push
jmp
and
jle
mov
ja
orl
sub
cmpsl
scas
xchg
std
cmpsb
sub
cwtl
dec
imul
std
ret
cmp
adc
outsb
out
add
rolb
xor
push
lahf
int3
mov
jp
and
and
call
inc
pop
push
xchg
lea
inc
hlt
popa
das
cmp
and
pop
sbb
jecxz
inc
sub
adc
inc
pop
aas
push
hlt
push
sub
loopne
call
rcll
mov
sbb
pop
lret
push
out
out
pop
sbb
fs
lahf
sbb
rorb
into
ja
cwtl
xor
data16
mov
arpl
aam
xchg
add
es
jno
fmull
push
xor
jl
cltd
add
dec
adc
pusha
and
incb
pusha
sar
popa
repz
repz
shl
add
mov
leave
pop
mov
test
push
leave
jno
xchg
xchg
bound
js
jg
inc
mov
adc
ljmp
jns
and
int
in
in
das
push
mov
popa
mov
nop
cmpsb
add
mov
aam
jne
xor
das
addr16
lock
call
insb
sbb
xchg
call
add
leave
cmp
out
int
pop
lea
jne
mov
hlt
cmp
pop
in
int
enter
daa
lods
pop
cli
sub
outsl
cmpsl
loope
and
push
inc
les
sub
sub
repnz
mov
adc
xchg
xchg
jp
inc
mov
pop
movsb
fistl
dec
js
xchg
inc
xor
sub
ljmp
out
inc
xchg
movsl
or
addl
stc
cwtl
into
fcoml
js
cmp
testb
pusha
dec
mov
shl
in
fistl
jo
and
dec
mov
out
rcrb
pushf
mov
in
jo
push
jo
mov
pop
push
pop
push
in
jp
lock
or
test
inc
aam
xchg
aam
mov
incb
movsb
mov
pop
shll
arpl
daa
aaa
sub
jnp
movsb
push
hlt
mov
mov
xor
stos
jmp
dec
adc
pop
and
adc
mov
and
cmp
jecxz
dec
mov
negb
nop
bound
xchg
mov
mov
aaa
mov
sahf
jb
imul
push
adc
loopne
ss
push
aaa
xor
mov
xor
jmp
mov
fdivl
sbb
dec
or
std
pop
mov
insl
mov
sub
ret
stos
sub
into
jl
dec
cmp
jle
mov
xor
xor
cmp
sbb
lds
mov
pop
fprem1
xor
pop
std
subb
jne
stos
imul
in
or
ficompl
int
cmp
jecxz
jp
fwait
xchg
dec
sarl
lods
xchg
jmp
push
xchg
les
jg
call
mov
inc
call
nop
mov
inc
pop
sub
sbb
jo
or
cs
je
push
pop
dec
jl
add
sbb
popaw
pop
lahf
in
jae
jp
repz
loope
ljmp
imul
xor
into
dec
lods
out
jnp
or
in
cli
xorl
popa
sub
imul
hlt
in
shrb
adc
call
cmp
in
pop
cmp
xchg
sti
pop
inc
xchg
loope
jnp
fcomps
jne
sbb
imul
imul
fbld
daa
stos
xor
mov
pop
xlat
jns
fldt
test
push
adc
mov
and
mov
pop
mov
cmp
or
loope
jl
outsb
cmp
shll
mov
jo
mov
push
lea
inc
outsb
mov
orl
jnp
fs
mov
pop
jb
and
xor
cmpb
lret
incb
mov
rorb
jmp
jle
dec
in
sub
jp
sbb
faddl
pop
clc
mov
cmpsl
sub
sub
jl
into
stc
add
cmp
inc
stos
jno
sbb
fldenv
orl
mov
xlat
inc
bound
or
jmp
jp
mov
leave
pop
in
shrb
pop
or
in
in
ja
fnsave
push
fldt
push
cmp
add
loopne
into
jbe
inc
cmpsb
sub
cld
outsl
dec
lcall
cmp
cmc
ret
cs
repz
cli
pop
pop
outsl
add
mov
daa
in
pop
and
in
imul
dec
sub
and
imul
mov
inc
sahf
xor
sub
mov
inc
sahf
xor
pop
jmp
mov
cmp
repz
inc
mov
cmp
inc
sbb
loop
pop
pusha
mov
xor
mov
jecxz
fisubrl
and
js
cltd
lahf
arpl
lds
inc
test
mov
push
and
rcll
xchg
daa
fbstp
js
mov
push
mov
js
sbb
xchg
rclb
arpl
dec
and
and
roll
mov
popf
fstpl
das
fcomps
inc
stc
das
xchg
sahf
add
ds
enter
test
pop
out
push
cmp
or
fs
jl
int3
pop
aam
leave
sahf
xor
dec
xor
addr16
sub
pop
fsubrs
loop
cmp
jbe
lret
dec
xchg
cwtl
lods
fnstcw
sub
sub
mov
insb
xchg
scas
add
je
mov
aaa
and
dec
add
sbb
xor
imull
lods
or
aam
outsb
daa
mov
int
fcomi
test
cli
jns
inc
xor
adc
sub
pushf
or
xchg
mov
xor
addr16
push
push
test
add
hlt
mov
jns
mov
mov
ja
and
imul
ror
xor
dec
call
sbbl
dec
jo
mov
decb
sahf
movsb
stos
cmp
push
fisubrs
lcall
mov
pop
or
movsl
pusha
push
out
xchg
mov
xchg
nop
imull
cmpsl
shl
orl
lods
xor
xchg
pop
mov
movsl
sub
push
jp
repz
mov
clc
or
push
call
lods
adc
icebp
or
and
jno
call
scas
icebp
inc
dec
ud2
gs
sbb
push
lock
push
mov
push
popf
divb
popl
fmul
cmp
aas
int
push
sbb
mov
jnp
sbb
inc
dec
adc
cmp
int
inc
or
cmc
xchg
mov
inc
mov
mov
enter
test
inc
pop
push
mov
or
mov
stos
jecxz
mov
sbb
mov
sbb
in
xor
and
outsb
aam
lahf
call
adc
ror
shll
out
jge
xchg
adc
push
rcrl
aaa
dec
repnz
xchg
inc
and
xchg
into
xchg
add
mov
dec
adc
pop
adc
sub
jge
inc
test
jno
andl
xor
shll
mov
push
jle
mov
or
adc
push
sub
or
rorl
fdivl
sub
or
and
shlb
andb
ds
sarl
adc
daa
lods
fnsave
fsubrs
mov
mov
mov
pop
popa
adc
dec
push
adc
xlat
test
cmp
sub
adc
mov
push
xchg
pop
mull
clc
push
insl
aas
repz
call
test
mov
movsb
aad
hlt
in
adc
xor
and
push
inc
inc
jne
gs
xchg
test
aam
cmc
hlt
in
adc
xor
and
push
inc
inc
jne
gs
xchg
xchg
aam
cmc
hlt
in
adc
and
pop
inc
jno
push
pusha
lea
lea
hlt
gs
adc
scas
lahf
xor
push
and
int
mov
lcall
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
aam
pop
mov
mov
outsl
nop
jg
push
repnz
sarb
sarb
and
xor
add
adc
pusha
jo
inc
scas
push
fidivl
outsb
sahf
jg
push
pop
shrb
aas
cmp
sub
sbb
or
jns
push
mov
fisttps
call
inc
pushf
dec
xchg
sbbl
mov
jo
subl
xor
xchg
push
shl
sti
mov
test
lds
lds
jl
outsb
push
pop
loopne
rclb
pop
repz
hlt
push
lret
je
jl
dec
dec
pop
mov
lock
shlb
lret
xor
lahf
mov
mov
mov
mov
pop
pop
lock
sarb
jo
mov
repnz
add
jo
mov
dec
adcl
rcr
xchg
ror
inc
push
out
negl
and
cmp
andb
rol
jmp
out
adc
ja
pusha
lahf
inc
scas
dec
mov
cwtl
outsl
mov
psubsb
fisubrl
sarb
iret
push
cmpsb
gs
fs
or
aas
faddl
cmp
pavgb
pop
mov
mov
mov
cmpsl
pusha
pushf
or
jo
inc
clc
add
orb
sub
mov
mov
inc
mov
mov
sub
push
mov
subb
loopne
lock
shrb
aas
and
xor
add
adc
pusha
jo
inc
scas
push
mov
subb
loopne
lock
shrb
aas
and
pop
idivl
jp
sbb
clc
xchg
pop
sbbl
test
insb
movsb
je
xchg
mov
rcll
inc
mov
sub
pop
or
test
sub
push
sub
sub
cmpsb
push
leave
mov
mov
ret
push
sbb
fwait
sti
adc
popa
lds
push
jns
pop
int
xchg
mov
jle
andl
and
jb
aad
sbb
stos
jge
pop
dec
and
mov
push
fdivr
mov
add
cwtl
xchg
lret
sbb
daa
mov
jecxz
pop
lahf
loop
loopne
adc
inc
sub
bswap
mov
push
repz
test
loop
movsb
cwtl
mov
movsl
and
mov
push
leave
jl
enter
mov
repz
and
mov
sbb
jno
pop
inc
sbb
cmpsb
ljmp
data16
or
adcl
icebp
xchg
lret
daa
mov
andb
jp
jge
cmp
xorb
sahf
leave
push
pop
dec
mov
dec
xchg
adc
ds
out
gs
lahf
in
pop
call
ss
or
cmp
sub
and
divl
and
fmuls
icebp
jnp
imul
sub
in
push
or
movsb
pop
js
fstp
pop
cltd
loop
add
lea
popf
pusha
xor
add
nop
lods
test
sbb
adc
push
xor
arpl
insb
dec
imul
mov
mov
pop
les
cmp
negl
loop
sbb
jne
ffreep
xor
inc
leave
xchg
sarb
jp
lret
add
aaa
das
push
test
gs
and
or
xchg
or
mov
push
push
dec
dec
les
dec
cwtl
lds
cmp
flds
aam
adc
rcrl
pop
lret
pop
sarb
dec
aam
cli
lret
xchg
and
and
pop
push
xor
adc
pop
push
sbb
in
scas
jmp
mov
sub
mov
sub
sbb
std
sbb
jle
push
jp
cmc
fbstp
lret
xchg
stc
mov
jne
out
mov
lods
jns
add
sbb
or
lret
add
dec
rcrl
sbb
xchg
call
insl
fildll
cwtl
push
mov
popf
fs
adc
xor
sub
xchg
inc
clc
sub
aas
fsubl
xor
icebp
sub
ljmp
cwtl
fucomp
shll
test
iret
test
nop
adc
ret
es
sbb
mov
dec
loop
es
xor
sbb
or
ret
push
cmp
mov
jl
push
loop
cwtl
test
lcall
xchg
xor
mov
outsl
inc
leave
push
ret
sub
mov
pop
out
dec
cwtl
in
mov
jno
lret
sub
sbb
and
int3
adc
mov
add
inc
test
mov
inc
loop
ret
jmp
out
push
js
jns
sbb
jns
sbb
mov
test
cli
fadds
mov
mov
jg
add
and
pop
int3
jae
scas
dec
xchg
nop
push
sahf
in
call
jae
push
mov
mov
mov
ret
add
gs
and
test
jne
push
and
mov
lods
mov
cwtl
sbbb
xor
out
mov
mov
sahf
sub
sub
dec
pop
imul
idivl
arpl
mov
ljmp
fwait
cmp
outsb
jl
testl
cwtl
push
movb
pop
jbe
add
jns
xor
mov
add
gs
ljmp
mov
add
in
fwait
addr16
xor
stc
or
into
cmp
je
popf
mov
jno
dec
pop
mov
movsb
js
add
mov
rcr
test
xlat
pminub
xor
inc
and
cmp
mov
cli
mov
push
fs
sub
adc
mov
pop
pop
fnstcw
xchg
insl
push
leave
movsb
out
prefetch
rolb
in
in
out
in
cmc
xor
cmp
lods
add
mov
mov
pop
sub
je
dec
hlt
stc
in
mov
cmp
pop
pusha
shrl
inc
out
outsb
test
xor
daa
fisttpl
lcall
out
lret
push
std
pop
sbb
xchg
movsl
sbb
cmp
sub
push
dec
std
popa
in
push
add
je
and
sbb
mov
or
in
rclb
ficomps
lods
loope
and
add
insl
rolb
lods
les
dec
dec
sbb
mov
bound
add
xlat
pushf
and
sbb
lret
loope
incl
in
std
push
push
or
popf
aam
push
imul
rolb
inc
cli
jl
lds
movsb
mov
jo
sbb
call
cs
pop
add
lahf
lods
fs
or
clc
fimull
mov
fcompl
push
dec
ficoml
push
out
out
mov
sub
jns
add
ljmp
mov
xor
ret
xchg
lcall
mov
lods
adc
psubq
negl
mov
loop
xchg
ds
sbb
pop
push
dec
out
push
imul
mov
scas
aam
ljmp
mov
mov
incb
int
or
add
jb
int3
test
push
cmpsl
std
and
pop
or
test
cs
enter
sbb
sbb
sub
mov
imul
sub
cmpsl
in
jae
xor
mov
push
test
les
cmc
rcrl
cmc
repz
cmpsb
orl
adc
subl
and
sbb
inc
out
inc
cld
jne
mov
popa
int
mov
inc
mov
xorb
sbb
leave
aaa
aas
sbb
inc
fwait
jecxz
mov
push
movsl
jo
cmp
mov
lcall
lock
icebp
adc
sub
sti
in
and
or
lods
cli
fnstenv
outsl
movsb
aas
lock
ja
push
push
xchg
mov
cmp
add
push
xor
test
ja
pushf
addr16
ss
lods
jo
mov
lret
arpl
add
inc
movsl
iret
adc
cmp
xlat
into
aaa
inc
cmc
imul
adc
or
mov
lea
sbb
jnp
loope
rcrb
dec
cmp
adc
out
xchg
notl
mov
push
out
xor
aad
mov
test
mov
sub
pmulhw
xlat
imull
imul
pop
ss
sub
andl
das
xchg
jno
scas
xor
testl
lret
xor
cmp
sbbb
mov
add
aas
sub
jg
aam
leave
mov
xor
dec
fcompl
or
fistpl
adc
stos
clc
nop
xchg
jecxz
movb
mov
cli
push
mov
loop
add
xchg
cmp
rcll
mov
cmpsl
adc
push
cmp
nop
cmc
push
or
mov
mov
sbb
shlb
nop
jp
std
scas
xor
mov
xchg
inc
lds
movsl
jne
je
and
and
jle
test
mov
in
jmp
and
mov
inc
sub
jge
mov
mov
xor
dec
add
xor
mov
dec
and
aaa
lret
push
push
xor
xor
hlt
pop
or
rcl
push
cld
imul
std
mov
lea
lret
add
push
out
fs
stos
xor
insb
fnsave
jecxz
and
dec
xor
pop
mov
loope
fadds
mov
insl
sub
push
dec
dec
dec
sub
fidivs
fidivs
loope
call
notb
xor
lcall
mov
into
mov
arpl
cs
add
push
add
jp
scas
enter
mov
inc
stos
lods
aam
jo
std
bound
mov
and
lods
adc
and
mov
bound
out
ret
jns
xchg
cmpsl
outsl
jne
jecxz
aaa
imul
or
mov
mov
xor
shlb
lcall
adc
mov
arpl
jle
cmp
sbb
fwait
subl
push
jmp
cmpsb
stos
jnp
fs
aas
push
xor
data16
data16
xchg
pop
loop
nop
xlat
aad
arpl
js
mov
jle,pt
and
lret
mov
cmc
pop
push
push
sbb
ficompl
cmpsl
xchg
add
xor
jp
xor
sahf
ds
popa
sbb
bound
xchg
push
mov
lds
adc
leave
lods
sbb
std
xchg
pop
jp
test
adc
loop
js
cwtl
jns
cltd
push
add
pop
dec
push
pop
stc
leave
enter
ret
ja
call
aaa
outsb
mov
mov
lahf
adcl
push
int3
mov
jge
adc
into
ret
jg
rorb
dec
xor
ljmp
or
adc
add
inc
lcall
lds
enter
jo
aas
sub
pop
scas
cmc
mov
pop
add
icebp
jp
aas
push
mov
xlat
ja
lret
mov
mov
imul
repz
outsb
or
shll
fdivr
sub
push
fwait
ret
scas
and
mov
inc
ret
loopne
inc
or
inc
lods
test
mov
jbe
add
xor
and
sti
cltd
ss
jmp
jp
test
inc
js
mov
mov
lahf
jb
subb
pop
sbb
xchg
popf
jecxz
jo
lcall
mov
aad
mov
js
jae
pop
mov
xchg
in
jbe
loopne
lods
push
dec
cmpsb
push
and
xchg
outsb
and
dec
sub
shll
rorl
jmp
or
roll
stos
pop
jno
mov
push
out
mov
and
imul
jns
mov
adc
dec
push
adc
shlb
sahf
pop
and
and
repnz
in
cmpsl
aad
mov
leave
repz
xor
scas
aad
push
mov
gs
scas
xchg
das
pushf
cmpsb
fidivl
push
cld
sbb
mov
out
dec
xor
test
lods
ficompl
jns
int
pusha
lods
mov
sub
clc
dec
pop
divb
pop
ljmp
jae
sbb
pop
xchg
dec
mov
sbb
mov
sub
or
test
and
bound
inc
pop
ss
cld
cmp
stos
test
adc
inc
repz
mov
fistpll
sbb
iret
ljmp
push
cmp
fnsave
lea
test
push
jno
movsl
sbbl
in
call
pop
das
enter
out
xchg
sarb
xchg
faddl
push
xchg
mov
fistpl
dec
call
insb
sbb
jg
ja
sub
and
sahf
test
jno
cs
add
pop
shrl
mov
sbb
and
mov
add
addr16
rcrb
mov
lods
fs
lahf
adcl
pop
xchg
mov
mov
mov
and
fdivrs
les
ds
repz
leave
pop
insb
lea
xchg
sub
in
insb
lret
addl
pop
push
xchg
imul
adc
mov
rcrb
cmp
stos
cs
dec
pop
call
mov
aad
and
xor
adc
fs
jno
int
jns
aam
aas
mov
test
into
add
xor
out
aam
jg
mov
fstl
orb
ja
lahf
imul
or
sub
loopne
pop
stos
mov
xor
adc
mov
outsb
push
pop
add
mov
dec
test
in
fwait
fs
cmp
cld
rorb
outsb
clc
mov
pop
pop
sub
lods
cmp
shlb
iret
and
in
dec
cld
in
jae
cmp
arpl
sub
mov
cli
or
pop
push
pop
sbb
adc
pop
fldl
mov
pop
int
xchg
mov
es
mov
or
movsl
xlat
fisttpll
mov
sbb
fcmovnbe
inc
dec
mov
mov
lcall
stos
mov
js
subl
roll
sub
fistps
std
push
stos
cmp
nop
inc
add
popf
outsl
jecxz
jle
xor
daa
inc
jno
and
adc
aad
je
mov
lods
cli
lods
out
xchg
shlb
es
movsl
add
or
adc
lds
add
mov
mov
mov
pop
mov
roll
sub
testl
in
mov
inc
je
jae
jle
mov
jmp
inc
adc
xor
cmp
adc
repnz
loop
push
and
out
cmpsl
dec
sbbb
adc
xlat
das
sbb
cmpsl
sbb
addl
sub
out
xlat
pop
jns
aam
cmp
int
cs
jmp
xchg
xchg
sub
xchg
cmp
inc
scas
fmulp
dec
clc
jmp
lds
repnz
std
dec
pushf
mov
inc
mov
imul
xchg
mov
imul
push
test
mov
call
scas
cwtl
jle
jle
xor
sahf
xchg
xchg
push
jge
inc
pop
jmp
outsl
xor
lret
pop
out
iret
xchg
cmp
xlat
fcoms
adc
lret
pop
push
add
mov
push
stos
popf
xlat
ss
ss
add
jl
imul
icebp
movsl
movsb
popf
sub
scas
imul
xchg
pop
sub
pop
mov
in
mov
out
mov
ja
or
loop
push
jmp
ljmp
push
sub
jp
lahf
push
ljmp
cmp
psrlw
lods
push
cmp
jle
cwtl
out
add
inc
mov
in
pop
mov
arpl
sbb
les
jo
lret
xchg
mov
mov
filds
inc
inc
les
inc
cltd
out
cli
int3
fcomps
xchg
int
xchg
call
pop
nop
push
inc
mov
shll
movsb
inc
mov
inc
sbb
dec
enter
sbb
addr16
pushw
jp
xchg
jne
mov
int3
mov
xor
out
scas
or
inc
cld
mov
icebp
lods
or
jle
mov
scas
les
push
mov
outsl
out
xor
out
sub
hlt
xchg
push
pop
adc
cltd
adc
push
daa
xlat
pop
jae
in
lea
or
sbb
int3
mov
movsb
jge
jge
inc
mov
xor
adc
ds
fnstenv
lods
jecxz
mov
dec
adc
xor
scas
mov
int
dec
pop
adc
std
dec
xchg
sub
lods
pop
xchg
fidivrs
jo
sub
jecxz
adc
jl
jnp
iret
ss
outsl
test
lea
mov
pop
sbb
std
int3
mov
gs
xchg
movsl
sub
in
lock
mov
xchg
clc
mov
dec
xor
add
and
cli
or
inc
xchg
call
cwtl
push
inc
je
push
loope
jle
pop
int3
xchg
stc
cmc
pop
or
cmpsl
loope
jo
mov
inc
inc
mov
fwait
mov
lods
push
lds
or
mov
mov
daa
leave
rcrb
or
sub
scas
jno
jmp
int3
and
jecxz
addr16
stc
and
inc
in
scas
sub
loope
xchg
cltd
mov
loope
inc
pop
mov
sub
add
scas
xchg
popw
pop
mov
sbb
popf
lds
sti
mov
dec
fidivl
mov
jns
in
xorl
inc
dec
fidivrs
jno
xchg
in
int3
xchg
xchg
or
popa
xchg
push
cld
inc
cmc
xchg
adc
push
ret
rolb
iret
mov
mov
imulb
sub
test
cs
xchg
std
pop
xchg
popf
push
out
inc
loopne
mov
fisubrs
in
stc
popf
jle
ficoml
mov
stos
pusha
pop
sub
mov
add
sbb
push
mov
imul
pop
jae
mov
pop
popf
inc
sub
test
jp
test
test
push
scas
mov
jmp
cmp
sbb
push
out
xchg
fldt
push
dec
adcb
adc
test
jl
pusha
jle
mov
push
push
pop
dec
dec
test
mov
xor
pop
imul
test
jns
test
mov
out
push
fwait
xor
imul
pop
sbb
dec
or
mov
pop
pop
mov
fistpl
xor
int
mov
pmuludq
push
iret
sbbb
mov
push
xchg
shll
insb
add
fdivp
jl
push
push
ja
inc
ucomiss
adc
pop
xor
lret
mov
iret
clc
and
add
movsb
enter
repnz
shrb
into
and
fs
lcall
sub
aaa
sub
shlb
into
and
and
xchg
in
mov
pop
dec
flds
adc
jge
outsl
ljmp
sub
fdivp
imul
mov
in
jno
xchg
add
ss
inc
call
xchg
gs
testb
lods
mov
clc
pop
pop
in
mov
xchg
popa
sub
or
shlb
insl
mov
scas
in
cmc
mov
mov
pop
out
pop
outsl
scas
dec
sbb
add
repnz
push
or
mov
push
movsl
rol
jp
andb
push
fisttps
push
jne
loope
cld
shr
icebp
xchg
mov
out
ljmp
mov
push
mov
cmc
mov
pop
add
cli
mov
sbb
pushf
xor
dec
cmp
lock
xor
aas
jecxz
into
push
clc
mov
jp
jmp
jg
inc
imul
inc
cs
dec
cmp
dec
mov
pop
insl
inc
jl
xchg
sub
push
les
and
pop
dec
shr
cmc
ret
mov
jne
cwtl
dec
cmpsl
sub
in
dec
sub
stos
fwait
pop
jg
xor
shl
scas
mov
loop
cld
cmp
ja
iret
out
xor
lret
lea
jl
sub
aad
jne
int3
pop
push
out
jmp
or
cltd
xor
int
loop
pop
pop
adc
jl
pop
push
pop
data16
and
cmpsl
or
or
xchg
jno
movsl
pusha
mov
mov
shr
or
jb
fcoms
pusha
popf
xchg
xor
mov
sarb
jmp
lods
xor
mov
xchg
pop
nop
xchg
or
movsb
test
mov
push
push
sub
cmp
jnp
add
jp
mov
cwtl
data16
std
mov
loop
push
pop
cmp
loop
rep
decb
cmp
ds
pop
push
xchg
pop
sbb
ret
out
imul
dec
out
mov
ret
push
fistpl
out
cmc
add
adc
call
sbb
test
js
inc
imul
addr16
adc
filds
jnp
icebp
cmp
addb
xchg
xchg
lds
xor
dec
leave
xor
push
jo
lds
lds
inc
dec
xchg
mov
jg
js
insl
add
adc
in
pushf
test
mov
dec
test
in
pop
icebp
into
test
rolb
mov
adc
or
add
xchg
cmp
pop
lcall
and
call
fldenv
insl
bound
ss
mov
xchg
mov
lcall
in
dec
pop
aaa
jl
fldl
addl
sub
dec
sbb
mov
and
or
js
aad
hlt
mov
fbld
shr
test
pop
pop
fdivl
jle
or
insl
mov
test
repz
scas
fwait
pop
sbb
in
xor
jmp
jne
xchg
xor
sahf
cmpsl
dec
push
or
lods
cmpsl
fisttpll
inc
push
cmpsb
repz
je
pusha
mov
mov
xor
dec
push
stos
lcall
mov
rorl
in
jp
sub
mov
lea
and
or
rcll
daa
imul
inc
push
adc
mov
push
stos
ret
xchg
jnp
xchg
mov
inc
jno
ret
cld
sti
push
movsb
bound
and
mov
pop
lret
pop
add
or
and
jle
mov
sbb
leave
inc
inc
aas
jl
mov
inc
mov
fiaddl
push
xor
or
push
add
cwtl
or
lods
call
call
ljmp
dec
lea
xlat
sub
sub
test
push
les
cmp
xor
sub
or
adc
pusha
jo
inc
scas
push
mov
subb
loopne
lock
shrb
aas
and
xor
add
adc
pusha
jo
inc
scas
push
mov
subb
loopne
lock
shrb
aas
and
xor
add
adc
pusha
jo
inc
scas
push
mov
subb
loopne
icebp
pop
shrb
aas
and
xor
add
adc
bound
sarb
dec
dec
cmc
sub
or
shrb
rclb
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
and
push
inc
outsb
jne
lret
adcl
repz
cmc
adc
and
jae
arpl
mov
mov
aad
in
cmc
adc
and
jae
arpl
test
aam
xchg
mov
mov
mov
xor
xor
cwtl
out
call
loopne
insb
movsb
int
orb
outsb
movsb
stos
call
popf
int3
jns
mov
inc
inc
rorb
icebp
push
push
mov
roll
mov
in
add
push
push
dec
xchg
aad
xchg
cmp
sub
cld
es
rorb
jo
jecxz
adc
xor
or
mov
mov
push
push
and
vmovntps
out
push
inc
mov
fidivrs
psubsb
jp
fnstcw
pop
sub
or
jecxz
das
cmp
or
enter
jae
aam
mov
pop
leave
mov
xor
loope
rolb
and
jae
arpl
test
mov
repz
pushf
jbe
pusha
push
jne
gs
sbb
out
jecxz
out
rol
rcll
mov
pushf
xchg
mov
push
inc
bound
ss
adc
into
in
into
mulb
aam
mov
lcall
inc
push
push
imul
arpl
test
mov
repz
cmc
adc
and
jae
arpl
test
mov
repz
cmc
adc
pop
testl
insb
push
push
mov
into
sar
sbb
push
iret
pop
push
test
outsl
xor
rcrb
mov
xchg
mov
in
xchg
icebp
and
jp
push
cs
add
setbe
lcall
sub
xchg
out
pop
stc
jl
xchg
fs
aas
cmc
pop
mov
push
xchg
rorb
xorb
pop
out
sub
filds
jbe
cltd
pop
cs
sub
inc
and
mov
jp
ret
fidivrl
or
xchg
roll
push
mov
push
mov
jb
fldcw
lcall
leave
and
mov
les
lea
es
pop
mov
test
negb
std
adc
jge
dec
dec
push
pop
adcb
and
clc
sub
xchg
cwtl
mov
adc
fs
cmp
loop
shll
fisubrs
jge
pop
out
dec
cmp
sub
mov
or
shlb
and
cli
fimull
iret
test
push
scas
sti
or
pop
or
insb
mov
and
and
sub
sub
lcall
mov
pop
adc
pusha
jae
iret
fs
sbb
mov
mov
mov
push
dec
add
xchg
adc
lret
mov
push
add
sbb
and
orb
popf
nop
cmp
add
testl
mov
aas
mov
mov
std
cmp
xor
test
add
mov
xchg
sub
lods
aam
aaa
ljmp
ss
ljmp
test
push
push
cmovs
xchg
pop
mov
cmp
push
mov
adc
sub
dec
in
leave
repnz
mov
or
jg
popf
dec
shr
pop
aad
and
negl
ret
xchg
push
bnd
out
int
jp
dec
lcall
cli
xchg
inc
popa
mov
ds
jno
mov
sbb
or
sub
adc
in
icebp
pop
sti
cltd
mov
cltd
rol
clc
lock
fucomi
inc
hlt
pusha
sbb
outsl
push
std
loop
inc
and
mov
mov
pop
adc
cwtl
lock
jo
and
loope
jle
push
mov
fs
xchg
xor
push
loop
hlt
push
hlt
in
popa
add
fwait
xor
adc
mov
cmc
sbb
dec
jne
inc
cmp
rclb
cmp
or
xchg
and
cmp
adc
loop
push
pop
add
push
inc
mov
loope
xchg
add
mov
xchg
or
or
popa
jno
icebp
int
sub
es
stc
ss
push
fsubl
add
dec
mov
shrb
leave
adc
mov
adc
xor
or
enter
test
sti
sub
jecxz
pop
pop
cld
cmpsl
push
aaa
mov
fildl
and
mov
cmpsl
ds
mov
and
sub
cld
ret
push
fsub
push
lea
push
add
and
rolb
add
fisubl
inc
fwait
fimull
add
push
inc
mov
and
add
xor
daa
rdtsc
scas
inc
mov
dec
xchg
push
mov
xor
inc
imul
jo
mov
insl
je
inc
or
sbb
cmp
cmp
daa
add
xor
ljmp
jle
fidivrl
xchg
sub
loope
xchg
mov
dec
or
xchg
js
sbb
imul
pop
jcxz
stos
sbb
ret
or
mov
in
xor
cmp
dec
jns
add
adc
mov
sub
fsubr
int
insb
inc
loopne
outsl
mov
adc
jge
dec
sbb
mov
or
or
inc
cmpsl
pop
rorl
je
or
xchg
mov
sahf
xchg
cltd
arpl
cwtl
pop
push
pusha
add
pop
mov
lods
fldenv
inc
fcompp
mov
imul
or
ljmp
pushf
dec
sahf
leave
fldt
jp
jo
mov
push
mov
fsubs
xchg
xlat
pcmpgtd
xor
gs
lods
inc
das
mov
push
in
push
addl
or
data16
lds
call
push
inc
jecxz
lds
and
cmp
inc
or
cmp
pop
cs
cs
pop
xchg
cmpsl
mov
imul
jo
mov
ja
sub
push
test
push
scas
stc
mov
adc
popa
fdivp
pop
mov
add
push
mov
mov
adc
mov
rclb
sub
jno
in
and
jge
imul
adc
les
int3
movsl
xor
mov
lea
xor
jb
daa
popa
sbb
jg
lcall
inc
je
xor
xchg
in
mov
inc
in
cwtl
mov
repnz
jle
mov
data16
sti
jmp
daa
sub
cmp
cmp
jp
fsubrl
es
addr16
dec
ds
in
mov
or
or
scas
fbld
mov
or
lods
or
cltd
in
in
jecxz
icebp
pusha
pop
ret
cmp
cmp
dec
jg
inc
pop
insb
or
scas
jae
cmp
add
popf
cmp
fs
aam
pusha
sahf
loope
pop
dec
aam
pop
mov
sub
insb
or
fadds
in
push
dec
mov
mov
jg
mov
xlat
or
stos
pop
int3
mov
xchg
sbb
test
jns
or
inc
xchg
dec
inc
bound
inc
sub
cmpsl
dec
imul
add
sbbb
daa
fistps
test
lods
shlb
cmpb
inc
sub
fwait
aad
loope
or
rolb
fistpll
lret
out
dec
mov
sti
add
out
idivl
loope
loop
jns
popa
mov
and
lock
into
rolb
adc
fistl
and
dec
mov
cmpb
loope
mov
call
cmp
out
dec
sub
cmp
xchg
adc
dec
loopne
mov
int3
and
aaa
jecxz
add
mov
into
mov
jne
daa
pop
faddp
jb
mov
ja
xor
les
adc
call
popf
mov
jecxz
int
mov
push
or
xchg
cmp
bound
inc
sub
mov
test
xorl
xchg
push
lods
push
lods
shll
adc
cli
pop
jecxz
negb
loopne
mov
jecxz
jecxz
fidivrl
jb
inc
ljmp
dec
call
add
leave
jge
xchg
push
sbb
jb
andl
repz
je
loopne
pcmpeqb
pcmpgtw
enter
daa
addr16
repz
mov
inc
push
lret
push
jmp
inc
sbb
fsubs
dec
sbb
rclb
mov
mov
adc
cld
adc
mov
cmp
inc
nop
sarl
sbb
jle
loopne
shlb
or
cld
add
inc
stos
and
lret
pop
sti
je
dec
test
es
xor
xlat
or
add
or
inc
test
aam
jo
mov
pop
rcll
pop
push
daa
stos
jnp
xor
pop
jmp
or
das
sahf
mov
or
fdivrs
xor
mov
orl
sub
aas
jle
pushf
andl
outsl
cld
fdivrs
hlt
sti
scas
insl
dec
jp
inc
xchg
pop
ljmp
mov
push
sub
fistpll
sbb
outsl
outsl
shrb
popf
inc
push
inc
int3
inc
fimuls
stos
add
adc
xchg
lods
repz
pusha
adc
and
cmp
and
cmp
aam
into
enter
sahf
pop
xor
shrl
ja
int
fldenv
dec
in
fstpt
ret
lret
negb
js
adc
mov
add
mov
or
fisubs
das
pop
or
in
cmpsb
popa
and
in
or
int3
insl
aas
fs
cs
mov
xorb
inc
ljmp
cs
sub
mov
sbb
inc
adc
mov
adc
push
sub
lds
inc
sub
inc
fsubrl
rcll
adc
imull
outsb
xchg
repz
stc
xor
sbbb
sbb
mov
int3
mov
dec
std
xchg
clc
nop
fisubl
jne
insl
lds
add
sbb
or
adcl
mov
ret
aaa
lea
lahf
clc
ficomps
filds
pop
cmpl
cmc
lea
cmp
cmc
inc
xchg
dec
clc
push
movsl
push
inc
pop
sahf
xchg
jle
jbe
cmp
ljmp
mov
pushf
sbb
push
loop
and
pop
xor
out
les
push
mov
push
int
lock
insl
mov
push
jle
mov
shr
stos
xchg
push
jae
jbe
ja
int3
jbe
mov
fs
cld
jp
mov
mov
call
das
jmp
and
sbb
push
mov
cmp
stos
mov
imull
popl
pushf
or
dec
push
xlat
cltd
pop
cmp
fwait
pop
push
idivl
jmp
lock
sub
jge
xchg
cltd
daa
fildll
dec
insl
xorb
jae
push
xlat
loopne
inc
mov
notb
sbb
mov
adcl
pop
inc
dec
cmp
rcrb
push
sub
loop
das
sub
jns
lret
mov
add
mov
dec
xchg
es
pop
pop
adc
lock
jb
js
mov
or
pop
fnstenv
cmp
dec
jne
hlt
push
mov
add
xchg
add
fs
test
xor
pop
or
int3
ss
jbe
ret
gs
sbb
push
push
lds
enter
dec
into
mov
loope
mov
push
push
fcomip
push
push
nop
push
cs
pop
cld
mov
sbb
pop
mov
push
inc
push
adc
sub
in
int3
sbb
in
std
loop
sub
pushfw
mov
fdivs
in
push
xor
push
cs
ljmp
ret
xchg
cmpsb
fiaddl
xor
fnsave
aad
call
aam
jnp
xchg
sbb
iret
aam
dec
pop
rcrl
cmpsb
mov
mov
push
cmp
in
xchg
pop
xor
xor
inc
imul
adc
scas
xchg
sub
gs
xchg
out
in
inc
roll
aas
fldcw
iret
aaa
mov
push
mov
out
cwtl
xchg
xlat
dec
dec
or
dec
xor
jo
sbb
call
subl
lret
js
jne
daa
fs
add
mov
xor
mov
xor
mov
pop
pusha
or
jmp
aas
xor
scas
jle
jb
gs
sbb
fsubrl
das
pop
mov
push
pusha
sbbl
pop
adc
xchg
jp
or
mov
imul
mov
inc
outsb
fs
int3
dec
dec
sub
mov
mov
push
lahf
dec
ja
jp
pop
adc
cmpsl
imul
mov
sbb
ljmp
push
cmp
mov
outsb
icebp
inc
aad
inc
lret
sub
push
mov
in
orl
in
cmp
lret
lds
mov
lret
popf
push
cmc
push
stos
dec
ds
loopne
mov
test
xor
sub
push
mov
or
and
stc
push
movsl
mov
stc
xchg
and
es
fimull
ja
jo
pop
out
arpl
ja
je
out
lahf
test
push
push
add
jge
lock
add
imul
scas
xor
stos
pop
mov
outsl
or
and
aad
xchg
ss
int
push
sbb
movsb
movsl
in
push
cmp
shlb
repz
xor
pop
in
sub
jge
subb
or
mov
jecxz
xchg
mov
mov
or
jo
push
sub
stos
inc
jecxz
sbb
push
mov
and
fldcw
lahf
pop
mov
aad
push
mov
shl
decl
adc
imul
iret
mov
fstpt
insb
inc
dec
pop
dec
add
sahf
and
lret
mov
addr16
cmpsb
mov
dec
sub
jns
cmp
das
inc
movsl
nop
icebp
je
hlt
mov
and
in
sub
and
jg
aam
pop
or
repz
mov
nop
addr16
movsb
sbb
dec
and
daa
or
pushl
cli
scas
sub
test
add
fstps
int
mov
inc
jbe
pop
addl
pop
in
pusha
add
mov
inc
push
mov
int
popf
dec
mov
shlb
sub
pusha
pop
fldl
rolb
arpl
shrl
imul
cmp
lods
imul
popl
imul
sbb
xchg
std
ds
sub
add
aaa
xchg
mov
rorl
fistl
mov
dec
xor
sbb
fiadds
sbb
and
js
push
icebp
pop
jecxz
mov
sbb
jbe
imul
sub
xchg
lock
push
lds
mov
movb
test
in
das
repz
cmp
setp
or
xchg
dec
clc
loopne
sbb
push
mov
mov
in
cmpsl
aaa
fbstp
jbe
fbstp
add
aas
loopne
insl
aad
ret
and
inc
lret
pop
or
sub
sti
mov
out
adc
mov
rcll
aaa
repnz
cltd
push
jle
mov
sbb
movsb
sbb
mov
push
ret
xchg
mov
pop
orl
xchg
in
mov
into
xor
out
mov
and
and
jns
notb
lods
push
xchg
or
pop
xor
in
push
jno
out
adc
imul
cbtw
in
out
pop
ds
stc
mov
aas
into
inc
add
cltd
sbb
push
fstps
cmpsl
jmp
fisubrs
pop
std
outsb
cmpsl
subb
dec
mov
xchg
insl
or
fstl
int3
aas
mov
lods
loop
push
fistl
or
mov
cmp
out
enter
cmp
shll
xchg
or
push
ds
outsb
mov
inc
and
pop
sqrtps
and
cmpsl
xor
daa
mov
out
imul
jbe
dec
dec
inc
xchg
sbb
movsl
sarl
ss
mov
dec
fsts
popa
addl
loopne
adc
les
aam
sbb
inc
adc
imul
mov
std
pop
std
push
inc
arpl
mov
lods
popf
inc
sub
push
dec
mov
xor
test
push
shll
sub
imul
int
cld
mov
mov
ss
sub
push
lret
push
xchg
jb
mov
scas
mov
into
sub
ret
call
cmpsb
mov
add
rclb
sbb
icebp
shl
xor
xchg
dec
fsts
dec
push
pop
inc
arpl
pusha
decl
jbe
push
addr16
dec
ret
inc
popf
jne
popf
mov
in
add
sbb
mov
xchg
dec
and
jno
sub
popf
scas
dec
nop
pop
std
sub
inc
jae
pop
insl
scas
ds
bound
test
adcl
jl
mov
mov
add
pop
jle
leave
dec
adc
cmp
cmp
dec
ja
and
fs
xor
jg
or
push
xor
adc
add
sbb
mov
repz
cmpsl
nop
inc
icebp
jo
ret
dec
push
mov
adc
dec
pop
pop
or
or
mov
xchg
daa
xor
jbe
into
cwtl
and
js
pop
daa
and
or
mov
ret
inc
push
sub
push
jns
jge
mov
jnp
adcb
inc
mov
push
inc
test
push
shlb
xchg
nop
mov
cltd
sbb
push
xor
cld
lret
popa
fstl
jg
rclb
inc
cmpb
arpl
add
xchg
repz
mov
pop
shrb
or
and
imul
out
dec
mov
shlb
push
inc
mov
or
in
pop
clc
jns
xchg
sbb
pop
decb
xchg
mov
inc
dec
negb
dec
pop
adc
mov
icebp
jg
mov
push
shr
dec
cmpsl
pop
add
push
sub
enter
sub
sti
cmp
mov
cltd
xchg
cmp
fnstenv
out
outsb
iret
mov
dec
mov
mov
dec
sbb
and
lret
jl
and
out
cmc
movsb
mov
test
jo
push
push
mov
pop
cmp
daa
push
and
sbb
mov
lods
jg
inc
lock
inc
mov
rcrb
pop
inc
cmp
jb
shrl
jle
ds
adc
shrl
add
rcll
jg
outsl
dec
daa
aas
jmp
and
je
stos
jge
sub
aaa
jle
lret
fmull
outsl
pusha
push
test
add
pop
arpl
push
push
lds
insl
test
mov
add
inc
loop
call
roll
pop
data16
sbb
cs
or
sub
aam
inc
imul
int3
xor
sbb
dec
dec
dec
pop
mov
mov
ret
fisttpll
fs
xchg
popa
and
cmpsl
lea
cltd
arpl
xchg
dec
daa
test
mov
pop
fsubrs
fisubrs
add
lret
push
pop
xchg
xlat
mov
pushf
or
fistpl
ret
in
adc
or
sub
fdivrs
stos
out
cmpsl
inc
stc
lahf
jbe
push
sub
dec
cwtl
push
push
ret
push
repz
sub
or
inc
adc
popa
out
or
cld
sbb
cmp
push
inc
in
pop
call
out
add
sbb
pop
cwtl
mov
iret
pop
pop
js
pop
pop
popa
cmpsb
out
ret
in
lods
cli
fidivrl
out
daa
fsubrl
imul
pop
adcb
loope
push
inc
addb
inc
mov
gs
sub
jae
inc
andb
push
or
fnop
sbb
xlat
fcompl
ffreep
mov
dec
jae
adc
inc
lahf
mov
ret
push
push
in
int
adc
loopne
jecxz
mov
int3
pop
cli
xlat
fiadds
xchg
lea
mov
push
xor
jno
movsl
test
mov
test
fcomps
cli
xor
ss
dec
sbb
and
pop
repnz
sub
mov
push
xchg
icebp
leave
push
nop
ds
mov
jmp
xchg
test
aaa
fistl
or
adc
movsb
out
cmpsb
sub
sbb
test
movsl
inc
xchg
sbb
sti
scas
out
xor
jecxz
sbb
sub
inc
cltd
inc
shlb
push
push
jge
add
int3
xor
adc
pop
inc
negb
lods
sahf
mov
ret
insl
jbe
lret
or
jg
xor
lds
jmp
je
cmp
adc
pop
stos
jmp
ja
aaa
mov
fmuls
add
inc
dec
or
and
dec
ds
xor
outsb
scas
loop
or
pop
jb
xlat
stos
out
mov
addr16
jno
mov
push
adc
mov
push
aam
and
mov
sbb
nop
mov
xor
xchg
aas
andb
xchg
insl
test
or
cmp
inc
outsl
adc
lret
sar
in
push
jo
add
sahf
jmp
dec
sub
jae
insl
jl
hlt
popf
inc
ljmp
int3
shr
int
scas
loope
cmp
call
shll
repnz
xchg
jle
adc
sbb
push
lcall
mov
jge
xor
pop
or
jl
out
pop
mov
lods
jmp
gs
lock
fdivr
mov
add
cvttps2pi
cli
std
ds
jnp,pn
idivb
inc
movl
add
aam
lods
enter
jae
dec
aad
dec
xchg
cmp
rorl
dec
shll
mov
add
filds
xor
jae
flds
stos
inc
ret
cmp
pop
ficompl
ficompl
fistl
push
mov
pop
popf
into
sti
addr16
dec
maskmovq
testl
mov
push
ljmp
dec
and
movsl
ds
push
jnp
mov
mov
xor
insb
sbb
in
xchg
insl
test
xlat
out
mov
push
xchg
out
xchg
movsb
pop
jp
bound
pop
shll
add
daa
mov
je
cwtl
sbbl
loop
ret
leave
pop
jne
fldl
leave
bound
lahf
mov
cmpsl
xlat
repnz
push
push
ret
xor
popf
xchg
push
xchg
in
sti
dec
sbb
stos
leave
and
lods
ja
out
and
dec
adc
test
stc
pop
test
push
popf
arpl
cmp
call
sahf
cmp
dec
dec
xchg
xchg
sbb
je
enter
loopne
test
lea
and
mov
mov
inc
mov
sbb
sbb
rclb
test
jle
adcb
bound
bnd
pop
dec
sub
sub
adc
push
inc
inc
push
jae
arpl
test
mov
repz
cmc
adc
and
jae
arpl
test
mov
repz
cmc
adc
and
jae
arpl
test
mov
repnz
cmc
adc
and
repz
insb
test
movsl
mov
sub
sbb
or
lods
mov
orb
mov
sub
cmp
or
sbb
insb
jae
push
dec
push
pop
mov
mov
cld
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
pop
mov
mov
cld
ret
fsubl
adc
pusha
arpl
add
sbb
bound
cmp
enter
jo
sub
cmp
mov
or
dec
outsb
imul
adc
movsb
aas
cld
negl
std
add
cmpsl
aam
xchg
int
pop
or
sbb
dec
dec
stos
mov
lea
lock
js
dec
lret
cmpsl
pop
and
insb
mov
shll
mov
loop
fsubrp
and
hlt
sub
repnz
jecxz
aas
and
mov
jge
xor
rcrl
popa
or
cli
add
xor
mov
inc
cmp
xor
or
sub
jmp
cmp
adc
fst
in
ja
lahf
sbb
xchg
jb
inc
pop
push
pop
std
lods
mov
orb
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
sbb
shl
out
lret
mov
test
adcb
jbe
push
add
add
std
in
icebp
div
mov
lret
xchg
stos
fdivl
pop
push
jp
ja
sub
add
adc
dec
xor
cld
pushf
enter
call
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
pop
mov
mov
cld
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
pop
mov
jle
dec
xchg
sub
ljmp
imul
push
dec
pop
arpl
cs
mov
iret
mov
decl
and
inc
arpl
imul
mov
jp
dec
dec
mov
adc
jp
push
loop
jl
enter
mov
imul
je
jl
aaa
xchg
lahf
push
inc
outsl
test
xchg
cmpsl
cmpl
dec
add
lcall
mov
xchg
adc
adc
mov
xor
stos
xchg
adc
mov
mov
mov
cs
or
mov
dec
lcall
in
mov
scas
inc
icebp
push
aad
add
push
sbb
push
pop
jnp
into
add
pusha
or
lahf
jno
ja
add
xchg
mov
out
xor
gs
push
cwtl
sbb
stc
pushf
mov
fistpll
popa
and
jo
mov
mov
xchg
loop
mov
shlb
adc
push
imul
addr16
xchg
punpckhwd
scas
dec
push
mov
pop
les
xorl
pop
cmpsb
scas
movsl
push
inc
pop
fistl
cltd
mov
enter
inc
aam
sub
ret
stos
fsubl
mov
bound
jl
loope
lea
or
mov
cmp
test
mov
rol
cmpsl
add
pop
lods
sti
clc
jo
mov
push
pop
rdpmc
test
arpl
sub
adc
mov
fwait
inc
xchg
iret
lret
aam
dec
mov
jl
xorb
xor
arpl
sub
mov
adc
mov
dec
push
lods
push
dec
jmp
cwtl
and
pop
jmp
hlt
pop
das
pop
jo
xorl
stc
aas
js
jge
and
mov
repnz
push
jbe
fists
pop
mov
mov
push
sub
hlt
and
jmp
int
pop
lds
ror
fistps
mov
cmp
movb
sub
int3
decb
popf
mov
popf
jecxz
push
or
or
aam
dec
stos
vpminub
dec
or
sti
push
cmp
push
les
xchg
dec
cmp
jmp
sub
popa
test
lods
cmpsb
out
add
or
movsl
sbb
rolb
push
popa
clc
jg
rcll
mov
popa
inc
push
test
mov
xchg
and
addr16
cmp
mov
out
push
outsb
fmul
ljmp
outsb
adc
les
dec
or
loop
adc
pop
mov
sbb
jb
add
mov
fisubl
sub
fmul
les
in
or
cld
ljmp
add
add
out
rcll
pushf
imul
push
mov
mov
push
dec
inc
mov
div
test
lock
jno
and
push
sbb
aas
movsl
xor
ljmp
dec
add
mov
cmc
pop
data16
fimull
add
mov
and
pop
outsb
lds
bound
outsl
cmp
loop
add
shrb
mov
test
les
loopne
lods
push
inc
shll
fnstenv
cmpsb
xchg
loop
stos
lahf
mov
sbb
repz
cmp
dec
outsb
sub
cmp
mov
mov
in
icebp
enter
sbb
ljmp
mov
add
daa
in
jecxz
jne
pop
out
push
cmc
push
cld
ss
leave
gs
and
xchg
test
fidivl
subb
dec
sub
cwtl
adc
subl
mov
adc
mov
es
pop
push
inc
ljmp
fwait
mov
test
fs
and
stos
jae
enter
or
mov
ja
shrl
and
addr16
jecxz
mov
cs
stos
xchg
push
loop
rorb
mov
xor
andl
lahf
iret
push
data16
insl
add
fnstsw
addr16
clc
cmpb
bound
shrb
dec
sub
sbb
mov
sub
xor
pop
mov
shrl
es
js
in
xor
test
mov
pop
ret
lea
push
rol
add
leave
push
lahf
lcall
push
adc
cmpsb
xor
mov
xor
call
pop
je
push
xor
dec
in
out
jp
lds
sti
push
call
add
mov
xor
lods
xchg
xor
pushf
stos
mov
lods
std
jmp
lods
adc
sarl
and
push
xor
loopne
bound
sbb
and
decl
psrlw
inc
shll
ds
add
sbb
subl
jge
js
leave
sub
lcall
or
cmp
xchg
cmp
pop
je,pt
fidivrs
out
mov
mov
inc
mov
jns
and
mov
cld
sarl
test
jnp
imul
mov
in
scas
inc
cmp
loopne
hlt
cmp
pop
call
ret
jl
or
fadds
nop
fwait
lcall
xor
aaa
fs
out
mov
rcrb
lcall
in
push
xor
stos
les
je
adc
adc
in
loope
hlt
es
hlt
loopne
bound
addr16
lods
mov
call
lret
jmp
inc
push
divb
dec
pop
push
lret
mov
mov
addr16
mov
flds
jl
decl
repnz
adc
into
insl
es
or
dec
jb
inc
hlt
xchg
mov
sub
add
or
sbb
add
pop
lahf
cmc
fistpll
add
lret
jmp
in
push
mov
fstp
aas
pushf
jno
fcomp
add
dec
or
les
xchg
notb
push
fmuls
fmulp
jno
cmp
push
repz
mov
mov
mov
cmp
aam
push
popf
or
in
inc
ret
mov
xchg
lods
cmp
sarl
in
ss
and
xor
adc
out
mov
jo
sarl
sub
mov
sbb
xor
dec
mov
mov
data16
push
cmp
out
mov
inc
lret
repz
xchg
scas
cmc
adc
pop
shrl
sub
mov
mov
cwtl
test
pop
imul
cmp
mov
xchg
sub
ljmp
sub
mov
sbb
cmp
movsb
xor
das
xor
call
arpl
movnti
mov
adc
adc
clc
stc
in
loopne
xor
ljmp
fdivr
inc
add
cmpsl
loope
pop
dec
lahf
fists
loope
sub
or
mov
ljmp
or
loope
or
fnstsw
mov
subb
pop
adc
bound
scas
jecxz
and
repz
mov
sbb
aam
add
in
mov
sbb
mov
fldenv
pushf
sbb
add
jmp
cmpsb
fstps
mov
lret
test
enter
and
push
stc
iret
imul
mov
inc
inc
pop
add
jbe
jo
std
out
out
arpl
dec
adc
pop
shlb
add
repnz
insl
cwtl
orl
aam
dec
adc
add
sahf
push
sbb
in
sub
pop
sarb
cmp
pop
push
aaa
pop
cmp
shl
inc
sub
fwait
mov
scas
or
mov
adc
adc
cmp
fidivrl
in
push
or
sub
sbb
push
lahf
mov
inc
and
notb
fmull
xor
es
inc
cmp
fisubrs
jecxz
movsl
lock
xlat
sbb
or
dec
ja
or
icebp
push
je
sub
inc
ficoml
fnstenv
inc
out
out
sub
xor
pop
jmp
and
clc
in
gs
xor
aaa
pop
iret
mov
pop
inc
arpl
xor
xchg
mov
sub
stc
jmp
mov
fwait
ret
imul
dec
jle
jp
mov
out
push
int
fnstenv
cmp
mov
cmp
pop
lret
dec
or
mov
or
and
mov
aas
ffreep
inc
jno
cs
stc
xlat
mov
popl
mov
outsb
aam
jbe
cmp
lcall
dec
push
mov
pcmpgtw
movsl
ret
add
fmuls
daa
pop
ljmp
pop
test
pop
inc
xchg
xlat
ror
adc
push
or
scas
icebp
xchg
jle
mov
sarb
inc
adc
mov
test
mov
sub
call
outsl
mov
sbb
out
and
sbb
mov
fstl
jmp
inc
xchg
cmc
mov
mov
hlt
adc
in
addr16
push
push
jmp
push
pop
imul
mov
and
or
rcrb
scas
psubsb
add
xchg
ss
xchg
repnz
xor
mov
ljmp
in
out
xlat
xlat
inc
jae
adc
pop
or
sbb
push
lret
leave
mov
push
js
xorb
xchg
in
cmp
pop
and
jl
jmp
add
dec
jbe
mov
xchg
mov
lcall
sub
lret
dec
push
movsb
imul
jbe
pusha
test
mov
scas
cltd
cmp
lods
ljmp
fpatan
les
pop
sahf
loop
test
incb
aad
mov
sbb
xor
sbb
cmpsb
inc
adc
sbb
sub
shl
cmp
push
xlat
cli
add
mov
push
mov
dec
es
hlt
loopne
insl
sub
sub
or
je,pn
xchg
sub
mov
enter
imul
or
frstor
sub
xchg
dec
push
in
mov
adc
arpl
dec
pop
dec
mov
dec
cld
cmp
jmp
mov
cwtl
or
and
lahf
ret
in
or
adc
ret
cmp
jno
lea
mulb
rclb
stos
sahf
cmp
imul
push
push
and
rorl
xchg
mov
int3
mov
inc
xchg
mov
out
fs
jae
imul
nop
int3
data16
jge
pop
sahf
movsl
sbb
sub
pop
je
insl
mov
repz
jne
int
xor
inc
cvttps2pi
xlat
lock
popf
xor
scas
popf
mov
mov
dec
popf
je
fisttps
adc
jns
sub
jb
jno
ret
sbb
cmp
mov
push
ss
sbb
and
push
add
int3
ljmp
lock
fldl
or
xor
jge
dec
sub
ret
pop
adc
test
mov
out
nop
push
popf
add
shrl
cmpsl
and
inc
es
lods
lock
flds
cld
dec
push
iret
faddl
maxps
mov
inc
xchg
jns
inc
loope
mov
pop
mov
and
jb
dec
jns
cltd
cwtl
jle
mov
fists
mov
push
cmp
jae
push
sbb
gs
push
dec
popa
outsb
pop
cmovo
xchg
stc
push
lcall
lahf
jnp
das
cltd
pusha
cmp
ljmp
pop
adc
stos
sub
inc
loop
jecxz
call
cmp
mov
inc
std
push
jnp
pop
sub
jmp
das
inc
jb
lcall
push
lods
cwtl
push
pop
pusha
or
fsubrp
dec
daa
or
ret
and
ror
nop
push
xchg
loopne
les
movsb
cmp
jae
pop
into
mov
cmp
arpl
cmp
push
outsb
and
mov
mul
inc
mov
xor
lock
push
sub
pop
imul
and
int3
test
mov
xchg
enter
inc
lds
jecxz
incl
xchg
scas
sbb
decl
push
pop
xchg
jne
dec
inc
call
add
inc
dec
rorb
xchg
ret
xchg
jnp
inc
pop
fwait
shll
rorb
iret
inc
fbld
adc
mov
xchg
loop
xchg
out
lods
loope
inc
mov
lds
mov
loopne
dec
xor
jae
xor
leave
stos
es
push
fsubrs
sbb
cltd
mov
xchg
dec
imul
add
gs
jp
push
dec
lock
popa
adc
and
stc
sub
insl
xchg
jae
inc
jmp
arpl
in
cmpsl
dec
mov
cld
dec
pusha
ljmp
lret
xlat
daa
shll
ss
loop
dec
call
jp
mov
cs
js
imul
jl
xorl
repz
mov
into
add
in
or
ficoml
mov
call
test
xchg
fcomp
pop
adc
in
xchg
repnz
sarb
pushw
push
es
inc
add
cmc
jns,pn
or
xchg
push
dec
inc
out
mov
push
repz
sub
icebp
mov
in
mov
push
add
mov
add
push
das
fcmovbe
xchg
fmull
cltd
fistpl
sub
test
ret
and
fimuls
orb
loopne
popf
into
jecxz
sti
lcall
cltd
sub
inc
add
sub
shlb
cltd
fsubrp
int3
cwtl
mov
and
fnstenv
shrl
push
out
test
loope
sub
cmp
pop
jge
test
xor
sub
sub
adc
mov
int
stc
repnz
imul
dec
xchg
cmp
loope
fcompp
scas
call
push
insb
lods
aas
sbb
or
mov
sub
mov
cmp
mov
fnstenv
xchg
or
rol
lret
outsb
cmp
push
fmull
aam
in
fidivrs
xor
lods
sub
mov
push
and
test
mov
fbld
test
pop
shl
dec
mov
mov
xor
jg
mov
pusha
push
inc
imulb
dec
fwait
push
or
arpl
enter
xlat
outsl
outsb
cmp
inc
je
xchg
loope
mov
push
orb
fucomp
mov
push
jg
pop
mov
adcb
xor
test
stos
stos
ret
pop
pop
clc
pop
push
filds
and
scas
push
pop
push
mov
out
hlt
mov
xor
cltd
jb
mov
xor
fcmovbe
mov
pop
mov
fmull
inc
mov
ret
fbld
sbb
scas
mov
mulb
pop
and
push
fimuls
or
mov
and
pop
inc
jmp
add
xor
rol
lret
sbb
cltd
cmp
lahf
mov
dec
test
popf
cli
mov
daa
in
jnp
fcmove
rol
xor
mov
ss
mov
mov
inc
lods
adc
adc
iret
mov
sub
dec
movsl
pop
ss
inc
sub
int
jg
jl
ret
fsubrs
mov
int3
fstpl
xchg
fcompl
insl
arpl
sub
or
xchg
jae
gs
popa
fldenv
adc
mov
mov
xlat
pushf
and
fadds
enter
xchg
cmpsl
xchg
les
jge
mov
jle
imulb
loope
inc
lds
xchg
xor
das
les
xchg
or
and
jge
sbb
jl
push
insl
pusha
ss
cltd
sbb
adc
mov
addr16
add
mov
inc
fwait
xchg
xchg
mov
cmp
push
push
adc
pop
jbe
cmp
add
gs
mov
insb
adc
aad
and
pop
pop
out
xor
int
sbbl
icebp
icebp
loop
mov
jge
cltd
push
hlt
lea
cmp
lret
clc
mov
pop
xlat
or
inc
cmpsl
mov
outsb
sti
inc
sahf
idivl
push
dec
mov
addr16
loop
lods
push
adc
stos
xlat
mulb
mov
cld
jnp
push
lcall
repnz
xor
cs
xchg
mov
push
add
popf
daa
movsb
es
scas
imull
outsb
adc
and
xchg
cmp
stos
sarb
cmpsl
dec
xchg
ficoms
or
pop
dec
aam
arpl
or
jge
mov
cmp
stos
clc
fsub
pop
sbb
pop
mov
mov
cltd
fnstenv
aaa
loopne
inc
inc
mov
dec
fnstcw
mov
ss
jb
or
clc
and
sbb
shr
shlb
repz
or
imul
stos
aad
sbb
and
cld
inc
pop
outsb
lahf
sub
imul
jg
xchg
xor
sbb
movsl
xor
sbb
popa
adc
jbe
mov
outsl
clc
jmp
inc
aad
pop
push
lea
es
shrb
test
mov
lcall
popa
mov
push
push
fstpt
pop
addr16
lock
mov
imul
outsb
call
in
jo
jnp
mov
cld
cmp
pop
and
faddl
mov
xchg
xor
popf
imul
xor
andb
add
faddp
mov
loop
push
mov
test
popf
xchg
das
fcomip
and
push
ljmp
pop
daa
adc
sub
pop
mov
out
push
outsb
xchg
mov
insl
pop
mov
and
cli
xor
inc
pushf
jno
lock
mov
push
negb
xchg
dec
pextrw
push
in
aas
push
rorb
std
jge
fwait
and
cmovle
xlat
insl
and
sahf
scas
dec
ret
xchg
pop
and
mov
cld
ljmp
testl
leave
add
popf
mov
nop
sub
inc
or
add
mov
xchg
fidivrl
cltd
mov
cmp
jmp
ret
or
pop
dec
sti
gs
adc
xor
add
sub
call
mov
jmp
lock
test
sub
or
adc
xor
fisttpll
mov
cmp
sbbl
repz
add
lret
enter
ss
popa
bound
addr16
imul
add
adc
mov
inc
das
mov
push
inc
push
sbb
cld
fisubl
aas
cmp
mov
popa
lret
gs
out
pop
xchg
mov
jne
inc
adc
ret
push
or
jle
pop
mov
mov
xchg
add
out
pop
shrb
jnp
and
jnp
std
inc
scas
inc
lock
int3
dec
mov
jl
inc
jnp
adc
orb
in
add
stc
call
ja
pop
shlb
mov
push
stc
leave
pop
jbe
fwait
aas
jmp
xchg
cmp
pop
int
pop
mov
mov
fstpt
decl
xor
pop
es
inc
cmp
out
cwtl
bound
mov
fldenv
sahf
stc
pop
add
daa
push
jle
aam
pop
rcl
in
or
jne
lock
or
mov
bound
repz
mov
xchg
push
out
in
xchg
das
cmp
iret
xor
xor
dec
sbb
adc
mov
lahf
xor
xchg
jns
or
push
inc
and
shlb
ret
rol
mov
jne
mov
sbb
pop
inc
ja
add
xlat
test
sbb
dec
cmp
xor
xor
sbb
stos
cltd
inc
shr
mov
push
sub
cltd
add
adc
mov
sbb
push
clc
rcll
ljmp
ds
sub
inc
pop
mov
cmp
jmp
jae
pop
pop
or
imul
cmc
fstp
cmovp
xchg
mov
rcr
jae
lds
pop
and
inc
dec
mov
sub
dec
nop
sbb
jp
jle
or
pop
or
ss
jg
mov
insl
push
dec
cmp
rcr
add
fdivl
sbb
adc
jb
mov
fsubrp
and
fsubrs
ret
mov
pop
push
sub
adc
pop
pop
mov
push
xchg
cmp
push
and
mov
lock
test
cmp
pop
add
jg
sti
imul
adc
or
push
mov
jl
pop
xchg
xlat
mov
mov
out
pushf
bound
int
enter
add
xchg
daa
rorl
mov
push
orl
mov
sbb
roll
cmc
lods
loop
movsl
scas
cmpsl
mov
imul
pop
cwtl
push
jmp
mov
mov
test
imul
push
jae
xor
pop
insl
popa
cwtl
push
sub
adc
xor
lds
psrld
pop
jno
decb
mov
outsl
into
and
mov
imul
mov
inc
pop
in
popf
rolb
xor
and
mov
repnz
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
pop
mov
mov
cld
ret
fsubl
sub
cmp
or
sbb
insb
jb
inc
dec
push
pop
mov
mov
cld
ret
fsubl
sub
cmp
bound
jl
dec
push
pop
mov
mov
jl
dec
shlb
and
xor
adc
mov
mov
mov
into
mov
fistps
or
sbb
jl
insb
pop
pushf
scas
mov
fsubr
int3
cld
iret
in
fistps
sub
pushf
or
scas
jl
insb
pop
pushf
mov
mov
fdiv
int3
out
xlat
in
lds
das
add
pop
and
or
add
scas
call
adc
add
notl
push
jge
ret
mov
or
dec
sbb
add
repnz
loopne
push
arpl
fs
add
inc
adc
scas
mov
ret
pop
rcrl
mov
dec
loope
int3
push
test
mov
mov
mov
sbb
pop
cmp
in
lcall
insb
pop
pushf
decl
sti
iret
fnstcw
jns
in
and
out
inc
loopne
cmp
cmp
pop
xor
pop
jo
jg
iret
int3
add
test
aas
mov
pop
mov
sub
insl
mov
jg
daa
push
push
aad
push
jno
in
push
dec
cs
sub
sbb
or
rorl
mov
dec
push
scas
mov
fsubr
int3
cld
in
sbb
or
cmp
sub
pop
ja
push
clc
mov
fdivrl
out
mov
inc
imul
add
dec
sub
stc
xlat
jmp
lcall
mov
pop
jnp,pt
pop
pop
sbb
sbb
stc
out
mov
shr
shr
or
cld
iret
in
fistps
or
cmp
sub
pop
outsl
dec
jg
dec
insb
pop
pushf
scas
mov
fsubr
int3
cld
iret
in
fistps
or
cmp
sub
pop
outsl
dec
jg
dec
insb
pop
pushf
scas
test
mov
ror
lcall
cmp
adc
adc
addr16
lcall
stc
sub
or
xchg
loope
push
ja
rorb
cmp
push
bound
mov
inc
xchg
pop
fldz
shll
sub
push
cltd
scas
ror
js
jne
das
loope
aaa
out
andl
sub
loop
push
imul
or
shrb
xchg
popa
lret
pop
sbb
cli
mov
loope
xchg
subl
fneni(8087
xor
pop
pop
test
inc
fmull
lahf
mov
and
fcompl
xchg
push
add
fisubs
ljmp
mov
xor
out
data16
adc
dec
push
fdivrl
cmp
inc
fnstsw
push
jb
or
pop
jge
push
fdivs
pop
cmc
int
mov
lock
sarb
popf
pop
les
push
cmp
xchg
cmpsl
mov
sarl
push
dec
jnp
outsb
add
sti
mov
jge
pop
aaa
adc
lock
add
imul
imul
adc
jl
xor
push
xchg
mov
mov
add
and
sub
sbb
shll
or
adc
lcall
dec
sti
jle
ss
sarl
lods
mov
pushf
sarl
les
adc
dec
fdivs
rcrb
jbe
mov
sub
xchg
fldl
adc
rolb
sbb
lret
and
iret
std
pop
xchg
jno
out
xchg
and
daa
fimuls
jmp
arpl
popa
dec
fcmove
out
loop
movsb
mov
mov
sbb
sub
fistpll
icebp
or
pop
xchg
fiadds
repz
iret
sbb
out
and
subl
lds
pop
scas
fistps
decb
add
dec
loope
or
cmpsl
jb
int3
ss
orl
rcl
lock
call
ljmp
mov
ficompl
imul
xor
sub
mov
inc
mov
jg
pop
or
sbb
cli
xchg
mov
bound
js
mov
imul
push
negb
push
outsb
pop
and
enter
jmp
or
sub
dec
fcoml
fisubrl
xor
dec
mov
jne
aaa
jg
sbb
add
arpl
jge
cmp
mov
ret
sbb
pop
js
adc
test
aaa
pop
xchg
mov
fs
ss
popf
push
das
cmc
jb
sbb
and
add
sti
int
out
lods
xor
inc
movsb
outsl
push
xchg
movsb
jnp
call
enter
xchg
pop
repnz
inc
addr16
sarl
or
sub
mov
stos
sub
or
into
jle
push
and
xchg
fsubrs
pop
jl
inc
ds
jns
mov
subb
add
xlat
adc
test
movl
xor
call
pop
cwtl
sub
sub
ror
mov
out
rolb
pop
push
sub
inc
pop
ret
dec
push
inc
mov
add
ss
repnz
test
pop
jmp
sarb
popa
loope
sbb
les
jae
xor
add
inc
pop
pop
lcall
or
xchg
mov
repz
js
sub
stos
jo
loopne
push
add
mov
fists
mov
sub
jecxz
popa
and
push
loop
xchg
push
stc
push
jl
jbe
in
sub
xor
js
or
inc
xor
mov
pop
sub
mov
stc
xchg
es
mov
lods
adc
aam
xlat
out
push
imul
arpl
fisubl
sbb
outsb
push
inc
mov
outsl
out
xchg
dec
xchg
shll
sbb
mov
cmpb
imul
je
in
rolb
out
lret
les
mov
push
jo
sbb
pop
xor
jge
insb
mov
arpl
rorb
add
sti
out
xchg
push
fiaddl
push
sti
or
fimull
xchg
fcomps
fs
cmpsl
mov
jb
leave
jmp
insb
add
bound
in
add
jge
iret
cmc
mov
fistps
pop
or
xchg
repnz
push
inc
mov
in
inc
fstpt
mov
rclb
jno
or
rorb
and
jp
fwait
mov
jno
sub
insb
je
or
xor
out
insb
clc
cs
adc
sbb
mov
mov
mov
fmulp
jno
iret
gs
xchg
push
sub
sbb
xchg
mov
add
fs
pop
out
nop
outsb
cmp
out
xchg
das
sbb
dec
arpl
mov
sbb
test
cmp
add
push
in
sbb
mov
stos
sbbl
push
inc
ficoml
fsubs
mov
fisttpll
scas
jbe
xor
testb
lds
loopw
lret
popf
fmulp
add
xlat
ss
jl
test
xor
jne
push
push
nop
loop
das
add
sbb
mov
movb
fwait
aas
inc
jnp
jecxz
imull
mov
subb
mov
sti
mov
daa
fs
ljmp
out
inc
outsb
ficoms
add
in
or
fdivs
xchg
pushf
sbb
ret
dec
mov
popa
ficoms
test
dec
push
jmp
xor
mov
jge
mov
or
jnp
imul
repnz
imul
ja
jge
add
mov
sub
rolb
mov
in
stc
jns
xchg
movsl
icebp
inc
jnp
out
pop
outsl
jnp
in
stos
inc
pop
jb
adcl
pop
inc
dec
xlat
dec
jne
outsl
shll
adc
xor
insl
lea
dec
enter
aas
sbb
pushf
pop
sbb
dec
loope
jge
mov
stos
or
jl
push
outsb
enter
jge
movsl
sahf
xchg
dec
shl
or
cwtl
aad
les
pop
push
and
shlb
mov
or
jae
or
and
call
dec
pop
insb
pop
leave
fs
sarb
lret
dec
pop
shll
push
stos
and
jne
test
adc
sbb
mov
xorl
push
or
dec
outsb
xor
fsubp
jo
mov
mov
inc
cmp
pop
inc
ficoms
stos
and
int
mov
pop
and
pushf
repz
cmp
inc
and
cmp
imul
fcmovbe
dec
stos
ret
je
daa
pop
add
aas
add
xchg
push
fcompl
mov
std
stos
mov
cmc
adcl
lcall
fisubrs
sub
outsb
mov
xor
sete
push
mov
ja
fistpll
cmp
push
cld
jecxz
roll
mov
add
fsubrp
jnp
jle
pop
leave
fwait
mov
out
push
insb
xchg
dec
jecxz
iret
xor
mov
sub
jecxz
or
mov
push
movsb
cwtl
jae
push
popa
icebp
add
sub
stc
inc
icebp
sub
addr16
test
test
test
and
daa
xchg
adc
cmp
inc
mov
enter
mov
outsb
in
aaa
mov
insb
aaa
jo
mov
mov
or
out
pop
lods
out
and
shl
pushf
jbe
xchg
bound
mov
mov
clc
sub
ret
and
and
mov
sub
jp
push
or
push
push
js
ja
cwtl
mov
and
push
stc
loop
mov
addl
test
out
mov
xchg
lahf
adc
outsb
movl
push
idivb
push
xor
inc
jp
cmp
xchg
cld
dec
shrl
insl
and
mov
std
into
fistpl
movl
sbb
mov
fistps
mov
dec
movsb
scas
pop
pop
loop
sub
xor
fildll
jne
les
popf
jp
sete
outsb
xchg
cmpl
sti
test
push
mov
mov
xor
jae
pop
adc
jne
jge
add
cmpsl
repz
push
insl
imul
in
inc
sub
add
mov
sbb
int3
test
jmp
adc
mov
pop
pop
and
jae
jbe
dec
fbld
stos
in
std
pop
movsl
add
out
fdivr
inc
mov
cs
fsubrp
sahf
pop
dec
xchg
scas
jle
movsl
xor
aaa
pop
sub
mov
or
xor
add
push
scas
sub
stos
push
in
mov
adc
adc
fistpl
mov
popf
mov
out
pop
imul
sti
call
das
je
mov
fucomip
stos
fistpll
sbb
pop
cmp
cmp
and
adc
in
push
xchg
fcmovu
fs
daa
xchg
imul
fmull
stc
repnz
and
inc
pop
imul
out
and
int3
clc
jb
sbb
push
push
fidivrl
cmp
addr16
and
inc
xchg
sti
fidivrl
jecxz
insb
repz
sub
or
jl
popa
nop
push
xchg
imul
negb
adc
test
into
sub
xchg
mov
push
pop
scas
jl
lds
lods
movsl
cmp
inc
std
xor
xchg
mov
rcrb
cmp
jl
loop
fistpll
mov
outsl
push
cmp
push
xchg
stc
xlat
dec
popf
cmp
nop
pop
and
mov
jns
sub
adc
rcl
or
pop
rcrb
xor
xor
cld
shrb
mov
outsl
pop
rorb
and
daa
jle
jg
mov
mov
addr16
insl
mov
je
jbe
and
cmpsl
pop
pop
enter
jno
mov
adc
xchg
jno
jmp
xor
cmp
xor
push
les
or
imul
shll
leave
arpl
sbb
pop
movsb
push
pop
pop
in
dec
sbb
dec
pop
cmpsb
cmovnp
sbb
inc
inc
shll
xor
mov
xchg
sar
lahf
int
test
pop
pop
push
ficoml
add
repnz
gs
data16
in
dec
jb
js
stc
cmpsl
mov
adc
aas
ss
pop
jmp
mov
lret
xor
call
pop
in
xor
mov
push
popa
and
inc
call
cli
mov
and
in
add
jecxz
sahf
pop
mov
loopne
out
dec
mov
sub
filds
pop
cld
loop
jne
sub
inc
cs
stc
cmpsl
inc
push
addr16
fst
ja
adc
rorl
lahf
push
lock
cmp
mov
loopne
loope
dec
mov
mov
adc
int
and
sub
loope
cwtl
loopne
fisttpl
jl
adc
push
mov
jno
clc
push
pop
xor
sub
adc
lret
lcall
cli
scas
ss
cmpsl
mov
pop
stos
dec
fidivrs
sbbl
sbb
inc
stos
rcr
inc
xor
push
or
stc
repz
shll
jbe
enter
arpl
lock
mov
insb
jp
push
xor
imul
or
ljmp
pusha
in
divb
ds
push
movsl
js
adc
push
ret
inc
or
ror
pop
test
xchg
mov
pop
sub
leave
mov
shrb
cmpsb
xchg
das
dec
bound
xchg
insb
adc
dec
inc
mov
xchg
mov
out
jns
or
lret
sbb
fidivrs
cmp
sbb
test
test
cmp
dec
xchg
push
cltd
insl
daa
loopne
movsb
and
jmp
push
mov
rcll
leave
dec
xor
inc
push
cwtl
or
sbb
cltd
pop
fstps
lret
mov
and
xorl
pop
xchg
xchg
inc
mov
aam
aas
popa
inc
dec
clc
sbb
popa
cmp
jnp
or
fxch
xor
mov
add
cmp
jne
xor
popa
mov
out
mov
mov
dec
inc
fldt
pop
sbb
cmp
pop
jo
out
inc
cmp
pop
jg
dec
push
iret
add
sbb
push
mov
add
push
cmp
push
hlt
adc
xor
dec
sub
rcrb
mov
pop
mov
cmp
bound
sub
scas
mov
addl
xor
scas
leave
dec
imul
ss
insl
stos
call
mov
xlat
ljmp
jb
rol
mov
xchg
clc
cmp
shlb
mov
out
test
idivl
jb
loope
cmpl
out
push
fdivl
mov
pushf
cwtl
and
imul
sbb
je
aas
xchg
jne
stos
fisubl
icebp
mov
pop
aas
mov
dec
fucomp
sbb
mov
stos
push
rclb
xchg
shl
nop
dec
js
jmp
test
pop
sbb
popa
mov
jecxz
in
pop
daa
popf
push
jle
xchg
insb
leave
scas
xor
fisubrs
xlat
and
ficoml
inc
jl
in
scas
aas
pop
lahf
xlat
in
sbb
xor
add
loope
jl
addr16
xchg
inc
or
mov
daa
daa
lcallw
push
and
mov
pop
dec
aad
and
jae
inc
push
ljmp
add
add
add
mov
pop
jmp
stc
xchg
cmp
mov
lcall
fs
sub
push
mov
dec
mov
lret
cmc
mov
in
or
mov
imul
inc
xor
push
or
insb
push
adc
fidivl
jno
dec
xor
test
or
sahf
movsb
loope
mov
scas
cmp
nop
ds
out
mov
dec
cmp
add
dec
cmp
push
jmp
xor
outsl
clc
jp
add
mov
int3
cmpb
mov
js
imul
mov
sub
pushf
jb
inc
sbb
sbb
xor
ss
mov
ret
sub
add
ret
iret
ljmp
pop
negb
push
movsl
mov
mov
push
insl
addr16
push
ficomps
jg
add
or
call
jae
repz
mov
sbb
mov
sub
stos
fisubrs
std
pop
mov
sub
call
push
adc
arpl
xor
adc
insl
fwait
das
mov
fidivl
std
cli
cmp
add
or
cmp
cmpsl
mov
xchg
in
pop
xlat
xor
test
cmp
push
or
sub
iret
daa
into
sub
xchg
xchg
aaa
imul
lea
mov
call
and
mov
stc
clc
jl
cmpsl
negb
mov
and
lea
xor
inc
xchg
imul
mov
mov
lods
ss
leave
mov
cmp
mov
jmp
jp
int3
scas
cld
mov
or
addb
out
dec
insl
mov
rorb
jl
faddl
in
cmp
pop
mov
fcomp
lahf
pop
test
ss
inc
and
in
and
push
out
sbb
adc
mov
cmp
push
fldenv
xchg
out
sub
push
pop
mov
rolb
mov
lcall
jle
xchg
sub
jmp
fimull
add
xor
adc
push
or
sub
sbb
icebp
data16
and
data16
push
add
ret
sbb
into
iret
or
inc
jb
rcrl
les
sbb
mov
jbe
inc
pop
sub
test
ret
and
and
lahf
jecxz
mov
ss
xchg
test
in
test
sbb
dec
or
sbb
nop
adc
es
dec
sbb
jge
add
sub
dec
rclb
popa
or
dec
call
adc
pop
cli
gs
inc
push
in
xchg
inc
jnp
add
outsl
pop
sub
insb
cmp
stos
call
out
fisttps
shll
push
mov
push
sbb
movsb
int
push
repz
cmp
or
lock
cmp
loop
in
mov
sbb
mov
paddq
mov
iret
sbbb
hlt
push
add
enter
mov
lods
xor
push
push
push
fcomp
lret
nop
lea
ss
sbb
rorb
mov
sub
lret
stc
test
cmp
xor
repz
in
jmp
push
sub
ljmp
jle
ret
mov
sbb
lea
sbb
jae
xchg
push
imul
mov
testb
sbbl
leave
add
cmp
test
clc
and
jne
popf
dec
mov
xchg
dec
sbb
jge
push
cmp
fs
dec
mov
mov
push
out
mov
or
mov
mov
lret
mov
repnz
enter
cltd
neg
mov
inc
jg
or
fstpt
stos
sub
not
xor
cmp
push
push
mov
jb
jp
and
add
xchg
mov
dec
adc
rcrl
in
xchg
inc
fcoms
inc
bound
xchg
testl
inc
or
cmp
orb
lods
rolb
jle
sub
imul
popa
fsubl
inc
pop
mov
out
aam
repz
and
pop
cmp
mov
pop
test
int
into
fsubl
das
aam
adc
mov
and
mov
push
mov
jg
sahf
xor
mov
or
xor
mov
jbe
pop
pop
jnp
rcr
repz
js
fs
fcomip
add
hlt
pop
sbb
mov
xchg
pop
pop
scas
push
mov
and
outsb
pushf
mov
je
cmp
xchg
or
and
mov
inc
inc
mov
sub
stos
jne
lahf
lock
ljmp
cmp
pop
or
push
negl
sbb
enter
mov
es
xchg
push
js
dec
mov
mov
add
sbb
cmc
add
out
inc
xor
pusha
test
cmp
mov
cmpsb
pop
xor
out
int
imul
test
aas
pusha
aad
daa
rorb
in
or
and
and
loope
or
js
lods
cltd
xchg
cld
stos
cmc
leave
std
and
mov
inc
or
dec
lods
testl
insb
pushf
pop
insb
mov
lods
jp
push
ror
sbb
stos
xchg
es
jg
add
ja
xchg
pop
mov
int
dec
ja
in
shll
jno
in
loop
inc
lea
push
imul
jmp
addr16
xor
js
out
jmp
sbb
js
cmp
jbe
fwait
lret
sbbb
add
and
sbb
aad
imul
push
mov
imul
adcl
mov
xchg
sbb
push
popf
inc
adc
cs
lcall
lods
mov
push
and
fmuls
lahf
mov
add
cmpsl
pop
dec
jp
inc
movsl
jp
out
mov
lret
test
and
xor
jle
aad
fwait
sub
sarb
xor
addb
jg
into
shlb
jge
adc
jns
loop
lahf
popf
or
roll
pushf
les
or
fidivl
idivl
xchg
in
ret
cwtl
adc
cmp
stos
dec
jmp
dec
pop
addb
inc
mov
jg
fldl
or
rorl
lcall
imul
and
scas
mov
jle
inc
icebp
shll
fisubl
stos
pusha
mov
xchg
mov
add
jns
inc
mov
xchg
f2xm1
mov
xor
lret
stc
inc
dec
push
sub
or
je
les
and
mov
inc
or
ja
xor
movl
and
dec
and
ror
inc
cmp
pop
ja
daa
stc
mov
notb
insb
cmp
sbb
push
and
cmp
dec
into
sbb
jg
jle
in
lds
jg
inc
lret
mov
cmpsl
fcoms
filds
negl
cmp
rclb
and
jns
xchg
cmpsb
sub
and
xchg
rcrl
pop
pusha
les
jbe
add
xor
fdivrl
aam
xchg
xchg
lret
push
int
jo
std
imul
mov
cmpl
or
dec
mov
dec
out
ret
push
sub
scas
mov
xor
loopne
xor
shr
leave
or
mov
adc
jecxz
jo
fnstenv
dec
dec
cltd
cld
cld
fidivs
mov
sbb
fsubr
int3
cld
iret
in
fistps
or
cmp
sub
pop
outsl
dec
jg
dec
insb
pop
pushf
scas
mov
fsubr
int3
cld
iret
in
fistps
or
cmp
sub
pop
outsl
dec
jg
dec
insb
pop
pushf
scas
or
cmp
lods
lahf
pop
out
int3
cld
iret
insb
fistps
or
cmp
sub
pop
outsl
dec
jg
dec
insb
pop
pushf
scas
mov
fsubr
int3
cld
iret
in
fistps
or
xchg
cvttps2pi
out
orb
mov
inc
adcl
arpl
jae
out
divb
movb
adc
inc
xchg
push
mov
push
xchg
es
icebp
push
rcll
out
notb
add
adc
add
mov
adcl
push
rcll
out
divb
mov
clc
adc
and
push
enter
das
mov
and
data16
mov
test
dec
xchg
in
test
outsb
or
mov
or
leave
fmul
dec
add
pop
adc
popf
xchg
push
mov
js
daa
and
clc
cmp
cmp
mov
mov
mov
ja
xor
xchg
es
icebp
clc
dec
jle
out
out
dec
lock
pop
or
mov
inc
add
add
outsb
popf
loopne
in
aam
push
neg
or
pop
shrl
jno
lea
sbb
aaa
dec
dec
add
mov
ficoms
xor
adc
mov
push
push
cmp
push
xchg
es
icebp
push
rcll
out
divb
movb
adc
inc
xchg
cmp
into
pop
mov
call
jg
arpl
repnz
movsl
imul
adc
add
push
xorl
xchg
push
mov
roll
pusha
xchg
jle
add
sbb
and
add
call
push
hlt
es
icebp
push
rcll
out
divb
movb
adc
inc
xchg
push
mov
push
xchg
es
icebp
push
rcll
out
divb
movb
adc
inc
xchg
push
mov
jb
cld
sub
or
pop
subl
xchg
pop
je
aaa
setl
ss
lock
ret
mov
dec
stos
outsb
xchg
push
pop
add
mov
cld
sub
cmp
xor
or
mov
mov
ror
lods
scas
daa
data16
mov
jnp
icebp
ss
mov
pop
in
outsl
or
enter
mov
add
call
repz
push
inc
jns
je
outsl
dec
aam
inc
dec
adc
push
mov
insb
xchg
and
mov
mov
push
xor
push
pop
inc
or
cmp
repnz
dec
clc
sbb
xchg
add
inc
stos
and
fistpl
int
sbbb
fucomi
jl
mov
out
push
cmc
push
outsb
mov
or
cli
push
insb
cmp
dec
dec
xchg
ja
andl
les
mov
add
inc
sub
fidivl
jno
pop
ficompl
adc
imul
xchg
jp
ret
outsl
jnp
jns
movl
push
sbb
shll
jae
sbb
push
daa
mov
dec
adc
pushf
jmp
shrl
cmp
adc
mov
mov
fisubs
sub
dec
xor
out
add
fisubs
sbb
cli
add
icebp
dec
lock
cmp
adc
mov
test
sbb
cwtl
and
andb
jecxz
jne
cmp
jp
push
sub
and
and
dec
cmp
stc
or
add
jae
or
push
dec
dec
push
mov
add
and
in
icebp
sarl
pusha
ja
inc
addr16
jns
in
std
jl
dec
jo
in
test
addr16
adc
pushf
fisubrl
mov
sbb
out
push
popf
dec
cs
out
lret
dec
out
and
scas
lds
or
mov
movsb
lods
inc
inc
pop
cmpsb
test
rcrb
pop
add
mov
dec
and
ss
xchg
roll
mov
popa
sbb
add
xchg
inc
cltd
mov
cmpsl
pop
leave
pop
and
loopne
lahf
sbb
lea
sub
xlat
cmpsl
repz
add
test
or
mov
ds
fsubrl
loopne
insl
sahf
movsb
cld
xchg
faddl
loope
fdivrl
jle
mov
lret
mov
fdivp
ss
jbe
inc
stos
push
movl
jle
pop
ret
ljmp
jecxz
ja
popf
jae
xor
cmp
lds
mov
sti
sbb
inc
scas
ret
sub
mov
sbb
or
pop
push
sub
pusha
adc
or
in
pop
daa
jg
bound
pop
sti
cmpsl
sbb
cmp
pop
test
jmp
xchg
aaa
insl
in
inc
js
nop
xor
xchg
cltd
stos
cld
ljmp
sti
outsl
lea
push
push
pusha
aas
and
sub
cmp
pop
jo
test
xchg
mov
btc
out
inc
arpl
fisubrl
mov
pop
es
lds
imul
fimull
pop
xor
xor
mov
pop
cmp
sbb
lock
lret
test
aad
mov
xor
dec
and
gs
mov
lahf
aad
jl
xchg
push
push
push
in
xchg
push
jo
into
pop
pop
cmp
xor
imul
pop
or
mov
push
and
pop
jg
jae
add
add
jle
fwait
jmp
ret
and
inc
addr16
inc
mov
sub
pop
mov
xchg
and
sub
outsl
dec
sub
lea
xor
stos
mov
jnp
xchg
jle
aad
dec
fsubs
je
jno
and
add
inc
xchg
sub
in
scas
jbe
inc
imulb
mov
mov
movsb
cmpsl
sub
xlat
xchg
ja
and
pop
fistps
cmp
push
and
lahf
cmp
mov
outsb
jnp
adc
pushf
in
clc
mov
mov
xor
pop
stc
push
shr
mov
xor
jmp
adc
mov
mov
out
ret
cltd
inc
loopne
cltd
lea
lret
push
call
testl
pop
loope
jmp
add
xchg
nop
or
sbb
incl
add
jno
lcall
xchg
fisttpl
xchg
mov
fstps
jecxz
xchg
sbb
arpl
sub
pop
js
xchg
lcall
mov
in
inc
push
sub
in
jns
push
out
mov
mov
negl
addr16
inc
sub
pop
jle
stc
mov
lea
jle
xor
in
decl
adc
mov
ljmp
enter
and
fs
fwait
jp
insl
jns
mov
cmpsl
je
outsl
pusha
jl
xchg
or
mov
imul
test
orb
mov
adc
inc
scas
inc
xchg
jg
into
jmp
jl
loope
idivl
pop
mov
addr16
movsl
or
dec
lahf
push
dec
lret
int3
or
cmp
in
sbbb
sub
dec
jnp
imul
pusha
pop
mov
push
cli
jl
sbb
call
dec
sub
adc
aam
test
int
push
xorb
mov
arpl
jle
icebp
ljmp
jns
ror
pop
inc
test
inc
sbb
dec
lea
or
push
sbb
and
xor
and
lret
rcrb
fbld
xchg
push
imul
push
jnp
aad
mov
movsb
mov
enter
repnz
imul
dec
push
jl
sub
adc
mov
aaa
in
xor
fwait
or
jge
mov
mov
pop
mov
mov
xchg
arpl
fisttpll
jb
lea
xchg
add
push
and
ret
mov
mov
scas
mov
or
dec
aam
dec
and
or
mov
push
push
sbb
fiaddl
jmp
sub
mov
mov
lcall
adc
push
ja
sub
pop
orl
add
push
xchg
push
xchg
popf
or
sub
pusha
or
xor
mov
in
in
dec
out
insl
out
rcll
push
call
je
push
outsb
adc
clc
xor
sub
cmc
sub
sbb
popa
adc
push
mov
add
sti
lret
inc
sub
mov
mov
das
cltd
std
imul
jbe
in
shl
xchg
icebp
pop
call
mov
xor
cmpsl
lock
or
mov
adc
mov
sub
lea
call
mov
ss
test
shrb
and
mov
xchg
adc
pop
movsb
jecxz
outsb
outsb
fldcw
ret
or
hlt
xchg
addl
pop
shll
xchg
xor
popf
pop
xor
lcall
xchg
imul
fisubs
fcomps
sbb
or
or
xchg
ja
lods
fdivl
xchg
hlt
jge
pop
mov
and
jecxz
jns
sbb
mov
xorb
ss
sub
repz
lret
roll
imul
out
gs
out
mov
or
xor
push
pop
repz
jb
mov
pushf
test
aam
mov
out
imul
ja
dec
mov
pop
mov
fisubl
sub
adc
shll
stos
in
loopne
fs
out
leave
mov
ret
sbb
fisttps
testb
mov
xlat
ljmp
xor
std
outsb
lds
adc
ds
lret
loop
fs
lock
in
loopne
fmulp
int
fucomp
in
stos
stos
addr16
lock
push
dec
call
and
sub
mov
movl
sub
bound
jg
mov
and
jae
rcrb
mov
or
test
popa
ds
cltd
and
jbe
fstl
xor
clc
mov
call
loop
out
imul
push
test
dec
xchg
or
ljmp
pop
jmp
adc
fdivrs
fcmovb
push
jbe
lea
cmc
stos
insl
pop
inc
cmpsb
vunpckhps
jnp
popf
rcr
push
outsb
shrb
mov
out
or
fstps
or
push
stos
les
and
lods
add
lods
inc
data16
mov
sbb
xor
and
sarl
jl
cmp
mov
pop
ljmp
inc
les
dec
jae
fisttpll
mov
sub
sbb
in
jp
xchg
divl
sub
popf
faddl
and
ljmp
arpl
add
repz
sbb
adc
lods
sub
ret
mov
push
lahf
mov
test
add
xchg
int3
into
xor
inc
cltd
jecxz
inc
cli
fstl
in
fstl
aas
lahf
stc
andl
das
push
rclw
mov
mov
inc
std
call
sbb
int3
enter
fistpl
push
lods
mov
jns
cmp
inc
or
movsb
out
mov
scas
sub
mov
sub
push
adc
xor
popf
fwait
xor
ja
add
stos
or
stos
add
es
js
mov
push
out
test
in
and
pop
xor
xchg
inc
push
jns
aaa
add
movsb
lock
ja
pop
fstpt
cmp
cmp
sub
inc
test
adc
push
mov
in
add
xor
dec
je
imul
repnz
jle
mov
adc
hlt
and
lahf
lret
sbbb
mov
add
pop
inc
adc
insl
cmpsb
popa
xchg
cs
out
inc
xlat
xchg
xchg
lret
out
pop
stos
mov
fsubr
sub
xor
lcall
inc
or
mov
outsl
dec
mov
cwtl
ret
aas
out
lock
mov
pop
jno
fs
push
cmp
cmp
pop
incl
jns
mov
pop
aaa
sahf
aas
je
fucomi
cmp
push
insb
popf
int
sbbb
jo
mov
and
jle
push
inc
rcrl
cmp
rcll
sets
aad
repnz
mov
dec
fstpl
enter
clc
testl
rclb
inc
imul
xchg
jae
movb
icebp
lea
dec
jl
dec
cmpsl
jo
cli
outsb
adc
mov
sub
dec
icebp
popa
xchg
in
lods
dec
fdivs
cwtl
not
lock
rclb
add
adc
jge
js
or
testl
loopne
mov
mov
arpl
aas
addr16
in
adcl
test
xchg
dec
test
lock
sub
pop
xchg
fwait
inc
in
stos
xor
adc
xor
push
mov
stos
and
addr16
cmp
lcall
scas
xor
xchg
clc
stos
aas
or
xchg
aas
adc
mov
leave
ljmp
adc
pop
xlat
sbb
add
mov
cltd
sbb
data16
jb
cmp
and
pop
into
mov
cmp
aaa
mov
jl,pt
inc
or
fadds
adc
scas
push
inc
inc
xchg
cmp
cmp
in
jl
or
mov
je
pop
inc
mov
ret
add
xor
push
cli
sbb
mov
adc
test
imul
fwait
pop
clc
movsb
xchg
insb
pop
repz
lds
loopne
pop
sub
xchg
mov
inc
je
bound
sti
and
leave
jbe
adc
imul
js
adc
sbb
pop
pop
dec
mov
mov
jno
lret
rep
push
idivb
scas
loope
xchg
lahf
in
ljmp
out
aas
dec
stos
ds
mov
add
pusha
cmp
adc
dec
adc
push
pop
fadds
mov
test
repnz
leave
lea
ficompl
pop
push
movsb
pop
cmp
popa
mov
push
push
pop
fistps
push
fadds
out
xchg
xchg
add
dec
pop
shll
mov
iret
mov
testl
outsb
pop
psadbw
dec
cmpl
fs
popa
cmpsl
int
jp
xchg
les
pop
rcrl
inc
ret
lds
scas
xor
jae
pop
and
test
add
and
outsb
sahf
sub
incb
or
or
sti
cmp
int3
jp
cwtl
icebp
jnp
mov
ret
dec
cmc
mov
in
and
das
test
xchg
ret
dec
cld
dec
add
jmp
movsl
jae
pushf
dec
push
dec
push
cmp
add
jo
cmc
rclb
dec
jge
jmp
das
adc
and
xchg
popa
xor
jp
push
mov
xor
insl
mov
mov
pop
or
mov
mov
pop
jae
fstpl
jp
adc
insl
mov
mov
inc
cli
cltd
xchg
test
ret
repnz
inc
add
fs
pop
insb
push
inc
out
out
push
mov
dec
mov
mov
sub
repnz
dec
in
push
fcmovnbe
add
push
dec
push
out
mov
loop
push
xor
cmpsb
sahf
xorl
inc
adc
nop
fimuls
mov
addr16
xor
mov
sub
pop
fidivl
push
xor
clc
shlb
in
pop
out
mov
cmp
cmp
shl
ja
dec
or
xchg
jp
cmpl
xor
cli
mov
sti
mov
mov
testl
popa
lret
pop
lock
ss
andl
xchg
lea
subb
pop
ja
xlat
xor
dec
cltd
stos
mov
dec
jo
xor
mov
lcall
cld
sti
int3
enter
icebp
sub
test
fsubrs
js
xchg
and
mov
xchg
jb
ja
lcall
adc
or
ljmp
add
fldcw
sti
lahf
jecxz
icebp
and
arpl
outsb
mov
jnp
fwait
hlt
data16
adc
jbe
ss
data16
movsl
lret
hlt
pop
pop
iret
fisubrl
movsl
scas
or
mov
sahf
out
xlat
lahf
sbb
ror
mov
aam
dec
dec
push
fistpl
sbb
pop
ss
sbb
inc
insb
jns
pop
hlt
cmp
inc
sub
xchg
in
and
mov
incl
jno
adc
pop
aam
xor
clc
mov
lea
pop
mov
nop
ljmp
xchg
fwait
in
daa
fcomi
push
ss
lea
shlb
pop
sub
into
push
jmp
insl
jb
outsl
popf
roll
inc
xor
les
inc
loope
bound
jge
sbbl
pop
pop
stos
aaa
adc
iret
sub
pop
inc
jp
jbe
pop
inc
push
repz
push
jbe
filds
ficoms
and
jle
out
mov
mov
enter
out
je
adc
cmpsb
insb
lock
mov
sti
inc
stc
xor
push
jb
insb
cmp
cmp
cmp
out
mov
movswl
pop
fists
jle
popa
jne
jge
or
fs
lea
adc
xchg
fnstcw
jae
xchg
jne
lret
inc
sbbl
adc
in
and
fildl
inc
fsubs
sbb
mul
daa
icebp
mov
fnsave
mov
fwait
scas
pop
jecxz
mov
outsb
call
sbb
sub
rcl
sbb
call
ljmp
pushf
movsl
sbb
pop
outsb
movl
sbb
gs
and
jecxz
xlat
jno
addl
mov
xor
pop
mull
pop
or
mov
faddl
arpl
xchg
cmp
test
pushf
rcrl
dec
test
mov
mov
rcll
mov
ret
xor
add
filds
pop
stc
rcr
fsubl
or
insb
sub
insb
mov
sar
jl
stos
jbe
adc
in
ljmp
cmp
pushf
enter
push
cmp
cmp
push
fadd
dec
aad
loope
js
mov
ret
ret
sub
out
mov
dec
aas
rclb
push
fcmovne
cwtl
dec
pushf
dec
imul
mov
mov
cmp
mov
or
cmp
repz
dec
cli
add
pop
dec
mov
jp
dec
enter
dec
stc
pop
test
sbb
dec
push
xchg
sahf
dec
or
enter
dec
inc
ljmp
jne
mov
or
mov
push
push
lret
xlat
lea
nop
ret
in
mov
jo
pop
sub
lea
inc
shl
sub
sbbl
fisubl
inc
mov
movsb
mov
pusha
jno
sub
mov
cmp
pop
and
ret
cmp
mov
inc
cmp
cmp
inc
jns
enter
mov
pop
xor
pop
outsl
ds
jl
cltd
add
inc
mov
jne
pop
ss
fiaddl
icebp
scas
lds
jbe
outsl
int
int3
cmp
push
lret
or
xor
sti
fcomps
imul
bndldx
fs
sbb
insl
and
ret
cmp
jne
push
jbe
cmc
loop
insl
jl
pop
xchg
pop
jb
test
xor
sub
movsl
out
stos
fiadds
mov
jmp
fiadds
jg
sbb
or
fldcw
xchg
pop
ds
pop
iret
mov
dec
cmpl
incb
xchg
cld
adc
push
sub
mov
pop
or
movsl
add
sub
test
xor
jne
pop
enter
popf
jl
aas
jle
arpl
xchg
pop
andb
ss
or
aam
jb
pusha
popa
xchg
sbb
cld
push
fs
mov
loopne
xchg
pop
cli
outsb
scas
pop
cmp
cmp
das
xor
aaa
and
int
popa
push
mov
cmp
sbb
stc
fmuls
jo
mov
and
movl
xor
jbe
test
call
mov
in
bound
fisubrs
lock
xor
sub
jo
test
das
or
xlat
test
cwtl
loopne
inc
in
jle
cmp
popf
push
or
out
mov
jae
xchg
mov
int
mov
ds
bound
sbb
dec
lahf
push
aaa
imul
pop
fistps
loop
xor
jge
cmpsl
jmp
xchg
cmpsb
jl
pop
push
nop
ljmp
inc
dec
pop
mov
mov
stos
outsb
jl
mov
jae
out
shrl
fwait
push
jmp
jg
scas
in
push
stc
fmul
aad
les
loop
mov
imul
inc
pop
cmp
in
mull
repz
ret
testl
ret
je
sbb
lret
cmpsl
jp
dec
leave
enter
dec
lcall
test
test
loopne
push
js
push
mov
cmp
mov
lret
adc
popa
mov
or
mov
mov
test
scas
adc
pop
nop
jne
mov
lds
fidivrl
inc
push
das
pop
movsl
add
imul
cmc
sbb
nop
sub
lcall
pop
loope
push
jp
pop
xor
lods
jmp
sub
cltd
jl
sub
into
outsl
jne
xlat
jae
lret
mov
fisubrl
xchg
insl
clc
mov
cmp
lcall
scas
jns
dec
les
lods
and
cmpb
mov
pusha
or
push
lea
mov
int
ja
jmp
jp
fnstcw
pop
cltd
insl
movsb
mov
jae
push
push
repz
push
loope
xchg
cmp
jmp
pop
ret
gs
mov
fbld
repnz
pushf
aaa
xor
nop
out
negl
mov
mov
mov
cmp
test
xchg
sub
pusha
roll
xchg
mov
andl
outsb
xchg
aad
sbb
insl
idiv
adc
xchg
mov
adc
data16
mov
xor
mov
imul
pop
int3
sub
and
jns
inc
add
call
adc
mov
pop
mov
xor
mov
out
cmpsl
mov
mov
xchg
pop
jg
sub
and
jl
inc
cmp
push
sbb
adc
das
mov
mov
scas
and
jnp
fmuls
push
push
inc
inc
mov
pop
pop
mov
xlat
rcrl
jae
andl
nop
rcll
int
inc
je
out
in
test
popf
jb
adc
adc
data16
inc
orb
push
sub
int3
mov
adc
mov
sub
sub
sbb
std
mov
dec
adc
imul
fldenv
pop
sbb
int3
stos
movsl
les
mov
pop
pushf
les
shrb
add
dec
in
sub
lock
popa
xor
or
dec
pop
sahf
jns
lea
push
fnstcw
mov
fdivs
add
loope
mov
add
xchg
xchg
je
and
negl
xor
rep
mov
mov
movsb
dec
pop
add
dec
stos
push
cmp
and
mov
lods
adc
outsb
movsl
xchg
nop
fnsave
repnz
mov
popa
inc
mov
out
std
inc
scas
arpl
addl
icebp
push
rcll
out
divb
movb
adc
inc
xchg
push
mov
push
xchg
es
icebp
push
rcll
out
divb
movb
adc
inc
xchg
push
mov
push
xchg
es
jno
rcll
out
divb
movb
adc
inc
xchg
push
mov
push
xchg
es
icebp
push
rcll
out
negb
shr
mov
imul
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
int3
popa
scas
enter
insb
cld
jl
dec
cmp
dec
sub
ds
or
sbb
in
pushf
cld
ror
fmul
lods
fdivl
in
mov
call
dec
dec
cmp
or
pop
cmp
dec
jl
xor
outsb
cld
ds
nop
mov
test
aas
pop
inc
adc
daa
jnp
push
cmp
sbb
in
rclb
enter
ss
xlat
inc
dec
outsl
das
jae
mov
or
pop
mov
dec
js
pusha
addr16
in
sub
cmp
lods
pop
inc
popa
int3
jno
cli
dec
push
dec
mov
add
insb
or
fyl2xp1
stos
repnz
sub
pop
pop
loope
stc
cmp
cmp
pop
or
cmp
int3
inc
or
sub
in
dec
fcoml
xor
arpl
jns
mov
insl
in
dec
jae
xchg
adc
lahf
and
mov
test
sub
lahf
insb
sub
jns
or
cmp
jae
add
fldl
xor
xor
pusha
aas
insb
sbb
sub
jg
xlat
in
lret
dec
mov
mov
lret
mov
add
push
les
jl
in
out
cld
fmuls
mov
cwtl
in
stc
or
dec
cmp
pop
xor
add
test
movsl
ret
mov
lock
sub
inc
cmp
insl
cmp
mov
lahf
enter
mov
pushf
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
pushf
cld
lods
int3
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
cmp
outsb
outsl
jl
add
pop
xlat
lods
out
adc
sub
not
dec
mov
xlat
sbb
je
sub
ficompl
repnz
gs
inc
lds
loop
jb
or
push
jmp
mov
sbb
fwait
sti
adc
cmpsl
mov
or
cmp
jmp
popa
pop
pop
out
dec
mov
sub
inc
movsb
xchg
push
and
cltd
add
es
mov
sub
call
in
dec
leave
cltd
mov
mov
test
aad
sbb
xchg
incl
pop
add
mov
mov
mov
mov
push
inc
dec
push
jl
pop
xor
pop
sub
aaa
push
xchg
xchg
test
adc
lock
xlat
xchg
pop
std
repz
sti
arpl
inc
fwait
punpckhdq
pop
dec
mov
popa
insl
sbb
push
pop
or
lods
shll
outsb
and
jno
inc
jge,pn
fisubrl
and
sub
in
cmp
dec
xlat
add
lahf
cmp
mov
stos
dec
cmp
cmp
xlat
jge
xor
xchg
rcrb
jge
jns
aaa
xor
jnp
les
outsb
xor
push
int
xor
call
xor
dec
add
jno
push
mov
pusha
in
pop
nop
sbb
dec
dec
test
dec
ret
fsubrs
sbbb
cmp
in
xchg
mov
adc
and
jns
ja
push
push
imul
cmpsb
fdivs
imul
xor
lock
sub
cld
mov
test
xchg
jb
nop
mov
jnp
shll
fcmovnb
mov
push
je
rcll
sbb
rclb
or
xorb
adc
icebp
adc
cmpsl
pusha
scas
cmp
dec
mov
jo
push
je
mov
jno
push
cmp
outsb
fldt
xor
jno
fmull
test
mov
je
mov
jle
sbb
fadd
out
and
pop
rol
testb
add
xchg
ret
jle
add
and
mov
inc
inc
push
adc
cmp
cltd
ja
lods
jecxz
orb
add
cs
ret
outsl
dec
dec
or
jnp
iret
pop
stc
push
jle
and
sub
sbb
vcomisd
andb
push
inc
loopne
or
dec
sub
cmpl
inc
inc
les
mov
xchg
arpl
push
sub
aam
testb
mov
cmc
inc
icebp
and
sarl
cmpsb
sub
inc
movsb
cmp
or
mov
cmpsl
jns
lock
dec
dec
adc
or
xor
call
call
test
lret
mov
lds
arpl
or
mov
js
lahf
pop
mov
sub
enter
mov
sbb
outsb
lods
xchg
dec
adc
or
gs
inc
dec
sbb
or
and
clc
movsl
stos
movsl
repnz
pop
fwait
push
add
dec
pop
cmp
push
cmp
outsl
mov
sti
xchg
in
add
and
popa
push
lods
inc
sbb
sarb
mov
xor
and
and
mov
dec
scas
mov
rorl
in
sahf
xor
jl
push
addr16
popf
es
jae
adc
call
into
addr16
nop
mov
xchg
std
enter
sbb
mov
mov
nop
in
mov
xor
jb
push
jnp
iret
xchg
jae
test
adc
xchg
ret
push
inc
arpl
and
mov
add
loop
popl
sbb
jl
or
mov
dec
int3
mov
mov
loopne
sub
fs
clc
stos
mov
pop
data16
dec
push
in
mov
pop
push
pop
push
movb
pushf
cmp
fadds
pop
mov
add
sti
leave
add
hlt
adc
cmp
add
add
add
jg
test
dec
pop
xrelease
loop
mov
add
in
jecxz
lahf
into
out
aas
ljmp
aad
sti
js
dec
mov
icebp
mov
dec
xchg
popf
cmp
xchg
testl
mov
xchg
popf
sub
sbb
insb
sbbl
pop
je
fimuls
pop
out
lods
vfmsubaddpd
and
sbb
outsl
cmovge
adcl
adc
loop
jmp
shl
outsb
xchg
nop
ljmp
xchg
out
xor
pop
lock
shll
loope
mov
xor
mull
rcrl
add
pusha
shll
mov
and
into
xchg
mov
adc
pop
add
inc
jg
enter
dec
pop
add
or
fsubl
sub
mov
lahf
loopne
xchg
sub
jo
repz
mov
lahf
mov
insb
mov
xchg
sar
lock
pop
mov
pusha
in
shll
in
ljmp
hlt
movsb
cld
incl
push
jp
mov
cmp
push
ljmp
outsl
cmp
pop
mov
lock
cld
bound
roll
push
add
mov
fsubr
cwtl
enter
test
sbb
gs
mov
or
in
loop
shll
jecxz
ret
lret
xor
rcrl
add
push
loop
push
outsb
xor
or
and
iret
mov
out
ljmp
or
cltd
mov
stc
ds
adc
inc
dec
push
lret
out
push
inc
fists
les
les
mov
fstl
jp
add
movsl
sbb
mov
call
mov
lea
xlat
orl
jle,pt
leave
das
jle
daa
inc
xor
or
push
add
mov
push
fisttpll
push
mov
imul
mov
sbb
out
sahf
jns
pop
xchg
xor
iret
adc
inc
addr16
das
add
enter
pop
add
enter
int
in
fadds
pop
or
xchg
in
ret
stos
add
ds
and
mov
adc
xlat
in
neg
push
cmp
lds
sub
xchg
fsubrp
and
cwtl
es
insb
inc
mov
add
xlat
fdivrs
iret
cmpb
outsb
lea
mov
insl
pop
push
ret
mov
mov
and
call
or
ret
aaa
loope
push
imul
fbld
sub
mov
pop
inc
pop
pop
mov
subb
push
push
push
xchg
jno
jg
popa
sub
cmc
sbb
inc
mov
pop
cmp
jle
fbld
inc
and
adc
and
pop
pop
jb
mov
jge
aad
inc
repz
add
lret
sub
mov
rclb
aas
xor
outsl
mov
aas
hlt
test
fdivl
out
sti
loop
call
ja
cmp
div
stos
adc
fbstp
xchg
sub
jl
adc
into
call
xor
cmp
bnd
sahf
frstor
mov
in
pop
xlat
mov
or
pop
push
xchg
rolb
pop
getsec
je
mov
dec
insl
adc
jns
sbb
push
fisttpll
push
repnz
mov
bound
fdivrs
sub
out
ret
pop
fwait
push
dec
orb
and
ret
int
adc
repz
mov
scas
call
rcrb
test
cmp
mov
adc
in
pop
sti
aam
enter
stos
out
bound
lret
dec
hlt
shl
hlt
pop
pop
and
in
pushf
mov
lock
stos
ret
inc
aad
xor
adc
pop
loope
aas
loope
je
out
pop
nop
xchg
dec
mov
mov
mull
xor
sbb
mov
add
push
inc
sub
push
and
or
mov
fsubrl
clc
mov
sbb
sahf
sbb
cmc
in
jae
jge
xchg
cmpsl
loop
adcl
and
fwait
mov
lods
jae
mov
xorl
inc
gs
xchg
inc
movsb
stos
femms
jns
int3
pop
pushf
ret
loope
push
inc
and
inc
sub
pusha
xchg
aam
or
loopne
enter
ss
ror
clc
aad
inc
outsl
sbb
xorl
sbb
jnp
aaa
imul
add
xchg
ljmp
lahf
popa
cli
xor
std
mov
dec
mov
and
sbb
arpl
stos
cmp
jnp
inc
mov
es
testl
mov
clc
adc
daa
out
fwait
xchg
repz
sahf
mov
mov
lahf
ficomps
and
mov
push
or
inc
movsl
lahf
out
in
cmpsb
push
dec
popl
push
fildll
inc
in
push
popa
call
xchg
inc
jb
or
and
enter
lret
repnz
cwtl
shl
mov
imul
sbb
jae
cmp
jns
and
out
mov
je
jae
sbb
cmp
shll
push
xchg
add
mov
insl
sbb
int3
clc
jmp
mov
mov
test
arpl
enter
out
cmp
gs
dec
push
movb
or
push
or
cmp
mov
std
test
pushf
lods
cmpb
pop
and
aam
das
sbb
cwtl
test
mov
push
or
fsubl
inc
add
test
or
cmp
fcomps
rcr
and
sbb
sub
xchg
insl
push
xchg
xor
ljmp
dec
addb
adc
out
jb
mov
ret
inc
das
and
or
jge
xor
js
fiadds
sub
outsl
lahf
in
xchg
push
into
arpl
xchg
jo
in
ret
push
jl
dec
pop
pop
mov
in
loope
sub
rorb
push
ret
stc
push
pop
adc
pop
out
xor
adc
sub
inc
cmp
mov
cmp
test
push
mov
rcr
jge
cld
pop
pop
rclb
mov
xchg
stos
out
xor
push
imulb
addr16
cmp
dec
jnp
mov
decb
push
ljmp
inc
sahf
aad
stos
fs
iret
and
sub
jnp
sub
and
mov
fidivrs
or
and
loope
sub
jb
popa
jne
cmp
aaa
insl
gs
std
pop
testl
adc
or
dec
mov
sbb
jae
push
pop
inc
sub
mov
aad
cmp
cmc
dec
in
pop
push
jnp
add
mov
rcrl
aaa
ljmp
loopne
sub
cmp
cmp
into
in
mov
mov
and
push
lcall
iret
sub
sbb
mov
and
js
pop
mov
mov
dec
faddp
pop
testl
ds
popa
adc
mov
lret
xchg
pop
mov
xchg
and
mulps
test
sub
lods
fnstcw
dec
jp
jno
add
jecxz
sbb
movsl
fadds
hlt
loope
dec
fisubs
lods
out
lret
rolb
adc
jge
nop
int
xchg
ja
lret
inc
ds
add
popa
insl
mov
jnp
inc
out
xchg
cmp
orl
lahf
lahf
sub
and
rcrb
jae
xor
push
sbb
ja
scas
sbb
push
incl
inc
push
or
das
subb
push
mov
cld
test
es
shrb
lods
iret
aaa
mov
data16
dec
jne
mov
push
push
cwtl
test
pop
int3
and
int3
xchg
jl
shl
pop
or
lock
bound
scas
in
pop
xchg
add
fisttps
outsl
push
add
test
adc
mov
cmp
sub
lods
sbbb
pop
ja
mov
in
sbb
xchg
push
test
mov
jb
imul
data16
cwtl
in
in
orl
shrl
into
divb
dec
shll
adc
imul
sub
mov
in
fdivrs
push
dec
rcll
sbb
cld
in
sbb
xor
mov
bound
loop
rcl
rcrl
andl
pop
inc
xlat
cmpsl
repnz
inc
xchg
imul
push
fiadds
mov
aad
pop
outsl
lds
xchg
or
test
outsb
ret
shl
popf
push
cmp
lret
and
std
xchg
fisubrs
inc
xchg
sbb
icebp
sbb
out
xlat
jle
in
cli
jb
fsubrl
xor
fcomps
adc
inc
dec
or
mov
imul
cwtl
icebp
das
jge
ret
push
dec
push
and
pop
adc
push
and
arpl
xchg
fstpt
sub
or
cld
inc
ret
loopne
and
mov
dec
shll
push
loopne
imul
push
jo
lods
rcrb
cld
test
int
jno
lcall
iret
xlat
and
sub
lea
mov
pop
pop
inc
and
inc
scas
xchg
test
lret
cmp
mov
pop
stos
mov
outsb
testb
out
add
inc
outsl
fcmovb
popa
inc
or
and
icebp
out
jg
sub
lret
dec
xlat
pop
loopne
push
fmul
out
dec
fucomip
jp
sub
aas
xchg
xor
stc
lock
add
test
bound
pop
pop
and
out
jbe
daa
ret
xor
in
sti
adc
inc
jecxz
dec
adc
or
jg
addr16
int
ret
cwtl
mov
js
cmp
mov
sbb
mov
imul
sbb
mov
push
cmpsl
jb
mov
out
mov
sbb
cwtl
stos
add
pushf
push
sub
pushf
or
test
or
and
imul
pop
inc
les
mov
rolb
cmpb
xchg
fcoms
aad
rcrl
sbb
adc
gs
cli
mov
fdivs
mov
cmc
les
fsubrl
or
test
push
xchg
loope
arpl
pusha
negl
stos
push
add
into
scas
ds
push
ret
add
mov
cmpsl
xor
in
add
and
cmp
xchg
xchg
out
inc
xor
insl
xor
pop
jbe
pop
xchg
in
aam
xor
cs
test
lahf
out
cwtl
outsl
push
mov
aad
jnp
jmp
xchg
push
cli
enter
and
cmp
js
into
fs
lret
or
lret
clc
lcall
sub
lock
jmp
lcall
gs
jae
xor
in
fnstcw
jge
cli
xor
xor
cmp
in
dec
inc
test
imul
sbb
jl
int
xchg
das
or
cmp
je
icebp
dec
pop
push
cmc
inc
fdivl
dec
jnp
pop
aaa
int3
and
aam
push
mov
mov
insl
stos
jns
adc
bnd
add
test
sbb
outsl
ds
insl
or
xor
cmp
movsb
icebp
cmp
jb
jae
or
ret
ljmp
sbb
and
mov
cmc
inc
inc
cmp
mov
xchg
jecxz
dec
arpl
imul
cltd
jl
push
push
ret
ss
dec
ret
pop
out
in
pusha
xor
ret
push
dec
push
mov
call
aas
adc
mov
jno
js
pop
cmp
pop
inc
lret
and
sbb
js
mov
xchg
fwait
ds
xchg
lahf
or
les
jbe
mov
lea
movsl
dec
push
orl
test
cmp
adc
fsub
inc
pop
xor
sbb
ret
ss
pop
push
aad
insl
push
or
sbb
nop
or
mov
aad
addr16
icebp
adc
add
iret
inc
fimull
add
fwait
or
xor
roll
mov
sti
sbb
mov
inc
sub
mov
rcrl
push
add
jae
ja
shlb
sub
jg
aas
cmp
lcall
decl
pop
movsl
mov
movl
lret
fnstcw
or
das
xchg
repz
or
sub
inc
xchg
push
movsl
mov
inc
in
imul
cmp
cmc
cli
mov
dec
fildl
adc
cmc
int
jl
loop
test
push
xor
sarl
jle
xor
push
adc
sub
adc
mov
into
mov
add
ficoml
rorl
add
pop
pop
f2xm1
in
int
pop
sbb
sub
push
inc
mov
sub
aam
push
xor
imul
into
cmp
loopne
scas
lock
mov
inc
mov
test
nop
dec
xchg
bound
fisubs
inc
push
pop
sbb
pop
rcll
xchg
mov
mov
sub
loopne
jmp
psubq
push
xlat
lods
test
inc
push
iret
xchg
loope
sub
stc
mov
loopne
mov
imul
sbb
and
sbbl
pusha
int3
pxor
xor
adc
mov
stc
mull
pop
jns
dec
sub
xor
adc
int
jecxz
lods
mov
jne
push
dec
subb
push
cmpsl
sarl
mov
push
cs
aas
dec
movsb
xor
mov
jg
lods
push
movsl
shlb
jno
out
notb
dec
addr16
sar
jae
out
lods
fisttpll
cmp
mov
inc
jae
jo
and
jne
xchg
jbe
movb
add
inc
add
out
adc
sub
mov
outsb
xchg
mov
add
xchg
in
gs
clc
inc
stos
addb
lcall
movsl
pop
pop
xor
add
inc
dec
and
xchg
sti
in
push
dec
xor
pusha
push
repz
xchg
test
and
fildl
ret
lahf
jmp
mov
movsl
popf
enter
fisttps
lds
ficomps
lods
cmc
enter
jo
mov
movsb
mov
test
sub
mov
dec
fistpl
push
data16
push
cs
xchg
adc
mov
inc
out
in
stc
cwtl
rclb
ja
fs
inc
out
fdivrl
add
fdiv
or
rorl
pop
mov
mull
xchg
push
and
leave
add
sbb
fisubl
push
add
sub
and
mov
and
rclb
icebp
xchg
neg
cmpb
shlb
andb
and
imul
popl
es
test
lods
pusha
popf
enter
fisubl
test
roll
mov
ljmp
push
test
pop
leave
xchg
xor
mov
insb
das
mov
adc
xchg
out
xchg
cmpsl
sub
aas
out
cmp
dec
adc
popa
mov
xchg
mov
icebp
cmp
iret
xor
insb
adc
and
mov
aam
sbb
pushf
cli
push
iret
inc
fisttps
or
jne
fwait
imul
pop
cmpsb
test
test
stc
ret
pop
mov
push
inc
roll
xor
js
or
int3
jnp
mov
cmc
scas
jae
enter
sub
push
mov
cmp
in
or
dec
dec
negl
hlt
adc
mov
mov
shrl
adc
add
mov
jle
testb
inc
cs
adc
push
cmp
hlt
xchg
or
mov
or
dec
adc
sub
pop
subl
pop
push
lds
out
and
cmp
out
out
mov
bound
fldl2t
cmp
push
popf
subb
push
icebp
into
xchg
repnz
call
and
notb
adc
sbb
into
jle
sub
in
into
movsl
in
push
push
adc
ljmp
add
inc
jno
sbb
andl
cltd
mov
int3
xor
lds
and
aaa
testl
aad
inc
add
mov
ljmp
loopne
or
and
sub
rcll
cmp
outsl
dec
sbb
cwtl
mov
lahf
mov
mov
ds
or
cmp
mov
cmp
lea
sbb
lahf
xchg
rcrl
jp
aaa
imul
adc
mov
hlt
xor
dec
mov
add
push
outsl
dec
or
stos
xchg
popf
andb
cmp
insb
popf
pop
loopne
outsb
dec
andl
sub
jge
sti
sarl
mov
inc
and
enter
push
xor
jp
cmp
jmp
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
pushf
cld
lods
int3
mov
mov
or
sbb
sub
cmp
dec
sub
cmp
or
sbb
in
lods
mov
mov
fcompl
adc
mov
or
sbb
fmull
dec
sub
cmp
sub
sbb
in
sar
int3
pushf
lods
int3
mov
or
jecxz
xchg
cmp
jecxz
call
dec
fsubl
lea
cmp
test
ja
jl
pop
mov
or
sbb
in
insl
cld
insl
int3
dec
fdivrl
mov
jl
inc
subps
or
sbb
dec
je
inc
push
push
stos
and
xor
add
insb
out
mov
mov
pop
out
jle
js
test
mov
xor
pmuludq
out
adcl
mov
hlt
push
xor
out
loopne
pop
mov
shlb
in
jae
arpl
adc
add
cli
arpl
add
test
adc
sub
inc
sub
adc
insb
lea
mov
aaa
fmuls
lods
in
jge
mov
mov
or
pushf
fnsave
mov
repz
popf
cmp
and
in
mov
cmc
dec
adc
enter
pop
inc
lods
sub
pop
jne
popf
adc
adc
cmpsb
dec
std
cld
es
add
adc
lcall
jge
lea
pusha
insl
fcompl
pop
fsubrl
mov
in
cmc
aam
dec
aam
movsl
adc
cs
in
or
pop
or
pop
stc
pusha
fisttpl
jmp
leave
push
clc
js
jne
stos
insl
mov
dec
incb
jno
dec
scas
decl
mov
cmp
imul
mov
loopne
mov
std
insb
in
jl
dec
int
mov
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
in
scas
stos
add
and
mov
and
sahf
push
and
cli
enter
xchg
pop
call
add
jecxz
xchg
filds
push
or
inc
out
cmp
pusha
bound
inc
mov
outsb
mulb
mov
or
in
repz
mov
mov
out
repz
fwait
and
fisttpl
int3
test
jge
cmp
dec
inc
fmuls
cld
and
adc
mov
cmc
or
pop
fbstp
sbb
arpl
or
xor
in
inc
andl
cmp
test
jne
mov
push
daa
fiadds
xlat
fcompl
addl
push
or
inc
es
enter
or
dec
and
iret
cmpsl
jecxz
das
test
dec
fidivrs
out
mov
shl
shll
jno
mov
mov
sbb
xchg
adc
fdiv
in
dec
outsl
fsubrs
push
pop
stos
jl
std
mulb
les
sub
mov
lret
out
pop
jb
sbb
pop
popf
mov
subl
sbb
jbe
popl
ret
jle
mov
scas
in
mov
pop
sub
inc
inc
jle
mov
insl
xor
dec
mov
add
dec
xchg
out
fisttps
jnp
xchg
xchg
jo
mov
xor
jp
stos
test
inc
jno,pn
daa
push
js
pushf
fisttpll
repz
hlt
dec
ret
test
inc
xor
lret
push
femms
jp
and
mov
inc
inc
mov
sahf
push
mov
jne
jl
cmp
jecxz
or
xchg
popa
push
mov
arpl
mov
mov
adc
dec
jo
pop
adc
das
sub
fmulp
mov
aas
daa
notb
adc
mov
or
push
aaa
inc
out
pop
jp
cli
xor
jecxz
mov
aaa
test
sbb
mov
dec
pop
sub
lret
cmp
and
jecxz
lea
outsb
xlat
fs
add
xor
aaa
cmc
mov
ja
pop
cmp
push
cmp
mov
sub
push
test
ljmp
xchg
push
cld
lret
mov
nop
dec
mov
or
xchg
push
das
lahf
jge
aas
imul
and
aaa
aaa
inc
lds
stc
fcoml
addr16
cmpsb
push
adc
or
inc
loop
dec
or
jae
fsubrl
push
sub
jae
pop
sti
adc
xchg
fdivs
add
cmp
fnsave
jb
jnp
sbb
out
sub
and
xchg
xchg
out
push
ja
adc
and
jno
imul
dec
adc
cli
insl
dec
lcall
movsl
andb
lea
xchg
push
cmp
fists
adc
and
sbb
dec
pushf
loope
mov
jbe
or
pop
mov
jb
into
gs
adc
adc
push
mov
stc
mov
in
mov
fucomip
pushf
or
sbb
out
je
push
addr16
dec
pop
xor
out
addr16
add
dec
loopne
sbb
push
jo
xchg
or
mov
adc
add
insl
ljmp
outsb
pop
call
cli
add
xor
push
std
mov
testl
pop
or
sbb
and
aaa
lret
ss
sahf
and
pop
pop
cmp
fistpl
imul
jecxz
outsb
mov
popa
xor
lea
dec
hlt
dec
andl
repnz
cli
cli
push
and
sbb
ss
lea
stc
out
mov
in
or
mov
sub
andb
sub
mov
inc
fistpl
in
in
ficoms
xchg
movsl
push
shlb
mov
lret
mov
adc
stos
rcr
out
fcoms
stc
nop
rorb
shll
inc
inc
popa
pop
xor
or
inc
mov
push
scas
jecxz
mov
test
outsl
hlt
pop
cld
lret
fwait
test
leave
push
add
data16
mov
jo
jnp
scas
push
push
or
test
pop
push
add
roll
push
test
stos
and
int3
jp
daa
inc
popa
rcll
cmp
arpl
sbb
mov
nop
sub
jne
iret
das
mov
sub
cmp
ja
jmp
into
cmp
dec
movsb
fnstcw
and
fdivrs
sahf
xchg
sbb
leave
std
mov
mov
jo
sahf
mov
pop
fists
ds
xchg
sbb
add
cmp
andl
push
or
xchg
inc
sbb
repnz
pop
cmp
mov
fistpll
and
fwait
popf
adc
sarb
cli
into
add
sti
or
pop
hlt
jnp
faddl
stc
enter
nop
data16
lock
enter
xchg
cwtl
js
mov
mov
and
out
xchg
test
sub
insl
push
cli
sub
clc
ret
lods
mov
push
cltd
and
xor
sbb
clc
sti
pop
xor
adc
test
out
inc
mov
in
inc
aaa
test
mov
mov
test
mov
aaa
xor
cmpsb
fwait
xchg
btc
cld
jmp
insb
sbb
mov
or
xchg
enter
pop
les
es
mov
xchg
mov
push
push
inc
pop
sub
jns
gs
or
cmp
fs
sub
xor
inc
sarb
xchg
jae
nop
test
outsl
stos
test
sbb
arpl
out
dec
add
xor
repnz
dec
jns
subl
cwtl
std
loopne
add
or
lds
lret
jg
xor
push
dec
fwait
cltd
and
xor
dec
cmp
sbbb
or
xor
adc
mov
imul
bound
xor
std
mov
mov
dec
or
mov
adc
cmp
cmp
pushf
loope
add
pop
stc
push
push
add
jb
fcoml
mov
fsubrl
insb
mov
shrb
dec
pop
xchg
dec
sbb
push
ret
insb
andl
movsb
or
nop
dec
ret
xlat
mov
sub
push
push
xchg
mov
lds
xor
dec
xchg
adc
test
pushf
pusha
aas
ficomps
stc
aam
movsb
adc
push
scas
out
repnz
fdivrl
lea
adc
faddp
rorb
fisubrs
xor
stc
sbb
and
vminss
outsb
adc
mov
jg
fsts
or
popfw
hlt
mov
cmp
xchg
inc
js
lods
cmp
mov
arpl
int
dec
movsb
out
idivl
les
cli
mov
out
roll
loope
inc
mov
mov
sub
aad
cmpsb
inc
xchg
scas
or
loopne
ret
sub
inc
cmpsl
shll
lret
and
inc
mov
test
jno
loope
nop
gs
into
shlb
daa
mov
out
push
mov
popf
inc
jns
mov
sbb
mov
add
loopne
cltd
fcmovnbe
jecxz
in
sbb
jge
push
push
mov
mov
pop
jo
mov
xchg
mov
cs
les
mov
bound
loop
dec
repz
add
aad
mov
int3
xchg
test
adc
aam
push
sub
add
js
lods
jmp
mov
fwait
jne
sti
lods
enter
lock
and
and
sub
push
vpcmpgtb
xlat
fmull
push
mov
out
loope
dec
movsl
xor
sub
in
add
push
jbe
lcall
inc
lods
add
inc
movsb
cld
fisttpl
call
sahf
test
adc
hlt
mov
mov
enter
das
and
lds
push
dec
pusha
xor
addr16
mov
hlt
ja
xchg
pop
cmpb
insl
inc
test
xor
mov
adc
inc
mov
je
add
adc
sbb
fcmovne
mov
iret
jbe
jmp
inc
xchg
xor
rorb
jnp
push
cmp
int
pop
std
pop
inc
adc
flds
xchg
call
cmp
mov
je
nop
icebp
pop
jb
outsl
repz
out
sahf
cmpsl
ficoms
int3
insl
or
ret
jecxz
xor
imul
cltd
or
movsb
cmp
jmp
sbb
popa
jmp
out
cmpsl
or
dec
mov
jge
lock
push
lret
rcrb
jmp
sahf
loopne
mov
sbb
add
popa
adc
std
clc
push
pop
pop
xor
stc
inc
jmp
pop
mov
mov
jle
add
xor
gs
loope
sub
cli
cmp
imul
stos
xor
mov
sub
aas
scas
mov
push
nop
or
pushf
mov
sub
add
repz
in
in
inc
inc
adc
xchg
jae
in
push
daa
sti
mov
push
inc
mov
fs
dec
out
cmpsb
movups
inc
dec
ss
xor
mov
out
insb
fs
pop
ret
hlt
adc
lock
gs
leave
loope
jae
scas
jg
std
lods
sub
test
adc
pop
push
add
rolb
pop
mov
or
and
mov
pop
in
pop
or
repz
imull
mov
sbb
push
ljmp
outsb
ljmp
test
int
push
cwtl
lock
xor
or
sub
fdivr
cs
push
mov
sbb
and
sti
mov
mov
cli
movsl
pop
jno
or
sbb
pop
inc
mov
xor
stos
dec
shr
mov
es
out
sbb
sahf
ss
pop
aaa
mov
mov
jae
repz
inc
mov
insb
retw
xor
and
enter
in
loop
cmpl
stos
xlat
or
push
stos
les
pop
jecxz
push
adc
mov
cmc
insl
xchg
bound
cltd
enter
inc
xor
push
aaa
in
out
out
scas
mov
sub
adc
lret
jns
neg
pop
sub
jmp
add
xor
orl
dec
or
clc
or
daa
sarl
adc
lods
mov
fsub
in
cmp
dec
lret
aas
mov
iret
adc
xchg
movsb
jg
inc
movsb
outsl
fisubl
xor
aam
fst
roll
mov
or
int
mov
xchg
cmp
adc
sbb
arpl
popa
and
jecxz
leave
xor
fidivs
fdivr
arpl
lcall
mov
push
cmp
add
iret
pop
push
pop
push
fldcw
push
inc
jge
jge
aad
movsb
push
nop
push
ret
sbb
jns
shlb
std
adc
push
mov
sti
sub
xchg
mov
loopne
mov
fldl
pop
std
out
test
leave
mov
mov
scas
into
adc
push
mov
cmpsb
jge
test
into
pop
test
sub
loop
fcomps
test
out
bound
in
bsr
push
dec
mov
sti
and
jns
and
jns
cmp
mov
sbb
xchg
adc
imull
inc
and
push
fcompl
adc
xor
pop
pop
movsl
std
mov
dec
push
jmp
pop
fidivrl
sub
repz
fcomps
lock
pop
push
shrb
xchg
add
pop
std
leave
cmp
adcb
ja
fsubrl
mov
pop
or
cmp
push
cwtl
xchg
in
add
pop
lret
xchg
mov
or
imul
mov
sbb
scas
mov
xchg
sbb
adc
fisubl
sub
mov
cltd
fdivrl
xchg
sbb
roll
and
inc
jo
out
leave
or
test
aam
outsl
mov
adc
jg
inc
push
and
pop
push
ret
mov
mov
xor
test
mov
ja
out
mov
adc
negl
xchg
test
in
fs
mov
sub
and
jl
test
cmp
push
test
sub
fwait
push
push
dec
xchg
pop
or
cld
sbb
adc
adc
inc
jno
push
jns
fnstcw
mov
pop
xchg
ret
add
int3
sbb
sbb
adc
out
hlt
push
cmp
pop
stc
mov
loopne
xchg
inc
jmp
lahf
inc
testb
rolb
mov
mov
sbb
leave
pushf
clc
mov
pop
bound
cli
add
gs
mov
mov
icebp
push
and
sahf
lcall
xor
mov
xchg
add
insl
mov
mov
inc
jns
cmp
sbb
cmp
rcll
jl
xchg
shl
clc
call
test
shll
cli
and
ds
leave
mov
xchg
jle
call
sub
call
flds
mov
xlat
mov
sahf
cmpsb
std
fcomps
cmp
push
mov
fnstsw
and
dec
repz
jno
mov
dec
stos
hlt
sbb
lahf
dec
adc
lock
pop
in
pop
addr16
out
lods
jmp
ret
cmp
hlt
sbb
cwtl
mov
inc
stc
orb
cmp
mov
mov
push
jecxz
aad
hlt
pushf
mov
pop
enter
ror
int3
scas
jge
xor
mov
loope
inc
pushf
and
jbe
push
jnp
mov
icebp
scas
inc
ffreep
push
adc
jecxz
pop
pusha
test
aaa
jmp
ja
test
mov
mov
xor
and
je
notb
rcrb
andb
repnz
push
jle
jmp
xchg
arpl
pushw
cs
sarl
mov
test
ret
out
lea
fldcw
push
fildl
xchg
sbb
outsb
xor
push
sub
xorb
dec
inc
arpl
and
sbb
int3
ja
clc
or
sbb
sub
inc
jne
sar
outsb
fpatan
es
inc
jae
adc
stc
ret
sub
int3
xchg
xchg
bound
popa
adc
and
ret
arpl
mov
lock
push
les
fsubrs
mov
mov
xchg
imul
test
outsb
movsl
mov
in
and
mov
push
fists
jmp
call
push
mov
orl
add
ret
lods
jne
lahf
icebp
pop
xor
push
mov
mov
mov
popa
insb
into
into
xchg
fstpl
push
out
loopne
sti
mov
shll
imul
pop
aas
dec
dec
addr16
dec
mov
pusha
mov
jnp
fisubl
dec
pop
int3
enter
pusha
xchg
xchg
in
push
hlt
in
adc
pop
add
into
pop
sahf
scas
lcall
jp
scas
sub
xor
enter
dec
pop
cmpl
push
mov
fimuls
test
test
repz
imul
xor
sub
in
loopne
cli
adc
xor
and
test
lds
push
sbb
repnz
jne
mov
xor
cmp
mov
sahf
xchg
adcb
or
popa
jo
call
stc
test
ret
es
jns
cmp
jecxz
cmc
lahf
aas
sbb
fsubs
mov
idiv
jmp
outsb
push
add
popf
mov
bound
int
rorb
and
ror
aad
lret
or
add
into
aad
adc
dec
dec
jg
dec
adc
pop
outsl
and
jp
imul
sbb
clc
inc
data16
xchg
js
insb
hlt
arpl
jmp
and
mov
cld
push
pop
aaa
cltd
inc
xchg
in
push
cltd
das
lods
gs
push
ret
daa
jno
xor
outsl
jge
push
mov
divl
jle
aam
push
sub
dec
aaa
int3
sbb
inc
pop
mov
dec
mov
jmp
mov
xchg
pop
pop
push
sub
xchg
xchg
and
or
xorl
or
jne
xchg
ret
cld
cmpsb
and
test
js
iret
sahf
xchg
gs
push
negb
and
aad
out
movsb
sti
sub
pop
dec
stos
notl
loope
sti
stos
jp
repz
mov
lock
fdivl
xchg
lods
lods
jae
mov
sbb
ss
mov
jecxz
inc
gs
movsl
inc
or
bound
mov
rcr
rcll
out
pop
loope
in
call
sbb
sti
xor
pop
xchg
aas
cmp
push
fisubrs
push
push
adc
jb
mov
inc
arpl
cmp
cmp
out
mov
adc
xor
jnp
or
gs
push
mov
in
andb
lock
mov
adc
int3
push
cmp
xchg
mov
sub
std
fcomip
int
outsl
jmp
pop
xchg
shll
sbb
jae
adc
lcall
jp
sub
fisubrs
adc
aas
xor
jp
sahf
mov
sbb
lahf
jecxz
adc
push
jg
mov
rcrl
xchg
insl
stc
mov
loope
and
out
dec
jg
rol
adc
pop
outsb
and
cmp
dec
push
lea
push
inc
call
ret
and
and
rorb
mov
mov
mov
out
jmp
mov
ret
ss
jae
pop
adc
iret
dec
dec
aad
ret
outsb
sbb
loop
aaa
push
adc
push
mov
in
cmp
mov
mov
js
xor
adc
sub
mov
scas
lcall
push
mov
mov
hlt
loope
sar
dec
pop
lret
push
mov
stos
nop
jbe
stos
pop
xchg
scas
loopne
add
int
dec
add
xchg
insb
and
pop
imul
aam
aam
repnz
in
out
dec
pop
call
ret
sti
jno
lock
lcall
inc
xchg
push
or
pop
je
or
int3
sbb
dec
and
stos
dec
inc
lds
mov
into
push
shll
mov
mov
mov
ss
scas
nop
loope
shrl
inc
cmp
jbe
movsl
pop
or
lret
sub
pop
lock
dec
jns
inc
and
jbe
sti
adc
out
cltd
cltd
sub
jecxz
fsubs
adc
imul
sti
ret
aas
popf
dec
ds
sub
inc
out
pop
or
and
sahf
dec
push
dec
ret
xchg
push
sbbb
mov
xchg
xor
aam
rcrl
ret
pop
push
cmc
dec
sbb
cld
mov
insb
fiadds
mov
pop
pop
lock
shrl
dec
sbb
shrl
xlat
imulb
xorl
movsb
stos
or
jo
sub
cmc
jno
rcr
clc
jbe
mov
inc
and
out
or
jno
nop
mov
bound
scas
inc
cmp
imul
mov
cmc
xor
sub
sbb
ja
sbb
pop
mov
cs
stc
stos
sbb
jb,pt
push
in
iret
inc
jb
fidivl
insl
mov
in
sbb
clc
ljmp
fs
sti
jns
sub
sub
mov
xchg
outsl
dec
repz
insl
int
mov
lea
ja
cmp
js
out
adc
je
cs
jecxz
shl
mov
dec
into
push
loope
adc
fnstenv
movsb
cmpsl
push
test
push
or
pop
ja
stos
sahf
ret
add
sub
jle
mov
aam
daa
cmp
fcompl
jo
hlt
pusha
xchg
adc
jno
lock
icebp
fnsave
loope
lock
mov
mov
cmp
mov
cmp
nop
in
mov
cs
mov
mov
popl
movsb
test
push
pop
aas
and
andb
ret
int
lods
add
push
pop
sub
mov
inc
adc
lds
jg
dec
sub
add
es
sub
fcmovnbe
xor
xchg
adcb
cli
sbb
mov
in
imul
fildl
ja
loop
jg
sar
inc
and
pop
inc
xor
enter
mov
lea
scas
fimull
sbb
out
clc
inc
adc
and
js
sub
jmp
jle
adc
pop
lods
ljmp
aaa
scas
test
pop
test
xchg
sub
call
fisttpl
push
loop
jbe
add
decb
out
pop
push
cs
add
out
filds
inc
pop
lcall
ds
mov
adc
fimuls
out
imul
and
fidivs
sub
je
pushf
add
sarl
fsubrp
and
in
adcb
sub
in
jns
jo
push
xlat
dec
pop
pop
test
insl
out
dec
sub
mov
or
sub
stos
mov
fiaddl
les
iret
call
mov
cmp
sbb
arpl
adc
loope
inc
inc
fidivrl
aam
mov
adc
adc
pop
js
cmp
xor
loopne
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
jl
dec
int
mov
or
sbb
call
dec
fdivrs
mov
js
dec
int
mov
add
pop
sbb
dec
pushf
cmp
or
pop
add
int
lret
inc
bound
xchg
jl
mov
lds
loopne
mov
push
pop
add
add
pop
add
pushf
add
cmp
jns
push
add
cltd
add
adc
push
add
outsl
push
sbb
xchg
jg
and
sub
add
xor
add
inc
add
add
add
faddl
sub
mov
lea
test
in
stc
add
add
add
add
jmp
inc
add
add
jmp
test
pop
add
add
add
syscall
testb
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
mov
add
mov
add
pop
add
add
add
add
daa
add
dec
add
add
add
or
int3
add
lcall
add
add
add
add
add
add
add
add
add
and
add
add
add
add
jo
bound
arpl
addl
jns
testb
add
add
add
add
sub
add
add
add
jmp
xchg
add
add
add
clc
add
or
jbe
jo
push
add
add
add
add
jp
enter
into
add
sbb
push
add
pop
add
cmp
in
jmp
xor
mov
aas
add
add
add
add
add
or
add
add
jae
mov
mov
add
add
add
add
mov
xchg
xchg
add
mov
add
and
mov
stc
add
add
add
add
add
add
add
add
push
add
add
or
dec
add
add
add
add
add
sti
add
add
add
mov
add
add
jns
cltd
add
pop
add
out
stc
add
add
add
add
cmp
scas
add
add
scas
add
and
stos
add
add
add
add
inc
add
add
add
add
push
add
add
xchg
mov
inc
add
bound
roll
add
add
pop
add
add
jno
arpl
pop
add
push
jmp
mov
adc
sbb
and
add
out
add
add
add
add
dec
add
add
add
add
jbe
dec
add
add
add
xchg
mov
add
add
add
imul
mov
add
xchg
push
mov
add
add
add
lret
add
add
add
add
add
enter
lods
add
out
syscall
dec
add
add
ret
add
add
add
push
dec
add
add
add
add
add
filds
jnp
xor
add
add
mov
add
or
add
out
leave
add
add
add
filds
sbb
scas
add
add
add
add
add
add
dec
add
add
add
loop
dec
add
add
add
add
add
add
add
add
add
add
add
add
sub
adc
lret
add
add
add
pop
add
add
shl
in
inc
cwtl
fchs
cltd
mov
scas
in
mov
test
xchg
filds
dec
mov
xchg
icebp
add
sbb
inc
xchg
movsl
pop
loopne
jp
jge
xor
cmp
jb
int3
sti
pop
lret
cmp
push
xor
shrb
js
xchg
push
mov
movsb
and
sub
int3
push
arpl
insb
push
test
imul
mov
cwtl
adc
test
adc
int
sbb
add
lock
jl
push
push
cmp
ss
sub
addb
inc
add
mov
fwait
rcrl
fdivrs
cmp
and
arpl
fisttpl
aad
test
icebp
cmpsl
and
cmp
dec
inc
xor
push
fimull
idivl
cld
dec
pop
mov
push
adc
imul
ret
int3
inc
mov
sahf
in
sub
pop
mov
int3
int
clc
mov
pop
ret
sub
nop
call
cmpsl
or
into
and
pushf
sbb
addb
push
and
test
mov
push
and
jmp
pop
mov
in
rol
sub
push
cmp
mov
enter
or
inc
jae
fcomi
and
js
sbb
add
adc
out
or
pop
andb
mov
gs
test
lahf
stos
cmp
shlb
sub
pushf
mov
data16
mov
int
mov
cmp
loopne
sbb
in
sbb
push
dec
andl
xlat
pop
dec
lcall
sbb
rcl
leave
sub
out
pop
inc
lods
add
shll
push
aad
idivb
jns
xchg
dec
sbb
sarb
inc
lret
push
inc
neg
imul
fs
and
out
in
xchg
pushf
in
dec
cli
fcoml
dec
mov
hlt
jo
jne
mov
imul
mov
das
aas
int
xorb
int3
mov
cmpsb
repz
stc
xchg
xor
jmp
and
inc
test
scas
mov
fldt
adc
inc
daa
test
loop
cmpsb
lods
fildll
adc
mov
cld
je
imul
jl
sti
mov
ljmp
adc
repnz
fwait
aam
inc
add
repz
ja
outsl
xchg
mov
out
and
inc
sbb
cmp
mov
and
push
mov
cmp
push
push
enter
movsb
dec
in
inc
or
adc
cmp
add
adc
cmp
pusha
cmpsb
sub
add
ficompl
andb
pop
xor
ljmp
and
mov
sub
jl
fwait
add
jg
das
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
