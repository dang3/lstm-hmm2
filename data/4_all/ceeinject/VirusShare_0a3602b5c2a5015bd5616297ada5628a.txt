call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jb
cmp
ja
or
in
jnp
and
call
push
fadds
mov
movsl
cmp
js
dec
aad
mov
in
adc
stc
gs
xor
add
push
aad
lds
addr16
fs
and
ss
cmp
inc
std
jbe
pusha
aad
loopne
pop
mov
push
inc
fdivl
xor
sub
mov
or
or
scas
cmc
xchg
fstl
fidivl
xchg
popa
push
jne
lods
and
push
adc
mov
test
fiaddl
pop
es
nop
stos
arpl
fmuls
pop
pusha
mov
std
clc
lock
dec
push
insl
in
mov
rcr
mov
stos
fwait
mov
inc
enter
push
lds
jge
insb
pop
mov
inc
imul
push
and
inc
test
sub
push
and
jbe
in
cltd
adc
jne
sub
push
call
xchg
jne
dec
aad
lds
adc
loopne
enter
pop
mov
in
xchg
jl
or
adc
xchg
fmull
cli
jo
jno
ss
add
sarb
shrb
test
push
test
stos
jle
pop
int
in
pusha
lea
mov
fsubrs
inc
icebp
or
insl
out
loopne
fstpt
dec
aad
lds
adc
clc
gs
sub
sbb
dec
aad
lds
adc
clc
gs
sub
jo
inc
adcl
fmul
mov
push
stos
dec
out
out
jne
sub
addr16
sub
adc
dec
xchg
rcr
xchg
mov
dec
push
rcrl
push
mov
pop
int3
movsb
lcall
cwtl
scas
mov
sbb
in
pop
bound
lods
cltd
pop
and
mov
add
popa
cltd
mov
icebp
outsl
inc
sbb
je
jno
movsl
sbb
push
inc
fldcw
mov
mov
cwtl
negl
inc
xlat
rclb
sbb
xchg
popl
mov
insl
pusha
stos
jp
enter
subb
ss
lods
dec
jns
cmp
out
mov
adc
das
popf
sbb
pop
enter
rcrl
push
fcom
cmpb
adc
sbb
mov
cmp
sub
cli
in
jle
jae
loop
sbb
lret
stos
clc
popf
das
push
sbb
pop
std
mov
push
es
loop
js
mov
out
nop
mov
xorl
xchg
push
pop
in
lahf
and
fcoml
or
jne
in
sbb
inc
or
in
not
inc
cmp
lods
in
pop
push
lret
movsb
notl
or
dec
jns
mov
xchg
mov
jmp
add
xchg
nop
xchg
xchg
addr16
cli
aas
sbb
fwait
aam
pop
mulb
adcb
or
mov
lret
daa
fcomps
orl
cli
jne
shll
lret
fsubl
mov
out
mov
sub
out
js
ja
data16
cwtl
jnp
cwtl
pop
push
dec
pop
movsb
cmp
fwait
pop
arpl
mov
xor
in
jp
inc
dec
rorb
in
sahf
movsl
push
addr16
xchg
ds
call
or
sbb
lock
jle
mov
mov
sub
or
push
clc
arpl
and
dec
inc
in
arpl
aam
in
cmp
cmc
shl
xor
sub
sarl
sbb
adc
ret
push
jns
popf
mov
lcall
icebp
sub
lea
sub
enter
enter
xchg
sbb
insb
lret
pop
addb
les
cs
adc
aad
test
test
xchg
inc
cmpl
lds
inc
popf
sarl
addr16
xchg
or
ret
or
mov
int
out
jp
inc
sbb
lds
in
cmpsl
and
sub
mov
aad
adc
ret
mov
sub
push
xchg
out
xchg
dec
pop
out
mov
mov
in
sbb
mov
ret
jge
push
in
cmp
movsl
enter
mov
mov
dec
pop
lds
push
mov
sub
mov
iret
stos
insl
imul
scas
jl
pop
add
in
imul
jne
sbb
cs
fstpt
and
push
fdivrs
cld
int
fdivs
aaa
mov
stos
push
incb
leave
inc
ret
outsb
repz
out
mov
sub
lods
insb
and
dec
fs
push
or
mov
sub
icebp
push
mov
or
mov
int3
pop
mov
stos
inc
mov
xor
idivl
test
fnstenv
lods
jno
sub
outsl
clc
rclb
pop
arpl
pusha
fisttpll
xchg
pop
mov
or
add
mov
pop
imul
dec
rorl
adc
cmpsb
ror
fisttps
imul
adc
lods
loopne
repz
cmpsb
flds
mov
sbb
outsl
call
pop
xchg
xor
sbb
icebp
xchg
push
sub
fsubr
mov
xchg
sti
mov
pop
leave
sarw
in
fimull
mov
ss
mov
mov
fadd
inc
insl
pop
sbbb
jb
stc
mov
sbb
js
xor
stos
bound
sbb
ret
out
adc
cltd
lock
jle
lock
cld
scas
cmpsl
adc
xchg
shll
fstpl
jle
out
dec
jo
mov
inc
test
xor
jge
xchg
hlt
xlat
mov
int
push
leave
ja
cli
push
adc
outsb
in
or
sub
lods
inc
loop
out
jnp
stos
push
sbb
mov
xchg
mov
cmp
push
push
xor
outsb
clc
push
adc
aaa
std
add
shrl
les
dec
push
out
mov
loop
maxps
mov
mov
dec
and
into
fistpl
loopne
mov
xchg
sub
cs
add
repnz
insl
inc
test
push
push
dec
clc
fnstenv
aas
dec
jne
negb
and
clc
push
fcoms
mov
es
jb
mov
mov
iret
xchg
jns
ficoml
movsl
or
into
mov
rolb
enter
cwtl
push
adcb
xchg
fwait
sub
insb
push
out
pop
scas
xlat
mov
dec
into
int
jno
aam
inc
xor
fcomip
mov
mov
cmp
cmp
sbb
jae
aad
jbe
or
jl
xchg
js
sub
testl
in
lret
xchg
pop
sbb
mov
jns
and
in
stc
movsb
ljmp
fdivrl
xchg
sub
xchg
lret
inc
mov
sub
mov
fdiv
insb
mov
lret
aaa
mov
popf
movsl
je
mov
int
repz
rcrl
add
hlt
ret
inc
je
lods
jb
fstpt
cs
cld
out
das
xlat
pop
sahf
dec
scas
ret
js
mov
adc
repnz
mov
rorb
ret
scas
insb
and
fisubrl
out
cmpsl
push
mulb
out
add
lds
mov
jbe
sbb
mov
loope
sahf
inc
shll
sbb
cld
mov
xchg
int
pop
push
out
shrl
pop
cmp
inc
adc
arpl
or
jne
ja
sub
out
xor
push
inc
jg
dec
dec
mov
scas
inc
and
ucomiss
mov
addr16
and
mov
cltd
repz
shrb
jnp
adc
repnz
std
leave
lock
in
dec
out
xchg
push
shlb
arpl
rorb
imull
adc
js
test
mov
loop
test
jb
jae
xchg
xchg
divl
add
popa
rclb
sub
lods
pop
mov
hlt
add
insl
stos
xchg
cmp
js
fidivs
push
int
sub
es
leave
ret
mov
insl
in
sbb
pushl
in
sbb
nop
mov
pop
out
cmpsb
sbb
pop
movsb
pushf
mov
lea
sbb
mov
inc
and
push
test
adc
iret
mov
repnz
inc
adc
scas
lret
scas
rolb
cmp
mov
insl
shlb
jnp
scas
cmp
dec
lock
mov
enter
or
les
xchg
ljmp
sub
cwtl
popl
movsl
outsb
insb
xlat
aaa
xor
xor
stos
lcall
fiadds
sbb
pop
inc
roll
pop
pop
or
inc
sbb
out
mov
mov
loopne
jno
fistpll
adc
push
int
repz
sbb
hlt
lret
and
les
ficompl
and
sub
mov
push
mov
jno
test
or
filds
push
pop
fbstp
adc
sahf
mov
ret
dec
stos
xor
jne
insl
cmp
jmp
sub
mov
lcall
mov
xlat
neg
outsl
xchg
xchg
xchg
or
repz
ret
bound
loopne
cs
mov
inc
nop
jl
lahf
push
jecxz
cmc
mov
mov
sarl
into
xor
add
movsl
shl
lcall
sub
jnp
in
ljmp
repnz
aam
dec
pop
in
mov
popa
jb
and
push
sbb
adc
sarl
lea
cmp
and
lods
mov
pop
and
xchg
mov
mov
mov
adc
andb
pop
aas
call
cwtl
clc
iret
xchg
xchg
mov
mov
mov
inc
mov
das
or
lret
aam
jae
xor
repnz
cli
push
cmpsl
imul
mov
das
mov
dec
dec
mov
aad
outsb
pop
iret
popw
or
mov
addl
sub
push
or
and
lods
fstpl
mov
bound
jmp
loope
mov
imul
icebp
xor
gs
add
mull
mov
push
imul
mov
mov
xchg
pop
mov
sub
rolb
rorl
rcrb
sbb
fisttpl
lods
sub
push
lcall
sub
mov
inc
inc
sub
and
cmp
lcall
push
dec
imul
push
push
push
mov
dec
jo
mov
ja
repz
mov
and
cwtl
mov
xchg
xchg
xor
fs
sub
push
dec
fwait
les
xchg
cpuid
pop
enter
stc
ss
dec
sbb
mov
pop
push
mov
inc
fildll
xchg
xchg
ds
xchg
jo
into
imulb
or
sub
dec
fucomp
fstl
push
or
lods
lods
pop
inc
gs
cwtl
stos
sbb
sarb
adc
or
xchg
dec
test
jle
sbb
jne
lods
xrelease
sbbb
jmp
movsl
jmp
les
xor
cmp
ret
imul
daa
shlb
push
sbb
out
into
cmp
popf
ret
inc
aad
and
loopne
xchg
cmp
mov
notb
dec
xor
lahf
cmc
rcll
mov
push
xor
inc
cmp
pop
in
xor
gs
lahf
call
call
gs
insl
sti
ss
movsl
and
shrb
jecxz
popf
push
xchg
jl
aas
sarl
psllq
ficompl
pop
adc
xchg
out
cmpsb
lahf
jmp
aad
ret
ficomps
or
lret
jb
cmp
repnz
cmp
sbb
testl
insb
pop
js
dec
add
fstps
mov
pop
mov
push
iret
mov
xor
mov
add
sbb
bnd
or
stos
sub
ficompl
gs
out
pop
push
orl
stc
pop
movsl
rcl
add
fstps
mov
rcll
fildl
sub
push
push
pushf
enter
and
loopne
sbb
es
decb
xchg
xchg
insb
adcl
ret
aam
sbb
dec
sub
outsl
mov
fcomps
imul
xor
test
adc
mov
mov
das
mov
mov
outsb
and
xchg
outsl
mov
and
pushf
dec
jl
mov
push
pop
lcall
mov
xor
cmp
mov
shrb
lret
out
sbb
dec
inc
cltd
movsb
sub
out
das
push
mov
push
xchg
push
outsb
mov
fadds
xor
loopne
mov
dec
jno
push
fldl
mov
out
mov
or
xchg
cmp
fisubrs
out
dec
ds
and
in
xchg
pop
cmp
dec
adc
addr16
inc
sub
mov
and
xor
ljmp
pop
xchg
dec
mov
jl
or
or
mov
stos
sub
push
pop
inc
insl
repnz
mul
dec
leave
imul
fisttps
xchg
fs
add
add
mov
add
xchg
ds
pop
jmp
hlt
test
fld
mov
loopne
mov
inc
shll
push
mov
or
repz
aad
pop
push
jno
cmc
jns
pop
push
adc
add
dec
leave
hlt
add
jg
push
add
in
push
sbb
push
out
sti
out
adc
test
add
fdivl
std
loope
mov
fisubs
inc
push
test
sub
xchg
push
test
cli
mov
or
ficoms
cltd
sub
cld
xchg
int3
out
sub
movsl
js
add
call
inc
in
insb
popf
sbb
or
mov
outsb
out
inc
int3
loop
add
and
movsl
push
xchg
push
xchg
push
mov
incb
mov
mov
dec
inc
sahf
mov
sbb
jmp
jp
aaa
repz
inc
mov
lods
inc
cmp
mov
push
mov
or
fidivs
pop
insb
cmp
xor
or
jo
ret
lret
and
inc
push
sarl
jmp
test
dec
les
inc
inc
mov
cmp
pusha
add
lret
cmp
aaa
inc
js
sahf
ret
push
inc
add
or
sbb
stc
ret
and
aas
sub
push
jbe
dec
cs
mov
dec
mov
xchg
lock
mov
adc
push
test
testb
ds
xor
add
in
jno
scas
mov
ret
mov
and
xchg
stos
mov
push
ds
icebp
lahf
faddp
aam
aas
std
cltd
mov
push
dec
sub
sub
in
clc
push
dec
cmp
ljmp
xlat
fnsave
jns
jne
int3
psubsw
outsl
mov
mov
pop
imul
pusha
or
adcl
sbb
inc
faddp
sub
push
push
push
lret
sbb
jnp
jmp
movsb
cmpsl
rorl
pop
mov
rcpps
xchg
testl
mov
data16
lea
and
dec
lcall
and
mov
mov
mov
subl
xchg
dec
add
scas
and
jae
push
in
in
testb
cmpsb
aas
jle
aaa
out
mov
sub
aad
sub
cvttps2pi
cmp
int
ret
fldt
je
jb
adc
jmp
jo
orb
push
jno
xchg
shlb
popf
xchg
js
pop
shrl
jmp
ljmp
movsb
or
mov
repz
mov
into
insb
jle
outsb
jo
cmp
lcall
cmp
sbb
shrl
lods
lods
movzwl
cmpsb
dec
inc
out
lds
xchg
pop
sbb
or
sub
inc
and
ja
mov
pop
jne
lods
dec
lret
fcmove
lret
data16
mov
inc
pusha
lods
mov
cmp
push
or
cmp
stos
pop
inc
int3
dec
mov
pop
pop
out
in
or
jbe
test
push
in
jne
gs
dec
xor
scas
dec
xchg
inc
sarl
dec
sbbb
mov
mov
sbb
mov
mov
arpl
out
notb
push
sahf
mov
mov
rcrb
mov
push
push
shl
mulb
xor
fsts
ss
shlb
int
popa
adc
stos
loope
ds
lret
jecxz
shll
std
push
in
pop
add
pop
xchg
sbb
pop
shr
and
adc
mov
inc
and
jno
hlt
sbb
add
jg
push
or
cltd
test
cli
and
fcmovnu
xchg
dec
adc
xor
mov
mov
sub
out
inc
jns
xor
mul
xchg
inc
inc
out
ret
push
mov
lret
stc
lods
repz
outsl
aas
dec
cmp
push
repz
mov
pop
movsl
cmpsl
outsl
mov
mov
adc
cmp
pusha
daa
pop
push
xchg
inc
cmp
clc
and
imul
add
sub
stos
outsb
leave
or
adc
out
fildl
imul
or
sub
and
add
call
xchg
add
or
in
fs
sti
sub
jl
or
inc
jle
pop
dec
les
push
pop
test
mov
mov
push
add
mov
mov
xlat
lcall
mov
div
insl
cmp
dec
imul
in
jmp
out
loop
mov
mov
out
inc
mov
int
push
mov
inc
jecxz
mov
insb
cmp
xlat
push
fistl
or
and
mov
das
sub
loopne
xchg
ds
xor
hlt
mov
fistpl
divb
jae
jne
lods
testl
push
vcmpps
mov
jne
int3
mov
movsl
movsb
pop
mov
ret
cmpsl
aaa
dec
xchg
fcomip
xchg
stc
stos
inc
add
test
jno
jp
mov
call
push
cwtl
jp
test
fs
cmp
pop
or
jno
cmp
mov
shl
cli
ds
sti
xlat
mov
xor
sub
lods
insb
fdivrs
inc
or
dec
mov
or
pop
loope
aas
inc
stos
ss
nop
sub
ret
xchg
outsb
xor
mov
sbb
inc
incb
iret
sub
and
push
cmp
xchg
lahf
sbb
adc
jb
pop
loope
push
xchg
pop
push
mov
xchg
call
int3
iret
scas
push
pop
push
test
ja
and
mov
pop
cmc
sbb
xchg
jg
test
mov
in
pop
mov
push
xchg
xchg
icebp
push
stos
repz
andb
cmp
cli
mov
lods
lds
fists
jmp
pushf
scas
sahf
rorb
sarb
sub
jecxz
push
lahf
sbb
mov
push
repz
jle
adc
add
mov
jge
imul
mov
dec
dec
sbb
xor
xchg
and
mov
jp
lods
lock
mov
or
xchg
fimuls
bound
inc
insl
or
adc
jne
xchg
loop
sbb
arpl
mov
sbb
lcall
add
sbb
sub
jne
xchg
add
cld
sbb
mov
sub
ds
rcrl
lea
lret
lock
sub
ja
sub
pushf
les
pop
testb
aaa
mov
and
divb
mov
push
xor
icebp
int3
cmp
lds
cli
mov
adc
xchg
pop
or
jmp
add
and
iret
mov
mov
mov
push
mov
push
and
jmp
mov
or
pusha
js
cmpsl
jnp
xchg
mull
leave
xor
pop
cwtl
sahf
xchg
scas
push
dec
iret
adc
insl
sub
mov
mov
push
xchg
std
sbb
or
pusha
scas
jp
cwtl
lea
les
push
mov
dec
pop
jb
or
loope
add
mov
mov
mov
sbb
push
aaa
xor
je
leave
mov
pop
inc
mov
stos
jge
or
out
xchg
ret
ja
add
cwtl
push
imul
dec
and
sbbb
pushf
inc
lret
in
fsub
fsubl
jb
ret
xor
out
getsec
adc
pop
adc
mov
out
fidivl
test
adc
frstor
or
inc
lods
loopne
cmpsl
pop
popf
cmp
dec
in
mov
loop
xor
sbb
add
add
xchg
sub
ss
mov
pop
xchg
clc
jg
lods
adc
gs
adc
stos
cmp
rol
add
add
xchg
fcmovnbe
jmp
jge
repz
pop
adc
cld
jp
aam
adc
and
lret
imul
jne
sbb
or
sub
leave
outsb
mov
in
sbb
iret
push
fmulp
pop
sbb
fidivs
cli
imul
cmp
mov
shrl
aaa
push
lret
mov
out
xor
testl
jb
xor
int3
cmp
mov
jecxz
js
mov
mov
push
pop
inc
je
push
in
cmp
lret
push
aad
sbb
mov
pop
rclb
and
adc
ja
iret
es
push
inc
arpl
and
cmpsl
in
pop
mov
cltd
movsl
push
out
out
dec
idivb
mov
mov
mov
adc
jno
adc
and
mov
jge
shrb
push
aaa
call
popa
test
and
push
cwtl
jne
js
sub
sub
dec
jns
lea
jle
lret
xchg
nop
mov
inc
insb
push
mov
outsb
jge
shll
push
push
rclb
push
mov
or
adc
push
mov
cmc
and
lock
mov
add
icebp
fdivs
xchg
adc
mov
adc
pop
add
sbb
rclb
sti
inc
pop
mov
cmpsb
fistpl
lahf
int
hlt
pop
cmpsl
in
dec
and
ret
xchg
jmp
dec
sbb
imul
pop
mov
mov
test
mov
in
stos
or
pop
fistl
xor
jp
ret
fisttps
lret
lods
jae
mov
ficoms
xor
outsl
mov
or
add
mov
push
inc
aaa
test
scas
adc
fisubs
hlt
cmp
add
addb
arpl
cmp
jp
xchg
out
and
push
xor
mov
adc
pop
fdivr
in
push
inc
sub
mov
lcall
xchg
sti
mov
mov
sbb
data16
lock
xor
stos
add
cmp
sahf
sub
dec
push
out
fidivl
clc
sti
jns
mov
adc
cld
xchg
enter
push
cmp
movsl
daa
xchg
sbb
dec
aad
lds
adc
clc
gs
sub
sbb
dec
aad
lds
adc
clc
gs
sub
sbb
dec
aad
lds
adc
cld
gs
sbb
or
ds
sbb
enter
push
xor
cwtl
jb
std
jo
aaa
stos
daa
mov
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
loopne
lock
test
sbbb
inc
adc
and
and
push
adc
mov
mov
mov
rcll
and
push
add
jno
popa
add
inc
loopne
lock
mov
rcll
jge
popa
xor
add
xchg
mov
aad
cmc
mov
and
sbb
test
pop
je
adc
lods
jbe
mov
or
psraw
subb
jl
js
fmull
add
xor
push
push
inc
mov
stos
cwtd
in
cmc
cmpsb
bound
iret
inc
fdivp
fists
aad
and
push
subl
mov
enter
fnstcw
nop
xchg
nop
add
xor
out
scas
jo
xor
clc
scas
fwait
pusha
mov
jne
inc
inc
sub
push
jl
sbb
int
jo
mov
call
adc
xor
pop
cli
nop
das
hlt
mov
cmp
and
addb
xor
mov
movl
rclb
loope
rcll
and
push
add
jno
popa
add
pop
test
xchg
jb
xlat
xchg
mov
mov
mov
pop
adc
outsl
cmpsb
sbb
sbb
pusha
and
lock
mov
xchg
sti
iret
lds
pop
dec
cmp
push
push
push
imul
aad
in
cmc
in
mov
adc
shll
and
push
add
jno
popa
add
inc
loopne
lock
mov
rcll
and
push
add
jno
popa
add
inc
loopne
xchg
mov
arpl
not
xchg
mov
jg
cmp
xor
mov
sbb
dec
mov
shlb
and
aaa
out
dec
mov
pusha
inc
mov
js,pt
inc
mov
cmp
push
rol
inc
jmp
or
mov
lock
gs
daa
stos
in
cwtl
popf
scas
enter
stos
call
outsb
movsl
test
mov
ficoml
pop
stos
int3
jno
test
xchg
add
dec
test
ljmp
lahf
ja
int3
andl
shr
xor
lret
out
pop
aaa
mov
ss
lret
add
cmovns
inc
add
lret
sub
insb
and
pop
or
ud1
cwtl
mov
or
stc
leave
ljmp
leave
sub
scas
mov
jp
in
std
mov
mov
lock
nop
hlt
into
mov
sub
push
push
cmp
jg
outsb
mov
jmp
push
dec
loop
cmc
mov
inc
xchg
jne
mov
pop
popf
popa
mov
adc
mov
push
jno
cmp
push
mov
shl
xchg
negb
dec
fists
cwtl
mov
inc
adc
push
or
cltd
enter
lret
test
add
push
out
leave
ret
jle
in
loope
popf
sbb
mov
push
ljmp
movb
cld
cmp
jg
pop
xor
dec
movsb
fcmovne
leave
mov
movsb
and
mov
sub
xlat
pop
sbb
mov
xlat
dec
out
mov
pop
and
mov
push
insl
xchg
lods
popf
imul
sbb
mov
jb
or
shrb
ja
pushf
sbb
sub
add
mov
sbbl
scas
fimull
je
jge
addr16
jns
imul
jb
mov
and
jp
xor
mov
test
xor
int
and
std
mov
dec
popa
pop
testb
add
stc
test
and
cmp
mov
or
push
addr16
sub
or
mov
out
jae
out
xor
pop
dec
dec
scas
dec
aaa
xchg
mov
mov
lods
jmp
out
adc
je
shlb
fstpt
adc
push
mull
xor
xchg
and
fcomi
push
gs
mov
lock
dec
pand
mov
xchg
shll
push
mov
arpl
xchg
inc
ss
adc
lahf
dec
cli
xchg
cmp
push
mov
sub
fbstp
aas
mov
rolb
mov
sti
movsb
stos
pushl
shl
jns
push
dec
jmp
inc
push
adc
jmp
cli
add
adc
lods
sbb
test
dec
pop
mov
or
popa
jno
stos
pop
mov
xchg
jg
add
mov
inc
fwait
cltd
xchg
aad
std
test
dec
pop
js
gs
or
xor
push
mov
adc
sbb
inc
xor
inc
leave
xchg
aad
jge
inc
ss
call
inc
cmp
iret
mov
lret
adc
sbb
lods
je
pop
sub
insl
dec
pop
sti
xchg
add
jecxz
dec
lods
pop
pop
and
dec
push
popf
test
mov
jne
daa
mov
loope
cld
lds
xchg
lret
cmpsl
shll
and
hlt
add
dec
sbb
mov
pop
pop
cmp
stos
int3
notb
sub
and
push
gs
mov
jbe
push
pop
xchg
adc
pop
mov
pop
scas
dec
xchg
cmp
testb
pop
fisttps
mov
xor
lret
mov
rcrl
jns
test
movsb
fiadds
sahf
inc
ror
test
adc
jno
push
imul
daa
mov
pop
aad
or
adcb
xchg
jae
or
inc
sub
mov
add
cmp
sti
mov
push
rcr
xor
iret
push
sbb
sub
and
sub
pushl
pop
jno
pfrcpit2
xchg
cltd
fcoms
iret
cmp
lods
adc
insl
iret
inc
rolb
inc
xor
add
fdivs
aaa
and
xor
cmc
and
roll
jo
push
pop
sbb
mov
inc
inc
xor
mov
push
mov
mov
sub
dec
fistl
push
xchg
sahf
ret
dec
test
or
jbe
pop
jbe
and
push
push
movb
notb
cs
aas
push
ds
xor
jg
jno
ds
inc
insb
lea
mov
lods
cmp
or
sub
int3
daa
into
sbb
in
sub
push
test
inc
pop
mov
fnstsw
xor
test
fsubr
sbb
pop
inc
dec
popf
scas
xor
push
adc
les
mov
inc
jp
cs
lods
out
dec
push
push
inc
dec
loopne
adc
pushf
adc
stc
mov
adc
lds
dec
test
in
pop
imul
hlt
inc
xchg
sbbb
dec
adc
jl
mov
mov
mov
add
sbb
add
mov
bsf
addr16
gs
pop
int3
inc
stos
or
pop
insb
adc
jno
jo
hlt
shlb
arpl
dec
ja
xchg
es
outsl
mov
icebp
dec
cwtl
pushl
mov
and
sub
adc
push
clc
adc
mov
stos
test
or
xchg
push
and
inc
ret
loop
inc
arpl
cmc
mov
test
loope
pop
xor
mov
dec
mov
nop
in
les
fwait
pop
addr16
bound
mov
std
mov
jo
or
or
jmp
jecxz
add
notb
and
or
in
es
xchg
mov
jns
and
cmp
push
inc
cmp
test
inc
pop
mov
and
arpl
push
out
mov
adc
loop
out
xor
adc
mov
test
jp
xchg
lods
rdtsc
dec
push
ja
xchg
fwait
into
and
dec
lock
stc
std
ljmp
scas
adc
inc
xchg
es
and
repz
lods
sub
stos
incb
pusha
or
nop
push
scas
popf
out
push
inc
pop
outsl
int3
push
int
imul
test
dec
lahf
sbb
shll
xor
xor
mov
push
or
adc
movl
fnstsw
sub
push
sbb
xor
or
push
and
jbe
xor
fsts
cld
or
ficoms
xor
pop
xchg
stc
or
and
ret
mov
inc
push
les
loop
cmp
out
sbb
and
nop
insb
jmp
xchg
mov
mov
jnp
mov
in
pop
addr16
scas
xchg
pop
bound
imul
ds
rclb
testb
mov
or
mov
loope
dec
addb
or
inc
fcoml
scas
inc
push
cmc
std
aam
jle
in
out
sti
lea
xchg
jbe
adc
inc
mov
xchg
mov
cmpsl
sub
add
xor
push
push
xchg
mov
iret
fdivrs
ljmp
adcb
mov
adc
testl
in
xor
cmp
test
sbb
sahf
add
inc
clc
fnstenv
cld
sahf
aas
int
adc
push
xlat
rcrl
and
add
xor
clc
jo
jp
xlat
adc
xor
mov
ror
adc
jo
test
sub
pop
push
push
and
shl
mov
into
sbb
cmp
lds
subl
outsl
pop
flds
lahf
pop
jecxz
sbb
fbstp
aad
ds
jle
jmp
ret
fs
mov
enter
push
push
mov
cmp
or
or
inc
cmp
pop
sbb
call
sbb
inc
cmp
cmp
mov
fstpl
sbb
adc
cmp
fstpl
movsb
mov
outsl
inc
mov
xor
sub
js
adc
das
pop
out
xchg
push
sbb
dec
inc
mov
xor
mov
lret
aas
pop
add
aaa
imul
and
test
insb
inc
xchg
sub
aad
xor
arpl
jge
jbe
xor
cli
sub
and
xor
add
repnz
stos
push
push
inc
push
mov
adc
xchg
dec
sub
imul
gs
fwait
outsb
cmp
loopne
dec
or
add
sub
sarb
or
cli
hlt
in
xchg
pop
test
sub
push
je
cmp
imul
add
push
scas
mov
xchg
pop
jnp
mov
mov
ss
dec
add
in
mov
pop
sti
int3
lret
ja
adc
clc
lods
int
mov
mov
mov
stc
shll
push
push
dec
sbbb
movsl
push
leave
dec
test
enter
mov
cwtl
jo
inc
mov
pop
add
jbe
popa
inc
jnp
insl
jmp
scas
arpl
nop
test
jp,pt
xchg
ja
test
mov
fistpl
test
stos
popf
push
test
push
fwait
mov
sbb
push
cli
rol
aad
ljmp
inc
sub
xchg
in
pop
aad
mov
stos
push
out
dec
test
lret
jo
push
and
and
pop
enter
sahf
in
jo
ss
and
pop
push
addr16
gs
inc
inc
jae
pusha
leave
aam
pop
xchg
or
ljmp
pop
enter
cmpl
dec
cmp
outsl
xchg
mov
cmp
mov
call
push
jns
mov
into
and
and
pop
fcomps
out
aad
ja
testl
daa
fidivrs
push
pop
std
ss
fsts
outsb
sbbb
popf
sti
mov
fistpl
and
rcrb
pop
adc
inc
push
pop
ds
ror
cmpb
out
ds
loop
call
sti
filds
push
or
movsb
sbb
jge
dec
adc
ficomps
pushf
test
inc
cwtl
cmc
in
movsl
dec
lds
int
fs
insl
outsl
push
popf
mov
adc
in
popf
lcall
xlat
lret
das
inc
jmp
xchg
sbb
mov
pop
pushf
aam
rcrb
insl
lock
adc
or
mov
adc
lds
das
xchg
sbb
test
test
jnp
notl
addl
push
movsb
adc
sbb
cli
jecxz
cmc
mov
test
fisubl
or
icebp
pushl
in
xlat
add
lock
or
and
add
call
nop
roll
mov
mov
sub
jns
dec
int
sub
cld
dec
inc
jns
call
repnz
push
sbb
mov
jno
push
cmp
sarl
sti
cmp
rolb
loop
test
and
enter
je
lock
jle
fidivs
mov
dec
jbe
pushf
pop
in
inc
xchg
dec
mov
mov
enter
sub
sbb
popl
add
inc
pop
sub
or
fistpl
pcmpgtb
in
fstpt
pop
inc
mov
in
push
daa
lret
push
dec
aaa
jmp
lock
mov
mov
mov
hlt
dec
mov
inc
into
repz
scas
mov
fdivl
dec
cmp
and
xor
lock
and
mov
and
loope
sub
loope
jg
movsb
cmpb
push
push
addr16
out
jmp
in
push
pop
push
in
or
test
mov
je
mov
add
xchg
filds
aad
scas
out
outsb
inc
pop
test
jp
lock
dec
dec
daa
push
stos
lods
pop
sbb
sarl
int
gs
mov
push
jle
lods
arpl
out
inc
lds
ja
add
iret
in
call
and
scas
js
inc
jl
pop
les
jno
cmp
icebp
in
imul
fcmovbe
mov
out
add
mov
cli
push
shlb
pop
adc
ffree
test
das
jg
lahf
inc
ljmp
test
or
std
push
adc
pop
mov
in
arpl
sbb
ret
nop
loop
xchg
cmp
mov
fs
insl
jae
xor
cs
int3
pushf
or
pop
xor
cs
mov
test
cmp
cmc
lock
hlt
xlat
adc
jno
stos
jle
sub
dec
add
enter
pop
leave
leave
xchg
andb
lods
in
repz
ret
mov
pop
cmp
jbe
xchg
inc
addr16
push
les
inc
mov
xchg
test
sahf
mov
loopne
jmp
mov
popa
add
sbb
int3
test
femms
testl
mov
adc
add
adc
test
lcall
xchg
push
push
clc
xor
xor
push
data16
lret
shlb
idivl
shl
icebp
ss
or
cmpsl
popa
fisttps
shlb
pop
push
bnd
std
nop
or
mov
xor
lret
int3
cmc
rcl
add
push
mov
movsb
jg
mull
and
hlt
push
sbb
sbb
inc
adcl
push
mov
cmp
movsl
dec
aaa
aam
pushf
sbb
jae
add
xchg
mov
dec
mov
loopne
addl
mov
cmp
mov
rcrl
sbb
outsb
add
fmuls
inc
imul
mov
cmp
xor
add
mov
adc
fisttpll
pop
icebp
int
add
ja
ljmp
adc
inc
pop
cs
int3
xlat
inc
call
xlat
mov
add
mov
dec
iret
xchg
rol
in
je
movsl
lcall
or
mov
out
aas
mov
mov
sub
addb
popf
ljmp
jno
lret
push
mov
sub
adc
call
sbb
jle
xchg
js
les
les
fsubrs
adc
xchg
lret
leave
fucom
or
sbb
fcmovne
mov
stc
clc
out
mov
mov
pop
movsl
leave
jmp
adc
cwtl
aad
daa
cwtl
mov
int
data16
fadds
inc
push
add
into
nopl
fidivl
movb
cmpsb
test
cmp
inc
insb
mov
jne
loopne
int3
cltd
repz
ja
imul
mov
mov
mov
push
inc
dec
fs
or
add
in
jecxz
cli
mov
add
pop
ret
movsl
add
jp
lret
or
jle
or
dec
ret
mov
xor
in
sbb
int3
mov
sahf
js
jns
push
cmpb
xchg
shll
mov
iret
jge
pop
push
test
push
les
pop
rcrl
int
repnz
sub
shl
jmp
pop
inc
cmp
xor
push
jmp
les
insb
inc
in
xchg
inc
pop
or
jp
leave
xchg
add
std
add
or
pusha
push
pop
movsl
or
fcmovu
mov
mov
icebp
dec
mov
negb
movsl
inc
mov
test
and
sbb
int3
in
xchg
cld
sbb
mov
pop
rcrl
orl
or
push
dec
mov
and
es
push
loop
mov
in
sub
and
into
sbb
xchg
call
enter
out
bound
jle
inc
or
mov
jecxz
sti
inc
lret
call
lods
mov
xchg
gs
adc
call
xorb
xor
arpl
loop
in
rcr
mov
inc
sbb
nop
sub
xchg
cmp
xor
ret
loopne
pop
xchg
add
dec
mov
inc
adc
fcmovnu
arpl
movsl
cmp
test
xchg
daa
in
fsubrl
inc
adc
adc
in
push
jns
test
in
cmpsb
ret
jecxz
in
xor
shll
fildl
sbb
cmpsl
ja
push
aam
loop
lock
xor
sbbb
hlt
les
ficompl
xchg
adcl
stos
dec
push
sbb
jnp
mov
stos
sbb
add
pop
scas
cmp
int
push
popa
ret
in
sub
adc
push
jne
ret
sbb
push
mov
mov
pop
pop
mov
push
mov
sub
dec
sub
ret
and
xchg
pop
cmpsl
inc
inc
xor
mov
and
mov
mov
pop
sub
push
aam
pop
call
add
arpl
arpl
lock
cmp
and
je
mov
push
into
add
sarb
inc
out
xchg
ja
mov
sbb
xchg
cmp
test
lods
daa
outsl
adc
sbb
loop
hlt
adc
sub
imul
mov
add
mov
aaa
or
dec
inc
add
fnstsw
test
add
cmpsl
pop
push
imul
lds
in
mov
mov
cli
xor
es
xor
mov
sub
cmp
jg
xlat
imul
mov
xor
xchg
test
loopne
sbb
es
int
xchg
data16
jns
sub
int
pop
dec
repz
testb
out
add
inc
pop
mov
hlt
cli
dec
jbe
out
fisttps
mov
lret
aaa
mov
pushf
sahf
inc
stos
je
mov
in
inc
int3
ficomps
movl
xchg
lcall
or
loopne
insb
test
mov
hlt
mov
mov
sbb
pop
enter
addl
xorl
inc
out
js
mov
xor
inc
push
xor
out
or
ret
xchg
xor
xchg
outsl
adc
mov
test
es
ds
dec
jecxz
dec
mov
dec
iret
imul
xchg
lea
inc
or
js
stos
and
mov
xor
call
fstpt
call
filds
sbb
and
add
in
jg
lret
mov
int3
testl
lahf
les
andl
mov
test
popf
and
roll
jae
pop
xor
out
iret
sub
dec
pop
enter
adcb
arpl
gs
ret
stc
cmp
addr16
mov
push
push
mov
icebp
cmp
mov
add
jnp
aam
mov
sbb
push
popf
push
mov
or
xchg
aaa
out
sub
and
xor
pop
fnstsw
shl
mov
data16
pushf
or
sub
daa
xchg
push
add
out
and
rep
adc
pop
xchg
jl
and
not
sbb
cltd
push
inc
xchg
push
adc
xor
lock
cmp
insb
daa
and
cmpsb
shl
jle
dec
jg
add
jno
pop
or
loopne
fidivrs
int3
aaa
push
pop
mov
adcl
scas
or
lea
lahf
jno
xchg
sbb
pop
inc
xor
das
mov
xor
ret
and
push
mov
in
mov
arpl
je
cli
jecxz
lcall
and
dec
dec
cmc
add
pop
out
push
pcmpgtb
adc
inc
inc
jmp
pop
push
mov
out
mov
jge
mov
adc
fists
add
and
or
xchg
push
jo
adc
push
sub
pusha
hlt
xchg
int3
aad
mov
add
rorl
stos
rcrb
mov
dec
outsw
xor
out
mov
movsl
loop
sbb
in
pop
in
add
xor
fcoms
cmc
arpl
rclb
out
fs
mov
not
sbb
dec
stos
test
adc
cmp
sbb
shl
ret
fwait
xlat
scas
ja
fnstcw
cmp
push
xchg
mov
pusha
arpl
mov
shlb
inc
sti
outsb
mov
shl
sti
push
ret
inc
fimull
and
or
push
adc
mov
fs
xchg
int3
scas
enter
aam
shlb
xor
xor
iret
leave
orl
cmp
jno,pt
pop
test
lcall
pop
cmc
out
xchg
inc
jb
sub
xchg
xor
sub
adc
lds
sub
xchg
pop
loope
or
fldt
cli
out
sub
arpl
cmc
cltd
or
jg
pop
xor
jo
out
push
or
or
xchg
xchg
subl
repnz
mov
rcll
and
push
add
jno
popa
add
inc
loopne
lock
mov
rcll
and
push
add
jno
popa
add
inc
loopne
lock
mov
rclb
and
push
add
jo
popa
add
inc
loopne
lock
mov
push
adc
lahf
into
mov
adc
push
stc
mov
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmpsb
mov
cmpsb
push
xchg
push
xchg
sahf
inc
mov
and
mov
cmpsb
es
push
xchg
divl
jecxz
push
movb
cmpsb
pop
xchg
push
xchg
data16
inc
mov
cmpsb
inc
notl
xchg
divb
data16
adc
inc
ss
cmpsb
push
xchg
push
xchg
data16
inc
mov
cmpsb
divl
push
xchg
xor
inc
inc
mov
stc
pop
stc
push
xlat
std
xor
lods
or
ret
movsl
cs
inc
xlat
cmp
jb
sbbl
es
inc
jns
jne
sbb
shlb
xchg
ficomps
iret
pop
or
fiadds
ds
mov
daa
mov
popa
addr16
xor
mov
neg
rcl
sti
dec
ja
cmpsb
push
test
es
jbe
dec
out
pop
inc
cmp
jmp
mov
test
fstps
adc
jns
imull
push
ret
inc
inc
fmulp
shll
jmp
mov
into
and
pop
pushf
lock
scas
imul
jo
jecxz
or
andb
xlat
inc
movl
xchg
push
xchg
data16
inc
mov
cmpsb
es
push
xchg
divb
data16
push
das
inc
fldenv
jp
dec
out
xor
cwtl
and
stc
jle
inc
adcb
adc
imul
add
in
lret
push
out
ja
imul
decl
cmc
jne
es
mulb
push
inc
mov
cmpsb
es
push
xchg
divb
data16
push
movb
cmpsb
push
xchg
push
xchg
data16
inc
mov
cmpsb
es
push
xchg
divb
data16
push
movb
and
fwait
and
roll
mov
mov
fcmovnb
testl
mov
lcall
mov
sbb
xor
int3
push
sub
lahf
ffreep
ret
and
jmp
jae
mov
out
dec
jecxz
cmp
stc
or
loop
and
dec
dec
aas
mov
xchg
int3
je
mov
xchg
pmaxub
mov
push
pop
or
lods
sub
cmc
stos
imulb
fs
sbb
in
lock
popf
mov
mov
and
lock
repnz
lahf
sub
add
push
das
aaa
adc
sub
rcrb
inc
hlt
xchg
add
imul
hlt
enter
mov
sbbl
jmp
pop
mov
lahf
daa
pop
mov
inc
or
mov
pop
mov
pushf
lods
or
imul
nop
pop
lds
mov
add
jge
ss
pop
testb
std
dec
std
adc
lock
imul
fcmovne
out
cwtl
les
and
ljmp
loopne
cmpsb
xchg
xchg
stos
insb
sbb
ret
push
fidivrl
add
in
jg
mov
mov
and
xor
fsubp
into
sti
stos
icebp
fisubs
bound
xor
dec
loopne
xor
test
xor
adc
dec
push
mov
out
stos
xor
pop
and
cli
into
pusha
in
pop
mov
faddl
icebp
in
loopne
mov
dec
sarl
lods
add
mov
jne
xlat
js
push
add
mov
and
adc
sbb
sub
aas
adc
in
fidivs
sub
add
add
dec
add
es
push
cmp
loope
lahf
repnz
pusha
arpl
pop
leave
mov
imul
push
adc
popf
sti
outsb
add
push
and
dec
scas
lods
add
out
mov
push
push
rep
dec
leave
sbb
mov
cmp
cmp
leave
ret
shll
movsl
xchg
xor
sbb
jg
cmp
and
scas
and
mov
adc
dec
mov
ljmp
mov
out
fsts
cmp
cs
std
adc
and
cmp
rorl
or
push
test
sbb
ret
sbbb
inc
sbb
cmp
aad
lret
adc
jns
test
sbb
push
push
cmc
movsb
repz
pop
mov
imulb
add
loopne
aaa
cmp
test
mov
xor
stos
push
push
jl
and
mov
pop
xor
cmpsl
pop
out
es
ja
adc
ja
or
ss
test
lods
imul
stos
mov
pop
xor
lahf
pop
or
sbb
mov
jnp
pop
mov
sub
and
mov
dec
pop
mov
rclb
orl
lahf
sub
cmp
xor
cmp
lods
stc
mov
ret
das
ljmp
mov
cld
mov
cmpsb
test
jnp
jb
cld
and
inc
sbb
loope,pt
cmp
xor
xlat
pop
sub
test
dec
cmp
adc
push
dec
push
mov
pop
bound
cltd
iret
mov
mov
dec
xchg
or
movzwl
jmp
int3
fcmovne
add
out
mov
add
sahf
xlat
jno
and
rorl
dec
vmread
daa
dec
jae
movb
outsb
fisubrl
jnp
nop
jnp
out
sbb
loope
movsb
xchg
icebp
outsb
push
xlat
adc
std
jbe
push
push
xor
push
lahf
xchg
test
imul
fldenv
fistpll
jl
out
push
out
cmc
and
lock
fcoml
or
divb
xchg
mov
addr16
aas
in
or
jl
lods
sub
pop
in
and
ret
adc
jp
out
int3
xchg
cmpl
push
push
xor
shlb
sub
stos
and
push
pop
mov
xchg
inc
es
pcmpgtb
mov
loope
arpl
sub
sub
mov
mov
push
sbb
mov
jae
js
xor
lods
lahf
int
out
fldt
sbb
mov
ds
push
test
inc
sub
shlb
adc
fisttpl
jecxz
push
add
or
xorb
xor
mov
int3
loope
lret
add
pop
mov
shll
repz
push
pop
mov
adc
mov
mov
ja
pop
ret
sbb
and
jmp
sub
ljmp
add
xor
sbb
ds
push
je
pop
mov
js
arpl
xchg
xor
ss
adc
stos
call
test
ret
out
mov
hlt
sbb
adc
xchg
xchg
in
inc
pop
lods
push
movl
mov
cmp
cltd
and
cwtl
jne
push
and
fisubs
in
pop
add
mov
sbb
shl
jbe
push
shlb
jle
xor
add
aaa
xchg
arpl
sarl
adc
jb
in
mov
pop
xchg
dec
jne
xchg
stos
pusha
mov
mov
aas
mov
sub
in
xor
hlt
sarb
ss
scas
pushf
dec
push
cmc
shll
cwtl
cwtl
stc
or
mov
push
mov
mov
andb
fstps
test
loop
or
sub
popa
xor
xchg
ja
and
pop
loope
ret
mov
sub
popa
rorb
test
jge
adc
jo
add
push
cwtl
mov
sub
add
icebp
lret
sub
cmp
es
push
sub
and
jmp
jg
aam
stos
xchg
sub
bound
hlt
aas
pop
add
popa
sbb
jnp
sbb
mov
push
or
or
outsl
xchg
xchg
stc
mov
xchg
out
mov
popf
sbb
scas
sbb
sub
lods
adcb
addr16
pop
mov
fcmovu
xor
jae
test
adc
xor
adc
pop
and
data16
rorl
jp
adc
shlb
cltd
adc
scas
pop
icebp
pushf
pop
sbb
or
scas
mov
das
cmp
xchg
cmc
xor
mov
lea
js
push
loop
iret
mov
clc
out
adc
sub
cmpsl
in
xor
cmp
test
out
scas
aad
lahf
and
pop
xchg
les
push
arpl
in
xlat
repnz
fimuls
sti
cmc
fmuls
imul
sub
addr16
int3
push
mov
and
xor
dec
pop
jno
mov
stc
mov
inc
xchg
pushf
out
xchg
insb
popa
test
out
test
icebp
movsl
xchg
adc
xor
mov
aas
andl
xchg
pop
mov
fcomp
mov
pop
addl
push
cli
add
xor
mov
out
push
push
inc
pushf
cmp
sub
icebp
xor
stc
jnp
dec
lahf
pop
je
cs
mov
mov
adc
pop
lea
outsl
sbb
ret
jge
pusha
sbb
or
pusha
inc
aad
jmp
xor
movsb
int3
outsl
cs
fdivrp
out
in
inc
iretw
loop
mov
nop
dec
xor
xchg
outsl
aas
pusha
std
mov
sahf
mov
dec
mov
ret
mov
xor
adc
arpl
bound
divl
dec
mov
or
push
je
and
in
das
mov
sbb
mov
xor
push
mov
popf
fst
cs
sbb
cmc
shlb
iret
push
push
arpl
daa
push
xchg
pop
mov
pop
adc
pop
inc
push
cli
add
scas
push
mov
dec
pop
mov
insl
inc
imul
imul
pop
cmovns
repnz
xchg
push
dec
and
xchg
addr16
pop
rcrb
xor
push
outsl
sub
mov
mov
fnstcw
scas
xchg
jmp
xchg
inc
outsl
sbb
xor
cli
jae
dec
ss
int
sbb
lret
xchg
push
xchg
pop
xchg
fildl
rcl
push
mov
icebp
push
xchg
pop
and
or
not
movsb
mov
dec
mov
sbb
shll
jne
mov
xchg
int3
mov
adc
imulb
push
call
and
cs
insb
lcall
in
xor
push
xor
ret
je
insb
mov
enter
add
xchg
cmp
sbb
inc
test
add
addb
sbb
inc
out
inc
add
dec
cmp
fidivs
js
lock
and
inc
dec
push
jne
cmp
jo
jp
sub
mov
mov
addr16
inc
call
dec
lods
cli
push
xor
jmp
lcall
or
jb
push
mov
mov
nop
scas
add
pop
dec
inc
ja
les
out
das
add
push
adc
adc
mov
bound
xchg
pop
shlb
les
sub
cmc
pop
call
cld
clc
testb
xchg
pop
pop
inc
push
xor
push
cmp
into
or
stos
xchg
sarb
cmpsl
cli
pop
sbb
jl
lret
push
call
mov
jne
or
mov
fcomi
test
lds
or
add
ror
xchg
rcrl
fnsave
pop
xchg
mov
je
stos
push
inc
pusha
stos
xor
xor
lcall
pushf
adc
mov
mov
adc
mov
mov
push
insb
mov
push
lcall
sub
jnp
sub
pop
dec
cmpsb
mov
leave
xlat
enter
mov
xor
inc
pop
add
or
push
inc
shlb
adc
test
inc
inc
cmp
sbb
das
shrl
sbb
bnd
data16
cmp
cmp
xor
cs
dec
loope
hlt
mov
sbb
into
and
lret
adc
insb
lret
pop
and
jmp
lds
repz
js
loopnew
adc
mov
arpl
fnsave
add
mov
pop
sar
cltd
outsb
scas
mov
cmp
imul
mov
in
xchg
jecxz
enter
mov
out
arpl
sbb
jns
movsl
mov
out
cmc
sub
popf
inc
mov
dec
jae
mov
sbbb
icebp
ret
xor
rcrl
shlb
cmp
mov
call
test
es
push
cmp
dec
push
pop
mov
es
and
dec
mov
or
imul
ja
rclb
or
xlat
mov
cmp
popa
mov
inc
lea
sarb
pop
pop
imul
mov
sbb
int3
xorl
cwtl
pop
imul
xchg
fdivr
jb
xchg
aad
sub
sti
lret
sbb
adc
sub
jnp
cmp
xchg
scas
ss
ja
pop
xlat
insl
std
ret
jno
out
lods
je
push
fdivs
mov
sbb
nopl
push
xchg
pop
daa
or
pusha
imul
sbb
daa
je
mov
popf
ja
cli
or
sahf
je
cmp
fimuls
ret
inc
pop
adc
or
stc
jne
es
and
push
test
in
dec
pop
pushf
sbb
fstp
sarl
add
mov
dec
lods
aas
call
in
sti
or
jnp
push
xchg
sub
in
mov
or
leave
xor
fistpll
and
cmpsl
cli
out
mov
and
ret
push
jb
cld
sti
cld
rorb
mov
loop
fisubs
inc
pop
fstpt
or
mov
stos
es
in
xchg
mov
push
push
daa
dec
cld
or
sbb
call
xchg
dec
push
aad
cli
adc
xchg
cmpl
leave
in
push
or
lcall
in
mov
mov
clc
lods
and
jno
xchg
mov
mov
pop
sti
flds
jns
jns
pop
jnp
xchg
and
jno
std
cmpsb
push
movsl
test
lock
test
out
jo
stos
and
push
push
mov
xchg
sbb
fbld
repnz
in
xchg
xchg
mov
xor
fmul
xorb
xlat
jae
shrl
dec
loopne
mov
ret
mov
hlt
enter
inc
lret
mov
push
adc
xchg
repnz
cmp
fistl
pop
hlt
addl
das
stos
pop
out
fucomip
pop
in
mov
cmpsb
sub
jmp
mov
mov
ss
xor
cmp
xchg
das
jmp
push
push
pop
rcll
jnp
ds
inc
mov
jne
mov
arpl
push
or
cmp
cmpsl
sub
xchg
xor
repz
loop
out
outsb
cmp
xchg
shrl
push
push
pusha
pop
add
fwait
adc
outsb
lahf
inc
inc
arpl
scas
push
adcl
push
std
add
sbb
mov
mov
in
sub
mov
xlat
xchg
ja
sbb
and
mov
in
sahf
and
mov
lea
xor
bound
ds
pop
mov
ffreep
mov
push
imul
lods
popl
xor
push
int
pop
mov
fdivrl
divb
push
dec
aas
les
or
xor
aaa
test
cmp
lahf
push
arpl
xchg
dec
sbb
stos
jp
pop
push
cmp
mov
add
repnz
cltd
sbb
stos
adc
sbb
sub
inc
fcomps
add
fsubrl
adc
xchg
mov
pop
xorl
cmp
lret
mov
lahf
inc
aam
outsb
insl
cmp
cmpsl
dec
pop
xchg
repz
inc
xor
fwait
jmp
imul
enter
pop
lret
pop
es
aas
add
dec
lcall
jg
popf
xchg
fldcw
lds
subb
outsb
leave
hlt
clc
cmp
cmpsl
xor
jo
leave
jmp
add
data16
fs
add
mov
out
daa
push
pop
dec
sbb
xchg
or
pop
mov
je
lds
xchg
loope
out
sub
ret
insb
add
enter
mov
iret
sti
es
adc
jno
dec
dec
pop
lds
jg
xchg
adc
lock
mov
add
xlat
xchg
out
enter
das
mov
pusha
dec
mov
outsb
mov
jle
push
bound
dec
cmp
mov
test
xchg
clc
js
hlt
scas
sbb
mov
xor
or
jnp
pop
adc
mov
imul
fldt
jo
sub
fwait
push
mov
cltd
ds
ljmp
push
mov
aam
pop
xchg
ss
pop
scas
xchg
addb
test
aaa
and
xor
icebp
add
in
bound
mov
cmp
or
dec
add
sub
inc
leave
inc
inc
data16
cmp
xor
sbbb
xchg
add
mov
xchg
xchg
mov
into
and
pop
jbe
dec
fcmovu
aad
add
loope
pop
xchg
inc
mov
push
in
xchg
sbb
pop
mov
xchg
mov
loope
xor
dec
mov
push
jl
pusha
adc
cs
push
inc
mov
jns
cmp
cmp
sbb
push
ret
cmp
stos
scas
repnz
add
scas
xchg
mov
jo
sbb
mov
push
pop
into
pop
out
in
xchg
sbb
iret
push
loopne
repnz
aaa
and
imul
xchg
jns
mov
inc
in
iret
fst
sti
add
insb
and
pop
add
mov
xor
fnsave
stos
arpl
jecxz
jecxz
push
rorb
xchg
mov
adc
in
pop
jle
jnp
leave
cmp
or
mov
mov
and
sub
jnp
or
lret
test
mov
iret
jno
cmp
data16
inc
and
out
lods
xchg
leave
jns
and
cwtl
stos
sbb
sarb
push
xchg
mov
js
cli
mov
scas
sbb
xchg
sbb
dec
das
xchg
test
sbb
out
pop
lret
std
adc
aam
lods
sub
shrb
bound
mov
pop
xchg
ret
inc
into
ja
push
pushf
loop
shl
iret
mov
jge
xlat
es
mov
stos
and
jo
or
inc
lea
filds
fldt
scas
xchg
dec
sti
jmp
mov
stos
push
or
addr16
in
pop
mov
xor
aas
jge
dec
insl
cmp
ljmp
sub
aas
mov
xor
jns
xor
pop
test
rorb
jae
fcom
jg
jns
adc
jb
icebp
mov
arpl
dec
icebp
in
ja
cmc
xor
je
jl
adc
or
cmp
sbbb
sub
in
stc
cmp
hlt
fldt
cmpsl
pop
lods
notl
fxch
sub
in
inc
int3
xor
pop
mov
add
mov
push
adc
outsb
aaa
add
les
mov
pop
jb
sub
insb
ficompl
jns
test
push
nop
cmc
iret
mov
daa
outsl
into
mov
push
add
std
sub
push
lahf
cmp
xor
lret
jo
inc
movsl
ret
cmp
pusha
jmp
xor
pop
dec
xchg
test
fwait
lret
mov
cmp
mov
jne
test
sbb
scas
cltd
stc
push
xchg
xchg
cltd
aaa
mov
das
and
adc
cmp
out
cmc
lds
mov
fstpt
ret
push
xor
dec
sti
movsb
pusha
mov
lcall
xchg
test
dec
sbb
outsb
mov
xor
xlat
mov
mov
jge
pusha
mov
int
xchg
or
daa
xlat
cwtl
stos
mov
jo
mov
xor
insl
add
rolb
jg
lea
cmpsl
or
cmpsb
test
data16
mov
pop
pop
xlat
dec
pop
add
stc
test
pop
mov
out
je
pop
mov
cmpsl
add
jnp
out
dec
ds
out
ja
xor
gs
movsb
out
cli
adc
inc
jecxz
shr
sbb
rcrl
jp
das
cmp
jmp
xchg
sub
fisubl
or
sti
pop
leave
sbb
sub
sbb
and
mov
test
inc
repz
jb
mov
push
push
lcall
adc
add
cli
sub
or
mov
outsb
mov
mov
lcall
xchg
add
sbb
scas
xlat
or
cmpsb
loope
enter
imul
jmp
cmpsl
jns
ds
pusha
push
cltd
push
rcll
add
ja
jle
imul
push
arpl
movsb
sbb
sub
sti
dec
in
cmp
loop
fs
lock
mov
cmpsb
xchg
aas
add
rcr
jg
xor
inc
dec
repnz
jmp
sub
xchg
fdivrl
outsb
mov
push
fistl
loopne
lods
xchg
hlt
out
dec
xor
xor
or
or
sqrtps
rcr
popa
push
outsl
inc
stc
into
dec
push
scas
mov
stc
cmpsl
inc
movsl
jno
push
jo
xor
fisubrs
lahf
lret
cmp
sub
mov
inc
jle
sub
sbb
out
out
call
mov
adc
jnp
das
int3
clc
adc
cmp
out
lea
inc
imul
jb
test
dec
mov
popf
ret
jg
icebp
insb
add
push
dec
add
ljmp
pop
jg
repz
inc
fsubrs
jmp
mov
inc
push
sarl
cs
push
sbb
sbb
cmc
xchg
scas
in
pop
gs
mov
in
lcall
imul
mov
insb
sbb
sub
aas
inc
ds
jl
pop
fisubrs
xlat
dec
shll
or
pop
mov
std
jno
enterw
or
test
adc
jae
enter
push
dec
sub
xchg
loopne
aam
inc
mov
dec
adc
out
test
or
push
in
shll
and
pop
jl
cmpsb
adc
les
adc
test
mov
dec
pop
out
movsl
sbb
ja
xchg
into
adc
jae
cmpsb
loope
mov
sbb
mov
xchg
fwait
out
cwtl
or
adc
iret
pop
enter
mov
pop
add
gs
add
jbe
sub
inc
push
fidivrs
xchg
call
hlt
mov
push
loop
fs
mov
shrb
das
xor
sbb
shll
adc
push
inc
inc
jg
lahf
and
push
shl
sbb
mov
fwait
shl
lret
lds
xor
call
xchg
jmp
arpl
cli
pop
shrl
nop
lret
pop
sbb
js
xor
mov
test
xlat
mov
imul
sbb
adc
cmpsb
lds
data16
inc
mov
cmpsb
es
push
xchg
divb
data16
push
movb
cmpsb
push
xchg
push
xchg
data16
inc
mov
cmpsb
es
push
xchg
divb
data16
push
movb
es
push
push
xchg
data16
inc
mov
cmpsb
es
push
xchg
divb
data16
push
movl
xchg
push
xchg
data16
inc
mov
cmpsb
mov
xchg
outsb
cltd
sub
ret
dec
loop
pop
push
faddl
push
push
out
inc
bnd
arpl
adc
and
repnz
loop
xchg
cmpb
push
mov
jb
int
outsb
xor
ret
push
loop
xchg
aaa
andb
push
mov
les
mov
insl
rolb
dec
sahf
lea
pop
repnz
out
nop
pop
fbstp
lea
lret
push
inc
inc
andb
lds
sbb
rorb
scas
outsb
push
ficomps
jmp
mov
stc
cmc
adc
cmp
repnz
imul
jb
mov
mov
sarb
ret
dec
loop
mov
xchg
aaa
push
mov
add
inc
inc
mov
pop
hlt
sub
mov
mov
xor
pop
mov
mov
fiadds
std
xor
and
popa
cmp
xchg
push
adc
fistpll
xor
xchg
add
fisttpl
inc
std
lret
ja
mov
imul
cmpb
pop
mov
out
xlat
adc
and
xchg
or
pop
xchg
js
push
bound
xchg
sbb
push
mov
push
cmpsl
jle
mov
pop
or
push
jb
xchg
adc
adc
insb
rcrl
push
sti
mov
ret
das
mov
fiadds
ds
mov
jb
ficoms
scas
add
shrb
jle
dec
loop
xchg
cmpb
push
mov
jb
ficoms
scas
add
shrb
stc
outsl
outsl
int
insb
adc
mulb
inc
pop
rclb
mov
test
dec
or
mov
xchg
xchg
jnp
mov
fs
or
and
fisubl
adc
hlt
dec
ja
je
mov
push
push
addr16
sub
leave
int
cmp
xor
ret
mov
addr16
movsb
imul
jmp
cmovs
sub
rorb
sub
jge
or
pop
push
shlb
into
in
dec
or
sbb
mov
pop
cmp
dec
movsl
jae
testb
pop
stos
mov
or
mov
cmp
sub
xorb
cmp
mov
stc
aas
jge
sub
sub
xor
mov
dec
mov
adc
insb
pop
in
jge
ret
jae
adc
dec
add
xorl
out
dec
or
pop
adc
sahf
xchg
sub
bound
cld
int
pop
daa
in
jae
hlt
adc
fmuls
lret
testl
lods
pop
xor
ret
fisubrs
jle
mov
sbb
sti
je
pop
idiv
mov
fcoml
aaa
mov
xor
movsl
dec
cld
mov
dec
lcall
cld
shrb
mov
jb
stc
in
test
jl
mov
cmc
pop
inc
ss
pop
inc
pop
and
mov
xchg
mov
int3
jb
pop
push
shlb
addr16
shl
jg
scas
lret
inc
jge
sub
xor
scas
lret
dec
ss
inc
pop
aad
mov
mov
push
std
inc
ljmp
add
pop
inc
out
dec
cmp
imulb
int3
sub
test
cwtl
movsl
lds
in
roll
outsb
push
xor
out
rorb
and
ror
test
adc
or
cli
lods
clc
imulb
out
lods
loop
or
fists
fstps
lods
xchg
push
adc
mov
mov
adc
dec
push
sub
bound
inc
sub
dec
add
out
leave
xchg
addr16
int3
add
push
push
jmp
call
leave
lock
sti
xor
mov
push
iret
jge
push
xchg
and
jbe
in
xchg
cli
pop
stos
mov
mov
ret
and
jecxz
mov
jle
jae
cmc
pop
sar
lock
ja
adc
mov
and
cmpsb
mov
jns
call
mov
xchg
in
mov
das
pop
fcompp
mov
call
push
xchg
aas
jecxz
nop
jl
fstl
daa
shlb
data16
aam
sub
or
idiv
and
inc
sbb
push
stc
pop
out
dec
push
jno
mov
add
xchg
les
in
repnz
pandn
enter
xchg
negl
mov
dec
jmp
cwtl
ret
add
popf
out
mov
mov
stos
jp
push
add
pop
pop
fidivl
test
mov
push
notb
add
sbb
mov
js
mov
xlat
mov
cwtl
pop
ret
icebp
add
add
int3
mov
imul
lods
jne
mov
jg
inc
arpl
push
addr16
sbb
sahf
cmp
xchg
dec
rol
jae
jecxz
je
enter
rdmsr
out
pop
sahf
push
xchg
mov
leave
addr16
mov
ljmp
ds
shlb
cmpsl
fldt
aad
fcom
lcall
xchg
fs
and
arpl
add
cmp
xor
stc
mov
inc
ja
inc
adc
sub
mov
push
adc
imul
shl
pop
fwait
sub
in
cmp
cld
rol
xor
or
cltd
push
add
xchg
test
mov
imul
jg
ficompl
push
sahf
enter
lock
pushf
lcall
jecxz
xlat
addr16
sub
daa
mov
fsts
xor
imul
jp
jg
call
cmp
pop
loop
sbb
lahf
mov
mov
popf
dec
sbb
pushf
cmp
je
andb
std
push
or
imul
std
xor
ret
sbb
xor
inc
sub
jmp
pop
call
cmp
or
pop
test
stc
call
divl
xchg
xor
jo
jo
insb
xchg
xchg
icebp
mov
popa
fwait
sub
test
test
hlt
out
adc
or
mov
add
inc
pop
and
inc
dec
inc
popa
sub
sbb
or
aas
icebp
fisubl
test
rcrl
sub
in
addr16
rcl
jae
dec
and
mov
mov
jbe
mov
mov
mov
rcrb
pop
push
stc
repz
negb
or
xchg
mov
cwtl
pop
cwtl
xchg
les
mov
data16
xchg
lret
sbb
xchg
mov
sub
pop
loope
movsl
fucomip
int3
dec
fldcw
fdivs
mov
push
jmp
dec
in
sub
subb
mov
pop
dec
out
ljmp
sub
aas
icebp
xlat
stos
push
ss
aad
hlt
ror
in
inc
nop
adc
movsl
mov
pop
lock
cmp
insl
xor
and
pop
inc
testb
sub
or
out
sbb
enter
jmp
in
cld
imul
mov
pushf
rorl
push
push
inc
adc
pop
lods
inc
pop
xchg
xor
mov
adc
aaa
mov
scas
cmpb
inc
mov
add
loope
stos
in
fists
lea
out
repz
shll
mov
in
or
pcmpeqw
adc
cmpsb
xchg
rclb
repz
stos
insb
cmp
xchg
int
sub
or
stc
push
sub
xchg
je
adc
in
cmc
int
pop
jae
dec
fsts
jno
sbb
loop
dec
stc
xchg
int3
movsb
negl
jle
adc
mov
cmpsl
mov
add
xchg
mov
cmpsl
fs
sub
cmp
dec
test
ja
mov
out
xchg
xlat
hlt
mov
std
mov
js
ljmp
push
stc
push
inc
ds
daa
mov
repnz
popa
adc
cmpsl
and
in
push
test
jbe
btr
xor
das
inc
push
xchg
mov
fwait
ja
out
imul
cmc
or
jae
aam
mov
inc
mov
xchg
into
iret
movsb
cmp
pop
je
mov
cmp
sub
rclb
jns
sbb
leave
jo
pop
sbb
test
sarl
xchg
mov
mov
mov
arpl
inc
mov
es
out
sbb
and
or
cmp
cs
sub
mov
sub
in
insl
jle
fcmovnu
loope
rcrl
mov
sbb
stos
dec
dec
xchg
les
bound
fsubrl
and
leave
inc
jg
jl
rol
into
lahf
xchg
in
cmp
xchg
mov
push
popf
ficoms
das
andl
pop
sub
jle
push
jl
dec
incb
mov
push
push
loopne
jg
push
pushf
mov
js
aas
stc
sti
int3
push
jecxz
nop
jle
and
and
insl
aas
jle
nop
dec
jb
loope
movsl
cmp
mov
repnz
ss
hlt
rorb
stc
subb
cmpsb
mov
sar
rolb
push
ja
mov
aad
adc
aam
xchg
roll
les
imul
pusha
jns
dec
sub
mov
sub
mov
push
scas
cmp
sub
lcall
add
test
repnz
mov
dec
inc
stos
add
cli
or
lea
mov
imul
shr
test
cmc
fmuls
push
inc
mov
fwait
xchg
dec
mov
aaa
inc
cmc
fucomp
scas
adc
pop
add
push
jmp
sbb
cmp
cwtl
push
add
and
movl
sbbl
sub
lahf
push
test
mov
jg
jns
fs
pop
test
jb
inc
fsubs
jno
push
iret
data16
pop
sub
sti
xor
loope
into
jecxz
push
repz
jo
push
sub
cmp
imul
es
sub
test
pop
ret
xchg
ss
daa
xor
cwtl
notb
orb
decb
jns
into
mov
push
daa
clc
dec
add
mov
or
shll
xchg
xor
cmp
push
mov
push
fidivs
add
push
in
roll
imul
and
push
ds
xor
jae
add
jle
cmp
rorb
adc
mov
and
adc
push
mov
pop
mov
hlt
sbb
xor
adc
fsubl
cmpb
adc
mov
mov
in
sarb
leave
jae
and
jl
and
les
mov
push
test
dec
pop
mov
loopne
icebp
sti
and
rclb
jg
jge
cmc
insb
icebp
negl
bound
mov
cs
pusha
inc
cld
clc
pop
mov
jge
mov
dec
add
mov
in
cmp
movsl
jno
dec
jno
mov
lret
push
icebp
cltd
icebp
clc
sub
lahf
or
mov
mov
pop
call
jno
bound
sub
clc
mov
inc
xor
jge
ret
inc
jmp
idiv
push
imul
int3
and
imull
nop
pop
test
negl
pop
cmp
dec
xchg
iret
movsl
xchg
inc
add
mov
ljmp
stos
ret
add
mov
jp
jns
dec
iret
mov
int3
mov
jno
fiaddl
mov
dec
ret
negb
aas
xor
jnp
add
xchg
sub
in
insb
mov
sbb
or
cmp
imul
dec
ss
push
sahf
mov
arpl
arpl
pusha
push
loopne
out
scas
arpl
mov
popa
push
xor
es
scas
aas
mov
mov
and
mov
test
and
push
adc
test
sti
test
out
or
roll
scas
jmp
fmulp
xor
mov
addr16
sub
add
aas
fwait
push
mulb
nop
sbb
sub
fidivrs
fstl
mov
jg
sub
sub
sbb
ret
lret
jl
mov
dec
push
call
stc
sub
pop
orb
movsb
and
and
pop
test
and
push
and
push
mov
into
mov
in
scas
and
xor
int3
push
in
daa
add
int
mov
dec
aas
push
mov
cmp
xchg
ss
std
icebp
mov
cwtl
jae
mov
sbb
inc
aaa
push
cwtl
xchg
xlat
fcmove
divb
insl
push
aam
cltd
push
dec
lcall
jnp
shlb
jg
adc
mov
or
repnz
push
in
std
fsubr
cli
dec
xorl
cmc
cld
dec
inc
or
push
mov
sbb
lret
scas
xor
adc
xor
cmp
clc
fisubrl
lahf
out
repnz
inc
and
stos
inc
cli
jecxz
sub
mov
call
jns
sub
mov
fsubs
aad
sti
pushf
and
mov
incb
jno
pop
push
or
mov
push
xchg
push
mov
xor
addr16
pop
mov
shlb
lods
sbb
loop
add
add
push
xchg
data16
lds
or
pop
insb
test
repnz
addr16
sub
add
int3
int3
scas
nop
xor
arpl
inc
push
and
out
jle
xchg
mov
ret
loopne
jbe
dec
pop
fwait
add
imulb
cmp
cltd
lahf
sbb
stos
add
jl
nop
and
shl
cs
insb
lret
push
sbb
or
xchg
pop
das
outsl
loopne
dec
scas
int3
icebp
je
mov
mov
imul
test
add
shll
les
shll
mov
mov
mov
sbb
sbb
cmp
push
out
sahf
lds
and
sbb
lahf
sti
sbb
outsb
scas
in
inc
es
adcl
stos
std
push
dec
sbb
addr16
enter
dec
cmp
xor
xor
aam
sbb
cmp
pop
and
jg
aaa
jns
inc
loope
mov
mov
mov
sbb
cld
icebp
or
sbb
leave
icebp
std
pop
add
push
mov
pop
mov
divb
dec
sbbb
cltd
dec
xchg
xor
aam
xchg
push
pop
decb
xchg
add
mov
inc
mov
sti
jmp
cmp
jno
negb
std
shrb
nop
shll
stc
lea
jmp
mov
sub
pop
mov
push
push
loope
mov
jns
ja
pop
ret
xchg
mov
add
cmc
push
pop
jmp
jl
or
das
stos
gs
inc
hlt
insl
mov
xchg
jp
inc
test
fistpl
les
test
push
add
cmp
push
xlat
or
insl
inc
aad
int
in
mov
dec
ret
cmp
inc
mov
int
pop
or
popa
test
push
pop
cmp
jge
sub
xchg
leave
mov
lds
cmpsb
jnp
lods
adc
and
insl
cmp
xchg
lods
push
xor
lock
cltd
mov
inc
jne
mov
cltd
test
enter
pop
shrb
and
in
dec
ficomps
adc
jno
sub
add
ja
pop
and
leave
aam
les
jecxz
fucomi
add
mov
stos
mov
dec
xor
and
imul
test
jle
scas
rolb
dec
or
jnp
stos
mov
and
fsubl
fstl
es
adc
rcrl
cli
das
xchg
xchg
test
mov
int3
xor
mov
push
add
mov
imul
and
lds
icebp
mov
shlb
lock
ljmp
repz
adc
ret
int3
stos
test
adc
scas
add
and
notl
add
push
add
xor
addr16
outsb
inc
jecxz
adc
aam
pushf
dec
aad
je
mov
rclb
scas
pop
xor
addr16
push
fwait
mov
jo
fsubr
in
pushf
pop
pushf
xor
pop
xchg
lods
cmp
lods
outsb
int
insl
cmp
aad
add
lret
fistps
testb
int3
aas
movl
and
gs
sbb
nop
push
cs
shlb
pop
sub
sahf
adc
cmp
sbb
insl
ffreep
cmpb
cmp
hlt
sbb
int3
xorb
add
xor
sti
or
push
sub
cs
inc
out
sbb
sbb
or
cwtl
jnp
cmp
stos
mov
jno
outsb
rorl
stos
and
push
and
push
dec
pop
dec
ljmp
sub
sub
fldl
jmp
pop
sbb
inc
lret
test
outsb
and
test
jmp
hlt
leave
cmp
inc
addr16
les
sti
icebp
out
hlt
mov
mov
out
les
xor
sub
cmpsl
push
je
icebp
mov
xchg
xor
out
comiss
xchg
out
push
push
xchg
push
mov
add
xchg
push
cmpsb
cmp
jns
leave
cmp
mov
push
sub
lock
jmp
ret
mov
je
mov
sbb
mov
mov
or
sub
jae
dec
iret
test
xor
mov
loop
mov
push
push
or
dec
sbb
dec
clc
sbb
sbb
push
jbe
dec
aas
xor
push
jb
mov
and
xabort
xchg
bsr
data16
sub
int3
test
jae
shrb
xor
mov
jl
adc
call
ja
aas
and
clc
addr16
mov
push
scas
mulb
popf
pop
ficomps
nop
cmpsl
cli
or
addb
int3
out
xchg
aad
adc
adc
fs
dec
outsl
xor
lea
rcll
mov
xchg
jbe
in
add
clc
or
cmp
push
adc
lds
fisubrs
pop
in
sarl
fdivp
xchg
or
push
in
push
jp
ja
mov
pusha
enter
sahf
cmpsb
sub
add
and
mov
in
stos
mov
int3
push
sub
add
fidivrs
jg
lret
stos
xlat
add
cmp
jb
xor
dec
mov
ljmp
fsubrl
aad
and
pop
mov
inc
out
fmul
jl
add
and
shlb
mov
jae
xor
pop
push
sbb
in
insb
push
adc
popa
mov
sbb
inc
repz
push
sub
or
push
push
inc
xor
rcrb
into
outsl
andl
jge
xor
mov
and
push
cmp
and
out
out
mov
int3
lcall
push
ss
inc
lcall
fdivrs
xor
in
stc
sbb
leave
xchg
out
cmpsb
out
mov
xchg
pop
loop
sbb
mov
out
stos
pop
dec
xchg
stc
nop
jp
sub
scas
or
jecxz
or
mov
lcall
adc
rorb
jne
fcmovb
stos
pop
test
gs
cmp
add
jae
cmp
mov
jle
negb
cltd
adc
insb
int
clc
clc
adc
push
mov
je
sahf
jmp
sarb
icebp
pop
pop
sub
movsl
pop
ret
pop
dec
dec
push
adc
cs
dec
filds
pop
pop
sub
inc
es
icebp
movsl
sub
setge
add
mov
push
cld
mov
pop
add
test
aas
inc
cmp
test
imul
mov
or
xchg
mov
adc
int3
fstpl
lds
outsl
jne
fwait
xor
jae
inc
daa
mov
sbb
bound
xchg
fnstcw
lds
test
lcall
sbb
mov
inc
imul
mov
and
xchg
add
insb
aad
pop
cmp
leave
popa
mov
imul
xchg
sti
mov
into
in
aam
cmpsb
inc
mov
aam
inc
test
cmp
push
outsl
loop
repz
mov
lret
mov
outsl
push
fnstsw
test
push
sbb
inc
inc
mov
cli
push
repz
test
add
aad
adcl
inc
leave
out
jbe
andl
xchg
subl
orb
lock
add
lret
insb
ficoml
or
mov
int3
jne
outsb
pop
sub
jl
or
dec
fldenv
cs
cli
test
imul
mov
xor
pop
cwtl
pop
ds
mov
push
sub
jle
xchg
sbb
fildll
test
mov
inc
out
xlat
pop
push
test
mov
in
pop
hlt
cmpsl
mov
insl
inc
jns
cmp
data16
push
mov
jg
xchg
lahf
xchg
sti
testb
push
mov
popa
testl
rcpps
xor
sub
in
jae
dec
push
outsb
out
sub
cmp
inc
imul
xchg
lock
push
scas
mov
push
dec
mov
pop
sbb
mov
push
scas
or
insb
xchg
aas
jbe
test
xor
push
lahf
mov
outsl
data16
cmpsl
pop
iret
xor
imul
test
clc
pop
sahf
jmp
mov
xchg
sub
fcomi
mov
cmp
fisubs
hlt
xchg
push
cld
sub
sti
fiaddl
jo
adc
dec
or
sbbl
push
push
and
adcb
xchg
xor
mov
nop
and
cmp
xchg
scas
or
sbb
cltd
lds
les
lret
insl
jp
xor
lods
je,pn
insb
jnp
mov
push
or
dec
mov
push
in
push
js
shrb
fisubl
sub
cwtl
jl
xlat
jg
mov
add
mov
inc
xor
mov
bnd
and
addr16
pop
adc
je
inc
out
lock
jmp
lret
mov
out
nop
iret
xchg
leave
ficoms
jb
dec
aad
sbb
ret
test
cwtl
and
mov
xchg
in
aas
stos
cmp
addr16
ljmp
es
jo
adc
addl
fnstsw
in
scas
aas
cli
mov
add
pop
xchg
jle
jge
add
rcll
push
push
ljmp
and
xchg
push
xorb
scas
mov
mov
mov
insl
pop
and
sbb
push
dec
adc
mov
jno
jle
loop
dec
scas
fdivrs
push
pop
mov
jle
mov
cmpb
push
mov
jb
ficoms
scas
add
shrb
jle
dec
loop
xchg
cmpb
push
mov
jb
ficoms
scas
add
shrb
jle
dec
loop
adc
cmpb
push
and
push
out
inc
jb
fists
scas
add
shrb
jle
dec
loop
xchg
cmpb
push
mov
push
fmul
bound
inc
jno
popa
movsl
pop
mov
test
insl
push
movsl
lcall
call
adc
add
push
lods
movsl
pop
mov
test
insl
in
cmc
sbb
xor
std
sbb
gs
inc
popl
push
lods
mov
lea
add
adc
cmp
push
out
pop
test
rcrb
stc
sbb
add
int3
adc
cmp
mov
cmc
int3
add
adc
mov
stc
dec
out
insl
gs
popf
inc
fs
pop
dec
std
je
cmp
inc
ret
mov
lods
jmp
xor
dec
stos
push
pop
rorl
dec
shll
es
jno
dec
push
adc
int
xchg
cwtl
adc
mov
add
sbb
aam
scas
cmp
ljmp
inc
push
mov
or
in
js
xor
repz
jne
mov
mov
push
sbb
fnstsw
mov
cmpsl
js
inc
adc
mov
insl
inc
mov
lods
pop
test
repnz
int3
xor
hlt
jge
insl
xchg
pop
cmpsl
push
lods
leave
pop
sarb
loopne
loope
xchg
pop
xchg
insb
mov
dec
and
stc
jno
gs
adc
lret
and
push
in
mov
xchg
test
add
in
push
lea
fidivl
fld
pop
sbb
sub
cmp
xor
in
gs
jne
inc
mov
mov
test
insl
in
cmc
or
and
std
adc
lea
push
lods
movsl
pop
lcall
xchg
xchg
xchg
repz
add
jne
jmp
insb
and
lock
outsl
dec
test
mov
sub
lods
dec
jo
nop
adc
add
sarb
shll
adc
fs
mov
stc
icebp
jo
and
and
push
test
cmpsb
sbb
je
mov
ljmp
test
nop
dec
addl
jo
ret
and
mov
pop
cmc
cs
aaa
jnp
adc
push
inc
pop
mov
ljmp
lahf
repnz
ljmp
out
and
mov
ja
fistl
jl
or
sti
clc
jno
cmp
movsb
shll
adc
jg
outsb
into
repz
xchg
shr
xor
shrb
cmp
push
ljmp
sub
lret
loope
aaa
in
ret
sahf
jge
mov
stos
push
xlat
or
adc
jno
push
or
xchg
xor
push
into
xor
inc
sbb
mov
in
pop
int
test
lahf
and
xor
mov
dec
pop
mov
lcall
sbb
mov
sti
pmaxub
add
std
lea
in
lock
pusha
in
mov
repz
mov
jge
aad
in
outsb
aaa
out
sbb
mov
xor
adc
clc
hlt
cmp
cld
outsb
and
xor
jne
jne
aas
mov
mov
and
outsb
ss
lret
loope
lods
pop
sahf
inc
xchg
xor
sub
xchg
stos
mov
adc
out
imul
js
mov
jle
cmp
and
cmp
and
pop
jg
pop
inc
je
xchg
mov
adc
jg
cmp
loopne
popa
or
or
shl
jb
add
into
mov
xchg
mov
dec
cwtl
pop
or
jge
or
fsubrl
pop
or
ja
lret
daa
insb
int3
js
push
push
leave
inc
aas
push
shrl
jge
lret
cmpsb
adc
add
les
fsts
arpl
rcrb
int3
mov
jecxz
sarl
lahf
xor
jge
sarl
dec
enter
jb
cmpsb
sub
pushf
insb
mov
bound
jmp
mov
nop
sub
mov
add
adc
fistl
jno
mov
push
xor
bound
jg
push
in
bound
adc
jmp
add
mov
xor
ja
sbb
into
inc
mov
or
or
popa
arpl
pop
inc
out
inc
mov
repz
xchg
jp
aas
es
shl
push
js
xor
mov
hlt
pop
or
test
xchg
pop
push
shlb
xor
push
addl
div
sub
mov
jmp
jle
cmp
popa
add
pop
fwait
mov
push
inc
lock
addb
and
test
imul
dec
rolb
pop
mov
sub
add
inc
mov
cmp
fwait
mov
mov
pusha
je
andl
mov
es
adc
mov
jnp
je
xor
test
sbbl
fsubr
mov
daa
add
pop
ret
jle
mov
pop
xchg
push
aam
cs
cmc
out
jns
sbb
xchg
repz
pop
sbb
call
mov
dec
dec
cmp
adc
repnz
es
cmp
mov
insb
lret
int3
adc
inc
repz
and
test
out
data16
js
insb
daa
inc
xlat
xchg
adc
mov
ret
les
popa
mov
sub
imul
cmp
sahf
adc
rorl
js
lods
pop
push
dec
test
popa
repnz
mov
and
ret
fmuls
or
dec
dec
xchg
adc
pushf
lds
rclb
mov
clc
pop
imul
imul
xorb
or
mov
out
pushf
jg
cmpsb
sbb
into
ror
out
sub
sarl
leave
divl
loope
ret
pop
inc
mov
pop
popa
jnp
push
repz
into
lret
jmp
add
sbb
lock
out
scas
jo
mov
inc
hlt
cmp
ljmp
cmpb
imul
mov
mov
aaa
xlat
cmpsb
inc
dec
popf
sub
ds
aam
dec
mov
popf
sbb
mov
call
inc
idiv
sbb
adc
sbb
jo
adc
imulb
push
je
fcmovnu
pop
xchg
fcomps
int3
push
add
xlat
sub
pushf
out
jne
jb
jge
les
jb
repz
mov
dec
pop
js
fstpt
es
fnsave
push
fidivrs
ficoms
in
xor
sub
mov
ja
lock
rorb
rorb
mov
cmpl
add
and
push
mov
cwtl
scas
adc
cld
fwait
out
add
xchg
nop
jne
int3
adc
cmc
cwtl
sbb
scas
xlat
xor
icebp
mov
les
push
scas
and
jae
and
mov
imul
or
push
jge
mov
mov
popf
mov
jo
out
pop
xchg
test
sti
or
mov
ds
sbb
xor
sbb
jnp
popf
pop
outsb
cli
sbb
jecxz
jne
pop
push
aaa
push
pop
adc
pop
mov
cmp
stos
jnp
loope
xor
jae
jg
stos
lret
xchg
ja
test
clc
in
pusha
pop
ljmp
sbb
push
sub
lcall
rclb
cmp
pop
ljmp
push
mov
adc
xor
jno
inc
sti
jne
loop
or
push
stc
xchg
lcall
dec
data16
mov
pop
cmp
mov
add
cs
xchg
mov
fcomps
cmp
fnstsw
jge
push
sti
dec
jg
jmp
repnz
and
add
or
lods
mov
mov
inc
rcll
jne
and
test
test
xchg
cwtl
cmp
push
mull
mov
pop
aad
xchg
cmp
incl
mov
pop
cmpsl
cmp
or
mov
push
loope
es
push
mov
popf
scas
pop
enter
dec
loop
pusha
lcall
dec
dec
sub
into
jns
nop
mov
and
push
xchg
sti
out
dec
daa
pop
popa
fbstp
lods
arpl
shlb
pop
movsl
sbb
lret
repnz
in
lods
add
mov
repz
jns
add
pop
sub
sub
outsl
lds
int
xchg
lods
loopne
jmp
xchg
mov
sysexit
xor
mov
pop
add
cmp
xor
sahf
sbb
cs
rclb
std
sbb
fs
mov
xor
out
jb
shl
push
loopne
mov
jnp
sbb
and
in
mov
mov
in
lret
xor
scas
and
dec
fisttpl
sbb
add
lret
pop
inc
fcmovb
and
xchg
mov
dec
jb
cld
jae
or
mov
clc
int3
xor
cmp
xchg
leave
mov
sahf
mov
jne
cli
lahf
mov
pushf
lahf
icebp
mov
mov
mov
imul
jg
pop
push
lret
xchg
dec
hlt
xlat
add
shrl
loope
insb
imul
push
mov
or
inc
adc
outsl
into
test
aam
in
in
int3
test
jle
test
push
mov
sub
xor
mov
or
jle
fldenv
jg
rcrl
inc
cmpsb
aaa
sub
jnp
sbb
sbb
jl
lret
int3
mov
ds
xchg
mov
in
mov
or
push
fwait
and
mov
push
push
lret
cmp
fcmovne
stos
roll
sbbl
aam
pop
fcmovnb
ret
in
add
lds
mov
pop
daa
add
adc
in
pop
jecxz
and
shr
jp
add
cltd
mov
xchg
mov
sarl
xchg
push
in
push
loope
pop
ja
into
stc
or
adc
push
jb
jl
jg
jle
divb
mov
dec
movsb
lcall
sub
mov
cmpsb
cld
mov
pop
das
mov
aam
int3
leave
lret
faddl
sbb
fs
fwait
cmp
repnz
pop
xchg
xchg
scas
test
clc
or
mov
les
sbb
dec
dec
jg
orb
jb
fadds
adc
cmp
fwait
adc
pop
sahf
dec
addl
aad
dec
and
das
dec
cmp
cmp
and
out
stos
adcl
testl
jp
insl
xor
pop
pop
mov
xchg
dec
pop
mov
scas
sti
pop
inc
xchg
push
fisttpl
dec
andl
add
test
mov
into
xor
mov
sbb
shlb
ret
dec
xchg
test
imul
dec
imulb
xor
call
ljmp
xchg
neg
test
aas
push
imul
jge
lahf
jo
jbe
cli
dec
sbb
jb
pushaw
loopne
data16
mov
loop
inc
inc
or
sti
jl
mov
mov
adc
es
daa
lret
js
das
cmpsl
int
outsl
addr16
push
push
dec
add
mov
aaa
mov
adc
fisubrs
cmp
int
cs
adc
andl
jne
or
fbstp
filds
add
or
and
cmc
and
sti
repnz
xor
mov
sub
icebp
aam
fidivrs
sbb
cltd
test
sti
flds
sahf
add
data16
cmp
popf
fidivrl
into
push
mov
cmp
gs
mov
ret
popf
subl
inc
out
lds
pop
mov
sub
lret
mov
sbb
aam
imul
test
inc
popf
add
inc
sub
cmpsb
adc
movsl
adc
jnp
jne
ficompl
adc
stos
add
inc
divb
xchg
pop
int
test
xor
outsl
in
sarl
and
mov
stc
out
cld
sbb
dec
cs
lahf
add
and
mov
pushf
cmpsb
shl
inc
cmpsb
pop
scas
out
int3
insb
shll
sbb
out
stos
je
push
cwtl
out
sti
fisttpl
xor
mov
addr16
jno
pop
je
xor
outsb
pop
insb
sub
test
cltd
sbb
or
push
sbb
sub
xchg
test
sahf
stos
pop
leave
pop
adc
jo
dec
out
push
loop
int3
adc
jo
adc
adc
lods
scas
pop
push
xor
push
leave
arpl
pop
and
jne
and
les
cmpsb
xchg
cmp
jecxz
pushf
and
subl
fildl
loope
les
mov
mov
cmp
mov
loop
mov
push
mov
dec
insb
push
int3
xchg
adc
fwait
jle
mov
push
and
xchg
lods
movsb
jb
mov
testb
mov
loope
and
push
mov
addr16
lcall
jecxz
fidivrl
xor
repz
push
rorl
flds
cld
addr16
cmpsb
pop
cmp
dec
jns
xor
jecxz
inc
ds
sbb
and
jg
loop
push
out
and
jo
sub
test
or
les
sar
mov
int3
push
aad
stc
add
pop
lahf
mov
stos
sbb
popa
inc
aas
aad
or
je
push
sub
pop
cmp
xor
aaa
xchg
dec
pop
adc
push
mov
mov
or
scas
mov
inc
test
daa
sar
push
cltd
rclb
adc
xchg
inc
nop
pop
or
adc
pop
repz
add
xor
xchg
stos
jne
inc
es
out
mov
pop
sahf
xchg
sahf
and
mov
or
sub
in
test
nop
and
cmp
call
sbb
mov
sbb
maskmovq
mull
js
ds
repnz
jp
pop
stc
sub
fucomp
in
shll
pop
dec
into
enter
jno
fimull
pop
jae
insb
addb
mov
in
inc
push
out
and
mov
ret
mov
inc
cld
xchg
mov
sub
sbb
sub
mov
and
mov
bound
outsl
pop
lds
loope
cld
sub
mov
cmpb
in
and
test
push
jns
mov
ret
pop
lret
xchg
insl
jbe
repnz
dec
dec
or
xor
jl
scas
std
jo
adc
arpl
cmp
mov
adc
mov
es
jg
lret
pusha
pusha
stos
leave
addb
dec
mov
mov
icebp
mov
cmp
int
ja
cmp
scas
jmp
je
in
adc
scas
lret
mov
sbb
xchg
jecxz
imul
in
mov
insb
jmp
jb
or
int3
cs
test
cmp
rcl
cmp
insl
cmp
mov
cmp
clc
in
imul
std
push
inc
dec
jmp
notl
adc
pop
gs
cmpsb
push
inc
jmp
dec
call
mov
cmpsl
mov
es
in
xor
cmp
jmp
jmp
push
xchg
xchg
and
mov
push
fdivrs
lods
in
mov
sahf
jle
lods
call
outsl
fstpt
mov
aaa
mov
push
pop
sub
mov
out
and
cltd
cmp
adc
aam
idivl
push
adc
add
sbbb
cld
hlt
pop
cwtl
gs
jge
sti
movb
xchg
jecxz
add
mov
mov
and
push
pusha
sbb
push
mov
int
ds
clts
cmpsb
test
les
mov
pushf
lahf
or
push
jb
add
out
sbb
aam
push
pop
scas
mov
stos
out
or
sti
lock
mov
fstpt
imul
test
pushl
jl
bound
sbb
sub
sub
fsubl
data16
outsl
je
pop
jg
mov
pop
sbb
cmp
inc
in
sub
and
jl
popa
loopne
cmp
mov
es
arpl
mov
xor
mov
dec
mov
cwtl
out
aas
inc
add
and
or
daa
push
subl
adc
fsubrs
push
notl
push
enter
sarl
xlat
rclb
in
mov
negb
repz
sub
insb
sbb
test
into
scas
lret
dec
out
cmp
xor
cmp
popf
enter
sub
fstps
mov
in
xchg
jae
pusha
repz
jnp
jmp
mov
dec
jp
adc
mov
fs
cwtl
cmc
xchg
into
or
sti
xlat
repz
lcall
jbe
add
leave
cwtl
enter
cwtl
mov
aas
scas
inc
ja
adc
gs
cmp
loope
push
push
pop
scas
outsl
jecxz,pn
or
jns
xor
mov
mov
dec
fsubrl
xchg
divb
mov
fisubrs
adc
push
xor
mov
frstor
out
dec
mov
cmp
imul
xchg
mov
pusha
rcrb
xchg
rcrl
inc
daa
mov
cmp
dec
push
mov
add
gs
loope
mov
xchg
cmp
or
push
std
jae
and
pop
pop
mov
jl
das
popa
mov
jg
lea
cmp
in
sbb
int
adc
mov
std
xchg
out
inc
jmp
flds
imul
sub
mov
fldcw
jl
jp
mov
dec
sub
in
sub
int
pop
push
pop
scas
imul
or
push
negl
adc
aaa
and
and
dec
je
sub
jg
adc
incb
push
orb
pusha
divl
inc
subl
nop
sti
stc
jmp
mov
dec
imul
repz
dec
push
lock
xor
mov
cmp
loop
sbb
decl
mov
rorl
pop
cmp
lret
mov
xchg
lods
adc
fimull
add
loope
clc
mov
jo
pop
inc
sub
iret
es
add
xor
rorl
jle
sub
in
ja
loope
pop
loopne
in
stos
loope
cli
jno
fwait
stos
mov
fstp
mov
and
in
sub
jle
fistpl
jg
xor
les
mov
test
and
lock
ljmp
cmp
xor
sbb
push
lea
sar
into
jne
push
ret
add
mov
xor
push
xchg
mov
mov
arpl
jbe
fcompl
adc
cmp
and
iret
xchg
mov
clc
mov
out
mov
fmuls
cmp
sub
fbstp
inc
lret
insl
push
xor
jbe
bound
idivb
loop
in
aaa
mov
or
inc
dec
int
add
adc
lods
jnp
loopne
das
push
mov
fistpll
lret
push
adc
negb
fdivrl
mov
mov
push
rcrl
insb
lret
je
outsl
sbb
fildl
jnp
mov
faddl
sti
mov
pop
push
adc
xor
fidivl
cmpsb
mov
mov
mov
roll
lcall
lods
pusha
out
out
xor
push
gs
mov
test
pop
sbb
pop
push
int3
and
icebp
mov
test
mov
call
iret
imul
popf
xchg
sub
pop
andb
lods
pop
lcall
sbb
data16
gs
call
cmp
or
cmpsl
pop
add
mov
into
insl
sub
mov
pop
mov
cmp
mov
inc
or
inc
js
hlt
insl
andb
out
push
cli
inc
pop
out
xchg
sbb
pusha
ss
lret
add
cmc
inc
fcompl
xchg
test
cld
dec
leave
bound
adc
js
mov
push
faddl
cmp
fnstenv
cmp
inc
jp
or
push
sbbl
repnz
adc
adc
and
ja
sahf
es
fcmovnb
pushf
push
jno
shlb
stos
rolb
aas
adc
mov
push
scas
rorl
cmpsl
add
in
cli
je
sub
push
cs
xchg
shlb
pop
mov
mov
sahf
sbb
in
xchg
jb
push
out
cli
mov
inc
add
xchg
pop
sbb
stos
fnstenv
jno
cwtl
data16
dec
pop
push
lods
inc
neg
mov
fldln2
sbb
dec
cmp
cli
adc
adc
lods
in
fcomi
das
and
ljmp
push
insb
bound
xchg
lods
sub
cwtl
cs
sbb
movsb
jb
movsb
xchg
sti
push
call
push
push
inc
aad
imul
sbb
jns
adc
movsb
scas
mul
fldcw
aad
xor
sahf
aam
pop
outsl
movsb
sub
fisttpll
push
and
test
mov
sbb
lods
jbe
sub
insb
mov
in
in
not
int3
lcall
fmuls
ljmp
lcall
sahf
cmc
mov
add
test
xchg
in
test
sub
sbb
sub
xchg
in
loop
aas
leave
pop
jg
faddl
movsl
pop
dec
adc
sahf
sbb
mov
lock
mov
xchg
pop
jnp
arpl
outsl
inc
mov
cltd
adc
or
or
lcall
lea
in
addb
mulb
xchg
fcoms
push
inc
dec
cmp
xlat
sub
jg
call
aam
cs
xlat
addr16
jne
leave
mov
pop
das
arpl
fs
divb
pop
xchg
add
sahf
mov
mov
push
data16
pop
nop
sbbb
pusha
dec
mov
mov
cmpsl
mov
xchg
push
sbb
mov
out
push
ds
imul
push
icebp
add
sbb
in
ds
loopne
jmp
rorb
jle
fcoms
xchg
xor
cltd
fs
jmp
lret
out
or
and
out
outsb
cmpsb
xchg
or
push
jae
sbb
mov
cmpsb
fnstenv
dec
dec
dec
cmp
xchg
in
out
repnz
add
mov
repz
sub
mov
push
pop
dec
gs
or
fistps
xlat
call
xchg
daa
movsl
mov
outsl
aad
jp
mov
mov
jbe
cld
and
or
rcr
mov
push
negl
jbe
cmpsb
shlb
mov
jge
popa
loopne
mov
ss
cmp
andb
scas
add
shlb
enter
jge
insl
in
cmc
or
and
std
adc
lea
push
lods
movsl
pop
mov
test
insl
in
cmc
or
and
std
adc
lea
push
lods
movsl
pop
mov
test
insl
in
cmc
or
and
std
adc
lea
push
test
test
insl
out
cmc
or
fcmovu
lret
std
adc
repnz
imul
mov
and
sbb
sbb
adc
add
xor
and
push
lea
je
cmp
movsb
sbb
hlt
sub
and
xor
and
cmp
fs
mov
cmpsb
add
insl
clc
and
sub
addr16
imul
jmp
xchg
add
jge
add
sbb
or
cmp
pop
mov
fsubrs
test
xchg
std
out
call
cmp
xor
xor
push
roll
mov
scas
jnp
aam
dec
cld
xor
cltd
int
call
je
inc
jne
xchg
je
push
and
sbb
aam
lods
ret
sbb
jmp
push
jns
adc
bound
mov
mov
out
and
lock
std
inc
dec
adc
repz
fadds
lea
mov
cmp
sahf
loop
in
ret
sbb
adc
insb
je
sbb
push
fidivrs
push
xchg
sbb
insl
scas
stc
aam
les
xchg
push
ret
xchg
aas
test
notl
stos
dec
popf
sub
inc
cwtl
inc
mov
cmp
xor
xor
sub
pmullw
je
push
mov
push
xchg
inc
in
loop
aam
in
rdtsc
ret
sbb
ds
dec
mov
les
adc
add
xor
and
push
lea
lods
fs
xchg
dec
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
xchg
jmp
mov
dec
in
push
stos
scas
mov
ds
sahf
push
mov
imul
push
push
lods
lahf
sub
jl
jmp
push
and
adc
lret
push
ret
xchg
shlb
in
jns
add
xchg
ljmp
lret
std
xchg
cmp
addb
sti
cmp
or
mov
mov
fistpll
cs
and
sub
or
fmull
push
loop
add
add
dec
cmp
fisubrl
lock
cwtl
mov
pop
push
mov
popl
lahf
xchg
push
mov
out
push
fists
pop
cmp
imul
mov
adc
mov
jle
iret
ret
addl
gs
jecxz
fldt
jg
push
shrl
imul
popf
mov
cld
cmp
xor
mov
cmpsb
pusha
add
mov
scas
shrb
not
mov
push
insl
mov
push
cmp
scas
or
push
fbstp
fcoml
or
sbb
mov
xor
sbb
xor
xchg
cmp
adc
and
loopne
loope
pop
pop
add
scas
js
lahf
and
aad
sbb
adc
pop
cmpsl
xor
in
fstpt
aam
mov
xor
pop
jns
mov
add
inc
aam
mov
popf
mov
jb
gs
sarl
dec
fwait
ss
jmp
cmc
fdiv
shll
jge
stos
roll
push
push
jbe
cltd
int3
or
mov
rolb
mov
lea
adcl
jnp
pop
mov
subl
inc
fs
fadd
aad
jno
push
in
adc
mov
pop
xor
andb
test
aaa
and
imul
test
aad
mov
rcll
aas
hlt
je
and
or
and
cld
imul
pop
inc
ficoml
mov
scas
jmp
mov
rorb
add
inc
ja
loopne
sub
loop
jae
mov
popw
adc
push
and
push
rcrb
insl
ror
xchg
add
sahf
aad
jo
sub
adc
bound
test
adc
inc
sbb
in
and
adc
aam
fsubrp
int
mov
gs
cmp
scas
mov
test
add
insl
sbb
xchg
stos
flds
insl
test
pusha
mov
aam
mov
sbb
jns
imul
add
or
xchg
mov
aam
das
push
stos
sbb
and
outsb
ret
mov
enter
in
icebp
les
int3
mov
mov
out
pop
or
fistps
add
or
fldl2t
testb
inc
xchg
addr16
lods
mov
adc
cmp
xchg
add
push
xchg
repnz
mov
add
push
pusha
cld
push
cld
repz
mov
xor
jecxz
hlt
inc
dec
pop
out
mov
aas
and
push
adc
stos
inc
add
pop
lods
pop
push
loope
dec
bound
mov
jl
lods
je
mov
gs
aad
fcoml
or
iret
inc
jae
scas
mov
aas
sub
and
fnstenv
shl
xorl
decl
stos
mov
push
and
loopne
test
or
daa
dec
rolb
insl
imul
push
cs
popa
aas
mov
roll
ss
cmp
mov
hlt
mov
fldl
inc
lret
int3
adc
push
pop
jo
jge
cmp
or
out
leave
jl
cmpsl
les
xchg
mov
mov
std
pushf
jg
jl
clc
daa
hlt
or
shrl
push
je
cmp
pop
adc
cmpl
cmp
inc
mov
lahf
popa
and
push
and
mov
jg
fwait
mov
inc
into
adc
jmp
sub
mov
xor
pop
pop
nop
sub
jmp
loop
fmull
popf
pop
xor
cmp
insl
inc
stc
or
sti
jmp
push
jns
or
mov
incl
cli
ja
mov
pop
mov
ja
xor
mov
and
mov
stc
lods
mov
mov
push
pop
repz
mov
sub
xchg
mov
pop
push
repz
dec
xlat
test
jecxz
adc
das
mov
stos
andl
out
adc
roll
xor
and
xchg
outsb
jp
jne
jo
insb
jbe
pop
lea
lcall
jmp
in
fcmovnb
imul
push
sar
lods
cli
mov
cmp
lcall
xchg
lahf
dec
sbb
xor
jecxz
mov
adc
xor
leave
stos
leave
lods
push
adc
gs
sbb
pop
dec
out
mov
imul
mov
pop
loopne
cwtl
xor
push
fsubrs
or
xchg
les
add
push
imul
xchg
imulb
cmpsb
imul
or
push
lcall
push
stos
stos
jp
jno
jnp
repz
jno
or
test
or
add
es
es
hlt
rcrl
xchg
rcr
push
shl
jbe
mov
xor
or
mov
mov
mov
adc
les
mov
jb
cmp
in
sbb
outsl
mov
test
dec
iret
jnp
loope
fidivl
call
enter
nop
loop
pop
lods
pop
fs
out
insb
push
std
mov
icebp
ror
or
movsl
push
popa
into
dec
push
xchg
or
jecxz
or
scas
xlat
and
xchg
sbb
jnp
ret
push
je
test
mov
fisubrl
lret
dec
shl
dec
insb
inc
testb
mov
sub
push
mov
dec
insb
adc
stos
js
repz
inc
dec
cwtl
imul
pusha
imul
or
lcall
gs
hlt
jb
je
push
movsb
push
pop
hlt
xlat
jne
and
imul
scas
scas
test
ljmp
sti
sahf
push
out
adc
fnstenv
xchg
icebp
outsl
rolb
adc
in
ret
xchg
and
repnz
mov
rcrl
xchg
jbe
add
fstpt
int3
pop
xchg
jne
insb
dec
jne
cmp
mov
push
or
cmp
mov
sub
inc
cmp
ds
and
adc
pmulhw
or
cs
pusha
fldcw
jne
jbe
bound
jecxz
aas
popa
clc
ret
jae
xchg
inc
shll
adc
xor
imul
pop
xchg
jbe
inc
pop
test
dec
push
pop
xor
test
push
jmp
rclb
in
test
jo
enter
xchg
pop
push
dec
xor
mov
addr16
add
dec
mov
push
int
mov
fs
rorl
jl
into
mov
pushf
in
addl
or
data16
movsl
xlat
add
hlt
dec
into
xor
dec
cli
and
sahf
sub
jg
cmc
jbe
and
aas
xchg
shr
aam
jno
jb
sub
aad
popf
mov
dec
push
sahf
stc
jg
sbb
xchg
out
cmp
sbb
idivl
inc
je
push
repnz
adc
mov
insl
inc
mov
mov
dec
fwait
mov
hlt
into
or
and
lret
and
test
aam
out
mov
aad
roll
call
sub
push
out
imul
int
cmpsb
sahf
rcrl
xchg
in
mov
xchg
into
push
push
movsl
add
push
cmpsb
pop
insl
jl
mov
lds
sbb
push
out
jo
aaa
adcl
in
xlat
mov
stc
push
xchg
insl
popf
rorb
adc
xchg
shl
adc
sub
push
pop
pop
xchg
ljmp
ss
or
cmp
push
cmpsl
adc
sbbl
shl
or
daa
mov
jb
jp
loopne
fwait
test
jecxz
add
adc
mov
inc
sahf
aam
adc
xchg
aas
jl
inc
and
pop
adc
pop
pop
mov
sar
inc
daa
sbb
mov
lcall
jle
adc
jne
ret
enter
inc
movsl
in
push
test
jmp
inc
xchg
fistpl
xor
movsl
mov
jmp
xchg
hlt
add
push
mov
mov
pushf
mov
dec
mov
enter
test
jg
mov
push
call
cmp
inc
ljmp
nop
and
pop
or
mov
sbb
push
xchg
jge
dec
or
adc
or
dec
rcll
jne
pop
adc
dec
cmpsb
je
mov
test
out
dec
jmp
mov
xor
mov
push
xor
xchg
in
orl
imul
imul
mov
sub
cmpsb
icebp
mov
push
in
mov
xchg
into
mov
shl
mov
es
loop
dec
dec
cmp
loopne
add
dec
movsb
push
inc
cmpsb
call
sbb
ja
dec
dec
pop
push
and
jp
movsl
cli
int3
mov
adc
xchg
pop
faddl
xor
sar
dec
jb
std
int
mov
scas
sbb
stos
sub
lds
mov
pop
shlb
mov
push
mov
out
nop
add
jae
cmp
jb
ret
sbb
in
add
push
jo
repz
sub
push
in
inc
jne
pop
in
dec
sbb
in
sub
sbb
loopne
cmp
jl
stc
mov
hlt
pop
inc
push
call
xchg
pop
jcxz
jecxz
xchg
xor
jno
insb
bound
lret
subl
repnz
rcll
mov
and
sarl
sub
arpl
mov
push
mov
orps
out
or
out
xor
pop
mov
and
cwtl
cmp
je
add
shrl
inc
arpl
cli
test
push
inc
sbb
pop
mov
call
mov
sub
add
and
out
jb
mov
rolb
jno
fwait
loope
test
dec
pop
or
mov
test
lods
and
into
out
addr16
dec
xchg
popf
ret
adc
fcomip
or
or
or
add
pop
lahf
add
push
fldenv
cmp
dec
jbe
lods
adcb
mov
popa
cmpsb
sbb
out
lret
fsubrl
jp
icebp
add
mov
adcb
dec
pop
and
mov
repnz
rorb
in
addr16
scas
inc
int3
push
dec
jle
add
xor
data16
ja
add
loop
jne
mov
xchg
cmp
sub
stc
mov
adc
dec
fnstcw
scas
andb
and
pop
lret
out
shr
mov
dec
and
cmp
mov
addr16
iret
sbb
repnz
stc
pop
roll
dec
gs
pushf
mov
add
fstps
jne
sti
push
push
or
pop
gs
ja
cld
mov
into
aad
test
mov
jl
les
push
xchg
xor
sbb
dec
push
test
mov
int
fcoml
mov
popf
cmpsb
roll
imul
pop
dec
add
out
fimull
xor
sbb
inc
jo
and
out
mov
movsl
xor
cmpsl
fnsave
scas
mov
inc
repz
push
xchg
adcl
scas
testb
int
cltd
das
repz
and
lret
insl
scas
push
fsubl
pop
jge
jp
movsb
mov
out
mov
imul
adc
lret
mov
push
ja
mov
loope
jg
iret
add
fisubl
xchg
pop
push
test
xchg
mov
scas
mov
lea
pop
into
cltd
sub
cld
sub
cli
sarb
sub
notl
lcall
and
fmul
fsubs
inc
bswap
xor
mov
repz
cmpsb
push
sbbb
dec
push
inc
mov
fsubs
orb
inc
xchg
repz
xor
jl
jnp
mov
movsl
das
nop
insl
or
arpl
mov
pusha
fsubl
les
enter
lcall
and
fwait
xor
xchg
push
mov
cmp
push
movsb
lods
xchg
or
mov
fistpll
into
das
dec
call
and
mov
out
cltd
mov
loopne
inc
adc
bound
jle
adc
and
shll
movsl
mov
lret
jne
xor
lret
or
out
cld
xchg
adc
aas
cmpsb
imul
jmp
nop
icebp
and
gs
jmp
sbb
mov
cli
es
jno
inc
arpl
ja
iret
dec
xchg
js
jnp
push
pop
das
stos
sub
outsl
hlt
adc
inc
test
xchg
mov
cld
mov
pop
mov
loop
shlb
sub
mov
mov
lds
inc
loopne
lds
xchg
push
push
lret
push
out
outsb
jo
and
push
popf
add
pop
cs
das
xchg
cmpsb
pop
mov
sarl
aaa
jmp
sub
mov
fidivl
icebp
mulb
enter
repnz
cltd
push
jecxz,pt
pushf
mov
push
out
cmp
jmp
sti
sbb
mov
xchg
scas
mov
call
sub
push
mov
add
and
pushf
and
mov
sub
dec
push
sti
cmc
mov
sub
rorb
adc
jmp
aaa
jae
cmc
mov
jae
lock
insb
shl
push
ss
xor
xchg
fisttpl
mov
adc
test
popa
fnstenv
in
mov
pop
fisubl
mov
mov
fs
fstps
ret
test
ja
lock
in
jmp
sbb
dec
mov
inc
mov
xchg
rcrl
lock
add
pop
xchg
outsl
iret
fsubrl
jae
dec
fs
mov
mov
pop
xchg
add
adc
jne
stos
in
push
mov
rcr
inc
mov
loope
rorb
and
and
inc
jno
inc
mov
add
or
rcrb
push
test
push
pop
sub
fimull
mov
leave
add
ss
or
or
mov
cmp
mov
mov
sub
ss
sbb
dec
pop
sub
shrb
inc
xor
sbb
inc
adc
mov
xor
mov
mov
test
add
inc
xchg
jl
and
das
dec
mov
jle
cmp
cmpsb
clc
pusha
lcall
enter
fldenv
fstpt
aaa
into
fstp
dec
in
jbe
cmp
lcall
mov
cli
stos
push
int3
cmp
jb
mov
je
in
push
addr16
jg
cmc
scas
icebp
mov
fs
push
jb
filds
and
sbb
add
push
sbb
mov
addl
inc
inc
stos
mov
cmp
decb
mov
inc
push
jo
mov
aad
add
xchg
mov
test
mov
xchg
int3
out
popa
inc
mov
adc
data16
inc
mov
movsl
and
adc
dec
or
and
sbb
add
ret
mov
cmp
push
adc
fwait
mov
insb
daa
adc
out
and
push
int3
mov
inc
xchg
rcr
lock
cmc
sti
push
hlt
push
sub
cmp
adc
inc
call
pop
mull
or
leave
sarb
mov
push
mov
std
jecxz
jmp
dec
xor
mov
mov
int3
cmp
cbtw
add
push
pop
adc
repnz
push
cs
shl
outsl
xor
add
pop
mov
fldenv
mov
inc
mov
and
xchg
jg
out
adc
xor
stos
push
add
add
ret
cwtl
repz
es
out
mov
test
jno
jl
int
sbb
loopne
adc
push
jl
stc
test
addr16
jno
scas
pop
popa
lock
movsb
hlt
jmp
adc
xchg
cmp
cwtl
adc
sahf
rorl
je
lret
xorb
fcmovnbe
aas
sbb
outsl
inc
mov
dec
xchg
es
popa
clc
imul
push
dec
subl
xchg
cmpsl
movb
mov
cli
jno,pn
loope
sbb
mov
ljmp
addr16
out
lcall
mov
lods
pop
sar
stos
push
lock
sub
and
or
movsl
pop
negl
push
rorl
popa
cmp
movsb
popf
ljmp
xchg
mov
lods
in
xchg
shl
adc
pop
scas
mov
push
push
xor
and
dec
mov
inc
mov
inc
out
sbb
ret
pop
adc
imul
push
push
mov
dec
fimull
loop
pop
jb
mov
lahf
and
cmpsb
test
pop
dec
ret
xor
lods
mov
dec
dec
nop
into
or
insl
stos
dec
sub
sub
cmpsl
sbb
xor
pop
sub
pop
xchg
cmp
jg
das
jae
les
adc
or
repz
cltd
inc
dec
xchg
loopne
ja
pop
adc
jge
bnd
sub
lret
dec
sbb
repnz
fiaddl
dec
cmc
push
pop
mov
fwait
addb
sbb
jns
cmp
pop
cmpsb
ficoms
loopne
cmc
mov
adc
mov
test
and
jbe
dec
mov
cwtl
fwait
pop
dec
daa
fstl
enter
call
fnstcw
and
or
out
add
mov
cwtl
sbb
adc
jnp
and
int
or
xchg
mov
pop
cmp
push
pop
cs
or
fwait
mov
xor
lods
lods
rol
bound
sahf
xorl
mov
push
adc
inc
fdivrs
cwtl
mov
or
sbb
cmp
sbb
leave
push
lds
sbb
lahf
sub
ljmp
cmpsb
mov
cmpsl
or
imulb
out
sbb
jnp
sub
mov
iret
inc
jmp
jmp
xchg
subb
push
mov
lcall
dec
pop
in
inc
push
movsb
sub
test
xor
mov
adc
and
out
push
rorb
ds
in
push
adc
ja
repz
jp
mov
enter
mov
mov
add
mov
fldenv
scas
scas
jnp
add
mov
cs
lahf
and
sbb
neg
xchg
cli
cmp
adcb
out
pop
jp
push
pop
mov
scas
adc
xor
ret
mov
test
adc
inc
or
jle
pop
ljmp
jne
sub
test
xor
mov
inc
cmp
sub
xchg
sarl
std
repnz
push
lea
in
daa
cli
jp
add
je
addb
xchg
xchg
sub
arpl
cmp
xchg
xchg
cmc
cli
loopne
cmp
cmp
dec
mov
mov
jp
mov
mov
movsl
mov
imul
inc
lret
cld
push
ret
mov
sbb
sar
stc
hlt
inc
pushf
sti
pop
movsl
bound
push
testl
loope
lock
xor
das
sbb
mov
pop
cltd
mov
push
mov
jp
pop
xor
mov
popa
int
ficomps
and
sbb
and
cmpsl
pop
mov
loopne
repnz
iret
pop
sbb
cs
lods
push
cmp
xchg
or
ss
pop
icebp
jp
es
add
jb
sarb
in
negl
pop
movsb
sbb
mov
or
aaa
mov
xor
shrb
mov
sub
mov
mov
addr16
mov
and
outsb
shrb
mov
dec
xchg
cmp
daa
mov
pop
mov
jle
lods
shll
adc
add
push
aad
xor
test
outsb
mul
movsl
lahf
xchg
xor
add
fisubs
shrb
ret
add
or
adcb
fisubl
aas
les
mov
out
sbb
arpl
pop
scas
push
call
adc
pop
mov
aad
lahf
sahf
push
cmpsl
xlat
cmp
fadd
jge
jo
daa
mov
js
xchg
jmp
pop
mov
and
psrld
adc
mov
sub
xor
cmp
fs
mov
jg
aas
mov
andb
sub
pop
inc
mov
lds
insb
invd
jno
fbstp
in
push
mov
lock
or
jl
inc
pop
cwtl
data16
add
lods
or
lret
mov
push
stc
sahf
cs
or
je
hlt
sub
cmp
leave
mov
movsl
adc
rorl
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
xchg
dec
test
insl
movsb
sbb
hlt
sub
add
xor
and
push
lea
lods
fs
xchg
jge
sbb
aam
insb
cmp
int3
int
or
push
popf
inc
mov
xchg
adc
aam
les
jmp
scas
push
xor
push
ljmp
fwait
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
loop
repnz
sbbl
cmp
sub
bound
jb
add
pop
xor
mov
loop
repnz
sub
sub
arpl
jb
imul
and
mov
loop
repnz
sub
sub
pop
and
dec
adc
mov
xchg
mov
mov
icebp
scas
sarl
pop
cmp
mov
fisttpll
divb
ret
outsb
mov
jg
xchg
outsl
pop
shrb
cmp
lods
xchg
popf
mov
adc
pop
lcall
push
xor
xor
cmpsb
jns
jno
inc
inc
push
in
popa
loop
ds
mov
decb
in
testl
xchg
and
mov
sub
repnz
push
dec
xor
sub
inc
or
jge
repz
mov
xorb
imul
inc
fwait
xchg
fcompl
add
sub
and
inc
cmp
inc
push
jecxz
dec
lea
push
pop
and
int
ret
fwait
loop
repnz
sub
sub
bound
jb
add
pop
and
std
ret
mov
mov
jp
das
dec
js
add
push
pop
push
pop
push
mov
stos
out
xchg
mov
cmc
lret
pushf
pop
daa
sub
pop
add
aas
test
inc
dec
data16
mov
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
sub
bound
jb
add
pop
and
mov
lea
adc
aam
push
push
pop
dec
mov
pop
movsl
repnz
fidivrl
cltd
shrb
xor
jp
mov
push
push
pop
stc
push
in
pusha
jbe
dec
ret
cmp
xor
inc
jg
cmc
push
push
add
in
push
pop
add
jb
pusha
jns
xlat
xor
mov
popa
push
xor
ja
mov
fstps
shll
outsl
cmp
mov
fwait
mov
test
mov
cmp
rorb
leave
loope
sub
scas
rol
or
xchg
and
mov
mov
cmp
rdpmc
lcall
mov
pop
add
pop
mov
adc
or
lea
mov
inc
fiaddl
jmp
cli
add
jp
lea
hlt
mov
mov
jmp
mov
push
js
mov
jl
push
nop
or
movsl
jmp
push
cmp
push
jmp
cmp
and
adc
push
push
out
inc
push
mov
shrb
push
in
imul
sti
pop
push
jge
lods
xlat
push
push
inc
mov
cmp
cld
pop
mov
cs
test
lahf
dec
cmpsb
xor
fs
push
push
mov
mulb
sbb
mov
push
shlb
lret
and
mov
or
rorl
andl
icebp
cli
sub
push
mov
sbb
scas
stc
jg
out
push
pop
jg
rcll
lods
mov
xor
out
iret
mov
and
jns
pop
pop
pusha
les
stc
loopne
jbe
loope
push
mov
cmpsl
clc
daa
sub
pop
lds
push
cmpsb
push
movsb
sti
xor
xchg
inc
jb
fidivs
add
add
xchg
aam
xor
lret
mov
mov
mov
pusha
xorl
jle
or
cs
dec
mov
dec
loop
inc
je
mov
popf
and
int
int3
mov
stc
adc
push
stos
cltd
mov
sahf
cmpsb
sub
push
or
sbb
pop
jne
hlt
loop
push
and
xchg
sti
sbb
mov
lods
dec
push
cwtl
stos
add
pop
mov
sbbb
not
xchg
addr16
cmp
wrmsr
push
andl
jge
push
shl
sub
mov
sbb
adc
sub
lahf
push
dec
rorl
aam
or
lahf
outsb
inc
jne
push
aaa
sub
push
mov
lods
jne
inc
mov
push
int3
mov
orb
mov
cmc
xor
and
mov
cmp
xor
sub
sahf
sbb
sbb
hlt
scas
mov
insl
mov
xlat
pop
addb
in
dec
hlt
sub
xchg
ljmp
ror
add
scas
imul
cmpsb
xchg
in
ja
shl
sbb
fsts
sub
sub
mov
addl
loopne
mov
jp
dec
bound
inc
cmp
insl
je
cmp
lock
shlb
mov
add
sub
in
pop
push
dec
lret
in
pop
push
sub
push
jo
dec
out
mov
mov
fs
mov
lret
pop
movsl
lret
inc
and
insb
jg
lahf
std
pop
jecxz
mov
repnz
negb
mov
sbb
in
adc
nop
hlt
enter
sub
inc
sub
sub
push
popf
xchg
in
imul
xchg
popa
aad
inc
add
xchg
or
int3
mov
push
pop
sub
rorl
int3
clc
outsl
in
dec
inc
mov
xchg
sbb
shrb
cmpsb
mov
jl
rcr
pusha
and
dec
popa
push
cmp
sbb
cs
stos
shr
xor
mov
push
push
fs
das
fstpl
popa
jbe
ja
xchg
xor
lret
das
cmp
lods
pop
and
fwait
movl
or
sbb
mov
sahf
mov
ds
and
inc
sahf
ja
push
jecxz
xchg
cmp
sub
adc
jne
loop
and
inc
popf
sarb
daa
shl
leave
in
out
sub
sbb
jmp
aaa
dec
push
std
push
data16
ss
cmp
cli
xchg
xchg
or
push
mov
push
inc
enter
add
cmc
push
int3
fcmovb
pop
and
clc
nop
sbb
push
mov
and
cmpxchg
pop
ja
test
pop
xor
ficoms
sahf
ds
rorb
cmpsl
jo
add
jne
pop
pusha
or
jg
sub
pop
cltd
movsb
insl
ja
sahf
arpl
fs
sub
cmpsl
jo
mov
aam
jle
sbb
test
mov
lods
mov
add
out
xor
les
xlat
lcall
and
dec
and
stos
add
add
xor
arpl
sti
movb
rcrl
pop
mov
arpl
shlb
rorb
outsl
sub
stos
cltd
sub
dec
dec
out
xchg
sbb
adc
pop
cmpl
aaa
jl
ret
das
and
lret
fmuls
mov
mov
dec
pop
test
pop
popa
enter
sub
mul
fildll
hlt
adc
sbb
push
out
dec
adc
ds
pop
jg
inc
jae
xchg
out
rcrl
mov
push
mov
xor
jecxz
jle
insl
sti
jl
ljmp
inc
push
mov
int3
jmp
shlb
clc
out
js
and
or
outsl
dec
adc
adc
shl
xor
popf
dec
push
gs
mov
test
lret
xor
lret
xor
mov
mov
inc
aaa
cmpsb
cmp
je
sbb
jb
pusha
xchg
cld
xchg
adc
push
jge
aam
sbbb
fidivrs
lods
sbb
lock
mov
scas
inc
xor
mov
scas
jnp
lea
inc
popa
cmp
mov
andb
lahf
inc
push
or
jo
popf
fwait
cvttps2pi
cmp
in
or
lret
push
adc
repz
or
inc
xchg
add
inc
mov
inc
rcrb
lahf
in
mov
outsb
pusha
fs
xchg
jns
pop
cltd
xchg
pop
adc
lea
dec
mov
xor
jno
adc
insl
cmp
fiaddl
test
adc
xor
mov
lahf
loope
xlat
shrb
idiv
pop
mov
xchg
lcall
in
and
jo
jp
fildl
and
clc
mov
mov
js
mov
mov
outsb
enter
xlat
mov
sahf
lret
jne
sbbb
test
pop
push
mov
mov
fistpl
test
jns
adc
negl
jne
movsb
repnz
fprem1
pop
and
xchg
cmp
bound
sub
in
imul
lahf
push
mov
popl
and
test
jg
out
adc
or
test
mov
ss
pop
sbb
and
hlt
push
leave
lret
push
aaa
dec
int3
dec
je
cmpb
jbe
cmp
std
ja
mov
leave
xor
xorb
sub
or
xchg
out
inc
rorb
push
ss
call
sbb
cltd
jmp
loopne
push
lret
sbb
xchg
mov
mov
jecxz
loopne
push
push
cmc
dec
gs
lds
mov
mov
popa
jb
lcall
outsb
adc
ret
mov
popa
sarl
movsb
adc
inc
jp
test
or
loope
lds
and
scas
cmp
add
adc
jno
mov
push
sbb
ror
xchg
negl
jb
int3
stos
stc
dec
pop
repnz
mov
adc
inc
mov
loopne
xor
sarb
mov
cwtl
enter
or
js
bound
popf
jl
inc
inc
lcall
fisttps
repz
mov
pop
fnstcw
call
mov
mov
cmpsl
push
lea
fld
mov
cltd
sbb
fnstcw
xor
mov
sub
in
xchg
movsl
lret
es
add
cli
daa
mov
test
xchg
mov
push
in
sbb
js
mov
mov
ja
outsl
push
nop
loop
rcrb
pop
outsb
sub
test
ret
ds
pop
rdpmc
push
insl
mov
cmp
out
imul
xor
cmc
les
push
cli
lods
bound
inc
mov
lods
sbb
adc
call
jl
cs
mov
add
data16
push
imul
fstpl
jecxz
push
adc
ficompl
adc
mov
cmp
xlat
push
jne
or
inc
sbb
cltd
sub
cmp
sub
mov
bswap
scas
mov
rorl
push
or
sub
mov
hlt
mov
pop
pop
cmpsl
hlt
sub
mov
dec
test
fstpt
enter
cld
mov
jne
lods
pop
in
push
in
jmp
inc
dec
lods
mov
sub
imul
push
and
mov
pop
xor
pop
push
xor
out
lcall
lods
rorl
loop
gs
jae
jecxz
ss
mov
and
cmp
push
mulb
scas
cs
xchg
pushf
mov
mov
sbb
movsb
adc
dec
scas
cwtl
outsb
arpl
or
pop
cli
lock
jmp
mov
test
xchg
xlat
notb
aaa
and
push
xor
pop
jnp
adc
sti
add
mov
sub
sub
dec
adc
lock
lret
sbb
mov
push
aam
repnz
sub
out
fstpt
cs
pop
cmpsl
xchg
mov
lods
pop
sahf
aaa
and
xchg
inc
daa
jl
xchg
push
loope
cmp
into
and
int3
gs
stc
or
and
add
jnp
sbb
aam
ja
or
cmpsb
lods
xlat
enter
jge
subb
sub
inc
jns
aas
dec
flds
out
out
pop
idivb
iret
sub
loop
mov
mov
or
mov
iret
mov
inc
mov
sti
xchg
and
sbb
repnz
dec
lret
fs
cmp
ret
jmp
lcall
movsl
cmpsl
jp
arpl
pop
cltd
aas
movsl
jae
pop
sbb
mov
push
out
push
dec
and
adcl
jp
sbb
and
jne
mov
cmp
mov
adc
popf
or
and
imul
mov
aam
in
ds
ss
and
cmp
mov
aaa
lcall
add
adc
es
mov
lock
ds
mov
out
push
or
push
and
cltd
mov
mov
push
sbb
in
lret
enter
data16
jo
lea
sub
mov
and
mov
sbb
lcall
loopne
fiaddl
cmp
inc
jmp
pop
cmpsl
push
jp
rcl
ds
and
call
cltd
js
clc
xchg
sbb
push
push
jne
jle
mov
inc
inc
test
adc
or
cmp
mov
adcb
es
jp
sahf
flds
push
les
jp
call
push
cltd
jae
lock
sbb
push
lret
or
fdivs
jg
bound
mov
or
sti
lea
mov
mov
shl
aaa
lcall
repz
mov
cmp
cmc
mov
cmpsl
push
adc
int3
mov
push
popa
test
mov
jp
xlat
jbe
xor
inc
xchg
sub
pop
aas
roll
pop
scas
and
xor
out
stos
fstpt
push
push
aaa
mov
fdivl
or
push
adc
daa
test
adc
test
mov
imul
ljmp
in
cmp
inc
shll
push
test
scas
imul
hlt
hlt
shl
insb
adc
jge
cs
scas
in
push
add
iret
mov
fsubs
inc
iret
mov
pop
xor
aaa
adc
push
stc
ret
and
fcmovbe
filds
dec
inc
ds
rclb
push
mov
xchg
ret
fwait
cmc
dec
dec
xor
hlt
dec
jp
nop
xchg
outsl
mov
push
jle
push
test
xchg
mov
push
aam
xchg
mov
adc
or
arpl
test
bound
push
popf
call
lret
aaa
cltd
xchg
pushf
inc
jb
add
cmp
outsl
cmp
js
pop
jne
imul
cmp
xchg
lock
das
jbe
xchg
bound
stos
mov
arpl
jmp
insl
int3
mov
movsb
pop
popf
cmp
add
lret
leave
int3
xchg
daa
inc
xchg
sub
inc
in
xchg
or
inc
or
cs
xchg
jae
mov
or
sub
mov
ss
xchg
jecxz
imul
or
sub
cmpsl
cmp
inc
inc
in
loop
add
rolb
sbb
mov
and
std
ja
add
pop
out
repz
testl
mov
mov
sub
pop
inc
andb
js
imul
js
js
sub
stos
or
dec
push
jno
jge
ficomps
es
dec
mov
or
jno
xor
mov
test
xchg
adc
fwait
sub
jg
xchg
jge
dec
jnp
xor
and
sub
xchg
iret
lahf
frstpm(287
rcl
cmp
lret
movsl
adcl
and
jne
test
add
xchg
adc
test
push
mov
mov
mov
cmp
lret
cmpsl
sbb
in
lahf
lret
enter
mov
out
push
jb
cwtl
scas
mov
lods
out
es
outsb
into
popa
dec
sub
aas
out
lods
push
cltd
push
aad
insl
out
mov
enter
rcr
xchg
test
adc
insb
mov
shrb
lock
clc
fs
lds
inc
gs
shrl
addr16
ret
mov
dec
push
sub
lret
jbe
adc
adc
fisttpl
sbb
mov
adc
mov
mulb
mov
sub
xorb
sub
or
dec
adc
xchg
or
int3
cmpsl
dec
xchg
lods
jne
push
mov
popa
and
sub
mov
in
push
imul
xchg
outsb
iret
jb
out
cmp
mov
mov
mov
cli
lret
xor
cmp
and
mov
loop
push
test
xchg
out
insl
pop
loop
fsubs
mull
xlat
sbb
bound
mov
push
and
or
or
jp
int3
mull
mov
imul
mov
arpl
push
or
cmp
and
pop
jb
mov
negl
insl
dec
xor
arpl
xor
mov
lea
jb
shlb
mov
js
out
xor
add
adc
adc
shrl
sub
inc
mov
xor
ret
iret
test
and
mov
cmp
out
lds
rclb
lahf
imul
fnsave
iret
dec
sti
fildl
fwait
xor
fs
lret
cltd
out
pop
cmp
cmpsl
andb
sbb
es
mov
pop
ljmp
int
sbb
cmp
or
test
push
or
and
fstp
add
mov
lahf
mov
adc
dec
fcom
jnp
lret
inc
aaa
push
jl
outsl
cmp
inc
pop
pop
and
ds
pop
ljmp
int
jne
dec
hlt
cmpsl
out
fs
mov
and
mov
shl
mov
pop
push
cld
push
sbb
cmp
ljmp
and
sbb
and
stos
cld
mov
xchg
insb
mov
ja
push
dec
and
loopne
sbb
int
aas
cmp
xorl
xchg
cmp
mov
jle
cltd
ret
jo
ljmp
lret
loop
cmpsl
xchg
dec
je
clc
jle
aas
dec
mov
push
dec
imul
dec
fnstcw
int
push
data16
aaa
jmp
push
add
paddw
pop
out
xor
inc
cmc
neg
sbb
and
js
sbb
mov
xchg
das
sub
xor
pop
addl
add
repz
lahf
mov
vmovapd
sbb
jl
movsb
leave
fists
into
lret
pop
cli
mov
jmp
stos
out
dec
and
cld
ljmp
nop
filds
int3
cld
sbb
subb
cmp
lret
pop
xor
in
fucomip
fs
adc
test
sbb
mov
decl
and
cmp
lcall
adc
aad
in
aas
cmp
inc
or
adc
jmp
jge
and
fwait
in
in
cmpb
mov
in
cli
out
data16
adc
add
insl
push
imul
cs
cmp
sti
bound
sbb
mov
daa
jmp
xchg
add
push
push
std
insb
xorb
aad
adc
lea
mov
outsb
mov
mov
push
pushf
aam
push
sub
hlt
add
ret
fsubs
shr
mov
sahf
sub
mov
les
pop
cmp
mov
pop
cmp
into
and
addl
cmpsb
adc
sub
cmp
jo
test
push
lock
jae
sub
lods
aad
pop
add
cmp
repnz
mov
movsl
aam
xchg
fstpl
mov
xchg
test
test
mov
fsubl
repnz
pop
testb
and
mov
push
fs
fs
fadds
and
push
test
out
push
scas
or
and
xor
bound
ljmp
cmc
mov
and
inc
clc
dec
pop
mov
ret
cmp
and
mov
xor
insl
lcall
sbb
dec
daa
inc
push
cltd
addr16
aas
pusha
ret
and
dec
in
iret
mov
int3
mull
fs
mov
lods
mov
cmpsb
mov
pop
or
aas
call
lods
cmpsb
jno
jle
int
hlt
insl
loop
fs
into
fwait
cmc
repz
and
ljmp
adc
flds
movsb
int3
cmp
jl
sti
pop
xor
shl
mov
mov
faddl
mov
mov
popa
or
fisttpll
jp
pop
movsb
inc
scas
popf
mov
inc
adc
jnp
add
add
mov
sahf
xor
stc
ja
sub
cli
xor
add
scas
add
arpl
jns
leave
int
in
push
das
mov
in
push
dec
je
or
mov
or
cmc
notl
jmp
adc
aas
nop
push
dec
ja
les
xor
repz
mov
xlat
jl
pop
pushf
sub
fnstenv
xchg
mov
jno
push
and
mov
imul
cmp
imul
mov
mov
cmp
push
xchg
in
mov
nop
sbb
popf
adc
dec
in
mov
xchg
push
or
outsl
mov
js
lock
test
int
jno
sub
lret
pushf
daa
mov
bound
push
pusha
xchg
push
inc
in
dec
jp
pop
leave
loop
ja
mov
jno
add
daa
cmp
in
cmp
test
in
cwtl
fcmovb
cli
fcompl
aaa
or
pop
xchg
imul
push
cwtl
xor
xchg
ljmp
fstpl
mov
fwait
xor
pop
std
cmpsl
jle
inc
call
adc
sub
add
xchg
inc
cmp
mov
inc
ret
or
hlt
mov
or
fstpt
mov
mov
fists
pop
and
outsb
push
cmc
mov
cs
ds
add
xor
lods
cmp
popf
cs
popf
xor
mov
lods
inc
aad
add
mov
adc
jmp
mov
bound
pop
test
ds
inc
das
rclb
jnp
cmpsb
push
data16
mov
adc
adc
dec
fbstp
pop
push
shrl
rcrl
or
pushf
adc
xchg
mov
add
pop
sbb
and
fucomp
inc
push
mov
stos
inc
cmp
loop
jmp
sarb
add
add
ja
and
sarb
adc
pop
xor
and
xchg
mov
fnstenv
or
adc
adc
lret
xchg
or
add
jno
ja
out
mov
fnsave
ret
pop
divl
jmp
out
out
xor
sub
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
sub
bound
jb
add
pop
and
mov
loop
repnz
sub
sub
mov
or
movsb
fnsave
add
popa
outsb
xor
pusha
xor
cmp
lret
nop
loope
xchg
lock
shlb
inc
add
popa
pusha
adc
inc
xor
lock
loope
mov
shlb
xchg
pop
jo
cmp
cmp
loop
nop
icebp
xchg
rol
out
ret
mov
add
add
push
xor
loopne
pop
mov
mov
or
dec
mov
test
ljmp
cltd
sahf
xor
mov
aam
and
dec
cmp
test
inc
cmp
jo
and
add
nop
xchg
call
shrl
rorb
jg
outsb
pop
pop
bound
xor
gs
dec
inc
jge
inc
popa
popa
add
push
lods
mov
jecxz
nop
push
outsl
loopne
test
or
dec
das
frstor
mov
sahf
lahf
and
add
sbb
pusha
repnz
jg
xchg
adc
sti
lock
nop
loop
sub
scas
xor
in
pop
mov
lds
and
dec
xchg
andl
lock
fnsave
popa
add
xor
inc
xor
mov
shll
imul
out
outsl
shrb
cs
sbb
add
rclw
orb
xchg
enter
pop
inc
add
or
sub
and
cwtl
mov
mov
mov
xchg
xorl
sbb
jo
inc
xor
mov
icebp
nop
loope
xchg
lock
push
xor
jno
popa
pusha
adc
inc
xor
mov
icebp
nop
loope
xchg
lock
push
hlt
pop
test
dec
sub
pop
or
cwtl
xor
jecxz
add
je
arpl
scas
jmp
and
cld
dec
xchg
test
mov
xor
sahf
mov
cmp
shll
mov
cmp
dec
sbb
or
shlb
test
xchg
es
mov
stos
aaa
or
cwtl
scas
je
dec
mov
adc
into
out
pop
pop
int3
inc
mov
stc
jge
je
jge
jecxz
call
sub
inc
push
setnp
rorl
stos
jb
pushf
mov
and
inc
fs
fmuls
out
mov
cmpsb
std
mov
stos
dec
or
ja
fwait
and
test
mov
jne
pop
sahf
inc
cmpsb
push
mov
popa
xchg
pop
mov
adc
mov
test
inc
test
adc
shlb
jmp
xor
test
cmovno
pop
mov
pop
xchg
lcall
cmpsb
sti
fsub
mov
scas
mov
adcb
push
aam
stc
out
jnp
mov
jnp
sub
xchg
insl
push
cmp
jl
aaa
call
sub
bnd
scas
mov
lods
or
sub
pop
add
ret
test
es
pop
fisttpl
mov
lock
movsl
das
adc
hlt
mov
aad
and
dec
stos
in
imul
out
adc
fs
and
daa
dec
lods
jns
mov
sbb
push
xchg
clc
mov
popf
add
sub
into
xchg
icebp
cmp
int
cld
pop
sti
loope
test
aad
cmpl
stos
lcall
mov
negb
dec
bound
loop
lcall
mov
jb
outsb
loop
xchg
test
cmp
in
push
cmp
fs
mov
and
enter
outsl
jae
pop
dec
xchg
lea
mov
sbb
jnp
xchg
mov
lock
cmpsb
arpl
leave
mov
ret
jmp
out
xchg
cmpsl
aad
in
or
xchg
fsubs
enter
jge
dec
sub
cld
pop
xlat
mov
pop
jmp
movsb
in
leave
testb
xor
jns
sbb
and
inc
sub
push
out
cmpb
inc
mov
cwtl
imul
cmp
add
jp
inc
jmp
stc
cmpsb
clc
add
pusha
fidivs
test
das
jae
pop
jb
mov
cwtl
arpl
dec
push
cmp
stos
jecxz
cmpsl
scas
arpl
dec
ja
insb
inc
and
pop
sub
aad
andb
xorb
stos
fstps
fwait
dec
stc
iret
adc
mov
fcmovne
std
insl
or
mov
push
add
and
bound
shll
in
inc
movsl
mov
and
dec
jns
mov
xlat
out
aam
sub
cltd
push
shlb
push
je
nop
sbbl
xchg
jecxz
mov
mov
gs
pop
adc
cli
add
mov
push
dec
inc
jmp
ret
adc
sub
pop
imul
popa
sbb
pop
cld
adc
inc
and
gs
and
adc
cld
dec
stos
ja
jp
test
addl
cmpsl
shl
imul
loopne
cmpsb
data16
daa
movsl
push
into
pop
icebp
ficompl
pushf
mov
repz
mov
in
adc
int3
mov
mov
lea
iret
lret
lcall
icebp
fwait
sub
stos
jb
rorl
lret
pop
push
scas
mov
repz
or
pop
jbe
inc
jae
ss
fldenv
jg
mov
and
addr16
add
adcl
roll
imul
ret
mov
cwtl
pop
outsl
mov
inc
test
daa
mov
or
iret
jnp
jecxz
mov
mov
sbb
cld
xchg
lock
jne
daa
jge
lret
adc
fwait
jp
test
push
push
or
test
mov
inc
and
add
std
out
mov
or
xor
repnz
test
mov
pop
push
jg
push
pop
dec
xchg
dec
cmp
cmp
mov
pusha
hlt
push
and
push
in
aam
add
fisubrl
sbb
add
out
and
sbb
fwait
mov
repnz
shll
jl
inc
push
cmpsl
cltd
mov
cmc
stc
imul
mov
adc
and
or
stos
mov
scas
repz
dec
push
ss
dec
imul
shl
xchg
sbb
lret
dec
xor
adc
jle
push
pop
lea
dec
and
idivb
sub
enter
pushf
mov
es
xor
cld
pusha
arpl
sar
jl
shr
ja
mov
adc
pop
or
jo
pop
test
cmc
out
jo
cmp
and
xchg
mov
fists
adc
or
pop
and
insb
push
jo
push
fldt
xor
pop
setnp
pop
push
rorb
xor
inc
push
sub
add
lahf
dec
fistps
lcall
push
stos
in
popf
mov
stos
sbb
cmp
and
mov
jp
xchg
pop
add
or
scas
mov
push
jbe
xchg
or
jle
dec
test
icebp
jmp
xchg
out
mov
push
in
out
mov
cmp
pop
test
cmp
push
jmp
scas
jle
sub
shrb
clc
cmp
lahf
shlb
push
mov
roll
inc
mov
out
pop
aaa
icebp
pop
xchg
cwtl
mov
popf
push
js
xchg
mov
fisubrl
jnp
clc
sti
mov
out
popf
push
mov
shrb
push
scas
repnz
ret
adc
stos
xor
ss
dec
fisubs
sub
add
outsb
addr16
gs
int3
pop
adc
fldl
mov
stos
dec
pop
adc
aas
aad
xchg
fwait
loopne
rcr
xor
dec
in
jl
push
sbb
xor
add
imul
mov
je
gs
mov
add
sub
pop
and
sbb
ficompl
adc
mov
inc
push
mov
inc
mov
add
xchg
mov
mov
jns
cmp
mov
sbbl
js
rcrl
sbb
jbe
aaa
stc
sub
sbb
add
mov
test
addr16
cli
adc
lcall
ljmp
lock
stos
rorb
mov
cmpsb
push
and
jge
inc
push
mov
int3
int3
aam
popa
aam
lret
jg
lods
inc
sub
cmp
adc
xchg
insl
loopne
xchg
jae
sub
movsl
fwait
cmpsb
mov
add
mov
shll
ficomps
inc
or
mov
cmc
int
pusha
cmc
cmpsl
add
lcall
or
insb
jno
xor
pop
mov
into
jl
or
xor
cld
pop
mov
push
mov
sti
and
push
enter
movsb
pop
stc
stos
add
dec
mov
ljmp
xchg
jl
add
scas
mov
jmp
dec
or
inc
addr16
std
rorl
sbb
mov
sti
pop
imul
insb
mov
enter
nop
pop
dec
jb
dec
jns
es
mov
mov
jne
mov
or
lret
pop
fmuls
aam
dec
adc
cmp
push
rol
pop
push
pop
shrl
pop
xor
add
and
leave
add
fistl
mov
icebp
push
and
sub
jle
addr16
scas
xchg
rorl
jno
sbb
hlt
scas
testl
inc
rol
pop
pop
mov
add
xchg
cltd
out
and
inc
or
int3
and
sahf
mov
mov
negl
push
and
push
xchg
pop
jae
addr16
test
scas
les
pop
xor
cmp
cltd
mov
pop
sbb
faddl
in
ret
push
fcompl
int3
adc
orb
push
or
rcrl
test
and
arpl
cmpsl
ds
pop
mov
ret
je
mov
mov
sub
push
lods
scas
xchg
scas
xor
int3
jge
icebp
das
mov
pop
mov
sbb
daa
ja
push
cmp
mov
cmp
shl
or
data16
inc
jbe
jle
and
fnstsw
sbb
fidivrs
test
cmp
inc
nop
call
fstl
dec
test
push
or
xlat
lds
pop
mov
call
pop
sti
or
mov
cs
pop
xchg
fidivrl
dec
sahf
dec
out
rclb
fdivs
ja
lret
sub
in
divb
sub
dec
repz
scas
jns
inc
adc
lret
mov
stos
cmpsb
push
add
sbb
mov
nop
sbb
insl
into
ret
inc
sahf
das
dec
out
ss
lcall
xor
movsb
into
fistpl
dec
mov
sbb
or
call
push
jl
ret
pop
adc
inc
int
pop
test
arpl
call
xchg
xor
xor
sbb
addb
lods
xor
sub
xchg
sahf
add
cmp
pop
or
adc
pop
stc
punpcklbw
das
xor
pop
jecxz
cmp
daa
dec
loope
fs
adc
sbb
sbb
cmp
hlt
scas
mov
adc
sub
pop
push
rorb
or
pop
cmp
roll
ret
add
lds
loope
and
xor
into
mov
jbe
mov
in
imul
sbb
sbb
push
mov
cmpsl
das
adc
fildl
lahf
shrl
cmp
shrb
jbe
xor
add
or
xchg
loop
out
xor
dec
or
add
fstpl
and
sub
stos
push
mov
popa
lds
mov
icebp
jno
mov
or
fistpll
xor
sti
in
int3
pop
int3
iret
adc
psubusw
xor
test
daa
mov
sub
js
cwtl
xchg
inc
jp
out
pushf
dec
ret
dec
jo
pusha
xchg
arpl
icebp
gs
dec
jne
ds
fidivl
pop
dec
shrl
and
jp
loopne
cwtl
js
fbstp
xor
dec
push
cmpsb
jbe
ret
or
dec
lcall
popf
arpl
push
inc
in
xchg
jp
pop
sbb
sbb
sub
xchg
test
clc
sub
mov
je
leave
pop
inc
cli
sub
fwait
xor
icebp
mov
xchg
sarb
repnz
mov
out
add
dec
xor
mov
aam
popl
jge
addr16
xlat
or
jl
scas
fwait
test
dec
jle
lods
or
sub
adc
mov
mov
adc
jae
push
mov
adc
std
shl
mov
enter
add
mov
jle
mov
data16
adc
add
enter
sbb
dec
adc
mov
pop
push
or
int
inc
pop
lock
hlt
out
dec
and
pop
outsb
int
ljmp
dec
inc
inc
jnp
and
cmc
adc
js
out
xchg
mov
roll
test
jmp
mov
dec
lock
mov
test
in
push
and
mov
mov
decl
pop
sub
push
stc
push
out
mov
mov
adcb
lret
and
pop
or
or
and
loope
test
xor
inc
or
inc
push
aas
pop
sub
out
sub
jge
sbb
jb
in
testl
mov
jns
jge
popf
xchg
and
in
enter
mov
mov
hlt
add
iret
lods
jecxz
fdivl
rclb
decb
lcall
addb
and
xor
insl
sahf
ja
leave
mov
adc
ss
ret
popf
dec
and
sahf
dec
das
clc
add
sbb
push
pop
loope
or
loop
test
popl
add
movsl
push
cmpsb
outsb
lret
mov
test
rorb
cmpsb
xchg
in
fldcw
or
fs
ret
adcl
inc
fiaddl
push
push
push
jl
inc
xchg
cmp
xor
mov
std
lcall
jno
test
ds
out
leave
iret
push
popf
fldt
lcall
repz
dec
xchg
loope
push
sub
push
mov
xor
loopne
add
cld
pop
dec
ret
mul
leave
pop
or
push
into
mov
leave
jp
rclb
cmp
lods
dec
ljmp
lahf
test
jns
mov
inc
lret
push
sti
loopne
inc
jb
cmpsl
lods
xor
mov
xchg
xor
adc
dec
fisubl
sub
sbb
lods
mov
nop
loop
in
enter
xchg
adc
dec
xor
aaa
jmp
hlt
mov
fistl
mov
pop
sub
pop
outsl
jns
aaa
mov
push
xchg
lds
push
fldenv
hlt
dec
repnz
inc
dec
pop
scas
xor
pushaw
lcall
dec
les
cmp
aas
adc
pop
lds
das
stc
lret
inc
sbb
fwait
cmp
inc
sti
testb
dec
sbb
jno
mov
stos
adc
arpl
sbb
es
sub
mov
push
xchg
leave
pop
jle
mov
or
mov
dec
jo
cwtl
pop
sub
testb
orb
xchg
or
inc
xor
jo
insl
sbb
mov
inc
mov
sbb
fdivrs
adc
cmp
testl
mov
push
xchg
push
jl
adcb
cmp
lcall
pavgw
add
popa
push
faddl
adc
int
clc
add
xor
and
insb
mov
cltd
aaa
push
jl
inc
sahf
in
imul
sub
sub
sub
in
jo
and
js
cmp
pop
ret
or
cli
pop
inc
jne
insl
push
sahf
shrb
jae
adcb
data16
inc
xchg
test
mov
fidivrl
push
cli
repnz
sbb
and
jg
add
dec
dec
mov
adc
and
lods
sahf
push
adc
xor
dec
stos
pop
xor
out
out
frstor
and
inc
repz
dec
aad
jle
ds
xchg
xor
pop
mov
aaa
and
icebp
orl
js
lock
fs
or
pop
fcoml
sbb
fcmovnu
je
mov
popf
test
negl
mov
cmc
jmp
int3
jp
xchg
and
sbb
xor
push
cmp
aad
and
push
rcrb
or
mov
mov
outsl
inc
mov
jb
loop
cltd
inc
push
adc
inc
and
ljmp
fnsave
je
jg
mov
call
js
insb
fistpll
ja
jbe
shlb
mov
mov
into
stc
cli
xlat
mov
bound
in
ficompl
inc
cmpsl
pop
pop
sbb
pop
jnp
enter
shrl
add
pop
jo
sub
push
dec
scas
imul
mov
mov
pusha
push
push
fwait
mov
ficoml
fistl
sbb
std
test
pop
add
push
sbb
imul
cltd
sub
cli
dec
lods
out
sub
decl
rcll
xor
fwait
out
adc
int3
call
mov
adc
push
nop
mov
mov
ret
inc
add
and
xchg
pop
mov
das
adc
je
daa
push
mov
js
outsl
pop
inc
mov
insb
jecxz
dec
xlat
mov
divl
movsl
jnp
sti
push
daa
add
in
or
cmp
push
mov
or
and
test
mov
stc
cs
mov
lcall
insw
dec
out
pop
and
lahf
mov
out
movsb
cmp
and
cmpsb
inc
cmp
cmpsb
adc
xorb
xchg
push
imulb
jmp
rcl
mov
pop
pop
pop
shll
fsubrs
fisubrs
daa
fnstcw
xchg
xor
sahf
mov
mov
cltd
xor
cmpsl
mov
jnp
lods
out
nop
ja
or
sub
lahf
jnp
aas
xor
push
out
mov
out
xchg
and
sub
cmp
jno,pn
xchg
inc
push
int3
sbb
pusha
mov
or
imul
js
push
jg
xchg
push
nop
or
lds
mov
movsl
sbb
jno
fbld
xor
lret
xor
movsb
loopne
std
int3
mov
outsl
out
xor
std
pop
nop
adc
inc
pushf
cld
mull
pop
loope
sub
aad
adc
in
js
int
inc
adc
ljmp
cmp
test
jno
stc
adc
adc
dec
add
mov
pop
sub
inc
push
adc
push
lea
xchg
jmp
pop
lret
mov
test
sub
xchg
mov
popa
fdivs
pop
add
lea
aas
dec
jle
and
adc
push
jb
mov
data16
lds
and
xchg
ficomps
adc
jne
iretw
aaa
push
sarb
int
xorb
gs
xchg
xor
push
adc
mov
cmp
dec
xchg
lret
sub
popf
jo
popf
in
or
dec
push
mov
mov
lret
outsb
pop
ss
lahf
jmp
lahf
in
xchg
cmp
xor
repz
je
test
mov
or
add
mov
ja
lret
dec
mov
xor
sub
lds
cmp
cli
dec
mov
call
adc
and
stos
test
rcrl
test
shrd
xor
or
cmp
pop
jl
mov
fildll
xor
cmp
xchg
test
shl
and
dec
xchg
fcomps
test
fbstp
mov
js
dec
into
cmp
test
cmc
test
push
popa
and
inc
pop
cmp
pop
xlat
ja
sub
repz
adc
imul
loopnew
mov
xchg
testl
ret
and
out
jne
movsl
push
jno
fnstenv
lods
inc
cmp
mov
xor
adc
icebp
cli
rcll
sahf
negb
paddusw
mov
test
test
and
xchg
push
inc
int
fstpt
mov
or
repnz
dec
ds
fldl
inc
test
jo
das
adc
leave
push
sarb
mov
sub
mov
daa
mov
cmpsl
rorb
adc
shrl
pushf
std
xchg
movsb
fstpl
mov
into
leave
push
cmp
add
inc
sub
mov
inc
adc
imul
aad
pop
bound
sbb
daa
xchg
aam
xchg
sbb
rorb
rorb
ja
scas
cmp
nop
xchg
or
mov
mov
xchg
enter
pop
es
cs
push
cld
fidivrs
adc
adc
loope
or
xor
sbbb
lods
push
xchg
cli
push
pushf
xor
adc
or
popf
jecxz
dec
mov
ljmp
test
add
repnz
pop
cmp
sbb
add
ljmp
cs
imul
adc
orl
cwtl
je
hlt
cltd
mov
outsb
imul
xchg
mov
popa
add
fxam
mov
popl
sbbb
and
nop
shlb
push
out
test
out
lcall
test
dec
lods
add
lahf
inc
dec
rcrb
imul
jno
ret
sub
out
subl
adc
cmp
fisttpl
into
pop
scas
push
jge
je
sub
loop
adc
add
and
jle
out
pusha
mov
loope
jo
sbb
bound
into
dec
inc
mov
mov
pop
iret
or
lock
push
aaa
pop
hlt
icebp
js
loope
in
stos
test
int
pusha
mov
shrb
dec
jnp
xor
leave
std
dec
dec
dec
in
cli
add
mov
in
sbb
xchg
or
cltd
sbb
jl
mov
in
cmc
xlat
cmc
outsb
int3
dec
repz
adc
cmp
cmp
fs
pop
push
ret
lahf
frstor
mov
push
imul
popf
fwait
or
jae
cld
in
pushf
xchg
pop
and
push
outsl
sbbl
xchg
cld
mov
ja
into
lds
loope
sti
add
cli
aam
test
add
cmpb
std
push
cli
and
out
in
sbb
leave
or
pop
insl
sub
movsb
mov
daa
into
adc
sahf
jne
dec
pushf
or
adc
test
pusha
movsl
adc
sbb
mov
xchg
ljmp
insl
shrb
inc
jle
or
pusha
adc
inc
xor
mov
icebp
nop
loope
xchg
lock
push
xor
jno
popa
pusha
adc
inc
xor
mov
icebp
nop
loope
xchg
lock
push
xor
imul
push
xor
mov
mov
xchg
call
les
sbb
mov
pusha
add
shl
mov
icebp
nop
xchg
xchg
jmp
das
fsts
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
xor
pop
mov
enter
mov
pop
push
add
pop
add
add
add
cmp
add
add
jno
sbb
or
xor
pop
add
add
add
add
lock
movsb
add
add
add
add
add
lock
pop
add
add
add
add
add
add
add
add
add
add
add
testb
add
xchg
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
fs
add
sbb
sbb
xlat
add
add
inc
add
add
add
movsb
add
add
push
add
add
add
add
add
add
add
jnp
sub
add
add
stos
add
add
add
add
movsb
add
dec
add
add
add
add
or
test
add
add
add
add
add
add
add
push
add
add
add
add
sub
pop
add
add
add
add
add
mov
test
add
data16
add
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
add
add
and
jns
xchg
add
add
add
xchg
add
add
add
add
add
add
inc
add
add
add
movsb
add
add
addl
pop
add
add
add
add
add
lret
add
add
xchg
adc
roll
add
add
add
add
add
add
push
add
add
dec
add
adc
dec
add
add
insl
add
js
adc
add
add
add
add
push
add
add
add
sub
dec
add
jecxz
add
lock
data16
add
sbb
aam
dec
add
add
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
sub
pop
add
fiaddl
lds
test
sub
add
add
add
sbb
and
xor
xchg
add
push
add
add
add
add
inc
add
add
inc
add
add
inc
add
dec
add
add
add
add
add
add
push
pop
add
cwtl
add
add
xchg
test
add
sbb
adc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
and
add
add
push
add
add
add
mov
add
jno
pop
add
add
add
add
add
faddl
aam
add
mov
add
add
fidivrl
mov
imul
outsb
icebp
mov
outsl
cltd
sahf
js
lds
shl
stc
mov
fidivrs
outsl
test
movsl
clc
cmp
push
es
test
or
sub
xor
mov
test
mov
addb
adc
bound
mov
xlat
sbb
dec
jnp
mov
lret
add
repnz
nop
or
test
cmp
sbb
sub
mov
lret
mov
cltd
xchg
mul
and
jo
aad
mov
dec
dec
mov
leave
roll
stos
imul
js
jbe
cwtl
mov
fwait
sub
nop
dec
add
movsb
adc
je
bound
fwait
les
inc
lea
add
out
jge
push
mov
ljmp
or
add
inc
adc
movsl
mov
xchg
jl
bound
mov
test
sarl
in
inc
das
lods
push
movb
lret
pop
in
shll
mov
fldl
xchg
sbbb
popf
xchg
adc
pusha
or
xchg
rclb
loopne
xchg
pushl
fsubrs
lahf
rolb
jo
aaa
orl
or
rcl
cmp
cmpb
cmp
mov
or
into
fbld
sarb
outsl
inc
cmp
pop
out
mov
push
cmc
mov
cmp
or
sub
jo
rcrl
fcmovbe
loop
in
push
adc
pusha
inc
inc
inc
mov
push
push
mov
scas
cwtl
push
lea
pop
ljmp
enter
clc
nop
and
xor
inc
aaa
and
dec
push
xchg
lret
outsl
xor
xor
push
inc
inc
pop
fldl
pop
lcall
movsl
inc
xor
mov
pusha
rclb
ret
xchg
in
aas
pusha
lods
into
lock
mov
cli
pop
shll
or
stos
adc
add
sbb
mov
nop
xchg
addr16
mov
icebp
pop
movsl
insl
call
inc
lahf
cmp
sub
pop
imul
sti
push
test
or
mov
cmpb
cmp
xor
cmp
shrl
fisubs
leave
lock
ret
xor
jo
fcmovnbe
pop
xorl
pop
jo
jbe
mov
push
sub
sub
loop
lds
sbb
add
leave
imul
jns
pusha
xor
mov
sbb
push
mov
test
call
icebp
insl
push
push
clc
sbb
lea
addr16
or
test
inc
push
cmp
iret
xor
cmp
std
inc
sub
sti
xor
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
