call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sti
loop
repnz
enter
ficoml
xor
mov
inc
dec
push
cmp
sub
sbb
sbb
pushf
loop
repnz
enter
test
cwtl
orb
cmp
push
js
sub
sbb
or
inc
loop
repnz
ret
cmpsb
mov
mov
xor
sub
outsb
dec
addr16
gs
scas
movsb
sbb
mov
pop
inc
andl
sbb
sub
std
or
adc
adc
pop
test
pop
xchg
mov
aas
adc
jb
fnstsw
je
sbb
lods
xor
out
jmp
push
bound
dec
inc
dec
lods
sub
insl
push
rorb
and
xlat
and
inc
mov
mov
sahf
push
xlat
xor
rcrb
ja
adc
and
or
inc
sub
pop
adc
add
pop
mov
sub
loopne
add
pop
mov
fiaddl
inc
cmp
mov
jbe
aaa
mov
bound
add
in
mov
ret
pop
mov
cs
mov
inc
js
jo
and
sub
or
lcall
in
in
out
out
adc
imul
inc
jne
jo
ja
mov
mov
loope
imull
fnstsw
and
inc
movsb
jno
dec
inc
xchg
mov
fwait
stos
jmp
test
cwtl
orb
pop
inc
dec
push
cmp
sub
sbb
or
clc
loop
repnz
enter
test
cwtl
orb
pop
inc
dec
push
cmp
sub
sbb
or
clc
loop
ficompl
lods
or
not
sub
jb
insb
cmp
arpl
sarl
out
jge
stos
std
sbb
push
and
push
fsubr
test
cmp
dec
aad
shrb
add
lods
stos
xor
nop
cmpsl
cltd
xchg
lahf
idivb
xchg
out
fnstcw
jg
shl
enter
das
sti
push
idivl
sbb
imul
mov
aas
nop
aam
imul
loope
scas
push
add
mov
jne
mov
sub
fisttpll
notl
and
lock
xlat
pop
out
jl
mov
mov
test
pop
xor
push
nop
repz
mov
cmp
das
sub
stc
shlb
fadd
xchg
dec
jle
add
notl
jp
or
sbb
in
cmpb
and
adc
add
into
mov
sbb
or
into
cmp
sub
pushf
fcmovne
push
cld
hlt
push
push
fimull
outsw
cmpsb
ftst
mov
clc
mov
push
and
cmpsl
sbb
push
push
dec
jnp
idiv
xor
jmp
xor
in
mov
sub
adcb
stos
nop
dec
add
vsubss
les
inc
cli
sbb
jnp
and
loop
dec
push
ret
hlt
sarb
out
xor
mov
dec
imul
cld
movsb
dec
jo
adc
jl
icebp
stc
daa
pop
add
and
inc
popa
pop
and
pusha
imul
jl
addr16
xchg
jmp
dec
lods
in
lret
mov
addb
cmp
sahf
xor
and
test
fs
loop
dec
adc
jp
jo
push
movsb
rcrl
push
pusha
out
push
nop
push
xor
xor
sbb
cmp
scas
sahf
scas
mov
mov
stc
cs
loopne
test
popl
sub
sbb
adc
call
les
je
pop
mov
lahf
test
pop
add
stc
xchg
and
mov
jbe
cmpsb
in
es
add
leave
popf
xchg
jno
and
dec
and
jo
push
mov
sbb
adcb
mov
leave
scas
fucomi
and
lods
stc
enter
in
testb
ss
pop
dec
movsl
ja
incb
in
rol
call
and
mov
jecxz
jl
or
idivb
div
out
and
rclb
pop
cltd
std
insl
dec
jg
mov
sti
jnp
mov
and
int
testb
inc
jne
dec
nop
ret
pushf
imul
sahf
dec
repz
or
orl
test
jge
sbb
clc
repnz
jo
cmc
push
ficoml
nop
fistpl
push
and
dec
rcr
push
out
repz
sub
mov
sub
scas
dec
call
cli
insb
or
ret
or
shlb
pop
pushl
pop
push
inc
jnp
popa
scas
stos
pop
fcmovu
es
fsubs
mov
xor
mov
cmp
pop
mov
jp
les
cwtl
repz
pusha
loope
es
pop
inc
popa
outsl
inc
inc
cmp
shlb
xchg
hlt
dec
nop
mov
or
sub
ror
pop
push
inc
inc
dec
push
fwait
pop
sub
mov
xor
push
mov
jge
adc
out
push
mov
movsb
jmp
cltd
mov
mull
adc
mov
outsb
dec
js
enter
imul
adc
out
add
mov
clc
std
and
add
push
std
pop
cmp
jne
test
clc
stos
inc
or
ficompl
cmpsl
xchg
lret
aam
test
push
lods
push
ljmp
pop
pop
mov
sahf
and
xchg
push
and
ljmp
lock
mov
push
mov
mov
mov
xor
lods
in
xor
jae
xor
clc
ja
fsubrs
jmp
cwtl
push
dec
loop
xor
subl
and
push
insl
xchg
and
testl
mov
push
inc
fldenv
stos
sbb
mov
addl
aas
pop
cmp
hlt
loopne
scas
mov
hlt
aas
jbe
daa
xchg
push
pop
pop
xchg
sbb
inc
or
jo
test
xor
fprem1
cmpsl
push
aam
pop
les
out
mov
mov
gs
rcrb
pop
or
inc
in
addr16
lret
jl
sub
lcall
or
inc
gs
jp
daa
cmpsl
enter
add
mov
lds
push
daa
cmp
arpl
xchg
repnz
sub
jne
mov
imul
mov
adc
out
add
call
pusha
pop
inc
or
fimull
ret
mov
jae
adc
sbb
cmp
addr16
pop
imul
pop
mov
scas
push
xor
lods
scas
pop
out
data16
adc
popa
cltd
cmpb
push
mov
insb
mov
negl
mov
pop
push
sbb
mov
mov
imul
sub
mov
or
into
ja
ret
in
mov
dec
mov
out
popa
sub
jne
adc
int3
in
repnz
daa
mov
stos
fsts
mov
sti
rcrb
xorl
mov
aas
test
iret
fcmovu
add
mov
inc
jb
sbb
inc
in
dec
repnz
cs
cmp
loope
pop
lcall
add
stc
into
in
or
sbb
test
je
cwtl
cmp
adc
push
mov
rcrl
or
popf
cmp
ja
cmp
int
and
bound
fistps
aaa
stos
xor
jmp
mov
shll
stos
inc
int3
cmp
jp
out
push
mov
push
mov
movsb
push
sar
int3
push
sub
push
shlb
xchg
cmp
pop
js
jle
and
rolb
sbb
test
dec
fisttps
mov
sub
leave
sub
add
push
dec
mov
jge
stos
and
mov
fcompl
dec
inc
test
into
adc
inc
jg
das
enter
lods
or
inc
pop
fstpt
or
push
fdivrl
add
fcmovb
cli
pop
faddl
std
mov
hlt
popf
ds
inc
mov
je
or
icebp
insl
repnz
add
nop
pop
jle
sbb
lret
cpuid
loope
mov
jge
lods
push
xor
dec
ret
pop
mov
jo
imul
cli
jp
loop
out
sub
pop
push
loope
jbe
sub
call
mov
fsts
and
mov
cmp
test
scas
lret
pop
stc
fsubl
xchg
out
sub
add
popa
xchg
loope
leave
mov
add
inc
or
mov
cmp
pop
arpl
ret
mov
nop
xor
rcr
and
nop
shll
inc
ficompl
mov
mov
ror
inc
adc
sbb
mov
dec
insl
xorl
xchg
test
xchg
frstor
cli
ja
jae
out
not
xchg
jnp
cli
sub
mov
dec
jmp
sbb
push
xor
adcb
repnz
mov
mov
cmp
add
les
mov
or
inc
int3
jae
pop
pop
sbb
lcall
mov
call
cmp
cmpsl
xor
into
xor
cmp
int3
stos
shlb
loop
jb
push
imul
or
push
lret
cmpsb
push
jmp
sub
or
pop
mov
add
cmp
sbb
leave
icebp
repnz
imul
cmp
subl
dec
clc
in
dec
push
lcall
fsubrs
loope
push
imul
leave
add
jg
inc
mov
mov
into
out
pop
sahf
xchg
sbb
lahf
outsb
dec
mov
xor
out
mov
into
sub
dec
and
clc
dec
push
jmp
adc
and
scas
pop
sbb
xchg
xor
jge
push
lock
push
mov
insb
jno
addb
xchg
popl
sub
addb
mov
adc
shlb
fmuls
xchg
adc
and
or
dec
push
rolb
dec
imul
loope
push
movl
movsb
cmpl
pop
push
js
arpl
and
test
mov
push
mov
jecxz
pop
stos
sbb
mov
cmp
call
in
aas
leave
addr16
xor
cli
push
lock
sbb
jbe
or
test
cmpl
cmp
ss
stc
add
mov
loope
cmc
and
lret
sbb
ret
push
pop
in
or
out
out
out
hlt
inc
psllw
xor
fadds
jle
xor
inc
fldcw
fcmovu
imul
xchg
push
loop
push
mov
aas
data16
fwait
mov
shll
mov
das
in
push
orl
fisttpll
push
mov
stos
jns
repz
sub
je
adc
cmp
jle
push
xchg
jle
in
aaa
in
jg
ljmp
xchg
push
pop
sbb
inc
jno
fwait
repnz
inc
push
push
cmp
lds
popa
xor
add
cmpsb
in
mov
out
sub
jmp
add
mov
sbb
in
cmp
arpl
sbb
scas
mov
ficompl
add
aad
jg
stos
and
mov
hlt
cmp
mov
test
je
and
xchg
lcall
sbb
mov
pop
adc
das
xor
lock
lods
xlat
lcall
xchg
std
cmpsl
into
imulb
imul
mov
cwtl
stc
or
fwait
xor
push
push
add
jbe
dec
aam
cli
loopne
jmp
shrl
cmp
mov
mov
jl
es
jp
adc
jge,pn
fs
inc
or
ret
mov
fidivs
ljmp
mov
mov
xor
xorl
in
in
lahf
ljmp
push
cmp
lock
push
fsin
out
add
sti
lcall
jno
and
pusha
cmpsb
outsl
adc
pop
or
nop
adc
popa
shll
inc
xchg
adc
loopne
iret
mov
pop
ret
sub
xchg
mov
movsb
inc
dec
xlat
push
add
rcr
rcrl
push
push
vcvtsi2ss
shll
and
jp
dec
ds
cltd
icebp
mov
lret
fld
push
lahf
add
dec
lock
popa
sti
sbb
popf
lahf
add
mov
xchg
pop
subl
xchg
outsl
outsl
stos
sbb
pop
mov
mov
out
dec
and
sub
add
loop
adc
or
or
lahf
imul
lret
xchg
inc
mov
fidivrs
fisttpll
and
lds
into
fs
mov
mov
lods
or
push
jb
pop
jmp
or
pop
in
sub
rclb
mov
jns
aas
arpl
cmp
push
jae
ljmp
sub
mov
sbb
push
xor
movsb
xchg
repz
xlat
jne
mov
mov
lds
cmp
sub
cmp
jno
and
mov
inc
scas
int
mov
push
aam
sbb
fiadds
insl
lea
idivb
or
cmpsl
pop
in
mov
jae
mov
cli
fsts
rcrb
loopne
test
push
push
cmp
negl
call
pop
fs
fildll
pop
stc
add
pop
jo
jp
ja
and
mov
lea
lret
sbb
inc
cs
mov
mov
add
and
ss
jo
jg
sbb
mov
cmp
scas
pop
lods
daa
add
out
dec
sahf
jp
sbb
push
cli
scas
or
leave
pop
push
mov
push
out
xor
push
adc
fucomp
jmp
jge,pn
pushf
scas
cmc
repz
inc
int3
jbe
mov
sbb
test
xchg
pusha
mov
sbbl
into
lds
pop
pop
fbld
in
bound
mov
inc
or
mov
fisttps
xor
pop
mov
or
repz
and
int
dec
rcl
mov
sar
adc
es
iret
movsb
lcall
xlat
dec
adc
lret
jmp
dec
add
cld
mov
cmpsb
xchg
jl
inc
xchg
adc
xchg
pop
dec
sub
rorl
dec
in
inc
lcall
xchg
pop
dec
mov
jns
mov
sub
mov
and
mov
sbb
mov
and
lahf
add
xchg
and
add
int
negl
test
sbb
iret
int
js
sbb
mov
sahf
sahf
or
fwait
add
cmp
pop
sahf
inc
cmp
sub
and
lret
es
push
sub
shlb
sbb
jo
jle
xor
cmp
mov
pop
and
cmpsb
jle
push
cmp
lods
cwtl
mov
bound
add
aam
sarl
mov
addr16
mov
movsl
fistps
popf
dec
pop
cwtl
cmp
mov
sub
cld
inc
dec
inc
pop
mov
cmpsb
fistpll
cmpl
cmpsl
mov
mov
sub
sti
mov
inc
mov
push
or
jg
or
and
ss
mov
rcl
jp
lret
fnstsw
adc
push
mov
cli
scas
lret
lret
dec
fwait
push
fcoml
push
int
cmp
insl
add
repz
sti
xchg
xlat
pushf
cmp
sub
aas
lret
lret
and
outsb
mov
inc
fcompl
das
push
popf
sarl
push
inc
xchg
mov
mov
ss
xchg
in
outsb
xchg
pop
inc
dec
scas
std
push
push
mov
pop
int3
lcall
hlt
xchg
das
scas
mov
fisttpl
cltd
push
outsl
push
outsl
mov
fcmovnbe
jle
ret
mov
add
and
xchg
xchg
cmp
pop
xchg
in
adc
dec
add
fwait
pop
shlb
dec
pusha
dec
inc
stos
push
mov
adc
jbe
push
ljmp
icebp
mov
mov
out
mov
shr
push
pop
enter
push
cmp
test
stos
pop
and
shlb
sbb
push
pop
cmpsb
hlt
fists
jge
ret
mull
mov
dec
inc
adc
inc
hlt
cmpsb
lds
jmp
jbe
aad
push
add
or
and
daa
add
xor
add
and
int
xor
pushf
int
ror
dec
mov
lods
jo
and
loope
pop
xchg
or
sbb
dec
inc
push
das
dec
dec
test
out
popl
adc
pop
roll
mov
inc
add
shr
mov
or
pop
hlt
mov
inc
outsb
mov
lcall
lahf
and
cwtl
or
repz
and
xor
mov
jge
sub
sub
mov
and
mov
xorl
mov
addb
jle
sbb
into
insb
inc
adc
sbb
jo
lea
jp
test
ds
xorb
mov
cmp
cmp
lret
cmc
sbb
and
mov
xor
pop
in
daa
lods
mov
imulb
sti
xlat
adc
int
and
fnstcw
jae
gs
lock
pop
dec
scas
dec
or
lahf
std
cs
sub
pop
sbb
lahf
daa
test
pop
pop
cmpsl
xor
jne
sub
sbb
jg
pop
fisttpl
mov
mov
lea
rorb
jg
xchg
cld
mov
cmp
jbe
cmpsl
and
pop
fldcw
rorb
mov
popf
rcrl
mov
sbb
out
jmp
es
dec
test
movl
sub
loopne
out
mov
ljmp
sti
test
cmp
mov
mov
test
xchg
xchg
cld
xor
lcall
xchg
push
adc
ljmp
scas
pop
xchg
pop
or
test
lret
js
mov
xchg
cmovle
aas
pop
dec
mov
mov
ljmp
xchg
xchg
daa
int
stc
mov
out
ja
xorl
jge
lret
cmp
mov
ja
sti
shl
inc
in
push
out
stos
push
push
in
inc
daa
les
enter
jmp
lahf
push
xor
subl
mov
xchg
xor
xchg
test
enter
loopne
mov
push
cld
mov
push
jl
mov
aam
push
outsb
cpuid
js
js
fadds
mov
loope
lahf
push
xor
jns
pushf
push
pop
ret
imul
and
call
andb
sub
nop
sub
mov
cli
scas
aam
imul
insl
cmp
mov
out
mov
clc
xchg
inc
or
add
xchg
sbb
cs
and
fnstsw
out
xchg
mov
jbe
and
inc
jle
xchg
cmpsb
das
lods
into
clc
pop
scas
xor
jbe
jmp
xchg
dec
pushf
sahf
addr16
movsb
adc
int
insb
test
sbbl
in
fidivrs
clts
push
xor
imul
adc
xchg
sub
sub
stc
or
xchg
fistps
adc
daa
outsl
repnz
cwtl
push
loope
pushf
fmuls
aad
shl
movsb
js
push
imul
out
cmpsb
inc
or
les
sbb
out
incb
fnsave
xchg
mov
xchg
mov
scas
cmp
dec
lcall
mov
rcl
dec
cmp
jge
xor
mov
insb
xchg
repnz
xor
mov
mov
cli
push
push
out
sbb
popa
jae
adc
dec
fstpl
jb
push
lea
leave
in
and
adc
add
adc
xor
cmp
dec
ss
repz
mov
cmp
mov
hlt
popa
jp
mov
pop
shl
xchg
pop
sbb
xchg
mov
jae
ficompl
or
bound
fidivl
ss
sbb
inc
adc
call
test
popa
mov
loope
jbe
incl
xor
aas
sub
jne
andl
xor
aas
outsl
and
or
mov
push
adc
sub
xchg
movl
mov
adc
in
aad
or
data16
mov
adc
sbb
xor
iret
adc
js
test
dec
sahf
jno
or
jmp
je
das
adc
test
scas
aad
and
pop
fisubs
jp
aam
dec
nop
ss
jo
inc
xchg
sbb
mov
push
in
dec
cmp
lods
xchg
sahf
cmp
cmpsl
pop
test
jge
mov
dec
lods
mov
js
jno
cld
push
mov
leave
divl
mov
data16
or
gs
das
pop
sbb
mov
cwtl
out
sbb
out
lret
mov
call
pop
pop
outsl
lret
xor
jg
int
xor
imul
and
sub
xchg
je
daa
leave
and
mov
xchg
dec
dec
in
out
inc
punpcklwd
cs
inc
pop
pusha
or
js
loop
add
test
xor
mov
sub
cmp
scas
or
push
and
rorb
clc
es
cmp
sbb
mov
and
push
push
sbb
and
jp
int3
imul
stos
stos
mov
and
mov
dec
xchg
push
pop
xchg
adc
ret
cs
dec
jecxz
loopne
outsb
mov
dec
jmp
fidivs
pop
push
and
mov
inc
mov
xor
mov
mov
add
nop
lea
cli
repz
mov
fistps
and
pop
out
pop
je
push
js
push
fwait
in
outsl
insl
sbb
mov
nop
sub
xchg
or
lret
scas
in
fcmove
es
or
scas
shrb
lods
mov
add
or
loope
sbb
aad
push
inc
push
jp
ret
jle
inc
icebp
ss
clc
pusha
imul
decb
fidivrl
aam
fmuls
xor
lods
aaa
test
cmp
shll
popf
sub
jb
popf
inc
and
fs
cmp
or
sbb
xlat
out
test
dec
sahf
jge
aam
cmpsb
jno
cwtl
jge
or
sub
dec
je
xchg
stc
std
negl
xor
push
aad
jae
xor
xchg
sbb
xor
fs
fistpll
int3
mov
ljmp
leave
cld
lcall
lock
je
fcmovu
incb
shlb
xor
inc
in
popa
call
or
clc
jns
fs
sahf
jle
stos
mov
add
sub
data16
je
jge
arpl
fwait
inc
inc
adcl
jb
arpl
dec
push
inc
popa
cmp
jge
pop
sti
cmpsl
push
test
flds
scas
jnp
mov
data16
roll
mov
xor
daa
mov
jmp
cld
mov
repnz
ret
mov
orb
pop
inc
dec
push
cmp
sub
sbb
or
clc
loop
repnz
enter
test
cwtl
orb
pop
inc
dec
push
cmp
sub
sbb
or
clc
loop
repnz
mov
dec
xchg
js
push
push
cmp
cmp
sbb
loopne
in
loop
repnz
sarb
orb
js
xchg
fdiv
inc
dec
and
out
imul
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
loopne
pusha
adc
inc
xor
or
mov
xchg
shll
mov
bnd
pusha
adc
inc
xor
inc
and
bound
push
lock
xchg
mov
shlb
loop
bnd
pusha
or
inc
sub
pop
and
jp
push
mov
movsl
rorl
out
popf
add
bound
adc
mov
xchg
jmp
xor
fbld
xor
sbb
in
cwtl
and
xor
mov
test
insb
mov
dec
dec
dec
mov
js
cmc
sahf
popa
jns
adc
insl
xor
stos
jns
push
jne
lock
push
addr16
imul
lds
jo
lods
popa
xor
inc
lock
add
loopne
es
rcrl
aas
push
repz
sbbb
in
add
push
inc
fadds
add
cwtl
jle
insl
sbbb
jecxz
enter
jg
mov
pusha
data16
lds
call
ljmp
ljmp
das
adc
inc
xor
inc
and
bound
imul
loopne
sarb
mov
repz
and
cmp
push
push
jae
inc
xor
gs
cwtl
in
push
xchg
mov
cmpsl
in
sar
hlt
sahf
das
imul
and
or
inc
inc
sbb
push
js
mov
movsl
mov
mov
rol
test
adc
inc
pusha
ja
jno
push
adc
jb
and
shlb
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
mov
bnd
gs
movsl
adc
inc
leave
sub
bound
outsb
push
mov
notl
mov
cmp
push
aad
sbb
pop
lcall
xchg
jnp
add
cmp
fnstsw
imul
fiadds
daa
dec
test
leave
fst
ficoms
popa
es
jmp
sub
repnz
nop
push
push
adcb
add
xorl
rcr
in
lds
xor
jecxz
sahf
xchg
pop
xchg
sbb
adc
popf
pop
cmpsb
mov
mov
adc
mov
and
jae
sti
popa
pop
stc
push
bound
movsb
sarl
aas
lods
push
pop
cli
push
jle
and
ret
push
sbb
rcl
jns
mov
ja
sbb
xor
rsqrtps
dec
pusha
test
dec
sbb
dec
outsb
jle
jno
mov
and
rcrb
adc
xchg
aaa
pop
sbb
cmc
call
xlat
mov
ret
sub
sub
mov
push
lods
and
mov
test
in
add
lahf
adc
lds
cmp
in
sub
push
push
pop
inc
mov
out
mov
dec
sbbl
xor
loope
int3
test
mov
cmc
sbb
lods
mov
das
insb
xchg
mov
or
ss
adc
jo
inc
mov
je
lock
jns
lods
mov
lods
xor
popa
imull
jle
jg
insl
mov
test
mov
mov
les
jne
push
out
xchg
scas
jb
popf
test
shrb
test
push
aaa
dec
mov
loop
lret
hlt
popa
push
mov
sub
mov
mov
dec
daa
aas
mov
les
fists
dec
add
push
in
add
cli
es
sahf
test
lock
inc
xchg
movsl
mov
cld
scas
movsl
sarb
lahf
push
int3
cltd
pop
sub
or
jno
adc
orb
gs
lods
pushf
jle
jno
dec
pop
shlb
mov
out
push
imul
clc
decb
out
cmc
push
sti
cmpsb
add
frstor
adc
ja
clc
ret
jg
loopne
movsl
in
lret
aas
inc
lcall
push
loopne
mov
pusha
add
dec
adc
xchg
pop
scas
ret
pop
jno
clc
ljmp
or
cmp
push
push
xchg
fwait
mov
fisttpll
out
bnd
cmp
push
lods
sbb
and
cmp
adc
sbb
mov
cmp
pusha
arpl
pusha
daa
es
dec
scas
or
fisttpl
popf
repnz
and
dec
adc
sahf
xchg
cmp
test
push
inc
cmp
insl
pop
add
jbe
sub
jmp
jb
mov
inc
push
push
stos
lret
loope
ds
mov
dec
stos
push
sbbb
or
mov
mov
insb
jg
jecxz
push
addr16
and
stc
outsb
mov
ja
mov
and
push
xor
lret
mov
aas
fdivr
sbb
insb
cmp
jbe
popa
adc
fdivrl
aam
das
mov
jo
cmp
jno
sarl
ret
xchg
rep
ja,pn
iret
dec
scas
into
dec
scas
lods
or
add
fdivrl
mov
cmp
ss
addr16
xchg
out
cmpsl
sub
insl
stos
ja
rcrl
mov
std
in
int
je
rcll
out
iret
testb
add
mov
test
int3
inc
fbld
mov
arpl
cmc
mov
jl
sahf
out
mov
imul
jmp
imul
fs
enter
mov
or
push
shll
xchg
mov
cli
pop
mov
jp
xchg
sti
pushf
into
adc
fdivs
movsl
mov
sarb
mov
add
and
outsb
test
pop
mov
jo
inc
popa
inc
pop
call
and
mulb
mov
je
or
pop
sub
add
insl
jecxz
js
add
pop
jns
adc
call
pop
add
in
jle
push
movsb
cmp
sbb
mov
jne
cli
push
nop
mov
add
cmp
sub
and
loopne
adc
imul
fwait
out
pop
hlt
js
shrl
scas
pusha
movb
dec
xchg
xlat
cmp
fucomp
xchg
push
xorl
adc
rclb
daa
repz
adc
psadbw
es
mov
popa
or
fidivrl
sbb
scas
fimuls
push
scas
paddsb
xchg
ja
add
jne
sbb
push
and
iret
and
push
inc
mov
pop
add
xor
ja
mov
dec
aad
sbb
jnp
vmwrite
mov
stc
adc
pop
inc
sbb
sub
dec
fisttpll
call
dec
xchg
fildll
not
test
jo
out
jmp
xchg
scas
xchg
scas
lret
mov
xchg
dec
jnp
fdivrs
mov
arpl
mov
mov
adcb
lret
nop
or
test
sub
js
or
xor
push
xor
mov
ss
cltd
lret
pusha
xchg
mov
nop
leave
mov
cld
or
adc
out
sub
pop
and
sub
out
jge
mov
dec
lods
shrb
test
dec
pop
mov
inc
sti
mov
clc
loope
cli
adc
les
shl
adc
mov
aam
inc
push
jno
scas
cmp
jg
inc
fcoml
mov
sbbl
int
add
inc
cli
outsl
mov
and
xchg
jns
lahf
imul
pop
inc
es
mov
pop
and
lods
jne
cmp
daa
fs
mov
sub
jp
pop
mov
lods
loopne
outsb
fnstsw
pop
xchg
cli
fistpl
or
cmp
ret
xchg
fldcw
xor
xor
dec
icebp
shrb
arpl
and
out
ss
xchg
stc
mov
xor
cmp
add
sub
and
xlat
das
mov
add
iret
imul
ljmp
adc
addr16
cmpb
ss
into
and
sub
roll
mov
sbb
cwtl
pop
insb
inc
mov
lds
mov
mov
outsl
xor
xor
aaa
pop
dec
rclb
outsl
dec
mov
or
movsl
aaa
or
jnp
mov
mov
aad
dec
mov
rol
jmp
xchg
std
mov
pop
inc
cltd
sbb
mov
imul
add
stos
test
lret
mov
shlb
xor
or
call
repnz
mov
cmp
movsb
call
out
xor
loopne
pop
dec
shll
cmp
xchg
push
js
mov
jbe
xlat
sar
sbb
cli
dec
xor
sbbl
out
lcall
adc
pop
dec
popf
inc
icebp
adc
stc
and
bound
shlb
cld
push
aaa
addl
jns
out
orl
dec
lea
into
aaa
dec
fimuls
inc
outsb
dec
inc
andl
clc
pop
cmpsl
jbe
ljmp
mov
lds
cmp
dec
dec
stos
mov
sub
int
lcall
int3
xchg
ffreep
lahf
rclb
ja
sub
sahf
dec
sub
or
sbb
or
filds
xchg
or
mov
pusha
cmpsb
mov
inc
rol
data16
cltd
mov
dec
clc
scas
mov
roll
cmp
sub
add
cld
aam
mov
clc
xor
mov
push
jb
add
adcb
or
dec
push
pusha
add
cmpsl
std
jle
std
mov
lret
pop
rorl
adc
outsb
imul
movsl
notb
psllq
jge
mov
pop
inc
cmp
imul
imull
std
jge
scas
ljmp
int
fbstp
fiaddl
out
or
or
sbb
and
int
xor
data16
mov
mov
mov
or
xchg
sub
ficoms
rolb
dec
xchg
or
xor
imul
adc
test
pop
fwait
insl
mov
mov
sub
shlb
xor
fs
sti
aad
cmp
cmp
or
push
and
repnz
and
imul
ds
fsubl
les
and
sarl
cmpsb
mov
adc
mov
loopne
xchg
cmpsb
lds
sub
xchg
sbb
negb
mov
mov
sar
aad
push
cltd
xor
sbb
sbb
jno
push
adc
popf
orb
movsl
inc
mov
jge
xchg
xchg
fsubrl
push
xor
lock
xchg
mov
pop
cmp
mov
cmp
mov
sub
ja
adc
movsb
sbb
dec
jge
addr16
adc
jae
popa
fadds
inc
xchg
sbb
or
loop
mov
mov
add
adc
xor
loope
jecxz
mov
xor
mov
mov
mov
iret
notb
mov
in
ror
addr16
cmpsb
daa
add
stos
sub
lock
in
out
lods
arpl
or
fldt
cmp
mov
outsb
and
xor
cmp
xchg
or
inc
rorl
dec
in
lcall
mov
outsl
jp
outsb
push
jecxz
push
aaa
mov
test
pop
push
inc
lahf
jbe
sub
sub
and
inc
sbb
sbb
sti
dec
mov
arpl
xchg
push
sub
cld
pop
dec
sub
add
lahf
scas
in
adc
xor
inc
fisttps
sub
jae
scas
jbe
dec
hlt
daa
enter
test
xchg
mov
sub
mov
inc
push
popa
scas
test
enter
jmp
insl
or
xor
add
mov
in
pop
arpl
jmp
mov
movsl
mov
je
mov
cmc
cs
ret
dec
pop
inc
jb
leave
xchg
dec
pop
loopne
push
pushf
cmpsb
inc
ds
add
sub
sub
lods
add
outsb
pop
xlat
and
add
scas
aad
lcall
dec
popa
aas
inc
jno
mov
add
add
mov
mov
lods
or
xchg
mov
aam
lret
jecxz
jnp
pop
inc
aaa
movq
shlb
mov
fdiv
and
das
push
cmp
jne
inc
inc
ljmp
dec
jmp
xor
pop
push
pusha
xor
into
shlb
pushf
push
int
xor
pusha
dec
iret
dec
scas
inc
push
pop
in
sub
les
mov
dec
sub
pushf
pop
pop
or
mov
testl
shll
add
cs
idiv
add
out
adc
lds
ret
inc
fdivl
movsb
in
or
adc
cli
repnz
insb
and
add
les
sahf
dec
adc
jmp
mov
jp
sub
icebp
or
inc
cmpsl
push
sbb
mov
xor
or
adc
ds
jbe
adc
mulb
jb
inc
jns
cmp
pop
aas
jno
out
jecxz
out
into
cmp
sub
inc
xor
jae
push
lret
jbe
inc
push
movsl
repnz
out
lret
shrb
cmc
fsubrl
lret
cmp
mov
xchg
mov
dec
lret
xlat
push
sbb
pop
sub
mov
mov
jnp
cmpb
add
fsubrl
aas
pop
push
inc
xor
sbb
or
insb
mov
adc
or
rorl
dec
push
xor
xor
adc
inc
xor
enter
fwait
rcrb
pop
xchg
xchg
scas
in
in
imul
mov
push
sub
mov
pop
jp
cmp
lret
dec
cwtl
cli
sub
es
outsb
ds
lock
fnstenv
jl
leave
outsl
insl
and
adc
mov
pop
bound
jnp
imul
sti
lock
jo
in
jno
ror
insl
jnp
mov
fld
cmp
sub
outsb
and
cmp
cltd
jb
inc
mov
das
std
rorb
lods
cwtl
mov
in
mov
or
cmp
adc
into
pusha
idivb
int
or
int3
pop
shlb
push
push
lods
inc
into
aam
mov
adc
out
call
mov
inc
clc
lock
stc
clc
push
dec
push
inc
cmpsl
mov
and
test
mov
mov
fxch
fwait
xchg
ficomps
bound
pop
add
cmpsb
movsb
aam
inc
rorl
xor
fistps
fmul
mov
pushf
xchg
aas
out
sub
xchg
and
and
sahf
inc
lret
xchg
xlat
fdivp
push
ja
jns
ljmp
roll
pop
cld
dec
xchg
in
sbb
and
into
fwait
xchg
push
jne
xor
mov
rcll
cs
lods
lret
js
adc
inc
loop
into
dec
fs
popf
addr16
ficomps
test
insb
pop
jno
fcoml
add
out
lds
rclb
call
mov
loop
je
pop
jnp
pop
push
inc
mov
scas
jbe
mov
xchg
adcb
xchg
test
mov
hlt
jge
sub
xor
jp
out
cmp
adc
mov
aam
dec
push
mov
shlb
jo
decl
push
int3
test
add
lret
jnp
dec
imul
loop
and
ss
inc
cli
adc
lahf
mov
mov
cmp
fdivrs
imul
bound
pusha
cmp
fstl
xchg
ret
dec
mov
and
sbb
std
sub
test
scas
adcb
push
jne
xor
into
out
outsl
mov
mov
rcrb
xchg
nop
cmp
pop
das
jbe
xchg
mov
movsb
pusha
outsl
outsl
cmpsb
jbe,pn
stc
rclb
or
push
in
push
nop
mov
sub
xchg
fxch
pusha
lea
mov
repz
imul
adc
xchg
mov
add
push
cmc
stos
cmpsl
inc
stos
bound
insb
mov
inc
add
xchg
and
in
push
cmp
test
xchg
xchg
rorl
push
inc
in
in
scas
inc
xchg
mov
cmpb
lahf
fldenv
pop
clc
mov
scas
ret
cmpsb
mov
inc
insl
movsl
aad
movsb
push
cmpsb
icebp
fucomi
cmpl
sub
xchg
out
xchg
les
push
stos
lahf
adc
add
jnp
xor
push
insl
or
mov
ja
mov
xchg
xchg
add
pop
sub
ja
inc
gs
dec
and
inc
lcall
inc
or
cltd
gs
and
aad
add
cmp
push
jno
in
inc
push
add
pop
and
dec
shlb
sbb
adc
sbb
sub
fists
fdivs
mov
shlb
cmc
xor
shr
xchg
pushf
fmul
pop
test
mov
and
and
sub
xor
jbe
push
ret
js
stc
adc
sbb
mov
pop
dec
dec
shrb
mov
test
cwtl
jmp
inc
out
and
push
daa
pop
jno
sub
mov
jb
jae
and
inc
push
inc
adc
ds
cld
imul
adcb
adc
sub
mov
dec
mov
mov
cs
xor
xor
popf
pushf
call
ja
mov
insl
inc
mov
in
iret
lds
imul
rorl
adc
jecxz
xor
jns
jo
sbb
iret
mov
or
clts
fidivs
cltd
fdivp
sub
push
xor
shll
push
mov
fs
jns
es
xor
cmp
scas
mov
sub
xor
xchg
movsl
mov
aaa
mov
cli
pop
adc
lret
nop
add
push
mov
pop
sub
shr
mov
lea
jno
cmp
fs
in
lock
lret
sbb
scas
mov
stos
stos
repz
and
xlat
xor
daa
shrb
mov
fidivl
jns
pop
and
jl
add
pop
mov
gs
xchg
push
mov
xchg
lds
lcall
push
pop
mov
pop
cmp
jns
in
popa
out
push
mov
push
jns
std
bound
enter
nop
jge
loopne
adc
imulb
fisttpl
incb
icebp
icebp
xchg
outsl
mov
pop
or
stc
jo
js
daa
jne
push
sub
cld
xor
add
cs
dec
sbbl
inc
pop
cltd
cmp
daa
sub
and
dec
insb
xchg
jns
dec
pop
add
cli
xchg
mov
lret
into
sbb
jns
loope
cli
mov
test
mov
movsl
sub
in
imul
out
insl
outsl
push
sarb
dec
inc
sbb
push
int3
and
jg
je
jp
in
sbb
lcall
xor
cmc
xor
cli
sbb
adc
xorb
push
fcomps
sub
pop
mov
cmp
xchg
inc
cs
sbb
cmpsl
add
lds
pusha
cmp
fistpll
js
ja
jne
das
ret
cld
xchg
sbb
sub
test
adc
mov
xchg
movsb
mov
test
mov
out
xor
outsl
shlb
pop
shlb
fimull
and
mov
jle
fsubs
incb
cmp
loopne
mov
in
pushf
inc
cmp
inc
inc
lds
test
test
xchg
repnz
xor
rorb
fsts
imul
test
enter
mov
sets
pop
xchg
sahf
cmp
outsl
adc
xlat
jbe
mov
dec
loope
fdivs
mov
add
fdivl
test
das
and
dec
je
mov
pushf
mull
repz
icebp
rorb
pop
xrelease
pop
dec
xor
adc
loopne
leave
addr16
scas
sub
push
xor
and
add
std
in
mov
mov
xor
pop
jb
xchg
es
push
jge
xchg
je
xchg
lret
daa
cmpsb
popf
jmp
outsl
repz
int
subl
ja
xor
pop
xchg
mov
adc
push
in
pop
xorl
inc
ret
pop
inc
aaa
in
pusha
xlat
push
das
mov
jmp
mov
push
lret
inc
or
mov
pop
stc
xor
data16
addr16
std
or
inc
icebp
xor
cs
test
ficompl
pop
test
sbb
addb
mov
pop
lea
out
shrb
nop
repnz
and
call
pop
jl
test
fldl2t
jg
scas
adc
aas
scas
insl
cld
enter
ljmp
jg
or
pop
push
jnp
out
inc
push
stos
fs
dec
imul
outsl
push
repnz
fbstp
shll
mov
mov
pop
dec
int3
mov
mov
push
jae
dec
dec
std
push
fldt
outsl
clc
sbb
outsb
mov
xchg
lret
pop
add
or
jp
call
xchg
sbb
xor
aam
sub
fsubs
mov
add
sub
jge
mov
cld
out
pop
jne
aas
add
fistpl
lds
sarb
jg
sahf
mov
ja
aam
jg
mov
cmp
xor
jecxz
push
fbstp
in
and
test
mov
or
into
and
outsb
jne
scas
mov
jg
rorb
jge
mov
dec
push
cmc
and
mov
sbb
mov
std
test
inc
lods
add
xchg
add
outsb
xchg
fldlg2
sahf
imul
shlb
rorl
lock
ret
xor
fsubrl
push
pop
lock
inc
mov
int
and
ret
nop
xor
mov
xchg
gs
mov
dec
rcr
sbb
pop
mov
pop
or
and
cs
fnstenv
adc
mov
mov
in
lds
mov
aad
xor
lcall
addr16
xlat
fsubrl
jns
inc
push
loope
or
ja
cmpsb
test
sti
lds
out
insb
int3
cli
mov
stos
add
negb
mov
or
jmp
jnp
sahf
stos
inc
ds
setno
inc
lret
rcrl
arpl
loopne
pop
inc
dec
sbb
popa
inc
movsb
or
mov
mov
adc
fxch
arpl
aas
ret
push
mov
or
shlb
adc
inc
and
bound
jb
and
shlb
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
mov
bnd
pusha
adc
inc
xor
inc
and
bound
jb
and
shlb
mov
divb
popa
push
push
es
xor
inc
and
bound
mov
and
jp
rol
dec
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
fcmovbe
dec
mov
fdivrp
mov
jp
push
pop
jae
and
jae
add
adc
hlt
cli
repz
mov
sbbl
dec
daa
pop
xchg
dec
and
sub
pop
adc
cli
push
lret
enter
xchg
fwait
je
xchg
arpl
daa
cmp
jp
xchg
cli
repz
lea
mov
push
cwtl
jns
rorb
iret
cmpsl
or
push
jecxz
jle
ret
add
fs
pop
enter
cmp
fs
outsb
sti
repz
mov
adc
in
jmp
mov
popa
testl
test
cmp
cli
and
pop
jb
mov
xchg
jne
test
cmp
movzbl
repnz
pop
add
or
lcall
out
xchg
xchg
orl
popf
push
dec
mov
sub
cmp
push
mov
pop
lock
std
cmp
arpl
mov
add
and
jecxz
adc
ret
pop
shlb
mov
jp
imul
sub
add
or
xchg
ljmp
faddp
xor
jae
xor
cmp
pop
pop
jbe
jecxz
rep
cmpsb
mov
fstpl
popa
pop
jae
push
aas
es
jae
adc
lods
shrl
fidivs
mov
jae
inc
pop
push
dec
and
xor
add
adc
jecxz
repz
mov
sbbl
push
pop
push
dec
and
xor
add
adc
jecxz
xor
mov
lahf
mov
lret
rorl
add
pop
cmpl
mov
push
popa
int3
daa
sti
test
jno
xchg
mov
mov
jo
mov
mov
pop
or
and
pop
mov
addl
jne
daa
xchg
mov
outsl
je
xor
mov
filds
fisubl
scas
dec
xchg
rorl
fld
imul
pop
and
xlat
cmpl
jge
out
lock
jle
insb
xor
lock
das
dec
inc
dec
test
xchg
jl
lods
mov
dec
filds
mov
pop
imul
mov
mov
aam
shll
xor
and
cmp
rclb
shlb
shrb
pop
test
arpl
cwtl
daa
sub
jmp
out
sbbl
mov
sub
lds
sub
stos
jl
cmp
jmp
sbb
lcall
sub
push
jns
xlat
inc
push
mov
xchg
mov
mov
call
imul
test
ror
mov
imul
jge
fcmovnbe
andl
jle
push
scas
and
addr16
mov
sbb
fisttpl
and
sbb
sub
add
in
aas
pushf
xchg
test
push
pop
pop
and
aaa
mov
subps
jl
icebp
mov
je
in
shrl
and
cmp
jecxz
clc
push
or
enter
pop
push
lods
ljmp
pop
push
add
jbe
add
inc
fisubrs
ss
shrl
cmp
or
das
cmpsl
cs
cmc
dec
mov
mov
clc
jne
scas
and
adc
addr16
jmp
int
mov
les
push
sti
pop
mov
mov
enter
fstl
ficompl
xchg
sahf
inc
es
scas
dec
jmp
xor
pushf
rolb
sbbl
xor
sub
add
scas
mov
mov
dec
push
es
inc
hlt
in
fisttpll
jo
xchg
loop
sub
int3
or
arpl
xchg
repnz
inc
fdivl
test
nop
mov
jge
sbb
lahf
lcall
bound
jge
inc
lcall
cltd
cmpsl
dec
pop
mov
scas
mov
and
jl
jl
insb
mov
inc
orl
fisubrs
cmpsb
xor
add
push
mov
into
nop
jae
sbb
push
stos
mov
gs
mov
nop
or
add
rolb
sbb
lcall
test
pop
pop
repnz
and
push
jle
into
push
insb
cmpsl
mov
pop
gs
dec
or
add
movsl
mov
add
cmpsb
sbb
addb
mov
push
fsubrs
mov
jae
and
lea
js
sub
inc
repz
pop
subl
jbe
movsl
push
fstpl
std
inc
adc
xlat
movlps
rcl
pop
enter
ljmp
in
cld
pop
movsl
mov
sbb
or
ret
call
fistl
fstpt
insb
das
add
xchg
mov
mov
mov
push
shlb
lock
test
sub
xor
push
cltd
stos
jnp
loop
ds
add
decl
out
in
rorb
push
sub
xchg
aam
jmp
xor
aad
gs
leave
pop
lahf
mov
cs
ret
or
test
jbe
dec
xchg
cmc
int3
dec
jbe
jle
insl
outsl
add
pop
push
xchg
test
imul
out
nop
or
jbe
xchg
inc
popf
add
nop
imul
adc
sahf
cmpsb
sbb
mov
xchg
adc
adc
in
sub
sub
les
push
push
mov
jl
pusha
push
pop
jb
pop
sbb
test
pop
cmpb
fstpl
repz
xor
out
xchg
mov
xchg
insb
icebp
mov
hlt
testb
lret
in
sbb
xorl
mov
sub
mov
mov
cmp
mov
jecxz
movsl
addr16
cmp
cmp
pop
stos
cmp
inc
push
out
stc
testb
sub
imul
jnp
cmp
cs
mov
or
dec
out
scas
icebp
out
clc
jle
xor
repnz
fistpl
jns
sbb
xor
test
inc
jb
imul
add
imul
bound
cmp
rorb
js
or
sbb
push
ja
movswl
test
rcrb
movsl
shll
aaa
adc
ss
jp
jmp
pop
jg
clc
xchg
inc
out
mov
rcrb
movups
push
cmc
cli
lods
jb
jg
dec
dec
sub
lahf
or
pop
jecxz
test
jns
repnz
outsl
ds
dec
gs
inc
idivl
out
xchg
mov
sub
cs
int
fisubl
test
leave
hlt
or
adc
push
cmp
fucom
jl
sbb
fidivrl
lods
mov
adc
xor
mov
loopne
push
adc
add
outsl
mov
jmp
mov
test
out
xchg
pop
jecxz
push
push
test
jae
and
or
cs
stos
mov
xchg
push
push
dec
pop
pop
pop
lea
or
mov
subb
ret
imul
xorb
dec
repz
aaa
cmp
push
js
dec
push
mov
repnz
mov
inc
pop
cmp
pushl
push
jno
mov
xchg
lods
push
adc
push
sub
xchg
cwtl
das
cvtps2pi
shrb
fnsave
movlps
shll
inc
push
movsl
and
mov
xchg
ljmp
cmpsb
js
jno
jae
mov
js
ljmp
pop
add
popf
es
xorl
ss
call
inc
push
xlat
xchg
dec
clc
adc
daa
lret
nop
adc
sub
loope
push
addr16
mov
adc
daa
dec
jge
sub
scas
iret
dec
popf
jb
lds
inc
jnp
push
decl
add
fisttpl
push
arpl
mov
dec
lret
subb
push
jecxz
ja
jmp
fstps
hlt
sub
xchg
sbb
aad
jle
out
es
hlt
mov
cli
fildll
shlb
xchg
push
and
cltd
cmpsl
popa
mov
in
in
push
cmc
push
and
pop
push
jae
pop
xchg
xchg
add
add
mov
fbld
sahf
pop
mov
lahf
adcl
inc
cmpsl
lods
sbb
mov
pop
pop
dec
rorb
pop
lods
test
push
test
dec
jo
outsb
test
xchg
ret
xchg
or
testb
mov
sti
mov
aas
fdivl
or
pop
les
test
sub
inc
sub
addr16
mov
test
or
mov
sbb
call
pusha
pop
pop
mov
popa
dec
sbb
dec
js
stc
repz
cli
rorl
mov
sub
adc
cmc
leave
sahf
rcl
test
out
jmp
xor
cli
sub
xchg
rcr
outsb
mov
sub
push
mov
stc
adc
ucomiss
dec
mov
imul
mov
sub
iret
cli
add
sbb
jae
scas
sbb
lea
in
pop
xchg
fwait
dec
imul
or
inc
test
pop
sub
rol
mov
aaa
movsb
loopne
cli
cmp
dec
dec
sub
inc
mov
subb
sbb
sbb
pop
sahf
lret
nop
out
or
push
jp
cwtl
stos
add
pop
mov
lahf
mov
sub
ja
nop
out
aaa
ljmp
cmp
cld
or
pop
adc
fisttpl
mov
sahf
pop
pshufw
ficomps
cs
ficoml
sbb
push
jne
jnp
out
fldt
in
add
roll
mov
pop
pop
aad
xchg
inc
and
lret
jo
jg
call
inc
gs
push
mov
std
push
sbb
popf
imul
sub
cld
das
cmp
dec
stos
pop
scas
mov
loope
pop
arpl
inc
hlt
jle
aas
int3
or
out
sub
nop
pop
test
push
testb
or
into
ss
xchg
or
mov
scas
push
sbb
sub
adc
inc
ljmp
xchg
and
js
inc
inc
mov
pop
insl
sbbl
push
cltd
push
mov
into
and
inc
mov
iret
lret
stc
and
imul
or
push
jns
mov
mov
sub
mov
fstpl
or
add
cld
adc
jbe
add
xchg
pop
jb
jp
ljmp
ljmp
push
test
fldl
cmp
and
push
jnp
push
mov
dec
popa
lods
add
stos
cmp
fstps
xchg
adc
adc
mov
mov
dec
imull
sub
push
inc
jge
xor
hlt
mov
and
push
mov
push
adc
ja
xor
jge
pusha
jno
or
repz
filds
and
jo
mov
and
inc
sbb
loop
int
jl
lret
xor
sbb
add
pusha
jns
add
mov
push
fsubp
test
adc
jns
mov
cmp
xor
mov
adc
arpl
mov
mov
pushf
cmpb
scas
sti
xchg
lcall
je
jae
in
adc
dec
adc
fsubl
scas
add
xor
fldt
cs
fnstsw
iret
sbbb
lret
bound
pop
idivb
cltd
xchg
aas
jecxz
mov
sub
cs
icebp
sbb
mov
pop
adc
in
pusha
sub
bound
ds
pop
sub
pop
sbb
fdivs
or
pusha
xor
fidivs
nop
inc
mov
cmp
pop
fcompl
pushf
out
sub
mov
add
imul
jno
inc
inc
adc
bound
aaa
in
mov
push
dec
iret
pop
icebp
shll
mov
insw
in
xor
mov
es
in
std
sbb
or
xchg
andb
pop
cs
lret
pop
mov
push
add
lods
mov
push
imull
mov
ficoms
aas
call
pop
dec
mov
sbb
hlt
mov
push
outsb
inc
hlt
adc
add
ret
mov
mov
pop
adc
sbb
loopne
jmp
lods
jecxz
daa
add
push
rclb
cmpsl
or
lea
cwtl
mov
sbb
lods
xchg
fcomps
pop
and
loop
lea
sub
push
push
inc
or
push
dec
mov
aad
arpl
mov
jmp
dec
in
aad
ljmp
lock
inc
rcr
mov
fcmovnb
jge
cs
cmp
or
fs
cmpb
cmp
ret
insl
in
push
mov
stos
dec
pop
jle
das
test
jno
inc
pop
ret
movsb
loope
xor
scas
imul
gs
xchg
mov
jl
cmp
pop
data16
pop
icebp
out
jge
push
cmc
lea
adc
ss
push
ret
std
push
xchg
mov
int
ja
sub
sbb
adc
call
mov
mov
dec
jbe
popf
add
sahf
ja
cltd
pop
stc
in
xchg
pop
bound
bound
ja
pop
adc
xchg
mov
sub
aam
shl
out
popf
cmp
mov
or
adc
scas
adc
pop
mov
jmp
int
lcall
jae
mov
add
iret
insl
pop
test
arpl
test
inc
sarb
xchg
or
rcrb
mov
push
scas
pop
sbb
lds
inc
int
push
rorl
inc
push
scas
and
packuswb
in
and
ret
add
loop
das
in
dec
test
adc
sbb
pusha
push
mov
fsubs
into
arpl
lods
icebp
std
xor
std
xchg
in
and
mov
dec
in
jnp
lret
ret
xchg
lods
jmp
lods
jne
adc
ret
test
out
adc
cs
xor
shll
and
inc
jno
mov
arpl
mov
stos
push
data16
std
lret
ljmp
stos
pop
sub
adc
ret
test
test
jl
lods
packuswb
fisubrs
and
add
rcl
mov
test
mov
jmp
mov
fdivrs
mov
stos
ret
jl
mov
pop
fidivrs
flds
xorl
adc
adc
inc
mov
aam
jbe
enter
mov
add
push
sbb
lret
jns
inc
inc
and
ficoms
sbb
scas
lods
imul
dec
lock
cmp
cmp
add
mov
mov
mov
lods
fisubs
dec
xlat
les
repz
xlat
int
pop
movsb
mov
andb
sub
mov
int
xchg
sub
add
out
cli
xchg
dec
cltd
lods
ret
adc
out
add
insb
sub
cmc
test
loopne
mov
dec
cmpsl
mov
ret
inc
popf
mov
jae
push
ss
inc
inc
movsl
mov
pushf
inc
shrd
push
ret
sub
lret
repnz
pushl
jne
push
clc
mov
inc
pop
daa
jge
clc
dec
gs
pop
repnz
out
stos
pop
fsts
dec
push
jo
adc
xchg
clc
xor
jl
push
push
addl
push
pop
ja
popf
sbb
lock
scas
movsl
mov
movsb
sbb
clc
pop
in
add
jno
ss
mov
mov
pop
and
fs
xorl
repnz
loope
add
mov
add
loopne
lock
fstl
inc
ret
pushf
inc
push
add
sbb
test
inc
clc
jnp
push
sub
pop
pop
repnz
adc
out
inc
aas
shlb
rol
lock
sahf
repz
inc
sub
push
fists
je
lahf
scas
leavew
outsb
fisttpl
or
cs
jae
jo
add
add
mov
pop
mov
push
and
pop
mov
paddb
xchg
push
mov
mov
cmp
test
ds
pop
je
sbb
seto
cmp
cmp
cmp
jbe
nop
push
inc
insb
xchg
mov
mov
adc
mov
xchg
lods
and
das
subl
pop
push
inc
imul
leave
aas
add
mov
into
cmp
movsb
enter
scas
int
jbe
jo
imulb
cmp
divb
addr16
pop
push
addr16
enter
add
sub
sbb
icebp
cmp
test
cmp
xor
mov
jnp
or
push
scas
rcr
mov
shlb
ds
gs
inc
and
in
pop
in
jno
jns
push
inc
adc
mov
fcoml
sub
loop
cli
push
inc
mov
push
sub
fucomip
mov
xchg
push
in
adc
aas
shrl
cmp
mov
or
clc
mov
out
mov
addr16
clc
testb
adc
imul
push
xlat
scas
pop
stos
popf
lock
add
push
decl
fsts
jbe
aaa
mov
add
stos
sub
pop
lea
jne
jle
mov
cmp
emms
push
sbb
or
cmpsl
mov
sti
mov
dec
jp
repz
mov
fdiv
shrw
adc
or
repz
mov
out
movsl
int
nop
or
adc
inc
jge
das
xchg
ljmp
out
iret
sub
addr16
xlat
int
push
xor
jl
pop
add
fnsave
dec
pusha
insl
test
mov
lret
cld
cmp
adc
enter
and
lock
lret
inc
fldenv
aam
jl
icebp
js
add
pop
mov
xor
ret
iret
mov
and
inc
sbb
xorl
iret
mov
repnz
jmp
add
push
xor
arpl
fistps
in
data16
pop
mov
sbb
lret
stos
adc
mov
mov
sbb
or
push
mov
out
inc
adc
jb
pop
int
dec
mov
test
es
jae
dec
push
inc
jae
rolb
leave
jbe
mov
stos
add
lcall
fildl
iret
in
adcl
pop
inc
xchg
insb
sahf
movsb
mov
cld
and
mov
sbb
fnstsw
loope
mov
xchg
and
cmc
inc
xchg
jp
in
fistl
outsb
sub
mov
push
mov
add
stos
lea
jnp
shlb
push
jl
cmp
pop
and
adc
clc
hlt
mov
loop
sub
icebp
dec
and
jecxz
das
pop
push
mov
sub
and
jg
pop
jbe
jno
xchg
jae
loope
adc
jae
cld
int3
in
std
das
jae
and
aas
mov
movsl
fiadds
pop
jae
in
int3
push
sbb
xor
rcl
sub
push
cmpsl
fwait
add
sub
aam
dec
movsb
jnp
push
add
push
dec
clc
call
add
cmpsl
lcall
sbb
fimuls
mov
sub
subl
mov
fucomi
js
adc
notl
stc
inc
add
push
cmp
xchg
and
and
cmc
fsubl
mov
mov
stc
sarl
sbbl
push
push
pop
push
or
mov
inc
das
fnstcw
jne
pop
dec
pop
push
push
push
jno
test
aaa
pushf
loopne
xor
fimuls
fnstsw
pushf
fmull
mov
sub
leave
test
mov
push
in
rcrl
cmp
stos
sbb
and
push
dec
pop
pop
test
pop
sub
dec
call
dec
push
rol
lods
pop
mov
sbb
mov
mov
sbbb
mov
rcrl
lock
int3
pushf
push
dec
imul
clc
sbb
inc
xor
insb
lock
bound
xchg
scas
call
ret
adc
ficompl
movsb
jns
jmp
dec
xchg
out
insl
not
or
testl
lret
xchg
jne
cmp
out
inc
xor
jl
pushf
mov
aaa
mov
jl
leave
sub
in
mov
jl
xchg
jnp
loop
sub
cmpb
xor
fdivs
fcompl
pop
mov
fimull
cwtl
or
pause
push
bnd
mov
mov
inc
mov
in
addr16
jae
outsl
xor
notl
or
ror
sbb
mov
clc
aas
xchg
daa
icebp
pop
mov
test
adc
jp
cltd
and
sti
jge
ret
and
xor
or
push
jns
mov
xchg
adc
pop
mov
sbb
dec
and
sbb
mov
fwait
xchg
es
and
sarl
adc
outsb
mov
pop
xchg
cmpsl
pop
hlt
outsl
sbb
pushf
cld
xor
dec
ss
popf
sbb
rcr
mov
sbb
xor
mov
jle
or
cmpsl
out
mov
mov
push
scas
fldenv
popa
int
movsl
test
pusha
jno
xor
outsl
jg
sbb
adc
sbb
mov
cwtl
je
popf
cmp
nop
sbb
mov
dec
sahf
dec
jno
jno
iret
pop
adc
dec
xchg
cli
enter
push
arpl
inc
fisubrl
sbb
rorb
xchg
jbe
aas
add
jb
xchg
dec
xchg
xchg
scas
mov
or
jbe
cmp
xchg
inc
aas
fistpl
mov
jbe
dec
sub
jb
jbe
in
fdivs
mov
lock
jne
jbe
adc
aad
pop
repz
xor
mov
or
xchg
mov
jns
mov
shll
push
sbb
popf
dec
not
out
jne
dec
adc
inc
lret
mov
dec
xor
mov
push
or
sti
push
xor
push
ret
xlat
ljmp
lret
add
mov
in
cmpsb
ljmp
mov
jle
push
scas
pop
jnp
cmc
jp
das
jb
mov
pop
xchg
pushf
lret
scas
xor
nop
xor
or
repnz
les
imul
addl
pop
add
push
dec
das
dec
or
hlt
aas
lahf
push
aas
jbe
inc
xchg
pop
out
push
out
aam
fs
or
stos
cld
adc
jb
cwtl
mov
data16
call
in
sub
mov
loopne
ret
test
rcrb
xchg
cld
push
int
or
imul
push
loope
mull
jp
or
jno
data16
mov
and
mov
adc
insl
dec
fwait
movsl
and
adc
sbb
int
ror
mov
lcall
inc
pop
push
dec
and
xor
add
adc
jecxz
repz
mov
sbbl
push
pop
push
dec
and
xor
add
adc
jecxz
repz
mov
lcall
inc
pop
push
dec
and
aaa
sub
cmp
or
cli
ljmp
mov
add
adc
jmp
mov
aad
in
cmc
inc
hlt
push
in
aam
les
fsubl
inc
mov
test
je
fs
testl
mov
inc
hlt
push
in
aam
les
mov
movsb
daa
xchg
aaa
test
je
add
push
testl
mov
inc
hlt
push
in
aam
les
mov
movsb
daa
xchg
aaa
test
fs
xor
inc
out
jno
dec
jmp
hlt
push
mov
inc
jae
inc
lods
dec
int3
addb
movsb
rorl
scas
sub
int3
mov
cli
cmp
xchg
rol
pushf
stc
fwait
push
jb
js
or
inc
dec
push
mov
and
test
cmp
jne
aam
push
sbb
in
jmp
lea
loope
adc
test
mov
movsb
fstps
pop
jnp
scas
or
rcll
pop
adc
sbb
mov
mov
xorl
xor
stos
jle
or
mov
mov
cmp
fsub
mov
fs
inc
mov
mov
add
add
addr16
les
mov
movsb
daa
xchg
aaa
test
je
fs
testl
mov
add
adc
inc
fidivl
xchg
rcll
test
add
push
push
jecxz
jecxz
inc
hlt
and
mov
cld
jnp
daa
jecxz
test
xor
ret
dec
aad
mov
cs
jbe
pop
mov
movsb
daa
xchg
aaa
test
je
fs
testl
mov
inc
hlt
push
in
aam
les
mov
movsb
daa
xchg
aaa
test
je
fs
testl
mov
inc
hlt
repnz
fsubl
sbb
mov
inc
scas
xchg
mov
orl
bound
pop
add
sub
pop
push
out
pop
repz
xchg
dec
lretw
fstl
jmp
std
in
ja
push
jo
gs
in
cmp
movsb
rorl
outsl
dec
mov
push
push
movsb
ficoms
inc
cmp
mov
cmp
xchg
xchg
mov
xchg
out
pop
or
push
push
daa
mov
and
in
inc
or
mov
and
notl
dec
dec
cltd
lcall
negb
into
iret
sbb
fstpt
sti
repnz
pop
loope
mov
sti
mov
or
rcr
shlb
push
adc
add
push
out
shll
mov
sub
xchg
mov
adc
pop
rorb
loope
repnz
movsb
pop
mov
fxch
scas
jp
jl
cs
les
and
aad
sbb
add
jp
insb
sbb
cmp
repz
jmp
mov
imul
bound
dec
leave
into
es
sub
sbb
push
hlt
leave
rcrb
jg
add
hlt
pop
add
shrb
jno
lahf
inc
pop
movsb
addl
test
jo
aas
and
lahf
sub
dec
jbe
push
or
cwtl
sbb
int
out
stc
shll
mov
cmpl
cmp
and
fistpl
pushf
repnz
aaa
es
jl
fstl
jle
dec
mov
ja
jg
pop
data16
lea
andb
jecxz
jl
xor
cwtl
push
jg
cmpsb
sub
insb
push
xchg
lock
pop
add
cmp
stos
scas
test
inc
loope
xchg
mov
xor
iret
pop
push
push
xchg
jo
and
dec
xor
sbb
dec
js
repz
lret
rcrl
inc
shrl
popf
sub
fnstcw
pop
push
dec
jae
adc
sub
push
pop
rorb
xchg
imul
ds
out
pushf
add
ficompl
or
cli
popf
add
imul
cmp
in
test
mov
and
test
add
sub
mov
outsb
push
aas
push
hlt
mov
std
adc
mov
sbb
arpl
sbb
sub
cmp
sub
adc
jbe
pop
jae
ret
in
mov
loopne
mov
pusha
rcrl
mov
cld
fdivp
shrl
dec
popf
push
popf
add
andl
xchg
repnz
mov
dec
out
add
push
pop
inc
aam
imul
cmpsb
int3
push
pusha
mov
in
jp
nop
sbb
xchg
loopne
mov
out
pop
fistl
les
adc
cmp
sub
inc
enter
in
fdivl
aas
js
and
xlat
aam
inc
test
or
xchg
mov
pop
lcall
loop
pop
or
sarl
push
in
rorl
scas
xchg
into
jg
popf
enter
cmpsl
fucomip
push
mov
dec
loopne
mov
or
aad
adc
inc
adc
mov
lods
add
and
mov
cli
cltd
imul
pop
add
sbb
push
iret
mov
mov
int
pusha
adc
sbb
scas
testl
enter
dec
push
inc
xchg
popa
push
or
jne
inc
outsl
xor
sub
xchg
pop
jl
mov
scas
xor
dec
cmp
cli
out
cld
push
jl
xor
push
pop
push
sub
fcomp
pop
xchg
cmc
negl
mov
inc
mov
sbbl
inc
xchg
mov
int
and
stos
outsl
pusha
ds
enter
mov
ds
out
lahf
push
push
mov
or
xchg
fucomip
std
sbb
push
inc
test
add
fcoml
fadd
mov
addl
pusha
mov
mov
sub
sbb
adc
adc
test
in
clc
outsb
in
mov
or
and
cs
mov
jg
rol
jne
lock
cmc
cmp
subb
jbe
int
hlt
or
adc
mov
lret
add
sbb
push
push
aam
jmp
test
jae
cmp
das
add
mov
add
into
js
aam
adc
std
fisttpl
rcr
fwait
cld
rorb
insl
nop
lock
inc
call
dec
xchg
lods
outsb
adc
sti
scas
pop
aad
mov
jp
divl
pop
sbb
jb
sub
addr16
inc
lret
cs
push
or
data16
cwtl
mov
xchg
mov
int
cmpsl
adc
ss
les
mov
mov
movl
mov
or
icebp
cs
cwtl
iret
cld
scas
and
and
jns
out
jns
aas
incb
enter
loope
pop
adc
mov
inc
addr16
imul
pop
xchg
jmp
fs
andl
popl
sbb
sub
sub
or
rcrb
cltd
xchg
pop
push
arpl
arpl
cmp
dec
sahf
mov
mov
sub
pop
jmp
jl
push
xor
and
add
dec
fcoml
aas
add
loope
mov
sub
inc
leave
or
mov
test
xchg
rol
call
sarb
cmp
and
and
mov
jl
rep
mov
mov
inc
push
mov
pop
popf
lods
out
mov
add
pop
add
or
jp
add
mov
pop
mov
sub
mov
push
add
out
arpl
iret
inc
add
stos
lods
ja
gs
jno
xor
bound
fidivl
es
pop
cld
outsl
clc
xor
sti
push
mov
xor
mov
sbb
sub
je
lea
add
inc
mov
lods
push
jle
xchg
mov
or
cmpsl
mov
mov
fcompl
clc
jno
dec
pop
std
pop
rcrb
sahf
mov
cwtl
addl
fwait
popa
mov
jo
jnp
sub
js
inc
xchg
idivl
ljmp
adc
scas
mov
lret
mov
xchg
push
icebp
dec
and
sti
mov
jg
jbe
loope,pt
arpl
and
mov
decl
dec
fiadds
daa
xor
inc
movsb
jp
ret
push
add
sub
jl
sbb
ret
test
rclb
or
inc
inc
faddp
mov
outsl
ljmp
aam
pop
push
ljmp
push
pop
scas
pop
jle
scas
xchg
aas
popf
clc
pop
out
push
dec
in
add
sub
clc
loop
fstps
ret
test
jge
jge
fsubrs
bound
mov
fisttpl
mov
outsb
repnz
in
data16
add
mov
out
stos
andb
aaa
push
and
cmp
jg
ja
jle
adc
movsb
loopne
mov
insb
cmp
xor
ja
cmc
into
pop
mov
push
test
cs
hlt
pop
inc
repz
icebp
jecxz
sub
mov
xor
mov
mov
les
sub
pop
mov
int3
in
imul
stos
mov
add
dec
clc
lret
mov
adc
sti
testl
hlt
inc
mov
jg
into
stc
sub
push
sub
sub
les
sbb
arpl
cmp
fisttpll
aam
out
lock
mov
push
push
pop
sbb
es
mov
sub
insl
inc
fidivrl
bsf
sub
mov
cmp
sub
into
xor
dec
scas
mov
jg
mov
pop
lock
push
mov
aas
scas
xor
lods
ljmp
add
jns
dec
mov
pop
lret
or
dec
xor
std
adc
inc
insb
rcrl
mov
in
jo
pusha
push
ds
or
lods
lcall
or
sbb
adc
xlat
sub
xchg
out
or
fstl
shlb
and
idivb
jmp
mov
test
xchg
aam
scas
add
and
and
jmp
aam
mov
and
out
enter
add
mov
push
cmpl
lods
int
divb
repz
mov
aam
decb
or
adc
xchg
subl
xlat
mov
loop
ljmp
insl
sub
jae
push
jnp
mov
ds
hlt
in
fcompl
leave
dec
pop
and
mov
adc
gs
loop
xchg
call
pop
or
dec
fistpll
xor
push
xchg
repnz
xchg
sub
pop
loopne
inc
sar
pop
inc
push
cmpsl
mov
aad
rcr
inc
outsb
call
fcomps
xor
jge
cmp
dec
jg
sti
cmpsb
jo
push
popf
scas
jne
sbb
and
dec
stos
inc
pop
fcoms
int
lods
fucomi
cmp
sub
cmc
dec
int
mov
ja
je
stos
adc
push
loop
stos
sbbb
mov
js
stos
rcrl
adc
push
repnz
imul
mov
lock
clc
scas
jg
mov
add
xor
les
mov
loopne
and
cltd
jae
jb
pop
scas
fsubs
in
mov
jg
mov
jbe
jo
sbb
mov
jecxz
pop
fstps
popa
cltd
cld
push
fistl
movsb
adc
mov
ja
lock
pop
and
pop
mov
cli
inc
fs
test
cmp
scas
fldt
test
cmpsl
mov
mov
stos
repz
adc
pop
mov
iret
mov
out
dec
mov
push
test
lahf
xor
ss
mov
mov
mov
bnd
jae
lds
sub
addr16
add
sti
mov
gs
pop
push
add
push
jne
jb
push
or
push
and
and
or
cli
inc
rorb
pop
lret
int
sahf
mov
idivb
es
adc
xor
cwtl
jb
or
cs
mov
lahf
sahf
sbb
and
lcall
dec
test
lret
sub
les
out
push
das
inc
or
cwtl
xlat
mov
outsl
sub
xor
jecxz
ljmp
mov
xlat
and
shll
jecxz
add
imul
divb
sub
xor
shrl
mov
pop
inc
xchg
inc
mull
and
mov
aaa
out
dec
sub
lods
loope
push
dec
jae
or
sbb
pop
outsl
lods
test
sbb
shll
pop
fs
ret
mov
jne
xchg
jne
stos
leave
rolb
into
mov
inc
hlt
cmp
loop
pusha
xorb
dec
enter
adc
insl
xchg
icebp
mov
repz
ja
cmp
or
mov
push
jne
mov
inc
sub
jbe
dec
daa
adc
push
nop
mov
xacquire
mov
inc
testl
sbb
popa
jnp
leave
inc
cld
sti
xchg
dec
mov
sub
push
ja
xchg
icebp
add
or
cmp
mov
lea
inc
add
pop
insl
jne
fisttpl
divb
inc
and
pop
cmp
or
fucomp
repnz
mov
pop
fidivl
das
pop
cmp
xlat
dec
push
mov
mov
shrb
add
adc
movsl
inc
jle
rorl
mov
add
xchg
iret
sub
scas
bound
push
scas
addr16
adc
flds
scas
adc
xchg
inc
fisubs
cmp
out
sub
insb
mov
push
fistpl
or
lret
jle
pop
dec
sbb
mov
mov
xor
pop
pop
mov
pop
or
fimuls
std
mov
int
ds
jl
push
inc
in
jle
aam
xor
sbb
lcall
ret
mov
fs
out
push
pop
xchg
out
popf
imul
in
pop
sub
test
pop
ja
inc
dec
inc
sbb
dec
jnp
adc
sub
mov
inc
std
sub
ljmp
imul
and
sub
sbb
xchg
test
dec
popf
lock
data16
jno
mov
addr16
imul
mov
and
adc
sub
repz
mov
mov
sub
push
sbb
mov
test
movsl
mov
iret
pusha
push
nop
insl
je
loop
cltd
lret
inc
add
mov
xchg
or
jmp
out
fmull
leave
lcall
xor
nop
test
jbe
leave
cmc
call
subb
mov
scas
jne
andb
or
aas
je
sbb
out
cmp
inc
out
xchg
sar
sarl
rorl
repnz
les
data16
enter
pop
mov
dec
gs
pop
idiv
mov
pop
pop
jo
mov
jnp
and
sub
jecxz
dec
in
cmp
mov
and
mov
loop
orl
fmuls
lea
hlt
pop
mov
cmp
ret
push
and
mov
add
inc
xchg
and
mov
add
stos
pop
inc
hlt
rol
gs
addl
xorl
into
iret
mov
inc
lahf
sbb
adc
xchg
imul
add
push
dec
and
lret
jg
ret
mov
shr
sub
aas
inc
repnz
pop
mov
movsl
cmp
mov
bnd
insl
std
mov
adc
cwtl
xor
je
les
call
outsl
jp
insb
shl
rorb
test
aaa
fidivl
mov
addr16
sub
loop
and
jns
out
imul
outsb
cmp
mov
jno
icebp
cwtl
mov
xor
jbe
mov
adc
xorl
add
and
js
mov
xor
imul
cmp
dec
sarl
xor
adc
mov
ret
inc
mov
outsb
xor
or
inc
jns
loopne
pop
sub
iret
xchg
pop
shlb
sahf
push
mov
lds
in
mov
pop
sbb
inc
call
push
jno
cmc
cmc
out
pop
pop
je
scas
aam
ret
cmp
xor
repz
jp
push
stos
push
inc
jp
out
je
xlat
sarl
jle
aaa
jns
cld
jge
movsb
aas
jne
dec
repnz
shl
out
cmp
mov
sub
xchg
aaa
sub
mov
lock
sbb
js
mov
ret
dec
jns
lods
pop
cmp
or
jae
gs
adc
mov
pop
jne
mov
add
mov
fistps
mov
pushf
mov
or
mov
or
cmp
inc
lds
pop
int3
jnp
sbb
cmp
out
ret
imul
inc
mov
js
scas
jle
xor
sti
lret
fwait
mov
pop
jb
push
rol
sbb
aas
lahf
push
xor
push
fcoms
mov
pop
inc
les
insl
cli
sub
lcall
repnz
or
xor
and
xchg
mov
into
decb
or
xchg
and
adc
fldenv
cld
cmp
das
adc
lret
sti
sub
adc
insb
fwait
mov
mov
jb
push
popf
aaa
cmp
pop
add
sbb
leave
lods
and
or
or
jno
pop
std
aaa
ret
loop
insb
fdivrl
fbld
or
filds
stc
sbb
aas
stos
cmp
ret
test
rcll
ss
ret
test
and
cmpsl
inc
movsb
imul
lock
cmp
aas
fisttpl
cmp
xchg
xor
clc
dec
pop
mov
push
mov
insl
and
jnp
jle
inc
in
pop
sti
sbbl
or
in
xchg
stos
test
dec
ja
push
outsl
lods
mov
jle
pop
add
xchg
lea
paddw
jecxz
fisubrl
in
jle
addb
adc
xchg
push
jbe
mov
data16
pop
jg
xor
sbb
shl
aad
fcoml
mov
fisttpl
bound
cltd
in
popf
add
jae
mov
mov
movsb
sbb
push
pop
xor
sbb
movsl
int3
in
mov
or
fnstcw
dec
pop
mov
sbb
and
xor
sub
and
out
int
jno
outsl
jbe
cmc
das
mov
add
movsb
inc
ljmp
js
cmp
cmp
or
push
push
sbb
test
dec
inc
lods
rorl
xorb
xor
sub
jns
cmc
cmp
and
pop
pop
in
xlat
add
test
pop
lret
cld
mov
inc
sub
test
jno
xchg
lret
cmc
mov
fldcw
push
dec
out
std
arpl
dec
aaa
xor
arpl
sbb
mov
insb
in
in
mov
mov
loop
mov
je
xor
clc
jb
push
mull
je
push
add
cli
fstpl
dec
aam
sbb
mov
sti
cs
repnz
sbb
arpl
cwtl
mov
jge
stos
cmp
or
call
test
call
jne
mov
shrl
das
fiadds
jl
inc
sbb
and
es
pop
mov
cwtl
mov
hlt
icebp
push
push
mov
adc
insl
cmp
pop
mov
push
sub
dec
and
xchg
int
jae
ret
mov
cld
mull
hlt
xchg
cltd
mov
inc
stos
xor
popa
lahf
and
mov
sub
lcall
popa
sbb
sub
pop
setge
push
fidivrs
push
xchg
xchg
or
iret
cmp
pusha
jnp
jp
inc
jb
mov
pop
push
xor
lods
cmp
dec
mov
in
xchg
ljmp
cmp
mov
mov
std
sub
mov
test
add
pop
push
mov
outsb
fsubs
out
xchg
movl
les
imul
mov
std
and
adc
cmpsb
jns
push
cmp
std
aad
or
jnp
mov
mov
pusha
in
push
mov
insb
mov
test
sahf
cmp
add
xchg
into
push
inc
mov
jg
pop
inc
stos
inc
mov
movsb
movsl
mov
adcl
mov
sbb
sbbb
cli
cmp
push
out
hlt
js
and
jle
jb
add
cs
and
inc
gs
in
js
pop
ss
cmp
test
lret
jecxz
mov
jne
mov
imul
pop
fld
and
mov
fdivrs
imul
pop
clc
jno
pop
cmpsb
loope
fistpl
push
repz
repnz
movsl
filds
in
imul
adc
adc
scas
daa
and
or
std
loop
jp
jg
sbb
sbb
lds
pop
pop
pop
ds
or
rorl
adc
sti
mov
addr16
push
adc
xor
mov
push
mov
xchg
testl
cmpsl
fs
xchg
cmp
xor
loopne
sbb
shrl
dec
test
rol
push
fsubs
dec
aas
add
adc
aad
notb
pop
or
cld
int
clc
out
sub
mov
pusha
cli
push
mov
rorb
inc
pop
setl
or
mov
mov
inc
icebp
test
push
imul
pushf
mov
andb
mov
mov
nop
mov
out
dec
insl
ret
jl
loope
xor
cli
pop
mov
repz
jg
mov
and
bsf
gs
add
out
sbb
bound
fistl
pop
adc
dec
xor
dec
fistps
ds
inc
cmp
adc
divl
pop
in
xor
int3
mov
add
cld
notb
je
ja
push
xchg
jp
jnp
mov
mov
add
or
mov
lods
out
add
out
addb
cmp
clc
push
scas
enter
test
outsl
inc
pop
inc
inc
cmc
push
cltd
jecxz
or
mulb
mov
lea
outsl
dec
mov
dec
clc
iret
stc
push
sub
jmp
sahf
aam
sbb
out
or
and
rcl
jb
cwtl
jb
fstl
inc
or
sti
jecxz
dec
push
pop
jg
pop
ljmp
cltd
pushf
dec
je
pop
jl
cli
addl
add
fabs
imul
test
into
inc
dec
push
push
aam
popf
mov
mov
fwait
out
push
adc
enter
add
jmp
xchg
nop
shll
stos
fisubl
pop
mov
or
inc
aam
les
mov
movsb
daa
xchg
aaa
test
je
fs
testl
mov
inc
hlt
push
in
aam
les
mov
movsb
daa
xchg
aaa
test
je
fs
testl
mov
inc
hlt
push
fs
ja
pop
mov
and
xchg
aaa
test
hlt
xlat
fs
testl
mov
inc
hlt
push
in
aam
les
mov
movsb
daa
xchg
aaa
test
je
into
dec
push
divl
lock
dec
sti
subb
mov
cmp
pop
add
xor
pusha
into
jo
subb
mov
outsb
sarb
dec
lock
add
xor
pusha
into
jo
subb
mov
outsb
sarb
dec
lock
add
push
sahf
inc
mov
sbb
hlt
cs
dec
mov
test
mov
enter
sub
mov
pop
insb
outsl
jle
pop
dec
loope
xchg
rolb
mov
mov
lahf
pop
cs
jne
into
and
jg
cli
call
xchg
cmp
cmc
sub
fistpll
mov
int
xor
adc
aas
arpl
mov
test
das
outsb
mov
popf
popf
stos
shll
adc
sti
call
mov
ret
dec
jecxz
outsb
lock
sbb
adc
sarb
mov
cmovg
movsl
pop
jge
test
fildl
push
scas
rorb
add
cmpsl
inc
cs
mov
outsb
sarb
dec
lock
add
xor
pusha
into
jo
in
repz
out
negb
add
jo,pn
jne
push
loopne
lock
mov
ret
push
icebp
dec
movsl
or
pop
jb
ja
pop
fdivs
repnz
xor
mov
jle
dec
out
aad
test
sarb
dec
lock
add
xor
pusha
into
jo
subb
mov
outsb
sarb
dec
lock
add
xor
pusha
into
jo
subb
sub
stos
and
sbb
mov
ret
jp
aad
fsubrs
popa
lods
pop
aas
shr
pop
pusha
mov
push
lods
inc
adc
mov
fldt
fdivrs
enter
cmp
gs
gs
gs
xor
push
mov
push
out
cmp
test
mov
in
mov
jmp
popa
jl
call
jno
dec
xor
icebp
popa
sti
daa
or
sub
cwtl
dec
ss
pop
cs
int3
out
xor
fadds
add
ret
inc
push
test
daa
leave
cmp
sub
and
cmc
movsb
sub
mov
pop
test
movb
dec
mov
xchg
stos
mov
sbb
mov
mov
sahf
cmp
adc
and
mov
dec
lret
cmp
xchg
stos
ja
xchg
or
lods
ret
ret
int
pop
sub
cmp
pop
in
lret
out
dec
mov
loope
inc
or
sub
push
xor
fisttpl
push
dec
dec
pop
sub
out
push
in
aam
insl
xor
jno
sub
and
pop
fcompl
mov
mov
sub
sub
xlat
sbb
push
cmp
rcll
cmp
or
push
adc
and
sbb
and
or
cmc
imul
dec
mov
mov
pop
stc
mov
cmp
lcall
inc
cmp
shlb
fistl
leave
cmpsl
jmp
loope
bound
jecxz
loop
xchg
inc
cmp
dec
xchg
sub
push
in
jne
nop
repnz
xor
call
shlb
fwait
incb
mov
loopne
aad
inc
and
dec
mov
jle
lods
mov
imul
orb
push
cmp
ja
lods
dec
jb
es
pop
js
jmp
or
fcmovne
rorl
dec
rclb
xchg
add
mov
cmp
icebp
popa
xor
xchg
frstor
dec
mov
pusha
or
shrl
ffreep
cmp
mov
cmovg
rcrb
pop
shrl
sub
adc
pop
sub
and
flds
nop
jmp
push
lcall
stos
loop
xor
mov
jne
mov
mov
push
xlat
stos
adc
outsb
adc
leave
push
or
out
out
xchg
addr16
push
add
sbb
bound
pop
in
mull
xor
xor
xchg
lret
sbb
fsubrl
push
cmp
sub
push
lods
outsl
je
movsl
lret
in
inc
call
shrl
repz
rclb
pop
and
pushf
cmpsb
in
push
push
mov
sbb
inc
or
aad
or
jecxz
xor
xor
and
mov
hlt
addl
rorb
std
add
xor
pop
add
aaa
mov
cmc
icebp
jle
mov
inc
or
frstpm(287
push
leave
js
ja
repnz
inc
js
sbb
arpl
in
mov
push
xor
jmp
movsl
into
pop
prefetch
ret
stos
adc
loop
fsubrl
adc
lods
imul
cmc
mov
stos
lret
ja
mov
popa
out
sub
dec
pop
fisttpl
dec
test
mov
loop
xchg
out
inc
jne
scas
push
lds
daa
pop
push
cmpsb
stos
dec
pop
cs
mov
stc
mov
push
repz
fs
cmp
xor
sub
or
arpl
adc
and
nop
jo
push
test
outsl
and
cmp
test
pushf
aaa
or
js
add
or
dec
sbb
sbb
add
gs
repnz
cmc
loope
dec
leave
aam
jno
testb
adc
fnsave
sbb
insl
pop
shrb
jg
int
pop
rclb
cld
push
mov
inc
jno
jle
push
push
xor
iret
hlt
movsb
aad
enter
adc
xchg
cmpsl
inc
sub
addr16
sbb
loope
mov
cmpsb
xor
pop
sbb
pop
stos
xchg
xchg
mov
enter
add
popf
push
dec
ret
pop
stc
out
add
insl
dec
jmp
cmp
dec
outsl
call
push
out
jmp
dec
pop
add
push
popa
insb
cs
out
pusha
in
mov
in
push
ja
xor
dec
mov
and
jp
lea
jne
fdivrs
sbb
mov
int
xchg
cmpsb
add
out
sub
out
inc
ds
push
les
ds
xchg
jge
jo
stc
mov
mov
in
and
roll
jge
movsb
add
dec
pop
lret
int
inc
cmp
or
es
addr16
adc
dec
loope
mov
es
fcoml
test
dec
pop
push
bound
leave
fistl
sub
repz
fstps
cmpb
push
bound
popa
xor
xor
or
movsl
and
jnp
or
jle
xchg
shr
mov
mov
in
xor
mov
fwait
test
jmp
adc
out
cmp
push
jg
loop
insl
imul
les
xchg
cmp
xor
push
inc
pushf
stc
xchg
daa
sub
aaa
test
mov
out
scas
scas
pop
popf
mov
int
cli
stos
lret
dec
test
mov
xchg
and
pop
cmp
insb
jmp
mov
mov
test
hlt
shll
xorb
mov
into
inc
xor
daa
nop
rcrl
cmpsb
shr
out
test
ss
pop
dec
jb
mov
outsb
xchg
leave
imul
call
out
mov
push
xchg
pop
dec
gs
je
out
stc
or
lcall
ss
inc
movsl
test
aaa
jmp
pop
icebp
sbb
sub
call
movsb
lea
push
jno
cli
cmp
pop
test
icebp
cwtl
lret
std
add
addr16
xchg
mov
aas
bound
sbb
cmpsb
repz
lea
ret
int3
stc
xor
insl
iret
jmp
lea
imul
aam
mov
mov
push
cld
outsl
fildll
mov
adc
add
lods
cmc
cwtl
sub
mov
jnp
out
nop
addr16
push
push
repnz
mov
push
cmp
cmp
call
icebp
mov
mov
or
scas
add
arpl
xchg
jb
push
pop
mov
pop
iret
jle
imul
repz
inc
cmp
sbb
jns
xchg
pusha
andb
push
lahf
pop
cmp
adc
push
inc
int
xchg
ror
sbb
dec
mov
add
xchg
jnp
jl
mov
dec
sbb
inc
sub
mov
movsb
mov
pop
sbb
out
cmp
xchg
and
lea
insl
outsb
lea
sub
lcall
call
lahf
and
xchg
and
call
out
sbb
cmp
fdivr
sbb
mov
adc
popa
sbb
out
aad
xor
bnd
insl
xor
fdivs
add
pusha
punpcklbw
mov
mov
cld
dec
xchg
outsl
insb
bound
inc
or
cmc
pop
rolb
std
and
mov
dec
jb
rcrb
jns
out
fistps
xor
mov
fmuls
shll
sub
mov
pushf
dec
inc
push
sbb
lahf
cmpsl
xchg
sbb
adc
mov
je
das
andb
jl
xchg
add
gs
lods
mov
movl
idivl
movsl
mov
push
mov
dec
mov
sub
and
lret
push
or
inc
mov
cmpsb
adc
xchg
and
clc
and
or
lcall
notb
dec
ffreep
mov
lcall
mov
rol
les
dec
bound
gs
imul
add
sbb
das
mov
mov
stc
loopne
fwait
punpckhbw
mov
mov
lea
pop
rcl
dec
xor
ss
add
or
ds
imul
lock
pop
in
mov
scas
fwait
int
mov
xor
imul
lods
push
mov
add
loopne
add
jo
addr16
pop
cmp
mov
or
dec
jnp
pop
cmpsl
mov
push
inc
pop
push
cmp
addb
movb
data16
xchg
mov
jle
fsubp
jnp
mov
sbb
std
in
addr16
imul
sbbb
and
mov
mov
adc
xor
mov
rcrl
mov
stos
sub
test
push
or
shlb
inc
fbld
fildl
orb
call
fwait
mov
outsl
inc
or
xchg
sahf
or
addr16
or
outsl
dec
ja
sub
xchg
lret
rcr
xchg
jle
mov
push
js
mov
testl
out
sti
sub
pop
cmp
pop
pop
dec
outsl
mov
mov
jge
popf
jmp
push
dec
inc
in
and
mov
pop
pop
dec
adc
inc
cli
stos
dec
mul
fimuls
mov
cltd
movsl
sub
sub
pop
mov
es
aam
or
pop
sarb
mov
es
inc
lret
pop
push
dec
jbe
arpl
aam
loopne
clflush
in
xor
mov
jb
cmp
xchg
outsb
add
add
roll
push
fisubrs
je
fsubs
sahf
pop
popa
aas
push
fwait
and
jae
test
test
dec
jg
xchg
jns
ja
pop
rcrl
sub
mov
lds
sub
cmp
js
xor
out
loopne
add
andb
fiadds
add
rorb
or
mov
ret
stos
mov
xchg
sahf
mov
repnz
rclb
cmp
sbb
mov
fnsave
cmpsl
stc
xchg
test
sub
ret
xchg
pop
insb
test
xor
xchg
pusha
pop
frstor
mov
sub
mov
sysexit
loopne
insl
sub
sahf
in
add
xor
dec
shll
sub
sbb
pop
out
hlt
testl
sahf
cmp
jne
iret
inc
or
incb
cmp
bound
dec
xchg
icebp
mov
add
popa
es
cli
and
and
test
mov
push
lds
out
loopne
or
pop
xor
mov
lret
inc
jle
push
fildl
adc
mov
es
int3
jo
or
mov
mov
out
sti
sahf
cmp
xor
xor
inc
and
jecxz
fistps
mov
rorb
mov
lds
cmp
sub
fmuls
mov
mov
mov
std
jle
lods
xor
jge
jmp
scas
push
shrb
imull
or
pop
iret
ret
add
xor
outsl
stos
arpl
ror
jp
fidivl
jmp
cs
addr16
mov
sahf
sar
push
dec
stos
adc
push
fcom
push
das
and
jmp
jmp
ljmp
push
scas
xlat
sahf
inc
jnp
das
rolb
pop
testb
arpl
mov
mov
fistps
flds
adc
cwtl
ljmp
orl
adc
pop
test
aad
adc
ficoms
sub
xchg
lds
aad
dec
cli
lods
movsl
cmpsl
jno
pop
out
fadds
sti
fstps
iret
daa
push
push
outsb
sub
in
pusha
jl
insb
inc
sub
pushf
and
addr16
xchg
add
cmpsb
sbb
addl
test
pushf
aaa
insl
adc
or
xchg
pop
insl
ret
push
fsubs
sarl
rclb
fisttpl
testb
push
gs
xor
les
ja
pop
cli
lods
inc
idivb
or
inc
idiv
repz
fdivrs
pop
and
les
loopne
mov
mov
or
repz
jnp
add
ficoml
ss
push
data16
dec
cld
frstor
sbb
jno
push
xchg
dec
xchg
cmovg
cltd
imul
xor
dec
mov
enter
mov
in
dec
cld
or
xchg
cmpsl
mov
mov
cmc
lcall
mov
push
fstpt
cmc
mov
adc
scas
pop
stc
jbe
dec
shll
mov
add
add
sahf
aam
in
cmp
ljmp
addb
repnz
lods
dec
aaa
mov
cmp
dec
call
adc
cs
inc
xchg
xor
test
inc
test
push
adc
shrl
fcomps
cli
ljmp
sub
stc
cmp
cli
xor
scas
pop
pop
push
int
mov
mov
jnp
pop
push
jmp
iret
inc
push
cmp
sub
cwtl
pop
div
repz
addr16
push
or
jle
in
xor
xor
xor
cltd
repnz
mov
stos
sahf
xchg
nop
cmpsb
stos
inc
sub
popl
push
mov
mov
je
mov
cmp
lret
imull
add
adc
imul
shll
push
and
cli
lret
out
push
addl
stos
sub
divl
inc
xchg
sahf
pop
lods
enter
loop
add
or
jle
fisubs
sub
mov
jne
push
in
adc
mov
out
ss
sub
cmpsb
mov
push
ljmp
push
gs
xlat
push
pop
sub
jmp
cmp
aam
cltd
sub
popa
mov
test
jp
mov
int3
add
fidivrs
mov
sti
or
cmp
push
in
les
aam
int3
das
test
rorl
adc
pop
cwtl
stos
into
ret
nop
into
adc
stc
or
popf
call
pop
push
jae
mov
xchg
punpckldq
adc
test
pop
mov
adc
out
jp
cmp
xor
shrb
loopne
test
cmpsb
inc
dec
rorl
mov
scas
push
push
fldenv
mov
sub
out
sub
xor
je
lods
repnz
rcr
dec
hlt
pusha
daa
add
imul
shr
jle
mov
rorb
ret
cmpsb
xorb
jl
sbb
pop
xchg
stos
cmc
sbb
out
repz
outsl
inc
shrl
mov
adc
out
push
orb
mov
movsb
ljmp
cmp
add
das
dec
fisubs
xor
cmpsb
push
inc
sbbl
aam
xor
inc
jecxz
or
xchg
popa
mov
lods
ret
jns
in
sub
cs
xor
push
test
fwait
xor
mov
push
mov
pop
arpl
adc
cmp
dec
ss
movsl
std
mov
mov
sbb
push
outsl
mov
int
mov
and
add
pop
idivb
xchg
rcll
xchg
lret
xchg
jno
and
sbb
in
sbb
or
ss
and
popf
outsb
or
int3
ja
lcall
sub
xchg
push
leave
mov
pop
push
cli
jnp
imul
adc
xchg
xor
clc
push
aas
ss
add
mov
call
test
mov
cmpsb
imul
das
jb
addb
bound
in
mov
testb
push
stos
orl
mov
lret
int
ja
dec
jno
loopne
xchg
test
push
mov
xor
fisubs
adc
loop
lcall
loopne
in
jne
sbb
cs
inc
outsl
loop
jo
sbb
jns
decl
or
rolb
cmp
add
mov
push
pop
push
jno
sbb
bound
xor
ja
xor
test
sub
xchg
sbb
adc
push
jo
or
scas
pusha
dec
or
mov
pusha
imull
sub
imul
dec
jmp
cmp
lods
out
push
cli
cli
stos
test
inc
shlb
andl
ret
push
push
das
cmp
sub
inc
xrelease
add
loop
and
xchg
lret
push
lds
into
push
testl
mov
std
xlat
ds
out
jno
cld
je
orb
in
jno
fwait
lret
add
into
dec
stc
dec
sub
pop
pop
push
xchg
mov
mov
out
cmp
mov
pop
sub
je
fcomps
cmp
lds
push
stos
shll
adc
daa
test
aam
lea
int
xlat
lods
std
jle
and
push
xchg
arpl
add
rcll
movsb
and
pop
xor
dec
jno
faddp
jbe
testl
sbbl
inc
jg
dec
aad
pop
sahf
inc
lds
mov
lcall
xchg
adc
aaa
xor
mov
add
mov
daa
or
sub
mov
imul
inc
aam
bound
jle
out
cmpsl
mov
stos
jnp
xor
jge
cli
scas
cmpsl
in
dec
mov
loop
xchg
jmp
cmp
mov
mov
int3
mov
lahf
pop
adc
or
imulb
test
xor
xlat
mov
or
into
insb
mov
gs
mov
ljmp
mov
ljmp
inc
shr
push
lods
aad
jno
mov
mov
xor
mov
xor
fwait
cmp
es
sbb
iret
mov
int3
fwait
repz
inc
adc
orb
pop
push
adc
icebp
xor
and
sub
inc
mov
dec
rcl
rol
mov
imul
jne
dec
dec
sbb
xchg
cmpb
xchg
popa
add
and
adc
pop
sbb
mov
lea
mov
push
xchg
and
leave
mov
in
or
outsb
or
punpcklbw
and
or
rorb
jle
mov
dec
pop
test
aas
mov
mov
out
out
add
mov
dec
jecxz
push
sbb
enter
test
adc
xchg
into
addr16
and
es
dec
pop
add
sahf
fcoms
jbe
int3
sub
stos
iret
ja
or
insb
mov
rcrl
and
sarl
in
hlt
adc
movsl
enter
lcall
loop
les
add
mov
lock
inc
leave
push
xchg
pushf
jl
xchg
ds
cmp
xor
jle
testb
and
ret
cltd
dec
push
mov
pop
lods
hlt
sbb
pop
cmp
cmp
loopne
shll
and
pop
flds
ret
mov
sbb
xchg
jnp
lcall
sti
jb
ja
xchg
mov
and
inc
xchg
xchg
cmc
aam
cli
test
imul
dec
and
int3
js
xchg
cmpsl
pop
adc
mov
leave
push
jge
jno
dec
lcall
testl
inc
cld
pusha
pop
icebp
mov
push
pushf
jl
jns
popa
sbb
pop
nop
add
mov
fisttps
mov
out
js
es
add
stc
jp
mov
sbb
push
jg
jns,pn
mov
jle
cmp
push
jnp
outsl
loope
pop
pop
mov
mov
insl
mov
cld
cmp
in
adc
daa
movsl
jge
mov
mov
push
in
mov
aam
popa
loopne
pop
sub
leave
mov
push
or
je
daa
lret
push
imul
stos
mov
xor
fldl2e
pushf
push
cwtl
sarb
jg
mov
sbb
fldt
mov
cmpsb
pop
pop
jb
test
stc
push
xchg
xchg
inc
iret
push
lea
and
nop
jl
lahf
mov
out
mov
xor
jg
push
in
and
fldpi
fisubrs
lods
pop
lret
mov
jecxz
adc
push
shll
mov
iret
pop
jae
out
jle
add
repnz
cmp
jae
adc
fwait
mov
fs
dec
lcall
mov
add
cs
dec
fidivs
shll
mov
mov
adc
sub
or
and
jne
test
mov
inc
sbb
mov
out
adc
lahf
mov
pop
lret
je
cs
lods
mov
and
outsl
sub
adc
js
xchg
fmul
les
int
mov
jl
dec
iret
push
aad
mov
mov
push
gs
xchg
ss
inc
dec
inc
fwait
push
sahf
bound
mov
or
cltd
push
insb
sarb
jg
mov
sbb
adc
lea
out
fidivl
ss
mov
mov
test
leave
and
aad
lods
push
mov
sub
mov
pop
inc
ds
mov
test
loope
sub
cmp
lods
test
mov
ret
xchg
rcl
dec
jnp
in
cmp
dec
push
ljmp
movl
addl
test
sub
fcmovbe
cmp
jg
sbb
sub
sub
test
sarl
push
int3
xor
jg,pn
leave
xchg
lahf
cmpxchg
shrb
loopne
lock
add
xor
pusha
into
jo
subb
mov
outsb
sarb
dec
lock
add
xor
pusha
into
jo
subb
mov
outsb
sarl
dec
lock
add
xor
popa
into
jo
subb
mov
outsb
sar
pusha
into
jo
call
adc
mov
jmp
cwtl
xor
inc
out
mull
pop
popa
rcll
fisubl
pop
pushf
push
ret
ja
add
aaa
mov
out
mull
adc
pop
pop
rclb
dec
bnd
pop
jae
daa
mov
mov
popa
jb
bound
xor
inc
sarb
loope
adcb
daa
dec
aad
faddl
and
or
xor
pop
mov
xor
cmp
lcall
push
std
lret
add
out
adc
mov
xor
ret
cmpsb
stos
cmp
adcb
repz
push
dec
out
ja
nop
adc
ja
test
mov
xchg
sbb
pop
mov
add
sub
mov
mov
enter
sub
sbb
aaa
out
js
adc
jecxz
incl
xchg
je
hlt
rcll
ja
inc
pop
inc
xlat
xlat
iret
sbb
and
adc
and
dec
addr16
or
adcb
mov
push
xlat
inc
out
fwait
bound
xor
and
repnz
daa
mov
lret
mov
mov
jmp
je
jbe
stos
push
ret
aaa
xchg
push
xchg
outsb
sarl
push
lret
jo
aaa
pop
daa
mov
jle
dec
lret
pop
les
cltd
push
mov
je
jb
push
in
int
push
in
xchg
add
add
rclb
addr16
pop
xchg
pop
andb
aaa
mov
out
mull
adc
and
push
ret
ja
pop
xchg
pop
andb
aaa
mov
dec
lahf
test
lret
data16
in
mov
out
inc
mov
xchg
or
scas
sub
imul
rcpps
adc
cld
jbe
es
lret
adc
loop
or
push
or
pusha
jo
dec
cmp
aaa
dec
pop
loopne
shll
and
in
enter
sbb
dec
pop
xorl
mov
xchg
pop
testb
pop
xor
jge
test
sbb
in
add
decb
loopne
push
movsl
or
mov
pop
mulb
bound
mov
mov
mov
jp
adc
ret
pcmpeqd
push
test
test
or
cmpsb
push
rclb
pop
ror
sub
cmp
lods
cmp
mov
lea
enter
cltd
inc
jp
jb
mov
mov
push
jno
adc
push
test
dec
pop
pop
jge
or
fcomi
fwait
push
push
adc
sbb
fcompl
sbb
pushf
mov
das
push
gs
xor
and
xlat
push
sbb
and
mov
mov
ljmp
mov
imul
pusha
mov
hlt
jmp
test
pop
sub
rcll
or
xlat
cwtl
in
dec
adcl
jp
jmp
lods
mov
xchg
test
xor
push
sbb
into
ja
and
mov
dec
mov
hlt
sbb
or
loope
push
pop
sub
mull
andb
jns
cwtl
dec
pop
ljmp
je
in
push
in
mov
and
push
xor
sarl
popl
cmp
lds
mov
xchg
cwtl
cmc
jne
fldenv
stc
mov
sub
fiadds
xor
dec
push
or
stos
xlat
add
js
xor
repz
in
fs
scas
fnstcw
clc
sub
xchg
mov
out
aas
ljmp
push
int
sahf
jb
iret
sub
adc
lahf
mov
and
push
xchg
int
outsb
mov
sbb
fistpll
pop
js
push
jecxz
fs
into
lahf
mov
outsl
dec
insb
es
or
andb
mov
pop
inc
loopne
rcrl
dec
sbb
jb
or
dec
cwtl
psllw
inc
push
hlt
aam
pop
dec
mov
pop
sub
negl
lds
fcomps
pop
dec
lods
notb
jne
jmp
mov
mov
jbe
jns
mov
loop
test
pop
loope
adc
cs
push
rcrl
sbb
push
cwtl
mov
jb
mov
imulb
push
adcb
mov
cmp
pop
pusha
sbb
sbb
mov
xchg
xchg
data16
lds
mov
rorl
jecxz
popf
nop
push
outsl
inc
shlb
jno
inc
insb
dec
clc
int
cmpsb
out
mov
jb
cmpb
lret
insl
push
mov
dec
inc
xchg
mov
insb
dec
lret
sti
mov
and
dec
negb
fildll
sbb
mov
pop
out
icebp
push
leave
mov
in
cmc
xchg
jnp
sbb
mov
arpl
das
sarb
sbb
push
cmpsl
adc
popa
inc
test
adc
in
repnz
pop
movsb
mov
out
mov
mov
in
in
mov
pop
adc
icebp
inc
loop
fnstsw
push
cld
xor
stos
xchg
mov
je
je
sarb
mov
xor
push
test
addr16
add
fimuls
mov
dec
cmpb
pusha
mov
movsb
in
mov
mov
pop
out
cmpsb
outsb
sub
insb
repz
or
lods
sbbb
push
jne
movsl
rclb
pop
test
ds
orl
in
xchg
xchg
jo
inc
xor
inc
xchg
lods
mov
enter
xor
fnstsw
fcmovb
loop
or
mov
test
jns
enter
mov
test
test
inc
sub
or
push
or
pop
sbb
movsl
mov
mov
aaa
ret
xor
jae
fisubrl
sub
shll
sub
sbb
pop
ds
repnz
mov
add
sbb
push
ret
pusha
aam
mov
insb
pop
cwtl
enter
jg
mov
movd
scas
xchg
fnstsw
aas
mov
or
mov
mov
cli
xor
mov
jmp
sub
test
jge
scas
push
mov
pop
mov
je
lret
movsb
rcrl
ficoml
pop
rol
pop
mov
push
lcall
sbb
sbb
xchg
call
push
push
mov
pusha
pop
rcll
mov
addr16
stc
or
popa
xor
cmp
gs
repz
arpl
and
inc
hlt
xchg
out
shrl
in
push
jle
das
xlat
arpl
lds
gs
xchg
xor
insl
or
inc
adc
daa
adc
xor
inc
shll
loopne
pushf
outsb
repnz
aas
jge
jecxz
repz
inc
fisubrl
ficomps
or
dec
in
mov
ds
aam
xchg
jg
frstor
pop
fiadds
pop
lret
pushf
push
das
ret
jecxz
outsl
dec
push
push
inc
jecxz
cmp
addr16
xchg
pop
xor
push
dec
std
sub
dec
or
jbe
cmpsb
mov
dec
adc
aam
and
dec
fbld
aaa
add
pop
xchg
test
or
adc
push
repnz
sbbb
shr
cmp
push
loope
loopne
ja
clc
loope
popa
ja
push
movsl
cltd
add
and
pop
pop
cltd
ds
sbb
cltd
cmc
fld
push
call
bound
push
lret
ja
setns
je
test
pop
adc
xor
jbe
std
mov
insl
adc
inc
mov
adc
sub
cmpsb
in
int
cmp
jecxz
outsl
test
or
mov
jo
jge
nop
out
push
rorl
push
cwtl
or
inc
adc
pop
push
in
clc
cmp
enter
xchg
test
mov
outsb
and
push
dec
rorb
jle
jno
add
sbb
pop
jge
and
dec
mov
nop
sub
push
insb
popa
dec
jecxz
xchg
lahf
ficoml
adc
push
sarb
pop
inc
mov
jb
xchg
fldenv
xor
mov
out
dec
jae
lahf
ret
sbb
mov
jle
sub
gs
loop
mov
xlat
js
xchg
mov
insb
dec
sub
out
add
cmp
in
repz
lret
dec
xlat
cmp
jnp
mov
pop
repz
push
add
jae
out
adc
sarl
movsb
repz
mov
das
inc
cmp
xor
and
sub
mov
jl
stc
fists
fdivr
idivl
sub
rolb
sub
jl
push
movsb
pop
std
pop
and
adc
stos
jp
idivb
jp
outsl
push
mov
test
jnp
es
push
xor
movsl
icebp
bt
mov
jb
fcoml
sub
or
ja
js
pop
clc
adc
cli
sbb
imul
cmp
fisubrs
cli
push
xlat
inc
cmc
test
icebp
xor
xor
mulb
enter
divb
out
sbb
in
jp
imull
pop
inc
xchg
sbb
add
lock
xchg
lret
or
mov
cmp
jecxz
jg
push
hlt
decl
mov
dec
pop
into
or
cmp
add
mov
xchg
bound
jne
sbb
jp
pop
adc
mov
hlt
xchg
push
add
adcb
int3
xchg
scas
in
mov
push
lret
ret
sahf
jno
jl
and
test
or
inc
jo
push
mov
add
cmp
pop
hlt
movsb
fwait
push
or
insl
jecxz
sub
movsl
aas
shld
mov
dec
adc
sub
mov
stc
inc
mov
inc
outsl
cmp
cs
incl
repnz
push
test
fimull
adcb
fs
pop
mov
cmpsb
and
ljmp
sarl
and
mov
adc
pop
adc
jnp
mov
xchg
inc
sub
rcrb
push
xchg
sub
out
and
mov
scas
inc
pop
out
xor
and
repz
xor
jmp
mov
insb
pop
pop
mov
or
mov
cltd
movsb
or
cmpsb
addr16
xorl
fists
xchg
neg
daa
shlb
cmp
popl
je
mov
mov
lahf
mov
rcr
jne
xchg
inc
iret
adcl
ret
lahf
sahf
pop
or
push
nop
push
jmp
pusha
adc
scas
inc
repnz
sbb
cmp
and
shlb
and
ss
pop
lea
or
insb
dec
sbb
lock
cmp
mov
outsb
lret
mov
and
jecxz
fwait
ja
mov
cmc
aas
cli
cmc
fs
mov
pop
dec
dec
pop
pushl
shll
jmp
out
icebp
in
xchg
lahf
notb
pop
push
pop
mov
mov
insb
xchg
outsb
scas
test
pusha
jecxz
dec
add
pop
pop
in
cmp
fadds
lcall
cwtl
lods
aad
sahf
dec
mov
lods
aad
sbb
cs
arpl
cltd
lods
decb
fnsetpm(287
fmul
mov
jge
inc
mov
jbe
inc
pop
or
insl
pop
popf
fdivs
or
leave
hlt
clc
add
leave
lods
jge
int3
push
sti
addr16
mov
psubd
movsb
jmp
cmp
scas
lcall
loop
cmp
xchg
lock
lcall
rcl
pop
add
ret
fmul
cmp
mov
push
pop
push
xchg
mov
cmp
out
test
out
cmp
stos
fimuls
xchg
repz
push
jns
adc
sbb
mov
stos
scas
jge
cltd
arpl
mov
or
inc
loope
lret
push
mov
mov
push
pop
out
cmp
xor
mov
icebp
pop
xor
inc
adc
ret
cltd
fisttps
jecxz
mov
pop
outsl
decb
popf
jp
inc
xchg
shrd
aaa
pop
pop
pop
pop
data16
mov
pop
mov
mov
rcrl
ss
jecxz
ss
jecxz
cltd
lods
fwait
sbb
sbb
xlat
jmp
sub
jnp
mov
jecxz
pop
pop
popa
mov
sbbb
stc
cltd
gs
mov
outsb
mov
xchg
scas
pop
xchg
mov
jmp
push
out
in
mov
icebp
stc
lcall
jbe
in
cmpsb
or
dec
jg
mov
loopne
push
stos
inc
mov
repz
loope
sub
xchg
and
mov
in
mov
xor
cli
ret
push
dec
xchg
cmpb
xlat
in
mov
aam
bound
and
rcrb
fdivrs
popf
pop
inc
jmp
loop
outsb
in
push
xchg
js
mov
push
dec
xor
push
pop
pop
jg
fwait
ljmp
lea
cmp
cmp
sbb
cld
mov
stos
adc
outsl
jnp
lods
sbb
pop
shrl
adc
pusha
push
xor
sub
and
pop
mov
add
out
and
mov
or
addb
dec
cs
fabs
pop
dec
aad
dec
out
dec
insb
mov
sbb
test
mov
mov
add
adc
jecxz
or
inc
jb
sub
ja
mov
dec
fwait
out
mov
jg
jae
cmp
out
insb
inc
sbb
movsl
xchg
inc
loop
mov
mov
ljmp
sahf
lock
inc
in
and
xor
scas
enter
es
pop
outsb
and
mov
push
nop
jb
icebp
idiv
jle
and
ljmp
mov
push
inc
mov
shrb
cltd
add
adc
bound
into
test
imul
loopne
je
call
add
sbb
jb
mov
push
hlt
push
cmpsb
push
mov
pop
xchg
dec
push
or
iret
inc
and
add
jmp
sbb
sahf
notb
pop
dec
lock
mov
push
xchg
or
rcr
xchg
dec
ja
pop
insb
int
mov
popa
mov
mov
icebp
sub
xor
lret
or
into
dec
lahf
mov
stc
mov
lock
fildll
lods
repz
mov
andb
pop
push
push
test
gs
inc
add
ror
push
arpl
mov
je
sbb
add
pop
jmp
dec
xor
sarl
cmc
nop
mov
pop
ds
iret
jg
mov
xchg
push
pop
push
jne
sbb
xlat
pop
and
enter
lret
and
sub
inc
sub
jo
cltd
cmpsl
test
push
mov
sar
and
lcall
xorb
jbe
xchg
dec
insl
cmp
cld
cmpsl
iret
add
lret
mov
jne
adc
mov
in
xchg
pop
sti
xor
inc
sbb
cmc
push
fdivs
xchg
dec
push
dec
sbb
loopne
inc
pop
mov
dec
test
stos
rcrl
std
jb
push
cld
mov
lea
adc
mov
pop
mov
or
int
mov
ds
js
and
or
push
pop
jle
adcb
dec
or
pushf
xchg
mov
dec
repnz
and
push
xorl
out
adc
mov
out
jecxz
sarl
cmp
xchg
insb
call
test
sub
int
mov
les
cmp
imul
mov
mov
jnp
stos
add
popa
stos
push
leave
sub
out
and
lods
lret
mov
adc
call
cmp
sub
or
test
cmpl
ja
shll
rcrl
add
jmp
in
push
ds
jmp
daa
lahf
test
inc
pop
fs
or
lds
imull
lret
add
stc
sbb
add
add
inc
jl
push
loop
mov
stos
fcmovne
std
sbb
dec
decl
push
and
mov
jo
inc
cmc
push
and
xor
xor
rolb
sub
cmpsl
or
fwait
inc
aad
mov
cmpsl
mov
pushf
iret
test
aas
popf
aaa
in
imul
adc
xchg
stc
pusha
and
mov
add
sub
push
loope
scas
imul
aam
mov
aam
dec
xchg
cmp
shlb
and
jnp
xor
mov
mov
mov
ffree
or
pop
cltd
lahf
adc
xor
testb
mov
addl
or
cmc
dec
mov
or
insl
es
pop
int
shlb
xchg
je
ret
cwtl
or
nop
sti
scas
cmp
push
pop
in
push
idivl
outsl
xlat
scas
ud2
and
jns
pop
adc
xchg
cmp
orl
cmpsl
mov
test
xchg
mov
pop
js
dec
shlb
lret
repz
push
fstl
mov
bound
push
push
mov
xor
add
xchg
sbb
jns
cld
dec
jnp
stos
mov
cli
ja
repnz
cli
arpl
jo
pop
fisubrs
in
push
out
sbb
call
loope
cltd
sub
sbbb
mov
inc
pop
xor
xchg
pop
sub
mov
or
dec
xor
inc
lret
mov
orb
and
pop
adc
rol
insl
pop
mov
pushf
add
pop
inc
xor
cmp
or
jns
loop
call
cmp
das
mov
add
aaa
ljmp
in
fcoms
cwtl
push
in
mov
jl
and
mov
aad
mov
xchg
insl
movsb
mov
insb
inc
dec
dec
cmc
outsl
sarl
mov
push
cmpl
mov
sbb
insb
cmpsl
aaa
or
lret
cwtl
bound
stc
pop
mov
push
movsl
lock
sub
cltd
sbb
fldenv
lock
sub
or
adc
mov
inc
xchg
shrl
ss
lds
mov
lret
popa
lods
jb
mov
leave
or
adc
inc
mov
mov
xchg
test
push
push
jo
fs
stos
pop
lret
xchg
popf
aaa
add
das
adcb
daa
movl
xchg
stos
and
mov
jg
addb
sbb
inc
or
test
push
xchg
xchg
jne
imul
inc
push
and
dec
aas
in
adc
jnp
dec
push
mov
cli
jne
sub
out
mov
stos
cmc
js
adc
leave
and
scas
or
mov
xchg
inc
aam
xor
and
pop
pop
adc
roll
and
leave
jge
sbb
inc
mov
dec
jg
push
mov
out
xchg
stos
sarb
mov
jl
loopne
sbb
mov
push
jge
incl
stc
xchg
mov
rol
xor
xchg
dec
je
leave
xchg
xor
jle
add
and
sub
jge
mov
jp
cmp
xchg
adc
ret
ds
icebp
dec
out
sub
mov
jne
lea
movsb
icebp
loope
outsb
stc
movl
adc
and
das
pop
jge
xchg
jbe
add
fwait
adc
and
mov
mov
fwait
mov
cmpsl
xchg
mov
and
aas
mov
mov
sub
push
js
fidivl
sub
sbb
push
add
jp
mov
adc
mov
div
fistps
popf
or
mov
lods
jns
inc
in
aad
stos
push
lods
icebp
jnp
mov
stc
cmp
fwait
mov
or
push
lea
mov
mov
xor
push
add
fsubr
mov
sbb
xchg
pop
mov
cmp
cmc
fstpl
inc
popa
adc
mov
jmp
jns
jnp
neg
rcrl
and
popf
rorb
push
aam
mov
shll
in
jb
das
stc
and
out
adc
addr16
inc
cmpsl
aad
jb
sub
popf
dec
push
imul
or
xchg
push
shrl
push
jmp
sti
std
enter
cmp
loopne
jbe
xchg
insl
mov
xchg
subb
outsb
pop
lods
xor
stc
xor
mov
dec
xlat
inc
mov
cld
repnz
arpl
xchg
sti
add
mov
jmp
dec
repz
jmp
mov
bound
popa
xchg
es
insl
sub
int3
aam
xor
shlb
push
and
ljmp
xor
aam
rcr
addl
mov
pop
pop
enter
ljmp
jne
std
and
pop
pushf
and
mov
mov
ss
inc
mov
sub
jb
cmp
iret
lahf
dec
test
cmc
or
mov
adc
lcall
lods
ss
xchg
iret
cwtl
adc
inc
dec
sub
sbb
int3
in
fcomps
std
push
push
cmc
and
sbb
fcoms
and
push
xor
loop
pop
pusha
cmpsb
mov
mov
mov
pop
lock
jae
shrl
push
pmullw
lea
jp
jg
pop
lods
es
cs
cli
std
mov
icebp
scas
fucom
out
push
repz
testl
xchg
fisubrl
pop
sbb
ljmp
cmp
stc
sti
mov
sub
ljmp
jbe
mov
mov
fsub
mov
lods
sbb
cmp
rcrb
add
push
sub
jne
sub
inc
push
lods
jp
std
jo
cmp
mov
pop
movsl
cmp
in
sbb
pushf
je
rorl
sub
pop
sbb
dec
ljmp
orb
or
inc
aaa
stos
sub
pop
mov
int
and
mov
cmp
mov
xchg
cmp
dec
mov
pop
dec
push
sar
and
imul
push
test
mov
loopne
stc
pop
mov
sub
loopne
push
mov
les
or
jmp
subl
mov
call
lcall
xor
mov
lret
imul
test
stc
mov
and
cs
cli
xor
mov
xchg
test
pop
dec
std
mov
pop
add
data16
pushf
into
pusha
inc
negb
mov
pop
push
jmp
iret
mov
cmp
pop
push
mov
jno
xchg
mov
mov
outsl
lock
mov
jb
shl
add
mov
xor
stos
sub
xchg
arpl
mov
jmp
or
xchg
mov
cmpsl
xchg
add
repnz
add
adc
sbb
pop
xchg
cmp
daa
pop
mov
xor
lret
cmp
adc
leave
inc
or
cld
das
add
mov
or
lret
push
mov
jno
xchg
test
je
scas
mov
mull
outsl
ret
outsl
mov
imul
adc
and
push
ret
ja
pop
xchg
pop
andb
aaa
mov
out
mull
adc
and
push
ret
ja
pop
xchg
pop
andb
aaa
mov
divl
bound
xor
ret
jae
pop
xchg
push
andb
pop
mov
outsl
jb
bound
xor
and
test
int
ja
jo
lahf
jge
dec
enter
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cwtl
adc
and
xor
gs
lcall
cwtl
sub
aam
hlt
js
mov
adc
and
xor
inc
fcoms
clc
je
xchg
xchg
sub
add
in
hlt
xchg
sbb
mov
dec
lock
outsb
adc
scas
ja
inc
mov
test
mov
loope
idivl
push
into
mov
sub
aas
mov
pavgw
mov
das
pop
call
or
push
shrb
stos
insl
out
insl
cld
lea
jl
mov
mov
inc
dec
subl
fs
pop
jnp
push
or
pop
push
arpl
cmp
adc
mov
dec
aam
aam
sbb
mov
popa
and
add
fsts
aam
imul
pop
sub
outsb
js
fdivrs
aam
shrb
or
xchg
sub
enter
pop
pop
xchg
in
or
js
out
and
pushl
jle
mov
pop
lock
testl
or
inc
add
add
inc
enter
loope
adc
lods
push
faddl
jb
js
in
std
adc
and
mov
sbb
in
je
pop
icebp
pop
fisttpl
cmp
cltd
out
stc
adc
push
enter
fsubs
add
cmc
sub
jns
dec
mov
mov
in
inc
hlt
jno
inc
rolb
sub
push
call
test
xchg
sub
aam
in
hlt
mov
adc
and
xor
inc
fcoms
clc
je
test
xchg
sub
aam
in
hlt
mov
xchg
pop
add
mov
pushf
sub
pop
inc
cs
std
and
push
repz
sub
cltd
lods
xchg
mov
movsb
xchg
pop
hlt
mov
je
cltd
jmp
cmp
or
data16
lods
aam
sbb
lods
scas
mov
ljmp
call
pop
or
mov
dec
lcall
dec
sti
xor
and
or
fwait
in
incl
xor
xor
push
nopl
stos
add
inc
cmp
xor
paddw
gs
fsubl
ljmp
scas
rolb
jne
arpl
fdivrl
pusha
inc
mov
cmpsl
pop
pop
clc
icebp
and
pop
mov
adc
nop
rorl
dec
push
mov
mov
mov
mov
xor
addr16
popa
loopne
daa
adc
loope
call
lock
je
aad
out
add
cmp
mov
data16
jne
inc
jbe
scas
xchg
int3
ss
dec
adc
sbb
out
outsb
and
dec
out
or
mov
les
mov
les
addr16
into
jle
xor
adc
imul
xor
es
jae
dec
dec
mov
dec
jmp
sbb
push
movsb
aaa
dec
leave
jg
mov
cmp
out
stos
push
sahf
dec
jo
popa
fstps
inc
je
or
es
decb
xchg
std
test
jl
outsl
jmp
push
xlat
inc
inc
adc
xor
push
insb
loop
mov
push
adc
enter
movsb
dec
lods
or
sti
adc
jmp
shr
rclb
imul
movsb
insl
es
inc
fimull
add
sti
int3
cli
stc
test
mov
sub
divb
pop
stos
mov
addr16
pop
inc
and
mov
mov
xchg
repz
mov
push
inc
jle
mov
cmp
mov
ret
sbb
hlt
int3
dec
add
insl
xorb
scas
stos
outsl
iret
push
cmp
push
test
lock
repz
in
lahf
dec
aad
mov
pop
inc
pop
jo
into
jbe
xor
stos
cmp
xchg
sbb
cld
std
repz
mov
aas
insl
jmp
xchg
pop
rcrl
mov
shrb
push
push
or
lret
sub
jnp
pop
mov
bound
lcall
jmp
adc
sbb
xchg
test
push
addr16
mov
fstpt
sbb
enter
dec
xor
popf
out
mov
test
aad
jmp
arpl
mov
xor
jg
cmc
movsl
gs
xor
lcall
shlb
insl
push
xchg
push
mov
std
jae
jecxz
je
movsb
lods
xor
test
arpl
xor
xchg
and
test
pushf
cmp
leave
adc
inc
ret
sub
mov
ficomps
add
xor
inc
int
adc
daa
add
xor
aaa
or
je
xchg
aas
in
xorl
jmp
inc
dec
das
add
arpl
mov
movsb
cmc
mov
movl
and
jns
lret
scas
lret
outsl
mov
cmp
mov
mov
jle
sub
aam
jge
mov
icebp
dec
sahf
jo
pop
push
lea
push
pop
cmovle
dec
lret
es
fbld
gs
and
pop
ja
sar
les
jb
and
pop
adc
xchg
pop
icebp
dec
mov
sbb
popf
jne
sahf
daa
hlt
push
imul
lds
add
out
popa
mov
add
inc
fisubrl
stos
popa
cli
adc
out
test
cmp
gs
in
daa
test
ret
xchg
ljmp
jge
shll
push
dec
sub
jns
sub
cmpb
sub
pushf
pop
in
mov
push
or
lcall
imul
mov
push
ljmp
cli
stc
into
mov
add
adc
call
outsl
adc
adc
shlb
mov
mov
mov
and
push
inc
sub
loop
pop
jg
stos
xchg
xor
sti
mov
or
xchg
cmp
cld
or
pop
push
daa
es
sarl
lds
push
rcrl
mov
leave
mov
mov
shll
shrl
sub
jmp
xor
adc
xor
lock
or
insl
testl
loop
adc
push
mov
mov
lret
ss
adc
insl
ret
jb
lds
ss
rorb
jle
fs
xor
mov
ljmp
mov
ja
push
lods
and
rcrl
and
mov
call
cld
jae
ss
sub
clc
lret
xor
int
pop
cli
mov
xchg
dec
test
dec
dec
daa
cmpsl
inc
inc
push
fisubs
xor
inc
iret
dec
sub
xchg
call
das
mov
sbb
data16
int
and
mov
add
push
mov
int3
push
adc
mov
push
sbb
in
xor
popf
jg
jns
inc
sub
aam
cmpsb
add
or
xchg
mov
insb
ljmp
lea
ljmp
cmc
dec
and
sarl
or
cmc
inc
sti
xor
and
dec
adc
mov
and
inc
push
fistpl
push
call
fstps
aas
addb
mov
xorb
roll
sub
hlt
pusha
mov
push
xor
ror
and
ds
test
xchg
in
cmpsl
sbb
iret
or
xchg
lret
cmp
leave
add
outsl
int3
adc
inc
sti
shll
das
xchg
rclb
jg
push
add
enter
pop
int
pusha
pop
inc
addr16
adc
std
insl
or
sub
adc
cmp
jge
loopne
pop
scas
xor
sahf
fs
jnp
sahf
or
cmp
shl
lods
mov
cltd
test
xchg
inc
movl
jb
inc
mov
and
hlt
mov
push
es
adc
sbb
adc
inc
imul
sbb
insl
lods
fstps
xor
dec
mov
dec
mov
and
mov
rcr
fldl
int3
cmpl
inc
inc
enter
notb
or
jl
add
cmp
mov
lret
mov
jo,pn
mov
adc
imul
mov
cmp
imul
adc
lret
inc
xlat
mov
adc
or
rolb
das
push
add
dec
xor
stos
arpl
test
jns
mov
data16
cmp
andl
nop
fidivrl
jo
call
jecxz
xlat
sub
push
loop
out
adc
and
jae
xchg
sbb
add
push
out
mov
iret
push
pop
mov
lea
sbb
sub
incl
test
clc
jo
inc
sub
das
jbe
cmp
cld
in
lea
ficoml
pop
in
push
jb
xor
lds
arpl
xchg
cmp
mov
xorl
inc
xchg
icebp
push
sub
loop
fwait
nop
fsubr
js
hlt
lcall
int3
lods
sub
test
push
push
inc
into
js
lds
mov
aam
out
insb
nop
outsb
sti
scas
std
and
sub
sub
xchg
jnp
icebp
cmp
mov
add
adc
dec
cmpsb
nop
jg
push
rorl
mov
jno
fdivl
cmp
mov
jg
and
das
daa
in
mov
gs
mov
pop
lods
fimuls
jae
xor
shlb
fwait
and
in
mov
clc
bound
aam
pop
cmpl
int
js
add
pop
dec
and
push
jle
mov
push
fmull
add
aad
mov
xor
enter
lds
fistpl
orl
loop
push
clc
inc
push
inc
and
push
lcall
jle
fdiv
or
sets
push
xchg
mov
sub
jmp
mov
fucomi
jnp
pop
xor
aaa
popa
fs
pushf
push
inc
pushf
cmp
xchg
sub
in
enter
fbld
out
mov
push
or
daa
jmp
popa
ficoms
ficoms
mov
iret
add
or
mov
je
sbb
fimuls
ret
daa
and
jmp
mov
sub
fdivrs
std
add
mov
mov
cmp
jle
push
jge
mov
jmp
lret
pop
popa
push
mov
inc
inc
xor
shll
xor
xchg
adc
xor
xchg
fwait
sti
call
pop
outsl
in
das
jbe
cmc
pop
xlat
es
adc
inc
add
jb
in
cmp
cmc
pop
mov
imul
movsl
or
mov
lods
mov
movsb
lock
sub
sbb
into
mov
loopne
movsl
and
xor
dec
lods
bound
and
subb
push
mov
jbe
pop
fs
xchg
lock
mov
cmc
jmp
xchg
sbb
xor
cmp
sbb
or
jmp
icebp
or
and
adc
outsl
movsb
sub
mov
je
ss
mov
or
sti
mov
jno
sub
int3
insl
cmc
bound
push
mov
ss
loop
push
sbb
adc
mov
add
aam
ret
xor
lea
fcompl
sbb
lret
enter
fstps
push
das
aad
pop
es
xchg
pop
out
add
addl
adc
mov
lods
push
clc
es
xor
pop
pop
xchg
inc
jns
sbb
int3
loopne
iret
loopne
or
xor
or
in
mov
enter
jmp
cmp
mov
dec
test
sbb
mov
and
loop
andl
scas
cs
fcompl
aad
out
mov
fwait
or
or
mov
les
test
jp
out
pop
jl
dec
dec
lahf
or
cs
fists
hlt
add
sub
cmp
xchg
repz
dec
cmpsb
aad
pop
out
sti
and
cmc
ss
fidivrs
xchg
in
push
pusha
inc
sbb
lahf
push
pop
cld
daa
enter
out
scas
outsb
stos
out
jne
int
fdivr
pop
push
jge
jae
fwait
in
inc
xchg
fidivl
lock
rcrl
push
cmp
ficomps
add
push
xor
xchg
popf
mov
ficoms
mov
and
scas
push
aad
mov
iret
lock
fistpll
mov
or
hlt
adc
push
xchg
xor
gs
xor
je
fistpll
scas
jge
jmp
leave
and
mov
insl
rcrl
jl
lcall
rcrl
cli
in
daa
out
push
icebp
pushf
mov
xchg
out
mov
std
ret
bound
lock
add
pop
mov
sbb
lods
xor
mov
jae
mov
cmpl
sbb
popa
rcll
dec
aam
fwait
mov
xchg
push
or
cmp
push
xor
xor
stos
lods
ss
xchg
add
mov
icebp
call
xchg
in
adc
ss
cmp
xchg
jmp
and
bound
mov
movsl
rcl
es
xor
mov
hlt
clc
mov
push
push
shrb
cmp
jbe
shll
nop
dec
jae
mov
mov
sub
lret
dec
xor
cmpsl
dec
xor
js
dec
jo
xchg
clc
loope
lcall
std
imul
push
inc
test
sub
jo
jns
sub
movsl
sub
jge
sar
pop
in
in
test
xchg
push
cmp
in
push
sbb
loope
jp
sub
push
rorl
or
push
icebp
jnp
addr16
mov
jns
shrl
sarl
sub
jnp
out
cmp
pop
scas
jmp
icebp
add
jno
push
inc
pop
xor
push
or
sub
add
and
push
sub
mov
repnz
int
push
fucomp
pop
and
stos
xchg
hlt
pop
add
fdivrs
hlt
mov
pop
jg
fdivrl
mov
inc
test
xchg
adc
mov
sbbb
dec
mov
jl
popa
dec
sub
stc
dec
rclb
sbb
insb
test
lcall
ss
in
xor
push
movsl
xchg
out
out
inc
out
pushf
jl
adc
movsb
and
adc
sarb
test
mov
push
dec
push
call
mov
daa
inc
in
sbb
xchg
push
sbb
rorb
xor
sbb
fildll
movsl
or
mov
lods
sub
add
mov
jbe
inc
mov
cmp
mov
and
out
jae
dec
nop
inc
and
sahf
pop
out
xor
sahf
loopne
sub
adc
out
lcall
mov
jecxz
stc
dec
cmp
js
jo
add
pop
and
repz
adc
and
sahf
inc
mov
loop
mov
sub
xchg
bound
jne
les
aad
ds
jle
xor
nop
cltd
pop
or
and
mov
dec
or
lds
add
fdiv
mov
dec
cwtl
xchg
popa
and
adc
push
test
cltd
sub
or
outsl
rol
or
or
popf
lds
push
outsl
jge
or
outsb
dec
cmpl
adc
das
sub
mov
sbb
out
int
xacquire
and
or
popa
out
xchg
ss
or
xchg
cmpsl
roll
sbb
cmp
lret
push
les
dec
shlb
popa
js
sub
hlt
mov
aaa
rcrb
sbb
in
das
xchg
fists
pop
out
les
push
lret
test
shll
cmp
cld
mov
add
lock
leave
xor
mov
in
nop
add
mov
sahf
stos
pop
push
repz
test
out
lret
les
mov
lds
add
pop
add
test
enter
lea
push
xor
xor
in
out
int3
iret
xchg
ja
into
in
sub
xchg
or
ret
sub
xchg
lahf
jecxz
dec
arpl
ja
sbb
jp
test
pop
pop
mov
rolb
daa
mov
push
aad
test
das
dec
dec
dec
inc
add
jno
orl
push
shll
inc
push
mov
out
das
test
sub
negb
lods
scas
bound
pop
scas
rclb
cmp
in
int3
shr
cmp
add
int3
cmc
fcoms
fldcw
clc
sbb
shrl
add
push
incb
lret
test
mov
loop
int3
push
les
adc
mov
mov
push
and
aaa
pushf
loopne
adc
test
sbb
lea
lea
adc
enter
out
jl
pusha
enter
sub
sub
cmpsb
xor
imul
int3
cmc
cmp
jns
mov
mov
push
loope
lret
adc
push
insl
jo
push
popf
dec
test
in
les
ret
inc
jno
sub
repz
sub
bound
push
xor
pop
push
inc
adcl
cmp
jp
cmpsb
jbe
mov
negb
adc
cmp
xchg
push
mov
test
test
imul
pop
repnz
cmp
mov
mov
and
and
inc
xorb
cmp
sub
xchg
pop
gs
pushf
push
imul
xchg
loope
push
pop
out
lcall
inc
pop
or
cli
int3
jge
sbb
push
xchg
aas
sbb
fnstenv
mov
mov
enter
cmp
xor
loopne
sub
push
dec
xorl
sbb
dec
enter
xchg
sub
iret
mov
loope
push
negl
add
scas
jge
addr16
jge
pop
and
dec
out
xor
lock
pop
xchg
push
xor
dec
out
mov
adc
or
xor
aas
sub
int
xchg
fsubrl
push
cltd
pusha
cmp
out
dec
and
stc
scas
inc
push
scas
mov
pop
sub
jl
shld
mov
sbb
repnz
or
pop
mulb
sti
ss
das
adc
lds
idivb
jecxz
fcompl
mov
mov
pop
adc
rcrl
mov
lret
add
int
data16
in
dec
repz
fs
mov
ret
cmp
push
sub
adc
mov
lret
mov
lea
pop
inc
cmp
xchg
scas
dec
push
fistl
fisttpll
add
leave
pusha
cmp
mov
and
ds
xchg
out
cmp
xchg
push
mov
jb
test
xchg
pop
cmp
test
pop
or
pop
add
cmp
inc
ljmp
dec
ret
sub
mov
cmp
cmp
shlb
stc
jle
addr16
outsb
xchg
sbb
insl
clc
jl
dec
cmpsb
sub
mov
jo
add
cmp
dec
jne
inc
loopne
dec
insb
adc
sbb
loop
sub
jle
and
lds
leave
mov
aaa
push
sbb
sbb
sub
in
cmc
inc
mov
mov
jnp
gs
mov
inc
mov
xchg
cli
enter
shl
cwtl
repz
lods
pop
xchg
outsl
test
lods
mov
jp
jo
lea
mov
push
leave
lahf
push
xchg
mov
movsb
mov
lahf
mov
fistl
push
add
cmp
cld
cmp
xchg
lret
pop
ds
roll
xchg
test
mov
mov
lret
mov
dec
sbb
inc
insb
adc
cmp
outsb
push
call
inc
sub
jge
and
aam
fiadds
ljmp
mov
jno
pusha
std
scas
push
sub
push
insb
outsl
xor
pop
adc
jns
aam
sbb
popf
scas
push
mov
or
xchg
xor
mov
or
and
mov
lret
push
nop
mov
push
es
and
aad
push
xchg
pop
and
test
dec
dec
and
cli
fistps
mov
into
mov
dec
or
xor
outsl
hlt
mov
ss
mov
sbb
movsb
fistpll
pop
mov
xchg
pop
and
mov
lahf
int3
mov
add
pop
dec
mov
mov
adc
int
lock
fs
aad
mov
in
xlat
mov
stc
pop
repz
adc
or
mov
loope
sbb
sbb
jl
mov
stos
xchg
sub
stc
movsb
xchg
pop
testb
cmp
in
push
and
idivb
xor
fists
iret
dec
mov
ret
or
fwait
mov
xchg
imul
or
push
and
roll
xchg
add
jo
xchg
xor
sarb
xchg
fwait
out
xchg
dec
cmp
xor
je
mov
jl
imul
mov
xchg
or
add
push
test
mov
sub
ljmp
xor
negb
sbb
or
pop
push
xchg
arpl
lds
xchg
dec
lahf
mov
cmp
fdivrp
pop
push
sub
in
cmp
into
fbstp
cmp
jae
mov
test
jmp
adc
imul
out
adc
enter
dec
sti
push
popf
mov
mov
fiadds
sub
jg
jecxz
ljmp
je
test
insb
out
shrb
addb
les
jno
std
mov
faddl
jae
das
mov
movsb
or
cmp
jo
mov
lret
xchg
or
inc
mov
pop
faddl
add
and
inc
and
sbbb
xor
mov
shll
inc
insl
pushf
mov
aam
lretw
es
dec
in
push
mov
cld
fdivr
mov
mov
xchg
sub
test
mov
mov
jl
mov
sub
lahf
xor
dec
cmpsl
cmp
jne
hlt
and
cli
int3
push
jne
add
fnstsw
push
inc
mov
inc
lcall
pop
icebp
dec
add
xor
imul
push
div
xchg
mov
mov
fadd
andl
jg
xlat
fstl
push
adc
stos
sbb
insb
jo
push
xchg
cltd
cwtl
sub
cmp
test
into
data16
mov
xchg
push
pop
push
ficomps
mov
adc
outsb
gs
in
lock
fdivrl
mov
inc
fcoms
clc
je
test
xchg
sub
aam
in
hlt
mov
adc
and
xor
inc
fcoms
clc
je
test
xchg
sub
aam
in
hlt
mov
adc
and
xor
inc
fcoms
clc
je
test
xchg
sub
aam
in
hlt
mov
adc
and
xor
inc
fcoms
js
testl
sub
cmp
mov
or
mov
insl
add
mov
inc
cld
push
add
fnstenv
cmpl
mov
sarl
loope
icebp
add
and
push
jmp
sbbl
shll
loope
icebp
jnp
mov
xor
inc
stos
ds
adc
pop
lods
fidivrs
push
or
nop
ljmp
push
test
lock
es
leave
cmp
ljmp
shl
pop
cmpsb
or
cld
inc
xchg
push
fisubs
fnstcw
push
cld
test
push
cltd
jo
inc
stc
dec
xchg
movsb
nop
push
scas
adc
mov
icebp
ja
or
cmpl
mov
out
les
cltd
icebp
les
pop
mov
es
mov
out
jno
inc
in
negb
cwtl
mov
jmp
jns
jns
xchg
scas
cld
xor
outsb
bound
add
and
push
ljmp
adc
icebp
mov
mov
jns
imul
mov
xor
popa
shll
cmp
inc
enter
rcr
add
sub
push
add
je
and
ljmp
aaa
mov
les
shrl
cmp
fadds
and
xor
or
dec
xchg
leave
into
jne
lea
icebp
dec
add
xor
popa
fnstenv
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fnstenv
cmpl
sahf
out
push
shll
lock
jbe
mulb
shll
or
sbb
mov
jp
test
popa
dec
adcl
arpl
inc
fisttps
jae
aam
imul
mov
push
jo
pop
lea
lock
in
add
faddl
lds
lcall
in
push
jb
jmp
mov
pop
jmp
adc
gs
bound
rcr
cwtl
data16
addr16
xor
out
jp
cmp
cmpsl
jbe
pop
sbb
sti
adc
aas
int3
rorb
cmc
or
ja
movsl
mov
mov
fsubs
ficomps
mov
sti
ja
mov
add
repnz
in
popa
lret
cmp
mov
call
icebp
and
mov
fwait
adc
push
scas
test
sti
divl
call
jb
sbb
mov
push
add
xchg
add
fcoms
pop
pusha
es
cld
dec
xchg
in
out
in
jae
out
mov
rol
xor
cmpsl
test
cmp
cltd
and
mov
js
push
ja
int
xchg
cmp
je
add
scas
mov
mov
fcmovb
sarl
cwtl
outsl
divb
or
pop
cld
jmp
push
cmp
repz
jno
sarb
xor
repnz
sahf
psrad
xchg
pop
jge
mov
rolb
push
aad
bound
bound
scas
dec
xlat
dec
insb
pop
imulb
cmp
mov
negb
jl
orb
push
xchg
mov
stos
add
sub
adc
je
call
fs
in
inc
and
repnz
push
xor
cmp
mov
mov
mov
mov
fstps
lock
xor
call
mov
mov
sub
pop
mov
pusha
sbb
sub
pop
loope
xchg
and
fs
add
jb
add
or
pop
or
addb
int3
in
sbb
mov
jns
adc
test
sbb
mov
inc
pop
lods
outsl
insl
test
add
fimuls
mov
sbb
mov
push
cmpsl
loopne
icebp
movsl
mull
ret
stos
mov
cld
adc
cmp
add
cmpsb
imul
add
les
and
jl
mov
popa
dec
mov
ds
in
xchg
minps
xchg
push
mov
arpl
xchg
lcall
jno
rorl
xor
mov
addb
loop
lds
fs
inc
xor
iret
sub
test
mov
mov
into
sahf
sbb
mov
mov
std
mov
in
outsb
sar
movsb
cmc
mov
dec
inc
fstl
push
lahf
ds
fiaddl
add
shlb
movsb
mov
fistl
mov
jmp
inc
inc
in
loopne
in
imull
movsb
mov
jbe
mov
out
cmpsl
bnd
pop
call
pushl
insb
dec
pop
mov
mov
push
ljmp
shlb
dec
sub
pop
xchg
dec
and
adc
xchg
ret
int3
call
pop
imul
clc
pop
push
jmp
mov
insl
aad
nop
inc
or
in
push
mov
enter
inc
mov
roll
addb
out
orb
ss
test
movsb
leave
pcmpeqd
jecxz
cmpsb
inc
add
sbb
movsl
xchg
push
shlb
jne
push
xor
iret
popa
jl
dec
movsb
dec
repnz
lock
push
sub
sbb
lcall
or
cmp
jle
push
push
in
dec
add
nop
dec
jp
iret
ficoml
ret
cltd
pop
test
xchg
aaa
push
mov
andb
out
add
pop
imul
xchg
dec
lea
dec
orl
ret
xchg
xor
leave
popf
lret
mov
lds
mov
mov
jbe
cmpsb
sub
inc
add
ss
sbb
out
sbbl
push
bound
inc
inc
xorb
push
xor
shr
ja
in
rep
mov
in
mov
mov
mov
mov
lcall
js
cmc
inc
stc
mov
stos
out
dec
pop
pop
cli
push
scas
dec
dec
adc
shlb
mov
push
dec
into
xor
inc
push
xchg
inc
fs
gs
clc
jnp
push
clc
mov
dec
xchg
fwait
xor
mov
pop
mov
mov
mov
repz
push
loopne
sub
sub
xchg
lds
sti
lods
inc
adc
dec
xchg
push
popf
push
stos
xchg
sahf
jb
fcmovne
xchg
or
js
outsl
jecxz
repz
out
nop
mov
sub
and
dec
pop
pushf
outsb
xor
lods
sub
addr16
mov
ret
loop
mov
sbb
fdivrs
inc
pop
fstpt
cmp
xor
mov
sbb
fbld
jnp
lcall
sub
sub
cli
call
cltd
or
int
mov
cmp
sbb
lret
mov
rcl
pop
cmp
inc
and
or
and
xlat
mov
clc
xor
fwait
lds
dec
sbb
mov
stos
shll
push
movsl
repnz
mov
jb
enter
arpl
cmp
repnz
jecxz
mov
xchg
push
pusha
cmpsb
xor
out
mov
fadds
adc
fnstcw
lock
mov
xlat
mov
or
jb
mov
fwait
test
sbb
xchg
and
shlb
lock
ja
shl
out
stos
and
movsl
shlb
push
add
fs
jmp
dec
repnz
push
cmp
cli
and
pop
es
or
testb
lods
or
xor
xor
mov
cmp
jg
push
test
fisttpll
lret
or
jmp
xchg
scas
lcall
add
addb
insl
push
add
cmp
jne
les
cmc
adc
fimull
jg
push
push
cli
push
mov
push
mov
stc
mov
movntps
dec
pop
mov
ljmp
mov
jecxz
dec
push
das
fs
imul
cmp
cltd
xor
fnsave
or
int3
mov
and
and
std
pop
movsb
or
in
adc
daa
jl
ret
jp
cbtw
lret
cmpb
sub
outsl
pop
jmp
mov
xor
mov
cmpsl
call
stos
mov
jmp
in
cwtl
dec
add
push
test
jp
loope
xchg
cld
loop
add
mov
leave
int
adc
ljmp
lahf
in
xchg
and
cmp
into
mov
stc
mov
mov
lds
imul
stos
sbb
out
xchg
lahf
mov
pop
lret
inc
fwait
xor
dec
jl
inc
repnz
pushf
sahf
xchg
sub
mov
int3
push
adc
std
scas
xchg
and
mov
push
adc
mov
sbb
idivl
mov
iret
lds
jnp
pop
adc
add
outsl
sti
pusha
inc
fisubrl
call
jb
mov
iret
mov
out
lock
xchg
imul
push
into
pop
cld
in
and
rclb
adc
repz
dec
sub
scas
bound
ljmp
and
xlat
add
popl
xchg
and
add
jle
pusha
mov
mov
mov
lea
jne
inc
add
cwtl
pop
ljmp
dec
cmp
xchg
xchg
andl
push
and
sti
bnd
pop
and
shll
push
scas
ljmp
mov
mov
pop
mov
xchg
push
cs
mov
lods
mov
outsl
mov
xchg
xlat
jb
pop
ja
repnz
loope,pt
xor
pop
jle
loopne
pop
jmp
mov
sbb
scas
dec
inc
lret
int3
test
aas
add
leave
dec
and
mov
pusha
fbstp
scas
pop
int3
cltd
loopne
or
inc
aas
mov
shlb
popa
out
dec
xor
sbb
aaa
xchg
mov
int
jne
insl
pusha
mov
jbe
push
popf
mov
fstps
dec
lds
sbb
insb
pop
add
pop
and
es
push
cwtl
and
sbb
jns
dec
dec
or
test
jl
rcll
out
pop
incb
sbb
divb
mov
gs
lret
lret
scas
jno
ss
add
inc
inc
test
lcall
pop
add
fsubrl
or
push
push
aaa
xor
inc
jmp
fiaddl
outsb
movsl
push
xchg
add
xchg
sub
add
inc
ret
cmp
jl
lret
pushl
mov
rclb
aad
push
das
sti
push
inc
cwtl
mov
notb
ljmp
in
mov
jne
cmp
add
ss
popf
divl
loop
push
neg
dec
lea
mov
outsl
jnp
dec
jne
push
aas
adc
rclb
jl
repz
jbe
loope
cmp
adc
jb
mov
push
mov
pusha
cmpsl
cmpsl
dec
roll
mov
sub
call
cmp
mov
or
add
push
sub
xor
cs
xchg
sub
cld
mov
je
and
xor
push
fdivr
jne
inc
and
ret
mov
sub
inc
cmpsl
xchg
pop
mov
enter
sbb
dec
into
or
cmp
xchg
mov
or
dec
xchg
call
pop
dec
sti
mov
out
in
mov
sbb
mov
push
ja
sub
shlb
and
mov
fimull
ljmp
dec
shrl
fistpll
cld
mov
out
inc
int
add
and
sti
inc
adc
and
push
fs
hlt
add
mov
das
mov
fcoml
adc
jl
addr16
xchg
mov
ljmp
sbbl
rorb
xlat
dec
dec
mov
push
cltd
pushf
xor
lahf
sub
pop
xchg
addb
jecxz
push
stc
aad
aas
subb
out
hlt
mov
sub
fcoml
divb
inc
sbb
das
adc
mov
inc
dec
addb
cmp
adcb
ljmp
xchg
movsb
cs
fcmovnbe
adc
std
cmc
mov
and
scas
adc
je
pop
and
shll
jno
and
mov
test
sub
scas
mov
dec
mov
inc
hlt
push
jge
andl
mov
xor
iret
mov
pop
pusha
or
cmp
sbb
fildll
mov
pop
fs
or
dec
movsl
shl
fadd
pop
out
fcmovbe
lock
or
jg
es
int
loope
and
xchg
loop
cmp
or
fdivp
push
out
push
mov
sub
pushf
cmp
sub
lahf
mov
pop
mov
pop
imul
outsl
testl
and
inc
mov
bound
mov
add
ficomps
inc
sarl
jl
mov
jnp
adc
and
or
jmp
xchg
ret
adc
sbb
dec
fdiv
xor
xchg
aad
mov
cmpsl
jne
in
and
insl
sub
cmpsl
scas
or
loopne
cmp
sbb
lret
xchg
sbb
sbb
ss
add
cli
adc
jl
sub
loopne
adc
sub
mov
out
push
int3
jnp
loopne
or
inc
loope
cmp
mov
fbld
mov
and
stos
stos
shl
pop
mov
xchg
fwait
sub
dec
roll
faddp
pop
mov
gs
add
inc
push
pop
and
add
jmp
dec
cmp
jb
dec
cmpsb
dec
stos
fwait
pusha
mov
iret
or
mov
mov
inc
cli
jo
sahf
js
pop
pop
mov
adc
adc
mov
or
jns
and
iret
mov
cmp
push
xor
mov
mov
je
jmp
fisttpll
out
adc
and
loop
movsl
mov
xchg
push
lds
jne
mov
adc
inc
and
pop
cmp
add
dec
bound
es
jp
mov
mov
add
and
xor
and
sbb
pop
mov
pop
mov
fnsave
mov
jp
pop
sbb
pushf
jnp
or
and
mov
or
nop
cld
mov
jae
mov
movsb
into
pop
xor
cmp
inc
dec
and
insl
mov
cmp
in
testb
lret
insb
cmp
mov
xor
and
push
xchg
addr16
outsb
or
push
test
mov
inc
loop
call
in
push
fs
pushf
jnp
mov
push
and
dec
std
or
dec
mov
cwtl
mov
outsb
call
xor
pop
fcmovnu
loopne
sbb
or
sti
push
sbb
lods
cs
shl
adcb
cmp
bound
jae
imul
negl
into
add
nop
pusha
sub
fstpt
fmuls
push
mov
cmp
iret
add
cmp
jle
stos
je
dec
js
mov
pop
and
mov
call
mov
push
in
push
dec
ljmp
dec
iret
or
sub
pusha
leave
jnp
loopne
adc
fdivrl
pusha
test
popf
xchg
xchg
popa
push
hlt
insl
call
fcoml
xor
mov
cmp
pop
sbb
mov
jl
sbb
daa
jnp
cwtl
add
inc
adc
push
mov
sub
pusha
mov
xor
aam
data16
sbb
addl
out
gs
fwait
sbb
in
fwait
cltd
cmp
and
lea
lahf
rcrb
and
cmp
ds
arpl
dec
testb
jle
pop
out
or
into
mov
dec
lods
sbb
mov
jns
dec
gs
call
sub
add
xor
adc
inc
jg
add
add
pop
push
repnz
push
jb
xchg
mov
pop
out
xchg
jle
dec
mov
lea
cmp
stc
mov
push
aad
rol
dec
mov
fisttpl
xor
lock
leave
addl
push
xchg
lret
push
mov
repz
xor
mov
mov
jp
push
orl
adcl
cmp
test
sbb
xor
mov
lods
and
pop
movsb
xor
push
xchg
pop
loopne
mov
insb
and
fidivrs
xlat
fisubl
arpl
inc
in
rdpmc
dec
dec
stos
jno
mov
dec
mov
add
jge
add
mov
jb
dec
lret
inc
lods
and
sahf
adc
jnp
fsubr
jecxz
and
in
mov
cltd
popf
stos
int3
sarb
add
inc
inc
popa
and
push
dec
or
xor
sbb
frstor
push
fwait
imul
pop
inc
add
shlb
pushf
hlt
jge
xor
add
push
jae
xor
sub
push
ss
cmpsb
and
push
mov
jg
jecxz
jo
std
sub
rcl
adc
push
stos
decl
and
xor
add
add
mov
sub
xchg
ret
inc
fcoml
inc
dec
adc
jnp
gs
cmp
in
loop
js
bound
jmp
mov
jmp
test
dec
enter
iret
cmp
sahf
jmp
shl
cltd
rcr
movsb
sbb
ja
enter
dec
fwait
clc
mov
adc
mov
data16
sbb
fsts
jp
push
outsl
popf
out
push
pop
jne
jecxz
data16
popf
shll
mov
orl
scas
jbe
sarl
dec
mov
mov
inc
adc
adc
adc
movsl
jge
push
loopne
pop
gs
in
jnp
psubsw
call
lods
push
xor
stos
shl
jb
int
and
sub
jmp
outsb
insl
bound
mov
xor
adc
push
js
adc
arpl
mov
lret
lods
mov
inc
pop
add
test
arpl
call
cltd
outsl
sub
dec
test
jno
jecxz
ss
shlb
cli
adc
test
mov
add
xchg
imul
lock
pop
insl
inc
mov
test
test
lods
mov
dec
pop
mov
out
cwtl
iret
and
add
pop
and
jne
mov
mov
mov
cmp
fdivrl
sbb
and
add
mov
xor
adc
mov
inc
out
movsb
loopne
movsl
cmp
mov
aad
arpl
pushl
mov
mov
and
or
aas
sbb
aas
icebp
xchg
test
sbb
lahf
xor
xor
rcrb
pop
push
mov
out
xor
pop
pushf
and
js
inc
lahf
xchg
jp
adc
out
loopne
pop
pop
mov
push
mov
xchg
mov
mov
mov
sub
test
cmp
and
push
add
sub
leave
imul
xchg
stc
pop
iret
pop
fs
pop
dec
loopne
mov
or
clc
push
mov
stos
in
and
jecxz
and
and
jmp
lret
lods
mov
or
jg
fwait
push
es
rorb
enter
daa
add
dec
push
dec
push
push
cmp
cltd
gs
jo
or
xor
mov
dec
or
sti
test
lret
movsb
or
fldt
sbb
repz
repnz
jnp
nop
pushf
leave
xchg
lods
lods
xor
and
negb
sbb
jecxz
movsb
stos
xor
inc
push
mov
add
mov
insb
daa
add
fiadds
stos
outsb
xchg
push
pop
pop
inc
push
cltd
aam
mov
or
gs
lods
xor
mov
call
iret
pop
std
or
xor
pop
movb
push
test
xchg
or
mov
stos
rcrl
jbe
cmp
out
mov
or
lods
xorb
sbb
lret
mov
ja
push
adc
or
or
hlt
lret
jns
ja
cli
je
insl
xchg
pop
int
clc
lods
inc
jl
cmp
mov
test
std
jno
cmp
aas
sbb
or
cmpl
cmp
mov
shrb
jmp
pop
ja
xchg
call
out
mov
mov
mov
mov
aam
inc
adc
push
outsl
pop
pop
push
out
add
sub
adc
ret
bndldx
pop
pop
cwtl
jp
push
dec
outsb
cmp
and
in
push
arpl
fwait
jl
imul
inc
xchg
add
or
insl
aaa
or
sub
sbb
mov
push
in
xor
inc
or
push
int3
fsub
in
dec
lock
sub
stc
lods
fildl
add
ret
addb
push
data16
aaa
out
push
shl
aaa
jbe
bound
dec
pop
cmp
int
test
cltd
mov
ljmp
pop
les
call
dec
xchg
int3
and
xchg
inc
dec
pop
outsl
mov
sbbb
insl
jae
and
repnz
inc
lock
mov
inc
or
cli
leave
pop
mov
lret
rcr
xor
inc
shl
xchg
data16
pop
outsb
inc
out
xchg
push
pop
adc
jae
mov
mov
cli
cmpl
cmp
data16
idivb
and
xor
stos
out
pop
add
mov
arpl
loope
aad
lds
lret
aam
and
gs
inc
pop
fildll
popa
mov
cmpsb
pop
iret
hlt
pop
in
outsl
inc
sub
mov
cwtl
loope
and
dec
cmp
popa
je
ds
shll
mov
mov
dec
jnp
pop
add
lods
aas
nop
jns
push
fnstcw
jo
mov
mov
out
jno
fsubs
popf
jo
shr
imul
pop
mov
es
cwtl
jp
hlt
pop
push
mov
mov
int
cmpsb
test
push
jb
int
xor
sub
xor
ljmp
gs
push
inc
in
cmp
test
sbbl
sub
in
aas
cwtl
adc
push
ret
test
xchg
rolb
cmp
test
xchg
in
or
loop
jmp
cmp
jg
int3
ljmp
hlt
fidivs
test
inc
shl
inc
mov
insl
fstps
adc
jnp
mov
cmpb
push
mov
cmp
lret
xor
lea
jg
divl
movsl
std
enter
or
cltd
sub
scas
or
mov
test
jmp
out
cli
or
cmp
jno
sub
jns
imul
mov
xor
popa
fnstenv
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fnstenv
cmpl
roll
loope
jno
add
xor
popa
shlb
sbb
mov
sarl
loope
icebp
mov
inc
adc
mov
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
loop
inc
cld
lea
pop
testb
sti
push
add
add
pop
add
push
add
add
add
push
add
and
or
jo
jg
jge
pusha
add
add
add
add
xchg
add
add
add
add
add
add
add
add
dec
add
add
add
jno
int3
add
add
xchg
add
add
pop
add
add
addl
fs
add
sub
pop
add
sbb
testl
push
add
mov
add
add
adc
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
test
xor
add
jno
inc
add
add
mov
dec
add
add
add
add
add
mov
add
add
add
add
xchg
add
add
add
push
add
add
add
pop
add
add
lods
add
add
add
add
add
dec
add
add
add
cmp
fadds
xor
add
add
inc
add
cmp
dec
add
jae
sub
add
add
xor
mov
add
add
in
add
add
lea
add
add
add
add
adc
lods
add
add
and
push
add
add
push
add
xchg
fiaddl
data16
mov
inc
add
outsb
add
add
add
add
add
add
add
cmp
dec
add
adc
add
add
xor
clc
add
add
add
cli
add
mov
add
add
add
add
add
add
add
imul
ja
lea
add
add
add
add
iret
add
fiaddl
sbb
pop
add
add
or
pop
add
add
add
add
push
add
dec
add
add
jg
loopne
xchg
leave
add
add
fadds
test
inc
add
add
fadds
testl
dec
add
add
push
add
add
movsl
add
add
add
add
add
inc
add
add
add
add
movb
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
jne
add
pop
add
add
mov
add
fadds
xchg
inc
add
add
into
add
add
add
add
add
add
add
add
cmp
pop
add
arpl
imul
push
add
add
cmp
add
add
mov
iret
add
roll
add
add
add
add
add
add
add
add
push
add
lea
sbb
jo
push
add
add
sub
add
xor
pop
add
add
xchg
push
or
xor
add
hlt
movsb
fbld
lods
movsl
stc
cwtl
add
push
mov
adc
mov
nop
lea
dec
ret
test
dec
addr16
jmp
fisubl
subl
rcl
lret
out
inc
xchg
push
inc
test
xor
mov
adc
je
mov
or
fwait
sbb
xchg
push
mov
jp
sub
mov
movsb
mov
xchg
mov
xchg
cli
jmp
in
add
xchg
icebp
cmpsl
xchg
xchg
xor
sbb
sub
shrb
ss
sub
fxch
mov
sub
into
int3
dec
adc
ss
bound
ds
cmpsb
mov
adc
leave
mov
pop
loope
jg
pop
int3
jne
aaa
mov
mov
xor
xor
inc
adc
jg
mov
fwait
push
or
popf
test
lcall
jmp
arpl
push
push
lds
insb
xchg
pop
and
stc
hlt
shl
test
add
hlt
and
hlt
mov
mov
push
mov
push
lds
inc
iret
inc
mov
xchg
js
sub
test
daa
test
loop
mov
popf
test
xchg
sub
push
or
addr16
push
mov
mov
sbb
add
cmpsb
mov
sub
add
jle
popf
xchg
jbe
jecxz
and
sbb
jnp
ret
sbbb
cwtl
aaa
sub
fmulp
dec
leave
mov
das
fadds
lcall
or
lret
jae
lods
call
inc
inc
sahf
cmp
fsubs
fidivl
subb
mov
outsb
outsb
inc
push
mov
xchg
test
andl
cli
jge
mov
scas
adc
fnstenv
push
add
lret
sbb
inc
es
imul
xchg
stos
aad
mov
jmp
in
in
data16
icebp
in
jnp
je
push
ja
fdivrl
testb
fstl
rorb
adc
xor
jle
push
cmp
stos
test
pop
sub
cmp
fistpll
idivl
mov
insl
cmpsl
int
fs
jg
sbb
popa
decb
push
mov
pop
xor
pop
pushf
test
xchg
mov
shll
nop
fwait
xlat
add
inc
xchg
jge
and
mov
bound
cs
add
push
pop
fld
cmp
inc
push
dec
ret
sub
xchg
scas
dec
icebp
cmp
sar
sub
jecxz
cwtl
xchg
inc
push
daa
add
mov
fnstsw
stos
jo
jbe
les
cmp
pusha
int
xchg
lods
ja
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
