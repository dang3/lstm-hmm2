call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
nop
mov
cli
jb
and
jl
insl
aad
cmpps
repnz
lock
cmp
fisubl
jb
add
xor
pop
rorb
ret
or
sbb
mov
ret
push
bnd
imul
lods
sub
push
call
and
hlt
push
mov
inc
fidivrl
cmpsb
push
xchg
stc
sub
lret
cltd
mov
mov
movsb
jle
out
and
jmp
ljmp
in
pop
test
mov
xchg
bnd
mov
dec
mov
mov
cmp
les
mov
inc
movsl
adc
pop
test
xchg
pop
xchg
sbbb
adc
push
or
inc
scas
and
int
xchg
xor
rorl
push
rcr
sub
mov
popf
mov
mov
dec
movsl
sarb
jp
mov
mov
fidivl
aaa
cmp
repz
sbb
xchg
idivl
lret
out
pop
cmp
ljmp
adc
fiaddl
jb
arpl
adc
and
mov
arpl
jl
dec
xlat
pop
ds
pop
stos
sbb
jle
dec
mov
ficoml
adc
ja
jno
and
inc
lcall
mov
cmpxchg
imul
mov
add
pop
repnz
lcall
ret
push
jp
or
cmp
ljmp
adc
ret
push
jp
or
cmp
mov
xchg
popa
movsl
aas
mov
adc
push
sub
mov
stos
mov
mov
sti
mov
daa
mov
and
movsl
shlb
call
sub
ret
ret
mov
jns
vpunpcklqdq
mov
bound
scas
call
lahf
bnd
call
or
test
inc
jge
movsl
incb
insb
outsl
pop
ds
popa
dec
cmpsl
jns
sub
jp
ret
and
xchg
cmpsl
or
pop
fs
jle
dec
lds
fstpl
mov
ds
sub
or
loopne
in
testl
fisubs
int3
pop
addr16
push
adc
aad
cmp
int
pop
mov
mov
mov
pop
xor
xor
inc
mov
inc
addr16
jno
lret
loope
jp
mov
cmc
stos
sbbb
mov
jg
push
scas
dec
push
lods
inc
das
push
cmpsl
icebp
push
cmpb
inc
mov
dec
mov
inc
jmp
xor
lods
inc
mov
sbb
ja
jnp
xchg
adc
xor
sahf
js
mov
jo
xor
mulb
cltd
mov
and
and
mov
sbb
dec
fiaddl
sarb
xchg
xor
inc
xchg
mov
sbb
cmc
notl
push
fistpl
aad
mov
sub
add
mov
arpl
ds
xchg
jecxz
sub
dec
xchg
inc
cmp
push
ror
popa
out
xchg
jecxz
ret
push
inc
jecxz
mov
mov
pusha
ss
pop
pop
jnp
jmp
in
mov
sbb
outsl
xor
ja
stos
xchg
mov
aad
push
and
mov
inc
out
jb
sub
and
fildl
aad
lods
je
jo
adcl
gs
adc
ret
lods
shll
add
bound
cmp
out
dec
push
lea
aam
idivb
ljmp
and
pushf
xchg
enter
loopne
mov
push
cld
jge
xchg
fidivs
dec
int
add
cmpsb
dec
adcl
das
pop
popa
cmpl
lret
aam
cli
enter
add
adc
push
xchg
cli
dec
cmp
or
mov
divl
cmc
jae
sub
inc
stos
jecxz,pn
jmp
inc
push
in
mov
pop
sbb
and
loope
cld
imul
and
push
jbe
mov
add
ficoms
packsswb
dec
push
incl
mov
pop
sub
test
jmp
adc
jp
stos
ficoms
jp
mov
add
mov
enter
add
push
sbb
enter
pop
test
xchg
pop
outsl
stc
sub
inc
cld
icebp
repnz
cmp
ret
pop
inc
ljmp
push
jg
mov
dec
push
jmp
das
and
cmp
fsubs
pop
fsubp
dec
cmpsb
sbb
imul
sbb
inc
sbb
dec
mov
incl
inc
movsb
dec
ffreep
sbb
mov
imul
jo
or
fmuls
mov
adc
iretw
rcl
jno
pop
into
sub
mov
cld
jle
aam
mov
aaa
sub
sbb
pop
aaa
cmpsl
inc
dec
mov
cmp
cltd
cli
cmp
lds
pop
mov
mov
sbb
in
mov
mov
xchg
pusha
mov
mov
aam
cmp
xlat
push
pop
shr
inc
inc
dec
cmc
adc
mov
in
rcrl
adc
jnp
and
or
mov
sbb
push
or
jno
mov
push
in
fwait
pop
leave
das
popf
xchg
pop
mov
in
mov
add
dec
inc
jno
cwtl
fs
mov
enter
inc
lahf
dec
lock
lahf
or
js
dec
or
jp
and
hlt
daa
inc
cmp
repnz
and
adc
inc
mov
mov
mov
dec
mov
jno
jb
adc
pop
push
iret
mov
bound
cmp
movsl
and
xor
fs
mov
loop
repnz
in
enter
ret
dec
enter
push
jb
cmp
mov
jne
mov
pop
mov
jmp
icebp
xor
pop
inc
ret
dec
pop
cmpsl
sub
jae
leave
mov
jp
cltd
enter
mov
aad
test
cmp
and
sub
ret
in
xchg
push
ljmp
fldcw
push
shl
sbb
pop
fisubs
jns
fwait
mov
push
and
lods
mov
enter
dec
fisttpll
sub
adc
icebp
inc
imull
in
inc
cmpsl
movl
lret
mov
scas
mov
mov
lea
mov
ss
mov
cmc
test
xor
ficomps
dec
test
hlt
popa
stos
sarl
imul
and
test
pminsw
das
pushf
pop
and
sti
pop
aaa
cmp
aad
rclb
xor
lds
or
repnz
cmp
aaa
jnp
aad
xchg
repz
stos
movl
lock
out
adc
push
xor
dec
xor
loope
aaa
and
xchg
in
sbb
scas
lock
xchg
lock
testl
rcr
push
add
or
out
push
mov
arpl
jb
jb
mov
mov
mov
pop
sarl
testl
cltd
xchg
insb
push
fadd
xchg
and
xor
dec
rolb
mov
mov
movsb
cmp
xchg
xchg
out
mov
aad
outsl
pop
mov
mov
into
adcl
mov
adc
imul
hlt
repnz
repnz
into
js
mov
lahf
or
jl
pop
push
lods
pop
pusha
sbb
sub
mov
les
test
mov
or
das
and
xchg
test
fiaddl
sbb
push
lcall
adc
jae
fcoml
mov
inc
lds
or
mov
or
int
cld
insb
adc
rcr
mov
test
insb
inc
dec
push
movsl
incb
loopne
xor
mov
sbb
sub
xchg
addr16
in
hlt
push
mov
addr16
sub
pop
jo
mov
lahf
mov
adc
or
insb
xchg
mov
popa
stos
jns
mov
sarb
loope
lret
jo
xor
and
sub
insl
lods
sbb
push
cs
push
mov
les
pop
enter
dec
adc
mov
sub
iret
leave
mov
imul
jo
movsl
cmp
jg
jecxz
cmp
xor
pop
push
cmp
jne
adcl
shl
dec
stc
add
imul
add
outsb
and
dec
pop
clc
in
push
das
lcall
push
jno
pop
stos
inc
cmc
dec
stos
adc
sti
adcb
cli
int
mov
jg
fsubs
jo
lods
cmpl
loop
jecxz
dec
adc
frstor
jmp
push
xor
jne
cltd
mov
push
ret
pop
outsb
popa
mov
lds
test
inc
cmp
out
shll
cld
imul
adcb
inc
jmp
mov
jns
rclb
xorb
push
pop
push
sbb
inc
jb
add
cmp
xorl
out
lods
xor
enter
lahf
inc
int
fnstenv
mov
testb
div
mov
lods
dec
into
jne
add
out
in
inc
add
sub
fstp
ret
push
and
jl
aaa
xchg
cmp
cwtl
addr16
xlat
in
call
mov
jmp
imul
lret
div
out
int3
ds
jo
pop
or
xchg
inc
push
xchg
dec
sbb
ljmp
in
clc
inc
cli
dec
xchg
mov
lods
je
pop
xchg
cld
aaa
pushf
sbb
sti
sub
fstl
sbb
push
data16
xor
loop
lcall
xor
imul
daa
enter
adcl
outsl
daa
xor
scas
lods
dec
and
pop
xchg
mov
jle
mov
xchg
pop
sub
pcmpgtw
stc
daa
inc
jmp
notl
inc
sub
sahf
or
ret
enter
jmp
jns
mov
addb
dec
out
cmp
push
push
shll
sti
fwait
mov
cmc
ds
mov
ret
jno
leave
insl
xchg
das
stos
add
cmpsb
mov
or
ss
add
jae
or
dec
xor
test
pop
sub
sbb
orb
sub
ljmp
loopne
cmp
sti
cld
outsb
ss
pop
sbb
cld
inc
lahf
ja
arpl
rolb
jnp
clc
into
in
das
inc
stc
cs
ljmp
push
data16
or
adc
popf
cmp
repz
jl
mov
fsubrs
lret
jb
hlt
rcll
add
movsb
gs
repz
adcl
out
lock
aaa
fidivrl
mov
inc
arpl
aaa
call
pop
sub
scas
push
mov
int
ljmp
sarl
mov
or
fs
test
add
movb
lock
cmpsl
es
push
cmp
movsb
sub
add
pop
push
rorl
ret
mov
xor
push
pop
sub
mov
add
mov
jno
jecxz
mov
push
xor
nop
xor
in
lds
push
ljmp
in
jbe
mov
outsb
or
push
jnp
pop
cmp
lcall
std
repnz
add
hlt
in
push
push
or
mov
mov
ret
int3
fadd
outsl
jmp
ljmp
sub
or
neg
mov
pop
aas
pop
sub
call
adc
push
repnz
inc
cmp
rcl
lahf
jg
repz
xor
hlt
shll
dec
jp
cmp
ja
imul
stc
jne
or
pop
sbb
mov
inc
loop
dec
rcr
inc
add
int3
mov
jae
mov
fwait
xchg
adc
por
ret
mov
xor
daa
sti
ljmp
das
test
das
xchg
in
jp
push
cmpsl
cmp
or
jle
fldt
fwait
inc
inc
nop
inc
lret
dec
mov
mov
subl
lods
popa
mov
mov
cmp
xor
aaa
pop
mov
mov
xor
lcall
or
icebp
xchg
sbb
ja
mov
outsl
and
call
mov
mov
jmp
push
loope
push
in
rcll
repnz
sub
sub
push
or
pop
pop
out
lret
xor
cld
mov
sti
mov
in
shl
add
clc
outsb
add
insb
inc
pop
xor
mov
xchg
add
or
push
daa
jns
xor
adc
int3
add
jne
mov
xchg
lcall
add
add
cmp
rclb
jnp
pushf
dec
pop
xchg
add
jle
mov
jp
mov
or
jmp
fs
cmc
adc
push
lods
sub
ret
jl
jmp
fisubs
sbb
test
mov
push
jmp
mov
mov
dec
jno
mov
cmpb
cltd
cmp
mov
lret
pop
jnp
stc
int
xlat
xchg
push
sbb
mov
test
arpl
int
mov
fistps
cmp
fisttpll
dec
lret
xorb
pop
adc
adc
mov
fnstenv
mov
out
arpl
mov
pop
andb
aaa
ficoml
adc
test
addb
mov
xorl
or
jmp
push
arpl
mov
push
xchg
lret
fidivrl
mov
clc
dec
seta
lock
xchg
mov
xchg
das
shll
sub
pushf
shll
add
fcoml
sbb
pop
orb
xchg
adc
out
dec
dec
xchg
pop
cs
aas
inc
in
xor
push
and
aas
dec
inc
dec
cwtl
dec
lret
add
aaa
inc
idiv
add
inc
xchg
or
insb
es
pop
add
orb
jns
dec
pop
pop
sbb
sahf
and
jne
imul
mov
mov
lods
jge
jmp
jecxz
dec
mov
outsb
fldl
xchg
adc
cs
and
cli
inc
repnz
inc
lock
shrl
jecxz
adc
xchg
sub
dec
mov
xchg
orb
in
lahf
lcall
sub
adc
inc
add
lods
mov
ret
ficompl
rcrl
mov
mov
mov
mov
mov
mov
pop
neg
xchg
int
adc
mov
out
xchg
lds
mov
je
cmp
add
mov
add
xor
in
nop
andb
and
repz
push
adc
push
dec
cmc
and
xchg
xchg
cmp
ja
rcl
dec
push
inc
or
mov
push
mov
pop
sbb
pop
xchg
adc
pop
add
rorb
ja
pop
add
pop
mov
push
push
popa
fs
sub
mov
imul
int
jbe
es
call
ror
div
out
and
std
mov
ds
inc
pop
mov
sub
lahf
mov
push
push
cmc
dec
mov
call
scas
call
jnp
pop
fiadds
stc
pop
leave
sbb
mov
aad
inc
out
je
mov
adc
lods
inc
push
fcmovb
mov
ret
xor
adc
in
cs
jb
fistps
cmp
adc
jnp
jb
fisubs
mov
jnp
call
notw
cmp
mov
cli
imul
loop
adc
or
popf
fpatan
into
popa
mov
cmp
push
fadds
sbb
jae
jae
fiaddl
test
xchg
fdiv
bound
or
fcom
mov
dec
js
mov
jb
shll
sbb
pop
test
pop
mov
stc
addr16
pop
ret
xor
sbb
fnstsw
call
xchg
sub
jle
dec
dec
push
cld
mov
xor
mul
jnp
or
push
std
dec
and
xor
ficomps
les
mov
jo
xchg
mov
mov
repz
into
adcl
jae
xor
mov
mov
adc
fistpl
cmc
mov
adc
xchg
mov
pushf
cmovno
cs
jge
mov
ja
xchg
dec
cmp
adc
mov
sbb
imul
outsb
push
xlat
lahf
roll
cmc
mov
cmp
push
decl
aad
xlat
sbb
movsl
lret
pushf
or
adc
jo
push
dec
lds
insb
filds
adc
mov
aad
es
sbb
jmp
call
or
cltd
push
jns
cltd
daa
iret
jg
jecxz
cmpsb
pop
xchg
shll
sub
push
scas
dec
pop
mov
or
dec
xchg
xlat
cmp
insb
enter
or
and
cmp
popf
push
cmp
idiv
pop
adc
jnp
xor
add
mov
aad
lds
xchg
inc
int
mov
mov
hlt
lds
lahf
test
mov
adc
incb
insb
sub
lock
sub
push
jl
adc
add
dec
dec
jmp
in
stos
pop
inc
ds
xchg
cltd
movsl
and
aam
cmp
xchg
cltd
jnp
in
cld
loop
sarl
add
jl
xchg
push
sti
cwtl
lahf
pop
xor
std
pop
pusha
enter
jge
mov
push
je
push
lea
fists
mov
sub
sub
push
push
mov
fwait
sub
mov
pushf
dec
ljmp
mov
push
rcll
inc
in
pushf
xorb
sub
push
sub
int
stos
sub
pop
mov
lahf
mov
out
lea
mov
push
loopne
scas
mov
scas
or
jmp
daa
mov
lret
add
or
les
jmp
adc
fdivs
ret
jnp
push
mov
inc
xchg
test
cs
out
test
dec
jae
test
popf
daa
jp
out
dec
mov
sub
or
xchg
movsl
pop
mov
adc
test
jb
pop
je
iret
push
adc
dec
ret
push
cmpsb
or
test
andb
in
mov
push
or
dec
sbb
pop
xchg
adc
mov
push
mov
rcrb
pushf
cmp
lret
add
lock
out
es
ret
imul
movsb
ss
arpl
and
mov
mov
gs
inc
enter
cmp
or
or
and
xchg
movsb
sub
dec
xor
clc
out
push
inc
adc
rorl
jne
mov
mov
lods
fistl
add
adc
lock
sbb
jne
repz
fcmovnb
fisubl
inc
push
cmp
jns
cmp
dec
pop
push
jae
xor
sbb
lret
movsl
dec
mov
testl
pop
test
cmc
std
push
sbb
xor
xchg
data16
inc
add
xor
mov
push
cmp
add
xchg
in
out
dec
outsl
xor
gs
sbb
jmp
mov
pop
pop
jns
mov
pop
shrl
adc
movsb
add
pop
imul
outsl
ljmp
cmp
push
sub
fadd
sbb
mov
daa
aaa
jbe
lahf
and
bound
sbb
pop
loop
test
es
push
dec
jg
pop
lret
mov
in
xlat
mov
imul
in
adc
inc
imul
xor
add
and
cltd
rclb
jnp
dec
pop
mov
rcll
cmc
sbb
sub
xor
jg
jmp
jae
dec
mov
ss
clc
pop
js
adc
mov
aaa
ror
mov
dec
lods
adc
jg
pop
dec
pop
ret
rep
repnz
movsl
xor
add
jg
call
lahf
fildll
movsb
cmp
shr
fldl2e
clc
add
adc
push
or
or
mov
add
mov
and
cmp
push
sbb
jge
sub
adc
popa
test
push
push
push
jno
mov
cmc
jle
lods
push
inc
sbb
sub
lcall
or
jge
sub
lods
mov
and
mov
cmp
mov
mov
pop
out
jge
in
lret
cwtl
mov
aas
jae
cmp
ljmp
inc
and
xchg
xor
jne
in
std
fimull
das
js
mov
sub
iret
dec
cmpsl
mov
sahf
je
add
sbbb
mov
or
cwtl
mov
loopne
push
scas
loop
adc
fistpll
je
dec
test
mov
arpl
sub
stos
bnd
rcrl
fs
cmp
fidivrl
dec
test
fdivr
mov
sbb
sbb
cmp
dec
dec
les
mov
imul
test
cmp
and
push
jge
and
lcall
cmp
or
decb
aas
and
cmp
sbb
and
and
pop
xor
mov
or
cmp
dec
call
mov
mov
ret
fdivs
mov
clc
stos
mulb
add
dec
xor
jle
and
adc
mov
leave
cld
adc
sub
pop
test
pop
psrld
adc
mov
jns
in
jb
adc
push
sub
mov
pop
popf
or
std
pop
adc
dec
subb
ljmp
add
fstps
mov
sbb
inc
jecxz
sahf
inc
ds
filds
bound
sbb
jae
xchg
loop
xor
notb
pop
movl
jp
loop
shlb
dec
rcrb
jno
xchg
iret
inc
sub
aam
cmpsl
sbb
mov
push
jl
push
fnsave
inc
stos
pushf
lock
movsl
xchg
mov
jp
mov
push
repnz
dec
mov
inc
xor
pop
test
inc
xchg
mov
data16
loop
enter
jg
daa
push
and
jge
dec
or
mov
je
sub
imul
daa
dec
mov
cmpsl
test
cli
push
aas
shll
xchg
and
shrl
test
mov
fiaddl
clc
test
push
iret
dec
das
pop
frstor
xchg
mov
lds
mov
lcall
ret
push
jp
or
cmp
ljmp
adc
ret
push
jp
or
cmp
ljmp
adc
ret
outsb
loop
repz
or
fsubl
jb
add
xor
loop
test
xchg
insl
aad
lds
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fcoml
in
mov
fstps
dec
add
xor
or
cmp
sub
fcoml
in
mov
mov
pop
dec
add
xor
and
cmp
sub
fmull
in
mov
mov
adc
dec
inc
push
je
outsl
aaa
jb
inc
or
repz
sahf
fcompl
mov
aaa
adc
sahf
leave
xchg
dec
mov
aas
and
mov
xchg
jo
or
or
mov
pop
sbb
in
std
icebp
arpl
fsub
xor
sbb
and
inc
call
ret
call
pop
adc
add
testb
cltd
int
jl
dec
insl
lock
rcrl
pop
repz
std
icebp
int3
dec
scas
loop
fs
cmp
jae,pn
push
mov
xlat
daa
adc
mov
cld
insb
lret
in
xchg
push
push
push
fsubl
cmp
and
mov
pop
dec
inc
repnz
mov
jnp
imul
inc
addb
pushf
rorl
pop
adc
sub
dec
or
cmp
sub
lcall
lock
mov
sbb
aaa
add
ss
js
js
mov
int3
fcmovbe
loopne
mov
addr16
cmp
and
pop
inc
dec
adc
pop
mov
test
xchg
xlat
in
out
loopne
ret
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
enter
and
cmp
cmp
out
sub
je
mov
mov
hlt
or
mov
pop
lret
sahf
push
pop
rorl
jecxz
sahf
sub
imul
xchg
push
push
cmp
ret
or
je
lret
add
push
sub
rcl
add
fsubrl
inc
mov
dec
imul
shll
fisubrs
push
cltd
je
insl
mov
or
je
jnp
imul
push
fucom
fxch
cli
xlat
fstpl
movsl
cmc
stos
sub
mov
sub
cmp
push
dec
aas
fdivrs
lahf
jle
jle
sub
mov
xchg
push
mov
mov
rolb
leave
pop
inc
aam
aam
pop
int
lock
scas
lea
aad
add
jno
xor
mov
jg
sbb
ret
lock
sbb
mov
mov
mov
mov
mov
test
mov
push
outsl
mov
sahf
js
cld
mov
xlat
dec
pop
and
push
lods
fmull
mov
xor
sub
dec
adc
sbb
shll
icebp
test
mov
sub
xlat
je
add
out
outsb
aam
rclb
inc
inc
jo
sub
hlt
mov
jecxz
movsb
mov
sub
popa
xor
cwtl
mov
sbb
jmp
sub
ret
push
inc
int3
sub
mov
pop
and
push
xlat
test
inc
push
add
ret
xor
mov
inc
add
adc
cmp
lods
ss
inc
mov
mov
cmp
push
out
inc
call
imul
add
xlat
cmpsl
pop
pushf
add
cmc
lahf
sbbb
jl
mov
sub
adc
jbe
pushf
add
sbb
mov
push
sub
xchg
orb
adc
sub
mov
sub
xor
lahf
std
sbb
add
loope
inc
shlb
or
push
fwait
mov
add
add
fcoms
xchg
mov
jp
add
push
add
xchg
cmp
push
push
cli
cs
mov
aam
popf
mov
push
mov
pop
push
jg
or
jo
daa
loope
insl
call
push
insb
scas
sbb
js
sub
mov
dec
push
out
mov
mov
insb
movsb
cld
pop
jg
js
and
inc
scas
out
scas
push
popf
xor
sbb
xor
xchg
shlb
mov
add
ja
jecxz
out
ss
addr16
mov
icebp
leave
rorl
bound
cwtl
add
lods
push
jbe
dec
stos
data16
mov
cld
roll
mov
clc
fcmovne
pop
or
in
mov
sbb
sub
loop
js
mov
add
pusha
loope
in
jo
xor
jo
outsb
shll
adc
sbb
sbb
ds
fwait
scas
jle
clc
lods
call
cld
jnp
iret
not
and
lahf
or
addr16
cmp
cli
mov
enter
loope
push
mov
xchg
xlat
pop
pop
shl
cmc
sbb
and
add
ds
mov
ljmp
mov
bound
cs
setg
or
test
stos
cmp
sbb
sub
xor
cwtl
xchg
mov
dec
in
mov
sub
mov
into
or
mov
or
xchg
add
inc
in
dec
mov
stc
mov
jae
out
sbb
ss
pop
in
cmc
arpl
sbb
or
push
dec
test
dec
sub
in
push
rcrb
mov
pop
inc
push
adc
out
inc
or
cmp
push
test
dec
xchg
roll
dec
inc
pop
daa
push
jne
sbb
push
pop
fwait
cmp
stos
vmovntps
xor
lahf
pop
pop
or
cmp
dec
insl
pop
jecxz
ficoms
aad
sbb
dec
mov
das
cli
mov
arpl
decl
test
xchg
sub
xor
in
pop
in
or
repz
mov
xor
rol
and
sbb
jno
jno
sahf
pop
rclb
int3
adc
mov
lea
sbb
or
adc
ja
fucomi
sbb
dec
outsb
jne
aam
je
sbb
push
into
stos
int
lret
dec
shrb
pushf
ja
jecxz
sbb
enter
mov
lahf
add
or
stos
push
mov
or
clc
xchg
pop
add
and
cmp
lret
mov
test
insl
in
ret
pushf
cmp
mov
loopne
dec
inc
and
xor
testb
cmpb
inc
or
sbb
mov
sub
scas
mov
xchg
shr
pop
and
mov
sbb
int3
adc
xchg
cli
fucomi
dec
dec
add
mov
sub
jne
pop
jnp
mov
fwait
jl
enter
popa
xor
jne
inc
mov
fs
mov
and
pop
mov
push
aaa
call
in
xchg
outsb
push
stos
pop
mov
pusha
test
mov
lea
js
sub
xor
in
or
jmp
mov
clc
add
ss
sarl
mov
inc
or
fsubr
loope
pusha
add
sbb
cmpsl
mov
push
sbb
adc
leave
rclb
fadd
shrb
testb
outsb
cmp
fcoml
pop
pop
lret
lods
test
les
lret
push
mov
jae
mov
ljmp
lock
popa
aam
pop
adc
push
ret
lds
lods
ds
jne
pop
push
xchg
data16
cmp
imul
or
or
lods
jle
aam
push
ror
mov
cmp
xchg
out
subl
stc
out
xchg
sbb
pop
mov
pop
push
fsubp
sbb
lods
outsl
push
aas
ret
jno
sbb
push
in
sub
insl
jno
testb
mov
in
adc
rcrb
inc
cmp
cmpsb
or
incb
fdivs
std
xor
roll
xor
insl
push
push
mov
add
repz
adc
out
mov
sbb
outsb
dec
inc
pop
repnz
jp
sahf
cli
mov
push
mov
jbe
cmp
hlt
cmc
xchg
aad
push
push
push
pop
ret
and
mov
test
movsb
cmp
push
mov
xor
fbld
int3
enter
iret
repz
adc
loop
pop
movsl
out
mov
in
call
in
jnp
sub
in
mov
xchg
cwtl
pop
and
pop
stc
cs
js
mov
push
push
dec
das
and
mov
js
push
or
mov
cmp
mov
outsl
loopne
push
outsb
push
or
push
xor
loope
and
call
ds
leave
cld
and
mov
int3
push
roll
jae
pop
stos
xor
pop
jg
rcr
or
mov
and
inc
leave
dec
std
mov
or
int3
xchg
pushl
pushf
mov
cmp
fldl
adc
shll
das
jns
lret
movsb
jg
mov
pop
lcall
clc
jle
or
xor
out
dec
loope
ja
adc
fsubs
xor
test
jg
push
cli
dec
sti
pop
test
leave
jg
jns
jecxz
xor
lock
jmp
mov
cmpsl
ja
icebp
inc
mov
mov
add
leave
loopne,pt
call
fildll
cmpsl
xchg
shll
add
into
movsb
aam
cli
jecxz
cmp
mov
ret
jle
jecxz
js
mov
call
mov
repnz
jbe
add
test
jg
cltd
dec
jo
or
jo
popa
popl
aas
pop
imul
sbb
mov
call
mov
jne
adc
leave
das
pop
outsb
popf
mov
sbb
push
jns
pop
mov
sub
adc
popa
pop
push
mov
xchg
xor
mov
rcrl
or
jl
sub
push
cmp
jns
dec
imul
ss
sbb
enter
push
jns
mov
imull
sbb
push
add
rorb
xor
adc
inc
addr16
dec
inc
out
mov
push
jo
mov
roll
sbb
pop
rorl
loop
outsb
adc
mov
xorl
mov
mov
push
in
cmp
lret
sbb
in
mov
jmp
aad
pop
or
aaa
aas
or
mov
jp
fdivrs
adc
pop
sub
xchg
jmp
cmp
aad
popa
scas
push
std
push
pop
ds
imul
and
out
lea
ja
aaa
jb
aas
dec
cmp
in
sar
jae
ficompl
mov
test
push
pop
stc
lret
bound
push
rorb
out
lcall
stos
aad
in
ret
clc
gs
pop
out
xlat
push
xor
popf
int
dec
in
sbb
pop
loopne
cli
es
or
hlt
adc
std
xor
nop
push
adc
addr16
ja
mov
fsubl
xchg
push
pop
mov
divl
mov
notb
mov
or
jg
inc
mov
mov
ja
inc
or
iret
lret
leave
adc
mov
sub
notl
push
and
adc
out
dec
out
stos
fstpt
dec
jp
mov
mulb
jne
mov
loop
ret
inc
sti
enter
adc
sbb
mov
pop
shr
sbb
push
inc
cmpsl
jmp
js
xor
into
shlb
mov
cmp
mov
mov
cmc
lahf
mov
sub
and
mov
sbb
sub
adc
outsl
movsl
rolb
ja
loope
and
jecxz
repnz
cwtl
cmpb
fdivp
icebp
pop
jp
xchg
mov
mov
aas
pop
mov
int
cmp
sub
addl
rolb
je
mov
xchg
loope
cmpsl
xchg
mov
inc
je
add
cmpsl
or
sbb
and
fnstcw
test
lds
orb
cld
cmp
pop
clc
push
ss
jnp
fbstp
lods
sarb
adc
sahf
push
pushf
ljmp
pop
lods
lahf
push
pusha
xor
mul
inc
movsb
mov
sub
andb
xor
ficomps
pop
add
les
xchg
fld1
repz
or
mov
fstpt
add
pop
pushf
rolb
dec
sub
fwait
xchg
mov
in
aas
and
arpl
xor
and
inc
and
pop
pop
push
sbb
lock
xor
sbb
je
repz
mov
xor
adc
fmul
jb
sub
aad
pop
sbb
out
or
mov
cmp
push
and
daa
addr16
bound
inc
movsb
popa
cs
sub
adc
inc
dec
in
xchg
xchg
call
and
pop
sub
xlat
into
xor
xor
test
or
and
pop
out
leave
sub
jbe
or
test
cmpsb
out
jge
mov
movsl
pop
mov
push
jns
lock
jmp
dec
jle
mov
mov
mov
outsb
mov
or
lock
lcall
add
inc
lret
inc
arpl
push
inc
fldcw
loopne
push
ret
cmpsb
insb
out
int
jne
rep
stos
jge
push
jnp
push
xor
xchg
pop
jg
js
divl
xchg
dec
pop
inc
pusha
loope
inc
in
xor
out
fnstsw
imul
dec
ret
cmp
push
outsl
push
pusha
test
jbe
stc
inc
add
cmp
and
cmpb
cmp
movsb
and
push
subb
jae
xchg
loope
outsl
nop
pop
fs
pushf
and
mov
rorb
jno
cwtl
bound
add
push
push
gs
xchg
in
repz
mov
pop
cmp
scas
lods
jl
scas
add
pop
dec
jbe
sub
lret
lcall
test
sub
lea
cmpsl
fwait
nop
xor
loope
cwtl
ss
jo
push
loop
xchg
cwtl
sbb
xor
hlt
addr16
sub
arpl
mov
loope
lret
mul
mov
lcall
int3
fwait
ret
push
movsb
jb
jno
jbe
cwtl
aaa
andb
js
int3
and
aad
xlat
in
jl
bound
addr16
pusha
stos
jbe
xchg
sti
ja
stos
lcall
mov
mov
xchg
mov
pop
adc
rcll
out
aam
out
movsb
and
jbe
enter
inc
add
pop
popa
mov
push
js
int3
inc
push
push
loop
sub
jns
stc
cmc
idivb
adc
hlt
xor
add
int3
fbstp
jp
daa
loop
adc
jb
les
cwtl
cmp
sbb
mov
addr16
inc
js
inc
xchg
das
cwtl
dec
jae
lds
movsl
popa
and
pop
lock
insb
xchg
out
je
aam
mov
roll
imulb
lods
or
mov
jmp
adc
imul
sub
insb
and
mov
push
cmp
mov
jns
pop
aad
cmp
loop
pop
mov
in
pop
jns
testl
inc
jg
inc
mov
bound
icebp
dec
adc
nop
cmc
ret
fists
jb
movsb
fwait
xchg
aas
jno
and
fldt
xor
push
jle
pop
outsb
adc
mov
popf
cwtl
sti
pushf
pop
sbb
or
fildll
mov
mov
lcall
ficomps
cs
mov
adc
les
jb
fwait
je
insl
jg
cli
push
push
aas
out
mov
aad
int
sbb
push
mov
mov
out
cmp
and
push
adc
push
pop
sub
lods
lret
jmp
sub
add
lret
mov
mov
adc
call
and
sub
xchg
push
xor
dec
mov
mov
mov
sbb
jae
in
ret
lcall
or
or
add
mov
and
ret
cs
ja
mov
cmc
mov
dec
sub
add
or
pop
pop
ljmp
out
adc
lahf
out
mov
cltd
cmp
stos
mov
mov
pop
sub
es
subl
test
lock
sub
push
xchg
push
call
mov
int3
and
insb
dec
cmp
sbb
mov
btl
xor
cs
call
mov
dec
gs
shll
sarl
sub
aas
inc
cltd
add
mov
fwait
aam
pushl
orb
gs
lahf
cmc
cmpsb
imulb
int
push
xor
xor
fisubs
sbb
mov
into
cmp
xchg
sub
mov
inc
mov
mov
mov
mov
lret
push
ficomps
adcb
xchg
icebp
cmpsb
rcl
xchg
dec
pop
icebp
out
push
iret
mov
xchg
shlb
push
mov
jp
jb
jnp
mov
mov
lock
xlat
inc
out
mov
call
xchg
add
test
mov
sub
add
pop
jle
adc
pop
mov
pop
jae
aam
and
mov
shr
shll
dec
imul
or
test
call
or
aam
movsl
out
orl
xor
dec
dec
push
mov
add
or
fwait
mov
add
test
jle
xor
add
nop
pop
lods
shr
jmp
in
inc
add
sbb
iret
xor
xchg
xor
js
jl
ret
aad
jnp
pop
dec
dec
pop
jp
inc
popf
jae
incl
jmp
jae
fcomi
clc
sbb
pop
gs
sbb
aas
in
dec
xchg
mov
arpl
pop
cmp
push
jno
mov
divl
addb
xor
cmp
sbb
mov
mov
cld
pusha
cmp
repz
xor
lods
imul
sbb
fsubrs
stos
sbb
sti
and
cmp
push
lret
ja
xchg
inc
shl
pop
sti
inc
push
mov
sbb
pusha
test
fistpll
adc
test
mov
push
dec
dec
call
test
lcall
cltd
mov
int3
pop
daa
int
fistps
lea
mov
mov
cltd
mov
movsb
mov
out
insl
sahf
sbb
shrl
gs
push
mov
ljmp
scas
dec
cltd
mov
adc
fld
stc
test
mov
hlt
jbe
sub
cmc
jo
outsb
clc
cld
cmpsl
jne
mov
xchg
gs
adc
imulb
sub
repz
cmp
mov
inc
pop
lods
cli
mov
leave
lahf
inc
jecxz
fcoms
inc
dec
push
push
jnp
call
add
mov
mov
push
push
mov
jo
pop
push
into
adc
sti
push
pusha
mov
and
push
data16
lods
add
jno
jo
or
xchg
arpl
lret
js
pop
cmp
pop
in
sub
adc
bound
fldt
mov
repz
push
xchg
push
dec
mov
pop
inc
imul
test
jp
sbb
leave
cmp
sahf
jle
fnsave
mov
jns
jp
cli
cli
dec
jns
pop
and
outsb
add
js
mov
adc
lret
pusha
sub
icebp
sbb
insl
es
lods
sar
aaa
push
ljmp
icebp
fmull
jl
cli
daa
add
fnstenv
push
outsb
push
or
inc
pop
inc
stc
adc
and
push
rcr
cmp
xchg
jmp
aam
add
je
jp
addr16
push
inc
cs
lods
add
cmpsb
cmpl
pop
int3
push
movsl
insb
xchg
and
dec
lock
jp
jg
and
insb
xchg
shl
adc
icebp
imul
xchg
in
out
loopne
and
inc
pop
fistps
outsb
jp
xchg
call
repnz
popf
popf
adc
or
pop
in
push
inc
push
xchg
sahf
cmp
cmp
out
lret
mov
arpl
in
mov
in
fisttpl
div
jmp
mov
sbb
fs
and
mov
xchg
das
mov
sbb
mov
or
sbb
shlb
push
bound
adc
std
test
pop
adc
mov
push
lods
enter
cs
inc
lcall
xchg
cmp
mov
pop
pop
dec
mov
fdivs
add
in
adc
mov
andl
xchg
scas
lods
inc
ljmp
call
je
pop
out
call
sub
inc
cwtl
sbb
and
jg
pop
iret
jp
sub
mov
mov
and
js
pop
insl
dec
dec
imull
jnp
testb
sti
icebp
cld
sub
fnsave
add
imul
cmp
or
push
sbb
pop
js
lods
pop
jae
fmul
inc
inc
into
in
popf
cmp
repz
or
fucom
andl
add
es
ds
pusha
mov
inc
or
xchg
sub
lret
inc
inc
dec
xor
pop
mov
and
lret
xor
push
pop
ss
or
adc
adc
pushf
in
xor
dec
pop
js
hlt
mov
dec
clc
inc
cmp
cwtl
scas
fimuls
jecxz
dec
leave
mov
lods
inc
je
mov
adc
dec
and
and
scas
and
push
adc
dec
adc
test
dec
imul
loope
les
mov
inc
jb
scas
ljmp
lea
or
cwtl
fs
aaa
clc
jo
jle
sbb
cmp
push
jae
int
xchg
shl
roll
ja
push
mov
mov
dec
cmpsb
das
and
adc
pop
ljmp
jmp
xchg
add
mov
sub
mov
adc
fdivs
lret
xchg
imul
icebp
rolb
out
stc
push
cmp
mov
daa
movntps
add
or
outsb
cmp
xchg
or
data16
out
frstor
lea
fwait
aad
cmp
sbb
test
xor
les
js
dec
inc
adc
out
and
pop
ret
and
sti
xor
call
cwtl
insb
jg
dec
ljmp
test
lods
pop
or
call
movsb
jmp
xchg
aaa
and
push
pop
pop
jb
mov
outsl
push
nop
mov
outsl
aaa
sbb
mov
pop
sub
and
xlat
jl
ds
es
lods
push
pop
mov
add
in
dec
cld
and
mov
jmp
out
nop
cmpl
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
adc
xor
push
or
cmp
sub
fcoml
in
mov
mov
adc
xor
fildl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
add
adc
and
xor
cmpsb
jno
cmpps
inc
fwait
ja
data16
rolb
es
es
add
adc
and
xor
popa
cmpsb
adc
addl
push
movsb
push
shll
loope
icebp
add
adc
and
xor
popa
cmpsb
jno
addl
jne
outsl
lea
test
cmpsb
dec
popa
mov
sti
cmpsb
mov
xlat
add
jns
aaa
cli
sbb
movsb
popa
push
lods
xor
orl
xchg
push
mov
cmp
sar
and
jmp
jmp
stc
mov
pop
fisubs
stc
repz
xchg
or
lahf
cmp
adcl
dec
test
in
mov
arpl
xor
addr16
inc
stos
push
push
imul
xor
rcll
es
sub
sub
cmp
movsl
fdivp
cmp
lret
mov
cmpsb
jno
jle
test
pop
data16
xchg
outsb
shll
movb
lahf
arpl
jbe
dec
fimull
pusha
clc
test
aam
dec
rolb
xorl
add
adc
and
xor
popa
cmpsb
jno
addl
push
roll
ss
mov
add
jo
push
jecxz
icebp
add
add
sbb
add
bound
push
xchg
mov
jge
imul
pop
add
sub
push
movb
pop
movsb
jne
data16
movsl
mov
inc
dec
xlat
jae
push
mov
cmpsb
jno
addl
push
roll
ss
icebp
add
adc
and
xor
popa
cmpsb
jno
addl
push
roll
ss
icebp
add
cmp
mov
in
rol
ss
xchg
inc
xchg
pop
cmc
sarl
popw
mov
subb
daa
rcll
mov
xorb
fsts
sub
add
or
dec
jbe
stos
inc
add
cli
sub
xor
ret
mov
or
shrl
mov
data16
sarb
rcrb
cmc
adc
mov
lret
fisubrl
mov
add
insb
mov
adc
hlt
sti
popf
out
cmp
jmp
push
addr16
ljmp
dec
stos
scas
scas
stos
clc
add
xorl
fdivp
inc
jp
ja
xchg
push
or
sub
mov
mov
dec
stc
js
add
aas
mov
push
inc
pop
aaa
jnp
push
or
lcall
pop
inc
rcrl
ficomps
pushl
addr16
jbe
pop
mov
adc
xor
or
test
or
pop
ret
adc
or
std
mov
or
or
push
pop
xchg
fisubrs
rcll
cld
push
dec
and
sub
cmp
cmp
stos
imul
push
adc
out
cmpsl
and
jge
xlat
mov
mov
testl
inc
stc
jmp
jo
and
lcall
sub
loope
lds
jp
mov
fimull
mov
loopne
mov
inc
jp
xchg
stos
jne
xor
lds
xor
inc
js
and
inc
scas
fbstp
jb
push
lea
ds
es
pop
add
lods
and
jne
add
icebp
jae
std
test
sbb
mov
popa
dec
mov
mov
mov
dec
push
push
cmpsb
mov
mov
fstpl
sbb
mov
mov
pop
fiadds
in
and
or
movsl
and
pusha
ss
xor
mov
stos
push
pop
pop
add
push
aad
cmp
cld
hlt
mov
push
mov
mov
das
dec
adc
push
xchg
shrl
in
xchg
aaa
out
jno
push
and
adc
add
cmp
inc
test
pop
outsb
mov
aas
dec
jecxz
xor
out
sbb
imul
out
adc
adc
lahf
mov
push
xor
imul
lcall
mov
mov
mov
ret
mov
inc
mov
mulb
push
cmp
pushf
repnz
inc
mov
mov
ss
insb
shll
xor
leave
or
in
push
inc
fcoml
pop
mov
aad
or
sub
add
ja
or
or
loopne
push
movsl
add
push
push
cmp
cmp
in
sbb
xor
stos
outsl
loope
xor
sub
dec
sub
leave
sti
cpuid
adc
push
xor
pop
popa
in
mov
call
mov
aam
adc
mov
and
lcall
lds
lret
push
fsubrs
popa
sub
stc
dec
push
mov
pop
xchg
fcomip
shl
scas
das
sbbb
or
pop
into
cmp
mov
push
push
push
movsb
jnp
out
popf
ret
mov
stos
add
repnz
das
scas
or
inc
daa
lret
push
jle
or
sbb
dec
subl
fsubrp
cli
idivl
test
lods
mov
jb
inc
outsb
jne
push
sarl
mov
push
jne
psubusb
sbb
cld
push
lds
cld
aas
xlat
cmpsl
inc
and
push
outsl
sub
pcmpgtw
pushf
test
gs
sarl
cmpsl
inc
mov
push
nop
cmc
sbb
lret
cmp
es
cmp
dec
ret
out
fwait
push
push
rorl
dec
jnp
dec
out
xchg
fs
imul
mov
jne
repnz
addl
movsb
imul
dec
in
and
xchg
pop
mov
dec
adc
jne
hlt
out
fistps
inc
ret
adc
dec
adc
sub
xchg
pop
movsb
sbb
sub
sbb
cli
jns
lods
xor
jp
pop
fs
pop
outsb
push
inc
call
pop
xlat
gs
in
inc
mov
data16
cmpsb
xlat
cmpsb
xchg
jmp
add
stos
dec
insl
xor
fucomi
push
lds
stos
test
movsb
ja
popf
bound
adc
ret
mov
mov
push
xbegin
stos
push
sbb
push
xor
push
mov
mov
mov
pop
xor
inc
mov
adc
out
or
cmc
ds
and
mov
pop
mov
out
sarb
imul
xor
in
lahf
ss
sahf
xlat
push
pop
in
lea
xchg
dec
and
mov
xor
jno
mov
push
add
stos
mov
insb
or
sar
dec
fs
movsb
jne
lock
push
xchg
ret
xchg
les
and
lcall
call
iret
mov
lret
mov
sbb
xor
stos
out
mov
cmp
rorb
xchg
pusha
inc
add
add
rorl
push
scas
mov
cmc
mov
cli
push
dec
shl
pusha
add
imul
lahf
cmpsl
cltd
scas
mov
jns
mov
sub
movsl
and
add
clc
adc
in
cmp
lods
js
mov
pushf
repnz
cmpsl
pusha
loopne
scas
shll
lds
or
rol
loope
ret
adc
lret
pop
dec
push
bnd
fdivrl
jbe
fcmovbe
loope
mov
mov
or
push
notl
mov
aaa
pop
and
aaa
sub
xchg
adc
aaa
add
mov
add
movsb
insl
int3
mov
enter
xchg
icebp
push
xor
fsubs
jo
mull
data16
imul
inc
and
and
or
cmpl
in
mov
lods
mov
loope
aam
cmc
mov
or
stc
gs
push
imul
sub
sub
movsb
xchg
jo
fs
aaa
jmp
and
rorb
xor
cmp
orb
pushf
call
and
mov
jp
in
dec
ds
and
icebp
test
jo
xlat
lret
inc
xlat
push
inc
popa
lods
add
hlt
cld
pop
sub
sub
mov
js
outsb
jnp
stc
xor
aam
push
mov
mov
sahf
shlb
int3
and
dec
clc
mov
bound
iret
lret
pop
bswap
fcompl
mov
test
cli
add
inc
sub
orb
jge
push
sub
cmpsb
cmp
imul
test
movsl
aam
aas
push
lcall
iret
jb
inc
int3
loope
or
fs
stc
dec
mov
hlt
push
cmc
movsl
or
pushf
rcll
adc
dec
dec
push
mov
shlb
pop
jecxz
sub
mov
inc
lcall
inc
lods
fidivrs
mov
mov
mov
xor
clc
addb
cwtl
insb
add
rcr
sub
jle
inc
mov
xchg
xor
cmp
inc
mov
xor
lret
stos
pop
adc
test
inc
out
mov
adc
insl
add
cmp
fistl
pop
and
cltd
hlt
cmp
jne
jp
pop
mov
xor
add
orl
push
mov
stc
gs
adc
xchg
lcall
shlb
cmp
jo
leave
sbb
enter
adcl
xor
inc
std
mov
xchg
push
jne
lods
bswap
addr16
leave
xchg
mov
push
jle
add
jbe
jns
xor
imul
sub
pop
fidivs
scas
andb
or
sbb
mov
dec
mov
into
push
ljmp
js
repz
out
imul
xchg
jno
dec
into
push
leave
jmp
outsl
popf
lcall
mov
dec
lods
fnstsw
add
mov
aam
fildl
jno
mov
jp
mov
xor
jns
fcoms
fsub
lock
sbb
jo
addr16
addr16
outsb
shr
int3
enter
lea
mov
dec
insl
movsb
and
insl
mov
test
mov
icebp
inc
sub
inc
sarb
adc
and
stos
xchg
mov
pop
sarb
js
cmpsb
stos
jne
cltd
adc
cmp
adc
and
bound
cmp
cmp
scas
dec
xchg
mov
pop
in
into
xchg
ja
addr16
mov
pop
ljmp
pop
mov
insb
gs
pop
jnp
daa
dec
xchg
fwait
js
or
jbe
sub
in
sub
lea
mov
repz
pop
inc
add
inc
icebp
add
test
and
adc
data16
jnp
jnp
shrl
bound
sub
sbb
aam
xor
jbe
lods
sbb
sahf
adc
repz
mov
dec
out
ds
cmpsl
rcrb
mov
dec
dec
bound
pop
out
push
stos
hlt
sbbb
jns
fwait
aaa
push
mov
fsts
jns
mov
fwait
sbb
arpl
inc
cmp
pop
push
add
filds
lock
push
jno
inc
cmpsb
jecxz
or
pop
mov
scas
jno
pop
aas
data16
jb
lds
mov
pusha
or
scas
scas
mov
sbb
lods
jne
loopne
xor
push
jge
and
mov
mov
andl
rclb
popf
inc
jl
mov
outsl
xchg
leave
xor
xchg
popf
hlt
clc
shll
xchg
dec
xor
mov
fwait
bound
stc
mov
sub
test
dec
cwtl
push
cmp
jmp
loopne
popf
rolb
loop
subl
jge
mov
dec
adc
push
pop
loop
ds
xchg
fstp
add
sub
test
push
js
jae
pop
dec
sub
stos
mov
je
inc
mov
sahf
sub
ljmp
pop
sub
out
or
cmp
jge
aas
push
jns
mov
push
xchg
pop
or
dec
fs
and
sub
lods
lods
jo
rolb
xlat
in
cli
pop
cs
out
sub
mov
cmp
jge
into
mov
movsb
insl
adc
inc
out
cmpsl
aas
xor
push
out
pop
das
pop
fbstp
jbe
cltd
lock
fildll
nop
mov
push
sub
mov
sbb
cmp
repz
mov
mov
jno
fldt
les
jae
fcoml
shrb
test
cwtl
fwait
xchg
mov
jno
repz
jne
mov
sub
mov
in
sbb
push
and
orb
push
sbb
xchg
jle
out
iret
sub
or
je
lcall
lds
or
repnz
jmpw
inc
inc
dec
int3
xchg
lret
mov
out
xor
push
and
sbb
rcl
push
imul
js
and
push
and
mov
pop
mov
xchg
in
xor
sbb
push
xor
push
push
sub
jae
std
inc
addr16
into
dec
mov
lods
add
out
sbb
shrl
jns
daa
nop
sbb
loop
icebp
fimull
test
pop
pop
pop
mov
sbb
pop
jle
dec
pop
out
adc
rclb
add
lea
cmp
lret
and
fwait
mov
mov
es
sbb
mov
and
add
ret
aam
jbe
and
adc
mov
and
dec
push
arpl
in
iret
lea
enter
outsb
push
dec
out
and
adc
out
pop
std
out
ret
and
xor
xchg
add
mov
aam
inc
pusha
stos
jne
test
jmp
subl
ret
xchg
push
imul
adc
bound
das
ja
inc
cmp
sub
cltd
xor
imul
add
add
dec
shlb
leave
jl
out
inc
jecxz
inc
into
pop
aad
jge
push
fnstsw
adc
xchg
inc
mov
fldl
cmp
jae
jnp
push
push
xor
bound
cli
push
mov
rclb
xor
mov
dec
or
push
or
jle
pop
adc
rcr
sti
add
cwtl
movsl
addr16
mov
sar
in
sub
jnp
and
xor
or
mov
cmp
shrb
xchg
xchg
mov
in
ret
fsubrl
pusha
push
ds
dec
dec
jae
adc
ja
rcll
pop
and
adc
ds
out
inc
mov
lds
sub
xchg
xchg
push
adc
outsl
in
outsb
das
repnz
fidivs
idiv
mov
mov
xchg
ja
mov
lret
inc
out
in
idivb
xor
xor
lds
pop
push
sbb
repnz
mov
sahf
movsl
cwtl
xor
stos
in
inc
shl
addr16
js
negb
mov
ja
loopne
outsl
or
mov
sbb
sbb
ret
cmp
in
mov
inc
mov
movsb
das
icebp
sbb
push
nop
dec
loope
lods
gs
mov
ffree
or
fcompl
push
outsl
xor
jae
push
push
or
cmp
mov
lcall
dec
xor
push
cwtl
fs
icebp
cmp
mov
je
sub
jle
mov
repz
push
scas
mov
std
sahf
test
ret
jge
push
imulb
add
mov
mov
gs
add
xor
int3
push
loope
das
cwtl
mov
mov
and
out
outsl
adc
push
fwait
mov
aam
fs
mov
dec
fwait
inc
adcl
mov
xchg
shrb
das
push
std
arpl
ja
in
pop
mov
stos
adc
xor
shlb
into
clc
inc
jo
ss
cmp
and
movsb
jmp
xchg
popa
add
or
sub
scas
jmp
sub
leave
sahf
nop
jno,pn
mov
push
in
mov
ffree
mov
icebp
test
xchg
scas
xchg
aam
cs
aam
mov
fisubrl
lea
pop
cmovle
push
inc
jp
lds
mov
sbb
cltd
test
sbb
std
insl
nop
dec
addr16
clc
inc
in
cld
fnsave
push
call
and
fs
push
icebp
ja
add
nop
xchg
dec
aam
testl
dec
mov
dec
shll
out
scas
stos
xchg
jle
loope
inc
rclb
xchg
pop
jmp
adc
cmpsl
fidivs
push
or
mov
lods
repz
inc
repz
insb
lret
and
icebp
jmp
jmp
std
pushl
nop
ss
cwtl
icebp
in
pop
xchg
xor
xchg
and
jnp
inc
pop
inc
in
loope
insb
aad
mov
mov
outsl
insl
xor
js
cli
xchg
adc
jmp
mov
js
ficompl
inc
push
dec
addb
push
das
sbb
addr16
cmp
jns
pop
or
loop
push
out
imul
in
loope
push
test
imul
push
ljmp
idivl
ds
pop
cmp
push
or
sub
call
cmp
test
xchg
add
rorl
add
lock
aaa
ret
adc
movsl
pop
repz
push
sub
in
mov
data16
filds
push
and
jae
es
sbb
ret
scas
jo
fdivl
aaa
pop
pop
loope
sbb
adc
push
mov
sbb
ja
cs
rorl
add
dec
jnp
int3
arpl
pop
jp
jns
fmuls
jl
rcrl
in
cmc
jg
sahf
stos
inc
sub
dec
in
mov
push
sti
pop
cli
sub
add
popa
enter
popa
fstps
incb
repnz
cmp
jnp
pop
popf
dec
insl
gs
outsl
push
sbb
lds
loopne
lret
xor
push
dec
adc
stc
out
dec
das
movsl
mov
mov
dec
lret
lahf
push
fnsave
addr16
pop
cmpsb
mov
jae
or
push
sbb
jl
call
into
je
jo
pop
fs
aad
imul
push
fdivr
out
dec
ja
lods
sbb
mov
je
push
mov
adc
add
aas
sub
mov
mov
cmp
rcr
aad
inc
inc
stc
and
int3
pop
popf
xchg
ret
xchg
lods
nop
fcompl
mov
jb
out
dec
cmp
scas
jno
and
loop
cmpsl
shrb
inc
ss
inc
mov
add
cmp
lret
ret
es
mov
scas
mov
add
cmp
adc
mov
imul
sbb
adc
xchg
out
pop
out
inc
lds
pop
jecxz
sti
inc
dec
jg
mov
outsb
pop
out
test
xchg
dec
or
fldenv
sbb
cmp
pop
push
loope
enter
cs
dec
lea
and
orl
mov
or
shlb
les
sub
fsubrs
repz
mov
xor
cmp
pop
jb
xlat
jo
out
jmp
test
enter
iret
xchg
insl
jge
cltd
jmp
xchg
dec
cmp
lret
stos
xchg
cmp
lea
xor
jnp
push
mov
push
iret
das
mov
les
push
mov
gs
mov
arpl
hlt
mov
and
pop
inc
fistpl
insb
jle
scas
sub
pop
add
pop
adc
outsl
ret
dec
cli
dec
push
push
pop
adcb
pop
repnz
scas
pop
pop
cmpb
out
cli
inc
pop
out
ret
push
shlb
push
dec
pop
and
fildl
pop
aam
mov
mov
add
fxch
sarb
test
xchg
nop
out
out
leave
and
push
jno
ds
jno
mov
dec
inc
sbb
pop
pop
int3
ss
popf
cmpsl
cmp
mov
mov
aam
or
sbb
test
mov
pop
test
xchg
mov
or
dec
push
movsl
mov
fldl
adc
dec
loope
insl
call
inc
fldenv
into
xlat
loopne
jae
in
cmc
xchg
cmp
add
fdivrs
push
pop
pop
sub
cmp
adc
daa
jne
pop
fsubrs
cmp
mov
add
jle
xchg
or
or
mov
cmpb
lret
add
dec
and
xchg
push
mov
hlt
lods
cmp
aad
add
leave
fwait
add
mov
adc
jl
sbb
mov
orl
repz
mov
in
push
pop
sub
lods
cmp
stos
pop
push
push
sub
sbb
rcrb
icebp
pop
sub
and
mov
fs
sub
in
lret
data16
adc
pop
inc
scas
lock
or
nop
rclb
jnp
fcoml
mov
cmpb
inc
jle
xchg
mov
jns
or
rol
enter
sahf
xlat
jae
pop
arpl
add
mov
jle
xor
gs
xor
mov
or
add
and
jle
aas
xor
sbb
jle
xor
cli
push
cmpsl
mov
and
shrl
sub
icebp
mov
setge
jp
lods
or
pop
aam
sbb
inc
dec
sbb
jo
shrd
jns
cmc
dec
or
inc
inc
in
mov
cld
sahf
and
ret
cli
aaa
sbb
sub
int
addb
outsb
mov
cmp
lea
jecxz
mov
mov
dec
pop
icebp
int
das
cmpsl
pop
iret
xchg
loope
ja
into
scas
lahf
mov
pop
in
dec
dec
aas
pop
pop
aas
mov
jb
ja
in
mov
pop
mov
adc
cmp
pop
sahf
push
or
das
daa
jno
ficomps
leave
xor
dec
repnz
cmp
fildll
jge
ret
cmp
and
insb
inc
add
push
inc
jns
mov
push
jbe
imul
pop
jb
cltd
pushf
aam
mov
xchg
adc
xchg
add
in
mov
sub
cwtl
add
pusha
push
xchg
jle
xchg
loopne
pop
pushf
inc
lea
repz
mov
shlb
lcall
fnsave
xor
push
pop
mov
gs
lcall
and
add
jge
insb
js
push
movsl
das
and
jbe
lea
shlb
adc
rorl
lods
hlt
stos
fwait
fwait
push
jno
scas
push
jecxz
cmp
sbb
cmp
sbb
mov
stos
loopne
xor
loope
mov
popf
mov
jne
xchg
pop
in
arpl
jo
loope
cs
inc
or
jl
adc
jp
in
ss
enter
sbb
mov
mov
mov
fidivrs
imul
jo
out
dec
fstps
faddl
jmp
add
jecxz
mov
lds
inc
jne
push
cwtl
leave
adc
out
xchg
inc
xchg
popa
cmpsb
jno
addl
push
roll
ss
icebp
add
adc
and
xor
popa
cmpsb
jno
addl
push
roll
ss
icebp
add
adc
and
xor
popa
cmpsb
jno
addl
push
roll
ss
icebp
xlat
add
adc
and
xor
popa
cmpsb
mov
addl
popa
dec
mov
leave
push
fwait
mov
stos
xchg
push
lds
lock
or
cmp
adc
popa
dec
cltd
jnp
imul
mov
test
hlt
sti
jmp
sbb
xor
or
adc
dec
dec
je
inc
imul
jb
push
stos
loop
aam
mov
sbb
pop
push
sub
aaa
and
push
ss
cmc
mov
jmp
or
jp
lret
mov
ljmp
mov
add
lock
imul
jg
cmp
sub
fisttpl
inc
movsb
jno
sub
out
lret
int3
sub
fstp
fs
or
sbb
jmp
or
imul
subb
jle
jmp
xchg
mov
inc
adc
clc
mov
imul
push
imul
scas
sub
pop
pop
arpl
push
mov
sub
push
pop
je
js
and
cmp
jbe
jmp
dec
ja
fs
rolb
jle
or
xor
test
ds
sub
xchg
fnsetpm(287
lret
hlt
sti
jmp
sbb
pushf
cmp
sub
pop
pop
dec
lcall
fcmovnbe
call
mov
xchg
sbb
inc
cmp
dec
sbb
xor
repnz
xbegin
subl
inc
cmp
and
sub
daa
xlat
mov
xbegin
sti
jmp
sbb
xor
add
adc
fs
je
inc
imul
mov
test
hlt
sti
jmp
sbb
xor
add
adc
fs
je
inc
imul
loop
stc
test
or
adc
jmp
imul
cmp
cmp
stos
sbb
fisttpll
lahf
add
decl
jmp
das
bound
sub
adcl
or
push
adc
jle
icebp
add
pop
xchg
pop
int3
sbb
hlt
add
push
pop
dec
in
sbb
add
or
sbb
lahf
or
cld
push
cmp
and
arpl
mov
jno
repnz
imul
mov
test
add
jecxz
call
test
xchg
sub
jo
or
jg
xlat
pop
and
mov
in
out
sahf
into
mov
cwtl
push
xchg
cli
mov
push
pop
push
repnz
mov
cmpsb
subl
movsb
jle
jo
mov
fwait
pinsrw
lods
test
jmp
in
jl
cmp
shlb
bound
xchg
imul
imul
in
scas
jne
arpl
or
inc
lock
mov
jl
sbb
insb
inc
repnz
xchg
cmp
sub
outsl
lahf
push
scas
sti
movsl
std
aas
je
adcl
orl
andb
stos
std
sbb
mov
inc
mov
icebp
pop
add
ja
divl
jmp
js
popf
fs
and
mov
cmp
lea
cmpsb
jg
xchg
aad
or
sbb
out
jl
xchg
sbb
mov
lds
jg
cmp
scas
push
out
pop
dec
std
add
loopne
pop
push
popa
lret
jno
mov
js
mov
mov
pop
sti
loopne
dec
xchg
xchg
xor
repz
pop
jl
inc
add
cwtl
cmp
insb
pop
es
mov
xchg
pop
roll
mov
dec
cwtl
inc
movsb
aas
shrl
xchg
or
pop
outsb
mov
ret
outsl
fisttps
sub
aad
adc
and
rorl
test
mov
daa
or
mov
mov
push
rcr
mov
mov
mov
push
sub
fwait
arpl
adc
dec
movsb
add
xor
pop
and
loop
aam
pop
rep
push
fcoms
adc
sbb
fs
dec
pop
iret
mov
mov
sbb
fldl2e
adc
divb
jno
jae
mov
in
stc
dec
jge
ret
cli
fidivl
out
inc
inc
inc
sub
addr16
pop
jl
xor
lock
push
dec
imull
nop
and
push
jmp
jg
jno
cltd
or
push
clc
xchg
pop
sbb
out
push
lods
fldenv
mov
mov
sub
pop
test
fs
fs
cmp
out
insb
scas
dec
fimull
fistl
loop
mov
jne
push
outsl
pop
mov
sbb
cmp
or
or
shlb
jnp
jle
mov
mov
inc
mov
xchg
cmc
cmp
sbb
daa
xchg
lods
lods
cltd
aam
je
jl
mov
inc
xor
popf
adcb
aaa
push
cmpsb
ret
loop
fldln2
addb
subl
dec
popf
push
xor
bound
inc
push
icebp
xchg
fsubl
or
ds
mov
out
pop
gs
jmp
push
mov
icebp
je
pop
pop
and
mov
in
mov
dec
inc
xchg
inc
sbb
ja
xchg
pop
add
ds
jmp
enter
das
add
in
pop
xchg
cwtl
push
call
push
pop
push
xchg
popl
cmpsl
jne
push
call
js
sub
cli
enter
lcall
mov
pop
jnp
cltd
xchg
push
jmp
sti
ret
incb
insb
sbb
inc
popa
into
shll
das
mov
movsl
push
addr16
loop
push
add
xor
inc
daa
pop
mov
insl
xchg
fistpl
pop
push
mov
scas
andb
test
jo
jnp
repz
or
addps
jnp
shr
fstpl
shll
adc
xchg
loop
call
cmp
cli
pop
lcall
das
add
ja
jle
sbb
call
cmp
sbbb
enter
in
adc
xchg
adc
mov
push
jp
inc
rorb
sbb
fldl
stc
push
pop
aam
or
mov
repz
insl
hlt
push
mov
xchg
xorl
lahf
mov
movsb
sti
jp
div
sub
jne
mov
xor
mov
cmp
int
pop
push
push
sbb
imulb
popf
in
leave
shl
and
cs
mov
out
add
xor
sahf
adc
jge
sarl
cmp
stc
sbb
jnp
push
sbb
xor
repz
rorl
lea
cwtl
and
lods
lock
mov
lods
or
lcall
lds
push
sub
mov
xchg
fcmovnu
inc
mov
mov
pusha
fistpl
mov
mov
mov
xor
test
or
sbb
push
adc
pop
out
lods
sbb
and
fstpt
fwait
negl
outsl
out
ljmp
enter
xor
lods
and
test
jle
rcpps
inc
in
call
and
and
jno
fst
sar
icebp
sbb
push
sub
stc
out
imul
mov
mov
std
xor
xchg
loop
lcall
ljmp
cmc
adc
sbb
out
hlt
pop
lret
dec
sbb
aam
or
pop
mov
sub
rcrb
dec
stc
in
mov
lods
sahf
mulb
xor
cmp
in
outsl
shl
roll
xorb
sub
jae
les
dec
ret
outsb
ss
clc
adc
xor
push
jae
cmp
repz
cmp
xchg
pop
shlb
lods
mov
xor
xchg
shrl
mov
pushf
jb
dec
ljmp
lods
pop
test
jne
popa
jle
mov
mov
mov
jno
xor
sbb
les
mov
xlat
scas
mov
sbb
rcll
lret
mov
mov
ljmp
sub
in
stos
loopne
out
or
sbb
cmp
mov
rorl
insl
mov
push
les
ret
inc
adc
inc
in
std
mov
call
inc
jecxz
repz
jno
lods
daa
cld
cmp
sbb
ret
dec
pop
out
mov
fwait
sbb
sub
add
push
inc
imul
xor
lahf
pop
inc
mov
subb
mov
sub
je
in
inc
pop
fs
or
xchg
or
idivb
add
enter
shlb
out
or
push
push
cld
adc
lods
adc
aad
sti
hlt
xchg
sahf
pushf
push
sub
inc
mov
sbb
sbb
mov
cmp
movsl
in
mov
lods
loopne
mov
clc
cld
repnz
jg
add
push
inc
jnp
fstpl
push
pop
xchg
imul
movsb
or
call
sub
imull
fcomp
xchg
mov
nop
jmp
xor
rolb
sbbl
iret
dec
add
dec
stc
int3
rorb
xchg
sbb
stc
aaa
sbb
fsubr
repnz
mov
lods
in
stos
pop
push
fdivl
xchg
jecxz
add
std
mov
cmp
sbb
orl
leave
ret
adc
push
jbe
popa
sub
fsin
cwtl
repz
xlat
mov
jne
cmp
mov
fcmovbe
test
aam
in
dec
mov
shl
dec
dec
aaa
and
lcall
and
sbb
mul
and
ficoms
rol
jp
stc
dec
inc
mov
dec
push
int3
xor
iret
lcall
test
shlb
or
pop
fstp
adc
mov
insb
jl
sub
mov
mov
rorl
mov
pusha
xchg
std
inc
jne
xor
dec
bound
js
push
cmp
and
das
mov
adcb
mov
inc
divl
or
fs
ja
mov
js
es
cli
loop
jae
je
pop
sahf
push
xchg
aas
adc
fmuls
mov
cwtl
insb
adc
or
ds
insb
or
push
fmuls
fldt
push
cmp
dec
jge
jmp
or
mul
or
stos
loop
mov
mov
push
sbbl
test
sbbb
push
loop
cwtl
in
sub
rorb
jg
push
mov
fwait
test
insb
sbb
and
pop
popa
pop
daa
flds
mov
jl
dec
mov
insb
or
sub
jle
cmp
and
pop
ret
stos
adcb
cmc
ljmp
xor
adc
dec
in
xchg
cwtl
mulb
stos
cmpsb
xchg
jae
test
mov
sub
notl
sub
xchg
inc
mov
fistl
ljmp
rolb
and
pop
std
and
xchg
rorl
stc
test
push
icebp
enter
jg
mov
add
xor
aam
or
cmp
ret
sub
pop
lahf
and
sbb
cmc
in
push
iret
or
imul
pop
cli
and
xchg
ds
mov
push
rclb
pop
push
fs
lcall
jg
xchg
xchg
sbb
insb
shll
leave
sbb
sti
cmc
test
jno
movsb
insb
test
test
cmpsl
mov
push
or
and
mov
fadds
cs
cmp
enter
popf
je
out
mov
push
and
leave
idivl
push
fs
xchg
jns
push
test
dec
data16
add
in
mov
dec
lods
cmp
mov
fcoms
mov
mov
xchg
jae
aam
sahf
jb
push
dec
das
daa
or
xchg
shl
inc
push
sbb
xchg
mov
jns
fcomp
add
lcall
orl
das
jg
mov
mov
sub
rcrb
mov
loope
out
popa
subb
pop
fcomps
sub
cli
push
es
add
mov
or
jns
sub
pop
repnz
pop
fs
addl
outsl
rorl
lahf
adc
insb
ljmp
adc
xchg
leave
bound
call
jp
andl
ret
loop
pop
adc
pop
adc
jns
xchg
sarl
aam
cmpsb
mov
in
push
sbb
sbb
or
adc
insb
sub
push
cwtl
cmp
pop
or
xor
mov
sub
pop
aad
mov
jne
and
loopne
imul
imul
jno
fmull
jge
push
sti
mov
sbb
es
int
cld
mov
sub
mov
mov
fimuls
movsb
pusha
popf
dec
ret
loop
roll
xlat
repnz
dec
jecxz
fmull
mov
xadd
mov
xor
jno
out
jl
xlat
jecxz
mov
rcll
lea
cmc
xchg
sarb
ficoms
popa
mov
mov
push
sti
pop
dec
shrb
sbb
sub
xchg
loope
inc
inc
jp
outsl
scas
inc
jle
xchg
pop
adc
stos
into
testb
test
dec
push
mov
out
mov
jne
popa
jne
lods
jbe
call
mov
mov
int
ljmp
jle
movsl
outsl
lock
stos
leave
add
or
sti
mov
mov
cmp
and
icebp
shr
ret
lret
rclb
mov
rclb
cmp
add
in
push
dec
jae
mov
jg
and
test
adcb
mull
dec
loop
push
xor
cld
pop
xchg
mov
imul
mov
dec
loopne
inc
jb
mov
add
aam
idivb
imul
ja
jl
stos
inc
sub
adc
or
lock
adc
aam
dec
jne
iret
sahf
int
and
hlt
or
pop
rclb
rclb
scas
out
or
xor
and
dec
add
jecxz
jl
into
xchg
leave
dec
jae
dec
insl
mov
pop
mov
loop
xchg
or
out
mov
dec
cmpb
das
cmp
pop
daa
fsub
sub
and
mov
cli
inc
xor
jb
ja
or
or
icebp
out
inc
cmp
shrl
loopne
insb
fidivs
xchg
test
xor
test
les
sub
dec
xchg
xchg
inc
ds
mov
scas
ret
test
insl
clc
call
sahf
loope,pn
jns
std
insl
xchg
inc
dec
leave
gs
push
xchg
je
and
mov
outsb
movsl
cmpsb
adc
aas
cmp
mov
pop
sahf
mov
fstps
mov
stos
mov
dec
test
ds
xchg
add
movsl
add
sbb
adc
push
popa
dec
push
stos
adc
roll
xchg
jb
stos
inc
pop
cmp
fimull
filds
jb
sub
xchg
fildl
dec
imul
int3
jbe
es
push
mov
or
insb
sub
add
pusha
pop
mov
or
jnp
xchg
aam
lods
lea
or
int3
subb
ljmp
xor
inc
dec
jnp
pop
cmp
cmp
jl
add
shrl
jp
xchg
repz
jb
ret
mov
pop
sbb
sbb
loopne
push
fisubrl
cmp
cld
cmp
into
shrb
out
ljmp
fs
fidivl
inc
pop
hlt
add
dec
pop
mov
addr16
bnd
je
cld
insl
add
jmp
or
xchg
shll
pop
int
mov
stos
es
push
jns
outsb
in
cmpsl
sahf
push
cmp
lock
and
lahf
data16
pop
fs
jo
jae
mov
or
lock
or
ret
xchg
xchg
xor
imul
loope
push
inc
iret
jnp
fcomps
mov
cmpsb
addr16
inc
iret
ljmp
jp
cltd
dec
fsubs
aaa
inc
out
xor
inc
xchg
lods
fcoml
lock
rorb
loopne
mov
adc
jmp
in
push
lcall
les
xchg
xchg
pop
cmp
lret
cmc
mov
mov
or
sub
sbbl
or
rcll
push
pop
xchg
add
lret
cmpsb
or
mov
lret
mov
adc
or
lcall
push
inc
inc
aam
adcl
test
pop
adc
pop
pop
bound
jg
scas
js
add
shlb
and
sti
pop
stc
xchg
lods
push
push
push
sub
inc
mov
mov
movsb
and
rolb
push
dec
inc
mov
and
movsb
jge
cli
and
push
jnp
adc
js
mov
test
int
pop
xlat
mov
xchg
out
lds
lret
and
adc
jp
movsb
push
lcall
outsb
dec
push
ja
and
inc
loope
or
xchg
sbb
push
mov
sub
outsl
jle
in
inc
ja
sbb
mov
adc
icebp
cmp
pop
in
ss
cmp
out
mov
cld
inc
add
repnz
das
in
jo
int3
adc
xchg
mov
lock
inc
bound
inc
out
sub
add
push
fisubrs
ss
mov
or
mov
stc
ficomps
dec
sbb
lock
jle
cmc
out
cmp
imul
mov
jae
add
repnz
jl
push
inc
inc
outsl
mov
mov
and
or
inc
mov
mov
subl
push
nop
shlb
mov
out
mov
add
rolb
sahf
push
push
mov
mov
or
jp
gs
push
jb
mov
and
cld
push
aam
cmp
push
lahf
cmp
inc
das
dec
add
stos
sbb
aaa
jmp
pop
pop
fwait
dec
call
mov
rcl
mov
loopne
jns
fidivs
inc
movsl
or
lcall
push
push
pop
push
mov
xchg
mov
sti
dec
push
and
inc
dec
mov
scas
test
outsl
mov
cmp
cli
jo
mov
sub
jp
jnp
ljmp
jmp
adc
and
dec
jae
popf
mov
pop
int3
inc
clc
fs
pop
ret
mov
xor
imul
test
and
sbb
rorl
cli
dec
add
cmpsl
push
xchg
and
dec
adc
int
xor
add
jecxz
mov
xchg
leave
push
pop
rorl
pop
aad
adc
scas
sahf
jo
xor
inc
in
scas
aad
pop
mov
add
call
jnp
pop
repnz
lds
fldcw
pop
je
jns
xchg
sub
scas
ja
xor
hlt
mov
push
xchg
lods
filds
mulb
int
notl
shlb
xchg
mov
out
adc
xchg
xchg
dec
ret
mov
lods
fs
fcmovb
sbb
and
imul
inc
mov
popa
sahf
rolb
jg
push
movsb
mov
imul
repz
and
or
mov
or
sbb
outsb
insl
and
jle
mov
lret
bound
and
jnp
lock
adc
xchg
in
out
in
fbld
fmull
inc
in
cltd
dec
fiadds
or
xchg
scas
sbb
sub
add
xchg
cli
mov
dec
xchg
data16
fcmovnb
lods
xor
ficoms
addb
mov
out
loope
jne
outsl
das
add
jb
push
jcxz
fnstsw
mov
scas
or
xchg
dec
inc
or
cld
cmp
pop
sbb
jl
out
pop
add
push
outsl
test
sbb
scas
jp
pop
fcmovu
aam
adc
shll
xor
leave
xor
frstor
mov
fimull
gs
cmp
dec
scas
in
inc
jns
subb
movsl
outsl
cmp
inc
mov
cmp
insb
cwtl
sub
pop
movsl
sbb
inc
add
adc
and
cmp
mov
pop
adc
push
jge
jb
xor
ret
mov
sub
push
push
dec
bound
sahf
mov
pop
daa
sbb
mov
xchg
gs
movsb
fmull
mov
push
cmpsl
add
or
scas
call
test
inc
mov
out
loop
mov
lret
jbe
std
in
inc
std
sbb
or
rcrl
push
int
mov
das
or
xchg
cmpsl
mov
push
outsl
aam
add
sub
xchg
sbb
and
sbb
hlt
jg
mov
out
shl
loopne
and
test
mov
xchg
pop
loopne
jl
and
xchg
iret
pusha
or
cmp
pop
and
stos
jle
sbb
insb
cmpl
shlb
mov
leave
inc
shll
jle
sub
movsb
mov
cmpsb
and
sti
add
mov
insl
mov
push
into
test
ret
icebp
hlt
xor
jp
ss
push
outsl
lret
out
mov
xor
mov
out
ja
or
loop
inc
aas
mov
sbb
inc
adc
cmp
cs
pop
adc
cmp
push
hlt
decb
sti
mov
jo
pop
cs
jne
ficoms
cmp
pop
xlat
cwtl
xchg
mov
sub
mov
movzbl
jno
lret
cmp
xor
loope
jae
inc
int3
ds
cmp
sbb
out
cmp
mov
push
or
ljmp
icebp
sub
sbb
push
jl
int3
push
shlb
ds
lea
pop
aaa
pop
sbb
or
fcmovnu
leave
cld
dec
inc
xchg
xchg
loopne
adc
jne
in
lods
mov
xchg
and
push
arpl
adc
out
xor
popa
les
jg
add
outsb
dec
lcall
dec
jne
xor
arpl
jno
mov
mov
addr16
or
loopne
rorl
jl
dec
enter
in
les
dec
test
dec
sbb
aaa
outsl
lods
mov
enter
insb
pop
jne
insl
nop
pop
xor
rclb
pushf
nop
mov
out
pop
sbb
cmc
scas
adc
jne
imul
xor
repz
fbld
adc
fidivs
cmp
sbb
ljmp
add
jo
dec
cmp
inc
dec
ja
pop
jns
pop
bound
push
fbld
in
fsubrs
lock
xor
push
push
sub
stc
dec
int
data16
dec
dec
jg
jo
lods
adc
sub
and
test
xchg
lret
daa
les
xchg
fs
popf
loope
sbb
outsl
jp
cmp
jecxz
mov
repnz
xchg
into
xchg
je
psrad
movsb
dec
fldcw
cmp
push
inc
mov
fistpl
sbb
xchg
dec
pop
jo
in
or
dec
daa
dec
aad
cmc
dec
addl
cli
rcll
aaa
jbe
sbb
xor
xchg
fnsetpm(287
lret
hlt
sti
jmp
sbb
xor
add
adc
fs
je
inc
imul
mov
test
hlt
sti
jmp
sbb
xor
add
adc
fs
je
inc
imul
mov
pop
in
lahf
sti
shrb
and
sub
jnp
imul
pusha
stos
aam
in
hlt
sti
inc
jmp
sbb
or
sub
or
cmp
sub
dec
mov
xchg
jge
test
or
fldl
in
push
std
lea
inc
lods
inc
mov
ljmp
sbb
es
mov
lea
inc
out
push
mov
adc
dec
jge
or
cmp
outsb
mov
or
fisttps
mov
xchg
ljmp
lret
sbb
std
cmp
add
js
dec
jbe
inc
movsl
push
jg
sbb
push
or
or
jbe
dec
sub
shlb
ljmp
std
test
dec
repz
into
insl
in
jo
and
sub
xor
push
push
jp
arpl
negb
daa
push
ss
adc
lods
cltd
out
bound
push
xor
mov
sbbb
jle
dec
cmp
push
xor
cmp
mov
fldt
mov
sbb
nop
cmp
fstl
std
loop
jmp
and
mov
xchg
jge
or
jo
loopne
lods
fnsave
es
lea
lods
push
aam
and
pop
repnz
adc
popa
cwtl
sbb
es
test
adc
sbb
das
scas
xor
jmp
rcrl
insl
testl
xor
cmp
push
mov
pop
out
sbb
das
enter
add
push
out
lds
mov
negb
es
fldl
in
push
std
lea
inc
lods
push
mov
xchg
jge
or
cmp
push
in
push
std
lea
inc
lods
push
mov
inc
fists
sub
push
mov
dec
das
lds
sti
jle
cwtl
lahf
fcomi
sub
leave
jl
nop
pop
sub
inc
jbe
jmp
pop
xchg
aam
or
dec
gs
icebp
movb
ficoml
inc
fs
mov
inc
push
sbb
dec
push
rorl
mov
push
or
aad
sbb
mov
pushf
mov
sbb
pop
jle
mov
adc
dec
out
mov
stos
mov
cmp
mov
popa
add
add
mov
aas
ss
push
pop
outsl
pop
lcall
cltd
xor
dec
push
mov
incb
and
fpatan
xor
dec
std
mov
pop
outsb
jno
jge
push
cmp
add
scas
outsl
fisubrs
jae
mov
sbb
lea
push
push
pop
sbb
mov
sbb
xor
push
gs
testb
cmpxchg
shrb
mov
pop
xlat
lret
or
jo
cltd
jmp
lds
jmp
or
push
cmp
mov
popfw
int3
es
and
lods
iret
lods
mov
pop
xlat
push
dec
sub
add
sahf
lcall
mov
pop
jae
cmp
ret
cli
jne
pop
xchg
notb
mov
sub
and
insb
and
mov
mov
fs
xchg
lods
addr16
add
jns
jae
imul
jmp
arpl
jmp
sbb
pop
cmpsb
mov
sub
mov
xchg
cmc
je
imul
sti
mov
push
jecxz
cmc
dec
xchg
sbb
sbb
sub
rol
xor
cmc
lock
subb
mov
xor
adc
cmp
paddb
fbstp
popf
sti
jecxz
aam
cmpsb
clc
dec
cwtl
xchg
mov
pop
xchg
arpl
cltd
fstl
cmp
pop
call
loop
popf
adc
js
ret
and
pop
std
cli
lahf
popf
pushf
mov
pcmpgtd
mov
cmp
aam
jmp
or
push
ds
in
pusha
pop
mov
imul
mov
jmp
sti
push
sbb
jmp
inc
rol
push
fucomip
in
mov
cld
cs
imul
inc
pop
jmp
push
stc
inc
insb
leave
jo
lret
sarl
out
dec
sbb
cmc
or
mov
jbe
jmp
pop
sbb
ja
sar
jb
jnp
inc
dec
inc
add
mov
xor
sbb
sub
les
adc
xchg
fidivrl
inc
int
outsb
sahf
popf
sti
mulb
or
xchg
aaa
mov
mov
outsl
add
adc
pop
pop
or
stos
call
sub
and
add
lods
push
cli
pop
mov
xchg
mov
shrb
incb
and
dec
in
cltd
es
adc
mov
mov
pop
jnp
ds
call
sub
ror
xor
mov
xchg
lahf
xor
mov
adcl
dec
test
lcall
mov
andl
jp
add
xchg
mov
imul
mov
sub
pushf
inc
mov
outsl
mov
inc
sbb
ljmp
lods
add
ds
xor
xchg
in
pop
or
push
mov
mov
insl
lret
repnz
addl
pop
xchg
or
lret
dec
xor
jb
testb
ja
lds
call
jno
rorl
add
fsubrl
cmp
push
cwtl
sarb
punpcklwd
jmp
xor
adcl
push
sub
gs
xchg
xor
push
lods
into
ret
ljmp
mov
data16
roll
cmp
js
loope
test
xchg
sub
negb
mov
mov
fs
scas
scas
inc
daa
xchg
push
popa
inc
jnp
loopne
imul
fsubl
xor
mov
clc
scas
mov
repz
subb
hlt
das
jmp
test
adc
pop
sub
pop
aas
xlat
fisubs
cmpsb
mov
pushf
fistpll
test
pop
push
notb
pop
mov
mov
mov
lret
xchg
mov
xchg
daa
call
xchg
cmpsl
or
movsl
sub
push
inc
or
sub
aad
dec
shr
iret
andb
push
sub
pop
rcrl
cmpsb
and
inc
xchg
jmp
clc
jo
out
push
push
mov
jo
xchg
test
adc
pop
jnp
jg
mov
xchg
bound
fldcw
gs
sbb
ret
in
and
add
btc
data16
stos
jmp
xchg
test
dec
adc
imul
ljmp
loope
push
inc
mov
int3
lods
out
push
push
lea
jecxz
mov
sbb
mov
daa
jbe
lret
pop
roll
movsl
ucomiss
loopne
jae
jmp
stos
test
int
pop
outsb
mov
lods
insb
stc
sbb
int
hlt
mov
sti
xchg
xchg
mov
xor
and
imul
cld
dec
mov
sub
xchg
fisubl
cmp
movsb
cmp
rcrl
sbb
les
aaa
clc
xchg
rcll
dec
jge
xchg
fmuls
adc
test
cmp
fcmovu
and
imul
fisubl
notl
int
mov
mov
cmp
cld
adc
hlt
movsl
sarl
add
test
sub
lock
fwait
and
test
rolb
mov
push
sub
cmp
adc
ds
or
mov
inc
and
divl
clc
pusha
andb
inc
and
das
inc
in
add
gs
fsubr
sub
cld
or
mov
cs
stos
aad
hlt
adc
dec
cmp
pop
aaa
gs
and
mov
xor
fisubrl
call
mov
jge
movl
std
pop
adc
scas
fs
das
push
leave
jecxz
push
or
inc
into
push
cmp
xor
cmp
cmp
dec
enter
daa
cwtl
mov
mov
andnps
jmp
xor
out
out
jp
sbb
mov
xchg
push
vcvttpd2dqx
dec
xchg
stos
push
imul
pop
or
pop
jle
and
push
pop
imul
int
mov
xor
mov
cmp
ljmp
cld
push
testb
mov
popf
fnstcw
lret
adc
jecxz
pop
aaa
stc
xor
inc
sbb
sbb
pop
imulb
gs
in
sarl
sub
pop
fiadds
or
popa
int3
jne
pop
jne
lods
xor
test
pushf
pop
in
popa
pop
insb
add
mov
or
or
cmp
adc
pop
adcl
das
nop
jne
add
cmpsb
jge
xchg
push
in
pushf
jmp
stc
shll
adc
aad
push
adc
add
ret
xchg
mov
xor
int
jle
stc
and
sub
dec
and
stc
jne
loope
sub
xor
mov
jle
stos
push
mov
push
or
repnz
ljmp
add
xchg
roll
push
mov
fsubr
dec
arpl
fucomp
sbb
dec
mov
pop
and
aam
sbb
sub
enter
jecxz
and
pop
inc
mov
les
pop
push
jbe
movsb
jb,pt
and
xlat
test
aas
enter
jg
and
andb
and
lret
cmp
sbb
lea
negb
mov
xchg
les
sbb
xor
sbb
rolb
cmp
xchg
popa
popf
xor
loopne
push
cwtl
sub
ffreep
nop
gs
pop
add
subb
cwtl
mov
leave
rcl
xor
js
mov
jmp
fimuls
rcrb
mov
jne
icebp
xor
xor
push
je
fadds
movsb
arpl
aaa
add
cmp
lret
dec
pushf
das
mov
xor
cmp
mov
es
push
bound
loope
arpl
hlt
iret
sub
test
mov
rorb
stos
jbe
test
jno
movsb
loopne
jle
and
mov
adc
pop
push
inc
icebp
pop
xor
add
mov
rcll
movsb
fldcw
mov
sahf
ret
out
push
jle
scas
int
cwtl
roll
sbb
mov
js
adc
sub
xchg
jae
push
or
inc
xchg
dec
inc
inc
fiaddl
add
mov
out
xchg
ret
aad
cmp
jl
fdivs
pushf
inc
movsb
jno
sbb
insb
out
out
cmp
sti
push
cmpsl
js
xor
add
and
mov
lods
andb
pop
push
sbb
stc
nop
and
clc
std
push
hlt
aad
aaa
mov
xor
out
sti
out
in
mov
sbb
jnp
push
sar
flds
jb
sbb
fwait
loope
mov
xchg
cmp
mov
sub
int3
sub
scas
sahf
and
jmp
outsl
inc
sub
xchg
xlat
mov
sahf
ja
shlb
adc
push
inc
push
out
jle
mov
push
jp
add
sub
popf
push
call
lcall
ret
pop
jge
fists
mov
push
enter
cmp
lods
inc
or
fidivrs
pop
stos
loopne
or
pop
pop
es
ficoms
xchg
loopne
jb
es
jo
insl
mov
xchg
pop
iret
cmc
rcll
rolb
mov
sub
sbb
cmpsl
push
into
aam
cltd
cmp
in
sub
lea
arpl
pop
lods
pop
push
pop
outsb
push
mov
jl
mov
xchg
fwait
add
inc
iret
sahf
cmp
or
and
push
or
dec
push
sub
pop
pop
cmp
xlat
imul
push
sub
sbb
lods
cld
sub
sub
pop
in
mov
scas
pop
js
xchg
lods
xlat
sbb
push
lds
lds
fstpl
sub
jl
or
sbb
push
dec
inc
cltd
ret
hlt
icebp
into
movsb
mov
push
xor
scas
fwait
orb
pop
mov
push
dec
mov
scas
ret
jecxz
cmp
push
pop
add
mov
fiaddl
lcall
sub
lods
xchg
sbb
inc
out
and
rep
cvtpi2ps
arpl
loop
xor
jmp
rcll
out
fcmovnb
add
in
cmpsl
int
xchg
popf
jmp
cltd
pushf
push
inc
sub
xchg
adcl
mov
xchg
lret
xchg
lcall
insb
xchg
jno
adc
dec
or
xchg
das
data16
push
sbb
push
cmp
in
movsb
push
fisubrl
mov
pop
or
push
aad
mov
pusha
hlt
xchg
pop
xchg
add
lret
xchg
mov
sub
test
data16
pusha
dec
push
test
mov
das
lret
add
jmp
scas
lods
mov
mov
js
fnstenv
sbb
orl
jp
cwtl
aad
fwait
lods
pop
fadds
fcmove
test
test
fwait
les
mov
out
mov
fwait
orps
mov
sbb
mov
in
push
loop
jb
jecxz
pop
repnz
push
mov
repz
mov
dec
rol
pop
and
outsb
inc
sbb
data16
das
add
sub
out
sub
les
mov
push
ds
and
dec
cmp
repz
stc
dec
andb
rcrb
test
loopne
inc
and
mov
mov
jne
ljmp
aad
sub
mov
mov
and
dec
mov
test
or
mov
andl
mov
popa
cltd
mov
iret
cmp
in
push
fwait
pop
imul
xor
adc
decb
shlb
icebp
mov
fucomi
sar
jmp
scas
loope
rclb
divl
hlt
add
cwtl
adcl
and
and
mov
adc
daa
imul
push
sbb
rcrb
and
push
fstpt
fdiv
addb
push
mov
mov
jp
pop
mov
cmp
mov
jecxz
enter
cmc
inc
mov
ret
adc
sbb
fdivrs
es
sbb
popa
mov
lcall
jmp
cmc
mov
hlt
xchg
jp
fildll
lds
fisttps
mov
push
adc
inc
sub
mov
mov
outsb
mov
mov
in
pop
ret
jbe
mov
fildl
popa
inc
xor
dec
sub
xrelease
pop
jmp
jno
sbbb
push
mov
cltd
jmp
mov
stos
fcos
gs
xor
adc
inc
mov
fstpl
sbb
mov
loope
out
out
imull
ficompl
cmpb
push
enter
aaa
dec
insb
mov
inc
icebp
inc
fstpt
enter
add
sub
xor
mov
xor
pop
jecxz
xchg
loopne
aad
add
inc
xchg
clc
pusha
jne
adc
xchg
scas
sbb
mov
pxor
stos
inc
into
or
mul
iret
pop
js
and
cltd
push
xlat
inc
popa
pop
xchg
push
push
rcr
fmulp
loope
rol
flds
cmp
std
cli
xorl
and
push
popl
rorb
xor
cmpsl
addr16
dec
repz
jb
inc
jmp
je
adcl
xor
add
shlb
sti
push
jb
orl
es
leave
and
sub
leave
test
daa
das
or
jge
adc
lret
inc
push
xor
daa
dec
popf
push
mov
mov
jmp
repnz
fsubrl
and
fistpll
aaa
push
push
andl
imul
xchg
cs
rcr
rolb
data16
ljmp
std
add
mov
xor
test
push
push
sbb
ljmp
daa
push
dec
inc
jae
sub
or
mov
cltd
sub
rep
add
mov
int
sbb
movsl
cs
jmp
cltd
test
sub
cmp
stos
scas
negl
movsb
aad
test
es
fldenv
je
adc
jb
inc
test
cmpsb
adc
jbe
lods
dec
into
dec
sbb
xchg
mov
mov
xor
sub
inc
push
pop
pop
lods
mov
lods
cmp
clc
pop
mov
push
outsb
inc
and
sti
ds
call
cltd
mov
cmp
lret
mov
add
adc
in
adc
ljmp
sub
mov
aam
adc
int3
rorb
pop
add
pushf
lock
xchg
rorl
js
fdivs
scas
fidivl
mov
mov
iret
sahf
add
push
add
xchg
cwtl
movsb
movsl
icebp
cld
addr16
sub
cltd
jae
into
inc
dec
fs
add
xchg
xchg
adc
xchg
pop
mov
aad
inc
std
outsb
incl
jecxz
pop
fs
or
adc
push
jg
sbbl
mov
fwait
movsl
pcmpeqd
push
and
call
mov
add
jp
cmp
aad
mov
jnp
js
mov
adc
push
adc
push
cwtl
cld
mov
push
jecxz
jle
scas
inc
or
dec
test
sub
mov
es
sub
inc
cmpsl
mov
push
hlt
pusha
sbb
rcll
fstpt
pushl
pop
and
sbb
xchg
shlb
es
mul
js
xchg
adc
xlat
and
jae
into
ret
dec
out
and
les
xchg
call
dec
pop
in
test
rcr
cwtl
sub
aaa
dec
cmpsb
add
xchg
mov
mov
push
icebp
stos
cmp
or
repnz
dec
pop
call
pusha
mov
nop
in
inc
xchg
jmp
lahf
scas
jae
cmp
inc
jae
cmp
jb
cld
daa
sbb
cld
pop
sarb
inc
inc
push
movsb
push
ficoml
mov
adc
ret
sahf
or
dec
dec
xlat
jns
jno
add
pop
xor
cli
movsb
dec
cmp
fdivp
cmp
jmp
cltd
ja
adc
addl
divb
pusha
ds
cli
cmpsb
mov
mov
js
pop
mov
sub
fisubs
insl
loopne
ret
mov
push
dec
pop
pop
aad
jecxz
daa
xor
subl
aas
dec
xchg
sub
fwait
in
repz
lock
repz
aaa
popf
push
mov
push
test
lods
push
testl
xor
adc
cmp
mov
pop
lds
mov
inc
or
add
sub
int
and
pop
insl
add
mov
leave
mov
or
push
jg
pop
lods
mov
imul
add
dec
pushf
xor
imul
hlt
ljmp
push
outsl
pop
and
loopne
pop
imul
jle
jmp
imul
add
push
push
push
push
cwtl
leave
lods
inc
aaa
mov
sbb
mov
lahf
inc
dec
jae
add
test
dec
pop
inc
mov
and
push
movl
cmp
jne
sub
repnz
push
xor
flds
je
mov
fmul
cmp
ljmp
adc
jno
cmp
pusha
or
mov
adc
pusha
scas
in
cli
clc
xchg
jge
dec
test
rcr
mov
es
out
movsl
adcl
xor
push
test
div
sbb
es
mov
sub
push
push
fiadds
and
scas
pop
sub
pop
pop
dec
cmc
xor
jb
add
es
sub
push
in
jns
call
rorb
push
mov
dec
cmc
test
scas
push
fsts
sbb
js
add
out
push
xchg
mov
out
imul
repz
xchg
mov
jne
mov
not
lret
fistps
add
lahf
push
xchg
sub
cmp
xor
and
pop
cltd
ret
dec
sub
imul
mov
sbb
mov
lcall
xchg
fsts
ret
adc
xor
ficoms
cli
clc
fisubs
lahf
jb
in
push
sbb
addl
xchg
lea
mov
mov
adc
and
pop
ret
es
push
shll
movsb
adc
cmp
mov
xchg
push
cmc
sti
xchg
jae
pop
loope
sub
and
mov
and
ret
pop
jp
rcrb
ja
nop
repz
sbb
cli
sub
pop
push
js
or
daa
fidivl
enter
pop
pop
sub
aad
inc
xorb
clc
or
lcall
fidivs
arpl
test
xchg
mov
sbb
xor
arpl
insb
sbb
mov
je
xchg
dec
mov
and
sub
in
adc
mov
lret
add
mov
jnp
jno
mov
imul
ret
sbb
and
daa
add
gs
inc
xchg
in
cs
pop
imul
iret
in
out
loopne
fists
mov
cwtl
add
mov
cli
adc
cmpsb
in
pop
mov
sbb
pusha
mov
push
xor
and
jb
call
in
fnstenv
test
in
adc
mov
push
push
add
jmp
xor
cmp
std
popf
jl
lret
xchg
mov
dec
dec
push
cs
rorb
mov
pop
and
pushf
insl
insb
inc
sub
iret
clc
lcall
faddl
aad
sub
roll
andb
cwtl
xchg
ja
jno
int3
inc
mov
inc
sub
popa
xor
es
xor
xchg
andb
cmp
stos
inc
pop
jns
fistpl
and
pop
outsb
idivl
adc
scas
sub
xor
std
pop
repz
mov
shlb
scas
in
iret
shll
clc
ret
popf
jnp
jecxz
sub
repnz
sbb
xlat
xor
std
ficomps
mov
mov
and
cmp
mov
sahf
adc
dec
push
push
scas
cmp
sbbl
outsl
outsb
insb
cwtl
xor
jmp
pop
xchg
shrl
aas
or
jbe
movsl
clc
daa
push
ss
mov
mov
cmp
and
out
negb
es
fldl
in
push
std
lea
inc
lods
push
mov
xchg
jge
or
cmp
push
in
push
std
lea
inc
lods
push
mov
out
xchg
jge
or
push
cmp
imul
push
std
lea
inc
lods
mov
pop
fsubrl
jge
or
push
cmp
lods
in
push
mov
add
test
fists
fildl
mov
push
outsl
push
jg
pcmpgtd
das
inc
aas
mov
cmpsb
fists
out
scas
mov
push
outsl
push
jg
packuswb
push
das
inc
aas
mov
cmpsb
fists
out
scas
mov
popw
arpl
pop
adc
aas
ret
stos
xchg
mov
adc
dec
mov
cmp
push
or
sub
or
mov
pop
lahf
imul
out
sub
stos
aas
call
iret
xchg
add
pop
ret
dec
fcmove
or
sbb
xchg
mov
test
mov
cmpl
rolb
mov
sbb
sahf
mov
popl
out
jl
dec
notl
dec
scas
ror
push
in
and
adc
jnp
or
dec
jmp
fwait
xchg
lea
out
test
dec
pop
daa
lods
out
jns
fldl
jb
cmp
arpl
imul
xor
aas
jne
cmpsb
fists
out
scas
mov
push
outsl
push
jg
pcmpgtd
push
das
inc
jns
mov
sarb
lret
inc
and
add
lock
xor
rclb
xchg
ljmp
inc
or
imul
adc
pop
sub
rcrl
jecxz
mov
out
scas
mov
push
outsl
push
jg
pcmpgtd
push
das
inc
aas
mov
cmpsb
fists
out
scas
mov
push
outsl
push
jg
pcmpgtd
push
das
inc
aas
mov
lret
stc
cs
adc
xchg
pop
roll
imul
and
push
notl
or
mov
rolb
add
add
cli
mov
mov
test
pop
xchg
xor
daa
jbe
cmp
outsb
inc
fdivrs
scas
sahf
jnp
arpl
mov
cwtl
inc
xchg
test
sti
add
ud2
xchg
pop
lds
mov
pop
cmpsl
ljmp
cwtl
sub
nop
imul
mov
insl
popf
push
lcall
cs
adcl
mov
rcrb
lea
scas
mov
dec
sbb
loopne
fldl
test
jno
addl
jno
adc
dec
data16
les
adc
stos
push
and
pop
fdivs
mov
dec
es
scas
fs
sbb
orb
in
scas
scas
mov
lds
adc
inc
xlat
std
repnz
push
imul
call
push
cmp
pop
dec
sti
lea
adc
inc
sub
pmaxub
mov
sbb
aam
cli
gs
mov
stos
mov
pop
mov
mov
push
orl
in
jge
jecxz
add
adc
xor
mov
mov
mov
jmp
jne
push
mov
fsubrl
shl
ljmp
and
push
das
movsl
xor
xor
je
jbe
jae
cmp
inc
into
dec
cli
movsl
rclb
mov
pop
add
xor
cmp
push
adc
xor
repnz
insl
out
mov
mov
lret
movl
dec
xchg
ljmp
es
gs
cmc
aam
les
aas
clc
cld
mov
pop
insl
movl
jbe
dec
sub
popf
xor
insl
divl
das
jp
aad
push
sbbl
pop
and
jl
push
movsl
lods
in
xchg
lret
add
push
lea
notb
mov
sti
and
es
scas
out
pop
cmpsl
rcrb
daa
jbe
sub
or
icebp
mov
popf
ret
repz
ror
and
sub
stos
adc
adc
adc
sbb
mov
adc
push
call
pop
or
scas
pop
outsl
cmpb
push
dec
xor
jbe
cmpsb
sub
add
lods
inc
dec
out
sub
aad
push
pop
push
cmpsb
jecxz
outsl
mov
shlb
inc
or
mov
ja
pop
mov
ja
int
xor
cmp
fcoml
or
fmull
vmaxps
call
mov
mov
sbb
in
xchg
pop
lret
inc
push
jnp
dec
stc
rcrb
pop
scas
daa
inc
xor
push
test
dec
fisubl
shll
pop
aad
jnp
inc
jo
popf
loop
jno
mov
aad
dec
in
inc
xor
loope
or
stc
push
shr
loope
test
mov
or
bound
mov
out
int
or
mov
dec
inc
fisubs
dec
divl
push
insb
movsb
xchg
idiv
jns
add
cmp
pop
dec
inc
push
in
dec
sbb
mov
loope
daa
std
cs
pop
arpl
dec
mov
adcl
mov
lods
cli
push
sahf
push
aad
add
xchg
out
fwait
loopne
cmp
mov
jg
mov
adc
rclb
bnd
scas
cmp
inc
test
movsl
in
sub
insl
pop
lods
icebp
jp
mov
scas
push
mov
ret
outsl
das
test
mov
push
xchg
push
mov
xchg
or
add
add
fistl
int
jle
gs
lods
mov
dec
lahf
fimull
dec
loop
daa
sti
adc
loop
fwait
aaa
scas
add
negl
jne
pop
mov
mov
pushf
xor
out
rorl
aaa
cltd
cli
mov
jg
in
icebp
inc
mov
int3
bound
cmp
adc
out
mov
sub
mov
push
jmp
mov
out
dec
push
add
stos
pushf
xor
push
incl
dec
test
dec
pop
stc
add
xor
mov
seto
int
pop
mov
push
push
sbb
into
les
popf
pushf
movsb
jo
aas
cmp
adc
mov
inc
stos
lods
mov
call
cmp
pop
jmp
sbbb
lds
or
dec
adc
movsl
dec
sub
loop
inc
jno
jns
push
les
sbbb
mov
lret
xor
jae
and
jp
adc
lods
fs
es
cld
inc
addr16
or
mov
dec
popf
xchg
xlat
mov
sbb
hlt
pop
lahf
pop
lcall
test
sahf
and
fwait
jbe
xchg
mov
dec
nop
xchg
pop
stos
aam
movsb
int
sbb
and
loopne
mov
fisubs
testb
testb
hlt
cli
mov
clc
aaa
lds
jmp
cmp
ror
inc
xchg
or
push
iret
mov
je
xchg
icebp
test
add
loope
pop
outsl
xor
mov
push
jp
cmp
das
adc
mov
imul
addl
pop
cmpb
ret
push
push
ja
loopne
outsl
xor
addb
aad
jae
stos
dec
xchg
out
rcrl
mov
push
sbb
test
jnp
incl
dec
imul
repz
push
pop
imul
lock
cmc
push
stos
int3
sbb
pop
lea
dec
pushf
mov
add
sbbb
xor
xchg
jge
mov
sub
jmp
xor
add
or
shrb
testb
or
stc
xchg
imul
in
mov
mov
mov
sub
pop
cmpsb
mov
mov
and
scas
movsb
add
insb
xor
aaa
sub
int
pop
pop
mov
pop
dec
mov
adc
in
repz
sub
pop
cmc
mov
iret
enter
out
sbbb
and
lea
adc
lock
into
cmpsb
xchg
in
popa
sub
push
mov
xchg
mov
mov
out
cli
push
xchg
mov
pushf
mov
push
in
hlt
lods
cmpsl
mov
jnp
lea
cmpsl
dec
add
ret
in
sub
mov
shl
add
add
aad
dec
int3
inc
xor
bound
ret
and
jg
mov
scas
inc
adcl
aad
xchg
test
sub
lret
and
cmp
sub
cmp
jg
aad
sub
pusha
dec
mov
and
xchg
add
dec
mov
xchg
idivb
mul
pop
jbe
out
mull
jecxz
sub
jns
push
pop
lahf
scas
mov
ret
pusha
movsb
and
lcall
aaa
mov
cmp
inc
dec
js
out
mov
shrl
push
imul
dec
or
cmp
add
lret
xchg
push
ljmp
jne
and
mov
push
ret
outsl
dec
faddl
add
dec
inc
sbb
cmp
push
hlt
xchg
aam
leave
in
add
shrb
adc
lds
dec
fmulp
mov
out
adc
shl
mov
pop
mov
fld
pop
xor
sbb
sarb
push
cmpsl
enter
or
scas
ret
push
cmp
stos
pop
das
lret
fisubl
or
adc
add
insb
or
jge
mov
cld
ret
dec
inc
cmp
ja
ja
adc
dec
xor
mov
xadd
int3
cli
mov
imull
xchg
int
inc
xchg
cmp
insl
dec
mov
adc
pop
and
xor
pop
mov
push
in
pop
push
jge
adc
loopne
jns
pop
xchg
les
sbb
lock
and
das
or
negw
imul
and
add
xlat
jle
scas
xchg
jb
fidivrl
ret
fstpt
cmpsb
loopne
mov
sub
xchg
xchg
pop
push
loop
adc
es
scas
jecxz
xchg
push
lahf
adc
cmp
inc
icebp
xor
leave
lfs
cmpsb
inc
pop
rorl
xor
sbb
call
adc
prefetch
imul
xchg
xchg
icebp
lock
sahf
sar
leave
sbbl
cmp
sar
testb
inc
imul
fdivp
lret
cmp
in
jp
ret
sahf
iret
jbe
scas
adcb
divb
xchg
mov
sbb
sbb
call
ljmp
cli
cmpsb
js
rorb
xchg
pop
fnstcw
in
push
cmp
jb
ja
or
push
insl
and
adc
jl
stos
out
pushf
xchg
jbe
aaa
or
adc
aas
adc
xor
imul
test
iret
mov
lret
mov
out
add
cld
in
in
rol
hlt
xor
xchg
in
sti
test
fs
adc
leave
mov
xchg
add
ret
or
mov
call
in
sbb
sbb
cmp
mov
jmp
push
or
cmpsb
mov
inc
cmpsb
and
add
ds
int
in
data16
sbb
mov
inc
mov
lcall
js
insl
mov
dec
loop
imul
xchg
icebp
int
xchg
int3
pusha
mov
pop
outsb
mov
js
dec
jmp
in
jp
sbb
cwtl
scas
int
push
das
mov
outsl
mov
scas
call
lahf
cwtl
jb
mov
test
jno
push
mov
cmp
loope
inc
and
push
cmp
pop
test
sub
sbb
scas
sub
loope
aam
nop
mov
pop
in
sbb
jle
jecxz
jne
jg
jo
mov
and
add
sub
lods
test
repz
mov
int3
cld
mov
ss
adc
imul
icebp
pop
fcom
lret
xchg
inc
add
pop
aam
lods
mov
cmpl
cmp
ja
rcl
fisubl
les
jb
fmuls
call
push
les
jle
push
fidivl
mov
out
dec
std
pusha
cmpsl
pusha
mov
cmp
mov
adc
cmpsl
mov
pop
not
leave
sarl
or
sbb
jno
les
std
icebp
dec
fwait
lcall
fcoms
xchg
push
mov
rclb
xchg
pushf
or
mov
pop
js
mov
adc
fwait
mov
icebp
frstor
cmc
mov
fidivl
or
sarb
or
push
jp
dec
add
xchg
mov
sub
push
push
mov
test
xor
aad
outsb
xlat
add
test
aam
inc
mov
push
jmp
pop
outsb
sti
daa
mov
dec
and
jle
int3
fcmovb
inc
pop
mov
in
lds
rcl
cmp
adc
fadds
ja
imul
js
or
outsb
push
mov
femms
insl
inc
outsl
cli
adc
dec
insb
bound
in
push
or
outsb
inc
xchg
gs
cmp
stc
insb
aad
cmpsl
pop
push
cmpsb
mov
mov
mov
loop
popf
clc
cmp
fstp
dec
shr
out
ds
int3
cmp
mov
lods
jecxz
movsl
adc
mov
cmp
cli
mov
popf
jge
xchg
lret
js
jmp
popl
mov
pop
imul
sub
push
int
or
jo
and
notb
jle
ret
pop
dec
and
aaa
mov
popl
adc
inc
int
lcall
push
stc
push
mov
test
call
mov
mov
push
xchg
xchg
std
mov
cli
mov
xchg
mov
xor
es
jbe
pop
mov
push
or
xor
push
sbb
push
stos
jge
mov
cwtl
sbb
inc
pop
xor
jl
dec
mov
fwait
push
cmp
adc
inc
shrb
outsl
in
lea
rcrb
xchg
adc
test
daa
filds
lret
daa
dec
jbe
fstpt
ljmp
enter
out
sbb
dec
fcmovb
cmpl
mov
inc
ficoms
popa
movsl
xor
or
jge
and
fcmovne
cli
in
fmuls
dec
add
push
add
clc
imul
jns
or
dec
mov
iret
dec
les
test
cs
fnsave
and
sub
cli
daa
fprem1
pop
and
loop
push
dec
jp
xchg
pop
add
inc
cmp
ds
es
lods
je
jp
sub
and
mov
insb
lcall
jae
cmpsb
fwait
jl
js
negl
xchg
addr16
cmp
aad
gs
dec
mov
push
inc
dec
push
pop
dec
adc
adc
loopne
mov
pushl
imull
pop
repz
fsubl
adc
jnp
bound
pop
jp
jns
pop
lock
repz
adc
push
lea
mov
pusha
test
and
loopne
mov
xchg
or
inc
das
enter
xor
jae
sub
mov
std
mov
mov
xor
in
jnp
bnd
dec
cmp
add
or
push
inc
call
jo
xchg
adc
xchg
xchg
push
dec
mov
in
cwtl
cs
xchg
fldenv
andl
sbb
addr16
xchg
out
or
xchg
inc
jecxz
fdivs
loopne
outsl
shll
mov
outsb
fs
repz
jmp
xchg
add
mov
mov
dec
fstl
pop
int3
lea
shr
movsl
sub
mov
or
cmp
xchg
xlat
fdivr
fs
lods
cmc
mov
push
jge
sub
sar
bound
scas
dec
adc
adc
out
cmp
lret
xor
mov
add
je
adc
mov
fisttpl
dec
xchg
xor
xorb
push
pop
xchg
xorl
cld
nop
lcall
sbb
add
mov
dec
icebp
inc
jns
and
jae
or
push
jno
jno
push
ret
mov
add
or
faddp
push
fdivrl
hlt
pcmpeqw
cmp
cmpsb
movsl
out
inc
dec
mov
xchg
sbb
inc
leave
xchg
mov
gs
inc
mov
out
dec
repz
pushf
inc
mov
adc
xor
adc
adcb
cmp
cmp
sti
add
add
in
jns
std
test
dec
fadd
adc
push
xchg
data16
add
push
ja
fdivrp
dec
or
inc
ja
cli
stos
fisttpll
push
mov
mov
cmpsl
xlat
sub
pop
out
adc
stos
xchg
add
fs
inc
stos
push
shl
jno
mov
jno
add
pop
pop
mov
fmul
mov
js
mov
mov
sarb
shl
xchg
mov
push
popa
aam
xchg
aaa
mov
cld
jmp
rcr
sub
xchg
or
in
inc
bound
add
jmp
mov
gs
imul
les
sbb
inc
sbb
fstps
imull
gs
lds
adc
shld
insl
insb
cmpsb
sbb
and
xchg
ficomps
outsb
test
mov
hlt
in
inc
jnp
mov
stc
leave
jae
movb
mov
data16
insb
and
or
cmp
pcmpgtw
add
sbb
pusha
mov
repz
insl
push
sub
push
jge
xchg
mov
mov
movsl
jecxz
add
cltd
daa
sbb
dec
fidivrs
cmpsl
mov
iret
push
lret
pop
lret
sub
push
jne
jmp
or
and
scas
fs
jne
insb
popa
lret
subb
xchg
jnp
fisubrl
dec
fwait
shlb
lods
mov
mov
test
shlb
mov
arpl
or
dec
daa
mov
inc
fcomps
scas
lahf
mov
sbb
jmp
dec
call
loopne
stc
jo
das
push
push
add
insb
repnz
and
sbb
cmp
push
push
loopne
add
and
jl
mov
pushl
mov
or
or
lahf
stc
sti
repnz
inc
mov
test
ret
xchg
mov
push
jo
cmp
sbb
shrl
pop
jae
mov
jge
or
in
sub
mulb
clc
sub
mov
in
stc
xor
mov
or
jmp
adc
sub
and
xor
out
adc
and
jl
gs
ds
dec
push
sub
int3
cwtl
mov
iret
jp
mov
dec
cmp
adc
or
pop
jno
subb
out
loop
dec
hlt
push
sbb
sub
loope
xor
xchg
mov
lock
push
sbb
push
sub
cmp
leave
pop
les
cld
mov
push
fsts
ror
dec
leave
frstor
lret
mov
pop
sti
xlat
aam
push
mov
stos
pop
jo
jne
leave
adc
push
cltd
and
sub
jmp
fcoms
xor
fisubs
dec
xchg
stos
sub
das
or
imul
sarb
adcl
les
jne
je
ror
jbe
out
ret
or
cmp
jg
aas
or
rclb
arpl
inc
jge
dec
bound
ss
cmp
aad
call
xor
sub
js
cmpsb
xor
rolb
mov
jnp
cmp
ds
insl
in
mov
mov
outsl
roll
jbe
imul
mov
add
jg
push
repnz
or
push
sub
scas
sub
adc
iret
pop
jne
in
mov
dec
daa
loopne
jmp
sbb
adc
sbb
aaa
jg
sub
cmc
mov
xor
loop
and
mov
insl
mov
adc
data16
dec
push
adc
adc
daa
dec
xlat
xor
or
sahf
fldcw
sub
outsb
sti
scas
icebp
out
push
cltd
sti
je
out
add
push
or
push
and
or
sub
xor
pop
addb
xor
aad
lret
xchg
or
rcrb
adc
pop
jnp
mov
les
or
sahf
fdivp
cmp
adc
das
stos
data16
inc
hlt
lds
fsubl
cmp
mov
lods
dec
icebp
ret
inc
push
adc
sbb
mov
sahf
mov
mov
sbb
std
out
ret
mov
fwait
call
test
mov
lahf
xchg
mov
pop
fndisi(8087
add
inc
vdivss
pop
cli
es
and
xor
pop
ficoml
cltd
adc
cwtl
add
imul
pop
faddp
shlb
jecxz
xor
jmp
and
inc
in
lods
pop
ja
arpl
mov
jae
xchg
mov
pop
fcoms
cmc
jno
out
out
insl
sbb
adc
fildll
inc
push
inc
dec
jge
pusha
jae
xchg
push
pushl
out
add
test
lds
orb
das
outsl
repz
cmp
lods
jbe
aad
loop
jb
inc
mov
faddl
inc
imul
ret
stos
fcmovbe
mov
cwtl
addr16
popf
mov
sbb
vpcmpgtb
cmpsl
movsb
bound
mov
pop
mov
mov
shll
out
sbb
insl
jle
xor
xchg
scas
in
fcomps
and
and
popf
and
es
xor
lods
add
mov
ficomps
or
xorl
imul
lds
cmp
aaa
mov
mov
jmp
push
cmpsb
push
ja
mov
ds
mov
stos
enter
cld
cmpb
sub
push
cmp
jecxz
push
out
imul
cwtl
loope
push
das
imul
lret
push
lcall
push
and
mov
add
sti
in
loope
out
add
cmp
xor
in
cmp
and
jb
in
lock
stos
cmc
inc
lret
cmpsb
cmp
push
arpl
jae
dec
sub
call
add
hlt
push
push
jge
pop
jno
mov
mov
fdivs
adc
fldl
pop
push
mov
cmp
or
das
xor
gs
push
pop
jne
or
push
ljmp
add
movsb
jae
push
mov
std
jb
xor
mov
lea
or
dec
jo
pop
push
dec
jbe
cmpsl
or
scas
push
cmp
push
jns
xchg
sbb
imul
mov
divb
adc
sub
push
jl
mov
rolb
test
out
scas
mov
push
outsl
push
jg
pcmpgtd
push
das
inc
aas
mov
cmpsb
fists
out
scas
mov
push
outsl
push
jg
pcmpgtd
push
das
inc
aas
mov
cmpsb
fists
out
scas
mov
push
outsl
pop
jg
push
popw
push
das
inc
aas
mov
cmpsb
fists
out
push
das
inc
inc
leave
mov
cmc
mov
xchg
loopne
sarb
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
add
xchg
pop
test
aam
sub
xchg
imul
pop
aam
and
xor
add
adc
fs
clc
leave
inc
fldenv
cmp
xchg
imul
mov
push
lock
loope
shrl
sbb
push
imul
pop
mov
inc
mov
pop
push
mov
inc
inc
aam
sbb
xchg
subl
icebp
pop
and
mov
push
lods
adcl
test
in
aaa
dec
lds
xor
fistpll
sub
jge
inc
loop
fistpll
xor
or
dec
add
les
adc
lods
push
fs
sbb
mov
cmp
cmp
out
xchg
in
or
sub
xchg
xor
add
jns
push
inc
loope
test
sub
jmp
mov
cmc
mov
dec
sub
pop
mov
adc
sti
idivl
add
test
movsb
mov
je
dec
mov
pop
push
pusha
and
les
fs
aam
and
jb
xchg
add
jno
popa
or
les
lds
xor
inc
in
cmp
sub
push
icebp
jp
jge
imul
fdivs
gs
inc
leave
sub
loop
loope
repz
jae
push
icebp
ja
add
je
inc
fsts
cmp
in
hlt
dec
les
test
add
adc
fs
je
inc
fsts
cmp
in
hlt
dec
les
test
cmpsl
ljmp
sbb
or
in
add
xchg
xchg
xor
add
mov
sahf
popf
inc
mov
cmp
xchg
mov
push
jnp
mov
loop
or
rcll
xchg
shlb
adc
idivl
pop
dec
sub
sub
addb
push
stc
mov
xor
jmp
mov
repz
jae
js
inc
mov
imul
pop
outsl
test
cwtl
xchg
add
and
sub
insl
push
jp
mov
mov
out
test
insb
mov
in
cmp
daa
aam
cmp
fildl
jmp
mov
jmp
cld
mov
mov
test
insb
pop
shlb
or
xor
ljmp
mov
jmp
imul
lods
lds
mov
pop
in
mov
ret
stos
ret
add
push
dec
mov
jecxz
cmp
adc
adc
dec
xchg
ds
movsb
or
pop
cmpsb
mov
lea
stos
aaa
cmp
in
dec
push
mov
pop
mov
push
ss
lds
mov
mov
cs
repz
add
ret
mov
mov
mov
mov
enter
add
and
adc
push
push
inc
and
sahf
insb
jnp
ret
popa
mov
shll
dec
jne
test
pop
shll
test
adc
adc
mov
push
test
jb
repz
push
push
imul
xchg
dec
lret
xchg
daa
xchg
mov
mov
in
mov
push
in
push
cmp
pop
mov
pop
js
cmp
pop
in
or
loopne
test
popl
fmuls
add
inc
sub
cmc
add
pop
xor
test
lock
adc
ja
pusha
xor
rcll
cmp
fstl
mov
iret
sub
lods
adc
xor
jo
and
arpl
push
jg
xor
leave
repz
mov
push
ficomps
int
in
aam
ljmp
adc
mov
outsl
cmc
inc
push
inc
jmp
mov
pop
xlat
dec
add
scas
push
pop
xor
leave
xor
xor
or
and
pusha
sub
loop
rorl
out
cltd
dec
testb
pushf
stos
add
xchg
jne
cmp
mov
cld
cwtl
mov
fisubrl
cmp
or
jg
push
iret
fidivrl
xor
xlat
sahf
xchg
or
pop
insb
test
test
out
mov
setl
loopne
push
jne
inc
mov
push
add
insb
and
test
fs
out
fimull
hlt
adc
pop
xchg
rol
fcoms
pop
push
pop
mov
fwait
xor
insb
call
jns
shl
xchg
mov
sbb
inc
aas
stos
inc
jno
sbb
push
mov
gs
daa
xchg
cld
aas
adc
shrl
aam
xchg
jae
jnp
out
mov
and
push
fsubp
jno
clc
test
addr16
dec
push
fwait
ds
fistps
leave
ret
dec
cmp
add
dec
into
sahf
cmpsb
push
xchg
adc
xor
jae
fdivr
push
push
xchg
add
mov
lods
push
fs
pop
das
push
adc
lock
cli
dec
cmp
imul
jl
and
icebp
and
sarb
aam
das
mov
inc
push
dec
out
inc
inc
jnp
popa
pop
or
sub
out
ja
push
sub
push
sub
and
cld
adc
pop
dec
cmp
jmp
xchg
in
and
stc
jp
fisttpll
addr16
pop
and
xchg
sbb
movsb
pop
dec
out
aas
aam
adc
roll
sub
jmp
adc
mov
pop
xchg
mov
sbb
sbb
cs
sub
and
scas
scas
je
test
outsb
pop
ret
daa
out
nop
out
ficompl
or
pushf
pusha
js
scas
cmp
sub
push
sti
stos
insl
inc
sub
test
xor
add
cmp
pop
mov
and
addr16
outsb
repnz
push
fs
ljmp
adc
mov
lret
and
push
and
aaa
iret
test
mov
xchg
pop
mov
je
mov
rcrb
sbb
inc
cmp
loope
mov
imul
pop
sar
xor
jmp
jp
aam
aad
and
scas
pop
cmc
ret
dec
sbb
in
mov
mov
adc
mov
sbb
inc
or
int
stc
lods
fdivr
jbe
outsb
sbb
repz
repnz
push
clc
dec
or
mov
repnz
test
and
and
dec
pop
sbb
cmp
imul
mov
ljmp
rcrb
dec
push
rcll
push
mov
xor
mov
dec
pop
xchg
fildl
push
or
clc
cli
sbb
cmp
pop
repz
fdivrs
sbb
mov
mov
and
cmp
pop
cmpsl
jnp
pushl
sbb
dec
icebp
jle
mov
mov
jae
mov
inc
fs
repz
pop
dec
test
push
unpcklps
stos
inc
push
dec
aad
jmp
xchg
aas
push
jecxz
lret
lock
out
xor
pushf
push
cmpsb
mull
inc
arpl
add
mov
inc
sbb
cmp
or
pop
sub
dec
jae
leave
aad
outsb
xchg
jns
pop
fs
pushf
adc
imull
test
mov
fnstenv
in
xor
mov
prefetch
iret
xchg
xchg
lret
jp
jb
bound
push
inc
sub
push
add
sbb
data16
mov
mov
push
dec
jb
pop
fst
ja
or
bswap
adc
mov
jae
ret
jne
adc
adc
pop
mov
sub
mov
inc
mov
xchg
leave
sbb
and
out
scas
dec
push
movsl
jnp
xor
jecxz
xchg
stos
mov
imul
push
pusha
movl
push
jno
or
aad
push
imull
or
arpl
and
pop
faddp
sbb
push
pop
push
out
jge
xor
add
jle
xchg
sahf
fwait
cltd
dec
imul
jno
cmp
mov
or
dec
and
iret
stc
mov
loope
fs
fimuls
or
push
inc
mov
lret
filds
adc
sbb
dec
rolb
sub
mov
jge,pn
push
or
lea
xor
insl
cld
leave
pop
sub
inc
test
lahf
push
pop
repnz
ss
out
ds
jle
leave
pop
imul
dec
inc
mov
cmp
jge
add
pop
ss
pop
mov
in
jge
sub
push
stos
add
xchg
inc
sti
imul
fcmovb
push
inc
or
lcall
jle
jno
mov
jmp
cmc
pop
xchg
mov
stos
iret
or
fidivrl
push
ja
clc
cmpsl
mov
cmp
inc
sub
dec
adc
and
pop
cmpsl
mov
hlt
push
xor
cmpsb
out
xlat
je
dec
add
je
mov
fdiv
addr16
rol
fimuls
dec
sahf
out
jno
test
repz
imul
inc
es
xchg
movsl
sub
rol
xchg
push
jecxz
sub
ja
push
sub
mov
lds
add
cld
sub
or
les
mov
dec
pop
icebp
inc
fwait
dec
sti
jl
xor
dec
push
aas
in
lret
fwait
int3
xchg
adc
or
xchg
pushf
shl
dec
and
scas
je
adc
popa
movsl
push
filds
test
inc
lds
fsubl
cwtl
mov
dec
call
xchg
push
inc
test
stos
sbb
cmp
xchg
sbb
repz
jmp
call
clc
cmpb
adc
mov
fsubrs
push
mov
nop
mov
jl
out
mov
shl
lock
push
jne
sbb
inc
lods
loop
inc
xchg
int3
lds
popf
inc
icebp
aas
push
jl
mov
insb
cmpsl
mov
test
std
shl
adc
ja
jl
mov
or
xor
adc
call
push
inc
adc
mov
dec
imul
jbe
cmc
lea
rorl
gs
push
insb
lea
pop
jb
lcall
sarb
aam
push
mov
inc
mov
testb
je
pop
ret
mov
adc
xchg
das
lahf
cmp
clc
pop
and
cmc
mov
push
cmc
mov
mov
aam
jo
sub
jge
and
mov
dec
ljmp
mov
inc
fidivl
ret
loope
mov
loope
imul
jo
dec
add
test
mov
xor
mov
out
push
mov
fildl
dec
es
loopne
repnz
adc
add
leave
test
dec
lods
inc
push
sbb
rorl
xchg
push
stos
leave
pop
loope
insl
dec
dec
out
mov
pop
xor
xchg
mov
inc
sbb
rcll
loope
xor
inc
ficompl
cwtl
push
es
inc
cmp
push
or
lret
out
jmp
sti
aaa
sub
xlat
mov
adc
xchg
ja
jge
fisttps
add
mov
and
loopne
fwait
cs
aam
mov
jge
or
dec
mov
add
cmpsl
shl
rol
adc
jns
test
stos
pop
jle
jns
std
xlat
mov
test
push
adc
or
or
pop
pop
sub
mov
mov
imulb
mov
inc
sbb
inc
dec
mov
adc
dec
pop
lahf
mov
enter
sbb
in
repnz
ds
lcall
inc
outsl
repnz
cmp
sbb
mov
repz
loope
pop
ret
movsl
and
push
rcll
stos
inc
loop
jno
imulb
push
adc
adc
and
icebp
sub
loop
out
iret
adc
pop
pop
push
xchg
jl
sbb
pop
jl
xchg
cltd
clc
push
lock
pop
xchg
dec
sahf
xor
fcoms
hlt
ds
sbb
fdivs
pop
sub
push
sbb
jmp
into
sbb
pop
jns
out
ss
cmpsb
adc
or
mov
push
jle
in
fsubl
scas
add
push
ret
sahf
mov
adc
mov
dec
mov
adc
sub
cmpb
push
lret
lods
mov
push
fnstenv
mull
das
loop
cmp
mov
xchg
repnz
sub
lret
pusha
into
cltd
icebp
xorl
les
les
inc
out
push
and
cld
and
adc
push
flds
in
lods
dec
ret
sbb
lods
fisttpl
jno
adc
lret
lods
sahf
jge
adc
movsl
xchg
sti
lds
into
push
add
mov
or
xor
mov
jl
mov
cmp
aam
sub
dec
jo,pt
out
lret
outsb
lret
outsl
popa
icebp
sbb
add
jg
in
repz
cmp
cs
xchg
dec
adc
and
pop
mov
jle
mov
lcall
and
mov
add
pop
movsl
and
cmp
inc
sbb
mov
push
mull
sbb
pop
xor
push
mov
jb
sub
mov
add
pop
adc
or
les
cltd
mov
dec
fbld
stos
add
test
xlat
int3
sbb
mov
in
jbe
inc
inc
aad
push
lock
pop
and
push
push
jno
mov
mov
idivl
popa
loope
xchg
mov
lods
aam
icebp
pushf
test
inc
ficompl
ds
aad
enter
and
sarl
jbe
xor
xor
sahf
test
sub
fimull
push
inc
xchg
mov
add
test
push
sar
jg
lods
test
pop
mov
outsb
imul
jmp
in
mov
cwtl
lds
data16
mov
ficoms
and
or
mov
mov
adc
int3
jo
mov
xor
int3
loop
or
out
leave
mov
xchg
scas
cmp
cmpsb
mov
repz
mov
sbb
dec
cmp
sub
pop
adc
mov
aam
repz
call
mov
xchg
aaa
rclb
lods
movsb
push
testl
xor
sbb
test
pop
sub
imul
xchg
je
dec
jne
aam
fimull
cmp
test
inc
and
test
stc
xchg
test
test
push
cmp
and
fwait
aam
push
insb
push
add
rcll
loopne
mov
test
dec
cmpsl
movl
sub
inc
bound
test
push
or
int3
mov
pop
and
jge
mov
or
cmpsb
int3
inc
repnz
insb
mov
sub
or
jnp
mov
cmp
mov
inc
sub
cmp
lock
sub
std
nop
ljmp
dec
out
mov
outsb
jae
xor
into
cmp
pop
ss
leave
aaa
addr16
xor
xchg
mov
mov
rcrb
pusha
or
sub
pop
in
or
orb
mov
cmp
inc
pop
lret
enter
call
arpl
push
stc
dec
mov
stos
xchg
push
mov
push
mov
jbe
test
jae
incl
mov
sahf
int
inc
push
mov
lcall
inc
mov
fisttps
fmull
xchg
pop
lahf
aad
add
cmpsb
push
or
stos
aaa
test
inc
cltd
rcl
jge
in
xchg
dec
das
out
mov
ljmp
out
cmpsb
jle
sub
mov
push
sub
xchg
sub
mov
mov
inc
inc
sbb
imul
mov
or
pop
xchg
jp
push
xchg
mov
mov
push
cmp
cmc
out
jl
jbe
sbb
jne
dec
aas
push
std
arpl
popf
insb
jne
sbb
addr16
repz
in
daa
add
outsb
mov
sti
cmp
fldenv
ljmp
push
loopne
inc
lahf
mov
dec
sub
cs
sub
mov
pop
dec
push
jbe
push
jns
out
xor
mov
cli
push
aam
lret
scas
popf
scas
cmp
dec
subl
gs
fbld
pusha
mov
lea
mov
mov
xchg
lret
nop
push
mov
out
or
jae
aaa
xchg
add
and
imul
fcomip
scas
mov
sub
std
jle
jne
iret
orl
insl
and
and
xor
imul
inc
dec
test
add
and
div
out
stc
mov
mov
ds
cs
dec
jge
bound
pop
jae
pop
call
icebp
push
stc
push
or
mov
xor
data16
mov
out
jno
mov
nop
cmp
int
setle
mov
pop
mov
ljmp
xor
enter
xchg
fisttpl
fmull
dec
movsl
movsb
xor
test
xchg
pushf
mov
cld
aas
push
aaa
and
and
jp
testb
rclb
dec
mov
mov
pop
inc
inc
xchg
into
outsb
and
mov
inc
lret
daa
push
das
mov
int
pop
cmc
xchg
jne
and
adc
imul
push
out
stc
out
mov
subl
adc
or
sbb
and
mov
sbb
mov
add
jecxz
cmpl
je
and
mov
lahf
inc
add
jmp
cltd
pop
or
push
ret
in
test
ds
lods
loopne
popa
mov
mov
rorl
test
adc
inc
and
push
mov
aaa
pushf
orb
fistl
in
bound
sub
test
sbb
fwait
mov
movsl
aam
and
ljmp
sub
hlt
push
jmp
addr16
popa
dec
sbb
pop
and
pushf
pop
push
or
lock
into
aaa
or
xchg
aaa
mov
ljmp
dec
ds
lret
addl
dec
cld
mov
fnstenv
mov
pushf
mov
add
inc
jmp
subps
and
inc
adc
pop
fmull
fnstenv
sub
mov
mov
jg
cltd
and
or
cmc
int3
sbb
pop
popa
push
sub
loopne
jns
or
mov
fs
adc
mov
xor
push
pop
lock
jecxz
cwtl
adc
sub
and
adc
int
movsb
pusha
hlt
les
xchg
test
movsl
push
sub
xchg
loopne
cmpsb
mov
leave
in
pop
sub
add
push
inc
pop
sbb
dec
ret
popl
inc
dec
arpl
xchg
pop
sub
inc
imul
int3
xor
lret
push
and
lds
fldcw
xchg
sub
xor
mov
or
scas
lcall
push
out
add
mov
loopne
js
inc
add
and
scas
rcl
ljmp
push
lds
pop
jnp
inc
and
into
cmp
cmp
in
lcall
jle
dec
cwtl
cwtl
daa
fcomps
movsb
push
insl
xlat
dec
jp
jp
dec
push
jp
mov
outsl
mov
stc
xchg
aas
sbb
and
sbb
ficoml
gs
jge
xor
xchg
mov
jne
cmpsb
jo
push
data16
scas
gs
jo
ja
push
in
stos
pop
xor
js
repz
mov
hlt
es
pusha
ficoml
adc
aaa
mov
fdiv
adc
and
or
repnz
scas
lcall
pop
and
or
scas
or
fldt
and
rclb
cmc
das
mov
mov
xor
inc
popl
pop
fcoml
or
pop
jb
mov
jnp
cmp
inc
aas
jle
mov
xlat
ret
pushf
add
mov
insl
pop
pop
enter
fs
push
xchg
sbb
cmpsl
cs
sub
scas
fcmovu
addl
add
arpl
icebp
dec
addl
loopne
je
and
jmp
push
dec
mov
mov
mov
fs
push
es
jmp
sarb
jl
inc
lods
xor
lock
fwait
jmp
sahf
push
imul
mov
ret
cs
bnd
daa
hlt
push
add
xor
out
sub
xor
fiaddl
aaa
mov
push
push
scas
sub
loopne
loope
jle
imul
xor
cmp
mov
lret
push
and
pusha
ljmp
mov
or
frstor
dec
cmpsb
dec
cmc
orb
leave
sbb
pop
push
push
pop
or
lret
rep
popf
jmp
jns
aaa
mov
adc
jns
popf
jecxz
push
hlt
sub
push
inc
mov
dec
adcb
lds
mov
aaa
jnp
in
or
imul
xchg
mov
and
hlt
std
dec
fs
cs
or
or
iret
scas
pop
cmp
aaa
cs
cltd
adc
int3
pop
sub
pop
leave
mov
mov
fisttpl
mov
sbb
enter
int3
inc
incl
dec
adc
mov
mov
aam
mov
pop
and
ffree
cwtl
out
mov
ja
mov
in
and
das
inc
mov
dec
inc
movsl
mov
stos
mov
les
mov
stos
int
movsb
insb
push
push
cli
repnz
jne
mov
mov
imul
shl
lods
pop
pop
mov
dec
outsl
push
cs
arpl
sub
push
stc
out
lea
mov
mov
shl
leave
sub
orl
jnp
push
lods
sbb
jno
pop
mov
mov
movsb
xchg
int3
imul
xchg
pop
mov
negb
and
test
and
int3
dec
mov
fnstenv
jbe
jecxz
push
inc
out
aas
xchg
xchg
xchg
dec
adc
lret
imul
sbb
inc
into
sti
mov
jecxz
pop
mov
fyl2xp1
dec
or
dec
aaa
pop
adc
mov
cmc
je
arpl
dec
flds
sbb
sub
shr
jmp
in
cmp
mov
in
sbb
xchg
jl
sub
movsb
xor
push
mov
push
inc
and
adc
mov
test
loop
andb
addb
fdivs
or
cmp
sub
daa
movsb
xor
fldt
cmp
in
pop
leave
addr16
mov
adc
mov
sbbl
mov
adc
stc
out
rcrl
lock
popf
add
leave
daa
push
loop
dec
xlat
popa
pop
in
jp
cmp
cltd
adc
fs
je
inc
fsts
cmp
in
hlt
dec
les
test
add
adc
fs
je
inc
fsts
cmp
in
hlt
dec
les
test
jl
adc
fs
fmul
inc
fsts
cmp
in
hlt
dec
in
aam
and
xor
add
adc
dec
les
pop
push
mov
insb
icebp
or
xlat
lcall
fisttpl
in
xchg
das
cmpsl
loop
mov
notl
loop
shlb
ret
xlat
and
adc
add
jb
bound
loop
mov
addr16
pop
shlb
ret
xlat
mov
out
xchg
sub
mov
into
fs
add
mov
push
jae
add
stc
mov
adcb
sub
mov
xor
push
cmpsl
pop
xchg
mov
jne
sub
popf
add
lods
and
insl
bound
ja
jae
push
aaa
dec
jbe
xlat
xor
adc
adc
es
jp
repnz
insl
jl,pn
or
mov
lahf
ja
pop
jecxz
fists
jae
popf
xchg
inc
pop
cmpsl
test
mov
jg
loopne
cmp
fists
lea
loope
push
fisttpll
xchg
repnz
andl
aaa
mov
mov
and
out
cmpsl
call
mov
adc
popl
push
xchg
aaa
shlb
add
and
adc
outsb
out
xchg
xchg
cli
cmpsl
inc
push
xor
ja
addr16
pop
cld
pop
shlb
cmpsb
dec
inc
rcll
imull
repnz
out
inc
icebp
and
shrl
jecxz
ret
adc
dec
test
mov
mov
sbb
add
fidivs
ret
mov
mull
add
popa
orl
adc
aaa
mov
inc
cmpsl
mov
mov
addr16
loop
shlb
ret
xlat
and
adc
add
jb
bound
mov
mov
addr16
loop
shlb
ret
xlat
out
mov
jecxz
push
icebp
mov
pop
add
jno
mov
leave
out
add
jl
xchg
sbb
add
sub
in
mov
pop
push
ret
mov
jle
ss
ret
add
aaa
add
jl
inc
sahf
jo
mov
push
rorb
popa
sub
cli
push
cmp
push
sub
push
dec
sub
lret
jb
ds
jne
mov
and
jecxz
mov
dec
cmp
rcrb
in
sub
mov
lret
mov
and
dec
stos
xchg
mov
les
movsb
fisttpl
cmp
cmp
pop
jmp
or
cmpsb
insl
xor
xchg
ret
test
mov
mov
fcomps
arpl
lret
jg
shlb
gs
aam
cmp
jp
jns
dec
xor
mov
xor
clc
xchg
ficoms
scas
mov
push
jns
movsb
cmp
das
scas
cmp
cld
sub
popa
das
fs
stc
pusha
cmp
aaa
pop
in
fdivs
inc
sbb
std
enter
pop
shll
loopne
xchg
cmp
insb
ljmp
jbe
add
cmpsb
fistpl
xor
sub
cwtl
fldl
sbb
fistpl
jmp
jae
sti
sbb
stos
jbe
test
fisubl
inc
aad
jae
enter
iret
adc
scas
mov
push
pushf
jl
push
les
cmp
repz
xchg
add
shrb
repz
mov
dec
ljmp
mov
dec
test
dec
cmpsl
sub
push
sahf
xor
add
int
in
stc
ds
stos
or
adc
ret
adcl
mov
dec
push
adc
imul
push
loopne
and
mov
adc
das
icebp
xchg
mov
pop
cltd
lret
jne
or
popf
lods
rcr
pop
push
mov
in
pop
imul
dec
mov
je
adc
mov
jmp
and
movsl
jbe
out
cmp
inc
fstpt
sub
cltd
scas
dec
and
jle
aad
mov
push
pop
jae
dec
jge
lods
jne
or
mov
inc
push
sti
pop
jae
in
imul
and
adc
sbb
and
push
xchg
sub
or
out
pushf
xlat
les
addr16
loopne
push
inc
mov
xchg
mov
jg
test
sti
into
jno
in
mov
subl
pushl
in
ja
cli
cli
js
push
xor
sub
sbb
mov
in
jp
imul
cmpsb
call
xor
mov
ret
jmp
dec
adc
or
shrl
push
cmpsb
daa
jae
mov
das
insl
out
sub
lea
pushf
xchg
jbe
mov
push
adc
stc
orl
sub
out
outsl
mov
xchg
ret
xchg
ja
mov
test
inc
mov
fs
cmpsl
out
icebp
addl
dec
mov
add
add
cwtl
mov
jmp
lret
xor
cs
das
sbb
movsb
add
jne
sbb
inc
sbb
mov
inc
push
pop
inc
out
popa
jl
xor
push
pop
inc
cltd
xor
clc
sub
fidivl
sahf
popf
fdivl
or
cmp
mov
stos
lock
out
bound
mov
jg
or
icebp
or
mov
out
imul
pop
fs
clc
adc
jge
sbb
dec
mov
and
mov
xchg
jo
aaa
int3
jbe
fwait
add
mov
test
xor
movsb
je
mov
mov
sti
pushf
dec
adc
xor
jle
mov
push
into
bound
arpl
repnz
jmp
or
or
popf
inc
mov
ss
jmp
leave
xchg
cmp
adc
leave
cmp
or
fldt
js
pusha
dec
xchg
jns
aam
stos
imul
mov
imul
pop
xchg
in
repnz
xchg
push
jbe
sahf
ss
dec
movsb
imul
mov
inc
in
pop
stc
mov
cmpsl
jae
insl
int3
sub
lcall
jbe
int3
mov
mov
cltd
add
int3
fnstcw
mov
mov
ret
in
or
lcall
push
scas
lret
mov
or
repz
fstpl
jp
dec
mov
jae
or
jb
sbb
mov
cmpsl
mov
rcll
insl
cmp
out
add
adc
xchg
flds
mov
or
xor
xor
in
ja
out
mov
cld
pusha
mov
add
fs
xchg
sbb
iret
mov
jno
ret
imul
add
pop
stc
jnp
call
or
fdivp
mov
negl
dec
sbb
lods
outsl
sub
mov
jnp
push
lods
dec
fildll
pop
mov
jno
inc
lcall
sub
aad
pop
inc
and
and
fstl
loope
and
pop
pop
loope
lock
ret
jmp
in
mov
mov
pop
xchg
mov
fdivr
fsubr
adc
mov
mov
pop
std
mov
jb
imul
scas
mov
mov
dec
push
dec
sbb
movsb
or
or
icebp
xorb
or
mov
ljmp
data16
notl
xchg
sub
popa
fisttpl
cld
mov
xchg
and
lcall
rcrb
imul
push
push
test
add
dec
imul
push
lds
cs
push
hlt
mov
pop
cmp
xor
lods
mov
lock
cmp
js
arpl
loop
lds
jb
and
cld
cli
xchg
pushf
in
pop
inc
cmp
bound
jae
andb
or
push
sbbb
push
cmp
inc
outsb
cli
cmpsl
cwtl
ja
hlt
cmpsb
loopne
xchg
jle
inc
xchg
push
and
pop
cmc
int3
push
or
jo
and
cmpsb
mov
pushw
lea
xor
lret
xor
rorl
inc
push
gs
aas
sahf
and
fists
stos
inc
movsb
scas
pop
sti
add
push
loop
xor
sbb
in
xchg
out
add
pop
pop
in
shrl
mov
adc
fistl
shrl
xor
dec
cmpsl
and
fidivrs
iret
push
push
rcrl
aaa
cmp
push
jnp
push
xchg
and
jnp
loopne
cmc
jae
push
push
mov
cld
lcall
xor
jns
mov
xchg
ret
jne
mov
pop
mov
mov
mov
xchg
insl
add
scas
fstl
iret
sbb
dec
enter
add
xchg
adc
mov
iret
push
bound
push
or
movsb
dec
test
test
scas
or
push
xor
fnstenv
fsts
ret
out
pop
test
jmp
xchg
gs
mov
adc
cmp
and
mov
pop
test
lds
cmp
test
add
pushf
in
jmp
ss
mov
int3
popa
mov
adc
dec
addr16
lahf
xchg
xchg
add
mov
xchg
stos
cmp
adc
jnp
jmp
mov
sarb
jb
jae
push
sbb
fimuls
data16
lcall
fnsave
or
test
jg
testb
xchg
int3
out
inc
inc
cmp
aaa
pusha
mov
pusha
pop
xor
int3
jmp
mov
in
movsb
mov
jmp
in
cli
shrb
xor
dec
and
dec
cmp
inc
lahf
mov
xlat
mov
push
fcmovu
int3
cltd
push
scas
or
push
cmpl
xor
sub
in
hlt
xchg
icebp
jno
jb
jns
jae
ficoms
push
aas
mov
jne
and
imul
dec
cli
out
jecxz
mov
or
cltd
xchg
movsb
xor
in
jae
mov
inc
or
jne
sub
movsl
mov
sbb
cmp
and
int3
push
lret
repz
add
inc
seta
push
ret
ror
jb
daa
cmp
mov
xor
add
loop
jne
std
mov
outsl
fmuls
pop
pop
xor
mov
inc
push
cli
jmp
sub
mov
pop
xor
out
or
dec
lahf
pop
cwtl
jbe
sub
mov
fwait
xchg
xchg
push
mov
popa
lods
and
cmp
popf
or
dec
int3
mov
sub
pop
movsl
dec
daa
adc
jle
cmp
mov
mov
cmpsb
lds
and
aaa
jp
stos
adc
adc
xchg
in
xchg
out
adcb
fisttpl
lods
fsubrp
lds
jns
pop
into
in
dec
jbe
repnz
or
inc
test
or
pusha
jge
testb
aaa
nop
inc
shl
into
push
cmp
sub
add
rol
loopne
out
xlat
push
jp
leave
out
out
mov
dec
mov
and
inc
cld
out
jle
push
lods
cmc
jnp
mov
ja
test
scas
scas
andl
jns
mov
je
mov
sar
sti
movsb
push
out
inc
xchg
nop
shll
fwait
adc
xor
jbe
jnp
lods
cwtl
ds
dec
and
adc
add
sub
mov
sub
xor
sbb
cmpsl
mov
scas
in
pop
outsb
push
mov
and
mov
xchg
dec
sbb
xchg
cld
test
inc
sub
cmp
hlt
sbb
jae
adc
lcall
push
jl
dec
jb
popf
cld
mov
sarl
jns
sub
lock
stos
jle
movsb
xchg
xchg
dec
sub
jns
stc
cmp
aad
add
mov
xor
push
insb
popa
arpl
cli
jle
orb
mov
jno
aam
add
in
je
pusha
in
pusha
iret
and
jns
xor
outsb
popf
sbb
push
xchg
not
xor
pop
ss
pop
cmp
jmp
jmp
das
enter
bound
lds
shll
fisubrs
xor
push
ss
lcall
jl
lds
xchg
scas
push
pusha
or
adc
push
lcall
fimuls
xchg
pop
and
pop
daa
sub
mov
push
loop
or
jmp
in
dec
sbb
cmp
packssdw
stos
jl
add
sbb
scas
pop
sbb
mov
stos
out
shlb
jp
test
mov
mov
push
out
lds
arpl
rorl
or
cmp
les
sbb
xchg
mov
dec
sub
ja
loop
xchg
sub
test
jne
dec
dec
xor
jnp
cmp
insl
mov
push
jmp
pop
xchg
mov
and
push
je
in
ss
pop
fwait
mov
rorb
fldl2t
sti
jne
ljmp
jae
jno
je
sahf
cmpsl
je
inc
dec
cmp
pop
xchg
cmp
xchg
mov
and
and
mov
xchg
leave
and
pop
das
push
sub
int3
ret
lods
andl
sbb
add
test
test
push
pushf
sarb
lds
movsb
mov
sub
mov
call
and
movsb
jmp
inc
data16
mov
addl
cmp
xchg
addb
lods
es
ficoml
mov
inc
mov
push
ja
jmp
jb
cmpsl
xlat
in
hlt
data16
inc
jmp
sahf
or
pop
sbb
adc
mov
dec
xlat
sbb
mov
jmp
stc
cmp
mov
mov
dec
js
or
shll
daa
into
inc
lods
out
and
loop
mov
dec
sbb
push
cmc
int3
sbb
adc
test
daa
or
xchg
jge
mov
scas
dec
add
xchg
scas
xor
sub
mov
ljmp
adc
mov
cwtl
mov
in
call
xchg
outsl
std
push
inc
xor
gs
in
daa
sbb
push
adc
jle
jo
push
jmp
dec
ss
and
lock
scas
mov
popa
mov
jne
sahf
lret
popa
cmpsl
xchg
xchg
addb
dec
push
or
lods
or
pop
inc
fcmovne
xor
aaa
push
mov
cli
dec
mov
lret
push
xchg
jg
aaa
jne
add
scas
lods
arpl
xchg
imul
rcrb
mov
popa
pop
rcrl
dec
sahf
jo
out
aam
inc
xchg
mov
std
push
jmp
jns
mov
pop
in
sub
mov
push
scas
lock
adc
orl
jns
dec
push
jnp
xlat
imul
mov
cmp
pop
jp
pop
inc
fbstp
add
xor
cmp
inc
loopne
dec
add
cmpsb
pushl
lret
insl
lret
lock
outsl
mov
test
pop
pop
fidivrs
adc
in
mov
cli
sbb
adc
scas
jbe
pushf
sti
mov
xchg
mov
imul
test
mov
pop
adc
int
or
shl
aam
push
and
xchg
es
jge
xor
imul
aad
scas
pop
lcall
push
xchg
cmc
cmp
fstps
push
cmpsb
xchg
shll
xchg
lea
mov
call
inc
push
lock
add
mov
adc
jecxz
pop
andl
cmp
orb
mov
loope
cwtl
test
mov
mov
aad
adc
adc
scas
cltd
jb
cld
outsb
test
adc
icebp
cmpsl
lods
cltd
inc
jo
addr16
lret
ljmp
and
inc
jnp
bnd
les
inc
mov
std
cmp
cmp
fcompl
lcall
into
movsl
cmpsl
dec
ja
data16
inc
lods
cmp
shll
cmp
inc
icebp
sub
inc
loopne
imull
es
cld
jle
leave
and
into
adc
mov
adc
and
sbb
es
or
xor
mov
stc
add
in
add
outsl
xchg
xlat
lcall
mov
adc
in
fimuls
mov
push
jecxz
inc
xchg
mov
fisubrl
or
ja
in
fildll
jbe
jmp
and
dec
mov
jne
pop
data16
data16
cmp
mov
clc
jo
popf
inc
cmp
fidivrl
fstl
outsb
mov
inc
mov
leave
xchg
ds
outsl
cs
jnp
sbb
pop
loop
ret
in
dec
adc
lods
lcall
push
inc
inc
dec
fstps
fsub
shlb
inc
enter
daa
jmp
jle
push
imul
ljmp
fisubrl
int
data16
lock
ret
mov
jp
pop
mov
push
cmp
repz
pop
or
adc
fwait
sbb
mov
clc
cs
fabs
in
sub
add
cli
dec
stos
addb
inc
js
pop
push
fisubrl
fistps
adc
adc
cmp
movl
xlat
jo
cmpsl
test
ret
add
test
push
cmp
mov
idivb
das
or
xorl
mov
fnstenv
js
adc
scas
jmp
fiadds
scas
cld
insl
xchg
hlt
jns
stos
ljmp
in
xor
fldt
pushl
pop
leavew
xor
or
in
movb
out
pop
fnstcw
dec
mov
pop
aam
cwtl
pop
mov
icebp
imul
xchg
cli
jecxz
lds
les
js
lods
lahf
sbb
xchg
dec
insl
mov
mov
subl
hlt
mov
pop
out
xchg
lock
mov
sub
sbb
or
and
clc
jno
insl
lods
lcall
ss
jnp
sbb
dec
out
test
mov
jge
aam
filds
xchg
repnz
pop
cmc
pushf
mov
sub
cmp
lcall
fwait
fwait
es
mov
iret
movsl
and
adcb
jge
adc
data16
shlb
jne
test
aad
cld
add
xor
mov
mov
push
loop
jnp
sbbl
lods
repnz
outsl
stos
out
sbb
and
mov
and
repz
sbb
adc
loopne
mov
xor
dec
fdiv
push
bswap
jbe
jne
xlat
jne
cmp
ss
aas
cmp
xchg
push
or
pop
scas
mov
aaa
sti
cmpsl
lahf
sbb
sarb
jns
jo
mov
pop
cmp
aas
mov
cmp
das
push
sub
aad
dec
push
sub
push
popa
cmpsb
pop
out
or
mov
shrl
mov
lahf
xor
out
fstpl
xor
mov
mov
dec
das
les
dec
mov
xlat
mov
notb
lea
mov
lea
push
lahf
pop
xchg
cld
mov
or
bound
fists
jb
mov
test
mov
out
shlb
cli
pop
jno
imul
adc
fidivrs
pop
std
ljmp
gs
jb
add
xchg
or
mov
adc
mov
loop
xchg
test
arpl
mov
add
arpl
sti
int3
dec
lret
and
cmp
addr16
popf
repz
dec
scas
sbb
call
xor
sbb
xchg
adc
jno
insl
pusha
popa
mov
dec
mov
insl
imul
xor
inc
push
mov
addr16
pop
xor
inc
insb
movsb
inc
sub
push
dec
cmp
shlb
mov
js
into
dec
std
fwait
mov
loopne
rcrl
add
pop
cld
inc
cmp
nop
or
sub
cmpb
or
ljmp
pushf
and
aaa
xor
loopne
mov
xor
fnstcw
repz
scas
pop
jno
push
mov
push
stos
popa
adc
pop
inc
outsl
xchg
test
movsb
test
push
roll
cwtl
insl
jnp
addl
xchg
cmp
adc
jle
test
in
push
es
push
or
cmc
jp
andl
sub
ret
rolb
and
jnp
inc
jno
add
lret
inc
fwait
loope
sub
mov
iret
pushf
lods
inc
rorb
jo
loopne
mov
dec
lcall
adc
das
lret
in
xchg
cmpsl
sub
mov
out
sahf
cmp
ss
daa
fwait
lret
mov
add
mov
pop
cmpsb
mov
sbb
pusha
mov
lret
inc
add
mov
adc
das
mov
cmp
stc
jno
add
cmp
das
sbb
push
or
sbb
or
fmulp
xlat
outsl
and
push
cmp
adc
adc
mov
push
sub
ds
inc
sub
and
xor
adc
cmpl
mov
add
xor
pop
ret
xchg
sbb
loope
sub
imul
divb
inc
incb
fmuls
add
jmp
mov
mov
xor
jg
cmpsb
push
test
fadds
pop
daa
dec
add
cmp
cltd
in
loope
mov
imul
rcrl
xchg
xor
add
inc
and
add
sub
shll
movsl
mov
cmp
mov
pop
data16
pusha
jb
xor
rcll
ret
fwait
jg
popa
xlat
or
xor
test
sub
js
adc
pop
int3
or
fbld
jbe
xchg
jbe
sahf
mov
fcompp
fwait
idiv
jae
repz
adc
out
scas
cmp
lods
pop
mov
adc
stc
dec
xor
mov
fbld
test
or
add
aad
mov
mov
or
fidivrs
add
sbb
mov
je
jb
mov
das
sub
inc
ret
lret
inc
cmp
gs
add
in
aaa
les
xor
mov
sti
cld
rorl
cmp
sbb
pushf
mov
imul
xor
psrlq
js
test
xchg
into
pop
jg
cmp
arpl
sbb
data16
aaa
imul
stos
sub
add
cmpsb
pop
and
xor
mov
shl
out
pop
or
mov
pusha
aaa
idivb
pushf
mov
loope
inc
xchg
jno
jo
adcl
jne
jge,pn
add
inc
andl
ret
repnz
ss
mov
lcall
add
imul
repnz
push
in
sbb
push
or
out
adcb
mov
sbb
movsl
jns
dec
addr16
xor
in
push
aad
sub
xchg
mov
out
lcall
into
es
xchg
mov
cmc
cmp
imul
pop
add
sub
cwtl
pop
push
add
hlt
iret
xor
jg
and
sub
or
ja
mov
xchg
bound
mov
mov
addr16
loop
shlb
ret
xlat
and
adc
add
jb
bound
mov
mov
addr16
loop
shlb
ret
xlat
and
add
add
jae
xchg
inc
cmpsl
mov
mov
addr16
sti
pop
aaa
repnz
sub
push
lcall
xchg
ret
push
pop
in
cmp
adc
enter
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
aam
mov
lcall
or
add
add
add
or
add
add
lret
add
add
add
pop
add
pop
add
add
xchg
iret
add
jo
mov
add
ja
xor
popa
add
dec
add
aas
add
add
add
push
push
add
add
leave
add
add
add
popa
add
add
pop
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
adc
xchg
add
add
add
jmp
add
add
add
add
add
add
add
add
pop
add
or
mov
scas
add
add
add
add
or
sbb
and
add
add
add
add
add
add
add
add
icebp
add
add
add
sahf
add
add
mov
add
add
add
add
push
add
add
push
add
add
aad
push
add
xor
ja
daa
add
add
pop
add
add
test
add
add
add
add
add
add
add
mov
jle
imul
add
add
add
add
pusha
add
add
add
add
leave
add
add
add
add
add
add
add
add
push
push
add
add
and
add
xchg
add
ret
add
add
xchg
or
or
mov
add
roll
and
add
add
add
add
mov
dec
add
add
add
add
add
add
test
add
add
add
stc
add
add
add
add
add
pop
add
add
loopne
ret
add
jge
sbb
pop
add
pop
add
add
add
add
add
add
add
add
popa
add
add
js
push
add
fiaddl
pop
add
add
adc
add
jo
inc
add
add
add
add
add
add
add
add
cs
das
add
ret
add
add
add
add
add
test
add
add
add
pop
add
add
add
push
add
mov
add
popl
leave
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
mov
xchg
add
add
add
add
add
push
add
add
iret
or
add
add
sub
add
or
and
add
add
push
or
iret
or
add
mov
add
add
add
add
daa
add
add
lcall
add
add
add
add
add
add
mov
add
add
xchg
adc
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
addr16
cmp
int
fisubrs
inc
dec
xor
xchg
jecxz
xchg
adc
arpl
xchg
cmp
cmp
mov
or
or
jg
ljmp
cld
jp
out
and
inc
hlt
add
test
pop
add
fwait
aam
clc
jo
xchg
fstpt
add
dec
sbb
std
push
inc
dec
fildll
in
xchg
lcall
mov
mov
mov
movsb
mov
psrlw
lds
push
stc
nop
inc
fbld
ficompl
inc
pop
adc
dec
rcl
nop
xchg
and
dec
mov
and
lock
sahf
or
imul
movsl
leave
test
cltd
push
lods
shlb
scas
mov
outsl
iret
repz
popa
loopne
addl
pushf
or
mov
pop
dec
adc
sarb
gs
gs
es
jno
sub
ret
movsl
mov
stc
imul
cmpsl
cmp
xor
dec
lea
xchg
cmp
push
dec
cltd
mov
ret
cmp
xchg
jecxz
add
subb
xchg
int
jl
cltd
int3
idivl
pop
shr
stc
pop
sub
push
cmp
testb
cmp
pop
push
jne
push
and
movsl
xor
xchg
imul
ljmp
cs
cmpsb
push
cli
fildll
xor
and
cwtl
jecxz
jle
test
add
shr
cs
mov
es
xor
outsb
adc
and
add
xorl
les
sub
shrb
mov
bound
add
addr16
mov
jbe
pop
push
aaa
mov
mov
sbb
in
repz
jo
sti
cmp
lret
pop
hlt
sbb
pop
and
gs
dec
out
daa
es
and
addr16
and
into
mov
iret
flds
aam
test
add
adc
lcall
cld
scas
aaa
inc
cmp
jno
out
push
cwtl
dec
ja
or
je
bound
in
loop
or
xchg
dec
jno
sub
mov
adc
out
inc
lahf
push
mov
movsb
push
inc
mov
fcmovb
js
lahf
cwtl
xchg
ficomps
jnp
cld
inc
dec
mov
xor
pop
aas
fistpll
adc
push
mov
loop
and
rclb
daa
xchg
dec
xchg
int
into
mov
sbb
pushf
rcrl
or
push
dec
hlt
stos
fstpt
push
bound
inc
push
ficoms
icebp
xchg
or
movsb
arpl
or
sbb
aas
scas
je
aam
call
or
je,pn
mov
jmp
dec
adc
xor
xchg
pop
cmpsl
jecxz
leave
mov
push
pop
push
sbb
add
xor
into
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
