call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
jo
inc
pop
aas
dec
inc
adc
add
movsl
scas
lock
lahf
lock
mov
fists
aas
jo
push
pop
and
jg
dec
adc
lods
lock
mov
iret
nop
fistpll
imul
cmp
sbb
inc
loopne
sti
test
std
xchg
repz
stc
fists
das
jo
or
ds
sub
jmp
xor
mov
aam
dec
ret
mov
lahf
test
std
jle
xchg
out
iret
xor
das
xorps
lahf
fstpl
insb
iret
sbb
mov
outsb
cmp
jg
cmp
mov
sub
jg
xor
sbb
cmc
ljmp
xor
mov
pusha
aas
mov
dec
and
mov
shrb
and
inc
jns
adcb
ficomps
lock
jo
lock
add
and
mov
or
push
fisttps
paddusw
popf
push
mov
rcrb
scas
bts
lcall
pusha
xor
sub
inc
add
add
inc
stc
mov
cmpsl
fcoms
test
or
mov
and
cmp
add
jge
xchg
lock
mov
mov
lods
in
cmc
mov
push
jo
and
sbb
dec
insb
sub
loop
lock
popf
ret
nop
lock
inc
pop
and
add
jg
dec
adc
scas
lock
mov
iret
nop
fbld
jo
inc
pop
and
jg
dec
adc
scas
lock
mov
iret
nop
fbld
mov
sbb
cmp
push
sbb
mov
cmp
xchg
sbb
add
loop
and
imulb
pop
dec
inc
sub
mov
mov
pop
lret
pop
movsl
aad
xor
fldl
cs
in
inc
fadds
jb
cmpsl
arpl
gs
testb
pop
dec
pushf
mov
dec
aad
inc
repz
cmp
mov
xor
mov
leave
cmp
mov
sbb
cmp
cmc
jo
imull
sub
mov
outsl
pop
mov
insl
shl
mov
push
xchg
mov
sti
xor
jns
push
add
std
fsubr
in
out
sbb
imul
rclb
cmp
std
hlt
and
xor
push
cmp
mov
enter
pop
test
idivl
mov
inc
das
loope
mov
xor
imul
outsb
ret
mov
mov
mov
mov
fldcw
cmc
aaa
test
icebp
sub
aam
xor
and
push
and
mov
push
xchg
add
pop
cmpl
cltd
push
push
clc
psubb
je
out
sbb
pushl
in
fcompl
jns
ljmp
lahf
mov
sbb
mov
shll
out
mov
insl
jbe
pop
jl
cli
imul
imul
and
mov
push
mov
push
jmp
or
stos
gs
lcall
or
mov
jecxz
ficoml
pcmpgtd
push
cmp
cmp
aaa
or
pop
cltd
and
xchg
and
pop
add
mov
test
jecxz
xor
sarb
loope
imul
mov
mov
add
mov
cli
repz
dec
push
jle
jnp
lcall
movsl
mov
xchg
xchg
scas
sub
jae
insl
inc
xor
ds
and
sbb
out
sbb
fucomi
int
mov
xchg
or
jno
dec
pop
xor
cmpsl
int3
out
push
dec
sub
aaa
lds
mov
xchg
rorb
add
xor
mov
and
jo
jnp
jo
push
imul
jb
daa
inc
xorb
or
push
adc
push
xchg
mov
mov
data16
lret
mov
inc
nop
push
sub
lock
adc
mov
popa
jg
xchg
fbld
ds
gs
pop
push
pop
mov
or
cltd
pop
push
je
mov
sub
add
pop
sub
sub
popf
jo
fs
testl
cmc
push
jno
xchg
clc
push
rorb
dec
jae
loope
int
xor
ret
xlat
das
inc
mov
orl
mov
in
loopne
lds
es
adc
push
inc
dec
or
div
or
jge
nop
mov
adc
adc
sbb
in
or
jne
pop
addr16
ret
cltd
nop
xchg
and
mov
das
sub
pop
shll
enter
fidivrl
fcmovnbe
xor
scas
dec
bound
lock
pop
sub
leave
xor
and
insb
stos
fimull
xchg
stc
mov
nop
lods
movsl
mov
and
cs
lock
inc
or
addr16
sbb
push
pop
pop
mov
pop
fidivl
sbb
mov
in
repnz
mov
xorb
hlt
lds
jo
jle
arpl
sbb
mov
push
pop
cmpsl
lcall
jmp
incl
or
xor
and
les
or
mov
movsb
shll
xor
mov
pop
push
sub
lods
dec
dec
sbb
mov
insl
mov
cld
leave
andl
stos
xchg
adc
lods
lret
sub
cmpsb
jo
adc
ss
mov
enter
xchg
mov
ret
jbe
lcall
pusha
xchg
mov
sbb
pop
jl
cmp
popf
xor
mov
out
push
push
out
add
ss
aam
xor
fiaddl
dec
les
xor
and
shlb
lret
mov
fldt
or
jno
pop
gs
icebp
decl
pop
out
jp
ret
outsb
inc
iret
iret
dec
jbe
inc
or
dec
push
push
bound
pop
cli
dec
int
neg
jg
mov
or
mov
cltd
inc
jne
sbb
decb
incb
daa
dec
ljmp
push
adc
inc
jb
in
cmp
and
repz
xlat
add
sub
imul
fstpt
mov
inc
inc
mov
insb
jne
xor
fdivr
ja
mov
pop
mov
push
jmp
cmp
add
loopne
std
mov
cmpsb
hlt
jg
fdivp
lea
icebp
les
idivl
cmp
rol
lret
test
addr16
sub
test
jns
addr16
and
scas
adc
cmp
sub
mov
ljmp
mov
adc
fmul
sahf
xchg
dec
sub
lcall
je
clc
loop
aam
mov
push
movsb
cmp
mov
js
push
subl
loop
repnz
xchg
out
imul
sub
mov
cwtl
dec
or
and
ret
dec
push
or
or
ret
add
mov
inc
scas
xor
and
jae
jge
xchg
adc
not
xchg
mov
loop
test
xchg
inc
fldl
add
mov
adc
xchg
dec
or
jo
iret
inc
and
push
xchg
adc
ds
shlb
gs
movsb
xchg
scas
loopne
jp,pt
test
inc
pusha
je
addr16
sbb
jo
jecxz
jmp
pop
lods
cmpsb
insl
loope
sbb
inc
pop
or
in
dec
cmp
add
cld
sbb
sbb
add
inc
jle
mov
shl
testb
outsl
int3
sub
dec
mov
lods
push
dec
fbstp
xchg
subb
adc
lods
lods
push
push
xor
stc
mov
lea
jmp
cmp
pusha
dec
sbb
mov
mov
or
xchg
mov
je
call
jbe
or
xlat
add
push
adc
leave
popa
jp
loopne
pop
adc
jb
cmp
mov
add
stos
mov
pop
lds
or
sbb
rcr
icebp
into
dec
xchg
mov
mov
push
cmp
addb
pop
mov
in
stc
xor
or
dec
nop
push
arpl
dec
xor
add
xchg
pop
jecxz
and
xchg
and
xchg
aad
xchg
std
adc
int
mov
dec
jne
pop
mov
xor
insl
ret
push
lea
jnp
fcomip
insl
sbb
scas
fistl
dec
sbb
inc
xchg
dec
push
push
lea
and
out
scas
pop
jnp
cmp
sbb
push
inc
xorl
pop
fnstenv
insl
mov
aaa
sub
add
mov
adc
cmp
jno
inc
push
dec
jo
out
cmpb
subb
mov
imul
orb
adc
jbe
shll
jecxz
pushf
fstpt
inc
aaa
js
sbbb
fs
pushf
adc
les
test
popa
or
jbe
jo
and
nop
pop
adc
cmpsl
xchg
push
into
xor
insb
test
push
mov
cmp
das
jno
jle
and
dec
push
loop
sahf
pop
ss
push
arpl
orb
arpl
mov
fdivrs
jle
test
adc
icebp
push
add
clc
gs
xchg
scas
or
out
mull
add
sub
jle
jbe
push
and
sbb
mov
dec
out
je
out
or
and
mov
pusha
outsl
xor
out
std
cld
les
adc
cmpsl
mov
ret
bound
dec
mov
shrl
adc
cmp
jg
mov
xorl
dec
andl
push
inc
out
out
jno
push
stc
testb
mov
sti
data16
ss
or
adc
hlt
ljmp
push
ds
add
xchg
push
add
outsl
sbb
rcll
jo
in
mov
add
pop
fwait
pop
pop
ja
fs
push
in
mov
lods
sti
aad
lret
xchg
mov
cmp
xchg
inc
push
loopne
sub
push
xchg
jle
push
imul
sbb
jns
inc
push
div
mov
inc
mov
lret
test
mov
xchg
imul
sub
outsb
mov
mov
pusha
jne
xor
cld
adc
js
xchg
js
gs
lea
jp
inc
xor
lcall
mov
sub
ret
imul
pusha
and
push
je
inc
into
mov
es
daa
stos
push
jb,pt
inc
xchg
dec
cld
shrl
xor
rcrb
xchg
push
xchg
sub
pop
shrl
adc
dec
subl
add
pop
aad
out
cmp
pop
push
rcll
cld
popf
adc
into
js
mov
xchg
mov
sbb
jo
or
shl
add
in
mov
pop
or
jnp
clc
sbb
mov
scas
es
push
out
xchg
fcompl
and
aaa
fstpl
dec
mov
sbb
lcall
xchg
mov
arpl
and
jns
jno
push
mov
xchg
in
xorb
xchg
mov
lock
aad
add
into
sti
push
cmp
outsl
xor
movsl
nop
xor
sahf
mov
test
xchg
push
and
jae
leave
inc
dec
cmc
inc
pop
push
dec
mov
pop
in
xchg
sub
out
ficompl
sub
subb
cli
jbe
mov
test
jg
lret
lds
ja
sbb
push
std
inc
test
aaa
ret
shll
jb
pop
lods
mov
dec
xchg
sbb
stc
pop
loopne
mov
cmpsb
rcrl
jp
push
cmp
or
stos
and
notl
adc
lea
cld
xchg
jg
call
push
loop
mov
insl
mov
xor
les
add
fs
cmpsl
test
lods
in
mov
mov
out
cmpsl
fcomps
test
stos
sub
in
jno
mov
fistps
add
out
int3
test
loopne
fdivrs
fisubs
or
rcrb
nop
mov
mov
xor
pop
pop
adc
cmp
mov
dec
mov
adc
push
jmp
mov
insb
dec
pop
jle
loopne
xchg
fucom
imul
xchg
mov
xor
mov
dec
xchg
push
rcrl
ds
xor
lea
ss
popa
push
add
jns
push
imul
insb
out
inc
sbb
and
sub
xchg
inc
ror
xchg
push
shrb
dec
fistps
icebp
xchg
data16
clc
in
fucomip
jb
test
xor
cmp
mov
lods
je
mov
dec
pop
mov
not
push
repnz
shrb
pop
sbb
outsb
mov
out
cmp
mov
push
lea
cltd
sahf
and
bound
fsubrl
out
push
jmp
inc
lods
arpl
cmc
pop
mov
mov
push
sub
lret
mov
mov
cmc
in
leave
lcall
dec
shll
pop
adc
sub
imul
sbb
pop
dec
or
adcb
les
test
pop
das
les
outsl
das
ss
jle
das
insl
lods
jno
lods
mov
jmp
scas
repz
xchg
add
and
mov
lods
movb
sysexit
int3
outsl
sbb
pop
dec
xor
ret
hlt
add
and
cs
mov
push
cmpsb
push
test
jg
push
fs
jl
mov
push
cmpb
jp
push
push
stos
decl
sub
test
fcomps
add
lods
aam
test
test
sti
stos
out
gs
ljmp
push
or
cmp
push
loope
xchg
mov
test
pop
mov
cmp
sti
mov
ljmp
shll
out
cmpsb
mov
pushf
pop
mov
inc
dec
pop
adc
scas
int
mov
add
add
fstpl
mov
push
das
jbe
or
add
push
aas
push
stc
das
fcmovnu
mov
mov
jo
jmp
mov
sub
jg
jbe
sti
xchg
jp
mov
mov
das
aad
outsb
sub
nop
dec
cmp
lds
jg
mov
inc
xchg
cwtl
out
gs
mov
sbb
or
hlt
dec
sbb
mov
pop
out
rorb
mov
inc
repz
xor
cmp
out
flds
in
mov
jae
and
or
andb
enter
ss
pop
jns
lret
cltd
xor
arpl
mov
mov
imul
cmp
xchg
push
mov
lret
fcomps
and
neg
shr
lret
int3
cmp
jns
jno
scas
mov
stos
cwtl
xchg
xchg
mov
jo
push
add
adc
setg
lea
and
sti
rol
xor
fcompl
rclb
mov
xchg
outsb
mov
in
movsl
out
dec
outsb
adc
inc
inc
aam
cmpl
inc
dec
gs
pop
pop
nop
inc
js
adc
cmp
dec
jmp
xlat
jbe
mov
mov
cmp
push
popa
sub
cmp
or
jne
push
pop
cs
mov
cld
xor
loope
cmp
add
inc
xchg
out
arpl
movsl
insl
or
int
stos
cmc
or
ljmp
popw
fldcw
test
adc
add
shl
repz
lock
push
pop
mov
popa
adc
icebp
outsb
inc
popa
jmp
push
sub
pop
cmp
gs
inc
or
int
stos
pop
stc
jl
adc
ret
mov
jne
das
enter
in
sar
shll
iret
bound
cmp
dec
ss
scas
jle
mov
je
pop
mov
cmc
loope
xchg
mov
pop
push
xor
or
nop
push
cmp
mov
mov
cmp
mov
loop
ss
jo
sti
loop
xchg
jb
fdivrs
imul
push
adc
xchg
loope
std
mov
std
sbb
mov
xorb
jmp
decb
push
inc
in
movsl
pusha
xor
out
inc
jg
mov
or
sarl
cmp
sbb
xchg
pop
mov
movsb
movb
mov
mov
mov
mov
sub
mov
inc
lods
mov
pop
les
pop
add
int
cs
loopne
cmpsl
idivl
in
xor
lret
xor
or
dec
add
dec
xlat
xor
pusha
pop
stos
mov
pop
repz
xor
cli
mov
loope
out
rorb
subb
je
xchg
xchg
fs
std
xor
inc
mov
mov
or
aad
push
shll
dec
ss
add
jecxz
ds
cmpsl
push
loopne
dec
lods
add
loopne
mov
mov
mov
sub
mov
clc
mov
fsubl
fnstenv
lea
xchg
lock
mov
ret
jns
push
sbb
add
cmp
pop
jns
fstl
out
mov
fs
lods
insl
pop
mov
xchg
dec
xchg
mov
fisttpl
mov
jecxz
dec
out
gs
in
jae
jno
movb
bound
in
out
in
mov
in
and
xor
push
dec
cmp
test
jmp
addr16
lret
clc
lods
pop
mov
push
outsl
sub
jnp
mov
and
pop
sbb
mov
mov
or
push
es
fnstcw
dec
mov
movsb
sub
cmp
and
es
hlt
cli
faddl
sti
fdivl
add
mov
cltd
clc
iret
mov
dec
xor
cs
fldcw
push
xor
cwtl
inc
into
jbe
jnp
jl
fwait
andl
cmp
xchg
dec
lret
movsb
sbb
jne
inc
mov
sub
sub
or
jo
xor
icebp
or
jne
cmp
jnp
nop
cmc
dec
mov
jle
movsb
lds
push
jmp
mov
add
mov
push
pop
adc
jns
insb
mov
mov
cmpsb
aas
scas
stos
or
sbbl
mov
es
cmc
jnp
jl
jns
inc
std
jge
push
sub
jmp
xchg
mov
and
pop
pusha
mull
inc
xorl
mov
add
cmpsl
repnz
fwait
test
lsl
rcr
js
sti
inc
inc
mul
pusha
cmp
cmp
or
js
lds
xchg
xor
mov
jo
test
cmp
clc
pop
test
push
push
push
push
daa
xchg
mov
or
mov
jg
fildl
adc
lret
jno
loope
out
cmp
lods
xor
shrd
push
inc
push
stos
cmpsb
sti
mov
sub
aad
gs
add
movsb
fldlg2
and
xor
and
adc
icebp
mov
insb
mov
push
pop
and
lcall
and
cmp
mov
jo
inc
jmp
aas
cmp
dec
hlt
cld
jns
push
dec
dec
mov
lds
dec
or
xor
xor
fisubl
sub
inc
int
mov
jb
sub
aad
jno
jns
dec
sub
pop
adc
mov
dec
xor
lcall
stc
lds
adc
sbb
andl
mov
jg
cmp
xorb
je
cmp
xor
or
leave
dec
inc
enter
xor
sbb
in
adc
cmc
inc
mov
sub
lret
arpl
and
clc
ljmp
icebp
pop
ss
lods
mov
mov
sub
xlat
jo
push
sub
push
push
cmpsb
mov
pop
jns
sbb
push
dec
jg
gs
int
mov
pop
xchg
jg
out
sub
scas
xchg
cmpl
mov
pop
inc
fstl
aas
jmp
jl
clc
stos
jmp
mov
maxps
rorb
mov
shll
push
push
xchg
push
addr16
faddl
vpsubb
dec
sub
mov
dec
and
fidivs
sbb
xor
addr16
jmp
aas
add
xor
lcall
pop
push
ljmp
xor
fldl
stc
call
rcrl
rcll
mov
in
sub
je
xor
or
push
fwait
inc
pop
and
pop
mov
sub
sbb
jns
out
cltd
pop
clc
jb
sub
lods
cltd
out
xchg
or
mov
mov
push
inc
or
lcall
lock
mov
dec
ds
ljmp
adc
insb
mov
mov
jmp
test
mov
fwait
das
in
lea
mov
adc
mov
sub
sub
fsts
dec
push
push
mov
and
mov
push
mov
test
xchg
repz
mov
mov
jge
movl
mov
inc
insl
rclb
cli
mov
push
inc
int3
je
mov
fsub
pop
xchg
lcall
adc
aad
repnz
int
lahf
ret
mov
mov
stos
push
adc
fcompl
fmull
addr16
fsubl
jno
cmp
dec
loope
mov
into
fs
fs
adc
xchg
stc
jne
into
daa
lcall
xchg
int3
lahf
fisubrs
ja
fiaddl
popa
gs
mov
rcrb
mov
sub
cmpb
mov
xor
pushf
and
mov
imul
sbb
insl
adc
mov
jecxz
mov
xchg
in
fistpl
inc
pop
push
ret
dec
sub
cmp
sbb
in
or
popa
test
mov
mov
cltd
aaa
pop
adc
ds
sbbb
jle
jge
aam
inc
cmp
cmp
scas
sbb
pop
dec
or
stos
cmp
jp
inc
mov
adc
pop
mov
pusha
fxch
lea
pop
mov
sarb
push
inc
adc
or
jne
aas
scas
pusha
insl
addl
xor
xchg
cmc
mov
decl
adcb
xor
dec
jns
xor
sub
adc
popa
mov
stc
sahf
jecxz
jnp
sub
or
and
push
out
add
jl
test
pop
pop
fisubrs
mov
fsubl
dec
pop
xchg
addb
fadds
popf
imul
push
inc
mov
pop
out
fcoms
mov
out
jge
in
scas
outsb
sub
pop
mov
sub
stos
mov
sub
lock
mov
ret
aas
and
xor
dec
adc
scas
lock
mov
iret
nop
fbld
jo
inc
pop
and
jg
dec
adc
scas
lock
mov
iret
nop
fbld
jo
inc
pop
and
jg
dec
adc
scas
lock
mov
into
mov
aas
jbe
push
pop
and
jg
dec
nop
pop
pop
scas
unpckhps
shr
xlat
cmp
jg
outsl
and
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
insl
or
pop
cmp
push
std
popf
int
fnstsw
in
popf
std
insl
or
pop
cmp
or
std
std
mov
int
fisttpll
or
pop
cmp
or
and
repz
ret
lahf
repz
and
jge
ds
das
insb
insl
mov
jns
adc
xchg
add
or
aas
out
rcrl
into
mov
cmp
inc
lods
pop
xor
test
mov
testb
fcmovbe
push
jae
sub
jo
repz
in
jo
bound
insl
mov
or
adc
sub
jl
cmp
fdivrl
repz
sub
in
icebp
inc
push
sti
in
push
cmpsl
aad
lea
lahf
jo
in
or
daa
test
ret
ss
or
sbb
std
jno
lret
push
jge
fnstsw
jo
fwait
inc
loop
dec
mov
shl
sbb
popf
xor
fdivrs
xor
pop
cmp
or
std
popf
int
fnstsw
in
popf
xchg
sub
sbb
inc
and
and
call
mov
enter
leave
out
leave
mov
sbb
add
sbb
call
enter
decl
sbb
inc
pop
pop
sub
insl
sbb
popf
int
fnstsw
in
popf
std
insl
or
pop
cmp
or
std
popf
int
fnstsw
in
popf
std
insl
or
jns
testl
mov
pop
xor
js
ds
dec
fwait
add
dec
inc
test
stos
movsb
sub
daa
mov
int
mulb
and
lods
jl
fwait
lods
mov
cwtl
xor
fwait
clc
das
scas
jb
lcall
push
negb
push
out
mov
dec
and
movsl
mov
popf
int
mov
mov
cmc
and
out
lea
jge
fst
dec
lds
mov
jne
mov
daa
lds
lods
cmp
sub
mov
inc
cmpsb
test
push
sub
movsl
fldenv
fwait
push
mov
insb
les
cli
sub
push
xchg
push
or
cmpsb
cmpsb
pop
sbb
stos
imul
mov
xchg
out
fsubrp
mov
adc
cmp
pop
das
jbe
jne
aad
lret
mov
sub
mov
fdivrp
das
push
and
push
and
mov
scas
arpl
push
adc
pop
add
jp
sub
mov
inc
pop
mov
mov
mov
add
out
hlt
mov
ret
in
mov
shrb
flds
fstpt
shll
pop
sbb
je
jp
push
in
mov
add
popa
inc
sub
push
xchg
or
xchg
xchg
and
add
enter
rcr
in
out
gs
jb
test
mov
inc
fldenv
movb
jnp
fisttpll
push
xor
dec
push
mov
cwtl
ljmp
sti
mov
cwtl
inc
fs
fs
sub
addr16
xchg
jns
xchg
fidivrl
icebp
xchg
out
imul
sti
xlat
aaa
aaa
pusha
sar
ret
sub
cltd
out
sub
dec
jmp
orl
into
stc
mov
push
push
loopne
jb
mov
icebp
mov
movsl
mov
inc
inc
lods
cmc
mov
xchg
xchg
outsl
xor
in
jne
pop
fisubrl
push
pop
sub
xor
ljmp
mov
jmp
or
mov
cwtl
and
int3
sarl
in
mov
xchg
lods
int
test
ljmp
jbe
cmpsl
xor
sbb
lret
mov
cmpsl
inc
push
fxch
movsl
decb
jo
adc
push
fs
dec
aaa
orl
adc
sbb
lret
adcl
mov
loopne
jae
xchg
popa
push
in
and
mov
loopne
outsb
xor
in
popf
cli
jmp
into
adc
mov
mov
enter
cltd
dec
jb
mov
mov
pop
jne
mov
fcmovne
hlt
repnz
xchg
pusha
inc
shrb
or
lock
add
cmp
ficoms
nop
and
ja
lods
fnstsw
dec
jge
dec
ret
xchg
int3
mov
xchg
lret
ret
test
or
enter
lret
jmp
cltd
inc
stc
jecxz
repnz
pop
mov
and
popf
mov
cmp
pop
mov
inc
pushf
imul
dec
mov
jne
fs
cmp
pop
mov
pop
les
sahf
aas
lret
pop
mov
mov
stc
pop
jns
mov
nop
cld
shld
cmc
dec
xchg
popf
sar
mov
xor
dec
in
jne
mov
inc
pusha
insb
pop
cs
inc
rolb
mov
and
sub
fidivs
cltd
jmp
in
dec
es
or
sub
lret
or
shl
add
push
jp
stos
cmp
aas
sbb
mov
xchg
cmp
loope
jne
in
daa
pop
lods
lcall
int3
das
arpl
adc
out
cmp
pop
in
or
pop
dec
lds
xchg
adc
lock
cmp
push
es
imul
jb
adc
scas
sub
arpl
xor
dec
andb
sbbl
dec
jl
push
loope
inc
xchg
sub
dec
mov
push
jl
ds
xor
call
lret
xor
insb
outsl
push
push
xor
sbb
call
sbb
cld
push
or
ret
lds
cmpb
push
ss
test
jne
pop
mov
fmull
jae
je
data16
fdivrl
fisubrs
out
stos
xchg
mov
dec
xchg
inc
xchg
cmpsl
and
je
mov
add
mov
test
add
mov
jbe
cs
jecxz
jne
pop
lcall
fs
add
mov
in
xchg
fldt
clc
pop
cmp
cwtl
and
jb
adc
inc
adc
aam
sbb
icebp
sbb
dec
stc
xchg
cmp
cmp
insb
sbb
jns
inc
sbb
jl
ret
mov
jmp
push
mov
sub
xor
in
adcb
into
dec
xchg
movl
jl
jge
les
rep
inc
imul
xlat
mov
cwtl
cwtl
mov
lods
mov
inc
add
cmp
pusha
movsl
mov
push
add
cmp
iret
dec
sbb
add
dec
hlt
sti
cmp
jnp
fisubl
push
inc
and
push
adcl
push
sub
filds
jmp
dec
dec
jne
xchg
jmp
push
sbb
lock
pop
out
sarb
sub
sbb
fs
sbb
pop
dec
out
push
and
pushf
xchg
sti
sbb
or
pushf
outsl
dec
cltd
or
and
fdivs
mov
hlt
out
idivb
or
scas
pop
cmpsb
rcll
imul
pop
in
rclb
dec
inc
imul
pop
mov
mov
fdivp
pop
xchg
dec
jl
out
mov
mov
nop
bound
push
fwait
or
and
sbb
shr
aas
or
outsl
cmp
out
popf
push
jge
pop
jae
sub
xor
in
mov
call
sbb
pop
mov
adc
int3
outsb
out
fwait
nop
xchg
testl
sub
or
rcrl
cli
jle
int
sbb
in
jae
xchg
sarl
andb
leave
clc
xor
test
lret
and
mov
xchg
pop
aad
mov
movsb
pushl
call
push
push
das
fsts
aaa
push
out
push
adc
sti
mov
cli
insb
cmp
and
mov
and
stos
sbb
lods
lcall
arpl
and
jecxz
or
mov
adc
xor
aas
jmp
inc
subb
decl
mov
stos
outsl
xchg
mov
aad
js
mov
outsb
pop
xchg
cmpsb
or
mov
xor
insb
xor
xchg
out
sbb
mov
xchg
nop
fmuls
dec
shl
movsl
pusha
jg
nop
mov
in
mov
inc
jbe
inc
fwait
lret
mov
aaa
cmp
dec
fldt
fistl
mov
adc
or
repz
mov
push
and
jbe
add
lds
cs
pop
and
push
or
inc
add
sarb
les
push
adc
out
sbb
inc
add
out
mov
dec
dec
ja
push
and
sbb
cltd
pop
imul
lods
xchg
mov
cmp
sbb
xor
pusha
cmp
lods
inc
lret
test
imul
adc
inc
add
cmp
push
sub
fisttpll
loope
pop
lahf
aam
in
scas
mov
ret
mov
xchg
enter
push
push
inc
sub
adcl
xor
or
adc
mov
out
loopne
sub
mov
inc
and
jmp
shlb
and
dec
add
fsubs
xchg
xor
cwtl
aam
jecxz
outsl
iret
ret
iret
push
push
mov
sbb
mov
gs
push
cmp
out
jmp
dec
pushf
push
lret
xchg
ret
dec
arpl
sti
dec
aaa
pusha
loope
add
cmpsl
inc
xor
aam
je
dec
inc
lods
inc
push
iret
test
shrb
fldt
incl
mov
aaa
cld
imul
mov
mov
dec
repnz
insl
imull
test
mov
xchg
jnp
mov
lcall
insl
xchg
icebp
ret
in
or
jle
xor
lret
test
mov
nop
mov
arpl
inc
or
xchg
cmpsb
ljmp
pop
sbb
mov
mov
inc
fnstsw
cmp
aas
dec
mov
gs
mov
sbb
xor
mov
cmp
inc
ss
dec
rclb
in
pop
add
adc
sub
cli
sub
lock
mov
inc
insl
test
call
add
pop
data16
out
adc
mov
xchg
sub
testb
xchg
es
enter
xor
in
jo
or
out
lea
add
adc
jbe
add
lock
in
mov
cmpsl
cmp
xchg
cwtl
adc
mov
fs
call
es
mov
adc
pop
sub
mov
add
mov
cli
mov
and
addb
mov
insb
scas
es
out
pop
cmp
mov
jae
add
aas
je
dec
stc
jns
pop
or
push
xchg
push
and
test
sbb
into
aam
mov
add
enter
mov
popa
aas
cmc
dec
outsb
mov
call
add
mov
jo
pop
imul
repnz
inc
adc
push
mov
int
cwtl
xor
xor
lea
cs
int3
jb
jae
and
adc
push
jns
jo
stos
mov
pop
in
dec
sbb
mov
xchg
test
pop
add
pushf
mov
ds
scas
bound
dec
add
pop
and
loop
mulb
cltd
sub
xchg
loop
adc
iret
sti
mov
je
push
lcall
mov
inc
addr16
je
jecxz
hlt
push
adc
jl
pop
sub
inc
ret
insl
int
data16
pop
shll
cmp
xor
repnz
fwait
sbb
sti
jne
dec
xor
dec
cmp
push
sbb
notl
test
dec
lahf
sbb
dec
pop
push
test
sub
xchg
js
mov
fmulp
push
add
adc
push
loope
jb
in
jns
push
lods
or
fildll
rcrl
fwait
out
shlb
insb
icebp
roll
cmc
cltd
and
je
jp
pusha
mov
jmp
movsb
fdivl
adc
sub
out
divb
jle
xchg
mov
mov
adc
cmp
adc
call
fsubrl
add
cmp
mov
sbb
movsl
pop
dec
popf
push
maskmovq
mull
shlb
ror
dec
jo
adc
movsl
ja
jbe
sub
add
xchg
xchg
dec
shl
pushf
cmp
fisubs
xchg
out
xchg
sbb
mov
shlb
adc
daa
or
cmp
pusha
jnp
aas
jb
adc
in
jbe
or
hlt
push
sbb
mov
or
pushf
inc
inc
xchg
adc
pushf
mov
mov
outsb
jb
cltd
repnz
sub
sbb
std
push
popa
fdivp
cmc
xchg
or
into
rclw
mov
jmp
movsb
sti
sub
jmp
xchg
mov
mov
mov
xor
or
ja
pop
push
push
sub
clc
mov
ss
arpl
in
out
fisttpll
out
stc
pop
ror
loopne
pop
push
or
push
les
test
pusha
int
xchg
mov
in
inc
lock
sahf
add
inc
gs
rcrb
mov
int3
adc
adc
and
or
fdivrl
mov
pop
sti
movsb
test
sub
arpl
mov
mov
arpl
mov
adc
adc
into
sarb
mov
cmp
loop
push
push
out
iret
orb
cmpsl
jmp
xchg
and
mov
sub
adc
add
cmp
aaa
leave
xchg
aad
in
inc
lock
xchg
fidivrs
sahf
ljmp
dec
call
mov
cmpsb
push
pop
dec
lea
add
mov
pop
fdivrp
pop
add
iret
clc
push
mov
in
push
pop
cmove
dec
jmp
insl
loopne
push
jle
jns
daa
inc
call
adc
ds
cmp
xchg
aas
sets
fsubp
stos
repnz
fs
pop
cmpsb
mov
enter
mov
clc
daa
adc
jb
sbbb
lock
add
xor
mov
int
push
into
pop
jns
sub
in
push
stc
xchg
bnd
pop
mov
sub
lahf
add
sub
roll
push
hlt
xor
inc
cltd
jns
cmp
dec
roll
nop
in
mov
call
stos
add
xor
dec
clc
sub
and
wbinvd
mov
nop
rcl
sub
jbe
imul
div
faddl
adc
inc
xchg
rol
rol
mov
shl
in
jp
cltd
sahf
mov
fldl
push
push
inc
test
pop
sahf
lahf
dec
or
mov
xchg
test
mov
xor
hlt
jp
pop
push
add
pop
mov
stc
pop
mov
das
pop
ret
xor
mov
inc
mov
sbb
pop
cld
in
aam
xor
xor
inc
cmp
aaa
mov
xor
shrl
mov
test
repz
dec
xchg
jne
jecxz
cwtl
pusha
xor
add
sub
fistps
lret
cmp
rolb
xchg
mov
mov
jo
aaa
mov
xor
int3
popf
add
pop
mov
jno
lret
out
lea
roll
dec
jp
sti
mov
icebp
mov
sahf
mov
shll
lock
jo
xor
scas
and
jmp
addl
clc
jge
ljmp
movsl
mov
sbb
sbb
sti
bswap
leave
mov
insl
test
pop
out
add
pop
jne
out
fstpl
arpl
jb
ss
lods
inc
bound
int
jl
adc
xor
push
push
pop
out
popa
push
mov
jne
scas
fcomps
sub
psrad
xchg
push
push
cld
test
repz
mov
pop
add
fsubp
mulps
mov
push
out
jo
inc
dec
adc
loopne
pop
mov
sbbl
and
pop
mov
negl
sbb
mov
push
sub
imul
xor
or
stos
repnz
xchg
push
jl
sbb
xchg
mov
test
jbe
mov
das
cmp
sbb
add
inc
cmp
clc
jmp
ficompl
or
mov
mov
fsubp
inc
aaa
dec
adc
jns
dec
stc
sub
adc
mov
shl
into
cmp
xor
mov
cmp
mov
loope
pop
call
jle
out
enter
pop
fidivl
neg
jecxz
xor
pop
mov
adc
ljmp
inc
ret
pop
mov
fs
dec
push
dec
pop
icebp
ss
push
lock
inc
lds
mov
cli
push
inc
or
sbb
test
iret
xor
sub
push
push
out
xchg
dec
popf
jle
mov
mov
mov
mov
iret
lret
push
ljmp
mov
mov
xchg
movsl
mov
sub
push
out
adc
jno
and
push
xor
mov
out
sub
or
sub
or
aad
lret
mov
push
mov
scas
add
int
fsub
push
dec
xor
mov
mov
jp
lret
add
pushf
inc
sbb
nop
in
sub
in
and
ljmp
fwait
dec
shll
push
inc
outsl
insl
push
mov
imul
fwait
xor
stos
pop
xchg
sub
and
cmp
cmp
je
ljmp
lcall
push
pop
mov
mov
bound
jg
mov
xchg
xchg
mov
int
addr16
movsb
outsl
sub
std
pushf
rclb
addr16
inc
shr
ror
js,pt
imul
xor
std
push
pop
or
aaa
decl
push
and
mov
stc
mov
mov
push
mov
jge
fdivrp
addr16
mov
test
inc
or
test
stos
daa
std
dec
repnz
sbb
test
or
mov
cltd
jno
and
in
popa
cmpsb
mov
pop
rorl
pushf
mov
jmp
or
js
mov
xorb
jo
addb
mov
ja
push
ss
mov
stos
sub
shrl
movsl
cltd
and
cmp
ja
cmp
mov
arpl
ds
mov
adc
ret
subl
sti
jae
cltd
inc
aam
scas
cltd
cmp
adc
notl
daa
jns
xchg
xor
mov
mov
mov
js
mov
ss
and
pop
mov
ljmp
not
dec
xor
scas
sub
stos
out
pop
imull
inc
repnz
push
inc
ficomps
enter
js
mov
mov
jns
xchg
add
xchg
mov
andl
mov
pop
adc
jle
mov
push
push
fisubrl
lret
lahf
jle
icebp
lcall
mov
shr
xchg
sbb
pop
inc
mov
jne
cld
sbb
ss
cmp
dec
xchg
mov
imul
xor
mov
sub
pop
jb
sub
out
fcmovne
out
aas
mov
sbb
arpl
lea
in
test
sahf
xchg
pop
and
inc
cmp
pop
xor
ret
es
clc
push
push
aad
cwtl
fwait
movsb
in
mov
jle
xchg
in
mov
adc
adc
jg
mov
nop
movb
add
dec
dec
leave
jecxz
and
js
arpl
call
test
xchg
xlat
icebp
xor
loope
add
xor
xchg
out
mov
cmp
iret
iret
notl
into
test
mov
xor
add
notb
in
dec
ret
push
loopne
fists
pop
jbe
in
jbe
stos
dec
mov
add
xchg
jae
mov
das
mov
mov
dec
mov
nop
mov
mov
sarl
leave
sbb
jl
and
mov
cld
aam
xchg
rclb
push
or
popa
mov
repz
xlat
dec
scas
insl
lcall
sahf
and
idivb
sub
int
and
shl
push
pop
rcrl
movsl
lds
mov
add
mov
xlat
pop
jle
cltd
lds
sub
add
xchg
pop
flds
sbb
test
aam
xchg
das
cmp
jb
mov
movsl
pop
sub
jnp
imul
or
filds
sbb
mov
push
mov
pop
push
inc
pop
stc
adc
addr16
mov
and
leave
mov
lods
idivl
dec
mov
enter
sbb
mov
sub
insl
jb
xchg
cmp
push
mov
nopw
or
sar
or
scas
int3
jne
stos
or
dec
or
dec
jno
rolb
cmp
push
hlt
mov
cmp
lahf
rep
fsts
divb
in
xchg
mov
pop
lea
adc
mov
jl
fmull
xchg
sub
adc
or
mov
data16
xor
dec
lea
push
ds
and
popf
out
aam
out
jb
mov
aas
rcrl
adc
cmp
inc
out
adc
fcmovu
sub
mov
call
dec
jno
popa
sub
jmp
js
cld
imull
sbb
jb
adc
cld
sub
cs
jno
xchg
sbb
sub
push
dec
and
push
scas
xchg
mov
int3
adc
mov
rcrl
mov
push
mov
in
in
xlat
sbb
imul
mov
xchg
push
or
hlt
adc
mov
arpl
pop
js
fdiv
mov
mov
out
jle
mov
out
add
notb
cmp
fwait
xor
jo
pop
fwait
push
pusha
ss
in
pop
pop
fisubl
pushf
sbb
xlat
repnz
and
loopne
lea
xchg
cld
bound
and
cmpsb
mov
adc
adc
adc
je
scas
inc
cmp
mov
lea
xchg
or
sub
inc
out
pop
and
and
movsl
add
push
cmpsb
add
xor
shlb
adc
or
jecxz
mov
lea
popa
lret
stos
movsb
into
pop
jmp
inc
mov
mov
lahf
sti
cld
or
pop
rol
add
pop
mov
push
push
sahf
testb
ficomps
xchg
adc
ret
xchg
jne
xlat
psubq
test
xor
ficoms
dec
popa
adc
mov
xchg
mov
outsl
adc
cmp
or
std
popf
int
fnstsw
in
popf
std
insl
or
pop
cmp
or
std
popf
int
fnstsw
in
popf
std
insl
or
pop
cmp
or
or
fnstsw
in
popf
std
insl
or
pop
cmp
or
std
aaa
lods
fiaddl
and
bound
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
push
sahf
inc
scas
jae
arpl
outsb
mov
and
out
ret
ds
xchg
pop
or
mov
mov
scas
jae
arpl
adc
adc
xor
push
push
fistps
ret
dec
repz
loope
subl
sahf
pop
scas
imul
out
sub
cmp
rcrl
loopne
mov
sub
rcll
pop
sahf
xor
push
out
add
ret
int
and
outsl
loopne
imul
cmp
fistl
leave
fstpt
xor
arpl
lock
mov
jnp
loope
ja
mov
mov
mov
pop
or
lahf
sub
cwtl
push
sub
mov
rorl
js
rcrl
sahf
cmp
mov
out
or
push
xor
adc
adc
inc
cmpsb
push
xor
cmp
scas
scas
or
mov
popa
mov
es
jbe
cmp
dec
data16
imul
ds
sbb
loopne
es
sahf
aaa
and
cmp
cs
push
cmpsb
push
xor
jae
mov
mov
cmp
jg
roll
scas
push
arpl
adc
add
xor
cmp
rcrl
fldt
ljmp
outsb
test
fidivl
ret
push
lea
mov
inc
mov
inc
negl
cmp
adc
sarl
fiaddl
testb
mov
adc
cmpsb
push
xchg
pop
loope
jecxz
cmpl
popa
xlat
clc
push
mov
int
sahf
es
and
add
xor
and
rcrl
ret
cs
xchg
pop
subl
mov
scas
jae
arpl
adc
add
xor
and
rcrl
ret
cs
xchg
pop
subl
mov
and
in
popa
mov
std
or
dec
inc
aas
lods
jmp
mov
bound
inc
jo
fidivrl
and
imul
sbb
sbb
movsb
dec
pop
ficompl
repz
cmpsb
es
jp
mov
xor
out
pop
jmp
sbb
cld
mov
stc
iret
cmp
mov
arpl
fisubrs
or
out
jle
push
movsl
imul
xchg
aam
scas
pop
inc
daa
xchg
test
pushf
outsb
je
mov
lret
sub
jp,pn
sub
lret
sub
dec
insl
loop
xchg
or
leave
fdivr
jne
mov
add
jmp
sbb
push
dec
and
pop
and
bnd
es
add
insb
repnz
push
sub
hlt
cmp
ficoml
inc
sub
mov
shrl
xor
out
mov
idivl
inc
ret
mov
iret
shll
stc
ret
push
mov
daa
cmp
mov
dec
adc
andb
jl
mov
jmp
out
mov
inc
xchg
xor
jnp
dec
jecxz
lret
ljmp
cmp
push
inc
je
stos
mov
xor
in
loopne
add
out
jo
jecxz
sbb
arpl
testb
sub
inc
ficompl
pop
and
pop
sahf
jg
adcb
pop
stc
cwtl
lcall
popa
sbb
test
adc
push
dec
xor
cmpsb
add
cwtl
in
out
push
stos
mov
push
jo
mov
and
dec
jl
cmp
and
pop
mov
movsl
ljmp
or
mov
leave
dec
test
rcrb
push
jnp
fnstenv
mov
jmp
clc
xchg
bound
sbb
fisttpll
push
lahf
fisttpll
add
cmp
jg
dec
adc
clc
fadd
or
xor
aad
pop
scas
mov
andb
jmp
mov
mov
in
stos
lcall
jge
in
ds
mov
hlt
sub
inc
insl
bound
cmp
sbbb
sbb
add
nop
lods
push
scas
subb
cmp
outsb
es
data16
inc
mov
adc
mov
stos
std
cmpb
fwait
cmp
popa
dec
jl
idiv
mov
jnp
xchg
aad
stc
mov
idivl
aam
and
shrl
jmp
roll
and
cmpb
adc
mov
jb
pop
fidivrs
xchg
jle
sub
dec
inc
sub
imul
xlat
inc
ja
mov
push
pop
dec
fdivp
pop
out
xchg
stos
pop
cmpsl
int
add
push
push
scas
xor
cltd
out
push
out
sbb
call
sbbb
and
cld
xor
lods
inc
in
add
mov
mov
adc
mov
test
add
push
fistl
push
and
popf
dec
sub
pop
cmp
push
inc
hlt
arpl
xchg
inc
pop
pop
xchg
mov
cli
push
inc
fs
mov
dec
sub
push
scas
in
pop
push
ds
mov
lea
outsl
sahf
sbb
mov
cmp
fcoms
std
test
cld
adc
sahf
icebp
push
cld
in
xchg
sub
dec
sub
jge
lahf
inc
mov
push
push
sbb
mov
fildl
insb
iret
negb
pop
outsb
cmp
dec
addr16
data16
fadd
das
test
fsubr
cmc
outsl
sbb
sbb
xchg
xchg
add
out
fldl
push
xor
pop
add
aad
into
test
mov
sbb
lods
dec
sub
add
cmpb
cs
scas
test
ja
add
jg
sbb
mov
into
mov
into
sub
push
sub
je
dec
test
pushf
pop
mov
popf
test
mov
jb
or
push
push
sub
add
jno
inc
arpl
cmp
jg
cmc
cmp
xchg
push
stos
inc
dec
adc
out
xor
out
push
mov
mov
insb
pop
mov
xor
cltd
push
stc
in
inc
or
cmp
xor
xchg
xchg
xor
dec
add
inc
loop
mov
imul
lea
aaa
stos
xchg
cs
add
push
add
repnz
sbb
xor
in
rcll
rorb
out
scas
pop
xor
aaa
sbb
jo
outsb
mov
mov
popa
pop
inc
xchg
fwait
cmp
lret
stos
jl
jmp
mov
xorl
dec
cli
pop
jo
les
in
mov
inc
push
push
in
les
or
les
ljmp
into
sbb
in
sub
mov
sub
cs
inc
aaa
test
mov
js
roll
cmpb
std
fdivrl
lock
jg
mov
es
popa
rorb
cmc
stos
lods
mov
or
int3
cmp
pop
sub
dec
ret
inc
sbb
sbb
sbb
lret
mov
in
or
ret
lods
hlt
out
xor
mov
leave
shlb
mov
xchg
xor
out
jne
adc
jae
xchg
sti
lock
pop
aad
rclb
jp
adc
mov
leave
mov
repz
sub
xchg
inc
sysret
cmpsl
or
stos
into
nop
leave
push
mov
xlat
or
and
push
inc
sub
ljmp
jmp
rorl
add
in
xchg
jns
std
add
outsb
sbb
mov
sbb
cmp
xchg
push
in
mov
fcomp
pop
ret
pop
push
cli
lea
int3
call
add
addb
pop
push
mov
sbb
lahf
dec
ror
cltd
scas
shrb
or
xchg
sub
mov
sub
pop
pop
or
cmp
stc
ret
add
ret
cltd
inc
push
push
pop
jecxz
std
rolb
or
add
imul
inc
jae
icebp
xor
insl
xchg
pop
or
inc
sub
iret
ds
movsl
xchg
into
popa
fsubrs
test
cwtl
dec
mov
inc
enter
leave
mov
inc
pop
jnp
cmp
mov
loopne
out
shl
movsb
sbb
push
movsl
inc
daa
mov
ljmp
in
out
in
addr16
jb
xchg
pop
in
add
fistpll
cwtl
and
push
xchg
adc
fsub
mov
pop
int3
sbb
notl
mov
ret
and
jbe
das
loopne
addl
jmp
ret
aaa
fists
dec
test
pop
ja
outsb
xchg
jae
stc
faddl
pop
inc
iret
test
pusha
scas
arpl
insl
stos
xor
cmc
filds
outsl
loopne
cmp
xchg
xchg
cmp
leave
out
dec
shll
mov
mov
icebp
add
dec
adc
clc
imul
mov
xlat
jecxz
dec
mov
mov
cmp
pop
lahf
inc
pop
dec
aas
mov
es
xchg
rorb
sub
push
or
jmp
mov
lret
add
inc
addr16
and
mov
imul
jg
xchg
stos
icebp
aaa
dec
lock
sahf
int
out
xor
pop
or
out
sbb
push
das
mov
fs
sub
not
xchg
lods
cmp
mov
pop
lea
pop
dec
dec
outsb
into
outsb
push
ss
enter
pop
adc
leave
mov
and
push
pusha
outsl
push
fimuls
out
xor
sub
imull
aas
jo
in
cmp
jp
shlb
or
pop
add
pop
pop
xchg
std
daa
xchg
leave
pop
cs
push
mov
add
pop
cmpb
imul
das
mov
push
fwait
test
jns
mov
mov
gs
scas
mov
lret
das
push
xchg
xor
xchg
call
scas
cwtl
pushf
cmp
xor
inc
add
xchg
data16
test
and
adc
xchg
roll
enter
sbb
pop
testb
js
mov
cmpb
pop
add
jl
jo
lcall
adc
stos
jo
lahf
jle
push
jne
mov
dec
push
out
ja
xor
mov
dec
sbb
fsubrs
mov
es
cmp
sub
xor
cwtl
mov
shl
mull
sbb
adc
mov
mov
xor
pop
sub
aaa
les
pushf
lret
loopne
fwait
sbb
pop
push
xchg
mov
sti
arpl
cld
mov
bnd
pop
dec
shlb
scas
mov
fldcw
fnstcw
testl
jle
leave
shll
inc
ror
daa
push
int3
and
cmp
icebp
ss
enter
andb
out
outsb
jae
fisttpll
pop
sti
stos
dec
xchg
enter
in
inc
mov
cmp
cmc
or
mov
fbstp
push
sub
jno
das
subl
pop
aaa
mov
cmp
fidivl
insl
xchg
push
scas
push
mov
movsb
ret
xchg
cmpb
into
sub
push
je
push
testb
sub
cmp
fxch
jg
pop
cwtl
or
imul
dec
cmc
sub
subl
andb
jg
shlb
lods
js
push
lods
out
inc
in
sub
dec
or
out
add
orl
dec
dec
pop
in
shrl
test
adc
rcrl
lock
mov
or
lret
and
shll
mov
ret
dec
mov
pop
hlt
cld
lea
frstor
pop
aas
cmpb
cmpb
jno
testb
xchg
test
insb
negb
icebp
aas
ror
sub
inc
adc
mov
aam
xchg
dec
test
into
pop
mov
xlat
test
mov
sbb
leave
cmp
inc
cli
inc
mov
bound
fildl
dec
cmp
mov
dec
mov
and
pop
pop
and
push
adc
or
sbb
push
cltd
stos
push
int
or
in
stos
in
ficompl
loopne
inc
adc
pushf
subb
sbb
push
sbb
push
pop
dec
lret
pushf
xchg
inc
mov
xchg
das
aas
push
adc
loop
cmp
movsb
test
push
stos
xor
test
imul
pop
es
xchg
fs
iret
inc
jg
sub
dec
mov
push
or
outsl
gs
xchg
data16
inc
sbb
test
loop
testl
sub
cmp
adc
or
add
aaa
add
xor
xor
lea
bound
dec
cltd
inc
popa
xchg
and
lods
xchg
negb
out
out
or
xchg
mov
jne
adc
pop
push
out
cmp
repz
or
daa
test
jmp
xchg
fsts
mov
lock
decb
jl
cmp
test
rorb
loope
jnp
mov
xchg
in
adc
mov
leave
in
push
ljmp
pop
sub
mov
movsl
mov
jns
jae
pushf
cmp
dec
imul
jne
cmpsl
iret
shlb
mov
lret
jae
imul
shll
push
xor
add
leave
add
adc
jne
pop
jo
lret
inc
xor
insl
push
testl
fs
push
out
popa
stos
lret
pop
roll
fdiv
mov
addl
push
pop
jo
push
mov
inc
nop
xchg
js
in
das
and
insb
psubusb
or
jb
fs
mov
shr
clc
int
loope
mov
sti
sbb
ljmp
cmp
je
loopne
filds
push
cmpsb
xchg
adc
stc
in
jnp
push
ja
mov
sarl
sub
jmp
sub
sub
sbb
lea
pop
or
loop
jecxz
fnstenv
mov
cmp
fldenv
push
jne
lahf
add
sbb
dec
and
push
mov
divb
pop
stc
mov
rol
sbb
in
inc
or
push
pop
mov
leave
push
cwtl
push
sub
dec
lock
push
int
mov
adc
lret
fmull
into
xlat
mov
leave
outsb
and
or
xor
in
mov
sub
dec
mov
inc
or
xchg
fwait
lahf
shl
repnz
dec
cmp
xchg
loope
clc
fwait
and
xor
xchg
jnp
pushf
mov
js
mov
pop
sarl
mov
insb
mov
jo
push
cld
pop
and
xor
cmpsb
and
sbb
or
idivb
dec
jo
mov
sbb
outsb
add
inc
pop
hlt
cli
push
fsubrl
mov
inc
sub
or
or
ret
mov
mov
mov
lret
aas
in
pop
xor
fbld
testb
cli
or
mov
std
push
jmp
pop
clc
mov
inc
jno
in
or
fcmovu
ss
or
outsl
cld
cmp
mov
jge
xor
aas
push
ret
and
filds
mov
ljmp
mov
mov
mov
sub
jns
in
xchg
mov
push
dec
jae
or
jbe
pop
sbb
mov
popa
mov
roll
mov
repnz
jb
mov
dec
rclb
push
xchg
loop
das
xchg
aaa
xchg
imul
movsb
loop
in
pop
sbbl
cmp
push
or
fisubrs
call
dec
pusha
pop
movsl
pusha
addr16
pop
add
cmp
dec
add
mov
pop
push
push
sub
mov
fcompl
jg
fdiv
lcall
daa
popa
mov
mov
loope
mov
daa
ss
leave
cmp
mov
cwtl
hlt
mov
and
adc
mov
sahf
daa
stc
popa
stos
fsubs
adc
or
pop
hlt
test
cmc
cmp
call
stc
pop
jle
or
enter
shlb
fs
fcmove
mov
stc
lcall
xor
nop
int3
ftst
xor
repnz
adc
std
mov
outsl
xor
xor
nop
je
inc
dec
mov
in
push
mov
subb
xchg
sar
pop
test
push
jae
lret
bound
lods
push
sarl
xor
aas
aam
xor
fwait
mov
xorl
xchg
nop
lods
cmpl
xchg
shrb
shll
xchg
adc
mov
sahf
xchg
subl
pop
mov
xlat
loopne
mov
jmp
aaa
push
fwait
sbb
jo
and
or
test
bound
fdivl
jae
jle
mov
aad
mov
pusha
cwtl
mov
je
mov
jnp
xchg
xchg
daa
mov
cld
outsb
enter
add
jecxz
mov
inc
pop
and
stos
push
out
dec
scas
dec
pop
pop
sub
sbb
mov
xchg
mov
lods
dec
ret
mov
or
adc
les
jg
cmpsb
mov
sbb
dec
popa
add
dec
push
lds
sub
sbb
test
outsl
stos
push
in
and
fwait
les
dec
adcb
ljmp
or
xor
jmp
push
lods
dec
mov
pop
xor
shll
dec
gs
or
add
shl
out
sbb
jno
sub
xchg
cmc
add
iret
jae
push
adc
jecxz
mov
fdivs
jo
xchg
adc
int3
sub
lock
push
das
bound
call
fadd
jmp
mov
inc
sbb
stos
xor
clc
push
jne
xor
popf
mov
pop
lods
es
push
ficoms
add
pop
mov
adc
pop
jne
dec
mov
ror
add
dec
or
sub
cmp
dec
loope
incb
aam
cmp
insb
lds
lret
mov
lret
pop
sarl
nop
push
xchg
and
outsb
pushf
repz
imul
push
xor
jb
cmp
inc
jge
add
xchg
repnz
mov
mov
int3
idiv
mov
imul
aad
mov
rcrl
inc
iret
popf
add
jno
xchg
pop
mov
jo,pt
xor
in
mov
sub
dec
fidivrl
cmp
ja
cmp
out
push
cwtl
adc
movsb
repnz
xor
dec
and
mov
pop
add
mov
inc
xchg
jb
mov
in
pop
pushf
add
inc
imul
movsb
mov
imul
pop
cld
and
test
jmp
inc
test
mov
adc
repnz
mov
scas
bound
orb
icebp
mov
xor
xor
icebp
push
cmp
inc
push
mov
mov
icebp
or
push
nop
shlb
neg
xor
and
fistl
push
dec
cmp
push
inc
arpl
sub
daa
iret
pop
test
and
notb
pop
cmc
dec
mov
ffree
push
mov
int3
xchg
cmp
dec
lahf
jno
les
fidivs
or
pushf
push
shll
dec
and
mov
mov
popf
xor
mov
adc
jb
pop
jp
xor
xor
push
mov
stos
sub
jg
sbb
push
in
fisttpl
jb
sbb
lods
push
mov
pop
xchg
and
sub
lret
int
add
int3
fsts
sub
jb
outsl
pushf
outsb
xor
xchg
and
and
jg
xor
ret
or
imul
push
xlat
xchg
fs
push
push
jmp
push
sub
sbb
pop
out
dec
fwait
pop
xchg
lret
inc
push
test
outsl
outsl
xchg
xlat
mov
add
lret
or
xchg
xchg
scas
push
enter
push
dec
xor
outsl
sub
mov
and
addr16
and
inc
insb
adc
icebp
scas
xor
sbb
xlat
das
fcmovnb
sbb
loope
pop
roll
cwtl
xor
xchg
and
xchg
insl
or
es
xchg
mov
dec
jo
xchg
pushf
or
enter
int
fs
mov
shl
pusha
xor
push
sbbl
popf
pusha
loop
jo
rolb
lds
fistpl
mov
jno
adc
cmpsb
cli
rcrb
mov
fcompl
cmpsl
loope
cmp
mov
push
mov
push
sbb
cltd
je
fwait
jo
mov
popa
add
adc
inc
pop
sar
jbe
jecxz
mov
les
leave
cmp
loop
and
push
and
lret
repnz
idiv
imul
mov
out
aaa
jne
pop
clc
jo
cmp
add
xlat
cmpsb
mov
xchg
out
inc
fidivrs
dec
mov
outsb
mov
sti
aas
in
inc
aad
mov
in
call
sub
pop
dec
js
sarb
sub
push
add
inc
loopne
push
movsl
adc
xor
cmc
pushaw
les
mov
ss
add
mov
orl
pop
pop
pop
mov
outsl
jne
sahf
js
outsb
jg
xchg
test
lock
lret
je
sti
sbb
xchg
nop
lahf
out
daa
popa
scas
lods
cs
jnp
mov
mov
cld
add
push
cld
jmp
inc
call
cmpsb
mov
xchg
lock
xorl
fisubrs
dec
test
mov
std
ja
stc
cs
pop
int3
jp
sub
lea
xchg
enter
addb
xchg
mov
push
js
xchg
inc
dec
in
xor
and
mov
jnp
les
pop
lret
out
nop
jnp
jo
mov
push
out
mov
cmp
add
aad
and
add
sbb
leave
outsl
adc
aad
xchg
fs
inc
mov
sahf
divb
cltd
das
popf
mov
out
mov
into
xor
xor
xor
adc
jecxz
ja
sti
jmp
addl
into
and
test
lahf
int3
jmp
outsl
mov
dec
push
cwtl
nop
mov
popa
mov
xchg
jno
and
jne
sarl
popa
or
les
xchg
push
dec
fdivp
faddl
xchg
sarb
dec
cmpl
sti
jno
icebp
pop
decb
pusha
mov
or
and
and
mov
or
jmp
test
sahf
mov
xor
or
scas
je
mov
in
daa
jle
mov
aam
jge
pop
out
addr16
xchg
push
data16
and
notb
mov
cmp
in
cltd
shrl
loope
std
cwtl
fnstsw
pop
repz
shrd
pop
in
jne
mov
mov
mov
mov
test
xchg
mov
sahf
mulb
vminss
mov
push
cmp
jnp
push
adcl
enter
mov
and
and
xchg
imul
mov
daa
or
outsl
addl
mov
add
xor
and
rcrl
ret
cs
xchg
pop
subl
mov
scas
jae
arpl
adc
add
xor
and
rcrl
ret
cs
xchg
pop
subl
mov
scas
jae
arpl
adc
add
xor
and
rcrl
ret
cs
xchg
pop
subl
cmpsl
push
lahf
inc
scas
ja
arpl
adc
add
xor
jecxz
rcrl
imul
sbb
repnz
in
movsl
shrb
or
bound
adc
or
jnp
imul
ret
mov
or
sti
mov
or
insb
sub
pop
xor
jnp
imul
fisttpl
mov
lcall
and
sbb
adc
insl
das
outsb
push
jne
mov
fists
jae
gs
pop
mov
jl
pop
add
push
xchg
cmp
push
mov
divl
jecxz
cmpsb
imul
pushf
sub
adc
xor
xchg
sub
dec
movsb
push
mov
inc
cmp
bound
fstpt
jmp
pop
js
test
push
rorb
insl
fiaddl
mov
inc
lds
sbb
push
dec
ja
insl
add
fistpl
mov
jae
xchg
sbb
xchg
add
int
xor
cmp
and
mov
or
xor
sbb
aas
xor
push
movsb
push
mov
sbb
loop
test
xchg
lret
mov
mov
or
jnp
or
dec
sub
sub
xchg
std
xchg
in
loope
in
lcall
bound
push
push
inc
adc
xor
dec
push
mov
mov
and
xchg
icebp
jmp
pop
daa
addr16
and
xor
and
push
inc
add
sahf
iret
mov
fidivl
mov
or
bound
adc
dec
xor
imul
ret
mov
or
sti
mov
or
bound
adc
dec
xor
imul
in
sahf
dec
dec
xchg
jp
push
loopne
mov
addr16
jae
add
sahf
pusha
jg
jmp
mov
dec
mov
cmp
scas
push
fisttpll
fcomip
test
cmpsb
mov
outsb
adc
lret
mov
pop
jg
in
push
aaa
xchg
xlat
rcr
mov
jns
fmull
and
or
fs
call
push
mov
jns
sub
jno
das
add
les
cmc
pop
popa
lahf
loope
out
dec
mov
iret
je
sbb
mov
xchg
nop
sub
mov
mov
mov
cmpb
nop
cmpsb
lret
xchg
xor
mov
ret
test
sbb
inc
dec
inc
jle
leave
xor
into
xchg
aas
loop
and
stos
adc
fnstcw
jo
cmp
push
je
dec
pop
or
fwait
dec
js
std
out
js
or
dec
test
cmp
mov
xchg
fstpt
jecxz
clc
leave
ds
or
pusha
out
xchg
and
ret
test
jb
mov
push
adc
cltd
in
and
mov
ds
pop
fcompl
mov
lods
mov
pop
xor
dec
pop
repnz
fsts
adc
xchg
pop
jnp
push
lahf
icebp
int3
lahf
stos
pminub
pushf
in
mov
pop
popa
pop
sub
ja
loop
icebp
ret
js
cmc
inc
mov
xor
add
sbb
inc
repz
and
outsb
test
lock
pop
lock
imul
pop
aad
xchg
push
xchg
mov
shl
test
sti
mov
test
push
sbb
mov
mov
pusha
fisubrl
push
nop
aas
aam
ficompl
dec
xchg
xor
cld
fld
xchg
cmc
inc
add
les
xor
xchg
lds
and
js
push
push
nop
sub
push
gs
mov
pop
sub
pop
loopne
aas
leave
inc
into
sub
test
adc
dec
jp
add
jge
jle
sahf
adc
dec
mov
and
lods
hlt
mov
lods
push
push
and
in
xchg
mov
arpl
dec
andb
adc
dec
push
shrb
shll
loopne
ja
cmp
sbb
repz
aad
push
adc
xor
fimull
shrl
jge
ret
jno
popa
and
push
jno
fldl
inc
rcrb
dec
pop
pop
movb
push
fisttps
lods
test
popf
and
mov
cmpl
shlb
ret
inc
cmp
movsb
gs
jno
xchg
sahf
jbe
ret
aas
jbe
xchg
lea
push
sbb
lods
imul
adc
jg
adc
iret
inc
pushf
adc
aaa
aas
inc
jl
icebp
movsl
fcompl
push
pop
arpl
jae
jbe
fisubl
and
adc
insl
leave
std
fs
mov
fcoml
mov
test
jbe
inc
mov
daa
in
sbb
xor
push
rolb
push
cmp
repz
or
add
test
lods
aam
xchg
pop
or
cmp
jne
mov
mov
stc
and
out
leave
push
fldl
out
or
pop
icebp
sbb
pop
mov
jb
xchg
ljmp
movsb
sbb
jo
fmuls
rorb
push
jo
fbstp
sbb
mov
or
fistl
adc
sahf
fistps
adc
inc
dec
loope
ret
arpl
push
dec
sbb
xchg
popf
pop
mov
xchg
pop
cmp
int3
imul
and
pop
xor
dec
imul
mov
aas
das
cltd
pop
pusha
push
push
xchg
call
addr16
pop
jno
leave
jecxz
clc
outsl
je
adc
das
mov
adc
adc
fdivl
stos
pushf
push
in
jb
lock
call
cmp
nop
cmp
inc
push
adc
inc
adc
mov
insb
pop
push
sub
into
test
scas
push
test
mov
ss
cld
repnz
js
xor
jmp
mov
imul
std
out
cmpsb
daa
adc
mov
insl
push
adc
into
cmp
sub
nop
push
loop
mov
aad
adc
fdivr
cmp
add
xchg
sub
mov
stos
imul
mov
dec
movsb
jne
push
dec
add
jae
hlt
pop
subb
into
dec
cwtl
cmpsb
jl
je
fidivs
icebp
fmull
dec
dec
loope
enter
out
fs
mov
adc
jae
cmp
adc
pop
fsubrl
insb
out
sub
sub
cmp
sarl
cs
pusha
jl
cmpsb
test
cli
add
jno
dec
ret
lret
xor
mov
cld
in
push
push
cmpsb
add
and
adc
sbb
dec
add
jo
mov
popf
sub
lods
mov
add
iret
cmpsl
sub
out
xchg
adc
les
popf
jae
outsl
int
in
movsb
insl
lret
xchg
mov
dec
cmp
lcall
or
mov
stc
int3
faddl
nop
outsb
sub
pop
mov
add
jmp
sbb
dec
mov
shrb
dec
ss
dec
sub
bound
movsb
lret
test
es
inc
lods
lock
push
push
shrl
mov
mov
enter
add
gs
jb
sbb
outsl
cmp
push
imul
xchg
lds
arpl
add
mov
pop
fs
loopne
inc
ja
xchg
sub
and
or
in
test
shll
dec
inc
testl
jns
pop
scas
cwtl
fildl
or
push
sub
jle
mov
dec
cmp
clc
pop
mov
test
pop
xor
push
or
mov
push
add
repz
push
cs
adc
aaa
inc
push
aam
xchg
leave
fs
nop
xchg
enter
bound
xchg
andl
push
pusha
pop
mov
loope
push
pop
nop
mov
in
aad
sbb
pop
aad
mov
adc
sbb
jae
ret
sbb
cmpsb
repnz
out
cltd
xchg
sub
xchg
add
cltd
push
dec
sbb
cmp
or
jbe
int
data16
call
lods
sbb
xlat
clc
std
push
and
out
cld
cmc
lods
rol
xlat
mov
cmp
mov
mov
dec
pop
pop
imul
ljmp
lea
testb
call
or
sbb
ficomps
lods
jnp,pt
xchg
repnz
sub
les
sbb
mov
lods
ds
fadds
in
clc
bound
mov
clc
movb
adc
push
loopne
cmp
or
sti
imul
jle
cmp
pushf
std
test
and
cs
pop
orl
pop
push
jnp
pop
fadd
jle
mov
mov
xchg
push
rclb
mov
mov
roll
xor
sub
mov
ror
pop
adc
andb
js
lret
sub
aam
or
fstpl
mov
or
ret
scas
mov
cli
dec
jmp
arpl
movsl
loopne
dec
nop
jge
mov
cmpsl
mov
fcoml
sub
out
mov
adc
addr16
daa
dec
xor
iret
pop
mov
out
xchg
mov
in
push
push
outsl
dec
sti
adc
push
push
imul
fcoms
outsb
cmpsb
cmpsb
jne
push
inc
ja
jge
sub
mov
je
lods
add
lret
pop
jnp
test
mov
ljmp
in
adc
leave
jbe
xchg
dec
mov
mov
cli
jecxz
push
fimull
push
dec
rcrb
sbb
dec
fisubl
mov
xchg
push
and
rol
cmp
imul
xor
stos
jp
outsl
pusha
cli
clc
lret
iret
add
and
cld
std
push
imul
gs
xchg
add
sarb
xchg
lock
jl
setns
xchg
mov
and
push
pushf
or
mov
sbb
jp
in
nop
daa
mov
out
xorl
lret
lods
adc
mov
sub
adc
pushl
and
data16
jb
jmp
mov
out
mov
in
jg
xchg
jg
aam
pusha
sub
shrl
jb
pop
loope
push
and
inc
test
rcrl
sbb
mov
mov
adc
mov
mov
je
or
sub
cmpsl
mov
shl
lods
aam
cmp
mov
sbb
icebp
pusha
outsl
ja
lcall
and
lahf
adc
rcrb
cld
js
leave
lods
insl
push
sbb
aaa
or
mov
mov
or
mov
loopne
mov
jne
ret
nop
and
aas
sub
aam
pop
mov
xlat
jno
lret
js
mov
mov
xchg
mov
or
xor
sub
ret
dec
fxch
aam
push
lret
lock
xor
mov
ss
out
testb
mov
movl
fldenv
xor
xchg
addr16
das
aas
mov
pop
cmp
mov
sbbw
in
lcall
testb
imul
testl
pop
insb
adc
inc
lds
lahf
icebp
xchg
pop
push
inc
sbb
in
pop
or
and
std
inc
dec
les
cmp
test
and
and
icebp
test
ret
inc
jmp
mov
and
sar
inc
xchg
pop
imull
xorl
jp
into
das
fnsave
pop
pop
pusha
mov
ljmp
es
lahf
xlat
jg
addl
lods
scas
lretw
js
stos
gs
cmp
inc
lret
ljmp
lods
lret
iret
and
inc
fdivrl
mov
test
dec
in
sbbb
jae
bound
mov
pop
push
adc
inc
sub
cmp
testb
push
rcll
mov
fisttpl
mov
adc
je
orl
fld
xor
cmp
or
jecxz
in
mov
push
lods
push
pop
jecxz
xchg
ds
lods
scas
sbb
inc
cmpsl
push
and
cmp
in
jg
testl
icebp
pushf
and
out
sbb
rorb
cli
mov
fcomps
cs
pop
fdivs
xchg
test
mov
lods
push
out
mov
push
movsb
add
sahf
scas
lahf
aas
add
xchg
out
rclb
mov
ror
mov
roll
mov
clc
fdivr
mov
xor
inc
sub
jmp
jle
push
aam
mov
mov
test
inc
das
mov
aaa
cmp
loop
jecxz
imulb
pusha
ljmp
xchg
fsubrs
add
mov
loopne
xor
insb
imul
aas
test
xchg
pop
jo
into
loop
xchg
test
cmpsl
adc
lcall
addb
mov
inc
rcr
hlt
punpckhwd
adc
or
insb
mov
adc
cmp
jg
add
push
cmp
stos
out
rclb
mov
or
arpl
inc
adc
push
mov
and
nopl
cmpsl
jp
push
xchg
subb
xchg
sub
push
in
call
inc
mov
fs
or
inc
iret
out
scas
call
pop
jle
sub
pop
sti
and
adc
pop
ret
xchg
inc
ss
bnd
int3
jmp
pop
mov
int3
aas
cmpsb
sbb
movsl
lock
aad
subb
mov
rolb
jecxz
popa
cmp
pop
mov
or
aaa
scas
mov
sti
int3
mov
shll
addr16
enter
in
fiaddl
xchg
sti
mov
stos
call
out
xchg
rcrl
adc
fwait
andl
lcall
icebp
outsb
sahf
push
lret
inc
mov
jno
aas
ret
test
iret
imul
inc
xchg
push
adc
es
dec
daa
adc
jmp
mov
or
mov
mov
out
bound
lret
jle
pop
inc
mov
sub
sub
int3
mov
add
xchg
mov
mov
mov
mov
inc
ret
inc
pop
mov
cmpb
stos
dec
out
clc
loop
mov
lock
cmp
sti
cltd
out
mov
cmp
sti
jnp
sbb
inc
adc
jle
test
cmp
lods
dec
negb
push
out
imul
jnp
stos
push
jmp
ja
out
push
call
fldcw
aad
xchg
loop
clc
cld
xlat
std
scas
dec
jl
xor
out
popa
cs
aad
aad
jb
fsts
inc
test
bound
clc
ret
push
ds
test
fdivp
ja
negb
lds
or
mov
cmp
fbld
xchg
sbb
shll
push
fisttpll
jecxz
xor
jbe
inc
pusha
ja
dec
add
imul
cmpsl
in
mov
push
sub
ss
xchg
jo
xchg
and
sub
pop
mov
xor
push
inc
mov
jg
xchg
dec
push
mov
jb
inc
mov
adc
sti
fsts
and
adc
fldcw
ljmp
filds
push
stos
gs
xchg
cmc
adc
sub
imul
dec
mov
lods
push
jmp
lret
or
int3
icebp
push
or
mov
mov
cwtl
loop
clc
push
pushf
js
jb
mov
pop
cmp
and
cmpsb
cli
jmp
loop
jmp
cmp
sbb
rcrb
cmp
jb
lcall
cmp
pop
and
mov
mov
ret
ss
or
dec
in
fcompl
cmp
push
das
mov
jge
mov
mov
les
in
adc
pop
push
clc
mov
adc
insb
mov
das
shlb
sahf
mov
jbe
shll
stos
jle
movsb
mov
and
add
xchg
push
lahf
sub
in
mov
fcoms
int
adc
inc
mov
pop
imul
movsb
cltd
test
jge
cmp
mov
add
out
mov
pop
sbb
sti
push
inc
mov
sbb
sub
push
call
dec
cld
enter
or
repz
xor
dec
mov
into
push
int
mov
inc
outsb
das
aaa
sbb
add
in
repz
xor
jb
fsubp
jbe
jg
aam
lret
sub
xchg
jbe
mov
mov
xchg
jo
xchg
daa
mov
inc
iret
lds
sar
or
add
clc
sbb
jmp
pop
fwait
leave
cmpsb
lret
adc
xchg
xchg
add
add
sub
xor
enter
add
mov
cmp
fsubr
sub
pop
std
cmp
stos
js
or
jmp
cmc
sarl
das
dec
xor
inc
push
push
cmp
mulb
lock
inc
mov
shlb
add
jge
test
cs
cltd
in
jl
or
out
lods
lret
or
cmpl
or
push
ret
cltd
icebp
jno
lret
loope
inc
stos
dec
xor
insl
mov
ss
ficomps
push
out
pop
sub
jnp
idiv
mov
iret
addr16
jne
pushw
xchg
arpl
fcompl
pop
cmp
and
js
adc
mov
push
mov
push
lds
adc
shl
cmp
dec
adc
and
sbb
aaa
dec
popf
push
leave
lods
adc
sub
dec
in
imul
add
adcb
rorb
in
xchg
cmc
push
dec
or
loope
dec
test
jge
jmp
daa
in
xchg
arpl
push
dec
sbb
add
jp
dec
or
std
push
lret
fucom
test
pop
stc
jnp
sub
scas
mov
xchg
xchg
xlat
xchg
pop
dec
loopne
dec
lret
pop
inc
popa
dec
xchg
shll
fldl
push
cmp
call
loop
sub
or
xchg
ds
mov
test
push
lea
mov
xchg
xchg
fcmovnu
insb
mov
mov
and
cmpsb
mov
imul
push
dec
aaa
shrb
pop
int3
mov
imul
mull
mov
xchg
lds
jecxz
mov
cmp
mov
lcall
cmp
jge
mov
cld
sahf
cli
inc
inc
fistpll
popa
test
dec
sub
push
stos
sbb
or
js
fsubrp
stc
mov
aam
lret
ret
lods
fnsave
sbb
push
mov
push
mov
mov
inc
lock
jl
xchg
fisttps
pushl
fdivs
pushl
sub
pop
mov
ds
add
scas
mov
mov
adc
mov
into
hlt
jbe
shlb
and
popf
in
mov
lret
neg
bound
icebp
ret
fnsave
inc
stos
add
popa
insl
clc
js
das
inc
and
sarb
or
or
mov
ljmp
adc
xchg
jecxz
add
out
mov
ret
popf
jp
mov
pop
xchg
std
ret
sahf
mov
sub
xchg
shl
int
das
stc
and
inc
pop
fistps
xchg
stos
aad
mov
xchg
ss
mov
inc
jno
popa
xchg
adc
fldl
xchg
mov
add
out
in
cmp
scas
push
fwait
pop
sub
xor
loope
shll
push
mov
push
xchg
inc
adc
popf
cmp
and
jb
xor
ss
push
or
lds
insb
add
mov
sti
xchg
cmp
pop
mov
dec
sti
inc
inc
ret
mov
xchg
push
subl
mov
loope
cld
sub
out
xor
shll
jp
adc
lcall
sub
movsl
daa
sbb
jge
push
aaa
xchg
mov
outsb
jle
popa
arpl
repz
cmp
addl
orl
repnz
sahf
xchg
lahf
push
ffreep
int
ss
dec
push
mov
fsubp
sbb
sub
pop
ds
pop
fs
pop
popa
mov
mov
in
lahf
jno
lret
addr16
xorl
adcb
sub
dec
add
fnstsw
ja
or
pop
mov
cmp
fdivrs
dec
cli
adc
jno
icebp
sti
mov
pop
repz
fs
ljmp
mov
mov
sti
add
mov
pop
and
sarl
lods
xor
mov
mov
sahf
mov
cwtl
aam
out
or
xor
in
pop
mov
xchg
cs
xorl
decl
pop
add
cltd
add
xorl
shl
ret
cmpsb
fwait
icebp
mov
or
sub
fdivrl
ljmp
rclb
fmull
or
ljmp
fisttpl
pmaxub
leave
je
pop
inc
mov
fwait
xchg
adc
out
pop
shrb
jne
xchg
cmpsl
vsubpd
iret
mov
mov
mov
push
push
test
lea
je
dec
mov
stc
fsubs
xchg
inc
jo
jge
lahf
cmp
push
scas
push
sbb
jecxz
mov
inc
je
sbb
jl
mov
adc
inc
push
push
mov
iret
dec
loope
sbb
xlat
adc
lods
sub
xchg
outsl
jp
ret
cltd
test
jge
jge
test
mov
adcb
cltd
mov
hlt
mov
lcall
gs
xchg
aas
push
in
and
aas
bound
fwait
cli
inc
jns
jae
repz
mov
mov
sahf
fwait
pop
pop
push
or
xor
jbe
jnp
sbb
add
int
jb
push
mov
mov
push
rcl
fisttps
mov
adc
out
int
cmp
cmpsl
mov
add
push
out
cmp
cmp
repz
mov
dec
lahf
push
add
xor
insb
out
lret
fildll
inc
adc
call
jmp
lods
lods
ds
aaa
leave
pop
xchg
stos
test
loop
pop
adc
dec
sub
pop
sbb
bound
xchg
cld
sbb
rcr
xchg
andl
fwait
icebp
cltd
out
jmp
inc
mov
imul
pushf
push
jmp
rorb
and
lds
out
and
ret
xchg
xlat
add
sub
inc
adc
xlat
and
outsb
cmp
das
sbb
adc
jne
and
out
cmp
idivl
int3
mov
scas
ljmp
in
mov
repnz
sti
enter
push
push
jnp
jne
mov
add
mov
fwait
push
mov
adc
stos
xor
mov
add
loopne
or
adc
dec
add
jnp
fdivrs
fildll
jmp
mov
push
das
mov
loop
xchg
fildl
jmp
sbb
jb
bound
adc
dec
xor
imul
ret
mov
or
sti
mov
or
bound
adc
dec
xor
imul
ret
mov
or
cli
mov
or
bound
adc
dec
xor
imul
rorb
fildl
adc
in
mov
rorl
xchg
sub
sbb
push
je
out
pop
or
ss
lretw
xchg
cmp
push
jp
dec
negb
stos
push
mov
es
xor
inc
lret
xchg
xchg
enter
ret
sbb
push
negb
into
push
cltd
and
adcl
xchg
inc
fidivl
or
jae
outsb
insb
jp
nop
cmc
jno
in
xchg
mov
aad
pop
insl
scas
xor
mov
mov
mov
lahf
sub
dec
jle
insb
pop
push
into
stc
bswap
xor
into
and
inc
jg
or
mov
sub
mov
fsqrt
test
out
negb
push
xchg
out
mov
jp
mov
pop
push
stos
ljmp
adc
add
data16
aaa
jns
dec
xchg
shll
adc
add
xchg
iret
cmpsl
nop
or
in
xchg
cltd
xchg
dec
mov
outsl
outsl
cltd
push
mov
fldenv
test
cltd
jno
insb
xchg
mov
cmpsb
mov
add
dec
idiv
out
push
and
cld
ss
mov
jbe
and
dec
jle
out
xchg
adc
ds
pop
xchg
stos
jmpw
call
and
addr16
pop
ljmp
pop
cmpl
call
je
xor
xor
push
aad
rorl
cmp
jp
dec
negb
stos
push
mov
es
data16
sbb
dec
negb
stos
push
mov
es
data16
fisubl
and
add
push
dec
sbb
inc
mov
ja
push
sub
lcall
scas
adc
cmp
push
jnp
orl
hlt
pop
fbstp
mov
lret
fists
ds
in
xlat
dec
xchg
dec
ror
mov
jmp
sub
mov
outsb
outsl
mov
pop
pusha
adc
dec
add
and
outsl
xor
push
xchg
push
mov
xor
dec
pslld
and
lahf
cmp
rclb
rcrb
mov
mov
xchg
dec
dec
in
out
pop
sbb
cmovae
xchg
ds
add
mov
popa
push
cmpsb
push
sub
inc
mov
jbe
out
mov
int
cmp
pop
mov
es
jle
cld
or
mull
xchg
sbb
ja
lea
jae
sub
enter
fwait
dec
and
push
in
sub
xor
aas
fsubl
mov
int
jns
ficomps
inc
pop
mov
mov
out
lcall
lock
mov
mov
mov
add
mov
aam
add
fwait
shrl
fmull
dec
outsl
or
xor
rolb
push
mov
xor
out
sbb
or
sub
popa
dec
sbb
push
pop
mov
xchg
mov
pop
scas
out
nop
rcrl
cmp
or
aad
lods
int3
cmp
dec
inc
clc
rcrb
mov
mov
fcmovnb
enter
add
mov
adc
dec
flds
inc
pushf
or
call
adc
cmp
ret
shlb
ja
dec
sbb
cmpb
xor
outsl
int3
sbb
or
stos
daa
insb
mov
enter
mov
ret
bound
sub
out
insl
and
mov
add
xchg
pusha
sbb
or
or
orb
sub
idiv
and
adc
cmpsl
setbe
jb
outsb
mov
popf
ficoml
scas
dec
xor
leave
cmpsl
mov
and
push
sub
add
xchg
jns
ret
pop
test
sbbl
adcb
jle
popa
inc
cld
inc
arpl
push
icebp
mov
or
mov
shrl
jns
lea
sbb
movsb
out
aad
lods
repz
dec
xor
jg
test
test
add
sub
mov
dec
loopne
xchg
rorb
test
jae
pop
xchg
pusha
adc
or
and
push
mov
push
sub
loop
xor
fists
mov
sbb
arpl
hlt
add
pop
push
dec
lods
adc
into
test
mov
call
or
cmp
sbb
divb
jbe
jae
push
jmp
dec
outsb
inc
sub
nop
das
shll
dec
add
cmpsl
adc
mov
jmp
out
call
xor
mov
pop
sub
js
mov
jmp
into
sub
outsl
mov
scas
sti
inc
cmpsb
dec
pop
cmp
leave
mov
push
in
call
sbb
xchg
push
aaa
ljmp
jb,pt
in
cmp
int3
pusha
mov
out
aaa
pop
hlt
xchg
xor
xchg
and
movsl
inc
lods
mov
and
push
dec
js
add
pop
cwtl
addl
push
pop
divl
faddl
jnp
cmpsb
xchg
ljmp
ljmp
pop
cmp
cmp
adc
push
mov
mov
sahf
dec
sub
push
pop
outsl
outsl
jecxz
cmpsl
pop
fstpl
sbb
cmp
in
insb
fnsave
push
xchg
sub
mov
dec
repz
inc
popa
fldt
jl
mov
mov
lcall
xor
mov
pop
adc
lods
aas
xchg
cmp
xorb
mov
mov
xchg
insb
mov
jmp
or
mov
jnp
or
pop
scas
sbb
adc
push
aas
fidivrs
xor
mov
dec
mul
cmp
lret
xchg
xchg
insb
adc
sti
jle
add
push
adc
clc
int
push
sbb
xor
cmp
clc
pop
jle
and
ffreep
test
enter
ss
adcb
cmp
fldenv
add
orl
cmpsl
push
mov
mov
mov
rcrb
and
sbb
push
outsb
lods
icebp
scas
outsl
test
int
sbb
xchg
jns
mov
arpl
roll
pop
mov
nop
or
mov
leave
aam
aad
add
out
js
xlat
and
mov
fdivs
std
cli
movsb
pop
mov
add
xor
stos
loope
dec
jb
stos
or
sahf
rcrl
pop
pop
sbb
dec
or
fstps
test
aaa
aam
adc
lods
or
hlt
xchg
ja
push
mov
xchg
lret
pop
jle
jg
jo
imul
add
cli
xchg
cmpb
das
inc
test
pop
test
sbb
pusha
xchg
mov
in
xchg
cli
inc
mov
test
push
push
in
add
mov
push
xchg
sarl
sarl
lahf
cmp
ja
test
testl
shlb
push
in
push
xor
mov
pop
inc
mov
movsl
fwait
jb
outsl
add
mov
xchg
pusha
mov
xchg
mov
sub
mov
out
int3
jg
pop
sti
int3
and
hlt
cmp
sub
pop
aaa
imul
jge
xchg
adc
addr16
mov
dec
adc
ret
xchg
sub
fildll
inc
sub
dec
mov
push
or
mov
xlat
cmpl
cmc
outsl
outsb
roll
lcall
int3
movsl
and
and
mov
cmp
repnz
ljmp
push
add
mov
insl
xchg
sub
and
shll
xchg
xor
inc
test
jns
daa
xchg
push
test
cwtl
add
or
jnp
lahf
inc
sti
scas
mov
sar
fidivrl
insl
lea
adc
ss
je
sbb
hlt
cmpsl
jmp
loopne
jno
icebp
hlt
cmp
push
pop
push
je
add
add
sub
mov
cs
imul
int
fcomps
popf
add
scas
pop
popa
insl
in
cwtl
mov
mov
cvtps2pi
xor
shll
adc
cmp
push
ret
out
mov
jge
and
inc
cmp
adc
jl
fwait
and
dec
adc
leave
lcall
repz
xchg
jl
and
push
outsl
xchg
sti
mul
cmp
mov
mov
test
add
or
iret
iret
push
xchg
fwait
push
pop
mov
ss
sub
push
int3
mov
add
pushf
outsl
pushf
in
xor
shll
aad
jmp
rclb
sub
push
mov
lods
sub
in
clc
pusha
adc
inc
rorb
pushf
mov
fldt
adc
sub
ret
dec
xor
das
xchg
jge
mov
inc
xor
es
cmp
movsl
sbb
jge
xchg
sbb
aas
dec
ja
jns
fucomp
add
inc
cli
mov
cltd
cmp
lret
addb
lahf
out
test
add
sbb
jecxz
xchg
xlat
pop
cmp
adc
pop
adc
mov
repz
xchg
ljmp
jb
shll
movsb
test
cmpsl
cld
or
mov
xor
push
mov
mov
dec
mov
cmp
mov
mov
lock
push
dec
lea
sub
rorb
sbb
lea
sbb
add
push
jge
pop
mov
in
lret
xlat
pusha
jae
jbe
jno
or
mov
les
pop
outsb
or
jnp
dec
leave
sbb
out
gs
scas
cmp
or
lret
loope
mov
mov
xor
pop
rcll
pop
fistl
in
cmc
mov
mov
mov
add
int
cld
xchg
jp
cmpsl
clc
jno
outsl
jge
push
mov
push
cmpsl
daa
sti
sub
push
xchg
scas
insb
scas
jmp
jp
pop
sub
mov
inc
imul
xor
lods
popf
add
loop
daa
jne
repz
sti
adc
or
lods
push
or
jg
dec
adc
or
nop
rorb
addr16
icebp
dec
pushf
out
mov
cmc
lret
mov
inc
pop
push
call
int
lods
jns
cltd
dec
stc
add
mov
push
rep
mov
int
popa
pushf
adc
dec
ds
movsb
ss
xchg
jns
popf
das
cmpsl
out
rcrl
cmc
sub
jo
cld
in
lods
or
lods
loope
popf
or
dec
xchg
ja
cmp
mov
lret
push
xchg
or
push
das
ret
sub
mov
gs
inc
sub
cmc
mov
mov
jae
mov
pusha
or
in
xor
mov
mov
mov
movl
push
inc
xor
in
mov
stos
loop
sub
sub
jnp
icebp
push
xchg
adc
rorb
inc
dec
push
mov
jae
sub
out
sub
sahf
push
aaa
test
pop
aaa
pop
xor
jnp,pt
popf
in
mov
xchg
sti
scas
dec
ret
ret
sub
or
or
iret
cwtl
divl
sub
sub
cmc
cmp
cmpsl
or
rcrl
stos
lea
pop
push
or
pop
sbb
fadds
add
cltd
mov
cmp
sahf
shrl
leave
xor
mov
hlt
mov
int3
jl
ljmp
cli
inc
dec
pushl
btcl
or
adc
mov
mull
mov
dec
bound
dec
xlat
mov
sub
pop
xor
bnd
popf
pusha
pop
cwtl
dec
or
jmp
cli
mov
jb
jg
sub
fcmove
pop
push
je
js
dec
jno
mov
mov
out
outsl
pop
cltd
xor
pop
push
lods
test
jle
daa
cwtl
sbbb
outsb
cs
jne
and
sbb
cwtl
inc
hlt
or
sbb
mov
subb
loopne
insl
xchg
push
rolb
test
adc
add
jecxz
or
push
in
daa
cmp
out
fldt
je
das
ret
into
hlt
push
cltd
cli
fcoml
cmp
lcall
mov
lock
decb
popa
repnz
mov
pop
dec
sub
xor
or
sahf
lret
ja
ret
adc
inc
out
outsb
mov
mov
cmp
sub
jns
sub
loop
mov
cwtl
aam
and
adc
xorl
sub
imul
and
fnstenv
and
je
push
sbb
mov
jae
imul
lock
adc
fidivrl
sbb
lods
xchg
and
lea
jle
mov
sbb
lock
bound
xor
add
mov
cmpsb
pusha
dec
inc
cmp
sub
fldt
int3
xchg
into
outsb
out
xchg
mov
pop
cli
pop
pop
hlt
ret
push
ss
jg
loopne
adc
jns
mov
push
push
pop
mov
jp
icebp
xchg
test
inc
mov
inc
jecxz
cmpl
and
fildl
nop
jmp
cld
inc
repnz
push
andb
fwait
jle
push
and
das
pop
jno
repnz
cli
mov
sti
lcall
aad
cmp
pushf
cmp
lret
mov
iret
repnz
sbb
mov
add
loopne
fucomip
stc
xchg
imul
push
sbb
cmc
inc
sbb
or
mov
pop
test
adc
push
add
jge
popa
lea
pop
pop
imul
cmp
sbb
mov
add
sbb
out
lret
push
icebp
ret
mov
rorb
sti
sbb
leave
or
sti
adc
and
cld
xor
mov
popf
ret
data16
iret
sub
lea
push
sbb
loope
adc
jae
aad
pop
scas
movsb
mov
shr
data16
mov
mov
cmp
mov
dec
int3
jp
in
cmc
aam
adc
adc
cmc
shr
sub
test
push
popf
stc
pop
idivl
imul
dec
hlt
jmp
sti
dec
xlat
fildl
jge
adc
xor
xchg
push
or
outsb
mov
popa
popa
or
pusha
add
mov
sbb
mov
lret
mov
mov
push
cmp
sub
xchg
and
loop
test
inc
cs
inc
cmp
push
sahf
jno
jbe
and
imul
push
call
add
js
repz
pop
cmp
dec
fwait
repnz
dec
negb
cs
sub
fcoms
add
jmp
mov
pop
pop
sbb
cltd
out
mov
ja
cltd
cltd
ljmp
pop
adc
sub
nop
in
sbb
out
stc
test
daa
jp
fsubl
in
je
out
inc
test
pop
in
add
insb
mov
mov
xchg
mov
lret
push
fisttps
or
pop
divb
cld
push
out
icebp
dec
leave
pop
int
cwtl
and
jae
bound
cmp
int
into
out
cmc
inc
test
addr16
cmp
lahf
stc
xor
or
jbe
jmp
sub
stos
lcall
fimuls
xchg
sbb
jecxz
add
mov
sbb
out
sbb
cmp
lock
fwait
and
jmp
and
rol
push
xchg
pushf
or
cmp
std
sbb
xchg
repnz
xor
push
mov
mov
dec
jns
cmp
paddsb
in
movsb
cwtl
pop
ret
or
orb
xchg
pop
aam
iret
dec
data16
fnstcw
iret
jl
mov
mov
and
jno
or
mov
and
lret
iret
neg
out
daa
push
imul
mov
fstpt
sti
sbb
ss
ljmp
mov
cmp
xor
jo
and
cmp
xchg
sbb
ficoms
mov
inc
stos
insb
inc
fcoms
movsb
push
out
xchg
rorb
jbe
pop
dec
cmp
xor
rcrl
arpl
xor
repnz
in
ljmp
leave
and
movsb
daa
in
fwait
xchg
int
mov
outsl
pop
pop
xor
push
fnstcw
xor
into
enter
jp
fistpll
orl
imulb
in
jb
cltd
test
add
out
les
pop
pop
push
addl
ljmp
jne
pop
push
imull
pop
mov
mov
lods
add
xor
inc
sbb
xor
sub
sub
addr16
ljmp
mov
mov
push
mov
cmp
test
inc
mov
xor
nop
fsubrs
or
inc
mov
cmp
out
pop
dec
jb
sti
lods
scas
aas
into
xor
data16
xlat
outsl
adc
shll
jbe
mov
and
scas
repz
sub
aam
fs
dec
dec
inc
mov
adc
adc
and
sub
jl
ja
or
dec
fst
adc
cmp
mov
jmp
push
xchg
in
enter
pop
mulb
mov
clc
test
das
mov
aad
lock
dec
push
cmp
cvtps2pi
mov
shrb
mov
cmpsl
xchg
or
mov
daa
sbb
lcall
push
loope
repz
outsl
adc
push
int3
lea
test
mov
dec
ret
ljmp
cmp
jnp
imul
xchg
shlb
jp
mov
mov
lods
jecxz
aad
mov
inc
test
pop
fwait
inc
sbb
das
jge
into
adc
xchg
dec
dec
mov
mov
movsl
sub
ljmp
xor
push
sub
test
mov
mov
leave
arpl
repnz
push
hlt
pop
xlat
jae
test
out
dec
push
mov
adc
stos
or
jae
fwait
loop
testb
in
jnp
push
scas
and
movl
sub
mov
arpl
push
repz
push
sub
scas
aam
std
orl
add
inc
mov
fstps
insb
outsl
neg
cmp
repz
cltd
pop
insl
fwait
lret
mov
scas
xor
notl
cmc
add
mov
inc
mov
dec
jp
sub
add
lock
mov
and
cmp
jge
mov
jb
stos
cmp
push
test
lea
pop
cmp
mov
pop
ret
sub
push
or
data16
mov
adc
mov
sbb
pushf
sti
mov
mov
jne
lret
js,pt
sub
cwtl
adc
mov
pop
jecxz
push
push
inc
sbb
icebp
cmp
or
int3
cmp
pop
pop
xchg
sub
push
dec
and
xor
loop
xor
int
and
sbb
insl
xchg
das
test
sub
das
xchg
mov
and
in
aad
in
xor
rcll
imul
mov
cwtl
or
movsb
lods
sub
sub
repz
xor
mov
sbb
jp
leave
lret
inc
sbb
pop
es
dec
rolb
sti
aas
dec
pop
fwait
movb
adc
fsubrl
xchg
ljmp
sbb
mov
ds
adc
int3
cwtl
mov
sub
inc
mov
push
pop
cmpb
xchg
add
test
movsl
adc
pop
gs
in
mov
inc
sar
aad
jns
lods
inc
jns
ss
shl
fsubs
cs
imul
push
aam
adc
adc
stos
jo
push
cmpsl
mov
sub
testb
sti
out
push
jbe
mov
jbe
out
popa
insb
inc
jmp
stos
loop
sub
je
and
mov
dec
or
cmp
cmp
in
mov
xchg
scas
inc
lahf
sbb
add
sbb
pop
pop
stc
arpl
xlat
and
data16
cmp
xor
push
lock
clc
mov
mov
lea
stos
ds
pop
pop
cmc
dec
std
insl
lret
sub
mov
movsl
xor
pusha
dec
popa
xchg
repz
mov
mov
sbb
rorb
mov
mov
and
test
jns
pop
ja
cs
push
lods
mov
ffree
mull
jmp
repz
mov
fdivr
inc
add
xor
xor
add
adc
xchg
adc
jbe
inc
loope
fisubrl
cmp
inc
movsl
cmpsb
lret
pop
clc
mov
data16
jo
mov
test
and
xchg
lea
inc
mov
loop
sarl
lea
fisubrs
dec
pop
pop
sbb
loop
pusha
test
cmp
push
lea
fcmovnbe
jae
adc
repz
cmp
cmp
cmpsl
mov
sbb
push
lods
call
and
cs
add
push
sub
dec
lahf
dec
shll
jl
movl
push
mov
or
pop
out
addb
fsubrs
fsubrl
loop
xor
rclb
xchg
je
and
inc
enter
push
dec
mov
lods
js
cmp
inc
push
add
xchg
pop
movsl
push
fimull
test
dec
dec
aad
push
addl
insb
fwait
loopne
aam
pop
out
cmp
sub
ret
cmp
testl
addb
daa
lret
test
lock
add
add
dec
aad
mov
aam
dec
jbe
ficoms
mov
push
outsl
cmp
rolb
ss
dec
das
add
push
imul
jg
mov
mov
fstpt
arpl
pop
and
call
xor
fldl
mov
jmp
mov
stc
push
xor
mul
scas
xchg
xor
ja
cmp
in
in
rcl
mov
and
mov
push
xchg
dec
dec
pop
repz
push
push
jae
lods
sbb
cmp
repnz
lock
shrb
out
inc
ds
jle
add
push
cmpxchg
pop
inc
into
repz
push
fldcw
add
mov
pop
dec
addr16
in
sub
in
lcall
xchg
stos
test
adc
pop
jne
cmp
xchg
xorl
sub
call
lea
stos
outsb
mov
inc
mov
push
into
push
lods
inc
mov
sbb
out
ret
rorb
in
jns
repnz
dec
inc
ds
lock
sti
push
cmpsl
fsubrs
scas
gs
out
roll
or
test
mov
mov
cmpsb
push
jp
dec
negb
stos
push
mov
es
data16
sbb
dec
negb
stos
push
mov
es
data16
sbb
dec
negb
push
jp
lcall
jbe
ds
data16
cmp
dec
neg
es
push
inc
lods
and
lcall
mov
cmc
xlat
mov
movsl
mov
push
inc
inc
push
aaa
and
pop
adc
xlat
mov
cmpsl
mov
test
jne
inc
inc
push
aaa
dec
es
mul
out
xlat
mov
cmpsl
mov
test
push
daa
aaa
and
jno
bound
adcw
aad
test
mov
push
or
mov
mov
mov
mov
sbb
cmp
movsl
cmpsl
xor
outsl
lahf
lret
adc
mov
and
push
inc
or
clc
mov
lods
jne
pop
jbe
ror
jb
inc
sbb
add
xchg
addb
mull
rolb
out
xchg
lcall
addr16
mov
xchg
bound
dec
sub
or
jbe
outsl
cmp
mov
cmpsl
xor
lret
pusha
pop
js
aad
xchg
pushf
movsb
sub
xor
and
cmpsl
mov
je
rolb
out
xlat
mov
cmpsl
mov
test
jne
inc
inc
push
aaa
and
pop
jl
loope
mov
lds
fdivr
ret
add
pop
sbb
je
and
and
jl
pop
addl
in
stc
shr
ret
add
push
inc
xor
dec
inc
xor
push
insl
jp
mov
mov
mov
test
jne
inc
inc
push
aaa
and
pop
adc
xlat
mov
cmpsl
mov
test
jne
inc
inc
push
aaa
and
pop
adc
dec
sub
pop
or
xlat
les
xor
sti
push
mov
mov
push
fsubs
mov
mov
and
sbb
mov
std
pop
add
daa
dec
aad
inc
cmp
inc
mov
sahf
loope
sti
ljmp
cmpsl
pop
push
ret
mov
xchg
add
in
inc
dec
loopne
imul
out
scas
aaa
inc
dec
add
inc
cmc
sahf
sahf
dec
in
aam
jo
out
cwtl
mov
push
cwtl
gs
cmp
sub
mov
pop
mov
mov
dec
pop
lret
pushf
pop
imul
out
mov
lock
jo
aad
hlt
mov
inc
push
test
nop
push
and
xchg
gs
ss
or
imul
push
inc
int
cmc
dec
inc
mov
inc
push
xor
mov
fdivrs
in
sbb
xchg
pop
test
mov
pushf
xor
pusha
lds
insb
jge
mov
push
aam
or
sbb
sbbb
filds
and
cs
fwait
xchg
pop
add
or
mov
fisubl
xor
arpl
movsl
imul
cmpsb
push
mov
push
jae
pushf
cmp
dec
mull
inc
xorl
popa
mov
inc
rcrl
inc
rolb
jecxz
xlat
lods
inc
cmp
cmp
or
into
into
sub
in
mov
outsb
addr16
lock
dec
xchg
mov
or
stos
pop
pop
sbb
out
out
cmc
sbbl
sub
int
call
pop
add
leave
sbb
sub
arpl
jmp
push
pushf
mov
jne
lcall
or
dec
mov
cmpsl
imulb
adc
rcrl
fmull
pop
and
popf
pop
pop
fcomip
or
imul
and
mov
jp
outsl
xor
into
cmp
fsts
mov
sarb
mov
jmp
pop
mov
fs
fdiv
mov
jl
xor
adc
inc
sti
out
int3
pop
jne
movsb
xor
and
push
ret
pushf
lock
ss
das
xlat
test
inc
nop
rcr
push
repnz
jnp
mov
mov
out
push
mov
shll
mov
sub
dec
mulb
repz
mov
daa
outsb
repnz
jp
mov
test
sti
xchg
cltd
test
and
mov
mov
xchg
mov
dec
test
aad
cmpsb
xchg
ds
sbb
aas
xchg
add
mov
inc
pop
test
leave
adc
out
testb
fistpl
push
add
frstor
xchg
fwait
je
inc
xchg
pop
nop
adc
pop
in
popf
jbe
pop
inc
ja
dec
rcll
fldt
sub
testb
mov
imul
fisubl
jb
js
jp
dec
leave
ret
mov
lock
fs
sub
pushf
dec
lods
in
loope
cmp
loopne
push
jnp
enter
inc
lcall
fdivrl
jecxz
mov
sub
sub
lea
in
adc
popf
jp
adc
aaa
mov
rorl
jo
sbb
stc
fidivrs
adc
fldl
in
roll
jg
int
out
add
or
imul
add
xchg
mov
out
mov
inc
hlt
sbb
inc
scas
xchg
sub
out
icebp
sbb
pop
insb
popf
and
sarl
and
or
mov
in
xchg
mov
push
sub
dec
or
and
sbb
dec
push
loop
mov
rcrl
iret
js
xor
popa
and
xchg
jo
and
xchg
xchg
jbe
pop
xlat
lods
sbb
xchg
xor
pop
cmp
insb
dec
mov
pop
insb
xor
aaa
xchg
mov
mov
stc
dec
jbe
mov
subb
aad
mov
test
sub
cwtl
aam
inc
mov
sbb
out
aad
mov
adcl
mov
or
decb
int
push
insb
xchg
bound
push
shrl
setp
imul
fwait
mov
dec
icebp
mov
stc
adc
inc
pop
out
mov
andl
lods
inc
cld
int3
inc
sub
in
xchg
xchg
xor
mov
ljmp
push
push
jbe
arpl
cmp
xlat
movsb
mov
dec
out
cmpsb
in
mov
sahf
cmpsb
int3
fsub
sbb
les
leave
push
jecxz
sbb
pop
scas
pop
add
sbb
lahf
in
pop
adc
jnp
inc
lahf
cmp
ljmp
dec
add
js
mov
mov
lret
pusha
mulb
inc
sti
push
push
push
loope
mov
xabort
inc
lock
ret
idivl
cld
mov
mov
and
push
mov
retw
sbb
push
mov
adc
lock
jge,pn
scas
int
fdivl
rcrl
cmc
mov
lret
cwtl
aaa
cld
hlt
or
leave
inc
fsubl
mov
add
or
add
ljmp
sub
or
orb
mov
fstpl
outsl
pop
sbb
cmp
pop
pop
test
hlt
xchg
pop
push
arpl
push
fs
and
xor
imull
jb
xchg
in
sbb
dec
ret
ret
jecxz
scas
inc
sahf
add
xor
insl
pop
popf
repnz
xchg
cmpl
xchg
fistl
loopne
add
scas
cltd
cmp
push
mov
in
inc
add
daa
inc
pop
fprem1
adc
fnsave
lds
add
adcl
lods
mov
out
popf
add
cmp
repz
add
add
adc
dec
into
subl
repnz
mov
adc
jne
jno
cmpsl
xchg
ret
pop
test
cmpsl
test
xchg
and
pushf
cmp
jl
aas
lods
xor
add
movsb
sub
std
in
lock
adc
jg
mov
ret
push
cmp
mov
and
mov
leave
rcl
and
pusha
into
push
push
cld
inc
imul
push
andb
cltd
scas
nop
stos
xor
adc
in
loop
das
jl
add
xchg
lret
pop
int
mov
test
in
mov
jnp
xchg
dec
inc
dec
imul
adc
mov
repz
aaa
rorb
popa
nop
xchg
cmpsb
cli
into
fwait
cs
cmpsb
pusha
outsb
int3
adc
mov
loope
fldl
sbbb
cmp
mov
ficomps
add
gs
int3
subl
out
lea
mov
mov
sti
mov
shlb
pop
mov
stos
cmp
clc
xor
pop
popf
dec
mov
or
scas
xorb
adc
fcompl
aaa
int
cmpsb
adc
push
adc
jae
imul
xor
adc
xor
mov
and
cli
mov
pop
in
dec
andb
lret
aaa
mov
scas
jno
push
add
sbb
adc
push
dec
mov
cmp
lods
fdivr
push
test
test
popf
fildll
out
or
dec
push
nop
and
or
sbb
fcoms
xor
arpl
dec
xor
add
and
xchg
mov
testb
int
cmp
int
jmp
dec
and
cmc
fdivl
add
scas
cmp
js
stc
jp
or
cmp
fcompl
mov
cs
das
sbb
shlb
cmc
jp
cld
dec
dec
and
into
ljmp
add
cmc
out
xor
or
xor
dec
mov
add
push
cmp
jecxz
loopne
adc
xchg
and
lock
sub
shrb
out
push
fcomps
or
iret
mov
daa
arpl
test
dec
imul
and
sub
mov
dec
es
inc
dec
in
adc
cli
call
popf
fcmovbe
in
loopne
daa
shll
push
mov
mov
adc
shll
lods
es
xchg
cmpsb
cmp
daa
sub
sub
cld
sbb
add
sub
or
mov
add
leave
xchg
in
cli
cmpsl
xor
mov
rclb
cmpsb
mov
ss
mov
pop
adc
fdiv
cmpsl
shlb
push
add
xchg
lret
push
test
andb
xorb
cmc
inc
jecxz
jg
xchg
sub
adc
pop
push
gs
mov
ret
pop
push
pusha
dec
adc
xchg
jns
mov
sbb
out
mov
push
push
cmp
jg
ret
jg
mov
movsb
call
dec
std
jl
cmp
xor
pop
loope
aaa
fnstenv
inc
pop
mov
mov
cltd
xor
cmp
lret
stos
mov
pop
mov
enter
cli
lahf
clc
dec
or
je
out
dec
insl
sub
cmpsb
inc
cmpsb
mov
xor
test
inc
and
roll
mov
insl
loope
cmpsl
cwtl
jg
sub
out
and
test
xchg
mov
call
mov
cli
push
dec
je
mov
jmp
xchg
jo
jecxz
ss
xchg
inc
xchg
jbe
outsb
dec
lods
xchg
mov
mov
das
cltd
call
lcall
subb
loope
mov
cs
pop
sbb
ret
sub
stos
rcrb
and
jle
jne
pop
pushf
sahf
jecxz
data16
xchg
cmp
out
call
arpl
sbb
pop
mov
push
add
add
test
in
arpl
pop
dec
xor
jo
inc
int
pop
push
inc
or
xor
mov
cwtl
imul
dec
inc
sub
sbb
movl
push
xor
dec
push
lds
inc
pusha
movsb
mov
and
or
insb
out
outsl
movsb
xchg
jmp
mov
mov
rorb
cwtl
xchg
sbb
dec
sbb
mov
dec
dec
test
test
test
repnz
lret
into
and
push
fldcw
outsb
xor
jmp
loopw
sbb
dec
gs
or
outsl
xor
and
imul
cli
or
cs
push
mov
clc
cmp
std
jno,pt
loop
dec
lret
popl
cmc
or
dec
daa
scas
pusha
add
mov
cmp
push
pop
es
pop
xchg
add
xchg
les
inc
push
popf
xor
rep
and
daa
xchg
jl
push
jge
stc
mov
ss
xchg
stc
pop
jecxz
repnz
pop
mov
jbe
mov
imul
mov
outsb
scas
fnstcw
push
or
jns
adc
pop
ds
push
adc
mov
sub
xchg
sub
mov
dec
xor
loope
sub
add
daa
sbb
mov
mov
std
js
minps
pop
mov
or
je
mov
jle
adc
stos
or
xor
sbb
xor
int
ss
xchg
lods
xchg
xor
sub
fldl2t
shlb
xchg
xor
stos
bound
dec
sbb
dec
xchg
jnp
push
push
sub
ss
sbb
mov
or
dec
push
jl
dec
jno
mov
push
inc
mov
or
test
test
test
or
push
push
inc
pop
and
jmp
mov
adc
out
jmp
or
and
leave
loop
push
rolb
pop
repz
sbb
add
mov
loopne
enter
fstps
dec
dec
cmpsb
jne
or
sarb
push
stos
sub
cld
inc
es
fsubs
pop
xchg
sbb
dec
pop
pop
cmpb
adc
sysenter
jge
dec
xchg
pusha
pop
adc
test
test
imul
jne
dec
scas
out
ds
pop
pushf
push
in
cmpb
xor
mov
test
aad
xor
pop
movsb
cmp
sbb
popf
hlt
ret
mov
pop
adc
inc
sbb
test
lods
pop
mov
sub
xor
decl
push
out
lock
inc
andb
pop
push
add
jp
push
int3
outsl
dec
aas
push
fiaddl
dec
xor
xlat
gs
shrl
mov
ss
jecxz
jle
or
xchg
outsb
jno
mov
dec
cmc
push
fcomps
in
data16
push
shll
pop
insl
inc
mov
xchg
mov
cmp
and
test
rolb
and
mov
std
mov
cmp
fistpll
or
cmc
mov
sahf
xchg
fidivrl
or
out
int
dec
xchg
gs
jno
pop
sti
cmp
push
push
mov
xchg
jns
insb
stos
sbb
sbb
sbb
sbb
pop
test
jo
mov
pop
int
pop
push
cmp
mov
mov
mov
outsb
pop
cmp
or
add
xchg
mov
sbb
cmpsl
add
stos
pop
loope
fsubs
jecxz
add
fdivrp
xchg
bnd
sub
mov
jl
sub
int3
and
mov
cwtl
and
push
xor
sbb
jae
jnp
push
cs
xchg
enter
xlat
lret
std
fstps
negb
cmc
das
inc
push
cwtl
push
xor
dec
daa
mov
bound
fldenv
call
mov
and
fisttpll
mov
xchg
pop
xchg
add
add
fcoml
dec
sub
mov
sub
mov
xor
mov
add
fwait
pusha
xchg
lret
repnz
rcl
call
push
sbb
xor
or
mov
push
push
xchg
mov
xchg
mov
cmpsb
xchg
sbb
pushl
push
or
int3
dec
or
mov
jbe
inc
fstps
dec
les
push
nop
dec
pop
add
sub
adc
movl
outsb
and
inc
sub
push
ljmp
out
inc
jecxz
cs
dec
sbb
push
out
inc
xchg
jmp
jns
repz
xor
jns
in
cli
jne
push
mov
cmp
inc
dec
jg
mov
ret
push
lret
call
xor
loop
fisubrl
xchg
mov
cmp
mov
jb
scas
iret
fimull
xor
scas
je
popf
mov
cmp
push
push
js
mulb
ss
repz
adc
sub
push
sub
cltd
sbb
data16
sub
adc
loop
pop
inc
pop
jb
jmp
cltd
pop
cmpsl
mov
mov
lret
cmp
xchg
jg
jnp
arpl
cmp
das
jo
mov
or
mov
data16
jecxz
imul
or
fcoml
mov
mov
je
rol
int3
outsl
xchg
mov
scas
bound
xor
stos
push
sub
adc
in
mov
ret
cmc
out
out
lahf
leave
adc
jb
push
popf
popl
nop
adc
in
mov
xor
scas
lcall
adc
push
xor
enter
lds
stos
lret
mov
les
mov
adc
adc
test
and
mov
fwait
shrd
jge
outsb
mov
insl
in
out
sub
jp
mov
xchg
in
adc
aas
or
insb
enter
subb
sbb
orb
and
xor
stos
scas
iret
sub
cmp
sub
jecxz
inc
in
mov
iret
lds
mov
xchg
and
cmp
push
pop
cli
daa
addr16
jmp
movaps
mov
and
sti
pusha
bound
je
sbbl
int3
dec
cwtl
add
jp
push
jo
or
in
sbb
sti
scas
lods
cmp
pop
out
jl
mov
mov
push
xor
lahf
test
std
and
sbb
and
push
cmp
xchg
adc
pop
mov
test
xchg
imul
fstpt
jnp
push
lret
xor
lods
scas
es
mov
cmc
jne
push
cwtl
pop
push
aam
dec
mov
inc
push
fwait
pop
out
rorb
push
divl
test
pop
push
movsb
lock
pop
and
inc
sub
outsb
sub
xchg
push
xchg
icebp
xor
xchg
in
jp
mov
jae
add
std
add
sub
mov
mov
mov
sbb
inc
jb
rcrb
xchg
sbb
mov
fwait
cmpsl
in
or
jnp
sti
loope
es
add
enter
stos
out
jl
pop
mov
in
mov
int
inc
pop
pop
es
pop
xor
data16
ljmp
hlt
or
pop
mov
xchg
push
gs
outsl
add
lds
aad
push
mov
cmpsb
popf
fs
xor
lahf
cmp
fyl2xp1
or
mov
addr16
pop
mov
add
mov
stc
mov
mov
js
pop
pop
mov
sub
rorb
dec
sbb
dec
fsqrt
bound
jmp
xchg
mov
bound
addr16
mov
inc
ret
into
sbb
lcall
xchg
cmpsb
mov
sar
movsb
jno
in
mov
mov
call
cld
mov
sub
push
cmp
inc
stos
repnz
fcompl
enter
das
mov
daa
mov
inc
jns
into
or
cmp
jo
xlat
sbb
imul
adc
lods
inc
or
pop
call
hlt
in
js
cmc
mov
jl
cmp
addl
andl
sub
into
pop
mov
lds
mov
jo
jbe
or
lea
mov
pushf
out
jb
shrl
subb
outsb
sbb
and
lahf
mov
ret
xor
fs
stos
sub
jno
cltd
stos
pop
dec
rorb
int
xchg
push
icebp
imul
push
sahf
cld
mov
dec
lods
es
dec
aad
scas
jb
dec
mov
scas
push
xchg
lods
call
cmp
out
xchg
sti
movsl
cmp
subb
pushf
arpl
inc
je
dec
and
mov
int
push
dec
stc
mov
jae
add
rorl
sub
les
sub
push
std
mov
incl
adc
jns
dec
add
hlt
rclb
pop
mov
dec
push
inc
pop
imul
loopne
xchg
movsb
dec
pop
inc
loope
ret
loopne
push
xor
mov
adc
mov
jo
sarb
jb
mov
stos
into
push
stc
xchg
pop
insb
enter
test
cld
pushf
add
addb
mov
mov
sbb
xchg
fadd
pop
xor
das
mov
je
pop
loopne
nop
jno
pop
in
fimuls
sub
mov
mov
jo
ret
add
dec
data16
xchg
jmp
inc
push
mov
test
or
cmp
pop
or
cmpsl
sub
pop
pushf
push
jne
and
inc
push
hlt
mov
inc
push
jbe
stos
clc
sub
jecxz
jl
mov
sub
xchg
int3
xchg
sahf
mov
push
cmpsl
roll
imul
and
sbb
mov
jae
out
mov
sub
inc
bound
lahf
xor
in
jae
dec
cmp
push
roll
sub
lret
or
add
arpl
add
lds
mov
sbb
test
cmp
xor
mov
addl
test
leave
xlat
rcll
pop
aam
dec
rcrl
fs
loope
lea
scas
mov
push
push
pop
sbb
test
xchg
lds
lods
pop
mov
xchg
push
rcr
push
jmp
mov
les
int
dec
ret
pop
in
jns
les
mov
shr
pop
aaa
fdivrs
jnp,pn
and
inc
push
sbb
jbe
jge
cmpsb
and
mov
shr
mov
ljmp
in
arpl
pop
sbb
fistps
or
sub
icebp
xor
cltd
inc
jle
popf
fidivrs
rcrl
fsubp
insl
jmp
sbb
dec
jo
mov
test
mov
fsubs
jae
insb
shlb
mov
int
adc
movsb
dec
shll
and
jb
outsb
movsl
mov
xchg
mov
jno
xor
in
fimull
pop
push
rorl
cmp
jg
xchg
pop
dec
xchg
dec
inc
push
fs
lcall
clc
out
clc
mov
ds
bound
icebp
sbb
pop
jle
mov
and
pop
inc
subb
ret
notl
xchg
outsb
mov
scas
push
and
das
pop
das
loop
push
mov
shrl
add
repz
pop
jno
add
outsb
stos
in
dec
xchg
dec
popf
shr
or
test
dec
and
adc
adc
pop
andl
fs
inc
in
xchg
sbb
dec
mov
mov
ja
push
iret
or
pop
sub
xchg
lea
mov
lods
out
sub
mov
out
mov
call
movsl
cmpsl
mov
test
jne
inc
inc
push
aaa
and
pop
adc
xlat
mov
cmpsl
mov
test
jne
inc
inc
push
aaa
and
pop
adc
xlat
mov
cmpsb
mov
test
jne
inc
inc
push
aaa
and
pop
adc
xlat
mov
cmpsl
mov
test
xchg
mov
inc
inc
and
scas
lret
ljmp
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
sbb
push
mov
sbb
es
xor
testb
flds
sub
inc
or
imul
mov
into
mov
cmp
leave
xchg
cmp
sub
jns
imul
out
aad
cmpsl
mov
hlt
cmpsl
repnz
sbb
loop
push
test
or
test
mov
jns
fnsave
mov
test
cmpsl
stc
mov
inc
sbb
cmp
push
mov
jmp
imul
jl
repnz
shl
pop
dec
mov
dec
sub
push
leave
push
cmp
jbe
inc
or
xor
dec
fwait
xor
sub
addr16
xlat
push
mov
cmp
cld
ljmp
imulb
fcmovb
or
push
sbb
hlt
es
int3
push
mov
les
addb
jbe
pop
out
mov
cmpsb
data16
repz
push
cld
cmc
ljmp
jns
imul
mov
les
pop
fstps
pop
sbb
pusha
cmp
sbb
jae
push
mov
arpl
mov
loope
fnstcw
and
xor
sub
and
and
fwait
xchg
mov
clc
jmp
mov
xchg
jbe
cmp
push
dec
push
mov
mov
stc
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
mov
stc
cmpsb
jmp
xchg
cmp
and
imul
scas
mov
mov
inc
cwtl
or
mov
cltd
sbb
xchg
jle
into
adc
xchg
movsl
dec
loopne
push
xor
xchg
cmp
pop
lods
mov
inc
lea
iret
sbb
call
sti
dec
in
mov
in
mov
inc
movsl
shrl
into
dec
sub
push
pusha
pushf
pop
sbb
inc
cmp
jns
stos
fldcw
les
push
int
dec
daa
sub
std
push
mov
or
adc
sbb
fisubrs
popf
lcall
cmp
jno
xchg
shr
cmp
push
sub
je
fmuls
sbb
test
xorl
mov
test
pop
xor
outsb
mov
dec
ds
jmp
in
add
fcmovne
je
mov
add
mov
pop
out
lahf
out
in
mov
and
mov
mov
add
pop
testl
inc
insb
sub
icebp
fs
cli
push
mulb
lret
xor
inc
xchg
cmpsl
popa
fstl
push
in
jmp
pop
sub
ds
rcrl
movsl
movsl
jbe
daa
sbb
mov
or
jecxz
add
je
pop
pop
mov
sub
pop
pop
call
sbb
addr16
mov
push
sub
jno
data16
rorb
pop
icebp
xchg
push
int3
jg
xchg
sbb
inc
pop
pushl
mov
enter
pop
mov
jbe
pop
jmp
xchg
lods
in
daa
out
dec
xlat
loope
push
call
cmpl
je
test
pop
mull
or
cltd
jmp
shrl
mov
testl
jp
std
faddl
mov
sub
mov
push
out
in
and
add
mov
jns
push
xchg
jnp
jle
sub
in
jns
adc
jecxz
les
in
or
repnz
dec
adc
iret
loop
ja
xlat
cmpsl
cmc
cmp
dec
dec
sbbl
push
dec
add
push
js
cs
testb
sahf
ljmp
mov
jo
outsb
pop
in
push
fwait
xor
cmpsl
andl
push
jo
mov
xor
je
sar
mov
push
cmp
push
cmp
addr16
adc
and
xchg
in
icebp
aam
or
jmp
lods
or
inc
inc
adc
fmuls
fwait
dec
shrl
sbb
mov
stos
ret
push
pushf
cmp
dec
cld
test
jl
dec
inc
int3
inc
cmp
ret
xchg
cmp
xchg
jb
jp
test
sub
daa
jne
arpl
mov
mov
add
loopne
adc
inc
test
push
pop
into
mov
dec
into
xor
sarb
adc
xor
push
fistl
loop
popa
xchg
sarl
and
jge
lods
and
inc
inc
sub
mov
jno
into
enter
or
push
mov
xlat
xor
xchg
in
jb
subb
adc
mov
js
adc
mov
inc
jae
push
jge
adc
xor
addr16
lcall
aaa
jne
sub
push
fistpll
xor
sbb
jp
sbb
push
mov
repz
lds
in
cmpsl
cmp
daa
sbb
push
outsb
mov
pop
lods
xor
pop
push
neg
lcall
leave
jo
sub
cwtl
fcoml
or
fucomp
inc
rcrb
lret
dec
in
ret
sbbb
xchg
sbb
cmp
into
push
push
inc
cmp
push
mov
jge
ret
enter
outsl
arpl
pop
inc
cmp
push
dec
sahf
test
and
adc
outsl
jnp
sub
mov
pushf
sbb
xchg
ja
push
test
add
push
fsubl
addr16
push
in
add
xor
dec
int3
aas
call
mov
adc
aaa
fstpt
cmc
int3
add
or
adc
mov
iret
adc
cmpsb
rolb
fldenv
std
push
imul
pop
mov
je
fadd
and
test
sub
xchg
bound
pop
and
std
pop
ss
stos
imul
out
lods
outsb
push
pushf
into
cwtl
mov
fxch
stc
vpshlq
dec
ret
xchg
idivl
mov
xorb
add
addr16
lcall
cwtl
lahf
mov
fnsave
gs
daa
ret
out
push
add
insl
cmp
mov
and
outsb
and
fiaddl
pop
push
gs
fidivl
push
fstpt
and
scas
mov
cmp
mov
xchg
mov
lret
dec
xor
inc
int
adc
ljmp
sahf
cmpl
add
fidivl
enter
shll
push
inc
pop
popa
pusha
sbb
dec
mov
add
jnp
adcb
mov
xchg
jno
mov
add
mov
imul
outsb
iret
push
mov
arpl
xchg
sbb
mov
incb
or
push
xor
adc
inc
adcl
push
push
adc
loop
iret
lcall
cld
adc
push
xchg
mov
jb
sbb
jl
dec
xchg
movsl
lret
xchg
aam
xor
push
sub
xchg
sbb
loope
sub
mov
cwtl
xor
sti
mov
scas
mov
mov
inc
stos
popa
movsb
push
leave
aaa
loop
out
in
out
adc
and
mov
call
mov
out
push
fsts
fwait
mov
fcomp
aaa
fwait
into
int
int
xor
test
mov
jl
stos
stos
push
lret
into
movsl
or
lods
mov
aam
lret
jnp
push
dec
movsb
nop
push
mov
dec
ss
mov
jp
cmp
fists
in
or
test
out
pop
push
data16
jns
pop
sub
dec
add
arpl
inc
adc
pop
nop
add
dec
push
loop
rcr
test
or
pop
sub
xchg
fwait
cmpsb
cld
xchg
mov
push
test
mov
add
jno
cltd
adc
mov
push
iret
mov
adc
cmp
xchg
pushf
push
xchg
add
test
cmp
ret
jbe
add
out
inc
mov
push
shrb
out
repnz
fs
pusha
cmpsb
and
xchg
push
and
and
aam
div
pop
cmpl
incl
sbb
imul
outsl
jecxz
pop
ja
lahf
hlt
ds
pop
dec
adc
enter
scas
mov
stos
nop
xor
std
add
out
ljmp
push
jbe
xor
insl
mov
xchg
sub
std
outsl
stos
fildll
test
addr16
xorl
repnz
push
sbb
mov
shl
or
mov
addr16
xor
add
sbb
scas
ret
sbb
cmp
ja
cmpsl
lock
pop
outsl
sahf
pop
cmp
pavgb
xchg
repz
push
or
in
stos
add
into
mov
sbb
pop
int3
sbb
jp
arpl
dec
jmp
cmp
sbb
mov
int
push
cmp
sub
adc
ret
xor
sbb
out
inc
push
lret
lods
or
pop
jbe
push
aad
mov
adc
mov
pop
mov
cmp
into
xchg
xchg
gs
mov
cld
insb
add
pushf
xor
pop
cmpsb
mov
cli
ret
popl
cmp
cwtl
push
add
negb
cmp
or
clc
or
mov
scas
xor
push
test
stc
mov
cmp
dec
cmp
lret
in
mov
cmp
mov
mov
jno
shrb
int3
and
iret
xchg
pop
in
insb
dec
ret
ret
push
jl
js
popf
cmpsl
xchg
jl
hlt
pop
rcl
data16
xchg
shrl
pop
movb
mov
sar
fs
xchg
mov
lods
xchg
cwtl
pushf
movsb
xor
enter
rcl
mov
stc
test
mov
stc
dec
jns
mov
addb
xchg
and
and
int
jns
stos
jg
and
mov
test
repz
or
mov
jae
popf
psllq
mov
loop
mov
cs
xor
mov
testb
mov
dec
icebp
mov
xor
sbb
pop
mov
adc
fimull
repnz
jecxz
sub
mov
hlt
adc
icebp
sub
fsubp
cmp
jmp
mov
call
sub
call
and
lret
js
in
dec
push
movsl
xchg
std
repnz
dec
fiaddl
add
aad
and
repnz
icebp
sub
stos
xchg
or
xor
jo
lea
mov
sub
loope
jg
sbb
dec
rcrb
aas
aam
inc
dec
je
mov
sti
push
sub
cmp
mov
lods
cmp
test
add
xchg
int3
mov
jnp
clc
mov
aaa
mov
ja
jne
inc
aaa
push
or
fnstcw
xchg
xor
and
push
sub
push
or
mov
lods
mulb
and
outsb
js
mov
popf
cmp
sarb
xorb
out
push
out
xchg
push
call
mov
js
mov
ret
sti
mov
jno
icebp
pop
icebp
push
js
sub
mov
and
in
int3
aas
bound
insl
outsb
cmp
hlt
dec
mov
mov
pop
imul
xor
loopne
mov
xor
sbb
adc
pop
stc
sub
adc
jle
pop
ljmp
pusha
bound
sbb
ret
inc
jmp
add
aas
mov
bound
sub
hlt
jmp
subb
push
mov
cs
divps
dec
scas
orl
clc
mov
cli
jbe
sbbl
xlat
mov
sbb
clc
inc
inc
stos
mov
mov
add
dec
ss
adc
lret
xorl
jne
sbbb
pop
sub
fisubl
jmp
daa
jle
into
sbb
cmc
clc
sub
jns
nop
jg
into
jns
fadds
push
sub
pop
divb
mov
add
mov
inc
xchg
cmc
sbb
ss
out
xor
mov
xchg
sub
nop
cmp
xchg
mov
fidivl
out
or
and
adc
int
sub
dec
adc
add
and
cmp
jl
movsb
lcall
ja
loop
adc
sub
stc
jmp
and
add
iret
push
andl
cld
call
add
mov
push
inc
cmc
mov
ror
mov
leave
and
ja
iret
sbb
or
or
mov
ja
jns
pop
xchg
fstl
jae
sub
jmp
cmpsb
sub
rclb
jecxz
aaa
push
lods
mov
push
lods
imul
push
mov
popf
sbb
jns
fcomps
mov
mov
sbb
and
mov
dec
mov
sub
adc
ljmp
in
or
mov
cld
pop
add
mov
adc
loopne
stos
flds
shrd
and
jge
scas
adc
daa
jb
mov
aaa
pop
add
push
mov
and
sarb
lret
jae
sahf
or
jl
je
mov
es
fstpt
iret
or
out
dec
lcall
add
mov
mov
popa
int
pop
cmp
cli
outsl
pop
int3
jecxz
xlat
adcl
daa
adc
repnz
aam
jg
cmpl
push
aas
mov
je
sarb
xchg
jns
clc
dec
mov
gs
pusha
dec
pop
sbb
xor
popf
dec
push
xchg
adc
sub
sbb
das
icebp
mov
shl
cwtl
gs
xor
push
push
pop
cld
pop
sbbl
fsubrp
push
cmp
xchg
hlt
push
jg
xchg
bound
cmp
pop
add
in
push
mov
addr16
cmp
mov
hlt
add
push
mov
add
sub
and
lret
xchg
mov
inc
xchg
push
jge
sbb
pushf
sbb
fcoms
mov
test
int
fdiv
sti
das
stos
adc
out
xor
xor
inc
repnz
shrb
push
fprem
rorl
test
cmc
orb
test
std
cmp
pop
inc
xchg
es
cld
out
adc
imul
xor
cmc
pop
ret
gs
aad
cmp
or
out
pop
lret
jg
push
push
jne
adc
mov
xlat
popa
out
iret
cmp
push
sub
add
xchg
mov
push
dec
out
dec
cmp
arpl
add
rolb
dec
cld
sti
mov
push
or
out
daa
dec
pop
fstpl
out
ret
aas
push
decb
or
lahf
mov
es
lock
gs
mov
mov
adc
pop
sbb
jp
rclb
iret
adc
call
jb
arpl
cmp
mov
les
sti
int
pop
int
stc
push
xchg
aaa
mov
loope
loope
mov
sbb
shrl
jg
js
es
flds
ljmp
aad
adc
adc
fsubp
mov
stos
mov
pushf
push
inc
repz
mov
xor
dec
lea
mov
mov
sbb
lret
push
push
popf
and
pop
rolb
adc
xchg
mov
cmc
jmp
repz
in
cmp
xlat
test
sarb
out
aad
adc
jbe
push
sbb
add
jns
cli
pop
push
inc
insb
jg
push
push
xchg
imul
enter
ljmp
dec
xor
test
in
idivl
test
pop
rcll
adc
add
xor
stc
movsb
inc
hlt
hlt
xor
cmc
gs
mov
lahf
dec
jp
mov
xchg
loop
mov
fiadds
sub
adc
in
fcomp
test
sub
out
inc
std
fstps
jb
inc
lods
sub
test
push
sbb
push
push
cltd
push
imulb
mov
test
sub
or
int
daa
cmc
in
and
jae
jb
mov
and
add
push
sub
push
xor
sub
adcl
pop
nop
insl
sbb
out
inc
and
jg
loope
outsl
pop
push
ljmp
mov
test
dec
inc
jnp
jmp
ja
cltd
inc
in
stc
adcb
adc
daa
pushf
fidivs
mov
pop
adc
sbb
pushf
repz
inc
cmp
adc
jmp
lcall
gs
sbb
daa
cli
std
cmpsb
xchg
icebp
fidivrl
aam
mov
sub
int
dec
into
jmp
dec
cmp
push
dec
xchg
push
xor
mov
in
shll
nop
pop
cmp
imul
out
dec
and
imul
adc
stos
push
fs
jle
mov
ljmp
dec
cmp
push
xchg
xchg
dec
dec
mov
aam
sar
call
jns
sub
inc
lahf
jbe
cs
adc
out
aam
je
sbb
pop
je
dec
dec
cli
pop
xchg
pop
addr16
movsb
xchg
and
pop
in
mov
pop
or
aad
mov
leave
outsb
popa
fsubrl
adc
mov
fnstsw
xor
cmovb
addr16
fidivs
xchg
cmp
adc
addr16
mov
cmp
rcrb
sbb
xchg
pop
xchg
cmpsl
jae
xchg
ljmp
xlat
jl
out
lock
sbbl
aam
cmp
push
dec
insb
jnp
sub
mov
cmp
imul
aad
adc
pop
lea
pop
cmp
out
jge
jno,pn
xor
push
mov
cld
mov
popa
pop
mov
inc
inc
fisubrs
out
lods
mov
pop
js
inc
fwait
into
cmp
push
fisttps
add
js
xor
xorb
stos
inc
aas
nop
fs
mov
jbe
xor
imulb
aad
mov
cltd
idivl
cmp
push
out
aam
cmp
fst
or
xchg
jne
xlat
pop
push
cmp
scas
aam
adc
aam
arpl
mov
sbb
push
lcall
out
addr16
jne
lahf
outsb
inc
setns
inc
push
in
dec
or
jmp
xor
mov
jnp
jmp
push
cmp
imul
xchg
popa
lods
outsl
into
pop
test
pushw
sti
icebp
and
lret
cmp
ret
jne
pop
mov
mov
mov
mov
popa
jl
decl
and
xor
outsl
lea
stc
in
mov
and
mov
cwtl
add
clc
lahf
daa
inc
fs
dec
xor
or
fwait
xor
mov
aam
or
mov
js
dec
sbb
je
ss
rcrb
dec
xor
pusha
movsb
adcb
sub
cltd
leave
inc
pop
cmp
sub
adc
lds
pop
pop
repnz
imul
mov
or
cmp
xchg
into
dec
sbb
xchg
add
pop
push
ljmp
cmp
fcomp
repnz
in
mov
or
push
lret
test
xor
lret
rcr
jecxz
adc
lods
adc
jmp
mov
sub
cmp
and
fbld
mov
cmpsb
movsb
adc
movsl
gs
fucomp
xchg
push
push
sbb
dec
jnp
mov
jecxz
stc
imul
aam
sub
adc
loopne
jl
mov
mov
or
dec
add
and
hlt
cmp
sub
jge
or
ret
mov
push
ss
push
in
hlt
int3
mov
lods
pop
sbb
push
cmp
and
std
push
add
and
jmp
fisttpl
pop
pop
push
sahf
jmp
cmp
shrl
lods
cs
jmp
adc
stos
cmp
sub
int
pop
enter
push
mov
fadds
ljmp
lea
jp
clc
fstl
stos
addr16
xor
cmp
jmp
std
mov
mov
push
je
mov
insl
insl
jns
jno
push
jg
addr16
adc
cmp
mov
lret
inc
fs
push
sub
cmp
out
lcall
je
cmp
xchg
push
rorb
outsl
fwait
int3
xor
ret
roll
faddl
enter
ret
add
push
jb
sub
xor
pop
and
mov
out
mov
sahf
adc
ret
aaa
push
mov
sbb
xchg
popl
or
test
mov
call
movsb
std
adc
lods
rcr
jecxz
enter
inc
aas
lods
inc
iret
pop
xor
hlt
lods
test
jmp
ljmp
out
lods
mov
jecxz
jno
iret
cmp
in
sub
and
jae
loop
sbb
cmp
jno
push
sbb
mov
test
adc
clc
lret
fwait
adc
jae
fsub
xchg
mov
lods
jnp
push
push
xor
add
sbb
xchg
xor
sbb
xlat
in
incl
or
jecxz
sub
pusha
aam
sbb
xorl
jnp
cmp
sub
adc
and
adc
lea
mov
jle
sub
cmp
and
fisubrl
jl
and
bound
xor
ficomps
in
dec
insl
mov
rcll
scas
and
cmp
dec
nop
bound
mov
jmp
stos
ljmp
in
add
cmpb
int3
scas
xchg
mov
sbbl
fcomps
mov
xor
and
insl
jno
daa
popf
add
fmulp
push
sub
mov
adcb
jle
roll
cmp
mov
lea
xchg
inc
jle
mov
out
inc
push
lret
lahf
and
in
dec
inc
mov
jmp
in
sub
out
ret
push
push
stos
sub
sahf
jl
jb
imul
std
jecxz
outsb
push
out
mov
mov
ffreep
push
out
ds
cltd
in
xchg
aam
sub
fcoml
mov
and
outsb
lods
or
mov
outsl
sahf
xor
inc
xchg
movsl
lret
push
jb
mov
ds
jg
lret
mov
or
mov
xchg
inc
or
out
imul
inc
outsb
lds
dec
jne
test
mov
xchg
jl
mov
dec
ds
cli
mov
and
mov
cltd
test
ljmp
and
sbb
xor
and
test
cmpsb
mov
xchg
pushf
fs
lahf
pop
mov
push
xchg
mov
add
mov
mov
bound
xchg
fdivr
stos
and
aaa
mov
pop
mov
out
cmp
shr
jae
mov
addr16
cld
xchg
push
sbb
jbe
inc
or
imul
mov
mov
stc
cmpsb
jmp
xchg
cmp
jbe
inc
or
imul
mov
mov
stc
cmpsb
jmp
xchg
cmp
js
pop
or
imul
out
repnz
mov
stc
mov
leave
jb
subb
sbb
imul
mov
mov
test
dec
shlb
ss
subb
test
call
add
push
mov
mov
mov
cmp
sub
rorl
mov
xor
add
adc
add
adc
mov
sub
pusha
fnsave
lock
out
test
dec
test
or
and
dec
iret
sbb
aas
aam
insl
push
int
sbb
xor
fwait
xlat
roll
arpl
mov
mov
lret
sarl
xchg
mov
daa
jns
adc
push
add
movsb
pop
mov
scas
mov
pop
fldcw
dec
mov
pushf
mov
and
push
cmp
sbbl
ds
into
mov
std
xor
mov
xchg
dec
cmpsl
ret
aad
movsb
pop
flds
cmp
xor
lret
add
test
enter
std
jno
sbb
sub
mov
shlb
xchg
icebp
cmp
fldz
enter
test
fstl
lds
push
mov
icebp
insb
loope
or
out
add
dec
fcomps
cltd
cwtl
push
in
das
or
push
mov
push
test
or
test
push
in
adc
and
loopne
pop
lock
jnp
rclb
je
lretw
and
sub
or
pop
out
rorl
jge
sub
sbb
or
clc
xor
and
adc
add
push
mov
mov
mov
cmp
sub
sbb
or
clc
xor
and
adc
add
push
mov
mov
jbe
xor
lods
je
inc
ret
insb
mov
ja
stos
sub
cmp
lds
xchg
sub
dec
dec
clc
mov
cmc
xchg
and
insb
cmp
fcomps
test
arpl
inc
out
aam
mov
xchg
out
cmp
sbb
sub
pop
xor
movsl
xor
dec
cmp
sbb
cwtl
js
ds
sbb
fldt
dec
insl
push
mov
xor
test
push
lods
xor
xor
push
sub
in
loope
cltd
test
pop
in
fwait
mov
xor
int
popf
dec
pop
loopne
repz
dec
call
adc
mov
les
int3
fiadds
push
cld
and
insb
jno
lea
jo
mov
mov
test
jge
jg
fistl
jmp
jmp
mov
insl
ret
push
imul
xchg
int3
outsb
testb
sbb
lea
rcll
pushf
je
adc
cmpsl
std
fisubrs
imul
jge
jl
cmpsb
in
das
sbb
aas
pushf
add
jg
xor
mov
jns
push
and
pop
push
mov
mov
adc
loopne
jmp
jb
adc
fadds
xchg
sub
inc
cmp
xor
lea
inc
int3
scas
adc
sbb
add
adc
cmp
mov
out
pushf
sub
movsl
in
push
fdivrl
xchg
jmp
lock
bound
shll
fistl
cmp
stos
loop
lcall
mov
sub
adc
inc
pop
movsl
lea
test
stos
xor
pusha
stos
push
mov
dec
outsl
push
and
cmp
fcomip
in
in
loope
movl
xchg
cmp
std
or
jge
es
dec
mov
xchg
cmp
xchg
or
add
popa
or
pusha
lcall
aas
mov
xor
dec
shrb
inc
adc
mov
push
or
xchg
adc
lds
xchg
mov
pop
jg
jae
jns
jb
jae
jmp
mov
dec
out
loop
mov
ret
sbb
test
sti
leave
sub
movsb
push
jle
pop
pop
enter
data16
cmp
sub
xchg
xchg
xor
mov
and
mov
ret
fldt
dec
and
mov
jno
mov
or
insb
sbb
hlt
pop
and
cmc
jle
leave
push
xchg
lods
out
iret
repz
adc
inc
test
adc
out
movsl
test
lret
add
sarl
stc
outsb
and
cmp
imul
jbe
sub
call
sti
iret
mov
mov
xor
gs
mov
enter
sahf
subl
mov
outsb
rcr
clc
imul
sahf
and
aas
testl
fists
cmp
in
adc
int3
cmpsl
mov
dec
dec
and
loop
mov
push
out
mov
push
xchg
cltd
pop
push
jle
cmp
fmul
pop
filds
fucomip
cs
ret
mov
mov
ds
std
adc
mov
popa
inc
cwtl
inc
xchg
sub
es
mov
push
shll
fidivs
nop
adc
clc
cmp
fmull
icebp
nop
mov
orb
dec
mov
aam
jbe
xchg
fs
js
push
daa
adc
cli
imul
and
divl
ljmp
and
fisubrl
adc
lods
clc
cs
cwtl
data16
inc
pop
fsubrs
outsl
mov
dec
push
sbbb
dec
popf
jns
push
scas
cmc
inc
into
enter
cmp
sub
lahf
mov
jb
jg
pop
out
out
gs
sub
ficoms
mov
jmp
dec
imul
jl
popa
sub
jmp
lret
ss
out
pusha
and
lahf
orb
insl
xchg
adc
nop
or
xchg
xchg
bnd
test
andl
cmp
sahf
adc
leave
into
pop
cmp
jns
loop
enter
mov
sbb
aas
aam
mov
xor
push
mov
adc
clc
lea
pop
dec
andl
std
inc
mov
jecxz
pop
sub
mov
cmp
popa
xor
loopne
in
sbb
lock
push
test
rorl
in
xchg
xlat
data16
push
jl
mov
pop
push
push
aas
pop
mov
dec
orb
jecxz
mov
dec
mov
push
inc
cli
jle
test
jnp
jnp
xchg
cli
pop
stos
out
sub
add
shlb
xor
cmpb
push
loope
xchg
es
xchg
mov
inc
adc
cs
stc
sahf
mov
fisubs
int
daa
loope
pop
dec
aad
pop
pop
jl
sti
aad
mov
in
mov
cwtl
out
das
mov
and
aam
pushf
aad
lods
cmp
fs
movsl
push
sti
test
sti
inc
mov
push
push
and
js
inc
fcoms
pop
cs
and
loop
mov
in
inc
call
lcall
insb
andb
cmp
xchg
add
movsl
inc
mov
lea
xor
pop
pop
fs
dec
cmp
lods
sbbb
fcompp
jl
lret
repz
into
dec
pop
adc
mov
push
repz
fidivl
mov
pop
aad
push
lcall
sbbb
mov
pop
rcrl
ret
das
testb
sub
cmp
jb
movsb
sbb
insb
mov
pusha
insb
jecxz
hlt
ret
faddl
incb
cmp
xor
sub
add
inc
push
scas
sbb
arpl
lock
mov
dec
inc
icebp
cli
push
popf
xchg
shr
fcom
lods
fs
xchg
out
xchg
call
xchg
ret
lahf
inc
sbb
iret
mov
out
repnz
pop
push
orb
ret
js
pop
push
cs
lods
mov
or
out
shll
inc
xor
fwait
mov
or
sub
sub
jg
pop
xchg
mov
pusha
movsb
insb
sti
fwait
and
mov
pop
ds
popa
pop
roll
imul
outsl
mov
push
xor
fidivs
push
push
fidivrs
and
fisubrs
insb
push
inc
ss
ljmp
or
jnp
xchg
jmp
cmovae
add
adc
movsb
inc
inc
and
test
fidivrs
xchg
push
mov
jg
sbb
inc
jmp
repz
sbb
and
pusha
jne
mov
pop
jns
lods
lahf
push
add
adc
mov
ds
out
sbb
adc
xchg
scas
push
daa
cli
jns
insl
and
call
iret
jl,pt
sbb
cs
xchg
push
repnz
vorps
mov
lret
andb
jge
loope
mov
pop
mov
fists
test
test
jl
mov
jge
mov
cld
mov
push
fadd
sub
imul
in
cs
shll
jns
sbb
lret
dec
arpl
scas
sub
mov
dec
mov
out
add
and
fnstcw
int3
push
cmpsb
or
add
cmpl
idivb
fnstsw
dec
in
aam
aas
stos
es
mov
ds
cmp
mov
pop
xchg
pushf
int3
nop
pop
mov
sysret
and
movhps
addl
pop
loope
mov
mov
push
int
mov
and
xchg
mov
xor
ja
aam
in
pop
leave
call
dec
repz
shr
lods
adc
mov
add
cmp
lret
pop
in
call
shrl
push
pusha
jb
lea
pop
inc
pop
mov
repz
adc
mov
loope
adc
dec
and
ja
push
cwtl
or
pop
cwtl
dec
fnstenv
jp
adc
lahf
sub
cmpsl
mov
xor
loopne
call
icebp
aas
or
jmp
out
push
fimuls
cmp
push
xchg
xchg
lea
andl
jge
stc
push
sub
sub
add
daa
mov
dec
or
aad
lret
cmp
dec
sti
adc
daa
daa
imul
push
xchg
mov
adc
nop
cmp
push
pushf
std
popa
das
pop
scas
mov
dec
fwait
add
cwtl
jp
fdivl
int
pop
mov
adc
mov
pop
dec
cmpsb
fistps
cmpsl
add
notl
mov
xor
jl
les
imul
xor
pop
lds
aam
and
in
mull
nop
sarb
jecxz
push
fsubrp
cmp
rorl
imul
sub
or
adc
cwtl
hlt
jns,pt
adc
into
icebp
out
fdiv
popa
loop
or
jecxz
jp
mov
and
jne
xor
ja
mov
jge
das
es
fdivrl
sbb
adc
int
dec
addl
out
shll
mov
lret
or
mov
xchg
jno
push
pop
cmp
mov
leave
out
stos
call
mov
cmp
cmp
int3
inc
ss
jp
adc
dec
repz
inc
pop
stc
insb
and
or
sbb
pop
dec
mov
daa
decl
dec
dec
xor
call
outsb
xor
mov
divb
orb
inc
lods
out
mov
lds
xor
dec
inc
jl
pushl
and
and
bound
lahf
ljmp
mov
pop
mov
daa
popa
test
adc
inc
mov
outsb
push
xor
add
mov
or
dec
outsl
bound
imul
stos
add
xchg
adc
pop
push
and
lods
and
fs
mov
popf
lret
das
outsb
push
xchg
ljmp
xor
cmp
ss
add
pop
rcl
mov
ja
adc
xor
call
imul
leave
pusha
inc
pop
jmp
add
sbb
or
xlat
jnp
lret
push
lahf
or
idiv
sbb
call
push
or
jbe
jo
pop
adc
dec
lret
sahf
push
notl
xchg
int3
popf
cli
je
outsl
les
mov
sbb
in
jle
stc
jb
add
mov
in
sbb
jmp
inc
iret
cwtl
mov
out
jne
push
pop
pop
pop
arpl
rcrb
cmc
mov
mov
jno
mov
movsl
stc
arpl
sbb
aam
push
adc
adc
push
std
testl
mov
or
dec
fmulp
in
pop
insl
sub
shll
pushf
inc
fcomps
loop
test
or
clc
fnstsw
negl
mov
xorl
aas
testb
jmp
sti
mov
stc
xor
pop
pop
mov
rcrb
mov
sbb
push
lea
push
dec
stc
mov
inc
aas
mov
leave
mov
cli
enter
inc
nop
inc
inc
divl
loopne
xchg
cwtl
pop
fstpl
sub
jns
stc
sbb
push
sbb
mov
mov
fiaddl
sbb
mov
mov
mov
mov
fisubl
mov
mov
dec
in
xchg
sub
cmp
arpl
adc
das
mov
test
ret
inc
inc
cwtl
cmp
xchg
mov
ret
pop
cmp
repnz
inc
shrl
pop
xor
mov
jl
out
mov
out
icebp
loopne
mov
out
hlt
jne
cltd
push
xor
push
movsb
push
push
in
in
mov
repnz
ds
add
dec
scas
repnz
cwtl
mov
sbb
scas
ja
test
aad
int
mov
xorl
stc
sti
adc
lahf
pop
add
test
int3
call
lahf
push
dec
fcmovne
push
mov
outsb
mov
jge
dec
or
movups
add
add
cli
fndisi(8087
xchg
idivb
cltd
pop
jo
sarl
jecxz
pop
gs
insb
inc
arpl
sti
shrl
lcall
jle
leave
mov
sbbl
xchg
cmc
adc
lahf
or
add
movsl
jae
mov
pop
sahf
int
fisttpll
mov
lods
aam
test
mov
mov
mov
jo
jle
les
insb
out
andl
iret
add
jge
jmp
loope
pop
jne
xchg
push
mov
sub
leave
mov
es
add
icebp
dec
push
mov
insb
and
jmp
mov
add
js
push
fiadds
stos
je
dec
popf
adc
enter
push
ret
jb
pop
inc
cltd
js
addr16
mov
push
shlb
mov
mov
sbb
fldl
or
in
inc
xchg
dec
fs
nop
mov
cmp
mov
lds
mov
or
push
mov
lret
mov
xchg
xor
and
ret
xchg
pop
push
or
cltd
mov
adc
addl
shll
data16
cmpsl
andb
mov
mov
mov
ljmp
push
cmp
lret
outsb
push
leave
ffree
imul
add
pop
inc
ljmp
xor
in
add
add
xorl
fwait
mov
nop
out
test
and
mov
call
cmp
push
cmpsb
mov
into
pushf
jne
mov
int
rcll
scas
out
addr16
cmp
movsl
or
sti
jle
fimull
pop
inc
pop
sub
js
push
out
stos
mov
jge
test
mov
jmp
hlt
out
psubsw
divb
pop
mov
cmp
mov
and
xor
scas
ret
cmpsl
aaa
sbb
bound
sub
aam
cmp
xchg
add
adc
fstpl
sub
dec
aam
jbe
gs
hlt
scas
xor
pop
xchg
push
cwtl
or
ss
ss
push
sub
cmp
inc
fisubs
push
addr16
mov
adc
cmpsb
xchg
add
testl
push
mov
ret
inc
dec
adc
and
inc
sahf
xchg
loop
stos
mov
ret
aas
lcall
aad
or
les
pop
push
roll
in
std
stc
lds
adc
popa
or
aad
pop
scas
jae
mov
xchg
jmp
cmpsl
and
mulps
cltd
cmpsb
fdivp
adc
sub
imul
cmc
adc
fisubrl
dec
testb
adc
mov
jnp
lea
jae
lds
movb
iret
sahf
cmpsl
sub
jmp
push
xchg
xlat
repnz
sub
add
push
es
insl
mov
push
dec
ja
and
cltd
movsl
loop
or
fs
push
sbb
pop
xchg
sti
mov
into
sahf
xchg
mov
pop
dec
push
iret
into
xchg
into
add
xchg
test
gs
push
and
xchg
test
dec
sahf
lods
mov
mov
loope
cmpb
mov
popf
jle
dec
xchg
jb
fdivrs
aam
out
lahf
stc
mov
dec
mov
sahf
cwtl
addr16
fldl
out
sub
hlt
ret
cld
out
jg
cmp
mov
xor
jecxz
or
mov
and
inc
push
fsubs
sbb
push
rcrl
adc
outsb
push
cmp
cld
les
iret
adc
or
jp
xchg
leave
js
mov
lcall
push
jne
mov
movsb
aad
sbb
push
jmp
test
cmp
inc
and
mov
mov
loopne
xor
out
int3
out
pop
xor
inc
dec
pop
fstpl
stos
mov
jns
fidivl
lea
pop
ljmp
cmp
je
xchg
dec
popf
sbb
push
out
pop
sbb
adcl
mov
xor
movsb
jp
cmp
mov
mov
adc
sti
aaa
mov
jle
lods
dec
popf
icebp
jecxz
ljmp
insb
cmpsl
decl
shlb
movsl
cmp
rcrb
push
push
addr16
xchg
es
and
adc
add
cmc
push
mov
lea
icebp
loop
add
test
pop
adc
leave
aam
loope
fcmovnb
mov
push
push
test
out
xchg
loopne
push
cmp
popf
mov
jb
jnp
imul
or
jl
adc
pop
outsl
mov
ret
mov
mov
roll
nop
sub
pop
dec
rcl
sub
or
mov
popa
inc
leave
rorl
and
inc
test
sbb
pop
xchg
jl
jno
int3
xchg
test
pop
mulb
idivb
pop
mov
or
dec
mov
popa
lea
adc
mov
cwtl
ljmp
add
hlt
sbb
scas
out
ja
data16
outsl
dec
insb
push
mov
mov
cmp
push
sub
ja
push
jecxz
xchg
push
sahf
adc
jnp
mov
mov
xor
mov
and
or
sbb
scas
imul
js
push
pop
jecxz
or
aas
push
push
push
int3
xchg
cmp
add
pushf
aam
pushf
adc
into
push
jge
cmc
leave
mov
cmp
xor
mov
nop
xchg
int
adc
push
jb
xchg
popa
mov
sahf
ljmp
add
inc
pop
lods
xchg
ffree
xchg
sub
or
int
or
prefetch
lcall
dec
imulb
or
lea
outsl
mov
and
scas
xlat
lods
ds
jns
adc
sar
les
add
ficompl
lcall
xchg
stos
adc
mov
dec
and
fs
sbb
cli
and
sti
dec
cmp
fwait
adc
mov
or
lret
sub
sbb
xchg
call
lret
xchg
adc
scas
mov
mov
xchg
xchg
lods
push
lods
mov
mov
cs
push
lods
addr16
mov
les
and
out
shl
or
sub
sarl
push
add
pop
mov
enter
fsub
dec
push
mulb
out
in
stos
lea
pop
cmp
jns
ret
sbb
outsl
aam
insl
test
testl
sub
subl
xorl
pop
ljmp
loope
xchg
inc
xor
lods
negl
push
push
xor
lods
and
sub
mov
add
push
mov
fs
pop
icebp
jecxz
push
leave
jg
xor
pop
out
sbb
out
addr16
ret
loop
aaa
mov
push
sub
push
add
repnz
cli
pop
push
inc
inc
loope
push
pushf
sub
lahf
rclb
adc
mov
pop
mov
pop
imull
xor
insb
shrl
loopne
inc
fistl
add
mov
xchg
push
xor
inc
cmc
fcoms
repz
push
loopne
stos
and
das
sub
sub
repnz
xlat
repz
into
leave
mov
push
stos
inc
data16
fcompl
mov
mov
xchg
jo
or
lret
mov
fwait
pop
les
int
jb
std
push
ret
push
adc
repz
and
insl
sbb
mov
ret
mov
popf
push
adc
sub
ss
mov
addr16
jmp
push
das
pop
out
adc
cltd
cwtl
ret
and
adc
leave
cmp
int
adc
push
xchg
sub
fmul
pop
and
jl
xor
out
cmp
sub
dec
roll
ss
push
in
es
hlt
jo
xchg
xacquire
gs
in
into
adcb
enter
scas
sbb
or
int
rcrb
push
in
push
add
cwtl
fbld
sub
pop
mov
sub
movsb
xchg
xor
push
xor
dec
dec
repnz
and
or
adc
push
sub
inc
push
scas
dec
xlat
adc
and
lret
lods
xchg
ljmp
pushf
jo
stos
jne
and
std
mov
into
fisubrl
xor
dec
sub
push
sbb
fisttpll
sar
inc
ret
leave
cmp
stc
pop
repz
bound
xchg
ss
cmp
mov
xor
sbb
pop
and
cmp
jmp
std
sbb
in
scas
sbb
push
pushl
fnstsw
mov
not
adc
sbb
ret
xor
rcrl
lea
daa
push
add
or
cltd
add
lcall
or
add
inc
test
mov
lea
popf
or
int
in
jecxz
dec
and
jg
add
stos
icebp
mov
inc
push
pushf
enter
fsub
test
pop
pop
inc
jnp
push
mov
cltd
push
arpl
and
arpl
mov
popa
test
out
into
inc
push
outsl
push
dec
in
or
mov
adc
xor
mov
ja
inc
loop
push
loope
out
xorb
nop
push
lea
cld
and
or
leave
xchg
or
repz
push
cmpl
rorl
sar
call
add
push
mov
mov
mov
cmp
sub
sbb
or
clc
xor
and
adc
add
push
mov
mov
jmp
cmp
sub
sbb
or
cld
jmp
int3
add
jno
inc
pusha
mov
mov
cmp
cmp
sbb
sar
pop
mov
enter
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
js
mov
xlat
icebp
outsb
pop
pushf
out
mov
add
add
add
add
mov
add
mov
add
add
sti
add
or
push
add
add
popl
push
add
add
add
add
jo
pop
add
add
add
add
add
add
cmp
in
jbe
fiadds
jno
mov
sub
fldl
movl
jne
inc
add
add
or
daa
add
add
add
add
add
add
add
jge
pop
add
icebp
add
sub
inc
add
mov
cmp
cmp
in
pop
or
add
pop
add
add
push
add
dec
add
add
add
add
add
mov
push
add
add
add
xchg
add
add
add
add
add
add
outsb
add
add
add
cmp
jbe
jge
or
fldl
inc
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
in
leave
add
add
add
add
lldt
pop
add
add
fldl
add
add
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
cmp
mov
xor
imul
mov
mov
add
add
add
add
outsb
add
add
add
add
xchg
pop
add
add
cmp
imul
sub
lcall
add
add
add
add
xchg
add
pusha
add
mov
add
add
add
add
add
jno
fwait
add
pop
add
add
add
add
add
mov
jno
insb
add
add
add
add
add
add
outsb
add
add
add
imul
in
jbe
in
pop
add
add
add
insb
add
add
add
add
add
popl
adc
cmp
cmp
mov
or
xchg
add
add
add
dec
add
add
add
out
add
add
add
add
mov
cmp
mov
jmp
cmp
push
add
mov
sub
dec
add
movl
fldl
push
add
mov
add
push
add
add
add
add
adc
jae
mov
dec
add
add
add
add
xor
pop
add
add
add
add
add
xchg
add
add
add
add
add
in
add
add
pusha
add
add
add
add
mov
sub
les
mov
or
bound
leave
add
cmp
push
add
add
add
add
add
enter
add
add
testl
faddl
cmp
mov
cmp
or
test
push
add
push
add
pop
add
add
add
inc
add
sti
add
cmp
xor
sbb
and
mov
jbe
xchg
add
add
add
add
add
add
add
add
add
add
mov
nop
add
add
add
add
add
add
sub
mov
jl
add
outsb
test
fisttpl
maskmovq
inc
push
xchg
divb
lea
repnz
dec
iret
ss
cmp
jbe
dec
inc
jmp
fistpll
mov
and
fistps
inc
mov
xchg
inc
push
mov
into
push
movl
push
cmpl
push
arpl
sub
xchg
sbb
jl
sbb
xor
sahf
jne
call
test
xchg
les
aas
fwait
mov
fnstsw
jnp
test
pop
xchg
js
enter
and
fwait
adc
jbe
pop
popa
fdivl
movsb
ror
imul
jo
outsl
and
cli
mov
pop
xor
or
cmp
rclb
jg
jmp
dec
inc
iret
push
dec
test
std
xchg
dec
jmp
out
sub
and
xor
sub
mov
stos
xchg
sub
push
addr16
sar
push
mov
in
add
rcll
subl
vmovlpd
sub
fs
jg
out
jmp
or
mov
pusha
bound
mov
iret
cmc
pop
fstpt
xor
cltd
mov
dec
add
push
rclb
jge
and
or
push
jecxz
inc
fs
insl
push
dec
add
jb
scas
or
pop
jae
and
jmp
sbbl
xchg
stc
and
xor
mov
add
xchg
pop
mov
std
sti
sbb
dec
push
cs
mov
jg
out
lock
dec
adc
sub
fdivs
ja
mov
xor
adc
and
add
adc
xorb
insb
jge
push
sub
sbb
insb
xchg
jmp
gs
shlb
cmp
in
fdivrs
xchg
sub
in
mov
push
xor
mov
xlat
sbb
dec
inc
scas
bswap
sub
das
scas
pop
outsb
xchg
out
mov
jne
movsb
das
lcall
jp
lret
dec
jmp
subl
in
hlt
lret
fcomp
je
movsb
dec
mov
fnstenv
sarl
dec
sti
xchg
fwait
mov
mov
test
insl
dec
sbb
jg
pop
jnp
push
pop
xchg
xor
push
aad
mov
pop
mov
cmp
mov
or
mov
or
cltd
dec
shll
or
es
xchg
dec
and
mov
lahf
jae
mov
jno
xor
mov
iret
sub
and
mov
push
mov
xor
or
mov
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
