ret
push
call
mov
mov
add
mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
incl
call
mov
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
lds
scas
mov
cmp
or
sbb
dec
pmaxub
outsl
jnp
mov
mov
jmp
sti
adc
sub
cmp
dec
pop
jg
outsl
jnp
mov
mov
out
clc
sti
pop
mov
pop
cmp
add
sbb
jnp
mov
ljmp
push
jmp
xchg
notl
idivb
mov
ja
pusha
mov
mov
dec
xor
in
es
shrb
mov
sbb
adc
insl
xlat
xchg
inc
into
or
stos
notl
sbb
jmp
mov
xchg
test
dec
sahf
lahf
sbb
and
cli
lret
pop
fs
add
shlb
aas
aam
imul
sbb
aas
xchg
xchg
jg
jo
out
fildl
bswap
out
js
div
dec
sub
das
sti
cmc
pop
dec
cmpsl
repnz
xchg
idivb
fs
inc
bound
les
loopne
lock
cmp
cmp
jg
jp
mov
mov
jmp
sti
push
or
sbb
sub
cmp
push
pop
jg
jbe
in
in
fcmovb
lret
sarb
movsl
subb
inc
inc
jge
sub
sub
imul
cltd
fisubrl
mov
sti
sbb
dec
pop
push
cmp
cmp
femms
outsl
sub
ret
fcmovb
scas
fisubs
jmp
sti
pop
or
sbb
sub
cmp
dec
pop
jg
outsl
jnp
mov
mov
jmp
sti
pop
or
sbb
sub
cmp
dec
pop
jg
outsl
jnp
mov
sbb
cld
lock
jecxz
inc
xchg
mov
xor
jl
in
adc
sbb
xchg
ret
outsb
mov
jne
mov
aad
ret
pop
dec
cli
jns
inc
rorl
stc
add
xor
push
push
pop
cmpsl
xchg
pop
sbb
cld
cmpsb
mov
jo
mov
fstps
aam
push
add
xchg
pop
push
out
jle
xchg
mov
pop
outsl
sbb
mov
mov
xchg
aas
push
or
pop
fisttpl
scas
sub
or
sub
in
sub
movsl
mov
mov
fiadds
ret
push
or
xchg
lea
fst
enter
and
mov
int3
cmpsl
cli
rolw
sub
xchg
out
pop
shr
pop
push
or
xor
cmpsb
push
or
mov
mov
out
inc
and
or
mov
inc
lea
push
imul
jo
and
dec
xor
cli
push
pop
sbb
arpl
out
push
mov
push
sub
iret
ljmp
xor
xor
clc
pop
inc
dec
ret
adc
adc
icebp
imul
jle
or
ret
sub
cmp
in
aam
cli
outsb
jo
xchg
and
add
mov
add
mov
cli
jb
cmc
insb
adc
push
mov
jne
push
xchg
jbe
imul
lret
loopne
lret
and
fadds
clc
and
fs
jle
les
jb
sub
insb
sbb
shrb
xorb
das
xor
cltd
outsb
sbb
adc
xor
scas
dec
cmp
fmuls
or
mov
aaa
mov
sbb
fildl
lds
movb
movsb
insb
mov
mov
ret
pop
mov
jo
pop
jnp
scas
mov
mov
push
cmp
stos
xor
call
add
xchg
xchg
addr16
mov
jge
mov
ss
outsb
in
test
mov
dec
jecxz
movsl
enter
ret
cmpsl
icebp
sub
dec
gs
pop
cmp
add
adc
test
pop
dec
mov
shlb
aam
outsl
test
pusha
push
adc
stc
popa
xlat
jnp
test
push
dec
inc
insl
cmp
popf
sahf
repnz
lahf
into
ret
sbb
inc
mov
fdivrl
stos
popa
push
cmp
push
mov
clc
fs
cmp
push
jmp
adc
or
cmp
movsl
adc
dec
in
mov
cmp
or
mov
sub
lret
aas
lea
jbe
or
adc
jb
outsl
popa
inc
adc
loop
sub
jae
pop
and
js
inc
xchg
aas
test
aam
or
xor
movsl
enter
shlb
add
dec
and
das
sti
sbb
lock
sub
imul
push
jbe
xchg
pop
push
add
outsl
inc
fildll
cli
jecxz
add
dec
adcl
out
xchg
and
ss
pop
rclb
loopne
pop
jne
aas
lods
scas
mov
add
cmp
mov
jg
push
jp
push
sbb
mov
cmp
add
jbe
xor
pop
jo
mov
pop
lret
mov
in
or
mov
xor
fistpl
arpl
cmp
sbb
stos
arpl
es
lock
mov
lahf
sbb
push
js
mov
clc
das
imul
cld
xchg
adc
mov
inc
xchg
fwait
hlt
jne
daa
lock
push
add
mov
pop
sti
push
repnz
pop
cmpsb
sub
pusha
or
push
dec
xor
ljmp
sub
jbe
mov
sbb
loopne
sub
test
jno
imul
xchg
add
test
frstor
les
mov
popf
xor
jae
pop
dec
popa
subl
mov
scas
movsb
pop
xlat
xchg
adcb
mov
push
js
pop
aam
rorb
sub
pop
orl
lcall
jmp
pop
stc
mov
inc
xchg
xor
stc
mov
pop
int3
iret
cmp
cmc
pop
jne
stc
sbb
fisubs
mov
test
adc
in
add
mov
cld
xchg
jne
ret
movsl
cwtl
sub
pop
lret
xor
shrl
jo
mov
pop
inc
andb
cs
rolb
cmp
lods
mov
pop
lahf
and
int
stos
ret
std
pop
jl
std
push
xchg
mov
mov
xchg
cmc
or
xor
sbb
jo
test
js
xchg
out
add
mov
pop
jbe
insb
sub
pop
dec
add
idivb
cmpsl
xlat
dec
cmpl
test
int
or
pop
xchg
mov
inc
mov
sub
ds
cld
out
les
sbb
add
mov
mov
mov
sbb
mov
jge
notb
dec
mov
xorl
or
cwtl
stc
sub
pop
outsb
repnz
test
in
rclb
inc
xor
ljmp
fcomip
icebp
dec
je
mov
xchg
mov
sub
xor
test
ss
andb
xchg
pop
in
popa
sahf
mov
mov
xchg
pushf
cmpsb
jne
es
add
or
ljmp
mov
scas
adc
xor
mov
push
add
dec
sub
insl
jp
sub
ret
sahf
movsb
outsb
pushf
addr16
sub
adc
or
in
inc
or
push
xor
andb
nop
fs
push
gs
cmp
popa
mov
roll
popf
mov
jl
out
mov
cmp
adc
mov
shlb
pop
push
add
or
push
insl
adc
inc
and
cltd
inc
test
das
iret
cwtl
es
push
dec
pop
push
adc
jno
xor
rcrb
cmc
xlat
xchg
scas
movsb
aad
add
and
aad
xchg
mov
cs
scas
adc
xchg
jb
in
jns
sub
inc
sbb
or
pop
fwait
test
sub
dec
push
mov
jl
js
imul
push
jmp
out
push
hlt
add
test
mov
faddl
push
mov
inc
out
lahf
inc
ret
icebp
addb
je
daa
mov
test
popa
push
pop
int3
sbb
fwait
jecxz
ret
mov
lret
and
shr
jb
dec
ret
ffree
push
ficoml
inc
sub
and
cmc
in
int3
stos
add
pop
call
mov
mov
push
into
outsl
dec
mov
cwtl
push
sbb
stos
push
inc
jno
iret
or
stos
fsubrs
lds
adc
sbbb
into
dec
imul
pop
xor
dec
push
mov
rorb
outsl
outsb
lods
mov
sti
mov
shrl
xor
cmp
mov
jle
popa
out
inc
or
jmp
xchg
mov
inc
xchg
xor
cld
or
or
call
fnstenv
addl
les
in
into
xchg
push
xchg
add
mov
mov
sbb
jle
xchg
into
rcr
loope
cmp
jl
test
xchg
dec
mov
nop
insb
cmc
mov
and
adc
mov
dec
and
add
cmp
sub
in
gs
cld
adc
sbb
out
in
enter
mov
mov
jbe
ret
inc
mov
aaa
add
pop
xchg
mov
negb
fs
popa
xchg
out
pop
aad
xor
js
jnp
in
clc
inc
in
mov
mov
es
mov
enter
jge
jp
sbb
push
outsb
pop
and
cmp
cmc
sbb
xlat
sahf
or
das
fs
sti
jno
in
adc
gs
sub
mov
push
test
cmc
push
or
loop
stc
xchg
and
inc
test
aam
xchg
sub
xorl
inc
add
ja
xor
inc
pop
dec
das
cwtl
dec
mov
or
inc
lret
mov
jle
mov
xor
adc
repz
out
mov
arpl
inc
mov
fdivrs
pop
push
mov
cmpsl
dec
outsb
cli
cmp
js
xor
or
fstpl
xor
xchg
mov
pop
or
sub
std
add
shl
cli
mov
aad
popf
xchg
movsb
dec
jl
rorb
divb
push
xchg
push
or
or
jecxz
negl
mov
adc
stos
cli
es
inc
fists
push
or
lcall
js
lret
jmp
pop
mov
sbb
call
popf
and
outsl
movsb
sub
push
adc
fidivl
fdivl
or
push
dec
xchg
push
shll
mov
jns
jb
insl
xor
into
sbb
xchg
jae
pop
xor
test
sbb
xchg
mov
repz
ds
mov
jnp
jns
jb
icebp
orb
mov
dec
out
jp
es
lahf
jecxz
dec
nop
out
xor
or
in
rcll
pusha
jmp
or
pop
pop
sub
xchg
push
loop
and
mov
fwait
scas
out
pop
test
icebp
jne
or
add
repnz
xor
jmp
std
ret
lret
lods
mov
mov
bound
push
mov
and
or
dec
scas
push
testb
rcrb
and
out
dec
repnz
xchg
repnz
loope
sub
into
jmp
sub
pop
mov
push
or
roll
dec
adc
jb
push
cld
cmp
fstpl
imul
popa
fsubp
fdivp
repz
flds
mov
jl
sbb
pop
cmp
scas
cmp
fcmove
ss
adc
ret
incb
dec
inc
add
mov
sbb
and
push
movsl
or
jge
inc
pop
dec
daa
nop
jg
divl
rcrb
mov
mov
push
pop
std
pop
inc
inc
pop
lods
stc
cli
fidivs
xchg
lock
xor
jae
xor
add
push
arpl
or
mov
adc
movsl
push
sub
loop
add
pushf
add
add
movsl
out
into
loop
dec
xchg
jno
lods
push
fcmovne
or
xlat
and
loope
cmp
insl
xchg
es
adc
pop
stc
sub
and
mov
js
adc
xchg
cmpsl
pop
fndisi(8087
xor
push
fdivrl
push
in
xchg
cmp
xor
out
mov
jns
into
mov
popl
sti
push
repnz
ja
lock
lds
and
std
popf
and
dec
jb
xchg
sbbb
cmp
jmp
xchg
mov
mov
xor
fisubrl
packsswb
jmp
clc
mov
pusha
imul
icebp
mov
fucomp
mov
lods
sbb
or
sub
aas
sbb
dec
mov
sbb
sarb
rcll
mov
sbb
loop
cmc
inc
sbb
sahf
add
daa
mov
cmp
sti
mov
ficoms
mov
mov
rorl
psadbw
cmp
jns
hlt
movl
push
in
sbb
adc
clc
mov
mov
iret
cmpsb
pusha
jge
mov
fwait
xchg
mov
jb
cmp
sbb
and
push
cld
cmp
cmp
sub
and
scas
sbb
ret
push
sbb
and
adc
adc
mov
adc
mov
xchg
ljmp
xor
repnz
push
fstl
inc
xchg
sbb
addr16
add
je
inc
lahf
jns
movsb
pop
icebp
or
xchg
negl
js
or
neg
adcb
sbb
pop
das
pop
mov
xlat
push
icebp
jmp
and
sbb
and
jge
cmpsb
push
dec
adc
sbb
cmp
add
lret
daa
push
ljmp
dec
in
mov
mov
lret
xlat
shrb
frstor
pop
dec
xor
and
xchg
sti
repnz
sub
jmp
lods
cld
cmp
sbb
or
mov
add
dec
scas
imul
aas
push
adc
sbb
fs
orb
jg
lret
fimull
pop
cmp
int
cmpsl
stos
mov
push
inc
test
or
jge
inc
jp
adc
movsb
add
sbb
push
and
adc
das
rclb
out
bnd
mov
mov
sbb
iret
enter
popa
sbb
loope
jle
adc
xor
mov
imul
in
mov
xchg
cwtl
jne
jne
stos
and
out
cltd
mov
pop
lahf
cmpb
push
jbe
enter
dec
sbb
movsb
outsb
test
clc
jo
shrb
mov
xor
add
add
pop
movsl
pushf
nop
xor
dec
orb
test
clc
xchg
lahf
mov
pop
lcall
pop
jl
xorl
sbb
outsl
and
xchg
add
mov
pop
dec
shl
stos
cmpsl
push
outsb
into
mov
and
into
js
cmpsb
shlb
mov
adcl
leave
pop
cmp
sbb
sbb
inc
jo
daa
mov
jle
mov
sub
aad
mov
stc
dec
push
cmp
loope
jg
cmpsl
loopne
pop
mov
arpl
out
jbe
xor
xchg
divb
or
call
imul
push
jl
ss
or
adc
das
aam
outsb
and
add
and
dec
enter
push
stos
loop
mov
mov
or
jge
fstpt
or
je
pop
dec
mov
xchg
dec
popa
fisubs
dec
inc
sbb
xor
in
andnps
pop
pop
in
mov
cmp
pop
repz
mov
scas
addr16
xchg
or
ss
mov
out
rorl
dec
push
adc
cmpsb
pop
cmpsb
sub
pushf
divps
and
mov
outsl
fnsave
cmp
test
lea
fimuls
scas
sub
cmp
xor
insb
andnps
lahf
std
mov
mov
icebp
xchg
das
pop
sub
es
addr16
cli
cmpsl
push
add
cmp
push
xchg
adc
or
stos
mov
dec
adc
std
outsl
mov
inc
ljmp
xchg
adc
cmp
xor
sbb
mov
cmc
lock
fs
mov
xchg
pop
dec
sub
pop
mov
xor
add
rcr
stos
mov
aad
mov
scas
push
xchg
sub
lret
cmp
xor
dec
out
pusha
push
call
int3
cmpsl
xorl
and
int3
stos
clc
jns
das
mov
push
ds
jbe
jb
mov
sbb
sub
push
lret
pop
push
iret
lea
fdivs
mov
jp
jmp
je
jp
cmpsb
lds
sbb
ret
or
cli
xorb
cmp
mov
call
and
je
xor
pop
pop
mov
hlt
mov
mov
push
push
cmp
pusha
and
and
xchg
dec
femms
inc
call
jg
pop
sahf
mov
add
push
cld
push
xchg
sbb
mov
or
jb
lds
pop
in
fsub
iret
scas
sub
out
dec
nop
cs
fstl
aad
aam
inc
inc
lret
xorl
lock
imul
pop
jb
xchg
cmp
mov
mov
fldenv
jl
dec
add
test
cld
fld
pushf
popa
cltd
cltd
push
mov
or
xchg
dec
sub
cmp
mov
add
sahf
mov
call
add
scas
inc
out
cmp
fnstenv
ss
sbb
pop
fmuls
mov
pop
sbb
inc
sub
cltd
jle
pop
mov
pop
and
pop
std
sub
out
mov
cli
lock
out
jmp
hlt
inc
inc
enter
cli
cmpsl
adc
xor
push
add
dec
call
cmp
push
les
pop
lahf
fidivs
sbb
clc
cmp
mov
push
dec
cmpsb
jp
mov
xlat
fisubl
loopne
push
enter
pop
addl
jbe
cmp
outsl
mov
dec
jg
int3
cmp
mov
addr16
test
sbb
loopne
sbb
mov
cmpsl
jns
jb
sbb
xchg
pop
fstps
sbb
xchg
scas
nop
xlat
xorb
ljmp
lods
mov
ret
fstpl
enter
add
jecxz
add
mov
inc
and
out
or
orb
mov
and
nop
out
add
notl
xor
pop
and
cmp
or
sub
xchg
das
sub
repnz
mov
dec
fstp
test
mov
lcall
mov
iret
mov
jne
jmp
mov
jl
icebp
xlat
leave
mov
sbb
jo
xchg
mov
insb
ret
leave
inc
cmpsl
icebp
cmpsb
xchg
pop
leave
enter
sub
jno
lods
nop
lahf
aad
fstp
xchg
aas
cmp
insl
imulb
mov
cmc
das
dec
mov
je
cmc
aas
ret
test
cs
push
dec
js
add
hlt
mov
lret
sbb
adc
lock
cmp
mov
jo
pusha
pop
push
mov
mov
in
lods
sbb
sbbb
mov
push
jle
call
icebp
sti
in
pushf
add
sub
out
push
mov
sub
pop
shlb
fs
mov
les
mov
shll
mov
in
repnz
xchg
sbb
xchg
xchg
or
add
pushf
inc
mov
add
sbb
mov
out
sub
es
or
push
outsb
sbb
fsubrl
jb
stc
mov
outsb
mov
int
cmc
mov
ljmp
cmp
jge
jmp
push
jnp
call
popa
pop
xorb
popa
iret
xor
add
repnz
ret
sbb
xchg
mov
mov
jl
mov
mov
pop
mov
rclb
or
test
mov
sbb
insl
mov
bound
iret
inc
dec
or
inc
pop
cli
dec
fists
jno
xchg
in
int
or
or
jae
rolb
out
dec
arpl
mov
and
xor
hlt
push
mov
repnz
dec
popf
andb
shl
or
js
push
dec
out
mov
sub
outsl
in
pushf
cmp
push
jecxz
cmp
push
imul
in
std
push
fimuls
jo
int
test
add
inc
pusha
ja
adc
jo
repnz
and
ljmp
xchg
lcall
xchg
cmp
fwait
sbb
mov
and
dec
mov
in
fs
xor
popf
ds
out
addr16
mov
shll
fs
fdivrs
or
popf
sbb
aad
xchg
insl
push
jo
mov
int3
daa
mov
pop
pop
cs
mov
fstpl
les
xor
dec
jae
xor
in
mov
jno
adc
xchg
inc
mov
xchg
outsl
stos
pop
sub
and
addr16
and
movsl
mov
or
push
jae
cmp
jl
in
mov
scas
ss
int
sub
imull
stos
mov
ss
nop
fadds
aad
cmp
stc
pop
sbbb
cmp
xor
scas
xor
lds
rorl
jl
or
jns
push
imul
aaa
jg
inc
lock
rcrl
add
and
adc
pop
ret
ret
jmp
icebp
rorb
xor
xadd
xlat
jb
je
aam
or
bound
stos
mov
lret
fisubrs
push
pop
out
and
xorb
ret
push
pushf
imul
lahf
lret
lret
jl
mov
std
xchg
mov
push
into
lds
int3
in
leave
push
or
sub
popf
push
jb
cmpsb
fbld
je
add
nop
mov
jmp
mov
sbb
mov
pop
out
outsl
jo
stos
jle
out
mov
outsl
dec
pop
pop
xorl
js
jle
lret
adc
pusha
sub
movsl
mov
std
jnp
lret
mov
inc
push
adc
mov
std
mov
test
mov
push
cmp
xchg
fwait
pop
scas
xlat
icebp
decb
jb
cs
inc
mov
insb
test
repz
pop
xchg
lods
xor
push
push
les
cmc
push
pop
push
add
insl
lret
pop
mov
dec
push
shll
push
sbb
push
fildl
inc
xor
loopne
sub
xchg
fwait
jns
push
js
repnz
out
mov
jo,pt
pop
outsb
mov
or
add
mov
jmp
sti
pop
or
sbb
sub
cmp
dec
pop
jg
outsl
jnp
mov
mov
jmp
sti
pop
or
sbb
sub
cmp
dec
pop
jg
outsl
jnp
mov
mov
jmp
sti
pop
mov
sbb
sub
cmp
dec
pop
jg
pop
jnp
mov
mov
jg
outsl
sti
loopne
lock
sub
dec
sub
movsb
adcb
in
sbb
add
push
movb
movb
movb
movb
movb
movb
call
mov
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sbb
sub
es
or
add
hlt
mov
mov
mov
movsb
jmp
je
cmp
pop
xor
and
adc
add
testb
stc
je
xchg
jmp
and
inc
sub
imul
out
rol
fprem1
cmpsb
lret
mov
or
or
dec
std
mov
jg
outsl
xor
icebp
xchg
rcrl
cwtl
and
fistps
fcoml
sahf
cld
mov
mov
les
xchg
push
leave
out
cmc
jecxz
or
lcall
call
subl
movsb
stc
push
test
and
fs
or
in
dec
push
sbb
leave
pop
jb
jmp
test
push
fdivs
cltd
add
mov
fmul
sub
xchg
stc
jnp
jnp
test
cmpsb
push
dec
lds
cmc
add
pushf
out
sar
imul
shlb
cmp
dec
xor
and
or
xchg
cld
mov
lods
shll
jne
insb
fs
push
pop
inc
sub
dec
xor
imul
or
testl
and
inc
xor
jo
push
mov
mov
loope
xor
inc
xor
pop
dec
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
jmp
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
jmp
jecxz
jne
push
xor
test
in
mov
gs
mov
mov
dec
mov
mov
enter
sub
clc
xor
mov
or
je
cld
mov
mov
or
lods
and
pop
adc
or
ret
sahf
call
in
adc
inc
scas
pushf
dec
sarl
jno
inc
icebp
cli
pop
jmp
jno
xchg
cmpl
push
sbb
outsb
fldl
jmp
sub
addb
cmp
or
mov
pop
popf
mov
inc
sub
mov
dec
xor
and
test
sbb
xor
rolb
jbe,pt
bound
int3
xor
leave
pop
sarb
fwait
test
aas
push
xor
cmpsb
sbb
or
pop
mov
add
mov
push
clc
test
mov
add
sbb
pop
inc
inc
lods
ss
cwtl
jae
jg
push
insl
cmc
dec
or
stc
lea
xor
scas
mov
dec
cmp
xchg
add
dec
addr16
mov
in
jl
js
lods
aad
mov
mov
pop
push
cltd
pop
dec
sub
in
push
dec
loop
pop
dec
hlt
xchg
xchg
jns
fistpl
test
xor
add
jg
mov
cmp
push
push
sahf
sbb
or
sub
nop
mov
es
mov
mov
dec
gs
jp
sbb
scas
push
cmc
or
into
out
pop
ss
xchg
mov
icebp
mov
inc
cmpsb
jbe
or
pop
cs
xor
insl
das
lods
xchg
xchg
push
jne
dec
lret
popf
popa
mov
aas
movsb
arpl
imul
mov
out
add
push
daa
jns
push
xor
cmpsb
je
stos
inc
rolb
ljmp
xchg
test
mov
lods
adc
inc
add
mov
pop
int3
push
and
add
lock
aas
sub
mov
inc
icebp
jb
jo
repz
xlat
shll
in
pop
sarl
inc
dec
xchg
push
arpl
shl
cmp
clc
dec
sub
aad
jp
dec
pop
stos
jo
rcrl
int3
nopl
jecxz
test
mov
mov
popf
rclb
mov
mov
cld
pop
cli
pushf
js
jle
dec
fdivl
sub
mov
lret
jno
dec
jmp
sub
es
push
or
xchg
xchg
shll
pop
mov
inc
subl
pusha
and
cli
dec
dec
xor
hlt
popf
stos
popa
test
daa
data16
xor
pusha
loopne
sbb
mov
lahf
bound
dec
mov
xchg
mov
sbb
sub
or
arpl
push
mov
cwtl
mov
int
daa
xlat
daa
mov
lea
lock
in
cmpsb
scas
lods
mov
call
push
push
mov
mov
mov
test
mov
cmp
pop
popf
ss
shrb
insb
and
xor
cmc
dec
jno
xchg
jnp
add
jbe
pop
pop
leave
mov
iret
rol
popa
enter
outsb
mov
in
mov
mov
test
mov
cli
sub
sub
roll
xchg
push
ljmp
in
sbb
push
dec
xchg
dec
je
aaa
scas
repz
outsl
cld
dec
rcr
xchg
mov
data16
dec
add
aaa
cmp
fisubrs
pop
insb
iret
iret
sub
push
xchg
testb
fisubrs
pushf
stc
std
pushf
xchg
loop
aam
xor
pushf
lcall
xor
mov
jb
pop
lods
xchg
popa
cmc
fsub
rolb
jp
sub
aas
mov
sar
dec
aas
jo
push
xor
aam
nop
adc
push
dec
xchg
lods
jp
jmp
mov
push
aam
arpl
pop
add
test
imul
jae
popf
xlat
mov
push
jp
dec
jmp
fld
or
fisubl
jp
jnp
mov
lea
ja
mov
mov
cmp
hlt
mov
inc
scas
hlt
mov
jle
mov
loope
xor
pop
repz
push
xchg
scas
sub
imul
lds
cmpb
call
add
mov
pop
or
in
push
stos
mov
sub
cmp
jl
xor
mov
lcall
mov
cmc
js
sub
sub
jns
adc
jmp
inc
mov
test
sbb
pop
loope
add
mov
push
cmc
mov
add
mov
inc
adcl
das
dec
push
arpl
movsl
push
xor
pop
and
xor
pusha
pop
sbb
in
or
pop
add
int
stos
jle
mov
negb
fmull
xchg
lret
test
or
imul
adc
inc
pop
movsl
mov
andl
or
outsl
add
movsl
imul
xlat
dec
dec
lret
out
jge
lea
repz
push
mov
lret
mov
fdiv
loope
adc
and
and
and
iret
ljmp
adc
and
inc
mov
imul
hlt
mov
mov
fldt
daa
stos
lea
dec
push
sub
push
xor
push
das
icebp
into
pop
pop
jb
mov
test
inc
mov
decb
sub
lods
dec
xchg
push
daa
data16
jbe
adc
add
sbb
sub
xchg
repz
fstl
xchg
adc
add
xchg
in
xchg
dec
mov
sti
or
jle
xchg
iret
inc
loopne
aam
mov
xor
scas
push
xchg
or
push
sahf
insb
cmpsl
sub
lea
jge
mov
adc
in
sbb
sub
cs
cmp
lods
test
ss
or
nop
mov
mov
mov
lret
out
sub
mov
inc
ret
insb
or
mov
jge
mov
icebp
int3
pop
sub
jecxz
dec
adc
es
out
sbb
loopne
adc
push
imul
scas
js
mov
nop
dec
in
cmp
stos
sub
mov
out
and
lods
xchg
inc
std
dec
push
jecxz
pusha
mov
mov
out
xchg
insl
dec
fcoml
adc
xchg
mov
adc
sbb
xor
stos
jbe
push
cmpsb
xchg
mov
nop
divb
js
int3
sub
push
adc
mov
inc
pop
sub
push
push
addr16
adc
inc
mov
out
or
fwait
pushf
inc
imul
push
adc
fimull
mov
out
sbb
test
outsb
daa
mov
aas
leave
sti
dec
xor
lods
push
jno
xchg
idivl
mov
pushf
movsl
add
insl
mov
test
push
popf
loope
inc
or
js
mov
fisttpl
dec
xlat
push
mov
push
push
rcrb
mov
jp
mov
add
outsl
mov
cwtl
or
fdivl
sbb
pop
dec
fstps
movsb
bound
pusha
add
pushf
xor
imul
jl
cwtl
push
stos
and
cmp
cmp
add
ja
aaa
lods
insb
jg
testb
lods
mov
fldenv
scas
xor
pop
fists
and
mov
daa
xchg
nop
push
jmp
jge
aaa
jns
rol
add
int
ss
inc
fmuls
or
sbb
inc
inc
xlat
adc
push
add
dec
xor
popf
xchg
xchg
lahf
movsl
dec
fadds
fadd
into
in
out
or
bound
cld
imul
dec
cli
cmp
pop
mov
movsb
jns
outsl
clc
sbb
pop
sbb
aaa
push
aad
aas
xchg
outsb
jmp
loope
test
and
jmp
push
imul
ja
pop
icebp
xchg
mov
test
pop
imul
stos
jb
and
pop
mull
xlat
push
dec
aas
xchg
fldcw
adc
xor
mov
mov
adc
add
cld
mov
cmovle
push
jns
fistpll
cmp
test
mov
add
add
xorl
fs
mov
sbbl
aas
mov
push
test
into
pop
shlb
push
dec
lods
fs
cmp
xchg
pop
fimuls
out
sbb
inc
and
pop
sbb
mov
imul
mov
mov
xor
cmp
mov
adc
test
arpl
clc
add
rclb
mov
or
es
int3
stos
push
orb
fcmovnu
ja
insb
iret
inc
push
add
pushf
mov
cmpsb
andb
inc
movsb
xchg
pop
mov
or
xchg
mov
mov
jbe
dec
mov
push
xor
sbb
movsb
stc
add
adc
and
clc
bound
lret
sub
mov
adc
jge
mov
divl
inc
out
sub
test
mov
into
xchg
insl
cltd
xor
xlat
xor
xor
faddl
les
lds
out
std
pusha
loop
test
sbb
dec
sub
mov
fisubrl
push
jbe
jge
sbb
fstpt
mov
pop
push
pop
les
addr16
pop
in
lret
or
pop
sbb
add
inc
enter
mov
lahf
mov
test
mov
mov
lock
xor
shlb
push
dec
inc
pusha
in
lcall
inc
jno
ret
pop
xor
out
xchg
and
cmp
xor
lea
jns
adc
cmc
faddl
loope
aaa
xchg
jmp
test
stos
in
mov
xor
cmp
xor
into
stos
cs
shr
mov
sbb
pop
xor
sbb
xor
subl
stc
jbe
insl
das
pop
dec
fsubrl
sbb
lcall
rcl
addl
dec
imul
push
mov
cmp
sbb
out
lret
jnp
lret
adc
insb
rcll
sub
int
gs
pop
fistl
mov
xor
add
je
cli
sbb
mov
popa
jnp
js
or
jl
pop
lods
lods
push
nop
jmp
sub
sbb
imul
ficoml
push
mov
neg
sub
int3
jg
mov
xchg
cmpsl
dec
aaa
jne
faddl
add
xor
lock
jmp
mov
and
insl
sub
out
push
add
jecxz
lea
mov
xor
sarb
fcomp
inc
shll
ds
push
jno
arpl
jge
gs
popf
dec
jnp
test
or
mov
jmp
pop
mov
inc
sub
aad
or
test
adc
je
movsl
push
les
cmpsb
sbb
push
jmp
pop
dec
repnz
lds
add
xchg
mov
mov
jge
rclb
push
mov
mov
adc
test
insl
and
loop
out
dec
and
mov
mov
out
sub
xor
test
mov
test
dec
xchg
mov
rcr
xor
mov
cmp
sbb
and
mov
ret
adc
or
popa
loopne
dec
not
test
xor
sbb
aam
cmp
test
adc
dec
ret
insl
cmc
in
xchg
fisubl
mov
std
sub
push
push
sar
imul
mov
flds
adc
fstl
pusha
push
popa
mov
cld
enter
push
out
jle
andl
int3
and
pusha
shrl
fidivs
ficoml
push
bswap
andb
loopne
mov
stos
cmp
cmp
xchg
sub
mov
mov
xchg
inc
call
call
out
sbb
push
sbb
xchg
mov
clc
add
push
out
negl
mov
sub
cmp
mov
mov
leave
sub
fbld
pusha
lahf
fs
les
cmp
pop
daa
add
mov
sbbb
adc
push
repz
cmc
push
ljmp
adc
sbb
jl
shlb
xor
popa
xor
adcb
test
add
or
int
dec
jns
bound
mov
insl
push
jp
lods
xor
pop
sbb
testb
mov
pop
out
jno
mov
adc
mov
fisubs
adc
ret
push
cld
push
and
xchg
lock
lods
mov
mov
cwtl
inc
or
rclb
jo
sub
in
and
daa
sub
iret
fisubs
push
nop
sbb
ficompl
or
outsb
dec
roll
cld
sub
push
lods
pop
xchg
fwait
mov
lea
aas
out
cmp
or
push
mov
aad
inc
mov
or
enter
adc
in
lret
imul
popa
dec
inc
sbb
test
shll
sub
adc
push
divl
and
ret
dec
jb
repnz
ret
mov
insl
rol
mov
ja
cmp
sbb
enter
add
test
mov
push
aam
testb
shll
jae
jg
in
mov
mov
orl
mov
fisttpll
mov
pop
push
rcl
mov
cmp
lea
loopne
enter
add
test
pop
xchg
imul
loopne
adc
mov
cld
add
test
and
mov
int3
jg
lcall
lods
ret
mov
out
movsl
inc
and
mov
jl
add
subb
jge
push
arpl
or
jg
out
mov
js
out
cmp
fpatan
adc
imul
pop
xor
dec
aam
cltd
popa
inc
cltd
xor
mov
das
movsl
xchg
in
or
mov
xor
pop
lea
pop
cmc
adc
test
lahf
movsl
add
xchg
cmpsl
mov
mov
jp
cmp
in
gs
push
sbb
out
sub
dec
mov
jge
cmp
mov
test
loop
or
adc
jo
xor
push
outsl
push
es
fstp
stos
dec
jb
arpl
mov
test
xor
in
add
aam
cmpsl
mov
inc
dec
pop
fldenv
jbe
adcl
mov
xor
pop
inc
pop
xchg
dec
pop
out
lods
mov
mov
jb
test
movsl
stos
cmp
enter
std
iret
push
fstpl
andb
pop
mov
mov
and
daa
cmpsb
jl
jno
fcomps
ds
imul
or
xor
and
popf
imul
das
xor
rolb
mov
pop
add
mov
fcoms
out
cwtl
loop
cmp
outsl
shrb
orl
jecxz
adc
aad
lds
cwtl
rcrl
das
xor
pop
pop
add
mov
xlat
inc
pop
mov
xchg
movsl
mov
adc
push
cld
es
das
mov
push
jne
xchg
inc
in
pop
mov
fldl
mov
xor
xchg
dec
lret
inc
inc
ds
inc
rolb
jge
fimuls
loop
arpl
cltd
mov
cmp
pop
cwtl
mov
fiaddl
ret
mov
in
shr
addb
ss
xchg
sub
addr16
mov
out
ss
jmp
repnz
rorb
fmulp
cli
sbb
ret
or
cmpsl
mov
lock
cmpsl
dec
xchg
push
aam
xchg
mov
nop
lret
dec
das
mov
pop
lods
mov
ljmp
lds
adc
in
dec
dec
or
lret
cltd
mov
lods
loop
nop
cmp
jnp
pop
xlat
pushf
andl
nop
cmpsb
xchg
jnp
sub
out
subl
jae
push
add
fs
push
inc
mov
or
imul
xor
hlt
int
push
cs
aas
inc
adc
xchg
ja
inc
pusha
jg
jl
push
ljmp
xchg
je
cmp
pop
xchg
cli
pop
clc
pop
xchg
sub
in
jb
sub
or
call
pop
push
ret
sti
pop
push
dec
xchg
add
push
mov
jl,pt
movsb
and
repz
mov
insb
cs
jl
rcrb
sub
xchg
inc
and
mov
iret
aad
xchg
jmp
aam
add
sub
adc
sarl
fcmovb
pop
imul
lret
sbb
xchg
inc
hlt
pushf
pop
out
inc
or
rorb
pop
dec
cmpsl
dec
adc
ret
jecxz
sahf
push
jge
push
sahf
mov
lret
dec
fisubrl
divb
xor
lcall
mov
fldl
popf
sub
cmp
lret
inc
adc
test
fdivrs
daa
xchg
les
jb
fistpl
outsb
call
xchg
dec
push
jb
push
lahf
stos
call
jmp
cmp
add
fbstp
push
lret
and
jg
mov
fisubl
pop
sub
cmp
rol
jmp
sbb
insb
popf
jge
shr
xlat
mov
pop
xchg
push
dec
inc
xor
dec
enter
sbb
lahf
or
cld
mov
iret
inc
push
test
jns
gs
in
add
jp
and
jmp
sub
add
xor
idivl
cwtl
das
aaa
ret
inc
xchg
mov
shl
push
outsb
inc
lds
into
ljmp
pop
jl
mov
arpl
lods
push
into
ret
loope
test
fs
sarb
stc
sub
mov
push
cmp
inc
mov
insb
pop
jbe
jecxz
or
add
mov
dec
shl
pop
push
iret
pushf
shlb
and
daa
cmpl
mov
sub
push
ret
scas
testl
jmp
cs
xor
daa
xchg
or
add
jmp
push
or
insl
int
outsb
push
cltd
data16
xor
orl
dec
push
sub
jb
push
pop
sbb
das
stc
int3
adc
fldenv
or
loope
enter
or
jns
lret
or
adc
ret
jbe
sahf
sarl
or
or
xor
lahf
mov
mov
mov
push
int
fcmovnu
push
sub
cs
jno
fidivrs
shlb
sbb
mov
loope
sbb
jl
adc
and
mov
movl
lock
mov
bound
lcall
inc
pop
and
inc
decb
or
jns
mov
fsub
aaa
cmpsl
jne
in
and
gs
lods
pop
adc
mov
jbe
cmp
cltd
add
push
lret
mov
std
sub
pop
imulb
lret
daa
in
and
add
pop
and
repz
aad
int
ja
rcrb
dec
jno
mov
movsb
inc
cli
push
sahf
jle
test
xchg
xor
add
sub
sbb
pushl
push
xor
sub
out
inc
push
push
jns
jo
push
ficomps
icebp
jb
lds
pop
or
ljmp
test
mov
js
pop
shl
fisttpll
xchg
scas
cwtl
stc
inc
lock
xorb
ret
push
ljmp
sub
out
les
fstl
mov
daa
mov
ja
data16
pop
dec
inc
or
fidivrl
adc
add
jl
xor
adc
cli
psubq
addr16
inc
insl
pop
sti
pop
and
mov
ja
push
push
add
das
push
repnz
clc
mov
pop
and
shr
test
sar
bound
mov
add
fsub
jmp
mov
sbb
xchg
iret
rol
xorb
shlb
imul
hlt
mov
mov
xor
aad
xor
cmp
fdivl
stos
iret
rcr
ret
aam
je
ljmp
inc
jno
into
scas
dec
out
xor
sub
idivl
out
sbb
int
in
mov
mov
nopl
hlt
mov
lods
lahf
and
fiadds
cmp
lods
jno
shr
dec
fld
xchg
dec
in
or
test
cld
jae
jl
mov
jle
hlt
or
xchg
sahf
dec
adc
push
fmul
mov
jle
stos
call
push
divb
push
push
ja
ss
jge
dec
sub
sub
je
cmc
dec
in
xchg
pop
mov
push
inc
add
out
or
jae
into
nop
mov
cmc
push
je
addr16
mov
mov
cmp
cld
and
lods
gs
mov
pop
jbe
insb
sar
loope
xchg
lcall
dec
mov
pop
xchg
aam
aad
js
adc
gs
std
pop
jo
fsub
cmp
inc
push
dec
xor
fwait
mov
sbb
fisttps
mov
test
call
test
inc
sub
mov
shrl
cmpsl
push
dec
shrl
lock
push
add
loop
imul
icebp
sbb
dec
in
fs
jecxz
outsl
add
fidivl
xchg
pop
xchg
cmp
rorb
imul
incl
fwait
sbb
fs
mov
xchg
and
sub
dec
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
jmp
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
jmp
cmp
pop
xor
and
adc
add
hlt
mov
mov
mov
movsb
stc
xchg
jmp
sbb
cmp
pop
xor
and
adc
add
hlt
jbe
adc
test
pop
push
imul
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
call
push
push
pushl
mov
call
mov
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
movb
push
movb
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
push
call
call
call
mov
call
mov
xor
cmp
setne
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movb
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
push
jp
dec
sub
push
jle
push
or
sbb
ljmp
fldcw
in
lcall
sub
pop
sub
or
ljmp
fsubrl
in
lcall
ljmp
or
fidivrl
nop
fimuls
push
push
js
pop
mov
in
or
js
outsl
stc
scas
testb
pop
lods
mov
add
push
adc
cmp
movsl
movsl
or
mov
push
push
call
lcall
pop
xor
popa
dec
jg
lods
cmp
lods
ss
cmp
fsubrl
jae
inc
iret
push
sbb
stos
inc
mov
jne
fwait
pop
xchg
je
inc
dec
jns
pop
sub
dec
mov
fucomip
lods
xor
and
jmp
div
xchg
pushf
in
cmpsl
mov
cmc
and
pop
scas
fdivr
inc
ss
jmp
lods
mov
add
mov
shl
mov
stc
rcll
mov
push
int3
dec
mov
push
jp
dec
inc
pop
pop
sub
cmp
sbb
push
cli
fs
mov
mov
test
xor
jnp
outsl
or
xchg
in
movsb
int
mov
mov
lcall
test
jnp
out
xor
gs
sbb
shlb
ljmp
push
dec
ds
sbb
cmp
sbb
lods
fcmovu
stos
int3
mov
sbb
or
cmp
sub
pop
sub
or
ljmp
fsubrl
in
lcall
jae
adc
and
pop
or
cmp
into
pop
pusha
jp
cmp
mov
std
int3
xor
dec
and
inc
mov
push
mov
mov
test
lods
xchg
jp
push
and
and
call
sbb
fnstsw
mov
push
movsb
inc
cs
or
fistps
nop
lcall
xor
faddl
inc
sub
ja
addr16
ficoms
scas
imul
out
stos
test
xchg
adc
push
and
lret
push
cmpsb
pop
cli
dec
clc
fnstenv
shrl
icebp
fisubrl
fcompl
js
sar
mov
xchg
mov
sub
push
inc
mov
jge
mov
js
popa
popa
add
sub
dec
scas
idiv
mov
popa
fsub
insb
je
aaa
enter
add
mov
shll
and
test
shrb
cld
mov
popa
out
stos
xchg
sahf
scas
in
pop
bound
mov
insb
push
adc
dec
mov
xchg
add
jl
and
dec
adc
cmp
adc
loop
push
cli
pop
push
ljmp
push
fdivr
add
dec
out
mov
jns
repz
je
pop
xchg
jmp
sub
jg
cli
push
lret
arpl
lret
and
or
lcall
sarl
mov
repnz
xchg
mov
jne
add
mov
jmp
cmp
and
push
and
jb
stos
out
data16
jl
add
or
mov
jnp
in
pop
push
add
adc
mov
int3
xor
out
aaa
out
push
dec
jnp
andl
call
pop
adc
enter
test
fsubrs
shl
jg
loopne
jne
mov
sbb
push
int3
lcall
xchg
mov
cs
cmp
arpl
push
mov
xor
addr16
repnz
loop
nop
hlt
rorb
pop
icebp
sarb
push
pusha
jo
mov
add
pop
jl
jge
ja
lock
ljmp
lock
xchg
mov
jbe
push
xchg
sub
sub
and
cmp
sbb
sbb
je
es
notl
shlb
fsubrl
bound
mov
mov
dec
sub
xor
cli
negl
xchg
push
pop
test
lods
cmp
movsb
stos
and
mov
mov
out
jne
pop
xor
cmp
mov
inc
jo
add
js
xchg
fldenv
mov
mov
jae
add
push
mov
in
insb
fwait
add
or
in
sub
add
and
push
mov
add
or
in
neg
out
push
arpl
xchg
adc
add
sub
pop
outsl
push
xchg
rcr
and
das
stc
repnz
push
mov
mov
ja
cmpsb
sbb
jl
jmp
lock
ss
xor
mov
out
lret
aam
adc
mov
test
adc
inc
movsl
xor
mov
ret
xchg
jns
push
dec
aad
push
pop
adc
ljmp
push
or
sub
mov
test
out
out
cmp
insb
dec
mov
dec
mov
add
je
pop
test
andb
mov
cltd
adc
xchg
mov
movb
lods
cmp
jbe
mov
fsubs
and
adc
pop
xor
sahf
scas
mov
xchg
xchg
push
inc
test
mov
imul
ljmp
out
push
inc
js
mov
dec
stos
loopne
pushf
mov
add
mov
push
mov
xchg
data16
jecxz
out
daa
daa
loop
clc
das
mov
jae
aas
push
popf
xor
xor
shll
jo
mov
add
jo
sub
int
mov
decb
mov
out
fnstenv
lock
mov
movsb
lret
mov
dec
out
mov
pop
dec
add
dec
cli
jns
popa
jnp
in
lods
filds
pop
or
fisttps
pop
repnz
daa
aad
xor
pop
cli
flds
outsl
gs
outsb
sbb
pop
xchg
mov
mov
jno
pop
lods
xor
ljmp
icebp
mov
ret
inc
mov
cmp
out
xchg
data16
jne
jmp
jno
mov
in
dec
fidivl
pusha
xchg
in
movsb
push
xor
cmp
cmp
insl
cmc
or
pop
dec
jmp
push
pop
jo
mov
cwtl
arpl
pop
jns
mov
insl
insb
popa
mov
outsl
bound
sbb
xor
insl
data16
test
aas
popf
lahf
inc
shrb
fmul
mov
inc
mov
push
pop
pop
loopne
mov
call
and
hlt
sbb
int3
mov
jg
std
hlt
stos
and
pushf
jl
add
xor
adc
sub
cmp
dec
mov
sub
les
divl
sub
xchg
imul
in
pop
sub
pop
insb
pop
inc
in
dec
mov
pop
xchg
popf
loop
cld
fnstsw
dec
scas
jmp
loopne
fcomps
or
xor
mov
ljmp
in
xchg
test
or
mov
mov
das
jo
mov
xchg
cmp
or
out
inc
gs
jae
fstl
jae
pop
push
out
push
loope
jae
mov
ljmp
inc
out
and
or
and
sbb
pop
jnp
lods
sub
lret
mov
xchg
pop
out
leave
adc
scas
jp
sub
mov
in
in
outsb
std
clc
mov
push
sbb
lods
sbb
jl
imul
mov
in
addr16
fucom
cmp
cmp
mov
mov
mov
adc
add
ret
push
mov
bound
mov
or
sbb
xchg
jne
into
in
mov
rclb
lock
stos
cmp
lods
dec
lret
push
fldenv
mov
fistpll
fxam
stos
xor
orl
push
mov
ficoms
insl
jmp
fsubs
pop
test
into
mov
sbb
push
inc
xchg
mov
sbb
ss
aaa
test
push
pop
adc
es
inc
inc
sbb
inc
pushf
sbb
daa
cmpsl
out
sub
mov
or
add
push
pop
cmpsl
int3
jle
daa
adc
push
addl
push
xchg
jne
adcb
mov
std
fisubrl
mov
or
push
sahf
jmp
test
cwtl
or
xor
js
inc
xchg
outsl
stos
sarl
push
lahf
xchg
jecxz
lahf
and
sarb
push
pop
sub
cmpsl
xor
stos
leave
std
dec
arpl
mov
adc
jl
push
aas
test
scas
mov
das
ret
scas
jae
mov
cmp
lods
ljmp
insl
push
rolb
mov
loopne
push
push
inc
loope
movsl
xchg
fcoms
mov
add
lcall
mov
add
enter
jmp
arpl
test
pop
jb
stos
lcall
push
shlb
ss
pushf
outsb
repnz
xor
lret
xor
aaa
sbb
lods
fwait
les
pop
ret
addr16
rcll
or
je
loop
dec
icebp
call
mov
fadd
stc
js
sbb
jmp
cmp
lea
ljmp
inc
inc
cmpsb
add
jecxz
insb
dec
fnstenv
push
fistpll
push
int
aam
sub
or
sti
xchg
loopne
mov
dec
dec
popf
push
movsb
cmp
shll
pusha
jne
into
push
scas
jbe
or
ja
cs
in
mov
inc
push
add
leave
cmp
jge
push
fwait
jne
scas
imul
aam
shrl
inc
and
and
sbb
fwait
lods
mov
stc
outsb
stos
xchg
loop
push
jle
sbb
outsb
jnp
jb
pusha
inc
pop
addr16
in
lds
cs
loope
je
aas
nop
xorb
inc
sub
add
leave
jge
loope
aam
jnp
inc
aaa
fwait
enter
mov
mov
inc
pop
andl
jae
ja
aam
push
test
jg
idivb
inc
xchg
outsb
jne
mov
or
fnstsw
lea
lcall
es
jno
lea
xchg
cmpsl
fldenv
xor
std
mov
lahf
lret
fstps
xchg
test
xorl
mov
sbb
xor
cs
push
pop
or
cltd
xlat
mov
add
xor
fwait
mov
dec
mov
adc
mov
dec
jp
sbb
loop
xchg
pop
and
jnp
test
sahf
or
aaa
pop
jae
sbb
adc
int3
or
mov
subl
mov
and
jae
sub
lea
mov
jle
sar
testl
sbb
daa
xchg
push
in
cmc
addr16
js
or
inc
lock
cmpsl
fnsave
shlb
lcall
xor
pop
call
push
xchg
cmpsb
or
scas
add
inc
sub
ja
jnp
adc
add
sbb
adcl
mov
test
int3
or
inc
mov
cmp
jp
inc
addr16
pop
mov
add
lea
jb
loop
mov
mov
sbb
aas
adc
popa
aam
xor
xor
xchg
mov
push
lea
out
xchg
shlb
pop
sbb
mov
mov
jle
mov
test
dec
negl
and
loop
adc
or
test
inc
in
loope
jmp
out
sarb
jnp
rorb
jno
outsl
jns
lcall
cli
jnp
push
insb
sub
or
into
imul
ljmp
test
int3
mov
and
xchg
cmp
call
ds
mov
fidivrl
xchg
and
shrb
jmp
int
das
inc
mov
fwait
mov
add
lods
int
adc
inc
jg
sti
adc
add
aam
repz
add
xchg
push
lret
inc
sub
fbstp
shll
outsl
sarb
sbb
mov
sub
stc
or
dec
or
mov
lods
nop
add
stos
loope
push
outsb
je
stos
add
cmp
into
stos
jo
mov
sbb
repnz
mov
lret
imul
xor
fcom
cmpsl
repnz
insb
inc
lret
movl
iret
loopne
mov
mov
mov
or
adc
outsl
ret
iret
push
or
cwtl
xchg
test
outsl
xor
mov
cmpsb
xchg
jae
and
int
xor
outsl
xor
lods
fdivrs
mov
cld
dec
int
loop
adcl
outsl
out
xchg
call
daa
xchg
test
popa
sub
xor
mov
and
arpl
into
repnz
rsm
lods
sub
xchg
push
jb
sub
cwtl
jp
mov
shl
mov
xor
rcr
aaa
push
cmp
add
cwtl
cmp
int3
mov
lcall
aas
adc
mov
fisubrs
daa
sub
and
cld
mov
mov
mov
testb
adc
sarl
out
inc
cmpsb
mov
adc
mov
sub
jge
pop
xlat
scas
pushf
pop
jbe
xor
ficoms
cmp
cmp
push
fisubrs
js
add
lea
add
jnp
add
andl
pop
mov
jp
inc
push
arpl
ja
and
and
icebp
mov
adc
push
stos
outsb
lds
ss
push
cli
jle
add
pop
push
rolb
jb
add
mov
fucomi
mov
int
cmpsl
mov
xchg
inc
inc
pop
or
je
loope
lock
ds
ror
fyl2x
sahf
sbb
loope
insl
sbb
call
imul
push
sub
jnp
pop
out
jmp
fwait
xchg
loope
lods
popf
test
mov
stc
mov
stos
dec
fs
int3
or
cmpl
add
and
icebp
and
xchg
sub
inc
dec
js
cmp
fwait
inc
fiaddl
xor
in
in
out
push
mov
push
cmp
rorl
mov
mov
je
stos
int
clc
mov
das
bts
mov
sbb
pop
dec
leave
cmp
daa
pop
dec
pusha
sbb
fmuls
jmp
and
add
in
bound
enter
sub
scas
cmp
inc
adcl
iret
mov
loop
sbb
pop
insl
subl
gs
sbb
mov
cld
int3
mov
in
mov
mov
push
or
and
cwtl
dec
sbb
push
mov
std
in
roll
idivb
aas
leave
pop
xchg
dec
or
mov
iret
aam
mov
data16
lcall
test
xchg
pop
out
push
dec
rcrl
sub
jge
in
inc
icebp
mov
mov
mov
call
mov
test
loope
jb
cmc
ret
mov
movsl
movsb
jb
out
push
stc
stos
mov
lds
mov
add
into
ja
xchg
jne
mov
lock
ss
xor
test
ret
xor
out
xchg
and
mov
repz
adc
cld
dec
adc
fistl
jnp
outsb
ss
jo
in
rolb
fidivrs
test
mov
xor
pop
filds
icebp
sbb
or
mov
mov
jno
mov
mov
sbb
stc
push
cs
insl
test
sbb
lock
aaa
fcompl
cmp
jle
fisttps
fs
fists
mov
and
call
clc
mov
insb
lcall
sbb
adc
pop
cltd
lcall
mov
xchg
cwtl
sti
popa
pop
adc
cli
out
mov
repz
repnz
das
push
xor
jb
sbb
pop
pop
jecxz
insb
pop
mov
sub
jle
or
das
mull
jl
idivb
or
in
or
xor
cmp
inc
std
xchg
test
imul
push
ret
div
inc
mov
push
inc
shlb
dec
push
les
jo
push
cmp
aad
pop
test
sbb
nop
mov
dec
pop
daa
mov
rcl
jg
dec
adc
pop
mov
mov
daa
fcoms
outsb
pop
add
mov
jae
pop
mov
sub
pop
shll
inc
inc
lea
ret
test
out
into
arpl
adcl
iret
imul
mov
out
insb
shlb
into
cmp
stos
and
out
push
cmp
shlb
xchg
mov
iret
mov
sbb
jno
sbb
xor
sbb
cmc
shlb
sub
cmp
pop
jbe
xchg
add
pop
stos
dec
fsubl
xchg
das
xor
dec
sbb
mov
imull
or
movsb
xor
push
insb
aam
jge
xchg
xchg
test
loope
outsl
loopne
setnp
iret
aas
insl
xchg
in
inc
imul
movsb
das
cld
fisubl
adc
aad
adc
xchg
or
mov
xor
xor
imul
or
pushf
pop
xchg
pop
xrelease
cld
dec
sbb
jbe
stos
xor
jbe
dec
icebp
cmpsl
popf
enter
xchg
pop
add
inc
push
mov
xchg
cwtl
into
cmp
jns
sbb
dec
out
fsts
mov
cmpsl
sbb
sbb
pop
cmp
loop
cltd
inc
sub
adc
pushf
loopne
enter
mov
pop
jmp
cwtl
push
sbb
dec
shlb
sub
int
cld
sbb
mov
clc
jmp
les
out
inc
sbb
decb
dec
stos
cmpsl
ret
and
bnd
sarb
movsl
push
iret
lock
notb
jmp
fsubl
and
rorb
aas
out
rcl
bound
aaa
mov
int
sbb
xchg
fildll
loop
cmpsb
push
adc
ficomps
xchg
sti
mov
adc
jmp
cld
shrl
xchg
icebp
bound
push
popl
outsl
test
pop
call
scas
clc
pop
imull
sarb
fistl
in
idiv
dec
jb
or
dec
add
decl
push
mov
adc
icebp
insb
and
jb
inc
push
push
aaa
push
fs
fdivrl
and
pop
lods
lret
mov
sub
ret
mov
sbb
adc
jp
in
xchg
fisubrl
into
loop
fstpt
mov
mov
xor
cmpsb
adc
mov
orb
in
mov
out
inc
push
pop
push
popf
inc
pop
and
outsl
or
mov
into
sub
xchg
loope
out
inc
xorps
mov
mov
fs
dec
add
int
jbe,pn
lock
mov
dec
and
inc
or
push
insb
xchg
lcall
adc
inc
xor
popl
daa
or
cmc
sub
out
repz
jb
pusha
and
push
push
and
in
mov
inc
adc
repz
outsb
dec
loop
and
aad
loop
adc
leave
sbb
cwtl
stos
testl
loope
pop
mov
js
fsubl
dec
add
xchg
fwait
call
out
test
xor
mov
mov
mov
xor
loop
pop
rcll
xchg
pop
ficompl
and
insb
add
sbb
sbb
or
or
cmpsl
push
sbb
xlat
xchg
into
lds
sbb
xor
neg
cmp
fwait
sbb
and
idivl
das
sbbb
mov
cli
int
xlat
or
xor
push
aam
in
lcall
addr16
daa
cmp
loop
mov
adc
inc
mov
into
fwait
adc
dec
and
pop
xchg
jae
aam
sti
xchg
mov
jo
adc
dec
mov
push
aad
cmpsb
xor
fwait
cwtl
js
jbe
cwtl
xchg
cmc
mov
push
stc
mov
in
dec
mov
js
movb
daa
and
std
push
push
sub
cmpsl
sub
pop
cmpsb
ret
mov
loopne
and
outsb
sub
sbb
lods
or
enter
aad
adc
popa
push
outsl
or
fwait
movsb
minps
mov
push
fs
insl
lods
rolb
dec
add
xchg
inc
mov
push
in
pop
jmp
sub
mov
lcall
jae
nop
ds
mov
push
lods
jg
sub
imul
faddl
pushf
cmp
push
call
sbb
rol
mov
test
push
jnp
divl
or
dec
push
xor
sbb
sti
arpl
mov
mov
xchg
xchg
inc
iret
sbb
cltd
mov
test
mov
push
xchg
dec
mov
inc
inc
int3
push
add
push
int3
xlat
xlat
mov
es
inc
popa
aam
and
inc
addr16
int
add
mov
clc
jno
test
int3
arpl
mov
lods
mov
jo
les
mov
mov
cmpsl
shlb
or
xchg
lock
dec
push
adc
and
push
std
popa
cs
test
inc
sar
je
jecxz
push
dec
or
into
insb
xor
push
dec
mov
fdivrp
mov
aaa
dec
sbb
or
jae
fnstenv
cltd
xchg
push
mov
cmp
adc
out
mov
push
pop
pop
call
xlat
in
ret
inc
jbe
nop
cmp
das
aam
xor
popf
mov
adc
enter
jae
cmp
popa
or
jl
inc
sub
mov
test
pop
adc
outsb
rorl
xor
mov
rol
mov
mov
mov
jmp
adc
or
mov
xor
xor
sbb
push
js
shl
adc
lock
cmp
cmp
popf
nop
ds
lock
and
mov
ret
adc
jae
loop
adc
outsl
mov
sub
xchg
into
dec
push
cli
stc
fxch
lods
sub
loop
sbb
push
and
insb
xlat
jo
pop
pop
jmp
imul
leave
sub
arpl
push
aas
mov
sbb
loopne
pop
insl
fidivrs
xchg
mov
xor
nop
int3
inc
ja
cs
xor
push
add
mov
or
mov
testl
sahf
dec
xchg
sbbb
les
pop
jo
jmp
xorl
bound
mov
cwtl
cmp
repz
iret
outsb
hlt
push
loop
jns
outsl
imul
adc
stos
jmp
and
dec
xor
sub
or
ljmp
fsubrl
in
lcall
sub
pop
sub
or
ljmp
fsubrl
in
lcall
sub
pop
sub
jl
insl
sbb
lret
fsubrl
fcompl
mov
add
pop
sub
mov
in
adc
lods
lods
stos
and
jne
gs
xchg
mov
or
std
mov
daa
js
pop
inc
sub
ja
xchg
xchg
clc
cmpsl
enter
test
mov
pop
push
aaa
pop
xchg
push
cmp
ja
xchg
cmpsl
push
mov
cwtl
xlat
lock
imull
dec
sub
sub
cmp
jp
jl
lods
repz
push
cmpsl
pop
inc
in
or
pop
data16
xchg
lock
divl
iret
jmp
cmp
mov
xlat
xor
ja
addr16
xchg
xchg
test
mov
or
cmp
xlat
sbbb
dec
inc
mov
ret
pop
imul
pop
fldt
les
fdivl
xchg
xchg
clc
int
mov
loopne
ret
dec
notl
fnstenv
pop
mov
testl
inc
xor
xlat
mov
out
dec
inc
das
mov
inc
test
aaa
pop
jbe
jp
push
or
clc
negl
fcomps
fidivrl
in
jb
fs
fsubs
test
mov
pop
push
aaa
fs
adc
adc
call
fidivs
std
cmc
filds
sub
daa
in
dec
cmp
push
push
add
xor
scas
repnz
cli
xchg
ljmp
inc
or
inc
cmp
or
imul
xchg
sbb
movsb
mov
cwtl
pop
push
aaa
pop
inc
sub
or
xchg
xchg
clc
cmpsl
enter
test
mov
pop
push
aaa
pop
inc
sub
or
xchg
mov
cmp
aad
or
add
or
mov
mov
ss
pop
out
inc
cli
ret
insb
mov
pushf
jb
stc
movsl
scas
out
fsts
xor
xor
cmp
cmp
mov
jns
test
outsb
push
call
dec
xor
inc
or
xor
iret
mov
pop
in
lcall
mov
and
sbb
cs
inc
sbb
adc
stc
xor
jnp
popl
pop
mov
pop
pop
lahf
xchg
mov
cld
lds
jae
mov
add
add
sbb
clc
cmp
xor
negl
xor
ret
adc
fnstsw
jne
aaa
loop
inc
add
in
mov
mov
sbb
sub
ljmp
inc
xchg
dec
int
xchg
lea
loop
dec
push
xor
push
cwtl
test
fwait
lock
or
inc
std
in
xchg
add
xchg
sbb
rcl
adc
lea
pop
jl
sub
repnz
shrl
jg
xchg
or
lahf
xchg
shll
jp
int3
mull
adc
inc
arpl
aad
pop
in
cld
xor
cmp
into
ds
and
add
iret
shlb
mov
sub
mov
movsl
mov
xchg
xchg
gs
test
fsubrl
sub
movsb
mov
cmp
enter
rclb
cmp
in
or
imul
xchg
dec
mov
cmp
bound
mov
sbb
xor
mov
jp
stos
jo
sarb
ds
out
xchg
inc
repz
in
orb
xchg
xor
or
dec
sbb
sbb
stos
cli
cld
add
mov
roll
mov
push
pop
ud1
mov
sbb
sub
lea
xor
adc
push
sub
dec
loope
jo
outsl
popa
mov
addr16
sbb
jo
sub
aaa
xchg
jge
inc
aad
in
scas
pop
ret
repz
mov
xor
jns
les
sahf
nop
addb
dec
lahf
ficoml
lods
frstor
cmp
push
fs
and
jge
push
jns
aad
adc
cltd
inc
outsl
sarl
fcomip
addb
mov
jne
xchg
xor
mov
fiaddl
daa
movsl
pop
sbb
jo
fistpll
ljmp
mov
inc
or
push
dec
into
cmp
shrb
test
call
sbb
xor
outsl
pop
mov
popf
cmc
sbb
mov
inc
imul
jle
fisttpl
push
mov
push
sub
adc
xchg
jns
adc
cld
push
push
test
xchg
push
jl
add
inc
xchg
testb
scas
mov
sbb
pop
je
xchg
test
stc
jnp
adc
fisubl
xlat
mov
pop
mov
cmp
pop
jp
test
test
aad
inc
movsl
sarl
sbb
sub
test
int
in
orl
addr16
xchg
dec
sbb
xchg
pop
and
jnp
or
repnz
mov
ficoml
ficomps
jge
jo
mov
sbb
lock
push
xor
arpl
mov
mov
movsb
cmpsl
fcomps
aas
inc
bound
icebp
aad
mov
addb
jno
mov
sarb
sbb
int3
inc
bnd
mov
movb
dec
addr16
shl
sub
mov
daa
sub
insl
stos
xchg
jae
mov
and
add
mov
out
pushf
xor
ror
out
push
je
cli
dec
mov
dec
sub
xchg
into
xor
stc
mov
inc
fdivl
popa
bound
dec
mov
push
daa
adc
adcb
call
cmc
pushf
cmc
fcom
sbb
leave
push
addr16
xor
jmp
popf
sbb
dec
xchg
mov
mov
or
dec
mov
push
inc
aam
scas
inc
fdivrs
mov
mov
xchg
out
testl
pop
sub
sub
pop
mov
rcll
lret
cli
xlat
test
adc
pusha
or
and
sub
lahf
scas
ss
orb
ret
mov
loope
jg
nop
pop
shrl
mov
sub
test
or
push
jmp
fwait
jae
add
push
push
sbb
cmp
mov
xchg
fnstcw
enter
xchg
test
mov
add
icebp
pop
fisttpl
push
adc
dec
push
lcall
xor
mov
in
pusha
xor
frstor
mov
call
adcw
dec
mov
sbb
and
fs
mov
aaa
shll
and
out
test
mov
repnz
add
sbb
jnp
shlb
call
xor
sub
aam
dec
jmp
cltd
test
push
adc
pop
mov
fisubrl
aad
dec
out
sub
mov
and
fmull
jg
insb
jns
mov
adc
jp
pop
inc
ret
jg
push
shlb
cmpsb
popf
mov
push
call
je
mov
mov
call
inc
mov
xchg
out
addr16
or
xor
data16
inc
ficoms
mov
mov
sbb
adcb
push
loopne
adc
jne
xchg
fcmovu
mov
js
icebp
xchg
out
loope
cli
fsubs
inc
les
jnp
call
sbb
popf
xchg
ret
movsb
pop
rol
int
push
mov
mov
sub
lret
repnz
jne
mov
adc
mov
cmp
pop
testl
mov
in
ss
mov
sbb
adc
mov
cld
pop
adc
pop
adc
push
negl
sbbb
pop
rcl
push
adc
pop
push
cmpsb
lods
into
sahf
and
adc
aad
pop
xchg
sbb
bound
aad
rcl
or
adc
shl
test
push
sbb
sub
xchg
aas
pop
jmp
jb
push
xchg
cwtl
mov
fxch
lahf
in
enter
cmp
push
dec
jb
pop
sbb
xor
adc
inc
mov
mov
mov
pop
repnz
pop
sarl
dec
add
loope
mov
jo
lock
push
inc
ss
and
cmp
aaa
pop
cmc
jmp
ss
push
xor
xchg
xchg
pop
or
gs
xor
mov
or
mov
and
mov
fbld
mov
inc
push
xorb
std
jg
sbb
pushf
mov
call
int3
pusha
scas
sbb
das
aad
fadd
outsl
iret
sub
inc
movsb
and
xchg
dec
jge
int3
repnz
adc
in
ds
mov
enter
ret
push
jmp
pop
fcompl
jbe
xchg
push
xchg
out
inc
popa
hlt
enter
clc
push
pop
sbb
nop
sbb
or
mov
add
xor
addr16
mov
sub
insb
push
xchg
in
push
lock
push
push
dec
incl
jp
icebp
rcr
loop
cltd
ret
dec
mov
mov
addr16
mov
jp
push
cmp
test
lea
mov
je
aad
xchg
repz
test
mov
cmc
xchg
lea
and
cli
loop
in
outsb
or
shlb
and
mov
push
and
jl
cli
pop
or
sub
cmpsb
dec
push
inc
nop
sbb
cmpsl
add
std
inc
or
jp
bound
pop
mov
fs
sbb
add
pop
test
mov
sub
scas
mov
sbb
push
inc
mov
bound
shlb
lcall
aaa
dec
mov
lahf
cld
rorl
inc
and
ja
pop
ds
xchg
lahf
repnz
mov
movsb
popf
repz
call
repz
xchg
pop
in
sub
sub
mov
andb
cmp
dec
mov
aas
into
push
bound
mov
mov
cmp
pop
adc
sub
jnp
push
jbe
and
jae
negb
mov
sbb
inc
cmpsl
rcl
xchg
xchg
pop
insb
jbe
popa
push
jp
rcrb
cmp
mov
dec
popf
daa
into
ja
pop
clc
push
sub
inc
pushf
stc
dec
mov
sub
pusha
mov
xchg
push
scas
lcall
and
pop
in
ljmp
add
pop
insb
sbb
lcall
loope
sti
cmp
xor
mov
call
leave
hlt
jmp
pop
stos
mov
iret
not
and
adc
jge
sbb
xchg
add
pop
pusha
std
in
roll
cmp
rorl
lods
out
cmpsb
into
loopne
test
lods
into
push
lret
adc
inc
leave
jmp
cmp
cmp
jnp
mov
cmp
cmpsb
push
repz
jg
jmp
add
gs
mov
mov
neg
push
in
pop
jg
idiv
in
loopne
clc
cltd
cmc
iret
mov
cli
div
pop
mul
sbb
inc
sbb
ret
sub
shl
loopne
inc
test
mov
fsubrl
mov
jbe
sbb
fwait
in
jp
mov
pop
pop
out
popf
repnz
stc
enter
pop
sahf
xchg
mov
shlb
mov
jne
ficoml
movsl
inc
lcall
lret
in
hlt
xchg
xor
iret
mov
adc
cmc
push
push
lret
inc
xor
iret
cs
jnp
mov
add
lock
test
push
cmp
je
pop
mov
gs
lods
pop
lcall
lahf
out
loope
adc
jle
dec
aad
push
ja
shlb
in
movsb
xchg
mov
lret
shlb
test
in
lret
cmpsb
mov
pop
bound
mov
pop
sti
mov
adc
imul
dec
cmp
and
mov
cmp
add
jg
jg
in
js
adc
mov
mov
sbb
fsub
and
arpl
adc
movsb
jbe
xchg
sbb
pusha
mov
dec
inc
das
cmp
push
jnp
mov
mov
sub
rcrb
fdivrs
mov
jne
ret
imul
adc
mov
pop
stc
xchg
dec
rorl
xchg
mov
jmp
stc
cltd
ficoms
dec
dec
ficoms
testl
imul
je
mov
xlat
dec
cmp
pop
je
dec
fwait
icebp
add
mov
sbb
and
cmp
sbbl
cmp
repnz
mov
pop
xor
imul
movsl
lods
xlat
fs
scas
test
arpl
stos
test
inc
mov
pop
push
popf
roll
rcll
mov
pop
fs
adc
sahf
inc
std
testl
in
popf
bound
hlt
mov
cmp
inc
std
in
cmp
add
jp
sub
out
inc
push
in
pop
adc
mov
push
mov
movl
test
mov
inc
pop
ficomps
leave
pushf
enter
pop
movsb
outsb
sbb
and
js
out
xchg
ljmp
xchg
cmpsl
mov
data16
js
adc
cmpsl
call
xchg
lock
xor
push
enter
dec
inc
mov
inc
stos
sbb
pop
es
sub
xchg
jg
jp
std
aam
jle
mov
data16
movsb
sahf
rcrl
sbbl
cmp
dec
rorl
or
enter
adc
test
fdivrs
int
cltd
mov
testl
push
out
aaa
adc
in
cmp
adc
and
push
pop
xchg
repnz
fisttpll
and
loop
jecxz
out
sbb
imul
and
adc
fsubrp
adc
scas
in
mov
sbb
int3
sbb
adc
cli
in
sbb
lcall
sub
int
add
and
xchg
idivb
ficoml
ror
das
sbb
stos
inc
mov
cmpsl
icebp
lock
lahf
xchg
ret
jecxz
mov
ss
adc
lds
cmp
push
or
out
ljmp
dec
jp
push
or
sbb
orl
lcall
jl
add
push
pop
aad
inc
push
into
jl
push
jle
sbb
mov
outsl
mov
dec
inc
rcll
inc
dec
add
pop
jb
aad
int
or
mov
loope
and
xor
jb
push
jecxz
or
mov
and
cmp
inc
lcall
in
or
mov
addr16
sbb
cmp
dec
mov
jne
bound
je
or
into
nop
es
imul
clc
movsb
icebp
test
les
and
mov
das
repz
nop
sub
lock
cmpsb
hlt
inc
insb
int
lret
rorb
push
mov
sti
xlat
lods
pop
cmp
sub
mov
xorl
daa
shufps
dec
daa
inc
leave
and
sub
dec
sub
je
adc
mov
inc
mov
int
lahf
insb
sbb
jp
inc
push
out
lods
xor
fildl
adc
or
jg
outsl
and
leave
cmpsl
mov
add
dec
stos
xchg
gs
jl
push
ret
push
mov
pop
into
outsb
out
fcmovne
mov
sub
mov
pushf
lock
mov
jno
jb
push
sbb
ljmp
mov
insb
loopne
or
in
imul
sbb
enter
sahf
enter
sbb
into
xchg
mov
test
push
clc
hlt
cmp
mov
sbb
addr16
cld
or
fstl
add
out
cltd
lret
icebp
jecxz
testb
mov
jp
out
pusha
jno
push
xchg
imul
xlat
movsl
pop
xchg
insl
jae
pusha
aas
inc
and
fidivrs
movsl
scas
int3
push
or
lcall
inc
sub
idivb
test
jle
mov
xchg
push
xor
cmpsl
xor
daa
dec
sbb
out
cmp
cmp
aaa
push
xchg
addb
ss
mov
push
mov
hlt
cli
out
mov
mov
xchg
cmpsb
cmc
cmp
mov
adc
in
mov
hlt
imull
in
or
mov
jno
stos
out
out
jmp
xor
push
repz
cwtl
andb
jns
or
loope
shrl
pop
mov
clc
nop
das
call
leave
mov
add
or
push
pop
lea
xchg
or
shl
je
dec
push
inc
pop
movsl
cwtl
fnstsw
pop
pop
push
sbb
std
or
dec
lods
pop
dec
xchg
pushl
das
inc
scas
int3
push
sbb
xchg
mov
cs
and
fdivs
xchg
mov
clc
add
xor
xchg
pop
nop
sbb
and
push
das
pop
data16
sub
dec
mov
pop
daa
cmp
movsb
or
mov
push
dec
cmp
jmp
xor
adc
sub
pop
cmp
and
mov
pop
pushf
push
and
xchg
lock
ja
pusha
pusha
lods
popf
imull
in
leave
push
xchg
call
sub
xor
and
sahf
xchg
dec
js
in
jge
cld
into
loop
dec
mov
push
jp
ljmp
ss
mov
xchg
pusha
xchg
sub
push
iret
xchg
fildl
sti
push
jnp
jne
sbb
push
cmpsb
and
push
pop
push
mov
push
out
ret
cmpsl
and
std
sbb
fistps
test
dec
mov
outsb
pop
loopne
xchg
sbb
neg
sub
xor
repz
jg
aas
xchg
hlt
mov
addl
jb
icebp
xchg
out
cmp
in
adc
daa
or
test
inc
sbbl
ss
and
notl
cmp
out
jne
pop
inc
adc
cmp
sahf
push
sahf
cmp
xchg
hlt
push
stos
mov
dec
jnp
lods
bound
ret
pop
mov
ret
pop
ljmp
sub
into
sub
push
gs
das
hlt
fdiv
or
fbstp
daa
jecxz
dec
inc
push
mov
addb
jbe
fsts
stos
adc
dec
std
in
push
out
mov
push
imul
cld
aas
xchg
xor
int
xchg
add
insb
jne
aam
lahf
call
cwtl
movsl
jl
mov
sbb
xchg
mov
rclb
stos
nop
ljmp
arpl
scas
pusha
pop
pop
ret
and
xchg
pop
pop
lret
shrl
inc
call
je
pop
fs
ret
and
out
push
cmpsl
cmp
jg
add
mov
dec
cmp
inc
dec
das
mov
testl
repz
jp
cmpsb
les
dec
inc
push
pop
into
pusha
inc
inc
xor
push
test
and
mov
dec
mov
xchg
add
in
xchg
subl
movsl
loope
mov
jbe
rolb
in
mov
icebp
cmp
xor
test
ljmp
adc
and
add
and
push
js
rcrl
subl
imul
jae
repz
mov
imul
mov
mov
push
and
mov
ficomps
shr
sub
push
jge
clc
jle
cmp
lds
adc
or
jae
pop
and
xchg
lock
mov
cmp
push
data16
mov
push
and
ljmp
mov
push
xchg
inc
mov
aam
adc
es
sbb
fsubrl
jp
sub
adc
sbb
stc
cmpsb
inc
mov
ja
repnz
jne
mov
dec
push
imul
mov
xor
cmc
es
imul
test
jge
sbb
into
cmp
jg
pop
mov
xchg
out
inc
jo
shrl
subl
cmpsb
test
dec
popf
rclb
ss
cmp
dec
ss
lret
hlt
adc
ret
xchg
adc
jmp
inc
cmc
dec
subl
dec
clc
jge
aad
sti
testl
inc
into
push
orb
xchg
adc
and
stos
fsubl
es
rclb
ret
dec
push
js
pop
push
shll
mov
push
incl
enter
fwait
negb
add
mov
add
decb
data16
xor
in
jo
xor
scas
inc
shlb
mov
fstl
add
aaa
xchg
pop
sbb
sbb
scas
out
gs
xchg
std
stc
jl
and
pop
push
ss
xor
push
pop
mov
inc
pop
xchg
daa
xlat
xchg
ret
xlat
rorb
aam
or
imul
pop
mov
pusha
mov
cmp
dec
out
gs
jne
jno
sarb
int
fwait
leave
xor
sahf
inc
lret
push
sbb
cltd
jo
inc
add
and
rclb
mov
fnstcw
outsl
dec
or
ret
pop
shl
out
inc
test
lea
pushf
mov
add
sbb
or
xchg
test
cmp
cld
jbe
mov
ljmp
cmpsl
cmc
push
ja
jge
or
outsl
sbb
and
and
jo
cli
jp
test
ret
jns
ja
scas
adc
aaa
movsb
add
lret
and
xor
mov
mov
fcom
xor
mov
jl
into
pop
push
fcoml
xchg
outsl
add
icebp
sub
test
shrl
into
jle
inc
insb
xor
xor
out
mov
xor
subb
or
fstpt
mov
sti
insl
jl
and
shrb
clc
mov
inc
push
aad
fstps
out
or
xchg
xchg
in
xor
push
push
xor
pusha
adc
aam
test
cmpsb
sbb
mov
test
cmp
xchg
pop
sub
js
lret
mov
xor
movsl
jb
mov
movsb
adc
aaa
pop
fwait
aad
lcall
outsl
sti
aas
clc
mov
shrl
sbb
and
inc
push
sahf
lods
jbe
add
test
xor
test
loopne
or
push
adc
inc
or
mov
push
xor
jo
pusha
sbb
adc
push
aad
xchg
adc
arpl
daa
sahf
leave
jno
mov
test
inc
mov
mov
and
popf
push
enter
push
es
push
mov
push
mov
xchg
cltd
jmp
xchg
mov
push
add
cmp
mov
or
inc
or
insb
push
and
rorb
jno
or
jns
xchg
add
mov
add
lret
sub
imull
lods
aad
cmpsb
xor
or
push
nop
lahf
ljmp
jnp
clc
cmpsb
int
fadd
test
mov
pop
push
aaa
pop
inc
sub
or
xchg
xchg
clc
cmpsl
enter
test
mov
pop
push
aaa
pop
inc
sub
or
xchg
pop
mulb
shlb
shl
mov
pop
imul
push
inc
sub
cmp
ja
xchg
sbb
sub
cwtl
test
mov
pop
xchg
pop
rorb
push
daa
inc
pop
jo
pusha
imul
dec
test
enter
sub
or
sbb
pop
cltd
dec
imul
cmp
or
sbb
sbb
or
pop
cltd
dec
imul
cmp
or
sbb
jmp
popa
idivl
aaa
ficompl
sub
daa
and
jns
cmp
sub
imul
loop
sub
and
sbb
or
subb
loop
lds
mov
mov
aaa
pop
xlat
inc
dec
pop
notl
lods
mov
bnd
subl
notl
ss
testl
pop
pop
or
aas
addr16
sub
sub
imull
inc
out
test
shr
mov
or
cld
xchg
cmp
popf
or
sbb
fchs
push
mov
jp
js
or
push
pusha
mov
dec
neg
xchg
cwtl
mov
out
notl
pop
icebp
dec
aaa
scas
jns
dec
sbbl
or
sbb
jmp
add
adc
inc
cltd
dec
das
mov
cmp
inc
cli
jo
insb
mov
lods
test
std
sub
sbb
int
push
or
sbb
cmp
outsl
clc
push
cmpsb
or
dec
mov
or
or
push
add
pop
int
lret
cmp
or
sbb
jmp
sbb
or
pop
cltd
dec
imul
cmp
or
sbb
jmp
sbb
or
pop
cltd
dec
imul
xchg
jbe
push
push
xlat
andb
dec
std
add
test
mov
push
jl
sub
xchg
outsl
divl
and
ror
pop
ficomps
push
jg
imul
ret
push
test
stos
sub
fildl
out
dec
loopne
jo
mov
add
cli
shufps
incl
cmpsb
cld
inc
daa
dec
push
pop
pop
div
in
stos
call
cwtl
jb
add
cli
lret
test
adc
rclb
or
std
shll
scas
dec
xchg
push
ret
lahf
scas
mov
in
cmp
aas
jno
xchg
cmp
mov
in
pop
fwait
dec
insl
subb
sub
pusha
xor
pop
test
ret
imul
cmp
dec
xlat
cmp
xor
into
loop
mov
sti
mov
insb
push
out
aad
rcll
insb
jb
push
je
xchg
cli
push
cmp
sbb
pusha
and
xor
xchg
adc
xchg
cli
sub
sti
lea
mov
cmp
xchg
icebp
ss
stos
cs
sbb
in
cltd
aaa
jecxz
jge
push
adc
ror
lods
cs
cmp
mov
popa
leave
inc
mov
rcrb
rcrb
enter
sbbl
mov
mov
jns
mov
push
addl
pop
mov
dec
call
sub
dec
mov
dec
and
cmp
ja
mov
aam
xchg
mov
out
stos
push
mov
pop
jp
dec
xchg
cmp
clc
cmpsb
jo
lret
notb
mov
lods
out
int
aaa
lcall
sbbl
mov
or
sbb
push
and
push
pushf
mov
cmc
push
stos
adc
ss
xchg
lcall
push
push
pop
js
shl
in
sbb
scas
fsts
aaa
pop
fsubp
addr16
movsl
cs
pop
sub
hlt
cwtl
dec
xchg
fildll
aad
sti
push
mov
pop
ret
or
loopne
mov
push
cmpsb
dec
xlat
jmp
push
mov
ss
lret
mov
ss
inc
mov
bound
mov
dec
and
outsl
adc
into
pushf
cs
popa
cwtl
out
lret
lods
dec
push
icebp
mov
or
out
imul
into
jg
cmc
shrb
shll
jae
xchg
sbb
dec
out
mov
pop
push
mov
push
mulb
mov
add
decl
or
inc
pop
int3
jb
or
push
cmp
or
push
mov
inc
out
jne
jl
loope
testl
je
inc
cmpsl
inc
sbb
fnsave
inc
sub
pushf
je
push
pop
data16
push
hlt
aad
jo
push
xor
lret
pop
jmp
test
pusha
lods
push
cwtl
ljmp
fwait
mov
xchg
das
dec
js
mov
or
mov
jmp
out
xlat
in
sti
into
mov
ja
mov
loop
xor
into
and
lret
pop
dec
pop
inc
and
fidivrs
in
dec
cmp
xchg
scas
arpl
lods
in
pop
jge
inc
pop
dec
outsb
pop
mov
add
ljmp
lods
out
outsl
aam
push
adc
aas
mov
cmc
dec
push
and
xchg
push
mov
sbb
jecxz
mov
insl
loope
lret
add
sub
add
in
jg
bound
ss
fs
adc
jb
les
and
or
stc
push
push
add
sbb
aad
and
add
cltd
lds
fadd
push
rol
mov
clc
mov
inc
lcall
popa
dec
mov
add
dec
jno
call
xor
dec
jmp
mov
add
xchg
arpl
in
daa
and
in
sbb
mov
xor
adc
adc
and
jmp
push
lcall
xor
push
hlt
nop
mov
or
leave
cmpsb
mov
repnz
aaa
andb
popa
test
mov
inc
or
outsb
mov
je
adc
mov
jmp
dec
cmp
jmp
jne
outsl
int3
and
out
push
inc
pop
adc
aaa
xchg
in
addr16
mov
xor
je
inc
shr
hlt
jle
mov
cmp
mov
sbb
mov
xchg
jmp
mov
divb
insl
xor
pop
mov
mov
push
push
pop
cmp
js
add
dec
aam
pop
fsubrs
rcll
loopne
cmp
aaa
lock
or
in
inc
dec
pushf
jno
and
jne
test
pop
dec
test
jmp
popa
imul
lret
movsl
xor
mov
das
mov
cmpsl
cmc
xchg
mov
pop
sar
data16
daa
jle
jo
adc
leave
mov
lret
sti
leave
pop
pop
cmp
lea
jae
cmp
pop
mov
pop
outsb
pop
or
std
push
js
enter
gs
loope
lret
mov
jb
push
jbe
fsubr
test
into
inc
lret
xchg
xor
adc
add
ficompl
imul
adc
std
cmc
call
xor
mov
fcmove
ret
popa
jo
or
pop
fwait
daa
stos
or
jp
shlb
and
jle
pop
push
mov
lret
push
arpl
xor
xchg
out
loope
test
out
aaa
jl
dec
scas
add
int
mov
xor
shl
mov
dec
and
add
mov
leave
enter
cmp
or
xchg
pop
and
push
sbb
cs
orb
cmp
sub
cld
testl
cmp
bound
or
js
dec
in
sahf
lahf
push
inc
cmp
xchg
dec
call
pusha
mov
test
jl
inc
jnp
jg
mov
adc
out
cmpsl
nop
fs
pop
mov
hlt
lahf
loop
mov
mov
cmpsb
jmp
lods
fs
push
out
daa
or
push
fistpl
xchg
and
fadd
daa
xor
mov
dec
lcall
xchg
xor
mov
jmp
icebp
inc
push
ror
lds
push
lret
push
js
rol
adc
dec
mov
stos
push
adc
imul
push
xchg
xchg
fs
sbb
xor
shrb
pop
jae
push
arpl
push
bound
les
insb
mov
cltd
jae
xchg
dec
dec
or
xorl
je
rclb
repnz
adc
fwait
dec
roll
movl
inc
iret
push
int3
sub
xchg
cmpsb
mov
xor
pop
test
ss
sti
cmp
mov
mov
xchg
repnz
repnz
push
enter
mov
add
cmp
test
jg
enter
jb
jno
insl
aad
dec
fiadds
jp
aam
mov
fdivl
xor
lea
ljmp
std
mov
gs
lret
mov
ret
adc
or
adc
sub
jle
lret
and
cmc
std
dec
repz
clc
cmp
add
inc
fildll
dec
cli
data16
roll
push
sbb
repnz
cmp
scas
jle
enter
mov
dec
lds
dec
popf
lock
pushl
mov
xchg
fmul
data16
aad
push
mov
decl
adc
outsb
adc
push
sub
stos
adc
mov
pop
jecxz
inc
sub
fcoms
cwtl
sub
fldcw
inc
aad
in
push
fcompl
or
xchg
pushl
or
cmp
dec
or
jg
jmp
idivb
loop
fyl2xp1
fistl
inc
icebp
call
fdivr
les
shr
rcrl
sub
or
mov
pop
les
mov
and
divl
pop
adc
out
in
jmp
fnstcw
test
mov
or
out
outsb
es
lret
nop
daa
adc
jp
negb
mov
ficomps
insl
fmul
sub
test
in
adc
or
pusha
cmc
loope
pop
mov
push
imul
fildll
mov
xchg
dec
fisubs
xchg
clc
testb
in
xor
testb
or
xor
ljmp
loopne
insl
out
outsl
data16
mov
aad
testl
push
lea
sbb
xchg
lea
inc
push
sti
mov
cmpsl
adc
pop
mov
sbb
incl
aad
or
ja
mov
outsl
out
and
stos
mov
pop
adc
jle
dec
inc
lahf
fs
inc
pop
or
fdiv
xchg
mov
adc
testb
inc
jb
shlb
shll
popf
xchg
je
inc
cli
inc
insb
dec
jecxz
cmpsl
or
int3
mov
ret
lods
or
dec
pop
ret
add
pop
outsl
lea
mov
mov
lods
jl
add
stc
test
lret
popa
popa
push
push
inc
push
icebp
in
inc
ret
ss
or
stos
jmp
cmp
push
mov
add
cltd
mov
mov
ja
xchg
sti
sbb
cmp
sbb
aas
leave
mov
jbe
and
std
loope
shlb
dec
adc
adc
sbb
lea
dec
xchg
bound
dec
loope
fwait
mov
sub
pushf
pop
add
add
fcomp
loopne
cmc
addb
outsb
outsb
subb
jmp
das
xorb
ss
incl
dec
inc
xchg
cmp
add
movsb
mov
int3
cmc
mov
fidivl
pusha
shl
loop
mov
jmp
xor
jg
xorl
cld
cmp
lea
fnsave
jp
lods
test
jnp
frstor
add
mov
adc
xor
cmc
push
out
adc
shrb
jecxz
fsubp
lock
mov
es
cmp
pop
xor
imul
lret
and
mov
or
icebp
dec
jge
outsl
outsb
fdivrl
clc
lods
and
or
xchg
jl
rorb
push
cmp
js
push
divl
push
scas
rcrl
mov
push
cmpsb
mov
lahf
xchg
lahf
mov
in
and
add
push
inc
xchg
std
pop
add
shll
lret
cltd
mov
lret
lahf
mov
xchg
loopne
pop
jo
mov
push
data16
das
stos
dec
arpl
push
pop
stos
cmc
bound
pushf
jb
xlat
xlat
lods
jne
out
mov
popf
aaa
arpl
push
push
jge
push
xor
sub
rorb
pop
mov
push
aam
mov
cli
ret
lods
jo
push
push
mov
out
xchg
cwtl
mov
shrl
sbbb
subb
cmpsl
inc
pop
fidivrs
push
xor
push
push
pop
ds
sar
xor
xchg
std
std
fmull
sarb
scas
movsb
add
scas
cmpsl
fcos
int3
mov
fs
leave
sbb
inc
mov
mov
aad
mov
xor
icebp
pop
sub
adc
aaa
xchg
mov
sbb
cmp
mov
pop
les
pop
ljmp
call
popa
fs
adc
jns
or
cmp
and
vmovmskps
xchg
roll
dec
push
push
cmp
mov
xor
enter
aam
int
mov
xorb
pop
in
xor
rep
mov
push
loope
dec
rcll
cmp
sub
mov
push
aas
lods
inc
stos
xor
popf
jne
or
iret
in
mov
xchg
cwtl
push
and
aas
aad
int
xlat
ror
cmp
repnz
jo
sahf
xchg
push
fidivl
icebp
jne
add
rclb
and
popa
mov
int3
push
ror
inc
mov
mov
jl
push
cltd
das
stos
sbb
test
movsb
inc
xlat
sbb
and
insl
jl
and
scas
data16
int
add
cmp
cld
xchg
mov
xchg
fbstp
cmp
lock
sub
sub
add
inc
pusha
lods
jge
ds
aam
std
mov
repnz
std
cli
jb
push
xchg
push
sti
xchg
scas
xor
jns
push
sbb
xlat
insb
pop
leave
aaa
loopne
pop
push
flds
ret
add
jle
aam
loopne
xor
jl
adc
in
les
cmp
push
jp
insb
push
inc
mov
andb
ret
lret
mov
stos
mov
enter
add
enter
push
xor
push
aaa
hlt
rcrl
xlat
push
loope
pop
jle
pop
and
pop
gs
shrl
pop
dec
sbb
adc
icebp
and
mov
cmp
pusha
in
mov
push
hlt
pop
sahf
out
stos
aaa
test
xchg
es
cmp
push
pop
fisubrl
int
shrl
cwtl
add
dec
inc
mov
decl
fstps
les
cmp
aad
sti
pop
adc
push
pop
push
mov
cli
xor
stos
lret
imul
out
sub
jae
dec
popa
or
jl
rorl
out
in
cmp
popf
mov
fldenv
or
pop
inc
mov
sti
mov
jle
push
and
xchg
jl
lret
leave
xorl
sbb
mov
ss
xchg
add
jecxz
push
jmp
inc
bnd
jge
out
test
std
push
imul
sbb
dec
jbe
and
mov
xor
push
std
arpl
arpl
fisubrl
aaa
cltd
sub
cltd
loope
loope
inc
hlt
jne
mov
pop
cmp
fwait
xor
cs
adc
jo
and
js
cmc
xor
sub
mov
xchg
ret
cmp
scas
nop
out
popf
add
stos
add
xor
add
xor
clc
bnd
out
aam
std
mov
pop
add
dec
xorb
stos
cli
mov
cmp
sub
gs
adc
jge
cli
push
dec
sahf
pop
jle
inc
xchg
mov
mov
rolb
sbb
pop
and
fs
scas
aas
push
es
push
push
xchg
ret
je
pop
aad
daa
lods
out
cs
xchg
sub
dec
xchg
outsb
push
fwait
aad
sahf
aam
jb
sbb
or
jp
push
loop
or
lret
repnz
mov
movsl
pop
push
push
loopne
sub
inc
jne
les
shr
aad
notl
imul
or
pop
test
cmp
sbb
adc
mov
mov
divl
mov
push
clc
and
sub
push
mov
arpl
int
and
jmp
inc
imul
or
mov
sub
and
push
adc
lahf
aaa
and
cltd
lods
jae
movsb
div
mov
ss
int
fidivs
push
sbb
mov
sbb
cld
fsts
xchg
dec
jo
mov
les
sbb
dec
jae
hlt
aam
daa
scas
in
xchg
ds
sbb
mov
xchg
dec
sbb
out
mov
clc
test
outsl
leave
jno
insl
dec
hlt
jno
adc
imul
popf
in
in
mov
and
pop
subl
das
push
jge
dec
xchg
add
add
jmp
fidivrs
cmpsb
fisttps
stos
push
jle
aas
add
jecxz
sub
cmp
inc
or
fstl
fdivr
inc
sub
pop
cmc
test
insb
push
inc
inc
jo
scas
push
shr
ret
xchg
test
xchg
push
jmp
sub
mov
fists
lds
jge
cmp
inc
cmp
lods
roll
pop
fwait
call
arpl
mov
mov
adc
mov
icebp
xchg
ljmp
mov
clc
mov
xor
pop
mov
and
jb
add
mov
filds
and
cmp
or
lods
int
hlt
mov
pop
and
test
pop
sbb
xlat
inc
xchg
orb
adc
xchg
jecxz
mov
inc
push
ljmp
sbb
test
xchg
call
daa
popa
push
das
inc
fs
testb
or
int
and
mov
dec
jge
das
dec
das
out
lret
cmp
out
hlt
xchg
loop
bound
sti
daa
mov
pop
in
dec
fs
imul
iret
lcall
icebp
inc
int
and
test
pushf
sub
iret
scas
cmc
pop
addr16
verr
scas
pop
mov
add
pop
jmp
xchg
fildl
cli
push
jge
mov
shll
mov
mov
sbb
jg
xchg
test
bound
jecxz
sub
xor
in
outsl
repz
fdivrs
repz
push
pop
mov
pop
sbb
push
inc
sbb
adc
mov
xor
ror
pop
fildl
sti
xor
or
sbb
cmpsb
cmp
fcmovu
mov
loope
dec
cmp
dec
icebp
mov
adc
sub
add
sub
les
cmpsl
pushf
push
pop
lock
cltd
sbb
push
loop
or
test
push
aaa
rclb
int3
mov
add
repz
push
push
incb
dec
repz
mov
test
or
push
iret
je
pop
shlb
fidivs
test
mov
or
sub
fstl
jb
xor
mov
jmp
push
jb
ss
jmp
pop
adc
dec
stc
mov
xlat
mov
inc
inc
shrl
leave
cmp
sbb
loope
cltd
in
mov
iret
adc
insb
and
pop
mov
mov
push
dec
fwait
mov
add
lcall
push
inc
mov
cwtl
lods
rcl
lods
jnp
sti
jle
mov
ljmp
inc
mov
dec
mov
ja
pop
scas
sbb
push
adc
xchg
pop
test
nop
std
fstp
leave
and
inc
inc
jl
sbb
orl
addl
es
test
sti
jl
jecxz
orb
loop
call
clc
xor
outsb
popa
std
lahf
dec
call
sbb
mov
and
add
test
sub
repnz
adc
loop
popf
xchg
rcll
inc
and
movsl
mov
je
adc
mov
scas
stos
iret
aas
cmp
mov
inc
stc
or
mov
aad
mov
push
jl
es
insb
mov
push
jecxz
das
mov
sub
mov
dec
pop
shr
mov
jno
push
into
mov
dec
xor
into
sti
dec
inc
mov
iret
mov
sub
pop
push
or
in
and
ret
and
aas
push
lea
ja
cmp
cltd
sbb
xor
pop
rorb
xor
and
adc
shll
dec
and
sub
and
mov
xor
sahf
sbb
push
mov
sbb
fsubrs
pop
pop
sbb
mov
push
pop
jle
js
mov
les
adc
xchg
adc
bound
and
push
mov
ret
bound
gs
sti
cli
xor
ljmp
cmpsb
pop
mov
mov
sbb
xchg
add
push
mov
pop
mov
and
adc
sti
gs
lcall
add
inc
push
jno
inc
pusha
outsl
pop
sub
ljmp
jmp
cltd
out
test
shr
inc
mov
and
sbb
outsb
movsl
push
xor
sub
ficoms
fidivl
sahf
cmpl
les
or
mov
mov
xchg
cmpsl
mov
pop
out
xorl
in
in
push
subl
outsb
mov
mov
mov
pop
fidivl
das
push
fcoms
mov
data16
mov
cmp
and
sub
adc
cmp
imul
mov
orl
add
movsl
imul
sbb
cmp
fimull
es
rorb
mov
xchg
cltd
sub
pop
cmp
sub
adc
out
xchg
lahf
mov
add
pop
cltd
push
or
lods
dec
jge
fisubl
xchg
sub
shrb
mov
iret
jb
sbb
fmuls
cli
xor
icebp
aad
in
xlat
dec
rclb
pop
xlat
and
or
adc
add
leave
lcall
cmp
and
xor
pushf
lock
pop
dec
lds
repnz
out
in
mov
mov
adc
ss
fnstenv
xor
jmp
gs
sub
and
sub
sbb
mov
add
lret
inc
mov
xchg
pop
rcl
inc
jo
pop
out
mov
mov
adc
mov
cmp
push
je
cmp
dec
cwtl
push
add
jbe
jp
lock
and
imul
cmp
pop
hlt
insb
jge
inc
xchg
adc
int
and
adc
scas
insb
inc
les
add
dec
aad
int
aaa
mov
inc
jg
test
cwtl
pop
mov
clc
cmp
or
sbb
jmp
sbb
or
pop
cltd
dec
imul
cmp
or
sbb
jmp
sbb
or
pop
cltd
dec
imul
cmp
or
sbb
jmp
sbb
or
js
push
imul
call
jmp
sbb
jg
lock
jbe
data16
andb
mov
pop
mov
xchg
mov
adc
and
xor
inc
pop
push
dec
bound
push
lcall
ret
inc
loop
repnz
add
adc
and
xor
inc
xor
jb
orb
mov
out
mul
adc
repnz
xor
gs
pop
inc
or
sbb
lcall
int
test
out
xor
sbb
mov
clc
xor
mov
xor
fwait
pop
loopne
push
ret
ss
mov
lahf
pop
fcoml
cmp
jnp
out
fwait
clc
test
pop
lods
popa
mov
mov
cmpsl
inc
jp
dec
loope
jb
sbbb
popa
stos
mov
stos
fisubrl
adc
ret
bswap
adc
mov
xchg
stc
cmp
pop
bound
jmp
repnz
push
bnd
add
sbb
or
dec
popf
imul
pop
push
cwtl
stos
dec
nop
jmp
mov
push
vpmovzxbq
rol
pop
xor
jp
out
inc
lcall
ret
lret
repnz
pushf
adc
and
xor
jbe
mov
jp
add
enter
stc
hlt
test
xchg
jbe
jb
ja
push
dec
ja
les
add
hlt
lret
rcr
cmpsl
mov
stc
cmpsl
xchg
mov
jo
jne
pop
pop
xor
or
push
or
sbb
in
xchg
int
ljmp
loop
repnz
xor
inc
pop
push
dec
bound
push
lcall
ret
lret
repnz
xor
inc
pop
push
dec
bound
push
lcall
adc
jmp
mov
shl
pop
push
or
mov
mov
push
test
sub
mov
pop
push
adc
in
inc
jl
mov
sbb
sub
test
mov
inc
repnz
ret
loopne
xor
jbe
and
mov
int
jmp
ljmp
jns
or
ja
out
insb
jns
not
cmova
inc
pop
dec
cmp
loopne
sub
outsl
pop
fisubrs
sbb
sbb
popf
sub
jle
aam
and
jns
jae
imul
pop
popl
and
dec
mov
push
sbb
loope
setno
inc
jecxz
xchg
add
mov
mov
test
xchg
xchg
lcall
pop
pop
mov
shll
xchg
sbb
pop
adc
fimull
lret
dec
pop
xchg
sbb
mov
xor
xchg
cmc
out
jmp
cmpsl
jno,pn
inc
pop
outsl
jns
and
push
rcrb
jb
fidivrl
in
ds
jb
lds
arpl
cmp
push
add
cwtl
and
and
rcr
andl
push
movsb
pop
in
mov
in
push
cmpsb
cmpsb
popa
mov
loope
mov
test
inc
js
push
mov
mov
push
rol
adc
or
sbb
out
sahf
popa
cmp
mov
push
jmp
stc
mov
sarb
cltd
pop
stos
lea
mov
xchg
repnz
mov
out
fistpl
push
scas
mov
and
inc
mov
out
lods
or
xor
in
push
and
sbb
mov
inc
aas
fcoms
mov
cs
and
in
int3
out
fiaddl
cmp
mov
fildll
ret
int
jae
jg
sbb
ljmp
sbb
xlat
cmp
out
arpl
xchg
shrl
xchg
popf
mov
scas
and
mov
jae
aaa
mov
leave
ret
push
xchg
xchg
pusha
sbb
icebp
mov
jo
movsb
pop
jb
pop
push
out
sub
sbb
cli
out
pop
lock
jge
pushf
imul
add
mov
mov
sub
xorb
mov
mov
int3
push
fisubrl
loope
xor
cmp
inc
fucomi
cmp
mov
std
out
addr16
pop
insb
repz
mov
jo
das
imul
push
dec
lret
xchg
ja
dec
out
jp
ljmp
dec
push
pop
sub
cs
in
push
add
pushf
aam
das
pop
inc
les
sarl
call
stos
xlat
lcall
push
out
xor
das
cmp
sub
in
and
lods
add
orb
add
clc
jg
sub
mov
fistpll
pop
push
scas
adc
or
mov
stos
out
pop
and
push
xchg
inc
cmp
call
cmp
dec
std
jecxz
dec
jmp
stos
int
inc
mov
stos
xchg
aam
cmc
push
push
outsb
mov
mov
add
rorb
mov
xor
xor
xor
popa
lcall
dec
sub
sti
push
sub
test
jge
xor
stos
pop
mov
jmp
stos
test
lahf
push
inc
sub
fmull
or
shlb
idivb
clc
testl
fcomp
push
push
out
xor
mov
jbe
mov
sub
lret
and
in
mov
les
inc
xor
adc
jne
fld
ljmp
inc
call
fsubl
xchg
mov
sbb
shrb
gs
add
xor
into
pusha
pop
add
fcomps
cmp
idiv
pop
xchg
je
jnp
scas
mov
adc
inc
jbe
sub
int3
cld
lea
push
test
mov
cmp
push
mov
mov
xchg
inc
in
jge
adc
fbstp
mov
call
xchg
mov
mov
hlt
fmul
pop
cmp
insl
adc
xlat
icebp
jns
jns
mov
cmp
jmp
out
add
out
fsubr
jns
mov
or
push
arpl
out
mov
js
jmp
popf
popf
adc
psadbw
sbb
dec
negb
sub
pop
test
sbb
divl
xor
mov
mov
add
lcall
out
in
push
scas
cmp
mov
cld
test
lds
loope
stos
push
stc
mov
out
or
push
in
pop
mov
push
ret
lret
xchg
test
stc
movsl
adc
xchg
dec
mov
rorb
push
or
fnstcw
cld
aam
xchg
insl
mov
push
fbstp
cmp
pop
fwait
dec
inc
dec
sahf
clc
inc
in
push
ret
add
pop
jo
sbb
rorb
fs
in
fwait
xchg
fs
ja
mov
fwait
push
add
loope
das
pop
imul
xchg
sub
popa
jp
int
sarb
mov
cmpsb
jbe
mov
imul
jbe
sar
cwtl
mov
jg
pop
dec
leave
in
les
mov
pop
ljmp
popa
push
mov
popa
mov
adc
adc
loop
mov
cwtl
leave
or
inc
cmp
or
cmpb
or
push
inc
pop
ficoml
fldcw
sub
flds
xchg
sub
bound
lahf
ficompl
inc
jge
in
cmp
fnstcw
loopne
xor
in
in
sub
or
rcll
shrl
in
xor
inc
outsb
xchg
adc
adc
test
and
xchg
arpl
pop
cmc
lds
aam
push
dec
fdivrs
jnp
fsubrl
cmovl
mov
das
ja
int3
sbb
call
fsubrl
xor
add
lret
jecxz
lret
pop
or
aad
lods
ds
and
dec
cltd
adc
into
or
loope
xchg
add
aaa
gs
jg
push
sub
aam
add
push
je
pop
push
aaa
dec
xlat
xlat
xorl
movaps
push
jle
xor
repz
pop
mov
scas
aas
adc
out
jg
popf
jmp
lods
or
cmpsb
sub
xor
inc
pop
shrb
adc
popl
loope
push
sbb
cmp
sub
test
add
mov
pushf
fisttps
je
aaa
adcl
out
shlb
pop
mov
scas
inc
imul
lret
fcompl
push
popa
jnp
and
dec
mov
int3
pop
cltd
mov
lret
outsb
dec
fidivrs
je
jo
test
test
xor
or
iret
in
and
and
sbb
pop
adc
repnz
jp
movsb
cmp
clc
dec
mov
dec
jo
ja
lea
fistpll
dec
push
mov
or
xchg
in
mov
xchg
jae
test
mov
push
dec
sub
or
pop
pop
into
stc
ret
inc
or
sub
jp
push
pop
scas
inc
ljmp
cltd
mov
xchg
mov
xor
ds
mov
neg
mov
xlat
sbb
mov
in
pop
aam
test
loop
dec
xchg
inc
lods
sbb
dec
lock
cmpsl
decl
lahf
aam
out
cmp
inc
lahf
adc
scas
arpl
loope
lret
xchg
xor
and
lret
xchg
cmp
ss
mov
ret
cld
sbb
jo
sub
jecxz
aad
push
bound
inc
mov
mov
je
push
inc
stos
push
or
int3
dec
test
pop
mov
or
mov
clc
mov
inc
data16
popf
sub
data16
xchg
pop
cmp
jp
mov
jnp
pop
out
mov
xchg
xchg
mov
mov
aam
inc
or
xchg
loopne
out
dec
lods
xchg
add
push
out
sbb
sub
in
push
rorb
xchg
bound
rclb
mov
pop
dec
cwtl
xchg
mov
dec
inc
hlt
jp
int
inc
pop
inc
scas
adc
andb
mov
pop
int3
and
stc
ficoml
dec
stos
stos
loopne
fcmovnb
push
sub
mov
ficomps
xor
pop
push
xchg
aaa
clc
out
xor
or
sbb
mov
repnz
imul
jmp
roll
ret
in
ret
mov
mov
push
icebp
xor
cmc
movsl
mov
and
mov
push
imul
in
mov
sub
pushf
jge
mov
dec
cs
push
imull
cmp
aam
jg
sub
mov
cmp
cmp
jge
add
lods
cmpsl
popa
xor
pop
jae
test
mov
adc
sbb
gs
mov
je
sbb
mov
dec
mov
loopne
or
lcall
mov
mov
cld
and
mov
pop
sbb
inc
or
into
or
push
aaa
in
add
xor
pop
dec
data16
sub
rcrb
cmp
gs
cmp
push
mov
jmp
ficomps
iret
push
sbbb
rorl
push
push
mov
jl
sub
or
aas
je
mov
cmpl
aam
jle
add
xor
lret
out
dec
push
sahf
lahf
pushl
faddp
cmpsb
movsl
insl
lret
scas
stos
in
mov
outsb
jbe
sub
sub
cmc
push
inc
pushf
push
add
aam
cld
loope
fnsave
stc
push
mov
data16
dec
mov
fsts
jmp
ret
icebp
sub
lret
pop
xchg
loop
dec
enter
mov
in
inc
adc
mov
dec
jo
and
jae
and
lahf
add
jo
jp
enter
dec
fstpt
icebp
mov
jecxz
sub
fisttpll
mov
ret
mov
adc
out
das
fbstp
xchg
cwtl
pop
sub
xchg
pop
roll
pop
popf
push
add
jmp
jnp
pop
sub
jle
pusha
fbld
add
arpl
pop
addr16
in
call
inc
callw
aad
out
lea
sbbl
pop
xor
pop
mov
add
rcrb
add
push
mov
mov
ret
fwait
push
lahf
cmp
xchg
add
jae
data16
push
inc
rorl
pusha
inc
cmp
scas
shr
pop
dec
cmp
clc
xchg
xchg
cwtl
stos
mov
jle
jecxz
xchg
stc
imul
mov
dec
imul
xchg
aas
mov
ja
and
mov
pop
cli
pop
mov
mov
xchg
sub
xchg
or
adc
aad
ja
hlt
ret
lahf
dec
imul
push
in
xchg
les
js
mov
cmp
mov
filds
push
xor
cmp
mov
test
xadd
sbb
loopne
loopne
xchg
jae
push
jge
jle
xchg
fdivrp
mov
in
stos
cmpsb
adc
insl
mov
ds
fwait
push
lea
jbe
lret
sub
sub
pop
jge
jae
lock
cli
xchg
enter
cli
fsts
cmpsb
push
push
into
outsl
ret
divb
and
loope
inc
pop
testl
jg
or
xchg
scas
jg
nop
sar
xor
fildll
stos
mov
xchg
pop
xlat
push
xor
stos
xchg
lock
add
arpl
in
or
jmp
add
sub
mov
or
jp
movsb
jle
jns
imul
push
daa
xchg
xchg
lods
cmp
sbb
adc
int
xchg
int
cld
bound
push
push
aaa
pop
repz
out
xchg
sbb
cltd
ret
into
mov
lock
mov
insb
je
pop
inc
inc
dec
jnp
and
enter
pop
ret
sbb
sbb
mov
pop
test
cmp
cmp
jmp
jecxz
aas
orl
in
inc
mov
insl
test
pop
mov
ret
push
mov
outsl
add
insl
loopne
sbb
push
test
jbe
mov
dec
aaa
mov
test
hlt
fcoms
mov
push
add
movsb
mov
cli
xchg
mov
xchg
dec
and
lret
stos
in
mov
rolb
sahf
add
mov
push
jnp
fs
mov
scas
dec
lods
data16
mov
xchg
xor
stos
xchg
sahf
scas
cmp
call
cmp
addr16
inc
inc
or
sbb
adc
enter
aam
xchg
or
xchg
xchg
add
loopne
mov
pop
test
cmp
jne
inc
and
in
dec
xchg
call
scas
in
add
fwait
bound
mov
insl
and
lods
int3
inc
jge
sbb
pop
hlt
lock
scas
push
in
imul
xlat
vcomiss
daa
and
out
daa
or
sbb
mov
iret
outsl
leave
addr16
xor
pop
cmp
add
ret
inc
xchg
cli
idivb
lds
sahf
bound
cmp
aaa
pop
out
dec
xchg
inc
jp
scas
idivl
jp
mov
mov
mov
push
jge
enter
repz
pop
mov
icebp
push
cmp
sub
cs
pop
dec
inc
mull
adc
inc
sbb
test
pop
lods
push
cli
or
sub
jmp
push
inc
data16
cmp
and
adc
xor
testb
mov
mov
movsl
stos
sbb
dec
pop
or
subb
fnsave
dec
sbb
fistl
imul
mov
cmp
mov
ja
and
mov
jno
pop
mov
cmp
rorl
jle
sbb
rorb
xchg
mov
negb
jbe
mov
mov
scas
mov
aam
jge
in
shll
cwtl
add
pop
jle
cs
mov
sbb
mov
out
pop
push
xor
mov
sti
js
mov
imul
and
xchg
pushf
add
iret
inc
fdivr
out
cmpsl
into
test
cmc
cmpsb
fidivs
iret
out
fwait
popf
sbb
fcmove
mov
cmp
daa
repnz
in
int
mov
cli
pop
in
mov
loop
push
pop
rolb
cwtl
btc
les
popa
fidivrs
lcall
aad
hlt
js
mov
adc
iret
inc
sbb
xlat
mov
inc
sub
mull
pop
mov
and
imul
sbb
rcr
hlt
sub
add
and
pop
ds
pop
or
lods
mov
pop
xchg
xchg
or
sub
dec
insl
add
push
cmp
sub
sahf
dec
data16
out
rclb
xchg
loop
enter
xchg
imul
aad
insb
sbb
sbbl
insb
pop
int
push
sbb
cli
scas
test
jge
dec
das
in
push
sbb
pop
push
xor
insl
in
mov
leave
ds
mov
push
and
sub
dec
bound
and
mov
pop
loop
xchg
xchg
cmc
loop
sahf
test
fcoms
xchg
addr16
cwtd
or
add
mov
dec
and
fsubl
icebp
jb
jae
add
add
mov
pop
or
lods
shl
in
ficomps
xor
cmp
dec
addr16
push
ret
jmp
sbb
cmpb
leave
and
push
mov
pop
out
icebp
mov
rorl
pusha
sub
cmp
ret
fistpll
outsw
mov
add
mov
push
jmp
add
inc
dec
xchg
xchg
stos
bound
push
repz
sub
shll
cwtl
leave
cmp
mov
shl
mov
subl
mov
lcall
stos
mov
fwait
leave
sbb
je
sarb
push
jp
mov
add
lret
stos
or
mov
andb
and
and
scas
inc
mov
mov
sub
sub
sub
cld
push
add
xor
lcall
and
xchg
rorb
ret
adc
xchg
dec
test
es
fs
loopne
push
and
dec
pop
inc
mov
sub
xchg
test
cmp
lret
pusha
and
popa
aad
sub
dec
popa
das
sbb
dec
out
test
aaa
jge
jns
loopne
xlat
cltd
fisttps
and
cmp
sbb
xchg
ss
mov
cmpsb
hlt
sub
push
fldcw
jne
std
popa
xor
outsb
dec
inc
jnp
int
imul
xchg
cmp
iret
and
shll
repnz
adc
mov
mov
xlat
push
fsubrs
mov
fs
add
cmp
inc
and
inc
pop
xor
jecxz
mov
cmp
cmp
pop
xchg
and
push
or
add
das
push
add
mov
and
das
xchg
or
int
cmp
filds
pushf
int3
fmull
jnp
fbld
xor
sar
lds
jb
addr16
xchg
int3
mov
cmp
imul
sbb
out
daa
fidivl
push
jb
ljmp
or
and
jo
outsb
fildl
push
mov
push
lcall
sbb
and
nop
xchg
ret
mov
mov
mov
jb
out
icebp
xor
pop
test
sub
jo
lahf
mov
mov
rcrb
test
lret
call
xchg
inc
repnz
sbb
ja
add
ret
mov
test
ret
mov
jnp
add
xor
dec
mov
mov
push
push
lods
mov
push
cld
rcll
cmp
xor
insb
out
in
movsl
mov
add
sti
inc
adc
shrl
or
sub
test
insb
insb
xchg
cmp
into
out
stc
cmpsb
sub
xlat
mov
mov
lcall
popf
mov
jnp
imul
mov
xorl
std
xchg
mov
iret
and
sahf
stc
sub
xchg
xchg
inc
mov
imul
mov
or
or
mov
push
and
rcl
fsub
lcall
push
scas
add
inc
stos
jno
and
adc
ud0
mov
adc
in
gs
push
push
sbb
jne
xlat
ss
movsl
std
cmp
lods
jge
inc
cwtl
dec
sbb
xchg
xor
mov
xlat
std
mov
add
mov
jno
push
in
xchg
loopne
mov
inc
iret
jo
fcmovb
xchg
dec
lret
lea
cli
add
cmp
inc
dec
jbe
cmp
repnz
sarb
cmc
jno
loopne
and
jle
mov
rcl
iret
call
ja
adc
push
in
pop
pop
xlat
xor
pop
cmp
out
mov
and
pop
test
jne
cmp
jo
repz
data16
mov
xchg
xor
push
jp
pushf
pop
dec
add
jmp
inc
sbb
jb
push
adc
inc
and
pop
and
div
iret
push
sub
iret
xor
inc
popa
orb
andl
leave
ficomps
imul
and
ds
stos
inc
push
jg
shll
jo
inc
shlb
dec
ret
in
out
jne
imul
mov
mov
cli
iret
ja
sub
aad
mov
pop
dec
mov
cli
jg
and
std
scas
or
xlat
mov
scas
mov
repnz
lcall
lds
ss
int
lret
sbb
inc
inc
mov
les
xor
stos
stos
push
ds
cli
add
lods
xor
push
inc
cmp
xor
jmp
mov
in
inc
sub
outsl
sbb
pop
inc
jb
add
insb
addb
in
cs
outsb
mov
sbb
inc
ljmp
popf
ficoms
mov
sbb
cmp
cmp
nop
fld
jnp
xor
outsl
xchg
adc
add
stos
mov
fists
push
in
enter
cmpsl
push
ljmp
popa
add
fcompp
dec
ljmp
out
dec
mov
jmp
sub
jle
ja
cmp
scas
add
fwait
mov
xorl
push
sbb
leave
int3
rol
mov
pop
ret
mov
inc
jge
inc
rorl
push
cmc
cmp
fstl
cmpsl
mov
mov
jge
inc
into
sub
mov
sarb
aam
xor
mov
mov
adc
imul
call
mov
out
into
repz
aam
xor
fadds
mov
lods
mov
cmp
sbb
push
jecxz
pop
xor
imul
jmp
mov
out
dec
vxorpd
adc
nop
push
lahf
scas
gs
cmp
outsb
out
hlt
sub
cmp
in
mov
cwtl
add
sbb
inc
jp
push
pop
bound
add
notb
loop
cltd
jecxz
test
cmpsl
and
in
pop
sub
xor
leave
scas
dec
lret
movl
cmc
orl
push
cmpl
fisttpll
je
xor
nop
cwtl
cmp
repz
jb
sbb
sbb
in
lcall
stos
ret
adc
cmpsb
inc
scas
jne
mov
xchg
push
and
out
jmp
cmpsb
stc
xor
shr
mov
fcmovbe
lret
repnz
xor
inc
pop
push
dec
bound
push
lcall
ret
lret
repnz
xor
inc
pop
push
dec
bound
push
lcall
ret
cli
repnz
xor
inc
pop
push
dec
arpl
push
lcall
ret
lret
jb
std
in
mov
xor
test
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
mov
mov
repnz
xor
outsb
cmp
dec
pop
ds
cs
push
lcall
into
fidivrl
ljmp
pop
sub
push
dec
jp,pn
push
lcall
into
fidivrl
ljmp
sub
das
cmp
jns
jo
jge
lea
into
push
sahf
ljmp
popf
or
xor
jnp
ds
lods
pop
iretw
sub
fstpt
lahf
test
cmc
xchg
arpl
sub
push
xchg
pop
pop
decb
enter
jno,pn
lahf
fistpl
sub
insb
pop
aad
in
mov
stc
fwait
das
mov
mov
inc
cltd
ficompl
ljmp
fcmovb
scas
mov
adc
packuswb
mov
daa
cli
hlt
ljmp
mov
and
lcall
xchg
lock
arpl
into
das
mov
mov
sub
in
fdivrl
cs
jge
push
imul
decb
into
fidivrl
ljmp
pop
sub
ds
jp,pn
push
out
cli
into
scas
fsubp
into
cltd
fldt
fidivl
mov
cmp
jge
dec
pop
addr16
inc
lds
loop
mov
notl
pop
inc
or
cmp
sub
popa
in
mov
mov
cli
sahf
ljmp
pop
sub
ds
jp,pn
push
lcall
into
fidivrl
ljmp
pop
sub
ds
jp,pn
push
lcall
or
lret
mov
push
int3
or
leave
and
fxch
cmp
fldl
push
pop
sub
inc
mov
push
sbb
or
mov
pusha
push
mov
add
xor
push
por
fucomi
push
or
pop
scas
dec
pop
lods
stos
sbb
mov
mov
pop
pop
repnz
xchg
mov
test
insb
loopne
lcall
imul
inc
xorl
xchg
aas
dec
mov
pop
xchg
adc
mov
mov
fmul
ds
inc
es
test
xchg
std
mov
ss
daa
pop
sbb
jp
inc
popa
addb
xchg
xchg
inc
int3
and
inc
mov
lea
or
paddw
adc
push
adc
sub
mov
xor
mov
xchg
xor
sbb
mov
shrl
iret
ds
test
icebp
sti
xchg
add
lods
ljmp
sbb
pop
adc
data16
jge
push
and
mov
or
and
sub
pop
mov
jle
and
stc
repz
push
mov
sti
push
push
add
fyl2xp1
lea
jmp
cmpsb
jmp
jmp
and
inc
es
divb
bound
inc
adc
outsl
pusha
loopne
and
std
sbb
xchg
jp
jge
imul
adc
into
jo
stos
out
int3
insb
cld
xor
xchg
mov
call
bound
aam
xor
int3
xor
popa
and
push
mov
mov
dec
adc
stc
jmp
test
lcall
je
fs
stos
andl
mov
inc
in
pop
dec
mov
jbe
in
hlt
out
inc
gs
icebp
jo
leave
adcb
xor
pop
orl
xor
sub
mov
add
sahf
inc
es
mov
inc
cmp
pop
js
faddp
mov
adc
sbb
cmp
or
pop
outsl
movsl
int
out
movsl
dec
lret
bound
jmp
les
cmp
inc
ljmp
incb
ret
jne
mov
fdivp
sti
jbe
ljmp
out
popf
sbb
dec
or
adc
or
or
notl
cltd
sbbl
mov
push
jg
into
sub
or
adc
mov
je
cwtl
sub
fstpt
adc
cwtl
xor
dec
pop
jno
or
fimull
and
mov
shlb
inc
scas
mov
sti
and
rorl
adc
sbb
sbb
or
cwtl
lret
pushf
lock
lds
mov
outsl
fadds
dec
movsb
sbb
cmpsb
or
sbb
adc
mov
imul
pusha
and
test
cmp
mov
lods
push
mov
dec
or
xchg
dec
roll
xchg
cmp
int3
pusha
mov
xchg
repnz
into
push
cmp
loop
sub
mov
je
fsubrp
fcoml
lock
or
notb
call
or
xor
jne
xor
insl
push
lods
leave
sub
dec
and
mov
out
pop
pop
sbb
cmp
les
or
loopne
lods
lret
mov
insb
mov
not
cmp
lds
je
sarl
std
inc
test
dec
addr16
test
push
xor
inc
cli
xor
data16
fwait
sbb
bound
xchg
fcmovu
jmp
pushf
cmp
push
sbbb
loope
push
pop
push
int
call
inc
hlt
xchg
stos
insl
enter
mov
mov
jmp
inc
iret
enter
mov
fbstp
aam
pop
xchg
jmp
scas
in
and
xor
imul
pop
cmp
pop
dec
js
jmp
jecxz
mov
cmpsb
test
xchg
imul
cmpsb
icebp
cmpsb
mov
cmp
icebp
xchg
in
jp
cmpsl
cmpsl
js
cld
xchg
div
cwtl
in
leave
sbbb
imul
clc
gs
mov
sbb
lods
mov
ljmp
mov
aas
mov
dec
test
daa
sbb
jae
mov
adc
jge
in
pop
and
outsb
push
push
in
xor
adc
mov
insb
dec
pop
and
std
lret
or
orl
mov
aad
dec
call
xchg
mov
xchg
pop
adc
and
in
sbb
ss
mov
mov
test
add
cmp
sbb
ficoms
ret
mov
sbb
into
cmpsb
out
add
mov
push
in
jp
cltd
loope
lds
add
test
stos
ret
movsl
hlt
aad
and
icebp
movsb
js
repz
js
shufps
inc
pop
pusha
mov
imul
pop
aaa
or
mov
mov
mov
dec
cmp
push
sub
rcl
pop
rcll
repz
mov
dec
test
arpl
lret
fnstsw
inc
je
jne
sub
aad
pop
icebp
subl
ds
xlat
inc
xchg
cld
pop
dec
out
ljmp
pop
pop
cmp
scas
in
out
inc
cmp
jecxz
xchg
aad
add
outsb
adcl
xchg
mov
or
inc
push
and
test
push
jle
int
jge
fmul
push
call
lods
cmp
cwtl
or
xor
pop
mov
xchg
inc
push
pushf
std
testl
int
sbb
inc
cld
nop
je
xlat
aas
inc
xor
cmpsb
dec
lock
mov
insl
enter
enter
in
mov
mov
mov
dec
and
out
adc
rorl
adc
jl
shll
sub
inc
out
fs
sub
fisubl
mov
sbb
out
xchg
inc
std
sbb
psubsw
shll
sarb
fnstenv
addr16
pop
or
fdivrs
xchg
jge
inc
push
mulb
lret
mov
loop
lret
pop
mov
xchg
or
fwait
adc
sarl
xchg
insl
jmp
movsb
aam
adc
mov
call
adc
sub
mov
fidivrs
sub
mov
pop
pop
xor
jno
fmul
cmp
cmpsl
dec
pop
out
leave
jo
mov
pusha
dec
add
jnp
ficomps
cmovs
mov
js
adc
xor
push
ljmp
testb
shrl
jb
in
jb
lret
mov
das
pop
es
sub
or
lds
inc
aas
push
dec
sbbl
imul
xor
add
mov
jo
out
lock
mov
dec
icebp
mov
sbb
inc
dec
push
aad
push
imul
cmpsl
mov
jo
mov
adc
loop
xchg
cmp
aas
or
jbe
clc
mov
push
scas
out
and
outsl
fwait
lahf
mov
push
mov
cld
leave
inc
popa
gs
cmp
out
or
addl
mov
cmp
dec
adc
add
and
movsl
mov
js
xchg
fs
mov
jmp
and
notb
out
mov
cmp
sbbb
push
sahf
test
outsl
dec
pop
push
arpl
addr16
loop
mov
adc
mov
dec
fdivrl
mov
lods
arpl
xor
cmc
pop
adc
pop
stc
jb
lcall
or
cmpsl
adc
in
call
into
push
cmp
bound
dec
je
push
inc
add
pushf
mov
nop
outsb
aam
jb
mov
pop
mov
aaa
js
popa
jge
inc
and
push
lock
cltd
icebp
aam
dec
in
mov
xorl
xchg
ja
imul
inc
into
cmc
ret
xchg
xorb
add
adc
jne
xchg
xchg
push
cmp
ret
add
jns
je
pop
testl
insb
mov
push
cmp
pop
inc
push
out
and
bound
lods
sbb
sbb
insl
adc
popa
lea
sub
pop
or
inc
fld
hlt
cmp
mov
push
cwtl
repz
jge
nop
in
adc
inc
shlb
mov
stc
jmp
mov
loop
dec
fidivs
inc
mov
xchg
sub
std
idivl
stos
sbb
scas
xor
inc
enter
add
out
icebp
lret
loop
pop
loop
hlt
outsb
out
scas
mov
cmc
sti
cmc
push
sbb
pop
cmp
in
insb
pop
lea
les
aaa
xchg
inc
or
sub
lcall
or
cmp
sub
inc
jle
inc
push
mov
test
push
xchg
pop
add
pop
roll
in
addr16
jg
lea
add
clc
call
fists
xchg
enter
shrl
mov
cmc
jae
mov
push
push
pop
sub
cmp
popa
out
lea
cwtl
push
sti
int3
lock
xchg
out
loop
or
pop
mov
xchg
aaa
jmp
mov
test
divl
and
push
insb
je
stos
mov
lcall
bound
push
js
xor
outsl
jp
cli
mov
add
push
jnp
or
push
or
icebp
loopne
mov
lods
pop
test
gs
sbb
std
sub
dec
add
inc
fsubs
jp
ljmp
sub
sbb
cmp
ljmp
sahf
loopne
mov
shr
aaa
lods
mov
dec
and
xchg
sbb
imul
test
lea
sahf
adc
scas
cmc
pop
data16
int3
sti
out
dec
mov
inc
add
es
add
xorl
ja
sbb
pop
xor
iret
roll
adc
add
add
inc
pop
repnz
push
sbbb
lahf
or
pushf
dec
out
sub
leave
sti
dec
rorb
mov
shll
mov
sub
outsl
test
outsl
sbb
dec
xor
inc
xchg
jp
cmp
fcmovbe
jb
fcompl
fidivs
dec
cmc
add
mov
lret
inc
dec
pop
leave
inc
aas
xchg
fucomi
adc
jmp
and
sbb
xor
imulb
mov
jg
mov
sbb
cmp
rolb
out
push
aad
push
or
andl
outsb
xorl
mov
adc
xor
xlat
adc
and
push
mov
movsl
test
inc
inc
in
ret
pop
icebp
add
push
cmp
mov
in
sti
popf
loopne
mov
sbb
xchg
dec
scas
mov
or
mov
dec
inc
aam
xchg
fisttpl
loop
sbb
sub
popf
fistpl
and
push
or
and
aaa
out
mov
mov
inc
xchg
sti
ljmp
lahf
xchg
push
jl
arpl
pop
lods
add
adc
xchg
jb
stc
mov
loopne
xor
imul
sub
adc
js
sbb
add
dec
push
jle
add
addr16
sbb
fimull
jne
sub
jecxz
lods
inc
mov
add
icebp
inc
dec
dec
mov
addr16
adc
and
adc
pop
std
popf
jg
in
adc
cmp
cs
dec
mov
xchg
les
addb
mov
jnp
mov
jae
das
inc
mov
xchg
in
outsb
insl
and
jnp
mov
push
frstor
rcrb
xchg
jmp
cmp
repnz
dec
or
xor
repnz
pusha
mov
inc
shll
jmp
xchg
js
push
icebp
pop
dec
dec
fs
out
or
pop
xchg
push
dec
ficompl
aas
jl
in
add
int3
mov
rcll
inc
dec
ljmp
cmp
std
mov
cmp
pop
mov
dec
dec
jmp
nop
ficompl
sahf
lds
sub
sub
mov
sub
cmpl
mov
lahf
rclb
sarl
sub
mov
dec
push
push
mov
dec
adc
stc
fsubrl
icebp
sbb
jns
loopne
lret
pop
cmp
pop
in
push
jne
push
and
push
mov
mov
arpl
adc
dec
add
aam
and
test
loopne
xchg
mov
in
pop
cvtpi2ps
xchg
jae
cmpsl
into
jnp
or
ret
sti
pop
xchg
test
push
adc
outsb
out
pop
shlb
aam
repnz
out
fnsave
outsl
test
das
xchg
call
aas
dec
xchg
adc
loopne
addl
jp
xor
mov
fcmovbe
inc
out
sarb
mov
mov
fistpl
xchg
ret
jl
fistl
cld
mov
insb
mov
out
enter
and
ret
sub
stc
mov
xor
and
mov
mov
xchg
jmp
dec
test
test
clc
mov
push
push
pusha
dec
imul
mov
ljmp
jle
jmp
push
sub
jp
jmp
stos
push
fisttpl
outsl
adc
loop
sbb
cli
lahf
aas
jmp
sbb
popf
mov
mov
sub
movaps
mov
cltd
movsl
movsb
cwtl
dec
cmpsl
test
cmpsb
aas
mov
pop
aam
push
inc
aad
dec
lret
scas
jo
jp
mov
sti
outsl
repz
cli
xor
imul
outsl
aam
push
mov
push
push
cltd
xchg
cmp
lds
dec
pop
mov
jp
mov
jp
cmc
mov
stos
mov
add
outsl
inc
into
in
push
pusha
repnz
dec
movsb
cli
stos
pop
cli
stos
fldenv
dec
lock
fsts
mov
push
arpl
dec
out
push
call
cmpsb
xchg
jl
and
leave
arpl
les
mov
jge
add
mov
jecxz
je
stc
jl
das
or
xor
out
clc
or
mov
add
clc
jo
push
push
lret
inc
inc
lock
mov
in
mov
stos
filds
je
das
sub
push
fldt
lahf
sbb
dec
mov
adc
fcmovnu
mov
sbb
xchg
call
fldenv
sbb
js
lods
test
dec
or
pop
mov
xor
mov
shlb
sbb
adc
xor
xchg
clc
sar
sub
frstor
mov
xchg
pop
xchg
inc
or
cli
outsl
xchg
cmc
scas
xlat
outsb
xor
out
arpl
mov
imull
mov
push
jnp
rclb
bound
mov
mov
push
inc
pop
jmp
cmpb
les
aam
xchg
cmp
ficompl
imul
or
nopl
clc
stos
xor
inc
pop
fdivrl
lods
push
popf
daa
xor
nop
fcmovnbe
jae
test
hlt
mov
cmp
xor
jmp
jl
out
das
add
pop
xor
cld
mov
leave
sahf
shrl
mov
inc
push
mov
inc
sbb
inc
lods
clc
and
mov
out
aam
mov
or
loop
push
test
daa
daa
mov
push
cmp
divb
popa
ljmp
sbb
testl
lds
sbb
sub
aam
inc
sbb
dec
adc
sub
hlt
dec
insb
mov
xchg
ds
dec
xchg
call
mov
jo
cmp
jnp
inc
gs
cmp
outsl
or
adc
fcmovu
insb
pop
inc
mov
mov
pop
fwait
add
dec
pushf
and
outsb
loope
sub
sbb
mov
jmp
cmpsb
and
and
xor
pop
inc
lret
scas
icebp
loopne
mov
add
movsb
mov
xchg
out
xchg
push
jg
and
imul
push
test
outsb
pusha
pop
in
ljmp
dec
xchg
xchg
cmp
pop
mov
mov
lcall
imul
insb
cmp
xor
cltd
testl
cmp
cmc
aaa
cld
mov
mov
int
mov
inc
sub
daa
fldenv
ret
mov
xorl
test
gs
ds
les
pop
dec
push
fstp
mov
xor
xor
hlt
imul
push
inc
out
push
inc
fnsave
fxch
push
je
or
movq
jle
into
mov
daa
mov
out
call
in
pop
cmp
adc
xchg
arpl
xchg
mov
pop
mov
mov
rorl
lea
xor
or
lods
xchg
adc
repz
adc
out
inc
mov
lods
jns
inc
test
and
mov
cmp
fildll
adc
mov
aad
in
sub
dec
loope
adc
lock
stos
xchg
addl
inc
enter
sbb
sub
imul
cmp
mov
cwtl
and
dec
inc
in
scas
cltd
mov
sbb
aaa
dec
lahf
cmp
mov
sbb
data16
jp
icebp
fidivrs
imul
lret
loopne
xor
leave
xor
icebp
mov
nop
shl
mov
popl
mov
xchg
or
xor
inc
push
insb
adc
cmp
adc
or
push
addb
fadd
inc
push
ret
xor
addr16
lods
add
jne
dec
mov
int
lock
mov
mov
lret
mov
jge
test
lahf
push
jg
ss
xchg
cld
ror
push
ret
add
lods
add
out
pusha
notl
dec
test
cltd
repnz
and
lret
ret
pop
push
test
daa
out
adc
dec
in
push
mov
adc
outsb
adc
pop
and
mov
mov
xchg
pop
fsubs
add
jo
cmp
lea
push
shll
ss
faddl
mov
repnz
cmp
fistpll
das
mov
fstps
jp
dec
je
mov
adc
push
cmp
or
aaa
ret
clc
xchg
loopne
xchg
xchg
jne
adc
cmp
lret
xor
mov
and
rcll
aas
std
cltd
sub
or
dec
cmp
sbb
daa
xor
adc
iret
pop
mov
fs
sub
sbb
mov
bound
jae
push
roll
cwtl
or
adc
repz
pop
mov
rcr
repz
insb
aam
pop
fisttpll
dec
dec
push
xacquire
or
inc
push
adc
sub
test
xchg
add
hlt
adc
pop
ret
lds
mov
sbb
ss
xor
insl
inc
sub
lret
les
and
pop
mov
lahf
xchg
stos
pop
sarb
stc
sarb
cwtl
and
mulb
lahf
mov
in
or
jb
or
mov
push
ds
cmp
jmp
mov
fisubl
jecxz
mov
imul
cmp
daa
insb
arpl
add
pushf
dec
or
cs
mov
lret
sbb
sbb
xor
loop
pop
lea
clc
add
sti
hlt
aaa
pop
sbb
push
dec
add
pusha
sub
xadd
push
hlt
mov
ljmp
or
movsb
out
push
lods
xor
ja
fnsave
add
jl
iret
xor
mov
inc
fcomps
in
popa
aaa
shl
enter
nop
xor
mov
dec
cmc
sti
and
push
into
andb
lea
shll
fdivrp
data16
adc
stos
inc
xor
xchg
and
js
clc
push
pusha
int
mov
and
aas
mov
pop
adc
dec
sub
sbb
add
int3
mov
test
xchg
mov
jge
ja
add
ficoms
dec
in
das
xor
mov
or
add
pop
lock
push
ss
fldcw
lock
fldl
pop
mov
cmp
mov
or
daa
cs
mov
jbe
jge
ret
xchg
mov
xchg
loope
int3
jbe
ficomps
test
dec
jbe
sbb
das
pop
dec
pop
xor
int3
adc
bound
aad
sti
in
add
mov
mov
std
ret
inc
inc
rclb
pop
test
sub
mov
jno
lods
add
jnp
xorl
mov
imull
aad
dec
mov
test
out
sub
mov
arpl
and
aam
js
jns
inc
add
sbb
cmp
dec
cmp
movsl
push
in
cmp
mov
int
mov
xor
inc
mov
imul
xor
mov
scas
mov
aas
mov
fsubl
lods
mov
or
dec
mov
mov
dec
or
les
xlat
xchg
push
add
test
pushf
adc
mov
push
dec
inc
fstps
lods
inc
inc
mov
push
insb
mov
popa
xchg
mov
daa
movsl
adc
sub
data16
inc
mov
cmp
movsb
int
into
iret
test
and
jl
jae
pop
negb
hlt
pmaxsw
fisubrs
scas
cli
sahf
ljmp
pop
sub
ds
jp,pn
push
lcall
into
fidivrl
ljmp
pop
sub
ds
jp,pn
push
lcall
into
fidivrl
ljmp
pop
sub
ds
jp,pn
imul
decb
into
fidivrl
ljmp
pop
sub
sub
loope
icebp
xor
and
adc
add
jb
adc
incb
xchg
pusha
xorb
loop
shlb
shlb
push
shlb
jle
add
jb
bound
mov
mov
jo
gs
shlb
ret
rcl
and
lock
addb
dec
mov
xorl
inc
nop
dec
xchg
inc
pop
mov
adc
bound
mov
xchg
lods
int
mov
loop
ffreep
hlt
faddp
faddp
xchg
mov
sbb
inc
push
scas
pop
lahf
jle
or
cwtl
cmp
adc
adc
mov
jnp
jae
inc
mov
loop
cmpsl
sub
lods
cld
out
dec
dec
out
cmpsb
lea
inc
push
mov
mov
cmc
or
push
ret
add
das
xor
lahf
std
mov
ljmp
mov
jo
push
loop
sub
ror
cltd
mov
clc
iret
mov
lods
sub
addl
jg
mov
shlb
ror
shlb
add
xchg
sbbb
push
mov
cmp
pusha
mov
mov
and
jbe
rclb
mov
or
lds
mov
icebp
dec
divl
out
xorb
push
cmpsl
push
jg
inc
mov
sbb
pop
aad
notl
sahf
aad
lock
lea
pop
orl
and
inc
mov
inc
mov
jo
add
adc
and
xor
shlb
adc
add
jb
bound
mov
mov
jo
add
adc
and
xor
rolb
jne
adc
loopne
fistl
adc
test
xor
cld
push
add
lock
fnstcw
out
push
mov
cltd
stos
add
mov
mov
cwtl
inc
cmp
sub
add
bound
inc
sub
inc
lock
stos
or
lods
sti
pop
xor
popa
pop
xchg
adc
xlat
jae
sbb
ds
dec
sbb
cmp
or
cwtl
outsl
test
pop
lret
pushf
shr
movsb
xchg
sbb
dec
arpl
ds
mov
dec
sub
adc
in
in
cld
lds
jmp
and
shl
sbb
jmp
cmp
xchg
pop
jecxz
lods
fadds
push
jge
icebp
out
dec
cwtl
jae
out
ret
ret
call
jecxz
inc
or
mov
fcoms
ret
add
sbb
inc
xchg
or
leave
setae
xchg
std
jbe
jae
cmp
andl
hlt
adc
or
sbb
cmp
inc
sub
lods
sar
cmc
mov
subl
and
fists
sub
and
xchg
mov
sbb
dec
cmp
testb
add
and
repz
mov
mov
xor
pop
inc
dec
cmc
movb
test
out
ret
jne
popa
lods
dec
xor
jmp
inc
rclb
js
sbb
ret
cmc
xchg
pop
adc
push
pop
mov
ljmp
fwait
shrb
or
fnstenv
movsl
movsl
jo
mov
sbb
outsl
push
cmpsb
insb
pop
shll
jnp
lea
xchg
jge
lret
or
mov
jle
hlt
inc
sbb
push
xchg
ficoms
mov
pop
inc
gs
xor
in
pop
arpl
adc
jg
sbb
daa
int
xchg
sub
fs
lods
ret
pop
mov
or
inc
push
aad
add
sub
mov
jo
cwtl
and
cmpl
pop
aaa
shl
and
adc
out
shlb
out
addr16
repz
daa
cmp
adc
and
adcb
push
fbstp
xor
loop
cltd
ret
cwtl
lcall
or
inc
inc
mov
jns
iret
std
faddl
push
stc
add
insb
adc
push
dec
std
in
inc
xchg
xchg
xor
shlb
movsb
xor
pop
jp
dec
out
push
xor
lods
pop
lds
lret
or
mov
gs
xor
decl
push
pop
or
inc
push
jnp
cmp
adc
movsb
iret
add
lods
popa
push
lods
rcrl
xor
pop
je
xchg
in
xchg
popf
mov
xor
pushf
pushf
jnp
addr16
ja
aaa
fcom
cmp
xor
and
jae,pn
mov
xorb
aas
cld
lods
shll
jns
xchg
scas
cmp
xchg
fwait
out
jg
pavgw
mov
clc
mov
add
aam
or
sbb
sub
xchg
cwtl
loopne
dec
push
rcll
inc
or
jnp
pop
xor
mov
cltd
je
adc
ja
adc
incl
add
sbb
xor
push
sub
js
jno
jbe
ss
je
leave
dec
add
push
xor
popf
or
xor
mov
loop
or
jnp
repz
sub
jecxz
jg
std
cmp
out
out
push
mov
xor
push
pop
sbb
cmp
and
leave
xor
ljmp
push
inc
jmp
outsl
pop
gs
xor
insl
sub
subb
sti
aaa
fistpll
add
jmp
cmpsl
cltd
jge
out
and
test
leave
pusha
add
push
sbb
repz
add
dec
mov
jle
cmp
xchg
cli
xchg
addr16
int
icebp
cmp
mov
cs
cs
pop
loopne
fimuls
push
add
adc
enter
cwtl
jp
pop
mov
iret
adc
out
fmuls
cmp
std
sub
and
add
lcall
popa
dec
bnd
mov
shl
outsl
push
ss
mov
insl
push
test
out
lods
icebp
inc
mov
mov
mov
pop
nop
aaa
movb
cli
stc
mov
push
testb
aas
xchg
lcall
pop
mov
pushf
les
xchg
aaa
into
cmpb
push
roll
xor
mul
add
xor
mov
cmpsl
and
adcl
loope
test
cmpsl
jge
pushf
in
pop
lods
dec
and
stos
cmp
aas
push
cli
push
add
inc
imul
adc
sub
das
inc
xchg
mul
mov
outsb
test
js
xor
popa
rcll
or
outsb
inc
add
jle
dec
xchg
mov
add
outsl
inc
adc
fwait
push
jbe
mov
imul
or
push
pushl
jp
and
cmp
loop
or
sub
idiv
pushl
cmp
aam
lcall
push
mov
mov
mul
mov
jne
dec
loopne
push
jmp
push
and
pop
mov
mov
stc
out
faddp
enter
int
cmp
mov
jmp
clc
aad
sarl
jo
xchg
cmpsl
jg
and
lea
pop
xchg
push
icebp
nopl
jbe
sub
xchg
xchg
push
mov
pop
adc
leave
idivl
outsl
popf
jge
and
loope
mulb
mov
mov
bound
mov
sti
loopne
jle
add
stos
clc
add
sbb
jg
fisubl
es
repz
push
push
pop
jp
repnz
shrb
addr16
add
cld
xor
lcall
sub
mov
stos
sbbl
int3
jmp
dec
out
mov
mov
jecxz
gs
aad
das
xchg
inc
mov
fdivs
add
test
lcall
sub
xchg
xchg
inc
test
sbb
mov
or
xchg
inc
xor
cmp
dec
ljmp
xor
aas
lods
mov
mov
cmpsb
sbb
cmp
leave
jmp
loope
mov
mov
cmp
dec
cmpsl
mov
xchg
push
movsl
xorl
loope
or
loope
xchg
or
jg
sub
pusha
shll
dec
icebp
mov
push
mov
xor
movsb
and
inc
lcall
gs
mov
movsb
lock
mov
push
dec
add
xor
push
negb
int3
mov
int3
mov
loopne
mov
mov
orb
ficompl
lahf
lock
dec
sbb
daa
mov
inc
cld
pop
mov
push
and
mov
adc
aam
fldcw
jecxz
sub
lahf
pop
fildll
mov
je
ss
imul
add
cmpsb
mov
sub
daa
fwait
dec
push
cmp
sti
add
mov
mov
das
sbb
inc
adc
jns
and
sub
pushf
iret
push
loopne
mov
sbb
aad
pop
jno
int
test
jge
fwait
ret
jbe
mov
mov
mov
cmpsl
orl
ljmp
xorb
clc
dec
sahf
das
jno
xor
mov
out
push
cwtl
pop
xchg
inc
mov
mov
pop
dec
or
je
pop
pop
pmaxub
rolb
pushf
scas
xor
pop
outsl
ret
sbb
add
jmp
pop
inc
inc
lret
mov
lea
fstpt
fwait
mov
inc
daa
dec
lods
addr16
cmc
mov
out
ficoml
jns
adc
push
and
ljmp
rorl
sbb
cmp
xorl
insl
pop
ss
rcr
popa
adc
xorb
mov
std
sbb
cmpb
adc
mov
sbb
jmp
jb
push
hlt
add
jo
adc
jnp
hlt
gs
and
cmpsb
lret
cld
mov
insl
pop
inc
add
sahf
and
cmp
add
xchg
int
gs
movsb
cmpsb
cmpsb
mov
addsd
es
or
xor
out
push
dec
cmp
pushf
lahf
xchg
dec
and
push
mov
mov
out
je
cmpsl
jbe
xor
sub
dec
mov
std
jl
fsubl
std
movsl
xor
lds
daa
fisttpl
dec
loope
insl
jmp
ffreep
scas
fcoml
jge
mov
xor
jge
imul
aas
ja
xchg
add
xchg
xor
mov
mov
jmp
mov
jg
cmp
shll
add
std
jns
mov
jno
sbb
jmp
add
out
ss
mov
icebp
stos
mov
inc
gs
rcrb
call
test
repnz
push
hlt
push
xchg
mov
in
xor
orl
mov
test
mov
dec
lods
xor
mov
mov
pop
dec
and
fsubl
pop
mov
insb
jl
cmp
mov
das
cmp
add
insb
jne
stc
test
rcl
loopne
push
push
iret
dec
add
shrl
rcl
rorl
loopne
loop
std
and
xchg
jmp
lods
add
arpl
pop
clc
pusha
clc
xchg
pop
testl
lret
into
push
cs
bound
aas
popa
sbb
insl
les
cmc
bound
mov
test
ret
adc
xor
jl
out
xor
loope
je
mov
adc
xchg
inc
gs
bound
pop
hlt
mov
jge
leave
cmp
mov
pop
bound
mov
lcall
arpl
mov
xchg
dec
in
arpl
dec
test
dec
aas
or
mov
js
xchg
mov
lret
stos
add
mov
mov
cmp
inc
mov
fs
mov
inc
cmp
or
ljmp
popf
push
negl
les
sbb
stos
xor
and
addr16
rcrl
in
mov
lcall
cmp
and
call
test
fstps
cmp
mov
push
dec
iret
sbb
dec
cmpl
cmp
pop
daa
cmp
ret
outsb
mov
lock
movsl
outsb
and
insb
mov
nop
sbb
outsl
rorb
leave
mov
out
xor
out
scas
add
pop
adc
xchg
mov
add
dec
test
cwtl
jp
ret
daa
push
mov
jle
aam
xor
ficoms
aad
push
inc
mov
rcll
std
push
in
dec
cmpsl
sub
dec
push
sar
cmp
and
mov
dec
shl
sbb
sarl
sbb
pop
mov
add
repnz
inc
jae
and
mov
sbbb
add
push
cwtl
jnp
aam
int
arpl
je
loopne
loopne
pop
cmp
mov
mov
test
and
daa
mov
jmp
push
and
adc
fdivrl
mov
rcll
sbbb
sub
lret
mov
daa
in
cmc
stos
aad
push
pop
xchg
push
sub
jo
arpl
inc
cltd
or
scas
jne,pn
push
clc
xchg
sbb
int
popa
add
adc
xchg
fwait
dec
cmp
dec
or
lret
or
sbb
call
xchg
dec
aaa
negb
pop
ljmp
xor
popa
add
jmp
push
sti
dec
cmp
lret
mov
lods
mov
push
cmp
cmp
lods
sbb
insb
xchg
xchg
xchg
sbb
rclb
cmp
hlt
mov
fdivr
neg
aad
sbb
cmpsb
and
imul
lcall
mov
mov
cmpsb
repnz
out
icebp
mov
add
sbb
repz
add
hlt
adc
aam
sub
pop
jno
imul
push
mov
mov
mov
adc
sbb
and
mov
mov
or
rcr
stc
icebp
adc
rcr
ret
mov
cmp
pop
add
sbb
leave
loope
push
int3
xchg
out
mov
jp
fcomip
ds
xorl
push
leave
frstor
mov
sub
pop
int
sbb
lret
in
data16
aam
sub
add
adc
dec
or
pushf
mov
cmp
mov
js
push
pop
dec
push
dec
xor
push
push
pop
adc
sti
xchg
pop
pop
or
jp
or
mov
pusha
and
movsl
adc
add
jmp
jb
jae
lcall
inc
add
adcb
and
push
lahf
stos
push
in
push
xor
imul
add
cmpsb
aas
xlat
out
insb
mov
lret
pop
pop
pop
sub
push
pop
push
cmpsl
xchg
sub
inc
arpl
shrl
xchg
sbb
jge
in
fwait
repz
sahf
mov
xchg
lret
lods
fnsave
push
rclb
add
jns
fnstsw
pushf
sbb
inc
pop
adc
lret
scas
and
and
addl
mov
out
xlat
aam
flds
push
jl
pushl
mov
pop
or
cmp
ljmp
adc
jbe
cld
sbb
lods
inc
ljmp
dec
or
cld
mov
inc
and
lock
push
loope
pop
fs
ljmp
les
dec
imul
add
test
sbb
jge
xchg
popa
cmp
sub
fstps
inc
sub
push
push
ljmp
xchg
inc
shrb
sbb
cmp
cmpsb
enter
pop
mov
pop
pop
fmuls
pop
push
mov
cwtl
je
movsl
inc
cmp
jp
xchg
lcall
inc
xchg
mov
mov
sarl
js
adc
mov
pushf
adc
mov
imul
stos
cmp
xor
xchg
dec
pushf
leave
and
jge
mov
movsb
cmp
cltd
dec
push
out
sbb
inc
and
test
cmp
sbbb
repnz
aam
xor
lret
je
jb
jg
jmp
pop
cmp
cli
xor
das
sub
mov
xchg
sbb
int
xchg
xchg
call
jbe
nop
xor
mov
loope
xor
xchg
mov
repnz
cmp
or
test
out
xor
dec
dec
dec
xchg
jge
movsb
push
inc
push
inc
jbe
or
dec
test
sarb
sahf
sbb
enter
stc
lret
and
rorb
adc
pmaxub
test
ret
aas
das
sbb
stc
repz
sbb
cmp
std
ror
das
cwtl
mov
inc
or
mov
sub
lea
mov
xor
in
adc
outsb
push
xor
or
rcrl
adc
pop
push
imul
jb
pop
pop
sbb
imul
rcrl
leave
sbb
int3
adc
inc
xlat
pop
push
fisubs
test
lcall
inc
negb
xchg
insl
xor
fcoms
or
fwait
mov
mov
adc
std
fldl
das
inc
in
mov
push
mov
and
or
ds
and
pop
idivl
inc
or
push
les
jle
cmp
scas
pop
inc
xor
jecxz
movsl
pop
loope
je
or
inc
jmp
scas
fdivrl
inc
fstpl
inc
test
mov
add
push
popf
mov
out
ss
sub
xlat
aas
add
out
fisubrl
add
jns
arpl
dec
jns
fsubs
inc
mov
enter
jle
loopne
add
lcall
xchg
mov
mov
xchg
sub
jae
push
or
leave
or
les
jp
inc
loop
shrl
and
cmp
movb
pop
xchg
jne
enter
lcall
jb
inc
popf
or
push
ds
das
pushf
dec
stc
rol
out
in
jle
lods
je
lcall
mov
jo
test
ret
sbb
jp
sub
sbb
sub
fucom
dec
sub
push
xor
xor
cli
in
aad
mov
or
jp
leave
daa
xchg
xchg
jg
aad
nop
cmpsb
cmpsl
sub
addr16
fcmovbe
data16
pop
sub
pop
adc
fldcw
and
inc
movsb
stos
and
popl
negb
or
imul
mov
jg
mov
sbb
jo
dec
mov
mov
out
js
push
mov
gs
popa
inc
mov
pop
cld
sbb
loopne
cmc
cs
lret
dec
in
dec
mov
out
insb
xor
clc
inc
rcll
xor
push
mov
fsubrp
adc
mov
push
les
stos
psubd
ror
pop
insb
mov
iret
hlt
push
shrb
ret
es
jnp
ret
stc
mov
mov
fwait
test
mov
outsl
dec
jp
test
xchg
rclb
add
lods
add
jae
nop
movsl
jnp
fists
xor
in
stos
xor
and
insl
xchg
loope
pop
mov
cmpsl
aaa
insl
sbb
sub
inc
jge
outsl
xor
add
xor
dec
fisubrl
push
imul
inc
call
cltd
psrad
jne
pop
fmulp
pop
dec
inc
pusha
lcall
movsb
outsb
push
js
mov
mov
mov
cld
es
dec
jne
xchg
mov
iret
lods
sbb
add
mov
sarl
sti
fisttps
xor
or
idivb
dec
xor
pop
jbe
push
into
jle
aam
xchg
inc
das
fstl
push
mov
scas
inc
loope
mov
flds
int
into
shll
xor
in
scas
adc
arpl
pushf
pop
sti
cli
and
mov
push
add
jmp
mov
insb
mov
pop
cmp
mov
add
ja
push
nop
and
cmc
adc
or
xor
pushf
sbb
sbb
rcrb
push
scas
cmp
mov
xor
push
in
xchg
adc
hlt
mov
pop
insb
icebp
dec
lds
mov
gs
xchg
inc
mov
out
mov
ja
or
aas
repz
mov
or
push
mov
cmp
lods
fadds
mov
out
imul
mov
lods
into
mov
or
sub
and
insl
mov
push
rol
ja
data16
rorb
cmp
enter
xchg
addr16
ficoml
mov
mov
popf
movsl
xor
into
xchg
dec
mov
cmp
mov
sbb
stc
lcall
mov
xor
test
test
adc
mov
not
shrb
fs
adc
dec
mov
outsl
test
imull
jo
push
and
mov
dec
test
inc
push
mov
int3
push
pop
mov
daa
jae
adc
mov
aas
inc
sub
sti
into
ss
dec
mov
lcall
lcall
imul
sbb
fimuls
mov
adc
lods
or
jle
outsb
cmp
lret
repz
lods
cmp
and
mov
add
xchg
pop
daa
pop
in
and
ds
nop
jno
cld
sbb
and
jp
sbb
mov
outsb
and
inc
and
push
or
inc
adc
or
or
loope
inc
mov
mov
pmaxub
dec
hlt
push
dec
enter
dec
out
mov
jae
pop
adc
inc
mov
sbb
xor
pushf
cmp
es
lret
lock
int3
mov
sti
loope
test
in
pusha
pop
test
xor
hlt
jo
add
xor
lock
push
hlt
aam
add
dec
loop
jp
sbb
fdivrl
sarb
dec
cmp
mov
dec
idivb
sbb
shlb
imul
mov
cmpsl
and
rep
add
jo
lods
pushf
pushf
pop
mov
mov
cld
sub
push
rcrb
push
mov
pop
push
lock
stos
inc
dec
jae
andl
aad
call
jno
ds
mov
orl
repz
sub
pop
data16
pop
lock
add
push
mov
push
and
or
cmc
dec
sub
or
adc
inc
insb
stos
pop
sbb
pop
jecxz
fs
popa
out
xor
jnp
mov
popf
dec
leave
sub
leave
aad
dec
test
notl
rolb
icebp
lret
cwtl
cmc
inc
out
add
shlb
sbb
lahf
pop
mov
xor
pop
aad
jo
cmp
arpl
std
pop
push
inc
test
std
aad
ret
stos
out
xor
and
inc
xchg
aad
pushl
nop
movsl
sbb
xlat
gs
mov
adc
test
add
sbb
sub
cmpsl
adc
rclb
add
jb
bound
mov
mov
jo
add
adc
and
xor
shlb
adc
add
jb
bound
mov
mov
jo
add
adc
and
xor
rclb
jb
add
loop
bound
mov
mov
jo
add
adc
and
xor
sarb
loopne
lock
jb
push
mov
pop
cli
cmp
pop
test
cmp
push
sbb
and
lret
jns
test
add
add
add
or
push
add
add
add
add
lcall
add
add
add
add
add
add
pop
add
add
ret
add
add
aas
add
add
add
inc
add
add
add
add
mov
add
xor
push
mov
add
add
cmp
inc
add
lods
add
mov
add
add
dec
add
add
add
add
inc
add
add
add
add
js
ljmp
add
xchg
add
add
xchg
add
add
add
inc
add
add
add
add
add
add
popf
add
add
push
add
inc
add
add
add
add
add
mov
mov
add
add
add
dec
add
add
add
sub
out
add
or
add
add
add
add
add
daa
add
ret
add
add
add
push
add
loope
inc
add
nop
add
add
add
add
add
adc
add
add
add
out
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
popf
add
add
add
stos
add
add
add
add
add
inc
add
add
add
xchg
add
add
add
jo
and
add
add
add
add
add
add
add
add
loope
pop
add
add
add
add
dec
add
jo
or
add
mov
popa
add
sbb
sbb
add
add
imul
add
add
add
add
cwtl
add
add
jo
xor
cmp
out
int3
add
jo
dec
add
aas
add
add
mov
add
or
jbe
or
dec
add
add
fiaddl
nop
add
add
add
inc
add
add
xchg
add
add
add
add
stos
add
add
xlat
add
add
add
add
add
or
add
add
add
or
sti
add
add
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
xchg
add
push
add
pop
add
add
add
add
add
add
add
add
push
int3
add
add
add
add
add
jo
cltd
add
mov
adc
xor
adc
dec
add
add
add
imul
add
xchg
pop
add
add
add
adc
mov
add
add
add
imul
mov
add
in
add
lcall
add
call
add
add
jo
lcall
add
add
add
addb
add
add
xor
add
dec
adc
ljmp
xchg
jne
je
mov
xor
decl
sar
fucomp
and
add
mov
inc
fisttpll
insb
cmp
mov
inc
mov
loop
mov
and
xchg
dec
ret
jno
pop
and
iret
fisubrl
or
sub
fstl
popa
out
icebp
jl
pop
add
mov
add
pop
pop
push
jmp
sbb
repnz
repnz
outsl
repz
inc
fs
and
leave
cmp
iret
xor
aam
hlt
out
pop
or
in
push
test
outsl
xor
add
xchg
or
aaa
sbb
and
insb
mov
jge
jbe
sar
push
or
dec
xor
rcr
xor
pop
and
mov
outsb
xchg
insl
push
pop
movsb
adc
cmp
insl
pop
data16
cmp
jns
or
call
ljmp
ret
sbb
add
jb
out
iret
push
mov
sub
aad
adc
stos
das
pop
int3
fidivrl
roll
push
mov
jp
int
popa
mov
dec
iret
fwait
push
bound
cwtl
daa
lret
pop
repz
lock
push
jns
insb
sub
push
pop
cmc
bound
ljmp
hlt
sub
push
xchg
push
test
int
pop
mov
adc
js
cmp
imul
fcomps
pop
pushf
jnp
out
or
mov
js
mov
bndstx
xor
sub
outsl
mov
fiaddl
sub
incl
rcll
lea
and
xchg
imul
or
or
adc
popa
pop
sbb
xchg
rol
add
cmp
jg
dec
lcall
push
pop
ret
mov
pop
test
scas
sarb
lock
xor
mov
push
dec
shrb
cmp
popl
popa
adc
pop
std
in
jmp
scas
cmp
mov
mov
cld
xlat
test
adc
add
scas
in
stos
outsl
or
jbe
inc
adc
int3
loopne
loope
int3
out
imul
packuswb
andl
out
xchg
stc
xor
dec
mov
xor
loop
jns
stos
neg
push
pop
or
cmp
scas
cmp
mov
outsl
pop
pop
loop
cmp
mov
jg
cs
or
xchg
stc
and
jno
aad
setle
sbb
ret
push
insb
sbb
or
jmp
add
add
add
rolb
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
orl
movl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
push
pushl
call
mov
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
hlt
add
mov
hlt
add
lods
hlt
add
movsb
hlt
add
pushf
hlt
add
xchg
hlt
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
hlt
add
cld
hlt
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
testb
dec
testb
push
testb
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
testb
lods
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
psubb
add
testl
add
testl
add
testl
add
testl
in
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
insb
stc
add
je
add
jl
add
test
add
mov
add
xchg
stc
add
cmpsl
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sar
add
stc
add
fdivr
add
in
stc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
