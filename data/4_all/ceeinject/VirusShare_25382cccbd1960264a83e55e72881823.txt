call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
ficomps
into
cs
ds
andl
jecxz
xlat
je
mov
dec
scas
push
jle
push
fiadds
push
ficomps
into
cs
ds
dec
sahf
pop
sahf
outsb
mov
sahf
dec
scas
jle
outsb
push
insb
fimuls
ds
cs
push
xlat
cs
testb
xchg
outsb
cmpsb
jle
mov
insl
ret
sbb
push
mov
fwait
dec
nop
inc
push
xchg
jp
cs
push
mov
pop
xchg
test
daa
jp
insl
mov
fwait
test
ficoms
mov
nop
inc
adcl
sbb
xor
push
mov
inc
push
movsl
sub
dec
mov
adc
and
mov
dec
scas
adc
xchg
sahf
mov
imul
push
xor
mov
jmp
jle
add
aam
xor
sahf
mov
lret
ds
pop
xor
add
lcall
cmp
data16
ret
xlat
popf
sbb
push
mov
and
mov
mov
sub
mov
outsb
and
adcl
sub
leave
push
fisubrs
out
out
dec
sahf
pop
mov
jle
mov
push
scas
addr16
push
out
and
das
dec
fisubrs
inc
fwait
push
mov
sub
or
jl
mov
sti
dec
scas
jp
or
jnp
or
push
mov
cmpsl
dec
lea
dec
sahf
sbb
push
lret
jmp
iret
sub
mov
sbbb
imul
into
inc
lcall
outsb
mov
sahf
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
fidivrs
fnsave
adc
mov
lods
xchg
dec
out
scas
int
jae
movsb
inc
push
inc
pusha
xchg
xchg
jg
out
ljmp
dec
xorb
fildll
and
movl
into
decl
add
test
in
cmp
sbb
mov
andl
cmp
dec
das
mov
sub
jb
frstor
adc
sbb
mov
mov
add
data16
inc
push
mov
sti
cmpb
jle
ret
es
push
js
rorb
test
pop
pusha
push
movsb
ja
aam
xchg
sbbb
aad
xchg
in
ret
in
decl
mov
aas
xor
in
out
out
imul
push
xchg
xor
jbe
sub
movsb
jle
xor
sahf
cmp
lret
in
scas
imul
idiv
sub
loopne
mov
jnp
mov
and
mov
cmp
out
fwait
xor
pop
leave
sbb
outsl
or
and
mov
push
jnp
dec
mov
push
add
inc
inc
clc
xchg
sbb
adc
in
sahf
sub
outsl
rcrl
je
jmp
cmpsb
cmpsl
add
clc
push
inc
sbb
shll
lods
mov
fstpl
lahf
enter
jmp
cmp
gs
subl
ficomps
out
lods
xchg
in
fsubrl
fmul
sahf
push
rol
lahf
add
cmc
cmpsl
cmp
stos
add
shlb
in
jbe
gs
das
inc
arpl
aam
je
mov
cltd
mov
push
dec
mov
daa
mov
or
stc
fnstenv
ja
cmpsb
in
pop
mov
es
decb
in
push
sbb
sub
sub
and
aaa
mov
push
or
adc
imul
push
jmp
sbb
cmc
xchg
sbb
mov
and
stos
push
dec
mov
add
push
inc
clc
push
mov
sub
loop
pop
mov
mov
dec
jle
sbb
scas
sub
push
push
incb
and
repz
std
cmp
jb
xchg
mov
mov
les
jle
daa
out
mov
jle
inc
mov
lcall
rcll
cli
sar
in
jl
jmp
pop
xchg
xor
sub
jp
pop
pop
xor
ja
movsl
mov
lods
add
fiaddl
lcall
mov
mov
bound
popf
cs
push
cmp
stc
or
push
mov
shll
sahf
jecxz
aad
hlt
cmc
xorb
adc
sarb
mov
fstl
lock
inc
mov
and
test
mov
mov
xor
lock
inc
xchg
jo
xlat
or
inc
sti
add
daa
bound
mov
sub
pop
out
in
mov
popf
lods
add
insl
lea
jl
jb
push
sbb
daa
jmp
cmp
adc
inc
inc
add
inc
xchg
or
inc
and
adc
hlt
dec
lret
fidivrs
hlt
jl
xlat
imul
mov
xchg
mov
add
mov
xchg
jno
ljmp
pop
jne
ss
mov
xchg
fmul
cltd
shl
mov
addb
push
mov
repz
jno
les
sbb
insb
scas
inc
or
pop
sti
add
shlb
ss
ret
and
pop
sbb
mov
push
jg
mov
mov
push
aaa
adc
fs
scas
mov
pop
xchg
cmp
fisubl
negl
add
xchg
pop
insl
sbb
popa
xchg
xchg
jg
mov
hlt
mov
lods
insl
cltd
inc
mov
push
test
mov
or
or
nop
lret
out
xlat
cmp
jb
hlt
sti
and
decl
btl
les
imul
and
rclb
or
add
mov
je
and
loope
mov
mov
mov
div
sub
std
call
inc
mov
inc
sbb
jmp
dec
fistpl
cmpsb
pusha
xchg
sub
sub
fnstcw
xchg
add
das
fisttpll
movsb
jecxz
dec
inc
clc
xchg
push
std
movsl
es
gs
test
sub
imul
cmpps
nop
data16
mov
xchg
in
add
dec
sub
mov
adc
int
movd
sub
fdivl
lret
js
xor
or
mov
ret
push
stc
das
cmp
cmp
sub
add
lret
sub
sarl
push
fdivrl
pop
xchg
loop
add
pop
lock
pop
push
cmp
hlt
inc
sub
mov
adc
cmp
inc
loopne
sti
jne,pn
lock
ljmp
mov
lcall
shl
mov
and
data16
sarl
scas
movsb
or
push
icebp
in
add
adc
cmp
rorb
dec
mov
orb
sub
push
adc
push
fwait
sbb
aaa
pop
jmp
ja
in
push
dec
ret
or
faddp
or
push
test
or
cmc
not
repz
xchg
push
push
sbb
shl
push
pop
mov
inc
sub
movsl
mov
mov
pop
sbb
ret
fwait
cli
inc
cmp
dec
pop
xchg
sub
fcomi
stc
shll
dec
dec
test
push
jg
movsl
movsb
scas
rcrb
lea
ds
jbe
lahf
aas
inc
loopne
stos
xchg
scas
mov
outsb
sbb
loop
mov
dec
iret
cmp
subl
lods
lret
ret
fstl
inc
movsb
mov
jno
int
and
cld
sub
stos
shll
or
cmp
loopne
pusha
in
and
lret
push
jg
mov
rol
jne
push
iret
lea
xor
idivb
in
out
cs
fwait
aam
mov
dec
inc
cmp
arpl
adc
into
jge
and
xorb
sarl
pusha
pop
aam
add
aad
mov
push
sbbl
push
push
mov
stos
mov
ljmp
pop
fisttpll
ja
push
les
repz
fdivrl
repnz
call
push
sarb
mov
outsb
subb
sbb
dec
loope
jmp
aaa
jmp
repnz
pop
in
add
pop
jne
mov
inc
mov
mov
fcomps
outsl
in
pop
popf
sbb
sbb
sub
sbb
pop
fcmovnu
dec
rcl
add
in
dec
cltd
pop
test
inc
cltd
ja
dec
lcall
fcoms
insl
pop
in
sbb
xchg
cmp
out
jae
daa
adcb
pop
jl
fabs
inc
hlt
orl
and
lds
adc
cmpsl
in
dec
test
add
xchg
adc
push
dec
xlat
sbb
lcall
mov
xor
lods
push
or
sbb
mov
pop
inc
xor
inc
mov
cmovl
popa
sbb
clc
mov
xor
pop
cli
jae
aas
fldl
fists
cmp
lods
hlt
les
xchg
mov
sbb
dec
orb
jne
popa
nop
shlb
sti
nop
xchg
bound
push
pop
nop
mov
scas
popf
xchg
test
cmp
jge
addr16
pop
jne
push
push
jl
ret
out
push
and
xchg
mov
imul
mov
adc
int3
add
pushf
push
mov
cltd
ror
mov
pop
pop
jno,pn
fadds
jae
dec
mov
jmp
repnz
clc
pop
mov
dec
call
mov
and
jecxz
fsts
cmpsl
ficoml
ljmp
bound
clc
out
mov
xlat
test
push
lret
into
cmp
lds
or
mov
inc
and
lea
cli
jmp
jne
test
sub
pop
mov
jl
xchg
or
mov
mov
cli
jnp
push
repz
mov
mov
into
fidivrs
adc
xchg
lahf
mov
pop
dec
sbb
mov
mov
or
pusha
cmp
cli
lods
int3
mov
loope
push
push
adc
jno
adc
mov
jns
jecxz
push
lock
scas
jl
adc
dec
aam
fidivl
mov
jge
mov
xchg
shrl
ljmp
lods
enter
adc
fwait
ret
xchg
bound
cltd
sbb
mov
push
shll
push
ret
lds
mov
insb
je
aaa
sub
xor
mov
dec
xchg
mov
outsl
icebp
jae
pusha
shrl
push
clc
dec
dec
fwait
jecxz
mov
rcrl
cs
mov
cmpsl
jge
adc
rclb
ja
xchg
enter
dec
add
std
fs
popa
loop
shl
sbb
push
clc
xor
enter
movsb
push
leave
cwtl
sbb
cmp
cmp
mov
mov
inc
mov
xchg
inc
sub
andl
mov
dec
cmp
or
and
or
adcb
xor
scas
insl
inc
orl
inc
mov
imul
ret
adc
mov
sub
aas
inc
or
dec
pop
sar
xchg
push
scas
loopne
lock
sub
aaa
adc
sbb
push
mov
out
lahf
testb
in
into
xchg
fucomp
cli
add
xchg
frstor
mov
mov
dec
arpl
push
das
ds
dec
jno
mov
jno
test
cmp
mov
aaa
lret
test
dec
and
stc
psubq
leave
out
dec
out
lret
emms
cwtl
jp
hlt
mov
mov
cmp
xlat
stos
push
push
push
xor
inc
and
push
cmpsl
repz
repz
daa
push
int3
dec
sbb
sub
mulb
divl
movsl
dec
stc
xor
scas
pop
sbbb
mov
add
sbb
cmp
adc
xchg
dec
pop
stos
out
addr16
pop
sub
fwait
pop
xor
mov
inc
es
movntq
dec
in
and
add
lds
add
mov
loopne
jno
je
clc
and
mov
mov
rorb
loopne
ja
addr16
jbe
aad
push
pop
jmp
xchg
inc
in
je
das
jecxz
add
test
pop
mov
mov
xor
movmskps
xchg
sub
mov
test
inc
out
test
pop
sbb
jnp
inc
mov
inc
xor
cmp
hlt
mov
inc
push
adc
cmpsb
push
repz
sub
sbb
ds
inc
push
dec
aas
lock
push
outsb
adc
insb
cmpsl
loope
js
jmp
sub
rcrl
popf
fisttpl
sbb
and
or
dec
jo
lea
sbb
adc
movsl
xchg
repnz
je
cs
xor
repz
outsb
js
iret
andb
cmpl
into
scas
add
in
and
pop
aas
dec
jl
les
add
mov
and
icebp
push
jo
xchg
xchg
test
aam
xor
mov
jle
stos
cs
pop
jmp
and
roll
sbb
decl
add
loopne
sbb
vandps
and
sbb
pop
xchg
gs
loop
jne
adc
push
mov
mov
fnsave
fidivrs
mov
add
pop
jl
int
inc
add
cmp
out
adc
imul
pusha
xchg
sahf
sbbl
imul
mov
add
mov
nop
mov
mov
mov
dec
in
pop
leave
or
cld
insb
dec
pop
pop
ror
fwait
mov
pop
loopne
lret
and
stc
pushf
mov
and
ja
in
addr16
xor
add
jmp
je
test
sbb
push
rorb
lahf
pop
cmpl
pushf
imul
das
push
insl
notb
js
mov
fadd
lods
clc
pop
lret
or
sub
add
cld
and
clc
in
cli
daa
icebp
repnz
cmp
inc
enter
mov
cmpsl
push
dec
in
dec
mov
ds
dec
popf
mov
mov
xchg
xchg
je
cmpb
rorb
aad
inc
xor
inc
call
mov
mov
pushf
std
mov
stos
jg
mov
add
lock
lea
pop
mov
cwtl
jno
sub
pop
in
int
subl
test
call
orb
imul
pop
jbe
in
popf
jae
aas
dec
ja
inc
mov
mov
cmc
sbb
scas
push
hlt
inc
outsl
cwtl
mov
push
pushf
int3
and
dec
dec
repz
jne
push
jno
adc
add
bound
sarb
xor
shrb
xchg
inc
add
or
cmpsl
sbb
pop
mov
mov
push
jle
pop
dec
pop
xchg
add
iret
mov
adc
jb
mov
push
scas
leave
outsl
mov
and
popf
clc
xchg
sahf
in
repz
daa
outsl
enter
ret
stc
pop
dec
mov
inc
sbb
push
pusha
jl
addl
lcall
sub
popa
push
test
bnd
adc
pop
sbb
inc
sbb
sahf
dec
pop
sub
inc
pop
mov
pop
jns
fstpl
pop
xor
aam
xchg
xor
adc
push
adc
xor
add
sbb
push
mov
clc
ret
notb
jecxz
xchg
push
out
loopne
pop
add
mov
mov
outsl
icebp
aam
sti
in
cmp
lret
add
sbb
adc
popa
mov
es
add
out
push
mov
loop
push
mov
mov
fstps
mov
shrl
sub
or
ss
in
and
xlat
or
bound
fbld
or
and
sahf
aas
push
adc
jecxz
mov
jo
jne
loope
lock
outsl
mov
xorl
xchg
add
adc
inc
dec
mov
xchg
mov
lea
sbb
inc
xchg
push
mov
jno
sti
mov
cmp
or
cmp
shlb
pop
ret
pop
xchg
xchg
nop
out
or
lock
or
les
or
pop
jle
jg
pop
shlb
out
int3
in
js
jp
call
xorb
push
movsl
sbb
mov
or
sub
xchg
mov
test
adcb
outsb
std
dec
xchg
insb
addl
cmp
adc
cmc
inc
cmpl
aam
pop
xor
fdivrl
mov
lret
ret
int3
out
cmpl
push
sbbb
fsubs
mov
mov
cmp
cmp
mov
in
cmp
add
add
dec
dec
push
inc
mov
clc
loopne
bound
lret
lret
dec
cltd
aas
mov
repz
lcall
or
and
sti
cltd
fldenv
mov
push
in
outsb
dec
dec
push
xchg
aad
push
pushf
or
dec
or
cltd
push
inc
xchg
xchg
adc
fadd
outsb
and
leave
int3
lock
sti
in
clc
inc
fidivl
out
ja
xchg
pusha
mov
pop
mov
call
mov
add
jg
ret
decb
jl
loop
mov
insl
insl
pop
cltd
inc
push
jnp
jl
mov
xor
decb
call
inc
gs
jnp
push
test
xor
shr
mov
fsts
clc
fwait
stos
push
mov
inc
adc
js
out
jl
popf
fdivr
push
ficoml
lods
inc
or
sti
pop
inc
adc
pop
sub
pop
xchg
sub
adc
cmp
nop
pop
clc
shr
loope
inc
jne
mov
test
or
push
xchg
insl
push
ss
cs
jns
lahf
cmp
push
sbb
addr16
aas
maxps
repnz
cmpsb
jbe
das
push
imull
ljmp
cmpsl
call
and
xor
aad
mov
cmp
loopne
fdivrs
adc
push
pop
rclb
rolb
pop
das
sbb
adc
pop
mov
clc
ret
out
jb
mov
lods
mov
pop
inc
loop
addr16
mov
leave
xor
sbb
jae
cmp
inc
in
jns
jne
cmpsb
loope
push
xchg
push
pop
es
add
aas
lahf
dec
push
hlt
aad
pop
mov
sub
inc
cmp
sbb
jbe
cmp
xchg
arpl
sbb
jbe
int
sahf
xor
shrb
sub
repz
scas
dec
loopne
and
push
inc
lods
imul
enter
ret
scas
adc
xor
popl
sub
push
xchg
stos
jg
jno
add
adc
jle
gs
dec
mov
dec
dec
in
pop
repnz
bound
pop
sti
jno
mov
or
cmp
mov
in
in
sbb
outsl
adc
pop
fcmovu
xor
xor
adc
movsb
mov
js
sarl
lock
push
outsb
jbe
and
repz
fcomps
movsb
ss
fstpl
lahf
imul
loope
dec
aad
call
cmp
xchg
cmp
icebp
nop
inc
rcrb
pop
jns
adc
lock
clc
sub
and
ret
inc
sub
hlt
jnp
push
xchg
jle
gs
add
and
pusha
fcompl
mov
cmp
arpl
or
add
in
add
cwtl
adcl
inc
sbb
pushf
pop
xchg
push
and
and
ja
lods
and
sbb
sub
dec
mov
cmp
mov
jo
jmp
in
xchg
mov
test
imul
gs
mov
in
inc
jp
push
dec
add
sub
and
dec
hlt
xchg
fwait
or
mov
lret
insb
jp
and
leave
test
lods
lcall
sbb
sub
lcall
sbb
xor
iret
shrb
enter
sub
fldl
sahf
dec
or
test
daa
cmp
repnz
xor
pop
in
dec
fstl
sub
push
xor
jne
sub
sub
mov
movsb
and
jge
lods
xchg
jp
push
ja
sbbl
dec
arpl
pop
mov
gs
mov
push
mov
push
inc
xor
jp
dec
jo
pop
mov
out
xchg
or
cmp
pop
fidivl
testl
int
mov
mov
pop
nop
sub
ss
mov
jnp
clc
dec
outsl
aam
lock
in
insl
leave
fwait
adc
outsb
and
push
inc
push
loop
mov
fsub
shr
test
dec
out
xlat
pop
lahf
pop
repnz
mov
jl
mov
sub
sbb
cmp
ss
sub
inc
hlt
sub
stc
insl
jb
fcomps
jg
ja
loopne
mov
mov
push
mov
mov
iret
mov
push
sbb
inc
repnz
mov
xor
inc
jo
aas
les
inc
fsubrs
in
enter
repnz
mov
jecxz
jno
jmp
mov
push
lret
scas
cs
aad
out
jle
push
xchg
repnz
mov
xchg
add
xchg
sahf
mov
and
pop
add
cli
adc
dec
int
and
adc
cmp
pop
dec
and
aam
push
sbb
sub
xchg
sbb
push
fildll
or
adc
xor
pop
adc
leave
imul
addr16
mov
pusha
push
out
push
stos
add
cmp
push
test
sbb
subb
mov
xor
xor
movsl
in
out
fistl
pusha
mov
add
cmpsb
fidivrl
push
leave
jge
xchg
data16
push
imul
testl
jns
adc
pop
mov
pop
cli
push
cmp
lcall
out
data16
outsl
ret
cmp
push
notb
xor
popa
inc
pop
int
mov
jecxz
sbb
ja
test
inc
mov
lods
imul
xchg
mov
roll
int
rcrl
mov
dec
cmpb
xchg
cld
dec
sub
xchg
pushf
shr
pushl
repnz
scas
aad
outsb
daa
addl
out
insb
adcb
or
xchg
stos
xlat
adc
inc
mov
movsb
fisubs
adc
sarl
negl
sbb
mov
inc
outsl
and
mov
inc
or
pop
insl
ljmp
frstor
out
fnstsw
dec
out
call
lock
cmp
mov
pop
lds
inc
push
cmp
pop
pop
fcomps
sbb
in
add
sbb
mov
jo
pop
cmpsb
into
das
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
into
cs
ds
dec
sahf
pop
mov
jle
mov
dec
scas
jle
outsb
into
push
fimuls
out
ds
cs
ficomps
out
into
sahf
pop
mov
scas
mov
dec
scas
jle
push
push
fimuls
out
cmp
sub
ficompl
lret
ds
dec
sahf
pop
mov
jle
mov
in
jle
sbb
inc
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
clc
dec
call
xorb
test
jnp
push
pop
add
cmp
pusha
sbb
inc
clc
mov
mov
mov
rorb
and
dec
add
adc
mov
push
or
test
enter
test
cwtl
enter
rorl
sub
add
xor
pop
push
popa
inc
mov
mov
cmp
add
mov
inc
stos
push
adc
push
mov
mov
sbb
xor
push
fs
pusha
dec
les
mov
outsl
cmc
sub
pop
dec
andb
iret
and
push
movsb
xlat
sub
mov
loopne
lods
int
cmp
pusha
fwait
scas
or
loopne
mov
rcl
push
and
mov
fistpll
and
lahf
loopne
subl
mov
pop
outsl
xor
sbb
addb
jns
pusha
and
push
ret
add
test
out
or
loop
aaa
dec
xchg
lret
cmp
cwtl
dec
aas
xor
adc
and
fildll
call
lcall
mov
js
push
sbb
push
or
xchg
mov
idivl
pop
sub
outsl
mov
push
js
mov
pushf
mov
fldl
int
or
inc
and
add
jno
bound
sahf
icebp
lods
cmc
std
pushf
test
cwtl
rorb
and
dec
add
jo
pusha
sbb
inc
clc
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
clc
mov
daa
inc
mov
xchg
push
insb
pop
sub
cmpsb
mov
or
or
dec
and
mov
popa
add
mov
addl
ficoml
jnp
rorb
sub
xor
loop
in
and
in
push
push
loopne
sarb
mov
cmp
scas
fists
push
mov
inc
sub
adc
fsubs
add
pop
aas
xchg
dec
sbb
jl
cwtl
lds
test
push
fildl
loopne
lret
call
std
jns
dec
dec
stc
fstpl
mov
cmpsl
gs
mov
jle
xchg
cmp
cltd
mov
mov
sahf
jmp
push
pop
cli
lahf
je
fdivs
mov
push
sbb
push
cmpsl
push
std
rclb
int3
add
cmc
mov
push
pop
or
outsb
test
aam
sbb
test
btc
xor
mov
cmpsl
insl
push
sbb
jae
enter
jmp
lcall
sub
adc
mov
lock
push
test
pushf
mov
xchg
cmpsl
inc
ds
mov
xchg
dec
ljmp
sub
mov
adc
fstps
out
popa
rcrb
pop
add
icebp
clc
pop
jbe
andb
cmpsl
lcall
sub
inc
mov
or
jmp
popf
ja
iret
mov
nop
dec
pop
int
sub
adcb
push
cmpsl
arpl
sbb
sti
fdivrl
push
movsb
jle
xor
cmp
dec
or
push
or
movsl
mov
inc
xor
out
sbb
insl
mov
xor
jo
les
scas
mov
sub
and
sbb
inc
in
xchg
out
jae
dec
fwait
sub
push
sub
out
jno
pop
mov
dec
bound
enter
ljmp
and
mov
popf
sbb
xchg
hlt
xchg
movsb
sbb
ja
outsb
daa
sub
jl,pn
mov
pop
pop
enter
popf
sub
je
mov
xchg
xchg
sbb
andnps
out
xchg
cli
push
xor
sub
cmp
xchg
popf
mov
cmp
decl
xor
mov
test
lock
nop
push
push
lods
stc
dec
pop
int
lock
mov
push
push
shll
cwtl
std
inc
sub
test
pop
and
inc
adc
add
popa
sbb
or
or
xchg
or
lock
les
ret
xor
les
xchg
int
cwtl
out
ljmp
aaa
xchg
inc
push
stos
call
push
fisttpll
pop
and
jle
pminub
sub
aaa
rorl
jmp
mov
js
test
fbstp
mov
jmp
loop
sbb
adc
ret
xor
cmpsb
scas
cmp
les
test
fisttpl
dec
jbe
and
jae
pop
inc
bound
cmp
jne
fdivs
test
inc
in
testb
sub
insl
jecxz
bound
sbb
shlb
pop
subb
or
pop
jge
mov
insl
and
and
fwait
cltd
xorl
ror
and
mov
or
jnp
popf
jb
fsubrs
add
int
dec
push
xor
jno
push
jle
aad
rol
fdiv
cltd
jp
adc
scas
loopne
xchg
jg
jnp
or
fwait
xlat
push
jecxz
pusha
push
sub
push
jp
leave
stos
aam
ljmp
jmp
mov
push
mov
or
add
call
add
jo
int3
jns
scas
and
push
inc
mov
ss
dec
add
clc
pop
in
icebp
and
push
addr16
stc
sub
xchg
test
mov
sahf
lea
sarb
fs
andb
ja
pop
xchg
mov
pop
mov
sbb
adc
cwtl
mov
pop
fistl
inc
in
mov
inc
or
aad
push
cs
sbb
out
mov
xor
inc
dec
sub
enter
lret
out
sub
jae
or
data16
dec
mov
and
push
in
repnz
push
andl
lret
mov
jmp
mov
scas
ficoms
push
dec
ficoms
push
xchg
aas
popa
andl
mov
or
in
mov
and
sbb
cmp
data16
stos
sub
fbstp
adcl
rclb
push
xchg
inc
mov
icebp
test
mov
pop
aad
jle
aad
sub
xor
xlat
push
imul
mov
fbld
add
dec
adc
inc
dec
ss
xchg
jnp
sub
push
das
subb
popf
dec
out
pop
inc
sti
pusha
pop
aam
jl,pt
insb
sub
pop
xchg
push
or
pusha
or
sbb
fistpll
push
es
pushf
ss
lods
adc
lock
aas
cmp
push
in
out
mov
pop
xor
test
xchg
pop
add
mov
imull
rorl
adc
sub
mov
test
data16
movsb
js
xchg
fcmovnu
cmp
push
ret
lret
xchg
jp
ss
fiadds
in
mov
imul
pop
pop
rcll
dec
mov
push
pop
mov
stc
or
je
cld
mov
sbb
xchg
sarb
mov
fwait
outsl
jmp
xchg
movsb
in
jg
push
cli
dec
aaa
lea
cmp
rcl
mov
shrl
dec
dec
inc
loope
fcmove
adc
push
jbe
cmpsb
rcrl
test
and
pop
lea
cmp
mov
adc
or
hlt
pop
mov
loop,pt
shll
mov
nop
cmp
jne
adc
lahf
or
fdivl
out
cmpsl
push
clc
or
sub
jae
jmp
pop
enter
cmp
rcl
int3
adc
enter
mov
push
shll
fsubrl
lret
std
test
repz
test
fcmovne
js
movsl
imul
mov
mov
mov
insb
xor
js
xchg
xchg
stc
les
rcrl
sub
ret
test
add
cmp
xor
aad
pop
inc
idivl
xor
popa
mov
jge
and
xorl
aas
movsl
adcl
add
divb
lahf
xor
or
jae
mov
mov
fisubl
mov
jecxz
das
add
loope
sbb
lret
bound
ret
sub
xlat
or
push
pop
xchg
push
mov
jns
and
jle
fsubrl
mov
jle
pop
jnp
pop
ret
cli
pusha
jecxz
jmp
cmp
popa
xlat
int3
shlb
mov
in
jae
imul
adc
xchg
jae
sti
mov
xor
adc
sbb
jp
in
inc
mov
aaa
outsl
mov
inc
and
pop
jecxz
out
js
push
and
push
ret
test
adcb
adc
aas
pop
push
dec
sbb
xchg
mov
pop
xor
pop
sbb
inc
fs
orl
out
jb
aaa
pop
fistl
idivb
dec
sub
sbb
cli
fs
aad
pop
mov
dec
daa
adc
enter
cmpsb
leave
cmpsb
shl
and
insl
iret
ffreep
aam
jp
mov
addl
cmp
lods
pop
sarl
leave
repnz
mov
mov
pop
push
mov
orb
aam
inc
cmp
push
mov
mov
mov
aas
jne
stos
sar
push
jae
xchg
add
icebp
mov
and
jle
mov
dec
xor
lahf
rcl
shll
xchg
movsl
int
adc
mov
std
outsl
test
daa
in
stos
stos
xchg
lret
iret
add
les
mov
in
pop
push
add
add
adc
cmp
xor
stc
xchg
mov
mov
sub
push
push
sub
sbb
or
popa
int3
outsl
das
sub
pop
es
sub
sbb
or
jg
loopne
inc
push
mov
ss
pop
lds
xor
push
push
cmpsl
adc
subb
aaa
cmp
cmc
jnp
adc
pop
inc
test
mov
pop
imul
aaa
je
mov
inc
mov
xor
fbld
fcmovnu
dec
in
imul
mov
ret
fcmovnbe
dec
mov
addr16
lods
jno
inc
in
outsl
arpl
mov
lret
jo
shr
outsl
pop
fdivrl
mov
lods
and
fisttpll
cwtl
add
imul
mov
outsb
inc
xchg
popa
lcall
aam
insl
mov
add
lret
mov
mov
fwait
adc
jno
adc
fdivrs
jecxz
mov
loope
adc
imul
sub
cmp
mov
push
cld
xor
mov
jb
lcall
stos
sbb
dec
js
push
lcall
and
lret
stc
fimull
mov
iret
and
ret
mov
test
push
mov
mov
mov
and
scas
arpl
fcomp
push
sarb
ljmp
mov
clc
jne
mov
and
mov
cmp
maxps
adc
jp
pop
mov
sarl
lods
dec
adc
lods
rclb
inc
sub
in
mov
lcall
imul
stos
pop
xor
je
adc
mov
in
mov
shll
cmp
sub
mov
addr16
fdiv
pusha
lahf
rorl
adc
adc
ficoms
pop
arpl
cmp
inc
push
or
and
xchg
mov
insl
outsb
xchg
gs
sub
or
jmp
inc
lret
filds
lcall
pop
sub
xchg
arpl
sbb
push
stos
iret
and
cmp
je
loop
cmp
cli
sarl
and
arpl
andl
push
adc
xlat
fnstenv
pop
scas
cli
mov
or
xor
fldln2
in
ja
popf
lods
shlb
mov
xlat
mov
inc
pop
cmc
cmp
and
fdivrs
fcomps
daa
test
cli
xlat
jbe
mov
jle
repnz
pop
int3
lar
xchg
nop
fcompl
mov
sti
fs
xor
cmpsl
sub
into
xchg
scas
insb
arpl
mov
popf
imul
mov
inc
pop
je
pop
pushf
je
fs
add
fildl
xor
in
filds
ret
mov
rorb
stos
rorb
mov
push
cld
ret
cmp
jmp
shlb
xchg
loopne
or
xor
add
jle
in
mov
lods
mov
jmp
data16
or
movl
bound
imul
push
jmp
subl
sbb
xchg
dec
xchg
dec
cmpsb
aam
mov
cmp
mov
cmpsl
fs
inc
mov
or
add
iret
scas
sbb
cld
pop
movsb
enter
dec
shlb
dec
rclb
in
jecxz
xor
xchg
je
jno
and
pop
mov
testl
mov
fists
pop
sarl
mov
jg
and
mov
je
leave
jp
test
cmp
xlat
test
or
les
negb
hlt
loope
sbb
mov
into
repnz
js
push
xor
addl
pop
out
lret
push
sub
push
inc
in
or
mov
sub
sub
bound
lahf
jmp
inc
aam
xchg
into
lea
push
shr
fcompl
xchg
mov
fldenv
inc
xchg
test
mov
dec
sbb
cmp
push
fnstcw
int3
xor
xor
or
pop
xor
inc
aam
aaa
cmpsb
pop
cmp
dec
mov
sbb
rolb
or
inc
outsb
lea
test
mov
imul
imul
sub
mov
sbb
and
test
lods
fmull
cli
rcrl
addl
cli
in
in
rcl
lahf
nop
ljmp
fwait
xor
xchg
or
adc
push
js
shrl
cmp
push
lods
out
stc
ljmp
or
loop
cltd
movsb
lcall
jnp
ljmp
dec
sub
int3
cltd
mov
ficoms
dec
jne
push
andl
push
mov
pushf
fdivr
mov
in
cmp
sub
push
in
cltd
mov
std
inc
ret
xchg
sbb
xor
xchg
inc
jno
jnp
movsb
xor
or
aad
cmp
sub
cmp
lahf
lods
arpl
gs
xchg
add
and
test
adc
xchg
fiaddl
jp
je
fs
mov
aaa
insb
clc
xlat
xor
bound
mov
hlt
or
lds
or
or
pusha
add
data16
out
pop
xor
lods
cmpsl
pop
hlt
pop
dec
pusha
xchg
jge
cli
fisttpl
filds
mov
in
ret
pop
or
dec
imul
int
mov
paddb
repz
xor
arpl
aas
lock
call
dec
leave
loop
pop
aad
in
jmp
cmp
into
loope
int3
int3
shr
cmp
nop
test
cmc
mov
cmc
push
mov
mov
idivb
inc
cmp
add
and
pop
jae
xor
sahf
cmp
call
into
mov
loop
push
jmp
in
addr16
and
or
add
mov
aad
push
es
loope
bswap
or
cltd
lret
sbb
sbb
pop
addb
inc
aaa
mov
xchg
imulb
inc
sarb
cmpsl
mov
inc
mov
xlat
adc
fimull
bound
pop
fdivr
stc
mov
rol
lea
test
jns
fdivrs
inc
xor
div
or
cmp
sub
div
imul
out
mov
mov
mov
pushf
iret
orl
cld
dec
daa
popf
bound
ret
mov
aaa
mov
jle
dec
add
lahf
shll
push
add
fisubrl
leave
xchg
or
fs
xchg
xor
and
and
decb
int3
xlat
aam
loope
mov
pop
mov
or
pusha
or
aam
jp
notl
sbb
jl
pop
pushf
xor
lods
xor
mov
pop
push
push
mov
stos
mov
fwait
sbbl
pop
andl
and
xor
push
into
cld
mov
push
xor
xor
lahf
ds
lods
sbb
push
sahf
pushf
inc
loopne
mov
andl
cmp
stos
outsb
dec
jbe
xchg
loopne
leave
adc
cld
xor
fstpl
mov
aas
out
and
leave
jmp
pop
stos
clc
add
jns
ds
nop
lea
pop
loope
pop
fcmovb
push
xchg
push
insl
das
dec
jecxz
movsb
ja
pop
mov
out
mov
fsts
adc
xchg
cwtl
jmp
les
mov
or
mov
adc
mov
cli
adc
xor
je
dec
mov
fistl
sub
roll
addr16
xor
int3
mov
push
pop
sti
iret
pop
inc
mov
xlat
xor
push
mov
decl
push
jmp
cmpsl
stos
popa
mov
or
pop
fcmovnb
jo
sbb
popf
pop
cmp
dec
sub
sti
push
fsubrl
xor
mov
or
dec
mov
addr16
mov
jl
nop
int3
test
neg
fwait
lret
adc
inc
popa
fdivl
ljmp
cmp
jge
pop
loopne
rcrl
je
inc
xor
pop
add
jae
ret
mov
pop
iret
lret
jecxz
xor
lcall
or
adc
mov
sahf
aam
call
test
jns
rcrb
repz
cwtl
add
adc
out
mov
aad
xor
cs
sub
pop
stc
mov
push
das
push
pop
mov
mov
in
pop
xor
loopne
insl
and
in
dec
fs
and
dec
mov
insl
addr16
cmp
lea
dec
and
sbb
ss
mov
mov
xchg
stos
or
dec
fs
insb
call
out
movsl
rcrb
stos
scas
lahf
stc
stos
or
and
out
test
sub
js
and
cmp
add
push
insb
aaa
pop
or
addr16
popf
jo
aad
out
adc
sub
mov
jne
in
loop
xor
and
pop
pop
cmp
adc
push
jecxz
push
push
lock
es
push
cmp
std
repnz
in
enter
addr16
ffree
mov
adc
int3
repz
pop
and
das
jle
cmp
cltd
out
and
clc
xor
push
shll
sbb
shrl
adc
lds
jp
lock
mov
mov
dec
pop
add
push
xorb
mov
mov
icebp
sub
insb
leave
in
pop
clc
jbe
ret
sbb
sbb
mov
shll
mov
mov
rcll
mov
fcmovnb
fisubl
push
push
ret
mov
aam
dec
xchg
filds
add
sti
inc
cmp
enter
dec
testl
adc
and
pop
mov
push
pop
inc
icebp
jg
pop
sbb
sub
loope
push
adc
jg
xor
mov
jecxz
fwait
mov
arpl
push
dec
pop
mov
mov
push
mov
repnz
movsb
dec
pop
mov
inc
jnp
lret
cld
shll
mov
lea
insl
add
add
ret
mov
ja
inc
int
xchg
mov
ljmp
jg
mov
addb
pop
sub
pop
out
sbb
cltd
jp
sub
cmp
mov
mov
jge
adc
adc
jg
jg
adc
mov
inc
mov
rcrl
sub
jns
and
push
pop
movsl
adc
loop
out
cltd
mov
or
add
ret
cmp
into
sbb
pop
popf
jg
arpl
mov
inc
fldl
xorb
or
pusha
into
popf
mov
stos
inc
mov
lahf
stos
rcl
pushf
push
jg
cmova
push
or
push
mov
rol
bound
mov
gs
and
inc
mov
out
popa
pop
sub
in
aaa
xchg
inc
xor
sahf
add
adc
es
sbb
xchg
push
rcr
adc
sbb
add
xchg
daa
aad
adc
xchg
popf
pop
js
adc
pop
jne
sbb
fistpl
decl
inc
aam
cmpb
xor
cmp
inc
je
mov
jb
dec
icebp
lret
xor
mov
or
hlt
push
and
aam
pop
call
jge
int
pusha
popf
int3
loop
shl
sub
je
imul
mov
ds
add
rcrl
movsl
push
pop
into
pop
cmp
or
rorb
std
scas
mov
fisubrs
or
xor
lret
shl
shl
out
test
jl
mov
loopne
arpl
cmp
cs
pop
and
lods
ds
into
lods
cltd
int3
xchg
jecxz
scas
mov
xchg
cmp
cmc
pop
std
js
enter
xchg
testb
dec
sub
sarb
pop
cmp
test
repz
inc
scas
negb
xchg
in
push
sbb
mov
xor
mov
jns
adc
icebp
push
xchg
inc
sbb
mov
lds
cmc
dec
dec
mov
fldl
jmp
or
into
ret
jmp
dec
pop
ja
leave
sub
mov
cmp
icebp
insb
negb
add
inc
push
lods
lock
add
pop
scas
lretw
lea
or
ja
shl
fwait
mov
jecxz
dec
mov
and
xorb
cli
notb
mov
and
inc
loop
xchg
aaa
enter
les
movsl
jle
inc
popa
inc
fstps
xorb
push
adc
out
flds
jle
mov
cmp
mov
std
aam
dec
push
sti
fcmovnbe
icebp
decl
rolb
inc
pop
inc
int3
call
int3
lret
and
mov
mov
out
jmp
shl
daa
fmuls
lods
insb
dec
or
lods
fmuls
pop
adc
insb
sbb
cmp
pop
adc
jp
ficomps
xchg
add
dec
fistl
xchg
mov
push
sub
pop
jno
fnstenv
push
hlt
popa
out
cmp
or
sete
loopne
dec
mov
int
push
outsb
pop
lcall
ja
sahf
pusha
pop
ret
repz
ds
xchg
hlt
call
push
movsb
sbb
loop
gs
aam
add
cmp
pop
xchg
std
ljmp
js
cmp
roll
xor
mov
rorb
and
dec
add
jo
pusha
sbb
inc
clc
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
clc
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
clc
mov
mov
mov
rorb
rolb
dec
ja
clc
mov
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
or
cmp
sub
out
daa
and
or
jg
mov
fcmovne
leave
pop
jmp
jmp
sbb
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
mov
iret
sti
lods
jmp
add
adc
and
xor
inc
dec
push
pop
arpl
jg
daa
test
in
sarl
cmpsl
popf
mov
inc
cmp
outsb
or
lods
jnp
adc
xor
repz
or
push
and
fidivrl
inc
dec
xchg
shlb
mov
push
addr16
scas
push
xor
mov
testl
lock
stos
xchg
int3
jb
pusha
subl
fcmovne
aaa
pop
sti
adc
jbe
sbb
pushf
repnz
aas
movsb
dec
dec
pop
test
push
adc
mov
out
and
lret
and
jmp
dec
out
xchg
mov
lret
shlb
cld
fwait
jae
enter
jg
and
sti
jb
cltd
jmp
jl
aam
movsb
cmp
mov
arpl
mov
cwtl
sbb
sti
jmp
rorb
adc
cmp
sub
dec
dec
pop
pop
jnp
jb
orb
mov
loope
jmp
ja
outsb
pop
pop
inc
pop
push
sub
sub
das
fwait
ljmp
fldt
xchg
push
das
pop
dec
aaa
pop
dec
cmp
cmp
imul
ljmp
mov
scas
jle
addr16
push
inc
inc
pop
adc
pop
jnp
imul
mov
fcmovne
lret
out
jmp
sbb
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
fcmovne
lret
out
jmp
sbb
and
test
sub
jns
scas
mov
push
ss
and
fidivl
out
inc
jecxz
push
lret
pop
insb
add
fndisi(8087
lret
aad
insb
pop
jmp
cmp
mov
mov
add
or
jp
mov
lods
dec
fwait
mov
xor
mov
jle
dec
push
sub
dec
movsb
xor
pop
cmpsb
jecxz
enter
aad
imul
les
repz
enter
jne
dec
data16
add
test
jge
enter
in
jl
inc
push
in
jns
push
xchg
mov
mov
arpl
notl
fcompl
cli
mov
loopne
push
jne
loopne
xchg
sbb
cmp
xchg
mov
mov
xor
into
in
clc
dec
mov
xor
mov
pop
pop
mov
mov
int3
xchg
bound
das
fdivrs
inc
add
arpl
cmpsl
cld
shr
mov
ljmp
test
out
ljmp
and
insb
enter
xor
in
push
cld
pop
or
sahf
jp
mov
je
push
pop
shll
je
xor
sbb
jno
xchg
cld
lcall
out
hlt
pop
sbb
xor
add
jbe
adc
inc
cmpsb
mov
push
add
movsl
mov
in
push
jb
xchg
data16
mov
sbb
imul
mov
out
xchg
and
fucomp
test
lock
mov
push
pop
pop
fs
jb
in
scas
cs
enter
lahf
out
xor
loope
mov
jecxz
outsb
cmp
mov
pop
nop
inc
xor
iret
mov
lcall
aaa
ficomps
cli
mov
pushf
imul
ljmp
mov
mov
flds
xchg
mov
pop
jl
scas
arpl
nop
out
xlat
pushf
addr16
clc
fmuls
aad
fwait
cmp
hlt
hlt
fs
icebp
push
sbb
aas
or
scas
jae
xchg
sarb
leave
mov
enter
punpckhbw
lahf
or
mov
outsb
inc
sti
pop
sbb
lcall
xchg
ret
jecxz
mov
popa
add
or
xor
sbbl
cmpsl
std
cmp
cmpsb
and
out
push
pop
cmpsb
xor
adc
cmp
and
mov
push
cmp
aam
shlb
sti
xchg
and
jg
cmp
xchg
push
xchg
fcoms
fwait
sub
xor
and
movsl
pushf
in
outsl
mov
jno
imul
pushf
rorb
sbb
xor
inc
jge
mov
push
adc
mov
push
stc
bound
icebp
pop
aad
jnp
in
push
mov
mov
push
add
fstps
stos
sahf
inc
lcall
or
cmp
or
xchg
pusha
inc
jns
scas
inc
sub
jle
out
pop
lods
mov
add
outsb
cwtl
xlat
xor
add
repz
bnd
movsl
scas
push
dec
test
in
les
dec
pop
mov
add
cmp
outsb
sbb
out
adc
xchg
pushf
and
jmp
cwtl
iret
aam
push
inc
inc
pop
or
sahf
in
ret
cmpsl
loopne
add
stos
test
adc
lods
adcb
andl
ja
cmp
ja
aad
imul
sbb
xchg
and
dec
mov
push
movaps
push
das
loop
and
in
pop
dec
ja
and
lods
out
aam
adc
outsb
sti
insl
and
pop
mov
jno
jno
bound
je
lods
fidivl
jo
jecxz
loope
sti
popf
mov
je
js
mov
jg
cmpsb
cmp
imul
pop
into
fildll
cmpsl
out
xor
lahf
inc
sub
jns
in
lahf
repz
adc
in
out
xchg
addr16
cmp
shrl
push
ficomps
dec
jle
xor
vpshufd
inc
adc
test
daa
adc
js
js
add
fisttps
mov
fs
lahf
jnp
mov
jbe
clc
aaa
test
jl
mov
scas
inc
pop
pop
ds
arpl
mov
push
lahf
sub
adc
cmp
mov
xor
mov
loopne
dec
and
xor
fbstp
or
jbe
das
int
pop
mov
andl
nop
scas
cwtl
cmp
jns
fisubrs
inc
gs
dec
int
mov
or
lock
call
cmp
sub
push
dec
lcall
ja
mov
clc
sti
fildll
leave
pop
outsb
hlt
insb
xor
add
inc
repnz
ljmp
mov
pop
mov
cmp
hlt
adcb
or
repz
jae
call
sarb
mov
mov
jno
add
repnz
sub
mov
js
arpl
fptan
mov
aaa
sbb
xor
mov
lcall
dec
sbb
xlat
ret
pop
cmp
xchg
std
inc
and
adc
jnp
sbb
jecxz
imul
and
jb
outsl
mov
stos
jmp
sti
insl
mov
add
orb
cltd
and
sbb
ds
dec
cmp
inc
sbb
leave
adc
inc
stos
popa
xchg
inc
test
xor
cmp
xor
and
int
sti
sbbl
add
mov
out
adc
sbb
xor
ficompl
dec
andnps
sbb
push
push
jmp
jbe
xor
int3
lock
lcall
outsl
mov
jno
outsb
and
cmp
mov
push
and
dec
notb
add
pmulhuw
je
sbb
fs
dec
or
lret
xchg
sbb
xor
xor
jnp
cli
sbb
xor
mov
cli
or
sbb
push
pop
in
cmp
or
jae
push
test
lret
dec
subb
mov
dec
add
gs
xchg
add
stos
movsb
jmp
jns
inc
xorb
stos
popa
in
aam
adc
test
xchg
insb
mov
or
add
mov
mov
jecxz
and
or
insb
sub
and
rorb
nop
jp
xchg
js
mov
adc
cmpw
jecxz
pusha
add
xor
pop
stos
xchg
ss
sti
xchg
push
clc
es
sub
gs
fistpl
jmp
push
jne
push
leave
cltd
inc
or
cld
bnd
push
mov
es
addr16
fstpt
jb
fdivrs
loop
xor
jo
aad
loop
ret
pushf
ret
sub
lahf
add
ret
pop
ret
popa
icebp
mov
dec
fld
lds
dec
ret
add
bound
scas
xchg
pop
mov
mov
lahf
push
data16
jg
mov
jg
out
or
adc
sub
jno
sub
call
call
sub
incb
aam
outsb
lahf
cmp
mov
std
repnz
insb
add
mov
sub
pop
sti
loop
jecxz
into
mov
xor
mov
int3
fbstp
xchg
inc
and
mov
and
push
mov
mov
xor
add
jmp
and
iret
insb
fwait
lods
mov
ja
aas
push
fisubrs
insb
cmp
mov
dec
xor
xor
icebp
rcr
xor
in
cmpb
sbb
out
ret
cmpsb
mov
scas
jg
insl
pushf
sub
loope
fidivrl
add
and
addr16
icebp
and
je
jmp
or
push
movsb
sub
cmp
mov
mov
loopne
inc
bound
mov
popf
lret
leave
adcl
das
aas
jg
push
push
movsl
cmp
xchg
sub
push
outsl
jmp
pop
repnz
js
out
sbb
addr16
addl
scas
push
dec
add
xchg
jne
lea
outsb
fwait
push
mov
pop
or
push
enter
je
sub
xchg
add
xchg
js
in
rolb
mov
pop
push
push
pop
and
cmp
stc
push
dec
inc
mov
enter
mov
xchg
inc
sbb
aad
test
outsl
inc
sbb
xor
dec
adc
push
sub
cwtl
rol
mov
sbb
lcall
sti
rclb
mov
sub
mov
dec
fcoms
lea
imul
sbb
cmpsl
adc
pop
mov
stos
iret
cmpsb
stc
add
daa
cltd
xchg
aam
push
addb
mov
rolb
shl
sbb
mov
inc
xor
or
lds
mov
mov
or
push
cmp
int
repz
lods
ljmp
sub
negl
inc
adc
cmp
enter
and
mov
cmp
mov
sub
divb
inc
std
repz
dec
mov
gs
push
loop
outsl
or
sbb
out
or
iret
movsl
cmp
pop
or
in
mov
dec
inc
pop
mov
pop
incl
mov
adc
rcrb
dec
aad
inc
jge
test
iret
pop
sti
sub
hlt
push
cld
xorl
jle
sub
ljmp
stos
lahf
pop
aas
cmp
pop
jns
pop
adc
inc
aaa
aad
mov
jmp
insl
mov
and
adcb
bound
adc
mov
mov
fisubrl
leave
sti
add
in
fiaddl
dec
int3
sub
or
pusha
addr16
pop
mov
call
and
icebp
aad
mov
mov
bound
xor
sub
aam
xlat
pop
push
cltd
mov
out
add
cmp
dec
or
ljmp
das
fwait
jo
add
gs
and
rorl
inc
push
loope
ja
gs
jle
inc
jecxz
fwait
inc
mov
inc
imul
sbb
adc
or
mov
loop
jno
loopne
adc
or
loop
pop
sti
jl
repnz
cmpsb
cmp
and
fldcw
adc
dec
je
inc
dec
movsb
xor
xor
test
icebp
cmc
xorb
inc
cmp
aas
jmp
test
adc
pop
jp
outsl
sub
fstl
and
mov
dec
push
fs
xchg
aaa
gs
jge
xor
int3
or
cmp
aam
pop
xorl
fisubl
in
adc
pop
ja
ss
mov
push
mov
es
setg
inc
pushf
sub
into
repz
icebp
mov
push
fsub
jle
add
mov
cmpsb
mov
jmp
test
add
shr
inc
out
aaa
adc
shrl
jbe
pop
pop
shr
jo
popa
pop
mov
mov
cli
pushf
jl
or
fcmovnb
out
fisubs
inc
xor
add
cmp
lgs
mov
or
cmc
xor
int3
in
cmp
xor
jnp
sbb
sub
xchg
sub
mov
sbb
mov
ficoml
inc
loopne
cwtl
xchg
xchg
in
and
sti
adc
popa
mov
sub
add
push
cld
push
fcmovbe
nop
adc
jns
stos
testl
dec
icebp
stc
shl
mov
ss
mov
les
add
pop
sbb
jl
inc
divl
shlb
repnz
loopne
pop
sub
cli
je
shll
orb
lods
bound
notb
mov
cltd
imul
aam
repnz
dec
push
or
sahf
and
and
es
inc
jo
in
pop
mov
mov
pop
jmp
test
adc
popf
lret
sbb
into
or
or
fcoml
add
cmp
and
jnp
shll
jb
repnz
fsubs
leave
jns
pop
cs
shlb
cwtl
adc
push
daa
or
imul
adcl
test
inc
sub
mov
push
fcmovnbe
fldenv
std
or
mov
sti
jbe
test
cld
sub
in
sub
test
inc
adc
movsb
mov
push
cli
iret
xchg
nop
jae
push
sub
enter
pop
or
test
je
or
mov
sub
dec
iret
push
push
jb
or
call
pop
mov
cli
push
adc
aad
cwtl
pop
and
outsl
and
aam
movnti
jg
addr16
pop
add
lret
dec
rcrl
lds
imul
stos
mov
xor
sub
pop
inc
cmp
arpl
fnstsw
cmp
dec
adc
sub
pop
cmpl
mov
sahf
mov
pop
mov
out
movsb
mov
and
lret
mov
subb
in
ss
dec
cmp
push
insb
addr16
jle
jle
mov
adc
pop
add
pop
sub
jo
mov
stos
cmp
int
test
lock
xor
pop
enter
jns
repz
fisubrs
rorb
jo
dec
mov
mov
aaa
pusha
pop
fidivrs
shll
or
mov
xchg
jl
and
mov
stc
mov
push
and
inc
push
mov
stc
xor
hlt
test
scas
add
je
jge
pushf
in
inc
add
aas
jb
pop
lea
xor
out
add
jle
pop
sahf
sbb
fdivr
js
ljmp
popa
mulb
mov
stc
xchg
test
xlat
lock
jmp
jecxz
jne
cmp
mov
fbld
cs
mov
aad
stos
shrl
sbb
pop
pop
insb
sti
int3
jge
sub
lods
dec
fists
ljmp
int3
popa
lret
movsb
sub
mov
dec
cmp
mov
push
or
pop
xor
mov
hlt
or
mov
lsl
enter
mov
data16
arpl
cmpsl
sub
sbb
sbb
adc
cmpsb
dec
clc
xor
loopne
mov
into
sarb
adc
pop
movsb
xchg
out
fsubrl
mov
dec
push
movsb
daa
rcr
xor
test
cwtl
xor
pop
aad
xor
mov
sbb
cmpsl
daa
push
test
cmp
das
xchg
pusha
dec
lds
jmp
jp
pop
das
dec
popa
sub
xchg
lcall
mov
mov
add
in
push
fmull
shlb
push
mov
addl
sub
mov
pop
cmp
inc
inc
jne
pop
adc
pusha
jp
arpl
lret
stos
fistl
add
sub
inc
sbb
cmp
cmp
jmp
in
mov
mov
push
mov
xor
cli
repz
xor
push
hlt
jb
and
lods
cwtl
in
or
jb
lds
pop
sahf
dec
fdivl
pop
mov
inc
push
add
aam
int3
and
movsl
adc
das
scas
jmp
dec
sub
push
xor
lahf
push
add
jmp
aam
insl
push
or
dec
adc
lds
adc
das
xor
orb
and
icebp
and
aas
mov
dec
push
das
jle
jmp
movsb
pop
inc
adc
pop
lret
sbb
or
sbb
dec
ss
js
dec
dec
and
dec
push
push
xchg
rcrl
pop
shll
scas
scas
paddb
bound
ss
pop
pop
in
mov
dec
mov
fisttpl
ret
stc
xchg
mov
add
dec
repnz
test
jmp
sub
bound
jo
div
int
sbb
sarl
mov
aam
ffree
icebp
cmp
je
imul
mov
xor
outsb
notl
mov
popa
mov
je
mov
push
and
arpl
jmp
insl
adc
shlb
inc
xor
pop
inc
pusha
aam
adc
clc
or
ds
fld
int3
adc
fnstenv
fsubl
hlt
fwait
ret
je
lock
gs
xchg
adc
xchg
ds
scas
mov
inc
rorl
cmc
mov
dec
xor
jp
xchg
adc
scas
arpl
imul
jg
add
or
daa
sbbl
push
stos
or
sbb
xchg
test
rolb
call
filds
mov
out
add
push
inc
mov
pop
cmp
cmc
push
push
fwait
icebp
mov
iret
cmp
and
movsb
lcall
iret
xchg
into
int
pop
aad
xchg
add
ljmp
std
jmp
int
test
mov
addr16
adc
adc
push
mov
dec
sub
shll
lea
mov
mov
cmpsl
inc
sub
sub
xor
nop
and
sbb
mov
adc
inc
jnp
pop
push
mov
jecxz
in
sbb
arpl
aad
jno
imul
xor
fs
iret
mov
mov
mov
or
inc
fucomi
stos
insb
dec
out
pop
pushf
sub
xchg
xchg
imull
inc
or
add
jg
enter
push
sahf
adc
fs
fwait
cmp
mov
mov
clc
jnp
std
and
ljmp
add
shrb
mov
test
fucomp
jns
lock
scas
or
aad
push
mov
repz
mov
xchg
loopne
aaa
std
repnz
push
jno
xchg
pop
in
xorb
mov
push
mov
dec
or
add
cmpb
test
pusha
jl
push
ja
int3
push
mov
sub
push
mov
cmpsb
xchg
mov
cmp
in
ds
xor
cmp
mov
add
mov
fs
test
je
bnd
sbb
xor
xor
xchg
jle
mov
mov
push
sbb
adc
int
xchg
push
pop
js
sub
push
lret
sti
fimull
mov
sub
dec
push
sub
jns
jmp
xlat
insb
repnz
jle
test
inc
dec
lods
push
movsl
icebp
jb
jp
cwtl
aas
push
xlat
jnp
adc
pop
xor
add
mov
fadds
sub
ljmp
out
jecxz
sub
mov
cmc
mov
invlpg
pop
jnp
lahf
push
inc
jl
inc
and
push
mov
inc
rcr
xchg
jae
popa
movsl
add
imul
pop
fcomps
add
rorl
rorb
in
cmp
ror
cmc
jb
xor
pop
xlat
in
or
in
xchg
inc
insb
cli
addb
cmp
test
dec
adc
xchg
inc
rcl
aam
repnz
push
add
mov
jg
cwtl
xor
add
xor
popa
push
dec
pop
loopne
mov
daa
fsubr
jb
out
addr16
in
cmpsl
test
shlb
shl
xchg
js
cmp
and
icebp
dec
xchg
in
imul
gs
mov
cwtl
inc
push
inc
adc
lret
xchg
popf
adcl
mov
and
add
mov
lds
and
ret
push
rolb
sub
dec
test
rcrl
pop
and
enter
xchg
push
testl
call
movsb
bound
and
shl
das
adc
sbb
pusha
or
add
mov
jb
ljmp
test
lods
iret
andl
pop
repnz
out
mov
loope
jae
imul
rcrb
push
clc
or
push
outsb
adc
pop
add
into
lret
mov
lret
pop
pop
ljmp
fbld
xchg
dec
pop
pop
dec
dec
inc
mov
pop
mov
in
xchg
push
pop
inc
dec
lock
popl
xor
rcl
or
push
xchg
cmp
xchg
movsb
jns
jmp
inc
adc
insb
adc
fisubs
mov
inc
roll
pop
outsl
xchg
gs
lret
dec
sbb
aam
mov
outsb
sar
cmc
jp
adc
out
inc
mov
or
fwait
icebp
add
add
rorl
cmpsl
mov
xchg
ret
lds
ret
rcr
pushf
push
out
xchg
jmp
dec
aad
jno
xchg
out
xchg
push
popf
xchg
xchg
in
clc
xlat
adc
int3
icebp
pop
mov
iret
in
cmp
insb
push
int
out
out
sbb
in
add
pop
dec
xlat
out
in
jecxz
sarb
jbe
pushf
enter
loopne
xlat
jge
and
jbe
push
xchg
mov
ljmp
mov
fcmovne
testb
jge
fnsave
push
insl
mov
loopne
sbbb
dec
adc
test
stos
ror
cltd
ljmp
cmp
negb
in
pop
pop
mov
xor
fwait
pop
dec
and
out
cltd
cli
push
add
aas
pop
dec
dec
pop
jnp
imul
mov
fcmovne
lret
out
jmp
sbb
or
cmp
sub
pop
dec
dec
pop
jnp
imul
mov
fcmovne
lret
out
jmp
sbb
or
pop
dec
dec
fistpll
imul
mov
fcmovne
lret
out
jmp
pop
cmp
sub
pop
dec
dec
pop
sti
outsl
jmp
fs
je
adc
inc
and
adc
xchg
popl
mov
xchg
lret
test
adc
add
xor
and
push
dec
inc
mov
imul
mov
mov
icebp
jmp
aad
or
sbb
and
push
gs
pop
jno
popa
jnp
sub
mov
xchg
icebp
loope
leave
adc
add
inc
dec
cmovns
sbb
cmp
fmul
sbb
xchg
push
fnsetpm(287
stc
imul
cld
xchg
and
sbb
sub
sti
fiadds
cli
adc
add
hlt
das
out
aam
imul
lahf
ss
sub
daa
shlb
mov
push
adc
imul
sub
icebp
mov
mov
fwait
scas
and
movntps
sti
mov
pop
sub
jno
arpl
outsb
pop
cmc
data16
inc
push
lret
sub
pop
add
std
dec
and
test
fsubl
inc
dec
xchg
cmp
je
fs
inc
imul
add
push
fwait
push
inc
pop
imul
fs
insl
and
jno
or
iret
pop
cmpl
icebp
jmp
imul
sub
pop
push
ja
mov
jae
dec
xlat
mov
hlt
aam
xlat
mov
sahf
mov
imul
pop
xor
sub
int
fucom
fadd
xlat
xchg
cltd
lods
mov
and
je
add
jns
or
adc
or
clc
in
fadd
mov
fcomi
jmp
sti
adc
add
xor
and
push
dec
inc
pop
jno
popa
jnp
mov
mov
icebp
jmp
sti
adc
add
xor
and
push
dec
inc
pop
jno
popa
jnp
mov
or
les
jbe
mov
lods
lock
xor
pop
and
and
or
dec
cld
inc
imul
sub
mov
loopne
sbb
mov
gs
xor
popa
jne
out
push
lcall
in
xchg
xchg
mov
test
lock
mov
testb
test
aas
je
xchg
bound
jg
jge
dec
stos
jmp
sbb
sbb
fs
cld
xchg
jb
fwait
les
cmpsb
pop
scas
xlat
inc
jmp
in
xchg
sbb
dec
lahf
pop
fisttpll
mov
test
cmp
lods
mov
mov
pusha
and
xchg
inc
xlat
jp
xor
sbb
aam
push
push
dec
icebp
inc
add
ja
dec
div
out
test
cltd
mov
mov
lds
int3
shl
cli
or
push
std
addr16
mov
xorl
inc
inc
pop
cli
ret
cmp
push
repnz
je
xor
adc
mov
aaa
push
mov
lret
enter
jg
or
push
sub
add
and
mov
imulb
add
fld
scas
push
leave
sub
mov
out
push
rcrb
jecxz
pop
lds
mov
js
push
rorl
jp
sbb
cmp
sub
inc
xchg
imul
insb
mov
mov
jecxz
jnp
jle
rclb
lret
jp
lea
or
ljmp
mov
mov
cmpsb
repnz
test
lods
outsl
pop
cld
cmpsl
xchg
arpl
jp
adc
adc
mov
adc
int3
mov
mov
aam
or
jge
mov
cmp
xchg
push
daa
sbb
sub
pushf
push
fbstp
jae
int
push
lock
nop
push
inc
pop
fisttps
cs
sub
jo
repnz
pop
cmpl
sub
outsl
aas
outsb
inc
xchg
bound
imul
punpckhbw
xor
adc
jnp
lds
cmp
xor
std
push
add
mov
mov
pop
push
sub
cmp
mov
xchg
fiaddl
not
enter
int
outsl
or
add
pop
repz
adc
fbstp
dec
out
stc
or
in
xchg
pop
dec
xor
sub
ficoms
or
inc
sarl
and
cltd
mov
mov
outsb
jp
mov
inc
imul
das
xchg
setb
adc
xchg
jg
cvtps2pd
or
xchg
mov
out
cwtl
jl
push
push
imulb
push
sbb
or
dec
mov
xchg
and
jmp
xor
mov
enter
mov
pop
mov
push
cmp
sbb
dec
mov
fdivrp
push
loopne
mov
add
sub
ret
stos
dec
add
sbb
cmpsb
lods
mov
cmp
mov
sbb
inc
sbb
mov
into
pushf
out
pop
xor
or
pop
mov
iret
leave
pop
and
jb
outsb
mov
fdivr
mov
loopne
jmp
lea
add
incb
insl
add
cmp
icebp
pop
adc
enter
jg
int
mov
repnz
arpl
mov
pop
jp
xchg
xor
call
mov
gs
lret
hlt
test
adc
sub
xchg
mov
aam
into
xor
lret
movsb
inc
cmpsb
addb
pop
xchg
test
push
in
enter
jo
inc
ret
inc
jbe
lahf
xor
and
mov
dec
sbb
and
js
jns
lds
mov
mov
inc
pop
sub
sbb
ret
add
dec
das
ljmp
imul
push
lods
push
push
push
push
imul
jg
push
leave
or
adc
cld
inc
cmp
test
push
adc
cs
ja
xchg
xchg
aas
repz
std
roll
cld
add
out
scas
xor
loop
stos
and
dec
ja
jecxz
sarb
sub
mov
loopne
sub
idivb
bound
sub
imul
jae
out
lahf
cmp
cmp
mov
or
shrb
rcl
push
call
xchg
dec
sti
pop
or
jge
cs
test
imul
add
call
jp
mov
jg
ljmp
mov
jl
addb
cmpl
xchg
in
cmp
lds
sub
mov
stc
xchg
sub
mov
mov
test
fs
jecxz
mov
int
dec
mov
hlt
les
inc
in
mov
or
aas
hlt
pop
cmp
movsl
jno
xchg
std
ret
adc
lahf
cmp
adc
scas
pop
sub
push
shll
mov
dec
jg
sbb
ss
cli
leave
loop
cmpsb
mov
test
subl
lahf
mov
data16
or
lahf
daa
rorb
sbb
or
dec
mov
adc
cmpsb
sbb
jge
or
jo
or
ss
ja
lds
rclb
mov
je
dec
inc
inc
or
inc
iret
or
orb
sbb
cmp
pop
xor
ljmp
pop
pop
shrl
out
daa
add
pop
push
fistpll
repnz
pusha
add
loop
js
adc
xor
into
pop
adc
popa
sbb
ljmp
sbb
leave
test
andb
cmp
mov
stos
lahf
and
or
push
out
mov
dec
loop
inc
bound
loopne
jle
push
mov
popa
push
mov
jns
xchg
xchg
pop
mov
in
mov
mov
mov
adc
jo
fisttpl
inc
in
ret
xor
dec
fsub
pop
xlat
int3
add
ret
push
int
inc
fsubr
lahf
xchg
loop
fs
mov
lds
sub
fstpt
pop
shlb
and
pop
out
lea
jnp
sub
pop
int3
sar
and
dec
add
notb
cmc
mov
icebp
test
cmc
mov
inc
lret
nop
sbb
ret
ja
mov
orl
pop
pop
shlb
and
mov
mov
push
adc
sub
inc
or
out
push
mov
mov
sbb
cltd
push
stos
jns
fisttpll
xchg
jb
mov
cmp
mov
push
dec
out
rcll
imul
icebp
jge
push
movsl
lcall
xchg
lret
jno
push
cmpsb
dec
mov
inc
loopne
or
shrl
rcr
cmp
ss
jmp
jbe
inc
imul
gs
jl
out
cmpsl
xchg
das
push
adc
ja,pt
adc
jmp
lds
push
xchg
call
mov
push
outsb
jbe
xchg
daa
test
and
pop
stos
out
push
pushf
and
cmp
mov
aas
dec
push
loopne
sub
inc
out
xchg
sbb
ss
mov
adc
aad
jo
push
mov
cmpl
ficoms
cli
cmc
mov
pop
jge
or
les
mov
outsl
sbb
in
xchg
daa
mov
jno
sub
push
add
inc
mov
dec
popf
nop
xor
ljmp
lret
mov
cli
xlat
enter
push
sub
add
xchg
js
pop
xor
pop
in
iret
push
and
sti
lret
rcrl
push
stc
insb
or
ja
lret
test
imul
sub
in
inc
pusha
clc
mov
popa
mov
ja
mov
or
jecxz
mov
imulb
mov
fstpl
hlt
loop
push
aad
ficompl
dec
icebp
adc
and
sub
nop
add
stos
mov
push
jp
mov
rcr
fwait
inc
or
cmp
mov
aam
test
push
in
sahf
sbb
dec
mov
mov
or
mov
mov
out
adc
lcall
pop
xor
push
add
inc
jg
adc
jle
sub
xchg
sub
js
pop
mov
jle
lods
nop
sbb
insl
mov
out
lcall
pusha
inc
push
push
dec
mov
adc
and
pop
jbe
pop
out
inc
loopne
cmp
in
or
popf
cmp
lock
int
mov
xor
mulb
rclb
int
mov
pop
sub
xor
hlt
xlat
lock
repnz
dec
jne
add
outsl
ja
mov
xchg
or
fdivs
and
cmp
push
aad
xchg
inc
push
fwait
adc
cmp
ja
js
push
push
adc
push
outsl
jo
ds
cwtl
cmc
lret
jb
pusha
mov
push
or
jne
in
cmpl
mov
jo
cmp
dec
push
add
or
in
dec
mov
xchg
mov
rclb
add
rclb
das
jno
and
mov
mov
push
out
pop
fisubrs
pop
inc
xchg
outsb
adc
lods
and
out
cmpsb
lcall
mov
dec
int
fs
mull
mov
inc
ljmp
test
stc
mov
cmp
or
xlat
sti
and
mov
adcl
mov
in
mov
pop
sub
aad
jns
and
lret
or
and
and
push
push
jmp
outsl
cmpl
cmpsl
push
mov
pop
lea
inc
adc
sbb
fwait
test
imul
out
movsb
cmc
rolb
aas
nop
jns
jmp
repnz
loopne
les
in
loopne
ja
pop
in
jl
aaa
mov
inc
jg
mov
sub
add
inc
jmp
xchg
jg
aad
jne
cltd
lods
daa
aad
ljmp
push
mov
and
sub
lods
sbb
scas
sub
in
xor
sbb
mov
pop
jne
dec
fbstp
mov
in
testl
lds
js
cmp
loope
push
cmc
addr16
sbb
repnz
movsb
test
les
mov
xchg
dec
adc
popf
outsl
lahf
jecxz
aad
xchg
pop
lea
inc
adc
mov
jl
rorb
movsb
xchg
mov
sbb
mov
xlat
je
lcall
ljmp
add
test
sbb
out
cmpsl
adc
sub
dec
aaa
sahf
in
dec
cmc
and
leave
xchg
rolb
jb
ror
aas
daa
mov
sub
in
mov
and
sbb
test
shlb
sub
lea
ret
hlt
in
mov
pop
divb
mov
xlat
cltd
jns
outsb
jle
xchg
sti
pushf
fbstp
roll
stc
stos
cltd
mov
jb
jno
inc
push
adc
mov
ljmp
xor
add
xchg
cwtl
inc
adc
fcomi
hlt
inc
xchg
rcr
dec
dec
push
cmpsl
xor
cmc
xor
jo
adc
jp
incb
scas
icebp
les
xchg
ret
lahf
inc
dec
mov
fiadds
mov
insl
into
rcrl
dec
sub
call
movsb
jns
jge
mov
ss
lret
push
adc
or
fwait
and
pop
sbbb
pop
les
ss
dec
dec
out
and
pusha
sub
sbb
cld
imul
ficoms
xor
mov
movsl
fwait
ljmp
xchg
fmull
inc
pop
mov
pop
and
mov
cmp
sti
adc
test
mov
push
ret
sbb
movsb
test
jae
outsl
andb
lahf
push
adc
cli
adc
dec
dec
outsb
fimull
nop
push
movsl
out
insb
test
gs
cs
hlt
push
loop
aas
xor
mov
dec
incl
repnz
into
mov
mov
stos
xlat
inc
mov
or
loop
pop
lcall
xchg
cmp
xor
mov
lcall
nop
mov
sbb
add
jb
bound
int3
lock
into
test
cmpsb
push
popl
jnp
jg
ds
leave
cwtl
or
fs
fimull
xchg
mov
fimull
jl
and
fiaddl
fnstenv
ljmp
sub
mov
leave
adc
lods
int3
xchg
rorl
cmpsb
test
dec
push
xchg
push
xchg
sahf
cmp
fwait
xchg
cmp
pop
xchg
adcl
dec
jae
mov
sub
cmpsl
shl
cli
xor
mov
incb
jmp
paddsw
ja
lret
inc
je
xchg
mov
std
in
dec
cmp
daa
mov
ss
cmc
iret
xor
jae
mov
pop
lock
int
xor
add
or
xor
cmp
pop
and
jecxz
and
outsl
jne
add
mov
aad
andb
dec
movsl
in
hlt
sub
dec
scas
push
hlt
push
mov
inc
mov
out
mov
push
dec
and
mov
int3
sahf
push
test
lret
rorb
repnz
push
pop
push
rorb
js
sub
xlat
movsb
fildll
das
decb
in
or
xor
jae
fsubrl
mov
pop
ja
cmp
scas
inc
inc
lahf
add
cmc
sbb
cmpsb
test
fcmovnbe
fwait
loope
outsb
pop
sbb
pop
jns
pop
scas
movsb
fadd
cmp
and
sub
pcmpeqd
shlb
aad
push
test
pop
fs
shrl
enter
adc
sbb
ficompl
lret
and
jbe
cmp
adc
shlb
insb
mov
jae
and
movsb
or
cmpb
pop
movsb
xchg
clc
aam
fsin
lock
sbb
mov
and
iret
sbb
pusha
repnz
xchg
xor
sub
jecxz
xor
xchg
repnz
pop
sbbb
mov
arpl
fistpll
xor
jne
xchg
scas
sarb
jecxz
inc
push
mov
rcl
xor
mov
sarl
dec
lret
lcall
sub
add
out
imul
xchg
stc
nop
dec
imull
mov
mov
jae
test
pop
adc
fwait
jno
cmp
mov
cli
fsubrl
xlat
loope
loop
mov
cmp
or
fwait
cmpsl
sub
xor
sub
mov
pop
inc
sbb
push
jae
xor
repnz
lcall
adc
adc
inc
int3
shrl
inc
loopne
mov
test
xchg
adc
cld
mov
fnstsw
adc
imul
inc
daa
cmp
pusha
andl
and
pop
lods
push
cmp
mov
inc
popa
ret
inc
inc
cld
out
fmuls
dec
jle
and
adc
cmc
or
or
loop
sbb
xor
inc
aas
xchg
divl
xchg
subb
scas
test
clc
jmp
ret
cmpsl
mov
push
mov
fisubrl
cmpsl
dec
adc
cmpsl
cltd
and
fcomp
push
fwait
test
aas
xchg
imul
xor
xchg
xor
shll
or
inc
out
cmp
mov
js
pop
imul
shl
xor
enter
cmp
mov
add
movsb
js
jne
pop
pusha
mov
push
leave
cmp
push
stc
aas
lahf
ret
fdivrs
jo
dec
loopne
aam
call
dec
add
out
sub
adc
sub
movsl
push
hlt
xchg
sti
sbb
xchg
test
aaa
xorb
push
lea
pop
dec
add
inc
cmp
lods
sbb
mov
lock
mov
mov
adc
add
or
cmpsb
sub
push
sbb
movsb
inc
or
lahf
pop
addr16
sarl
mov
push
addr16
xor
mov
mov
cs
out
or
sbb
outsb
xor
mov
jns
in
aad
stc
push
orb
or
dec
and
rol
lret
cmp
decb
mov
sbb
pop
mov
adc
jecxz
test
xchg
push
leave
in
testb
sti
jo
dec
int
mov
pop
mov
mov
test
sbb
fisttpl
sbb
cmp
push
dec
lea
xchg
das
push
jb
in
and
mov
xchg
jnp
mov
xchg
dec
jnp
mov
push
pop
movsl
shr
in
xchg
int3
test
fdivrl
jg
xor
adc
and
rclb
dec
scas
mov
int
jg
mov
pop
mov
scas
int3
xor
sub
push
sti
addb
adcl
aam
jns
pusha
lods
lret
dec
and
cmpb
xadd
scas
test
push
xchg
adc
mov
mov
ss
scas
ss
cmp
cs
dec
push
pop
popa
icebp
jno
sub
sub
daa
cwtl
jge
inc
cli
test
loop,pt
pop
aaa
jns
pop
or
icebp
and
sbb
scas
out
inc
lret
and
loop,pn
jno
mov
test
bound
pushf
mov
dec
mov
xor
xchg
inc
add
cmpsb
and
sub
push
dec
mov
pop
lahf
lock
or
cwtl
shll
and
arpl
push
ja
loop
adc
xor
jno
inc
push
xlat
xchg
call
cmp
inc
in
mov
stos
test
xor
cmp
jle
jmp
andps
je
sbb
adc
jmp
ret
lock
push
into
cmp
pop
xor
loope
inc
pop
popf
jp
test
sbb
lret
inc
lock
jg
loop
leave
into
pop
divb
sbb
push
xchg
aam
paddsb
sub
sahf
inc
mov
fisttpll
stos
iret
mov
jmp
pop
or
mov
lock
test
nop
cwtl
les
les
lds
push
lret
and
popf
and
dec
fwait
stc
mov
sub
xlat
mov
xor
imul
aas
or
inc
fsubrs
mov
cmp
dec
adc
pop
stos
loopne
pop
leave
push
call
inc
push
jmp
scas
xchg
icebp
je
adc
jge
out
popa
xchg
dec
rol
mov
aad
xchg
ffreep
jge
pop
dec
sbb
and
dec
lock
cmc
jb
les
orb
fbld
push
fs
fidivs
cltd
pcmpeqb
dec
pop
adc
sbb
cmp
lret
out
mov
mov
jbe
jmp
sbb
jge
sbb
sbb
and
out
or
fidivrl
scas
mov
int
inc
jae
sub
fstl
xchg
xlat
lretw
cmp
outsl
adc
ss
dec
loopne
mov
in
sbb
cs
jge
and
cmp
mov
jns
loop
or
fwait
jmp
sub
sub
or
je
adc
cltd
push
dec
sub
movsb
inc
test
xchg
and
outsb
popf
push
scas
adc
clc
xlat
popa
push
out
jecxz
insb
dec
daa
pop
add
shlb
fucomi
jo
inc
fsubs
mov
or
lahf
push
mov
or
mov
mov
stos
add
addr16
dec
ljmp
sbbb
inc
rorl
imull
jb
cld
lret
xchg
ret
mov
or
in
fistpl
mov
int3
and
pop
adc
cmc
arpl
sbb
pusha
cmc
fstp
cli
xchg
cwtl
je
mov
jno
testl
adc
xor
adc
mov
mov
add
stos
jo
and
cwtl
push
rclb
fwait
mov
int3
in
jecxz
mov
mov
dec
fcomps
in
repz
out
pop
sbb
ja
lods
sub
adc
pop
outsl
loop
and
adc
lock
lods
push
or
push
sbb
test
mov
xor
cmc
cmpsb
push
std
fstps
add
loopne
cmpsl
out
roll
jnp
mov
call
test
daa
out
pop
cmp
lcall
into
lds
or
lock
jle
fildll
cltd
out
cld
movsb
cltd
dec
test
xor
roll
clc
imul
mov
cs
les
mov
scas
mov
add
scas
dec
fnsave
xlat
lcall
or
cmp
xor
cmp
jbe
lds
jle
mov
mov
sub
or
lret
sarb
push
xlat
insl
es
mov
pop
sub
lods
rcll
jne
stos
mov
test
inc
dec
ret
jae
mov
xor
sbb
mov
inc
cld
cs
cwtl
movsl
scas
in
adc
cmp
mov
add
mov
cmp
ljmp
mov
jno
adc
lret
insb
and
jecxz
loop
sub
and
jge
sub
scas
mov
fcomi
jmp
sti
adc
add
xor
and
push
dec
inc
pop
jno
popa
jnp
mov
mov
icebp
jmp
sti
adc
add
xor
and
push
dec
inc
pop
jno
popa
jnp
popl
mov
icebp
out
loope
adc
add
xor
and
push
dec
inc
pop
jno
popa
lahf
xchg
outsl
cmpl
lret
rcr
imul
adc
add
es
and
sbb
idiv
out
push
subl
xchg
sbb
jbe
inc
dec
push
push
es
xor
push
cs
leave
out
test
out
sahf
cmpsb
mov
mov
dec
push
sbb
push
push
dec
ds
cs
je
mul
outsb
not
xchg
mov
adc
xor
pop
dec
jb
push
scas
out
cwtl
mov
addb
lcall
mov
adcb
mov
fisubrs
out
pushf
push
cmpsl
jno
dec
addr16
inc
mov
subl
pop
cmc
rolb
mov
repz
sub
shl
mov
mov
cs
xchg
fndisi(8087
push
dec
ss
jmp
out
outsb
mov
jge
imul
xor
jle
movl
xchg
lcall
mov
imul
aaa
mov
jmp
mov
arpl
and
add
push
data16
cmpl
cs
push
out
push
incb
fmull
pop
mov
inc
loopne
mov
push
ja
push
or
into
ds
aaa
js
mov
negb
shl
fnstcw
dec
xor
add
jb
push
pop
inc
dec
ja
mov
in
repz
cli
pop
add
cmp
sbb
jnp
jge
dec
addr16
mov
mov
xchg
out
mov
ret
mov
dec
jbe
inc
outsb
push
push
es
ss
cs
fsubp
into
idiv
out
sahf
cmpsb
mov
pop
dec
jbe
inc
outsb
push
push
es
ss
cs
fsubp
or
cli
mov
mov
fnsave
cmp
cld
mov
xchg
addl
test
xchg
arpl
jp
bound
xchg
adc
jb
cmc
fiadds
lods
lret
out
int3
cmp
cltd
xor
jno
sbb
cld
mov
jns
push
fldenv
and
and
movsb
pop
je
test
adc
adc
hlt
push
mov
push
and
cmpsb
aam
xchg
popa
lock
stc
or
sbb
xor
lock
out
notl
test
loope
add
clc
cmp
in
loopne
dec
stos
mov
testl
xchg
fistl
xor
add
xlat
sbb
push
test
xor
cmpsb
mov
xor
xor
jbe
and
stc
jb
push
subb
jg
push
aaa
adc
sbb
in
aam
sbb
mov
repz
loope
xor
fildl
icebp
sbb
mov
xchg
sbb
push
xchg
mov
xor
pop
and
jmp
cmpsl
int
add
jl
fsubl
lahf
outsb
jge
sub
sti
outsb
mov
out
mov
in
outsl
xor
lret
cmpb
daa
dec
int
dec
imul
jmp
ja
in
cmpl
nop
cmp
mov
mov
aaa
jbe
add
adc
pushf
mov
sub
dec
arpl
push
stos
xchg
call
in
test
mov
or
sub
movsb
push
pushf
push
cli
nop
insb
sbb
stc
icebp
cmp
sub
test
imul
push
sbb
or
int
cmp
outsl
jb
and
push
cmpsl
repz
inc
mov
mov
in
push
not
push
clc
je
push
test
orl
pushl
pop
inc
fwait
xchg
dec
arpl
das
movsb
jae
sub
stos
inc
mov
push
or
or
int3
leave
cmc
outsw
addr16
icebp
dec
addr16
xchg
in
popf
sbb
adc
sarb
or
mov
mov
xchg
scas
and
cmp
sub
jno
gs
insb
in
lea
loop
or
in
pop
dec
mov
xchg
jg
cltd
dec
mov
cmc
stc
add
cli
lock
cmp
mov
mov
add
outsl
pop
push
cmp
or
in
inc
push
mov
test
jae
rclb
mov
pop
insl
pop
sub
rclb
movsb
jno
mov
clc
pop
fisubl
int
sbb
xor
xchg
and
sbb
dec
jp
je
out
cmpsl
dec
adc
and
call
shl
popf
sub
mov
and
sub
fbld
jb
pop
popa
popa
decl
aad
pop
int3
out
dec
out
loop
aam
jns
inc
int3
pop
dec
mov
jl
adc
aam
mov
inc
pushf
pop
adc
out
cmp
mov
cmc
enter
cmp
pop
push
dec
fsubrl
or
mov
jmp
out
popf
test
ja
sub
jno
or
sub
cmp
jmp
dec
rclb
jne
sub
push
adc
cmpsl
mov
push
mov
lcall
lahf
fs
or
fstpl
adc
lods
jae
enter
jecxz
cmp
cld
paddusw
iret
mov
jae
adc
jmp
subb
adc
xor
into
adc
loop
add
xor
insb
ds
mulb
mov
enter
lret
push
sub
dec
aad
out
jae
push
clc
fsub
mov
mov
dec
call
xor
jbe
add
dec
data16
push
pop
in
loope
xchg
ss
out
cmpsb
jo
clc
sub
ret
jle
insl
pop
std
loop
lahf
mov
test
es
in
enter
mov
mov
mov
jno
lret
js
xchg
inc
push
fadds
xor
jbe
sbbl
imul
and
fwait
mov
in
add
xor
outsb
jne
dec
fldt
sbb
orl
xchg
xchg
shll
pop
jmp
ret
dec
scas
mov
pushf
ret
add
jbe
cmp
pop
rolb
cmp
mov
pushf
xor
xor
into
scas
repz
flds
and
dec
test
push
loop
jp
imul
dec
cmp
push
inc
push
outsl
and
lahf
adc
dec
adc
dec
mov
sub
jp
std
cli
testl
xchg
loop
add
push
int
push
and
cmp
push
outsb
lods
daa
repnz
add
xchg
fsubr
cmpsl
ja
inc
ja
mov
mov
sub
lcall
lcall
lea
je
cmp
out
in
rorb
inc
stos
push
xor
fldl
fsubp
sub
pop
inc
sbb
out
rorb
lret
push
icebp
in
sbb
push
in
lds
arpl
iret
xchg
fisttpll
arpl
dec
push
addr16
sub
push
loop
cmp
aam
or
mov
pop
xor
dec
xchg
adcl
jne
cmp
mov
jne
stos
sub
adc
pop
mov
rcrb
and
jb
test
fiadds
or
std
inc
lcall
sub
sub
mov
stos
dec
and
push
gs
pop
mov
in
lea
lods
dec
testl
sub
dec
dec
cld
addr16
movsb
xor
stos
mov
inc
sbb
pop
pop
inc
cld
push
inc
jno
mov
jecxz
cmp
jg
mov
mov
dec
out
out
mov
jnp
cwtl
push
mov
mov
inc
mov
push
mov
pop
dec
mov
repnz
out
xlat
iret
or
pop
mov
dec
js
jecxz
sbb
mov
ret
and
sti
cmc
push
ss
dec
and
dec
sub
rol
sbb
mov
ds
sbb
add
jmp
sub
push
mov
sbb
daa
xchg
push
mov
inc
cltd
or
loop
mov
xchg
outsb
loope
xor
ss
loopne
xchg
xchg
inc
and
pop
jb
push
mov
fld1
mov
repnz
test
lods
aaa
push
aas
pusha
testb
mov
out
hlt
stc
cmpsl
mov
mov
leave
or
hlt
mov
lds
fsubrl
ss
push
repnz
ja
inc
push
addl
inc
and
jno
xor
sbb
arpl
cmp
and
iret
push
push
push
xor
mov
inc
jb
mov
mov
xchg
jb
loope
test
insl
arpl
sub
pop
jge
pop
popa
jmp
test
loop
sub
mov
jg
or
dec
push
dec
xchg
test
bound
lock
or
mov
jae
or
popf
xor
arpl
rcrl
movsl
sbb
pop
lds
add
pop
rclb
or
push
jmp
inc
jbe
and
jmp
inc
sub
push
stos
sub
xor
xor
add
sbb
jae
pop
aad
sub
test
xchg
xor
aas
add
out
jle
mov
adc
sbb
aaa
sub
mov
jne
mov
lock
sti
xchg
push
inc
sub
and
cmp
adc
sti
les
inc
push
push
and
roll
mov
mov
mov
sub
jmp
clc
int3
or
flds
push
jmp
and
fadds
dec
movsl
add
popf
stos
xor
jae
pop
jg
sub
hlt
push
leave
testb
adc
mov
loop
and
enter
arpl
lret
test
mov
mov
loopne
enter
sti
dec
fmull
movd
je
pop
cwtl
rcl
loopne
mov
push
pop
pop
fstl
and
rolb
mov
mov
iret
add
sbb
mov
test
lea
sbb
push
jecxz
xchg
push
jp
in
xchg
jns
add
sub
jbe
pusha
dec
repnz
fidivs
and
xchg
adc
rorl
fisttpll
idiv
pop
jb
mov
and
inc
cli
ds
cmpb
xlat
mov
sarb
mov
in
push
es
faddl
sti
cmpsl
popa
out
mov
mov
push
in
outsb
je
adc
cs
adc
in
loop
mov
adc
sbbl
pop
stos
sbb
add
push
ss
jb
in
add
push
jae
scas
xchg
std
ret
adc
add
cmpsl
mov
ss
mov
add
fdivl
daa
lods
jbe
add
fst
incb
leave
jmp
clc
push
inc
push
sub
mov
mov
loop
pop
ret
fstpt
push
push
jnp
dec
insl
xchg
orl
push
cltd
xor
or
ljmp
or
arpl
cmp
movsb
xchg
cmpsb
lea
push
ret
dec
mov
inc
sub
jmp
lods
lea
int
lds
in
adc
jle
and
sbb
pushf
out
mov
jg
fwait
imul
mov
inc
push
insl
call
cmp
mov
inc
aas
repnz
and
dec
fs
jp
clc
adc
clc
or
rcr
push
stc
shrb
jge
mov
jmp
hlt
sbbb
mov
outsl
jmp
mov
mov
test
jl
mov
cwtl
sbb
rcll
or
jecxz
cmp
les
or
pop
lea
hlt
mov
repz
cmpsl
mov
call
shll
lds
push
cmp
lcall
ds
clc
mov
jns
mov
into
xor
xchg
inc
outsb
das
test
subl
add
fucomip
xlat
mov
push
into
mov
mov
repz
xchg
mov
mov
and
xchg
insb
dec
pop
mov
pop
push
pop
bound
cmp
xchg
mov
xor
out
movsl
add
lahf
add
sub
xchg
scas
out
xchg
xor
jae
repz
movsb
and
sub
sub
jmp
roll
add
mov
lcall
pop
rcrb
pop
enter
ldmxcsr
jno
adc
addr16
mov
add
divb
xlat
cmp
popa
hlt
push
mov
mov
in
mov
test
daa
mov
out
push
mov
pop
inc
jne
gs
mov
andl
in
dec
adc
insb
sbb
sarb
adc
test
mov
xor
fcomip
repnz
pusha
pop
nop
mov
xor
inc
adc
in
out
mov
shrl
nop
cli
push
ja
or
mov
scas
enter
hlt
cmp
fsubrs
cmp
mov
mov
ficomps
pop
mov
adc
movsb
pop
gs
int3
mov
push
mov
aam
or
xchg
mov
aaa
mov
mov
aaa
dec
dec
mov
sarl
loopne
and
and
int
jle
shr
mov
mov
push
movsb
mov
xchg
ret
push
and
ds
sbb
jl
mov
cmp
or
pop
repz
mov
fisubrl
sub
mov
adc
pushf
cli
aam
mull
mov
adc
mov
into
pusha
data16
test
mov
outsl
gs
aad
or
or
scas
inc
sub
fistpll
arpl
push
fdivrl
outsl
fisubs
fnclex
sub
dec
not
cmp
jbe
mov
mov
das
adc
sbb
ljmp
push
lret
cmp
inc
add
sbb
cmp
daa
aad
add
pop
mov
ficompl
je
in
add
jne
movsb
mov
cmp
jnp
mov
lods
push
add
cmpsl
mov
adc
dec
ds
fsubs
das
lret
jnp
xor
xlat
xlat
push
push
mov
sub
lahf
insl
mov
fcompl
jnp
les
xor
popf
addb
adc
dec
jle
push
mov
xchg
pop
iret
stos
fsubs
xchg
xchg
call
pusha
outsl
rcl
andl
jns
xchg
cmp
inc
add
jg
inc
arpl
or
xor
xchg
aad
pop
lock
das
inc
lcall
imul
xchg
fisubl
daa
lock
arpl
addl
push
in
stc
add
jb
cs
cmp
mov
notb
xchg
outsb
adc
call
lret
iret
and
push
mov
into
pusha
cld
leave
pop
loopne
mov
jge
sti
inc
lret
mov
iret
icebp
push
loop
and
xor
hlt
cmc
xchg
pop
xlat
cmpsb
mov
adc
mov
sarb
fisubrl
mov
mov
clc
jmp
jg
incb
fimuls
decl
and
ds
pop
repnz
ljmp
pop
ret
pushf
hlt
iret
sbb
fsub
add
cmp
sbb
push
adc
pop
dec
jo
add
push
jb
push
sbb
cmp
sub
das
loope
in
inc
jge
arpl
dec
outsb
lret
jne
jno
mov
pop
mov
xchg
shrl
adc
or
push
mov
addr16
fadd
nop
popf
xor
jae
pop
jno
fidivl
or
sub
std
jle
rorb
and
hlt
ret
mov
and
xor
or
aaa
es
ror
jmp
push
cld
mov
dec
cmp
cwtl
cmc
sbb
into
or
pop
jne
xor
mov
add
and
subb
fmuls
scas
leave
popa
aam
inc
and
xorl
inc
xchg
pop
aad
addr16
mov
pop
jnp
test
push
jl
push
jb
mov
lock
cmp
cmp
xchg
inc
jge
lds
test
push
gs
aad
sub
clc
xchg
jbe
mov
adc
dec
xchg
shll
or
jns
lret
je
aam
es
sbb
mov
jo
js
jmp
testl
scas
test
sbb
pop
cmpsl
xchg
add
xlat
pop
lea
cwtl
inc
mov
add
cmpsb
movsb
inc
into
icebp
sbbl
negl
jmp
xor
sbb
xor
mov
dec
lock
sub
dec
push
xor
movsl
add
and
lret
les
adc
push
mov
addl
xchg
or
pop
push
push
ficomps
cli
gs
outsb
pusha
mov
sub
xchg
into
clc
rcr
jge
addr16
fucompp
and
inc
lea
ds
idivl
cmpl
push
xor
arpl
cmpsb
jne
loope
adc
push
pop
xchg
adc
stos
dec
and
push
sub
mov
and
or
mov
cmp
dec
cmp
jae
cmp
adcl
aad
shll
push
iret
or
jp
mov
lock
dec
sub
test
inc
pusha
das
stos
pusha
lcall
push
mov
cmp
enter
leave
mov
jo
cmp
sub
shlb
adc
lods
add
repz
push
lods
and
daa
pop
ret
cltd
mov
daa
aam
inc
push
cmp
cwtl
loopne
pop
pushl
fcmovbe
push
jnp
mov
jo
stos
jmp
mov
out
mov
in
dec
xor
or
mov
in
enter
insl
xor
imul
xchg
enter
clc
pop
js
or
sbb
dec
sbb
mov
repz
adcl
jae
xchg
or
sub
push
push
inc
and
jnp
cmc
inc
push
popa
gs
xor
inc
out
sbb
icebp
xchg
mov
fisubs
clc
das
jnp
adc
mov
pop
sti
mov
xorb
jo
stos
and
repnz
ljmp
sbb
test
addr16
push
xor
sbb
add
insl
repz
cltd
mov
mov
das
ja
scas
dec
push
or
in
fcomp
pop
fidivs
jno
adc
loope
or
sbb
fucomip
cmp
leave
mov
xorl
cld
shl
xchg
sbb
jg
test
adc
in
push
xor
xchg
jbe
data16
enter
mov
rolb
in
sbb
insl
jnp
iret
fadds
mov
cli
jbe
jno
jmp
dec
movsb
push
pop
push
popa
rcrl
mov
imul
push
and
xor
dec
pop
js
adc
enter
xchg
inc
inc
push
jl
adc
mov
leave
test
lock
divb
inc
lcall
lret
int
and
inc
lods
jmp
jno
adc
jmp
lods
and
jae
jne
stos
aas
bnd
inc
adc
sbbl
push
lods
cmpsl
dec
hlt
out
in
stc
addr16
push
sahf
ds
cwtl
out
call
pusha
test
outsb
mov
mov
leave
mov
mov
pusha
inc
cmp
mov
push
mov
cld
or
scas
cmc
std
xor
ljmp
out
hlt
mov
cmp
mov
push
mov
cmp
es
sub
dec
aaa
cmp
xchg
lods
inc
in
cltd
mov
rcrb
ret
pusha
les
stos
bound
jg
or
fildl
stos
mov
cmpsl
xchg
jp
jmp
or
in
sbb
and
and
xchg
add
add
adc
adcb
scas
cwtl
in
xor
xor
lret
fsubr
pop
ja
jle
cwtl
aad
pop
imul
cmp
xchg
sbb
dec
int
mov
insb
pusha
jecxz
xchg
addr16
push
or
mov
popf
mov
pop
pop
shrb
adc
sub
js
test
xchg
mov
jno
sbb
and
push
sarb
cmc
and
add
popa
and
mov
or
mov
pop
push
add
mov
das
dec
xor
fwait
test
je
mov
cltd
xchg
mov
icebp
cld
adc
negb
ja
cmpsl
ss
sub
cli
pop
or
pop
idivb
xchg
inc
fcompl
insl
js
adc
push
sti
push
stos
push
xor
mov
and
pop
roll
mov
or
sbb
lcall
and
cmp
scas
inc
push
sub
cmpsl
mov
or
xor
bound
jecxz
gs
push
jns
subl
lcall
push
aaa
cmpb
popf
jge
cld
sahf
ja
pushf
test
ds
es
xchg
xchg
mov
ror
inc
sarb
in
and
out
inc
mov
sub
dec
cwtl
mov
adc
jmp
ja
and
jg
pop
pop
cmc
mov
push
jae
fwait
xchg
fsubp
xor
pop
lods
cld
and
test
push
inc
cmpsl
pop
add
lret
xor
mov
mov
not
out
insl
cmp
popf
xchg
sbb
mov
call
xor
lea
jmp
fdivrs
rep
orb
fmull
bsf
jbe
and
insl
enter
in
je
es
mov
and
push
lods
xchg
out
pop
dec
xchg
shlb
dec
movsb
lods
sub
push
lock
xacquire
lcall
ss
jmp
sbb
jbe
cwtl
xchg
hlt
out
push
inc
sub
shll
mov
sub
lret
fimull
jecxz
xor
adcb
jns
pop
repnz
popf
repnz
std
push
jg
pop
fdivp
fidivl
push
dec
idivl
gs
pushf
loope
cmpsb
enter
cwtl
fsincos
lret
repnz
add
xorl
orb
cwtl
mov
testb
push
xor
xchg
fldenv
pop
test
pop
imul
mov
cmpl
push
clc
loope
jae
dec
xchg
and
repz
pcmpgtw
push
jne
mov
ret
jne
imul
or
js
jle
mov
sub
mov
cmc
pop
mov
loope
loope
add
std
sbbb
sbb
fsts
push
and
cmp
push
aad
jg
mov
stos
and
add
inc
sub
gs
pop
sti
and
mov
add
test
gs
xchg
scas
mov
sub
sub
mov
not
xor
test
jle
std
mov
in
out
xchg
dec
cmp
test
clc
lahf
ss
fstpl
cmp
xchg
gs
adc
in
add
cmp
sbb
sahf
cmpsb
mov
pop
dec
jbe
inc
outsb
push
push
es
ss
cs
fsubp
into
idiv
out
sahf
cmpsb
mov
pop
dec
jbe
inc
outsb
push
push
es
ss
cs
fsubp
into
mov
sahf
cmpsb
mov
mov
mov
outsb
push
push
or
ds
push
ljmp
xlat
sahf
cmpsb
mov
mov
inc
outsb
and
xchg
sar
jmp
int3
jge
insl
lods
dec
into
arpl
pushf
int
std
pop
in
sub
cmp
or
or
mov
dec
mov
sbb
pushf
sub
sub
popf
cmp
or
sbb
push
pop
push
dec
pop
jge
insl
mov
fmull
or
pop
xchg
and
cmp
inc
iret
dec
jmp
sbbb
int3
sbb
int3
push
ds
sub
dec
cwtl
adc
sarl
or
sbb
add
and
repnz
adc
leave
std
mov
push
or
jecxz
adc
fwait
mov
dec
std
xchg
jl
pop
clc
pop
sub
les
lods
xor
xor
sbb
sbb
insl
out
jl
enter
ror
cmp
or
shl
in
stos
inc
nop
push
sbb
pop
jnp
cwtl
dec
dec
add
fisubrs
cmp
hlt
mov
popa
mov
jl
sbb
push
push
jae
test
fadd
stc
test
mov
test
lods
mov
stos
dec
int3
jge
insl
dec
sbb
cmp
cmp
insb
in
fs
lea
mov
mov
ret
jb
dec
clc
pop
pushf
pop
insb
mov
movsb
sub
push
hlt
gs
jns
mov
jge
cmp
js
and
leave
sub
dec
stos
and
push
repnz
loop
enter
or
sbb
jno
or
insb
fnstsw
std
pop
in
sub
cmp
or
sbb
in
pop
cld
dec
int3
jge
insl
lods
sbb
pushf
sub
dec
std
pop
in
sub
cmp
or
sbb
in
pop
pop
pop
push
sbb
arpl
push
sbb
push
push
add
cmpsb
ja
mov
fcomp
aad
mov
scas
cld
leave
fidivl
icebp
fdivl
or
jne
sbb
mov
lods
nop
push
bound
or
pop
cmp
xchg
movsl
cmp
cmp
mov
sub
cmp
daa
cmpsl
lock
dec
xlat
notl
mov
and
mov
push
mov
inc
notl
iret
outsl
xchg
jle
and
inc
add
inc
in
and
test
ds
mov
dec
xor
jns
and
out
lret
sub
jno
cmp
sub
cs
rclb
loopne
and
mov
sub
sbb
negb
sub
or
bound
pop
and
test
add
xchg
insb
sub
jg
mov
jl
out
lock
and
out
xlat
adc
push
sbb
jbe
and
jecxz
mov
lods
adc
fwait
mov
ret
and
repz
fidivrs
cmp
push
pop
out
adc
aam
cmpsb
add
pop
xchg
add
push
xor
cmp
push
push
sbb
enter
adc
js
ret
test
sar
ja
hlt
nop
jno
lret
cmp
mulb
xchg
adc
or
scas
addl
mov
adc
xchg
xchg
mov
idiv
icebp
mov
notl
push
cmp
cwtl
mov
repnz
add
adcb
add
and
daa
in
fcomps
dec
add
push
pop
dec
es
outsl
dec
negl
aam
iret
xchg
xor
sbb
sbb
jle
insl
aam
push
jle
dec
sbb
mov
mov
addr16
clc
movsb
lods
jecxz
data16
ja
sub
cltd
add
sub
jno
push
add
sub
hlt
sbbb
and
push
jbe
lods
pop
and
lahf
mov
mov
pushf
lea
cltd
fs
pop
xchg
or
pop
add
shl
cmp
sahf
mov
repz
inc
or
popa
dec
cmp
mov
in
cmc
out
mov
mov
mov
lret
push
sub
out
push
pop
mov
fstps
test
fs
aas
dec
add
mov
insb
push
and
push
push
fadd
movsl
sti
push
shlb
scas
fistps
adc
js
movb
mov
in
test
xchg
scas
adc
das
push
mov
mov
mov
push
jne
ret
cmpsl
jp
insb
loop
into
mov
sub
push
fisttps
inc
add
jecxz
pop
jb
ss
fdivrp
loop
or
cmpsb
jnp
cmp
mov
fbld
or
inc
mov
xor
movsl
jns
repnz
adcb
adc
jmp
cmp
inc
fildll
mov
int
out
fndisi(8087
push
cmpsb
and
int3
loopne
and
push
pop
leave
push
mov
mov
xchg
or
sub
inc
mov
shrl
xchg
jecxz
bound
rsm
xchg
in
push
fisubs
add
lret
in
mov
sbb
cmp
jb
dec
adc
out
push
stos
cmp
inc
xlat
jge
cmpl
lcall
jle
dec
mov
pop
cmc
push
mov
lods
aam
mov
pop
addl
sbb
popf
and
xchg
testb
popf
or
mov
jecxz
mov
xchg
arpl
add
mov
jnp
inc
aas
push
rorb
movsb
push
dec
ret
das
ret
fadds
aaa
push
test
or
cmp
test
sbb
enter
add
push
test
insl
repnz
and
add
fcoml
sahf
inc
cltd
push
test
or
inc
sbb
icebp
test
xchg
aad
test
insl
mov
cmp
adc
xchg
jae
inc
out
stos
or
mov
cmp
mov
addr16
sub
push
jle
sbb
sub
ljmp
mov
and
fsubp
and
sbb
test
or
fs
popa
jne
loop
mov
mov
ss
repz
adc
and
je
xchg
mov
push
fnstenv
dec
dec
shll
outsb
xchg
mov
mov
aas
sub
test
dec
push
jge
mov
dec
sar
aas
pop
xlat
xor
sbb
mov
ficompl
or
repnz
je
icebp
icebp
sbb
nop
cmp
cltd
xchg
scas
lea
and
in
sbb
cmc
cwtl
data16
or
stos
xchg
dec
out
fdivrs
sbb
mov
decl
push
push
sti
mov
mov
or
rorb
xor
js
outsb
sbb
mov
mov
outsb
imul
or
cmp
inc
imul
int
adc
mov
dec
push
in
cs
add
dec
xchg
xchg
sub
negl
xchg
xchg
push
mov
out
push
and
push
xor
adc
or
cwtl
popf
pop
or
cmp
call
aaa
outsl
cmp
popa
test
cmp
fists
cmp
cltd
jbe
jae
add
adcl
ds
push
shlb
aas
mov
xchg
xchg
cmpsb
daa
lock
int
jns
popa
xchg
xchg
xor
inc
add
into
cmc
cli
xchg
jae
stc
mov
xchg
add
insb
xor
jle
pop
mov
mov
xor
jmp
out
add
lret
jae
fnstenv
sbb
xchg
jp
adc
mov
aas
pop
fiadds
stos
iret
push
mov
push
out
sub
xchg
rcr
mov
outsb
popa
ja
jle
dec
or
cmpsl
xor
lock
ds
daa
push
mov
sbb
dec
sbb
inc
push
js
mov
dec
ljmp
cltd
rcll
in
test
out
xor
ljmp
dec
add
movsl
int
jle
add
xchg
push
jg
or
roll
xchg
fdiv
adc
sbb
and
fs
jge
mov
imul
add
jg
mov
cmp
mov
jge
aam
popa
ror
dec
loopne
fisubl
jnp
dec
les
ss
fisubl
dec
in
inc
cs
adcl
loope
mov
out
fcomi
aam
mov
pop
ljmp
fists
dec
movsb
mov
lods
jmp
call
daa
int3
scas
lret
test
cmp
test
test
jge
pop
in
pop
add
cmp
dec
fistpl
jmp
sbb
cmp
inc
mov
add
cwtl
add
xlat
pop
jecxz
aaa
lahf
add
xor
popf
ja
mov
icebp
pop
add
lea
or
jp
push
cli
nop
jae
fidivrs
cmpsl
imul
test
and
mov
xor
mov
in
and
out
dec
dec
or
into
fwait
mov
push
pop
jp
mov
cmp
bound
add
mov
pop
orl
das
xchg
into
pop
sub
adc
repnz
mov
push
inc
fsubr
mov
lret
cmp
aaa
sbb
dec
loopw
rcll
js
js
sub
or
mov
cltd
test
fcompl
mov
xchg
fistps
push
out
cs
mov
and
inc
aad
sub
sub
push
and
out
jge
pop
stc
sub
into
and
mov
adc
lods
pop
test
jl
mov
mov
adc
pop
addr16
mov
int3
sbb
sub
cwtl
jge
push
or
mov
rcrl
scas
pop
mov
out
das
and
xor
push
sub
lods
and
andl
or
imul
movsb
pop
mov
aad
add
cltd
sbb
dec
pop
cmpl
fidivrs
sub
mov
fwait
dec
sub
je
out
sbb
inc
daa
ss
sbb
cmc
fstpl
addr16
cmp
imul
outsl
and
lahf
test
push
pusha
jno
ret
fnstcw
sub
je
lcall
je
jnp
in
jbe
push
sub
xor
mov
sub
das
fwait
inc
dec
sub
mov
fisttpll
xchg
mov
add
jo
jb
andl
outsl
in
sbb
clc
jmp
dec
mov
jle
ja
jae
lods
lods
addb
cmp
cmpsl
push
daa
mov
pushf
push
decl
cwtl
in
sbb
and
dec
ficompl
repnz
adc
jle
cwtl
jo
mov
mov
push
scas
inc
stos
sub
adcl
stos
sub
jns
push
lea
loop
and
dec
adc
jb
mov
push
jmp
fldl
ss
push
pop
push
out
rclb
pop
lds
push
aad
fs
push
mov
pop
sahf
sub
xchg
sub
pop
adc
dec
pop
or
mov
loop
in
insl
rclb
sub
unpckhps
push
add
dec
mov
repnz
lret
scas
arpl
fidivs
in
mov
xor
dec
lret
or
and
dec
addr16
jno
jnp
inc
pop
adc
ds
cmpsb
cmp
es
in
sub
jge
jmp
loopne
pop
out
cmp
dec
xor
mov
pop
addr16
loopne
pop
imul
inc
sahf
add
scas
loope
mov
xchg
inc
test
sub
mov
dec
cwtl
adc
jno
lret
sub
mov
rorl
mov
adc
or
out
adc
cmc
sub
in
ljmp
add
mov
ret
jae
mov
aam
mov
sub
mov
jge
sti
sbb
push
lods
out
insb
inc
add
aaa
out
cmpsl
inc
sub
test
or
mov
popf
sbb
mov
andl
iret
stos
and
sbb
das
fistpl
or
cli
cmp
cmp
adc
sbb
pmaxsw
imul
add
jecxz
push
out
addr16
loop
movsb
push
add
adc
scas
fs
nop
sub
fwait
sub
adc
mov
jmp
stos
sub
iret
adc
sti
dec
sti
cmp
mov
in
movsl
add
dec
pop
mov
push
out
add
push
outsl
das
mov
cmpl
leave
loope
jecxz
pop
in
loop
cmp
aam
and
adc
push
fisttpl
xchg
lret
adc
sub
push
ffree
fsubs
mov
jno
sub
mov
mov
pop
shrl
push
jge
fsubrs
cmp
fidivs
mov
or
outsl
xchg
inc
add
stos
sub
mov
sbb
jl
cmp
movsl
stos
out
adc
sub
bound
hlt
mov
mov
sub
jo
test
es
xchg
xchg
fnsave
or
out
into
or
aaa
ds
add
loope
test
out
mov
and
mov
out
lea
mov
pop
and
inc
std
je
and
or
js
mov
daa
sub
jno
daa
les
jecxz
sbb
pushf
shll
and
jp
insl
mov
sub
or
rsm
xchg
jns
cmp
jb
mov
test
pop
jne
insb
imul
push
xor
les
nop
fmul
mov
cwtl
clc
pop
pop
push
inc
or
out
jecxz
inc
int
cmp
push
subl
fcoms
jne
dec
andb
or
sti
pop
push
mov
in
xchg
push
iret
icebp
fwait
add
out
neg
or
dec
push
mov
outsb
lcall
imul
add
lahf
push
xor
imul
ja
inc
cwtl
inc
mov
sub
sahf
andb
xor
or
mul
int
int
pop
dec
jae
mov
lods
loop
push
int3
test
jl
jnp
mov
jmp
jbe
fcom
fwait
pop
jno
or
mov
mov
adc
sarl
pop
das
imul
xorb
pop
fwait
outsb
dec
cltd
xchg
test
fisubrs
sub
or
add
mov
push
addr16
inc
add
mov
jno
xor
push
and
cmpsb
sbb
test
fdivrs
lock
leave
mov
lcall
rcrl
subb
sub
mov
loope
pop
jmp
sbb
in
in
stc
mov
inc
xor
sbb
loopne
cmpsl
mov
imul
add
cmc
sbb
aas
ds
scas
cmp
out
mov
mov
lods
std
mov
dec
pop
clc
mov
jmp
aam
xor
cwtd
inc
or
popa
cmp
mov
fnstcw
adc
mov
adcb
cmp
sub
shrb
js
out
mov
call
cltd
lret
loopne
mov
mov
and
fstl
adc
jge
lret
pop
jno
inc
and
pop
jo
jle
test
push
jns
mov
loope
mov
dec
jo,pt
jns
xor
xchg
push
aad
out
jle
mov
pop
aad
cmp
push
sbb
lock
cltd
mov
pusha
xchg
fmuls
push
jmp
imul
lret
test
pop
xor
movsl
mov
in
and
ja
xor
and
sbb
push
int3
jo
xor
xor
movsb
fldl
xor
push
decb
sub
sahf
sbb
lret
push
adc
rolb
arpl
sub
mov
pop
and
jp
notl
push
mov
xbegin
push
xor
std
sahf
out
lcall
xchg
cmpsb
rcrb
dec
cwtl
push
das
mov
sub
jns
es
dec
lret
dec
cmpsb
add
dec
jnp
adc
roll
push
cmp
repnz
daa
xchg
sbbl
ja
imul
jg
fldcw
dec
push
test
mov
push
mov
or
pop
sub
daa
sbb
stc
mov
jbe
xchg
push
mov
jbe
dec
cltd
aas
mov
dec
inc
movsl
pop
iret
jne
add
test
mov
inc
shlb
bound
cmp
xchg
adc
jl
sbb
out
roll
add
push
shl
ljmp
pop
insb
jl
or
fisubs
or
dec
pop
in
gs
push
ret
imul
aaa
enter
pop
cmovl
xchg
pop
or
ret
inc
scas
lret
aaa
jne
xor
mov
mov
repz
and
psubsw
shlb
pop
repnz
lcall
and
mov
fisubs
arpl
stc
repz
xchg
push
icebp
mov
adc
xchg
adc
pushf
jae
mov
xor
xchg
sub
pop
adc
loop
test
negb
fstps
cmpsb
or
mov
arpl
leave
leave
dec
push
loop
sub
loopne
push
pop
push
clc
or
mov
test
cmp
popa
mov
int
add
adc
jg
cmp
mov
mov
jg
shll
and
inc
inc
outsb
jns
xchg
adc
cmp
fxch
daa
call
imul
sub
movsb
jno
pop
dec
ret
fs
out
sbb
xchg
gs
add
xchg
inc
pop
addr16
faddl
sub
inc
lret
fs
lods
jmp
dec
pop
sar
sbb
and
pushf
popf
sbb
mov
xchg
ss
loope
stos
push
loop
aaa
xchg
test
adc
in
orl
rclb
mov
and
push
mov
pop
push
dec
nop
sub
sti
lods
scas
test
daa
cwtl
shr
and
sub
xchg
cwtl
out
popa
loope
mov
push
call
ret
push
scas
add
pop
out
ror
push
sbb
push
cmc
inc
pop
rcrb
add
push
inc
xchg
mov
aas
dec
dec
es
pop
push
inc
lahf
fwait
dec
mov
jle
aaa
int
repz
orl
push
pusha
or
xor
ror
add
stos
int
int
fiaddl
sub
xchg
dec
sbb
sbb
xor
std
sbb
dec
fiaddl
cltd
jp
ficompl
push
sbb
scas
dec
fldenv
dec
mov
popa
xchg
inc
push
in
loope
roll
sub
cltd
adc
fldenv
dec
pushf
push
sub
and
mov
mov
jecxz
dec
data16
adc
mov
and
sub
test
mov
pop
lret
push
sub
int
ret
dec
aad
addr16
xchg
lods
lods
sti
cmp
ss
loopne
jecxz
leave
sub
xchg
xchg
inc
push
jne
into
cmp
add
mov
xchg
add
stc
cmc
stos
push
int
sbb
xchg
inc
es
xor
rolb
shrl
mov
inc
aam
loop
sbb
outsb
add
and
ret
pop
stc
adc
jge
movsb
in
dec
jl
sbb
mov
pop
inc
mov
ljmp
add
insl
jnp
xchg
fmul
sbb
aaa
nop
and
mov
or
testl
xchg
ja
pop
shrb
test
xchg
ds
sbb
ljmp
pop
xchg
stc
js
jo
cmp
or
adc
or
pushf
in
sarb
addb
aaa
push
shrl
xchg
mov
pop
lahf
mov
nop
inc
in
push
fldl
rcr
jg
mov
shll
add
adc
insl
in
dec
inc
sbb
xchg
push
sbb
repz
test
push
fsubs
cld
int
sub
pusha
cltd
jp
rcrl
push
out
xchg
lcall
out
push
ljmp
jae
cmp
rorb
add
mov
fst
aaa
mov
jp
or
xor
and
inc
push
ss
dec
xor
repz
dec
xor
push
mov
xchg
ret
and
aaa
dec
dec
aam
pop
sahf
pop
push
cmpsl
push
loop
mov
or
cmp
xchg
add
js
pop
stos
cld
cmp
imul
ljmp
add
lret
or
and
hlt
data16
sahf
inc
fwait
je
push
add
aam
mov
cli
add
jg
ss
pushf
test
push
cmpsl
jno
push
adc
or
outsb
inc
mov
xor
cmpsl
pop
dec
fldcw
sbb
pop
xor
testb
xchg
pop
pop
and
adc
and
mov
mov
jecxz
or
lds
push
insb
inc
lahf
adc
fimull
out
jmp
cmpsb
imul
in
lods
mov
xchg
inc
adc
jecxz
je
xchg
test
ret
andb
sbb
lock
cmc
outsl
insl
cmp
insb
mov
pop
adc
sti
aad
xor
pop
push
jle
inc
in
dec
pop
adc
bound
jp
std
ds
rcrl
ret
rcrb
int
and
mov
fwait
pop
rorb
push
lea
inc
adc
loopne
hlt
mov
push
add
jbe
fbld
pushf
cmp
xchg
or
mov
ret
cmp
shrl
adc
jp
fwait
xchg
or
enter
fcoms
jo
mov
xchg
xchg
sbb
ret
cwtl
or
sbb
sub
inc
sub
fwait
cmpsl
cmpsl
mov
xchg
mov
mov
outsb
aad
popf
jp
cmpb
and
mov
cld
movsl
add
insl
loopne
mov
outsl
out
dec
xor
negb
fildl
sbb
xlat
subb
mov
addb
inc
subl
aam
adc
pop
add
mull
adc
sbb
and
out
add
inc
sub
lods
jne
fyl2x
lcall
mov
stc
repz
hlt
push
jmp
and
cmp
push
mov
ror
sbb
dec
mov
sub
xchg
stos
in
btsl
mov
push
sbb
inc
xor
inc
ja
jmp
out
fs
pop
jb
xlat
repz
pop
imul
mov
shlb
cmpsb
jecxz
mov
and
ds
adc
cmp
mov
mov
out
mov
cltd
cmp
pop
pop
cli
lods
ret
push
push
dec
inc
jmp
data16
lahf
mov
ftst
ljmp
add
stos
out
sub
cmpsl
insb
mov
jg
mov
push
sub
mov
xor
inc
jl
std
pop
sub
ret
js
xchg
fdivrs
mov
cmp
test
frstor
inc
ljmp
sub
add
or
aad
pop
push
aaa
dec
dec
decl
in
arpl
pop
or
mov
lods
sbb
pushf
sub
dec
std
pop
in
sub
cmp
or
sbb
in
pop
cld
dec
int3
jge
insl
lods
sbb
pushf
sub
dec
std
pop
in
sub
cmp
or
sbb
in
pop
int3
dec
lods
jge
insb
cmp
mov
sub
mov
pushf
sub
or
hlt
lods
clc
pop
mov
imul
andl
pop
lcall
jecxz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
nop
int
in
in
std
xchg
shl
leave
sarb
insl
insl
jge
or
sub
in
in
std
popf
lea
lds
insl
insl
jge
popa
imul
jnp
sub
lea
push
mov
sbb
or
cmp
inc
pop
dec
pushf
mov
lcall
es
outsb
scas
dec
sub
out
dec
dec
or
rcrl
fs
lea
xchg
movsl
sub
cmpb
cwtl
or
mov
sar
xchg
adc
pop
xchg
call
xorb
loop
sbbb
mov
stos
pushf
jb,pn
mov
mov
mov
nop
or
sarb
mov
sub
adc
in
popf
mov
adc
pop
or
ret
pop
dec
int
add
dec
mov
cmp
mov
jl
insl
push
js
cmp
in
cmp
mov
dec
fistps
insl
jae
jge
adc
scas
leave
mov
std
repz
int3
jmp
sub
dec
arpl
push
push
es
hlt
loope
rcl
fcompp
gs
or
sbb
add
outsb
arpl
dec
jnp
push
scas
mov
xchg
lea
lea
pop
dec
dec
pop
jge
insl
jge
or
sub
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
mov
add
jb
and
lcall
movsb
cld
pop
sub
sahf
lahf
push
xchg
sahf
and
jne
arpl
ja
flds
mov
lods
pop
sbb
mov
push
jecxz
inc
dec
xlat
xorl
adc
sbb
pop
mov
add
sub
mov
sbb
add
add
push
jle
sub
inc
jno
sbbl
push
imul
dec
into
cs
leave
pop
rcl
pmaxsw
bound
sti
cmp
cmp
dec
mov
lods
adc
adc
int
cmp
pop
sbb
test
or
adc
jno
xchg
pop
cmc
mov
data16
ret
fcmovb
jno
daa
cmp
dec
icebp
loope
jecxz
popf
adc
add
mov
mov
inc
cli
add
cmp
sbb
mov
xlat
jns
push
aad
cmp
adc
xchg
and
pop
push
imul
mov
or
inc
add
xor
mov
loope
jns
mov
jecxz
int3
nop
cmp
iret
notb
inc
xor
push
loope
jns
mov
push
jnp
jns
ss
xchg
push
cli
pop
sbbl
cmp
jl
in
push
xchg
xor
jle
pop
cli
ret
mov
int
test
idiv
add
add
xor
dec
jno
push
dec
pop
mov
and
push
mov
mov
cld
jae
testb
push
out
jg
mov
sbb
hlt
inc
and
imul
test
fisubrl
loope
mov
aad
mov
pop
dec
je
sbb
outsl
mov
pop
cs
das
dec
fists
ja
cli
cmc
repnz
pop
inc
nop
or
push
iret
and
popf
inc
jle
add
test
inc
test
mov
cltd
ret
sbb
outsb
sub
aaa
and
dec
popa
int3
jg
xchg
loope
adc
pop
xor
push
hlt
stc
sti
nop
push
int3
cli
push
dec
in
daa
fucomi
ret
std
jl
jmp
lods
iret
rclb
or
in
lcall
lret
call
and
xchg
out
push
xor
imul
mov
adc
and
jae
jne
mov
inc
call
and
and
sub
leave
shrb
mov
fwait
mov
pavgb
sbbl
dec
sub
xlat
cmp
mov
xchg
sub
push
sbb
xchg
mov
loope
lods
inc
mov
pop
cmp
dec
xchg
fs
jle
lret
adc
mov
add
add
and
mov
sbb
mov
jbe
iret
shrb
dec
int3
mov
repz
cmp
jns
sub
out
xchg
div
pushf
inc
and
pop
lods
out
jl
fsubrs
xor
sti
lahf
repnz
xchg
ja
ret
xlat
cmpsb
mov
loope
jmp
push
dec
lods
xorl
pusha
hlt
mov
xor
stc
and
xorb
ljmp
shlb
push
or
into
xchg
ret
push
push
mov
scas
adc
add
jo
sub
cmp
mov
dec
push
adc
insl
xorb
xchg
and
adc
cltd
or
xor
cmp
adcb
pop
xchg
sub
lcall
imul
pop
mov
dec
push
sbb
jg
jmp
push
mov
xchg
jmp
push
lret
add
ret
ret
mov
dec
pop
add
imul
adc
insb
pop
mov
jne
cmpsl
int
mov
pusha
movsl
jmp
jle
and
imul
push
lcall
pop
mov
loopne
mov
shr
stc
leave
fstp
jae
test
in
enter
cmp
mov
xor
dec
xchg
push
push
xor
dec
sub
stc
xlat
cmpsb
fs
add
and
jo
lret
lret
or
lahf
add
dec
out
lds
test
out
mov
stos
scas
dec
shrl
int
aad
outsl
mov
jmp
cltd
lret
je
mov
sbb
mov
push
sub
in
fmulp
fbstp
push
test
fnstenv
mov
cli
lea
adc
xchg
inc
pop
cmp
gs
inc
mov
sbb
call
jns
sbb
fmull
xchg
cmp
daa
add
xchg
mov
push
jl
bound
mov
popf
or
jle
sbb
mov
into
adc
nop
cmp
cmp
sbb
cli
dec
ror
dec
imul
sbb
leave
cmp
pop
addb
push
push
in
adc
js
jl
pop
and
daa
ss
mov
pop
into
pusha
cmp
cld
adc
or
hlt
sub
mov
push
in
dec
jge
data16
pop
loop
sbb
cwtd
sbb
cmp
loopne
cld
adc
std
stc
xchg
mov
xchg
and
cmp
mov
jge
out
jmp
dec
pusha
rcll
dec
or
jae
push
adc
fnstcw
pusha
fwait
popf
push
loopne
pop
outsl
rorb
repz
test
les
jne
jecxz
and
adc
mov
adc
lret
mov
push
fidivs
sarb
sub
adc
sub
mov
lahf
xor
adc
adc
ret
adc
dec
das
mov
ror
lahf
je
dec
dec
mov
in
pop
jbe
push
test
mov
js
cld
in
pop
arpl
decl
xor
shr
jecxz
inc
or
rolb
scas
fsubrs
cld
sbb
shll
enter
sub
pop
jne,pt
adc
enter
ljmp
jl,pt
rorb
mov
inc
movsb
movsb
dec
dec
nop
out
dec
sbb
sti
popf
inc
jle
push
mov
into
cwtl
outsl
leave
cltd
adc
push
pusha
pop
sbb
mov
shlb
pop
test
mov
xor
sahf
fs
and
mov
loope
enter
lds
fnclex
fmuls
outsb
popl
scas
lcall
insb
inc
lahf
dec
xchg
sub
or
xor
dec
jmp
loop
inc
mov
arpl
cli
jne
leave
cmpsl
shlb
and
cmc
add
sti
inc
push
or
fs
add
leave
icebp
fwait
sub
adc
cmpxchg
faddl
ljmp
mov
dec
and
stc
xchg
outsl
loop
mov
jno
mov
rclb
dec
mov
int
sub
inc
jl
fstpl
xchg
lods
and
aaa
stos
jns
setb
rcrl
stos
jns
ret
popf
xchg
popa
wrmsr
sbb
test
inc
dec
and
cwtl
subl
daa
push
out
and
add
push
jle
cwtl
jo
cmp
lret
dec
xchg
ds
dec
jl
stos
call
out
enter
inc
in
and
adc
adc
xchg
adcl
push
xor
es
sub
add
or
rep
sahf
xor
dec
add
push
dec
jo
lds
mov
xor
imul
jg
mov
inc
adc
add
jle
adc
jnp
cmp
mov
insl
jmp
std
push
mov
enter
xchg
sub
cmp
pop
cmp
das
mov
xchg
add
adc
in
aam
imull
pop
lret
push
in
mov
jge
lods
mov
mov
push
cmp
or
pop
or
aas
xchg
and
jo
std
xchg
mov
push
pop
clc
add
int3
push
std
mov
cmc
jle
loop
loopne
add
push
lahf
push
adc
int3
jae
xchg
jns
ja
cmpsl
loope
les
xlat
xor
cmpsb
cld
push
sbbl
add
push
mov
nop
sbb
stos
daa
mov
push
loop
or
pusha
testl
repz
scas
cs
push
inc
sub
push
add
sub
sbb
mov
lahf
dec
push
jge
push
pop
mov
pop
int3
mov
ja
mov
and
mov
rcll
jno
sbb
jl
shrb
inc
gs
ret
xor
or
xchg
pop
add
or
sbb
pusha
test
add
mov
cmp
mov
and
mov
jns
js
arpl
xchg
out
lods
pop
sub
xor
mov
loop
outsl
adc
xchg
idivl
daa
idivl
loope
jmp
and
cmp
fwait
insb
mov
repnz
cmp
testb
xor
mov
xchg
leave
inc
jmp
sub
std
lods
sub
int
push
in
mov
dec
mov
pop
xor
mov
and
xor
cld
mov
movsb
pop
and
shlb
add
inc
das
push
das
sub
xchg
decl
lods
inc
jge
int
pop
pop
lods
imul
loope
ficompl
mov
and
mov
nop
or
adc
pop
dec
or
mov
dec
dec
xchg
and
ret
popa
push
mov
mov
sbb
jae
push
xchg
flds
fwait
js
loope
out
leave
sahf
fildll
nop
or
inc
aad
testb
insb
inc
jl
test
cmp
insb
jl
popf
js
ret
mov
push
testb
inc
push
mov
pop
idivl
pop
dec
add
or
adc
mov
aam
ljmp
push
in
pop
out
add
mov
inc
je
lahf
pop
fs
push
pop
xchg
fbld
jge
bound
lods
xchg
xchg
and
insl
mov
sub
je
xor
lahf
or
or
movl
das
hlt
xor
leave
dec
jo
fdivl
int
push
jp
pop
enter
daa
or
inc
clc
ds
and
pop
adc
mov
je
xchg
mov
mov
setl
sti
andb
popa
cwtl
je
nop
orb
aad
adc
jbe
fstps
shr
push
leave
mov
sub
fisubrl
and
fwait
cmp
scas
mov
mov
adc
mov
pop
dec
cmp
ds
jae
or
outsb
add
jmp
dec
jns
xchg
pop
add
rcll
push
adc
imul
jge
adc
iret
jmp
ret
ja
jmp
cmc
int
aad
cmp
xor
lret
xchg
test
stos
aam
andb
push
and
pop
lret
mov
ja
mov
xchg
in
pop
mov
sti
cli
scas
sub
mov
insb
adc
fwait
add
lods
imul
insb
pop
movsl
lods
and
pusha
test
push
outsl
stos
out
movsb
jmp
int
xchg
mov
movsb
mov
jbe
inc
xchg
mov
mov
inc
jb
pop
sti
lock
lcall
xchg
xchg
jns
mov
shll
jmp
pop
movsb
xor
ficompl
scas
dec
sti
add
out
add
xor
dec
repnz
add
daa
mov
loope
lret
pop
mov
test
addr16
and
add
sbb
cmp
jge
pop
aas
fisubl
mov
sub
cmpb
or
adc
fwait
xor
xchg
cltd
xchg
scas
clc
enter
add
inc
in
dec
add
fcmovnu
sub
inc
ret
icebp
jbe
mov
test
sub
mov
enter
into
sbb
in
pusha
dec
dec
aas
hlt
ljmp
push
dec
data16
ja
popl
pop
jp
push
mov
push
in
loop
pop
adc
xor
cwtl
push
and
fists
lea
mov
mov
and
loop
insb
push
scas
jmp
cmpsb
jno
push
fwait
xor
insb
add
sbb
add
leave
imul
shlb
push
pop
rclb
adc
shl
or
mov
xor
insb
inc
outsb
ret
sub
jl
or
sbb
in
sub
inc
cmp
push
and
jp
mov
lret
mov
dec
adc
jae
in
test
fcmovu
cmp
ljmp
sub
lods
xchg
repnz
or
ficoml
mov
add
add
lds
adcb
sbb
dec
scas
push
mov
in
arpl
ror
pop
aas
push
or
sub
repz
jbe
pop
loopne
imulb
xchg
xchg
push
jecxz
nop
pop
call
movsl
mov
push
or
mov
jne
jl
and
shrb
sbb
jnp
and
xor
jg
sub
adc
addr16
pop
dec
pop
fisubrl
popl
out
das
jecxz
leave
fdiv
mov
mov
arpl
jge
push
fbstp
aas
subb
mov
or
fsts
pop
lea
cwtl
dec
sbb
mov
out
pop
push
cmp
add
ja
xor
cli
mov
fwait
stc
dec
push
jg
sbb
pushf
xlat
pop
or
mov
int3
in
test
dec
das
lcall
lock
push
jo
imul
cmp
mov
mov
aad
sub
je
push
mov
fldt
je
out
outsl
insl
cld
rcl
orl
xchg
shll
movsl
repz
addr16
add
push
and
dec
and
or
pop
xor
or
cmp
movsl
test
mov
or
dec
jmp
fisttpll
clc
xlat
rcrl
daa
cmpsb
stos
or
into
out
push
scas
sbb
or
cmp
incl
gs
jb
cmpsl
cmp
pop
pop
xor
idivl
fstpt
std
mov
mov
mul
lret
sub
aaa
mov
enter
nop
lods
mov
sbb
or
jl
cli
arpl
pop
mov
addr16
mov
je
mov
cmpsb
or
stc
movsl
test
push
lods
cmp
pushf
dec
div
xor
inc
test
jns
add
jecxz
mov
and
xlat
xchg
push
fisubrs
sbb
jns
out
inc
iret
into
cmp
dec
mov
out
leave
lret
popa
fstpt
mov
daa
lea
in
jg
jecxz
out
mov
jns
daa
lret
xchg
mov
sub
rcll
xlat
pop
nop
pushf
xchg
cmp
loopne
push
gs
xchg
sbb
repnz
xchg
insb
rcll
adc
mov
outsl
jo
mov
addb
divb
repnz
inc
push
mov
sti
mov
push
mov
mov
mov
pop
xchg
sub
sub
push
in
jp
mov
fidivl
inc
xchg
and
mov
mov
inc
pushf
imul
or
mov
test
jmp
push
pop
sbb
lret
sub
inc
add
ds
and
les
dec
mov
cmc
xor
sbb
sub
xor
ljmp
pop
cmp
mov
push
stos
les
mov
rol
and
dec
inc
dec
fsubs
xlat
ret
cld
call
sbb
lcall
mov
sbb
jge
adc
jne
push
test
jae
movsb
pop
inc
cmp
pop
mov
cltd
push
test
imul
outsb
mov
mov
fldl
cmp
ds
push
inc
ret
orb
mov
mov
addb
jb
mov
ret
mov
pushf
ljmp
es
add
xor
pop
daa
cmp
call
inc
mov
pusha
incl
lds
fistpll
and
jecxz
imul
sbb
outsl
lock
ja
jnp
in
and
je
pop
arpl
and
inc
xchg
mov
pop
ds
push
add
rcrb
cmpsl
push
js
jno
aas
jne
stc
les
dec
rcll
js
push
and
sbb
pop
xorb
xchg
adc
scas
pop
xchg
jle
repz
mov
repnz
dec
push
and
mov
xchg
mov
movsb
out
sbb
lret
leave
push
mov
lcall
mov
scas
push
inc
mov
pop
add
mulb
mul
cmp
push
icebp
pop
test
cmp
mov
sbb
pop
clc
shll
mov
stos
inc
data16
dec
into
pop
lret
add
lret
loop
push
js
push
sbb
rolb
test
test
pop
xchg
aad
lea
and
bound
shrl
sbb
inc
data16
imul
js
add
and
popa
je
je
les
movsl
cli
std
arpl
ja
fsubrs
inc
jns
in
rolb
cmp
shrb
int3
jmp
icebp
or
or
push
cld
jmp
in
loopne
xlat
cs
pushf
add
mov
addr16
je
cli
js
xchg
add
jo
or
inc
fiadds
sub
decl
jno
pop
push
mov
mov
and
and
gs
das
fucomip
sub
js
aam
jno
pop
aas
mov
push
ret
mov
insb
shrl
mov
stc
push
mov
inc
and
xchg
mov
sub
repz
dec
fistpl
mov
add
or
inc
sbbl
add
add
outsl
shrl
push
outsl
and
push
cld
sbb
cmc
cli
adc
cmp
inc
mov
or
dec
test
and
lods
test
push
and
fucom
sub
cli
cs
add
adc
gs
fldenv
fisttpl
mov
fidivrl
pop
in
mov
mov
into
aaa
fisubrs
repz
xchg
repz
rol
mov
add
sub
add
xchg
add
es
ret
jmp
inc
pop
mov
fnsave
insl
test
xchg
insb
add
adc
inc
sub
das
cmpsl
xorb
cmp
aam
ret
outsl
hlt
pop
push
shlb
fisttpll
leave
lods
or
stos
add
mov
sub
dec
daa
or
shll
cwtl
je
add
push
sbbl
mov
jmp
test
mov
scas
lcall
and
xchg
or
loopne
std
cmpsl
sbb
loope
adc
popf
in
add
fs
shl
lea
rcrb
mov
lds
pop
push
dec
inc
mov
imul
int3
push
test
ds
dec
sahf
pop
insb
das
xchg
push
push
ss
jg
cwtl
lcall
mov
sub
push
add
push
and
cmpsb
arpl
mov
data16
loopne
add
jae
popa
add
add
loope
bnd
xlat
lret
pop
pushf
and
xchg
mov
das
js
out
jbe
scas
ror
loop
daa
fdivrp
cmpsl
or
rcrl
pushf
mov
out
adc
mov
shll
imul
adc
stos
iret
stc
xor
stc
and
pop
sbb
sub
mov
mov
sbb
fsubrl
sbb
inc
fwait
cli
in
sarb
mov
push
mov
in
mov
mov
jae
std
push
icebp
not
std
xchg
ss
ljmp
mov
sub
xchg
mov
aad
std
dec
mov
and
test
lods
xor
cs
mov
into
push
cli
enter
ja
sti
adc
push
jae
and
mov
movsb
dec
add
outsb
jle
aad
test
push
aaa
notl
xor
or
dec
stc
sbb
xchg
cs
dec
cltd
mov
jns
cs
pop
pusha
outsb
je
in
jecxz
mov
stos
sarl
pop
add
xor
adc
mov
inc
xlat
test
pop
pop
pop
dec
mov
sbb
and
jb
inc
jns
rcrl
jo
or
nop
add
pusha
cltd
dec
orl
js
bound
in
inc
push
push
test
repnz
jb
cmp
sub
movsl
adc
add
mov
out
sar
fistps
in
and
test
add
cmp
jp
pop
or
push
aad
adc
jo
dec
dec
cmp
and
xor
dec
jo
jbe
sub
lret
adcb
mov
stos
je
xor
lods
mov
jmp
sbb
loop
and
or
push
mov
mov
jg
in
push
or
cs
sub
mulb
sub
mov
cmpsb
inc
rcrb
jle
fldl
sbb
rcr
outsl
xchg
daa
cwtl
lods
les
or
aaa
stc
insl
ficoml
jmp
xor
sub
out
add
daa
mov
push
mov
mov
jns
movsb
push
lcall
sub
push
outsb
es
add
xchg
mov
mov
and
pop
pop
jp
cmp
fnsave
ja
cmp
sar
sub
add
in
movsl
add
pop
sub
mov
and
icebp
push
mov
jne
xchg
in
icebp
std
popf
lea
mov
jge
insl
jge
or
sub
in
in
std
popf
lea
mov
jge
insl
jge
or
sub
fucomp
in
in
std
pushf
lea
mov
je
imul
sub
loope
jne
lea
mov
xlat
insl
insl
or
test
ret
ret
loop
shlb
arpl
adc
and
leave
push
repz
jecxz
xchg
and
repnz
loop
shll
arpl
xor
ret
xor
inc
jecxz
mulb
adcl
add
shlb
arpl
xor
loopne
xchg
daa
lea
dec
fbstp
insl
aam
pop
loop
sahf
and
in
imul
popa
aas
pop
test
test
sbb
cmpsl
push
outsl
push
cmpsl
sbb
mov
mov
popf
cmp
or
test
fstp
sbb
cli
bnd
jecxz
frstor
sub
sbb
mul
jb
xor
add
mov
mov
xor
cs
mov
jb
add
das
movsb
cmp
xor
jno
add
or
orl
and
sub
add
jecxz
rorb
inc
or
loop
pop
int
imul
mov
inc
stos
shll
inc
andb
adc
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
xchg
cmp
push
ja
push
out
sbb
es
inc
out
les
jbe
lods
aas
mov
add
push
movb
cli
or
sub
adc
test
int3
adc
and
and
push
repz
jecxz
xchg
and
repnz
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
repnz
out
pop
sbb
movsb
shl
and
jbe
gs
cmp
roll
jne
or
cmpsb
fwait
adc
lahf
xchg
lods
cltd
adc
les
scas
in
and
and
sbb
sbb
hlt
cmp
push
cld
in
enter
sbb
jecxz
outsl
aas
sub
scas
or
fnsave
pushf
ss
ss
and
jne
push
and
dec
mov
sbb
fsubrs
inc
stos
aas
repnz
jmp
and
adc
iret
int3
and
insb
sub
cmp
pop
pop
cmp
lods
scas
int
mov
fdivrs
out
pop
lods
insl
leave
jecxz
mov
aas
daa
cmpsl
push
pop
add
xchg
jo
mov
fstpt
and
sar
fcompl
or
outsl
in
mov
leave
xchg
cmpl
bound
and
out
negl
je
decb
test
loopne
aad
repz
pop
sub
frstor
test
in
inc
push
mov
cmc
icebp
ljmp
push
pop
pop
test
cmp
add
popa
push
inc
mov
movsl
adc
add
out
stc
scas
pop
and
gs
fsubrl
xor
popa
push
clc
push
mov
ds
inc
pop
push
test
sti
fadds
testl
jbe
popf
call
xorl
cli
xor
and
mov
lret
add
xchg
pushf
aam
iret
ret
pop
xor
sbb
out
lahf
sbb
or
add
insl
xor
scas
adc
arpl
ds
push
dec
js
lahf
xor
aaa
cmp
aad
mov
push
fisttpl
adc
jb
int
repnz
or
jecxz
les
xor
mov
push
jb
aas
out
out
fcmove
sub
in
je
mov
xor
xor
fwait
xor
push
inc
pop
lcall
pop
maskmovq
notl
or
scas
daa
dec
cmpb
movsl
or
jl
mov
pushf
xor
sahf
cwtl
cmpsb
sub
mov
push
cmp
mov
jg
fs
pusha
inc
mov
insb
lea
jb
ds
imul
or
adc
mov
test
ret
sub
mov
ljmp
int
jmp
jecxz
xchg
jecxz
les
cwtl
test
push
pop
and
add
pop
jle
mov
push
stos
int3
ret
adc
jg
pushf
pop
sbb
sub
sti
movsl
sbb
outsb
sbb
fisubrl
out
addb
push
lahf
pop
icebp
inc
adc
jnp
mov
in
bound
xchg
fsubrl
outsl
bound
lods
stos
cmpsl
stos
lret
cmp
sbb
push
xor
and
xchg
iret
dec
es
xchg
xchg
stos
test
test
jno
add
cmp
jns
in
sbb
pop
out
mov
sbb
cmpsl
inc
dec
jmp
mov
cltd
mov
cmp
or
cmp
push
xchg
aas
xor
push
mov
dec
mov
int3
das
or
mov
jge
popl
jo
gs
stos
into
scas
add
ss
out
jg
mov
inc
dec
fcomip
out
jno
andl
mov
mov
out
push
rolb
je
dec
mov
comiss
mov
jecxz
push
pop
icebp
lods
xchg
mov
sub
fwait
push
xchg
mov
aam
push
xor
pop
mulb
sbb
jle
mov
mov
sbb
or
sbb
mov
mov
inc
add
cli
insb
and
dec
insb
xchg
pop
loopne
push
dec
pop
fwait
loopne
adc
add
pop
lahf
nop
cmp
popa
jle
mov
test
xrelease
fldl
sub
and
dec
fdivl
jb
xchg
add
imul
mov
fisttps
adc
push
repnz
or
push
push
les
data16
mov
fisttpll
jae
sahf
movsl
insl
and
push
stc
cwtl
movsl
and
or
out
hlt
enter
in
xor
fwait
mov
hlt
xchg
arpl
dec
lea
mov
push
movq
add
xchg
cmpsl
les
jg
test
lock
mov
notb
js
movsl
inc
sti
pop
push
jae
xchg
push
icebp
cli
pop
ja
sbb
and
fbld
mov
dec
loopne
iret
pop
std
aaa
aam
dec
mov
cmc
mov
xchg
sarb
repnz
jo
adc
in
dec
psrlw
mov
jne
jge
aas
es
icebp
stc
add
mov
mov
test
lahf
dec
cmp
cmp
dec
inc
fisttpll
dec
insb
dec
xchg
fbstp
test
into
xchg
xchg
ret
dec
and
jnp
xchg
push
lea
ss
enter
cmpb
in
lret
mov
fld
mov
std
ret
add
dec
js
push
sub
sarl
pop
das
aas
pop
sub
lahf
push
lock
iret
stc
aam
je
cltd
sbb
mov
fistpll
inc
inc
add
or
das
cmp
enter
push
scas
jns
add
andb
ds
mov
inc
sub
sub
test
mov
ret
std
sub
cs
mov
out
pop
lahf
pusha
ds
pop
dec
push
mov
xchg
push
adc
sub
push
push
mov
xchg
jecxz
add
jns
call
testb
fstpl
pop
push
mov
lock
js
bound
in
adc
fmuls
dec
mul
and
pushf
gs
mov
fildl
jns
daa
push
sbb
dec
cmp
sbb
mov
pop
jp
stc
xor
push
into
dec
int3
and
shlb
hlt
sub
ret
addr16
cli
int3
aaa
imul
mov
inc
gs
jne
scas
push
xor
xor
sub
leave
dec
aam
data16
enter
mov
or
popf
jne
aas
sbb
fisttpll
fisttpll
iret
leave
pop
sub
incl
sahf
pop
arpl
test
push
push
mov
pop
sbbb
stos
adc
or
lret
add
data16
arpl
mov
inc
cmp
xorb
jb
in
aad
iret
xchg
rorb
mov
out
adc
popa
inc
mov
aas
xor
pushf
pop
jae
dec
cmp
js
rol
pop
pop
mov
dec
cwtl
stos
loopne
icebp
jge
sub
dec
lret
lods
and
sbb
mov
and
jle
scas
jo
inc
sub
add
add
shrb
pusha
mov
adc
mov
mov
gs
lret
loopne
out
sub
adc
scas
lds
enter
aaa
ret
push
out
push
rcrl
mov
les
fcmovb
fistps
fsubr
xlat
leave
xchg
add
test
pop
rcrb
test
jl
pop
dec
mov
ss
ss
sbb
loope
fcoml
insb
sub
dec
push
push
mov
cs
out
testb
pushaw
push
add
rol
addl
test
jo
mov
fmul
xchg
jle
movsb
and
push
and
out
fdiv
lahf
cli
cli
sub
add
sbb
xor
fisttpl
je
cmpsl
push
in
fwait
jecxz
dec
push
adc
out
sbb
data16
mov
fisttps
push
inc
adc
mov
xchg
xchg
mov
or
xchg
test
bnd
pop
jge
inc
bound
fs
push
fiadds
cmc
insl
lret
pop
les
dec
out
mov
mov
and
addr16
mov
add
subb
inc
out
sbb
cmc
sbb
lahf
dec
lods
mov
cmc
std
sbb
into
mov
and
push
setg
inc
mov
out
stos
mov
addr16
xchg
sub
loopne
sbb
and
xchg
adc
daa
ret
lea
outsb
cmc
fidivrl
mov
lea
and
movsb
pop
leave
or
test
jae
sbb
mov
mov
mov
add
out
ret
add
hlt
mov
aaa
bswap
cmp
leave
push
mov
repz
or
sbb
bound
leave
pushf
xor
rorb
fsubs
mov
scas
jmp
movl
push
mov
imul
loop
pop
test
jle
and
loope
pop
adc
push
mov
int
xchg
loop
push
lret
in
ffreep
sbb
mov
jmp
add
mov
test
lret
pop
or
mov
fwait
cmpsl
enter
int
icebp
outsb
push
cmpsl
daa
jne
inc
xchg
cmp
movl
clc
stc
pop
sbbl
ja
repz
cmc
enter
lock
stos
insl
pop
repnz
or
push
sbb
xor
test
pop
mov
test
int
xor
lcall
mov
rolb
mov
sbb
sbb
cmpsl
cmp
cld
push
incb
dec
test
call
push
clc
cmpsl
mov
les
adc
push
dec
mov
inc
push
insb
inc
or
or
repnz
std
and
push
dec
repz
fstpt
movsb
dec
mov
inc
mov
test
xor
sbbb
in
xor
mov
inc
daa
les
hlt
sub
inc
lahf
mulb
in
fdivp
sbbl
dec
and
enter
mov
pop
add
ficoms
mov
clc
push
and
and
xchg
adc
hlt
mov
sbb
cmpb
lcall
xlat
pop
jae
xor
daa
xor
xchg
lcall
xchg
pop
in
inc
and
jne
sub
daa
push
dec
vucomiss
rcrl
mov
clc
int
pop
sub
loope
pop
cmpsb
inc
pusha
icebp
pop
mov
sbb
and
adc
and
jo
lea
mov
cs
mov
mov
enter
inc
and
das
into
mov
and
loope
push
cmc
inc
fstpt
mov
xacquire
popf
inc
or
fldl
adc
sub
cmp
jge
insb
repz
ret
movsb
fdivrl
jl
mov
je
mov
fsubs
mov
jbe
xlat
inc
inc
mov
pusha
mov
xchg
adc
xor
push
cli
insb
inc
jmp
test
cmc
sub
inc
outsb
aam
mov
inc
xchg
inc
std
sub
subl
test
jmp
push
adc
xor
loop
push
movb
xor
cmpsb
and
inc
mov
loope
mov
popf
push
dec
sub
leave
cmpsl
add
hlt
sub
lds
clc
pop
pushf
or
movsl
and
mov
ja
repz
and
hlt
fucomp
or
jle
mov
mov
inc
adc
rcll
lea
lahf
or
pushf
clc
js
mov
insl
pop
ljmp
sub
or
cli
sbb
mov
in
mov
lock
jle
jmp
mov
popa
adc
inc
push
sbbb
call
int3
mov
pop
xor
lock
or
mov
scas
test
into
iret
ljmp
sbb
xor
jp
push
pop
aad
scas
leave
cmp
push
and
mov
pop
bound
testb
ret
mov
outsb
nop
jne
cli
push
jmp
mov
enter
jno
or
sbb
sbb
jg
mov
adc
mov
or
sbb
out
mov
sbb
jae
addr16
jle
enter
push
push
inc
mov
fcompl
test
xor
and
mov
xchg
pushf
push
mov
and
and
add
jno
pop
shl
jno
cmpsb
adc
inc
js
dec
out
dec
and
jge
push
out
dec
adc
sahf
mov
ljmp
push
cwtl
adc
xchg
into
mov
mov
adc
aad
mov
and
out
xor
loop
pop
mov
xchg
and
adc
mov
push
inc
mov
pushf
imul
add
in
imul
xchg
loopne
mov
mov
jo
fiaddl
mov
inc
and
test
in
enter
cmp
test
sahf
and
cld
add
sahf
adc
lret
inc
imul
insl
and
cmp
ficomps
jnp
pusha
push
pop
in
lods
pop
repnz
fwait
roll
push
in
aaa
sbb
cs
push
out
xchg
add
jnp
and
add
xchg
ljmp
shlb
and
pop
mov
mov
lea
xchg
insb
jne
xlat
insb
popf
push
call
dec
or
pcmpgtw
call
inc
test
jnp
sarb
fcmovnb
lret
mov
jg
ljmp
out
jl
lods
push
xchg
add
mov
repnz
lahf
jb
cwtl
out
aad
inc
mov
cltd
out
icebp
sbb
les
xchg
dec
aas
jno
not
stos
mov
inc
jmp
adc
es
enter
mov
arpl
push
xor
jo
or
or
outsb
sti
mov
mov
xchg
call
pushf
imul
cmp
int3
mov
dec
sti
sbbl
xor
orl
imul
xchg
cmp
or
jae
aam
jae
push
pop
incb
dec
rcrb
sbb
push
shr
ficompl
fs
outsb
cmp
dec
movsb
mov
sub
fsts
cmp
lds
jecxz
jle
aaa
stos
dec
fs
movsb
iret
ljmp
aad
mov
mov
jge
and
dec
xchg
pop
push
push
je
fmuls
add
bound
and
jnp
and
ret
shlb
jo
push
in
repz
dec
loop
and
pop
inc
jecxz
int
cli
or
stos
pusha
pop
fs
xor
mov
lret
mov
scas
dec
xchg
inc
leave
adc
xor
scas
aaa
cld
cmp
dec
cli
dec
leave
xor
js
rcll
xchg
push
repnz
in
cmp
addr16
inc
dec
mov
repnz
or
fwait
popf
fstpl
enter
lds
repnz
push
cmp
dec
imul
lahf
xchg
cmc
scas
adc
push
inc
in
xor
cmpsb
test
int
fbstp
and
cmp
lahf
and
adc
in
lret
mov
imul
adc
dec
mov
jo
sbb
pusha
sub
inc
sub
fs
add
push
clc
inc
adc
scas
fildl
loope
mov
inc
sbb
xor
mov
stc
scas
jle
add
pop
mov
push
in
fdivs
pushf
pop
dec
adc
and
mov
int
int
fistpl
and
fistpll
xchg
xchg
testb
rcrl
xor
sarb
jno
cmc
shl
jno
cwtl
leave
aad
jno
out
mov
pop
cltd
pop
mov
push
lahf
jne
out
rcl
push
add
pusha
mov
push
cld
imul
lcall
adc
jg
cmp
sub
push
adc
int
dec
mov
mov
sarl
inc
add
inc
mov
cld
lods
or
or
sbb
mov
dec
mov
std
dec
out
daa
pop
push
xorb
ja
push
popf
sub
mov
daa
arpl
lret
xor
and
popf
sbb
mov
sbb
mov
stos
add
sub
fistpll
push
or
and
aas
test
xchg
daa
ja
iret
xor
xor
pop
jb
xchg
push
pop
popa
xchg
lcall
lock
pop
push
jo
or
inc
pop
push
push
daa
jnp
add
jmp
xchg
aas
call
cmp
jecxz
mov
sub
jb
out
inc
dec
pop
lahf
cld
mov
sbb
add
popa
outsl
and
mov
cmp
test
lret
adc
popf
add
and
jo
aad
pop
mov
mov
mov
inc
mov
into
lret
xchg
pop
push
mov
imul
xchg
push
mov
xor
lock
cmpsb
or
mov
jge
push
mov
aam
insb
stc
cld
mov
mov
sbbb
xchg
or
pop
stos
lods
xchg
xor
pop
bound
mov
imull
faddp
imul
mov
fistpl
stc
out
and
sahf
movsb
pop
out
add
inc
xor
adc
lret
lods
mov
mov
cmp
cli
mov
pop
aad
ss
ret
mov
and
divl
pop
leave
jg
dec
sub
test
test
cltd
sub
add
xor
stos
push
in
mov
jne
cwtl
das
dec
adc
das
mov
jg
loop
jmp
hlt
nop
je
xor
das
and
pop
cmp
fwait
out
mov
mov
pop
and
pop
adc
adc
xchg
fists
push
shrb
xchg
pushf
ljmp
mov
and
ja
leave
insb
lock
jnp
inc
push
xchg
cmp
stc
addr16
std
add
inc
add
js
dec
test
in
xchg
lea
dec
sub
lahf
mov
mov
adc
ret
add
mov
xor
jo
cmp
adc
xor
pop
adc
jne
xor
jle
push
push
lea
jo
int3
in
sbb
push
repnz
sarl
pop
push
inc
inc
mov
mov
xchg
cli
rcr
inc
cmp
fwait
mov
mov
lret
jmp
adc
dec
mov
push
pop
stos
sub
and
xchg
mov
test
jae
fdivrl
rorl
std
xor
cmp
arpl
pop
jmp
hlt
mov
sub
and
sbb
out
std
push
int3
xchg
addr16
lea
out
push
xchg
or
in
or
xor
push
add
jl
or
pop
add
jne
cmpsb
jl
in
adc
loop
jg
loop
movsl
cs
shrb
mov
repz
jbe
dec
ss
pop
or
scas
leave
adc
stos
push
adc
aaa
sub
popa
jbe
bound
clc
xchg
and
les
mov
xor
lods
xor
or
nop
out
test
outsl
ljmp
mov
movsl
je
in
push
aam
insl
ds
sbb
pop
imul
hlt
sub
and
lock
push
pop
dec
jnp
adc
push
mov
aas
mov
pop
out
and
or
mov
ret
sbb
mov
lcall
addl
lock
mov
mov
les
movsl
daa
xor
aas
mov
roll
fcoml
and
outsl
jg
or
adc
mov
gs
jbe
sub
pop
and
lea
movsl
jg
ss
push
dec
addr16
jl
iret
pop
rcl
add
stos
pop
cmc
ds
pop
hlt
mov
lret
adc
jae
dec
in
test
jne
xchg
popf
jl
rorb
pop
xchg
dec
mov
cli
pandn
xchg
roll
xchg
mov
or
cli
mov
mov
push
addr16
fstpl
pop
and
mov
popf
and
fwait
and
mov
xchg
inc
adc
lea
adc
pop
push
cmc
fdivs
xlat
nop
add
cwtl
mov
sbb
clc
test
jp
mov
adc
in
or
push
lea
mov
jg
mov
xor
jle
out
cmp
jb
adc
fld
pop
mov
or
xchg
adc
xchg
in
or
cltd
scas
imull
fmuls
or
cld
lods
out
or
int3
and
inc
pop
xchg
pop
ds
mov
jo
test
jae
call
dec
xor
cmp
rolb
outsb
push
dec
cmp
ret
lods
in
sub
icebp
pop
mov
and
mov
inc
sub
sbb
lahf
out
arpl
jl
dec
add
and
pop
mov
movsb
leave
loop
cmp
xchg
pop
adc
push
int3
fnstenv
cmpsb
pop
dec
or
sbb
mov
rcrb
dec
push
inc
in
xchg
sbb
ret
push
subl
push
sub
push
shll
pop
sbb
mov
inc
insl
adc
daa
mov
les
lds
push
stc
and
sub
inc
cltd
nop
jp
test
adc
sub
xchg
mov
add
jp
fadds
out
jge
fisubrl
jae
pop
cmp
lea
mov
inc
inc
rcll
jecxz
icebp
push
leavew
mov
sar
adc
inc
dec
xchg
or
outsl
push
insl
xlat
nop
sub
mov
outsb
testb
inc
pop
int3
cmp
aam
push
dec
dec
les
or
rcr
adc
dec
pop
divb
ret
ret
cli
jae
arpl
xor
ret
push
repz
jecxz
xchg
and
repnz
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
repnz
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
repz
jecxz
shll
arpl
xor
imul
sbb
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fstp
lock
call
xlat
pop
ljmp
add
add
add
or
add
add
add
and
and
add
add
xchg
add
add
jo
mov
add
add
add
add
add
xor
mov
add
add
das
add
add
add
adc
jo
mov
add
add
add
add
add
add
add
add
add
and
or
or
movsb
add
add
adc
addl
add
add
add
add
add
add
addb
add
add
lea
sub
add
add
add
test
aaa
add
add
dec
add
daa
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
test
pusha
add
push
add
add
pop
add
add
add
incl
movb
add
and
addl
cmpsb
add
mov
mov
add
add
xor
xchg
inc
add
add
cmp
add
add
add
add
add
add
jno
add
enter
jns
and
dec
add
mov
push
add
add
jns
push
add
add
add
dec
add
push
add
add
add
add
add
or
dec
add
add
add
mov
add
add
jo
mov
add
push
add
add
push
add
add
add
add
jb
ss
add
add
add
in
push
add
add
sub
sub
lods
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
inc
add
cmp
add
add
or
cmp
or
add
add
jg
pop
add
add
add
add
add
sldt
xor
xchg
add
add
add
add
add
add
add
ret
add
add
add
add
bound
fs
add
add
xchg
pop
add
add
inc
add
das
add
add
add
xchg
add
popa
add
add
or
add
add
adc
mov
add
add
add
push
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
inc
add
add
popa
add
add
add
addb
add
cmp
popa
add
add
add
lret
add
add
cmp
or
add
add
add
push
add
add
test
das
add
add
aas
add
dec
add
add
add
xchg
add
add
add
add
add
add
add
add
add
jg
add
pusha
add
add
add
add
add
push
jo
faddl
inc
add
cmp
ljmp
add
pop
add
pushf
add
add
add
add
add
add
add
fildl
cmp
add
add
add
add
add
push
add
add
add
pop
add
add
add
jg
dec
xchg
sbb
mov
fnsave
faddl
mov
sub
jns
mov
mov
in
xchg
sub
aaa
jno
xlat
in
jne
fs
pushf
pop
push
insl
pop
es
lahf
mov
mov
aas
movsl
rorl
xor
repnz
das
push
loope
imul
dec
pop
ja
push
sub
mov
add
xor
xchg
mov
inc
cmp
cmc
pop
int
or
xchg
cli
popf
mov
shl
push
addr16
jo
jle
movsb
hlt
cmp
sub
loop
push
loop
cmp
hlt
and
or
mov
adc
push
xchg
sub
mov
fdivrl
ret
inc
roll
pop
sub
sahf
das
cmp
add
mov
into
adc
es
add
mov
clc
ret
in
fidivl
lods
lds
jbe
fdivp
imull
pop
inc
jne
roll
jno
out
sbb
enter
cs
pop
ds
sahf
cmp
call
sbb
stos
mov
ret
or
rol
data16
adc
lea
in
mov
in
in
mov
cmc
xchg
sub
jle
popf
aad
ljmp
or
push
nop
cmpl
or
cld
mov
sbb
cmp
sahf
lods
mov
adc
into
cmp
or
xchg
js
adc
imul
mov
inc
mov
jp
loopne
mov
es
push
mov
push
push
push
mov
mov
in
sbbb
xor
cs
test
fs
add
jp
sub
or
stos
lea
push
mov
test
js
mov
out
jns
xchg
loopne
sbb
imul
lods
je
icebp
mov
jb
fsubrs
stos
std
mov
nop
or
outsb
xchg
shlb
mov
mov
outsl
lret
push
pop
jmp
pop
data16
add
push
xlat
sahf
orb
jge
mov
out
lahf
mov
push
jns
cmp
adc
add
outsb
inc
sbb
sbb
fstl
dec
in
rorl
test
scas
mov
fisttps
pop
and
push
cmp
je
inc
mov
rolb
cmpsb
data16
cmp
push
sub
sub
imul
xor
mov
pop
mov
cld
outsb
es
mov
jp
dec
mov
push
sub
mov
dec
sti
pop
mov
outsb
roll
sbb
jo
movd
push
jne
fimuls
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
