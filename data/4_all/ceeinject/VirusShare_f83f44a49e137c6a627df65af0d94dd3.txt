fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
and
dec
xlat
sbb
mov
lret
xchg
leave
jecxz
icebp
stos
rorl
xor
pop
adc
cmp
inc
sbb
mov
mov
cmp
lret
jecxz
ret
jnp
fwait
rorl
sbb
push
jp
imul
add
mov
scas
jmp
jecxz
pushf
lds
jnp
add
das
shlb
jae
addb
pusha
or
lret
popf
jmp
repnz
sbb
shlb
shrl
aad
xchg
movb
lret
insl
lret
mov
jecxz
ret
fwait
sub
faddl
das
mov
outsl
xchg
out
jle
sub
stos
bts
rorl
lret
jnp
sbb
mov
stos
mov
mov
insb
xor
call
shl
jae
mov
stos
pushf
sbb
push
dec
mov
jmp
sahf
arpl
sbb
repz
ret
je
je
mov
sbbb
xchg
dec
ret
rcrl
add
push
je
arpl
inc
add
mov
ret
sti
mov
shr
dec
push
push
imul
dec
adc
inc
push
ja
mov
mov
movsb
jecxz
xchg
clc
mov
mov
imul
cmovs
inc
jg
loopnew
mov
leave
cwtl
les
cmp
outsl
cmp
sub
sub
push
or
fistl
stos
ret
fwait
rorl
add
dec
arpl
jae
inc
sbb
mov
fistl
stos
ret
fwait
rorl
mov
push
adc
cmpsl
xchg
jecxz
insl
repz
sbb
cmpsl
orb
add
aad
mov
dec
cmp
or
dec
loop
aad
nop
push
das
ret
test
adcb
or
add
sub
sub
addl
sub
dec
popa
rcl
pop
add
jp
xor
cmp
xchg
adc
mov
cmp
dec
xchg
sahf
insl
jno
xor
lods
sets
sarl
cmc
mov
jnp
dec
ds
mov
jl
rcrb
scas
and
loopne
mov
mov
jge
sub
test
in
cs
insl
jae
fadd
xchg
jle
in
bound
mov
add
aam
rcrb
jmp
push
lret
insb
pop
ljmp
std
xchg
data16
jg
push
inc
pop
mov
push
movsb
mov
adc
lret
adc
xor
inc
rcrb
jecxz
push
out
scas
fucomp
fildl
xlat
xchg
cwtl
pop
in
inc
sub
imul
pop
jp,pt
xor
push
push
cmp
in
cs
inc
pop
inc
xchg
sub
sub
dec
mov
call
insl
sub
and
sbb
lret
ret
sub
mov
adcl
sub
lds
inc
addr16
scas
jb
loopne,pt
sbb
or
xchg
sbb
pop
fildll
dec
call
loop
out
mov
or
std
dec
mov
mov
inc
imul
lfs
push
cmp
mov
push
dec
push
cld
scas
pop
sbbl
xchg
sbb
push
cli
frstor
bound
outsb
xchg
lret
mov
mov
push
aam
leave
fildll
or
iret
out
mov
push
or
dec
nop
insl
xchg
addr16
enter
inc
jl
pop
jb
push
xchg
in
lods
sub
decl
shrl
mov
les
jmp
mov
pusha
cltd
mov
stc
jno
xchg
mov
jns
lcall
dec
clc
mov
pop
in
xor
vminsd
fstpt
cmc
xor
push
sbb
mov
xchg
xchg
enter
shll
bnd
dec
iret
mov
leave
jbe
ret
mov
sbb
testb
pusha
sub
pop
mov
mov
lds
xchg
mov
dec
jg
or
dec
sub
sub
outsl
add
lds
mov
mov
repz
push
push
inc
and
imul
sahf
adc
imul
outsb
into
inc
xchg
cwtl
test
push
xor
mov
adcl
add
jl
adc
les
aad
sub
repnz
inc
cmp
aas
in
inc
cmp
dec
pop
pop
stc
mov
push
in
dec
jmp
sub
test
test
cmc
push
cld
lea
cmp
adc
fimull
and
insb
jecxz
std
repz
jo
jl
dec
sbbb
and
mov
mov
mov
jge
gs
mulb
pop
popa
fstl
jbe
aas
jmp
std
cmp
cmpsl
mov
movsl
xchg
inc
jp
out
lcall
lahf
push
aad
repz
mov
adc
mov
push
cmp
push
scas
push
stos
cmp
sub
sbb
pop
inc
test
lret
test
dec
shll
push
popf
je
jge
add
subb
imul
sarb
cld
or
adc
iret
mov
mov
push
insb
xor
into
dec
jne
testb
push
pop
stc
sub
mov
shll
nop
push
xchg
xor
cmp
sub
or
mov
clc
jb
cmpsl
xlat
add
lret
cmpsb
pop
out
rorl
fdivs
mov
imul
out
sbb
icebp
stos
sarb
cmp
xchg
bound
mov
fnstcw
movsl
mov
js
aas
jbe
lret
push
jnp
movsb
jl
inc
gs
sahf
in
movsb
or
pop
inc
push
sahf
lods
jnp
gs
mov
insb
add
adc
dec
repnz
cmpsb
xchg
xchg
adc
addr16
jnp
push
daa
fbld
add
cmpsl
out
xlat
push
fisubrs
sti
mov
add
icebp
sarl
push
fs
cs
aaa
ja
outsb
sbb
mov
xor
and
mov
mov
or
popf
popa
lcall
mov
aaa
nop
mov
push
sbb
push
aas
shr
cmp
mov
int3
out
dec
jmp
cs
sub
pop
cmp
jnp
mov
ds
mov
push
sbb
push
mov
into
fsubrl
js
ret
imul
cwtl
sbb
xchg
scas
outsl
or
sub
lods
or
mov
shlb
pop
dec
sbbl
pop
test
cld
xlat
push
and
xor
les
in
xchg
mov
sbb
sbb
push
cmpsl
jo
aad
inc
mov
mov
or
or
pop
xchg
and
xor
jp
std
add
lods
mov
inc
movsl
inc
sbb
ljmp
inc
xor
push
sahf
push
iret
xor
push
inc
adc
fimuls
mov
mov
cmp
cmp
adc
mov
add
sub
mov
lahf
js
cmp
fstps
mov
jg
inc
stos
lock
stc
lahf
dec
xchg
jle
test
ret
ret
daa
fidivrs
or
out
loopne
repz
xchg
mov
jp
mov
mov
pop
jle
sahf
pop
js
mov
fs
cmpsb
sbb
sub
dec
xlat
ret
inc
rcll
lock
sbb
add
stos
clc
ret
or
xor
and
aaa
fwait
mov
mov
dec
scas
fists
fists
xorl
or
pop
sbb
xor
lcall
jl
sub
push
mov
or
lret
popa
mov
adc
xchg
inc
std
cmp
dec
aaa
dec
ja
lock
das
ss
scas
xlat
push
and
add
pop
mov
lods
mov
or
out
cmp
inc
je
aad
dec
dec
add
hlt
lret
ja
mov
push
jne
mov
outsb
sub
xchg
or
or
sbb
mov
lret
sbb
or
and
or
mov
and
dec
dec
ret
sub
and
mov
cmp
popf
sarb
adc
out
xorl
sarb
sbb
movb
and
and
shlb
push
cli
in
arpl
sbb
outsl
pop
das
cmpsb
std
inc
mov
adc
or
rorb
daa
sahf
xor
adc
popf
sbb
xor
into
int3
insl
xor
dec
push
mov
lods
gs
and
mov
fs
or
jmp
or
rcl
and
xor
stos
testb
push
cmp
jl
sti
pop
add
jns
cmp
out
test
sub
pop
adc
js
in
inc
test
xchg
rcrl
sub
or
testb
cmp
scas
cli
or
lea
test
int
push
pop
cli
ret
push
inc
xor
mov
xor
mov
rcll
insl
lods
insb
jg
adc
jmp
stos
clc
sub
sbb
push
clc
in
lods
mov
mov
mov
or
pop
sbb
scas
xchg
jecxz
add
jae
pushf
dec
mov
enter
fwait
mov
fstp
in
dec
push
xchg
dec
mov
xchg
jmp
mov
es
lods
cld
xlat
fldcw
fidivs
xor
pop
or
adc
ficoms
gs
andl
shr
xorb
rorb
sub
repnz
out
cli
adc
rorb
stc
sbb
pop
or
cmp
jnp
sbb
xchg
shlb
addr16
out
inc
and
push
dec
pop
cs
fstpt
insb
sbb
aas
stc
faddl
or
fldl
sub
sbb
gs
in
int
stos
call
icebp
repz
lahf
mov
sub
xor
pop
pushf
jne
outsl
push
pop
lret
je
pusha
test
mov
and
jne
xchg
ja
mov
pop
cli
es
or
les
add
jge
mov
xchg
pushf
push
xchg
inc
mov
shll
sahf
aam
popa
pop
sbb
neg
mov
push
adc
sub
add
bound
insl
add
jmp
dec
lret
sub
sbb
mov
lods
sbb
push
mov
dec
mov
or
jns
xchg
hlt
outsb
adc
cmp
cld
xor
inc
pop
xchg
mov
jae
jo
cmpl
adc
repnz
aam
ret
pushf
rcl
adc
mov
jne
stos
pop
pusha
roll
jns
pop
mov
iret
pop
inc
mov
sub
inc
call
sti
repz
sub
addb
insb
push
add
cwtl
addr16
lods
ret
push
inc
push
jo
sbb
test
daa
lret
and
add
testl
rcr
test
out
int3
addr16
out
fs
push
ror
xchg
dec
imul
gs
pusha
scas
loop
inc
pop
xchg
icebp
inc
push
lret
inc
xor
lahf
dec
loop
mov
adc
sub
sub
mov
arpl
out
sarl
or
repnz
inc
mov
iret
inc
ja
xlat
pop
sub
jle
pop
imul
mov
cld
icebp
push
mov
adc
hlt
mov
bswap
mov
xchg
mov
bound
jg
ja
xor
add
sub
push
clc
test
cli
or
loop
mov
jg
mov
adc
movsl
movsl
aad
jnp
lret
popf
xor
dec
loope
dec
insb
inc
inc
test
ret
jp
ret
add
mov
lcall
xchg
sbb
rcr
mov
push
pop
mov
rol
push
mov
xchg
lock
imul
push
xchg
push
push
std
sbb
decl
sbb
data16
xor
psllq
or
and
add
jb
mov
mov
movsb
ret
xchg
fldz
xchg
and
pop
lahf
xor
test
sarb
jno
dec
pop
cwtl
pop
dec
arpl
push
fdivrs
xor
xchg
nop
push
mov
test
lahf
mov
push
xor
mov
push
and
jle
or
mov
fs
shr
call
pop
ret
dec
jae
mov
or
cmp
adc
sbb
xor
cli
inc
in
fldcw
lds
pushf
mov
pushf
cmp
or
in
andl
fisubrs
pop
aaa
jp
add
mov
jmp
xchg
mov
call
adc
dec
xchg
ret
stc
xor
scas
das
dec
insb
xlat
das
mov
mov
jecxz
cld
cmpsl
in
xor
test
ja
int3
pushf
call
mov
data16
out
mov
inc
adc
in
pusha
cmp
shlb
das
mov
shl
cmp
shl
inc
add
loope
das
mov
fsts
cmp
sbb
nop
insb
ljmp
jae
and
scas
jae
push
test
or
push
jl
sbb
iret
jae
push
orb
andl
inc
pop
insb
loope
push
ror
add
inc
mov
in
push
leave
or
icebp
jle
aaa
mov
sbb
frstor
in
mov
aad
mov
push
cmpsb
push
mov
mov
add
shlb
cltd
daa
mov
add
lcall
int
push
xchg
lret
cmp
fadd
and
mov
lcall
and
movb
adc
pop
xor
notl
or
test
ja
std
jg
xchg
push
sub
out
pop
push
outsb
sbb
sub
fdiv
int
xlat
imul
fs
leave
xchg
out
and
jge
pop
popa
lcall
cmp
jmp
lret
and
pop
les
inc
pop
lock
daa
outsb
mov
cmc
mov
shr
pop
imul
inc
andb
mov
xchg
ja
pop
dec
mov
adc
add
pop
das
mov
cmp
mov
mov
stos
or
cmp
sbb
push
rcll
lods
pop
mov
or
sbb
call
mov
lock
test
movsb
and
testb
in
push
test
sbb
xor
sbb
jecxz
seta
mov
cld
fdivrs
lcall
dec
or
into
testb
arpl
mov
push
adc
adc
repz
sbb
sti
notb
push
mov
jne
ljmp
nop
mov
pop
stc
sahf
pop
arpl
inc
pusha
sub
ficoms
and
fnsave
sahf
inc
xchg
push
xchg
je
sbb
adc
cmpsl
dec
mov
inc
jge
iret
pop
push
mov
add
dec
sbb
cmc
pop
lcall
out
shrb
dec
call
adc
mov
mov
xchg
adc
xor
push
jo
jne
or
jle
ljmp
sbb
xchg
pop
xchg
mov
outsb
lahf
sahf
xor
lcall
mov
cmp
dec
and
into
popf
roll
sbbb
test
ret
test
mov
cmp
out
cs
es
and
push
dec
or
in
popf
add
mov
inc
cmp
inc
mov
inc
pusha
lods
cwtl
roll
xor
call
repnz
mov
or
xor
shll
add
in
add
push
scas
push
inc
jnp
or
and
push
arpl
test
outsb
out
cmpsb
xlat
cmp
ret
lahf
jg
cmp
or
jne
ss
test
dec
and
or
aad
sbb
xchg
bswap
xchg
fs
out
cmpsb
xlat
sbb
out
popf
lock
adc
and
or
adc
mov
push
shrl
and
pop
cmp
rdmsr
push
dec
or
pop
or
std
insb
jge
in
sub
adc
jge
ja,pn
mov
mov
pop
push
jg
and
in
rclb
or
movb
test
xchg
pop
movsb
pop
jp
hlt
imul
or
xchg
shrl
loop
sub
pop
mov
pop
roll
sbb
not
lds
or
iret
xchg
dec
jmp
jns
movsb
mov
xor
mov
adc
sub
fwait
jae
ljmp
mov
sbbb
xor
enter
cmp
pop
movsb
jnp
pop
pcmpeqb
mov
sbb
add
xor
aaa
cmpsb
jns
inc
dec
pop
pop
pop
clc
sbb
repz
int3
xchg
loopne
adc
ret
in
gs
sub
dec
leave
or
sbb
mov
sbb
fcmovbe
jns
pop
cmpsb
sahf
xor
mov
and
das
sbb
sbb
sub
mov
out
add
dec
dec
sub
jp
loopne
repz
jle
test
push
mov
stos
or
jo
mov
fistpll
cmpsb
push
lret
pop
out
in
inc
aam
pop
inc
popf
fucom
roll
push
pop
test
or
cmp
ss
fdivs
inc
and
inc
pop
pop
sahf
pop
dec
xor
dec
pop
shl
cld
xchg
stc
in
push
cmpsb
push
rorb
dec
ljmp
fwait
les
mov
fstpt
fs
lods
sub
push
mov
dec
jne
ret
out
push
sbb
pop
divl
or
es
adc
pushf
loope
popf
out
and
stos
jno
repnz
push
xchg
pop
xchg
jecxz
cmpsl
imul
mov
adc
xchg
cmp
lret
cli
push
fs
cmpb
decb
loop
dec
scas
mov
mov
inc
jp
cld
movl
xlat
pop
pop
adc
sub
jb
mov
adc
incb
xor
and
xor
subb
movsb
fucomi
scas
add
sahf
adc
addr16
daa
mov
jmp
js
std
fs
mov
xchg
mov
std
add
int
or
xor
sbb
add
mov
xchg
adcb
cmpsb
push
mov
xor
or
frndint
scas
inc
rcll
jne
jne
pop
push
sbb
mov
test
loope
add
addr16
xor
js
dec
mov
jg
in
in
xchg
sbb
xor
in
cwtl
pop
xchg
pop
clc
ror
shl
clc
sbb
jb
int
and
mov
popf
jl
negl
cmp
loopne
popa
cmp
std
gs
and
jmp
aaa
cmpsb
dec
fs
stos
jno
push
pop
data16
mov
cli
shlb
imul
inc
call
out
jecxz
mov
daa
or
pop
mov
outsb
ljmp
xor
add
or
mov
ss
lods
add
push
add
inc
sbb
lds
insl
and
jno
cmp
lods
xor
sub
aas
setbe
add
jno
ret
movsb
repz
sbb
add
push
and
cs
into
scas
les
hlt
dec
xchg
negb
or
cltd
fdivl
mov
push
cli
xorl
sub
xor
and
xchg
ret
pop
xor
mov
add
fildll
xor
imul
fs
ds
or
scas
inc
jg
outsl
insb
sbb
mov
cmpsb
loopne
incb
dec
mov
insl
xchg
sub
pop
add
cmpsb
or
into
inc
add
rolb
sbb
fabs
sbb
cli
das
xor
cmpsb
xchg
les
into
notb
adc
sub
sbb
pop
jmp
xchg
fisubrs
mov
xor
aam
sub
mov
pop
sub
jecxz
cmc
into
jo
push
pop
aam
sbb
notb
inc
mov
jg
lahf
loope
mov
push
outsb
xchg
ret
add
or
call
loope
dec
mov
pop
insb
adc
lds
call
inc
rcrl
push
in
xchg
xchg
xor
fstpl
movl
fcoml
inc
mov
test
lahf
xchg
add
outsl
aad
and
or
mov
mov
pop
adc
test
les
sbb
push
and
arpl
je
cmp
dec
aaa
test
out
xchg
loopne
enter
mov
das
xor
les
mov
mov
subl
push
movb
in
sbb
cmp
into
push
lahf
dec
fcmovne
dec
push
rorl
add
pushl
and
iret
push
push
addl
jns
pop
rorl
sti
shll
mov
outsl
pop
enter
es
imul
sub
inc
and
jno
je
je
push
jg
jae
negb
test
push
lods
clc
stc
nop
movl
mov
sahf
adc
xchg
shlb
xchg
pop
push
mov
xchg
rclb
mov
ss
popa
push
sbb
cmp
es
ja
stos
out
pushl
dec
dec
enter
fs
mov
or
pop
push
sub
into
xchg
cmp
inc
addb
daa
int3
xchg
sub
movsl
add
adc
mov
movsb
std
cmp
pop
xor
and
adc
push
les
lahf
rorl
insb
jo
add
hlt
pusha
pop
push
add
es
lock
shll
xchg
jmp
mov
das
inc
lock
fidivs
mov
lea
jbe
dec
xor
stos
scas
push
int
test
mov
into
mov
adc
push
push
inc
shlb
popa
jae
int
pop
imul
and
xor
out
mov
fs
mov
xchg
ds
aas
clc
fistps
mov
lret
sbb
rclb
addr16
mov
mov
xor
scas
cmp
cmp
add
leave
sbb
jno
lahf
fildl
sub
inc
sbb
fisttpl
jle
xchg
pushf
loopne
xchg
add
call
dec
mov
mov
pop
fcomi
mov
pop
repz
nop
cmpsb
adc
pushf
es
fisubl
fs
mov
jo
jge
roll
pop
iret
cmpsb
cmp
sub
fcompp
leave
rolb
xchg
cmp
push
or
shlb
pop
gs
dec
jbe
xor
enter
in
js
repz
mov
mov
inc
xor
dec
gs
outsl
dec
pop
and
xor
and
stos
call
stc
test
cwtl
sub
inc
mov
ffreep
and
sahf
jge
pop
jecxz
and
lods
cs
push
mov
lahf
imul
xchg
adc
mov
jmp
in
dec
xchg
addl
sbbb
mov
shlb
shlb
xchg
jno
rcrb
mov
mov
mov
popf
divb
dec
xchg
idivl
rcl
or
adc
jp
lods
mov
or
mov
adc
cmp
inc
sbb
mov
fistl
stos
ret
fwait
rorl
add
dec
arpl
jae
inc
sbb
mov
fistl
stos
ret
fwait
rorl
add
dec
arpl
jae
inc
sbb
mov
fistl
stos
ret
lcall
add
dec
popa
cmp
ret
sbb
or
inc
sub
xchg
mov
cmp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
imul
adc
push
sbb
mov
jns
imul
aam
sub
xor
add
adc
fs
push
mov
jns
imul
sbb
or
stc
mov
sbb
leave
je
cmp
push
inc
fdivs
les
dec
mov
cmpsl
or
adc
inc
mov
xor
lcall
mov
push
aas
ds
adcl
popf
ss
mov
xchg
rolb
jnp
jg
popa
stc
mov
je
and
add
xchg
movsl
in
out
add
or
mov
push
sbb
jns
aaa
out
or
dec
call
gs
push
fnstenv
cmpsl
imul
out
sub
paddq
mov
sbb
fs
push
pop
icebp
hlt
insb
xchg
sbb
adc
fdivs
stos
rcll
pop
xchg
pop
xchg
dec
popa
hlt
fldl
stc
xor
add
js
fs
in
mov
imul
sub
sbb
cmp
jp
or
add
push
cld
xor
add
aaa
cmc
daa
lea
mov
xchg
insb
and
mov
sahf
or
mulb
mov
clc
and
mov
xchg
addr16
test
push
mov
inc
cltd
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
lock
lods
sub
sub
and
xor
out
add
pshufw
jnp
call
loopne
cmpsl
add
rorb
xorb
push
sbb
inc
mov
mov
sub
insb
jl
hlt
mov
pop
inc
pop
loope
push
adc
sub
cs
jmp
adc
clc
or
cmp
fwait
loop
sbb
dec
mov
adc
lea
mov
adc
mov
sahf
lcall
mov
gs
xchg
or
jo
add
add
js
loope
out
adc
adcb
test
push
popa
push
test
pop
cwtl
jmp
daa
push
lea
es
push
in
daa
mov
fldt
repnz
ja
mov
push
xchg
fisttpl
test
adc
lcall
fldpi
fisttpl
push
sahf
test
mov
scas
mov
fcomps
xor
jmp
push
jmp
push
daa
ret
fucomp
mov
sbb
mov
mov
test
inc
dec
int3
in
int
int
inc
inc
lock
notl
ret
and
push
xor
xlat
jb
xchg
fldcw
add
sbb
mov
fdivrl
mov
mov
cmpsb
dec
cmp
cmc
sub
dec
mov
in
jno
sub
ljmp
iret
movb
cmp
mov
hlt
cmp
fiaddl
mov
jnp
lret
push
jnp
les
fisubs
adcl
or
fisttpll
mov
movsl
cld
leave
cltd
xchg
jge
out
mov
xor
mov
loop
push
aaa
adc
fists
add
jmp
mov
inc
or
fldcw
and
out
into
mov
inc
bound
sbb
pop
add
mov
push
inc
mov
jne
je
mov
push
add
jle
sbb
out
and
ds
jno
stos
into
add
lock
pop
scas
mov
test
inc
xor
push
cmpsl
and
dec
jno
push
add
lret
mov
jmp
lods
cmpsl
loop
cmc
push
bound
repnz
sbb
nop
cltd
mov
and
aad
js
sub
cmpsl
ljmp
dec
lret
fbld
daa
lret
out
xchg
mov
scas
sub
or
aaa
gs
into
add
test
int3
adcl
rcll
or
xchg
push
push
push
mov
loope
test
outsl
mov
adc
icebp
in
pop
sub
imul
jno
out
lods
mov
into
lcall
jle
mov
cmpb
test
ljmp
mov
mov
mov
sub
inc
imul
cltd
ret
daa
pop
pop
sub
fsubs
push
fnsave
rolb
xor
outsl
jo
gs
in
xor
sbb
lds
iret
add
pop
pop
and
xchg
pop
mov
mov
addr16
test
stos
inc
adcb
inc
fwait
out
cmp
out
add
cmc
ret
test
inc
push
pop
loope
sbb
insl
imul
jge
jne
imulb
dec
mov
ljmp
xchg
push
jns
sarb
mov
push
stc
jae
mov
jbe
ret
mov
mov
fisubrs
add
and
mov
cmp
mov
mov
mov
jns
lahf
mov
xchg
cmp
mov
lea
pop
or
mov
gs
or
sbb
mov
or
dec
cmp
shl
fisttpl
sbbl
test
adc
neg
dec
addr16
adc
ret
aad
or
shrl
lock
xchg
aad
hlt
shlb
xchg
push
or
int3
cmp
and
nop
xchg
sub
fcoml
xchg
and
inc
sub
sub
adc
jmp
inc
xchg
lea
mov
adc
sub
adc
pop
es
jmp
insl
xor
xchg
xchg
icebp
adc
jg
mov
adc
int
xor
cmpsl
jnp
xor
pushl
mov
sarl
mov
ss
adc
lcall
jb
movsb
and
cmp
mov
cmp
fdivrl
test
mov
xchg
loopne
rol
cmc
outsb
out
in
or
inc
mov
dec
and
out
loope
sbb
call
es
sub
pop
and
cmp
mov
xchg
in
fdivl
mov
adc
xor
gs
repz
lret
pop
test
addb
fistps
imul
adc
fwait
push
ss
inc
lcall
push
mov
in
call
xchg
stc
enter
sbb
leave
and
sbb
mov
xchg
scas
xor
xor
xor
add
cwtl
mov
inc
inc
sub
pushf
push
push
xor
jae
test
or
outsl
sub
xchg
nop
dec
scas
aaa
scas
test
pop
cmpsb
inc
addr16
and
cmpsl
push
dec
test
xor
add
shlb
jbe
inc
ret
push
push
jp
adc
or
mov
push
add
dec
stos
shlb
cli
mov
dec
push
movsb
xchg
test
push
pop
sbb
jmp
push
add
shlb
adc
mov
jl
rclb
dec
ja
movsb
dec
sub
pop
mov
idivb
inc
aad
add
mov
lea
jae
cs
aad
fs
adc
adc
lods
or
lretw
pop
jb
jle
test
cmp
inc
fmull
js
jnp
adc
add
lock
cli
inc
ja
jp
mov
ret
push
add
push
mov
int3
movsb
aaa
mov
ficoms
dec
jae
in
ret
cmp
xchg
fcmovb
outsb
cmp
mov
cwtl
mov
outsl
mov
push
jns
jge
adc
or
fistpl
fwait
ljmp
insb
mov
int3
sti
xchg
ja
xor
outsb
sbb
iret
jno
and
ds
dec
push
enter
mov
jno
out
xchg
inc
lahf
push
mov
fs
pushf
pushl
das
cmp
mov
les
dec
push
cmc
cmpsb
mov
mov
arpl
and
xchg
fiaddl
lea
sub
loope
les
mov
add
ja
rcr
decb
aaa
fistpll
call
dec
movl
lahf
lea
push
loope
in
mov
out
and
sti
xchg
cmp
std
repz
push
cmp
mov
aam
sbb
inc
sarl
mov
adc
adc
and
mov
aaa
and
push
dec
addr16
pusha
nop
inc
inc
imul
rcrl
sub
lahf
fsubrl
out
mov
fwait
stc
outsl
fldl
add
hlt
push
push
call
es
roll
fnstsw
cmp
xlat
mov
add
or
les
mov
jne
mov
lock
in
sub
daa
sub
push
jmp
nop
loop
and
test
hlt
andb
xchg
jl
cmp
cmc
sbb
inc
insb
call
cwtl
mov
sub
in
shlb
jbe,pn
nop
adc
cmp
fsubrs
adc
add
cmp
jae
sti
mov
push
imul
mov
in
je
mov
aam
pop
dec
call
jp
sub
adc
mov
les
push
dec
xor
and
dec
or
sbb
scas
stos
mov
aam
lret
cwtl
xchg
add
jne
jge
adc
mov
aam
test
push
cmp
sbb
pop
out
inc
xorb
fildll
jmp
sub
inc
add
jp
cmp
add
test
cs
lods
pop
and
inc
dec
mov
sahf
jecxz
repnz
pop
push
sub
js
jns
call
dec
sub
push
sbb
loop
cs
sbb
add
jg
mov
pop
mov
addb
pop
lods
insb
rorb
jp
lods
adc
les
popf
lea
lcall
mov
in
inc
xor
push
or
sbbb
xlat
adc
pop
enter
call
sub
aad
cmp
mov
mov
sti
es
loopne
jp
adcl
lcall
fstps
in
mov
jne
movsl
xchg
sbb
ficomps
push
test
fwait
stos
andb
mov
test
cwtl
test
and
and
out
xor
inc
in
pop
pop
aaa
pop
aad
adc
jle
lret
mov
jge
pushf
add
lret
jg
ret
flds
mov
adc
add
xor
jns
pop
or
mov
or
mov
jg
rcrl
inc
cmp
fnstcw
mov
mov
insl
vorps
and
add
mov
jp
push
sbb
add
or
in
popa
push
jo
scas
mov
scas
mov
push
std
repnz
push
iret
xchg
mov
jno
pop
jno
sbb
add
mov
sub
lea
mov
push
ljmp
insl
je
pop
stc
or
arpl
fisubl
cmp
cmp
inc
cltd
lahf
jle,pt
js
jecxz
out
popf
arpl
idivb
insb
stc
test
dec
jns
scas
push
sbb
mov
outsl
es
sbb
repnz
int
stos
and
dec
xor
out
and
icebp
xchg
loope
ja
jp
testl
pop
pop
mov
imul
xchg
es
add
mov
ds
bound
dec
cli
jg
jns
scas
xchg
cld
and
push
stos
xchg
mov
arpl
pop
xor
inc
enter
fwait
mov
mov
jecxz
out
in
dec
xchg
push
jbe
mov
or
jb
push
cs
movsl
movsb
push
cli
cwtl
add
inc
adc
add
push
int
xchg
push
or
push
jmp
adc
pop
enter
lea
adc
lcall
sub
xlat
cmp
hlt
cmp
cltd
mov
rclb
stos
outsl
pushf
and
fcmovb
jl
mov
outsb
rcrb
inc
into
mov
inc
cltd
push
pusha
xor
int
inc
jno
in
ret
fldcw
and
rcll
mov
movsb
pushf
icebp
dec
push
mov
fwait
or
inc
fidivrs
mov
xchg
scas
dec
pop
lds
mov
ret
push
adc
push
xchg
outsb
stos
es
mov
jl
push
and
scas
addr16
fdivr
pop
mov
fdivrs
and
fstps
sub
cli
sarl
sub
test
mov
push
out
pop
xor
loope
aam
cmpb
jge
adc
out
sub
test
popf
dec
lds
mov
mov
lahf
pop
test
mov
scas
sar
pop
pushf
gs
leave
addr16
cmp
addr16
or
sbb
cltd
jmp
leave
data16
test
push
test
aam
in
mov
sub
fadds
sti
in
jne
and
movsl
es
mov
std
cmpsl
xor
sbb
cmp
sbb
es
inc
sub
mov
ja
test
pop
fldl
cltd
ds
mov
pop
cmc
stos
adc
cmp
inc
out
mov
mov
xchg
movsl
jo
mov
jg
and
jmp
jns
xor
out
ret
xchg
lret
pop
jmp
aaa
setbe
in
mov
add
pop
jbe
jge
jo
cmpsl
hlt
dec
pop
mov
pushf
pop
mov
fisttpll
jnp
shll
cmc
pop
and
fst
adc
dec
call
in
xor
xor
mov
mov
mov
xor
pop
sbb
fsubrs
ret
inc
das
jmp
std
push
push
cwtl
in
aas
xchg
outsb
mov
cmpsb
jmp
ds
or
jp
test
out
mov
sbb
sub
mov
pop
or
inc
popf
xchg
add
aam
xor
sub
fmuls
jmp
add
xchg
xor
adc
xlat
loop
adc
out
outsl
jb
and
inc
out
xchg
cmp
cmpsl
and
or
mov
push
mov
push
adc
add
jns
adc
arpl
sub
mov
add
jg
pop
enter
enter
sbb
cs
fsubs
cli
inc
out
insb
sub
in
fsts
inc
mov
arpl
pop
frstor
in
mov
pop
out
mov
and
ja
xchg
jno
cwtl
mov
loop
jecxz
mov
or
push
insb
test
adc
inc
cmpsb
or
and
cmpsb
in
xor
call
addr16
push
xor
adcl
in
add
mov
les
or
rcrl
pop
pop
mov
mov
jnp
add
jo
xchg
mov
and
xor
lahf
cmp
jb
bound
dec
pop
xchg
mov
add
icebp
sbbb
cmp
jbe
int
sbb
jnp
mov
repnz
lock
pop
mov
jge
mov
lock
stos
xor
xchg
mov
shr
pop
fs
sbb
mov
xor
mov
or
bound
add
sub
insl
sub
sbb
mov
popa
jmp
mov
push
cmp
inc
scas
push
mov
dec
pop
popa
fsts
call
sub
mov
out
subl
pop
pop
sti
mov
imul
subl
mov
rcrb
fwait
dec
fnstsw
push
xor
push
cmp
xchg
inc
mov
ret
push
das
and
xor
lea
lods
insl
pop
cmp
add
lea
add
das
mov
sub
push
test
ret
mov
sub
sbb
push
aas
movsb
int3
mov
rclb
xchg
es
sub
xchg
jmp
addr16
es
cmp
jae
lods
mov
pushf
lret
stos
aaa
mov
or
xchg
ds
mov
dec
vmovhpd
hlt
mov
and
cmp
aaa
movlps
scas
inc
or
push
shl
stos
inc
mov
cmp
push
ffreep
mov
and
fdivl
leave
sub
pop
fwait
js
mov
mov
pushf
lock
inc
arpl
out
in
sbb
idivb
je
push
push
sbb
pop
movsb
sahf
mov
loope
in
cmp
push
sub
out
pop
jno
jg
xchg
mov
pop
lods
je
rcl
insl
push
fsubp
pop
xchg
jp
sub
cmpsl
aas
rcll
mov
push
and
jns
inc
xor
das
data16
pop
shrw
push
fwait
jne
jbe
inc
jl
adc
lret
and
sub
mov
xor
xlat
test
and
and
jle
push
mov
clc
cmp
lret
stc
ror
lods
mov
pop
test
mov
adcb
inc
out
and
in
mov
mov
fidivrl
pop
pop
stc
pop
mov
jns
cmpsl
cs
push
arpl
setle
jl
iret
icebp
jge
jnp
out
mov
rol
cmp
mov
aam
sub
mov
xor
add
js
pop
sub
adc
inc
ja
sbb
push
pop
mov
mov
xchg
sub
cmp
jmp
out
pop
enter
mov
mov
das
mov
popa
icebp
pop
xor
subb
push
je
addr16
aaa
xchg
inc
xor
mov
shlb
mov
icebp
loopne
push
int
dec
jb
adc
jmp
and
sti
or
xchg
loop
push
nop
mov
cs
pop
es
inc
daa
test
push
mov
leave
mov
lock
aad
cld
lods
mov
xchg
test
mov
imul
in
pop
sub
cmp
pop
sub
pop
cmp
je
push
mov
push
aas
adc
out
fbld
sti
lret
aaa
jecxz
imulb
pop
dec
xchg
lock
jmp
lods
test
mov
aam
repz
aad
testl
inc
ret
jecxz
mov
or
scas
and
sub
xlat
dec
dec
insl
mov
addr16
push
hlt
sub
cli
jp
inc
outsl
or
sub
inc
daa
leave
repz
xchg
xchg
incb
jecxz,pn
fisubrs
and
cmp
mov
fcmovbe
xchg
mov
rol
lock
negl
cmp
aaa
in
lea
aaa
pushf
dec
insl
push
call
insb
cmp
orb
sbb
adc
pop
push
pushf
push
push
in
rcrb
loope
lret
rorb
in
mov
mov
xor
in
fdivrs
or
xchg
addr16
clc
sbb
ret
adc
loop
pop
loopne
punpckhwd
mov
mov
call
lock
shlb
mov
lods
sbb
sbb
mov
fisubrs
jo
xchg
or
jbe
out
mov
cmpsl
rcrb
inc
fs
pop
pop
push
aam
adc
sub
mov
pop
dec
packsswb
scas
call
shl
aaa
insb
xchg
xor
inc
and
call
xchg
insl
ror
mov
pop
fsubs
add
sub
and
sub
mov
mov
je
xchg
push
pop
adc
jecxz
xor
ja
push
sub
repz
inc
dec
xor
jmp
in
mov
and
inc
lret
test
roll
cmp
iret
mov
sbb
xor
lods
xchg
dec
inc
inc
push
pop
xlat
and
fstpt
jb
mov
aas
cmp
sbb
in
push
dec
fsubrl
jo
xchg
ss
test
imul
xlat
pop
jb
xchg
pop
pop
cmp
aad
xchg
ljmp
mov
push
mov
lahf
dec
cmp
cltd
mov
cwtl
addl
push
data16
pop
nop
or
out
cmpsb
push
pushf
xor
lcall
adc
mov
jl
mov
leave
jae
scas
rcrl
rcrb
icebp
push
xor
jbe
xchg
xor
xchg
mov
mov
loope
dec
dec
inc
pop
mov
aam
popa
adc
xchg
mov
jge
icebp
push
adc
into
xchg
xchg
insb
fldenv
adc
jg
lahf
mov
test
xor
cmp
mov
adc
add
mov
fnsave
jb
mov
jecxz
mov
sbb
xor
xor
xor
fsubr
xchg
push
push
pop
int
pusha
fimuls
cmpsb
mov
xchg
pop
push
mov
popa
repz
les
dec
jg
cmp
inc
dec
leave
ljmp
ss
jae
cmp
push
xor
push
dec
jne
or
jnp
fucom
mov
add
dec
pop
pop
movsl
sub
push
push
dec
cwtl
ds
pusha
call
repnz
pop
mov
cmp
lret
xor
nop
orb
pop
mov
sub
inc
sarb
jl
mov
pushf
or
lds
andb
pop
adc
addr16
adc
jae
shl
mov
xlat
jnp
shr
xor
push
xor
or
cs
fbld
movsl
fisubrl
out
rorl
and
and
or
sbb
cmp
lods
mov
sbb
mov
dec
pop
fwait
inc
outsb
rorb
in
xchg
add
loopne,pt
pushf
stos
cmc
xchg
rorb
jmp
pop
xor
cmp
shr
mov
dec
mov
subb
adc
mov
pusha
je
pusha
into
adc
repnz
mov
out
je
mov
push
in
adc
subl
ror
cmc
dec
shrb
loope
pop
lret
mov
aad
or
test
inc
imul
xchg
sbb
mov
insb
dec
jnp
or
cmp
mov
sahf
arpl
sbb
xchg
shrb
cmp
jmp
in
in
inc
insb
dec
xchg
pop
add
push
or
adc
call
adc
in
pushf
and
rorb
push
imul
shlb
xchg
loopne
in
nop
push
pop
enter
xor
add
inc
add
ss
mov
pop
jecxz
in
movsl
xor
push
out
shrl
jmp
xchg
sbb
shr
adc
andl
sub
out
icebp
cmpl
mov
cmp
push
cmp
lock
cmp
jmp
leave
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
xor
add
adc
fs
push
mov
xchg
dec
in
hlt
sub
sbb
or
adc
gs
push
mov
pop
nop
dec
in
in
sub
sbb
or
sbb
mov
cmp
fs
aam
movsb
xchg
cs
xchg
ds
mov
cmp
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fidivrl
lret
push
ljmp
xor
movsb
jp
push
sbb
or
cmp
sub
fidivrl
lret
push
ljmp
pop
stos
sub
dec
scas
jp
push
sbb
sub
fidivrl
lret
push
ljmp
pop
stos
dec
pop
mov
pavgb
mov
inc
mov
cli
dec
subl
fldl
xchg
cmp
insl
lds
and
ss
sbbl
inc
out
push
test
fwait
dec
out
or
and
int3
mov
mov
in
pop
scas
push
out
jno
add
add
mov
cmp
or
pop
bnd
outsb
jecxz
stos
scas
stos
inc
push
fwait
pop
xchg
or
or
ret
into
mov
dec
sarl
pop
add
stos
addl
inc
mov
dec
lods
mov
lds
xor
shlb
in
aam
sbb
jmp
jno
out
pop
mov
sbb
lret
push
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
mov
cmp
sbb
cmp
cmp
into
das
mov
int
pushf
mov
pop
lods
pop
stos
lods
push
mov
insl
cmp
out
pusha
sub
sub
fsubr
fwait
outsl
js
mov
lret
jnp
jbe
dec
mov
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
push
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
stos
push
addr16
leave
dec
mov
ljmp
mov
in
pop
pop
xor
fwait
or
dec
pop
add
mov
movsb
lds
xor
bound
cld
test
inc
inc
jg
adc
dec
mov
pop
scas
pop
mov
dec
jg
mov
mov
sbb
mov
mov
pop
mov
sub
pop
mov
cmp
pop
cmc
xchg
int
push
int3
sbb
test
adc
gs
mov
or
jg
rorb
sub
dec
xor
imul
pop
pop
in
pop
adc
and
lahf
cwtl
xor
mov
push
jl
leave
xchg
loopne
push
ja
std
out
stos
pop
mov
xor
mov
add
leave
addr16
enter
jbe
push
inc
out
xor
les
sbb
iret
add
out
or
inc
sub
jp
xchg
es
dec
stos
in
nop
xchg
aad
icebp
pop
cmp
pop
sbb
pop
sbb
ljmp
add
out
mov
mov
jbe
cmpsb
sbb
and
outsl
lods
xchg
inc
aas
mov
or
sub
jle
sbb
iret
out
test
incl
xchg
testl
cmp
mov
in
das
pusha
mov
and
xorb
sub
inc
fcoms
mov
xchg
mov
push
leave
lret
test
movsl
ret
add
jbe
or
cmpsb
pop
roll
aaa
js
mov
lock
sub
out
mov
mov
ror
movsb
cmpsl
add
leave
adc
roll
cmpsb
negb
cmp
jb
enter
push
sub
ror
inc
xchg
xchg
aaa
xorps
lock
jb
or
sbb
cmp
call
arpl
addr16
mov
add
test
scas
sub
add
sahf
cmp
xchg
ja
xchg
dec
fldt
xor
lods
mov
lahf
int3
adc
lret
cld
jae
data16
push
pop
andb
pop
fwait
mov
imul
pop
cltd
bound
add
bound
push
mov
insb
mov
mov
int3
mov
push
add
sbb
mov
inc
cmp
loope
loope
ret
in
mov
imul
jmp
subl
and
pop
cmp
adc
sub
mov
data16
movl
xor
mov
xor
stos
sahf
jge
or
xor
dec
out
pop
mov
imul
push
insb
into
cmp
sbb
scas
xchg
push
and
loop
outsl
ja
pop
lcall
scas
and
push
in
icebp
bound
lcall
cmpsl
mov
mov
dec
push
jbe
mov
icebp
mul
jbe
pushf
in
mov
nop
and
and
cmp
ljmp
push
call
mov
or
lods
test
mov
adc
xchg
or
inc
sub
lods
stos
ja
out
jmp
adc
inc
cmp
add
gs
inc
mov
lret
out
iret
or
sub
and
dec
pop
inc
lock
cld
rcll
jae
dec
icebp
mov
outsl
dec
fmul
push
cmc
jmp
cmp
ja
jno
jno
adc
popl
sbbl
push
lock
mov
insl
jo
xchg
scas
pusha
inc
inc
fs
cmp
xlat
mov
mov
test
fidivrl
mov
xchg
lods
ljmp
sub
push
push
popa
sarl
out
test
xchg
decb
inc
fildl
cwtl
int3
mov
cwtl
fwait
outsl
test
mov
mov
push
xor
pop
or
aam
jl
push
cmc
lods
adc
mov
adc
mov
mov
in
mov
cmp
and
sbb
jmp
cld
stos
mov
std
mov
mov
movsl
mov
clc
lods
mov
stos
fidivrs
jno
cmc
test
xchg
dec
icebp
mov
cli
adc
cmp
mov
pop
jl
imul
pop
adc
jno
popa
mov
jle
daa
jle
std
int3
jecxz
or
push
fwait
or
data16
cwtl
dec
mov
inc
xchg
enter
inc
lcall
dec
cmpsl
lahf
inc
fsts
out
inc
jae
mov
rorb
cmp
loope
sbb
dec
jecxz
inc
jmp
lea
mov
test
mov
int3
lahf
scas
pop
arpl
out
xchg
fildl
fsubs
push
rclb
cltd
dec
pop
mov
and
cmpsl
addb
sbb
cmp
sbb
cs
stos
and
xor
dec
mov
sbb
jge
mov
mov
pop
jno
rclb
sub
scas
cmpsl
stos
mov
xchg
jp
mov
add
leave
mov
and
pop
cs
pop
xchg
lahf
sbb
test
icebp
sti
mov
int3
jo
in
cmp
sahf
add
repnz
fisttpl
dec
xchg
jl
loop
pusha
push
in
ror
loop
mov
lcall
add
scas
adc
cmp
xchg
sbb
push
lods
mov
clc
dec
mov
sti
push
shrl
out
mov
jae
adc
clc
xor
or
stos
in
pop
mov
push
loopne
sbb
arpl
test
sub
mov
adc
inc
mov
testl
add
push
and
cmp
mov
dec
mov
push
outsl
cmp
enter
pop
shll
std
mov
adc
dec
fimuls
aas
cmpsb
and
pop
pop
push
shlb
xchg
dec
mov
xorb
or
jb
xlat
fimull
outsl
iret
sub
dec
cmp
adc
bnd
or
sbb
js
xor
lock
xor
pusha
push
psrld
xor
or
sbbb
add
pop
pop
in
pop
lds
pusha
cmp
shll
movsb
sub
pop
adc
outsl
icebp
lods
sub
sbb
out
out
scas
lods
mull
ret
jnp
jno
out
adc
mov
ja
imul
inc
add
cmp
cltd
das
jmp
fstpl
push
sub
cmp
or
in
dec
stc
add
dec
pop
xchg
sub
mov
inc
mov
dec
mov
lds
aad
or
and
mov
mov
scas
dec
in
ja
aam
jmp
loopne
ret
imul
lods
inc
je
push
sbb
in
add
and
xchg
xchg
dec
inc
pop
xor
adc
addr16
jmp
rorl
mov
mov
inc
sbb
xchg
xchg
lods
repnz
popa
popa
hlt
cmp
or
jno
ficomps
fcomi
inc
inc
pusha
stos
push
xor
es
dec
or
orb
leave
cmp
ds
cmc
out
je
in
xor
and
xor
sbb
jecxz
pop
adc
pop
sbb
ficompl
mov
xor
lahf
pusha
sub
lahf
or
push
scas
mov
std
jae
sbb
pop
xchg
pop
fisttpll
je
fmuls
inc
mov
push
xchg
mov
lea
aas
cmp
mov
mov
fiadds
stos
jno
mov
aam
xlat
xchg
popf
aas
inc
jmp
adc
sub
fwait
cwtl
rcll
pop
addr16
loopne
pop
mov
ja
lret
in
mov
mov
push
hlt
push
adc
xor
cmp
fwait
xchg
or
jns
aas
mov
les
mov
ja
iret
imul
cltd
out
in
rorb
or
mov
insb
push
incb
mov
sbb
add
ud0
push
and
pop
or
push
mov
imul
jbe
xchg
popf
inc
dec
mov
mov
push
lahf
or
fmuls
adcl
hlt
iret
les
std
push
or
xor
mov
scas
sbb
push
xor
pop
mov
sbb
mov
inc
mov
stos
xchg
stos
sbb
mov
jge
jle
shr
shrb
mov
bound
sub
sbb
mov
cltd
dec
push
sbb
xor
ljmp
or
lea
xor
dec
pop
aad
add
jl
dec
inc
mov
cmp
dec
jbe
jno
enter
or
dec
mov
add
adc
scas
ljmp
rclb
mov
sub
mov
or
add
push
sahf
cld
inc
xchg
dec
lea
das
push
sbb
xchg
enter
xchg
mov
and
popf
adcb
adc
mov
fistl
jmp
ljmp
ja
es
xchg
mov
imul
push
notb
mov
push
mov
cmpsb
xchg
sarl
scas
fnstenv
inc
cmp
push
inc
mov
iret
cli
ljmp
mov
mov
inc
jne
fists
fldenv
adcb
punpckhdq
fisubrs
mov
push
add
and
aaa
pop
pusha
negb
dec
arpl
add
outsb
lock
mov
repnz
jbe
mov
jb
lcall
add
mov
arpl
ja
movsb
xor
xlat
xchg
sbb
sahf
mov
test
add
mov
out
dec
sbbb
into
push
dec
fdivrl
adc
pushf
cmp
pop
adc
mov
mov
data16
sbb
out
jno
mov
rsqrtps
and
sub
cltd
call
loope
xor
dec
ljmp
sti
test
push
xchg
push
lret
xchg
loop
inc
jns
xor
inc
mov
in
and
lret
rolb
arpl
lea
or
add
mov
ds
sti
cs
fwait
jge
cmp
data16
or
inc
adc
add
xchg
es
mov
pop
cmpsb
inc
adc
clc
outsl
add
dec
mov
sahf
mov
imul
xor
cwtl
xchg
mov
in
iret
pop
mov
and
mov
fcmovnb
aas
cmp
and
dec
pop
shll
shlb
sub
mov
dec
mov
sbbl
jmp
mov
dec
mov
mov
daa
stc
ret
test
add
into
mov
in
lret
mov
nop
cmp
xor
xor
sbb
mov
dec
dec
sub
sub
mov
sbbl
jecxz
dec
mov
rorl
fadd
jns
icebp
xchg
mov
sti
add
lods
inc
xchg
insl
pop
sub
push
pop
or
cltd
repz
lods
stos
mov
xor
push
mov
int
in
adc
adc
inc
roll
pop
daa
ds
xchg
xor
inc
lods
jge
faddl
cmp
xchg
out
shrb
mov
ficomps
dec
jg
pop
and
and
repnz
cmpsl
jge
cmc
push
bound
xor
or
je
pop
add
pop
jmp
mov
push
mov
dec
mov
into
out
test
push
dec
imul
adc
xchg
xor
push
xor
fcmovbe
and
shrl
or
scas
xor
push
mov
dec
dec
ljmp
outsb
or
inc
je
aam
dec
test
sbb
dec
inc
int3
movsb
mov
xchg
shl
push
inc
xchg
or
cmp
negb
cmp
or
std
insb
outsl
dec
mov
in
sub
jno
sbb
adc
cmp
mov
cmp
in
xchg
and
xchg
pop
pop
xor
push
out
int3
ficoml
jb
dec
popf
ss
pop
jo
pusha
lock
jbe
int3
insl
dec
jnp
jbe
pop
popf
ljmp
or
das
lds
sbb
push
adc
xor
push
pusha
sub
add
enter
and
xchg
push
xchg
sbb
js
sti
jle
and
int3
ret
inc
aas
andb
movsb
popf
or
cld
sub
add
xchg
add
movsl
out
arpl
push
imulb
aaa
xchg
in
shlb
cmp
enter
dec
mov
mov
ret
adc
mov
and
cmp
add
ss
cmp
add
add
mov
xchg
pop
jmp
fs
or
fildl
sub
adc
sub
xchg
xchg
imul
pop
fldenv
cmpsb
and
and
int
ret
cmp
jmp
lock
add
jae
mov
in
sub
pop
mov
ficompl
out
int
ret
popf
arpl
pusha
xor
insl
xor
sbb
fisubs
mov
push
pushf
pop
push
out
mov
mov
mov
lods
lahf
fisubrl
sti
push
inc
mov
imul
add
jg
sub
jae
shrb
add
imull
sub
mov
sti
or
inc
fiaddl
pop
stos
push
dec
pop
loope
imul
pop
push
adc
cmc
xor
jg
je
fsubrl
cmpsb
ljmp
xchg
push
pop
mov
cmp
push
push
sar
add
lret
sub
jnp
and
fsubrl
aas
in
mov
add
adcb
mov
stos
call
dec
mov
fiaddl
cmc
imul
cmp
jg
sub
or
mov
int
cld
mov
or
inc
xor
in
clc
sbb
fs
jnp
add
and
add
stos
jmp
cltd
cmp
or
pop
add
fwait
out
mov
jecxz
shll
imul
push
aam
adc
gs
sbb
push
test
ljmp
xchg
mov
fsubrl
lcall
inc
mov
jl
jns
pop
ficoms
fcmovnbe
add
add
or
mov
enter
inc
ss
ja
aas
or
mov
mov
mov
arpl
and
lods
popf
cmp
outsl
push
shl
inc
push
add
push
das
shll
fidivrs
xor
sbb
inc
mov
arpl
push
mull
inc
xchg
stc
andl
outsb
gs
pusha
push
and
pop
xor
mov
addb
jmp
fwait
pop
rcr
mov
mulb
mov
adc
and
and
inc
push
add
popa
es
scas
jb
xchg
stos
aam
loopne
jno
pop
or
dec
mov
jne
lahf
rclb
mov
add
xor
dec
jne
fwait
bound
sbb
add
cmp
popa
rolb
leave
andl
divl
fnstenv
sbbl
and
sbb
dec
ds
repz
xlat
movsb
cmpsl
rcr
cmp
lock
cs
jo
xor
sub
aas
and
and
mov
xor
mov
pushf
arpl
cmp
idivb
lahf
rcll
shll
and
popa
xor
cmp
dec
fs
scas
sub
push
xchg
and
out
js
orb
aam
into
cmc
push
xchg
cltd
add
sub
inc
xchg
leave
pop
jge
inc
or
jns
push
and
mov
jnp
mov
test
les
push
dec
ret
xor
popf
mov
adc
stos
mov
pushf
dec
mov
xchg
xchg
in
mov
xchg
pop
mov
fdivrl
and
pop
sbb
repz
mov
adc
mov
ljmp
sub
movsb
lret
daa
loop
fildl
mov
aaa
push
push
cli
sbb
bnd
int3
and
cmp
outsl
jae
mov
adc
repnz
add
test
enter
mov
pop
popf
jecxz
mov
in
clc
jge
mov
xchg
cltd
inc
mov
lret
mov
adc
in
je
gs
dec
fnstenv
dec
movsl
mov
out
rcrb
xchg
in
pop
dec
add
leave
xlat
sbb
movsl
ss
repz
pop
sbb
pop
popa
xor
dec
mov
cmp
lret
sbb
int
inc
cmpsb
sbb
dec
in
fists
shll
les
aaa
xor
mov
sbb
popf
and
xchg
or
push
or
stc
fimull
mov
mov
insl
out
jbe
mov
dec
add
pop
and
dec
mov
fdivp
xchg
stos
loope
dec
mov
mov
daa
xchg
and
imul
cmpsl
push
pop
and
inc
scas
sbb
add
sub
test
into
in
pop
or
js
mov
insl
outsb
out
mov
and
lcall
inc
cli
test
push
mov
mov
int3
dec
add
push
mov
pop
jno
jo
cld
test
je
jecxz
scas
outsb
xchg
fisttpll
pop
fsts
or
jne
pop
dec
adc
enter
push
aad
xor
xchg
xor
jb
aaa
aas
test
out
std
mov
mov
ret
xchg
divb
in
out
cmp
xchg
jno
popf
imul
cli
in
inc
jecxz
inc
xor
imul
cmp
jle
jg
gs
cmp
lds
jbe
push
jle
xlat
stos
roll
out
orl
inc
add
sbb
cmp
std
cltd
lock
xor
movsl
pop
in
cli
ret
inc
rcll
daa
lea
mov
push
nop
orb
repz
jecxz
roll
add
test
ret
cmp
repnz
dec
shlb
xchg
rclb
and
adcl
dec
push
xchg
je
jmp
fbstp
and
int
out
xor
into
pop
and
add
pop
and
test
inc
adc
mov
jno
jmp
repz
ja
loope
mov
or
das
mov
dec
jnp
push
and
rcl
jne
mov
or
not
and
inc
xor
jne
aaa
cmpsb
cld
xlat
shll
ficoms
outsl
fisttpl
dec
jmp
xor
mov
xor
mov
cmpsb
adc
ljmp
add
push
rclb
pop
popa
subb
and
daa
fwait
loopne
fimuls
inc
dec
daa
stc
add
ret
lods
js
aaa
mov
inc
lea
pop
mov
push
jle
sbb
sbbb
adc
jg
and
out
jns
xor
push
bound
jo
dec
adc
jmp
pcmpgtd
mov
mov
jne
inc
loop
out
jne
lea
and
and
cld
pop
cmp
mov
xchg
mov
faddl
fildll
mov
mov
ljmp
cmc
movsb
jecxz
adc
sbb
jne
xor
cmp
or
pop
rol
out
and
mov
and
jp
in
lods
xchg
cmp
in
ficompl
push
mov
icebp
pop
stos
add
xchg
xchg
fld
leave
mov
xchg
fwait
lock
inc
scas
inc
inc
in
or
push
jmp
rorl
inc
cmp
mov
lcall
fstl
and
push
push
stc
or
cmp
jbe
fimull
ret
jl
imul
fnstenv
enter
mov
jle
into
or
stos
pop
addl
sub
adc
je
and
out
icebp
add
mov
push
sub
push
sub
cwtl
xor
mov
test
loope
xlat
add
jne
pop
push
je
roll
jle
push
push
decl
pop
movsl
mov
icebp
pop
push
ret
inc
mov
fst
push
sbb
orb
and
adc
push
pop
pop
sub
sbb
rcll
iret
xchg
popf
adc
daa
cmp
shrb
push
mov
xchg
jbe
repnz
dec
mov
xor
ljmp
stos
ja
lcall
test
inc
testl
lret
scas
ljmp
es
jmp
and
add
pop
mov
dec
xchg
andl
movsl
popf
scas
adc
mov
jle
subb
push
inc
pxor
cmpsb
pxor
aaa
jno
fs
xchg
xor
sbb
mov
out
mov
dec
or
dec
xor
sbb
mov
imul
lods
push
int3
adc
mov
outsl
or
xor
mov
mov
sub
inc
push
inc
inc
stos
or
inc
ja
cmp
adc
lcall
xor
or
xchg
test
cld
ficompl
lahf
pop
mov
cli
aam
cmp
stc
xorl
loop
std
hlt
dec
mov
jae
addr16
scas
mov
shlb
clc
fidivrl
pop
mov
pop
xor
xor
cmp
lahf
jge
push
mov
fdivrs
dec
push
add
icebp
mov
adc
movsl
je
subl
push
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
push
ljmp
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
push
ljmp
pop
stos
dec
pop
mov
imul
fisubrs
into
fidivrl
lret
push
ljmp
pop
sub
rcrb
adcb
and
xor
idiv
out
xlat
ffreep
scas
enter
xchg
ja
addr16
push
pop
inc
das
aaa
aas
mov
mov
jmp
mov
mov
cmpsl
xchg
lahf
xchg
jg
cs
pop
inc
outsl
aaa
aas
daa
andnps
pop
push
testl
cmpsl
xchg
xchg
lahf
xchg
fistps
xor
inc
inc
jb
dec
pop
gs
pop
xor
mov
stos
jo
inc
push
dec
mov
sub
dec
outsl
adc
rol
push
aas
lods
or
sbb
add
pop
cmp
xchg
adc
cltd
lahf
or
rolb
lret
cmova
push
adc
leave
stos
data16
jbe
xlat
lods
imul
jg
pop
xchg
pop
mov
call
xchg
sub
xor
push
mov
cmpsl
jo
lahf
js
lods
jg
lret
test
pop
rcrb
fmuls
call
repnz
push
inc
cmp
aaa
mov
adcb
mov
xor
sbb
imul
adc
into
mov
ds
ret
jo
stos
addr16
add
movb
mov
add
mov
test
dec
mov
cmpsl
xchg
cmp
cmp
inc
addr16
xor
outsb
xchg
cmpsl
scas
rcr
cmpsl
sti
fstps
adc
aas
cmp
pop
push
push
push
adc
mov
xlat
mov
ret
jp
lret
cvtps2pi
dec
ss
sub
push
dec
data16
push
cmpl
mov
xchg
lahf
xchg
jg
dec
push
pop
inc
das
aaa
aas
daa
movhps
pop
out
idiv
out
xlat
ffreep
scas
mov
cmpsl
xchg
lahf
xchg
jg
dec
push
pop
inc
das
aaa
aas
daa
movhps
pop
out
negl
or
jnp
sbb
jmp
mov
sub
je
mov
popa
mov
inc
in
xchg
lcall
out
call
std
cmp
rclb
call
pop
mov
push
jno
andl
or
std
add
pop
inc
xor
dec
mov
pop
in
stos
test
pusha
dec
fs
fidivs
lea
dec
push
jo
test
in
xor
cwtl
scas
push
mov
mov
and
jnp
xchg
sbb
xchg
xchg
pop
and
cltd
aaa
shr
inc
adc
fistpll
xor
cmp
sbb
add
sbb
sbb
lcall
mov
shl
pop
add
sbb
jp
dec
inc
pusha
and
cmpsb
dec
jae
repnz
sub
sbb
cmp
pop
xor
aas
imul
cmp
dec
adc
ljmp
push
aaa
mov
pop
ja
js
dec
fs
and
xchg
cwtl
pop
or
sbb
sbb
lods
mov
xchg
push
adc
cli
jp
lea
outsl
pusha
mov
arpl
js
lret
out
pop
jae
loop
pop
and
mov
movsb
jge
cmpsl
add
daa
xchg
pop
gs
xlat
and
mov
inc
sarb
testb
jecxz
push
push
inc
fdivs
ror
jne
gs
scas
jp
int
aaa
out
jmp
xchg
or
dec
addr16
jg
mov
or
pop
pop
jbe
jl
clc
mov
mov
and
xchg
out
cwtl
jne
jb
imul
cli
mov
lahf
scas
inc
add
push
rcrb
sbb
cmp
orl
les
out
xor
cwtl
mov
loope
imul
push
add
jno
hlt
sbb
scas
cmc
adc
in
hlt
sub
int3
fwait
sbb
xchg
add
stc
jnp
adc
js
pop
std
cwtl
fisttps
ret
adc
loop
cmp
jo
out
aas
add
in
sbb
cmpb
xor
lock
icebp
pop
push
xchg
test
sahf
dec
aaa
jae
shll
add
test
imul
xchg
aam
inc
xor
xchg
mov
lea
jo
fistl
daa
mov
shlb
or
rorb
dec
mov
dec
leave
lea
add
movsl
test
jns
xor
mov
imulb
lea
inc
push
inc
insb
pop
pop
mov
or
ret
in
cld
inc
ss
cwtl
adcl
divb
leave
outsl
mov
ret
sbbb
mov
js
push
lcall
inc
push
mov
pushf
scas
add
loop
rcl
ja
lcall
xor
cmpb
repz
cmp
inc
rcl
cltd
mov
sahf
sti
xchg
into
scas
cmpl
sahf
jmp
xchg
mov
rorl
cs
enter
or
sarb
inc
mov
mov
daa
push
stc
add
or
popf
jg
in
jle
sbbb
xchg
stos
mov
aad
fidivrs
fnstsw
jnp
es
or
es
adc
dec
les
xchg
inc
cmp
in
xchg
add
icebp
or
mov
mov
or
cmp
jle
into
push
push
cbtw
inc
inc
in
popf
mov
sub
lods
mov
jge
jae
push
jae,pt
in
mov
sub
aam
loop
mov
cs
cmp
inc
jle
add
lret
rol
clc
out
jl
push
push
lcall
dec
fsubl
sbbb
rcll
and
mov
lock
divl
div
inc
ret
push
addr16
push
into
jmp
mov
cwtl
xor
mov
mov
test
int
push
enter
fbld
mov
xchg
stos
xor
sti
sbb
int3
arpl
lea
cs
sbb
adc
scas
ret
punpckhbw
xchg
jle
pusha
mov
fldt
jb
aam
fistl
outsl
xchg
inc
sbb
dec
hlt
push
daa
outsb
xchg
dec
jae
sub
cli
xlat
mov
clc
mov
ja
in
xor
je
and
jo
lea
pop
pop
je
push
pushf
scas
xchg
jno
insb
jp
mov
lcall
mov
mov
movsb
in
pop
data16
xchg
inc
mov
jns
mov
sub
mov
call
push
arpl
xchg
popl
fisubs
inc
test
hlt
rclb
mov
cmp
movsl
jmp
inc
outsl
pop
dec
iret
fwait
rorl
xchg
nop
int
and
push
dec
adc
or
fldt
cs
int
dec
mov
push
ljmp
mull
mov
scas
loop
cmp
mov
aad
movsb
mov
xor
xchg
jg
sub
js
mov
pusha
shlb
mov
sbb
mov
addb
in
xor
dec
inc
dec
mov
outsb
mov
daa
into
jbe
movsl
lret
mov
pushf
cmp
pmaxsw
sarb
fs
fcomi
es
call
imul
cmpsb
fadds
clc
jns
ss
inc
jecxz
fisubs
sbb
rorb
jb
js
and
call
lcall
or
in
add
fimull
inc
lock
pushf
ret
inc
sub
jg
mov
push
rcrl
push
cwtl
arpl
push
cs
insl
insl
daa
scas
xchg
stos
cmp
ds
cltd
stos
insb
adcb
pop
repnz
addl
orb
arpl
out
cld
xchg
push
jg
aad
sub
aam
add
cltd
nop
fsubr
add
cmp
pop
mov
push
cld
inc
ds
sub
ficoml
xchg
dec
lds
movb
dec
mov
movsl
mov
inc
xchg
inc
mov
sbb
add
iret
add
push
sbb
xor
lods
sahf
xor
test
xchg
aaa
lahf
jnp
jae
jge
lret
mov
rcrl
pushf
mov
fdivs
leave
cmp
inc
sub
jbe
add
xchg
std
daa
lods
lahf
push
pop
ret
aam
mov
inc
push
adc
mov
push
test
aad
push
sti
mov
ret
scas
jle
pop
mov
dec
add
jns
push
xor
adc
repz
sub
mov
jae
adc
divl
push
mov
test
cmc
inc
jge
ds
aad
rclb
notb
dec
pop
or
mov
into
scas
jle
mov
loop
ror
sbb
inc
and
ret
inc
int
jge
adc
lods
cltd
lods
adc
xchg
or
mov
xchg
or
xlat
jl
inc
out
mov
dec
jb
or
out
aaa
shr
xorb
int3
pcmpgtb
adc
ljmp
push
adc
aad
mov
adc
xor
xchg
nop
int
ljmp
outsl
dec
push
je
add
mov
insl
add
shlb
inc
add
outsb
dec
dec
fiaddl
mov
adc
ss
and
jmp
test
sub
adc
adc
sub
push
jo
std
push
imul
mov
xchg
adc
cwtl
push
aas
dec
sbb
inc
fldl
add
movsl
repz
xchg
or
fisubrs
pop
icebp
es
sub
dec
jmp
lods
ret
test
test
or
mov
nop
inc
test
jne
cmp
sbb
jae
push
mov
push
jno
mov
jno
cmp
jmp
mov
je
idivb
inc
jo
xchg
or
push
clc
out
push
push
mov
or
mov
add
cmp
lods
mov
jbe
fwait
jmp
inc
push
inc
clc
dec
inc
mov
aam
xor
jo
dec
js
insl
hlt
je
repnz
test
jae
jno
adc
jl
addr16
push
shll
sti
lahf
and
sbb
movsb
clc
loopne
push
sub
pop
mov
subb
stc
repz
mov
dec
push
mov
mov
pop
adc
iret
aaa
pop
sub
sbb
xor
adc
popa
pop
int
cmp
adc
push
xchg
xchg
popf
or
insb
push
fstl
mov
xchg
cld
aas
jno
mov
jmp
dec
adc
push
xor
dec
xchg
push
fst
enter
mov
cmpsl
mov
push
inc
les
xchg
xchg
leave
mov
mov
cltd
inc
out
fadds
inc
push
lds
rorb
shlb
fcmovu
xchg
push
push
pop
ss
pop
mov
mov
mov
dec
mov
fisubs
mov
or
dec
mov
pop
inc
pop
aam
fisttps
out
enter
sub
insl
xchg
incl
inc
cs
dec
mov
fisttpl
inc
movsl
mov
cmp
add
test
pop
addl
xor
push
sub
fcmovnu
loope
mov
mov
pop
jge
arpl
mull
mov
and
andps
shrb
inc
hlt
xchg
mov
arpl
adc
cltd
xor
lret
jp
call
sbb
repnz
cmpsb
add
mov
std
cmpsl
mov
sbb
xchg
mov
insl
negb
mov
xchg
daa
push
pop
sbb
pop
ror
pop
push
adc
sti
jge
dec
movsb
lahf
add
hlt
mov
mov
pop
rclb
xor
scas
pop
lret
mov
and
repz
clc
ljmp
mov
faddl
xchg
jg
inc
gs
nop
std
or
mov
inc
xchg
xor
fnsave
push
push
popf
mov
dec
popf
cmp
idivb
inc
addr16
lods
sub
cmp
jnp
dec
push
jl
mov
fsts
in
adc
mov
inc
mov
jge
mov
jl
xor
fisttps
jge
xor
bound
jg
adcl
jle
push
cmp
loope
push
cmp
sahf
out
loopne
cmp
enter
out
ljmp
pop
in
jno
mov
jb
int
scas
je
pop
push
and
push
jae
addr16
push
fs
pop
addb
dec
test
jecxz
fcmovnu
and
sar
out
cmpsl
jmp
cmp
push
push
mov
inc
cmp
insb
mov
add
pop
lea
or
aam
aam
lea
sub
imul
lds
jno
lret
jo
outsb
mov
jp
jecxz
pop
push
sub
mov
pusha
dec
jle
lock
gs
pushf
orl
xor
pop
xor
cwtl
test
lods
sub
lret
jno
dec
std
sbb
out
mov
or
dec
out
insb
sub
rclb
nop
xchg
mov
decl
aam
xchg
insb
adc
aad
inc
aaa
and
xchg
add
pop
jg
cmpsb
cld
jne
lods
adc
outsb
adc
jge
dec
fs
cmp
cltd
nop
mov
adc
popfw
sbb
ficompl
mov
roll
sahf
fiaddl
push
mov
daa
xchg
xor
nop
pop
fstpl
pushl
jle
aaa
fdivs
or
lcall
jmp
dec
jno
xor
ds
icebp
dec
cmpl
xchg
push
xchg
push
mov
mov
xor
mov
mov
notl
aam
push
xchg
push
push
mov
addb
inc
std
add
cmp
in
ljmp
push
sar
pop
jns
inc
mov
repnz
pop
ds
cmp
aad
push
inc
pop
in
ret
xchg
mov
inc
js
fmul
out
jb
shll
xchg
mov
push
clc
imul
inc
lock
jne
outsl
out
outsb
or
inc
inc
mov
adc
dec
lret
out
fs
mov
jno
aam
adc
push
mov
sbb
std
adc
repnz
movsb
push
inc
mov
mov
mov
inc
pop
repnz
int
xchg
jp
pop
leave
popf
lahf
xor
pop
mov
test
and
sub
lods
sahf
xchg
jp
data16
push
cmp
dec
jbe
into
xchg
pop
jg
fildll
inc
loopne
xchg
jo
mov
ss
or
fsts
sub
lods
in
jg
push
orl
sbb
out
or
mov
out
xor
ds
dec
ret
adc
pusha
cmp
stos
pop
daa
imul
mov
push
jnp
mov
adc
test
mov
add
or
inc
and
movsb
fnstenv
cli
xchg
jge
pop
lahf
jecxz
add
inc
addr16
repz
inc
fs
adc
insl
push
sub
pop
sbb
bnd
iret
mov
lahf
adc
xchg
inc
sarb
xor
inc
ss
cmp
lea
dec
push
jle
and
sub
fistpll
inc
push
pop
mov
aam
cmp
ja
adc
in
scas
out
cmp
aad
outsl
pushf
xchg
ret
xchg
jns
sub
jo
aam
arpl
negb
adc
out
pop
ss
pop
orb
enter
scas
rol
sbb
push
jl
icebp
scas
popf
ret
xlat
daa
mov
dec
xchg
jle
repnz
js
mov
and
scas
bound
jo
mov
das
test
movlhps
pop
inc
lods
insl
and
cmpsb
jne
je
mov
and
push
lret
jne
xchg
scas
sub
insl
adc
rcrb
scas
mov
sub
sbb
xor
std
dec
push
or
lock
lea
inc
cmpsl
pusha
loope
jbe
and
cmp
jmp
sbb
cmp
test
pop
cltd
inc
or
cmc
call
xchg
mov
outsl
or
pop
dec
pop
fldt
cmp
adc
imul
mov
mov
add
testb
mov
pop
cwtl
dec
fs
sub
jl
movsb
pop
mov
icebp
movq
inc
mov
cmc
adc
dec
dec
push
notl
lret
jecxz
xor
ss
into
inc
or
sbb
cld
jmp
cli
add
lcall
inc
push
and
push
sbb
or
stos
and
enter
adc
lcall
call
mov
mov
lahf
mov
lret
or
notb
jge
mov
pusha
jle
daa
adc
outsb
push
sub
mov
cs
mov
mov
jae
loopne
lods
pop
inc
fists
inc
sub
inc
pop
xchg
sub
mov
sarb
repnz
stos
imul
mov
xor
ret
call
dec
fcoms
rclb
movsl
dec
sub
daa
xor
testl
sub
adc
mov
mov
jnp
jbe
cld
aam
lret
add
data16
push
and
mov
sub
subb
mov
call
rorl
stos
lea
and
mov
notl
movsl
or
popf
call
add
gs
mov
cld
add
bound
mov
sub
loope
movsb
sbbl
popl
cld
and
fcompl
xor
inc
out
push
and
outsb
mov
stos
adc
ret
mov
out
jo
adcl
mov
daa
mov
int3
inc
inc
mov
jne
jno
jle
rorb
sub
int3
movsl
daa
stos
mov
dec
xor
or
jno
inc
test
and
sbb
pop
aam
cmp
adc
adc
mov
jbe
inc
cmpsb
push
divb
mov
js
mov
ss
xchg
pop
lods
or
repnz
jl
adc
and
lods
adc
inc
cmp
jbe
sbb
xor
xchg
mov
add
push
adc
sub
imul
mov
cli
dec
push
and
daa
je
aam
es
insb
loop
jp
aam
sub
add
mov
test
and
aas
sub
das
insl
mov
adc
repz
cmp
xor
rclb
pop
jo
cwtl
adc
push
ss
cmp
arpl
xor
pop
enter
push
sbb
rorl
decl
cmpsl
shr
push
xor
fmul
jae
dec
lods
xchg
lods
mov
in
mov
cmc
shll
sub
outsb
sub
cmp
out
sbb
dec
bound
cltd
test
xor
mov
jnp
and
faddl
fistl
and
jl
scas
mov
outsl
addl
daa
pop
lods
cmpsl
or
imul
adc
shrb
shll
fs
out
mov
sub
sbb
out
insb
fbld
jae
push
je
scas
and
pop
push
mov
sub
mov
jmp
insb
add
pop
scas
xchg
xor
adc
stos
xor
and
lcall
bswap
xlat
les
mov
push
mov
iret
repz
jecxz
mov
les
iret
sbb
jl
pop
mov
dec
repnz
pop
scas
xchg
mov
jg
xor
ret
fidivrs
out
aaa
fs
sub
lods
icebp
add
outsb
push
mov
scas
jg
movsl
sub
mov
arpl
mov
ret
push
jge
jae
pop
rolb
push
lock
dec
jge
xchg
sbb
punpckldq
ds
or
pop
xchg
or
add
test
dec
clc
and
das
movsb
mov
daa
cmpsb
rcr
cmp
enter
mov
js
subl
out
cli
jae
push
leave
imul
loope
fmul
sbb
jnp
rol
icebp
out
shlb
jmp
sub
aad
add
pop
xchg
push
call
mov
mov
dec
pop
mov
lds
test
jge
imul
into
mov
orb
jp
das
cmpsb
cli
or
pop
push
cmp
inc
pop
push
inc
xchg
jmp
jno
xchg
iret
lods
mov
mov
mul
adc
mov
xor
insl
aaa
xor
lds
stos
mov
xor
mov
in
dec
pop
mov
in
xchg
dec
in
or
or
mov
inc
pop
or
cmp
mov
or
bound
sbb
notb
mov
lds
dec
sub
repz
stos
adc
cmp
shrb
imul
jl
lods
ds
fdivrl
inc
js
shrb
pop
push
xchg
arpl
add
xchg
ljmp
ret
mull
stos
adcb
andl
js
ret
rcl
pushf
lret
dec
add
mov
jb
xor
test
mov
pop
mov
ja
jb
pop
fst
outsl
pushf
aad
add
pushf
sub
xor
mov
xor
sbb
jns
popa
sbbl
cld
and
test
pop
ja
lock
popa
popa
xchg
or
sahf
and
int3
enter
cltd
and
push
mov
add
in
push
notl
fsubr
adc
inc
xchg
pushf
xchg
mov
imulb
lahf
ds
lods
sarb
sub
adc
call
pop
ljmp
inc
and
sarl
adc
nop
xchg
imul
jb
std
dec
adc
in
nop
push
jae
adc
pop
pusha
dec
dec
xor
pop
int
mov
push
push
loope
call
lret
xor
jne
in
cmp
ds
lods
test
loope
das
fucomp
rcrl
mov
jns
ds
push
vxorps
mov
sbb
rclb
or
bound
mov
mov
popf
pop
push
test
mov
inc
cltd
test
mov
pusha
mov
jecxz
or
jbe
sub
sub
inc
jg
ret
lods
xor
and
test
rcrl
lock
push
jle
outsb
aam
pusha
popa
adc
js
sahf
jne
cmp
jmp
jmp
shlb
pop
cld
out
jge
pop
sbb
int
in
or
pop
fimull
enter
rcr
fnstcw
add
int3
movsl
jno
fadd
das
jnp
mov
paddw
mov
ret
cltd
ss
fistl
imul
fs
out
xor
test
repz
adc
fs
pop
dec
mov
int
push
xchg
mov
sti
test
data16
loope
mov
loop
mov
outsl
xchg
int3
inc
xor
je
push
test
insl
jl
std
inc
or
stc
jge
lahf
out
enter
ljmp
mov
push
or
add
jo
push
xchg
andb
lcall
inc
mov
mov
mov
cmc
push
xor
shll
icebp
mov
in
dec
aas
jo
sahf
mov
cwtl
or
fnstenv
cwtl
adc
cltd
outsl
or
pop
sub
leave
insl
call
jle
mov
xlat
ffreep
scas
mov
cmpsl
xchg
lahf
xchg
jg
dec
push
pop
inc
das
aaa
aas
daa
movhps
pop
out
idiv
out
xlat
ffreep
scas
mov
cmpsl
xchg
lahf
xchg
jg
dec
push
pop
inc
das
aaa
aas
daa
movhps
pop
out
test
aas
mov
daa
xchg
pop
xchg
jg
mov
aaa
das
daa
testl
xchg
xlat
inc
scas
mov
cmpsl
xchg
pop
xchg
or
push
pop
xor
mov
lock
mov
and
jno
and
push
mov
sbbb
outsl
aad
sub
scas
adc
and
push
incl
jo
dec
das
nop
aas
orb
pop
mov
dec
lock
loopne
mov
out
pusha
decl
iret
jp
push
das
nop
sbb
arpl
pop
shrb
adc
lock
fildl
arpl
inc
es
je
repz
mov
xchg
fimuls
or
int3
push
cvtdq2ps
roll
adc
lret
xor
mov
lock
lds
sbb
lods
js
pop
mov
shlb
mov
das
xchg
imul
and
cmp
and
daa
scas
adc
and
inc
ljmp
adc
jne
nop
lds
dec
int3
punpckhdq
int
fbstp
mov
pushf
mov
xlat
mov
push
cmp
adc
mov
inc
decl
lock
add
popa
js
iret
shl
data16
lret
repnz
sbb
mov
mov
and
push
incl
jo
repnz
nop
aas
sub
mov
pushf
outsl
in
jg
dec
call
lret
outsl
out
testb
sub
das
rcrl
unpckhps
outsb
xchg
jg
sub
sbb
ljmp
adc
icebp
outsb
cmc
or
lahf
adc
and
mov
dec
mov
jo
pusha
das
nop
aas
orb
pop
mov
dec
lock
loopne
adc
and
push
incl
jo
pusha
das
nop
aas
orb
pop
mov
dec
lock
loopne
adc
into
adc
std
dec
and
sub
fisttps
cli
or
es
ss
jnp
test
enter
xchg
lcall
add
jecxz
or
xchg
leave
pop
sbb
push
dec
lahf
jb
cmp
leave
push
dec
lahf
mov
arpl
loopne
push
cmpb
decl
mov
sahf
or
movsl
mov
outsl
test
mov
jno
jns
push
pop
ja
push
in
jg
fiadds
dec
xchg
je
add
push
dec
add
mov
mov
mov
imul
push
int
popa
test
ret
jl
xchg
or
fwait
xor
fmuls
pop
sub
jne
inc
lret
inc
ja
xchg
xchg
cmpps
icebp
sub
pop
sbb
ja
dec
psrlq
into
push
mov
add
ss
lcall
xchg
jl
push
or
jns
and
pop
shlb
mov
cmpsb
cmp
ret
loop
dec
mov
sbb
xchg
mov
and
or
push
xchg
imul
int3
jb,pt
push
pop
arpl
dec
fidivs
add
push
jmp
scas
int3
add
xchg
and
lcall
mov
out
adc
and
aam
test
lods
adc
adc
dec
or
cli
xchg
loopne
add
add
mov
ljmp
pop
sub
inc
push
lret
jge
pop
dec
sahf
sahf
cmc
add
and
scas
add
jge
pop
and
test
aad
outsl
das
jo
out
je
jle
cmp
fbstp
in
mov
loope
jae
add
cmp
scas
and
dec
scas
stos
cmc
mov
pop
popf
test
int3
pop
mov
lods
imul
leave
roll
imul
in
pop
fcmovbe
inc
inc
inc
dec
mov
jecxz
xor
lods
out
cmp
andb
mov
mov
mov
sahf
jb
outsb
faddl
dec
jb
andl
cmc
push
pushf
test
lods
lahf
das
inc
test
sahf
es
imul
cmp
lret
lcall
fwait
sub
add
loop
pop
aam
test
mov
jg
push
push
gs
push
test
mov
dec
mov
mov
int
into
xchg
and
jns
pop
dec
adc
nop
or
adc
push
sahf
cld
shrb
inc
jo
inc
mov
mov
shrb
ret
sub
jg
and
pop
or
mov
mov
and
das
or
leave
add
int3
fcomps
jge
mov
jnp
mov
cmp
mov
jecxz
jl
add
mov
or
std
in
ja
aaa
pop
push
sbb
mov
js
leave
lock
mov
stc
jae
in
inc
mov
icebp
scas
je
sti
or
dec
dec
out
mov
add
cwtl
adcb
stos
adc
xchg
iret
cltd
in
jnp
repz
popa
push
cltd
adc
push
jge
pop
jg
ret
sahf
mov
mov
hlt
roll
shlb
xchg
enter
xchg
scas
lret
dec
mov
mov
dec
ja
add
adc
movsl
jmp
popf
call
addr16
push
mov
and
lods
mov
outsl
testb
movsb
repnz
hlt
outsb
lods
lds
call
rolb
sub
jmp
xchg
sub
in
std
dec
scas
loope
jecxz
cmpsl
arpl
xchg
out
sarl
mov
std
loope
jnp
ss
push
pop
or
lcall
adc
pop
and
cwtl
add
shlb
pop
bound
sbb
or
fcompl
adc
xor
sbb
xor
pop
ljmp
stos
push
add
sub
lret
xchg
sbb
shl
pushw
stos
push
jbe
push
adc
in
jb
cmp
push
ljmp
inc
mov
push
mov
xchg
and
test
sub
icebp
das
dec
mov
insb
jne
inc
mov
push
adc
movsl
cmovbe
mov
arpl
pop
inc
mov
cmp
cmp
xchg
loope
in
xchg
push
ret
inc
push
mov
mov
fsincos
pushf
jno
push
lcall
pushf
adc
stos
mov
jb
insb
xor
xchg
dec
lds
repz
fsts
mov
xor
adc
cmp
fcompl
lea
and
clc
xchg
loopne
test
daa
mov
push
or
aaa
lret
inc
sub
push
es
inc
fnop
add
out
das
lods
mov
cli
cmp
mov
and
mov
in
aad
cmp
ror
arpl
fnstsw
adc
lods
pop
sub
ds
add
aas
jnp
cltd
and
loop
addb
loope
sbb
and
inc
dec
or
ljmp
movsb
out
dec
sbb
ja
pop
inc
inc
mov
ret
gs
pop
imul
pop
imul
mov
pop
and
filds
je
lock
mov
sub
inc
imul
push
push
loop
test
fnstsw
push
xor
in
stos
fs
cmp
sbbl
sbb
fdivl
imul
movsl
push
sbb
inc
leave
mov
mov
pop
lods
xchg
dec
mov
or
sub
add
pop
and
pop
bound
mov
insb
fistps
fistl
or
pop
pop
pusha
repz
in
jmp
out
inc
loopne
leave
std
jl
cmp
imul
cmp
xor
fwait
jp
dec
hlt
push
cmpb
mov
cmp
push
pop
mov
cld
data16
xchg
cli
stos
bound
and
sub
and
sahf
inc
fisubs
cmp
cmpps
es
cmp
rorl
mov
data16
pop
xchg
mov
enter
sub
setp
sub
icebp
pusha
jle
addl
shr
sub
loope
add
shll
mov
jle
popa
jo
mov
pop
nop
xchg
js
xor
aad
or
fmul
jnp
sbb
icebp
and
jge
pop
clc
cli
inc
jne
cld
mov
xor
popf
mov
stos
jbe
das
cli
dec
rorb
inc
push
stos
inc
shlb
adc
dec
dec
daa
cmp
inc
test
enter
mov
inc
test
push
enter
mov
and
enter
clc
inc
stos
call
jne
and
and
ds
pop
sub
je
insl
enter
adc
divl
or
rcrl
pushl
jb
jmp
mov
mov
dec
xchg
js
hlt
jbe
fdiv
lea
fisubl
lret
sti
xor
in
mov
repnz
lcall
sub
mov
pop
in
pop
jp
add
jbe
cmp
jnp
or
xchg
rcll
sub
mov
xchg
adc
cmp
mulb
rcrb
stos
andl
mov
in
rcrl
pop
fisubl
add
push
jg
xchg
jmp
je
cmp
test
insl
adc
ja
mov
sub
push
clc
aaa
or
add
ficompl
mov
pop
je
jb
adc
xor
loop
imul
fiadds
inc
insb
and
dec
push
sbb
mov
movb
inc
outsl
insb
stos
out
add
in
jmp
xchg
sub
je
lods
fptan
addr16
hlt
pushf
dec
push
ljmp
shll
jnp
fsub
lret
int
fdiv
cs
mov
pushf
repnz
cmp
push
add
scas
aas
les
in
ret
xor
xchg
pusha
and
xor
xor
cmp
stos
cmpb
addl
adc
xlat
clc
mov
push
xor
and
pop
arpl
leave
xchg
mov
dec
je
insl
das
fisttpl
rorl
addr16
movsl
or
xchg
out
lret
ja
sbb
or
mov
cmp
arpl
jmp
or
test
out
bound
pop
arpl
out
insb
dec
rcl
dec
adc
xchg
mov
ljmp
bound
flds
add
push
pop
xor
add
movsl
lea
es
bnd
cmp
xor
xchg
dec
mov
test
inc
dec
fsubrl
inc
inc
fwait
sub
xchg
in
mov
cmp
aaa
rcll
fsubl
mov
jp
rdmsr
mov
add
nop
jne
cltd
imul
popa
pop
enter
stos
add
xchg
inc
add
adc
push
ret
and
xor
sbb
pmaddwd
sbbl
orb
stc
movsb
add
cli
pusha
outsl
out
adc
loopne
jge
sbb
inc
mov
repz
push
xor
ljmp
je
popf
shrb
pop
lahf
loopne
add
insb
xor
orb
xchg
aas
push
outsl
or
fsubl
mov
mov
repnz
xchg
xor
pop
cmp
xor
int3
fcmovbe
inc
push
lods
icebp
fimull
lods
sbb
inc
jl
in
pop
pop
adc
repnz
or
das
dec
pop
pusha
lahf
fwait
mov
inc
daa
cwtl
aam
dec
lahf
cmp
test
lock
repnz
or
jle
fildll
sbb
in
cmp
jp
or
and
cwtl
inc
cmpsl
xchg
cmp
in
push
xchg
dec
push
scas
pop
repz
add
lea
sbb
lods
xor
pop
jae
icebp
mov
xchg
mov
sub
and
aaa
add
xor
add
fcmovnu
and
jbe
cmp
lcall
inc
icebp
std
lea
mov
jge
shlb
push
rorl
jmp
jns
stc
jno
flds
pop
sbb
sbb
pop
call
cwtl
dec
addr16
ds
sbb
aaa
mov
sub
jge
insl
fisubl
adc
pop
jo
fcomp
aad
sbb
imul
mov
and
dec
adc
lods
xchg
movsl
inc
xor
inc
adc
pop
or
push
pop
jbe
ficomps
fwait
lock
xchg
adc
jp
xchg
mov
int3
fs
fistpl
scas
and
inc
jae
bound
xchg
stos
sub
lods
xlat
jp
stos
mov
jle
clc
stc
cltd
mov
inc
mov
gs
aaa
dec
pop
ss
mov
in
clc
in
jo
add
je
subl
mov
xor
rcll
fs
mov
sbb
loope
mov
stc
aad
enter
pop
in
jae
inc
sar
cltd
std
clc
xlat
or
outsl
incl
push
mov
xchg
pop
aas
adc
xchg
mov
rorl
pop
insl
cwtl
rorb
insb
movsb
mov
js
push
fs
add
test
cmp
pop
mov
fistpll
pop
ret
or
adc
out
dec
adc
mov
inc
cmp
bound
mov
cwtl
pop
adc
lahf
jg
out
pop
cmpsl
mov
xor
in
ja
push
xchg
pop
lret
loope
je
push
les
aas
fdivs
movsl
cli
pop
cmp
pushf
cld
xchg
or
rorb
mov
cmp
xchg
cmp
out
cmc
cmp
lahf
mov
pop
mov
xchg
ret
or
mov
testl
addr16
idivl
adc
call
mov
out
xchg
data16
add
push
xchg
mov
xchg
xor
rclb
and
xchg
dec
cwtl
movaps
fistl
push
dec
cli
ljmp
lahf
imul
push
ret
out
mov
pop
iret
lret
sbbb
mov
sbb
mov
cmc
push
mov
fsubr
jbe
sub
shrl
sahf
lods
test
xor
sbb
popf
pop
and
loop
lcall
cli
inc
lahf
sahf
aas
pusha
movsl
icebp
data16
inc
in
pop
clc
aaa
or
loope
mov
xor
ja
out
lahf
notb
adc
xor
or
aaa
jecxz
and
pop
std
test
shlb
mov
cmp
pop
mov
push
push
sub
stc
pop
pop
ret
lock
clc
sub
nop
and
je
imul
les
or
jp
push
sti
cld
sub
daa
je
sbb
jl
jp
hlt
js
movsl
push
cwtl
push
mov
addr16
fstpt
push
sbb
das
fistpll
and
xchg
cwtl
push
orl
fwait
sahf
adcl
les
sbbl
shlb
sbb
std
mov
dec
pushl
bound
jb
lea
sub
sbbb
popa
mov
add
in
out
jne
lret
push
mov
insl
xchg
pop
repnz
into
test
fisttps
mov
push
stos
rclb
in
sbb
or
push
nop
push
push
xchg
test
stc
mov
lods
push
xchg
dec
in
sbb
and
dec
dec
call
push
and
mov
in
jg
lret
add
ss
sbb
into
rolb
fdivl
lcall
jno
repnz
mov
push
push
test
jg
cmp
popf
jg
lahf
fistl
les
add
inc
es
shlb
push
mov
and
ds
arpl
inc
mov
add
dec
dec
movsl
inc
push
inc
sti
shlb
xorb
push
dec
xor
add
lods
cli
push
xor
jge
bswap
je
sbb
leave
rsqrtps
xchg
push
les
rcrb
inc
roll
scas
test
xor
pop
pop
insl
test
out
and
jl
leave
push
nop
int
fsubl
arpl
popa
push
out
ret
outsb
int
jno
enter
adc
scas
and
rclb
aas
add
fwait
mov
xchg
outsb
jle
cmp
mov
es
sub
push
push
imul
dec
dec
jbe
and
xor
dec
arpl
cmpsl
jae
je
imul
xchg
xchg
fdivs
cwtl
inc
xor
dec
add
push
je
bswap
cmpsb
loopne
data16
and
push
inc
popa
shll
bound
push
inc
out
fstl
cmp
push
mov
outsb
sti
jae
push
push
inc
fsts
sub
sbb
ljmp
sub
clc
jns
pop
stc
adc
push
push
leave
cmp
mov
mov
mov
xchg
jae
inc
mov
inc
aam
jae
cltd
pop
and
mov
aad
inc
and
mov
sbb
aas
and
out
xchg
cs
in
mov
inc
inc
push
movsb
mov
xchg
clc
fnstenv
jmp
and
daa
lea
or
add
imul
lret
sbb
popl
int3
fdivrs
stc
mov
out
andb
bnd
loope
adc
push
outsb
push
ret
mov
mov
inc
call
sbb
mov
roll
ljmp
adc
xchg
xchg
lahf
loop
jle
mov
sbb
mov
test
test
jp
pop
aaa
mov
and
mov
insl
popf
or
repnz
incl
clc
adc
jno
sbb
arpl
sbb
dec
xchg
sub
jecxz
sbb
pop
clc
arpl
dec
stos
into
lock
pop
jae
in
sub
push
and
or
xchg
cmp
js
jmp
outsl
xor
or
mov
inc
and
cmp
xchg
xor
clc
ret
cmp
imul
or
je
fwait
lods
lcall
fs
pop
out
scas
xchg
inc
aad
mov
cli
stos
add
outsb
mov
nop
negb
add
out
mov
push
or
ss
ret
jecxz
lea
mov
dec
stc
mov
fnstsw
lds
int3
pop
pop
cmp
gs
jg
fiadds
ja
xchg
or
test
cmpsb
aas
push
jb
pop
pop
xchg
dec
push
jl
not
cs
pop
xchg
cmp
mov
sub
and
int
fidivrs
ljmp
jne
pop
mov
cmpsl
dec
xchg
cwtl
jl
hlt
cmp
and
and
adc
arpl
inc
cmpsl
cmp
data16
mov
jns,pn
push
rep
je
leave
sbb
movsl
dec
pop
ficompl
push
pop
dec
sub
adcl
loope
lds
outsl
hlt
mov
mov
pop
jmp
sbb
or
push
ljmp
xor
xchg
pushf
cmp
xchg
gs
out
aaa
pop
sub
xchg
ffreep
sbb
sbb
mov
aad
push
fwait
dec
mul
fadd
adc
and
scas
xchg
inc
mov
mov
mov
cli
push
dec
cmpsl
scas
aam
cli
sbb
lea
sub
mov
pop
negl
add
cltd
jno
dec
and
lea
inc
mov
sti
loope
xchg
cmpl
inc
out
imul
das
mov
push
and
adc
sub
push
sahf
mov
adc
xchg
and
fbstp
fstps
and
push
dec
dec
dec
stc
mov
enter
jno
xor
xchg
push
idivl
popf
mov
adc
adc
or
xorb
pop
push
iret
imul
scas
das
xor
bsr
stos
test
pop
xchg
jg
sbb
test
jne
out
xchg
pop
lahf
and
inc
fbstp
mov
dec
cmpb
xchg
mov
pop
sbb
or
std
outsl
fsubr
bound
inc
in
mov
and
mov
or
push
mov
scas
push
in
mov
xchg
xor
lea
cmp
jp
out
xchg
lcall
jge
jne
dec
mov
dec
or
popf
adc
xchg
dec
movsb
cmc
jne
mov
sbb
jb
int
pop
jb
sub
rorb
test
or
fld
fsubrl
lods
adc
jle
pushl
lret
mov
std
aam
and
fwait
cmpl
add
adc
cmp
add
into
xchg
filds
sub
sub
jge
mov
mov
xchg
inc
mov
cmpl
cmp
cld
addr16
push
mov
xchg
jmp
out
pop
jns
cwtl
into
ror
pop
lret
aas
bound
out
aas
mov
divb
inc
xor
jno
or
or
out
insl
insb
sbb
and
dec
out
xor
outsl
mov
out
je
jbe
mov
setge
or
movsb
add
sbb
cli
push
les
push
das
daa
push
fstps
mov
mov
xor
add
fsubs
cmp
mov
xor
call
out
sbb
rol
daa
cli
and
mul
ret
jmp
and
pop
mov
sub
fcomi
mov
cmpsl
inc
flds
adc
add
pop
xor
mov
sbb
pop
adc
fwait
or
mov
scas
and
jmp
inc
sbb
ret
or
ljmp
mov
mull
add
dec
inc
test
rcll
xchg
shll
rcr
arpl
lcall
sub
mov
iret
adc
data16
dec
xor
test
es
sbb
in
inc
mov
movsb
or
std
xor
imul
enter
mov
in
rcll
jg
stos
shll
jns
dec
out
adc
call
mov
insb
ds
hlt
add
push
cmp
das
sbb
rcrl
jp
xor
mov
cmp
jae
dec
sbb
fwait
test
pop
in
enter
int
inc
pushf
outsb
loopne
push
or
jo
and
pop
clc
decb
xlat
jle
add
ja
pop
mov
ljmp
xor
xchg
mov
idivl
or
shrl
shl
ljmp
fisubl
call
add
pusha
lods
mov
jb
cltd
fimuls
push
in
repz
nop
push
push
popa
push
jle
add
jmp
cmp
cmp
cld
clc
cmp
outsb
ja
aam
xchg
stos
xlat
mov
and
jb
or
sbb
sub
iret
and
iret
and
jns
inc
fnstcw
cmpsl
mov
sub
pushf
jno
jg
lahf
cld
ds
xchg
inc
mov
js
lahf
repz
mov
and
pop
jb
jle
subl
pushf
mov
xor
xchg
and
xchg
mov
mov
xchg
movsl
mov
or
push
je
daa
shll
clc
movsl
test
xor
mov
mov
inc
mov
xchg
hlt
pusha
pop
popa
push
cmp
movsb
sbb
push
cmp
mov
push
inc
mov
fldt
lahf
and
push
incl
jo
pusha
das
nop
aas
orb
pop
mov
dec
lock
loopne
adc
and
push
incl
jo
pusha
das
nop
aas
orb
pop
mov
dec
lock
loopne
adc
push
movaps
sub
je
pusha
das
xchg
aas
test
mov
test
dec
stc
pop
add
hlt
mov
pusha
out
push
incl
lock
movsl
mov
xlat
pop
test
mov
rcl
cmp
mov
rcrb
lods
push
mov
pop
in
pop
jmp
int
ffree
sub
negl
cmpsl
dec
mov
inc
lods
push
popf
adc
pop
std
daa
lea
ffree
mov
negl
xchg
inc
cmpsl
mov
push
ficoms
pop
out
outsl
mov
pop
fisttpll
js
dec
pop
xchg
imulb
dec
test
dec
and
mov
pop
jo
mov
dec
cmpsb
imul
jp
lods
insb
adc
mov
jns
ljmp
ds
leave
push
aas
sub
cmp
pop
jg
fnstcw
xchg
jmp
inc
and
adc
or
sub
xchg
adc
inc
push
inc
in
ljmp
add
and
mov
cwtl
cmp
pushf
cmp
stos
lods
ja
popf
mov
and
cmp
out
andb
push
pop
or
cmp
test
in
push
add
int
pop
cltd
sub
notl
xchg
jge
xchg
mov
inc
sub
addr16
ja
pop
rcll
daa
int
mov
jg
cmp
jmp
ficoms
ret
cmp
jmp
clc
add
sbb
bound
arpl
insb
xchg
cmp
add
dec
cmpsl
and
jmp
call
inc
mov
lods
aaa
mov
jnp
jp
pop
idivb
or
pop
inc
lods
push
mov
pop
in
pop
std
daa
int
ffree
sub
negl
cmpsl
dec
mov
inc
lods
push
mov
pop
in
pop
std
daa
int
ffree
sub
shll
pop
hlt
cmp
adc
aad
jmp
aaa
mov
scas
mov
adc
rorb
enter
lock
jno
mov
daa
inc
xchg
bound
in
jle
xor
jl
cltd
adc
push
jle
leave
pop
arpl
push
ljmp
and
lods
mov
roll
cltd
mov
pop
adc
add
mov
icebp
sbb
push
leave
and
test
push
mov
cmc
sbb
mov
test
xlat
push
lea
stos
mov
xlat
jge
mov
scas
data16
movsl
insl
push
sub
jmp
test
mov
out
jne
fldenv
loopne
or
call
sbb
lds
gs
scas
out
nop
daa
lock
push
xchg
sub
lods
js
cmpsl
sar
lea
mov
ja
push
add
push
push
xchg
sub
cmc
sbb
inc
clc
fmuls
mov
or
jae
pop
jno
arpl
stos
push
sbb
imul
clc
lds
into
xchg
cli
orl
mov
xor
jle
mov
stos
sub
adc
mov
leave
fisubs
aam
pop
or
in
out
inc
add
jnp
aas
add
cmp
adc
adc
insl
jecxz
xorl
sub
call
aam
adc
mov
cmp
adcb
jg
mov
das
add
lea
pop
jne
repz
pop
sub
inc
sub
leave
or
jge
adc
hlt
insb
push
jge
sahf
xlat
sahf
dec
outsb
mulb
add
shl
inc
xor
inc
stos
mov
out
je
xchg
fdivs
jmp
repnz
push
inc
notl
jo
dec
adc
mov
lods
xor
sbb
mov
xchg
in
js
sub
add
aaa
imul
loope
xor
in
mov
outsb
mov
push
out
scas
sbb
push
mov
das
and
fdivr
fwait
aam
and
push
ja
mov
mov
or
add
cmp
jo
daa
repnz
jp
dec
inc
fists
mov
push
push
mov
sub
push
mov
add
ja
stos
cmp
adc
adc
jg
insb
adc
sbb
push
pop
mov
subl
dec
xlat
push
pop
fdivrp
dec
scas
mov
inc
mov
xchg
fisubrl
add
dec
mov
std
ljmp
ret
in
xchg
push
popf
in
test
aaa
andps
dec
jmp
dec
and
pop
mov
and
add
dec
jg
loop
lcall
movsb
xor
jo
pop
andb
mov
iret
and
incl
sahf
lret
mov
cli
lock
das
lea
daa
lods
xchg
sub
dec
into
inc
cmpsl
push
gs
mov
jge
cmp
ss
add
pop
jge
sub
dec
out
lret
cmp
movsb
ret
push
push
cltd
lahf
aaa
aam
and
add
cmp
rorb
and
fsubrs
cmpb
cmpsl
jg
shlw
test
jne
sbb
jle
pop
lea
add
jle
mov
outsl
orb
cmp
lret
imul
xor
inc
push
imul
adc
push
sub
ss
fwait
jno
add
rorl
adc
jnp
jle
pusha
add
hlt
jg
and
clc
push
lds
testl
sahf
popf
adc
jmp
add
nop
arpl
inc
add
xchg
lret
jmp
lds
inc
mov
mov
cli
xchg
mov
pop
jbe
or
test
movsl
and
test
imul
test
xchg
cmp
je
pop
push
jl
dec
daa
roll
push
adc
nop
fsub
dec
in
adc
adc
jecxz
sub
pop
add
and
and
xor
outsb
or
cmc
pop
inc
mov
insl
push
ljmp
push
adc
jecxz
cmpsb
dec
stos
jecxz
repnz
push
adc
insb
mov
arpl
stc
cmp
jl
addb
cltd
pop
jge
xor
scas
mov
push
sub
adc
adcb
fxch
adc
in
adc
push
jge
out
ror
jge
xchg
fwait
xor
mov
insl
mov
call
xorb
sub
int
sbb
sahf
push
insb
mov
and
xor
adc
sbb
aad
xor
push
and
pop
mov
push
mov
xor
imul
lret
sti
push
pop
dec
sti
mov
outsb
push
xchg
mov
cmc
fwait
rcl
stos
push
in
and
sahf
std
fs
mov
daa
addr16
lea
jne
loop
pop
add
iret
in
arpl
jmp
inc
fstpt
jle
in
in
pop
xchg
mov
aaa
mov
or
dec
shrb
or
push
in
out
imul
scas
mov
add
ficoms
in
fst
ret
mov
jmp
outsb
int3
cli
dec
addr16
scas
mov
int3
push
lock
mov
dec
jecxz
mov
movsl
addr16
mov
mov
mov
push
movsl
cld
arpl
lahf
lret
dec
inc
push
testl
in
and
mov
jno
out
and
inc
sbb
pop
xchg
xor
mov
ret
pusha
lods
ret
into
push
std
jecxz
popa
cmp
cmp
mov
test
sbbl
pop
dec
or
icebp
and
xchg
fs
std
inc
rolb
jle
pop
cwtl
shll
lds
pop
sbb
sbb
sub
rorb
lahf
aam
pushf
add
mov
mov
cmp
push
adc
mov
ljmp
fnsave
and
lds
xchg
dec
mov
ja
add
mov
mov
push
lds
pop
or
jbe
xor
jmp
push
or
jecxz
jb
pop
push
in
add
jbe
sbbl
shlb
mov
jg
cwtl
lock
ret
int3
pop
ljmp
adcb
loope
outsb
movswl
bound
stos
xchg
push
xchg
cli
pop
mov
sarl
mov
pop
xchg
fwait
jno
or
test
mov
cmc
mov
jmp
sbbb
mov
jns
or
push
sub
data16
fisttpll
movsb
lcall
andl
movsl
pushf
fldcw
fstl
adc
stos
mov
inc
imulb
pop
cmp
pop
lods
jg
mov
mov
cmp
fs
xchg
or
loop
jae
repnz
iret
lock
xor
ja
or
pop
aas
and
popa
dec
inc
fwait
cli
aas
sbb
cwtl
data16
xor
adc
inc
imull
js
lock
cli
pop
and
sbb
out
xchg
inc
arpl
pusha
jecxz
or
mov
test
je
cmpsl
jns
fistpll
ror
aad
cld
cmpsl
cmp
push
jmp
xchg
aas
add
divl
cld
xor
pushl
popf
jno
mov
popf
adc
scas
testl
sbb
cmc
inc
imul
fnstsw
pushf
sbb
dec
xchg
inc
cmp
clc
inc
mov
sub
jne
inc
pusha
mov
mov
mov
push
inc
cmp
inc
hlt
mov
loopne
jbe
push
jmp
dec
lahf
cmc
mov
jbe
cld
out
aam
xchg
repnz
push
jmp
clc
mov
push
and
fwait
dec
iret
push
and
cld
dec
jne
aaa
xchg
sub
dec
stc
jmp
ret
imul
jns
test
data16
mov
adc
or
hlt
push
xlat
cltd
das
test
inc
xor
xchg
xor
pop
mov
sub
jo,pn
push
lds
jl
lock
shr
push
sub
cs
adc
mov
mov
and
push
sub
repnz
xor
in
sub
arpl
stos
cmp
sbb
and
stc
jge
jae
jp
pop
stos
push
fwait
sahf
add
cmp
out
jno
lock
test
subb
lea
rol
sti
je
clc
adc
test
push
pop
jae
sbb
pop
push
lds
int3
movsl
mov
cld
xor
scas
fdivp
xor
loope
and
in
pop
loopne
cmpsb
pop
adcl
mov
stos
mov
lods
loop
shrb
call
popf
inc
call
lea
push
push
jge
jno
and
pushf
call
test
aam
cmp
pop
js
pop
mov
mov
cmp
cs
pop
add
mov
jo
xchg
test
inc
testb
sbb
push
movb
adc
andb
push
mov
xchg
sub
popl
leave
mov
mov
sub
popa
out
mov
lock
repz
adc
movsb
mov
std
into
loopne
sub
pusha
sub
nop
stos
out
mov
push
outsl
in
xchg
mov
scas
sahf
push
lock
outsb
lds
leave
mov
fsubl
fwait
xchg
jne
in
addr16
aas
rol
movsl
or
test
mov
and
sbb
pop
test
popa
and
fnsave
mov
lret
test
pop
jbe
pusha
pushf
imul
ds
push
dec
out
js
pop
sub
cs
jnp
mov
stc
lods
and
add
jg
fadd
dec
pop
popa
push
sub
jge
loop
inc
movl
inc
jnp
and
lods
or
loopne
pop
sbb
std
jle
cmp
andl
movsb
jne
or
mov
add
dec
inc
subb
xchg
sarl
and
ret
cli
xor
mov
lcall
adcl
adc
cmpsl
add
mov
jns
nop
std
inc
or
cmp
cmpsl
imul
aaa
mov
dec
xor
nop
jb
repz
fwait
cmp
xlat
mov
mov
stc
adcb
cld
pop
movsl
pop
sub
push
cmpsl
pop
sub
jmp
pminub
pop
shlb
mov
and
lcall
sbb
dec
push
jecxz
out
jl
in
lahf
lock
xor
xor
sbb
arpl
xchg
movsb
push
sbb
sub
push
mov
cmc
mov
aas
dec
loopne
subl
rcl
cmp
dec
mov
sbb
mov
push
or
outsb
jecxz
fisubs
mov
mull
mov
or
je
and
pop
int3
push
dec
lea
xchg
pop
ljmp
bound
cmp
fs
xor
pop
sti
push
ret
jmp
icebp
cs
lret
gs
mov
pop
jl
jl
nop
aas
nop
ret
hlt
in
xchg
pusha
or
stos
movsl
lcall
sbb
out
movsb
ficoml
popf
mov
pop
ret
arpl
fcomip
popf
lahf
adc
filds
mov
adc
cmp
and
push
pop
sub
lods
and
dec
mov
shrl
rol
or
ss
movsl
jne
mov
jnp
icebp
movsl
pusha
jge
push
jle
lods
pusha
lock
popa
lcall
mov
adc
xchg
lods
repz
aas
stos
sub
jmp
lcall
repz
dec
leave
xchg
mov
jb
cmpb
or
fcomip
or
mov
lea
adcb
adc
clc
dec
mov
mov
ss
pop
rcrb
stos
lds
rcrl
cwtl
add
fwait
repz
arpl
push
jmp
lcall
cmp
dec
and
cld
mov
sub
push
loopne
sub
aas
dec
push
fldt
cs
lret
and
pop
or
outsb
mull
cmc
mov
in
jno
leave
stc
push
adc
cmc
jae
std
or
fst
ja
sahf
adc
dec
cmpsb
fdivr
mov
loop
inc
in
ljmp
and
sub
loopne
outsl
sub
mov
pop
pop
decb
xor
into
xchg
adc
insl
fists
xchg
rcr
loopne
repz
or
test
aam
mov
pusha
xor
mov
cmp
and
shlb
mov
mov
push
sbb
outsb
in
jl
arpl
push
mov
dec
and
jle
fadd
pop
outsb
mov
cmc
pop
pop
cmc
pop
pop
inc
rorb
ja
popa
stc
inc
notb
dec
pusha
repz
stos
mov
cld
xor
pushf
and
cmp
loop
jg
outsb
out
adc
and
cmc
mov
push
pop
and
adc
or
pop
int3
scas
adc
mov
in
push
repnz
movsb
push
pop
fildl
dec
repnz
addl
mov
adc
cmp
mov
jns
lock
out
sahf
mov
mov
xchg
outsb
ja
gs
mov
push
sahf
adc
ret
movups
inc
and
in
pop
mov
cmpb
lock
cmp
adc
adc
sub
hlt
mov
xor
jne
imul
cld
mov
mov
fstl
or
sbb
push
jp
xor
xor
dec
call
mov
jae
test
sbb
and
fwait
fs
lahf
mov
and
pushf
xor
xchg
ret
inc
jb
sbb
pushf
or
out
and
lahf
sbb
mov
cmpsb
xor
push
sbb
decb
cmpsl
jnp
out
jo
in
mov
sbb
aam
pop
xor
pop
xor
add
loop
push
negl
in
xor
call
mov
out
imul
add
iret
jb
outsb
imul
ret
and
fsubl
pop
xlat
pop
hlt
or
adc
mov
fldenv
lahf
int
mov
mov
add
cmc
aas
cltd
adc
jbe
mov
stos
dec
mov
sub
ljmp
iret
jecxz
jbe
mov
fcmovb
push
mov
lahf
push
sbb
sbb
pop
mov
mov
or
jp
xchg
xchg
sub
clc
pop
addr16
cmp
adc
sbb
cmpsb
cmp
sbb
add
xchg
or
mov
cmp
add
mov
xor
or
lret
xor
pop
cmp
in
loopne
testl
lahf
inc
fstl
jo
add
mov
push
sbb
cmp
insb
add
fsubrp
push
adc
jmp
sub
inc
xchg
or
push
not
fnstenv
loop
mov
in
cltd
int3
outsl
pop
inc
xor
cmp
xrelease
out
mov
mov
lret
or
fsubrs
lcall
sti
or
mov
mov
xchg
test
int
sti
ljmp
dec
xchg
insl
add
jnp
mov
adc
es
jl
rcll
cltd
adc
jmp
dec
shll
adc
adc
ja
xlat
push
outsb
cld
fwait
pop
ljmp
or
gs
mov
mov
ss
mov
add
mov
rcr
push
xchg
stos
sub
push
aad
lock
into
jle
jmp
mov
pop
jne
out
mov
mov
ret
in
fists
loop
fs
jge
cli
and
xor
sbb
jae
rcr
pop
ds
sub
push
mov
into
or
mov
fs
shr
fisttpl
push
sub
inc
add
sbb
cmp
shrb
sub
xchg
push
imul
cmp
enter
adc
inc
adc
pop
cmpsb
ret
push
dec
fdivp
jne
cmc
pop
cld
sbb
mov
insl
sarl
cmp
push
call
mov
xchg
mov
push
adc
mov
dec
xchg
xor
adcl
mov
call
inc
dec
mov
ret
lods
loop
loope
repz
jbe
pop
xor
adc
insl
add
adc
push
push
sub
jp
idiv
push
data16
push
jg
dec
pusha
jae
insl
cmp
xchg
ljmp
cmp
mov
push
cmp
stos
rorb
mull
sahf
dec
mov
inc
test
sahf
pop
mov
add
lods
xchg
mov
mov
scas
bswap
mov
in
mov
int3
mov
jnp
fmuls
xor
jmp
xor
push
push
jmp
jp
mov
and
inc
mov
repnz
sbb
into
mov
pop
imul
jno
xor
sub
shlb
dec
pop
pop
ficomps
cs
fdivl
test
xlat
push
xor
jo
loop
mov
xor
imul
and
sbb
mov
scas
repz
adc
cmp
int
out
mov
jle
lahf
push
cmpsl
cwtl
mov
loope
sbb
rcrb
out
xchg
xchg
lods
cmpps
pusha
lods
sub
loop
loop
jmp
test
xor
test
xchg
lahf
sahf
stos
dec
iret
inc
imul
out
fsubrs
orb
loopne
add
inc
jnp
stos
xchg
push
negl
pop
mov
out
fdivl
gs
gs
cwtl
push
cmc
jg
je
mov
lock
and
or
xchg
outsb
jecxz
or
test
sbb
out
and
iret
test
push
rcrl
test
dec
and
in
js
pop
call
test
sub
and
jl
cwtl
movsb
pop
data16
popf
mov
mov
icebp
movsb
stos
insl
aaa
shll
mov
mov
jb
arpl
fidivs
stos
xlat
scas
cmpsl
mov
pop
loop
lahf
notl
imul
clc
popf
lret
push
out
push
fisubrs
mov
imul
out
inc
sub
push
pop
xchg
aam
out
cmp
aam
out
add
subb
mov
pop
xchg
ss
push
pop
fisubrl
xchg
xchg
mov
in
mov
rcrb
jnp
sbb
mov
cmp
ret
test
in
test
jnp
call
call
xchg
inc
jno
mov
xor
shll
push
cmc
mov
daa
mov
cmpsl
das
or
movsb
outsl
pop
ficoms
mov
dec
jg
ret
sub
mov
outsl
or
cmp
xchg
jmp
js
pop
int
xchg
lods
jb
imul
pop
dec
jnp
mov
lret
inc
repz
push
aas
in
daa
and
and
or
xchg
pop
lret
xlat
xchg
dec
adc
in
xor
jecxz
cmpl
stc
pop
mov
adc
in
cvtdq2ps
rorl
rorb
jnp
jnp
xchg
add
addr16
mov
faddl
and
cld
dec
jbe
in
repnz
cmp
xchg
inc
imul
icebp
inc
out
sub
loope
sarl
dec
xor
fisttps
mov
ds
dec
sahf
xchg
ds
fidivs
outsl
push
push
cmp
pop
pop
sub
inc
push
call
lds
mov
loopw
add
imul
arpl
pop
fcomi
int3
pop
jmp
cs
repnz
inc
out
mov
pop
das
add
fucomp
ja
fbstp
outsl
movl
cmp
fisubrs
adc
in
gs
push
add
sbb
pop
ljmp
insl
ficoml
jge
cmp
mov
out
lea
ja
sti
mov
cltd
mov
aad
inc
mov
repnz
test
aas
fiaddl
fisttpll
mov
pop
dec
add
out
jbe
jbe
mov
aad
shll
call
bound
rclb
aad
in
stos
loope
mov
pop
dec
decb
mul
add
fsubs
mov
hlt
jb
fstpl
inc
testl
in
loop
movsb
lock
popa
loope
pop
cwtl
or
push
popf
cmp
sub
jg
sbb
jae
sbb
jne
sahf
push
xlat
mov
cmp
cmc
and
push
pop
add
mov
stos
xchg
add
dec
cld
enter
mov
push
jno
sub
xlat
pop
xor
sti
jmp
pop
or
out
data16
ljmp
dec
outsb
sahf
jge
xchg
push
loopne
scas
fsub
pop
ds
rcrl
pop
inc
sbb
mov
sbb
mov
out
mov
lahf
ds
inc
dec
xchg
cmp
xor
or
push
push
and
mov
imul
xchg
mov
mov
ficoms
lcall
sub
inc
movsl
mov
mov
add
fs
dec
fstpl
push
adc
sub
hlt
popa
negl
cmpsl
dec
mov
inc
lods
push
mov
pop
in
pop
std
daa
int
ffree
sub
negl
cmpsl
dec
mov
inc
lods
push
mov
pop
in
pop
std
daa
int
ffree
sub
negl
cmpsl
dec
mov
inc
jne
mov
pop
in
pop
std
daa
in
aaa
ffree
sub
negl
insl
xchg
jge
int
pop
inc
push
push
pop
int
ja
jo
lahf
add
xor
and
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
aaa
lret
pop
sti
pop
jmp
xlat
push
call
cmpsl
adc
xchg
imul
testb
cmp
sub
lret
push
sti
pop
jmp
fwait
ja
inc
mov
mov
out
xchg
imul
testl
daa
lret
pop
sti
pop
jmp
fwait
ja
inc
mov
mov
out
repnz
mov
orb
jmp
mov
and
mov
adc
pop
arpl
nop
mov
je
mov
outsb
data16
js
int
and
fisubrs
bndldx
or
iret
cmp
jp
or
std
or
dec
and
cmpsl
or
push
or
xchg
loopne
aaa
out
daa
sar
mov
cmpsl
rcll
mov
jno
xchg
jg
pop
sbb
fisubrl
add
adc
inc
rcll
iret
movsb
ret
test
or
sub
fistps
inc
jmp
stos
xchg
xchg
out
pop
dec
popa
sbb
sbbl
xchg
sbb
pop
cmp
js,pt
aaa
lret
pop
sti
pop
jmp
fwait
ja
inc
mov
mov
xchg
imul
testl
push
fbstp
imul
jmp
adc
add
xor
iret
and
pop
xchg
pop
mov
gs
je
jae
pop
jmp
notl
movl
fidivl
ljmp
repnz
lods
jne
or
lahf
sbb
es
mov
push
stos
cmpsl
pop
mov
xchg
imul
testl
daa
lret
pop
sti
pop
jmp
fwait
ja
inc
mov
mov
xchg
imul
testl
daa
mov
adc
jl
xor
mov
rolb
lret
lds
cmpsl
mul
cmc
mov
sarb
lret
add
aaa
xchg
adc
cmp
xchg
pop
movsl
lss
aas
xchg
es
aam
mov
pop
das
arpl
nop
jo
jmp
and
jbe
in
push
push
fdivs
push
and
xor
sub
in
and
test
adc
adc
pop
repnz
pop
xchg
cmpsl
movsl
shrb
jle
out
outsl
cmpsb
cmp
scas
cli
and
and
insl
loope
mov
dec
push
mov
sbb
std
inc
outsb
je
dec
adc
xor
xorb
dec
push
incl
cmpsb
mov
cld
lods
sub
cmp
sub
cmp
sbb
ja
rcl
pusha
jl
sbb
push
push
or
or
sbb
push
dec
fldl
icebp
call
mov
adc
push
jecxz
push
cli
scas
lods
fimull
data16
jo
sbb
jno
loopne
push
jo,pt
repz
stc
loope
dec
mov
inc
inc
in
mov
mov
data16
jg
jge
push
adc
scas
lret
xor
inc
xor
dec
xor
adc
jecxz
gs
and
movntq
fsubl
jmp
sbb
push
xchg
fsubl
mov
sub
pop
in
aam
ret
into
int
xlat
add
cwtl
jne
fwait
xor
pop
arpl
out
cltd
imul
add
aad
insb
inc
sbb
jno
ret
test
or
scas
mov
xchg
sbb
in
push
cli
xchg
xchg
lret
mov
or
mov
push
xor
in
mov
icebp
push
xchg
push
and
mov
inc
call
pop
data16
lods
sub
stos
push
pop
and
pop
fidivrs
inc
dec
xlat
js
xor
mov
sub
in
andb
stos
imul
sti
sbb
popa
pop
fsubrp
and
fbstp
fcoms
lcall
fsubl
pop
test
cmp
aad
es
adcb
pop
mov
jnp
sub
jb
call
pop
scas
adc
aas
dec
jecxz
addb
ss
rclb
xor
cmpsb
adc
lret
push
or
mov
enter
push
in
sbbl
inc
cmc
sbb
push
xor
mov
mov
mov
xchg
adc
xor
cmp
dec
push
jecxz
loopne
sub
xchg
cmpsb
jmp
scas
rcll
xchg
dec
sbb
leave
mov
jg
out
push
xor
sub
mov
xchg
and
fmull
mov
pop
pop
shrl
loop
lds
inc
out
cmc
inc
push
into
jo
jmp
dec
sahf
inc
jno
xchg
and
rorb
aad
insl
stos
pusha
xor
das
out
pop
popf
sbb
jp
adc
push
pop
jnp
xor
out
sbb
in
cmp
imul
xchg
cs
ret
push
xor
xor
ds
mov
popf
adc
mov
cmp
rcr
cltd
and
mov
test
mov
inc
pop
nop
int3
cmp
sbb
dec
insl
and
cltd
adc
push
xor
mov
inc
imul
stos
lock
aaa
pop
fs
xchg
and
nop
iret
lods
aad
stc
inc
sub
jae
insl
movsl
fadds
scas
jp
sti
mov
dec
add
and
dec
ljmp
sub
aad
push
jae
div
insb
ret
dec
ja
pop
jecxz
dec
mov
and
sub
lock
xorl
push
xchg
inc
dec
mov
adc
sahf
xlat
pop
nop
dec
fsubrl
cwtl
adcb
rorb
xchg
icebp
outsl
xchg
mov
rep
sub
insb
and
or
mov
in
outsl
xchg
ljmp
movsb
insl
sbb
fsubr
test
adc
sbb
cmp
insl
pop
ja
lret
adc
pop
arpl
sbb
push
stc
cld
pop
xorl
sarl
mov
loopne
imul
in
add
cmpsb
call
xor
push
int
jnp
leave
rcrl
mov
mul
adcl
cs
mov
pop
jne
int
lea
test
movsb
add
and
cwtl
jne
push
ljmp
and
filds
mov
adc
lcall
pop
jno
filds
pop
lds
jge
mov
bound
or
popa
lahf
gs
fisttpl
pop
pusha
mov
dec
popf
inc
mov
stos
cmp
add
lret
xchg
stc
xchg
or
mov
xchg
sub
xor
mov
pop
and
aam
add
push
shl
fimull
jb
fcompl
shrb
push
dec
adc
jae
xchg
xor
and
cmpsl
sbb
add
cmp
inc
adc
out
leave
dec
fdivrl
gs
fiaddl
cmc
fs
jl
ljmp
lret
pop
jae
and
shlb
cmp
inc
into
repnz
lods
jnp
xchg
icebp
push
out
and
cmpsb
in
mov
jmp
mov
push
push
rcrl
mov
mull
mov
aas
clc
and
in
repnz
pop
inc
cmc
sbb
mov
jb
adc
cmp
fiadds
imul
mov
jae
lahf
rcrl
add
or
in
push
inc
pop
xchg
push
lock
loope
rol
and
or
fs
imul
fsubrs
scas
vpcomd
cwtl
jne
aaa
out
cwtl
sti
sbb
and
cli
inc
enter
pop
jnp
and
arpl
or
mov
dec
push
cltd
mov
fists
rol
fbstp
adc
call
popf
out
mov
cmc
sub
mov
daa
and
jp
stos
xor
std
das
in
push
xchg
cmp
adc
mov
lar
rolb
adc
cli
mov
jge
and
mov
out
rcrl
shll
push
ljmp
xchg
popf
mov
xor
ds
idivl
inc
imul
or
cmpsb
inc
repz
xor
nop
mov
fst
xor
xchg
cmp
push
bound
sbb
aam
pop
lods
cmpsb
adc
sub
or
and
inc
hlt
insl
mov
cmp
cmc
sbb
mov
mov
or
xor
jo
mov
dec
outsl
mov
mov
sub
fisttpll
cld
fsubrs
outsb
imul
cmp
mov
cmc
dec
scas
js
std
dec
enter
shlb
xchg
into
loopne
xor
shll
mov
pop
adc
ja
mov
and
cltd
loopne
es
loopne
movsb
frstor
inc
cmp
lahf
xor
add
leave
sbbl
or
or
fucomi
jo
dec
jno
icebp
in
shrb
cmp
cli
hlt
imul
mov
mov
sbb
int
dec
sbb
cmp
push
sbb
mov
ret
cmp
pop
cs
aaa
inc
nop
jns
lret
mov
or
pushf
mov
cmp
ja
pop
push
lret
jae
add
mov
xchg
pusha
adc
dec
es
inc
inc
xchg
ja
divb
shll
mov
call
xchg
and
dec
popa
pop
sbb
cmc
and
outsl
and
push
sahf
jns
inc
lret
test
out
les
test
mov
sar
test
jmp
cwtl
arpl
aas
xchg
stc
nop
ss
jbe
sub
jle
rorl
mov
mov
mov
adc
cmp
movsb
inc
xchg
arpl
lock
dec
out
ljmp
adc
leave
ret
and
mov
adc
mov
mov
fimuls
sub
xor
lods
adc
xchg
and
add
jl
pushf
stc
sti
push
jne
call
xor
xchg
cmp
iret
fucom
imul
repnz
cmp
mov
stc
cmp
movsb
sub
sbb
xchg
sub
je
xor
xchg
jne
or
mov
pop
sbb
rcr
out
mov
fdivs
lock
arpl
in
shll
add
jae
jmp
inc
add
mov
in
fiaddl
mov
into
leave
adc
add
mov
push
sbb
cmp
icebp
ficomps
pop
sub
jg
in
xchg
pop
ja
pop
cmp
shll
insb
xor
push
push
or
cmp
inc
sarb
aam
mov
or
popa
dec
iret
sar
ret
jmp
in
repz
and
jo
jp
fisttpll
mov
or
incb
mov
lods
add
lcall
dec
xor
xor
insb
out
pop
lods
ss
cmp
and
jmp
xchg
ret
pop
or
sbb
jb
loopne
sbb
mov
jl
aad
movsb
add
mov
jo
call
ds
enter
cwtl
inc
ret
cmp
movsb
ja
fwait
push
andb
xchg
cwtl
xor
push
aad
imul
clc
insl
inc
adc
into
out
mov
xchg
lea
adc
mov
mov
inc
mov
divb
pop
test
loope
repnz
ficoml
mov
lret
adc
fwait
mov
cltd
cli
lods
subl
insb
repnz
pop
pop
mov
ret
mov
push
sbb
xlat
stos
iret
aam
into
rorb
lods
icebp
nop
and
and
mov
jge
gs
gs
in
fwait
sti
jb
push
xchg
mov
adc
jns
mov
pop
sbb
fsts
adc
fisubs
mov
sub
jg
sub
adc
rolb
repz
mov
inc
cltd
sbb
and
xchg
adc
pop
push
popa
movsb
fistps
mov
lods
or
ret
dec
insl
sbb
and
xchg
xchg
and
or
lds
into
mov
jecxz
in
push
add
xchg
mov
mov
sub
sbb
sti
or
enter
sub
std
xor
lcall
cli
cmp
sub
inc
sbb
and
xchg
mov
fnstenv
mov
and
pop
mov
cmp
pop
outsl
pop
stos
xlat
jbe
jecxz
roll
xor
jp
adc
pop
cmp
rol
jno
loopne
lret
cmpsl
lock
sbb
pop
setbe
out
push
ljmp
nop
cmpsb
out
jge
adc
icebp
repz
add
movsb
jg
in
divl
jp
std
adc
inc
sbbb
sub
cmp
lods
pop
inc
fcoml
inc
mov
xchg
xor
lock
fadd
sub
mov
xchg
push
and
inc
or
fsubr
jne
push
fucom
and
in
in
xor
sar
adc
push
enter
sahf
pop
clc
pop
pop
aas
aam
adc
xchg
arpl
jg
cld
das
sub
lods
insb
cmp
push
loopne
and
dec
and
inc
mov
jg
mov
sbb
inc
movsb
mov
inc
int
je
pusha
lret
xchg
cmp
mov
sub
lahf
outsl
std
mov
adc
orl
fldt
pop
mov
mov
inc
push
fstpt
ljmp
imul
mov
xchg
mov
imul
clc
frstor
outsl
in
mov
dec
sub
inc
out
lds
lods
fsub
shlb
fsubrs
jp
xchg
out
push
or
sti
add
sub
mov
insl
xchg
pop
pop
pusha
popf
cmp
sub
int
insb
out
scas
jne
pusha
je
jg
push
push
xor
adc
push
in
dec
jae
movsl
sub
mov
xchg
sbb
test
mov
dec
inc
imul
mov
inc
pop
movsb
std
sbb
addr16
into
or
xor
imull
cmp
sti
add
dec
xchg
int
sti
lcall
sbb
mov
in
cmc
adcl
ret
xor
das
lods
push
bound
adc
outsl
push
add
inc
imul
into
mov
pop
push
or
call
lds
cmp
sbb
addb
mov
dec
sbb
fmuls
lret
adc
mov
cmp
xchg
add
pop
adc
jns
pop
hlt
push
mov
mov
dec
ret
cmc
into
mov
xor
add
xchg
fsts
sbb
sub
xor
cmp
dec
inc
sub
in
outsl
mov
rcrb
inc
pop
jne,pn
jno
cmp
pop
push
sub
mov
pop
adc
mov
inc
andl
cmp
push
pusha
lea
sub
push
pop
ds
xor
out
jns
jl,pt
add
loope
rorl
push
clc
mov
icebp
add
insb
push
fwait
pop
out
aaa
mov
mov
jo
xor
aas
sub
lods
dec
push
dec
add
loopne
pop
out
rcrl
or
adc
in
testb
ret
pop
bound
sub
jge
sbb
inc
test
xchg
div
cmp
xor
mov
fstp
lock
cmp
aaa
test
ja
sbb
sub
and
add
pop
push
hlt
loop
and
push
fsubs
arpl
pop
cwtl
test
xor
sbb
and
lods
mov
sbb
cmp
cmp
jnp
ror
mov
cld
ljmp
mov
push
jecxz
or
test
ss
es
jle
popa
push
cmc
ffree
movsl
push
push
dec
jae
pop
aad
dec
push
negb
movsb
pop
inc
dec
movsb
pop
push
jg
mov
cmp
cmpsb
frstpm(287
adc
repz
test
test
pop
dec
fcompl
push
xor
in
stos
xlat
inc
sub
aas
mov
adc
or
nop
and
xchg
cmp
dec
jg
fcomi
add
adc
ret
mov
push
bound
pushf
pop
jns
or
loop
xchg
movsl
sub
pop
mov
js
mov
rcl
cmp
lea
flds
add
jb
nop
or
aaa
in
jns
cmpb
jb
mov
mov
cmpsl
test
xchg
jl
adc
inc
or
pop
cwtl
fidivl
mov
mov
or
push
pcmpeqb
cmpsl
int3
pop
push
and
jle
pop
fdivrl
out
test
and
pop
mov
arpl
mov
in
xchg
scas
push
insb
ss
lret
scas
movsb
dec
xorb
imul
mov
pop
jo
mov
xor
call
dec
cs
mov
sub
repz
fisubrs
fldcw
outsl
adc
mov
repnz
push
pusha
or
cmp
aam
adc
or
add
mov
test
mov
lret
les
push
pushf
sbb
std
xchg
dec
and
push
movsl
xor
mov
jmp
mov
sar
jmp
fs
fdivl
lret
ret
pop
push
das
ret
test
xchg
ss
push
aas
xor
xor
inc
lcall
fnsave
xlat
pop
test
add
mov
cmp
arpl
sub
lcall
cs
sub
sub
aad
or
shlb
sub
scas
clc
sbb
fdivrl
jg
pop
mov
fldpi
mov
mov
jmp
push
cmp
je
mov
mov
ja
push
cwtl
cmp
popa
mull
fs
shll
sub
test
sub
movd
stc
xchg
jle
xchg
jne
xchg
shlb
aam
lea
sub
push
js
xchg
mov
jno
das
mov
popa
mov
mov
dec
aam
ljmp
hlt
jb
sub
dec
stos
pop
push
push
movsb
rcll
push
pop
addr16
sbb
adc
lea
std
sbb
cmpsb
in
push
popf
mov
fnstenv
sbb
push
cmpsl
jge
out
cmpsl
lds
rorb
sbb
cmpsl
mov
cld
add
push
fs
sbb
mov
sub
cmp
mov
jns
out
push
fcmovb
test
outsl
es
mov
cmp
stos
nop
mov
mov
xchg
and
mov
in
sahf
dec
popf
mov
loope
adc
std
mov
pop
cmp
sub
add
mov
pop
push
js
shll
mov
sbb
jne
add
ja
mov
arpl
dec
sar
cmp
aad
lahf
push
dec
xchg
inc
nop
sub
pop
int
sub
outsl
xchg
in
mov
rcl
pop
pop
fidivl
out
pop
insl
sbb
sub
jle
xchg
imul
jecxz
cmpl
sbbl
loope
sub
icebp
lcall
push
or
mov
out
shll
out
popa
shr
clc
sub
mov
xchg
loopne
outsl
test
mov
imul
dec
and
std
sbb
jnp
push
lods
ja
and
mov
xchg
pop
js
adcb
lcall
enter
adc
cli
push
scas
adc
and
aad
dec
popa
cmp
mov
cmp
sbb
imulb
das
dec
sbbl
es
scas
lock
mov
xchg
mov
adc
addb
jge
fstps
xchg
or
jns
dec
sbb
xlat
add
cld
pop
xor
xchg
xchg
lods
cmpsb
scas
jns
fnstsw
xchg
shr
xor
test
andb
scas
cmpsb
jp
movsl
xchg
stos
push
push
adc
dec
mov
sbb
pushf
sbb
shlb
sub
fwait
inc
pop
loop
out
or
jmp
stos
sub
inc
movsl
push
sub
inc
xchg
mov
push
ljmp
fadds
xchg
jge
mov
js
or
insb
test
adc
enter
mov
movsb
sub
cmpsb
sbb
lea
push
xchg
lds
mov
inc
pop
adc
xor
push
in
test
sub
mov
cltd
pop
fldl
and
jmp
cmp
mov
sahf
jmp
xchg
jl
mov
or
mov
push
and
test
ret
xor
jne
xor
pop
cmp
push
fidivl
in
jne
fnstenv
insl
xchg
sbbl
inc
daa
jno
inc
xlat
sbb
imul
sub
test
jp
cmp
out
mov
cmpsl
or
mov
pop
xchg
adc
xchg
call
xchg
dec
ljmp
cs
cmpsb
jnp
loopne
mov
int
addr16
push
xor
jb
das
cld
addr16
out
out
mov
lcall
and
fs
fstpt
stos
inc
arpl
in
mov
shr
ljmp
add
inc
pop
jo
add
loopne
xor
scas
lea
and
fcoml
add
fsub
outsb
les
mov
push
lods
in
cld
push
out
jnp
pop
push
xchg
or
pop
fidivl
xor
or
adc
pop
or
and
cmpl
pop
mov
push
jo
jne
jbe
xor
dec
into
and
sarl
cmp
stos
ja
and
popf
jle
jb
dec
and
adc
pusha
jb
push
das
push
loopne
xchg
std
fld
leave
inc
test
xchg
xor
in
inc
int
jno
lret
jmp
mov
inc
das
popa
pop
and
sbb
sbb
xchg
xor
pop
fwait
mov
pop
and
pop
cmp
cld
addr16
dec
mov
test
pop
into
cmc
in
dec
fists
xchg
push
jl
aad
dec
fs
ds
out
mov
inc
adc
mov
add
fildll
jg
mov
cmc
inc
repnz
dec
adc
movsb
imul
mov
and
popa
push
mov
or
mov
js
mov
leave
test
lret
pop
add
sub
outsb
je
das
sbb
pusha
mov
stos
inc
fimull
mov
add
add
hlt
mov
cltd
pop
je
mov
adc
cs
xor
test
add
inc
repz
xchg
jmp
cld
mov
data16
test
sbb
mov
jmp
int
jnp
imul
jno
out
xchg
push
test
lds
lods
mov
mov
mov
mov
test
add
pop
ds
xchg
inc
std
jb
mov
stos
mov
mov
dec
pop
mov
int
lea
mov
inc
jmp
xchg
mov
lods
sbb
decl
jns
dec
stc
add
dec
pop
or
jmp
fwait
ja
inc
mov
mov
xchg
imul
testl
daa
lret
pop
sti
pop
jmp
fwait
ja
inc
mov
mov
xchg
imul
testl
daa
lret
pop
sti
pop
jmp
fwait
ja
inc
mov
mov
xchg
imul
testl
lret
push
sti
pop
jmp
fwait
ja
inc
mov
mov
sub
xchg
jg
cmp
sub
and
imul
jmp
sti
and
pop
idivb
ret
mov
jg
imul
mov
insb
lret
imul
jmp
sti
cmp
or
icebp
inc
jmp
mov
jns
sbb
shlb
inc
repz
jecxz
xchg
xor
sti
dec
loopne
mov
mov
outsl
call
xchg
pop
mov
pop
sub
push
add
daa
js
repz
nop
xchg
aam
inc
jnp
out
pop
loop
stos
cld
sti
aam
jmp
ret
mov
movsl
and
movb
push
ret
notb
mov
fmuls
mov
cwtl
adc
stc
dec
adc
mov
xor
inc
scas
out
mov
stos
xchg
jnp
mov
mov
mov
fisttps
ds
stos
andl
aaa
clc
sahf
fcmovnbe
bound
fwait
dec
xchg
and
adc
imul
or
adc
into
xchg
lret
ret
stos
or
js
mov
adc
jno
add
jmp
and
and
lret
and
cmp
pop
repnz
sti
sub
adc
ret
jb
bound
xor
test
pop
mov
sbb
data16
outsl
movsl
push
xlat
outsb
iret
sbb
inc
out
push
jnp
imul
mov
ja
dec
mov
aas
jmp
sahf
push
mov
sbb
dec
mov
lret
pop
fstpt
dec
mov
sbb
jmp
fldt
jnp
or
cmp
imul
jmp
sti
cmp
or
fldt
jnp
or
cmp
test
add
adc
pop
add
aad
cwtl
cmpsl
and
cli
sbb
xchg
data16
xchg
pusha
sbb
ja
mov
jno
sbb
arpl
leave
aaa
inc
aas
inc
mov
out
jns
or
add
mov
xchg
jns
popa
stos
pop
repz
mov
mov
dec
fadd
jne
and
xchg
push
inc
or
faddp
push
cmp
mov
es
jmp
push
push
push
xchg
inc
push
pop
and
mov
fsub
xor
iret
lds
sub
adc
cmp
nop
push
pop
jg
mov
push
mov
mov
jno
test
fucom
nop
int
push
pusha
ja
pop
fs
dec
std
pop
push
imul
lret
push
outsl
adc
add
sub
test
sub
pmaxsw
leave
push
cmp
repnz
jg
pop
mov
xor
add
icebp
jle
js
cmp
mov
data16
pop
jmp
sbb
mov
popa
mov
mov
xlat
in
mov
lret
add
pop
fwait
dec
jmp
add
popa
push
lods
or
insb
mov
add
mov
loopne
mov
pop
addr16
mov
xlat
loope
js
clc
movsl
add
gs
insl
jge
outsb
adc
xor
xchg
sti
test
and
push
rcll
mov
xchg
mov
mov
fs
movsb
mov
xchg
pop
into
test
pop
insl
adc
push
inc
test
aas
adc
mov
adc
mov
aas
ja
push
or
mov
punpcklbw
shl
int3
inc
xor
pop
outsb
testb
pusha
inc
and
lret
jns
lret
push
push
sub
addr16
adc
mov
loop
jp
dec
jb
sub
dec
and
mov
sbb
es
cmp
rorb
lcall
xor
arpl
cmp
out
mov
insb
mov
add
sbb
pop
jno
xchg
je
push
aam
xor
mov
and
inc
lcall
lahf
jae
inc
adc
dec
fisttpl
pop
je
les
insb
jge
shll
mov
push
lcall
add
push
mov
cmpsb
xor
cld
cwtl
insl
and
pop
cmp
mov
fstps
jb
repz
aad
and
push
jmp
sahf
or
jo
add
or
daa
outsl
clc
mov
ret
pop
add
sarl
in
sub
test
jbe
mov
and
pop
add
je
loop
dec
cli
popa
adc
inc
mov
cs
jns
inc
in
add
xchg
dec
shll
sub
mov
lcall
fldcw
xchg
jge
sub
mov
sbb
or
push
and
jmp
and
xlat
dec
int3
aaa
inc
push
mov
mov
add
push
sub
and
lahf
mov
jbe
jns
mov
ffreep
fwait
das
mov
jae
scas
enter
sbb
imulb
addr16
and
sbb
xor
hlt
stos
xor
fcomip
test
sub
out
or
dec
lcall
cmpsl
outsb
sub
lret
loopne
jge
imull
in
adc
outsb
sahf
add
push
roll
adc
inc
cmp
jge
mov
lods
iret
lods
fs
add
pop
cmp
ror
add
cmpsl
mov
stos
jne
subb
sbb
data16
pop
jns
mov
push
fneni(8087
ret
push
adc
or
pop
mov
cltd
nop
cmp
insb
cltd
ja
jl
fldln2
sub
add
leave
jo
lret
jb
inc
scas
loope
repz
xchg
sub
mov
dec
mov
cmpsl
outsl
cmc
fwait
daa
int3
pushf
call
or
xchg
xchg
std
shrl
mov
fsts
mov
lods
dec
adc
cmpsb
pop
imul
add
insb
fwait
xchg
daa
mov
cmc
pop
xor
loope
sub
dec
push
pop
sub
in
ss
push
cmpsl
das
jle
pop
fcoms
enter
cmpsl
xor
cmp
int
mov
or
inc
mov
lds
outsl
dec
and
das
pop
cmp
lret
popf
jmp
sbb
loope
jno
push
call
or
out
test
push
add
mov
push
inc
jmp
mov
jae
lods
jb
fwait
or
inc
jbe
inc
outsb
mov
ficoms
popa
mov
loopne
clc
js
repnz
into
je
or
test
dec
arpl
lods
xor
pushf
dec
call
mov
add
sub
or
jne
roll
repz
adc
inc
sub
sbb
addr16
sub
repnz
jns
mov
and
icebp
jmp
in
addr16
pop
nop
leave
std
add
ja
ljmp
push
mov
xchg
aaa
jne
inc
test
mov
insl
pop
sub
cltd
mov
test
pop
lods
popf
mov
add
push
fildl
sarb
mov
adc
jmp
leave
enter
sub
pop
clc
aad
mov
shrb
cmpl
mov
mov
mov
xor
imul
popf
imul
cli
jp
stc
cmp
or
imul
xlat
add
insb
and
add
push
mov
pop
and
roll
insb
ss
mov
push
pop
and
and
cmp
in
adcb
mov
sahf
imul
loop
insl
push
int3
xor
jecxz
xchg
mov
sub
jmp
mov
and
lods
nop
pop
sub
gs
push
jns
cltd
arpl
mov
dec
adc
mov
cmp
leave
sub
xor
test
dec
add
cwtl
xlat
xor
and
mulb
lods
mov
shll
sbb
ja
mov
outsl
clc
jl
jb
sbb
icebp
push
outsb
fcomps
fiaddl
jne
roll
cmc
xchg
in
fs
sbb
adcl
sti
inc
mulb
add
sahf
or
fwait
adc
xlat
sbb
aas
sub
sub
lods
mov
fidivs
mov
lea
adc
repz
mov
negl
insl
push
pop
pop
push
pop
pop
and
add
andl
cmp
mov
add
into
out
fdivr
push
js
sbb
movsb
push
test
gs
xlat
out
ret
mov
jg
xor
inc
jb
out
mov
dec
add
inc
mov
push
scas
jg
arpl
outsb
cmp
lret
pop
call
inc
mov
mov
cwtl
dec
or
push
sahf
in
ljmp
xchg
movsl
xchg
neg
aas
cmpsb
mov
and
inc
fdivs
adc
or
stc
cltd
push
mov
ret
jnp
jp
and
loope
adc
frstor
pushf
cli
mov
fdecstp
cmp
in
daa
imul
sbb
addb
hlt
jp
mov
mov
sbb
insb
or
into
push
sahf
cmp
lea
arpl
ljmp
jl
pushf
xor
jbe
adc
test
push
subb
pop
clc
add
pushf
and
inc
out
test
pop
pushf
in
cmp
stc
js
pop
stc
pop
xchg
inc
or
mov
sub
insb
rclb
push
std
mov
pop
push
lret
enter
fiaddl
aaa
mov
mov
jno
mov
dec
les
jecxz
xorl
inc
ror
mov
and
test
push
mov
jecxz
cmp
frstor
adc
cmc
dec
add
or
ljmp
mov
mov
sub
in
fcmovu
xor
sub
xor
cld
fdiv
wrmsr
sub
loope
rcrl
loope
sub
mov
inc
mov
das
xlat
rep
pop
pop
mov
sbbb
sbb
movsl
mov
xlat
scas
adc
xchg
mov
adc
xor
mov
vpmovdw
lret
mov
cmpsl
push
push
pop
pop
popf
or
mov
push
imul
xor
call
push
jb
xor
cmp
repnz
sub
push
in
adc
inc
sbb
cli
fwait
xor
xchg
popf
push
push
int3
fistl
les
mov
inc
or
enter
lahf
jl
adc
leave
fidivs
lahf
gs
xor
iret
popf
movsb
in
push
inc
int
mov
push
ss
inc
fsubl
aad
fisttps
les
mov
das
add
movsl
mov
xchg
aas
aad
cli
xchg
repz
mov
pop
fisubl
addr16
clc
ja
inc
dec
push
lahf
cli
sar
cli
inc
sahf
out
gs
aad
and
adc
mov
jnp
mov
jp
fisubl
mov
test
loopne
stos
aaa
push
repz
ljmp
cmpsb
xchg
rorl
sbb
mov
jle
or
or
sbb
fsts
js
pop
sbb
dec
jl
pop
iret
int3
and
imul
cmp
test
add
jge
xor
ss
inc
ficoml
adc
aam
int3
mov
cmp
mov
rcrl
stc
adc
push
fstl
or
bound
mov
or
add
mov
xchg
test
out
sarl
cmp
shll
push
jl
in
xor
sbb
sbb
gs
out
jmp
inc
mov
mov
jle
jb
fsubr
pop
or
lcall
xchg
jmp
imul
sub
pop
xchg
mov
hlt
add
clc
in
xlat
sub
scas
pop
rorl
xor
cmpsl
divl
shrb
pop
jae
sub
lds
xchg
cmp
in
adc
mov
mov
xchg
pop
cld
push
rorl
dec
sbb
loop
test
das
and
pusha
jae
inc
inc
push
inc
jg
dec
movsl
stc
icebp
mov
insl
mov
scas
paddusb
jmp
repz
jecxz
andb
xchg
sub
push
push
or
mov
jg
mov
jns
aas
fdivrl
testl
and
sbb
jae
or
mov
int3
popf
jnp
out
add
jl
sbb
jge
add
adc
cmc
sub
sbb
ret
stos
inc
shr
ret
cli
stos
popf
cmc
mov
mov
cmc
and
xor
mov
out
sub
push
add
inc
dec
fs
and
xchg
sub
xor
sbb
mov
fstl
jmp
pop
loop
popa
sbb
mov
and
pop
out
in
pop
daa
adc
ret
mov
iret
ss
push
dec
cmp
movsb
int3
inc
lret
dec
pop
inc
aam
sub
mov
lcall
imul
or
mov
rcrb
jmp
outsb
adc
push
repnz
fdivl
je
imul
sub
push
sbb
test
gs
cmp
test
nop
push
cmp
fs
lds
cs
insl
lret
enter
mov
cmp
mov
imul
push
sbbb
cs
pop
in
adc
inc
fistps
mov
icebp
out
pop
int
and
imul
fldt
insb
das
test
fnsave
orb
cmpsb
push
cld
adc
ljmp
stc
cmpsl
clc
bound
into
mov
pop
bound
or
mov
jno
and
jp
xchg
out
in
shrl
pop
fwait
insl
lods
mov
pop
lret
fwait
fs
outsl
jne
lea
xor
cmp
push
or
cmp
dec
cmp
orl
cmp
mov
sti
xchg
xchg
sti
es
cmp
cmp
dec
xchg
rclb
and
icebp
stos
cmp
adc
ja
push
sub
push
pop
cmpsb
jnp
jne
arpl
push
sbb
inc
mov
cwtl
filds
adc
jae
das
ret
push
inc
add
ss
push
add
mov
addb
xchg
xor
mov
and
dec
dec
sub
daa
jnp
jmp
jo
andb
test
jg
out
js
arpl
lcall
movsl
jge
jle
ds
adc
cmpb
sar
or
lcall
inc
mov
push
cmp
xchg
push
fisubrl
cmp
lcall
inc
pop
and
mov
push
or
lea
lods
mov
dec
lret
sub
pop
mov
mov
add
loop
sbb
iret
mov
ja
cmp
or
ss
jno
push
mov
imul
stos
adc
flds
and
les
sbb
lock
cmp
mov
push
push
jb
mov
lods
test
push
add
pop
mov
mov
js
mov
cmpsb
push
data16
repz
add
cmp
in
mov
inc
out
pop
shll
push
popa
dec
adc
sbb
test
subb
ficompl
mov
fsts
push
loop
cltd
pop
xchg
xchg
sub
adc
xor
int3
sub
jbe
lahf
aad
stc
sbb
stos
test
popa
mov
loope
testb
rcll
xchg
adc
push
cmc
dec
test
cmp
sub
mov
insl
stc
pop
jb
dec
mov
call
add
fisttpll
jbe
mov
pop
test
out
fs
mov
inc
mov
call
xchg
push
jne
push
lret
xor
adc
jecxz
bound
sub
out
add
enter
cli
gs
movsb
imull
add
or
gs
or
sbb
test
aas
stc
xchg
or
jp
xchg
xlat
out
jb
hlt
test
mov
inc
in
push
sub
dec
scas
sbb
sub
inc
mov
adc
fwait
cmp
adc
loope
les
jl
and
roll
data16
and
lds
in
addr16
cmc
jae
jp
fucom
sbb
xor
divps
cmp
in
lea
xorl
shll
loop
mov
cmp
popf
inc
jns
fcomip
xor
ret
popa
mov
dec
rcrb
faddl
dec
jmp
cmp
dec
or
imul
scas
pop
add
mov
xchg
add
lods
adc
sbbb
dec
aam
jmp
movsb
popa
aaa
outsb
and
data16
into
jae
fcmovnbe
push
or
or
aaa
addr16
fxch
test
mov
dec
out
xchg
clc
xchg
add
stos
ljmp
pop
add
and
test
mov
adc
xlat
push
in
sub
imul
gs
insb
push
inc
sbb
mov
pushf
sti
pop
mov
dec
aas
enter
xchg
sete
inc
stc
cs
mov
ret
mov
or
pop
jl
scas
add
dec
aaa
xor
dec
ret
push
cmp
adc
inc
daa
enter
xchg
je
jp
mov
rolb
bound
add
inc
imul
sbb
push
adc
ds
sbb
das
int3
push
jp
and
lea
sub
xor
xchg
mov
push
sbb
and
movsl
popa
and
sahf
cld
loopne
jp
lret
and
jo
mov
inc
bound
ret
and
jne
sub
nop
mov
mov
or
leave
call
mov
mov
mov
mov
inc
out
and
and
pop
ss
sbb
or
cwtl
js
lea
iret
inc
lods
sti
hlt
pop
jl
rcr
out
adc
jecxz
call
sub
aad
stos
add
lds
int
loope
push
xchg
xchg
push
fidivrl
mov
in
xchg
call
test
jnp
ljmp
arpl
jb
pop
pop
adc
pop
lahf
jle
xchg
popa
inc
int3
lahf
dec
mov
out
js
mov
inc
sub
frstor
cmp
sbb
out
and
push
aam
sub
imul
loop
inc
lods
insl
cmp
sti
inc
es
add
pop
cmpsb
iret
pushf
shlb
adc
sub
jmp
leave
notl
clc
cmp
stc
ds
mov
js
daa
jbe
out
mov
jo
stc
insl
ljmp
mov
inc
aad
ss
add
lret
sub
xor
mov
cmp
pop
outsl
popa
int3
add
aad
jg
mov
cwtl
sub
or
sub
into
jp
es
xchg
aaa
sub
xor
fsubs
cmp
mov
mov
dec
xor
dec
jmp
and
shrb
not
adc
adc
test
push
aas
sarl
push
mov
popa
popf
into
aas
sub
test
sbb
jb
sbb
dec
sub
iret
scas
enter
mov
jns
cld
repz
popl
aad
push
mov
fwait
xchg
dec
add
jecxz
add
fcomip
inc
dec
adc
cli
out
mov
sub
fistps
jns
sbb
out
movsb
movsb
sub
push
mov
sub
inc
add
jne
inc
fldl
mov
movsl
or
mov
sbb
ret
aam
dec
mov
loop
push
mov
push
inc
in
in
ficoml
mov
sbb
ljmp
notl
jb
push
push
jge
jp
sub
mov
clts
mov
push
xor
popf
inc
pushf
inc
stc
mov
lds
mov
iret
es
movsl
cmp
es
jae
dec
int3
inc
inc
roll
sbbl
dec
addl
cs
lret
pop
stos
push
aas
and
aas
inc
scas
adc
out
es
call
in
dec
rcrb
fsts
sahf
jo
stos
loope
cmpsl
mov
and
popf
pop
roll
push
lret
sbb
push
xor
ds
and
inc
cli
loopne
dec
jb
sub
insb
lret
adc
push
sbb
push
mov
push
test
jae
inc
ja
int3
pop
pop
xchg
fs
xchg
mov
clc
ss
jmp
push
inc
jg
je
and
push
fnstcw
cmp
inc
xor
add
xlat
fidivrs
push
push
dec
jl
sbb
mov
mov
lods
mov
jg
js
pop
fistps
dec
mov
stos
mov
jp
lret
xchg
xor
pushf
ret
data16
enter
sahf
aas
dec
xor
ret
dec
dec
sub
lret
cmp
mov
mov
fwait
mov
decb
fsubrl
gs
inc
push
data16
or
push
pop
movsb
lcall
cltd
call
stos
cld
mov
pop
fcomps
repz
test
cli
icebp
test
inc
lods
rcll
shl
andb
aam
jp
fwait
xchg
or
into
mov
shrb
pop
xor
push
loope
sbbl
add
jmp
fadds
and
jl
insb
pop
jmp
out
nop
lcall
loopne
jg
dec
add
mov
fdivl
add
stc
sbb
jns
cmp
jbe
std
xchg
and
jmp
push
and
dec
push
loopne
or
test
cwtl
hlt
cmp
ret
inc
fsub
inc
insb
sbb
dec
xchg
push
mov
stc
je
popa
out
jp
jb
jge
jmp
adc
push
jl
xchg
mov
fs
cmc
stos
jb
ret
mov
inc
and
jo
mov
jo
xor
jb
mov
imulb
andb
and
or
xchg
xor
lcall
test
movsl
mov
into
imul
arpl
fstps
js
into
and
sub
stos
jmp
in
push
sbb
jne
je
adc
shlb
fwait
xchg
mov
dec
icebp
test
in
in
jo
inc
sbb
pop
popa
lock
pop
cmp
scas
push
mov
and
inc
das
das
je
mov
mov
scas
shll
jmp
sub
pop
jnp
lock
lock
nop
andl
shl
pop
repz
dec
push
neg
push
adc
pop
sub
stos
jmp
push
mov
push
aaa
icebp
in
cwtl
jbe
push
wbinvd
mov
jno
push
mov
gs
mov
xchg
cmp
call
insl
mov
or
pop
icebp
addl
stos
jle
aad
inc
in
int3
cmp
mov
push
repz
fsubl
cltd
shll
loop
das
mov
cmpsb
xchg
outsb
addr16
ss
adc
and
sahf
std
cmp
sbb
or
es
or
push
test
jmp
sti
cmp
or
fldt
jnp
or
cmp
imul
jmp
sti
cmp
or
fldt
jnp
or
cmp
imul
jmp
sti
cmp
or
fildll
jg
or
aas
dec
iret
pop
fildll
dec
sti
cmp
mov
dec
adc
jno
lret
or
andl
fs
je
and
and
test
ret
and
clc
add
pop
push
add
add
push
add
add
add
add
add
enter
inc
add
add
add
and
add
add
add
add
out
add
add
xor
inc
add
sbb
add
add
xchg
js
aas
add
add
jo
std
add
cwtl
add
call
add
add
add
add
add
add
add
es
add
add
add
add
jo
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
int
add
rolb
add
add
popa
add
add
add
jns
adc
adc
inc
add
ret
add
add
add
add
stos
add
out
add
add
jg
es
add
pop
add
jo
add
add
jge
mov
inc
add
add
aas
add
add
mov
add
add
add
adc
dec
add
add
enter
xchg
add
add
add
adc
cwtl
add
fldl
bound
rolb
add
add
add
int3
add
mov
adc
and
inc
add
add
add
add
add
add
adc
std
add
add
add
add
sub
pop
add
add
out
add
test
xchg
add
add
add
add
add
add
add
add
pop
or
inc
add
out
add
rolb
add
insl
add
add
add
add
add
add
addl
add
test
fiaddl
add
add
and
movsl
add
mov
std
add
mov
add
add
add
add
add
add
add
add
push
add
add
jge
movsb
add
add
add
add
add
add
add
add
add
add
add
aam
bound
mov
popf
add
add
inc
add
add
add
add
push
add
add
add
dec
add
je
ret
add
add
add
add
jo
adc
add
add
add
add
add
test
xor
data16
add
pop
add
add
add
adc
sbb
add
add
add
push
add
add
and
sub
push
int
mov
pusha
or
add
out
add
addl
mov
add
add
add
in
movl
jne
sbb
add
add
add
add
inc
add
add
add
movsb
add
imul
add
add
add
data16
add
add
add
add
pop
add
add
add
add
or
or
add
add
add
add
push
add
add
add
test
add
cmp
add
push
add
sub
push
add
add
add
add
add
nop
add
cmp
or
add
addl
add
lret
inc
add
ljmp
mov
loop
push
call
mov
fldt
mov
sti
lea
fldl
ljmp
xor
lcall
jmp
sbb
orb
incl
add
jnp
in
roll
sub
ss
add
outsb
jne
leave
cwtl
adc
fcoml
rorb
mov
int3
jnp
mov
push
stos
mov
mov
cld
into
repz
adc
test
push
pop
shlb
cld
into
mov
cmc
pop
sub
sub
xor
ljmp
inc
xorl
in
leave
loop
lock
aaa
mov
out
testl
lcall
mov
push
adc
sub
xlat
in
icebp
mov
out
mov
add
adc
xor
inc
mov
fisubl
add
das
je
loope
mov
sbb
addr16
icebp
push
or
fbld
mov
aad
pop
mov
ljmp
cmc
rol
cmp
lret
xchg
push
std
dec
icebp
imul
std
mov
data16
sahf
dec
adc
lods
mov
inc
daa
scas
aad
mov
adc
mov
adc
push
adc
pop
lods
push
arpl
mov
pop
fists
mov
push
orb
push
push
data16
aam
cwtl
cmp
sub
in
adc
pop
cmpsl
add
and
imul
sbb
sub
fcom
sbb
in
fnstsw
pop
mov
xchg
bnd
out
or
and
xchg
inc
out
jns
or
inc
adc
fisubl
daa
mov
jne
lock
iret
xchg
pop
scas
adc
lods
pop
cmp
jno
jl
ret
sbb
xor
shlb
mov
xor
in
xor
rcll
ja
fsubrs
into
lahf
inc
dec
or
ljmp
cwtl
out
test
xchg
in
jno
test
push
popl
dec
add
jnp
mov
cltd
jl
adcb
jbe
push
and
dec
addl
xchg
enter
mov
cmp
xchg
lea
imul
or
rcl
and
stos
gs
xchg
lret
cmpsl
rolb
incb
lock
pop
clc
test
inc
mov
xchg
jae
xorb
addr16
js
in
push
inc
sbb
jnp
subl
cltd
out
inc
mov
mov
dec
ret
jge
test
push
scas
fidivrl
cmpsb
out
movsb
inc
pop
xchg
push
ss
imul
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
