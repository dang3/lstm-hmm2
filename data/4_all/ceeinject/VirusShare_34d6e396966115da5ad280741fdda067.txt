call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
and
pop
outsl
into
xchg
subb
push
mov
jmp
pop
loop
adc
and
jb
into
xchg
orb
mov
outsb
repnz
dec
adc
and
jb
into
xchg
xchg
mov
push
sarb
mov
mov
mov
mov
dec
fistps
adc
lret
test
mov
dec
in
push
movsl
mov
call
fbstp
jge
adc
psrlw
addl
mov
in
out
mov
pop
jae
aas
mov
ret
xchg
shll
jg
scas
jno
loop
adc
and
out
sub
xor
cmovb
pop
pop
adcb
or
xchg
sbb
jno
jmp
mov
jmp
jns
loope
into
subb
or
sub
push
or
fnsave
mov
arpl
stos
jb
aad
cs
push
enter
xchg
test
sarl
and
jb
into
xchg
subb
push
mov
outsb
repnz
loop
ja
popa
scas
je
fs
xchg
sub
sahf
loop
out
shll
push
pop
sbbl
mov
arpl
aaa
mov
mov
test
in
iret
jg
popa
and
cmp
std
je
inc
jmp
incb
jb
into
xchg
subb
push
mov
outsb
repnz
loop
adc
and
jb
into
xchg
subb
push
mov
outsb
repnz
loop
adc
pop
leave
xorb
push
and
push
jo
xchg
lret
sti
repz
push
mov
pop
aam
adc
pop
jnp
cmp
shll
cmp
xchg
les
sarb
xchg
and
xchg
insb
pop
pusha
push
jns
jge
jg
sti
shrl
and
ud0
ret
or
xor
notb
jecxz
enter
xorl
mov
mov
and
ss
das
or
repnz
xor
and
sbb
adc
sbb
subps
lods
sar
in
xchg
outsl
adc
push
mov
adc
pcmpgtw
pop
adc
stos
fst
jo
mov
sbb
add
mov
sbb
sbb
cld
add
divb
loop
pop
fs
push
mov
add
aad
inc
push
ficoms
sbb
xchg
mov
je
mov
test
shrb
jecxz
rcrb
xor
jecxz
loopne
adc
mov
inc
shll
lock
nop
push
sbb
sahf
daa
xor
push
dec
add
bound
mov
mov
xchg
es
dec
in
adc
dec
data16
stos
inc
test
nop
jge
mov
mov
jge
ret
add
in
xorl
push
mov
dec
lods
dec
or
scas
lock
fcmove
xor
inc
rcrl
lds
fists
adc
test
or
xor
icebp
out
and
call
cmp
mov
shll
sub
mov
lds
dec
out
test
mov
cmp
push
ret
xchg
cmp
cli
sub
pop
add
push
inc
pop
sbb
mov
repz
xchg
mov
mov
mov
das
nop
int3
mov
movsb
nop
scas
iret
ret
and
mov
in
lods
sbb
and
popf
cmpsb
sbb
jnp
daa
loop
mov
sbb
inc
xchg
flds
dec
mov
outsl
xchg
xor
lret
bound
lock
out
and
sbb
fninit
cmpsl
and
dec
fbstp
fmull
sub
xor
mov
movsb
xor
jnp
mov
jno
test
mov
cmp
push
mov
fstpl
and
stc
rcl
loopne
pop
dec
or
mov
aaa
gs
xor
movsl
adc
inc
pop
and
jne
iret
stos
xor
push
in
data16
inc
push
mov
jl
inc
push
and
test
cmpsl
rcrb
cmp
cmp
cmp
cmp
push
outsl
sbb
rcll
outsb
jae
jecxz
xchg
adc
pop
adc
dec
xor
scas
jg
loope
lock
mov
lahf
es
or
ror
dec
inc
cmp
js
pop
js
mov
push
jecxz
jns
pop
sarl
mov
hlt
mov
out
arpl
imul
xchg
lods
pshufw
imul
or
fwait
imul
sub
dec
inc
cmp
jge
pop
mov
jge
dec
pop
insb
rolb
fnstenv
jae
sahf
inc
repz
bound
cmp
adc
int3
and
rclb
xchg
fldcw
dec
xor
int3
mov
xor
push
and
dec
lock
push
adc
dec
cs
or
outsl
jmp
jge
dec
pop
push
call
inc
test
mov
and
sub
push
sub
loopne
and
orb
push
cmp
push
ret
sti
incb
iret
mov
mov
scas
in
adc
xabort
inc
inc
xchg
nop
push
xchg
mov
mov
lods
dec
adc
pop
ret
mov
aad
jb
or
cs
push
jbe
push
sti
push
loop
or
push
ret
inc
pop
mov
mov
loope
movsl
std
sti
push
or
xor
sbb
dec
imul
stos
cmp
inc
push
cltd
iret
arpl
mov
fcompl
adc
ror
jg
cli
inc
push
or
add
loopne
jmp
repnz
jg
outsl
nop
and
adc
sbb
call
jge
jmp
push
xchg
xor
imul
mov
fisttpll
test
lods
repz
cltd
cmpsl
cmpb
fistl
lods
push
sbb
hlt
dec
test
or
in
xchg
lret
fcmovnb
push
mov
xchg
push
jge
xchg
ror
lods
jne
pop
fiaddl
insl
xor
xorl
sbb
push
mov
cmp
push
outsl
cld
mov
es
cli
decl
mov
daa
push
jg
lds
mov
sbb
jmp
sub
imul
push
mov
out
adc
inc
imul
cmpb
stc
mov
push
jno
cmpsb
mov
arpl
jle
jecxz
pop
mov
cld
lcall
vmovntps
fdivs
xor
cmp
call
loope
push
push
andb
push
mov
or
push
adcb
fwait
scas
pop
xchg
lahf
jns
ret
xchg
hlt
mov
jmp
lods
mov
pusha
orb
outsl
jl
push
test
push
enter
aad
push
push
in
lcall
jg
popa
sbb
sub
nop
mov
int3
cmp
stc
addr16
mov
movsl
sbb
adc
js
and
imul
jo
push
mov
pusha
outsl
xor
mov
pop
xchg
jl
pusha
cmp
jo
mov
test
pop
pushf
and
pushf
mov
push
cmp
imul
push
cltd
cmp
icebp
decb
pslld
push
sbb
xlat
xchg
test
adc
jle
sub
dec
adc
fsub
or
call
negl
andl
inc
mov
das
fidivs
xor
xchg
push
call
das
mov
scas
xchg
divb
xchg
hlt
jb
les
cld
dec
inc
inc
mov
ljmp
xor
jl
push
push
sbb
lahf
std
push
inc
xchg
pushf
adc
mov
cmp
in
xchg
in
mov
mov
mov
in
push
scas
rorl
inc
pop
and
inc
ljmp
cltd
scas
mov
adc
or
lds
inc
stos
pop
icebp
pop
pusha
fistps
push
das
sbb
cmpsb
xor
jb
dec
pop
cmp
clc
packsswb
hlt
rclb
mov
lret
add
lahf
les
gs
je
lock
cltd
imul
sub
out
xchg
gs
fists
in
shrb
xor
pop
lock
push
cs
lock
out
xor
dec
call
inc
xchg
mov
mov
pop
mov
pop
mov
jo
and
push
lret
pop
sbb
jbe
pop
mov
stc
shr
cmp
imul
data16
jg
cli
mov
mov
inc
bound
out
pop
mov
les
mov
les
lret
or
mov
fnstsw
fwait
mov
lcall
xor
nop
mov
hlt
sti
push
jge
xchg
popf
test
pushf
mov
jl
aas
push
xchg
adc
cmp
shlb
aam
pop
jge,pt
sbb
jp
jecxz
cmpsb
clc
cmp
scas
les
push
test
cmpsb
imul
sub
pusha
xchg
sbb
loope
sub
popf
call
les
daa
pop
fwait
inc
mov
mov
je
push
js
jg
push
lret
dec
sub
outsb
imul
lock
jae
aad
push
hlt
pop
std
outsb
xchg
or
ja
or
push
add
xchg
popf
jae
push
cmpsb
xor
sti
inc
insb
inc
ds
fs
pop
fisubl
inc
pop
leave
mul
mov
fildll
xchg
xchg
dec
sub
hlt
cmp
sub
mov
sbb
out
fidivrs
hlt
adc
test
push
mov
outsl
xchg
sar
icebp
push
fcoml
sbb
mov
sahf
add
int3
ljmp
cmc
or
jbe
imul
cld
pop
inc
outsl
push
adc
ljmp
cs
cli
fmul
cmp
inc
mov
ljmp
jl
dec
in
adc
daa
orb
inc
pop
dec
cld
jmp
sbb
dec
pop
push
mov
lock
add
stos
mov
sysret
in
cmc
xchg
xor
test
push
sbb
addr16
jecxz
inc
movsb
cmp
jne
mov
sub
sub
daa
int
movsl
xchg
lds
sahf
outsb
xchg
iret
aad
add
jno
lea
mov
push
fldl
out
mov
inc
push
mov
outsb
les
push
pop
mov
outsl
aad
movsb
pop
fistl
or
lods
and
lret
arpl
sbb
or
in
sub
mov
jo
add
and
mov
out
dec
or
push
xlat
sub
xor
imul
cltd
ret
inc
push
mov
mov
cli
in
lock
movsl
inc
lea
sbb
hlt
imul
dec
xor
xchg
jne
sub
ficompl
mov
lret
ficomps
outsb
and
rorl
lock
outsl
push
ret
mov
leave
push
xchg
pop
fwait
inc
jmp
xor
lea
cld
in
stc
test
or
mov
bound
leave
aam
fldt
pop
push
inc
xor
jp
adc
mov
scas
arpl
and
jae
xchg
lods
test
insl
loope
add
pop
push
push
jl
inc
cltd
fst
cli
jbe
int
daa
les
stos
pop
or
mov
aad
pop
push
jne
jl
xchg
add
push
shl
and
mov
testb
pusha
loop
mov
jo
cmp
sbb
xchg
rol
mov
ss
out
mov
rclb
movsb
mov
cmp
mov
add
push
sbbl
xchg
cs
andb
cmpsl
or
in
sub
imul
adc
mov
mov
rcr
adc
adc
insb
pop
repz
dec
movsl
testb
imul
push
lea
xchg
lcall
std
jbe
dec
dec
scas
ss
fadd
xor
nop
sbb
sbb
fmull
imul
nop
mov
xchg
imul
pop
inc
int3
mov
push
loopne
sub
data16
les
xchg
fwait
stos
mov
inc
inc
add
loopne
push
pop
hlt
sahf
sub
xor
mov
es
cwtl
inc
adc
int
or
pop
mov
daa
and
cwtl
xor
ljmp
jno
cmp
movsl
push
inc
xor
push
cmpl
jge
mov
cmp
mov
clc
insl
repnz
sub
mov
cmp
hlt
test
cmp
mov
sub
das
je
js
pop
popf
add
lods
and
out
cmp
add
xchg
pushf
mov
repz
xchg
mull
je,pn
test
ds
inc
mov
cmp
jns
out
dec
pop
lret
sub
mov
mov
sbb
push
incl
data16
rcl
fildll
mov
and
fdivr
fdivl
sbb
insb
and
xor
xchg
mov
hlt
rorl
lcall
xor
sub
and
pop
nop
pop
pop
mov
test
mov
test
mov
cwtl
dec
mulb
notl
outsl
mov
jne
stc
rcll
jecxz
sub
fists
lret
push
mov
inc
cmpsl
orl
mov
mov
lods
xor
gs
outsb
pop
adc
jmp
stos
stc
std
adc
in
out
jmp
dec
sbb
jne
mov
mov
sbb
mov
sub
ss
lea
in
outsb
xlat
arpl
push
subl
jnp
gs
iret
andl
inc
sar
xor
repz
dec
fdivs
push
mov
test
inc
mov
insb
or
sub
cmp
mov
or
insb
call
insl
cld
xlat
pop
cmp
inc
mov
lcall
adc
or
iret
loop
in
jo
into
cmovnp
and
pop
jo
or
shll
mov
sbb
mov
mov
aad
imul
sub
popa
iret
cmpsl
cmp
sub
lods
xor
aas
mov
adc
fwait
xor
mov
add
mulb
cs
jecxz
mov
fildll
dec
mov
scas
sub
mov
xorb
call
in
sub
and
out
pop
xchg
mov
bound
sbb
scas
xchg
clc
mov
dec
sbb
pop
jns
repz
setp
adc
lret
add
sub
movl
inc
pop
mov
mov
mov
test
cmp
mov
ds
push
lea
xchg
push
jmp
test
rcl
or
mov
rcrl
hlt
ja
test
inc
cmpsl
call
loop
push
loop
jae
out
popf
enter
jbe
data16
xchg
mov
popf
fimuls
mov
xlat
cli
xchg
call
outsw
and
idivb
lahf
mov
inc
inc
int
push
mov
sbb
sbb
stos
or
adc
mov
and
xor
data16
mov
fldcw
mov
mov
pop
mov
icebp
movsl
pop
cli
dec
loop
mov
pop
pop
jns
addr16
popf
dec
mov
je
sub
jle
daa
cmc
mov
pop
nop
adc
movsl
dec
dec
xchg
jmp
pop
into
inc
fstl
scas
pop
push
push
lahf
mov
lret
sub
dec
inc
loop
jns,pn
repnz
pop
insl
insb
rol
inc
nop
loopne
popa
outsb
jb
repnz
sub
xor
xlat
xor
push
pop
jne
cmp
ret
lock
mov
sbb
ja
scas
in
shr
cmp
loope
xor
in
add
mov
pop
push
pop
arpl
clc
aad
push
xchg
jecxz
push
out
sbb
cmpsb
and
dec
push
sub
sbb
lcall
sbb
mov
inc
or
lret
inc
insb
push
movsl
divl
mov
std
mov
sbb
xor
mov
faddl
fldenv
mov
rol
push
pop
mov
rcrb
pop
adc
inc
pop
mov
cmpsl
mov
insl
jb
scas
enter
mov
mov
add
and
xor
ss
push
in
sbb
test
into
jmp
jo
pop
cmp
inc
dec
mov
jnp
mov
and
push
jle
xchg
mov
xchg
mov
outsb
push
xlat
out
pop
cmp
mov
lods
repz
movsb
mov
jmp
dec
inc
ret
push
xlat
movsl
push
mov
sbb
xchg
xchg
add
push
bnd
das
loop
push
inc
push
mov
mov
mov
fdivr
jecxz
aas
js
add
inc
and
popf
jl
push
mov
fcomp
push
mov
aas
lea
pop
fistps
mov
repz
scas
out
mov
cmpsb
insl
mov
ret
into
sbb
dec
sahf
ret
lods
xchg
call
push
xor
and
leave
adc
les
pop
pop
push
push
or
adc
xor
mov
pusha
mov
xor
loop
xor
dec
inc
dec
add
mov
dec
lcall
test
pusha
add
jbe
js
jmp
aad
sub
adc
pop
stos
xchg
lods
inc
mov
cmpsb
and
jp
into
iret
push
add
cld
ficoms
adc
dec
popa
jmpw
jmp
hlt
gs
int
jl
mov
lds
std
jo
lods
jl
shl
push
jo
lock
jnp
add
cmp
sub
inc
in
mov
xchg
dec
xchg
popf
cmp
and
mov
out
mov
jns
sbb
xor
cmp
out
gs
push
cwtl
test
inc
xor
pop
test
sbb
pushf
outsb
jge
mov
shl
inc
xor
aad
jo
popa
mov
inc
xchg
test
pop
insb
cmp
cs
jge
xchg
and
aam
inc
in
xchg
sqrtps
push
rcr
popa
pop
stc
bound
or
xchg
in
sahf
mov
cs
sub
push
in
stos
repz
andb
and
into
fmuls
pop
sbb
loope
adc
push
in
hlt
and
mov
aam
loop
xor
pop
lret
xchg
int3
movsl
ret
sub
jae
les
jne
xor
loop
xorl
add
inc
sti
xchg
sub
pop
jmp
cmc
je
cwtl
out
test
jl
cwtl
cwtl
pop
sub
push
cmp
aam
inc
lahf
vucomisd
or
rclb
in
ja
mov
add
dec
xor
mov
lea
cs
stos
nop
jb
cmpsl
movsl
mov
lds
sub
stos
inc
adc
movsl
and
in
fiaddl
out
imul
std
lea
mov
jae
fisubrl
cmp
mulb
dec
dec
mov
fs
rclb
ljmp
xor
imul
xorl
push
jns
pop
sub
movsb
adc
movsb
sbb
push
xchg
js
or
push
push
inc
stc
cli
imul
roll
aad
call
int3
push
scas
clc
jg
mov
lods
sbb
mov
popf
cmp
sub
ret
cmp
fiadds
pop
mov
xchg
mov
popa
sti
hlt
fldt
sub
lock
jl
jmp
lret
inc
pusha
push
in
sub
mov
and
pop
push
inc
or
pop
pusha
loop
sub
mov
cld
mov
divw
js
aas
add
inc
cmpb
sbb
rcrb
loope
or
pusha
jg,pt
popf
sbb
and
mov
aaa
mov
lods
int3
out
adcl
adc
mov
es
mov
cltd
iret
jb
mov
xadd
shll
cmp
je
mov
inc
outsb
inc
and
push
cltd
jle
inc
push
cmpsl
icebp
and
out
lret
shlb
scas
inc
cmc
or
cltd
cmpsb
hlt
and
lahf
out
mov
cmc
mov
mov
sbb
adc
mov
inc
fdivrs
inc
xchg
and
mov
xor
orl
ss
into
and
or
jo
sub
stos
es
into
ss
ja
push
sub
fldenv
lock
dec
addr16
add
in
aam
fs
test
dec
mov
mov
ficoml
mov
scas
mov
hlt
loope
test
mov
call
xchg
mov
loop
in
lea
insb
sbb
fbld
add
cmp
push
cmp
or
cmp
sub
lods
fmull
cmp
fdivrl
out
jmp
jbe
push
inc
repz
jge
xchg
addr16
ficomps
pop
sahf
push
int3
xor
inc
mov
add
xchg
dec
inc
aas
xlat
push
popa
pop
push
stos
ljmp
push
repnz
lahf
push
and
pushl
vhsubps
jno
jbe
mov
inc
push
sub
out
push
add
push
outsl
jp
push
mov
leave
int
cltd
jb
dec
in
outsb
fiaddl
sbb
mov
adc
xchg
push
in
ljmp
fistpl
fstpl
and
jo
cmc
pop
incb
push
mov
clc
pop
dec
cmpsl
jbe
aad
ljmp
xchg
fimull
sbb
out
insb
stos
fldl
lahf
sbb
sbb
shrb
hlt
pop
dec
mov
and
jecxz
sti
in
popf
out
pushf
or
movsb
and
lds
aam
test
and
test
ds
addr16
xor
rcrb
js
xor
mov
sahf
mov
test
mov
fsubrp
inc
dec
pop
stc
mov
mov
add
sbb
jp
cmpsb
in
or
add
sarb
inc
pop
xchg
push
pop
mov
test
pusha
iret
out
dec
dec
mov
mov
jmp
je
mov
testb
cmp
and
ficoml
out
sti
adc
xchg
sti
fimuls
les
notl
adc
imul
add
and
lret
xchg
xchg
pop
decl
stc
stc
push
lods
leave
push
mov
test
inc
or
cmp
leave
inc
stc
inc
mov
sbb
mov
sbb
and
dec
push
ss
cli
icebp
mov
sub
pushl
jnp
cmp
lret
aas
movsl
in
jecxz
jne
lret
adcl
mov
xor
mov
out
dec
outsb
xor
mov
jnp
mov
mov
lcall
jae
scas
sub
adc
loope
das
int3
jnp
clc
aad
cltd
inc
movsb
into
mov
sbb
mov
repz
cld
and
and
inc
loopne
mov
sub
pop
sahf
sbb
cmp
pop
cmpsl
jb
imul
into
pop
rol
jnp
aad
dec
cmpsb
movsl
imul
mov
inc
out
jb
into
xchg
subb
push
mov
outsb
repnz
loop
adc
and
jb
into
xchg
subb
push
mov
outsb
repnz
loop
adc
and
jb
into
xchg
mov
mov
outsb
repz
loop
adc
and
repnz
into
insl
jge,pt
sbb
mov
xchg
or
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
sbb
sub
cmp
inc
sub
nop
or
pushf
xor
fdivl
inc
cld
push
or
sbb
sub
cmp
dec
loope
jge
sarl
pushf
adc
add
in
add
push
or
sbb
sub
cmp
dec
fstpl
das
jl
mov
pushf
push
fistps
bound
xchg
push
inc
mov
dec
les
pop
jp
fldl
mov
push
inc
popf
int3
cld
popa
add
ja
or
jp
mov
and
add
pusha
leave
mov
inc
add
hlt
mov
mov
adc
xchg
pop
mov
pushf
insb
inc
push
jno
cmpl
pop
xchg
mov
cltd
xchg
cmp
mov
mov
xor
in
xor
mov
test
push
adc
lds
insl
leave
jge
pushf
jb
and
fidivs
push
jmp
or
nop
fsubrl
xchg
xor
pop
push
stc
or
pusha
fisttpll
push
mov
cmp
dec
loope
icebp
insb
sbb
cmpsl
pushf
imull
fmull
dec
repz
dec
ret
and
cmp
je
jne
js
push
mov
test
test
pmulhuw
jl
pop
mov
mov
ret
jl
jmp
fs
jbe
xor
cmp
js
inc
sarl
icebp
insb
sarl
pushf
xor
fdivl
inc
cld
push
or
sbb
sub
cmp
dec
loope
icebp
insb
sarl
pushf
xor
fdivl
inc
cld
push
or
mov
mov
aad
arpl
ds
mov
sub
sub
pop
dec
std
pusha
xchg
sub
enter
shlw
mov
sub
nop
adc
cmp
inc
pop
and
adc
movsb
inc
push
aas
out
int3
mov
js
loopne
cwtl
mov
in
in
lea
out
xor
add
cmc
fdivrs
jbe
ljmp
add
mov
mov
fisubrs
xchg
pop
adc
mov
mov
orl
sahf
xor
sub
js
jmp
jmp
mov
xor
sub
jne
xchg
fucomip
test
or
icebp
mov
popa
gs
dec
femms
push
pop
xchg
pop
aam
int
sti
inc
pushf
inc
cltd
adc
dec
cwtl
rclb
adc
das
and
pop
stos
jo
xchg
jge
cltd
adc
mov
mov
mov
movsb
or
xchg
or
scas
test
mov
and
jne
shl
xchg
lods
leave
lods
fildl
xor
je
inc
or
add
testb
mov
cmc
test
fisubl
test
out
mov
mov
jge
sbb
push
mov
insl
les
scas
jmp
nop
jne
inc
in
ret
push
fs
add
pop
loopne
into
movl
pop
sbb
mov
mov
mov
mov
jb
enter
mov
or
mov
jno
mov
sti
mov
mov
fbld
mov
pusha
aas
jbe
mov
dec
dec
lret
pop
cmp
popa
push
jp,pt
test
adcl
xchg
xchg
or
inc
xchg
xor
or
push
fistpll
mov
push
sbb
aaa
mov
ret
fdivrl
mov
jo
jnp
dec
sub
fcomip
lods
clc
or
push
sbb
mov
sti
imul
fcoms
xchg
div
fsubrl
movsl
mov
xchg
sbb
test
hlt
xlat
xchg
out
sti
aad
in
fnsave
sbb
pop
imul
add
sbb
pop
in
dec
fldt
push
sarb
imull
add
ds
aas
sbb
out
jmp
cmp
or
fistl
dec
push
ret
inc
into
xchg
or
gs
cmpsl
cltd
push
add
into
aaa
add
mov
cmpsl
pop
inc
pop
int
insb
adc
data16
rolb
sbb
cmpsb
mov
ja
lret
rcl
scas
insl
and
imul
ret
les
pop
inc
xor
or
test
shll
xlat
ret
cld
hlt
lds
jo
or
enter
mov
test
das
sbb
orb
mov
inc
sub
pop
stos
xchg
icebp
iret
inc
pop
jge
jo
push
or
jecxz
dec
adc
sti
jp
jecxz
cwtl
loop
jp
in
xchg
pop
and
out
aas
in
dec
filds
add
fisubrl
sbb
pop
gs
int3
xchg
daa
pop
sub
push
xchg
mov
pop
mov
sbb
addl
sbb
movb
jl
cmp
call
and
bound
arpl
adc
xchg
jle
leave
fs
rorb
popf
xchg
mov
xchg
fists
pop
cmpsl
xor
cmp
movsl
lea
test
inc
lds
sub
jmp
push
shl
ds
in
add
repz
int
jp
int
mov
cmp
lahf
fdivrs
mov
movsb
mov
push
push
call
and
dec
fwait
arpl
cwtl
jns
sti
test
repz
jb
mov
leave
loopne
cmpsl
push
xchg
push
vpmulhw
cmc
std
lods
dec
mov
push
sti
pop
icebp
andl
mov
jecxz
xchg
mov
or
inc
lock
inc
jno
mov
inc
inc
push
sub
push
pop
lds
jle
dec
jge
push
hlt
imul
bound
fmul
add
call
mov
or
xchg
mov
dec
jmp
mov
mov
jl
pop
inc
shl
and
inc
in
sbb
repnz
ja
xchg
nop
movsb
cmp
fldenv
jmp
inc
jge
in
lcall
jo
leave
push
xor
sub
js
into
iret
push
mov
or
mov
or
add
cld
inc
push
cmp
xor
int
add
test
inc
and
mov
scas
in
jo
mov
shl
testb
cmpsb
outsb
pushf
cmp
mov
push
aad
mov
imull
daa
fsincos
xor
add
mov
out
ds
sub
pop
push
sti
mov
mov
popa
xchg
and
les
lods
pop
dec
add
xorb
loope
out
cmpsb
lret
clc
insb
out
xor
lret
pop
call
aad
pushf
jne
xchg
movl
pop
xchg
mov
les
fwait
xlat
dec
daa
dec
lret
xlat
xor
aad
icebp
and
jl
adc
mov
out
mov
or
jno
hlt
cmp
pushf
cwtl
xor
mov
fs
aad
dec
add
in
loopne
rcll
inc
in
jecxz
in
inc
lret
adc
rorb
lds
ljmp
int
aad
xchg
dec
or
mov
xor
pusha
enter
bound
fdivr
movsb
movq
push
mov
ret
cld
movsl
pop
jno
mov
cmp
cmp
xchg
daa
je
jecxz
push
mov
test
jbe
shrl
push
pop
aaa
outsl
addb
mov
ret
xchg
jo
xor
sarb
push
or
cs
dec
into
test
mov
iret
sbb
mov
stos
xchg
xor
pop
push
shll
adc
mov
mul
adc
test
js
mov
pop
mov
div
xor
mov
sbb
cmp
cmp
jne
add
aaa
and
lahf
in
rolb
push
push
lret
sbb
pop
ret
cmpsb
inc
and
fcmove
push
js
xor
test
jnp
aam
pop
mov
out
arpl
xchg
lock
fsubrs
add
cmp
and
push
adc
and
int
out
lahf
xor
mov
decl
mov
les
or
gs
arpl
mov
out
and
mov
sbbl
cmp
test
in
mov
hlt
std
cmpsl
add
xchg
mov
fadds
and
lcall
add
dec
mov
mov
mov
ss
mov
jle
mov
mov
dec
gs
jns
stc
xchg
fiadds
pop
and
fistpll
pop
dec
add
shrl
push
adc
lods
sub
inc
pushaw
push
test
mov
in
inc
mov
std
roll
push
jbe
push
inc
repnz
jno
xor
int
out
xlat
fstpt
cmp
inc
push
adc
inc
mov
xor
sub
jle
ficomps
aam
xchg
sub
pusha
mov
ljmp
push
add
sbb
fldenv
movsb
jmp
stc
xchg
fnsave
cmpsl
mov
fwait
add
inc
cmp
and
lcall
sar
mov
xor
cmp
lds
hlt
mov
cmp
dec
in
jmp
or
sub
orl
bound
divb
sub
pop
xor
cmp
add
jle
popf
xlat
mov
and
dec
sub
aas
je
pop
movsl
out
push
lds
or
cltd
ret
push
xor
dec
fidivl
fs
cmc
dec
hlt
lcall
xchg
jg
sub
pusha
repz
aam
jle
aas
fnsave
in
sbb
and
jp
pop
rolb
popf
lods
sub
gs
movsl
xor
mov
cmp
lcall
fldenv
mov
lods
cmc
inc
or
adc
lcall
xchg
xlat
push
das
push
cmpsb
loope
nop
xchg
lcall
je
cs
mov
pop
ss
les
mov
add
enter
push
ja
inc
fdivrs
xlat
jg
nop
mov
cli
and
sbb
mov
or
call
mov
xchg
stc
cld
shll
in
fildll
out
push
adc
or
add
scas
cmc
arpl
pop
cld
mov
mov
jmp
dec
lods
fidivs
cwtl
push
roll
stc
sti
fcoml
jp
test
mov
test
sbb
xchg
imul
and
xchg
inc
jae
int3
add
or
mov
inc
ljmp
lcall
mov
inc
int
bound
xor
dec
xor
hlt
fs
adc
je
cmc
sbb
and
or
jne
xlat
push
cltd
pop
lret
std
notb
dec
nop
xchg
insl
enter
mov
adc
mov
sbb
lcall
xor
jmp
dec
xchg
pushf
fisubs
out
pop
aas
mov
lds
pavgw
pop
imul
dec
add
and
xchg
push
pop
loope
dec
mov
mov
inc
sub
jno
addr16
push
xchg
loope
dec
cmp
nop
pop
push
add
iret
rol
gs
lods
or
gs
push
jle
mov
xlat
outsl
sbb
subb
pop
mov
dec
jbe
addr16
mov
scas
in
pop
push
fisubrs
inc
loope
ret
mov
and
and
sbb
add
or
rclb
mov
mov
inc
jnp
dec
xchg
cmp
mov
sub
in
sbb
in
in
and
ja
test
shlb
jb
jmp
dec
jmp
mov
je
jne
mov
int
test
paddusb
xor
jae
sbb
les
push
jb
aaa
xchg
ja
cmp
add
jne
aaa
adc
cs
mov
push
ret
scas
xor
in
mov
clc
nop
nop
jno
imul
push
out
icebp
mov
mov
pushf
lock
xchg
addr16
mov
std
mov
int3
pop
or
sbb
fsubrs
sbb
add
xor
adc
jge
push
ds
and
enter
loop
shlb
jno
push
or
pushf
cmp
or
pop
je
mov
jl
std
lret
pop
xchg
outsl
sbb
lret
sbbb
push
test
add
cltd
test
dec
aam
cmp
sbb
imull
outsl
js
push
nop
or
sbb
in
mov
xor
mov
add
test
jle
in
cmp
sbb
sub
xor
jg
mov
cmpb
gs
push
sbb
jecxz
shll
sbb
cmp
push
xchg
fs
cmp
ret
aas
pop
out
and
mov
mov
iret
jge
and
outsb
aad
sub
int
rcrl
dec
out
jge
mov
cmp
lock
pop
clc
rorl
mov
cmpsb
outsl
addr16
push
les
mov
xor
std
xor
cli
sbb
inc
sbb
mov
fs
xchg
xchg
jmp
stos
pop
push
adc
adc
pop
jecxz
aad
xchg
popf
jns
clc
in
jne
aad
push
cmp
xchg
cmp
aam
push
mov
mov
or
jns
adc
scas
cmp
dec
jle
and
mov
or
xlat
inc
int
and
xchg
mov
fs
repnz
inc
sbbl
cmpsl
dec
into
and
roll
pop
push
stos
mov
adc
lock
push
mov
arpl
jmp
mov
adc
inc
out
dec
jo
out
das
mov
or
sbb
adc
pop
dec
mov
xor
sub
pop
or
fwait
cmp
dec
fimull
xchg
repz
pop
jp
and
notb
insb
pop
cmpsb
repz
lret
mov
add
xchg
movsl
jo
inc
cs
xchg
inc
hlt
leave
xor
mov
push
lret
cmp
sub
gs
stos
xchg
pop
add
add
outsl
out
add
add
insl
and
push
orl
dec
dec
mov
adc
push
and
lods
adc
jno
test
sti
push
pop
jecxz
ja
xchg
lock
mov
int
pop
xchg
cli
sbb
lret
movsl
cmpsl
xchg
out
lret
push
dec
mov
outsb
fs
dec
insb
cwtl
xchg
mov
mov
popa
dec
jns
push
in
push
test
xchg
scas
or
cli
shrb
aad
es
push
sbb
iret
inc
push
push
mov
mov
mov
pop
aam
jmp
mov
push
add
in
mov
pop
push
outsb
into
dec
xor
mov
hlt
or
popa
xor
loope
ja
mov
xchg
push
je
xchg
inc
inc
or
dec
xchg
jl
lea
push
sti
fidivrs
xor
pop
jnp
jge
clc
rep
add
xor
hlt
data16
test
fwait
addl
jp
sub
sbb
ljmp
or
movsb
insl
xchg
lock
lahf
dec
loop
sub
or
push
add
daa
dec
xchg
cmpsb
inc
mov
movsl
jecxz
push
sahf
movsb
dec
shr
dec
mov
xlat
lret
or
add
in
imulb
shll
mov
or
mov
cmp
push
stc
loopne
mov
out
push
int
hlt
cmp
mov
fucomp
in
pop
mov
dec
arpl
leave
jbe
test
sub
add
jnp
xchg
mov
dec
adc
pusha
lock
ret
stos
aam
xor
sbbb
add
adc
lock
pop
rcrl
inc
mov
bound
jecxz
movsb
gs
popa
fbld
xor
fxtract
ds
imulb
mov
loope
ret
rolb
test
jne
jno
push
add
out
xchg
mov
xchg
inc
sub
jp
jb
jno
adcl
adc
aad
fdivrl
stc
sub
mov
mov
test
ja
mov
mov
clc
aas
jg
jae
add
enter
test
ds
mov
fimuls
out
loopne
fstpt
sbb
mov
dec
cmp
orb
rorb
fwait
rcll
jns
adc
push
sbb
test
sbb
ds
dec
or
bound
aaa
aad
cltd
mov
ljmp
cmpsb
mov
mov
psubw
mov
mov
aad
js
lret
aaa
mov
mov
xchg
std
fdivrp
in
fwait
dec
enter
adc
mov
xor
cmpsl
jmp
data16
lahf
mov
sbb
scas
in
stos
jmp
or
lods
add
pop
xor
sbb
jmp
add
pop
xor
cld
addr16
jecxz
pop
call
in
or
inc
or
adc
insl
push
leave
inc
daa
wbinvd
lcall
js
lods
cmp
cmp
adc
je
loop
push
xlat
and
ja
sbb
jne
and
and
cli
pushf
lods
movsb
xchg
lods
jmp
xor
push
icebp
xlat
fdivp
sbb
mov
icebp
mov
mov
cmc
cs
fs
mov
cmp
xchg
xchg
ljmp
out
lds
xchg
std
or
imul
in
lds
sub
je
scas
js
sbb
jle
fs
cwtl
adc
js
push
fcoms
inc
lods
cmp
out
ss
pusha
cltd
and
movsl
push
shlb
cld
cmp
aaa
push
test
out
in
inc
sub
adc
inc
and
and
fidivrs
scas
lcall
or
enter
adc
cwtl
mov
mov
cltd
ds
xchg
dec
gs
fwait
push
cmp
pop
je
fwait
mov
jp
test
movsl
mul
in
nop
cmp
ror
push
jg
ja
subl
daa
enter
mov
mov
adc
mov
lods
aaa
out
jno
nop
cmp
test
xchg
dec
fidivl
aas
mov
movl
xchg
add
popf
and
adc
xchg
jge
ret
sub
add
addr16
xor
cld
out
and
into
call
std
xchg
lock
adc
into
or
xor
mov
loope
add
and
mov
cmovo
mov
add
pop
addr16
and
jl
cmpsl
mov
ret
cmp
jg
adc
and
js
aas
shlb
mov
pop
lcall
sbb
xchg
sbb
lock
pop
pop
xor
ds
das
hlt
cmp
sahf
fs
xchg
dec
cmp
xor
xor
pop
xchg
mov
mov
push
outsl
cwtl
outsl
arpl
mov
adc
mov
shl
cmp
sbb
xor
shl
je
push
test
hlt
out
jnp
sbb
repnz
bound
mov
sbb
mov
push
das
cmp
ja
incb
cmpsl
repnz
fnstsw
push
and
add
dec
div
daa
js
dec
loope
xchg
aam
jns
push
pop
addr16
xchg
imul
or
ja
pop
dec
xchg
adc
jb
or
loop
loopne
imul
imull
daa
xchg
fbld
jp
mov
sub
repnz
or
jbe
xor
mov
ja
adc
int
jae
movsb
insb
test
int
xchg
xor
and
lahf
push
inc
cltd
test
aad
aad
mov
xchg
inc
push
add
cmp
insb
les
and
enter
out
bound
cmc
mov
add
arpl
mov
shll
mov
fdivrs
addl
inc
mov
and
test
test
cmp
enter
adc
or
push
xchg
testb
dec
dec
or
es
aam
sbb
clc
cmp
fldlg2
inc
mov
sub
xchg
shlb
lret
mov
push
es
aam
cmp
lods
adc
mov
call
or
mov
lret
pop
fs
pop
mov
jnp
adc
add
in
lret
xlat
push
push
dec
testb
sbb
sub
push
cmpsb
sub
cld
das
fs
sarb
jae
sub
movsb
cmp
and
test
adc
sub
mov
insl
cmp
fiadds
arpl
add
adc
cmp
dec
pop
or
push
xlat
std
arpl
shl
fadd
sbb
sub
aas
int3
je
jmp
ss
aas
and
pop
adc
cmp
ficomps
or
outsb
push
xchg
or
pop
lret
push
outsl
rclb
es
scas
sbb
push
or
mov
sub
gs
inc
cmc
insl
cli
cmp
movsl
xchg
pop
xlat
mov
cmp
cmp
mov
mov
inc
mov
cld
sarl
sti
push
and
sbb
sub
add
arpl
das
lcall
sbb
or
loop
mov
fwait
call
outsb
cmp
xchg
dec
and
mov
inc
out
dec
push
les
add
cld
fcmovnu
fldl
daa
sarl
cmp
jnp
in
rcll
sbb
in
jnp
popf
and
xchg
mov
test
sub
cmpl
dec
cwtl
pop
cmp
rcll
movsl
daa
pushf
or
pusha
mov
mov
xchg
test
jge
adc
pop
sbb
xchg
addr16
xchg
jp
mov
ret
and
insb
scas
add
outsl
lcall
stos
ljmp
into
pop
sbb
xor
dec
mov
xchg
pop
insb
sub
xor
dec
outsl
adc
pop
out
mov
sti
cs
jg
mov
shrb
sahf
paddb
push
pop
push
out
dec
dec
fsts
lea
xor
jp
insb
jmp
and
scas
sbb
xchg
pop
nop
fwait
xchg
push
repnz
ljmp
jg
pop
push
add
add
out
lret
push
sar
bound
das
or
mov
aam
stc
gs
jecxz
or
in
dec
mov
add
test
adc
add
sbb
push
pcmpeqw
xchg
inc
cmpsb
movsl
add
add
jae
push
popa
push
pushf
jecxz
mulb
shrl
cmp
mov
lock
rcl
sbbb
push
sbb
sbb
cmpsl
fdivl
cmp
fstpl
imul
sbb
mov
repz
sbb
xor
or
xchg
insb
into
dec
testb
pop
lods
xor
sbb
dec
sbb
into
enter
out
fadds
mov
inc
inc
hlt
mov
insw
add
lock
fwait
push
outsl
jmp
lret
pop
aas
xor
sti
xor
add
mov
aas
and
clc
mov
inc
outsb
add
std
lds
in
stc
xor
movsl
mov
xchg
mov
mov
pop
sub
cmp
push
mov
cmp
dec
loope
icebp
insb
sarl
pushf
xor
fdivl
inc
cld
push
or
sbb
sub
cmp
dec
loope
icebp
insb
sarl
pushf
xor
fdivl
inc
cld
push
or
sbb
sub
cmp
dec
loope
pop
insb
sarl
pushf
xor
fdivl
popa
cld
push
or
sbb
sub
cmp
dec
loope
icebp
insb
inc
jl
mov
pushf
fwait
push
add
adc
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movsl
arpl
jae
inc
iret
push
mov
push
loopne
cmp
outsl
repz
ret
outsl
sarl
mov
setae
arpl
jae
inc
iret
push
mov
add
repz
sarl
mov
setae
arpl
jae
inc
xlat
push
cmpsb
and
adc
fs
xor
xlat
insb
out
xchg
arpl
pop
xchg
daa
mov
repnz
add
test
xchg
cmpsb
xchg
ret
mov
imul
add
imul
push
fildll
cmovbe
mov
nop
xchg
mov
arpl
repz
xchg
mov
aas
icebp
je
mov
jge
nop
or
shlb
xchg
das
pushf
pushl
inc
inc
inc
lcall
inc
dec
rolb
out
cmp
jl
pop
jge
mov
adc
out
and
cld
lahf
inc
ja
nop
repnz
aas
dec
loopne
imul
xchg
xor
pop
out
mov
call
movsb
xchg
sbbb
mov
pop
aas
inc
call
out
jae
inc
fcoms
and
adc
ja
inc
ret
push
shll
mov
push
aad
push
mov
fisttpl
popf
data16
or
and
jp
push
jmp
out
cmp
inc
rcrl
cmpsb
outsl
lahf
sbb
pop
fsubrl
paddw
aaa
iret
daa
dec
scas
xor
jecxz
repz
ret
dec
sarl
mov
setae
arpl
jae
inc
iret
push
mov
add
repz
ret
dec
sarl
mov
setae
arpl
xchg
andl
cli
sbb
mov
lea
mov
or
adc
push
and
add
pop
gs
andb
fwait
lods
cmp
mull
jge
xchg
xor
cld
jmp
pusha
iret
push
cli
outsb
lret
rorb
pop
inc
push
jl
cmc
inc
sub
inc
sub
jne
push
pop
xlat
int
lret
les
pop
jle
in
js
nop
out
sub
pusha
mov
xor
xor
iret
es
cltd
in
mov
test
mov
rcrl
jecxz
xchg
dec
je
and
sub
sahf
outsb
pop
push
pop
rolb
sbb
dec
dec
push
xchg
dec
adc
push
add
js
addl
insl
xchg
push
cmp
imul
insb
inc
std
jae
int3
sbb
sub
mov
das
and
add
xlat
sub
lock
arpl
int3
xchg
gs
mov
jbe
mov
jl
mov
ffree
lret
jge
sub
cwtl
jne
stc
xchg
jle
jno
les
divl
dec
adc
add
adc
dec
inc
push
cld
dec
dec
call
cs
pop
push
jno
outsb
xchg
dec
cmp
std
mov
or
outsb
cld
test
or
inc
jnp
adc
pop
sbb
addl
lea
shrb
jg
add
xor
dec
loop
xchg
mov
inc
push
add
sbb
sub
jne
les
stos
sub
ret
ja
cmc
cmp
mov
lcall
into
xor
test
pop
sahf
xchg
xor
test
arpl
or
mov
xor
jp
jno
sbb
adc
xchg
ja
lret
les
pop
cmp
fimuls
clc
lds
test
xchg
scas
jp
sbb
cmpsb
cmp
insl
sub
sbb
inc
mov
jb
pop
jecxz
sar
test
outsl
shrl
jle
imul
popa
xchg
cmp
sub
or
mov
scas
sbb
pop
jb
push
pop
addr16
sub
sub
and
shlb
mov
es
lret
mov
js
leave
cs
push
lods
mov
mov
jmp
inc
int
dec
xchg
add
into
push
jg
push
and
dec
cli
mov
lret
xrelease
inc
pop
jmp
cmc
pop
scas
adc
jmp
stos
insl
jle
dec
jns
pop
xlat
and
daa
scas
sbb
repnz
jmp
mov
movsb
inc
js
pop
mov
pop
push
mov
add
insb
cli
repnz
rcrb
fnstenv
movsl
and
test
mov
jge
int3
push
scas
stos
inc
sub
xchg
rcll
sbb
jnp
lahf
insl
push
sti
js
sub
jl
xor
cmp
sbb
jno
and
pop
or
fiadds
pop
data16
add
lea
dec
mov
jae
xlat
mov
lahf
pusha
sbb
and
enter
movsl
ljmp
pop
pop
lds
push
jg
mov
cmp
gs
sub
outsb
punpckhbw
adc
cmp
insb
ficompl
sub
pop
test
fs
notl
rorl
nop
xchg
lcall
mov
mov
popf
or
dec
fs
dec
add
mov
in
dec
lret
gs
out
lods
pop
sub
jg
cmpsl
xor
insb
mov
aas
iret
iret
dec
loop
scas
mov
pop
and
mov
xchg
add
psraw
ficoms
pop
dec
stos
push
jne
sbb
shl
sbb
repz
test
mov
or
mov
movl
push
dec
dec
xchg
push
jo
xor
je
das
mov
xchg
sub
cld
rorb
cmpb
pusha
mov
fadds
sar
sbb
mov
push
xor
jg
jns
mov
jo
mov
or
test
mov
push
repz
fs
fdivrl
jmp
pop
repnz
pop
js
addr16
push
cmp
jo
xchg
lret
int
ret
insl
leave
pop
icebp
xor
jo
sbb
mov
pop
jmp
jg
adc
xor
out
jns
negb
jg
lock
jle
mov
imull
xor
into
das
repnz
jb
cld
mov
rcrb
mov
cmp
add
lods
hlt
or
push
out
test
addr16
mov
mov
hlt
cld
adc
xor
imul
jle
jne
push
inc
mov
jne
aas
push
icebp
jl
or
imul
mov
mov
insb
fldcw
push
cmp
mov
cmovnp
ficoml
pop
dec
mov
sub
scas
fdivrs
cmp
fcompl
ret
mov
clc
dec
loopne
inc
les
cmp
sub
pop
out
js
sub
ljmp
cmp
sub
mov
test
pusha
fldt
and
leave
cmp
leave
and
push
das
push
sub
fyl2xp1
aas
mov
jo
movsb
repnz
fimull
mov
dec
loopne
pop
mov
xchg
out
and
test
lock
xchg
pop
dec
add
stos
fs
dec
and
sbb
inc
fimuls
add
jno
sarl
xor
loope
pusha
jl
jb
lods
montmul
cmpsb
inc
popf
arpl
cmpb
fdiv
loope
mov
pop
xor
dec
push
dec
lods
rorb
push
xchg
push
icebp
test
jne
xor
stos
je
fbstp
push
jb
add
sti
leave
mov
or
xor
push
mov
xor
xchg
outsl
add
cmp
push
mov
repnz
fdivl
mov
mov
jp
popa
mov
sti
inc
insb
jb
out
push
idivl
jge
outsb
adc
mov
cmp
test
add
incl
addb
cmpsl
pop
test
std
sub
xchg
or
mov
int
stc
push
lods
test
cmpsb
les
fcomps
cmp
inc
xchg
xor
ret
pop
pop
pop
insb
sbb
pop
jo
aas
mov
outsl
adc
in
push
in
out
call
add
push
aaa
fdivrp
pop
jle
bound
pop
dec
dec
mov
loopne
ja
pop
add
push
loop
lea
daa
cmp
or
inc
adc
das
pop
fsubrp
das
scas
stc
mov
imul
or
es
gs
jecxz
and
adc
mov
bound
cmp
sahf
inc
mov
mov
mov
push
mov
sbb
adc
dec
adc
cmp
out
bound
leave
pop
push
lret
mov
shll
negl
xor
shll
pop
hlt
lahf
leave
and
cmp
ljmp
lods
outsb
push
mov
fisubl
sub
xor
sub
cmp
cmp
std
or
bound
gs
push
je
repnz
popf
sti
arpl
inc
and
xchg
scas
sti
add
push
aas
xchg
mov
add
mov
sbb
ret
push
dec
imul
sbb
dec
mov
push
fwait
inc
xor
aas
mov
leave
inc
sub
popa
in
ljmp
dec
nop
or
jmp
nop
stos
mov
adc
dec
loope
pop
cmp
in
adc
rcl
pop
sub
fadds
jp
inc
mov
push
push
mov
mov
sub
push
sub
sbb
out
test
rorl
or
jne
add
or
in
insl
pop
addr16
mov
cld
mov
push
pop
cwtl
lea
cmpsb
xchg
loope
dec
les
iret
sbb
xor
subl
sbb
fisttpl
inc
cmp
dec
jl
shl
xorb
mov
cmp
mov
dec
andl
mov
xlat
mov
inc
mov
ds
icebp
mov
lods
shrl
pop
fsts
adc
mov
ds
and
pop
jle
jne
test
inc
adc
ret
outsl
out
pop
cmp
mov
add
jecxz
in
mov
int3
imul
lret
frstor
xor
imulb
daa
negl
hlt
cmc
fistps
cli
jle
into
in
sti
and
push
push
cmp
xor
jle
mov
mov
pop
mov
adc
mov
jp
mov
insl
jbe
cmp
repz
cli
lock
mov
jl
push
and
sbbl
push
add
mov
inc
mov
xor
push
lret
and
cmpsl
fisttps
mov
pop
xor
xchg
dec
mov
xlat
je
lahf
leave
dec
or
pusha
icebp
sti
mov
cmp
mov
xorb
sahf
or
push
add
repnz
mov
xchg
mov
sub
imul
sub
jae
lret
sbb
mov
mov
mov
insl
adc
sub
repz
cmp
aad
arpl
loope
mov
and
pop
jbe
add
sbb
aas
test
lahf
cmp
std
ds
fidivs
iret
inc
mov
inc
mov
cmc
push
xchg
cmp
push
adc
mov
dec
scas
sbb
xchg
push
pop
faddl
sbb
adc
pop
and
sbb
cmp
aas
pusha
lods
test
mov
enter
pop
fidivl
mov
mov
push
inc
adcl
xchg
test
aaa
mov
pop
mov
bound
outsl
sbb
out
mov
inc
aam
andb
xor
mull
inc
push
sub
push
ffreep
das
nop
push
clc
and
sbb
fnsave
bound
adc
lock
sub
test
sub
pop
nop
sub
xor
inc
pop
add
inc
sahf
div
push
cmp
pop
adc
fucom
push
inc
aas
stos
stos
cwtl
nop
xchg
mov
pusha
mov
mov
add
scas
push
js
inc
jno
cmp
adc
test
or
push
cmp
lret
mov
popf
sbb
add
adc
xor
int
pop
pop
imul
and
lcall
cmp
cmp
ss
dec
mov
in
dec
out
adc
sarl
jle
and
jl
dec
cwtl
jge
lods
lahf
and
add
inc
fwait
cmp
fimuls
testl
fsubl
lds
fwait
sbb
aas
lret
ljmp
daa
mov
icebp
decl
int
add
popa
movsl
cmp
add
aaa
pop
sub
in
fsub
imul
flds
add
xchg
in
stos
pushf
stos
aam
mov
or
add
sub
mov
clc
sbb
and
xor
lods
xchg
push
addr16
cs
outsl
loop
add
into
or
pop
dec
push
cmp
stos
popa
jbe
call
cli
arpl
mov
add
sub
stos
iret
mov
rolb
icebp
sbb
out
mov
dec
sub
xor
pop
adc
xchg
sub
std
movsb
mov
fs
filds
sub
cmpsb
cmpsb
cmc
inc
loopne
sub
out
cmp
sbbb
jne
outsl
sbb
mov
or
loope
xor
data16
cmpsl
cwtl
pop
push
jae
jae
inc
jne
xchg
fiadds
adc
shll
je
fdivl
cld
mov
and
test
add
inc
clc
into
fsts
xlat
xor
mov
mov
or
mov
jbe
in
jne
fucomp
lahf
loopne
mov
adc
adc
fcoml
test
cmp
mov
add
stos
fldcw
aam
int
int
mov
cmp
aam
adc
push
rorb
jl
js
jne
mov
repz
and
loope
xchg
ret
mov
cs
mov
pop
mov
jle
mov
jbe
setb
out
lret
inc
inc
or
pop
mov
mov
in
nop
mov
jmp
jbe
lock
lds
lret
outsb
xor
dec
loopne
xchg
pop
push
push
sbb
jae
and
xchg
and
in
push
pop
call
dec
fadd
movsl
pop
mov
nopl
test
xor
aas
dec
rolb
add
xor
jp
aad
push
xor
mov
ljmp
cmp
inc
push
sbb
cmpsl
pop
sub
or
test
jae
sbb
sbb
testb
mov
xor
add
cmc
jo
subl
divb
addl
inc
jno
pop
lret
mov
adc
jl
rcr
mov
int3
sub
dec
inc
sub
clc
arpl
sub
movsb
jo
pop
scas
cmp
fs
lods
stos
pop
pop
push
notl
dec
inc
loopne
jecxz
cld
jno
xchg
lock
sub
fcmovnu
shr
or
mov
mov
xlat
popf
push
mov
into
xor
mov
adc
sub
cmp
mov
pushf
mov
iret
push
mov
dec
xchg
lea
mov
int
push
std
inc
xchg
loope
mov
xor
test
lret
pop
and
lea
sub
ret
mov
dec
fldl
cmp
mov
fs
scas
imul
lahf
mov
mov
ss
ret
mov
and
in
enter
push
es
sub
cmp
add
leave
jl
aam
mov
adc
loopne
ss
out
retw
pusha
ss
cltd
mov
shll
mov
lret
inc
xor
lret
stos
insb
sub
cwtl
gs
add
jl
test
inc
xchg
fldl
xchg
inc
jle
mov
jg
shll
test
scas
decb
negl
pop
sbb
or
push
mov
ja
jmp
lods
lock
xor
mov
jle
rorb
push
dec
inc
lods
jmp
mov
cmp
or
sub
push
insl
stos
lret
push
je
dec
add
out
aam
nop
lcall
adcl
inc
xorl
fcoml
mov
test
sbb
mov
fisttpl
xchg
das
bound
aad
add
push
repz
out
and
in
inc
mov
test
mov
xor
data16
xchg
or
mov
mov
jle
xchg
pop
pop
adc
cmpsl
push
inc
or
pushf
and
mov
popa
push
pop
ret
mov
ret
dec
mov
mov
or
test
add
fistpl
fldcw
test
sbb
lret
jbe
jp
mov
ret
mov
les
out
or
xor
pop
and
lret
lcall
and
cmpb
jnp
std
jg
lret
stos
in
mov
sbb
call
insb
loope
dec
clc
les
xchg
and
arpl
shrl
dec
pop
out
sub
lcall
push
out
sbb
xor
ret
add
out
jnp
les
pop
mov
aad
les
rcll
daa
xchg
push
mov
jp
mov
jns
sub
dec
jbe
testl
test
cmpb
cmp
lods
gs
repnz
jge
or
fs
push
jle
xor
push
xor
fsubr
inc
mov
jne
xchg
aaa
rsqrtps
out
push
add
xchg
out
sub
push
aaa
rcrb
sbb
or
fsubl
add
je
push
call
movsb
pop
rclb
andl
daa
add
xor
pop
popa
push
testb
int3
xor
xchg
fdivrs
or
test
iret
lods
dec
loope
popa
dec
mov
add
mov
pop
inc
fsubrs
fsts
ljmp
loope
xchg
shlb
or
inc
dec
mov
lea
notl
xor
mov
insb
scas
push
repnz
push
pop
jecxz
nop
dec
lock
mov
pop
fldcw
outsb
cmpsl
mov
lock
push
push
jecxz
push
add
data16
push
loop
jne
and
dec
jb
cwtl
scas
sub
jbe
jl
jae
flds
xchg
push
sti
cmp
imul
int
lds
sahf
je
je
mull
or
repnz
popa
xchg
mov
sub
xchg
mov
insl
sub
sbb
jb
leave
fiaddl
pop
orb
sub
fwait
pop
cmp
mov
mov
js
int3
dec
dec
in
mov
jnp
pop
inc
mov
ds
out
mov
hlt
pop
lods
orb
mov
sbb
jb
add
mov
cs
jge
xchg
xor
push
popa
jne
test
lods
ret
jp
leave
sbb
bound
mov
fwait
movl
xchg
dec
push
rcr
inc
jle
fiaddl
enter
rcll
dec
test
adc
add
dec
inc
mov
lods
mov
mov
xorl
pop
cmpsl
out
pusha
sub
push
and
cmp
outsl
leave
add
sahf
outsb
sbb
mov
or
out
bound
and
pop
ds
and
xchg
popl
inc
dec
movsb
push
cmp
dec
shrl
ja
push
pop
ret
loop
sbb
or
stos
test
sub
int3
hlt
in
std
xchg
stc
rcrl
out
cltd
mov
mov
aam
jae
or
xchg
sahf
cmp
jo
jmp
outsl
sahf
hlt
movsl
mov
mov
mov
in
jg
lds
arpl
cmpsb
lods
iret
jl
adc
cmp
roll
es
mov
test
loopne
fcompl
jo
aad
lahf
push
push
xchg
aaa
mov
push
fidivrs
dec
mov
jecxz
mov
out
and
jle
loope
add
and
filds
adc
xlat
mov
mov
sbb
hlt
add
adc
jg
sti
arpl
jecxz
repnz
cmpsl
sub
jle
test
or
or
jne
sbb
xchg
fbld
push
jnp
cmp
push
enter
std
jmp
inc
aam
inc
incb
xor
frstor
out
fwait
add
jo
mov
andb
mov
imul
rcrb
loop
push
xorl
push
cmpsl
add
repz
negl
push
neg
xchg
inc
in
mov
into
mov
sbb
jge
push
sub
jno
movsl
pop
cmp
jne
or
push
cmp
shll
mov
cli
inc
mov
xchg
adc
clc
jl
jne
pop
xchg
jb
insl
lds
lds
and
add
lcall
pop
sub
adc
ret
mov
outsb
inc
push
push
jg
fdivp
popf
movsl
mov
test
inc
ljmp
ret
shlb
mov
stc
jae
ret
shl
sub
inc
rcl
fimull
lahf
pop
faddl
lds
xor
iret
or
pushf
mov
outsl
dec
mov
sahf
push
iret
movsb
rclb
movsl
stos
xor
jb
xlat
or
push
mov
loope
xchg
jb
jnp
sub
mov
mov
mov
addl
fimuls
xor
out
je
fistpl
fstl
imul
xor
stc
cmp
mov
aas
loopne
xor
lret
and
fcomps
mov
test
xlat
xor
mov
inc
andl
std
cs
pop
out
rorb
adc
sbb
out
call
ss
test
xlat
aam
inc
cli
cmp
xor
insl
leave
cli
into
rorb
fadds
or
notl
leave
popf
cmpsl
jp
pop
retw
inc
daa
js
out
mov
inc
dec
jg
mov
in
scas
arpl
inc
jg
cmpl
xchg
cs
mov
cli
aad
cmpsb
jb
jbe
dec
lcall
lods
mov
cmp
lcall
pop
jge
mov
sub
stc
push
xor
xorb
lret
jmp
adc
jns
shr
pushf
lods
jbe
inc
std
out
in
push
mov
out
sbb
mov
xor
inc
xor
cwtl
aad
nop
mov
dec
stc
inc
cmp
stos
jne
cmp
adc
cmp
fisubrs
shll
or
dec
cmpsb
pop
pop
sub
jp
fucom
xor
into
xor
mov
cmc
outsl
lea
outsb
lret
sub
inc
push
es
or
in
xchg
outsl
lds
sub
add
or
decb
fldenv
jno
adc
push
out
jl
cltd
mov
and
nop
es
repnz
icebp
sbb
mov
std
in
sahf
leave
sbb
subl
sar
loopne
cld
jbe
loopne
loopne
fs
jns
imul
fwait
lret
lahf
xorl
mov
jecxz
lea
icebp
mov
stc
in
loope
jp
cmp
and
adc
outsl
repz
ret
dec
sarl
mov
setae
arpl
jae
inc
iret
push
mov
add
repz
ret
dec
sarl
mov
setae
addr16
jae
inc
iret
push
mov
add
repnz
ret
dec
sarl
mov
ds
lret
arpl
jae
inc
iret
push
mov
orl
sbbb
cmc
ret
dec
movsb
dec
sub
insb
imul
pop
lret
daa
add
mov
push
out
addr16
imul
xlat
sub
or
or
sti
pop
jmp
fidivl
lret
daa
mov
ja
pop
jnp
imul
mov
or
sti
pop
jmp
lret
daa
mov
ja
addr16
imul
inc
nop
cmp
jmp
xchg
pop
fwait
daa
xor
inc
pusha
cld
mov
repnz
jle
fbstp
xchg
mov
mov
scas
imul
adc
insl
push
jecxz
js
mov
aam
adc
repz
pop
ljmp
pop
and
adc
or
ret
cwtl
jb
pop
cmp
jmp
sti
pop
daa
jo
hlt
xchg
sbb
lods
js
xor
cmp
std
add
push
arpl
mov
stos
push
fbld
inc
adc
lret
or
mov
sahf
div
sbb
xchg
jmp
push
daa
dec
addr16
push
arpl
test
mov
xlat
sub
pop
jmp
lret
daa
mov
ja
addr16
imul
xlat
sub
sbb
or
mov
test
clc
xor
fdivl
out
xor
out
flds
dec
xchg
addr16
jg
movsb
jb
bound
cmp
or
faddl
and
cs
pop
dec
mov
lds
inc
jmp
cli
jns
inc
fwait
ja
addr16
imul
xlat
sub
sbb
or
sti
pop
jmp
lret
daa
mov
ja
addr16
imul
xlat
sub
sbb
or
sti
pop
out
outsl
push
ficompl
test
clc
jg
insb
jle
sbb
notl
ret
jl
add
aad
lods
sub
mov
movsb
loope
pop
scas
lahf
gs
sbb
jne
ja
dec
pop
and
push
sub
jno
shlb
xchg
adc
lock
lret
adc
sti
nop
test
add
mov
dec
sub
or
jo
xchg
jp
cmc
pop
test
mov
pusha
fdivrs
sbb
mov
mov
and
negb
movsl
aam
sahf
adc
test
adc
jae
lcall
sbb
mov
mov
push
inc
ljmp
ror
test
shrb
jmp
and
dec
bound
int3
mov
or
sbb
dec
test
sti
cmp
rcll
test
and
xchg
rcr
outsl
sarb
and
and
aad
or
scas
and
push
adc
xchg
cld
push
dec
add
lock
cld
add
inc
ret
xor
xchg
mov
add
jecxz
fistpl
jle
jecxz
mov
jecxz
jnp
lods
sub
bound
mov
push
sbb
loopne
movsb
cmp
cltd
cli
jp
cmp
lcall
xorb
jno
dec
mov
mov
mov
movsb
stc
cmpsb
aas
xchg
in
sub
xchg
or
or
dec
jno
pop
das
fiadds
out
mov
andb
repz
mov
fstl
mov
cli
add
mov
pop
push
fcompl
pusha
popf
sub
jp
test
sub
in
sbb
out
pushf
in
aaa
mov
pop
movsl
sahf
jb
lods
push
mov
scas
insb
outsl
addl
pop
mov
jnp
mov
movsb
sub
data16
in
add
fldt
pushf
cmc
ss
test
dec
sti
push
adc
dec
jae
int
push
ds
movsb
ljmp
lds
lea
jns
lret
ret
pop
sbb
inc
into
mov
push
add
shl
inc
xor
lcall
aam
or
jo
adc
mov
pop
bound
jl
mov
sahf
std
mov
sub
es
cs
inc
or
adc
cmc
pushf
fbld
xlat
xchg
movsl
cmpsb
notb
lret
jne
or
lods
out
mov
sbb
out
sub
scas
push
mov
es
sti
xchg
ret
cmp
xchg
cli
xor
mov
pop
repnz
push
nop
fwait
arpl
jo
adc
aas
mov
sub
sub
jle
orl
xor
push
jns
stc
mov
lret
pop
adc
bound
ljmp
dec
add
push
jo
push
inc
xor
rorb
cmp
cmpsl
pop
adc
pushf
daa
gs
aad
and
pop
or
and
jp
xchg
xchg
subb
lock
sub
shll
mov
lods
js
imul
push
sbb
mov
mov
jno
pop
pusha
jo
ret
pop
orl
outsl
mov
sub
adc
jb
test
push
cmc
faddl
xchg
xchg
jnp
lds
in
or
push
push
fdivr
repz
mov
std
cs
imul
outsl
dec
mov
sub
xchg
add
test
es
jl
sub
mov
les
aaa
xor
add
pop
inc
xchg
insb
push
mov
scas
push
and
nop
inc
or
sub
push
ss
jnp
cs
movsb
lds
and
or
lods
inc
dec
adc
pop
add
push
inc
inc
mov
sbb
ret
into
inc
dec
fidivrs
stos
sbb
mov
nop
add
push
xor
adc
cmp
push
add
xor
sub
je
inc
xchg
test
rorl
sub
icebp
inc
mov
testl
stc
bound
adc
mov
ss
xchg
inc
mov
das
inc
popf
cmp
pop
jnp
lods
sbb
leave
mov
arpl
mov
imul
pop
lcall
push
jnp
les
mov
imul
fldcw
mov
mov
or
xor
ds
mov
jne
cmc
mov
cld
les
push
inc
fucomip
or
sbb
cmp
insb
dec
sub
hlt
xor
pop
jmp
jns
inc
sbb
cmp
mov
xchg
stc
int
leave
dec
mov
inc
xchg
push
lcall
jns
mov
or
xchg
test
aas
sarb
fcmovnbe
roll
aaa
movsl
adc
jae
xchg
mov
cmp
mov
jmp
shll
mov
push
or
ss
insb
mov
es
push
cmp
add
pop
ds
out
pop
fimuls
lds
loop
xor
ret
ret
add
ret
jecxz
scas
cltd
out
cs
nop
sub
xchg
and
fwait
cs
stos
pop
xor
cmpsl
ret
jmp
les
mov
cmpsb
lret
xor
aaa
lds
xor
lds
xlat
xor
sub
add
cmp
test
and
mov
mov
sbb
xchg
aam
mov
dec
lret
pusha
popa
jmp
mov
sarl
and
mov
or
cltd
jae
leave
imul
pusha
subl
scas
movsb
xchg
fistl
inc
jg
dec
mov
sbb
cmpsl
jge
and
cmpsl
and
shl
imul
fld
in
add
jb
js
inc
inc
cmc
icebp
push
test
movsb
or
imul
and
fmull
adc
cmp
pop
roll
mov
inc
jg
addb
pop
notl
or
out
mov
lahf
in
fistl
sub
pop
jo
dec
fcmovb
lods
popf
test
dec
jge
or
decl
int3
ret
mov
adc
outsb
push
dec
dec
das
popf
xlat
jo
mov
mov
sbb
and
outsl
sub
xor
pushw
mov
sbb
xor
inc
outsb
push
and
fidivrl
lock
rolb
cmp
ret
push
mov
aam
js
mov
push
push
sbb
mov
ljmp
mov
push
iret
lcall
push
out
rcrb
mov
xor
fimuls
jne
xadd
cmpsb
ficoms
adc
sub
xor
sar
cmpsb
push
adc
int
das
xor
movsb
fistpl
adc
mov
ret
mov
jns
scas
or
adcb
push
xchg
in
in
pusha
xchg
pop
cmp
stos
mov
mov
outsl
andl
dec
cmc
in
sbb
and
or
ja
push
cmp
iret
sub
lret
xor
mov
rcrb
and
call
mov
mov
mov
stos
xchg
jns
testb
push
push
push
adc
or
je
scas
fisttpl
mov
add
sahf
mov
jb
dec
cwtl
pop
mov
nop
lcall
or
jns
adc
push
loopne
insl
rcrl
dec
addr16
push
xor
shlb
sbb
ret
inc
adcl
push
dec
mov
std
inc
adc
shl
aam
lahf
lock
outsl
push
inc
pop
loope
jp
pop
push
lods
cmp
sub
stc
mov
xor
outsl
cld
in
das
loop
xlat
or
xor
xchg
mov
out
push
bound
mov
call
jl
repnz
stos
hlt
push
adc
jg
xor
ret
fwait
addr16
jne
mov
sub
mov
jl
scas
mov
mov
xor
test
fwait
push
sbb
adc
push
fldcw
and
sub
lcall
mov
push
loope
rorb
rol
je
in
rcr
sub
sbb
pop
jg
leave
movsb
inc
fcoml
test
adc
jmp
jp
push
mov
add
adc
mov
call
pop
test
fnstcw
inc
mov
pop
mov
adc
sub
mov
pop
add
repnz
inc
mov
cmp
xlat
mov
ss
xor
pop
fs
cmp
jne
adc
mov
ja
out
and
push
lods
cmp
push
jmp
scas
jo
vsqrtss
aas
fsubs
loope
ljmp
sbb
test
mov
repz
in
mov
arpl
mov
repz
jge
push
ljmp
sarb
inc
outsl
xchg
imulb
stc
and
aam
push
mov
mov
jns
pop
inc
stos
xor
mov
fnstcw
jns
cmp
out
cmpsl
ret
and
mov
mov
mov
pop
xor
out
cmpsl
imul
push
sbb
or
or
mov
sub
sbb
or
cmp
mov
mov
notb
cmpsb
sbb
aaa
popf
jo
adc
and
outsb
in
cwtl
lret
pop
sti
fs
jne
add
jbe
push
or
mov
pop
or
mov
sub
dec
into
lods
xor
stc
cmpsl
inc
jns
popf
lahf
rcrl
call
sti
pop
stos
fs
mov
out
sub
jbe
or
std
popf
das
pop
dec
sub
push
fisttps
repnz
jge
mov
or
inc
inc
aad
icebp
mov
mov
cmpsb
and
push
inc
mov
fidivl
shll
lds
outsb
push
mov
nop
ja
loope
outsl
xor
add
xchg
rcr
icebp
js
outsb
negl
mov
xchg
rorl
daa
and
adc
es
lds
repz
out
imul
stos
dec
movsl
push
das
inc
xchg
mov
lods
adc
jbe
jl
xor
fists
loopne
xor
daa
orl
ror
not
idiv
mov
xchg
movsl
cmp
sub
xchg
iret
cmp
lock
pop
imul
rorl
fadds
mov
sbb
mov
test
lret
ret
dec
cld
dec
xor
jmp
lcall
pop
notb
or
and
sub
loop
adc
sub
gs
mov
pop
push
mov
int3
jecxz
loopne
ss
push
stos
scas
mov
ret
or
inc
stc
fcoms
push
cli
push
cmp
jg
daa
and
jns
stos
dec
aaa
mov
addb
icebp
push
cmp
adc
lods
dec
push
xor
pop
dec
xchg
jae
pop
jnp
not
mov
mov
inc
bnd
cmp
mov
xor
pop
sub
dec
stc
lods
mov
rol
imul
hlt
fstl
mov
pushf
sbb
add
jbe
push
push
inc
orb
imull
leavew
popa
arpl
popa
fimuls
and
sbb
mov
jbe
popa
scas
xor
shrl
stos
xchg
int
pop
fcoms
call
test
xchg
orl
loopne
lock
xchg
and
nop
add
out
cld
lea
add
lcall
add
addb
or
fimuls
jle
add
rep
mov
and
xchg
inc
fwait
and
or
jae
and
loope
add
scas
add
out
divl
andl
js
insb
and
mov
shrb
out
jmp
loop
scas
dec
or
fiadds
fiaddl
cld
in
pop
adc
inc
ja
scas
faddp
lods
dec
mov
stos
mov
push
jns
adcl
push
inc
or
mov
pop
aad
hlt
push
test
xchg
rolb
divb
les
xchg
cmp
cmp
std
and
jb
push
int
sub
insb
push
cs
sbb
test
jg
andb
ljmp
xchg
ficoms
add
or
ret
in
rcr
cmp
push
repz
bound
and
push
or
and
fwait
sbb
inc
addr16
fucomip
rolb
ds
or
fucomi
mov
push
inc
ja
xchg
fidivrl
adc
cmp
cmp
enter
pop
sbb
shll
cmc
cmp
test
sbb
sti
cwtl
jo
xor
mov
cmp
daa
and
fwait
jne
mov
bound
dec
out
push
insb
and
and
call
pushf
xchg
fwait
fwait
adc
in
xor
js
fcoms
fistpl
cmp
push
cs
jl
push
dec
je
call
mov
push
popa
icebp
sarl
movsl
hlt
and
ds
mov
adc
movsl
data16
pushf
adc
jmp
test
mov
fbstp
jecxz
push
xorb
bound
ss
sub
mov
ss
sbb
test
mov
and
xlat
sbb
les
push
xor
mov
in
push
inc
insb
lcall
outsb
pushl
ljmp
mov
lcall
xor
inc
adc
mov
insb
outsl
mov
xchg
rolb
push
enter
mov
ret
pop
movsb
cltd
popa
cld
jno
in
in
ss
lcall
es
dec
testb
stos
xchg
icebp
jns
add
xchg
jne
popf
pop
mov
sub
insb
sbb
push
and
aam
push
adc
xchg
mov
out
add
inc
lcall
sahf
lods
or
pop
dec
scas
int
imul
iret
inc
mov
jbe
loopne
imul
mov
inc
adcb
xchg
popf
lock
pushf
out
and
repz
pop
pusha
xchg
sbb
sti
or
mov
das
sete
or
push
stos
jo
mov
push
cmp
repz
cli
popf
out
inc
lods
push
add
shrl
test
pop
arpl
stc
xchg
ds
mov
add
nop
mov
mov
popf
movsb
mov
subb
aad
in
fstl
in
mov
lcall
lods
lret
shlb
cltd
mov
call
or
sub
fwait
insl
xchg
push
jnp
loopne
lcall
insb
push
xlat
push
ret
mov
aam
loope
imul
adc
sbb
outsl
mov
push
test
push
add
pop
xor
sub
xor
daa
dec
jnp
dec
mov
insb
pop
test
jno
sahf
xor
lods
ljmp
enter
pop
out
faddl
dec
adc
push
arpl
inc
sub
inc
adc
inc
ja
cmp
pop
mov
aaa
inc
mov
xor
push
imul
and
fstpl
enter
pop
or
fbld
out
insl
les
leave
push
ret
fisttps
pushf
push
lret
sub
cmp
adc
out
cltd
sbb
jno
jl
mov
xor
mov
jne
cmp
gs
jl
push
inc
sbb
or
adc
mov
xchg
push
add
dec
insb
leave
lcall
pop
pop
rcrl
cld
es
jo
in
das
jecxz
sub
or
cmpsb
dec
mov
xlat
adc
out
mov
loopne
mov
out
jge
pop
fstpt
pushf
dec
je
arpl
add
fwait
push
imul
mov
sbb
and
mov
xchg
jmp
gs
mov
add
cmp
pop
dec
nop
movsl
pop
inc
pop
push
out
rclb
jns
lcall
mov
add
pop
jae
lret
add
sbb
ja
sbb
dec
sub
jg
cld
sahf
or
push
cmc
pop
xchg
push
js
sbb
push
pop
out
jne
inc
jp
xchg
daa
pop
movb
stos
mov
mov
adc
test
push
cmp
lret
aas
inc
cltd
xor
mov
sub
xor
outsl
repz
hlt
loopne
cmp
mov
dec
mov
and
mov
lods
mov
nop
notl
sahf
lods
mov
inc
dec
test
add
cmpsl
lock
test
push
and
cmp
adc
in
mov
xor
mov
inc
repz
addr16
test
inc
ljmp
cld
inc
jae
push
and
leave
mov
mov
jmp
movsl
ficomps
imul
inc
pop
lea
jb
adcb
and
int
inc
jmp
push
jp
into
mov
andl
into
stc
add
xchg
pop
call
sub
mov
outsl
ss
bound
add
testb
jb
iret
dec
int3
bound
notb
jae
stc
adc
test
gs
pop
cmp
aaa
push
cmp
in
inc
jle
jno
stos
pop
xorl
and
pop
jp
fidivrl
dec
xor
call
xor
adc
fists
fdivs
fs
inc
mov
add
dec
ja
xchg
mov
mov
xor
or
adc
adc
xchg
ror
mov
add
mov
mov
and
fildll
cld
jae
sub
or
sub
sar
lea
xchg
sbb
xor
test
lds
mov
jg
popa
mov
sbbl
cmp
into
xor
mov
enter
outsl
enter
xor
data16
aad
sub
pop
mov
push
or
pop
sarl
testb
jl
mov
data16
xchg
sti
dec
xchg
push
inc
stc
mov
aas
filds
hlt
out
jp
push
xor
daa
or
jle
mov
test
adc
adc
mov
int
jmp
pop
andl
in
xor
or
cltd
arpl
and
sbb
mov
push
xor
cmp
dec
rorl
pop
jge
xchg
int
movsb
sub
jp
aad
pop
xchg
repz
mov
mov
mov
or
or
jge
iret
adc
loope
xor
cmpsb
mov
fs
icebp
adc
dec
daa
mov
imul
cmpsl
fadd
sahf
sbb
xchg
nop
inc
scas
mov
push
aam
push
adc
cld
loop
jno
stc
and
mov
test
inc
push
xlat
es
push
lods
stos
jmp
cs
dec
pusha
cmp
and
cli
stos
jge
jne
push
shlb
and
arpl
xor
mov
jmp
xchg
push
js
push
or
ret
xchg
mov
or
inc
data16
addr16
mov
jne
push
xchg
pop
xchg
int
leave
sbbb
ds
mov
insb
mov
iret
loope
pop
or
inc
push
cmpsl
fs
out
mov
stc
repz
or
xor
sbb
push
cmp
stos
fsts
clc
adc
lods
jl
jae
push
xchg
add
fstpl
loop
jp
xchg
hlt
xor
xor
push
push
sub
cmp
fnclex
push
xor
iret
enter
pushf
clc
addl
loop
ja
stc
loop
xor
ljmp
ljmp
push
push
jae
out
adc
dec
imull
decb
jecxz
faddl
sti
cmp
xchg
test
jge
idiv
push
andb
shlb
ja
lods
add
jns
mov
mov
lea
mov
mov
push
imul
and
out
rcr
mov
out
pop
pushf
ret
inc
repz
pop
ja
loop
inc
or
jecxz
hlt
jge
loope
mov
jge
mov
and
sti
mov
sub
inc
mov
pop
blcs
rclb
jg
arpl
mov
or
sub
out
repz
mov
mov
js
inc
push
dec
push
icebp
add
sahf
shl
out
test
mov
and
jl
faddl
ss
test
fisubrs
ja
mov
xchg
adc
push
sbb
push
add
mov
or
outsl
dec
cs
sti
fbld
pop
xor
les
imul
bound
lahf
fiaddl
gs
jae
jae
jne
out
pop
push
inc
daa
seto
aam
scas
add
adc
add
cld
divl
jbe
arpl
movsl
cltd
xchg
inc
pop
dec
rcrb
xorb
lret
mov
jp
xchg
lret
and
cmp
sub
mov
jge
dec
incb
rcr
push
pop
js
cmp
mov
call
jmp
xchg
and
pop
sbb
push
jb
sti
mov
jnp,pt
test
lret
mov
or
mov
mov
mov
in
pop
push
pop
mov
mov
xchg
push
cmpsl
jmp
out
cmpsl
lods
imul
sbb
xlat
stos
pop
jge
or
cmp
jne
or
xchg
inc
pop
sbb
xor
addr16
inc
xlat
add
int
mov
xor
xchg
push
jnp
dec
lods
cltd
test
mov
sbb
lret
daa
mov
ja
addr16
imul
xlat
sub
sbb
or
sti
pop
jmp
lret
daa
mov
ja
addr16
imul
xlat
sub
sbb
or
sti
pop
jmp
lret
daa
mov
ja
addr16
imul
xlat
sub
sbb
or
cli
pop
ljmp
push
stos
inc
fwait
ja
addr16
imul
pop
mov
sbb
mov
mov
sbb
mov
mov
jg
dec
pop
pop
adc
jae
in
pop
push
pop
inc
out
mov
mov
scas
repz
mov
aas
jg
dec
adc
das
add
popa
rcpps
inc
imulb
fwait
mov
cmpsl
sti
xchg
lret
lahf
fnstenv
pop
add
push
jbe
cmp
pop
push
and
xchg
nop
ror
imulb
and
pop
sub
jmp
pop
add
mov
call
outsb
mov
sub
cmpl
ljmp
cld
jg
das
cmp
adc
add
cmp
cltd
fsubrl
enter
sahf
cmp
andb
jns
cld
das
ret
fimull
push
pop
push
out
in
out
pop
push
insb
sti
rclb
mov
inc
in
jle
jp
mov
out
lods
pop
push
mov
insb
aas
notl
cmpsl
xchg
ret
stos
outsl
iret
mov
mov
lock
movb
pop
xlat
mov
or
mov
xchg
nop
pop
repnz
xor
paddb
insb
orl
pop
inc
movsb
out
iret
mov
cmpl
xchg
jbe
cmp
inc
sbb
imul
adc
mov
shrl
icebp
flds
outsl
pop
adc
cmp
cmp
push
pop
popa
jge
jb
sbb
lret
scas
in
ret
repz
icebp
sub
sbb
jbe
add
add
xor
aaa
mov
mov
out
mov
ret
outsl
xor
dec
adc
das
jae
arpl
push
pop
inc
out
mov
mov
scas
repz
ret
outsl
xor
dec
adc
das
jae
arpl
push
pop
inc
out
mov
mov
adc
add
sbb
aas
fbld
subb
push
jno
or
dec
pop
push
inc
pop
xchg
ret
xor
aaa
rol
lods
pop
loopne
xchg
dec
pop
fsubs
dec
scas
notl
call
loope
and
jae
daa
mov
mov
fs
and
mov
mov
lods
xchg
cmp
lret
sbb
sti
cld
out
dec
in
adc
sbb
xor
addr16
cmp
cmc
cltd
out
or
ret
lods
xor
shrl
xchg
xchg
je
ljmp
ja
pop
add
out
cli
cmp
adc
and
sahf
lods
mov
cmp
cmp
inc
mov
mov
fwait
lock
call
jns
repnz
jl
cs
xor
pop
dec
lcall
sbb
int
lds
mov
je
pop
lahf
in
mov
rol
gs
in
out
neg
jae
call
push
xchg
out
shl
push
repnz
xor
inc
xorb
or
cld
push
xor
add
std
inc
outsb
inc
aam
push
add
loope
push
mov
sbb
imul
cs
pop
cmp
cmp
aaa
es
add
daa
push
lods
in
stos
mov
xchg
outsl
aaa
and
test
pop
mov
jmp
jle
rcl
xchg
pop
dec
pusha
push
int
fsts
inc
fsubl
cmp
rcl
ret
out
jp
movsb
out
push
insl
hlt
jmp
add
pop
adcb
and
lret
sbb
test
bnd
or
push
sbb
roll
sbb
fstpl
adc
scas
orb
loope
inc
jbe
sub
sub
ret
loope
xlat
cmpsb
pop
xlat
cmp
xor
xor
push
in
add
jnp
cmpsb
lods
dec
sahf
fs
fcoml
popa
pop
ljmp
movsb
les
shrl
mov
jle
cld
pushf
xor
aam
mov
fstpl
stos
lods
xchg
pushf
and
vmovq
ret
mov
lods
add
lret
insl
sub
xchg
add
xor
jp
inc
or
sbb
sbb
cmpsl
and
pop
xchg
pop
mov
and
test
xchg
call
jl,pn
mov
sahf
mov
xchg
cmc
shl
jp
xor
popa
into
pop
add
adc
dec
sti
push
repnz
scas
and
mov
sar
cmp
stos
cld
mov
push
or
sbb
push
xchg
outsb
ret
xchg
cmp
inc
jnp
mov
in
fwait
adc
test
ljmp
cmp
enter
mov
loope
jg
push
mov
adc
outsl
mov
inc
leave
enter
fistl
mov
xchg
scas
pop
dec
das
enter
orl
test
pushf
jmp
add
cwtl
cmp
adc
mov
js
loopne
xchg
sbb
jno
jmp
push
xchg
addr16
shl
in
mov
stc
ja
rorl
movsb
aaa
das
cwtl
inc
in
adc
flds
sti
repz
je
pshufw
inc
xor
pusha
push
pop
sti
ret
or
adc
dec
vcmpsd
lret
call
dec
mov
or
fsubs
mov
push
cmp
fimull
pop
jp
mov
mov
lods
pop
cmp
cmc
out
inc
stos
push
or
xor
or
ret
rorl
ret
mov
mov
push
and
mov
sarl
inc
and
lods
mov
sub
xlat
fsubl
xchg
pop
mov
mov
xor
call
in
pushl
and
cmc
fists
or
adc
mov
dec
sbb
nop
mov
push
push
adc
jp
xor
das
and
sbb
popf
je
int3
stos
cld
ficoml
add
dec
jno
test
les
xor
mov
fcoml
dec
mov
xchg
mov
popa
xor
setl
push
shrb
push
cwtl
test
pushf
sub
push
testl
dec
jnp
lods
test
movb
or
jg
mov
nop
fiadds
xor
xor
repz
push
xchg
inc
and
jnp
call
ljmp
into
mov
cmp
out
mov
test
cmp
xchg
daa
sti
inc
mov
rol
sub
push
leave
sbb
mov
add
aaa
rcrl
dec
inc
out
add
stos
dec
cmp
cmpsl
and
adc
into
add
cmpl
dec
mov
loope
jnp,pt
or
movnti
jns
pop
xchg
outsl
add
cmpsl
mov
add
hlt
icebp
push
and
cltd
jecxz
sbb
adc
fnstsw
xor
in
stos
or
loop
fisubs
pop
sahf
add
add
mov
cmpsb
dec
mov
cwtl
loope
push
xor
ds
sub
mov
cmp
lock
mov
dec
out
rclb
mov
not
mov
aas
insb
loop
std
es
xor
fbstp
xchg
push
xor
push
mov
fildll
fldt
mov
push
cmp
hlt
inc
in
cli
and
pop
cld
pop
out
sbb
fisubl
dec
xor
add
lock
popf
outsl
dec
out
pop
into
in
push
and
mov
call
je
js
mov
jae
add
repnz
pop
ja
xchg
repnz
sbb
mov
fsubr
inc
in
sub
jbe
mov
xchg
jns
enter
and
cmc
sbb
aad
sahf
out
mov
gs
sti
lahf
loop
fwait
js
stc
cmp
ljmp
loope
repnz
push
mov
cmc
sti
decl
leave
lds
fisubs
repz
mov
cli
jmp
inc
lods
jg
pop
and
push
imul
jle
jae
test
inc
pop
cmc
sbb
daa
xchg
push
add
pop
outsb
sub
test
filds
movsb
or
repnz
into
repz
cmpsb
mov
pop
adc
inc
lds
out
fdivrl
adc
sahf
popa
or
inc
cmpsb
push
ss
mov
call
sub
xor
cld
fistpll
xchg
leave
rorb
xor
xor
flds
out
jb
icebp
cmpsl
ljmp
inc
popf
xchg
movsb
dec
mov
fwait
xchg
cwtl
icebp
cmp
es
jecxz
and
add
test
arpl
jb
ds
jb
stc
dec
sub
fidivrs
mov
jne
mov
fwait
sub
pop
pop
les
push
lret
inc
push
push
addr16
push
inc
pop
jmp
decl
add
icebp
mov
lcall
xor
out
sub
mov
movsb
dec
lock
lahf
push
jb
popa
mov
idivb
dec
add
mov
fcomi
mov
mov
jge
sub
mov
mov
jp
mov
iret
test
in
adc
or
mov
icebp
sarb
inc
and
in
jne
into
sub
out
mov
add
mov
and
sti
lea
dec
xor
inc
xorb
aas
out
mov
loopne
pop
shlb
dec
icebp
mov
cli
cmp
repnz
and
aas
or
ficoms
outsl
pop
mov
cltd
dec
adc
sarl
cld
inc
mov
push
ret
sti
dec
cld
adcb
jno
push
aas
pop
mov
leave
mov
push
rorl
movsl
add
in
cmc
xchg
in
popa
lahf
inc
stos
or
pop
push
std
and
leave
repz
or
imull
insl
into
scas
cmp
jbe
sub
bound
xor
stc
pop
adc
xlat
mov
or
or
xor
add
fsubl
xchg
adc
push
stos
mov
sbb
mov
sbb
lock
test
add
movsl
mov
bt
add
mov
cmp
mov
icebp
mov
je
cmpsl
or
cmp
cmp
fisubl
jbe
mov
pop
sbb
push
mov
inc
mov
push
icebp
mov
push
push
and
inc
fcoml
push
lock
div
andb
cmpsb
cmpsb
or
out
cmp
stos
stos
ljmp
pop
addr16
sub
cmp
or
inc
and
out
xchg
test
test
in
inc
popf
lret
cmp
stos
or
rcl
lods
xor
xchg
fsubl
scas
mov
mov
addb
push
dec
cmp
sti
jmp
xchg
inc
lods
fcoms
jae
sub
sub
push
andl
and
sti
stc
mov
xor
dec
or
gs
test
int3
push
loope
ja
xor
xor
push
je
nop
rclb
xlat
dec
fisttpl
xor
sub
aad
lcall
aam
mov
jmp
movsl
je
sub
jno
pop
faddl
xchg
rep
adc
xor
jnp
outsl
and
and
aas
sub
out
xchg
cld
sub
jns
lock
iret
stc
fistl
outsb
or
dec
and
adc
pop
mov
dec
xchg
mov
mov
pushf
das
inc
mov
and
into
lret
mov
lret
add
or
bnd
rolb
xchg
lret
jge
sub
dec
sub
ds
xor
ss
jecxz
add
push
cmc
and
push
push
pusha
mov
inc
es
mov
dec
jl
fidivs
add
jle
fisttps
jo
mov
roll
arpl
fcoms
push
mov
imul
icebp
lods
push
icebp
mov
out
pop
imul
xchg
stos
in
repz
inc
or
xchg
imul
mov
aaa
jge
popf
imul
insb
imul
sub
mov
mov
mov
pusha
jne
hlt
xor
imul
add
icebp
scas
out
in
aad
enter
pop
ja
imulb
mov
movsb
int
es
push
lods
sbb
push
pop
ja
gs
das
sbb
daa
enter
add
lds
jle
push
sub
push
and
mov
dec
push
mov
dec
add
nop
in
test
pop
cmp
or
shrl
sti
jl
mov
popa
negl
mov
push
xlat
test
inc
push
frstor
je
dec
cmp
sahf
mov
adc
mov
sahf
pop
test
stc
xchg
jp
mov
leave
sub
mov
xor
bound
les
xchg
dec
out
inc
in
jbe
mov
test
add
and
jle
jbe
stc
test
addb
xchg
aam
pop
push
push
inc
xchg
mov
fcmovne
push
stos
cmp
pop
scas
or
out
sbb
pop
shll
and
out
loop
shll
rorl
fidivl
shll
call
sbb
xchg
jmp
inc
dec
in
mov
cmovns
outsl
cmpsb
add
lods
add
divb
push
insl
lods
aas
es
jp
adc
cmp
ja
adc
subb
mov
cmp
mov
mov
add
jne
mov
test
ds
loopne
int
addr16
test
jne
or
pop
mov
loop
jg
gs
cvtpi2ps
int3
cli
and
jl
in
inc
push
jl
and
das
pop
and
loopne
fiadds
mov
or
or
paddq
cmp
ficoms
mov
pop
fxch
add
stc
mov
pushf
push
in
test
adc
adc
push
daa
iret
pusha
cltd
pop
xchg
or
dec
dec
pusha
sbb
jge
mov
jae
repz
or
jp
xchg
or
pop
adc
lahf
aam
xchg
loope
sbb
mov
popa
mov
data16
sti
inc
dec
stc
and
mov
mov
aaa
stos
mov
js
mov
adc
lods
adc
dec
jnp
leave
repnz
ss
movsl
out
pop
jae
mov
or
mov
jp
xor
sahf
mov
xchg
xor
test
int3
push
idivl
xchg
orl
xchg
sbb
jb
cmp
mov
and
popa
mov
out
jp
mov
jecxz
jge
sub
mov
sbbb
pusha
pushf
jnp
loope
jecxz
pop
ret
clc
sbb
cld
out
mov
cmp
add
lock
cmpsb
aaa
inc
pop
jl
sbb
ds
adc
arpl
pop
lods
lock
imul
ret
lahf
jmp
in
cmp
mov
pushf
inc
lock
adc
nop
into
jecxz
adc
aas
jp
scas
out
ja
pusha
mov
add
icebp
sub
sti
int
jp
aas
outsl
and
pop
push
sarl
push
xor
cmpsb
dec
lock
incl
test
mov
add
fdivl
and
xor
addr16
testb
popa
int3
fisubrl
push
jne
fidivs
test
fimull
int3
mov
xchg
aam
outsb
bswap
stos
dec
sbb
inc
sbb
jmp
push
lock
cld
push
dec
sub
xor
loopne
sbb
ret
ss
loope
mov
jmp
in
add
pop
mov
out
push
fdiv
sub
inc
add
cltd
lock
inc
mov
js
inc
popf
into
fstpt
pop
dec
sbb
jno
mov
push
mov
shrl
sub
mov
pop
or
sbb
mov
rclb
mov
enter
pop
je
and
sbb
jae
xor
shl
les
shlb
aad
jo
inc
adc
das
xchg
mov
pop
push
mov
nop
cmp
pop
pushf
cmp
cli
add
mov
leave
sub
ja
insb
adcl
pop
ss
mov
pusha
pop
aam
pop
xchg
cmpsb
dec
imul
leave
sbb
dec
out
fs
pop
or
les
repnz
mov
or
dec
outsb
popf
scas
daa
ret
xchg
and
inc
fisttps
mov
jl
add
cmpsl
sbb
dec
std
test
xorb
mov
mov
xchg
repz
ds
popa
hlt
inc
addb
and
mov
les
js
sbb
iret
jge
movsl
imul
xchg
cli
adc
addr16
xor
es
outsl
repz
push
xchg
adc
aas
pop
inc
and
imul
mov
or
mov
adc
lock
xor
mov
adc
and
pop
push
sti
orl
jl
cld
sbb
push
xchg
test
add
nop
orl
inc
pop
fwait
cli
shlb
fwait
jp,pn
in
jo
add
aam
icebp
mov
aad
jl
ret
or
push
xchg
dec
pop
je
xchg
pop
movb
js
jbe
clc
and
scas
cmc
sub
lods
int3
insb
add
cmp
inc
push
push
xchg
push
leave
xchg
jbe
mov
popf
cmp
lcall
add
inc
dec
pop
mov
xchg
mov
leave
dec
push
mov
sbb
mov
ds
pop
loope
inc
mov
xor
fidivrl
add
mov
push
push
jbe
dec
shl
xlat
xchg
out
jge
jns
negb
push
mov
lock
repnz
into
mov
xchg
ja
and
call
fs
inc
scas
nop
rcrl
dec
cmp
out
scas
stos
inc
ja
push
mov
cmpsb
xchg
js
xchg
addb
jmp
mov
loopne
icebp
jno
mov
sti
mov
xchg
stos
cmpsb
out
and
lcall
cmp
dec
dec
or
xchg
lcall
test
arpl
adc
fcoms
addb
jo
fdivrs
sbb
imul
enter
sahf
fidivrs
mov
mov
lret
sahf
cltd
enter
bound
push
xchg
jmp
loopne
fs
pop
rorb
adcb
adc
mov
lods
xchg
inc
fldcw
test
imul
in
and
mov
popa
lock
push
mov
push
mov
xchg
inc
cwtl
rcrl
fcoms
xor
imull
lds
popa
shlb
outsl
aas
mov
push
and
scas
push
fldt
loope
inc
jle
pop
aad
aam
fcoms
out
jg
icebp
xchg
popf
imul
inc
jecxz
aam
sbb
rorb
xlat
push
push
mov
pop
lret
clc
cmc
and
int3
jp
add
sbb
ja
jmp
jge
out
inc
jo
fnstcw
pusha
pusha
sbb
ror
subb
lahf
pop
js
rorb
and
push
cli
icebp
xchg
cmp
add
push
or
or
lret
out
mov
lret
loop
aam
ret
orl
aaa
stos
cmp
mov
xor
cwtl
pop
in
push
inc
test
shrb
cmp
int
fisttps
out
pmaxub
push
out
xorl
mov
and
push
mov
aaa
sbb
call
mov
mov
mov
xor
push
xlat
faddl
adc
mov
sub
sbb
push
mov
push
xchg
mov
sbb
arpl
pop
lds
push
test
xchg
mov
fnstenv
lods
sbb
xorw
pop
leave
mov
sbb
inc
fmul
sbb
mov
out
outsb
test
sub
cmp
dec
xchg
es
push
loope
pop
xchg
jns
mov
cltd
mov
mov
cmp
xor
sub
shlb
jl
lcall
int
or
pop
rcll
mov
add
arpl
jmp
cmp
imul
sub
lret
sbb
dec
mov
cmc
inc
cli
push
js
sbb
es
mov
mov
dec
mov
push
mov
inc
adc
pop
test
lea
mov
call
jbe
sub
push
jge
jp
xor
pop
sub
xor
mov
inc
in
dec
add
in
push
ja
pop
pop
adc
cmpsl
sbb
dec
xor
lods
mov
ljmp
mov
mov
je
lcall
adc
mov
or
fsubrs
outsl
or
adc
jo
sbb
mov
jmp
inc
std
pop
xchg
and
sbb
jmp
cltd
xchg
cmp
test
es
call
mov
lods
enter
sti
into
push
xor
outsl
lea
call
fidivs
mov
cmp
lods
cld
cltd
int3
lods
xchg
xor
mov
xchg
pop
lock
fsubrs
fistpll
adc
inc
int3
and
loop
pop
int3
mov
out
push
xchg
ljmp
inc
sbb
hlt
dec
jne
testl
mov
dec
or
adc
hlt
xchg
jmp
orl
mov
mov
aas
jns
mov
leave
clc
stos
int3
mov
xchg
or
mov
or
add
jecxz
pop
and
dec
ljmp
and
aaa
add
jmp
inc
and
subl
dec
pop
sbb
inc
in
fldenv
ds
scas
push
leave
insb
nop
xchg
cmpsl
xchg
rcrl
inc
add
jmp
mov
in
fucomip
pop
aad
add
inc
add
sbb
adc
jmp
sub
clc
mov
rcrl
jns
mov
push
dec
inc
andl
out
mov
or
and
mov
rorb
add
xchg
divl
cmp
adc
int
mov
call
sub
xor
popf
ror
adc
outsl
xchg
lock
cli
push
sbbb
mov
mov
xor
xchg
gs
pop
pop
outsl
imul
setne
mov
cmc
push
stc
mov
aas
mov
inc
and
lods
cmpsl
sbbb
gs
test
push
or
sub
sub
dec
cwtl
addb
push
loopne
push
fs
nop
jae
push
insb
push
scas
data16
pusha
pop
shr
std
cmpsl
push
test
xchg
ret
xchg
cmp
bound
pusha
push
pop
stc
mov
jge
fnsave
inc
jae
cltd
das
out
out
lret
ret
mov
xor
in
mov
mov
push
int3
dec
xchg
clc
das
lods
push
jg
pop
xlat
mov
mov
dec
out
mov
dec
mov
js
adc
lret
mov
fsub
xchg
imul
subb
sbb
push
movsb
fisttps
push
stos
stos
gs
push
cmpsb
movl
push
lcall
fnstsw
pop
pop
lcall
dec
and
jno
stos
into
inc
leave
ss
jge
mov
xchg
fistpl
or
pop
lret
adc
idivl
stos
fisubrs
xlat
add
loop
fdiv
daa
addr16
mov
mov
scas
repz
ret
outsl
xor
dec
adc
das
jae
arpl
push
pop
inc
out
mov
mov
scas
repz
ret
outsl
xor
dec
adc
das
jae
arpl
push
pop
inc
out
mov
mov
scas
repz
ret
outsl
xor
dec
adc
das
jae
arpl
push
sbb
cmpsl
into
xchg
filds
psrlq
add
adc
pop
sti
mov
lock
cmp
imul
pop
dec
dec
pop
xor
das
cmp
dec
fistpll
mov
pop
dec
dec
pop
cmp
sub
sbb
or
stos
out
jmp
cmc
lret
fistpll
mov
fst
lea
sub
arpl
add
xchg
mov
cld
neg
in
std
clc
sti
cmp
dec
ds
sbb
cmp
mov
fmulp
fs
xor
ja
mov
jo
aam
insb
cmp
arpl
ret
cmp
mov
lock
loopne
adc
add
and
sbb
shrb
pop
jnp
pop
push
lret
scas
mov
pop
outsl
pushl
inc
mov
into
xor
inc
push
outsl
adc
dec
push
pop
cmp
aam
sbb
or
lret
xor
ss
je
mov
mov
pop
into
inc
jecxz
int3
mov
das
dec
lds
adc
nop
imul
pusha
ror
sahf
jg
push
add
mov
stos
cli
fisubs
cmc
dec
jecxz
pop
pop
cmp
pop
cmp
outsl
aas
sbb
mov
or
jns
add
aad
fistl
out
lods
or
adc
and
push
or
pop
lcall
mov
out
sti
int3
idivb
jecxz
sbb
xorb
jge
insl
ja
js
ret
mov
out
enter
out
ljmp
sub
or
jle
sub
sbb
or
sti
out
jmp
fcmovne
lret
fistpll
mov
pop
dec
dec
pop
cmp
sub
sbb
or
sti
out
jmp
fcmovne
lret
fistpll
mov
repz
ja
inc
ss
outsl
and
pop
adc
das
dec
cmp
xlat
cmp
pushf
cmp
cmp
out
fwait
mov
fcompl
dec
inc
fs
cmpsb
flds
xor
jmp
std
gs
mov
roll
lock
adc
sahf
inc
cs
insb
fcoml
adc
xchg
lods
mov
pop
popa
adcl
push
sbb
sub
cli
mov
aas
jnp
xorb
mov
test
shlb
xchg
push
fs
enter
paddsb
dec
dec
add
and
push
insb
and
mov
addl
fwait
mov
xor
ljmp
inc
adc
jl
add
lods
or
lods
fwait
hlt
mov
push
inc
fwait
mov
jnp
add
andl
jno
outsl
jecxz
lahf
hlt
xor
or
jbe
and
inc
in
in
inc
mov
loope
loope
loopne
in
push
lods
into
rcrl
fbstp
inc
pushf
or
ror
test
xchg
ret
fsubr
or
aaa
hlt
cmc
loopne
mov
mov
pop
jne
mov
cltd
inc
outsb
add
xlat
cwtl
sub
jle
leave
loopne
inc
push
xchg
mov
push
inc
in
inc
push
cltd
cltd
cmp
rcl
lret
sbb
add
mov
aas
add
mov
sub
push
mov
and
xchg
mov
jae
idivl
lods
mov
inc
add
mov
shlb
sbb
sub
pop
rcrb
addr16
gs
adc
ret
pop
lea
jecxz
cld
mov
lret
fstpt
ret
into
mov
iret
jae
jp
daa
out
jbe
ds
sub
fldenv
dec
xchg
xor
push
or
dec
pop
mov
add
mov
or
or
mov
push
fcompl
aaa
imul
dec
and
push
push
inc
clc
push
repnz
into
cmp
arpl
lea
fidivl
addr16
mov
popf
cmp
shll
rolb
cmp
push
xor
cmp
outsl
shrl
aad
adc
xor
loope
mov
pop
cmc
and
cmpsb
and
lcall
dec
pusha
mov
dec
jg
dec
rcr
loopne
xchg
xor
pop
xchg
orb
jle
mov
mov
and
sbb
daa
pop
and
sub
daa
mov
pop
inc
loop
push
lock
sub
outsb
decb
pop
out
dec
pop
add
mov
adc
sbb
pop
fwait
add
dec
out
mov
ret
pop
cmp
push
aas
pop
test
inc
mov
or
test
xchg
jmp
cmp
push
lret
jae
sahf
sbb
xchg
cmp
cmp
fwait
or
or
pop
jae
addr16
push
in
fldt
jmp
push
int
pusha
and
cmp
imul
push
sbb
das
pop
aam
inc
pop
in
test
cmc
fsubl
push
push
fildll
ja
pop
sbb
or
mov
and
inc
js
push
fdivrs
pop
outsl
ds
repz
xor
stos
cmpsl
push
sahf
leave
jns
cmp
mov
lahf
test
jb
pop
inc
sbb
and
cmp
or
stc
fsubrs
mull
mov
adc
or
cmpsl
sbb
mov
jno
lret
inc
jecxz
cmc
pop
mov
and
xchg
scas
push
sbb
adc
push
push
fisttps
out
dec
or
cmp
adc
mov
sahf
cltd
push
jg
xchg
and
popa
sbb
scas
icebp
adc
xor
pop
lahf
lods
or
push
or
daa
rcr
inc
mov
sbb
nop
js
mov
or
dec
cli
je
push
lea
xor
ja
adc
pop
fcmovnb
test
dec
daa
mov
je
sarb
lods
xor
pop
int3
mov
fistpl
ret
mov
mov
lret
xor
insl
bnd
or
cmp
pop
lret
or
rcrb
scas
push
sarl
cmp
js
dec
test
lret
sarb
ret
inc
cmc
test
bound
movsb
lcall
lcall
in
fdivr
xchg
push
cld
xchg
dec
push
jl
dec
sbb
popf
mov
xor
cmp
cltd
xor
int3
jl
sub
fs
test
fdivl
push
ja
mov
mov
fninit
insl
mov
mov
ds
fistpll
push
cld
out
push
push
pushf
mov
push
cwtl
mov
fmull
shll
in
push
jecxz,pn
push
sub
sub
inc
pushl
xchg
aam
mov
enter
jmp
cmpl
movsb
js
lcall
inc
inc
mov
loopne
xor
arpl
jnp
fildl
cwtl
insb
or
or
fdivs
faddl
cwtl
test
jbe
loopne
dec
test
fbld
mov
pop
nop
xor
xchg
sub
cmpsb
bnd
sub
pop
mov
int3
imull
dec
xlat
sbb
cmpsl
outsl
and
or
mov
fnstcw
in
pop
movsb
add
or
or
lret
addl
lds
jne
je
sbb
mov
rolb
mov
int3
out
and
mov
xorl
shll
adc
call
dec
xchg
movsb
mov
xchg
dec
jl
iret
lcall
jae
push
mov
push
adc
sub
sbbl
xor
icebp
dec
addb
dec
jo
leave
pop
xlat
cmp
xchg
icebp
mov
adc
gs
push
out
jns
or
pop
xor
mov
fcmovnu
sub
ja
iret
shl
jo
xchg
sbb
and
test
out
mov
callw
dec
jmp
pop
sub
sar
das
pop
aas
pop
lret
lock
movsl
and
sbb
sbb
imul
fwait
pop
faddl
cmc
xchg
sbb
add
mov
mov
jg
out
xchg
mov
std
daa
push
int3
shl
fcoms
das
out
call
adc
mov
outsb
push
ja
push
repnz
in
jo
rolb
addr16
pop
repnz
pop
bound
test
std
sub
xchg
lret
mov
inc
mov
popa
aad
std
or
inc
mov
ja
sub
add
xchg
bound
adc
dec
and
jns
mov
xchg
scas
imul
push
cs
aad
mov
data16
pop
arpl
ljmp
add
movb
xchg
adcb
pushf
sti
nop
test
fs
xchg
xor
inc
inc
inc
imul
shr
mov
testl
not
dec
mov
xchg
adc
out
or
jge
ret
sarl
mov
xchg
xor
jmp
idivl
mov
lods
add
sub
push
xchg
add
in
or
arpl
loop
mov
ret
push
out
shrl
pop
clc
and
mov
outsb
jb
add
outsw
adc
sti
cs
cmp
xchg
popf
ror
sub
pop
jne
int3
jl
jae
repnz
stos
pushl
leave
sbb
dec
es
sub
mov
mov
stos
fwait
push
or
pusha
cmp
fldt
or
add
roll
mov
jle
lds
fidivrl
les
jp
daa
call
mov
das
imul
outsl
mov
or
xor
je
clc
popa
pop
push
xchg
xor
orl
or
xchg
push
or
fdivrl
or
icebp
repz
dec
fistl
jg
ret
jbe
fdivl
iret
std
dec
dec
push
inc
cltd
pop
or
push
and
adc
out
ds
roll
push
jmp
popa
xor
loopne
push
inc
xlat
push
pop
and
pushf
jbe
sbb
push
repz
insb
int3
ret
and
sub
sbb
lods
aas
or
sahf
sar
jbe
clc
lock
fs
adc
mov
test
and
adc
out
lds
xchg
adc
aaa
call
lods
nop
je
popa
jg
cmp
std
mov
and
inc
pop
pop
test
add
inc
push
sbb
fsubs
mov
jo
and
scas
jne
sahf
test
jb
frstor
lret
fisubrl
mov
inc
sub
and
push
add
lcall
icebp
sbb
inc
repz
push
mov
in
fstl
loop
je
imul
test
mov
rol
mov
inc
mov
sub
les
aam
test
jnp
fdivs
jl
repnz
ljmp
jae
or
cs
or
aas
iret
icebp
xchg
xchg
ficoml
incl
pusha
in
into
push
inc
lret
and
mov
lcall
mov
gs
test
insl
adc
cmp
insb
in
cmc
cmp
daa
shlb
stc
test
adc
mov
addr16
jno
mov
mov
jb
mov
call
mov
jne
sbb
adc
rcl
adc
push
jno
mov
lds
dec
sbb
dec
adc
mov
mov
cmpsl
sqrtps
sahf
and
aad
adc
cld
add
xor
sub
subb
repnz
rorb
mov
mov
nop
mov
in
out
insl
jno
lea
lret
add
lods
push
pop
adc
fdivrp
ja
push
jle
push
lret
es
sbb
adc
pop
cmp
xchg
xor
mov
pop
fs
cmc
insl
pushf
mov
pop
push
dec
pop
mov
jge
add
xchg
je
rcr
pop
push
int3
repnz
pop
int3
inc
dec
test
or
stos
lods
push
xchg
imul
dec
inc
test
dec
lods
push
mov
out
imul
in
shll
add
lock
sub
xchg
or
fnstcw
lret
push
sbb
or
fsubs
sbb
xchg
xchg
mov
xor
mov
es
push
ss
inc
jnp
out
jmp
xor
jnp
mov
xor
stc
inc
sbb
shl
out
fcmovnbe
cmp
out
icebp
into
dec
call
xor
hlt
xor
mov
mov
mov
xor
xor
lock
js
hlt
inc
dec
leave
and
and
pop
adc
mov
mov
xchg
mov
mov
pop
clc
icebp
push
adc
inc
push
in
fcompl
jle
sub
sbb
mov
fs
mov
mov
mov
outsl
mov
stc
dec
mov
xchg
pop
test
dec
jg
pop
sub
mov
jmp
mov
in
fcompl
lahf
push
addr16
sbb
shl
pop
fimuls
xor
add
mov
popf
add
and
out
jnp
mov
insb
push
adc
ja
lahf
in
inc
dec
adcl
mov
in
dec
mov
cmp
or
gs
add
dec
out
xor
int
cltd
inc
cmp
ds
pop
inc
mov
cwtl
pop
add
dec
ficompl
popa
mov
and
push
test
cmc
cmc
inc
push
sub
mov
mov
mov
fwait
jbe
jge
push
fmuls
notl
mov
ds
xchg
xlat
or
xchg
add
xlat
insb
jg
jo
dec
clc
or
cmc
push
push
movsl
pop
pop
or
int3
jp
or
xor
mov
sarl
sbb
inc
mov
insb
mov
dec
mov
push
ror
xchg
jb
mov
into
fsub
sub
inc
outsl
das
jmp
mov
jne
aas
jnp
mov
xchg
sbb
subb
cmp
jle
mov
xor
sbb
lcall
pop
das
stos
out
mov
cmp
or
cmp
cmp
adc
cltd
outsb
lds
cmp
and
or
fldt
mov
adc
mov
jl
dec
jnp
call
int3
xchg
stc
cld
ret
xchg
push
mov
mov
aam
in
push
leave
out
pop
push
add
push
inc
xchg
jnp
hlt
icebp
lock
lcall
inc
call
dec
xchg
nop
aam
neg
out
mov
pusha
cmp
out
mov
popf
mov
cli
addr16
rclb
in
push
pop
xchg
jno
jns
push
jle
ficoms
in
or
or
xchg
sub
test
ja
pushf
cmp
xor
jge
fsubl
jne
xor
pop
sbbb
cmpsl
aad
scas
sub
mov
xchg
addb
xor
stos
das
daa
mov
pop
int3
cld
or
jb
repz
add
xchg
lods
sub
sbb
cmp
and
lret
mov
mov
pop
test
imul
xchg
and
sub
out
test
pop
in
mov
cwtl
sub
pop
mov
sbb
outsb
nop
xor
or
xchg
and
addl
sbb
jnp
add
idivl
lcall
bound
outsl
loope
jno
push
aam
xor
es
cld
fstpl
addb
push
cld
mov
aas
mov
lods
mov
testl
js
leave
cmp
jae
lods
pop
xchg
testb
and
test
imulb
push
mov
es
je
pop
scas
sub
test
push
mulb
scas
scas
push
cmc
push
or
and
shll
insl
pop
jae
cmpsb
popa
xchg
andb
rolb
insb
mov
push
gs
xor
jmp
dec
cmpsl
sub
pop
xchg
or
loop
insb
stos
repz
cwtl
imull
mov
pop
out
fldln2
mov
pop
out
jb
xor
loopne
dec
sbb
jecxz
mov
aas
add
xor
lret
cmp
push
movsl
ret
cmpsl
push
push
insl
popa
popa
push
rorl
lods
and
pop
and
lahf
pop
xchg
stos
sti
xchg
add
pusha
dec
arpl
loopne
movsl
sub
adc
insl
subl
mov
sub
and
sub
lea
mov
pusha
xlat
pop
lcall
cmpsl
mov
inc
shl
mov
scas
adc
cmp
scas
mov
jns
outsl
addr16
sbb
ret
lcall
pop
aad
jne
sbb
and
pop
imulb
xchg
loope
adc
xlat
dec
out
inc
add
push
int
dec
adc
outsb
addr16
sub
push
dec
into
cs
rcr
cmp
lods
repz
aad
mov
cwtl
push
and
pushf
cmc
mov
fwait
leave
inc
jo
inc
mov
outsl
xorb
mov
fst
adc
enter
arpl
mov
jno
and
inc
push
arpl
add
sbbb
adcb
or
repz
inc
sahf
mov
inc
or
nop
repz
out
mov
xchg
pop
push
cmp
imul
inc
pop
ja
mov
mov
dec
in
out
cltd
mov
loop
adcb
decl
or
mov
fimuls
nop
fsts
aas
mov
inc
iret
dec
mov
sub
sub
bound
jbe
ds
lret
fdivrl
jecxz
orb
subb
popa
aas
scas
dec
sbb
cmp
xchg
xchg
cld
xor
cmp
aaa
outsb
or
cmp
repz
mov
test
inc
add
shll
out
clc
in
mov
rcl
xor
out
in
in
sub
or
xor
shrl
xchg
fnstcw
mov
and
addb
cmp
jmp
xlat
imul
and
lods
enter
enter
in
rorl
enter
push
or
scas
loope
adc
lret
ret
mov
addr16
push
mov
insb
pop
jns
pusha
dec
lods
jge
and
shl
xchg
or
test
push
outsl
or
xor
mov
and
sbb
and
mov
cs
lret
repz
jmp
in
lods
mov
imul
lahf
std
xchg
xchg
int3
push
rorb
hlt
pop
popf
iret
mov
fprem
outsb
ret
fdivs
or
loop
out
icebp
mov
mov
sbb
out
enter
stos
pop
inc
enter
dec
cs
mov
push
jp
out
xchg
jo
xchg
cmp
pop
inc
icebp
add
dec
xor
addr16
xchg
aad
cmp
lds
cmp
push
xlat
iret
aaa
xchg
jge
or
cmc
outsb
add
or
mov
sub
fsts
cs
stc
outsl
es
xchg
lods
adc
subb
fcomps
out
fbstp
sub
push
in
cs
sbb
jp
loopne
and
ss
inc
push
xor
mov
in
sub
lods
xlat
movsl
out
push
jns
and
lock
ret
push
std
xor
dec
cmp
push
inc
pusha
pusha
push
movsl
inc
mov
and
rolb
aas
or
outsb
movsl
xchg
mov
xchg
add
and
int
pop
ret
ja
inc
aam
daa
out
lcall
jo
les
jmp
mov
push
pop
jge
push
mov
or
pop
mov
jno
mov
rol
je
sbb
std
outsl
dec
cmp
xor
xchg
cld
les
mov
test
add
into
jp
xor
orb
loopne
xchg
out
nop
inc
inc
mov
jge
mov
mov
mov
std
js
int
out
sub
adc
es
sbb
mov
dec
jne
mov
or
cvtdq2ps
lock
fwait
aaa
mov
in
iret
stc
pop
sbb
add
mov
arpl
lods
add
adc
std
aad
les
lods
test
rclb
push
cs
xchg
iret
mov
andl
xchg
push
nop
mov
mov
cmc
sbb
pop
shl
imul
adc
cmp
add
fildll
jbe
mov
inc
jbe
sub
mov
test
and
aaa
and
rorl
rsqrtps
filds
shrb
add
cs
push
lea
mov
out
into
or
add
stos
test
aam
in
adc
fs
int3
push
and
mov
mov
fsubr
out
dec
movsb
rclb
lods
testb
popa
cli
push
push
xchg
repz
sbb
outsb
scas
subl
rcr
mov
ja
insb
push
addr16
scas
shlb
mov
and
xor
cmp
add
sub
pusha
dec
jl
clc
rorl
or
xchg
sub
mov
es
add
nop
pushf
xchg
mov
adc
test
enter
sub
rorb
jb
inc
test
arpl
loop
push
push
imul
cs
out
xchg
scas
in
mov
loope
pop
lods
add
inc
aaa
adc
or
fcoms
mov
mov
stos
nop
leave
or
add
jns
jmp
jne
sbb
clc
jg
mov
xor
pop
lret
jnp
in
call
movsl
mov
mov
mov
sub
jns
dec
fcoml
add
mov
aad
fxch
inc
and
push
mov
stc
or
cmp
int
mov
aaa
push
ficoml
cltd
lcall
add
repnz
pop
ss
in
jp
dec
add
xor
cmpl
sbb
xchg
dec
push
paddw
xchg
scas
mov
ljmp
dec
mov
adc
movsl
gs
sbb
sub
test
sarl
sahf
mov
loop
loope
sti
jno
and
nop
std
adc
jo
pop
in
mov
fs
and
mov
loopne
cmc
ret
movsl
pop
jb
addl
stos
jb
xlat
popa
stos
je
dec
or
sbb
mov
stc
pmaxsw
cmc
xchg
loopne
push
orl
out
call
stos
adc
push
cmpsb
cltd
pop
lret
clc
jge
xor
xor
pop
and
cld
fs
pop
stc
push
pop
cmp
test
cwtl
ljmp
ljmp
outsl
cmpsl
inc
sti
imul
adc
add
js
jb
out
inc
fistpll
push
pushf
test
popf
pop
jns
xor
ss
sbb
loope
out
xor
dec
rcl
scas
inc
mov
mov
adc
mov
push
cmp
insl
lods
or
push
sub
cltd
mov
sbb
sub
mov
pop
dec
xor
mov
sub
dec
pop
shlb
mov
pop
cmp
sub
sbb
or
sti
out
jmp
fcmovne
lret
fistpll
mov
pop
dec
dec
pop
cmp
sub
sbb
or
sti
out
jmp
fcmovne
lret
fistpll
mov
dec
push
dec
pop
cmp
das
push
sbb
or
out
jmp
ror
iret
mov
xchg
fwait
shrl
cmp
sbb
adc
jno
lret
test
xlat
and
divl
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
mov
popa
push
jno
int3
adc
cmp
hlt
shr
loope
lock
mov
inc
je
fs
push
jno
add
and
adc
add
not
in
hlt
icebp
les
xchg
je
xchg
mov
inc
insl
push
fs
dec
jno
add
xor
rcll
fimuls
cmc
dec
aam
filds
and
std
sub
push
outsl
push
pop
aam
lock
fisubl
mov
int3
mov
push
or
les
les
nop
icebp
notb
jecxz
or
mov
and
pusha
outsl
call
loope
xor
movsb
in
movsb
les
test
push
or
es
in
dec
xor
dec
movsb
push
sbb
xor
cmp
rcrl
push
test
mov
stos
mov
inc
je
sub
in
xchg
mov
rcr
outsb
sub
xchg
mov
mov
push
cli
pop
push
jecxz
lods
xor
push
rcr
shl
sbb
in
xor
inc
jno
add
and
or
sar
loope
icebp
fldl
xchg
mov
add
and
inc
add
dec
inc
js
imul
orl
jmp
add
sbb
push
pop
jo
push
jecxz
icebp
xchg
clc
push
add
xor
adc
adc
add
hlt
shl
loope
icebp
les
xchg
mov
inc
je
fs
push
jno
add
and
adc
add
hlt
shl
loope
icebp
les
xchg
mov
inc
je
jecxz
jne
push
decl
adc
test
in
mov
loopne
loop
enter
loopne
jno
mov
pop
mov
fcmovne
mov
sti
test
dec
and
aaa
inc
mov
lock
out
loope
lods
push
loopne
in
fidivl
xor
fidivl
repz
push
fmuls
incl
jmp
mov
fisttpl
cmc
add
push
test
stos
nop
and
xchg
mov
mov
jmp
mov
sahf
push
lret
xlat
ficoms
loopne
mov
fs
pop
push
arpl
imul
int
in
push
js
dec
inc
sbb
divb
psrld
bswap
sbb
lret
mov
imul
das
jae
iret
shrl
stos
mov
ljmp
int3
lods
dec
add
ds
sbb
dec
push
jae
imul
mov
cmp
fisttpl
test
lds
std
jbe
lods
jne
pop
push
lods
inc
and
lcall
out
add
ficomps
add
pop
lds
cmp
shll
mov
mov
add
pop
int
outsl
jg
dec
repz
shlb
test
mov
and
dec
inc
jns
arpl
xchg
pusha
jmp
dec
insb
cmpsl
lret
and
mov
jae
mov
xor
aad
and
sub
addl
rcrb
data16
cmp
sub
int3
jnp
lcall
pop
in
mov
mov
daa
inc
jp
enter
add
jbe
into
movsl
ds
fnstcw
pop
cmp
cmp
mov
push
imul
enter
xor
pop
push
scas
fisubrs
arpl
push
dec
xchg
mov
pop
movsb
mov
ljmp
insb
jp
or
dec
xor
sbb
std
xlat
mov
sbb
insb
mov
rcr
shlb
dec
mov
pop
pop
out
sub
push
jcxz
jo
jmp
push
inc
dec
cmpsb
xor
push
jno
stos
dec
imul
xchg
lods
mov
adc
add
lea
pand
jp
orl
cltd
neg
cmp
mov
jge
xchg
and
inc
add
rcrl
jns
push
lds
daa
xor
nop
pushf
aad
in
cmp
dec
jb
mov
pop
mov
insb
movsb
dec
xchg
adc
lods
cli
xchg
push
sbb
out
mov
push
out
mov
xlat
imul
lds
imul
jmp
add
and
mov
scas
subl
mov
dec
sub
xchg
dec
movb
add
push
test
jne
push
sbb
out
xchg
movd
lds
sub
in
inc
pop
mov
cs
push
mov
lcall
dec
mov
push
push
push
mov
cld
ret
sub
jae
mov
xchg
repz
daa
xchg
inc
pop
adc
push
outsb
lret
xchg
popf
cmp
jmp
dec
cmp
in
adc
mov
jo
rcrl
dec
iret
xor
mov
fildl
ss
add
inc
dec
fistps
jne
sbb
mov
scas
cmp
jo
mov
mull
inc
lcall
inc
mov
loop
call
ljmp
pop
in
cmp
jge
push
inc
hlt
rcr
xchg
jp
imul
cmpsl
outsl
test
dec
lods
cltd
add
add
or
ja
xlat
add
xor
fiadds
mov
xchg
das
xor
leave
jg
psrlq
pop
or
rclb
cwtl
or
adc
fimull
pop
push
cmpsl
js
mov
and
pop
mov
test
push
enter
pop
xor
inc
fdivs
xchg
cmc
xorl
sub
mov
add
mov
aaa
cmp
inc
and
les
and
mov
ljmp
sub
inc
cmp
push
in
push
mov
dec
ret
inc
mov
cmp
xchg
lahf
ja
and
and
call
das
sbb
cmp
sub
cmp
xor
loope
push
mov
mov
add
stos
stos
add
mov
movsb
insb
cltd
mov
rcl
jo
jne
sbb
xchg
je
sub
shr
popa
scas
addr16
jp
adc
ja
push
mov
mov
dec
sbb
push
js
lods
stc
mov
xchg
jb
add
add
je
and
xchg
jg
arpl
xchg
pop
mov
stos
mov
cmp
loopne
xchg
pop
adc
inc
jl
pop
cmpsl
in
xor
rdmsr
mov
gs
or
cwtl
call
sbb
inc
mov
inc
nop
xchg
jecxz
sbb
mov
or
cwtl
popf
aaa
shlb
mov
lea
rolb
pop
addr16
stos
jecxz
mov
adc
pushf
mov
lcall
ss
and
xor
push
jno
stos
pop
cmp
je
mov
lret
fimuls
mov
enter
pusha
fldl
into
xchg
push
push
add
or
outsl
mov
in
lcall
mov
pop
pop
lods
cltd
and
std
add
shlb
push
mov
pushf
lret
jbe
sub
or
pop
xchg
jle
jge
dec
jae
repz
mov
or
shl
or
cmp
bound
or
xlat
out
pop
cmp
xor
sbb
push
fcompl
cmc
aaa
xor
jns
out
cmp
sub
aas
xlat
inc
xchg
fs
pop
dec
lahf
divl
inc
and
or
inc
in
or
das
and
or
push
sahf
mov
pusha
fdivp
iret
add
jae
das
xor
sbb
pop
jno
es
mov
mov
inc
xlat
mov
cmpsl
inc
lret
push
loope
data16
out
lock
push
sbb
mov
andb
push
mov
inc
inc
and
sbb
test
lods
inc
pop
popf
nop
pop
and
int
jb
xlat
in
shl
loopne
leave
sarl
fwait
xchg
mov
out
aaa
fsubs
pop
mov
sbb
xchg
jb
movsb
mov
jo
pop
pushf
add
push
push
jge
mov
fiadds
or
cmp
jne
cmp
das
dec
xlat
rcr
pop
daa
push
mov
aaa
cmp
inc
cs
das
ror
xorb
jo
and
mov
outsb
lds
add
inc
jns
and
sub
pop
outsl
adc
fstpt
ljmp
jle
jno
ljmp
inc
dec
xchg
outsl
mov
push
addr16
je
insb
add
jg
pop
pop
pop
xchg
aam
hlt
add
jb
jbe
out
jne
mov
or
shll
adc
mov
jp
in
mov
fcompl
xchg
std
scas
loopne
xor
ja
pop
jp
scas
fucomp
xorl
decb
cmp
or
data16
ljmp
out
push
and
jge
push
js
mov
fimuls
jne
insl
and
xchg
inc
scas
notb
cmp
pop
xchg
jne
mov
inc
push
add
adc
gs
and
popf
bound
pop
mov
call
xor
insl
xchg
daa
add
fdivrp
loop
aas
jecxz
cmpsl
pusha
adc
cld
xchg
in
adc
mov
in
imul
call
adc
sbb
stc
ficomps
xchg
push
fistpll
push
pushf
xor
in
popa
jno
xchg
leave
and
and
stc
jmp
lea
popf
ret
fldt
cmp
movsb
push
mov
cmp
popf
adc
inc
adc
push
mov
popa
fidivs
in
pop
pop
pop
xchg
xchg
add
out
xor
mov
and
daa
in
movsb
cli
pop
xchg
icebp
pushf
out
bound
out
dec
or
add
pop
pop
andb
sbb
ja
sbb
jae
xchg
and
push
gs
call
lret
jl
adc
xor
hlt
sub
loop
in
sub
icebp
fimuls
mov
mov
jmp
xor
daa
cmp
mov
int
pop
movsl
lods
cmp
mov
pop
ljmp
adc
or
out
push
mov
mov
je
mov
inc
in
and
jp
sarb
hlt
mov
push
rcrl
or
cmp
add
cmpsb
push
sub
enter
ret
movsb
and
pop
dec
pop
mov
push
jo
push
movsl
cwtl
sbb
mov
mov
push
test
pop
xchg
loopne
fcoml
aaa
repz
xorl
aaa
jle
sarb
out
pop
je
outsl
push
jae
push
jge
int3
std
mov
scas
mov
mov
daa
fimull
mov
sbb
pop
int3
mov
jo
or
insl
pop
pop
dec
mov
int3
push
cmp
je
test
loope
gs
xor
test
je
xor
rcl
je
call
jmp
cmp
dec
test
stc
ss
ds
in
sub
cld
insb
cmc
repnz
and
sub
imul
sti
jae
xor
das
dec
mov
xchg
mov
cmpsb
push
int
loopne
mov
mov
pushf
mov
pop
sbb
dec
jle
in
or
test
jns
push
sbb
int3
popf
por
cmp
lcall
add
aam
ret
mov
stc
fiaddl
push
mov
repz
mov
mov
jge
sbb
icebp
pop
dec
imul
inc
cmc
scas
pop
rol
call
iret
mov
iret
in
or
int
mov
jnp
mov
decl
incb
dec
aas
cmp
xor
mov
outsb
rorb
cwtl
or
pushl
out
scas
xchg
popf
push
dec
dec
sub
adc
hlt
shl
std
sub
out
pop
mov
mov
dec
inc
push
jp
mov
pop
mov
xchg
mov
imul
leave
push
movsl
or
in
cmp
repnz
jne
fbld
cld
pop
lret
and
out
xor
jae
adc
mov
adc
mov
mov
out
sub
push
adc
ret
addb
ss
int
daa
sbb
cmp
scas
xchg
icebp
xor
out
push
std
iret
lods
push
inc
sar
mov
ja
or
xchg
shll
inc
sbb
dec
aas
adcl
xlat
scas
gs
in
cmp
jge
orb
sti
mov
imul
out
std
subl
das
push
mov
js
push
mov
leave
pop
sub
ja
mov
push
dec
or
hlt
dec
icebp
fcmovb
dec
mov
adc
push
xchg
mov
rcll
sub
gs
fwait
xor
jmp
mov
enter
push
test
jne
cmp
push
and
icebp
sbb
xlat
adc
sub
out
nop
pop
rcrb
aas
jnp
add
inc
mov
lds
insl
sbb
mov
mov
cmp
or
fdivl
fiaddl
outsl
and
xchg
sub
mov
jp
addr16
dec
mov
xchg
jo
sub
shl
imul
xchg
push
add
out
push
out
fs
insl
les
ds
mov
lock
mull
cmp
cs
into
mov
sbb
pop
pop
xor
xor
or
xchg
test
mov
inc
mov
mov
adc
sarb
ss
adc
in
dec
scas
mov
dec
iret
push
mov
push
add
lds
ficomps
mov
push
sbb
add
sbb
lods
mov
fmull
mov
outsb
mov
sbb
jns
and
js
psrad
xor
subl
decl
mov
std
lods
sub
hlt
test
mov
fsubl
jnp
push
xchg
cmc
pop
inc
adc
bound
andb
lcall
into
push
loopne
jg
cld
push
adc
inc
sahf
popa
mov
cmp
std
push
jmp
gs
adc
inc
test
add
xchg
ds
add
adcb
lods
and
jle
jb
jp
out
sub
inc
pop
lahf
fucomi
shl
sbb
xchg
xor
ret
cmp
movsb
dec
jl
add
bound
addl
test
and
cmp
sbb
sbb
das
jge
in
push
insl
fdiv
into
or
push
data16
adc
push
add
dec
pop
cmp
lods
scas
loop
push
out
movsl
jp
mov
lods
movsb
testb
scas
dec
mov
jmp
xchg
in
ja
js
lock
push
or
xor
lret
add
insb
inc
xchg
mov
xor
add
mov
out
out
sbb
mov
cmp
rol
lods
cmp
xchg
pop
lods
stos
sti
mov
je
jmp
mov
lcall
in
clc
mov
mov
pop
mov
in
mov
stos
adc
pop
sub
test
sub
pushf
sub
mov
push
mov
outsl
movsb
mov
test
jno
ret
outsb
adc
popa
lock
shlb
mov
pop
idiv
jo
stos
lods
xchg
lret
in
pop
es
in
and
les
out
into
outsl
filds
lds
and
bound
add
js
stos
sub
xor
and
mov
loopne
dec
sbb
out
bound
enter
jle
les
int
xor
sti
out
xchg
fidivl
lcallw
inc
jl
xchg
insb
testl
mov
cmpb
jne
dec
inc
xchg
mov
push
ret
cmp
pop
jae
call
xor
out
imul
lret
or
adc
call
test
lds
and
mov
fadds
icebp
sbb
rorl
mov
aad
cltd
mov
fimull
shl
loop
testl
imul
mov
or
inc
in
addr16
mov
aaa
mov
or
sub
or
push
xlat
and
xchg
jae
adc
cmp
push
xor
loopne
scas
mov
call
add
inc
out
into
dec
mov
push
dec
out
lret
adc
mov
fwait
adc
aad
cmp
repnz
dec
pop
jmp
in
mov
mov
sub
or
mov
fwait
mov
shl
push
inc
xor
jge
push
or
std
mov
pop
xchg
test
out
add
arpl
sub
pop
push
adc
and
iret
ret
int3
into
xchg
jb
cld
mov
dec
sub
fs
and
fadd
insl
lea
cli
xchg
sbb
adc
add
decl
xchg
push
adc
mov
js
ret
sbb
and
dec
cld
test
bound
sbb
cmp
mov
or
aam
or
fcoms
call
mov
int
stc
pop
mov
cmp
addr16
shrl
loope
shlb
mov
fimull
adc
dec
or
mov
scas
xlat
iret
aam
into
sti
out
jo
xchg
jae
add
movsl
dec
jge
mov
out
mulb
getsec
scas
push
mov
daa
mov
decl
or
mov
repz
movsl
notb
lods
in
mov
fistps
notb
xchg
jo
mov
je
imul
inc
xor
stos
sbb
cmpb
arpl
jg
mov
push
mov
mov
repz
ds
imul
xor
stos
mov
cld
mov
sbb
cwtl
or
adc
xchg
xor
sub
fistps
mov
dec
dec
pop
adc
mov
jnp
sbb
idivl
dec
sbb
jle
xorl
inc
lahf
xchg
in
push
mov
mov
or
add
sub
jb
shll
dec
or
lds
sbb
imul
inc
and
pop
rclb
jle
jg
push
mov
sub
push
inc
xchg
pop
dec
outsb
rorb
jae
aas
cwtl
adc
out
ficoml
sbb
in
loopne
jge
mov
ss
mov
xchg
dec
repz
sarl
cmp
pop
insb
inc
add
in
insb
popf
push
cltd
hlt
lret
sbb
and
das
or
jns
cmc
pop
movsl
enter
sbb
push
call
or
add
stos
pop
mov
cmpsl
cmp
je
inc
imul
add
dec
mov
sbb
repnz
push
add
int3
pop
push
scas
hlt
mov
iret
adc
call
push
cmp
jne
inc
jg
gs
pusha
iret
fstp
mov
cmpsb
out
dec
push
into
out
pop
xor
cmp
and
mov
mov
aaa
dec
mov
out
dec
jecxz
pop
dec
push
fs
mov
imul
jl
pop
imul
inc
inc
cs
scas
test
jmp
mov
add
pop
sbb
addr16
fbstp
ret
push
out
stc
jmp
inc
dec
pop
popa
aaa
adc
push
fwait
sub
xor
xor
hlt
dec
lea
mov
jle
icebp
xchg
adc
xlat
repnz
repnz
ja
hlt
pushf
mov
jecxz
lcall
add
sar
fdivrl
mov
ljmp
fwait
stc
test
jmp
dec
mov
add
fwait
and
bound
push
pop
xchg
mov
int
push
mov
das
loop
dec
sbb
cmp
ficomps
sahf
mov
cmp
lcall
push
push
ja
dec
rorl
jg
loope
and
cmpsl
add
and
stc
clc
or
cs
daa
in
jmp
jle
icebp
push
dec
enter
xchg
dec
push
test
inc
icebp
sbb
insb
out
add
mov
cmpsb
sbb
sbb
dec
or
ja
pop
mov
loopne
mov
mov
ret
push
in
adc
xchg
imul
and
test
or
sub
mov
adc
inc
xchg
push
mov
mov
into
and
pop
push
inc
add
dec
fdivr
ss
aad
jae
scas
pusha
insl
push
imul
jle
popa
enter
jo
mov
hlt
push
mov
dec
sti
test
sub
adcb
call
cmp
pop
adc
xor
and
movsb
cmp
pusha
daa
and
mov
std
xorb
push
in
add
aam
aaa
dec
xchg
ret
pop
mov
push
insl
ljmp
jl
aam
add
push
xor
push
pop
mov
push
inc
push
aaa
push
pop
add
inc
pop
jle
xor
fnsave
nop
movsl
leave
pop
hlt
cli
loope
sbb
dec
add
adcb
add
pushf
and
mov
ds
sbb
pop
jle
push
repnz
in
or
test
outsl
ret
cs
and
scas
push
dec
lea
jnp
shrl
call
roll
enter
xor
cmp
xchg
in
mov
sub
int3
and
dec
in
jmp
ljmp
xchg
lock
bound
mov
mull
or
inc
jp
mov
out
inc
jmp
into
dec
mov
or
adc
pusha
cli
add
popf
fstps
dec
test
popa
sbb
sub
test
sub
push
fcomps
mov
inc
mov
icebp
mov
add
stc
out
inc
adc
shll
sarb
stc
data16
repz
dec
sub
pop
push
xchg
adc
test
fwait
mov
shrb
sub
and
xchg
iret
int
bound
into
jmp
lcall
mov
fld
mov
ja
and
xlat
ss
jnp
push
iret
lret
cld
nop
xchg
lds
loopne
test
pop
stos
fisttpll
out
loop
fistpll
faddp
mov
jge
xor
mov
icebp
and
mov
xchg
lret
mov
dec
loop
mov
lahf
fildll
cmp
mov
push
xor
stos
stc
repz
iret
dec
rcll
fwait
stos
xchg
lcall
pop
in
adcb
jno
sub
xchg
sub
repz
sub
lods
mov
pop
xchg
fisttpl
mov
scas
mov
sub
inc
jg
xor
jne
popf
pop
ljmp
jmp
pop
jnp
xchg
dec
jl
jmp
lcall
and
sti
adc
xor
push
xchg
movsl
jecxz
mov
mov
jno
dec
cwtl
jbe
arpl
dec
pop
rcrb
cmp
lea
jp
movsb
xor
sahf
pop
mov
cli
xor
rorl
lret
xlat
fildl
xchg
push
movsl
pop
add
jmp
gs
jmp
add
fstpt
push
add
scas
les
sbb
xchg
sbb
aad
cmp
mov
ljmp
dec
fldl
xchg
pop
subl
fs
mov
adc
adc
add
hlt
shl
loope
icebp
les
xchg
mov
inc
je
fs
push
jno
add
and
adc
add
hlt
shl
loope
icebp
les
xchg
mov
inc
je
fs
jno
xorl
add
hlt
shl
loope
icebp
lds
xchg
mov
inc
je
fs
push
jno
add
and
adc
add
hlt
rorl
aam
mov
cmp
pop
shrl
jnp
lret
inc
gs
adc
lds
mov
cmc
imul
xchg
or
cmp
lret
inc
fistpl
jmp
sti
adc
stos
and
pop
xchg
push
jnp
outsb
test
mov
movsl
cmp
lret
mov
out
mov
fwait
sub
out
popf
push
adcb
dec
stc
dec
cmp
or
adc
add
mov
stos
xor
rolb
mov
lret
cmc
and
push
mov
pop
mov
jo
sbb
sbb
inc
mov
pop
push
fildl
sbb
cmp
fadd
inc
push
cmp
dec
lds
insl
in
test
shlb
cmpsb
cltd
testl
mov
pop
aam
lds
sbb
cmp
adc
imul
add
mov
cmc
xchg
mov
or
test
int
push
fwait
repz
xor
dec
rcrl
adc
sub
gs
icebp
mov
xor
dec
pop
pop
subl
fisttpll
sbb
lret
aaa
mov
jp
imul
into
and
inc
nop
cmp
pop
fcompl
pop
sbb
add
jl
pusha
faddp
cld
jo
mov
xchg
sub
or
sub
outsb
ljmp
mov
mov
addl
fwait
xor
dec
lds
imul
xchg
or
cmp
inc
gs
adc
stos
and
pop
cmc
imul
xchg
or
cmp
jecxz
mov
movsl
cmp
jle
sbb
xchg
pop
ss
xchg
sbb
lods
or
jo
nop
add
jp
cmp
scas
enter
push
jmp
lcall
xor
orl
fsubl
aam
enter
inc
xchg
shrl
ret
cmp
add
movsb
mov
pop
jns
shr
stc
mov
stos
jae
xorl
out
lret
add
or
movsb
mov
or
pop
adc
push
ljmp
sbbb
inc
sbb
cld
inc
xchg
push
and
inc
in
and
adc
mov
int3
imul
cmp
or
adc
shlb
repz
inc
mov
add
lock
repnz
mov
sub
cltd
stos
mov
cmpsb
into
cmp
jnp
daa
dec
insl
pushw
icebp
pop
cld
jecxz
push
pop
cltd
mov
and
jns
stos
cmpl
and
stc
fcos
lock
clc
into
out
repnz
jl
lret
movsl
sbb
mov
inc
jb
add
add
or
fsubs
fidivrl
repnz
push
out
mov
lods
inc
push
mov
jae
ret
push
push
sub
dec
mov
push
mov
nop
fxch
in
sbb
push
xor
cwtl
push
aad
sub
out
push
mov
into
out
push
adc
jmp
ret
and
les
js
jns
lret
rep
clc
dec
jmp
ja
jne
or
scas
mov
inc
dec
xchg
ficompl
xchg
and
fs
arpl
loope
jecxz
je
jne
out
icebp
pop
enter
push
test
mov
sub
lods
add
cmp
inc
inc
dec
mov
xor
rcrb
rcrb
fildl
or
je,pt
mov
dec
data16
sbb
xor
fcmovnb
insb
sub
fnstsw
std
je
nop
jo
fwait
ret
jb
and
sti
cmc
ret
sub
andb
adc
int3
aaa
pushf
pop
jge
leave
and
sti
arpl
mov
pop
fists
jp
jne
xchg
loopne
xchg
mov
es
cmp
or
jae
xchg
lcall
dec
mov
sbb
push
sub
xor
jge
outsl
jnp,pt
mov
imul
xchg
adc
lret
mov
imul
xor
out
mov
cmp
stc
fwait
mov
xchg
pop
jle
inc
je
movsl
inc
add
mov
sub
push
mov
push
out
mov
cmc
scas
iret
fs
aaa
shrb
int3
push
pop
jg
cli
adc
add
jns
push
xor
rorl
push
adc
call
leave
mov
in
xchg
jb
xchg
mov
in
adc
scas
cmp
test
or
insb
addb
sub
mov
sub
cli
into
stc
clc
cltd
mov
cmp
cmp
cmp
ret
xchg
lds
imul
sti
adc
push
fistpl
test
pushf
dec
les
pusha
push
push
sbb
or
test
in
mov
test
xchg
sbb
pop
sub
mov
adcb
mov
push
pop
sbb
mov
out
pop
sbb
cwtl
adc
dec
push
add
mov
inc
les
in
fsubs
inc
aad
xchg
or
out
jno
movsb
mov
cltd
cs
jno
out
jle
cmp
jbe
push
adc
xchg
fsubr
fcomi
cmp
cmp
mov
test
mov
jns
lret
lcall
rcrb
mov
and
push
and
add
repz
mov
push
xchg
fdiv
sbb
repnz
xor
arpl
pop
aaa
mov
push
pusha
push
int3
xchg
or
adc
in
push
repnz
and
push
fwait
pop
mov
fsubp
push
stos
imull
cmp
mov
mov
push
mov
call
cvtss2si
inc
movsl
sbb
cmc
out
roll
jns
xchg
test
imul
scas
add
cmp
imul
adc
xor
std
cmc
sbb
aaa
and
mov
inc
fisttpl
mov
addr16
addr16
popf
pop
sub
lret
pop
mov
xor
les
nop
jl
out
xchg
push
int
aaa
push
ret
xlat
mov
sahf
sahf
sar
cmp
ret
daa
mov
imul
hlt
dec
xor
test
mov
int
and
pop
mov
stc
pushf
add
sbb
cmpl
fwait
xchg
cmpsb
lret
and
hlt
ret
mov
adc
sti
xor
xor
inc
hlt
add
xor
jg
flds
add
sarb
data16
mov
sub
sbb
out
aam
jp
mov
inc
stc
ja
fisubs
mov
mov
mov
sbb
repz
jb
out
addb
shll
xchg
sbb
xlat
in
mov
xor
xor
mov
mov
sbb
out
pushf
out
daa
or
scas
std
test
or
rcll
or
push
inc
mov
push
jg
aam
enter
stc
je
cmp
rcrb
rorb
push
or
js
in
sahf
and
xchg
jno
cs
popf
xor
mov
or
jno
push
sub
or
jp
out
mov
inc
and
jl
fsub
lock
movsb
ffreep
insl
adc
inc
rorb
push
sub
add
inc
dec
in
fstpt
gs
daa
inc
popf
fsubr
nop
rolb
or
aad
xchg
mov
push
loopne
cli
jno
xor
dec
xor
cmp
scas
mov
adc
pop
mov
xchg
sahf
or
pop
and
mov
push
cmp
push
movsl
jno
std
mov
shl
push
mov
fldt
dec
jg
ds
and
jmp
popf
dec
cmpsb
int3
sub
mov
sub
mov
push
inc
shrl
dec
daa
mov
insl
lcall
sub
and
mov
les
xchg
and
loopne
pop
push
aas
ret
sti
dec
cmpb
push
xchg
ss
cli
cmc
int3
mov
pop
jp
xor
push
in
lea
std
cwtl
das
mov
jb
jb
cltd
cmp
and
cli
mov
pop
rorb
add
jae
xorb
inc
scas
sahf
into
and
pusha
ret
push
incb
bound
pop
add
jp
cwtl
int3
aas
xchg
mov
xchg
mov
jnp
adc
dec
pop
cmp
bound
mov
out
cltd
fidivs
inc
icebp
jmp
or
lret
fstpl
dec
ss
push
js
lret
mov
cmpsb
leave
movsb
or
mov
lea
add
ds
pushf
dec
xor
dec
mov
ficoms
in
aad
and
bswap
jo
data16
pop
mov
xchg
xchg
cld
push
sbb
test
pop
addl
push
mov
xchg
mov
cmpsb
sub
adc
pop
jmp
addr16
fs
loop
xlat
loop
mov
out
shlb
push
jle
mov
dec
gs
out
popf
sub
mov
mov
pop
inc
cmp
call
lret
mov
inc
clc
in
cs
testb
lcall
les
xor
mov
mov
fsubrl
outsb
ss
out
push
sbb
test
dec
ret
aad
hlt
fisubrs
jnp
movsb
mov
xchg
bound
bswap
pop
xchg
jnp
adc
dec
lret
wrmsr
pop
pop
sahf
push
shrb
sahf
mov
fmul
lret
call
ds
frstor
or
testb
cmc
add
sub
in
dec
dec
aad
inc
aas
scas
out
lods
mov
pop
mov
in
ret
jle
fwait
popa
and
sbb
imul
out
leave
rcrl
in
xor
cmpl
or
outsb
aaa
dec
faddl
dec
movsl
xor
and
sbb
iret
cmpsb
sub
into
je
and
lods
cmp
xor
add
and
xor
lods
es
gs
rcll
lret
je
or
lret
jns
add
ljmp
mov
sahf
in
mov
adcl
xor
mov
mov
lock
bnd
adc
lods
adc
jmp
pop
sub
bound
imull
aaa
or
jecxz
xchg
ja
lahf
aas
jnp
cmp
fldl
imul
loop
fwait
xor
mov
cwtl
cwtl
cmp
mov
shrb
or
sbb
ljmp
add
shll
fnsave
jbe
dec
sbb
js
mov
push
faddl
dec
lahf
mov
fdivl
popl
jl
in
push
or
mov
or
js
iret
imul
inc
sub
out
add
pop
lods
out
cld
hlt
ja
push
ret
call
fisubrs
imul
jp
push
cmp
xlat
test
mov
pop
fisubrs
and
lea
sub
cmp
addb
add
mov
mov
and
sub
push
push
add
sub
jmp
int3
xchg
cmp
imul
add
and
loopne
iret
imul
and
dec
adc
out
xchg
repnz
jbe
ret
jle
or
sbb
push
push
mov
call
mov
mov
icebp
das
lds
sbb
sub
xchg
adc
dec
cmpsl
out
inc
and
xchg
in
leave
adc
iret
xchg
movlps
bound
dec
mov
cmp
push
stos
jmp
push
push
and
imul
inc
decb
inc
xchg
or
mov
cmpsb
lods
scas
sub
adc
scas
sbb
pop
lds
cmp
sub
jmp
or
jg
jae
jmp
xchg
pcmpgtb
inc
ret
pop
inc
jnp
pop
sub
mov
fisubrl
xchg
adc
enter
xchg
push
cmp
dec
mov
add
push
test
jnp
cmpb
stos
dec
mov
rorl
dec
cli
or
sub
adc
cmpsb
mov
shr
sbb
jae
movsb
icebp
xor
ljmp
lods
push
outsb
jmp
aad
sbb
push
mov
sub
push
jge
stos
rcrb
std
jnp
ret
fwait
inc
ret
in
xchg
leave
xlat
xchg
jmp
sbb
rcrl
stos
clc
push
sarb
out
js
lods
sbb
cmp
or
push
hlt
and
push
out
cmpsl
ljmp
mov
out
ss
or
dec
sub
xor
adc
push
out
stc
lret
shrb
dec
xor
cmpsl
or
or
add
into
adc
aad
mov
gs
or
mov
xor
pusha
lret
or
dec
xchg
out
sub
insl
enter
jno
rcrb
ret
or
cmp
sub
in
arpl
rolb
das
xlat
dec
xchg
scas
enter
and
cltd
in
lock
sbb
pop
adc
mov
rcrl
popa
testb
aaa
das
jg
leave
hlt
cmp
pop
jp
out
jnp
stos
shll
int3
dec
add
stos
xchg
jno
cmpsl
mov
aas
jno
jno
pusha
aam
mov
push
xor
jl
shl
jo
cmp
mov
jmp
dec
push
idiv
sti
clc
dec
pop
js
cs
mov
mov
mov
xor
insb
aam
out
daa
pop
in
fsubl
add
aas
adc
mov
adc
out
insl
imul
push
sbb
fsubrl
sub
std
shlb
mov
mov
cmc
pop
pop
repz
insb
test
lahf
mov
aad
mov
aaa
in
push
inc
nop
add
out
loopne
adc
cmp
mov
mov
pop
into
xchg
and
adc
cmp
stc
inc
xchg
aaa
std
call
faddl
iret
iret
test
ljmp
ret
push
mov
xor
je
mov
dec
mov
popa
xor
aaa
push
xchg
movl
imul
push
cmp
pop
mov
sbb
mov
mov
push
test
leave
inc
cmp
cmp
inc
sbb
popf
lods
cmp
xor
push
mov
add
xchg
ds
mov
pop
nop
ja
les
cmp
push
mov
jg
and
in
and
ret
clc
xor
add
or
test
adc
enter
jb
bound
movsl
push
aaa
cmpsl
push
xchg
xor
out
and
test
inc
xchg
ret
and
ffree
repnz
cmp
clc
mul
mov
cwtl
outsb
das
adc
jne
pop
cmpsl
push
and
push
scas
cmp
add
sub
dec
push
cld
aaa
call
ud1
rcr
daa
xor
xchg
ss
mov
ss
pop
mov
mov
add
sti
cmp
mov
lods
inc
popa
fildll
rcr
pop
cmp
sbb
pusha
dec
rcrb
or
aaa
mov
sub
mov
mov
insl
jns
cmpb
sbb
rolb
xor
test
jp
cmpsb
pop
ja
imul
sbb
and
movsl
push
dec
pop
rclb
xchg
xorl
mov
inc
imul
adc
or
rcrb
sbb
lock
jg
ret
daa
jnp
sbb
jo
out
push
jns
test
lahf
pop
push
jne
outsl
jae
cmp
xor
or
outsl
mov
rclb
fisubs
xchg
gs
nop
nop
xchg
iret
lcall
cld
or
mov
push
cmpsb
pop
inc
and
push
pop
ljmp
test
std
add
cmp
or
test
cmp
int3
sub
fcomps
popf
and
jl
adc
mov
in
fistps
push
cmp
push
daa
lods
push
cmpsb
addr16
fistpll
stos
sbb
test
push
dec
and
add
pop
mov
mov
popa
test
in
lods
or
ja
cli
xor
mov
inc
imul
sti
pop
mov
out
inc
cld
dec
addl
sbb
dec
test
mov
pusha
adc
out
xchg
bound
das
and
or
das
jmp
cmpsl
add
flds
pop
in
daa
cmpsl
testl
fs
inc
outsb
out
sbb
inc
adc
test
cmp
aam
add
push
pop
inc
push
mov
ss
outsl
inc
mov
insl
add
ja
sbb
pop
xor
jle
mov
shr
cwtl
adc
test
stc
es
cmp
addr16
and
setae
insb
dec
pushf
popa
lods
mov
lret
cli
das
pop
pop
jno
aas
xchg
pusha
fwait
jl
sbb
test
hlt
js
mov
ss
lahf
jg
mov
adc
push
pop
push
add
sub
push
fsubrs
dec
pop
add
roll
dec
cmp
jg
ss
in
xchg
or
mov
aas
stos
cld
mov
cmp
fistpll
add
das
leave
jp
inc
sbb
cld
loope
rcr
lock
mov
mov
mov
xor
aas
mov
inc
js
pop
jp
xchg
push
call
and
das
dec
xchg
mov
push
inc
movsl
pop
bound
stos
lods
push
js
cld
roll
arpl
adcl
sbb
arpl
in
sbbl
pop
dec
push
cmp
outsl
jae
jl
pushf
and
insl
xchg
jnp
jmp
jecxz
clc
add
addr16
pop
inc
dec
sbb
mov
gs
mov
jne
mov
lsl
jp
and
es
lret
sub
bound
dec
outsb
ja
inc
jae
jno
and
jns
xor
push
xchg
scas
sbb
push
jbe
mov
mov
sbb
test
fisubs
mov
in
mov
inc
stc
aad
jbe
mov
push
test
data16
mov
jne
xor
je
sbb
insb
jne
sub
pop
enter
addr16
ljmp
fwait
mov
mov
cs
hlt
and
push
fmull
inc
xchg
adc
cmp
xchg
gs
rcr
mov
shlb
sbb
cmpsb
xor
andb
dec
mov
adc
lret
call
xor
ror
cmp
mov
les
es
lock
and
sub
lods
ret
xchg
inc
mov
push
and
mov
ret
fidivs
push
in
mov
jno
add
xchg
test
and
bound
sbb
jo
mov
in
loope
cmpsb
ret
push
loopne
loop
lods
js
out
insb
and
outsb
adc
aaa
cltd
add
pop
adc
insb
and
arpl
mov
mov
sbb
test
xor
out
dec
subb
or
pop
add
outsl
cmp
lret
dec
pop
lahf
mov
mov
mov
stc
in
icebp
pop
pop
dec
pop
repz
fbstp
cs
lods
arpl
mov
repz
jb
sbb
pusha
mov
xchg
insb
pop
pop
insl
push
in
cmp
shll
adc
out
xor
and
jle
push
cmp
imul
std
arpl
adcl
aam
inc
loope
mov
inc
jmp
or
dec
adc
mov
adc
jne
jnp
mov
lods
xchg
mov
std
xorb
cmp
movsl
or
popa
or
mov
sub
repnz
mov
cmp
adc
sub
cmpsb
dec
adc
or
jnp
inc
ss
daa
sub
xor
inc
ficomps
jns
push
dec
mov
jge
ret
adc
mov
mov
push
mov
mov
push
call
sti
pop
xor
sahf
lcall
push
imul
cmpsb
test
rcrb
movsl
jnp
jno
xlat
mov
pusha
mov
mov
fucomp
jne
push
xor
fmul
xor
test
or
and
pusha
cmp
into
into
cmp
testb
out
cmp
jnp
mov
repnz
hlt
and
daa
cmpsb
sahf
test
loop
lahf
add
shll
gs
or
jmp
or
mov
adc
lret
test
fildl
in
inc
jmp
mov
mov
loop
fidivl
es
cwtl
push
jmp
lds
stc
sbbl
push
xchg
fstp
add
test
jge
mov
fnstcw
sarb
push
push
test
pop
ret
lods
and
cmp
cltd
js
daa
outsb
stc
fdivrp
push
mov
cmpsl
rcll
and
cmc
sahf
add
imul
xor
shll
movb
push
mov
push
cmp
es
fstpl
je
jle
call
or
cmpsl
dec
sub
es
cs
fcomps
mov
xorl
into
push
inc
adc
fwait
sub
roll
jl
es
xchg
sbbb
pop
xchg
pushf
jge
pusha
icebp
adc
mov
xor
cmp
xchg
scas
jae
and
jge
stc
pmaddwd
push
mov
addb
jne
adc
mov
je
shll
pop
ljmp
outsb
sub
pop
mov
mov
scas
pop
jns
and
mov
data16
jp
mov
and
test
je
les
cmp
cs
hlt
sti
fucomip
add
outsb
add
xor
push
inc
adc
jo
imul
cmp
mov
pop
and
cwtl
outsb
sbb
mov
call
xor
or
dec
je
nop
loop
jb
aaa
cmp
mov
in
xchg
mov
pop
lcall
mov
sarb
mov
pop
bswap
enter
sub
mov
lret
or
mov
push
mov
jae
mov
pushf
int3
xchg
inc
test
mov
cmp
out
aad
cmpsl
bound
mov
lret
int
pusha
notl
lret
aam
fcom
push
sbb
push
cmp
xchg
mov
mov
ja
fstl
fimull
jmp
std
int3
lea
cmpb
loopne
ret
inc
inc
xchg
or
xor
gs
mov
aas
pop
and
mov
fdivl
and
or
xchg
pop
shlb
and
adc
mov
mov
loop
insb
xchg
pop
adc
outsl
cmp
mov
jno
pop
pop
dec
xor
js
xchg
add
sub
mov
mov
jae
into
insb
lds
sbb
xchg
adc
sbb
xor
gs
adc
stos
and
pop
cmc
imul
xchg
or
cmp
inc
gs
adc
stos
and
pop
cmc
imul
xchg
or
cmp
jne
adc
mov
mov
add
or
cmp
sbb
das
jmp
sti
adc
stos
movsl
jnp
dec
cmp
pop
imul
loop
or
les
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jnp
stc
sqrtps
adc
addr16
insl
mov
add
or
or
pop
add
add
add
add
mov
add
add
add
add
mov
roll
add
push
add
add
add
incl
xor
dec
add
popl
pop
add
repz
bound
xor
dec
add
add
add
add
add
xor
movsl
add
pop
popf
add
add
add
add
add
inc
add
add
sub
pop
add
add
add
pop
sbb
add
add
add
pop
add
add
popl
inc
add
push
add
add
bound
sbb
xchg
add
call
add
incl
out
in
lret
add
jecxz
xchg
add
add
pop
inc
add
add
add
or
repz
add
push
addl
fwait
add
add
adc
add
add
sub
add
add
bound
fiadds
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
imul
pop
xor
pop
add
add
add
sub
popa
add
add
add
add
test
mov
add
pop
add
inc
add
pop
add
add
add
add
roll
pop
fiaddl
pop
add
icebp
add
pop
pop
add
pop
add
add
add
add
mov
jns
pop
add
add
inc
add
pop
add
add
add
add
push
add
add
bound
add
add
add
pop
mov
mov
add
add
movsl
add
sbb
dec
add
add
pop
fildl
add
add
add
and
xchg
add
add
add
add
je
add
add
pop
icebp
add
add
add
add
add
add
inc
add
pop
add
add
add
add
push
add
add
add
pop
lcall
add
add
push
add
in
add
add
mov
das
add
add
jecxz
mov
xor
add
add
or
add
add
or
pop
push
add
bound
int
jecxz
xchg
add
xor
bound
incl
add
add
add
or
add
add
add
add
jbe
sbb
add
add
add
add
pop
add
add
add
add
add
incl
and
add
add
arpl
push
add
add
add
inc
add
add
and
incl
pop
add
add
inc
add
add
addl
mov
pop
add
cltd
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
inc
add
inc
add
out
mov
popl
dec
add
sub
add
add
add
add
inc
add
aaa
add
add
add
add
add
add
je,pn
mov
loopne
pushf
xchg
je
mov
jo
aaa
cmp
mov
pop
out
sub
addr16
and
pop
enter
mov
pushf
mov
das
frstor
adcl
insl
and
mov
into
mov
loop
or
scas
mov
out
jmp
popa
out
mov
data16
popa
pop
andl
cmp
push
xor
jecxz
adc
ret
inc
xor
data16
xchg
ja
add
int3
ret
iret
cmp
xchg
xchg
sbb
rorl
js
iret
aam
push
cli
stc
mov
cmp
lds
insl
dec
lcall
ljmp
jl
or
ljmp
or
cli
jge
ljmp
push
mov
dec
popf
mov
push
enter
and
inc
std
xchg
fisubrl
jl
decb
push
pusha
push
fimuls
loope
lock
xor
adc
xor
fbld
or
pusha
in
or
stos
cmc
mov
clc
hlt
push
xlat
push
sahf
adc
xor
dec
cmp
mov
push
push
mov
sbb
pop
cmp
pop
test
test
into
sub
pop
loope
scas
xchg
into
lock
cli
xlat
adc
sbb
stos
pop
xlat
and
xor
xchg
add
ficomps
insl
xor
xor
nop
addr16
inc
sub
mov
sub
faddl
pushf
inc
jg
mov
fldcw
rorb
pop
loope
lcall
dec
clc
xchg
xchg
dec
mov
cmpsl
lcall
out
adc
repz
lock
and
lods
das
pop
xchg
or
sbb
imul
jno
mulb
adc
popa
or
mov
fdiv
or
push
push
jmp
mov
mov
inc
outsl
fxch
call
fs
lods
sbb
mov
repz
hlt
push
cmpsw
lret
dec
xor
nop
adc
mov
cmp
mov
cmp
inc
nop
faddp
ljmp
stos
xor
push
push
xor
call
loop
cwtl
jp
adc
std
scas
xor
jmp
lds
fmull
xor
int3
cltd
popf
into
loopne
negb
stos
orb
sub
jbe
in
mov
xchg
mov
cmpsl
loopne
cmp
mov
rcrl
xor
stc
mov
mov
imul
xlat
or
and
xchg
sub
popf
jno
shll
push
in
push
dec
mov
ret
pop
fs
loop
or
pop
dec
mov
dec
cmpsl
hlt
mov
call
imul
and
out
stc
push
movsl
pop
lcall
loope
cmp
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
