call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
dec
and
outsl
dec
cmpsl
xor
push
push
jle
sub
into
mov
lahf
roll
jecxz
repz
add
dec
and
outsl
inc
pop
push
pop
arpl
jae
adc
iret
mov
in
rorb
add
push
and
ja
push
push
pop
arpl
jae
sbb
in
roll
mov
shlb
aas
and
pop
or
into
mov
clc
rorb
subb
pop
add
inc
mov
out
pop
in
into
aas
inc
outsl
push
cld
lahf
rcrb
pop
scas
dec
adc
mov
and
dec
jp
push
xchg
andl
filds
adc
cmp
pusha
mov
xor
loopne
xor
sub
lods
pop
cmp
stos
jae
push
xor
dec
bound
inc
js
push
ficoml
sbb
clc
inc
andb
xor
pop
cmp
popf
push
lahf
sbb
repz
mov
int3
in
xchg
fsubrs
les
fsts
daa
mov
outsl
and
icebp
test
and
outsl
inc
pop
push
packsswb
jae
sbb
xlat
mov
xchg
xchg
jecxz
repz
pop
jo
sbb
es
testl
sti
testb
rolb
es
or
add
pop
sbb
dec
ss
ficomps
mov
mov
cltd
dec
sbb
push
sub
packsswb
jae
sbb
iret
mov
lahf
rorl
add
dec
and
outsl
inc
pop
push
packsswb
jae
sbb
iret
mov
lahf
rorl
add
pop
mov
xchg
mov
xor
inc
inc
xor
loop
fcomip
inc
fs
cmp
fwait
push
add
clc
inc
out
xor
je
push
and
sub
sub
mov
cmpsb
cmp
in
sar
push
pop
pop
rcll
adc
pop
pop
sbb
jle
movsl
xchg
adc
scas
fisttps
lock
xchg
ljmp
mov
push
mov
outsb
jl
fisttps
add
and
xor
gs
lret
mov
arpl
cmp
in
and
and
push
scas
insl
cli
mov
lcall
mov
int
sbb
js
mov
sbb
sub
adc
sahf
outsl
sbb
daa
mov
cmp
bound
and
or
inc
dec
bswap
add
shrl
inc
or
sub
jmp
adc
aad
test
sahf
outsl
pop
dec
mov
es
jae
push
inc
mov
rclb
and
ss
push
popa
sbb
or
jl
pop
mov
leave
push
or
lcall
inc
hlt
outsl
lock
mov
mov
ss
push
test
push
shr
mov
push
xchg
sahf
stos
xchg
ds
sbb
fldt
xchg
mov
out
xchg
sub
or
cwtl
add
inc
jg
push
pushl
push
test
pop
or
mov
jo
and
in
dec
add
outsl
mov
leave
inc
sarl
jnp
fsubs
inc
and
fwait
xchg
outsb
out
push
in
inc
inc
cld
in
test
add
notb
or
fdivrs
and
out
in
lock
fadds
pop
push
nop
outsb
fnstcw
adc
jmp
adc
mov
pop
loop
or
call
sub
push
xor
mov
inc
lods
js
bound
add
or
pop
mov
popf
add
dec
fs
ss
aam
add
fiaddl
nop
cltd
add
mov
inc
popf
inc
cmp
xchg
xlat
adc
cmpsl
fstpl
add
das
push
pop
sbb
imul
mov
insb
mov
cmp
cmp
jp
adc
inc
sbb
mov
shlb
and
int3
cltd
test
adc
out
pop
cs
sub
xchg
lret
popf
xchg
and
testl
sbb
cmp
notl
mov
jge
mov
hlt
fisttpl
sub
mov
mov
mov
bnd
xchg
arpl
rcrl
sahf
sbb
adc
insl
cmc
mov
ficoml
mov
mov
mov
inc
push
stos
cld
mov
sub
sarb
xchg
pop
xor
sti
dec
push
cli
push
cmp
lcall
jecxz
leave
fwait
push
mov
xchg
cltd
ljmp
lds
test
cmc
mov
and
lea
iret
aaa
loope
loop
nop
popf
testb
ret
xchg
gs
add
xor
jmp
fildl
sub
xchg
sbb
cs
int3
push
sub
int
xchg
imul
shlb
mov
je
inc
sub
test
sbb
enter
push
out
or
ret
xor
cmp
add
xchg
mov
gs
icebp
data16
jo
popa
dec
inc
lods
movsl
jg
dec
dec
pop
out
loopne
and
adc
mov
or
adc
out
into
lea
mov
xor
dec
xchg
jb
push
loopne
xchg
iret
je
call
lods
stc
popa
lea
mov
xor
dec
mov
sub
aad
cmp
stos
clc
lea
rcrb
mov
lods
xchg
movsb
sarb
shr
dec
xlat
push
jmp
orb
loopw
sbb
movsb
jno
loop
xlat
fbld
jle
add
imul
ja
push
cs
inc
mov
cmp
sbb
or
clc
mov
add
mov
stos
adc
lret
pop
adc
sbbl
or
inc
sbb
scas
or
imul
cmp
ss
inc
inc
test
xlat
shl
dec
sahf
adc
popl
sub
rorl
push
cli
add
clc
into
insb
pushf
das
dec
maskmovq
divl
lds
jno
loop
outsb
stos
cmp
xchg
hlt
lods
repnz
add
and
cmp
xchg
repz
mov
dec
pop
pop
ljmp
lods
cmp
aam
stos
mov
aam
mov
insb
cmp
scas
bound
sub
repz
cmp
xchg
fimuls
mov
lcall
leave
pushf
jnp
dec
sbb
push
out
stos
lret
sbb
push
mov
lock
mov
xchg
xchg
fstl
jge
cmpsl
out
dec
std
sti
xor
div
icebp
movsb
xchg
sbb
fmul
adc
stos
push
pusha
clc
aad
or
sbb
sahf
adcb
out
adc
std
leave
stos
xor
mov
add
inc
push
push
sbb
mov
pop
mov
inc
add
cmc
mov
jg
test
das
dec
sbb
pop
fmul
pop
popa
xchg
test
adc
mov
jne
or
dec
mov
ss
je
and
cmp
inc
push
mov
inc
xchg
sub
enter
fmull
fcomi
popa
pop
lods
mov
data16
scas
sub
cwtl
fistl
fs
iret
mov
and
xchg
outsl
push
mov
push
xchg
outsb
jae
clc
movsb
stos
jecxz
lret
sbb
clc
subb
stc
in
daa
push
dec
mov
ret
push
jmp
inc
add
out
jmp
outsb
adc
sar
addr16
fdivrs
mov
lahf
ljmp
push
pop
mov
subl
das
cltd
testl
lock
pusha
test
jp
insl
cmp
pop
inc
push
pop
movsb
or
out
dec
addr16
sbb
xorl
jecxz
mov
add
xor
sbb
add
mov
daa
pop
insl
push
jecxz
mov
gs
cmpsb
outsb
adcl
push
addr16
repnz
mov
push
insb
aaa
out
scas
fmul
xchg
mov
and
jae
inc
push
test
adc
enter
xchg
push
mov
or
hlt
out
xchg
shrb
pop
pop
out
cmp
std
imul
je
dec
mov
incl
ret
inc
es
pop
and
xchg
cmp
or
cs
mov
cwtl
loop
cmp
or
dec
mov
ja
sub
inc
daa
inc
fs
mov
pushf
or
inc
jl
dec
mov
mov
ds
jne
repz
into
cwtl
inc
inc
pop
pop
xor
add
jnp
shlb
mov
sub
adc
lods
dec
stos
add
lds
imul
in
decl
pop
shl
insl
ljmp
jp
jnp
mov
cmp
shll
add
mov
cmp
out
cmc
push
push
pop
cwtl
ds
out
icebp
mov
sbb
ficoml
cmp
mov
pop
jmp
cmpsb
mov
dec
push
or
and
pusha
outsl
pop
imul
add
cmpsb
shll
push
inc
sbb
sbb
fisubrs
mov
fmuls
test
bound
inc
shr
mov
push
mov
xor
les
js
in
jae
out
out
idiv
push
pop
out
mov
push
inc
es
mov
insb
incl
sub
mov
out
add
cmp
mov
mov
shlb
out
push
rclb
push
dec
dec
cmp
push
cltd
mov
dec
push
and
pop
jmp
sbb
out
pop
dec
jnp
les
mov
xchg
in
pop
pop
inc
rclb
cmc
mov
cmpsl
xchg
push
ret
scas
loope
jp
mov
push
or
or
inc
mov
loope
daa
hlt
insl
stc
mov
jae
int3
mov
inc
mov
jne
mov
aas
leave
icebp
mov
stos
fs
jo
pop
jmp
lea
js
dec
insb
fadds
xor
lret
aad
pop
and
xchg
add
stc
js
push
daa
push
mov
mov
mov
sti
repz
fmuls
xor
mov
bound
stc
pop
cmp
dec
and
push
pop
int
imul
cmp
fsts
jecxz
adc
mov
into
sbb
xchg
popa
and
pop
add
jno
movsb
or
imul
xchg
mov
add
in
mov
jb
test
jp
inc
xor
inc
cmp
add
xchg
or
frstor
insl
mov
push
hlt
js
and
mov
lods
ja
cmp
push
loope
jae
shlb
or
sbb
gs
jge
cmpl
jmp
xchg
out
hlt
add
addr16
xchg
icebp
jnp
dec
inc
mov
dec
aam
popa
push
mov
pop
adc
fsubs
mov
imul
mov
adc
cld
mov
cmp
fimuls
push
lds
repz
mov
test
clc
rolb
add
adc
mov
data16
cmp
cmpsl
mov
mov
outsl
push
and
sbb
xchg
jns
or
movsb
scas
imul
sbb
lret
js
inc
add
mov
sbb
in
dec
mov
jecxz
adc
dec
stos
sbb
and
fcom
shll
rclb
out
popl
inc
xor
sahf
mov
call
cld
sub
or
pop
es
xor
jg
leave
xlat
jmp
cwtl
jecxz
std
in
aad
int
test
and
stc
movsb
das
cmpsb
xchg
add
sub
push
push
insb
push
and
outsb
and
int3
add
push
fists
les
int
insb
and
mov
jmp
in
sub
mov
mov
mov
add
int
add
dec
imul
out
outsb
movsl
and
jns
imul
xchg
repnz
xchg
lods
mov
jmp
int
and
xor
xchg
xor
adc
mov
push
sti
imul
mov
popa
dec
jge
push
sub
mov
mov
jo
mov
ja
aas
or
mov
movsb
in
in
xchg
push
fdivrs
sbb
outsb
jb
add
das
sub
fs
addr16
loop
push
pop
sbb
mov
cs
aam
sbb
ret
xchg
icebp
jge
ja
inc
add
outsb
lcall
mov
xchg
xor
adc
and
push
mov
test
inc
push
std
bound
popa
jns
in
dec
add
cld
sub
mov
and
jge
js
cmp
xchg
push
push
or
loop
xor
pop
jge
push
sbb
add
and
loopne
aaa
imul
inc
sbb
jle
jp
popa
pop
imul
imul
push
xchg
int
repnz
adc
xchg
cltd
lahf
mov
dec
fwait
nop
push
add
out
push
push
cltd
jp
mov
mov
dec
shl
shlb
mov
les
push
inc
sbb
mov
pop
push
xchg
cmp
push
sbb
pop
dec
jb
cwtl
out
dec
jns
adc
int
jg
jl
and
popa
test
adc
cs
adc
sub
rcrb
cli
jge
and
iret
fstp
mov
lret
lods
out
and
cmp
pop
add
negl
jge
mov
pop
jno
xchg
pop
out
sub
sahf
mov
fisubl
loop
dec
pop
lock
mov
loope
paddusw
mov
mov
fcmovb
leave
iret
jmp
jb
or
data16
xchg
aad
sub
dec
arpl
test
insb
push
add
sub
cmp
mov
push
or
cmp
mov
icebp
mov
xor
lock
jle
rolb
xchg
test
xchg
lock
xchg
inc
add
mov
out
loope
lea
mov
dec
mov
xor
sub
sbb
or
fsubr
rorl
pusha
fwait
nop
in
outsl
mov
jnp
inc
lahf
sbbl
xchg
addr16
and
loopne
xor
ret
add
sbb
negl
outsb
pop
lods
jns
mov
cwtl
loop
ljmp
std
sbb
ja
loopne
xor
dec
sbb
data16
sbb
in
imul
pop
mov
inc
sub
arpl
mov
sub
test
je
push
and
in
ds
shlb
test
lods
cwtl
xchg
mov
stc
mov
cli
and
les
dec
cmpsl
jbe
pop
jmp
mov
test
cmpsl
xchg
and
push
mov
ret
mov
shlb
insb
jb
xchg
test
push
mov
sub
inc
mov
ss
mov
test
dec
or
mov
imul
sbb
pop
mov
fsubl
fst
enter
and
into
jle
adc
pop
test
pop
pop
pop
fists
dec
js
xchg
pop
add
and
add
movsb
xlat
mov
jbe
xchg
int
sub
pop
or
and
xor
mov
pop
mov
or
aaa
insl
adc
ja
aam
lods
es
add
push
adcb
xor
int
sub
fwait
cli
mov
cmp
xchg
nop
stos
sbb
mov
cmp
loope
cmp
in
inc
popa
cmp
jne
push
stc
dec
test
sar
std
sub
pop
fsubrl
push
je
push
stc
and
stos
or
sbb
lahf
adc
rol
sub
lods
push
and
ret
roll
xchg
sbb
cmpsb
call
add
inc
xchg
dec
pusha
push
mov
pop
out
xchg
or
popf
dec
pop
xchg
ljmp
loop
mov
test
adc
cmpsb
push
push
and
mov
mov
cwtl
jl
add
shlb
fidivrl
mov
test
stos
lcall
mov
push
div
mov
jmp
int
push
int
mov
mov
xchg
mov
js
rorl
push
add
fisubl
cmp
rcll
cmpsl
mov
lock
pop
rclb
loopne
mov
pop
inc
add
in
fcoms
leave
sub
push
dec
movsb
flds
sub
enter
lods
in
sbb
imul
mov
gs
fdivrl
mov
stos
mov
and
gs
das
out
push
adc
inc
inc
fnstenv
cmc
cmp
sti
sbb
les
xor
xchg
in
pop
loop
sub
xor
fwait
sub
test
fs
adcl
mov
jmp
stos
and
int3
sti
aad
xchg
sti
inc
subl
nop
and
addb
sbb
icebp
jle
mov
addr16
aaa
and
mov
jb
bound
stc
or
jae
jne
mov
xchg
insb
or
mov
fsubs
ficomps
mov
cmp
sbb
clc
clc
cmp
jl
out
add
mov
iret
mov
ror
and
mov
xor
add
lahf
mov
or
stos
sub
sbb
ds
xchg
mov
fistpl
fdivrp
mov
or
push
lea
lods
inc
inc
jp
ljmp
pop
push
sahf
fisttpll
sub
add
xchg
neg
xchg
push
lahf
retw
ja
pop
repz
push
dec
ljmp
daa
xlat
out
adc
fsubrl
sbb
or
xchg
data16
aam
aad
adc
xchg
clc
cmp
jg
inc
inc
and
mov
push
xchg
jo
testl
jne
xchg
ja
push
mov
jg
or
and
cmc
sub
xchg
neg
sub
imul
sbb
push
pop
pop
inc
scas
dec
in
push
jne
pop
jp,pn
mov
fwait
sub
loope
or
push
inc
sti
push
or
mov
into
jmp
inc
sub
rcrl
sbb
dec
or
enter
xchg
fnsetpm(287
fmul
lock
xlat
into
push
aas
ret
pop
aas
sub
push
imul
or
push
cli
in
xchg
push
fnstsw
out
aam
fwait
adc
in
inc
sub
or
pop
andl
mov
xorl
and
inc
js
test
mov
loopne
stos
sbb
jle
jo
or
cmp
cmp
scas
push
test
ucomiss
push
sub
pop
or
ss
das
into
mov
jmp
rcr
mov
sahf
push
lods
icebp
iret
movsb
inc
lods
das
mov
das
sbb
test
push
pushaw
mov
arpl
sbb
cwtl
scas
fcom
dec
and
sbb
addr16
pushf
push
test
js
add
dec
sbb
cmp
dec
mov
inc
inc
xchg
lds
push
mov
mov
fisttpl
and
and
adc
shrb
xchg
psubw
jns
lea
sub
call
push
jg
cmp
jns
mov
jl
sub
mov
push
mov
cmp
mov
xor
cltd
xchg
jns
int
pop
test
daa
jle
add
sbbb
cmp
mov
mov
pop
arpl
and
nop
rolb
pop
or
or
fldcw
cmp
sub
pop
arpl
daa
inc
inc
or
sbb
orl
inc
test
repnz
mov
mov
enter
add
in
test
xchg
rorb
inc
mov
xchg
mov
pop
xlat
movl
lds
adcl
push
lds
adc
shll
ljmp
int
inc
mov
adc
inc
and
pop
push
add
jmp
stos
and
jnp
inc
push
adcl
mov
add
push
lcall
mov
in
dec
cmp
scas
in
mov
jnp
add
inc
shl
fs
arpl
hlt
roll
rclb
dec
fwait
loop
push
pusha
pcmpgtb
xchg
jp
js
mov
stc
xor
or
fisubrs
testl
sub
ret
dec
test
fcoml
add
add
push
inc
data16
roll
xchg
adc
xchg
xchg
adc
push
lea
pop
imul
inc
shlb
testl
xchg
into
xchg
mov
and
cmp
sbb
sub
mov
rorl
sub
icebp
enter
xor
xchg
push
adc
push
mov
dec
popf
mov
push
lock
in
or
fsubrs
add
mov
sub
dec
pop
loope
repnz
iret
mov
outsl
daa
loop
fldl
inc
push
adc
inc
xchg
jbe
ficoml
pop
xor
mov
or
sbb
mov
xor
xor
cld
and
aaa
dec
shr
xchg
icebp
xor
inc
and
dec
inc
jge
push
pop
or
mov
roll
lock
roll
jnp
fisttpl
jbe
inc
cmc
push
clc
pop
fs
mov
sub
repnz
fs
jns
add
mov
add
std
push
nop
dec
cmp
cwtl
movsl
out
xor
cmp
sbbb
lods
inc
fucom
mov
ret
jl
and
xor
testb
cld
and
ja
int3
iret
mov
mov
add
ds
ja
cmc
aad
sti
xchg
push
mov
pusha
lods
mul
std
cli
int
loop
or
push
rorl
out
in
test
pop
int3
inc
rcrl
lds
adc
jge
push
orl
out
sbb
imull
pop
cmpb
inc
cmpsb
mov
push
pop
fcomip
int3
jns
scas
cmc
add
stos
sub
add
xchg
dec
fwait
or
nop
sbb
in
imul
test
repz
mov
mov
jno
lods
outsb
mov
mov
jno
lock
and
js
repnz
pop
mov
mov
and
into
jmp
adc
fmuls
sbb
mov
jmp
mov
jb
mov
subb
dec
mov
rolb
cmp
dec
fwait
out
mov
sub
pop
test
mov
sbb
jecxz
mov
ficoml
push
aad
pusha
mov
mov
cmc
test
and
dec
push
add
jmp
mov
testl
popf
pop
sbb
enter
sahf
xchg
lea
mov
or
inc
and
sbb
xor
pop
push
packsswb
jae
sbb
iret
mov
lahf
rorl
add
dec
and
outsl
inc
pop
push
packsswb
jae
sbb
iret
mov
lahf
rorl
add
dec
and
outsl
inc
pop
push
packsswb
jae
sbb
iret
mov
lahf
rorl
add
dec
and
outsl
inc
pop
push
pavgw
repz
jl
insb
gs
mov
mov
pop
lock
or
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jbe
notb
data16
jbe
dec
xchg
jne
push
repnz
inc
out
mulb
xchg
xchg
push
cmpsb
push
mov
inc
notb
data16
jbe
push
mov
xchg
xchg
dec
data16
jbe
daa
out
mulb
ljmp
out
notb
data16
jbe
push
mov
xchg
xchg
ss
jbe
daa
xchg
xor
es
xor
xchg
es
adc
movsl
mov
dec
das
pop
mov
ret
mov
jmp
mov
xchg
repz
push
mov
cmp
mov
sub
repz
push
cmpsb
out
out
inc
negl
or
jo
push
cmp
or
nop
es
adc
notb
and
divb
dec
cmp
cmpsb
movsl
lcall
cmp
push
movb
mov
xor
push
xchg
ss
sti
dec
mov
push
push
cmp
lcall
pop
xchg
andl
fisttpl
ss
pop
jle
jle
push
jae
xlat
mov
jecxz
xchg
lds
cmpsb
pop
mov
data16
jbe
push
mov
xchg
xchg
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
push
fists
cbtw
jbe
arpl
jg
pusha
repz
mov
xor
imul
clc
mov
add
pop
xchg
push
xor
sbb
insl
call
or
nop
add
push
movsl
adc
adc
sub
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
push
mov
inc
notb
data16
jbe
push
mov
xchg
xchg
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
push
mov
inc
repz
mov
hlt
test
das
dec
lds
popa
adc
sbb
mov
jecxz
and
mov
dec
and
imul
ljmp
mov
dec
mov
cmp
mov
insb
mov
lret
push
add
cs
xchg
js
xchg
mov
aas
dec
popf
jno
stc
jns
nop
mov
sti
push
mov
dec
jecxz
push
mull
mov
loope
out
sub
cmp
js,pt
xchg
sub
jae
ss
je
push
mov
insb
mov
push
mov
sbb
int3
pushl
mov
lahf
mov
imul
sbb
dec
pop
icebp
mov
shr
aaa
or
xor
xchg
jno
xor
pop
xchg
lret
dec
xor
mov
mov
rcrb
lods
lds
mov
test
or
in
jns
rclb
inc
ret
jecxz
mov
ret
mov
mov
push
inc
fwait
mov
sub
dec
scas
push
or
jl
xchg
sbb
pop
loopne
cmc
jp
lret
jno
add
xor
fs
enter
mov
cmpsb
mov
jns
addr16
nop
add
fistpll
arpl
pop
fs
and
mov
add
notl
jae
mov
adc
sti
add
shrl
loopne
add
aas
xchg
xor
cmpsl
rcll
mov
dec
add
movsl
pop
mov
pusha
jns
mov
setne
shlb
cwtl
sbb
jle
jmp
xor
mov
sub
pop
mov
sub
jg
movsb
sub
push
jge
adcb
mov
cwtl
imul
sub
push
fcoms
mov
rcr
popa
xor
mov
jmp
sar
push
dec
popl
loope
sahf
shlb
inc
lock
andl
xor
sbb
add
in
mov
xor
fwait
mov
inc
loopne
xchg
adc
pop
fdiv
pop
movsb
into
push
mov
push
test
js
sub
mov
lods
fidivrs
mov
ret
aaa
out
mov
hlt
sub
shll
rcl
shrl
sahf
pop
repz
ret
mov
xorl
push
mov
pop
xchg
jns
fists
addr16
dec
and
pop
dec
cltd
dec
addr16
cwtl
fdivl
scas
out
and
or
popa
popa
push
lahf
jmp
mull
sbb
sub
outsb
cmp
jecxz
shll
adc
sbb
dec
adc
push
mov
mov
mov
insb
push
inc
ss
fwait
div
push
adc
inc
std
lcall
xchg
add
in
sti
insb
lret
sub
cltd
pushf
fsubl
test
jp
dec
fadd
addr16
mov
pushl
enter
jo
scas
std
sbb
jbe
or
mov
or
ret
or
in
pop
test
cmp
mov
dec
sbb
pop
pushf
pop
adc
mov
push
dec
into
pop
mov
xor
adc
mov
mov
jno
jae
and
dec
ret
pop
push
lcall
aas
test
sbb
push
iret
sahf
inc
aad
cmp
add
mov
lret
int3
dec
xchg
xor
dec
xchg
adc
push
pop
jae
push
rcrl
repz
jo,pt
xor
push
test
cmc
add
mov
movsl
or
dec
sbb
pushf
pushf
es
aaa
stc
addl
call
insl
stc
std
mov
pop
pop
cmpl
pop
lock
mov
ror
inc
pusha
ja
movsl
jno
pusha
pop
pop
ficomps
loop
ja
repz
dec
inc
sahf
xchg
hlt
push
cmpb
sti
jge
pop
sahf
jae
outsb
fcom
les
cmp
or
loop
enter
pop
negl
lock
xchg
lock
ds
xor
lret
mov
adc
nop
std
lock
fldenv
andl
test
jbe
push
or
sub
inc
dec
inc
jae
sbb
mov
push
push
fsubrl
or
aad
jbe
cmovns
mov
pop
imul
or
xchg
fbstp
loope
sbb
shrb
sub
mov
sbb
stos
mov
sahf
aam
call
pop
dec
andl
lock
jp
xchg
mov
pop
pusha
mov
iret
mov
sbb
test
out
pop
mov
mov
mov
pop
adc
in
ss
push
and
and
movsb
sbb
dec
and
pop
pop
adc
sbb
bound
jb,pn
jp
jnp
mov
push
push
lds
mov
sbb
adc
and
and
int3
jo
lret
mov
mov
test
aas
mov
lret
xor
add
dec
adc
in
cmp
jp
cmp
lock
dec
lret
int3
mov
test
lret
xor
push
dec
push
sub
das
inc
sub
mov
and
hlt
xor
int3
mov
js
test
xor
daa
push
lahf
fdivl
mov
push
push
mov
xchg
pop
cld
movsb
stos
repz
xor
ret
jle
ret
inc
es
add
dec
or
pop
adc
inc
mov
test
movsb
mov
hlt
js
rcl
dec
or
jp
adc
mov
jns
ja,pt
add
outsl
xor
mov
mov
std
jns
xchg
cmp
ret
mov
or
repz
test
pop
mov
bound
repnz
fcoml
sub
lahf
push
popa
push
cmp
ret
aas
pop
mov
push
dec
sub
cmp
pop
pop
adc
repnz
push
fcomip
xchg
mov
or
mov
xor
aas
add
outsl
test
add
js
mov
cld
xor
and
pop
fwait
mov
adc
in
xchg
dec
pop
loop
dec
inc
loop
xor
mov
or
jmp
loope
pop
push
mov
call
sbb
shll
or
je
das
inc
fisubs
std
push
sti
stc
adc
ljmp
xor
dec
mov
adc
xchg
enter
sarl
mov
sbbb
aam
fisttps
or
int
es
mov
shll
inc
pop
inc
push
cmpl
jne
lods
mov
dec
or
pop
fadd
mov
jno
sub
cli
fstpl
outsl
sar
clc
ja
inc
xor
pusha
dec
mov
push
test
outsl
xor
popa
dec
mov
incb
leave
inc
movsb
dec
subb
sub
addl
mov
mov
out
push
in
cld
movsb
iret
mov
sub
mov
mov
push
hlt
mov
hlt
push
js
shl
jb
dec
and
ds
lahf
push
pop
xchg
push
repnz
mov
mov
mov
adc
repnz
pop
jl
dec
je
jge
and
insb
lret
mov
wrmsr
shlb
pushf
dec
sub
mov
shl
cmp
mov
lea
outsl
mov
mov
cmpsl
imul
lea
and
bound
push
cmp
mov
in
adc
mov
and
in
sbb
fcomps
aad
mov
ficoml
rorl
ret
xor
push
sbb
je
or
xchg
adc
or
fcoms
adc
pop
push
fcomp
dec
lds
fwait
les
arpl
mov
decl
xor
add
lret
sub
adc
adc
jecxz
mov
fucomip
inc
cmc
adc
mov
add
rol
cltd
dec
dec
jno
das
push
out
pusha
inc
mov
inc
and
ss
add
jnp
mov
hlt
out
cmpsl
leave
rclb
fsubr
pop
cmc
inc
lds
lret
int3
xchg
xchg
call
mov
cmpsb
shll
daa
xchg
je
cli
andl
sub
dec
dec
fidivs
ss
mov
cli
dec
sbbb
add
stc
aaa
subb
fdivl
sbb
dec
pop
pushf
mov
cmpsl
ja
enter
xchg
aas
push
xor
dec
mov
cmp
pop
add
xchg
ret
and
mov
adc
mov
les
dec
or
xchg
dec
pop
xchg
lcall
sti
sub
fdivl
add
push
outsb
in
push
and
ret
mov
cltd
fistpl
insl
xchg
push
mov
aam
adc
jb
ret
jg
sbb
jns
es
fucomp
aas
fldl
or
mov
lods
test
iret
stos
ja
pop
mov
negb
dec
dec
cmp
xchg
fldl
push
insl
dec
push
sahf
add
dec
lahf
jle
fimull
sbb
out
xlat
jl
scas
xlat
je
int3
popa
test
mov
outsl
test
ljmp
fwait
pusha
cmp
push
inc
fucomp
ficompl
out
xchg
push
iret
cli
es
lret
insl
and
addl
dec
ljmp
mov
pusha
cmc
cmp
jp
and
pushf
jge
fstl
push
fstp
ret
mov
movsb
aam
fbstp
xor
insl
adc
arpl
adc
add
lea
fs
mov
dec
sbb
jmp
lahf
ss
rcr
rclb
jge
sub
pop
jp
adc
shll
push
add
cmp
or
and
jo
adc
outsb
dec
ret
daa
lea
add
cld
or
mov
mov
pop
jb
rcrb
xor
mov
xchg
cmp
pusha
xlat
int3
test
jne
fidivrl
cli
shrb
jl
mov
iret
mov
xor
mov
jp
push
into
lret
mov
pop
cmp
lret
or
fstpt
sub
mov
mov
jle
xchg
dec
outsb
shr
loop
mov
adc
sbb
lret
jno
pop
pop
sbb
jg
jb
cltd
stc
lret
push
mov
stc
aad
mov
jno
cmp
push
jbe
jecxz
ljmp
roll
xchg
jp
cmp
scas
test
jbe
fistl
mov
jle
cmp
cmp
ja
push
dec
sti
rcrb
movsl
cwtl
inc
dec
leave
push
dec
xchg
outsb
aad
cmp
das
fstpl
cmp
xchg
add
loope
arpl
js
jp
test
addr16
push
jo
push
xor
xchg
dec
dec
test
fsubrp
mov
jb
mov
cmc
jo
adc
stc
gs
mov
pop
inc
mov
call
fsub
add
popf
add
dec
sub
repnz
es
jns
dec
cwtl
fs
sub
int3
loop
mov
aad
sti
mov
xchg
add
imulb
sub
or
xchg
ja
outsb
or
aas
das
dec
lds
xchg
sbb
hlt
add
rcr
sti
cld
rolb
fld
jl
inc
test
shlb
push
dec
dec
in
sti
xor
push
lcall
mov
pop
mov
jnp
rol
or
mov
add
lret
pop
sbb
enter
sahf
mulb
sbb
mov
mov
in
call
jmp
jle
fimull
repnz
loop
sbb
or
imul
es
cmp
push
dec
add
jno
loopne
in
outsl
jbe
stc
pop
fstps
mov
leave
repnz
add
rcrb
test
dec
in
or
movsb
loop
loopne
mov
push
ds
mov
in
lock
dec
stos
xor
repnz
mov
pop
push
js
pop
shll
mov
dec
push
dec
adc
dec
movsb
xchg
pop
je,pt
mov
rcll
pop
sbb
outsb
aas
aas
in
outsb
mov
loop
lock
xchg
aas
pushf
or
scas
adc
in
xchg
repnz
sub
mov
fwait
adc
pop
dec
xor
xchg
cmp
enter
push
mov
xor
mov
fisubrl
fs
mov
inc
popa
das
call
divl
leave
lahf
push
mov
jge
push
ljmp
lea
das
and
cs
or
push
jbe
cli
push
cmp
out
dec
add
inc
ss
fld
dec
lcall
adc
test
cmp
add
cmp
push
dec
stos
cmc
sbb
into
fildl
lahf
arpl
dec
add
cwtl
add
mov
repz
mov
repnz
dec
lret
dec
cmpsb
fidivrs
xor
ljmp
in
movl
pop
adcb
adc
or
mov
hlt
mov
arpl
std
outsb
filds
in
mov
push
loop
cmp
pop
inc
dec
inc
ret
loope
jmp
adc
xor
sahf
stc
cmp
xchg
add
dec
cmp
sbb
add
push
push
pop
aaa
daa
mov
sbb
test
xor
test
addr16
pop
sbb
test
stc
push
mov
or
cmp
movl
adc
adc
test
or
rol
repz
adc
xor
jg
cmp
dec
mov
lcall
xor
jge
jg
call
adc
adc
mov
popl
inc
sbb
xchg
insl
and
ret
setp
out
movsb
sbb
dec
in
pop
pop
and
adcb
fdiv
sar
cmpsl
dec
into
fcoml
lea
pop
inc
pop
xchg
mov
push
ja
rclb
into
or
into
mov
ret
iret
jb
sbb
and
in
dec
call
mov
mov
cmp
imul
inc
ljmp
push
jge
push
repz
cmpsb
loopne
add
mov
cwtl
mov
mov
mov
fsubl
es
and
out
push
push
ja
and
addr16
dec
ss
les
lock
or
adc
push
and
int
jl
inc
rcrb
mov
adc
push
jl
pop
ljmp
adc
jmp
je
adc
fldt
fidivs
dec
mov
xchg
into
addr16
insl
xchg
mov
cmpsl
adc
repz
push
xchg
push
dec
mov
pop
aaa
hlt
pop
cmc
insl
push
fimull
fwait
mov
cmp
dec
pop
lcall
cmpsl
movsl
cmp
lret
add
jns
xchg
push
or
lock
mov
fxch
pop
je
imul
mov
js
movsl
push
mov
jns
pop
pop
test
jle
dec
ljmp
outsb
shlb
cmp
or
in
out
jno
xor
popf
add
in
mov
mov
std
inc
mov
xchg
jns
les
lds
out
lods
inc
mov
xor
stc
mov
stc
popl
adc
cmpsb
adc
aas
nop
sahf
inc
push
dec
ret
jno
into
mov
data16
lcall
push
jl
xor
stos
js
ss
jae
mov
clc
lea
add
iret
xchg
out
call
aas
lcall
imul
cmp
fwait
mov
adc
push
ret
icebp
rorl
xchg
adc
ja
sub
add
and
and
cli
jmp
movsb
and
push
test
mov
fwait
inc
xor
inc
or
test
push
cmp
fnstcw
push
mov
push
nop
mov
cs
sub
mov
lock
xchg
cmpsl
sbbb
xor
push
test
xor
pop
pop
pop
push
jp
jl
leave
test
fcoms
sahf
cwtl
xchg
mov
pop
outsl
sbb
jb
xchg
mov
shll
aad
movsl
jmp
lea
mov
xchg
fmul
pop
mov
jo
pop
or
xchg
mov
inc
cmp
xchg
nop
pop
or
frstor
inc
scas
movsl
jmp
jo
test
push
inc
aad
and
orb
cmc
pop
jge
into
int
in
jmp
stos
and
xor
lahf
je
subb
add
dec
dec
jbe
add
cli
lods
add
or
or
pop
call
test
in
pop
xchg
sub
fdivs
push
or
push
mov
xchg
lock
lcall
jl
loop
cmp
and
into
xchg
ret
add
jmp
outsb
sti
jne
jne
mov
lret
jl
mov
leave
jp
mov
xor
ds
ficoms
leave
iret
mov
fcoms
sub
and
and
outsl
mov
cmpsb
je
scas
mov
sub
dec
push
pop
leave
in
mov
sub
inc
call
jo
mov
mov
xchg
and
fwait
les
and
pop
cld
push
in
imul
xor
js
lea
xchg
dec
fmull
orb
pop
sub
shr
mov
push
outsl
or
xor
pop
insl
adc
pop
test
jl
dec
ret
fdivrl
inc
fistpl
or
inc
outsb
jne
xchg
xchg
daa
push
xor
or
push
ss
xor
xchg
sahf
rcrb
cmpsb
mov
mov
stos
cli
repnz
adc
aad
mov
ss
pop
or
cs
jge
pop
push
fisubrs
lahf
mov
push
mov
xor
and
push
jno
cmp
adc
ds
mov
adc
lds
idiv
mov
ja
cmpsb
scas
imul
or
subl
adc
sub
push
pop
fidivs
pusha
inc
das
xor
clc
lahf
mov
mov
ja
ljmp
jp
xchg
pop
out
pop
aaa
loopne
push
and
cmc
add
jne
dec
out
inc
adc
inc
add
sub
or
add
or
roll
movzwl
pop
add
stos
jmp
scas
in
dec
mov
add
faddl
sarb
or
sub
movsl
adc
xchg
std
popf
lds
les
pushf
mov
fildl
pop
fidivrl
lods
fidivl
in
jo
imul
lods
cmp
enter
mov
mov
fsubs
aaa
notl
jle
and
inc
xorb
mov
xchg
and
movsl
mov
push
mov
xchg
fsubl
ljmp
rcl
add
mov
in
stos
add
adc
dec
add
ja
push
inc
jne
xor
sbb
and
xchg
pop
sarl
loopne
push
insl
lea
loopne
push
push
push
jb
ljmp
aam
adc
pop
aad
jp
sbb
add
xchg
add
mov
mov
lods
bound
sub
adc
or
dec
push
add
lret
out
addr16
push
add
ja
out
push
sbb
mov
nop
mov
leave
sarl
xchg
in
sbb
dec
push
dec
add
aam
inc
pop
and
es
imul
lret
repnz
inc
fldlg2
fnstsw
jmp
inc
in
ret
pop
mov
repnz
movsl
jge
push
xchg
rcl
sbb
mov
in
movsb
sbb
mov
push
fiadds
sub
jg
jle
das
mov
xchg
adcl
sbb
push
ret
push
mov
mov
dec
es
sti
cs
insb
cli
inc
xchg
cltd
inc
adc
stc
loop
add
mov
negl
sub
std
push
jp
jns
pop
dec
sbb
mov
sbb
in
push
dec
jbe
sub
xlat
xor
or
fdivr
fistpl
out
push
adc
jle
popf
add
out
mov
jg
rcr
stos
movl
rcrl
pop
std
xchg
push
sti
mov
sbb
repz
sbb
push
mov
mov
rcrb
rclb
shlb
cmpsb
nop
mov
mov
pop
pop
fs
dec
stc
test
ljmp
mov
jbe
lea
in
lahf
or
imul
mov
sbb
insb
jae,pn
mov
dec
push
mov
xchg
lods
movsb
and
xchg
add
and
adc
cld
cmp
jmp
cmp
sarl
fsubl
nop
fwait
addr16
adc
cltd
push
mov
xor
sub
mov
jbe
clc
xorb
lea
aad
imul
aad
sbb
pop
hlt
filds
sbb
call
into
mov
iret
mov
jb
or
fidivrs
mov
adc
pop
pop
jnp
sti
push
loop
mov
imul
lcall
mov
jno
js
pop
std
or
in
jno
mov
data16
jbe
push
mov
xchg
xchg
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
push
mov
inc
notb
data16
jbe
push
mov
xchg
xchg
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
push
mov
inc
notb
data16
jbe
push
mov
xchg
xchg
ss
jbe
inc
out
mulb
xchg
xchg
push
cmpsb
pop
mov
inc
notl
data16
jbe
push
mov
xchg
xchg
ss
jbe
in
out
adcl
jmp
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
divb
fistpl
inc
cmp
out
cmpsb
mov
sbb
jnp
or
pop
sub
mov
stos
fistpl
mov
pop
fldt
sub
imul
jnp
bndstx
dec
cmp
sub
sbb
mov
cmpsl
testl
cmp
push
pop
pop
aaa
jb
pop
cmp
cli
lret
mov
jo
scas
adc
mov
arpl
dec
sub
adc
cmpb
imull
xchg
push
outsb
jp
mov
cld
lret
add
mov
lock
stc
mov
add
imul
cli
fcomp
sub
mov
lret
fwait
icebp
or
jae
lcall
aam
in
cmc
testb
sub
or
lret
out
fiadds
mov
ficoml
inc
cs
or
pop
hlt
xchg
or
dec
ret
mov
ficoms
fs
push
mov
in
or
pop
imul
cmp
les
or
shll
sbb
xor
dec
shll
sbb
in
sub
mov
stos
sub
mov
cmp
int
popf
ret
jnp
xor
daa
jne
pop
sub
push
leave
cltd
fstp
fildll
sahf
hlt
enter
pop
or
push
adc
das
push
pop
mov
mov
xchg
in
test
lds
or
or
push
cs
or
popf
cwtl
pushf
jmp
lret
out
jmp
fldt
sub
imul
jnp
imul
sub
mov
jmp
sti
sti
mov
fldt
sub
imul
jnp
imul
sub
mov
dec
aam
mov
test
js
lcall
imul
xor
xchg
push
mov
out
int
sub
push
out
push
std
jecxz
pop
push
sub
scas
std
dec
adc
jno
mov
sub
addl
ret
ret
sti
jnp
data16
iret
insb
jns
out
mov
fistps
cltd
jle
dec
xor
scas
mov
jp
clc
push
lods
jae
bound
adc
adcb
jbe
mov
push
jge
and
ret
cld
pop
mov
xchg
sbb
lock
scas
jp
aam
cs
mov
pop
movsb
ret
mov
stos
jp
loop
ja
and
in
test
mov
mov
mov
dec
pop
push
nop
and
in
in
fcmovne
mov
popf
test
and
out
sub
push
add
dec
mov
out
xchg
jno
mov
cmp
xor
ret
fxch
cld
cmp
lret
adc
mov
mov
loopne
outsb
jae
sbb
and
xchg
pop
pop
cmpsb
push
sbb
jmp
adc
jbe
xchg
add
adc
jge
xor
sub
mov
xor
cmp
scas
fcmovu
dec
in
xchg
bound
in
xchg
mov
push
adc
das
adc
andb
popl
xlat
clc
sbb
and
push
adc
aaa
mov
jmp
xchg
addr16
popa
mov
mov
pop
cli
enter
pop
fmul
stos
call
push
es
push
icebp
pop
ficomps
xchg
cmpsl
sub
outsl
and
and
icebp
fisttps
mov
testl
loop
sub
push
sub
mulb
add
fisttps
out
push
arpl
sbb
xchg
nop
push
inc
mov
xchg
movsl
rorl
out
cli
push
lock
mov
cmp
stos
repnz
cwtl
aas
sti
push
push
fstpl
sbb
int
add
jg
mov
inc
add
pusha
outsb
ret
xor
sbb
xor
jmp
ja
pop
sub
cmp
dec
add
mov
loopne
push
and
repnz
cltd
push
push
push
sahf
imul
mov
int3
sti
xchg
mov
mov
or
mov
shll
xchg
in
enter
sar
mov
dec
sarl
stos
push
lds
cmpsl
out
das
push
pop
adc
and
repnz
repnz
or
mov
aas
inc
adc
dec
cs
adcl
mov
push
jo
mov
les
jno
pop
outsl
pop
lcall
pop
cld
and
xchg
repnz
pusha
pop
xor
mov
sbb
js
cwtl
pop
fimuls
sub
stc
andl
movsb
insb
dec
pop
popf
jecxz
jecxz
test
pop
and
mov
imul
mov
lods
and
mov
xor
aas
sbb
enter
push
xchg
ret
xchg
sbb
pop
fidivrs
jmp
pop
pop
mov
fs
and
je
in
inc
sbb
ljmp
push
push
lret
js
call
mov
jle
xchg
mov
mov
scas
cmp
lods
andb
sub
cltd
xchg
cmp
loope
ret
aam
mov
cmc
mov
pop
addl
jmp
test
xchg
pop
cmp
pop
xchg
or
pop
mov
and
iret
dec
rcrb
lcall
add
jo
jne
inc
xchg
jno
lods
dec
enter
or
cs
push
pop
movb
out
pop
sbb
outsb
jb
adc
fnstsw
scas
popf
mov
cmc
dec
and
jecxz
test
sbb
cmp
int
mov
popf
shrb
lods
and
fcomp
mov
xor
loop
and
push
cmc
or
cld
sti
sub
setnp
cmp
push
xchg
ret
xchg
xchg
ja
adc
icebp
test
mov
adc
push
fnstcw
js
mov
push
js
pusha
dec
or
scas
jl
jmp
push
cmp
mov
inc
test
nop
leave
outsb
je
xchg
mov
in
push
add
repnz
cmp
push
adc
pop
test
jle
aaa
aaa
movsl
pop
test
xchg
aam
in
mov
push
push
push
pop
call
aaa
out
cmp
xor
das
mov
xchg
jae
or
or
fcmovnu
insl
mov
rcrl
cmp
jg
lretw
cmc
outsl
xchg
xchg
call
ljmp
mov
mov
adc
lret
push
push
xorb
jmp
jne
insl
movsb
push
mov
mov
sub
add
and
enter
xchg
lds
or
mov
sub
in
daa
test
loopne
push
test
jae
ljmp
sbb
shlb
subb
testb
pop
stos
jecxz
pushf
add
mov
jne
jg
push
insb
repnz
mov
mov
out
adc
or
sti
push
xchg
dec
pop
jno
jnp
out
jb
test
int
pop
jne
lahf
xchg
clc
lcall
sarb
add
cmp
xor
hlt
pop
xor
je
outsb
adc
push
dec
lcall
dec
mov
mov
and
push
sbb
test
shrb
rcr
sbb
xchg
jmp
mov
pop
or
lret
or
sub
push
inc
sub
push
in
dec
shr
jge
imul
sahf
ja
lea
out
xchg
pop
sbb
cmpsl
push
cmpsb
pop
imul
cmp
inc
ljmp
jnp
and
lret
sub
out
mov
adc
mov
pushf
push
insl
das
pusha
mov
iret
imul
and
mov
in
mov
sbb
cmp
lds
out
mov
mov
add
mov
ds
pop
mov
loope
orl
repnz
jle
push
pop
mov
adc
inc
in
out
xchg
stos
adc
fldcw
adc
lret
inc
jae
cld
in
lret
lock
shrl
jmp
in
stos
repnz
loopne
push
negb
jmp
mov
push
mov
adc
dec
cmp
push
gs
sbb
popa
mov
int
mov
sysenter
lahf
xchg
xor
xchg
fisttpll
out
fstpl
mov
xor
in
scas
jo
outsl
int3
push
lahf
in
or
xchg
repz
xchg
add
and
imul
test
jb
adc
cwtl
fs
dec
pop
push
test
and
fstp
imul
divl
ss
pusha
lea
loop
fcmovu
sbb
jmp
push
leave
xlat
idivl
mov
dec
scas
cmp
in
or
jne
mov
rorl
cmp
xchg
jg
pop
add
insb
in
std
int
insb
or
out
clc
pop
inc
mov
cmp
in
sahf
in
aad
fmuls
mov
lods
sub
lock
cmp
shl
int
addr16
testl
mov
shrl
testl
xor
dec
cmpsl
or
aam
scas
mov
cmp
test
je
cmp
stos
and
stc
out
arpl
dec
xchg
in
cmp
or
or
fistl
add
idivb
in
int3
xlat
mov
testl
lcall
lods
ss
push
mov
or
cmp
sbb
pop
cmpsl
incb
push
and
add
pop
inc
imul
or
pop
sahf
add
testb
add
lret
and
insb
mov
out
stos
mov
push
or
pop
sub
aam
outsb
loopne
dec
push
add
add
pop
mov
xor
jle
jmp
mov
in
adc
and
mov
aaa
add
xchg
js
loopne
shlb
dec
adc
and
cwtl
push
scas
jae
xchg
cmp
jg
outsl
adc
pop
sahf
bound
pusha
jge
in
mov
fiadds
jmp
push
aas
loopne
scas
sbb
pop
js
std
sbb
popf
cmc
test
mov
adc
jne
add
lods
leave
dec
mov
jle
in
in
imulb
in
fwait
int3
pop
sub
inc
insb
call
xor
inc
add
jno
dec
roll
jb
js
fisubs
stc
clc
or
xor
iret
xor
mov
sbb
mov
in
loop
std
aaa
and
fsubr
sub
pop
mov
jns
loopne
fldcw
rolb
inc
sbb
pop
jge
lock
sbb
xor
dec
out
fwait
mov
inc
and
and
mov
push
and
jo
or
jns
mov
sbb
dec
test
rolb
rorb
mov
cltd
xchg
mov
sub
mov
mov
pop
mov
pushf
mov
lea
inc
scas
aas
out
mov
xor
ljmp
adc
inc
jl
mulb
cmp
mov
loopne
in
inc
or
push
lds
daa
push
rol
mov
ret
cld
adc
sub
mov
adc
pop
sub
and
les
mov
mov
and
fsubrl
push
mov
lahf
jp
sub
add
add
leave
or
and
arpl
pushf
mov
push
sti
stos
call
rclb
mov
mov
pop
mov
sub
out
in
cli
and
lock
and
out
or
mov
adc
scas
sbbb
and
xchg
adc
add
out
mov
shrb
subps
fdiv
dec
or
and
jmp
out
loope
stc
pushf
outsl
lock
outsb
sbb
loop
mov
xchg
inc
pop
ds
sub
int3
lods
cld
arpl
xchg
mov
icebp
sahf
mov
adc
inc
adc
test
fcmove
dec
aad
scas
and
xchg
lods
std
rclb
and
add
add
mov
insl
sbb
jno
mov
out
jbe
jnp
lock
cltd
add
test
sti
add
mov
adc
fcomip
lret
inc
xchg
pushf
clc
dec
lds
fcoms
and
int3
pop
push
sub
and
mov
xor
daa
xchg
orb
push
adc
and
stc
test
cmp
and
dec
in
sbb
push
popf
lods
out
xor
sbb
aad
jmp
fidivs
imul
mov
int
sub
dec
push
or
mov
cmpsl
push
push
rcrb
mov
shl
pushf
jmp
shrl
rorl
sbb
pop
dec
mov
dec
imul
sub
mov
shlb
aas
loope
je
sbb
xchg
test
jo
aad
xor
js
pop
mov
outsb
xor
mov
push
cmp
addb
aas
xor
das
jnp
cmp
jl
fstpt
fisubrs
push
push
fadds
ret
push
mov
sbb
and
push
int
sub
test
xchg
je
shrb
movsl
fsubl
or
test
cwtl
insb
in
lret
mov
pop
fisttpl
sbb
cmp
and
icebp
les
loope
pop
iret
pop
push
xlat
mov
sbbl
cmp
add
fcmovnb
jo
stc
pop
push
divb
mov
and
push
mov
push
add
cmp
inc
push
imul
in
inc
sti
lods
xchg
aas
jo
scas
in
out
hlt
jnp
jp
xchg
push
pop
adc
mov
js
xchg
clc
lock
dec
jmp
fsts
and
pusha
sarb
sahf
mov
mov
xchg
std
outsl
lret
add
jl
faddl
inc
pop
insl
ret
mov
decl
inc
or
in
inc
add
mov
daa
mov
ljmp
arpl
jmp
jecxz
jle
lcall
inc
inc
mov
scas
jbe
insb
push
pop
mov
pop
aad
pop
sbb
jp
mov
dec
push
adc
add
cld
repnz
ljmp
jmp
push
mov
enter
jmp
push
ss
and
xor
cmpsl
mov
in
es
sub
jmp
pop
dec
cmpsl
leave
and
mov
and
shll
cmpsl
xchg
dec
out
add
orl
mov
cs
cmp
test
or
and
fwait
insb
jb
and
push
inc
cmp
lahf
sbb
cltd
sbb
es
jecxz
aaa
jg
xor
fildl
xor
leave
or
in
shl
outsb
lret
add
ret
jp
push
and
xchg
into
loop
add
mov
lods
out
pop
dec
lock
sub
sahf
aas
mov
sub
mov
jp
sarl
sub
test
pop
aad
push
xor
insl
lret
xchg
sub
jne
enter
inc
fsubrs
push
xchg
inc
nop
out
jmp
pop
out
cs
dec
cmpl
scas
insb
cmp
push
and
cwtl
leave
pop
cli
inc
xor
add
adc
popa
or
lret
fistpll
push
inc
repnz
lds
stos
mov
jo
sti
stos
sub
jo
inc
mov
xchg
stos
sbb
mov
pop
fbstp
ljmp
sub
sbb
or
xor
mov
fidivrs
cmp
push
xor
ljmp
xor
ss
push
lock
fiadds
cld
or
jg
clc
pop
sbb
dec
aaa
cwtl
in
enter
gs
pop
mov
push
int
mov
loopne
jg
es
sbb
push
mov
mov
pushf
jmp
pushf
insl
repz
sub
pop
pop
dec
or
mov
loopne
js
out
jo
inc
jmp
dec
shll
rol
mov
lcall
mov
xchg
aaa
shlb
pop
adc
xchg
pop
mov
mov
addb
pop
je
inc
bound
cmpl
loop
lret
mov
mov
int
test
fcomps
fisubrs
pop
xchg
loope
dec
sub
inc
jle
mov
or
mov
dec
dec
lock
and
adc
repz
cmp
sbb
iret
rcrb
stos
pop
lcall
mov
sbb
clc
les
scas
loop
jne
sbb
out
cmpsb
data16
das
insl
fildl
es
xor
fcoml
dec
addl
cmc
mov
inc
xchg
dec
hlt
ljmp
daa
push
mov
xchg
ljmp
mov
xor
mov
rol
push
pop
ud1
xchg
push
insl
dec
push
outsb
or
add
cmp
daa
lcall
fs
jns
cmp
and
xchg
out
sub
dec
jne
cmpsb
aad
fwait
sub
push
andb
push
dec
mov
push
or
stos
jne
sub
outsl
mov
mov
xor
pop
mov
push
out
sbb
fcoms
lret
mov
mov
dec
icebp
imul
scas
mov
ja
loopne
inc
push
es
ret
mov
push
pop
push
push
lds
adc
mov
rcl
movsb
pop
hlt
imul
outsl
shrb
mov
jecxz
mov
jp
test
inc
adc
xor
repnz
into
stos
ret
imull
push
xor
cmc
cmp
sbb
jne
mov
arpl
nop
sbb
or
dec
lea
sbb
push
or
test
or
and
inc
ds
js
push
orb
jae
adc
adcb
mov
and
push
xor
inc
mov
push
sbb
fwait
or
dec
out
repnz
jae
outsl
sbb
stc
in
ja
inc
shlb
mov
mul
daa
sbb
nop
jne
adc
insl
dec
sbb
mov
lds
xlat
adc
add
mov
sub
adc
mov
es
jns
xor
mov
cmpsl
mov
out
adc
mov
ljmp
add
pop
sahf
mov
or
and
dec
lar
cltd
cltd
call
js
ret
das
xlat
shrl
xor
xchg
outsb
xchg
mov
es
push
add
lea
jp
xchg
stos
or
hlt
mov
cmpsb
into
or
mov
mov
mov
jge
std
jb
pop
aam
aam
or
dec
data16
into
jmp
pop
xchg
xor
sbb
jge
mov
and
cmp
push
mov
and
ljmp
mov
daa
push
aam
pop
inc
mov
roll
insb
xchg
adc
adc
in
stc
in
negl
out
mov
push
insl
cmp
push
iret
hlt
and
dec
xor
stc
sbb
push
fcmovne
in
sahf
mov
dec
jno
xor
lods
enter
xchg
xor
loopne
push
mov
lods
push
jae
sbbb
aaa
or
adc
sbb
pop
and
inc
loopne
popl
xor
clc
or
xchg
jne
sub
loope
pop
or
and
lods
je
push
cmp
jge
sub
stos
cmp
cmp
push
sub
inc
test
push
leave
mov
outsb
pushf
cmp
jecxz
and
xchg
push
mov
in
aad
lret
outsb
inc
jae
fldcw
xchg
fcmovnb
lea
xor
int3
ret
sub
mov
and
xchg
fistpll
jge
test
divl
or
pop
scas
mov
push
dec
pop
icebp
jp
loope
push
or
mov
jp,pn
jbe
data16
repz
notb
and
mov
pop
jmp
sub
in
cmp
pop
push
sbb
push
lea
in
lret
mov
push
test
movsl
cwtl
jg
and
or
insl
push
sub
sarl
jle
jp
xchg
mov
fnsave
aam
jg
mov
mov
ret
sti
xor
test
jo
rcrb
push
jge
dec
cmp
cld
lret
out
dec
addr16
dec
mov
pop
in
sub
hlt
add
imulb
ljmp
inc
mov
movsb
mov
jno
test
jecxz
popf
icebp
test
mov
aaa
and
jecxz
mov
xchg
bound
push
stc
sbb
pop
jmp
leave
call
cmp
popf
push
repnz
mov
loop
sub
or
adc
arpl
pop
add
sub
sub
push
dec
cmp
nop
lret
cmpb
add
sub
mov
inc
out
push
fdivrl
adc
clc
and
pop
lret
fisubrl
push
fildl
in
dec
sub
jbe
inc
cmp
aaa
mov
ss
inc
mov
hlt
out
add
jecxz
bound
sbbl
pop
aam
pop
inc
push
das
out
nop
dec
sarb
jge
arpl
cmp
xor
test
sub
jno
cld
insl
sbb
jecxz
int
adc
mov
and
xchg
test
mov
leave
inc
and
loopne
jmp
out
inc
lret
mov
pop
cmc
adc
mov
xchg
out
shlb
cmp
repz
cmp
addl
or
inc
jl
jno
testl
xchg
xor
jae
cmp
xor
jb
dec
das
jb
lods
adc
inc
inc
add
mov
sub
or
inc
jge
insl
xor
lret
lahf
add
repz
jnp
sbb
dec
popa
sti
and
outsb
mov
jbe
sbb
sub
lods
adc
jle
mov
xchg
lret
aad
push
insl
push
scas
xchg
sbb
stos
inc
and
je
pushf
sti
aam
repz
idivl
fcos
cld
movsb
mov
and
mov
je
push
and
or
out
inc
or
sbb
pop
inc
mov
push
xchg
shl
add
pop
cmp
movsb
mov
jae
aam
inc
mov
and
jge
pop
fcompl
add
pop
adc
xchg
test
imulb
push
push
ror
movsl
and
push
mov
jae
push
out
test
lea
or
ffree
jp
test
dec
loop
faddl
ret
mov
das
test
outsl
mov
repnz
dec
mov
jge
ret
hlt
in
out
repnz
pop
cmpsl
fistpl
add
cli
mov
sub
aas
addl
push
adc
xchg
add
sub
mov
xlat
xchg
push
pop
mov
int3
daa
adc
push
adc
stc
dec
stos
jle
xor
in
dec
cmp
test
shll
movsl
and
and
arpl
jl
pop
cmp
fistps
pop
repz
mov
push
cli
and
mov
mov
jbe
mov
mov
mov
fld
sbb
aad
xor
add
enter
rcrl
movsl
sub
mov
std
int3
sbb
xchg
repnz
add
xchg
sti
sti
mov
fldt
sub
imul
jnp
imul
sub
mov
jmp
sti
sti
mov
fldt
sub
imul
jnp
imul
sub
mov
xchg
mov
cli
mov
xor
stos
lret
xchg
sub
imul
jnp
jb
pop
or
mov
jmp
cli
sti
mov
fldt
dec
mov
mov
or
and
movsb
aam
les
test
push
lretw
push
mov
out
in
xchg
in
xchg
cmpsb
into
cmpsb
ds
cs
push
jbe
data16
outsb
push
pop
ss
es
aam
sahf
and
cmc
ficoms
mov
cmpsb
daa
dec
aaa
inc
push
outsb
push
jg
pcmpeqd
inc
cs
cmp
xor
mul
xlat
sub
push
push
inc
das
push
add
sub
test
out
pop
push
dec
pop
repnz
mov
jge
mov
mov
mov
push
popf
outsb
clc
fstpt
cs
out
out
adc
rcr
mov
jmp
test
dec
add
inc
mov
jmp
dec
add
xchg
xchg
dec
into
cmpsb
aas
push
ds
xlat
jbe
push
xorl
dec
fnstenv
push
jno
add
out
jns
cmp
int3
outsb
outsb
mov
xchg
mov
pop
push
out
out
or
mov
pop
pop
into
cmpsb
pop
jbe
lods
subl
stos
inc
xlat
and
jecxz
fdivp
mov
dec
into
mov
push
aaa
push
push
pushw
jl
push
jle
pop
das
push
aas
cmpsl
into
mov
xchg
xchg
jmp
mov
xchg
les
dec
inc
jnp
jp
or
pop
dec
dec
mov
mov
mov
lods
mov
lret
push
cs
inc
jno
jle
adc
xor
push
sbb
cmpsl
sahf
or
in
jmp
pop
pop
inc
and
adc
jp
push
pop
ss
es
testb
fidivs
cs
push
jbe
data16
outsb
push
pop
ss
es
testb
fidivs
add
mov
sub
pop
mov
lods
jb
xchg
ljmp
mov
repz
mov
in
fwait
and
inc
in
sbb
scas
mov
idivb
mov
mov
psrlq
aad
inc
inc
in
mov
push
pushf
imul
outsl
pop
in
jae
pop
mov
movsl
fistpl
pop
or
je
lret
cmpsl
push
pop
sub
arpl
xlat
or
pop
sub
jecxz
cmp
cmc
sarl
pop
ss
adc
insl
mov
lods
jmp
xchg
je
mov
cmp
sbb
fidivs
inc
dec
jb
sbb
mov
sub
push
dec
repz
cmp
push
xchg
std
out
aas
stos
sbb
add
je
sbb
inc
lods
mov
out
out
out
stc
cmp
adc
rorb
push
mov
or
xor
push
in
in
iret
jb
and
rorb
dec
cmp
movsl
push
and
cmpsb
into
inc
adc
xchg
scas
cld
pop
sub
mov
test
xchg
jl
pop
std
mov
stc
sub
adc
xchg
mov
xor
mov
pop
filds
jno
inc
jbe
cwtl
push
xor
sbb
add
addl
stos
pop
je
out
loope
insl
cmp
adc
mov
stos
repnz
jbe
lahf
in
mov
lock
lods
pusha
popf
or
leave
sbb
add
test
add
add
imul
ja
dec
mov
push
xor
movsl
cld
or
adc
sub
inc
jo
fisubs
sti
out
call
insb
dec
imul
push
push
mov
push
lret
fidivs
sub
enter
push
and
jmp
cmp
adc
dec
fstpl
int
xchg
and
shll
sahf
add
fcoms
pop
leave
xor
adc
fidivl
cmpb
pop
sahf
in
leave
inc
adc
cmp
dec
pop
inc
sub
xor
bnd
test
loop
xor
lret
mov
push
call
es
mov
xchg
push
loopne
jno
sub
divl
mov
sbb
dec
cmp
mov
fsubrl
incl
outsl
in
inc
lret
push
cwtl
inc
testb
jecxz
sub
gs
inc
adc
shl
std
jle
ss
sti
loop
xchg
inc
dec
pop
add
push
or
loop
adc
mov
test
adc
icebp
sti
in
inc
mov
push
inc
repz
int
sub
nop
inc
ret
imul
mov
mov
repz
push
and
lods
add
test
pop
sub
shrb
test
pop
jne
mov
jnp
adc
and
test
jnp
ljmp
dec
inc
pop
psllw
outsl
xor
cmp
push
jb
out
icebp
rcll
mov
sbb
testb
je
pop
mov
push
mov
dec
divps
nop
into
pop
pop
mov
dec
add
push
loope
jecxz
insl
call
or
nop
jnp
sahf
xlat
sbb
mulb
add
mov
sti
mov
aad
repnz
mov
add
cmp
xor
sub
add
sub
in
push
and
insb
je
out
push
lods
cwtl
mov
aam
adc
dec
aam
xchg
pop
inc
dec
sbb
push
mov
mov
pop
inc
out
adc
icebp
pop
inc
xor
pop
jbe
mov
cmpsl
pop
jecxz
xor
adc
das
jnp
adc
dec
and
xchg
loope
xchg
orb
xorb
shr
jmp
movl
mov
rcrl
push
xchg
ja
adc
jle
sub
sub
test
mov
dec
pop
scas
mov
or
push
lret
mov
cmpsb
jmp
lret
cmp
fdivs
fdivrp
sub
sbb
fstpt
imul
orl
cli
stos
je
in
xor
and
sbb
adc
sub
repz
test
in
and
jnp
cmpsb
mov
and
xchg
iret
sub
and
movsb
sbb
fstpl
in
adc
xchg
push
push
stos
aam
xorl
inc
test
rclb
in
and
xchg
inc
lods
mov
pop
cwtl
call
add
int3
out
in
inc
mov
mov
orl
adc
mov
push
testb
and
outsl
jo
aas
sbb
inc
inc
cmp
pop
es
inc
jle
idiv
fldl
fisttpll
into
ret
repz
mov
in
adc
mov
push
popf
add
lret
lock
in
outsb
ficomps
insb
or
inc
scas
pop
mov
xchg
sub
in
fimuls
repz
mov
scas
adc
xor
sub
push
sahf
push
mov
mov
mov
inc
sub
daa
push
mov
mov
roll
ret
in
imul
mov
rcll
sbb
cli
mov
data16
jg
sub
pop
mov
iret
cmpsl
push
shrl
int
testb
adc
inc
hlt
mov
mov
rcr
mov
xor
fdivs
jne
pop
cmp
pop
jecxz
fdivr
dec
outsl
add
inc
and
stc
dec
lds
insl
iret
inc
xchg
inc
fwait
std
inc
jl
insb
inc
pop
bound
fnstcw
cli
cs
mov
pop
enter
shlb
mov
adc
mov
das
fstpl
cmpsb
push
add
jecxz,pt
push
mov
mov
in
push
dec
test
fsubrs
sbb
and
sbb
jle
orl
out
pop
pop
bound
int3
adc
lds
jb
push
pop
xor
xor
sub
pop
divb
mov
cli
addb
pop
inc
hlt
adc
popa
add
leave
adc
add
icebp
jp
subl
dec
je
mov
mov
out
cmc
fwait
cmpsl
sbb
cli
das
cmp
inc
jo
comiss
and
scas
push
pop
ret
in
ss
jno
das
xor
icebp
mov
push
enter
inc
adc
psrld
mov
mov
nop
outsl
and
inc
cmp
lea
push
insb
dec
push
inc
xor
cmp
das
lcall
sub
jne
xor
dec
or
jmp
pop
sub
cmp
ret
ljmp
insb
test
and
out
mov
cmpsl
cwtl
pop
ret
mov
aaa
jmp
shl
xchg
movsb
adc
sbb
mov
jmp
mov
dec
dec
test
sbb
push
in
add
cmp
ss
xchg
cmp
lcall
xchg
fists
fcom
pop
cmp
in
popf
loope
add
dec
or
xor
mov
pop
clc
inc
sbb
and
pop
jae,pt
mov
inc
nop
lods
mov
mov
dec
mov
shlb
dec
addr16
pop
add
clc
dec
jbe
loope
xchg
xlat
push
dec
dec
shlb
mov
out
andb
fmulp
hlt
jnp
xchg
pop
sti
adc
les
enter
scas
push
loop
addr16
jo
out
mov
insl
sub
loope
das
and
sbb
je
dec
pop
inc
rolb
pop
cmpsb
dec
push
test
movsb
mov
jb
lret
push
mov
inc
popa
adc
xchg
push
push
xchg
inc
out
pop
add
daa
iret
push
lods
dec
call
jo
mov
jbe
jne
les
vpunpckhdq
rorl
fistpll
or
int
pop
sub
jle
pop
lret
xlat
sbb
mov
aam
ljmp
or
imul
pop
adc
lret
movsb
cmp
dec
and
jbe
and
push
movsl
jno
sub
fstl
mov
push
push
or
mov
adc
pop
jnp
add
add
pop
xorb
aaa
movsl
lea
add
aad
xchg
dec
pop
inc
jg
sbb
into
pop
cmpl
mov
xchg
inc
mov
jne
repz
out
ret
das
push
xor
outsl
mov
jp
int3
inc
add
jbe
in
fidivrs
jae
push
fistps
cmp
and
jle
adc
cmpsl
mov
adc
and
int
jae
push
inc
or
pop
pop
sahf
pop
mov
aaa
add
mov
inc
mov
fwait
or
test
test
lcall
inc
fbld
push
sub
call
daa
lahf
fbld
daa
jnp
push
test
testb
adc
adc
ds
imul
mov
xchg
pop
pop
cmp
or
call
or
and
loopne
mov
fstps
push
adc
mov
mov
mov
dec
in
sbb
cmp
ljmp
aam
mov
int
sbb
je
arpl
nop
out
push
gs
out
leave
mov
jno
sbb
lcall
loope
repz
or
mov
pop
dec
sbb
sbb
pop
loope
jae
xor
test
lret
add
ljmp
push
inc
mov
stc
sbb
sbb
sahf
test
out
pop
push
add
ret
add
or
loop
fildl
xor
and
cmp
pop
imul
cmp
xchg
test
leave
xchg
std
mov
xchg
lcall
test
scas
out
dec
sbb
sub
mov
lods
popf
push
add
cmp
sbb
bound
mov
dec
insb
cwtl
pop
pop
push
xchg
push
xchg
pop
sbb
in
ja
clc
sti
adc
add
ret
test
xchg
mov
sbb
sbb
xchg
pop
shlb
fsubrs
fisubrs
xchg
lods
in
mov
hlt
das
push
jnp
lock
xor
xor
push
aaa
repz
js
jno
incl
inc
pop
fldenv
push
es
jns
out
test
push
aam
icebp
inc
mov
fwait
int3
inc
aad
sub
pop
pushf
mov
lods
lcall
push
push
xchg
cs
out
mov
mov
pop
jb
fmuls
out
jmp
push
or
push
sbb
push
sahf
lds
lret
repnz
dec
inc
rolb
loopne
arpl
stc
lods
pop
push
dec
out
call
mov
sbb
sar
stc
lods
fs
js
mov
sarb
bound
jo
and
data16
or
lods
push
inc
sub
arpl
iret
lock
xchg
outsb
sahf
sarb
rcrb
xor
lret
fsubl
out
push
xchg
push
mov
arpl
jb
pusha
adcl
cmpsb
cmp
sbb
xchg
dec
ljmp
jle
out
cmpsb
imul
or
mov
pop
icebp
dec
stos
leave
in
xchg
or
and
dec
imul
sbb
repnz
mov
outsb
sbb
pop
pushf
xlat
lret
jne
enter
xchg
fstpl
mov
in
or
add
ljmp
test
lret
insl
movsb
sub
cmp
push
popa
mov
test
inc
fidivrs
or
pop
push
bound
xchg
imull
adc
mov
decl
lcall
jp
std
add
fmuls
pop
lods
repnz
lcall
add
lret
push
jg
xchg
push
faddl
ljmp
xchg
xchg
cmc
add
sub
bndstx
fbstp
lcall
imulb
push
ret
inc
and
popa
sub
lahf
in
inc
divl
lods
dec
mov
cs
cmp
addb
and
cmpsb
xchg
cmp
or
cmp
and
jo
insb
dec
fcoms
jne
imul
fcmovu
int
xor
inc
sub
and
outsl
dec
push
cltd
inc
dec
ja
pop
movsl
cmp
jb
mov
hlt
dec
call
insl
jae
hlt
in
add
xchg
cmp
mov
inc
sub
repz
dec
fs
mov
out
adc
push
xchg
sbb
xor
je
cld
inc
outsl
pop
xor
imulb
pop
call
xchg
or
mov
cmp
mov
mov
or
int3
mov
mov
cwtl
fidivs
push
xchg
in
sbb
pop
imul
xchg
cmp
dec
js
add
sub
dec
call
push
popa
inc
lret
repz
dec
fiadds
test
mov
dec
imul
pushf
shlb
mov
sbb
fstpt
sub
pop
jne
out
addl
dec
cli
mov
mov
jno
push
and
insl
cmp
push
inc
out
arpl
stos
xchg
mov
rcll
loope
scas
and
or
cltd
jl
xor
pop
inc
pop
adc
push
mov
mov
subb
push
movsb
jnp
js
mov
push
pop
sub
je
xchg
pop
and
or
mov
pop
cmpsl
xchg
push
cli
lods
sbb
inc
lods
pop
nop
loop
jecxz
pushf
les
cmc
xor
ret
cmc
int3
dec
fcmovne
xor
js
popa
mov
jne
lds
sbb
cld
pusha
pop
and
mov
int
test
fdivs
cmp
das
arpl
fmull
test
jmp
jmp
inc
daa
and
adc
shlb
push
xchg
cwtl
pop
jo
cli
pop
push
dec
mov
int
xorl
pushf
xor
sahf
cltd
push
jb
mov
testl
cwtl
sti
stos
in
cmpsl
cld
push
hlt
push
fsts
stos
xchg
outsb
popf
ss
pusha
mov
call
mov
cmp
dec
push
jecxz
mov
mov
popa
mov
sub
add
fistpll
adc
dec
je
dec
mov
add
inc
lds
or
mov
jecxz
ss
push
cli
insb
adc
jmp
aad
ret
out
pop
mov
fiaddl
dec
movsl
clc
hlt
imul
push
mov
pushf
inc
and
add
scas
cmp
shrl
stos
push
xchg
call
sbb
mov
pop
xchg
clc
into
test
pop
and
popa
xor
inc
cwtl
inc
or
and
outsb
jno
mov
add
pop
and
mov
dec
sbb
negl
inc
es
in
or
mov
push
push
in
pop
out
aad
adcb
ret
pop
adc
mov
xchg
jbe
jmp
cld
adc
aaa
pop
ljmp
and
mov
jl
pushf
xor
push
adc
mov
dec
in
or
adc
subl
mov
ret
xchg
cmpsl
loopne
int
and
xor
ss
dec
in
cmpsb
mov
ret
mov
push
lret
sub
aad
mov
push
pop
mov
add
ret
setb
dec
dec
ret
xlat
xchg
into
js
add
pop
dec
pop
loope
cmp
call
daa
sub
inc
outsl
cld
cmpsb
mov
pop
dec
movsl
sub
pop
cmpl
imul
mov
xchg
mov
sbb
mov
shlb
inc
push
dec
mov
mov
sub
out
lret
xor
roll
pop
pop
xchg
pusha
into
mov
leave
sbb
push
inc
jne
cli
xchg
icebp
in
xlat
push
sbb
sub
or
cli
mov
xchg
pusha
dec
jle
and
adcb
loopne
jbe
lcall
sahf
xlat
idivb
dec
adc
hlt
lea
mov
daa
jae
iret
jb
test
inc
adc
outsb
aam
or
iret
push
add
cmp
or
cmp
fidivrl
add
push
in
rcll
sub
aas
and
mov
mov
pop
aas
cmc
ja
mov
or
pop
sub
shrl
cmpsb
xchg
dec
insl
add
js
sub
lahf
mov
push
ret
jge
push
iret
hlt
fcomip
in
mov
mov
jmp
cmp
mov
aad
cmpsb
addl
sahf
clc
adc
ret
push
sbb
aam
aad
int
dec
aam
xor
stos
cmpsl
push
es
cwtl
and
js
subl
cwtl
cmc
jne
loope
push
sbb
bnd
sbb
sarl
arpl
lds
outsl
jbe
dec
shufps
test
rclb
lock
and
hlt
fmull
sbb
cmc
pop
sub
sub
xor
aaa
std
inc
mov
aad
jge
int
mov
std
cld
dec
push
out
aad
push
cmpsl
mov
dec
std
pop
mov
popf
adc
outsb
aaa
in
and
test
test
test
pop
sbb
xchg
ja
fcompl
shlb
ljmp
lds
cmp
mov
push
jns
pop
xchg
inc
mov
shlb
and
cli
xchg
jno
cmp
movsb
mov
mov
push
sarl
sahf
add
cltd
push
xchg
and
cmp
pop
in
cli
stos
icebp
jae
out
lret
mov
mov
ja
int3
cmp
adc
aaa
rcr
jno
xorb
std
jne
push
inc
xchg
xchg
and
cmp
pop
sbb
pop
scas
jl
push
sti
mov
lods
lret
out
xchg
lret
mov
cmp
cld
pop
cltd
cmp
fs
push
outsb
push
cmp
pop
xchg
add
mov
mov
sub
pop
nop
movsl
les
call
sti
out
cltd
sbb
mov
adc
test
jg
and
clc
pop
xchg
mov
push
inc
jecxz
and
aaa
pusha
cmp
push
cltd
mov
insl
test
fmull
push
ja
push
stc
test
cvtps2pi
and
adc
adc
sub
sub
mov
push
pop
xchg
lods
ffree
mov
imul
dec
cmp
jae
pushf
lcall
addb
push
xchg
push
push
adc
inc
jmp
addr16
in
negb
out
outsl
lahf
add
hlt
pop
pop
push
popa
leave
std
jmp
pop
or
xchg
adc
xchg
push
jl
cltd
mov
das
in
dec
aam
dec
pusha
inc
int
add
sub
in
pop
lret
sub
lock
add
mov
loopne
xchg
cmpsl
mov
push
pushf
xor
fisubrl
add
mov
js
xchg
mov
es
inc
in
sbb
cmpsb
aad
enter
dec
cmp
inc
filds
iret
cwtl
in
xchg
lea
xor
push
inc
mov
int3
cmp
shrb
inc
aad
push
cmpb
cli
adc
hlt
movsl
inc
cld
lahf
sbb
into
popf
xchg
push
shl
shll
or
jns,pt
xor
jnp
jne
lea
das
adc
push
inc
fwait
xchg
hlt
test
pop
xor
mov
sub
inc
and
mov
fucomi
lock
hlt
sbb
or
rep
push
aaa
nop
dec
cli
pop
sbb
jmp
mov
lret
test
mov
iret
sbbb
and
mov
sbb
sub
xchg
jbe
dec
jbe
repnz
or
je
adc
cwtl
jecxz
adc
adc
adc
push
inc
jns
xchg
or
data16
dec
pop
std
js
sub
cmp
ja
lret
ljmp
insb
lds
shrl
sbb
add
test
addr16
inc
jl
ljmp
sahf
push
adc
out
int
repz
xor
dec
pop
dec
xor
ljmp
fcoms
mov
ficoms
cltd
ljmp
sti
pusha
imul
and
cs
shll
sub
jne
xchg
and
test
sbbb
stc
xchg
pushf
mov
pop
sbb
movsb
jae
or
dec
and
pop
shl
push
cmc
fs
cmc
pop
cmc
mov
in
cmp
mov
jne
or
mov
out
insb
sahf
rep
outsl
roll
adc
or
into
mov
ficomps
dec
cmp
mov
rclb
sbb
jb
addr16
jl
rcr
hlt
fcmove
jo
repz
push
pop
fidivs
adc
sti
push
mov
loopne
popa
dec
outsb
shlb
mov
push
adc
mov
cmpl
lea
insl
notb
subb
xor
pop
into
les
mov
out
cs
xchg
or
imul
test
mov
pop
call
test
movl
aas
xchg
xchg
fs
ljmp
sub
dec
and
dec
push
fadds
divb
mov
pushl
jae
and
cmp
shrl
push
fdivs
sub
dec
or
loopne
mov
aad
or
add
pop
pop
ds
xor
mov
pop
adcl
in
icebp
ret
sbb
sahf
add
data16
push
repz
adc
push
data16
outsb
push
pop
ss
es
testb
fidivs
cs
push
jbe
data16
outsb
push
pop
ss
es
testb
fidivs
cs
push
jbe
data16
outsb
push
pop
ss
es
testb
fidivs
sub
pop
jbe
data16
outsb
push
fidivs
into
es
push
insb
xor
mov
and
pop
aad
notb
hlt
add
jne
popa
sbb
scas
jbe
test
lock
or
aad
lds
adc
xchg
push
cmpsb
imul
movsl
pop
popf
test
push
in
aad
lds
xor
fs
jae,pt
inc
out
test
cmpsb
ja
mov
xchg
hlt
add
jge
je
bound
mov
pusha
xchg
jp
pushf
insb
lea
xlat
jmp
push
sub
and
jbe
arpl
mov
stos
sub
repz
aad
loopne
mov
sub
jl
dec
lock
pop
cltd
pushf
mov
mov
mov
xchg
data16
push
inc
sbb
add
add
xor
or
dec
xchg
cmpsb
enter
inc
repnz
test
loopne
push
sub
lret
fcom
call
push
fs
xchg
jne
jne
lahf
push
lock
xchg
dec
sub
pop
pusha
sbb
imul
xchg
inc
gs
cmc
incl
out
fwait
popf
push
mov
lea
out
jb
gs
add
nop
mov
or
pop
leave
or
add
idivl
jns
imul
and
aad
xor
out
mov
mov
inc
lods
fwait
jae
arpl
jecxz
inc
cmp
jbe
aam
shlb
push
mov
mov
addr16
inc
stos
lds
cmp
inc
push
mov
movsl
jbe
test
cmc
push
in
aad
and
xchg
jne
gs
cmpsb
inc
push
mov
movsl
jbe
test
cmc
push
in
aad
pusha
jae
push
outsb
insb
fdivr
add
aas
cli
mov
adc
adc
pop
out
lea
and
je
loopne
jg
cli
gs
push
or
cmp
sbb
cld
mov
mov
pusha
lret
fwait
add
push
int
mov
push
lahf
fs
and
dec
bound
xchg
call
sbb
jle
add
inc
insb
mov
das
popa
movsb
push
test
arpl
jmp
in
out
ja
xor
dec
roll
daa
mov
add
jbe
int3
cli
filds
inc
repz
filds
sbb
sub
push
aas
jmp
outsb
cmc
test
xorb
jg
pop
test
hlt
push
pop
adc
testb
and
xor
fdivrl
sbb
push
and
dec
dec
cmp
jle
stos
outsl
adc
push
and
addr16
jmp
mov
mov
scas
bound
mov
dec
dec
loop
mov
mov
xchg
ds
mov
inc
sub
lret
nop
mov
das
mov
mov
adcl
xor
test
ljmp
je
fists
mov
sbb
xchg
xor
push
scas
out
jo
xchg
ljmp
cmp
int3
xchg
inc
cmpsl
mov
push
repz
cmpsb
jnp
fs
mov
mov
push
aad
sbb
and
popf
mov
xchg
push
test
data16
xchg
pushf
jmp
rolb
inc
scas
outsl
inc
sub
or
xor
fstl
ds
jb
add
mov
sbb
xchg
jmp
cli
popf
push
mov
jns
les
or
lock
test
add
rorl
push
pusha
sub
cltd
push
push
xchg
mov
jne
mov
das
or
ss
stos
or
xchg
cmpsl
xchg
or
push
inc
mov
scas
sbb
mov
in
lock
imul
roll
cmp
imul
pop
dec
js
ds
jge
mov
icebp
dec
out
push
jae
pop
pop
imul
jmp
xchg
xchg
cld
call
pop
pop
xor
clc
cmp
sbb
or
push
je
pop
cmp
dec
cmpsb
adc
lea
enter
or
jno
pushf
cmp
add
test
sbb
daa
mov
mov
dec
ret
rcr
leave
adc
dec
mov
jb
outsl
imul
add
adc
lock
icebp
add
paddusw
mov
test
ret
lods
xor
jns
aam
cltd
pusha
lods
call
or
shlb
add
mov
shr
mov
adc
jno
dec
inc
push
push
mov
push
icebp
xchg
rcr
inc
add
clc
push
stos
mov
fnsave
cmp
xor
push
inc
and
lret
pusha
sub
ficoml
cmpsb
aam
leave
and
stos
pop
stos
fmul
mov
sbb
mov
and
pop
adc
lret
adc
jae
bound
mov
mov
ficoml
sub
lods
inc
push
jg
lods
sub
pop
pop
mov
icebp
xchg
push
repz
push
push
movsl
sbb
cmp
or
cmc
cmp
pushf
shll
dec
popa
ds
lret
mov
inc
lret
mov
mov
mov
and
jb
aaa
gs
aam
sti
xchg
cwtl
mov
repz
adc
cmovne
xor
imul
lahf
add
out
or
shll
addr16
cmp
mov
mov
loope
and
pop
push
fsubs
pop
and
xor
ss
mov
push
lahf
popf
mov
push
inc
cmp
push
cmp
sbb
add
stos
mov
jo
mov
mov
mov
or
pusha
jl
push
dec
sub
ror
adc
lret
inc
cmp
int3
lds
in
jmp
or
and
rcr
jle
cmp
and
jnp
push
out
adcl
rclb
add
jns
pop
or
cltd
or
mov
int3
dec
xor
ss
mov
ljmp
dec
mov
pop
push
mov
add
cli
movsl
into
mov
mov
decl
pop
mov
xor
mov
ss
jl
cmp
pop
and
inc
dec
out
addr16
lret
andl
pop
push
notl
int3
xchg
fwait
pop
into
mov
loopne
outsb
mov
scas
js
test
enter
sbb
inc
nop
shr
push
ret
mov
repz
sbb
movl
test
sbb
pop
scas
pop
nop
mov
push
inc
fcmove
mov
pop
lea
xlat
mov
mov
fistpll
push
cld
cmp
lcall
push
cli
lret
adc
mov
adc
mov
jp
outsl
ret
pusha
call
out
loope
add
and
xchg
xchg
inc
std
decl
adc
mov
in
dec
jb
cmp
popl
arpl
mov
data16
aas
call
aam
repz
in
jne
leave
or
jge
cmp
pop
fcoms
aam
dec
lret
mov
add
lahf
mov
pop
ret
jge
cmp
outsb
push
int3
movsb
arpl
in
or
and
xchg
es
push
xchg
xchg
lret
cli
dec
bound
pop
jmp
insl
or
hlt
insb
and
mov
notl
or
lret
add
shrb
push
movsb
xchg
push
sub
test
icebp
mov
mov
adc
loop
es
adc
mov
lock
outsb
and
inc
bound
adc
icebp
mov
and
pop
dec
mov
push
xchg
mov
mov
fstpl
sbb
cmpsl
adc
lcall
aam
cli
cmp
outsb
scas
push
sahf
nop
and
jbe
je
push
rorb
clc
or
push
je
ds
adc
out
dec
hlt
shr
daa
aaa
inc
inc
lds
enter
inc
xchg
pop
or
lds
shrb
mov
mov
mov
ret
je
js
inc
sub
adc
xlat
xor
pop
sub
and
dec
mov
pop
lea
sti
jo
in
pop
cmp
pop
movsl
subb
xchg
outsb
adc
xor
fs
pushl
mov
push
mov
adc
mov
daa
imul
add
or
insb
sub
mov
rcrb
cld
scas
lret
fldt
mov
sbb
stc
outsb
xor
lahf
jmp
jne
sub
add
fistpl
loop
test
and
and
data16
pusha
jno
int
insb
inc
mov
icebp
pop
sub
xchg
mov
cmc
mov
cltd
ret
pop
xchg
lds
xor
jbe
mov
mov
dec
push
pop
or
out
outsb
bound
sahf
popa
cmp
inc
mov
xor
jo
iret
rcrl
jmp
dec
mov
xchg
dec
ds
in
sarl
pop
add
xchg
mov
shll
or
lock
nop
sub
lds
lock
sbb
sbb
loope
mov
stc
mov
sub
lock
out
lret
mov
popa
dec
push
fiadds
cltd
shl
mov
xchg
push
fwait
decb
inc
les
mov
into
into
pop
loop
int3
add
dec
inc
rol
and
adc
popf
push
xor
out
lret
push
xchg
push
mov
scas
sub
ljmp
das
xchg
call
inc
ds
sub
js
xor
in
dec
addl
imul
add
mov
or
aam
or
out
ss
jns
jo
adc
xchg
mov
pop
pop
pop
addb
cmpb
sub
ds
sub
pop
and
pop
mov
outsw
sub
rcrb
push
sub
popa
aas
jmp
xor
fwait
xor
sbb
mov
aam
mov
leave
adc
aad
dec
cmc
cmp
fwait
icebp
test
dec
or
dec
or
jp
pushf
shlb
push
jbe
add
sbb
out
aaa
enter
cmp
popa
sbb
push
movsb
test
cmp
inc
pop
mov
scas
add
mov
mov
je
scas
sub
or
pop
pop
sub
adc
mov
cli
or
repnz
cmp
pop
or
bound
push
push
cmpsl
mov
data16
mov
cld
lds
and
pop
inc
xorb
divl
sar
in
xlat
lea
cwtl
and
popa
and
pop
and
sti
or
sbb
jle
es
dec
gs
lods
repz
inc
das
cs
or
pop
push
das
xchg
xchg
je
fstps
push
loopne
push
push
aaa
adc
push
sar
iret
jmp
movsl
rclb
cld
add
mov
and
dec
or
out
nop
lret
ret
sbb
and
xor
mov
hlt
jns
push
mov
pop
xchg
mov
sti
sub
push
pop
jg
push
stos
pop
in
sub
insl
pop
shlb
cmp
dec
and
pop
data16
test
pop
negb
jb
ret
mov
xchg
push
pop
icebp
or
arpl
jge
xchg
cld
imul
cmp
push
xchg
mov
sub
fisubs
test
fisubs
mov
pop
jle
into
pop
inc
sbb
push
iret
lcall
repz
lcall
and
in
addr16
aad
add
pusha
sti
leave
mov
jp
bswap
stos
push
push
nop
loopne
dec
or
movsl
mov
and
in
movb
jnp
mov
mov
scas
adc
pop
mov
fs
add
pop
dec
or
sub
lret
add
cmp
add
repnz
popa
jbe
and
dec
cmc
inc
out
cmp
loope
dec
and
dec
sbb
push
push
push
xchg
pop
jo
out
sbb
sub
mov
dec
cmpsb
out
fmull
lods
loopne
dec
data16
mov
sahf
push
mov
insb
sub
mov
inc
jecxz
test
shll
xchg
jge
js
in
mov
js
sbb
cmpsb
xlat
mov
mov
clc
and
lea
jecxz
add
sahf
fbld
roll
jp
adc
push
inc
mov
xor
jnp
stc
push
mov
push
int3
ror
fmuls
mov
cli
sub
scas
adc
test
pop
cli
call
cmc
loopne
sbb
pop
jb
push
fmulp
pop
and
xchg
push
jo
mov
stos
sarl
cmpsb
popa
or
or
pop
data16
int
dec
ret
mov
add
xchg
push
pop
scas
mov
inc
enter
rcrb
fistps
and
jmp
mov
add
aad
xchg
fildll
or
icebp
jmp
adc
loopne
add
out
lret
xchg
mov
xchg
fcomps
aam
pusha
mov
dec
adc
dec
inc
repnz
popf
mov
cld
cld
mov
add
mov
enter
idivb
adc
lcall
stos
cmp
lods
pop
aam
pusha
add
lret
jg
xchg
sub
ret
push
lds
mov
dec
in
aad
cwtl
inc
outsl
cmpsl
pop
inc
adc
cmpsb
in
cmp
sub
sub
xor
sub
push
andb
lret
popa
sbb
cmpsl
or
call
dec
xor
inc
xchg
lds
in
xchg
xchg
cmp
into
jmp
inc
mov
mov
sbb
pop
sbb
loop
insl
stos
sub
sbb
stc
xchg
cmp
fnstenv
call
pop
addr16
push
mov
scas
adc
jb
xor
cwtl
sbb
adc
pop
mov
bound
push
push
push
xchg
push
arpl
fstps
rorl
inc
imul
pop
lds
jne
add
and
cmp
stos
outsl
stos
inc
gs
rcr
sbb
dec
mov
lcall
jno
in
push
int3
jecxz
mov
leave
pop
or
mov
cmp
out
stos
adc
data16
adc
loopne
push
pop
xor
sub
sbb
adc
repnz
sub
jb
push
jg
mov
call
jb
vpmacssdd
mov
fstpl
cmp
push
and
dec
jbe
push
fisttps
pop
outsb
movb
outsl
lods
in
out
xchg
sbb
enter
shlb
fisttpl
adc
movsl
mov
cmc
add
cmp
and
add
mov
xchg
filds
xchg
xor
xchg
out
mov
je
out
stc
jecxz
inc
xlat
out
scas
cmp
movsl
jp
lret
cmp
pop
daa
lods
sub
inc
mov
add
pop
and
mov
sub
loopne
ljmp
jl
mov
jno
xlat
je
test
movsl
into
or
or
aas
mov
jmp
in
dec
mov
arpl
lock
aas
loop
sbb
pop
pop
pushf
mov
dec
outsb
in
lock
sbb
out
cmpb
push
pop
enter
dec
rcl
ret
cmc
xchg
jecxz
mov
xor
xchg
fisttpll
jo
outsb
in
xchg
insl
push
popf
cmp
inc
xor
lahf
add
dec
mov
mov
mov
iret
jnp
popf
add
gs
pop
jmp
xchg
cwtl
imul
xlat
xchg
in
fistpl
gs
jns
pop
popa
out
imul
int3
stos
arpl
scas
aas
mov
jmp
push
lahf
cmp
fdivrl
insl
pop
jge
sub
add
push
sahf
jg
mov
rolb
test
data16
dec
cmp
jb
push
test
ss
les
pushf
in
ret
lcall
gs
mov
ds
pop
adc
idiv
sahf
xchg
dec
repnz
push
into
and
mov
inc
jb
adc
cmp
jne
scas
inc
xchg
int
inc
aad
filds
dec
insl
leave
xchg
pop
sub
inc
xchg
xor
aas
jge
cwtl
jle
sbb
mov
out
inc
icebp
pop
xchg
push
mov
mov
mov
xchg
jl
mov
imul
adc
pop
lods
movsl
sbb
insb
and
stc
outsl
push
and
xchg
sbb
xchg
xchg
cmc
icebp
cmc
or
stc
data16
mov
sbb
mov
dec
movsl
movsl
mov
ret
icebp
mov
mov
imul
repz
cwtl
pop
lret
pop
xchg
ret
nop
arpl
xchg
sub
sub
dec
mov
push
cmpsb
adc
ds
aam
push
sub
je,pt
pop
xor
xor
sbb
sti
sub
xchg
xchg
shll
loop
les
in
out
jno
push
lret
repz
push
jbe
push
inc
inc
lahf
or
jl
adc
sbb
mov
in
pop
into
push
and
ficoml
cld
pop
into
xchg
xor
mov
das
and
or
neg
cs
xor
sbb
inc
mov
sub
cmpsb
insl
outsl
inc
js
and
add
jge
shrl
test
lods
inc
sbb
xchg
shll
cmp
sbb
mov
nop
inc
sbb
jge
loope
jae
mov
fidivrl
fcompl
std
cltd
ret
clc
and
adc
jmp
outsl
mov
outsl
lret
int
cli
mov
mov
sbb
roll
dec
fcomi
mov
add
js
mov
mov
xchg
xchg
lea
xchg
popl
jp
aad
arpl
test
arpl
mov
sbb
mov
adc
xor
movsl
dec
jl
xchg
pop
push
lods
mov
cli
jne
push
lods
xchg
xor
mov
stos
adc
xlat
test
sub
and
cwtl
mov
in
jbe
sub
daa
ds
add
faddl
loopne
inc
dec
popf
in
xor
sub
fwait
cmp
divl
push
pop
pop
lods
aas
mov
je
dec
je
mov
cmp
outsl
sbb
cmp
jp
lock
lea
or
adc
push
fcomps
pop
or
mov
arpl
aad
xchg
popf
fs
push
mov
stos
or
jbe
lds
je
stos
and
xchg
fadds
xor
pop
scas
add
mov
sub
jno
cmp
or
jb
dec
out
bound
lea
cmp
sbb
jle
cmpsb
add
popf
adc
data16
jle
pushf
mov
movsb
xchg
cltd
je
cmc
or
mov
aas
cltd
push
sbb
and
ficoms
cs
jnp
ss
xlat
adc
inc
push
hlt
push
or
and
sbb
mov
loopne
xchg
push
movsb
mov
popa
sub
jnp
mov
aam
out
fldl
out
push
aas
aad
xchg
jg
iret
leave
sbb
ss
or
lcall
in
mov
sub
in
into
jbe
stos
test
mov
lods
cwtl
push
stos
rcll
xor
pop
inc
sbb
loope
stos
push
daa
cmc
out
cmp
out
sbb
incl
iret
xor
xchg
rolb
ja
ret
in
adc
push
sbb
jle
xchg
cmp
test
xor
dec
in
loopne
cld
or
mov
or
add
into
subb
test
fcompl
sbb
push
cmp
ds
sahf
and
fsubs
test
int3
test
inc
jl
sbb
roll
mov
outsl
rcrb
iret
stos
rol
dec
xchg
inc
inc
push
cmp
addr16
adc
adc
data16
cmp
cld
pop
jne
rol
pop
std
inc
stos
lahf
push
insb
into
mov
stos
mov
dec
xor
lahf
fdivrl
mov
out
xor
or
pushl
pop
jbe
mov
mov
sbb
js
adc
xchg
loopne
pop
jg
cld
mov
jmp
or
mov
fcmovnbe
mov
pop
je
xchg
pop
sbb
jmp
dec
adc
mov
add
rcrb
inc
in
rol
pop
and
ljmp
and
and
cmpsb
shlb
bound
popf
aaa
mov
mov
clc
mov
pop
movsl
cmpsl
aas
mov
loope
test
add
dec
movsl
in
push
insb
sbb
or
jecxz
cmp
in
cmp
clc
dec
push
jmp
nop
xchg
hlt
icebp
in
sub
clc
fcmovb
xlat
stos
xchg
push
pop
mov
arpl
das
pop
xchg
push
xchg
inc
out
xchg
mov
popa
jmp
ret
stos
shlb
dec
mov
cmc
lret
push
mov
or
xchg
in
mov
inc
popf
mov
xor
and
popa
dec
mov
push
cwtl
mov
dec
mov
add
sbb
xor
ja
sahf
orl
or
and
data16
or
cld
adc
ret
sbb
inc
mov
imul
adc
adc
sar
adc
std
in
fidivrl
daa
and
cmp
iret
xchg
or
scas
mov
sbb
inc
negl
adc
pop
stos
imul
psubw
mov
mov
fsubrl
lea
push
movsb
imul
sbb
fs
sbb
xor
push
push
sarb
mov
fdivp
xor
adc
hlt
cmp
outsb
pop
adc
sub
std
push
xchg
xor
or
or
sbb
xchg
cli
sub
jne
repnz
mov
inc
rcll
push
aas
pop
mov
jo,pt
cmp
int
stos
sarw
xor
pop
lock
dec
sub
sbb
push
jle
pop
adc
push
and
daa
and
xchg
push
imul
out
and
pop
mov
push
fstpl
hlt
pop
fists
mov
loopne
stos
sub
es
inc
adc
icebp
outsl
mov
mov
ret
repz
mov
out
add
lods
sub
pop
sub
addb
cwtl
jg
aam
mov
popf
add
loope
outsl
dec
inc
ret
nop
xor
and
sub
cmpsl
sbb
ret
into
mov
mov
cmp
push
jnp
xchg
fwait
je
adc
stos
test
sub
movsl
fistpll
mov
jg
mov
out
cli
adc
nop
push
scas
movsb
dec
jl
cmp
jge
sub
cmp
into
push
inc
dec
sub
fs
popa
cmpsb
pop
clc
ds
cmp
jo
push
mov
pop
mov
sbb
sub
xor
add
add
mov
lods
sbb
std
sub
popf
or
or
xchg
inc
outsb
mov
push
xor
pop
push
cli
out
pushf
xchg
xchg
add
out
cld
loop
jmp
stc
mov
repnz
int
and
xchg
jne
gs
cmpsb
inc
push
mov
movsl
jbe
test
cmc
push
in
aad
and
xchg
jne
gs
cmpsb
inc
push
mov
movsl
jbe
test
cmc
push
in
aad
imulb
xchg
or
xchg
mov
inc
push
mov
mov
push
icebp
push
in
fmul
and
rcrl
inc
xchg
jne
gs
test
mov
repnz
lea
mov
sub
cmp
test
sub
pop
xor
ja
xchg
mov
fsts
or
sbb
sub
cmp
dec
inc
pop
push
imul
xchg
test
jmp
pop
sbb
sub
cmp
dec
inc
pop
push
imul
lret
mov
xchg
mov
pushf
adcb
sub
fildl
adcl
rcrb
setb
ss
enter
test
imul
cmpsl
inc
mov
pop
fcomps
je
pop
adc
shrl
dec
pop
ret
fsub
pusha
daa
testb
jns
cltd
movsb
in
sbb
testb
sbb
inc
cmp
outsb
inc
dec
inc
in
mov
add
sbb
push
pop
rorl
xchg
cltd
xchg
int3
negb
lret
pop
test
cwtl
cmp
popa
ret
sub
les
out
cmpsl
hlt
and
ljmp
push
in
jns
fidivrs
xchg
xchg
mov
cmp
bnd
lds
sbb
sub
cmp
dec
inc
pop
push
imul
xchg
test
jmp
push
les
push
jno
sub
push
or
jmp
test
stos
fldcw
insb
inc
jl
dec
daa
push
pusha
dec
and
adc
sub
ret
stos
icebp
mov
mov
insb
push
sbb
push
push
inc
add
addr16
mov
mov
xlat
jmp
pop
sbb
sub
cmp
dec
inc
pop
push
imul
xchg
test
jmp
pop
cmp
mov
push
out
sbbb
xor
push
stos
cld
xor
jmp
repnz
mov
in
fcomip
subl
iret
xchg
xor
bound
lret
mov
mov
sbb
pusha
aaa
pop
sahf
push
pop
lcall
retw
dec
fcoms
loopne
in
push
dec
rcrl
dec
shlb
lock
push
inc
pop
pop
adc
arpl
mov
sub
xchg
addr16
pop
cwtl
xchg
stos
arpl
lea
jnp
lahf
gs
and
out
add
es
lret
imul
push
or
xchg
out
dec
das
lret
imulb
pop
icebp
int
das
mov
mov
negl
mov
push
adc
push
mov
mov
push
add
and
jecxz
jl
add
or
sub
add
push
sub
fs
test
mov
inc
lcall
daa
int
push
cmp
hlt
dec
inc
ss
mov
fistpl
pusha
add
jbe
inc
cmpsb
pop
fwait
adc
mov
cltd
sub
jns
test
addr16
mov
mov
sbb
jno
cmpsb
mov
dec
dec
push
and
ljmp
inc
les
xlat
pop
cmc
lret
js
notb
adc
add
lods
aad
pusha
jg
test
inc
int
repz
in
imul
sub
repz
inc
in
pop
jge
push
imul
rorb
andb
mov
sbb
incb
pop
add
shrb
and
insb
push
cmpsl
out
jo
loop
cmp
mov
jb
mov
stc
hlt
ja
push
ret
movsb
into
mov
mov
inc
push
int
jae
dec
inc
xor
adcb
lcall
mov
add
pop
mov
out
dec
push
dec
pop
pop
sub
std
pop
jbe
test
ffreep
or
push
repz
and
test
dec
xor
dec
or
sti
mov
mov
mov
arpl
loopne
sbb
fs
movsl
or
int3
sahf
cmpsl
ret
dec
scas
out
fstps
push
and
sbb
cmp
jne
mov
sub
outsb
pop
mov
mov
cmp
or
ret
sub
mov
jo
aad
movsb
jmp
int3
out
test
subb
jecxz
inc
in
ret
pop
mov
mov
adc
das
adc
ret
arpl
lret
sub
mov
aad
repnz
das
adc
xor
pusha
mov
xchg
mov
jecxz
mov
jp
jecxz
push
sar
lahf
fmul
dec
mov
cmc
mov
stos
push
dec
cmc
stc
mov
ljmp
insl
cmp
cld
xlat
pop
xchg
lret
aaa
mov
push
mov
jo
or
and
nop
mov
hlt
jmp
imul
sub
cmc
mov
cmp
lret
jo
icebp
xor
push
mov
adc
ss
sahf
cli
repnz
cmp
repz
aad
neg
enter
daa
cwtl
mov
mov
push
mov
cwtl
mov
fiaddl
stos
xor
scas
shll
insb
lock
push
sarb
sub
fistpll
dec
mov
lods
movsb
clc
or
fucomi
cmp
mov
fucomp
jno
lods
sbbl
cwtl
push
mov
sub
mov
insb
mov
xchg
xchg
jnp
sub
je
repz
xlat
mov
adc
enter
pusha
jne
movsl
negb
mov
repz
dec
xchg
out
push
pop
cmpsb
pop
ja
push
aas
cmp
push
loopne
scas
jno
push
mov
jo
mov
mul
jb
add
and
or
cmpsb
sub
test
jns
jmp
fwait
cmpsl
inc
xlat
adc
test
cmp
lea
into
add
sti
pop
cltd
push
loope
dec
repnz
jp
add
lea
pop
sbb
stos
in
xor
pop
repnz
jnp
out
out
loope
dec
add
mov
in
mov
mov
fists
rorl
or
js
sub
push
pop
movsl
xchg
xor
icebp
es
es
or
mov
mov
lods
push
lret
aas
cld
jne
outsb
js
test
cmp
xchg
stos
push
fdivrl
jge
sub
xchg
stc
data16
hlt
aaa
outsl
pusha
xorb
sahf
out
jg
lea
fbld
testl
into
cmpb
mov
cmpsb
xchg
jl
jp
dec
xchg
push
inc
dec
mov
pop
fildll
stos
movb
pusha
sbb
scas
cli
jecxz
inc
xor
cmp
jp
test
jecxz
jb
add
lahf
xor
out
adc
jge
daa
ja
testl
aas
sbb
stc
icebp
cld
adc
mov
mov
loopne
test
sub
rorl
xchg
in
fwait
push
xchg
adc
push
dec
stc
movsb
mov
inc
mov
adc
inc
pop
jg
mov
addr16
push
movsb
cli
push
fadd
sti
sbb
arpl
call
insl
sbb
repz
cmp
xor
dec
ds
sbb
inc
data16
outsl
push
xchg
and
inc
outsb
stos
or
out
ss
adc
xchg
int3
dec
in
loop
in
addr16
mov
or
xchg
dec
lods
popa
mov
cwtl
sbb
and
pop
mov
sbb
aam
mov
jmp
xlat
mov
hlt
sub
les
movsb
xor
stos
es
mov
pop
jecxz
adc
xchg
push
xor
test
ljmp
add
stc
mov
jle
mov
dec
or
js
pusha
mov
adc
mov
mov
inc
add
out
shlb
and
jbe
addr16
and
call
or
push
mov
sarl
xor
cmp
loopnew
jo
daa
dec
push
xchg
ljmp
arpl
pop
stos
test
out
cmc
sub
sbb
enter
aas
scas
pop
fisubs
xor
add
dec
lds
cmpl
adc
mov
add
sub
ds
imul
or
push
cltd
dec
mov
jbe
out
into
lret
push
iret
addl
xchg
jl
pop
jno
arpl
imul
sbb
insl
adc
and
addb
popa
stos
add
movsl
inc
gs
outsl
add
mov
mov
cmp
cli
inc
push
xor
fmull
cmp
iret
or
xor
adc
push
xor
bound
sbb
ss
loopne
nop
and
sbb
popa
sub
dec
imul
jp
pop
repz
cli
cmp
lds
roll
add
push
cmp
repz
imul
jo
mov
xor
mov
inc
nop
cmp
pop
cmp
push
fiaddl
ds
push
outsb
xchg
clc
xchg
mov
cld
mov
mov
shlb
hlt
jnp
in
add
cmp
out
mov
lods
mov
and
roll
jle
cmp
fadds
cmp
jge
iret
dec
dec
sbb
mov
stos
push
mov
inc
pop
sub
clc
ret
add
mov
cld
call
lods
push
mov
pop
jecxz
out
or
cmp
loope
mov
or
mov
jg
pop
mov
adc
xchg
mov
push
fwait
pop
sbb
addr16
mov
add
das
sahf
sti
dec
in
inc
lret
adcl
int
cmpsl
aaa
jge
aad
ds
jl
aaa
mov
sbb
jl
outsb
push
lods
sbb
aas
push
fimuls
arpl
or
aad
mov
push
mov
inc
push
icebp
xchg
cltd
sbb
das
cmc
xchg
sbb
xor
lds
daa
pop
lret
jle
repnz
test
cmpsb
sub
repnz
hlt
or
out
arpl
in
cltd
cltd
popf
sbb
pop
shl
pop
es
add
sti
shrl
push
and
mov
js
or
test
inc
dec
pop
inc
js
inc
subb
cmp
or
mov
loope
inc
sbb
std
pusha
cld
cmpsl
ds
jle
in
lods
mov
outsl
xchg
cmp
aam
adc
icebp
outsb
xor
sbb
push
lret
or
mov
das
or
jnp
icebp
jb
mov
sahf
add
daa
data16
test
subb
fstl
outsb
push
and
adc
fistpl
dec
xor
shl
sub
jae
adc
pop
frstor
xchg
push
jg
jl
mov
add
out
loop
in
fldt
test
int
popf
and
adc
cmpl
jmp
and
cmpsb
inc
insl
lahf
add
dec
scas
sbb
add
lods
es
dec
dec
inc
jo
xchg
inc
popf
iret
leave
in
ds
roll
fwait
cmc
and
roll
and
into
sarl
sbb
mov
outsl
imul
shlb
pop
jg
call
xchg
fists
and
inc
repz
mov
inc
mov
pop
test
ljmp
in
data16
out
adc
dec
jg
cli
scas
pop
sar
xchg
fucomp
and
dec
sub
xchg
ss
cmp
mov
pop
xor
aas
adc
jmp
inc
in
stos
xchg
movsb
adc
leave
cwtl
xchg
dec
sub
jns
repz
mov
lret
repnz
sub
dec
push
pop
mov
pop
popf
adc
push
mov
adc
inc
outsb
iret
mov
inc
pop
xor
pop
frstor
leave
ret
pop
addr16
out
fnstenv
stos
repnz
leave
cmpsb
push
mov
cld
movl
push
test
jae
xchg
addl
fidivrl
les
inc
add
or
enter
sti
sub
push
jbe
in
add
cs
aas
or
mov
xor
mov
xchg
psubsw
pop
cld
jg
pop
test
sub
repnz
inc
dec
pop
shl
xchg
jae
pop
push
adc
add
ljmp
xchg
test
adc
inc
jb
shl
popf
mov
repz
int3
cmc
mov
push
pop
mov
fcoml
mov
out
mov
and
clc
outsl
add
aam
pop
out
outsl
mov
fiadds
int3
stos
fistpll
cmp
xor
addr16
sbb
aam
popa
xchg
adc
inc
mov
lret
stos
and
jnp
push
add
xor
rol
fidivrs
xlat
cmp
clc
sub
and
mov
into
stc
fisubrl
mov
xor
lahf
sbb
in
pop
sub
mov
popa
and
sub
dec
imul
aas
or
sbb
xor
cld
loopne
pop
mov
xor
pop
cld
mov
and
ret
inc
adcl
mov
sarl
push
pop
and
icebp
pushf
test
mov
jmp
ljmp
pop
pop
jno
pop
inc
mov
jmp
hlt
outsl
rorb
iret
iret
xor
dec
xchg
rorl
aas
fxch
stos
arpl
mov
adc
pop
xor
mov
shrl
pop
lahf
push
add
cmp
int3
push
bound
or
test
cli
xor
stos
jae
test
sub
hlt
xchg
cmp
and
test
mov
and
outsl
mov
xlat
sbb
mov
xlat
jle
jne
data16
mov
mov
and
dec
mov
outsb
inc
out
cmp
cli
fcom
adc
xor
gs
mov
push
jae
cltd
xchg
cli
pop
mov
lock
mov
scas
lahf
cmpsb
ds
shrl
add
adc
bound
adc
xor
js
movsb
dec
xorl
xchg
adc
mov
loopne
cmc
xor
xor
xchg
jmp
in
idiv
inc
pop
xchg
add
cli
mov
out
sbb
scas
or
pop
inc
push
repz
movsl
cmp
mov
scas
xor
push
enter
ljmp
lock
fisubl
test
sub
lea
mov
pusha
pop
into
lahf
mov
adc
rorl
add
xchg
adc
or
push
repz
xchg
pop
inc
pop
test
xchg
in
das
popf
fcoms
filds
inc
jnp
jp
mov
in
jnp
sub
xchg
punpckldq
push
cmpb
xor
enter
and
lods
sbb
repz
cmp
sub
sub
jbe
ret
addr16
adc
outsl
dec
cmp
add
data16
subb
fs
shll
lcall
mov
hlt
add
or
add
ret
xchg
test
clc
push
push
cmp
mov
stos
mov
movsb
jae
mov
icebp
add
movsb
push
push
lock
inc
testb
lock
test
mov
jle
ja
inc
add
stos
sub
das
mov
popf
cmpsl
out
insl
pop
push
xchg
test
mov
ret
adc
ljmp
lea
add
pop
mov
push
sahf
or
adc
pop
pop
and
xchg
or
clc
jl
popf
pushf
jl
ljmp
repz
sbb
cmc
and
jnp
out
add
cmpb
and
dec
sbb
bound
push
inc
add
xor
out
cli
shlb
scas
mov
cmc
mov
xchg
xor
push
push
jl
arpl
xchg
mov
fucomip
pop
mov
icebp
out
adc
adc
inc
loopne
sbb
xchg
insb
dec
jbe
rorb
mov
cmp
mov
je
and
inc
mov
pop
adc
sub
xor
pop
mov
add
mov
pop
push
and
out
push
pop
std
hlt
mov
ljmp
push
xchg
cmp
out
mov
mov
lret
outsb
lds
adc
push
lods
rcl
imul
icebp
leave
or
ljmp
sub
xor
fwait
lods
mov
std
js
add
addr16
lcall
imul
jbe
xchg
loopne
or
cs
pusha
push
fnsave
adc
add
dec
aam
or
adc
xor
xor
pop
ds
xchg
dec
shrb
sti
lea
loop
lds
and
push
loope
dec
fsubrp
sbb
jno
xorb
inc
aas
daa
sbb
mov
xchg
dec
dec
mov
mov
scas
popa
push
add
add
mov
cmp
push
subb
dec
mov
xor
aad
adc
cltd
xor
fwait
mov
push
jne
mov
xor
cmc
sbb
ficoms
cmp
jb
testl
into
lcall
pop
lods
or
dec
mov
add
mov
mov
and
add
push
sbb
jg
pop
pop
mov
cmpsl
std
and
lods
fwait
inc
test
and
pop
pop
mov
iret
add
das
push
lret
pop
adc
sbb
stc
popa
push
fcom
fs
pop
scas
icebp
adc
mov
stos
cmp
insl
stos
sbb
push
iret
aam
cmc
insl
scas
sub
stos
mov
test
jae
mov
pop
fidivs
add
lcall
repz
repz
addl
push
inc
jecxz
nop
aad
jnp
gs
lods
or
cmc
mov
gs
or
and
leave
xchg
test
in
jge
mov
jg
insb
push
mov
fwait
imul
or
das
fsubl
or
mulb
mov
test
cmp
dec
aad
loopne
or
sbb
into
pop
pop
mov
mov
fidivrs
sti
gs
aaa
dec
in
jne
leave
mov
out
scas
lahf
testl
or
fildll
leave
enter
loopne
mov
es
pop
or
fidivl
mov
imul
adc
xchg
dec
add
popw
inc
leave
jmp
jbe
add
xor
cmp
mov
dec
in
loope
cmc
xchg
fistpll
mov
pop
xor
mov
fnsave
mov
sbb
stos
pushl
fs
xchg
lret
test
lea
mov
les
mul
push
loope
pop
imul
mov
mov
jmp
adc
mov
mov
and
push
mov
lcall
jecxz
mov
test
or
outsl
mov
sbb
bound
cltd
jno
push
addr16
xor
jbe
or
inc
pop
jmp
xchg
cmp
adc
sub
adc
hlt
ljmp
xlat
rolb
ds
sbb
cmp
insl
mov
lods
xchg
add
insb
stos
popa
mov
fcomi
dec
xor
call
inc
jb
adcl
push
movd
mov
sub
mov
ret
push
mov
fildll
mov
ret
cmp
shrl
sarl
out
sbb
or
push
push
outsl
movsl
fcmovu
loope
and
mov
inc
ret
and
clc
push
subl
popf
adc
shlb
iret
push
into
fisubl
loopne
xchg
pop
xchg
leave
jle
test
fildll
push
fcmovne
out
push
inc
or
adc
and
ss
inc
stc
or
jmp
dec
divl
pushl
sti
enter
pop
ja
in
dec
flds
arpl
ss
rorb
aam
cmp
xchg
mov
push
push
mov
mov
test
ret
sbb
mov
pop
sti
ljmp
dec
inc
mov
rcrl
xor
iret
dec
inc
insl
adc
je
xchg
push
jae
cmpsb
insl
push
jb
test
xor
enter
jae
loope
repz
xchg
jns
xchg
jecxz
add
mov
adc
or
jne
pop
addr16
les
mov
xchg
adc
lods
xor
xor
dec
pop
dec
xor
add
sbb
addl
jae
push
cmp
repnz
cs
fmull
sbb
xchg
popf
dec
insb
sub
out
orb
xchg
frstor
add
lret
insl
in
mov
mov
xchg
cs
and
mov
cltd
mov
fcompl
or
mov
test
inc
or
bound
sub
push
fwait
sbb
in
pusha
xor
dec
scas
mov
ror
cmpl
jbe
idiv
sub
jg
mov
xchg
push
sub
mov
and
or
fistpll
pop
subb
or
aaa
or
push
xor
rcrl
jle
inc
lahf
insl
lcall
xchg
or
cmpsb
out
andb
xlat
add
ss
loopne
inc
cwtl
add
mov
leave
cltd
jne
rcl
jae
xchg
outsl
sbb
jmp
add
and
out
sbb
pop
mov
fisttpl
andl
adc
popa
sub
addl
data16
push
pop
and
dec
outsl
push
sub
loopne
fisttpl
sarb
addb
or
aaa
xor
mov
pop
mov
shll
dec
xchg
add
pusha
mov
add
mov
pop
push
dec
scas
cmp
lcall
push
and
cmc
jle
add
dec
mov
shrb
mov
stos
fwait
dec
in
std
mov
into
cwtl
jle
xchg
and
push
xor
cmpsl
aas
mov
std
sub
orl
es
nop
mov
sub
xlat
xchg
jl
adc
lods
xchg
mov
ffree
mov
mov
call
in
in
sbb
arpl
leave
loopne
out
xchg
insl
aas
add
adcl
adc
scas
mov
stos
or
iret
xchg
xchg
daa
test
adc
je
lock
aaa
fisubrs
movhps
mov
shll
repz
inc
sbb
dec
sbb
cmp
or
adc
mov
into
mov
popa
aas
aad
std
inc
fs
and
ret
xor
xor
cmp
in
mov
js,pt
stc
inc
andb
ja
cmp
test
xor
jmp
jae
sbb
lods
jae
cs
hlt
push
push
and
cwtl
or
or
jne
sub
das
out
mov
pop
aas
popf
jbe
iret
mov
and
xor
xchg
rclb
pop
in
inc
xchg
sbb
sub
int3
inc
scas
adc
sub
pop
sbb
insl
movsb
sbbb
adc
dec
add
or
or
fs
add
push
adcl
daa
or
mov
sti
jp
sbb
shlb
je
and
sbb
lret
adc
sub
sbb
movups
shlb
in
in
sub
sbb
xchg
mov
popf
data16
pusha
ds
stos
adcb
cmp
dec
inc
pop
push
imul
xchg
test
jmp
pop
sbb
sub
cmp
dec
inc
pop
push
imul
xchg
test
jmp
add
ss
inc
pop
push
imul
xchg
test
jmp
pop
sbb
sub
cmp
dec
inc
pop
xlat
imul
cltd
cmp
mov
sbb
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sti
imul
pop
mov
fistl
sub
sbb
imul
leave
dec
fnstcw
test
or
fisttpl
pop
mov
or
cltd
das
leave
dec
fnstcw
test
or
fisttpl
pop
mov
or
stc
sub
dec
push
sti
gs
mov
jmp
test
mov
ficoml
shll
mov
pushf
sbb
cmp
xchg
orl
cs
inc
cmpsb
xchg
stos
das
nop
pop
lea
inc
push
enter
fdivrl
push
sbb
cmc
enter
imul
inc
xor
out
gs
jnp
add
movsb
or
and
test
jns
jbe
adc
test
mov
xchg
out
xor
ss
mov
ret
inc
inc
sbb
adc
mov
cmpsb
add
mov
lcall
ret
mov
push
adc
call
xchg
push
fs
stc
sub
fadds
mov
arpl
fisttpl
pop
mov
or
stc
pop
leave
dec
fnstcw
test
or
mov
and
cmp
inc
lret
mov
cmp
inc
lret
pop
fdivr
imul
pop
fwait
jle
sbb
xchg
imul
in
or
xchg
and
cmp
sub
sbb
imul
leave
dec
fnstcw
test
or
fisttpl
pop
mov
or
stc
pop
leave
dec
fnstcw
test
or
pusha
sti
out
push
popa
in
test
ja
fists
or
leave
push
sbb
pop
lcall
push
push
leave
xor
jae
xor
icebp
insl
sti
xor
inc
sbb
repz
dec
js
int
std
int
outsl
call
or
clc
adc
ficoml
xor
in
les
mov
mov
faddl
and
sub
jae
bound
push
add
and
cmpsb
test
xchg
shll
xchg
inc
hlt
sbb
cwtl
xchg
stos
mov
rolb
pop
ds
mov
inc
sbbb
pop
and
pop
addr16
push
add
lcall
icebp
bound
and
mov
add
sub
jbe
mov
popf
fadd
add
xchg
mov
cmp
insl
push
push
int3
sbb
aam
sub
xchg
outsl
fnstenv
bound
lock
xchg
pushf
adc
and
repz
push
out
mov
cmp
cmp
push
sub
test
inc
arpl
or
shll
in
lods
or
ss
jb
loop
xchg
cs
jle
incl
popa
mov
sub
cmpsl
loopne
fistpl
cmp
loope
js
dec
inc
push
xor
mov
js
cmp
lcall
mov
es
out
sbb
pop
lods
mov
andb
repnz
mov
repnz
fwait
in
mov
scas
and
dec
or
pop
stos
and
rolb
mov
in
sar
jg
adc
mov
sbb
ret
add
add
mov
aam
pop
fmul
sti
dec
fstpl
mov
adc
loop
jecxz
jge
push
mov
or
push
imul
gs
and
adc
jl
jmp
cmp
mov
inc
mov
pop
mov
ljmp
ds
lock
and
cli
xchg
pushf
xor
and
mov
inc
push
jl
inc
adc
pop
adc
ljmp
mov
adc
xchg
mov
xor
mov
mov
adc
out
xor
test
jmp
outsb
dec
inc
outsl
pop
fisubrl
repnz
movsb
sbb
mov
cmp
ss
pop
outsb
ret
fbstp
nop
dec
push
push
in
out
adc
jmp
out
xorl
mov
xor
inc
sbb
ss
and
cmp
fists
pop
cld
jno
lea
aad
add
bound
int3
div
ficompl
inc
lret
int
sbb
xchg
xchg
imul
cltd
hlt
add
std
loope
xchg
fisubl
out
ret
push
adc
movsl
cmp
mov
cmp
stos
stc
mov
sbb
adc
dec
stos
shl
cmp
lds
push
and
loope
cmpl
pop
push
enter
cmpsl
shr
ja
cli
cmp
ljmp
and
jmp
mov
jle
xchg
pop
xlat
dec
imul
enter
xor
xor
das
xchg
fcmovbe
dec
add
pop
and
std
pop
pop
push
push
sbb
mov
dec
xor
setp
jle
jb
xor
mov
dec
pop
les
fdivrs
lock
xor
xchg
dec
sbb
test
int3
jmp
adc
xchg
jns,pt
pop
lret
dec
mov
push
sub
test
jne
daa
nop
lods
mov
inc
jle
mov
pop
aam
inc
bnd
cltd
jge
mov
add
push
and
shr
cmp
movsl
or
fdivs
cltd
in
fwait
mov
sbb
test
cld
inc
mov
je
or
lods
jp
xchg
pop
in
out
jns
das
push
mov
lock
cwtl
jp
out
sub
aam
jo
dec
xor
sbb
push
mov
xor
mov
mov
inc
daa
and
mov
lea
push
ja
inc
mov
pop
rolb
mov
leave
adc
sbb
mov
xchg
lods
inc
xor
shl
inc
pop
sub
adc
imul
sub
aas
mov
jns
out
ret
jg
test
mov
or
gs
aam
scas
in
cmpsb
mov
mov
and
std
mov
sbbb
or
fcomip
dec
pop
dec
sbb
lcall
rorb
jns
adc
xor
sbb
enter
xor
ret
movsb
in
roll
jmp
pop
in
sub
push
popf
and
or
add
jmp
add
movsl
in
int
mov
ds
pushf
imul
stc
push
sub
mov
pop
pop
movsb
push
push
stc
sub
es
mov
inc
cmp
mov
sub
mov
pop
repz
fsubl
cmpb
ret
xchg
hlt
xor
insb
out
sti
pop
xchg
pushl
sbb
xor
fidivs
ja
sahf
dec
jg
or
mov
dec
push
int3
outsb
imul
aas
mov
fwait
dec
ljmp
cld
lret
xor
xor
xchg
fimuls
push
cltd
sti
cld
mov
in
sbb
adc
cmp
subb
inc
dec
jbe
sbb
arpl
fnstenv
cmpsb
mov
adc
adc
jl
lret
sbb
and
mov
jno
stos
push
hlt
mov
adc
test
cli
sbb
out
inc
push
ljmp
inc
fcoml
bound
test
out
cmp
mov
mov
mov
rcll
jle
stos
movsl
stos
outsl
lea
sub
dec
xor
cmpsl
hlt
push
out
xchg
lret
rol
pushf
lds
mov
push
into
js
push
pusha
or
sub
mov
mov
arpl
pop
popf
jo
jp
js
scas
and
jecxz
out
subb
push
cmp
or
imul
or
mov
clc
ret
aas
sarl
push
out
fs
sub
cmc
loope
xchg
or
in
in
pop
aaa
cmp
cltd
daa
fdivr
sbb
mov
mov
inc
sbb
adc
sbb
nop
xchg
jno
xchg
dec
mov
adc
test
jns
iret
out
pop
fstl
pop
cmp
dec
arpl
pop
cld
lds
or
test
aaa
fidivrs
loopnew
outsl
cld
imul
or
mov
shll
xor
xchg
leave
push
jns
dec
and
adc
push
sbb
mov
loope
or
dec
mov
pop
and
pop
push
rorb
sbb
sbb
cld
lods
cmp
mov
int
out
movsl
sub
in
inc
cs
or
pop
sbb
jbe
dec
ss
and
repnz
fnstcw
sbb
xchg
push
int3
test
and
daa
pop
imul
sahf
call
inc
pop
sub
cmc
or
xchg
pop
jmp
test
xchg
jno
stos
fmull
pop
ja
iret
mov
fdivrl
into
xor
jg
ret
push
mov
loop
lea
sbb
sbb
test
and
js
push
xor
loop
xor
call
push
mov
xor
lret
jl
dec
adc
sbb
cmc
push
bound
lcall
popf
add
dec
mov
dec
push
push
insb
sbb
cwtl
push
or
out
je
inc
imul
mov
mov
fdivs
mov
xchg
dec
fwait
mov
in
or
sub
push
mov
xchg
dec
testl
jns
jne
or
inc
loop
into
test
loopne
xchg
push
mov
gs
or
ds
ret
xchg
sbb
int
mov
jle
push
push
adc
adc
mov
iret
mov
cmp
ret
add
xchg
dec
cmc
es
xchg
filds
sbb
call
sbbl
xor
or
loope
lods
lods
push
sub
movb
ret
sbb
inc
stos
adc
push
and
int3
pop
push
repz
mov
sub
dec
sahf
mov
das
roll
xchg
mov
jmp
jp
popa
popa
rorb
mov
cmpl
enter
sub
icebp
dec
or
xchg
int3
inc
xor
sub
adc
scas
inc
and
push
jmp
cld
sbbl
jae
push
shl
mov
int
pop
pop
xor
and
push
mov
fidivs
test
inc
int3
mov
enter
and
adc
xchg
sbb
dec
aas
in
in
inc
xlat
push
xor
mov
scas
mov
pusha
bound
pop
push
mov
mov
mov
inc
cwtl
cli
std
mov
push
daa
je
rclb
fldl
fisubrl
inc
cmp
or
ljmp
enter
mov
fimull
pop
cmp
jo
sbb
ljmp
and
mov
dec
xchg
dec
cld
ss
or
sub
enter
jb
pop
fcomi
inc
xor
outsl
out
pusha
mov
jns
ret
fisubrl
adc
rclb
test
scas
mov
out
xor
inc
lock
in
shl
jg
pop
call
xor
dec
lahf
punpckhbw
cmp
aas
scas
dec
ljmp
imul
insb
ljmp
sbb
push
fisubl
fwait
xchg
mov
repnz
test
test
rcr
sbb
test
xchg
or
sahf
int3
test
outsb
ret
push
aam
xchg
xor
adc
arpl
outsl
mov
xor
pusha
aas
and
cmc
ds
sbb
and
rcrl
out
pop
sti
fnstcw
sub
inc
sti
or
addb
mov
and
leave
push
jle
test
dec
ljmp
mov
outsb
int3
pop
movsl
xchg
outsb
setnp
inc
mov
push
and
hlt
ljmp
ds
cmp
lcall
and
mov
push
xor
nop
nop
jbe
mov
xchg
aaa
xchg
pop
sbb
movsb
out
mov
stc
mov
imul
add
lahf
pop
sbb
dec
gs
mov
jae
dec
push
xchg
stos
sbb
jge
push
popa
into
add
repnz
rorb
xchg
adc
mov
mov
lods
sbb
xchg
call
rcrb
jg
int
cmc
ja
mov
dec
movsl
mov
lret
xor
jmp
push
addl
fchs
add
xchg
mov
test
rclb
addr16
nop
mov
xchg
ljmp
add
pusha
ja
setle
or
mov
divb
loope
jne
in
rcrl
sub
stc
aam
jl
nop
loop
sbbb
lea
shrb
and
cmpsb
mov
lods
nop
pop
xor
xchg
mov
in
aad
fsubl
inc
mov
pop
jne
daa
insl
xchg
rsqrtps
cwtl
or
jge
mov
mov
fs
inc
inc
sbb
insl
xor
aas
sbb
gs
pop
hlt
xchg
mov
leave
icebp
mov
test
lret
add
icebp
xchg
sub
out
and
sub
in
xor
adc
scas
pusha
mov
mov
daa
adc
imul
or
jle
cmp
pop
imul
jbe
sub
cmp
push
test
in
and
adc
leave
sub
cmp
aam
cmp
sti
sub
lds
sub
cmp
sbbb
lret
xchg
xchg
aaa
adc
adc
add
out
pop
imul
inc
push
mov
sbb
push
push
cs
pop
dec
jle
mov
jb
imul
jb
es
pop
scas
jns
int3
sbb
jge
mov
dec
add
xor
popa
pop
into
mov
icebp
cmpsb
and
data16
pop
mov
out
jno
pminsw
mov
dec
or
cmpsb
mov
mov
jnp
lock
add
out
jle
test
stos
push
dec
xchg
cmpsl
leave
inc
sub
inc
lds
lea
insl
out
dec
or
faddl
scas
jp
sarl
push
xchg
xor
cltd
daa
dec
add
loopne
mov
xor
mov
adc
and
add
nop
mov
mov
idivl
add
xchg
jmp
inc
ja
loope
test
pop
in
ljmp
sbb
mov
add
not
out
and
jle
mov
sub
mov
cs
mov
lods
push
pushf
inc
mov
outsb
scas
or
into
incl
xchg
movsb
aam
mov
lcall
loop
xchg
cmp
ffree
mulb
cwtl
xor
jecxz
sbb
nop
mov
pusha
loopne
or
roll
mov
aas
test
data16
jo
or
push
push
xor
addr16
stc
repnz
aam
daa
push
leave
dec
xchg
ss
lea
fbstp
fsubrl
pop
addr16
in
dec
xlat
cmc
mov
mov
lcall
lret
jns
aaa
inc
je
inc
pushf
jge
stos
mov
fbstp
xorl
jae
loopne
dec
outsb
lahf
adc
jle
movsb
xor
cmpl
hlt
adc
add
repz
cmpsb
inc
jbe
icebp
mov
or
fs
int3
jne,pn
out
cmpsb
lods
stc
jo
cmc
out
js
pop
cli
cmp
fcomip
push
enter
out
pop
pop
js
lcall
repnz
enter
mov
mov
ds
or
imul
add
test
roll
xor
movsl
jae
jecxz
jns
lock
dec
sbb
imul
ficoml
inc
inc
in
sbb
jge
jb
xchg
dec
inc
flds
mov
sub
xlat
jg
add
sub
or
mov
xchg
mov
mov
mov
idivb
jl
xchg
or
sub
jle
add
push
mov
add
mov
add
and
or
cwtl
dec
mov
rcrb
into
sbb
inc
push
das
fadds
mov
xchg
pop
lret
clc
xchg
sub
xchg
adc
add
loop
pushl
jp
sbb
push
jns
xor
lea
cmp
je
ret
xchg
ret
sbb
jo
jo
and
mov
and
xchg
lret
popa
mov
arpl
xchg
test
lahf
pop
shrl
hlt
inc
push
add
cwtl
jl
out
pop
rorb
cltd
push
adc
std
je
cld
pop
xchg
mov
add
out
and
and
cmpsl
pop
pop
movsl
xor
insl
cmp
adc
push
inc
xor
sarl
cli
mov
idivl
mov
dec
jg
cmp
jo
pop
pop
xor
test
idivl
sbb
sar
mov
rcll
adcb
subl
mov
xor
mov
movsl
xor
xchg
mov
push
push
test
outsl
sub
int
pusha
icebp
mov
xor
out
cmc
data16
rorb
pop
repnz
stos
and
add
xor
mov
out
imul
adc
push
dec
pop
jne
iret
sub
dec
mov
pop
inc
push
fs
sarb
cmpsb
das
das
aam
jns
add
aaa
ljmp
jecxz
out
das
loope
outsl
mov
mov
xchg
mov
movsb
mov
das
in
shlb
daa
dec
in
pushl
xor
adc
ljmp
jle
lods
pop
fldcw
dec
add
pop
ret
insl
idivb
mov
imul
mov
popf
push
fistpl
fildll
ljmp
out
aam
lcall
in
movsb
or
aam
add
scas
ficoms
repz
adc
les
cmpsb
sbb
stos
out
jae
loopne
xor
push
sbb
jge
orb
sub
xchg
outsb
outsl
stos
xchg
mov
dec
mov
mov
xor
daa
xor
rcrl
fucomip
insb
lahf
mov
jo
adc
or
pop
fwait
or
int
arpl
jecxz
dec
scas
gs
repnz
jae
insb
inc
ret
ret
and
mov
je
mov
cmp
push
jae
int
cmpsb
fdivp
mov
out
adc
sti
andl
mov
lret
shl
jmp
cmpl
in
nop
bound
lret
fdivrl
inc
out
movsb
push
xor
enter
shll
call
daa
rolb
jbe,pt
sub
mov
nop
sub
and
pop
mov
test
mov
adc
scas
push
pop
mov
rolb
dec
cmpsl
stos
movsl
or
adc
or
cmp
js
xor
mov
mov
repz
push
out
or
jae
imul
push
push
mov
orl
cld
push
iret
in
call
add
sbb
dec
out
jg
cwtl
ljmp
std
popf
pop
lds
add
xchg
pop
mov
stos
mov
mov
iret
xchg
rorl
popf
arpl
mov
add
dec
xor
popa
xchg
mov
das
push
mov
mov
add
stc
sbbb
outsl
xlat
mov
sub
js
enter
test
ds
push
loop
je
mov
aad
aas
cmp
ljmp
sub
leave
js
jne
jge
bound
sub
dec
insb
ljmp
or
ss
mov
sub
sub
jmp
in
xor
notl
ljmp
cmp
in
fisttpl
xchg
cmp
xor
push
mov
pop
sub
push
imul
hlt
sbb
mov
fs
or
inc
inc
ret
js
mov
pop
jb
push
sub
xor
loope
mov
jp
sbb
fsub
push
sbb
xor
cli
ficomps
mov
jmp
xor
xor
sbb
aam
les
in
in
dec
inc
dec
inc
jae
mov
bnd
lds
pushf
cmp
pop
mov
pop
outsb
cld
ret
icebp
aad
in
inc
into
insl
lahf
test
bound
cmpsb
mov
dec
in
mov
iret
pushf
mov
cwtl
loop
dec
cmp
jp
jo
dec
ret
lcall
pop
cs
push
mov
shl
popa
add
cmp
jne
mov
fdivs
mov
outsb
or
int
clc
out
fstpl
rclb
shr
sbb
fisttps
repnz
mov
adc
sbb
xchg
mov
cmp
adc
call
or
fcomi
lcall
dec
cli
jo
dec
push
mov
xchg
int
fnsave
scas
push
into
dec
mov
andb
mov
popa
test
xchg
pop
mov
out
nop
adc
jecxz
int
jmp
jae
mov
in
fprem
mov
inc
pusha
fwait
xor
mov
popf
sahf
sbb
daa
jecxz
xor
fimull
pop
stc
inc
cmpsl
xor
cmp
adc
xchg
repz
inc
fwait
pop
mov
mov
fistpll
out
cmp
mov
addr16
adc
pop
mov
mov
scas
fdivs
mov
popl
fstpl
mov
fisttpl
push
mov
cmc
fisttpll
sub
sub
inc
add
shrl
mov
push
daa
dec
popf
jno
incl
popf
cmp
fcoml
push
push
les
add
fstpl
fnstcw
adc
inc
addl
sahf
jno
clc
std
push
test
hlt
mov
or
in
leave
sub
cmp
xor
outsb
and
pop
push
ja
icebp
xor
fwait
test
fildl
fildl
add
inc
ss
xchg
dec
sti
bound
or
pop
cmpsb
dec
jle
in
outsb
aas
jno
push
mov
bound
fsubs
out
movsb
xor
push
js
popa
pop
or
out
mov
sub
xor
ss
pusha
neg
test
pop
shl
scas
push
push
push
in
or
dec
push
jecxz
movsb
nop
adc
add
jnp
mov
fucomi
gs
jb
movsb
xchg
outsl
jae
push
lea
jbe
sbb
mov
frstor
outsb
int3
xchg
pop
sub
aad
sub
inc
daa
hlt
movsl
nop
lock
iret
mov
icebp
mov
out
andl
ljmp
dec
mov
mov
mov
cmp
mov
inc
enter
mov
pusha
mov
loopne
add
jo
incb
pop
sub
cmc
js
cmpl
sub
sbb
imul
leave
dec
fnstcw
test
or
fisttpl
pop
mov
or
stc
pop
leave
dec
fnstcw
test
or
fcmovne
lret
pop
mov
or
stc
pop
leave
dec
fnstcw
test
or
fisttpl
pop
mov
or
push
icebp
leave
dec
scas
dec
and
lretw
xchg
addl
rcrl
add
xor
add
push
push
add
arpl
xchg
mov
ret
icebp
repz
sbb
add
push
xor
and
inc
inc
jno
popa
arpl
mov
mov
jmp
adc
and
push
dec
jle
or
add
or
filds
fldcw
sub
lock
ljmp
push
jns
outsb
cmpsl
xchg
xchg
or
mov
mov
push
ret
ds
add
imul
int3
sub
in
inc
push
sbb
addl
lahf
sahf
rorb
adc
add
scas
lods
add
cmpsb
scas
inc
push
xchg
xchg
push
cmpsb
sub
hlt
rcl
ret
sbb
loope
and
cmc
jge
aam
adc
jno
jle
call
pop
add
mov
push
and
and
sti
add
cld
sbb
xchg
decb
dec
dec
adc
push
adc
pop
into
inc
and
xchg
inc
push
adc
xchg
addl
icebp
repz
jecxz
adc
add
xor
and
pop
inc
jno
js
loop
in
aam
xchg
lods
mov
xchg
mov
inc
pusha
dec
push
cmp
add
xchg
incl
shlb
movsb
int
jbe
jno
push
push
jno
ss
add
popa
aaa
clc
shlb
fldt
repz
adc
add
xor
and
push
push
inc
inc
jno
popa
arpl
mov
mov
icebp
repz
adc
add
xor
and
push
push
inc
inc
jno
popa
arpl
fmul
fs
es
inc
dec
movsb
mov
sbb
in
xor
sub
rcrb
sub
adc
sub
in
cmpsb
mov
jnp
js
cmpsb
lret
mov
je
and
scas
push
imul
mov
mov
ja
aam
sbb
add
lret
adc
jae
jbe
popf
cmp
inc
movsl
inc
and
jmp
lods
and
push
les
xlat
cmpsl
push
mov
mov
cmpsl
mov
mov
in
in
ficoml
mov
dec
addl
cmpsl
insb
sti
mov
adc
push
xchg
xchg
jle
mov
shrb
ds
gs
adc
add
imul
xchg
push
popa
jns
les
ds
fisttpl
and
inc
addb
mov
inc
int3
je
es
das
cmpsl
sub
cld
imul
es
mov
xlat
cld
xor
and
jp
sbb
nop
nop
or
mov
mov
into
sar
inc
sbb
cmc
decl
mov
mov
mov
pop
xchg
cmpsl
sbb
or
or
cmpsl
mov
stos
mov
or
aad
gs
aas
dec
mov
int3
or
mov
stos
fcmovnu
mov
fimull
repnz
les
cs
sub
popf
jns
add
test
jb
adc
ja
push
sti
std
cmp
js
insb
rol
jle
xchg
mov
mov
cli
enter
mov
loope
scas
sarb
cmpsb
pop
mov
sbb
push
mov
mov
inc
jnp
das
jl
push
fidivrs
rolb
mov
pop
lea
mov
popa
xchg
sub
fs
add
rclb
push
jmp
or
daa
sub
and
and
call
mov
and
xor
js
jecxz
lcall
sbb
data16
pusha
add
ret
ss
cmp
stos
add
pop
jns
mov
mov
add
dec
pusha
inc
adc
xchg
test
in
jo
add
fbld
xor
cs
test
or
inc
and
es
xchg
mov
or
xchg
movsl
ljmp
lock
sbb
notl
test
inc
push
lds
sbb
mov
mov
aas
mov
out
sbb
ret
inc
scas
mov
dec
mov
cmp
or
push
push
shrl
sbb
jae
xor
inc
pop
mov
push
xlat
or
lcall
sarb
test
adcl
in
xchg
xor
aad
xor
jne
stos
lcall
xorl
popa
lods
and
inc
mov
cmovno
mov
adc
je
aad
or
into
loopne
push
in
fistpll
xchg
lahf
mov
ret
or
sub
cmp
pop
pop
test
std
repz
mov
cmpsb
insl
lret
shrl
add
push
jne
or
mov
adc
xchg
lcall
dec
ja
sbb
icebp
fstpl
arpl
and
loopne
add
addl
outsb
mov
cmp
test
inc
hlt
and
nop
inc
lea
push
ror
inc
daa
mov
mov
jae
jge
nop
dec
aaa
popf
cld
push
dec
xchg
pop
js
and
or
sbb
push
imul
xor
adc
inc
ljmp
lods
pop
fldln2
mov
mov
and
ljmp
ret
inc
pushf
cwtl
ljmp
pop
dec
cmc
jg
jp
imulb
ret
fldcw
test
or
push
sbb
mov
push
xchg
xchg
imul
xchg
leave
mov
pop
pop
adc
lcall
add
outsb
push
out
mov
cmpsb
add
jge
mov
insl
cwtl
xor
sti
adc
fdivs
push
adc
insb
sub
jb
nop
daa
int3
divb
fcompl
and
add
adc
js
fsubl
sub
pop
sub
xchg
mov
movsl
int3
sub
xchg
push
mov
sbb
push
sub
fiadds
fstpl
mov
xor
lods
test
mov
data16
inc
pop
arpl
fwait
lea
dec
icebp
lret
mov
adc
cld
aad
std
and
cmp
sub
clc
sti
test
movsl
call
push
test
xor
repnz
push
sub
das
ficomps
out
mov
aas
inc
inc
jge
push
mov
mov
lock
pop
rcr
ss
aas
push
sub
fwait
cli
mov
or
test
and
cs
cmp
jmp
adc
mov
insb
scas
and
jle
stos
push
xchg
cmp
gs
lahf
xor
mov
cmp
ss
popf
sub
int3
sub
out
sarb
mov
mov
adc
sub
push
stc
daa
clc
jle
mov
lock
push
dec
in
mov
mov
int3
mov
out
cmc
sub
cmpsl
push
aaa
popa
sahf
repnz
push
loope
cmp
test
ret
mov
mov
dec
rcll
mov
popf
jae
xlat
nop
add
dec
faddl
out
pop
mov
push
cli
std
or
pusha
pushf
lods
push
scas
push
cmp
push
mov
mov
mov
orb
dec
mov
cmp
int3
lret
xlat
mov
adc
popf
sbb
movsb
mov
jp
test
xchg
repz
xor
loope
fcmovbe
repnz
lahf
mov
jo
sbbl
push
insl
push
fs
shll
jo
bnd
call
std
and
imul
shr
and
pop
lock
lods
cmpsl
sbb
lock
leave
lods
mov
mov
or
push
lea
addb
jl
shlb
sti
lcall
dec
mov
pop
loopne
in
jbe
daa
call
sub
mov
xchg
xor
xchg
mov
subl
lds
mov
ret
ret
cwtl
fldt
mov
dec
add
mov
stos
sbb
push
push
pop
int
adc
xor
dec
dec
daa
jae
jecxz
mov
adc
sub
push
jg
roll
xchg
fldt
jge
fs
gs
movsb
nop
lock
imul
add
int3
lods
stos
idivb
aaa
lods
movsl
inc
xor
pop
stc
outsl
ss
pop
pop
enter
pushf
hlt
mov
mov
push
call
les
cli
sbb
fisubs
pop
out
jg
push
mov
or
inc
pop
cmp
cmp
sbb
sub
outsb
or
pop
mov
cmp
jmp
repnz
in
pop
loop
pop
movsb
mov
jno
inc
or
pop
insb
xchg
nop
mov
add
mov
iret
xchg
adc
sub
addr16
sbb
sub
pop
pop
cmpsb
jbe
pushf
push
push
into
dec
mov
inc
cmp
xor
adc
sub
xchg
push
repnz
sub
push
cli
mov
add
add
shll
mov
xchg
fiaddl
shl
aam
lock
jnp
push
dec
push
push
mov
aad
rorl
fwait
gs
fnsave
mov
in
mov
imul
fsts
dec
sti
pop
imul
dec
das
popf
lcall
hlt
dec
test
pop
mov
ret
sbb
fisttpl
mov
imul
aam
sub
or
sub
sub
movsl
jmp
add
mov
ja
inc
push
and
jmp
out
loop
je
inc
scas
das
and
lods
mov
cli
popa
pop
adc
pop
jle
aad
mov
mov
clc
jbe
ffree
dec
mov
jg
lcall
loop
cmp
lret
push
cmp
call
cmp
add
xchg
jp
jl
cmpsl
lods
loop
bound
ljmp
lcall
pop
jb
fdivrs
dec
sbb
addl
pop
cmpsb
pop
dec
test
adc
mov
adc
dec
loope
jne
sub
into
mov
push
sahf
cmp
jecxz
dec
mov
jno
dec
fwait
add
mov
xor
in
mov
or
jb
stos
out
pop
xchg
dec
xlat
je
pop
bts
test
sbb
cltd
inc
sti
js
arpl
outsl
mov
xor
sarl
addr16
xor
mov
mov
dec
lret
mov
nop
or
dec
sbb
pop
cmp
push
pop
in
shl
mov
mov
sbb
xor
lds
in
and
leave
lcall
inc
je
stos
pop
cmp
pop
sbb
xchg
and
ljmp
add
or
jae
out
mov
and
stos
mov
dec
fnsave
fsubs
mov
sbb
pop
cmp
lret
jge
incb
jo
frstor
iret
cmp
icebp
jmp
outsb
xor
xchg
pop
sub
jp
xor
mov
insl
or
das
fidivrl
enter
cld
ja
movsb
pop
sar
sbb
in
mov
popl
adc
pop
mov
std
jae
lcall
mov
xchg
fildl
js
add
jp
mov
shl
icebp
dec
add
ss
jne
xor
sbb
inc
push
mov
jp
mov
add
loop
lea
inc
ficoms
push
imul
cmp
cmp
ljmp
rep
enter
leave
pop
shll
xchg
mov
testb
xchg
mov
outsl
mov
pop
subl
inc
mov
adc
xchg
insl
sub
lret
leave
cmp
inc
leave
xchg
shll
jno
push
scas
fildl
lods
out
and
addr16
lahf
mov
ja
lods
push
add
ss
dec
repz
push
cmp
pop
dec
pop
jnp
sub
repz
fadds
pmaddwd
sub
sbb
lcall
push
fsubs
cmp
dec
stc
xor
mov
and
jg
arpl
xchg
adc
xchg
int
mov
lcall
sub
inc
xor
pop
inc
clc
mov
and
sub
cli
pop
xor
xchg
push
sbbb
xchg
lds
push
outsl
cmpsl
loope
and
and
jle
add
insl
jp
sahf
loop
pop
in
rclb
xchg
sub
popf
xlat
imul
mov
adcb
enter
ret
les
jno
push
aad
lods
es
mov
je
push
lods
sub
shll
dec
adc
mov
mov
ret
pop
rcr
popa
push
je
pop
js
fidivrl
xchg
add
js
push
aas
sti
mov
or
scas
fiaddl
lret
lahf
sub
add
inc
arpl
sarl
cmp
pop
sub
xor
xchg
int3
xor
insb
jne
add
sahf
repz
rcrl
xchg
lock
and
fwait
imul
shrb
inc
pop
pop
cmp
or
or
push
shll
loop
mov
jl
cld
push
mov
xor
ds
xchg
sub
ficoms
js
sbb
rep
cs
hlt
idivl
mov
int
sbb
xchg
mov
dec
popa
lds
sbb
inc
fucomip
mov
and
mov
stos
adc
pop
jbe
lret
dec
xor
je
out
sbb
jl
dec
inc
xchg
mov
pop
or
dec
enter
jb
lods
cmpsb
lret
addb
xchg
das
icebp
addr16
sbb
jge
push
test
or
jp
cmp
jmp
loope
cmpsl
xor
push
dec
hlt
mov
sub
out
push
roll
mov
cld
add
gs
jbe
nop
add
outsl
inc
lods
or
sub
pop
lods
idiv
mov
jb
push
lea
fsub
movsb
aad
mov
sbb
ffree
stc
push
int
mov
stos
jmp
sub
es
sbb
roll
fucomp
clc
out
jns
xlat
mov
inc
aas
movsb
xchg
dec
cmp
mov
fchs
cmp
dec
int3
cs
jbe
or
stc
push
addr16
push
scas
inc
fwait
pop
pop
or
push
mov
add
xchg
out
repz
dec
sub
sbb
or
ficomps
add
mov
jecxz
adc
fwait
jae
pop
sub
sub
pop
xchg
cltd
sbb
sbb
imul
jmp
fnstsw
or
pop
addl
jge
nop
mov
or
or
and
adc
xor
pop
daa
jns
ret
push
pop
pop
sbb
sbb
je
mov
scas
fidivrl
inc
repnz
sbb
gs
sbb
cld
mov
mov
or
fisttps
lahf
inc
and
xor
mov
and
ja
test
pop
aaa
ds
gs
mov
jmp
stos
ds
lock
daa
outsl
dec
add
mov
or
divw
gs
sub
sbb
pop
add
xchg
xor
call
popa
jp
jbe
mov
pop
ja
daa
jnp
xor
jge
lods
cmp
ss
xchg
nop
adc
sub
test
mov
aaa
mov
push
mov
fidivl
sub
and
fs
popf
je
push
xor
rorl
scas
mov
or
mov
scas
enter
dec
push
jns
mov
lret
sbb
or
std
aaa
cmpsl
jecxz
xchg
sub
xchg
dec
sub
in
pop
sarb
sub
sub
or
mov
xchg
inc
loopne
pop
cmp
movsl
fisubrl
bound
mov
mov
imul
hlt
sbb
div
adc
popa
orl
aas
rorl
dec
jecxz
testl
mov
les
or
daa
shr
dec
jb
inc
and
inc
ret
adc
cmp
sub
adc
or
mov
inc
jae
enter
filds
lret
ret
cli
pop
jne
test
push
bound
push
push
push
adc
adc
aam
repz
sbbb
jmp
stc
popf
mov
xchg
xchg
scas
cmpsl
sbb
aam
jecxz
jae
js
mov
cmp
sti
std
push
aaa
sub
xor
popf
add
int3
xchg
and
push
inc
and
and
enter
sbb
cs
adc
mov
add
adc
popf
ds
std
dec
add
insb
ret
inc
imul
sarl
mov
mov
clc
sub
stc
jmp
test
dec
and
addb
std
insl
push
fisubl
pop
and
push
sbb
add
or
lcall
adc
jecxz
fs
rolb
add
inc
ja
xor
xchg
cs
arpl
xor
fisttpl
adc
sub
lods
pop
sub
adc
movsl
xchg
int
inc
pop
pop
icebp
mov
fimuls
scas
xor
dec
leave
jnp
cmp
stos
out
dec
es
iret
xchg
mov
cmp
jbe
arpl
inc
stos
mov
mov
icebp
clc
mov
arpl
mov
xor
cmp
icebp
add
pop
xchg
xor
fiadds
rcr
push
mov
ret
movsb
out
fwait
mov
jecxz
mov
inc
push
rolb
fdiv
fldz
jg
add
adc
dec
add
or
imul
jecxz
add
mov
cmp
jnp
hlt
jp
cli
jne
neg
fldlg2
int
outsl
in
aas
nop
cmp
rol
inc
inc
inc
mov
pop
test
jo
out
and
mov
clc
mov
scas
insl
mov
sbb
fbld
dec
inc
add
or
xor
xchg
mov
stc
sbb
outsl
cmp
cld
repnz
dec
insb
lcall
inc
sti
dec
out
and
popf
jmp
push
mov
ja
lods
movsl
rcl
xor
inc
das
repnz
es
xchg
jle
out
fildll
rcrl
dec
pop
xchg
cld
leave
cmpb
push
dec
ret
pop
aas
divb
sar
sahf
xchg
pop
cmpl
fiadds
lods
movsl
addr16
cwtl
add
xchg
loope
std
lahf
fbld
insl
pop
in
adc
mov
jne
out
std
push
push
movsb
push
mov
leave
push
pop
push
les
inc
jns
lods
imul
pop
gs
mov
sub
sub
sbb
and
repnz
or
and
rclb
insl
pop
cmp
fidivrl
scas
adc
mov
pop
jnp
loop
add
push
popf
xchg
xchg
adc
scas
xor
cmc
xchg
outsl
cwtl
mov
mov
lahf
cs
cmp
push
pop
sub
push
sub
jp
nop
imul
mov
lods
stos
cmp
cmp
or
add
sbb
shll
cli
rclb
insl
jmp
jl
inc
xchg
adc
pop
int
jno
jecxz
out
xchg
jbe
sub
sub
out
nop
sbb
ljmp
je
pop
adc
outsb
push
jo
mov
idivl
lods
orb
sbb
out
lds
imul
hlt
das
lahf
jmp
scas
xor
mov
loope
call
sub
jnp
mov
push
mov
out
mov
dec
push
mov
out
sarl
ss
insb
stos
push
pop
std
lahf
jne
adc
pop
imul
out
xchg
or
mov
pusha
dec
cli
adc
jne
push
dec
adc
fsubrl
pusha
addr16
or
jp
out
xchg
mov
outsl
cs
clc
xor
jl
ljmp
in
sahf
sbb
imul
push
int
outsl
out
or
test
mov
aas
nop
sub
sbb
pop
fmuls
add
popf
repz
addr16
ja
push
inc
pop
inc
into
push
shrb
mov
rcl
and
or
push
push
dec
mov
inc
or
fnstsw
leave
xchg
call
out
repz
inc
cld
cmpps
shlb
clc
scas
sub
push
int3
aas
mov
pop
adc
mov
lds
add
and
xorl
cli
sub
and
dec
pushf
stc
int3
jo
filds
ss
outsb
xchg
push
das
mov
sbb
xor
lods
xchg
mov
or
mov
jnp
jp
xor
ret
mov
lods
xor
inc
outsb
icebp
or
push
int
leave
pop
fsubs
out
imul
sahf
mov
mov
xor
outsb
push
push
dec
ljmp
scas
xor
mov
insl
loope
es
or
std
aas
lods
in
maxps
leave
arpl
mov
add
mov
jno
inc
mov
add
xchg
pop
lods
popa
adc
xor
adc
lds
stos
idiv
hlt
adc
or
push
adc
daa
inc
pop
push
rcll
fstpl
mov
add
out
lods
jle
gs
mov
pop
cmpl
outsb
idiv
sbb
mov
mov
das
sbb
ss
mov
fs
pop
fs
fwait
jge
rolb
inc
or
scas
cmp
mov
mov
aas
scas
popf
fwait
jnp
pusha
aaa
nop
mov
cmp
adc
dec
aam
push
cmp
mov
add
jl
xor
dec
pop
cmp
out
sbb
add
push
fcoms
mov
rolb
mov
divb
outsb
pop
loope
mov
or
hlt
testl
aas
nop
jmp
push
xchg
aam
nop
cmp
lea
cmp
pop
mov
fiadds
cmp
jmp
jne
push
sub
mov
shl
mov
clc
neg
dec
ficomps
mov
fcomp
mov
add
cmp
clc
adc
inc
mov
movsl
add
movsb
jne
test
jecxz
fwait
dec
aaa
test
hlt
outsb
and
shr
in
out
cmp
sti
and
jg
push
test
mov
lret
dec
lcall
fsubl
xlat
sbb
jl
loopne
dec
xor
dec
xchg
xchg
enter
sahf
lea
out
sub
cmp
ret
mov
sar
insl
inc
es
push
push
stc
xchg
callw
jge
dec
or
cs
or
pop
mov
sbb
out
lods
stc
mov
mov
or
in
es
out
not
in
lahf
cmp
not
push
pop
xor
ret
push
iret
scas
out
xchg
pusha
mov
mov
add
push
push
loopne
xor
clc
cld
fcmovnb
rorl
aas
push
lods
js
arpl
jnp
bound
mov
movsb
test
pop
add
xlat
sbb
xor
arpl
enter
mov
adc
rol
repz
adc
add
xor
and
push
push
inc
inc
jno
popa
arpl
mov
mov
icebp
repz
adc
add
xor
and
push
push
inc
inc
jno
popa
arpl
mov
mov
icebp
repz
adc
add
xor
push
inc
inc
jno
push
arpl
mov
mov
jno
popa
and
adc
test
es
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
cmp
dec
pop
or
or
pop
add
add
add
add
pop
das
add
stc
add
arpl
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
adc
enter
inc
add
add
jne
sbb
xor
jns
add
add
add
add
push
add
ljmp
add
add
mov
add
add
add
add
add
push
add
add
imul
add
addl
and
jl
pop
add
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
lea
inc
add
add
add
je
inc
add
ljmp
add
add
scas
add
add
add
add
push
add
mov
or
pop
add
add
add
add
cmp
fadds
lret
add
or
add
mov
adc
loope
jno
jl
pop
add
add
add
cmp
test
adc
add
mov
add
add
add
add
je
sbb
jl
mov
dec
add
add
add
xchg
cmp
dec
add
add
add
add
inc
add
add
mov
add
add
add
add
add
je
test
add
rolb
je
push
add
add
add
add
push
add
add
add
or
push
add
ss
add
clc
add
add
add
add
leave
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
pop
add
push
add
add
add
je
into
add
ljmp
add
je
sub
into
add
pop
add
add
add
rolb
je
rolb
xor
out
or
adc
dec
add
add
add
add
popl
add
imul
loope
add
enter
or
popa
add
add
add
add
jns
sbb
inc
add
add
flds
movsl
add
sbb
xchg
fadds
or
add
add
add
add
mov
insb
add
mov
add
add
add
add
add
add
add
add
add
add
push
mov
fadds
xor
jne
cli
add
add
add
xor
add
xor
out
and
data16
add
add
add
add
add
push
add
add
jne
jl
jbe
adc
jbe
xchg
add
add
add
add
xchg
add
add
add
add
or
xchg
add
dec
add
add
popa
add
add
jl
cli
add
add
add
add
add
add
add
ljmp
add
stc
add
fadds
mov
add
add
add
mov
add
push
add
add
add
add
sbb
and
xchg
aad
rolb
ltr
add
add
add
scas
add
add
add
add
sbb
js
pop
mov
vpaddd
imul
pop
addl
dec
imul
jle
cmp
cmp
mov
inc
mov
mov
jbe
xor
shll
inc
pop
and
das
fdivr
shll
mov
mov
adc
push
in
or
push
outsl
jp
push
leave
xor
mov
dec
jae
das
das
sbb
dec
lods
add
push
sbb
imulb
add
xchg
lcall
std
add
shrl
ror
xorb
mov
scas
mov
xlat
jnp
inc
mov
inc
or
rclb
jg
fisttpll
hlt
or
lds
inc
mov
fstpt
jmp
mov
pop
aad
pop
push
cltd
outsb
sahf
pop
hlt
dec
sti
adc
xchg
in
fildl
xor
and
idivl
ljmp
xor
fidivrl
xor
subb
mov
push
imul
fnstsw
loop
pop
mov
sahf
dec
lahf
outsl
adc
lret
dec
ja
cli
hlt
rcrb
sub
push
mov
cwtl
or
dec
pop
loop
ljmp
das
negb
imul
sbb
shl
xchg
lret
lahf
lcall
xchg
mov
arpl
add
js
pop
xor
push
lahf
scas
cmovs
ret
xor
push
mov
clc
adc
in
addl
in
mov
imul
xchg
rep
lahf
cld
xorl
push
movsb
add
lock
rclb
mov
cmp
jge
adc
sub
lock
addr16
lds
mov
or
inc
xlat
insl
inc
inc
mov
inc
xchg
sbb
xchg
mov
jle
rolb
shrb
push
jbe
mov
sti
out
add
jns
out
jmp
and
mov
or
test
mov
inc
imul
cmpsb
mov
cmp
ret
jnp
dec
sahf
and
adc
jbe
dec
or
lret
xchg
push
jle
ljmp
add
inc
xor
jbe
dec
lock
sub
dec
jmp
shlb
add
xchg
lea
sbb
arpl
and
fsts
loop
push
jg
dec
mov
bound
imul
jae
jmp
add
xchg
mov
ror
ss
pop
mov
pop
cmp
jae
outsb
add
xor
cld
add
ja
cmp
sti
rcl
aad
dec
sbbb
ret
fldcw
lahf
scas
mov
shrb
inc
pushf
mov
in
sub
jg
mov
bound
movsb
mov
testl
nop
mov
adc
pop
ret
test
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
