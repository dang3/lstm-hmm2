call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cltd
insb
mov
test
sbb
bound
cmp
sub
pop
lods
dec
mov
cltd
insb
mov
test
cmp
or
jns
in
or
dec
int
fcompl
dec
mov
cltd
insb
mov
test
cmp
or
sbb
in
or
dec
test
sub
aaa
jmp
mov
pop
fstpt
cltd
xchg
leave
shll
adc
fldt
add
xchg
jp
shlb
sub
insb
xor
shl
cmp
mov
test
xchg
out
cld
daa
add
pop
out
xor
int
jl
mov
xchg
repnz
pop
fistps
in
arpl
lret
stc
push
rolb
loope
imul
sub
cmp
mov
mulps
stc
imul
xchg
push
bound
call
jmp
aam
dec
lods
cltd
in
jl
xor
dec
push
and
mov
xchg
dec
in
arpl
sarl
in
jns
add
insb
mov
test
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
fildll
fmull
orb
test
pop
pushf
or
lods
cmp
and
cmp
add
adc
add
aas
lahf
outsl
movsl
jns
pop
jmp
mov
insb
mov
sbb
enter
das
shrb
test
fstps
leave
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
cltd
insb
mov
test
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
cltd
insb
sub
add
lea
inc
pop
idiv
jo
jle
stos
mov
clc
xlat
mov
xchg
adc
sbb
int3
adc
adc
stos
jnp
xor
addr16
std
mov
adc
rcll
xor
imul
add
push
je
sub
arpl
test
sub
pop
into
mov
test
arpl
lods
sub
les
in
arpl
jae
cmc
sbb
aas
lea
xor
adc
push
mov
fimull
xor
push
xchg
push
jecxz
adc
mov
pop
lahf
add
and
adc
add
sbb
outsl
nop
sarb
dec
mov
xor
pop
daa
outsb
int
jmp
mov
cwtl
sub
fdivs
sbb
sbb
fimuls
inc
jle
push
outsl
shlb
mov
push
mov
mov
in
cmp
sarb
test
add
push
dec
movsl
sbb
xchg
scas
cltd
xor
int3
jbe
data16
mov
fstpl
sub
and
cs
xor
arpl
cltd
xchg
adc
pushf
mov
loopne
out
jp
fwait
add
nop
sbb
repnz
subb
aad
sub
mov
outsl
and
adc
dec
arpl
xchg
out
add
lea
push
jl
bound
or
add
push
add
test
addr16
sbb
gs
ljmp
xchg
std
pop
adc
mov
add
adc
out
adc
xchg
pshufw
jne
sbb
cmc
and
iret
mov
add
repz
sti
popa
fsubr
arpl
mov
inc
mov
test
cld
push
cmp
mov
aas
lock
fdivp
mov
cmp
or
sub
jle
or
je
xchg
dec
sarb
xor
mov
mov
pushf
int
mov
loop
inc
xchg
fwait
add
fsubrl
xchg
je
jno
push
add
and
adc
add
pop
dec
ds
adc
rorb
xor
sub
pusha
adc
and
mov
inc
and
mov
arpl
push
scas
inc
xchg
daa
xchg
jg
pop
leave
icebp
pslld
aaa
jecxz
or
jecxz
cmp
jecxz
call
sahf
mov
mov
and
add
push
sub
add
dec
lcall
into
shlb
push
or
jnp
int3
adc
push
outsl
mov
or
add
jne
xor
sub
push
jb
jmp
bnd
sbb
jae
fs
push
add
mov
add
cli
jge
mov
or
push
jno
cmpsl
in
mov
ljmp
daa
jl
outsb
xchg
test
stc
inc
lods
jp
add
test
add
inc
pop
fisubl
inc
push
imul
push
cmp
pop
pop
cmp
jecxz
jbe
xor
data16
xchg
xchg
sub
lret
sbb
int
add
jecxz
lds
decl
sbb
imul
xchg
mov
scas
add
lds
std
jns
cmp
call
dec
pop
pop
push
inc
cs
add
inc
les
xchg
lock
mov
ljmp
divb
or
testl
fsubrl
xchg
loope
pop
stos
lea
jmp
pop
dec
test
adc
push
pop
les
push
pop
test
and
enter
in
xchg
out
cmc
mov
imul
sbb
mov
mov
inc
sarl
test
cwtl
lcall
shr
or
cmp
or
ja
aaa
in
mov
cmp
push
scas
pop
out
mov
push
mov
and
jno
pushf
pop
and
out
sbb
jmp
cmp
jecxz
decb
js
or
jmp
pusha
imul
cld
mov
clc
pop
pop
pop
test
jmp
xchg
xor
pop
repnz
dec
push
int
mov
lods
icebp
push
pusha
add
mov
mov
or
sti
mov
mov
pop
pop
lods
cmp
fldcw
imul
daa
lcall
mov
inc
std
lock
pop
dec
xchg
dec
mov
and
xchg
shrb
jmp
jnp
cli
or
sbb
xor
adc
cmp
dec
push
mov
lods
aam
pushf
xor
pop
dec
ret
mov
movsb
scas
push
mov
jmp
shll
dec
pusha
xor
xchg
mov
mov
mov
out
daa
cmpsl
std
ficoms
jae
bnd
mov
es
sbb
pop
sbb
fs
call
sti
and
movsb
inc
sub
daa
data16
jnp
hlt
cmp
imul
sti
clc
into
and
mov
in
std
fsubr
or
inc
xchg
mov
ljmp
or
lea
dec
negl
lods
repz
adc
cmp
ja
enter
mov
add
sbb
inc
sbb
fisttps
jp
adc
jmp
pop
or
push
pusha
iret
dec
incb
sub
mov
fs
sbb
jo
outsl
loopne
out
lahf
adc
call
jbe
cmp
xchg
inc
push
cmp
adc
mov
ss
xor
jns
dec
xchg
adc
add
gs
or
xchg
std
aaa
cmc
add
or
mov
mov
sbb
fadds
lock
push
lahf
dec
xchg
mov
movsb
aaa
aad
cmp
pushf
sti
lcall
or
and
inc
xor
aas
pop
push
add
sahf
adc
fnstcw
cs
movsb
xchg
enter
es
push
ljmp
js
mov
sub
imul
insb
mov
mov
and
in
iret
data16
js
sarb
dec
in
or
into
ja
cmpsl
adc
outsl
in
sti
into
inc
lahf
in
sbb
in
imul
movsl
gs
fucom
pusha
or
xchg
pop
data16
clc
mov
mov
daa
outsl
mov
aad
pop
repz
push
bnd
dec
mov
sub
mov
push
sub
dec
mov
cmp
xor
sti
nop
ds
lret
mov
cltd
adc
fisubs
repnz
test
sahf
adc
ficomps
idiv
mov
cmp
int
hlt
mov
das
adc
xchg
movsb
in
add
fistl
jbe
pop
or
mul
cmp
or
mov
pop
fistl
cmc
sub
popf
inc
fdiv
inc
sbb
push
pusha
bound
push
mov
stos
cs
jecxz
cs
mov
inc
inc
shlb
push
ja
iret
imul
push
sub
lret
cli
cmp
pop
mov
rcll
dec
movsb
mov
xorl
pop
xchg
mulb
ficomps
scas
movl
xchg
push
sub
and
out
pop
cs
inc
iret
les
cmp
pop
shl
or
lods
mov
insb
bound
ss
les
daa
sbb
fdiv
dec
mov
sub
addr16
xchg
cmpsb
jae
pop
negl
loop
xchg
jle
movsb
rcl
shl
addr16
rcrl
sub
add
mov
test
jae
xor
mov
sub
cltd
test
ss
dec
imul
inc
sub
dec
cld
xchg
cld
jns
adc
xchg
pop
push
mov
adc
xchg
mov
daa
xchg
xor
arpl
jns
push
sti
out
add
push
cwtl
aaa
mov
dec
push
and
adc
sarb
out
call
movsb
jmp
inc
xchg
pop
add
lret
insb
push
scas
mov
insb
into
adc
sbb
and
push
out
mov
xor
and
outsb
mov
es
daa
test
test
push
lods
sub
popf
rorb
mov
jo
cmc
test
shl
xor
cmp
mov
xchg
dec
cli
pop
or
ret
ret
xor
je
rclb
nop
aad
add
push
aaa
dec
sbb
pusha
out
gs
test
jae
xchg
pop
mov
lahf
aad
and
in
int
jle
pop
sbb
in
or
shll
jle
out
loop
inc
rolb
cmpsb
in
jg
mov
add
popa
daa
lds
sti
pop
repz
pusha
in
jno
daa
dec
aam
insb
jl
ds
andl
movsl
rcrl
dec
sbb
jg
jne
adc
or
sbb
call
out
imul
xchg
adc
dec
mov
rolb
sub
pusha
adc
sub
or
fisubrl
in
lea
sti
sub
jnp
cltd
dec
fstl
inc
pusha
fcomip
pop
cmp
mov
shl
leave
loop
es
lods
sub
sub
xor
cmp
fwait
daa
xchg
mov
lock
push
popf
lods
pushf
pop
push
mov
adc
pop
dec
xchg
dec
aaa
ss
enter
cmp
sbb
push
pop
aad
mov
mov
insl
test
add
rcl
xlat
in
adc
lds
gs
mov
lock
bound
mov
adc
gs
out
je
mov
loop
fsub
pop
fs
icebp
shlb
pop
test
mov
or
inc
stos
enter
push
lds
notb
push
sbb
in
test
repz
std
les
out
cmp
movsb
adc
ror
test
jnp
in
out
aam
addb
dec
or
inc
cmp
adc
movsl
cmp
icebp
test
add
cmc
std
push
xchg
int
push
in
addr16
cli
push
cmp
fisubrl
cld
xchg
sbb
insl
mov
test
fidivrs
and
xor
mov
scas
movsl
ja
pop
jnp
outsl
adcb
repz
pop
ja
enter
or
sub
pop
mov
xor
xor
in
dec
jbe
push
push
sbb
ret
cmpsb
pop
imul
adc
pop
out
daa
inc
xchg
xchg
popa
fs
pop
icebp
jns
adc
bound
repnz
fdivr
xchg
testb
adcb
testl
sub
push
jg
dec
scas
lret
test
jbe
dec
pop
pop
fsubp
push
push
sub
sbb
cmp
mov
cmpl
jns
iret
clc
mov
jno
dec
push
xchg
pop
subl
call
and
jl
inc
jo
stos
cli
fnstcw
mov
push
push
dec
out
ja
push
clc
rorl
pop
mov
push
mov
or
insb
jno
inc
sbb
ficoml
jo
pop
inc
cmp
shll
mov
cmp
out
inc
dec
xor
mov
inc
pop
xchg
and
aas
xor
inc
cmp
mov
popf
mov
clc
ljmp
sub
loopne
inc
aas
dec
sub
ja
pop
cmpsw
lea
adc
sbb
adc
xchg
insb
mov
out
jo
push
xor
mov
push
fimuls
loop
adcb
pop
test
repnz
and
jb
cmpl
mov
and
xor
movsl
push
mov
loop
ffreep
or
mov
enter
rolb
fists
xor
neg
ffreep
fldcw
mov
enter
mov
inc
mov
inc
nop
or
in
add
fnstsw
adc
sbb
fcmovne
shrl
adc
fcoml
and
loopne
rcr
pop
jle
push
xor
mov
inc
inc
and
push
or
adc
adc
sbb
push
cmp
data16
aad
cld
dec
stc
bound
aad
ficomps
sub
ja
jns
scas
scas
insl
mov
repz
pop
sub
add
cmp
fildl
mov
leave
insl
test
lea
mov
jle
lods
aad
add
push
ljmp
sbb
dec
jle
xchg
roll
or
std
and
adc
sbbb
jae
mov
bound
jp
jae
dec
xlat
sbb
stos
call
or
pop
pop
adc
adc
sbb
cwtl
cmpb
mov
divl
inc
xor
movsb
mov
mov
enter
mov
stc
movsb
out
or
out
xchg
add
mov
mov
sub
cmp
das
jg
sbb
push
imul
or
bound
adc
mov
mov
shr
mov
sbb
mov
std
xchg
or
lret
mov
imul
addr16
stos
pop
xchg
enter
and
outsb
pop
push
test
pusha
std
daa
sub
in
popa
pop
xchg
inc
cmovno
cmp
push
dec
in
mov
adc
clc
outsb
adc
jecxz
add
jmp
xchg
inc
in
sbbb
cmp
cs
out
pusha
lds
sub
fidivrl
mov
mov
in
loope
sbb
es
push
dec
sahf
xchg
lock
ret
jns
mov
and
insl
mov
cmp
retw
imul
aad
adc
inc
pop
dec
xor
pop
xor
pop
mov
inc
pop
pop
repz
hlt
mov
cmp
jb
push
divl
xchg
sbb
addl
inc
add
mov
das
mov
dec
xor
mov
mov
inc
xlat
xchg
filds
jg
cmpsb
push
pop
adc
dec
popa
fstpt
and
mov
ljmp
daa
adc
and
dec
sub
pop
xchg
cmc
jns
mov
imul
push
jbe
vpcmpgtw
data16
fs
mov
mov
test
mov
xchg
mov
jno
xor
aas
dec
int3
add
rol
retw
les
adc
loop
xchg
ficoml
lcall
adc
call
lods
cmp
mov
cmp
or
insl
dec
pop
sbb
imul
inc
lahf
xor
stos
test
mov
shll
mov
lea
aam
lods
jl
sbb
mov
fnsave
ja
je
mov
addr16
in
cmp
pop
or
aaa
sbb
mov
push
sub
pop
test
mov
outsl
scas
inc
push
jb
cmp
out
sub
jns
fistps
jns
or
jns
jp
push
xchg
adc
push
cmp
push
mov
xchg
shll
rcl
sarl
adc
mov
mov
pop
leave
std
in
jne
test
mov
cmp
push
add
out
pop
loope
lods
push
jle
pop
sub
jle
rcrb
ja
and
add
xlat
push
push
pop
lret
mov
xor
push
in
inc
ss
lods
fsubrs
sub
roll
jae
or
pop
push
push
fidivs
xor
arpl
pop
sbb
ret
arpl
cli
sti
int3
les
xorb
mov
lods
adc
sbb
int3
mov
mov
sbbl
repz
sub
or
adc
cs
adc
fidivrl
int
cmp
mov
cld
scas
insb
enter
ret
add
lods
xchg
or
shll
les
jne
xchg
push
sbb
push
bound
sar
fcompl
das
fcoml
push
stos
jbe
sbb
cmpsl
in
in
pop
mov
inc
clc
inc
sti
into
ljmp
js
or
inc
mov
mov
adc
mov
sahf
and
xchg
aas
into
hlt
test
xchg
push
mov
adc
aad
pop
sbb
dec
adcl
int
xchg
out
or
pop
pop
push
pop
lahf
jae
lods
fnclex
adc
xor
and
rorl
shll
addl
xor
call
jns
mov
fiaddl
inc
std
xor
push
cwtl
cmpb
add
out
push
das
and
xor
pop
out
sub
mov
mov
push
movsb
fs
jnp
dec
lahf
cmp
lods
divb
dec
jns
sbb
pop
add
mov
mov
shlb
xchg
or
xchg
adc
inc
add
adc
cmp
shlb
lcall
cmp
lcall
repnz
jl
out
outsl
in
mov
inc
mov
cmp
call
idivl
fwait
add
cmpsl
xchg
hlt
lock
mov
push
and
sbb
jb
data16
inc
jl
fld
mov
mov
out
mov
jmp
dec
mov
jbe
sub
cmp
lret
fdivrs
cmp
pop
daa
and
rolb
xchg
inc
es
sub
mov
fisttpl
sub
loop
iret
fnstcw
push
loope
mov
cmp
imul
xchg
out
mov
movsl
movsb
mov
push
mov
inc
cld
add
mov
adc
jns
pusha
mov
dec
mov
push
mov
stc
mov
cmpl
lds
xor
adc
adc
stos
adc
mov
in
push
jg
sarl
cmp
push
mov
inc
xchg
adc
ret
shrb
mov
cmp
ljmp
out
rorl
je
mov
loope
xor
mov
insb
push
xchg
xchg
das
jg
add
pop
data16
jbe
push
mov
inc
inc
sbb
pushf
jmp
bound
call
xor
insl
and
mov
push
or
flds
adc
xchg
pop
jg
and
packssdw
aam
push
repnz
and
push
aaa
daa
adc
std
push
xchg
mov
dec
es
in
out
cld
ljmp
mov
movsl
xor
int
mov
jp
adc
jno
loope
dec
test
in
xorl
pop
cs
sbb
xor
pop
lcall
xor
cmp
add
dec
xorl
push
jbe
test
icebp
int
dec
shll
add
shl
rcrb
cli
sti
xchg
pop
dec
sub
or
jns
fcmovnbe
xor
cmpl
jle
iret
push
and
mov
inc
out
insb
fsubr
push
xchg
jo
sbb
aaa
scas
add
cmpsl
and
jg
in
jo
mov
mov
add
fidivl
or
xchg
mov
imul
add
and
mov
loope
and
test
dec
sbb
pop
lods
lea
shlb
scas
adc
jbe
stos
cmpps
adc
fucom
lahf
mov
add
dec
mov
cmp
popa
jg
les
push
test
xlat
inc
xchg
nop
cmp
in
iret
rcll
testb
test
lods
adc
inc
sahf
pop
sub
cmc
jo
cs
add
sbb
jns
pop
xchg
mov
jns
aad
mov
sti
movsb
clc
out
fwait
into
or
imul
mov
xor
xlat
ret
dec
insl
cmp
mov
mov
push
inc
stc
flds
mov
leave
int
aad
popa
mov
rolb
add
enter
mov
mov
dec
arpl
sarl
sbb
in
lods
test
dec
cmp
ffree
lods
pop
lds
test
test
mov
and
mov
xchg
mov
ss
xor
push
inc
sahf
scas
mov
dec
rorb
shl
and
ds
and
pop
lods
repz
and
arpl
cmpsb
testl
stc
mov
cmpsl
call
in
xchg
add
out
out
adc
sub
mov
sub
outsl
xchg
shr
cmp
std
fisubl
iret
stos
rcrb
ucomiss
stc
dec
in
mov
and
rcr
pop
and
cmp
jno
ja
stc
incb
loopne
sub
adc
mov
mov
xchg
sbb
out
mov
push
xchg
jno
mov
jmp
lock
add
or
mov
arpl
out
and
jae
cmpsb
les
leave
clc
xchg
test
or
rclb
mov
inc
inc
push
mov
adc
ror
ror
inc
enter
inc
push
mov
cli
jnp
andl
mov
pop
test
xorb
pop
loope
and
arpl
or
push
mov
mov
popa
pop
xor
insb
xchg
jae
mov
lret
sub
cwtl
test
dec
test
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
cltd
insb
mov
test
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
cltd
insb
mov
test
cmp
or
sbb
in
or
cmp
sub
pop
lods
dec
mov
cltd
insb
mov
test
cmp
or
fcompl
in
or
int3
sub
xchg
arpl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
add
js
push
in
cmc
dec
stos
mov
mov
push
shrl
shrl
fisubl
lret
add
jno
popa
mov
inc
stos
mov
mov
push
jns
fcmovbe
cmp
sub
ret
and
adc
add
jno
popa
xchg
push
mov
xorb
in
icebp
pop
xchg
fs
insb
test
inc
fiaddl
adc
ss
mov
rorl
cmp
icebp
push
cmp
xchg
xchg
mov
jb
push
jno
popa
je
xor
mov
cmpsb
lahf
loope
xchg
nop
addr16
and
dec
mov
mov
fwait
into
push
inc
pandn
lock
push
mov
lret
push
ficompl
mov
inc
push
inc
or
mov
mov
inc
add
inc
jbe
ljmp
sbb
or
jb
xchg
cmp
aad
aad
sub
cli
and
ljmp
pop
in
popa
outsl
jmp
adc
repnz
fstl
ljmp
push
mov
mov
jae
add
sbb
push
mov
inc
jmp
int3
push
in
xor
xor
das
les
mov
mov
inc
mov
inc
out
adc
sub
ret
and
sub
push
subl
mov
fwait
and
xor
popa
mov
inc
stos
mov
mov
push
sbb
or
cmp
sub
fisubl
lret
add
jno
popa
mov
inc
stos
mov
mov
push
sbb
or
cmp
sub
fiaddl
mov
jle
mov
push
fiadds
int3
jb
scas
lock
data16
and
pop
jo
fst
cmp
popa
pop
cmp
xlat
ds
lods
scas
add
popf
inc
adc
ficompl
push
inc
out
mov
js
add
jae
cwtl
and
lcall
jb
adc
loope
mov
arpl
sub
mov
in
jns
jp
inc
mov
das
jnp
xchg
xchg
out
adc
sub
cli
inc
push
xlat
sbb
es
push
lea
dec
add
push
gs
add
lret
cmpl
out
loopne
sar
mov
in
xchg
dec
xchg
jmp
pop
rorb
mov
loopne
xor
add
les
cmpsl
mov
pop
xchg
loop
mov
lret
stc
and
addb
inc
xchg
mov
call
clc
or
add
call
or
loope
inc
push
aam
push
mov
jne
mov
inc
inc
add
cmp
bound
paddq
loopne
push
mov
iret
dec
mov
daa
pop
mov
jmp
cmp
pop
iret
and
sbb
das
sti
mov
push
test
and
shlb
ss
loop
rclb
push
push
loop
jl
mov
pop
in
and
pop
lahf
out
adc
mov
or
shlb
aam
jp
mov
pop
fsts
mov
push
shlb
sti
cmp
ret
sub
mov
mov
mov
shlb
not
fmull
xor
jmp
popa
es
mov
cmp
jp
mov
test
aam
aaa
jg
negb
jle
loop
adc
das
stc
adc
or
repz
hlt
test
aaa
jp
mov
in
push
xchg
sbb
or
and
inc
inc
sbb
scas
adc
loopne
mov
jno
repnz
rcrl
aaa
or
pop
div
push
and
out
pop
out
dec
icebp
adc
hlt
in
mov
add
rdmsr
les
fistl
add
push
pusha
inc
call
sub
and
in
inc
sub
jae
cmp
and
jge
adc
fwait
adc
rcrl
subl
xorl
push
inc
adc
and
clc
icebp
cmp
fmuls
pop
test
stos
xchg
jno
jmp
adc
add
fwait
mov
jo
jbe
pop
fildl
sahf
stos
fcoms
aaa
mov
cld
mov
cwtl
adc
xor
iret
pop
fsubrs
inc
and
ficoms
inc
out
addr16
adc
es
mov
jbe
push
out
out
or
cmc
adc
loope
pop
xor
cmp
inc
inc
stos
inc
or
or
inc
pop
jno
lret
mov
mov
int3
sbb
fwait
adc
and
std
mov
push
push
loopne
fcoms
repnz
bound
js
xchg
mov
outsl
xor
push
push
lods
jb
cmc
rcrb
pushf
jp
addr16
adc
inc
add
mov
add
sbb
mov
dec
arpl
adc
xchg
fistl
pop
fcoms
or
sti
in
in
cmp
jle
test
cmc
pushf
inc
scas
sarl
daa
cmp
inc
add
xor
sahf
js
fldenv
push
repnz
inc
loope
sub
sub
popa
add
stos
pop
and
add
cs
out
pop
scas
test
mov
push
mov
push
jge
push
test
mov
jo
int
rcrl
jp
jno
lret
jp
out
nop
mov
fucom
push
mov
cli
test
jmp
jbe
or
push
lods
sub
ds
pand
jb
out
jmp
mov
pop
shll
in
addr16
pop
dec
jl
imul
cmpsl
fbld
movsl
xchg
push
into
loope
adc
pop
ret
rclb
pop
fistpll
mov
sbb
cmpb
push
iret
jne
jmp
cmp
push
je
pop
ret
pop
ss
sbb
mov
or
in
loop
int
aaa
stos
sub
push
loope
in
clc
cmpsb
shl
push
mov
adc
xor
pop
sbb
jnp
sub
xor
adc
test
mov
cmp
loopne
jae
jnp
pop
pop
xchg
fdivr
cmp
pop
imul
adc
adc
mov
mov
pop
add
inc
popf
and
jae
cli
push
aam
xor
cmp
xchg
js
mov
out
sbb
sub
std
int3
cmp
lret
leave
popf
shrb
jmp
mov
je
int3
insl
pop
ret
in
sbb
cmpsb
fcmovbe
push
pop
mov
and
and
test
sub
dec
es
push
cltd
cmp
fcoml
and
xor
sahf
jo
dec
gs
js
nop
jg
dec
xor
dec
lret
pop
inc
aas
lock
repz
jmp
sub
mov
jmp
insb
repz
rcrl
xchg
or
cs
ss
pushf
ja
lcall
dec
pop
push
or
daa
fimull
add
clc
gs
or
add
out
pop
pop
sbb
sub
xchg
mov
jae
jl
push
popf
arpl
xlat
xchg
out
and
or
nop
inc
cmp
inc
and
mov
xchg
in
jl
out
pop
ret
pcmpeqw
mov
fstpt
adc
fprem
sbb
out
sbb
fisttpl
popa
cmpsl
xchg
push
in
pop
jg
inc
int3
or
xchg
cs
sbb
sbb
push
inc
push
push
sarb
adcb
enter
repz
add
xchg
test
mov
sbb
rol
xchg
xchg
or
movsb
js
push
push
adc
adc
hlt
outsl
add
mov
popa
mov
inc
mov
dec
rcrb
in
dec
xchg
inc
xchg
adc
xchg
les
cli
bound
fidivrl
filds
add
sbb
ds
xlat
add
jp
out
push
push
cltd
daa
mov
lcall
inc
adc
outsl
mov
stos
inc
mov
or
pushf
lcall
adc
xor
sub
les
sbb
mov
sub
les
pop
xchg
inc
fstl
lret
repnz
mov
pop
sahf
arpl
scas
dec
dec
mov
fwait
xchg
xor
jnp
pushl
mov
jnp
fcoms
or
pop
ljmp
jno
sbb
sub
nop
scas
push
or
jmp
add
sub
sti
xlat
pushl
fucomi
sbb
pop
add
push
adc
fsub
xor
es
dec
mov
in
add
push
stos
adc
fidivl
pop
xchg
xchg
inc
stos
ds
push
mov
pop
decb
jns
fmuls
imul
loope
or
fldenv
cs
mov
sub
mov
cmp
pop
pop
sbb
inc
jp
and
jnp
mov
sbb
xor
jbe
inc
xor
je
aam
std
push
mov
push
stc
and
inc
jb
cmp
mov
lods
mov
cmpsl
imul
sub
xchg
mov
pop
dec
sbb
adc
or
push
decb
mov
push
iret
sub
cmp
mov
jbe
in
xor
inc
das
mov
pop
clc
sub
mov
outsl
xor
cmpsl
mov
bound
or
sub
xchg
and
repnz
cmpsb
jmp
cmp
je
adc
dec
xorl
rclb
and
push
cltd
inc
mov
mov
xchg
dec
rorb
mov
iret
mov
jo
dec
daa
call
lret
mov
movsl
sar
xor
into
test
jns
or
xor
mov
add
fisubrl
repnz
xchg
sbb
les
shl
jne
fcomps
ret
in
adc
mov
and
imul
push
sub
or
mov
popf
and
es
popf
sahf
inc
loopne
insb
loop
or
test
dec
rcl
leave
clc
lret
rcrb
movsb
sbb
cmp
jl
mov
test
sub
cmpsl
dec
scas
das
mov
loopne
pop
and
pop
pmulhuw
lods
loop
fstpt
mov
stc
mov
jae
rcrl
dec
es
add
cli
jnp
jecxz
insl
pusha
mov
and
leave
mov
mov
fwait
inc
cwtl
xor
test
push
xchg
in
in
rcrb
and
loop
pop
icebp
adc
xchg
xor
adc
sbb
aam
dec
ret
or
inc
add
add
scas
dec
mov
lock
pop
insb
sub
out
xchg
push
ja
push
scas
adc
out
cmpb
jl
sub
push
movsl
test
aaa
adc
dec
out
in
mov
cmp
mov
in
pop
mov
sbb
shll
subb
dec
ljmp
mov
cmp
mov
dec
pop
mov
neg
sarb
sbb
rorl
mov
ss
sbb
mov
add
dec
addl
xchg
jnp
or
pop
data16
push
test
jno
lret
je
cltd
cwtl
lahf
push
test
ja
outsl
push
cmp
push
push
push
and
jne
push
andl
push
xchg
shl
push
jl
jecxz
clc
add
jnp
push
in
xchg
loope
dec
pop
inc
mov
inc
popa
sti
mov
xor
imul
test
and
dec
sbb
aam
push
jl
daa
jb
fldt
push
sub
mov
in
adc
cwtl
insb
sti
mov
cli
dec
ret
sub
jle
jl
cmpb
add
xlat
repnz
fdivrs
inc
inc
mov
xor
in
push
push
nop
stos
xchg
aas
push
jecxz
lea
xor
lret
inc
subl
xor
and
cltd
pop
pop
xchg
cmp
mov
in
jae
call
orb
inc
loopne
add
mov
sti
sahf
rorb
lea
cltd
xor
lods
push
and
mov
pop
cwtl
inc
in
mov
jnp
sbb
loopne
in
mov
dec
xchg
cmp
imul
mov
fcmovbe
sub
in
dec
aad
pop
or
jmp
call
je
jno
jmp
cltd
lods
lahf
xchg
bound
pop
mov
cmpsl
fisubrs
push
mov
jecxz
iret
in
mov
push
inc
push
bound
shll
insl
pop
mov
xor
popa
inc
inc
pusha
inc
ljmp
negb
rcll
jbe
divb
aam
loopne,pn
mov
fld
and
and
int
or
adc
inc
sub
repz
fildll
shrb
push
xchg
negb
push
or
pop
push
lods
add
mov
xchg
cmp
ja
pop
lret
mov
das
pop
out
cmpsl
ljmp
pop
sti
call
cltd
mov
add
cmp
in
mov
shrl
jmp
sub
pop
out
cmovl
adc
add
enter
push
xchg
jl
and
mov
sbb
imul
push
pop
les
sub
faddl
mov
sbb
sbb
dec
jge
pop
adc
rcrb
cmp
in
ja
inc
mov
mov
das
rorb
jle
cwtl
mov
dec
mov
xor
shll
cmp
sub
stos
and
in
adc
jns
enter
dec
cmp
insb
int
test
sti
cmpsb
or
mov
int3
jmp
adc
movsl
jbe
cli
pusha
rcrl
jbe
sahf
out
xor
and
inc
arpl
popf
repnz
mov
lea
xor
xadd
cmp
push
sbb
adc
cmpsl
pop
mov
jmp
dec
and
cmpsb
cli
pop
push
iret
repnz
pop
jl
add
aas
jp
jnp
rcrb
mov
ss
mov
fadds
lods
les
mov
aaa
stc
clc
pop
cmpsb
cmpsb
pushf
js
inc
pop
xor
mull
mov
and
pop
sub
stos
inc
enter
dec
outsl
or
cwtl
jo
mov
mov
sbb
cmp
pop
mov
xorl
cld
jp
testl
lret
aam
xchg
mov
sub
adc
xlat
inc
dec
adcb
jo
inc
cmp
dec
scas
cmp
fxch
insb
mov
hlt
aas
mov
xchg
scas
outsb
inc
je
jecxz
sbb
loopne
inc
inc
sbb
push
sbb
enter
and
mov
mov
pop
cli
sub
dec
xor
in
adc
jp
aaa
dec
loop
imulb
mov
nop
hlt
cltd
lret
push
or
sub
in
ss
outsb
fiadds
jp
xchg
out
or
lds
repz
and
and
adc
mov
sti
je
scas
xchg
in
jg
and
pop
add
add
mov
mov
xchg
pop
scas
loop
pop
xchg
out
lret
pop
pop
lds
or
leave
and
push
iret
mov
push
repz
rorb
mov
cmp
ret
pop
aaa
repz
ficoms
fs
add
insl
push
add
mov
inc
jne
inc
int
mov
mov
in
mov
in
push
sub
popa
inc
movsl
daa
aas
out
dec
inc
push
jg
lds
xchg
outsl
shl
xchg
mov
pop
sub
int
lods
out
daa
xchg
frstor
inc
dec
add
mov
cmp
jns
xor
test
shll
sub
mov
add
in
out
inc
mov
jg
jnp
adc
xchg
xor
adcb
mov
mov
fstpl
mov
outsl
gs
pusha
xchg
out
mov
jp
popa
mov
cmc
mov
lahf
pusha
add
inc
rcrb
mov
pop
cmpl
hlt
das
cmp
scas
pushf
lahf
shl
sub
data16
out
jecxz
mov
xchg
push
icebp
cmp
rcrl
add
insl
divl
in
add
mov
xor
jbe
push
mov
adc
jecxz
dec
pop
aas
gs
stc
dec
and
stc
and
mov
nop
testb
jo
jne
dec
inc
or
jecxz
ret
pop
rcrl
pusha
xchg
xchg
sti
cli
arpl
xchg
inc
xchg
mov
mov
xchg
jmp
cmp
insl
bnd
icebp
nop
aam
aaa
fisubrs
lahf
in
push
dec
mov
sbb
int3
and
jl
fisubrs
mov
cmp
pop
push
add
out
push
add
subl
mov
xlat
and
sub
aad
insl
cmp
mov
sbb
pause
cltd
movsb
xchg
orb
cld
xor
xor
sbb
inc
pop
dec
lock
push
inc
fcomi
sbb
add
jbe
push
mov
scas
shlb
decl
add
sarl
push
dec
std
mov
loop
cmp
ror
fdivrp
mov
sub
call
fcoms
cwtl
push
add
outsl
cmp
cmpsl
inc
jmp
out
mov
sbb
pop
jmp
std
and
xor
mov
hlt
mov
pop
call
pop
outsl
addb
je
call
int
outsl
lea
in
jbe
stos
fdivl
cmpsb
into
jp
push
xchg
mov
aam
cmp
add
or
cmp
lods
and
xor
xchg
dec
sbb
mull
pop
mov
movsl
sbb
les
fildl
cmpsb
scas
mov
in
insb
mov
inc
cmp
in
daa
xor
add
js
add
add
inc
mov
sbb
xchg
and
int3
sbbb
in
js
movsl
popf
int3
fimull
push
jl
ret
adc
jmp
sarl
loop
add
outsl
mov
xchg
inc
cmp
lret
fiaddl
repz
mov
fdivr
cli
inc
hlt
ret
mov
cmpsl
shr
sbb
addr16
inc
filds
enter
lcall
xchg
inc
popf
pop
or
movsb
insb
ss
lret
or
test
inc
int3
stc
jb
cmp
push
scas
gs
int
and
pusha
cld
dec
mov
cmpsl
sbb
cmp
or
fld
inc
sub
inc
xchg
outsl
and
mov
add
rorl
dec
divb
mov
pusha
scas
xor
mov
push
push
pusha
loope
enter
ficomps
sti
subl
xchg
push
mov
jg
mov
in
cli
or
push
inc
pop
adc
js
push
nop
jns
push
or
jns
aaa
cmp
fisubl
jne
ljmp
inc
push
fstl
insb
sti
sbb
fmuls
test
bound
orb
push
shrl
mov
cs
inc
mov
mov
clc
addb
mov
push
push
or
shrb
pop
lods
inc
mov
movsb
int3
pop
rclb
jl
mov
sub
add
clc
push
cmp
fwait
sub
xlat
mov
sbb
dec
popa
and
ljmp
popa
jae
rclb
les
imul
js
loope
sarb
add
and
mov
cmp
pop
push
pop
inc
mov
aas
ss
pop
push
xor
imul
or
jle
mov
or
xor
aad
jmp
jp
mov
cmc
in
repz
shl
pop
xchg
lods
mov
movsl
aas
popf
ss
mov
dec
int3
bound
add
sbb
dec
mov
sbbl
push
xlat
adc
adc
xor
outsb
pop
mov
inc
out
ss
sbb
push
pop
and
push
leave
cmc
add
lea
mov
nop
psllq
in
mov
mov
push
clc
call
ds
repnz
pop
fistpll
rcrb
rcrb
jmp
mov
test
sbb
and
pop
in
leave
cmpsb
jle
xchg
sbb
jp
fs
popa
and
stos
enter
lret
dec
jp
in
pop
test
push
je
scas
call
pop
cmp
test
pop
sbb
cmpps
or
xor
pop
movsb
mov
cmpsl
jne
lods
adc
pusha
jns
pop
mov
fistl
cs
pop
add
ret
add
pop
or
fmul
iretw
out
daa
sbb
rclb
test
repnz
xor
pusha
jl
mov
add
xchg
push
lods
push
std
pop
in
sbb
loop
in
add
mov
mov
ds
cmpb
orb
and
cld
lcall
jo
push
in
pop
fstps
in
fsubl
in
sub
mov
pop
scas
ja
inc
xor
popf
test
jae
cmp
out
mov
faddl
sahf
sub
decl
jbe
shlb
shll
sbb
xchg
imul
shrl
fwait
dec
ljmp
pop
nop
push
mov
xchg
mov
insb
fmulp
jp
jo
jmp
loop
mov
test
and
mov
adc
xchg
sub
insb
push
cmpsb
inc
bound
popf
dec
and
sarb
popa
icebp
cmc
adc
cmp
and
call
es
dec
or
mov
pop
dec
iret
clc
arpl
gs
mov
push
js
push
push
lds
xchg
outsl
ds
push
jbe
xor
or
and
movsl
cltd
fdivrs
xlat
push
or
cmp
mov
sub
jp
mov
mov
inc
ja
ss
dec
test
int3
call
xchg
into
inc
mov
test
pop
adc
sbb
dec
movsb
jnp
shrl
push
out
cmp
adc
iret
jnp
imul
dec
or
mov
jmp
cli
mov
in
fsubrs
inc
cld
sbb
xlat
and
js
jge
faddl
cmp
loope
rcll
xchg
or
pop
aas
iret
xchg
and
insb
dec
out
test
sbb
imul
add
mov
stc
sbb
pop
xor
xchg
pop
into
int3
shl
pop
outsl
mov
sbb
std
mov
aaa
lods
insb
aad
shrb
pop
xor
pushf
jl
push
xchg
xor
add
imul
lods
lods
pop
in
jl
gs
xchg
push
into
add
nop
mov
lods
mov
lods
dec
mov
std
adc
xchg
pop
jge
sbb
fxch
pusha
sub
jb
push
or
cmc
adc
xchg
push
lret
jge
jns
lea
or
push
scas
add
and
enter
inc
addr16
dec
fnstsw
out
xor
add
lods
fimull
fdivrs
push
scas
mov
test
hlt
fnstenv
dec
loop
mov
or
les
rclb
imul
adc
popa
mov
inc
stos
mov
mov
push
sbb
or
cmp
sub
fisubl
lret
add
jno
popa
mov
inc
stos
mov
mov
push
sbb
or
cmp
sub
fisubl
lret
add
jno
pusha
mov
inc
stos
mov
mov
imul
loope
sarb
shrl
fisubl
lret
add
jno
popa
mov
mov
pop
loopne
jp
sbb
sub
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ds
fisttpl
jge
insl
cmp
sbb
jecxz
sar
ret
in
mov
mov
lods
jnp
arpl
jge
insl
xor
add
fucom
int
std
ret
in
mov
lea
pop
jecxz
aad
test
sbb
sti
sub
mov
mov
shl
fidivs
cs
add
adc
data16
mov
cmpsb
sarb
mov
push
ss
jg
xor
imul
call
cmp
push
xor
sub
adc
jae
push
pop
ret
imul
cmp
mov
sub
cmp
lea
fcoml
cs
push
cmp
mov
add
out
mov
ret
jns
or
xchg
sahf
sbb
int3
xchg
mov
or
sub
shr
into
mov
push
neg
arpl
lods
insl
out
mov
xor
sbb
ss
mov
mov
push
jge
insl
xor
mov
int
std
fucomp
rcrl
out
add
or
jge
insl
pop
js
add
jns
movsb
mov
cltd
fcmovu
int
out
jmp
adc
mov
jno
inc
jg
jo
lret
xchg
mov
mov
repz
mov
jmp
ret
push
add
jbe
and
repz
int
std
ret
in
mov
mov
lods
jae
arpl
jge
insl
xor
add
sar
ret
in
mov
mov
lods
jae
cmpsl
and
jg
dec
loop
mov
outsl
mov
push
push
hlt
mov
xor
cld
pop
xor
mov
adc
pop
enter
ljmp
mov
and
repz
or
sub
aas
adcb
lods
sub
lcall
sub
clc
push
adc
adc
lcall
mov
out
push
adc
cltd
les
fwait
jmp
fwait
jl
push
jb
fisubs
out
std
lods
sti
dec
movsl
inc
cmp
pop
cmpb
mov
roll
mov
lds
jno
jp
or
gs
lods
lods
push
adc
lods
out
mov
jae
in
add
in
test
fimuls
mov
sbb
js
mov
scas
js
mov
adcl
es
loopne
dec
mov
ljmp
or
xchg
dec
pop
lods
jnp
adc
jge
jnp
cmp
sub
push
push
cmpsl
mov
xlat
cwtl
sbb
out
gs
jge
mov
sarl
cmpl
push
rclb
leave
hlt
test
xchg
aaa
adc
push
jg
das
repz
or
add
mov
div
mov
sub
arpl
xor
test
aam
adcl
jbe
pop
divb
add
xor
xchg
or
sahf
mov
je
clc
stos
jp
std
iret
xchg
das
pop
decl
mov
inc
mov
cs
pop
out
jecxz
ficoms
ss
and
mov
sub
pop
add
hlt
movsb
out
jb
dec
cmp
push
xor
sub
dec
fsubrl
flds
mov
pop
repnz
sti
mov
sub
mov
inc
cltd
xor
jne
inc
adc
icebp
mov
push
cmpsb
fmuls
xor
dec
rcll
and
int
pop
movsb
mov
loop
in
stos
sarb
add
adc
arpl
sbb
inc
rorb
sbb
fistpll
dec
in
mov
mov
mov
xor
and
or
ret
pop
adc
xchg
mov
or
rcrb
fdiv
and
add
inc
and
das
arpl
loopne
out
jmp
mov
or
arpl
jl
inc
test
sbb
loopne
loopne
pushf
mov
rcr
adc
cwtl
fnstcw
in
dec
sbb
push
fsubrl
aaa
inc
jb
dec
je
scas
mov
xorb
or
sbb
mov
cmpsl
stos
pusha
andl
push
mov
inc
jb
xor
repnz
bound
test
pushf
lahf
jmp
dec
jo
cmc
inc
mov
out
js
mov
adc
sbb
dec
insl
push
das
cmp
mov
mov
in
aad
dec
neg
jne
cmp
std
mov
fbstp
mov
stos
cmpsl
push
xchg
mov
jmp
xlat
sti
sub
xor
push
scas
mov
int
push
lret
fs
cmp
mov
xchg
std
idivl
jecxz,pn
lock
dec
mov
mov
and
pop
inc
xor
ss
mov
lret
mov
out
setl
inc
pop
js
lret
sar
lcall
mov
cmp
xchg
dec
jno
cli
bound
imulb
in
xor
insl
inc
adc
jnp
and
testl
arpl
pushl
rcr
pop
mov
xor
adcb
inc
lret
push
ret
movsl
mov
or
jo
lea
jmp
loope
add
lds
call
xchg
bnd
push
push
pusha
loope
insl
scas
mov
addr16
mov
repnz
sbb
jmp
daa
fcomps
dec
decb
jg
insl
push
inc
pusha
sti
push
rclb
push
mov
and
arpl
sbb
or
cmp
pop
mov
and
jecxz
ds
daa
jo
repnz
pop
fcmovne
fstps
int
mov
hlt
pop
mov
inc
rcr
xorl
xlat
push
popf
mov
jae
bound
cmp
js
xchg
ret
jg
mov
clc
stos
push
das
fstps
jns
xlat
lcall
pop
inc
mov
outsb
xchg
lahf
out
mov
scas
psubusb
stos
daa
arpl
scas
ja
sahf
hlt
fmuls
dec
inc
dec
inc
insb
lock
push
adc
sbb
loope
or
rorb
mov
orb
stc
mov
outsl
loope
inc
add
or
in
addl
xchg
mov
sbb
adc
inc
lahf
cmpsl
xor
sub
repz
std
and
mov
repnz
hlt
aas
jns
jae
lods
lret
sbb
imul
in
or
test
adcb
mov
popa
pushf
xor
pop
data16
dec
iret
rcr
mov
pop
push
push
fldt
out
fsubrl
daa
fxch
xor
jo
ror
mov
outsb
inc
mov
aam
hlt
mov
je
mov
popa
pop
sbb
push
push
inc
fidivrl
loopne
scas
mov
pop
adc
shrb
or
cmp
push
adc
jge
push
mov
dec
or
sbb
sbb
add
lret
xchg
inc
mov
outsb
out
xchg
loopne
mov
inc
bound
shlb
cmp
std
lock
mov
mov
sbb
cmp
in
dec
cld
ret
cmp
pop
rcrb
enter
dec
loope
je
shlb
addr16
xchg
imul
test
mov
mov
and
and
push
test
and
pop
xchg
push
sti
or
pop
push
aad
add
daa
ljmp
iret
data16
push
inc
cmpsb
lahf
outsl
scas
push
stc
popf
movsb
xor
mov
inc
pcmpgtw
rcrb
icebp
jnp
daa
mov
add
outsl
iret
out
out
sbb
sti
sbb
mov
loope
lret
dec
in
frstor
mov
fidivrl
sbb
mov
cmp
ficompl
mov
fwait
jnp
imul
mov
push
call
cmp
mov
pop
mov
jno
cmp
icebp
mov
cmp
jae
imul
mov
out
gs
in
sbb
test
mov
ds
mov
jbe
inc
xchg
push
loope
out
lcall
push
and
cmp
fnstcw
and
mov
mov
ja
and
filds
or
and
pop
push
jg
mov
mov
push
leave
pop
js
xor
xchg
jl
xchg
mov
cmpsl
sbb
lods
test
outsl
dec
adc
sbb
adc
mov
punpckhdq
subb
fnstenv
push
jle
or
mov
mov
test
mov
sub
lret
fsub
and
jecxz
outsb
cmp
xchg
mov
inc
lcall
sub
fwait
outsl
add
in
pop
or
adc
movsb
mov
out
adc
dec
sbb
ds
or
and
sarl
cmc
cmc
push
dec
mov
idivb
clc
and
mov
js
pop
or
div
loopne
push
sub
icebp
std
bound
lods
ljmp
push
out
adc
std
popa
outsb
add
pop
cmpsb
int3
xor
sub
push
mov
add
add
loopne
das
stos
shrb
dec
or
scas
push
mov
fildl
ret
pop
dec
lahf
xchg
aam
aas
jne
test
xchg
adc
nop
mov
popa
cmp
outsl
and
fdivrl
enter
loope
fwait
int
ljmp
add
sbb
std
jecxz
bnd
sbb
pop
xor
es
mov
je
pop
or
mov
inc
in
cmp
loop
daa
fcmovb
inc
fsub
push
rol
out
xor
jge
jl
es
and
cmp
sbb
rcrl
or
and
into
pop
xchg
cmp
mov
out
and
xchg
inc
inc
cwtl
test
call
ds
pop
cld
cmpb
jno
lcall
xchg
jno
push
aad
ljmp
jp
xchg
sbb
or
ret
call
cmpsb
adc
ljmp
pop
sbb
push
nop
fistps
rolb
inc
push
std
or
cwtl
ds
and
mov
imul
mov
sub
mov
pop
daa
jge
push
add
push
push
cmc
adc
cmp
adc
mov
adcl
pop
inc
ljmp
ss
sbb
adc
popa
push
mov
icebp
test
popf
test
int
inc
mov
sbb
mov
cmpsl
xor
loopne
sub
stos
fwait
dec
sub
fndisi(8087
sub
dec
movb
add
mov
popf
and
adc
out
jb
dec
fsubl
outsl
mov
aaa
data16
lock
or
lods
jns
fwait
push
pop
push
mov
ret
add
ret
movsb
adcl
pop
mov
nop
mov
imul
gs
mov
std
lret
fldt
push
out
lret
mov
xor
loop
mov
addl
in
mov
inc
mov
pop
add
test
pop
gs
dec
pushf
sbb
dec
jge
pop
jmp
sbb
addr16
fstps
sub
scas
mov
sbb
xor
add
out
stc
je
cmpsl
mov
lock
fistpl
jmp
lcall
mov
pop
adc
xchg
jne
adc
int
lcall
loope
in
pop
jbe
rorl
lcall
fadds
leave
dec
xchg
movsl
arpl
pop
pop
pop
repz
outsb
adc
sti
iret
in
dec
enter
test
inc
test
inc
mov
push
add
out
cmp
std
call
jmp
pop
scas
mov
daa
ljmp
inc
les
lcall
dec
lret
andl
adc
test
sub
lds
mov
xor
lret
pop
mov
loopne
sbb
sti
imul
add
sub
xor
jge
ljmp
and
movsb
mov
mov
aam
sub
fwait
aad
mov
pop
or
push
and
xlat
cmp
add
dec
pop
js
jle
loopne
mov
out
movsl
jno
jnp
lods
in
in
fidivs
ficoml
mov
rorl
fists
jne
dec
add
cmpsb
imul
add
mov
mov
cli
fnstenv
push
rol
aad
cmc
cmp
add
ret
lods
movsb
lods
sti
int
push
cmp
adc
pop
dec
leave
arpl
rol
mov
cwtl
pop
xchg
pop
cmp
lea
aad
insl
jno
push
pop
and
or
pop
dec
faddl
lods
jbe
les
push
outsb
or
dec
mov
cmpsb
and
fstpl
inc
jg
dec
dec
pop
dec
dec
pop
mov
mov
lds
popl
inc
dec
loopne
insb
add
inc
std
add
in
or
rcl
sahf
loope
sti
ffree
cltd
xchg
or
mov
std
cs
scas
stos
inc
test
xor
int
orl
in
mov
sbb
out
arpl
add
sarl
add
sub
sbb
stos
pop
cmp
in
pcmpeqb
test
aad
sbb
mov
fcmovu
jle
ret
movsb
scas
andl
inc
sub
sbb
or
mov
and
mov
sbb
xor
mov
in
test
rcl
jnp
hlt
mov
movsb
orb
mov
push
mov
push
jmp
data16
int3
shl
pop
add
insb
divb
mov
ss
aaa
cmp
adc
sbb
hlt
add
or
mov
inc
clc
or
cmpsl
jl
mov
pop
push
in
pop
adc
xchg
pop
xor
ja
testl
or
xor
leave
aas
dec
jp
negl
loop
cmp
xchg
lcall
inc
ror
cmp
stos
inc
mov
pop
push
clc
pop
outsb
adc
cld
mov
push
xchg
push
lret
shll
stc
loope
jecxz
push
adc
cmp
movsl
shl
lock
mov
push
jbe
jecxz
sbb
mov
stc
and
stos
mov
pushf
in
lret
mov
pop
pop
loop
in
insb
jle
pusha
cmpsb
rcll
mov
sti
push
dec
push
inc
cmp
ret
in
dec
xchg
sti
shrl
add
jbe
adc
xor
adc
sbb
cmp
call
cwtl
dec
mov
fdivrs
rclb
gs
inc
shll
add
pop
jp
in
cmp
test
movsl
dec
gs
js
fimuls
ja
xchg
mov
insb
std
fimull
std
jg
xchg
or
stos
mov
inc
pushf
xchg
nop
hlt
add
or
fs
stc
pusha
outsb
cs
rol
pop
fwait
movsb
mov
cltd
out
xchg
fwait
adc
ficoms
and
adc
jle
add
sub
pop
scas
sbb
or
les
inc
sub
mov
lea
in
cs
mov
fstl
mov
or
xor
movsl
xchg
push
call
movsb
xchg
mov
jp
xor
xor
pop
or
andl
in
mov
mov
mov
add
mov
jmp
scas
notl
and
or
call
pop
std
es
sarb
rolb
pop
mov
push
lret
xchg
loopne
inc
out
lods
push
icebp
lret
inc
pusha
cmp
insl
mov
pop
push
or
or
inc
jb
loop
sub
sub
inc
outsb
rclb
in
sbb
dec
ret
xor
mov
push
dec
aaa
mov
cli
jae
bnd
movsb
xchg
imul
int3
fwait
sar
sub
popa
sub
bound
push
xchg
add
mov
fdivs
daa
dec
hlt
ficoml
dec
out
in
push
push
cli
addr16
ret
ficoms
dec
xor
jg
lcall
sahf
mov
dec
xchg
imul
push
push
iret
int
push
adc
inc
lods
adc
mov
cld
xor
dec
jo
xchg
popa
xor
jnp
mov
sub
pop
cmp
arpl
popa
inc
aaa
push
push
cs
add
jecxz
test
aad
push
jb
movsb
fiadds
inc
in
push
xchg
jno
test
iret
pop
aas
or
lcall
cltd
enter
daa
mov
fimuls
adc
addb
dec
fwait
inc
adc
pop
js
dec
pop
in
adc
mov
ss
sarl
pop
in
scas
add
inc
push
fdivrs
add
fsubl
dec
fmuls
enter
pushf
lods
das
loope
adc
xor
lret
testb
dec
dec
mov
lahf
aaa
jmp
inc
mov
data16
sbb
adc
cmpsb
movsl
hlt
in
into
mov
or
inc
out
shlb
ret
and
mov
jnp
push
cmpsb
sbb
sub
popf
insl
das
jmp
mov
dec
mov
xor
cmp
repnz
out
pop
mov
rcrb
pushf
fisttpll
rorb
shlb
cmp
mov
les
ljmp
lret
and
and
add
jno
pusha
insl
das
jge
cli
jecxz
mov
mov
cmpsl
pop
fs
xchg
cmp
jb
loopne
jmp
jmp
aas
sbb
ljmp
ljmp
ss
pusha
dec
in
popa
inc
roll
int3
xchg
push
jge
push
adc
gs
sarl
out
sbb
das
pop
gs
inc
cli
clc
clc
inc
push
mov
nop
cld
push
jmp
adc
mov
lds
sti
sbb
adc
std
insb
sbb
movsb
fmuls
or
cmp
loope
and
jae
adc
pusha
and
pop
or
les
cmpsb
ss
sub
jg
sbb
jle
mov
jae
lret
loope
test
gs
arpl
xchg
fstpl
dec
pop
push
mov
test
dec
inc
pop
jnp
call
imul
add
mov
add
loope
jno
adc
repnz
iret
jne
sub
jle
aam
add
push
jnp
and
xor
inc
xchg
mov
mov
mov
popf
mov
ficoml
push
inc
mov
ss
add
popa
xlat
or
mov
stc
in
popf
pop
mov
int3
ret
mov
bound
es
lods
das
cli
push
and
outsb
add
adcl
ss
push
xchg
ss
testb
out
add
pop
int3
iret
loop
lret
sub
cmpsl
jnp
inc
lods
adcl
dec
jl
dec
push
jmp
dec
clc
jg
mov
pusha
mov
test
lret
into
stos
fnstenv
push
sbb
inc
ret
push
jp
cmp
adc
jecxz
jnp
lret
lgs
mov
je,pt
push
mov
es
xor
inc
jno
rol
test
sub
bound
xchg
sub
jg
shll
push
mov
lea
or
les
lock
pop
adc
sbb
pop
pop
and
lea
popa
mov
lcall
daa
out
add
or
dec
add
pop
fs
stos
scas
sbb
mov
ret
inc
cmpsl
pop
add
adc
inc
int
xchg
mov
adc
push
xor
fwait
xor
lods
lret
arpl
inc
inc
mov
jno
cltd
ret
xchg
jle
sub
hlt
jmp
aad
out
mov
out
les
xor
fs
sbb
pop
jge
jmp
cmpsl
pop
add
iret
mov
and
xchg
das
xchg
or
fcomps
xchg
sbb
ss
adc
fst
pop
mov
pushf
xchg
rolb
dec
xchg
leave
in
pop
pushf
hlt
sarb
fldcw
mov
pop
push
je
in
cwtl
or
adc
lock
adcw
xor
inc
ja
repz
insl
rorl
or
cmp
xlat
fldt
out
mov
xchg
enter
xor
add
or
dec
imul
cmp
inc
xor
mov
pop
sub
push
dec
inc
sbb
les
shlb
mov
push
pop
sbb
xor
imul
call
das
repz
and
lock
push
mov
mov
push
aas
sbb
cmp
xor
daa
push
mov
lret
add
adc
adc
ja
cmpsl
mov
cmp
adc
jl
addb
jmp
js
sub
pop
in
outsb
orb
test
sbb
imul
loopne
ds
fsubr
sahf
xchg
ret
cmp
xor
sbb
lcall
das
insb
rolb
sbbb
mov
dec
ffreep
dec
dec
out
arpl
mov
mov
sub
movsl
cmp
inc
cmc
add
push
mov
std
sbb
imul
int
in
sahf
sub
inc
cmp
pop
stos
xchg
lods
test
icebp
sbb
jle
stc
scas
xchg
ljmp
pop
pop
mov
lock
adc
nop
pop
fcoml
pop
adc
xchg
scas
cmc
das
into
cltd
jo
jge
lods
lock
out
mov
or
das
gs
dec
fwait
pop
nop
lock
mov
gs
mov
js
push
outsl
inc
out
pop
push
enter
jbe
clc
test
enter
adc
cmp
sbb
or
jno
lret
push
out
popa
jnp
dec
xlat
sbb
fnstcw
push
fwait
in
jl
std
inc
add
jp
and
adc
xor
xchg
out
sbb
cld
dec
lock
rol
mov
jmp
sarl
pop
nop
and
jnp
je
push
adc
add
mov
mov
or
inc
fwait
and
cs
mov
popf
mov
popf
jae
lcall
das
xchg
test
loope
out
loope
xor
lahf
pop
sbb
mov
pop
push
fiaddl
sbb
icebp
pop
push
inc
call
sub
ret
sbb
lods
insl
icebp
xchg
sbb
push
lock
pop
in
add
ficoml
test
inc
test
push
xchg
mov
lods
movsb
lret
scas
push
inc
ja
sub
jl
sbb
mov
and
ljmp
adc
or
sahf
xchg
mov
aad
add
stos
cmp
or
dec
sub
jmp
xchg
repz
aas
cmpl
in
repz
repz
lods
dec
push
gs
jbe
cmp
insl
xor
add
sar
ret
in
mov
mov
lods
jae
arpl
jge
insl
xor
add
sar
ret
in
mov
mov
lods
jae
pusha
dec
inc
jge
insl
xor
add
in
mov
mov
lods
imul
fstpt
insl
xor
subl
std
ret
lcall
jl
xchg
bound
sub
xlat
mov
out
aaa
cmp
inc
dec
ja
ja
repz
xchg
xlat
ffree
inc
idiv
out
pop
sbb
daa
sub
ja
insl
das
pcmpeqw
leave
loope
icebp
jmp
ret
pop
bound
cmp
xor
insl
stc
popf
lret
jecxz
enter
ljmp
push
push
xor
push
mov
arpl
jnp
jnp
aaa
out
adc
faddl
jp
push
loope
jae
mov
fstpt
ja
cwtl
loopne
pushf
ret
cmpsl
mov
push
mov
inc
nop
pop
mov
mov
mov
mov
pop
out
popf
push
lods
dec
adc
or
out
push
loop
pop
mov
test
inc
mov
xchg
addr16
out
cmp
sub
dec
mov
in
aaa
dec
test
adc
inc
dec
insb
imul
lods
pop
xchg
sub
rclb
and
add
ret
ficompl
ja
fs
mov
cmpsl
cmpsl
xor
mov
insl
rcrl
pop
gs
jno
mov
jge
add
iret
cmc
ret
filds
adcl
push
dec
inc
inc
and
cmp
or
fsub
int3
vshufps
xchg
mov
jo
push
pop
aaa
pop
pop
dec
cs
es
sti
lret
jmp
in
hlt
into
test
out
pop
sbb
daa
sub
ja
insl
xchg
popf
xchg
xlat
ffree
int
std
out
pop
sbb
daa
sub
ja
insl
xchg
popf
and
push
sbbl
mov
hlt
gs
pop
or
lret
pop
scas
jmp
sbb
pop
fstl
imul
enter
lret
adcl
rorb
cmp
testl
jmp
xor
sub
rcrl
and
push
and
jecxz
jae
or
divb
xchg
sub
adc
dec
pop
mov
aas
push
pop
clc
and
xorl
or
fdivr
frstor
adc
jp
es
or
inc
scas
jecxz
adc
xor
or
loop
aas
cmp
mov
repnz
push
add
imul
clc
cmp
mov
adc
adc
test
pop
xchg
aad
call
lahf
pop
ljmp
fdivrs
pop
sbb
jg
test
cmp
adc
hlt
sub
xor
in
and
sbb
movsb
shrb
mov
stos
push
pop
out
mov
aas
pop
jo
stos
dec
pop
insl
das
inc
pop
lahf
xor
add
push
test
add
mov
mov
inc
fistps
pop
push
loopne
loope
fildl
cmp
fiaddl
and
fisttps
cli
mov
aam
lds
hlt
add
push
gs
repnz
cmpsl
out
dec
daa
sbb
push
sti
lock
repz
pusha
cmp
loop
clc
mov
mov
or
jle
jl
lcall
ret
pushl
jg
add
and
mov
dec
ds
xchg
loope
adc
mov
or
sub
xchg
call
testb
inc
push
xor
repz
lcall
cmp
fistpll
std
int3
mov
pop
stc
lea
mov
sbb
les
cmp
jns
pushl
sub
push
xor
dec
mov
insb
jae
std
adc
in
fmuls
mov
notb
cmc
push
das
mov
sahf
popa
aas
and
pop
push
jle
xor
xchg
cli
mov
mov
ds
inc
ljmp
adc
push
pop
aad
mov
ss
stc
jb
cmc
pop
jo
test
gs
pop
lret
stos
test
xor
iret
scas
sub
xchg
xchg
outsl
xor
in
or
in
sub
mov
pop
test
shrl
dec
push
mov
mov
xor
jmp
out
repnz
rorb
aaa
inc
mov
push
mov
cmp
add
push
sub
lea
shrl
arpl
call
sbb
fisubs
es
daa
jle
fiadds
test
sti
in
lea
fwait
jno
sub
mov
push
fucompp
test
or
lahf
pop
mov
add
push
enter
adc
outsb
sub
xchg
dec
dec
movsb
push
or
dec
fdiv
mov
xchg
jnp
dec
jbe
sub
int
icebp
add
adc
adc
fsubrl
movsb
push
mov
pop
dec
pop
rclb
lahf
inc
add
ljmp
stos
movsb
dec
mov
jo
jl
push
das
ja
pop
sarl
bound
or
out
sahf
lret
icebp
mov
or
cwtl
sbb
rclb
and
sar
mov
mov
or
mov
je
out
fisttps
test
lret
push
adc
jp
pop
fsubs
xor
pop
mov
pushf
jmp
xchg
xlat
xacquire
fs
jmp
std
inc
in
sahf
daa
sub
lea
aad
jo
jns
mov
jecxz
and
sbb
push
pop
xchg
mov
inc
insl
lahf
mov
xor
jb
pop
popf
or
das
add
and
and
mov
inc
xor
test
jbe
cmp
xchg
hlt
in
sarb
mov
and
pop
cs
gs
and
or
xchg
shlb
loop
or
lret
lret
dec
cmp
les
lcall
lods
ja
xchg
xchg
xchg
pushf
outsl
pop
sub
fmul
and
gs
inc
leave
xor
aaa
fldenv
xor
jmp
push
aas
or
lahf
mov
xchg
mov
jns
pop
ja
cwtl
jo
or
daa
inc
or
sub
in
add
das
pusha
test
daa
mov
or
scas
xor
xchg
pop
in
ljmp
inc
imulb
stc
add
in
mov
mov
xchg
cmpsl
inc
jnp
and
aaa
jne
cmp
or
nop
adc
jae
and
dec
xchg
out
les
dec
mov
scas
pop
imul
push
adc
stos
popa
xchg
push
add
mov
cmpsl
imul
aas
jge
inc
cmp
push
sbb
ljmp
mov
notl
and
mov
sbb
ds
cli
adc
adc
jns
mov
ret
leave
add
sbb
cmpsb
ss
decb
cmp
mov
repnz
daa
sbbb
cld
es
sub
mov
cmpsl
add
pop
mov
cwtl
sbb
adc
sub
dec
add
xchg
mov
daa
mov
xor
int
add
cltd
jecxz
rorb
movsl
lahf
ds
or
and
shl
jb
and
jle
and
addb
rorb
adc
dec
lahf
mov
shr
mov
push
mov
aad
shrl
insl
dec
sub
outsb
testb
jge
add
mov
loope
xchg
ds
sbb
outsl
repnz
mov
mov
jb
stos
push
insb
sahf
fadd
jnp
insb
xor
popf
sarl
dec
push
push
insb
jo
pop
fisubrl
stc
imul
adc
shlb
jnp
leave
out
push
mov
cltd
sub
push
clc
shll
stos
repz
fldl
push
cmc
addr16
mov
movsb
and
adc
mov
enter
imul
and
mov
mov
int
das
loop
dec
pushf
fwait
ret
testl
sbb
pop
shrb
outsl
pop
push
mov
push
mov
insb
repz
aaa
stos
aam
jl
add
test
push
and
push
push
mov
xor
cwtl
xchg
sub
outsb
dec
lock
add
rorl
mov
andl
rorb
adc
js
inc
lahf
mov
pusha
out
add
pop
push
shll
std
inc
push
push
inc
sbb
insl
repz
addl
lods
idivl
jecxz
fs
mov
push
out
mov
xchg
test
cmp
iret
cmp
in
bound
mov
fisttps
xor
mov
xchg
inc
loope
cmpsb
bound
push
add
mov
js
sbb
ret
ficoms
push
sub
dec
mov
je
jbe
jno
push
data16
mov
push
mov
adc
push
sub
clc
fwait
jne
fstpl
test
test
stos
xor
adc
mov
mov
cmp
mov
cmp
stos
inc
sbb
ljmp
mov
in
push
or
add
lods
out
mov
lock
or
add
mov
jnp
mov
mov
mov
setl
gs
paddsb
mov
jmp
jo
in
int
sti
movsl
cmp
int
out
dec
jo
movsl
sbb
into
mov
xchg
cmpsb
or
inc
xchg
in
test
sbb
jl
sahf
mov
test
lods
mov
jle
fdivrl
leave
push
addl
push
pop
xchg
sub
mov
pop
mov
cs
in
cli
mov
loopne
mov
lods
xchg
or
shrb
mov
and
in
stos
popf
out
and
sbb
xchg
imul
or
cmp
adc
adc
fs
lods
sub
test
ret
sti
cmp
bound
out
sbb
cld
push
enter
data16
cmpsb
inc
pop
mov
clc
jg
cmc
imul
mov
xor
int3
push
repnz
fisubrs
addl
push
enter
lahf
inc
or
pop
xor
push
leave
jbe
mov
push
push
nop
fcmovu
int3
in
lods
push
cmp
lods
mov
loop
inc
mov
lret
cli
das
mov
jp
sbb
cmpsb
lods
inc
push
jne
push
stos
sub
pushl
mov
js
int
lahf
xor
or
in
mov
sahf
lcall
fwait
sahf
jecxz
push
int3
das
imul
pop
push
jae
inc
mov
sub
cmp
sbb
neg
and
add
leave
mov
xor
stos
push
pop
scas
xchg
mov
imul
xor
rorl
mov
sti
andb
xchg
xchg
sbb
jle
adc
sti
in
cmp
xchg
fcoml
inc
mov
or
push
xor
in
add
dec
mov
roll
lret
sub
shrb
jp
arpl
std
jns
lods
pop
and
xchg
aad
outsb
inc
add
or
or
xor
inc
mov
test
jl
jnp
ds
jae
xchg
inc
fbld
add
xchg
mov
dec
cmp
test
mov
testl
cwtl
inc
and
daa
push
test
xchg
inc
push
cmpsb
dec
inc
jmp
cmp
movsb
push
add
insb
repz
xchg
adc
push
jb
pop
lock
xor
xlat
cld
mov
fwait
mov
fdivrp
mov
cmp
push
add
lret
lcall
cmpsl
lcall
cmp
cmp
mov
jbe
dec
pop
add
or
mov
loope
out
sbb
mov
ret
or
in
testb
xor
das
cmpsb
inc
or
push
xchg
fcomps
mov
aas
push
mov
in
ret
add
adc
add
jo
push
xchg
push
call
lretw
pushf
cld
pushf
pop
addr16
fstpl
pop
mov
mov
shl
jb
adc
pusha
xor
xchg
data16
cwtl
fdivrl
cmp
iret
mov
pop
and
or
add
bswap
cmpsl
jnp
in
or
mov
ret
cld
arpl
or
dec
sbb
mov
mov
or
icebp
mull
inc
pop
aaa
popa
sub
loope
mov
push
sbb
adc
push
pop
jecxz
pop
fsts
jae
dec
mulb
pop
sbb
mov
pop
fdivl
in
mov
xchg
call
sbb
in
pop
inc
cli
loop
mov
dec
dec
movsl
imul
inc
outsl
cli
shrl
sub
jae
push
dec
dec
and
lds
push
add
cli
jle
and
jmp
ffree
inc
adc
cmp
pop
rcrb
shlb
mov
addb
movsl
adc
call
daa
aad
iret
in
jnp
test
push
add
outsl
stos
icebp
rcl
xor
cltd
add
sub
shll
mov
and
inc
out
test
adc
push
jg
cmp
repz
cmpsl
add
rorl
in
lods
mov
xor
push
cli
or
jne
and
jl
dec
sbb
cmp
stc
pop
ror
mov
fidivrl
sub
xchg
ja
xor
lods
mov
fs
dec
adc
int
cwtl
aam
push
inc
jge
arpl
xor
ret
cmp
lcall
mov
cmp
jns
dec
sub
mov
bound
adc
addr16
inc
pushf
shlb
rclb
cld
push
ret
movsl
es
mov
lods
out
das
xor
mov
or
sub
mov
add
cltd
fdivp
repnz
test
pop
fs
xor
cli
push
js
inc
movsb
jb
mov
addl
imul
adc
cmp
xor
mov
xchg
iret
push
je
notl
mov
adc
lret
add
cmp
jnp
pop
mov
add
subl
xchg
inc
add
vfnmsub132pd
popf
lods
lahf
mov
pop
adc
xchg
mov
scas
iret
jne
push
pusha
aam
push
jno
sub
and
dec
sbbb
adc
imul
mov
fs
push
mov
test
and
aas
or
and
sbb
test
mov
in
roll
push
mov
mov
scas
leave
dec
gs
push
pop
mov
jmp
imulb
mov
dec
xchg
jmp
jnp
adc
or
pusha
mov
sbb
addb
orb
ret
push
stos
xor
jbe
in
push
pop
and
xor
push
clc
data16
cmp
mov
movsb
sub
jbe
jno
mov
jl
push
push
out
cmpsl
jge
or
sub
pop
mov
mov
and
sub
mov
cltd
lahf
jbe
adc
pop
xor
call
cli
imul
or
daa
in
cmp
lea
stos
fdivrl
outsl
and
es
or
xor
arpl
pop
out
jo
in
or
mov
nop
jb
test
push
pop
pop
std
pop
dec
out
aam
js
stc
in
adc
push
ja
int3
dec
push
mov
out
jge
sbbb
dec
mov
jmp
aas
lahf
mov
adc
jno
cmc
mov
enter
cli
pop
in
inc
pop
sbb
push
jbe
lret
insb
sub
jb
and
xchg
sbb
add
imul
xor
mov
sub
imul
inc
fcom
mov
jmp
mov
or
inc
mov
push
fistps
xchg
test
dec
adc
push
sbb
fs
lods
sub
rclb
out
repz
movb
addb
mov
scas
cmp
jae
push
push
cmpsb
mov
ljmp
addb
clc
insl
xchg
mov
inc
test
pop
jg
outsl
xor
mov
clc
push
or
loopne
jns
movsl
xchg
pop
and
inc
mov
icebp
xchg
jg
sarl
fsubl
or
sbb
sbb
cmp
inc
ds
mov
lods
icebp
mov
xlat
xchg
lods
jno
stos
inc
xchg
ja
push
aad
std
clc
enter
fwait
jb
mov
out
jl
and
imul
rcll
xchg
xchg
sub
xor
imul
testb
in
or
mov
and
hlt
and
sbb
push
insb
iret
ret
sti
rclb
jns
sti
andl
out
inc
adcl
cmp
gs
aaa
adc
dec
inc
popa
lret
insb
add
or
push
push
test
xor
push
inc
dec
test
push
mov
dec
pop
and
adc
das
push
xchg
sbb
les
iret
sarl
insl
adc
inc
mov
push
addr16
mov
sub
cmp
push
jb
pop
fldenv
jl
mov
sbb
xlat
ss
lods
pop
mov
mov
cmc
adc
lret
fcmovb
bsr
in
mov
repz
jno
ljmp
bound
popa
aam
fdivs
shl
adc
xor
les
inc
je
cld
iret
movsl
fwait
rorl
cltd
pop
mov
insl
mov
imul
aam
and
das
dec
adc
sbb
cmc
jmp
or
sbb
sub
popa
jne
aas
xlat
cmp
lahf
lea
and
dec
mov
push
push
inc
push
idivb
jg
pop
jp
cltd
fwait
adc
jb
push
js
sbb
cmp
cmp
adc
repnz
mov
mov
cli
dec
dec
dec
cmp
loopne
lcall
or
mov
pop
xchg
ja
mov
jge
sti
push
cmp
xchg
pop
std
lock
loopne
push
mov
sbb
push
pushf
jp
insl
sbb
pop
loope
aas
das
stos
enter
inc
inc
mov
mov
out
xchg
repz
sub
in
xor
sub
aad
fsts
dec
mov
cmpsb
jmp
xchg
mov
stc
dec
imul
stc
ss
push
repnz
sub
mov
ret
lea
mov
je
icebp
in
sahf
in
cld
pop
xchg
sbb
repz
inc
es
ljmp
or
shlb
ljmp
into
in
pop
mov
push
jecxz
mov
dec
adc
adc
mov
pop
aam
out
adc
add
jge
int3
pop
push
xor
aaa
ds
jp
ret
mov
xchg
add
cmc
out
insl
mov
mov
sbb
insb
clc
fildll
add
sahf
cli
cmp
cmp
lahf
jnp
mov
pop
lea
enter
and
ret
and
fldt
push
xor
test
test
inc
les
xlat
cmovs
inc
dec
dec
scas
push
mov
xchg
lret
push
inc
scas
outsl
nop
retw
ja
xchg
pop
or
mov
sbb
ja
leave
popf
dec
mov
mov
adc
jmp
xchg
add
mov
movsl
xor
xor
mov
pop
stos
push
pop
push
sub
sbb
push
xchg
adc
jmp
sarb
mov
imul
imul
mov
sub
jp
lds
and
mov
mov
setne
sbb
ret
xchg
sbb
sub
xchg
stos
xchg
flds
mov
imul
jecxz
push
outsb
jle
pop
sti
dec
das
test
jbe
pop
mov
scas
ljmp
sahf
xchg
inc
mov
into
lock
clc
leave
out
adc
add
dec
fadds
bound
sbb
push
loopne
outsb
out
cs
ss
daa
cmp
aaa
mov
sub
mov
les
mov
push
inc
dec
lretw
xor
adc
lds
xor
je
cwtl
pop
and
popf
adc
adc
into
cmp
push
lock
jle
fbld
test
aaa
stc
push
adc
pushf
mov
xor
push
aam
idivl
or
or
fisubrs
lret
out
pop
cmpsb
jmp
repnz
jecxz
pcmpeqw
push
aam
pop
sub
data16
xlat
mov
lock
testl
mov
cmpsb
and
shlb
xchg
jl
adc
jb
or
or
cs
scas
or
or
popa
jae
jne
outsb
orb
mov
lea
movsb
dec
sbb
fmuls
ds
mov
pop
dec
call
or
sub
iret
adc
lds
ret
and
xor
cmp
xor
add
pop
inc
cmp
lock
sar
ja
scas
xchg
pop
xor
lea
int
cmp
lods
or
lods
cmpsb
jno
ja
daa
arpl
outsl
add
xor
daa
sub
fildl
cmp
ficompl
addr16
imul
dec
sahf
shr
dec
out
adc
aas
loope
insb
cmpb
xlat
xor
and
xchg
shlb
cmp
mov
mov
xchg
push
lcall
rorl
daa
cmp
hlt
or
mov
repz
or
mov
dec
leave
imul
in
enter
pop
cltd
mov
xchg
mov
sbb
lods
popf
push
or
scas
rolb
sbb
int
mov
int
add
xor
jp
outsl
jmp
xor
std
mov
adc
pushf
mov
cmpb
jg
sahf
adcl
sbb
dec
sahf
jne
sti
lahf
xchg
cmpsb
push
and
outsl
or
or
lock
addr16
dec
cmp
push
or
push
and
lret
mov
xor
adc
fmull
loopne
fsubs
xor
xor
adc
pop
loop
mov
lret
dec
mov
mov
dec
xchg
dec
cmp
mov
mov
jmp
jo
int
add
in
inc
fdiv
cwtl
dec
sbb
xor
adc
int
aaa
lods
aad
mov
pop
jmp
outsl
jp
adc
mov
jmp
insl
and
psllw
cwtl
testb
adc
std
fisubrl
sbb
inc
pop
adc
push
jnp
inc
inc
mov
std
imul
jnp
and
add
and
and
dec
popf
dec
mov
movsb
dec
and
xlat
cmp
pop
jae
cmc
inc
inc
push
ret
fcmove
fiaddl
cmpb
lock
aad
jb
test
lcall
mov
push
or
push
test
lret
out
push
es
cmp
pop
jmp
pop
push
mov
mov
adcl
fs
add
std
sub
scas
int3
xchg
test
test
pop
rolb
neg
fldcw
mov
cltd
aad
fcompl
sbbb
lock
int
std
out
pop
sbb
daa
sub
ja
insl
xchg
popf
xchg
xlat
ffree
int
std
out
pop
sbb
daa
sub
ja
insl
xchg
popf
mov
xlat
lds
gs
daa
in
pop
lds
or
push
pop
push
dec
ja
insl
sbbl
lods
xlat
fst
int
jge
in
pop
loop
cmpsl
popf
cmp
iret
mov
sbbb
dec
ds
cs
dec
and
adc
sahf
stc
mov
mov
mov
out
push
ds
sub
dec
or
outsb
call
mov
mov
out
push
ds
sub
dec
or
outsb
call
into
fsubrs
std
fwait
imul
aaa
push
sbb
dec
pop
xor
loope
mov
add
lea
mov
std
push
fnstenv
daa
and
repz
adc
cmpsl
rcl
cmpsb
cmp
adc
mov
mov
adc
or
dec
leave
sub
lds
pop
lods
jo
mov
vpaddsw
cwtl
out
push
aas
pop
cmp
pop
sub
ds
jge
ss
mov
push
clc
sahf
or
lods
iret
xchg
sbbl
jno
cmp
add
scas
dec
inc
movsl
popf
sti
push
inc
mov
lcall
testb
lret
mov
jmp
popa
or
clc
and
out
movsb
push
js
dec
ds
sub
dec
or
outsb
call
mov
mov
test
jae
frstor
js
push
insb
sbb
push
call
shlb
mov
jl
mov
ds
sub
jge
jo
dec
outsb
fldt
ret
mov
or
dec
xor
xor
dec
or
outsb
call
mov
mov
out
push
ds
sub
dec
or
outsb
call
mov
mov
out
push
int3
ja
fwait
cmp
sub
adc
in
call
pop
setae
mov
mov
cmp
adc
inc
orb
into
push
push
jbe
jp
adc
ds
dec
adcb
popa
fldenv
lods
dec
or
loope
test
mov
or
cwtl
scas
outsb
mov
cltd
or
and
cld
or
sbb
jle
js
add
push
dec
add
dec
pop
lret
jbe
or
adc
or
clc
xchg
stc
jo
and
fidivrs
push
sbb
sub
imul
jmp
fdivr
in
pop
call
mov
add
jmp
mov
pushf
stc
jbe
inc
std
cmp
popa
cltd
and
cmp
int3
sti
xor
dec
push
mov
cmp
outsl
or
xlat
xchg
call
push
js
lods
mov
loopne
jecxz
inc
sbb
xchg
push
mov
popf
push
nop
rorl
popa
push
jne
or
hlt
andb
jnp
xor
add
jno
or
call
inc
cmp
xor
or
mov
in
insl
pop
or
sbb
scas
cmpsb
lds
push
addr16
pop
imul
inc
fmul
add
cmpxchg
cmpsl
dec
mov
mov
mov
jns
lods
in
inc
sahf
sub
repnz
inc
and
out
ret
xlat
pop
sbb
andb
repnz
jnp
ds
ds
loope
ret
xlat
gs
mov
inc
icebp
cs
mov
adcl
jb
cltd
insl
cmp
outsl
ret
adc
jbe
dec
ret
jns
sub
sbb
in
inc
sub
addr16
shll
push
cmp
sarl
scas
cmp
out
push
repz
xchg
mov
out
aam
mov
and
rcrb
xchg
jp
xor
mov
add
adc
push
xchg
cmpsl
lret
addb
add
std
cmp
je
das
cmp
push
out
adc
and
push
scas
pushf
push
hlt
adc
fldenv
or
aas
in
pop
sbbl
push
inc
jnp
je
or
mov
bound
push
cld
xor
fnstenv
mov
or
cmp
insb
fstpl
push
inc
fidivrs
inc
mov
fwait
rcrl
adc
sbb
std
lock
prefetchwt1
out
cltd
push
popf
hlt
int3
imul
hlt
sahf
xor
or
lock
lods
stc
stos
xor
push
inc
arpl
clc
icebp
push
xchg
cmp
lock
in
sbb
pop
arpl
push
lret
cmp
mov
leave
xchg
mov
push
jno,pn
fiaddl
pop
cmp
rorl
fwait
sbb
cltd
jl
leave
js
xchg
mov
stos
mov
es
insl
inc
or
cmp
mov
clc
jo
adc
ss
sarl
in
push
xchg
pop
push
dec
adcl
test
call
insb
inc
popf
shrl
dec
xlat
fldl
sub
gs
dec
addr16
inc
xlat
adc
outsb
sbbl
shlb
mov
orb
dec
subl
mov
mov
sahf
in
push
test
test
cmp
sbb
sbb
sbb
das
jecxz
or
or
outsb
push
sbb
fnsave
mov
inc
xor
mov
pop
cmp
les
xchg
mov
js
add
dec
movsl
lods
gs
lea
inc
xor
mov
in
sarl
aas
jo
outsl
or
hlt
sti
popa
stos
xor
push
lods
scas
sbb
cltd
mov
shrb
dec
ret
and
mov
inc
pop
sub
cmp
xor
xor
sahf
xchg
or
stos
aaa
je
xchg
sbb
pop
mov
jmp
loop
lds
pop
orl
xor
or
fsubrs
loop
test
cmp
ss
push
sub
inc
dec
aam
out
int
shl
cmp
cmp
sub
cmp
dec
outsb
inc
call
dec
sbb
cs
fnstenv
mov
mov
push
imul
dec
sub
pop
and
shlb
out
pushf
lret
es
aas
jae
gs
pop
pop
stc
into
rcrb
xchg
mov
add
dec
adc
shll
jnp
jmp
push
add
inc
jge
es
shl
outsb
imul
clc
mov
mov
push
stos
mov
js
mov
pop
inc
lret
inc
sbb
jl
dec
cmpb
and
adc
mov
aaa
out
aad
es
cli
ret
int3
and
lea
cmpsb
push
mov
fs
mov
enter
call
out
call
cs
xchg
cmpsl
cwtl
jmp
mov
int
and
movsb
xchg
pushf
mov
insl
out
push
add
sbb
and
adc
aam
pop
push
data16
push
push
lods
aaa
cmp
mulb
in
mov
inc
xor
sub
int
popf
cld
push
push
xchg
movsl
lods
fcompl
push
vmptrld
outsl
mov
addr16
stos
push
stc
inc
push
dec
aaa
rorb
lods
inc
mov
inc
mov
dec
arpl
adc
sahf
mov
out
jmp
mov
aam
push
adc
mov
popf
mov
dec
inc
je
fwait
pushf
sahf
hlt
repnz
adc
in
mov
and
fisttps
popf
inc
dec
mov
cmp
lret
stos
call
mov
push
testl
mov
enter
mov
push
out
mov
mov
packsswb
sbb
or
aas
sub
jns
pop
xor
int
in
mov
in
jg
popf
dec
pop
pop
and
dec
dec
lcall
pop
dec
inc
sbb
ja
lds
dec
bound
cwtl
mov
aaa
popf
hlt
rol
out
dec
mov
xchg
repz
mov
test
das
add
sarb
pop
sbb
int3
and
addr16
sti
sub
test
bound
dec
fwait
les
popf
jg
sub
xchg
pop
inc
cmc
or
adc
movsl
cmp
xchg
and
cmp
lods
and
stc
cmp
cmp
stos
ja
pop
xor
add
test
leave
adc
push
mov
mov
and
push
push
lcall
jecxz
jns
pop
jae
add
pop
mov
mov
les
addr16
aaa
fnstsw
negl
insb
adc
imulb
movsb
sbb
mov
sub
push
into
xchg
cmp
aad
sub
addr16
imul
loop
push
out
inc
hlt
xchg
dec
push
push
mov
cli
cmp
mov
add
xchg
cmpsl
dec
push
inc
inc
test
clc
popf
jl
shll
push
sbb
in
lea
xchg
jns
out
lds
push
xor
fcomip
sbb
dec
adc
xchg
fs
imul
je
sub
aaa
sbb
dec
out
aas
inc
adc
fcomps
je
jle
jbe
add
test
in
push
fwait
xor
adc
push
insl
xor
inc
orb
call
xchg
icebp
mov
mov
inc
bound
loopne
pop
je
add
lods
push
add
push
xlat
stc
and
sbb
std
or
xchg
xchg
and
int3
es
pop
out
jno
movsb
sub
cmc
sub
sbb
movsl
adc
in
outsl
xchg
push
mov
mov
xchg
mov
outsb
out
pop
les
fstl
icebp
adc
lods
push
or
mov
outsl
fdivs
sbb
cwtl
sub
in
xchg
fwait
mov
push
rcr
dec
sub
int3
adc
aad
cli
jp
jl
rorb
rcl
xor
les
incb
imulb
pop
shl
out
pop
mov
xchg
mov
iret
pop
jo
xchg
in
pinsrw
and
push
sub
stc
fsubr
arpl
pop
notb
inc
push
push
jp
sbb
jge
mov
dec
dec
in
test
adcl
clc
push
ljmp
negl
lret
xlat
mov
mov
dec
pop
push
popf
xchg
push
fimuls
push
in
xchg
push
pop
loop
sub
jle
pop
xchg
pop
adc
cld
lret
xor
orl
cmp
xor
cmp
fnstsw
xchg
js
into
push
push
cwtl
repnz
or
pop
pop
cmp
adc
pop
mov
ret
test
dec
in
pop
add
cltd
lret
mov
call
adcl
rcll
jae
sbb
xor
test
inc
pop
jl
xorl
fs
and
mov
loope
mov
in
xchg
push
mul
jecxz
xlat
jbe
loope
rcrb
push
fistpll
sub
cwtl
pushf
mov
jmp
add
shll
and
jne
loope
aad
xchg
clc
mov
xchg
int3
dec
mov
jg
inc
sub
cmp
xor
mov
out
xchg
mov
lods
out
in
mov
leave
sub
fcoml
pop
icebp
xchg
jb
jb
sbb
pushf
dec
rcll
xchg
je
push
mov
getsec
mov
or
cmp
jg
jo
xchg
shlb
aam
lret
in
mov
mov
test
mov
pop
mov
or
push
mov
cld
dec
adcb
push
xchg
pop
loope
imul
add
mov
xor
neg
gs
xor
sarl
sarl
mov
adc
imul
xchg
mov
gs
hlt
ficoms
int
cltd
in
inc
bound
repz
std
xor
adc
jns
jns
jbe
ja
in
jno
mov
xchg
cmc
test
pop
sub
mov
movups
mov
mov
shrb
repz
dec
xor
mov
sti
lods
push
and
imul
lret
mov
xchg
outsb
jne
sub
lcall
repz
js
les
cltd
in
dec
jl
cwtl
jne
jge
xchg
call
mov
nop
and
xor
movsb
mov
dec
lds
push
xchg
cmpsl
ja
push
jge
or
sbb
mov
sbb
sub
scas
test
lret
cld
icebp
jle
inc
out
mov
lods
mov
movsb
iret
loop
cld
pop
inc
test
je
loope
mov
xchg
cli
xor
fisubl
xchg
fsts
fsubs
xor
je
iret
pop
aas
inc
mov
sub
inc
fsts
aad
int3
repz
divb
cmp
pop
mov
adc
lret
mov
xchg
mov
mov
ss
fistpl
frstor
inc
faddl
aaa
icebp
mov
inc
add
in
cwtl
mov
xor
xor
int3
icebp
ficoms
push
cmp
xchg
sub
push
fs
lock
outsb
cmc
lods
imul
cmpsb
sti
xchg
or
dec
mov
aam
jmp
arpl
lahf
add
pop
adc
fmul
jo
push
dec
sarb
sub
xchg
sbb
mov
dec
bound
das
aam
daa
adc
mov
ret
std
xchg
inc
dec
jmp
fsubrs
inc
pop
lcall
add
enter
test
push
jmp
test
or
push
enter
imul
xchg
mov
sti
push
leave
cld
jmp
and
int
iret
outsl
push
pop
pusha
adc
dec
push
cli
cmpsb
sub
pop
xchg
adc
mov
sub
bound
mov
daa
icebp
mov
outsb
push
pusha
mov
mov
aaa
add
inc
add
fs
fists
and
nop
jb
pop
push
mov
jl
int3
or
daa
mov
add
mov
xchg
outsl
test
xor
jo
jae
mov
daa
in
scas
clc
inc
mov
mov
fadds
jl
xor
pop
pop
adc
xchg
idivl
mov
pop
sbb
mov
js
pop
jg
out
fstp
sbb
testb
sub
add
mov
xchg
aad
inc
cmp
cmp
xchg
dec
sub
and
les
sahf
adc
or
and
repnz
cmpsb
insb
cmp
mov
push
jbe
pop
jns
xor
inc
pop
lods
dec
mov
pusha
or
adc
and
loopne
loopne
sub
pop
mov
push
jg
cmp
sub
std
jmp
lock
mov
sbb
nop
xchg
pop
inc
xchg
repz
bound
and
mov
dec
sbb
or
je
jne
jle
or
fstl
ret
call
mov
ds
pop
push
or
pop
inc
add
sbb
out
in
aaa
movl
xor
scas
outsl
cs
iret
or
out
testb
in
mov
xor
dec
xor
push
int
cwtl
out
das
adc
aaa
popa
and
inc
ret
or
in
mov
ss
sti
aaa
jnp
sahf
insl
xchg
xchg
arpl
jnp
aas
mov
mov
or
scas
sub
xorb
push
cmp
mov
pop
and
sbbl
subl
mov
ja
sbb
test
inc
pushf
sti
stos
sbb
xor
fidivl
dec
adc
fst
mov
jb
push
sub
lods
mov
gs
mov
repz
cltd
add
stc
or
jbe
sbb
push
mov
dec
mov
push
push
adc
lahf
test
shll
arpl
inc
aas
mov
push
mov
cld
jnp
cmp
ja
mov
ret
xchg
or
sbb
xor
aaa
and
shlb
or
lcall
je
dec
mov
sub
fistl
or
les
dec
jle
and
push
aas
mov
lods
pop
daa
mov
xlat
xchg
xchg
bound
push
in
mov
jns
add
and
cltd
outsl
aam
adc
sahf
daa
mov
push
scas
mov
mov
ja
xchg
or
addl
or
enter
scas
dec
imul
outsb
xor
lret
shlb
in
incl
data16
insb
arpl
scas
ret
mov
sbb
dec
jnp
sbb
imul
outsl
sbb
mov
or
imul
sbb
test
dec
pusha
pop
dec
mov
cmpsb
push
pop
dec
out
mov
mov
pop
cmp
ja
jecxz
loop
jbe
imul
adc
int
daa
daa
js
cmc
leave
or
aam
inc
in
jae
xchg
pop
pop
mov
loopew
add
dec
xor
insb
push
add
xchg
push
pop
xor
lock
mov
cmpsb
fistpl
jge
dec
dec
in
mov
dec
mov
inc
mov
movsb
push
shrl
std
dec
mov
movsl
mov
xor
sbb
ss
mov
sub
int3
clc
sahf
mov
out
fwait
imul
sbb
imul
sbb
les
sbb
sub
sbb
and
imul
shlb
testb
mov
mov
xchg
leave
push
pop
js
xor
sub
imul
fistpl
aaa
inc
adc
sub
mov
in
push
sbb
mov
cmp
call
add
pop
and
or
ficoms
mov
ja
and
jp
dec
outsb
lods
inc
cmp
sbb
jnp
lods
jg
add
fnstenv
adc
add
sub
pop
sub
jge
cs
test
dec
les
sahf
or
dec
fdivs
mov
ds
pop
cmc
out
orl
loopne
pop
push
xchg
scas
icebp
sub
add
push
hlt
adc
call
xchg
mov
push
stos
sti
or
xchg
cmpsl
jecxz
adc
xchg
notb
int3
mov
sub
std
or
aam
jge
jge
rcr
mov
lea
jbe
fstl
lahf
dec
push
stos
mov
add
sbb
cmp
or
xor
xor
xor
sbb
lret
inc
outsb
enter
cmc
int
pop
mov
dec
push
or
add
cmpsb
js
cmp
xchg
fstpt
sbb
cli
jg
cld
stc
lcall
jmp
movsb
mov
shrl
add
jge
orl
stos
test
ror
or
lds
sti
clc
push
or
arpl
push
test
adc
popf
or
inc
lds
xchg
inc
dec
pop
ja
repnz
test
add
cmp
shrl
sbb
out
sbb
fbstp
jo
in
sahf
and
jns
fwait
mov
jg
repz
das
es
pop
pop
cwtl
xor
insl
fwait
cmpsw
inc
sbb
pop
or
pop
and
jp
xor
xchg
adc
xor
pop
lret
fmull
ds
lahf
nop
call
ret
inc
jg
inc
mov
ret
icebp
mulb
mov
xor
cmp
adc
jle
jl
mov
fmuls
loopne
addl
lea
insb
xchg
inc
fistl
push
lcall
add
mov
enter
orl
not
xor
jbe
xchg
fwait
movsl
xor
lds
imull
adc
sar
mov
push
fnstenv
insb
fmul
sarl
sbb
orb
pop
test
adc
mov
adc
xchg
nop
jnp
mov
int3
imul
jns
dec
sub
mov
repz
cmp
or
push
push
subl
jecxz
inc
hlt
test
fimuls
push
repnz
and
sub
add
push
adc
mov
sbb
dec
orb
enter
mov
push
ja
js
jbe
inc
pop
aad
mov
xor
es
aad
ret
aad
xor
add
mov
adc
xchg
cmp
jge
jo
mov
pop
push
pop
mov
xchg
les
mov
rolb
pop
add
mov
mov
push
mov
clc
pop
into
mov
fiaddl
in
add
dec
jnp
pusha
and
repz
fwait
mov
rclb
push
icebp
lret
xor
leave
dec
decb
add
push
fnstcw
jo
cli
call
mov
fildll
mov
int3
shll
mov
or
in
shll
mov
xchg
mov
outsb
dec
dec
cmp
jne
shlb
hlt
push
les
adc
mov
test
in
or
mov
rcrl
sar
or
or
xchg
adc
repz
idiv
repz
xchg
and
cwtl
sbb
adc
ja
xchg
cmc
enter
stos
mov
mov
hlt
test
jno
adc
jge
inc
repz
xor
sti
pusha
mov
jg
insl
das
add
or
ljmp
lods
dec
ljmp
sub
jmp
mov
loope
mov
jnp
inc
stos
or
cmp
cltd
push
imul
sbb
dec
icebp
push
sub
inc
inc
jmp
push
push
add
add
sti
bound
mov
jno
das
stos
es
mov
jbe
push
mov
mov
shrl
ds
loop
out
sub
in
es
jg
pop
mov
jno
jg
jae
fisubrl
bound
enter
cwtl
imul
inc
shl
jbe
push
xor
outsl
mov
pop
xor
sahf
or
push
mov
mov
data16
mov
test
push
inc
push
shr
fstpt
sub
std
fisubs
stc
xchg
xor
jle
arpl
roll
cld
and
pop
loope
and
shll
fwait
cld
jge
jmp
mov
loop
sbb
aad
gs
scas
sub
or
push
fcmovnu
push
push
mov
js
pop
mov
cmp
cltd
xlat
cwtl
shrl
sahf
rcll
xchg
and
and
fstpl
pop
imul
popf
or
xchg
inc
jns
into
push
mov
notb
xor
daa
rclb
push
and
xlat
lret
shlb
cmc
in
cmpsb
cmp
movsb
dec
hlt
out
mov
in
inc
mov
push
orl
popa
lods
in
bound
fbld
jmp
in
add
stos
arpl
and
cmp
sbb
add
frstor
mov
add
call
in
xor
inc
push
sbb
push
jbe
leave
test
inc
loop
cmp
dec
aas
pop
sub
dec
or
outsb
call
mov
mov
out
push
ds
sub
dec
or
outsb
call
mov
mov
out
push
ds
das
test
cmp
jg
outsb
call
mov
mov
out
push
ds
sub
pop
cmp
or
sbb
bound
enter
call
push
fsubs
enter
fstpt
mov
mov
xchg
pop
mov
cmpsb
cmp
push
imul
push
call
ss
data16
jb
push
mov
mov
aam
out
mul
pop
icebp
xadd
shrb
mov
jle
insb
js
arpl
pop
mov
imul
xchg
inc
cmpsb
push
mov
push
xchg
stos
test
sbbl
mov
aam
adc
pop
clc
push
gs
fsubrs
fsubs
ss
movsl
push
jns
push
test
test
jne
call
imul
push
nop
sub
xchg
xchg
or
mov
arpl
mov
iret
mov
pop
clc
jmp
popf
inc
mov
repz
data16
pop
adc
mov
sbb
out
adcl
sbb
push
push
jo
xchg
imul
sub
xchg
mov
jae
stc
call
mov
js
mov
cld
cmpsl
pop
dec
dec
clc
out
cmp
clc
in
lock
call
ss
mov
cwtl
xchg
outsl
popa
xchg
inc
mov
xor
sbb
adc
mov
lea
lods
push
faddl
lcall
xchg
sub
dec
aam
mov
clc
outsl
call
pop
int3
inc
sbb
adc
inc
jp
push
mov
mov
push
push
ficoml
mov
jne
push
cwtl
data16
xchg
pop
cmpsb
dec
mov
sub
sbb
or
clc
push
call
ss
data16
xchg
pop
cmpsb
dec
mov
sub
sbb
or
clc
push
sub
xchg
int
enter
imul
jg
test
cwtl
adc
test
add
jge
ret
pop
call
lods
xchg
jae
insb
xor
lea
inc
notb
stos
xor
stos
test
xor
xchg
shrb
pop
jle
mov
test
es
imulb
push
loopne
imul
leave
jbe
mov
pop
sub
stos
jnp
nop
inc
or
add
sub
dec
cmc
adc
outsb
mov
sub
out
xor
mov
cmp
dec
mov
pop
test
les
ret
daa
cltd
scas
into
data16
ret
loop
mov
sahf
daa
mov
in
xchg
je
push
inc
cs
ja
not
ds
outsb
mov
fildl
andb
cmp
in
fisttpl
imul
pop
sub
mov
sub
mov
loope
add
adcl
loope
pop
outsl
adc
in
mov
mov
dec
stos
cmp
and
test
stc
pusha
push
pop
fbld
push
in
cmp
ret
pusha
fnstcw
and
sbb
and
push
test
mov
clc
push
ret
pushf
add
mov
xchg
out
jo
or
xchg
lahf
lock
outsb
ss
imul
xchg
popf
ficoml
loop
insb
pop
push
ljmp
inc
in
movsl
sub
cmp
pusha
cwtl
cmp
push
mov
or
adc
mov
inc
push
pop
lret
sbb
xor
inc
push
das
std
daa
ret
mov
xchg
fsubrl
aaa
sub
int3
mov
insb
adc
dec
insb
xchg
inc
push
ficomps
hlt
inc
mov
daa
adc
ds
pop
mov
pusha
xlat
cs
hlt
call
bound
ret
jmp
xorl
adc
push
or
mov
push
rcl
sbb
dec
xor
mov
push
imul
cld
adc
and
xchg
dec
call
xchg
sbbb
pop
lods
lret
outsb
negl
lods
adc
in
adc
int3
fmuls
sbbb
insl
push
dec
mov
inc
adcb
sub
xchg
mov
out
inc
mov
int
fstp
shl
out
xor
mov
mov
push
ret
jl
orb
nop
or
movsl
lods
lahf
lods
sbb
shll
jnp
shr
fsts
test
mov
mov
xchg
inc
pop
dec
inc
push
pop
xchg
roll
pusha
shrl
and
gs
sub
mov
out
pop
push
addr16
dec
dec
fwait
xlat
sbb
bnd
sarl
jge
sahf
aad
inc
jae
mov
popa
mov
in
iret
jecxz
mov
xchg
cmp
or
jge
and
lds
in
lea
and
int3
nop
in
xchg
or
fisttpll
dec
xor
sti
call
outsl
sbb
add
dec
pop
stos
add
lret
mov
pop
ja
cmp
add
cmp
jo
jge
jbe
out
les
lods
test
fs
lret
xlat
push
mov
pop
clc
adc
in
imul
ja
push
mov
sub
hlt
jge
enter
lea
jg
popa
xchg
mov
add
mov
add
push
ret
leave
mov
pushf
add
mov
adc
mov
mov
mov
push
fwait
jae
add
xlat
arpl
and
mov
push
fisubrs
movsl
inc
pushf
ret
mov
pop
cmp
cmp
stc
les
repz
fldl
cmc
test
dec
push
lcall
inc
push
cmpsl
xchg
adc
out
mov
mov
daa
pop
int
sbb
push
pop
cmpl
scas
xor
test
sarl
push
xor
ljmp
pop
test
and
lret
mov
popf
outsb
insb
imul
adc
mov
movsl
sbb
adc
loopne
jmp
xchg
mov
addr16
adc
xor
insb
mov
push
es
orl
cmp
movsl
xchg
push
or
js
sbb
pop
pop
xchg
mov
add
jl
mov
cmp
std
ret
cmp
jno
in
push
fisubrl
inc
sub
mov
jge
push
fsincos
push
cmp
adc
xchg
sbb
adc
and
and
cmp
sub
in
and
addl
mov
jbe
pop
push
sbb
xor
mov
jns
cmp
sti
call
add
cmp
mov
ja
sbb
in
inc
xchg
mov
mov
push
bound
mov
push
fisubs
insl
push
xlat
pop
mov
sbb
push
fcompl
lods
pop
inc
std
jmp
bound
pop
lret
or
wbinvd
les
sub
in
enter
jns
push
xor
inc
dec
or
push
sbb
jmp
mov
stos
scas
scas
out
inc
out
or
out
push
push
jnp
inc
loopne
test
aad
cmp
adc
mov
daa
xchg
sti
sub
xorl
adc
mov
std
nop
je
stos
popf
ret
xor
mov
mov
ljmp
push
les
push
mov
out
adc
mov
pushf
and
sahf
sub
sub
into
stc
push
aaa
or
push
jge
ficompl
cmpsl
in
outsb
insb
mov
out
xor
cmc
popa
inc
repnz
popa
fisubrl
inc
lcall
lahf
xchg
hlt
pushf
stos
xchg
jg
mov
scas
outsl
adcl
sbb
stc
push
pop
xlat
notl
imul
mov
gs
jecxz
insb
jecxz
mov
lret
mov
lods
add
dec
lahf
mov
adc
push
xchg
jp
jae
out
pushf
dec
gs
sbb
adc
sbb
cltd
or
enter
mov
jo
push
popf
mov
or
popa
pop
imul
rolb
roll
sub
push
mov
xchg
addb
dec
pop
sbb
jno
adc
test
fisubl
xchg
pop
add
inc
js
imul
lds
rcr
fincstp
or
nop
cmp
push
adc
fldt
mov
cmp
pop
mov
aas
mov
or
push
das
xchg
push
lcall
jge
push
mov
inc
outsb
pop
jne
movsb
addb
loopne
inc
pop
mov
add
add
cli
test
push
adc
mov
imul
pop
push
pop
xlat
add
sarl
inc
or
aas
adcl
int3
xor
jg
rorb
insl
mov
mov
add
mov
xchg
xlat
jbe
test
cmpb
sahf
repnz
dec
xor
ds
les
jns
test
mov
cmp
daa
scas
ss
push
cmp
in
pop
enter
mov
movsl
push
leave
cmpb
pop
cltd
pop
mov
imul
pop
shrb
fwait
xor
cmpsl
leave
sbb
mov
lcall
out
shrl
push
popf
or
neg
mov
aam
jmp
cmp
push
jne
std
push
inc
xchg
les
in
jnp
sahf
lock
sbb
push
mov
jno
jg
dec
mov
mov
outsb
and
pop
lret
xchg
or
mov
pop
lea
adc
adc
xor
faddl
pop
push
loop
sub
push
shlb
push
xchg
ficoml
jecxz
mov
pop
mov
in
cmp
je
cld
loopne
add
cmpsb
jae
and
push
mov
sahf
ja
mov
sti
cmp
jmp
shl
shrb
sbb
fistps
mov
jb
outsl
imul
lret
xlat
mov
jno
adc
xchg
jbe
fwait
sub
mov
cmp
push
aad
cmpb
lock
xchg
mov
je
fisttpl
mov
fmull
push
lea
das
sahf
rclb
push
jno
xchg
ret
or
mov
xchg
mov
movsb
adc
dec
push
pusha
in
dec
add
loopne
in
scas
hlt
cld
add
or
jmp
pop
nop
ljmp
and
mov
and
pop
sbb
pop
sbbb
ror
push
lods
xchg
jg
insb
movsl
fmuls
sbb
imul
jge
adc
push
xchg
dec
sti
int
rcll
dec
jle
add
pop
inc
or
pop
roll
insl
ja
xchg
or
das
rol
xchg
inc
sbbl
jle
mov
xchg
clc
popf
int3
jae
sub
out
mov
xchg
ret
xor
push
adc
dec
xchg
sbb
insb
stos
push
cmp
imul
sbb
xor
or
mov
jne
aaa
jl
imul
mov
scas
sub
sbb
inc
inc
cmc
xor
sbb
icebp
sub
stos
sub
subl
lret
push
jnp
daa
push
cmpsl
jg
cmc
xchg
shll
aas
adc
push
ror
pushf
mov
inc
aaa
push
mov
push
jbe
or
ficoms
dec
lret
stos
cmp
mov
shll
rcll
stos
cs
and
add
fnstenv
mov
dec
jg
int3
in
dec
popf
dec
lods
mov
xor
fiaddl
or
mov
in
fwait
and
loope
ds
cli
enter
sbb
pop
sti
call
loopne
ret
jge
std
push
add
sbb
repz
adc
sbb
and
cmpsl
es
test
or
imul
add
push
mov
adc
mov
mov
in
xor
and
push
jl
dec
mov
adc
movsb
jle
and
mov
mov
fmul
pop
adc
push
daa
ja
lret
pop
les
mov
jmp
push
push
mov
lahf
pop
add
in
sbb
mov
add
dec
xchg
mov
aam
fdivs
arpl
sti
cs
jecxz
xlat
std
js
lods
jns
loopne
sub
mov
cmpsb
mov
dec
out
fs
leave
pop
pop
mov
jp
aaa
mov
pop
jo
lret
call
and
adc
in
lahf
cli
push
stos
sub
fprem1
mov
push
xchg
lds
lret
mov
lahf
sbb
test
mov
into
sub
test
push
add
push
add
out
xchg
fistl
stos
cmp
stmxcsr
test
fsubrl
jecxz
dec
sbb
aaa
jg
sbb
dec
mov
cmp
xlat
adc
xchg
dec
mov
push
stos
ret
call
aas
fildll
out
rclw
aam
jl
cld
shll
cmp
dec
lock
push
jge
mov
mov
cli
cwtl
ret
pushl
push
cwtl
jge
cmp
push
add
dec
xchg
ret
icebp
enter
movsb
sub
jmp
jecxz
out
loop
cmp
sub
mov
and
jb
ss
jg
test
shr
pop
push
call
xor
xchg
mov
stos
adc
aas
pushf
push
popl
stos
iret
pop
push
jmp
out
shll
mov
lods
imul
mov
pop
jno
adc
mov
adc
cmp
test
pop
inc
rol
lock
lcall
push
mov
pop
ficoms
cmp
pop
fnstenv
outsl
aaa
dec
push
xor
or
and
call
sbb
jle
pusha
jmp
xor
xor
inc
testl
js
xchg
jbe
int
xor
stc
mov
push
pop
mov
mov
out
mov
es
push
jg
sahf
jo
in
ja
xor
and
popf
negl
out
iret
jnp
subb
or
xor
mov
adc
pop
cmp
loope
mov
push
jle
in
adc
sbb
pop
cmp
cmovno
test
inc
cmp
pop
cmpsl
cmp
fs
or
inc
xor
in
in
std
fcmovb
ret
repnz
push
popf
pop
jno
inc
push
mov
and
inc
fwait
movsb
scas
mov
pop
adc
add
in
mov
inc
loope
jg
mov
jno
cmpsl
push
jl
mov
dec
iret
jnp
popf
and
stos
clc
xorl
add
cmp
pop
jecxz
xor
shlb
pop
sbb
pop
sbb
pusha
or
ret
inc
add
aaa
mov
mov
mov
sbb
cmc
xor
inc
sti
or
cld
push
mov
push
test
push
insl
popf
mov
mov
xchg
mov
mov
test
and
aas
cmpl
and
bound
rcll
clc
data16
fisubrl
jnp
imul
lods
pop
dec
jp
inc
mov
push
scas
je
xchg
aaa
sbb
mov
bound
divb
addr16
push
leave
jmp
lret
xchg
cli
dec
fucomip
dec
xor
mov
mov
and
mov
test
lds
in
add
lods
jno
or
xlat
insl
fucom
repz
psubusb
add
out
mov
pop
mov
push
pop
jl
xor
aam
sub
sbb
cltd
insb
ficompl
fstl
and
cmp
scas
cmp
mov
adc
dec
mov
jbe
aas
ds
int3
push
sti
dec
imul
pop
pop
mov
cmp
nop
ja
jbe
jbe
outsl
jmp
mov
mov
add
sbb
inc
adc
mov
nop
xlat
ljmp
pop
mov
aaa
mov
pop
cmp
pop
sub
sbb
lret
xor
stc
bound
dec
jl
dec
aaa
les
xchg
pop
mov
sub
push
xor
inc
xchg
call
aad
and
mov
outsl
mov
pop
repz
cmpsb
insb
mov
pop
cmp
mov
jne
xorl
add
rclb
pop
clc
jge
cmp
mov
loope
out
into
mov
cmpsl
test
icebp
gs
mov
ror
xor
lds
pop
xor
mov
lea
xchg
sbbb
cltd
pop
mov
orb
xor
sub
jg
dec
pop
xor
push
pop
mov
push
pop
dec
xchg
sbb
lods
leave
mov
xchg
sbb
sahf
sahf
add
xchg
ret
cmpsl
and
and
fstl
inc
adc
adc
and
adc
outsl
jge
lcall
mov
and
out
xor
cmp
mov
sub
adc
xorb
fdivs
mov
ja
popf
pop
insl
les
sub
jns
sub
lods
fisttps
xor
pop
pop
stos
imul
jge
pop
pop
sbb
cmp
jl
push
out
popa
cmpsl
xchg
inc
orb
sbb
and
and
pop
ss
sub
mov
add
repnz
push
ja
int
mov
and
or
es
out
mov
fbld
xorl
sbb
nop
aam
xchg
push
xchg
mov
push
xchg
inc
pop
es
xlat
and
mov
dec
and
xor
mov
push
mov
pushf
cmpsb
das
xchg
inc
sub
pop
loopne
sub
dec
pcmpgtd
insb
xlat
cli
into
cmp
xchg
xor
mov
jno
shrb
xchg
loopne
aas
aaa
dec
mov
xor
loopne
or
int
mov
lods
mov
xor
mov
mov
sub
and
xchg
or
dec
mov
sbb
adc
xchg
adc
jg
or
les
add
fisubl
dec
js
and
leave
les
add
mov
in
pop
int3
call
inc
into
or
push
lcall
out
stc
push
add
cld
jb
out
fmuls
and
xchg
xor
add
cmp
les
imul
iret
sbb
fwait
jle
nop
mov
out
cltd
outsl
stos
scas
stos
rcrb
cs
test
or
and
mov
dec
cmpsb
sarl
cmpsb
lret
push
adc
jge
and
add
lret
jle
lret
cmpsb
cmp
pop
mov
and
dec
andb
adc
pushf
sub
dec
popf
popa
cltd
std
jge
add
int3
adc
arpl
insl
push
mov
xchg
inc
cmpsb
add
inc
cmp
cmpsl
cmp
test
sbb
andl
data16
test
enter
add
and
sub
or
cmp
mov
std
mov
pop
mov
std
outsw
jb
cwtl
add
mov
mov
in
jge
dec
cmp
sbb
fisubrs
in
add
xchg
jl
xchg
mov
mov
les
outsb
dec
ljmp
ficoml
ds
sbb
adc
push
mov
loop
mov
mov
lods
mov
loop
jae
cwtl
stos
ss
push
hlt
cmp
xor
mov
movsl
mov
dec
pop
jp
xor
dec
mov
mov
and
pop
push
jns
pop
sub
xor
bound
add
lds
in
aad
leave
clc
data16
cmpsb
scas
lock
mov
mov
ljmp
testb
adc
outsw
or
mov
imul
jp
pop
push
es
rolb
lcall
and
sarb
adc
sub
stos
mov
sbb
hlt
pusha
pop
repz
or
pop
mov
andb
adc
cli
fnstsw
dec
movsl
aad
sub
xchg
and
loop
jo
and
sbb
ljmp
fcompl
pop
aad
test
out
xor
sahf
pop
push
je
xchg
add
sub
ret
sub
xchg
mov
out
or
gs
dec
xchg
idivl
dec
fildl
dec
fwait
jnp
js
add
push
jne
jmp
gs
lcall
scas
jmp
mov
add
fmulp
icebp
adc
mov
mov
stos
dec
mov
dec
mov
and
dec
and
xlat
outsb
je
pushf
jae
je
mov
sub
push
fcmovu
sbb
add
stos
xor
push
lock
enter
test
and
lea
lea
insb
sti
out
mov
test
pop
outsl
cwtl
mov
mov
stos
and
inc
adc
or
xchg
dec
push
repz
mov
dec
mov
jae
ja
pop
xor
cmpb
jne
jp
jg
mov
out
push
dec
mov
imul
pushf
roll
test
fbstp
dec
movaps
dec
test
jbe
cmp
sbb
hlt
ljmp
orl
sbb
mov
sub
push
mov
and
shlb
imul
stos
push
addr16
add
ficoms
mov
movsb
push
fcoml
push
push
xor
dec
add
push
sti
push
xor
lret
insb
and
cmp
mov
fldl
push
mov
mov
aam
cld
or
pop
dec
xchg
js
jp
sarl
xchg
mov
pop
out
enter
les
fisttps
and
xchg
lahf
rcr
or
jb
add
adc
cs
pop
mov
jo
pop
sbb
call
push
or
cmp
mov
push
cmpb
lret
and
out
mov
int
mov
push
nop
xlat
lock
xor
test
idivb
mov
fbstp
sbb
js
bound
fbld
call
js
and
cmp
movl
and
popf
and
jbe
pop
dec
sti
jb
int3
pop
sti
rcrl
mov
lds
add
cmpb
fnstsw
xchg
inc
cmp
or
push
fisttps
or
fcoms
xchg
cmp
mov
repz
jno
fidivs
cmp
mov
pop
inc
sub
mov
sub
mov
fldl
sub
aaa
fistps
lcall
push
inc
mov
lahf
and
sbb
addr16
xchg
mov
pop
mov
lock
jecxz
inc
xchg
cmpsl
icebp
pop
lods
or
call
aaa
cmp
mov
cmp
addl
fidivs
and
xchg
insb
fbstp
pop
or
push
aam
mov
mov
adc
mov
iret
test
push
cmp
popa
inc
test
scas
nop
popa
sub
pop
adc
cmp
xchg
test
pop
push
rcr
dec
jno
jmp
or
jp
stos
pop
repnz
fildl
stos
cmc
add
sbb
sbb
and
add
or
and
insl
in
andb
rclb
cmc
hlt
aam
fs
inc
adc
dec
push
push
es
test
cwtl
data16
xchg
pop
cmpsb
dec
mov
sub
sbb
or
clc
push
call
ss
data16
xchg
pop
cmpsb
dec
mov
sub
sbb
or
clc
push
call
ss
data16
xchg
pop
cmpsb
dec
mov
sub
sbb
cmp
int3
add
adc
and
ss
data16
repnz
dec
rorl
test
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jl
insb
out
dec
mov
inc
leave
outsb
mov
xchg
jbe
data16
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
in
jbe
push
fcoml
inc
mov
push
mov
divb
inc
push
and
xchg
or
in
iret
xorw
inc
mov
fildl
adc
mov
sub
fisttpll
jp
pop
outsb
push
add
inc
push
mov
data16
lock
xor
cltd
jns
lds
in
inc
mov
push
subl
stos
cmp
push
mov
cltd
in
inc
mov
pushf
jmp
jl
xchg
sbb
ret
mov
cmpsb
jecxz
or
or
test
lods
fsts
jmp
loope
rcll
cmp
mov
mov
cmp
cld
mov
xor
test
lods
fisubl
pushf
mov
mov
ret
ret
cs
jecxz
add
popa
mov
and
loope
add
pop
dec
sub
adc
les
inc
movsb
ss
xchg
mov
cltd
or
cmp
dec
cmpsb
push
fmuls
cld
adc
add
loope
adc
or
mov
sub
sbb
pop
xchg
aaa
lea
mov
jae
push
sbb
and
je
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
inc
scas
jecxz
aas
adcl
leave
inc
fstl
addl
and
pusha
loop
insl
les
scas
testb
sub
xchg
out
cmp
xor
jns
clc
sbbb
test
or
mov
adc
xor
sbb
inc
fwait
stc
xchg
pop
pop
xchg
imul
shr
ljmp
fwait
mov
pop
outsb
cwtl
pusha
mov
outsl
notb
arpl
add
dec
into
inc
add
dec
lret
mov
imul
sbb
xchg
test
push
mov
xchg
cld
bound
sbb
movsl
jnp
mov
lock
xchg
insb
mov
mov
and
or
insb
push
popa
and
out
scas
xorl
nop
in
jo
mov
mov
fisttps
dec
and
ret
sbb
sbb
sbb
addb
loope
adcb
mov
and
jmp
in
jmp
shlb
and
movsb
imul
aad
and
push
lcall
push
pop
gs
jmp
push
jle
fnstcw
dec
mov
pop
into
pop
rorb
jb
xlat
out
int
dec
mov
inc
aam
in
imul
jge
inc
xor
or
and
imul
stos
mull
add
out
stos
cmp
outsl
push
andl
adc
fcmovne
push
sbb
jge
mov
stos
bound
jg
push
adc
jp
jb
orl
push
or
sub
adcb
add
push
in
addr16
adcb
out
or
sub
cmp
movsb
xor
add
lahf
mov
ror
mul
outsb
jl
scas
out
push
mov
pop
inc
loopne
inc
add
dec
jns
xchg
pop
rcrl
and
repnz
pop
fnstenv
call
sbbb
out
rcrl
out
dec
jo
or
jmp
stos
enter
jae
pop
mov
xor
and
es
lea
int3
cmp
push
inc
and
sbb
xor
sub
add
scas
leave
xchg
idivb
adc
pop
scas
xchg
xor
dec
mov
jb
sbb
inc
dec
imul
push
insb
xor
aaa
jb,pt
cmp
rclb
lods
or
mov
mov
fdivp
cmp
inc
fdiv
popa
call
gs
sub
shll
imul
adc
jns
xchg
mov
inc
arpl
repz
scas
aad
into
xchg
loop
jno
aam
ds
repnz
mov
push
in
jl
add
xchg
dec
call
push
sbb
popa
fwait
test
pop
clc
inc
push
pop
add
sbb
dec
bound
pop
or
out
jl
dec
ja
dec
or
call
pop
pusha
sarl
arpl
jge
push
lock
pop
xor
mov
scas
pop
test
lahf
fwait
shrb
or
push
data16
add
in
and
cmp
lahf
mov
push
or
arpl
jb
xor
cmp
lret
pop
xchg
les
testl
movsl
adc
jb
loopne
cmp
xchg
scas
add
lds
jbe
mov
out
pop
insl
add
push
or
mov
loop
push
cmpsb
out
push
fdivp
aas
add
push
jns
rclb
adc
int3
pop
aad
pop
loope
xchg
and
loope
mov
ja
stos
xor
addr16
shrl
ret
mov
xor
ljmp
xlat
jmp
loop
xchg
or
push
xor
fs
or
arpl
sub
add
rclb
in
lds
fstpt
add
jo
test
or
cmp
dec
cmp
pop
and
test
adc
mov
cmc
mov
dec
roll
push
test
add
push
dec
jnp
and
and
and
fbld
out
mov
add
pop
add
sub
sti
ret
lock
test
xchg
mov
mov
mov
dec
out
dec
pushf
mov
lock
test
adc
sbb
push
xor
cmp
xchg
adcl
in
mov
ret
cwtl
das
lods
fiadds
lcall
mov
sbb
push
cmp
lods
pop
xchg
faddl
lock
mov
and
push
pop
pop
mov
mov
cmp
fldl
shll
cltd
mov
mov
sub
sub
popa
xor
andb
jno
insl
xchg
jmp
cwtl
into
gs
ljmp
jmp
leave
mov
test
lods
cmp
aaa
dec
mov
repnz
js
es
cmp
push
test
jo
mov
push
xchg
sarl
adc
pop
or
shl
mov
scas
and
pop
pusha
sarb
fsts
mulps
jg
fwait
adc
xor
stos
loopne
dec
xchg
jmp
pop
sbb
adc
jecxz
mov
or
cmpsl
iret
orb
fiaddl
mov
jnp
and
rclb
push
das
mov
lret
xchg
jnp
mov
xor
in
add
jl
lahf
xchg
call
repnz
js
add
mov
jb
jp
xchg
mov
and
mov
push
flds
jne
ljmp
out
mov
mov
test
sti
push
lock
jmp
pop
pop
mov
jl
icebp
or
into
dec
fstl
jae
inc
dec
pop
not
je
stos
jp
cltd
daa
inc
lcall
outsb
add
fmull
rorl
inc
hlt
stos
insb
idiv
daa
outsb
ja
lock
xchg
mov
test
enter
in
ja
pusha
xchg
dec
dec
mov
test
add
mov
pushf
mov
sahf
mov
repnz
out
jl
imul
stos
cmpsb
ret
test
xor
std
out
adc
fwait
out
scas
stos
inc
cwtl
in
lock
sub
movsl
pop
fdivrs
dec
or
ljmp
pop
out
insl
cmpsl
mov
mov
push
dec
jmp
adc
jg
pop
lds
lahf
cmpsb
xor
xor
outsb
dec
fcmovne
popa
jle
out
scas
ret
xor
cmp
loop
dec
pop
inc
sbb
es
push
movb
sub
dec
scas
adc
xor
jmp
sbb
pop
mov
jne
xor
js
dec
insl
aaa
cmc
int3
push
and
mov
mov
xor
pop
push
mov
or
adc
cmp
push
test
outsl
stc
add
dec
daa
lds
jno
loopne
xchg
scas
outsb
xorb
adc
add
mov
pop
gs
push
movsl
add
cmp
push
mov
sub
cmp
or
fs
mov
ja
xchg
and
addl
mov
enter
int
negl
mov
mov
lds
sub
sbb
icebp
test
xchg
push
int3
mov
adcb
mov
push
xchg
mov
jmp
mov
fdivrp
cmpsl
test
mov
call
xchg
divb
test
xor
cwtl
into
ds
push
sahf
cmp
add
push
fcmovu
pusha
fcoms
addr16
or
ja
insb
sbb
xlat
sbb
je
xchg
xor
jge
jo
adc
jle
push
lret
jp
adc
loopne
or
xlat
lcall
and
add
and
push
add
mov
daa
pusha
xor
cmc
fisubrs
inc
int3
mov
dec
xlat
mov
aas
loop
sbb
repnz
push
cmp
and
sarl
cmp
sbb
fnstenv
push
mov
pushf
jns
cwtl
test
xchg
sub
adc
lock
add
or
stc
add
pusha
cmp
lret
stos
mov
loope
dec
ret
fwait
or
mov
fbstp
movsb
rcrl
fwait
cmpsb
shrb
ret
inc
or
pushf
repz
cmpsl
pop
push
jp
hlt
fwait
popf
xor
mov
push
sti
scas
cli
pop
sbb
push
xchg
test
pushf
shlb
cwtl
add
pop
xlat
cli
jle
xchg
js
iret
and
dec
sbb
cmp
jg
loop
add
loopne
rorl
jnp
dec
mov
ret
dec
xor
push
daa
adc
lret
lret
pop
addr16
aad
adcb
hlt
iret
cld
lods
int
cmpsb
jb
cmp
nop
ds
repnz
pop
push
cwtl
and
adc
pop
lcall
cmpsb
or
pop
movsl
cmp
sbb
sti
leave
jge
pop
adc
in
cmp
ljmp
mov
aaa
and
movsl
daa
sti
ret
lcall
sbb
iret
lret
mov
fdiv
mov
mov
stos
sbb
add
pusha
cmp
dec
xor
nop
adc
jmp
push
mov
mov
sahf
cmp
aaa
or
cld
rolb
push
add
iret
sbb
int
rcr
sti
test
cmp
adc
inc
ret
mov
out
xlat
loopne
xor
mov
loopne
or
adcb
dec
les
xor
fucomi
pop
and
xor
aas
jge
add
inc
gs
sub
insb
cld
movb
push
cmp
and
lock
xor
pop
sub
mov
or
ret
adc
dec
cli
in
pop
dec
insl
outsb
mov
sub
mov
idivl
imul
int
or
mov
sbb
jp
cmp
and
repnz
in
cmc
adc
es
inc
pop
inc
mov
dec
and
getsec
mov
jae
pop
int3
data16
gs
hlt
xchg
jne
cmpsl
fistl
cmp
mov
lcall
pusha
test
jmp
ror
dec
push
mov
pop
push
jle
pop
rolb
xchg
or
adc
sbb
xor
sub
jo
xchg
dec
push
rcrl
popa
xor
xchg
jg
push
inc
dec
sub
sub
aad
loopne
in
add
xor
or
push
mov
mov
roll
push
ja
in
push
mov
add
fbstp
outsb
sub
sub
jle
pslld
cmc
or
lea
xchg
mov
in
dec
adc
xchg
fisubs
popa
popa
call
cmpl
mov
aaa
jne
cmpsl
call
shll
mov
imul
lds
or
ret
sub
or
mov
cld
cli
test
or
inc
sbb
out
sbb
jmp
fimuls
mov
mov
stos
in
add
push
call
mov
hlt
fisubrs
pusha
stc
fmull
add
pop
push
or
aaa
hlt
inc
xchg
push
or
sub
pop
and
stos
fsubrl
mov
jle
inc
mov
test
sbb
sahf
imul
gs
adc
negl
add
push
fucompp
test
movsl
mov
sbb
sub
lahf
xor
sbb
out
sbb
sub
cmc
cmc
add
imul
dec
sub
ja
lods
dec
repnz
push
dec
xchg
in
shrb
fldln2
leave
or
or
xorl
jne
pop
stos
testb
lret
loop
mov
or
lds
sub
shrb
add
jnp
jnp
cmp
adc
mov
sbb
or
fdivl
mov
aad
iret
or
xchg
adc
pop
mov
add
xchg
mov
out
xchg
jmp
sub
repz
shl
mov
test
cltd
and
ss
add
inc
cld
leave
jnp
mov
lahf
mov
add
mov
incb
std
jp
xor
cltd
push
lods
js
movsl
int3
in
xchg
daa
mov
pusha
adc
arpl
jns
and
les
cmp
ds
icebp
xor
and
mov
fnstsw
and
mov
mov
movsb
mov
in
jns
notl
lret
pop
dec
js
das
mov
sbb
cmp
sub
cmp
call
sahf
jb
mov
out
jle
dec
push
inc
int3
xor
adc
shlb
cmp
pop
stos
sub
mov
mov
mov
cwtl
xor
into
movsl
cld
cmp
mov
sub
sub
mov
rcll
mov
cld
mov
pop
xor
jl
imul
mov
sbb
repnz
das
fistpll
dec
outsb
jo
xor
jne
out
mov
push
and
pop
mov
loopne
mov
xchg
mov
pop
stos
pop
into
jo
add
xor
adc
add
mov
shrl
sub
stc
rclb
ljmp
or
pop
adc
mov
enter
or
mov
pop
sti
xchg
mov
and
jne
inc
repnz
push
lret
cmc
mov
mov
lds
pusha
mov
push
cwtl
push
sbb
lods
push
sbb
adc
or
call
sbb
mov
rclb
test
jge
add
lcall
dec
add
testb
push
cld
jp
adc
push
ss
sub
xchg
div
imul
add
sub
stos
push
das
insl
jle
fldcw
ljmp
negb
outsl
and
clc
out
std
mov
ds
popa
jns
scas
add
pop
shlb
dec
jmp
pop
mov
icebp
xor
lcall
adc
add
xchg
adc
faddl
lea
jbe
pop
cs
lods
scas
or
call
xor
pop
add
std
xchg
add
push
push
dec
or
pusha
shr
or
incb
and
notl
dec
dec
add
jecxz
test
jns
mov
xor
out
movsl
pop
pushf
ffreep
cmp
cmc
push
clc
test
dec
xchg
outsl
or
bnd
sub
sub
or
das
test
push
pop
sti
xchg
std
xchg
lahf
xchg
mov
lock
inc
lea
xchg
pop
pop
cmp
aad
fimuls
es
and
js
cli
mov
add
test
adc
shrb
and
imul
mov
push
inc
fwait
aaa
sti
xor
push
jecxz
clc
aaa
cmpsl
shl
sub
jne
jo
inc
call
push
aas
pusha
inc
cld
loop
test
inc
push
xchg
out
and
test
out
pop
pop
mull
imulb
xchg
mov
push
mov
pushf
movsb
test
nop
pop
and
cmp
fwait
push
lcall
add
jns
or
stc
pushf
aad
mov
and
fmuls
mov
mov
data16
sbb
sbb
push
cmc
sahf
mov
inc
cmc
lahf
inc
jo
jne
pushf
clc
mov
call
xchg
in
adc
jb
mov
sarl
subb
roll
arpl
lods
cmp
imul
push
das
leave
mov
push
pusha
pop
add
push
lret
mov
inc
out
xchg
sbb
xchg
mov
jbe
out
xlat
adc
nop
icebp
stos
lods
add
jmp
rclb
cmp
or
sub
insl
fiaddl
jno
mov
inc
sbb
sbb
outsb
loope
jns
adc
add
mov
pop
fwait
enter
ret
pushf
push
mov
xor
sub
push
adc
fcompl
popf
sub
rclb
jbe
icebp
xchg
jns
mov
pusha
repz
sbb
ret
sub
cltd
cs
sbb
bound
jle
mov
adcl
outsb
pop
outsl
or
loop
cwtl
sub
aad
push
inc
add
arpl
sbb
arpl
push
mov
mov
int3
xor
add
jae
pop
ficoml
push
pop
hlt
sub
fildll
std
shll
shll
aaa
imul
mov
xor
jp
mov
movsb
xchg
loope
jge
movsl
adcb
mov
jbe
cmp
loopne
out
adc
xchg
mov
into
xchg
fnsave
shlb
mov
out
lcall
sbb
lahf
out
push
jnp
inc
xchg
mov
add
dec
imul
jle
adc
dec
and
lods
push
mov
jns
push
sbb
insl
cli
popf
jmp
push
jmp
dec
mov
xchg
inc
sahf
mov
inc
test
inc
mov
add
stos
sti
jae
sahf
add
adcb
rol
stos
mov
mov
shr
xchg
adc
xchg
sti
adc
dec
aad
out
mov
mov
pop
lcall
jmp
xchg
es
cs
mov
mov
inc
xorl
adc
cmp
mov
insl
je
cmp
add
cltd
pop
daa
fsubrs
pop
loop
inc
lret
xor
push
aas
pop
pop
shlb
mov
adc
notl
ret
pop
xor
xor
mov
stos
in
xchg
push
jle
mov
xchg
mov
mul
sbb
mov
lods
rorl
lea
mov
icebp
inc
frstor
test
jbe
xor
jne
leave
pop
sub
xor
dec
pop
cwtl
enter
adc
adc
testl
cmpsb
insl
clc
mov
mov
mov
jno
aam
xor
sub
add
dec
push
pop
sub
mov
cmpsb
push
jmp
das
inc
aaa
sub
dec
dec
push
popf
jg
ficompl
jbe
mov
pop
inc
add
popa
cmp
lods
push
out
out
or
test
cmp
outsl
out
jb
nop
inc
loope
out
je
ret
les
test
scas
stos
pop
jae
ret
pop
hlt
mov
jg
fwait
adc
mov
jmp
and
lea
insb
sbb
bound
mov
ss
cld
nop
inc
into
sbb
cld
pop
cltd
add
jg
sbbl
push
test
lret
mov
add
popa
in
xchg
ja
jmp
andl
lret
sub
es
jo
jno
out
xlat
add
cld
cli
mov
in
or
sti
sub
movsb
xorb
call
mov
cld
cmpsb
or
xchg
jg
dec
xchg
push
jg
xor
decl
pop
pop
lea
lock
stos
iret
mov
sarb
cmp
fwait
addr16
add
movsl
dec
bnd
push
in
or
lahf
cmpsl
shrb
jbe
adc
mov
cmpsl
inc
jae
in
inc
js
inc
enter
or
mov
loopne
mov
ja
xlat
pop
dec
xchg
cvtps2pi
xchg
mov
mov
xchg
int
cld
cmp
xchg
pop
out
repnz
adc
add
sbb
push
mov
pop
loopne
jb
insb
xlat
ds
arpl
in
sub
repz
pop
cmp
in
xchg
push
leave
xchg
in
sbb
xlat
or
dec
pop
and
jg
sti
inc
or
lret
das
sbb
or
jle
push
mov
daa
popf
mov
push
dec
jp
add
les
imull
or
in
xor
jmp
out
mov
inc
lock
imul
arpl
dec
and
jae
andb
das
mov
sub
mov
or
popa
loope
es
cltd
cmp
int
jecxz
data16
into
mov
into
data16
scas
arpl
pop
cli
idivb
dec
iret
sub
pop
loopne
pusha
xchg
cwtl
imul
mov
xor
rol
sbb
push
gs
push
and
add
cltd
rol
mov
xchg
stc
imul
bound
je
fbld
test
xchg
in
insl
popf
pop
icebp
sub
push
in
add
inc
and
mov
add
xchg
pop
sbb
dec
pushf
mov
sub
push
jbe
and
jnp
sub
sbb
cld
int
js
ret
shl
dec
mov
mov
popa
jmp
lcall
sbb
addr16
lret
jno
mov
sub
mov
xchg
insb
out
jl
mov
clc
add
popa
or
ds
push
scas
cmp
cmp
inc
stc
cmp
push
inc
or
mov
push
int3
xorb
fstps
push
fisubrs
xor
stos
and
inc
adc
jnp
pop
repnz
mov
mov
lea
rorl
pop
inc
jb
lock
jnp
test
lret
idivl
test
and
sbb
loopne
mov
cmp
cmp
insl
scas
pop
cmp
adc
pop
fldt
xor
sub
cwtl
inc
xchg
pusha
arpl
jge
mov
loopne
or
pop
out
decl
frstor
stc
add
cld
adc
dec
je
sub
sarb
mov
push
cltd
icebp
jae
repz
inc
and
cmpb
iret
cld
xchg
jmp
jnp
loope
xor
jp
pop
mov
nop
pusha
inc
pusha
push
icebp
xor
icebp
out
xchg
ja
pop
shll
add
leave
dec
cmp
cmp
lahf
cmp
lods
lea
fadds
out
dec
cmp
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
insb
out
dec
cmp
sub
sbb
or
cld
jbe
data16
inc
mov
push
mov
jl
insb
pop
push
dec
cmp
sub
sbb
or
cld
imul
data16
inc
mov
push
mov
jl
outsb
out
dec
ds
cmpsb
pushf
xchg
mov
jbe
int3
xor
mov
jae
inc
int
cltd
icebp
jmp
mov
popf
push
lea
jo
popa
jns
or
hlt
and
and
ror
rcr
jmp
sbbl
adc
jns
daa
add
xor
and
shrl
pop
icebp
jae
xchg
mov
mov
jp
or
jb
push
pop
mov
mov
mov
js
ret
jle
xor
data16
stos
jb
lret
test
mov
cmp
inc
and
mov
sub
sbb
inc
cmp
rolb
or
pop
aam
push
dec
adc
push
shl
std
fs
push
leave
rcr
in
or
test
inc
int3
xchg
icebp
sbb
xchg
and
sub
pop
ds
adc
push
jns
mov
cmp
push
and
imul
shll
pushf
sub
dec
push
fldenv
scas
sbb
adc
add
and
inc
sar
popf
loope
xchg
mov
sub
inc
icebp
jno
popa
inc
adc
and
movsl
leave
test
shrb
hlt
neg
cmp
repz
int3
add
jbe
pop
push
push
mov
test
lret
mov
or
add
pop
inc
jb
popa
dec
ds
cmpsl
mov
rcll
test
inc
pop
jno
popa
jns
or
sbb
sub
cmp
leave
rcr
jmp
sbbl
jno
popa
jns
or
sbb
sub
cmp
leave
les
loop
mov
inc
push
sbb
repnz
cmp
adc
push
mov
mov
lahf
jno
lds
mov
sbb
loopne
insb
mov
lret
push
mov
cmp
adc
push
fidivrl
int3
jmp
pop
cmp
inc
in
shll
push
cwtl
and
adc
imul
xor
xor
lock
je
les
lahf
pop
stos
test
mov
icebp
cmp
fisubl
mov
iret
and
scas
and
xchg
fwait
pop
adc
dec
inc
inc
stos
xor
stos
ret
mov
pop
pop
popf
fsubrs
das
pop
adc
mov
sbb
out
xchg
sub
and
sti
jbe
mov
push
jae
icebp
popf
cmp
lea
mov
jb
mov
mov
cmp
test
ret
or
jne
aam
mov
addr16
and
xchg
rorl
adc
or
mov
push
jae
ds
or
lods
aas
push
filds
outsl
cltd
adc
enter
add
xchg
lock
dec
push
xor
pusha
xor
rcrl
adc
into
cmp
orb
enter
mov
leave
addr16
xor
lahf
lock
dec
adc
mov
push
cltd
fnstenv
sbb
and
mov
mov
jecxz
enter
mov
sub
and
push
sub
sbb
mov
js
adc
push
in
pop
fistl
pop
adc
lcall
cmpsl
pusha
fadds
mov
adc
sbb
enter
or
mov
and
xchg
repnz
mov
jle
jecxz,pn
cwtl
cmpsl
adc
jg
das
insb
incb
ljmp
cli
out
out
mov
push
add
dec
pop
pop
cmpsl
aad
add
outsl
pop
push
inc
mov
adc
int
lcall
xorb
mov
gs
jae
inc
xor
cmp
fwait
push
ret
js
sub
push
jae
out
xor
stos
nop
jb
out
mov
mov
jb
inc
lahf
ljmp
jb
lcall
cmp
cmc
cwtl
sbb
roll
outsl
aam
and
movsb
mov
pop
pop
push
inc
push
dec
sub
bound
pop
push
in
iret
hlt
clc
jg
test
rcrb
out
int3
dec
iret
dec
mov
jnp
pop
movsl
pushf
push
push
mov
jnp
jmp
push
movsb
aad
mov
push
push
arpl
sub
push
int
add
mov
loope
lea
sub
add
aam
dec
ds
pop
fwait
sar
cltd
mov
leave
mov
jns
jl
adc
fbstp
pop
out
cltd
aas
mov
dec
lahf
lcall
jae
imul
insl
stc
pop
mov
mov
mul
push
sbb
loop
push
fs
mov
mov
pushf
lods
popa
fidivrl
sahf
push
gs
mov
mov
sub
pop
push
sub
cmp
mov
daa
cmpsl
jge
adc
pop
pop
mov
aaa
pop
push
lahf
jp
push
pushf
push
ja
lods
stc
mov
jle,pn
xlat
jb
xchg
cwtl
jl
mov
add
dec
jbe
push
addr16
mov
pop
inc
pop
inc
fidivrl
mov
shrb
rcll
data16
sbb
mov
mov
jg
xchg
or
mov
mov
pop
lds
out
lods
cmp
rorl
dec
mov
insl
add
mov
sarl
mov
push
mov
andb
sub
adc
push
jle
inc
es
lock
stos
jmp
sbb
push
adc
mov
loop
outsb
hlt
push
jg
cmc
int
sbb
lods
pop
das
aam
hlt
mov
ret
in
lret
push
popa
cmp
test
cmp
xor
or
pusha
movb
jmp
jns
inc
mov
in
and
mov
push
std
push
xor
ja
sbb
das
testl
jne
in
fidivrl
or
jmp
inc
mov
and
mov
jl
je
shll
out
sub
jae
stos
loopne
int3
lds
incb
add
nop
clc
rol
insl
push
stc
jecxz
negl
out
out
lea
stos
inc
mov
stc
mov
and
punpckldq
mov
js
mov
and
push
fs
xchg
fisubl
mov
movsl
cmp
leave
cmc
lock
lcall
testl
dec
pop
pop
inc
out
mov
mov
ds
filds
pop
clc
sub
addr16
cmp
dec
fildll
lahf
das
cltd
inc
test
popa
mov
iret
mov
inc
add
stos
xchg
icebp
roll
mov
mov
xchg
ja
pop
add
add
and
stc
and
shlb
cmp
ja
movsl
pushf
mov
test
sub
pop
xchg
shll
sbb
mov
push
jnp
std
imul
sar
mov
cmc
jne
adc
jne
xor
call
xor
mov
icebp
or
je
addl
std
iret
loop
xor
xor
mov
cs
or
xor
inc
push
cmp
mov
scas
imul
imul
push
jbe
cmp
das
dec
xor
mov
testb
cmp
out
jb
push
leave
int3
scas
ja
outsb
push
cmp
xchg
or
pop
mov
jno
mov
inc
ja
test
xlat
lahf
aas
in
inc
dec
mov
sarb
daa
in
mov
adc
call
sbb
pusha
ljmp
pop
hlt
mov
sbb
addr16
mov
int
mov
dec
add
aas
adc
stos
popa
adc
call
mov
ss
aaa
ljmp
pop
jle
out
mov
push
push
fildl
push
into
mov
inc
rcrl
cmp
enter
lret
cmpsl
gs
rcl
pop
jne
inc
sub
in
ljmp
mov
int3
cmpsl
enter
jno
shrl
in
push
pop
cwtl
sbb
test
call
pop
out
cmp
cld
push
and
mov
repz
sub
inc
push
sbb
dec
nop
std
pop
or
repz
xchg
insl
pop
jp
cmp
scas
test
lds
imul
std
cmp
lock
xlat
stos
or
mov
out
mov
mov
cli
pop
outsb
and
scas
dec
mov
jae
add
shl
lock
fcmovbe
sub
mov
aaa
ret
fcmovu
pop
imulb
mov
jnp
pop
test
bswap
and
jnp
stos
sbb
aam
mov
adc
mull
jge
out
loop
dec
mov
ss
inc
gs
add
sbb
mov
cmpsl
mov
mov
xchg
cmc
loopne
popa
dec
mov
sub
xchg
xor
hlt
inc
pop
sbb
xlat
cmpsl
cmc
lods
add
xchg
cmp
mov
sub
insb
jnp
cmpb
inc
inc
adc
subl
dec
sti
push
jae
loope
sarb
cs
subl
push
inc
xor
outsl
mov
rol
call
test
repnz
push
sahf
es
jl
cmp
cli
int3
and
inc
push
nop
dec
push
or
add
cld
stos
xchg
in
push
scas
add
insb
and
je
sbb
daa
mov
mov
std
push
mov
lods
pop
adc
enter
adc
stos
fucomp
adc
mov
pop
lcall
pop
jbe
ss
orb
aad
jp
imul
mov
icebp
xor
mov
aad
jbe
fiadds
sbb
adc
cmp
mov
bound
xlat
push
sbb
mov
data16
clc
push
add
icebp
cli
shll
mov
push
sarl
adc
sub
mov
xchg
adc
add
int3
fldl
sahf
push
mov
jbe
cltd
insl
insb
add
sub
cld
xor
dec
mov
adc
divb
out
ss
inc
mov
mov
hlt
imul
cs
js
inc
lret
std
mov
sub
mov
pop
testb
xchg
gs
popa
rclb
in
insb
mov
icebp
mov
adc
pop
sub
jle
mov
inc
sbb
adcb
cmpsb
cmpsl
cld
jnp
inc
adc
or
dec
dec
pop
stos
movsl
and
push
mov
fwait
pop
ljmp
and
add
out
pushf
pop
test
fsubs
test
data16
pop
push
xor
sbb
mov
lods
pop
pop
sahf
lahf
js
inc
push
xchg
clc
cmp
inc
push
xchg
loope
or
aad
jns
ljmp
or
inc
sbb
mov
icebp
pushf
in
out
lock
test
add
cmp
out
mov
push
nop
cmpb
paddsw
idivl
pop
sbb
test
cs
pop
shlb
jl
repnz
iret
pop
andb
pop
pop
jle
dec
pop
call
pop
xchg
lods
pop
cmpl
out
jae
call
adc
in
loopne
cmp
mov
int
cmp
in
adc
sarb
mov
xor
jne
adc
orl
pop
mov
dec
ds
mov
outsb
jecxz
inc
cmp
dec
leave
sub
xor
in
cmp
lret
pushf
cltd
repnz
dec
stos
jg
xor
jmp
jmp
or
or
std
call
mov
inc
mov
and
mov
into
nop
subl
mov
add
pop
pop
shrl
addr16
adc
mov
fwait
or
push
js
dec
dec
mov
daa
xchg
test
fldenv
jno
push
movsl
inc
daa
stos
xchg
mov
imul
out
pop
and
out
or
in
xor
mov
in
cmp
push
xlat
cmpb
cmp
imulb
sbb
ret
jne
pop
add
leave
ficomps
cwtl
es
push
mov
int
out
pop
and
outsb
out
and
out
dec
jg
ret
push
aaa
jns
jae
imul
dec
cli
mov
xor
sbb
shlb
or
loope
test
dec
pop
dec
fstpl
scas
and
repz
adc
mov
adc
xchg
icebp
insl
ds
enter
pusha
or
jmp
enter
loop
fscale
shlb
jb
std
sub
cmp
mov
cmc
inc
or
xor
fldenv
inc
and
or
xchg
aas
loopne
or
sub
hlt
or
sahf
rorl
push
icebp
pop
hlt
in
add
fistl
dec
popa
mov
xchg
mov
stos
movsb
xor
jns
out
out
xchg
aad
push
out
jecxz
pop
or
imul
shrl
or
aam
dec
add
cmp
mov
sub
sbb
loop
add
xor
popw
int3
notl
lret
xor
cmpsb
fndisi(8087
mov
lea
sahf
jno
jg
loope
dec
cmpsb
call
fldl
push
dec
mov
jg,pt
push
and
mov
dec
test
cmp
inc
mov
fnstcw
xor
mov
mov
lods
lret
push
mov
dec
loopne
dec
pop
in
lret
jg
dec
pop
mov
add
arpl
mov
icebp
push
movsb
sti
xor
push
push
cld
dec
jmp
and
data16
aad
ret
and
aad
out
mov
or
movsl
int3
jecxz
aaa
stos
int
rolb
mov
cmc
adc
loopne
shlb
mov
sub
dec
ret
xor
xor
in
fnstsw
mov
and
mov
imul
adc
scas
push
lcall
rorb
std
jmp
stos
mov
and
sub
enter
rcrb
les
adc
repz
icebp
add
mov
inc
xor
push
dec
pop
xor
stos
pushf
push
and
test
jns
add
arpl
rcr
sbb
adc
pop
cltd
sarb
mov
pop
ficompl
and
mov
xor
xchg
call
inc
pushf
pop
cmp
cmpl
inc
ss
cmpsl
cltd
jge
jmp
subb
mov
cld
in
push
clc
sbb
push
sbb
sti
lods
in
push
pop
add
jmp
xchg
sbb
mov
bound
jecxz
cmpsb
dec
cli
or
insl
cli
mov
mov
sbb
dec
dec
and
shll
sahf
jmp
push
out
les
imul
jbe
push
sbb
outsl
mov
cltd
dec
clc
jbe
pop
lcall
lds
aas
das
or
ret
add
xchg
lods
test
mov
inc
mov
test
popl
out
icebp
push
jg
jle
xor
mov
inc
pusha
push
push
dec
addr16
mov
inc
jno
shr
xchg
pop
jbe
xor
subb
xchg
sbb
mov
xchg
sbb
cmp
imul
add
rclb
add
xchg
push
adc
divb
cmpsl
xor
xor
push
cmpsl
sbb
mov
pop
mov
cmp
mov
mov
sub
mov
sbb
test
inc
shll
decl
mov
mov
add
sub
pop
rorb
shl
aas
fdivs
into
sub
sbbl
sbb
xorl
inc
xchg
lcall
mov
mov
test
sahf
incb
jb
cmpsl
push
or
test
push
sbb
mov
idivl
in
or
mov
adc
xorl
mov
adc
push
arpl
mov
repnz
iret
aaa
cltd
and
outsb
daa
cmp
and
ss
jo
pop
add
or
out
xorl
sahf
insb
xor
xchg
dec
push
out
pusha
dec
cmc
loope
enter
stc
lods
cmp
sub
outsl
push
push
aad
and
imulb
repz
imulb
loopne
jl
fwait
jno
cs
jns
shrl
pop
pop
and
inc
xchg
mov
or
dec
push
in
popf
nop
xor
rolb
push
fildl
stc
icebp
js
in
int3
sub
adc
mov
bound
and
xchg
int
test
push
add
xchg
mov
imul
insl
xlat
aam
movsl
add
add
xlat
insb
fcoms
into
inc
out
in
enter
cmp
jbe
xchg
into
arpl
aaa
push
call
sub
in
adc
outsl
outsl
lahf
out
int
push
sbb
out
cmpsl
pop
pop
sbb
pop
mov
sub
rcll
jnp
sbb
add
clc
pop
xor
loope
and
shr
arpl
or
filds
hlt
mov
dec
into
sbb
cmp
sti
fcoml
push
pop
mov
jb
mov
sbb
xor
loop
xchg
mov
stos
loop
cmp
movsl
movb
lahf
jmp
arpl
mov
imul
jle
in
inc
xchg
ret
mov
mov
mov
mov
or
imul
loop
push
cmp
inc
scas
sbb
add
push
jb
jmp
xchg
cmpl
outsl
adc
lea
fsubrs
pop
lret
fsubp
or
mov
fsubrp
icebp
or
in
or
loop
xchg
pop
pop
push
divl
mov
lret
mov
jns
in
repnz
dec
sub
jae
mov
add
test
or
fldl
xor
push
inc
sub
xchg
pop
cmpsb
ja
jns
dec
add
data16
mov
scas
insl
pop
ja
aad
xlat
xchg
dec
std
cmc
mov
ja
jg
push
nop
lods
jmp
in
pop
lahf
outsb
mov
in
sbb
xor
mov
xchg
add
dec
jo
and
inc
xchg
cmp
cwtl
add
add
add
roll
lret
mov
in
inc
mov
jnp
push
inc
pop
insb
or
xchg
arpl
push
fucomp
sub
shl
orl
dec
loope
fcmove
rcll
xchg
and
sti
insl
mov
mov
leave
sub
scas
in
push
adcb
int3
lret
inc
cmp
stos
test
mov
cs
leave
mov
in
int3
pop
aas
das
ds
loopne
xorb
cmp
popa
repz
or
lcall
mov
mov
stc
cmp
mov
insb
mov
js
cmpsb
mov
sahf
cli
pusha
stos
scas
movsb
dec
and
add
xor
jl
push
daa
mov
call
js
cwtl
push
dec
ljmp
add
sub
out
mov
or
frstor
sub
test
dec
in
inc
test
imul
xchg
lods
cmp
xor
icebp
cmp
arpl
out
pop
push
pop
pop
inc
mov
jp
les
adc
push
push
out
add
sbb
ficoml
mov
inc
pop
add
notl
jnp
dec
xorl
xchg
aaa
dec
cmp
adc
push
adc
flds
aas
sub
push
mov
dec
bound
outsl
jmp
js
mov
push
push
outsl
pop
std
cmp
rclb
aad
cmp
int
imul
movsl
aam
repnz
pop
cmp
into
push
insb
cmp
or
cmp
pop
adc
xor
and
mov
pop
xchg
dec
push
xor
dec
jmp
sarb
cmp
clc
mov
sbb
jae
fnsave
insl
mov
pop
mov
xor
fmull
pop
call
jns
mov
rolb
dec
fucomi
pop
ficompl
lret
jbe
shrl
roll
dec
lcall
rcrl
popf
int3
sbbb
mov
insl
fcomps
iret
cwtl
push
rorl
jns
fildl
mov
mov
and
fcmovbe
or
cli
pusha
pushf
xor
inc
into
in
ret
andl
lods
xlat
imul
push
je
ljmp
frstor
test
mov
xor
push
lahf
xchg
xlat
aad
scas
fwait
jle
xchg
and
push
cmpsl
mov
out
sub
adc
mov
xchg
iret
push
movl
mov
jmp
sub
xchg
ret
jb
sbb
cmpsl
inc
push
sbb
and
and
sbb
add
inc
and
lods
dec
iret
xor
test
mov
aam
rol
shrl
mov
pop
mov
seto
test
in
dec
call
xchg
add
jp
inc
popa
icebp
cltd
es
jle
test
popf
or
jge
jbe
xchg
call
cmpsb
mov
xor
push
xor
in
out
inc
imul
push
mov
repnz
xor
xor
fnstenv
enter
add
cmp
scas
imul
and
scas
jl
xchg
inc
mov
push
fists
into
into
adc
jg
in
adc
or
sahf
mov
jne
and
push
or
add
inc
jae
in
data16
sub
lret
push
outsb
outsl
nop
mov
adc
pushf
push
jp
inc
jg
aam
cwtl
lret
xlat
pop
sub
popa
cmp
mov
movsb
or
fisubrl
call
shlb
es
cltd
push
into
cli
mov
jmp
test
clc
cmp
int3
pop
lods
cmp
js
jb
add
jp
sub
je
xchg
inc
push
movsl
aaa
lret
inc
stos
fmul
pop
xchg
push
insl
arpl
mov
or
adc
and
mov
pop
test
adc
test
xchg
push
mov
xchg
pop
mov
inc
mov
push
cld
sarb
insl
mov
xchg
out
jmp
addb
call
mov
fs
jecxz
in
lahf
int3
call
mov
call
jge
pop
xchg
int3
aam
jae
cmp
loopne
xor
pop
and
loop
jp
stc
fldenv
inc
mov
ss
cmp
and
mov
sbb
leave
nop
lods
in
jns,pn
or
ljmp
jp
xor
pop
push
jp
lods
mov
shll
lahf
or
xchg
pop
mov
test
pop
pusha
flds
mov
sub
aam
mov
cmpsb
stos
pushf
enter
jbe
sbb
dec
fwait
mov
popa
dec
mov
addr16
xlat
mov
pop
pushf
dec
xchg
sub
inc
inc
jae
xchg
pop
gs
or
inc
hlt
stos
add
std
add
das
loop
aaa
jmp
cmpsb
scas
mov
or
sti
mov
sub
in
dec
adc
in
loope
xchg
mov
mov
jno
popa
jns
or
sbb
sub
cmp
leave
rcr
jmp
sbbl
jno
popa
jns
or
sbb
sub
cmp
int
xlat
icebp
icebp
loope
xchg
mov
mov
jno
popa
jo
or
and
shrb
loope
xchg
mov
jns
mov
repz
push
data16
popa
into
push
fiadds
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jae
rcrl
rorl
push
xchg
xlat
adc
add
or
add
add
add
add
add
add
dec
add
add
add
add
pop
add
jl
inc
add
add
add
add
add
add
test
pop
add
add
push
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
sub
push
add
add
add
add
add
incl
out
and
add
cmp
adc
xchg
add
add
add
add
add
add
add
add
add
add
add
xor
rolb
adc
xchg
add
pop
add
add
jb
in
add
add
add
dec
add
rolb
roll
add
add
add
aaa
add
mov
add
add
add
add
lcall
add
xchg
add
add
add
pop
add
inc
add
aaa
add
add
add
add
add
add
add
add
and
or
add
add
add
add
add
add
dec
add
add
add
add
roll
mov
and
aam
add
int
inc
add
add
cmp
lret
add
add
test
cmp
inc
add
add
add
add
add
add
add
mov
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
roll
adc
inc
add
add
add
add
add
xor
mov
add
add
add
add
inc
add
push
add
aam
aas
add
add
sub
add
add
add
sti
add
sbb
add
and
jae
push
add
add
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
sub
add
add
lcall
add
add
add
sub
add
add
add
add
add
test
rolb
js
pop
add
add
add
adc
icebp
add
xor
daa
add
add
add
add
add
add
das
add
add
add
xchg
add
add
add
add
jo
out
add
add
movsl
add
xchg
add
pop
add
testl
adc
popf
add
add
sub
add
add
add
incb
mov
testl
icebp
add
add
add
daa
add
add
add
add
cmpsb
add
pop
add
add
add
add
jge
and
push
add
add
add
add
add
add
add
data16
add
add
add
pop
add
and
add
xchg
add
repz
add
add
add
inc
add
add
push
add
add
add
add
add
add
lcall
add
add
jae
sbb
mov
test
pop
divb
jle
mov
adc
push
inc
push
imulb
add
pusha
arpl
les
mov
loop
decb
mov
inc
inc
mov
jno,pn
fmulp
imul
xor
test
dec
inc
iret
xchg
negl
dec
cmp
test
inc
sub
mov
jmp
shll
js
and
mov
inc
inc
dec
jp
gs
jmp
xchg
aaa
and
xchg
pop
call
icebp
dec
add
lds
push
ret
mov
fstpt
ja
scas
fdivrs
fs
push
xor
or
push
xchg
and
test
and
add
jae
imul
inc
imul
fidivrs
cmp
adc
mov
xchg
xor
pushf
lret
in
sbb
jo
jecxz
outsl
xchg
push
mov
dec
jno
lahf
or
enter
fmuls
inc
cmp
lods
aas
inc
ds
xor
inc
cmp
mov
push
es
xor
jle
inc
xor
ja
repnz
xchg
test
mov
adc
xor
int3
mov
aaa
repz
cmp
xchg
mov
sub
out
dec
jp
lret
fwait
xchg
out
notw
lcall
adc
xchg
fldt
or
movb
in
lret
lcall
ret
dec
inc
mov
lock
stc
xchg
aam
cmpsb
sub
int
push
cmp
in
leave
xchg
pop
jl
dec
movsl
sub
lret
xor
dec
orl
add
cli
test
ja
popf
aam
and
cmp
jmp
xchg
jl
push
lods
and
xchg
pop
rcll
aaa
mov
or
adc
and
dec
rol
mov
test
cmc
mov
sbb
jmp
jno
xchg
xor
das
or
pop
push
push
fisttpll
loopne
fcompp
les
mov
pop
mov
roll
and
in
sahf
push
negl
mov
imul
jge
add
sbb
inc
std
push
aad
out
data16
test
das
fstps
mov
data16
mov
ja
and
push
cli
jl
and
xchg
pop
cltd
and
in
add
or
mov
mov
dec
or
inc
in
arpl
gs
ret
pop
dec
mov
xlat
pop
pusha
and
sbb
cmpsl
inc
loope
inc
add
pushf
xchg
in
pop
mov
rcrb
jnp
jb
insl
push
sbb
mov
ret
popf
jne
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
