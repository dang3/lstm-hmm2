call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
filds
jne
gs
sbb
jne
push
lahf
inc
scas
aad
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
filds
jne
gs
adc
mov
lds
jg
outsl
xchg
jae
lgs
movsl
das
push
filds
jne
gs
adc
mov
lds
lret
push
std
dec
out
sti
push
lret
pop
sbb
inc
xchg
xchg
pop
out
push
mov
fisubs
mov
mov
push
pop
xchg
pop
cmp
inc
andb
or
mov
movsl
and
jmp
js
pusha
or
nop
mov
pop
jle
ret
in
jmp
dec
dec
lret
cli
aad
scas
ret
aas
xor
mov
inc
jmp
xlat
in
adc
aad
push
aad
aad
js
ret
imul
icebp
mov
cmpsl
cs
stos
xor
scas
pop
push
push
xor
and
lds
insb
imul
xchg
push
aas
mov
stos
pop
jge
xor
test
lret
ljmp
mov
pop
mov
int
or
inc
iret
jne
gs
adc
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
inc
adc
sub
adc
add
jns
dec
out
stc
fs
xchg
rorl
mov
lock
in
push
inc
icebp
popa
push
mov
add
push
repz
mov
ss
mov
push
imul
mov
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
filds
jne
gs
adc
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
fnstsw
cmpsl
into
adc
iret
jmp
pusha
mov
cmp
mov
aas
mov
sbb
xor
je
cmp
fidivrl
mov
scas
mov
mov
adc
xor
jp
cmp
sbb
cltd
mov
cwtl
or
cltd
les
pushf
mul
push
aam
aad
jo
cmp
flds
pop
lret
repz
pop
push
ret
cmpsl
dec
xor
popf
mov
ror
insl
scas
cmp
enter
mov
movsb
loope
cld
enter
push
mov
push
push
sub
arpl
mov
fildl
sub
pop
push
lret
daa
mov
mov
xchg
jg
pop
pop
in
movsl
enter
mov
pusha
insb
and
xchg
cmpsb
fwait
test
mov
incb
push
xor
bnd
ja
cmc
mov
repz
aam
pop
xor
jnp
mov
idivl
pop
jecxz
fcmovne
jb
outsb
and
test
outsb
push
add
or
scas
xor
dec
xlat
push
xchg
jl
or
clc
aad
push
lock
jns
jbe
out
add
mov
adcb
loopne
xorb
cld
dec
sarl
lret
mov
imul
ljmp
test
test
addr16
mov
dec
push
shr
orb
mov
push
aad
adc
inc
fistl
stos
rcrb
lahf
and
sub
pop
popa
pop
bound
sbb
fstps
sbb
in
pop
bound
adc
ret
insl
test
movsl
pop
inc
pop
mov
mov
aad
popa
loopne
icebp
pop
in
and
lods
mov
jecxz
loop
subb
sar
dec
das
in
cwtl
insb
rolb
and
jg
icebp
ds
or
ret
add
push
dec
out
inc
cld
lret
loopne
fdivl
inc
lcall
iret
xor
dec
adc
sti
push
pop
arpl
gs
lea
cld
xchg
jecxz
push
jnp
sbb
imul
pop
jne
pop
dec
inc
and
inc
adc
mov
gs
jnp
in
mov
xchg
xchg
pop
mov
gs
push
inc
insl
pop
xchg
push
pop
jnp
aaa
fwait
fwait
data16
cmp
mov
aaa
data16
int
aas
in
fcmovb
add
pop
adc
mov
push
fstpt
jp
imulb
adc
bound
mov
pop
lret
add
cmp
into
dec
mov
bound
pop
add
out
lods
in
jae
push
mov
jns
add
cmpsb
pop
fisubl
xchg
mov
sti
or
and
pop
repnz
inc
mov
fnsave
dec
bound
mov
jns
adc
lods
pop
xchg
fs
pop
and
mov
insb
sub
cmp
outsb
mov
hlt
mov
inc
sub
pushf
imul
ss
cmp
sub
daa
xor
sbb
push
in
pop
test
sub
out
popf
sub
orw
cmpsl
pop
push
ror
pusha
inc
dec
push
mov
fsubrs
jle
mov
jl
push
ret
mov
jb
hlt
xchg
sti
and
shl
pop
aas
es
mov
mov
lcall
sbb
stos
shll
jae
cs
shll
or
jno
push
sub
mul
jo
push
mov
push
cli
xchg
adc
loop
loope
adc
mov
shll
mov
jmp
push
popa
loopne
in
jge
dec
xchg
or
clc
mov
xchg
push
jecxz
aas
fcoms
testl
or
adc
fisttpll
or
sbb
pop
divb
dec
pop
movsb
aam
dec
jno
add
lods
jne
fldl
cmp
ret
nop
fldt
sahf
mov
add
out
cmpsb
mov
lods
aaa
xacquire
rcll
sub
jb
mov
jns
cmp
mov
push
cmp
jle
pop
gs
xlat
adc
mov
call
dec
push
hlt
mov
insb
mov
pop
shrl
xchg
sub
add
jo
dec
addr16
negb
clc
inc
xchg
into
test
ret
aad
lods
adc
ret
movsb
push
out
xchg
mov
sub
fnstsw
pop
or
ljmp
daa
add
xor
adc
cmpsl
add
mov
xorb
sbb
std
lret
xor
and
flds
push
shll
xchg
xor
ja
test
and
outsl
jnp
push
data16
in
push
cpuid
loope
jbe
mov
and
daa
das
ret
mov
push
mov
jmp
cmpsl
int
pop
adc
insb
push
jge
cmp
bnd
test
sub
gs
lret
subb
adc
push
or
cmp
adc
adc
roll
inc
adc
add
jnp
fwait
mov
mov
ret
enter
dec
outsb
mov
xor
fsts
inc
cld
repz
jae
fildl
shld
dec
mov
int
mov
mov
jbe
sbb
pushf
js
rorb
int
xchg
push
dec
imul
negb
pop
popf
cwtl
push
add
mov
jo
lahf
mov
push
dec
pusha
mov
sub
sar
daa
in
mov
xor
pop
ret
mov
outsl
fmuls
int3
out
ret
pushf
hlt
inc
or
ds
xchg
sub
loopne
mov
imul
push
fimull
nop
dec
mov
sub
out
popa
and
add
xor
fidivrl
inc
cmp
cli
inc
push
fcmovbe
or
ret
mov
popa
push
hlt
sti
ljmp
test
sbb
push
push
and
jl
loop
mov
es
test
push
jmp
ret
push
cmc
fbld
fs
pusha
and
stos
aas
push
addb
pop
pop
ret
xchg
ds
jno
fisubrs
sti
js
or
hlt
jbe
and
repnz
push
outsb
pusha
mov
dec
pop
cmp
fbld
inc
cmp
rcrb
mov
popf
fimull
test
ss
inc
sub
pop
mov
cmp
xchg
subl
sub
aas
cmp
in
jmp
orb
addb
mov
add
xchg
push
push
pop
sub
out
mov
and
jnp
mov
test
lock
jb
xor
mov
inc
les
inc
mov
pop
shr
call
in
pop
xor
xchg
int3
cmp
std
shl
aad
dec
fcompl
faddl
scas
pop
xchg
fwait
pop
jne
xor
sub
fs
inc
notl
push
leave
dec
push
mov
je
xchg
pop
adc
loop
mov
bnd
pop
std
xorl
btc
sbb
jnp
mov
not
shll
arpl
in
mov
pop
das
aam
add
fsubrl
or
xor
mov
and
xchg
inc
lods
shr
push
negb
or
xchg
push
push
mov
mov
inc
mov
pop
cs
loopne
pop
in
pop
pop
stos
and
lret
loop
out
add
pop
xchg
mov
fadd
dec
inc
jnp
into
add
aaa
dec
std
jbe
das
adc
and
das
jecxz
adc
mov
stc
and
or
jmp
sub
outsl
shll
mov
and
fcmovnu
test
ret
cld
and
mov
xchg
loop
insl
push
stos
mov
mov
shr
push
cli
cmpsl
sbb
adc
sub
add
ret
or
lods
cmp
xchg
mov
decb
popa
or
add
inc
subl
push
mulb
leave
inc
xchg
adc
sub
dec
or
movsl
mov
dec
loopne
cmp
int3
fildll
fstpl
lods
cmc
pop
mov
dec
lret
js
lcall
enter
imul
out
decb
adc
dec
idivl
ds
sub
mov
in
push
sar
stc
movsb
jb
mov
lahf
xor
lods
pop
icebp
movsl
cmpsl
sbb
in
adc
and
mov
pop
mov
inc
mov
push
pop
out
pusha
mov
divl
jge
sub
jnp
jno
push
jmp
sbb
rcll
fxam
out
add
test
sahf
xchg
int3
ret
push
push
fidivrs
sti
ja
outsl
pop
inc
push
mov
push
scas
jae
addr16
dec
fldl
mov
dec
add
xchg
out
test
jo
pop
add
es
pop
out
jns
cmpsl
inc
sub
out
and
fidivl
adc
pop
mov
insb
sahf
sub
icebp
xchg
sbb
orl
and
xchg
daa
or
sub
inc
imul
sbb
push
add
stos
daa
mov
pop
cmp
nop
stos
shll
outsb
sbb
mov
push
and
cmp
scas
aaa
sti
leave
pusha
jmp
dec
cmp
rorl
or
xchg
xchg
add
and
ss
jg
test
popa
push
sbb
dec
leave
cwtl
mov
add
mov
adc
mov
jecxz
adc
jp
mov
dec
das
bnd
rorb
sbb
cmp
pop
je
push
fisttpll
cltd
loope
xlat
mov
lock
insb
mov
cltd
icebp
sub
jbe
inc
cmc
pop
push
mov
inc
popf
inc
lret
lds
xor
xor
pop
mov
or
dec
ffree
out
mov
jge
and
push
repz
jns
xlat
fnstsw
pop
push
in
add
aas
mov
ss
lods
in
and
aad
or
cmp
mov
dec
dec
inc
adc
rcrl
pop
test
xchg
out
loopne
bound
sub
ret
cmp
pop
add
es
lods
stc
sti
push
mov
test
mov
adc
cld
subl
mov
inc
xor
cmp
pop
xchg
popf
push
inc
fwait
std
mov
xchg
cs
out
inc
and
ss
jnp
mov
dec
cmpsb
mov
loop
jns
mov
insl
stos
sti
out
and
add
mov
adc
pop
jnp
imul
jg
jno
pop
aad
xchg
cld
xor
push
xor
mov
adc
lock
push
adc
and
jmp
inc
pop
insb
movsb
ret
mov
insl
fbstp
cltd
xchg
sbb
cmp
jle
mov
lret
and
push
das
mov
fwait
mov
imul
sahf
ficoml
adc
aas
imul
jno
shr
sbb
icebp
sub
mov
push
lds
mov
insb
insb
outsl
ja
mov
sub
lret
gs
jle
inc
addb
cmc
pop
shrl
dec
sahf
rcrl
aam
xchg
or
dec
bound
incl
gs
mov
inc
bound
es
frstpm(287
repz
mov
jge
outsb
mov
xchg
adc
push
xchg
jecxz
lcall
add
mov
or
loop
sbb
or
popa
or
mov
leave
nop
fwait
clc
cli
or
lds
fwait
cmpsl
shl
push
out
dec
in
mov
stos
xchg
outsl
mov
pusha
and
pop
into
ficoml
cmp
xchg
mov
mov
out
pop
or
fsubr
fldenv
mov
pop
dec
fists
push
jmp
ljmp
out
mov
imul
mov
fadds
pop
push
fcompp
lods
mov
xchg
push
mov
mov
pushf
cmp
hlt
addr16
dec
mov
insb
push
aam
aaa
aas
iret
jne
out
hlt
or
lods
push
push
scas
cwtl
movsb
inc
push
jmp
push
and
or
and
and
int3
nop
sbb
in
xchg
faddl
scas
aas
lock
and
fimuls
mov
cltd
and
lds
mov
mov
jne
pop
insb
or
filds
lds
lods
jg
or
decl
stos
mov
data16
je
leave
push
jno
outsb
sbb
stc
or
cmp
xchg
int
inc
int
in
stos
lock
mov
xorb
push
dec
push
fcmovbe
fbstp
outsb
sbb
mov
sbb
js
and
add
pop
xor
out
mov
repz
leave
dec
arpl
cmp
mov
ficompl
mov
aad
imul
aad
aad
iret
pop
aad
xor
inc
mov
adc
lahf
fisttpll
arpl
ds
jge
stc
cmp
adc
fs
insb
rolb
mov
adc
cli
pop
rcr
pop
cmp
jl
xor
sbb
mov
or
pop
data16
adc
lret
jg
mov
dec
xor
pop
mov
mov
lods
das
imul
sbb
push
adc
fsts
aaa
mov
sbb
fdivl
out
mov
sub
jno
inc
adc
dec
jb
and
out
hlt
loop
pop
sti
push
mov
sub
push
bound
and
stos
rorl
hlt
lcall
cmp
aaa
mov
mov
mov
hlt
xor
js
dec
push
and
mov
shrl
inc
add
push
xor
out
adc
mov
cs
cmpsl
repz
push
and
xorb
pop
xor
pop
pop
xor
mov
mov
xor
xchg
jle
iret
fildl
daa
xor
jmp
push
and
std
add
call
cs
repnz
mov
call
arpl
jecxz
sbb
jo
scas
in
or
ljmp
mov
cmc
loope
dec
cmp
aas
mov
mov
data16
xchg
inc
cli
hlt
sub
cmp
push
push
addr16
jno
mov
cmpsl
pushf
push
popf
mov
insl
mov
pop
adc
out
or
fists
in
shrb
xor
xchg
imul
jns
inc
jl
lds
adcb
cwtl
dec
mov
vmread
sub
lret
add
or
xchg
adc
shl
and
cmp
test
and
pop
push
scas
cmc
mov
xor
mov
add
orl
adc
inc
push
and
dec
mov
or
inc
pop
popf
push
sub
add
mov
xor
cli
mov
pop
test
dec
pop
xor
hlt
add
mov
fcomps
enter
nop
push
pop
xlat
jbe
loop
mov
dec
mov
test
cwtl
mov
outsb
scas
sub
mov
add
sub
mov
das
jns
jg
fbstp
loope
xchg
jbe
push
stc
adc
dec
clc
xor
or
adc
and
xchg
inc
inc
mov
xchg
into
and
xchg
or
mov
scas
mov
and
mov
cld
xchg
sbb
aam
out
into
cmp
adc
insl
push
cmpsl
push
faddl
lahf
sahf
cltd
sbb
mov
pop
mov
add
nop
jns
cmpsb
push
fsubr
pushf
mov
iret
pop
cmpsl
pusha
leave
sub
arpl
into
jae
sub
xchg
adc
jns
inc
push
lock
jo
xchg
mov
and
xchg
nop
adc
das
ds
mov
aad
push
pop
mov
sbb
pop
sub
sub
aaa
push
scas
gs
dec
mov
testb
fdivrl
je
jno
add
in
enter
and
les
adc
ljmp
popa
out
clc
add
iret
out
inc
and
inc
lea
mov
movsb
inc
jno
dec
enter
lods
data16
popa
inc
ja
push
sub
inc
fmul
jle
movsb
lret
and
shr
push
stc
xor
gs
fistps
mov
fdivl
rolb
ds
pop
jge
jecxz
daa
sbb
lcall
or
aam
std
dec
jp
cmp
lret
sbb
dec
adc
pop
hlt
leave
push
mov
xlat
loop
push
int3
mov
int
cmpsb
scas
test
jge
jno
pop
jge
sub
mov
cmpsb
jae
stc
rolb
movsl
jl
repnz
hlt
mov
xlat
fbld
sbb
rclb
mov
xchg
test
cs
cwtl
or
and
ja
shr
ds
fnsave
test
nop
jo
sub
mov
cmp
call
mov
lock
jmp
jecxz
cmp
nop
mov
mov
xor
mov
add
fs
sub
pop
inc
xchg
mov
mov
push
jg
inc
repz
repnz
mov
sub
inc
stos
nop
movb
aad
out
and
push
ds
dec
or
push
push
out
pop
std
xor
arpl
mov
xor
mov
cmpsb
pop
ljmp
loope
outsb
std
stos
inc
std
test
push
mov
mov
or
sbb
subl
adc
out
fcmovnu
mov
inc
add
testb
gs
jo
std
mov
cli
adc
push
add
or
push
out
mov
divl
fildl
dec
or
repz
dec
inc
xchg
in
pop
jle
es
out
mov
dec
dec
and
mov
xor
jno
add
pop
je
push
data16
mov
fmull
xchg
push
sahf
ss
mov
lds
rcrl
xchg
mov
icebp
mov
mov
out
push
lret
dec
inc
inc
out
jbe
jge
jne
loopne
lret
cmp
lea
xchg
xor
inc
repnz
mov
push
movsb
in
adc
pushl
fldcw
add
adc
imul
divb
jbe
fcmovnu
gs
std
imul
clc
add
jne
mov
out
mov
pushf
mov
mov
jae
in
ret
stos
mov
push
xor
and
stos
cmp
push
jge
mov
insl
lock
xor
xor
or
push
lret
mov
mov
mov
icebp
jmp
push
lods
cmp
daa
or
aam
ret
test
daa
cltd
or
xlat
add
rol
pusha
mov
add
pop
enter
mov
cwtl
outsb
in
mov
psubsw
sbb
xor
sub
test
or
ror
pop
insl
push
xor
adc
mov
inc
pop
lahf
pop
popf
adc
sub
push
sbb
pop
or
and
cmp
xor
cli
push
lock
loope
in
add
cmpb
xchg
data16
shr
push
clc
xor
push
call
pop
inc
mov
xor
imul
jns
test
mov
aad
push
fdivrl
cs
jns
inc
mov
int3
jns
add
jb
andl
lcall
xchg
mov
mov
aaa
test
jne
incl
enter
push
xlat
or
lahf
mov
je
lock
jno
jae
test
shrb
pop
jns
jo
jge
mov
lret
xchg
pop
pop
or
push
out
mov
je
xor
jp
lcall
jb
fisttps
fstps
fsin
pop
inc
dec
inc
bound
cmp
loop
stos
xchg
mov
jmp
ds
stc
push
lret
into
lods
cmp
inc
mov
aaa
inc
mov
ds
stos
jp
push
mov
mov
inc
lock
outsb
inc
cmc
cmpsb
loop
or
outsb
in
insb
xchg
pop
sbb
push
cmp
cmc
fcmove
lock
dec
es
jle
sub
jl
lcall
ljmp
data16
pop
cltd
insl
out
rcrb
into
mov
xor
cmpb
add
call
push
sub
sub
xchg
xchg
xor
test
imul
cmpsb
adc
test
push
gs
aas
decl
adc
push
lea
sbb
das
or
inc
test
sti
leave
clc
push
sub
je
sub
add
jmp
xchg
cld
sti
repz
notb
xchg
cmc
stos
leave
xchg
mov
mov
xchg
add
lds
or
adcb
dec
pop
dec
xchg
add
outsl
inc
aaa
push
mov
imul
js
jle
fnstcw
dec
xor
add
enter
pop
xchg
inc
mov
insl
icebp
mov
clc
push
sub
or
les
xchg
inc
cmp
mov
out
addl
pop
sbb
cmp
lea
push
ss
adc
mov
and
dec
insl
jae
pop
pop
rcrl
mov
iret
insl
test
movsb
push
rcrl
mov
add
xchg
mov
xchg
mov
push
pop
lods
dec
jmp
jg
sbb
adc
mov
and
sbb
js
ja
aaa
sub
js
sub
shlb
aad
in
and
pop
mov
xor
xchg
mov
into
testb
mov
gs
adc
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
filds
jne
gs
adc
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
filds
jne
gs
adc
mov
lds
jg
outsl
xchg
pop
test
mov
movsl
das
push
filds
jne
gs
adc
mov
vmaxpd
sbb
xchg
or
rclb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xor
add
and
mov
sub
pop
loopne
ret
push
adc
enter
call
xchg
cmp
sarb
push
or
jp
dec
clc
inc
call
int
cli
sub
or
push
adc
je
and
bound
xchg
sti
test
xor
pop
pop
sbb
fidivrl
pop
jecxz
or
repz
push
mov
aaa
xlat
hlt
xlat
loopne
movsl
mov
cmp
cwtl
bnd
sarb
xchg
int
ficomps
dec
inc
les
incl
imulb
pop
push
jnp
xchg
imul
mov
arpl
lods
adc
cmp
mov
xlat
or
xchg
dec
bound
loop
fdivrs
pop
pop
mov
mov
or
nop
loop
sub
sbb
std
fisttpll
xor
dec
out
sbb
cmp
sub
insl
ret
cwtl
cmp
fdivs
push
clc
pop
call
mov
fwait
sub
pop
cli
dec
enter
pop
cmc
inc
pop
ja
jbe
add
inc
cwtl
mov
into
popa
loope
out
repnz
scas
or
jge
jb
push
mov
adc
icebp
pop
fs
outsb
ret
inc
repnz
mov
movsb
or
dec
cld
jle
push
cmp
call
xchg
cmp
dec
sarb
push
adc
enter
call
xchg
cmp
dec
sarb
push
lods
dec
jno
push
sbb
xchg
jle
lahf
outsb
or
sbb
fdivs
clc
push
mov
ficoms
cmp
mov
xor
mov
movsb
stos
subb
adc
frstor
inc
mov
dec
xchg
mov
add
lods
fdiv
fs
ljmp
aas
pop
test
outsb
jge
and
adc
pop
mov
add
pop
aaa
mov
mov
out
xchg
pop
jmp
push
fcmovu
pop
aaa
or
adc
outsl
fisubl
fisttps
push
imul
je
xor
cmpsl
stc
xchg
test
xorl
testl
add
cmp
dec
test
popf
push
mov
dec
adc
jns
lds
mov
or
pusha
add
test
inc
xor
in
je
sub
sbb
addr16
bound
sbb
aad
mov
xor
test
bound
pop
mov
adc
repnz
cli
pushf
add
pop
and
shr
sbb
lds
add
out
maxps
inc
mov
in
lret
mov
jns
xor
pop
movsb
das
push
or
ficomps
lock
sahf
out
push
sub
jno
inc
xor
and
test
jne
mov
push
inc
mov
out
ret
jne
cmp
xchg
pop
ret
ret
cmpsb
icebp
sti
push
insl
sub
scas
in
sbb
push
iret
or
movsl
loop
inc
cmc
pop
push
xor
pop
mov
leave
fimuls
mov
dec
sbb
fistl
loope
out
inc
int3
xchg
xchg
or
mov
adc
pop
lods
aas
aas
lahf
dec
lods
jg
and
push
nop
ss
jne
daa
ret
jp
or
push
adc
scas
mov
pop
add
mov
pusha
mov
sti
add
xor
adc
sbb
out
pop
push
lods
stc
aas
sub
push
ljmp
cmc
push
push
mov
mov
xorl
and
cmpb
mov
je
leave
fistpll
popa
and
fwait
jecxz
dec
loopne
lret
int3
xor
ds
dec
aad
outsl
into
sbb
jecxz
dec
pop
cli
jmp
lahf
inc
fcmovnu
shlb
sub
in
data16
sbb
dec
test
add
fidivrs
jbe
push
adcb
rcrb
inc
imul
push
repz
xlat
pop
cmc
add
xchg
jg
jg
pop
pushf
inc
cmp
jmp
push
mov
add
enter
adc
rorb
icebp
pop
push
adc
mov
cli
imul
adc
ret
mov
xor
sub
leave
push
inc
popa
imul
sti
mov
and
ss
sti
inc
les
xchg
bound
jae
inc
sbb
and
pushf
push
mov
mov
add
test
adc
mov
mov
ja
outsl
jle
int
mov
sti
xchg
xchg
into
mov
push
inc
scas
rcl
add
test
outsl
imul
cwtl
out
inc
pop
out
ss
cmp
mov
imul
fcomps
sbb
ret
fiadds
lret
mov
add
je
hlt
daa
popf
sbb
dec
push
or
lods
push
sbb
jae
inc
push
in
sbb
decl
mov
iret
cmp
outsl
sub
xchg
push
fidivrl
enter
cli
movsl
xlat
clc
mov
adc
mov
popa
dec
into
dec
xchg
in
fwait
push
test
pop
repnz
inc
cmpsl
ret
and
cld
stos
inc
mov
mov
jae
or
jo
int
pushl
dec
outsb
push
scas
xchg
stos
cmpsl
adc
sti
iret
fiadds
push
movsl
setle
sti
ljmp
and
test
push
loopne
push
inc
cmc
adc
sub
and
aas
jl
sbb
or
xor
lret
sbb
ljmp
cmp
mov
icebp
xor
int3
sbb
repz
jge
popa
pusha
xchg
push
loop
cli
and
pop
cmp
jmp
in
movsl
and
jno
pop
movl
ret
insb
fidivs
dec
js
lcall
and
aaa
sbb
movsb
outsl
cs
jmp
fsubl
and
jg
lods
ja
test
mov
sbb
rorb
mov
fisubs
stos
sahf
mov
pop
pop
out
jg
dec
dec
jbe
pop
pop
jg
adc
adc
push
add
push
lret
dec
in
inc
inc
pop
cli
enter
cmc
sub
loopne
mov
mov
gs
sbb
scas
adc
pop
pop
sbb
dec
mov
mov
adc
in
daa
cli
js
push
icebp
jae
popa
outsb
pop
dec
in
stos
shrb
dec
jnp
sahf
lahf
mov
icebp
ja
dec
stc
jle
pop
dec
test
shrl
add
jnp
jno
xor
sbb
mov
dec
mov
dec
mov
scas
jne
out
loop
adc
test
sti
pop
push
push
out
inc
outsl
dec
mov
cmpsb
leave
and
mov
ret
arpl
sub
int
movsl
sahf
lahf
cmpsb
lahf
data16
sub
mov
jmp
icebp
adc
cmp
mov
scas
push
dec
dec
loop
jp
cmp
inc
dec
xor
insb
cmp
pop
sub
stos
popf
shrl
cmp
xor
jnp
jp
mov
pop
inc
inc
rorb
sbb
mov
inc
mov
pop
iret
iret
ret
xor
out
adc
jbe
mov
push
outsb
movsl
pop
jmp
cmp
push
push
mov
xor
movsl
cld
lods
mov
pop
inc
adc
imul
in
cmp
or
dec
in
dec
xchg
xor
inc
dec
das
insb
xchg
aaa
fildl
leave
jne
jg
pop
inc
xor
or
push
movsl
out
mov
adc
mov
adcb
imul
or
jo
mov
pop
mov
jns
sti
out
dec
inc
jne
fsubs
xchg
or
xor
and
js
jecxz
push
dec
xchg
ss
jbe
ret
mov
pusha
push
in
adc
add
fistpl
aas
loopne
mov
cmovs
rcll
lahf
sbb
and
push
repnz
out
shlb
sub
wrmsr
mov
adc
lds
out
mov
jo,pn
fnstsw
shr
stos
xchg
xor
fildll
out
or
outsl
fs
push
mov
cmp
inc
pop
ret
popf
push
arpl
mulb
xlat
mov
ljmp
addr16
ffree
ret
mov
pusha
lahf
in
loopne
sub
movsl
mov
dec
inc
mov
pop
pop
das
sub
adc
shr
call
idivl
pop
sub
fistpl
jecxz
test
ret
jge
sarl
push
lea
jmp
pop
xchg
fldl
xchg
pop
or
hlt
mov
cld
xor
lods
sbb
addr16
fidivrs
les
mov
push
movsl
loope
mov
mov
sbb
data16
sub
mov
mov
mov
incb
push
aam
sahf
xchg
sub
fs
gs
test
cmc
cmovb
sub
jp
inc
fnstsw
mov
dec
stos
call
inc
mov
imul
cmp
das
sub
mov
nop
xor
and
lock
in
fsubl
repz
dec
sub
or
or
adc
hlt
mov
shll
and
popa
pop
sbb
int3
es
imul
lods
pop
cmpsb
test
adc
in
fiaddl
aam
in
jno
lds
ljmp
pop
inc
cwtl
mov
fiaddl
sub
add
dec
pop
ret
dec
mov
adc
or
mov
stc
dec
mov
push
ss
dec
in
das
scas
or
cwtl
fadd
sahf
jo
mov
or
rcr
jg
jnp
jecxz
add
pop
imul
sbb
in
pop
or
or
shrl
outsl
cli
pusha
call
fstps
cmpsl
lret
ljmp
imul
cmp
or
jns
jge
cmp
inc
xor
jge
fnstsw
sub
sbb
mov
fsts
push
inc
push
push
ja
xchg
and
mov
ret
sub
call
and
cs
inc
shrb
pushf
or
and
pop
outsl
adc
out
movsb
lock
fiadds
mov
rorl
hlt
inc
cmp
adc
test
pop
mov
sbb
push
jg
sub
daa
jnp
sub
push
stos
mov
fs
jae
stos
loope
jmp
cmp
jns
jb
and
imul
in
jge
clc
fstpt
push
sub
je
pop
loop
js
mov
aad
hlt
lods
jp
mov
jge
icebp
popa
bound
xchg
call
xchg
in
inc
push
xchg
aaa
jp
and
fcmovne
push
mov
cmp
or
imul
add
xor
not
or
in
rcl
mov
in
aaa
push
dec
dec
mov
push
dec
stos
popl
dec
inc
ljmp
pusha
mov
sub
imul
jb
pop
adc
imul
rcrl
enter
outsl
and
mov
or
mov
rorl
dec
push
push
ss
loopne
ljmp
jno
das
sub
jns
je
jbe
fildl
jmp
iret
repz
adc
adc
jne
xchg
add
adc
pop
or
xor
fistpl
sub
out
sub
sub
decb
mov
and
jne
arpl
repnz
and
add
or
popa
inc
or
in
fwait
jecxz
adc
mov
mov
iret
ret
inc
ficoml
cwtl
mov
fnsave
lds
mov
mov
xchg
pop
inc
stc
jp
fmull
lret
mov
add
lods
aas
mov
hlt
hlt
push
sarb
jmp
push
lret
cmp
pop
shlb
pop
sbb
in
movsb
adc
dec
pop
mov
sbb
je
mov
jne
pop
inc
enter
or
lds
lods
loop
fnstenv
ss
cmpsl
dec
sbb
mov
jmp
xor
mov
orb
adc
shl
pop
mov
push
mov
sub
pop
vxorpd
adc
aam
mov
test
andl
or
mov
sbb
or
mov
aam
add
mov
arpl
sbb
mov
addr16
into
jo
mov
xchg
adc
add
sbb
cltd
jb
push
out
mov
and
movsb
and
andb
inc
data16
mov
ss
mov
mov
mov
add
out
jnp
out
out
not
pop
push
fcmovbe
sbb
ret
push
mov
popf
test
sub
out
adc
xor
push
fsubl
sub
xchg
in
test
ja
loopne
add
in
cmp
sbb
fidivrs
push
push
push
mov
int3
fnstsw
jle
lods
lcall
and
fsubp
xor
shrb
dec
jg
test
xchg
pop
sarl
and
stc
scas
mov
arpl
and
add
adc
int3
leave
pop
pop
dec
in
dec
push
cld
sbb
jns
or
adc
les
sub
add
inc
add
xchg
aaa
lret
sub
sahf
xchg
inc
ljmp
or
outsl
call
loope
sub
adc
add
or
testl
iret
and
xchg
jl
cmp
mov
adc
out
push
cmc
push
insb
push
in
mov
arpl
stos
or
sti
inc
ficomps
jae
or
jg
mov
pop
out
mov
andl
negb
sub
fistpl
add
repz
mov
jge
pop
dec
into
ja
mov
push
cmpsl
xor
clc
das
and
mov
mov
inc
getsec
sbb
insl
mov
cmp
mov
pop
push
push
test
mov
cmc
push
addr16
bsf
xchg
inc
js
rcll
cmp
dec
mov
ds
xchg
add
cwtl
je
jb
in
addr16
cmp
and
sbbl
adc
das
lods
pop
and
pushf
jle
fmuls
mov
jmp
loopne
leave
jecxz
xchg
and
in
adc
je
xchg
add
add
pand
mov
pushf
sahf
popf
cmp
in
cmp
sti
les
inc
mov
aaa
test
into
mov
daa
cli
test
mov
jmp
orb
jge
pop
call
sbb
xor
push
fs
xor
addl
scas
lcall
scas
cmp
rorb
inc
mov
or
mov
or
movsl
or
leave
ror
mov
jno
jp
jl
inc
data16
es
sbb
cld
push
push
cmp
cmpsb
rorb
push
loop
lods
sbb
in
mov
or
je
sub
dec
fcmovbe
sbb
cmp
test
lahf
xchg
outsb
sarb
data16
push
mov
mov
xchg
fisttpl
data16
fmull
sbb
out
sbb
js
cltd
fnstcw
jmp
cwtl
movsb
cld
ss
inc
lods
adc
cmp
xchg
scas
adc
lods
xlat
imulb
jne
sbb
iret
pop
js
push
cmpsb
jno
aaa
imul
pop
pop
add
push
loope
fistl
mov
roll
pop
les
mov
cwtl
xchg
ja
pop
es
in
adc
push
xor
roll
jge
jle
inc
push
jmp
pop
mov
sub
into
inc
push
xchg
lret
jl
pop
pushf
sbb
cld
xchg
ficoms
jnp
adc
jb
repz
in
pop
jne
mov
sbb
pop
adc
push
inc
xchg
or
mov
out
jnp
aam
cmp
fimuls
jno
fcom
loope
cmp
ss
icebp
mov
and
dec
cs
push
mov
lret
lds
sub
push
add
lds
sahf
pop
mov
sbb
cli
cmp
aad
push
cmpsl
in
lcall
stos
pop
out
jno
rorb
stos
lods
sub
pop
or
sub
fstp
sub
aaa
out
sbb
iret
lret
outsb
inc
shll
mov
adc
ficomps
imul
mov
lret
xchg
cli
dec
mov
sub
jno
pop
negb
mov
inc
aam
sbb
push
add
rorl
nop
pop
sbb
in
cmpsb
push
jecxz
sbb
cmc
sub
push
loopne
ficoms
dec
mov
cs
out
and
aas
adc
mov
push
xor
add
stos
mov
icebp
dec
or
or
mov
dec
xchg
mov
mov
sub
dec
xlat
xor
fsubrs
push
add
in
movl
test
add
cmp
xchg
jg
lret
mov
mov
pusha
lds
pop
push
faddl
sub
jg
pop
popa
nop
loopne
orl
lock
pop
cld
pop
shll
inc
gs
and
xchg
out
push
and
jp
testl
dec
cli
roll
xchg
xchg
insb
enter
aad
es
adc
rcll
aas
push
add
sub
adc
xchg
and
xorl
or
cmpsl
outsb
push
movsb
pop
lahf
pause
xchg
mov
dec
fld
mov
xor
in
xchg
lret
mov
adc
adc
cltd
xor
xlat
jl
je
fnsave
mov
imul
cld
pusha
andl
cltd
jmp
jecxz
add
lret
and
in
sbb
jbe
frstor
lds
pop
jmp
sbb
adc
cmp
pushf
fsubrs
cli
movsb
ret
xchg
pop
pushf
cmc
out
adc
vcvtsi2ssl
mov
xchg
icebp
rclb
mov
push
roll
dec
or
add
ja
mov
jg
xchg
divb
icebp
fsts
sbb
inc
cmp
xor
adc
stc
lds
cs
xlat
and
jge
and
hlt
pop
and
inc
je
call
ja
sub
in
mov
mov
imul
outsb
sbb
dec
lret
lods
rcrl
inc
ret
add
push
pusha
mov
add
jp
add
jp
sub
pop
ss
sar
or
popf
or
sbb
into
add
mov
in
movntq
rolb
out
hlt
pop
addr16
and
dec
pop
mov
push
xlat
inc
push
outsl
stos
cwtl
frndint
xor
lret
sti
add
jnp
mov
mov
inc
cli
mov
imul
bound
fdiv
jne
cmp
add
inc
xor
jl
hlt
scas
mov
cmp
pop
movsb
movsb
loope
mov
dec
fadd
jo
cmp
sub
repz
xor
lods
jne
adc
sub
jecxz
xchg
and
je
insl
leave
lahf
sub
aas
xchg
and
in
xor
cmp
scas
adcb
jae
or
or
pop
icebp
xor
cmp
pop
inc
and
aas
fmull
sarb
xchg
mov
dec
or
jbe
push
cltd
push
adc
scas
cmpb
leave
jp
xor
or
jbe
mov
or
mov
mov
decb
fcompl
iret
movsl
stos
xor
test
inc
mov
test
pop
xlat
aaa
lret
cmpsl
dec
stc
out
jo
imul
jl
cs
inc
adc
add
mov
loopne
icebp
mov
data16
aaa
decl
orl
insl
jno
addr16
pop
and
insb
add
pushf
test
sub
das
std
and
outsl
pop
push
xchg
add
mov
or
and
push
pusha
sbb
mov
in
outsb
insl
loop
push
and
mov
scas
mov
mov
insb
ljmp
mov
leave
cmp
dec
push
inc
pop
jl
sub
pop
inc
add
pop
or
jnp
out
cmova
rorb
xor
or
leave
add
jl
mov
dec
cld
xchg
adc
mov
fwait
les
dec
sub
ret
in
sahf
jmp
xor
push
nop
movsb
push
inc
lcall
dec
push
clc
xchg
pop
arpl
les
xchg
dec
adc
xchg
popf
lcall
mov
and
popf
adc
in
pop
xlat
jne
scas
or
addr16
mov
mov
xor
fmuls
arpl
gs
ret
mov
jp
xchg
test
ss
arpl
stos
or
aad
pop
sbb
pop
fistpll
ret
sbb
fisubrl
shll
leave
mov
loop
cmp
pop
movsl
inc
ret
cli
inc
outsb
call
pop
xor
iret
pop
or
mov
jmp
jnp
jecxz
jae
inc
mov
and
jecxz
jecxz
outsl
inc
arpl
adc
into
repz
pushf
lods
iret
popa
bound
push
dec
pushf
test
jbe
add
xchg
sub
lret
test
bound
insl
jno
mov
inc
xchg
xchg
add
dec
aas
lret
sub
test
pop
iret
out
jae
mov
sti
cmp
rcrl
push
rcrl
add
dec
movsl
hlt
shrl
inc
int
push
mov
filds
mov
and
xor
lds
mov
bound
jg
dec
cmp
rcrb
and
adc
lret
fs
push
int3
ljmp
lret
xor
sahf
mov
fcomp
je
pop
imul
and
cmp
les
mov
shll
fnclex
mov
repnz
iret
inc
mov
lret
add
roll
mov
imul
out
xchg
push
je
sub
mov
push
in
call
in
mov
daa
rcrl
pop
jle
xchg
cmp
rcrb
into
cli
push
icebp
ljmp
clc
jne
and
xor
inc
mov
sub
sub
test
cmpsl
mov
sub
in
arpl
mov
movsl
mov
lock
jle
lods
xchg
mov
push
cwtl
push
xchg
test
add
lods
adc
fnstsw
ret
pop
or
inc
into
jmp
mov
mov
enter
call
xchg
cmp
dec
sarb
push
adc
enter
call
xchg
cmp
dec
sarb
push
adc
enter
call
xchg
cmp
dec
sarb
push
adc
bound
js
pop
dec
out
mov
test
push
sub
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
iret
adc
and
xor
pop
aaa
and
inc
pop
mov
mov
seto
pop
iret
adc
adc
xor
inc
push
pusha
scas
jo
mov
pop
les
jg
jge
sbb
sbb
or
cmp
sub
pop
xchg
dec
xchg
movsl
orb
int3
push
les
out
inc
popf
imul
adc
dec
inc
lods
pop
push
dec
mov
xchg
push
jl
imull
call
iret
popf
push
and
and
nop
push
mov
mov
jl
xchg
fistpll
lea
mov
fdiv
mov
jb
push
pop
lock
xchg
cmpsb
dec
das
aaa
jp
xchg
add
rclb
lods
popl
mov
jo
mov
clc
mov
inc
xor
das
loopne
out
and
inc
mov
dec
nop
ljmp
outsl
mov
push
rorl
insl
jl
mov
outsl
pop
mov
cmp
daa
outsl
xor
add
sar
sub
adc
and
daa
call
dec
lahf
pusha
scas
imul
fcoms
enter
jmp
lods
inc
mov
lea
and
sbb
xchg
push
add
xor
or
xor
cmp
or
jge
jg
pop
nop
dec
lock
imul
xor
pusha
scas
jo
orb
mov
pop
loopne
lock
add
adc
and
xor
inc
push
lahf
pusha
scas
jo
orb
mov
pop
loopne
lock
add
ror
jns
pop
std
outsl
add
add
popa
sub
pop
ja
sub
fsubr
bound
adc
sbb
pop
sub
pop
test
xchg
adc
cmp
es
cmp
sbb
adc
test
jns
mov
mov
in
in
data16
aad
xor
cmp
arpl
ljmp
int
pop
insb
arpl
push
scas
push
pop
les
insb
and
mov
and
movsb
dec
and
xor
add
jmp
pop
sahf
sti
loopne
cmp
loopne
push
pop
icebp
or
and
insl
jge
cmp
xchg
call
dec
lahf
sbb
sub
icebp
lret
andl
inc
jle
bound
xchg
cmc
mov
dec
dec
ljmp
lret
mov
cmp
sub
jl
stc
cmp
aas
pop
xor
cmp
jne
testb
mov
sbb
ja
ret
pop
mov
mov
add
mov
mov
lahf
lcall
cmc
ds
or
mov
mov
adc
adc
divb
lods
jae
cwtl
xchg
lds
aas
lret
mov
xchg
dec
loopne
sub
scas
andb
sbb
out
stc
and
sub
jecxz
pop
out
fcomi
xor
sbb
clc
xchg
mov
ss
leave
jge
int
sub
adc
cmpsb
adc
inc
push
sub
xor
xor
adc
repz
sub
int
xlat
mov
mov
fisttpl
gs
ds
inc
push
sub
inc
mov
mov
dec
jne
out
push
sbb
ret
lds
mov
mov
jg
cmpsb
pop
sbb
pop
clc
xchg
insl
jbe
or
xchg
ret
insb
push
sub
mov
cmpsl
inc
or
std
rcl
cld
push
lret
xchg
push
int
nop
mov
lahf
mov
adc
mov
jle
xor
nop
xchg
push
call
dec
dec
xorb
in
pushf
dec
stos
xchg
stos
jbe
ja
xor
stc
dec
adc
xor
dec
xchg
xchg
dec
fnstsw
or
lea
cmp
xor
lret
pushf
cmp
inc
xchg
pop
pop
loope
sub
add
inc
pusha
outsb
pop
or
jo
or
int
in
popa
addb
iret
les
lcall
ds
push
inc
out
out
mov
mov
jl
push
push
icebp
mov
pop
jg
mov
insl
sub
xchg
fstpl
cltd
rcll
fdivr
pop
sbb
sarl
inc
in
icebp
cli
imul
xchg
mov
inc
sbb
fs
xchg
xor
jl
sub
je
fisubs
xchg
fists
adc
add
divb
lock
aas
sub
xor
mov
or
pop
dec
xor
hlt
add
mov
push
jmp
push
push
popa
fsubs
jns
fmull
push
push
jg
addr16
cli
and
adc
xor
push
neg
xor
and
daa
xor
mov
push
sbb
push
mov
dec
out
pop
loop
dec
mov
out
push
push
stos
inc
xor
adc
icebp
jl
mov
mov
andb
push
ljmp
jge
fstpl
push
lret
dec
xor
cmp
add
dec
enter
dec
pop
mov
and
jge
int3
xchg
jno
cmp
xchg
fs
mov
sbb
fsqrt
fwait
pop
bound
xchg
xchg
clc
xchg
xchg
iret
push
fstp
fucom
loope
sub
ljmp
xchg
mov
sbb
fnstsw
aad
dec
pop
sarb
jge
in
xchg
xchg
push
jb
sub
push
out
pop
adc
mov
in
adc
mov
mov
jl
scas
pop
js
popf
pop
or
jno
les
popa
out
out
lret
inc
jno
adc
cmc
ret
inc
lret
arpl
mov
js
sbb
lcall
test
lahf
hlt
loopne
add
int3
push
mull
outsb
fxch
pop
andb
xchg
mov
pushf
sbb
or
clc
add
and
enter
popl
in
xchg
mov
push
cmp
fsub
xchg
and
xchg
bound
xor
lods
roll
adc
aaa
or
mov
subb
jge
fadd
mov
jne
fsubrs
adc
jns
mov
adc
push
dec
pop
pop
fwait
sbb
sbb
fsubrp
clc
push
sbb
sub
adc
mov
mull
in
jmp
add
lock
in
cmpb
or
ja
jb
inc
mov
mov
mov
push
enter
data16
testb
push
push
dec
cmp
aas
jo
out
push
in
add
push
leave
sbb
inc
sbb
popf
cld
insb
mov
aam
xchg
mov
jb
adc
aam
or
or
add
mov
stos
insb
adc
sub
inc
jnp
repnz
xlat
inc
das
pop
pop
lock
xchg
jl
lea
mov
ljmp
mov
adc
pop
stos
mov
dec
lea
sub
fwait
mov
stos
xchg
xchg
lods
add
loopne
mov
jb
int3
or
cmp
lods
repz
dec
jl
mov
push
stos
pop
mov
sbb
xchg
adc
aas
inc
fwait
and
cmpsl
imul
pop
sub
mov
cmp
stos
aad
sar
push
dec
mov
push
sbb
mov
mov
hlt
test
push
sbb
shlb
jb
inc
or
test
adc
pop
mov
push
push
dec
mov
push
xor
sbb
pop
xchg
loopne
aaa
imul
fistps
daa
jg
repz
ds
aas
mov
insl
mov
lret
nop
cld
sbb
sbb
ja
outsl
jge
adc
outsl
sarl
xor
jmp
fbstp
push
insb
test
ss
test
fsts
ret
sbb
dec
test
xor
ror
cmp
ljmp
insl
ret
data16
loopne
add
mov
inc
mov
pushf
out
jb
clc
lret
jo
push
push
cmp
insb
cmp
or
lcall
mov
insb
int
cltd
inc
mov
fcompl
lret
mov
adc
scas
inc
clc
xor
push
loopne
add
adc
xor
dec
outsb
jle
movsl
dec
mov
std
arpl
push
out
inc
xchg
jns
push
or
imul
push
test
jns
idivb
and
fldenv
jmp
clc
pushf
lds
mov
cs
loope
bound
fldl
and
pop
fmull
jo
aas
push
inc
sahf
push
pmulhw
adc
jb
out
jl
enter
or
sahf
jle
dec
call
jmp
xor
or
mov
sbb
push
mov
popa
das
leave
sbb
imul
enter
out
sbb
test
fucom
or
hlt
push
sbb
repz
pop
scas
ret
cmp
pop
push
lret
pop
dec
cmp
fs
inc
in
and
or
js
aam
aam
fwait
int
fcoml
aaa
ljmp
loopne
pusha
in
in
lods
pop
jg
mov
outsl
inc
xchg
sbb
push
or
fdiv
fsubl
push
ja
loope,pt
imul
aad
push
popa
mov
push
cmpb
inc
push
les
jns
cmp
mov
dec
popa
sbb
insl
xchg
xchg
addr16
inc
sarl
adc
in
addr16
cld
test
or
xor
clc
inc
sahf
inc
mov
aad
xchg
das
test
jb
ss
fs
jb
sub
or
stos
cwtd
cmp
lea
cmpsl
mov
mov
xorb
test
push
mov
flds
push
xorl
out
sub
mov
into
shl
xchg
xchg
into
stc
in
sbb
popa
dec
int3
add
mov
pop
js
test
mov
and
mov
mov
fmull
push
add
repz
in
jb
pop
cmp
lret
into
push
or
sbb
xchg
and
jns
push
aam
xlat
imul
push
lods
fnstsw
jns
cmp
cmp
jo
cmc
ds
loope
sbb
out
nop
mov
icebp
adc
test
je
and
inc
aas
dec
out
insb
andb
ret
test
push
roll
ficompl
pop
and
dec
sub
sbbl
inc
cmp
or
data16
out
pop
loopne
mov
mov
xlat
push
push
pop
bound
out
jge
xchg
jp
mov
pop
lods
dec
inc
jmp
ljmp
mov
les
lcall
adc
sub
stos
das
sub
es
imull
mov
mov
or
pop
pop
rcl
adc
and
xlat
xor
lret
loopne
inc
adc
and
inc
int3
cli
dec
in
cmc
popf
int3
lea
loop
int
fsubl
push
and
ja
and
mov
cmp
cltd
mov
inc
push
fs
out
pop
add
daa
aaa
loope
push
jle
je
loop
jmp
jl
lcall
stos
xor
outsl
push
ja
cmpsl
dec
ds
fnstsw
and
xor
xchg
mov
xchg
push
mov
fmull
test
sbb
fisubl
jecxz
je
push
je
popa
dec
mov
add
loopne
cmp
push
enter
mov
into
xor
pop
repnz
rcl
mov
xchg
and
and
dec
add
in
xchg
and
call
push
gs
fildl
fst
call
frstor
es
fcomps
jns
popa
popa
clc
cmc
adc
mov
testl
sbb
and
or
outsl
pop
jns
popf
pop
iret
ret
mov
lcall
add
movsl
test
out
rcr
loop
std
push
adcl
aaa
fcmovnb
mov
mov
dec
add
outsl
addb
lods
cmpsb
jp
bound
mov
xchg
jo
adc
jo
inc
js
test
pop
imul
mov
push
jp
movsl
jae
mov
sub
adc
adc
sub
cmp
clc
or
arpl
and
test
sub
das
fsubl
mov
pop
js
pop
fdivrl
jg
add
bound
pop
enter
movsb
mov
fsubp
les
cmp
addr16
adc
adc
sbb
inc
imul
push
scas
push
mov
pop
jbe
jae
mov
jmp
imul
lret
mov
sub
xor
shr
pushf
and
xor
jnp
icebp
xchg
adc
mov
mov
add
inc
xchg
insl
fstpt
in
push
sub
lea
mov
cli
outsb
dec
scas
ds
pop
inc
sbbb
adc
mov
mov
sub
movsb
jo
cwtl
ficompl
cld
mov
arpl
enter
test
cwtl
xchg
aam
outsl
test
loopne
pop
mov
push
sub
mov
sbb
jbe
ret
out
mov
arpl
outsb
das
xchg
pusha
cmpsl
fs
or
or
fdivrp
pop
aam
mov
add
into
jmp
negb
jg
mov
pop
sbb
inc
or
cmp
sbb
call
pop
mov
aas
mov
aas
mov
xchg
mov
dec
mov
out
jbe
mov
add
jno
xchg
ljmp
dec
mov
dec
stos
daa
xchg
sbb
sbb
xlat
lds
movsl
clc
mov
in
cltd
and
jmp
addr16
xchg
mov
add
rorb
and
ret
popf
mov
not
ljmp
jmp
mov
pop
cmpsb
mov
xlat
pop
sti
cwtl
ljmp
push
mov
adc
sbb
imul
repz
dec
or
mov
push
xor
out
cld
cwtl
pop
out
ljmp
pop
cld
or
clc
je
or
scas
dec
inc
dec
loope
daa
or
sbb
pop
std
iret
popa
cwtl
test
xor
sub
inc
fwait
lea
xchg
lock
pop
movsb
or
sub
into
push
jmp
pop
fldt
out
and
sub
sti
js
mov
sbb
inc
pop
int3
mov
inc
insb
xor
cmp
icebp
lock
cwtl
scas
call
clc
and
cmc
cwtl
mov
mov
mov
mov
mov
mov
pop
dec
lahf
add
adc
jle
es
push
test
xchg
push
or
loop
out
xchg
pop
mov
cmpsb
mov
frstor
rcr
dec
movsl
cmpsl
sub
adc
test
daa
mov
inc
mov
repnz
add
orl
mov
cltd
push
stos
inc
andl
inc
lea
or
xor
popa
fs
test
xor
jmp
mov
xchg
fisubl
xor
cltd
xchg
pop
ja
imul
xchg
lds
xchg
mov
adc
testl
pop
ljmp
jp
add
aas
sbb
mov
jmp
fidivrl
comiss
gs
or
xchg
popa
and
mov
push
dec
xchg
mov
jne
xor
mov
xor
call
push
xor
cs
fucomip
xchg
shlb
imul
jmp
mov
fidivs
inc
stc
mov
insl
lds
mov
and
xchg
jne
cmpsl
imull
dec
jmp
fnstcw
fiadds
jb
imul
xchg
stc
add
out
push
pop
out
jb
out
mov
nop
hlt
push
js
xchg
mov
pop
pusha
jp
inc
stos
sub
scas
jae
icebp
jmp
pop
leave
push
imul
test
sub
rorl
cli
adc
or
in
inc
adc
mov
movsb
xor
nop
je
pop
aad
mov
loope
pshufw
mov
add
dec
or
pusha
sub
push
gs
movsb
movsb
adc
ds
inc
rorb
jg
pop
add
pop
push
mov
lcall
mov
and
popa
pop
test
mov
ss
insb
pusha
sbb
sub
cltd
std
jmp
dec
add
push
adc
movsl
pop
pop
shll
adc
or
cltd
jb
xchg
xchg
aad
add
xchg
lcall
nop
xor
xor
sti
pop
jne
fwait
je
cmp
outsl
push
lods
dec
add
dec
jnp
inc
jmp
in
aas
fdivl
stos
rcrl
pop
xor
inc
sub
and
sbb
ret
jmp
or
pop
fistl
ficomps
repnz
mov
push
pushf
cmp
in
jbe
out
mov
je
in
sahf
cmpsl
pushf
pop
add
in
test
cmc
xchg
aas
cli
fidivl
push
mov
adc
dec
test
mov
dec
mov
aam
inc
call
ljmp
add
jge
mov
out
jae
stos
loopne
lahf
inc
xchg
movsl
cltd
xor
inc
inc
sbb
rclb
std
jp
or
push
loopne
es
addl
cmp
mov
cmp
jecxz
dec
std
jmp
xchg
and
insb
inc
mov
fcmovu
sbb
pop
imul
fnstenv
rcrb
je
popw
mov
mov
pop
lds
sub
scas
push
dec
xchg
lret
adc
les
mov
les
ficoms
cmp
lods
inc
mov
xchg
pop
xor
cmc
ss
pop
mov
stc
lock
fs
mov
mov
ret
inc
movsb
sbbb
push
psubusw
xor
jae
ficomps
mov
aad
xchg
int
jne
aam
out
xchg
jp
pop
inc
mov
pop
bound
mov
fwait
sub
pop
add
push
adc
das
sbb
cmp
cmp
std
into
int
loope
cmp
jo
test
pop
add
and
popa
pusha
clc
xchg
xchg
or
roll
sub
mov
sbb
insl
daa
out
in
jmp
mov
add
jnp
sti
pushf
xchg
and
push
ja,pt
jp
sti
and
mov
push
sub
les
add
xchg
shlb
and
dec
dec
add
out
and
out
jp
shrb
inc
sbb
mov
mov
arpl
lock
xor
repz
add
and
leave
pop
hlt
pusha
jb
repz
inc
xchg
jne
sbb
jge
sub
mov
fimull
jmp
mov
and
or
xchg
sub
pop
sbb
stc
rcll
rorl
sbb
adc
cli
xor
adc
cmp
dec
push
mov
ja
outsl
xchg
pop
aas
adc
inc
jno
loop
cld
dec
mov
mov
mov
test
pop
outsb
fcmovne
xchg
fbstp
or
cwtl
sbb
or
cmp
dec
pop
mov
xor
int3
popa
fcmovnu
cs
sub
fadd
push
mov
stos
xor
and
add
cmpb
std
cli
shlb
arpl
sub
mov
decl
aad
movsb
mov
inc
mov
add
cmpb
je
jge
jbe
lds
fistps
pusha
push
mov
sbb
addr16
pop
xchg
imul
std
jae
jl
dec
ret
push
shrl
xchg
fbld
aas
pop
cld
or
mov
sbb
jo
lods
cmp
inc
xchg
mov
push
mov
mov
movsl
add
mov
cmp
jle
fisttps
sbb
or
adc
cmp
jmp
pop
xchg
and
lods
mov
dec
pop
popa
xchg
enter
mov
mov
push
adc
mov
push
jae
sahf
iret
loop
sbb
into
push
not
sti
ss
leave
repz
je
xor
out
inc
inc
repnz
xor
jne
das
outsl
cmp
cmpsl
icebp
and
out
fstps
mov
test
cmc
or
or
dec
aad
test
jmp
fwait
cwtl
xor
shr
stc
mov
je
mov
sahf
lods
fs
add
shlb
xchg
dec
lods
mov
and
mov
jmp
in
test
xor
int
mov
cltd
xchg
test
xor
or
lret
aam
sub
into
inc
add
jecxz
imul
imul
mov
cwtl
sbb
fstpt
outsb
iret
xchg
arpl
std
movsb
loop
or
adc
jge
sarb
gs
js
push
stc
repz
pusha
sahf
mov
shll
sub
rorb
xlat
daa
cmp
xchg
jns
loope
pop
pop
sbb
orb
cmp
outsl
fisubrl
sti
rorl
test
cli
jne
and
ficoml
push
mov
add
cmpsb
dec
rcrb
pop
sub
outsl
mov
movsb
push
cwtl
jb
fs
add
cmp
cmp
and
ret
nop
or
pop
jge
sbb
mov
out
jl
or
or
es
mov
call
add
xor
adc
mov
and
sub
pop
mov
fucomi
insb
lahf
mov
ljmp
and
rorl
push
sbb
xlat
imul
xchg
dec
jecxz
aas
js
enter
cmp
cmpsl
ljmp
lahf
int3
mov
stc
adc
lret
inc
dec
das
jnp
lods
jb
xchg
push
mov
repnz
in
lcall
cmp
mov
dec
cmpsb
movsb
jno
jb
fadd
mov
mov
divl
lret
pusha
cmp
adc
ljmp
cmc
pop
inc
or
xchg
mov
icebp
sete
cmpl
xchg
jae
push
je
or
loopne
rcrb
movsl
int
jno
aaa
ljmp
pop
mov
jecxz
push
arpl
mov
cmp
push
les
pusha
xor
push
xor
fs
and
mov
test
sub
push
inc
cmp
jle,pt
xor
add
mov
jo
mov
outsb
icebp
adc
add
pusha
fs
shll
movl
pop
xlat
lret
jne
jmp
shll
adc
fsubs
into
xchg
sbb
cmpsl
adc
dec
mov
shr
inc
and
in
out
adc
call
inc
inc
mov
mov
test
adc
xor
movsb
sub
jno
sbb
sub
add
fwait
cmc
cs
add
push
sub
outsl
ret
jmp
outsl
and
mov
aad
xor
inc
shl
dec
addr16
test
leave
mov
loope
fisttpl
ss
xor
inc
push
lahf
pusha
scas
jo
orb
mov
pop
loopne
lock
add
adc
and
xor
inc
push
lahf
pusha
scas
jo
orb
mov
pop
loopne
lock
add
adc
and
xor
inc
push
lahf
pusha
scas
jo
orb
movsb
outsl
mov
rorb
pop
loopne
sarl
lret
and
push
jmp
incl
push
lahf
loopne
lock
dec
outsl
cmc
or
or
push
cmovo
jnp
imul
stos
sub
xadd
lcall
popf
pop
lea
jnp
imul
int
std
cmp
dec
sbb
cli
sub
mov
insl
stos
popf
pop
lea
jnp
imul
int
std
cmp
sub
sahf
dec
test
xlat
fiadds
jmp
sub
push
shlb
data16
es
aaa
mov
xchg
inc
sub
pop
jb
inc
adc
fisttpll
int
add
xorb
sar
or
cmp
bound
mov
test
pop
lds
loopne
call
sub
fs
mov
ss
addr16
stos
pop
jle
stos
cmp
movsb
xor
lret
in
daa
xorb
shrb
mov
test
out
into
fwait
or
nop
in
in
push
sub
add
jmp
enter
shrl
mov
lds
notb
pop
mov
mov
int
inc
adc
mov
fstpt
pop
lea
jnp
imul
int
std
cmp
sub
sti
sub
mov
insl
in
clc
pop
out
xor
cmp
sub
pop
imul
test
fucomi
or
sbb
sbb
daa
fidivs
in
or
insb
test
outsl
mov
sub
sbb
cli
sbb
adc
cmp
sub
sti
sub
mov
insl
stos
popf
pop
lea
jnp
imul
int
std
cmp
sub
sti
sub
mov
insl
stos
popf
pop
in
arpl
adc
lods
or
insb
jb
scas
lret
add
jl
inc
add
xor
rcrb
lea
into
cmpsb
xchg
loope
out
push
imul
push
pop
les
jle
sub
xor
mov
divb
and
nop
subl
repnz
inc
pop
sub
mov
pop
lret
adc
add
push
ja
push
sbb
sbb
rcll
loope
pop
lods
scas
popa
jg
cmp
inc
pop
stos
std
in
and
mov
mov
rcll
dec
push
jl
sub
outsb
aas
cmc
rol
in
push
push
push
sbbl
jns
mov
mov
or
pop
idivl
lods
push
sub
xor
dec
push
loop
fisubs
icebp
ret
loop
mov
or
jecxz
push
inc
pop
scas
cmpsl
pop
add
loop
add
fdivrs
out
pop
or
xchg
push
jae
mov
cmc
inc
xchg
cmp
frstor
adc
pop
adc
fdiv
xor
fimuls
adc
daa
in
rep
sub
push
sbb
adc
jge
push
cli
xor
movb
int3
dec
fmul
push
pop
in
imul
pop
dec
add
push
sub
out
sbb
fs
push
cmp
sahf
mov
cli
inc
inc
mov
leave
pop
add
xchg
jmp
push
pop
fisubl
ja
arpl
cmp
dec
xchg
sbb
sub
and
in
lock
push
jecxz
pop
jecxz
daa
push
jle
dec
in
pop
stos
cld
pop
dec
inc
scas
inc
mov
xchg
fstps
enter
daa
repnz
ret
out
jne
iret
adc
and
adcb
pop
in
pop
shrl
mov
jbe
mov
addr16
in
cmp
pop
push
data16
ret
cmpsl
mov
lret
cmp
out
jecxz
out
adc
lahf
or
sbb
jg
sub
pop
outsl
aaa
test
jl
pop
adc
pop
repnz
ja
dec
mov
js
push
push
jns
xchg
movsb
push
push
notl
fistl
xor
in
ja
push
imul
rorl
mov
icebp
in
aad
adc
iret
pop
or
sub
sahf
fmuls
sub
arpl
mull
sahf
cmp
int3
pop
adc
jnp
sbb
or
xor
std
fmuls
adc
cmp
in
dec
jl
mov
test
or
xor
sub
call
and
and
inc
push
push
pop
into
xor
push
inc
sbb
adc
mov
add
test
xchg
push
arpl
and
into
shr
xchg
push
cmpsl
hlt
jmp
xchg
adc
cmpsl
fmull
xor
sub
mov
dec
push
push
xor
shll
aad
push
cmc
xchg
push
jge
insb
stos
pop
fwait
icebp
shrl
std
ljmp
scas
imul
pop
jmp
lret
xchg
pop
inc
ss
je
xchg
add
inc
subl
and
es
mov
sub
mov
push
ret
add
jp
lds
imul
out
fimull
mov
fidivrl
fisubrs
xor
sbb
rcrl
fs
jl
pop
jge
pop
daa
cmp
xchg
mov
pop
imul
mov
dec
ss
push
lods
and
cmp
rcll
sbb
test
leave
xor
push
movsl
test
popf
xor
lods
loope
and
out
xchg
mov
lcall
mov
cmp
pop
addr16
stos
jp
cmc
fidivrs
add
or
and
sbb
fwait
pop
mov
mov
adc
dec
jne
orb
xlat
xchg
push
cmp
data16
das
mov
jns
pushf
sub
daa
xchg
movsl
lds
loop
cltd
xor
loope
js
sub
inc
sub
sbb
pop
movsl
mov
mov
mov
jno
pop
inc
gs
jbe
mov
nop
pushf
outsl
sbb
ret
shrl
in
xchg
dec
iret
mov
pop
nop
rorb
ret
fs
xor
test
cmpsl
loop
fcmovne
adc
adc
cmp
mov
je
fnstsw
in
imul
xchg
mov
inc
ret
aas
mov
ja
add
or
cwtl
sti
xchg
xchg
jno
setne
inc
push
cmp
push
data16
jmp
jae
add
dec
fstl
mov
movhps
leave
outsl
popa
dec
ds
fidivl
ret
mov
lret
test
push
scas
mov
add
xor
adc
jle
inc
mov
das
out
fldt
mov
popf
mov
sbb
jmp
insb
in
mov
je
mov
mov
push
clc
mov
mov
mov
jnp
pop
cmp
mov
cmpsb
cmpsl
sbb
pop
clc
imul
xor
push
and
or
rcrl
mov
inc
enter
sbb
jbe
jns
adc
mov
sbb
mov
shr
imul
fisubl
mov
testl
xchg
mov
dec
in
push
mov
leave
mov
add
loop
jg
cmp
scas
dec
and
ret
mov
scas
cltd
xor
dec
mov
imul
mov
mov
jae
xor
jbe
aaa
xchg
xchg
sets
jo
xor
mov
inc
cmp
mov
mov
jb
int
cmp
push
lahf
bound
fsubp
test
mov
and
or
imul
lahf
adc
loop
daa
xchg
inc
adc
pop
cld
aas
dec
lcall
lea
repz
or
add
inc
cmp
js
adc
xchg
sbb
or
sbb
sub
andl
les
jno
bound
aam
cmp
mov
dec
add
bound
add
fwait
iret
push
or
decl
shrl
sbb
gs
clc
les
adc
stos
andl
shlb
popa
xor
pop
push
inc
cmp
fldt
loopne
and
push
add
testb
add
testb
imul
mov
leave
mov
mov
fmul
add
push
xchg
pop
sar
cmp
lock
sbb
mov
xor
sub
mov
push
rolb
push
pop
add
ret
or
mov
push
stos
xor
xchg
imul
sub
pop
lea
mov
mov
fiadds
sub
imul
imul
dec
add
xchg
cmp
enter
dec
push
cmpsb
in
push
sub
in
bound
sbbl
outsb
pop
xchg
or
lret
push
lds
jg
dec
lods
roll
test
cmpsl
shrl
divl
mov
mov
sbbb
aaa
push
adc
fistpl
clc
arpl
xchg
cmpsb
pop
enter
addr16
jle
inc
mov
gs
xchg
test
add
into
dec
les
cmc
rorl
mov
push
inc
push
sub
popa
cmp
ljmp
jae
scas
xchg
jns
pop
sub
pop
dec
lock
out
adc
mov
mov
lock
and
jmp
adc
sahf
data16
movsl
out
cli
cltd
imul
mov
push
mov
jl
pop
ja
test
pop
outsb
arpl
xchg
mov
shrb
roll
aaa
jae
outsb
pop
outsl
std
mov
xchg
add
dec
mov
enter
pop
cwtl
call
push
mov
jne,pn
cld
mov
loope
roll
sub
sub
mov
xor
sti
dec
and
fwait
push
sbb
fdiv
fwait
mov
mov
movl
into
push
pop
filds
sahf
dec
adc
xor
push
out
es
cmc
xor
insb
and
cmp
ret
imul
mov
ljmp
fsubs
pop
mov
pop
inc
push
mov
out
out
and
lods
loopne
xor
and
mov
idivb
cmp
mov
lods
jns
and
or
popa
mov
in
push
ljmp
cmp
imul
jo
bound
push
int
shl
cmp
xor
pop
fs
mov
out
into
lods
cmc
outsb
enter
std
leave
sub
xchg
xor
rcrb
clc
xchg
divb
jle
pop
bound
gs
cmpl
lock
mov
dec
cli
hlt
xchg
dec
xchg
mov
inc
movsl
outsb
aas
pop
mov
notb
movsb
add
mov
and
mov
or
and
cmp
xchg
ljmp
sub
shr
and
push
ja
push
sbb
int
adc
sti
mov
loope
repnz
out
fdivr
lds
push
int3
or
adc
sub
jbe
pop
bound
mov
dec
sti
xchg
clc
jb
dec
int3
jle
gs
dec
mov
xchg
jns
lea
adc
and
mov
pop
pop
lcall
repnz
adc
enter
iret
inc
and
add
ds
stos
test
sbb
subb
lahf
adc
mov
push
or
xchg
outsl
sti
fbld
aaa
push
insb
inc
scas
inc
lret
push
push
in
pop
fsubl
mov
mov
call
outsl
add
and
dec
sti
and
sarb
dec
dec
negl
ret
xor
xchg
repnz
mov
lret
adcl
add
insb
cmc
scas
repnz
sti
mov
mov
in
adc
xor
addb
xor
dec
inc
in
gs
sub
mov
daa
mov
subl
stc
ret
sahf
icebp
ja
jmp
and
mov
push
cmp
or
sub
popa
ds
xchg
xchg
std
test
shl
cmp
xchg
push
aaa
jno
jecxz
adc
pop
rclb
fstpl
sub
in
mov
addb
pop
in
out
jl
and
rep
adc
xchg
lret
popa
in
mov
push
lock
push
aam
cmpl
roll
xor
and
dec
cmp
xchg
out
jb
push
xchg
lods
mov
fwait
mov
fisubrs
aas
les
cmpsl
or
addl
xchg
pop
mov
aam
icebp
ror
inc
adc
pop
pusha
imulb
lods
sarb
lods
ret
and
int
in
mov
sub
and
pop
lea
xchg
loop
add
or
pop
mov
fildll
lods
sahf
cmp
mov
inc
insl
push
stc
lret
jg
imul
out
xchg
mov
stos
jns
xor
addr16
repz
xchg
and
sub
dec
sbb
xchg
push
sub
ja
xchg
dec
xorb
xchg
int3
push
mov
mov
add
push
test
or
gs
icebp
sarl
test
test
jo
mov
jp
jg
and
sbb
xchg
and
rcrb
xor
jae
adc
push
cmpsb
jno
in
push
or
and
nop
xor
fiaddl
xchg
push
lcall
fisubs
cmpsl
or
fldt
mov
lahf
adc
enter
js
fidivrl
jecxz
lret
arpl
gs
cmp
shl
inc
out
in
int
lea
push
jbe
xchg
xor
sbb
push
mov
xchg
dec
dec
mov
sub
out
and
int
xor
rorl
add
shll
pop
mov
xor
mov
xchg
push
fiaddl
stos
pop
cmpsl
gs
add
daa
jne
cli
pop
lds
inc
inc
ficompl
scas
mov
gs
sub
cmp
and
push
fistpll
or
ja
subb
loopne
xor
mov
or
in
ds
out
adc
dec
push
cmpsb
xor
ficompl
pop
sti
jo
mov
jl
or
xchg
inc
mov
lcall
je
sahf
mov
mov
iret
dec
or
loop
mov
cmp
mov
out
dec
scas
mov
in
inc
loope
jecxz
xchg
sbb
add
in
xor
ficompl
cmp
push
pop
jp
and
gs
outsl
test
adc
call
outsl
dec
pop
sub
in
push
pop
sbb
jbe
inc
dec
aad
gs
xchg
mov
jg
xor
dec
test
int
aaa
loop
pop
test
pop
inc
xor
mov
cli
pop
inc
movsl
adc
iret
or
inc
inc
push
sub
add
and
scas
loope
outsl
pop
popa
enter
test
xchg
shlb
lahf
ret
add
dec
mov
mov
mulb
mov
lret
pusha
lds
sti
fldenv
sub
in
lods
jnp
xchg
movups
fadd
mov
in
or
hlt
in
enter
popl
ds
decb
adc
test
out
fsubrl
push
adcl
sub
cmp
inc
xchg
cmp
mov
test
and
out
push
fnsave
jmp
mov
xchg
bndldx
cmc
stc
outsl
push
mov
sub
insl
sub
rol
sbb
inc
xor
mov
incl
je
movsl
and
test
fwait
lret
adc
inc
push
leave
jecxz
test
setbe
adc
mov
adc
mov
inc
jecxz
xor
jnp
int3
mov
cwtl
adc
adc
mov
daa
in
cld
aaa
insb
daa
add
xchg
and
lcall
add
push
push
pop
inc
sub
call
cmpsl
inc
jbe
stos
cmp
xchg
test
pop
shll
aad
test
mov
adc
mov
js
dec
xchg
test
pushf
jnp
and
in
jge
xchg
inc
lret
push
xor
lret
push
xlat
loopne
in
xor
pop
lret
enter
pop
adc
not
fs
push
pop
sub
push
inc
test
daa
out
mov
lds
ja
cmpsl
push
or
int
test
mov
aam
jne
and
fcoms
cltd
cmp
xor
adc
pop
fimull
sahf
jp
sub
cmp
pop
fwait
lret
fdivrs
iret
testl
out
pcmpgtd
pop
in
sbb
lods
repz
xor
push
and
pop
dec
inc
test
pop
or
popa
push
loopne
xor
rcrb
das
out
sbb
cmpsl
cmc
sbb
ret
fimuls
xchg
setno
xchg
and
dec
sbb
pop
jnp
enter
mov
fldt
cmpps
jmp
xor
cmc
sub
xor
lods
and
add
push
jp
mov
fnstsw
jl
push
dec
mov
ffree
aad
stos
mov
fidivs
adc
pop
and
inc
mov
ja
dec
repz
inc
sub
mov
mov
inc
jne
jno
dec
ret
xor
mov
aad
insb
cmc
xchg
jg,pn
pop
mov
lcall
ret
jo
add
add
stos
cmp
sub
sub
clc
push
adc
sub
add
add
mov
mov
mov
js
sbb
aaa
sub
mov
add
pop
mov
mov
mov
movsb
mov
jnp
fnstcw
sub
mov
cmp
enter
adc
jns
push
cmpb
dec
shrb
leave
enter
pushf
icebp
push
xchg
faddl
pop
mov
xchg
jg
cmp
imulb
aad
cmp
stc
mov
mov
outsb
std
insb
mov
mov
movsl
loopne
dec
cmpsl
movsl
je
and
pop
inc
xchg
xchg
pusha
adc
enter
outsb
xchg
in
enter
and
loopne
enter
ljmp
sbb
jne
sub
in
mov
pop
dec
mov
jg
cmpsl
into
int3
jecxz
lods
push
add
imul
pop
lods
sbb
test
jno
cmp
out
sub
mov
cli
inc
icebp
pop
add
xor
mov
mov
call
clc
loopne
pop
cmovbe
push
test
aas
mov
and
jg
jno
nop
sbb
test
mov
xor
mov
xor
stos
inc
jmp
in
and
push
jmp
push
in
xchg
pop
outsb
scas
out
les
shlb
loop
repnz
xchg
jl
out
sub
cmc
mov
shrl
push
pop
add
xchg
mov
daa
jl
mov
std
add
pop
push
std
sub
jae
and
out
pop
imul
shrl
movsb
cli
arpl
stos
pop
into
mov
nop
add
sbb
cltd
push
test
pop
adc
mov
ffree
clc
mov
pushf
pop
cmp
ficompl
in
xchg
nop
mov
fdivrl
dec
xor
dec
inc
add
mov
xor
jbe
adc
jae
fnstenv
jle
dec
hlt
int3
stos
pop
dec
cmp
das
insl
mov
cmpl
rcr
pop
loop
int
push
xchg
dec
rcll
negl
lret
fcomip
pusha
out
ljmp
cmp
push
shlb
out
and
cwtl
lods
mov
mov
jmp
push
pop
rcrl
cmpl
adc
add
ss
xorb
mov
mov
pusha
xchg
push
jl
pusha
jg
cmp
cmp
xlat
mov
mov
lods
mov
test
push
mov
mov
stc
jnp
repz
jl
insb
out
cmc
push
mov
and
pop
lret
mov
jbe
push
mov
test
pushl
mov
mov
inc
mov
jbe
adc
dec
or
and
dec
push
repnz
jle
lea
xchg
mov
and
dec
and
mov
xlat
hlt
pop
pop
movsb
pop
adc
push
cs
and
ss
mov
jge
loope
sub
cli
inc
cmp
rolb
lea
xor
fstpl
gs
pop
js
mov
testb
sbb
pop
fnstenv
out
sbbl
and
inc
mov
rcrl
inc
popa
leave
add
xor
mov
mov
and
mov
add
xor
sub
sbb
add
mov
inc
cmp
sti
and
fdivrs
pusha
adc
pop
push
adc
adc
push
pop
push
cmp
pop
adc
add
jnp
pop
push
in
adc
adc
lret
pop
dec
mov
pusha
mov
jle
xchg
lock
cmp
clc
jns
scas
push
call
xchg
mov
or
dec
test
test
xor
mov
js
loop
jne
jecxz
push
les
mov
es
push
cmp
cld
fwait
jle
aad
mov
sbb
stc
xchg
ret
ja
les
test
mov
aas
inc
lds
roll
pop
fdivrs
stos
sbb
push
jae
jae
xor
in
out
aam
mov
sub
pop
aam
inc
mov
imul
loop
aas
in
xchg
push
dec
lcall
jno
aas
sub
dec
and
mov
arpl
adc
loope
dec
insl
and
mov
sbb
jmp
outsb
pop
fs
xor
popl
imul
jmp
adc
aaa
mov
push
lods
jmp
jns
aas
cmp
xlat
push
mov
push
arpl
std
int
pop
jp
adc
into
das
sbb
mov
pop
repnz
lea
das
nop
test
dec
stos
adc
adc
rol
outsl
sarb
adc
popf
inc
inc
pop
mov
icebp
jl
js
inc
xor
mov
movsl
lahf
fcoml
cmp
les
and
sbb
cmp
lods
mov
out
movsl
test
je
out
xchg
rorb
pop
aam
jbe
xchg
inc
sub
inc
and
insl
sub
sub
cmp
mov
cmp
fs
dec
outsb
sub
push
mov
adc
sbb
into
and
jns
out
sub
jns
daa
and
and
add
lcall
cmp
jbe
mov
and
pop
jae
add
out
jge
dec
imul
dec
jne
in
sti
ret
xchg
and
fsubrs
dec
push
sub
sbbb
rorb
dec
cmp
push
movsl
add
and
and
pop
adc
or
imulb
xchg
ss
inc
add
cmp
fbld
mov
push
pop
je
rclb
xor
pop
aas
mov
sti
movsl
insl
mov
xchg
stos
leave
cmp
out
jbe
or
cmp
sbb
xchg
push
rclb
ljmp
and
xchg
sbb
pop
aas
sub
pusha
fcomip
insb
mov
sbbl
ret
push
pop
gs
data16
ficompl
jnp
jle
orb
mov
lods
imul
int
std
cmp
sub
sti
sub
mov
insl
stos
popf
pop
lea
jnp
imul
int
std
cmp
sub
sti
sub
mov
insl
stos
popf
pop
lea
jnp
imul
int3
or
cmp
sub
or
jmp
fwait
dec
mov
stos
popf
pop
lea
jnp
imul
int
jge
insl
jmp
fcomi
popa
xchg
sti
sub
je
inc
xchg
push
pop
cwtl
fmuls
xor
fsubr
dec
sbb
imul
sbb
cmp
push
jmp
fcomps
call
or
js
or
dec
sub
cmp
cwtl
fmuls
mov
cwtl
enter
call
or
imul
push
movsb
xlat
test
add
mov
in
leave
xchg
insl
sub
jg
mov
popf
into
push
or
pop
xchg
aaa
and
int
cmp
cmp
movsl
cmc
sub
sarb
rcr
out
cltd
les
int
dec
in
idivl
clc
xchg
mov
fmuls
jge
adc
mov
mov
dec
ja
pop
pop
ret
sahf
fs
dec
mov
xchg
in
js
ja
cmp
nop
in
pop
cmp
js
pop
dec
jo
lods
xchg
in
push
fdivs
fidivrs
push
lea
mov
mov
sbb
dec
sbb
xchg
cwtl
fmuls
mov
cwtl
enter
call
push
pop
sbb
js
add
mov
lret
mov
enter
mov
pop
push
sbb
jl
push
cmp
dec
sub
mov
cld
lods
test
shr
pusha
xor
inc
inc
cmp
js
daa
cmp
rcr
int
fcomps
call
push
pop
sbb
js
push
call
fcomps
call
push
pop
sbb
js
push
or
je
xchg
cli
add
mov
dec
dec
ss
pushf
pop
add
cmp
mov
je
inc
jns
fldl
rcll
lahf
out
cmc
fwait
insb
push
pop
imul
mov
outsl
mov
aas
jge
jl
cmc
adc
int3
mov
jl
popf
dec
ljmp
cmp
ret
lock
fs
cmp
mov
xor
sbb
subb
lods
int3
lds
push
inc
jo
ret
int
pop
stc
lcall
jmp
jmp
call
jmp
arpl
add
xchg
inc
push
cli
fcom
and
pop
mov
mov
imul
xor
mov
int
sbb
rorb
sarl
icebp
cltd
sarb
mov
pop
fnstsw
movsb
xor
ret
sbb
push
mov
dec
xor
or
pop
sbb
hlt
pop
lds
dec
cmp
mov
mov
jg
jmp
ret
stos
ljmp
xchg
cmp
bound
cmp
subb
dec
adc
push
ret
aas
mov
add
adc
es
pop
daa
subl
les
out
mov
int3
mov
jle
adc
imul
mov
mov
test
repz
mov
jne
xorb
lock
dec
sbb
xchg
adcb
lret
add
push
xchg
imul
xor
lret
mov
mov
cmpsb
fldl
adc
in
lock
and
dec
rclb
inc
insb
loope
fwait
lcall
fisubrs
sub
push
pop
push
sub
add
test
loopne
or
ret
jmp
ret
mov
inc
add
sbb
rclb
xchg
nop
adc
dec
nop
test
xor
xor
hlt
sub
mov
out
mov
jo
push
cltd
sub
cmp
jmp
gs
int3
push
ljmp
insb
icebp
mov
adc
push
push
mov
xchg
sbb
popf
push
cltd
mov
dec
adc
data16
jb
fisubl
cmp
cmp
fldcw
test
inc
lods
sub
adc
mov
sub
jo
adc
pushf
xchg
fnstcw
mov
mov
jo
jne
inc
mov
xor
fwait
out
stos
das
xor
test
mov
mov
dec
mov
ja
sbb
fwait
xchg
test
mov
int3
sbb
mov
lret
add
shrl
mov
lcall
pop
js
jecxz
hlt
clc
sti
bound
jno
mov
ret
sub
jae
orl
leave
sub
xchg
sbb
in
jns
fisubrl
cmp
cltd
mov
and
out
add
movb
mov
out
popa
loopne
push
push
out
push
push
into
adc
popa
fwait
pushf
cli
stc
stos
enter
test
or
pop
lcall
sbb
push
xor
mov
or
jg
idiv
or
and
push
dec
popf
sub
pop
jno
in
mov
push
jle
je
push
fildll
pushf
pop
pop
ret
mov
sub
push
ja
rclb
rol
sbb
push
pop
mov
and
ret
repz
pop
test
push
fistpll
cld
mov
push
rclb
ja
xchg
lret
leave
ror
add
fwait
lahf
mov
std
xor
jno
hlt
adc
icebp
and
inc
in
and
ds
outsb
adc
clc
aas
xchg
fwait
ret
aas
aad
pop
sti
das
sub
popa
aaa
nop
daa
sbb
sbb
nop
subl
inc
pop
scas
xchg
inc
pusha
fs
or
pushf
cmpsb
pop
inc
dec
das
test
lods
stos
mulb
sub
sub
mov
adc
add
aad
push
pop
in
cmp
and
pusha
xor
sbb
push
flds
mov
insl
popf
addr16
ljmp
xor
shll
mov
push
adc
mov
outsb
cmpsl
mov
adc
jnp
cmc
dec
loopw
fdivs
arpl
jecxz
scas
shlb
mov
adc
sub
push
sub
dec
mov
jbe
and
inc
aaa
lds
xlat
mov
cli
mov
jmp
mov
loop
cmp
in
or
cmp
ds
sbb
aam
adc
lock
aad
add
sbb
enter
rolb
mov
ret
cmc
std
jle
fldcw
shlb
aaa
sti
cmp
loope,pn
or
cwtl
adc
add
in
leave
mov
frstor
dec
std
pop
mov
add
mov
hlt
jae
inc
inc
mov
pushf
sbb
inc
lret
ret
loop
fwait
rol
adc
fcoms
mov
movsl
sbbb
jmp
movsb
icebp
rcll
pop
xchg
push
roll
sub
and
xor
dec
adc
pop
and
mov
dec
out
aad
call
ljmp
push
xor
pusha
aaa
loopne
add
into
ja
jae
rcrb
xchg
ret
in
adc
lods
in
lods
cwtl
xchg
mov
gs
jne
mov
shrl
dec
fmull
mov
sarb
dec
or
push
gs
mov
lahf
mov
jl
orb
bound
out
push
imul
adc
xchg
mov
lock
mov
loopne
js
pop
xor
rcrl
and
js
push
pop
and
data16
hlt
mov
dec
add
mov
cwtl
mov
sahf
scas
jl
sub
mov
push
and
push
aas
stc
mov
fisttpll
in
jns
cmp
xlat
jbe
pusha
jbe
add
pop
cmp
sub
test
inc
mov
fcmovne
aam
sub
mov
mov
mov
adc
int3
or
ret
xor
fsubrl
xchg
enter
adc
insb
ja
dec
push
mov
push
mov
or
lahf
or
jb
rcr
stos
add
jle
movsb
leave
hlt
push
push
xchg
sbb
push
cwtl
push
mov
mov
push
out
mov
das
jecxz
and
fadds
std
fwait
cli
xor
rcr
cli
repz
mov
xor
ret
leave
push
mov
test
push
mov
aad
inc
push
lahf
mov
mov
xchg
test
sar
add
add
aad
rol
cmp
data16
cmp
mov
popa
pop
inc
test
mov
enter
pushf
jl
or
dec
push
shlb
pop
push
mov
cmpsb
inc
test
mov
les
dec
addr16
sti
nop
mov
add
loope
mov
std
out
add
aad
add
lcall
nop
popa
into
xor
sub
js
lods
dec
xor
add
insb
je
lcall
lods
pop
js
xchg
jne
movsb
lcall
mov
je
sti
test
jns
adc
mov
js
punpcklbw
ret
std
pusha
push
push
pop
lahf
out
sbb
aaa
add
out
adc
cmp
xchg
fs
pop
out
sahf
jle
cmpl
jmp
xor
subb
cmpsl
cmpsb
pop
mov
sbb
lock
adc
daa
test
ficompl
aaa
jg
lret
outsl
or
out
adcl
xchg
jnp
lods
aas
cs
mov
fdivl
or
push
jne
or
push
cwtl
cmp
fidivrs
jo
sub
add
dec
mov
testb
mov
adc
das
fstl
add
mov
mov
mov
arpl
out
sbb
inc
xchg
sbb
sbb
imul
scas
jnp
push
outsb
jge
imul
test
cmp
push
addr16
repnz
pop
ljmp
mov
pop
sbb
mov
movsb
xchg
pop
mov
mov
movb
cmp
js
mov
test
jae
xor
mov
out
dec
jmp
stos
push
inc
jbe
jae
mov
idiv
popa
nop
jg
sub
jge
adc
outsl
pop
lods
inc
add
mov
out
insl
out
sahf
cmp
je
and
sub
mov
fwait
jp
addr16
cli
in
imulb
in
fadd
push
js
xor
scas
push
cli
fstp
jns
xchg
xchg
fld
xchg
jb
pop
and
sub
stc
jns
xor
inc
xchg
xchg
jne
fstps
mov
jo
cld
iret
scas
push
push
xor
stos
daa
inc
adc
or
pop
inc
stos
arpl
push
les
daa
loopne,pt
mov
test
mov
fucomp
mov
loop
sbb
xor
idivb
cmc
sbb
in
shrl
pop
push
xor
cs
cmp
ja
add
fadd
popf
add
inc
pop
outsl
sbbl
cmpsb
jecxz
mov
test
dec
cmp
sbb
das
cli
inc
pop
push
fildl
push
je
dec
jge
mov
sub
iret
pop
sbb
lds
aaa
aas
call
sbb
sbb
leave
add
mov
test
push
repnz
shll
sbb
sub
sarl
push
std
lahf
sub
mov
hlt
dec
xor
rcr
shlb
mov
pop
pop
data16
sahf
adc
sbb
scas
add
push
and
int
mov
push
dec
xor
repnz
stos
mov
jo
sbb
cmp
jnp
xchg
pop
sbb
mov
mov
jne
or
call
outsb
fstp
addr16
pop
adcl
xchg
shrl
test
imul
adc
jno
push
pop
xor
sub
sub
ljmp
ja
lahf
sub
jle
jae
jne
xchg
adc
hlt
adc
arpl
orb
aad
or
hlt
xor
arpl
pop
dec
test
test
data16
jle
mov
cmp
movsb
dec
push
sbb
jb
xchg
imul
das
sbb
repnz
cs
xchg
pop
loope
loope
hlt
movsb
cld
jl
cmp
ds
xor
inc
jge
stos
inc
xchg
inc
stos
or
mov
cmp
stc
addb
imul
cmpsl
mov
cwtl
pushf
ljmp
divb
je
out
bound
push
xor
xor
into
fidivrs
fists
mov
outsl
movsb
fs
xchg
push
popf
push
mov
jbe
faddp
cmp
sbb
out
xor
fs
jg
scas
dec
pop
jae
add
std
sbb
out
out
imul
push
xor
lods
or
sbb
loopne
test
cmc
push
push
adc
add
mov
dec
jle
mov
test
cmp
adc
fwait
push
inc
jnp
sub
adc
hlt
inc
cmc
cmp
sarl
leave
dec
jge
divb
or
jmp
out
lds
pop
sbbl
mov
out
sub
cmp
jl
dec
mov
inc
das
xor
icebp
sbb
mov
in
scas
sbb
jmp
xor
cmp
sub
filds
fildl
insl
je
and
pop
ror
idiv
jne,pn
cmc
pop
das
jge
xor
in
xor
dec
outsl
push
xor
imul
dec
inc
dec
aam
cmp
inc
and
cmp
ja
sti
gs
jp
es
add
and
xor
jb
int
das
pop
mov
jl
ficomps
xchg
pop
mov
cmp
test
sub
mov
mov
decb
mov
pushf
pusha
sbb
xchg
stos
fdivrl
andb
fdivs
cmpsb
xor
fmul
mul
jl
inc
xor
cmp
or
adc
dec
and
dec
mov
lds
cmp
mov
das
lods
leave
sbb
shll
or
jmp
jge
fsubr
add
xor
ret
xor
hlt
cmpl
jecxz
cs
jno
adc
sti
pop
mov
push
sbb
mov
push
dec
mov
mov
sub
xchg
lods
xchg
sub
out
shlb
scas
out
xchg
sub
dec
hlt
push
lahf
rclb
push
cmpsb
iret
pushf
mov
or
xchg
ja
cmpsb
popf
repnz
inc
cmp
jns
mov
jns
dec
jns
mov
fcmovu
and
sub
into
jle
add
in
lret
ffreep
push
and
loopne
or
dec
cmp
pop
jns
push
jo
mov
nop
dec
mov
mov
xor
sbb
mov
sbb
loopne
add
xchg
fwait
pushl
push
mov
popf
pop
mov
push
sub
lcall
fistpll
mov
ljmp
adc
mov
adc
push
pop
sbb
or
mov
aaa
in
pushf
sbb
jo
lcall
rorl
lods
jb
jo
daa
rolb
mov
and
push
aas
push
imul
jne
incl
inc
cs
in
mov
xchg
inc
pop
ja
jnp
lods
pusha
mov
enter
pop
push
xchg
aaa
fstps
sahf
pop
mov
call
into
mov
jno
sti
out
mov
in
adc
inc
jae
adc
cmc
adc
and
mov
adc
rcrl
inc
sarb
and
and
in
mov
pop
call
pop
mov
leave
gs
mov
xchg
dec
fcom
pop
mov
addr16
mov
add
insb
mov
jb
cli
lcall
cmp
add
imul
pop
push
loop
movsl
xor
jl
insl
fidivrs
lret
lcall
cli
and
std
jmp
std
nop
dec
pop
montmul
cmpsb
test
sahf
pop
pop
test
je,pt
mov
jecxz
ret
adc
sti
adc
pop
lcall
inc
shr
inc
sbbb
or
or
dec
vandnps
es
not
push
loop
sub
std
jmp
das
cs
add
jbe
int
jnp
push
and
xchg
sbb
jb
dec
and
mov
jbe
jns
xor
jmp
shr
or
outsl
xor
pop
xor
ss
movsb
push
repz
daa
or
cld
mov
outsl
jo
and
mov
cmp
jbe
stos
call
xchg
and
cmc
sub
lock
sbb
and
sub
xchg
mov
ds
maxps
aam
rcrl
insb
stos
sub
fucom
sub
xchg
nop
jl
out
gs
bnd
outsb
jo
or
cmp
roll
jle
jnp
mov
mov
fwait
push
repnz
out
adc
test
mov
movsl
cmpl
add
jecxz
mov
data16
lock
ss
cmp
sub
inc
es
jge
and
loope
inc
add
test
roll
or
mov
lret
adc
std
stc
add
cld
out
aas
jmp
in
mov
push
push
adc
inc
lahf
mov
mov
bound
ror
mov
insb
push
leave
roll
mov
mov
push
mov
pop
pusha
jo
stc
leave
jp
jle
fs
movsb
add
xchg
xlat
fldenv
shrb
xchg
test
cltd
in
pop
cwtl
push
cmp
or
in
sub
ds
cmp
leave
scas
jg
fs
mov
xor
and
xbegin
sarb
fistpl
jp
fcmovb
add
xorl
adc
jne
lea
enter
xor
pop
cmpsl
fldt
xor
dec
mov
ret
xchg
cmp
inc
push
jo
arpl
inc
and
mov
in
bound
mov
ja
dec
mov
xchg
mov
push
mov
fstpt
adc
scas
dec
or
pop
movsl
xor
xchg
ss
push
inc
jno
ds
or
jge
xchg
adc
xor
int3
shll
jge
mov
push
pop
lea
jle
mov
lret
dec
jne
insl
and
pop
pop
push
pop
iret
jg
iret
in
jns
bound
inc
adc
sub
out
xchg
in
mov
push
loop
inc
or
pop
push
mov
nop
mov
push
idivb
movsl
decl
aas
pop
adc
adc
int3
jg
sbb
mov
xorl
mov
lret
pop
or
leave
stos
inc
test
nop
xor
add
cli
mov
pop
out
jmp
xchg
mov
jl
xchg
call
or
test
sbb
lcall
cmovg
adc
rclb
loope
es
stc
dec
stc
lea
cmpsb
cli
fimull
stos
out
pop
add
mov
push
jno
jnp
mov
iret
std
insl
loope
rorl
xchg
mov
cwtl
cmp
sub
icebp
loop
inc
repnz
jp
or
setae
mov
push
hlt
in
dec
sahf
mov
or
jno
stos
out
clc
addb
mov
or
clc
sahf
cmp
xchg
in
xor
inc
sbb
sti
xchg
jecxz
out
sub
xchg
test
das
and
test
inc
popf
jns
and
and
je
stos
movsb
stc
fst
std
int3
add
xlat
and
pushf
jle
push
jge
sahf
ret
mov
outsb
pop
xchg
pop
xor
mov
mov
repz
cmp
jecxz
das
sub
push
aam
lock
es
mov
sub
in
cmp
xor
repnz
push
dec
sahf
shll
std
scas
push
add
in
add
adc
mov
mov
lods
mov
add
call
gs
adc
cmp
orl
dec
loop
mov
fsub
or
insw
cld
sahf
mov
andb
out
or
xchg
jge
sti
push
sbb
pop
cmp
dec
push
bound
jno
pop
xchg
out
mov
fucomip
pop
fs
sub
out
cmp
dec
xchg
or
inc
dec
sbb
icebp
push
mov
ret
stos
jge
add
xlat
std
ja
and
cmp
push
adc
add
das
xchg
fs
fisttpl
sbbl
cmp
xchg
fwait
push
push
clc
enter
in
cmp
push
dec
adc
push
xor
mov
xchg
movsl
sbb
push
ret
addr16
shlb
jae
js
inc
lock
add
jp
and
and
je
aam
cs
mov
sahf
inc
or
push
add
pop
pop
push
lea
and
ficompl
nop
dec
mov
and
test
inc
sbb
cld
lods
push
add
or
push
scas
mov
aad
cmp
cmp
mov
cmp
movsb
jle
jno
xor
scas
lea
lea
dec
outsb
ja
popa
scas
adc
mov
iret
mov
gs
addr16
lret
sub
cmp
loop
lea
mov
ret
push
push
rcr
fstl
xchg
sbb
mov
cmp
inc
push
in
out
cmp
sbbl
cmp
dec
lods
sub
test
push
ficoml
pop
pop
mov
out
push
inc
scas
jmp
icebp
loope
mov
sbb
push
mov
adc
push
repz
mov
fcmove
mov
mov
mov
jmp
shl
insb
out
or
cmp
outsl
out
xor
mov
push
or
jg
fsubrl
out
out
test
das
inc
sub
aaa
jg
or
insl
inc
lahf
in
mov
testb
mov
dec
mov
outsb
mov
mov
lods
add
lret
push
lods
push
ss
xor
out
data16
lea
adc
cmc
xor
jmp
and
dec
jmp
aam
push
xchg
mov
adc
out
dec
js
or
dec
fs
lahf
xor
mov
arpl
xor
jp
mov
mov
xor
call
loop
pop
inc
in
push
adc
ret
sbb
xor
xchg
aad
and
xchg
or
cmp
push
icebp
stos
rcr
mov
ret
imull
jno
outsb
or
loopne
out
sub
in
xchg
pop
test
inc
mov
pop
popf
or
in
shl
pop
insb
pop
ret
ds
jbe
leave
fsub
lods
mov
mov
ret
aad
sbb
enter
cmp
iret
dec
fidivrl
outsl
mov
adc
lods
jo
or
fwait
pop
mov
mov
das
xor
cmp
fimull
jnp
push
in
fsubrs
fwait
cmp
xchg
push
rcl
cmp
aaa
pop
bound
in
cmp
dec
jno
icebp
sbb
dec
int3
daa
stos
add
pop
decl
xlat
or
fsubs
jo
cli
cld
push
inc
cmpl
loope
out
fdivs
es
or
xchg
jp
jnp
gs
cwtl
enter
call
push
pop
sbb
js
push
call
fcomps
call
push
pop
sbb
js
push
call
fcomps
call
push
pop
sbb
js
push
jmp
fcomps
call
ret
pop
jg
nop
mov
xchg
xchg
in
hlt
test
imul
sahf
leave
cmp
inc
or
and
xor
add
adc
in
hlt
test
movsb
stc
mov
test
xchg
leave
cmp
cmp
sbb
add
adc
in
hlt
test
movsb
loopne
icebp
test
xchg
shll
adc
insb
push
or
pop
pop
jno
jp
mov
in
mov
xor
mov
mov
pusha
xchg
jno
push
movsl
adc
lods
in
call
pop
jb
pop
jp
imul
or
cmp
pop
cltd
add
inc
cld
cs
mov
jmp
fs
xchg
mov
imul
hlt
test
sbb
sub
adcl
fldt
je
xchg
and
sbb
sub
fnstenv
mov
or
lret
in
pop
adc
dec
pop
cltd
pop
inc
retw
inc
or
jecxz
inc
xor
test
je
mov
pop
sub
aam
movsb
stc
mov
test
xchg
shlb
xor
adc
xor
add
adc
movsl
faddl
mov
xchg
movsb
fs
adc
dec
sub
and
pop
push
and
rcll
movsb
mov
mov
and
dec
and
xor
hlt
int3
stos
clc
mov
jmp
cmp
sbb
jns
imul
hlt
test
movsb
stc
mov
test
xchg
leave
cmp
sbb
jns
imul
shrl
pop
mov
mov
outsl
arpl
adc
insl
add
aam
pop
pop
add
xchg
mov
dec
jns
add
and
dec
jg
add
fcomps
mov
popa
fwait
orb
movsb
dec
jge
mov
xor
fisttps
nop
pop
popa
daa
mov
xor
daa
test
mull
fcmovbe
cmp
in
rolb
pop
jo
mov
test
adc
mov
cmp
dec
xchg
xor
mov
dec
shll
inc
js
shr
sub
and
jae
pop
and
mov
icebp
or
xor
mov
ds
mov
adc
cmp
ret
ret
sti
jo
jno
cmp
and
mov
mov
ja
iret
stos
mov
push
dec
pop
aaa
push
or
xchg
aam
fwait
jp
icebp
pop
loop
movsb
sbb
pop
mov
mov
cwtl
stos
fwait
es
std
cwtl
jbe
sahf
out
cmp
aam
cmc
hlt
sbb
add
inc
xchg
add
test
cmp
test
xlat
bound
sub
jp
cli
repz
xchg
mov
stos
cli
adc
push
notl
or
xor
fcomip
sbb
mov
in
neg
je
jp
mov
mov
stos
mov
xchg
dec
dec
push
lods
fwait
lock
cmp
gs
dec
outsb
pushaw
cmpsl
sub
inc
js
fdivs
mov
adc
lret
jg
mov
das
inc
jne
aam
jmp
mov
jne
pop
in
cltd
mov
dec
aam
arpl
push
push
inc
mov
insb
cli
mov
in
adc
int3
int
ficoml
loop
xchg
jmp
scas
and
jecxz
jne
push
pushf
jge
cli
das
outsl
jnp
mov
ret
inc
inc
adc
cmp
arpl
stos
scas
test
mov
divps
imul
in
pop
cmp
jmp
test
pop
push
inc
lcall
inc
adcl
popf
sbb
es
das
inc
mov
push
or
call
addr16
out
push
push
fwait
jnp
enter
sti
pop
daa
or
dec
sub
jl
mov
mov
lock
dec
jmp
push
bound
movsb
push
cmp
sbb
adc
aas
xchg
adc
mov
int
push
xor
and
xchg
in
xlat
fwait
aas
aad
shlb
sti
cmpsl
or
xor
or
ljmp
orl
rorl
sub
addr16
pushf
inc
jo
and
in
and
inc
lret
jle
adc
in
mov
testl
sbb
xchg
mov
sbb
das
mov
movb
sub
lcall
add
insb
mov
nop
imul
sub
lcall
sub
or
mov
aam
and
jecxz
inc
mov
stos
dec
outsb
sub
sbb
pop
int3
cmpsl
mov
or
or
not
add
sub
push
mov
cltd
add
ss
scas
insl
cli
xor
loop
push
cmpb
xchg
xor
pop
xabort
push
push
jns
or
cmc
lcall
xchg
scas
and
adc
mov
push
dec
scas
pop
sti
gs
pushfw
loopne
cli
stos
leave
mov
loope
mov
xchg
mov
push
or
sti
dec
lret
fs
pop
or
stos
sub
in
push
fwait
push
pop
mov
jnp
dec
inc
repz
addr16
and
scas
in
aad
mov
les
hlt
jne
dec
fsubrs
popf
cmp
dec
inc
jg
push
dec
jp
mov
push
or
or
jecxz
loop
je
in
add
inc
clc
into
mov
inc
and
xor
cwtl
pop
arpl
add
mov
fstps
data16
jb
test
mov
lahf
aad
sbb
ja
clc
inc
cmp
jo
out
adc
mov
icebp
xlat
ljmp
nop
jge
leave
stc
cwtl
imul
std
mov
es
jno
pop
mov
inc
aad
sbb
lret
sbb
add
mov
rcll
push
and
inc
pop
add
jo
movsl
popa
add
mov
jg
je
jbe
jg
lea
rcrb
inc
stc
jecxz
mov
and
sahf
jo
and
adc
mov
leave
add
inc
cmp
jecxz
lock
fldenv
push
xchg
xlat
cmp
lock
mov
ret
fildll
ret
push
inc
repnz
out
call
xchg
inc
sbb
loop
lock
mov
mov
add
sbb
es
push
cmp
mov
cwtl
jbe
xchg
sbb
xchg
and
dec
push
mov
cmpsl
mov
pop
dec
insl
rcrb
enter
or
fsubrs
push
or
movb
lods
lahf
sbb
cltd
add
or
loop
add
mov
lcall
test
or
popl
aaa
imul
mov
iret
sahf
push
push
pusha
clc
adc
loope
push
lret
repz
mov
push
data16
push
jmp
inc
dec
lods
push
push
xor
lcall
andl
popf
loop
cli
test
push
fsts
or
pusha
jnp
les
jp
inc
into
jg
cld
xchg
add
sub
imul
pop
sub
mov
mov
mov
adc
add
call
lret
xor
inc
lods
rcrl
add
cmp
xchg
adc
fsubr
sub
das
scas
sbb
push
pop
dec
sbb
mov
mov
cmovns
ret
cmpsb
in
inc
pushf
jmp
shl
into
fmul
xor
popa
inc
movb
mov
pop
pop
adc
add
dec
enter
xchg
stc
adc
xchg
repnz
arpl
testl
jne
push
bound
jbe
test
add
call
arpl
ss
xorb
js,pn
in
inc
jl
push
xchg
jp
push
mov
ret
sahf
mov
sub
or
sti
scas
inc
fisubl
cmp
and
test
pop
dec
xchg
das
rorb
cmpsl
sub
inc
aad
aas
stos
push
inc
scas
push
sub
clc
dec
dec
lds
enterw
xchg
cmc
jl
cwtl
cmpsb
push
cmp
add
dec
scas
mov
xor
lods
inc
repz
mov
sbb
push
repnz
mov
aam
aas
sub
sbb
adc
orl
lea
pop
fmul
mov
xchg
xchg
lea
cltd
or
das
mov
xor
or
js
mov
xlat
mov
sub
lea
xchg
sbb
and
inc
jle
and
cmpsb
aas
mov
add
shl
cmp
outsl
mov
mov
or
dec
cli
fsubs
push
cmp
xchg
enter
push
enter
mov
mov
inc
lea
pop
stc
pushf
mov
push
cld
mov
push
jns
mov
mov
pop
pop
rclb
jns
aas
xor
sti
sbb
call
addr16
ds
rclb
in
and
and
mov
xchg
push
ret
addr16
fcomps
mov
loope
mov
dec
dec
ljmp
stos
std
push
das
add
xor
fsubr
hlt
push
xchg
mov
scas
in
ret
in
mov
inc
aad
xchg
or
mov
xchg
call
jae
ds
cmp
cltd
mov
iret
aam
in
sti
pop
mov
bound
mov
jle
into
sbb
mov
dec
mov
mov
and
push
xchg
push
mov
cli
inc
nopl
lock
dec
fwait
cmp
jmp
and
pop
push
push
movb
push
out
sub
jmp
cmc
pop
pushf
xchg
fsubrs
lods
clc
out
cmc
mov
mov
xorl
out
out
adc
pop
push
jbe
dec
xchg
jl
sub
or
push
xor
push
cld
mov
pusha
das
ja,pt
jl
data16
adc
and
cltd
jecxz
push
lock
push
movsb
cmp
aad
jl
jo
test
xchg
and
in
pop
xchg
ficomps
pop
push
fdivrp
xchg
popf
mov
jle
pop
xchg
inc
pop
mov
imull
pop
inc
inc
imul
fmul
xor
es
push
jae
sbb
bound
bound
ret
pop
cwtl
das
xor
pop
pop
call
pusha
out
mov
dec
sbb
adc
fucomp
stos
test
pushl
insl
sahf
inc
inc
inc
xor
push
call
fs
mov
jg
jb
push
xchg
lods
xorb
cmp
jp
pushf
arpl
movsl
in
aas
push
jecxz
dec
pop
push
pop
mov
lea
add
sbb
dec
insl
fwait
daa
push
xchg
faddl
in
mov
jo
jb
lods
stc
xchg
sbb
mov
jo
dec
cmpsb
pushf
mov
ja
xlat
jae
sub
lcall
mov
xchg
adc
incb
xchg
sbb
and
and
dec
pop
and
dec
inc
pusha
and
adc
xor
sti
or
dec
and
adc
xchg
jl
dec
call
sbb
mov
xchg
cmpsb
mov
jg
mov
stc
and
in
popa
mov
or
cmp
pop
sbb
or
dec
scas
jbe
je
pop
push
mov
dec
movsl
sub
fwait
shrb
add
lcall
lret
inc
xchg
mov
pushf
les
sbb
jno
or
loop
ljmp
iret
cmpsb
loope
sub
pop
dec
push
sbb
sub
xor
movsl
arpl
sahf
mov
divl
adc
adc
add
inc
dec
xchg
loope
push
dec
mov
fistpll
push
mov
mov
sub
cs
mov
jg
cmp
jecxz
fldcw
loope
pop
mov
lods
ss
nop
test
loopne,pt
dec
mov
mov
shlb
sub
adc
xor
test
call
mov
out
xlat
test
or
add
repnz
pop
fnstsw
insl
mov
dec
jge
pusha
in
cmp
jge
jmp
sbb
rol
sub
xchg
lock
hlt
imul
mov
stos
ret
and
out
push
lret
add
push
inc
fs
cmp
pop
inc
fiadds
insb
xchg
sub
daa
pop
jb
fistps
in
or
xlat
hlt
cltd
pusha
adcl
cmp
dec
pop
push
cmpsb
mov
xor
jns
xchg
sub
mov
out
push
mov
stos
or
out
jb
call
push
ja
in
aaa
addr16
inc
xchg
push
roll
fstps
jmp
add
shlb
and
int3
mov
sbb
jno
loope
push
es
ret
mov
lahf
sti
adc
mov
imul
pop
ss
mov
mov
daa
lret
xor
pop
sub
je
loopne
pusha
ficompl
xor
add
inc
inc
dec
and
out
ret
dec
mov
push
test
or
outsl
lret
mov
push
and
fldl
mov
out
lds
cli
mov
stos
jae
mov
xlat
push
xor
inc
es
sti
pop
inc
and
outsl
je
push
out
arpl
stos
cmp
fsubr
mov
add
popa
xchg
dec
inc
push
pop
pop
stos
ret
jae
pop
mov
loop
rcr
lods
ja
sub
stc
out
lret
jnp
mov
dec
rorl
add
aam
sub
or
ficompl
imul
push
lods
adc
xor
pusha
cmp
call
xchg
xchg
mov
mov
ret
cmc
inc
jae
push
pop
dec
lea
push
shr
xchg
xor
aas
lcall
push
sub
or
xlat
test
ds
push
scas
sti
dec
xor
push
out
ljmp
daa
mov
lods
jg
jecxz
imul
mov
outsb
push
dec
push
clc
sbb
inc
sbb
arpl
xor
mov
ret
out
jne
negl
adc
jo
push
sahf
adc
add
pop
test
test
push
in
aam
imul
inc
cmp
dec
shl
mov
mov
mov
aad
xchg
cmp
add
xor
jae
data16
test
sub
in
fwait
sbb
loopne
das
inc
fimull
fcomps
insb
lods
and
pusha
cmp
push
push
pushf
dec
outsb
ret
roll
cmp
test
in
mov
dec
push
adc
cmp
dec
dec
push
jle,pt
shlb
xor
xchg
mov
mov
pop
movq
sbb
dec
aad
repz
movsb
hlt
in
jg
and
sub
dec
sub
xchg
int
mov
aaa
or
dec
imul
bnd
aas
or
lods
dec
xor
sub
pop
loope
jl
cmp
sbb
and
mov
test
xchg
sub
rol
and
out
dec
pop
movsl
inc
push
adc
nop
ss
xchg
xor
popf
outsb
mov
lods
cmp
in
stos
mov
aam
jae
lea
shl
adc
cmpsl
fdivrl
push
aad
fcmovb
mov
jae
xor
mov
aas
int
cmp
push
test
into
mov
sbb
iret
cmp
pop
hlt
mov
loopne
mov
les
ja
cmp
push
fwait
sub
xchg
push
movsl
jle
push
adc
fnsave
sbb
jb
sbb
testb
inc
mov
outsb
sti
test
or
and
cwtl
cmp
cmp
or
sub
lds
fsubr
xchg
sbb
push
and
sub
movsb
inc
xor
sub
xchg
dec
sub
sub
std
cwtl
movsl
sub
cmp
sahf
jmp
rcr
lds
dec
pop
lret
jb
cmp
aas
shl
push
sbb
int
adc
cmc
sahf
lock
divb
or
mov
xor
sbb
rcrb
inc
mov
or
mov
repz
lcall
ret
cld
add
dec
sub
cld
scas
popa
shrb
popf
int
mov
push
adc
mov
fcos
cltd
inc
out
fsubrs
xchg
xchg
jmp
fs
inc
mov
fcmovb
sub
je
int3
daa
mov
sbb
xor
cmp
dec
sahf
jmp
aas
or
push
mov
or
divl
push
cmc
shlb
or
add
outsl
sti
mov
jns
mov
repz
jge
inc
fildl
push
ds
lahf
out
std
push
mov
dec
test
sbb
cmpsb
ret
jb
dec
inc
popf
sbb
lahf
sub
xlat
scas
cli
pop
sub
movsl
dec
fistl
stc
or
int3
and
mov
push
xlat
mov
push
add
aas
jns
push
ja
pop
in
cwtl
xor
dec
fmulp
pmuludq
stc
pushw
xchg
hlt
sarl
xchg
inc
pushf
and
sbb
xchg
mov
push
mov
sarl
adc
adc
xchg
jnp
aad
loopne
mov
mov
add
xchg
adc
mov
push
arpl
pop
sub
fs
sub
dec
xchg
aaa
stos
or
ljmp
add
sbb
pand
enter
aaa
pop
pop
int
inc
cwtl
and
xlat
xlat
int3
fs
inc
adc
mov
push
cltd
mov
ret
pop
lock
cmp
and
stc
xorps
pushf
or
je
pop
test
and
out
testl
iret
jnp
pop
mov
push
or
repz
mov
xchg
or
push
jbe
sub
ret
dec
out
int
cmp
sahf
fs
scas
imul
or
xor
in
mov
jne,pn
cmp
inc
add
inc
stos
int3
rol
inc
adc
das
inc
jne
push
out
inc
adc
mov
cld
popf
fstpt
mov
and
out
loopne
enter
mov
mov
inc
rcll
insl
pop
movsl
dec
movsb
mov
or
xchg
iret
cltd
cmp
fwait
push
add
jne
inc
xchg
and
xor
sbb
push
lret
mov
testb
and
imul
sbb
sbb
pop
idivl
xlat
mov
or
iret
lea
push
jp
dec
movsl
mov
lds
xor
lret
dec
dec
cmpsb
negl
loope
imul
jno
mov
sub
rolb
fneni(8087
rol
addb
xor
sub
hlt
lea
dec
mov
push
in
push
mov
add
mov
fstpl
clc
mov
xchg
clc
and
test
popf
int3
clc
cli
pop
xchg
xchg
adc
sub
xorps
inc
sub
xchg
xor
outsb
mov
icebp
cmpsl
jmp
in
repz
orb
shlb
pushf
mov
add
jb
mov
or
xchg
loop
jne
jo
sub
push
insb
outsl
sbbb
xchg
pop
stos
sub
fwait
aas
mov
test
add
mov
pop
jnp
push
jmp
mov
xor
pushf
fildl
mov
dec
aaa
fldt
les
call
xchg
stc
lds
lret
mov
jp
icebp
ljmp
mov
call
mov
sbb
movsl
or
add
add
pop
ss
pop
shrl
adc
stos
outsl
cltd
cmp
mov
mov
xor
out
sbb
pop
aam
inc
rcll
test
sbb
idivb
and
fwait
mov
mov
push
adc
clc
loope
cld
dec
inc
dec
sbb
push
and
cmp
dec
in
lahf
in
sbb
imul
cmp
cli
rcrl
pop
push
popf
sbb
add
ja
aad
sbb
js
js
lcall
sbb
jnp
stc
mov
inc
cmp
dec
jle
sub
in
mull
sub
addr16
outsl
push
das
or
lret
loope
rcll
inc
dec
ret
mov
fstl
xor
gs
mov
je
mov
sti
mov
test
shll
icebp
movsb
or
dec
push
jecxz
ret
int3
iret
add
dec
jmp
xchg
lret
insb
mov
adc
nop
inc
leave
js
lcall
loop
xchg
ret
fldl
jb
push
subb
add
sbb
ret
in
xor
movsl
xor
pop
mov
cld
gs
popf
arpl
out
inc
sarl
shlb
or
arpl
into
xchg
push
lock
fidivs
inc
arpl
pop
xchg
in
pop
add
daa
sbb
mov
jge
sarb
and
andl
dec
mov
in
xlat
dec
das
inc
pop
lret
pop
mov
out
aad
sub
mov
in
icebp
je
push
mov
insl
xchg
es
shlb
imul
in
data16
adc
pop
cwtl
pop
inc
lea
adc
or
repnz
daa
cli
nop
jecxz
add
jno
pop
enter
or
and
xor
pusha
inc
adc
movsl
hlt
out
jae
iret
test
leave
pop
in
and
insl
test
mov
lahf
fimull
jecxz
testl
pop
pusha
push
mov
push
pop
sbb
repnz
xchg
pusha
add
add
rcrl
cmp
mov
in
lss
fsubp
rol
jbe
les
bnd
push
pop
arpl
ds
scas
dec
dec
sub
insb
popf
mov
adc
imul
xor
scas
adc
jmp
ja
daa
inc
dec
jp
jge
pop
xchg
incl
push
sub
test
aam
aam
or
aas
push
ret
push
sbb
add
imul
and
xor
cmc
push
sbb
and
rorl
jmp
mov
xchg
mov
sub
jmp
outsb
in
outsb
mov
push
and
push
xor
mov
pusha
pusha
repz
add
out
sub
mov
fcmovnu
adc
add
lock
adc
shrl
cmp
bound
ljmp
lahf
jge
and
sbb
pop
dec
inc
adc
fbld
cmc
or
push
or
dec
xchg
pop
in
fstl
idivl
jae
cld
sub
movsb
aas
mov
repnz
mov
push
in
iret
lods
push
and
push
jle
ja
cmp
fsubrl
out
push
mov
adc
mov
jmp
pop
sub
inc
test
insl
push
in
xchg
nop
clc
adc
pop
push
push
imul
adc
stc
sub
cmp
into
xchg
cmp
lods
dec
xchg
pop
inc
cmp
jp
call
std
sbb
mov
xor
mov
adc
ret
mov
xor
add
aas
mov
mov
mov
mov
lods
and
mov
call
cmc
addr16
test
movsb
stc
mov
test
xchg
leave
cmp
sbb
jns
imul
hlt
test
movsb
stc
mov
test
xchg
leave
cmp
sbb
jns
imul
je
inc
cltd
aam
and
mov
test
adc
cmp
sbb
jns
imul
hlt
test
movsb
stc
mov
test
xchg
leave
cmp
sbb
icebp
inc
xchg
je
fs
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsl
into
jl
dec
ljmp
sub
xor
int3
pop
fdivrl
bsf
mov
mov
or
jl
and
pop
cli
sub
cmp
or
sbb
in
dec
cld
pop
lods
fdivrl
and
sbb
mov
jo
mov
mov
sbb
mov
jns
or
jl
pop
rcrb
xor
sub
aaa
jnp
ror
xchg
sub
jmp
aad
jno
leave
sbbb
sahf
flds
adcl
cmpsb
dec
xchg
and
push
pop
loopne
mov
cmp
in
jge
add
das
loope
dec
cld
dec
fldcw
test
mov
fisubrl
sahf
cmp
repz
aaa
in
iret
cld
mov
push
pop
mov
inc
xchg
sbb
daa
insb
pop
roll
imul
int3
mov
pcmpeqb
mov
xor
mov
imul
sbb
or
sub
and
pop
mov
lahf
push
aaa
inc
sub
dec
sahf
pop
cli
enter
or
mov
repnz
ss
mov
lret
cmp
push
idivl
sbb
in
or
sbb
dec
shlb
pop
stc
push
and
xchg
inc
fcomps
stc
ret
dec
mov
cmp
in
fisttpll
mov
setbe
cmp
or
sbb
in
dec
cld
pop
int3
push
jp
or
insb
lret
dec
ljmp
or
sbb
in
dec
cld
pop
int3
push
jp
or
insb
lret
mov
aam
bound
mov
and
in
pop
mov
xlat
inc
lods
scas
fcomps
add
test
and
mov
push
inc
fisttpl
fwait
arpl
push
pop
xchg
cmp
jne
xor
enter
mov
lock
out
mov
popa
ss
cli
es
adc
sarb
inc
rolb
jne
daa
pop
xchg
cmpsl
int
repnz
jae
das
shlb
movsb
je
jne
shl
data16
cwtl
repz
outsb
pop
insb
in
add
add
adc
pop
shlb
lods
pop
daa
pushf
loop
mov
jmp
outsl
pop
pop
cli
sbb
xchg
sbb
pop
fbld
test
sbb
xlat
jbe
test
xor
aad
insl
inc
insl
push
cmpsb
lret
and
or
test
or
and
or
and
lock
mov
mov
aam
adc
pop
or
add
dec
mov
cmc
inc
cld
adc
bnd
inc
xor
movb
push
lock
hlt
ds
sbb
arpl
ret
mov
test
jmp
lcall
pop
fsts
leave
sub
push
push
jl
cmpsl
mov
iret
push
scas
adc
push
mov
rcl
pop
adc
adc
adc
adc
lds
inc
and
push
mov
aas
sub
scas
daa
xor
rorl
mov
inc
xchg
mov
fptan
push
loope
or
adc
pop
add
stos
leave
add
mov
push
sarl
add
addr16
sbb
jns
lahf
add
push
gs
dec
out
mov
out
jns
mov
mov
jle
or
xchg
cmp
addr16
push
push
inc
mov
jl
and
jle
rclb
cmc
xchg
jno
cmp
movsb
or
push
push
cwtl
cmpsl
mov
fwait
roll
icebp
imul
daa
hlt
dec
sub
jmp
popa
dec
sub
loope
inc
ret
loopne
dec
in
dec
pop
into
mov
ljmp
adc
or
add
int
ret
gs
sbb
pop
dec
xchg
in
pushf
push
rcll
sub
stos
aas
sbb
jmp
ret
sbb
lods
mov
test
inc
bound
add
mov
adc
xchg
lods
cli
in
xchg
addl
lods
push
fucomp
xchg
and
imul
mov
sub
xchg
fsubrs
mov
sbb
mov
mov
daa
mov
popa
sbb
lahf
jne
jb
movsb
adcb
add
rcrl
mov
jmp
js
es
sbb
mov
lcall
pop
mov
push
enter
push
mov
pop
test
mov
sub
mov
add
mov
gs
lret
xor
xchg
dec
push
xor
int3
out
adc
sub
outsl
jg
jae
fcoml
xchg
mov
xlat
mov
std
xor
jne
jne
jge
xchg
push
aas
les
mov
into
mov
jecxz
xchg
add
or
jno
mov
mov
movsb
jl
and
rorl
push
stos
fnstcw
test
js
sarb
jno
pop
xor
pop
push
sbb
test
lahf
push
cmpsl
jecxz
mov
loope
cmp
out
mov
mov
stc
mov
bndldx
and
adc
fbstp
xor
data16
xchg
rolb
push
pushf
mov
icebp
popa
sbb
mov
mov
mov
dec
xor
adc
nop
mov
ret
sub
outsl
stos
push
test
out
push
sub
xchg
sti
push
xor
xor
lock
enter
sbb
dec
pop
out
sbb
jb
adc
dec
loope
insb
xorl
incl
shlb
jnp
sbb
or
and
push
fnstsw
adc
adc
in
cwtl
mov
push
push
cmp
xchg
loop
adc
shrl
push
mov
addr16
bound
add
dec
pop
testb
jbe
movsl
mov
aaa
sbb
jno
xchg
push
mov
jo
sarb
arpl
popl
cmp
jp
mov
inc
rorb
jg
sbb
in
pop
jge
xor
sbb
sti
popf
dec
and
jmp
xchg
subb
xchg
mov
lods
add
in
jbe
push
adc
aad
jnp
inc
mov
mov
sub
xchg
and
jne
xchg
das
jle
mov
nop
mov
icebp
and
movsl
subl
mov
ret
movsb
mov
pop
adc
into
dec
pop
fcomps
std
cs
lods
cltd
mov
rclb
fcompp
push
gs
sti
xor
adc
cmp
xchg
iret
add
ljmp
stos
add
push
or
push
aaa
int
ret
push
ja
or
hlt
push
mov
scas
cmp
into
dec
push
mov
inc
cmp
out
adc
inc
dec
cmp
ljmp
mov
int3
sub
sbb
mov
sbb
jns
test
into
dec
imul
pushf
mov
sub
out
hlt
jb
jmp
jecxz
cmp
jp
cmpsl
negl
add
aam
lcall
fcoml
push
mov
lds
xchg
popa
call
lret
sbb
jl
or
push
xchg
and
and
or
rorl
je
sahf
aad
stos
sti
mov
jp
fcom
dec
sti
mov
std
mov
test
sub
mov
daa
mov
jo
stc
out
in
dec
shll
add
icebp
icebp
clc
out
inc
pop
sbb
test
insl
leave
sub
je
daa
or
jns
pop
add
call
sbb
test
fnstenv
dec
out
andl
data16
push
sub
sarb
int
ss
daa
cwtl
push
adc
lahf
jns
adc
stos
lods
nop
call
filds
add
pop
out
push
mov
sqrtps
imul
gs
mov
repnz
jecxz
add
jne
cmp
divl
cli
sbb
jle
aad
idivl
mov
scas
push
imul
outsb
sub
imul
mov
and
xchg
mov
fs
sahf
mov
stos
cmp
sub
popl
sbb
push
adc
add
dec
xor
cmpsl
test
stos
push
bnd
sahf
mov
iret
pop
jle
pop
dec
das
insb
sbb
cmp
loop
scas
imul
xchg
in
inc
rcrb
pop
mov
mov
into
mov
xor
or
popa
lods
nop
or
fs
movsl
mov
mov
mov
push
mov
shlb
fists
or
pop
jbe
jno
xchg
loope
fwait
ds
push
js
ja
and
and
loopne
mov
shl
fwait
jno
inc
sub
or
enter
inc
sbb
notb
or
shlb
mov
adc
mov
scas
mov
lods
inc
js
dec
and
popf
fnstenv
xchg
scas
out
mov
xchg
notb
outsl
gs
pop
shlb
fcomps
mov
xor
cmp
xchg
add
mov
out
test
push
test
leave
mov
icebp
cltd
or
dec
and
mov
cmp
and
mov
add
adc
leave
mov
mov
sub
jne
nop
aas
or
jbe
imul
out
jle
icebp
dec
pop
mov
ja
aam
xor
xchg
addr16
sarl
pmulhw
or
cltd
mov
inc
js
andl
repz
scas
mov
data16
stos
pop
xchg
xchg
jnp
xchg
push
xor
les
mov
hlt
inc
ss
pop
fsts
adc
inc
jg
scas
cmpsb
mov
jo
jb
lahf
ljmp
outsb
mov
xlat
cwtl
repz
pop
or
out
bound
sub
bound
pop
xchg
and
insb
pop
lahf
loop
jp
cmp
xchg
addr16
inc
sub
clc
xchg
sti
lods
inc
out
ljmp
les
fcomps
out
xor
fwait
sub
and
arpl
in
mov
mov
shrl
and
js
push
in
inc
cmp
pop
in
mov
or
push
test
aaa
dec
rcl
popa
scas
xchg
imul
iret
add
lds
jne
xchg
data16
je
jne
sub
loope
jmp
enter
mov
mov
xor
insl
jbe
mov
fisttpl
xchg
sub
lcall
je
outsl
aas
xchg
xchg
jmp
out
dec
jo
and
add
gs
mov
xchg
lret
testl
loopne
mov
aad
xlat
inc
cmpl
mov
hlt
add
ljmp
repnz
xchg
insb
int
xlat
mov
mov
push
push
jmp
pusha
imul
loope
jl
out
or
inc
testb
outsb
jne
in
movl
cld
lcall
cmp
adcl
js
add
jb
mov
insl
icebp
shrb
xchg
in
js
and
push
pop
ficoms
iret
or
jecxz
fwait
orl
into
mov
movsl
mov
add
scas
xchg
lret
and
cwtl
adc
fcoms
inc
cmpl
fistpll
cli
sub
mov
sub
mov
aad
aas
lds
out
push
xor
and
or
lods
xchg
mov
iret
into
sarl
or
movsb
mov
enter
and
adc
pushf
outsb
mov
add
or
inc
stos
aaa
sar
mov
jl
rolw
dec
frstpm(287
pop
cmpb
dec
das
adc
cmp
xlat
add
outsl
ds
or
sbb
aam
sub
cs
fchs
pop
xchg
cmc
movsl
xchg
push
out
jbe
decb
adc
inc
icebp
and
in
inc
xchg
cmp
scas
mov
or
pop
sbb
xchg
pop
cmpsl
fidivs
pop
push
jmp
fmuls
adc
imul
adc
push
fs
clc
pop
lds
mov
dec
arpl
inc
adc
mov
gs
dec
jge
xor
ds
or
lret
in
xchg
inc
popl
sbb
cltd
dec
lods
fnstcw
jg
mov
aas
movsb
xor
leave
pop
push
fld
shrl
into
cmpsl
xor
aas
lahf
fstpt
mov
std
cmpsb
loopne
jne
mov
shlb
lret
and
mov
pushf
loope
xchg
fsubrp
mov
hlt
sbb
push
jne
adc
call
cmp
sti
lret
inc
fwait
cmp
mov
adc
push
push
sbb
mov
imul
sbb
pmaxsw
sti
pop
in
xor
dec
int
push
int
in
enter
xchg
neg
lret
jle
adc
sbb
repnz
rcrl
fprem
mov
xchg
inc
scas
cmp
mov
and
and
lret
xchg
pop
jo
mov
jmp
xchg
xor
mov
test
pop
arpl
les
inc
adc
ljmp
or
out
cmpsb
orb
xchg
fsubl
fnsave
and
nop
sbb
xor
mov
adc
push
pxor
jecxz
push
iret
xchg
inc
ret
push
enter
xchg
push
push
xor
in
inc
jne,pn
mov
inc
rcl
orl
ret
addr16
lods
pop
cmp
lret
scas
jns
push
and
fstl
dec
stos
aaa
sub
push
cltd
mov
push
imul
insl
sbb
jb
add
pop
inc
in
in
aad
lret
ret
pop
inc
pusha
stos
xor
cmp
shll
scas
ljmp
inc
pop
cld
nop
fdivr
add
sub
xor
popa
adc
cmp
js
outsl
loop
mov
sahf
mov
clc
and
xchg
roll
leave
daa
repnz
les
dec
das
pop
fdivl
rorl
sub
and
jnp
push
fbstp
popa
fnstsw
jno
push
idivl
xor
loop
cli
pop
movsl
fs
clc
leave
mov
std
cltd
mov
pusha
dec
sub
cs
sbb
inc
mov
mov
pop
jmp
jl
sub
xchg
dec
in
jbe
in
jl
fwait
in
insl
add
jl
jmp
sub
sbb
fistps
es
les
cltd
outsb
pop
jmp
lahf
inc
dec
and
cli
popf
divl
pop
fstpt
push
cwtl
push
cmp
mov
enter
mov
and
jg
xchg
mov
sbb
add
sahf
nop
xchg
cld
push
push
clc
mov
fcoms
cmc
mov
outsb
jl
sbb
xlat
es
push
insb
std
mov
bound
cltd
je
nop
add
pop
xor
mov
push
or
ds
lock
cwtl
shll
repz
or
clc
in
push
mov
inc
add
testl
mov
push
pop
incl
add
enter
cwtl
shll
sub
cwtl
cmpsl
les
sar
adc
xor
xor
or
mov
adc
mov
loope
in
jmp
mov
xorps
ret
enter
xchg
pop
stos
and
push
int
inc
cs
jg
mov
xor
push
and
or
repz
mov
addr16
pop
dec
dec
cmp
stc
lret
aaa
imull
daa
jbe
xor
xor
sbb
scas
int3
push
cwtl
pop
enter
or
sbb
stc
aad
mov
xor
add
mov
sub
cli
out
adc
push
sub
or
sbb
push
pushf
push
push
mov
cmp
mov
and
mov
dec
jge
mov
adc
mov
lret
hlt
rdpmc
dec
lods
daa
fsubrl
sbb
adc
mov
push
outsb
lock
fld
pusha
bound
insb
mov
push
rcr
sub
cltd
jbe
jnp
lods
lea
fisubl
push
adc
sbb
daa
dec
lret
divb
idivb
sub
xlat
jp
or
and
les
icebp
jge
pop
and
jmp
xor
xor
mov
in
push
dec
adc
frstor
jne
jmp
test
or
enter
mov
lret
mov
add
inc
add
dec
imul
mov
inc
pop
xchg
cmp
sbbb
cld
sbb
lock
les
je
xchg
mov
imul
loopne
inc
push
es
sbb
leave
xchg
mov
jl
or
fwait
cmpsl
imul
cmp
pusha
enter
xchg
pushf
pop
int3
addb
mov
adc
call
fistpl
imul
xor
inc
ljmp
das
fs
or
jbe
addr16
out
dec
or
out
inc
das
jg
or
sbb
sbb
xchg
pop
bound
cwtl
shlb
sbb
dec
clc
jl
adc
scas
or
and
lret
xor
outsb
mov
fneni(8087
mov
icebp
jg
push
cmpsb
cmp
cmpsb
jg
mov
xchg
movsl
cld
ja
jmp
movsl
pop
insb
in
mov
insl
stos
roll
or
dec
push
scas
ljmp
cwtl
sub
mov
rorl
cmp
popl
inc
aas
mov
xchg
sbb
clc
cmp
mov
fsts
negl
sti
or
cmp
cli
in
int
add
dec
sub
cmp
ja
or
inc
stos
dec
cltd
mov
cmp
push
js
shrb
xor
mov
and
aas
xor
jmp
mov
xlat
sub
add
adc
enter
sub
into
pop
lock
and
mov
add
add
fstps
outsl
mov
cmp
loop
inc
xchg
inc
stc
pushl
sbb
data16
adc
push
cli
fisubs
mov
cld
fisubrl
sti
loop
xor
mov
lds
sub
into
bound
pop
mov
pop
out
cmp
clc
xchg
pop
fadd
loopne
lds
movl
sbb
cmp
push
inc
jae
ljmp
mov
xchg
leave
mov
mov
inc
push
int
mov
pop
mov
sbb
pop
lahf
insb
jae
icebp
orl
lods
cwtl
mov
inc
popa
inc
mov
xchg
loop
push
lahf
pusha
fidivs
push
xchg
and
sub
out
jp
and
xlat
add
pop
mov
leave
test
imul
cmc
das
das
imul
js
das
add
push
mov
sar
mov
push
rcr
aas
and
stos
adc
test
mov
sub
cld
and
fsubp
lahf
sbb
push
xor
jne
lret
enter
mov
lods
jae
mov
jne
mov
push
rcrb
aaa
enter
arpl
adc
sbb
jb
xchg
into
nop
xchg
jo
pushf
dec
mov
xchg
imul
inc
jbe
js
lods
loop
lret
mov
cld
mov
in
add
pop
fldl
sub
mov
push
mov
push
fldl
mov
ret
or
cmp
cmp
ljmp
pop
test
xchg
push
push
sbb
jne
pop
xchg
xor
xlat
lods
push
mov
stc
xor
clc
xchg
cli
inc
mov
mov
xor
push
in
cmp
into
adc
cmp
sbb
cmp
xchg
or
dec
cmp
pusha
outsl
iret
push
mov
scas
lret
or
cmp
ret
jnp
sbb
xchg
push
xchg
out
shrb
outsl
or
and
shll
cmp
xor
ret
add
fdivrs
cs
lea
pop
pop
imul
sub
mov
push
ljmp
cmp
aam
mov
mov
movsl
mov
fwait
sub
sub
icebp
insl
cmp
test
test
dec
lods
fucomi
test
dec
xor
dec
shll
leavew
int3
jle
mov
mov
mov
in
fildl
lea
xchg
ljmp
nop
and
dec
fimull
add
pop
mov
js
std
fidivs
insb
mov
push
or
add
xchg
sbb
mov
movb
jo
in
xor
xor
xchg
xor
push
pop
fmuls
sub
sahf
xchg
jmp
sbb
into
arpl
fldl
adc
pop
mov
xchg
mul
inc
adc
les
and
mov
mov
push
stc
fcoml
mov
in
rcll
adc
mov
dec
aaa
push
aaa
sub
int
test
sti
fwait
loopne
loopne
sbb
sbb
inc
xchg
pop
testl
or
mov
hlt
pop
sbb
and
dec
arpl
aas
mov
xor
idivl
jo
movsl
jg
loope
sahf
dec
and
aam
or
mov
cli
add
dec
mov
es
call
notl
adc
lods
and
and
icebp
popf
subb
out
and
lds
mov
push
dec
pusha
jle
inc
sub
enter
sub
jnp,pn
jns
mov
xchg
xchg
insl
push
inc
enter
daa
push
lea
addr16
mov
mov
test
lds
inc
inc
pop
add
sbb
pop
inc
push
andl
lcall
shll
inc
xor
rorb
test
leave
xchg
iret
sahf
insl
in
jge
stc
filds
cltd
mov
fisubrl
fdivrs
push
push
push
imul
into
inc
jb
push
fs
push
or
sysenter
out
hlt
repz
push
cmp
mov
and
jl
fs
loopne
idiv
test
jb
das
sbb
mov
push
testb
jbe
stos
fdivl
dec
jl
fsts
std
fstpl
roll
push
outsb
icebp
pop
xchg
lods
clc
int
sbb
inc
sti
cmpsb
cli
enter
aas
mov
adc
push
mov
out
pop
cli
sub
cmp
or
sbb
in
dec
cld
pop
int3
push
jp
or
insb
lret
dec
ljmp
or
sbb
in
dec
cld
pop
int3
push
jp
or
insb
into
dec
aam
repnz
mov
scas
fdivrl
cmp
fdivl
push
lods
sbb
and
push
push
jl
sub
sub
or
pushf
jp
mov
lock
or
jae
arpl
fsub
aaa
push
jp
add
jae
pop
add
lcall
xchg
out
cmc
stos
mov
aaa
push
jp
or
sti
sub
and
xchg
xchg
mov
mov
aaa
in
scas
mov
dec
push
test
mov
mov
fwait
in
mov
sahf
fnsave
jp
jb,pn
inc
adcl
stc
movsb
push
sbb
jp
orb
push
pop
rep
pop
in
add
mov
out
out
adc
sub
aaa
pop
sbb
dec
xor
cli
cmp
loope
fmull
or
jne
pop
negl
in
movntq
daa
pop
pop
das
scas
or
pop
sub
out
mov
imul
cwtl
or
xor
xchg
cmc
inc
cltd
xor
jb
or
mov
jns
lcall
out
mov
and
hlt
scas
pop
ret
stos
xor
cli
lcall
daa
pop
push
push
sbb
sub
dec
jno
xchg
in
ljmp
mov
cs
adc
adc
cmp
pop
xor
repz
jecxz
hlt
sbb
std
mov
mov
arpl
jnp
inc
sub
bnd
loop
lock
mov
mov
cmp
jo
push
cmp
sbb
inc
cmp
cmpsl
fidivl
mov
lcall
daa
pop
aaa
push
jp
or
ja
inc
cmp
cmpsl
fidivl
mov
lcall
daa
sahf
loopne
movsb
and
push
dec
sbb
mov
loope
cmp
lds
jb
mov
out
sti
mov
rcl
iret
or
xor
lds
nop
outsl
stos
cmp
fwait
xchg
test
sarb
in
in
push
imul
jmp
pop
data16
lock
xchg
or
mov
mov
push
sub
ljmp
arpl
fwait
repnz
jge
jo
pusha
mov
sbb
mov
roll
sub
sub
fcomps
and
fwait
popf
popa
sahf
jle,pt
and
rorb
scas
out
mov
test
gs
pop
dec
mov
dec
pop
add
sahf
push
cmp
sub
fst
adc
adc
mov
jp
add
pop
fisubrl
ret
test
and
adc
clc
movsl
movsb
imul
sbb
icebp
ror
ret
inc
mov
out
sub
xlat
cmpsb
arpl
in
pop
sbb
jmp
cltd
mov
mov
test
and
add
adc
es
inc
jl
mov
lock
cmpsl
dec
push
roll
stos
sbb
xor
mov
xchg
aad
inc
test
sbb
fadd
insb
aas
aas
lret
mov
inc
dec
aas
cs
xor
ljmp
dec
sub
rolb
pusha
push
inc
inc
test
and
push
sub
mov
daa
adc
xor
inc
mov
lock
sub
pop
scas
jb
pop
int3
adc
jnp
mov
into
cmp
je
add
push
pop
sbb
test
cmpsb
call
test
mov
sahf
sti
mov
rol
lret
sbb
adc
scas
pop
cmpb
dec
inc
cmp
xor
jns
les
popa
jg
test
adc
xchg
mov
hlt
jb
in
loop
xor
lret
pusha
xchg
les
cmc
pop
dec
push
das
popf
mov
jno
mov
arpl
mov
repz
sub
mov
dec
leave
scas
mov
fdivr
lret
sahf
je
xchg
enter
popa
ror
mov
jmp
adcb
push
jbe
mov
stos
ret
imul
jno
xor
mov
xchg
scas
xchg
shrb
pop
scas
dec
lods
push
std
dec
lret
mov
and
pop
mov
adc
imul
or
lret
adc
jb
xchg
jno
sbb
sub
jle
jno
ficoml
cmp
xor
push
add
leave
mov
pop
jecxz
push
mov
ret
sarb
jp
mov
fwait
add
cmpsl
jns
push
jmp
xchg
je
and
rorl
rep
loop
mov
cmpl
and
popf
adcl
lods
popf
in
jmp
sbb
mov
cwtl
mov
mov
add
in
outsl
gs
push
test
xchg
ficompl
rcl
js
cltd
mov
mov
mov
cltd
push
std
or
jae
inc
imul
xchg
outsl
dec
jne
sbb
insl
ret
sub
add
dec
sahf
and
push
lea
ds
or
stos
push
sbb
mov
xchg
pushl
js
xlat
xchg
subl
push
add
push
sbb
sbb
push
leave
rclb
and
xor
push
push
jmp
lds
sub
push
mov
mov
inc
movsb
add
ficoms
mov
test
cli
outsb
adc
call
lock
xchg
fcmovb
adc
sub
inc
call
dec
mov
rcll
adc
fisttps
cli
addl
push
into
dec
sub
std
add
mov
movsb
movsl
add
xchg
loope
jne
mov
lcall
jbe
push
test
lret
daa
cmc
dec
push
inc
mov
scas
subl
test
and
adc
mov
shrl
imul
jg
daa
push
sbb
mov
and
pushf
mov
pop
addb
ss
fdivr
cs
mov
int3
push
mov
jno
sahf
mov
mov
in
ficoms
and
std
and
sarb
lock
adc
push
add
pop
out
push
jge
jno
out
jbe
iret
adc
into
pusha
mov
and
aaa
and
lock
jmp
mov
fsubs
push
in
test
xchg
inc
adc
adc
divb
cmpsb
jb
test
fdivrp
adc
out
repnz
sar
sbb
addr16
pop
add
xchg
inc
subl
mov
pop
into
test
mov
xchg
xor
adc
mov
ds
ret
je
sbb
sbb
mov
or
push
or
outsb
sbb
jl
enter
pushf
cmpsl
xchg
jnp
mov
mov
push
xor
push
inc
and
cmp
pusha
cmp
stc
xor
idivl
inc
jp
mov
jns
lahf
xchg
cmp
rcr
movsl
in
mov
xchg
int
jmp
mov
jge
push
into
mov
adc
cmp
ja
add
dec
jb
push
dec
xor
dec
xlat
mov
cmpsl
pop
js
adc
xor
cmp
pop
pop
cmpl
xchg
jmp
mov
mov
mov
into
stos
sbb
cltd
inc
imul
ret
sbb
sub
ja
ret
enter
add
outsl
sbb
ljmp
sahf
stos
xchg
test
dec
in
dec
roll
adc
mov
cs
insl
pop
xor
sub
cmpb
inc
pop
pushf
add
int
shll
add
roll
xchg
pop
jmp
pushf
inc
add
rolb
out
fmuls
or
insb
fs
mov
push
iret
jl
lret
divl
push
mov
and
popf
std
scas
fdivrs
fs
gs
cmp
jge
incl
fwait
push
and
jmp
insl
test
stos
sub
sti
mov
std
mov
data16
sbb
imul
sub
gs
sub
add
into
xchg
cmp
cmp
dec
and
enter
lock
add
ja
mov
test
pop
and
xchg
and
jno
out
jae
jmp
mov
xor
int3
shll
or
loopne
popa
ret
mov
mov
aad
loop
out
stos
outsb
mov
xchg
push
mov
out
in
les
mov
pop
decl
lods
add
in
and
fists
ret
jo
pop
dec
jg
stos
sub
pusha
add
std
mov
adc
imul
dec
fidivl
push
arpl
call
mov
subb
repnz
lods
adc
dec
jmp
popl
gs
mov
push
les
cs
inc
ljmp
mov
push
shrl
int3
iret
mov
inc
fwait
loopne
stc
in
pop
xchg
sub
sbb
stos
outsl
mov
movsb
cmp
or
xor
push
xlat
or
pop
add
cmp
xor
ja
enter
push
add
mov
lret
mov
inc
jbe
mov
ror
add
xor
out
xchg
sbb
out
add
clc
nop
sbb
sub
mov
push
frstor
lock
repnz
loopne
jae
push
notl
bound
into
dec
pop
pusha
pop
cwtl
cmc
mov
fwait
jmp
outsb
pop
xor
xchg
or
xchg
clc
or
dec
loopne
inc
add
jmp
fwait
les
fchs
sub
cmp
leave
scas
imul
daa
mov
test
and
mov
xor
or
in
jne
fsubs
xor
cmp
pop
loop
mov
mov
shll
push
cmp
jecxz
inc
in
xchg
ror
pop
pop
mov
test
fadd
pop
mov
jg
dec
mov
pop
imul
add
jo
ficomps
cmp
jge
insl
sti
jp
cld
jg
sbb
stos
xor
mov
push
clc
sbb
stos
xchg
xor
into
push
mov
test
xchg
hlt
mov
out
fwait
daa
mov
or
pop
push
jnp
test
add
xchg
mov
lret
mov
pushf
push
mov
js
loope
lods
outsb
adc
popa
call
aas
gs
bound
and
lea
push
xchg
pop
mov
fisubrs
xor
inc
push
xchg
fsubrl
cmp
es
nop
mov
cmp
out
bound
jae
and
inc
bnd
fwait
ljmp
repnz
inc
push
imull
dec
shl
out
aaa
outsl
xchg
lock
rolb
mov
cmp
cmc
lcall
addr16
xchg
push
test
adc
lahf
jl
inc
iret
xchg
scas
lods
sub
xchg
addr16
xor
stos
add
mov
stos
mov
test
and
mov
enter
leave
add
cmpsb
outsl
xor
pop
xor
out
js
adc
test
ret
push
mov
pop
push
cmc
test
dec
sbb
dec
shrl
mov
scas
leave
push
ret
adc
repz
fdivs
push
sti
es
hlt
inc
sbb
jns
xchg
incb
mov
out
sahf
test
outsb
insb
inc
out
lcall
or
jne
mov
ficomps
pop
insb
test
sub
orb
in
fldl
cmc
lcall
lds
inc
add
mov
jae
mov
cmp
jno
out
jo
inc
fnstsw
pop
or
dec
les
mov
into
dec
jbe
loopne
in
icebp
and
lea
jo
push
or
ss
sub
sub
mov
xor
pop
ret
stos
stos
lret
fmul
jno
jnp
sbb
sub
inc
sub
adc
jns
or
in
es
ljmp
jp
pop
mov
scas
push
jmp
pusha
adc
cmc
xchg
cmp
cmp
jle
xchg
stc
test
push
jns
xor
insl
aad
stos
addr16
sub
cmpsl
fs
in
mov
adc
mov
xor
clc
or
push
ja
pop
fs
pop
lds
sbb
arpl
mov
lcall
leave
add
icebp
daa
jecxz
lcall
fwait
daa
mov
and
jl
sub
out
mov
add
mov
pop
pop
add
repnz
cmp
sbb
mov
shll
mov
sbb
push
das
inc
mov
inc
or
xor
fmul
mov
jae
jb
shll
lcall
es
pop
mov
adc
push
mov
mov
neg
jmp
dec
xchg
std
sti
lahf
mov
push
pop
sub
inc
pop
pop
pop
jno
hlt
in
daa
mov
xor
mov
in
fsub
pushf
add
enter
xchg
data16
pusha
push
mov
sahf
inc
mov
out
mov
and
lock
dec
push
mov
lret
sub
or
into
adc
lods
and
jb
out
or
pop
fs
mov
arpl
stos
leave
xchg
mov
jmp
mov
mulb
les
dec
pop
js
imul
xor
and
inc
or
mov
in
fincstp
cmp
lcall
adc
pop
fs
mov
pop
stos
sbb
mov
dec
in
insb
or
aad
nop
push
rcrl
fisttpll
and
xor
cltd
sbb
outsb
mov
dec
sbb
mov
sbb
mov
jb
aad
ja
adc
sub
mov
das
enter
repz
shl
xor
mov
and
xor
insb
and
aad
fisubs
movsb
scas
ret
sbb
inc
inc
ret
push
data16
adc
fs
popa
jnp
aaa
or
mov
xchg
data16
xchg
gs
mov
test
push
add
xor
mov
fnstsw
testl
lcall
fwait
shrl
movsb
test
sbb
pop
fs
enter
xor
or
cld
jae
clc
std
push
sub
jl
int3
lret
jp
mov
ficoml
adc
mov
popf
fldl
push
jg
mov
mov
dec
cmp
leave
fs
lock
outsb
int3
xchg
and
call
test
jne
hlt
mov
lcall
mov
test
or
daa
gs
daa
pushl
leave
cmp
sub
jbe
push
inc
push
iret
and
jae
sub
leave
dec
fldenv
inc
sub
loopne
jae
adc
testl
loopne
cmpsb
pop
iret
dec
nop
mov
movsb
movsl
pop
add
adc
rolb
out
cmp
and
dec
inc
adc
cwtl
loop
or
pop
adc
xchg
pushf
adc
test
mov
and
leave
testl
jbe
mov
daa
dec
mov
aaa
cmpsl
push
cmp
int
jge
out
dec
jne
jmp
aam
dec
or
and
push
rolb
add
pusha
pop
or
lds
or
or
cmp
push
cmc
cmc
xchg
xchg
les
jno
js
sbb
sbb
pusha
add
pop
fcomi
in
lods
loope
jecxz
lods
jne
jecxz
jg
insl
xor
addb
pushf
cld
out
aam
aam
sub
pop
mov
adc
cmp
jl
pusha
fisubrl
mov
lds
and
xchg
xor
nop
shr
mov
push
adc
push
je
pop
ss
imul
push
cmp
jle
leave
mov
and
sub
cmp
pop
and
push
je
push
clc
pop
iret
mov
mov
out
lods
pop
bound
aaa
pop
test
push
mov
mov
mov
pop
aam
sub
add
and
dec
jb
fucomi
pop
lret
jp
xchg
lods
pusha
fcmovbe
rep
fadds
mov
mov
mov
fstps
jmp
inc
add
mov
jbe
mov
shll
or
jne
cltd
add
dec
sub
rclb
arpl
mov
popf
clc
out
fsts
fs
insb
jle
scas
push
mov
mov
out
daa
sbb
cmp
sub
and
lock
sub
in
arpl
movsb
sbb
enter
popf
lcall
jo
pop
movsb
and
testl
ljmp
es
cmc
scas
xor
xor
mov
inc
scas
inc
in
adc
sarb
hlt
popa
xchg
pop
daa
mov
rcrl
loope
aas
stc
mov
sub
pop
call
xchg
stos
sbb
arpl
adc
dec
mov
dec
mov
and
in
sbb
test
adc
roll
mov
hlt
jbe
sbb
jg
test
loope
jl
cmp
mov
cmp
nop
gs
jge
fstpl
pop
pop
outsb
mov
add
sti
orb
test
and
cs
lret
fwait
pushl
cmp
out
mov
mov
push
sub
sti
mov
loopne
jo
out
sbb
pop
xor
jne
cmpb
cmp
fsubrl
addr16
push
pop
das
mov
ret
cwtl
inc
xchg
sub
fs
adc
add
adc
dec
mov
je
pop
lods
jl
test
aas
nop
jg
jbe
mov
jle
xor
es
fwait
mov
push
add
cwtl
xor
std
ret
mov
hlt
into
das
mov
js
icebp
xor
push
clc
mov
icebp
and
mov
outsb
negl
xor
cld
rcrb
xchg
or
aad
pop
call
movsb
ss
es
xor
or
bound
pushf
push
cmp
lahf
dec
jne
mov
mov
aaa
dec
xchg
or
cmp
out
ja
fisttps
mov
add
sahf
rcll
and
cwtl
add
imul
mov
insb
popa
ficoml
push
loop
cmpsl
mov
loopne
pop
sub
lods
dec
lods
xor
stos
jp
push
or
xchg
fs
sub
daa
inc
inc
mov
leave
pusha
in
sub
push
cmp
push
mov
fwait
xchg
jmp
enter
mov
push
mov
sahf
gs
cmpl
mov
cli
and
inc
xchg
add
dec
inc
movsb
mov
into
pop
dec
push
in
pop
push
inc
rorl
pop
ja
std
sbb
push
push
stos
fldl
ret
outsb
icebp
xor
andb
pop
push
sub
lock
lds
sub
leave
push
xor
and
cwtl
gs
or
push
mov
mov
es
popa
test
xchg
or
nop
cld
in
flds
ficompl
mov
mov
inc
fstpt
imul
loopne
loope
loope
sbb
arpl
mov
outsb
mov
mov
push
lcall
xchg
xchg
shrb
adc
scas
xor
mov
addr16
out
mov
add
xor
pop
jp
jmp
fwait
pop
mov
and
lds
rorl
stc
cmpsb
loop
push
xor
push
and
imul
push
dec
arpl
lods
jle
mov
jns
rcl
pusha
lods
enter
and
xlat
bound
pop
xor
outsl
push
ja
nop
js
test
mov
in
push
xchg
mov
mov
clc
push
add
ds
sub
mov
mov
jle
cmc
sbbb
xchg
xchg
shlb
jae
pop
xor
add
hlt
jne
out
dec
mov
cmp
ficomps
add
stos
and
adc
push
sbbb
enter
cmpsb
lds
in
cld
cmc
lds
xchg
rcrb
push
pop
cwtl
repz
push
pop
je
jg
mov
dec
roll
push
aam
and
rcr
xchg
pop
adcl
unpcklps
mov
jo
andb
das
cwtl
out
sahf
insl
ror
or
fisubrs
jno
inc
cwtl
push
mov
fimull
push
mov
pop
call
dec
in
pop
mov
push
lcall
push
daa
in
mov
fisttpl
repz
mov
aaa
and
pop
ficompl
sbb
ja
or
popa
lds
xor
pop
xchg
add
push
xor
repz
mov
adc
test
mov
out
pop
inc
xchg
jge
and
cs
ljmp
in
fbld
adc
cmpsl
inc
mov
cmp
mov
cwtl
mov
in
cld
adc
push
inc
add
dec
cwtl
es
mov
out
rorl
cmpsb
mov
cmpsb
scas
xchg
jge
and
test
adc
pop
push
mov
push
mov
sub
arpl
sub
stc
and
inc
sbb
inc
inc
jns
xchg
mov
and
mov
stc
stos
test
dec
incl
jp
xlat
dec
jmp
aas
cwtl
repz
xchg
mov
xor
lods
ret
fdivl
loopne
in
sbb
aas
push
test
cltd
xchg
outsb
dec
jbe
pop
push
repnz
and
cmp
pop
pop
mull
divb
sahf
dec
xchg
xchg
lods
roll
sub
scas
loop
mov
out
mov
xchg
mov
xor
por
jno
leave
jae
mov
ret
mov
mov
imull
outsl
cli
rorb
cmpsb
lods
sbb
push
adc
loop
push
mov
orl
mov
lea
pop
mov
mov
sbb
scas
pop
call
cmpsl
mov
push
repz
inc
push
pusha
mov
add
dec
xor
and
dec
xor
pop
out
pop
std
push
add
aas
mov
rcr
std
ss
xlat
pop
jecxz
lods
pop
sub
ja
scas
pop
cld
std
sub
pop
dec
cli
xor
add
push
push
mov
in
and
fadds
xchg
sub
add
mov
mov
pushf
cmp
iret
dec
gs
cltd
add
inc
mull
lea
ja
rcpps
inc
icebp
xchg
movsl
dec
test
cmp
and
dec
xchg
popf
sub
addb
fistl
xchg
mov
cmp
arpl
je
icebp
xchg
cmp
rcr
outsl
sub
insb
cmp
sti
cmp
aaa
jge
lea
je
jbe
inc
mov
popw
or
ja
inc
cmp
cmpsl
fidivl
mov
lcall
daa
pop
aaa
push
jp
or
ja
inc
cmp
cmpsl
fidivl
mov
lcall
daa
pop
jg
jg
pop
or
fildll
inc
cmp
jg
mov
xchg
xchg
mov
xor
out
xlat
push
daa
jbe
loop
push
push
or
ja
mov
sbb
std
outsl
adc
push
cmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
dec
add
push
push
push
aam
mov
xchg
or
add
push
pop
add
or
add
roll
add
add
push
add
addr16
add
add
inc
add
mov
roll
add
push
add
jmp
add
add
add
add
add
add
add
add
add
add
push
add
popa
add
add
sbb
adc
push
add
add
add
lods
add
xchg
add
add
sbb
popa
add
add
pusha
add
add
add
add
add
add
add
inc
add
add
push
add
or
add
pusha
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
clc
add
sbb
add
add
pop
add
add
add
add
push
add
add
add
mov
xor
inc
add
add
add
scas
add
add
add
add
add
add
xor
add
add
popa
add
add
or
pusha
add
add
add
add
add
add
add
push
add
add
add
aad
and
add
cmp
sub
or
add
add
add
add
add
and
insl
add
add
add
in
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
push
ret
add
add
add
add
add
add
add
or
xor
or
jbe
add
add
add
add
mov
add
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
add
add
add
add
add
hlt
add
inc
add
pop
add
les
arpl
pusha
add
add
add
push
add
add
xlat
add
add
add
add
add
add
jmp
add
add
add
push
add
pusha
add
add
sbb
push
testb
add
add
mov
add
add
add
add
mov
add
add
mov
add
add
add
push
add
sub
fiaddl
push
add
add
sahf
add
add
add
mov
dec
add
add
xchg
add
add
add
xchg
pop
add
add
add
add
add
add
add
fiaddl
jb
push
add
add
add
sti
add
add
add
add
add
add
add
add
add
cmp
add
add
push
loope
push
add
jge
sahf
add
add
add
add
add
add
add
add
les
mov
add
add
inc
add
xlat
add
add
add
add
inc
add
add
movl
pusha
add
add
popa
add
add
add
mov
movl
xchg
addl
inc
add
add
inc
add
movl
jge
sub
movb
add
add
add
mov
adcb
pushf
or
cwtl
dec
inc
addr16
pop
mov
fbld
rcrb
pop
adc
add
icebp
jne
jp
scas
in
sbb
push
add
fisubs
in
loop
pop
jge
pusha
fnsave
das
mov
or
push
mov
sub
adc
lods
adc
cmpsl
jecxz
pop
add
cli
mov
je
and
sarb
popf
loopne
mov
pop
xchg
push
out
sarl
sbb
xchg
cmpsl
insb
cs
das
pop
dec
sub
addl
cmp
dec
and
repnz
mov
aas
subl
repz
pop
repz
sub
sbb
sub
or
xchg
movb
jno
add
push
lahf
jb
jg
mov
sbb
push
scas
adc
sbb
jp
push
mov
hlt
or
popf
outsl
xchg
aaa
pop
pop
movsb
ror
sub
push
mov
push
lret
jl
jb
add
ja
jmp
ret
test
mov
jns
sahf
out
add
mov
lcall
pop
and
shlb
inc
stc
das
cmc
arpl
leave
outsl
cmp
cwtl
inc
adc
add
jbe
add
and
push
std
paddw
sub
push
xor
fwait
enter
fcoml
push
test
addr16
stos
add
test
xor
jl
or
sbb
dec
hlt
mov
ret
aas
xorl
xchg
outsb
push
test
cs
cli
pop
jecxz
sbb
jl
fcoml
xchg
push
out
adc
pop
pushf
shrb
xor
mov
mul
or
jl
clc
dec
les
adc
repz
or
jne
lret
out
cmp
and
jb
sbb
xor
and
inc
int
push
cmpsl
sahf
inc
jmp
lock
sbb
jb
mov
push
push
repnz
mov
jl
cltd
int
stc
dec
call
xchg
idivb
fwait
dec
mov
cmc
adc
push
mov
in
mov
adc
fists
enter
xchg
mov
clc
adc
inc
adc
xor
push
fimull
cmp
in
dec
int3
sbb
jl
sbb
pop
rcrl
mov
inc
or
lods
jecxz
shrb
xchg
nop
scas
mov
cmp
adc
sub
pop
sub
test
xor
arpl
jl
das
xor
out
movsl
jns
cli
nop
sub
push
in
xchg
and
pop
int3
int
cmp
jg
push
movsb
sbb
enter
pushf
xchg
inc
mov
sbb
dec
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
