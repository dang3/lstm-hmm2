call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lcall
movsl
rorl
insl
or
dec
sub
sub
push
lcall
fstp
lods
lret
ljmp
dec
and
pop
sub
push
sub
std
mov
lods
sarb
add
and
push
pop
pop
jg
pop
es
in
mov
imul
cmp
icebp
sub
sub
mov
in
mov
lock
lret
cmpl
dec
aam
or
pop
mov
or
jbe
dec
cmp
mov
cli
dec
ss
sub
dec
cmpsl
popf
pop
sub
push
fwait
adc
leave
and
fs
xchg
pop
or
mov
mov
icebp
repz
lret
add
sbb
and
jb
lret
sbb
int3
jl
mov
outsb
mov
or
dec
jb
push
std
int3
push
test
enterw
loop
in
xchg
jp
pop
rcrb
leave
jp
push
push
in
xchg
std
mov
lods
fidivrl
add
jge
dec
xor
sub
push
testb
fwait
test
call
data16
and
pop
inc
das
inc
or
jmp
aad
fimull
cli
loop
popf
pop
sub
cmp
imul
inc
and
js
jae
mov
ret
ror
cli
ljmp
dec
sub
sub
push
lcall
fstp
lods
lret
ljmp
dec
sub
sub
push
lcall
or
push
das
jecxz
je
mov
mov
cld
add
jecxz
or
out
jmp
and
push
inc
cmc
dec
roll
mov
jno
inc
shlb
jecxz
sbb
xchg
jg
andl
js
xor
xor
rcl
inc
mov
js
pushf
jecxz
dec
and
cmp
andb
mov
andl
jecxz
push
imul
mov
mov
push
leave
inc
jmp
and
mov
int3
cmp
js
mov
lea
sbb
push
push
xchg
sbb
and
push
daa
loope
inc
aam
sbb
stos
outsl
and
in
pop
xchg
sbb
add
rol
mov
cwtl
adc
jnp
lock
and
lcall
sub
std
xchg
mov
mov
xor
test
test
lret
cs
xor
sbb
test
ja
cmp
mov
popl
add
test
push
out
inc
sbbb
aas
hlt
sti
test
jp
rolb
flds
insl
fmul
orl
jge
push
repnz
jmp
mov
ror
pop
add
inc
out
xor
sarl
lret
test
push
mov
inc
rcrb
mov
andl
inc
outsl
push
dec
pop
sbb
push
cmp
not
inc
mov
lcall
in
icebp
repnz
or
ret
sbb
adcl
push
cmpsb
out
inc
aaa
bound
or
iret
in
es
push
sbb
aad
loopew
pop
sbb
push
pop
cli
test
xchg
fldcw
outsb
test
jmp
or
jmp
mov
cmpsl
call
sti
scas
and
in
add
mov
add
push
xor
pop
fs
mov
sub
xorl
pop
xchg
aad
or
mov
cld
adc
dec
pop
xchg
test
out
xchg
fstps
pop
cmpsb
jp
push
dec
mov
adc
pop
push
mov
cmp
xchg
and
push
out
and
dec
in
jns
dec
das
movsl
or
ret
sbb
scas
or
fcmovnu
fldl
pop
sbb
jge
cmp
inc
out
inc
dec
rolb
and
les
test
fisttps
or
rolb
adc
push
inc
mov
fidivs
rorb
nop
adc
rolb
adc
fidivl
arpl
pop
mov
stos
push
xchg
fs
test
dec
dec
mov
cmpsb
mov
mov
test
call
jmp
movsl
mov
xor
and
loopne
xlat
push
int
push
ds
cmp
call
ljmp
adc
cmp
pop
rcrb
push
lea
lods
mov
or
xor
or
jl
hlt
push
jp
cli
imul
adc
sahf
push
cmc
jge
mov
mov
or
cld
negb
lret
xlat
pop
xor
mov
mov
adc
out
push
test
xor
addl
jecxz
insb
repnz
in
cmp
sbb
rcll
mov
mov
pop
mov
lods
pop
dec
lcall
cmp
mov
add
out
mov
call
fdivrs
ficoml
popl
sbb
and
aaa
xchg
outsl
dec
fiaddl
loop
andl
mov
lret
popf
clc
push
inc
mov
mov
lods
daa
inc
sahf
inc
add
sbb
cmpsl
push
adc
int
inc
adc
jmp
cmpsb
aaa
fcoml
aaa
inc
outsl
shl
adc
inc
mov
jp
cltd
test
stos
mov
and
inc
mov
push
cmp
repnz
sub
aaa
push
sbb
incl
push
adc
in
fmuls
sub
xor
push
movsb
divb
mov
out
lea
jbe
mov
add
pop
mov
xor
stos
ja
mov
or
mov
push
cmp
push
sub
pop
sub
mov
or
scas
jne
jno
push
in
dec
xchg
or
pop
pushl
cmp
repz
xor
sbb
adc
or
nop
xchg
push
mov
fs
push
test
xor
cmp
out
pop
mov
fsubs
dec
inc
sbb
cli
fdivrs
cmp
movb
imul
cltd
adc
std
cmp
xor
mov
outsl
cli
out
and
push
ret
mov
outsl
testl
fldl
out
popf
les
sub
jp
mul
push
daa
jmp
ja
les
das
push
fistl
pop
out
mov
mov
movsb
adc
movsb
cmpsb
cli
rorl
or
adc
mov
aas
and
or
sarl
in
fsubl
ret
xor
shll
sub
mov
aas
xor
cmpsl
push
mov
push
and
jno
testl
sbb
out
nop
sbb
sub
les
dec
in
ss
test
push
mov
bound
pushf
pop
lea
and
add
dec
sti
jo
add
rcl
adc
mov
movb
into
stos
fsubr
push
in
movsb
enter
adc
cmc
popl
and
je
test
les
out
or
mov
mov
add
xchg
lahf
xor
jge
jae
scas
outsb
xor
xchg
pop
mov
cwtl
xor
icebp
dec
pop
cmpsl
mov
push
mov
pop
cltd
pop
bound
jnp
aam
lret
xor
add
xchg
push
repz
or
jmp
push
sahf
dec
hlt
push
add
mov
xchg
fbld
in
fldcw
and
in
cmp
push
xchg
jmp
adc
mov
call
push
iret
aas
out
fildl
clc
insl
repz
shll
sub
in
jge
repz
pop
mov
inc
insb
adc
repnz
dec
lods
js
mov
test
sahf
sub
daa
jns
shrb
jns
xchg
pop
dec
stos
mov
enter
jle
mov
xchg
jge
push
int
pusha
mov
pop
loopne
ss
add
int
movsb
sarb
cmc
lret
sub
or
inc
xchg
mov
je
and
cmp
mov
dec
hlt
fdivrs
in
les
sbb
ficomps
or
or
jmp
mov
or
push
imulb
xor
or
mov
leave
in
mov
imul
icebp
int
aaa
sarb
ja
mov
pop
in
int3
dec
or
out
sbb
lea
sbb
push
or
and
inc
mov
cmpsb
icebp
pushf
pop
cli
aad
sub
bound
pop
fs
lea
in
mov
inc
mov
xchg
adc
nop
fistpll
sub
sbb
dec
fdiv
xor
cmp
out
push
push
aaa
push
xchg
add
testb
and
pop
push
cmpsl
scas
aaa
movsl
icebp
jne
cmpl
mov
test
xor
je
pop
cli
out
shll
dec
insl
into
push
ret
mov
inc
imul
arpl
je
inc
xchg
mov
outsb
dec
xor
jmp
push
sbb
push
mov
imul
int3
jge
movsl
ret
inc
cltd
testl
lods
into
enter
loope
aaa
and
pop
iret
dec
in
test
int3
xor
add
inc
loopne
ss
mov
jmp
push
sbb
fstps
popf
dec
jg
and
mov
xchg
jp
push
int3
in
mov
xlat
enter
push
test
ljmp
push
in
cmp
sbb
lods
pop
faddl
xorl
hlt
push
aaa
rcl
mov
mov
sub
sub
and
aam
bnd
adc
and
add
adc
pop
lret
repz
pop
inc
mov
jbe
cmp
jae
and
fdivl
test
data16
pop
xchg
inc
ds
xchg
mov
dec
mov
aas
scas
pop
pop
out
pop
nop
test
int
mov
push
xchg
push
out
mov
mov
jae
jnp
or
mov
movsl
mov
sbb
je
insl
popa
dec
sbb
pop
inc
xor
xor
jl
pop
lret
pop
movsl
push
sbb
in
add
popa
jp
imul
mov
stc
fistps
jmp
xchg
pop
icebp
xchg
fwait
jns
jmp
imul
shlb
add
push
sbb
or
jecxz
mov
lock
jbe
push
jbe
sbb
int
cs
push
out
sub
stc
pop
dec
sti
sub
ja
jle
aaa
nopl
xor
cmpsb
mov
xor
pop
sbb
mov
call
lret
jo
xchg
jle
mov
fdivrl
arpl
ss
jbe
or
inc
xor
insb
sbb
adc
add
fcmovnb
sub
sbb
imul
test
das
loopne
mov
pop
jmp
mov
jmp
movsl
scas
das
fsubrs
push
add
sub
loop
loope
incb
es
mov
cmp
inc
cmp
or
aam
mov
inc
cwtl
int
sbb
cmp
inc
and
cmpsl
fisttps
into
or
cmp
bound
mov
rcl
scas
push
cmpsl
push
lds
aad
ja
ja
xchg
and
add
das
xchg
fisttps
stos
pop
out
jl
push
push
mov
adc
add
mov
fisttps
shrb
pop
add
dec
fistpl
aad
add
sub
or
and
jge
shll
xor
sub
mov
nop
movsb
mov
mulb
pop
mov
or
pop
and
adc
mov
in
gs
popa
xlat
ret
out
jecxz
ja
pop
scas
mov
pop
out
and
lock
pusha
clc
or
and
and
xchg
fidivs
add
add
xchg
data16
mov
cltd
imul
lret
sub
psubusw
dec
pause
push
dec
movsl
xor
test
xchg
mov
jecxz
mov
or
cmpsb
fmul
push
jnp
cltd
jne
pop
adcl
or
and
adc
ret
cmpb
clc
aad
arpl
mov
or
and
out
pusha
jecxz
stos
pusha
out
addr16
sbbb
mov
sti
test
aam
pop
pop
fists
jle
jb
and
jp
lcall
mov
pop
jl
ss
sub
or
mov
cmpsl
jbe
cmp
cs
lahf
mov
jno
fdivrs
mov
inc
int
push
lods
out
mov
shll
dec
inc
lods
pop
pop
cmpsl
aam
sub
pop
jg
inc
pop
addr16
aaa
ds
sub
pop
mov
orb
mov
mov
add
lods
cmp
mov
movsl
xchg
or
ret
lods
pop
push
mov
lcall
repnz
mov
mov
test
jno
loope
leave
les
scas
dec
inc
hlt
out
stc
test
sbbl
xor
rclb
dec
test
or
sub
inc
popf
dec
iret
pop
fsubrl
popa
popa
xchg
cmp
nop
push
sbbb
out
push
cltd
adc
imul
xchg
dec
and
insb
and
mov
pop
fdiv
mov
loope
xor
add
or
sub
aas
pop
mov
inc
es
jne
rolb
gs
leave
lods
stos
pop
jmp
xor
cmp
mov
jge
dec
pop
xchg
adc
icebp
dec
xor
call
clc
lods
inc
outsl
clc
lahf
xlat
popa
dec
rcrb
push
xchg
ret
pushf
notl
lods
xchg
inc
adc
xchg
and
cmp
push
xchg
and
iret
push
ret
lds
mov
gs
outsl
sub
in
jecxz
pop
dec
rol
jecxz
pop
push
test
sahf
pop
pusha
sub
ss
cli
push
ljmp
and
sub
push
xchg
rcr
cs
xchg
fwait
pop
jmp
imul
jmp
pop
in
mov
sahf
aas
push
mov
sbb
pop
jne
shlb
pusha
jnp
adc
jae
testl
jbe
shll
push
int
aaa
xor
push
scas
mov
push
and
and
xchg
xchg
xchg
push
fnsave
cmp
stos
popf
jge
cmpsl
cmc
mov
aam
mov
cmp
mov
adc
adc
outsl
lcall
xor
mov
xchg
lret
cltd
std
dec
lcall
ja
fimuls
jb
add
mov
movsl
pop
push
push
cmc
push
sbb
sub
rorb
jno
test
fs
mov
pushf
mov
add
mov
jmp
pusha
stos
mov
inc
rcrl
je
push
xchg
ret
inc
in
pop
or
cmp
push
loopne
call
inc
negb
sbb
fisttpl
scas
jne
out
jg
mov
dec
cmp
lds
jb
jnp
pop
call
push
fsubp
std
push
cmp
adcl
ljmp
dec
scas
jb
fiaddl
movsb
sbb
insl
shlb
xchg
push
fnsave
lods
xchg
or
ficoml
sti
mov
movsl
mov
and
push
mov
mov
add
sub
add
inc
dec
xchg
pop
in
movsl
sub
js
sbb
aam
incl
pop
adc
outsb
fwait
std
cmp
add
sbb
fyl2xp1
int3
jbe
mov
sub
cmp
fildll
inc
xchg
inc
add
lret
cmp
push
mov
sahf
add
mov
jecxz
pop
xor
cli
mov
xor
lret
and
push
mov
xchg
stos
lret
cmpsl
sub
cltd
or
jno
add
lock
lret
repnz
jl
pop
cs
pop
notb
sbb
stos
in
fmuls
push
rclb
pop
pop
enter
loope
cs
or
std
dec
sub
dec
adc
cs
ljmp
pop
mov
xchg
or
cmp
and
je
mov
inc
adc
aad
aam
jbe
and
xchg
mov
mov
push
addb
mov
sub
jecxz
pop
inc
aad
scas
std
cli
adc
or
and
inc
out
sarb
test
push
fsubrs
aaa
lds
mov
sti
scas
lods
fmuls
add
lcall
xchg
pop
cmp
imul
out
shrl
xor
xlat
repnz
or
bswap
pop
and
aad
popf
add
push
jno
icebp
push
mov
mov
and
adc
je
das
mov
cmp
sub
cwtl
iret
ljmp
jae
adc
faddl
in
aam
mov
fucom
dec
test
add
push
or
aas
and
sub
push
and
mov
sbbb
insb
mov
std
adc
filds
imul
repnz
push
adc
repz
std
imulb
dec
sahf
iret
test
shl
xor
bnd
add
nop
and
daa
out
fidivrl
mov
sbb
inc
cmp
loop
or
or
into
lea
pusha
mov
jge
outsl
dec
rcl
push
mov
test
jae
dec
jne
xchg
add
inc
xor
repnz
jo
xchg
pushf
jns
xor
lret
lock
pop
stos
mov
or
mov
scas
adc
out
mov
lock
aam
call
mov
scas
xchg
insb
push
movsl
fistl
mov
xor
sti
xor
cmpsb
xchg
in
xchg
jg
dec
movsl
or
add
test
repz
cmp
stos
data16
aas
out
mov
dec
icebp
repz
fsts
das
js
or
push
in
movl
jo
imul
sti
mov
xor
lock
roll
loopne
sahf
sub
sbb
popf
add
cmp
aaa
aad
sub
daa
xchg
xchg
cmpsl
leave
test
pop
sbb
xlat
mov
and
and
loop
stos
imul
or
nop
lcall
add
dec
ffree
int3
mov
ljmp
mov
xorl
movsl
insb
bnd
sbb
imul
ljmp
in
and
cmpsl
jge
es
add
xor
jne
loop
mov
pop
mov
fs
jae
pop
loope
jle
and
jp
fmuls
shrl
xchg
jbe
adc
mov
aad
jle
andl
fisubrs
in
or
mov
sub
lea
aas
es
rcl
test
dec
lds
mov
repnz
iret
or
mov
test
fstpl
fstps
add
imul
jmp
int3
ljmp
and
aad
jp
divb
mov
cwtl
stc
cmp
testb
pop
ds
cmp
xor
sti
inc
popf
cmp
insb
xchg
mov
dec
jb
sbb
push
hlt
jmp
icebp
mov
cltd
add
jns
frstor
adc
sbb
out
add
inc
idivl
int3
inc
pop
xor
loope
fbld
aas
aas
popf
loop
ja
cmp
out
and
jl
dec
push
mov
dec
jl
jg
push
push
xchg
loope
jo
leave
rcrl
scas
imul
mov
data16
sbb
enter
les
cmp
pop
mov
pop
int3
and
mov
cmp
jp
test
fs
xchg
pop
movsb
push
scas
jns
xchg
inc
dec
lds
xchg
lahf
out
and
ret
std
or
lock
ret
push
xor
loopne
and
push
dec
lds
scas
jne
pop
std
push
addl
cli
lods
jns
dec
shrl
pop
rcrl
dec
divl
sahf
aad
cmpb
lret
push
les
mov
ret
or
popf
repz
test
jg
gs
pop
mov
mov
call
in
test
xchg
outsl
movsb
xchg
mov
or
jp
stos
add
loop
jp
add
or
inc
mov
cmp
and
jge
dec
ss
pop
jae
mov
push
ret
adc
mov
mov
sub
std
mov
mov
popf
jne
pop
dec
cmp
shrl
mov
xor
lret
add
pusha
rclb
push
iret
test
out
xchg
inc
dec
xor
shlb
jecxz
mull
mov
aam
cmc
aaa
sar
add
sub
sti
pop
test
sub
and
cltd
dec
movsb
cmp
das
mov
pop
call
or
lock
mov
es
mov
ss
cmc
mov
mov
imul
ror
sbb
aad
pushf
push
jno,pt
hlt
mov
xor
mov
movl
stos
sub
push
push
jno
jo
dec
adc
sahf
jg
inc
mov
ss
adcb
adc
popa
lea
jno
ss
pop
pushf
jb
int
xor
imul
stos
rep
pop
mov
mov
mov
ret
shlb
add
push
mov
jp
lods
dec
pop
cmp
stc
lock
incb
pop
sbb
mov
mov
mov
sub
es
mov
aas
dec
cmp
imul
int3
mov
xor
stos
cmp
popa
movsb
mov
cli
jecxz
push
imul
add
or
fists
cmc
xchg
sarb
ss
xchg
xor
ljmp
inc
in
stos
mov
ljmp
rorb
mov
das
out
fwait
lods
push
stos
xchg
mov
pop
add
pop
mov
pushf
out
add
cld
mov
jo
sbb
popa
mov
lea
or
insb
fmuls
leave
je
xchg
mov
je
add
mov
in
mov
lds
mov
fldt
gs
jnp
adc
xor
mov
or
lds
sbb
je
jge
subb
mov
cli
scas
shlb
dec
or
inc
cltd
lcall
cmpsl
andl
mov
mov
cmp
mov
pop
mov
ret
imul
add
pop
adc
int3
int
call
xlat
push
loopne
xor
xor
jb
ret
xchg
jne
fadds
imul
mov
pushf
sub
pop
stos
out
punpcklbw
mov
shrl
fsub
daa
push
jg
cmpsb
lds
cmp
dec
int
mov
jae
imul
mov
jecxz
gs
or
popl
cs
pop
movsl
ret
std
mov
stos
fstp
lods
lret
ljmp
dec
sub
sub
push
lcall
fstp
lods
lret
ljmp
dec
sub
sub
push
lcall
lods
lret
mov
popf
sbb
jl
dec
sub
sub
cmp
lcall
lods
lret
or
cmc
xlat
nop
dec
sub
sub
repnz
loop
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
inc
xchg
insl
xor
mov
cmp
daa
or
addr16
addr16
xchg
mov
cmpsl
xlat
std
popa
neg
out
pop
cmp
daa
or
ja
addr16
xchg
das
xchg
xlat
rol
divl
out
pop
loop
dec
push
inc
inc
jle
sub
add
sub
dec
out
xchg
sti
call
out
or
aam
xchg
ds
cmp
jbe
pop
adc
adc
or
cld
enter
xchg
bound
clc
jge
jne
sbb
jg
lahf
rclb
xchg
shrl
xchg
inc
pop
mov
test
nop
fadds
hlt
popf
and
jge
mov
xlat
std
jmp
pop
es
pop
ret
ss
icebp
mov
adc
addr16
push
push
js
in
mov
aas
fxch
test
aad
int
outsb
jb
fisubl
or
repnz
cwtl
mov
jge
adc
mov
and
call
loop
adc
jbe
leavew
enter
mov
cmpsl
xchg
std
in
testl
pop
jmp
or
inc
xchg
ja
addr16
out
ret
lods
fcmovnu
jmp
xorb
mov
pop
imul
sbb
sub
clc
in
ret
cld
out
test
xchg
mov
mov
dec
js
push
sub
js
loope
test
out
xchg
cltd
in
neg
out
pop
cmp
daa
or
ja
addr16
xchg
mov
cmpsl
xlat
std
in
neg
out
pop
cmp
daa
or
ja
addr16
xchg
mov
cmc
mov
test
pop
inc
mov
jp
push
pop
adc
leave
ret
loope,pt
lock
or
mov
fisttps
sbb
ret
jae
cmp
and
add
dec
pop
bound
xchg
js
imul
pop
push
xchg
cmpsl
repz
rolb
and
xor
mov
cmpsb
jecxz
pop
dec
test
test
mov
lahf
aad
rclb
and
loopne
dec
push
jb
add
sub
push
lods
sbb
das
xlat
mov
sub
stc
addr16
dec
lahf
jnp
fcomps
jg
lds
mov
sub
aaa
stc
mov
sub
das
adcb
and
insb
fimull
data16
xor
rorl
push
loop
enter
adc
add
jb
or
inc
sub
les
cmpsb
mov
push
imul
movsb
int
dec
movsb
and
dec
cmpsb
js
das
mov
cmc
mov
loope
adc
pop
imul
rcr
xchg
addb
push
sub
test
out
out
push
sahf
sub
push
aad
adc
push
loop
mov
btr
xor
std
fcomp
pushf
xor
sbb
ljmp
xor
cld
push
rol
sub
call
cmp
and
rol
jns
push
inc
int
filds
mov
push
fs
sbb
push
rorb
aad
testl
out
imull
in
inc
push
mov
push
push
in
lret
inc
int3
fisubrs
addr16
andl
dec
xchg
data16
push
lahf
movsl
rcll
clc
sub
clc
xchg
or
sbb
addr16
pop
dec
xchg
push
clc
cmpsl
cld
fwait
cwtl
and
repz
cmp
jbe
sbb
sbb
mov
fadd
cmp
jne
dec
dec
dec
imul
loop
mov
xchg
dec
inc
push
pop
testl
or
shrl
adc
bound
or
xlat
inc
lret
ja
mov
popf
sbb
wrmsr
cmp
add
ss
cltd
add
add
cltd
test
icebp
imul
sub
aas
stos
push
cs
ljmp
repz
popf
out
adc
dec
mov
jmp
xor
adc
hlt
or
ds
pusha
xor
sti
daa
aad
cmc
jbe
pusha
cmp
mov
sbbl
addr16
sub
ss
adc
lret
daa
and
and
sbb
mov
jp
mov
xor
inc
mov
or
sti
push
lahf
mov
movsl
arpl
pop
mov
or
jbe
subl
xchg
test
xor
pop
scas
rcrl
lahf
add
mul
pop
cwtl
lods
xor
or
push
jp
mov
fdivrl
sub
or
mov
fsubr
lods
add
jl
adc
jg
push
or
xor
test
inc
xchg
pop
mov
xchg
pop
ljmp
imul
rcrl
mov
cwtl
jp
pop
cmc
xchg
xchg
jnp
mov
xchg
rep
daa
dec
mov
or
sbb
cmpsb
testb
inc
outsb
arpl
mov
mov
cmp
stos
in
push
iret
fildll
rol
outsb
mov
sub
push
gs
mov
mov
mov
sahf
xchg
mov
inc
and
jno
push
lret
inc
xchg
sub
cmpsb
push
adc
sbb
cltd
test
pop
clc
adc
movsl
push
scas
xchg
sahf
mov
mov
popa
nop
cltd
pop
dec
push
mov
gs
jp
std
clc
int
mov
lret
mov
xabort
xchg
pop
add
lahf
jae
in
and
xorb
rclb
out
xor
lcall
gs
mov
add
outsl
inc
push
push
les
add
and
test
out
aaa
ret
jb
xor
add
sub
push
jmp
and
leave
lock
or
frstor
pop
jl
test
call
les
xchg
xchg
js
sub
inc
push
cmp
xor
mov
js
jl
pop
popa
mov
lcall
push
pop
xchg
cmp
inc
or
vpmacsdqh
repnz
dec
dec
push
addr16
sub
sub
mov
sti
jno
enter
or
sub
out
jbe
int3
pop
sti
push
insl
das
jno
mov
push
out
mov
insb
lea
push
xor
add
in
push
cmp
leave
pop
or
push
rcl
or
pop
xor
stos
and
fisttpl
mov
scas
mov
aas
fs
mov
in
push
xor
lods
mov
mov
cld
sbbl
xorl
pop
stos
adc
mov
add
inc
jnp
inc
mov
rcrb
add
or
enter
pop
ss
inc
xlat
fwait
jbe
lahf
sahf
fistl
or
bound
hlt
mov
arpl
sub
inc
movsb
add
inc
and
xchg
xchg
pop
in
clc
outsb
call
ret
mov
inc
aam
mov
add
fsub
mov
add
outsl
out
push
cmpsb
cmp
cmp
das
mov
bound
dec
or
ja
mov
mov
and
adc
aas
sub
gs
mov
add
div
cmc
or
mov
pop
sbb
dec
add
pusha
mov
adc
push
call
cmpsb
push
int
out
or
fists
mov
ret
sub
in
cmp
stc
lods
mov
shll
pop
adc
and
enter
mov
dec
mov
dec
cmpsb
jb
aas
sbb
js
add
sbb
or
or
mov
xchg
or
dec
jmp
dec
xorl
test
loop
xor
xlat
mov
out
lret
and
mov
fldl
jg
or
scas
popf
cmp
xchg
pop
or
cld
xchg
push
sub
loop
push
lret
or
add
imul
pop
mov
xor
in
cmpb
mov
adc
bound
movsb
adc
test
dec
js
mov
jmp
shr
mov
je
data16
xchg
fwait
and
loop
push
and
lret
outsl
push
cmc
shrl
xor
movsl
movb
jle
pop
arpl
fs
adc
sti
adc
jo
pop
mov
scas
adc
stos
adc
and
loope
mov
pop
test
mov
aam
push
adc
push
test
int3
xchg
mov
xchg
push
mov
xchg
mov
cmp
push
add
pop
test
pop
fidivrs
jecxz
and
inc
mov
xchg
jb
dec
gs
je
sti
sub
scas
divps
ds
mov
outsl
push
xlat
push
xchg
add
add
pop
pusha
push
push
in
pop
or
inc
pop
inc
popa
mov
lret
in
push
sub
aam
xchg
ljmp
adc
jno
gs
inc
mov
outsb
aas
out
inc
leave
rcll
mov
std
lret
or
sarb
in
sti
or
stos
adc
fsubl
int3
mov
stos
mov
pop
out
daa
das
push
or
and
fwait
mov
and
jnp
ljmp
xor
sbb
jg
dec
pop
es
dec
jb
gs
xor
pusha
or
aaa
push
jp
lret
sbb
fdivp
rorb
xchg
jl
scas
icebp
jge
xor
jl
push
mov
dec
fdivr
xor
push
ret
in
in
test
sub
mov
mov
and
sub
test
cmp
lret
xor
data16
mov
or
outsb
rorl
scas
mov
outsb
pusha
pop
add
jmp
or
insb
shrl
das
adc
sub
jno
or
pop
ss
int
ret
cs
insl
ret
mov
push
mov
mov
add
pop
cmc
jl
push
addr16
cmp
lea
mov
jo
jae
dec
scas
popa
dec
cmp
xor
add
xor
repnz
cwtl
mov
fcos
sub
or
jo
call
mov
neg
and
sbb
mov
out
daa
pop
jnp
adc
pop
cmp
push
cmp
mov
clc
sub
add
jae
movl
push
sub
aam
jmp
int
dec
push
ds
clc
pop
sbb
pop
mov
out
or
popa
jge
aas
cli
cmp
pop
dec
mov
les
div
cmpsl
jl
mov
sub
incb
mov
push
jbe
jne
jp
adc
inc
and
fldpi
test
sub
cmp
sub
add
sbb
sahf
pop
push
push
adcl
sti
pop
push
inc
add
mov
dec
stc
mov
mov
add
dec
loopne
stc
mov
das
daa
mov
in
int
aad
push
and
insl
jo
lea
inc
out
loopne
jg
dec
cs
dec
jo
pop
adcl
pushl
in
sbb
xchg
lret
lret
faddp
outsb
shrb
xchg
cld
decl
js
push
cmp
push
dec
jbe
dec
aad
pusha
mov
mov
mov
or
out
jge
or
push
iret
movb
jp
call
aam
shlb
and
out
sarl
jnp
scas
add
xchg
and
push
sbb
orb
add
mov
mov
xor
imul
mov
jg
xorl
jg
mov
dec
pop
xlat
sbb
ljmp
pop
adc
pop
mov
adc
lea
ja
es
loopne
cmp
test
mov
mov
adc
ret
jno
add
je
sub
cmpsl
xchg
loope
pushf
data16
pop
clc
or
aas
fcmovne
add
mov
jg
push
mov
call
dec
add
ss
rorl
push
int
roll
rolb
dec
adc
jo
xchg
aad
shlb
mov
cmp
clc
pop
inc
adc
inc
sub
mov
out
xchg
push
leave
in
xchg
push
jecxz
sbb
addr16
std
pop
jg
pop
xchg
xchg
xor
lahf
fsubrs
cmpl
popf
add
cmp
or
cli
pop
xchg
pop
mov
mov
mov
sub
inc
rol
sbb
mov
clc
aaa
push
stc
mov
mov
inc
mov
adc
sbb
add
pop
pop
add
mov
out
neg
in
inc
inc
pop
mov
test
scas
jp
and
mov
push
mov
fdivl
push
out
jae
dec
dec
pop
pop
pop
jns
orl
or
lcall
out
int
lahf
xchg
and
jae
push
cmpsl
lods
xor
ljmp
push
jb
shr
inc
adc
cmp
imul
push
call
xlat
jae
imull
xchg
bound
jmp
movsl
scas
and
incl
xchg
les
add
sub
sub
jmp
fcompl
fstl
stos
and
inc
mov
or
dec
leave
jle
rcr
loop
orb
in
call
cmp
jecxz
jl
out
xor
loopne
arpl
sub
mov
jecxz
sbb
lds
xor
jo
pop
rorl
je
mov
loopne
jne
cli
cs
andb
cmpsb
inc
push
mov
push
es
fcoms
push
adc
push
jge
dec
fidivrs
in
mov
cs
insb
xchg
stos
shl
xor
scas
cmpb
into
fistl
out
ja
imul
jne
lods
movsl
push
xchg
sub
shll
push
cmp
stos
shll
lock
int
jo
xor
xor
xor
mov
shrb
icebp
sub
movsb
xchg
popf
movsb
out
test
movsb
stc
clc
xor
sbb
mov
dec
insb
mov
pop
or
jne
mov
mov
push
je
jg
clc
scas
sub
jae
add
negl
mov
dec
inc
xchg
ja
fisttpll
sub
mov
in
mov
and
and
jb
daa
adc
stos
popf
push
cwtl
enter
sbb
push
nop
mulw
test
in
leave
mov
mov
repz
out
mov
js
inc
movsb
or
lods
pop
mov
push
fsubr
repnz
mov
mov
sub
repnz
sbb
in
cmp
jbe
in
and
push
xor
clc
adc
mov
sbb
mov
jp
add
mov
lret
imul
cli
mov
rorb
inc
sbb
xor
lret
fs
pushf
jns
fmull
aam
cmp
sub
cwtl
jnp
push
push
and
adc
cli
int3
xor
sbbb
pusha
add
mov
int
into
dec
add
addr16
scas
iret
andl
sbb
ret
pop
in
adcl
adcl
insb
pop
mov
push
dec
mov
cmp
adc
mov
mov
or
xchg
sbb
test
mov
js
movsb
xchg
scas
inc
mov
les
jb
rcll
call
jg
sbb
push
outsb
iret
mov
cmp
pop
mov
inc
movsb
int3
fwait
adc
mov
add
jbe
rcrb
sarl
imul
cmp
outsb
mulb
int
adc
push
lcall
add
test
xor
cs
leave
adc
mov
sbb
fs
inc
jge
fisttpl
xor
mov
or
add
lods
dec
or
pop
mov
inc
mov
adc
cmp
xor
xor
sub
jno
mov
xchg
movsl
xlat
sub
or
dec
or
sbb
incb
pop
xchg
mov
mov
mov
cmc
add
test
dec
jle
pushf
aad
lea
mov
fdivl
mov
ds
test
xor
mov
dec
in
sbbb
push
out
xlat
xchg
stos
stc
scas
enter
jecxz
lock
in
jae
dec
fsubr
and
mov
je
xchg
lods
and
jb
gs
push
into
jnp
dec
fcomps
sbb
movsl
rcll
icebp
aas
pop
cmpl
pusha
movsb
sub
mov
mov
nop
mov
cli
cmpsb
add
ret
cli
push
and
fistl
lea
mov
outsl
adc
sub
sub
add
push
adc
mov
jno
adc
jne
cmp
ret
iret
push
mov
push
push
push
inc
inc
push
movsl
pop
mov
imul
icebp
in
fldcw
jle
fsts
jns
push
das
shll
push
sti
mov
mov
pop
inc
lret
jp
in
and
stc
call
lcall
and
pop
or
insb
arpl
mov
jecxz
jne
inc
imul
jle
mov
std
adc
fs
imull
mov
cmpsl
fisubl
fcomp
jl
mov
pop
rcl
jg
or
mov
cmp
in
inc
jg
pop
outsb
aam
mov
cmp
add
psubusw
mov
mov
das
fisubl
sbb
push
pop
loopne
dec
push
lods
out
nop
inc
imul
xor
addr16
or
shll
jecxz
xor
loope
xchg
cmp
xchg
jns
cmp
push
daa
mov
mov
test
fstl
fwait
mov
sub
repnz
mov
jge
xchg
fstl
mov
fstps
into
pop
insb
loope
or
jo
xchg
aas
push
cmp
cld
outsl
call
fidivs
mov
fisubl
lods
mov
xor
push
add
push
and
mov
sub
push
jb
or
mov
ds
fsubl
mov
out
filds
or
push
shl
or
icebp
pop
add
mov
rcrl
aad
xor
and
es
out
cld
insl
pop
inc
ss
bound
cmpsb
pushf
push
sub
add
or
adc
mov
punpckhbw
sbb
add
ret
leave
inc
push
imul
fsincos
iret
outsl
aas
jne
jecxz
mov
or
and
fsqrt
mov
js
lcall
scas
sbb
test
sbb
push
imul
adc
icebp
cltd
push
pop
or
std
movsb
rorb
or
pop
push
les
dec
or
ljmp
movsl
xchg
xor
xchg
mov
repnz
adc
gs
or
pusha
iret
xor
and
pushw
cmp
mov
cltd
add
lods
push
pop
ja
push
jge
dec
mov
stos
jle
push
push
lea
cltd
das
sbb
pop
xchg
pop
mov
jns
imul
inc
mov
or
inc
xor
push
lahf
jae
push
jno
jae
loope
js
mov
mov
imul
mov
out
aaa
push
mov
pop
mov
or
into
xor
pop
jo
jle
push
mov
jp
sub
in
adc
mov
sbb
xor
int
mov
pop
push
jne
pop
cmp
ret
ret
out
xor
fadd
cmp
add
push
movsl
jle
das
shll
hlt
ficompl
ds
adc
inc
or
adc
call
jle
jmp
sahf
adc
add
in
adc
sbb
cmpsb
sub
call
mov
and
arpl
icebp
stc
sub
iret
push
frndint
lea
dec
cmp
mov
ret
xchg
mov
ror
cli
imul
push
andb
out
insb
jge
lahf
out
and
stc
jmp
jno
cmp
jno
fidivrs
inc
ss
add
clc
inc
pop
and
repnz
cmp
sub
xor
push
ret
inc
and
in
daa
xchg
fidivs
adc
dec
mov
ror
dec
lret
sub
cld
bound
loope
sbb
enter
fisttps
insb
stos
jg
cwtl
xchg
or
or
aas
jo
mov
shll
ret
mov
xlat
mov
ss
ficoml
adc
xor
sbb
je
push
jnp
shrb
fmul
add
pop
out
inc
mov
leave
mov
repz
mov
cli
mov
dec
xchg
out
or
push
mov
cmc
je
mov
rolb
sbb
inc
aas
adc
in
or
push
not
xchg
push
mov
lds
push
js
cmpsl
push
push
orl
inc
imul
or
jo
scas
inc
into
movsb
cmp
pop
mov
insl
sbb
testb
mulb
fidivs
pop
lods
dec
insb
jmp
fisttpll
fldcw
push
mov
dec
scas
imul
jge
fstps
shlb
xchg
xor
inc
popf
out
pop
push
mov
out
and
lods
fstpt
mov
mov
sub
jl
lock
cld
push
fldl
adc
in
pop
testl
stos
iret
daa
jno
xlat
fistpl
push
mov
push
inc
pop
add
xor
or
sbb
sub
std
cmpsl
adc
and
test
sbb
lcall
ret
mov
repz
jbe
lahf
xchg
lods
jp
mov
cmp
pop
pushf
cmpsb
arpl
cmp
xor
pop
mov
mov
fdivl
insb
pop
adc
call
cmp
out
mov
mov
sub
arpl
in
cmp
adc
or
xchg
js
fdivr
lret
je
jl
cmpl
dec
lods
popa
jb
jns
test
push
inc
xor
dec
xchg
cmp
js
pusha
je
int3
pop
insl
push
lcall
push
leave
rep
pop
pushf
and
sbb
out
ljmp
out
mov
cmc
das
cmpsb
movsl
add
lret
out
jmp
cmp
insl
adc
shl
dec
mov
inc
xchg
fdivrs
pop
xlat
dec
rcrb
lea
ficomps
lods
pop
shlb
ljmp
dec
push
loopne
push
out
sub
inc
jno
sbb
in
es
call
aad
mov
inc
scas
push
mov
pop
push
or
pop
or
adc
stc
icebp
sub
jl
nop
imul
test
icebp
and
flds
push
inc
loope
insl
std
fs
cs
pop
dec
pop
jg
or
stc
or
sbb
ljmp
pop
or
subb
rorl
xchg
adc
pusha
mov
sub
dec
xor
iret
jg
mov
cmpsl
xlat
std
in
neg
out
pop
cmp
daa
or
ja
addr16
xchg
mov
cmpsl
xlat
std
in
neg
out
pop
cmp
daa
or
ja
addr16
xchg
mov
cmpsl
xlat
std
movl
in
sub
push
jge
insl
ja
dec
xchg
mov
cmpsl
mov
std
in
negl
int
ret
popf
sbb
iret
xchg
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
je
xor
mov
and
aam
les
xchg
insl
add
dec
movsb
mov
je
fs
adc
add
xor
and
aam
movsb
sbb
xchg
insl
test
dec
movsb
mov
je
fs
adc
add
xor
and
jl
les
or
jmp
and
sbb
xor
out
xor
int3
xchg
mov
sub
or
dec
data16
add
fwait
add
xor
test
loop
repnz
or
push
lcall
aad
je
enter
cmp
xchg
adc
dec
sub
idivl
clc
add
mov
test
jecxz
addr16
sub
sub
dec
mov
movsb
adc
mov
cwtl
or
test
sub
push
mov
aas
popa
pop
mov
int
push
ffree
loop
and
inc
sbb
lods
inc
popf
je
fs
adc
add
xor
and
aam
les
xchg
insl
test
dec
int
cmp
inc
hlt
sbb
lahf
add
jp
je
mov
mov
pushf
jne
jl
insl
idivl
mov
in
push
enter
loope
std
pop
test
movsl
inc
lahf
and
lods
jl
pop
xchg
or
out
xor
cmp
fcomps
loope
mov
in
add
xor
and
aam
les
xchg
insl
test
dec
movsb
mov
je
fs
adc
add
xor
and
aam
les
xchg
insl
test
dec
movsb
mov
mov
mov
dec
ss
push
insl
xor
stc
addr16
ret
mov
pop
xchg
mov
pop
mov
push
enter
push
fmul
hlt
push
pop
xchg
bswap
adc
xchg
mov
mov
lods
movsb
push
loop
pop
add
js
push
rol
push
mov
test
jl
sarl
lahf
iret
inc
cmp
cmp
popf
mov
xor
xchg
andb
cld
jae
rorl
lock
rclb
adc
in
and
in
mov
cmp
dec
cmp
mov
sub
or
dec
xlat
daa
push
push
jnp
sbb
ljmp
test
and
nop
and
cli
dec
out
or
push
jle
mov
es
pushf
cmp
mov
dec
push
fs
and
ljmp
out
jo
jge
aad
xchg
imul
pop
jo
adc
rclb
dec
dec
xchg
nop
bound
jo
adc
out
jl
mov
icebp
xor
fmull
sbb
xchg
xchg
cmp
test
xchg
push
mov
push
jecxz
fisttps
adc
roll
or
mov
setge
sahf
xchg
cli
xor
push
push
inc
push
hlt
pop
xchg
aas
lea
cli
ret
hlt
mov
enter
leave
inc
fcoms
es
mov
lods
repz
sub
and
xchg
inc
ror
push
push
aas
jnp
pop
arpl
jl
xchg
dec
hlt
jge
inc
adc
testl
fisttpl
lret
add
cli
or
call
test
cld
jne
dec
sub
or
xchg
xlat
pusha
xor
xchg
cmp
dec
push
xor
xchg
vmwrite
mov
or
mov
add
pop
icebp
inc
xchg
cld
push
dec
inc
mov
pop
push
aaa
lods
push
aaa
jns
xchg
js
fiadds
loope
push
jecxz
adc
jecxz
pop
dec
or
fisubs
jo
notb
cli
les
dec
ds
adc
iret
jb
mov
lods
jmp
aas
into
cmp
xor
pop
jmp
xorl
into
sbb
lock
in
lods
out
divb
insb
in
add
gs
sti
loope
mov
ss
aas
inc
add
jge
sbb
incb
jo
arpl
loopne
daa
nop
pop
insb
mov
mov
add
sub
push
pop
imul
fs
mov
fmull
sbb
aas
ret
jle
jb
xor
sti
aam
cmpb
jae
or
icebp
mov
mov
ficoml
mov
cs
jp
outsb
pop
scas
xor
push
push
inc
popf
in
je
mov
xor
addr16
fwait
add
bound
sub
sub
popf
jmp
jns
idiv
insl
adc
int
mov
inc
daa
pop
add
sbb
push
or
ret
sahf
insb
in
adc
add
push
adc
shl
aad
adc
push
sbb
mov
aaa
add
jnp
sub
test
adc
mov
mov
inc
pushf
push
cmpsl
call
cmpsl
add
add
test
mov
mov
test
outsb
xor
data16
rclb
aad
adc
test
daa
les
inc
cltd
fcmovnu
and
xor
xchg
pop
pop
imul
sub
test
stos
mov
cmpsl
addr16
push
mov
pusha
dec
shr
jns
ret
pusha
cmp
adc
pop
lahf
sub
push
sbb
shl
mov
jg
jge
xchg
mov
lock
pushf
xchg
outsb
push
popf
push
data16
loopne
dec
inc
xchg
pop
mov
adc
jg
imul
mov
adc
out
sbb
and
stc
jne
arpl
mov
pop
push
mov
mov
inc
loope
dec
fcmovu
jo
jmp
xor
sarb
mov
inc
dec
sarl
stc
pop
or
fstps
out
push
xchg
aam
pop
add
xor
pop
lret
outsb
jne
rorl
adc
sub
sub
gs
cwtl
or
xchg
pop
and
inc
pushf
cmp
into
adcb
dec
xor
in
push
inc
cmp
xor
leave
fwait
imul
test
pop
sub
ficoml
mov
bswap
xchg
xor
iret
out
and
pusha
nop
mov
mov
mov
xchg
repnz
push
cwtl
push
xlat
iret
xchg
ljmp
rclb
mov
repnz
mov
subb
outsb
cmc
in
movsl
xorl
pop
xchg
xchg
insl
clc
mov
jno
mull
loope
ss
movsb
data16
mov
cmp
cltd
add
inc
add
cmp
jnp
mov
or
jg
sub
push
pop
lods
lahf
lahf
jmp
ficoms
pushf
test
adc
fisubrs
inc
xchg
jnp
jne
mov
jo
in
popa
cli
xor
sti
cs
in
pop
lcall
inc
inc
addl
scas
gs
mov
pop
pop
xor
insl
sub
cmp
and
sti
cvtps2pd
jae
pusha
nop
mov
and
out
enter
out
jbe
rol
fisubl
sub
lds
jns
ss
jno
andw
dec
xor
inc
movsl
lods
lock
sbb
scas
jae
and
xor
xor
inc
lock
aaa
cmp
jle
imul
insl
imul
hlt
adc
aam
outsl
aaa
pop
adc
xchg
jno
in
push
xor
sbb
fwait
mov
out
lcall
mov
mov
sub
cmpsl
jne
sbb
ljmp
ds
xchg
ret
mov
repnz
sbb
cmp
inc
fs
inc
pop
sbb
popf
fbld
mov
popa
mov
mov
rorl
loop
mov
push
iret
call
cltd
loopne
dec
je
mov
sub
mov
mov
jp
push
sarl
scas
or
sbb
cld
jno
xor
mov
cmpsl
add
dec
sbb
sub
rcrl
add
movsb
cmpsl
jle
insl
lcall
pop
mov
and
mov
ljmp
popf
pop
add
sbb
mov
in
popf
rorl
xor
fldenv
mov
mov
cmp
sbb
loope
cltd
add
paddusb
xor
adc
push
inc
ds
add
jno
mov
jmp
outsb
push
rclb
loop
dec
int
lock
lock
ret
ja
jmp
cmp
vmwrite
jb
or
out
sub
mov
int
jo
mov
insl
rorl
hlt
adc
jns
sub
dec
test
lock
sub
repz
add
pop
adcl
xor
sarb
jns
insl
jnp
lret
push
and
xor
sbb
jl
xchg
xchg
mov
cmp
inc
pop
or
cmp
into
ss
int3
xor
adc
xor
lock
loope
pop
sbb
pop
inc
fcmovnb
adc
fildl
mov
rorl
arpl
xchg
loope
mov
es
lcall
inc
mov
insb
sbb
rcrb
int3
fdivrs
mov
cmpsb
cmp
icebp
jg
inc
pop
out
mov
sbb
jge
xchg
leave
mov
sti
bound
fmuls
leave
das
lods
loope
fmull
or
notl
mov
mov
int
lods
in
mov
sbbb
or
xchg
rcll
ss
jns
ja
scas
xchg
sub
imul
add
arpl
push
stc
jno
pop
xchg
or
popf
jnp
xchg
aam
cmp
je
inc
inc
dec
f2xm1
lock
xor
jg
popf
xchg
push
and
pusha
lds
ljmp
test
mov
mov
fsubs
sub
adc
aas
sub
jne
push
ja
xchg
add
fisubrs
in
mov
les
jnp
pop
cmp
or
xchg
gs
arpl
jnp
das
push
fsubr
iret
into
sbb
jb
mov
sbb
sub
mov
mov
pop
adcl
mov
dec
int
xlat
sub
enter
dec
psubb
mov
fsubrl
lret
dec
mov
enter
jmp
insb
shrb
mov
arpl
daa
cmp
and
and
xchg
dec
leave
shl
sbb
dec
inc
jbe
xchg
lods
insb
sbb
sbb
pusha
push
shlb
cld
inc
test
std
mov
ja
fwait
gs
pop
sbb
in
adc
insl
das
cmp
pop
lcall
mov
iret
mov
fimuls
scas
sbb
mov
push
mov
pop
mov
dec
icebp
xchg
aad
test
sub
sbb
shlb
push
push
mov
inc
and
stc
xchg
lcall
mov
xchg
sub
frstor
sahf
jle
sub
jp
filds
mov
push
rorl
cmp
lahf
cmpsl
cmp
cwtl
outsl
add
jns
out
int3
lods
push
int
enter
lret
xlat
jo
jge
iret
je
cltd
and
cmp
pop
scas
roll
mov
inc
clc
xchg
ret
xor
pop
arpl
pop
add
push
inc
loope
dec
cs
dec
fistpll
lret
push
repz
bound
sarl
into
mov
enter
mov
sbb
leave
adc
or
or
xor
out
mov
test
mov
ret
xor
cs
pop
es
inc
push
xor
jp
rcll
mov
sub
lret
mov
pop
imul
cmp
push
fldl
sbb
push
in
fsts
ds
xor
add
adc
cmpsb
push
or
ret
adc
je
sub
or
sbb
pop
adc
adc
fstpl
loopne
mov
shlb
and
lods
ljmp
fdiv
mov
xor
dec
out
or
icebp
dec
and
mov
xchg
mov
fdiv
bound
outsb
sub
movsl
gs
and
in
mov
jbe
cs
std
pop
lahf
shll
sbb
lahf
dec
sbb
mov
jmp
call
mov
push
mov
in
mov
push
inc
adc
mov
pushf
adc
inc
sub
inc
jecxz
inc
pop
push
push
mov
sbb
push
inc
cmpsl
jecxz
les
sub
cmp
xchg
int3
sub
mov
pop
xor
pusha
lret
xchg
stos
or
sahf
jbe
sti
pop
inc
sub
outsl
lock
pop
jmp
gs
inc
mov
xchg
sbb
xor
xchg
or
xlat
fbld
sbb
add
mov
adcb
adc
out
push
and
imul
data16
push
fcmovbe
xlat
pushf
test
push
pusha
sub
jmp
sub
dec
popa
mov
jp
repz
xchg
mov
das
and
out
mov
mov
scas
arpl
into
and
cmp
xchg
insl
xchg
push
adc
sbb
addr16
std
and
push
xor
add
and
enter
cmp
dec
int3
jbe
inc
xor
inc
dec
xchg
jns
call
sbb
rorl
out
std
sar
in
scas
nop
push
clc
or
add
pop
pop
shrb
rclb
sti
add
pop
repnz
and
ljmp
mov
mov
aam
jecxz
adc
clc
xchg
fxch
jle
jmp
xor
test
daa
fnsave
or
scas
imul
inc
imul
and
jo
int
sub
xor
fimuls
sub
popa
imul
push
out
les
pop
sarb
sbb
lods
inc
and
daa
add
cmp
xchg
cmp
scas
les
sahf
xchg
repz
aad
add
sbb
jo
push
addb
pop
cmp
insl
out
push
add
push
push
outsb
sub
loop
add
mov
mov
or
icebp
lret
iret
addr16
outsb
dec
pop
push
lea
out
mov
call
test
lods
hlt
enter
adc
cmp
inc
loop
dec
xchg
jmp
mov
fs
fwait
scas
dec
cmp
pop
mov
sti
mov
adc
mov
or
mov
cli
sub
lods
cltd
lds
sbb
sbb
pop
mov
jge
popa
jg
decl
sti
imul
or
pop
dec
mov
lret
les
icebp
xor
cmc
or
imul
jns
push
hlt
cmp
xchg
mov
and
cmp
popf
mov
cmpsb
add
out
arpl
xor
mov
push
bound
mov
xchg
jg
bound
pop
lock
xchg
mov
add
and
out
das
adc
sbb
jns
and
in
lods
jb
clc
push
ror
in
mov
lahf
fnstcw
testl
or
in
in
aas
out
jno
mov
cmpsl
xchg
push
mov
mov
or
mov
clc
pop
fisubs
rorb
mov
sbb
dec
sahf
jnp
cmc
ds
xor
jge
add
xchg
subl
xchg
push
or
fdivrs
cmp
out
adc
repnz
cwtl
insb
in
lock
or
mov
pop
adc
dec
sub
fwait
jge
enter
push
nop
or
aam
jp
cmp
mov
sub
dec
popa
test
cli
push
les
add
and
sarb
jge
jp
xchg
jl
stos
inc
push
and
mov
mov
and
mov
shll
insl
jg
mov
fdivl
mov
and
add
sub
pop
jns
jb
cmp
fsubrs
mov
cli
sub
hlt
jb
cmpsb
fldl
fmuls
rol
ret
popa
cmpsl
mov
lods
rolb
mov
mov
fimull
stos
es
xchg
lods
sub
adc
mov
dec
addl
or
jge
mov
mov
push
pop
inc
sub
in
xlat
inc
iret
ljmp
xor
mov
adcl
notb
mov
adc
in
inc
fsubl
fimuls
mov
mov
push
ljmp
mov
cmpsl
mov
mov
cmpsl
push
cmc
xchg
pop
test
sbb
push
and
stos
cwtl
pop
jle
scas
stc
inc
pop
jbe
cmc
lcall
mov
adc
and
cs
cmp
outsb
popa
jp
lea
xchg
testb
push
mov
ds
xchg
arpl
js
cltd
xchg
cmc
lahf
leave
lds
dec
aaa
sbb
jge
pop
js
loopne
repnz
pop
xor
lahf
sub
adc
xor
push
out
js
call
in
jmp
subl
mov
sub
jo
fwait
out
push
ja
pop
stc
or
stos
ljmp
pop
inc
fldenv
push
jne
adc
shlb
shr
gs
xor
shlb
jl
xor
fmull
dec
lcall
test
dec
xor
xor
out
addr16
fdecstp
sbb
cmp
fstpl
sti
sbb
sahf
cld
jo
sbb
inc
aad
hlt
sub
jo
leave
out
xor
fucomip
xor
sub
sahf
pop
pop
push
test
loopne
push
mov
fdiv
xor
dec
fcmovb
jp
notl
imul
mov
jg
into
cmp
xchg
jg
and
adc
jno
xchg
test
mov
dec
lds
in
adc
je
sahf
fbstp
xor
hlt
add
fdiv
fnstsw
push
or
stos
lds
jg
in
aad
mov
out
aas
outsl
inc
jnp
or
cld
jmp
inc
lock
imul
mov
pop
rol
jno
fildll
push
or
loope
add
jle
add
mov
aam
test
cmpsl
jge
ret
mov
mov
fcoml
fnsave
push
fsubs
inc
xor
andb
pop
movsb
jmp
mov
mov
aas
das
add
xchg
cmp
xor
and
add
mov
sub
fldt
mov
cli
sub
in
mov
fidivl
popf
xchg
inc
mov
leave
push
int3
popa
lea
cmp
jmp
popf
and
sbb
das
cmp
movsb
push
push
addr16
or
in
out
jp
adc
pop
shr
clc
inc
in
jo
and
ret
fiadds
mov
cmpsl
xchg
in
cmp
push
or
push
repz
jns
int3
pop
xchg
dec
mov
mov
push
mov
aam
faddp
outsb
inc
xor
cmp
mov
mov
enter
popf
inc
cs
push
out
lods
pop
lods
push
into
push
cmp
sahf
xor
pop
fcomi
scas
or
push
mov
jg
jae
pop
cmp
into
inc
test
mov
mov
add
arpl
mov
in
cwtl
and
addr16
faddl
adc
nop
xchg
sub
mov
push
call
dec
push
arpl
loop
movsb
dec
icebp
adc
out
in
sub
ljmp
into
xor
mov
cwtl
xchg
or
sub
inc
loope
sub
or
enter
loopne
leave
and
out
arpl
dec
pop
in
cmp
cmpsl
mov
addb
jno
pop
adc
inc
sbb
std
cmp
jno
and
adc
sub
push
fs
imul
pop
pop
outsl
lock
jmp
jle
and
inc
jge
push
inc
roll
mov
loop
push
mov
mov
lods
out
cmpsb
movsl
mov
xchg
out
es
addb
sub
and
ret
mov
mov
pop
mov
mov
dec
das
outsl
into
push
pop
in
addl
outsl
push
jae
sbb
mov
fistpl
mov
lods
jecxz
insb
xchg
iret
popf
outsb
mov
std
loopne
bound
cli
push
clc
xor
xor
jnp
sbb
popa
pop
pushf
scas
add
pop
jecxz
repz
nop
mov
mov
add
lds
outsl
int
push
sub
int3
cmp
lds
hlt
popf
cmp
sub
sub
sub
add
mov
sub
lret
sbb
cmp
mov
xchg
shll
jg
in
cmpsl
lock
movsl
lds
fstpl
addr16
ds
stos
adc
and
andl
and
dec
cltd
jne
mov
adc
mov
xchg
mov
out
loope
cmp
push
mov
mov
inc
fidivl
lds
dec
in
ss
ljmp
inc
fistl
int
fimuls
outsb
and
pop
mov
adc
push
push
adc
push
aas
push
or
jmp
pop
es
into
addb
test
lods
and
add
mov
rorb
mov
out
lds
mov
xchg
into
imul
jmp
repz
repz
jae
fs
iret
sbb
fdivrs
jne
das
sti
sbb
xlat
or
sbb
pop
gs
and
icebp
mov
mov
ds
lock
mov
ja
pusha
aad
push
mov
cmp
pop
inc
and
fcmovb
or
int
adc
ja
jne
mov
sub
test
sub
sbb
and
rclb
in
sarb
shrl
js
mov
jbe
jne
cmpsl
adc
sub
ss
push
fstpt
dec
nop
pushf
or
nop
pop
xor
andb
loopne
aaa
xchg
mov
cmp
insl
add
rol
fld
mov
movsb
ret
es
xchg
mov
pushl
pushf
stos
push
or
or
into
xor
arpl
push
dec
ja
adc
dec
add
in
mov
lds
dec
in
popf
out
xor
test
mov
inc
stc
pop
hlt
mov
lcall
pop
xchg
sub
cltd
outsl
fidivl
pop
and
ljmp
jne
mov
add
sub
rcrb
adc
mov
popf
push
jo
mov
dec
pop
aad
sub
enter
sar
pop
lret
push
jae
js
cmc
daa
mov
xor
xchg
inc
out
sbb
ret
faddl
mov
dec
or
daa
cmpsb
rclb
aas
mov
mov
fnstsw
xor
outsb
push
inc
mov
shlb
jns
xacquire
push
cmp
sbb
loope
adc
leave
xchg
mov
mov
inc
lea
out
test
adc
std
cmovle
mov
in
inc
pushf
je
fs
adc
add
xor
and
aam
les
xchg
insl
test
dec
movsb
mov
je
fs
adc
add
xor
and
aam
les
xchg
insl
test
dec
movsb
mov
hlt
lea
in
test
xor
and
push
sub
in
xchg
insl
test
dec
movsb
mov
je
fs
adc
add
xor
and
aam
outsb
mov
or
jnp
dec
cmp
imul
inc
or
or
testb
aad
mov
test
push
pop
inc
dec
xor
sbb
jmp
mov
movsb
test
jne
imul
and
or
stc
lret
mov
cmc
cld
in
incb
xor
sub
cmp
mov
add
cmp
fdivrl
ret
jns
jns
xor
movsb
jmp
jmp
cmp
loop
movsl
bnd
and
fmuls
mov
pusha
je
out
ret
dec
stc
lock
mov
cs
push
adc
inc
jne
inc
jl
dec
inc
pop
pop
cmp
sub
jmp
xor
cmp
movsl
dec
insl
in
push
mov
mov
mov
jmp
push
in
cld
pop
es
leave
in
and
imul
mov
mov
mov
mov
ss
test
stc
push
cltd
xchg
jns
imul
and
or
stc
in
aad
mov
test
adc
adc
sbb
or
dec
pop
jp
cmpl
mov
out
lock
in
add
add
push
jp
insb
push
dec
inc
daa
xchg
fwait
inc
fadd
aas
cld
cld
out
fstl
cmp
adc
xor
and
or
stc
in
aad
mov
test
push
pop
inc
dec
xor
sbb
jmp
mov
movsl
test
jne
add
enter
in
xlat
stos
inc
dec
lcall
stos
test
pushf
ficoml
cld
mov
scas
jbe
xor
jbe
mov
push
jle
ret
adc
inc
lods
or
orb
popf
inc
push
es
stos
mov
andl
dec
mov
lock
dec
popa
jbe
repz
leave
nop
scas
mov
lock
mov
rcrl
stc
and
xor
in
add
xor
jb
jl
jbe
popf
dec
movb
mov
xchg
sub
mov
mov
pop
sti
or
sub
add
xlat
jnp
dec
fcomps
lods
jb
or
xor
dec
test
dec
jbe
fistps
test
or
xchg
popf
adc
ja
in
in
fwait
push
sub
mov
test
jno
loop
sub
inc
cmp
dec
pop
pop
cmp
mov
lcall
imul
inc
lret
cmp
pushf
jge
push
mov
adc
les
cmp
mov
rcrb
stos
outsb
movsl
mov
adc
ret
mov
jl
movsb
imul
mov
lret
inc
out
mov
insb
cmp
jnp
loope
jnp
sub
cwtl
inc
mov
mov
cmp
pop
sbb
clc
jg
fwait
cld
sub
subl
sub
outsl
cmp
lods
add
test
sbb
aaa
outsl
cmp
popa
mov
aam
mov
psraw
jge
addl
test
loopne
in
movsb
subl
faddl
cmp
cmp
fistpll
rcrb
cli
push
icebp
inc
ficompl
std
inc
add
leave
pop
sahf
inc
lds
mov
mov
or
ret
jp
sub
daa
shrl
hlt
dec
or
mov
idivl
ds
sub
pop
lds
outsl
mov
inc
sub
lahf
rclb
cld
add
and
mov
fisubrl
js
insl
inc
mov
inc
and
jecxz
test
inc
xchg
dec
dec
sahf
sahf
pop
bound
push
cmp
and
inc
int
jb
cmp
and
fimuls
sub
setg
loop
ret
call
jae
add
mov
movb
sub
adc
cmpsl
testb
movsl
cmpsb
cltd
sarl
xor
inc
jmp
dec
jge
xlat
cmpsl
repnz
repz
inc
mov
out
xchg
jge
out
pop
cmp
flds
jg
repnz
and
addl
dec
mov
inc
movsl
pop
or
pop
hlt
cmp
jne,pt
inc
pop
and
insb
sub
lds
shll
lock
sub
mov
lea
mov
imul
cmp
enter
les
jg
stc
pop
add
lret
jmp
or
insb
push
cmp
push
ret
adc
jne
insl
ret
push
inc
pop
or
call
xchg
sub
sbb
add
pop
mov
orl
add
insl
or
in
mov
rcrl
loop
clc
mov
and
leave
test
mov
mov
jns
sub
push
add
stos
adc
push
mov
jecxz
cmp
add
fsubrl
adc
cltd
mov
movsb
pushf
sub
mov
jl
mov
jae
cmpsl
jno
loope
add
lds
xchg
out
or
fstpl
movb
mov
mov
or
sbb
inc
dec
push
and
cs
dec
xchg
stc
push
or
es
pop
cld
cmpsb
int3
cs
mov
arpl
scas
push
stos
int3
mov
pop
dec
loope
adc
cmp
das
mov
sbb
cld
mov
add
mov
mov
fidivs
or
fsts
subl
jmp
subl
hlt
pop
movsl
jae
mov
dec
mov
roll
out
push
aad
push
pop
pop
addr16
xchg
inc
mov
mov
decl
lcall
movb
ficompl
clc
pushf
gs
dec
xchg
jae
push
and
movsl
int
rcll
rcll
mov
or
out
push
nop
scas
sbb
fidivl
sbb
add
dec
adc
repnz
xchg
and
xchg
jo
dec
mov
aad
aam
mov
dec
movsl
imul
inc
jno
data16
je
sub
insl
mov
sti
shr
loop
mov
inc
and
dec
mov
or
es
andb
pop
push
inc
xor
sbb
xor
jge
add
stc
pop
sbb
add
es
cwtl
ljmp
cmpsl
and
mov
aaa
and
pop
mov
addr16
scas
dec
mov
sbb
jno
and
lock
xchg
cmpb
out
stc
in
jno
jmp
divl
clc
das
nop
push
pop
sub
imulb
jns
inc
outsb
dec
dec
push
sbb
out
jb
aas
jo
nop
insb
arpl
sub
stc
pop
push
aad
sarb
push
adc
sub
mov
mov
les
loope
mov
pusha
mov
scas
adc
inc
es
mov
cmp
or
push
xchg
push
pushf
jbe
jns
stos
xchg
daa
aas
mov
int3
or
or
sbb
xchg
pusha
mov
jno
xchg
stc
gs
jbe
push
popa
sahf
or
pop
cmp
sbb
enter
fsubrl
fwait
std
int
inc
or
jge
fbld
fcompl
pop
or
push
into
xchg
cld
sbb
mov
aaa
push
loopne
or
inc
es
or
stos
gs
sub
jp
sbb
mov
xchg
insl
and
jo
fnstenv
popf
sahf
js
mov
jmp
ja
mov
pop
les
push
fabs
in
mov
andpd
aaa
jno
xchg
int3
pushf
push
cld
or
jns
ret
in
cmpsl
cmp
or
stos
aad
ja
dec
ljmp
jmp
mov
and
and
pop
xor
add
mov
mov
sub
jecxz
sbb
jge
add
and
mov
mov
sub
test
cmp
sarl
sbb
enter
movsb
test
push
or
jo
mov
dec
mul
xchg
jnp
pop
lahf
arpl
or
push
jle
push
stos
add
pushf
jecxz
mov
dec
inc
xlat
xchg
mov
or
jecxz
xchg
ja
shll
jl
imul
ljmp
add
js
adc
jo
movsb
filds
add
out
and
test
push
ss
lock
xchg
aas
and
mov
pusha
inc
les
flds
jnp
lods
movsb
jb
mov
pop
adc
push
test
iret
or
inc
sub
mov
out
scas
jbe
jns
push
insl
mov
lods
movsb
stos
pushf
push
lcall
mov
inc
push
aas
rol
push
xor
std
push
sbbl
jg
movsl
and
mov
lods
inc
bound
aas
push
or
test
mov
in
in
push
add
jne
insb
loope,pt
scas
push
imul
test
dec
or
mov
adc
dec
sub
shrb
add
or
mov
arpl
push
stos
negb
push
or
xor
mov
fiadds
mov
adc
mov
xor
imul
test
loopne
cmpsl
pop
and
addr16
jb
lcall
inc
ljmp
ret
pop
dec
pop
adc
push
cltd
testl
into
pushf
out
xchg
fs
mov
adc
push
add
jbe
mov
out
inc
leave
cwtl
push
aas
flds
or
dec
push
xlat
ret
ficompl
add
aad
leave
outsb
and
xchg
je
out
rcr
iret
int
fisttpl
xor
push
xor
pusha
outsl
icebp
pusha
cmc
cltd
mov
fiaddl
add
stos
inc
and
frstor
push
inc
mov
mov
jno
js
sti
cs
filds
jl
addr16
test
outsb
dec
movsb
pop
pop
aad
cli
sub
sbb
ds
mov
adc
cmpsb
sbb
popf
lea
pushf
pop
mov
scas
test
aas
lock
mov
sahf
ret
xchg
inc
fdivr
ja
shrl
ret
in
jne
frstor
mov
inc
cs
movb
stos
cbtw
push
adc
cwtl
test
jge
cmp
ja
loope
int3
loopne
mov
inc
test
shll
mov
add
pop
mov
sub
sub
xchg
fmul
je
popa
pusha
inc
inc
lcall
iret
or
pusha
sbb
inc
xchg
jg
mov
pop
xor
mov
mov
mov
pop
js
push
nop
xor
dec
inc
push
subl
sarl
push
xor
sbb
insl
pop
outsl
mov
xor
xchg
add
je
push
push
insb
cwtl
adc
jl
mov
and
es
or
jmp
imul
dec
repnz
mov
in
inc
lods
movsb
je
lahf
sbb
dec
stos
xor
addr16
push
push
lret
jecxz
loop
loopne
in
xor
imul
jns
cmp
inc
mov
push
dec
pop
push
addr16
cmp
scas
pop
ja
push
add
xchg
gs
xor
jmp
frstor
xor
xor
aaa
sbb
add
dec
mov
cmp
xchg
inc
xchg
movsl
aad
add
popf
jmp
jnp
call
jnp
sub
lea
xor
or
mov
xchg
scas
push
sbb
adc
lock
pop
push
cwtl
xchg
popa
mov
sahf
adc
xor
ja
jge
xchg
and
xchg
mul
orl
mulb
in
sub
andl
jno
pop
add
sub
sub
push
fs
int3
je
push
xor
mov
mov
xchg
ficoml
in
int
test
xor
jnp
sub
mov
movsb
jecxz
fistpl
push
jg
jp
xchg
sub
xchg
aaa
cmp
xor
hlt
loop
sti
mov
jle
flds
ljmp
lret
push
jne
fs
jle
dec
push
cmp
sarb
sbb
xchg
pop
lock
mov
push
fs
sub
cltd
lahf
out
jg
loop
push
mov
mov
mov
dec
sbb
sbb
xchg
add
add
inc
leave
add
mov
movsl
dec
into
arpl
negb
xchg
mov
xchg
and
add
rorb
out
ljmp
cmp
insl
or
orb
roll
fisubrl
out
mov
je
push
sbb
xor
in
and
xchg
out
push
movsl
mov
sbb
jmp
iret
fmull
inc
cmp
mov
sbb
out
testb
and
rclb
ret
imul
scas
mov
xchg
pop
xor
xor
in
jp
into
push
popa
pop
sub
mov
negb
sub
call
adc
sti
in
jns
jnp
fstpl
lret
pop
jne
cmp
iret
cmp
inc
add
fldenv
adc
lds
or
jle
pop
pop
sub
pop
popf
jg
dec
jb
mov
mov
add
or
cmp
int
and
jns
pop
outsl
adc
inc
sbb
jne,pn
xchg
xor
clc
pop
cmpsb
and
shll
aas
sti
outsl
sbb
fcomp
cmp
inc
stos
mov
pop
insl
sbb
pop
or
pop
adc
hlt
push
push
sahf
enter
pop
or
sti
cwtl
cmp
add
jecxz
xorb
in
insb
push
scas
mov
mov
lods
mov
out
xlat
hlt
mov
pushf
call
aam
pop
mov
arpl
cmc
jp
cwtl
xchg
lret
fadd
repnz
add
push
popf
retw
cmp
jg
push
fldcw
jnp
xchg
daa
add
push
ret
adc
pop
mov
dec
push
stc
mov
cli
test
rcl
rolb
sti
pushf
gs
cmp
nop
mov
out
frstor
xchg
sub
loope
pop
aad
pop
and
adc
jbe
push
jle
push
xchg
mov
sbb
loopne
fstl
dec
push
hlt
pop
addl
jmp
xchg
inc
pop
cmc
ficoml
or
dec
xorl
scas
mov
ret
mov
adc
xchg
mov
cmp
add
call
inc
xor
sbb
int
adc
xor
mov
xor
arpl
mov
adc
shll
cmp
mov
dec
xor
rcrl
icebp
pop
test
inc
or
jg
lcall
add
addr16
lea
test
jecxz
daa
in
fnstenv
mov
jp
inc
lahf
mov
mov
adc
add
dec
mov
inc
jl
outsl
outsl
sbb
jbe
out
repnz
movsb
xor
mov
aas
cmc
cmpb
sub
mov
and
cld
outsl
jb
data16
jnp
pop
mov
in
enter
push
pop
jae
mov
or
dec
inc
mov
jmp
mov
icebp
fwait
push
testb
call
xlat
cwtl
hlt
leave
cli
test
mov
or
mov
push
adc
add
jo
rcl
add
mov
cli
lods
inc
mov
inc
repnz
pop
in
xchg
dec
push
outsb
decb
or
mov
or
lret
ret
lret
loopne
jnp
jmp
push
loop
push
das
or
repnz
push
test
lods
and
mov
lahf
fidivrs
fs
jne
mov
add
xor
dec
add
fwait
mov
sbb
fcmovnb
xchg
mov
xor
cmp
aaa
xchg
cli
lret
adc
movsl
push
dec
xchg
sbb
popa
aam
pushf
pop
mov
fdivrp
mov
push
pop
leave
scas
and
jns
or
lret
mov
and
stos
push
mov
and
mov
jbe
cmp
loope
pushf
call
insb
mov
cmp
xor
xor
inc
adc
mov
cli
jecxz
enter
adc
ljmp
lods
inc
jno
ret
inc
push
inc
call
stos
and
jge
aam
or
mov
and
fistpll
loope
jecxz
xor
out
xchg
mov
ss
loopne
pop
pushf
push
dec
loopne
jno
lret
pop
shl
jecxz
idivb
int3
sub
jecxz
inc
mov
fwait
xor
inc
adc
xor
stc
std
test
jmp
in
andl
inc
adc
and
shr
or
fisttpl
xchg
push
stos
das
out
dec
lock
mov
inc
push
xor
jmp
aad
xor
loope
adc
out
xchg
ja
scas
add
lahf
popf
add
xchg
xlat
push
repz
in
cltd
mov
push
xchg
sub
jmp
add
arpl
add
lahf
movsb
xchg
add
inc
mov
js
sub
pop
dec
subl
push
or
fst
mov
out
fsubp
add
and
xor
dec
lret
push
loop
iret
push
in
pop
sbb
pop
mov
jno
popa
push
or
ds
outsl
fwait
and
mov
neg
xchg
dec
test
push
jecxz
xor
popa
fldenv
push
stc
cmpl
add
je
cmp
mov
je
inc
sub
jmp
flds
mov
mov
pop
dec
mov
addr16
fs
and
out
jge
imul
add
xchg
sbb
mov
adc
push
stos
xchg
xor
dec
jl
stos
inc
cmp
or
dec
test
cmp
dec
dec
ret
std
in
rcr
sbb
sub
dec
jmp
fsubs
pusha
loope
cmp
dec
sahf
fwait
lcall
data16
lret
and
and
fisubrl
test
cmp
sub
icebp
in
jp
enter
rclb
cmpsb
hlt
scas
mov
imulb
inc
imul
inc
std
sahf
in
cmp
imul
icebp
mov
add
icebp
ret
imul
insl
std
mov
mov
popf
cmp
push
mov
sub
lock
rorb
xchg
ss
mov
arpl
call
inc
pop
or
jp
add
cmp
jge
loop
ret
stos
mov
jl
es
sbb
jb
fnstenv
cltd
push
daa
icebp
inc
xchg
inc
mov
std
inc
dec
inc
fs
mov
mulb
sub
call
mov
lock
sub
addr16
ret
dec
sub
xchg
ss
or
test
lret
fnsave
cmp
into
xlat
inc
inc
scas
mov
pop
cwtl
out
bnd
sub
or
loopne,pt
into
nop
pop
stos
test
aam
stos
cmp
jb
test
sbb
ljmp
cmp
push
lds
test
jne
xor
pop
insb
adc
jbe
xor
lret
es
fsub
mov
mov
push
xchg
xor
push
jge
leave
or
jno
push
mov
icebp
test
mov
roll
xor
dec
jne
fsubrs
inc
sub
sbb
aaa
pop
fldt
adc
xor
sub
cmpsl
mov
pushf
cmc
icebp
lea
scas
mov
mov
sub
mov
leave
mov
leave
jle
sub
adc
leave
mov
xor
mov
testl
sahf
gs
mov
cmp
outsb
push
push
cmp
cli
in
scas
mov
or
leave
sbb
ss
xchg
push
fldenv
jecxz
inc
xlat
je
mov
lds
add
test
mov
andb
call
fnstenv
aam
mov
lods
mov
enter
shrl
jo
jnp
shl
imul
repz
call
jbe
and
xor
sbb
mov
mov
xchg
dec
iret
xor
sbb
lods
in
pop
cld
xchg
jns
shlb
add
push
mov
push
scas
daa
enter
adc
lret
insl
ret
xor
int3
sub
mov
lods
lds
dec
or
jb
and
roll
rol
fsubl
mov
cltd
arpl
push
cmp
push
repnz
pop
dec
mov
cld
ret
sbb
xchg
and
inc
stos
push
fsubr
aas
and
push
xor
cmp
pop
in
sub
movsl
imul
cmpsl
xchg
or
add
ja
xor
xchg
std
xchg
insb
jo
cmp
jae
sbb
in
shrb
inc
call
sub
sbb
pushf
inc
fnstenv
fwait
mov
dec
push
cmp
jle
imul
sub
xor
lods
inc
mov
sub
inc
mov
repnz
mov
ljmp
adc
cmp
sbb
cmpsl
lret
add
and
fbstp
mov
imul
mov
xchg
leave
adc
cmp
leave
add
iret
jle
pop
insb
inc
clc
dec
adc
sbbl
jge
pop
lock
ret
or
ljmp
fdivrl
movsl
es
int3
pushl
jle
or
sahf
xor
push
std
aad
scas
adc
push
xchg
dec
mov
pop
mov
push
cmp
cmpsl
notl
xchg
in
lods
xchg
scas
cmp
add
iret
sbb
ret
lods
jne
dec
imull
or
pop
ret
jae
fxam
shrb
sbb
fidivrl
scas
das
out
shl
fadd
or
icebp
mov
stos
xchg
movsb
add
add
cmc
sbb
mov
insb
sub
pop
cmp
cld
leave
sbb
lret
movb
lds
fsubrl
iret
adc
cmp
fimuls
sbb
std
mov
cwtl
ret
sub
push
icebp
sub
or
and
pop
xor
fnstsw
sub
dec
push
shrb
pusha
insl
test
lods
add
jecxz
test
sbb
inc
jp
pop
lock
or
into
adc
or
sarl
mov
pop
jbe
mov
imul
xor
iret
or
pop
js
xor
pop
movsb
aaa
push
mov
dec
aam
test
push
jnp
xor
mov
mov
icebp
and
lea
pop
sti
aad
add
inc
sub
cs
ret
imulb
shl
in
jle
jp
negl
or
fs
add
add
aaa
in
and
jns
and
push
mov
fisubs
rcl
aas
adc
ss
mov
bound
call
jbe
fcmove
scas
push
insl
ljmp
mov
mov
push
inc
dec
xor
sbb
jmp
mov
movsl
test
jne
imul
and
or
stc
in
aad
mov
test
push
pop
inc
dec
xor
sbb
jmp
mov
movsl
test
jne
imul
and
leave
or
sbb
fld
mov
insl
data16
icebp
push
rcrl
rcrl
sub
sbb
popa
clc
push
enter
test
mov
icebp
push
rcrl
mov
pusha
jno
popa
clc
and
les
mov
icebp
push
rcrl
mov
sbb
popa
mov
inc
out
pop
out
jmp
sbb
xor
or
xchg
mov
mov
mov
pushf
add
jp
pop
lock
dec
fstpl
add
xchg
mov
adc
push
sbb
dec
pop
out
and
dec
jno
or
xchg
sub
je
shll
sub
inc
cmpxchg
jmp
pop
fmull
iret
test
inc
adc
xchg
sub
mov
cmpb
pop
popf
mov
aaa
enter
and
push
in
fprem1
xchg
pop
and
dec
sub
outsb
add
pop
and
or
or
mov
scas
push
rcrl
mov
sbb
popa
clc
push
enter
test
mov
mov
mov
mov
movsb
pop
fisttpll
push
hlt
dec
rorb
stc
xor
dec
fstl
push
repnz
movsb
pop
testl
adc
arpl
push
jne
arpl
add
cwtl
sub
xor
push
mov
sbb
popa
clc
push
enter
test
mov
icebp
push
rcrl
mov
sbb
popa
clc
push
enter
test
mov
icebp
push
in
imul
xchg
arpl
mov
mov
shlb
cwtl
jle
jbe
shlb
addr16
stos
sub
add
and
inc
loop
fstpl
cwtl
popf
sbbl
movsb
in
jno
xor
mov
in
ret
or
pop
dec
sub
adc
mov
ficoms
cs
mov
sub
jnp
mov
jp
bound
push
push
cmp
test
fistl
add
pop
test
and
cli
das
and
mov
fs
mov
xchg
pop
jle
lock
nop
push
mov
mov
and
out
inc
sti
in
shld
arpl
loope
loope
adc
pop
adc
sbb
push
adc
in
outsb
data16
push
cli
mov
outsl
and
orl
jg
clc
rorl
imul
sub
fsubrl
imul
lea
push
fwait
adc
xchg
mov
push
xor
push
cltd
fiaddl
xor
into
and
mov
sub
cmpsl
bound
cmp
xchg
stos
repnz
inc
cmc
mov
insl
mov
call
add
jae
sarl
lahf
inc
aaa
or
mov
movsl
cmc
mov
fsubl
sbb
cwtl
jno
inc
jno
push
add
pop
cmp
sbb
jb
sbb
repz
sub
push
sub
add
sub
and
sarb
sub
jns
jno
push
cmp
in
sub
push
dec
pop
test
jl
push
pop
les
es
fadds
add
jns
dec
aas
scas
das
pusha
add
jle
jae
jnp
jno
mov
fsubrl
mov
out
lret
test
xchg
repnz
fidivrl
mov
mov
hlt
push
cmp
nop
push
jb
xor
inc
xor
pop
adc
in
jp
pop
ja
push
rorl
xchg
fndisi(8087
cmp
xor
aad
cmp
sub
adc
in
pop
nop
mov
pop
mov
out
lcall
adc
test
adc
pop
jno
mov
jge
mov
insl
and
adc
ljmp
je
sub
mov
adc
clc
cmpsb
inc
popl
out
jmp
sub
sub
lea
aas
gs
test
imulb
xchg
xchg
test
test
fsubrs
mov
fisubrs
lods
ret
mov
rorl
pusha
sbb
outsb
push
js
dec
xchg
test
insb
div
jno
aas
out
cmc
in
mov
clc
xor
outsl
push
sub
sub
push
xor
clc
mov
addr16
push
sahf
bswap
cmp
xlat
jmp
xor
inc
lock
cmp
lea
in
ja
sub
jmp
jp
and
int
and
mov
fnstsw
pop
adc
cmpsb
aas
push
test
fsubrs
subb
negl
jl
add
push
iret
sub
push
cmp
imul
xchg
cltd
test
out
popf
jmp
and
dec
dec
int3
push
mov
xchg
in
loop
jecxz
xor
adc
orl
imul
test
sub
sbb
mov
lret
mov
mov
fidivs
mov
fwait
cmpsb
mov
xchg
jg
mov
jmp
inc
je
pusha
aas
pop
mov
sti
or
pop
adc
and
ret
data16
pop
mov
sub
lea
xchg
xor
xchg
cmp
orl
cmp
or
fcmove
fisubs
into
ja
cmp
lods
aad
ja
sub
sbb
xor
dec
shl
xchg
call
or
mov
jno
enter
adc
aad
fldcw
dec
inc
add
icebp
cmpsb
les
xor
xchg
xchg
add
cmp
adc
add
lock
xor
dec
es
mov
mov
xlat
lock
shlb
jae
pop
dec
sub
daa
add
and
jno
fists
fbstp
iret
or
or
andb
insb
add
push
jno
movsb
pop
popf
fldl
mov
cmp
add
lcall
mov
lcall
and
mov
cs
push
cwtl
mov
dec
or
pop
lcall
mov
mov
adc
xchg
mov
jb
into
in
in
popa
pop
nop
inc
lods
andl
in
lcall
or
sbb
pop
movsb
pop
push
mov
lock
dec
push
sub
lods
push
stc
outsb
out
les
pop
jge
xor
out
xchg
movsb
pusha
xor
out
dec
sub
je
xchg
dec
lods
mov
into
bound
pop
jo
sbb
lret
mov
mov
cmp
jae
dec
sahf
jo
scas
and
int3
int
jmp
add
lea
sbb
mov
into
addr16
sub
hlt
fbld
jne
jmp
lret
mov
mov
fcomps
shrb
adcl
push
push
outsb
ljmp
mov
aam
aad
cmp
fmul
xchg
fwait
pop
jne
mov
xlat
inc
pop
add
ljmp
push
xor
xchg
xchg
mov
push
cmpsb
std
mov
push
addr16
sar
xchg
cmpsb
or
jl
in
int
ss
gs
orl
sub
mov
repnz
pop
xor
mov
add
pusha
xchg
out
call
popa
inc
arpl
dec
outsb
std
add
push
lods
iret
lahf
xorl
adc
test
and
mov
repz
add
dec
sti
and
in
ficoml
pop
sbb
scas
icebp
or
hlt
outsl
mov
pop
or
ss
sub
out
xchg
push
pop
popa
push
sahf
cmp
icebp
mov
push
es
mov
pop
jbe
psrlw
adc
shr
mov
adc
or
push
xchg
xchg
lods
jnp
cmp
mov
test
sbb
lret
push
pop
mov
mov
mov
pop
jb
or
sbb
mov
sub
pop
adc
push
dec
sbb
adc
adc
fidivrs
push
mov
xchg
or
or
xorl
out
nop
sub
les
or
sbb
lock
or
movsl
pushf
jns
pop
adc
faddl
fldenv
jae
dec
mov
or
in
inc
sbb
xchg
and
mov
sub
js
cltd
aas
shl
addb
movsb
clc
dec
mov
sub
int
lret
popf
shlw
scas
jl
fidivrl
mov
roll
sub
call
mov
js
lahf
fsubrp
hlt
dec
cmpsb
in
pop
add
dec
jl
lods
lret
test
dec
lcall
int3
aad
fwait
mov
clc
rcl
pop
cmc
cmp
dec
xchg
xchg
outsl
dec
xchg
cmp
shrb
push
pusha
aaa
fidivrs
push
mov
xor
xor
popf
pop
icebp
lahf
loop
aam
pop
push
inc
jnp
stos
push
cmpsl
cmpsl
adc
pop
ret
hlt
and
das
push
sub
jg
dec
loop
lret
aaa
lahf
dec
test
mov
stos
and
mov
adc
or
nop
out
sti
clc
ret
dec
imul
xchg
pop
mov
jmp
fucomp
mov
aam
lcall
stos
or
pop
adc
xor
repnz
add
mov
movsb
ds
cmpsb
aad
mov
pop
int3
and
xor
xchg
pop
pop
mov
sbb
inc
sub
je
jg
push
das
insl
iret
sub
sub
fnstenv
push
jge
jne
add
flds
aam
adc
enter
inc
outsb
or
rcr
pusha
repnz
repnz
mov
daa
iret
test
inc
fdiv
mov
into
push
mov
ret
xchg
jbe
jns
dec
cld
mov
loop
ret
add
icebp
and
loope
roll
xchg
mov
mov
movsb
push
pop
sub
adc
outsb
loope
div
dec
fcompl
cmc
mov
int
pop
iret
jmp
xchg
and
cmp
adc
push
dec
jno
insb
mov
negb
shr
movsb
fxch
pop
ja
jae
imul
ss
out
jae
mov
aam
hlt
xchg
jl
call
inc
cs
add
jo
dec
jns
in
ja
mov
xchg
fs
rcrb
arpl
push
mov
out
dec
mov
cmp
std
out
sub
fwait
test
jne
xchg
pop
or
and
or
mov
int
mov
nop
orl
jmp
aad
xchg
pop
jb
or
ss
fistps
ds
mov
cmpb
push
subl
push
fiadds
mov
add
inc
sti
movsb
loop
push
dec
mov
ljmp
adc
mov
xor
pop
jo
cmpsb
adc
lahf
push
or
daa
and
lahf
scas
pop
cmpsl
in
stos
js
jp
push
and
insb
and
movsb
stos
pop
inc
movl
xor
mov
xchg
xchg
stc
add
idivl
repz
sub
pop
mov
mov
xor
std
cmpsl
mov
lcall
ret
dec
fwait
in
sbb
inc
xchg
xor
sbbl
push
rep
push
loopne
xorl
push
cmp
adc
test
movsb
sbb
jns
enter
mov
js
pop
add
mov
dec
fbstp
jmp
cld
mov
movsl
mov
dec
lahf
mov
inc
addr16
fwait
mov
mov
or
mov
mov
outsl
lock
shr
mov
test
sub
sbb
xor
or
or
cmp
adc
andl
sub
dec
xor
cltd
ss
mov
xor
xlat
and
fbstp
sbb
cmp
and
cli
inc
lock
jo
pop
cmpsl
dec
daa
jg
sub
mov
or
repnz
call
gs
xor
mov
push
pop
and
test
mov
int3
xorb
into
add
or
jne
mov
and
stos
lahf
sub
outsl
add
enter
mov
mov
pop
aad
lock
push
cmc
pop
mov
mov
sub
push
add
js
fimull
test
sub
add
mov
push
into
push
lods
and
mov
xor
cwtl
rolb
fcompl
pop
adc
adc
fincstp
jle
cld
push
push
test
ja
jg
dec
movsl
repnz
mov
ret
clc
ss
test
les
cld
cltd
fcmovnu
adc
rol
in
jg
push
sbb
out
lods
inc
jge
pushfw
mov
sahf
ds
mov
sub
xchg
pop
daa
push
aas
sbb
lock
test
das
adc
rcr
in
cmp
lods
arpl
negl
rol
lods
into
repnz
add
xorb
xor
pop
fcoml
lahf
or
push
sub
xchg
pop
stos
nop
repz
icebp
jo
pusha
cmp
imull
jg
and
ds
xchg
mov
out
icebp
xchg
aam
xlat
cld
pop
pop
clc
jbe
sbb
out
lcall
int
jmp
xor
rorb
std
popf
call
xchg
jmp
sbb
cmp
outsb
and
pop
xchg
cltd
add
jbe
mov
lret
sbb
cmc
xchg
and
adcl
in
jb
jbe
mov
test
sub
and
fdivrl
xchg
push
shl
sbb
dec
test
aaa
jno
mov
mov
cmpb
or
mov
cmp
fisttpl
adc
mov
or
int
mov
xchg
jge
xchg
pop
cmp
inc
xchg
push
out
push
testl
mov
cmp
inc
sub
xor
xchg
movsb
sub
into
loopne
jo
cmp
and
mov
lods
stos
je
push
or
out
or
mov
sbb
sbb
ljmp
out
cltd
hlt
fwait
adc
jbe
imul
in
or
add
pop
mov
imul
push
jecxz
test
popf
adc
sbb
push
mov
les
ret
add
in
repnz
mov
push
add
popf
movsb
into
outsl
pop
ja
jg
add
pop
mov
das
sub
pop
inc
or
inc
negb
sbb
adcb
dec
fs
xor
enter
adc
dec
iret
addl
sub
sbb
in
xlat
pop
in
or
cld
test
sbb
nop
mov
mov
andb
mov
xchg
or
into
inc
push
mov
dec
push
adcl
ljmp
or
cmp
jge
sbb
bound
enter
les
aam
inc
cmp
mulb
scas
pop
xorl
movsl
test
rcrb
pop
pushf
lea
lock
push
std
xor
inc
ljmp
ljmp
subb
in
or
cwtl
mov
mov
or
inc
push
idivb
adc
cmp
sub
rcl
fwait
out
sub
or
test
xchg
push
dec
mov
iret
lds
insb
add
mov
out
leave
ds
xlat
pop
inc
jae
sbb
dec
dec
mov
lods
mov
les
sbb
push
inc
mov
cmpsl
xchg
and
repnz
jno
cmp
mov
cwtl
shrl
stc
xchg
popf
lods
push
push
mov
add
sub
mov
and
enter
repnz
adc
adc
xchg
push
push
mov
add
adc
lret
pop
and
jb
cmpl
mov
fnstcw
xchg
dec
push
add
dec
inc
imul
sub
orb
push
dec
xchg
daa
sub
mov
roll
out
push
test
out
xchg
call
jle
dec
pop
incb
sti
add
call
faddl
cwtl
push
sub
or
mov
fstpl
cmp
jae
add
gs
std
pop
cmp
sbb
mov
jmp
or
fcomp
push
sbb
pop
dec
aam
ljmp
xchg
arpl
clc
push
inc
in
fbstp
sub
sbb
and
ljmp
out
push
jp
sub
pop
adc
xchg
xor
lods
xchg
mov
jge
xchg
push
add
fstl
push
cltd
jns
push
jno
inc
sub
adc
les
jns
adc
mov
push
or
adc
popf
clc
inc
dec
jo
fwait
adc
mov
xchg
out
ljmp
lea
push
mov
mov
sub
clc
lea
jmp
inc
out
sti
stc
mov
mov
rcr
lret
push
adc
in
hlt
sub
cmp
jne
mov
fdivrl
dec
fnsave
sbb
xor
add
daa
ljmp
mov
dec
aam
mov
popa
push
fistpl
mov
cmpsb
cld
je
std
mov
cmp
dec
movsb
cmpsb
fwait
jno
cmp
popa
dec
shlb
adc
mov
repz
adc
or
xchg
push
in
out
sbb
add
xor
mov
lret
lcall
or
push
xchg
jecxz
add
xchg
mov
out
jl
mov
dec
pop
and
notb
push
mov
push
and
sub
test
jae
push
xor
int
pop
adc
push
sbb
add
out
fmull
pop
adc
mov
jp
sti
pop
pop
xchg
and
jmp
inc
jecxz
jmp
daa
cwtl
fsubs
aaa
add
outsb
mov
das
lods
sub
and
sub
mov
push
mov
lds
roll
mov
popa
scas
fldt
sahf
int
dec
int
mov
sarb
adc
popa
popa
das
adc
icebp
pop
and
adc
xor
shlb
sub
inc
fwait
jnp
in
out
inc
inc
jbe
inc
xchg
push
fs
test
cltd
pop
int
aas
pop
pop
cmp
mov
lds
dec
ret
pop
stc
sbb
xor
mov
sbb
jge
mov
xor
in
mov
movsl
rorl
inc
es
jge
pop
out
nop
in
iret
arpl
sbb
push
call
mov
xchg
lret
add
and
stos
rcll
mov
mov
xchg
or
loop
xor
lret
test
inc
jle
dec
add
rcr
iret
aam
mov
sarb
ja
lret
popa
cld
sbb
out
je
mov
lods
sub
push
shrb
add
movb
cmp
cmovne
shlb
mov
ds
daa
push
jo
jb
add
and
push
xchg
jns
fwait
enter
mov
pop
rorl
aam
or
adc
js
int
push
test
inc
inc
out
adc
mov
sarl
xor
scas
fcmovnu
ljmp
mov
jle
icebp
xor
scas
xor
jecxz
adc
sub
mov
push
test
inc
push
xchg
daa
rcrb
push
subl
jno
dec
ljmp
leave
xor
dec
mov
mov
add
pop
sahf
popa
outsb
push
jne
mov
sar
jle
jbe
mov
cmp
aam
scas
and
dec
xlat
push
fdivr
lret
dec
jae
jl
clc
out
dec
jae
jno
mov
inc
cmpsl
sub
mov
js
pushf
cmp
lret
mov
pop
nop
pop
in
fldt
add
into
outsb
es
inc
sbb
or
insb
inc
aam
std
sbb
xchg
mov
in
cltd
lret
bound
jbe
dec
xchg
sub
jmp
arpl
fdivl
mov
andl
outsb
lahf
jns
shll
add
leave
dec
sub
outsl
fwait
addl
js
loope
mov
call
xor
loope
mov
cmp
mov
loop
add
out
sbb
or
stos
bound
aam
dec
fldenv
adc
push
push
ret
push
cli
jp
loopne
loopne
imul
inc
in
arpl
repnz
add
mov
lret
push
lret
cmpsl
jl
ljmp
or
jno
std
sbb
loope
orb
int3
sub
mov
xor
dec
dec
inc
jle
push
xchg
je
dec
inc
push
pop
xchg
jecxz
rcll
or
rcrl
outsb
ret
add
lret
scas
repnz
fcmovnb
pop
or
pop
ret
xchg
and
mov
push
pop
push
pop
test
adcl
cmpsb
jle
sub
xor
add
adc
insl
inc
out
cmc
mov
stos
mov
and
sbb
dec
xor
arpl
xor
add
push
xor
mov
pop
in
pop
adc
aaa
pop
inc
aad
icebp
repnz
cwtl
cmpsb
sub
loopne
inc
aas
shrb
test
xchg
aaa
popf
popf
mov
test
lcall
push
mov
push
push
dec
rcrl
mov
add
adc
mov
scas
cmp
add
fcmovb
repz
ss
pop
mov
mov
mov
xchg
jns
loope
push
xchg
std
jle
repz
int3
pop
inc
out
imul
xchg
mov
mov
and
jo
jecxz
cmc
addr16
mov
in
add
lock
xor
xchg
dec
mov
cs
pop
loope
jle
test
roll
adc
pop
das
cwtl
rcll
scas
aas
sbb
sarl
adc
inc
out
add
mov
push
js
loop
sub
jno
xchg
xchg
movsl
add
fists
mov
rorb
cli
sbb
jae
xor
xchg
fs
sti
lds
pop
faddl
inc
pop
loop
push
mov
or
cmp
sub
push
push
add
xchg
fldcw
shll
in
lds
cmc
adc
cld
test
sahf
cs
in
cwtl
mov
icebp
shr
shrl
incl
adc
loopne
ss
push
scas
dec
adc
stos
jecxz
jg
int
lds
outsl
xor
xor
shrb
xchg
std
mov
lods
sub
or
fcmovnb
mov
adc
xor
cltd
xchg
pop
jbe
mov
pushf
mov
mov
mov
jecxz
out
sub
out
jl
mov
mov
lds
xor
and
adc
test
sbb
aaa
dec
fnstcw
jle
dec
pop
dec
out
js
dec
rcrl
mov
sbb
popa
clc
push
enter
test
mov
icebp
push
rcrl
mov
sbb
popa
clc
push
enter
test
mov
icebp
push
rcrl
mov
sbb
popa
clc
push
enter
test
mov
icebp
push
rcrl
mov
sbb
popa
push
sti
enter
and
add
dec
enter
call
sbb
inc
test
pop
enter
enter
enter
test
dec
fmuls
dec
clc
push
mov
mov
enter
sub
jnp
fdivrs
rcll
loopne
icebp
add
aas
mov
mov
pushf
push
lret
outsb
shrl
fmuls
xor
push
arpl
ja
push
or
shrl
shll
ret
xor
in
repz
mov
cmpsl
jae
test
mov
js
fists
divl
xor
and
fdivs
mov
and
fistps
cmp
dec
xor
or
fcmovu
aaa
mov
or
or
outsl
sub
clc
jecxz
cmp
loopne
push
in
or
xchg
sbb
mov
inc
mov
pop
sbb
dec
mov
cmp
in
cmp
mov
mov
clc
in
movsl
mov
add
pop
insl
jmp
jge
test
cwtl
fmuls
js
jg
or
xor
loopne
icebp
jno
add
dec
sub
or
jl
gs
aam
lds
xchg
hlt
jne
pop
fnstsw
int
pop
mov
push
insb
jmp
mov
fisubl
enter
popf
sub
push
addr16
xor
push
mov
mov
enter
call
or
fmuls
js
push
mov
mov
enter
call
or
fmuls
sti
aaa
movsl
and
xchg
inc
test
and
repnz
cmp
mov
add
jp
push
mov
cmpl
and
int
mov
sub
mov
dec
xchg
dec
jmp
sahf
cmp
add
pop
or
xor
scas
ret
push
adc
mov
mov
sub
test
jg
movsb
test
sbbb
outsb
and
jmp
insb
jl
cmp
sti
or
les
iret
xchg
sbb
mov
and
aad
sub
mov
imul
xchg
ja
aas
rcrb
push
aas
xchg
add
int3
inc
in
xorl
pop
mov
scas
das
dec
pop
xor
mov
mov
ficomps
in
or
push
and
dec
dec
shlb
les
je
popa
adc
sub
aaa
pop
subl
call
cs
sub
or
fsubrs
add
loopne
je
mov
jnp
add
cmpsb
jge
push
jmp
jg
ss
clc
xchg
fmuls
aad
xor
gs
fisttpl
pop
hlt
fidivl
out
fsub
push
pop
ret
sahf
xchg
push
xor
es
loope
jne
fstpt
mov
pop
imul
mov
mov
and
adc
mov
xor
insl
xchg
fcompl
enter
pop
xchg
lods
dec
out
mov
imul
pop
push
or
jne
inc
pushf
arpl
xchg
adcl
mov
mov
xchg
ljmp
repnz
shll
dec
test
stc
dec
hlt
sbb
aaa
test
sub
in
dec
push
jmp
fdivrl
int3
loope
ljmp
shlw
add
enter
fs
shrb
js
pop
push
xchg
pushf
cmpsb
xchg
push
push
jne
enter
jo
push
fistpll
adc
add
cmp
adc
out
sahf
lods
inc
jo
inc
push
lock
dec
out
test
mov
jnp
repz
outsb
jecxz
out
data16
ffreep
jb
lea
push
lret
cmp
pushf
pop
mov
orb
je
orl
dec
aaa
pop
mov
popf
sbb
xchg
mov
nop
test
sub
add
test
adc
loop
and
sbb
mov
mov
out
sahf
fisubs
repnz
sub
mov
mov
add
cmp
push
dec
inc
jb
inc
adc
add
sbb
xchg
lahf
xchg
stos
js
sub
add
lahf
imul
les
sbb
jp
pop
lcall
leave
xor
out
xor
sbb
pop
jnp,pt
aaa
leave
nop
push
cmp
arpl
xor
and
bound
adc
fisubs
cmc
sahf
outsl
dec
arpl
push
add
add
jmp
pop
out
pop
add
sbb
hlt
sbb
jle
insb
mov
mov
inc
xor
in
sub
xchg
int
scas
sub
fnstcw
enter
and
adc
mov
leave
popf
push
xlat
ficompl
and
pop
lea
mov
xor
cmpl
imul
dec
stos
mov
cli
rcll
push
pop
pop
js
test
or
fidivs
and
mov
jb
push
ja
bound
mov
insl
repnz
cmp
jecxz
scas
dec
jne
pop
sub
sahf
cld
call
xchg
jo
inc
repz
dec
jb
out
mov
ljmp
out
dec
roll
mov
inc
ret
mov
jno
iret
fdivs
sarb
sbb
lahf
nop
or
sub
js
adc
add
add
xchg
jne
fists
imul
lock
and
scas
cmpl
mov
and
dec
and
lods
js
mul
fs
push
rclb
xchg
scas
imul
mov
jecxz
and
imul
push
add
data16
lret
inc
nop
dec
dec
loop
test
adc
int3
iret
mov
jle
loop
fdivp
mov
adc
js
mov
fstl
shll
clc
xchg
adc
adc
repnz
out
mov
inc
jb
push
nop
xchg
jns
dec
inc
or
in
xchg
push
shll
dec
lret
pop
in
cltd
pop
push
cmpsb
mov
inc
mov
or
xchg
arpl
sub
cmp
push
cs
jecxz
or
push
adc
call
leave
or
lea
sub
f2xm1
daa
add
push
insb
fstp
jb
dec
inc
mov
in
scas
sub
lds
inc
fwait
in
inc
push
popa
adc
jmp
or
sbb
repnz
mov
mov
stos
scas
pop
loope
sbb
mov
or
push
and
aad
outsl
shr
js
pop
dec
pop
das
push
addr16
jnp
xchg
inc
jbe
sahf
mov
bound
inc
mov
rcrl
lahf
xor
xlat
outsb
stos
sahf
mov
movsl
cld
ds
inc
xlat
or
jo
inc
lea
adc
shll
in
push
mov
loopne
ja
sbb
cmp
shrl
scas
cmp
scas
out
popa
int3
jnp
lret
mov
or
ds
inc
pop
sbb
inc
push
xor
notb
test
or
sti
push
arpl
push
cmp
cmp
lret
out
pop
ljmp
xchg
iret
mov
andl
add
cmc
repz
push
jmp
mov
dec
stos
outsb
inc
xchg
imul
and
pop
dec
add
test
add
pop
leave
sub
movb
in
les
or
sbb
das
fbstp
jnp
jge
pusha
pushf
fnstenv
cltd
or
rcr
ret
adc
orb
jnp
dec
je
roll
cmp
mov
out
add
pop
jbe
mov
sub
adc
rcrb
inc
pusha
lahf
cmpsl
call
cmp
cltd
pushf
dec
xor
pop
jno
outsb
in
adc
pop
test
or
in
mul
aas
nop
es
jb
pusha
push
xor
cmpsl
mov
pop
mov
jo
popa
aam
push
ljmp
inc
dec
fidivrs
add
inc
cli
mov
popa
cmp
sbbb
mov
in
and
xor
hlt
fadds
leave
jns
mull
lock
ss
push
fs
aas
mov
stos
cltd
dec
mov
pusha
int3
sub
jmp
es
mov
mov
pop
insl
sub
add
imul
pop
fsubrs
lret
jle
popa
fmull
sbb
adcb
loop
fildl
bound
ss
cmpsl
addr16
fistps
push
push
sbb
or
pop
jle
lock
sub
jg
jg
cmp
and
out
sbb
jbe
les
das
ss
jp
shlb
stc
xorl
outsb
or
pusha
pop
arpl
stos
xchg
xor
xchg
jl
push
shl
fildl
out
aas
aad
div
or
or
jbe
sbb
fcmovnb
adc
xchg
pusha
fidivs
out
jg
mov
faddl
mov
sti
mov
adc
xor
test
xchg
orb
adc
dec
cmp
or
repz
iret
aas
adc
gs
cmpsb
sbb
xor
test
and
movsl
pop
adc
sbb
jmp
adc
fcomps
ja
ljmp
pop
repz
addr16
mov
and
mov
fwait
test
insb
sbb
sub
xchg
cmp
lcall
fs
ds
mov
push
xor
xchg
ds
hlt
rcll
mov
push
mov
xor
mov
cs
sbb
out
mul
fldt
dec
and
sbb
iret
mov
add
dec
mov
push
popf
mov
dec
xchg
pop
int3
push
cmp
lahf
popa
or
test
inc
pop
fists
jp
mov
and
adc
jmp
outsl
mov
shll
stos
mov
lret
out
or
adc
pop
and
xchg
lock
stc
nop
push
mov
ja
cltd
hlt
xor
add
into
addr16
jae
mov
shll
iret
cld
xchg
jnp
jl
cld
out
mov
pusha
jo
or
cmp
icebp
scas
and
push
adc
cmpb
ret
jae
in
add
decb
aam
inc
mov
sarb
in
mov
outsl
sub
inc
fsubs
mov
pop
pushf
hlt
mov
sub
popa
mov
fwait
int3
sahf
lock
outsl
mov
hlt
mov
loop
push
sbb
push
push
mov
push
or
pop
add
cmp
xor
ss
xlat
pusha
hlt
sub
add
por
test
mov
sbb
push
dec
or
lahf
push
aad
add
out
mov
jle
movsb
mov
jmp
jb
fiadds
dec
mov
mov
xchg
dec
adc
pop
jnp
pop
add
mov
jg
add
jbe
pusha
cs
cmp
ds
scas
fstps
cltd
and
cltd
sbb
notb
jmp
xchg
cmp
mov
or
aas
cmc
xchg
cld
dec
divb
mov
xchg
sub
bound
mov
lahf
push
and
aas
out
imulb
clc
mov
loop
adc
int3
pushf
lret
and
jnp,pn
xor
into
shl
cmpl
popa
sub
sub
fbld
mov
insl
fwait
lret
dec
push
sar
ja
jae
enter
mov
xchg
add
or
mov
xchg
or
out
add
mov
movsb
scas
repz
jne
cmp
mov
sub
mov
pop
fldenv
pop
mov
and
ljmp
push
jb
arpl
fdivrl
out
stos
mov
jb
cs
jg
gs
pop
mov
movsb
push
inc
out
xor
sub
popa
xlat
mov
pop
inc
aad
xchg
cmc
cld
negl
add
iret
cs
filds
xchg
out
repz
addr16
mov
arpl
mov
fists
sub
je
xor
cmpsb
xchg
dec
sbb
sarl
popa
adc
pop
out
lds
jno
les
mov
inc
push
fs
dec
inc
push
adc
cmp
and
rcrb
cmp
cmp
fistps
cmp
in
pusha
push
popf
jo
fsubrs
cwtl
pop
adc
sub
gs
enter
aad
call
sub
dec
xor
ffreep
out
jmp
xchg
inc
and
adc
mov
cmc
mov
int
mov
xchg
addr16
mov
inc
pushf
jne
push
lcall
vaddsubpd
dec
outsl
lods
push
sub
fadds
fnstenv
pop
repnz
jne
sbb
dec
xchg
sbb
jge
mov
dec
inc
add
pop
loop
pop
aaa
out
jb
pop
lret
inc
or
inc
cmp
imul
fincstp
int
push
in
inc
push
icebp
add
push
mov
xchg
sbb
outsl
lods
test
ret
and
push
aas
insl
lods
outsb
scas
sbb
and
ljmp
popa
or
int3
mov
push
pop
rcll
push
pop
popf
pop
movsl
pop
inc
imul
cmp
or
rclb
cmp
sbb
push
sub
data16
mov
xor
ds
je
xchg
into
push
test
adc
jecxz
fisttpll
push
gs
inc
jecxz
jo
jae
fmuls
sti
cmp
inc
mov
fldl
popl
dec
lcall
pop
jge
mov
mov
sub
clc
xchg
xor
mov
js
push
push
push
pop
into
push
jg
sti
push
lds
jo
int
sbb
or
rcll
mov
add
frstor
out
adcl
jl
lahf
and
stos
outsb
int3
mov
pusha
ret
push
imul
test
roll
insl
std
es
imul
fidivrl
into
and
pop
sbb
sbb
das
pop
and
fs
or
and
lahf
nop
rorl
lcall
stos
lret
ja
or
lret
test
xchg
push
or
iret
lahf
add
xchg
repnz
outsl
mov
ljmp
daa
add
aad
mov
sub
mov
push
push
fwait
jae
push
scas
mov
mov
in
add
fstpt
mov
scas
sbb
rcrl
out
cmp
inc
jne
mov
inc
leave
inc
out
fsubp
push
out
pop
mov
push
xor
test
rorb
cltd
dec
mov
test
pop
out
test
add
das
cmp
pop
pop
cmc
test
int3
xchg
inc
pop
dec
pop
mov
addr16
pop
sbb
in
adc
repz
sub
dec
popf
int
or
dec
sbb
add
adc
xchg
aad
in
xchg
repnz
aad
clc
imul
jns
sbb
test
mov
push
mov
lahf
xor
out
dec
clc
popa
fisubl
mov
fwait
xchg
fxch
dec
movsl
outsl
pushf
in
adc
mov
push
xor
insl
sahf
adc
lcall
jge
xor
out
lea
cli
dec
stos
xchg
fisubrs
jb
nop
mov
add
test
mov
xor
xor
xchg
sub
jg
sbb
push
mov
push
xor
in
ret
sbb
mov
and
sti
and
push
loopne
shlb
out
stc
mov
or
cmpsl
ret
mov
in
sbb
push
push
ljmp
repz
pop
sbb
cmpsb
fisubrl
sub
icebp
iret
jmp
sub
cmp
repz
test
xchg
addr16
mov
bound
adc
loop
xorb
test
add
pop
cmp
mov
mov
mov
out
rcr
bound
xor
mov
lcall
stc
push
sbb
dec
ljmp
shll
xor
cmp
lahf
fists
adc
mov
jns
lret
sahf
ljmp
push
int
xchg
or
jns
cli
fstps
adc
inc
sub
and
insl
xor
sub
scas
xchg
faddl
cs
test
cmp
sub
lcall
test
sub
push
jnp
out
lods
std
mov
xchg
and
fsubl
cmp
xor
cli
xchg
sub
int3
lret
add
test
dec
inc
pop
push
or
scas
xlat
call
es
jle
cmp
adc
adc
test
xchg
bound
lret
stos
jbe
mov
filds
pop
pop
sub
cmp
adc
add
fcoms
xor
xor
cmp
cltd
push
dec
ss
mov
push
cmp
aam
mov
add
in
inc
cwtl
fsubrl
jp
mov
mov
out
fcoms
std
cmpsb
hlt
or
jb
xor
sbb
loopne
jle
cmp
pop
jb
pop
ljmp
je
pushf
inc
cmpsb
inc
mov
cld
mov
add
jo
jg
out
out
mov
or
mov
aam
imul
pop
pop
lahf
lods
jno
mov
bound
lock
sbb
js
dec
xor
bound
loope
push
call
xchg
pop
in
in
pop
xor
test
imul
iret
outsb
movl
test
push
je
pushf
jg
mov
in
movsb
xor
and
and
movsl
data16
sub
je
pop
es
daa
aas
test
push
pop
pop
imul
xor
xchg
xchg
push
cmp
out
sub
cmp
out
test
mov
jl
ss
data16
mov
push
xor
or
xchg
and
add
ret
stc
gs
push
sahf
add
fimull
sub
pop
pop
dec
divl
mov
int3
dec
loope
mov
outsl
imul
and
jecxz
shll
ja
pop
lds
push
xor
cmp
insl
stos
add
adc
or
int3
pop
cmpsl
aaa
push
sub
dec
dec
ljmp
jge
sahf
das
loope
and
push
out
fwait
rcll
adc
pop
add
ret
insl
jno
xor
cmc
jb
out
in
ja
push
adc
jnp
pop
hlt
lock
dec
stos
in
jp
or
sub
and
mov
mov
mov
mov
or
stc
adc
jmp
lea
out
or
hlt
cmp
dec
cmp
jl
and
or
mov
cld
cli
ljmp
mov
push
in
cmp
add
push
mov
mulb
cmp
cltd
incl
dec
mov
das
repnz
sub
je
out
adc
xchg
outsb
stos
pop
bound
lret
jl
adc
vaesenc
sbb
adc
rolb
lcall
aas
or
lret
mov
sub
pushf
js
jecxz
lock
push
pop
xor
adc
push
hlt
xor
in
sti
adc
nop
scas
pop
insb
movsl
insb
and
pop
add
xchg
lods
dec
shlb
cmpsb
pop
dec
cmp
push
pop
stos
mov
cmp
scas
cmp
mov
xor
fs
loope
pusha
jecxz
xchg
int3
xor
in
sbb
adcb
call
pop
shll
mov
cmp
rorl
mov
add
add
inc
data16
or
mov
fldenv
rcrb
adc
mov
test
mov
outsb
jle
out
sahf
mov
push
test
pop
mov
nop
in
mulb
jne
sti
sub
out
pop
popf
or
mov
add
xor
loop
mov
bound
jge
cmpsb
mov
add
test
xor
push
mov
jmp
mov
adc
mov
sbb
or
outsl
pop
add
cld
lret
fs
sub
inc
lds
fbstp
pusha
outsb
sbb
jae
fstpt
and
and
sub
push
outsb
add
lds
je
repz
xchg
lods
lea
addr16
loopne
stos
xlat
mov
mov
push
xchg
loope
jae
jo
pop
pushf
sti
incl
icebp
fidivrs
cmp
jg
es
adc
jge
push
pop
and
pop
cmp
sub
mov
lods
mov
sbb
pop
aam
xchg
push
ljmp
stc
pop
push
mov
jmp
aaa
aaa
stos
test
add
call
jns
sbb
int3
dec
dec
push
movsl
mov
jmp
pop
jae
roll
test
fwait
xchg
outsb
ljmp
addb
dec
popf
jecxz
xchg
addr16
divl
cwtl
test
loope
outsl
xchg
inc
pusha
inc
insb
shll
lcall
icebp
out
push
shrl
call
xor
loopne
push
jg
test
mov
push
es
js
into
aam
or
sbb
outsl
mov
test
mov
in
shrb
fimull
add
pop
jnp
fistpl
xlat
mov
or
cmp
nop
or
mov
dec
sbb
pop
lret
or
es
ret
pushf
or
subl
cmp
jno
stos
fwait
mov
mov
cld
cld
sarl
rcr
add
sbb
xchg
and
or
push
xor
outsb
xorl
add
lods
mov
xchg
dec
std
test
adc
das
das
push
imul
fisubl
xor
or
pop
loop
jns
into
ljmp
fadds
ljmp
sub
cmp
xchg
cmpl
push
lret
std
gs
sarb
push
push
sti
inc
mov
pop
hlt
push
jo
pop
pop
adc
shrl
fistpll
fnstsw
jno
es
loop
push
cs
sbb
imull
mov
sub
adc
rcrb
subb
test
lahf
jns
shll
sbb
inc
sbb
hlt
adc
xor
mov
xchg
xor
std
dec
ss
pusha
and
fiaddl
outsl
add
call
gs
pushf
sbb
mov
call
mov
ret
lock
push
jle
lret
jo
push
out
lahf
sti
push
and
jne
dec
xor
mov
call
jo
aam
sub
cwtl
xchg
in
xor
in
jge
loopne
sub
xchg
daa
jmp
mov
sub
lahf
decb
sti
and
jb
inc
sub
test
repz
out
rcr
scas
in
popf
pushf
and
xor
mov
andb
sub
add
adc
cwtl
or
fcomps
dec
clc
js
push
mov
fmuls
js
push
mov
mov
enter
call
or
fmuls
js
push
mov
mov
enter
call
or
fdivrs
clc
push
mov
pop
aaa
loop
js
pop
out
nop
add
inc
push
xlat
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmpsl
jbe
data16
inc
in
xchg
jg
push
push
ret
fs
sub
xchg
jbe
callw
inc
in
hlt
les
aam
and
xor
gs
adc
and
je
inc
xchg
push
xchg
inc
jg
dec
dec
pop
cli
das
xchg
fimull
aam
inc
notb
lds
mov
stc
push
rclb
in
jmp
test
std
and
hlt
out
cmc
jmp
pop
rcrb
sub
dec
jbe
in
add
adc
lret
aad
jmp
inc
sbb
sub
inc
stos
jle
ljmp
sub
and
xor
adc
pop
mov
fcompl
sbb
hlt
cmp
andl
ljmp
imul
test
jl
dec
push
pop
outsb
add
mov
add
push
jg
mov
mov
lds
pop
mov
adc
mov
loope
pop
sahf
xor
sahf
daa
inc
inc
xchg
push
cmp
loop
test
inc
add
mov
les
jb
loop
scas
jb
and
sub
jle
jbe
push
xchg
jbe
adc
xor
and
jp
arpl
addr16
shlb
push
rcrl
movsb
sub
pop
rorl
mulb
xchg
push
inc
andb
mov
les
icebp
adc
in
movl
les
aam
and
xor
add
adc
fs
cmpsb
inc
xchg
push
xchg
xchg
inc
in
hlt
les
aam
and
xor
add
adc
fs
cmpsb
inc
xchg
push
xchg
push
inc
sub
jbe
dec
outsl
sbb
aas
xchg
stc
inc
nop
gs
fcomi
scas
ret
outsb
sub
push
add
fucom
js
pusha
mov
add
pop
sbb
into
adc
call
push
mov
aam
dec
scas
xor
xchg
pop
jp
nop
mov
in
add
mov
cmpsl
ss
int
jnp
xor
lock
out
out
xlat
push
loop
jb
lods
mov
jecxz
xor
mov
dec
and
lock
mov
mov
jo
xor
sbb
and
sbb
mov
jne
jb
rcrl
sbb
xor
fildl
inc
sbb
xchg
jae
mov
imul
mov
daa
jp
testl
adcl
nop
gs
repz
add
jns
fwait
mov
and
ret
xchg
je
sbb
jns
sub
jb
or
jae
ljmp
add
pop
nop
push
xchg
cmpsb
push
push
inc
jns
movsl
push
test
gs
jecxz
mov
sbb
mov
push
data16
fs
xor
test
aaa
sbb
push
or
fdivr
test
repnz
mov
push
push
jmp
mov
in
push
dec
mov
loopne
dec
push
loopne
popf
sbb
sub
test
push
hlt
shrl
xorl
fsubrp
jnp
inc
rcll
test
insb
mov
test
or
inc
scas
dec
mov
jne
test
popl
lds
lock
dec
cmp
xor
ret
mov
jle
pop
sub
cmp
jle
out
lret
mov
incl
clc
iret
and
jmp
ret
cmp
loop
out
xor
popa
inc
out
mov
pushf
test
jmp
shl
aam
mov
adc
fldl
repnz
pushf
rolb
xchg
cmpsl
movsb
push
vphaddbw
sub
fisubl
pop
mov
int
sbb
xchg
dec
mov
xlat
or
ds
inc
mov
rcrb
cld
sahf
or
js
push
movl
shll
pop
es
cmpsb
sub
jnp
fisttpll
lea
js
sub
push
ss
shrl
scas
cld
jecxz
cmp
xor
mov
xchg
in
jle
fildl
jp
into
repz
lahf
das
pop
dec
mov
xor
mov
xchg
int
das
into
mov
jmp
repnz
insb
fimull
xchg
mov
or
std
out
inc
xor
sub
adc
inc
adcl
mov
arpl
test
je
xchg
jg
popf
cmpsl
inc
out
mov
push
test
cmp
mov
ljmp
jl
cmc
or
inc
adc
mov
pop
cmp
out
mov
inc
or
test
aas
mov
into
dec
dec
hlt
xchg
inc
mov
cmp
jb
mov
pop
cmp
in
rcrl
push
outsl
xchg
pop
push
cld
es
sbbl
cmp
fcmovnb
movsl
or
push
arpl
inc
cmp
mov
std
iret
outsb
jae
cli
mov
xor
and
push
insb
dec
loop
scas
lret
adc
dec
std
dec
inc
xchg
push
call
outsb
es
sub
into
js
sub
and
fstpt
scas
test
jmp
mov
xor
lods
lock
add
test
mov
mov
add
add
xchg
mov
adc
lds
push
bound
int3
fisttpll
or
pop
and
mov
mov
mov
test
ljmp
cmp
popa
push
and
pop
and
xor
aam
pop
xchg
les
out
add
sub
pop
xor
dec
fs
cli
in
sbb
std
dec
adc
icebp
push
inc
xchg
adc
pop
jge
int3
in
xor
ficompl
in
inc
sbb
shlb
bound
push
or
jg
add
jbe
cmc
fsubl
and
shlb
dec
cwtl
xchg
jecxz
leave
sub
jns
mov
lds
mov
stc
pop
sub
mov
cmp
inc
stos
pop
roll
inc
add
mov
pop
mov
lods
cmp
outsb
test
dec
dec
mov
lods
jno
jge
xchg
sbb
stos
mov
sbb
and
add
pusha
stos
loope
inc
fwait
in
xchg
jg
add
inc
iret
jecxz
out
fbld
push
mov
scas
push
or
cwtl
cs
hlt
imul
cmp
in
sti
pop
sub
addl
icebp
into
jg
jle
inc
cltd
inc
push
xchg
pop
push
jmp
out
pop
arpl
inc
roll
jecxz
xchg
mov
filds
imul
xor
sub
lock
js
lea
xchg
and
mov
push
adc
jb
pop
scas
aad
testl
or
xchg
int3
jecxz
xor
push
xchg
push
mov
jp
mov
mov
rolb
inc
dec
jb
mov
mov
hlt
pusha
movsb
sub
fisttpl
inc
mov
cwtl
jae
inc
or
outsl
sub
lock
or
xor
shll
mov
sahf
clc
push
in
sbb
iret
jb
inc
dec
shr
out
dec
fmull
jnp
inc
testb
mov
fiadds
jp
pop
push
jnp
vpcmpeqd
xorb
insl
aas
dec
lret
jle
mov
test
add
sbb
pop
adc
addr16
aam
loopne
repnz
mov
jns
mov
xorl
daa
mov
jb
mov
sub
out
icebp
jge
fdivp
insl
fiadds
pusha
ret
call
mov
sbb
das
jp
scas
push
out
ja
push
push
fcoml
mov
in
pop
xchg
push
lret
repz
and
cld
inc
fstpl
sbb
add
cltd
jmp
hlt
movsl
jno
xor
mov
dec
cli
mov
mov
pop
lret
jecxz
push
add
lea
popa
je
xchg
pop
jle
js
rcrl
mov
idiv
jp
pop
push
in
jae
mov
xchg
pop
movsb
xchg
push
or
andb
dec
push
cmpsl
fsubrl
xor
add
adc
mov
lods
adc
int3
push
xor
ret
sbbb
int
jl
aaa
cli
mov
xchg
jbe
cmc
push
into
push
push
push
sbb
inc
xor
les
cmpsl
jb
adc
daa
mov
test
push
add
push
in
adc
dec
nop
clc
orl
cmp
add
pop
cmc
xchg
das
jae
xor
imul
int3
loop
repz
pop
add
mov
xor
ss
add
sahf
imul
dec
sahf
cmp
xor
mov
mov
add
addb
aaa
rclb
in
popa
xor
dec
fwait
pop
mov
push
jmp
fnstcw
pop
mov
xlat
push
push
in
aaa
mov
mov
stos
movsl
ret
inc
sbbl
bound
sub
out
push
ficoml
mov
and
mov
cltd
pusha
dec
cltd
test
mov
and
cli
popf
push
iret
sbb
outsb
int
sbb
shrb
ret
mov
and
mov
pop
pop
std
and
add
and
gs
enter
mov
inc
insb
lahf
pop
enter
dec
stos
jl
ficompl
pushf
daa
fildll
sbb
push
push
or
cli
adc
and
push
xor
sub
hlt
shrb
call
sbb
sbb
xor
shlb
iret
mov
sbb
inc
mov
in
push
inc
push
stos
cli
adc
mov
jo
test
aaa
dec
sub
cmpsb
push
fcoms
sub
in
sti
pop
lret
sbb
aam
sub
test
sub
cmp
arpl
and
xlat
xchg
xor
imul
std
insb
testl
int
sbb
add
movsl
xchg
ss
enter
int3
lock
sub
in
pop
xor
pop
push
inc
mov
or
or
add
mov
ret
pop
roll
test
xchg
icebp
mov
out
lods
dec
aad
sub
xchg
jno
add
jecxz
pusha
int
adc
sti
in
insl
pop
inc
repz
push
loop
push
mov
pop
push
call
outsb
mov
sub
jae
cmp
pop
xchg
mov
into
push
stos
enter
jg
push
xor
mov
jo
and
ja
adc
std
sbb
arpl
xlat
sbb
jg
jo
mov
repz
pop
out
divl
popf
dec
dec
ds
test
cmc
dec
lcall
jmp
and
aam
ds
insl
sbbl
pop
out
cltd
push
cli
shll
hlt
or
jecxz
lock
push
out
and
aad
enter
mov
dec
popl
jb
jno
nop
je
and
mov
daa
adc
fs
repnz
push
jecxz
mov
mov
test
test
sarl
or
xchg
cmp
mov
call
adc
aaa
mul
je
loop
mov
cwtl
dec
sbb
jbe
pop
in
sbb
and
mov
in
cmpsl
push
push
jbe
xchg
fcomps
popa
jbe
imul
sub
pop
lret
sub
dec
cli
or
cwtl
mov
cwtl
pop
iret
jg
inc
iret
test
and
cmp
jnp
dec
adc
mov
adc
xor
or
sub
ljmp
lods
pop
inc
add
aam
int
lret
imul
scas
out
push
inc
scas
mov
dec
and
lods
out
xor
int
pop
xor
js
and
cmc
jp
insb
adc
mov
xchg
dec
in
sub
add
daa
stos
mov
cmpsl
dec
enter
out
lds
mov
adcl
mov
xor
push
test
pop
adc
mov
push
movsb
or
je
adc
and
outsb
sub
stc
out
sbb
mov
ret
pushf
cltd
bound
ror
inc
data16
sub
addr16
jne
pop
xor
mov
mov
jns
pop
aaa
sahf
cmp
fisttpl
pop
xlat
dec
gs
adc
faddl
and
in
mov
sub
stos
daa
xchg
pop
mov
jle
push
int
xchg
stos
movsl
mov
or
inc
inc
jnp
mov
out
add
sub
and
jp
insl
adc
das
dec
ret
jle
or
outsb
imul
loop
lock
xchg
jg
cmpsl
adc
daa
mov
sub
loop
into
adc
mov
insl
jp
insb
pushf
mov
sub
xchg
cltd
or
jno
mov
bound
mov
xor
sbb
pop
xchg
adcl
mov
cmp
pop
push
cmpsb
dec
in
push
mov
cld
sbb
xchg
mov
int3
jb
in
gs
xchg
sbb
int3
shr
mov
loopnew
mov
dec
out
push
cmp
stos
stc
sarb
idiv
sub
loopne
pop
sub
inc
cltd
sbb
mov
pusha
into
stc
xorl
popa
inc
inc
not
shll
cmpsb
dec
sti
cmpsl
mov
jbe
jno
adc
fists
popl
or
pop
pop
xchg
add
push
xchg
add
std
je
and
mov
inc
movsl
daa
push
leave
fsubrp
xchg
adc
xchg
mov
cli
lret
or
lea
jns
cmp
jl
jge
testl
push
and
outsb
int3
filds
xchg
jp
movsl
cmpl
mov
xchg
call
xchg
hlt
jle
xchg
fnstcw
idivb
mov
ljmp
inc
or
shr
mov
cld
mov
mov
pusha
mov
mov
add
mov
pop
ss
adc
addps
mov
out
push
xor
jle
jae
fsubp
pop
in
test
out
or
mov
jb
sahf
adc
daa
in
int3
pushf
mov
xor
cmp
insb
incb
dec
scas
ja
sbbb
push
jmp
lods
lods
pop
jno
call
fdivrs
sti
xchg
repnz
pop
stos
stos
cmp
shl
jmp
ret
and
push
test
push
loopne
xchg
outsl
insl
sbb
mov
cmc
jmp
das
out
jle
add
bound
jp
cs
test
icebp
scas
mov
nop
sti
aam
mov
and
sahf
mov
mov
add
loope
outsl
push
push
pop
dec
add
int
xor
sbb
dec
mov
mov
mov
test
mov
repz
cmp
cmpsl
jecxz
scas
or
push
js
test
cwtl
lahf
out
adc
jnp
cli
ja
int3
scas
ret
es
add
clc
mov
scas
mov
push
rcr
and
iret
dec
jecxz
cli
xor
fists
fdivr
daa
mov
sub
test
mov
xchg
push
enter
jns
and
lret
jae
stos
xchg
pop
in
cmp
imul
lcall
mov
pop
out
mov
cmc
repz
shll
dec
pop
fsubrs
fistpl
add
xchg
rcl
jnp
daa
jo
repz
cltd
addl
xchg
cmp
xchg
aas
leave
sbb
int3
xchg
mov
or
jb
dec
ret
sub
push
clc
daa
loop
shlb
add
push
sub
pushf
xor
push
pop
movsb
clc
outsl
popf
enter
pop
jmp
out
jle
imul
insb
call
jmp
loopne
je
icebp
mov
cs
das
pushf
out
sub
dec
mov
cmp
push
xchg
cmpsb
into
sbb
mov
pop
sub
sub
push
xchg
jno
inc
es
pop
push
jge
rcl
jmp
outsl
pop
dec
sbb
stos
push
arpl
hlt
lahf
inc
andb
aas
pushf
sub
pop
clc
insb
push
sub
mov
ret
or
cmp
inc
addb
lea
lea
fidivrs
out
sahf
xchg
push
lods
ret
push
inc
in
mov
fildl
test
mov
and
pop
and
js
push
fistl
adc
jbe
lds
mov
mov
pop
cmpsb
daa
pop
jp
sarb
scas
jl
push
divb
jae
scas
mov
xchg
dec
mov
sub
scas
push
std
jmp
xchg
dec
xchg
shlb
mov
jnp
mov
fs
repz
ja
and
out
push
jae
mov
loop
rorb
cs
sarb
pop
inc
gs
hlt
lahf
mov
loop
push
pop
ja
test
cwtl
invd
fsts
lea
add
nop
cs
jge
xor
stc
fldl
imul
lods
adc
jne
cmp
jne
push
out
push
cmp
leave
push
sbb
adcl
xor
jg
pop
fcoml
and
sbb
dec
jle
insb
cwtl
xchg
and
xchg
gs
dec
add
mov
bound
jo
inc
stos
out
outsb
fxch
pushw
dec
or
xor
jae
add
add
add
mov
pop
adc
mov
or
pop
mov
pop
stc
xchg
aaa
push
cmpsb
pop
in
shl
mov
sbb
sbb
cmp
iret
mov
or
fnstenv
out
mov
dec
push
and
sbb
sbb
subl
mov
ret
das
in
clc
in
and
fwait
sarb
inc
punpckhwd
dec
dec
fnstenv
outsl
jb
sub
in
enter
and
in
sbb
xchg
test
subl
xchg
mov
jne
mov
cli
mov
repnz
sti
mov
fistpll
fiadds
mov
cmp
add
xorl
and
addr16
in
iret
pop
sbb
mov
lock
and
jnp
enter
daa
xchg
sub
addb
xlat
cwtl
mov
mov
cmp
mov
popa
test
mov
dec
adc
add
sbb
mov
inc
pop
popf
fwait
sbb
hlt
sbb
mov
mov
cmp
popf
inc
pop
and
jbe
add
fdivrl
mov
cltd
mov
sub
xor
add
fsubrl
mov
mov
in
sbb
outsb
stc
mov
mov
inc
push
lret
ficoml
aaa
lret
jbe
clc
cmpsb
cmovne
push
shlb
jmp
data16
imul
push
cmp
mov
push
and
xchg
iret
jg
pop
mov
mov
cmp
insb
mov
jecxz
jns
fdiv
scas
add
pop
je
mov
mov
sbb
push
sbb
hlt
fcomip
sub
insb
cmp
dec
adc
fsubr
xchg
pop
cltd
and
dec
add
inc
mov
mull
fistpll
mov
arpl
fnsave
ss
test
iret
lods
test
sbb
add
out
fnsave
popf
daa
jmp
mov
out
adc
cmpsl
mov
ja
adc
dec
and
sbb
sbb
cmp
adc
push
mov
mov
push
pop
inc
shlb
lods
pop
pop
shl
mov
in
rcll
scas
ret
adc
in
xchg
pop
xor
aas
je
insl
mov
lock
mul
xor
dec
dec
cli
push
daa
je
ljmp
adcl
and
stos
mov
popf
pop
dec
leave
sbbb
push
iret
rolb
call
aas
mov
dec
mov
lods
inc
inc
loope
add
sub
jbe
mov
sub
dec
out
rcrl
xor
xlat
mov
jge
leave
xchg
jl
and
subl
dec
inc
pop
sub
cmp
ljmp
ret
cmp
popl
out
lods
mov
mov
cmp
out
sbb
jbe
movsb
jge
repnz
xchg
das
push
dec
sub
imul
loop
pop
fstpt
push
clc
ljmp
je
xor
stc
adc
ret
mov
adc
cmp
mov
and
cmp
jae
imul
cmp
push
jge
sbb
iret
stc
loop
inc
rol
in
cmp
jo
jae
jecxz
push
push
push
inc
pusha
js
mov
pop
sarl
inc
and
mov
xchg
jg
xor
add
test
stos
jbe
jae
or
xor
lcall
cmp
dec
xor
xor
pop
cli
xchg
push
mov
addr16
movsl
aad
dec
int
push
mov
cli
inc
call
adc
push
lods
or
mov
testb
sti
pop
scas
mov
or
je
pop
lret
inc
push
push
clc
push
sbb
push
fisubs
and
inc
bound
push
adc
ss
push
les
rorb
mov
ss
jne
sub
mov
sub
lods
pminub
mov
iret
ja
fcmovnb
movsb
adc
test
jo
sbb
mov
cltd
rclb
inc
scas
dec
mov
jmp
imul
in
stc
es
mov
aas
lods
xorb
outsb
pop
fsubl
scas
loope
repnz
mov
aad
ror
adc
es
nop
mov
call
cmpsl
js
add
mov
movsl
push
mov
ja
pushf
icebp
inc
xchg
xor
in
int3
flds
xor
cmp
pop
rcll
mov
sahf
mov
aam
nop
imul
mov
push
xor
arpl
outsl
mov
sub
rdmsr
or
sub
pop
test
cmpl
push
out
mov
lds
xor
ss
es
jmp
cmp
subb
outsl
sub
dec
mov
ljmp
js
jl
jns
or
add
mov
mov
and
jbe
xchg
jno
cmpb
mov
sti
xchg
iret
sbb
mov
sbb
fiaddl
inc
cmc
mov
insl
mov
mov
test
and
call
mov
fistpll
jns
scas
in
je
sub
and
inc
or
add
lret
inc
dec
pop
inc
subl
jecxz
fstpl
in
in
movsl
insb
jne
lock
mov
xchg
das
out
xor
fdivl
mov
mov
stos
leave
imul
sbb
inc
clc
jmp
mov
add
lret
pop
mov
cltd
aad
xchg
pusha
jne
jle
cmp
push
jbe
rolb
imul
fstpt
mov
sbbl
jno
data16
shl
sbb
push
divl
mov
out
pop
adc
imul
xchg
xchg
retw
push
xchg
inc
in
hlt
les
aam
and
xor
add
adc
fs
cmpsb
inc
xchg
push
xchg
xchg
inc
in
hlt
les
aam
and
xor
add
adc
fs
cmpsb
inc
xchg
push
xchg
xchg
inc
je
hlt
les
adc
and
xor
hlt
adc
fs
cmpsb
inc
xchg
mov
ficoms
inc
in
in
les
push
and
lret
dec
scas
adc
adc
cld
fnstcw
sub
js
or
sbb
and
or
add
mov
mov
enter
call
cmp
or
sbb
dec
js
dec
push
mov
fadd
lods
clc
clc
enter
mov
outsb
dec
pop
add
push
inc
nop
push
test
fsubrp
leave
ljmp
fwait
mov
jl
pop
jge
addr16
cltd
stos
and
jae
xor
xchg
adc
pop
sti
add
or
repz
mov
cmpsl
sbb
jne
inc
ja
enter
cmpsl
jns
gs
dec
inc
sbb
push
test
rolb
add
test
push
data16
sbb
or
pop
pop
sub
inc
or
sbb
mov
jns
push
lea
push
cltd
push
std
lret
aaa
pop
movsb
popf
cmc
call
jns
mov
movsb
pop
mov
out
inc
push
enter
popf
push
popf
xlat
or
jge
enter
mov
cmp
call
pop
or
mov
movsb
or
cmp
pop
push
ror
push
sbb
pusha
mov
push
clc
rorb
jl
inc
je
int
adc
stc
jmp
enter
sti
mov
cmpsb
xchg
mov
jle
jnp
je
cmp
sub
sbb
leave
leave
int
fcmovb
test
cmpsl
lods
clc
lea
cmp
dec
imul
push
mov
fsubr
enter
call
cmp
or
sbb
dec
js
dec
push
mov
fsubr
enter
call
outsb
nop
jne
notb
daa
jno
loope
addr16
cmp
lahf
sbb
dec
push
pop
inc
xchg
nop
pop
test
and
mov
in
add
and
xchg
adc
and
jl
out
mov
fidivrl
pop
aas
std
jnp
mov
mov
pop
shrl
sub
in
push
aas
pop
repz
out
int3
cmc
jae
and
stc
je
pop
enter
fs
or
mov
and
xor
icebp
mov
dec
fwait
call
inc
xor
jmp
jno
inc
jecxz
popf
insl
mov
insb
jl
lcall
adc
aad
push
or
add
enter
cmp
push
adc
cmc
push
cmpsl
je
inc
ss
shrl
aaa
inc
fistpll
leave
adc
cmpb
cmpsb
aam
mov
mov
jb
push
pop
lods
movsl
add
push
stos
out
insl
outsb
sbb
iret
shrb
gs
xchg
jle
push
mov
mov
pop
inc
lahf
pop
xor
stc
pop
pop
fwait
jg
fcom
mov
jmp
ret
int3
lods
xchg
mov
mov
shlb
sub
clc
add
popf
mov
cmp
mov
mov
jb
adc
stos
addr16
jbe
je
ds
push
scas
outsl
es
pop
sub
pop
fisubs
out
mov
mov
pop
xchg
cmc
cmpsl
call
test
push
mov
shlb
ficomps
js
lret
xchg
jp
and
clc
cmp
add
add
cmp
sbb
test
jp
add
dec
sbb
sub
adc
jnp
rcr
sub
fisubs
or
mov
push
xchg
fmuls
in
add
lret
adc
repz
jmp
pop
negb
mov
ret
inc
sti
das
mov
lret
adc
pushf
lock
negl
inc
mov
mov
sub
sub
and
nopl
sbb
cmpsb
adc
mov
sub
repnz
cli
push
pop
cld
pop
push
xor
lahf
aas
imul
pop
pop
sub
out
in
aaa
add
cmp
and
out
fwait
data16
dec
and
lret
mov
dec
fldenv
pop
fbld
fimull
ljmp
cmc
push
mov
or
xchg
insl
clc
pusha
jns
negb
mov
pop
lds
fs
scas
adc
into
rcrl
push
mov
in
dec
adc
push
sbb
adc
outsl
jg
mov
add
xlat
jle
stos
dec
jge
or
in
dec
dec
inc
ljmp
and
adcb
push
in
das
mov
fiadds
xchg
aad
add
dec
fdivrp
jbe
incb
aam
loope
push
cmp
jl
mov
movb
pop
repz
fists
shlb
das
scas
jne,pn
es
jnp
sbb
and
and
jmp
stos
jecxz
sub
pop
xchg
outsb
hlt
adc
mov
fcmovnb
mov
repz
cmp
shrl
xor
arpl
cmpsl
xchg
add
fs
insb
inc
jo
lret
xchg
dec
jae
jb
mov
test
lahf
shlb
add
out
jne
mov
jae
push
out
or
mov
xchg
xchg
dec
int
daa
fadds
mov
sbb
mov
jo
test
arpl
stos
lods
push
dec
jle
js
bound
das
rcll
xor
test
add
jns
aam
lret
test
cld
add
test
mov
test
cmp
jno
dec
jle
ljmp
push
and
int3
sbb
dec
movsl
dec
cmc
mov
sti
inc
and
push
pop
mov
sbb
jecxz
leave
and
add
dec
jo
xor
pop
jae
sbb
mull
jae
mov
hlt
loopne
nop
push
ss
xchg
adc
xchg
pop
xor
sub
jle
xchg
push
negb
or
push
out
repnz
lret
sbb
cmp
out
and
dec
mov
jo
dec
imul
in
push
or
adc
movl
or
dec
cmpsb
imul
cmpl
xor
mov
lcall
adc
and
stos
fmulp
cld
and
dec
scas
jl
scas
mov
loopne
cli
cmp
jo
popa
push
adc
add
mov
out
xchg
movsl
dec
dec
mov
xor
mov
aad
test
data16
ret
int
les
loop
inc
add
pop
mov
add
ljmp
jb
dec
mov
leave
std
popf
jg
and
jge
mov
pop
adcb
arpl
jl
and
pop
pop
cli
pop
mov
int
xor
dec
dec
add
jp
xchg
mov
int
dec
xchg
inc
push
xchg
rol
inc
decb
push
test
ja
sbb
mov
jle
in
add
dec
or
fmull
mov
lds
push
int
inc
ss
mov
and
xor
idivb
sbb
xchg
jns
mov
jae
jg
in
push
outsb
pop
pop
movsl
sbb
shrb
mov
cmp
or
dec
inc
sub
mov
add
cld
jne
xor
jns
xorl
stos
sbb
add
cmp
lahf
inc
dec
dec
pushl
pop
mov
push
insl
adc
enter
mov
pop
mov
in
cmpsl
cltd
ret
fwait
push
mov
sub
pop
cmpsl
or
std
inc
cmpsl
iret
shrl
lea
xor
cli
dec
and
stos
jmp
pop
jl
push
cmc
ja
test
out
js
xor
fcmovbe
jmp
mov
popa
push
loope
jno
inc
dec
rclb
mov
dec
or
mov
xor
lock
push
dec
repnz
rcrb
cld
scas
push
stos
mov
ret
loope
cmp
cwtl
or
jne
jno
mov
sub
cmpsb
cmp
test
aaa
arpl
push
scas
mov
pop
lahf
in
fsubrp
iret
ja
and
mov
ficoml
imul
aaa
push
or
fisubrs
lea
add
dec
aam
jo
scas
insl
pop
push
xor
or
int3
adc
mov
sahf
mov
push
mov
mov
add
dec
adc
mov
sbb
outsl
push
dec
int3
cmpsl
push
sub
cmp
sbb
imul
cmp
scas
jmp
sub
pop
gs
mov
mov
rcll
jb
icebp
jb
or
lret
cmp
jnp
pop
sbb
into
push
pop
pop
mov
mov
add
daa
sub
aas
cld
mov
popf
cmp
add
addl
add
xor
popa
adc
addr16
jecxz
fistpl
outsl
into
jnp
mov
cmp
jbe
xor
xchg
hlt
xchg
hlt
add
xor
in
mov
jno
add
jmp
mov
jmp
and
mov
iret
loope
sti
negl
xorl
pop
cmp
xchg
inc
jp
xchg
mov
aaa
xchg
cmp
mov
mov
sbb
cs
inc
sti
popa
iret
outsb
add
sbb
and
lahf
sar
notl
fiaddl
inc
adc
push
mov
xlat
xchg
dec
roll
fcmovbe
bound
loopne
jmp
je
lret
inc
in
push
addr16
loopne
jnp
jb
jmp
pop
loopne
das
js
sbb
lret
xchg
cli
and
imul
dec
fildll
sahf
push
xchg
stos
test
arpl
es
mov
imul
pop
xor
loopne
add
or
ss
add
xchg
pop
pop
mov
roll
jns
mov
repz
jle
ret
addr16
dec
xchg
adc
popf
popa
subb
fisubl
mov
or
aas
sub
les
repz
jl
loopne
test
push
xor
xor
daa
es
mov
mov
fdivs
cmp
in
rcll
xor
fisubrl
adc
push
or
sbb
ljmp
and
push
out
dec
jge
retw
jne
gs
inc
or
xchg
fwait
js
xor
mov
dec
mov
push
or
xchg
sbb
fadds
test
pop
pop
movsl
es
mov
rorb
dec
xchg
outsb
push
repnz
push
mov
push
fldt
inc
jae
xor
loop
cld
xchg
popa
lds
aam
sbb
shll
and
add
fmuls
mov
js
mov
push
push
cmp
arpl
pop
popa
jne
add
pop
mov
lods
lds
cmp
mov
cwtl
lret
fcoml
inc
js
in
jmp
imul
push
jl
pop
add
push
nop
fildll
imul
in
mov
dec
xchg
loop
xchg
out
or
mov
fmul
xchg
scas
sub
test
mov
and
inc
fsubrs
sub
mov
sti
imul
fstpt
fucomp
ja
jbe
sub
jg
push
push
sahf
sbb
and
mov
dec
or
jb
push
out
stos
mov
std
stc
pop
lods
daa
and
fstl
lock
sbb
dec
or
mov
test
push
leave
inc
cmpsl
gs
xchg
rcr
addr16
cmpsb
xor
ficompl
and
and
or
fnstenv
mov
popa
or
repnz
outsl
xlat
sbb
roll
sarb
mov
fsubrl
xchg
pop
pop
cmp
rcll
outsb
inc
inc
sbb
pusha
pop
test
lods
xor
adc
mov
xor
add
mov
sbb
inc
xlat
sbb
dec
xor
cld
leave
add
imul
dec
fs
test
or
mov
xor
cmp
push
or
dec
daa
std
cltd
icebp
cli
push
mov
scas
call
xchg
daa
es
or
adcl
inc
push
cs
dec
rcrb
add
cltd
or
test
pop
hlt
lret
enter
push
jns
hlt
dec
jp
xor
pop
pop
repnz
popf
xchg
pop
or
movsl
sbb
adc
fldcw
cmp
nop
cwtl
jns
and
dec
ljmp
jmp
fdivr
jl
orl
lea
adc
repnz
cltd
add
lea
movsl
out
pop
faddl
lahf
outsl
pop
mov
jmp
mov
pop
mov
inc
xchg
mov
jle
fs
rolb
lea
add
arpl
sbb
jno
push
or
lret
cmp
lea
inc
int
sbb
or
jo
imull
inc
adc
mov
ficomps
lret
push
mov
dec
int
lahf
mov
popf
mov
inc
mov
bound
jbe
cmp
jbe
lea
jg
lods
cmp
int
stc
mov
or
or
fstpl
cmp
imul
and
repnz
jno
scas
mulb
aas
jmp
xchg
adc
movsb
scas
mov
fmul
mov
jl
jb
test
sti
data16
push
inc
xchg
mov
pop
sahf
or
je
mov
dec
or
dec
mov
hlt
sbb
testb
push
fs
js
clc
call
enter
out
adc
sub
gs
pop
mov
adc
clc
in
lds
cmpsb
cmp
mov
jl
psubsb
or
mov
int
imul
push
push
dec
dec
lea
push
cmpsl
mov
xor
lret
push
imul
not
xchg
push
cmp
insb
sahf
bound
or
enter
daa
cs
mov
fistl
imul
mov
jl
iret
mov
cmpsb
add
lret
or
iret
pop
pop
push
push
decl
inc
xor
iret
and
clc
jns
sub
scas
scas
addl
push
testl
stos
lds
sub
ret
jnp
add
out
xchg
lea
aam
xor
nop
mov
cwtl
adc
add
jmp
pop
mov
cli
leave
add
mov
mov
cmpsb
rorb
cwtl
ja
lea
hlt
iret
pop
mov
sbb
dec
cmp
mov
or
mov
pop
push
out
mov
mov
arpl
or
cltd
xor
test
push
aad
jo
dec
adc
int3
call
cmovs
mov
and
inc
dec
add
lods
push
mov
jl
mov
cltd
add
adc
es
jne
out
imul
scas
fs
in
fstps
jge
xchg
cld
mov
rorl
mov
pop
lcall
cmp
and
dec
jns
test
xchg
test
fildl
repz
aad
shl
ljmp
hlt
int
cli
adc
stos
sarb
or
mull
or
fimull
repz
fdiv
dec
push
mov
pushf
outsl
pushf
addr16
fdiv
mov
out
push
test
fs
dec
inc
cmp
in
negl
in
js
shlb
fisubs
out
mov
adc
jge
fstps
xchg
bound
lahf
movsl
and
xchg
dec
jbe
mov
and
dec
dec
jno
xor
rcll
mov
xchg
andb
and
sub
cmp
mov
mov
mov
jp
pop
fwait
push
sub
inc
inc
add
sarb
fsubl
outsb
ds
cmpsb
fdiv
fstps
jbe
dec
xor
sub
push
subb
cmp
cwtl
dec
int
das
lods
jns
push
cmp
cmp
scas
repz
out
sti
or
scas
add
xor
lock
pop
push
jnp
scas
mov
out
mov
rcrl
lds
sbb
jno
leave
stos
inc
rol
jmp
xor
push
mov
inc
sbb
lahf
add
mov
dec
mov
adcl
inc
dec
loope
xchg
dec
mov
pop
in
sti
sahf
jmp
mov
jb
mov
out
cli
loope,pn
jecxz
cltd
aaa
lcall
and
stos
or
cmp
lock
mov
jb
lret
inc
int
fldt
movsl
mov
cwtl
sbb
fwait
sbb
ret
pop
scas
fimuls
lock
decl
adc
xchg
fwait
cmp
xor
mov
adc
je
imul
xchg
adc
inc
xor
cwtl
sub
xchg
pushf
jmp
or
mov
pop
orb
jns
dec
iret
jns
push
add
cmp
mov
jecxz
xor
push
das
sub
or
adc
push
stos
pop
dec
ret
adc
daa
enter
xchg
sbb
dec
rcll
jecxz
xor
mov
mov
push
add
sbb
mov
in
pop
add
mov
xlat
add
jge
jge
pusha
ffree
mov
jp
sbb
ret
push
jo
pop
sub
dec
inc
pop
outsb
sub
lret
mov
dec
pop
and
push
cmp
sub
fldt
xlat
aam
sub
scas
push
push
jo
lret
sbb
int3
movsl
xchg
dec
addl
or
add
mov
jne
push
je
cld
cwtl
leave
push
pop
jmp
xor
clc
sub
xor
push
push
jbe
inc
out
push
js
mov
xchg
inc
push
pop
and
xor
imul
fsubl
pop
or
in
es
addr16
add
dec
push
jp
orl
popa
aad
ja
or
adc
cmpsb
adc
sub
jmp
pop
movsb
fcomps
xchg
scas
sbb
test
aad
fldl
mov
movsb
inc
xchg
in
jns
inc
outsl
sub
and
decb
movsl
jle
sbb
orb
sbb
mov
lea
push
adc
inc
shrl
popfw
ljmp
pop
mov
ja
stc
sbb
popf
sbb
push
mov
scas
fwait
adc
or
or
popf
rorl
sbbl
sti
jb
push
or
cmp
je
adc
xorb
jmp
sbb
aam
nop
out
push
mov
cmp
std
aas
mov
push
outsl
add
aas
mov
outsb
les
movsl
push
mov
fwait
int
shll
fmull
dec
inc
and
rolb
jnp
test
inc
pop
ds
sbbb
xchg
insb
inc
sti
dec
xchg
outsb
orb
pop
out
icebp
enter
jg
cwtl
adc
add
dec
popa
pushf
insl
add
sbb
pop
insl
push
mull
mov
in
stos
cs
inc
fs
pop
jge
mov
imul
sbb
stc
jbe
cld
data16
mov
test
mov
rorl
es
clc
push
jl
pop
sub
iret
xor
or
out
movaps
pop
aas
pop
add
sbb
mov
lock
jp
cmp
cmp
rclb
add
aaa
repz
add
inc
adc
popa
cli
sbb
mov
hlt
dec
rclb
and
mov
sbb
in
lret
out
sub
loope
adc
jp
test
notb
js
cwtl
out
pop
mov
call
lods
jg
fs
negl
leave
inc
cmp
lods
fcmovnbe
sti
sahf
sbb
and
je
in
jnp
and
aad
jg
test
and
xchg
cmpsb
fs
cwtl
or
ja
lret
mov
movsb
loopne
push
mov
stos
dec
xlat
and
rclb
outsb
adc
aas
fstpl
pusha
ljmp
cmp
repnz
mov
push
leave
inc
in
lods
test
xchg
lea
and
daa
dec
cmp
in
inc
adc
jg
mov
or
sti
je
jge
push
push
cwtl
sbb
fnstsw
je
fmul
xchg
dec
lcall
pusha
lret
inc
mov
lods
adc
and
sbb
push
dec
repnz
add
outsb
xor
xchg
mov
fs
sub
pop
inc
les
xlat
arpl
inc
mov
clc
or
jbe
test
mov
test
add
and
xchg
push
inc
jge
shll
movsb
and
adc
idivb
cwtl
movsl
not
push
imul
dec
or
icebp
xlat
mov
repz
xchg
scas
jns
fisttps
adcb
push
adcl
and
mov
mov
pop
out
aas
ret
lcall
sbb
add
mov
ljmp
inc
mov
jae
jl
and
mov
jmp
xchg
shr
xchg
adc
adc
mov
fsubr
out
xor
aaa
inc
jne
cmp
test
jbe
dec
inc
pop
push
push
int
je
adc
lods
aas
sub
cli
out
inc
pop
popa
mov
mov
es
pop
xchg
adc
dec
xchg
mov
or
sub
mov
add
movl
sbb
xor
aam
push
punpckhdq
sbb
adc
ja
std
repnz
repnz
cltd
lds
push
jbe
add
scas
add
mov
movsb
or
push
dec
xchg
out
icebp
std
loope
icebp
xor
push
lret
out
std
in
pop
repnz
aad
cmp
insb
scas
xor
dec
ficompl
nop
sub
dec
mov
clc
subl
xchg
outsb
movsl
sbb
mov
shll
pop
cld
stos
cs
or
repz
pushf
push
sbb
repz
movaps
into
insb
add
mov
lods
in
lret
sub
and
les
scas
ficoml
and
inc
cmpsl
repz
xor
adc
push
xchg
repz
ret
sub
sub
dec
xor
push
sub
sbb
mov
int
out
add
dec
add
fisttpl
sbb
call
push
cmpsb
pop
and
adc
aam
pop
mov
pusha
scas
movsb
cmp
dec
lret
add
pushf
dec
push
mov
pop
cwtl
push
mov
inc
lcall
rcrl
inc
mov
repnz
mov
push
es
add
mov
mul
imul
scas
out
je
inc
mov
lret
stc
jecxz
mov
ss
int3
mov
sub
jno
pop
inc
xor
ja
push
andl
pop
jle
popl
inc
or
outsb
loopne
sbb
sti
sub
mov
outsl
sub
in
pop
or
lea
sahf
push
mov
dec
fstps
and
inc
inc
arpl
test
in
lods
lods
jmp
xchg
cmpsb
lods
sbb
sbb
cmp
lret
jmp
and
dec
ds
test
pusha
jp
rep
push
jb
mov
cmp
imul
ljmp
repz
or
dec
js
dec
push
mov
fsubr
enter
call
cmp
or
sbb
dec
js
dec
push
mov
fsubr
enter
call
sub
sub
push
imul
mov
cld
rcr
add
and
mov
add
push
call
adc
mov
addb
pop
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
repnz
jg
arpl
push
add
or
add
add
add
cmp
incl
add
sbb
sbb
mov
add
movb
add
fadds
push
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
jns
fildl
push
add
add
add
cwtl
add
add
add
add
cmp
mov
add
push
add
pop
add
add
filds
filds
add
lahf
add
add
rolb
cmpsl
add
fwait
add
add
add
add
add
add
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
cmp
xchg
add
add
add
add
add
add
add
add
add
data16
adc
add
add
nop
add
add
add
add
add
add
add
add
add
inc
add
add
addl
lcall
add
xor
jmp
add
add
add
add
inc
add
add
arpl
insb
add
add
add
add
dec
add
add
add
add
addb
add
add
add
jns
dec
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
pop
add
jae
or
add
add
add
add
add
add
add
sbb
add
bound
addl
popa
add
jb
add
les
gs
add
mov
add
add
add
filds
lcall
add
adc
add
add
add
and
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
filds
add
jae
data16
ljmp
add
sub
push
add
add
add
add
add
add
fadds
sbb
pop
add
add
pop
add
mov
add
cmp
sub
pop
add
pop
add
add
add
add
add
add
or
ljmp
add
and
add
add
add
add
add
add
add
add
add
add
push
add
xor
imul
rolb
popa
add
add
add
xor
add
add
add
add
mov
add
fadds
filds
filds
hlt
add
test
pop
add
add
inc
add
cmpsl
add
add
add
add
filds
inc
add
add
add
mov
add
add
add
add
add
jnp
dec
clc
and
das
jecxz
fsubrs
aam
mov
imul
scas
fists
xchg
mov
mov
dec
nop
add
js
dec
rcrl
pop
jo
pop
pop
popf
mov
add
add
xor
enter
loope
or
idivb
rcll
stos
les
push
cmc
mov
jg
sbb
dec
and
sub
and
push
testb
call
cld
pop
cmpsb
push
cwtl
fwait
or
leave
arpl
dec
mov
sbb
rorl
mov
fsts
rcrl
mov
bound
pop
pushf
ds
repnz
mov
push
cmpsb
xchg
or
outsl
hlt
mov
push
rcl
dec
jb
lods
inc
inc
das
popa
lock
sbb
mov
call
aaa
lcall
mov
push
addr16
jne
adc
outsl
push
rcll
mov
jle
or
aas
jns
push
mov
pop
xchg
les
mov
mov
out
out
sub
shll
inc
ljmp
les
push
aad
pop
sbb
in
push
cmp
inc
or
and
or
sbb
in
mov
jno
vunpckhps
adc
mov
fsubrl
sbb
cmc
sub
xchg
adc
popa
adc
mov
xor
fdivr
jnp
popa
mov
in
mov
lds
cmp
xchg
ja
jb
xchg
fnstsw
push
mov
sbb
cmp
into
sbb
rcr
or
enter
popa
jg
add
jle
ljmp
cmp
inc
scas
test
insl
cmpl
xor
popf
dec
pop
out
popf
jne
aas
mov
arpl
inc
fld
add
rcl
stc
int3
lcall
lea
mov
out
iret
insl
test
call
or
pop
cmp
push
popf
or
lret
mov
pop
mov
loopne
into
lret
mov
dec
aaa
cmp
testb
mov
mov
xchg
frstor
mov
cmpl
sbb
and
mov
xor
in
xchg
es
fisttpl
mov
jne
in
mov
add
push
ja
mov
std
hlt
mov
ja
sub
imul
popa
enter
push
icebp
and
cmp
fcmovbe
lret
jge
inc
out
std
es
xor
rorb
ljmp
mov
add
cmp
imul
push
das
std
and
sti
imull
dec
outsb
xlat
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
