call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
adc
add
xor
and
sbb
daa
xchg
push
andl
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
daa
movsb
push
mov
addr16
adc
add
xor
and
push
movl
pop
cmpsl
push
movb
subb
push
lcall
sti
pop
mull
je
inc
or
aam
xchg
ja
icebp
cmp
fcompl
rcl
and
mov
ret
mov
jge
xchg
outsb
loopne
jnp
mov
mov
mov
adc
or
pop
dec
les
xor
ret
popa
in
fdiv
jmp
jno
pop
push
push
xchg
xchg
sbb
jae
imul
inc
pop
push
out
pop
imul
ss
inc
mov
adc
addr16
insl
in
pusha
js
in
mov
aas
fmul
int
push
out
jg
jb
addr16
daa
mov
repnz
cwtl
sbb
xchg
aaa
push
jl
call
dec
stos
mov
aam
xchg
jbe
data16
enter
mov
cmpsl
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
jecxz
ret
inc
and
xor
xor
mov
pop
roll
and
adc
ret
push
out
and
cmp
add
push
dec
out
rcrl
lds
mov
test
inc
xchg
jp
inc
divl
pop
xchg
pop
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
adc
insb
cmp
cmc
out
and
stos
test
adc
add
pop
mov
jp
push
or
inc
imul
or
sbb
jmp
push
pop
call
fnsave
mov
fildll
xor
mov
add
pushf
loopne
hlt
and
or
jecxz
outsl
fsubrs
mov
das
lods
adc
inc
fbld
push
push
jp
movsb
jmp
jae
lahf
mov
push
adc
dec
aad
mov
inc
imul
sbb
adc
adc
mov
xor
pop
fcompl
outsl
cmpsb
dec
xorl
std
mov
sub
mov
mov
mov
es
imul
and
sti
fwait
nop
je
repz
lods
lea
lds
pop
pop
adcl
mov
cli
xor
mov
imul
outsl
xor
xchg
fmull
incb
push
loop
adc
fimuls
fistpl
lahf
xchg
cmp
mov
jmp
xor
movsb
or
add
leave
xor
push
lods
popl
sahf
sbb
xchg
jecxz
xor
nop
add
in
jno
pop
and
test
add
in
mov
cs
mov
sub
mov
repnz
jg
xlat
jecxz
test
sbb
push
cmpsl
in
nop
inc
fidivrs
inc
xchg
sbb
jg
enter
mov
loopew
movsb
insl
mov
imull
stos
xchg
jne
sub
out
icebp
cmp
mov
dec
pop
fidivrl
shl
xlat
add
fs
outsl
incl
mov
push
test
cmpsb
addr16
filds
inc
dec
xlat
mov
xchg
sbb
pop
push
out
cld
xchg
sbbl
xchg
out
sub
dec
push
out
sub
arpl
lock
and
loope
or
pop
sub
test
cli
xor
daa
jle
push
ret
sbb
sbb
mov
int
repnz
mov
ds
lret
jge
xchg
icebp
pusha
sub
adc
addr16
enter
pop
shl
cmp
xchg
nop
fsub
cmpb
dec
outsl
data16
add
les
cmp
push
inc
and
imul
push
test
add
nop
call
sub
std
scas
xchg
jne
call
or
in
cmp
stos
popa
notb
sahf
xor
adc
jnp
filds
xchg
xchg
push
xchg
cmp
fwait
fwait
insl
std
out
add
dec
fiaddl
jo
jp
pop
xchg
add
sub
dec
sub
and
icebp
jno
sbb
mov
jb
arpl
add
in
stos
sahf
fstl
test
int3
pop
scas
and
inc
lcall
leave
hlt
pop
xchg
jns
cli
adc
jns
mov
orb
mov
inc
sub
rcrb
je
std
pop
sbb
sbb
add
and
jnp
stc
loope
push
inc
xor
add
or
cmp
jbe
js
dec
jne
xlat
mov
jns
rcrl
loopne
mov
dec
cmp
dec
add
mov
addl
test
pop
in
mov
popf
pushf
addr16
jae
sarl
push
xor
mov
or
adc
jns
mov
popf
js
mov
adc
mov
out
sub
push
add
or
and
jge
leave
repz
mov
xor
in
and
bound
mov
mov
mov
or
mov
shlb
dec
ret
pop
adc
cmp
and
fnsave
addr16
mov
andb
add
push
int
sbb
add
lock
push
loopne
and
inc
cmpsl
mov
pop
sbb
ds
mov
push
es
inc
mov
mov
sbb
pushf
pop
inc
cmpl
bnd
fdivrs
inc
dec
das
dec
pop
rolb
adc
icebp
cltd
pop
mov
ret
fisttpl
testl
jg
lret
test
hlt
pop
jb
xor
cmp
xchg
inc
shll
in
push
cltd
mov
das
sub
jg
movsb
pop
push
std
or
imul
fldt
or
pop
js
test
pop
lret
into
mov
inc
add
pop
repz
mov
loop
insl
mov
enter
test
out
and
das
mov
jmp
out
stos
imul
mov
loop
and
jns
aad
mov
or
pop
pop
stc
sbb
pop
mov
shl
sbb
shl
xor
push
mov
mov
iret
xchg
dec
jno
mov
nop
insl
push
out
mov
jmp
sbb
add
stc
add
jl
std
jecxz
lods
dec
movsl
mov
xchg
xor
or
sbb
in
ljmp
jg
roll
sahf
or
fists
xchg
pop
and
push
xchg
ss
cmp
shl
mov
aad
lahf
jae
hlt
lods
lea
lods
sub
sub
sbb
ljmp
sti
and
aad
jae
cmpsb
out
cmpsl
dec
ja
cltd
cmp
ljmp
jns
mov
add
mov
lods
mov
push
or
pop
fidivs
or
jle
or
push
sub
repnz
inc
orb
mull
or
xchg
push
leave
aam
and
mov
lods
imul
int3
mov
sbb
cmpsb
repz
mov
dec
adc
clc
push
jp
push
mov
sub
or
lods
bound
repnz
int3
cmpsb
inc
lods
adc
pop
inc
mov
pushf
mov
movsl
jle
sbb
xchg
dec
push
fwait
shl
adc
cmp
dec
lret
inc
dec
xchg
je
stos
xchg
notb
sti
sub
adc
inc
sbb
xchg
stos
and
leave
je
mov
repz
ret
dec
fs
mov
cmpsl
outsb
mov
or
sbb
add
inc
cltd
xor
jp
mov
or
adc
dec
cltd
mov
xchg
ss
sbb
and
xor
pop
loope
cli
notb
or
jns
xor
stos
push
adc
pushl
je
mov
xor
fs
push
scas
aam
mov
push
cld
cmpsb
push
pusha
pushf
adc
loope
mov
call
push
insb
push
xchg
xchg
jno
sub
sub
out
je
sbb
inc
push
test
xorb
sti
mov
push
inc
fwait
sub
imul
out
shrb
jg
addr16
loopne
negl
jb
es
in
aas
adc
sbb
jle
add
xchg
popf
mov
add
sub
xchg
cmpsl
cmp
xor
lret
icebp
inc
fs
pop
stos
test
cmp
rcll
les
stos
loopnew
test
hlt
xorps
push
andb
mov
popf
movsl
loopne
pop
inc
add
push
dec
imul
cmpsb
popa
lsl
and
jmp
xchg
rclb
test
insb
dec
es
hlt
mov
jne
sbb
scas
and
mov
push
sarl
sub
pop
sub
cld
and
jp
scas
push
cmp
and
fsubrl
test
movsb
lret
inc
and
js
ds
inc
sub
lcall
lcall
mov
cmp
adc
lods
mov
xchg
es
jmp
test
cltd
arpl
jl
inc
int
mov
std
dec
adc
scas
mov
rcrl
mov
std
cmpsl
popf
dec
xchg
sub
lahf
pop
in
jecxz
mov
ljmp
mov
ja
adc
pop
in
int3
loope
cmc
movsl
inc
ret
adcl
aad
pusha
test
pop
mov
ret
popf
bound
mov
and
add
jle
fisttpl
xlat
inc
addr16
adc
jb
scas
scas
popa
cld
aam
sub
pop
sub
imul
xor
cmp
xlat
fucomi
daa
jecxz
imul
or
sbb
dec
and
lret
inc
xchg
jecxz
adc
dec
stos
fdivs
mov
scas
test
stos
jbe
mov
fs
xchg
sbbb
int
decl
mov
push
sub
adc
dec
or
jnp
out
jecxz
xchg
push
int3
out
std
or
lea
xchg
sbb
xchg
ficoms
xchg
into
xchg
mov
int3
test
dec
je
cmp
sti
inc
mov
mov
int
rsqrtps
cwtl
mov
or
pop
dec
xor
cli
repnz
lret
adc
push
pusha
cltd
sbb
shll
mov
xor
lret
ret
push
sti
and
mov
mov
in
pop
dec
subps
ljmp
shlb
pop
jbe
dec
xchg
arpl
les
dec
mov
fsqrt
jae
mov
outsb
fcmovu
sub
lret
in
jmp
and
inc
adc
sahf
or
adcb
push
mov
jmp
mov
xchg
add
or
inc
mov
push
jl
imul
fidivl
daa
cltd
dec
push
insb
in
and
adc
inc
rorl
dec
xchg
xor
jmp
ljmp
sbb
dec
gs
adc
sbb
pop
sub
add
adc
mov
stos
mov
sbb
or
mov
mov
mov
lret
xor
cmp
insl
and
jmp
cld
ds
dec
mov
in
jle
mov
lds
pop
push
pushf
cmp
lods
sub
inc
mov
sub
addr16
inc
fcoms
mov
shlb
lds
sbb
dec
mov
xchg
outsl
or
scas
insl
push
movsb
mov
xchg
cmp
ror
test
pop
fmulp
gs
mov
add
inc
sub
add
push
add
sbb
jbe
mov
aam
mov
xor
js
add
push
sub
mov
adc
stos
mov
pop
sub
stc
adc
in
sbb
adc
out
mov
sbb
xchg
out
mov
add
xor
aaa
in
mov
and
cwtl
xchg
in
mov
and
test
ja
jb
mov
push
cmp
repz
inc
leave
mov
adc
cmpsb
scas
repnz
fsubp
inc
xchg
stos
aaa
cwtl
jecxz
loopne
mov
ja
stos
in
fcomp
push
jns
stos
jae
jp
cmp
mov
in
fmull
xor
mov
test
andb
nop
call
mov
lea
mov
mov
repnz
mov
shl
loop
sahf
loopne
dec
xchg
or
out
xchg
hlt
lret
mov
xor
xchg
mov
ret
loopne
xor
fwait
loop
pop
dec
movsl
sbb
icebp
xor
js
lods
test
ss
rcrl
lea
out
out
aaa
xchg
test
clc
sbb
call
gs
mov
and
jae
mov
push
cmpsl
testb
mov
dec
add
dec
and
jne
pusha
sbb
lods
xchg
fildll
or
mov
lahf
adcb
mov
filds
dec
and
jns
fstl
jo
mov
mov
push
ja
sub
add
aad
cmpsb
sub
or
xchg
inc
sub
fnstenvs
out
pop
push
sahf
pop
iret
mov
sub
pop
fdiv
ja
xor
out
shr
cmp
and
and
mov
xor
aas
dec
xchg
sub
pop
add
pop
push
cli
js
pop
jae
cmp
int
dec
jp
cmp
je
jl
rcrl
shr
inc
int
mov
fisubrl
scas
frstor
das
cltd
in
sbb
loope
out
mov
lret
lret
stos
push
or
sub
xchg
adc
cmp
cmpsb
mov
cli
pop
pop
gs
outsl
xlat
mov
scas
mov
fdivl
in
dec
insl
scas
iret
cmp
cwtl
imulb
mov
arpl
mov
cmp
push
cmp
scas
ret
rol
or
pop
repz
xchg
lcall
sbb
cwtl
shll
mov
xbegin
xchg
sbb
xor
stos
icebp
jmp
xor
jmp
xchg
add
cld
fcmovu
dec
ljmp
ret
mov
test
mov
test
sbb
scas
cmp
xchg
mov
es
jno
nop
sbb
pop
pop
adc
sub
shrb
rcr
sbb
cmpsl
mov
clc
xor
adc
testb
aam
or
ret
cltd
adc
push
mov
fldt
movsb
adc
pop
dec
jp
xlat
and
call
int3
jp
les
push
fldenv
in
imull
jecxz
fisttpll
and
mov
int
cmpsl
out
jae
inc
stc
push
adc
imul
and
xchg
cmp
pusha
sbb
adc
hlt
ja
or
mov
jp
shl
pop
dec
pop
ret
add
test
xchg
loopne
push
aas
add
outsl
stos
or
sbb
aad
addr16
push
cmpb
xor
jae
adc
push
bnd
cwtl
bnd
push
xor
pop
mov
jmp
call
dec
mov
push
fmuls
and
daa
jbe
cmp
jns
mov
xchg
sbb
scas
jne
fdivrp
cwtl
fiaddl
pushf
imul
call
clc
jp
sti
xorb
repnz
rolb
cmp
in
enter
jg
ljmp
lds
push
nop
loopne
and
orl
cmp
dec
mov
negb
dec
push
xchg
mov
fcmovnbe
fidivrs
mov
aam
push
loop
je
rcll
mov
jg
mov
js
inc
hlt
cmp
clc
movsb
leave
negl
mov
adcb
and
sbb
loop
xlat
aas
mov
inc
pop
pop
sub
ja
ret
push
shrd
add
and
pop
adcl
inc
cs
idiv
shl
sub
add
pop
popf
mov
repz
jp
sub
dec
pop
lahf
rcrl
xchg
xor
out
push
jns
lret
enter
push
add
add
cwtl
push
or
icebp
and
or
mov
or
ja
cld
and
or
jnp
adcl
shrl
cmp
lret
aas
imul
dec
insb
fwait
loopne
int
mov
or
das
jg
daa
cmp
and
jno
push
sbb
adc
pop
aam
call
test
dec
into
add
addr16
sysret
popa
jle
push
movhps
xchg
fsubr
test
mul
cmpb
sub
sub
inc
aad
int
fs
fldenv
xor
add
outsl
inc
insl
bound
or
lds
lods
adc
cwtl
sti
mov
jmp
and
es
jo
outsl
dec
pop
insb
imul
les
and
mov
push
popa
aas
add
adc
test
cmp
sbb
fiaddl
mov
cltd
in
xor
sbb
inc
testb
insb
out
mov
pop
fwait
dec
sahf
and
repnz
or
mov
sub
mov
push
repnz
xor
adc
aaa
xchg
push
jle
ja
repnz
mov
stos
mov
xchg
cmp
mov
hlt
cli
add
insb
outsl
cmp
sbb
inc
fildl
jecxz
in
xor
out
or
enter
dec
sbb
dec
pop
cli
sub
and
dec
adc
into
inc
mov
fcmovb
jecxz
sub
cltd
push
lods
jae
mov
cmp
xlat
cld
int
push
sbb
fwait
cmp
jp
xchg
mov
xor
xchg
inc
inc
push
inc
add
and
jbe
mov
rcr
xlat
aad
xor
imul
dec
bound
cltd
adc
pushf
sbb
dec
outsl
andl
scas
and
nop
xchg
lahf
mov
push
mov
std
cs
or
pusha
pop
pushf
rcr
arpl
dec
fs
mov
pop
sub
sub
jno
inc
xchg
inc
movsl
pop
sti
insb
nop
mov
nop
jno
aad
scas
or
mov
sbb
and
mov
push
std
xor
mov
push
push
sub
pop
inc
sub
idivb
je
mov
insl
push
jmp
ficompl
xchg
jae
mov
mov
pop
jno
mov
cwtl
mov
out
fistl
leave
xor
dec
in
xlat
outsb
xor
push
and
add
stos
cmp
ret
inc
adc
std
push
daa
sub
sbb
and
xor
stc
adc
add
cmp
push
push
scas
push
inc
xcrypt-ecb
mov
test
loopne
fcoml
sarl
popf
insl
imul
jne
ret
jno
fisubrl
lahf
fwait
gs
iret
imulb
push
jbe
jg
sbb
stos
push
mov
insl
or
mov
outsl
shl
xchg
loope
mov
push
rolb
iret
das
jl
in
pop
xchg
pop
ret
lcall
sbb
dec
or
fwait
or
jmp
dec
dec
inc
push
xchg
inc
in
jo
dec
or
pop
loop
loop
les
push
mov
jge
push
bound
insb
je
and
push
icebp
sub
loopne
lods
inc
js
fsubrl
leave
xor
aad
in
jmp
inc
nop
cwtl
data16
les
mov
add
push
lahf
ret
add
pop
xchg
jno
jo
mov
mov
pushl
hlt
cwtl
cmp
xchg
mov
fldt
and
and
jg
adc
stos
in
cmpsl
dec
mov
mov
cld
pop
sbb
mov
add
divb
jle
sbb
or
fcomps
adc
jnp
mov
xchg
jecxz
icebp
inc
fadd
test
xor
xchg
not
pop
and
sub
mov
sbb
pop
enter
fwait
inc
jne
pop
pop
pop
mov
jl
addr16
adc
call
or
fucom
inc
xor
add
std
dec
ret
in
sbb
sbb
xor
mov
jnp
mov
mov
mov
int
xor
imul
xchg
jns
scas
mov
test
add
xchg
and
inc
aaa
mov
mov
fisubs
push
or
sub
in
das
int3
dec
repnz
imul
out
repz
mov
pop
add
mov
aaa
mov
fwait
cmp
mov
add
pop
rcr
loop
sti
mov
sahf
jl
call
lock
push
cmpsb
inc
jne
and
push
xor
cs
lcall
sbb
jge
js
gs
loop
dec
cmp
adc
int3
mov
pop
cltd
and
fdivrp
add
sub
aam
sbb
into
lds
mov
ss
and
xchg
push
dec
sbb
xchg
inc
add
xchg
fisubrl
inc
adc
push
mov
mov
push
dec
xor
jne
test
aas
pusha
mov
incl
pop
std
push
rcr
loop
mov
and
xor
je
lahf
dec
cmp
inc
pop
pop
jae
mov
and
ds
ret
rolb
jns
arpl
xchg
add
push
inc
mulb
push
push
das
scas
test
mov
lcall
xchg
das
subb
inc
xchg
push
push
test
pop
sub
mov
cmpsb
popf
or
sti
in
and
push
loopne
mov
shlb
jecxz
jecxz
xor
inc
sbb
pop
xchg
inc
sub
fsubs
mov
lds
xor
fsubrl
dec
dec
adc
add
mov
pop
and
mov
jl
ret
mov
test
sbb
ret
fsts
sbbb
adc
dec
vphaddbq
leave
and
ljmp
mov
mov
sahf
jne
mov
cmpsl
scas
xor
add
jg
mov
and
ss
sbb
dec
cmp
and
add
mov
imul
cmpsb
test
dec
fwait
loopne
adc
xchg
insl
add
mov
push
cmpsb
movsl
cld
jns
sbb
aad
ljmp
popf
fwait
pop
lret
add
dec
jmp
fs
rorb
ret
out
movsl
jle
dec
dec
test
test
nop
xlat
adc
ret
mov
inc
add
push
sti
xchg
fidivrs
mov
mov
sbb
mov
or
cmp
mov
and
mov
aam
and
push
mov
mov
negb
ret
inc
push
push
daa
inc
and
enter
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
addr16
adc
add
xor
and
push
movl
pop
test
mov
movsb
push
aam
les
data16
adc
add
xor
and
push
movl
pop
cs
mov
shll
pop
iret
cmp
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
or
fldenv
fnstsw
add
pop
and
jns
or
jae
jae
or
fldenv
mov
cltd
jecxz
repz
and
jns
or
arpl
jae
lcall
stc
fimull
repz
jl
dec
jns
pop
cmp
aas
dec
and
ljmp
adc
and
call
cs
push
push
sarl
insb
cltd
clts
jmp
movsl
data16
hlt
cmp
fildll
js
leave
inc
xchg
arpl
mov
jl
outsl
push
cmc
xchg
add
push
adc
xor
push
mov
cmpsl
sbb
inc
or
cmp
call
rorb
mov
dec
push
xchg
int3
xchg
jae
rcll
cs
push
add
mov
data16
push
add
add
dec
mov
sub
imul
call
rcrl
cld
mov
dec
pop
insl
arpl
testb
arpl
cmp
mov
mov
mov
cltd
jecxz
ljmp
imul
sbb
jae
out
movsb
testb
scas
mov
scas
int3
repz
add
push
pop
inc
fs
adc
repnz
int3
jmp
shll
inc
or
xor
inc
data16
pop
pop
push
out
ljmp
mov
rcrl
add
pop
and
jns
or
arpl
jae
or
fldenv
mov
cltd
jecxz
repz
and
jns
or
arpl
jae
or
int3
sbb
shrb
dec
mov
loope
ss
and
popf
iret
xor
aas
mov
fcomps
pop
push
fs
sbb
cwtl
xchg
pop
pop
sub
adc
cmp
test
test
mov
movsb
adc
add
add
jge
jmp
fmuls
incl
adc
popf
pop
icebp
sbbb
xchg
fnstenv
mov
sbb
into
add
stos
adc
jmp
adc
repz
mov
loop
lret
inc
jno
cli
test
fcmovne
push
incb
popa
jge
test
add
dec
inc
adc
or
lret
xchg
aam
int3
scas
movsb
push
xor
add
xchg
pop
push
mov
or
lahf
insl
stc
lds
jecxz
or
mov
int
jge
add
mov
lcall
add
clc
xor
jp
mov
ss
mov
sbb
jg
mov
cmp
std
mov
add
cmpsl
inc
loop
mov
out
lcall
xchg
aaa
and
jmp
pop
aad
cmp
add
outsl
dec
mov
xorl
popf
sub
push
test
push
xchg
jnp
or
scas
pushf
cltd
nop
mov
mov
nop
mov
fcompl
and
std
aas
add
jl
jns
push
outsb
xchg
dec
xor
scas
pop
mov
and
adc
jo
or
dec
shl
cltd
stos
xchg
xchg
mov
std
mov
insb
sbb
movsl
inc
mov
jmp
mov
dec
int3
xlat
test
testl
sarl
roll
mov
fwait
pop
stc
orb
cmpsb
cmp
mov
ja
incl
xlat
cld
popf
cld
sahf
insl
adc
jecxz
mov
mov
xor
mov
or
push
scas
mov
mov
sub
dec
fisttps
cli
xlat
mov
in
pop
rcrl
lock
dec
inc
lcall
pop
repz
cmp
ds
jnp
scas
sbb
sbb
inc
aaa
push
cltd
fstps
ret
push
inc
dec
mov
idivl
psllw
insl
ficoml
out
xchg
jnp
xor
xlat
out
fucomi
int
add
fbld
aaa
mov
out
add
cmp
xor
cmp
scas
xchg
out
and
mov
and
stos
in
pop
dec
fadds
lds
add
fsubr
out
shrl
cmp
out
adc
lock
ljmp
stos
addr16
fistpl
dec
stos
xchg
jmp
shll
test
addb
scas
insl
add
mov
bound
fisubs
lods
dec
hlt
fistl
push
sbb
adc
test
fidivl
inc
xor
cmc
andb
arpl
ret
in
push
jl
or
sub
aam
jmp
mov
ret
in
fistl
loop
test
sub
test
mov
lea
ret
inc
jb
fwait
dec
fistps
mov
in
cmp
gs
ljmp
hlt
xchg
rol
shl
lods
xchg
out
popl
push
pop
insl
sbb
and
add
xchg
and
fmull
gs
xchg
cmp
fistpll
into
adc
cmc
push
leave
das
push
inc
push
pop
cmc
or
lock
or
addr16
nop
mov
xchg
out
mov
dec
sarb
lcall
mov
cmp
inc
lret
jne
add
mov
xchg
jbe
sub
fcoml
add
xor
mov
test
mov
mov
sbb
int3
sahf
inc
stc
jmp
mov
aam
aam
aad
add
sbb
xchg
adc
imul
jno
rcrb
imul
lret
and
ret
mov
cli
ficomps
or
ljmp
lret
pushf
mov
loopne
cwtl
inc
popa
bound
mov
push
or
xor
add
mov
rolb
mov
xor
fidivs
dec
arpl
sbb
sarl
xor
stos
dec
rcrb
adc
hlt
fwait
pop
mov
and
jl
hlt
in
std
out
jnp
mov
sar
sbb
fxch
cli
and
rcrb
dec
inc
and
fidivs
xchg
pop
lahf
dec
cmp
repz
add
fwait
rclb
xchg
addr16
js
gs
aad
xchg
cmc
insb
xchg
dec
lahf
lret
ja
movsl
or
dec
push
movsl
mov
xchg
pusha
jnp
mov
jnp
sub
call
inc
jmp
outsl
mov
xchg
jne
jno
daa
lods
outsb
into
outsl
adc
popf
repnz
jg
push
fs
scas
icebp
pop
in
jl
fwait
push
xor
cmp
and
dec
xor
scas
lcall
stos
pop
mov
sti
scas
ljmp
inc
adc
js
and
mov
insl
xorl
dec
out
and
test
lods
xchg
xor
flds
push
mov
push
xchg
pop
rorl
cmp
jns
pop
mov
mov
and
mov
loope
sbb
or
pop
jecxz
mov
xor
sbb
stos
int
xchg
inc
lods
mov
leave
int3
jecxz
std
or
pop
and
mov
es
sub
mov
mov
adc
test
fwait
cmpsb
leave
mov
lcall
ret
dec
sar
fdivrp
scas
stos
jl
fcom
nop
in
jecxz
mov
mov
jmp
jne
mov
jae
dec
fcmovnbe
mov
xor
xor
test
in
add
mov
pop
sub
push
loope
inc
mov
and
xor
xor
push
xchg
cmp
aam
inc
int3
data16
cmpsl
test
or
fcmovnb
adc
inc
arpl
dec
push
hlt
pop
adc
xchg
xchg
cwtl
mov
in
loop
pop
sub
cld
ret
mov
mov
jg
and
inc
push
xor
sahf
mov
push
mov
incl
imul
dec
add
dec
mov
sub
pop
xchg
sub
sbb
icebp
lret
mov
add
inc
mov
movsl
pop
mov
adc
xchg
mov
mov
iret
int
xchg
push
and
std
xchg
mov
sub
pop
lret
jle
mov
movsl
and
jle
and
push
pop
jae
orb
inc
movsl
cwtl
pop
cltd
sbbl
xchg
lds
sbb
dec
mov
mov
or
and
adc
fists
dec
pop
daa
lock
mov
nop
xor
sbb
lock
loope
jmp
fcomp
popa
xchg
sub
fldt
jns
adc
dec
pop
xchg
mov
stos
in
inc
arpl
mov
mov
sahf
xchg
sub
xchg
arpl
mov
inc
hlt
pop
mov
adc
push
xchg
jae
addr16
test
pop
dec
sbb
lret
lret
mov
sbb
mov
ret
pop
test
lods
xchg
rcrl
cmp
pop
inc
les
addr16
out
scas
pop
jmp
nop
fs
std
rorb
mov
xor
imul
unpckhps
adc
xchg
js
aaa
mov
rclb
imul
push
outsb
jno
adc
mov
bnd
leave
jg
scas
enter
lret
hlt
inc
cwtl
std
or
xor
out
pushaw
xchg
xchg
xor
push
add
and
and
inc
xlat
stos
mov
nop
xchg
aam
cld
push
inc
inc
inc
push
ret
mov
test
aam
jb
jnp
mov
dec
inc
cwtl
push
xchg
pop
das
push
sbb
cs
movsl
cvtpi2ps
sar
jmp
jns
jmp
mov
push
dec
add
insl
dec
fcmovbe
push
fs
pop
mov
and
push
mul
popf
sbb
cmp
add
dec
push
lret
fs
ja
popa
rorl
lock
dec
push
jge
add
xchg
jl
rorb
cmp
pop
out
xchg
fwait
movsb
sbb
lds
cs
jns
movsb
test
outsl
xor
es
ret
mov
cmp
xchg
xchg
out
push
push
push
jae
arpl
jne
cltd
sub
aas
pop
mov
push
mull
stos
lcall
repnz
dec
mov
mov
xor
aas
jg
jl
push
and
lds
sbbl
in
or
jg
dec
shll
movsl
pop
jbe
mov
mov
into
sub
pop
pop
ret
clc
ds
into
in
filds
ss
sub
push
stos
nop
test
cmpsl
mov
mov
push
push
mov
sub
ficoml
imul
es
stc
out
divl
sub
stos
shrb
push
mov
adc
add
lcall
mov
loop
dec
cltd
negb
and
mov
inc
push
lahf
mov
sti
push
in
push
in
pop
imul
adcl
mov
stos
loop
jp
dec
movsb
lods
cmpsl
jae
mov
jge
fwait
lea
pusha
mov
xchg
fs
pop
dec
push
clc
ds
addr16
cmp
insb
mov
aam
cwtl
inc
ret
loop
cmp
sti
mov
or
sarl
pop
sbb
mov
loop
pop
pop
mov
xchg
xchg
mov
lods
stc
or
ss
cld
jo
jns
inc
cltd
xchg
pop
les
push
dec
push
aaa
aas
pop
popa
sti
clc
stos
in
test
or
loopne
push
inc
dec
je
pusha
ret
add
sub
aaa
mov
push
cmp
movsl
inc
push
and
mov
xor
cmpsb
xchg
gs
lret
pop
mov
or
dec
jmp
mov
jnp
stos
pop
mov
adc
xchg
les
pop
jmp
sub
cmp
stos
add
daa
andl
xchg
sub
in
lods
pusha
mov
lcall
jge
into
xlat
adc
inc
sub
lahf
add
sbb
inc
int
pop
shll
cwtl
cli
out
clc
lds
aas
jp
xor
xchg
mov
loope,pn
xor
mov
imul
int3
push
mov
mov
xchg
jp
pop
outsl
insl
xor
icebp
cmovle
mov
or
enter
pop
cwtl
mov
jnp
mov
adc
pusha
xor
addl
inc
jp
pop
pop
out
ja
cmp
lahf
data16
repz
mov
dec
ret
push
xchg
enter
push
jnp
push
cmpsl
and
inc
adc
xchg
mov
cld
scas
dec
pop
sbb
inc
jmp
push
sub
mov
mov
sbb
mov
adc
sub
test
jne
sub
xor
lahf
add
xchg
cli
cmp
pop
dec
lds
dec
lods
xorl
fnstcw
out
loope
jnp
call
push
push
fcoml
push
or
sbb
outsl
xchg
pop
test
xchg
test
aas
add
out
inc
iret
in
xor
dec
fsubl
push
in
mov
push
repz
mov
sub
dec
imul
push
fdivs
mov
dec
sub
movsb
sbb
lret
mov
scas
in
adc
jecxz
aas
stc
out
cmp
arpl
ret
pop
shrb
sbb
sbb
mov
scas
xchg
lret
clc
cs
pop
mov
mov
iret
lcall
jbe
push
test
mov
sub
sbb
daa
idivl
rcrl
xchg
jp
imul
es
js
loop
test
test
pop
js
add
mov
xchg
add
shlb
dec
jmp
mov
and
sub
and
cmc
rolb
pop
xor
sub
cmp
xchg
push
mov
out
mov
out
or
das
fxch
scas
push
sahf
into
jp
insb
xchg
mov
out
fdivs
mov
mov
sub
jp
push
in
dec
scas
or
imulb
cld
sbb
addr16
gs
cmpb
imul
loop
mov
push
sub
push
inc
iret
nop
push
jns
insl
lock
mov
sub
or
and
sar
jle
insb
inc
es
mov
inc
lahf
add
imul
inc
cs
xor
sbb
js
xchg
aas
sub
or
std
adc
and
jne
je
adc
dec
xchg
jno
xor
lcall
sub
xchg
lcall
sbb
pop
cmpsb
insb
push
insl
in
jl
sbb
push
jae
mov
cmp
xor
mov
out
sub
int3
mov
mov
inc
push
cmp
pop
sbb
cmpsl
loop
jle
mov
push
fcomip
aaa
mov
lret
lods
dec
inc
cwtl
xlat
pop
push
adc
xchg
jne
inc
jg
sbb
mov
fmulp
add
and
les
mov
add
leave
mov
inc
aas
jge
pop
popf
mov
jl
fwait
lea
xchg
cli
mov
push
idivl
dec
repz
xlat
and
sbb
pop
in
sub
leave
loop
inc
fwait
mov
push
cmp
clc
and
xlat
outsb
or
movzwl
or
shll
sahf
ficomps
pop
jne
sbb
sarl
add
or
and
jns,pt
int
xchg
xchg
or
in
inc
aam
jecxz
aam
jl
mov
sti
scas
xchg
add
leave
or
fdivl
lds
imul
push
sub
inc
cmp
sub
subl
movzwl
cltd
add
jb,pt
gs
ljmp
mov
push
inc
jnp
mov
dec
test
test
sbb
push
pop
dec
hlt
and
mov
mov
rorl
push
inc
in
pusha
mov
je
cmpb
push
push
fidivrs
inc
jmp
mov
pop
sbb
add
add
idivb
loopne
sbb
mov
cli
imul
mov
adc
mov
loope
cli
cld
inc
sub
pusha
mov
sub
or
cmp
adc
push
shrb
pusha
in
lret
inc
nop
or
xor
sub
iret
dec
lds
push
jmp
lret
popw
jg
lock
pop
daa
xchg
shll
mov
and
test
jl
clc
cmp
mov
xor
insl
mov
mov
insb
push
fwait
push
or
mov
xor
pop
cmp
stos
xor
ja
cmpsb
mov
pusha
push
or
cltd
inc
loopne
addr16
xchg
test
sbb
dec
push
xchg
repnz
cmpb
cmc
pop
leave
or
jge
inc
dec
loope
in
cmp
int3
test
mov
sub
dec
dec
addr16
arpl
push
cmpl
xchg
lea
cmp
ret
enter
fistpll
mov
push
leave
inc
icebp
inc
pop
and
das
mov
dec
rclb
sbb
pop
cltd
nop
jle
push
add
out
or
jo
cwtl
scas
xor
pop
test
pop
stc
out
gs
out
lods
das
sub
cmp
xlat
subb
xor
dec
mov
sarl
or
mov
or
movsb
and
sbb
pop
decl
jne
xor
sub
std
add
xchg
int3
mov
psubq
lods
out
push
push
cli
cmp
xor
int
adc
lods
xor
loope
out
fistpll
subb
movsb
xor
xor
cmpsb
fdivl
push
scas
push
mov
mov
push
sbb
imul
rcll
cmp
cmp
outsb
sbb
jns
insl
push
cli
andl
loopne
rcrl
xchg
xchg
xor
pop
mov
ret
js
and
mov
scas
jo
enter
mov
push
mull
aas
and
into
jns
push
bound
inc
fnstcw
xchg
fsub
inc
ss
xor
and
xchg
xlat
int
cmp
in
jae
mov
shl
ja
dec
ds
mov
pop
mov
out
ret
sub
rcr
mov
push
xchg
loope
xor
cs
mov
push
mul
test
sbb
into
rcrb
pusha
push
or
icebp
aam
and
adc
xchg
mov
in
mov
push
nop
pop
cmpsb
je
imul
add
pop
or
aaa
pop
cmpb
not
pushf
cwtl
arpl
mov
cmp
and
cld
cmp
push
mov
test
xchg
aam
mov
int3
dec
movsl
pop
inc
add
int3
mov
mov
bound
push
insb
outsl
jge
push
fimull
test
cmp
pop
stos
inc
pop
and
nop
enter
adc
mov
mov
sbb
mov
scas
xlat
dec
jecxz
sbb
mov
lock
xchg
imul
lret
push
inc
lea
test
pop
jp
push
xadd
add
mov
mov
push
scas
fadds
pop
cmpsl
sbb
cmp
mov
popa
or
clc
sbb
sbb
ds
xor
shr
icebp
or
scas
enter
mov
or
inc
push
jns
mov
sub
lret
jg
mov
scas
dec
pusha
fidivrs
les
scas
int3
or
mov
pushf
cli
and
pop
sub
mov
sub
pop
or
icebp
lods
sub
xor
xchg
lret
cmpsb
imul
dec
mov
in
jns
das
pop
lods
push
jns
out
mov
add
or
int3
aad
call
adc
push
mov
stc
pusha
iret
stc
daa
xor
insl
dec
xor
push
lcall
nop
mov
pop
cwtl
inc
stc
push
lds
mov
int3
and
dec
cmp
sbb
jo
sub
popa
lods
ffreep
test
adc
daa
pop
mov
jp
mov
xchg
out
outsb
xchg
test
and
cli
xchg
push
fisttpll
jmp
divl
in
cmc
adc
cmpsb
and
mov
xlat
in
fs
and
mov
rcl
lock
je
xchg
sbbl
xchg
out
std
ljmp
addr16
mov
or
fimuls
or
fs
int3
loopne
or
lods
push
sbb
out
xchg
sbb
icebp
jge
pop
add
das
or
out
pop
iret
cs
mov
or
xor
cltd
mov
scas
sub
mov
adc
into
push
adc
cmpsl
rcrb
fs
or
add
fdivrs
mov
sub
mov
jg
inc
dec
dec
fisubrl
push
outsl
daa
in
push
jbe
xchg
aaa
lret
jl
push
and
sub
mov
sub
xchg
cmp
out
pop
xchg
fildll
into
cmpsl
sbb
xlat
imul
movl
xchg
das
insb
mov
pop
inc
jecxz
cs
push
jae
xchg
pushf
mov
imul
fistpl
jb
fiadds
out
je
adc
xor
jnp
mov
lds
andl
std
js
icebp
test
add
into
lods
jle
nop
mov
cld
cltd
in
push
loope
jb
sahf
loope
aam
dec
mov
loop
jbe
insb
loop
xchg
jge
in
xchg
jno
sbb
sub
sbb
push
mov
xor
movsl
ret
popf
sti
add
andl
cwtl
in
sti
jns
addb
pop
inc
dec
xchg
andl
xor
insl
add
out
je
mov
sbb
push
lock
xor
sub
stos
int
sbb
or
and
mov
rcll
pop
mov
sub
jo
adc
inc
popa
stos
int3
or
or
push
mov
lea
jb
inc
dec
or
xor
push
popl
je
sub
cmp
into
pop
aad
aaa
call
movsl
fldenv
mov
lcall
addl
fstps
mov
cs
xor
cld
int3
loopne
adc
xchg
popa
addb
mov
jno
xchg
jnp
lods
pop
lret
je
jl
enterw
jb
pop
pop
dec
jae
daa
xchg
xlat
mov
lock
leave
stos
cmpsl
loope
inc
clc
lcall
imul
int3
mov
aas
mov
lahf
mov
sbb
cwtl
cli
scas
lods
pusha
leave
pushf
mov
add
jne
stc
mov
fldcw
js
adc
movsl
arpl
insl
xor
data16
cmp
pop
mov
mov
pop
sub
daa
mov
xchg
sub
jne
lock
popf
adc
cmpb
and
lret
mov
push
mov
add
pop
mov
aad
arpl
sub
and
dec
icebp
dec
xchg
fwait
pop
jl
xor
fldcw
mov
cltd
jecxz
repz
and
jns
or
arpl
jae
or
fldenv
mov
cltd
jecxz
repz
and
jns
or
arpl
jae
or
fldenv
mov
cltd
jecxz
repz
and
jns
or
arpl
jno
or
fldenv
mov
sbb
jae
cld
mov
xrelease
push
xor
pushf
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
and
push
jp
or
push
push
xchg
cli
xchg
mov
lcall
and
push
add
or
jb
inc
cmp
mov
cli
xchg
lret
repnz
cmpb
clc
add
jb
inc
cmp
or
mov
out
xchg
loope
call
shlb
push
insl
push
adc
movsl
sbb
lea
mov
iret
and
mov
mov
fs
in
and
lcall
dec
scas
dec
outsl
addl
jne
push
stos
xchg
inc
xorl
jle
out
pop
mov
pushf
pop
fimull
inc
cli
outsl
lcall
pop
xchg
aaa
xor
cmc
arpl
jb
int
lods
lret
jns
fisubrs
add
jne
lcall
ret
dec
xchg
in
mulb
addr16
shr
pop
pop
in
jge
push
iret
repnz
mov
int
fs
cmc
pop
repz
aaa
stc
xlat
fidivs
pop
test
rcll
and
push
jp
out
bound
sub
push
or
inc
mov
or
ret
repnz
ret
and
xor
imul
gs
je
pop
or
add
mov
clc
xor
ret
rcr
pop
and
xor
add
pusha
arpl
jg
fbstp
mov
ljmp
cltd
ret
cmpsl
sti
andb
ss
or
ja
bound
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
jnp
mov
push
lds
cwtl
xchg
mov
sbb
push
pop
adc
jae
sbb
ficoms
popa
lret
dec
iret
cmp
and
rorb
test
push
loop
icebp
das
outsb
dec
sub
call
mov
inc
and
jns
or
and
stc
and
add
lcall
js
cmc
repz
mov
sub
add
outsl
cmc
fstl
call
xor
cwtl
push
test
loopne
xor
pop
inc
xor
outsl
pop
fs
mov
and
inc
add
mov
mov
sbb
leave
repz
mov
lret
sub
gs
lods
jbe
iret
aad
cmp
popa
outsb
or
fsin
xor
and
pop
sti
js
or
aad
andl
inc
iret
cltd
fcmovnu
mov
mov
push
icebp
and
cmp
push
leave
cld
popa
lret
pop
push
cvtps2pi
shll
dec
sar
sahf
push
stos
and
aas
rcrl
ret
je
aam
daa
sbb
adc
daa
mov
dec
lods
xchg
cs
or
jp
lret
lret
ljmp
cmc
out
int
subl
adc
lds
mov
push
hlt
ss
lock
mov
out
mov
ret
pop
stos
xor
push
add
popf
sbb
mov
out
iret
ret
cmp
ljmp
ds
js
pop
or
stos
mov
cmp
fistl
in
divl
dec
jmp
test
daa
fwait
jns
inc
push
fst
popa
divl
lds
xor
sbb
jp
dec
nop
addr16
or
fisttpl
rorb
inc
mov
cmpsl
jp
fdiv
add
sahf
xchg
pop
add
jo
pop
add
push
enter
lds
lret
icebp
inc
mov
cmc
sbb
in
sub
add
icebp
fwait
sbb
movsl
or
inc
std
cmp
addb
mov
fcomip
cmp
loope
add
daa
mov
rorb
negb
outsl
ret
lods
jmp
xor
sbb
test
or
popa
int
mov
and
shr
mov
cwtl
jmp
xchg
xchg
outsb
jmp
xor
mov
fbstp
mov
rcrb
lcall
imul
cmc
cmpl
pop
mov
stos
push
sbb
data16
shr
jg
popf
jno
rcll
in
add
inc
pop
popa
movsl
sbb
gs
xor
pop
mov
mov
mov
test
in
sbb
mov
imulb
divl
and
push
push
in
stc
xchg
lds
xchg
dec
pushf
xor
subb
test
xor
dec
inc
mov
repnz
jne
adc
cmp
fs
push
cmp
arpl
pop
out
xchg
fwait
xor
adcb
testl
sbbl
dec
add
inc
cs
or
jne
outsb
mov
dec
dec
les
jle
sub
loop
mov
clc
lds
sbb
mov
imul
cmc
jns
adc
repz
call
add
mov
push
sub
aaa
adc
xchg
hlt
mov
test
xor
dec
push
popf
dec
fmuls
cwtl
inc
mov
add
mov
mov
add
test
dec
mov
dec
enter
lods
or
aas
frstor
imul
pop
adc
jge
data16
cmpsb
sahf
int
push
sbb
xor
xlat
jmp
and
pushf
add
jo
lds
pxor
cli
fldcw
lds
xchg
repnz
lahf
jns
cld
mov
jo
xchg
xor
outsl
or
xchg
setb
orl
adc
test
push
xchg
pop
xor
or
cmp
pop
pop
lahf
cmp
xlat
imul
lret
lods
outsb
pusha
out
cmp
sbb
pusha
hlt
fimuls
mov
jne
test
push
out
adc
inc
into
add
daa
dec
lret
and
mov
cmp
mov
sbb
cmp
and
mov
xor
xor
jnp
xchg
negl
jge
daa
out
sbb
mov
pop
subb
jae
dec
sub
pop
out
or
mov
xchg
iret
sbb
inc
xchg
dec
mov
je
xor
and
fldt
movsb
inc
jne
mov
ficomps
push
jo
rclb
dec
popf
hlt
or
sbb
inc
sbb
add
stos
call
jns
adc
push
ja
xor
sahf
loopne
cmp
push
ljmp
and
ret
test
test
xchg
shlb
cmpsb
and
pop
xor
xorl
imul
dec
xorl
into
out
subl
adc
push
cs
dec
mov
push
cs
addb
mov
out
push
stos
mov
out
push
pop
mov
cmpb
lret
leave
add
dec
insl
cmp
add
sub
test
hlt
in
jle
scas
dec
stos
scas
pop
jg
and
inc
test
mov
mov
pop
mov
imul
sub
xchg
ret
dec
out
arpl
push
add
loop
pop
inc
mov
mov
nop
or
ucomiss
add
push
and
aas
sbb
jns
es
sahf
or
mov
out
mov
test
sbb
dec
jo
lock
or
dec
ret
movsl
out
sbb
jb
sub
fwait
cmp
cmpl
pop
jecxz
inc
mov
fcompl
push
aaa
jnp
into
mov
in
pop
jns
push
mov
inc
add
pop
pop
xor
loope
addb
jg
aad
push
sub
fstl
adc
jge
dec
cmp
or
add
xchg
or
add
push
pop
and
xchg
in
xchg
test
pusha
add
adc
jle
jne
jg
lret
ss
sbb
cmp
imul
xchg
mov
mov
add
pop
scas
push
and
inc
mov
sub
jb
jge
addb
pushw
out
and
rolb
push
or
pop
cmpsb
inc
ljmp
ss
pop
outsb
pop
add
mov
adc
int
mov
add
add
enter
mov
cmc
jl
push
cmp
in
sbb
pop
ss
pop
add
or
xchg
andb
fldcw
hlt
mov
sbb
out
sub
in
or
pop
out
dec
sbb
jmp
xlat
imul
js
push
mov
xchg
aad
stos
mov
mov
cmp
aad
incl
push
push
int
cmp
lahf
xchg
ret
fwait
add
xchg
int3
std
gs
inc
out
push
adc
fwait
test
push
rep
dec
xor
clc
rclb
pop
loope
in
lahf
jecxz
adc
sahf
cmpb
iret
aad
fcomps
mov
int
mov
shll
popa
sbb
outsb
mov
stc
jbe
jnp
enter
lods
or
les
cmp
xchg
ja
cld
test
je
imul
sbb
dec
add
xchg
cli
xchg
scas
daa
cmc
flds
dec
add
jb
xor
jae
xchg
cwtl
shrl
xchg
test
iret
jnp
jl
shll
push
hlt
cmpsb
sub
fstpt
hlt
jl
dec
lods
test
adc
jge
xchg
add
mov
aad
cld
inc
push
decb
push
scas
test
jmp
pop
in
inc
in
jge
jnp
add
movb
dec
mov
shl
pusha
jp
lahf
dec
adc
jle
data16
loope
shrb
and
icebp
fwait
ss
dec
cmp
or
xchg
int3
sbb
lods
or
sbb
xchg
add
mov
pusha
cld
fildl
xchg
adc
loopne
aam
push
dec
fnstenv
sub
pop
cwtl
push
in
push
xor
fists
sahf
push
inc
pop
xchg
leave
push
cltd
xor
sahf
roll
lods
add
enter
xchg
push
cli
iret
push
daa
dec
add
add
fsubrl
pusha
sbb
pop
mov
mov
test
insb
or
pop
push
icebp
push
xchg
enter
adc
xor
pop
iret
dec
int3
add
mov
add
pop
mov
cs
adc
push
sbbb
xchg
sbb
jnp
and
inc
ja
jae
jp
add
shlb
xor
repz
daa
movsl
scas
mov
dec
push
pop
pop
and
imul
or
mov
bound
mov
sbb
in
rorb
test
mov
fcmovb
mov
bnd
xchg
mov
xor
push
add
aas
or
add
mov
add
sarb
mov
inc
ret
outsb
aaa
cmpsl
mov
shrb
jg
enter
or
data16
repnz
mov
pop
push
jmp
push
mov
add
fsubl
pop
sahf
add
push
ja
mov
jb
push
clc
adc
mov
xchg
insl
gs
pop
clc
push
movsl
sbb
xchg
aaa
or
int
or
into
dec
xor
repnz
dec
and
cmovnp
lods
mov
xchg
dec
test
loopne
xchg
push
pop
mov
dec
divl
call
gs
outsb
iret
pop
addr16
dec
repnz
pop
imul
add
sub
pop
andl
jg
int3
cmc
daa
into
push
sarb
mov
xchg
lret
decl
xchg
mov
cltd
sti
mov
mov
outsb
shrb
jmp
mov
jo
cmp
fistpll
in
nop
repz
insb
push
push
xor
ljmp
add
movsl
je
inc
jl
xchg
xor
out
in
insl
mov
cmpsb
mov
daa
push
jmp
mov
ja
pushf
and
pop
loopne
xchg
sbb
int3
jge
or
test
xchg
out
lret
inc
sub
test
gs
out
mov
or
shl
call
xlat
aam
mov
cld
fcompl
outsb
loope
mov
test
les
rcll
sub
stc
jb
lahf
xchg
mov
mov
pop
mov
mov
mov
imul
fwait
cmp
push
lcall
xchg
out
dec
pop
popa
jo
cmpsl
sbb
scas
lcall
ljmp
push
cmp
fsubp
xchg
adc
pop
das
add
adc
ret
imul
sbb
mov
jae
insl
sub
into
sbb
mov
faddl
add
mov
add
clc
into
or
jle
insb
movsb
sbb
pushl
jge
mov
imul
testl
je
sub
push
outsb
cmpsl
add
pop
xchg
je
add
dec
cltd
insl
jecxz
mov
ds
test
jecxz
aas
fwait
push
cli
xchg
cmpsl
pop
or
cwtl
mov
cltd
sti
pop
jp
sbb
or
push
add
jge
dec
out
fs
shl
stc
or
ret
add
aas
mov
mov
lcall
ds
ret
xchg
or
jmp
mov
movsl
mov
mov
scas
std
mov
dec
rol
jle
sub
aas
mov
das
xchg
pop
bswap
cs
clc
mov
jnp
fdivp
and
lods
ja
xchg
ss
imulb
xchg
jne
xchg
xchg
jo
pushf
or
add
mov
sahf
mov
jns
and
aam
sbb
dec
fwait
xchg
pop
js
pop
rolb
mov
out
popl
push
in
popl
inc
lea
xor
adc
out
sub
pop
movsl
bound
pop
lock
rcll
and
xchg
jg
repnz
call
and
mov
xor
push
xchg
sarl
mov
push
loop
sahf
je
sbbb
out
push
xchg
in
fs
out
or
leave
fisubrs
les
xor
mov
jns
imul
push
inc
popf
imul
arpl
leave
lret
out
or
xor
jecxz
pop
xchg
adc
in
fists
inc
es
dec
arpl
lret
inc
xchg
in
jecxz
or
sub
jnp
clc
daa
jb
push
sub
out
das
outsb
pop
jnp
fcoml
or
cli
mov
mov
in
fs
inc
stos
lds
ja
inc
nop
adc
sub
push
cmc
sub
mov
test
rcrb
sbb
ljmp
out
sub
ficompl
and
inc
xlat
cmc
fdivl
out
out
mov
mov
mov
or
push
test
dec
bound
clc
pop
dec
das
inc
insl
sahf
je
cmp
sub
pop
dec
je
pushf
add
mov
lahf
mov
fdivr
repnz
ss
cmc
nop
outsl
sti
sub
sub
mov
xorb
sbb
gs
enter
cltd
rcll
xor
lds
lods
ljmp
pushf
mov
leave
leave
jns
int
jae
pop
lcall
int3
leave
adc
adc
or
xchg
lock
cld
jmp
movsl
mov
or
or
jns
movsl
pop
sub
pop
adc
popa
out
and
or
hlt
sbb
fiadds
jae
add
lahf
jp
les
mov
ficomps
aad
shrl
movswl
aad
ss
hlt
clc
fcmovbe
jns
jmp
in
lds
xchg
sub
inc
scas
add
and
xor
popf
xchg
sbb
nop
mov
jp
test
in
notl
arpl
push
cmp
sahf
jle
cld
mov
addr16
rcrb
in
pop
mov
dec
xlat
jle
or
clc
scas
scas
mov
sub
lds
test
sbb
jns
int3
jns
fildll
push
in
lock
loop
bound
add
jae
pop
or
cltd
in
sarl
cwtl
inc
dec
sbb
sahf
fildll
out
std
and
push
cli
ljmp
pop
lret
mov
xchg
push
mov
pop
lods
adc
inc
inc
lea
aaa
mov
shlb
sbb
popa
jp
push
fidivl
out
icebp
xlat
aam
ret
repnz
cmp
xlat
stos
cmp
mov
mov
gs
popa
xor
pop
pop
sti
enter
or
data16
faddl
arpl
rcrb
add
mov
ljmp
mov
push
out
adc
shl
adc
std
xlat
in
outsl
and
adc
cmpb
jl
loopne
mov
punpckhdq
pop
cld
sbb
xor
mov
scas
jnp
jns
xchg
lret
scas
mov
mov
shrb
xor
adc
dec
xlat
lea
mov
inc
xchg
adc
mov
mov
adc
inc
mov
mov
jbe
xor
xchg
movsl
nop
shrb
repnz
call
cmpsl
cwtl
nop
loopne
stos
and
lahf
fiaddl
cltd
xchg
add
outsb
lods
push
cld
adc
inc
mov
cld
cmp
popa
lret
addb
push
xchg
jg
mov
xor
out
and
adcb
ja
es
cmp
jl
shlb
jmp
push
call
rcrl
fwait
mov
sub
jge
push
adc
or
test
mov
adc
or
pop
stos
pop
xor
sahf
and
shrl
adc
aam
lahf
pop
int
fsubrp
push
das
mov
cwtl
jmp
incb
mov
dec
xor
arpl
les
ljmp
jnp
cmp
call
nop
dec
scas
orl
xor
hlt
mov
pop
mov
mov
cmp
xchg
std
rorl
dec
lret
std
dec
bound
out
adc
xchg
push
xchg
call
inc
stos
sub
or
sub
and
dec
mov
int3
pop
lcall
sarb
jp
enter
in
add
outsb
gs
mov
mov
loopne
cltd
jb
test
mov
sub
ljmp
fmull
cmp
negb
xor
loopne
xchg
lods
ljmp
mov
cltd
fistpll
and
cld
out
jb
jmp
dec
test
mov
pop
pusha
mov
loop
dec
aam
pop
dec
dec
mov
push
test
jae
sbb
into
xor
enter
std
sbb
cmc
or
mov
in
xchg
fwait
sbb
mov
jnp
mov
out
scas
lods
fisubrs
pusha
loop
mov
insl
pop
dec
add
inc
das
xchg
faddp
shll
pop
sbb
hlt
rcl
es
xor
mov
dec
mov
pmulhuw
mov
pop
mov
cmp
nop
add
sub
mov
out
jbe
xor
or
jno
push
fcmovu
mov
test
lea
xchg
mov
rorb
lock
add
cmpsb
mov
aam
adc
cwtl
push
loope
sub
repnz
lods
aam
add
daa
mov
jo
add
mov
xchg
mov
cmp
dec
add
fs
cmpsl
test
out
cmc
xor
cltd
in
adc
pop
or
cmp
int
inc
aas
xchg
xor
pop
stos
daa
insb
push
inc
adcb
scas
cmp
sbbl
xor
push
add
sbbl
xchg
lahf
jbe
mov
xchg
mov
in
pop
popf
out
push
test
out
dec
mov
int3
adc
add
mov
and
stc
pop
insl
mov
sub
das
sahf
bound
jmp
int
in
mov
iret
in
mov
jl
mov
mov
xor
into
popf
sub
int3
xchg
and
push
ss
scas
mov
insl
cmp
pop
dec
add
pusha
xor
xchg
push
add
cmc
jmp
addb
mov
in
icebp
popf
lods
push
mov
mov
aam
test
cmp
cmp
ret
sbb
add
mov
mov
add
scas
test
xchg
lock
push
jle
nop
daa
push
lea
jo
add
dec
xchg
mov
call
adc
dec
pop
or
aaa
jg
fisubrs
jle
movsb
sbb
push
lea
jge
mull
daa
inc
ss
repnz
iret
and
sti
lahf
or
jns
dec
and
xor
dec
loope
ds
sub
popa
mov
push
hlt
fimuls
lcall
sarl
jle
shlb
out
dec
fwait
icebp
jp
push
in
xchg
sbb
scas
fldt
xchg
xor
add
inc
aaa
test
gs
xchg
js
ja
in
mov
jecxz
aam
out
sub
dec
cmpsl
or
jecxz
sub
scas
mov
fldenv
xchg
mov
loop
push
ja
imulb
and
xchg
fwait
aas
mov
mov
inc
lds
cli
push
std
sarl
lret
pop
das
adc
cs
jno
and
repnz
shll
clc
cltd
xorl
pop
test
jmp
jnp
xlat
xchg
cmp
insl
xchg
add
sbb
xor
xchg
gs
data16
in
aas
push
fdivr
cmpsb
jo
in
ja
xchg
lret
or
ds
js
add
xchg
mov
mov
rcrl
push
adc
into
stos
insl
sbb
int3
xchg
dec
add
jbe
sbb
and
lods
test
xchg
lret
cmp
dec
cmpb
cs
mov
jae
or
cmp
push
imul
hlt
pop
inc
sahf
outsl
outsl
lods
icebp
cmp
lods
js
roll
push
cmp
rcr
add
enter
cld
mov
stos
jnp
or
aam
cmp
pop
push
pop
mov
cmpsb
inc
mov
rcr
sar
aad
pop
dec
rorl
pop
mov
test
mov
aas
mov
sub
jae
rcrl
sub
sub
lods
inc
cmp
lds
outsl
ja
xor
cltd
push
jge
inc
dec
pop
add
xchg
xchg
fs
pop
sbb
adc
aad
mov
pop
pop
out
loop
mov
fs
dec
cmp
ror
adc
mov
aad
sub
push
gs
jo
aam
lret
shll
xchg
dec
popf
cmpsl
inc
xor
pop
je
fsubs
outsb
loop
jbe
fcmovbe
xor
add
mov
push
xchg
push
or
popa
repz
fisttpll
into
icebp
push
lea
adc
lret
stc
mov
outsl
lods
in
mov
mov
adc
push
add
adc
inc
test
jg
add
pop
pminub
fidivl
inc
and
jecxz
jne
cwtl
fbstp
pushf
jnp
xchg
or
in
inc
pmaxub
sub
sub
mov
add
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
push
jp
or
jb
inc
cmp
mov
cli
xchg
mov
lcall
and
or
sbb
sub
push
lret
mov
cmp
mov
mov
stos
ret
pop
and
xor
add
or
jb
inc
mov
sbb
cli
in
push
or
cs
lret
jno
inc
push
push
sub
outsl
jle
mov
repz
ret
rcl
cmpsb
mov
xchg
xchg
imul
inc
inc
push
push
and
xor
add
adc
repz
in
rcl
mov
adcl
push
xor
jnp
das
add
adc
loope
shlb
out
in
hlt
in
out
sub
and
test
jbe
pop
add
adc
lock
js
test
jle
push
outsl
popa
and
jnp
fcmovu
jae
int3
mov
addr16
push
push
cmp
cmp
es
ljmp
arpl
stos
insb
inc
pushl
sub
mov
sub
lea
int3
pop
es
or
push
pop
and
int3
xor
or
icebp
negb
sub
cs
push
xchg
hlt
insb
xchg
out
mov
fsubrl
pop
adc
push
mov
rcll
mov
shr
out
out
jae
mov
outsb
lret
mov
sbb
or
ret
cs
loope
addl
push
and
ja
add
stos
adc
loope
icebp
sbb
int
ret
mov
not
adc
or
add
inc
adc
adcb
mov
div
aam
arpl
cwtl
xor
push
je
push
pusha
aas
fildl
adc
daa
mul
rol
adc
inc
and
and
sub
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
xchg
outsl
aam
mov
push
ja
mov
mov
push
aaa
ret
in
cmp
or
das
inc
cmp
scas
xchg
popf
mov
add
mov
dec
or
xchg
jbe
test
push
sbb
les
mov
inc
adc
scas
cmpl
int
lahf
add
adc
mov
and
outsb
jae
xchg
mov
dec
movsl
test
inc
nop
xor
jb
testl
fldt
jns
sub
sub
mov
jecxz
adc
fidivrs
scas
and
jb
mov
cmc
inc
outsb
insb
jo
xor
fdivrs
fildl
cwtl
sbb
adc
nop
es
popf
hlt
mul
adc
sub
inc
pop
imul
lret
cmp
popa
fwait
lea
push
pop
fs
int
sub
dec
mov
repz
inc
dec
mov
dec
ret
out
mov
out
je
cli
inc
sbb
mov
cli
xor
lret
jae
push
push
cltd
dec
cvtps2pi
jo
xchg
ljmp
adc
push
xchg
fldl
mov
add
negb
repz
out
dec
push
dec
jbe
cmc
cmpsl
lea
add
cs
cmp
mov
out
cld
xorl
xchg
in
mov
jae
or
cld
pop
stos
loop
pop
mov
adcl
movsl
movsl
mov
mov
jl
mov
xchg
lret
hlt
out
ljmp
and
sti
xchg
xchg
pop
sub
jno
dec
sub
dec
adc
das
sub
shlb
xor
lcall
mov
movsl
xor
int
fs
add
sbb
or
out
clc
mov
std
adc
pusha
xor
fstpt
push
push
cmc
out
fbld
xchg
neg
mov
inc
xchg
andb
je
push
cmc
jg
cs
in
stc
jecxz
push
adcb
mov
jp
daa
sub
iret
sub
into
bound
gs
scas
dec
test
jg
mov
jmp
cpuid
pslld
in
std
xchg
aam
mov
push
jg
jnp
xchg
bnd
xchg
inc
xor
mov
inc
fwait
add
mov
aad
push
push
out
stos
inc
lods
test
dec
lea
inc
shlb
divl
repz
loope
mov
loop
mov
add
cmp
in
xchg
cwtl
cmpsb
jns
xchg
pop
pop
push
mov
pop
add
sarl
movsb
pop
cmc
mov
dec
sbb
cmp
push
or
mov
mov
push
pop
push
mov
sbb
sub
mov
shlb
in
outsb
push
or
push
imul
xor
pop
in
ficoms
mov
jbe
int3
or
add
add
addb
push
sub
xchg
movsb
je
popa
pop
cvtps2pi
dec
test
pop
movsb
adc
adc
jno
xchg
repnz
or
mov
inc
push
mov
mov
or
or
jae
push
aam
scas
enter
mov
xchg
fwait
out
push
sub
jno
mov
cli
popa
mov
jge
js
mov
mov
sub
mov
es
outsl
rep
push
cmp
xor
in
jl
in
imul
push
inc
in
cmp
leave
and
mov
mov
sbb
rcrb
add
push
lahf
test
lods
lods
mov
subb
add
or
dec
icebp
cltd
mov
cmc
mov
add
shll
and
sarb
xor
sub
xlat
sar
scas
jmp
ret
and
mov
and
mov
jns
jl
sbb
test
dec
dec
adc
test
sbb
cmp
movsb
insl
jp
fwait
sti
mov
push
das
rorb
iret
xor
mov
js
jp
xor
jle
and
aas
bound
outsl
insl
imul
movsl
imull
jbe
push
in
push
pop
mov
mov
xchg
shlb
bound
add
or
scas
out
arpl
mov
icebp
mov
imul
cmc
mov
dec
stc
scas
jo
or
add
or
xchg
data16
pusha
nop
dec
sub
inc
loopne
xor
icebp
mov
aad
sbb
mov
fs
mov
add
xor
pop
mov
popf
mul
sub
inc
adc
xchg
jo
hlt
mov
inc
dec
pushf
adc
outsl
divb
sub
stc
dec
hlt
or
dec
cld
mov
outsl
inc
mov
add
dec
sub
inc
aad
jmp
sbb
negl
mov
and
push
jl
or
jnp
jp
mov
orb
out
mov
mov
jp
jmp
adc
ja
pusha
xor
sub
jecxz
sub
shlb
out
xor
xchg
adc
cs
fmull
filds
imul
mov
jp
push
jl
pop
xchg
xchg
adcb
xchg
test
imul
popl
lret
mov
sbb
mov
test
and
nop
lea
dec
in
mov
and
sbb
pushf
mov
ja
and
inc
or
movsl
cltd
xor
cltd
dec
jae
fldl
cvtpi2ps
rclb
xchg
push
mov
xor
mov
test
xor
xor
daa
int3
lods
ret
mov
aas
push
pop
fstpt
pusha
cld
push
scas
jge
nop
xchg
sbb
sbb
pop
sub
or
jbe
jne
jmp
sub
sub
lods
adc
cmp
rcrl
jle
jne
inc
mov
lahf
mov
mov
xor
in
xor
xor
lcall
pop
scas
repnz
negb
push
loopne
aaa
inc
mov
imul
outsl
push
cmp
test
xor
pop
shrl
cmp
gs
fcmovnu
xchg
xor
out
popa
std
std
adc
xor
mov
push
rcrl
in
sbb
push
inc
jne
dec
loopne
movsb
mov
idivb
or
add
xor
inc
repz
inc
inc
aam
jmp
fidivs
mov
out
dec
dec
rcrl
sbb
jae
mov
xchg
outsl
out
xchg
adc
dec
fstpl
inc
pop
pop
jmp
jg
or
inc
sbb
inc
divb
cmpsl
outsb
jnp
and
jle
mov
inc
aam
cmp
push
and
push
inc
pop
push
dec
and
inc
dec
in
insb
clc
xchg
inc
mov
outsl
negb
lcall
jge
lcall
jns
cltd
add
mov
mov
cmp
sbb
jbe
xor
stos
cmp
jle
jmp
and
lret
cmc
push
ret
xor
enter
push
sbb
adc
inc
lea
shlb
add
movsb
pop
bound
sbb
mov
dec
sti
sbb
lea
repz
mov
cwtl
dec
out
or
xor
adc
mov
dec
jo
or
adc
mov
sbb
dec
pop
cmpsl
fs
push
ja
inc
mov
push
into
lahf
loopne
inc
and
mov
jg
js
mov
nop
loope
xchg
xchg
flds
insb
dec
aaa
leave
push
lret
mov
push
push
sbb
fdivrs
lods
andl
inc
inc
scas
cmp
cs
adcb
xor
xor
dec
sub
mov
add
cmpsl
xor
xor
enter
in
xor
xchg
sub
jmp
fstpt
push
loope
jb
pop
in
insb
push
fdivs
fadds
aam
mov
pop
rorb
std
ret
xor
ret
lock
scas
testb
sub
mov
movsl
push
xchg
or
in
adc
ss
icebp
jae
sub
shll
stc
lock
cltd
ds
sbb
aad
mov
loope
sub
inc
inc
sbb
fdivl
or
jmp
pusha
cmp
sub
and
pop
cmpb
cmpsb
icebp
fistl
ret
leave
test
cmp
adc
call
push
gs
add
inc
test
es
jl
mov
xor
inc
fsubrl
sub
cmpsb
cmc
mov
sbb
cmpb
adc
cmp
ja
sub
cwtl
stos
bnd
lahf
inc
mov
in
adc
arpl
jb
sarl
stos
stc
push
aad
out
mov
xor
shl
adc
mov
jae
xchg
add
fdivs
xchg
js
jecxz
mov
inc
int3
or
mov
add
in
jne
jbe
adc
cmp
mov
inc
outsb
xchg
fiadds
enter
jmp
dec
icebp
pop
bound
pop
lret
sub
jge
stc
sbb
aad
xchg
loop
or
fistpll
inc
mov
push
pushf
lahf
jne
push
mov
outsb
out
jmp
mov
mov
insb
ds
jle
decb
cmp
xchg
loopne
das
adc
mov
test
lcall
popf
dec
push
mov
xchg
inc
push
or
sub
push
dec
mov
xchg
mov
mov
inc
cltd
and
xor
or
movsb
fneni(8087
jmp
mov
shll
int3
mov
lcall
popl
test
xor
daa
xlat
in
xchg
movsl
cmpsl
xchg
lret
xor
jnp
popf
lret
and
xchg
dec
mov
das
test
loopne
rcll
pushf
push
popa
fwait
clc
popa
fbld
shr
cld
cmp
dec
test
add
xchg
xorl
pop
cmpsb
cmc
inc
mov
add
enter
sub
fistpl
in
push
jmp
aad
outsb
adcb
cmp
push
ficoml
testb
mov
jle
stos
int
faddl
hlt
jae
stos
add
stos
ret
add
adc
and
xchg
es
xchg
jb
ret
mov
sbb
inc
jle
test
testl
mov
or
jmp
jmp
mov
mulps
inc
sbb
mov
push
cmp
cmpsl
arpl
inc
je
adc
loope
test
add
xchg
cmp
jo
leave
out
sbb
pop
mov
aas
jmp
push
pop
add
shll
das
test
sti
xor
icebp
inc
inc
jle
fistps
hlt
jne
ret
mov
and
mov
ljmp
sub
mov
push
jnp
inc
adc
outsl
inc
fidivrl
adc
sbb
je
mov
cld
ljmp
xor
xchg
xchg
mov
movsb
xor
jge
hlt
cmp
ds
ret
movsl
nop
pop
lea
and
xor
adc
aaa
pushf
xlat
mov
push
pop
sbb
dec
and
mov
movsb
cltd
pop
loope
mov
fdivrl
adc
pop
arpl
push
repz
add
repz
setge
faddp
out
inc
jo
lock
mov
ret
mov
adc
mov
mov
mov
aam
orb
mov
pop
repnz
push
pop
sub
mov
test
pop
mov
xor
jge
cwtl
push
sbb
push
scas
mov
push
mov
in
mov
fisttps
mov
push
add
jle
pop
mov
out
je
std
inc
outsl
je
push
icebp
dec
outsl
xchg
inc
jo
mov
or
cmpsl
mov
enter
cmpsl
fists
out
punpckldq
sbb
mov
adc
mov
mov
ds
clc
out
push
or
ljmp
push
xchg
sub
lahf
pop
sub
jl
cmpsl
sbb
pop
mov
fisubl
stos
and
insb
scas
orl
mov
push
and
xorl
jbe
jl
jb
sub
jge
scas
pop
je
call
popf
sti
lock
ret
jecxz
imul
ljmp
nop
dec
in
fisubs
mov
xchg
insb
fistpll
pop
arpl
sbb
xchg
xchg
mov
xlat
into
lea
dec
je
mov
add
lods
rorl
pop
lahf
sbb
fsts
inc
add
adc
lea
pop
push
mov
pause
or
and
sbb
mov
in
sub
fcompl
into
testl
rcrl
jns
cmp
xchg
leave
push
cltd
push
iret
pop
push
cmc
mov
loop
sbb
push
mov
sub
pop
fwait
out
add
cs
sub
lock
or
sti
adc
mov
ret
aaa
xor
inc
dec
imul
or
pusha
adc
test
sub
jae
outsb
test
mov
xor
ret
je
out
arpl
fwait
inc
push
and
inc
jnp
leave
fisttpl
push
lcall
mov
insb
insb
dec
cmp
pushf
rcr
cwtl
jecxz
xlat
out
das
and
add
push
xchg
test
sbb
fwait
cmp
xor
test
pop
mov
in
lock
xor
outsb
clc
pop
ljmp
inc
push
dec
ss
fcmovnu
repnz
repz
dec
int3
xchg
fiadds
cmp
cmp
ds
lock
mov
aas
in
subl
sub
inc
mov
jnp
out
int3
les
xor
sub
enter
jp
sub
adc
stos
and
shl
mov
pop
and
xchg
xchg
cmp
mov
and
clc
into
mov
insl
mov
cmpsl
inc
push
outsl
fsubp
xor
std
shll
pop
cmpsb
das
xchg
test
roll
dec
inc
xlat
fldt
push
movsb
jns
mov
int3
mov
enter
dec
dec
mov
ljmp
adc
dec
pop
aaa
pop
mov
xchg
xor
adc
jmp
xchg
and
fisubs
mov
mov
mov
scas
std
scas
mov
inc
sbbb
lret
dec
cli
pusha
mov
push
pusha
xor
sbb
push
call
xchg
ja
inc
lds
sub
cmpsb
fnstsw
xchg
jno
mov
jae
jbe
in
out
int
mov
add
ret
xor
stos
ret
addw
pop
sbb
jo
adc
xor
dec
pop
mov
pop
mov
icebp
out
inc
mov
or
test
stc
add
pop
push
cmp
popa
popf
inc
sub
or
gs
out
test
push
pop
mov
push
add
movsb
adc
dec
add
mov
mov
adc
xchg
iret
pop
xchg
into
mov
mov
pusha
lahf
imul
adc
stos
scas
xor
xchg
inc
jg
outsb
outsl
es
xchg
rcrl
repz
and
or
xlat
aam
inc
in
loop
cmpsl
pop
xchg
jmp
mov
icebp
push
mov
movsb
xor
sbb
ffree
test
mov
xchg
dec
pop
pop
ret
inc
xchg
mov
pop
and
sub
and
and
mov
mov
mov
lahf
pop
roll
mov
mov
sbb
loope
adc
and
or
in
xor
push
sbb
out
dec
xchg
dec
push
sti
mov
js
loope
sub
fstpt
mov
shlb
scas
sub
ret
sub
sbb
xorb
test
sub
push
sbb
imul
pop
jno
pop
sub
and
or
fidivs
sub
adc
pop
cmpsb
push
cmp
lret
xchg
pop
insb
popa
out
es
sub
pushf
pusha
imul
push
pop
popf
sub
cmp
into
xchg
cmp
add
mov
sub
out
xor
pop
and
and
addr16
inc
rorb
pop
outsl
push
add
insb
or
sbb
iret
roll
xchg
out
push
mov
and
jns
ret
inc
or
or
xor
in
xor
cli
fsubs
sub
jb
push
cmp
fs
lret
and
pop
and
shrl
loope
les
mov
imul
in
pop
cli
incl
je
call
fistpll
insb
dec
jecxz
xchg
cmp
addr16
adc
jo
test
sbb
test
pop
mov
icebp
pandn
mov
test
inc
sbbl
je
cwtl
lcall
mov
dec
repz
test
stos
sbb
imulb
fwait
cli
popf
push
inc
fdivrl
and
sarb
nop
and
inc
dec
ljmp
loope
mov
pop
inc
mov
mov
aad
insb
sub
add
ret
add
shlb
frstor
je
mov
xor
aaa
inc
push
adc
fnstsw
and
gs
mov
cmp
pminub
and
sbb
add
test
adc
push
mov
xlat
cs
add
jmp
in
adc
lret
lcall
outsb
test
int3
mov
inc
lds
out
aam
cmovge
dec
mov
stc
mov
xor
jbe
pop
pop
mov
jbe
sub
div
sti
pop
out
repnz
es
jmp
aaa
loopne
aaa
adc
stos
cmp
mov
jbe
xchg
push
cmp
insl
lods
dec
lds
adc
fdivr
aaa
sti
sar
outsl
stc
push
repnz
std
sarb
push
xchg
push
dec
lds
inc
or
pop
sbbl
and
cwtl
outsl
pop
mov
js
lds
std
push
cmpsl
out
out
enter
out
push
and
cmpsb
inc
ret
sub
xchg
nop
scas
lahf
xchg
lea
mov
leave
sbb
inc
ja
ljmp
cmpsb
loop
pop
mov
and
lds
bound
mov
push
lods
dec
xlat
hlt
bound
pop
mov
xchg
xor
daa
sbb
adc
xchg
pop
and
xor
and
or
les
int3
imul
ljmp
js
xchg
cld
cld
fldl
inc
leave
jp
inc
fisubrs
repnz
mov
arpl
enter
fdivl
xor
repnz
jbe
subl
int
adc
xor
shrl
push
push
ds
idivb
hlt
scas
mov
sahf
scas
mov
out
aaa
mov
push
jl
int3
mov
ss
dec
dec
add
xor
mov
add
pusha
les
inc
in
sub
dec
xor
inc
sbb
cmp
mov
or
aad
pop
adc
sub
or
or
and
mov
lret
addl
adc
jmp
jb
lds
mov
aaa
xor
or
testb
gs
iret
jnp
pop
sahf
divl
nop
push
cltd
fwait
or
mov
dec
mov
mov
aas
clc
mov
jmp
cmpsb
arpl
sbb
je
sbb
jge
xchg
int
adc
lods
jb
or
xor
icebp
aaa
mov
scas
push
insb
mov
adc
pusha
loope
sbb
xor
and
add
idivb
pop
cmp
movsb
mov
sub
shrb
jbe
adc
cmp
leave
inc
div
sub
pop
xchg
enter
sbb
and
sbb
imul
mov
mov
hlt
pusha
mov
adc
cli
arpl
cmc
dec
les
sub
insl
lcall
inc
sbb
hlt
dec
out
mov
fdivrl
push
mov
inc
mov
es
sbb
cs
xchg
daa
mov
sbb
test
jo
and
jno
jb
outsb
mov
xlat
add
cld
hlt
in
lods
push
inc
mov
mov
mov
cmp
stc
stos
push
pushf
lcall
xchg
roll
cmc
enter
jns
aas
call
aam
jg
int3
cs
add
jp
test
in
pushf
and
int3
or
movsb
sahf
lea
out
push
loop
popa
push
lret
mov
rcrb
dec
adc
jge
pop
jle
jno
ret
into
imul
xorl
inc
lods
sub
mov
mov
out
out
icebp
cmp
loop
es
into
iret
int3
rcrl
fs
lods
cmp
cmpsl
and
cmpsb
mov
mov
push
rol
sub
sub
sub
and
leave
lret
movsl
test
cmp
fisubs
cmp
dec
jmp
sub
and
outsb
cli
xchg
aad
pop
jecxz
push
imul
into
ss
adc
cmpsl
lcall
mov
aam
pop
xor
add
push
sub
pushf
outsl
movsb
ret
or
add
lods
mov
in
push
ret
clc
shl
aad
sbb
stc
daa
dec
into
sub
leave
es
and
shrb
jle
scas
cmp
xor
mov
add
jmp
pop
inc
daa
fcomp
nop
pop
ljmp
aas
cmp
les
adc
mov
and
xor
dec
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
push
and
xor
add
adc
jecxz
repz
ret
rcl
mov
adcl
push
and
aaa
xor
add
adc
loope
icebp
lret
shll
andl
push
and
and
add
xchg
shl
loope
pop
imul
cmp
jle
outsb
or
cmp
or
push
sbb
je
mov
fwait
icebp
test
lods
fnstcw
or
jge
dec
cmp
sub
jns
mov
cltd
std
test
into
fsubrs
stc
popf
or
sub
inc
dec
xor
and
mov
mov
in
stos
shrl
insl
js
sub
push
inc
ret
adcb
jbe
leave
mov
addl
xor
cmp
dec
cmpsb
pop
ret
xchg
xchg
adc
sahf
sub
call
notb
jo
sbb
mov
aaa
push
cmp
enter
push
stc
popf
or
ds
and
jns
jns
adc
dec
sub
flds
pop
jb
pop
push
pushf
pushf
lods
mov
mov
xchg
pop
repnz
pusha
xchg
std
and
xor
cltd
lds
push
stc
bound
dec
xchg
bound
rcr
int
imul
sub
jb
lret
push
pop
cmp
sub
jns
mov
cltd
in
aam
leave
mov
stos
jmp
or
outsl
dec
jg
sub
ss
push
popa
std
jo
test
test
cwtl
cld
mov
rcrb
jg
insl
jge
cmp
adc
sub
cmp
sti
xchg
pushf
aam
mov
rolb
sub
sbb
pop
sub
pop
cmp
mov
cltd
std
test
lods
fnstcw
or
jge
dec
cmp
sub
jns
mov
cltd
std
test
lods
fnstcw
or
cli
mov
inc
dec
cltd
adc
cmc
cmp
xchg
xchg
inc
aam
loopne
call
mov
int3
jbe
rolb
xchg
push
pop
fcmove
cmp
xor
jecxz
mull
jns
and
xor
mov
sbb
xchg
and
xchg
xchg
incb
stos
and
jns
or
into
push
push
fsubl
sub
loopne
xor
iret
add
mov
pushf
jmp
mov
xor
fcmovbe
jg
jns
mov
or
cwtl
sbb
imul
xchg
sarl
adc
fmulp
or
sub
lahf
inc
push
repnz
rcrb
dec
hlt
mov
add
mov
adc
popa
lret
inc
lret
cmc
mov
pushf
sbb
cltd
and
and
or
imul
cld
sub
in
cmovp
lods
xchg
mov
and
mov
or
push
ja
insb
push
cs
cld
out
and
xor
icebp
ret
pop
jmp
mov
into
xchg
stos
cmp
push
je
cld
or
idivl
push
jno
jmp
mov
popf
lods
inc
repnz
adc
je
rcrb
push
in
xchg
test
sub
adc
sub
and
push
popf
mov
cmp
mov
jp
cs
xor
mov
iret
jae
xchg
mov
sub
aaa
mov
ss
inc
xor
mov
icebp
pusha
fildl
xor
cld
push
add
xchg
lea
sahf
xor
cmp
xchg
push
and
hlt
aam
add
sbb
add
shll
push
testb
xor
jbe
cmpsl
daa
imul
sub
lahf
inc
jle
sbb
test
pop
fdivr
xor
outsl
sbb
lods
inc
sbb
mov
jbe
sub
adc
out
enter
mov
les
add
mov
aam
shll
nop
add
das
sub
sbb
leave
popf
incl
push
cmp
xchg
push
stos
call
mov
mov
sub
dec
ja
enterw
sti
in
adc
xor
jecxz
mov
dec
lods
dec
fistl
mov
orb
jb
inc
clc
inc
sti
mov
movsb
cli
inc
mov
mov
sbb
sbb
jno
popa
pop
mov
mov
or
fsubrs
fdivl
mov
mov
xor
sahf
data16
fs
pop
push
sbb
pop
push
cmp
push
out
out
aas
lahf
das
stc
mov
jno
pushf
ret
mov
jmp
pop
and
xor
ss
sbb
mov
sbb
mov
jns
mov
xor
imull
push
hlt
xchg
pop
mov
mov
mov
jo
xchg
sbb
push
adc
fst
mov
mov
cmc
popa
aas
arpl
sbb
repnz
test
mov
bound
lds
xchg
jns
rcrb
loop
out
mov
mov
dec
mov
out
outsb
dec
ja
dec
outsl
push
out
out
scas
cmp
addl
psllw
out
xchg
mov
pop
cs
jnp
xchg
mov
ret
dec
pusha
xchg
inc
jne
cli
sbb
dec
xor
jno
xchg
push
and
iret
jbe
out
jmp
xor
adc
mov
xchg
gs
mov
xorl
insl
ds
xchg
or
out
dec
cmp
add
ret
xchg
sti
adc
or
inc
bound
lcall
dec
jmp
jp
and
fdivs
and
add
push
int3
xchg
push
pop
stos
push
fsubrl
test
cmp
fisubl
cmp
push
jl
mov
dec
stos
push
xlat
xor
xor
cmp
cmpl
popa
cmp
dec
rcll
push
adc
arpl
push
in
adc
sti
mov
fnstenv
ret
popa
insb
jo
pop
cmpsl
test
and
add
mov
sub
jae
pop
dec
mov
icebp
in
ret
xchg
xchg
inc
fnstcw
sub
mov
mov
xor
sti
ds
ljmp
dec
sahf
mov
hlt
or
int
ret
jmp
push
lock
mov
sahf
pop
dec
xor
xchg
sbb
pop
aam
imull
or
pop
mov
push
push
fwait
pushf
mov
ja
fsubrl
es
popa
clc
mov
inc
xor
rclb
inc
push
sbb
shl
jp
mov
std
inc
and
fstpl
xor
adc
inc
inc
xchg
push
and
scas
push
xor
ret
in
mov
cmp
data16
add
or
movsl
sub
test
sbb
mov
inc
mov
out
push
shrl
popa
mov
lea
dec
inc
sbb
and
mov
dec
sub
xchg
out
test
test
cmpsb
testb
mov
mov
push
sub
mov
cwtl
pop
xor
add
neg
cmp
inc
cmpl
sbb
and
not
mov
aad
outsl
das
pushf
cmp
fucom
negb
mov
pop
push
cmp
cmp
idivl
dec
int3
idivb
mov
xlat
xor
pop
mov
pop
pop
cld
pop
fbld
mov
push
jae
cmpsb
add
sarb
pushf
sbb
mov
cltd
mov
adc
fcomp
call
add
sti
adc
lock
or
jns
jno
pop
xchg
aas
mov
cltd
mull
outsl
xor
sbb
out
or
push
bound
in
fsubrl
pop
or
jno
out
sbb
lods
push
push
push
or
call
shlb
mov
or
fdivrl
or
popa
mov
push
test
mov
popf
jbe
inc
inc
pop
stos
out
stos
push
enter
inc
dec
mov
stc
inc
aaa
push
pop
inc
insl
fwait
pop
xor
sti
addl
jmp
jbe
cmpsb
sbb
pop
sbb
icebp
inc
ds
pop
fidivs
stos
adc
dec
or
mov
sub
xchg
inc
aas
repz
inc
fnstenv
xchg
cmp
cmpsl
stc
push
cltd
loopne
mov
jmp
and
mov
mov
xchg
ja
fbstp
popa
ds
dec
daa
stc
inc
rolb
sub
iret
push
ja
sub
jg
movsl
adc
ret
bound
jnp
add
inc
bound
sbb
mov
cmpsl
in
pop
fmul
bound
loopne
jg
jl
jae
inc
cwtl
push
std
sbb
pop
push
popa
inc
shlb
repz
daa
jecxz
adc
outsb
sbb
daa
clc
das
ss
in
cmp
popa
int
addr16
imul
in
hlt
push
es
jnp
mov
sub
sbb
adc
dec
popf
and
jnp
les
negb
xchg
test
fcoms
or
mov
sbb
cltd
fmull
cmpsl
adc
or
dec
lret
dec
test
in
outsl
push
push
fisttpll
cwtl
popa
jns
mov
mov
fcomip
fs
mov
xchg
lret
pop
or
cmp
adc
add
repz
sub
sti
mov
xchg
pop
push
pop
xor
push
xor
pop
push
push
xlat
mov
xlat
mov
ds
mov
test
sarb
nop
jle
push
out
jae
cwtl
cltd
jne
mov
out
fwait
pop
xor
test
loope
clc
jb
xor
enter
cli
dec
das
rcll
and
outsl
in
fwait
daa
fsubs
push
and
xchg
mov
jle
dec
ret
pop
xchg
scas
fiaddl
bound
inc
insb
orl
pop
loope
dec
fistpll
int3
jne
es
jle
dec
and
fcomps
out
orl
push
mov
jne
incb
jo
or
iret
insl
dec
subb
scas
mov
ljmp
psubusb
jmp
jbe
lcall
shlb
shrb
out
sahf
mov
jno
xchg
out
xor
cmpsl
enter
cli
enter
addr16
add
out
out
orb
add
push
addr16
lds
cli
addr16
xor
int3
repnz
aad
arpl
lods
xchg
mov
loopne
xchg
fnstcw
push
jb
stos
dec
jp
push
and
and
mov
fs
sub
jbe
das
int3
fisttps
pop
arpl
cmpb
sub
pop
ret
mov
adc
fs
add
imul
or
mov
aas
add
pusha
xor
lods
sub
ret
jnp
mov
call
ljmp
test
sub
mov
sub
shll
andb
cli
mov
loopne
flds
sub
sbb
test
loope
loopne
push
fdivrl
out
loopne
and
ja
enter
push
dec
dec
shlb
into
sbb
pop
pop
int3
dec
scas
test
push
mov
sar
in
and
sahf
inc
or
in
mov
mov
mov
push
lea
mov
xchg
shrb
insb
shl
cmp
xor
mov
adc
mov
call
cmc
mov
test
pop
pop
fstpt
mov
and
outsb
shll
adc
lcall
scas
or
out
add
jbe
mov
lods
or
jmp
jae
mov
loop
add
and
pop
iret
cwtl
ficoml
and
arpl
cmp
inc
pop
push
fdivr
lods
sbb
int3
mov
rorb
mov
xor
jb
mov
inc
outsb
loope
sub
leave
fiaddl
shl
out
xlat
pop
shl
inc
cmp
sub
outsb
inc
outsb
inc
jge
fldl
popw
out
call
jmp
mov
sub
fstps
lret
stos
fwait
push
sbb
dec
mov
sbb
xchg
jae
aaa
push
sub
xchg
adc
xor
clc
xchg
inc
add
mov
cs
push
cmp
mov
sbb
inc
mov
stc
sbb
mov
orb
or
jns
es
out
sub
jo
loop
stc
sub
xorb
sub
jne
pop
mov
pop
mov
andb
lds
rcr
je
cmp
aad
jl
mov
insb
mov
bound
hlt
cmp
repz
outsl
adc
jg
ret
shlb
lcall
adc
fistl
aaa
mov
loop
mov
mov
aam
out
vmovshdup
inc
dec
test
and
data16
xchg
and
into
push
dec
xchg
xchg
cmpsl
xchg
ds
lahf
repz
xor
gs
test
in
in
xchg
mov
pop
pop
leave
mov
int
pop
dec
adc
push
or
call
lahf
mov
xchg
push
push
cltd
dec
inc
movsb
loope
sub
pop
dec
outsb
xor
sub
xchg
enter
ficompl
enter
test
adc
into
or
cmp
orl
dec
stos
sub
ds
fs
sbb
jo
mov
xlat
jle
fwait
out
hlt
mov
sbbl
outsb
push
jb
jmp
mov
xor
pop
shlb
loope
adc
push
aad
sahf
xor
jmp
add
mov
in
push
mov
add
push
fucom
push
fbstp
lods
cmc
xchg
cltd
mov
inc
sti
fsubr
cwtl
dec
ror
jns
subb
mov
stos
adc
dec
or
popf
mov
mov
enter
gs
or
push
ror
in
lret
call
loopne
cli
push
pop
inc
pop
cs
or
daa
stos
inc
js
sarb
aam
pushf
inc
push
jnp
fstps
push
add
fldl
movsl
test
loope
in
mov
push
mov
sub
push
sub
push
mov
mov
sbb
mov
rcl
push
dec
pop
loopne
xlat
xchg
pop
adc
sbb
jbe
mov
in
scas
add
xor
mov
add
xchg
loopne
loop
fidivrl
insb
fistl
js
insb
nop
hlt
push
in
out
stc
xor
je
int3
loopne
mov
xchg
jne
jecxz
cmp
loope
insb
ja
sarb
ss
js
sub
cmp
push
xchg
push
fisubs
mov
xchg
or
mov
cmp
add
mov
push
or
jge
test
adc
mov
out
fists
xchg
das
sub
aad
and
sbb
adc
sub
adc
iret
mov
cmp
sbb
dec
ret
frstor
enter
jp
and
mov
jae
test
sub
push
jno
mov
or
cmpsl
mov
push
dec
lock
xlat
add
roll
lds
out
lods
sub
pop
and
cli
mov
clc
out
or
jns
jg
mov
div
in
sbb
mov
xor
aaa
or
stos
mov
inc
lret
jp
sbb
movsb
in
in
scas
mov
std
ficomps
stos
xor
aam
ds
pop
inc
inc
rcrb
movsl
push
add
mov
loope
loope
push
xchg
and
int3
inc
cs
sub
cli
stos
mov
rorl
imulb
xor
js
movsl
push
jmp
mov
xchg
inc
cmc
xor
and
fisttpl
xchg
imul
and
lcall
cmp
stos
sbb
repz
sbb
cmp
sub
jb
sar
loopne
xchg
out
fnstcw
test
push
mov
in
push
mov
loopne
mov
push
and
sub
sbb
sub
pop
or
pop
cmp
std
xchg
ds
cmpsb
sar
mov
cvtps2pi
test
in
push
inc
or
cli
hlt
xchg
repz
stos
arpl
or
aaa
pushf
mov
clc
push
xchg
dec
bound
and
fwait
in
stos
int
je
stos
jnp
push
cld
rolb
lret
or
int3
jmp
sbb
js
sbb
es
stos
xor
and
inc
in
fbld
aas
lods
lret
sbb
dec
inc
out
pop
mov
mov
xchg
xor
xor
out
jmp
lods
mov
fs
sbb
aam
mov
sahf
js
adc
push
push
mov
sbb
sbb
cli
sub
std
push
ss
xchg
sbbl
jle
adcl
mov
dec
popa
fidivs
outsl
pop
inc
cmp
orl
aam
loope
lret
in
mov
pop
test
repz
sub
insb
cltd
mov
out
pop
aaa
jno
pop
nop
dec
cmp
int3
ja
je
push
loop
pop
xchg
mov
dec
lds
imul
outsb
dec
mov
pop
adc
inc
sti
repnz
out
cltd
fiaddl
stos
roll
fiadds
mov
sbb
jbe
repz
fwait
ljmp
pop
pop
sub
adc
sbb
add
out
daa
adcl
mov
scas
test
dec
popf
scas
mov
int
into
fdivrs
push
into
sarb
inc
inc
add
lea
mov
mov
in
iret
movsb
mov
sbb
std
rcrb
jp
push
xchg
cmp
dec
loope
in
jg
mov
cmc
xchg
iretw
cmp
sbb
xlat
clc
mov
jo
xchg
mov
mov
out
inc
sbb
mov
pop
addb
pop
cmp
and
stos
pop
shl
and
xchg
ret
mov
je
or
fisubl
andl
rcl
mov
pop
divl
mov
add
fisttps
adc
xor
outsl
jnp
clc
xchg
and
loop
movsl
lods
xchg
scas
loop
inc
adc
mov
ljmp
insb
test
mov
adc
cmp
insb
mov
mov
pop
fldt
push
mov
jp
cmp
dec
jecxz
pop
lock
jnp
jne
mov
cwtl
mov
int3
inc
loop
or
adc
mov
push
insl
lret
jb
popf
inc
addl
cs
loop
in
in
inc
mov
mov
in
shlb
mov
mov
adc
push
sahf
or
cltd
or
loope,pn
cwtl
sbbl
sbb
je
mov
cmp
or
into
data16
xchg
out
js
cmp
rorb
scas
mov
filds
inc
jnp
add
mov
cmp
jae
insb
mov
enter
rolb
xchg
pusha
dec
adc
mov
jnp
push
fcom
test
jmp
movsl
jge
xchg
loope
js
jg
out
inc
std
jne
int
sbb
push
sub
cli
add
lds
mov
sub
xchg
xor
add
shl
mov
xchg
mov
aas
rclb
sub
ds
xchg
mov
imul
int
or
cmc
inc
sti
leave
out
xchg
dec
pop
and
and
out
cltd
jecxz
jl
aam
and
je
jp
pusha
xchg
mov
cmpsl
lea
or
mov
shlb
iret
ret
and
int
loopne
pop
gs
cld
or
scas
inc
mov
sbb
lret
rclb
pop
or
dec
push
or
lcall
test
in
test
aas
xchg
xchg
and
rorb
xor
int
imul
inc
je
pop
jecxz
lret
rcr
imul
insl
mov
out
int3
pushf
daa
mov
xchg
mov
mov
xor
int3
inc
mov
dec
and
stos
jg
inc
cltd
aad
cmp
ret
jp
add
out
js
fcomps
adc
adc
pop
rorl
xchg
xor
pop
add
pop
lcall
pop
fimuls
stos
nop
movb
sub
notb
popf
jge
int
addr16
lods
or
push
cmpsb
lea
testl
mov
mov
sbb
cmp
push
push
dec
mov
push
or
sbb
adc
jle
jne
addr16
movsb
lea
push
xchg
xchg
cmp
in
ds
dec
mov
repnz
ljmp
mov
fs
cmpsb
xchg
sbb
testl
jmp
test
xchg
imul
adc
cmpsl
dec
add
out
mov
pop
mov
pop
lret
mov
sti
repnz
popf
rcll
inc
insl
jbe
push
mov
cmp
pop
dec
or
iret
lcall
lahf
xchg
roll
in
lcall
cli
pop
loopne
btr
add
repnz
daa
push
pusha
shll
movsl
add
push
push
sbb
sub
xor
push
scas
mov
insl
ss
test
mov
stc
mov
repz
clc
repnz
into
ret
das
nop
push
subb
cmp
xchg
ret
cmp
pop
mov
imul
notl
or
gs
and
mov
arpl
xchg
pmaxsw
shr
into
ret
jle
jns
pop
out
push
mov
gs
inc
lcall
rol
push
loopne
adc
inc
nop
jg
mov
sti
mov
mov
sbb
jle
mov
jle
push
inc
fiaddl
mov
shll
testl
outsl
lret
sbb
jl
cwtl
lods
sub
or
imul
pop
fcom
pop
pop
outsl
lods
adc
in
icebp
sub
mov
lods
lods
mov
mov
fsubl
adcb
mov
jecxz
and
loop
xor
aad
aaa
test
cmpsb
das
cs
mov
lds
ret
dec
into
pusha
aad
sti
in
fistpl
imul
fcmove
xlat
rcr
xchg
mov
mov
out
xorl
stos
push
push
in
jbe
or
in
or
imul
shlb
lods
cmp
ja
repnz
out
push
cmp
rorb
iret
ss
out
and
and
mov
cld
xor
xchg
dec
movl
add
xor
and
mov
mov
test
sub
sub
ss
fisubrl
leave
ret
std
out
test
imulb
pop
pop
and
xchg
mov
enter
xchg
inc
in
mov
sarl
cmpl
call
push
push
fcoml
rclb
popf
cs
mov
dec
and
lock
lods
fimull
ljmp
outsl
jno
fdivrl
cltd
in
xor
sub
ds
shrl
ljmp
out
imul
scas
xor
jp
ljmp
pop
ss
fwait
jmp
pop
jmp
dec
daa
lock
mov
hlt
test
les
stos
pop
test
fdivp
lcall
mov
pop
inc
dec
out
cs
pop
xor
data16
nop
jmp
stos
sarl
stos
loop
movsl
inc
dec
add
fmuls
sbb
mov
mov
mov
idivl
push
mov
pop
cmp
mov
cltd
std
test
lods
fnstcw
or
jge
dec
cmp
sub
jns
mov
cltd
std
test
lods
fnstcw
or
jge
dec
cmp
sub
jns
mov
cltd
std
test
lods
fnstcw
or
jge
dec
cmp
sub
stc
sbb
add
mov
inc
adc
bound
push
sub
pextrw
popa
add
dec
rorl
popf
cmp
mov
inc
cmp
jno
add
jge
pop
xor
shll
lea
fnsave
xor
add
adc
inc
xor
mov
jmp
scas
fbld
adc
push
mov
lods
stos
mov
or
sub
andl
cmp
cld
pop
sub
mov
inc
call
int
jb
popf
test
mov
cs
push
pop
testb
pop
outsb
fists
sarl
jb
pop
sbb
jno
add
push
rclb
loop
pop
add
jge
sub
rcrl
insb
xlat
add
stc
push
mov
loop
jns
mov
xor
icebp
gs
or
xchg
std
inc
mov
es
xchg
not
enter
sbb
sbb
jb
aad
or
pop
sub
popa
add
or
and
push
sarl
xchg
and
mov
pop
cmp
adc
insl
jg
or
xor
adc
lods
sbbb
out
in
in
inc
push
and
adc
inc
jge
and
sub
jg
leave
ror
mov
vpsrlq
xor
dec
add
insl
and
dec
sarl
lea
fnsave
sub
add
insl
and
dec
sarl
lea
fnsave
ficompl
mov
push
test
cmpsb
push
jae
mov
cs
nop
sub
add
sub
lret
push
je
inc
adc
mov
outsb
sbb
xor
jo
shl
lock
mov
int3
data16
insl
mov
hlt
dec
inc
jno
stos
mov
inc
jb
pop
in
xor
push
push
das
push
sbb
push
lock
cmpb
pop
or
lret
xchg
xor
pop
xor
fs
imul
out
and
cmp
mov
popf
mov
repnz
cmp
push
pop
out
mov
inc
push
movsb
add
mov
jge
pop
pushf
clc
xor
mov
insl
repz
shrb
ljmp
gs
movb
mov
sbb
dec
lcall
cmp
or
movsb
cmc
jmp
gs
pop
cmpsl
mov
into
pop
shr
add
pop
pop
mov
cmpsb
add
push
cmpsb
mov
push
imul
popf
mov
incb
adc
sahf
push
jg
nop
pop
cmpsb
inc
xor
adc
movsb
cld
jo
adc
mov
pop
lahf
in
iret
je
jno,pn
icebp
loopne
xor
push
jl
sbb
xchg
jmp
xor
add
push
xchg
mov
inc
cmp
push
xchg
out
popa
push
mov
pushf
push
cmp
repz
int3
pop
xchg
pop
popl
or
xchg
push
stos
push
cmpsl
cmp
jecxz
call
inc
add
pop
lods
push
dec
jnp
stos
and
cmp
loop
inc
data16
movsl
enter
fnstsw
iret
mov
pop
nop
inc
mov
push
xchg
jb
cmp
mov
push
mov
dec
add
popa
enter
js
xlat
push
repnz
aam
inc
mov
push
jbe
jecxz
push
stos
xchg
insb
je
ljmp
xchg
jnp
adcb
mov
dec
movsb
push
mov
sbb
fwait
shll
cltd
out
popa
push
add
mov
das
mov
push
dec
pop
fmulp
std
movsl
jecxz
mov
inc
and
cmp
dec
std
cmp
sub
pop
bnd
repz
mov
fildll
mov
jl
arpl
jge
xchg
sbbb
mov
rcll
nop
cmpsb
sbb
fnstsw
sub
mov
mov
pusha
inc
push
int
xor
dec
shll
cmp
xchg
adc
dec
test
data16
cld
sub
repnz
pop
add
negb
pop
notl
cmp
mov
pop
mov
test
cmp
stc
fmuls
adc
jg
nop
pop
in
mov
pop
xor
mov
or
bound
mov
jmp
mov
pop
insl
jle
mov
mov
and
data16
andl
pop
ficompl
dec
aaa
ss
push
shl
out
iret
mov
inc
inc
stos
dec
xor
mov
pop
js
loop
mov
mov
imul
inc
loop
clc
jbe
in
call
ret
or
or
mov
jne
insl
cmpsl
cmpsl
mov
and
mov
sti
cmp
dec
mov
mov
push
test
int3
scas
cwtl
or
dec
cld
movb
and
out
movsl
daa
out
ljmp
mov
ds
lods
out
repnz
inc
cmp
sahf
ret
dec
push
cmpsl
mov
cmp
pop
mov
jne
inc
mov
vmread
les
xchg
aaa
out
into
out
mov
cli
inc
rorl
jmp
inc
leave
mov
mov
into
daa
rcr
arpl
outsb
sub
out
xchg
test
in
inc
xchg
les
por
push
mov
andl
inc
push
mov
adc
fistps
push
insb
or
jnp
and
mull
xor
in
js
stc
cmp
xchg
iret
sbb
repnz
pop
cmp
mov
cmovge
jle
dec
mov
in
jge
ljmpw
clc
cld
jae
pop
imul
movsl
cld
add
ljmp
lds
jle
nop
mov
pop
adc
ljmp
and
outsl
ret
mov
clc
jne
arpl
jg
dec
lds
bound
cmp
mov
in
jo
in
or
sbb
dec
jo
xlat
jns
jae
sub
pushw
movsb
fdivs
mov
int3
inc
push
pushf
pusha
jns
ret
mov
cli
popa
test
sbb
mov
cli
jg
mov
clc
std
xor
insl
out
outsl
and
bound
cmp
mov
mov
xor
mov
dec
and
jmp
clc
outsb
inc
mov
cmc
pop
jmp
push
les
rclb
gs
test
icebp
mov
mov
ds
test
and
fs
sub
mov
icebp
lret
add
sahf
cmc
pusha
dec
push
sub
inc
mov
pop
dec
fisttps
and
mov
inc
xchg
dec
cmp
sti
in
in
int
outsb
shr
int3
shll
push
or
inc
outsb
cmp
je
pusha
adc
and
ror
stos
gs
or
xor
dec
dec
pushf
aad
xchg
imul
inc
jecxz
xchg
lcall
idiv
js
push
and
mov
lods
or
jbe
and
test
fwait
mov
xchg
insl
ja
dec
out
aas
and
ljmp
mov
mov
or
adc
adc
mov
and
jp
clc
inc
aam
out
mov
jmp
aas
cmp
fwait
movsb
xchg
xorl
jns
xchg
cmc
pop
rcll
xchg
push
add
lcall
mov
inc
sti
jle
xchg
movsb
xchg
mov
jge
or
loopne,pt
mov
jo
push
fs
cmp
hlt
in
data16
or
adc
mov
xor
testb
pop
mov
and
aad
jle
mov
xchg
mov
mov
or
call
sbb
sbbl
movsl
adc
mov
push
jle
sub
sarb
ds
sarl
stos
into
jo
loope
xlat
ret
adc
loope
jg
jp
in
scas
stc
add
push
ljmp
cwtl
scas
sbbl
jecxz
mov
xchg
cs
xchg
pop
mov
mov
sub
adcl
ljmp
ret
jns
lods
push
jle
or
stc
cli
idiv
lcall
cmc
xchg
testb
mov
inc
mov
int
xor
xorb
jbe
mov
mov
ds
popf
xchg
jbe
lds
int
sbbl
xor
xchg
mov
ja
cmp
jne
popf
fcomip
xchg
push
imul
hlt
adc
in
call
fidivrs
mov
into
adc
pop
andb
in
movsl
mov
add
cmpsb
enter
out
lcall
and
cmp
add
and
sub
jbe
loope
mov
mov
add
mov
xor
sbb
inc
pop
movsl
test
push
mov
in
inc
ds
stos
inc
in
add
aas
in
stos
push
sbb
dec
add
cmc
push
dec
and
add
xor
fidivl
push
out
fwait
or
dec
aad
outsl
jne
mov
adc
inc
add
adc
lahf
das
ja
and
testb
in
pop
aam
sbb
sub
push
ja
fnstenv
int3
scas
lret
scas
sub
jl
outsb
in
mov
jle
loopne
cltd
push
mov
cld
aam
cmpl
push
orl
fdivl
bound
roll
cltd
pop
fs
mov
aas
push
loope
test
push
mov
sbbb
movb
jnp
sbb
test
loope
inc
mov
xchg
xchg
adc
sarl
jg
mov
sub
sbb
jo
sub
iret
stos
iret
dec
in
loope
sbb
mov
push
inc
imul
add
or
negb
sub
fisubl
cmp
xor
hlt
adc
stos
rcrb
jle
xchg
push
xlat
and
jmp
push
cld
mov
fs
scas
cli
and
notl
call
gs
adc
call
sub
andl
jae
loop
cmc
pop
fidivs
popf
dec
add
and
orb
pop
jg
xchg
cmp
outsl
testl
mov
ds
adc
cli
jb
ss
dec
mov
pop
dec
je
cmpl
repz
rorb
jmp
lea
insl
push
rcl
adc
dec
jae
push
addr16
cmp
test
inc
or
fsub
xor
insl
push
fisubl
adc
xor
out
je
lods
dec
scas
push
push
ret
fwait
mov
outsb
and
repz
repz
ja
xchg
inc
arpl
or
sub
ret
jp
jns
mov
xchg
pmulhw
nop
mov
cmp
xor
sub
pop
add
out
and
scas
sbb
test
adcl
sbb
jns
push
mov
inc
cmpsb
int3
mov
mov
pop
int
sub
and
or
aad
lock
mov
mov
or
call
es
adcb
and
dec
jmp
pop
mov
in
cs
aas
lcall
cmp
sbb
xchg
enter
mov
ret
pop
jbe
mov
push
subb
shrl
dec
mov
out
out
xchg
push
mov
xchg
insl
lret
xlat
icebp
xor
jb
flds
push
mov
pop
mov
daa
mov
push
cmp
cmp
popf
repnz
jp
daa
dec
sahf
adc
adc
fcompl
rolb
nop
mov
loope
mov
in
neg
insl
mov
out
into
xor
fdivs
icebp
adc
mov
repz
dec
lcall
push
in
mov
insl
in
aad
cmc
jbe
or
pushf
cltd
cmp
sub
popf
xor
dec
mov
sub
daa
xor
imul
mov
and
xor
or
or
and
mov
jmp
jnp
xor
sub
jne
cmp
dec
and
aaa
aas
shl
mov
pusha
sbb
movlps
stc
aaa
call
mov
ficoml
sub
mov
mov
xor
hlt
addr16
push
lods
add
test
rcll
cltd
jbe
test
xchg
add
or
cmpsl
cmp
insb
fbstp
ret
pop
pop
push
mov
ljmp
push
test
pcmpgtd
adc
rolb
and
andb
call
arpl
popf
enter
ss
dec
mov
pop
loop
bound
cwtl
jp
inc
sub
enter
mov
xor
adc
iret
outsb
inc
push
icebp
add
std
add
xchg
cmp
mov
inc
xchg
mov
pop
fsts
insb
xchg
xchg
or
jb
shrb
add
sahf
xor
aad
jecxz
push
push
lods
cld
xchg
sub
flds
xor
push
bound
decl
inc
enter
dec
dec
in
pop
jae
xor
jae
shll
or
jne
cmp
pop
mov
add
movsb
lds
xor
xchg
in
inc
enter
mov
in
fistpll
jns
lock
inc
adc
in
mov
inc
sub
pop
in
and
xlat
scas
push
sbb
dec
cs
out
repnz
mov
jecxz
outsb
aad
pop
mov
push
sub
inc
push
das
adc
ret
sbb
xor
and
mov
cltd
lret
pop
into
rorb
add
incl
out
enter
xchg
imul
jg
scas
pop
mov
rclb
add
mov
inc
ljmp
aam
shll
daa
add
mov
mov
xchg
shr
shll
mov
mov
shlb
xorl
js
shlb
stc
xor
leave
mov
add
int
add
push
negb
out
mov
sahf
enter
mov
adc
out
xchg
mov
das
aam
mov
in
mov
add
leave
sahf
sbbl
shr
mov
test
fcompl
inc
stos
sbb
aas
sbb
jle
fisttps
mov
cmpsl
test
test
bound
push
xchg
xor
xor
mov
mov
sub
popa
daa
sbb
ret
pop
fsts
xor
jne
pop
jo
xor
inc
jnp
daa
mul
stc
jae
fwait
jmp
jbe
jg
into
ficoms
jno
cmpsl
cmp
gs
cmp
fdivr
inc
movsl
adc
jp
jle
jp
add
arpl
test
mov
dec
pop
call
and
orl
pop
xchg
shll
or
cmp
test
mov
cmc
jg
and
fiadds
jge
call
cld
lods
jle
lods
ret
inc
dec
jae
push
mov
mov
and
dec
es
pop
sbb
inc
dec
divb
std
sbb
mov
or
xor
xchg
rorb
inc
mov
xchg
lret
ss
icebp
movsb
les
sub
xor
sbb
call
pop
js
std
or
or
pop
mov
sub
notb
movsb
sub
hlt
les
shrl
pop
popa
mov
es
sar
dec
hlt
xchg
movsb
in
xor
mov
jle
mov
dec
aaa
jle
std
mov
dec
sbb
mov
push
and
xchg
cltd
repz
xchg
adc
jne
test
jle
xchg
sub
shrb
fisttps
repz
enter
ret
data16
jg
add
lods
cmp
or
mov
inc
insb
sbb
xor
ficoms
inc
push
mov
ljmp
add
mov
lods
xchg
out
xor
cmp
inc
xor
dec
repz
jae
lret
ret
sti
push
mov
jnp
je
divb
sbb
or
cmp
cs
adc
push
ljmp
fstpt
and
add
pop
and
dec
adc
adc
lds
clc
sahf
roll
shlb
outsb
in
jae
cmp
add
sbb
fistps
lret
pop
stos
mov
je
dec
push
test
mov
and
cmp
pop
pop
or
cmc
or
or
add
lret
push
pop
sub
cmc
ja
xchg
adc
xor
out
inc
xlat
add
rcll
fiaddl
cmpsb
add
pop
insl
push
push
movsb
xchg
enter
cwtl
mov
sbb
loope
loope
notl
mov
mov
jb
xchg
das
hlt
cmp
jne
mov
push
push
sbbl
cwtl
push
je
cmp
and
mov
ror
test
test
jno
inc
adc
js
xchg
mov
xchg
in
dec
out
shlb
data16
stc
fadd
adcl
fildl
in
aam
bound
xlat
scas
xchg
add
imul
imulb
xchg
mov
cmpsl
nop
cmp
call
mov
imull
pop
scas
xor
pop
cwtl
daa
orb
ficoml
mov
pushf
movsb
aas
inc
pop
mov
gs
sahf
sub
xor
mov
movsl
adc
push
jg
xchg
dec
or
lret
leave
add
je
inc
mov
scas
or
push
add
test
adc
push
sub
leave
mov
add
stc
xchg
xor
sub
jno
out
and
mov
jb
jp
jnp
lahf
push
push
xor
and
xchg
xchg
mov
adc
jnp
insl
call
xor
adc
pop
movsb
ljmp
sarl
es
aas
xchg
pop
movsb
clc
push
lcall
test
lret
cs
xchg
incb
pop
xor
subb
push
popa
clc
mov
repnz
sbb
fisubrs
sbbb
add
dec
cmp
add
fbstp
xor
stc
imul
sbb
ljmp
loop
das
mov
mov
jl
addr16
pop
out
ret
xchg
jns
pop
lods
and
outsb
les
in
js
stos
fsubs
repz
das
fld
push
rorb
rorb
pop
sti
popa
les
ret
clc
push
jmp
sub
ja
add
pop
sar
mov
jnp
inc
mov
sbb
notb
mov
mov
cmpsb
and
pop
shrb
sbb
daa
xor
mov
inc
cltd
in
sub
subb
pop
mov
enter
lret
daa
inc
loope
icebp
iret
sub
jl
mov
push
mov
push
fwait
pop
stc
jb
dec
dec
loopne
lret
mov
icebp
nop
mov
cmpsl
shl
lock
mov
dec
push
aad
or
rclb
fcomp
push
lock
add
xor
push
sbb
jg
and
adcl
xchg
vpcmpgtw
inc
test
lods
in
jle
mov
icebp
fisubl
insl
xchg
jno
addr16
xchg
mov
push
outsb
mov
cmp
push
jbe
shlb
insb
mov
ret
lcall
sbb
jae
pusha
fs
outsl
sbb
imul
lret
int3
movsb
fiadds
push
and
mov
call
test
insb
mov
xchg
mov
xchg
loope
ret
xor
mov
repz
or
aaa
xchg
cld
lods
jno
out
mov
sub
push
lcall
or
mov
scas
cli
cli
inc
jne
repz
pop
clc
pop
xchg
mov
pop
fisubrl
imul
outsb
ja
ds
sub
mov
cmc
sahf
leave
sub
shlb
cli
in
pop
mov
jg
call
sub
cmc
push
and
xchg
into
insl
add
nop
lret
xor
adc
fistpll
mov
sub
sub
loope
aaa
scas
ljmp
add
sub
mov
dec
adcb
and
mov
sbb
outsl
gs
scas
in
jno
hlt
cmp
std
adc
imul
ret
jbe
sub
ljmp
and
cmp
add
pop
stos
xchg
mov
mov
cmp
rcrl
cmpsl
and
pop
mov
insl
jg
pop
cmp
xor
enter
or
cs
cmpsl
pusha
cmp
stos
dec
rol
mov
lret
dec
lret
push
repz
xchg
xor
cld
dec
xchg
push
adc
pop
lods
into
cmpsb
pop
loopne
adcl
pop
ret
sti
sbb
test
lret
cmp
sub
mov
xor
inc
sub
mov
mov
jnp
sub
mov
out
sub
aaa
or
inc
inc
cli
rcrb
inc
push
ja
mov
mov
dec
out
jl
rorl
jp
lahf
sub
or
or
jl
ss
mov
aas
xor
sarb
cmc
lret
adcb
jl
ja
inc
mov
sbb
test
mov
cmp
mov
lods
into
loop
hlt
add
test
xchg
inc
aad
out
xchg
sub
xchg
fs
mov
jge
pop
mov
and
sahf
jae
cmp
scas
mov
or
cs
push
mov
ror
imul
in
dec
mov
fwait
cmp
pop
xchg
pop
mov
clc
inc
xor
movsb
jmp
aad
insl
js,pn
popa
ret
xchg
dec
pop
cltd
inc
jb
mov
add
jo
add
int
push
jb
in
leave
in
mov
sub
ds
rolb
pop
xor
xchg
gs
in
call
std
xchg
cmp
clc
jmp
out
xchg
enter
xchg
push
jmp
leave
pop
and
or
xor
and
into
mov
push
xchg
xchg
adc
push
inc
ds
ds
popf
shrl
sti
pushf
negb
ss
mov
lsl
inc
or
and
clc
movsl
push
lea
push
sub
dec
mov
call
sbb
inc
loope
aam
adc
scas
sbbb
adc
sbb
ror
sbb
sbb
inc
xlat
imul
cmp
cli
ret
shlb
jp
je
rcrb
test
sub
sub
dec
fcmovb
xor
pop
hlt
test
mov
mov
cli
xor
push
push
dec
and
gs
rolb
jp
lret
pop
ja
popf
pop
cmp
mov
movsl
rorb
add
add
das
xlat
lods
pop
pop
add
mov
or
nop
hlt
mov
sub
add
insl
and
dec
sarl
lea
fnsave
sub
add
insl
and
dec
sarl
lea
fnsave
sub
add
insl
and
dec
sarl
mov
fnstenv
sub
jno
add
insl
and
sarl
cli
divb
xchg
pop
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aam
int3
hlt
mov
imulb
push
fadds
je
gs
pop
add
xor
and
aam
les
faddl
push
sbb
or
xor
sub
jb
dec
xor
and
aam
les
es
xchg
in
test
sbb
das
sbb
pop
adc
imul
push
dec
or
out
mov
pop
rorl
xor
xor
jle
push
test
andl
pushf
lahf
dec
dec
test
sbb
leave
test
add
test
ret
fwait
jl
dec
add
and
xchg
pop
pop
xor
xor
push
sbb
movsb
rolb
mov
test
stos
aam
les
enter
cmp
popa
fstps
push
sub
mov
adc
sub
jno
inc
sbb
out
test
aaa
cmp
adc
fcompl
faddl
sti
pop
fs
and
jae
leave
outsl
jl
xchg
jbe
cmp
pop
mov
dec
inc
inc
xor
or
movsb
push
sbb
les
faddl
push
sbb
movsb
je
adc
add
xor
and
xchg
pushf
mov
popf
rorb
mov
push
pop
and
sbb
adc
or
mov
mov
rclb
fbstp
jge
jns
outsb
fs
adc
pop
sbb
mov
les
mov
fcoms
movsb
in
push
sbb
or
cmp
sub
pop
add
xor
and
aam
les
faddl
push
sbb
or
cmp
sub
pop
add
xor
and
aam
loope
imul
xchg
pop
push
push
shll
push
jne
ja
pop
mov
in
das
mov
ljmp
adc
out
dec
hlt
pusha
or
mov
pop
push
loope
pcmpgtb
rcrl
mov
cmpl
out
xorl
js
ret
adc
mov
and
push
adc
pop
mov
sub
or
shrl
sbb
sub
mov
adcl
test
imul
inc
lods
mov
sub
pop
ret
call
fwait
cli
mov
sub
in
xchg
xor
rcrb
xor
fs
imull
repnz
nop
lret
fcmovnb
lods
daa
pop
xor
mov
dec
xchg
imul
xchg
push
insl
notb
imul
adc
mov
bound
test
js
mov
in
aad
je
jmp
inc
lcall
popf
inc
gs
sbb
xor
sub
jnp
and
pop
lahf
and
outsb
fstps
mov
cmp
pop
xchg
jno
out
mov
fs
int3
mov
push
loop
inc
mov
int
push
mov
and
in
aas
cmp
rorb
cld
ffree
out
mull
je
jg
lea
inc
inc
bound
dec
insl
bt
scas
imul
lret
xor
out
mov
pop
out
dec
mov
mov
xchg
or
lret
lret
pop
xchg
imul
and
dec
or
leave
pop
mov
call
stos
xchg
rolb
lcall
stc
xchg
mov
loope
cmp
jg
jge
pop
sub
dec
inc
aas
cwtl
lock
mov
jb
rorl
add
rol
inc
or
lods
sub
push
mov
add
jge
jae
sub
ja
aad
notb
mov
aad
insl
arpl
xor
fstp
mov
je
xchg
sbb
adc
insb
roll
pop
xor
int3
outsb
xchg
cmpsb
in
cmp
fcmovnb
fcmovbe
out
inc
sub
adc
gs
fsubr
and
das
test
loop
idivl
subl
mov
fiaddl
xchg
mov
dec
roll
rclb
int
push
ret
out
or
cmp
cs
rclb
movsl
adc
lahf
inc
cmp
push
cmpsb
outsb
hlt
cwtl
jmp
popf
push
pop
push
jno
aaa
mov
cmp
cmp
ret
lahf
sub
lcall
pop
xor
fldl
mov
mov
shlb
sub
test
sbb
negb
push
mov
gs
pop
xorb
sbb
fs
adc
fwait
gs
jne
idivb
rclb
sub
lret
imul
sbb
jecxz
mov
scas
ljmp
js
outsb
repnz
adc
std
dec
shll
push
loop
mov
jge
and
inc
pushf
mov
or
dec
jo
rorl
stos
xchg
mov
and
into
jmp
xor
das
xor
in
fnstsw
pop
es
mov
and
pop
push
mov
inc
adc
lcall
mov
out
loope
in
fs
jg
xchg
loop
movsl
movsb
pop
orb
adc
addr16
cmp
into
lret
inc
mov
pop
scas
rcr
and
dec
xchg
xor
push
icebp
jge
scas
jle
sub
dec
mov
lods
mov
call
adc
aad
test
pop
fstpl
shrb
mov
mov
sbb
adc
jno
ds
dec
dec
sbb
push
insl
nop
and
lea
addr16
add
mov
in
cmp
into
fsubl
xor
and
cwtl
scas
sub
enter
imul
scas
and
fwait
orb
mov
dec
jns
mov
sub
and
push
cs
and
push
cmp
xor
jg
idiv
jnp
into
sub
addl
pop
fstpt
sbb
ljmp
xchg
scas
xchg
xchg
sbb
mov
fbstp
push
push
int
cmp
mov
lret
push
add
imul
clc
cld
add
push
jp
xchg
push
imul
adc
jo
xchg
mov
mov
sub
or
xlat
movsb
sub
xchg
lcall
jmp
push
cmpsl
popa
mov
xor
add
ret
xchg
fidivrs
add
dec
pop
nop
cld
lods
dec
mov
loope
xchg
aas
xchg
cmp
nop
call
aaa
add
repz
lods
xor
xchg
sub
pop
ret
bound
jne
aaa
lcall
cltd
out
movsl
jmp
cmp
fcoml
push
push
xor
stos
loopne
popa
lea
pop
xchg
push
adc
ret
push
repz
and
xor
inc
bound
out
dec
jno
and
adc
jle
cltd
repz
pop
test
imul
jecxz
dec
lret
movsb
rorb
loopne
cmp
cmp
pmullw
and
data16
cmpsb
or
mov
add
xor
sub
popa
cmp
mov
mov
jno
jmp
cmp
cltd
jne
dec
mov
pop
aaa
mov
sub
pop
mov
loopne
and
and
sub
addl
inc
imul
xchg
jae
add
adcb
je
lods
inc
jo
scas
inc
push
mov
enter
sbb
and
out
xor
lret
and
dec
lcall
pop
cmp
push
mov
or
das
data16
ret
adc
xchg
lret
adc
xlat
insb
cld
in
xchg
stc
cltd
cmp
test
mov
mov
dec
loopne
pop
in
xchg
mov
shl
push
repz
outsl
add
inc
loopne
addr16
subl
data16
adcl
dec
jne
inc
xchg
mov
int
sub
stc
adc
xor
or
dec
and
push
dec
aas
push
pop
push
divb
dec
shll
dec
rorl
insb
or
push
and
movsl
test
and
and
in
outsl
pop
je
mov
and
adc
sbbb
ljmp
and
pop
inc
jae
test
sub
fadds
inc
leave
inc
sar
xor
pop
dec
sub
das
sarl
dec
iret
cltd
movsb
mov
popf
push
movlhps
enter
push
popf
fidivrl
sbb
push
leave
int
mov
nop
jnp
shlb
push
push
shr
mov
push
adc
pop
stos
sub
dec
mov
dec
negb
sbb
xchg
adc
pop
inc
xor
shlb
mov
popf
pop
add
mov
dec
jne
leave
pop
inc
push
loope
jmp
in
jmp
sbb
sbb
xchg
cmp
cs
cli
data16
push
das
hlt
out
shrl
stos
pop
test
xchg
mov
shll
insl
jne
stos
scas
lret
push
stos
aaa
pop
dec
out
loopne
mov
popf
inc
push
jns
jg
je
xchg
push
lcall
pop
hlt
adc
or
mov
sti
sbb
mov
dec
pop
dec
cmp
sti
push
rorb
xorl
mov
inc
jp
pop
aas
adc
jo
push
neg
mov
cmp
mov
add
and
scas
imul
cld
xor
sub
cmp
inc
mov
dec
cmp
arpl
xchg
stos
es
loop
adc
dec
pop
add
dec
mov
fadds
mov
mov
ss
pop
push
jmp
inc
adc
es
jb
fisttpll
jb
cwtl
push
rclb
ret
jns
adc
rclb
jmp
outsl
jge
idivl
adc
sti
lcall
inc
jnp
ljmp
push
pop
xor
clc
mov
leave
push
push
repnz
push
dec
je
xor
push
push
jecxz
mov
fimull
jno
fimull
cmc
and
xchg
jmp
or
repnz
fldt
xchg
insb
arpl
and
sub
in
cs
mov
loope
std
push
ret
jnp
mov
pop
ret
ja
xor
jle
mov
in
inc
leave
test
cmp
adc
negl
adc
cmp
lods
mov
dec
mov
in
inc
aas
mov
mov
and
inc
or
sub
sbb
enter
sub
pushf
ds
rol
movsb
add
repnz
stc
sub
repz
cmp
mov
cld
mov
jnp
arpl
repnz
jp
ret
cwtl
mov
sub
mov
test
cmpsb
frstor
imul
jae
sbb
test
out
sar
pop
sub
fsubrs
cs
lcall
push
loope
pop
stos
insb
mov
cltd
xor
imulb
jmp
in
sbb
jge
lret
aad
and
outsl
lahf
xor
popa
mov
xor
aas
ret
repnz
xchg
mov
movsb
imul
loope
cmc
push
ficoml
push
repnz
std
mov
pop
push
dec
out
lods
std
sub
prefetcht2
adc
add
ja
inc
sbb
cltd
ja
loop
imul
cmpsb
adc
pop
frstor
pop
sub
xchg
daa
or
and
cmpsb
push
jae
dec
pop
rcr
fmull
out
lea
cmpsl
mov
mov
daa
xorl
test
fidivl
mov
mov
inc
mov
add
sti
push
xor
pusha
in
xlat
mov
test
xor
cmp
stos
xlat
jne,pt
push
mov
fdivrp
jl
push
pushf
mov
or
les
mov
stc
mov
leave
xor
pop
xchg
adc
pop
ljmp
rcrb
outsb
in
sub
orb
sbbl
pop
cwtl
cld
or
mov
mov
push
mov
inc
cwtl
mov
inc
inc
push
out
nop
xchg
adc
sbb
negl
lcall
loop
out
roll
test
movsb
divl
mov
cmp
jb
mov
fadd
jno
push
scas
pop
mov
out
and
std
cld
rorl
lahf
outsb
dec
sub
xchg
fnstcw
in
inc
xor
xchg
or
cmp
pop
cmp
adc
jmp
xchg
mov
mov
push
pop
sbb
fistpl
sub
mov
lods
pushf
inc
fildll
insb
pop
arpl
jecxz
test
negl
cli
aaa
mov
dec
test
or
pop
js
loope
push
mov
push
mov
popf
daa
add
push
and
push
xchg
hlt
xor
outsb
pushf
push
movsb
sbb
imul
pusha
ja
popa
popl
int3
pusha
or
and
in
and
les
lock
aad
push
xchg
xchg
fcmovnb
pop
mov
xchg
mov
pop
add
icebp
insb
lea
xlat
pusha
inc
push
mov
ror
mov
popa
mov
insb
movsl
cli
addl
lea
adc
test
push
mov
xchg
ret
cmpsl
aaa
push
pop
add
fnstenv
jns
ja
push
mov
add
push
dec
add
inc
leave
int
adc
push
das
js
pop
xor
xor
subb
pop
xchg
xchg
aaa
rcll
adc
inc
inc
add
imul
push
imul
rcr
addr16
cwtl
shr
or
pop
mov
popa
xlat
hlt
mov
mov
dec
les
scas
sub
sub
popa
lcall
add
daa
pop
mov
xchg
mov
xchg
jmp
ror
out
lock
enter
fwait
mov
cmpsl
sbb
out
jo
mov
sbb
sub
stc
sahf
rclb
fstp
or
lcall
pop
outsb
push
ja
inc
adc
xor
push
sbb
xchg
sarb
cmp
in
fdivs
pop
or
cmp
jbe
sarb
dec
lret
cmpsl
lea
ficoml
out
stos
movsl
out
add
dec
or
data16
cli
fisubrl
in
lret
into
rol
jecxz
sar
scas
push
xchg
pusha
pushf
sub
sub
loope
fcmovnb
push
shll
mov
dec
pop
popa
sbb
addr16
adc
jmp
jle
sbb
hlt
and
pop
xchg
mov
test
jnp
mov
sub
push
aaa
imul
or
xor
rcrl
sbb
mov
iret
popa
loope
mov
ds
mov
pop
jecxz
xor
adc
ret
fwait
and
pop
push
pop
add
outsl
xlat
xchg
jo
and
scas
aaa
inc
filds
cmp
sbb
pcmpeqw
cmp
cmp
adc
jb
es
xor
mov
dec
push
jb
jl
push
pushf
push
test
pop
lock
arpl
add
inc
adc
jne
int3
decl
nop
cs
mov
ret
out
pop
adc
cmpsl
mov
jecxz
cmp
jp
pop
stc
cmp
mov
or
test
clc
data16
out
outsb
add
sub
fisubs
jmp
push
and
lcall
sbb
inc
aas
adc
fucomi
and
daa
testl
and
stc
sub
test
xchg
inc
sbbw
jns
fdivrl
push
add
ss
lds
inc
gs
push
fldt
arpl
std
cmpsl
call
fistpll
push
cmp
push
lods
add
bound
test
stos
or
mov
rcr
cmpsl
and
aaa
and
jecxz
mov
xchg
lahf
aad
fidivs
pop
push
idivb
out
sbb
dec
pop
pop
cwtl
sub
xlat
mov
add
sbbb
xchg
in
adc
cmpb
lea
xor
lods
mov
mov
or
add
daa
fidivrl
stos
adc
arpl
pushf
mov
mov
mov
movsb
imul
xchg
mov
xor
aam
pop
es
fwait
pop
out
cmpb
xchg
ret
and
ss
mov
fwait
insl
or
pop
je
and
lods
xchg
mov
nop
cmp
sbb
stos
es
pop
sub
das
pop
idiv
add
adc
pslld
sbb
addr16
test
ljmp
cs
movl
mov
adc
sub
add
mov
gs
daa
mov
sub
pop
mov
dec
add
js
sub
xlat
test
je
pusha
cmp
push
rorl
dec
jne
insb
xor
sub
push
add
jno
daa
div
pop
xor
jnp
jge
inc
and
test
xchg
lods
dec
fisubrl
in
test
push
stos
inc
dec
out
xor
insb
pop
pop
sub
mov
fildll
ret
fimuls
xchg
or
icebp
sub
call
pop
in
and
aaa
test
push
je
popa
aas
jno
aad
mov
or
loope
jmp
mov
cmp
mov
pop
aas
sub
es
or
push
push
pusha
popa
sbb
or
loop
idivb
pop
movsb
inc
xor
xor
mov
ss
int
xor
adc
sbb
and
lea
shrl
in
data16
call
dec
lods
fidivs
fadd
xorb
bound
and
sbb
sbb
ja
scas
jle
out
push
xor
sbb
push
std
inc
sbb
xor
daa
mov
sbb
lahf
stos
jg
mov
xor
push
or
addr16
in
lea
rcll
and
jge
cltd
outsl
jo
test
push
into
adc
or
cld
sbb
pop
inc
mov
dec
mov
push
out
mov
lret
xor
stos
orb
bound
gs
mov
jnp
mov
jl
andb
inc
mov
test
jb
xor
lcall
push
ja
jo
lods
adc
dec
dec
xor
imul
jmp
add
add
pop
rcr
mov
pop
jno
bound
stos
ljmp
mov
sub
pushf
lret
mov
ljmp
lds
addr16
dec
out
cmpsl
mov
sbb
popf
push
inc
push
xor
sbb
push
pop
stos
mov
insl
add
pop
dec
cmp
mov
push
cmpl
mov
push
cltd
scas
fisubrs
scas
rcll
in
and
cmp
mov
addr16
leave
out
ret
mov
test
lret
cmp
xor
nop
ss
mov
pop
inc
pop
out
xchg
lock
mov
mov
jb
sub
je
ljmp
fs
mov
movsb
add
push
add
cmpsl
add
int
xlat
out
adcl
insb
push
iret
daa
rcrb
repz
jg
cmc
push
mov
scas
out
xorl
cwtl
inc
sbb
cltd
aad
xchg
fcompl
out
and
dec
mov
mov
rorl
mov
mov
das
mov
sbb
xchg
shlb
orl
stc
pushf
fstl
sbb
gs
inc
xchg
and
fiaddl
cmp
sub
stos
ds
or
xchg
push
inc
xchg
jge
mov
inc
repnz
je
xchg
mov
sarl
int
jae
inc
fnstsw
mov
jl
pusha
fisubrl
push
xchg
dec
stos
lds
cmc
push
jl
add
mov
std
call
pop
mov
mov
or
pop
les
das
sahf
call
testb
xchg
repz
cli
dec
jne
pop
scas
stos
lret
pushf
inc
mov
sub
sbb
dec
push
dec
or
and
test
sub
call
gs
xor
pusha
sbb
jge
cmpsl
mov
pop
sub
fdivs
cld
mov
fnstsw
mov
test
adc
int
iret
in
lods
jns
lea
adc
sbb
andb
cltd
mov
and
jbe
jg
stc
mov
cmp
fwait
loop
aaa
roll
pop
and
lret
loopne
scas
push
fcmovu
clc
jge
inc
popa
imul
popa
adc
and
testl
shrl
in
xchg
xor
inc
cmp
shll
std
scas
push
enter
jo
push
roll
sub
inc
and
out
out
xbegin
push
movsl
xchg
and
mov
dec
stos
shll
mov
mov
sbb
aaa
dec
lret
adc
sub
sub
sahf
scas
mov
push
mov
jl
mov
mov
sar
dec
test
cmp
sub
inc
dec
lahf
negb
mov
inc
mov
pop
cmp
rorb
sahf
iret
stc
or
cmp
dec
xchg
inc
pop
jae
mov
mov
cmp
adc
inc
test
jecxz
inc
jg
cmp
das
push
sbb
mov
adc
cmp
les
pop
arpl
fwait
pop
jbe
mov
dec
xchg
or
lret
rcr
jp
neg
sub
fisttpll
dec
and
cmpsl
and
adc
pushf
push
fldcw
dec
and
xor
out
pop
sub
sub
in
fimuls
push
mov
mov
std
dec
mov
ljmp
je
daa
sbb
mov
shlb
mov
xchg
jp
loope
lods
cld
pop
fsubs
add
cmp
add
sub
repnz
bound
xchg
cmp
lret
and
into
jmp
test
fimull
into
daa
push
xor
in
jo
es
pop
imul
shll
inc
cmp
mov
adc
xchg
inc
notl
mov
mov
jbe
adc
mov
xchg
arpl
paddb
scas
inc
mov
push
push
push
ret
ret
popf
lret
hlt
bound
push
stos
imul
mov
movsb
sub
sbb
divb
loopne
push
call
imull
inc
lahf
inc
pop
mov
dec
inc
mov
imul
jl
xchg
sub
sbb
push
stc
stos
dec
mov
inc
popf
dec
pushf
out
jg
sub
pop
clc
or
mov
mov
push
test
mov
add
popa
lahf
jmp
or
mov
ss
lahf
cmc
adc
or
jne
mov
es
aam
loopne
gs
adc
popa
sti
mov
xchg
xchg
dec
xchg
rcl
in
ja
add
add
fwait
xchg
adc
iret
out
sub
sbb
dec
js
sbb
cld
repz
andb
mov
bound
lcall
cli
lods
mov
adc
pusha
stos
lret
mov
gs
push
or
add
xlat
jns
jecxz
sahf
cwtl
lods
aas
aad
andl
xor
das
sbb
lods
cmc
stos
int3
mov
or
cmc
mov
test
mov
movsb
in
push
sbb
or
cmp
sub
pop
add
xor
and
aam
les
faddl
push
sbb
or
cmp
sub
pop
add
xor
and
aam
inc
xorb
adc
test
push
sbb
fs
xor
and
aam
les
pop
in
xchg
faddl
push
jecxz
cmpsb
fidivrs
pop
fs
xor
add
adc
inc
dec
lods
jl
insb
or
xor
sbb
inc
int3
cltd
cmp
sub
sbb
or
jl
outsb
mov
mov
insb
mov
or
cmp
sub
cmp
or
sbb
or
adc
dec
inc
cs
lods
fs
mov
xor
aam
jecxz
dec
nop
inc
cwtl
jg
sub
add
sub
dec
ret
add
adc
lock
adc
aas
xor
xor
xorb
sbb
mov
repz
pushf
in
adc
je
sbb
jge
scas
push
pop
and
sarl
scas
mov
jp,pn
inc
fidivs
adc
push
pushf
imul
mov
cmp
sbb
ret
movsb
jl
sub
xchg
cld
mov
pop
mov
iret
sbb
dec
fmul
test
aam
xor
fucomi
or
das
lea
dec
push
mov
jl
adc
loope
mov
pushf
pop
xor
cmp
inc
add
in
adc
jge
xchg
pop
pop
lods
enter
pop
jl
jnp
or
push
in
cmp
xor
ljmp
xchg
xchg
mov
out
sub
mov
ds
test
mov
gs
sbb
sbb
dec
in
sbb
outsb
test
push
mov
mov
mov
sub
and
cmp
jle
sbb
insb
out
fs
or
cmp
sub
fdivrl
sub
sbb
or
jl
insb
mov
mov
insb
mov
or
cmp
sub
fdivrl
sub
sbb
or
jl
insb
mov
mov
add
xor
iret
addl
inc
add
cmpsb
and
cmp
mov
add
insl
add
pusha
mov
ficomps
jmp
mov
mov
inc
in
negl
notl
pop
jle
mov
xchg
fs
xor
adc
mov
mov
jecxz
imul
jl
andl
scas
lds
movsb
rolb
mov
and
xchg
andl
ljmp
cwtl
je
fists
mov
rcrb
pop
cltd
lcall
add
hlt
popf
sbb
mov
arpl
mov
rclb
mov
jns
mov
je
or
cmc
xorl
cmpl
xor
sbb
stos
jae
add
stos
xor
pop
fisttpll
add
pop
mov
or
cmp
mov
add
cli
sti
es
pop
jle
imul
into
xor
cmp
dec
js
mov
ljmp
cmpsb
cmp
jne
test
push
xor
xchg
xchg
mov
or
das
inc
mov
push
cmp
ljmp
mov
lds
push
mov
mov
aas
fldcw
push
mov
sti
adc
mov
lods
xchg
in
cmp
mov
mov
in
ret
gs
repz
test
pop
nop
mov
cmp
pusha
xor
mov
cmp
mov
adc
ja
ljmp
daa
nop
lea
mov
pop
pop
test
rcll
sbb
mov
push
movsb
fstl
mov
jae
or
in
mov
cwtl
pop
roll
jae
pop
and
insl
popf
ss
out
stc
iret
cmp
jno
pop
mov
dec
js
js
loopne
test
aam
pop
out
xchg
sarl
sbb
das
lock
xchg
sarl
std
jp
es
push
xchg
push
call
mov
jne
ja
ds
jne
dec
movsl
mov
dec
in
cmc
ds
sub
and
cmp
mov
sbb
prefetch
or
pusha
mov
cmp
mov
aam
es
outsb
push
sub
enter
inc
cmp
xchg
repnz
xor
call
jbe
ljmp
loopne
push
dec
jl
dec
cmp
push
fs
aam
push
push
add
cmp
xor
gs
lods
les
sub
fwait
push
xchg
adc
jg
jmp
sub
shlb
push
pop
cmp
adcb
mov
push
test
ret
pushf
leave
stos
push
jge
mov
gs
mov
push
js
mov
add
cmpsb
fadd
adc
test
jle
lods
cli
mov
lahf
and
inc
xor
pushf
sub
or
cmpsl
lods
xor
ljmp
cmp
xchg
data16
popf
pop
aaa
mov
xor
pop
insl
je
pop
into
cli
mov
jp
rcrl
fistps
dec
adc
jno
jp
ss
inc
jp
in
xor
cli
inc
sub
ss
adc
filds
int
jnp
or
jg
dec
push
in
cmp
push
int
scas
jnp
scas
jmp
aas
push
stos
fisubrl
lods
mov
daa
pusha
and
out
inc
fisubrl
in
ds
stc
popa
pop
push
mov
push
xchg
inc
les
imul
xchg
pop
outsl
repz
notl
or
ljmp
cmp
inc
mov
pusha
orps
dec
sbbb
add
pop
or
mov
aad
rorl
xchg
jecxz
xchg
sub
lods
dec
push
xor
fisttps
into
or
cmp
fistl
loopne
push
jae
les
mov
jmp
out
cld
nop
add
ror
cmp
gs
loope
cmp
int
daa
nop
or
inc
cmp
push
adc
imul
imul
int
xchg
jl
inc
fcmovnu
inc
mov
jecxz
cld
lret
sub
test
repnz
pop
mov
call
sub
dec
mov
sub
daa
int3
adcb
dec
call
jecxz
and
mov
je
sbb
pushl
call
adc
sti
push
xchg
pop
dec
leave
in
xchg
leave
and
inc
gs
xorb
push
mov
mov
mov
jnp
jge
xchg
xchg
xchg
pop
shrl
push
dec
sub
jg
fcmovbe
shlb
and
cld
push
or
insb
mov
and
jg
int3
cmpsb
mov
cltd
mov
or
loop
arpl
andl
cmpsl
cmpl
sarl
ljmp
test
icebp
mov
dec
mov
insb
ret
sbb
inc
lretw
dec
mov
ds
cli
pop
cmpsb
scas
out
pop
mov
into
push
jecxz
imul
push
bound
frstor
pusha
pop
jbe
lods
push
js
leave
adc
fisubrs
mov
js
mov
imul
inc
scas
pushf
arpl
dec
inc
mov
les
xchg
lds
mov
jns
push
shl
addl
cmc
or
jnp
inc
jge
popa
shll
inc
jmp
dec
jecxz
jecxz
dec
sub
adc
hlt
jne
cmp
pop
dec
aaa
jp
sub
shrl
sbb
mov
jb
jp
pop
sbb
das
shrb
mov
inc
add
cmp
adc
sub
imul
inc
ret
xchg
lahf
xor
jae
enter
popf
xchg
or
aaa
inc
add
in
dec
jns
or
sub
leave
into
addl
sbb
fbstp
test
mov
cld
loop
js
nop
je
cmp
or
adc
loop
rorl
jmp
push
sub
movsb
dec
dec
addl
mov
test
js
leave
xchg
dec
xchg
fwait
adcb
sbb
subb
and
xchg
ds
adc
mov
xor
data16
fs
rorl
jns
fnstenv
xchg
inc
sub
dec
pusha
out
notb
sahf
ljmp
mov
xchg
inc
mov
adc
add
cmp
in
jbe
push
dec
pop
mov
les
sub
adc
mov
mov
iret
cli
mov
cmp
push
sarl
cmpl
mov
add
call
pop
push
ret
pop
xchg
sub
out
dec
dec
dec
push
daa
out
ljmp
jmp
inc
test
sahf
add
dec
pusha
out
test
aad
push
dec
cmc
test
xchg
aam
call
mov
clc
sub
mov
jg
jmp
jp
stos
push
mov
call
pop
imul
mov
sbb
adc
ja
enter
sbb
xor
loope
add
xchg
mov
data16
push
hlt
insl
cld
adc
mov
and
mov
pop
mov
or
and
cmp
pusha
aaa
mull
adc
shr
jne
movsb
call
lds
dec
js
fdivs
shrb
cmp
inc
es
clc
es
jmp
pop
cwtl
shr
enter
jo
adcl
jb
push
mov
in
cld
loopne
jge,pn
call
jge
lea
int
pop
dec
jecxz
mov
xor
loop
push
inc
rorb
addr16
loopne
adc
int
lods
jo
jmp
mov
jne
xor
mov
out
pushf
enter
out
jl
addr16
cli
ss
insl
adc
mov
xchg
movsb
lret
dec
adc
mov
ret
or
sub
pusha
pop
stos
pop
rclb
jp
lret
cmp
rorl
ror
sub
pop
adc
inc
cmp
push
rorb
fs
adc
pop
mov
mov
add
js
pop
mov
push
dec
xchg
or
and
mov
fisubrl
cltd
outsl
mov
and
dec
negl
mov
cwtl
and
xorl
loopne
xorb
out
jo
inc
incb
xor
xor
sbb
test
xchg
and
fs
std
pop
mov
jne
xchg
hlt
jbe
outsb
push
adc
fisubs
pop
das
sub
xor
mov
xor
ds
cli
dec
xchg
xchg
les
fnsave
in
sahf
inc
or
mov
cwtl
js
es
lds
pop
mov
lret
fwait
scas
sahf
shrl
mov
je
inc
mov
add
adc
jecxz
ljmp
outsl
sub
pop
dec
orl
lret
fistpl
sbb
jge
xlat
xlat
inc
iret
sbb
push
ss
sbb
mov
out
fldenv
loop
mov
xchg
cmpsb
lods
xchg
pop
or
xor
mov
mov
and
aad
sub
mov
mov
jne
add
or
enter
xor
push
pusha
dec
shrb
sti
jg
pop
lret
mov
inc
inc
ss
pop
xor
pmuludq
jg
or
sti
std
out
int
pop
cli
clc
fcomip
mov
stos
in
xchg
movsb
pop
popa
adc
jbe
mov
adc
movsb
or
sbb
mov
push
into
test
mov
sahf
xchg
push
lods
lea
push
fcmovnu
mov
inc
fdivr
mov
nop
push
test
lret
pushf
fistpl
lods
adc
or
hlt
cmp
pop
jl
int3
mov
shlb
push
sub
jnp
mov
popa
movsb
inc
dec
push
in
inc
xchg
cmpsb
into
mov
push
ds
lods
xor
loop
jmp
leave
cli
push
xorl
insl
push
or
inc
loopne
subb
scas
les
jle
fldenv
push
sbb
repz
cmpsl
jecxz
sub
jns
jnp
js
je
adc
fsts
pop
lret
ljmp
fadd
cmc
cmp
rolb
ljmp
jg
enter
int
or
jb
and
mov
and
outsl
aaa
adc
subl
scas
cmp
subl
out
and
cmp
or
pusha
xor
pop
cltd
movsl
xchg
scas
mov
xchg
jb
pop
mov
pop
mov
xchg
pop
lret
mov
mov
ja
inc
dec
movsb
xchg
push
cmp
cwtl
out
adc
mov
scas
mov
mov
ret
and
and
lret
pop
mov
shlb
cwtl
movsl
fwait
lahf
mov
adc
int
sbb
cmp
rcl
pop
fsts
jne
fs
stos
adc
shl
mov
icebp
mov
pop
xor
shlb
inc
bound
jmp
jne
scas
arpl
data16
adc
ljmp
loop
sbb
ds
std
movsl
push
xor
mov
outsl
xchg
jecxz
xor
das
rcrb
popf
dec
lret
ds
movsl
mov
addr16
dec
scas
adc
and
sub
xor
daa
mov
cs
jle
inc
jns
in
mov
sbb
jns
xor
cmc
popa
xchg
mov
xor
in
dec
hlt
fidivs
test
mov
imul
in
jg
aad
mov
sub
mov
dec
gs
daa
insl
push
addr16
fistpll
mov
push
imul
test
sub
mov
pop
pop
rorl
lock
jg
aaa
outsb
jge
push
inc
sbb
sbb
fistpl
fisubl
mov
bound
dec
mov
mov
popf
and
sbb
mov
aam
sbb
std
ja
cmp
dec
sbb
movsl
sbb
ret
push
int3
notb
jno
loopne
push
inc
int3
outsl
into
pop
push
stos
jo
xchg
jae
div
cltd
lcall
pop
xchg
push
mov
xor
iret
push
cmc
xchg
mov
insb
cmp
add
push
jnp
sbb
push
stos
cmp
lea
xor
icebp
arpl
adc
xchg
inc
dec
dec
mov
insl
or
mov
test
mov
jmp
jmp
cmp
aas
shlb
lret
outsb
das
sub
insb
xchg
mov
xchg
daa
hlt
xchg
add
sbb
mov
pop
inc
call
shlb
mov
mov
dec
lret
in
mov
xchg
mov
xchg
cmc
push
jno
dec
fcompp
aaa
stos
subl
dec
fs
xchg
mov
sbb
jno
sbb
call
or
fsubp
inc
xor
test
pop
dec
divb
jge
sbb
and
enterw
sub
xor
adc
add
pushf
inc
test
leave
insl
aad
cmp
xchg
loopne
test
dec
movsl
push
mov
push
mov
call
push
hlt
xacquire
cltd
push
adc
daa
in
cs
dec
pop
adc
push
jge
push
loopne
or
sub
rcr
vmwrite
loope
fs
cwtl
bound
lret
adc
scas
lea
mov
jle
lods
xor
jl
adc
adc
xchg
push
lea
into
movsb
sub
dec
imul
sbb
jb
add
stos
jp
cmp
mov
cmp
pop
rclb
dec
push
jmp
mov
push
imul
jecxz
mov
jmp
inc
xchg
inc
orb
xor
sub
mov
ret
mov
fs
xchg
repz
dec
add
mov
xor
mov
add
push
inc
mov
xor
stos
into
or
sub
fsts
mov
repz
sbb
fdivs
jl
clc
push
pop
pop
loope
lods
mov
push
out
out
cwtl
lea
jo
aas
mov
cli
add
mov
call
popf
xor
push
jp
mov
inc
jge
aas
sub
add
adc
sar
sbb
cmp
sbb
add
jp
insb
xor
xchg
cld
dec
das
in
fcomps
das
test
push
repnz
enter
pop
fsubs
lods
rolb
mov
in
or
sarb
stc
andb
loopnew
out
or
cmp
loop
outsl
pop
and
mov
out
dec
roll
jne
fwait
pop
xchg
ficoms
popf
dec
jp
sub
mov
mov
lods
pop
lahf
xor
pop
adc
mov
cmc
stc
popf
mov
clc
push
mov
popa
dec
ret
daa
aad
jnp
arpl
icebp
pop
sahf
adc
shl
dec
mov
rcr
adcl
or
clc
pop
cli
mov
push
inc
xchg
cmp
pusha
pop
jb
call
stos
lret
lahf
fistps
aam
mov
dec
cld
and
pop
dec
icebp
xchg
xor
jmp
sbb
scas
inc
dec
cmpsb
cmp
add
cmp
ret
into
jb
mov
sub
mov
fmuls
adc
xchg
test
stos
sub
lods
scas
je
popa
lock
mov
mov
arpl
sbb
push
xor
pop
cld
test
cli
rorb
insl
popa
lods
fnstcw
in
mov
aam
ficoms
mov
jbe
jmp
fwait
push
xor
aam
ljmp
push
push
test
pop
movsl
pushf
sub
test
icebp
and
mov
clc
dec
sti
pop
add
jmp
mov
andnps
movsb
mov
insb
sbb
push
jmp
jbe
movsb
inc
sbb
dec
mov
xor
and
iret
push
pusha
pusha
aam
sbb
push
stc
repnz
aaa
jp
push
cmp
inc
adc
je
loopne
stc
xchg
sahf
xchg
pop
shll
pop
loop
pop
or
mov
mov
jmp
cmp
mov
in
cltd
push
addr16
out
out
pushw
mov
xor
pop
dec
ja
jge
mov
or
lret
arpl
jg
or
test
lea
into
jmp
jl
xor
mov
rorb
inc
fxam
pusha
add
imul
scas
mov
mov
xorb
inc
add
cmp
mov
icebp
mov
add
mov
adc
ss
jle
mov
dec
or
or
out
jg
mov
insb
inc
test
jmp
stos
mov
gs
mov
inc
lret
movsl
ret
sub
inc
lds
xor
mov
ds
xchg
inc
shlb
mov
push
aad
ret
ret
fcmovnu
mov
aam
imul
leave
mov
mov
inc
xchg
mov
sub
mov
sti
gs
lea
ja
mov
movsl
test
mov
cld
mov
dec
leave
cmpsb
hlt
dec
aam
xchg
push
inc
cs
pop
dec
out
fwait
jb
icebp
cld
imul
cmp
bound
mov
pop
out
jmp
shrb
test
aam
sub
add
popf
shrl
push
das
adc
xchg
arpl
test
stos
shll
test
repnz
dec
or
cmc
cmp
mov
cmp
dec
mov
pop
nop
ss
inc
les
fcmovnu
dec
loop
xchg
in
push
int
jle
es
cmp
cmp
fldenv
in
test
mov
cltd
out
lret
and
bswap
cmpsl
out
popa
daa
or
add
mov
and
mov
mov
loope
popa
adc
test
and
xchg
jo
leave
fsubp
icebp
out
and
fucomi
adc
repz
pushf
sbb
cwtl
cmp
xchg
int
imul
outsl
mov
dec
gs
rcrb
jno
leave
pop
sbb
inc
xchg
mov
in
rcrl
xlat
dec
test
pop
push
fistl
mov
fisttpl
mov
shll
xchg
xchg
fisubrs
roll
int3
mov
test
pop
lcall
lods
je
cmpb
push
push
jl
push
add
aaa
dec
lret
pop
ss
jae
enter
or
cmpsl
sub
lds
cmpsb
sbb
xor
push
pop
adc
adc
jge
movsb
ret
jp
clc
ret
cld
dec
mov
int3
movsb
rcpps
rcrb
enter
jne
or
inc
and
sub
lcall
cld
sbb
pusha
pop
je
leave
mov
inc
push
xchg
js
in
pushf
push
pop
out
jb
sub
xchg
dec
xor
dec
stos
scas
int3
cmp
rolb
pushf
icebp
gs
jns
int3
jmp
mov
mov
popf
lods
pushf
inc
arpl
ret
shr
nop
insl
push
mov
xor
mov
fsubs
push
aaa
lahf
test
scas
in
inc
cmp
cmp
mov
shrl
cmpsl
imul
mov
aad
std
ljmp
and
jecxz
mov
pop
mov
outsl
and
lea
xchg
ja
fwait
pusha
iret
push
and
repz
scas
cmpl
in
out
cs
insl
rcrl
lods
and
stos
jo
outsl
jge
imul
dec
rorb
mov
arpl
pusha
mov
sti
mov
clc
retw
js
sbb
xlat
arpl
adc
in
pop
add
shlb
sub
test
aam
shrb
imul
xor
sbb
push
push
cmp
mov
sub
adc
pop
cli
cmp
aam
sahf
push
mov
fiadds
mov
lret
cmpsb
outsl
sahf
mov
les
and
lret
xor
mov
imul
xor
movsl
in
jmp
mov
pusha
out
sub
cmc
pop
add
outsl
inc
imul
inc
repnz
jle
and
and
push
fisttpl
out
pop
pop
add
lock
mov
and
sti
in
sbb
jbe
xor
mov
pop
dec
push
lds
xor
jl
arpl
cs
outsl
mov
in
movsb
mov
das
fstps
jae
loope
cmp
mov
mov
loop
shr
shl
xor
rep
pop
jg
jge
mov
add
xor
push
push
out
ror
adcb
sahf
mov
icebp
filds
lock
in
mov
insl
pop
jns
cmpsb
fsubl
xchg
cmp
sub
ret
xlat
in
pop
mov
mov
dec
inc
das
std
shlb
xchg
mov
mov
stos
mov
lret
adc
xchg
rcrb
mov
mov
pop
ret
lds
jno
add
push
aam
or
or
in
sbb
pop
test
nop
fildll
sbb
inc
sahf
mov
fsubl
sub
mov
sub
test
in
lods
xchg
jbe
insl
xor
test
mov
enter
nop
xchg
mov
or
sub
cltd
sti
insb
mov
xor
jns
test
mov
aaa
push
dec
aaa
nop
lahf
nopl
lahf
sbb
enter
aas
out
pop
sahf
add
nop
mov
loopne
sub
cltd
cmpsl
lods
lret
mov
or
cmp
sub
fdivrl
sub
sbb
or
jl
insb
mov
mov
insb
mov
or
cmp
sub
fdivrl
sub
sbb
or
jl
insb
mov
mov
insb
mov
or
cmp
sub
fsub
int3
sub
sbb
or
jl
insb
mov
mov
insb
lea
or
mov
ret
xor
jmp
add
inc
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
arpl
inc
dec
xchg
rcll
sub
add
add
add
add
mov
add
mov
sub
pushf
add
add
add
add
add
add
add
add
xchg
push
add
xchg
dec
or
add
add
add
add
add
dec
add
add
jo
mov
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
pop
add
inc
add
test
add
add
add
add
add
add
add
add
add
adc
mov
outsl
add
mov
add
imul
add
add
push
add
add
add
add
add
add
add
add
mov
add
add
adc
cmp
pop
add
add
imul
add
pop
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
lret
add
inc
add
add
inc
add
add
adc
dec
add
add
adc
addb
add
add
add
scas
add
inc
add
mov
bound
xchg
add
cmp
test
add
add
add
add
add
add
add
imul
add
add
ret
add
inc
add
pop
add
add
add
add
add
add
add
mov
push
add
incl
pop
add
xchg
add
add
add
add
pop
add
add
add
pop
add
add
add
adc
push
add
add
add
add
jle
mov
add
and
and
dec
add
add
add
add
add
add
add
add
add
sub
in
add
xchg
push
add
add
add
inc
add
add
add
add
or
add
movsb
add
add
add
pop
add
push
add
add
add
add
add
sub
adc
add
or
add
add
add
inc
add
xor
movsb
add
dec
or
add
xchg
jo
or
xor
pusha
add
add
in
hlt
add
add
test
add
or
add
add
add
int3
add
add
add
add
add
xchg
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
repz
add
add
add
add
add
add
xlat
jnp
cmpsb
out
xchg
nop
outsb
aaa
lahf
mov
and
cmp
sub
cmp
lock
js
cmp
dec
and
lock
aas
inc
xor
aam
and
or
lret
jecxz
imul
hlt
fs
sti
loope
and
inc
xchg
xchg
mov
mov
mov
add
scas
or
cld
scas
jns
xor
repz
xchg
xor
int3
pop
mov
dec
dec
mov
jp
das
inc
push
sub
outsb
gs
jns
jb
sar
sar
xlat
ja
sbb
jne
mov
mov
xor
imul
loopne
scas
test
or
xlat
loopne
loopne
mov
scas
pop
push
or
lret
sbb
arpl
sub
mov
sbb
shl
scas
push
dec
mov
insl
fstl
popa
dec
push
call
vphaddbw
fdivrl
adc
and
pusha
xor
push
cmp
jmp
sub
xchg
xor
pop
sub
add
shl
mov
xchg
cmc
sbbb
jecxz
adc
sbb
dec
add
adc
inc
mov
or
jnp
sub
je
and
int
push
push
dec
or
jno
sub
imul
sub
js
pop
outsl
and
sahf
mov
inc
pop
push
xchg
adc
or
shll
aam
scas
cmpl
cs
push
rol
jo
dec
xchg
xchg
ja
pushf
jae
mov
dec
repnz
inc
aas
shl
and
mov
movsb
xchg
push
stos
pop
js
data16
fdivrs
pushf
mov
xor
pop
push
inc
mov
in
les
cli
or
stc
adc
loope
shlb
les
popa
xor
sub
sbb
push
cmpsb
mov
and
popa
jmp
xchg
pushf
lret
rcll
adc
pminsw
jmp
push
or
aam
sub
mov
dec
pushf
add
adc
mov
aam
cmp
dec
aaa
mov
ret
mov
cltd
popa
lock
or
loopne
cltd
test
jecxz
xor
push
and
and
mov
pop
adc
pop
pushf
inc
pop
mov
mov
leave
xor
and
sbb
mov
nop
pop
push
out
jp
add
lcall
fdivrl
bound
adc
fmuls
jl
mov
xchg
cmc
cmc
and
push
xor
pusha
nop
stc
es
fsubl
mov
movsl
or
jo
icebp
fldl
push
or
dec
cmpsb
loope
adc
mov
popf
jecxz
das
clc
dec
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
