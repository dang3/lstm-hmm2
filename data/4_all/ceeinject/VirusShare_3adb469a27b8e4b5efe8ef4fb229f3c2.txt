call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
pop
xchg
and
jo
mov
add
adc
inc
popf
push
mov
pop
xchg
sub
rcrl
jecxz
fstl
lods
popa
fnstenv
inc
popf
push
mov
std
mov
sbbl
shr
pop
xchg
insl
stos
jno
adc
and
push
sub
pop
lds
in
jge
daa
js
or
push
xor
cmp
push
inc
jbe
clc
test
popa
test
aam
jge
ret
int
fldcw
add
add
adc
mov
adc
dec
jbe
std
movsl
mov
jp
and
iret
xor
rcll
xor
mov
add
test
ret
sub
cmp
jmp
out
and
mov
jo
cmp
dec
mov
popf
insb
shl
mov
xchg
std
fisubs
pop
test
call
dec
mov
clc
in
sub
repnz
in
adc
add
mov
push
pop
mov
xor
or
and
adc
popa
mov
pop
pop
int3
or
xor
inc
mov
push
movsb
jl
mov
pop
popf
outsl
mov
or
ret
fidivl
adcl
rcl
fs
jge
push
fcomps
clc
xor
aas
pop
icebp
dec
lds
lea
shr
and
xor
add
adc
inc
popf
push
insl
mov
pop
xchg
sub
rcrl
int
fstl
lods
popa
mov
push
insl
mov
add
and
out
xchg
jns
scas
cmp
pop
add
dec
cs
mov
aad
pushf
cs
sbb
ja
flds
xchg
push
leave
jae
push
sub
stos
hlt
mov
adc
dec
mov
jo
mov
std
jg
out
mov
fidivl
out
or
add
stos
jmp
gs
movsb
add
rclb
push
push
out
jge
sub
push
dec
stos
sbb
lret
movsb
push
cmp
repnz
dec
or
cs
in
mov
push
fbstp
enter
ja
inc
fnsave
xchg
and
stos
or
mov
pop
add
add
test
push
hlt
push
ja
dec
test
xor
cmp
jb
xor
mov
mov
je
outsl
inc
cmp
jne
push
in
dec
lret
lods
ljmp
and
jo
mov
push
out
sbb
lods
ds
iret
sbb
dec
arpl
call
mov
icebp
lock
mov
cmp
mov
inc
divb
xchg
call
arpl
xchg
sub
sarb
pop
xchg
sti
adc
add
mov
outsl
push
jp
cmp
popa
xchg
and
cltd
mov
push
push
sbb
mov
mov
mov
rorl
stos
adc
leave
hlt
pusha
and
imul
jge
cmp
sub
outsb
shrl
dec
bound
dec
insb
cmp
mov
sbb
lcall
cmc
in
call
imul
and
sbb
pop
push
aam
enter
mov
iret
imulb
rcrl
sbbb
adc
jl
hlt
xor
test
jo
add
test
insl
and
push
repz
xchg
cltd
xchg
push
xchg
popa
shll
in
mov
aaa
and
pop
les
push
or
inc
and
fwait
mov
sti
addb
aaa
pop
and
test
and
mov
scas
pop
ret
mov
fcomps
loopne
sub
mov
pop
sub
mov
cltd
xchg
sub
cs
testb
nop
mov
cs
outsb
mov
rcrl
lret
mov
hlt
or
add
jl
inc
icebp
push
jae
sbb
lods
jo
js
push
lock
mov
push
das
xchg
mov
aad
inc
popa
bound
pop
fisttpll
mov
cs
sti
jbe
sbb
add
add
push
mov
or
pusha
repz
in
xor
adc
inc
cmp
icebp
push
loop
test
loop
cmpsl
rolb
rdmsr
jno
test
ds
dec
inc
clc
xchg
or
mov
inc
jl
mov
cmpsl
mov
outsb
ljmp
pop
cmp
cli
les
out
ds
sahf
cmp
mov
mov
popf
movsl
fsts
pusha
fcoms
and
in
sub
fdiv
ds
stc
cwtl
lcall
pop
push
cmp
dec
push
pop
sbb
in
xchg
iret
fs
repnz
shlb
cmp
dec
out
addl
out
sahf
xor
dec
mov
loop
mov
mov
jae
xsha1
cmpsb
mov
test
mov
jle
fisttpl
xchg
popl
sbb
cmp
adc
cmc
rcr
fiaddl
push
fld
inc
rcrb
mov
jecxz
repnz
or
fwait
cld
sub
lods
stc
inc
xlat
inc
push
popf
and
mov
jge
jmp
arpl
shrb
xor
in
imul
fnstsw
push
pop
mov
outsl
sti
push
andb
outsb
dec
jmp
shr
arpl
jge
xchg
jo
loop
add
xor
sbb
imul
test
test
fists
or
loop
arpl
dec
ret
rorb
imul
ss
aas
push
sbb
into
mov
jecxz
pop
push
xor
xor
bound
adc
jb
mov
jp
inc
nop
popa
imul
lea
sbb
ds
mov
push
fs
addl
pop
xchg
rolb
sbb
cmp
pop
adc
mov
mov
pop
push
mov
adc
nop
sbb
out
dec
je
popf
enter
in
mov
jne
adcb
shrb
mov
in
push
add
jne
push
mov
mov
aad
mov
aas
test
arpl
sub
push
xchg
adc
xchg
or
lret
xchg
xchg
push
popf
clc
rol
icebp
lcall
insl
mov
ss
mov
sub
fcmovnb
and
mov
mov
cld
mov
and
mov
lret
stc
ss
std
ja
fistps
jo
mov
test
ljmp
leave
fisttps
aas
imul
xlat
js
xor
inc
lcall
in
mov
xlat
sbb
jge
fisttps
pushf
inc
mov
fidivl
es
aad
insb
cmp
mov
psraw
cltd
insb
pusha
shr
cmp
and
arpl
xor
mov
in
enter
outsl
push
mov
test
and
inc
jne
dec
mov
outsl
rolb
iret
stc
into
pop
jmp
sbb
popf
mov
in
cltd
mov
int3
cmp
pop
loopne
xchg
test
sarb
jge
pop
dec
jns
inc
cmp
roll
and
sbb
adc
push
cmp
mov
dec
sub
cmpsl
xchg
cmp
pop
mov
sub
shlb
and
jo
adc
and
or
cmp
xor
inc
mov
xchg
es
adc
aam
std
add
xlat
cmp
ljmp
and
shlb
pop
inc
loop
int
repz
lret
loope
sahf
and
mov
daa
add
or
xchg
sarl
jle
loop
sbb
cmc
cmpsl
test
lret
pop
outsl
rcl
mov
movsb
dec
pop
sbb
mov
popf
jp
lods
cltd
mov
cmp
lret
xlat
in
xor
in
popa
xlat
add
xchg
cmp
push
shr
xlat
into
stos
lea
aaa
dec
sbb
or
scas
and
and
xlat
dec
fcmovne
pop
sub
mov
incb
fwait
inc
or
sub
jno
out
mov
pop
inc
push
lock
or
imull
or
in
lea
push
mov
popa
popa
popf
lods
loopne
or
inc
or
push
pusha
and
inc
repz
or
inc
jmp
loope
pop
seta
and
cld
out
push
mov
jg
jp
fdivs
mov
leave
pop
and
pop
mov
inc
leave
cmp
inc
ret
dec
fldl
mov
outsl
sub
loope
dec
xchg
xchg
and
cld
sub
iret
shll
jb
cmp
sbb
fcomps
fcmovu
fisttps
jae
cmp
lock
sbb
cwtl
sbb
cmpsl
clc
cmp
pop
fdivl
frstor
outsl
push
aas
sub
sbb
mov
dec
andb
or
push
xchg
lahf
movsb
or
arpl
sbb
rol
stos
outsl
adc
inc
idivb
pop
outsb
push
jbe
scas
lods
push
loope
outsl
xorl
scas
scas
jno
add
repnz
imul
or
xlat
sub
packsswb
lahf
and
pop
xchg
scas
ret
insl
mov
cltd
cmp
push
std
pop
test
enter
lock
pop
movsb
mov
push
jp
sbb
jge
in
test
push
adcb
xor
pushf
ljmp
es
pop
pop
xchg
icebp
xor
divl
jl
lahf
in
pop
popf
and
cwtl
jmp
inc
mov
mov
ss
dec
and
adc
add
out
dec
inc
popf
loop
and
movsb
adc
or
xor
and
mov
xor
xchg
inc
jns
mov
xor
mov
divl
movsb
std
cltd
stos
movsl
int3
test
mov
or
hlt
cli
lds
fwait
and
fsubrs
cltd
xchg
pop
jo
jmp
sub
inc
mov
and
aaa
lahf
int
mov
clc
adc
sti
cwtl
repz
mov
mov
dec
lods
pop
popl
sub
ljmp
sbb
push
xor
push
lret
adc
mov
test
sbb
xchg
aad
fwait
out
test
int
mov
or
push
inc
shll
aam
xchg
cmp
movsl
xor
dec
iret
out
jae
sub
jecxz
jae
pop
xchg
lock
push
push
pop
pop
dec
data16
es
or
dec
out
stos
pop
subl
xchg
mov
decl
jo
adc
xchg
push
push
pop
ljmp
xor
cmc
push
jecxz
in
jae
push
lds
stos
or
xor
or
xlat
ror
jl
fists
daa
divb
sti
xor
dec
adc
stos
pop
mov
mov
test
dec
cmp
cmpsl
xor
pop
movsl
sub
or
push
adc
mov
mov
add
dec
cwtl
outsb
mov
dec
or
imul
rorl
cmp
add
movsb
jl
sub
sbb
dec
je
pop
test
aas
repnz
nop
stos
addb
shl
pop
leave
cmp
mov
loopne
dec
lods
mov
faddl
sarl
cmpsb
or
mov
cmp
inc
out
flds
sub
jg
xchg
pusha
jp
aad
ss
daa
lods
cmp
arpl
pop
test
pushf
cld
jp
rol
push
jp
cmp
lahf
loope
cmp
cmp
xchg
add
xor
fisttps
and
xchg
daa
test
sub
jl
out
repnz
out
cmp
dec
xchg
mov
repz
test
rol
pop
rcrb
lock
xchg
jbe
or
xor
push
and
mov
sub
mov
stos
mov
mov
mov
ja
or
fchs
xchg
in
ret
inc
push
jb
and
mov
and
das
cld
mov
cli
mov
setp
dec
inc
repnz
out
mov
cmp
xchg
xorl
cmp
decb
xchg
cmp
clc
and
dec
mov
jmp
test
or
push
hlt
push
dec
push
outsb
imul
sbb
out
push
mov
jge
push
cld
mov
mov
lret
mov
js
stc
popa
fmuls
mov
pop
scas
and
jnp
mov
call
mov
inc
sub
arpl
push
aaa
adc
out
inc
mov
dec
mov
dec
push
loop
cwtl
lods
shlb
lret
sub
jl
ror
sbb
gs
aaa
ss
sbb
out
ds
std
gs
aad
faddp
mov
pop
loop
mov
jp
ss
int3
sub
cli
dec
mov
xchg
jns,pt
inc
push
pop
xchg
in
popa
push
lds
xchg
mov
test
xchg
loopne
mov
mov
add
lcall
mov
inc
movsb
stos
jp
lret
popa
xor
or
stos
xchg
push
mov
pop
ror
inc
and
sub
icebp
test
shll
inc
fsts
fcoms
adc
xor
mov
movsb
and
les
jae
in
imul
cmp
xchg
xchg
lods
xor
xchg
call
lock
out
cmc
out
out
stos
ljmp
jecxz
out
mov
push
sbb
movsl
hlt
stos
sbb
pop
mov
rclb
inc
mov
sub
movsl
ljmp
data16
mov
aaa
mov
cmpsb
add
incl
ss
jnp
inc
incl
ja
pushl
mov
dec
pop
out
sub
daa
lds
test
pop
mov
scas
and
jae
fldenv
dec
in
cmp
jecxz
mov
and
nopl
jl
lahf
rcrb
or
or
data16
jmp
mov
jmp
pop
inc
mov
insl
cmp
divb
cmp
mov
jbe
cs
fdivrs
xor
or
and
xchg
sbb
ds
addr16
std
lahf
ror
sub
fisubrs
jne
adc
mov
inc
cltd
inc
mov
aam
loop
jge
call
jbe
hlt
loope
push
mov
sbb
add
mov
dec
mov
lock
iret
cmpsl
sbb
or
shl
add
jno
pop
jecxz
xor
repz
test
test
and
xchg
mov
leave
xor
jle
es
or
int
ja
push
in
int3
cmp
ficoms
inc
mov
and
add
rorb
or
and
stos
test
repnz
int3
enter
push
xchg
into
mov
mov
jg
icebp
insb
scas
xchg
ret
ljmp
std
dec
sbb
mov
add
pop
lahf
xor
push
lock
fnstenv
es
cwtl
mov
shlb
pop
fwait
test
imul
sub
sbb
loopne
xchg
add
or
repz
sbb
arpl
sarb
xor
jnp
jecxz
sub
push
mov
pusha
add
xchg
pop
push
cmp
cltd
xor
int3
cmp
jmp
arpl
dec
inc
xorl
test
fcom
pop
jp
ja
jp
xor
adc
push
fstpl
test
add
in
sub
outsl
repnz
pop
fsubs
icebp
xchg
aaa
imul
movsl
loopne
xchg
aas
pop
inc
repz
dec
insl
jae
sbbb
test
movsl
ljmp
dec
insl
dec
dec
lret
aaa
adc
daa
mov
add
mov
push
adc
in
call
mov
jno
fsts
or
adc
in
inc
mov
xchg
adc
sbbl
in
push
sti
cmp
inc
stos
push
test
or
dec
jb
cwtl
sahf
cli
dec
push
fistps
jecxz
das
pop
add
pop
mov
jo
mov
jl
push
inc
mov
add
xchg
xchg
lcall
sbb
fisubs
movsb
mov
out
inc
icebp
hlt
add
push
xchg
or
sub
jmp
les
sahf
out
sti
negb
pop
push
or
jge
push
cli
cmp
arpl
fwait
push
cmc
out
daa
xor
mov
call
pop
imul
push
adc
ret
sahf
cmpsl
sbb
inc
push
pop
in
add
push
scas
mov
cmpsl
hlt
add
dec
in
inc
sub
push
mov
aaa
pushf
xchg
add
scas
or
mov
mov
outsl
int
mov
mov
pushf
std
adc
test
dec
test
sub
xchg
repz
cmp
sub
dec
fsubs
insl
fisubl
mov
int
or
fs
xlat
mov
mov
xchg
aad
dec
adc
aad
pop
inc
or
xor
jns
inc
or
jg
popf
repz
or
cmp
les
bound
loope
inc
std
inc
dec
fistps
xchg
sbb
or
sbb
lret
aam
scas
jae
sahf
sbbl
loope
clc
mov
sub
jne
stos
mov
xor
out
mov
jno
mov
aam
dec
rclb
lock
push
lahf
adc
cltd
in
jl
lods
or
or
imul
xchg
dec
add
leave
xchg
adc
or
fiaddl
adc
adc
out
iret
aas
push
rolb
jnp
mov
and
test
ja
inc
test
orl
cld
insb
das
lods
inc
dec
stos
push
test
adc
shlb
jne
int3
pusha
cmp
inc
cmp
mov
lret
sbb
iret
shlb
sub
jge
pop
aam
enter
push
pop
rolb
xchg
push
ljmp
xchg
scas
pushf
inc
je
loop
sub
cmpsb
push
jg
cmp
test
or
imul
scas
jb
in
push
lea
pop
andps
xchg
out
lret
das
lock
cwtl
and
je
mov
dec
aaa
inc
push
mov
pop
ja
xchg
rorb
nop
adc
jns
jle
movb
mov
aad
mov
ja
rorb
adc
stos
jmp
pop
add
mov
xchg
loope
xor
repnz
outsb
pop
iret
cld
repz
inc
sti
cli
mov
pop
mov
pop
andb
push
hlt
jg
cmc
jmp
xchg
out
arpl
arpl
sub
xchg
shlb
dec
imul
xchg
sarb
pushf
adc
fimuls
pop
popa
popf
jbe
je
daa
sti
insl
les
shll
push
sahf
push
mov
pop
orb
xchg
outsl
xchg
mov
jno
xchg
push
pop
inc
push
adc
inc
jge
insb
push
iret
into
xchg
fxch
psllw
outsl
xchg
popa
lods
and
scas
mov
das
lahf
popa
ret
xor
add
cmp
mov
imul
and
push
or
jle
fiadds
pop
test
push
pusha
mov
into
clc
add
aad
icebp
icebp
les
mov
in
cmp
push
iret
sbb
mov
aam
stc
adc
sbb
repnz
xorl
ljmp
cmp
inc
or
adc
jge
sbb
into
mov
dec
out
mov
pop
mov
pop
adc
pushf
pop
mov
or
dec
repz
iret
xchg
pop
je
sbb
dec
adc
mov
push
imul
jle
mov
aam
insl
xlat
or
mov
mov
roll
inc
or
shlb
shr
clc
lods
inc
call
out
sahf
mov
and
inc
add
mov
dec
add
and
fmull
mov
or
cmpsl
cmpsb
mov
cmp
in
into
push
dec
fildl
rolb
and
cmp
pop
dec
or
test
inc
sbb
xor
jne
and
pushw
mov
adc
sahf
xchg
sbb
lahf
cwtl
out
push
mov
leave
push
or
int
inc
idivl
jne
push
pop
movl
ret
mov
jbe
and
push
adc
dec
pop
cmpsl
shll
mov
jmp
jnp
fsubrl
mov
or
pop
cmc
iret
outsb
dec
cmp
or
daa
lods
push
add
or
push
repnz
insl
std
scas
mov
mov
aad
fmull
jle
fstpt
stos
mov
in
mov
sbb
movsb
mov
push
mov
adc
mov
xchg
or
xchg
pop
sub
sbb
jl
rcll
adc
outsl
mov
mov
setnp
test
jecxz
repz
or
adc
mov
and
xchg
inc
jmp
cmpsl
les
pop
daa
fstpt
mov
aam
sub
sub
popf
fadd
test
les
jb
outsl
and
sahf
cld
loope
arpl
or
bound
jnp
or
rclb
das
jne
cmp
sbb
ret
and
inc
mov
mov
push
lahf
int
dec
cmp
jnp
ret
push
dec
arpl
repz
pop
xchg
cmp
mov
cmp
mov
mov
xchg
pushf
xchg
loop
mov
fwait
push
inc
push
jno
stos
imul
push
fdivr
push
fcoml
jmp
dec
push
add
daa
xchg
lcall
and
test
pop
fsubrl
frstor
fdivrl
or
mov
loopne
pusha
adc
jmp
sub
imul
shl
pop
lods
sub
aad
xchg
outsl
mov
call
jmp
or
pop
test
cmc
fsubrl
pushf
das
mov
lods
pop
cmp
xchg
xor
outsb
out
adc
cmp
out
les
sub
pop
and
repnz
push
xchg
cmpsl
in
jl
mov
xor
test
repnz
into
rorl
pop
jns
xchg
mov
pop
jb
inc
adc
faddl
fildll
pushf
scas
pop
add
and
adc
fsts
xchg
xor
andb
jmp
cld
dec
xchg
mov
inc
or
mov
adc
jnp
jl
dec
out
bound
cmc
or
movsl
pop
insb
icebp
std
das
daa
or
jg
bound
xor
inc
xchg
cmpsb
enter
sahf
scas
mov
push
andl
push
inc
cmp
or
hlt
mov
mov
push
xchg
iret
data16
sarb
xchg
cmp
fistpll
xlat
cld
and
pop
lret
sub
shll
mov
cltd
mov
xchg
test
iret
int3
jl,pn
push
out
imul
imulb
mov
mov
sbb
xchg
nop
test
xorl
js
movl
sbb
xor
add
adc
inc
popf
push
insl
mov
pop
xchg
sub
rcrl
int
fstl
lods
popa
mov
push
insl
movsl
jle
pop
sbbl
or
and
xor
add
adc
inc
lods
push
jne
push
mov
xorl
or
fiadds
fwait
addr16
data16
xor
scas
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
mov
mov
aaa
sub
sbb
or
jp
push
dec
push
dec
inc
mov
xchg
mov
fcmovnbe
lret
cmp
sub
pop
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
cmp
outsb
pop
sbb
add
jnp
and
lret
mov
clc
xlat
clc
fcmovnbe
jo
lret
add
or
sub
adc
pop
xorb
in
or
rolb
icebp
lret
je
sbb
mov
fadds
xchg
push
pop
mov
ds
stos
mov
pusha
ljmp
xchg
mov
fmuls
hlt
cli
lds
cmpsl
fsubrs
stos
and
pop
addr16
test
cmp
cmp
in
in
dec
sbb
jecxz
fwait
sbb
inc
lret
push
pop
enter
adc
jecxz
fcmovnb
lret
inc
push
lret
pop
jo
call
add
inc
and
jle
andb
and
std
daa
outsb
pop
xchg
punpckldq
pop
inc
dec
inc
in
stos
cmpsl
fwait
xchg
mov
fcmovnbe
lret
cmp
sub
sbb
or
jnp
imul
dec
cs
fsubr
cmpsl
idiv
fwait
mov
pushf
cltd
scas
xchg
push
push
cltd
push
je
outsl
inc
movhps
adc
push
aas
push
in
call
cmc
sahf
mov
mov
imul
push
or
push
pop
int
test
clc
ljmp
out
xlat
lret
cmp
sub
sbb
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
cmp
sub
sbb
or
jnp
imul
dec
inc
mov
and
loopne
test
aad
jns
mov
jp
cmp
inc
and
or
in
or
dec
sub
js
mov
mov
cld
adc
mov
cld
sub
insl
std
dec
inc
aam
cmp
mov
push
ud0
fstl
mov
daa
xchg
push
xlat
out
cmpsb
mov
sub
xchg
fcoms
and
in
ret
inc
stc
shll
outsb
cld
xchg
scas
imul
imul
clc
push
adcl
sbb
stc
xchg
fmull
shlb
dec
dec
movsb
mov
call
cmp
xchg
pop
arpl
pop
and
repz
lods
cmp
inc
repz
data16
mov
inc
and
jmp
fs
dec
lock
lock
es
lods
rol
sub
iret
insl
fcmovne
inc
jo
inc
nop
fs
movsb
aad
daa
lret
and
cld
aaa
push
test
xchg
shr
mov
adc
pop
cmc
mov
sub
add
cmp
mov
adc
inc
pop
call
cmp
lea
fsubrl
movsb
mov
es
cmp
mov
jb
inc
gs
imul
clc
outsb
nop
pop
lods
mov
sbb
jae
shlb
mov
ljmp
or
test
aaa
test
jne
mov
sbb
imul
mov
jns
jnp
icebp
jle
dec
sahf
pushf
repnz
loop
rcr
int
add
notl
hlt
cli
push
cmpsb
xor
pextrw
aas
xchg
icebp
adc
or
sbbb
pop
jl
mov
aad
rclb
ljmp
adc
and
in
arpl
es
mov
mov
das
sub
les
mov
mov
nop
test
mov
iret
out
mov
setno
and
xor
ficoml
in
fldcw
dec
mov
xor
insl
aas
add
jp
adc
dec
loope
repz
push
repz
xor
shlb
jno
fnstcw
movsl
push
fwait
mov
movsb
mov
adc
add
ljmp
and
clc
jb
sbb
ljmp
test
movsb
and
aaa
push
cltd
icebp
stos
test
sbb
enter
lahf
dec
decl
jo
js
sbb
cmp
fsub
cwtl
push
dec
cli
dec
ret
ljmp
push
xchg
inc
int
cld
add
fsubrs
ljmp
jmp
jl
pop
jge
cmc
mov
cmp
daa
adc
and
addb
lahf
fldl
adc
mov
adc
movsl
jl
adc
push
xchg
pop
push
cmp
xor
repnz
movsb
inc
mov
sub
ret
shl
arpl
in
and
test
and
arpl
rolb
sbb
sti
mov
je
jnp
ss
movsb
stos
pop
pop
loopne
cmp
inc
call
ja
sarb
jl
dec
jbe,pt
stos
popa
ja
or
xor
pushf
xor
nop
mov
aam
loopne
pop
inc
rdtsc
in
xchg
in
xchg
mov
push
movsl
or
sub
jecxz
shl
movsb
daa
xor
ljmp
xchg
and
cmc
rcl
xchg
push
lods
orl
jecxz
xchg
push
movsb
jp
rcll
sbbl
dec
nop
lods
pushf
sbb
hlt
lret
push
pxor
sub
push
adc
sub
xchg
or
xchg
loopne
dec
stc
inc
fucom
cmp
out
sti
dec
inc
lods
cwtl
adc
imul
movsl
inc
jecxz
jmp
add
push
imul
gs
push
xor
cmp
xchg
and
sbb
fstps
inc
cmp
mov
sub
bound
dec
insl
mov
lcall
mov
ja
push
in
jb
jl
not
jnp
notl
mov
jg
stos
mov
xor
dec
add
sbb
aaa
fstl
inc
cld
cld
xor
lock
jg
or
xor
int
sub
lahf
bound
cmp
frstor
mov
icebp
sarb
push
mov
pop
aaa
mov
push
sbb
mov
lds
add
roll
out
sti
ret
sub
or
push
iret
in
mov
fsubrs
fdivs
mov
mov
repz
sahf
pop
sub
cli
outsb
stc
jp
cmp
lcall
fucomp
add
pop
cwtl
pop
test
cmpsl
lcall
push
neg
fmulp
pop
jae
dec
scas
mov
jnp
out
movsl
movsl
add
loop
push
push
arpl
lds
cmp
sbb
sahf
inc
stos
push
repnz
add
push
lds
xor
jge
aam
mov
and
fs
xor
repnz
sbb
cmp
pop
adc
push
daa
cmp
xchg
sbb
cmc
cmp
push
jp
les
mov
hlt
test
pushf
insl
pop
fidivl
loop
lcall
je
scas
movsb
or
stos
adc
inc
cwtl
xchg
xchg
or
in
push
and
out
out
ret
fwait
mov
lahf
cwtl
mov
push
push
fsubs
mov
dec
lods
cmp
insb
push
out
or
sbb
add
lea
push
mov
mov
jbe
and
imul
mov
mov
push
inc
ja
cmp
cmp
push
inc
or
cli
stos
fcomps
shrb
sub
sub
push
fwait
icebp
push
xor
push
push
mov
add
neg
insl
push
mov
inc
mov
or
inc
shrl
cmc
xchg
lret
jp
stos
lea
scas
dec
mov
cs
scas
lahf
imul
and
fs
rolb
jno
imul
mov
and
icebp
lds
movsb
fs
into
adc
sub
mov
loope
mov
push
test
push
aas
mov
dec
jecxz
ss
mov
inc
push
imul
push
nop
push
push
jecxz
jl
mov
inc
cmp
sbb
out
mov
cmp
mov
repz
sbb
mov
daa
jmp
mov
cmc
not
stc
shlb
dec
push
inc
lock
fsubrs
inc
cmp
xchg
inc
lret
jbe
jmp
jae
dec
mov
in
repz
dec
movsb
das
shl
ret
imul
ret
scas
add
popf
inc
adc
lds
push
movsl
fwait
pop
jg
sti
data16
scas
push
push
push
fisttpll
adc
cmp
test
in
imul
fnstcw
pop
scas
and
jmp
push
inc
pop
dec
psubw
lods
leave
pop
adc
inc
push
mov
fimull
out
mov
inc
push
mov
faddl
mov
mov
jns
clc
sbb
adc
adc
cmpsb
pusha
ficomps
push
scas
ja
gs
out
cwtl
mov
test
inc
dec
daa
int3
dec
pop
adc
pop
daa
mov
pop
sub
cmp
popa
push
les
jb
ja
push
stc
sub
testl
loope
ljmp
out
sbb
cwtl
mov
dec
adc
inc
hlt
cmp
pop
lea
sub
jbe
cmpl
adc
ja
dec
pop
adc
lret
dec
stc
arpl
sbb
add
pop
dec
ja
mov
repz
sbb
push
imul
jecxz
and
mov
arpl
int
pusha
int3
enter
scas
push
div
nop
xchg
sbb
push
xor
ret
testl
iret
cmp
sub
insl
lcall
xor
sbb
pop
mov
mov
out
lock
lret
and
scas
bound
out
mov
js
cli
insb
or
mov
and
cld
sbb
call
adc
andl
add
mov
imul
icebp
and
fnstcw
mov
or
sub
stc
shll
adc
cld
cmp
push
sbb
js
shll
cmpsb
notl
inc
shlb
mov
js
imul
imul
mov
dec
sbb
xor
jl
mov
jmp
dec
adc
sarb
cmpb
rclb
out
sub
arpl
loop
adc
cmp
jl
lret
xchg
test
pushf
push
or
push
imul
rclb
mov
push
add
aad
jo
sub
mov
xchg
nop
rcrb
xor
add
jb
xor
xchg
and
in
mov
jecxz
inc
and
in
add
jg
jle
mov
lret
int
push
jecxz
push
mov
mov
mov
hlt
out
push
jl
mov
mov
inc
xor
pop
fnsave
pop
test
mov
push
roll
mov
lods
ret
add
dec
roll
sub
jg
inc
mov
cmp
xchg
sub
divb
push
xorl
lcall
out
sti
loop
sbb
lret
xor
push
shrb
fcmovne
mov
int3
add
dec
mov
adc
pop
xor
xchg
stos
push
sbb
pop
lods
add
add
movb
push
push
stos
shll
inc
testb
sbb
and
sti
and
fistpl
lret
sub
cmp
sahf
loop
pop
jnp
mov
xchg
dec
cmp
fnstcw
mov
nop
pushf
iret
dec
sbb
and
push
ret
or
jae
jmp
arpl
xchg
enter
stc
ret
or
iret
lods
xchg
push
or
push
inc
out
add
cmpsl
cmp
push
mov
lods
push
sub
ljmp
or
dec
movsb
mov
xchg
xchg
cmp
xorb
mov
pop
sbb
imul
shlb
sbb
dec
mov
pop
push
jmp
inc
add
fst
loopne
cmpsb
in
lock
or
cmp
test
inc
push
mov
loope
push
xchg
aam
cmp
frstor
adc
in
in
lret
outsb
jne
fs
jns
cmp
push
xchg
les
mov
faddp
cmp
pop
and
fnsave
cmp
movsl
icebp
and
je
jge
fnsave
imul
xchg
sbb
enter
movsl
adc
or
insl
mov
cmp
enter
dec
inc
xor
cmp
cmp
jg
adc
das
and
into
xor
call
stc
mov
js
xchg
push
and
xchg
idivb
jnp
mov
dec
push
decb
out
inc
shlb
add
jl
sub
popa
xchg
mov
fldt
inc
insb
ds
jbe
fistps
pop
outsl
scas
dec
pop
dec
jmp
push
negl
adcb
inc
adc
xchg
sbb
cltd
lock
push
mov
push
in
roll
stc
xchg
xchg
jp
xor
jne
iret
pop
cmpsl
cli
xchg
jno
divl
xor
loopne
jmp
xchg
sub
push
push
jnp
sub
mov
divb
fidivl
movsl
cmp
or
and
inc
xor
inc
xchg
add
pop
dec
sub
int3
aad
cmc
aaa
jg
mov
cmpsb
pusha
daa
scas
loop
add
imul
xor
xchg
mov
sub
add
loope
std
leave
xchg
dec
adc
nop
test
xor
scas
cmpsl
ret
cmp
ret
pop
xchg
stc
dec
and
mov
pop
cmpl
mov
jo
or
cmpsl
xchg
movsb
leave
loope
or
aad
or
cli
lret
rclb
inc
sub
rolb
push
es
mov
aad
jg
scas
sbb
cmp
enter
scas
and
dec
mov
xchg
sbb
adc
inc
sub
sub
pop
xor
dec
fld
xlat
pop
xor
jnp
or
jns
lahf
xchg
fbstp
mov
xchg
cmpsl
xchg
sbb
pop
lcall
dec
dec
pop
pop
stc
adcl
xlat
bound
sti
sub
and
int3
add
jle
adc
loop
mov
lods
mov
outsb
sub
or
sbb
cmp
pop
lock
mov
cmp
xchg
fstpl
stos
cmpsl
mov
int3
shrb
loopne
mov
imulb
xchg
loop
mov
add
mov
mov
loope
xchg
jg
xor
and
rcrl
mov
add
aas
in
dec
lea
mov
lock
adc
push
enter
popa
fdivl
sbb
push
jl
xchg
shrb
out
leave
fcompl
scas
dec
jno
jae
orl
and
cmpsb
mov
fbstp
int
add
fisubl
bound
fisubs
fwait
add
push
xor
test
xchg
ja
adc
add
scas
cmp
jl
cmp
mov
lret
stos
mov
test
sahf
xor
or
int
test
repnz
std
addr16
pushf
cmpb
push
mov
inc
xchg
mov
sub
mov
aad
dec
jnp
outsb
andb
aad
inc
inc
push
mov
rcrb
xor
jo
cmpsb
cwtl
xor
rcrl
daa
decl
movsl
subl
or
xchg
xorb
in
icebp
adc
lea
mov
adc
cmpsb
xor
mov
insb
clc
jge
scas
icebp
mov
sub
jne
add
sbb
cmp
cmpsl
nop
cmpsl
push
mov
push
outsb
and
ret
xor
test
xchg
aad
jne
loop
mov
sti
inc
push
add
mov
push
sbb
rolb
xor
cmp
movsb
adc
adc
test
js
pop
xchg
fimull
dec
cltd
insb
sbb
jge
es
sbb
pop
test
cmp
inc
test
aad
test
or
pushf
outsb
hlt
cmp
outsl
jecxz
fs
sbb
xor
out
mov
cli
dec
push
popa
add
into
pop
mov
add
cmpsb
adc
xchg
movsb
push
test
fsubl
jecxz
sbb
in
test
int
mov
out
shl
lret
jl
push
pop
mov
iret
cltd
mov
xchg
fsubl
dec
mov
cmc
inc
lock
jbe
scas
jno
stos
mov
mov
mov
and
adc
les
push
push
mov
jno
push
xor
sub
stc
test
fisubrs
cmp
fisttpll
rorl
cmp
mov
push
jnp
push
fildl
lea
daa
inc
jne
insl
subl
and
push
lahf
mov
sbb
cwtl
adc
fs
loop
test
mov
jns
aaa
cmpsb
pop
lahf
mov
push
jecxz
adc
call
adc
ljmp
xor
hlt
xlat
pop
mull
and
scas
xchg
shr
pop
ds
hlt
sahf
mov
dec
sub
enter
xor
push
xchg
cmp
in
scas
aad
dec
pop
stos
mov
cs
lock
ja
daa
dec
inc
test
lahf
xchg
cli
sbb
stos
xchg
inc
inc
add
pop
addr16
mov
fstp
mov
sub
jle
jns
insb
xchg
dec
mov
sbb
lret
fcoms
std
insl
icebp
xchg
push
insb
dec
push
shll
dec
xor
inc
aaa
lods
shr
or
nop
bound
int3
xlat
fisubrs
fldl
into
jp
mov
stc
mov
mov
movsl
scas
mov
gs
mov
mov
lea
xor
mov
inc
int
cs
out
add
clc
rorl
adc
lods
or
aas
pop
cli
cwtl
push
pop
xorb
adc
fcomip
dec
jmp
pop
outsl
das
sbb
in
scas
jg
push
push
jg
adc
sbb
or
adc
cmc
dec
dec
cmp
dec
pop
test
popf
sub
inc
stc
loop
int
push
sbb
sub
cmp
inc
xchg
aam
cmovo
lods
fstpl
add
out
xchg
inc
movsl
pushf
int3
aas
inc
adc
pop
loope
aad
mov
jge
in
imul
xchg
aaa
mov
test
inc
cld
call
mov
icebp
icebp
test
arpl
inc
int3
jge
push
rolb
sub
lret
and
ret
cmpsl
out
jno
push
jle
lahf
xchg
sahf
daa
movsb
fiadds
mov
pop
pusha
jbe
mov
pop
push
sub
adc
cmp
push
mov
mov
outsl
inc
jmp
stos
jbe
dec
sub
aam
movsb
imul
dec
sub
cmp
nop
jbe
jg
sub
sbb
lods
jl
mov
ss
into
xchg
mov
test
cmp
push
leave
sub
xlat
jae
test
outsl
xchg
imul
or
lret
sbb
mov
pop
add
dec
or
dec
adc
inc
int
adc
sub
pop
sub
xor
nop
out
inc
xchg
test
sbb
leave
in
add
rolb
sbbb
fnsave
call
ljmp
outsb
cmp
bound
cmpsb
bound
daa
sbb
mov
mov
into
push
test
mov
mov
aaa
out
pop
ret
dec
jecxz
ds
sub
adc
fisttpl
jge,pn
mov
push
je
add
xchg
daa
and
dec
add
imul
cmp
cwtl
aaa
push
es
cmp
mov
inc
cwtl
dec
imul
icebp
mov
addr16
add
add
jo
fstps
sahf
test
mov
pop
mov
xor
test
jbe
inc
push
fsts
stos
call
scas
sub
push
data16
pop
cmp
push
jl,pn
mov
mov
sub
js
insb
mov
stos
ja
fwait
js
cmp
cmp
pop
mov
mov
push
in
movsb
mov
cmp
data16
stos
js
vpslld
push
mov
adc
adc
fimull
xor
inc
jo
cli
xor
sub
jbe
jl
fcmove
shll
pusha
mov
inc
push
lret
mov
pushf
push
lcall
rorl
mov
add
pop
iret
shrl
adc
and
out
bound
cmc
adc
lcall
shll
mov
push
adc
xchg
xor
stos
or
sub
pusha
inc
mov
lods
repnz
cmpsl
outsl
pop
pusha
fbstp
inc
add
jl
outsb
xor
adc
sub
shrb
jge
jecxz
repnz
idivl
and
push
mov
sub
call
dec
insl
scas
push
mov
test
in
and
mov
dec
insb
adc
jae
cmp
shl
and
xor
shrb
push
or
jo
je
stc
mov
arpl
xchg
push
mov
dec
je
xchg
push
add
lret
lods
pop
inc
lcall
jp
push
fadds
mov
out
pop
and
pop
add
test
call
into
xchg
inc
std
cmc
imul
data16
movsb
jne
rorl
inc
push
jge
jle
sbb
dec
cmpsl
in
mov
insb
incl
aam
mov
pop
cmpsb
mov
and
and
xor
mov
sbb
fdiv
or
lods
jl
movsl
orb
wbinvd
dec
fisubs
aaa
push
adc
xchg
repz
dec
or
sti
ss
les
mov
push
jge
out
mov
mov
lock
push
div
lods
mov
mov
lock
adc
aas
mov
push
adc
stc
xor
out
sbb
mov
aam
dec
xor
jmp
push
fmuls
jnp
adc
loopne
fsubrp
movsb
faddl
test
sbb
scas
push
enterw
test
in
pop
neg
insl
push
std
inc
es
aam
cltd
jae
and
cmp
inc
push
arpl
and
pop
int
cmp
mov
sub
mov
xchg
out
dec
dec
or
push
mov
int3
int
dec
lcall
daa
jb
into
pop
ljmp
gs
add
inc
pop
mov
stos
jmp
test
das
imul
loop
sbb
arpl
push
daa
mov
in
inc
hlt
push
shrl
pop
push
fdivs
les
fimull
test
push
subb
repz
cmc
int3
icebp
lods
test
inc
aas
pop
dec
xchg
pop
aas
imul
xchg
in
xor
cwtl
popf
sbb
dec
xor
mov
pop
sbb
into
cs
repnz
dec
push
call
sarb
cmpsl
arpl
jmp
fcmovnbe
lret
cmp
sub
sbb
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
cmp
sub
sbb
or
jnp
imul
dec
inc
mov
pop
mov
fcmovnbe
lret
cmp
or
jnp
imul
dec
inc
mov
xchg
mov
fcmovnbe
lret
cmp
sub
or
jecxz
movsb
test
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
jp
dec
insl
pop
jge
sub
jae
bound
ljmp
ljmp
mov
jp
dec
insl
pop
jge
or
sbb
mov
out
mov
mov
dec
jne
sub
add
ljmp
std
ret
repz
sti
hlt
mov
cmp
sub
push
cmp
xorl
mov
pop
push
loope
sbb
in
addl
cmpsl
in
mov
dec
aam
inc
std
pop
std
push
or
lock
mov
fiaddl
pop
sub
ljmp
js
popf
xor
das
sbb
fisttpl
sub
jb
ljmp
add
bound
jne
mov
xchg
sub
sbb
inc
push
fstp
test
std
daa
in
adc
popl
inc
inc
mov
shlb
sti
cld
cmc
pop
xchg
mov
int3
nop
leave
xor
lahf
in
xchg
fidivrs
lods
xor
jp
dec
jge
sub
cmp
ljmp
in
xchg
mov
fldcw
adc
insb
aas
jl
pop
jae
outsl
inc
pop
push
stos
movsb
movsl
test
loopne
into
into
lods
into
shrb
or
sbb
push
das
or
push
mov
mov
iret
out
repnz
rcrl
and
or
popa
cmp
ljmp
std
stos
lea
mov
dec
insl
pop
jge
or
sbb
lret
std
stos
lea
mov
icebp
dec
jle
lock
aad
pop
lea
and
or
fwait
and
movsl
dec
sahf
lahf
add
push
dec
adc
push
dec
into
stos
inc
jmp
and
jo
xor
jbe
fbld
movsl
cmpb
xchg
lds
mov
add
dec
xchg
icebp
loop
rcrb
adc
loopne
mov
xlat
inc
orb
int
lods
jg
rcr
shrd
jge
jbe
push
adcb
push
shl
fwait
scas
aad
mov
and
sub
xorb
out
aaa
push
push
cmp
repnz
xchg
xchg
xchg
stos
xchg
add
mov
xorb
aas
push
rol
in
ror
rorb
jns
inc
jnp
divl
int
popa
or
sbb
cmp
js
push
lods
dec
dec
cmp
pusha
lods
lock
cmpsl
bound
push
aaa
int
jns
fmull
pop
leave
cmp
imul
jns
in
lea
loopne
insl
fsubrs
dec
aad
shl
ds
ficoms
xor
push
mov
jecxz
lcall
mov
xchg
dec
cmp
dec
sub
ret
cmp
dec
aam
imul
pop
aas
jne
xchg
lds
stos
dec
fcomp
mov
inc
sbb
or
movsl
aaa
cmp
push
es
aaa
sub
cmp
imul
stos
aam
dec
mov
jae
movsb
lods
cli
rcrb
lock
xor
push
jp
sti
ljmp
mov
rclb
ret
insb
xchg
cld
cmpsb
mov
push
mov
in
adc
pop
jns
mov
xchg
jmp
sbb
enter
adc
fimull
cmp
loopne
xchg
mov
mov
adc
lahf
into
mov
xchg
call
cmp
aad
dec
cs
ss
dec
mov
pop
stos
xlat
loopne
xchg
mov
and
ja
jns
sub
and
imul
mov
push
jecxz
sbb
jp
fistps
cli
aam
and
cmp
fiaddl
jecxz
cmp
mov
mov
jmp
lods
arpl
fistpl
mov
sbb
fcompl
xlat
cmp
je
or
push
pop
fstpt
push
je,pt
cmp
nop
stos
fsin
mov
outsl
inc
push
mov
test
mov
xchg
lcall
push
inc
xor
enter
stc
aas
cli
stos
pusha
test
push
sbb
je
shl
or
lods
mov
jnp
jmp
addl
and
movsb
lods
jno
out
loop
je
mov
daa
ds
stos
mov
pop
call
out
jp
cmp
scas
out
dec
jmp
loop
push
sub
xchg
mov
dec
mov
mov
inc
dec
sar
ds
lret
mov
xchg
mov
inc
jno
mov
sub
iret
stos
sahf
pop
mov
outsl
sarl
add
ret
mov
sub
int
mov
shll
push
dec
call
xchg
int
pop
das
xchg
lret
in
sbb
outsb
mov
insb
or
les
hlt
adc
dec
out
mulb
or
or
scas
jnp
pop
arpl
adc
dec
incl
push
inc
push
fdivrs
push
and
fldl
xor
dec
cmp
pop
aam
out
xor
mov
xchg
cmp
xchg
sbb
test
test
lret
lods
aad
imul
outsl
shll
xchg
imul
nop
inc
add
xorb
leave
push
jnp
inc
fiadds
out
daa
push
rolb
inc
call
cmc
xor
cmpsl
lods
shrl
mov
int
test
push
loope
out
js
push
mov
pop
ret
mov
out
xor
adc
scas
popa
test
mov
dec
cmp
dec
inc
push
and
and
data16
fildll
pop
mov
lods
sub
pop
xor
pop
fstpt
mov
add
int3
mov
jno
mov
movsb
imul
push
inc
pusha
cwtl
sbb
sub
fwait
adc
add
in
stos
pop
inc
mov
mov
sub
mov
pop
lcall
mov
and
andl
sbb
mov
sbb
subb
imull
lcall
add
dec
fstl
lahf
movsl
fdivrl
pop
imul
shll
lods
xor
pop
sbb
out
out
pop
cld
lcall
nop
cld
push
pop
sbb
jae
push
cmc
leave
cmp
cs
mov
stc
jmp
inc
adc
pandn
in
xor
dec
sub
sub
jmp
aam
popa
push
aaa
gs
or
jo
scas
pushf
daa
loop
cmp
repz
mull
push
xchg
or
stc
fisubl
sbb
pop
push
pop
ficomps
stos
mov
ljmp
xchg
push
imul
addb
testl
mov
icebp
pop
out
fisubs
xchg
and
out
pushf
xchg
pop
ja
jae
jne
adc
and
dec
fmul
ds
xlat
and
imul
mov
pusha
cmp
xor
and
push
jbe
jne
sahf
arpl
lods
mov
addr16
sbb
jb
shll
pop
sbb
pop
imul
mov
ds
mov
pop
test
cwtl
frstor
push
loope
sbb
xor
lcall
dec
in
pop
mov
cmp
adc
dec
popf
xchg
stos
sbb
mov
in
inc
scas
sbb
test
mov
sub
mov
add
pop
adc
xchg
cmpsl
cmpsl
addr16
push
dec
lret
or
outsb
popa
movsb
test
pop
xor
push
lods
and
push
aam
test
push
mov
add
push
mov
das
sub
orl
out
aad
push
cmp
xchg
sub
scas
call
fwait
xor
mov
sbb
loopne
mov
insb
pop
in
movswl
pop
loopne
sarl
sbb
in
arpl
xchg
adc
jecxz
xchg
icebp
push
mov
add
jl
dec
aad
stos
inc
sbb
movsb
insb
cmpsl
cmc
pop
ss
inc
outsb
daa
jne
test
xor
sbb
add
pop
sbb
xor
adc
popf
fwait
aad
xor
jecxz
sbb
xchg
add
jmp
int3
and
cwtl
dec
test
sbbb
mov
sahf
cltd
ret
mov
adc
sbb
mov
fisubs
insl
test
push
ss
lahf
jle
inc
sbb
outsl
pusha
sbb
mov
xchg
inc
mov
bound
jmp
adc
inc
fdivs
fiadds
shlb
push
inc
add
xor
sar
adc
lret
notl
daa
test
out
sub
rclb
push
test
adc
jb
mov
mov
int
std
mov
stc
jbe
bnd
hlt
test
dec
adc
movsb
loope
or
and
add
sarb
daa
sbb
test
and
or
mov
ror
adc
jle
adc
divl
cmc
jge
adc
rolb
mov
imul
ss
mov
das
cli
pop
pop
lahf
sahf
inc
and
pop
cli
xchg
cmp
mov
fwait
jecxz
test
and
dec
jns
cli
xor
and
inc
adc
push
cld
and
or
cmc
mov
pop
ficoml
sarb
sti
nop
outsl
cmp
popa
jbe
aas
ret
dec
cmp
lret
jp
ljmp
stc
in
cmp
and
std
dec
std
lret
into
jb
stos
xchg
add
ljmp
sub
jnp
cmp
add
xlat
mov
jnp
mov
fs
pop
movb
imul
mov
fidivrl
ret
loop
je
mov
pop
pop
pop
cmp
imul
aad
aas
out
lds
xor
rclb
lds
or
jmp
xchg
mov
stos
sti
lea
jle
ja
xchg
in
mov
jecxz
and
jp
or
sbb
adc
fcmovnu
push
push
rcll
aas
les
divps
mov
repnz
push
dec
pop
ja
in
and
dec
sbb
add
xor
add
ret
pop
ret
inc
or
xor
adc
shll
movsb
dec
cwtl
xchg
dec
into
mov
aam
inc
xchg
adc
mov
js
lea
dec
xchg
sub
mov
and
or
and
lds
mov
mov
cmp
arpl
fnstenv
out
ret
add
out
cmp
xchg
mov
adc
outsb
cmp
mov
pop
mov
loopne
adc
push
pop
sbb
shll
push
icebp
inc
arpl
gs
sbb
xor
jo
xchg
and
rolb
into
js
cltd
and
rorb
or
call
lcall
mov
mov
lods
into
mov
ljmp
jge
iret
in
cmp
fadds
frstor
push
lret
aam
adc
bound
inc
pushf
sbb
sbb
shlb
pop
pop
and
cmpsb
aaa
cmc
pop
fs
arpl
sub
jbe
fwait
mov
pop
jle
mov
pop
jo
or
mov
test
sub
add
out
out
cmp
mov
repz
xchg
andb
mov
fbstp
add
sub
xchg
ret
mov
and
shr
roll
call
movsb
pop
jmp
shrl
push
ret
jle
sbb
dec
jge
in
stos
in
sbb
mov
jp
jmp
jl
jne
mov
scas
jb
mov
out
das
push
addr16
shrb
dec
loope
and
fs
pop
mov
mov
lods
hlt
cmovne
sub
jge
mov
jno
jmp
xor
idivb
popa
in
push
movsb
dec
imul
xchg
mov
ds
stc
fisubrl
mov
mov
inc
pop
and
or
push
mov
cmp
sti
shr
jnp
les
inc
fcmove
mov
sbb
and
push
pop
out
scas
in
inc
jg
enter
stos
adc
cmp
jle
dec
jl
sti
mov
xchg
lea
mov
xor
scas
loopne
inc
mov
xchg
add
mov
inc
jb
mov
xchg
push
and
pushf
pop
je
or
mov
fistl
repnz
dec
test
je
jae
scas
fisttps
fwait
dec
lea
daa
ja
stos
lock
fcmovnu
stos
add
mov
xor
xchg
xor
mov
sbb
pusha
outsb
fistpl
jmp
mov
mov
cmp
sahf
cmp
inc
in
jne
popf
divb
ja
sbb
cmp
shll
sbb
add
push
inc
repz
dec
cmp
inc
push
cli
adc
jge
sub
or
stc
sub
lahf
fcomps
pop
push
and
xchg
jl,pt
push
jmp
push
fcoms
or
mov
sti
sbb
call
in
cs
mov
flds
std
inc
test
insl
adc
cwtl
or
mov
mov
jne
int
inc
ds
divb
js
shll
aas
movsl
or
add
addl
ss
pop
in
pop
adc
jecxz
push
ret
lea
aaa
shll
test
shrb
fwait
pop
out
jne
and
jae
mov
cmc
push
dec
pop
aam
or
jns
xor
insb
cmp
mov
ss
push
test
push
pop
sbb
cmp
add
addb
mov
xor
popa
push
adc
movsl
subb
outsl
cmp
xchg
mov
cmpsb
mov
insl
xchg
dec
test
mov
mov
out
xchg
sahf
inc
shlb
adc
push
or
jne
push
les
jno
jns
shrl
cmp
mov
jnp
and
into
cmp
dec
push
outsl
aaa
sbb
movsl
add
cltd
popa
adc
adc
mov
sub
jo
jae
push
mov
je
stc
xor
into
test
daa
pop
repnz
xor
cli
movsl
lods
pop
cmc
pop
daa
movsl
enter
adc
xor
add
fldt
fcomip
daa
lahf
ja
scas
add
mov
pop
adcl
int3
jecxz
lret
inc
mov
push
cmp
inc
pusha
add
fldt
mov
fucom
cmc
sub
decb
and
dec
pop
subps
jno
rcl
jnp
loopne
or
out
xchg
xor
dec
insb
pop
cmp
subl
pop
jmp
mov
popa
call
stos
jae
dec
add
cli
lods
jge
xchg
fiaddl
loope
sti
xor
stos
or
sub
add
or
pop
mov
int3
push
and
arpl
cwtl
std
sbb
mov
fcmovnu
mov
jae
idivl
lret
mov
inc
jae
sarb
sbb
inc
dec
jle
fnstcw
cld
stc
jge
sub
stos
sbb
bound
leave
adc
inc
xor
inc
cld
pop
sub
xor
lods
sub
sub
dec
inc
mov
aaa
scas
test
and
push
xchg
mov
pusha
or
lahf
leave
pop
dec
andb
mov
add
lahf
mov
aad
pushf
inc
and
push
mov
xchg
mov
ljmp
mov
mov
pop
outsb
mov
mov
aam
ret
std
sarl
cmp
ror
inc
stos
enter
notb
mov
inc
sbb
push
hlt
iret
sub
sbb
sar
push
push
cmp
cwtl
add
lret
cmp
and
cmpsl
pushf
fistl
or
repz
fiadds
enter
aaa
cwtl
adc
popf
jl
leave
cmp
test
xor
push
push
data16
in
mov
int3
lahf
mov
sbb
xchg
pop
mov
gs
shlb
out
loop
test
mov
xor
mov
dec
mov
jno
sti
cs
loopne
imul
cltd
adc
lret
xchg
sub
mov
push
ss
dec
sti
cltd
cltd
mov
mov
dec
enter
adc
aaa
ds
jae
xchg
jbe
add
jnp
fdivr
sub
fists
jle
ret
pop
add
mov
pop
mov
in
xor
ss
gs
xor
jns
or
into
dec
inc
mov
leave
xchg
fs
mov
sbb
ret
ja
mov
mov
mov
mov
xlat
xor
mov
ret
mov
xchg
adc
and
out
inc
ds
jne
xor
dec
sub
je
jmp
imul
cmp
mov
push
mov
adc
leave
ss
mov
popa
pop
lcall
inc
add
test
xchg
loope
lea
pop
xchg
dec
jmp
cmpsl
lds
shrl
jb
xchg
jmp
scas
pop
adc
sarb
fldcw
mov
mov
mov
mov
cmp
jo
and
stos
sahf
std
fiadds
in
sbb
int
hlt
adc
sarl
or
cld
xchg
std
xor
iret
cmpxchg
cmp
mov
mov
mov
scas
out
and
stc
subb
and
jne
inc
mov
leave
inc
icebp
push
xor
mov
sbb
out
inc
out
aad
clc
dec
xor
mov
dec
rorl
ret
push
add
ret
mov
repz
dec
call
lods
jl
mov
push
mov
xor
cmp
xor
add
xor
aaa
sub
push
pop
sub
and
push
inc
fyl2x
inc
inc
dec
scas
push
incb
scas
clc
or
mov
cmp
lock
int3
imul
fistpl
mov
lret
sbb
cmp
xorl
bts
dec
in
jae
sbb
out
scas
xorb
outsb
aas
js
or
xchg
adc
mov
lret
sub
push
adc
subb
sbb
xchg
push
xchg
scas
sub
mov
stc
cltd
adc
aad
daa
test
adc
adc
xor
xchg
icebp
and
loope
aad
lods
ret
filds
cmp
andb
push
pusha
ret
out
test
aad
lds
int3
sbb
xchg
sbb
xchg
aaa
sbb
inc
inc
jg
addb
mov
sti
les
into
xlat
add
dec
adc
ds
repz
dec
addr16
rcrl
sub
cltd
bound
mov
cmp
jo,pt
data16
mov
jl
adc
popa
movsb
jl
mov
xor
cwtl
ja
pop
sub
dec
cltd
es
inc
dec
int
andb
mov
lret
cmp
lea
out
scas
cmp
fidivs
add
sarl
adc
fidivrs
jbe
jge
inc
or
aas
lock
dec
mov
arpl
or
stos
push
push
sub
add
fdivl
add
push
test
cmp
cmp
in
mov
xor
xlat
jg
or
sti
fistpl
cmpsl
aad
bound
jge
pop
ficompl
shrb
stos
in
mov
xchg
imul
cs
fwait
jbe
pop
mov
or
cltd
std
daa
test
data16
and
dec
loope
sbb
push
mov
negb
inc
mov
fwait
loope
xchg
scas
stos
out
xor
mov
jns
aad
cmc
fwait
and
sbb
aas
mov
dec
sub
pusha
aad
lods
andl
in
div
in
in
jg
mov
pop
adcl
je
out
xlat
add
loope,pt
jns
push
cmp
nop
sub
or
cmp
imul
jb
rorb
fisubs
repz
dec
fwait
rorl
in
mov
shll
pushl
nop
aam
flds
outsl
mov
inc
addr16
loope
inc
or
adc
call
dec
inc
nop
lods
fldenv
xchg
push
mov
lret
xchg
ljmp
or
and
jl
pop
pop
push
inc
mov
out
imul
xor
mov
mov
stos
or
mov
mov
rorl
xor
inc
bound
add
in
push
xchg
add
out
int
ja
mov
push
xor
adc
jae
fs
ja
ret
ss
addr16
loopne
ror
ss
ss
dec
das
notb
sbb
dec
sahf
push
bound
add
aaa
mov
add
or
je
sub
push
sbb
push
sbb
aam
repnz
insl
xor
stos
mov
pusha
mov
dec
cmp
lock
in
movsb
jle
adc
cmp
inc
jbe
push
sub
xor
enter
adc
xor
push
mov
jl
cmp
lret
xchg
and
and
pop
mov
cmp
mov
bound
daa
scas
repz
dec
sub
lods
dec
or
cmpsl
add
aaa
fsubrp
fmuls
adc
mov
shrb
jno
mov
cmpsl
jns
outsb
adc
stos
popf
out
cmp
adc
sub
lock
cmp
inc
jecxz
adc
xorl
in
sbb
and
repnz
das
dec
popa
sbb
mov
cmp
ljmp
and
iret
mov
and
push
mov
ljmp
loope
mov
pop
aam
sbb
fisubrl
jo
dec
popf
cmp
dec
ja
dec
mov
adc
ret
inc
adc
jo
sub
jmp
jne
imul
inc
mov
jl
cli
jg
hlt
mov
inc
hlt
jp
mov
icebp
movsb
scas
out
lds
pop
outsl
pushf
es
push
lret
sub
pop
xor
imul
adc
pushf
inc
call
cmp
adc
mov
sbb
aaa
sbb
dec
lods
cmp
sub
je
or
and
loopne
es
jnp
ds
ja
fsub
dec
lods
hlt
loopne
daa
push
mov
in
xor
push
jno
and
ds
push
xor
loope
inc
cltd
outsl
loopne
dec
subb
and
jp
sahf
aaa
stos
jbe
icebp
rolb
sub
jecxz
mov
xchg
icebp
ss
ja
aas
imulb
xor
cmp
ljmp
std
stos
lea
mov
dec
insl
pop
jge
or
sbb
lret
std
stos
lea
mov
dec
insl
pop
jge
or
sbb
lret
cld
stos
lea
mov
dec
insl
pop
jge
or
sbb
pusha
in
fimull
jne
gs
mov
cltd
mov
mov
repz
inc
sub
imul
out
cmp
mov
cltd
lret
test
or
dec
sub
imul
jns
mov
or
leave
stos
fld
jmp
pop
cmp
sbb
sbb
ss
sbb
pop
dec
lahf
std
mov
xchg
push
jb
cmp
push
rcl
mov
cmp
orb
jge
rcr
or
popl
ss
add
inc
add
hlt
movsb
pushf
mov
test
cmp
mov
fnstenvs
int3
sbb
lods
jb
dec
cmpsl
lock
pop
sub
xchg
sbb
and
or
jns
mov
cltd
lret
ret
mov
mov
test
pushf
stos
xlat
test
mov
sbb
jbe
jns
dec
push
inc
adc
test
mov
mov
sbb
fwait
inc
fwait
sbb
push
cmp
cmpsb
je
data16
mov
cmp
aam
js
lret
stc
stos
pop
or
sbb
lods
adc
sbb
dec
sub
stc
inc
inc
push
cltd
jmp
mov
mov
mov
sbb
sub
push
dec
daa
pop
in
and
enter
rclb
out
into
sti
in
or
jl
sub
inc
or
pop
or
inc
in
popf
cld
int3
mov
xchg
leave
pushf
fsts
cmp
sub
cmp
push
aaa
or
test
sub
xchg
aad
test
or
dec
sub
imul
or
jns
mov
cltd
lret
test
or
dec
sub
imul
or
jns
mov
mov
add
add
push
xchg
jle
sub
sub
add
int
sub
fisttpll
stos
mov
push
mov
or
xchg
mov
jge
push
add
add
and
xchg
sar
xchg
jecxz
add
js
mov
or
es
insb
xchg
xor
jns
adc
lret
pop
sbb
mov
xor
lahf
cmpsl
ja
pop
mov
stos
jle
jmp
gs
cmpsb
jmp
mov
add
rcll
sub
mov
mov
dec
inc
pop
int3
ficoms
xor
inc
pop
je
xchg
sbb
mov
ds
fxch
not
push
mov
and
mov
inc
push
jg
mov
mov
mov
dec
ficomps
aad
outsb
xchg
mov
cmp
pop
add
mulb
jge
vpmuludq
dec
pop
mov
fadd
mov
xchg
loope
icebp
outsb
jmp
fistpll
iret
sti
pop
idivl
pop
xor
gs
cltd
jae
cltd
loopne
scas
adc
add
push
ret
shlb
mov
xchg
stos
dec
and
jg
pop
dec
outsb
stos
cmp
mov
mov
ss
inc
mov
fisttpll
pop
adc
popa
xlat
les
push
ret
data16
push
lret
arpl
sub
fs
mov
cmp
rorl
adc
sbb
rcr
mov
xor
or
inc
adc
jecxz
call
loop
jl
dec
xchg
or
mov
cmp
adc
adc
or
cwtl
mov
scas
adc
test
jge
jge
push
iret
mov
loope
xchg
addr16
xchg
leave
les
pop
loop
outsb
popw
ja
add
enter
divb
aas
cmp
mov
mov
add
cmp
ret
mov
dec
mov
or
fmul
mov
inc
mov
xchg
clc
jne
lret
enter
push
fstpl
int
xchg
out
inc
test
lods
je
dec
xchg
pop
imul
pushf
roll
xor
push
in
dec
dec
push
cli
hlt
stc
pusha
int3
pop
nop
dec
xchg
inc
xchg
xor
pop
ljmp
cli
fdivl
push
adc
jge
ds
push
cmp
xchg
in
mov
pop
xchg
inc
cli
or
test
sub
mov
jmp
xlat
xchg
mov
lret
dec
int
cmpsb
aaa
fistpll
dec
ror
lods
fs
nop
sub
orl
jbe
ret
test
ja
push
jmp
mov
pop
cmp
mov
add
ror
sbb
mov
in
cld
pop
jp
sarb
cwtl
cmpl
jns
je
mov
pop
jecxz
popf
lret
ret
mov
cmpsl
mov
jle
xor
mov
xor
inc
stc
and
cmp
lock
pop
push
inc
popf
push
xor
scas
or
iret
add
call
movsb
jp
jne
xchg
pop
call
jmp
push
mov
jmp
add
andl
rcrl
cmp
ja
icebp
mov
cmpsb
and
stos
in
pop
fidivs
dec
add
xorb
loop
add
and
imul
push
pusha
mov
les
addr16
cli
nop
add
pop
adc
cltd
xchg
xor
test
sub
imul
mov
mov
fistps
push
push
popf
out
xor
ljmp
sub
lock
dec
pop
cld
inc
dec
fisubs
cmp
rolb
or
or
dec
dec
dec
pop
pushf
push
insl
xchg
mov
subb
aaa
xchg
jnp
xchg
pop
movsl
mov
push
xor
xor
mov
iret
jnp
imul
enter
movups
gs
outsl
clc
fninit
aad
jg
mov
roll
inc
sti
jle
and
lods
ds
pop
lcall
insb
sub
loopne
mov
jl
push
aam
or
sbb
ficoml
mov
into
aam
inc
jg
mov
ret
pop
out
movsl
mov
add
imul
pop
sbb
jmp
push
mov
mov
xor
das
push
mov
mov
dec
notb
shr
loope
sbb
sub
lods
inc
enter
sti
inc
lret
xchg
xchg
xlat
pushf
cmp
daa
les
pop
into
xchg
mov
add
or
jmp
inc
in
xor
or
mov
das
pop
xchg
pop
xlat
popf
push
aas
or
push
jp
push
mov
clc
sbb
mov
mov
cli
xor
xor
jl
or
jg
dec
xor
cmpsl
stos
das
sbb
data16
dec
mov
int3
repnz
shrl
or
subb
xchg
mov
sbb
sahf
sbb
adc
cmp
fisubrl
cmp
out
cmpsl
xchg
dec
sti
fidivl
and
sahf
aas
push
shll
add
mov
jg
inc
cmc
adc
pop
sub
xor
loop
lret
or
outsl
jnp
dec
mov
or
loopne
jae
repz
push
movsl
out
imul
call
repnz
sbb
daa
fisttpll
ds
int
cmp
sbb
xor
adc
pop
add
add
cmpsl
iret
pop
add
divl
sub
xlat
adc
adc
stc
loop
pop
mov
jbe
mov
lock
and
pusha
inc
pop
pop
pop
es
inc
lock
bound
icebp
and
aad
movsl
mov
adc
jg
sub
stos
jl
sti
xor
mov
fstpt
fdivl
imul
subw
push
lahf
fnstsw
call
or
pop
fs
sbb
ret
lahf
lods
scas
xchg
xlat
sbb
sbb
inc
push
jge
js
inc
sbb
dec
sbb
mov
inc
inc
pop
scas
inc
lock
push
outsb
jno
mov
mov
je
mov
call
mov
jg
or
ss
jge
sbb
out
and
jo
pop
inc
xchg
mov
jmp
rol
mov
push
out
adc
jbe
mov
inc
ljmp
sub
xlat
arpl
mov
notl
fcompl
xchg
jecxz
xor
xor
xchg
rcl
or
test
scas
push
jne
sarb
or
jno
pop
dec
mov
popf
push
sub
jb
mov
loopne
and
inc
std
scas
mov
dec
sahf
inc
xor
and
out
lods
mov
inc
mov
lds
sub
xchg
dec
std
inc
jle
je
mov
mov
test
xrelease
ret
mov
repnz
jl
push
cmp
cwtl
repz
add
pop
in
adc
cmp
loope
hlt
mov
hlt
xchg
inc
pop
xchg
lahf
dec
leave
sub
call
pop
jmp
lcall
mov
in
icebp
mov
loope
daa
inc
dec
in
pusha
movsb
in
aas
and
fs
in
inc
mov
test
add
les
fisubl
xchg
movsl
fs
mov
or
ficomps
sbbb
sbbb
cmpsb
mov
sub
lods
xor
icebp
ret
xor
scas
or
mov
jae
and
mov
xor
xor
xchg
dec
mov
movsb
xchg
jp
adc
ret
ja
mov
push
fmull
in
lahf
loop
jecxz
movsl
dec
into
sub
adc
push
ljmp
and
xchg
mov
xchg
fwait
mov
mov
mov
daa
cmpsl
in
and
bound
sub
xchg
cld
pop
push
inc
ss
sti
jle
ss
das
jl
icebp
lea
fisttpl
or
loop
dec
xchg
push
add
mov
loopne
repnz
test
or
pop
scas
adcl
sub
cmp
mov
pop
push
int
mov
nop
das
insl
xchg
lods
fs
out
inc
dec
mov
xchg
nop
sbbl
mov
jb
add
fidivl
lahf
sub
dec
je
stos
decl
movsb
jmp
sub
mov
jb
or
fxtract
mov
pushl
cmp
pop
in
xor
jnp
jl
sub
ljmp
mov
stc
jns
mov
jl
insl
mov
dec
push
scas
pop
test
sbb
test
or
sbb
dec
cmpsl
push
xor
dec
dec
push
push
test
push
add
cmp
adc
push
cltd
jae
cwtl
pop
aaa
or
testb
loope
int
sub
inc
iret
enter
inc
daa
lcall
xchg
adc
and
in
mov
popa
cmp
or
movsl
jns
popa
cmc
das
icebp
inc
icebp
jbe
adc
cmp
inc
cmp
jae
jp
mov
mov
stos
js
and
dec
xor
pop
js
enter
sti
scas
add
mov
je
shll
dec
or
ss
ljmp
inc
sub
push
add
push
dec
idivl
inc
dec
andb
jle
hlt
in
aas
das
sbb
cmp
inc
add
sbb
sbb
cwtl
stc
repz
in
fs
push
mov
incb
sbb
xor
push
das
verr
xchg
add
xchg
add
test
pop
es
mov
jo
mov
sub
cmp
xorb
cs
adc
les
jge
dec
shlb
adc
xchg
lcall
popf
orl
mov
push
mov
cmc
sbb
inc
sahf
into
enter
std
pusha
inc
mov
js
mov
fisttpll
cmp
jnp
cli
mov
pop
xor
pop
outsl
in
mov
pop
mov
sbb
loope
lcall
and
xor
sbb
dec
fisubs
pusha
pop
adc
xchg
dec
aam
pop
cmpsb
arpl
int3
push
mov
data16
shlb
dec
pop
movsb
cmp
cltd
jp
ret
pop
xchg
mov
out
clc
jge
aaa
push
out
push
adc
and
testb
imul
faddl
pushf
stc
jg
xlat
enter
add
pop
jp
das
lds
stos
mov
test
hlt
add
sbb
arpl
pop
lahf
std
outsb
mov
pop
fisubl
shlb
mov
sbb
movsl
out
clc
out
sahf
cwtl
repnz
mov
movsl
push
inc
lcall
imul
dec
sbb
or
sub
push
push
adc
cmp
cmpb
push
mov
sub
sbb
iret
push
sub
mov
cmp
sub
cltd
ljmp
sub
int3
mov
inc
lahf
adc
push
xchg
dec
mov
mov
mov
xor
and
pushf
sub
pop
fidivrs
xchg
fnsave
mov
sbbb
aam
mov
adc
daa
cmp
call
xlat
js
imul
sbb
aad
jge
cmp
out
xchg
movsl
int3
xorl
push
jno
xchg
jl
lock
data16
push
sbb
adc
and
mov
shll
lret
lock
ss
sub
imul
xchg
and
xchg
jmp
cmp
or
subb
loop
dec
idiv
jae
sahf
in
lret
adc
mov
pop
mulb
sub
xor
lret
popf
in
scas
scas
xchg
adc
gs
out
outsl
mov
sbb
inc
add
inc
mov
lret
mov
fdivl
xchg
enter
sbb
push
mov
and
sti
stc
gs
ja
mov
sbb
push
es
jmpw
test
or
lods
push
lods
and
in
fidivs
test
xor
rcl
xor
jge
and
repz
nop
cmp
inc
jp
inc
mov
stc
out
push
dec
hlt
ds
xchg
aad
xchg
adc
xchg
daa
mov
xorb
int
mov
adc
pop
sub
in
mov
sbb
dec
icebp
hlt
dec
out
push
lock
mov
lret
ljmp
stc
dec
xor
push
mov
jge
push
loopne
js
add
or
xor
xchg
dec
mov
outsb
mov
xchg
gs
out
cmp
jbe
sti
adc
ja
dec
inc
and
cmpsb
cmp
shlb
jns
ds
mov
xchg
cwtl
cmc
fisttpll
dec
int
fs
leave
hlt
cmp
xor
mov
add
orl
jo
cwtl
sub
int3
and
xlat
xor
lahf
outsl
js
adc
stos
rcrb
mov
movsb
fwait
jbe
iret
mov
mov
int3
xor
std
shlb
and
jnp
imull
loope
xchg
fcoml
mov
push
iret
or
aaa
jo
icebp
add
pop
dec
inc
fnstsw
mov
mov
push
add
enter
rcl
dec
pusha
shll
cli
dec
popf
jns
mov
lock
xchg
xor
xchg
inc
xorb
fs
inc
out
hlt
mov
scas
cmpsb
mov
fiadds
push
xor
stos
sar
push
jge
sarb
xor
xor
xchg
ljmp
inc
sbb
mov
mov
or
cld
or
scas
in
outsl
fdivrl
jns
fisubrl
aaa
jle
ds
cmp
add
orl
imulb
pop
mov
or
mov
shrl
shrl
inc
inc
dec
jecxz
andl
xchg
sub
test
sub
mov
cmp
pop
nop
daa
mov
push
incl
lcall
popa
test
std
ja
mov
inc
in
mov
mov
mov
mov
enter
stos
popa
or
jo
adc
addl
lcall
push
stos
xchg
xchg
aam
adc
mov
bound
push
or
in
dec
pusha
lcall
mov
cmp
xchg
hlt
sbbl
dec
mov
xchg
adc
out
loop
push
pop
push
mov
mov
xchg
push
out
sub
or
xor
cwtl
call
xor
or
mov
inc
call
inc
dec
mov
and
iret
les
pop
negl
scas
test
mov
daa
mov
sub
ss
lock
or
jp
dec
jb
out
sub
mov
xor
adc
mov
inc
and
fs
sub
popf
jae
fnstcw
dec
out
repz
ds
jmp
sbb
cwtl
push
iret
pushw
nop
jmp
xchg
mov
jge
test
pop
dec
sahf
hlt
mov
jno
shl
mov
jmp
pop
adc
push
test
sahf
dec
gs
fistpll
scas
mov
xchg
push
mov
adc
mov
lods
sub
sub
and
cltd
ja
mov
jp
mov
fdivr
mov
mov
out
sbb
sbb
push
scas
sub
mov
sbb
cmpsb
addb
out
stos
mov
add
dec
lods
adc
and
push
mov
ret
cs
movsb
addb
fisttpll
cmc
popf
cmp
lods
add
adc
cs
fbld
fldt
je
ds
outsb
and
mov
rcrb
dec
dec
push
cmp
xchg
inc
clc
jns
cmp
cwtl
xor
roll
xchg
out
test
por
jp
or
adc
clc
das
fwait
scas
out
and
lds
xchg
jmp
rcr
sti
scas
ret
fcompl
mov
sub
ret
mov
scas
dec
stc
add
rol
out
mov
push
loopne
jnp
xchg
leave
cmpsb
mov
repz
fists
dec
xchg
xchg
sub
xchg
or
nop
xor
in
cmp
sub
retw
and
arpl
push
mov
jmp
stc
stc
jno
mov
xchg
mov
inc
mov
xor
xlat
pop
das
outsb
sbb
daa
cmp
loop
in
sub
pop
ja
sub
orl
enter
out
jl
ret
sub
mov
jb
adc
xchg
mov
sbb
jmp
xchg
int
sbb
ret
sbb
jno
cmp
adc
in
or
push
add
adc
fsubl
movsb
mov
test
or
movsl
adc
pop
stos
in
addl
push
int
lsl
mov
mov
testb
enter
pop
mov
mov
inc
or
mov
jnp
mov
stc
imul
xor
inc
stc
adc
lret
scas
cs
repz
xor
hlt
mov
pop
or
es
rclb
shrb
das
mov
fmuls
mov
popf
out
sub
sub
loope
mov
shlb
xor
int3
sbb
jp
jbe
ret
xor
outsb
mov
stos
xchg
jbe
dec
jno
ss
pop
insl
pop
sbb
xlat
or
ss
inc
dec
les
adc
inc
mov
test
mov
daa
jne
mov
call
sti
xchg
insb
sub
xor
push
dec
push
ret
test
outsb
mov
sti
ficomps
std
and
cmp
pop
scas
hlt
int
inc
inc
and
sub
out
or
ljmp
lcall
inc
inc
jg
mov
push
dec
sub
orb
fmuls
mov
sar
insb
xchg
aas
pop
xor
push
pop
jmp
mov
into
loope
inc
data16
fnstsw
mov
test
xor
jno
out
popf
pop
adc
int
shr
jl
adc
push
adc
pushf
jno
push
stos
addb
nop
shrb
and
outsb
or
mov
insb
mov
sahf
or
jle
mov
shlb
clc
add
lret
xchg
insl
fdivrs
mov
and
ret
add
dec
int3
fidivs
test
and
stos
cmp
cmp
movsb
or
daa
xor
ret
dec
icebp
cltd
pop
xorl
aad
xchg
xorb
sub
push
repnz
aaa
sbb
insb
jge
sub
orb
or
std
incl
xor
push
cltd
out
sbb
movsb
iret
repnz
aad
mov
test
fwait
xor
dec
popf
mov
js
mov
pop
xlat
shrb
add
or
lea
xchg
out
pop
in
add
or
push
sub
aad
xchg
out
adc
imul
push
mov
mov
dec
cmc
mov
jae
outsl
lock
dec
add
pop
push
cwtl
fmull
int3
or
jle
mov
cltd
fwait
push
add
idivl
insl
ds
jns
ret
cwtl
andb
sub
in
int3
icebp
xchg
mov
stc
icebp
scas
xchg
jo
fmulp
xor
xorl
inc
in
sarb
outsb
mov
gs
xor
aas
loopw
mov
and
lret
cmp
addr16
aad
pushf
in
into
and
mov
lret
dec
mov
cmpsb
mov
xchg
je
test
mov
popa
jmp
mov
filds
test
andb
cwtl
out
rclb
pop
sbb
cmpsl
test
lods
push
imul
dec
dec
jb
sub
cli
push
mov
inc
cmc
outsb
sub
scas
xor
mov
fildl
int
pop
adc
arpl
imul
bndstx
mov
adc
mov
or
dec
inc
lock
adc
or
call
dec
movsb
dec
sub
xor
lcall
sbb
pop
insb
xchg
lcall
stc
imul
or
jae
leave
pop
test
adc
addl
addr16
xchg
imul
std
test
pop
iret
xchg
mov
add
push
popa
stc
orl
add
dec
and
test
cmp
add
out
sbb
add
roll
xchg
lock
xchg
cmp
shll
insb
test
adcl
icebp
sbb
jo
test
jecxz
cmp
movsb
lods
inc
inc
ror
fldenv
bound
pop
add
mov
nop
jne
pop
cmp
mov
jns
fildll
outsb
sbb
pop
push
push
sbb
in
inc
pusha
daa
cmp
pushf
and
sbb
sarb
in
ljmp
mov
sbb
sub
jge
mul
xchg
fbld
cmpb
fdivl
ljmp
test
insb
inc
loopne
aaa
ss
orl
fldt
popa
xor
dec
movl
out
push
jne
mov
mov
in
xor
popa
cli
inc
imul
xor
dec
divb
xchg
divb
jbe
sub
lcall
sahf
inc
adc
in
pop
call
and
nop
inc
bound
jmp
or
dec
sub
imul
or
jns
mov
cltd
lret
test
or
dec
sub
imul
or
jns
mov
sbb
sub
mov
loopne
mov
sbb
jnp
bound
pop
or
jns
mov
cltd
das
test
or
sbb
arpl
jae
inc
or
mov
jl
add
stc
xor
iret
ja
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
or
out
ds
aaa
aad
cmp
cmp
mov
push
mov
add
negl
sti
jno
cmp
jns
sar
push
mov
lds
insb
rcl
aam
jo
push
adc
insl
fstpt
mov
mov
movsb
push
repz
imul
outsl
leave
movsb
cld
inc
jns
lea
das
fdivrl
scas
mov
fisubs
call
cmp
push
or
jns
xchg
push
push
aaa
dec
pop
int
stc
jmp
jno
pusha
shlb
aam
popa
out
or
push
pop
mov
and
mov
and
sub
sbb
jns
cmp
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
call
imul
sub
cmp
or
and
pop
cmp
sub
paddb
movsl
imul
cld
insb
jnp
stc
push
sub
pop
loope
jmp
in
dec
xlat
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
shl
add
out
push
jl
mov
mov
pop
xchg
insb
movsl
cmpsl
lods
jmp
jecxz
aad
mov
call
clc
mov
dec
push
out
pop
shrl
sbb
sbb
cld
fildl
test
mov
jg
sbb
lahf
cmp
sti
dec
jo
push
cmp
push
sub
pop
sahf
mov
or
scas
rorl
cmpsl
rcr
adc
mov
mov
jecxz
sahf
or
cld
das
cmc
jmp
xchg
aas
adc
dec
scas
inc
jae
scas
add
mov
movsb
push
imul
and
dec
shll
lahf
lahf
dec
adcl
add
jg
js
xor
xor
je
cmp
inc
aas
and
stc
add
test
jae
icebp
jle
mov
cmc
mov
lret
movsb
or
imul
cmp
loope
mov
sub
test
orl
lods
imul
rorb
cmpsl
mov
mov
or
test
mov
xchg
pushf
add
test
mov
mov
mov
sbb
arpl
fcoms
int3
mov
or
mov
sbb
adcl
int
out
stos
jg
push
push
std
sbb
sbb
cmpsb
scas
jecxz
mov
shrb
pop
outsl
add
aaa
jecxz
xchg
cmp
mov
divl
jmp
bound
push
out
mov
add
mov
pusha
mov
jmp
test
and
push
dec
faddl
inc
fbld
cmp
dec
sbb
test
push
insl
dec
mov
jg
push
dec
rol
scas
sarb
lret
imul
push
sub
scas
mov
fcoms
or
jns
inc
cs
mov
aam
cmp
dec
push
test
aaa
add
cmp
dec
pusha
adc
mov
mov
test
sti
into
neg
xchg
mov
pop
test
stos
xchg
movb
test
jecxz
mov
leave
daa
cwtl
ja
pusha
into
and
add
fs
es
xchg
fldt
scas
subl
loopne
outsb
inc
push
in
test
xor
sbb
lea
sahf
cmc
dec
inc
loop
mov
outsb
push
enter
xchg
mov
jg
inc
adc
addr16
jl
test
leave
sbb
nop
push
jle
ret
imul
loop
dec
adc
in
pcmpgtw
cmp
pop
in
imul
add
aaa
andl
sub
outsb
stc
in
roll
mov
enter
dec
push
mov
inc
xchg
scas
push
jae
in
pop
push
loope
ds
jmp
mov
sarb
cmc
pop
jecxz
xchg
cmp
xchg
mov
dec
cs
insl
shlb
cmp
js
mov
dec
pop
push
jl
fldt
push
lock
cmovle
lcall
inc
lahf
mov
push
scas
rorb
jge
pop
sbb
and
aam
pop
clc
rorb
or
scas
popf
pop
dec
or
stos
mov
dec
rcll
rcrl
cmp
mov
cmc
lret
push
aaa
rolb
insb
popf
mov
fwait
sbb
xchg
int3
mov
jo
dec
dec
jmp
outsl
jg
scas
test
fs
mov
xor
repnz
and
ss
push
out
mov
dec
jbe
lock
mov
cmp
movsb
inc
scas
frstor
xchg
lds
pushf
gs
fstpt
lret
insl
jmp
ljmp
or
fsave
movsl
sbb
clc
imul
ljmp
mov
clc
cmpsb
sub
shll
jb
out
push
add
ficomps
push
sbb
lahf
push
mov
loope
out
pop
push
data16
jmp
mov
out
add
mov
cmpsb
xchg
and
jbe
adc
pop
idivl
cmp
lret
xor
adc
mov
push
ret
out
adc
lret
insl
pusha
inc
xor
xchg
mov
jmp
push
xchg
dec
iret
movsl
push
mov
cmp
test
adc
stos
pop
bound
dec
lahf
mov
mov
xchg
add
sub
das
push
pop
enter
out
dec
inc
out
xchg
and
jnp
dec
dec
push
cmp
mov
mov
stos
ret
mov
cmp
mov
cmp
fmuls
sub
lcall
mov
pop
das
cs
iret
mov
jno
or
mov
push
popf
dec
rolb
mov
xchg
jae
push
js
and
out
or
int
and
sbb
push
cmp
cli
dec
lock
push
jnp
jnp
xor
lret
loope
jecxz
ja
mov
cmp
aad
and
es
xlat
mov
aad
lods
and
add
cmp
bnd
hlt
cmp
pusha
fisubs
sub
in
frstor
lret
jge
movsb
rcl
adc
dec
xor
fsubrs
les
pop
ja
into
in
icebp
xchg
rclb
testb
orl
mov
mov
push
jge
xor
xor
cltd
fnstsw
leave
push
loope
in
cmp
push
inc
adc
insb
push
xor
mov
dec
push
cmpl
push
mov
adc
out
in
dec
xchg
into
mov
rcrb
jle
mov
xchg
push
pop
mov
ret
push
cmp
or
mov
pop
popa
push
in
stos
stos
mov
push
outsb
add
lret
jl
loopne
cmp
cmp
fistpll
insl
mov
jecxz
xchg
in
mov
mov
mov
out
stc
push
movsl
es
inc
sub
aam
xchg
and
fdivrs
pop
in
xchg
ret
mov
scas
adc
jns
aaa
orl
cmp
addr16
sbb
xor
in
fstps
or
movsb
jnp
mov
jns
xchg
inc
out
adc
outsb
cs
mov
iret
mov
std
xor
inc
and
inc
push
loop
loope
push
scas
loope
jecxz
jp
test
dec
push
sbbb
xor
mov
jmp
xchg
pop
repz
lds
cmpsb
xchg
inc
cli
inc
sbb
push
xchg
or
xchg
add
jnp
cmp
push
cmpsl
adc
or
adc
adc
into
adc
out
imul
call
int3
test
adc
add
sahf
pop
shlb
jbe
mov
mov
shrb
xchg
or
jno
ljmp
inc
add
mov
pop
les
and
jo
cmp
ficoml
test
scas
push
shrl
sbbl
fcoml
shll
or
pop
ret
cmp
xor
fbld
popa
push
out
insb
or
sub
dec
popa
sub
or
pushf
mov
ficompl
pop
outsl
andb
and
lea
loopne
push
xchg
pusha
repz
push
xor
cmp
lea
dec
hlt
jp
push
or
jo
std
test
add
dec
xchg
aaa
loope
and
cmp
das
out
cmc
jl
mov
jae
jo
cmpsb
sub
or
xchg
mov
mov
mov
es
xor
mov
ds
lods
data16
movsb
inc
add
xor
sti
test
jae
aaa
lret
push
add
jp
push
aam
xchg
dec
rorl
pushf
test
aas
mov
and
mov
adc
mov
cmp
scas
xor
js
rol
push
xrelease
scas
cld
mov
out
popa
je
add
xchg
xchg
repnz
daa
aaa
cli
out
push
adc
sbb
adc
loope
inc
cli
andb
push
sub
add
out
push
les
adc
push
lea
dec
and
sbb
mov
mov
repnz
movsb
inc
enter
mov
ret
sbb
jne
sahf
lret
lret
adc
out
dec
xor
push
mov
inc
and
inc
dec
add
mov
je
push
mov
std
sahf
int
xchg
stos
lods
mov
pop
divb
lods
mov
lret
jmp
cmp
ds
fisttpl
xchg
xor
cmp
push
pop
jae
cli
adc
push
shl
or
pop
dec
rcll
and
mov
lock
push
orl
mov
lahf
fisubs
test
dec
adc
mov
pop
imul
xor
decl
lods
adc
mov
enter
lret
lret
into
xor
sbbl
mov
jnp
mov
repz
dec
mov
and
les
jno
push
sub
sub
dec
sub
xor
test
jp
mov
mov
lea
sub
les
into
sub
xchg
call
push
jo
loopne
xor
shlb
push
pop
sbb
xchg
xchg
sahf
rorl
test
jg
mov
jge
jb
cs
dec
xor
insb
pop
cwtl
mov
pop
mov
lds
jp
or
lds
and
adc
mov
cmp
pop
in
push
mov
jmp
dec
pop
lock
jl
mov
test
pop
sub
adc
pop
repz
xchg
xchg
inc
decl
shll
xor
pop
test
popl
daa
sub
xor
jb
mov
jo
dec
fnstcw
xchg
leave
stc
xchg
or
icebp
popl
lea
arpl
sahf
scas
xor
inc
push
push
insl
bound
outsb
cltd
pop
mov
std
mov
lock
lret
lret
mov
ret
hlt
jne
je
incl
out
mov
mov
sahf
and
pop
mov
ss
rcrb
cmp
imulb
loopne
xchg
cs
shlb
xlat
adc
in
pop
loop
pushf
jnp
aas
cmp
adc
pop
push
rolb
out
shrb
stos
cmp
sub
jae
dec
decl
pop
pop
outsb
xchg
outsb
repz
pop
adc
add
fs
sub
and
inc
shll
sarl
rolb
and
sbb
jne
jae
mov
cwtl
ljmp
jno
lods
mov
mov
daa
jg
sbb
push
inc
mov
fistpll
nop
leave
fisubrl
repz
pop
jmp
rcll
stos
or
imul
outsb
pop
mov
dec
sub
mov
mov
bsf
es
sub
mov
jae
inc
cmp
cmpsl
jg
rolb
mov
pop
das
outsb
dec
es
pop
jge
pop
xor
dec
dec
fwait
jmp
mov
insb
lods
aaa
and
adc
mov
jns
dec
nop
adc
mov
lds
mov
ljmp
ss
adc
aam
or
mov
cmp
js
mov
xchg
sbb
add
and
lea
popl
push
loop
popf
mov
or
mov
fwait
cwtl
mov
sbb
aaa
test
addr16
mov
fucomi
imul
lock
add
das
bound
mov
and
std
jo
mov
aaa
arpl
pusha
and
lds
into
jl
and
lds
jp
mov
add
push
lods
lods
add
iret
lret
mov
dec
aam
sub
mov
int3
sarb
xor
cmp
jb
dec
inc
mov
sbb
cmpsb
loope
nop
andl
stos
aas
push
std
or
insb
jns
dec
add
repz
das
pop
mov
aam
lret
xchg
add
mov
into
out
loop
test
je
fadds
imul
in
loop
mov
jge
xor
hlt
xchg
xor
std
out
out
sub
dec
dec
inc
pusha
lret
jge
or
adc
mov
adc
xor
dec
mov
pop
ss
add
sarl
jp
jmp
andb
scas
mov
and
pop
sub
in
pop
or
pop
ds
ljmp
pop
in
clc
lret
popf
mov
das
lcall
cmp
lahf
push
outsl
jg
sarb
arpl
xor
dec
je
add
nop
scas
add
push
outsl
jns
adc
fwait
jnp
xchg
mov
std
nop
outsb
dec
gs
ror
sarl
aam
and
xor
stc
adc
adc
pop
pop
cmpsb
push
je
jne
mov
mov
in
xchg
push
fstl
mov
and
jae
or
in
adcl
cmp
push
adc
jg
cwtl
mov
push
fists
jge
notb
movsl
in
push
ljmp
push
mov
fcomps
in
subl
fnstenv
dec
inc
dec
mov
sar
in
push
push
mov
xor
inc
jne
sub
xor
cmp
cmp
das
adc
xor
jbe
xor
fiaddl
sbb
adc
pop
sub
mov
imul
je
decb
shll
mov
xor
incb
sub
xor
ds
call
push
push
xchg
pusha
nop
push
mov
and
cmp
pop
xor
insb
jb
std
mov
lcall
loopne
mov
out
or
cmp
lret
mov
gs
add
fwait
jecxz
mov
xchg
movsl
pop
adc
int
mov
popf
fwait
inc
gs
jbe
mov
xor
push
je
sbb
pushf
jmp
aad
stc
fdivrp
insb
frstor
mov
dec
jns
mov
sbb
sbb
rcl
nop
sbb
jl
jns
adc
or
mov
in
inc
jecxz
fs
dec
and
lret
mulb
xchg
dec
incl
push
mov
scas
mov
sbb
es
stc
aam
cltd
sti
in
inc
jge
call
or
mov
sahf
mov
sbb
iret
sbb
sti
add
push
xor
nop
repnz
loop
mov
movsb
sbb
or
stos
sbb
jecxz
or
cmpl
mov
movsl
mov
mov
out
sub
mov
stos
pop
cmp
test
sub
or
in
mov
stos
dec
nop
int3
in
cmp
xchg
dec
fcomps
push
sbb
jmp
or
enter
lods
mov
in
sub
mov
inc
mov
dec
push
insb
adc
inc
cltd
xor
iret
in
xor
xlat
arpl
adc
clc
adc
mov
mov
sbb
dec
mov
sahf
fwait
ss
pop
inc
adc
fldt
pushf
rclb
mov
jmp
in
mov
notl
inc
add
inc
cmpsb
mov
out
or
xchg
movsl
imul
jmp
mov
lock
iret
and
and
ret
aas
bound
jp
fldenv
xlat
lea
nop
pop
fildl
and
jnp
dec
lock
sti
rcrb
push
fadd
das
loope
mov
xor
xor
and
or
lahf
push
stc
pop
sub
rclb
xor
data16
rol
jae
arpl
and
or
das
inc
out
idivb
dec
das
adc
rorl
adc
lret
insl
add
add
jae
dec
xchg
adc
movsb
sarl
push
dec
imul
mov
xor
mov
out
add
push
pop
mov
in
ret
mov
imul
xchg
cmp
cltd
sub
test
punpckhbw
insl
or
mov
pop
dec
sub
push
cs
movsl
inc
sbb
jl
ljmp
cmp
hlt
inc
stos
in
and
pop
dec
mov
jmp
mov
adc
ljmp
fbld
fwait
inc
test
ror
sti
shll
jns
add
inc
cmp
test
enter
xor
mov
xchg
or
xchg
dec
mov
and
cmp
insb
bound
test
mov
mov
outsl
pop
lcall
adc
or
in
pop
mov
xchg
call
or
inc
in
or
jbe
iret
in
scas
dec
push
fimull
add
xor
loopne
and
sub
in
shll
or
cmp
pop
lret
jp
mov
cltd
pop
in
sub
les
filds
pop
xchg
inc
popf
pop
divb
mov
jge
or
out
dec
repz
mov
pusha
mov
xlat
adc
dec
adc
add
dec
adc
rorb
imul
out
xchg
jle
xor
clc
loope
pusha
loopne
inc
mov
lahf
lds
data16
jno
cmpsb
mov
pop
cmp
pop
cmp
data16
sub
inc
adc
lds
mov
sbb
pop
mov
mull
rcl
dec
pop
xor
inc
mov
lea
cmpb
loopne
shl
sub
mov
das
mov
fsubl
mov
jae
xor
dec
or
jle
push
push
mov
inc
out
out
pop
jg
mov
hlt
stos
imul
ret
aas
stc
je
lea
push
xchg
adc
sub
mov
mov
lahf
imul
fidivrl
std
adc
std
push
sub
mov
xchg
sbb
movsl
dec
pop
cmp
rorb
xchg
mov
mov
jl
pop
xor
ret
fstpl
std
inc
movsl
adc
outsl
xchg
mov
sub
jle
cmp
jbe
sub
outsb
mov
aaa
imul
popf
and
xchg
in
mov
mov
sbb
stc
lret
cmp
sub
insb
addr16
int
push
in
push
sub
sahf
dec
adc
mov
in
movsl
test
adc
mov
and
imul
dec
movsl
add
xor
out
pop
fists
mov
js
pusha
or
jle
jo
jl
ret
fcmovnbe
mov
sti
and
movsb
or
dec
mov
mov
mov
into
xor
adc
icebp
insl
movsl
fmull
jle
shrl
aaa
jnp
sub
stos
sbb
lods
repz
bound
dec
jae
sub
push
out
xchg
adc
les
push
stos
aaa
mov
fyl2xp1
adc
and
test
xchg
push
test
add
ja
ja
sub
mov
push
call
adc
xchg
aad
add
fwait
xchg
cmp
stos
jmp
gs
fnsave
push
push
lret
mov
dec
xchg
dec
in
ljmp
dec
pop
shrb
adc
mov
dec
jno
xor
pop
pushf
sbb
mov
mov
out
popa
loopne
lahf
mov
nop
sar
cmp
addb
hlt
subb
push
xor
add
shrb
rcrb
jle
add
sbb
cmp
int3
add
in
adcb
and
and
cld
jae
bound
dec
xlat
jl
inc
adc
fisttpl
cmp
mov
sbb
inc
sub
and
push
mov
xchg
enter
push
sbb
adc
push
push
push
shrl
insb
push
loope
lahf
and
ja
push
mov
cmp
rcrl
jae
ljmp
sub
lea
pushf
cmp
mov
popf
call
loope
xchg
repnz
and
mov
jmp
pop
or
pop
push
cli
xchg
dec
lcall
sub
iret
jmp
das
or
fwait
mov
jne
test
sub
sbb
push
and
repnz
shlb
imul
dec
je
and
fucomip
rcrl
cmp
gs
adc
adc
adc
sub
inc
inc
pop
repz
push
jmp
sub
jae
adc
iret
ds
cli
cmc
pop
rolb
cld
subl
out
pop
scas
sahf
jnp,pn
mov
pop
xchg
outsb
xchg
sub
mov
push
lea
xchg
mov
stos
push
dec
jmp
repz
enter
and
es
dec
add
xor
adc
adc
fs
aaa
dec
or
addr16
int
jno
mov
xor
rolb
insl
sbb
pop
xor
or
mov
or
xor
and
jmp
icebp
into
mov
cwtl
popa
shld
or
movl
sub
dec
rorb
cltd
aam
notl
out
sarb
cld
adc
push
into
lock
inc
pop
pop
sub
stos
test
cmp
mov
sbb
or
pop
clc
js
popl
adcl
andb
sbb
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
mov
test
or
sbb
leave
int
fsubrl
in
sbb
or
mov
test
or
sbb
lods
fnstcw
inc
sbb
jle
icebp
adc
push
cmpsb
inc
mov
sarb
repz
mov
imul
cmp
dec
int
fnstsw
or
cld
icebp
int3
dec
fsubrl
lods
cmp
push
cmpb
lea
mov
test
cmc
push
in
aam
lret
inc
sub
aaa
fisubs
push
xchg
aas
mov
mov
dec
in
add
call
test
scas
les
lds
fstpl
adc
subl
mov
cmp
adc
in
repz
shr
sub
mov
sub
cmp
pop
pop
xor
jmp
cs
cmp
adc
or
lods
sub
leave
insl
jmp
mov
or
inc
popa
jmp
and
inc
aad
pop
call
cmp
inc
int3
pop
and
ret
lods
sbb
popf
mov
movsb
and
add
adc
push
sub
sub
mull
repz
test
pop
pop
insb
sub
mov
cld
insl
out
int3
xchg
sub
adc
add
add
fistpll
cmp
mov
xchg
adc
and
cmp
cmp
jle
jb
add
cmp
insb
sahf
cmp
and
jmp
call
cmpxchg
pop
mov
jnp
jp
pop
pushf
jle
or
jge
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
hlt
xor
hlt
rcrb
adc
bnd
aaa
rorb
icebp
sub
and
stos
mov
stc
xor
jle
jno
xor
clc
fiadds
adc
and
mov
adc
or
xor
xor
int3
fldcw
cmc
dec
ds
cmc
jge
movsb
jg
scas
pop
xor
mov
sub
lahf
mov
faddl
push
test
xorl
stos
hlt
popa
cmp
jg
adc
or
je
test
push
fs
pop
outsb
lcall
cltd
loopne
jb
sbb
xor
mov
mul
lds
pushf
mov
in
mov
in
int
jbe
xor
adc
sahf
dec
into
out
cmp
mov
cmp
adc
xchg
mov
add
jge
jns
fstpl
inc
push
sbb
or
inc
arpl
rorb
lea
cmp
xorl
test
adc
outsb
repz
mov
pop
gs
adc
mov
pushl
pop
cltd
test
pop
sub
push
cmpsb
testb
adc
cmp
test
push
push
mov
pushf
aas
and
dec
or
xchg
xchg
dec
xor
rcrb
lcall
clc
inc
outsl
push
dec
and
mov
arpl
std
outsl
es
dec
sbb
jns
ja
rclb
es
aad
xor
cmp
lods
pop
fildll
sahf
inc
loope
pop
mov
lret
mov
imul
mul
cmp
xor
out
pop
ja
add
cmpsl
jb
mov
xor
jg
int
testl
xchg
cmp
ja
add
inc
pop
lahf
xor
sub
sub
sbb
int
insb
push
push
mov
aas
dec
jmp
sbb
inc
push
decl
pusha
sub
mov
popa
cmp
test
roll
jae
stos
mov
shll
loope
and
bound
outsl
es
fiaddl
sub
mov
push
pop
cmp
inc
cltd
sbb
inc
fmull
and
shll
and
sahf
popf
pop
push
add
cmp
jle
jo
pop
mov
mov
pop
adc
mov
mov
mov
add
movsb
mov
dec
iret
sbb
adc
into
push
sbb
into
es
jnp
test
mov
aaa
adcl
sbb
ds
or
push
imul
xchg
jnp
xor
push
pop
bound
push
iret
rcrl
lcall
xchg
ret
xor
ja
push
clc
xchg
jbe
inc
loope
inc
lcall
pop
mov
das
and
pop
jmp
add
insb
jo
xlat
jae
cmp
lret
lods
ficoml
inc
sub
inc
push
xor
xchg
es
imul
xchg
push
inc
inc
or
in
and
dec
jnp
or
int
fwait
pop
adc
test
mov
xchg
jle
testl
call
hlt
add
xor
xlat
jo
push
xor
lahf
std
cmpsb
shlb
mov
cmpsb
int
jl
dec
xor
or
cmp
shr
push
rolb
jnp
mov
dec
faddl
int
insl
push
xchg
lock
negl
ret
xchg
cltd
xor
cmpb
jnp
out
dec
mov
push
inc
sub
js
add
jo
fs
xlat
jnp
mov
jb
shll
jo
repnz
mov
jnp
cltd
nop
push
add
repz
lock
dec
sbbb
mov
pushf
mov
fsubrl
inc
pop
jmp
pop
fdivrs
sub
dec
inc
pushf
dec
inc
and
dec
sbb
fidivs
or
sbb
sti
pop
int3
cld
lahf
sbb
mov
repz
cltd
cmp
jno
push
push
mov
mov
sub
shld
mov
aas
lock
cmp
lret
ficomps
adc
scas
add
out
aaa
ja
clc
or
sbb
xchg
popa
adc
ret
sbb
pusha
xor
les
jp
adc
mov
adc
adc
mov
mov
xor
sbb
ja
jl
fsubr
sbb
stos
xor
push
cld
push
sub
xorb
pop
sub
loope
mov
add
mov
mov
mov
mov
mov
addr16
insb
mov
scas
iret
aas
je
pop
and
icebp
imul
loope
insl
mov
or
or
inc
xor
or
rolb
cs
mov
adc
sti
jl
frstor
mov
fisubrs
mov
xlat
lods
dec
adc
cwtl
data16
mov
adc
mov
rcl
sti
sub
dec
mov
dec
bound
jg
rcr
sbb
xchg
cwtl
mov
mov
fstpl
mov
add
flds
and
push
cltd
add
push
push
dec
jmp
out
and
xorb
out
add
cmp
ror
repnz
mov
popa
or
mov
and
repnz
shll
xchg
sub
sbb
loopne
inc
and
in
lea
ret
push
adc
lcall
loop
sub
jmp
imul
hlt
mul
lcall
xchg
mov
ret
sbb
int3
je
adc
xchg
aam
lcall
cltd
out
das
rorb
test
fwait
cwtl
leave
pop
add
ret
pop
rol
negb
xchg
mov
or
mov
pop
and
into
cmp
mov
fcomp
pop
adc
push
add
dec
xlat
pop
insb
fucomp
xor
insl
in
mov
loop
out
shlb
je
sub
test
lock
or
jne
lea
xchg
jbe
stc
or
test
inc
mov
mov
inc
jge
ffreep
int
mov
dec
push
xchg
rorl
inc
and
cwtl
jns
scas
mov
push
loop
aad
out
fidivrs
pop
jo
movsl
cmc
dec
ljmp
cltd
or
jle
repz
scas
pop
jg
xor
lock
jl
mov
push
ret
sbb
and
cmp
test
je
repnz
and
jo
and
jp
pop
mov
in
adc
sbb
stos
scas
mov
test
xchg
adcb
add
enter
in
mov
jae
movsb
clc
pop
cmc
repnz
jb
icebp
mov
sub
daa
xchg
push
jnp
das
out
mov
xchg
mov
lret
cmp
stc
cld
and
jge
lret
push
stos
xchg
and
das
sbb
cmp
adc
cld
lret
stc
adc
arpl
ja
cmp
pop
push
lock
mov
pop
push
jmp
shlb
jle
aad
push
loop
lea
xlat
mov
or
sbb
push
push
out
cltd
int
repnz
fdivrs
mov
jb
adc
pushf
stos
fsubs
sub
cmp
push
daa
int3
test
push
aam
and
dec
adc
sub
mov
push
nop
mov
mov
jns
not
aas
mov
dec
sti
test
les
jmp
movsb
inc
rcrb
lock
fdivrs
out
jns
aam
es
loop
cmp
mov
popa
add
xor
pop
cmc
lock
mov
addr16
and
test
lahf
ss
test
mov
mov
xor
arpl
jb
dec
cltd
lock
push
rolb
scas
jmp
pop
and
in
imul
int3
test
mov
shr
jo
imul
lret
in
mov
mov
cmpsl
sub
jg
cmp
push
push
add
je
xchg
xchg
dec
nop
lds
cmp
cltd
sub
dec
mov
nop
dec
cmp
jg
arpl
outsl
jns
in
fdivp
add
inc
outsl
xchg
jbe
jnp
jne
loop
ret
cltd
aaa
pushf
shrl
mov
and
or
sarb
lds
scas
dec
divb
push
lods
ja
out
pushf
cmc
xor
lahf
cmp
out
or
jne
pop
xchg
mov
or
and
stos
cmpsb
push
push
inc
inc
xchg
outsl
and
fstl
stos
stc
inc
xchg
pusha
push
mov
pushf
stc
shrb
and
mov
gs
sbb
mov
xor
pop
dec
push
sar
or
add
in
and
inc
aam
ss
lret
adc
or
out
in
and
cmp
mov
and
das
test
cmp
outsl
inc
jo
xchg
incb
aad
or
mov
pop
std
push
or
mov
xchg
movsb
ret
sub
leave
adc
outsl
sbb
jge
out
shrb
pusha
jns
pusha
testb
xlat
push
fstl
popa
cs
dec
xchg
sbb
cmp
cmp
repz
inc
scas
add
cmc
adc
out
sub
xchg
jnp
into
aam
jbe
push
push
cltd
aad
lds
xor
fdivs
dec
gs
jb
push
js
dec
push
outsl
fsubrs
dec
aam
jge
out
mov
lock
sub
out
dec
gs
pushf
mov
mov
popf
testl
test
mov
mov
imulb
hlt
andl
adc
test
dec
stc
push
das
clc
push
repz
inc
std
insl
lret
std
test
ja
inc
int
movsl
hlt
scas
sarb
and
lahf
ds
lds
pop
fisubs
and
jbe
mov
sbb
mov
mov
add
sub
in
pusha
cmp
ror
sub
js
push
fidivrs
fbld
mov
pop
jl
repnz
ret
mov
jo
insl
sub
xchg
mov
push
hlt
outsb
jg
inc
insl
add
fnsave
lret
and
ss
aaa
xchg
scas
nop
imul
aaa
loope
sbb
mov
out
into
cmp
ds
mov
fsubl
and
xor
push
sbb
pop
sarb
inc
jns
sub
jg
jle
mov
roll
repnz
les
xor
xchg
mov
scas
pop
mov
push
lods
int3
and
nop
cmp
enter
inc
fists
inc
movsb
mov
dec
scas
pop
xchg
mov
jbe
and
push
inc
fsubr
repnz
push
push
and
mov
sub
mov
movsb
ret
pop
push
mov
cmp
in
xchg
push
sub
xchg
inc
mov
or
out
fsts
lods
push
sub
dec
jb
pop
lcall
xor
mov
ljmp
xchg
xchg
xchg
lock
call
out
cli
shlb
add
loope
or
fdivrl
xlat
mov
sbb
pop
data16
adc
cwtl
pusha
adc
jno
insl
aaa
and
scas
dec
inc
lret
add
pop
lods
jmp
stc
add
cs
dec
ret
inc
clc
jne
dec
clc
insb
lds
pop
dec
cmp
iret
std
sahf
jge
pop
pop
test
jecxz
cmp
mov
inc
faddp
push
outsl
inc
loopne
or
dec
dec
sbb
adc
xor
and
leave
arpl
ret
xchg
test
cmp
sub
pop
dec
cli
mov
lahf
leave
xor
aas
inc
fidivrs
insl
outsb
mov
lock
sub
mov
mov
dec
ret
leave
imul
xchg
xchg
jp
shll
scas
jns
cmpsb
cmpsl
fldl
dec
fidivs
cltd
mov
lret
add
push
sub
test
push
aas
test
cmpsl
and
push
into
idivl
pop
jb
jge
je
cwtl
adc
das
cmp
in
out
cwtl
lock
jb
jge
push
xor
iret
and
dec
and
and
fists
add
push
inc
cmp
push
daa
push
in
lds
lahf
or
push
ss
jbe
inc
pusha
movsl
dec
and
cltd
dec
in
jl
cs
pusha
jnp
and
add
fsubs
jg
fstps
add
dec
xor
xor
stos
inc
pushf
mov
add
cmp
adc
fisubrs
adc
xlat
jb
xchg
mov
sbb
test
enter
add
mov
xchg
push
jnp
mov
add
or
mov
mov
cmp
lahf
sti
xor
dec
scas
nop
adc
or
sub
outsl
cmp
jmp
sti
jns
jge
lea
xchg
jae
add
mov
jb
les
xchg
push
fdivrs
stos
fcoms
xchg
sub
add
and
out
mov
inc
adc
int3
jmp
cmp
mov
xchg
jmp
pop
or
xor
std
aaa
sub
or
movsb
xor
cmp
leave
mov
mov
push
movsl
inc
mov
or
adcl
adc
and
dec
bound
fiaddl
cmp
jns
mov
insl
addb
xchg
in
cmp
jnp
sub
jg
je
cmpsb
or
mov
push
fisttps
push
ret
add
and
dec
add
xchg
negb
daa
mov
dec
ret
cmp
inc
lock
nop
aad
push
inc
inc
imul
in
popa
push
aad
jp
fxam
fistpll
in
call
sarl
sbb
out
jo
sbb
xor
xchg
sbb
in
sbb
nop
rorl
cwtl
mov
lea
pop
out
push
fiaddl
movsb
lretw
mov
push
mov
dec
mov
jo
push
mov
shrl
jo
xlat
daa
push
mov
mov
xor
jge
lods
rcll
mov
lods
mov
mov
add
sbb
and
cmpsb
jmp
repnz
dec
pop
repz
pusha
sub
xchg
mulb
add
inc
jmp
xchg
pop
jle
mov
push
sbb
pop
movsb
push
or
xchg
mov
lcall
lret
xchg
xlat
add
and
into
push
sbb
add
mov
jbe
adc
mov
mov
sub
adc
popf
and
mov
and
xchg
ljmp
outsl
call
or
les
in
mull
adc
subb
and
or
mov
cmpl
test
enter
xchg
adc
mov
jecxz
in
fwait
divl
and
test
repz
cmp
pop
pusha
cmp
ds
add
xor
lea
adc
hlt
or
outsb
dec
mov
ret
int3
xchg
pop
mov
cmp
jbe
fldenv
cli
jno
or
ljmp
mov
jl
mov
sbb
jmp
add
popa
in
mov
loop
das
stos
ret
jns
das
lcall
pop
jne
mov
inc
iret
sarb
mov
mov
dec
hlt
mov
or
push
pop
rcrb
push
xorl
int3
inc
rorl
int3
orb
jecxz
out
jo
mov
sbb
jp
xchg
sbb
arpl
mov
shll
sub
and
cmpsl
xor
xor
pop
es
sub
mov
pop
mov
cli
imul
stos
push
stos
add
js
and
test
push
mov
sti
mov
mov
fadds
cmp
mov
ds
mov
cmp
js
dec
gs
outsb
xor
add
imul
mov
rcll
rolb
aam
out
fisubrl
push
mov
out
push
aad
mov
mov
arpl
into
bound
aad
fs
push
sbbb
shrl
sbb
cmpsb
jo
incl
dec
sub
add
jl
dec
jp
cmpps
repz
imull
sar
inc
lds
adc
sub
ret
sbbl
push
loop
or
jns
call
sbb
cwtl
outsl
pushf
iret
jl
jno
xor
push
mov
mov
sbbb
mov
xchg
inc
mov
bound
pop
adc
stos
and
bound
test
dec
inc
movsl
lea
dec
mov
arpl
push
mov
jg
xor
inc
sbb
ds
fbstp
push
cmp
addr16
dec
and
lods
push
shll
cmp
cs
std
and
jbe
jg
fwait
mov
iret
mov
subl
cmp
mov
sbb
mov
stos
xor
insl
xchg
enter
mov
mov
cmp
or
icebp
inc
sbb
insl
adc
mov
subb
push
movsl
xor
loop
or
cltd
ds
adc
das
mov
leave
icebp
lods
push
xchg
sbb
xor
jbe
mov
jmp
jbe
fs
leave
mov
pop
test
loopne
sbb
popa
jecxz
inc
jmp
dec
enter
cmpsl
or
ret
cmp
out
or
jno
sbb
jg
lcall
mov
sbb
lock
inc
or
and
push
xorl
outsl
fisttpl
push
flds
or
push
pop
push
out
dec
int
pusha
push
nop
lods
clc
imul
pop
incb
pop
call
insl
push
jp
enter
or
mov
stos
pop
pop
cmp
pop
es
xchg
fldt
cmc
xor
push
mov
adc
roll
das
fcmovnb
rcrb
les
xchg
daa
fisubrs
xor
mov
jo
mov
test
addl
push
stc
ficompl
test
or
cmc
jle
int
dec
pop
decb
ljmp
cmp
popa
addr16
adc
mov
mov
arpl
aas
push
nop
mov
push
fwait
and
add
xchg
inc
addr16
cli
inc
aas
andb
jae
xchg
movsb
jnp
es
mov
addr16
mov
adc
pop
push
mov
adc
jmp
xchg
insl
sbbl
jg
push
cwtl
pop
mov
and
add
sti
adc
ret
sbb
cmpsb
jp
ja
jg
pop
ret
nop
and
cmp
push
cld
sahf
fisttpl
mov
add
cmp
push
mov
dec
pop
xchg
lds
cmp
loopne
test
fidivrs
test
add
shlb
pushl
mov
mov
mov
loopne
mov
aaa
sbb
ror
mov
cwtl
or
inc
inc
test
out
daa
cs
pop
inc
xor
lret
jg
out
stc
loop
add
iret
dec
mov
add
adc
fbld
jns
xor
lock
mov
pop
aaa
inc
pushf
jmp
mov
adc
pop
push
mov
cmpb
mov
cltd
pop
dec
ljmp
data16
push
mov
pop
and
jecxz
jge
cmpb
mov
push
popf
int
lcall
lods
or
cltd
push
cmp
inc
xchg
and
pop
push
push
xor
push
inc
add
jne
xchg
push
cwtl
data16
xor
aas
adc
mov
sub
xchg
call
pop
das
pop
dec
int3
addr16
addr16
sub
sub
shrl
push
andl
adc
push
inc
ret
sub
jne
sbb
cmp
pop
lods
inc
add
mov
adc
mov
cmpb
pop
push
rcl
xchg
rcr
mov
pop
jne
pushf
or
adc
fstpt
cld
jl
cltd
and
stos
je
in
ds
lods
fidivs
mov
insl
sbb
push
sbb
push
in
lods
sti
jns
or
push
test
push
repnz
jle
jno
daa
cmpsl
push
mov
xchg
push
pop
xor
cmc
popa
and
iret
fiaddl
ret
jne
test
ljmp
add
icebp
xor
dec
jle
cs
ja
add
sarl
and
inc
je
inc
push
aam
inc
xor
repnz
js
dec
subb
or
sbb
pop
aaa
sub
xor
mov
rcll
cmc
ljmp
mov
push
adc
stos
mov
stc
inc
dec
jl
lods
into
popa
xchg
xchg
cltd
enter
inc
pushf
outsl
xor
lock
call
and
jp
les
mov
dec
xchg
inc
scas
stos
inc
mov
ret
mov
xor
cmp
mov
push
mov
dec
sahf
rclb
dec
jge
imul
fildll
push
xor
loop
jmp
sarl
xlat
andb
sahf
dec
sub
outsl
adc
ret
mov
aaa
shr
shll
fildl
iret
shrb
xlat
dec
icebp
inc
xor
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
lods
cmp
or
sbb
insb
in
jl
dec
int
pushf
sbb
int3
dec
fcompl
jne
mov
insb
in
js
dec
in
insl
fstpl
or
cld
jge
int
pop
rcll
pop
cmpsb
lea
sbb
add
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
and
jno
popa
adc
arpl
adc
push
popf
sbb
mov
xchg
jecxz
repz
mov
xor
add
adc
jb
inc
and
shll
loope
roll
mov
xor
add
jb
inc
and
mov
test
cli
movsb
repz
in
std
movsl
aas
outsb
or
ja
fadds
popf
jmp
or
and
dec
scas
fldcw
imul
mov
push
cmp
daa
mov
dec
je
sbb
test
scas
xor
add
ja
fsubrs
inc
mov
xchg
loope
sbbl
sub
xchg
pop
lea
add
dec
and
jne
pop
pop
outsb
repnz
scas
loop
int
std
cld
pop
in
jmp
stos
push
icebp
pop
inc
cmpsl
icebp
jge
xchg
aam
and
scas
jnp
and
mov
call
fnclex
mov
adc
mov
or
pop
xor
popa
adc
bound
xor
push
pop
mov
rcll
add
xchg
cmp
xor
inc
sbb
and
and
rcl
xchg
stos
xchg
roll
fdivs
and
add
jno
and
adc
xchg
shl
cltd
shr
out
fsubs
sub
push
push
add
inc
and
mov
loope
xchg
loop
repnz
mov
xor
popa
adc
bound
jb
inc
and
mov
loope
xchg
loop
repnz
mov
sbb
xchg
jmp
mov
mov
lods
xchg
lock
andl
ljmp
adc
out
aas
in
pop
push
inc
cmpsb
xchg
cltd
ficoml
cmp
mov
stos
adc
cwtl
aam
movsl
loop
and
es
pop
call
push
leave
cmc
xor
sub
mov
in
scas
std
dec
add
lret
std
sahf
das
inc
fwait
ljmp
lcall
mov
imul
outsb
adc
sub
and
fimull
lret
aad
inc
mov
pop
cmp
shl
push
add
pop
dec
fs
das
push
jb
arpl
or
arpl
xchg
cli
outsb
pop
int3
fmull
xchg
cmp
sbb
aaa
xchg
inc
data16
aad
mov
divb
mov
ljmp
sarb
or
jne
add
in
xor
sbb
fsub
and
inc
mov
fimuls
inc
push
sub
xor
push
or
cmp
movsl
aas
out
icebp
ret
loopne
ds
lahf
aad
rcrl
and
cs
outsl
test
cmp
adc
sarl
stc
repnz
loope
or
mov
mov
mov
adc
mov
dec
xchg
sub
push
roll
jmp
push
fwait
jnp
jp
inc
ss
inc
jb
push
data16
add
or
bound
sbb
repz
shl
and
rcr
push
xchg
aam
mov
dec
xor
loope
daa
jne
std
sub
jno
cmp
sbb
movsb
fbstp
lcall
cmc
mov
jbe
stos
adc
mov
push
mov
jo
push
repz
mov
push
add
addb
jns
roll
pushf
js
out
outsb
ficomps
int3
enter
jmp
inc
out
or
out
loopne
repz
pushf
scas
dec
jb
outsb
mov
xchg
sub
lods
xor
mov
js
push
frstor
in
shrb
mov
lods
dec
lock
jb
fmull
imul
or
sub
movsb
mov
fisttps
nop
repz
push
out
popa
aam
or
xchg
ljmp
les
jle
dec
sti
fildll
fwait
inc
xor
data16
mov
xchg
dec
dec
mov
stos
inc
arpl
movsb
imul
add
jge
mov
push
pop
mov
fbstp
pop
in
out
pop
aad
insl
xlat
push
xor
les
std
jmp
mov
icebp
push
adcb
adc
mov
push
out
add
movsb
sbb
sbb
notl
ljmp
mov
cmpsl
cmp
sbb
outsl
fidivl
and
xchg
movsb
lret
mov
dec
mov
in
loope
scas
mov
adc
mov
cwtl
cltd
mov
addr16
jge
sbb
icebp
punpckhdq
sub
mov
dec
mov
je
mov
popf
sahf
repz
push
or
mov
add
or
add
pushf
xchg
negb
stos
jbe
pop
negl
push
sub
fisttps
cs
dec
push
mov
pop
push
aam
or
sbb
lock
or
pop
mov
rclb
shll
fcoml
aas
mov
lock
pushf
call
std
push
imulb
sbb
sbb
push
mov
lea
es
out
mov
lahf
outsl
int3
dec
xlat
and
sbb
ja
add
stc
rorb
push
mov
aaa
in
mov
inc
sub
adc
fbstp
pop
adc
sub
pop
add
movl
pusha
sub
mov
adcl
sti
add
mov
ret
les
mov
mov
insl
xor
cmp
js
or
rcrb
cmpsb
out
movl
fdivl
inc
addr16
push
or
and
mov
fmuls
and
pop
push
adcl
and
push
inc
vmptrld
negl
mov
add
jb
addr16
adc
and
pop
leave
and
lahf
mov
ss
push
mov
push
pop
mov
push
leave
fdivs
mov
scas
fcompl
inc
and
or
mov
cmp
popf
aas
pushf
jmp
ds
scas
addl
sub
pop
lods
push
pusha
iret
jnp
and
test
sub
lret
ds
mov
cmp
inc
xchg
and
xchg
je
push
xchg
add
mov
dec
sbb
notl
push
cmp
push
push
xor
pushf
push
sub
lcall
or
cmc
xor
or
loope
mov
jle
adc
inc
inc
inc
rolb
lods
loopne
pop
xchg
cmc
es
mov
jbe
imul
repz
rcl
xor
mov
fsubl
out
lret
adc
mov
mov
sub
pop
push
inc
popf
and
lret
hlt
mov
and
push
je
jns
out
mov
xchg
dec
insb
notl
das
pop
cs
lock
fdivrs
into
lods
lret
cmp
mov
icebp
aaa
aad
hlt
nop
rcrl
test
sbb
in
and
jne
bound
icebp
into
das
sahf
shlb
pop
es
arpl
or
cwtl
aas
sub
out
push
push
sub
xchg
xchg
in
sbb
xchg
sub
ret
clc
xchg
xchg
cmp
push
ret
xchg
fcoms
adc
cmp
xchg
popf
and
psrlw
sbb
lods
pop
stos
fcos
add
jne
mov
inc
cmpsl
in
xchg
jne
sbb
or
dec
push
jg
adc
mov
leave
sbb
mov
and
movsl
mov
cwtl
and
inc
fsts
push
pop
out
inc
aam
push
notl
orl
testl
mov
mov
mov
inc
inc
scas
lock
add
stos
repz
mov
adc
je
stos
loop
out
inc
mov
add
dec
inc
arpl
mov
dec
test
addb
lock
fwait
mov
jno
out
aad
sbb
rcrb
pop
mov
and
arpl
mov
das
je
xchg
mov
jnp
loopne
mov
lret
shlb
test
or
inc
orl
pop
add
or
fnstcw
dec
push
xchg
movsl
sub
stos
jg
je
add
and
mov
push
xchg
test
cmp
add
push
jb
xor
enter
jge
or
js
lods
fistpl
xor
xchg
nop
dec
jge
jb
dec
fucom
cmpsl
mov
aas
lea
jb
shlb
cmpsb
cmpsl
sti
in
jne
mov
lcall
mov
daa
repz
sub
or
mov
cmp
lock
mov
lcall
lret
pop
inc
sub
or
dec
xor
mov
xchg
sarl
in
push
and
jl
mov
dec
aas
jo
pusha
and
lods
stc
inc
sarl
cmp
es
or
cmp
test
psubd
inc
test
xlat
push
out
lret
cmp
fsubs
mov
das
mov
inc
cld
push
pop
jnp
push
pop
sub
les
popf
fwait
sub
pop
call
adc
xchg
lods
or
mov
inc
repnz
es
gs
and
repnz
stos
mov
inc
xor
sub
out
mov
cmpsl
lret
dec
sub
sahf
je
hlt
fwait
or
and
xor
jp
sti
stos
mov
enter
adc
loopne
inc
cmp
cltd
cmp
dec
testb
push
call
pop
inc
stos
cld
js
call
or
push
add
imul
sub
mov
inc
pop
fstl
stos
dec
and
mov
movsb
mov
cltd
jns
je
jb
add
adc
add
xchg
cmp
lret
mov
ret
jae
ljmp
and
xor
xlat
xchg
sub
and
cmpsb
leave
cltd
add
scas
leave
pop
pop
fcoms
adc
or
fisubrs
jne
in
mov
insl
popf
int3
out
push
shr
jmp
decb
xchg
or
mov
adc
mov
push
les
jl
adc
inc
pusha
mov
add
shl
push
test
push
fcomps
call
or
jns
xor
in
ret
ret
inc
ret
imul
dec
push
push
mov
orb
rorb
pop
into
mul
jmp
push
push
xchg
aas
test
ljmp
mov
rcll
cld
pop
fisubrs
callw
pusha
dec
add
mov
adc
rcr
mov
xchg
int3
pop
push
mov
sti
mov
aaa
jmp
fsubrs
movsl
lret
mov
sub
dec
stc
jle
sahf
hlt
dec
std
pushf
fmuls
sub
iret
cmp
insl
insl
or
nop
pop
bound
push
push
or
rcrb
subl
cltd
mov
das
xchg
into
add
xchg
mov
pop
into
aad
test
adc
xchg
inc
addb
mov
test
ds
dec
sbb
mov
cwtl
popf
pop
lahf
in
or
das
int3
fmul
and
or
or
jo
sbb
in
cmpsb
jns
xchg
pandn
sar
cmp
idivb
jbe
aas
cmc
jmp
test
fadd
cmpsl
ss
fdiv
adc
test
or
mov
int
xchg
mov
mov
cmpsb
and
addl
lret
mov
movsb
lock
or
mov
mov
andb
push
in
mov
sar
rol
mov
xor
leave
push
mov
dec
lcall
outsb
or
xor
ret
mov
cmp
fisttpl
and
or
push
mov
jle
std
negl
cmp
into
xor
fsubrl
sub
call
lds
shlb
cmove
adc
sbb
cmp
paddusb
arpl
xor
adc
in
std
jne
mov
movsl
mov
popa
mov
sahf
adc
lret
mov
in
leave
sti
je
popf
inc
push
mov
movsb
push
and
shl
lods
call
mov
xor
pusha
adc
fbld
sub
push
bound
fsubl
mov
and
mov
out
shrl
xor
jbe
adc
imul
jo
push
gs
jl
pop
out
mov
or
push
push
cmc
jge
xor
mov
sub
iret
fimuls
mov
and
sbb
das
xor
sub
mov
les
mov
fucompp
xor
sbb
xor
prefetcht1
adc
xchg
jl
rcrb
lcall
add
add
push
fsubs
cmp
lds
push
cmp
sub
fdivs
or
xlat
hlt
push
gs
mov
adc
push
cs
imul
xchg
cmp
jl
sbb
test
pop
ret
shl
cmp
mov
cmc
outsb
mov
cmc
or
jns
or
push
je
stc
jl
clc
fldenv
sbb
inc
xchg
or
xchg
addr16
inc
dec
mov
pop
cmpl
int
lods
imul
out
pop
jecxz
jae
loopne
inc
or
xchg
adc
cmp
inc
les
add
movsl
loop
inc
shlb
mov
ret
sbb
cld
aaa
cs
gs
frstor
pop
cmp
incb
das
sysret
outsb
jae
mov
rol
fs
test
testl
sub
mov
push
mov
test
mov
mov
push
adc
adc
testb
pop
dec
xor
je
xorl
jb
insb
mov
jb
xorl
pop
jae
out
pop
or
in
mov
insl
incl
adc
xor
aam
enter
fbstp
xor
xlat
fnstcw
sub
rclb
dec
das
mov
sub
setle
mov
dec
inc
sarb
movsb
outsl
hlt
and
jbe
or
adc
lods
or
loopne
movsb
cs
inc
icebp
lods
insl
lahf
divb
pop
jae
enter
mov
sbb
adc
inc
jle
jne
push
pop
xchg
sbb
dec
xchg
mov
pop
mov
inc
jmp
sbb
or
mov
fnstsw
clc
cmp
int
sub
incb
scas
sti
cmp
out
pop
sub
aad
mov
jnp
loop
ja
sbb
aam
push
or
into
lods
lahf
jae
out
pop
cli
sbb
xor
mov
jp
or
mov
lcall
cmpb
pop
test
insl
fidivrs
xor
jns
lea
lods
outsb
xor
push
ss
or
sar
sahf
mov
sub
es
mov
mov
stos
sbb
mov
jno
ljmp
shlb
adc
and
mov
jl
test
push
jge
clc
add
sbb
pop
cmp
into
xchg
pusha
cmc
sti
adc
jl
cmp
pop
mov
cmp
xchg
add
cmp
push
movsl
das
lahf
loop
shl
cmp
sar
pop
sub
ret
mov
xchg
cmc
hlt
inc
dec
mov
jmp
stos
aam
xorl
mov
das
insb
add
ret
add
test
pmuludq
add
mov
out
cltd
movb
pushf
ret
cltd
repz
xchg
inc
into
jne
add
lret
add
sbb
push
fidivl
stos
add
or
jge
test
repz
mov
cmp
dec
mov
or
jl
jl
adc
or
xor
and
filds
testl
mov
dec
fisubrl
xor
loope
test
loop
xchg
movsb
enter
sbb
mov
mov
into
popf
stc
std
test
add
mov
cmp
scas
pop
dec
stos
mov
inc
xlat
frstor
nop
adc
insb
pop
fisubrs
sub
sbb
dec
adc
inc
or
push
stc
inc
push
in
mov
add
lret
insl
frstor
add
xor
out
imul
and
jmp
in
call
xor
or
mov
pop
dec
in
leave
test
adc
pop
push
std
inc
mov
pop
testb
mov
aam
mov
scas
xchg
lods
popf
xchg
sbb
adc
mov
xor
scas
dec
dec
roll
ret
in
outsb
cmp
mov
cmpsb
fsub
iret
int
push
lret
decb
xchg
imulb
enter
cmp
jo
xchg
icebp
mov
scas
pusha
dec
int3
shll
xor
outsl
lret
push
ja
ret
cmc
ror
jo
mov
mov
lods
jmp
ret
ja
pop
dec
pop
mov
pop
inc
mov
into
test
lahf
outsl
mov
mov
inc
fwait
cmpl
jo
pop
fistl
bound
fisttpll
in
filds
push
xor
fcoms
or
loopne
outsl
and
sub
arpl
std
add
sub
shll
jge
inc
mov
mov
cmp
das
xchg
testb
decl
jae
mov
jb
xchg
nop
mov
push
in
add
pop
hlt
cli
pusha
push
push
mov
or
sub
push
rcrb
mov
cmpsb
mov
aad
fstpt
and
sahf
sbb
loope
jecxz
push
xchg
mov
push
test
mov
out
test
mov
xchg
dec
cld
adc
sbb
cmp
jno
sbb
cli
pop
cmp
add
into
mov
sbb
hlt
inc
cmp
xor
jmp
mov
and
and
jg
jo
pop
ret
div
add
jle
scas
ss
rolb
jl
and
add
ljmp
data16
lret
jae
stc
or
mov
sbb
mov
out
lcall
add
mov
cld
xor
into
mul
mov
cmp
mov
imul
pushf
push
xchg
gs
stc
insl
mov
push
outsl
push
lock
std
adc
cld
mov
mov
xlat
leave
cmpsl
mov
push
out
sbb
add
adc
mov
jae
movsl
adc
daa
mov
inc
sub
dec
jmp
sti
fdiv
std
pop
data16
xchg
jg
jno
filds
loopne
and
ljmp
fwait
scas
in
lods
sub
inc
scas
adc
sub
jb
mov
sti
and
in
mov
xchg
mov
mov
cltd
stos
push
add
mov
clc
push
mov
push
jge
pop
jp
loop
jb
and
adc
je
cwtl
out
adc
mov
lods
subb
out
in
fcoms
pop
jae
and
cmp
stos
add
and
adc
add
fldcw
pop
sbb
call
mov
cli
lret
mov
mov
test
loope
cmpsb
jbe
jbe
lods
fmull
pop
leave
out
pop
xor
daa
and
mov
add
outsl
add
or
daa
lock
mov
lcall
insl
mov
lds
push
mov
mov
stos
clc
sbb
iret
dec
push
xor
mov
and
and
pop
adc
fidivl
movsl
arpl
adc
push
inc
stos
testl
mov
outsl
xor
pop
sub
mov
xorb
pop
data16
dec
aam
xchg
xchg
out
sbb
mov
mov
sahf
jns
enter
mov
out
mov
test
data16
or
xor
out
out
jne
adc
xor
mov
cmpsl
cli
std
fwait
in
imull
cld
xchg
sbb
into
fs
push
mov
cmp
test
xlat
cmp
add
inc
imul
mov
inc
mov
sbb
scas
int3
out
ja
sub
popf
push
sub
scas
enter
repnz
push
xchg
enter
sbb
inc
adc
and
das
lods
gs
sub
dec
es
jmp
shll
dec
add
push
mov
lcall
cmpsl
ss
cltd
sbb
repz
fwait
pop
mov
or
clc
jne
dec
add
pop
push
loop
in
xchg
jge
ja
sbb
or
fisubs
imul
in
arpl
sub
lret
sbb
fcompl
out
inc
mov
pushf
shll
mov
mov
pushf
pushf
les
js
xor
sbb
xchg
xchg
repnz
cmp
pop
cltd
mov
add
test
add
pop
xor
jecxz
and
jg
pop
scas
add
in
jb
mul
test
ret
lahf
add
mov
dec
out
xchg
mov
xchg
lock
scas
jmp
adc
mov
mov
xor
outsl
adc
mov
dec
test
out
xchg
push
and
stos
mov
loopne
pop
sub
sbb
jmp
and
mov
jae
mov
cmp
shlb
out
imul
popf
popf
lods
jp
stos
out
cmp
push
bound
lds
pop
dec
aas
inc
push
int3
mov
or
mov
jmp
out
mov
lcall
les
push
sarb
xchg
dec
xor
lcall
cmc
mov
fmull
loop
lods
notb
sub
andb
insl
mov
or
adc
call
out
clc
daa
das
xchg
rcr
adc
lret
mov
bound
stos
jnp
ljmp
mov
in
out
inc
and
adc
idivb
punpcklbw
pop
add
push
addr16
loop
or
mov
subb
sub
xlat
test
stos
mov
pop
xchg
lcall
xor
inc
add
pop
xor
pop
and
into
gs
xchg
int
cs
lret
out
movsb
xchg
mov
push
ss
mov
xor
out
inc
push
jl
sarb
add
lret
xchg
lcall
dec
jmp
stos
adc
push
xchg
inc
jle
cmp
rcrb
jo
cli
ss
test
roll
cmc
and
jno
inc
das
pop
xchg
xor
add
adc
jb
inc
and
mov
loope
xchg
loop
repnz
mov
xor
popa
adc
bound
jb
inc
and
mov
loope
xchg
loop
repnz
mov
xor
add
andl
push
shll
loope
xchg
loop
repnz
dec
rolb
sbb
adc
bound
jb
inc
mov
sbb
loope
out
or
inc
adcb
mov
jp
push
mov
repnz
aad
in
cmc
and
bound
xchg
mov
adc
xchg
push
aad
in
sti
xor
bound
mov
insl
stos
sbb
or
call
mov
or
loop
sub
cmp
movl
adc
add
sbb
insb
lods
xor
popf
test
les
leave
loop
mov
and
std
cld
in
sbb
int
and
mov
xchg
xor
dec
xchg
stc
scas
shl
scas
xchg
add
adc
dec
js
test
imul
inc
faddl
lods
pop
push
loope
ret
ficoml
aam
rcr
or
cs
mov
adc
pop
xchg
cli
add
lcall
add
inc
pop
xor
out
pop
mov
cli
dec
pop
ja
jecxz
mov
cwtl
frstor
mov
pusha
mov
mov
jne
adc
add
jmp
add
or
cmp
sub
js
jae
xorb
add
add
jbe
jae
push
insl
mov
push
test
lock
xlat
or
xor
or
add
pushf
and
jbe
ja
inc
mov
test
push
roll
cmp
dec
icebp
adc
repnz
aad
in
cmc
xor
bound
xchg
mov
adc
repnz
aad
in
cmc
xor
bound
sbb
dec
ja
daa
sub
in
in
xchg
out
or
call
xchg
in
das
fstpt
push
jmp
imul
mov
clc
pushf
adc
xchg
xor
cmp
int3
adc
pop
in
xchg
mov
int
popa
xchg
out
popf
cli
arpl
shlb
aad
test
push
ss
sahf
sti
sbb
ljmp
pop
in
add
push
mov
dec
in
sub
imul
sbbl
lcall
fmull
hlt
iret
sti
sbb
fldenv
add
jno
lret
jnp
fmull
dec
insb
add
mov
dec
sbb
stos
dec
sbb
test
inc
jbe
add
push
inc
pusha
xchg
rcll
xchg
and
sarb
and
repz
xchg
pop
test
push
sti
push
and
push
loope
sub
inc
outsb
sbb
aaa
xor
inc
jo
push
fst
pop
mov
lcall
je
in
dec
sbb
jne
adc
scas
mov
xor
xchg
xor
push
out
test
rolb
inc
sbb
push
scas
push
xchg
mov
dec
ja
clc
mov
xor
stos
mov
sti
and
dec
and
push
jo
inc
push
jns
xor
mov
push
adc
aas
xchg
mov
sbb
xchg
inc
out
mov
shll
cld
mov
xchg
jmp
jns
loope
or
jmp
cmp
pushf
jg
jle
jno
filds
jno
jp
push
xchg
mov
mov
add
out
ljmp
into
pop
push
pop
cli
scas
ficompl
mov
cmpsb
push
dec
xchg
jmp
add
pop
adcl
sti
cld
ficomps
push
jmp
mov
jg
cli
jbe
xchg
pop
push
sbb
add
sub
inc
jp
jbe
jg
jmp
hlt
je
cli
xor
sbb
outsb
sub
ja
out
mov
enter
das
add
xchg
outsb
mov
jno
inc
mov
es
cmp
call
mov
movsb
and
or
adc
cmp
inc
push
dec
push
hlt
or
scas
insb
sbb
cld
pushf
data16
stos
adc
adc
mov
mov
in
aas
imul
lcall
xchg
cwtl
mov
and
xor
fwait
lcall
ret
sahf
pop
je
lds
push
sbb
aam
push
jmp
mov
dec
call
outsl
mov
rorb
lret
add
xlat
or
orl
scas
cld
mov
push
lds
fbstp
test
pop
adc
mov
add
sub
es
movsl
fxch
mov
mov
cld
subl
xchg
lret
sbb
mov
loopne
mov
hlt
mov
inc
push
je
shll
cmp
mov
cmp
xchg
in
fidivs
or
push
push
push
mov
ljmp
lea
sbb
or
adc
xchg
xchg
push
sbb
sbb
cwtl
pop
out
iret
xchg
outsl
lock
cmp
je
dec
dec
xchg
jbe
fcoms
xchg
stos
dec
fsubl
sbb
inc
dec
sbb
xchg
arpl
xor
scas
dec
xchg
bnd
dec
fsubr
dec
rcr
addr16
shrb
push
pop
xchg
pop
xor
fcom
inc
and
outsb
cmc
repnz
jbe
mov
cmp
and
lods
lret
cs
stc
pop
mov
add
mov
xchg
xor
mov
fadd
inc
cli
ljmp
xlat
daa
inc
loope
cmp
stos
ss
or
adc
dec
pop
mov
fisttps
sarb
sbb
lea
xchg
or
and
sbb
xchg
icebp
push
imul
adc
insb
fisttps
xor
push
xlat
dec
das
jp
mov
xchg
fisttpll
pop
add
and
pop
inc
aad
and
cmp
inc
insb
push
test
ficompl
cmp
pop
hlt
int
mov
pop
push
in
int3
and
add
or
and
cmp
mov
daa
jno
filds
add
xchg
pop
clc
ret
xor
and
inc
sbb
repz
mov
and
scas
dec
lds
roll
cli
shrl
push
std
fnstenv
addl
syscall
or
cmpsb
lock
jmp
pusha
jae
stos
xchg
dec
add
mov
cltd
andl
or
pushf
addr16
fidivs
cmp
movups
jns
adc
xchg
mov
repz
fmul
pop
push
xor
inc
jae
into
scas
push
mov
and
je
je
jbe
xor
sbb
shlb
fstpl
pop
nop
sbb
xchg
inc
ror
cmp
in
jne
adc
adc
and
sbb
shrl
mov
in
mov
std
xchg
test
ja
cmpsb
sub
sarb
xor
imul
add
shrl
iret
xlat
push
adc
xchg
sahf
xchg
in
faddl
stos
xchg
and
add
lods
sbb
jl
addr16
loope
nop
sub
insb
and
dec
out
sbb
jns
cmp
push
call
shrb
repnz
cmp
lret
jl
xchg
fcom
cmpl
xlat
xchg
and
mov
pop
call
rorl
loope
mov
sbb
add
fdiv
repz
call
mov
pop
popa
test
cwtl
in
das
sub
ljmp
add
lea
inc
xlat
scas
add
iret
cli
shlb
pop
aaa
nop
dec
adcb
or
xor
inc
orl
adc
add
loop
sbb
insl
pop
pop
ror
push
js
mov
loop
add
int
iret
mov
popf
dec
xchg
mov
jl
testl
mov
stos
sbb
jno
or
xchg
popa
sbb
scas
pushf
jnp
mov
mov
xchg
add
mov
aas
fstp
push
icebp
sahf
cli
mov
xor
loop
lods
insb
int3
shl
enter
pop
push
and
add
jmp
sub
addr16
outsl
pop
loope
xchg
test
dec
scas
imul
call
es
pop
decl
sub
inc
test
cmp
lock
jno
lods
leave
loop
mov
cwtl
push
cmpsl
fistl
dec
pop
fsubrs
cmp
neg
js
pop
aaa
and
aam
xchg
cli
in
shrb
mov
add
scas
cmp
gs
push
rclb
rorb
inc
aaa
pop
inc
aam
scas
cld
insl
inc
les
adc
stos
or
sarl
jbe
int3
popf
inc
pop
sub
push
les
add
loope
pusha
in
dec
lahf
push
test
insb
mov
add
out
xchg
cli
div
xor
stc
mov
dec
mov
adc
inc
jo
aad
clc
jno
mov
outsb
mov
adc
mov
adc
xchg
cltd
adcb
cmp
cmpsb
or
loop
lds
mull
stc
repz
adc
fsubl
add
cmc
or
daa
or
mov
jne
daa
sbb
loopne
in
jmp
mov
xorb
repnz
rcll
out
test
mov
xor
cltd
addr16
push
lods
push
push
leave
test
mov
add
cmpsl
lock
outsb
in
shl
sub
mov
dec
outsb
mov
mov
xor
pop
fsubl
leave
mov
jo
jb
shlb
aaa
mov
out
cmp
sti
lods
dec
jmp
and
sub
add
and
in
shl
push
jge
dec
nop
dec
outsl
push
push
cmpxchg8b
test
int
cmpb
or
into
jne
das
cli
sub
pushf
ret
dec
sub
mov
push
mov
jmp
lahf
std
push
push
daa
jle
test
out
mov
pop
arpl
dec
push
dec
or
inc
pop
sub
or
pop
dec
popa
sbb
mov
or
mov
xor
adc
and
sarl
out
mov
mov
or
cmp
data16
mov
aad
pop
and
cmp
xor
lods
or
lods
out
pop
mov
mov
xchg
sarl
sbb
arpl
mov
outsl
jl
lods
cmpsb
pop
jle
incl
sbb
xchg
sbb
out
mov
push
pop
inc
pop
aaa
je
add
mov
or
cs
mov
jb
xchg
out
inc
lock
popa
mov
lea
add
dec
mov
pushf
rclb
add
push
pop
dec
or
push
pusha
call
dec
mov
or
adc
and
mov
xor
and
pop
adc
pop
push
sbb
out
daa
sub
fsubr
xlat
add
clc
push
mov
mov
leave
fsts
outsl
in
cmp
mov
sub
hlt
xor
pop
and
or
add
cs
pop
pop
test
into
stc
inc
xor
gs
push
lret
mov
sar
sbb
mov
add
mov
xchg
push
cmp
pop
test
mov
shll
push
jns
sub
pop
shll
das
fldl
aam
xchg
inc
mov
stos
enter
lret
inc
sbb
bnd
add
mov
fdivrp
pop
test
xor
mov
int
cmp
and
mov
jecxz
insl
aas
aam
and
sub
push
mov
jge
and
insl
cmc
push
pusha
divl
in
sbbb
pusha
hlt
fcoml
lcall
jno
pop
lcall
lret
jno
ds
sub
into
rorb
adc
adc
xchg
mov
or
dec
out
popa
ljmp
fdiv
lahf
daa
pop
loop
dec
or
lcall
xor
aam
or
pop
rol
fwait
push
in
cmp
std
jp
jp
xor
lahf
pop
mov
test
in
jne
sub
enter
popa
stos
and
and
mov
repnz
inc
mov
mov
mov
mov
out
push
iret
mov
and
stc
addr16
addr16
es
mov
pop
mov
pop
fnsave
dec
loope
cmc
fwait
popa
push
in
fdiv
cmpsb
and
fdivrp
pushf
sbb
pop
aam
data16
jns
push
xchg
mov
mov
fcoms
mov
sbb
popf
in
cwtl
xchg
ja
jo
aaa
inc
mov
insb
mov
outsb
dec
mov
fldcw
mov
outsl
sbb
sbb
adcl
mov
xlat
sub
icebp
iret
inc
sahf
push
cmpsl
push
mov
xor
inc
daa
mov
je
out
insl
test
cmp
fwait
lcall
jns
inc
cltd
dec
test
sub
scas
mov
jae
sbb
mov
pushf
sub
test
pop
hlt
ret
mov
push
pop
add
mov
scas
and
aas
pop
lods
std
mov
out
ret
aaa
test
es
aaa
fmul
pop
pop
add
mov
lock
fldt
out
test
add
add
loope
jge
nop
flds
inc
lret
cmpsb
inc
scas
and
mov
mov
add
lea
stos
jge
sub
psllq
clc
mov
jmp
push
cld
cmc
add
mov
iret
imull
lds
or
xor
popa
sahf
fsubrs
cmpsb
mov
cmp
mov
roll
pop
adc
cs
sbb
sbbl
sbbl
lret
fstpt
test
inc
loope
jge
cld
sbb
arpl
xchg
into
rorl
or
push
mov
push
jb
adc
repnz
sbbb
and
dec
cwtl
bound
mov
lcall
mov
inc
pop
leave
es
out
aaa
mov
mov
in
xor
add
cmp
jmp
roll
dec
loope
sub
jae
pop
lds
sub
xor
pop
xor
xor
pop
add
out
mov
test
aaa
sub
lea
or
push
loope
push
scas
cmp
lods
ret
testl
das
lods
movsl
dec
fidivrs
inc
jno
mov
inc
inc
clc
sbbb
push
out
inc
out
and
loop
xchg
mov
out
or
jnp
jb
pop
xlat
sbb
sub
sti
add
leave
pop
sbb
xchg
sahf
nop
mov
pop
in
mov
or
repz
mov
out
lods
xchg
dec
sub
lret
or
or
mov
fdivs
ret
pop
mov
push
rcrl
adc
stos
stc
lcall
movl
fistl
inc
dec
jo
pop
and
aam
add
clc
dec
cmp
data16
insb
lcall
sti
lret
mov
in
ja
hlt
bound
daa
push
cli
sbb
add
jmp
aas
push
rcrb
out
dec
jp
mov
pop
cwtl
inc
imull
inc
lods
fdivp
les
stos
jp
add
test
inc
outsl
adc
test
push
mov
sub
mov
lret
es
enter
inc
sar
xlat
cmp
mov
movsb
adc
mov
imull
pop
dec
stc
mov
aaa
aas
cmpl
add
and
jmp
ror
fstpt
inc
movb
mov
fsub
fldl
ret
push
cld
jnp
push
and
repz
pop
xor
push
xlat
inc
in
arpl
dec
xor
jge
push
jg
adc
lock
fucom
pop
js
lahf
add
pop
mov
pop
lods
sub
add
lcallw
inc
jge
or
dec
inc
add
lret
in
aaa
xchg
stos
mov
mov
inc
or
and
out
fiadds
jo
out
pop
fnstsw
cltd
iret
insb
add
adcb
xchg
inc
xlat
mov
dec
xor
cmp
mov
iret
pushf
cwtl
add
xchg
cmpsl
lea
loopne
mov
shl
das
stos
and
dec
lods
inc
or
stos
into
jecxz
gs
inc
or
xorb
inc
jo
out
mov
ja
or
dec
jbe
or
jns
dec
popf
pusha
cld
mov
xor
sbb
and
popa
out
mov
sub
push
mov
lcall
mov
adc
inc
mov
in
in
mov
gs
sarb
push
fstl
add
je
imul
inc
lods
jbe
shll
inc
sbb
into
arpl
loopne
ja
nop
mov
lret
xchg
push
scas
dec
iret
add
loope
push
lods
popa
shlb
cmp
add
fs
or
xchg
in
shlb
cs
jmp
call
mov
xchg
xchg
inc
dec
popf
inc
push
aas
push
jb
adc
ljmp
pop
das
fucomp
in
inc
insl
cld
mov
dec
icebp
xchg
pushf
or
jne
scas
aad
fistpll
out
xchg
sbb
mov
xchg
mov
push
ja
bound
mov
fstpt
sub
pop
lret
movsl
sub
xorb
bound
xchg
mov
bound
es
xchg
notl
xchg
dec
mov
xchg
cmc
loopne
xor
scas
pop
mov
test
bound
adc
mov
push
mov
gs
repnz
pop
xor
xchg
imul
leave
aad
and
in
mov
arpl
or
inc
mov
xor
pop
ljmp
push
shlb
hlt
dec
pop
cltd
xor
rcrl
es
add
pcmpeqb
scas
pop
ljmp
xor
inc
out
ret
in
les
mov
fistps
ret
lods
pop
incl
xor
push
adcb
sub
in
xorl
mov
js
aad
loop
cmp
lret
mov
outsl
inc
inc
push
and
push
insl
and
push
push
and
push
mov
mov
repnz
push
in
bound
mov
push
clc
jg
ret
or
testb
fnsave
int3
sub
dec
out
out
dec
test
mov
out
mov
std
xchg
xorb
add
xchg
push
in
add
enter
push
pop
std
sarb
sub
jno
cwtl
in
jmp
xlat
jge
orb
js
jmp
test
stc
jp
cmp
push
notl
cli
mov
xor
xchg
add
mov
mov
inc
mov
xchg
mov
loop
fidivrl
sti
movsl
imul
lcall
out
outsl
call
inc
fnstenv
push
outsl
and
mov
xchg
xchg
fisttps
test
dec
inc
test
push
lea
xchg
adc
jle
in
mov
lds
mov
jg
mov
dec
les
dec
insl
aam
sti
inc
addl
repz
mov
je
pop
pop
dec
shrl
and
or
subl
mov
dec
pcmpeqw
daa
push
mov
mov
inc
and
xlat
or
mov
adc
adc
fildll
mov
push
mov
lods
inc
sub
push
push
jmp
loopne
pop
push
sub
push
aas
cmpsb
sbb
sub
fisubs
repz
mov
idivl
sub
dec
popa
push
and
jmp
mov
push
sbb
jle
in
mov
popw
es
push
test
iret
imul
call
fs
jo
mov
fbld
stc
jmp
addr16
test
pop
dec
mov
cwtl
nop
jb
lret
lods
stos
inc
cmc
and
leave
or
sbb
inc
mov
and
pop
cmp
lahf
or
test
add
das
sub
sahf
push
adc
dec
inc
mov
pop
jp
dec
or
sub
loop
lcall
cmp
cmp
out
jae
iret
xor
pavgw
push
movsb
mov
pop
adc
xchg
cmpsb
test
cmp
xchg
fisttps
mov
xchg
fnstcw
pop
mov
fstpt
pop
test
inc
inc
push
jp
xor
les
outsl
inc
xchg
inc
pushf
xor
cmpsl
out
stos
in
cltd
cmp
into
das
push
pushf
jge
out
test
inc
cmp
out
mov
iret
cmp
inc
movsl
xor
xor
jnp
jb
lock
flds
ret
push
or
dec
aam
pop
pop
push
jge
hlt
push
and
pand
lds
fiaddl
xchg
insl
cli
mov
push
or
cmp
xor
pop
iret
pop
rclb
and
push
adc
stos
sti
shl
add
cmp
xor
nop
push
pop
gs
into
jl
mov
subl
stos
xchg
imul
in
inc
stos
xchg
mov
mov
pop
xchg
andl
out
enter
leave
push
xor
ljmp
jo
rcrb
mov
insb
xorb
inc
xchg
xchg
lcall
fimull
sbb
inc
outsb
pop
inc
inc
sub
mov
test
insl
sub
jge
sarb
fmull
lret
fs
hlt
lret
lret
mov
dec
jmp
mov
clc
std
mov
cmp
lods
xchg
lret
pop
pop
inc
pop
cwtl
mov
jno
es
or
fwait
push
hlt
es
jmp
push
jnp
fs
cld
out
and
mov
rolb
int3
pop
mov
push
cmp
mov
push
pushf
xchg
push
out
mov
out
sti
jl
cmpb
xor
add
stos
scas
test
lcall
sub
in
stc
inc
cwtl
inc
jo
aam
xor
cmp
imull
js
dec
xchg
out
jl
xlat
stos
stos
test
jae
dec
add
sbb
inc
push
addr16
mov
scas
push
cmp
pop
movsl
mov
aas
add
rorb
cli
stos
xchg
push
mov
jp
mov
stos
lods
adc
add
mov
jmp
jge
jg
xlat
dec
ljmp
pop
pushf
stos
add
mov
rcl
inc
xchg
inc
aam
mov
sbb
jnp
pop
lock
mov
icebp
pop
xchg
pop
addr16
sahf
in
or
lret
in
or
sub
mov
add
mov
pop
rclb
and
mov
std
mov
mov
test
outsb
aad
pop
mov
jmp
insb
cli
mov
and
and
ficoms
xchg
icebp
mov
andl
xchg
fnstcw
mov
cmpsl
mov
loopne
out
cmp
pop
sbb
sbb
sti
lock
clc
cltd
sub
jne
or
mov
repz
neg
xchg
scas
lcall
lds
cmpsl
mov
cltd
dec
out
dec
and
cld
add
xor
mov
loop
push
shl
lea
add
inc
jnp
dec
xchg
sub
xor
mov
pop
inc
mov
mov
adc
repnz
aad
in
cmc
xor
bound
xchg
mov
adc
repnz
aad
in
cmc
xor
bound
xchg
mov
adc
repnz
aad
in
cmc
test
push
movsl
data16
inc
xchg
cmpsb
jne
pop
ret
movsl
loop
xor
add
mov
repnz
pop
sbb
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
insl
lods
mov
mov
mov
mov
inc
scas
mov
pop
or
add
movl
nop
add
add
add
add
sbb
mov
add
add
add
add
add
dec
add
add
lcall
add
add
add
add
sbb
xchg
add
mov
add
add
inc
add
add
sub
pusha
add
repz
stos
add
add
add
inc
add
add
add
add
pop
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
push
add
add
add
add
add
mov
pop
add
sub
adc
push
add
add
add
xchg
add
add
add
xlat
add
add
add
jne
sbb
dec
add
test
dec
add
or
pop
add
add
xlat
add
add
mov
add
add
sbb
xlat
add
add
add
add
pop
add
add
add
add
or
mov
xor
pop
add
add
add
add
mov
add
add
add
scas
add
mov
add
add
add
add
add
add
add
movsb
add
add
add
scas
add
add
inc
add
add
add
add
add
mov
add
add
add
add
cwtl
add
lahf
add
add
add
add
pop
add
sbb
dec
add
add
mov
add
mov
add
mov
sbb
stos
add
je
push
add
add
adc
add
add
out
add
scas
add
into
add
loope
mov
add
mov
and
sbb
add
mov
add
add
add
add
add
pop
scas
add
pop
add
add
add
add
xor
rolb
add
or
add
add
add
add
add
add
add
add
lcall
add
lea
sbb
cmp
aas
add
add
add
add
inc
add
pop
sub
orl
pop
add
movsb
add
add
cli
add
add
add
pop
add
add
je
xor
add
add
lcall
add
add
add
add
add
add
pop
add
add
pop
add
add
add
add
dec
add
add
add
dec
add
insb
add
add
add
out
mov
xor
dec
add
add
add
add
add
add
add
adc
add
scas
add
add
add
add
inc
add
add
add
je
addl
scas
add
add
mov
inc
add
xor
jnp
mov
add
add
add
add
cmp
push
jmp
xlat
shll
dec
loope
insl
jmp
dec
je
imul
push
jmp
mov
jl
jb
out
data16
and
subl
add
lds
sub
fxch
dec
daa
sbb
cld
sti
insl
mov
es
pop
aas
adc
orb
bound
test
mov
xchg
cmp
mov
stos
shl
pushf
lods
mov
iret
xchg
lods
jns
lods
push
idiv
mov
inc
test
or
push
xor
mov
ss
push
loopne
xor
dec
lcall
cs
aad
lods
ljmp
mov
xchg
dec
data16
mov
push
push
add
mov
sub
call
lock
mov
mov
gs
addr16
aam
jo,pn
inc
and
xor
dec
add
xor
mov
stos
and
inc
xchg
mov
fsts
fistl
jno
mov
lea
pop
jae
iret
mov
pop
adc
sub
mov
dec
push
mov
xchg
imul
push
add
dec
sub
lahf
jp
jl
cmp
add
pop
add
and
leave
test
movb
je
neg
pop
pusha
sub
pop
bound
mov
insb
cmp
aad
jae
inc
dec
jl
push
je
popf
pop
xor
cs
or
push
inc
out
aad
or
push
lcall
cmp
addl
xchg
jmp
or
rolb
aam
pop
repz
inc
fiadds
lahf
test
inc
loopne
fmul
mov
ss
xor
movl
int3
mov
call
hlt
pop
jb
in
jl
adc
push
sbb
push
mov
inc
es
insb
test
xor
xchg
fsubp
fwait
pop
adc
aaa
sar
inc
jle
xlat
sarb
xchg
push
add
cli
out
icebp
hlt
ja
sub
dec
in
into
fdivrp
lods
jno
icebp
int
hlt
mov
iret
in
addr16
sarl
mov
enter
push
jns
xor
jns
lds
nop
sub
mov
cmpsl
cmp
or
xchg
fdivp
scas
mov
nop
std
sbb
sbb
pop
ficomps
dec
bound
cmp
jge
sahf
gs
sti
add
loopne
ja
lea
in
fisttpl
add
out
cmp
push
popf
or
sub
jmp
dec
xor
xor
cmp
jmp
pop
and
xor
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
