adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
aad
push
je
inc
jne
mov
push
adc
pop
aad
in
cmc
aam
movsl
xchg
mov
xchg
mov
inc
fs
je
inc
jne
add
add
jno
in
hlt
test
cmc
aam
rcll
inc
fs
je
inc
jne
add
add
adc
in
xlat
test
cld
call
xor
pop
and
fcmovnu
pop
push
adc
or
lahf
movsb
lahf
mov
ds
adc
adc
xor
add
sbb
mov
sub
mov
mov
out
lods
cmp
push
mov
xchg
adc
add
cli
scas
filds
cmc
mov
or
cmp
mov
or
pop
sub
popa
inc
push
cltd
add
or
hlt
aad
adc
in
sbb
push
mov
mov
mov
mov
sbb
adc
sbb
aam
idiv
movsb
and
dec
je
cmp
lock
in
fnstsw
cmp
add
nop
mov
sub
mov
in
test
gs
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
or
inc
arpl
bound
pusha
lods
xchg
addr16
mov
fpatan
enter
sbb
push
sbb
or
aaa
pusha
addr16
and
cmpl
and
loope
shlb
jnp
push
and
inc
push
adc
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
pop
call
rcrl
mov
push
shl
hlt
mov
data16
add
adc
sub
nop
or
xchg
push
int
popf
pop
jnp
icebp
stos
sti
popf
fistpl
adc
inc
pop
sbb
inc
rcll
dec
inc
enter
andl
mov
pop
cli
or
pop
pusha
ja
leave
insb
or
and
imul
pop
xchg
mov
cmpsl
mov
sub
and
push
push
imul
sahf
mov
cmc
push
test
inc
mov
push
inc
ret
hlt
push
jns
mov
or
stos
fisubl
mov
dec
cmp
inc
sub
pop
cmc
cmp
mov
pop
dec
jmp
push
cmp
mov
and
sahf
xor
add
cld
mov
add
cmpsb
jbe
pusha
xor
popf
shlw
pushw
cmpsb
imul
sbb
sbb
loope
fbld
pop
fidivrl
ds
sti
pop
in
adc
lret
adc
dec
rclb
pop
jecxz
inc
inc
jp
sarl
fnstsw
loope
xor
pop
test
cld
insl
push
mov
cmp
rcrl
inc
xor
fsubrl
ret
shl
xchg
dec
jmp
sbb
idivl
cld
sbb
adc
sbb
mov
pushf
shl
pop
cmp
rcll
push
push
stos
mov
jns
js
push
in
cs
fisubs
xchg
mov
popf
stc
dec
arpl
mov
ret
sbb
xlat
push
jno
movsl
xorb
mov
mov
mov
mov
xchg
iret
mov
jl
dec
mov
sbb
pop
dec
add
add
scas
ss
dec
xchg
insl
ret
test
cmp
out
imul
movq
test
push
mov
mov
call
bound
push
repnz
test
enter
es
movsl
fwait
in
ret
push
push
insl
mov
adc
cmp
mov
daa
ret
pop
aam
xchg
loopne
cmpsl
sub
mov
or
dec
outsb
mov
cld
and
inc
or
jmp
cs
jno
cmpsb
js
cmpsl
aaa
and
bound
into
into
add
sti
sarb
pop
cwtl
or
or
sbb
mov
pop
xchg
sub
fcompl
cmp
mov
push
negb
insl
xor
stos
les
dec
popl
fists
imul
imul
mov
call
add
add
xor
sti
dec
nop
sbb
clc
bound
mov
cwtl
lcall
push
push
mov
and
jl
je
pop
inc
int3
fistps
add
cmc
mov
mov
jp
cmp
mov
iret
inc
add
mov
je
cli
add
add
sar
add
cwtl
shrb
movsb
mov
imul
xchg
jae
xchg
addb
lret
jae
mov
popf
mov
jecxz
xor
insl
into
mov
mov
lds
sub
sets
or
dec
rcr
inc
cmp
test
cmp
add
sub
or
in
push
mov
jecxz
push
mov
loop
icebp
add
in
mov
jb
xchg
sbbl
pop
js
mov
fldl
dec
xchg
pusha
mov
fs
sub
bound
test
xchg
in
jns
fstpt
dec
pop
imul
push
out
xchg
test
int
je
jmp
fdivrl
in
xor
insb
hlt
subl
mov
adc
push
mov
mov
mov
and
and
pop
jo
jae
popf
aam
sub
adc
jns
or
sub
fidivs
imul
loope
stc
fwait
push
sbb
pop
and
dec
fwait
sub
mov
add
call
ja
ficompl
aad
cmc
push
mov
dec
outsb
jnp
icebp
call
test
add
cmp
repnz
dec
xchg
outsb
sbb
mov
push
add
lret
leave
mov
and
push
cmp
sub
sahf
icebp
adc
dec
cmc
aas
in
mov
sub
push
orb
shrl
and
test
inc
push
gs
aad
scas
aad
or
sub
xor
lret
test
jno
adc
dec
mov
mov
pop
inc
jns
mov
jp
insl
fstps
sub
push
or
jo
pusha
lret
jae
mov
mov
xor
mov
xchg
out
xchg
add
sahf
xor
pop
or
add
xchg
addr16
inc
xor
test
adc
inc
and
and
xchg
lock
movl
adc
mov
jmp
sbb
out
pop
sub
xchg
dec
movsl
jmp
xchg
imul
xchg
push
shll
push
test
xor
inc
add
icebp
sti
stos
xacquire
jbe
sbb
jg
sbb
mov
cmp
test
mov
sahf
mov
cmp
rcll
inc
add
jae
es
push
cmp
xchg
dec
adc
sbb
cmp
xor
out
or
out
xchg
xorb
adc
push
mov
ds
es
or
xor
add
mov
or
push
rclb
std
cmp
lahf
xor
and
pop
jle
es
xchg
incb
push
xlat
pop
push
fisubs
sub
cmp
fisttpl
scas
xchg
cmp
cmp
cmp
movhps
jo
lods
rep
sarb
jnp
xchg
sbb
cmp
ret
inc
insb
call
test
mov
pop
outsl
movzwl
fs
push
lds
cli
xor
push
sbb
mov
push
xchg
outsb
adc
call
xchg
mov
ja
xor
add
ror
sbb
adc
out
mov
xchg
addr16
adc
adc
idivb
xchg
sbb
xlat
test
xchg
sbb
pop
loopne
leave
fst
jp
mov
adcl
cmp
cli
pop
lcall
pop
js
jecxz
data16
xchg
jae
in
xchg
cmp
pop
xchg
sbb
push
push
inc
sti
or
xor
jl
jmp
jge
int3
mov
stos
add
mov
inc
mov
out
loopne
jno
fcomip
hlt
loope
cmp
cmp
andl
inc
insl
cld
mov
ja
xorb
int
add
cmpsb
adc
fsts
sbb
and
shrb
fiaddl
cmc
sub
das
mov
test
adc
dec
inc
outsb
push
test
adc
adc
dec
cmp
mov
and
mov
adc
push
xor
pushf
lgs
or
out
xchg
push
shlb
cltd
test
shl
icebp
add
push
or
push
jnp
ret
enter
punpckldq
xor
lock
data16
sbb
lock
xor
repz
pop
ret
sub
scas
std
adc
sbb
push
push
dec
lods
cmp
imul
sub
cmp
mov
xchg
popf
xor
inc
js
imul
sbb
jo
icebp
xchg
push
jns
stos
rcll
mov
mov
cmpsl
cwtl
mov
adc
cmc
mov
les
push
mov
sub
pop
dec
or
dec
test
jae
orb
add
fdivr
enter
mov
jno
mov
imul
sub
sub
xlat
test
jo
in
xchg
pop
popa
mov
mov
xchg
js
lret
or
fcoml
adc
xchg
jno
xor
mov
push
sbb
push
mov
dec
test
jl
jmp
mov
inc
js
cmpsb
test
movsl
pop
pop
adc
jb
push
test
cmpb
sti
push
insb
rcrl
and
in
out
pop
in
inc
mov
jmp
xor
and
mov
sbb
icebp
stos
call
dec
pop
xlat
cmpsl
repnz
xchg
push
dec
mov
jo
jl
adc
out
pop
arpl
into
mov
jge
push
das
jecxz
push
das
or
cmp
test
out
mov
rcrl
iret
mov
cmc
cmp
mov
cltd
fstps
cmpsb
xor
adc
cmpsb
sub
fistps
ljmp
divb
xor
pop
arpl
cs
loopne
sahf
mov
mov
outsl
insb
and
lret
pop
pop
adc
les
mov
movsl
fisttpl
or
call
js
loope
and
std
pop
xchg
push
in
xchg
dec
lea
aam
or
and
dec
mov
popf
xchg
push
sbb
pop
arpl
jnp
lods
gs
jge
inc
lahf
lea
je
jle
push
xor
xchg
adc
fcmove
rol
popa
lods
inc
movsb
ret
test
cmpb
sar
dec
push
sbb
jg
push
mov
in
push
push
and
mov
sub
mov
jno
loop
das
dec
clc
sbb
pop
mov
insl
enter
ljmp
mov
push
pop
testb
xorl
dec
movsl
inc
popf
sub
lcall
insb
sub
popf
and
or
mov
movsb
pop
fucomi
ret
pop
dec
nop
cmp
cld
mov
pop
icebp
scas
fsubs
xchg
vpcmpgtw
pop
out
shrb
sub
dec
popf
mov
fidivrs
imul
mov
lods
mov
fsubrs
inc
data16
adc
jo
lret
fwait
dec
ret
xor
jbe
mov
loop
sub
xlat
mov
xchg
cmp
test
inc
cmp
test
jle
arpl
cltd
aas
sub
mov
aas
mov
inc
pop
or
repnz
xchg
in
adc
lock
call
and
clc
inc
mov
jno
xor
sahf
andl
lea
sbb
add
xchg
pop
std
gs
das
je
pop
loope
fstps
outsb
lds
test
cltd
int
xor
inc
lahf
jmp
rorl
sbb
imul
dec
pop
popf
mov
js
cmp
fiaddl
ljmp
aaa
dec
jns
adc
xorb
cmpsb
or
ret
add
pop
lahf
xchg
rcr
dec
out
xchg
nop
add
dec
leave
jns
inc
fisubl
xor
add
xchg
xor
fcoms
cwtl
addr16
repz
jae
mov
jne
cmp
dec
fidivl
push
test
rcll
out
into
push
sbb
push
aas
bound
pushf
lods
mov
xor
mov
cmpsb
into
dec
out
lods
add
movsb
pop
or
xchg
roll
fists
adc
mov
nop
xlat
inc
push
jb
rcrb
fadd
inc
das
or
mov
in
push
jbe
cwtl
lods
or
mov
cmpl
xchg
inc
scas
add
and
imul
push
andb
mov
sub
push
cwtl
mov
ja
cld
push
dec
loop
fs
inc
adc
loopne
test
fidivrs
add
fdivl
push
movsl
aas
bound
xor
mov
pavgw
in
shrl
insl
mov
sti
loop
push
jnp
push
sub
out
js
dec
stos
insl
cmp
insl
dec
mov
jle
scas
adc
mov
or
movsl
stc
ds
fildl
jmp
add
out
gs
xchg
cwtl
lret
test
in
lds
call
jle
in
sbb
cmp
es
sbbb
dec
pop
dec
daa
xor
mov
jae
cli
mov
das
jmp
push
hlt
clc
dec
lods
test
inc
adc
sub
mov
and
and
in
and
fisubrl
adcb
cs
rolb
cli
sbb
mov
xchg
lcall
hlt
shlb
xchg
mov
add
dec
sbb
cmpl
add
sub
pop
inc
inc
out
mov
xor
pop
cld
xchg
lods
mov
jbe
in
dec
adc
lea
add
push
outsb
outsl
insb
in
mov
sub
and
das
lahf
mov
mov
addr16
mov
rcll
mov
negl
sbb
inc
inc
ja
sub
shlb
cmpsb
insl
mov
shl
dec
in
jbe
xchg
xorb
sub
sub
and
iret
inc
fisttps
dec
add
adc
mov
sbb
inc
sahf
ror
mov
sub
adc
mov
or
repz
cmc
add
cmp
adc
pop
adc
adc
out
pusha
jle
in
push
pop
or
mov
push
int3
fbstp
push
rcl
js
or
out
lods
movsb
iret
adcw
jo
sbb
idiv
dec
mov
jae
jae
mov
negl
stc
outsl
ljmp
arpl
test
insl
test
loope
xchg
shlb
dec
jge
fidivl
aam
inc
inc
setno
push
lea
dec
divl
dec
push
fistps
sbb
jne
push
pop
pop
cmpsl
mov
xlat
aas
iret
sbb
inc
fcmovnbe
cmp
sti
jbe
or
mov
jae
rclb
dec
repz
mov
cmp
arpl
mov
and
dec
xchg
fldl
aaa
sahf
dec
fwait
jne
push
push
insl
jns
push
dec
jo
adc
pop
ret
inc
adc
sarb
xchg
jns
cmp
jp
nop
or
shr
adc
xchg
push
and
dec
jne
dec
out
shlb
adc
sbb
test
xchg
aaa
jns
jp
cmc
clc
mov
inc
push
and
mov
mov
mov
push
jae
push
inc
scas
pop
adc
les
ret
pop
jg
in
enter
mov
add
and
hlt
cmp
xor
push
sbb
hlt
pusha
sub
enter
add
push
inc
ror
cwtl
bound
add
cmpsb
cmpsl
js
mov
xor
and
repz
xchg
xor
pop
std
shr
bound
enter
push
idivb
push
inc
int
adc
sahf
lea
add
cmp
outsb
lea
aad
jecxz
rorl
pop
pop
push
movsb
mov
mov
arpl
out
adc
or
mov
les
mov
xor
cmp
sbb
sbb
inc
in
lcall
inc
inc
mov
and
sti
or
sub
and
js
sbb
pop
adc
sbbb
mov
inc
ja
and
sbb
add
push
mov
adc
adc
mov
pop
lock
mov
jg
xchg
mov
loope
and
fnstenv
fxch
fcmovbe
data16
jg
aad
or
notb
push
js
mov
mov
mov
les
pop
jl
lret
push
ja
or
sub
rcrl
sahf
mov
icebp
lds
cltd
sbb
ja
cwtl
in
sbb
insl
mov
xchg
dec
mov
fcmovnu
mov
mov
test
dec
ret
and
out
pop
int
jl
xchg
inc
mov
mov
subl
cs
cmpsb
rcrb
lock
mov
insb
clc
idiv
mov
iret
popl
dec
push
cli
mov
insb
xor
pop
sub
arpl
imul
cld
pop
xor
sbb
dec
cmc
xchg
sub
mov
xchg
xor
ljmp
inc
push
sahf
jg
xchg
sbbl
dec
lods
inc
mov
addl
mov
mov
fmull
dec
push
sbb
inc
imul
xor
or
popf
nop
push
mov
fsubrs
in
aam
xchg
filds
clc
mov
dec
or
sub
hlt
imul
xor
je
cmp
xchg
or
jbe
or
cwtl
pop
js
and
jno
ret
outsl
push
stc
sub
adc
mov
ret
lret
sbb
jne
fsubl
pop
inc
mov
imul
lods
push
inc
test
push
push
in
xlat
repnz
fdivrs
mov
adc
jp
push
out
out
cmp
mov
or
andb
pop
mov
push
push
and
cli
add
sarb
mov
ficoms
xchg
cmpsl
sbb
or
sub
shlb
leave
aas
sbb
dec
mov
mov
xor
inc
add
test
xchg
cmp
fmulp
cwtl
or
rorb
push
lea
sbb
push
inc
xchg
push
cmpsl
mov
pop
hlt
popf
push
cmp
rcll
push
sub
cli
mov
imul
dec
xor
jb
ret
loope
icebp
pop
sub
das
lods
mov
aas
sub
push
roll
mov
call
dec
or
or
daa
xchg
add
movsl
or
ljmp
dec
mov
dec
pop
xor
dec
sub
xor
in
or
mov
inc
mov
int3
dec
push
inc
xchg
les
push
roll
cmpsb
pop
mov
cltd
shll
xor
fistl
test
xor
pop
jbe
sbb
xor
sbb
sub
push
pop
push
push
loopne
inc
or
adc
mov
cs
mov
mov
inc
test
in
out
jno
rorl
mov
push
mov
and
push
add
jne
cmp
adc
pop
out
pop
xchg
imul
pop
push
lea
aaa
aam
cmp
pop
orb
or
sub
and
vfrczsd
dec
or
pop
mov
ljmp
or
sub
lcall
push
pop
hlt
out
and
inc
cwtl
js
fiaddl
icebp
dec
add
or
clc
xchg
dec
int
lahf
movb
jno
cmpl
jnp
xchg
popa
and
cmp
adc
dec
jp
sbb
jo
jmp
les
aam
xchg
fs
xchg
mov
lahf
pop
pop
push
xor
cmp
jbe
pop
rclb
xlat
cmp
subb
les
cld
scas
push
mov
pop
enter
push
xor
ljmp
and
ret
inc
scas
xchg
imul
movsl
xchg
jmp
adc
jo
ficomps
aaa
fildll
cmp
iret
gs
sub
or
ds
mov
cli
insl
adc
mov
arpl
push
ss
cmp
jle
call
jmp
cltd
xor
jp
dec
scas
stc
sbb
int
stos
jl
addl
dec
push
negb
aam
xor
daa
outsb
inc
fmull
test
fwait
je
cltd
fildl
gs
xor
cld
dec
and
es
push
push
mov
shrb
jle
dec
ret
xchg
pop
mov
das
inc
mov
dec
dec
nop
cmp
out
scas
cwtl
push
add
fildl
out
and
dec
xchg
adc
mov
or
add
jns
mov
push
ret
mul
sbb
ret
scas
add
mov
movsb
insb
out
ss
out
arpl
je
pop
jb
icebp
out
imul
cli
fistpl
mov
jae
xchg
pop
push
pushf
sbb
sahf
mov
insl
cmp
cwtl
in
pop
adc
pop
jns
inc
imul
nop
pusha
push
lock
pop
adc
push
mov
adc
stos
pop
or
xchg
std
lock
rcrb
fimuls
loop
subb
insb
in
sbb
jb
adc
movsb
jmp
xchg
mov
cmp
insb
cmp
dec
das
jo
mov
jbe
xchg
or
popf
sub
shrl
stc
fstpt
loopne
pushf
outsb
sarl
mov
xor
push
sbb
or
sub
shrb
mov
mov
in
rorl
pop
testl
imul
xchg
scas
mov
outsl
add
inc
pushf
dec
push
in
arpl
mov
jmp
shlb
cmp
daa
add
adc
add
fmul
popf
inc
mov
lds
xchg
sbb
fwait
movsb
cwtl
mov
in
cltd
icebp
xlat
scas
xor
add
add
popa
mov
xlat
cmc
fwait
ds
repz
xor
inc
movsb
testl
pop
hlt
xchg
cmp
decb
mov
out
xchg
jg
or
dec
cmp
stos
sbb
in
outsb
pop
iret
adc
cmp
test
pop
or
mov
add
fdivl
push
mov
or
jno
dec
imul
popa
jmp
sbb
repnz
sbb
jmp
inc
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
fs
jne
add
add
aam
in
pop
dec
cmc
mov
pop
jnp
imul
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
in
cmc
out
into
lods
push
rol
lock
outsl
inc
dec
push
pop
and
push
adc
out
into
movsl
mov
xchg
cli
gs
outsb
inc
pop
push
dec
and
push
adc
test
cmpsl
mov
test
push
dec
xor
jno
pop
inc
insb
jl
xchg
mov
sahf
lds
loop
outsb
jge
popa
lods
movsb
pop
and
push
dec
test
mov
ja
decb
fs
sub
jns
jge
flds
stos
mov
pop
xor
negb
bound
xchg
lock
lret
jle
outsb
push
xor
mov
fwait
mov
dec
in
rclb
push
and
popf
int
dec
mov
xchg
sahf
clc
nop
movsb
mov
xor
push
mov
jo
inc
and
mov
jns
push
out
cmpb
cmpsb
fdivp
jne
mov
cli
dec
adc
lcall
or
lahf
test
and
xor
push
data16
ret
or
jmp
aad
movsl
mov
xchg
xchg
gs
jbe
inc
push
push
and
add
jo
mov
fcmove
ljmp
outsb
ss
adc
mov
jno
bound
lods
xchg
mov
shr
mov
cmp
push
dec
rorb
cs
jns
jp
cmc
out
cmpl
scas
test
jne
inc
pop
push
dec
and
push
adc
out
into
movsl
mov
xchg
mov
jne
inc
pop
push
dec
and
push
adc
std
pop
pop
stos
int3
jne
inc
xor
push
or
jp
cmp
or
add
cmp
jns
sub
aas
sar
mov
jle
inc
add
js
int3
adc
bound
cmc
dec
sbb
fcoml
inc
fisubrl
cltd
test
cmpb
pushf
add
sub
scas
adcb
push
lahf
adc
cmp
jmp
into
mov
and
shlb
fildl
nop
insl
sub
and
or
loope
pop
xchg
scas
inc
cs
loope
jae
dec
jb
cmpb
dec
repnz
mov
pop
adc
jp
aad
fstpt
aas
pushf
aad
dec
pop
jbe
sub
cltd
push
mov
scas
xor
push
push
call
cmpsl
mov
fucomi
mov
les
inc
repnz
loop
lds
enter
stos
mov
push
addb
xchg
rolb
out
push
les
add
repnz
xchg
add
cmpsl
push
add
jge
and
mov
movsb
ret
je
push
adc
sbb
ret
outsl
jecxz
dec
popf
xorb
dec
pop
out
pusha
mov
daa
testl
xchg
std
rorb
inc
movsb
ffreep
add
minps
push
pop
in
in
int3
pop
xor
daa
jle
dec
test
frstor
stc
xor
xor
jo
jnp
dec
sbb
xorb
filds
loop
push
mov
pop
outsb
in
clc
in
shl
sahf
adc
imul
stos
cli
push
adc
mov
gs
clc
test
push
sbb
fwait
orl
pop
lahf
and
jno
mov
xlat
and
icebp
dec
mov
das
imul
ror
pop
or
sti
popf
mov
push
aaa
out
adc
nop
dec
fists
mov
enter
aad
inc
into
mov
imul
aaa
in
hlt
jl
xchg
fstl
repz
dec
push
clc
lods
mov
sti
mov
ljmp
in
or
xchg
mov
add
mov
in
inc
cwtl
inc
adc
adcb
sbb
daa
loope
mov
in
push
push
sbb
cmp
push
jnp
and
pop
mov
mov
push
mov
push
out
test
jb
es
sbb
nop
out
xchg
lods
inc
cmp
push
dec
lret
add
add
xchg
jo
push
inc
mov
mov
adc
repz
inc
xchg
xchg
loopne
idivl
dec
sahf
add
xchg
dec
mov
push
mov
sbb
inc
movsl
lds
push
data16
mov
clc
dec
jmp
pop
and
sub
mov
xor
test
xchg
outsl
push
or
movsb
push
sub
stos
adc
ficoms
or
adc
jae
sbb
adc
xchg
push
orb
cmp
add
std
int
jnp
loopne
jae
mov
fisttps
mov
cmp
sub
mov
push
add
adc
pop
push
sub
dec
inc
lahf
push
push
lods
cmp
add
mov
xor
aaa
or
mov
add
xchg
push
lret
push
or
ret
sti
lds
jge
out
insl
pop
popa
bound
into
jmp
popf
push
xchg
int3
and
or
jmp
imul
movd
pushf
push
sbb
mov
and
cmp
xchg
and
mov
sbb
cmpsl
pop
cmp
lret
cli
rolb
bound
addr16
pusha
mov
ds
out
out
mov
sub
sbb
push
push
lret
sbb
pop
lahf
movsl
insl
inc
insb
lret
in
push
push
adc
leave
mov
cli
les
pop
sbb
imul
mov
mov
dec
repnz
dec
roll
cmp
push
sbb
xchg
inc
dec
test
imul
outsl
sbb
jbe
inc
dec
fcmovbe
jno
idivb
sub
stos
xor
das
pop
sub
add
js
jae
or
jbe
dec
add
lahf
lahf
pop
imul
int
mov
les
push
push
sbb
stos
dec
jp
jbe
and
es
sbb
mov
pop
and
movsb
mov
add
data16
rcrl
push
out
mov
add
in
xorb
dec
cmpsb
push
add
in
mov
stos
xchg
nop
movb
mov
xchg
xchg
mov
mov
inc
cs
push
popa
cmc
add
fcmovnbe
outsb
arpl
hlt
sbb
sahf
in
test
insb
rol
in
jl
or
sub
subl
divb
cmp
fdiv
imul
xor
inc
les
daa
mov
xchg
xor
mov
rorl
std
jo
and
mov
jp
sbb
mov
push
adc
jno
adcl
cmp
mov
lret
call
insl
call
dec
pusha
aas
mov
insl
cmp
stos
testb
inc
sbb
fs
repnz
movsb
lea
ret
je
mov
insb
fwait
jnp
iret
sub
es
mov
loopne
xchg
into
pop
and
mov
cmc
adc
and
ss
lock
xor
mov
movsl
jnp
repz
cmc
loope
test
cmp
xor
out
and
lds
nop
dec
cltd
xchg
dec
aaa
out
and
xorl
xchg
sbb
cmpl
mov
fimull
out
out
shlb
and
popa
lods
cmpsl
jne
adcb
jbe
dec
lahf
std
je
mov
scas
bound
add
add
bound
xor
insb
sub
dec
das
sub
pop
lock
sbb
std
xchg
ret
adc
lret
shlb
adc
inc
imul
jle
or
sbb
jno
bound
jmp
adc
jo
dec
stc
xor
rcrl
dec
not
or
sbb
fwait
mulb
inc
js
push
or
fwait
pusha
ret
sub
xchg
cmp
test
sarl
add
mov
add
pop
inc
cmc
dec
mov
pusha
jo
icebp
fimull
xlat
sarb
shrb
cmp
sub
push
inc
jae
jecxz
mov
sbb
sub
and
ffreep
xor
divl
shr
mov
mov
and
dec
sbb
clc
fnsave
mov
aam
or
xor
pop
outsl
cmc
jns
insb
inc
inc
int
je
mov
xor
ja
cmpsb
into
test
fists
clc
adc
jnp
je
mov
mov
push
sbb
icebp
sbb
cmpsl
outsb
stc
sub
adc
cs
mov
testl
mov
loope
or
pop
movsl
sahf
push
push
testl
pop
mov
clc
push
adc
andb
rcll
dec
sub
xchg
mov
scas
lock
push
adc
cmpsl
shrb
addr16
cmp
sarb
or
fs
xchg
aaa
aam
cltd
xchg
mov
push
add
lea
mov
icebp
aaa
daa
je
repz
imul
sub
int
out
adc
xchg
mov
xlat
or
sub
pop
pushf
sbb
and
inc
xor
pop
and
cmpsl
ret
sub
sti
insl
das
cmp
xlat
pop
add
xchg
iret
bound
movsb
adc
mov
pop
jg
adc
mov
mov
pushf
push
xchg
fmuls
lcall
pop
xchg
rolb
dec
lea
push
dec
sbb
inc
out
push
xor
cmpsb
xchg
jle
adc
shll
std
xchg
add
dec
sbb
cmp
inc
scas
dec
cmpsb
aaa
dec
gs
mov
mov
imul
mov
xlat
in
lods
hlt
pop
inc
movsl
push
mov
cmpb
rcll
push
mov
mov
rcrb
stos
ss
out
fcomps
cli
xchg
in
ja
push
pop
sbb
pop
mov
push
popa
in
dec
hlt
cltd
mov
pusha
cmpsl
sbbb
insb
cmp
in
or
sub
xchg
outsl
out
ss
repnz
adc
sbb
push
clc
xchg
add
iret
or
nop
sbb
and
xor
or
out
mov
sub
jmp
add
inc
in
jp
push
arpl
jbe
adcl
into
xchg
roll
jg
fs
xchg
pop
and
pop
out
nop
addb
movsb
adc
sbb
pop
ja
rclb
mov
stos
insb
push
mov
jb
xor
aam
push
aaa
pop
fcompl
lret
cli
and
leave
push
jae
jb
arpl
test
inc
mov
push
into
jl
adcl
mov
scas
addb
ret
test
sbb
leave
push
adc
lret
nop
jmp
js
sbb
loop
push
push
lds
mov
pop
pop
cmpsb
mov
in
mov
mov
aam
insb
xor
sti
jno
adcb
jmp
mov
int
and
push
out
lahf
aad
lcall
sub
idivl
xchg
or
cwtl
out
inc
inc
cmpsb
jg
pop
aad
mov
in
push
inc
cmpsb
pop
loop
fwait
jmp
les
lods
rcll
sti
and
mov
add
cltd
lret
fstpl
subl
cltd
inc
inc
rcll
inc
cwtl
mov
pop
pop
cmp
or
gs
aad
cmpsb
jo
out
jmp
jp
xor
jno
into
or
daa
in
push
stos
add
push
cmpsb
scas
pop
ljmp
jmp
aam
leave
mov
pop
aam
mov
outsl
or
test
dec
mov
cld
mov
fbld
cmp
rcr
push
mov
xorb
movsb
fs
xchg
test
sub
test
icebp
mov
sbb
jno
mov
mov
jmp
lods
fcmovu
pxor
adc
sahf
pop
jno
outsl
xor
mov
adc
lret
cmp
mov
mov
pop
pushf
xor
fwait
push
les
mov
ret
pushf
inc
mov
sub
xor
mov
pop
jge
lods
in
setge
or
jnp
pop
leave
or
sti
fsub
decb
dec
outsb
push
adc
or
adc
adc
jp
jo
sub
cmp
add
sahf
jl
gs
stos
xchg
hlt
push
daa
cld
subl
xor
cwtl
out
cmp
mov
xor
cwtl
test
inc
mov
sub
sahf
pop
sub
bound
cltd
or
test
out
sbb
sub
or
inc
ljmp
xor
lods
dec
or
jle
dec
or
lock
cs
cs
dec
test
fldenv
minps
add
adc
int
inc
adc
sub
mov
mov
sub
mov
pop
cmp
lock
mov
es
dec
scas
and
pop
xchg
sbb
scas
stc
mov
mov
das
xchg
std
push
dec
lock
mov
inc
dec
outsb
mov
insl
push
fisubrl
int
jmp
push
repz
into
loopne
dec
mov
adc
mov
xor
mov
iret
insl
mov
push
xor
sbb
mov
push
inc
adc
jo
cltd
loope
shll
push
pusha
rcrl
lahf
sbb
lods
cmp
dec
inc
idivl
mov
xchg
xchg
mov
mov
inc
data16
and
and
mov
mov
out
push
mov
inc
cld
scas
mov
imul
sub
mov
dec
mov
sarl
insl
ret
ret
iret
add
xor
gs
pop
push
nop
push
nop
mov
pop
mov
loop
cmp
push
xchg
bound
movsl
je
ficoms
or
out
icebp
mov
sub
enter
icebp
in
subb
inc
repz
adc
dec
jl
std
popf
jnp
retw
out
decl
mov
and
lods
cmp
mov
shlb
mov
dec
mov
mov
jnp
enter
jmp
cmpsl
scas
data16
stos
aaa
idivb
mov
repz
insb
jae
fs
loope
mov
mov
sahf
dec
or
pop
fwait
rolb
dec
jl
mov
push
push
mov
stos
cmc
fldt
xor
xlat
xor
sub
gs
or
mov
scas
cwtl
enter
xchg
mov
xor
add
loopne
mov
sbb
pop
pop
and
dec
mov
lcall
cwtl
add
push
dec
test
popf
adc
lods
push
mov
and
xchg
jp
shl
mov
inc
imul
sbb
dec
cmpsl
jae
sbb
nop
arpl
sub
xchg
xchg
subl
or
jno
testl
outsl
insb
jecxz
cmp
outsb
rorl
in
clc
pop
les
cmp
push
inc
scas
sub
xor
in
jno
clc
mov
movsl
mov
pop
ret
jbe
mov
and
pop
mov
jp
fwait
xor
subb
fldenv
or
pop
lods
push
push
xor
and
inc
push
pop
xchg
add
cmc
std
movsl
and
enter
icebp
mov
filds
pushf
jnp
lods
mov
je
mov
jmp
cltd
test
fs
xlat
ljmp
fiaddl
dec
cmpsl
cmpsl
in
xor
mov
mov
ljmp
mov
mov
mov
fsubl
lock
mov
mov
into
in
xor
push
inc
and
insl
daa
inc
mov
in
and
xor
mov
fcompl
popf
out
push
pop
loopne,pt
mov
popl
push
xchg
in
gs
ret
fcomps
push
dec
inc
add
stos
fucompp
lahf
xor
hlt
in
xor
repz
and
nop
mov
insl
mov
push
mov
rcll
push
dec
and
rcrb
std
cmp
jns
test
mov
pop
data16
or
hlt
sbb
inc
xchg
jl
sub
andl
jno
test
pop
lods
stc
repz
jne
mov
pop
fsubl
jecxz
stc
fstps
push
nop
jmp
bound
inc
mov
mov
xor
pushf
mov
push
sti
iret
cmpsl
push
xchg
cmp
mov
mov
jle
mov
adc
mov
inc
loopne
add
das
inc
movsl
inc
jnp
xchg
xchg
jb
inc
mov
inc
lods
ja
popa
pop
ja
test
push
lea
push
std
pop
fistpl
loop
cmp
ds
mov
pop
inc
sub
fwait
and
sbb
mov
pop
pop
pop
movsb
add
loope
mov
mov
insb
fidivs
sub
jb
nop
cs
mov
je
sub
pop
insl
cmp
sbb
ret
mov
mov
or
mov
sbb
mov
test
xchg
add
pusha
fiadds
push
inc
adc
mov
sbb
flds
cmp
sbb
into
pop
adc
push
add
loope
mov
in
inc
or
mov
std
iret
pop
xchg
dec
jmp
sub
mov
test
pop
pop
jmp
leave
repz
in
loopne
sbb
pop
mov
stos
sbb
bound
mov
mov
movsb
lret
jns
and
push
adc
data16
inc
add
roll
arpl
mov
push
out
out
loopne
xchg
jge
xchg
mov
jecxz
sbb
aas
shll
js
pushf
add
sub
mov
and
push
loopne
sbb
push
addb
testb
rclb
xor
lods
xchg
and
in
shlb
call
push
xchg
ljmp
push
pop
adc
mov
jmp
outsb
int3
xor
sub
fwait
test
push
fistpll
or
hlt
incl
push
xor
inc
mov
or
cltd
lret
mov
bound
fs
xchg
mov
push
dec
xchg
in
xlat
das
outsl
jle
sbb
jmp
sarb
lret
fs
cmp
cmpsl
iret
out
inc
cmpl
lcall
mov
je
stc
ljmp
clc
imul
push
jecxz
add
dec
adc
inc
lea
or
xchg
in
les
jae
fsubrp
ds
lret
push
movsb
leave
dec
mov
outsb
mov
ret
stc
xchg
adc
mov
push
sahf
lret
mov
lcall
pop
sbb
pop
lret
movsl
mulb
jno
rcll
fistpl
jnp
push
sbb
lret
aaa
pop
outsb
scas
xchg
or
pushf
or
push
arpl
mov
add
outsl
xlat
ds
add
scas
inc
ret
outsb
jb
and
pop
imul
jecxz
iret
pop
dec
addb
fsubrs
je
inc
push
dec
fsubrp
adc
push
ds
out
pop
std
ja
mov
add
fcoms
mov
cmp
add
pop
js
xor
ficoms
mov
mov
adc
dec
lock
mov
ficoml
or
sbb
mov
arpl
adc
fidivl
or
rcrl
push
adc
jns
sub
cmc
or
je
push
mov
in
aad
mov
cvtps2pi
into
vpunpckhwd
jnp
mov
mov
jb
mov
mov
das
push
fwait
mov
xor
mov
adc
adc
dec
mov
loop
popa
add
nop
push
inc
add
inc
incb
jmp
inc
xor
push
shrb
mov
daa
shll
fsubrs
dec
mov
addr16
cmp
sbb
int
insl
dec
push
mov
cmp
ds
sbb
mov
xor
daa
aas
mov
pop
inc
dec
lods
inc
mov
lcall
inc
arpl
sub
fwait
mov
bound
mov
leave
mov
xchg
inc
xchg
ja
mov
aas
iret
cmp
sahf
cwtl
inc
icebp
dec
stc
xchg
fs
pusha
mov
int3
stc
call
sbb
mov
pop
hlt
test
adc
aad
pop
sub
mov
fistpll
movl
mov
jg
loop
cmc
ret
and
or
mov
std
push
jbe
repnz
xor
mov
fildll
and
adc
inc
insl
in
mov
test
lahf
jge
aad
shrl
scas
and
mov
fmull
nop
mov
mov
jbe
shrl
cs
iret
jnp
mov
xchg
mov
cld
jmp
push
movsb
cs
add
lret
mov
call
cli
push
ja
push
in
and
aam
gs
xor
push
jb
jnp
sahf
sub
andb
cltd
add
and
push
push
adc
aam
mov
add
mov
mov
adc
xchg
cmp
and
or
in
fnstenv
push
dec
jb
lds
xchg
xchg
aad
pop
bswap
out
cmc
outsb
orb
scas
sbb
mov
in
add
fimull
pop
mov
add
dec
adc
inc
adcb
jne
mov
enter
push
imul
pushf
inc
jg
dec
xchg
in
cmp
push
sbb
daa
add
je
push
daa
pop
dec
adc
dec
mov
lcall
xchg
adc
mov
ret
mov
inc
push
add
sbb
in
and
pop
lds
sbb
inc
clc
xchg
loope
jnp
shll
call
cmp
fs
ret
sbb
fsts
out
rcll
sbb
rorl
rcl
or
stc
jbe
add
orl
inc
stos
js
cmp
iret
pop
es
stc
sub
dec
xlat
aam
lds
lea
mov
sub
xchg
or
sub
dec
pop
or
dec
pop
enter
loope
mov
out
bound
ret
stc
pusha
in
stc
xchg
loope
mov
mov
cmp
sbb
pop
sub
push
xchg
adc
ficoms
bnd
mov
xchg
test
sub
or
push
je
dec
xor
cmp
cmp
bound
cmp
or
sub
fdivrs
dec
imull
xor
cmp
je,pn
mov
sbb
test
loope
or
mov
push
jl
loope
adc
repz
roll
dec
fstps
adc
or
mov
pop
lahf
fdivp
adc
jl
ffree
sub
nop
xchg
mov
inc
mov
push
mov
pushf
cmpsb
adc
adc
jae
or
mov
loopne
outsb
lret
fistpll
popa
push
fcompl
adc
mov
es
cmp
push
in
jb
mov
and
test
pop
andb
sbb
sar
out
psllw
xchg
push
sar
test
fcoms
das
adc
mov
bound
fisttps
push
das
daa
jae
loopne
cli
into
movsl
mov
xchg
mov
jne
inc
pop
push
dec
and
push
adc
out
into
movsl
mov
xchg
mov
jne
inc
pop
push
dec
and
push
adc
out
into
movsl
mov
xchg
mov
outsb
inc
pop
push
dec
and
sbb
ljmp
mov
add
jle
out
pop
push
cmp
mov
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
sbb
pop
scas
push
fisttpl
mov
adc
inc
leave
push
leave
mov
sbb
imul
mov
adc
inc
fsts
mov
add
jno
inc
rcll
pop
adc
popa
mov
aas
leave
cmp
inc
subl
mov
sub
mov
xor
adc
cmp
xchg
outsb
cmc
push
repnz
xchg
aas
shrl
fdivrl
mov
decb
jo
push
test
mov
insl
push
test
sub
imul
jmp
push
leave
mov
sbb
test
lods
jmp
jnp
sahf
stos
xor
ret
mov
popa
out
jmp
inc
or
test
insb
mov
xchg
mov
push
ss
ss
leave
inc
sbb
ret
add
jbe
sarl
stos
cld
pushf
add
rcr
insl
cmp
adc
jns
imul
mov
adc
inc
fsts
loopne
lds
call
das
addl
xor
push
roll
int3
imul
and
pop
movsb
les
sub
imul
pop
mov
shlb
in
adc
pusha
mov
xchg
js
dec
out
js
jl
adc
rorl
mov
adc
inc
fsts
mov
sbb
imul
mov
adc
inc
fsts
mov
cmp
or
in
mov
add
sub
xchg
hlt
pop
shrb
lods
popa
adc
aas
xor
cmc
sti
sti
addr16
ja
pop
and
and
cs
add
mov
in
mov
mov
insl
add
pop
xorl
inc
add
inc
arpl
push
pop
pushf
jecxz
dec
jg
cmp
lcall
sar
cmpsb
mov
ljmp
sti
xor
iret
and
lret
mov
stos
sarb
dec
ror
cmc
lock
fmuls
loopne
lds
adc
jp
xor
cmpsb
mov
adc
pop
pusha
and
sbb
pop
lcall
fidivl
mov
add
mov
xchg
add
sbbl
cmpsb
sub
mov
jbe
lcall
inc
ret
ss
int
mov
das
sub
adc
jl
nop
sbb
xor
sahf
xchg
push
push
jnp
fcomps
mov
push
in
mov
xor
or
add
shl
pop
fnsave
pop
rcr
push
lods
fs
cmpsb
mov
jne
xor
icebp
imul
mov
ljmp
xor
sbb
sbb
rcrb
jb
in
stc
imul
jne
cli
cmp
xorb
popf
xchg
xor
jmp
pop
adc
and
dec
test
adc
test
dec
sub
repz
adc
xchg
movsl
inc
mov
inc
into
and
popa
jmp
rorl
dec
mov
adc
mov
mov
lods
inc
call
xlat
or
and
xchg
mov
adc
xchg
dec
cmpsb
jmp
fnstenv
mov
int
xchg
lcall
dec
mov
fsubp
shl
cmp
cmp
repz
jge
stos
and
lods
xchg
pop
mov
sub
mov
loop
push
jns
rorb
pop
jns
ret
pop
mov
add
loop
lods
mov
enter
mov
ret
lds
enter
xor
test
push
leave
out
mov
bound
push
and
pop
aas
add
outsl
sub
insl
jge
out
add
add
jne
cmp
outsl
or
les
jp
fbld
sub
scas
cmpsl
ds
fidivrl
inc
sarl
movsl
imul
shll
dec
sub
ljmp
mov
and
pop
test
dec
rol
cmp
sbb
data16
lea
xchg
cmp
aad
cmp
in
adc
mov
sbb
bound
scas
adc
pop
jge
out
aaa
imul
out
push
cltd
rcrb
test
xchg
pusha
pushf
out
and
insl
cld
dec
and
mov
gs
aas
stc
cmpsl
sub
jge
cmp
stos
or
mov
dec
gs
dec
mov
inc
mov
lock
ljmp
ja
jae
xchg
imul
stos
sahf
pop
adc
arpl
jg
xor
leave
js
imul
jno
pop
fsub
in
dec
nop
mov
insb
notb
jne
mov
lods
roll
push
sahf
mov
mov
jp
es
inc
mov
lock
fnsave
outsl
aad
cs
mov
cltd
xchg
stc
inc
bound
dec
push
jae
dec
xor
jnp
sbb
lea
push
enter
aam
cltd
call
push
mov
stos
movsb
xor
or
or
jp
pop
adc
jns
mov
xchg
jp
int3
into
xor
int
aaa
mov
cmp
in
sbb
dec
mov
add
add
pop
daa
mov
repz
fdivs
add
adcb
add
mov
jnp
clc
fstpl
adc
mov
xlat
push
rolb
js
ljmp
sbb
mov
scas
sub
pop
adc
push
and
adc
dec
sub
jno
cmc
mov
fwait
sbbl
dec
xor
adc
push
loop
lcall
in
xchg
in
inc
push
js
outsb
ret
jnp
daa
mov
scas
sub
push
and
imul
sti
fdiv
and
and
jmp
inc
add
inc
cwtl
test
adcl
movsl
or
push
xchg
mov
movsl
and
rcr
add
dec
out
mov
ljmp
sbb
dec
repnz
inc
stos
outsb
gs
pop
jne
and
enter
lock
pop
sbb
test
cwtl
scas
and
mov
imul
shl
into
std
pusha
or
lret
xchg
sbb
push
out
xor
je
or
dec
cmpsb
xchg
ss
and
jb
mov
push
push
pop
lods
sbbl
iret
insl
fdivrs
lret
mov
add
test
sarb
into
movb
loope
les
aam
inc
mov
les
lret
push
push
fimuls
sub
dec
mov
push
popa
les
or
jbe
adc
push
fdivl
inc
mov
xchg
cli
ljmp
out
fnstsw
pusha
cmp
lret
jmp
and
sub
inc
mov
push
rol
xchg
aad
lahf
mov
outsl
mov
xchg
pop
sbb
xchg
shl
test
fwait
cmp
rcl
clc
xor
adc
dec
loopne
outsb
adc
sti
pop
jg
add
dec
call
outsb
push
mov
mov
cltd
dec
and
push
and
adc
rcll
jmpw
jae
mov
out
push
fdivrs
ljmp
imul
jns
dec
sbb
into
inc
xchg
mov
in
pusha
imul
sub
xchg
ficompl
sbb
gs
ljmp
daa
std
aad
or
les
push
adc
add
mov
das
inc
dec
push
lahf
adc
xchg
mov
ja
repnz
cltd
hlt
mov
pop
idivl
addr16
addb
ret
inc
shr
mov
inc
push
push
and
mov
sti
mov
in
mov
mov
enter
mov
xor
xchg
push
in
and
jecxz
lret
xchg
ret
fistpl
in
push
sbb
xchg
xchg
xor
nop
add
outsb
fcoml
or
loop
xor
xor
mov
loopne
bound
or
push
lret
imul
inc
adc
mov
pop
es
pop
adc
cmp
jbe
outsb
iret
lock
sub
jmp
aad
adc
add
dec
sub
add
sbb
mov
mov
imul
sub
ljmp
xor
adc
or
xor
aad
sahf
and
add
inc
in
adc
jb
dec
cmpsb
stc
jg
ret
mov
jbe
cld
inc
out
stc
aaa
pop
ret
test
lods
push
addb
add
ja
lcall
orl
mov
ja
inc
jne
xor
inc
jge
jmp
mov
aaa
nop
push
ds
inc
adc
pop
out
cmp
into
mov
pop
pop
pop
push
xchg
sub
mov
cwtl
fisubl
sbb
inc
stc
jp
pop
popa
adc
mov
mov
jg
xchg
push
or
imul
ficompl
and
arpl
jge
jg
sub
mov
pop
push
mov
ja
inc
mov
mov
adc
inc
jp
dec
gs
aas
movsl
jle
jnp
test
jne
mov
adc
test
mov
push
mov
adc
xchg
pop
sbb
fstpt
jl
sbb
fnstenv
xorl
dec
loope
adc
dec
call
adc
mov
inc
in
negl
mov
lods
sub
inc
aam
sbbl
pop
mov
sarb
lock
loop
mov
loope
mov
dec
jmp
fmull
jne
movsb
test
test
and
andb
add
jmp
sbb
xor
dec
outsb
lahf
shrl
inc
dec
xor
mov
or
dec
mov
bound
push
mov
in
scas
sbb
test
sub
in
shrl
imul
mov
hlt
jg
sbb
inc
sbb
aas
lcall
sub
lods
stc
xchg
iret
mov
mov
and
pop
jbe
mov
dec
fsts
mov
sub
or
and
xchg
mov
sub
rcll
mov
shl
loopne
scas
stos
cmp
push
imul
adc
fsts
in
xor
jo
adc
and
fadds
jnp
cmp
shl
dec
sbb
dec
push
loopne
jae
dec
es
in
xor
dec
jbe
pop
cld
roll
fwait
jbe
xchg
xchg
adc
push
push
push
push
mov
prefetch
cmp
dec
dec
inc
dec
or
jmp
mov
jecxz
ficoms
clc
iret
roll
enter
fisttpll
and
dec
push
data16
mov
ljmp
jl
fnstcw
mov
mov
adc
sbb
push
push
jo
mov
adc
scas
lcall
in
add
dec
pusha
addb
push
push
cmp
shlb
jp
stos
xchg
outsl
push
xchg
filds
xchg
andb
xor
and
mov
lock
fdivl
outsb
lea
fsubrl
mov
movsl
mov
sub
cwtl
xor
fsub
xchg
into
imul
push
repnz
jl
leave
rcrl
fidivl
sub
jne
add
fnstsw
pusha
jae
mov
sub
mov
xor
out
jle
dec
xor
pop
ret
and
fbstp
push
lock
xor
sbb
pop
pop
out
js
icebp
negl
adc
daa
sbb
jge
sub
inc
rorb
subb
push
hlt
repnz
add
pop
jle
enter
xchg
xor
mov
add
mov
loop
pop
fidivs
xor
add
shll
or
dec
mov
clc
sbb
xchg
dec
xor
xchg
test
jl
lock
mov
push
insb
mov
test
sbb
out
sub
ja
dec
clc
arpl
sarb
loop
inc
fnstenv
lret
into
mov
out
sbbl
jne
dec
test
mov
in
jp
inc
fisubl
shll
test
jmp
adcb
lds
testb
js
xchg
pop
popf
jl
inc
jno
adc
mov
in
cs
stos
pop
rol
repnz
ljmp
in
ja
js
hlt
pusha
add
stc
addr16
jbe
fwait
xchg
inc
inc
xor
sbb
and
inc
adc
mov
notb
jmp
inc
clc
cs
push
dec
mov
jns
gs
std
nop
mov
inc
gs
popa
cmp
and
sub
les
ljmp
aam
lret
ljmp
mov
clc
mov
push
pop
or
push
sub
sub
fisttps
js
cmp
pop
leave
jnp
movsb
insb
adc
negb
dec
adc
and
pushf
cmp
or
lahf
xchg
mov
std
cltd
lods
pop
sub
pop
sub
cmp
ja
inc
xchg
pop
mov
sbb
mov
push
shll
add
xchg
ds
cmp
mov
xchg
cmp
inc
xchg
cmp
cmpsl
push
pop
dec
inc
push
lea
mov
xchg
jns
movsl
mov
xchg
inc
loope
push
dec
push
dec
mov
lahf
cmp
clc
les
arpl
inc
mov
out
adc
imul
scas
loope
push
nop
rol
mov
test
mov
stos
imul
inc
cmpsl
shr
jns
jno
lret
fwait
sub
pop
or
frstor
xchg
mov
imul
insl
mov
add
outsl
fisubrs
daa
fwait
sbb
sbb
mov
jmp
call
repz
shrl
xchg
mov
aad
xchg
bnd
jecxz
dec
pushf
pop
pop
lods
push
stc
cmc
cld
aam
mov
mov
shll
cli
aam
hlt
dec
sub
and
mov
mov
stos
mov
jne
stos
mov
ljmp
or
xor
ret
into
pushf
push
fdivrs
mov
xchg
mov
lahf
pop
not
aad
pop
cmpsl
sub
mov
stos
popa
sub
pop
dec
movsl
test
jmp
imul
push
mov
adc
aam
call
sbb
dec
jp
lock
ljmp
fwait
inc
les
push
pop
cmp
mov
mov
lock
push
mov
or
fimuls
lock
jecxz
les
or
sub
jge
sub
inc
lods
nop
sub
cmp
pop
ds
mov
pop
xchg
inc
stos
shrb
repnz
cmc
xchg
mov
fstl
enter
inc
sti
out
addb
js
pop
das
sub
mov
mov
push
fstl
sbb
sub
push
in
mov
xchg
dec
cmpsb
add
xlat
ficomps
subl
mov
or
push
in
push
jg
cmpsb
scas
adc
mov
minps
or
rcr
pop
ds
gs
xchg
icebp
or
sub
fidivs
lea
jae
sub
sub
pop
mov
hlt
mov
jo
dec
cmp
aam
cli
sidtl
out
add
fcomps
enter
sub
pop
test
movsl
cmp
jge
and
loope
jl
mov
js
sub
hlt
push
imul
aas
pop
jo
mov
rcrl
nop
andb
and
popa
fimuls
push
pop
repnz
fildll
jae
icebp
mov
cmp
iret
imul
or
pusha
xchg
clc
int3
push
mov
adc
xchg
jl
mov
sti
shrl
sbb
sub
das
or
adc
lcall
xchg
leave
leave
xchg
inc
adc
sarl
inc
adc
mov
fisubl
cld
sub
icebp
clc
pop
lock
sbb
out
adc
in
repnz
push
jo
iret
loop
cmp
jge
pop
arpl
aas
ja
aas
dec
xchg
dec
xor
int
in
cmp
and
in
or
cltd
cwtl
mov
nop
xor
sbb
dec
mov
or
lea
push
addr16
push
lret
aas
dec
scas
stos
xor
daa
popa
sub
xor
push
in
cmp
in
mov
mov
rorl
xlat
and
xchg
add
adcb
ret
dec
or
lea
icebp
fst
mov
dec
mov
add
out
adc
or
pmuludq
es
addl
mov
push
ja
jno
and
mov
pop
shll
dec
xchg
movsb
pop
pushf
shlb
mov
repnz
dec
ja
shl
sbb
fisubrl
add
dec
loopne
stos
leave
imul
ror
adc
add
sub
std
les
js
cmp
add
add
ljmp
mov
adc
xor
cmp
arpl
pop
and
je
and
enter
xchg
test
cmp
push
or
sub
sub
mov
les
fidivl
mov
cmpsl
outsb
popa
cmc
aad
sbb
cmc
out
js
cs
pop
cmp
leave
movsl
jb
mov
and
cmp
sub
stc
test
mov
mov
pop
iret
divl
push
cltd
dec
push
je
out
dec
shlb
test
pushf
scas
sbb
xchg
test
les
call
xchg
sbb
cmp
jmp
jge
test
lock
movsl
pop
sub
dec
cmc
daa
jle
clc
mov
mov
pop
add
je
das
data16
sub
test
jns
jmp
mov
jp
pop
xor
xchg
xchg
pushf
adcb
rorb
lds
jb
add
sar
add
daa
push
inc
test
decl
jo
mov
sbb
xchg
dec
je
add
divl
test
push
add
ret
pusha
adc
sbb
enter
push
push
xor
jbe
push
test
enter
sub
lahf
cmc
push
lea
rolb
jge
pusha
add
push
add
pop
xchg
movsb
lea
xchg
pop
rcrl
and
loope
pop
and
mov
fstpt
shrb
xchg
enter
cli
iret
pop
adc
insb
mov
gs
push
pop
inc
outsl
enter
es
jp
cwtl
je
cmpsb
flds
dec
pop
jo
clc
in
fmull
lret
lods
jl
rol
outsl
dec
std
or
jmp
mov
jo
pminsw
jle
stos
mov
gs
mov
mov
test
inc
cmp
jb
testl
cmp
test
adc
xchg
inc
push
jno
lret
push
das
ja
mov
jb
shlb
sbb
shlb
ja
outsl
fdivs
adc
mov
scas
pop
orl
loopne
loope
xor
mov
mov
lahf
add
mov
and
or
xor
cmp
into
sub
insb
addb
sbb
rcrl
out
out
mov
cmc
lea
pop
cmp
popa
out
cmc
xchg
scas
pushf
mov
cmp
hlt
push
sub
mov
cmp
mov
xor
pushf
lods
mov
add
or
mov
adc
lods
jle
push
scas
scas
jb
dec
incb
push
and
lods
jnp
and
push
mov
push
nop
add
insb
pop
in
inc
jge
setbe
pop
xchg
jl
aaa
icebp
inc
repz
scas
test
add
or
jnp
stos
mov
lahf
sub
pop
out
sub
push
ret
dec
and
pop
nop
mov
fidivrs
or
bound
insb
xchg
mov
dec
lock
jb
cmp
xchg
cmp
inc
dec
mov
dec
movsl
push
jbe
sti
pop
mov
cmp
addr16
ficoml
imul
or
fwait
std
push
outsb
lret
jg
aad
xchg
cmp
fisttpll
stos
imul
scas
dec
sub
xor
sahf
scas
cwtl
fs
cmp
sbb
jmp
inc
xor
call
xchg
dec
call
int3
push
cli
addr16
xchg
pop
idivb
push
ss
mov
fdivrs
add
movsb
jb
or
outsb
adc
dec
inc
int
jbe
aaa
setnp
les
mov
cmp
mov
fistps
pop
leave
sub
sti
sub
arpl
pusha
popa
or
pop
sqrtps
into
inc
test
and
into
repnz
lods
insb
dec
mov
icebp
inc
or
jb
sub
inc
dec
sub
sbb
sbb
ljmp
adc
inc
adc
dec
out
insl
sbb
sbb
fdivp
aam
inc
xor
ja
jmp
or
js
pushf
notl
mov
push
adc
jmp
adc
lret
rcrb
xchg
fimuls
pop
je
xor
in
mov
pop
bound
mov
mov
adc
cmp
inc
scas
mov
out
jno
roll
outsl
xchg
lea
mov
push
nop
in
stos
notb
adc
icebp
je
out
jmp
jmp
xor
aas
fimuls
cmp
add
pop
and
sahf
pop
and
sub
mov
pop
mov
push
fsubrs
mov
test
lods
rcll
xor
dec
jmp
push
std
adc
xor
inc
fwait
jb
orb
mov
mov
pushf
mov
out
inc
push
fmull
xor
ss
mov
xchg
mov
out
xchg
je
dec
mov
ljmp
inc
shll
inc
xor
inc
adc
cmp
add
in
popa
sahf
call
ss
in
call
push
and
lcall
test
nop
pop
xchg
mov
lret
or
jmp
inc
loopne
out
sub
roll
shr
scas
mov
push
rcrl
js
nop
movsb
inc
popa
imul
push
hlt
push
loop
push
jmp
add
mov
fsubrs
and
add
lahf
push
cmpsl
sbb
mov
dec
ret
ss
xchg
xchg
jnp
mov
in
mov
add
sub
dec
out
xorl
or
jns
imul
mov
adc
inc
fsts
mov
sbb
imul
mov
adc
inc
fsts
mov
sbb
imul
mov
adc
inc
fcoms
mov
sbb
imul
mov
adc
adc
push
xor
and
xchg
or
cmp
test
test
jnp
mov
fwait
aaa
stos
daa
mov
addr16
sti
xchg
or
cmp
dec
pop
imull
jnp
mov
sti
aaa
stos
sub
ja
addr16
mov
sahf
sbb
dec
fistps
imul
push
and
push
mov
mov
cltd
xor
decb
call
push
mov
mov
xchg
adc
jg
pop
or
push
scas
jecxz
cmp
pop
js
iret
dec
sbb
std
enter
insl
jb
xchg
arpl
fs
stos
fnstenv
pop
mov
cwtl
stos
push
fsub
push
adc
inc
mov
xchg
inc
jbe
packssdw
sbb
addr16
push
xchg
cwtl
jle
cmpl
dec
pop
or
out
pushf
push
push
testl
mov
addr16
jmp
in
scas
inc
les
dec
fisttps
jle
clc
pop
ja
int3
ss
xlat
jnp
fildl
mov
jbe
popf
addr16
dec
pop
ret
push
out
fwait
call
mov
adc
ja
addr16
pop
or
cmp
dec
xlat
pop
imull
jnp
mov
fwait
das
stos
ds
insl
jmp
xchg
sti
fs
rolb
push
movsb
daa
mov
sub
out
imul
ret
inc
std
push
stos
and
clc
or
sbb
sub
dec
mov
sbb
jnp
repz
out
aaa
lret
push
test
mov
mov
stos
repnz
jmp
fildl
pop
lahf
dec
pop
imull
jnp
mov
fwait
aaa
stos
daa
mov
ja
addr16
xchg
or
cmp
dec
pop
imull
jnp
mov
fwait
aaa
stos
daa
mov
ja
addr16
xchg
or
jl
xchg
mov
cmp
cmp
fidivrs
popf
or
cmp
lock
aas
and
lahf
out
xchg
cmp
repz
push
xchg
leave
sbb
cmp
xor
fnstenv
stos
adc
in
lock
cmc
sbb
rsm
mulb
std
add
dec
repz
push
shl
sahf
es
lock
cs
dec
mov
push
aaa
mov
push
pop
popf
push
dec
lock
cmp
xchg
aam
adc
cmpb
mov
sbb
fldcw
adc
aam
mov
mov
scas
mov
dec
pop
lds
xor
xchg
insb
and
leave
mov
rorb
adc
imul
andl
jl
mov
stos
cld
in
jecxz
push
das
imul
ds
sub
xor
mov
add
lret
int3
es
pop
xchg
stos
cltd
sahf
add
push
aad
ror
cwtl
xchg
pop
adc
jle
dec
xchg
pop
xchg
add
aas
mulb
test
cmp
leave
mov
xchg
lods
movl
pop
js
stos
loopne
icebp
pop
nop
cwtl
scas
js
stc
les
scas
sbb
mov
pop
fcoms
sahf
popa
sub
dec
sub
pop
imul
cli
xchg
popa
add
loope
mov
call
scas
shl
inc
xor
push
sub
mov
jnp
insl
push
aas
insl
xor
xchg
rcrb
std
std
or
ret
lret
push
jmp
mulb
shlb
or
ja
mov
outsb
fmull
push
clc
pop
movb
add
jmp
jl
xlat
std
push
mov
mov
int
xor
imul
xor
or
lret
dec
push
mov
xor
adc
sbb
lods
adc
dec
loop
pop
mov
ret
xchg
enter
jmp
lock
xlat
and
mov
and
push
stc
adc
and
mov
mulb
dec
jne
out
out
pop
inc
cmpsb
out
std
stos
fwait
mov
sahf
enter
xor
and
push
jmp
mov
push
inc
sahf
jge
pop
mov
js
inc
adc
or
arpl
lret
das
aam
mov
inc
sbb
and
bound
xor
mov
push
sbb
dec
pop
inc
sub
mov
push
pop
inc
inc
imul
and
ror
xchg
mov
jnp
xor
cmpsb
sahf
into
or
ficoml
xor
arpl
mov
mov
lahf
pop
cmp
dec
dec
xor
cmp
add
mov
xor
jae
pop
cmovns
sarb
push
pusha
in
negl
cmp
jl
sti
js
push
cmp
xchg
pop
mov
lods
and
sub
mov
cltd
inc
cmp
xchg
inc
addr16
lret
cmp
dec
gs
adc
cltd
dec
add
repz
ret
cmp
mov
jnp
dec
faddp
in
pop
bound
lret
sub
lahf
sbb
or
jbe
inc
inc
fiadds
data16
pop
jge
mov
test
or
mov
mov
shlb
testb
enter
push
pop
lock
sbb
xchg
xlat
movsl
pop
add
push
outsl
jb
xchg
xchg
and
repnz
mov
jecxz
jne
aam
and
push
pop
dec
in
jp
ss
mov
sti
push
ror
push
push
mov
ret
ret
jae
adc
outsl
xor
lret
lods
jae
mov
int
aaa
push
js
fsubp
jo
inc
add
cli
xorb
sbb
xchg
mov
xchg
arpl
repz
lds
cli
lret
xlat
sbb
ss
add
dec
and
call
pop
loop
push
fwait
push
outsl
push
ljmp
jecxz
pushl
adc
cmpsl
stos
lret
mulb
push
adc
push
insl
inc
pop
fwait
cmp
cmp
roll
fcompl
repz
shrb
ficoml
test
mov
and
aam
in
nop
mov
icebp
pop
push
xor
pop
jns
jecxz
xchg
xor
cmp
sub
pop
sub
adc
das
jb
inc
test
jmp
rcrb
test
adcl
loopne
or
cs
or
jp
sbb
xor
popf
faddl
je
push
fildl
notl
pop
mov
adc
mov
ret
testb
js
dec
push
push
jl
lods
or
push
push
data16
sub
lahf
sub
and
push
test
out
repz
lahf
sbb
lahf
mov
jnp
xchg
mov
and
insb
es
aad
dec
jecxz
lea
loope
jne
inc
dec
adc
call
leave
sub
push
dec
adc
int3
out
pop
imul
fsubrl
mov
inc
test
int
add
out
jae
sbb
lcall
inc
stos
and
push
xchg
push
push
iret
hlt
push
ljmp
jae
mov
push
inc
dec
daa
je
scas
push
xor
call
cli
mov
or
fcmovb
popl
sbb
dec
push
lcall
rcr
mov
cmp
adc
mov
popl
scas
pop
js
xchg
push
ror
insb
mov
test
mov
mov
loop
mov
ret
push
sbb
fldenv
pop
gs
cmp
fwait
push
cmp
cli
sahf
pop
call
pop
mov
lret
data16
daa
int3
pop
sbb
jo
add
ljmp
lock
sbb
clc
lret
push
pushf
mov
loope
mov
add
ss
sahf
outsl
ret
dec
mov
sub
or
jmp
lret
push
cli
mov
jnp
sub
pop
or
lret
movsl
loop
add
jl
iret
lahf
mov
dec
repnz
in
outsl
add
clc
cmp
jecxz
inc
and
scas
cmpsb
imul
dec
adcb
and
lcall
jbe
push
fsubl
add
push
mov
std
ret
pop
das
and
dec
xchg
or
js
arpl
xchg
outsb
icebp
mov
dec
dec
sub
mov
out
mov
repnz
push
sbb
pop
jg
xlat
mov
insl
dec
mov
bnd
es
ficoms
mov
dec
mov
repnz
jno
xchg
dec
and
jno
sub
xor
mull
aad
pop
jns
pop
bound
repnz
mov
push
rolb
test
gs
dec
std
and
push
add
or
and
loopne
push
xchg
cmp
addr16
and
lea
outsb
push
repz
cmpsl
loop
mov
jg
neg
mov
push
or
test
mov
rcrl
push
mov
dec
bound
pop
push
mov
mov
lcall
mov
negl
adc
dec
xchg
push
ret
pop
jmp
popf
pop
fwait
out
adcl
ret
and
mov
rorb
mov
mov
inc
mov
fistps
or
sub
add
inc
pushf
adc
xor
dec
not
dec
sub
dec
inc
mov
xchg
repz
lods
andl
and
mov
shll
int3
mov
mov
fwait
push
push
sub
sbb
pop
sub
clc
hlt
leave
outsb
mov
inc
out
or
or
jno
xchg
das
dec
es
neg
out
push
push
and
fdivrp
xchg
xchg
sub
fwait
sub
pop
sbb
adc
sbb
mov
aaa
cmpsl
stos
fcomps
cmp
mov
arpl
rorl
sub
ljmp
pop
icebp
jne
add
cmpsb
sbb
dec
ret
inc
fs
cmpl
inc
xchg
sarl
repz
jg
xchg
ja
mov
addr16
and
mov
inc
cmp
int3
push
xchg
mov
sub
fldt
pushf
mov
xchg
clc
mov
dec
dec
lahf
dec
mov
dec
push
pop
pop
mov
cld
test
add
shlb
xchg
out
jnp
lahf
pusha
lods
inc
addl
push
push
add
cmp
imul
push
jae
mov
sahf
scas
dec
jmp
mov
jb
sbb
dec
sbb
loop
outsb
add
jmp
in
fmul
jmp
xor
aas
sub
pop
xor
inc
xlat
stos
mov
mov
sub
rorl
adc
pop
mov
push
repnz
xorl
test
mov
cli
jg
and
popa
cmp
jge
and
ds
sbb
cli
push
adc
xchg
mov
inc
shll
andb
mov
adc
in
xor
movsb
cmc
xchg
mov
incl
fidivs
xchg
push
in
mov
pop
insb
adc
fildl
mov
outsl
mov
pop
sarb
xor
xor
jb
push
mov
push
repz
cltd
sub
sbb
xlat
rol
in
or
stc
dec
mov
ds
mov
and
xor
jecxz
cmp
jo
js
hlt
mov
loopne
lcall
fwait
adc
pop
stos
popa
rolb
jb
das
cmpsl
push
jae
and
out
test
push
das
dec
pop
dec
pop
pop
push
and
mov
fiaddl
cs
test
or
hlt
add
movsl
and
push
xchg
ficompl
lods
mov
mov
ljmp
aam
mov
jmp
lds
and
jb
iret
ret
or
out
imul
pop
imul
mov
mov
mov
jl
sub
shlb
les
data16
and
pushf
mov
inc
mov
shll
and
adcb
inc
cmc
jb
jg
in
xor
push
int3
std
jge
mov
push
sahf
add
rcrl
sbb
dec
jmp
dec
insb
cli
mov
sbb
push
add
fs
cli
xor
cwtl
in
jae
mov
mov
mov
pop
adc
ret
ljmp
in
movsl
nop
lods
mov
and
lea
pop
sub
xorl
inc
pop
jg
cmp
out
mov
dec
test
popa
loop
out
sbb
sbb
sbb
xchg
mov
jbe
sbb
push
mov
decl
xorl
dec
adc
or
or
sbb
push
or
pop
inc
xchg
and
pop
xor
sub
xchg
add
xchg
lcall
xchg
ret
jb
push
imul
andb
jae
ljmp
js
pop
addr16
pushf
inc
mov
dec
in
sbb
shlb
jne
cmpsl
and
jno
add
jmp
xor
mov
sbb
aam
mov
sbb
mov
ljmp
mov
mov
stos
dec
idivl
clc
ret
pop
jl
lcall
cmpsb
push
rolb
fstpl
test
adc
lods
clc
or
cmpsl
lods
and
and
cwtl
jle
push
cli
xchg
mov
pop
int
jl
stos
jge
sbb
pop
scas
sbb
lret
mov
popa
cmp
push
outsl
ret
test
mov
outsb
mov
pop
cmp
pop
inc
ja
inc
cld
adc
sbb
mov
mov
jg
mov
adc
repnz
xor
push
test
into
inc
mov
add
mov
mov
daa
xor
mov
add
jnp
std
push
fstps
clc
inc
mov
xchg
rclb
jno
into
pushf
dec
daa
inc
pusha
sub
leave
mov
in
out
dec
jne
push
ret
mov
mov
push
jge
lret
icebp
dec
imul
or
int
mov
cmp
xor
adc
mov
fldt
inc
out
je
mov
andl
add
sub
fdivr
inc
push
movsb
mov
mov
mov
mov
jb
mov
inc
mov
jb
es
jns
sbb
xchg
insl
sub
ret
movsb
clc
gs
repnz
sbb
mov
fistl
sbb
sahf
mov
jo
xchg
pop
and
mov
out
out
xor
xchg
push
cs
dec
in
jle
fdivs
movsb
xchg
mov
push
jmp
pop
push
pop
aas
fucompp
test
fsubrl
dec
push
loope
sti
jns
jg
cmp
push
sbb
loopne
mov
jecxz
push
sub
dec
mov
mov
lret
scas
fisubrl
fsubl
fcoml
push
inc
fs
sahf
push
mov
pop
repz
les
lods
fisubl
fcoms
sbb
sub
adc
xor
push
ljmp
out
adc
cmpsl
je
ret
jae
cmp
mov
jg
in
cmpsl
pop
dec
mov
mov
imul
push
mov
add
push
xchg
add
mov
gs
dec
sbb
jmp
jp
jne
fs
push
and
xchg
and
int
pop
push
rorb
idivl
sub
rcrl
jecxz
mov
xchg
push
inc
jmp
mov
mov
push
jnp
add
rorl
jl
xchg
mov
mov
pop
jecxz
fwait
push
cltd
gs
push
ljmp
movsl
sbb
ljmp
pop
xchg
loope
mov
imul
push
adc
pop
fisubs
loop
getsec
aaa
jb
in
jno
mov
push
adc
mov
push
pusha
dec
jns
in
jecxz
int
push
sbb
sbb
and
pop
rorb
test
mov
add
idiv
jno
inc
inc
incl
subb
mov
lock
and
inc
jo
or
pop
and
cmpsb
sbb
or
lods
cmp
stc
mov
aad
mov
rcll
and
add
dec
pushl
cmp
cld
jecxz
push
add
insb
sbbl
mov
adc
cli
repnz
adc
lods
cmp
push
jecxz
dec
int3
ficompl
sti
inc
sbb
pop
add
inc
out
push
dec
jg
dec
or
or
aas
sbb
adc
negb
out
mov
xchg
cltd
cli
mov
fisttpll
fisubrl
fcmovne
cmp
lcall
mov
lea
sbbl
adc
xchg
push
xor
mov
fwait
xlat
pop
sahf
ret
sbb
imulb
rcrb
movb
jo
pop
stc
insl
into
jne
loopne
xor
popa
dec
push
insl
push
adc
xor
into
loope
ss
push
cli
aad
push
jg
das
mov
xor
stos
insl
mov
mov
js
int3
sbb
int
scas
push
ret
rorb
pushf
subb
imul
iret
ss
dec
loopne
int3
pop
test
cmp
lahf
lds
insb
cltd
xor
mov
fisubrs
test
jb
cld
xchg
dec
aaa
lret
call
sub
push
push
cmp
nop
lods
dec
mov
push
test
mov
in
repnz
xchg
enter
ljmp
sbb
sub
mov
jmp
loopne
fnsave
repnz
mov
gs
pop
and
lret
xchg
pop
pop
ja
sub
mov
popf
sub
lock
lea
cmp
push
cmp
lret
rolb
leave
ret
insb
inc
test
fidivrl
push
ret
jb
inc
or
jne
and
inc
and
insb
shlb
xor
add
outsb
mov
xchg
sbb
xor
mov
mov
sbb
and
inc
into
push
jmp
sahf
mov
lock
push
int
jmp
dec
inc
mov
and
xor
movsl
jmp
or
cmp
add
push
mov
dec
jg
mov
add
mov
int3
xchg
sub
repnz
mov
jne
jmp
xchg
push
imul
dec
fistpl
outsb
xchg
sub
fprem1
enter
cli
sub
mov
adc
daa
call
mov
lea
ret
outsb
xlat
add
push
daa
cmovnp
xor
sbb
repz
roll
bound
sahf
ljmp
pop
inc
add
cmp
or
sbb
mov
and
les
cwtl
add
leave
testb
lcall
fadds
clc
mov
shll
pop
xchg
add
pushf
mov
push
and
cmp
hlt
sbb
dec
stos
into
mov
std
mov
notw
insl
add
call
lods
aaa
sbb
xchg
jbe
ljmp
pusha
scas
leave
popf
push
mov
push
adc
mov
sub
cmp
stos
mov
sub
sub
xchg
fldt
fimuls
jmp
jno
nop
mov
pushl
mov
fs
stos
movsl
subb
cltd
dec
push
inc
in
or
mov
dec
pop
in
cmp
mov
mov
js
sbb
lock
pusha
cmp
fs
xor
push
dec
sbb
pop
das
shrb
pop
mov
add
xor
xchg
cmp
jo
fsts
andb
mov
shll
fadd
sbb
push
lods
mov
icebp
mov
mov
jbe
mov
stos
push
cmc
mov
sti
mov
jge
jecxz
cwtl
clc
mov
ja
cmc
movsl
inc
popf
jns
nop
push
sbb
ficoml
jmp
and
inc
int
push
sbbl
jnp
sbbl
scas
mov
popa
nop
or
sbb
adc
outsb
leave
push
and
pop
das
mov
in
mov
dec
test
pop
jg
mov
mov
stos
sub
out
fidivrl
aas
test
popa
jnp
ret
repz
inc
cmpsl
roll
xor
jl
and
dec
faddp
mov
jecxz
lock
mulb
test
xchg
movsb
lods
adc
mov
and
ret
jecxz
sbb
mov
addr16
jns
mov
sub
ss
data16
in
repnz
outsb
shlb
jbe
mov
fidivrl
pop
test
cmp
lcall
mov
idivb
stos
push
xchg
and
push
xor
adc
jns
mov
daa
js
cwtl
push
lods
jge
fisttps
or
add
sub
lret
divl
push
cmpsb
movaps
orl
mov
iret
xchg
mov
gs
xchg
icebp
pusha
loope
sub
mov
inc
popa
addl
dec
sbb
mov
pusha
push
pop
and
cmp
jne
dec
orl
hlt
jl
sub
jo
call
mov
dec
cmp
xchg
loopne
mov
mov
cwtl
lahf
inc
xchg
jb
outsl
cmp
ljmp
pop
lock
testl
dec
sbb
push
imul
adc
mov
pop
xchg
sti
fimull
xchg
push
cmp
add
push
outsb
scas
rcll
sbb
adc
sbb
inc
push
xchg
insl
adc
pop
push
std
pushf
icebp
sub
aaa
int
sbb
jnp
push
mov
cmp
sbb
cmp
adc
ja
mov
in
push
xor
enter
subl
insb
cmc
sub
pop
lods
aaa
clc
es
jl
lret
pop
call
or
or
add
into
movsl
into
andl
hlt
xchg
dec
xor
lcall
mov
mov
push
push
icebp
mov
jg
dec
test
rorb
inc
inc
lahf
rcll
roll
inc
movsb
pop
mov
fcoml
mov
sbb
sub
or
push
jp
pop
popf
pop
pop
loopne
sahf
aad
dec
add
repnz
sbb
xchg
jp
jp
cld
adc
mov
sahf
ja
mov
xor
hlt
in
sbb
outsb
mov
jno
stos
les
pusha
fiaddl
xchg
push
pop
cmpb
imul
loopne
or
out
lock
inc
lcall
ljmp
push
mov
mov
mov
imul
mov
lret
inc
push
inc
mov
xchg
jmp
out
jl
nop
add
lock
ja
or
cld
cmpb
int3
adc
adc
arpl
sti
iret
mov
jle
xchg
test
lea
iret
repnz
aad
xlat
loop
mov
jp
sbb
repnz
out
fsub
clc
test
push
mov
pop
ljmp
sub
icebp
shlb
cmp
jnp
leave
test
lret
arpl
ret
jge
cmpsl
ret
mov
mov
pinsrw
scas
arpl
ffree
mov
scas
outsl
xor
insb
jmp
enter
icebp
inc
dec
mov
shll
loopne
push
sbb
pop
stc
dec
test
es
lret
ret
cli
sub
pop
push
repnz
repz
mov
dec
pop
imull
jnp
mov
fwait
aaa
stos
daa
mov
ja
addr16
xchg
or
cmp
dec
pop
imull
jnp
mov
fwait
aaa
stos
daa
mov
ja
addr16
xchg
or
cmp
dec
fcomi
imul
pop
or
fwait
aaa
stos
daa
mov
ja
gs
xchg
or
cmp
dec
pop
ja
addr16
mov
xor
inc
iret
and
adc
add
cld
mov
xlat
cltd
mov
lods
sbb
dec
pop
cmp
imul
mov
mov
jmp
push
pop
push
dec
sub
imul
mov
mov
loopne
xchg
jmp
dec
dec
cmp
cmp
imul
aaa
push
insb
sarb
lods
cltd
mov
push
jb
adc
repz
shl
pop
and
out
inc
adc
xor
aaa
rep
dec
and
addr16
ja
xchg
xchg
mov
lods
sbb
xchg
xchg
inc
popa
nop
add
xchg
test
rcrl
jns
js
pop
inc
mov
lret
rcl
int3
test
call
fldcw
add
mov
cmovns
out
je
cs
adc
bound
call
aas
sub
dec
cmp
popw
mov
lods
dec
sbb
testl
mov
arpl
rorl
insl
jns
add
je
enter
enter
test
cwtl
jmp
sarb
sub
dec
jns
imul
fdivl
lds
or
sub
and
insb
cmp
scas
jmp
ljmp
jl
or
cmp
sbb
jnp
mov
or
mov
movsb
fxtract
leave
test
cwtl
jmp
push
pop
cmp
jns
imul
mov
mov
jmp
push
pop
cmp
jns
imul
add
mov
jo
jle
stos
leave
jnp
rcr
clc
xchg
mov
icebp
mov
std
xchg
inc
mov
xor
es
popf
lea
insl
xlat
adc
inc
lret
lret
dec
ja
sub
in
mov
xor
clc
pop
adc
mov
leave
scas
jl
jmp
pop
cs
lret
negb
xor
inc
pop
adc
cmp
jne
and
jae
and
mov
mov
or
js
sbb
ljmpw
mov
lcall
ja
mov
out
flds
fidivrl
sahf
pop
out
cmp
add
dec
or
mov
into
stos
movsl
jbe
out
cld
push
fs
xchg
jb
jbe
or
imul
mov
out
jae
add
ds
loop
pop
dec
rol
xchg
mov
outsb
fcoml
pop
jne
xchg
jle
in
repz
dec
jnp
mov
xchg
xchg
movsb
fiadds
gs
icebp
mov
or
outsb
dec
xor
mov
dec
sbb
je
rorb
sbbl
in
lds
hlt
inc
and
rorl
or
jg
cmc
cmp
test
or
mov
sbb
aam
xor
rcll
jbe
shlb
pushf
sbb
outsb
das
aaa
jns
xchg
push
rorb
fisubrl
lods
cli
mov
sub
rcl
sub
xor
lock
add
jl
lock
add
insl
outsl
ja
call
mov
jne
pop
or
andl
addr16
or
and
insb
mov
imul
fnstenv
shrl
mov
hlt
jecxz
lods
clc
push
sbb
and
call
pop
sbb
xchg
mov
insb
enter
sbb
out
loope
mov
fisubs
jl
xchg
and
mov
mov
and
daa
jge
testb
std
inc
xchg
sahf
dec
lcall
and
movsb
inc
cli
xchg
mov
pop
into
sub
push
adc
xchg
insb
outsb
push
pop
rorb
xor
and
cmp
jbe
lods
ljmp
popa
and
mov
jnp
outsl
mov
cmp
stos
pop
call
outsb
xor
xor
imul
push
sbb
insb
aaa
fbld
jnp
jl
lds
add
cmp
les
fwait
sub
add
or
add
sahf
fmuls
lds
test
les
mov
xorl
test
xchg
push
xchg
and
inc
sub
mov
cld
shll
jl
xchg
sbb
mov
mov
fcmovb
arpl
jae
mov
out
lock
mov
cmp
push
or
inc
outsl
lahf
jo
insl
jo
call
mov
fnstcw
jb
mov
loopne
inc
pop
int3
push
and
test
mov
mov
aaa
dec
xchg
aad
mov
push
ja
jmp
jbe
inc
aas
dec
repnz
out
inc
jne
mov
push
hlt
add
jle
inc
cmp
push
cmp
mov
shrb
clc
lock
mov
and
sub
movsb
hlt
dec
insl
bound
repz
fidivs
sub
rcrl
dec
and
repz
pop
notb
fs
pop
and
jmp
xor
movsb
aam
scas
lcall
mov
jl
jnp
jg,pn
jno
dec
adc
inc
lods
mov
xor
aad
dec
jae
divb
test
das
jmp
dec
cmc
es
inc
scas
adc
lods
xchg
fbstp
xor
jno
cmp
stos
sub
ss
mov
dec
addr16
dec
outsl
dec
roll
imul
lock
cli
bswap
adc
push
je
and
int3
and
and
loop
outsl
sub
out
cmpsl
dec
jl
dec
ret
in
sub
fdivrs
cmp
mov
lahf
pop
mov
adc
andl
call
or
repz
sbb
daa
outsb
cmp
add
fcmovne
fidivrs
add
ss
xlat
imul
jo
dec
xchg
dec
pop
xor
push
mov
scas
jge
nop
adc
insl
sub
dec
in
mov
negl
mov
add
push
faddl
jnp
inc
mov
lds
outsl
xchg
mov
cli
nop
and
movl
fstl
xchg
push
jge
dec
inc
ss
shl
sbb
aad
pop
shll
mov
bound
movsl
sbbb
jl,pn
loopne
mov
jge
mov
rclb
out
mov
mov
out
add
adcb
mov
xor
dec
xchg
jp
sub
sub
stc
or
gs
das
iret
dec
push
jbe
adcb
mov
xchg
adc
cmp
lds
in
mov
mov
leave
int3
lret
sbb
sbb
xchg
mov
rcll
and
xrelease
add
outsl
cmc
pop
jp
push
mov
push
dec
pop
inc
cs
fimull
jnp
movsl
mov
mov
xchg
xchg
or
pop
dec
sarl
insl
sbb
and
icebp
mov
iret
dec
cmpb
movsl
sbb
lahf
subl
cmp
stos
ffreep
mov
in
cmp
pop
jne
inc
js
mov
sub
push
fbld
int3
sub
jmp
add
sub
mov
cmp
xchg
add
ljmp
cmc
add
shll
fidivrs
mov
jp
lret
xor
out
push
push
cmpsl
nop
or
lds
daa
lahf
and
in
xchg
loope
ja
fiaddl
ds
pusha
xchg
xchg
add
jbe
mov
icebp
adc
fnstcw
mov
in
cld
aas
mov
pop
dec
fwait
mov
aad
fiadds
and
movb
add
loop
jnp
jle
and
dec
xor
aad
pushf
clc
push
add
add
cld
popf
movsb
das
jno
jb
cmp
add
fstpt
mulb
sbb
add
mov
call
mov
jecxz
addr16
hlt
lds
mov
fildll
xor
movsb
std
add
inc
ficomps
test
sti
cltd
dec
push
and
rclb
negl
mov
push
adc
push
out
or
xchg
scas
push
dec
scas
mov
push
xlat
fdivl
sub
mov
push
mov
dec
xchg
add
xchg
stc
loopne
enter
xor
je
xor
push
rep
cmp
aad
mov
sbb
xchg
icebp
or
fwait
mov
adc
jle
lea
adc
inc
ljmp
pop
cmp
aaa
aaa
mov
cltd
fsubrl
nop
push
insl
lret
mov
int3
jmp
pop
fwait
dec
pop
fwait
push
and
cwtl
xchg
out
lret
aad
mov
jno
adc
enter
fsubrp
test
cmpsb
mov
test
add
in
outsb
cmp
jo
xlat
out
lret
jl
sbb
sub
test
or
fwait
call
stc
sub
dec
lock
outsl
bound
rorb
xor
and
aas
dec
lret
xchg
xchg
pop
pop
ds
push
cmp
cli
jno
xchg
mov
push
sbb
fwait
nop
jmp
in
push
mov
fstpl
inc
mov
mov
xchg
shll
dec
mov
add
incl
cmp
addr16
cwtl
jecxz
lea
lret
mov
push
jb
loope
aaa
pop
cwtl
xchg
mov
aad
iret
add
jae
add
jne
je
popf
inc
pop
pop
lds
mov
cld
loopne
fptan
sbb
push
repnz
mov
rcrl
addb
pushf
dec
push
jbe
int3
hlt
mov
ljmp
xchg
movsb
cmp
sub
aaa
cmc
sbb
xchg
lret
lret
add
pop
movsb
adcl
inc
ret
fidivrl
int3
push
push
adc
nop
sub
jle
pop
or
jmp
in
and
out
aaa
xor
fiaddl
sub
fsts
pop
adc
and
fsubl
push
xchg
pop
xor
or
and
sbb
in
xor
cmp
imul
mov
sub
insb
inc
pop
xchg
adc
push
sub
xor
arpl
xchg
rcrb
scas
lock
dec
pop
es
add
adc
test
fldl
mov
aam
mov
mov
dec
pop
add
pop
loopne
cmp
mov
in
repnz
popf
dec
cmp
into
dec
push
dec
iret
mov
es
fnstenv
inc
xor
mov
inc
dec
lahf
scas
jl
lcall
inc
cmp
subb
inc
sti
sub
push
movsl
add
xchg
pop
aam
sub
push
movsb
pushf
loope
shl
in
or
fsubs
jae
cli
jl
mov
incl
nop
scas
in
cmp
and
mov
ficompl
mov
dec
sub
push
or
rcll
push
nop
and
out
loope
inc
arpl
sub
jecxz
daa
aas
addr16
jl
enter
repnz
adc
jno
out
sub
xor
xchg
inc
adc
jne
mov
lods
bound
out
inc
call
aaa
xor
xchg
jne
cmc
jle
sahf
fnsave
addr16
mov
lret
inc
cwtl
scas
fildl
push
aam
push
shlb
xchg
int3
pop
jl
loopne
cli
test
out
inc
lahf
mov
xor
cwtl
lret
add
add
fmul
add
js
scas
and
jno
outsl
mov
scas
aaa
mov
xlat
div
xorb
pop
loop
mov
std
mov
or
daa
dec
aas
or
mov
sbb
sarb
gs
ljmp
mov
and
aad
inc
arpl
inc
xor
mov
int
lret
cmc
push
inc
inc
xor
cmpsl
pop
mov
or
adc
xor
in
jge
jbe
lods
dec
add
fnstenv
in
stos
fcoms
mov
inc
andb
mov
pushf
xlat
imul
mov
inc
dec
lret
mov
push
iret
jns
and
mov
xchg
cmp
or
std
cmc
sbb
fdiv
daa
and
popf
pop
add
ds
out
out
negl
dec
out
and
aas
inc
popf
aas
or
sti
hlt
push
pop
mov
ret
outsb
adcl
dec
jle
out
outsl
pop
hlt
mov
push
mov
fstp
add
cmp
adc
and
imul
and
decl
test
icebp
or
sti
lods
mov
jp
outsl
fwait
ds
xchg
into
lcall
cmp
mov
pop
cmp
sarl
sbb
aaa
mov
sbbb
test
cmp
inc
lea
sbb
gs
bound
arpl
outsl
leave
mov
pop
sbb
movsb
pop
addb
inc
mov
fstpt
repz
addr16
std
lcall
lods
repnz
jo
inc
sbb
out
mov
ja
jle
xor
push
addb
mov
mov
hlt
aas
sub
adc
mov
xor
jae
pop
idiv
cmp
gs
cmp
icebp
xchg
fisttpl
pop
insb
xchg
clc
xchg
lret
mov
aad
jb
aam
push
pop
outsb
test
xlat
cli
add
outsb
cmp
pop
fimull
mov
icebp
test
mov
mov
pop
lcall
dec
lret
aas
cmp
push
pop
lods
xor
out
movsl
cld
xor
fwait
lds
arpl
push
pop
cwtl
push
adc
adc
icebp
xor
enter
mov
cmc
hlt
js
sbb
mov
dec
mov
outsb
sbb
stc
scas
sar
lea
mov
mov
xchg
push
divl
test
jge
cmp
inc
call
jmp
dec
mov
cld
xor
adc
and
sbbb
enter
fisubrl
rolb
outsl
pop
lea
inc
pop
inc
in
mov
pop
out
dec
push
fs
divb
mov
sbb
mov
in
test
push
lea
or
add
push
lret
call
outsb
jo
inc
ss
std
fcmovb
stos
xchg
adc
and
insb
ja
iret
cmpsb
insl
xchg
dec
xor
outsb
lods
stc
aad
out
aaa
es
out
ds
js
dec
and
and
mov
and
loopne
adc
push
jg
leave
or
mov
jno
sub
push
adc
stos
xchg
ja
enter
jne
lea
addl
xor
push
jbe,pt
imul
xor
loopne
dec
push
pop
les
sti
jle
jne
add
int
fstl
xchg
jae
aad
js
test
mov
dec
and
cmp
xor
pushf
inc
bound
push
adc
out
xchg
jl
leave
fdivs
mov
mov
or
js
xor
mov
dec
mov
out
pop
dec
inc
mov
mov
xchg
sub
push
fs
dec
push
dec
inc
mov
mov
sub
int
andb
shr
pop
adc
insl
fsubl
out
pop
xor
xor
fmull
jecxz
aad
cmc
cmpsb
xchg
mov
adc
rorl
cmp
out
lret
mov
push
stos
mov
push
cmc
add
lret
adc
stc
jbe
mov
out
adc
sub
lcall
outsb
push
fiaddl
mov
pop
in
pop
outsl
lods
push
jno
mov
cmp
mov
jbe
pop
xchg
les
ja
lds
test
add
outsb
ret
scas
mov
sbb
pop
jg
out
pop
cmp
daa
imul
mov
or
ret
mov
mov
mov
ror
jmp
dec
insl
jnp
scas
push
shll
ljmp
sub
js
aad
sbb
fimull
enter
add
push
push
movsb
pop
lods
ja
or
lret
cld
mov
lock
shrl
popw
scas
dec
out
adc
xchg
movsb
movsb
adc
mov
sub
cmp
pop
lds
xchg
les
push
popf
dec
std
stc
sbb
or
inc
and
gs
pop
mov
icebp
adc
std
stos
rorl
xor
jo
add
adc
stos
mov
mov
cltd
dec
imulb
scas
sub
subl
pop
cs
push
lods
mov
pop
cld
negl
pop
pop
pop
int
call
lock
out
dec
xor
pushl
repnz
jle
xor
leave
inc
lds
mov
mov
aaa
push
insl
cmp
mov
jno
jno
out
cmp
ret
sbb
adc
add
sbb
in
dec
test
cmp
jl
mov
pop
aas
adc
dec
inc
add
cmp
push
push
jb
mov
movsl
cmpsb
fsubrl
andb
in
and
cmp
dec
add
xchg
sub
fsubrp
daa
iret
mov
subps
adc
sub
clc
push
inc
cmpl
jecxz
int
in
xchg
call
inc
jns
mov
shrl
and
into
ds
insl
mov
gs
pusha
cltd
xorb
scas
scas
xor
adc
adc
jg
and
jbe
pop
nop
add
std
sbb
insl
rol
mov
add
xchg
sbbl
sub
lods
movsl
inc
fisubrs
aas
fwait
jo
xor
pop
es
jne
sub
ljmp
cmp
add
jns
sbb
jne
sbb
rcr
jae
dec
test
and
cmp
mov
gs
mov
cld
jae
arpl
mov
xchg
into
iret
cmc
cmp
cmpsl
xchg
xchg
idivb
and
hlt
dec
and
sarb
push
fadd
adc
and
dec
add
inc
jl
popl
lea
mov
leave
es
inc
inc
pop
xchg
dec
pushf
mov
add
cmp
in
adc
xchg
xor
enter
pop
mov
add
or
cmp
test
nop
adc
out
std
mov
insl
loope
sbb
loope
jno
addr16
mov
dec
dec
lahf
outsb
push
inc
sub
or
jecxz
push
fwait
mov
ja
xchg
popf
mov
xchg
enter
fdivs
dec
pop
outsl
andb
repz
jb
mov
jbe
push
xor
pusha
cld
sbb
cs
xchg
cmpsb
out
test
jmp
mov
in
adc
jne
sbb
and
nop
mov
sbb
pop
adc
mov
aad
lods
inc
cwtl
inc
jnp
fdivl
repz
adc
sub
ljmp
inc
shrl
fbld
adc
fwait
sbb
xor
adcb
xchg
lret
cli
iret
mov
and
fcomi
pop
mov
mov
fs
xor
sub
and
add
or
movsb
sub
mov
and
cs
pop
adc
jo
fmuls
xor
push
sub
xchg
repz
mov
sbb
lcall
pop
mov
movsl
pop
in
arpl
and
mov
mov
mov
iret
loope
mov
test
xor
pop
decl
iret
jnp
add
fbstp
insb
and
outsb
adc
mov
sti
movsl
test
mov
js
lods
jo
adc
fs
clc
xchg
movsl
cltd
adc
cmpsb
roll
dec
mov
inc
int
adc
and
mov
or
subb
and
pop
xchg
pop
mov
add
ret
push
leave
cli
fsub
xchg
leave
mov
ljmp
dec
xchg
add
mov
dec
cmp
lcall
xor
jg
loope
pop
lea
sbb
pop
mov
gs
rcl
pop
push
lods
loop
movsb
rcl
insb
insb
mov
imul
dec
int
xor
mov
adc
jecxz
jb
xchg
insb
sbb
add
pushf
cmp
xor
and
push
push
int3
imul
adc
in
out
out
xchg
jne
lsl
jp
cwtl
push
scas
jl
or
daa
push
fidivrs
or
sbb
scas
adc
sahf
mov
sub
cmp
rorb
lcall
push
stos
xor
inc
std
out
mov
push
nop
push
popa
pusha
xorb
scas
mov
fdivl
daa
lock
sarl
and
mov
inc
jno
fcmovnbe
or
add
shll
aam
aam
jne
sbb
cwtl
call
push
arpl
lahf
nop
push
mov
xchg
xlat
std
pop
fistps
lock
push
jo
xchg
or
adc
gs
fcmovb
movb
jae
mov
test
cvtps2pd
inc
push
fmul
arpl
std
cmpsb
ss
insl
shll
std
jl
cwtl
sti
pusha
rorl
fstpt
push
push
out
scas
jle
inc
add
add
mov
leave
dec
adc
test
jl
xor
in
fsubr
xchg
inc
scas
cmpsb
sbb
cwtl
cmpsl
ss
sub
fdivl
negl
cmc
repnz
push
iret
cmp
scas
mov
and
inc
adc
fisubs
push
mov
test
lcall
daa
push
fs
stos
movsl
outsl
pop
cld
stc
mov
mov
in
int3
mulb
push
mov
mov
sbb
pop
mov
aad
mov
xchg
rol
jl
mov
lds
lock
aas
movsl
cmpsl
xchg
cmpsb
push
inc
pop
push
xorl
daa
repz
add
or
adc
loopne
jae
sti
out
test
test
jmp
dec
mov
push
aas
dec
imul
mov
in
sti
mov
add
mov
xor
adc
xchg
cmp
imul
lods
jge
bound
xlat
xchg
lcall
pop
inc
sbb
es
movsb
sub
sbb
mov
mov
in
imul
jno
test
push
sbb
jo
pop
insl
fistl
mov
or
lods
cmp
lahf
jb
mov
addr16
repnz
or
sbb
lods
mov
stos
imul
xchg
out
or
and
jmp
lods
popf
fwait
pop
shlb
and
push
lods
es
xchg
out
das
sub
push
add
dec
mov
repz
arpl
orl
sub
push
adc
das
stc
add
jb
mov
scas
aaa
stos
mov
cmpsl
repz
out
xchg
nop
push
dec
dec
in
arpl
mov
test
test
cwtl
jmp
push
pop
cmp
jns
imul
mov
mov
jmp
push
pop
cmp
jns
imul
mov
mov
jmp
insb
cmp
inc
pop
cmp
sub
imul
mov
mov
jmp
ret
sub
cs
rcll
xchg
jo
mov
test
cmc
mov
iret
jns
lds
adc
jg
das
push
pop
push
dec
sarl
test
aad
aas
and
sysexit
jg
outsl
push
pop
inc
dec
or
lahf
pop
jmp
test
lret
ffreep
iret
push
add
jae
outsl
pusha
nopl
sbb
mov
in
arpl
cmp
cs
sub
and
jp
pop
mov
js
mov
aam
xchg
pop
out
adc
pop
adc
dec
mov
pop
stc
push
mov
mov
jns
push
movsb
fs
testb
and
iret
gs
pop
popf
mov
int
jo
imul
xor
and
lock
outsb
dec
and
jb
ljmp
pop
and
adc
jecxz
cmp
mov
sub
cmp
push
xchg
sahf
jnp
or
in
sub
dec
push
shlb
pushf
sbb
psubb
inc
dec
out
mov
test
aad
arpl
repz
mov
jg
outsl
addr16
inc
or
rcl
jl
fscale
leave
lcall
mov
jo
pusha
popa
pop
adc
push
cmp
and
clc
inc
in
lahf
in
pushf
lcall
push
jp
inc
adc
adc
add
add
leave
fcomi
jmp
sti
cmpsb
xchg
in
aad
aas
and
pcmpeqw
outsl
push
pop
inc
dec
mov
movsl
scas
xchg
lahf
test
aad
aas
and
pcmpeqw
outsl
push
pop
inc
dec
mov
add
cmp
or
mov
es
jmp
inc
cs
call
scas
jecxz
mov
add
stos
test
cmpl
mov
nop
aad
adc
and
movsb
repz
icebp
lods
std
xchg
sbb
in
inc
jg
jbe
push
mov
pop
xor
outsl
jg
sbb
push
cmpsb
pop
clc
jo
rorb
in
mov
pop
mov
outsb
xchg
cmp
mov
xchg
popa
into
jo
pop
addr16
int
adc
pop
mov
cmpsl
mov
aaa
shlb
imul
cmp
push
mov
cltd
xchg
mov
ja
outsb
inc
xchg
scas
fbstp
lods
ljmp
iret
shrl
inc
cmc
enter
pop
xchg
mov
aad
jne
fstpt
fbld
gs
lods
push
stos
mov
push
mov
imul
add
dec
sub
mov
lock
xchg
add
mov
rcrl
cli
or
rcrl
sar
in
shlb
mov
clc
fnstcw
xlat
xchg
mov
add
out
or
pop
push
sbb
lcall
sbb
rolb
jne
scas
cs
sub
bnd
inc
sub
mov
test
push
out
test
push
addr16
or
cmc
dec
lahf
push
nop
dec
scas
sub
xor
out
push
outsb
inc
mov
dec
xchg
pop
or
ja
xchg
out
out
lret
dec
push
push
test
aas
sarl
push
js
pusha
xchg
xchg
arpl
and
cmp
dec
xor
pop
or
test
jo
jno
mov
imul
insb
jmp
lret
out
and
ret
lea
sti
test
gs
jne
repz
xchg
xchg
enter
iret
and
sub
das
roll
dec
add
cmc
mov
dec
or
movsb
insb
mov
xchg
add
cmp
mov
in
add
jecxz
ret
lods
sub
add
sbb
add
rolb
fadds
outsb
xchg
inc
push
fldl
popa
imul
mov
popa
rclb
jl
mov
mov
add
aaa
ljmp
imul
arpl
mov
or
add
pop
mov
daa
push
mov
adc
hlt
sbb
or
mul
je
jl
imul
mov
and
fwait
jle
in
and
inc
in
test
mov
add
arpl
xchg
jp
pop
and
in
dec
fwait
sarl
cmp
xchg
sbb
lods
sarb
rcrb
icebp
imul
pop
jae
or
jae
out
clc
testb
mov
aaa
lods
xchg
jmp
ds
jo
xchg
xchg
popf
pop
adc
insl
fcomip
pop
fimull
pop
and
pop
shrb
jmp
fsubs
jmp
add
or
movsl
pop
int3
mov
mov
mov
popf
sbb
cmc
dec
mov
icebp
mov
and
mov
inc
sarb
icebp
push
sti
mov
dec
mov
sub
bnd
jl
lods
add
mov
cli
pop
jle
sbb
pop
mov
sbb
xlat
mov
repnz
out
inc
iret
mov
shrl
jns
dec
es
iret
adc
test
jp
ja
and
xchg
jae
cmpsb
call
pusha
pop
xchg
inc
inc
std
and
lahf
mov
cwtl
dec
cmp
inc
int
and
icebp
xchg
sahf
push
outsl
and
data16
scas
mov
dec
addr16
sahf
add
pop
sub
ja
cmp
in
add
popf
cmpsb
xchg
aam
icebp
in
pop
pop
pop
sub
in
repnz
inc
jle
ds
mov
adc
jae
inc
lods
movsb
bound
push
fbld
cmp
mov
lea
test
xor
lea
outsl
lahf
xor
pop
dec
pop
cmc
into
dec
or
clc
arpl
jge
imul
push
cmp
stos
sub
inc
andl
xchg
scas
out
loop
adc
lret
jbe
adc
push
lahf
js
es
adc
loope
jnp
mov
jae
gs
or
mov
stos
icebp
mov
dec
mov
stos
loopne
jns
cmpsb
jbe
lods
sar
cmc
or
iret
jl
fs
add
push
in
ror
add
inc
xor
insb
mov
push
or
jp
sub
cmpsb
fmull
rol
sub
ret
push
stos
imull
ror
rcrb
cmpsl
int
mulb
in
dec
or
stos
into
aam
lret
pop
orl
fisttpl
out
mov
int
jmp
sub
pop
imul
dec
or
pop
test
aaa
mov
add
loope
push
sub
mov
sti
cltd
and
jmp
movsl
rorl
xor
jbe
jae
mov
xchg
add
sar
adc
or
cmpsb
andb
sbb
testl
and
push
adc
cmp
in
jae
mov
aad
or
insl
arpl
fcomps
jmp
push
push
hlt
cmc
xchg
adc
pop
jl
xchg
pop
xchg
test
cmpsb
lahf
adc
push
mulb
out
int
push
repz
pop
or
xchg
leave
ja
rcr
je
mov
xorb
xor
mov
in
fidivrl
out
stos
ds
push
sbb
pop
fisttps
jp
sub
in
pop
xchg
inc
mov
rcl
jae
clc
int3
and
mov
stc
test
stc
les
adc
cmp
ret
mov
xor
or
adc
sub
sbb
cld
jle
test
leave
add
sub
icebp
lret
adc
inc
mov
dec
and
dec
int
dec
push
push
js
push
aas
testl
inc
xchg
aas
pop
lcall
je
jl
sti
cmp
sbb
mov
sub
fisttpl
mov
add
pop
mov
aad
ror
popf
icebp
pusha
push
loope
mov
mov
push
popa
xchg
repz
xlat
jmp
xor
mov
cmp
ss
shl
mov
or
sbb
cmp
aam
and
pop
fwait
jp
xchg
orl
fists
stos
cmpsl
inc
stos
out
aam
and
out
rcll
adc
sub
pop
loop
cmp
and
jnp
mov
adc
pop
arpl
sbb
das
cltd
push
repz
push
mov
xor
cmpl
imul
or
test
mov
mov
ret
les
sub
xchg
fcmovb
mov
scas
xor
sub
sub
int3
dec
dec
popa
shl
fldl
xor
xchg
push
inc
hlt
mov
dec
mov
or
leave
fs
push
dec
std
nop
cmpsb
dec
mov
ret
dec
xchg
mov
hlt
sahf
xchg
push
leave
gs
popa
fstpl
pop
clc
mov
adc
ffreep
sub
fmuls
scas
xor
mov
pop
adc
pop
and
inc
es
xchg
adc
test
rorl
shl
lds
sbb
xor
pop
sub
adc
fs
push
std
out
in
mov
sub
inc
add
xchg
pop
dec
sarl
or
push
jns
lods
sbb
in
pop
in
xor
mov
mov
cmpsl
pop
and
test
dec
loop
mov
lret
xchg
xor
arpl
testb
xchg
jo
fdivl
mov
push
fsubl
insl
mov
data16
sti
pop
and
clc
inc
movsb
movswl
mov
aad
xchg
es
incl
daa
mov
mov
shl
lret
or
jecxz
outsl
lret
icebp
test
push
jg
add
dec
xchg
or
xchg
cmp
pusha
sbb
arpl
scas
or
sti
dec
xor
sbb
push
mov
mov
pop
xchg
out
cmpsl
or
mov
movsb
out
xchg
pop
mov
cmc
or
adc
xchg
imul
add
jne
push
int
fnstcw
sbb
sarl
gs
out
int3
pop
aaa
fidivrl
jne
adc
loop
fimuls
int3
aaa
in
xchg
xor
mov
xchg
call
lock
outsl
pop
sub
int
popa
mov
jmp
gs
jne
jle
xchg
xor
jo
mov
popa
pushf
movsl
adcl
jl
adc
jb
lods
inc
jbe
jecxz
in
ret
add
bnd
stos
jns
dec
xor
sqrtps
lods
sbb
insl
pop
ss
jbe
or
lock
lea
dec
sbb
test
and
pop
or
jns
xor
outsl
lea
xchg
push
push
lret
pop
shlb
es
adcl
outsl
mov
loope
cmp
imul
out
add
push
repz
popa
paddw
xchg
dec
add
pop
cmpsl
jne
mov
lret
call
ss
ds
mov
dec
mov
adc
adc
in
imul
xchg
xchg
jne
and
stos
lods
js
dec
iret
test
inc
out
pop
xor
pop
test
repnz
insb
jo
ljmp
ljmp
pop
push
push
jle
fsubr
or
fdivr
mov
xchg
pop
ljmp
pop
mov
add
xor
dec
cs
shl
fwait
or
cmp
icebp
mov
cli
cmp
test
mov
jmp
add
dec
das
sbb
sub
hlt
mov
push
imul
lret
fidivrs
adc
pop
rcrb
push
xlat
adcl
lock
adc
fdivrs
imulb
add
cmp
and
test
mov
xchg
mov
dec
dec
int
xor
sub
lock
aam
cwtl
jo
aas
xchg
popf
es
cli
add
in
push
fiaddl
pop
fwait
insb
mov
jle
pop
pushf
mov
xchg
mov
pop
lods
sbb
mov
leave
gs
cmp
or
gs
movl
ss
stos
movsb
push
andb
lea
mov
inc
xor
mov
stc
mov
mov
daa
jl
cmp
arpl
iret
push
xchg
mov
pop
xchg
cmpsb
xchg
xor
je
fbstp
xchg
call
andb
push
lret
outsb
stc
mov
mov
in
rolb
hlt
popf
pop
ret
jp
xor
or
inc
sahf
sub
cmp
pop
addr16
orb
xor
jno
ss
sbb
or
sahf
mov
out
int3
sbb
repz
or
jo
out
add
popa
cmp
lods
std
pop
mov
incl
push
lret
in
outsb
xor
xchg
mov
cmp
pusha
cs
hlt
or
jae
int
hlt
adc
cmp
setl
adc
push
adc
addr16
inc
sub
pusha
cmc
fisubrl
xchg
pushl
cmp
in
jns
mov
jnp
lahf
add
push
dec
and
push
jmp
cmp
int
outsl
repnz
push
lock
adc
imul
dec
push
sti
idiv
hlt
cwtl
mov
add
iret
mov
xchg
movsb
adc
push
jle
lahf
sti
fwait
jns
js
pop
ss
ljmp
cmp
push
xor
xor
xor
xchg
sub
cs
lock
ror
imul
into
mov
sti
jbe
xrelease
and
xor
popa
push
pop
leave
sbb
sub
fwait
jl
sbb
mov
scas
dec
test
mov
push
into
test
or
jmp
inc
clc
jmp
xlat
push
addr16
mov
andb
and
add
enter
cs
stc
lock
pop
in
test
and
sbb
add
addr16
adc
out
lock
mov
xchg
test
mov
loop
je
inc
sub
fisttps
and
jecxz
sbb
daa
inc
loope
and
mov
push
jmp
adc
popa
xchg
movsl
roll
xor
fidivrs
add
adc
imul
cmpl
test
popf
call
int3
fs
inc
popa
push
fiaddl
fs
aas
xor
aaa
mov
push
loopne
cwtl
sahf
das
or
and
sbb
outsb
repz
or
les
dec
push
bound
and
adc
imul
xchg
arpl
insl
xchg
cmp
jmp
insb
adc
andb
clc
imul
shrl
sub
leave
sahf
fcmovnbe
push
pop
out
clc
fimuls
into
gs
xchg
je
shll
scas
adcl
call
fcoms
das
icebp
mov
or
out
insl
imull
push
sbb
stos
mov
popa
aam
sbbl
push
sbb
inc
int3
das
dec
pusha
cmc
push
test
flds
cmp
sbb
hlt
mov
cwtl
add
adc
adc
sub
pop
dec
or
dec
jno
cwtl
cmp
cmp
xchg
add
or
popa
xchg
filds
mov
das
cmp
push
test
adc
stos
cmp
das
push
test
call
scas
int
fs
mov
das
adc
cmpsl
fists
out
test
lea
inc
xor
inc
push
lock
lret
sub
push
sarl
cmp
add
xor
outsb
pusha
loop
cwtl
dec
ljmp
insl
mov
jne
in
int
fs
lods
push
xor
je
mov
notl
add
pop
jo
add
mov
test
fbld
mov
push
outsb
pop
inc
or
and
lock
ljmp
popf
push
into
pushf
cmp
adc
cmp
ds
rdpmc
sbbb
pop
dec
in
sbb
nop
insl
sarb
enter
sbb
ror
adc
push
movsl
and
das
addps
sti
repz
out
cmc
jle
pop
stos
push
pop
repnz
shrb
and
mov
lcall
mov
ret
movsl
hlt
nop
imul
shrl
aad
xor
sub
jbe
dec
repz
pop
rorl
mov
in
push
aad
adc
in
jne
mov
out
and
btcl
mov
mov
xlat
ljmp
out
jl
add
and
jo
out
dec
sarl
adc
imul
push
orb
lock
js
sub
mov
push
cmp
mov
dec
xlat
lahf
daa
inc
and
push
sub
mov
cmp
xchg
les
inc
inc
movsl
cmp
pop
add
push
inc
xor
notl
dec
stos
repnz
scas
sbb
jmp
sub
test
ret
cmp
inc
push
cmpb
insl
js
or
mov
mov
loopne
add
mov
xlat
stos
hlt
aaa
loope
pop
and
mov
std
fsubs
mov
popf
int
stos
jl
clc
inc
or
jno
dec
ss
clc
ja
mov
std
roll
mov
adc
sub
ljmp
jno
adc
loop
mov
push
aad
and
and
clc
push
jmp
loop
in
jns
repz
xchg
or
jnp
adc
mov
test
aam
imul
mov
or
jmp
icebp
inc
cwtl
cmp
xlat
js
out
dec
in
cld
push
sub
inc
add
fidivrs
mov
xchg
cwtl
jnp,pt
push
inc
adc
push
sub
push
test
test
mov
cwtl
movsb
das
js
xlat
sub
jnp
cmc
add
dec
adc
ss
mov
movsl
jne
dec
push
das
push
jg
xchg
inc
insl
ds
insb
push
int
arpl
jb
bound
sar
dec
cmp
pop
pop
pop
popa
mov
jns
sub
sbb
sub
or
adc
mov
in
sbb
mov
test
into
mov
into
push
push
stos
int
dec
push
lcall
imul
jno
xor
std
jnp
stos
xorb
test
mov
push
mov
add
lods
mov
pop
or
out
adc
icebp
dec
into
test
dec
or
clc
and
dec
pusha
add
or
or
pop
orl
mov
div
pop
pop
push
mov
mov
sub
fwait
divl
outsl
mov
imul
mov
js
jle
ljmp
gs
lods
inc
in
jb
outsl
cmpsb
inc
fistpll
xchg
mov
fwait
jo
rorb
jl
xchg
adc
cltd
sub
or
sbb
cs
ds
add
inc
sbb
cmc
popa
xor
jmp
cmc
sti
pop
icebp
lret
lret
inc
loope
mov
sbb
push
push
push
push
in
jno
lret
addr16
jb
int
cmp
in
insb
sub
pop
out
xor
cmc
outsb
sbbl
xor
scas
mov
pop
inc
scas
and
insl
mov
sub
pop
pop
test
push
das
lock
inc
and
jbe
cld
push
in
std
stos
adc
cwtl
cltd
xor
and
and
lahf
mov
imul
mov
pop
test
iret
in
sub
cmp
dec
pop
push
pop
pop
mov
push
cs
jp
mov
xchg
dec
add
adc
pop
mov
insb
das
cli
rcll
jae
jae
cmpsl
and
in
mov
jecxz
jp
mov
cmpsl
fistpll
dec
xor
push
addl
lcall
adc
push
icebp
inc
xor
mov
jle
movsb
push
push
xchg
push
xchg
stos
je
dec
data16
lahf
pop
jne
out
pop
mov
or
mov
fmuls
xor
dec
call
xor
mov
xor
aas
lock
or
mov
lcall
loope
aad
test
fwait
test
push
mov
sahf
add
mov
xlat
adc
stc
sub
mov
pusha
repz
jle
shr
cmp
cs
and
mov
dec
aas
test
mov
mov
les
push
or
je
sub
test
jo
jo
sub
and
and
jmp
xor
jae
inc
cwtl
lea
es
sub
or
push
imul
sbb
lock
mov
sub
adc
jb
push
dec
aad
dec
pop
sbb
js
xchg
out
shlb
push
in
jge
jo
inc
clc
cltd
mov
mov
mov
xor
adc
rorb
stos
mov
push
call
jo
inc
push
sub
mov
insb
add
test
xlat
or
jge
inc
or
or
lea
and
jnp
push
mov
jbe
inc
mov
mov
stos
imull
mov
xchg
xchg
stc
lds
xor
xorl
movsl
xchg
push
or
sbb
roll
cmp
and
imul
add
mov
stc
jmp
fdivrs
pop
add
fnstcw
add
inc
insl
fs
sbb
fimuls
leave
dec
push
or
mov
arpl
xor
movsb
cmp
add
ficoms
push
and
rclb
xchg
pop
lock
stc
mov
in
popa
mov
stos
adc
push
pop
pusha
std
inc
lea
mov
dec
sub
xor
scas
and
leave
sub
cwtl
pop
ficoms
inc
cmp
inc
xchg
ja
movsl
sbb
cmpsl
das
bound
arpl
cmp
add
inc
cmp
xchg
loopne
insl
cs
push
notl
pop
or
das
add
clc
cmp
adc
ja
dec
inc
imul
inc
sub
imul
jmp
jmp
test
ret
and
jbe
pop
xchg
fisubs
das
mov
xor
jne
dec
cmpsb
add
popf
bound
push
pop
mov
ret
jp
jb
jnp
filds
cmc
sub
mov
test
or
push
insb
mov
cmp
dec
add
imul
adc
jp
imul
jno
or
movsb
mov
jmp
lcall
lahf
cmp
clc
roll
ds
call
int3
outsb
out
in
fdivrs
xchg
lahf
mov
movsb
sub
iret
es
adc
add
test
aaa
enter
aaa
js
jae
pop
fdivrs
sbb
push
dec
pop
out
sarb
sbb
mov
pop
dec
rolb
adc
imul
xor
sub
ret
sub
hlt
scas
rcrb
in
aad
aas
and
pcmpeqw
outsl
push
pop
inc
dec
mov
movsl
scas
xchg
lahf
test
aad
aas
and
pcmpeqw
outsl
push
pop
inc
dec
mov
xchg
scas
cmc
lahf
test
aad
add
cs
add
outsl
push
pop
lods
dec
mov
lahf
movsl
mov
push
outsl
aad
inc
xor
pop
add
nop
stos
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
or
pushf
cmpsb
mov
out
cmp
imul
int3
or
out
sub
cmp
or
sbb
insb
test
sub
imul
mov
fsub
mov
rcrl
mov
mov
fbstp
mov
pusha
fmull
jns
dec
mov
push
imull
scas
xchg
push
nop
dec
movsl
fmull
aad
adc
fs
jle
push
subb
push
mov
xchg
in
cmpsb
in
mov
int
push
je
jmp
xor
aas
test
mov
xchg
xlat
jnp
xchg
cmp
add
cld
mov
into
int3
sub
stc
sub
sbb
movsb
pushf
insb
mov
mov
pop
mov
jp
pop
and
sbb
push
aam
pop
mov
cmp
call
pushf
xchg
mov
icebp
and
in
jmp
es
and
jns
mov
aam
jae
test
in
cmp
stc
int3
or
sub
int3
mov
cltd
xchg
nop
fsubl
jno
inc
pushf
push
aam
shlb
sbb
adc
mov
sbb
adc
ljmp
push
orl
lea
imul
cmp
add
dec
cmc
and
xor
imul
pop
mov
or
mov
or
pop
jns
imul
int3
or
stc
sub
cmp
or
sbb
insb
test
pop
jns
imul
int3
or
stc
sub
jmp
scas
mov
pop
es
pop
push
insb
sbb
cmpsl
ljmp
adc
movsb
je
aaa
sbb
adc
push
sub
cmp
lods
flds
add
or
sbb
repnz
jae
and
scas
icebp
stc
mov
stos
push
lods
sub
mov
loop
sub
pop
hlt
pushf
pop
mov
hlt
and
mov
fmull
cmp
pop
nop
mov
inc
fnstcw
out
jns
sbb
mov
jae
shlb
xchg
xor
or
das
fstp
imul
pop
cmc
pop
decb
or
push
loopne
das
adc
sub
jo
inc
idiv
xlat
cmpsl
test
mov
bound
std
mov
enter
inc
push
lock
das
ds
xchg
dec
mov
pushf
lahf
aam
adc
popf
lods
and
cmp
cmpl
and
cwtl
repnz
imull
pop
mov
out
pushf
mov
das
aad
sti
pop
mov
or
mov
lret
inc
or
push
sti
mov
js
jns
cmp
out
lea
aas
cmp
pop
adc
mov
add
dec
loop
or
les
rcrl
out
cwtl
jge
imul
push
in
xchg
enter
clc
mov
jge
xchg
mov
xchg
or
adc
cmpsb
jl
adc
movsb
frstor
xor
scas
call
mov
mov
sub
jmp
or
pop
rclb
nop
adc
das
cmp
jne
jnp
outsl
loop
popf
sub
xor
and
push
adc
sub
lret
pop
leave
out
dec
mov
fimuls
into
ret
adc
lea
jg
cmp
or
jae
inc
in
rcr
addr16
sub
add
xor
push
je
sub
stos
out
movsb
add
cmp
arpl
nop
lret
lret
lret
mov
jl
pop
sbb
in
fsubl
jae
aam
jne
rcrl
jl
aad
adc
stc
sbb
or
jo
dec
mov
cmp
xchg
pop
je
call
xchg
mov
dec
jmp
in
call
test
pop
sbb
jp
cmp
push
inc
aas
stc
xorl
cltd
sub
outsb
test
inc
jmp
std
stc
icebp
cmp
arpl
movsl
fdivrp
ja
xor
dec
sub
out
or
pop
jge
sub
inc
out
orb
mov
jge
or
or
mov
add
fmulp
aad
and
lods
jecxz
or
iret
sub
loop
sub
push
add
ljmp
popa
dec
movsb
pop
sahf
sub
scas
mov
sbb
and
or
cmp
xchg
xor
adc
inc
jns
loop
sub
mov
push
adc
std
ss
sti
lods
sbb
daa
push
gs
pop
scas
inc
js
xchg
call
test
mov
clc
shrb
lea
xor
mov
sbb
add
add
sub
mov
cmp
aas
lcall
cmovl
sbb
or
sub
mov
mov
imull
mov
cli
addl
adc
pop
jg
and
cmp
ficompl
ljmp
enter
cld
add
cwtl
rcll
addl
mov
mov
lock
adc
fs
xchg
scas
adc
hlt
sub
cwtl
inc
arpl
or
adc
insb
es
test
cmp
sub
cltd
push
xchg
adc
xor
imul
insb
mov
xor
push
inc
cmpsl
loope
ret
xor
loop
out
xchg
insb
dec
outsl
and
jno
sbb
fmuls
add
scas
pop
and
or
xchg
ljmp
jle
ds
jp
scas
mov
imul
addl
xchg
sub
or
adc
mov
inc
fcompl
rolb
fistps
xstore-rng
cmpsl
add
hlt
data16
mov
cmpsb
outsl
jns
imul
inc
pusha
and
push
add
fidivs
stc
xchg
push
jp
aaa
mov
sbb
push
sub
mov
or
mov
sbb
fimuls
jl,pn
add
add
adcb
jns
jae
adc
cli
mov
stc
mov
lds
push
lret
fldl
sahf
mov
and
jae
cmpl
jmp
or
addl
add
pop
fistl
and
mov
mov
and
mov
popa
mov
rclb
rclb
mov
ja
dec
dec
lcall
mov
inc
mov
push
dec
dec
jg
xchg
sarb
jmp
aad
cmpsl
cwtl
cltd
in
fcom
sbb
test
call
dec
pusha
mov
int3
loopne
test
std
and
into
jge
scas
adcb
adc
or
shrl
add
and
adc
pop
inc
adc
and
push
fidivrs
fwait
sbb
repz
pop
xor
repnz
scas
mov
and
fidivrl
popa
mov
rclb
imul
dec
movsl
mov
pop
scas
jns
jle
ud2
clc
test
add
repz
sti
or
lods
xchg
xchg
hlt
xor
jmp
imul
lods
mov
repz
push
jne
adc
js
and
js
sub
push
push
xchg
adc
mov
movsl
add
scas
dec
jl
mov
jecxz
in
cmpsb
aad
push
in
leave
das
sbb
insl
cld
das
or
js
dec
dec
popf
xor
cmp
or
adc
fs
sti
stc
xor
loopne
fcmovbe
shlb
inc
push
ljmp
pop
loope
movsl
loopne
pop
add
hlt
pop
jne
loope
inc
leave
cmc
adc
sub
test
mov
into
fcomps
addl
push
insb
xchg
mov
pushf
dec
call
mov
xchg
ja
or
inc
aaa
sub
repz
ja
xchg
push
mov
ds
dec
jg
test
ficoms
push
mov
inc
jecxz
push
insb
int3
pop
add
fwait
or
pop
xor
mov
cmp
insl
test
jle
mov
shlb
sarl
das
es
sbb
push
into
xchg
pop
into
notb
pop
fiadds
and
into
mov
mov
mov
push
lods
sub
ret
xor
jg
dec
inc
inc
insl
aam
mov
mov
ret
out
rorb
dec
and
lods
mov
dec
jo
pop
mov
or
xor
sbb
pop
movsl
and
faddl
fnstenv
xor
sbb
jp
clc
xchg
push
xchg
add
add
mov
stos
fdivs
push
mov
ja
inc
jnp
jle
stos
lret
adc
in
bound
jp
adc
inc
jae
fdivrs
dec
dec
stos
inc
push
push
inc
fsubs
cmpsb
scas
or
mov
rorl
outsb
push
sbb
dec
outsl
pop
or
flds
xchg
popf
rcl
jecxz
jne
in
iret
mov
xor
in
ficoml
in
pushf
fwait
dec
mov
popa
push
popa
cmp
jle
lock
dec
xor
pop
lods
push
mov
pop
xchg
mov
jns
pusha
daa
lods
data16
fldcw
out
add
xor
stos
sbb
ret
pop
jl
sub
cli
jg
sbb
cmpsb
jns
fwait
pop
call
repnz
xchg
xlat
xor
xlat
dec
mov
sbb
enter
xlat
mov
adc
cwtl
pop
cld
xchg
cs
cmp
lods
mov
fistpl
repnz
xchg
push
dec
je
xorl
sbb
addb
mov
mov
and
add
jl
ds
pop
out
rorl
push
push
rolb
inc
jnp
sbb
mov
shr
fsubl
sub
jo
cli
nop
cwtl
rcll
andb
es
pop
sbb
add
pop
xchg
sub
jno
dec
xor
stc
and
popa
sbb
fmulp
popf
imul
ljmp
push
xchg
mov
cmp
fsubs
popf
mov
int
and
sbb
shll
mov
add
sbb
fnstsw
in
mov
outsb
or
cwtl
inc
out
int
cmpsl
cmp
pusha
inc
insb
rorl
out
sahf
in
add
inc
repnz
int3
sahf
es
add
adc
push
pop
popa
je
mov
sub
xorl
repnz
pop
push
mov
in
lea
andl
and
cmp
sub
lds
aam
rcrl
jecxz
ss
or
xor
mov
loope
mov
movsb
jnp
cmp
scas
and
jns
ficompl
subl
sub
xor
lcall
mov
cmpsb
mov
push
and
mov
popf
jb
sbb
dec
lock
xchg
and
lds
dec
push
jecxz
and
sbb
dec
movsb
cmp
mov
rcll
add
inc
dec
mov
aaa
out
jne
out
movsb
or
or
pop
jbe
es
sub
dec
mov
ret
mov
out
loopne
fwait
leave
lret
sub
jge
xor
in
dec
adc
mov
jl
or
lret
xor
inc
test
repz
xlat
out
les
jb
jnp
pop
xchg
xor
iret
xchg
xchg
fmul
pop
push
das
sbb
loope
scas
scas
scas
mov
jbe
push
mov
jae
dec
jno
out
test
sub
gs
mov
or
dec
push
into
mov
jmp
loopne
cmp
das
out
repnz
and
mov
mov
cmp
aaa
pop
mov
lret
mov
xchg
jle
test
push
mov
aad
push
mov
mov
dec
cltd
push
pop
dec
xor
xchg
les
pop
fstps
mov
mov
out
ret
pushf
lahf
add
mov
sub
in
popl
jns
lcall
xor
jecxz
push
stc
shrb
loopne
or
pop
push
inc
cwtl
mov
xchg
dec
mov
ja
push
jb
rcr
adc
xor
sub
mov
and
icebp
xor
or
push
sahf
sti
bound
and
sub
aas
ret
xlat
test
js
in
push
int3
push
cmp
jp
xchg
sbb
jns
jge
cmpb
mov
jbe
adc
shll
dec
mov
bnd
mov
xchg
test
into
jecxz
pop
sbb
jle
incb
mov
push
es
fbstp
test
fisubl
clc
faddl
jle
or
loopne
add
addl
je
and
mov
jnp
push
mov
mov
jl
cmpsb
mov
out
mov
mov
add
lahf
addr16
mov
xchg
dec
inc
fmuls
adc
call
shlb
fwait
stos
mov
xor
inc
sbb
pop
add
xor
sti
mov
jne
xchg
dec
add
arpl
imul
mov
jae
push
jae
scas
xchg
cmp
lahf
shl
stos
adc
sub
and
in
loope
inc
inc
pushf
data16
pop
movsb
mov
or
aas
or
lahf
enter
fwait
pop
shrd
mov
pushf
mov
sub
lods
arpl
repnz
or
imul
test
lcall
daa
lret
imul
cmc
jle
cmpb
lret
jb
lret
mov
pop
in
pop
jno
xchg
jmp
ds
call
frstor
push
mov
sbb
mov
push
push
cmpsl
cmc
in
jl
mov
jmp
loop
dec
add
outsb
mov
push
lahf
cltd
out
lcall
sub
xchg
into
or
mov
dec
lock
sbb
add
fisttpl
and
xchg
or
clc
push
leave
lcall
dec
stos
mov
cmp
xor
je
cltd
inc
int3
and
or
sub
icebp
xor
insb
add
adc
nop
sub
mov
add
pop
cli
add
inc
in
xor
xorb
pop
push
fdivrs
cmp
inc
es
out
add
repnz
jecxz
rolb
mov
mov
inc
jne
out
sub
mov
shlb
adc
out
dec
dec
iret
mov
inc
mov
adc
int3
popa
fwait
push
add
jle
inc
loope
mov
push
in
sahf
cmpsl
dec
inc
dec
call
jo
stos
jns
jns
into
jbe
push
lret
rorl
or
lods
mov
cwtl
call
subb
jg
and
push
or
or
in
fmuls
ret
xor
out
js
sub
lcall
jmp
jbe
leave
add
in
scas
sub
cmp
fwait
pusha
data16
cmp
ds
mov
adc
mov
xchg
cmpsl
and
push
pop
or
push
scas
test
sbb
out
rclb
jp
sbb
dec
inc
paddb
into
cmp
es
push
mov
out
pop
mov
cld
dec
sbb
jbe
jl
iret
xor
lock
mov
iret
mov
push
pop
or
or
or
push
xor
lcall
jp,pn
pop
stos
lahf
jns
mov
or
and
sbb
or
pop
fbstp
test
insl
or
xchg
jle
aam
mov
sub
jb
sarb
sub
das
dec
movsl
imul
adc
ror
xor
xlat
ja
fisttpll
js
sbb
pusha
and
jae
pop
into
mov
fcmovb
loop
adc
jle
pop
shlb
sub
pusha
inc
and
nop
mov
lcall
lahf
pushf
push
push
xor
add
and
ds
cmp
pop
das
cmpsl
sub
xor
xor
jb
xchg
and
iret
mov
mov
xchg
fucom
jae
inc
lock
unpckhps
mov
xlat
rcll
push
add
ja
aad
mov
mov
test
push
cmpsb
sub
sbb
loopne
mov
out
cs
push
dec
inc
lahf
test
scas
mov
imul
cmp
add
loopne
jb
sti
mov
and
in
call
adc
in
std
lods
mov
addr16
stos
add
test
clc
xchg
popf
dec
test
xchg
add
lock
stos
add
in
cltd
xchg
push
inc
mov
jae
vprotb
dec
mov
aas
scas
psadbw
fucom
push
lds
les
rsm
pop
rclb
pop
xor
jle
pop
sbb
call
movsl
pop
dec
pop
inc
in
xchg
loop
popa
cmp
pop
sbb
pusha
dec
add
cmp
subl
pusha
xchg
fbstp
push
dec
pop
mov
in
mov
jbe
lcall
xchg
push
aad
sub
ds
stc
mov
loop
add
push
scas
and
push
push
push
or
fldt
or
rcll
js
mov
or
dec
ret
jp
push
xchg
mov
stos
repnz
das
mov
sbb
pop
insl
pop
jmp
jae
pop
push
mov
mov
pop
mov
cs
adc
ror
adc
rclb
repz
jl
xor
dec
cs
hlt
adc
negb
mov
pop
leave
insb
test
and
lods
push
shll
push
movsb
notl
movsb
dec
or
inc
leave
adc
mov
aas
arpl
imul
push
stc
mov
jbe
call
mov
test
cltd
pop
orb
hlt
mov
jmp
push
loope
xchg
nop
sbb
and
aaa
rclb
add
xchg
in
push
and
addr16
jnp
loop
jae
jl
adc
nop
lcall
cs
popa
das
xor
push
dec
stos
mov
aam
mov
rclb
aaa
push
mov
mov
dec
add
mov
mov
push
ret
dec
imul
out
pop
mov
mov
mov
jecxz
in
jecxz
sti
pop
mov
pop
daa
adc
lods
filds
movsl
push
jl
add
scas
rcrl
adc
jo
mov
mov
add
lods
add
pusha
out
adc
inc
gs
adc
jbe
inc
aad
dec
sbb
rorb
test
in
or
inc
daa
adc
push
mov
or
and
ds
aaa
jl
xchg
and
fs
mov
cmp
sub
sub
mov
loopne
adc
mov
mov
repnz
xchg
xchg
jo
cmp
hlt
fimuls
and
cmp
lds
pop
not
cmp
les
js
mov
loope
push
adc
iret
subl
dec
or
in
les
test
mull
inc
cmp
mov
nop
rorb
jp
xchg
mov
jg
test
pop
jbe
push
in
xchg
aad
jae
adc
adc
cmp
push
shlb
jb
paddusb
fs
call
movsb
cli
int3
test
lock
out
xor
in
pop
aad
mov
scas
dec
mov
out
call
loope
gs
int
in
xchg
dec
jb
jns
andl
int
insb
aas
es
sbb
fiaddl
sarl
inc
jns
pop
int
fstl
cmp
and
cltd
ss
mov
adc
sub
cmc
push
sbbl
dec
pop
daa
jle
test
mov
add
mov
xor
jae
add
lea
outsl
shrl
gs
push
adc
sub
cmp
pop
addr16
outsl
jp
stos
xchg
xor
std
aas
and
sbb
outsl
dec
aad
ss
adc
test
xor
jmp
dec
jl
dec
mov
jp
pop
out
cmp
fldt
pop
push
cmp
lods
pop
int
xchg
jl
inc
mov
fdivrl
ror
gs
mov
cli
mov
fwait
stos
add
test
xchg
mov
fbstp
pop
mov
sbb
pop
les
ja
sub
inc
inc
dec
adc
lcall
loop
cmp
cmpsb
movsb
xor
mov
sub
mov
add
js
pop
inc
in
sbb
out
mov
adcl
sub
cmp
pop
test
pusha
adc
or
jmp
loope
fsubrl
jmp
pop
popa
inc
test
jecxz
push
ljmp
push
mov
jg
mov
pop
int
xor
push
aas
imul
xchg
fiadds
add
mov
and
pop
ljmp
lods
lahf
push
popa
mov
xlat
mov
test
inc
in
cmpsb
adc
push
lret
and
push
icebp
sbb
xor
xchg
push
add
gs
jl
int3
fisttps
and
cltd
in
in
mov
addl
loopne
ret
adc
cltd
xchg
adc
pop
jb
xor
push
cmpsb
adc
test
fcomps
or
sub
rol
aas
test
dec
pop
cli
push
stc
out
insl
cmp
out
jno
out
test
fildll
or
mov
movd
pop
clc
lock
sub
pop
dec
shll
out
inc
or
ret
dec
test
pushf
fldln2
cltd
mov
pop
into
subl
scas
or
inc
aas
fldln2
inc
push
xchg
out
es
repnz
inc
popa
dec
inc
pop
dec
loope
enter
adc
cmp
ds
ret
inc
sbb
xchg
pop
fwait
push
dec
pop
lds
xor
clc
fs
pop
mov
or
insl
ds
cmp
xchg
cmc
cli
fbld
cltd
hlt
mov
daa
and
sbb
xchg
into
mov
iret
sbb
inc
mov
idiv
lods
and
imul
cs
push
scas
lret
mull
lea
iret
in
xor
pusha
mov
imul
int
scas
inc
pop
dec
fcoms
adc
pop
jmp
mov
lret
aam
mov
cmp
and
scas
ds
xchg
xor
push
add
sbb
mov
int
aam
pusha
test
fisttps
or
mov
shlb
mov
popf
movsb
mov
mov
gs
cmpb
shll
sbb
insb
test
pop
jns
imul
int3
or
stc
sub
cmp
or
sbb
insb
test
pop
jns
imul
int3
or
stc
sub
je
je
sbb
insb
test
pop
jns
imul
in
cmp
int
fnstsw
or
sbb
sbb
or
xchg
push
repz
dec
mov
and
fidivl
lret
test
mov
stos
dec
adc
dec
cmp
push
sbb
js
push
lret
test
fcomps
call
dec
push
jp
push
jbe
or
push
lret
outsb
ljmp
adc
pop
or
js
adc
andps
pop
fldcw
fucomip
push
mov
jmp
sub
mov
sbb
mov
inc
andb
psrlq
cmc
mov
outsl
ret
push
fstpl
fld
stc
cmp
jnp
ficompl
in
push
xchg
mov
lcall
test
cmpsl
pextrw
or
lahf
lock
mov
stc
shr
push
or
xlat
mov
sbb
insl
xor
lcall
dec
add
pop
push
movl
sbb
inc
inc
ljmp
jge
adc
loopne
lock
subb
fstpl
dec
pop
cmp
fimull
ljmp
push
stos
ljmp
push
sbb
js
or
ljmp
ljmp
mov
jns
dec
dec
push
pop
outsl
or
das
fs
mov
arpl
mov
test
into
and
dec
xor
inc
movntps
or
sahf
mov
popf
mov
mov
mov
or
jp
push
sbb
js
push
lret
test
fcomps
call
dec
cmp
push
sbb
js
push
mov
xchg
out
cmpsl
gs
xor
mov
bswap
fisttpl
sbb
and
in
out
imulb
mov
mov
pop
es
fildl
mov
scas
aam
and
leave
popa
jo
sub
cld
inc
sub
xchg
jne
mov
shld
roll
in
inc
adc
bound
stos
in
stos
pop
aam
popf
adc
sub
adc
pusha
jbe
pusha
jle
xchg
lea
mov
daa
not
sub
mov
mov
test
mov
je
inc
mov
leave
push
js
test
pop
pushf
repz
stos
xor
loop
and
vmovhpd
mov
fistps
cmp
in
adc
mov
leave
jne
inc
jg
ret
js
inc
adc
jecxz
jae
in
scas
mov
ss
lock
loop
sti
mov
shrl
bound
cltd
lret
push
sub
scas
cmpb
mov
testb
push
cmp
mov
stos
pop
ss
xchg
es
push
jo
dec
jp
inc
and
jne
cld
and
cltd
mov
jbe
fimuls
movsb
pop
add
int
daa
mov
out
rcrl
cld
loop
jbe
cmc
stc
sub
scas
adc
in
and
cld
jmp
and
jb
hlt
mov
xor
inc
mov
jl
mov
fidivrl
mov
and
xchg
test
loope
out
fcompl
jecxz
inc
mov
cmp
add
fidivrl
cld
jp
mov
add
mov
push
xchg
pushf
push
jns
ss
hlt
das
popa
es
divl
sbb
jbe
mov
adc
imul
and
pop
dec
popf
mov
loope
arpl
cmpl
outsl
leave
dec
sub
dec
aaa
mov
mov
sub
and
out
ja
mov
xchg
into
xor
xchg
in
mov
or
or
cmp
data16
je
xchg
mov
cli
imul
repnz
xor
mov
jge
lret
sub
enter
movsb
mov
xchg
add
xor
sbb
not
fcmove
iret
or
ljmp
cmp
jbe
mov
iret
push
insl
inc
jno
in
or
pushf
sbb
push
push
mov
test
outsl
jae
enter
cld
sar
and
push
cli
xor
mov
int
dec
leave
fistl
es
lock
ja
cmp
xchg
ss
clc
dec
hlt
iret
jecxz
scas
add
nop
add
mov
mov
std
push
dec
mov
pop
mov
or
stos
cmp
and
dec
mov
into
and
stos
pop
mov
fstl
iret
out
sub
xor
jbe
lock
cmp
add
icebp
adc
js
dec
mov
rorb
call
inc
xchg
push
mov
inc
xchg
stos
and
adc
xor
pop
xchg
jmp
inc
or
jbe
xor
mov
negl
xchg
jl
mov
push
mov
cwtl
aad
push
push
out
mov
mov
push
cmp
int3
sub
mov
cmp
mov
cld
mov
leave
insl
out
aad
push
add
cmp
dec
mov
xchg
push
out
pop
mov
xchg
out
int
sub
jno
sub
int
cmp
add
and
cmc
sbbl
add
pop
loopne
sbb
xor
repz
mov
pop
mov
mov
cli
jb
cmc
mov
rcl
cs
ror
aaa
xor
loop
clc
mov
shr
mov
xor
jg
jae
sarb
cli
cmpsl
fisubs
sub
dec
jns
pop
mov
and
into
jmp
push
pushf
push
mov
xor
inc
addr16
stc
inc
dec
sahf
arpl
fs
mov
mov
les
sbb
xor
sub
movsl
sahf
scas
inc
or
add
aad
out
push
clc
and
pop
fimull
fstpl
jae
lds
insl
leave
loope
jnp
daa
jae
xchg
sub
xchg
ret
lret
mov
cmc
and
mov
add
inc
fldenv
or
fidivs
js
subl
ja
mov
adc
sub
mov
mov
mov
ljmp
pop
clc
pop
out
rolb
sub
out
hlt
xor
stos
cmp
push
or
pop
cli
bound
push
or
cli
mov
mov
jp
jecxz
mov
or
mov
xchg
imull
push
mov
add
xor
mov
cltd
xor
test
dec
call
lods
das
mov
jmp
std
ljmp
mov
cmc
or
mov
push
aas
sahf
push
stc
aas
push
clc
clc
out
call
pop
jb
leave
adc
mov
fcmovu
bound
cmp
lret
ljmp
fstpl
outsl
daa
sub
nop
push
pop
iret
lods
xchg
fmuls
orb
mov
mov
dec
inc
mov
pop
cmpsb
lds
inc
add
cmpb
pop
int3
mov
xor
dec
sbbl
jne
or
cwtl
out
fdivp
push
adc
push
and
xor
adc
ud2
xor
daa
nop
dec
push
out
push
lret
and
lret
xchg
int
mov
clc
roll
adc
and
shll
push
xchg
add
test
das
enter
mov
jb
mov
pop
xor
lret
push
mov
mov
jno
nop
sbb
cmc
outsl
dec
out
aam
lcall
add
and
imul
fisttps
or
call
jne
xlat
mov
and
cmpl
mov
jl
inc
sbb
cmpsl
and
lcall
mov
popf
sub
insb
lret
push
data16
sbb
das
inc
mov
mov
iret
insb
clc
lcall
sub
adc
bound
movsl
mov
ret
aam
mov
cmp
jmp
shll
insl
imul
mov
jb
repnz
mov
inc
jmp
xlat
test
jae
adcb
jns
mov
das
sahf
dec
rcll
fninit
or
xchg
push
push
fisubrs
out
outsl
fcoms
push
or
add
movsl
rorb
sub
sbb
inc
adc
inc
add
push
sbb
push
dec
fildl
xor
filds
hlt
dec
adc
sub
mov
sub
cmc
push
pop
push
mov
mov
es
fisubs
jl
lds
xchg
inc
data16
pop
idiv
in
xchg
xor
ss
mov
jae
xchg
mov
es
mov
cmp
lret
jo
shlb
and
sarl
jecxz
inc
dec
int
decb
mov
mov
lock
outsb
lods
sbb
mov
jg
push
xor
js
mov
out
popa
nop
fcomi
or
and
fildll
mov
jb
adc
jno
movsl
stos
fildll
push
push
push
mov
popa
rcrb
aaa
aas
lret
rorb
cmp
jnp
mov
mov
sbb
shll
xchg
cmp
popa
pop
notb
shlb
adc
cs
push
rorl
std
in
push
test
fcoms
mov
data16
adc
fisubrs
stos
mov
lods
int3
and
lcall
leave
xor
ud0
mov
cmc
imul
or
xchg
dec
mov
jns
pop
mov
adc
addr16
andw
loop
lahf
in
sbb
mov
nop
cmpl
movsl
sbb
test
loopne
xor
xchg
xchg
out
daa
mov
mov
push
mov
xor
mov
sub
rorb
scas
mov
in
icebp
inc
enter
mov
jmp
push
mov
jbe
aam
jo
movsb
mov
xchg
dec
mov
insl
in
repz
nop
movsb
test
dec
pop
arpl
sbbl
frndint
fnstsw
insb
mov
sbb
sarb
cltd
daa
bound
xchg
div
inc
arpl
ret
xchg
mov
loop
imul
push
or
adcb
push
or
mov
addr16
sub
lock
addl
cwtl
add
sub
push
stos
pushf
mov
cs
imul
push
adc
movsl
insb
sbb
loopne
dec
cmp
lret
leave
popa
mov
std
iret
fisttps
fwait
xchg
imul
mov
and
std
mov
cld
mov
ret
outsb
jo
jecxz
add
fistl
mov
negl
or
fs
aaa
mov
nop
les
mov
sub
into
jns
push
fsubs
bound
scas
ret
stc
aaa
fdivs
and
jl
pop
test
jnp
outsb
outsb
notb
int
subl
cli
add
lahf
int
pushw
adc
dec
push
mov
je
std
sbb
xlat
jg
fwait
jmp
stc
push
cmp
xchg
jg
mov
jmp
iret
or
xor
leave
loope
call
in
leave
scas
or
pop
shll
cmpb
mov
cmp
int
push
sbb
jnp
repz
stc
dec
jle
fsts
ret
js
or
jns
xchg
mov
xor
mov
jb
out
ja
mov
sub
or
push
cmp
insl
xchg
sub
lahf
les
pop
jge
xor
fnsave
mov
mov
dec
or
mov
mov
sbb
add
ja
cltd
hlt
dec
fbstp
outsl
mov
inc
jno
lods
push
les
push
decl
gs
iret
mov
addr16
sbb
push
mov
cld
inc
popa
mov
mov
pusha
in
mov
lahf
stc
adc
mov
sub
xchg
lods
add
jnp
push
jge
test
cmpsb
push
or
repnz
out
pop
adc
aad
mov
ud0
popa
xchg
movsl
mov
mov
and
decl
push
lock
pop
mov
in
addr16
inc
mov
push
or
mov
push
cld
adc
dec
dec
xor
in
movsb
pop
rolb
test
int
jae
in
arpl
mov
jbe
lock
lahf
xor
mov
les
pop
js
rorl
sub
in
js
dec
aaa
pop
sub
mov
xchg
xor
movb
mov
mov
add
xchg
or
idiv
add
jge
fimuls
imul
pop
add
shlb
jle
ss
xchg
or
stos
dec
test
test
dec
sti
je
xchg
jne
inc
fstpt
inc
mov
xchg
jmp
inc
shl
sbb
insb
rolb
test
inc
mov
aam
leave
jg
imul
test
push
int3
lahf
outsb
rcrl
and
loopne
sti
mov
cmp
cltd
mov
sbb
mov
pmulhw
xor
bound
rcll
imul
cmpsl
inc
movsb
lea
dec
adc
incl
pop
add
mov
and
ja
pusha
divl
movsb
outsb
in
add
leave
sbb
popf
mov
add
xorps
push
aaa
dec
hlt
jb
cmp
or
dec
adc
loope
jno
push
cmpsl
or
mov
out
lar
xchg
dec
push
jnp
adc
jge
cli
mov
inc
cltd
cs
xchg
add
mov
mov
data16
mov
into
movb
sbb
ds
xor
mov
jbe
insl
inc
std
xor
inc
pop
add
xchg
not
jmp
ficompl
xlat
clc
dec
loop
shlb
jle
out
cltd
stos
rep
mov
cmc
das
pop
cmovno
clc
add
cmp
or
cld
in
jo
lea
repz
sub
xchg
out
xchg
push
js
xchg
xchg
xchg
add
inc
out
cmpsb
test
lods
sub
pop
cmpsl
sti
add
loope
in
jne
pusha
push
addb
stc
mov
test
push
jecxz
repnz
lods
push
fcomi
scas
or
jo
ret
test
cmp
adc
xchg
scas
add
xor
push
in
imul
outsb
xlat
mov
or
outsl
inc
jns
inc
lods
leave
out
fcompl
leave
fldenv
add
xchg
push
cmp
xor
repnz
and
or
mov
shlb
ja
jns
movsb
cmp
inc
xchg
pushf
lcall
jae
mov
pop
mov
andl
dec
cld
cmp
xor
nop
add
mov
cmp
cmp
pop
movsb
into
iret
fldlg2
fldt
rorl
insb
cmp
jne
xchg
stos
lea
mov
and
out
jg
adc
inc
mov
xor
callw
daa
ja
rcl
andl
xchg
push
or
inc
add
stos
ja
aas
cmp
js
jecxz
insl
mov
mov
stc
movsl
jmp
test
fldt
mov
and
cli
push
push
mov
fstl
adc
pop
sbb
and
into
movsb
mov
int
xor
clc
add
ficomps
popf
mov
pop
xchg
add
bound
jle
xchg
xlat
les
outsb
mov
mov
push
fiadds
add
out
pop
sub
jnp
push
and
movsl
fs
cmpsb
movsl
sbbb
jns
and
or
ja
bound
xchg
call
movsl
and
jecxz
or
mov
mov
mov
enter
inc
insl
jle
gs
xchg
mov
jp
repnz
aam
aad
or
push
jge
xlat
mov
stos
inc
jp
push
sbbb
test
pop
int3
jl
sbb
int
sub
xor
es
sbb
jnp
sbb
lret
mov
shr
mov
leave
sub
int
pop
aas
mov
rcrb
jb
lock
xchg
mov
sbb
shr
jge
sub
fstl
lret
push
pop
mov
or
in
outsb
mov
mov
sti
and
idivl
dec
sbb
jnp
scas
xchg
loopne
mov
inc
scas
xchg
shlb
andl
jl
xlat
fidivs
cmp
adc
adc
call
and
cmp
or
cmp
add
sbb
das
cmp
fiaddl
mov
pusha
call
shr
lods
push
fisubrs
in
fmuls
pop
or
xor
test
hlt
pop
jbe
out
into
decl
les
cmp
out
aad
adc
pop
jl
bound
jl
lahf
std
pmulhuw
jecxz
adc
in
aad
sbb
push
cmp
out
cld
bound
iret
xor
push
sub
xor
shrl
jle
mov
repnz
fstps
dec
stc
in
mov
xchg
sar
fcomps
cmp
inc
repnz
push
pop
fstpt
test
shlb
jle
mov
andb
cmpl
dec
stos
mov
pushf
popa
cmpsb
ss
ss
cmovp
ret
les
push
mov
lds
inc
leave
cwtl
xchg
daa
lods
int3
push
gs
fsubs
push
adc
mov
movsb
or
xchg
xchg
stos
jmp
ja
ljmp
and
ss
or
iret
inc
cmc
mov
das
add
xor
sbb
push
cltd
sti
imul
test
cmpb
rorb
add
shll
dec
scas
mov
loop
in
mov
inc
stos
sub
mov
jmp
jle
jmp
and
int
js
test
mov
imul
subl
add
jg
mov
add
mov
pop
xchg
xlat
gs
dec
cmp
sbb
dec
jmp
movsb
push
push
fisubs
mov
dec
stc
out
rorb
xchg
mov
subl
aaa
sbb
mov
inc
into
test
sarl
test
out
test
ja
xchg
lds
inc
fimuls
das
cmpl
add
out
add
mov
fwait
pop
mov
cmp
inc
add
lahf
aas
in
jno
jns
out
mov
popf
cli
stc
pop
jbe
rolb
into
ret
stos
fistpll
test
sbb
jmp
int3
add
and
cmp
inc
cmp
xchg
rcll
jo
ret
jnp
adc
shll
push
inc
loope
jnp
test
scas
lea
sti
les
fistpl
cmpl
inc
shlb
or
incb
adc
out
push
sbb
mov
lds
mov
cltd
push
mov
sbb
div
sbb
xchg
stos
in
push
jg
jge
or
lods
sbb
or
inc
fwait
adc
fs
rcrb
or
sub
fists
xor
insb
jmp
outsb
inc
ds
mov
sbb
xchg
push
dec
js
mov
movsl
mov
stos
fstpl
pop
mov
repz
scas
adc
in
popf
sbb
mov
jmp
mov
cli
jle
mov
out
inc
rorb
stos
xchg
dec
rolb
sbb
dec
cmp
xchg
or
mov
sbb
mov
aas
sub
push
iret
lcall
pop
bound
jecxz,pn
in
dec
jo
pop
jae
leave
clc
cmp
aaa
ret
fbstp
jnp
jecxz
jo
dec
imul
divb
jmp
loope
mov
mov
adc
lahf
bound
jp
cltd
inc
shrl
rep
ja
std
pop
rcr
leave
mov
cli
jp
or
push
sub
test
jmp
sti
xor
mov
jl
scas
cwtl
mov
repz
cli
aam
andb
and
dec
mov
mov
shrl
inc
imul
xchg
mov
andb
dec
int
fwait
push
inc
cmp
cmp
popa
popf
cltd
jne
daa
sub
jae
adc
inc
jb
cmpsb
stc
jne
xor
cmp
sbb
xor
adc
in
cmp
dec
push
mov
mov
mov
push
outsb
mov
and
icebp
cltd
mov
dec
cmp
add
flds
test
xchg
jbe
jp
pop
ret
mov
jo
push
xabort
aaa
pop
test
out
xchg
out
arpl
sub
push
xor
imul
inc
lods
fwait
cwtl
insl
sahf
xor
mov
rclb
stos
and
xchg
icebp
mov
insb
loop
shll
ficoml
adc
cwtl
xchg
movsb
out
mov
and
fwait
lret
jg
ja
rorl
lods
pop
js
es
movsl
jp
insl
mov
js
orl
rcr
pop
pusha
repz
aad
call
inc
jmp
cmpb
jnp
add
mov
lea
lret
push
fisttpll
fmul
in
je
cmp
aaa
dec
sahf
in
ja
push
jne
fildl
cld
sti
shll
jmp
ss
xor
add
sbb
add
mov
add
mov
mov
int
and
outsl
sbb
aaa
repnz
sbb
jp
loop
xor
in
ja
iret
inc
scas
sbb
sub
js
out
cmpsl
leave
insb
inc
or
xchg
loope
outsl
adc
xlat
data16
mov
dec
jno
xchg
repnz
xchg
mov
and
add
dec
mov
out
out
jl
clc
jle
shl
sbbl
shr
or
test
xchg
fidivs
push
cmp
mov
call
js
rorl
mov
je
and
insl
stos
cmpsl
mov
cmp
seto
call
call
pop
jo
fisubl
xor
xor
jge
cmpsl
pop
mov
mov
xlat
or
int
xlat
rclb
adc
pop
cli
loope
lret
incl
ret
scas
cmp
dec
sub
pop
incl
icebp
adc
sbb
outsl
fs
inc
or
mov
push
shrl
adc
scas
stos
mov
or
push
pop
ret
fcoml
jbe
xor
jb
dec
ds
cmpsb
lds
ret
insl
push
clc
decb
push
fldenv
inc
mov
push
scas
popa
out
add
leave
in
push
cltd
or
cmp
push
and
sti
jae
pop
mov
ljmp
call
dec
cmp
push
sbb
js
push
lret
test
fcomps
call
dec
cmp
push
sbb
js
push
lret
test
fstps
jmp
dec
xor
push
sbb
jl
pop
sub
cli
sub
lcall
sbb
loopne
jp
sbb
xchg
xchg
aad
clc
inc
lcall
outsb
shll
xor
add
pop
add
add
add
add
add
jno
adc
inc
add
add
add
add
add
add
add
dec
add
add
add
stos
add
add
add
or
adc
fiaddl
sbb
sub
add
add
add
inc
add
add
add
cmpsb
add
add
sub
push
sti
add
add
sti
add
add
inc
add
add
add
add
add
dec
add
add
add
add
pusha
add
add
push
mov
add
xchg
pop
add
add
add
add
sub
add
add
add
add
add
add
adc
cmp
mov
add
adc
add
or
xor
insb
add
push
add
add
add
add
add
or
cmp
cli
add
add
add
cltd
add
add
add
dec
add
add
add
add
add
add
add
or
stos
add
push
add
add
adc
add
fiaddl
push
add
cli
add
add
dec
add
adc
imul
cltd
add
add
sbb
add
add
add
pusha
add
cmpsl
add
push
add
add
add
int3
add
sbb
jb
or
push
add
sub
cmp
dec
add
add
cmp
test
and
fiaddl
mov
fwait
or
add
ret
add
add
inc
add
cmpsl
add
add
add
add
add
add
push
sbb
or
sbb
cmp
mov
testb
add
aaa
add
sub
jge
pop
add
dec
add
dec
add
add
add
daa
add
add
add
add
add
adc
in
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
mov
jmp
jb
and
sub
pop
add
add
mov
add
add
add
push
xor
xor
jnp
mov
push
add
add
mov
aaa
add
add
add
add
add
adc
cld
add
add
add
add
mov
add
imul
into
add
lret
add
add
add
add
add
mov
movsl
add
mov
add
add
xchg
add
dec
add
add
push
add
add
add
add
add
add
add
movsb
add
sub
jns
mov
xchg
add
popl
xchg
push
sti
add
pop
add
mov
add
sbb
add
add
add
add
add
add
add
scas
add
add
and
mov
cmpsl
add
add
add
mov
cmpsl
add
add
add
add
inc
add
add
add
push
add
add
leave
add
add
add
xchg
add
add
sbb
aaa
add
add
add
add
add
add
adc
add
add
add
int
test
in
lods
xor
cmp
or
mov
fstps
je
imul
xchg
test
fidivl
cmp
push
sub
pop
inc
ljmp
shll
out
aaa
popa
jp
scas
xchg
mov
insb
adcb
and
cmc
sub
or
jbe
xchg
pushl
pop
jmp
loop
jmp
lods
ret
jb
pushf
xchg
dec
stos
xchg
test
insl
pop
pop
and
jne
mov
and
test
mov
sbb
mov
xor
es
ret
jecxz
lea
insl
out
or
mov
leave
mov
push
push
insb
call
addr16
mov
rcll
and
in
push
cmp
jae
loop
lock
sti
sbb
mov
pop
testl
aaa
adc
in
movsl
push
adc
or
fidivs
je
dec
cli
inc
xor
xor
repz
push
aaa
jl
sub
mov
sbb
mov
cmp
mov
stos
fs
adc
push
test
loopne
and
cmp
jge
es
notl
test
lcall
cld
xchg
mov
fdivrp
arpl
je
aaa
ret
lcall
sbb
mov
fidivrl
pop
push
and
addr16
addr16
decb
adc
sbb
push
ror
push
push
iret
pop
xor
imul
adc
mov
cld
mov
sub
push
call
es
cld
pusha
sub
repz
and
popf
xlat
repnz
inc
xchg
push
pusha
aas
cmc
mov
into
outsb
lahf
pop
or
es
repnz
mov
add
clc
xchg
fs
xchg
es
imul
xor
mov
fdivs
sub
lds
xor
ljmp
ret
pop
les
sahf
inc
or
in
in
mov
cs
jle
cltd
out
out
dec
or
dec
lcall
jo
out
fidivrs
in
or
testl
and
jo
sub
push
ja
pop
push
rorl
mov
lret
test
std
daa
pop
das
cld
xor
fldl
or
stos
in
adc
outsb
jl
enter
mov
inc
jmp
pushf
pop
jno
xor
sbb
push
stc
ljmp
add
dec
and
jns
scas
push
mov
and
fldt
movsl
push
mov
adc
inc
and
dec
notb
cwtl
cmp
inc
and
jl
out
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
