call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
xor
xor
push
jle
and
loope
jecxz
xchg
roll
add
inc
and
popa
inc
adc
arpl
jae
adc
shll
rclb
mov
mov
and
js
or
arpl
jae
xorl
sti
roll
out
mov
push
jb
and
add
mov
mov
mov
jp
mov
out
or
add
stc
into
popf
inc
lcall
aas
push
push
sub
dec
loope
adc
aam
mov
in
cld
scas
jns
dec
jp,pn
push
inc
addl
cmp
dec
ss
andl
xor
loopne
xor
sub
lods
sarl
jae
jae
push
ds
adc
ret
sbb
js
push
imul
std
lahf
popa
clc
and
mov
loope
stc
push
or
mov
pop
aas
pop
jmp
sbb
stos
push
or
rcl
aad
in
icebp
daa
ret
and
icebp
mov
push
adc
popa
xor
adc
arpl
jae
or
fldenv
mov
xchg
jecxz
repz
jo
gs
pusha
es
cmp
or
testl
testb
mov
int3
jne
addr16
inc
add
bound
xor
push
ss
icebp
test
mov
xor
mov
mov
cltd
les
and
adc
push
jge
add
jae
adc
shll
roll
add
inc
and
popa
inc
adc
arpl
jae
adc
shll
roll
add
mov
sub
xor
inc
stos
pushf
jnp
in
ljmp
insb
mov
loop
aad
clc
test
jb
dec
mov
shll
outsb
sbb
jb
jg
cli
sub
mov
mov
rcl
lock
push
ljmp
divl
lods
negb
and
inc
sbb
sbb
inc
sbb
rcrb
lcall
xchg
andl
push
mov
sub
dec
bound
scas
pushl
push
sbb
xchg
repz
lods
lcall
lcall
xor
sub
inc
das
pop
cltd
pop
fwait
xchg
fwait
mov
mov
test
adc
lahf
and
push
test
ret
xor
pop
aam
outsl
xor
cs
push
mov
mov
scas
addl
push
mov
cmp
outsb
xchg
jge
xchg
sbb
pop
sub
sti
shl
movsb
xor
xor
mov
sub
loopne
pop
jnp
pop
jae
cltd
pushf
xor
or
jns
mov
adcl
lcall
push
shlb
js
sbb
out
mov
ja
jns
xchg
stos
pop
sub
inc
mov
das
addr16
aam
mov
dec
aas
stos
cmp
xchg
fidivl
addb
das
insl
hlt
addl
popf
test
orl
insb
xor
xchg
add
imul
pop
mov
lock
jne
sbb
rcll
test
out
inc
xchg
bound
pop
mov
loopne
pop
mov
fdivrs
negl
dec
mov
or
and
pop
cs
jp
push
mov
es
pop
in
int3
adc
lcall
cmp
fiaddl
les
test
int
push
cmc
jle
and
outsl
mov
sub
repz
dec
sbb
add
pop
or
jl
mov
or
arpl
out
dec
jle
push
xor
cli
and
lret
cld
incl
pop
dec
xor
xor
outsb
imul
add
pop
add
int3
push
mov
sub
sbb
outsb
lret
push
pop
sbb
jle
fsubrl
pop
inc
xchg
mov
lods
enter
mov
es
push
cmp
aas
mov
inc
sub
push
xchg
inc
outsl
dec
cmp
jge
js
lcall
jl
dec
mov
filds
fldcw
ret
or
arpl
div
jno
and
jp
push
nop
insb
push
ret
test
cmp
push
shll
mov
and
xlat
xchg
dec
out
inc
insl
mov
mov
xchg
dec
stos
lds
movb
in
and
addl
add
xor
sub
xchg
mov
inc
add
jno
pop
dec
popl
outsl
inc
mov
xchg
adc
jb
int
xlat
inc
pop
jp
inc
mov
lock
cmpsb
std
pop
rorl
push
mov
jne
lds
push
xor
test
sub
scas
popf
mov
clc
icebp
add
mov
int
call
mov
sub
cmpsl
or
out
mov
jg
and
inc
and
mov
test
out
sbb
cwtl
sbb
mov
shr
mov
adc
mov
loopne
mov
lds
stc
hlt
sarb
pushf
test
dec
jmp
aam
and
mov
xlat
icebp
and
cmp
cmp
andb
in
std
jmp
shl
adc
les
jo
ss
dec
test
sub
cmc
adc
dec
aad
in
cld
mov
dec
pop
dec
sbb
scas
test
inc
push
pop
insb
jmp
mov
test
mov
aas
sub
add
inc
lret
movsb
cmp
xor
add
or
notb
das
sbb
popa
mov
popa
lcall
test
in
insl
cltd
rorb
push
adc
mov
push
xchg
sub
and
mov
jb
pop
fwait
outsl
push
inc
and
addr16
jl
cmovl
xlat
jle
xchg
cld
fsubrl
mov
mov
addr16
cmc
cwtl
adc
push
jb
xor
jno
sub
add
sbb
xor
push
out
xchg
test
mov
loop
stc
push
or
sbb
cmpsb
popf
jmp
dec
call
mov
int
sbb
inc
mov
insl
pop
movsl
cmove
outsb
pop
xor
xor
js
int
fmuls
loopne
cmp
jns
xor
or
stos
mov
mov
push
sub
gs
lcall
roll
xchg
mov
leave
xchg
neg
idivb
inc
push
and
jecxz
xchg
or
xor
ret
shrl
in
dec
iret
imul
aad
dec
push
insl
inc
add
push
mov
lret
ffreep
jecxz
cld
dec
jge
or
stos
out
xchg
aaa
xor
leave
push
fst
sbb
cmp
pop
inc
test
add
push
aad
pop
shl
inc
inc
mov
sarb
add
mov
scas
in
xchg
mov
sub
arpl
pop
dec
jmp
into
pop
ss
jmp
repz
jge
xchg
xor
add
xor
pop
outsl
scas
les
jno
or
xchg
sub
xchg
and
inc
inc
xchg
cmc
iret
scas
mov
rol
pushf
aam
mov
adc
jb
pusha
add
in
ja
sbb
pop
rclb
adc
add
out
mov
ja
pushf
fadds
pop
jp
ds
mov
jns
hlt
aam
sahf
adc
xor
shrl
sub
or
mov
push
out
dec
les
out
daa
xchg
pop
or
repz
loop
ljmp
lcall
imul
xchg
mov
mov
adc
aam
inc
data16
ja
push
fwait
out
repz
add
adc
dec
or
inc
cmp
nop
fstpt
sahf
leave
jo
cmp
push
ljmp
sbb
lock
sbb
push
pop
dec
xchg
xor
movl
int
test
or
push
cmp
cli
push
psrlq
xchg
shl
out
push
clc
das
push
outsl
mov
cmp
popa
jne
pop
aad
add
push
sub
mov
and
cmc
inc
iret
mov
fbld
fisubs
sub
inc
push
xchg
imul
adc
fiadds
jne
ss
mov
xchg
loopne
or
imul
dec
xor
add
push
xor
sbb
fdivs
fsubrl
push
or
jle
stos
sbb
cmc
bound
mov
mov
loopne
lret
mov
jb
pusha
cld
and
cmpsb
sbb
fwait
nop
test
out
xchg
shr
pop
int3
mov
repz
inc
fildl
notb
mov
ret
xor
js
sub
mov
popf
inc
mov
sub
pop
and
mov
cld
pop
push
and
imul
add
xchg
mov
div
pusha
insl
jno
scas
hlt
adc
jae
cld
aas
mov
pop
sarl
loope
imul
scas
cwtl
push
cld
ficomps
mov
out
lock
xor
test
inc
jecxz
and
jae
xchg
ficoms
cmp
cmpsb
fs
repnz
shlb
rcll
das
add
inc
outsl
call
xchg
lahf
jle
cmp
adc
adc
mov
xor
loop
leave
push
arpl
inc
inc
ret
stos
lock
push
dec
pop
popa
pop
stos
rcrl
gs
loope
movsb
cmp
or
imulb
fiaddl
and
mov
push
dec
inc
lea
or
sbbb
pop
pop
outsl
mov
jmp
push
and
mov
repnz
std
dec
mov
xlat
cmpb
sbb
xor
fisttps
and
sbb
pop
push
pop
sub
repnz
lods
mov
dec
sarb
sub
test
int
pusha
push
cwtl
mov
popf
jne
pop
ja
mov
cmp
js
cmp
mov
sbb
fists
pop
sbb
dec
loopne
mov
xchg
inc
pop
fimuls
rorl
enter
test
out
rol
push
sbb
cltd
test
cmp
sbb
dec
cmp
in
mov
lds
hlt
subl
inc
mov
cld
aad
mov
divl
outsb
xchg
test
adc
lret
push
clc
arpl
into
enter
fwait
dec
mov
bound
rcll
cld
mov
cmp
addr16
sbb
lret
cmpb
ds
pop
adc
mov
mov
pop
sbb
mov
mov
icebp
dec
sub
push
inc
push
mov
jp
leave
mov
repz
orl
sarb
mov
scas
sbb
mov
cmp
add
imul
leave
loopne
jbe
mov
xchg
adc
pop
push
xor
es
scas
mov
scas
push
call
lcall
add
mov
imul
test
sub
in
inc
cmpl
sbb
sbb
dec
xor
mov
lcall
les
imul
stos
fs
hlt
inc
sbb
fcmovne
mov
lds
mov
mov
aam
adcb
mov
sub
adc
mov
ffree
cmp
mov
dec
cmpsb
aad
gs
inc
dec
or
xchg
inc
cmp
mov
sub
xchg
push
or
or
aas
hlt
push
jge
or
jmp
mov
inc
cmp
fwait
adc
test
pop
das
pop
push
mov
add
sti
sub
lahf
fwait
mov
sub
faddl
push
cmp
ja
ljmp
stc
je
xchg
adc
pop
sbb
in
outsl
push
scas
dec
movsb
adc
movsb
dec
cmpsb
or
mov
jbe
addb
inc
clc
pop
loopne
jecxz
test
cld
mov
vfrczsd
cmp
adc
aaa
in
cwtl
dec
aas
aam
mov
das
shrb
into
adc
mov
push
popa
sub
xlat
in
sbb
xor
push
aam
and
pop
sbb
cli
and
iret
jmp
and
mov
push
call
add
mov
mov
fldln2
push
stc
jg
mov
cld
subb
add
ret
outsb
cwtl
and
push
inc
xor
lods
std
movsb
aad
mov
out
jmp
jnp
ret
jno
mov
pop
shll
pop
test
pop
aam
pop
sub
inc
iret
sarb
mov
adcb
pop
cmpsl
std
add
nop
xor
mov
imul
pop
mov
cwtl
adc
xlat
cmp
xchg
xchg
sub
std
push
pop
and
inc
popa
inc
push
mov
push
ljmp
insl
in
inc
inc
mov
and
scas
mov
sub
loopne
cmpsb
cmpsb
or
rcrl
pop
or
lods
mov
inc
repz
lret
lods
int
mov
pop
sub
add
stos
dec
mov
loope
leave
mov
mov
adc
jp
sub
pop
pop
lahf
jnp
xchg
xor
cmpsl
pop
mov
sbb
mov
and
dec
or
push
test
dec
add
mov
rcr
nop
fnstcw
dec
pop
and
cmp
popa
inc
cmc
ret
in
and
jne
neg
fistpll
jp
mov
rcrl
inc
push
jecxz
nop
cmp
pop
cwtl
rcl
and
into
add
out
rcrl
insb
dec
pop
ret
pop
lahf
das
sbb
sub
cmc
pop
adc
loop
jns
scas
out
dec
lret
and
and
xchg
push
scas
lea
lahf
rorl
loope
test
jb
dec
cmp
fs
jnp
fs
hlt
aad
jle
test
stc
cwtl
out
push
fisttps
leave
test
loope
bnd
icebp
mov
bound
stos
das
sub
mov
add
jne
mov
xor
leave
jb
inc
jnp
jne
mov
add
sub
cmp
and
cmp
and
ffree
sbb
push
jbe
jmp
leave
adc
test
dec
fwait
push
pop
dec
imul
clc
or
popf
les
jne
xlat
push
or
jno
jnp
insl
xchg
mov
mov
loope
or
pusha
es
insb
and
push
iret
add
push
sub
loope
inc
sbb
jecxz
gs
les
xchg
pop
aaa
ds
xor
call
add
jae
jge
sbb
daa
push
rorl
jge
cmp
cwtl
sbb
mov
inc
cmp
mov
fiadds
inc
jns
push
call
xor
add
pop
sub
jmp
out
mov
sub
int3
add
and
out
adc
push
sub
pushw
cmc
cmp
jbe
mov
push
xlat
test
push
cs
jecxz
dec
and
das
sub
push
inc
cmp
sti
push
mov
mov
cltd
jge
nop
sbbl
mov
dec
jmp
push
aaa
ljmp
jecxz
mov
stos
mov
rolb
dec
rcrb
test
push
lock
xchg
inc
xchg
jae
fbld
pushf
cld
jg
pop
inc
and
je
push
leave
cmc
into
sahf
and
stos
imul
cmp
dec
lods
jo
push
cmpsb
cmp
sbb
dec
sti
roll
xchg
sbb
pop
bound
or
add
lahf
enter
jge
jmp
sbb
push
mov
mov
dec
mov
lcall
sbb
and
mov
fbld
cmovb
lret
test
cltd
ds
sub
push
pop
ret
push
test
xchg
test
xor
mov
inc
pop
mov
pusha
add
cwtl
filds
and
jne
repz
fstpl
dec
rcr
iret
loop
sub
adc
lret
std
test
jb
fst
push
pop
adc
dec
mov
inc
add
pop
js
push
idivb
js
test
ljmp
lcall
repz
sub
jnp
mov
cmpsl
loop
aam
lds
cmp
and
xchg
jecxz
push
lret
xchg
lret
clc
fnsave
cmp
lahf
test
das
cltd
int
sbbb
dec
or
testb
repz
inc
scas
faddp
lods
imull
push
in
or
or
dec
fstp
or
stos
push
addr16
sbb
inc
loopne
stos
fwait
jno
xor
scas
test
insl
aaa
sub
daa
jecxz
mov
out
pop
xor
popf
insl
mov
inc
push
push
adc
jg
xchg
arpl
pop
je
xchg
jae
rcrl
jp
fmuls
jmp
ss
hlt
pop
mov
lea
ljmp
lods
push
testb
inc
and
mov
pushf
movsb
or
cmp
xchg
push
pop
jmp
inc
add
xor
or
jno
add
aam
lcall
fisubrl
mov
cmp
sub
pop
mov
out
mov
repz
leave
out
hlt
adc
inc
push
movsl
jl
xor
into
out
aad
movsb
push
or
test
and
cltd
daa
lds
inc
adc
jmp
rcll
int
std
push
rorl
and
jno
jne
cmp
cmp
cmp
jo
ffreep
jo
lods
mov
inc
scas
iret
fistps
imul
cmp
sub
push
and
ror
cmpsl
add
dec
mov
push
inc
ds
cmp
cmc
xor
jp
or
movsb
sahf
pop
subl
sbb
out
std
and
xchg
mov
cmpsl
mov
aam
shlb
cltd
jl
mov
add
ficoml
fstps
sbb
lret
sbb
hlt
jnp
pop
negl
shr
sub
test
mov
mov
mov
mov
int3
outsb
bound
push
inc
cwtl
stos
inc
in
test
or
movsb
inc
dec
mov
addr16
sar
fnsave
rorb
cld
fcoml
cld
data16
loopne
inc
test
test
mov
xor
js
add
sbb
stc
mov
pop
push
pop
add
out
or
xchg
lret
aam
jbe
jb
pop
sub
out
fs
mov
mov
pushl
js
loop
dec
xlat
fisttpll
fimull
cwtl
xorl
jge
add
test
es
outsl
adc
push
movsb
repz
outsl
mov
add
and
pop
adc
dec
mov
cld
push
mov
jmp
aaa
push
xor
add
insb
inc
ss
cmp
shrb
add
pop
movsl
das
clc
loopne
jnp
cmpsb
mov
out
int
jge
mov
adc
repnz
inc
jge
jp
push
xchg
aad
data16
push
mov
test
pop
push
inc
repz
push
mov
mov
sti
mov
aam
fdivrs
in
sti
lods
fmuls
aad
jnp
fisubl
scas
dec
popf
inc
adc
inc
push
dec
jae
jbe
inc
imul
xlat
jns
jle
jb
mov
test
insb
sbb
mov
mov
dec
or
sbbl
inc
in
fmul
int3
ljmp
insb
xchg
nop
or
dec
inc
push
daa
xchg
xor
scas
and
loopne
pushf
nop
in
sub
test
mov
push
loopne
gs
cmovnp
aaa
adc
mov
add
test
movsl
cmp
int3
mov
mov
inc
sbb
add
mov
sbb
mov
shrl
aad
and
dec
pushf
push
stos
sbbl
addb
mov
js
mov
outsb
mov
push
pop
pop
xchg
stc
es
sub
pushf
and
push
pop
cmp
mov
adc
lea
loope
icebp
sub
mov
xchg
addr16
xor
in
push
in
pop
jle
inc
jo
jl
sahf
out
mov
xor
mov
hlt
inc
out
loop
clc
xlat
sbb
test
cmpsl
sub
mov
or
sub
cmp
scas
push
rorl
insl
cmp
and
inc
and
cmp
movsl
cmpsb
cmc
scas
push
add
in
enter
sbb
shlb
and
xor
insl
adc
insl
mov
fucomp
inc
test
jle
add
int
dec
xchg
jmp
jo
push
mov
and
mov
add
outsb
out
push
sub
mov
pop
lock
or
je
sti
loopne
nop
orl
jo
fwait
cmp
or
sbb
pop
js
loopne
inc
into
in
mov
or
or
addb
mov
mov
loop
mov
imul
cmpsl
insb
sbb
ret
test
pop
mov
sarl
mov
int3
mov
dec
inc
test
repz
aad
and
jle
std
inc
rcll
inc
loop
call
jne
shlb
sub
push
lock
jne
pushf
pop
test
fnstcw
adc
int
gs
outsb
shll
andb
jno
mov
movsb
je
lods
in
in
bound
dec
ficomps
shrb
or
lods
sbb
xchg
push
fiadds
add
repz
and
jp
scas
push
jne
adc
sahf
es
loop
test
fcomi
push
mov
jl
lcall
cltd
in
or
mov
das
push
or
shl
roll
stos
dec
comiss
mov
sbb
clc
arpl
sbb
xchg
fnstenv
dec
adc
jmp
jg
popf
fwait
loopne
cmpsl
jecxz
out
cld
leave
mov
xchg
pusha
add
adc
clc
jl
fisubrs
jbe
sub
dec
jno
imul
xor
adc
int3
jb
in
push
sub
outsl
leave
nop
xchg
adc
jmp
in
add
sub
aam
in
int3
mov
jb
xor
sub
out
lcall
sbb
mov
pop
jle
arpl
int3
inc
push
imul
cmp
xlat
push
xchg
test
push
or
push
mov
popa
push
pop
push
push
xlat
ja
dec
iret
iret
push
jb
add
or
aas
mov
andps
push
push
arpl
int3
lds
dec
popa
adc
mov
xor
adcl
xchg
les
inc
jecxz
sub
push
sbb
inc
das
cmc
out
mov
ret
aaa
scas
add
cmp
push
xchg
xor
rcll
dec
repz
call
scas
push
mov
stos
scas
mov
dec
in
sbb
jo
lret
les
pop
xor
enter
xlat
dec
xor
cs
loope
xchg
sbb
xor
adc
arpl
jae
adc
shll
roll
add
inc
and
popa
inc
adc
arpl
jae
adc
shll
roll
add
inc
and
popa
inc
adc
arpl
jae
adc
shll
roll
add
inc
and
popa
inc
adc
jecxz
repz
imul
mov
mov
pop
jle
dec
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
aad
lds
popa
in
pop
int3
divl
gs
xor
inc
shll
fs
adc
mov
lds
popa
in
xchg
add
inc
push
roll
loope
icebp
aad
add
mov
rol
push
cmc
leave
in
xchg
cmp
movsl
sub
data16
mov
push
inc
aad
mov
inc
mov
and
ss
lcall
mov
and
fs
out
popf
lret
test
add
jae
in
orl
mov
int
bnd
pop
push
push
lock
xchg
mov
jne
movsl
jl
mov
and
inc
lahf
jno
leave
mov
nop
jns
fisubl
orl
dec
adc
sub
adc
and
loopne
mov
es
inc
sar
nop
gs
dec
sub
outsb
dec
push
inc
ja
cmp
int
shll
inc
orb
sbb
mov
xchg
add
mov
inc
inc
pop
jne
gs
xor
adc
pop
xchg
jne
jle
dec
cmpsl
push
push
xchg
xchg
jne
sbb
in
loopne
shlb
add
and
dec
negl
movsb
adc
ja
gs
adc
imul
rclb
pop
lds
lcall
adc
roll
loope
icebp
adc
mov
lds
popa
in
xchg
add
xor
inc
shll
gs
adc
mov
loopne
push
cwtl
xchg
pop
jg
jp
add
xchg
jecxz
and
sti
outsl
cmpsl
es
xor
push
ja
inc
mov
cmc
xor
sarl
iret
mov
cli
mov
repz
iret
and
push
ficoml
inc
jp
add
inc
jmp
xlat
mov
push
in
push
cmc
aaa
jmp
test
push
imul
xchg
sbbb
out
jmp
movsl
shr
push
roll
xor
subb
or
inc
xchg
pop
lods
loopne
push
aas
loop
js
push
arpl
pcmpgtw
cmp
mov
sub
lahf
sbb
cmpsb
stos
or
jecxz
xor
divb
push
test
push
mov
push
dec
jnp
in
enter
gs
dec
xchg
mov
inc
dec
dec
push
jo
aaa
mov
cmp
mov
inc
jnp
xor
out
mov
xchg
sub
dec
bound
pushf
inc
outsl
xor
pop
and
iret
cmp
mov
pop
mov
and
inc
inc
insb
push
mov
stos
mov
sub
mov
inc
sub
jmp
cli
out
adc
sar
pop
xchg
cltd
stos
mov
js
fs
mov
js
push
loop
jnp
movsl
sub
and
dec
sbb
push
bound
xor
leave
mov
xor
movsbl
or
jge
sbb
into
push
or
shll
sub
sub
push
sub
into
scas
pop
pop
dec
stos
mov
insb
jnp
add
pop
inc
and
in
xchg
pop
stos
and
in
int
stos
add
sysenter
xchg
mov
xor
fs
cs
out
pop
mov
rcrl
or
xor
sbb
mov
and
xchg
out
inc
xchg
jbe
and
mov
in
inc
cmp
stc
dec
iret
addr16
hlt
cmpsb
gs
and
mov
xor
leave
out
out
js
sub
repnz
iret
push
out
pop
je
gs
jo
and
in
repz
lods
jle
adc
dec
sbb
mov
sbb
imul
in
sarl
lock
adc
orb
add
cmp
dec
jl
xor
fcoms
xchg
adc
icebp
int
fsubs
fs
rcrl
cs
adc
push
adc
lea
aam
add
rcrl
pop
xchg
push
jns
cld
ljmp
int
xor
pop
loop
lods
shlb
add
lcallw
mov
in
loope
cmp
jb
inc
and
iret
mov
es
dec
mov
mov
mov
pop
test
pop
incl
push
fwait
push
jb
fstpt
or
xchg
popf
loope
lgs
repz
xor
xchg
lcall
in
int
and
mov
out
inc
test
dec
rclb
push
sbb
dec
mulb
aad
gs
icebp
mov
hlt
sub
xor
lahf
fdivrp
out
pop
or
int3
mov
push
int
lcall
lods
xchg
sbb
loop
mov
xor
push
fdivrp
movsb
les
out
mov
das
cltd
xchg
repz
sbb
outsl
out
or
ret
xchg
push
xor
xor
inc
outsl
xor
loop
mov
lds
data16
add
jb
mov
sbb
push
push
jle
notb
lock
fcmovnb
subb
in
enter
and
and
aad
mov
jne
cmc
mov
inc
mov
mov
in
shlb
jecxz
loope
or
cmp
xchg
mov
arpl
cmc
cmpsb
and
jbe
subb
cmp
aas
xor
in
push
mov
and
add
pop
fwait
roll
push
inc
sahf
sahf
popa
mov
xchg
pop
xor
ficomps
aam
out
jmp
jns
push
arpl
sbb
hlt
pop
mov
xor
cwtl
xor
cmp
push
mov
adc
lods
add
ret
push
mov
dec
cmpps
jo
jle
in
mov
inc
pop
xchg
sbb
loop
daa
jno
mov
outsl
pop
add
push
icebp
shlb
inc
mov
lds
or
out
dec
push
shll
add
mov
hlt
xchg
inc
jns
pop
call
rcrl
xchg
jns
push
push
dec
pop
or
cmp
data16
rcrb
aas
add
or
sbb
gs
add
sbbb
arpl
xchg
jge
and
or
dec
jge
mov
xor
ss
and
fistpll
mov
mov
mov
cs
sbb
xor
cmp
xchg
push
idivb
push
iret
fildll
out
xchg
mov
in
mov
or
arpl
dec
mov
mov
fildl
lahf
inc
ja
push
lret
xlat
test
mov
pop
out
leave
lock
xchg
fadd
xor
rorb
push
nop
mov
aaa
and
inc
mov
das
fsubr
mov
push
call
cmc
shlb
add
fimull
insl
jecxz
mov
aad
negl
jbe
or
test
xchg
mov
and
pusha
aad
mov
fidivl
insb
mov
jle
add
xchg
jne
and
mov
cli
cs
imul
mulb
mov
adc
and
jb
js
push
mov
bound
lock
pop
notl
mov
aam
out
inc
cltd
pop
sub
int3
xorl
dec
xchg
mov
sbb
pop
pop
rolb
fidivl
lret
cmp
shl
fcoms
sbb
mov
lcall
fwait
in
pop
cmp
ficompl
cmp
fstpl
xor
cli
lods
cmc
es
test
jae
mov
movl
pusha
lea
pop
cld
sbb
sub
mov
mov
hlt
je
pop
test
push
and
adc
jns
xchg
cli
jmp
outsl
clc
ficoms
stos
inc
mov
arpl
or
mov
push
push
push
rsqrtps
pusha
mov
and
push
sbb
and
int
xor
mov
gs
jbe
or
cmpsl
push
cmp
in
cmp
icebp
sub
sbb
ret
or
scas
push
mov
xchg
adc
jl
loopne
and
xchg
cmp
mov
das
repnz
nop
sub
lods
nop
mov
shl
push
xchg
clc
adc
aam
jno
rcrb
addl
jo
mov
push
test
test
jge
jp
push
mov
jne
in
cmp
lods
jg
nop
pop
inc
push
sbb
iret
xchg
push
push
mov
add
in
sub
icebp
shrl
rcrl
sbb
mov
dec
std
ficomps
je
mov
loop
pop
sub
outsb
add
mov
inc
loope
xor
push
or
les
xchg
lea
xor
popf
je
addr16
lods
popf
mov
lods
jp
out
pop
push
into
jne
pop
outsl
loop
mov
push
or
movsl
stc
xchg
outsb
scas
enter
scas
dec
mov
xchg
hlt
pop
or
fstps
sbb
and
xchg
mov
jmp
ret
xchg
cmpsl
jmp
test
xor
add
dec
mov
nop
mov
adc
data16
pop
mov
inc
or
jmp
pop
cmpsb
mov
movb
repnz
scas
je
das
inc
mov
mov
imul
decl
es
call
dec
inc
dec
cmpb
sub
sbb
pop
adc
out
mov
mov
inc
mov
mov
xlat
push
mov
cmc
loop
pop
or
mov
and
sub
ror
stc
and
mov
sysenter
push
dec
push
in
pop
and
mov
pop
pusha
into
lret
repnz
or
sbb
addr16
das
cmc
lcall
mov
mov
xchg
dec
icebp
jae
adc
sahf
sub
push
mov
jmp
outsb
inc
call
arpl
cmp
lret
and
jne
fwait
add
jnp
gs
mov
js
hlt
and
adc
mov
pop
and
add
push
mov
push
imul
adc
xchg
loope
sub
sub
xor
loopne
and
mov
jp
and
jp
jmp
xor
adc
cmp
jno
adc
roll
jne
sbb
test
scas
xor
dec
dec
pop
clc
inc
lahf
xchg
sbbb
loope
and
inc
adc
in
ret
stc
inc
ret
adc
or
lock
inc
icebp
out
xchg
sub
sbb
add
push
and
lret
push
inc
jae
aam
add
inc
les
popa
pop
shrb
cmc
loope
stc
and
ret
jo
test
lock
jle
cmp
sub
jnp
xor
lds
loopne
jmp
adc
rorb
mov
je
mov
adc
push
js
div
aam
cmpsl
cmpb
cmp
cmpsl
add
add
mov
adc
aam
testb
lcall
loope
pop
popa
jno
sar
jno
or
mov
pop
jb
lret
and
add
fldt
mov
cmp
pop
push
cmc
test
sbb
mov
and
aam
add
and
or
pop
aas
subb
mov
loope
adc
out
jmp
push
vpmacsdql
xor
movsb
jg
pop
stos
jmp
pushf
std
je,pn
in
iret
vpsubusb
cli
scas
cmpl
lcall
inc
jns
jmp
and
xor
push
es
push
mov
push
xchg
jne
mov
out
call
addr16
into
push
lahf
jne
inc
js
aaa
dec
adc
mov
int
js
push
xor
aam
mov
mov
jns
popl
mov
popa
adc
int3
push
xor
loopne
aam
mov
loop
shll
or
push
sub
stos
cmp
sub
sub
jg
pushf
adc
lcall
notl
or
and
inc
mov
insl
loope
cwtl
or
xchg
fstpl
jne
sarl
cld
mov
mov
mov
fimull
sub
enter
ds
js
cwtl
xor
lahf
subb
inc
sub
sbb
das
and
inc
xchg
pusha
into
in
sahf
mov
je
scas
jnp
dec
gs
sarl
xchg
pop
pop
data16
lods
xchg
dec
in
xor
ror
jbe
dec
insl
inc
xor
mov
cs
std
orl
clc
icebp
mov
test
xor
cmp
add
lds
push
inc
jne
add
cmp
icebp
cmc
in
clc
test
stos
and
sbbl
stc
arpl
mov
dec
shl
mov
testl
sub
add
add
mov
leave
int
es
add
pop
or
aam
popf
adc
fs
mov
enter
ja
or
sbb
arpl
inc
mov
bound
out
sbb
ds
xor
mov
fwait
leave
lret
std
push
cltd
sbb
jae
and
js
or
or
in
mov
lahf
clc
test
rol
mov
or
jae
hlt
das
mov
mov
lods
mov
iret
loop
dec
sbb
push
mov
mov
cs
xchg
sbb
mov
xchg
cmc
jnp
shrb
ret
pop
push
aad
jmp
outsb
pushf
pop
fimull
fildll
movsl
fdivl
xchg
out
cli
xor
xor
cld
lds
and
into
das
js
or
aad
loopne
push
iret
mov
and
pop
mov
adc
adc
fs
daa
or
adc
les
jns
pop
ret
push
xlat
xchg
mov
mov
mov
pop
add
fisttps
mov
mov
mov
mov
outsb
mov
in
jno
xchg
aaa
xor
dec
mov
xor
jb
mov
sub
or
out
or
ret
pop
xchg
inc
mov
jp
dec
mov
test
xchg
sbb
or
xchg
fwait
xchg
sbb
repz
int
push
into
shrb
fsubrl
icebp
mov
ret
cmc
orb
xchg
pop
adc
mulb
mov
pop
or
jl
xchg
inc
mov
adc
test
scas
inc
inc
and
in
jno
push
cmp
sub
push
and
jb
lret
jae
int3
or
xchg
jge
aam
push
adc
sbb
cmp
adc
sub
sahf
cmp
das
add
ljmp
fxam
aas
jne
xchg
or
or
push
inc
mov
in
mov
lahf
and
jnp
loopne
arpl
daa
movsl
inc
test
xchg
xchg
mov
scas
dec
xor
jl
adc
test
into
push
xor
pop
dec
out
aam
ds
and
movsb
xchg
sub
pop
je
jmp
filds
cltd
mov
jecxz
xlat
jl
data16
imul
loop
mov
mov
sahf
ret
loop
adc
dec
mov
dec
xchg
stos
cmpb
xor
jnp
xchg
add
shrb
test
or
dec
in
in
scas
out
shrb
sahf
or
mov
sbb
inc
mov
outsl
faddl
xor
ret
and
hlt
xor
mov
test
std
mov
adc
or
jne
pop
test
and
add
cmp
xchg
test
lea
mov
cmc
fwait
add
xor
jbe
or
xchg
mov
imul
out
in
jns
pop
add
iret
lods
cmpl
popf
fcmove
xor
mov
out
test
in
adc
mov
ret
insl
xlat
fstpl
jae
jl
sbb
push
mov
sbb
dec
cmp
out
cmp
xor
ljmp
clc
lds
loope
jmp
pop
in
inc
xchg
rclb
lods
fsub
sbb
rorb
cmpl
aam
sahf
mov
or
iret
lcall
inc
dec
mov
leave
and
or
pop
pushf
inc
add
adc
xchg
std
pop
inc
push
xor
out
rcrl
xchg
repz
mov
or
jge
pop
inc
nop
dec
and
adc
popa
add
mov
mov
sbb
sbb
mov
aaa
adc
xchg
xchg
jle
lds
ficoml
mov
repz
push
dec
sub
pop
cmp
and
mov
sbb
dec
sbb
inc
into
daa
addr16
jg
dec
mov
mov
mov
mov
add
sbb
adcb
adc
in
mov
int
jp
outsl
adc
push
lcall
jbe
ret
adc
cld
stos
jmp
stc
xchg
lret
fwait
xor
jb
pop
mov
ret
jge
ret
and
lods
adc
and
or
fisttps
call
inc
and
dec
xchg
insl
ret
xchg
or
inc
aam
cmp
inc
int
ftst
movsb
add
pop
test
mov
test
out
inc
mov
into
pop
jle
push
cmp
and
or
fdivl
js
mov
mov
sub
mov
sub
inc
xchg
aam
test
jne
or
fadds
cmp
insl
adc
jbe
cmpsb
es
cvtdq2ps
fwait
and
mov
out
rolb
cltd
inc
mov
sbb
jno
imul
sbb
sbb
sub
cmpsb
ss
call
jmp
leave
nop
xlat
fbstp
js
pop
les
fbld
mov
sbb
test
js
loopne
jae
lods
sbb
lods
or
mov
shl
lahf
lds
cmp
out
dec
sbb
lds
nop
movsb
push
popf
das
insb
or
add
dec
mov
jecxz
adc
imul
xor
lret
and
lret
out
out
clc
insb
push
dec
mov
fucomip
js
dec
mov
fiaddl
mov
out
std
lds
ljmp
add
add
orb
jl
mov
sbb
jge
loopne
cmpsb
hlt
test
pop
and
lds
mov
ljmp
sbb
hlt
pop
or
lock
in
jp
and
hlt
ja
insb
lret
ljmp
into
daa
pop
or
repz
jne
xchg
arpl
mov
aad
pusha
nop
jae
cmpsl
add
sbb
or
pop
xor
outsb
lock
imull
xchg
pop
pop
adc
push
push
outsl
and
mov
popl
jge
adc
and
scas
jo,pn
lret
jne
and
sbb
loop
mov
sbb
sti
mov
fdivl
xor
mov
stos
sahf
or
xchg
sub
adcb
mov
jne
addr16
std
lods
xchg
imul
push
mov
lret
mov
outsb
lret
shrb
inc
and
dec
pop
jecxz
sti
jmp
push
pop
sub
dec
and
or
dec
aad
scas
mov
cmp
fisttps
pop
clc
imul
imul
jae
mov
mov
incb
xchg
int
push
jne
xor
test
incb
lcall
xor
add
cwtl
cli
jb
or
data16
insb
std
sub
fisubrl
pop
push
pushf
cltd
pop
repz
adc
es
mov
mov
pop
inc
xor
dec
popl
jno
test
rorl
fucomp
data16
xlat
leave
xchg
call
rorb
repz
xchg
or
jmp
dec
fucom
popa
roll
push
std
or
mov
shll
adc
pop
insb
mov
adc
fsubp
mov
insb
or
xchg
xor
jg
cmc
movsl
add
cmp
mov
mov
pop
in
pop
ss
lock
pop
cs
jecxz
data16
inc
int3
aaa
fcoms
and
mov
mov
repnz
dec
pushf
inc
loope
in
aad
je
out
pusha
pop
xchg
in
insl
mov
xor
or
sub
mov
outsb
inc
adc
xlat
mov
sub
dec
insb
jge
int
push
lods
adc
mov
mov
mov
movsl
xchg
mov
jmp
mov
push
testl
test
test
outsb
mov
pop
les
jecxz
fcompl
push
int
lods
hlt
into
fimull
les
jb
xchg
addr16
movsb
aas
in
sub
jecxz
push
or
inc
jp
fwait
adc
testb
ljmp
shrl
xchg
dec
jle
pusha
sub
out
lcall
test
stos
cmp
cwtl
xchg
mov
sub
fsubs
jbe
pop
mov
or
pop
movsl
pop
xchg
or
dec
out
in
js
mov
adc
ds
cmpsl
les
insl
sar
jnp
iret
test
or
nop
inc
pusha
pop
cmpsb
test
or
std
imul
nop
mov
sbb
ljmp
pop
repz
test
data16
int3
mov
xchg
rcrb
ja
and
in
fstpl
sub
pop
hlt
in
mov
push
mul
push
mov
bound
int
add
sbb
lods
int
lret
test
pushf
jl
inc
inc
dec
push
scas
loopne
test
push
rolb
fidivrl
inc
aad
cwtl
mov
lods
mov
ret
lock
pop
shr
lock
into
in
out
jne
xchg
das
dec
inc
in
hlt
sbb
push
mov
cli
xchg
xor
sub
pop
sbb
mov
inc
sarl
add
rol
add
xor
addr16
mov
arpl
pop
jns
mov
sub
cmp
int3
dec
shrb
js
in
sub
mov
cwtl
cmp
dec
daa
and
push
dec
jno
fisubs
loope
scas
into
and
scas
lahf
ffreep
mov
push
lahf
mov
mov
loop
cmp
mov
mov
sbb
rolb
sbb
flds
mov
inc
mov
mov
mov
roll
scas
outsb
pop
sub
lods
lret
push
sets
test
or
mov
pop
sub
in
push
outsl
fcmove
pop
insb
and
jae
sbb
aam
jl
or
push
mov
mov
adc
push
xor
aad
and
mov
loopne
aad
shlb
xor
or
int3
jbe
push
in
and
jo,pn
and
repz
shll
mov
lods
jns
repz
jnp
jbe
xlat
xchg
mov
sbb
mov
dec
js
call
movsl
mov
adc
lock
mov
push
cmp
lret
or
test
mov
movsl
xor
inc
shll
gs
adc
mov
lds
popa
in
xchg
add
xor
inc
shll
gs
adc
mov
inc
sbb
in
adc
and
shll
gs
adc
andl
jo
add
xor
inc
jnp
loope
xchg
jne
inc
pop
push
dec
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
outsb
dec
jle
dec
push
pop
sbb
push
push
xchg
mov
call
mov
cmp
dec
jle
dec
push
cmp
sub
out
enter
call
mov
loopne
mov
pop
push
cs
push
mov
mov
cli
jmp
ss
add
push
or
loop
add
cmpsl
pop
cmpsb
fucomp
mov
mov
mov
clc
adc
mov
cs
scas
aam
mov
outsb
or
pop
shll
dec
mov
mov
call
mov
test
and
data16
out
or
fs
fsts
enter
push
ds
mov
test
cs
push
cmc
shl
cmpsb
xorb
adc
clc
xor
mov
cmpsl
jmp
repz
xchg
push
out
loope
movl
int3
lods
jno
sbb
adc
mov
jle
dec
push
cmp
mov
push
out
push
decb
scas
cmpb
push
aas
or
adc
dec
push
dec
dec
sub
xchg
fwait
lcall
in
out
shl
int
adc
sub
pop
jno
insl
jb
addr16
mov
popf
nop
mov
rcr
jmp
sbb
cmp
or
cmp
sub
fsubr
enter
call
mov
pop
outsb
dec
jle
dec
push
cmp
sub
fsubr
enter
call
mov
pop
outsb
out
push
mov
pop
loopne
push
orl
mov
popa
xor
mov
cmp
mov
rcll
jge
sub
or
fwait
cltd
or
inc
xchg
cmp
daa
out
mov
repnz
lret
jg
scas
push
frstor
addr16
lret
and
lock
and
sbb
mov
xlat
shlb
cmp
icebp
fldcw
mov
mov
sub
pop
jle
loope
pop
test
push
rorb
stos
in
pop
mov
add
mov
mov
cmp
mov
inc
jecxz
push
repz
testb
jae
inc
dec
mov
cmp
rcrb
add
jg
inc
inc
adc
cmp
adc
enter
ret
xchg
mov
out
push
out
and
pop
pushf
mov
xor
daa
mov
or
or
jns
jb
jge
cld
aad
fwait
xchg
stos
hlt
call
hlt
or
iret
jb
push
jns
adcb
add
sbb
jl
js
pop
sbb
sahf
pop
ss
inc
js
xchg
jmp
stos
jg
jb
jmp
andl
adc
rclb
ljmp
jmp
or
ds
jmp
cmp
lret
push
jmp
lods
in
inc
mov
and
pop
imul
dec
mov
fcompl
loop
repnz
xchg
jb
jg
push
xchg
dec
scas
leave
cmp
push
clc
rcll
mov
aad
pop
mov
mov
pop
push
sbb
pushf
mov
std
cmc
ja
xlat
lret
jl
repnz
aam
dec
and
int
mov
cmp
or
jae
setnp
mov
fildl
fwait
mov
mov
stos
imul
dec
xchg
mov
inc
jmp
rorl
sbb
arpl
mov
add
lock
divb
adc
rcll
in
and
push
mov
push
pushf
mov
mov
icebp
hlt
dec
jne
rorb
inc
test
sbb
imul
push
and
mov
sub
inc
aas
push
push
and
push
ret
lods
leave
lods
push
mov
enter
mov
call
cltd
dec
and
cmc
xor
test
mov
aad
push
or
mov
xchg
int3
push
movsb
pop
push
movsl
sahf
mov
adc
push
fucomp
push
xor
int
lret
jmp
add
shrl
add
sbb
jns
jmp
xchg
mov
dec
inc
mov
xchg
pop
fs
rorl
and
sub
loop
cmp
lcall
dec
shl
popf
sub
pop
inc
jle
jae
jb
adc
xor
jae
mov
ret
pusha
je
int3
rol
pop
bnd
jle
xchg
fsubrs
shll
pop
pop
popa
pop
lods
loopne
cmp
stos
jg
es
sub
and
sbb
push
cltd
dec
popa
rol
lcall
insl
adcb
in
pop
jae
jb
icebp
xor
test
ljmp
addr16
adc
test
loopne
jns
xchg
shrb
pushf
jbe
inc
push
mov
int3
push
push
pop
movsb
loop
jb
or
mov
imul
out
cmp
data16
pop
popf
sbb
dec
scas
cmpsb
std
movsb
jp
sahf
sbb
lahf
add
jl
cld
sub
inc
in
movsb
bound
rolb
sahf
mov
icebp
adc
pushf
test
mov
xor
mov
and
and
ds
push
add
pop
es
push
xchg
repz
mov
shlb
inc
inc
sbb
pop
or
sub
mov
xlat
orb
popa
pop
andb
xor
xchg
cmp
xor
inc
jne
cld
outsl
nop
cmp
cmp
cld
cs
test
lea
sbb
movsb
iret
and
lret
orl
cmp
mov
outsl
mov
sbb
rcrb
insl
lahf
mov
jae
jnp
pop
je
add
testl
mov
ljmp
das
push
pop
icebp
inc
fcoml
xor
shrl
mov
xor
mov
test
mov
pop
and
cmpsb
outsl
mov
orl
xchg
jns
mov
pop
lock
or
inc
lcall
scas
icebp
dec
lea
cltd
les
bound
cmp
xchg
jl
daa
pop
jnp
outsl
push
sbb
xor
add
out
fwait
xlat
dec
pop
daa
fiaddl
mov
inc
fcompl
cld
sbb
ficomps
sub
in
in
stc
push
pusha
das
pusha
lret
leave
inc
fwait
outsb
and
stos
adc
sbb
dec
jmp
in
cli
push
cmpsl
sub
gs
push
push
pop
subb
iret
jg
inc
inc
sub
sub
leave
cmp
gs
jnp
orb
add
repnz
mov
popf
sar
into
jae
popa
aaa
int3
mov
push
mov
mov
inc
add
mov
pop
in
xchg
inc
or
movsb
mov
ds
push
push
sub
ds
and
je
jnp
cmp
aad
xchg
scas
fcoml
xchg
sbb
sub
pop
aam
dec
lcall
cmp
loop
loopne
sub
mov
fwait
sub
jne
rclb
mov
into
sbb
pop
lds
dec
rcrl
sbb
xchg
inc
xchg
cmpb
hlt
outsb
test
and
or
cs
in
dec
fdivs
mov
stos
mov
mov
rol
cmp
imul
repnz
arpl
inc
call
cld
test
push
dec
stc
sub
sahf
mov
sti
mov
lahf
nop
xor
mov
dec
cmc
adc
in
sbb
ret
fmull
aas
adc
lret
test
jmp
inc
cld
stc
roll
lods
and
lods
add
rolb
mov
fwait
push
push
out
push
decb
out
ljmp
repz
int
xchg
pop
call
xchg
push
push
out
xchg
mov
xchg
pop
int
or
xchg
pop
mov
mov
insl
push
lahf
in
or
sub
ja
insb
pop
es
inc
lods
add
xchg
sub
divl
lea
je
lea
mov
int3
sub
scas
cmp
fldl
lcall
orl
les
or
adc
dec
aad
sbb
sub
push
js
lahf
adc
pop
add
int
mov
jnp
push
jp
or
and
dec
lcall
cmp
fsts
sahf
pop
jnp
adc
jecxz
aam
jb
mov
cli
adc
xchg
mov
call
inc
pop
xchg
add
jae
mov
mov
cmp
dec
xchg
cli
dec
data16
sbb
insb
sbb
add
dec
or
jp
sub
mov
cmpb
push
out
aam
cli
mov
out
ss
idivb
inc
ss
inc
test
data16
nop
jle
sahf
pop
js
mov
stos
cwtl
add
inc
loope
mov
test
mov
jmp
push
insl
push
dec
jb
or
into
or
push
mov
std
pop
daa
inc
xchg
mov
dec
jno
and
lods
and
xchg
jo
shll
sbb
out
popf
cmp
lahf
in
lahf
lcall
pop
aas
out
lods
cmpsb
das
clc
rclb
push
adcl
aam
imul
add
sbb
adc
add
test
frstor
clc
inc
pushf
pusha
out
or
mov
mov
pop
popf
cmp
add
pop
lret
push
add
imulb
mov
and
mov
pusha
cmpb
clc
xchg
in
out
rol
and
nop
mov
adc
xor
daa
push
and
push
ficoml
mov
mov
mov
push
out
mov
aas
mov
mov
sub
aaa
jl
pop
enter
mov
scas
jp
cli
jbe
jno
push
pop
dec
push
xor
scas
imul
pop
int
inc
loop
aad
jle
cmpsl
int
fstpt
dec
out
xchg
lock
sbb
mov
or
aas
inc
ret
push
dec
test
xchg
inc
mov
movsb
out
imul
je
pop
inc
fcompl
dec
popf
stc
roll
pop
sub
or
mov
jp
sti
xchg
adc
das
dec
add
enter
aam
inc
pop
call
enter
mov
jae
push
ss
push
xchg
inc
jmp
and
mov
inc
mov
in
sti
dec
inc
in
cltd
dec
jns
adc
push
loope
push
add
pop
jl
popa
dec
push
or
addr16
push
mov
insl
and
push
inc
test
subb
into
cld
push
jbe
push
inc
add
test
imul
and
cltd
arpl
mov
or
adc
inc
xor
add
fcmovnbe
test
pop
arpl
add
sbb
or
mov
jg
fadds
cmpsl
mov
js
inc
mov
jge
rolb
testb
xor
test
mov
cmp
pop
fs
mov
int3
mov
add
mov
pop
dec
and
mov
xchg
push
scas
test
push
imul
dec
ror
jecxz
push
sub
pop
jns
mov
icebp
xor
xchg
outsb
aad
xor
rcrb
xor
sbb
outsb
sbb
out
cmc
flds
mov
popa
outsl
mov
test
cmp
sbb
inc
aas
add
int
ret
rorl
mov
lock
sub
jae
out
push
mov
loop
hlt
lds
outsl
into
xchg
mov
xchg
int
fwait
push
jg
sub
cmp
jp
imul
aad
insb
js
pop
push
mov
jb
stos
ret
pop
fwait
popf
lahf
outsb
pop
add
or
js
loopne
and
rol
subb
stc
or
adc
mov
ljmp
aam
sub
cld
imul
mov
lock
hlt
push
jbe
mov
wbinvd
jae
pop
and
gs
adcb
addr16
test
jne
mov
in
and
cli
push
insb
mov
stos
testb
or
outsl
push
cmp
sti
or
mov
fcom
lods
jmp
fcom
mov
mov
inc
out
cmp
lods
cmp
xlat
sbb
xchg
ret
fsubrl
sbb
jp
adc
std
sbb
sar
add
pop
int3
int
fsubs
mov
stc
push
popf
mov
ret
je
adc
xor
pop
and
ds
jo
pop
out
cmp
jecxz
icebp
add
dec
aad
and
mov
jmp
jmp
gs
push
inc
jbe
jl
and
les
loopne
cmp
aad
sub
stos
stos
add
and
jl
orb
adc
add
mov
xchg
js
adc
push
das
das
mov
in
push
test
lahf
pushw
stos
mov
fdivl
fimuls
mov
pop
bound
int
adc
sarb
sti
mov
movsl
pop
xor
scas
push
or
inc
add
and
popa
movsl
mov
jne
and
nop
cmpsb
and
sub
pop
adc
dec
jecxz
lcall
dec
sbb
lock
ss
sub
cmp
adc
andb
aas
jp
ret
imul
imul
subl
outsb
inc
dec
adc
jp
stc
jbe
xor
mov
dec
stos
stc
mov
pop
pop
push
push
hlt
lret
add
jmp
pop
in
imul
popf
push
sbb
add
inc
pop
pop
mov
shr
test
shrb
cwtl
in
xchg
rcr
jl
push
lock
and
gs
loopne
xor
sub
jmp
xor
fistps
stc
sbb
sbb
pop
mov
out
push
enter
mov
mov
mov
xor
mov
cmp
jo
xor
or
xchg
push
add
jnp
repz
daa
mov
in
ds
sub
daa
cli
push
sbb
pop
iret
push
cmc
leave
dec
kxorw
test
jp
fld
inc
pusha
je
nop
lahf
mov
xor
pop
notb
jno
add
push
push
mov
sub
adc
xchg
addl
jle
outsl
in
sbb
pop
push
lcall
iret
xor
mov
add
mov
divb
cwtl
mov
adc
fsubrl
jbe
andl
cmpb
mov
and
gs
arpl
and
and
cmp
push
cmp
sub
pop
add
fildl
out
out
mov
adc
jp
sub
sbb
cld
pushf
xchg
jno
cmpsl
aas
rcl
nop
divb
std
jle
cld
push
aam
frstor
or
andl
push
loopne
sub
mov
enter
cltd
dec
push
test
insl
fldt
mov
mov
push
fsubp
inc
add
dec
mov
jmp
pop
fldcw
or
lock
sub
out
fmull
or
pop
pop
aaa
sub
jno
repnz
push
es
xchg
ds
or
inc
das
cmc
mov
insb
push
test
nop
or
xor
dec
pop
dec
aad
arpl
or
or
ljmp
sbb
cmp
or
jg
mov
mov
lret
popf
cld
jns
fs
scas
jne
sub
cmp
cmpb
cmp
add
insl
in
cld
call
sbb
xchg
push
dec
mov
insb
adc
fdivrp
int
int
std
es
inc
add
pop
dec
pop
xchg
fs
daa
mov
xor
xorb
cmpsb
fs
xor
fs
imul
cmpsb
xorl
pop
inc
add
es
jns
pop
popa
jle
adc
aad
lods
xchg
sub
fcom
aaa
jmp
push
mov
pusha
out
add
mov
ja
dec
adc
lds
fsubrl
cmp
in
roll
pop
cmpsl
add
jmp
mov
std
pop
aas
test
push
or
xor
lahf
in
addr16
in
pushf
aad
lret
xor
dec
mov
sub
insb
out
arpl
or
cmp
xchg
movsl
sbb
dec
mov
or
ficompl
rcl
and
xor
lods
xchg
ljmp
mov
lcall
addr16
andb
or
js
cmc
cli
jae
inc
loopne
jmp
lods
sub
push
or
jne
popa
and
in
push
pop
movsl
push
inc
xor
in
push
fwait
and
adc
xchg
repnz
inc
cmp
cld
add
push
sub
xchg
outsl
cmp
jmp
cmp
ficompl
xor
mov
inc
repnz
inc
cld
aaa
imul
fisttpl
out
aam
lahf
lret
sub
mov
or
or
out
aad
lods
lods
push
sbb
out
test
imul
stc
sti
mov
adc
xor
and
clc
cmovo
es
mov
jp
shrl
add
ficomps
pop
jp
divb
mov
add
mov
push
divb
mov
divb
test
dec
jne
lds
loopne
mov
aam
mov
pop
xor
lods
pop
in
cmp
packuswb
lods
cmpsb
adc
sbb
aam
push
push
push
xchg
dec
pop
push
pop
push
rcll
dec
xchg
jno
mov
aaa
adc
xchg
or
les
pushf
std
mov
lcall
push
mov
cmc
push
cmp
and
xlat
out
test
test
inc
inc
mov
es
and
xor
ljmp
sbb
cmp
mov
push
dec
ss
dec
xor
mov
dec
outsb
push
inc
lret
and
loopne
hlt
inc
mov
dec
inc
sub
enter
and
test
jge
test
xor
imulb
sub
jae
lock
js
lods
inc
pushf
movsl
jecxz
outsl
cwtl
outsl
push
mov
lret
cmp
cmpsb
aaa
scas
into
cld
fld
mov
sub
lret
insl
xchg
mov
movsl
adc
jns
push
inc
fwait
mov
pop
out
daa
jle
je
out
sbb
imul
pop
mov
call
and
and
cmp
mov
xacquire
mov
stos
jnp
in
je
push
out
and
inc
scas
out
cs
jb
inc
jbe
ret
shr
and
inc
mov
insl
cmc
mov
xchg
cmc
adc
or
gs
jne
sbb
pop
mov
jecxz
insl
in
inc
movsl
repz
push
loope
cmpsl
inc
pop
rorl
data16
aad
iret
cltd
lret
jo
pushl
rcll
dec
ficomps
sub
push
cmp
mov
push
dec
sbb
jl
adc
mov
sbb
lea
sub
add
mov
shl
sbb
sbb
je
add
pop
pop
jb
mov
decb
pop
insl
jns
loope
inc
mov
aam
scas
jbe
mov
adc
call
out
inc
pop
jle
call
daa
push
add
inc
call
rol
pop
stos
cli
xlat
pop
fucomip
sbb
sti
xchg
enter
in
add
mov
arpl
dec
xchg
sub
push
mov
add
mov
loopne
test
xchg
sbb
add
adc
jp
push
jp
sub
pop
push
cmp
jne
inc
imul
jecxz
popf
clc
or
xlat
pop
xchg
push
xor
fst
jmp
repz
lock
ret
ljmp
dec
loop
icebp
inc
aad
xor
sub
call
xor
jae
mov
rep
or
inc
cmpsb
dec
jns
ss
jae
idivb
subb
fcompl
fwait
lret
add
xchg
scas
jo
cmp
lea
mov
cmp
cmc
gs
sub
int3
jns
icebp
adc
add
xlat
mov
js
sub
sbb
xchg
fidivl
cli
cwtl
sub
sub
sbb
xchg
sarb
lods
mov
pusha
cmp
in
push
lret
fdivrl
jg
ljmp
std
push
fnstsw
rorb
xchg
ljmp
push
shlb
dec
fdivrp
pop
testb
or
std
das
add
adc
inc
push
jmp
mov
push
aas
leave
cmp
pop
lcall
mov
jbe
cmp
sub
or
fucomip
daa
mov
loope
shl
rcrl
loop
jnp
mov
lods
cmpsb
shrb
fiadds
and
out
pop
adc
mov
inc
xlat
fwait
inc
mov
popa
inc
jl
test
lret
jmp
movsb
add
push
and
call
sti
sbb
xor
cmp
enter
and
push
push
repz
inc
outsl
scas
sub
lods
dec
inc
cwtl
icebp
mov
or
shlb
jbe
push
xor
mov
pop
insl
call
ret
xchg
xchg
jle
xchg
loope
fsubs
pushf
cmp
push
mov
cmp
xchg
movsb
shl
aad
mov
sbb
aad
roll
sti
push
mov
sbb
mov
xchg
rcr
sub
lret
hlt
inc
jae
push
imul
cmpsl
cli
fs
and
mov
outsb
pop
clc
scas
dec
push
pop
aas
pop
ljmp
and
aas
std
rcr
cmp
jns
cmpsl
dec
pusha
inc
sub
jge
movb
inc
dec
hlt
sub
lea
cltd
pop
mov
xchg
and
js
ljmp
imul
push
xchg
mov
pop
ljmp
or
cmp
in
push
int3
push
dec
leave
cli
push
leave
fidivrl
ss
insl
jb
or
mov
outsl
xor
jl
mov
xchg
scas
push
lods
cmp
cmp
cmp
out
mov
aam
sarl
mov
xor
cmp
orl
cmpsb
add
adcl
jl
scas
xchg
test
xchg
mov
insl
xor
xor
pop
xor
test
inc
or
push
lahf
les
or
mov
scas
xchg
pop
cld
and
imul
dec
cltd
insl
enter
stos
pop
hlt
adc
and
inc
scas
pop
in
mov
mov
nop
shl
es
jo
test
sbb
cmc
or
test
pop
mov
mov
push
pop
jbe
xchg
xchg
lcall
push
pop
or
gs
adc
jno
popf
rcl
xchg
pop
push
ja
lods
insb
icebp
mov
add
lods
mov
nop
jp
inc
sbb
aad
or
xchg
jmp
inc
jbe
or
popa
repz
pop
jle
dec
push
cmp
sub
fsubr
enter
call
mov
pop
outsb
dec
jle
dec
push
cmp
sub
fsubr
enter
call
mov
pop
outsb
js
sbb
pop
mov
or
cmp
call
decb
into
call
mov
dec
outsb
adc
and
pop
sbb
sbb
cmp
test
fsubr
aaa
push
push
into
call
inc
inc
jno
popa
mov
push
sti
fcmovne
lret
fsub
fwait
sub
jnp
dec
dec
pop
sub
jnp
or
sbb
jmp
sti
fcmovne
lret
fstpt
mov
jnp
dec
dec
pop
cmp
dec
cmp
or
sbb
jmp
sti
pop
lret
or
mov
jnp
pop
daa
cmp
jns
pop
insb
outsb
js
mov
scas
mov
jp
mov
cs
dec
rorb
outsb
jecxz
cmpb
mul
mov
and
push
push
inc
mov
setae
xchg
sbb
mov
out
sti
sub
xor
fidivl
out
mov
test
cmpsb
or
hlt
push
sbb
lret
mov
bound
outsb
dec
mov
movsb
mov
sub
cmc
hlt
cmp
push
pop
and
or
inc
stos
sub
ret
int
cmp
mov
push
dec
or
jle
jmp
and
outsb
scas
ss
push
mov
adcl
mov
push
sbb
enter
fcmovne
cmpsl
fstpt
mov
fwait
mov
jnp
dec
push
pop
pop
sub
pop
mov
movsl
popf
aad
fdivrp
mov
ljmp
and
inc
inc
outsl
mov
stos
arpl
ror
lret
in
fwait
inc
sub
ds
dec
push
outsb
jle
jne
mov
mov
fwait
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
sti
jmp
sti
fcmovne
lret
fstpt
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
sti
jmp
out
jae
xchg
or
outsb
les
cmp
mov
scas
add
mov
incl
sub
xchg
and
inc
into
ret
orl
jle
std
sub
jo
clc
mov
sub
mov
ljmp
xor
sub
add
lahf
mov
or
adc
sarl
jmp
xchg
and
lea
push
add
inc
push
popf
sub
ja,pt
ret
push
sub
adc
xlat
jmp
and
adc
lahf
aam
xor
inc
out
iret
fdivl
xchg
xchg
cwtl
cmpsl
dec
cmp
sbb
imul
inc
or
cmp
add
into
test
fcomp
push
hlt
daa
cmp
xor
mov
enter
pop
fsub
fwait
push
pop
adc
cmp
mov
sbb
repz
je
pop
mov
jecxz
inc
push
in
test
pusha
jbe
jno
mov
xchg
pop
sub
jmp
fnstsw
ds
xchg
xor
fcmovnu
mov
movsb
test
bound
imul
ret
and
jbe
fs
mov
pusha
inc
in
sbb
push
mov
lds
lret
repnz
addb
es
ret
in
inc
mov
pop
or
push
dec
ljmp
imul
cs
cvtdq2ps
fists
and
cmp
push
out
call
outsb
ret
adc
pop
jmp
and
bound
aad
xor
push
nop
and
push
dec
pop
mov
orb
into
add
push
or
cwtl
or
cmp
sbb
fisubl
adc
ffree
cmpsl
in
mov
or
push
adc
or
push
int3
pshufw
or
dec
pop
mov
sti
pop
pop
mov
jecxz
in
icebp
fnstenv
jb
jl
data16
inc
hlt
outsl
loopne
mov
insl
mov
stos
repz
sahf
pop
inc
and
sub
sbb
es
dec
mov
and
pop
push
lea
sbb
dec
dec
mov
sarl
hlt
jge
mov
and
pop
sub
scas
sete
push
or
sbb
daa
jbe
push
mov
jg
xor
push
cmc
adc
js
mov
jecxz
cmp
jmp
mov
jecxz
out
cmpsl
xor
jno
pusha
jnp
rcrl
pop
jae
testb
xor
daa
or
mov
adc
popf
mov
stos
jle
mov
jo
shll
sbb
jne
popa
pop
test
jae
es
xchg
push
ljmp
cmpsb
out
add
mov
jae
loop
adc
cwtl
or
mov
outsb
jge
push
cmp
push
pop
sbb
cltd
leave
mov
movsb
ss
adc
xlat
cld
xor
cmpsl
outsl
popa
call
scas
xor
push
inc
sbb
rorb
jle
pop
nop
mov
pop
orl
pop
lods
out
sbb
aaa
add
and
aad
or
and
mov
fsubs
xor
dec
insb
loope
xchg
iret
push
popf
cmp
mov
icebp
cltd
inc
mov
lcall
sub
stos
jbe
pop
daa
or
pop
mov
int3
pop
outsb
pop
jge
pop
out
pop
push
cltd
xchg
push
ret
into
cwtl
popa
call
or
sbb
imul
cwtl
les
cmp
negl
push
in
cmp
sbb
andl
imul
clc
inc
decl
fisubs
aad
stos
dec
cmp
jle
shlb
enter
out
dec
ja
dec
cmp
js
mov
mov
cld
ss
repz
jno
pop
mov
ja
mov
dec
cmp
jae
movsl
add
jp
or
mov
mov
push
sub
mov
insb
jmp
xchg
pop
cmp
test
cmp
mov
pushf
stos
fdivr
scas
jo
sub
fcoml
cmpsb
rcl
push
ss
fchs
jge
sub
hlt
cmp
lcall
flds
push
loopne
fs
jmp
sti
xchg
push
jp
int
xchg
jb
pop
leave
leave
jnp
lcall
xchg
jmp
dec
xchg
imul
iret
bound
jg
mov
jnp
jns
sub
mov
fisubrs
das
push
or
dec
popf
inc
dec
adc
pop
push
pop
mov
rol
fnsave
shll
adcl
adc
js
sbb
xor
sub
xor
je
jo
pop
cmpl
jb
aam
adc
xor
test
aad
push
sbb
jg
pop
xor
pop
xchg
sahf
movsl
push
mov
push
lcall
leave
mov
push
dec
call
pop
adc
mov
push
aam
xchg
pop
push
jbe
outsl
jp
or
daa
pop
add
and
jb
pushw
stc
inc
sub
nop
arpl
xor
lcall
insl
dec
fdivrs
lahf
jae
and
cmp
xor
scas
jns
sbb
xchg
popa
stc
push
daa
dec
add
gs
and
xchg
sbb
mov
sub
ffree
shlb
mov
repnz
mov
pop
inc
add
xchg
aaa
movsb
daa
test
sbbl
or
popf
jle
sbb
mov
fimull
or
sub
inc
jo
sub
imul
sahf
movsl
add
imul
jle
and
outsb
jmp
pop
pop
movsb
fnsave
adc
fwait
jle
inc
mov
outsb
icebp
mov
mov
add
cli
cwtl
pop
adc
push
daa
dec
add
mov
cmpsb
pushf
mov
dec
aas
jg
aaa
fcomps
movsl
or
aaa
jno
adc
cmp
and
popl
out
outsb
sbb
lret
jno
js
imull
aaa
int
sub
or
jbe
rol
push
shrl
jmp
out
push
cmp
lret
lods
aad
lret
dec
adcb
and
dec
outsl
mov
data16
add
test
loop
dec
shll
insl
out
insl
add
sarb
pop
pop
and
xor
je
dec
idivb
ss
fincstp
pusha
repz
inc
sbb
rorb
out
xchg
sub
jbe
sub
mov
iret
repnz
call
inc
lret
sub
shll
jne
dec
push
inc
jns
lret
xchg
test
mov
or
out
movsb
test
cmc
leave
mov
mov
inc
and
push
out
jno
lret
insb
icebp
jnp
mov
sbb
call
jl
stos
push
lret
lcall
movsb
ss
push
cwtl
fcmovnu
lret
in
mov
jmp
dec
aad
pushf
xchg
xchg
ss
cld
and
sbb
mov
leave
xor
aas
stc
dec
pop
jl
mov
gs
mov
dec
push
ret
adc
and
fisttpll
xor
cmpsl
data16
call
outsl
xchg
mov
sbb
jmp
sub
scas
shlb
mov
xchg
cmp
dec
ret
pop
lods
outsb
ficoml
adc
or
shl
outsl
sbb
scas
mov
aam
fstl
aad
mov
shrb
sbb
mov
xchg
fs
cmp
pop
int
imul
pop
adc
sar
push
sub
cs
pop
out
adc
add
lret
out
adc
les
scas
adc
cmc
pop
or
lods
dec
dec
ja
and
std
mov
test
pop
mov
popl
pop
and
or
addr16
repz
int
out
int3
jo
insb
pushf
or
jecxz
add
dec
aam
into
out
adc
lods
mov
mov
xchg
mov
or
pop
rolb
xchg
mov
sub
jg
add
mov
mov
adc
mov
rcl
mov
jo
sarb
ljmp
jmp
test
dec
movsl
xchg
xor
jp
ret
xor
sub
cltd
jbe
mov
mov
and
bound
test
xor
cmp
call
daa
out
leave
ss
cli
out
aaa
xchg
mov
out
movl
mov
jg
dec
loop
movl
pop
repnz
and
push
pop
jns
aam
int3
sbb
jmp
inc
or
sbb
sub
or
adc
test
or
inc
lahf
in
lea
cld
cmp
into
ror
mov
jb
push
sub
fsubrl
mov
lcall
add
decb
adc
cmp
adc
rol
push
mov
sbb
js
incl
cltd
fsubr
mov
cli
jp
sbb
adcl
lcall
cld
pop
mov
dec
xor
mov
mov
ss
sub
nop
mov
push
aad
in
negb
loopne
fisubrl
rorl
pop
xor
insb
mov
pop
xchg
scas
xor
movsb
jp
loope
cmp
inc
add
push
aad
jl
sbb
sti
xchg
out
adc
pop
adc
dec
jbe
pop
xorb
xor
lods
notb
lods
pop
out
fstps
pop
repnz
test
sahf
jg
cmp
cli
dec
mov
hlt
mov
push
mov
scas
mov
shrb
xorl
cld
cmpsb
xchg
and
cld
lods
cmp
add
in
adcb
insb
cltd
mov
ss
shlb
int3
jle
push
or
mov
mov
sub
scas
lahf
scas
mov
jmp
mov
rcl
adc
shl
pop
mov
jl
ja
mov
bound
inc
dec
push
sbb
loop
popf
dec
mov
pop
push
leave
pop
test
mov
fs
out
int
mov
roll
call
jecxz
xor
jle
pop
js
shlb
fcompl
les
mov
pop
mov
inc
jmp
mov
sub
or
push
and
push
add
push
push
jl
mov
xor
imulb
and
xor
sbb
andb
int
push
pop
cmpl
jle
aam
lods
mov
stos
xor
pop
mov
ret
xor
and
ficoml
rorl
call
mov
addr16
out
add
in
inc
add
int
xlat
pop
xchg
sbbb
jmp
addr16
cli
repnz
cmp
adc
aam
fnsave
cmpsb
and
cmp
test
mov
push
mov
xor
xchg
push
mov
mov
jo
mov
shrl
mov
pushf
xlat
in
cmpsb
push
aam
loop
jecxz
addr16
test
sub
les
int3
sbb
jg
outsl
addr16
jae
jne
adc
stc
inc
mov
jnp
idivb
mov
lds
mov
dec
sbb
xlat
out
out
jmp
insb
inc
adc
adc
jbe
mov
dec
jg
inc
lret
cmp
loop
lods
out
jnp
idivl
imul
or
insb
jg
jne
ss
into
imul
shl
mov
add
xchg
push
add
shlb
or
lods
mov
xlat
add
repnz
add
sbb
adc
inc
mov
jno
sub
enter
mov
adc
lock
bsr
adc
jle
and
in
shll
dec
pop
jns
mov
mov
rcrb
mov
das
cmpxchg8b
inc
dec
outsb
xor
jb
ja
sbb
fadd
cmp
jmp
notb
int
push
pop
bound
in
sbb
jnp
test
and
xor
lahf
mov
mov
daa
sub
outsl
mov
scas
sbb
aad
mov
loope
xor
inc
aad
sbb
fcomi
jecxz,pn
ljmp
cld
int
mov
dec
pop
jle
xchg
jge
mov
jecxz
adc
inc
dec
addb
xchg
mov
les
lahf
pop
leave
outsb
out
inc
inc
xchg
incl
outsb
dec
loop
fcmovb
jge
and
test
mov
sbb
sbb
dec
imul
je
xlat
ljmp
xchg
test
pop
in
movlps
repz
pop
outsl
jnp
and
stc
fdivrs
adc
out
shlb
insl
push
in
aaa
jmp
sbb
adc
mov
jecxz
fisubl
mov
aam
jbe
xor
sub
pop
sub
jmp
jecxz
lds
movsb
push
cmpsb
sub
cmp
mov
xchg
hlt
out
sub
xor
movsb
in
es
sbb
lock
bound
inc
mov
sbb
inc
sub
insl
adc
flds
lea
mov
fsubrs
mov
fadds
xchg
push
scas
mov
jne
cmpsb
sub
test
out
sbb
dec
in
sbb
pop
push
pushf
test
cltd
pop
pusha
mov
or
or
out
shlb
jmp
sbb
repnz
test
add
gs
lahf
ret
lea
hlt
popf
mov
mov
jns
push
movsl
enter
mov
sbb
movsb
or
mov
stc
cmp
mov
push
push
jnp
loop
and
daa
mov
cmp
push
fiadds
in
xor
js
loope
and
jns
clc
bound
xor
lock
mov
fcompl
shl
sub
shll
xor
cmp
les
mov
sahf
jo
inc
imul
xchg
call
pushf
cld
pop
loopne
inc
mov
or
dec
addr16
or
jmp
lock
inc
push
mov
dec
xor
inc
pop
adc
out
mov
es
xchg
repnz
orl
popa
jne
sbb
cmpsl
adc
call
adc
inc
out
cmp
outsb
lret
cmpsb
dec
sbb
dec
enter
call
mov
mov
add
xlat
loop
outsb
fisttpll
int3
pushf
outsl
cmp
jno
dec
lret
push
jecxz
mov
addl
and
lret
int3
jl
bound
push
push
lahf
cwtl
xchg
sub
mov
xchg
cmc
lahf
cmp
addw
inc
and
in
das
into
mov
cmp
fiadds
jg
cwtl
mov
shr
pop
jne
into
mov
lods
sbb
cmp
xchg
dec
or
mov
xorb
jg
sbb
out
repnz
mov
xor
add
stos
sarl
mov
cmp
ret
mov
enter
ds
adc
test
js
xchg
cwtl
andb
lods
movl
jb
dec
mov
xchg
out
cmp
inc
mov
jp
sub
in
xor
outsb
and
test
xchg
les
or
mov
jl
test
ret
fstpt
push
aad
in
mov
lds
roll
rcll
xlat
xor
movsb
and
push
iret
mov
mov
aad
jns
mov
inc
sarb
xchg
cwtl
jns
pop
dec
xchg
adc
lahf
pop
insl
sub
xor
pop
aas
insb
mov
mov
sbb
in
pop
mov
test
loope
jno
bound
mov
jp
sub
popa
mov
mov
outsb
inc
rclb
out
push
inc
rcl
add
sub
add
data16
enter
jb
mov
xor
int3
divl
stos
jmp
insb
xlat
adc
bound
addr16
js
and
out
xchg
jecxz
push
movsb
sub
cwtl
jl
sub
ss
fisubl
xchg
mov
or
or
cmpsb
lret
outsb
xchg
xor
xlat
sbb
icebp
out
gs
dec
lret
mov
dec
cwtl
cmp
and
in
mov
mov
mov
pop
inc
fucomp
jmp
inc
rclb
insb
or
pop
cmp
movsb
mov
mov
icebp
rorl
scas
and
fsubr
adc
aaa
jge
and
imull
and
jecxz
jno
bound
mov
push
lret
lds
dec
cmpsb
mov
xchg
rclb
int3
sub
loop
adc
sub
aam
mov
xchg
dec
dec
test
mov
lock
dec
pop
sahf
dec
imul
cltd
fidivs
mov
movsl
addl
xor
mov
cli
pop
gs
xor
push
jb
mov
es
addr16
cmpsl
addr16
stos
jns
sub
xor
and
insl
push
sbb
mov
jae
or
lahf
jg
out
fcomp
or
xchg
inc
in
xor
fsubrs
out
enter
ror
adc
jns
jg
icebp
out
and
push
lahf
fildl
ret
cmpsl
push
lock
push
jne
push
adc
sub
gs
sbb
sub
mov
ja
jne
push
dec
push
xchg
cmp
repz
inc
xor
xor
xor
sub
pop
call
push
hlt
push
or
mov
inc
vfnmadd231ss
mov
sarb
mov
sbb
jle
popf
xorb
sbb
push
fadd
pop
inc
mov
jno
lret
push
leave
mov
or
fsts
cmpsb
push
insl
cmpsl
xchg
mov
push
sub
mov
mov
inc
cmc
sti
pop
popf
fadd
leave
popf
pop
ficomps
fdivrs
shlb
ss
in
bound
fldl
test
or
jle
lock
mulb
testl
lock
or
fs
inc
cmp
cmp
test
push
and
cmc
and
or
leave
xchg
cmp
add
dec
push
shrb
add
mov
cmc
cmp
in
mov
ss
in
ret
insl
xlat
in
mov
mov
ds
add
jae
cmp
jb
jg
mov
mov
xchg
mov
jnp
xchg
mov
cs
and
jmp
shlb
xor
mov
and
push
addr16
or
aad
pop
mov
out
fistps
mov
lret
stc
clc
mov
jb
nop
out
leave
add
mov
fisttpl
mov
in
ret
das
shll
and
jns
mov
pop
in
es
push
enter
aad
pusha
mov
loop
cmp
adc
in
aam
sbb
in
mov
hlt
scas
and
add
push
jne
push
push
lret
push
mov
dec
cld
mov
in
add
cmpsl
mov
add
or
sbb
cwtl
aam
fistpl
test
cmp
in
mov
pop
insb
inc
cld
dec
and
xor
jl
lds
cwtl
test
mov
sahf
fsubrl
and
imul
mov
inc
daa
orl
inc
movsl
dec
test
adcl
popa
lock
jl
sahf
pop
cmp
repz
jae
push
xor
in
std
les
repnz
dec
popa
xchg
movsb
pop
xchg
xorl
adc
fisttpll
and
icebp
testl
lret
lea
clc
pop
adc
push
pop
and
lock
mov
test
cmpsl
outsl
test
pop
pop
ret
jmp
dec
and
cmc
test
test
notl
inc
adc
shlb
test
inc
test
pop
test
add
inc
mov
mov
fildll
sub
sub
cmp
in
cmp
scas
cmc
adc
pop
pop
out
jg
mov
pop
stos
jecxz
cs
mov
add
call
fs
push
out
movsb
pop
cmpsl
xchg
dec
psubsb
adc
imul
roll
cmpsl
dec
jmp
mov
test
jbe
or
in
aam
xchg
push
pop
mov
and
cmpsb
and
cmp
aas
ja
ds
sahf
inc
jge
jg
jne
mov
sahf
das
sub
push
jmp
sub
mov
jp
movsl
dec
xchg
mov
inc
leave
or
jne
push
leave
fcompl
cwtl
cmp
test
inc
mov
pop
sarl
jg
xadd
sub
call
lock
ljmp
push
shlb
aaa
lds
aas
dec
or
cmc
jo
xor
push
inc
cmc
dec
jecxz
popf
cmp
loope
cmp
add
stos
bound
adc
outsl
out
hlt
pop
ror
out
imul
mov
rcl
addl
insb
sbb
xorl
mov
mov
mov
shr
clc
test
cltd
xchg
xor
aad
das
inc
dec
sbb
push
mov
mov
sahf
out
repz
movsb
data16
mov
fldl
in
jg
lret
sbb
mov
mov
incl
and
jo
call
mov
and
fneni(8087
push
lret
jle
push
fs
dec
ret
mov
xor
xorl
popf
add
jmp
stc
hlt
adc
jge
jmp
sub
fstpt
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
sti
jmp
sti
fcmovne
lret
fstpt
mov
jnp
dec
dec
pop
cmp
sub
sbb
or
sti
out
call
fidivrl
mov
jp
dec
dec
pop
cmp
xor
pop
or
sbb
jmp
sti
push
lret
jecxz
mov
or
fs
xchg
shl
dec
dec
sub
mov
hlt
in
out
testb
sbb
jne
or
push
xor
jbe
inc
mov
mov
push
ficoml
cmp
sbb
push
jp
dec
xchg
mov
inc
pop
push
ljmp
push
xor
and
adc
add
jae
arpl
stos
into
mov
out
out
push
lds
pop
mov
out
test
bound
push
jns
mov
jle
adc
sahf
loope
mov
sub
or
lods
and
xchg
arpl
xchg
fistl
lods
fisubl
push
push
inc
cmpsl
mov
fdivrs
pop
movb
fwait
inc
mov
xchg
adc
stc
sbb
jne
or
mov
or
sahf
mov
movb
dec
test
fwait
lret
or
outsb
sub
cmpsl
mov
adc
lahf
mov
sti
lret
and
inc
mov
icebp
cmp
adc
jne
fwait
push
sub
ljmp
out
testb
or
mov
xchg
mov
mov
push
repnz
lret
jg
mov
outsl
scas
jle
push
lret
dec
enter
add
adc
add
push
sub
cmp
outsl
sbb
icebp
pop
xchg
test
mov
cmp
arpl
inc
inc
scas
or
adc
pop
xchg
stos
mov
inc
lcall
push
ficoml
sub
cmp
or
sbb
push
jp
dec
xchg
stos
mov
inc
lcall
push
ficoml
sub
stc
mov
inc
push
or
clc
add
test
sub
xchg
push
aad
xor
jo
cmp
outsl
mov
adc
stos
lret
les
lock
sub
js
lods
clc
xor
inc
int3
jno
push
pop
lea
xchg
dec
pop
movsl
rcl
push
mov
int3
pusha
packssdw
mov
pop
mov
mov
inc
sbb
std
add
xor
scas
rorl
mov
mov
ss
mov
add
mov
inc
mov
lret
push
ja
xchg
je
out
xorl
xlat
lock
mov
dec
out
adc
cld
xchg
repnz
inc
leave
inc
sub
xchg
hlt
out
arpl
jbe
sbb
jge,pt
aas
jae
sub
adc
ja
pop
repnz
mov
xchg
adc
bound
push
push
cwtl
leave
out
gs
inc
ljmp
icebp
test
and
jl
inc
sub
xchg
add
cmp
fs
dec
sarb
arpl
jb
and
jg
mov
push
rorl
sub
repnz
outsl
inc
hlt
fcmovne
adc
or
mov
adc
sti
lock
adc
ret
shll
adc
mov
fisttpll
dec
js
mov
dec
fadd
pop
pop
cwtl
cmpsl
imul
jge
lret
jae
jo
popf
sbb
push
xchg
inc
cmp
int3
sub
int3
inc
outsl
mov
sarb
jmp
pop
jmp
jecxz
ss
adc
mov
mov
cmc
push
jns
cmpsb
sti
sbb
fisubrl
xchg
dec
sub
dec
stos
and
add
xchg
xlat
xchg
outsl
cltd
insb
pop
lea
clc
mov
into
repnz
jecxz
adc
add
lods
orl
mov
dec
test
mov
xchg
ljmp
ljmp
cltd
xchg
loopne
add
sbb
jecxz
mov
clc
addr16
mov
out
sbb
outsb
xchg
loopne
dec
out
out
aam
fistpl
and
add
testb
nop
sub
and
pop
fs
cmpsb
pushf
fisttpll
push
shlb
repz
mov
inc
jbe
jmp
mov
ret
xchg
adc
mov
dec
repnz
js
fwait
std
xchg
mov
mov
cs
xor
stos
jnp
movsb
jle
xchg
aaa
xchg
xchg
mov
orb
xchg
roll
xor
xor
out
push
pop
imul
ja
adc
dec
adc
mov
subb
adc
add
je
sbb
push
cmp
insl
data16
sbb
mov
fdivrl
bound
push
mov
jnp
add
jbe
push
inc
add
stc
push
ljmp
jp
outsb
pop
push
pusha
or
hlt
std
push
push
sbb
push
push
jecxz
out
xchg
sbb
das
jg
mov
cmpsb
pop
push
or
mov
iret
mov
enter
xor
cltd
or
jecxz
mov
sub
push
jmp
ss
lds
dec
cld
imul
fisttpll
sbb
mov
fcmovnu
cmp
sti
fs
repz
adc
aas
mov
jno
es
adc
push
xchg
dec
cmc
dec
inc
out
mov
cmc
xchg
dec
push
enter
jne
push
xor
xchg
lret
and
iret
push
nop
imul
mov
push
push
adc
sbbl
adc
mov
lea
aas
subl
or
repnz
dec
scas
sbbb
js
mov
sbb
cmpsb
mov
xchg
inc
mov
push
lock
mov
jno
insb
addl
and
setl
int3
dec
test
sbb
rorl
cld
lods
aam
dec
maxps
adc
lcall
fdivr
iret
aas
cmpsl
xchg
adc
pop
or
xchg
dec
mov
mov
fistpl
sub
inc
lret
addl
fidivrs
out
jg
frstor
mov
jge
push
out
jb
jo
mov
cmpsl
xchg
jb
movsl
mov
inc
cmp
dec
push
fidivl
test
pop
push
pop
and
sahf
cmpsl
call
jge
testl
adc
jae
push
mov
dec
cli
jne
sbb
adc
sbb
or
ljmp
cmc
and
and
add
pushf
dec
cld
stos
xor
mov
push
lock
mov
dec
and
xchg
cmp
ss
cltd
mov
stos
fnstenv
ss
lods
shrb
jmp
adc
stos
lret
rolb
sbb
jbe
int3
ret
pop
dec
mov
gs
mov
xor
inc
fidivrl
scas
lock
mov
or
and
outsb
mov
pop
xchg
inc
int3
test
sub
addr16
pop
das
outsl
pop
popa
loop
mov
cmpsb
lods
outsb
adc
shlb
sub
test
push
addr16
jne
pop
mov
add
pop
inc
js
lahf
popf
xchg
bound
arpl
lock
out
add
xor
cmpsb
dec
test
stos
xchg
sub
adc
xor
and
pop
and
push
enter
inc
jp
ds
jge
xchg
mov
clc
into
clc
xor
stc
or
loopne
insl
and
rcll
mov
mov
ds
das
dec
das
je
enter
cwtl
out
and
dec
push
xlat
xor
jns
pop
adc
out
mov
lock
out
mov
cltd
orl
test
cmpsl
das
sbb
lret
sub
xor
in
jne
adc
sbb
adc
sub
test
into
insl
jne
aad
push
push
push
and
test
xorl
inc
xlat
or
scas
leave
xor
out
mov
sti
dec
imul
outsb
push
leave
mov
xor
push
sbb
dec
jbe
xchg
xchg
arpl
xor
test
sub
dec
test
lds
sbbl
stos
pop
xor
popa
adc
push
mov
xor
cs
sub
daa
ret
add
push
dec
fidivl
pop
sbb
in
pusha
outsl
fstpl
mov
cmc
into
stos
fmuls
aad
mov
mov
sub
lret
cmc
data16
imul
call
push
movl
cmp
push
jne
cwtl
or
lret
push
dec
mov
cli
into
push
fcomi
cli
cltd
mov
in
mov
imul
fildl
push
lret
add
add
inc
sub
je
ret
std
loope
and
es
mov
hlt
js
xchg
imul
push
sbb
or
mov
leave
mov
test
gs
popf
inc
dec
in
loop
mov
push
aad
xchg
mov
mov
xchg
jmp
test
in
movsb
add
mov
pop
or
out
pop
sub
out
dec
xor
out
rol
xchg
mov
push
push
adc
daa
clc
jle
mov
xor
jbe
sbb
jb
or
cmpsl
scas
bnd
dec
sub
push
adc
sub
shlb
sub
push
and
fsubs
mov
sub
int
xor
pop
push
imul
jge
push
cmp
mov
out
sbb
pop
loope
mov
rcrl
push
shlb
mov
mov
daa
and
and
ret
adc
pop
pop
jg
mov
insb
aad
push
mov
and
movsl
sbb
jmp
jle
daa
add
test
xchg
je
test
jge
ret
sbb
stos
lea
mov
sbb
shl
movsl
sbb
jb
sbb
mov
rcr
xlat
jbe
lret
scas
push
outsl
je
mov
iret
imul
dec
int3
xor
sub
cmp
add
mov
sub
sub
cld
cld
loopne
dec
fidivrl
push
xchg
dec
rolb
or
cmp
mov
aad
les
mov
jns
in
pop
sub
ds
shlb
push
testb
in
push
enter
aam
lock
jmp
add
nop
cwtl
es
cmp
push
mov
mov
out
test
xor
and
jle
dec
fisubs
and
and
jb
mov
fnstsw
push
sti
lahf
lea
mov
bsf
xchg
leave
iret
shll
andb
fidivl
rcll
cld
stos
cltd
xor
dec
addl
and
lcall
or
jbe
lcall
push
aad
inc
jnp
lahf
scas
adc
xchg
and
xchg
cmp
pop
rcl
lea
js
arpl
stc
mov
jge
cmc
lret
jl
lds
and
aam
push
std
les
ficompl
mov
hlt
cmp
fyl2x
lret
mov
mov
stos
push
hlt
push
sbb
push
mov
rorl
push
std
pop
mov
icebp
mov
cmpsb
adc
test
cmp
add
xchg
jp
add
pop
cmpsl
sub
xor
xchg
out
jg
popf
pop
hlt
pop
ljmp
xchg
iret
xchg
loopne
scas
pop
aaa
mov
jns
notb
in
add
ja
negl
ficoml
sbb
push
scas
sub
rolb
cltd
push
int
push
push
data16
lods
mov
push
shl
out
mov
dec
mov
push
mov
int
adc
loopne
cs
clc
mov
shlb
xchg
call
inc
xlat
xchg
push
sub
xchg
xor
mov
push
and
cmc
adc
ficomps
outsb
xchg
and
sbb
and
push
pop
add
dec
scas
push
fwait
cmp
jae
jp,pt
cli
mov
cs
ljmp
xchg
dec
cmpsb
cmp
scas
out
push
jo
ficoml
bound
fidivl
inc
pop
sbb
in
mov
inc
ja
and
daa
push
add
add
movsl
lods
pushf
pop
inc
push
js
cmp
popf
fistps
xchg
mov
jmp
ret
int
mov
push
jge
faddl
dec
inc
sub
push
cmpsl
data16
mov
cmp
out
mov
mov
mov
push
lcall
xor
cwtl
xchg
sbb
and
das
sbb
outsb
adc
lds
scas
lock
fildl
fmul
sub
ss
adc
pop
sti
repnz
cmpsb
lret
test
inc
cli
and
add
jo
pop
in
dec
push
out
jp
jo
cmc
jns
in
push
inc
out
es
jecxz
adc
or
in
pushf
dec
mov
pop
outsb
mov
dec
ficomps
icebp
xor
std
jnp
inc
push
mov
cli
and
xlat
xchg
jmp
iret
mov
add
andb
push
daa
adc
cmpsl
adc
pop
mov
sahf
sarl
fistpl
das
sbb
dec
insl
hlt
fisubrs
dec
or
ds
mov
cmp
mov
adc
add
dec
xor
lods
les
inc
icebp
xchg
xchg
fs
push
cli
mov
add
add
sub
cmpsb
test
addr16
rorl
icebp
rol
inc
jecxz
jb
leave
frstor
xchg
cmp
sub
xor
pop
mov
test
jecxz
and
mov
fldcw
mov
pop
push
jle
add
pop
into
inc
xor
wrmsr
rclb
and
aas
cli
cld
outsl
push
add
push
or
sahf
inc
and
cmp
aad
bound
cmp
cwtl
fldt
xor
sub
mov
loop
mov
push
dec
repz
enter
jle
ret
repnz
mov
pop
stos
addr16
jmp
jns
js
es
inc
dec
sub
popf
dec
nop
push
cmpsl
lret
adc
add
mov
in
leave
push
aad
jnp
inc
inc
imul
mov
add
mov
inc
mov
mov
jo
lret
movsb
xchg
jmp
pop
jb
repnz
mov
cmp
inc
lret
mov
cmp
cli
rorl
rorb
pop
and
mov
adc
mov
sub
js
sub
mov
pop
lret
mov
cmp
mov
sbbl
push
ret
or
scas
cmp
cmp
ss
or
lcall
sbb
clc
lds
ja
in
pop
cmp
add
sbb
jle
es
or
jp
mov
adc
mov
jmp
scas
scas
movsb
sbb
dec
sub
pop
pop
sub
out
pop
loop
add
popf
test
stos
mov
incl
push
test
and
inc
xchg
cmpsl
xor
mov
repz
lahf
sbb
add
fwait
mov
jle
cmc
pop
sub
mov
cmp
jns
jge
repnz
cmc
int
push
enter
testb
mov
xor
test
jecxz
push
and
mov
inc
inc
scas
bound
outsl
enter
sbb
out
int
enter
jb
pop
cld
aaa
das
jp
push
es
push
in
xchg
mov
rcl
pop
mov
rclb
leave
lahf
out
fimuls
push
sub
add
scas
lret
ret
nop
xchg
pop
mov
adc
push
addb
cmp
jae
xchg
mov
gs
xor
imul
int3
xchg
je
int
scas
pop
jnp
ret
mov
and
or
fimull
incl
ret
sbb
stos
jp
scas
je
xchg
icebp
pushf
add
xchg
fsubl
push
gs
mov
xchg
pop
sti
xchg
ja
data16
inc
shll
mov
vmread
sahf
mov
add
jl
sar
dec
gs
sub
outsb
xchg
cmp
js
ljmp
fwait
mov
and
adc
cmp
jg
mov
inc
jnp
xor
mov
mov
cmp
and
fs
in
sbbb
push
leave
std
rol
xchg
movsb
mov
insl
jge
out
mov
jge
fnsave
xchg
xchg
repnz
stos
sbb
imul
sub
outsl
aad
std
rorb
inc
sub
cmp
xchg
cmp
sarb
test
daa
cmp
adc
push
addps
repnz
xor
cmp
into
add
pop
mov
loopne
or
pop
adc
lcall
adc
dec
cmc
push
in
cmp
sahf
cld
inc
cmc
out
sub
jbe
js
jb
incl
aad
test
sub
into
bound
cmp
aas
pop
cwtl
pop
sub
xor
test
sbb
cmp
mov
js
and
dec
lret
pop
jno
std
gs
push
xchg
out
arpl
enter
out
jg
lcall
jg
divl
jbe
mov
sbb
xchg
in
mov
into
aad
sbb
andb
hlt
sub
arpl
add
and
mov
sbb
or
int3
sub
sahf
cmp
or
popf
popf
inc
mov
jge
leave
aaa
sub
out
popa
outsl
xchg
pop
outsl
arpl
mov
mov
xlat
adc
lret
cmp
frstor
shl
lods
push
mov
add
frstor
loop
mov
cmpsl
adcb
sahf
sub
mov
rorb
fadds
and
pushf
insl
cmpsl
mov
out
sbb
aam
bound
out
or
jo
dec
inc
fstpl
enter
pop
add
sub
push
sbb
push
sub
adc
mov
jmp
bnd
jnp
dec
aad
jle
repz
push
cmp
popa
lahf
push
cmp
inc
inc
movsl
loopne
loope
das
cmpsl
fyl2xp1
mov
sbb
jmp
push
js
mov
movsb
inc
cld
inc
jg
mov
push
mov
add
out
lods
sbb
pop
sub
stos
cltd
je
mov
mov
shrb
ror
pusha
mov
mov
loopne
xchg
fisubl
push
xor
add
dec
xor
mov
sarb
add
fwait
xchg
loope
xchg
cmpsl
jmp
aaa
jnp
xor
lds
and
lods
test
lods
mov
js
stos
add
cmp
mov
aad
dec
lea
imul
cmp
clc
pop
mov
mov
std
aaa
sub
es
movsb
cmpsl
add
imul
arpl
mov
jp
mov
inc
ljmp
add
ret
add
orl
gs
scas
test
xchg
push
movsl
pop
fdivrl
mov
loope
int
pushf
movsb
cli
add
ljmp
stos
dec
outsl
inc
push
jmp
and
pop
cmp
and
fwait
sub
adc
call
icebp
mov
fwait
pop
outsb
fisubrl
arpl
xchg
inc
mov
cmp
test
mov
shlb
rorl
mov
subb
mov
jl
xor
mov
lahf
mov
loope
mov
add
fstpt
sahf
sbb
mov
mov
and
jmp
negl
in
not
jns
jbe
shll
out
ljmp
jge
movsl
sbb
call
mov
flds
pop
add
pop
push
inc
pop
add
cld
fisubrs
hlt
rclb
xchg
shl
daa
stos
dec
mov
lret
out
cmpl
es
mov
mov
test
pop
jmp
add
pop
xorl
or
addr16
vpermq
fists
fdiv
bound
or
adc
sub
mov
push
add
adc
xchg
inc
sub
rcr
das
jns
les
inc
fldcw
push
imul
pop
push
aam
cmp
mov
cmp
pop
mov
inc
jg
jmp
nop
cmc
sbb
in
inc
and
mov
outsb
push
push
push
cmp
mov
pop
add
push
loop
mov
stos
imul
pusha
xchg
aam
icebp
pop
in
add
pop
arpl
sahf
adc
outsl
xlat
gs
fisttps
and
cmp
cmpl
pusha
cmp
bound
clc
mov
mov
mov
out
stos
lds
iret
xchg
lods
loope
fdivrl
jbe
lea
outsb
shrb
stc
fisubl
pusha
xchg
inc
sbb
push
mov
sub
in
cmpsl
xchg
cmp
adc
jae
or
dec
pop
push
mov
lock
es
mov
into
pop
push
sbb
xchg
push
imul
dec
add
add
in
push
sbb
jecxz
fldl
rol
jmp
lods
js
cmp
outsl
lret
xchg
and
aas
js
dec
mov
mov
shll
pop
sub
cmp
jno
lahf
and
pop
mov
fdivs
or
cltd
xchg
sarl
stos
mov
ljmp
imul
lock
and
jne
xchg
mov
loop
ffree
jo
mov
inc
jmp
test
jns
cmpsl
dec
lcall
jnp
popf
mov
xchg
jne
fimuls
cmc
jb
repnz
imul
les
pop
sub
lret
xor
pop
fsts
cmpsb
jmp
and
add
stos
dec
out
push
bound
xlat
push
xor
xchg
dec
cmpsl
je
ljmp
push
rclb
mov
xor
pop
dec
or
mov
push
cmp
sub
xor
lds
lods
cs
rorl
mov
jno
lret
movsl
daa
sbb
pop
push
pop
arpl
cli
xchg
jmp
dec
cmpsb
stc
mov
out
sub
inc
lcall
or
sbb
mov
add
stos
ja
mov
dec
mov
dec
movsl
add
test
jae
lods
jno
daa
sub
sub
dec
ljmp
movsb
enter
imul
mov
mov
pusha
xchg
pushf
mov
aaa
mov
xchg
pop
cmp
bound
arpl
push
ret
hlt
jnp
push
adc
dec
clc
push
mov
xchg
sbb
lock
dec
xchg
stc
out
pop
push
ret
arpl
lods
icebp
sub
lods
sub
cmpsl
sub
push
mov
sbb
cmpsl
xchg
mov
enter
mov
pop
add
xor
xor
inc
or
jp
mov
mov
loopne
insb
icebp
jne
loope
ret
jae
cltd
cmp
xchg
ljmp
xor
xchg
mov
xchg
jecxz
addr16
sbb
js
jp
pop
jno
in
inc
jno
pop
lock
loope
daa
jae
pop
daa
xchg
das
mov
sbb
pop
nop
stos
inc
mov
imul
in
and
shll
sbb
mov
xchg
dec
fdivr
pop
lock
call
sub
and
sub
lods
mov
sbb
push
jp
dec
xchg
stos
mov
inc
lcall
push
ficoml
sub
cmp
or
sbb
push
jp
dec
xchg
stos
mov
inc
lcall
push
ficoml
sub
cmp
inc
sbb
push
jp
dec
xchg
stos
out
jbe
inc
lcall
push
jmp
push
out
idivb
sbb
push
jp
lret
xchg
push
inc
fsubl
inc
lcall
stc
and
and
inc
inc
adcb
inc
xor
and
loope
shll
xchg
push
push
inc
inc
xor
and
adc
das
out
out
fxch
shll
xchg
dec
lret
pop
aaa
das
add
imul
icebp
mov
mov
loop
lret
in
xor
xor
xchg
rol
jp
push
pop
xchg
sahf
sub
outsb
mov
divl
mov
sbb
es
xchg
out
xchg
jae
iret
sbb
out
mov
xchg
sbb
mov
lcall
frstor
pop
mov
rorb
mov
pop
pop
xchg
inc
xchg
jno
popa
lahf
push
bound
and
pop
mov
out
jecxz
cmp
dec
movsb
cmpsb
sub
outsb
xchg
cmpsl
jmp
fldt
and
idiv
not
and
dec
or
mov
xchg
leave
jle
shl
popa
push
add
mov
xchg
stos
repz
in
jge
jmp
std
jg
push
and
and
adc
xchg
out
icebp
decb
rcr
std
scas
lea
mov
jno
push
xor
inc
dec
pop
fs
inc
divb
mov
into
in
jmp
sbb
pop
daa
cmp
ss
push
js
xor
addl
loopne
loop
adc
or
jle
and
adc
add
icebp
out
rol
shll
xchg
push
push
inc
inc
xor
and
adc
add
icebp
out
rol
shll
xchg
jmp
push
inc
sub
ret
xlat
mov
fistl
push
repnz
leave
call
test
mov
jmp
adc
sub
cmp
andl
into
test
popf
mov
lret
fcoms
je
xor
hlt
dec
sti
mov
and
rorl
pop
lcall
and
cmp
jns
inc
pop
leave
loopne
std
inc
add
pop
insb
dec
dec
insl
add
lods
lods
leave
mov
push
mov
dec
xchg
test
movsl
and
inc
aam
or
repz
xor
xorb
data16
clc
jecxz
lock
dec
sub
pop
lods
stos
das
hlt
mov
movntps
and
jmp
push
jmp
fcomps
xchg
js
aad
lcall
call
jae
jmp
and
aad
push
jnp
sub
out
push
cwtl
adc
mov
jge
pop
test
int
repz
xchg
in
call
shlb
inc
out
vmovaps
aas
jle
outsl
mov
jo
or
sbb
js
pop
push
fcomps
jbe
inc
bound
inc
popa
ds
xor
sub
icebp
push
aas
push
rcrb
adc
jnp
fs
push
adcb
or
fimuls
mov
mov
and
addl
mov
lahf
aas
mov
std
mov
jl
xor
mov
or
and
xor
loop
mov
testb
mov
subb
xchg
add
je
cltd
sahf
js
inc
push
xchg
lods
jno
mov
mov
cmp
jmp
cmpsl
sbb
sti
jno
in
ss
in
lock
mov
dec
inc
push
jmp
push
testb
movsl
ljmp
das
pusha
fwait
lock
testb
sub
in
pusha
cmovne
je
add
lret
jg
and
stc
sub
adc
jne
test
outsb
sub
mov
cmpsl
mov
insb
sbb
xchg
hlt
cmp
dec
filds
out
addr16
ja
pop
je
outsb
xchg
jle
in
or
push
aam
jno
xchg
loop
sub
push
das
xchg
loopne
out
std
mov
push
add
es
loop
shrl
aaa
fs
fs
fs
cli
cmp
push
popf
sub
orb
pushl
movl
or
das
sub
push
cmp
inc
scas
icebp
mov
and
sub
lcall
xchg
inc
sub
add
push
mov
out
mov
mov
or
jns
mov
mov
pop
frstor
test
aaa
aad
mov
add
out
cmpxchg
mov
lcall
aam
adc
in
sar
lods
fisttpl
lcall
ret
add
inc
test
adc
or
mov
popf
incl
jmp
xchg
rcll
int
movsl
cmpsb
test
out
mov
xchg
mov
ljmp
adc
in
in
or
ds
imul
jl
mov
push
fists
cmp
sbb
sbb
pop
in
inc
out
out
sbb
ja
inc
lahf
seta
mov
jne
or
mov
inc
popf
jp
pushf
xor
ljmp
shr
mov
cmp
or
sti
lcall
cmp
pop
sbb
popf
lods
mov
pop
sub
push
xchg
xor
notb
xchg
in
dec
mov
jns
inc
mov
mov
idivb
ljmp
adc
sub
shlb
lahf
inc
dec
test
mov
dec
pop
and
fdivrs
shlb
fldcw
xchg
inc
pop
sub
cmc
xor
mov
pop
ret
mov
loop
inc
inc
cs
call
notl
dec
imul
aas
and
std
sub
mov
mov
sahf
imul
movsb
ror
nop
cmp
push
fs
shrb
popl
push
inc
rclb
or
adc
jb
sub
push
ss
push
repz
sub
jge
in
adc
shl
sbb
aad
cmp
mov
sbb
inc
push
add
sbb
mov
negb
jle
cmpsl
lea
and
inc
inc
imul
mov
ljmp
mov
add
jno
cmpsb
mov
popa
xchg
aaa
inc
mov
jne
jne
pop
orb
ret
iret
jno
inc
jne
xchg
xchg
shrl
sub
xchg
loop
pop
in
je
push
lods
std
cld
inc
or
ljmp
lock
mov
xor
clc
ljmp
rcrl
ficomps
push
dec
pop
xchg
notb
sbb
pop
sub
sbb
or
fs
stos
and
dec
and
add
enter
jae
lcall
in
rcl
mov
insb
iret
lds
out
xlat
lods
adc
mov
sahf
jge
jae
or
sti
lahf
sub
dec
addb
fildll
jbe
insb
pusha
sbb
xor
imul
nop
mov
ret
add
xchg
sbb
and
js
sub
aas
test
xchg
clc
bnd
mov
faddl
mov
repnz
repz
jp
xchg
add
out
jno
inc
mov
mov
push
insl
loopne
sarl
arpl
gs
mov
sbb
ret
xor
das
mov
insb
dec
dec
inc
mov
sub
test
xor
imul
addl
gs
hlt
daa
sub
push
mov
pop
inc
lds
mov
xor
mov
and
xor
js
xchg
scas
lock
xchg
adc
fldcw
or
jecxz
lahf
add
rcrl
fbld
jo
jae
rcrl
std
push
pop
rcll
push
inc
jg
ret
xor
lcall
iret
mov
loopne
pop
mov
xor
incb
orl
pop
cmp
daa
aam
cmc
test
iret
jae
add
scas
fsubs
scas
loopne
push
push
mov
mov
push
mov
shlb
inc
pop
xchg
xchg
mov
mov
insl
dec
pushf
push
dec
jb
jae
mov
and
xchg
or
add
inc
ja
jbe
push
dec
cltd
inc
pop
sahf
pop
or
add
xlat
xchg
pop
data16
insb
ds
aam
ds
cmpsb
ss
aaa
dec
les
push
test
jg
test
cltd
mov
iret
addr16
popa
dec
dec
sub
bnd
cmp
sub
mov
aas
or
leave
popf
je,pt
imul
punpckldq
setge
push
mov
and
hlt
std
dec
mov
clc
add
test
enter
gs
add
push
inc
dec
mov
fmuls
aad
pushw
jae
out
jae
fistl
and
test
in
adc
cmpsb
and
decl
leave
xchg
xorb
js
xlat
std
mov
aas
or
cmc
cwtl
fcom
arpl
notb
adc
enter
rclb
jp
int
jl
sub
pop
lods
enter
out
in
xor
mov
mov
cmp
dec
xor
push
dec
in
dec
lahf
mov
mov
ja
and
push
je
stos
fldt
lds
jb
add
sarb
daa
cs
inc
and
lds
pop
or
add
mov
adc
push
pop
sbb
les
push
xchg
add
int
dec
or
into
adc
gs
dec
xchg
into
jbe
push
adc
loop
cmp
push
lahf
std
add
jb
cmp
mov
in
jns
imul
jp
das
xor
jne
push
dec
pop
push
sub
in
into
sbb
mov
shrl
repnz
xchg
nop
pusha
scas
notl
cmpsb
and
iret
sub
sub
cmp
jnp
inc
je
test
incl
leave
mov
lock
mov
sbb
jp
aaa
stos
loop
jl
sbb
mull
outsl
or
pushf
jno
stc
lahf
lods
jo
cmp
ljmp
dec
in
dec
and
rclb
inc
inc
cltd
or
lret
imul
hlt
jnp
or
sti
push
in
jbe
btr
lcall
cwtl
push
pop
decb
lods
notb
dec
mov
mov
ficoms
outsb
in
aam
pop
mov
fs
cmc
cmc
sub
adc
mov
adc
mov
jb
leave
lock
fwait
daa
add
daa
popa
add
scas
mov
call
add
add
inc
push
mov
pop
cmpsl
xor
aaa
mov
and
sti
cmp
les
pop
call
divb
adc
repz
dec
leave
push
ljmp
xor
xchg
xor
pop
adc
pop
fstp
jp
inc
loopne
xchg
cmpsb
jb
ss
xor
in
lretw
movsb
cmpsl
imul
inc
sbb
jg
and
xlat
rcll
cmpsl
mov
cmc
scas
sub
xchg
mov
bound
adcl
insl
cltd
push
aad
xor
pop
test
dec
enter
push
dec
xor
sbb
xor
push
jecxz
pop
sarl
es
sbb
out
fld
adc
xchg
lret
and
into
xor
jno
js
sub
xchg
jp
imul
ja
push
pop
mov
pop
push
push
loop
push
sbb
xorl
shll
pushf
fdivrs
in
clc
js
push
jno
sbb
fcomp
dec
aaa
jo
and
push
fisttps
scas
mov
popf
enter
into
adc
and
rorb
jne
push
stos
fcmovbe
testl
cmp
in
out
ss
sbb
data16
inc
xchg
pop
shll
les
dec
movsb
mov
mov
mov
shl
iret
cmc
lret
loope
xchg
xchg
popf
aad
ds
add
test
js
cltd
xor
std
loop
add
and
adc
jle
es
popf
xchg
subl
aad
push
adc
jno
xor
pop
lret
jp
cmpb
mov
fidivs
and
popf
out
pop
insl
mov
xchg
mov
fisttpl
fisttpll
and
outsb
pmulhuw
sbb
ds
dec
mov
mov
jae
xchg
cmp
cltd
push
das
xor
adc
inc
fsubs
bnd
jb
mov
jg
hlt
imul
dec
dec
mov
cmp
dec
fnstsw
ljmp
add
cmp
sub
dec
cmp
cmp
sub
ss
dec
mov
nop
jns
fcoms
orb
pop
in
movsb
ss
insb
mov
and
xchg
jo
cmpsb
xchg
jb
inc
cmpsb
out
test
xchg
test
sub
pop
out
mov
mov
xchg
ljmp
iret
fistl
stc
mov
loope
and
imul
movsl
sahf
fs
addr16
inc
mov
xchg
addr16
mov
mov
cltd
pop
and
push
imul
lea
shrl
aaa
mov
mov
sub
mov
rcrl
popa
inc
or
faddl
fsubrl
cmc
aam
xchg
xchg
imul
stos
mov
and
mov
dec
rcr
push
xor
mov
inc
xor
ss
xchg
jp
mov
les
pop
rorl
inc
or
xor
inc
mov
shll
and
test
pop
lcall
nop
fnsave
addr16
xorl
pusha
mov
pushl
cld
and
sbb
jl
sub
xchg
inc
in
xchg
stos
test
xchg
stos
sub
ret
inc
out
repnz
mov
in
pop
push
js
addr16
sub
and
jb
jnp
xchg
jo
movsl
sbb
xchg
mov
jae
es
push
icebp
aad
xchg
push
mov
mov
or
pop
xchg
push
dec
inc
pop
sbb
es
lret
popf
mov
sbb
add
pop
add
inc
sarb
sbb
lret
fidivl
sub
cs
dec
imul
outsb
jecxz
mov
fcoms
aam
ret
test
out
push
dec
mov
xorl
rcll
pop
jg
aaa
addb
imul
or
mov
add
adc
mov
out
mov
test
sbb
push
inc
fst
fcoml
pop
dec
jns
cmp
mov
lret
mov
mov
sbb
ja
inc
loope
in
ss
test
outsl
pop
inc
sbbl
sub
or
pop
sbb
xor
data16
push
das
adc
inc
adc
pop
lds
aad
sbb
cs
push
ret
lcall
in
dec
ss
insb
jbe
ss
int
hlt
test
cld
repnz
xor
dec
add
xchg
ss
adc
hlt
cltd
rclb
dec
js
and
cmp
and
es
push
and
dec
xlat
pushf
int
dec
gs
shll
or
movsl
jno
xchg
cwtl
sbb
mov
or
dec
arpl
and
push
pop
pop
sbb
and
pop
mov
pop
pop
inc
in
push
adc
and
jns
movsl
mov
xchg
scas
ret
pop
adc
sbb
ds
dec
cltd
shlb
mov
repz
or
xchg
xchg
push
rcrl
repz
sbb
sarb
bound
test
lods
fistl
lret
pop
push
scas
adc
aaa
sub
mov
aaa
icebp
mov
daa
sbb
out
or
add
insb
ds
cwtl
push
pop
mov
sub
add
dec
mov
mov
add
jo
pop
mov
or
push
add
imul
sahf
xchg
in
add
jno
pusha
xor
bound
loop
fidivl
test
pop
fstp
cmp
dec
push
ds
mov
pop
stc
addl
add
daa
jg
jge
hlt
cltd
ljmp
xor
ss
jmp
or
sti
push
cmpsb
es
mov
inc
and
add
sbb
add
push
icebp
inc
jbe
sbb
pushf
mov
mov
push
and
pop
jnp
cmp
shrl
js
push
rclb
test
fadd
jg
fistpl
push
pop
cmp
push
popa
push
or
xor
pusha
repz
popa
mov
cmp
push
mov
cmp
jmp
iret
xchg
outsb
jmp
test
fsubrl
pushf
cmp
call
cmpl
jmp
jmp
or
push
pop
mov
xor
js
jnp
jle
mov
clc
test
adc
int
test
test
or
mov
add
mov
mov
shl
sub
mov
cmp
fsubl
add
push
mov
imul
mov
sbb
xchg
dec
cs
jge
pop
adc
rclb
push
repnz
jl
cmpsl
iret
inc
jo
jno
lahf
pop
loop
popa
dec
ja
insl
icebp
push
pop
xchg
add
lcall
cmc
gs
inc
pop
push
ret
and
push
fistpl
fldl
inc
mov
orb
and
mov
shll
push
inc
mov
idivl
jecxz
sub
aas
stos
out
xchg
cmp
lods
push
push
mov
jo
sub
lret
jb
jle
dec
or
stos
hlt
pop
jae
inc
jl
jle
into
jecxz
or
decl
or
cmpl
pop
and
movsb
adc
mov
aam
jl
fstl
iret
sub
push
sub
vmaxpd
ljmp
jmp
loop
test
les
shrl
insb
es
xchg
adcb
lahf
int
adc
sbb
ret
pop
xchg
sarb
subb
lock
ss
sti
aad
adc
push
jge
xchg
adc
sti
sbbb
lahf
lock
enter
xlat
xor
aad
xor
pop
jno
xchg
pop
pop
bound
das
jecxz
sahf
push
xchg
lcall
mov
xchg
mov
std
fidivl
dec
jns
adc
cmp
add
jmp
add
mov
gs
xor
push
xchg
xchg
popa
sub
notl
pop
in
and
xor
cli
xor
xlat
shl
js
adc
or
enter
pop
fldt
daa
movsl
lods
aaa
js
imull
packsswb
xorb
imull
pop
es
ftst
mov
pusha
pop
add
xchg
mov
xor
add
dec
or
lahf
loopne
iret
mov
jmp
loopne,pn
dec
cmpsl
mov
aas
and
push
loop
pop
cmp
dec
inc
test
cvtps2pd
jp
or
lahf
xchg
push
mov
push
or
push
into
mov
xchg
mov
push
push
mov
and
cmp
dec
cmp
or
addr16
mov
pop
imul
xor
pop
jo
push
dec
addr16
adc
enter
loope
fstl
add
daa
in
enter
out
push
sbb
jle
xchg
ror
xchg
bound
xor
mov
xor
ljmp
js
rorl
sahf
lds
loop
cmp
xor
jg
xchg
dec
dec
insl
lods
ljmp
jl
aaa
jmp
in
mov
addr16
mov
mov
test
xor
lods
and
roll
faddl
lret
pop
hlt
aaa
push
sub
es
popf
orb
cwtl
jl
testl
mov
setns
scas
hlt
pop
and
iret
negb
sahf
test
push
push
mov
call
cmp
pusha
dec
mov
leave
loope
pop
xchg
adc
mov
add
mov
fiadds
sub
jp
xor
je
and
cmp
xchg
cmp
jp
fwait
pop
lods
je
mov
sub
daa
out
push
out
je
int3
test
jl
out
mov
mov
fsubl
repnz
push
hlt
lea
jnp
xorl
adc
and
add
fs
cs
in
mov
push
dec
ret
add
js
imul
lds
call
cmp
jmp
mov
cmp
ret
sahf
mov
jmp
jb
pop
in
ss
push
rorb
repnz
jnp
or
add
pop
stc
call
scas
inc
xchg
xor
aam
or
stos
iret
mov
enter
adc
jecxz
movsl
jb
leave
daa
push
frstor
out
and
jp
leave
pop
das
fadd
lods
mov
and
scas
loope
push
fidivs
mov
fs
mov
xchg
or
orl
pop
push
xchg
fsubrs
jae
xor
and
fs
xchg
jns
sbb
pop
test
jge
and
mov
mov
mov
popa
fdivrs
in
and
out
push
das
mov
xchg
in
cmp
lahf
inc
or
dec
jno
daa
mov
cmp
add
inc
loope
fldt
sbb
addr16
jo
add
dec
iret
mov
cmc
sub
add
loop
xchg
and
int
xchg
cli
cmpb
js
jno
and
out
std
loop
es
in
push
cld
enter
sub
dec
mov
jbe
inc
push
sahf
bound
xchg
jmp
and
inc
dec
ja
lds
repnz
lds
cmpsb
ret
cltd
xchg
insb
mov
hlt
pop
mov
pop
mov
cmc
stos
in
scas
cmp
inc
fbstp
bound
stos
insb
addr16
push
jmp
push
push
jnp
shlb
aam
dec
sub
cld
sar
mov
push
xor
ret
xor
fidivrs
sub
lods
push
jmp
sahf
mov
arpl
adc
mov
cmp
test
stos
sahf
popf
das
cmp
les
jmp
jae
sub
fs
mov
xchg
test
sub
bound
nop
scas
int
popa
repz
mov
nop
das
add
jp
sbb
jo
test
ljmp
adc
cmp
mov
out
int3
lret
jb
lea
cmpsb
push
in
push
arpl
repnz
cmp
or
cmp
ret
mov
in
adc
mov
or
add
or
mov
push
sub
mov
jmp
or
lea
jge
fbstp
lods
mov
insb
jbe
into
push
mov
out
pop
xlat
loopne
sbb
or
sti
iret
in
orl
imul
pop
push
inc
inc
xor
and
adc
add
icebp
out
rol
shll
xchg
push
push
inc
inc
xor
and
adc
add
icebp
out
rol
shll
xchg
push
dec
inc
inc
xor
dec
push
adc
out
rol
enter
mov
jbe
test
inc
add
and
push
sbb
rol
mov
leave
fldcw
jns
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
mov
sub
pop
xchg
imul
and
jae
arpl
push
jmp
jmp
sbb
sub
pop
jecxz
sarl
push
xor
add
push
sti
inc
jmp
sbb
sub
pop
jecxz
sarl
imul
and
sbb
sub
jnp
push
jecxz
pop
js
outsb
icebp
sbb
ja
loopne
loopne
push
jae
fiadds
das
cmp
pop
sbb
push
cmpsb
fdiv
xor
je
inc
xchg
push
inc
mov
lret
pop
jmp
repnz
fwait
dec
mov
mov
ljmp
xchg
mov
jge
pop
repz
sub
xor
jge
cs
lret
or
push
mov
dec
fcmovnbe
hlt
stc
les
movsb
shrb
ret
fistps
decb
push
or
sbb
or
shrb
loop
fwait
dec
jmp
inc
push
dec
lret
push
sti
sub
cmp
dec
sarl
imul
and
jae
arpl
push
sti
inc
lods
cmc
sbb
jb
jp
push
sbb
aas
mov
sbbb
jmp
xchg
jo
outsl
fistl
scas
or
ja
addr16
jae
dec
mov
push
shrl
inc
push
and
push
faddl
push
mov
inc
mov
cli
pop
adcb
jecxz
sarl
imul
and
jae
arpl
push
sti
inc
jmp
sbb
sub
pop
jecxz
sarl
imul
and
jae
arpl
push
sti
inc
jmp
sbb
and
push
cmpsl
in
sub
fmull
or
shlb
jecxz
xchg
arpl
push
fistps
cmp
cmpsl
push
repz
orl
push
enter
add
pop
fsubs
js
outsl
pop
adc
rcl
out
xor
fscale
ret
xor
lock
sub
sbb
inc
or
out
cli
and
xchg
adc
sbb
fimull
jb
nop
cmp
into
in
stos
push
and
jl
xchg
outsl
loope
jecxz
jp
jnp
in
jns
mov
or
push
loopne
sbb
sub
mov
xor
mov
cmp
nop
dec
sub
mov
sbb
loop
push
cwtl
jae
mov
jl
rcrb
notl
cs
adc
mov
sar
outsl
rol
loopne
repz
jo
pop
xorl
pop
pop
sub
sarb
dec
clc
jmp
adc
int
ret
add
dec
mov
nop
inc
push
mov
sbb
mov
push
insl
test
mov
and
sbb
cmp
ret
aad
data16
ja
or
je
cmp
jbe
sub
stos
test
mov
cs
lods
add
cmp
clc
nop
mov
inc
std
mov
jmp
push
add
xchg
mov
inc
inc
sbb
int3
xor
aas
jecxz
test
ret
out
jmp
sbb
fstpt
pop
and
in
popf
dec
repz
icebp
xchg
dec
fcomps
les
dec
hlt
dec
imul
mov
dec
pushf
jmp
cmp
push
xor
fs
mov
xchg
cmpsb
fisubl
leave
xlat
subl
lds
cmc
mov
shll
lock
dec
add
sbb
adc
ret
nop
pop
cli
add
fwait
mov
ljmp
std
out
fmulp
out
inc
cmpl
out
adc
cmp
push
in
jecxz
mov
dec
orl
outsb
jns
xchg
xchg
adc
les
xor
xchg
movsb
mov
jne
cld
mov
dec
jmp
jbe
fiadds
clc
or
scas
mov
je
sub
xchg
push
push
dec
pop
mov
fs
sbb
and
lret
outsl
bound
sub
cmp
push
cmc
popf
mov
pushf
xor
mov
pop
movsl
out
aam
ret
cmp
mov
adcl
jl
clc
sub
icebp
sbb
out
pop
inc
arpl
lea
push
ja,pn
xlat
and
push
add
xchg
call
xor
ljmp
in
call
cli
mov
mov
ja
flds
inc
mov
ds
xchg
cmc
das
imul
push
pop
dec
ret
ror
sbb
addr16
inc
inc
pushf
push
dec
lods
adc
adcb
in
lret
xchg
ror
jns
xor
movsb
callw
shrb
imul
imul
xchg
add
mov
out
mov
mov
mov
fucomip
into
adc
insb
adcb
ret
inc
add
jecxz
mov
cmc
pop
xchg
out
ucomiss
std
clc
shl
cmp
sahf
lds
lods
pop
out
push
bnd
jle
pop
mov
xchg
test
push
fcoml
xor
xchg
cmc
xchg
push
in
imul
xchg
inc
mov
xchg
in
jecxz
xor
out
jmp
inc
or
inc
xchg
inc
mov
daa
mov
shll
and
mov
and
push
xor
sbb
jns
enter
mulb
inc
mulb
call
test
in
jle
jge
mov
cwtl
xlat
or
mov
cld
and
jno
negl
mov
xor
outsb
test
and
lds
xchg
dec
into
mov
pushw
mov
dec
add
or
pop
es
dec
dec
fxch
xlat
adc
sbb
pop
cld
movsb
mov
or
add
fstpl
lahf
cwtl
mov
leave
les
mov
xchg
shll
and
xchg
ljmp
wrmsr
test
and
movb
dec
push
scas
mov
cmp
add
xchg
xchg
mov
add
mov
pusha
xorb
pop
daa
jo
jg
divl
sbb
scas
mov
in
or
mov
mov
into
ret
ficoms
cmpsl
sub
inc
and
loope
pop
shll
adcl
pop
in
xlat
cli
or
push
mov
cli
mov
into
test
jno
jecxz
jecxz
dec
ja
mulb
mov
repnz
mov
andb
clc
jo
clc
push
jbe
call
jmp
lahf
sbb
push
sub
mov
sub
mov
inc
notl
sbb
es
cmp
and
test
cmpsb
mov
sub
sbb
inc
lret
mov
sbb
aaa
add
movb
inc
ja
clc
cmpsb
or
jbe
test
push
movsl
rcll
sub
and
push
cmp
add
daa
mov
enter
cmp
stos
pop
mov
pop
xchg
stc
mov
jae
pop
fldenv
lods
stos
cmp
into
adc
dec
out
lds
stos
shlb
jbe
mov
adc
jne
pushf
bound
stc
lret
pusha
push
xchg
mov
mov
negl
adc
xchg
jmp
adc
jns
rol
dec
push
incb
pop
mov
lods
jecxz
shll
mov
sbb
js
mov
add
and
push
push
lock
pop
sarl
shl
xchg
xchg
xchg
fldt
xchg
xchg
clc
xchg
inc
cwtl
mov
mov
pusha
loope
mov
lods
mov
push
ljmp
add
ds
push
shrb
xchg
pop
adc
jmp
adc
test
inc
mov
inc
jae
repnz
aam
push
pop
xchg
rorb
pop
test
stos
inc
scas
mov
xchg
mov
xchg
lret
mov
aam
repnz
cs
pop
mov
insb
adc
add
movsl
adc
xchg
insl
test
pop
outsb
inc
pop
mov
dec
pop
test
mov
mov
dec
mov
repnz
jns
in
scas
lods
aad
out
in
sub
push
aas
jecxz
jmp
and
sub
push
jns
lods
and
loop
vmread
out
pop
cs
insl
mov
jg
and
es
add
mov
cs
ret
ja
mov
push
adc
jnp
xor
or
jl
xor
adc
cmp
xlat
scas
enter
cld
xchg
lret
sbb
aad
inc
xchg
testb
aaa
ljmp
js
or
sub
inc
jae
jbe
pusha
icebp
mov
cmpsl
jne
sub
cmpb
mov
jl
cltd
cmp
rcr
pop
push
xor
xchg
vpmacssdd
in
in
scas
push
mov
cmp
int
pop
pop
pop
fwait
jg
pop
test
popa
add
push
stos
push
pop
stos
dec
scas
rol
and
adc
and
cmp
push
dec
dec
xchg
xchg
mov
inc
lock
push
mov
lcall
push
pop
mov
aas
xchg
sti
lds
mov
cmp
or
in
inc
dec
fwait
cmpsb
pop
outsl
outsb
push
test
fisttpll
ret
sbb
xor
mov
mov
call
scas
fistl
cltd
lock
jg
in
adc
int
pop
sarb
fldcw
adc
sub
sub
icebp
mov
rclb
push
loop
ret
insl
and
xchg
or
call
fs
ss
xchg
cltd
cmp
loopne
jl
shrl
adc
push
jno
fdivrs
dec
mov
movsl
dec
adc
or
fsubr
shrl
add
data16
push
stos
in
out
mov
insl
cltd
js
sub
mov
cmpsb
xor
pop
mov
movsl
jae
push
mov
sub
mov
out
or
jecxz
mov
vpmulhw
lea
jge
aas
stos
sbb
pop
jecxz
cmpsl
int3
mov
jmp
test
aam
mov
into
pop
mov
push
sti
dec
vpshlq
mov
cmp
sub
movb
sub
mov
in
fadds
or
dec
mov
dec
fisttpll
test
aad
or
daa
pushf
add
icebp
xchg
pop
fnsave
push
push
sbb
cli
ja
sbb
clc
mov
lcall
ret
loop
push
sbb
cli
pop
xchg
xor
scas
push
les
addr16
je
es
dec
fwait
std
movsl
xor
mov
add
jb
pop
inc
or
xchg
loop
flds
mov
dec
out
add
add
xlat
shll
les
daa
push
aas
jne
and
mov
sbb
ret
mov
stc
in
adc
repz
sub
pop
orl
outsl
mov
sbb
ret
add
pushf
cmpsl
pushf
pop
subl
notb
notl
test
inc
and
test
decb
xor
dec
xchg
sbb
jbe
inc
xchg
ret
xchg
xor
dec
loope
mov
jg
test
mov
mov
xchg
les
out
push
jmp
data16
cmc
lock
enter
ss
scas
pop
lcall
cld
mov
dec
decl
lods
mov
fmull
add
push
xchg
inc
xchg
fdivr
or
sub
testl
dec
push
mov
xchg
xor
icebp
push
cmpsl
in
rep
enter
mov
jbe
xlat
les
ds
bound
stos
and
xor
sub
jne
cmpsb
sahf
out
dec
ja
mov
stos
sbb
or
mov
jo
inc
fisttps
aam
push
das
into
jns
fwait
loopne
mov
rorl
fs
hlt
jge
mov
mov
jge
subb
xchg
lret
dec
jge
rorl
xor
sbb
sti
mov
mov
sub
scas
mov
mov
jae
cltd
in
fiadds
les
jl
dec
add
xchg
mov
int3
mov
or
cli
scas
ds
iret
fcompl
mov
mov
sti
dec
int3
dec
mov
pop
movsb
cmp
stc
mov
sub
aad
xor
daa
sub
mov
jle
cmp
cmp
sub
jo
dec
test
push
xchg
int
addl
mov
push
sub
sahf
mov
in
jp
out
push
xchg
dec
sbb
rclb
add
pop
jmp
popa
clc
sbbl
pop
pop
sahf
and
sbb
int3
push
stc
push
xchg
cmp
dec
inc
popa
jne
cmp
xor
testb
dec
xor
mov
out
mov
lret
mulb
mov
mov
sub
das
and
mov
sbb
inc
imul
jns
sbb
scas
mov
jnp
sbb
mov
dec
inc
movsl
sbb
stc
sbb
inc
out
and
jo
sarl
das
xchg
mov
cmc
add
push
in
cld
lods
inc
pop
inc
xor
fisttpl
mov
pop
xlat
sbb
mov
outsl
sub
mov
mov
push
sar
ljmp
push
pop
adc
gs
and
or
in
in
pop
test
shrl
adc
imul
test
xchg
mov
mov
mov
inc
fsub
mov
shrl
sub
mov
loopne
movsl
mov
pop
and
push
nop
mov
inc
and
inc
mov
daa
xchg
mov
push
in
push
call
and
ffree
xchg
hlt
jb
jmp
lahf
or
dec
dec
inc
shll
stos
inc
xchg
ss
mov
mov
mov
jb
into
pop
fbld
or
fstl
xchg
leave
xor
mov
or
into
out
movsl
dec
cmpsl
lcall
ficoms
pop
add
int
popa
mov
les
sti
sub
lahf
xlat
or
mov
mov
dec
xchg
push
and
and
cwtl
and
pop
xchg
outsl
fwait
addr16
add
inc
dec
fs
xchg
in
je
xchg
pop
cmp
rol
cmp
xchg
xor
pop
pop
fisttpl
popf
imul
dec
or
lods
aas
cmp
iret
movsb
icebp
sub
sub
jle
xchg
out
les
mov
iret
ficomps
inc
in
lahf
out
dec
mov
and
pop
in
test
inc
sbb
mov
lock
push
mov
das
movzbl
inc
mov
movsb
adc
sbb
out
test
sar
repz
pop
pop
movsl
in
shrb
dec
lock
jp
arpl
shll
add
pop
inc
adc
mov
outsl
scas
add
fiadds
jnp
hlt
jo
data16
or
inc
stc
push
jne
shll
jge
xchg
shlb
movsl
push
mov
sub
xor
repz
pop
and
cmp
sbb
cmp
dec
insl
or
or
jae
repnz
js
jno
fs
repz
jb
call
mov
inc
push
and
popf
dec
sahf
adc
ret
fiaddl
enter
mov
jae
mov
in
rorl
fs
mov
push
xchg
pop
cmp
pop
in
mov
movsb
mov
or
fadds
add
lock
bts
test
push
pop
stos
pop
lret
js
inc
xchg
pushf
pop
or
jns
test
pushf
push
mov
in
idiv
mov
cmp
lods
out
stos
js,pt
repz
loope
add
in
pop
mov
loop
inc
test
push
sbb
lret
and
arpl
push
mov
mov
add
out
or
cltd
cwtl
or
aad
jnp
mov
jnp
jnp
dec
pop
in
jnp
es
xchg
inc
or
sbb
das
push
ljmp
into
aad
inc
push
cli
leave
rorb
movsb
cmp
jne
push
cltd
fwait
arpl
bound
mov
pop
dec
cltd
mov
or
stos
mov
ret
sti
xor
xchg
cmp
xor
inc
jge
sub
cmp
mov
push
cmp
hlt
icebp
cli
dec
inc
int3
inc
test
repnz
push
add
cmpsl
mov
mov
bound
push
xor
pop
arpl
inc
not
stos
in
test
arpl
and
imul
mov
xchg
stos
mov
out
fisttps
jle
mov
arpl
jp
cmp
xchg
xchg
fcmove
icebp
daa
scas
inc
sub
or
test
dec
loopne
pop
mov
adc
hlt
jl
add
mov
movsb
test
dec
pop
pop
addr16
xchg
fstpl
mov
and
xchg
push
rolb
push
jle
jbe
fbld
jb
nop
dec
add
iret
mov
mov
rol
pop
xchg
inc
pop
push
jno
test
push
push
xchg
in
stos
fsubs
fwait
cmpsb
nop
xor
cmp
inc
cmp
add
ja
push
xchg
jmp
loop
adc
mov
andb
into
inc
cld
inc
lret
mov
inc
test
or
test
mov
sahf
sti
js
fs
das
scas
push
dec
pushf
test
inc
cmp
outsl
sahf
xor
movsb
jp
aaa
ret
xor
jl
repz
add
lret
js
fwait
xor
cld
out
into
pop
andl
mov
pop
mov
cmc
jnp
clc
pop
lcall
xchg
push
inc
daa
aad
fisubrs
pop
xor
mov
ret
and
pop
into
xchg
pop
adc
ss
and
aaa
fwait
push
aad
jp
fsts
lock
fisttps
ret
mov
test
cmpsl
js
sbb
add
lret
lods
add
push
icebp
push
shll
popa
shll
cmpb
jle
cltd
push
xlat
add
adc
daa
jns
mov
in
repz
scas
sub
mov
sar
imul
xchg
and
test
add
add
dec
inc
shlb
pop
mov
mov
jb
je
xchg
pop
test
add
mov
adc
cmp
lods
pop
movsb
clc
sub
ja
bnd
cmp
ljmp
push
inc
lea
jns
jnp
idivl
imul
jbe
lods
push
inc
sahf
ficoms
repnz
add
dec
xor
pop
mov
cmpsl
aaa
fs
lds
xchg
mov
repz
xchg
shll
jnp
mov
testl
mov
push
mov
fcmovu
mov
jp
test
testb
out
cwtl
xchg
test
pop
xor
loope
das
scas
pop
xlat
adc
and
popf
ret
mov
in
rclb
in
sub
mov
call
mov
and
inc
cmp
popf
jmp
push
cwtl
inc
addr16
les
movsl
imul
nop
insl
cltd
xchg
xorl
pop
xor
jecxz
in
lock
popf
fcompl
cmp
out
mov
stc
adc
push
aad
pushf
pop
mov
ret
outsl
pop
in
push
or
push
pop
cs
test
ss
testb
sahf
cmp
push
les
xchg
sbb
mov
sub
mov
cli
or
leave
xor
cwtl
arpl
lcall
push
cmp
popa
xchg
jbe
inc
insb
in
sbb
clc
notl
push
mov
dec
xor
push
ss
adcb
dec
adc
mov
inc
mov
popf
dec
sahf
pushf
inc
push
bound
jne
xchg
ret
ret
adc
movsb
loop
hlt
mov
test
stc
sbb
sub
mulb
jmp
lods
adc
sbb
cmp
push
push
inc
sub
je
ret
dec
and
loopne
jmp
xchg
inc
jl
jb
adc
cld
cwtl
into
xchg
xchg
sbb
unpcklps
cmc
stos
sbb
int3
stos
jge
fsubr
inc
dec
jb
push
int
aam
ljmp
cwtl
inc
loop
push
adc
xor
stc
movsb
lea
pusha
xchg
loopne
ret
cmpsb
jle
mov
mov
lods
cmp
push
aad
movsl
fisttps
pop
ljmp
dec
mov
fstps
push
sbb
shrb
jb
xchg
push
and
mov
scas
mov
lea
mov
mov
es
mov
aas
jle
xchg
and
rcll
mov
pop
loopne
inc
jne
leave
dec
cs
push
cmpsl
xor
mov
mov
rcr
and
push
sarl
inc
push
roll
test
dec
int3
jne
adc
inc
clc
inc
xchg
xchg
js
lahf
out
xchg
xor
imul
lea
pushf
popa
jl
and
pop
test
fistpll
adc
sti
sbb
mov
fldcw
push
inc
xor
xor
sbb
cmovb
and
xor
fisttpl
mov
loop
addr16
test
scas
xchg
insl
gs
dec
iret
xorb
insb
mov
mov
inc
daa
xchg
push
push
mov
jae
push
xchg
loope
add
xchg
dec
and
scas
fdivrl
aad
push
cli
hlt
dec
rcr
lcall
and
cmpb
sbb
jmp
jmp
sub
sti
sub
ljmp
jmp
fs
insl
cmp
pop
push
jmp
dec
daa
xchg
cltd
mov
xor
fsubl
rol
notb
out
mov
cwtl
and
cmpsb
ja
pop
cs
pop
mov
out
dec
into
pop
xor
into
lcall
sysret
mov
ret
je
lret
scas
xchg
cli
cwtl
sbb
xor
scas
push
xor
xchg
pop
cmpsb
add
lods
jmp
arpl
mov
adc
loopne
and
jbe
movsl
jnp
xchg
xchg
sub
movsb
je
inc
inc
ljmp
repz
adc
stc
testb
adc
ss
loope
or
jmp
cmp
sarb
jecxz
es
ja
jp
jge
cli
push
adc
scas
and
dec
push
dec
setb
push
loop
loope
push
sbb
sbb
shr
mov
fdivrl
pop
repnz
pop
cmpsl
nop
data16
adc
into
inc
pusha
sub
mov
inc
mov
add
jle
shr
add
ja
push
pop
roll
sub
stc
sub
ja
bound
pop
or
mov
cmp
in
iret
mov
sbb
cmp
andw
movsb
inc
loop
cmp
mov
lahf
ds
scas
or
dec
dec
jmp
pusha
xor
movsb
sbb
mov
or
fcoms
fs
jecxz
and
popf
inc
jbe
dec
movsb
mov
enter
aas
pop
addl
mov
jo
or
adc
mulb
pop
fstl
xor
loope
or
cmp
dec
sarl
imul
and
jae
arpl
push
sti
inc
jmp
sbb
sub
pop
jecxz
sarl
imul
and
jae
arpl
push
sti
inc
jmp
sbb
sub
pop
jecxz
sarl
imul
and
jae
arpl
push
sti
inc
jmp
sbb
sub
pop
jecxz
sarl
stos
xor
add
add
jmp
lods
add
adc
stos
add
xor
and
out
push
fs
push
mov
test
mov
movsb
or
push
cmc
in
in
adc
add
xor
ljmp
xchg
test
aad
movsb
sbb
sbb
js
dec
in
adc
add
xor
and
push
repz
loop
shlb
sub
mov
lods
push
aam
mov
js
je
fbld
cmp
lock
push
cmc
sbb
xchg
push
icebp
mov
stos
mov
inc
andl
lcall
loope
jnp
in
pop
sub
sub
cmp
mov
add
lds
into
sar
stc
adc
loop
pop
in
iret
add
ja
mov
inc
adc
enter
push
pop
test
inc
les
push
xchg
jmp
mov
dec
jmp
jne
out
mov
ret
cld
icebp
movsb
mov
jno
sbb
in
push
add
mov
pusha
mov
lret
mov
push
shl
in
inc
les
dec
mov
and
push
ljmp
xchg
sub
aam
les
push
in
pusha
stos
inc
enter
call
call
add
fisttpl
sarb
mov
and
inc
roll
insb
cmc
xor
and
pop
jmp
sbb
sub
sub
adc
lret
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
daa
popa
dec
fs
add
lds
adc
dec
aad
xchg
mov
fcoml
sub
das
notb
fs
jmp
lds
lcall
mov
clc
push
mov
pop
inc
mov
xchg
and
pop
outsl
xchg
shlb
mov
push
ja
scas
clc
mov
mov
fwait
arpl
push
mov
lcall
clc
mov
inc
pop
scas
sub
loop
loopne
inc
mov
cmpsl
ja
fldcw
aam
cwtl
and
inc
dec
push
loope
test
pop
into
test
test
or
out
push
cltd
push
aad
movsb
fldt
mov
and
xchg
lret
inc
fxrstor
fs
call
adc
dec
lret
daa
mov
sahf
jae
repz
push
or
in
lret
cmp
cs
imul
daa
cmp
lea
sub
fistpl
insb
call
push
filds
or
lret
mov
data16
adc
pop
adc
sub
nop
mov
push
call
cmp
push
add
imul
adc
pop
lds
and
mov
inc
push
inc
cld
orb
orb
cs
cld
fcoms
cmp
sbb
xchg
imul
inc
mov
leave
sahf
sbb
jbe
push
cmp
jo
mov
xchg
sub
js
mov
sbb
lods
xchg
arpl
xchg
outsl
mov
mov
mov
fldcw
mov
loopne
mov
int
mov
test
xorb
xchg
dec
stos
cltd
sbb
cmp
push
xchg
push
pop
inc
scas
pop
or
mov
daa
xchg
sub
add
mov
in
out
inc
std
mov
mov
int3
or
cmp
iret
pop
outsb
inc
adc
mov
mov
jno
movsb
cmp
mov
sub
mov
fldt
mov
inc
in
cmp
lods
fiaddl
dec
xchg
out
in
xor
sbb
mov
addr16
jae
insb
jne
cwtl
imul
cld
xor
fwait
mov
sub
xor
sbb
and
or
inc
jmp
lea
xchg
mov
lods
movsb
mov
das
mov
mov
inc
mov
fdivrs
loope
jg
int3
pop
mov
mov
add
mov
jo
mov
jle
aad
enter
and
mov
pop
or
mov
imulb
fcmovnu
adc
loop
mov
leave
cmp
lahf
add
inc
popf
ds
lods
in
ss
cmp
lcall
scas
xchg
and
lcall
daa
test
and
mov
imul
enter
icebp
mov
add
jns
iret
dec
lds
push
sub
inc
pop
hlt
stos
jbe
mov
cs
cmp
push
rep
test
aaa
push
dec
jge
mul
sub
mov
insl
pop
int
test
lahf
push
sub
test
movsb
push
imul
js
shlb
mov
outsb
mov
inc
push
inc
daa
lods
les
cli
stc
mov
das
les
inc
scas
aad
push
mov
lret
xchg
push
call
jo
pop
sbb
cli
rcll
sbb
jnp
jecxz
aam
fstpl
cmc
sub
dec
mov
inc
jns
out
xchg
and
xchg
stc
inc
dec
insl
jno
jno
outsb
mov
pop
gs
nop
jns
add
andl
push
data16
aam
inc
sub
mov
add
push
cmp
mov
in
jns
sub
add
pop
mov
xchg
xor
mov
test
mov
sbb
pop
sub
adc
xchg
lea
daa
rclb
sub
scas
sbb
jge
mov
popa
xor
daa
jbe
xchg
jl
dec
adc
jbe
fiaddl
imull
cwtl
fstpt
popa
aaa
push
pop
push
ds
jnp
popf
add
das
rcll
and
ljmp
popf
into
and
mov
xlat
push
xor
pop
andb
mov
push
dec
xchg
scas
std
bound
lds
pop
fisubrs
repnz
sub
imul
sub
mov
mov
sub
stc
gs
sbb
adc
xor
or
outsb
inc
push
in
out
inc
in
pop
movsb
lahf
mov
push
xchg
xlat
cmp
aas
cwtl
shr
aaa
xlat
sbb
jo
cmpsl
clc
mov
cmp
mov
sbb
gs
mov
sbb
test
jnp
sub
sarb
sbb
into
add
pop
out
sub
push
pop
fildll
mov
or
iret
mov
pop
sub
lcall
mov
sub
lahf
cltd
inc
xchg
xor
pushf
jo
mov
sbb
jge
mov
sbb
jmp
lds
iret
je
jnp
mov
cmpsb
jno
movsl
and
cmp
stos
mov
mov
mov
sbb
mov
outsl
push
push
cmpsb
sbb
jecxz
jo
push
fidivl
fnstcw
xlat
push
xchg
insl
mov
pop
inc
les
ja
and
sub
jg
jns
push
jnp
loop
push
orb
sti
roll
inc
inc
cmp
shrb
ljmp
iret
jge
or
mov
jne
cmp
out
pushf
int
jnp
dec
inc
test
ficoms
pop
mov
insb
pop
les
fmuls
cmp
into
mov
dec
or
sub
lds
cli
test
inc
jmp
mov
movsb
jmp
mov
lds
or
rcll
into
popf
push
jae
mov
pop
mov
lret
rcll
adc
mov
inc
push
mov
cmp
cltd
push
push
mov
mov
jecxz
fsub
pop
in
adc
mov
out
out
or
push
test
jge
ds
mov
mov
sahf
cmp
frstor
sbb
xor
push
lock
fldenv
cmp
xor
mov
or
addr16
sti
xchg
mov
shll
mov
xor
rol
adcl
and
cmp
int3
adc
or
fistpll
enter
int3
sub
in
dec
test
aaa
ret
adc
pushl
add
lea
sbb
insl
sub
mov
data16
push
add
inc
push
mov
fs
jecxz
mov
sbb
mov
mov
loopne
cli
dec
lea
fstpl
les
jmp
insb
test
or
and
ja
fwait
jno
add
repz
add
push
aad
jge
mov
sub
mov
ret
lods
xchg
es
sti
pusha
push
jo
xchg
mov
xlat
mov
jno
test
xchg
mov
mov
fmulp
mov
mov
int
mov
and
imul
push
in
fucomp
fidivl
insl
ret
inc
cmp
xchg
into
in
inc
les
jle
cmp
in
movsl
push
popa
int3
jg
js
sahf
loop
lds
sub
cmp
scas
sbbb
add
jae
int3
jecxz
cwtl
ljmp
nop
xchg
sbb
mov
pop
aas
repz
in
dec
cltd
mov
and
mov
push
xlat
out
pushf
add
movsl
xchg
das
pop
dec
xor
jge
cmp
mov
stos
add
mov
rolb
mov
xor
aas
and
mov
lods
inc
cmp
mov
in
adc
pop
jmp
mov
imul
push
dec
adc
jb
add
or
push
out
inc
lock
jb
out
dec
cwtl
xlat
ret
push
xor
divb
in
mov
push
and
and
imul
or
inc
aas
stos
imul
fstl
lret
and
add
mov
xor
push
cmpsl
pop
adc
sub
cmp
xchg
dec
popf
fsubl
pop
mov
add
repz
fidivrl
add
adc
mov
fisubrs
xor
enter
test
in
pop
outsb
push
adc
divl
inc
cmpsl
int
clc
popa
imull
add
adc
xchg
push
movsb
add
mov
or
mov
shll
out
mov
pop
xor
adc
cmp
shrl
rclb
pop
iret
add
xchg
mov
adcl
push
mov
cmp
inc
ljmp
popf
pop
sbb
mov
les
stc
xchg
jb
jnp
push
xor
movsb
mov
fistpll
mov
mov
popa
push
incb
mov
adc
adc
sub
cmp
int
insb
iret
sbb
popa
int
jno
test
push
data16
sti
mov
call
fisttps
mov
addr16
ffreep
mov
xchg
adc
mov
mov
mov
xor
pop
pop
nop
out
cmp
fadd
aad
lods
test
loope
fldenv
cmpl
arpl
mov
nop
cwtl
clc
xor
push
jne
sbb
aas
mov
sbb
xchg
addr16
xchg
test
dec
adc
mov
pop
and
mov
sub
cltd
lret
add
xrstors
test
orb
pop
fidivrs
rcr
scas
bound
cwtl
insl
mov
xchg
push
inc
mov
out
movsb
inc
cmc
inc
mov
mov
adc
rcll
xchg
push
mov
subb
jne
scas
insb
mov
inc
pop
adc
hlt
xor
push
orb
mov
movsb
lret
lods
push
out
loop
sub
and
push
in
movsb
add
lods
sbb
pop
sbb
pop
xchg
dec
cmp
inc
pop
jmp
xor
push
xor
mov
into
jbe
cmp
fwait
mov
cmpsb
lret
jecxz
dec
mov
stc
fmulp
xlat
movsl
das
ficompl
mov
mov
add
or
cld
or
jg
lcall
lea
popa
ss
inc
movsl
jo
ret
andl
adc
out
js
dec
or
sub
sub
and
lret
mulb
sbb
fiaddl
sbb
dec
jl
pop
adc
es
pusha
aad
bound
add
mov
inc
bound
out
fmull
cmp
insl
mov
clc
jmp
jns
adc
loop
push
or
add
mov
and
jmp
cmp
lods
fsubr
int3
sbb
adc
jns
mov
xchg
dec
insl
push
imul
mov
outsl
inc
insl
inc
and
test
into
pop
xor
push
test
mov
jb
int
push
sub
push
fcomip
jle
inc
xchg
inc
mov
rcll
cmp
xor
in
mov
aad
ja
jno
test
repz
pop
inc
xor
and
cmpsl
popf
daa
mov
js
push
mov
inc
push
mov
test
outsl
cmp
pop
xchg
gs
xchg
push
pop
lds
inc
pop
mov
fidivrs
ret
das
or
mov
dec
jno
mov
es
bound
ret
out
mov
loopne
lcall
and
ljmp
decl
mov
mov
fldt
in
push
mov
or
mov
add
inc
and
mov
inc
jnp
mov
xchg
pusha
xor
xchg
cmp
sub
aad
jnp
mov
add
bound
test
mov
cs
std
mov
inc
dec
out
dec
les
outsb
add
mov
push
mov
movb
insl
mov
xchg
data16
fs
xchg
push
jmp
cmpsb
fistps
add
mov
popf
mov
jno
cmc
xor
add
cmp
xchg
cltd
les
js
dec
insb
or
or
add
lds
pop
int3
repz
aaa
add
xchg
jge
sub
aaa
inc
add
les
ds
ret
sub
mov
or
adc
adc
inc
out
movb
movsb
call
dec
cmpsb
es
adc
lock
xorl
sub
test
sbb
sahf
bound
cmpsb
pop
adc
pop
outsl
cwtl
push
lock
ror
sahf
sbb
jno
pop
jns
push
andb
ja
loope
lock
sbb
mov
pop
cmp
inc
imul
or
adc
test
add
hlt
mov
mov
jne
xor
imul
mov
add
inc
xor
and
sahf
shr
sbb
jp
and
cmc
mov
jmp
rorl
cwtl
pop
cmp
xchg
cmp
imulb
test
mov
call
rolb
push
push
scas
les
push
lret
sbb
pop
inc
fcmovnbe
ss
movsb
sbb
xorb
pop
shlb
addr16
mov
sahf
ljmp
test
in
leave
pop
bound
jp
sub
pop
dec
mov
mov
pushf
jno
add
repnz
movsb
outsb
jge
lcall
fisttps
aam
les
orl
xchg
inc
int3
cwtl
lds
adc
cmp
xchg
mov
pop
insl
dec
sbb
cmpb
inc
xchg
hlt
andl
in
nop
jle
jmp
push
clc
pushf
sbb
pop
jae
mov
outsl
mov
ja
mov
dec
push
cmp
aas
ret
xor
or
bswap
xchg
shl
sub
js
insb
add
add
inc
sub
imulb
js
fnstsw
mov
ret
in
pop
out
in
inc
adc
lcall
out
jb
rcl
iret
and
jno
roll
add
leave
push
ds
roll
in
dec
fcompl
sahf
stos
push
push
aas
mov
pop
pop
sbb
pop
sarb
jge
cmc
push
adc
movsl
mov
sbb
xchg
push
cmp
jmp
mov
adcl
mov
jo
jae
pushl
inc
xchg
or
call
aad
and
push
ds
lcall
fsubl
cli
jb
pop
dec
adc
cli
cmp
stc
icebp
loop
xor
xchg
popf
daa
mov
cmpsb
cwtl
xchg
adc
pushf
pop
je
xlat
inc
leave
lods
into
not
xlat
cmp
sub
jmp
pop
dec
repz
int
outsb
cmp
sbb
or
pop
jno
mov
cwtl
mov
dec
icebp
fucomp
insl
pop
les
ja
cwtl
or
jbe
add
fldt
sti
jo
inc
or
sub
into
pop
fwait
arpl
add
ss
push
dec
loope
ret
sub
stos
mov
aas
test
add
fnstcw
add
mov
lcall
test
and
inc
lret
jb
cmp
xor
mov
push
enter
je
mov
insb
pushf
sbb
push
imul
and
adc
jp
sub
ret
add
mov
mov
xchg
dec
jecxz
ss
add
pushf
cli
imul
lods
insl
fsubrs
fcoms
push
fdivl
sbb
mov
jne
addr16
or
stos
stos
lods
sub
mov
mov
and
jl
or
repz
fcomip
adc
push
daa
sbb
shll
xchg
adc
pop
mov
xchg
adc
mov
or
clc
in
xchg
sub
pop
mov
imul
test
in
adc
stc
xchg
sbb
icebp
testl
aam
cli
out
add
nop
pusha
in
lods
cld
mov
push
nopl
cwtl
mov
mov
adc
jge
call
dec
push
stos
pop
add
sbb
popf
jbe
xchg
int
jnp,pn
mov
add
mov
mov
mov
inc
insl
ds
cmp
pop
loope
jle
or
sbb
inc
popa
repnz
lcall
cwtl
fiadds
sahf
test
stos
aas
push
std
dec
sahf
cmp
sar
inc
xchg
inc
fstps
sbb
cs
xchg
pop
cmp
std
int3
push
es
xor
daa
mov
jge
adc
sbb
jg
push
mov
mov
or
jo
iret
push
push
ja,pt
push
loope
dec
out
mov
rol
sbb
cmp
cmc
pandn
daa
jle
andl
pop
mov
add
arpl
ja
pop
ret
mov
inc
dec
jg
icebp
test
xlat
shll
and
jmp
addr16
push
aam
or
lret
icebp
js
push
jle
movsb
je
xor
decb
imul
or
push
aam
pop
sbb
enter
mov
ja
push
xchg
rcrb
sbb
sub
popa
push
mov
addr16
sbb
sahf
xor
clc
push
mov
push
repz
mov
stos
mov
sbbl
loopne
adc
fs
mov
scas
mov
dec
cmp
daa
push
addb
push
lock
rcrl
stos
test
dec
pop
push
test
loopne
xor
sarl
into
in
stc
sub
out
jb
mov
clc
mov
addr16
dec
js
out
clc
or
or
imul
es
bnd
into
mov
dec
leave
imul
push
leave
lret
fidivl
or
cmpsl
push
sbb
pop
sbb
cld
aaa
push
iret
mov
popf
js
mov
cltd
sub
clc
addb
xor
lret
jecxz
iret
les
mov
pop
iret
fbld
mov
in
icebp
add
lods
popf
or
push
testl
pop
push
mov
sub
xor
pushf
pusha
jae
xchg
mov
push
or
jecxz
popf
or
daa
xchg
xchg
push
jae
cmpsl
sub
push
aaa
mov
cmp
mov
daa
dec
test
adc
negb
add
adc
std
xchg
jns
mov
mov
enter
cs
popa
inc
scas
bound
or
fidivrl
out
cmc
dec
push
and
inc
sbb
pusha
sub
mov
mov
xchg
mov
shl
push
sahf
mov
cmp
jb
xor
pop
push
jae
pop
stos
lret
incl
cmp
xor
je
mov
mov
pusha
xor
aas
xor
rorl
xchg
and
inc
xor
dec
sub
nop
xchg
stos
or
cli
ret
pop
or
mov
pushf
jmp
arpl
push
mov
jle
add
dec
cmp
mov
test
mov
mov
push
subl
lds
mov
pop
out
cltd
xchg
hlt
cltd
insl
faddp
push
xchg
subb
adc
lahf
xchg
stos
lret
lods
in
add
ljmp
dec
or
sbb
xchg
cltd
aam
xorps
pop
xor
lods
insb
push
repnz
daa
pop
lds
ja
jp
dec
xlat
fldcw
in
stos
aas
xor
hlt
xchg
test
orb
xchg
mov
pop
dec
push
inc
cmc
test
xor
cwtl
xchg
or
outsb
pop
adc
push
xor
popa
adcb
fiaddl
pop
fwait
mov
gs
xchg
add
fmuls
pop
cltd
outsb
lahf
sub
rorl
mov
adc
dec
inc
pop
mov
addr16
outsl
out
fs
xor
pop
pop
inc
sti
and
mov
dec
std
shrl
mov
and
scas
jge
aam
sti
jno
jge
sbb
sbb
pop
scas
push
out
xchg
movsb
xchg
fcom
mov
mov
mov
sti
test
mov
mov
inc
pop
xor
lret
or
adc
xchg
mov
aaa
enter
inc
iret
test
sub
and
and
cld
cmpb
stos
stos
addb
in
jb
xchg
shlb
mov
jle
dec
cli
movsl
in
or
jnp
fstl
daa
cmpsb
js
push
lock
jp
push
dec
mov
stos
or
shll
pop
push
test
mov
cs
xor
insb
add
sub
ds
mov
lea
lret
incl
mov
jp
inc
adcb
fisubrs
into
mov
in
adc
push
or
adc
test
repnz
mov
js
and
xor
mov
adc
dec
mov
xchg
jns
das
cmp
ret
sub
pusha
es
cmp
orl
cmp
sub
mov
pop
pop
pusha
fmull
mov
les
pop
test
loop
clc
insb
in
xchg
cld
push
mov
xor
mov
cmp
dec
push
add
das
sub
pop
mov
sbb
in
inc
mov
aas
inc
test
push
pop
scas
aad
lea
push
out
aas
xchg
ret
loopne
sbb
stos
xchg
jecxz
jge
mov
or
insb
push
push
mov
sbb
xor
inc
mov
icebp
andl
stos
xlat
lods
sub
xor
lock
hlt
dec
push
aam
pushf
jne
sbb
mov
shll
pop
cmp
mov
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
add
xor
and
push
ljmp
xchg
sub
aam
les
dec
in
adc
mov
push
ljmp
xchg
sub
mov
xor
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sti
sub
mov
jae
sarb
adc
pop
in
add
or
add
add
push
or
add
add
jns
fwait
add
add
add
add
outsb
add
add
add
xchg
add
add
inc
add
add
add
add
add
add
add
rolb
add
add
add
sub
adc
inc
add
add
add
add
add
add
xchg
add
roll
sbb
add
cmp
adc
pop
add
add
add
add
insl
add
dec
add
add
add
add
fiadds
lea
sti
add
es
add
add
add
add
add
add
add
add
add
add
jno
inc
add
add
add
or
dec
add
add
add
add
add
mov
push
add
add
cmpsl
add
add
add
add
add
add
add
dec
add
add
inc
add
dec
add
inc
add
add
mov
add
add
fildl
scas
add
sahf
add
sub
xor
test
stos
add
inc
add
xor
mov
add
add
add
inc
add
int
or
mov
add
add
add
add
add
add
add
movsl
add
add
fildl
iret
add
add
sbb
adc
dec
add
add
add
jno
dec
add
add
add
add
add
add
cmpsl
add
decl
pop
add
add
add
jno
dec
add
add
adc
pop
add
add
int
inc
add
add
add
ret
add
add
add
add
dec
add
add
add
add
add
or
nop
add
add
add
roll
mov
add
add
add
add
add
add
add
add
add
jo
mov
add
add
das
add
add
add
dec
add
add
add
add
fiaddl
sub
xor
add
add
add
loope
inc
add
cmp
js
mov
add
add
add
add
add
add
fildl
or
xlat
add
sahf
add
pusha
add
add
mov
add
add
add
add
outsb
add
add
add
add
add
add
add
sti
add
add
add
fildl
xor
movsb
add
aas
add
jecxz
bound
push
add
add
aas
add
add
jo
push
add
adc
outsb
add
add
add
add
add
add
add
add
movsl
add
add
sbb
fildl
dec
add
add
add
add
add
add
add
push
add
add
adc
pop
add
add
add
add
roll
rolb
add
add
add
and
push
add
aas
add
add
add
das
add
add
add
dec
add
add
add
rolb
add
add
scas
add
add
add
add
add
add
add
add
add
sub
dec
add
add
add
add
scas
mov
mov
je
stos
out
insl
mov
lods
shrb
mov
push
push
xor
mov
push
aam
or
sub
inc
cmp
ss
xchg
push
xchg
sbbb
arpl
into
inc
ret
push
mov
arpl
ret
addr16
leave
daa
subb
cmc
inc
lcall
loope
or
sbb
jae
imul
dec
shrl
mov
ret
stos
xor
inc
repnz
dec
fwait
outsl
push
xchg
or
dec
add
out
mull
jg
or
lret
notl
mov
pusha
rorb
push
rcr
and
flds
inc
lea
pushf
in
lods
lcall
scas
pop
or
cltd
mov
or
pop
xor
in
pop
les
hlt
push
jle
xlat
mov
jle
pop
cmpsl
in
pop
imul
cmp
push
sbb
popf
sub
cmp
jmp
cmp
adc
jae
push
pop
cmp
inc
pop
ja
mov
adc
enter
push
inc
xor
cld
xlat
mov
mov
outsl
inc
add
jp
mov
flds
jne
mov
mov
xor
xchg
inc
repnz
push
arpl
inc
into
lock
aad
pop
or
inc
in
xlat
and
stos
jae
loopne
mov
in
mov
incb
stos
int
es
or
and
xchg
das
loope
je
cmp
or
hlt
in
mov
xor
js
rcrl
mov
xchg
pop
dec
lea
addr16
jmp
test
sub
jecxz
mov
jb
mov
nop
lds
into
mov
lea
pop
es
and
arpl
adc
adc
rcrb
jno
mov
movsl
lret
and
shl
and
xlat
js
sbb
and
push
mov
int
jno
rorb
sbbl
mov
sub
xchg
jp
ds
cs
push
jnp
or
test
sbb
ds
jp
push
arpl
fidivs
mov
shll
aaa
roll
pop
push
es
gs
xchg
sub
cmp
mov
pop
ljmp
movd
gs
push
or
mov
push
hlt
sub
sub
out
adc
int3
int
pushf
mov
or
subb
insl
andl
fldl
mov
add
movsl
bswap
aam
pusha
mov
int
push
imul
mov
ret
bound
xchg
xor
or
gs
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
