push
mov
sub
mov
leave
jmp
xchg
push
mov
sub
mov
leave
jmp
xchg
push
mov
push
sub
movl
call
sub
call
call
lea
movl
mov
mov
movl
movl
mov
lea
mov
call
mov
test
jne
call
mov
mov
call
and
call
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
jmp
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
push
sub
mov
mov
mov
cmp
ja
cmp
jb
mov
movl
movl
call
cmp
je
test
jne
xor
add
pop
pop
ret
cmp
je
cmp
je
cmp
jne
jmp
cmp
lea
je
cmp
jne
movl
movl
call
cmp
je
test
je
movl
lea
call
mov
jmp
lea
xor
jmp
movl
movl
call
cmp
je
test
je
movl
nop
call
mov
jmp
lea
movl
call
mov
xchg
jmp
movl
movl
call
or
jmp
movl
movl
call
or
jmp
movl
movl
call
test
jne
mov
jmp
nop
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
test
je
movl
call
push
test
je
movl
mov
call
sub
test
je
movl
call
leave
ret
mov
jmp
nop
push
mov
leave
ret
nop
nop
nop
push
mov
fldz
leave
ret
nop
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
leave
ret
push
mov
sub
movl
movl
movl
movl
call
sub
leave
ret
lea
and
pushl
push
mov
push
push
push
push
sub
mov
mov
call
lea
xor
mov
mov
rep
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
fstp
movl
call
push
lea
mov
mov
call
push
push
mov
call
fstp
lea
mov
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
fstp
movl
call
push
lea
mov
mov
call
push
push
mov
call
fstp
movl
call
push
lea
mov
mov
call
push
push
mov
call
fstp
xor
call
fstp
movl
movl
call
push
push
mov
call
fstp
movl
movl
call
push
push
mov
call
fstp
mov
mov
call
push
call
fstp
mov
call
push
call
fstp
inc
cmp
jne
mov
mov
mov
call
mov
test
je
call
fstp
movl
lea
mov
movl
call
sub
call
fstp
mov
mov
call
call
fstp
xor
lea
pop
pop
pop
pop
leave
lea
ret
push
mov
push
push
push
sub
lea
xor
mov
rep
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
lea
mov
rep
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
fstp
lea
mov
call
push
lea
mov
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
mov
call
push
movl
mov
call
push
push
mov
call
fstp
movl
call
push
movl
mov
call
push
push
mov
mov
cmpw
jne
mov
add
cmpl
jne
call
fstp
lea
mov
mov
mov
rep
mov
call
fstp
lea
mov
mov
mov
rep
call
fstp
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
call
sub
test
je
call
fstp
movl
movl
movl
movl
call
sub
mov
movl
call
fstp
mov
mov
mov
call
push
push
test
je
call
fstp
movl
movl
lea
mov
mov
add
mov
mov
mov
call
sub
call
fstp
mov
cmp
jne
mov
mov
mov
call
push
push
movl
movl
mov
mov
mov
mov
mov
mov
call
sub
mov
test
je
call
fstp
movl
mov
mov
mov
mov
mov
mov
mov
call
sub
call
fstp
xor
jmp
mov
add
imul
lea
mov
mov
call
fstp
movl
mov
mov
mov
mov
add
mov
mov
lea
mov
mov
mov
call
sub
call
fstp
mov
inc
movzwl
cmp
jl
call
fstp
movl
movl
lea
mov
mov
add
mov
mov
mov
call
sub
call
fstp
add
mov
call
fstp
mov
mov
mov
call
push
push
call
fstp
mov
mov
call
push
call
fstp
lea
pop
pop
pop
leave
ret
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
leave
ret
push
mov
push
push
push
sub
movl
call
push
movl
mov
call
push
push
mov
movl
call
push
movl
mov
call
push
push
mov
movl
call
push
movl
mov
call
push
push
mov
movl
call
push
movl
mov
call
push
push
mov
movl
call
push
movl
mov
call
push
push
mov
movl
call
push
movl
mov
call
push
push
mov
call
mov
movl
movl
call
sub
mov
movl
movl
movl
movl
movl
movl
mov
mov
call
sub
mov
test
je
movl
mov
call
push
push
mov
test
je
movl
movl
mov
movl
call
sub
mov
test
je
movl
movl
movl
movl
call
sub
mov
movl
movl
movl
movl
call
sub
call
fstp
movl
lea
mov
movl
mov
mov
mov
jmp
call
fstp
movl
lea
mov
movl
mov
mov
call
sub
call
fstp
cmpb
jne
call
fstp
movl
lea
mov
movl
mov
mov
call
sub
call
fstp
cmpb
jne
call
fstp
movl
lea
mov
movl
mov
mov
call
sub
call
fstp
cmpb
jne
call
fstp
movl
lea
mov
movl
mov
mov
call
sub
call
fstp
cmpb
jne
movl
lea
lea
mov
lea
mov
lea
mov
jmp
mov
call
fstp
movl
lea
mov
movl
mov
mov
call
sub
call
fstp
mov
mov
sub
mov
mov
sub
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
sub
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
sub
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
sub
sub
mov
mov
sub
mov
mov
sub
mov
mov
sub
sub
mov
mov
sub
mov
call
fstp
movl
movl
lea
mov
mov
lea
mov
mov
mov
call
sub
call
fstp
addl
mov
mov
cmp
jb
call
fstp
movl
movl
lea
mov
mov
mov
mov
call
sub
call
fstp
jmp
xor
mov
lea
pop
pop
pop
leave
ret
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
leave
ret
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
push
pushf
pushf
pop
mov
xor
push
popf
pushf
pop
popf
xor
test
je
xor
cpuid
test
je
mov
cpuid
test
je
orl
test
jns
orl
test
je
orl
test
je
orl
test
je
orl
and
je
orl
test
je
orl
and
jne
mov
cpuid
cmp
jbe
mov
cpuid
test
js
and
je
orl
pop
pop
ret
orl
jmp
orl
jmp
nop
nop
push
mov
sub
test
mov
mov
mov
mov
mov
mov
jne
mov
mov
mov
mov
pop
ret
lea
movl
mov
mov
call
sub
test
je
mov
cmp
je
cmp
je
lea
mov
mov
movl
mov
mov
mov
call
sub
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
mov
mov
mov
mov
mov
mov
mov
call
sub
jmp
movl
movl
movl
call
lea
lea
push
mov
sub
mov
mov
mov
mov
test
je
mov
mov
mov
mov
pop
ret
mov
sub
cmp
movl
jle
cmp
mov
jle
mov
test
jne
mov
test
jne
mov
test
jne
mov
nop
lea
mov
test
je
cmp
jae
mov
lea
mov
mov
add
mov
add
add
mov
mov
call
cmp
jb
jmp
xchg
mov
test
jne
cmpl
nop
lea
jne
add
cmp
jae
mov
jmp
lea
cmp
je
cmp
je
sub
cmp
mov
je
cmp
je
cmp
je
xchg
add
cmp
jae
mov
mov
movzbl
add
add
cmp
mov
jne
movzwl
test
js
sub
lea
mov
mov
lea
call
jmp
movzbl
test
js
sub
lea
mov
mov
lea
call
jmp
add
sub
mov
mov
lea
call
jmp
or
sub
add
mov
jmp
or
sub
add
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
call
mov
lea
mov
mov
test
jne
leave
ret
lea
push
mov
push
push
sub
mov
cmp
je
test
je
lea
xchg
call
sub
sub
jne
movl
call
add
pop
pop
pop
ret
lea
xor
jmp
mov
lea
mov
test
jne
jmp
lea
lea
push
mov
sub
mov
test
je
leave
ret
movl
leave
jmp
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
leave
jmp
lea
push
mov
push
push
sub
movl
lea
mov
movzwl
mov
call
sub
test
je
lea
xor
mov
jmp
lea
xor
or
cmp
je
shl
dec
cmpb
jne
mov
or
cmp
jne
cmpl
jne
lea
pop
pop
leave
ret
movl
movl
movl
call
movl
movl
movl
call
push
mov
push
push
push
sub
lea
mov
mov
mov
rep
lea
mov
mov
mov
rep
mov
call
push
test
jne
movl
call
mov
mov
xor
mov
rep
movl
movl
movl
movl
movl
movl
lea
lea
mov
jmp
shl
dec
mov
and
cmp
sbb
and
add
mov
cmp
jne
lea
mov
mov
mov
rep
mov
call
push
test
je
movzwl
call
cmp
je
mov
mov
call
mov
lea
mov
lea
mov
mov
lea
pop
pop
pop
leave
ret
lea
movzwl
call
jmp
mov
jmp
movl
movl
movl
call
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
sub
call
movl
call
leave
ret
nop
nop
nop
jmp
adc
xor
and
lods
sub
add
add
add
incl
add
add
add
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
call
add
add
add
add
push
jbe
add
add
in
add
add
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
jle
add
jle
add
daa
add
subl
add
xchg
add
xchg
add
mov
add
cmpl
add
mov
sbb
inc
add
xchg
push
add
xchg
push
add
lcall
cmp
popa
add
sahf
add
data16
mov
add
add
mov
outsb
add
inc
add
inc
add
dec
add
dec
add
push
add
dec
add
pop
add
add
add
popa
add
data16
data16
push
dec
stos
jae
push
scas
jnp
imul
add
insb
add
jne
jae
js
push
mov
jg
jno
jns
jb
jge
js
jg
xlat
dec
add
dec
add
pop
add
outsl
add
data16
insb
add
add
js
insl
enter
leave
jle
jns
jo
jb
jl
mov
mov
add
cwtl
push
add
mov
pop
add
cmpsb
pop
add
cmpsl
pop
add
scas
pop
add
mov
add
mov
add
mov
add
mov
insl
add
mov
pop
add
shrl
sbb
jo
mov
sarb
scas
sarl
lret
leave
je
pop
mov
add
addl
imul
mov
outsb
mov
addl
mov
mov
jns
nop
add
xchg
add
fadds
add
rcll
mov
xchg
add
les
xchg
aad
add
fistps
add
fmull
add
pushf
add
ljmp
mov
mov
add
lret
nop
lret
test
add
fsubs
add
xlat
scas
add
fidivs
movsl
xlat
stos
add
mov
mov
loop
add
lock
add
mov
ret
add
rorb
aad
mov
fxch
mov
fcmovne
popl
fcmovbe
xchg
add
fcomps
add
fbld
add
fildll
add
add
fidivl
add
out
test
shr
add
loopne
add
jecxz
add
in
mov
movsb
fcmovnb
add
out
add
jecxz
add
jmp
add
ljmp
mov
icebp
fldl
mov
ljmp
shr
iret
add
in
roll
aad
aad
aam
fiaddl
repnz
add
cmc
call
add
add
add
add
dec
add
add
iret
add
add
adc
add
push
movl
call
in
call
lock
incl
add
add
sub
das
add
push
add
jo
xchg
nop
add
add
add
add
add
adc
add
xor
add
push
incl
divb
add
xchg
incl
stc
mov
add
sar
add
incl
add
add
sbb
das
add
add
push
add
add
iret
add
adc
add
push
incl
ret
add
xchg
incl
fdivl
incl
incl
add
add
or
das
add
add
adc
add
add
add
add
lock
adc
add
incl
jno
incl
mov
add
mov
add
sar
add
incl
add
add
add
add
add
add
add
add
adc
js
mov
and
add
add
add
pop
lods
jp
prefetchw
adc
add
mov
push
adc
imul
add
and
push
andl
xor
imul
dec
sbb
sub
es
scas
push
xchg
inc
sbb
subb
push
ds
push
jge
dec
inc
push
pop
sbb
sub
cmp
jne
sbb
and
mov
inc
mov
jnp
mov
cmp
cmp
stos
and
mov
cmpsb
mov
push
push
inc
xchg
add
mov
xchg
cmpsl
test
je
lods
and
add
mov
xchg
lea
add
add
mov
mov
add
add
add
movsb
lea
add
add
add
ds
jno
add
add
clc
sldt
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
clc
pop
add
add
add
add
adc
add
add
or
push
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
sldt
add
add
add
add
aas
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
add
add
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
in
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
outsl
add
and
popa
add
add
add
outsl
add
imul
popa
add
add
add
add
add
add
jae
sub
and
popa
add
arpl
outsl
add
add
outsb
add
and
je
outsl
add
add
add
and
dec
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jae
add
sub
and
popa
add
and
popa
add
jo
insb
add
arpl
popa
add
insb
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jb
add
outsl
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
data16
js
add
mov
xor
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
imul
data16
js
and
imul
popa
add
add
add
add
insl
add
jb
imul
add
data16
add
add
and
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
data16
jb
add
outsl
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jb
add
outsl
add
add
add
add
add
jne
imul
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
sub
sub
pop
jne
fcoms
fs
push
sub
pushf
push
sbb
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
push
sbb
sub
jmp
mov
mov
int3
mov
inc
je
stos
dec
jne
imul
mov
loopne
arpl
xor
dec
inc
mov
inc
pushf
push
inc
pop
pushf
push
mov
aad
scas
jp
addr16
push
sbbl
pushf
push
test
pushf
push
lods
js
push
pushf
push
pushf
push
xchg
fs
push
xchg
fs
push
or
lcall
mov
push
lods
js
push
lods
js
push
jl
pushf
push
pushf
push
lcall
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
insb
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
mov
pushf
push
lods
js
push
mov
push
pushf
push
fmull
pop
js
sahf
dec
jnp
pop
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
sbb
cld
clc
mov
xor
push
lods
js
addr16
pushf
push
pushf
push
pushf
push
sbb
sbb
jb
pushf
push
in
pushf
push
sahf
push
push
pushf
push
pushf
push
sbb
cld
clc
mov
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
test
push
pushf
push
fsubrl
pushf
push
pushf
push
pushf
push
sbb
cld
clc
cmpl
pushf
push
pushf
push
sahf
push
push
pushf
push
pushf
push
sbb
cld
clc
mov
aaa
outsl
pushf
push
pushf
push
sahf
push
push
pushf
push
pushf
push
sbb
cld
clc
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
push
push
int3
test
xor
pusha
xchg
jnp
push
push
int3
test
push
xor
pusha
xchg
jnp
and
aad
sbb
push
mov
pop
dec
pushf
push
pop
dec
cwtl
pushfw
push
pushf
push
rorb
mov
in
pushf
push
xor
push
sub
add
push
out
js
push
sbb
daa
push
in
dec
les
inc
jge
and
jmp
pop
dec
push
or
cmpb
push
mov
rolb
mov
pushf
push
dec
mov
daa
repz
add
xchg
sbb
into
and
pop
jge
and
enter
icebp
decb
cmpsb
sti
cmp
iret
jne
push
pushf
push
sbb
pop
leave
pop
out
es
push
sbb
and
out
inc
push
mov
cmp
ds
push
and
out
data16
jecxz
sub
inc
pushf
push
daa
repnz
push
push
push
fcoml
push
pop
test
sahf
popf
push
pushf
push
push
push
fcoml
push
pop
test
mov
pop
ficompl
and
fistps
sub
mov
arpl
fistpl
inc
daa
scas
pushf
push
xchg
fs
push
mov
push
pop
jmp
jno
fstpl
mov
pushf
push
iret
scas
movsb
int
fs
pushf
push
jo
pop
sub
lgs
lds
lock
arpl
dec
push
inc
stc
cmp
dec
pushf
push
cmp
fs
push
xchg
fs
push
pop
jmp
jno
addr16
mov
pop
dec
pushf
push
outsb
cmp
scas
popf
push
pop
ficompl
xor
popf
push
xchg
fs
push
xchg
push
pop
jmp
jno
inc
push
mov
popf
push
pushf
push
sub
jecxz
popf
push
adc
fwait
addr16
popf
push
or
xor
dec
xchg
gs
push
xchg
fs
push
pop
jmp
lahf
icebp
cmpsb
popf
push
xchg
gs
push
xchg
push
pop
jmp
lahf
aad
popf
push
xchg
gs
push
mov
push
and
pop
add
popf
push
lahf
imul
roll
push
or
jnp
push
push
fcoml
cltd
test
sbbl
lret
cmpsl
ja
cltd
and
cmp
int3
test
lds
mov
movsl
push
inc
popf
mov
jg
test
add
mov
daa
push
pop
rolb
ficomps
push
in
dec
ds
sbb
mov
cmp
rcrl
nop
sbb
es
daa
outsb
cmp
bound
pushf
push
sub
pushf
push
jnp
push
push
fcoml
cltd
test
setl
pushf
nop
sbb
or
dec
fildll
mov
sbbl
int3
test
mov
inc
popf
mov
xor
push
jnp
push
push
in
movsb
push
in
dec
lcall
push
pushf
push
pushf
push
push
pop
int
jnp
push
push
in
movsb
push
in
dec
lcall
dec
pushf
push
pushf
push
push
pop
or
pop
dec
loope
fs
push
xchg
push
mov
pop
jmp
pop
lcall
sub
mov
pop
jmp
sub
xor
and
jmp
pop
fisubrl
pop
out
sbb
sbb
lret
and
mov
push
outsl
les
sub
notl
sbb
lret
and
incl
jecxz
das
lcall
sbb
and
pop
mov
cmp
repnz
and
shrb
sub
sbb
fisubrl
pop
jmp
sub
std
lret
and
and
push
pushf
push
outsl
lret
and
jmp
xor
bound
push
push
in
movsb
lret
and
jmp
icebp
push
pop
push
out
js
push
add
iret
and
incl
pop
sbb
lret
and
loope
xchg
jmp
fists
frstor
sbb
mov
cmp
fdivrp
pushf
push
jnp
push
push
aam
push
out
insb
pushf
push
push
pop
dec
mov
or
pop
sub
and
in
cwtl
xchg
ret
xchg
push
pop
iret
and
negl
sub
xor
sbb
bound
sbb
push
movsb
jge
lret
and
imul
les
call
dec
lcall
push
pushf
push
pushf
push
add
adc
aaa
or
daa
repz
int3
and
out
add
sbb
push
in
dec
lcall
sub
cltd
pushf
push
inc
add
push
pop
pushf
push
lret
and
daa
repz
cld
mov
cmc
or
and
pop
lret
and
and
imul
insl
push
add
pop
test
jnp
push
push
in
movsb
lret
and
lahf
popf
push
lret
and
jmp
xor
lret
and
pushf
push
pop
scas
iret
and
aas
cmp
gs
push
test
add
decb
lret
and
jo
and
setp
lret
and
out
fisubrl
pop
jmp
pand
add
and
jmp
sub
xor
sbb
sbb
or
daa
repz
sbb
lret
and
jmp
repz
mov
icebp
sbb
sbb
mov
lcall
pushf
push
push
cld
mov
and
stc
lahf
imul
and
jmp
xor
lret
and
pushf
push
pop
scas
iret
and
pop
sbb
xchg
test
xchg
xchg
iret
and
pop
fwait
lods
push
pop
sbb
lret
and
and
and
psadbw
sbb
rclb
lret
and
daa
repz
pop
fidivs
pop
dec
mov
cmp
movsb
fcompl
lret
and
and
xchg
lret
and
jmp
iret
and
notl
insb
pushf
push
jnp
push
push
cld
mov
and
mov
adc
and
jmp
xor
lret
and
pushf
push
pop
scas
iret
and
pop
sbb
xchg
test
xchg
xchg
iret
and
pop
inc
addb
sbb
lret
and
and
and
psadbw
sbb
incl
and
daa
repz
pop
fidivs
pop
dec
mov
cmp
lret
outsl
pushf
push
lret
and
jmp
repz
cld
mov
repz
fidivs
pop
dec
mov
cmp
add
and
jmp
sub
xor
sbb
sbb
fisttpl
pop
xchg
in
pop
sbb
adc
je
jp
bound
pop
push
sbb
sbb
int
jnp
push
push
in
movsb
lret
and
jmp
sub
and
arpl
sbb
lret
and
and
and
or
or
sub
add
ret
and
and
jecxz
sub
adc
push
or
mov
repz
iret
and
sti
xchg
fistl
fnstsw
sbb
fisttpl
push
pop
pushf
push
lret
and
jmp
repz
cld
mov
icebp
mov
and
and
jmp
xor
xor
jno
sbb
xchg
mov
cmp
je
push
mov
mov
cmpsb
xor
sbb
push
mov
lret
and
and
push
push
daa
and
mov
and
sub
and
sub
jl
rolb
push
daa
xor
inc
dec
inc
int
jnp
push
push
adc
lret
and
out
ja
jb
xor
sahf
lcall
mov
and
fistps
stos
mov
xor
cwtl
dec
and
and
fistps
stos
mov
xor
mov
movl
out
stos
ja
jb
xor
fistps
ud1
mov
and
fbld
scas
mov
xor
cwtl
dec
and
and
fbld
scas
mov
xor
mov
mov
movsl
push
ljmp
pop
fbld
scas
lcall
mov
and
fbld
mov
fidivs
cwtl
dec
and
and
fbld
mov
fidivs
mov
mov
push
das
push
movsl
push
out
ja
jb
xor
fbld
ud1
mov
and
fildll
mov
fidivs
cwtl
dec
and
and
fildll
mov
fidivs
mov
scas
aaa
push
das
push
movsl
push
loop
ja
jb
xor
fildll
mov
lock
mov
and
and
fildll
mov
cwtl
dec
and
and
fildll
mov
mov
cmpsl
xor
das
push
movsl
fisubrs
xor
fildll
ud1
mov
and
fbstp
mov
cwtl
dec
and
and
fbstp
mov
mov
lahf
das
push
das
push
movsl
neg
stos
ja
jb
xor
fbstp
mov
mov
and
and
fbstp
ret
xor
cwtl
dec
and
and
fbstp
ret
mov
xor
mov
xchg
sub
das
push
movsl
out
stos
ja
jb
xor
fbstp
ud1
mov
and
fistpll
mov
xor
cwtl
dec
and
and
fistpll
mov
xor
mov
daa
push
das
push
movsl
out
stos
ja
jb
xor
fistpll
lcall
mov
and
fistpll
lret
xor
cwtl
dec
and
and
fistpll
lret
mov
xor
mov
xchg
push
das
push
movsl
fmulp
stos
ja
jb
xor
fistpll
ud1
mov
and
filds
mov
xor
cwtl
dec
and
and
filds
mov
xor
mov
jg
push
das
push
movsl
lret
lock
xor
filds
lcall
mov
and
filds
mov
xor
cwtl
dec
and
and
filds
mov
xor
mov
ja
push
das
push
movsl
into
stos
ja
jb
xor
filds
lcall
mov
and
fisttps
mov
xor
cwtl
dec
and
and
fisttps
mov
xor
mov
outsl
pop
push
das
push
movsl
mov
ja
jb
xor
fisttps
lcall
mov
and
fisttps
mov
xor
cwtl
dec
and
and
fisttps
mov
xor
mov
adc
movsl
mov
jb
xor
fisttps
lcall
mov
and
fists
mov
xor
cwtl
dec
and
and
fists
mov
xor
mov
pop
nopl
push
movsl
mov
stos
ja
jb
xor
fists
lcall
mov
and
fists
mov
xor
cwtl
dec
and
and
fists
mov
xor
mov
push
or
das
push
movsl
scas
mov
ja
jb
xor
fists
lcall
mov
and
fistps
mov
xor
cwtl
dec
and
and
fistps
mov
xor
mov
dec
pop
sbb
sbb
lret
and
jmp
xor
and
sti
sbb
sbb
lret
and
jmp
cmp
and
add
adc
xor
movsl
pop
mov
mov
xchg
fwait
imul
mov
lret
and
and
push
pop
lret
and
ljmp
cmc
dec
pop
lret
and
inc
xchg
data16
inc
inc
iret
and
add
adc
xchg
pop
iret
and
add
sbb
xor
popf
pop
mov
mov
xchg
fwait
imul
sbb
int
pop
lret
and
sub
add
pop
lret
and
mul
add
pop
fwait
mov
bswap
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
in
pop
mov
mov
xchg
fwait
imul
sti
adc
push
pop
lret
and
and
push
pop
lret
and
ljmp
cmc
dec
pop
lret
and
stos
sarl
aad
iret
and
add
adc
xchg
pop
iret
and
add
sbb
xor
popf
pop
mov
mov
xchg
fwait
imul
jle
lcall
sub
add
pop
lret
and
mul
add
pop
fwait
mov
bswap
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
in
pop
mov
mov
xchg
fwait
imul
push
push
mov
pop
lret
and
and
push
pop
lret
and
ljmp
cmc
dec
pop
lret
and
stos
jmp
and
and
add
adc
xchg
pop
iret
and
add
sbb
xor
popf
pop
mov
mov
xchg
fwait
imul
les
and
sub
add
pop
lret
and
mul
add
pop
fwait
mov
bswap
and
xchg
data16
int3
cmp
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
in
pop
mov
mov
xchg
fwait
imul
out
xchg
pop
lret
and
and
push
pop
lret
and
ljmp
cmc
dec
pop
lret
and
xchg
data16
rolb
iret
and
add
adc
xchg
pop
iret
and
add
sbb
xor
popf
pop
mov
mov
xchg
fwait
imul
xor
push
pop
lret
and
sub
add
pop
lret
and
mul
add
pop
fwait
mov
bswap
and
xchg
data16
jge
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
dec
mov
xlat
xchg
fwait
imul
outsl
adc
push
pop
lret
and
and
push
pop
lret
and
sti
out
pop
fwait
mov
or
and
stos
jmp
call
add
fisubl
bound
pop
iret
and
add
pop
in
test
dec
mov
out
incl
pop
jecxz
inc
insb
fxch
push
pop
lret
and
sub
push
pop
lret
and
out
or
fwait
mov
add
and
inc
xchg
data16
and
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
dec
mov
out
fistps
fimuls
pop
lret
and
and
push
pop
lret
and
sti
out
pop
fwait
mov
or
and
xchg
data16
push
es
and
add
adc
lea
pop
iret
and
add
pop
in
test
dec
mov
decb
xchg
fwait
imul
lods
xlat
lret
lret
and
sub
push
pop
lret
and
out
or
fwait
mov
add
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
dec
mov
out
xchg
fwait
imul
jl
rorb
pop
lret
and
and
push
pop
lret
and
sti
out
pop
fwait
mov
or
and
xchg
data16
dec
fmul
and
add
adc
lea
pop
iret
and
add
pop
in
test
dec
mov
into
filds
pop
mov
out
pop
lret
and
sub
push
pop
lret
and
out
or
fwait
mov
add
and
stos
mov
sub
sti
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
dec
mov
testb
fistps
mov
fwait
push
pop
lret
and
and
push
pop
lret
and
sti
out
pop
fwait
mov
or
and
stos
jmp
pop
iret
and
add
adc
lea
pop
iret
and
add
pop
in
test
dec
mov
fsubrp
xchg
fwait
imul
aad
mov
pop
lret
and
sub
push
pop
lret
and
out
or
fwait
mov
add
and
xchg
data16
fs
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
loop
lret
and
stos
rcrl
iret
and
testl
or
iret
and
testl
popf
test
dec
pop
lret
and
stos
jmp
push
iret
and
add
adc
mov
pop
iret
and
add
pop
in
test
ljmp
data16
iret
cmp
and
incl
pop
fisubl
pop
add
iret
and
incl
adc
xor
movsl
test
dec
fldz
bswap
and
xchg
data16
push
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
loop
lret
and
inc
xchg
data16
jne
iret
and
testl
or
iret
and
testl
popf
test
dec
pop
lret
and
stos
sarl
sub
iret
and
add
adc
mov
pop
iret
and
add
pop
in
test
ljmp
data16
sbb
incl
pop
fisubl
pop
add
iret
and
incl
adc
xor
movsl
test
dec
fldz
bswap
and
xchg
data16
pop
imul
sbb
addr16
push
pop
iret
and
sti
push
pop
frstor
loop
lret
and
xchg
data16
mov
iret
and
testl
or
iret
and
testl
popf
test
dec
pop
lret
and
inc
xchg
data16
cmc
pop
iret
and
add
adc
mov
pop
iret
and
add
pop
in
test
ljmp
data16
cmpsl
or
aas
incl
pop
fisubl
pop
add
iret
and
incl
adc
xor
movsl
test
dec
fldz
bswap
and
stos
mov
scas
adcb
or
fisubl
push
push
pop
iret
and
sti
push
pop
frstor
loop
lret
and
stos
rcrl
iret
and
testl
or
iret
and
testl
popf
test
dec
pop
lret
and
xchg
data16
insl
pop
iret
and
add
adc
mov
pop
iret
and
add
pop
in
test
ljmp
data16
ja
iret
and
incl
pop
fisubl
pop
add
iret
and
incl
adc
xor
movsl
test
dec
fldz
bswap
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
jle
lret
mov
out
lret
and
inc
xchg
data16
sti
popf
iret
and
testl
or
iret
and
testl
mov
ljmp
data16
mov
add
fisubl
popa
push
pop
iret
and
add
sbb
lret
mov
out
bswap
and
xchg
data16
sbb
and
incl
pop
fisubl
pop
add
iret
and
decl
pop
jle
lret
mov
loop
lret
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
jle
lret
mov
out
lret
and
xchg
data16
dec
jb
and
testl
or
iret
and
testl
mov
ljmp
data16
es
and
add
adc
mov
pop
iret
and
add
sbb
lret
mov
out
bswap
and
xchg
data16
jl
iret
and
incl
pop
fisubl
pop
add
iret
and
decl
pop
jle
lret
mov
loop
lret
and
inc
xchg
data16
and
and
sti
or
fisubl
push
push
pop
iret
and
sti
add
jle
lret
mov
out
lret
and
stos
test
das
iret
and
testl
or
iret
and
testl
mov
ljmp
data16
notl
add
fisubl
popa
push
pop
iret
and
add
sbb
lret
mov
out
bswap
and
stos
loope
cmpb
iret
and
incl
pop
fisubl
pop
add
iret
and
decl
pop
jle
lret
mov
loop
lret
and
xchg
data16
fisubrl
or
fisubl
push
push
pop
iret
and
sti
add
jle
lret
mov
out
lret
and
stos
rcrl
iret
and
testl
or
iret
and
testl
mov
ljmp
data16
push
in
and
add
adc
mov
pop
iret
and
add
sbb
lret
mov
out
bswap
and
stos
mov
mov
push
pop
fisubl
pop
add
iret
and
decl
pop
jle
lret
mov
loop
lret
and
stos
fstps
iret
and
sti
or
fisubl
push
push
pop
iret
and
sti
sbb
sbb
out
bswap
and
and
jmp
xor
mov
sbb
fisubrl
movntq
sub
sbb
out
lret
and
and
jmp
cmp
mov
sbb
fisubrl
cmp
les
sti
stos
ja
ret
daa
repz
xchg
jbe
cmpsl
mov
pop
insb
lock
push
iret
and
add
sub
pop
mov
out
lret
and
jmp
jecxz
sub
jmp
jecxz
xor
icebp
lds
and
jmp
sub
sub
das
pop
out
fists
fcoml
and
imul
popa
nop
loop
lret
and
jecxz
rcr
cmp
jmp
pop
fidivs
pop
dec
mov
cmp
cmpsb
push
pushf
push
xor
into
and
lret
and
mov
add
fildll
test
push
pop
pushf
push
lret
and
out
sbb
mov
cmp
push
sub
pushf
add
cwtl
adc
xchg
jle
adc
pop
ret
xor
jecxz
sub
outsl
push
push
pop
fidivs
pop
dec
or
in
mov
lcall
jnp
push
push
cld
mov
and
jmp
icebp
fldenv
fwait
lret
and
jmp
sub
xchg
pop
lret
and
jmp
sub
mov
and
add
adc
and
add
lret
and
fcoml
add
add
lret
and
testb
and
aam
shll
add
lret
and
in
shll
xchg
jbe
cmpsl
mov
movlps
mov
sti
fs
decb
into
test
decb
iret
and
or
or
and
in
dec
lods
clc
sbb
lret
and
ficompl
dec
xchg
push
repnz
and
lret
and
rcrb
sbb
push
das
pushf
lock
and
jmp
pop
jmp
xor
adc
and
push
das
shrb
and
sbb
sbb
mov
lret
and
jmp
pop
jmp
xor
hlt
fsubs
icebp
push
das
shrb
pop
out
sbb
sbb
push
das
shrb
sbb
sbb
mov
lret
and
jmp
pop
jmp
xor
popl
and
push
das
shrb
sbb
sbb
sbb
mov
lret
and
jmp
pop
jmp
cmp
jmp
pop
jmp
cmp
adc
and
push
das
shrb
adc
sbb
sbb
mov
lret
and
jmp
pop
jmp
cmp
hlt
fsubs
icebp
push
das
shrb
movntq
sub
sbb
push
das
shrb
or
sbb
mov
lret
and
jmp
pop
jmp
cmp
popl
and
push
das
shrb
or
sbb
sbb
mov
int
jnp
push
add
je
push
popf
push
test
sarl
push
das
into
and
and
icebp
mov
popf
push
aam
mov
xor
and
pop
pusha
pop
inc
popf
push
mov
in
dec
in
nop
pushf
push
pushf
push
pop
inc
popf
push
fsubr
pushf
push
push
add
je
arpl
cmp
and
cltd
daa
repz
mov
cmp
or
push
xchg
fists
fldl
lcall
push
popf
push
imull
jmp
and
pusha
addr16
popf
push
pop
pusha
imul
mov
cmp
scas
out
popf
push
cmp
and
dec
mov
arpl
cmp
gs
push
movsl
insb
daa
repnz
popf
and
bound
or
icebp
stos
sti
popf
push
stc
lods
mov
dec
cmp
xchg
fs
push
popf
push
push
add
push
pop
sbb
push
mov
cmp
add
cwtl
pushfw
push
cmp
repz
popf
push
and
jnp
push
push
in
adc
push
mov
push
pushf
push
dec
and
repnz
push
pop
int
lret
pop
mov
add
iret
and
sti
es
mov
adc
ljmp
aaa
fidivl
dec
xchg
sbb
sti
mov
or
ja
or
or
adcl
test
movntq
repz
fimuls
sbb
sub
out
sub
pushf
push
pushf
push
inc
addr16
push
push
cmpsl
adc
int
fisttpll
push
out
insb
pushf
push
iret
and
pop
push
ret
pushf
push
stos
ja
jb
and
ja
xor
and
loop
ja
jb
and
jnp
xor
and
loop
ja
jb
and
jg
xor
and
scas
jb
lds
cltd
daa
repz
pop
pushf
lock
aas
incl
adc
pop
out
fldenv
mov
and
fistps
jmp
in
cwtl
sbb
lret
and
jnp
push
pop
lret
and
jmp
xchg
out
xchg
jecxz
push
adc
jbe
test
pop
mov
push
pop
pushf
lock
aas
cli
or
test
pop
mov
push
pop
pushf
lock
aaa
testl
pop
imul
shrl
popf
push
imul
and
push
mov
xor
movsl
xor
adc
scas
pop
jecxz
pop
push
arpl
aaa
scas
clc
lret
and
loop
ja
jb
scas
addr16
dec
sbb
dec
pop
add
adc
sbb
cwtl
sbb
lret
and
jnp
push
pop
lret
and
sti
fisttps
pop
out
decb
adc
jbe
test
pop
mov
push
pop
pushf
lock
aas
decl
pop
push
arpl
aaa
mov
jmp
cli
xchg
jmp
in
cwtl
sbb
lret
and
jnp
push
pop
iret
xchg
and
fldenv
push
pop
adc
aas
lcall
sub
lret
and
pop
adc
pushf
push
push
push
in
push
out
je
push
iret
and
sti
or
iret
and
push
xor
das
testl
add
mov
sbb
in
push
pop
fldt
not
add
sub
xor
fstpl
cmpsl
outsl
and
mov
cs
and
fisubs
lds
jecxz
das
repz
push
lcall
stos
push
loop
in
xchg
and
fimuls
pop
fldt
lock
pop
insl
pop
sbb
mov
mov
push
pushf
push
and
mov
xor
cmpsb
xor
xchg
mov
adc
inc
push
pushf
push
lcall
andl
das
testl
arpl
sbb
fists
fldl
pushf
push
lcall
scas
fidivl
aaa
fidivl
movsl
dec
and
lcall
das
xchg
imul
add
push
das
cmp
push
pushf
push
xchg
gs
push
pushf
push
pushf
push
adc
cs
push
mov
xor
add
insb
rcrb
fsubs
push
mov
xor
cmpsb
xor
sub
xor
xor
inc
rorl
sbb
and
fldenv
mov
and
loop
ja
jb
pop
insl
pop
sbb
xor
lahf
sub
pop
das
iret
and
ja
pop
adc
js
aas
push
out
je
push
sbb
pop
jecxz
adc
popl
mov
lock
inc
lcall
jecxz
adc
adc
mov
lock
inc
lcall
loopne
adc
lret
and
push
decb
lret
ret
sub
jmp
mov
bound
popf
push
sbb
or
lret
and
push
or
jnp
and
shll
xor
and
incl
pop
into
and
and
out
sbb
mov
cmp
mov
pushf
push
pop
test
jnp
and
scas
push
das
shll
iret
and
incl
pop
push
mov
adc
push
adc
testb
shlb
mov
fisttpll
fsubrl
sub
push
movsl
and
stos
ja
mov
and
rcrl
stos
mov
xor
xchg
sub
cmp
or
neg
stos
ja
jb
cmp
sub
xor
into
and
in
dec
insl
fstps
daa
lret
and
pop
mov
loopne
cmp
xchg
cmp
test
jnp
push
push
in
movsb
push
out
je
push
xlat
xor
daa
cmp
loop
push
and
imul
int
jnp
push
push
in
movsb
push
out
jne
push
xlat
xor
daa
cmp
loop
push
and
aas
mov
mov
bound
push
add
les
ret
lahf
imul
rolb
lret
push
lret
and
and
sub
xor
jmp
pop
fidivs
pop
dec
mov
cmp
sbb
push
push
pop
adc
je
loop
jne
push
fldenv
add
test
popf
push
push
out
js
push
add
sbb
rcrl
sub
icebp
ret
scas
inc
add
lahf
imul
rorb
jp
push
jle
lahf
imul
or
xor
jmp
adc
jae
rcrl
iret
lahf
imul
jp
push
std
sbb
pusha
rolb
fs
push
in
push
pushf
push
ret
push
push
in
dec
pushf
push
cmp
bound
pushf
push
push
pop
adc
je
sub
popf
push
bound
sub
loope
cmp
cmp
addr16
arpl
cmp
arpl
mov
sar
jmp
nop
or
mov
sti
push
out
je
push
mov
cmp
cli
push
popf
push
adc
sub
jnp
and
rcrl
iret
and
incl
pop
push
movsl
and
stos
ja
mov
and
negl
stos
mov
xor
xchg
sub
pop
cmpsb
mov
ja
or
ds
stos
ja
jb
cmp
sub
xor
into
and
in
dec
push
int
daa
lret
and
mov
dec
fsubrs
les
pop
lcall
lcall
sub
fs
xchg
fs
push
push
in
dec
xchg
fs
push
popf
push
cmp
xor
sarl
les
push
cmp
xchg
test
fistps
cli
dec
lahf
imul
sub
push
pop
jmp
test
xchg
adc
test
add
setl
std
jge
xor
outsl
les
pusha
sbb
mov
cmp
aaa
dec
pushf
push
and
scas
push
das
shll
pushf
push
adc
out
ret
jmp
or
pop
or
xor
xchg
paddusb
or
jecxz
sub
xchg
pushf
push
sbb
xchg
stc
rorl
fidivs
ja
push
pop
cmpsb
mov
ja
jp
and
negl
stos
mov
xor
xchg
push
pop
push
movsl
and
stos
ja
jb
cmp
sub
xor
into
and
in
dec
cmp
and
jmp
or
sbb
mov
cmp
cmp
pushf
push
mov
daa
and
jmp
xorb
sub
daa
fistpll
dec
add
cmp
in
js
icebp
sub
jmp
mov
inc
and
bound
jge
daa
repz
fidivs
pop
dec
mov
cmp
jl
pushf
push
xchg
jge
and
pop
dec
inc
arpl
mov
daa
lds
movsl
pop
jmp
or
adc
iret
sbb
jecxz
insl
xor
adc
testl
push
pushf
push
into
and
in
dec
lcall
jmp
lahf
imul
bound
pushf
push
pushf
push
nop
bound
lcall
inc
pushf
push
pushf
push
decb
adc
jnp
std
sub
pushf
push
pushf
push
cwtl
lretw
and
jecxz
sub
out
pushf
push
iret
and
adc
cmp
adcl
push
repnz
and
mov
cmpsl
daa
repz
mov
cmp
scas
lock
push
add
fidivs
pusha
push
push
in
dec
jl
pushf
push
lret
and
mov
insb
and
nop
sbb
fdivrp
jle
inc
pushf
push
pushf
push
push
in
dec
lcall
pusha
pushf
push
pushf
push
push
pop
dec
add
int
jnp
push
push
cld
mov
out
je
push
xchg
pushfw
push
xchg
gs
push
cwtl
pushfw
push
pop
jmp
mov
and
sti
xchg
fistl
fiadds
pushf
push
pushf
push
mov
cmp
xchg
popf
push
cwtl
lretw
and
jecxz
sub
fcomps
iret
and
dec
testb
push
adc
adc
pop
dec
jl
pushf
push
mov
cmp
inc
lock
push
nop
sbb
sbb
lret
and
xchg
pushf
push
xchg
dec
enter
int3
test
mov
push
cmp
gs
push
fs
pushf
push
and
and
jmp
add
cmp
xchg
in
adc
jb
lahf
imul
sahf
imul
pushf
push
pushf
push
lret
and
stc
pop
ret
push
aad
mov
jg
push
pop
or
jle
push
imul
movsb
push
pop
fistpl
lret
push
jmp
sbb
xchg
dec
mov
stc
pop
ret
push
popf
push
lahf
imul
fst
sub
hlt
jb
lahf
imul
pop
cmp
pop
pushf
push
mov
push
lahf
imul
in
cwtl
js
pop
lret
jmp
nop
push
mov
pushf
push
pushf
push
popf
push
pop
jo
xchg
popf
push
sub
dec
cmpsl
lahf
imul
jmp
mov
lcall
jmp
mov
and
sti
xchg
fistl
fstpl
jecxz
sub
xor
dec
lcall
pusha
pushf
push
pushf
push
decb
inc
add
jecxz
orps
pop
out
data16
imul
pop
cmpsl
insl
sub
decb
lret
subb
push
outsl
les
sub
dec
cwtl
pushfw
push
mov
pop
jmp
sub
sub
ret
pushf
push
sbb
sbb
popf
push
and
mov
cmp
into
pusha
pushf
push
push
add
les
pop
pushf
push
lcall
ja
mov
lahf
imul
push
lret
and
stc
pop
rolb
pop
jmp
mov
add
or
xchg
out
imul
movsb
add
fistpl
fiaddl
xchg
mov
xchg
dec
mov
stc
pop
rolb
fiaddl
jb
lahf
imul
and
dec
cli
or
pop
jmp
cmc
std
sbb
and
cmp
pop
cmp
pop
pushf
push
lahf
imul
daa
cmp
fs
push
mov
jmp
nop
push
mov
pushf
push
push
pop
add
xor
pop
dec
mov
sbb
xchg
push
in
push
pushf
push
pop
dec
fidivs
pop
dec
mov
cmp
fdivrs
add
les
sub
pushf
push
decb
fildll
jb
addr16
lahf
imul
int
jnp
push
add
les
pop
pushf
push
lcall
ja
mov
lahf
imul
push
lret
and
stc
pop
rolb
pop
jmp
mov
add
or
xchg
out
imul
movsb
add
fistpl
fiaddl
xchg
mov
xchg
dec
mov
stc
pop
rolb
fiaddl
jb
lahf
imul
and
dec
cli
or
pop
jmp
cmc
std
sbb
and
cmp
pop
cmp
pop
pushf
push
mov
push
lahf
imul
in
cwtl
js
inc
rolb
pop
jmp
nop
push
mov
pushf
push
push
pop
add
xor
pop
dec
mov
sbb
xchg
push
in
push
pushf
push
pop
dec
fidivs
pop
dec
mov
cmp
and
pushf
push
decb
adc
jl
lock
pushf
push
decb
fildll
jb
addr16
lahf
imul
int
jnp
push
push
in
movsb
and
or
and
cmp
jmp
xor
and
and
mov
add
and
pop
fidivs
pusha
push
cmp
jmp
sbb
mov
cmp
loope
popf
push
decb
mov
cmp
xor
pushf
push
imul
les
pop
pushf
push
dec
and
std
fnstsw
dec
dec
and
dec
lea
push
into
and
lret
and
rcrl
adc
jns
sub
and
mov
xor
rclb
int
cli
mov
rcrl
lahf
lret
and
xor
jnp
push
pop
jle
arpl
xor
push
pop
ds
jle
nop
pushf
push
jnp
push
push
fcoml
inc
fldt
sbb
sbb
sbb
and
lods
and
sub
das
fbld
xor
xor
jmp
xor
xor
jmp
cs
out
add
cmp
jmp
das
into
and
sahf
repz
mov
and
jmp
inc
dec
mov
sbb
fisubrl
neg
and
int
jnp
push
push
in
movsb
and
and
cmp
jmp
das
into
and
and
mov
add
and
out
fidivs
pop
dec
into
and
lret
and
fstps
adc
and
mov
scas
daa
repz
int
jnp
push
push
in
movsb
lret
and
jmp
xor
and
jmp
cmp
sub
in
cmp
out
sbb
mov
cmp
iret
jg
push
sbb
sbb
arpl
sub
dec
loope
push
pushf
push
dec
loope
push
pushf
push
int
or
jnp
push
push
fcoml
dec
pop
jmp
das
into
and
lret
and
xor
imul
les
dec
xchg
gs
push
mov
push
and
bound
adc
in
sub
push
pop
lcall
test
in
dec
lcall
sub
sbb
cmp
and
jmp
pop
sbb
pop
jmp
sbb
xor
mov
cmp
sub
jnp
pushf
push
cmp
gs
push
lcall
scas
and
pop
fisubrl
pop
out
push
pop
int
jnp
push
push
fcoml
sub
jecxz
sub
jns
push
and
push
push
daa
pushf
push
sbb
mov
cmp
inc
xchg
pushf
push
push
push
in
movsb
push
in
dec
lcall
dec
pushf
push
pushf
push
sbb
xchg
in
lret
and
pop
xchg
jecxz
cmp
gs
push
movnti
scas
and
pop
fisubrl
pop
out
push
pop
xchg
movsl
mov
xor
sub
sub
sbb
adc
in
mov
scas
daa
repz
pop
int
jnp
push
push
in
movsb
lret
and
jmp
mov
sub
pushf
push
and
test
xor
sub
cmc
lret
and
jmp
xchg
push
das
iret
and
pop
cmp
gs
push
mov
push
and
and
incl
and
cwtl
push
in
dec
lcall
sub
je
push
cmp
xor
jecxz
sub
and
pop
sub
and
jmp
sub
xor
sub
mov
cmp
and
pushf
push
imul
les
das
xchg
in
lret
and
jmp
mov
push
das
xchg
movsl
mov
xor
sub
sbb
sbb
or
mov
das
pop
out
push
das
xchg
in
lret
and
sub
and
out
sbb
and
jmp
sub
sub
xor
mov
cmp
hlt
lock
push
add
and
jmp
cmc
xchg
push
in
dec
lcall
dec
pushf
push
cmp
xor
pushf
push
xor
outsl
lret
and
jmp
mov
lret
and
jmp
pop
lcall
sbb
and
jmp
daa
repz
xchg
int
jnp
and
or
pop
pushf
push
lret
and
jmp
sbb
and
dec
lret
and
jmp
sbb
and
xchg
data16
cmp
movsl
xor
mov
lock
fs
pop
lret
and
jmp
mov
pop
test
jnp
and
or
pop
pushf
push
lret
and
jmp
sbb
and
dec
lret
and
jmp
sbb
and
xchg
data16
cmp
movsl
xor
mov
lock
fs
pop
lret
and
jmp
mov
pop
test
jnp
push
push
in
movsb
push
out
je
push
sbb
sub
xchg
and
stos
ja
push
jecxz
sub
mov
ret
add
scas
aas
lcall
sub
repz
test
xchg
push
pop
movsl
mov
xor
sub
and
pop
sub
and
jmp
sub
xor
sub
mov
cmp
sti
repz
push
and
pop
lret
and
cli
outsl
les
sub
pop
add
add
and
xchg
data16
cmp
movsl
xor
mov
in
nop
sbb
int3
sbb
sub
xchg
pop
sub
push
sbb
xchg
shrb
sub
sbb
lcall
mov
jle
mov
jns
fcoms
push
loope
loop
push
mov
jmp
xchg
push
das
iret
and
jecxz
xor
xor
sub
test
xchg
push
das
iret
and
jecxz
sub
sbbl
pop
jmp
sbb
cmp
out
sub
data16
pop
jmp
adc
xor
jmp
pop
dec
sub
sahf
repz
mov
and
jmp
icebp
inc
roll
and
and
sub
sub
xchg
xchg
pop
sub
push
int
jnp
sub
jns
aam
lret
and
jmp
mov
inc
mov
pop
jmp
jecxz
xor
cmpsb
dec
mov
and
xor
mov
cmp
lds
push
adc
and
jmp
xchg
push
das
pop
jmp
and
xor
sbb
aaa
pop
out
add
cwtl
out
pusha
mov
xor
jmp
fidivrs
dec
adc
in
cwtl
js
sub
and
xchg
dec
mov
and
sub
jmp
adc
sub
jmp
pop
dec
into
and
xchg
jmp
sub
jmp
pop
jmp
jecxz
xor
and
sub
sub
xchg
xchg
pop
sub
push
test
les
xor
rcrl
incl
pop
into
and
and
out
sbb
mov
cmp
mov
push
mov
insb
xor
outsl
les
sub
sbb
jns
xor
daa
repz
push
mov
push
in
dec
lcall
inc
pushf
push
pushf
push
adc
bound
push
push
or
xchg
leave
lock
and
jecxz
sub
dec
pushf
push
mov
daa
into
andb
lret
and
push
popf
push
into
and
in
dec
add
or
dec
and
out
js
push
pushf
push
mov
push
in
dec
add
jmp
cwtl
data16
repz
jecxz
sub
es
push
mov
mov
icebp
repnz
mov
pushf
push
push
pop
fldt
lock
bound
and
imul
add
lock
and
lret
and
mov
xchg
adc
cld
pushf
push
std
fldt
jmp
fbstp
jg
sub
negl
jbe
pop
mov
cmpsl
shrb
daa
hlt
lock
and
xor
lret
and
mov
imul
add
jae
and
cmp
out
sbb
mov
cmp
pop
inc
pushf
push
cmp
daa
cmp
cmp
mov
dec
and
scas
aas
sti
mov
stos
ja
repnz
push
mov
cmp
mov
and
mov
mov
xor
outsl
les
mov
xor
seta
cld
or
mov
pushf
push
lcall
push
jns
das
adc
mov
jle
xor
pushf
push
sub
xchg
and
fsubs
dec
outsl
aas
mov
jle
pop
pushf
push
cld
mov
and
jmp
sbb
and
xchg
data16
shll
into
and
lret
and
mov
push
cs
jns
push
add
jecxz
aas
lcall
sub
sub
popf
push
into
and
lret
and
dec
test
jle
fcompl
pushf
and
fistps
sub
out
cmc
xchg
movsw
mov
xor
sub
sbb
sbb
int
mov
icebp
mov
das
pop
out
push
das
xchg
dec
mov
and
sub
jmp
adc
sub
jmp
in
fidivs
pop
dec
into
and
xchg
jmp
sub
daa
pushf
push
pop
jecxz
das
xchg
pop
sub
and
sub
sub
xchg
xchg
pop
sub
pushf
push
xchg
fs
push
popl
mov
repz
xchg
pop
test
jnp
push
push
in
movsb
lret
and
dec
cmp
lret
and
jmp
imul
movsl
mov
xor
sub
sbb
sbb
daa
cmp
sbb
fisubrl
pop
out
push
pop
pop
jmp
and
xor
jmp
jecxz
gs
and
and
in
cwtl
js
sarl
mov
repz
xchg
dec
mov
sbb
lcall
sbb
and
jmp
cmc
xchg
push
in
dec
lcall
dec
pushf
push
cmp
add
pushf
push
xor
outsl
les
das
iret
and
add
das
mov
cmp
in
jmp
inc
add
xor
and
inc
cmp
fs
push
into
and
and
mov
mov
pushf
push
cld
fmul
xchg
adc
pop
out
and
cld
pop
movsl
inc
xchg
lcall
adc
and
stos
ja
push
and
adc
test
sbb
lret
and
fsubs
adc
and
add
xor
pop
and
xchg
and
pop
call
aas
cmp
push
push
fidivs
pop
dec
mov
cmp
les
mov
test
push
pop
lret
and
fsubs
adc
and
fsubs
adc
and
add
xor
pop
and
xchg
and
pop
hlt
stos
lret
and
push
push
fidivs
pop
dec
mov
cmp
je
pushf
push
test
push
pop
rolb
iret
and
arpl
test
ja
push
and
adc
test
loopne
push
fldt
rclb
stos
ja
push
and
adc
test
add
lret
and
and
fcompl
stos
ja
push
and
adc
test
sub
lret
and
and
iret
and
std
push
pop
aaa
ss
push
inc
add
and
adc
test
push
pushf
push
lret
and
add
xor
pop
and
stc
ds
push
iret
and
pop
add
mov
cmp
movsl
xor
dec
pop
sub
daa
push
pop
ds
adc
movsl
sbb
and
mov
add
mov
push
movsb
add
cmp
jmp
sub
jecxz
sub
cs
push
push
in
dec
lcall
sub
dec
pushf
push
adc
xor
sbb
sbb
pop
jmp
pop
fidivs
pop
dec
mov
cmp
sub
popf
push
and
sbb
xchg
int
jnp
push
push
fcoml
icebp
movsl
xor
das
sub
sbb
adc
in
mov
mov
outsl
les
sub
pop
jmp
sub
jecxz
das
xchg
imul
pop
jmp
das
xchg
iret
and
jecxz
sub
and
out
sbb
and
jmp
sub
sub
xor
mov
cmp
ljmp
pushf
push
push
in
movsb
lret
and
jmp
jecxz
das
xchg
in
icebp
stos
hlt
sub
push
pushf
call
pop
jmp
jecxz
das
xchg
in
icebp
test
push
push
pop
pushf
push
lret
and
jmp
sbb
and
xchg
data16
cmp
movsl
xor
mov
lret
and
out
sbb
and
xchg
data16
cmp
movsl
xor
mov
int
lock
add
les
pmulhw
xor
add
pop
mov
add
fmuls
sbb
xchg
imul
push
jge
push
jnp
push
push
in
movsb
lret
and
jmp
mov
lret
and
jmp
icebp
and
lret
and
out
mov
lret
and
out
icebp
and
push
out
je
push
sbb
sub
xchg
and
stos
ja
push
jecxz
sub
sbbl
das
sub
xchg
and
stos
ja
push
jecxz
sub
lahf
pushf
push
add
ljmp
jne
inc
jmp
shlb
push
pop
lret
and
scas
and
dec
xchg
sub
pushf
push
outsl
les
das
into
and
lret
and
mov
sub
in
imul
les
xor
and
and
out
sbb
mov
cmp
sbb
popf
push
sub
jnp
push
push
fcoml
dec
pop
out
sbb
mov
cmp
lret
push
sub
jnp
push
push
fcoml
dec
pop
jmp
das
into
and
lret
and
pop
lahf
imul
xchg
xor
in
imul
les
call
jmp
sub
and
pop
mov
push
das
xchg
dec
mov
and
xor
and
lret
and
xor
in
xchg
sbb
lret
and
jmp
sub
mov
add
out
movsl
jecxz
aas
lcall
sub
sub
xchg
dec
mov
and
jns,pn
xchg
imul
add
popf
push
scas
lahf
int
jnp
sub
jns
in
push
out
js
push
pushf
push
cwtl
data16
repz
das
into
and
lret
and
ficomps
movlps
jl
loope
jl
push
push
das
xchg
in
lret
and
jecxz
mov
and
xchg
dec
mov
and
sub
jmp
adc
sub
fidivs
pop
dec
into
and
xchg
jmp
sub
mov
daa
repz
das
xchg
in
lret
and
jecxz
mov
pushf
push
xchg
dec
mov
and
sub
jmp
adc
sub
fidivs
pop
dec
into
and
xchg
jmp
sub
leave
pushf
push
and
dec
and
out
icebp
and
mov
sbb
daa
pop
out
pop
cwtl
out
pop
mov
xor
xchg
cmp
xor
jmp
adc
xor
jecxz
fistpll
fdivrp
xchg
out
std
filds
dec
sub
sahf
repz
mov
pushf
push
pop
jecxz
xor
out
icebp
das
lahf
cs
xchg
mov
out
cmpsb
pop
pushf
push
xchg
in
lret
and
jecxz
mov
pushf
push
xchg
in
lret
and
jecxz
jmp
das
xchg
push
stos
or
cmpsb
dec
mov
and
xor
mov
cmp
ret
push
adc
and
jmp
icebp
inc
rcr
dec
and
out
icebp
and
mov
sbb
daa
pop
out
pop
cwtl
out
pop
mov
xor
xchg
cmp
xor
jmp
adc
xor
jecxz
fistpll
fdivrp
xchg
out
std
filds
dec
sub
sahf
repz
and
pop
jecxz
icebp
mov
sbb
fbstp
pop
out
out
pop
mov
sbb
adc
in
test
in
dec
mov
xchg
in
lret
and
jecxz
jmp
das
xchg
push
stos
or
sub
and
sub
sub
xchg
xchg
pop
sub
pushf
push
xchg
fs
push
stos
pop
dec
mov
adc
add
mov
adc
push
add
pushf
push
push
out
jns
push
stos
ja
mov
push
hlt
push
pop
pop
test
imul
les
das
mov
cmp
xor
and
jmp
xor
cmp
add
aaa
into
and
lret
and
cmp
jmp
pop
into
and
lret
and
out
push
repnz
lret
and
or
adc
xlat
popf
push
imul
les
das
shll
xchg
gs
push
mov
push
and
and
jmp
sub
and
xorl
clts
pop
fidivs
pop
dec
mov
cmp
jne
pushf
push
enter
push
in
dec
lcall
dec
pushf
push
pushf
push
loop
lret
and
popf
mov
out
lret
and
fsubrl
lcall
sub
bound
push
or
sbb
and
and
or
sbb
pop
jmp
pop
fidivs
pop
dec
mov
cmp
or
push
add
and
sub
xchg
push
in
dec
lcall
dec
pushf
push
cmp
inc
nop
pushf
push
fsubrl
mov
sbb
sbb
add
icebp
mov
das
pop
out
decb
sub
xchg
dec
mov
mov
xor
pop
in
sbb
and
pop
jecxz
adc
pop
test
cmp
stc
dec
shlb
mov
pop
popf
push
lcall
dec
pushf
push
pushf
push
push
pop
mov
cmp
adc
pushf
push
push
or
jecxz
or
dec
xchg
gs
push
xorl
fisubrl
pop
out
cli
or
and
and
xor
xor
in
mov
shll
cli
or
sub
xchg
xchg
pop
sub
pushf
push
xchg
fs
push
push
pop
dec
shll
decb
xchg
fucomp
fimuls
dec
pop
and
xor
mov
cmp
das
test
dec
add
dec
pop
add
and
and
mov
sti
fwait
lock
and
out
lret
and
les
pop
pushf
push
lret
and
jmp
sub
xor
fimull
mov
cmp
add
scas
aas
lcall
sub
repz
sbb
sbb
scas
arpl
daa
repz
mov
cmp
xchg
ss
push
jnp
and
rcrl
das
iret
and
incl
pop
into
and
lret
and
int
or
icebp
lahf
outsl
adc
enter
cli
outsl
les
pop
lcall
in
out
fidivs
pop
dec
push
in
dec
push
push
adc
mov
cmp
sub
pushf
push
imul
les
push
mov
pop
into
and
and
cmp
sub
call
pop
jmp
mov
and
decl
rcrl
pop
pushf
push
lcall
xor
sbb
sbb
push
mov
push
repnz
sbb
test
rorb
cmpsl
out
pushf
push
popf
push
pop
jo
add
imul
std
fstpl
cmp
in
das
mov
cmp
cmp
pusha
pushf
push
into
sahf
mov
mov
jmp
xchg
push
mov
flds
push
movsb
push
push
push
in
dec
inc
cmp
push
popf
push
push
clc
pushf
push
mov
adc
sbb
cli
or
mov
mov
mov
sbb
jmp
sbb
adc
and
mov
rcrl
enter
pop
or
dec
rcrl
enter
pushf
push
pushf
push
popf
push
pop
jo
add
imul
std
fstpl
cmp
in
das
mov
cmp
cmp
pusha
pushf
push
fldcw
mov
rcrl
fcoml
pusha
flds
push
movsb
adc
in
dec
inc
cmp
push
popf
push
test
dec
add
in
cli
or
mov
mov
mov
jmp
sbb
adc
and
mov
ret
enter
pop
or
push
ret
enter
pushf
push
repnz
pop
pushf
push
push
pop
aas
push
pop
push
in
push
sahf
push
push
popf
push
fidivs
pop
dec
mov
cmp
sbb
push
sub
sub
testb
jecxz
sub
cwtl
pushf
push
icebp
fdivr
bswap
and
in
dec
hlt
adc
push
mov
lcall
push
outsl
les
repz
cmc
ficompl
sub
sbb
in
push
les
repz
mov
cmp
and
pushf
push
push
push
fcoms
iret
and
pop
sbb
xchg
xchg
iret
and
push
jecxz
push
pop
sbb
lret
and
sti
add
imul
sbb
xchg
lret
and
mull
iret
and
out
sahf
out
frstor
int
jnp
push
push
in
movsb
lret
and
jmp
repz
ret
aas
jmp
iret
and
add
pop
sbb
fstpl
lret
and
jmp
repz
fidivs
pop
dec
mov
cmp
adc
pushf
push
and
xor
in
mov
pop
xchg
out
adc
and
notl
jl
cli
outsl
les
xor
stos
adc
out
jo
push
pushf
push
adc
je
test
scas
jae
aaa
adc
lret
and
stos
sub
sbb
push
out
ja
jb
and
cmc
xchg
fistps
pushf
push
push
das
push
movsb
lret
or
and
out
ja
jb
stos
adc
out
je
push
push
pop
pushf
push
lret
and
xor
out
fidivrs
or
jecxz
sbbl
lret
and
cmpsl
push
pop
stos
repz
and
stos
sub
jle
lret
and
out
in
nop
sbb
in
das
imul
pop
push
popf
push
lret
and
mov
outsl
les
xchg
and
xchg
fs
repz
das
iret
and
and
repz
lea
sub
adc
addr16
pop
jmp
adcb
jno
sub
pushf
push
pushf
push
xchg
xor
dec
pop
out
sbb
mov
cmp
add
popf
push
outsb
mov
fldl
pushf
push
xchg
gs
repz
pop
lea
cs
xchg
out
dec
loope
push
pushf
push
testb
fsubrp
cli
push
neg
fsubrp
fidivs
into
and
enter
add
and
push
pop
fs
out
pusha
push
sub
xor
mov
push
inc
jnp
fsubrp
into
and
lret
and
popf
lahf
imul
jge
cwtl
data16
repz
fldt
push
out
xchg
pushf
push
push
movsl
or
and
out
and
repz
testb
and
mov
lret
and
and
xchg
sbb
push
movsl
int
sbb
and
mov
xor
movsl
xor
loopnew
lret
and
push
stos
mov
xor
and
out
enter
lock
icebp
mov
push
pushf
push
push
out
mov
iret
and
jno
ficompl
fsubs
testb
and
and
nop
sbb
call
mov
fucomip
mov
psadbw
push
movsl
dec
xchg
xor
mov
mov
sbb
shll
pop
fcom
lret
testb
movsl
out
les
xor
sbb
xor
sti
lret
and
sub
rcr
out
enter
aad
roll
out
lea
iret
and
jae
sub
lcall
in
roll
and
sub
inc
popf
push
stos
ja
pop
lcall
movsl
mov
fmul
add
es
lea
jecxz
sub
adc
out
jno
and
adc
pop
movntq
out
sti
fldt
add
push
sub
cmp
cmp
push
and
and
pop
cmp
pop
xchg
fs
xor
movsl
insb
daa
repnz
movntq
and
xor
sub
mov
cmp
adc
adc
popa
adc
insb
daa
repnz
enter
sti
adc
sub
cmp
cmp
and
pop
cmp
pop
xchg
fs
xor
movsl
insb
daa
repnz
movntq
and
xor
xor
sbb
sbb
repnz
movsl
movsl
insb
daa
repnz
pusha
adc
cmp
cmp
pushf
push
fsubrp
jne
adc
and
sub
fsubrp
dec
loope
push
xchg
fs
repz
sbb
pop
cmpsl
cmc
fnstcw
dec
pop
jmp
pop
into
and
sahf
repz
pop
jns
push
sar
and
and
and
and
ja
sbb
add
in
inc
adc
in
mov
and
out
sbb
mov
cmp
mov
mov
push
pushf
push
aaa
notl
inc
imul
adc
testl
addr16
in
dec
lcall
fs
push
pushf
push
inc
and
push
pop
jmp
or
cmp
fisubrl
sbb
adc
pop
xchg
leave
sub
cwtl
data16
test
int3
pushf
push
out
pop
mov
cmp
pop
dec
jp
pushf
push
cwtl
pushfw
push
pushf
push
pushf
push
mov
das
movntq
pop
sbb
mov
mul
add
and
ljmp
xor
in
push
xchg
fs
push
push
in
dec
test
pushf
push
popf
push
cmp
xor
pushf
push
dec
inc
pushf
push
orb
pushf
push
sbb
lret
and
imul
les
sub
sbb
sbb
or
pop
jmp
or
pop
jmp
repz
xchg
lret
and
jmp
sub
jecxz
sub
mov
jmp
iret
and
notl
adc
sub
sbb
push
pop
fstl
sub
jecxz
sub
mov
aas
jmp
iret
and
notl
adc
sub
sub
lods
pushf
push
and
jecxz
sub
mov
adc
daa
lret
xor
outsl
les
xchg
in
pushf
push
push
cmpsl
lods
jo
xor
push
and
and
jmp
sub
and
pop
pop
pushf
push
and
iret
and
sbb
pop
sbb
lret
and
sub
or
in
mov
push
and
xchg
sbb
push
pop
push
jb
or
rcrl
sub
sbb
fidivs
pop
dec
mov
cmp
mov
mov
outsl
mov
out
fidivl
neg
out
into
and
sub
enter
lock
cmp
sub
fidivs
pop
dec
into
and
lret
and
fnstcw
push
mov
cwtl
pushfw
push
daa
repz
fildll
push
xchg
gs
push
pusha
dec
pushf
push
and
and
jmp
xor
mov
cs
and
jmp
xor
xor
mov
lret
and
push
daa
fisubrl
pop
out
out
cmc
flds
lret
and
ss
lods
jo
icebp
or
and
add
mov
das
pop
jecxz
testl
daa
repz
call
imul
jge
cwtl
hlt
xchg
fs
bound
loop
lret
and
daa
repz
mov
mov
push
pop
jmp
sbb
dec
and
mov
push
pop
jmp
sbb
dec
and
out
loop
xchg
leave
and
pushf
push
dec
loope
pusha
daa
repz
xchg
leave
xor
mov
int3
and
and
sub
dec
ret
push
mov
cmp
rcl
pushf
push
or
fstl
stos
or
xor
push
das
pop
mov
add
iret
and
or
or
lret
and
push
add
push
out
jl
push
decb
fldt
mov
lock
mov
and
mov
or
adc
movsb
mov
xchg
fs
or
and
sbbl
test
data16
in
sub
sub
add
adc
lret
and
scas
inc
add
adc
push
inc
add
adc
mov
lret
and
scas
inc
add
add
pusha
repz
popf
push
push
cmpsl
iret
and
or
sub
add
mov
sbb
sbb
test
and
pop
cmp
pop
pushf
push
sub
xor
mov
cmp
jno
pushf
push
cli
or
aas
lret
and
and
add
and
sbb
lret
and
sub
ja
sbb
add
in
inc
adc
in
mov
push
xchg
out
mov
cmp
clc
adc
push
sbb
xchg
jge
sbb
sbb
sub
addr16
push
adc
inc
imul
jnp
push
add
mov
arpl
adc
imul
push
lret
and
stc
pop
mov
popf
push
sub
icebp
ret
scas
aas
incl
movsb
push
pop
mov
or
jbe
push
ror
adc
imul
adc
and
jmp
xor
mov
stc
pop
mov
popf
push
popf
push
lahf
imul
fs
push
popf
push
lret
and
jmp
xor
sub
hlt
jp
lahf
imul
pop
cmp
pop
pushf
push
mov
push
lahf
imul
in
cwtl
js
movhps
mov
test
pmulhw
cli
outsl
les
push
pushf
push
pushf
push
out
xlat
add
into
and
pusha
mov
popf
push
lret
and
xor
ret
lods
jo
hlt
sbb
sbb
je
pushf
push
jl
pushf
push
test
arpl
cmp
pusha
mov
icebp
sbb
sbb
adc
and
iret
and
sti
xchg
fistpl
out
jmp
adc
cltd
cmpsb
xor
in
movsb
adc
pusha
add
jle
pushf
push
add
lret
and
push
pop
cmp
jecxz
lahf
pop
sub
lret
and
and
nop
sbb
filds
pop
mov
cmp
movsl
xor
iret
and
xchg
sbb
mov
push
movsb
fstps
lret
and
mov
sub
adc
and
scas
cmpsl
arpl
fldl
pop
cwtl
out
lret
and
push
add
jecxz
lahf
pop
and
jle
arpl
pop
mov
push
movsb
enter
ds
stos
ja
push
jecxz
sub
sub
push
lret
and
and
xchg
sbb
adc
int
jnp
push
push
in
movsb
lret
and
adc
mov
stos
adc
xchg
and
pushf
push
push
pop
mov
cmp
movsl
xor
shlb
in
nop
sbb
jmp
pop
imul
jno
sbb
int
jnp
push
push
in
movsb
adc
pusha
roll
and
jecxz
icebp
sbb
int3
and
ja
sub
lret
and
ljmp
sbb
mov
cmp
movsl
xor
dec
pop
out
push
das
mov
cmp
mov
leave
lret
and
ljmp
pushf
push
lret
and
and
pop
jmp
sub
bswap
and
ljmp
pop
dec
lret
and
xchg
insb
shlb
in
nop
sbb
sbb
sub
std
lret
and
pushf
push
and
adc
pop
int
jnp
push
push
in
movsb
push
out
je
push
and
mov
cmp
inc
pop
pushf
push
xchg
fistl
fucomp
aam
pop
fldt
pushf
lock
aaa
notl
in
das
inc
pop
push
pop
insl
mov
sub
lret
and
mov
adc
inc
sbb
lret
and
cmpsb
xor
in
movsb
push
in
dec
lcall
push
pushf
push
pushf
push
push
pop
int
jnp
push
push
in
movsb
lret
and
jmp
icebp
push
pop
push
out
js
push
push
pop
sbb
lret
and
push
jo
daa
repz
iret
and
notl
adc
sub
inc
pushf
push
push
push
in
movsb
push
in
dec
lcall
push
pushf
push
pushf
push
sbb
sub
lcall
pop
fisubrl
pop
out
push
pop
dec
loope
pusha
pushf
push
xchg
push
mov
pop
jmp
pop
lcall
sub
mov
pop
jmp
sub
xor
and
jmp
pop
fisubrl
pop
out
sbb
sbb
lret
and
bound
push
push
fcoml
xor
roll
and
out
xor
xor
out
filds
jecxz
das
xchg
push
mov
movntq
repz
pop
fsubrs
adc
and
jmp
mov
lret
and
out
and
and
sub
sbb
mov
out
jecxz
sub
das
pop
out
push
das
mov
cmp
mov
pushf
push
and
shrb
sub
sbb
fisubrl
push
sub
pushf
and
shll
xor
and
incl
pop
into
and
and
out
sbb
mov
cmp
add
pushf
push
pop
test
jnp
push
add
mov
arpl
cmp
fs
imul
sub
push
pop
jmp
mov
and
pop
cmp
bound
dec
mov
push
pop
sub
xchg
arpl
mov
call
pop
jmp
nop
push
mov
mov
jecxz
sub
xchg
pushf
push
hlt
push
pop
sub
fidivs
fs
push
in
push
lcall
dec
pushf
push
pop
dec
mov
sbb
mov
cmp
out
pushf
push
push
pop
into
and
in
push
nop
bound
dec
pushf
push
pop
dec
cmpsl
ja
daa
adc
test
push
push
pushf
push
xchg
sbb
lahf
imul
outsl
je
sub
or
jbe
push
sub
fstpl
cmp
cmp
pop
pushf
push
mov
push
hlt
les
mov
jo
pop
jmp
xchg
and
pop
cmp
bound
dec
mov
push
enter
arpl
mov
call
pop
jmp
nop
push
mov
pushf
push
xchg
gs
push
popf
push
andl
lahf
imul
in
iret
mov
dec
dec
and
dec
test
xchg
arpl
cmp
fs
imul
mov
aam
cmc
adc
imul
and
dec
or
mov
arpl
cmp
fs
insb
daa
repnz
aam
cmc
jle
mov
mov
xorl
jo
js
push
sub
fstpl
cmp
cmp
pop
pushf
push
mov
push
and
mov
and
inc
jb
pop
jmp
xchg
pop
pusha
mov
jecxz
sub
aas
pushf
push
pop
mov
push
pop
sub
fidivs
fs
push
in
push
lcall
dec
pushf
push
pop
dec
and
daa
mov
cmp
cmp
neg
push
pop
mov
cmp
test
pop
sub
pop
out
je
shrl
data16
sbb
mov
jmp
xor
jae
fwait
lcall
movsl
pop
out
arpl
cmp
add
mov
jnp
and
sub
arpl
mov
push
pop
jmp
or
pop
out
mov
fisttpll
lods
pushf
push
cmp
xchg
test
mov
pop
out
sbb
xchg
push
in
dec
imul
cmp
mov
and
sti
xchg
fistl
fsub
addb
mov
sbbl
jmp
or
pop
out
mov
fstl
pop
dec
arpl
sbb
mov
cmp
push
pushfw
push
mov
adc
out
andl
push
push
in
dec
mov
in
dec
lcall
int3
popf
push
push
mov
xchg
fistps
out
iret
push
pop
dec
add
cmp
daa
cmp
gs
push
cmpsl
insl
daa
repnz
daa
repz
sbb
push
mov
dec
add
js
daa
repz
mov
cmp
out
pushf
push
and
daa
cmp
or
sub
insl
daa
repnz
imul
sbb
push
movsl
pop
jmp
das
cmp
push
pushf
push
jl
pushf
push
cmpsl
insl
daa
repnz
or
daa
cmp
push
mov
arpl
mov
push
pop
jmp
xchg
sub
pushf
push
pushf
push
and
dec
inc
les
daa
mov
cmp
xor
push
adc
test
adc
sbb
push
movsl
pop
jmp
icebp
mov
and
xor
add
xchg
push
in
dec
imul
cmp
test
cmpl
dec
mov
push
xchg
fs
push
mov
cmp
mov
pushf
push
mov
xlat
and
and
gs
push
mov
icebp
testb
in
dec
pushf
push
pop
dec
pushf
push
inc
add
xlat
daa
repz
or
xor
sbb
or
daa
cmp
gs
push
mov
cmp
jo
pushf
push
mov
fsubs
repz
xor
jmp
sti
fidivs
pop
dec
mov
cmp
arpl
pop
or
jl
arpl
push
pop
pushf
push
and
lahf
push
pop
mov
xor
cmpsl
xor
pop
fdivrl
sub
pop
test
and
in
dec
cmp
sbb
sahf
repz
outsb
into
popf
push
xchg
xlat
leave
bound
dec
xchg
push
push
xchg
fs
push
cs
jl
and
sub
daa
leave
jge
dec
and
and
pop
cmp
out
repnz
mov
out
sbb
daa
lret
and
mov
dec
daa
repz
sahf
pushf
push
popf
push
lret
and
mov
dec
and
and
mov
dec
test
lcall
mov
dec
leave
and
out
and
daa
cmp
and
xchg
sub
sub
insl
daa
repnz
outsb
xor
dec
je
pushf
push
jl
pushf
push
cmpsl
insl
daa
repnz
jmp
daa
repnz
daa
cmp
push
mov
arpl
mov
push
pop
jmp
xchg
sub
pushf
push
pop
test
jecxz
addr16
or
jnp
and
shll
xor
and
incl
pop
into
and
and
out
sbb
mov
cmp
fsubrl
pushf
push
pop
test
jnp
push
push
in
movsb
push
in
dec
lcall
fs
push
pushf
push
xlat
sbbl
xchg
inc
add
pop
sbb
sbb
cmpsl
stos
outsl
sub
add
into
and
lret
and
dec
inc
mov
jge
and
mov
cmp
das
rcrl
cmp
and
fbld
sub
jecxz
sub
jmp
lret
and
movsl
push
inc
pushf
push
pushf
push
sub
lret
and
fnstcw
and
push
pop
lcall
mov
push
and
push
pop
fisubrl
pop
out
push
pop
dec
loope
push
pushf
push
bnd
lcall
gs
pop
jmp
or
pop
jmp
pusha
lcall
xor
mov
cmp
fwait
jecxz
push
fisttpll
pushf
push
cmpsl
xor
pop
sub
adc
lret
sbb
xchg
mov
cmp
push
call
pop
jmp
sub
jecxz
sub
negb
and
xchg
iret
and
pop
stc
faddl
pop
sbb
mov
sbb
repz
pop
sbb
adc
je
lret
and
jmp
xor
xchg
popf
push
sub
jecxz
sub
cmp
sub
mov
cmp
rorl
push
mov
imul
les
mov
sbb
icebp
cli
or
jle
lahf
push
pop
pushf
push
xchg
fisttpll
pushf
push
and
pushf
push
sbb
push
pop
lods
icebp
pushf
push
scas
addr16
decb
iret
and
add
shufps
and
and
and
incl
pop
into
and
sub
fisttpll
xchg
imul
repz
sub
pop
lods
icebp
pushf
push
sbb
sbb
push
scas
jno
push
dec
and
pop
pushf
push
les
lret
and
push
push
push
pop
out
fildll
addr16
repz
pop
push
or
sub
and
cmp
and
das
out
xlat
push
pop
sbb
lret
and
and
jmp
push
push
pop
xchg
in
lret
and
jmp
sub
sub
push
in
dec
mov
push
mov
cmp
xchg
jl
push
testb
jecxz
sub
les
imul
lret
and
ljmp
xor
and
lret
and
mov
xor
test
pushf
push
sbb
add
ljmp
sub
and
adc
add
and
lret
and
mov
xor
repz
sbb
adc
js
leave
lret
and
ljmp
into
and
lret
and
mov
xor
in
nop
sbb
faddl
pop
mov
cmp
roll
mov
pushf
push
pushf
push
mov
xor
movsl
push
les
aas
cmp
adc
filds
pop
mov
cmp
cmp
mov
pushf
push
sbb
bnd
lcall
lret
sbb
jmp
or
pop
jmp
pusha
lcall
xor
mov
cmp
int3
jp
push
fisttpll
pushf
push
fxch
pushf
push
push
pop
pushf
push
lret
and
aam
push
xor
pop
pushf
push
pop
or
xor
daa
repz
jecxz
sub
ds
push
add
or
and
mov
sub
imul
les
push
and
in
dec
out
fwait
sbb
mov
cmp
jg
pushf
push
xchg
fildll
addr16
repz
lret
and
jmp
sub
mov
add
iret
and
aas
cmp
dec
mov
daa
repz
pop
mov
cmp
jecxz
pushf
push
mov
stos
ja
pushf
push
lret
and
jmp
sub
mov
add
iret
and
or
adc
xor
and
mov
mov
and
lar
shrb
adc
testb
and
xor
lret
and
add
xchg
daa
repnz
and
mov
nop
sub
add
push
or
shlb
into
and
and
cmp
out
sbb
mov
cmp
bound
adc
dec
pop
jmp
adc
and
lret
and
or
xchg
sub
repnz
dec
push
in
dec
movl
mov
cmp
rolb
pusha
push
pushf
push
fiaddl
pop
dec
push
in
dec
roll
mov
xchg
hlt
repnz
repnz
push
xchg
sbb
jnp
push
push
cld
mov
and
jmp
sub
in
dec
mov
sbb
mov
cmp
push
bound
xchg
fildll
push
lret
and
jmp
sub
mov
add
iret
and
aas
cmp
loope
push
mov
cmp
cli
fcompl
mov
stos
ja
sbbb
and
jmp
sub
mov
add
iret
and
or
adc
xor
and
mov
test
and
lar
shrb
sbb
and
xor
lret
and
mov
repnz
and
mov
xchg
sub
add
push
or
shlb
pop
dec
lret
and
cmp
out
sbb
mov
cmp
in
popf
push
cmp
jmp
adc
and
lret
and
leave
cmc
xchg
sub
repnz
out
popf
push
xchg
sbb
jnp
push
add
mov
data16
add
pushf
push
lds
push
shlb
mov
ficomps
jmp
or
pop
jmp
inc
lcall
pop
add
and
and
or
or
dec
lret
and
pop
and
and
xchg
sbb
sbb
push
out
jl
push
push
pop
sbb
adc
je
mov
and
push
sbb
pushf
push
mov
stos
ja
mov
adc
pop
jmp
sbbb
sbb
into
sbb
push
pop
insb
rcrb
push
in
dec
lcall
sbbb
in
mov
and
daa
cmp
outsl
mov
sub
jbe
lahf
imul
xor
cmp
pop
pushf
push
xchg
addr16
push
lahf
imul
out
and
mov
cmp
icebp
sub
testb
jecxz
sub
jb
push
test
pushf
push
pushf
push
pushf
push
push
in
dec
xchg
outsb
sbb
pop
pusha
roll
cmp
in
or
push
popf
push
lret
and
mov
cmp
in
nop
sbb
loop
mov
mov
daa
repz
pop
fidivs
pusha
push
into
and
in
dec
js
sbb
pop
pusha
roll
cmp
js
popf
push
popf
push
lret
and
mov
cmp
in
nop
sbb
sub
adc
and
mov
cmp
repz
jecxz
sub
push
push
lcall
dec
pushf
push
pushf
push
push
das
mov
cmp
pushf
xchg
push
or
jecxz
or
xor
add
and
push
xor
push
sbb
push
pop
in
adc
sbb
sbb
xchg
mov
sub
mov
mov
loopne
jmp
or
test
cli
outsl
les
sub
pop
sub
mov
add
and
jmp
das
into
and
and
mov
xor
mov
push
movsb
hlt
xor
and
push
sub
pushf
push
loop
lret
and
jmp
and
addr16
in
mov
lds
hlt
sbb
mov
lcall
pop
mov
pop
jmp
adc
lret
and
mov
loop
xor
outsl
les
das
shll
iret
and
testl
push
je
test
xor
xor
outsl
les
xchg
sbb
push
iret
andl
out
sbbb
jecxz
sub
test
sbb
imul
imul
and
stos
ja
mov
and
mov
xchg
sub
adc
and
stos
ja
or
aas
sti
pop
stos
mov
xor
cmpsl
xor
add
push
insb
pop
out
push
push
fidivs
pusha
push
into
and
in
dec
insb
pop
sbb
pop
pusha
lret
push
dec
cmp
or
dec
inc
pop
cmp
mov
aaa
arpl
cmp
popa
pushf
push
lahf
imul
out
push
pop
mov
cmp
cmp
and
decl
or
pushf
push
mov
cmp
fidivrl
push
mov
cmp
adc
jl
hlt
push
pop
mov
cmp
int3
jae
push
lret
test
imul
les
xchg
cmpb
bound
repz
iret
and
sub
jmp
sbb
push
out
test
push
pushf
push
fmull
int
popf
push
stos
mov
push
out
mov
push
test
arpl
out
lcall
in
nop
pushf
push
pushf
push
test
xchg
test
stc
popf
push
mov
daa
imulb
ret
gs
daa
repnz
jne
xchg
test
pop
popf
push
fsubrp
pushf
push
lahf
das
clc
inc
lcall
mov
lret
and
xor
and
lret
and
ret
movsl
insb
and
nop
sbb
and
mov
cmp
rol
pushf
push
mov
and
fidivs
pop
dec
mov
cmp
pop
cli
popf
push
movsl
pop
mov
repz
out
pop
insb
rcrb
fstps
lret
and
push
push
daa
cmp
outsl
mov
sub
sbb
imul
add
out
sbb
push
daa
cmp
outsl
mov
sub
sbb
imul
jecxz
jae
hlt
out
insl
mov
pushf
push
and
and
dec
xchg
addr16
push
lahf
imul
in
mov
aas
and
movsl
push
inc
pushf
push
pushf
push
sarb
pushf
push
pushf
push
popf
push
cmc
pop
mov
in
cmc
stos
mov
lret
and
inc
mov
and
xchg
sbb
mov
cmp
mov
out
pushf
pushf
push
mov
cmp
xchg
ficomps
scas
ja
stos
mov
add
pushf
push
cmp
out
into
fisttps
or
push
lret
and
lods
lcall
mov
cmp
sub
xchg
in
repz
adc
push
pushf
push
cmp
iret
and
outsl
mov
in
dec
sub
pushf
push
rol
pushf
push
pop
mov
lret
mov
into
and
lret
and
lahf
pop
enter
iret
stos
ja
xchg
jmp
pop
or
stos
lret
and
xor
mov
cmp
pop
xchg
popf
push
lret
and
inc
pop
enter
sbb
mov
cmp
insl
pushfw
push
daa
repz
mov
cmp
cwtl
cli
pushf
push
lret
and
and
in
dec
lcall
sub
movsl
insb
sub
shl
mov
cmp
in
pushf
push
daa
repz
out
pop
cld
cwtl
pushf
push
adc
lahf
das
cmp
mov
pop
scas
pushf
push
pop
scas
cli
xchg
and
lret
and
scas
sti
xchg
xor
daa
xor
or
adc
test
popf
push
testb
push
pushf
push
push
pop
adc
pushf
push
fimull
sbb
gs
push
mov
cmp
bnd
push
dec
dec
sbb
lret
and
dec
mov
cwtl
sub
out
pop
adc
pushf
push
fimull
sbb
pop
out
mov
mov
cmp
and
pop
dec
inc
inc
sbb
lret
and
dec
mov
cwtl
sub
mov
mov
cmp
sahf
iret
popf
push
pusha
lods
pushf
push
cld
mov
repz
sbb
repz
outsl
adc
pushf
push
fmull
shlb
sbb
scas
cli
xchg
and
lret
and
push
mov
cwtl
xor
dec
test
push
into
and
and
dec
cmp
out
xlat
mov
cmp
fdivl
push
testb
and
push
or
push
pushf
push
pushf
push
pusha
lods
pushf
push
cld
mov
repz
mov
pushf
push
mov
pushf
xor
dec
int3
pushf
mov
daa
repz
mov
cmp
cli
jle
push
pusha
lods
pushf
push
cld
mov
repz
and
lret
and
dec
mov
cltd
xor
dec
iret
lahf
mov
daa
repz
mov
cmp
push
popf
push
mov
pushf
sub
out
pop
adc
pushf
push
fimull
fidivs
pushf
push
cmp
pushf
push
sti
mov
loope
sub
xor
mov
fbld
lock
out
mov
mov
cmp
sbb
popf
push
pushf
push
in
cmp
jmp
into
and
lret
and
cmp
xchg
and
fwait
daa
adc
pop
out
pop
or
pushf
push
jne
lahf
imul
jmp
push
test
push
push
daa
cmp
mov
xlat
mov
cmp
xlat
jo
push
xor
pushf
push
nop
sbb
leave
out
pop
insb
rcrb
lcall
dec
push
in
dec
sub
sbb
lret
and
push
icebp
xchg
mov
out
jmp
push
test
push
push
daa
cmp
cmpsl
mov
daa
repz
xlat
mov
cmp
xchg
rcrb
add
pop
dec
pop
pusha
xchg
loope
push
adc
pushf
push
push
in
dec
sbb
sbb
push
in
dec
popf
imul
cmp
notl
push
lcall
fstpl
dec
push
in
dec
call
and
mov
xchg
sub
xlat
xchg
in
lret
and
sub
jmp
mov
mov
xor
pop
pushf
push
and
fidivs
cmpsl
xor
neg
jns
push
xchg
out
add
cmp
daa
cmp
iret
mov
and
cmpl
xchg
push
push
in
push
lcall
fcompl
dec
push
in
dec
rorb
daa
lret
and
or
xchg
xchg
pusha
pushf
push
xor
scas
adc
push
pop
or
loope
push
into
and
in
dec
mov
pusha
mov
popf
push
push
mov
pusha
push
lcall
fcompl
dec
push
in
dec
scas
sti
sbb
lret
and
scas
repz
gs
pop
lcall
push
into
and
in
dec
pushf
repnz
pop
pusha
xchg
popf
push
repnz
jmp
and
mov
popa
xor
jns
cmc
pushf
push
sub
cmpsl
push
mov
popa
mov
sbbb
jge
adc
xor
scas
push
pop
push
push
out
pusha
push
into
and
in
dec
and
daa
pop
pusha
xchg
popf
push
mov
popf
push
lcall
fistpl
dec
pop
pusha
xchg
popf
push
lret
and
cld
cmc
xchg
popf
push
fisttpll
popf
push
mov
cmp
adcl
push
mov
fisttpll
mov
scas
adc
ret
mov
cmp
pop
pop
popf
push
mov
jbe
hlt
xlat
sbb
aas
lgs
inc
mull
repz
cwtl
adc
in
dec
and
pushf
push
mov
jmp
icebp
loop
adc
cwtl
divb
jecxz
ret
pop
cmp
mov
loop
mov
cmp
xor
pushf
push
xchg
fsubr
xlat
scas
mov
loop
mov
cmp
leave
pop
pushf
push
scas
mov
push
sub
repz
push
cld
cwtl
roll
movsl
push
divb
cmp
loop
mov
cmp
sub
and
daa
loop
into
and
lret
and
lods
push
inc
and
xchg
sbb
push
movsl
cmc
fnstcw
dec
push
daa
cmp
outsl
mov
daa
repz
out
jecxz
sub
push
popf
push
mov
inc
daa
repz
mov
cmp
aas
negl
daa
repz
mov
cmp
pop
pop
pushf
push
mov
into
daa
repnz
out
mov
pushf
push
stos
mov
lret
and
sub
iret
sub
stos
mov
lret
and
in
push
inc
and
xchg
sbb
lret
and
pop
mov
in
test
mov
push
mov
cmp
out
mov
sub
or
mov
and
mov
in
and
mov
test
popf
push
fidivs
pop
dec
pop
jo
fstpl
dec
mov
cmp
pop
and
dec
sub
sbb
lret
and
inc
mov
sahf
sub
stos
mov
lret
and
inc
mov
sahf
and
xchg
sbb
cmp
cmp
sub
rorl
fstpl
in
dec
and
inc
mov
sahf
sub
stos
mov
lret
and
xlat
insl
shlb
in
xchg
stos
ja
xchg
jmp
pop
or
mov
fcompl
fisttps
in
popf
push
lret
and
and
in
dec
lcall
sub
mov
sub
shl
mov
cmp
add
rcrl
sbb
test
push
push
daa
cmp
cs
daa
repz
xlat
mov
cmp
out
popf
push
lcall
fstps
dec
push
in
dec
adc
mov
push
sti
xchg
sub
xlat
into
and
lret
and
dec
mov
cmpsb
sub
xlat
sbb
pop
out
shl
mov
cmp
cmp
pushf
push
lret
and
fstl
fldenv
in
lret
and
dec
add
sbb
imul
jecxz
lret
into
and
lret
and
jmp
iret
into
and
lret
and
and
shl
push
movsl
cmc
fnstcw
dec
push
daa
cmp
outsl
mov
daa
repz
out
jecxz
sub
gs
push
mov
inc
xchg
xchg
out
aaa
pushf
push
jmp
cmpsb
in
pop
jmp
and
jecxz
outsl
pop
mov
xchg
loopne
push
sbb
jne
shrb
imulb
dec
lret
and
fsubrs
and
xchg
sbb
data16
pushf
push
lods
popa
test
pop
jmp
adcb
add
shl
mov
cmp
pop
pop
pushf
push
hlt
xchg
pushf
push
mov
pushf
push
out
insl
les
lret
and
lea
outsl
les
lret
and
push
pop
sub
and
push
push
insl
mov
pushf
push
mov
outsl
mov
pushf
push
hlt
xchg
pushf
push
push
sbbb
xlat
mov
cmp
data16
push
mov
test
mov
cmp
push
lock
push
mov
test
mov
cmp
add
push
mov
shrb
hlt
sbb
stos
pop
jno
sub
xchg
mov
cmp
dec
jl
push
and
jecxz
sub
mov
mov
lock
repz
out
pop
pushf
push
fwait
dec
stos
out
pop
jmp
or
lahf
das
mov
lcall
and
addr16
repz
out
pop
pushf
push
jnp
stos
out
pop
jmp
andb
negl
test
jnp
push
push
cld
mov
out
je
push
pushf
push
mov
das
cli
or
pop
dec
lcall
push
pushf
push
pushf
push
popf
push
and
lret
and
cli
sbb
das
movntq
out
or
mov
lret
and
push
pop
jmp
test
push
mov
repnz
out
jl
push
pushf
push
sbb
push
pop
sbb
pushf
push
mov
cmp
bound
pop
jmp
jl
and
nop
sbb
fcomps
sub
pop
jle
pushf
push
lret
and
jmp
js
and
pop
in
lret
and
sahf
pushf
push
imul
mov
mov
jecxz
aaa
notl
jecxz
add
iret
pushf
push
daa
repz
or
add
mov
cmp
icebp
mov
out
lret
and
and
mov
pushf
push
xor
and
nop
sbb
fcomps
sub
pop
jle
pushf
push
lret
and
jmp
sbbb
pushf
lret
and
movsb
pushf
push
jecxz
scas
icebp
and
bound
aas
sti
xchg
fistl
fisttpll
jecxz
sub
push
pushf
push
inc
add
cmp
cli
or
das
pop
out
cli
or
sbb
into
sahf
pushf
push
fwait
dec
mov
bound
pushf
push
and
out
push
pop
mov
cmp
jb
pushf
push
addr16
or
sbb
sbb
cmp
mov
shl
lret
and
jmp
test
push
sbb
pop
ja
popf
push
pushl
mov
popf
push
and
mov
cmp
jns
popf
push
jl
pushf
push
pop
dec
pushf
push
pushf
push
sbb
push
insl
jne
pushf
push
mov
mov
sbb
mov
push
sbb
scas
icebp
pop
jmp
or
pop
jmp
cld
lcall
and
addr16
repz
mov
push
stc
lods
scas
icebp
pop
jmp
or
push
or
dec
push
daa
cmp
fs
push
push
lret
mov
arpl
cli
or
mov
pushf
push
popf
push
and
mov
cmp
scas
cmp
or
xrelease
and
push
pop
jmp
or
pop
jmp
cld
lcall
cmp
addr16
push
push
push
in
movsb
push
in
dec
lcall
in
data16
fstpl
mov
daa
push
add
enter
mov
push
cs
pushf
push
push
pop
data16
pushf
push
sub
mov
pop
jmp
or
mov
push
jp
pushf
push
push
pop
mov
lcall
mov
enter
mov
push
mov
pop
out
push
pop
bnd
lcall
xchg
mov
pop
jmp
subb
loope
sub
out
or
lods
icebp
pushf
push
sub
out
or
sbb
pushf
push
sub
out
or
lods
jo
push
sub
out
or
and
cmpsl
loope
sub
out
or
in
adc
mov
lcall
repz
pop
mov
gs
pushf
push
lret
and
and
cwtl
data16
jb
push
mov
cmp
jge
pushf
push
cmp
pop
or
movsl
xor
mov
test
mov
cmp
push
popf
push
xor
data16
mov
cmp
data16
repz
pop
int
jnp
push
push
in
movsb
lret
and
jmp
icebp
mov
cmc
xchg
call
cmp
aaa
pushf
push
pop
test
push
fidivs
pop
dec
mov
cmp
push
insl
popf
push
lret
and
jmp
test
push
mov
jnp
xor
pop
pushf
push
lret
and
jmp
lods
pushf
push
cld
mov
repz
shll
sub
pop
adc
pushf
push
fimull
sbb
pushl
sbb
push
pop
adc
pushf
push
fimull
mov
cmp
ffreep
pushf
push
sbb
push
pop
or
pushf
push
cmc
pop
sbb
push
pop
adc
pushf
push
and
pushf
push
pushf
push
sbb
push
pop
add
pushf
push
fimull
mov
cmp
push
pushf
push
sbb
push
pop
cld
cwtl
pushf
push
jg
sbb
push
pop
add
pushf
push
scas
sub
inc
add
mulb
repz
push
pop
lods
jo
push
sbb
sbb
or
and
xchg
sbb
push
pop
lods
jo
push
arpl
popf
push
inc
add
mulb
repz
push
pop
and
xor
sbb
sbb
sarb
and
xchg
sbb
push
pop
and
jecxz
sub
dec
popf
push
sbb
cwtl
and
mov
stos
mov
sub
pop
insb
rcrb
fcmovb
pushf
push
mov
mulb
imul
les
sub
sub
xlat
push
das
into
and
sahf
repz
push
pushf
push
push
push
fcoml
and
pop
dec
jbe
pushf
push
cmp
in
cwtl
js
xor
imul
les
sub
jecxz
addr16
out
push
das
mov
cmp
repnz
pushf
push
sbb
xor
outsl
les
sub
pop
outsb
rcrb
dec
pop
popf
push
jns
loop
lret
and
jmp
sbbb
sbb
out
jg
sub
loop
lret
and
jmp
sbbb
sbb
popa
sbb
xchg
into
and
lret
and
add
and
xchg
sbb
sbb
adc
push
int
xchg
fildll
mov
clc
xchg
sbb
xchg
addr16
push
mov
repz
das
mov
cmp
xor
jnp
and
fstpl
pushf
push
pushf
push
push
inc
pushf
push
pushf
push
out
lcall
push
inc
pushf
push
pushf
push
or
push
pushf
push
pushf
push
push
pop
pushf
push
int
pushf
push
push
pop
sahf
ljmp
shrl
adc
and
jmp
pop
cwtl
and
imul
fstps
cli
xchg
out
adc
lea
mov
and
adc
sub
pop
sahf
ljmp
xchg
arpl
pushf
push
pusha
push
dec
dec
sbb
into
and
in
dec
lock
sbb
adc
test
jo
push
ljmp
mov
lret
and
inc
mov
daa
repz
iret
sbb
negl
cli
xchg
fstps
xchg
out
xchg
jecxz
push
fisttps
dec
ja
push
testb
push
pop
jmp
sbb
and
jmp
das
cmp
addr16
push
sbb
out
inc
mov
adc
xchg
movb
movsl
fmul
jbe
test
mov
push
out
nop
popf
push
out
sbb
push
in
dec
mov
push
mov
mov
hlt
sbb
push
movsl
in
aad
dec
dec
and
dec
jns
mov
arpl
cmp
imul
jecxz
sub
sub
jecxz
mov
and
push
in
dec
rolb
mov
push
mov
mov
hlt
sbb
push
movsl
sbbl
mov
arpl
cmp
imul
jecxz
sub
je
push
xor
pushf
push
dec
and
dec
fwait
outsl
mov
arpl
cmp
imul
jecxz
sub
pushf
popf
push
cmp
pushf
push
dec
and
dec
test
mov
arpl
cmp
imul
jecxz
sub
les
jmp
aam
push
dec
and
dec
mov
mov
arpl
cmp
imul
jecxz
sub
in
popf
push
mov
pushf
push
dec
and
dec
mov
das
cmp
imul
jecxz
sub
adc
push
nop
fcompl
dec
and
dec
int
mov
arpl
cmp
imul
jecxz
sub
cmp
cmp
dec
mov
sub
pusha
pushf
push
mov
cmp
and
dec
fnsave
cmp
imul
jecxz
sub
jae
push
mov
cli
sub
lcall
loopne
push
sbb
push
frstor
out
xchg
sbb
sbb
push
pop
sub
mov
int3
sbb
lret
and
dec
cmp
and
dec
ljmp
dec
fwait
imul
jecxz
sub
rcrl
or
sub
xor
sbb
push
pop
and
xor
mov
cmp
adc
popf
push
push
in
dec
fstl
sbb
push
in
dec
mov
push
mov
mov
hlt
sbb
mov
les
pushf
push
push
daa
mov
pushf
push
daa
repz
mov
mov
pushf
push
push
in
push
mov
push
mov
pusha
dec
mov
pop
dec
lret
and
mov
mov
out
xchg
sbb
cli
into
xchg
arpl
cmp
pop
mov
daa
repz
mov
cmp
call
and
mov
mov
lahf
repz
push
pop
jmp
sub
mov
andl
pusha
push
mov
push
mov
pusha
dec
mov
pop
dec
lret
and
mov
mov
out
xchg
sbb
add
das
cmp
pop
mov
daa
repz
mov
cmp
mov
and
mov
mov
lahf
repz
push
pop
jmp
cmpb
insb
sub
xchg
in
xchg
sbb
stos
ja
test
sbb
mov
push
xlat
adc
daa
pop
pusha
dec
mov
cmp
lods
cmpsl
pushf
push
lret
and
jecxz
cli
push
in
dec
xor
pushf
push
popf
push
sbb
sbb
jg
cld
test
das
popf
push
nop
bound
ret
push
sbb
pop
pusha
dec
mov
cmp
inc
lock
push
push
in
dec
mov
push
pushf
push
dec
mov
sbb
mov
cld
and
pop
cld
test
jle
push
mov
push
mov
sbb
pop
pusha
dec
mov
cmp
loopne
pushf
push
push
in
dec
mov
push
pushf
push
dec
mov
adc
ja
std
and
sub
outsl
insl
push
pushf
push
xor
dec
cltd
insl
pushf
push
sbb
mov
sub
xchg
mov
in
xchg
sbb
xchg
push
push
xchg
fs
push
lods
jo
in
sub
mov
mov
cwtl
hlt
lcall
push
xchg
fs
push
xchg
sbb
pop
pusha
dec
mov
cmp
sub
pushf
push
lret
and
push
popf
push
sbb
sbb
gs
sub
sub
sbb
sbb
pushf
push
fwait
outsl
pushf
push
lods
jo
in
sbb
fidivs
pop
dec
mov
cmp
xlat
cmp
xor
pushf
push
imul
arpl
mov
daa
ja
pop
dec
and
sub
outsl
insb
rcrb
xor
dec
xchg
push
cmp
mov
sub
xchg
mov
aad
std
and
xchg
sbb
xchg
push
push
xchg
fs
push
lods
jo
in
and
mov
cmp
xchg
sbb
fldl
popf
push
imul
daa
pop
pusha
dec
mov
cmp
mov
pushf
push
popf
imul
jne
sbb
push
pop
adc
pushf
push
fimull
xchg
mov
cmp
sbb
and
jmp
lods
pushf
push
cld
mov
repz
mov
cmp
pop
sti
pushf
push
pusha
lods
pushf
push
cld
mov
icebp
mov
lcall
and
jmp
mov
push
aaa
or
pop
jmp
lods
pushf
push
gs
jmp
repz
mov
adc
pushf
push
lret
and
fs
push
arpl
decb
pushf
push
lret
and
jmp
mov
push
cld
mov
icebp
mov
lcall
and
jmp
mov
decb
jb
lret
and
jmp
mov
push
add
repz
mov
add
pushf
push
lret
and
insb
mov
pushf
push
popf
push
mov
push
dec
int3
sbb
pop
pusha
dec
mov
cmp
sub
mov
pushf
push
mov
push
pushf
push
dec
mov
pop
ljmp
and
and
in
dec
lcall
sub
sbb
push
cmp
arpl
into
and
and
inc
cmp
out
out
mov
cmp
inc
adc
dec
lcall
push
pushf
push
pushf
push
mov
inc
or
xor
cmp
daa
cmp
sbb
ret
jecxz
sub
cld
popf
push
das
ja
adc
mov
adc
mov
add
sbb
iret
inc
sub
mov
and
fidivs
pop
dec
mov
cmp
dec
jb
push
int
add
lret
and
inc
add
lret
and
inc
sub
mov
mov
xor
pop
in
sbb
and
inc
or
pusha
push
mov
pop
dec
push
in
dec
aas
les
daa
adc
test
jns
push
xchg
fldt
push
push
pop
or
pushf
push
dec
mov
pusha
lods
pushf
push
sbb
gs
add
sub
outsl
adc
pushf
push
inc
pushf
pushf
push
push
pop
or
pushf
push
and
xor
inc
pop
in
sbb
and
push
popf
push
mov
push
cmp
sbb
pop
pusha
dec
mov
cmp
jl
pushf
push
lods
pushf
push
mov
push
pushf
push
dec
mov
adc
mov
add
and
in
dec
lcall
sub
ret
pushf
push
cmp
arpl
into
and
and
inc
cmp
out
out
mov
cmp
xchg
mov
push
insb
mov
cli
xchg
out
mov
pop
add
pushf
push
mov
cmp
sti
lret
pushf
push
adc
push
push
insl
add
pushf
push
insb
mov
fldt
mov
ret
fwait
lock
and
outsl
cld
cwtl
pushf
push
xor
dec
xchg
addr16
push
pop
sub
xchg
mov
jecxz
add
in
xchg
sbb
xchg
push
push
xchg
fs
push
lods
jo
in
and
jbe
pushf
push
adc
test
std
popf
push
mov
push
pop
mov
daa
pop
pusha
dec
mov
cmp
jecxz
pushf
push
push
in
dec
mov
push
pushf
push
dec
mov
pop
ljmp
and
cwtl
test
dec
xchg
addr16
push
imul
xchg
mov
in
xchg
sbb
push
pop
sahf
ljmp
orl
push
movsl
pop
ljmp
and
sub
outsl
sahf
ljmp
sbb
cwtl
data16
sub
sub
sbb
push
pop
sahf
ljmp
add
push
sbb
cwtl
pushfw
push
insb
int3
popf
push
test
push
in
dec
mull
dec
mov
cmp
orb
and
pop
dec
mov
push
pushf
push
dec
mov
or
and
add
repz
sbb
xchg
out
push
xor
dec
cwtl
insb
pushf
push
jle
mov
sub
xchg
mov
in
xchg
sbb
xchg
push
push
xchg
fs
push
lods
jo
in
sub
jnp
push
adc
test
outsl
popf
push
xchg
arpl
ret
xchg
daa
pop
pusha
dec
mov
cmp
leave
xor
pop
pusha
dec
mov
sbb
mov
dec
and
sub
outsl
fs
pushf
push
inc
mov
test
mov
pop
dec
jl
pushf
push
mov
sbb
pop
pusha
dec
mov
cmp
imul
pop
dec
mov
push
pushf
push
dec
mov
add
das
aam
and
sub
outsl
in
pushf
push
xor
dec
xchg
imul
jb
xchg
sub
xchg
mov
jns
add
in
xchg
sbb
xchg
push
push
xchg
fs
push
lods
jo
in
daa
mov
jecxz
sub
jo
push
sub
cwtl
data16
repz
push
pop
jbe
pushf
push
lret
and
jmp
js
and
xchg
sbb
pushf
push
pushf
push
or
xchg
pushf
push
xor
dec
fwait
outsl
pushf
push
scas
jle
xchg
sub
xchg
mov
aam
and
sub
arpl
cmp
push
push
xchg
fs
push
lods
jo
in
sub
dec
repz
push
xlat
jecxz
cmp
gs
push
or
icebp
ret
in
push
mov
push
cmp
jmp
ror
and
lret
and
mov
ret
jmp
jo
hlt
and
jecxz
sub
mov
pop
ret
popf
push
test
pop
ret
popf
push
xor
cwtl
and
cmp
push
xchg
sbb
lods
jo
repnz
daa
cmp
sbb
ret
jecxz
sub
mov
popa
push
mov
pop
dec
lcall
dec
pushf
push
pushf
push
popf
push
popf
push
mov
push
and
lods
jo
hlt
jg,pn
jo
hlt
arpl
cmp
sahf
pushf
push
mov
fadds
and
bound
popf
push
xchg
sbb
lods
jo
hlt
and
aad
push
daa
repz
jo
repnz
push
xchg
enter
jo
hlt
add
movsb
fisubrs
push
outsl
lods
jo
hlt
sbb
push
pop
outsb
rcrb
mov
cmp
rolb
push
popf
push
push
in
dec
aas
les
daa
adc
test
push
popf
push
xchg
fldt
push
popf
push
sbbb
push
in
dec
pop
push
sbb
pop
pusha
dec
mov
cmp
xchg
pushf
push
mov
in
dec
mov
push
pushf
push
dec
mov
or
mov
push
and
and
in
dec
lcall
sub
inc
pushf
push
cmp
arpl
into
and
and
inc
cmp
out
out
mov
cmp
fwait
cmp
bound
popf
push
dec
jno
push
popf
push
cmp
cmp
mov
xchg
sbb
lods
jo
repnz
daa
cmp
sbb
ret
jecxz
sub
xor
push
lea
cmp
push
pushf
push
popf
push
popf
push
cmp
cmp
cmc
mov
subl
push
daa
cmp
sbb
mov
push
daa
repnz
adc
js
mov
sub
push
pop
jecxz
cmp
gs
push
outsl
and
or
xor
jmp
repz
in
push
mov
push
into
and
lret
and
mov
lds
out
xchg
sbb
mov
cmp
or
pushf
push
mov
xor
push
pop
jmp
andb
js
xor
dec
int3
pushf
mov
sub
xchg
mov
lret
fmull
and
sub
daa
repz
pop
jo
mov
pop
dec
push
in
dec
aas
les
daa
mov
cmp
xor
and
arpl
add
mov
cmp
push
sub
add
in
nop
sbb
roll
adc
imul
jmp
test
push
sbb
in
mov
subl
push
daa
cmp
sbb
mov
push
daa
repnz
adc
js
xchg
jbe
pushf
push
shlb
xchg
mov
fimuls
and
sub
test
mov
adc
test
mov
or
addr16
in
dec
push
daa
cmp
test
cwtl
js
xchg
sti
xchg
sub
sbb
adc
lcall
mov
xchg
and
in
fimuls
and
bound
in
sub
cmp
and
dec
lea
push
into
and
lret
and
inc
fimuls
daa
repz
mov
cmp
imul
lret
and
sbb
popf
imul
sti
pushf
push
mov
enter
sub
pop
push
les
lret
and
jmp
test
pop
test
into
and
xor
lret
and
inc
jmp
sub
cli
sbb
pop
enter
and
inc
mov
daa
repz
push
pop
insb
rcrb
negb
cmp
ret
push
in
pushf
push
xor
pushf
push
inc
sti
loopne
daa
repz
sbb
pushf
push
xchg
addr16
push
mov
icebp
mov
int
hlt
cli
sbb
insb
rcrb
xor
pushf
push
and
arpl
sub
jo
imul
pushf
push
add
mov
pushf
push
and
sub
pop
data16
pushf
push
inc
jp
push
lret
and
jmp
test
mov
aam
in
daa
bnd
jno
push
dec
and
lahf
push
push
imul
lret
pop
mov
sub
decb
pushf
push
pop
jo
popf
push
cmp
cmp
sub
in
sub
or
jo
hlt
sbb
push
pop
data16
pushf
push
mov
cmp
faddp
popf
push
decb
imul
test
jo
out
sub
daa
repz
jo
repnz
les
repnz
out
and
ljmp
clc
or
push
ljmp
call
ljmp
lock
and
ljmp
loopne
out
push
push
fidivs
pusha
push
into
and
in
dec
push
sub
daa
pop
pusha
popf
push
in
popf
push
lcall
popf
push
push
in
dec
mulb
sbb
lret
and
xor
out
sbb
ret
ja
push
and
sub
outsl
insb
rcrb
mov
les
mov
sbb
lahf
push
jp
and
sub
outsl
insb
rcrb
sub
and
sub
daa
repz
mov
xchg
pushf
push
lret
and
jmp
sbbb
sbb
and
in
dec
inc
cmp
mov
or
bound
cli
cmp
and
jb
push
inc
cmp
mov
or
bound
fcomps
lret
and
jb
xchg
jecxz
mov
lret
and
lret
and
add
jge
hlt
cli
sbb
jle
pushf
push
mov
or
repz
push
pop
movsl
in
pushf
push
sub
repz
int
lret
and
outsl
aad
xchg
sub
pushf
push
push
fcoml
xor
xor
lret
and
ljmp
lret
and
jecxz
rclb
dec
mov
push
pushf
push
cmp
cwtl
adc
push
mov
xchg
fs
repz
enter
lret
and
jmp
and
and
in
and
lret
and
jmp
cmp
xor
push
in
dec
mov
sub
mov
cmp
insl
mov
dec
mov
int
jnp
push
push
in
movsb
adc
pusha
mov
push
pushf
push
pushf
push
mov
cmp
dec
pushf
push
xor
push
lret
and
jmp
and
and
jmp
icebp
sbb
push
daa
cmp
jge
push
sahf
push
imul
hlt
cli
sbb
and
fistps
sub
sbb
add
xchg
fildll
mov
clc
xchg
sbb
sbb
inc
sbb
lret
and
sub
pushf
push
push
daa
mov
xchg
fs
push
lcall
pushf
push
push
fcoml
cli
sub
pushf
push
sbb
sbb
pop
jecxz
sub
sub
sbb
sbb
mov
jo
pushf
push
lret
and
sub
pushf
push
adc
dec
pushf
push
lcall
pushf
push
push
in
movsb
push
out
je
push
xchg
gs
push
pusha
dec
pushf
push
and
and
fnstsw
and
pop
lcall
mov
lret
jle
and
pop
fisubrl
pop
out
push
pop
add
and
incl
daa
fisubrl
movntq
pop
mov
jo
pushf
push
lret
and
sub
pushf
push
jge
imul
les
repz
cmpsl
mov
sub
sbb
or
sbb
sbb
cwtl
dec
addr16
hlt
sbb
xchg
mov
cmp
pop
cmc
pushf
push
and
jecxz
sub
add
mov
ja
bound
push
push
fcoml
std
sub
pushf
push
pushf
push
mov
xchg
fs
nop
sbb
push
lcall
push
mov
cmp
xchg
push
mov
pushf
push
sbb
mov
cmp
test
pop
mov
push
sbb
into
and
sub
sbb
dec
and
dec
in
shlb
sbb
inc
arpl
and
xchg
sbb
pushf
push
adc
lods
mov
stos
inc
sbb
lret
and
mov
xchg
fs
imul
jnp
push
push
in
movsb
adc
pusha
mov
push
pushf
push
pushf
push
lret
and
jg
push
out
xchg
sbb
pushf
push
daa
repz
sbb
lret
and
and
jmp
and
and
jmp
cmp
sub
and
dec
test
xchg
and
in
mov
lret
and
xchg
sbb
pushf
push
adc
or
stos
mov
xchg
fildll
mov
clc
nop
sbb
rcrl
sub
jl
push
lret
and
pop
lahf
imul
dec
popf
push
pushf
push
pushf
push
outsl
les
repz
inc
sbb
lret
and
jmp
and
and
jmp
cmp
sub
and
dec
pop
cmp
or
xchg
sbb
pushf
push
adc
ja
insb
fisubl
pushf
push
sub
xor
outsl
les
repz
inc
push
pushf
push
pushf
push
sub
sbb
push
ljmp
sbb
scas
gs
and
xchg
sbb
pushf
push
adc
sbb
test
pushf
push
pop
jmp
and
and
jmp
cmp
sub
and
dec
sbb
icebp
sbb
sbb
addr16
out
xchg
sbb
pushf
push
adc
shll
stos
inc
sbb
sub
xor
outsl
les
repz
inc
sbb
lret
and
jmp
cmp
mov
pop
jmp
and
and
jmp
cmp
in
dec
and
daa
fidivs
pop
dec
mov
cmp
xor
adc
ja
insl
sub
sbb
sbb
nop
inc
insl
shrb
hlt
sbb
dec
loope
push
pushf
push
mov
jo
pushf
push
lret
and
sub
pushf
push
push
es
push
and
bound
pop
push
sbb
push
pop
push
bound
push
push
in
movsb
push
out
je
push
sbb
daa
fisttpl
enter
mov
adc
pop
call
jmp
out
adc
bound
pop
dec
push
inc
pushf
push
cmp
out
push
das
mov
cmp
push
jo
push
push
pop
adc
test
negl
push
pop
int
ret
mov
scas
sbb
or
ret
mov
mov
ret
mov
rcrl
daa
or
ret
mov
pushf
sbb
or
ret
mov
mov
ret
mov
push
sbb
or
ret
mov
mov
daa
or
ret
mov
push
sbb
or
ret
mov
ret
sbb
or
ret
mov
sbb
or
ret
mov
lods
sbb
or
ret
mov
lret
sbb
or
ret
mov
push
sbb
or
ret
mov
movsb
sbb
or
ret
mov
test
daa
or
ret
mov
push
sbb
or
pushf
push
pushf
push
jnp
push
push
fcoml
dec
pop
jmp
das
into
and
lret
and
jno
xor
push
or
or
or
or
jnp
sub
inc
gs
movsl
cwtl
js
and
sub
xchg
sub
divl
jmp
adc
repz
xlat
push
movsl
and
loop
lret
and
nop
nop
sbb
ficoml
cmpsb
dec
push
out
dec
clc
pop
xor
mov
movsb
mov
and
adc
repz
iret
dec
mov
sub
sti
fstp
jmp
sub
and
sub
mov
repnz
jmp
lock
imul
mov
cmp
xchg
arpl
imul
sbb
jl
cmp
mov
dec
shll
iret
jnp
xchg
loope
dec
cmp
jno
out
jecxz
jg
and
test
cmp
mov
jp
sub
mov
xchg
loope
scas
popa
aas
inc
mov
pushf
push
jecxz
mov
add
and
adc
test
add
xchg
sbb
pop
lods
pushf
xchg
add
sbb
sbb
testb
fldt
clc
cwtl
pop
test
lock
out
jl
imul
push
jg
sbb
adc
mov
cmp
fs
push
loop
mov
pushf
fildll
lret
lcall
pop
sbb
or
dec
xchg
push
push
jl
dec
push
push
jb
xor
vsubsd
xchg
loope
dec
hlt
inc
popf
push
iret
and
add
out
mov
neg
xor
push
in
dec
mov
push
shlb
in
pop
adc
push
sbb
in
loopne
call
mov
adc
sbb
popf
push
pushf
push
int3
test
sub
jecxz
pop
lret
and
aad
lahf
imul
push
or
and
das
loopne
cs
push
push
push
fcoml
sbb
into
and
fidivs
pop
dec
lret
and
sbb
lcall
pop
testb
mov
or
movsb
dec
lcall
pop
pusha
xchg
jnp
and
fists
repz
das
rcrb
or
mov
jns
push
adc
cwtl
pushfw
push
cltd
jmp
lods
jno
frstor
pushf
push
daa
repz
int3
popa
test
push
loop
daa
lcall
shrb
pushf
push
mov
daa
add
test
pushf
push
mov
jecxz
sub
ret
pushf
push
jbe
sbb
push
in
dec
imul
daa
stos
pop
jge
and
pop
notb
sbb
stos
pop
jge
pop
jmp
test
add
sub
pushf
push
sbb
pop
lods
repz
daa
fs
sub
cmpsb
mov
addr16
push
daa
repz
int3
popa
test
inc
pop
cmp
gs
push
pop
jmp
sub
fistps
xor
add
pushf
push
inc
adc
pushf
push
mov
adc
adc
pushf
push
pushf
push
jge
pushf
push
fiadds
int3
popa
test
cmp
cmpl
hlt
sbb
nop
sbb
gs
sbb
sbb
lahf
loopne
mov
push
int3
popa
test
xchg
add
daa
pushf
push
jbe
sbb
pushf
push
or
or
jnp
and
cltd
dec
fistpl
mov
inc
pushf
push
push
lds
push
mov
pushf
push
stos
ja
mov
mov
daa
add
fs
mulb
daa
pop
sbb
adc
out
jge
mov
push
mov
daa
adcl
pushf
push
out
jge
lods
js
leave
pushf
push
mov
daa
push
sbb
add
sbb
pushf
test
mov
pushf
push
pushf
push
sub
neg
dec
jo
fcmovne
fadds
or
out
jge
pushf
push
movsl
into
cmpsl
hlt
add
sbb
pushf
call
cmpsl
hlt
add
sbb
popf
imul
fcoml
push
push
and
out
notl
and
dec
mov
das
cmp
gs
push
out
pusha
push
adc
test
mov
adc
jmp
pop
dec
cmp
cli
pop
test
dec
pushf
push
or
pop
lods
out
cmp
jmp
mov
pop
sub
out
sti
push
aaa
sti
sahf
out
lret
movsl
into
and
cmp
jl
push
sbb
dec
cli
pop
pop
jmp
mov
sub
and
mov
fstpl
loope
testb
and
lret
and
mov
cmp
out
mov
cmp
test
roll
jmp
mov
push
sbb
repz
decl
pop
in
mov
jnp
and
cmp
out
pop
into
and
and
cmp
out
mov
cmp
sub
push
fisttpll
popf
push
push
in
dec
fs
pushf
push
scas
xchg
test
mov
inc
pushf
push
pushf
push
push
push
cld
mov
das
jge
and
push
xor
mov
aas
ljmp
cmc
and
into
pop
mull
cmpsl
mov
jmp
ja
cmpsb
cld
xor
daa
lcall
fldl
mull
ret
sbb
mov
rclb
mov
daa
mov
movb
ljmp
mov
mov
testb
cltd
lock
dec
leave
and
jmp
push
sub
lahf
lock
loop
mov
and
sbb
xchg
call
mov
pop
nop
filds
jecxz
mov
add
push
filds
aam
mov
pushf
push
adc
test
addr16
push
sbb
add
daa
sub
fsubrl
leave
and
xchg
fs
push
test
jmp
jmp
lahf
imul
mov
fcmove
je
pop
popf
push
loop
fs
pop
adc
mov
iret
sub
pushf
push
mov
push
ret
ltr
jo
inc
push
xchg
sub
pop
pop
lea
xlat
xor
fcoml
xlat
xor
lods
mov
xchg
fs
push
and
add
mov
push
popf
push
popf
push
fbstp
outsl
lods
xor
sahf
fwait
addr16
xchg
or
push
pop
into
and
adc
test
cmp
push
or
jnp
push
push
int3
test
nop
sbb
push
popf
cmp
pop
out
and
hlt
mov
daa
push
mov
cmp
jnp
sub
jns
aam
mov
sub
rcrb
loop
rcrl
sbb
pusha
xchg
mov
test
pop
out
jle
jmp
mov
test
rcrl
mov
addr16
repnz
mov
stc
fstps
sbb
fs
jecxz
cmp
push
sub
dec
rcrl
push
push
int3
test
daa
pop
lods
mov
int
adc
lcall
ja
pushf
lods
pop
xor
cmpsb
xor
or
or
jnp
sub
jns
aam
ljmp
sbb
inc
imul
jge
test
dec
pushf
push
sbb
adc
jmp
pop
out
mov
sbb
jmp
adcb
ltr
and
xchg
sbb
pop
jmp
sub
and
adc
adc
test
mov
lret
imul
pushf
push
pushf
push
push
push
fcoml
jno
ss
pop
mov
or
jp
iret
add
push
out
popf
push
pop
jmp
jno
fstl
cmpsb
lods
or
daa
pushf
push
hlt
in
jns
push
mov
sarl
mov
testb
ljmp
sbb
sbb
repz
popf
imul
cmp
adc
test
sub
jg
xlat
jnp
jmp
push
or
or
or
jnp
and
cmc
lods
or
daa
jecxz
adc
xchg
sbb
fiadds
int
cmp
adc
test
gs
push
pop
jmp
adcb
or
sti
or
xchg
in
add
rcll
dec
mov
xchg
sbb
mov
sbb
cmc
test
enter
jecxz
insl
xor
adc
cmc
push
sbb
mov
sbb
roll
enter
sub
jge
xchg
sbb
pushf
and
cmc
lods
or
daa
push
mov
insl
xor
mov
das
mov
push
and
push
nop
ror
and
mov
daa
loop
and
and
cmp
daa
cmpsl
cld
dec
fcomps
daa
int
pavgw
adcb
hlt
in
jns
push
shrb
pushf
push
jg
ljmp
daa
or
pushf
push
pushf
push
int3
test
mov
mov
push
ret
mov
into
sbb
or
ret
mov
rcrb
daa
or
ret
mov
ficompl
daa
or
pushf
push
pushf
push
lret
jl
cmp
pushf
push
push
inc
pop
dec
and
jecxz
dec
mov
in
cmp
inc
lock
push
pop
test
or
or
or
adc
cmp
sti
cmp
pusha
pushf
push
int3
cwtl
pushf
push
lret
je
and
rclw
pop
jmp
enter
dec
jmp
jmp
shlb
push
jg
fwait
sub
lret
xchg
into
and
and
push
into
and
and
fs
and
lods
mov
jno
ss
fistpl
sbb
pushf
push
xchg
gs
push
jge
cmc
mov
sbb
cmp
jno
data16
sub
push
pushf
push
loop
pop
mov
jo
lret
test
xor
sub
adc
and
fstpt
dec
gs
cmp
loope
dec
lods
mov
dec
adc
cmp
sarl
dec
je
mov
pushf
push
or
push
in
sbb
in
sbbb
cmp
stc
aad
popf
push
push
inc
push
in
adcb
notl
xchg
cmp
pop
cmp
sub
fwait
sub
xchg
mov
int
popf
push
shlb
mov
ret
mov
mov
mov
or
repz
ss
in
call
and
add
pop
test
nop
out
xor
mov
sub
dec
stos
xchg
pushf
push
loopne
out
rcll
cmpsb
in
out
sarl
test
push
pushf
push
imul
push
stos
adc
test
cmp
in
cmp
add
dec
xchg
fs
push
repz
xor
daa
repz
push
mov
or
push
pop
mov
imul
stos
hlt
repz
addr16
jp
pushf
push
or
inc
pop
nop
or
pop
dec
xor
and
pop
xorb
cmp
sub
pushf
push
lds
cmp
cmp
push
pusha
mov
jo
xlat
mov
mov
push
add
movsl
test
pop
in
das
icebp
mov
or
dec
aaa
or
mov
fs
test
sbbb
sti
pop
push
mov
push
add
lock
imul
popf
push
popf
push
push
movsl
sbb
popf
push
int
sbb
mov
fs
test
ret
leave
and
in
sti
pop
push
mov
mov
or
popf
push
imul
pop
mov
rorl
out
xor
mov
in
icebp
push
push
int3
and
cltd
xchg
and
cmp
movsl
xor
sub
or
mov
cmp
push
popa
and
mov
xlat
mov
sbb
shrb
and
movsl
xor
sbb
rcrb
popf
push
sti
pop
push
mov
push
add
mov
imul
popf
push
pusha
xchg
dec
mov
and
sbb
cmp
jl
dec
rcrb
popf
push
sti
pop
push
mov
mov
dec
push
inc
dec
push
gs
shl
outsl
xor
xor
inc
and
enter
cmp
mov
pop
pusha
push
xor
dec
into
mov
dec
test
mov
adc
push
or
adc
add
mov
rolb
mov
inc
mov
mov
cmp
cmp
xchg
push
popa
push
pop
pusha
push
jle
cmp
pop
pusha
push
jae
sbb
pushf
push
push
out
push
jmp
call
jmp
bnd
sub
pop
scas
jns
inc
in
mov
push
and
es
jle
sub
push
movsl
cmpsl
mov
and
jbe
movsb
pusha
push
pushf
push
jbe
inc
add
pop
int
sbb
xchg
and
loopne
andl
mov
jb
and
jecxz
fisttpll
testb
xchg
jmp
int
sbb
cmp
push
push
test
and
mov
dec
fmuls
or
cmpsb
push
pop
dec
push
in
dec
mov
push
pushf
push
cmp
jno
pushf
push
push
daa
pusha
mov
mov
jbe
outsl
push
mull
fs
stc
cli
notl
xchg
push
movsl
shll
push
loopne
out
add
insl
push
pushf
push
lcall
pop
push
mov
mov
sbb
test
and
push
sub
and
loope
mov
jns
push
loopne
int
sbb
sti
pop
push
mov
xchg
mov
test
dec
rcrb
popf
push
sti
pop
push
mov
pop
or
adc
adc
rorl
mov
and
xlat
mov
int
sbb
sti
pop
push
mov
repz
pop
dec
pushf
push
sub
push
sub
sub
out
movsl
xor
sbb
iret
aas
imul
nop
pop
test
push
lahf
sub
outsl
scas
adc
jns
push
cmpsl
push
inc
nop
fldenv
add
icebp
adc
in
sti
pop
push
mov
pop
lods
cmc
dec
popf
push
int
pavgw
cmpsb
shrb
and
movsl
xor
sbb
push
insb
mov
rolb
popf
push
fnsave
loope
movsl
jno
lahf
imul
push
notb
cmc
dec
rcrl
sub
inc
gs
mov
fwait
outsl
aaa
xchg
adc
mov
inc
sub
adc
sub
test
popa
pushf
push
xchg
add
or
xlat
adc
cmp
pop
daa
neg
call
in
bound
int3
js
add
sub
cmp
fmul
js
and
adc
mov
mov
jge
outsl
pop
ret
pop
jge
xchg
ja
in
xor
out
sbb
pop
lods
shrb
rorb
pop
cmpsb
xchg
loope
lods
pop
in
aaa
push
aad
outsb
adc
sub
iret
imul
pop
scas
or
pop
mov
and
orl
fstpl
pop
or
lods
js
ficomps
lret
sub
xchg
loop
out
jno
push
xchg
push
movsl
shll
push
loopne
jmp
das
pushf
push
pop
mov
or
sub
fs
xor
or
adc
sti
lds
mov
xchg
xor
jbe
cmc
ficompl
push
mov
pushf
push
leave
or
mov
roll
pmaxsw
push
in
xchg
jecxz
test
icebp
xchg
xchg
loop
repz
dec
clc
push
jmp
push
add
or
jle
sarl
jle
std
xchg
popf
push
shrl
pop
or
out
jl
dec
rcrb
jnp
test
or
or
testl
bnd
dec
rcrb
pop
adc
call
popf
push
testb
push
out
pop
popf
push
popf
push
sub
popf
push
int
mov
pop
adc
call
xchg
pop
test
test
hlt
adc
push
inc
nop
fldenv
add
inc
cmp
ljmp
xchg
push
movsl
shll
out
push
out
sbbl
popf
push
pushf
push
sbb
fs
xchg
pop
test
push
cmp
add
pusha
popf
push
mov
gs
ficompl
sub
jns
arpl
adc
scas
mov
jne
push
je
sbb
int3
and
movsl
jecxz
int3
js
rcll
and
cmc
cmp
int3
int3
js
and
and
add
fmull
cmp
outsl
je
std
fnstsw
dec
pop
out
out
repz
pop
pop
pushf
push
fisubl
mov
cmp
pop
cmpsb
cmp
stos
outsl
daa
repnz
jno
fwait
daa
pop
or
shl
inc
bswap
aas
imul
push
hlt
adc
iret
aas
imul
push
sbb
popf
push
fmull
mov
pushf
push
sbb
dec
and
dec
pushf
jo
push
cmp
icebp
clc
or
stos
pushf
push
xor
mov
shlb
popf
push
dec
rcrl
imul
pop
mov
rorl
loope
sub
sbb
in
inc
lcall
lock
and
pushf
push
popf
push
popf
push
add
sub
and
fidivrs
add
fsubrp
xchg
pushf
push
jbe
add
adc
push
inc
nop
fldenv
add
int
pushf
push
loop
push
cmp
pushf
push
cmp
fwait
sub
cmpsb
jl
test
orb
popf
push
cmp
int3
and
loope
daa
xchg
daa
add
adc
movsb
pusha
cld
popf
push
adc
inc
xor
jg
push
cmp
pushf
push
cmp
fwait
sub
cmpsb
jl
icebp
movsl
lods
jo
hlt
sbb
shrb
and
movsl
xor
push
js
pop
test
movsl
into
adc
shlb
lret
push
in
icebp
or
xor
rsqrtps
lods
pop
popf
push
fs
out
imul
add
jae
popf
push
fdivl
mov
lcallw
mov
int
push
mov
xchg
lahf
imul
into
lahf
jno
lret
and
int
shlb
pop
dec
pushf
push
sub
sbb
shrb
and
movsl
xor
sbb
fisttpll
sahf
popf
push
pushf
push
popf
push
lahf
imul
mov
popf
push
sbb
sbb
popf
push
sbb
jl
pop
loopne
push
popf
push
cmpsl
bound
popf
push
pushf
push
imull
xchg
loop
push
pushf
push
clc
sbb
loopne
push
popf
push
sti
pop
push
mov
push
push
lods
js
push
lahf
imul
cmp
xchg
fcompl
dec
aaa
xor
lcall
push
pushf
push
daa
bnd
pop
dec
pushf
push
xchg
mov
xchg
push
popf
push
pushf
push
ja
dec
jmp
and
stos
pushf
push
into
and
push
cmpsl
loop
xchg
test
pop
adc
adc
pop
mov
or
adc
push
adc
pop
or
mov
loopne
and
out
fwait
sub
rcrl
push
sub
lret
pusha
sub
push
pop
mov
leave
mov
inc
fs
sbb
inc
sbb
sub
push
in
fwait
mov
sub
push
sub
popa
int
pop
jmp
dec
out
roll
inc
imul
dec
mov
aas
mov
push
ja
fisttpl
bnd
arpl
adc
scas
sub
mov
pushf
push
sbb
xchg
cmp
jecxz
xor
sbb
xlat
lret
cmp
int
cmp
lds
xor
rcrl
stc
fstpl
cmp
and
pop
into
and
lret
je
and
and
push
cs
push
popf
push
xchg
loopne
call
loope
dec
mov
mov
lods
popf
push
addr16
push
mov
bound
pushf
push
daa
repnz
mov
pop
add
sub
adc
mov
gs
mov
sub
mov
pushf
push
das
nop
addb
mov
push
repnz
mov
pop
das
mov
jl
lret
insb
push
pop
xorb
test
push
iret
cmp
lds
dec
pop
out
cmp
sarl
pop
jmp
dec
mov
adc
gs
push
sub
sub
mov
outsl
fwait
out
repnz
xchg
cmpsl
mov
mov
jo
cmp
in
inc
pop
dec
pushf
push
sub
push
sub
movsl
xor
sbb
cmp
sbb
pop
ja
imul
and
rcrb
xor
dec
lods
mov
ja
fistpl
sub
in
pushf
push
aas
imul
mov
sub
stos
ja
in
lcall
xchg
sbb
scas
mov
adc
cmp
jecxz
and
sbb
stc
fstpl
cmp
lret
cmp
leave
enter
call
cmp
fnstsw
jo
and
lret
je
and
and
push
cs
push
popf
push
cltd
out
call
add
loopne
pushf
push
push
mov
xor
testb
repz
imul
sub
cmp
test
pushf
push
int
xchg
imul
push
lods
mov
clc
inc
decl
insl
mov
fs
test
popf
push
sti
pop
push
mov
push
or
mov
inc
cmp
jmp
lock
imul
mov
push
lcall
sub
jmp
and
and
lret
addb
cmp
sbb
push
rcll
push
aas
imul
and
gs
imul
push
lcall
in
bound
pushf
push
xchg
xor
rcrl
dec
push
inc
dec
mov
arpl
mov
fnstenv
adc
pop
movsl
mov
popf
push
push
sub
sub
ficompl
sub
dec
rcrl
inc
gs
ja
or
push
pushf
push
cmpsl
mov
or
push
cmp
scas
mov
push
cmp
stos
mov
push
add
imul
lret
test
xor
and
fldl
pushf
push
cltd
lods
fcomps
imul
fcomps
mov
fcomps
cmc
fnstenv
sub
sub
aad
xor
lds
inc
lods
mov
xchg
xor
jl
mov
in
sub
inc
jp
je
pop
mov
inc
outsl
inc
popa
xchg
mov
lret
jo
leave
testb
xor
cs
sbb
mov
cld
push
or
pushf
pop
scas
pushf
push
or
out
pushf
push
or
mov
fsubr
rcrb
test
sub
mov
cmpsb
sub
sbb
jns
sahf
pushf
push
push
pop
sub
call
clc
in
arpl
sub
iret
sub
aad
xor
ja
sbb
pop
or
sub
fcomps
jne
fcomps
jecxz
add
sub
mov
adc
call
movb
fldcw
pop
push
test
mov
insb
pop
nop
fists
fisttps
or
inc
or
or
pushf
push
std
cltd
jg
imul
add
fstl
fiadds
dec
repz
sub
add
xor
popf
push
jbe
insb
pop
mov
jo
sub
loope
scas
lds
popf
push
out
mov
jb
pusha
push
cli
push
insb
pop
lcall
jo
pop
xchg
test
dec
cwtl
mov
cmp
das
pop
lods
cwtl
data16
repz
sbb
jo
or
add
pushf
push
out
cmp
inc
addb
in
bound
shrb
mov
mov
cwtl
pushfw
push
adc
lcall
jo
sbb
inc
xchg
lretw
pop
shrb
insb
pop
cwtl
pop
adc
adc
pop
mov
or
push
test
movsb
xchg
pop
pop
lods
pop
sub
mov
rorl
mov
stc
push
lcall
negl
sub
push
movsb
push
loope
mov
push
imul
lcall
cmp
sub
sbb
fs
fs
out
mov
sub
repz
rcll
jle
and
push
sub
pushf
push
popf
push
sti
pop
push
mov
or
lods
sub
and
fs
xlat
mov
sarl
adc
ficompl
scas
arpl
loope
or
xor
shrb
and
movsl
xor
and
loopne
push
popf
push
sti
pop
push
mov
pop
or
sub
sbb
in
cld
test
lods
in
adc
push
arpl
or
sbb
mov
pop
aas
popf
push
aas
imul
and
sbb
std
sbb
popf
push
cmp
xchg
fs
push
sti
mov
jbe
mov
jno
sarb
jae
mov
lcall
fwait
push
pushf
push
cmpsl
jne
mov
jg
xor
mov
sbbl
sbb
std
or
cmp
fidivl
jo
lret
jl
sub
jmp
sbb
sbb
popf
push
dec
add
sbb
popf
push
pushf
push
popf
push
sti
pop
push
mov
pop
or
sub
loop
sbb
push
pop
fstpl
popf
push
lods
js
cmc
pushf
mov
stos
pushf
push
mov
sub
cmp
popf
push
pushf
push
popf
push
add
fisubrl
pushf
mov
push
pushf
push
popf
push
sub
sbb
testb
push
test
mov
mov
mov
imul
mov
or
jl
jo
push
mov
lret
je
pop
clc
push
sub
dec
rcrl
inc
gs
and
pushf
push
pushf
push
daa
repz
in
pushf
push
pushf
push
in
sbb
std
mov
xor
in
sub
stos
ja
stos
jle
mov
loopne
xchg
pushf
push
daa
repz
push
pushf
push
roll
popf
push
lret
lcall
dec
outsl
xchg
mov
push
cmp
stc
popf
push
les
movsb
or
sbb
push
mov
pushf
push
sub
incl
sub
sub
mov
jnp
push
std
push
paddusb
cwtl
pushf
push
daa
and
in
lods
popf
push
mov
push
xor
notl
test
sub
jo
cmp
fwait
sub
sahf
pop
test
out
enter
fnstsw
ds
cmc
sbb
pushf
les
pushf
push
daa
repnz
inc
leave
push
or
push
and
roll
pop
inc
popf
push
cs
das
mov
xorl
jl
js
add
loop
push
mov
popf
push
pop
stos
and
pushf
push
mov
push
notl
sbb
cmp
jp
xor
xor
cwtl
pushfw
push
and
add
cmpl
add
and
inc
loopne
jp
xor
das
push
xchg
fs
push
popf
push
fisubs
push
or
sbb
popf
push
ss
fidivl
pushf
mov
pop
fidivl
pushf
mov
xor
rcrl
xchg
out
add
and
cmp
xchg
push
movsl
scas
fs
imul
loop
jbe
xchg
nop
bound
rep
scas
lods
js
dec
mov
icebp
dec
push
add
movsl
xor
inc
insl
xchg
xchg
pop
and
popf
push
inc
lds
out
lahf
imul
push
ret
add
imul
sub
pop
ljmp
fbld
mov
movsb
sub
mov
push
imul
pushf
push
pop
enter
mov
js
js
lahf
imul
iret
add
pop
dec
pushf
push
dec
popf
nop
bound
jmp
insl
mov
je
mov
repz
aaa
ja
cmpsb
xchg
lcall
ja
push
pushf
push
xor
xchg
gs
push
and
push
popf
push
adc
add
xchg
imul
xchg
fs
push
mov
dec
gs
cmp
sub
push
into
and
pushf
push
movntq
fsubrs
sbb
pop
mov
sub
xor
inc
imull
lds
mov
dec
gs
cmp
sub
push
into
and
pushf
push
movntq
fsubrs
sbb
pop
mov
sub
xor
daa
lds
divb
movsb
jl
pop
lods
add
sbb
pop
sub
repz
sbb
shlb
pop
jmp
sbb
dec
insl
xchg
sub
jmp
fadds
popf
push
mov
dec
push
inc
adc
out
aas
sti
mov
lods
popf
push
test
pushf
push
pushf
push
into
daa
mov
adc
pushf
push
pop
enter
stc
jge
js
lds
stc
out
mov
pushf
call
pop
out
lret
xchg
jmp
insl
add
dec
inc
pushf
push
sbb
lea
or
push
pushf
push
nop
bound
jmp
outsl
add
inc
inc
pushf
push
pushf
push
outsl
xchg
mov
push
lods
js
lds
hlt
sbb
gs
aas
sti
sub
sbb
jmp
test
cwtl
data16
iret
ret
sbb
stos
dec
mov
push
mov
and
movsl
popf
imul
test
insb
rcrb
sbb
pushf
push
pushf
push
mov
lods
pushf
push
stos
ja
mov
jnp
sbb
add
pushf
push
xchg
gs
adc
test
mov
push
into
and
popa
in
pushf
push
or
fcomps
pop
out
mov
push
or
loopne
push
insb
inc
pop
inc
popf
push
sbb
push
pop
out
movl
pusha
xchg
add
inc
cmp
push
pop
out
insb
xchg
and
pushf
push
test
pop
enter
add
jp
xchg
arpl
jmp
in
cwtl
popf
push
adc
call
cwtl
js
jno
in
push
popf
push
pop
inc
popf
push
pushf
push
fisubs
push
add
pop
daa
pushf
push
pushf
push
pushf
push
movsl
insb
sub
pop
ficompl
mov
jl
push
les
fisubs
sub
pop
mov
pop
stos
cmp
lea
je
js
lds
hlt
cmp
xchg
pusha
push
mov
push
inc
and
sbb
sbb
pop
ds
enter
xchg
lret
movsb
jl
push
les
fmulp
popf
push
mov
pop
stos
cmp
popf
push
mov
lds
lock
insl
xor
dec
lret
lcall
add
lcall
icebp
sub
jb
arpl
repnz
push
inc
mov
iret
subl
stc
testb
fidivl
mov
jp
jb
mov
push
inc
pop
jmp
stos
jbe
aam
pushf
push
mov
and
movsl
popf
imul
push
push
sbb
pushf
push
and
in
jo
mov
mov
fstl
movsb
pushf
push
pushf
push
pop
out
cwtl
clc
xchg
in
push
hlt
ss
int3
pushf
push
dec
and
nop
push
jae
enter
icebp
mov
push
nop
loop
push
push
xchg
loope
arpl
lret
stos
ja
and
or
aam
pushf
push
xchg
and
popf
imul
call
mov
fidivs
fs
mov
mov
push
or
int3
pushf
push
pop
jmp
or
pusha
push
lea
je
js
test
scas
or
ljmp
and
lds
pop
aam
outsb
and
stos
jo
fistps
iret
xor
das
push
xchg
fs
push
test
repnz
lods
add
sbb
popf
push
mov
iret
xor
fdivrp
mov
popf
push
pop
lods
add
pop
inc
popf
push
popf
imul
pushf
fs
push
lret
mov
pop
cwtl
pop
lods
adc
cmp
mov
lea
push
stos
ja
loopne
push
inc
lds
mov
push
or
pushf
push
sbb
popf
push
das
mov
xorl
subl
stos
outsl
and
sbb
pop
ljmp
and
lds
push
or
repnz
lods
add
ja
popf
push
movsl
mov
xchg
push
movsl
cmp
stos
outsl
sub
pop
ficompl
cmpsl
jne
es
dec
sbb
mov
jno
cmp
icebp
mov
testb
or
fcomps
jl
pushf
push
popf
push
sub
pop
ficompl
xchg
loop
mov
push
adc
arpl
inc
cmp
cmc
sub
xchg
mov
ficomps
ds
mov
int3
cltd
add
xor
popf
push
lret
xchg
and
pushf
push
pushf
push
lods
jo
divb
out
mov
movsl
cmp
inc
inc
push
ja
lds
push
in
mov
lods
jo
hlt
pop
jmp
cmpsb
dec
mov
mov
push
pushf
push
popf
push
pop
stos
pop
out
add
lcall
sbb
pop
stos
pop
sub
push
push
imul
pushf
push
popf
push
jle
out
lret
xchg
push
movsl
sbb
lods
jo
hlt
or
pop
stos
pop
jmp
fildll
push
pushf
push
popf
push
pop
stos
pop
out
and
mov
lds
jmp
imul
xor
xor
xchg
gs
push
and
pop
popf
push
lret
xchg
es
pushf
push
pushf
push
scas
jno
hlt
add
stos
pop
jmp
icebp
cwtl
clc
push
les
pushf
push
popf
push
pushf
push
xchg
cmp
add
push
pushf
mov
jne
scas
jno
inc
xlat
jnp
inc
cmpsb
dec
mov
sbb
add
test
hlt
or
pop
ds
adc
jp
lret
xchg
loop
dec
ss
int3
pushf
push
mov
arpl
mov
pushf
push
popf
push
pop
daa
cwtl
repnz
pop
shrd
and
xlat
into
daa
mov
cmp
roll
jl
jb
hlt
cmp
jecxz
dec
aam
pushf
push
vpunpckhwd
popf
push
pop
enter
and
pushf
push
cwtl
clc
pop
enter
jmp
sub
and
mov
arpl
in
push
push
les
push
jmp
add
xchg
in
push
mov
add
int
test
movsl
xor
cmp
and
popf
push
pop
stos
pop
out
and
mov
jae
lds
js
inc
hlt
in
push
push
les
push
jae
in
push
popf
push
pop
enter
mov
mov
push
pushf
push
popf
push
test
sub
lods
popf
push
mov
push
dec
in
inc
gs
fs
pushf
push
pushf
push
xchg
es
jnp
sbbl
loopne
add
push
test
pop
loopne
pushf
push
sbb
pop
bound
repz
cmpsl
sub
lods
cld
sbb
inc
or
cmpsl
mov
inc
popf
lods
test
sbb
insl
mov
into
and
pop
mov
popf
push
pushf
push
cwtl
mov
xchg
fs
cmp
lods
hlt
addb
mov
inc
shlb
cmp
int3
lret
jp
cwtl
and
xchg
cmp
int3
shrb
repz
scas
stc
jb
rol
inc
rcrb
dec
jge
call
cmp
ret
popf
push
test
adc
sarl
ja
imul
cmp
and
dec
or
lock
cmpl
mov
xchg
and
adc
into
and
test
addr16
push
jl
push
in
test
push
add
cmp
add
jns
pop
jp
mov
add
insb
and
mov
push
loope
cmp
push
in
mov
shrb
jl
pop
lods
push
loope
jb
push
out
mov
mov
pushf
push
mov
add
push
lds
push
pushf
push
cmc
sahf
pushf
push
pushf
push
push
mov
lahf
imul
xlat
or
pushf
push
pushf
push
and
shlb
jno
or
data16
adc
pushf
push
xor
push
jae
rcrb
inc
sbbl
inc
mov
dec
stos
ja
js
dec
mov
pushf
push
jle
sbb
and
repz
in
cwtl
cwtl
pushfw
push
cmp
xchg
gs
push
into
and
add
dec
test
jg
add
xchg
addr16
push
xchg
arpl
repz
mov
pop
mov
repz
call
dec
add
pushf
push
jno
mov
icebp
fdivrs
dec
and
out
cmc
test
cmp
cmp
cltd
mov
push
push
mov
shlb
push
pushf
push
lret
nop
fidivs
je
push
pop
pop
dec
mov
cmp
movsl
jg
push
into
and
sub
cmp
push
cmp
sub
and
fidivl
je
push
movsl
shrb
mov
inc
cmp
nop
pushf
push
adc
test
setl
xor
je
into
and
mov
int
inc
jl
push
xor
and
pushf
push
or
pushf
push
pushf
push
mov
push
or
sub
mov
aaa
cmp
xchg
movsl
fcmovnu
xchg
mov
mov
cli
push
daa
out
in
mov
movsl
xor
test
pushf
push
rorl
adc
int
cmp
sarl
dec
jl
cwtl
negb
push
movsl
or
rcrb
iret
cmp
aas
cmp
xchg
lcall
mov
cmp
sarl
dec
sbb
loope
dec
daa
repz
in
cmp
mov
inc
pop
mov
scas
aas
nop
mov
repz
popf
sub
daa
repz
subl
pop
popf
imul
call
cmp
ror
adc
fwait
pop
dec
daa
repz
in
cmp
cmpsl
sub
mov
sbb
and
fwait
or
lret
jecxz
or
pushf
push
fidivs
xorb
xchg
test
and
ss
push
mov
fmul
and
dec
and
pop
pop
dec
into
and
and
addr16
push
pop
movsl
addr16
popa
and
int
pusha
xorl
dec
daa
repz
leave
sub
daa
repz
sbb
pushf
push
dec
ret
fidivl
test
fs
fisubs
pushf
push
pushf
push
add
sbb
push
mov
or
cmpsl
sbb
xchg
stos
call
xor
pop
fnstsw
pop
jmp
adc
or
in
pushf
push
popa
cmp
pop
pushf
push
mov
sub
iret
ret
adc
dec
ror
pop
ficompl
xchg
test
xor
jecxz
sub
arpl
je
loop
cmpsb
stos
mov
sub
add
sub
sub
test
fidivs
je
sbb
ficoml
fidivs
je
mov
movsb
pushf
push
or
or
push
iret
sbb
in
pop
jmp
or
pushf
push
or
adc
sub
inc
pop
fidivs
icebp
push
repz
imul
push
in
pop
dec
pushf
push
mov
sub
cmpsl
icebp
notb
sub
mov
or
pushf
push
or
lock
out
and
popa
or
pushf
push
sub
push
inc
mov
push
movsl
sbb
stos
outsb
jae
insb
cmpsb
in
xchg
pushf
mov
and
inc
pop
lock
push
test
pop
sbb
pushf
push
jg
lea
pushf
push
pushf
mov
cmp
aaa
pushf
push
pushf
push
mov
test
pushf
push
pushf
push
sub
daa
repnz
pop
mov
repz
push
pushf
push
lcall
dec
lcall
dec
adc
test
add
push
pushf
push
dec
mov
test
or
pushf
push
pushf
push
fwait
out
bnd
dec
arpl
test
daa
or
mov
pushf
push
imul
sbb
pushf
push
add
pushf
push
popf
push
push
in
dec
mov
push
test
jp
push
pushf
push
dec
mov
testb
into
and
mov
lds
pushf
push
xor
pushf
push
pop
sub
sub
push
pushf
push
stos
mov
cld
mov
add
xor
sub
pop
ficompl
adc
pushf
push
and
and
jp
dec
mov
fidivl
cmp
std
pushf
push
mov
xor
dec
sti
pop
popf
push
adc
pushf
push
push
sti
rol
inc
jmp
rol
lret
mov
mov
push
ja
cmpsl
xor
dec
aam
bnd
iret
test
xor
and
test
ljmp
jne
hlt
add
test
dec
cmc
add
jl
data16
add
push
shll
imul
xchg
xor
gs
insl
leave
insl
xlat
jnp
inc
leave
insl
or
test
sub
loope
dec
popf
push
shrb
jl
push
mov
cmpsl
mov
pusha
jns
cmp
mov
ljmp
or
ret
loopne
pushf
push
stos
ja
cmc
rol
inc
rcrb
dec
jge
call
xor
jne
inc
xor
jge
push
sub
int3
mov
leave
jae
jge
pop
ret
insb
mov
fprem
dec
test
mov
push
add
lock
out
xchg
out
push
sbb
fidivl
movsb
xchg
fistl
pushf
push
pushf
push
push
nop
bound
jmp
test
loopne
pushf
push
dec
call
xor
jne
inc
xor
jge
push
sub
int3
mov
pop
jmp
movsb
lret
jge
pop
les
imul
leave
insl
jne
xchg
pop
jno
leave
insl
ja
sub
pop
cmp
cmp
sub
imul
pop
ficompl
jl
pop
lods
add
mov
and
rcrb
jns
cmp
lods
sub
sub
call
mov
and
imul
jp
add
and
popf
push
pop
lods
or
sbb
push
les
daa
push
in
mov
stos
dec
stc
popf
out
sbb
icebp
xchg
ficoms
sbb
ds
test
push
cwtl
mov
shlb
inc
pushf
push
in
inc
jae
push
xlat
test
add
mov
daa
or
ret
loopne
pushf
push
stos
ja
cmc
rol
inc
rcrb
dec
or
pusha
jecxz
call
cmp
jne
dec
xor
jae
fsubrs
ror
mov
mov
ret
insb
mov
mov
mov
inc
out
mov
sub
pushf
push
pushf
push
repnz
push
mov
test
mov
sbb
mov
ret
insb
mov
fldcw
mov
repz
push
xchg
sub
push
popf
push
lods
push
scas
push
mov
push
sti
rol
cmp
int3
mov
lret
mov
push
movsl
pop
adc
dec
mov
mov
and
ja
mov
mov
fs
arpl
pop
shll
imul
stos
ja
fimuls
inc
jnp
cmp
cmp
sub
insl
xor
dec
cld
pushf
push
dec
inc
test
adc
pushf
push
push
cmpsb
pop
in
xchg
sub
inc
test
pushf
push
pushf
push
xor
movsb
xchg
jo
scas
jno
divb
jl
ja
pop
mov
fsubrs
sbb
pushf
push
sbb
cld
pushf
push
add
addr16
pushf
push
adc
cwtl
or
popf
stos
enter
out
mov
mov
dec
xorb
lods
pushf
add
cmp
pushf
push
mov
sbb
repz
ret
adc
dec
pushf
push
sub
and
fidivl
xorb
cmp
mov
jg
sbb
pushf
push
push
dec
fildll
mov
icebp
pop
pop
push
in
dec
pushf
push
pop
dec
mov
push
aad
das
negb
mov
rcrl
push
in
dec
pushf
push
pop
dec
mov
push
and
in
dec
pushf
push
pop
dec
mov
push
push
and
or
mov
popf
push
pushf
push
mov
push
pushf
push
sub
sub
imul
dec
int3
add
sub
icebp
mov
dec
push
inc
xchg
and
pushf
pushf
push
mov
and
dec
rcrb
pushf
push
xchg
arpl
repz
mov
movsb
or
sahf
imul
aaa
push
cmpsb
shrb
movsb
xchg
repnz
mov
pop
lods
push
cmpsl
push
imul
pushf
push
xchg
arpl
dec
cmp
or
mov
push
daa
repz
in
cmp
add
cmpsb
sti
sbb
cmp
pusha
pushf
push
sahf
outsb
pushf
push
pushf
push
out
mov
dec
rcrb
pushf
push
cwtl
popw
jmp
rcrb
pushf
push
cmpsl
insl
xor
dec
push
popf
push
mov
test
mov
push
pushf
push
enter
cmp
dec
pushf
push
add
pushf
push
sub
and
lret
test
xor
adc
int
dec
jl
rorl
je
push
mov
popf
push
and
pop
pop
push
in
dec
pushf
push
pop
dec
mov
push
daa
repz
jnp
adc
cld
fidivl
je
sub
xchg
pusha
popf
push
push
in
dec
pushf
push
pop
dec
mov
push
cmp
pushf
push
fidivl
je
sub
xchg
dec
mov
and
enter
add
inc
xor
add
pushf
push
push
movsl
shll
pushf
push
popf
push
sbb
adc
mov
addr16
push
daa
repnz
lods
mov
push
enter
mov
push
loop
movsb
xchg
fidivs
test
mov
dec
mov
push
sahf
outsb
pushf
push
pushf
push
pushf
push
push
pop
pop
dec
mov
je
push
adc
pop
stos
aad
mov
test
pushf
push
test
nop
addb
mov
js
in
nop
pushf
push
test
push
mov
pushf
push
cmpsl
jne
mov
mov
sbb
outsl
inc
lcall
inc
dec
movsb
xor
add
and
jmp
imul
in
icebp
pushf
fstl
movsb
vmovaps
pop
cmp
pop
pushf
push
sub
jb
inc
jne
xor
cmp
cltd
sub
jns
leave
insl
outsl
adc
adc
adc
jl
push
in
je
pop
pushf
push
cmp
and
dec
movsb
into
test
dec
push
inc
xor
add
and
jmp
or
pushf
push
fisubrl
jl
and
mov
cmp
pushf
push
pop
jmp
dec
adc
cmp
pop
pushf
push
into
and
jb
xor
dec
push
popf
push
inc
and
push
adc
cmp
rcrb
addr16
push
xor
push
aam
mov
sub
cmp
xchg
cmp
in
pop
pop
fidivs
je
mov
repz
in
stc
mov
popf
push
pushf
push
mov
sub
in
setge
dec
xchg
test
xor
in
dec
pushf
push
pop
dec
xchg
arpl
xchg
lock
push
cmp
mov
dec
jl
or
xor
mov
popf
push
push
movsl
and
cmp
add
xchg
in
inc
and
jecxz
dec
pop
pop
pushf
push
add
pushf
push
popf
push
pushf
push
mov
sub
enter
lods
js
cmpsb
mov
lret
test
dec
cmc
add
jns
pop
jp
add
cmp
popf
push
sub
add
dec
sbb
pushf
push
add
pushf
push
enter
enter
enter
xchg
outsl
popf
push
movsb
xchg
push
in
mov
mov
repnz
dec
mov
arpl
in
jo
pushfw
push
pushf
push
mov
push
ja
enter
cmp
mov
outsl
push
sub
mov
daa
xchg
and
popf
imul
out
xchg
out
push
sbb
mov
pop
mov
dec
xlat
pop
xor
and
rcrb
jg
sbb
test
call
dec
xor
sbb
out
dec
xchg
cmp
into
dec
add
and
test
pushf
push
adcl
test
jle
and
mov
mov
loopne
lea
lret
je
imul
jnp
ret
push
jp
adc
sub
xor
lahf
sub
xorl
daa
and
out
xchg
and
and
mov
cmp
and
xor
xchg
enter
push
pop
leave
and
movsl
mov
push
mov
testb
repnz
mov
jbe
xchg
test
out
lahf
popf
push
adc
push
movsl
and
mov
push
jbe
stc
test
loopne
dec
popf
push
mov
xlat
or
fisttpl
popf
push
push
in
je
pop
pushf
push
xor
popf
push
leave
insl
xlat
jnp
xor
insl
leave
insl
leave
insl
xlat
jnp
cmp
leave
insl
ja
sub
jge
inc
xor
push
xchg
and
pushf
push
sbb
popf
push
out
mov
mov
dec
xorb
lods
pushf
pop
lods
add
pop
lret
adc
jge
or
xchg
pushf
push
cmpsl
jne
rcrl
xor
or
movsl
mov
cmp
pop
mov
stos
popa
cmp
pusha
pushf
push
sahf
outsb
pushf
push
pushf
push
push
movsl
mov
cmp
jg
pushf
push
push
movsl
dec
mov
in
mov
jmp
pop
and
sub
stos
ja
decb
das
cmp
pusha
pushf
push
sahf
outsb
pushf
push
aas
repz
aad
enter
cmp
lods
or
dec
out
pop
adc
rcrl
push
in
dec
lcall
pop
and
dec
movsl
mov
pop
into
and
sbb
lods
jo
call
mov
js
jbe
cmp
cli
test
arpl
cmp
dec
pushf
push
dec
movsb
sbb
cltd
and
fnstsw
ret
sbb
sbb
hlt
adc
mov
cmp
and
mov
inc
movntq
aaa
push
cmpsb
or
in
push
jmp
push
je
xchg
pushf
push
cmp
gs
push
pushf
push
push
cmpsb
fimull
sbb
jl
push
in
je
dec
pushf
push
cmp
and
push
cmpsb
adcl
popf
push
fidivl
pushf
mov
dec
xorb
lods
pushf
cmp
in
mov
stos
ja
dec
lahf
imul
dec
cmp
pushf
push
sbb
in
pop
pop
push
in
dec
lcall
pop
and
dec
movsl
mov
pop
into
and
leave
jge
pusha
daa
repz
lods
jo
out
rcrb
sahf
mov
xor
je
dec
pushf
push
test
adc
je
add
push
sbb
je
pop
pushf
push
and
enter
fidivl
nop
and
xorb
push
out
mov
xchg
pusha
popf
push
add
movsl
imul
push
sub
cmp
mov
pushf
push
into
and
ja
js
cmc
mov
xchg
lret
adc
je
pusha
xchg
add
mov
aas
or
ficompl
hlt
mov
js
jbe
ss
push
pop
pop
pushf
push
popf
push
pusha
xchg
or
push
push
in
je
push
jne
popf
push
push
and
mov
or
or
or
or
adc
mov
xorb
push
andl
xor
lcall
fbld
das
nop
sbb
jo
fidivl
movsb
xchg
into
and
pop
xorb
nop
sbbb
pop
pushf
push
push
push
lcall
dec
push
in
dec
pushf
push
cmp
mov
pushf
push
nop
sbb
jmp
cmp
test
push
mov
sub
jmp
sbb
cmc
dec
rcrl
inc
gs
int
ret
loop
movsb
xchg
xchg
into
and
inc
mov
addr16
repz
lret
cmp
lahf
sarl
add
jnp
inc
sbb
adc
sub
pop
cmpsb
mov
movsl
in
adc
mov
stos
lods
pushf
sbb
sbb
inc
in
aad
pusha
loope
popf
push
stos
dec
popf
push
lods
mov
lret
aas
imul
cvtps2pd
aas
imul
cs
push
push
loopne
xlat
inc
imul
inc
and
push
loopne
xlat
inc
imul
mov
inc
sub
or
lds
aad
mov
test
inc
cmp
adc
stos
lods
pushf
push
xchg
pop
stos
cmpsl
jne
bound
mov
cmp
data16
popf
push
dec
add
pushl
push
inc
pushf
push
pushf
push
iret
cmp
inc
addb
adc
ljmp
andl
call
push
ret
out
aad
imul
xor
mov
push
or
adc
movsl
or
movsl
mov
mov
sbb
mov
enter
add
mov
sbb
mov
pop
lods
sub
pop
or
jmp
nop
bound
push
movsb
add
pop
enter
popa
lods
pushf
test
push
and
stc
cmp
and
add
in
pop
lcall
push
push
in
push
cwtl
pushfw
push
push
in
dec
mov
push
insb
ficompl
sub
push
and
negl
jb
xor
insb
into
and
sbb
aam
pushf
push
cmpsl
xor
cmp
sub
mov
mov
jle
pushf
push
lcall
push
push
in
push
cwtl
pushfw
push
pop
seta
xchg
gs
add
push
xchg
loop
add
dec
loop
mov
push
popf
push
lcall
push
push
in
push
lcall
dec
push
in
dec
mov
push
mov
shl
aad
sbb
push
lcall
imul
mov
xchg
pushf
push
pusha
xchg
test
lahf
imul
push
popf
push
pushf
push
pushf
push
fwait
repnz
mov
mov
fwait
repnz
ret
push
mov
jge
adc
and
mov
out
sub
sarl
jmp
xor
xchg
leave
cmp
dec
test
sub
push
cmpsb
xor
dec
push
gs
mov
dec
outsl
xchg
enter
fcomps
jg
call
outsl
cmp
inc
jge
adc
sbb
stc
push
ret
mov
xchg
into
and
inc
mov
addr16
repz
les
cmc
xlat
insb
or
adc
jecxz
imul
lock
insl
xchg
jno
pop
cmpsb
push
fildll
out
int
adc
jae
and
into
and
and
into
and
lret
push
mov
xchg
pop
inc
mov
imul
jmp
imul
push
pop
test
movsl
into
cmp
adc
mov
jmp
imul
loopne
dec
jo
adc
pop
xchg
leave
cmp
cmp
cmc
enter
push
in
dec
push
inc
pushf
repz
sub
mov
mov
and
jae
testb
into
and
lret
push
mov
xchg
pop
dec
aas
popf
push
inc
clc
popf
push
pushf
push
pushf
push
adc
iret
cmp
ret
sub
mov
sbb
mov
aas
pop
addr16
xchg
sub
rcrl
addr16
repz
fsubl
push
test
sub
mov
fcomps
adc
lret
jb
pushf
push
and
cmp
inc
imul
mov
push
dec
push
gs
xchg
cmp
jg
inc
inc
orl
divl
mov
mov
call
cmc
pop
cmpsl
pop
out
fcomps
cmpsl
mov
sbb
mov
into
and
xlat
testb
repnz
les
test
fildll
sbb
test
bound
into
and
mov
xchg
pushf
push
push
and
in
insb
pushf
push
xorb
pushf
push
lret
adc
push
in
js
push
insb
pop
xchg
push
jecxz
pop
loop
insb
pop
fidivs
jo
out
jo
pop
stos
pop
out
call
pop
or
vpxor
push
push
sbb
pop
pop
cmp
pop
sbb
or
cmp
cmp
push
push
stos
pop
mov
enter
sbb
mov
push
cmp
mov
sbb
or
xchg
xchg
out
lods
icebp
xor
dec
xchg
insl
or
into
sub
scas
sbb
pop
adc
call
pushf
push
mov
out
jg
lock
fidivs
xchg
test
and
iret
and
jecxz
cmp
jg
inc
inc
sbbl
subb
addr16
sub
daa
repz
push
pop
sub
sub
cmpsl
adc
xor
or
pop
test
in
sbb
xchg
jge
pop
cmp
inc
pushf
push
neg
call
lock
dec
ja
sbb
jge
aad
fstps
roll
int
or
lahf
mov
cmpsl
mov
cmp
jnp
lods
add
ljmp
rcrl
cmp
xchg
fxch
sarl
inc
lahf
scas
sbb
pop
adc
in
mov
sahf
cmc
insl
mov
pop
out
jg
lock
fidivs
xchg
test
cmp
jecxz
pop
jecxz
dec
mov
cmp
xor
adc
out
cmp
jecxz
sbb
sbb
pushf
push
sbb
and
test
pushf
push
dec
rcrl
imul
pushf
push
mov
daa
pop
test
hlt
or
hlt
stc
movsb
out
sti
cmp
outsl
rcrl
pop
out
mov
push
inc
pushf
push
pushf
push
adc
fistpll
dec
xlat
lret
or
out
fcomps
mov
push
pop
lods
xchg
call
pop
test
jbe
mov
pop
cmpsb
pop
lods
xchg
ljmp
mov
scas
mov
push
or
or
or
es
pop
dec
iret
je
lods
mov
lods
pushf
push
or
or
or
or
or
or
adc
in
jo
sub
cmp
push
pop
dec
push
pop
pop
dec
push
pop
jecxz
and
mov
push
das
cs
daa
sub
jg
pop
out
sbbb
add
fcomps
pop
out
enter
and
mov
lods
and
out
enter
and
sub
dec
rcrl
pop
dec
lret
dec
xor
or
xchg
daa
add
sti
fstps
cmpsl
xor
or
sbb
jmp
daa
add
lods
push
xor
sbb
cmc
dec
rcrl
out
xlat
cmp
rorl
xor
jecxz
sbb
int
adc
fucomp
and
fisttpl
lret
loope
jl
adc
push
cmp
outsl
adc
xchg
and
xchg
loopne
out
ror
fildl
sub
mov
cmc
int
dec
add
push
sbb
test
jne
mov
push
fidivs
pop
dec
mov
mov
cmp
cli
push
fs
add
pop
repnz
insb
pop
pop
test
and
cmp
repnz
dec
pushf
push
idiv
mov
add
cmc
lea
add
lds
adc
pushf
pushf
push
jb
popa
ss
and
sbb
das
push
lret
pushf
push
pop
dec
sahf
repz
das
out
jg
rclb
call
ja
pusha
xchg
jg
cltd
sub
xchg
iret
jnp
pop
jmp
jb
outsl
push
mov
adc
sub
mov
mov
jmp
andb
js
jmp
jno
fmuls
xchg
sub
test
dec
lcall
dec
jnp
test
dec
pushf
push
xchg
sbb
popf
sbbl
pop
pop
jmp
adcb
test
test
loop
push
mov
sub
push
inc
xor
push
push
xchg
sub
mov
pop
pop
jmp
sbbb
stos
cltd
sub
in
popf
push
sbb
cwtl
pushfw
push
pushf
push
sub
cmp
addr16
push
mov
and
int3
test
adc
daa
cmp
jmp
adcb
test
test
adc
xor
add
or
or
or
or
or
adc
iret
sub
jnp
sahf
push
clc
pop
test
test
sbbl
sub
xchg
pushf
push
xor
mov
push
int3
test
cmp
mov
popf
insl
rorb
divl
lahf
imul
icebp
fisubrl
jnp
and
sarl
test
bound
pop
test
mov
cmc
mov
pop
test
ficompl
sub
dec
rcrl
xchg
jge
xor
adc
fcmovne
adc
rorl
xor
cmp
adc
fdivrp
icebp
cmp
fstps
pop
mov
mov
push
jnp
xchg
repnz
js
fistpll
pushf
push
cli
xchg
out
mov
pop
and
movsl
xor
pushf
push
sbb
neg
xchg
popf
push
pushf
push
test
and
xor
jecxz
sbb
adc
shll
shlb
pop
dec
sbb
daa
scas
pushf
push
arpl
xor
dec
pushf
push
cmp
inc
idivb
pop
sub
fxch
mov
insb
pop
sub
pop
ficompl
loope
cmp
mov
or
xlat
lret
call
xor
mov
adc
jmp
mov
test
mov
outsl
pushf
push
int
mov
flds
sbbl
pop
sub
mov
mov
push
jl
sub
data16
inc
outsl
push
enter
xor
cmp
pusha
pushf
push
or
pop
dec
jl
jl
fnstsw
jo
pop
arpl
dec
add
imul
fisubrl
lock
fwait
lods
sub
cltd
cmpsl
pop
std
xchg
popf
push
xor
pushf
push
loop
nop
cmp
xchg
test
pop
cwtl
mov
dec
pushf
mov
fistpll
adc
lcall
das
add
or
sub
aaa
mov
add
mov
clc
scas
xchg
fs
xchg
daa
pop
cmp
inc
testb
add
pusha
add
cmp
testb
dec
push
gs
cmpsl
call
sbb
repnz
and
insl
add
bound
pushf
push
sbb
pop
mov
xor
dec
inc
inc
lret
sbb
and
add
aaa
adc
es
adc
inc
xchg
fidivs
nop
sbb
add
das
test
push
jl
xor
cmp
push
jo
pop
cmpsl
std
fldl
and
cltd
loope
andl
jb
mov
xchg
sbb
iret
adc
in
rcrb
stos
jp
jbe
shll
cmp
pop
cmp
dec
pushf
push
enter
mov
xor
inc
ffreep
loope
xchg
jb
sahf
cmc
xor
push
movsl
sbb
dec
andb
dec
mov
popa
adc
or
sbb
cmc
ficompl
cmp
jle
pop
out
jg
in
lods
test
fidivs
nop
or
nop
sbb
mov
and
jecxz
dec
mov
pusha
lock
imul
mov
pop
pushf
push
lcall
loope
sub
icebp
pop
ficompl
pop
out
test
sub
imulb
inc
pushf
push
popf
push
mov
push
lret
js
loope
pop
pushf
push
pushf
push
mov
test
movsl
into
add
pop
popf
push
pushf
push
stc
mov
popf
push
pushf
push
inc
gs
call
adc
fstp
xor
movsl
outsl
fidivs
xchg
arpl
and
cltd
xchg
and
cmpsl
in
repnz
loopne
repz
and
popf
push
fs
add
test
pushf
push
cs
jl
testb
adc
pop
jmp
cmpsl
sbb
movsb
in
sub
pop
mov
shrl
add
mov
xchg
test
call
dec
pushf
push
testb
push
lods
out
insb
pop
pusha
xchg
mov
js
enter
test
out
stos
in
jle
push
cmp
in
bnd
mov
mov
and
shlb
lock
and
adc
push
pop
test
movsl
into
cmp
cli
push
push
cmpsl
sbb
lods
add
cmp
inc
lcall
inc
gs
xchg
fcomps
inc
or
aas
jg
sbb
dec
mov
aad
mov
lcall
adc
xor
inc
xlat
mov
xchg
test
jb
stos
sbb
mov
insb
and
movsl
xor
dec
and
xchg
pushf
push
movsl
mov
sub
into
daa
mov
sub
scas
push
mov
push
movsl
int
xchg
push
inc
add
sub
enter
aaa
cld
bound
xchg
test
sub
ror
xchg
lahf
inc
sbbb
mov
cmp
ret
iret
ret
and
sar
cmp
sub
loop
pushf
mov
rcll
xor
or
fisubrs
jo
push
fldt
shll
pop
test
out
enter
sbb
cmc
fwait
daa
repnz
ficompl
stos
xchg
mov
je
jnp
cmpb
jg
add
dec
xchg
test
lret
xor
nop
add
out
rolb
xor
pop
out
sarl
jg
in
xor
shrb
cwtl
mov
and
jecxz
dec
xchg
cmpsl
jo
inc
imul
mov
push
mov
push
cmpsb
xchg
inc
lahf
imul
inc
adc
adc
push
and
nop
sbb
in
cmp
cvttps2pi
lcall
xlat
xor
mov
cmc
dec
rcrl
inc
gs
mov
dec
xchg
enter
sub
push
adc
xorb
test
dec
mov
adc
jp
xor
cmp
int
dec
add
pop
ficompl
push
push
cmp
pop
mov
adc
insb
pop
test
and
and
fidivs
jo
fidivl
insb
pop
shrb
jo
je
imul
jge
xor
sbb
jo
and
push
lahf
jl
fs
sbb
and
jbe
or
sbb
iret
cmp
mov
xchg
sbb
jg
sbb
jecxz
dec
jg
push
loopne
imul
mov
movsl
and
mov
outsb
and
movsl
xor
cmp
pop
add
out
lcall
dec
test
sub
pop
cwtl
data16
repz
mov
stos
outsl
daa
repnz
inc
mov
pushf
push
pop
ficompl
inc
gs
xlat
or
mov
shrl
mov
push
mov
pop
lea
in
and
loopne
push
push
movsl
jae
paddusb
stos
adc
sub
push
add
mov
pushf
push
and
jge
push
jge
fcomps
sbb
popa
mov
xor
push
jns
mov
cmp
loop
xor
rolb
mov
iret
sbb
sbb
or
dec
mov
push
jl
sub
popf
push
add
roll
popf
push
pushf
push
popf
push
sbb
mov
out
sub
push
mov
popf
push
iret
lcall
sbb
jmp
movsl
xor
inc
pushf
push
jmp
popf
push
cwtl
data16
mov
push
movsl
into
cmp
xlat
imul
or
or
dec
push
gs
jecxz
and
iret
sub
lret
add
lcall
fisttpll
jb
add
out
fistpl
pop
test
in
cwtl
js
cmpsl
pop
out
cmpsb
fidivs
pop
dec
das
lret
hlt
dec
sbb
imul
pushf
push
movntq
dec
mov
pushf
push
addr16
push
or
es
pop
dec
repz
call
and
and
sbb
sbb
jne
xor
mov
dec
fdivs
enter
repz
pop
out
test
leave
mov
sbb
cltd
test
loope
daa
inc
insl
xor
and
int
sub
aaa
pushf
push
xlat
mov
imul
dec
mov
mov
dec
cmp
testl
test
icebp
sbb
fistl
shll
cltd
test
pop
ficompl
jg
rorl
sbb
cmc
dec
rcrl
sub
jmp
aaa
shrl
loope
lea
add
sarb
dec
jmp
mov
nop
out
lods
roll
cmpsl
pop
out
enter
loope
ror
andl
out
iret
arpl
or
ret
mov
sbb
or
ret
mov
mov
daa
or
ret
mov
mov
ret
mov
stos
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
pop
sbb
or
ret
mov
aas
sbb
or
ret
mov
aaa
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
das
sbb
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
dec
sbb
or
ret
mov
cmp
daa
or
ret
mov
xor
daa
or
ret
mov
and
daa
or
ret
mov
sbb
or
ret
mov
inc
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
scas
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
inc
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
dec
sbb
or
ret
mov
push
sbb
or
cli
mull
jecxz
daa
or
ret
mov
mov
ret
mov
sbb
or
ret
mov
sub
daa
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
sbb
or
ret
mov
and
daa
or
ret
mov
xor
daa
or
ret
mov
sbb
or
ret
mov
push
sbb
or
ret
mov
push
sbb
or
ret
mov
sbb
or
ret
mov
dec
sbb
or
ret
mov
dec
sbb
or
ret
mov
inc
sbb
or
ret
mov
cmp
daa
or
ret
mov
fistpl
daa
or
jnp
sub
inc
gs
sbb
shrl
add
cmp
pop
std
fstpl
fisubs
jg
push
sub
rolb
shlb
push
add
push
fistl
xor
repnz
fnstsw
pushf
push
lret
and
lea
mov
and
loop
jne
and
or
out
call
jne
and
pop
out
jnp
fidivrs
das
loope
fs
in
mov
mov
sub
and
pop
loop
fidivrs
mov
pop
das
fs
dec
add
inc
imul
pop
lods
mov
push
inc
add
lea
mov
mov
push
pop
test
int
pusha
xchg
or
mov
mull
or
pop
test
int
test
dec
mov
lret
pop
outsl
je
push
inc
add
jns
ja
push
inc
gs
xlat
stos
repz
add
cmp
aaa
push
mov
add
pop
lods
mov
push
inc
add
sbbl
lahf
mov
sub
rolb
cmpsb
xor
cmp
das
repz
ljmp
in
push
sub
repnz
xlat
fs
aas
imul
xlat
lahf
bound
adc
mov
aas
imul
fcom
jne
and
inc
pop
dec
pushf
push
dec
mov
in
xchg
xchg
daa
shl
sbb
jnp
push
insl
adc
dec
add
jge
arpl
out
dec
mov
bound
adc
add
and
adc
adc
xchg
adc
push
imul
rolb
cmpsb
xor
jge
adc
std
push
iret
lcall
or
xchg
js
push
lods
js
push
lods
js
push
adc
out
cmpsb
popf
sub
stos
mov
sbb
or
jnp
push
push
fcoml
xor
sub
xor
push
sbb
pushf
push
popf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
popf
push
cmp
sub
pushf
push
pop
out
push
pushf
push
sbb
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
cmp
jl
insl
loopne
jae
movsb
sahf
xor
push
jnp
push
jb
pop
pop
push
inc
je
je
bound
insl
aas
jno
aam
popa
xor
imul
xor
jle
xor
push
jb
pop
sti
cmp
jbe
movl
cmp
push
inc
je
je
bound
insl
aas
jno
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
call
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pop
imul
push
imul
dec
imul
inc
imul
imul
imul
imul
imul
insb
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
imul
sbb
push
lcall
imul
imul
push
subb
jl
jp
js
jbe
je
jb
jo
outsb
imul
push
loopne
mov
mov
gs
add
mov
gs
aam
mov
mov
cmp
pushf
cmp
and
jns
pop
pushf
push
fldenv
jp
leave
xchg
pop
xchg
rclb
dec
add
cmp
imul
into
pop
dec
adc
fadd
cli
dec
outsb
dec
imul
sbb
xchg
xor
daa
gs
dec
inc
ja
pop
inc
jne
pop
cmp
push
push
ja
popa
sbb
sbb
pusha
sbb
imul
push
cmc
popa
jnp
pusha
pop
jp
insb
inc
jne
lods
das
arpl
inc
inc
je
push
inc
jne
push
mov
dec
mov
push
ds
xor
pushf
push
pushf
push
pushf
push
pushf
push
pop
pusha
jb
insb
imul
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
inc
jbe
push
sbb
bound
gs
arpl
insl
inc
jae
fs
xchg
push
jo
lcall
inc
jne
pop
sub
cmp
insl
inc
jae
fs
pop
pop
aam
pushf
push
das
push
cmp
bound
gs
arpl
insl
inc
jae
fs
dec
and
sbb
ja
imul
mov
cli
pushf
push
das
push
cmp
bound
gs
arpl
insl
inc
jae
fs
xchg
push
jo
lcall
inc
jne
pop
sub
cmp
insl
xor
jo
cli
lds
and
arpl
and
das
lds
xor
pop
out
dec
jnp
and
mov
mov
sub
hlt
pop
jge
outsl
cld
and
sbb
fcmovu
push
adc
int3
outsl
jle
lds
inc
jno
int3
outsl
rorl
arpl
push
mov
inc
pushf
push
pushf
push
pushf
push
pushf
push
sub
jns
jno
jecxz
addr16
outsb
and
mov
jecxz
addr16
jne
jno
jmp
inc
push
jb
pop
rorl
mov
inc
jo
sub
ret
fwait
inc
dec
mov
mov
mov
lds
rorb
mov
jne
jecxz
outsl
sub
jmp
movsb
fs
mov
subl
insl
inc
pop
lahf
nop
dec
push
push
xor
ljmp
lea
in
adc
cmp
mov
sbb
mov
push
mov
outsb
inc
pop
insb
jns
xor
jl
lea
dec
outsl
xorb
add
je
sbb
xorb
loop
daa
gs
xor
inc
jne
mov
inc
jo
sub
ret
sub
push
pop
dec
and
cli
inc
jnp
pop
jecxz
cmp
pop
jo
jo
cltd
ljmp
jno
mov
jae
imul
cmp
pop
dec
arpl
lds
inc
jbe
pop
sub
dec
dec
lds
sub
jo
xor
insl
ret
add
push
subl
mov
subl
scas
inc
jo
popa
push
subl
stos
dec
jnp
insl
inc
jae
subl
rclb
subl
mov
or
subl
gs
mov
sub
dec
dec
out
mov
pop
dec
arpl
arpl
push
jg
jb,pt
fs
ja
dec
in
ss
pop
dec
imul
sub
jns
mov
pop
xor
mov
push
gs
dec
cmpsb
jb
mov
jbe
push
xor
dec
loopne
xor
sbb
dec
out
mov
dec
dec
in
mov
dec
dec
in
mov
xchg
aaa
insb
or
pop
dec
imul
gs
mov
fisubrs
ja
pop
push
sub
das
pop
dec
outsb
mov
jno
cmp
pop
add
pop
dec
outsb
mov
jno
cmp
pop
adc
jb
cs
dec
jno
xor
xchg
and
lock
pop
dec
pop
insl
inc
popa
push
sbb
cmp
lea
jno
lods
movsl
lahf
adc
push
mov
mov
push
inc
push
gs
imul
inc
pop
push
imul
dec
push
hlt
xor
adc
inc
arpl
mov
aaa
mov
gs
ret
add
mov
mov
data16
cmp
cmp
pushf
push
xlat
xlat
sbb
mov
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
sbb
sbb
mov
sbb
mov
sbb
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
xlat
xlat
sbb
sbb
sbb
sbb
xlat
xlat
sbb
xlat
xlat
sbb
ror
sub
xlat
sbb
sbb
xlat
xlat
sbb
xlat
xlat
sbb
sbb
sub
sbb
movsb
sahf
xor
dec
jbe
insl
inc
js
pop
pop
push
sbb
push
dec
je
jl
insl
and
idivb
popa
and
jb
je
jl
insl
and
testb
daa
popa
into
adc
insb
repnz
arpl
imul
push
adc
pop
pop
xor
scas
inc
jo
popa
hlt
and
jno
push
mov
mov
jbe
test
inc
jbe
jbe
adc
pushf
push
xor
xor
imul
jae
mov
dec
jnp
outsb
loopne
cs
insl
and
sarb
sub
subl
push
xor
xor
imul
jae
mov
dec
jnp
outsb
loopne
inc
outsl
aam
pop
pop
or
xor
push
insl
cmp
dec
cmp
dec
addr16
jno
jae
insl
push
push
addr16
push
mov
cld
cld
dec
aas
pushf
push
in
and
in
es
pushf
push
sbb
ljmp
sub
sbb
ljmp
sub
lock
ljmp
sub
lock
add
and
ljmp
sub
lock
idivb
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
add
sub
lock
jne
sbb
ljmp
sub
das
sbb
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
sbb
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
ljmp
sub
lock
cmpb
add
sbb
add
jle
sbb
div
sbb
xor
sbb
add
sbb
pusha
sub
sub
lock
shlb
ljmp
sub
stos
sbb
ljmp
sub
call
sbb
mov
lock
ljmp
sub
lock
jp
sub
cmp
arpl
push
int3
cwtl
pushf
push
outsb
mov
sbb
out
jnp
sub
sbb
pushf
push
and
aaa
aad
jge
xchg
lret
pop
out
sbb
pop
aas
mov
nop
arpl
cltd
xor
daa
pushf
push
pop
push
pushf
push
pushf
push
adc
fdivrl
mov
adc
mov
jge
push
xor
inc
jecxz
xor
enter
push
pushf
push
pushf
push
pushf
push
andl
mov
xchg
dec
cmp
leave
sar
mov
stc
bound
inc
sbb
xor
inc
push
stos
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
sti
mov
push
xchg
test
sub
push
mov
push
pushf
push
in
mov
push
cmpl
stos
pop
inc
pushf
push
scas
adc
inc
fcompl
fisubrl
clc
cmp
pushf
push
add
pushf
push
lcall
pusha
xor
pushf
push
lahf
sbb
adc
cmp
jno
and
xor
cmpl
sub
sbb
sub
cli
mov
jmp
scas
pop
out
sahf
dec
popa
dec
stos
or
out
mov
sub
arpl
mov
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
jl
pushf
push
lcall
push
hlt
adc
push
pop
lds
pop
dec
pushf
push
fisubrl
sbb
sbb
add
dec
and
in
loope
fucomip
mov
test
pop
pushf
in
push
out
jecxz
loop
pusha
pop
sub
das
fimull
out
jecxz
loop
pusha
pop
sub
xor
push
push
out
jecxz
loop
pusha
pop
sub
push
lcall
push
hlt
adc
push
push
mov
pushf
push
fisubrl
sbb
sbb
adc
dec
and
in
loope
xor
lds
loopne
loope
fucomip
mov
movsl
fsubrs
loope
xor
pop
loopne
push
out
jecxz
loop
pusha
pop
sub
xor
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
es
lcall
push
pushf
push
out
xor
addr16
push
pushf
push
ficompl
addr16
push
pushf
push
push
lcall
push
pushf
push
aas
fistpl
addr16
push
pushf
push
das
rcrl
push
pushf
push
pushf
push
mov
lcall
push
lcall
xor
push
cwtl
or
addr16
loop
addr16
lcall
scas
lcall
mov
addr16
inc
lcall
adc
lcall
rcrl
addr16
mov
lcall
push
lcall
jo
addr16
fs
pop
lcall
cmp
addr16
or
addr16
lcall
loopne
addr16
lcall
rcrb
fldt
lcall
xchg
outsl
jne
addr16
imul
aaa
pop
lcall
dec
lcall
cmp
xlat
sub
scas
adc
lcall
repz
fistps
addr16
lcall
mov
lcall
sahf
lcall
mov
insb
je
addr16
push
addr16
pusha
lcall
dec
lcall
cmp
shlb
mov
adc
addr16
lcall
lock
loopne
addr16
lcall
mov
loopew
lcall
xchg
lcall
sbbl
addr16
push
lcall
inc
lcall
das
lcall
pop
lcall
push
lcall
fs
inc
lcall
push
lcall
lock
aam
addr16
lcall
fwait
lcall
jae
addr16
inc
lcall
adc
lcall
rcrl
addr16
mov
lcall
push
lcall
jo
addr16
fs
pop
lcall
cmp
addr16
or
addr16
lcall
loopne
addr16
lcall
rcrb
fldt
lcall
xchg
outsl
jne
addr16
imul
aaa
pop
lcall
dec
lcall
cmp
xlat
sub
scas
adc
lcall
repz
fistps
addr16
lcall
mov
lcall
sahf
lcall
mov
insb
je
addr16
push
addr16
pusha
lcall
dec
lcall
cmp
shlb
mov
adc
addr16
lcall
lock
loopne
addr16
lcall
mov
loopew
lcall
xchg
lcall
sbbl
addr16
push
lcall
inc
lcall
das
lcall
pop
lcall
push
pop
jnp
inc
xor
pop
imul
jnp
inc
xor
jl
daa
gs
jnp
push
and
inc
dec
jl
daa
arpl
pop
jnp
push
and
inc
dec
jl
fwait
sbb
dec
ret
pop
push
pop
pop
xor
jae
jno
dec
in
xor
and
push
jae
jno
dec
in
xor
sub
pop
mov
inc
jae
jp
jns
outsb
sar
jl
xchg
sbb
cmp
pop
sbb
dec
xor
addr16
push
jae,pt
mov
pop
inc
jbe
cmc
fisttpll
adcb
dec
jns
out
mov
inc
dec
jp
cmp
push
sbbb
add
pop
push
pop
sbb
imul
inc
je
inc
pushf
push
add
pop
push
pop
sbb
jne
jo
inc
pushf
push
add
daa
gs
inc
cmp
pop
sub
push
pop
inc
sbb
aas
cmp
xor
outsl
sbb
loop
js
jae,pt
pusha
sub
xchg
jae,pt
bound
pop
jp
jns
outsb
sar
cmpb
pop
and
and
sbb
push
sub
add
imul
imul
pushf
push
push
jge
inc
and
pop
aaa
popw
dec
xor
addr16
push
imul
js
jns
xor
cmp
inc
push
arpl
push
adc
inc
sub
clc
pop
jp
dec
sub
jne
jo
mov
xor
push
inc
imul
mov
xorl
xlat
pusha
cmp
inc
ja
jae
jno
add
scas
pop
jnp
push
push
adc
daa
sbb
jns
push
sub
adc
pop
pop
xor
push
cmp
lea
xorl
jo
inc
push
arpl
add
inc
jo
ja
popa
aam
cld
sbb
es
jns
clc
cli
pop
push
jl
sub
imul
data16
std
xor
popa
inc
jo
pop
pop
pop
mov
and
cmp
insb
and
jae
outsb
rolb
sbb
cmp
insb
and
dec
jbe
jg
push
sbb
outsb
ss
jno
addr16
push
sbb
outsl
xor
imul
dec
ja
push
sub
push
cmp
insl
sbb
sbb
push
dec
jnp
jae
push
and
sbb
sbb
push
sub
imul
lahf
ljmp
mov
dec
mov
xor
imul
xor
rolb
pop
cmpsb
push
jl
sub
imul
insl
and
mov
imul
sbb
jnp
jnp
jae
push
xor
pop
pushf
push
xor
pop
pushf
push
inc
ja
add
and
cli
incb
es
add
xor
mov
push
inc
jne
push
inc
jbe
outsl
cld
lods
icebp
inc
jns
pop
sbb
push
sbb
jo
push
sbb
push
es
lret
xor
sub
je
jo
push
xor
pop
pushf
push
and
push
and
push
das
push
inc
mov
inc
ja
push
and
pushf
push
inc
jae
imul
sbb
inc
jae
push
dec
jne
add
mov
jb,pt
push
sbb
imul
pop
xor
lcall
daa
pusha
pushf
push
and
inc
jno
push
es
jb
clc
notb
inc
jne
out
repnz
sub
push
out
xchg
sub
imul
push
gs
push
sub
xor
cld
fadds
pushf
push
xor
push
mov
arpl
arpl
pop
mov
pop
cs
insl
sbb
push
cs
insl
sbb
push
and
jno
push
outsl
or
push
dec
jp
pop
sbb
push
outsb
inc
ja
jge
imul
insl
jp
push
sub
and
push
cmp
insb
pushf
push
and
pushf
push
xor
and
mov
push
inc
inc
je
push
cmp
xor
and
insb
xor
xor
inc
je
addr16
xor
cmp
ja
push
push
cmp
jns
outsl
and
mov
sub
sub
jno
push
es
mov
and
sbb
push
dec
jnp
je
pushfw
push
sub
jns
push
and
pushf
push
and
and
push
daa
and
insb
xor
push
and
pop
es
jae
pop
pushf
push
inc
jo
ja
push
fsubrl
lcall
test
fsubrl
pop
imul
inc
popa
push
push
mov
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
xchg
lcall
outsl
push
push
mov
lcall
sbbb
sub
movsb
sahf
xor
push
fs
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
insb
lcall
push
sahf
xor
push
ds
pop
outsl
aaa
dec
fs
jo
sbb
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
inc
lcall
fs
pop
cmp
fs
jo
sbb
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
sbb
add
sbb
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
push
pushf
.byte
pushf
.byte
