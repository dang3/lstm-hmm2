call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jne
gs
addl
pusha
test
shl
adc
xor
adc
movsl
xchg
inc
test
mov
inc
xchg
xor
roll
aad
lds
mov
movsb
jae
inc
test
mov
inc
mov
flds
adc
cs
add
add
add
push
in
idivb
sub
and
jl
add
cs
jge
ret
mov
mov
add
ds
cs
fisubrs
sub
out
loop
movsl
das
ret
mov
test
aas
mov
into
pusha
push
fcmovu
repnz
mov
lock
imul
les
enter
adc
incl
xchg
jle
ret
dec
mov
push
add
cmp
mov
loopne
sarb
in
and
mov
pop
stc
dec
test
arpl
aam
pop
popf
lds
mov
push
mov
adc
pop
and
dec
notb
mov
mov
xor
roll
aad
lds
mov
movsl
imul
in
hlt
push
jecxz
nop
jp
xorl
add
jae
cs
cmp
ss
push
loope
mov
xchg
push
test
lds
inc
adc
jno
es
and
adc
and
jo
and
shl
and
xor
add
adc
inc
test
mov
inc
xchg
xor
roll
aad
lds
mov
movsl
jno
inc
test
mov
cmp
inc
setp
inc
mov
test
pushf
nop
xchg
mov
or
jge
loope
popf
and
mov
pop
pop
jle
dec
fiaddl
mov
shl
ja
dec
out
das
lret
lock
push
and
jmp
mov
jae
insl
mov
fcomps
loop
pushl
leave
cmp
scas
shr
pop
sbb
rolb
xor
mov
mov
mov
dec
gs
xchg
mov
sahf
cmp
mov
cmp
bound
fists
dec
das
out
adc
dec
cmp
push
loopne
scas
aam
xor
sbb
test
lock
mov
mov
lock
sub
fs
mov
mov
test
in
cli
mov
and
xchg
pop
js
dec
shl
push
das
mov
cmpsl
jge
sub
sbb
incl
mov
mov
pop
lea
push
or
pop
jg
mov
dec
jnp
jmp
jmp
mov
mov
mov
jnp
sbb
jbe
or
mov
jl
mov
les
dec
or
lahf
add
stc
push
cmpsb
jne
adc
fldt
pop
add
inc
dec
les
pop
dec
outsb
pop
fistps
test
loop
in
and
lods
and
add
orb
xor
adc
ja
jmp
dec
jecxz
cmpsb
scas
mov
dec
lcall
and
imul
mov
xchg
and
dec
sarl
in
scas
mov
clc
ficompl
les
dec
pop
inc
adc
lar
push
jno
mov
mov
in
sbb
test
dec
nop
jb
loope
push
or
iret
cmp
mov
adc
jp
pop
push
or
shr
and
popf
je
pop
xchg
jno
inc
stc
pop
loope
ljmp
bound
cli
in
jg
btr
and
cli
jge
fld
or
fdivrs
and
inc
test
xor
push
shll
add
fbld
into
jnp
inc
jmp
popa
adc
jns
jp
lods
jbe
mov
scas
cmp
xchg
add
push
icebp
pop
push
out
push
popf
nop
mov
fs
ljmp
jmp
nop
addr16
popa
es
jo
orl
adc
inc
enter
xor
xchg
in
sti
sub
cmc
int3
mov
insb
mov
pop
les
iret
mov
push
loopne
dec
sub
sti
popa
es
and
xchg
mov
xchg
sahf
insl
pop
std
pusha
lea
hlt
adc
dec
mov
inc
dec
pop
inc
and
aaa
cmc
pop
jo
fwait
ret
addr16
xchg
test
jnp
cs
scas
inc
xchg
pushf
outsb
xchg
notb
es
xor
movzbl
inc
pop
icebp
pop
jbe
and
sub
and
mov
out
stos
push
ja
adc
mov
mov
sbbl
je
pusha
adc
and
sbb
cmp
les
mov
ja
decl
fisubs
push
fs
inc
cmp
cld
pop
mov
test
clc
lcall
stos
mov
out
or
imul
push
aas
test
addr16
push
loope
repz
stos
pop
movsl
popa
adc
cltd
xchg
and
cmp
out
cmp
stc
pop
sub
xchg
or
mov
nop
repnz
pushf
ficoms
test
cli
jns
mov
pop
aad
and
lock
mov
push
ss
hlt
ja
mov
mov
test
add
adc
loop
movsl
mov
inc
in
je
test
jl
sbb
fxch
loopne
loopne
cmp
popl
loop
aas
inc
push
fmul
fstl
mov
shll
jle
xchg
shlb
dec
inc
inc
ret
ret
addl
lock
fiaddl
ret
xor
test
popf
or
adc
pushf
adc
sub
mov
add
out
aas
mov
bound
inc
cltd
stc
xchg
ljmp
in
dec
fimull
push
stos
xchg
orl
add
in
or
dec
cmp
pop
mov
adc
jne
repnz
and
mov
jae
mov
in
cmp
subb
int
jmp
out
push
or
pop
add
push
push
pop
cmp
mov
out
scas
inc
ficoml
jl
mov
and
jno
xor
jbe
xor
and
je
sqrtps
lahf
push
sbb
hlt
mov
sub
fcompl
pop
mov
xor
lea
push
xchg
lds
jbe
cmp
mov
fs
pusha
pushl
mov
mov
sub
push
in
push
flds
push
push
test
les
jb
mov
in
dec
pop
mov
out
js
mov
mov
mov
and
popf
sbb
fxch
adc
xor
add
subb
in
stos
int
mov
inc
pop
push
xchg
clc
xchg
jno
test
out
jp
pop
je
insl
icebp
inc
or
push
insb
mov
sbbl
mov
adc
mov
mov
sub
and
call
shrb
into
jo
push
fstpl
or
jae
sbb
int3
iret
shrb
fs
std
lahf
stos
fwait
je
dec
dec
jge
icebp
xor
aam
xchg
dec
mov
hlt
pop
lock
lods
loope
adc
adc
push
xchg
in
lcall
dec
pop
cmc
stc
fs
jnp
scas
mov
or
or
sbbb
in
xchg
leave
sar
fnstenv
or
mov
jae
push
push
push
ja
rclb
rcll
fcompl
mov
sub
mov
xlat
lret
mov
mov
or
sub
cmp
insl
push
cltd
lock
bts
pushl
or
sahf
imul
push
das
neg
mov
mov
xchg
fwait
rcrl
ja
push
cwtl
jle
aam
sbb
mov
push
ja
add
imul
testb
test
outsl
mov
xor
int
mov
enter
fwait
adcb
lret
rcrl
sbb
lock
xchg
cmpsb
fdivp
inc
xlat
cmc
and
test
mov
cs
or
sbb
enter
cmp
add
jb
nop
cmc
dec
leave
jecxz
push
hlt
out
pushf
push
mov
or
movb
xor
iret
jne
pop
lcall
xor
ret
cmp
cli
pop
hlt
out
xchg
push
lea
xor
pop
push
insb
xchg
icebp
rcr
inc
xor
leave
popa
and
add
mov
in
dec
sbbb
mov
and
mov
gs
fidivrl
repnz
lods
xor
sahf
pusha
mov
and
push
adcb
negl
sub
push
in
js
pushf
and
mov
xor
mov
fstpt
ljmp
jbe
fcmovnbe
pop
xchg
push
adc
adc
fwait
aad
adc
outsl
je
repnz
mov
sub
inc
std
xor
jg
and
xchg
inc
popf
popa
call
outsl
jne
xchg
enter
js
fwait
jge,pt
xor
cltd
mov
xchg
inc
xchg
push
loop
mov
fsubs
xchg
jo
sti
and
ficoml
insb
sarl
jns
pop
jnp
mov
mov
mov
cmp
mov
fisttpll
jecxz
stos
and
push
mov
cmc
mov
pop
lods
leave
orb
andl
std
out
pop
cmp
rorb
pop
mov
nopl
sub
js
and
cli
pop
mov
fcmove
outsb
inc
xor
in
mov
pop
fistpl
mov
and
movsl
sbb
mov
fnsave
add
adc
pusha
mov
add
sbb
pop
divb
and
add
pop
cmp
pop
cltd
mov
sahf
mov
adc
xlat
test
lods
mov
cmpsb
int
jmpw
cs
sbb
rcrb
icebp
add
loop
repz
fldt
aas
loopne
lock
lods
xchg
repz
fs
mov
xchg
pop
adc
scas
lea
xor
inc
sahf
sub
ss
xchg
and
mov
sub
mov
shll
sarb
inc
jne
sub
and
pop
sbb
inc
pusha
fcoms
mov
sbb
push
int3
std
inc
sub
xchg
jmp
cmp
mov
loopne
add
jge
cmc
inc
movsl
sub
gs
lea
aad
jecxz
inc
adc
jge
std
mov
arpl
push
mov
push
sbb
insl
sub
mov
rclb
or
jecxz
jns
mov
fnstcw
lret
cmp
aas
nop
imul
cmp
push
dec
pop
std
push
in
in
xor
call
sbb
movsl
or
jg
dec
push
divl
aaa
pop
xor
or
notl
negb
divb
out
mov
mov
lahf
insb
test
push
ss
ds
push
test
aam
xor
push
jge,pn
movsl
nop
clc
inc
dec
roll
pop
xchg
mov
dec
xchg
xchg
adc
ds
flds
mov
fwait
push
fcoms
lock
outsb
push
ret
jl
inc
popa
push
or
jp
bound
imul
push
cmpsb
add
pop
adc
inc
pop
dec
testl
jl
popf
in
sbb
pop
orb
cld
call
aam
outsb
adc
mov
add
mov
add
or
inc
jne
mov
jae
sub
add
dec
add
jnp
mov
aas
test
cmp
inc
fcmovne
lret
jns
ds
xchg
fstpl
sub
adc
icebp
jnp
iret
shlb
xor
xor
sbb
mov
mov
jmp
out
aas
xchg
pop
lods
lods
add
testl
fwait
js
insb
fcoms
sbb
scas
mov
inc
out
push
movl
jle
lcall
icebp
pop
and
lret
minps
pop
cli
test
pop
repnz
sub
daa
shll
nop
ret
xor
xchg
andl
xchg
mov
adc
xorb
mov
ret
das
addr16
mov
dec
jns
jg
insl
xchg
ret
xchg
fisttpl
jle
mov
jb
and
pop
jle
inc
xchg
fcompl
xor
push
cmp
xchg
ljmp
cli
jnp
pop
leave
jl
shrl
iret
fwait
mov
scas
scas
pop
or
mov
insb
mov
cmp
inc
pop
dec
xchg
dec
and
cwtl
xchg
roll
adc
int
popf
and
xor
jno
inc
adc
add
pop
stos
imul
lret
ljmp
mov
xor
inc
jns
iret
and
psubusw
xor
testl
dec
call
mov
cmpsb
clc
inc
loope
test
pushf
int
cmp
xor
push
and
or
sub
add
mov
push
and
cmp
lea
insl
pop
mov
mov
in
pop
cmpsl
fsubrl
adc
add
mov
mov
xchg
inc
lahf
sbb
fs
out
lahf
mov
ljmp
jbe
or
popf
lds
outsl
mov
xchg
ret
xchg
xchg
xor
mov
testl
xchg
add
fwait
pop
jg
aad
into
lret
pop
lds
test
popf
push
mov
hlt
pop
xorl
jp
rclb
movsb
sub
push
sarl
shrl
mov
adc
data16
insl
rol
aas
loop
add
stos
push
aas
add
mov
pop
popf
or
rorb
fcompl
lds
cmp
pop
mov
jns
std
xchg
shll
xchg
jl
xchg
cld
jae
lret
gs
cli
mov
xorw
adc
cmpsb
rclb
mov
nop
inc
xor
test
push
push
ds
mov
nop
xlat
dec
xchg
test
arpl
out
test
mov
xchg
fsubl
ss
dec
mov
ret
dec
xchg
idivl
outsl
dec
adc
aaa
stos
cwtl
inc
test
iret
in
dec
jo
sub
out
stos
cmp
mov
sbbb
push
ja
notb
loop
xchg
pop
mov
sub
dec
pop
int3
mov
iret
cmp
insb
jo
pop
push
jmp
mov
movsl
ret
out
clc
jnp
insl
push
mov
lret
sbb
lds
cmp
stos
fcoml
stos
mov
bound
dec
dec
mov
sbb
fwait
xor
dec
inc
pop
rol
lea
add
testl
mov
jb
adc
push
add
inc
pushf
jg
lds
shlb
mov
mov
jp
inc
lret
cmp
jp
addr16
add
dec
add
testl
adc
test
inc
fwait
mov
cli
fmuls
std
jbe
mov
ret
shlb
aam
insb
cmp
xor
pusha
xor
stc
sti
popf
aaa
data16
mov
push
lret
xor
pop
ret
or
push
mov
jae
pop
cmp
sbb
jns
jb
out
mov
mov
fs
push
scas
rorb
cwtl
loopne
and
xchg
dec
pop
pop
out
popa
and
cwtl
push
push
lock
lods
or
test
daa
outsl
adc
xlat
cmpsl
push
pop
test
push
lods
cmp
insb
call
rorl
lcall
push
iret
cmpsb
lods
mov
sub
jae
jnp
jb
xor
push
dec
jecxz
outsb
add
dec
lret
lods
or
xchg
push
mov
js
cld
jge
pusha
ds
push
inc
jl
pop
fldenv
mov
iret
xchg
fistpl
popf
xchg
ljmp
das
pop
insb
or
into
addr16
outsb
mov
jl
sbb
adc
into
inc
jle
sarb
les
mov
xchg
in
add
mov
fbstp
arpl
inc
je
jecxz
cli
and
mov
mov
push
adc
and
inc
xchg
add
data16
idivb
xor
stos
mov
mov
sbb
ljmp
and
xchg
scas
sub
jmp
inc
push
mov
sub
jmp
inc
subl
das
fwait
xchg
or
clc
js
out
dec
cmp
or
sub
mov
lcall
and
mov
jb
or
out
cwtl
lock
xchg
pop
outsb
inc
les
cmc
in
dec
js
jae
cmp
stc
jne
adc
sbb
outsb
int
int3
nop
orb
rcll
in
add
fstps
adc
sbb
iret
lcall
push
mov
pop
ret
inc
push
xor
mov
xor
mov
mov
mov
test
outsl
imul
push
insw
jnp
sub
cmp
lea
mov
ret
leave
mov
xor
sahf
pop
cli
mov
dec
sub
cmp
jns
stos
xor
push
outsl
push
xor
sub
xor
cmpsb
in
ss
outsb
dec
outsl
fwait
cmp
lock
pop
mov
fldenv
xchg
mov
add
je
jle
mov
call
cmp
mov
arpl
and
push
dec
and
aad
xlat
pop
cmc
int
jge
inc
pop
movsl
hlt
mov
into
xlat
rcrb
add
pop
shll
lcall
pop
and
test
mov
pop
aam
test
and
fcoml
mov
stc
dec
push
adc
icebp
pop
pushf
xchg
stos
imul
cmp
pop
mov
je
stos
mov
inc
mov
or
jae
mov
into
pop
xchg
addr16
leave
sti
adc
cmpl
nop
cmpsl
add
push
cmp
mov
loopne,pn
jne
mov
sub
mov
jns
mov
fnstsw
repz
pushf
fsts
jp
xor
mov
call
sub
push
cmp
xor
bound
pusha
dec
sbb
lcall
push
int3
xor
ljmp
mov
mov
ret
aad
mov
pop
aad
add
lret
jle
xchg
mov
xchg
neg
lcall
xor
aaa
fbstp
inc
and
xchg
imul
jl
mov
xchg
int
xchg
inc
test
push
xchg
jae
fs
stc
xchg
push
loop
cld
lods
jle
data16
jns
loope
xchg
mov
mov
jg
xchg
pop
pop
lods
mov
dec
sbb
in
outsl
jp
mov
popa
xor
int
push
mov
movsl
mov
add
orb
pusha
fiaddl
push
mov
cmpsl
cltd
jbe,pn
adc
bnd
dec
inc
bound
mov
pop
popa
mulb
test
out
jp
fs
push
push
fs
int3
push
leave
mov
cmp
jns
out
xchg
inc
mov
sahf
xchg
adc
and
addr16
rorb
sbb
add
mov
out
sbbl
mov
jno
adc
push
mull
pusha
daa
add
mov
and
mov
pop
sub
int3
mov
add
mov
aam
andb
addr16
mov
mov
or
sahf
adc
movsb
mov
sarb
pop
es
or
dec
leave
loope
add
stos
xlat
in
sub
dec
dec
mov
xchg
enter
dec
das
push
mov
jmp
enter
cmp
jmp
xlat
cs
jmp
mov
cmp
sub
outsl
adc
sbb
sbb
js
jg
push
and
sti
jb
inc
xchg
xor
dec
scas
push
aas
jmp
push
ret
pop
jecxz
mov
xchg
faddp
and
xor
xchg
mov
ds
mov
fldpi
out
dec
mov
mov
sub
inc
pusha
sub
jge
cmp
jl
or
ja
push
mov
mov
adc
jmp
insl
or
sbb
inc
add
xor
pushf
test
arpl
mov
fcomps
push
ja
repz
mov
bound
push
hlt
and
mov
lods
mov
xor
sti
xchg
push
xlat
push
mov
fstpl
xchg
cmp
fwait
mov
out
je
clc
int3
int
pop
cmp
sahf
pop
jno
push
sub
rolb
insl
or
insb
jns
xor
sbb
stc
in
dec
mov
pop
or
mov
insb
js
rcll
imul
and
adc
xor
repz
xchg
jge
mov
out
inc
rcrb
push
mov
xchg
push
fnsave
push
and
shrl
sbb
stos
cltd
and
shrb
mov
mov
add
shlb
loop
pop
andl
add
dec
dec
jne
sbb
out
sbb
jb
mov
les
fs
lods
jmp
cmp
cld
fdivl
mov
sub
mov
int
es
stos
mov
daa
shlb
lret
cld
insb
dec
xor
cmp
cltd
sti
sbb
xchg
inc
mov
or
loope
cmp
imul
loopne
xor
scas
ret
xor
push
les
int3
dec
daa
xchg
sub
pop
adc
into
mov
xchg
add
xchg
pusha
jae
mov
push
or
push
sbb
imul
xchg
in
push
sbb
cmp
sbb
in
jnp
imul
shl
push
ljmp
xor
sahf
jbe
pop
cmp
cmp
outsb
popa
xchg
mov
out
adc
jb
pop
mov
sbb
scas
in
lock
mov
addl
jne
iret
push
jnp
sbb
lahf
lret
mov
nop
and
sbb
loop
xor
out
mov
jecxz
popf
lret
cs
and
pop
mov
scas
sbb
xchg
in
cmp
lock
mov
negb
pusha
mov
lods
out
adc
push
sbb
jg
or
repz
sbb
xchg
gs
sub
xor
xor
je
cmc
push
test
sbb
in
lret
mov
lods
jl
scas
jo
xchg
mov
lods
ja
push
gs
push
lret
xor
test
mov
sbb
mov
mov
xor
adc
shrb
jo
xchg
jecxz
je
sahf
xor
jle
imul
bndstx
aas
lock
and
scas
pop
inc
lahf
push
xchg
sub
xor
mov
stos
and
std
and
pop
mov
inc
xor
pop
and
out
push
mov
pop
xor
rcll
cmpsb
loop
fnstcw
rep
sub
push
outsb
pop
mov
je
mov
adc
insl
movsl
cld
sub
adc
loop
dec
imul
testl
shlb
xor
roll
aad
lds
mov
movsl
jno
inc
test
mov
inc
xchg
xor
roll
aad
lds
mov
movsl
jno
inc
test
mov
inc
xchg
xor
roll
aad
les
xchg
inc
test
movsl
gs
test
xor
roll
jg
lds
jmp
jge
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
pushf
and
scas
add
sbb
orb
insb
sarb
xor
int3
jo
pusha
in
push
cld
cmp
sbb
sub
cmp
mov
rorb
add
jo
pusha
in
push
cld
inc
or
aas
addl
loope
movsb
xor
roll
imul
add
insl
push
rcl
movsl
pop
std
clc
or
js
les
test
dec
inc
test
jo
in
pop
add
les
in
lock
sub
shl
xchg
fdivl
xchg
sub
inc
js
loopne
mov
dec
sub
sbb
and
or
js
jne
add
cmp
imul
cltd
pop
rclb
pusha
mov
sbb
out
fimull
jae
jl
dec
inc
inc
lea
cmp
in
test
mov
jge
jno
arpl
push
jno
test
pop
cld
add
shrl
xchg
sbb
shll
inc
xor
int3
jo
pusha
in
push
cld
inc
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
popa
lds
aad
int3
adc
adc
leave
jns
sub
inc
hlt
dec
mov
test
test
stc
inc
leave
jne
add
sbb
sub
cmp
fldcw
ret
cmp
dec
sahf
xor
add
pushf
push
sbbb
in
push
cld
inc
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
int3
jo
pusha
in
push
cld
inc
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
ret
fimuls
jnp
sub
in
cs
lock
push
push
and
pop
sbb
mov
inc
std
pop
jb
adc
mov
jns
pop
sub
pop
popa
add
inc
add
jnp
or
push
out
jmp
popf
mov
jle
movsl
lods
cmpsb
inc
ljmp
aaa
mov
stos
nop
and
sub
mov
mov
xor
or
and
push
or
add
imul
or
sbb
imul
fisubs
mov
popa
dec
cmovae
movsl
jne
pop
push
fiaddl
add
lret
inc
pop
cld
stos
addr16
call
and
dec
inc
outsl
xor
movsb
in
loopne
xor
xchg
jg
or
fucomi
dec
pop
outsb
pop
xchg
jae
in
pop
in
sbb
or
out
sbb
pusha
lcall
lcall
test
shll
add
jle
shll
mov
mov
cmp
adc
xor
or
pop
add
or
rcl
jmp
cltd
xchg
inc
rol
push
dec
xchg
cmp
inc
hlt
cmpsb
mov
add
sbb
adc
xchg
mov
xchg
ds
fcmovb
lcall
jg
xor
dec
adc
dec
mov
mov
inc
andb
bound
fidivrs
dec
lods
or
mov
jge
ja
les
out
pop
adc
mov
xchg
pusha
mov
ret
sub
jnp
push
gs
je
push
and
or
test
adc
sub
mov
cltd
enter
pop
fldlg2
das
bound
loop
fstpt
out
mov
scas
pop
out
repz
movsl
scas
cld
jge
and
add
sub
leave
or
adc
les
jnp
push
push
out
sti
fldenv
fs
negl
mov
roll
sub
inc
inc
mov
jl
frstor
xor
cmc
hlt
mull
add
pop
sub
pop
mov
xor
arpl
add
pop
xchg
or
test
jle
and
push
scas
mov
lods
fdivr
rclb
lods
jb
subb
pop
jg
sbb
cmp
rol
fistpll
dec
mov
popl
jp
hlt
mov
mov
mov
lret
fld
mov
jecxz
imul
or
roll
or
adc
jge
addr16
adc
sbb
test
xchg
outsl
or
into
push
iret
inc
mov
xor
aam
mov
data16
call
popa
adc
popf
mov
xchg
lods
and
mov
cmc
nop
mov
das
adc
popl
xor
mov
sub
cli
inc
arpl
pushf
loopne
push
and
sarl
aam
lahf
lods
rcr
cmp
xor
sarb
fucomip
scas
add
insb
and
lods
pop
lahf
fcom
data16
subl
hlt
das
popa
aam
mov
fists
lea
enter
jae
mov
add
fwait
mov
jp
cmp
fcmovne
sbb
add
int
mov
out
cld
sbb
and
lret
push
fldenv
or
insb
pop
xchg
and
icebp
add
shrb
push
xchg
scas
sub
push
sbb
shll
jmp
arpl
aas
adc
adc
or
outsb
jno
add
xchg
or
mov
lea
inc
decb
adc
es
rcll
das
sub
stos
mov
fsubp
movb
xor
sub
mov
je
or
xchg
adc
sbb
lret
lcall
xchg
imul
popl
pop
sar
xchg
pop
rcll
jg
xor
std
lea
xor
sub
js
sbb
mov
ja
mov
out
cld
pop
xchg
fs
or
mov
das
jmp
sbb
dec
cmc
and
scas
dec
or
jge
mov
inc
sub
adc
inc
cwtl
lea
ja
inc
pop
aas
sbb
nop
ss
sub
fldz
cmc
xchg
cmpsl
cmpsb
mov
mov
ret
lahf
cmpsl
insl
fmul
jno
ja
outsb
dec
jno
es
inc
orl
sbb
push
xchg
enter
xchg
arpl
jge
pop
sub
sub
add
cmp
aas
and
ret
mov
je
dec
jne
into
in
add
rorl
add
push
mov
ljmp
mov
fisubrl
cmp
lcall
add
mov
sub
xchg
and
ret
rclb
icebp
addr16
mov
jae
out
fs
sbb
pop
jmp
and
inc
cld
inc
adc
ss
inc
mov
push
sub
mov
repz
or
cmp
jnp
jle
cmpsb
popf
lds
sub
call
int
ret
popa
pushf
jmp
cmp
sub
or
mov
xchg
add
hlt
dec
test
xor
test
pop
je
xchg
inc
stos
fs
xchg
orb
ss
movsl
cld
pop
xchg
stos
or
nop
inc
mov
mov
aaa
repnz
push
and
insl
in
inc
pop
inc
jae
jbe
out
jbe
jg
sub
push
flds
xchg
mov
test
into
xor
mov
push
dec
push
pop
push
dec
and
dec
cmpsb
les
mov
pushf
adc
pushf
xor
cmp
sub
push
repz
jmp
lret
push
jle
xor
stos
aad
mov
je
xchg
xchg
loopne
clc
inc
jbe
cwtl
cli
jne
xchg
repnz
mov
push
arpl
fdivs
mov
repz
aad
sub
adc
out
or
add
fwait
mov
int3
clc
push
cmpsl
mov
fistpl
pextrw
imul
adc
jbe
push
or
add
lock
sub
xchg
shll
mov
adc
jbe
mov
pop
cmpsl
sbb
outsb
push
mov
mull
mov
push
lcall
mov
mov
stc
les
sub
imul
shlb
push
fisttpl
xchg
je
lcall
mov
and
jne
or
in
mov
aad
lods
cs
xchg
cld
aad
push
in
sub
inc
stc
hlt
mov
jp
xchg
stc
and
testl
mov
scas
popa
jne
sti
fmuls
sub
pushf
cmpsb
and
xchg
sub
mov
dec
jb
xchg
movsb
jle
sub
lock
in
movsl
mov
dec
xchg
insl
jle
mov
cmp
cs
add
jp
test
ror
lret
mov
inc
cmpsl
fwait
data16
adc
cmpsl
jl
popf
int
pop
dec
xchg
data16
add
pop
inc
inc
inc
add
lock
iret
mov
jecxz
lods
cmpsb
or
movsl
fdivl
jg
or
jne
mov
pusha
mov
pusha
loop
pop
fisubs
sbb
dec
add
daa
xor
jl
sub
pop
jl
or
sbb
add
js
je
outsb
lcall
xor
xchg
lret
cmp
inc
mov
or
sbb
inc
lret
imul
hlt
mov
xchg
lea
fdiv
mov
mov
lods
push
xor
mov
cmp
xor
and
mov
ficompl
aas
pushf
mov
jl
push
push
scas
push
popa
lret
or
into
stos
std
lods
mov
mov
scas
fbstp
push
adc
pop
popf
imul
lret
xchg
sub
sahf
lahf
test
cmp
cmp
fmuls
cmp
sbb
pop
add
ljmp
mov
push
adc
cs
or
std
subl
in
in
and
aad
mov
mov
rcll
pop
mov
das
push
mov
lods
mov
inc
xchg
lcall
sub
inc
and
jg
xchg
lods
sahf
mov
ja
and
shlb
ljmp
out
dec
cltd
loope
pop
pop
mov
dec
cmpl
or
shl
xor
mov
lret
xchg
jbe
mov
push
popf
les
jg
mov
dec
mov
int3
xor
in
pop
sbb
lahf
xchg
out
xchg
sahf
add
in
aaa
push
or
jmp
rolb
xchg
out
mov
divl
and
inc
mov
mov
xchg
mov
outsb
sub
jp
movsb
pushf
inc
int
ss
mov
addr16
bound
pop
sbb
xchg
xchg
jb
outsl
add
lods
mov
jl
out
mov
and
aas
or
int3
push
mov
fwait
xlat
mov
push
jecxz
outsl
adc
jbe
fst
test
or
add
mov
inc
xor
pop
xchg
mov
bound
inc
aam
sti
mov
fnstenv
stos
mov
cmpb
nop
cli
loop
loop
dec
push
xor
adc
dec
shl
mov
shr
insb
and
jle
arpl
xor
mov
and
enter
push
aaa
jnp
mov
movsl
sbb
stc
dec
xchg
sbb
push
dec
notl
imul
faddl
add
movsl
sbb
pop
adc
mov
rcrl
adc
leave
cmp
lret
dec
clc
aas
pop
pop
and
addr16
dec
popf
xchg
jge
jle
shlb
xchg
mov
fldt
xor
stos
mov
push
aam
adc
fwait
out
sbb
imul
gs
dec
push
lret
jmp
in
xchg
repnz
mov
xchg
mov
sub
sbb
adc
cmpsl
imul
loop
stos
dec
pop
xchg
jbe
js
addr16
and
cmp
jge
ss
sub
and
ss
mov
fcmovbe
and
push
aas
xchg
call
pop
pop
xchg
mov
out
push
lahf
cli
adc
dec
loopne
out
imulb
lret
adc
or
pop
push
inc
orl
mov
or
std
pop
push
rcr
mov
add
icebp
push
into
test
adc
lcall
cli
imul
inc
mov
inc
mov
xor
cmp
sub
and
mov
cli
push
dec
mov
cltd
and
xchg
dec
lahf
inc
jno
fldcw
fistl
pusha
jg
lret
xor
lret
shr
dec
ficomps
into
das
mov
push
fld1
add
and
out
push
cs
test
and
aas
add
add
aaa
js
push
jp
inc
fs
cmp
addr16
xchg
scas
sbb
mov
sbb
es
adc
or
shll
out
pop
xchg
dec
add
cs
push
fidivrs
stos
dec
fsubl
into
jge
and
add
in
dec
add
ret
mov
add
roll
in
xchg
mov
jmp
jl
sub
subl
ja
sbb
cmp
push
out
outsb
bswap
aas
bound
sbb
mov
adc
jge
pop
add
or
sahf
sbb
dec
jmp
frstor
out
cmp
sub
or
dec
lahf
adc
int
push
decl
stc
mov
fs
sahf
loop
mov
mov
mov
xchg
cmpsl
int
outsb
lret
jecxz
jne
mov
jl
jnp
stos
mov
dec
xor
mov
out
scas
inc
leave
cltd
dec
ret
pop
xchg
push
xor
dec
lods
mov
and
and
call
mov
push
xchg
sahf
enter
xor
push
add
sub
cmp
bnd
mul
cltd
mov
lods
fsub
xchg
dec
add
sti
dec
dec
test
inc
enter
mov
xor
setbe
test
or
rcrb
push
pop
sub
pop
test
stc
dec
sahf
ss
adc
and
mov
xchg
dec
aad
shl
push
sbb
sub
xor
jl
stos
jb
dec
cmc
mov
fidivrl
adc
xchg
pop
addr16
daa
pop
inc
xlat
inc
in
mov
loop
adc
aad
scas
push
ljmp
and
jle
popa
push
fimuls
mov
iret
pusha
repz
sti
jnp
int3
inc
popf
xor
fistl
and
push
scas
mov
pushf
and
jmp
and
cmp
stos
sbb
and
stc
adc
int
in
sbb
insl
inc
addr16
push
fldenv
add
push
arpl
pop
inc
jae
je
ljmp
sbb
aas
orl
xchg
dec
fstpt
nop
sti
scas
push
ret
xchg
mov
leave
sbb
add
enter
js
sarl
dec
fstps
jg
mov
enter
in
test
pop
adc
xor
cmp
xlat
lods
jns
aaa
cmp
scas
out
sti
fsubrs
or
nop
aam
aaa
push
pop
fwait
loopne
popf
add
jnp
pop
push
and
bound
jl
mov
addr16
sbb
sti
push
andb
inc
mov
jo
rolb
pop
test
xor
rcrb
pop
enter
mov
push
in
dec
clc
xchg
sarb
jae
cld
jbe
mov
mov
and
mov
fwait
cld
addr16
push
and
mov
sbb
jmp
insl
sbbb
and
aaa
sbb
pop
cmp
push
mov
sti
in
nop
adc
sarb
aaa
in
lock
mov
ss
or
pop
arpl
nop
das
jns
jmp
les
sub
jno
repz
mov
mov
xchg
fldl
add
je
push
mov
or
xor
js
fadds
pop
xor
push
movsb
mov
xor
rcll
mov
outsb
ljmp
jo
sbb
hlt
xchg
insb
scas
pop
add
repnz
out
jmp
inc
sub
mov
jg
mov
shrb
fcomps
pop
jmp
int
movzwl
sti
mov
stos
ljmp
and
out
inc
dec
aaa
pop
sbb
subl
lock
pop
mov
shll
rorl
inc
nop
and
andb
mov
outsl
nop
xor
fsubrs
les
mov
inc
xchg
outsb
loop
xor
mov
or
lock
jl
pop
inc
fsub
pusha
mov
enter
inc
out
stc
jo
aaa
ret
rcrb
xor
jae
stos
bound
sub
or
mov
clc
pop
lahf
inc
insb
jbe
incl
jae
mov
and
daa
xlat
es
fwait
inc
mov
cmp
fs
and
lcall
xchg
ficoml
mov
dec
xchg
inc
pushf
jns
orl
or
int
js
shlb
xor
cmp
lret
xchg
mov
hlt
adc
sbb
cmp
xchg
xor
fisubs
lock
xor
mov
xor
lea
push
pop
xchg
pop
mov
jge
sbb
iret
and
ss
cmp
push
in
not
js
je
sub
ja
xchg
pop
pop
movsb
lcall
adc
cs
sbb
mov
cmp
mov
stos
hlt
int3
test
je
sbb
xchg
pusha
bound
cs
mov
mov
cmpsb
pop
dec
pop
fdivr
cmp
push
and
sub
and
xchg
cld
rclb
mov
out
idivl
iret
mov
adc
xchg
mov
inc
test
mov
ja
and
test
mov
stos
sub
shl
mov
jns
outsb
and
cwtl
add
push
in
fsub
jne
inc
inc
lret
std
notl
jne
into
mov
cmpsl
adc
xlat
pop
xchg
mov
inc
out
jne
fadds
cmc
bound
lods
jl
or
insb
sbbl
jbe
mov
and
fisttpll
imul
enter
and
dec
movsl
xor
adc
jnp
and
stos
jo
unpcklps
xor
and
cmp
clc
dec
or
fs
cs
fiadds
sub
test
movsl
jbe
lea
jae
pop
jb
push
sbb
out
mov
popf
push
dec
test
arpl
pop
lret
pop
xchg
data16
test
sub
pop
push
testb
push
pushf
jo
les
scas
and
sbb
lahf
pop
in
sub
mov
inc
enter
enter
stos
sbb
roll
pushf
adc
push
add
xlat
test
cwtl
or
dec
push
pusha
or
and
pop
or
dec
addb
xchg
imul
test
pop
in
inc
xchg
jo
pop
mov
push
fwait
add
mov
gs
sbb
fmull
inc
aaa
stc
cmp
or
cmp
cwtl
dec
jno
and
jns
arpl
out
sub
sbb
push
mov
ss
dec
inc
mov
adc
jbe
jp
push
test
dec
enter
pop
stos
fcomi
insb
div
mov
frstor
aam
mov
jle
dec
jle
xchg
rcl
xchg
fldl
push
aas
pop
daa
jno
sbb
inc
xchg
mov
xchg
inc
stc
lea
jp
sbb
insb
jo
inc
popa
and
lods
or
bnd
and
sbb
iret
addr16
pop
stc
and
mov
jbe
icebp
inc
jp
sub
lds
sbb
pop
pop
cmc
out
hlt
jle
icebp
outsl
mov
and
fisttpl
loope
and
adc
mov
idivb
cmp
dec
sub
and
sbb
pop
and
sub
imul
push
jbe
mov
fisttps
mov
out
xchg
xchg
mov
in
xor
xchg
movsb
lea
scas
rcrl
test
or
call
inc
push
add
aam
sub
into
mov
or
cmp
lcall
fsts
push
mov
lea
jae
cmpsl
mov
mov
and
and
push
int
pop
or
push
xchg
test
ret
movsb
imul
and
adc
xchg
pushf
dec
movsl
aad
scas
data16
sbb
sahf
xor
es
add
nop
xchg
inc
mov
adc
sub
das
push
jns
adc
mov
sbb
jne
fwait
sub
xchg
ds
pop
push
xchg
inc
push
fldcw
sti
outsb
jg
insl
mov
mov
aam
lret
cmp
sbb
push
or
xchg
xchg
mov
lock
push
test
dec
sbb
dec
shl
add
shl
push
xor
inc
mov
push
lods
or
test
ret
xor
cmpsb
cmp
repnz
adcb
mov
mov
cmp
mov
sub
mov
in
dec
mov
mov
std
outsl
or
repnz
push
imul
xor
into
jmp
cs
sarb
pop
push
and
push
mov
sbbl
stc
lret
aas
inc
std
dec
push
mov
pop
pop
fisttpll
pop
fisubl
out
pop
push
mov
imul
cli
mov
int
iret
sub
pcmpeqd
enter
sbb
dec
lret
sbb
pop
pop
fisubs
cld
sbb
jb
aaa
les
cmpsl
fbld
in
clc
inc
or
cld
inc
or
inc
fcompl
inc
clc
nop
mov
lods
push
pop
jl
inc
inc
popf
mov
test
repnz
and
les
lds
mov
push
adc
xorl
mov
fldenv
mov
ja
sub
outsl
adc
icebp
jne
push
sub
cwtl
inc
or
loopne
popa
add
and
enter
jle
int
mov
movsl
add
push
mov
xor
pusha
jp
gs
call
icebp
push
jmp
aaa
sub
jle
insl
mov
lcall
int3
cli
pavgb
outsb
lds
cmp
in
jg
iret
mov
cmpsl
in
gs
sbb
xchg
les
pop
mov
xchg
arpl
dec
movsl
ret
cli
adc
push
or
addr16
inc
push
aas
push
pop
lcall
mov
sbb
or
add
nop
inc
pusha
jle
push
in
mov
sbb
sbb
xor
ds
mov
arpl
in
fimull
jle
inc
aam
je
dec
popa
mov
test
in
adc
imul
pop
or
loopne
scas
or
add
jb
hlt
sub
pop
xor
outsl
jne
jge
push
mov
popl
inc
cli
cmp
sbb
cmp
sbb
mov
pop
dec
sahf
rorl
imul
jnp
inc
mov
dec
inc
icebp
ret
test
or
push
dec
fwait
bound
loope
sbbb
jecxz
out
dec
in
mov
push
and
jo
pusha
in
push
cld
inc
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
int3
jo
pusha
in
push
cld
inc
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
sub
mov
pusha
in
push
jl
or
sbb
sub
cmp
dec
lock
loopne
sarb
xor
int3
jo
pusha
in
push
cld
inc
or
sbb
xchg
sub
sbb
or
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
rcrb
sahf
sbb
sub
cmp
dec
popa
pop
jno
push
jns
mov
mov
lock
and
xor
add
adc
imul
mov
mov
lock
sar
adc
cmp
jbe
inc
jle
es
and
test
ror
cmc
lcall
aad
mov
popa
pop
inc
jmp
dec
xchg
or
add
jge
dec
insb
pop
mov
xor
aad
movl
jbe
gs
push
call
lods
pop
bound
cmp
pop
and
xor
push
mov
dec
lahf
movsl
dec
imul
mov
ss
lock
enter
fcompl
iret
sbb
xchg
mov
pop
nop
loop
jns
fldenv
dec
and
pop
popf
ss
movsb
xchg
or
or
fbld
mov
pop
pusha
xchg
sub
popa
stc
jns
out
ds
cwtl
ss
fstpt
dec
icebp
pop
mulb
xchg
xor
jne
out
or
or
imul
mov
cmpb
jmp
and
xor
add
adc
inc
jo
inc
jns
in
cld
leave
int3
ror
mov
movsl
stc
movsb
or
sub
pop
pusha
dec
adc
aaa
sbb
adc
out
clc
fadd
enter
mov
stos
decb
jl
sub
inc
dec
add
sbb
jecxz
in
call
jmp
and
xor
add
adc
pop
jo
inc
jns
mov
mov
lock
and
xor
add
adc
pop
jo
inc
jns
mov
lret
adc
cmp
sub
pop
lds
mov
or
inc
arpl
sub
es
insl
pop
jae
sbb
inc
or
cmp
outsl
aam
out
or
fstpt
lock
inc
xchg
arpl
sub
int
mov
cld
mov
daa
pop
movsb
lea
cmp
mov
push
fldl
in
pop
popa
cmc
mov
inc
mul
inc
adc
inc
dec
mov
mov
mulb
pushf
jl
jbe
insb
mov
mov
arpl
sub
lret
pop
out
mov
bound
ljmp
pop
pushf
push
es
pushf
jns
pop
cs
mov
and
cmp
jb
push
mov
add
std
clc
lock
iret
movsb
adc
xchg
insb
push
xchg
sub
lock
rorl
add
jl
inc
movsl
adc
mov
mov
xchg
subl
mov
dec
loope
pop
hlt
pop
sti
rolb
sti
cmp
push
test
xchg
lahf
das
popf
inc
sub
push
dec
iret
mov
jb
push
rcrl
test
inc
and
mov
sti
lods
arpl
dec
xchg
pop
pop
cli
mov
jl
xor
xlat
subb
mov
aas
mov
ret
adc
popa
imul
addr16
pusha
std
int
imul
mov
xor
inc
mov
xchg
mov
fldcw
clc
andb
push
je
xchg
sbb
push
movsb
mov
jmp
mov
jb
add
inc
cmpsb
movsl
call
into
mov
or
test
cmp
sub
mov
pusha
icebp
inc
adc
xlat
sbb
dec
jb
aas
int3
jmp
out
movsb
loopne
and
pop
loop
shrl
mov
jmp
mov
pop
or
popa
ljmp
push
mov
lock
cmp
sti
stos
jns
and
pop
adc
inc
or
pop
xchg
mov
xor
mov
or
js
fistpll
ja
adc
aad
aaa
mov
daa
add
add
mov
hlt
adc
lsl
push
ds
jg
inc
arpl
xor
sub
mov
test
xor
sbb
xor
inc
fwait
leave
shlb
fistl
in
mov
out
jmp
xchg
cmpsb
insb
pop
bound
js
das
rorl
mov
dec
mov
push
jae
cli
clc
lods
out
data16
lret
dec
in
cwtl
cli
push
nop
jo
andb
shr
jp
cltd
xor
and
push
mov
mov
cltd
mov
mov
push
fsubrs
xchg
gs
pusha
cmp
in
test
lds
dec
ljmp
dec
add
adc
outsb
push
stos
pop
pop
sbb
jp
or
cmpsl
js
aaa
mov
lret
jae
shll
sub
add
fsubr
cmp
fdivl
aad
mov
out
clc
xchg
mov
push
add
mov
cmp
adc
xor
mov
insl
jo
ds
out
rcrl
dec
jb
out
xor
out
jecxz
adc
dec
mov
jnp
add
inc
out
cmpsl
test
insl
xchg
add
jnp
cmp
sbb
loop
jp
sub
lret
or
jne
pop
jb
leave
push
aaa
ja
cmpsl
xor
push
push
fsts
iret
leave
and
mov
xchg
hlt
add
pop
push
add
sub
popf
ds
lods
stos
dec
lahf
or
dec
jns
sbb
lret
jl
popa
or
pop
mov
add
pop
icebp
mov
push
sub
inc
xor
imul
outsl
outsb
into
xchg
lods
xchg
ror
mov
adc
enter
jne
adcl
int
mov
stos
add
xchg
insl
mov
adcl
cltd
adc
mov
test
inc
mov
xorb
and
inc
loop
arpl
push
dec
insb
outsb
into
lods
cli
ret
cltd
cmp
jo
aaa
or
inc
mov
cld
iret
mov
mov
mov
add
fs
cwtl
xor
mov
fnstcw
mov
mov
shlb
fldcw
das
jg
std
push
mov
add
ja
jae
out
pop
clc
mov
mov
cmp
adc
stc
and
jle
fwait
scas
imull
cld
push
inc
add
testl
lock
and
roll
and
xchg
mov
sub
aam
add
add
movsl
pop
push
xchg
pop
adc
out
sbb
jnp
mov
mov
cmp
shrl
repz
daa
popa
cmp
or
xchg
fisubs
aas
gs
addb
inc
mov
dec
movb
mov
pusha
jno
pop
adc
cltd
aaa
mov
push
mov
cmpsb
icebp
cmp
loopne
pushf
loopne
sub
notl
mov
lds
jbe
adc
pop
cmp
add
iret
fwait
inc
repnz
insl
loop
inc
sbb
iret
call
nop
in
push
outsb
cmp
je
jbe
push
sbb
mov
sbb
xor
clc
push
stc
lods
add
lret
mov
test
pop
lea
lods
xchg
lcall
xor
add
in
lods
lods
jne
adc
movsb
sub
testl
je
adc
push
inc
cmp
mov
and
pop
shl
in
jl
leave
xor
xor
cmpsb
push
adc
and
pop
pop
arpl
inc
sahf
dec
loope
push
mov
inc
mov
bound
outsb
enter
jmp
lods
leave
movsl
mov
pop
cmpl
dec
test
mov
sar
pop
ss
push
arpl
adc
jb
mov
sub
enter
and
int
ljmp
push
mov
aaa
mov
sahf
cmp
fisubrs
push
mov
push
imul
jecxz
add
fistpl
push
push
dec
inc
sbb
mov
outsb
ds
int
sbb
hlt
stc
cmp
rolb
repnz
xor
adc
mov
repnz
mov
cmc
add
pushf
repz
shll
incb
pop
das
leave
mov
push
icebp
jae
leave
dec
les
sahf
and
fimull
lock
jo
data16
loopne
or
dec
lret
dec
push
add
sahf
xchg
sub
push
shrl
jmp
mov
popa
dec
cmp
scas
jbe
out
bound
mov
mov
outsb
xor
sbbb
adc
cmp
sub
push
add
mov
mov
loopne
xor
xchg
inc
push
loope
xchg
jmp
adc
lods
pop
adc
adcl
int3
in
xchg
out
mov
lods
adc
xchg
lods
jbe
jae
sub
and
fimuls
adc
inc
cltd
dec
pop
sub
loopne
pop
inc
adc
mov
test
enter
sbb
xchg
jno
or
mov
es
add
cmpsb
call
add
scas
mov
jg
mov
push
in
addr16
aas
jne
aaa
add
inc
mov
pop
in
mov
neg
jle
cmp
mov
push
sti
pop
push
sbb
lcall
dec
das
cltd
cmp
inc
adc
dec
lahf
stos
aad
adc
xchg
test
aam
mov
fidivl
imul
mov
and
pop
pop
or
jno
pushf
shrl
les
push
cmp
ss
inc
arpl
xchg
inc
xor
dec
dec
xchg
sbb
imul
shll
add
outsb
inc
mov
imul
mov
imul
divl
repz
dec
or
add
sbb
filds
xor
dec
faddl
sub
aas
ja
in
pop
cmp
mov
jnp
orl
lods
sub
xchg
adc
add
testl
push
hlt
xchg
mov
jbe
mov
dec
mov
push
inc
imul
push
and
xchg
sub
mov
ljmp
lahf
fistl
das
pop
pop
cmc
mov
jnp
lcall
push
adc
push
xor
mov
mov
ljmp
pop
lcall
movb
popl
fsubrs
push
lods
jg
pop
gs
add
or
add
pop
pusha
icebp
and
lcall
inc
cs
cmpsl
or
sbbl
out
aam
and
mov
mov
xchg
inc
sbb
cmc
xchg
push
mov
mov
ret
sbb
pop
imul
jg
pop
pop
fstl
cs
add
add
dec
jmp
mov
add
mov
pop
push
leave
push
loopne
mov
inc
cwtl
mov
mov
pop
push
pop
or
add
xchg
aad
fnstenv
inc
iret
dec
arpl
jb
sbb
call
addl
pop
cltd
add
pop
sub
je
stos
or
adc
test
sub
lea
clc
adc
stos
bound
imul
cmc
rolb
lahf
pop
popf
xchg
push
adc
loop
inc
subl
cmpsb
mov
add
cmp
test
std
pushf
les
mov
in
push
or
push
cmpsl
pusha
or
rcrl
add
ljmp
out
cmc
pop
lahf
loope
push
out
stos
int3
add
iret
test
adc
add
ror
in
loope
push
arpl
dec
mov
clc
and
out
push
sub
stc
ja
lcall
sbb
mov
mov
sub
repz
scas
data16
scas
jbe
jecxz
fldenv
ret
jo
popa
xchg
xchg
int
push
sub
pusha
loop
cmp
out
out
dec
int3
mov
xor
stos
sub
jg
push
cs
adc
push
adc
push
mov
scas
push
sbb
addb
outsl
xchg
inc
dec
addr16
std
stos
push
pop
cmp
cmc
push
js
hlt
adc
fidivl
xor
in
fcoml
cld
movsb
add
nop
xor
sub
mov
adc
mov
pop
push
ss
sbb
gs
data16
sbb
loopne
lcall
cs
cltd
mov
mov
dec
sub
xor
push
push
sub
sub
call
je
xchg
loop
out
dec
dec
dec
ror
xchg
inc
orb
ljmp
inc
repnz
dec
enter
and
sub
sub
aas
xchg
aam
mov
leave
rclb
fucomi
das
add
xchg
mov
pop
sbb
jne
inc
popf
mov
je
ds
pop
or
shll
fcoms
xchg
testl
scas
mov
and
and
repz
in
adc
aaa
enter
inc
add
dec
or
adc
bound
jle
into
mov
mov
inc
fs
mov
leave
pop
push
sbbb
aaa
das
dec
adc
jecxz
xor
jns
fisttpl
and
or
aam
and
aad
pop
outsl
mov
call
cmp
gs
or
aad
xchg
enter
dec
pop
popa
es
setns
push
insl
or
pusha
out
rol
lcall
jbe
jle
lea
das
or
jge
dec
ss
popf
and
adc
push
daa
mov
insb
cmp
mov
mov
sbb
mov
pop
je
xor
mov
aad
pop
mov
mov
cltd
push
add
into
daa
or
lds
push
add
iret
or
mov
outsb
fistps
push
leave
test
xlat
mov
fistpll
insb
adcl
xlat
std
int3
or
dec
popa
in
mov
push
push
cmp
and
xor
sub
ds
out
ret
pop
scas
out
std
stc
flds
aaa
int
into
jno
dec
in
fdivl
mov
ss
out
lock
xchg
clc
add
inc
out
push
repnz
push
jae,pn
aam
sbb
and
ret
jae,pt
mov
jae
or
ss
shrl
les
pop
cltd
fbld
adc
xor
push
loopne
cmp
popl
mov
rorb
adc
movsb
loopne
jne
shlb
or
mov
mov
dec
lcall
inc
xchg
mov
es
lds
xor
lret
xor
mov
gs
icebp
dec
adc
lcall
adcl
fists
das
pop
jle
and
test
out
pusha
pop
xchg
xchg
je
mov
and
mov
sbb
insl
cmp
or
stos
or
or
stc
mov
hlt
adc
adc
xchg
int
or
std
adcl
pop
xor
jne
jb
jl
stc
shrl
aad
outsb
fisubrs
push
fisttps
sbb
clc
nop
mov
call
mov
mov
adc
jge
ja
pop
loopne
xor
outsb
cmpb
je
fcoms
mov
movsb
xchg
and
xor
mov
call
out
fnstsw
pop
imul
data16
popf
xor
xor
and
mov
jns
loop
inc
sbb
push
lret
adc
std
cmp
std
mov
push
aas
ret
sub
data16
filds
mov
sub
shlb
andl
sub
push
das
and
data16
jbe
mov
jbe
loopne
sub
xchg
fisttps
popa
dec
jno
stos
lods
jbe
mov
push
mov
insb
jmp
mov
jp
jg
mov
jmp
ljmp
pop
cmc
ss
jp
lods
jo
cmp
aaa
xor
scas
sbbb
aas
test
add
cmp
outsl
sub
or
adc
leave
push
pop
daa
cmp
popa
rorb
lds
push
push
je
lea
hlt
cltd
je
xchg
imul
push
mov
mov
adc
insl
mov
mov
pop
jns
cltd
xor
cs
xchg
out
jne
lods
xlat
in
fldenv
test
jle
jae
cld
mov
push
cmp
mov
push
cmp
lahf
shrb
mov
hlt
loop
sarb
jl
mov
xor
inc
sti
adc
mov
inc
rcll
loopne
rcrl
mov
bound
std
xor
cs
xchg
loopne
nop
lea
stos
dec
xchg
lahf
cmp
pop
push
lret
sub
mov
cld
test
ljmp
xchg
in
sbb
and
sbbl
cs
es
adc
xor
in
test
pop
mov
xor
push
pop
adc
xchg
sub
jae
arpl
and
sub
inc
push
fisubrs
xor
xor
pop
pop
addr16
add
mov
fcomp
ror
mov
inc
mov
adc
les
lds
xor
lock
out
lret
mov
in
push
insb
addr16
and
push
mov
cltd
and
pop
xchg
ja
sbb
movsl
dec
ret
add
cltd
ljmp
add
leave
cmc
test
fsubl
xchg
pop
movsb
jmp
in
sbb
sub
test
xchg
aam
sbb
sbb
inc
push
lahf
ds
pop
sbb
aad
ret
mov
lock
push
sti
fsubs
lahf
jae
pop
jp
les
pmaddwd
flds
add
mov
mov
rorb
push
int
xchg
inc
and
movb
fsubs
popa
faddl
cld
dec
insl
rcll
pusha
and
sbb
pop
lahf
fcoms
lea
test
sub
sti
sahf
mov
repz
nop
mov
cmc
cltd
sarb
in
inc
ror
sub
sbb
mov
mov
idivb
loopne
int3
jg
sti
sti
cmc
pop
fwait
jle
and
jnp
push
mov
loop
inc
inc
out
xlat
daa
fldt
push
xchg
mov
nop
mov
inc
mov
mov
ljmp
xchg
and
push
dec
and
stos
xor
enter
ss
pop
pushf
add
sub
push
xchg
jecxz
sub
fsts
lcall
mov
pop
pop
adc
shlb
and
pop
pushf
push
mov
pop
addr16
mov
jl
stc
lock
in
pop
jle
cmp
scas
movsl
adc
pop
inc
lea
push
cmp
jmp
mov
std
popa
loope
cltd
xchg
in
mov
pop
aad
mov
jmp
add
call
outsb
pop
jnp
leave
test
pop
call
decb
daa
or
sub
cltd
outsb
repz
decl
sbb
pop
ret
jo
dec
inc
or
jle
mov
or
js
icebp
movsb
mov
pop
xchg
mov
mov
cwtl
mov
xor
mov
inc
push
mov
leave
lret
insl
ficompl
dec
mov
push
cmp
fldt
fcompl
jg
aam
stos
js
xchg
sbb
cli
loope
inc
fucom
lods
fs
test
inc
xor
pusha
cmp
jmp
ds
jmp
jnp
dec
imul
inc
aas
lock
dec
inc
lods
aam
cmpl
or
dec
cmp
mov
pusha
cld
ljmp
cmp
loopne
or
or
cli
add
std
and
loopne
push
testb
in
fadds
inc
xchg
push
mov
rcrl
mov
jle
sahf
das
sub
stc
cwtl
mov
cmc
pop
out
data16
testl
mov
sbb
jb
mov
shlb
pusha
pop
cmp
movsl
and
mov
nop
std
xchg
enter
mov
mov
imul
push
xlat
xor
out
cmp
push
push
cltd
cmp
es
dec
adc
sbb
mov
or
xor
scas
gs
mov
ficompl
inc
movsl
iret
inc
mov
pop
mov
outsb
add
and
mov
jb
in
imul
xor
in
clc
sbb
xchg
pop
int3
in
xor
addb
ja
xchg
cmp
leave
popf
pop
icebp
clc
pop
sbb
pop
inc
push
pop
inc
icebp
ja
mov
sbb
stc
lock
pop
repnz
mov
lds
sub
in
cmp
cmp
bound
cmp
push
mov
fnsave
scas
cmpl
xor
mov
inc
pop
and
pop
das
mov
sahf
pop
mov
popa
mov
jns
mov
out
lods
mov
jno
nop
std
cs
cli
mov
mov
cmc
cmpsl
repz
or
mov
jae
fisubl
lods
cmpsl
cli
lods
mov
shr
ds
jbe
and
aad
or
ret
and
xchg
pop
or
scas
aam
loopne
in
jnp
inc
fdivs
mov
mov
outsb
push
mov
outsl
mov
xor
inc
xor
lcall
scas
cmp
imull
inc
notb
popa
decb
sub
xchg
movsl
mov
and
aaa
into
popa
mov
lds
mov
xchg
cltd
sti
dec
sub
loopne
fcmovbe
js
gs
mov
jecxz
pop
mov
inc
jp
pop
mov
out
xchg
int
inc
xchg
jns
fs
gs
pop
jmp
adc
cmpsl
out
push
fisttpl
push
sub
cmp
mov
cwtl
mov
iret
and
mov
std
cmp
xor
xchg
mov
fists
mov
lret
out
fwait
cmpsb
mov
push
inc
stc
mov
fidivrl
cmp
or
add
adc
andl
outsl
push
outsb
inc
push
pusha
popf
inc
popa
gs
addr16
sub
mov
mov
scas
jle
nop
sub
dec
clc
ret
gs
cli
inc
iret
jg
test
push
les
add
mov
cmp
in
sbb
mov
push
jp
xor
pop
sub
mov
add
subb
gs
test
fcomi
mov
cs
imul
mov
ljmp
aam
mov
jl
into
sub
out
out
pushf
rcll
xchg
out
dec
push
jo
mov
repz
push
outsb
repz
cmp
push
gs
pop
adc
dec
adc
mov
pop
jno
inc
dec
addr16
gs
jle
fdivrs
sub
lods
test
jnp
mov
pusha
sti
aaa
sbb
sbb
cmp
cmc
inc
lock
jo
icebp
push
xchg
fistps
out
repz
pop
and
out
jp
fistl
mov
mov
stos
xlat
xlat
ljmp
ret
sbb
inc
scas
out
xchg
cs
shrb
int3
sub
lds
nop
leave
loopne
lock
and
xor
add
adc
pop
jo
inc
jns
mov
mov
lock
and
xor
add
adc
pop
jo
inc
jns
mov
mov
lock
and
xor
add
adc
pop
jo
inc
jnp
mov
mov
lock
out
addl
addr16
xchg
inc
mov
pop
mov
movsl
jle
mov
repz
and
xor
popa
xchg
jno
xorl
and
xor
loope
test
and
xor
and
xchg
lds
xchg
mov
std
jnp
das
por
jecxz
lahf
jb
jle
inc
adcl
cmp
adc
push
incl
aam
in
divb
pop
std
adc
rolb
lock
int3
jecxz
jno
mov
mov
cmpb
or
sub
push
inc
cmp
cmp
es
and
xor
rcrl
ja
sub
mov
cmp
sub
push
jo
int3
popa
es
or
and
int3
mov
idiv
mov
int
inc
mov
xchg
mov
xchg
mov
repnz
xor
in
xchg
inc
jmp
mov
xor
mov
shll
mov
inc
jae
mov
xchg
push
xchg
or
sub
inc
mov
popa
xor
xorl
and
ja
add
stos
jno
xchg
sbb
int
ret
insl
lods
test
adc
add
lahf
dec
mov
mov
addb
xchg
push
mov
lret
and
arpl
sti
rolb
cwtl
xchg
dec
scas
push
loop
pusha
popf
cmpsb
inc
mov
sbb
adc
inc
xor
adc
movsw
xor
add
adc
jecxz
repz
and
xor
popa
xchg
jno
xorl
and
xor
add
adc
jecxz
repz
and
xor
popa
xchg
jno
xorl
repnz
inc
jns
inc
or
aaa
and
inc
in
cmc
and
dec
insl
jb
jmp
cmp
loopne
and
stos
loope
shll
es
dec
nop
mov
scas
push
xchg
jmp
xchg
lods
movsl
inc
pop
add
lds
xor
cld
adc
ud1
scas
add
call
sub
mov
rclb
add
and
jg
loope
xor
aad
jle
sbb
xchg
cmp
add
inc
outsl
out
xchg
dec
out
cltd
loopne
mov
push
outsb
int3
cmp
loopne
in
jne
mov
xor
sub
inc
mov
scas
adc
mov
or
loop
mov
je
lcall
inc
mov
insb
gs
test
lods
xor
sub
sahf
pop
les
test
cwtl
or
fistpll
mov
mov
mov
push
insb
cwtl
lcall
jmp
lods
into
xorb
sub
in
repz
mov
pop
lods
sarb
shr
and
ds
inc
mov
mov
mov
cli
mov
int3
pop
or
and
lea
cli
aam
in
shrb
xchg
loopne
sarl
mov
or
cmp
inc
push
cwtl
lahf
rcl
rcrl
nop
fisubl
dec
dec
je
scas
xchg
or
sub
push
jb
fdivrl
sub
xor
movsb
push
lcall
cmp
dec
sub
stc
gs
sar
cmp
in
testl
loope
add
cmpl
mulb
jne
in
leave
inc
fcmovnb
jnp
incl
test
adc
xchg
leave
cmp
push
cmp
or
push
fildl
cmp
dec
popa
lea
arpl
nop
and
scas
inc
sub
out
push
sahf
mov
fwait
in
adc
inc
in
adc
xor
mov
mov
aad
dec
loope
int3
mov
or
fldt
movhps
addb
lahf
les
xor
sub
inc
push
pop
xchg
pushf
popl
xchg
pop
adc
jmp
gs
out
mov
lods
xchg
xor
mov
sub
pop
in
in
push
push
les
fwait
movl
adc
jecxz
sub
xchg
xor
push
dec
iret
mov
jl
pop
stos
das
std
ss
les
sub
test
ret
push
pop
xor
test
call
insb
add
mov
dec
and
fisttpl
lods
xchg
dec
mov
xchg
pop
clc
adc
jo
cwtl
aaa
xlat
pusha
cs
ffreep
or
sbb
push
scas
lods
daa
cmp
mov
lock
test
mov
out
dec
xchg
mov
and
and
sbb
popa
adc
cmpl
mov
in
sbb
push
test
lret
jns
push
cmp
xchg
pop
cmp
adc
lock
lods
or
test
push
inc
and
pop
sub
ret
pop
or
scas
push
mov
pop
dec
pusha
pop
jl
stos
pop
imul
lcall
xor
ljmp
push
jl
cmp
or
jle
pushf
and
pop
sti
push
and
int3
mov
inc
sbb
shll
push
imul
inc
popf
jno
xor
lret
mov
iret
sub
mov
ret
dec
jle
test
sub
push
mov
cmove
dec
xchg
rcll
jmp
mov
sbbl
lods
xor
repz
insl
scas
in
add
and
clc
xor
fs
jbe
repz
add
ja
sbbb
jns
sbb
and
ljmp
scas
dec
push
in
sahf
mov
adc
mov
xchg
popa
sahf
jnp
loop
test
xchg
cmpsb
cli
cmp
or
int
inc
les
insb
jmp
lahf
mov
mov
inc
add
pushf
fs
out
mov
lods
out
or
cmpsb
mov
and
decb
and
out
inc
or
push
mov
fstl
jl
pop
les
push
jnp
inc
in
fdivl
mov
clc
shlb
mov
jno
xor
push
cmp
inc
sub
movl
and
fcmovu
jbe
int3
sti
in
pop
cltd
xor
cltd
hlt
std
outsb
pop
pop
jecxz
adc
lahf
and
imul
test
shlb
xor
js
leave
xor
fimuls
rolb
repz
mov
mov
aad
mov
inc
pop
in
jl
mov
icebp
mov
fsts
addb
push
pushf
insl
inc
shll
mov
mov
push
adc
cs
addb
add
dec
out
mov
mov
dec
xlat
stos
gs
and
push
mov
in
dec
outsb
fucompp
dec
into
aas
inc
and
push
xor
aam
xchg
fiadds
addb
js
gs
scas
and
cmp
test
testb
loope
incb
daa
shr
jne
dec
dec
push
out
dec
arpl
inc
jmp
xchg
adc
xchg
cmpsb
xor
rol
lock
dec
shll
sub
pop
popa
fcomps
in
sbbb
xchg
or
add
lret
mov
adc
and
out
xchg
ficomps
mov
insb
test
cmp
cwtl
jge
loop
jno
outsl
mov
es
imul
ret
xchg
pop
out
iret
pop
adc
dec
jge
adc
pop
xchg
repz
pop
adc
add
jg
jns
mov
test
inc
jecxz
ja
mov
mov
mov
mov
fistps
cld
pop
push
mov
pop
xchg
imull
jmp
aad
imul
addr16
adc
jo
push
arpl
push
add
push
jae
mov
push
shrb
cli
aam
xchg
cmp
insl
mov
ss
stc
popf
not
or
pushf
xchg
or
popf
popa
shlb
push
ret
stos
out
imul
aad
popf
push
sub
scas
int3
cwtl
or
xor
sti
js
aaa
ds
out
dec
mov
push
cwtl
ja
mov
pop
push
mov
dec
cmp
lret
sti
rcll
pop
popf
inc
jle
adc
cli
daa
sub
inc
push
loopne
test
imul
sbb
ret
mov
push
jno
and
mov
movq
inc
jno
sti
rcrb
cltd
nop
stc
aas
imul
cs
sub
mov
nop
sbb
mov
sarl
sbb
cmp
fmull
insb
or
stc
jb
and
outsb
jb
test
cmp
int3
js
xchg
jne
push
iret
sbb
inc
les
arpl
gs
pop
insl
inc
test
jb
pop
imul
sub
mov
xchg
cmpsl
sub
add
xchg
imul
or
ss
xchg
and
pop
mov
lahf
dec
inc
js
mov
rcr
shl
ss
imul
push
sbb
sub
rcrb
sub
cmp
out
mov
inc
xchg
lea
lret
std
aaa
xchg
xchg
std
dec
cmp
xchg
sub
xorb
inc
fcomp
ljmp
push
outsl
xor
push
lahf
adc
mov
stc
jg
out
add
and
mov
mov
ja
hlt
jp
or
and
mov
inc
ret
cmp
sbb
adc
call
sbb
sahf
in
mov
dec
aam
int3
push
mov
imul
fs
ja
mov
adc
mov
xchg
lock
pop
movsl
imul
ret
loopne
mov
lods
and
mov
jmp
jle
loope
mov
mov
adc
gs
rolb
pop
push
add
pusha
data16
jmp
sahf
es
or
pop
stc
popa
dec
movsl
sti
scas
cmpsl
mov
repz
cmp
mov
icebp
pushf
cmpsl
lret
jnp
data16
pop
insb
mov
cld
mov
lock
pusha
inc
mov
jp
scas
and
mov
loope
add
ret
push
pop
or
cmp
in
ficoms
sbb
cmpsl
ljmp
arpl
test
loope
dec
xchg
pop
inc
pop
popa
lret
xlat
shll
ret
mov
mov
pop
into
or
or
jl
stc
and
or
in
lock
push
cmpsl
aas
jns
icebp
inc
outsb
bound
aaa
in
add
out
rorb
enter
and
xchg
dec
ja
adc
orb
cmp
xor
insb
and
in
in
and
dec
jmp
or
mov
inc
jnp
pop
mov
cmpsl
les
and
sahf
in
outsb
mov
jae
lods
cwtl
shl
ds
mov
sbb
mov
lcall
add
jae
add
lcall
fs
scas
or
repz
imul
push
inc
repz
mov
add
popa
idivb
push
movsl
mov
clc
ret
shlb
clc
xor
dec
and
in
arpl
mov
mov
cmp
js
push
or
fstl
dec
cld
mov
sub
les
fs
popa
cld
pop
push
push
jp
into
cli
and
and
cmpsb
push
test
jae
rcrl
sbb
test
cwtl
mov
pop
xchg
cmp
jo
sub
jg
inc
mov
movsl
inc
push
push
sub
nop
adc
aam
insl
inc
cwtl
and
into
pop
loop
insl
push
insb
push
dec
pop
cmp
push
repnz
in
neg
cli
faddl
cmc
stos
jmp
mov
pop
ret
scas
mov
cltd
repnz
pop
pop
adc
test
cmp
jb
push
or
push
cmc
daa
dec
and
imul
cs
loope
add
das
inc
fs
sahf
loope
inc
popa
push
mov
call
fs
add
or
jo
test
sub
xor
mov
pop
pushf
xchg
lcall
notb
jb
fbstp
shl
add
aas
insl
xor
pop
xor
sbb
and
ror
mov
fidivrs
or
or
sub
clc
pop
jl
sub
jns
les
int3
lcall
decl
repnz
mov
mov
xchg
xchg
mov
mov
mov
mov
xchg
in
sbb
rcr
push
and
adc
sti
mov
and
ljmp
movsb
sahf
cmp
push
repnz
aaa
mov
xchg
imul
cltd
mov
mov
dec
jo
cmp
clc
seta
add
ljmp
fdecstp
xor
test
shll
lods
scas
xchg
and
cmp
cmp
stos
adc
jns
xor
notl
push
cmc
inc
arpl
iret
sub
and
decb
xchg
lea
push
repnz
aam
insb
in
clc
jl
fs
out
cmp
mov
xchg
pop
sbb
adc
mov
jne
ret
jae
xchg
mov
insl
test
inc
sbb
popa
in
fidivs
iret
aam
xchg
stc
cmp
push
orb
imulb
ds
add
mov
inc
cmpsb
push
cmp
loope
jle
sbb
inc
addr16
stos
call
xor
cltd
ret
es
sub
lret
push
stc
lds
sbb
test
jbe
pop
or
push
cmc
jae
push
rolb
cmpsl
xchg
fildl
cmp
incb
aad
leave
xor
cmp
stc
dec
ja
bound
sub
inc
adc
int
dec
jg
inc
std
inc
adc
cmpsb
icebp
jns
aas
and
cmp
adc
inc
movsl
pop
adc
out
in
iret
jnp
sub
outsb
imul
inc
sbb
and
test
jge
insl
out
inc
or
enter
push
sub
push
mov
popa
push
loopne
xchg
cmc
cmp
adc
stos
xlat
add
dec
or
lahf
cltd
inc
call
inc
aad
cld
fwait
sbb
lret
loopne
xchg
mov
outsb
jge
xor
cmp
or
jmp
in
xor
addr16
xchg
cmpsb
imul
scas
idivl
inc
adc
sbb
xor
push
mov
push
in
hlt
add
mov
cmp
lods
les
loopne
fs
imul
fdivrs
jge
pop
arpl
inc
scas
jns
jo
push
rcll
or
sbb
mov
sub
cmp
inc
stos
aad
push
jo
je
pop
bound
jno
push
aaa
jns
cmp
imul
je
popa
outsl
add
push
leave
xor
or
icebp
stos
jns
jne
sti
xchg
xchg
sbb
inc
sti
into
lock
repnz
inc
mov
cwtl
test
hlt
sub
mov
mov
popa
add
into
mov
insb
leave
jge
addb
inc
xor
mull
cmp
repz
mov
cltd
repz
pop
jg
icebp
lds
repz
in
repz
mov
and
xchg
xchg
sarb
lods
mov
fs
mov
js
cmpl
mov
lods
push
mov
imul
lret
addb
loope
cli
clc
fs
sbb
imul
imul
cld
adc
xacquire
pop
xor
clc
xchg
cwtl
mov
mov
iret
push
leave
mov
orb
and
inc
ja
in
hlt
cli
push
subb
sti
ljmp
xchg
or
mov
jb
shlb
inc
scas
lock
jge
test
or
popa
xor
mov
mov
pop
nop
loope
loop
loop
lock
xchg
dec
jmp
subb
daa
cmp
in
adc
lret
mov
or
cwtl
and
sub
jno
sbb
test
lret
pop
shl
jge
cmpsb
add
sarl
fistl
sbb
jno
pop
dec
mov
popf
push
das
int3
and
dec
inc
or
leave
mov
cs
push
aam
lret
dec
adc
mov
mov
int3
mov
xchg
add
ret
sub
pop
in
pop
and
mov
cld
add
test
pop
and
cwtl
cwtl
jg
jmp
mov
mov
fcom
in
mov
add
fdivrs
std
cmp
xchg
sbb
jecxz
add
scas
fcmove
es
mov
scas
lock
int3
mov
fwait
dec
xchg
sbb
clc
cwtl
mov
dec
xchg
pmullw
inc
add
pop
jne
ds
cs
shll
pusha
sub
mov
mov
push
mov
sbb
push
dec
pop
fdivrs
jnp
xchg
lock
ja
push
test
out
andb
adc
dec
mov
cmp
jno
orb
cwtl
aad
aad
stos
pxor
dec
ret
add
nop
ljmp
leave
orb
test
dec
sub
mov
cmp
xchg
aam
jp
adcl
inc
xlat
xchg
test
mov
mov
aas
jecxz
mov
imul
dec
sbb
sti
jecxz
xchg
add
xchg
dec
jae
push
aas
stos
hlt
pop
adc
or
sbb
sub
arpl
call
add
movsb
pop
mov
inc
testl
xlat
push
sahf
lret
and
pop
in
dec
rcll
jno
fcoms
xor
fs
or
mov
out
jbe
js
jle
mov
xchg
cmpb
jg
ret
icebp
aaa
push
push
shrb
pop
test
and
xlat
xchg
sbb
into
and
cmp
mov
xchg
pop
out
dec
cs
andb
cmp
sub
xor
movsl
pusha
cmpsb
sarb
fmull
inc
mov
ljmp
stc
stos
mov
or
fdivs
jmp
das
mov
inc
adc
sub
ja
jp
push
daa
jbe
and
movsb
push
jo
push
add
sbb
xchg
mov
andb
xor
xor
xchg
aaa
and
jge
mov
daa
mov
pop
imul
es
test
add
fsubr
gs
and
push
es
jns
lods
sub
dec
outsl
jns
adc
test
xlat
scas
jp
push
push
test
rorl
imul
cmc
push
pop
icebp
fs
rolb
inc
xchg
sbb
out
xor
sub
leave
inc
pusha
int
mov
push
mov
add
mov
mov
jge
mov
add
mov
push
out
xchg
mov
imul
in
and
jbe,pn
adc
arpl
in
jge
rcrl
mov
lret
leave
test
xor
jae
xchg
mov
dec
adcb
sbb
addb
mov
fstl
fiaddl
ret
jg
aas
in
je
cmp
and
ljmp
roll
arpl
inc
les
or
mov
fs
or
cmp
push
fisubl
sbb
popf
lods
les
sbbb
cmp
sahf
push
mov
repz
outsl
mov
adc
jmp
push
cmp
add
addr16
mov
jg
test
daa
fidivs
iret
xor
cmp
jmp
and
mov
xor
jbe
jb
mov
fwait
ds
ret
mov
das
add
lds
in
xchg
fbld
push
or
cld
fsubl
and
in
jecxz
fldenv
jmp
cmp
arpl
loope
enter
addl
inc
cs
sbb
cli
in
in
push
sub
mov
add
popf
mov
push
jecxz
push
xorl
push
and
not
clc
dec
mov
cmp
pop
es
adcb
xchg
fdivl
popf
pop
mov
xabort
and
dec
sbb
cld
int3
inc
ud0
dec
xor
mov
mov
mov
push
mov
push
mov
mov
push
or
scas
test
int3
mov
mov
popa
rol
mov
jns
lea
jmp
shlb
or
adc
pop
test
pop
movsb
and
push
xchg
clc
loop
push
insb
shl
ss
mov
das
dec
inc
movsb
rorl
xchg
adc
mov
sti
and
add
popa
js
pop
nop
push
sub
les
test
test
jno
insl
loop
sub
mov
rorl
xchg
push
mov
sub
jg
push
bound
rorl
xlat
aad
pop
cld
leave
cmp
inc
jae
pop
shlb
cmpsl
push
dec
or
cmp
pusha
jnp
lds
inc
sbbb
dec
out
repnz
dec
mov
mov
jne
in
dec
mov
add
sbb
scas
ja
subb
shrl
js
test
pop
xor
jmp
pusha
and
mov
shlb
push
cli
pusha
mov
inc
adc
cmp
jge
shl
inc
add
and
jae
bnd
pop
stos
or
dec
shr
dec
jmp
jno
jb
mov
loopne
sub
mov
loopne
inc
adc
add
push
ljmp
push
fisubs
push
adc
xchg
fdivr
je
scas
ss
pushf
push
or
pop
int3
int3
pop
cmp
out
imul
push
aas
pop
idiv
lahf
je
jo
popf
inc
aam
inc
push
sub
ljmp
adc
sub
nop
mov
push
cmpsb
lcall
lock
cmpsb
out
fcmovb
sahf
stos
add
inc
popf
orb
pop
sbb
inc
cmc
jle
lret
jmp
fdivs
mov
cs
mov
cwtl
sub
jo
jecxz
adc
cmp
out
pop
cmp
adc
sbb
sub
es
pop
mov
mov
xor
pop
mov
jnp
punpcklwd
pop
jns
dec
jns
xchg
cmp
mov
je,pn
test
jb
ljmp
cltd
cmp
fistpl
inc
push
jecxz
dec
mov
outsl
adc
test
pmaddwd
xchg
dec
xchg
fstl
cmp
adc
pop
dec
push
lahf
call
mov
xor
jb
test
test
jecxz
xchg
call
out
ss
add
lods
popf
mov
pop
pop
lea
mov
push
jg
lea
outsl
out
sahf
xor
icebp
repnz
lahf
push
sbb
rolb
mov
inc
cmc
loopne
imul
out
lahf
sub
pop
in
pop
sub
adc
mov
in
pop
or
push
jecxz
push
jno
out
xor
in
iret
repz
mov
repnz
icebp
rolb
iret
or
ret
icebp
sahf
rcrb
xchg
mov
dec
mov
shll
add
adc
jecxz
repz
and
xor
popa
xchg
jno
xorl
and
xor
add
adc
jecxz
repz
and
xor
popa
xchg
jno
xorl
and
aaa
jns
loope
icebp
out
repz
and
xor
inc
mov
xchg
lret
mov
and
add
icebp
jecxz
or
imul
cmp
adc
xchg
push
mov
gs
xor
add
lahf
and
cmp
jno
addl
xor
inc
rcll
icebp
pop
add
mov
ljmp
andl
rcrl
outsb
icebp
inc
add
and
push
nop
icebp
inc
xchg
push
in
ja
push
dec
dec
icebp
lods
sbb
ret
movlps
out
pop
dec
sbb
fdivs
sbb
mov
aam
lock
rclb
imul
push
mov
outsl
mov
scas
jge
lds
test
add
into
dec
pushl
xchg
sub
xor
inc
add
adc
and
rcll
add
je
pop
fnstenv
jno
jnp
jl
outsb
jmp
sub
push
loope
icebp
mov
fs
jno
xor
cmp
in
mov
sti
xchg
jmp
push
xor
and
sbb
xlat
mov
xor
or
fimuls
mov
roll
fs
out
test
cmp
cmpsb
xor
popa
cld
jno
cmc
add
jnp
dec
lcall
loope
cmp
mov
xlat
xor
nop
add
push
aad
stc
pop
movsb
push
mov
loope
mov
in
loope
notb
mov
aam
subl
ret
pop
orb
push
loope
icebp
je
test
xchg
and
aam
in
hlt
addl
xor
inc
rcll
icebp
je
test
xchg
and
aam
in
hlt
addl
fidivl
int
dec
push
lret
dec
out
mov
and
outsl
jg
aad
sub
decl
cmp
test
ljmp
out
dec
jno
xor
outsb
xchg
loop
arpl
scas
jmp
ret
int3
mov
mov
adc
mov
outsl
lea
jl
xor
sub
add
sahf
outsl
jmp
sbb
adc
ljmp
sub
sbb
rcll
ds
das
push
popa
loopne
push
lret
sbb
cmp
scas
popf
sbb
jo
jp
je
pusha
mov
mov
push
jne
dec
testb
sub
sub
cmc
pop
xchg
mov
push
inc
jb
stc
xor
test
cmp
scas
mov
lods
and
test
sub
loope
sbbl
mov
push
in
mov
pop
sub
cmpb
inc
lret
es
fsubs
out
sbb
inc
cmp
push
cli
js
imul
add
dec
xchg
into
je
push
mov
cmp
insb
fisttps
jns
sbb
push
les
and
sub
pop
add
cmpsb
push
das
mov
pusha
dec
loopne
cli
js
mov
cmp
cmp
cltd
clc
push
rcrl
das
leave
sub
jle
sub
arpl
jle
into
ss
add
fdivs
cmpsl
pop
leave
jb
jo
push
adc
test
or
sti
jo
cwtl
nop
pop
in
ret
sbb
addr16
mov
icebp
fbld
rorl
cmp
es
gs
stos
push
add
pushf
jo
sub
les
fcoml
inc
jge
pop
nop
repnz
mov
cwtl
push
fidivrl
dec
mov
and
jae
and
mov
cmpsb
outsl
lret
lret
cmpsl
push
mov
icebp
mov
and
jns
movsl
das
inc
mov
fnstsw
and
fdivs
dec
sahf
out
mov
cmp
add
sub
ds
lock
xor
jne
out
idivl
cmp
xchg
jle
xorl
dec
xor
outsb
inc
push
cli
mov
jle
call
fisttpll
ss
int3
sbb
mov
scas
outsl
aaa
addb
int3
lret
mov
repnz
imul
fdivr
stos
es
pop
inc
mov
xchg
ror
les
adcb
enter
int
mov
into
jnp
or
pop
jno
lds
in
popf
enter
dec
gs
dec
add
dec
or
cmp
ds
cmp
pop
cs
ret
adcb
lea
add
bnd
add
push
jl
mov
cmpsb
scas
or
pcmpgtw
lea
movsl
mov
pop
ljmp
inc
mov
push
xor
adc
add
xor
ja
cmc
cld
std
mov
or
push
insl
mov
jp
jo
lds
cmp
imul
dec
push
pushf
pop
sub
loopne
das
rolb
les
cmp
mov
mov
jle
cmp
movsl
scas
mov
cmp
push
dec
mov
xchg
xchg
cld
arpl
lret
mov
shll
fdivl
std
or
rclb
jbe
popa
fisttpll
push
imul
xchg
std
pop
mov
addr16
mov
add
sarb
popf
shrl
pop
daa
aas
or
inc
jmp
movsl
in
adc
mov
pop
outsl
dec
or
inc
gs
push
push
push
xor
pop
mov
cli
test
pop
fucom
or
and
sti
dec
lret
mov
xor
pop
mov
push
loope
pop
les
adc
mov
jno
adc
jl
ss
jmp
adc
adc
ficoms
movsb
addr16
xchg
xchg
inc
mov
ja
movsl
jb
mov
imul
cmpb
and
mov
fcmovu
aam
popa
jecxz
pop
movsl
sarb
and
jp
adc
cmpsl
dec
mov
fidivrs
sarl
test
pusha
cs
rol
les
stc
sbb
sahf
out
jo
cs
jl
hlt
pop
push
loopne
sub
mov
hlt
xchg
pop
or
ja
inc
out
lea
movsl
adcl
dec
or
aad
leave
lret
rorb
aas
mov
scas
sbb
inc
xor
pushf
add
jns
lods
insl
push
xor
push
int
enter
fs
adc
push
enter
jge
psrlq
mov
test
imul
in
sbb
test
push
xor
pop
gs
lret
mov
jp
xchg
popf
into
ja
in
xor
leave
dec
sbbb
inc
pop
jno
and
xor
ret
jecxz
xlat
inc
hlt
ja
and
rorb
scas
xor
cwtl
adcl
push
inc
rorb
outsb
adc
subl
sbb
add
clc
sub
jbe
mov
pop
mov
jno
clc
aas
js
and
cmp
rcll
and
push
mov
sbb
and
andb
sti
lret
call
adc
mov
sarb
mov
loopne
sbb
mov
iret
rorb
fsts
pop
mov
mov
mov
in
repnz
adc
out
stos
fiaddl
sahf
in
add
popa
pop
call
inc
mov
inc
or
mov
or
mov
inc
pop
pusha
lds
mov
insb
adc
lds
mov
fsubs
xlat
dec
pop
push
sub
dec
pop
pop
rorb
negb
arpl
lock
jle
push
shlb
jae
jb
aaa
or
subl
aad
pop
test
or
xchg
adc
mov
mov
mov
pop
add
std
sbb
in
clc
pop
outsl
out
jge
mov
push
notl
and
xor
jbe
mov
add
xchg
adc
dec
fcmovne
mov
rolb
xor
xor
imul
sub
pop
mov
ret
and
loop
movsb
mov
and
and
xchg
or
ficoms
mov
pop
int
or
push
mov
pop
in
cmp
hlt
cmpsl
and
sbb
mov
xchg
xchg
ds
xchg
or
push
cmpsl
inc
push
call
inc
shrb
sub
nopl
cmp
inc
in
hlt
adc
rorb
leave
ds
arpl
push
idivb
mov
je
inc
insl
arpl
mov
jne
into
push
jae
push
adc
adc
xchg
xchg
xlat
push
jge
call
cmp
lret
pop
cwtl
inc
gs
mov
fs
mov
jae
pop
push
fnstenv
inc
icebp
jo
push
fstps
shl
std
mov
pop
ds
outsb
jo
and
divl
xor
dec
aam
cmp
sti
cltd
and
ljmp
add
push
jecxz
movsb
in
mov
gs
jno
mov
mov
pop
adc
gs
xchg
mov
loope
cmpb
sahf
lret
subl
cmpsl
lret
pop
pop
pop
and
lahf
xor
popa
test
pop
sbb
out
pushf
outsb
mov
pop
fcomp
fsts
in
icebp
aas
subl
inc
sbb
push
fsubrl
cmp
sbb
scas
mov
or
sbb
mov
push
add
sub
fxch
movsl
add
sahf
mov
scas
adc
rcrb
pushl
jb
ret
adc
xor
inc
sub
mov
bound
loopne
sub
pop
xchg
fs
popf
call
mov
fadds
jae
mov
dec
inc
jne
pusha
inc
pop
xchg
in
negl
leave
lcall
pushf
scas
or
into
fs
jp
inc
aas
add
xchg
aam
push
pop
mov
push
push
adc
ss
mov
add
pop
lret
pop
gs
sub
inc
jmp
iret
scas
push
mov
mov
sbb
sub
sarl
ja
dec
xchg
dec
test
fistps
push
mov
lret
cmp
test
pop
xchg
pop
pop
jno
pusha
ret
jmp
mov
dec
mov
inc
dec
sahf
or
bound
mov
and
repnz
sub
adc
cmp
lea
sbbb
inc
jae
cwtl
movsl
call
pop
push
xchg
push
ficomps
addr16
jb
mov
jns
icebp
or
jnp
in
fcoml
sub
mov
push
pop
mov
ss
push
sub
test
pop
and
or
or
mov
xchg
xchg
pop
sub
pop
push
loopne
enter
pop
mov
repnz
and
nop
mov
mov
push
add
subb
mov
hlt
or
sub
rclb
es
dec
and
dec
test
mov
lret
orl
jae
lea
push
dec
lcall
jg
or
in
fs
stos
enter
adc
dec
mov
xchg
lret
lret
or
ljmp
clc
adc
repz
cmp
out
xchg
push
and
cltd
xor
xor
sarl
xlat
test
sbb
push
iret
out
fwait
add
cmpsb
icebp
lea
dec
xor
xor
jae
hlt
bound
loopne
mov
js
inc
add
std
ljmp
std
int
dec
lds
pop
scas
popf
sbbl
fnsave
sub
pop
ljmp
xor
sbb
add
dec
adc
mov
lcall
cmc
mov
add
cli
or
pop
fucomp
sub
mov
bound
and
lods
movsl
and
push
aad
or
add
adc
pop
adc
cmpsb
sbb
push
inc
pop
lcall
icebp
push
inc
sub
mov
fs
fbstp
repnz
xlat
inc
test
lds
sub
es
add
push
sbb
and
out
inc
outsb
roll
sbb
popf
dec
loope
movsb
aaa
sarb
xlat
or
jb
jl
xor
push
dec
xlat
sub
mov
into
or
cmc
aaa
dec
mov
inc
cltd
jp
cmp
ja
xchg
enter
nop
xchg
incb
mov
or
repnz
out
cmc
cmp
jle
add
pop
data16
adc
repnz
or
jnp
arpl
sbb
repnz
xchg
mov
stos
sub
dec
xor
pop
test
add
into
arpl
bound
sub
xchg
sbb
cmp
js
je
and
xchg
xor
icebp
rclb
cld
push
sub
movsl
stc
cmc
xchg
into
xchg
sub
repnz
js
enter
jge
jg
or
popf
lret
mov
cli
fldl
loope
stos
sub
sub
sahf
or
mov
pop
movsb
mov
and
push
fs
jo
mov
out
mov
pop
out
out
lds
repnz
ja
add
ljmp
loope
push
and
pop
iret
lods
aam
xchg
sbb
sub
fs
outsl
out
int
jnp
or
insb
je
dec
es
ljmp
out
jns
sbb
sahf
addr16
jle
push
out
pop
mov
dec
cld
out
iret
popl
sbb
rcl
mov
cmpsl
mov
mov
mov
xchg
mov
fiadds
jns
cmpsb
xchg
loop
push
dec
jno
cmp
ficomps
cmpsb
imul
call
mov
xor
cmc
jp
jns
adc
cmp
enter
sar
jnp
mov
push
mov
add
push
lret
jne
inc
cmp
cli
xchg
testb
xchg
popf
test
clc
xor
scas
xchg
pop
pop
mov
aad
dec
jge
push
adc
mov
cmp
cmp
faddp
xchg
gs
push
ljmp
aaa
mov
mov
pop
pop
and
xor
fs
gs
inc
xchg
jno
cmp
aas
rorl
sub
xchg
mov
imul
adc
inc
lock
mov
movsb
or
xchg
jns
xor
ljmp
mov
or
stos
inc
nop
cmp
gs
push
add
push
and
lds
sub
cmp
mov
adc
or
sub
mov
js
lcall
fists
lock
mov
pop
push
ficoms
dec
adc
lahf
divl
push
or
fnstsw
fwait
fs
arpl
nop
cmp
dec
sub
rcr
andl
jp
or
inc
dec
inc
out
mov
addr16
pop
fstps
sbb
idivb
lahf
push
dec
shlw
ret
xchg
or
cmpsl
fistpll
jae
mov
jle
repz
mov
or
adc
outsb
sarl
stos
and
mov
adc
nop
fisttpll
adc
pop
inc
jmp
fcoml
rcrl
ret
out
in
popa
and
inc
jbe
push
lret
pop
ret
or
cmpsb
sub
jp
negl
inc
popa
inc
sbb
push
sub
push
push
mov
test
mov
outsb
sahf
adc
xorb
xchg
aam
mov
lret
out
inc
and
fwait
sub
fs
test
jbe
pop
insb
xchg
add
movsb
xchg
adc
mov
cltd
add
std
loope
pushf
out
call
xchg
rclb
xchg
mov
lcall
push
stos
jno
fscale
aas
xchg
fsubrs
stos
hlt
mov
xor
mov
pop
mov
add
mov
xchg
es
xor
adc
in
lahf
idivl
add
push
pop
int3
xor
iret
jp
mov
outsb
loope
jo
andb
xor
cmp
faddl
cmp
movsl
add
jno
jbe
and
xlat
iret
outsb
and
nop
int3
sub
add
pop
incl
jp
mov
cmpsb
xor
mov
inc
push
mov
ss
roll
lahf
mov
call
jnp
xlat
popa
push
std
or
clc
iret
jecxz
cmp
test
insl
jecxz
out
les
fld
and
mov
pusha
jb
push
cs
je
push
adc
sub
pop
mov
enter
pusha
xor
mov
test
in
cli
push
push
or
std
inc
inc
sub
inc
and
bound
jb
test
cmp
js
and
clc
mov
movsb
inc
jae
jae
xor
gs
pop
in
push
adc
or
mov
inc
test
test
dec
adc
pop
add
inc
and
jno
mov
pop
mov
dec
mov
cs
int
mov
pop
jg
sub
js
insb
shrb
cmp
mov
add
or
test
lods
adc
jmp
dec
inc
nop
stos
in
push
sbb
fildl
leave
mov
in
cld
bound
push
push
ljmp
arpl
jno
data16
add
dec
xchg
aas
add
push
sahf
cmp
and
inc
scas
fsubl
fcompl
ja
bound
jae
cmpsl
mov
mov
and
xor
movsb
push
dec
sbb
lret
outsb
mov
popf
dec
pop
add
dec
pusha
sub
push
pop
cwtl
imul
cmp
cmpsb
aaa
inc
cwtl
xor
push
movsl
ja
shrl
xchg
jmp
into
push
xlat
jmp
mov
jl
xchg
cmpsl
adc
mov
sub
out
dec
les
ja
notb
imul
enter
add
popf
mov
xchg
inc
pop
push
inc
adc
mov
mov
jge
adc
inc
imul
gs
into
subb
inc
rcr
mov
cli
sbb
fwait
arpl
lahf
pop
pushf
dec
cwtl
pop
mov
insb
loop
pop
data16
test
or
push
mov
xor
jns
sbb
iret
jbe
fiaddl
outsl
decb
mov
mov
mov
jae
mov
jbe
xorb
out
mov
or
mov
and
dec
push
push
rolb
or
cmp
jo
pop
mov
dec
rcll
sub
xchg
ja
movsb
mov
sbb
ss
cli
or
loope
jle
in
fwait
sbb
shll
mov
adc
inc
mov
pop
hlt
hlt
fadd
inc
daa
cmpb
xchg
leave
testb
pop
setnp
and
pop
int
stos
popa
cmp
pop
mov
jle
sub
outsl
dec
addr16
lret
cmp
and
shl
pop
jp
and
lret
sarl
cmpsb
rcrl
push
not
add
int
test
orl
pop
mov
gs
cmp
or
cmp
lods
sub
repnz
fldenv
insb
jb
pavgb
mov
ljmp
movsl
pop
push
xchg
rcrl
adc
aam
sbb
adc
stos
sbbl
inc
je
xor
out
push
repnz
stc
movsl
and
jmp
cmc
fs
add
or
or
inc
pop
repnz
lahf
dec
aaa
stos
sbb
cmpsl
pop
add
test
repz
mov
push
add
mov
movsl
push
jg
dec
add
fldt
lcall
roll
cmp
jg
cmp
inc
push
sbb
and
cld
pop
jno
aaa
call
jle
movsl
push
ret
push
push
inc
mov
shl
jnp
inc
inc
fdivrp
orb
cmpsb
xor
popa
call
pop
les
dec
cld
es
sbb
inc
adc
pop
xchg
pop
addr16
das
iret
aas
dec
les
clc
dec
jno
push
add
test
bound
add
xchg
xor
in
and
xchg
out
sbb
test
dec
lahf
mov
jae
js
lds
and
jmp
das
mov
xlat
xor
and
frstor
mov
dec
pop
dec
fidivrs
fdivrs
outsl
dec
inc
jmp
mov
outsl
push
jo
mov
cmp
inc
fldcw
mov
sbb
push
add
add
push
pop
pop
xor
sti
sbb
test
scas
pop
xor
xchg
out
cld
icebp
out
stc
push
fs
add
xchg
push
or
cmpsb
shrl
mov
sbb
into
repnz
push
mov
test
dec
rorl
aad
inc
ror
stos
mov
mov
pop
inc
jne
add
ret
sub
lcall
and
jne
into
push
outsb
daa
fsubl
dec
adc
sbb
jne
mov
movsb
xor
lahf
push
cmc
push
out
lcall
pop
divb
and
out
jl
mov
push
in
mov
jle
pusha
sbb
fsts
out
cs
icebp
jle
lcall
adc
mov
sub
mov
int3
xchg
fdivrl
test
outsl
dec
loope
mov
pushf
add
pushf
cmp
add
stos
sbb
pop
pop
inc
jl
push
dec
dec
cltd
ljmp
in
je
cs
popf
loopne
les
popl
xor
mov
pop
stos
pushf
dec
or
les
pop
es
sbb
mov
xchg
xchg
and
or
inc
cmp
addr16
jo
jmp
add
and
lret
sbb
jnp
cltd
sahf
cmpsl
mov
push
jg
inc
cs
outsw
cmp
addr16
stos
fists
cmpsl
jp
adc
jg
stc
outsl
xchg
sub
shll
ret
dec
popa
mov
fistpll
jb
cld
int3
mov
xchg
push
cmp
sub
cmpsb
dec
push
arpl
adc
jbe
stos
sbb
sbb
xchg
xchg
icebp
mov
push
in
lret
fstl
xchg
or
out
and
fs
cmc
lods
imul
ja
ret
cmp
mov
leave
test
mov
hlt
cmp
cltd
mov
shrb
adc
jp
inc
shlb
stc
pop
sbb
popl
push
jo
dec
gs
push
xor
pushw
mov
and
push
dec
cli
pop
ds
call
int
iret
aaa
mov
pop
or
je
out
mov
xor
inc
mov
les
sahf
sub
jbe
xor
dec
lds
inc
aad
sbb
das
es
nop
inc
stos
xchg
mov
adc
fcmovbe
inc
test
sub
dec
mov
dec
lahf
jb
mov
fsubs
mov
and
mov
sbb
sub
in
fdivs
jmp
stos
out
inc
jnp
and
cmp
les
jecxz
mov
adc
mov
frstor
add
dec
int3
mov
inc
pusha
mov
lea
xor
mov
repnz
fsub
inc
inc
ja
cmp
xchg
in
mov
dec
mov
aas
jae
pop
mov
cmp
rorl
movsb
int
je
add
add
pop
scas
and
xor
bnd
pop
mov
adc
insb
mov
push
sub
push
inc
rcll
icebp
je
test
xchg
and
aam
in
hlt
addl
xor
inc
rcll
icebp
je
test
xchg
and
aam
in
hlt
addl
mov
roll
pusha
icebp
je
test
nop
and
aam
in
jo
and
lock
inc
rcll
icebp
mov
jnp
mov
lods
sahf
pushf
mov
dec
loopne
jns
push
nop
pop
iret
sbb
jb
inc
fstl
lods
inc
std
xor
sarb
loopne
nop
sub
mov
std
adc
mov
mov
leave
insl
fnstcw
dec
clc
pop
mov
mov
push
rorl
sbb
adc
aas
decl
inc
call
rorb
sub
cld
orl
stos
icebp
mov
mov
cmp
das
push
shlb
cmp
push
aad
ret
imul
lods
insl
push
fmull
shrb
jp
mov
or
add
enter
lods
inc
mov
xchg
sarb
imul
xchg
sub
fisubrs
call
xchg
push
in
jo
leave
mov
test
sub
mov
pop
test
cld
xor
mov
mov
int
call
insl
sub
mov
rclb
dec
rcrb
sarb
negl
sub
mov
std
push
lods
sbb
mov
or
mov
int
and
inc
xchg
add
les
inc
clc
shrb
aaa
xchg
dec
loop
in
out
adc
in
push
test
xchg
xor
ret
inc
clc
and
mov
cmp
sub
inc
cmpb
in
inc
std
jo
pusha
fstl
lods
add
shrb
jge
dec
loopne
nop
sub
mov
std
jo
pusha
fstl
lods
add
shrb
push
mov
pop
clc
arpl
xor
mov
mov
cmp
sbb
mov
out
mov
stos
sub
adc
lahf
aas
push
iret
inc
adc
imul
xor
addb
cmp
sbb
mov
shl
mov
bsf
adc
icebp
add
push
ret
pop
jae
in
mov
cmp
mov
das
ja
xchg
lahf
mov
mov
xchg
movsb
jb
jne
xlat
cmp
dec
inc
loope,pn
mov
push
shrl
imul
xchg
data16
cwtl
fmulp
inc
aad
lods
jp
pop
pop
sub
enter
shlb
jl
ss
mov
nop
or
std
mov
and
xchg
mov
pop
mov
outsb
lods
mov
cmp
and
std
ret
or
lret
ret
js
lahf
popf
sub
and
cmpsl
jecxz
icebp
lahf
lcall
xchg
cs
lods
pusha
push
cmpsb
shl
pusha
dec
jl
test
push
data16
scas
inc
or
jne
jl
stos
fidivs
and
sub
dec
cmp
js
mov
loop
mov
inc
jno
xor
dec
push
rorl
out
outsl
dec
mov
arpl
fstps
mov
sub
pop
cmpsl
jne
rcll
pushf
fs
inc
out
dec
lds
sub
or
jg
std
ret
rcll
mov
aam
xor
lahf
xchg
dec
addb
jo
ljmp
push
xchg
cmpsl
cmpsb
push
push
ret
mov
mov
hlt
aaa
outsl
int
mov
shrl
jbe
call
jbe
insl
lahf
dec
mov
sub
push
hlt
pop
sbb
xchg
in
and
ja
popf
inc
inc
ret
lcall
nop
cmc
es
mov
or
out
xchg
mov
fisubrl
clc
cmp
pusha
imul
mov
jge
aam
divl
sahf
out
mov
bnd
adc
and
movsl
cmp
sub
repz
cmpsl
xchg
fs
sbb
mov
sub
and
xchg
jmp
adc
mov
inc
popf
mov
cwtl
mov
sbb
jge
mov
mov
or
fs
iret
inc
fwait
mov
test
popf
xchg
sbb
daa
repnz
aad
mov
dec
push
mov
popa
cwtl
push
lock
das
std
add
sti
push
push
add
movsl
icebp
mov
jmp
popf
adc
push
loope
jl
bound
xor
inc
or
push
js
fldenv
cmp
outsl
jno
lret
cmp
pop
pop
add
frstor
pop
ss
stc
cmp
or
in
xor
push
jns
inc
divl
mov
div
test
sub
out
cwtl
and
fldcw
xor
mov
or
xchg
outsl
mov
mov
cli
mov
dec
push
in
and
push
adc
dec
push
out
cmp
xchg
movsl
mov
adc
xchg
pop
ja
pop
push
iret
xor
sub
sub
inc
decl
pop
int
lret
inc
je,pt
jl
aaa
fstpl
sti
scas
scas
cwtl
push
xchg
sbb
sub
jnp
stos
shl
xchg
popa
hlt
enter
divb
dec
scas
dec
push
jmp
ficompl
dec
sub
push
sub
out
dec
leave
fidivs
add
jae
hlt
ret
add
pop
mov
popa
sbb
enter
call
pop
fucomip
sti
adc
ret
xor
adc
sub
ljmp
test
stos
fsub
enter
cmpl
cmp
pop
orb
loop
mov
test
sahf
mov
inc
mov
mov
cwtl
and
mov
jb
mov
sbb
cli
jecxz
jne
test
in
add
pop
pop
dec
and
add
mov
adc
call
mov
daa
cmp
enter
xchg
aam
stc
mov
xchg
add
jmp
dec
mov
ror
mov
mov
cwtl
xorb
mov
adc
iret
imul
imul
mov
das
insb
or
mov
int3
mov
or
cmp
push
call
cwtl
hlt
orl
ret
roll
popa
std
test
xlat
sub
dec
jns
cwtl
mov
dec
sbb
push
and
mov
cmp
lcall
jb
int
adc
les
cld
push
pusha
pop
into
shlb
xchg
mov
inc
mov
inc
in
movsl
in
mov
sbb
jmp
pop
push
xor
pcmpeqw
adcl
insl
inc
add
adc
xor
cmp
faddl
sub
outsb
dec
sbb
mov
lahf
mov
xchg
cmp
mov
mov
or
arpl
in
fucomp
pop
lock
and
jno
xlat
out
pop
mov
movsb
xor
in
push
out
out
mov
jae
mov
lods
into
divl
mov
dec
in
nop
push
clc
fiadds
test
loopne
inc
fimull
mov
inc
out
cmc
push
idivl
out
dec
mov
sbbl
out
dec
inc
xchg
dec
sbb
addr16
mov
mov
or
int
std
imul
mov
in
inc
popf
mov
pop
push
push
jecxz
rcll
lock
bound
ljmp
fdivs
fistpl
daa
push
pop
jp
push
arpl
xor
jecxz
sub
mov
cmp
or
mov
and
add
leave
push
sti
mov
jne
fcmovb
jo
xchg
mov
mov
pushf
mov
fsubl
je
aaa
mov
xorl
out
pushf
jecxz
in
xchg
inc
adc
popf
inc
stc
loop
dec
dec
daa
loope
and
add
ret
dec
or
pop
mov
jmp
xchg
cmp
xchg
mov
jns
push
pop
call
cmp
subb
call
test
push
jo
loop
in
push
outsb
mov
jns
adc
insl
out
mov
stos
xchg
aas
scas
shlb
stos
xchg
hlt
jle
outsb
mov
cwtl
xchg
fcomps
cmp
jl
push
gs
xchg
pop
punpckhwd
test
jge
cmp
mov
lock
jp
cmp
iret
cld
mov
pushf
jne
test
cli
mov
lret
push
iret
pop
jne
out
adc
jb
cmp
mov
lcall
pop
push
mov
xor
or
aad
sub
je
xlat
push
xchg
push
es
mull
pop
cmc
popf
repnz
sarb
xor
mov
sbb
mov
shrb
xor
xchg
rorb
xchg
repz
fs
sbb
jg
xorb
push
adc
sbb
das
fisttps
std
mov
add
pop
mov
sbb
mov
pop
repz
out
lods
rorl
dec
push
ret
jge
cli
mov
sti
push
push
or
jne
int
mov
bound
int
insb
sti
inc
or
mov
jne
dec
int
push
lock
std
or
cli
sub
out
cmp
add
mov
pusha
cmc
negb
fsubrl
mov
orb
add
jecxz
out
sbb
iret
adc
cwtl
jge
das
mov
push
test
or
pushf
sbb
and
jne
mov
fcmovnb
sbb
add
add
sbb
stos
mov
gs
mov
nop
push
scas
push
or
repz
daa
lahf
std
dec
mov
fcomps
aam
stos
adc
aam
sub
js
jmp
subb
out
mov
call
js
cmpsb
pop
nop
roll
enter
mov
roll
dec
mov
aad
push
sahf
pop
aad
pop
fdivr
dec
cmp
push
inc
push
mov
inc
test
test
and
pop
roll
dec
cmp
adc
inc
cmp
sub
cli
mov
inc
insb
inc
sbb
mov
mov
push
loopne
outsl
or
movsl
jns
sbb
jnp
loopne
call
clc
and
jb
jbe
jne
xchg
repz
inc
push
test
fnstenv
cwtl
dec
add
dec
ljmp
in
mov
cwtl
js
notl
jnp
adc
sub
sbb
or
ret
sub
add
mov
inc
rorb
repnz
jb
ds
fwait
int
adc
enterw
les
inc
cs
xor
fidivrs
jmp
inc
jg
les
or
loope
addl
testb
bnd
cmp
jb
dec
cwtl
jmp
push
xchg
outsl
fisttpll
sar
je
adc
jl
enter
inc
pop
dec
loopne
mov
pushf
inc
jp
idivb
test
pop
cld
fisubs
sti
cmp
addr16
add
scas
imul
lcall
das
push
xchg
insb
repz
add
daa
jmp
cmp
xor
icebp
inc
adc
pop
xchg
cwtl
out
mov
bound
sbb
xchg
lahf
inc
pop
mov
push
call
into
sbb
shlb
mov
sahf
dec
or
inc
xchg
sub
jp
pop
adc
mov
inc
add
insl
jno
xorl
sub
ret
repz
movb
dec
out
adc
rcrb
mov
in
es
inc
shl
sbb
xchg
fwait
test
pop
adc
lret
iret
in
decb
ret
xor
mov
push
push
push
fdivr
lcall
pop
popa
repnz
and
xchg
lds
ds
jl
iret
push
in
jne
or
pop
push
pop
jne
mov
xchg
lcall
dec
in
cmp
not
inc
call
addr16
xchg
out
add
mov
xor
cmp
sbb
or
int3
sub
clc
sarl
push
push
cmpsl
outsb
fisttpl
xor
in
sbb
push
pop
mov
arpl
and
mov
dec
mov
inc
lret
jb
jmp
jns
push
shlb
add
mov
and
inc
jo
mov
mov
and
out
aas
iret
or
sub
cmc
cmp
push
jae
mov
clc
jns
mov
hlt
cmpsb
repz
pop
mov
pop
cmpsb
int3
dec
xchg
jo
ds
sbb
jo
lret
push
push
xchg
push
push
xchg
and
xchg
jge
cmp
and
imul
jb
xor
ficoms
inc
out
scas
add
out
add
inc
cmp
sub
filds
lret
shrb
or
stos
push
gs
roll
or
inc
mov
lods
loopne
xchg
lret
sub
fcoml
int
test
push
imul
adc
inc
rcrb
cmp
adc
inc
ficompl
xchg
push
pusha
in
pop
jmp
std
fwait
mov
nop
scas
or
in
jecxz
pop
shll
jae
out
rol
leave
scas
gs
jp
lret
push
add
or
mov
rcrb
pushf
mov
pop
pop
imul
sbb
mov
data16
jnp
pop
out
push
movsl
arpl
jp
dec
push
cld
xchg
mov
add
loopne
hlt
sbb
fnstcw
add
in
jmp
and
and
les
imul
adc
bound
pop
out
add
or
cmc
popa
ret
cs
jbe
mov
ljmp
jl
pop
fucomip
imul
imul
sbb
jne
cmp
out
pushf
aas
sahf
pushf
jp
push
push
and
insl
pop
mov
push
mov
fcomi
outsb
lock
push
add
add
mov
aaa
dec
push
push
xor
mov
jne
jbe
push
xchg
pushf
jle
adc
ljmp
nop
push
sub
cmpsb
mov
adc
sub
fucomp
xchg
fsub
mov
pop
lahf
cwtl
push
jno
imul
nop
fbstp
out
mov
lcall
inc
mov
pop
xor
dec
or
pop
movsb
jecxz
scas
and
leave
repnz
or
jg
sub
mov
cmp
popf
sbb
aam
xor
lcall
sbb
das
jnp
add
push
nop
mov
imul
xchg
maskmovq
testb
and
stos
mov
push
aam
sbb
or
or
stos
push
fldt
dec
or
jbe
mov
xchg
mov
das
xchg
cwtl
hlt
lock
test
mov
xchg
jno
inc
or
ret
popf
ljmp
dec
xchg
jns
nop
xchg
lret
adc
sub
in
popa
cmp
pop
movsl
inc
icebp
sahf
lahf
leave
mov
jb
mov
push
jns
or
dec
inc
cli
xchg
insb
das
scas
add
andb
xor
push
fnsave
mov
mov
je
jecxz
icebp
mov
push
popf
and
popf
push
push
adc
in
fldenv
mov
loopne
rolb
push
push
lea
xor
xor
mov
and
push
pop
pop
xor
push
sahf
into
ret
jbe
lods
push
out
imul
mov
ss
loop
or
sub
sub
dec
pop
sar
adc
sti
mov
or
xor
xor
in
mov
dec
gs
and
lock
test
cmp
outsl
mov
add
test
cmpb
xlat
test
dec
int3
leave
ret
mov
fisttps
dec
cmp
jmp
sub
movsl
loopne
xchg
shl
xchg
xchg
test
jmp
mov
aad
inc
jmp
cmp
lret
and
es
adc
jp
rol
or
sub
sbb
call
lret
mov
mov
inc
loopne
cld
fnsave
and
pop
roll
dec
aam
mov
es
mov
ret
xchg
xchg
insb
cmp
mov
sahf
mov
sub
hlt
cmc
rorl
testl
mov
sbb
mov
mov
pop
ja
call
sbb
pop
ljmp
mov
imul
jbe
stos
pop
ljmp
push
test
xchg
jge
andb
cmp
jo
push
scas
sub
cmpsl
shrb
inc
aas
dec
fwait
shl
mov
divb
xchg
push
pop
mov
ljmp
pop
push
fwait
lea
or
in
loope
inc
int3
je
adc
or
ja
jmp
clc
xor
pop
ss
repz
add
shl
imull
cmp
lds
cwtl
cmp
in
jl
popa
rcr
aad
mov
and
adc
aad
out
daa
imul
scas
inc
imul
aam
jne
out
aaa
out
cmp
cmp
je
aam
mov
aas
dec
adcl
xor
cli
pop
jg
dec
call
ljmp
ror
rcl
cmp
and
fwait
enter
std
imul
mov
arpl
cmp
daa
push
testl
mov
in
xchg
mov
pop
dec
in
or
movswl
lahf
xlat
xchg
dec
xlat
rolb
inc
pop
shlb
in
fidivl
pushf
and
push
jb
daa
idiv
cmp
lret
out
and
fimuls
fcoml
jbe
sub
mov
push
loop
sbb
insb
adc
mov
enter
ja
rcrl
mov
sub
aaa
imul
shl
mov
dec
fadds
out
pop
je
insb
lea
push
push
pop
and
cmp
or
push
jg
outsl
lret
adc
push
shl
push
sbb
mov
outsb
xor
cwtl
mov
jne,pt
scas
lret
push
jmp
test
in
cli
scas
pop
push
je
mov
arpl
dec
sbb
dec
out
fwait
test
xchg
movsl
mov
or
popa
xchg
lock
lock
repz
adc
repz
cmpsl
lahf
and
sahf
xor
loope
icebp
xor
fildl
cmp
ljmp
fisubs
dec
dec
dec
les
es
or
stos
and
jg
or
cmp
xchg
stc
ljmp
nop
leave
adc
or
scas
les
lds
sub
inc
out
or
sti
sub
icebp
repnz
test
pop
in
jecxz
mov
test
pop
adc
es
ja
inc
test
mov
jmp
out
jnp
mov
loope
addr16
dec
mov
iret
pop
mov
xchg
insl
mov
add
lcall
jae
pop
jecxz
outsb
push
sahf
fsubrl
enter
gs
gs
mov
cmp
dec
push
scas
cmp
fidivrl
out
cmpsb
inc
aaa
sbb
repnz
popf
lods
negl
outsl
aad
adc
adc
fdivp
lods
loopne
mov
call
dec
or
not
mov
add
out
cli
xor
insb
pop
jnp
stos
lds
jbe
xor
mov
dec
and
xchg
cld
bnd
fwait
lds
test
xchg
mov
mov
dec
push
xor
and
mov
jl
xchg
lds
xchg
push
pop
fucom
andb
call
into
mov
outsb
xchg
out
inc
fcmovnb
adc
xchg
ficomps
adcb
call
stos
fmull
xor
pop
fisttps
iret
pop
lds
add
movsb
and
mov
movsl
rorb
adc
dec
stc
jecxz
test
mov
stos
out
add
mov
sbb
mov
inc
add
and
inc
aad
inc
flds
enter
aaa
lods
xor
push
stc
add
in
pop
pop
cmc
xchg
repnz
addl
lcall
mov
push
jecxz
pop
popa
fwait
mov
insb
icebp
pop
sbb
es
inc
adc
fwait
lods
sub
adc
jecxz
pop
outsl
and
jmp
testl
sub
adc
push
movsl
push
out
jmp
mov
push
jl
cmp
dec
aam
cmp
or
push
scas
inc
jb
inc
mov
fiadds
sbb
mov
mov
push
xor
mov
or
aad
out
bound
push
mov
cli
pop
xchg
jecxz
fwait
push
pop
inc
sub
cmpsb
stos
ds
rcll
in
shr
scas
stc
mov
fcomps
fidivrs
imul
js
shr
push
and
jnp
test
push
mov
pushf
ret
rolb
inc
scas
js
push
enter
loop
mov
js
out
pop
xchg
inc
aad
lret
fdivs
or
data16
std
adc
mov
imul
adc
mov
mov
int
xchg
or
push
adc
sub
lock
add
ja
mov
cs
test
add
xor
lcall
shld
xchg
mov
testl
xchg
jns
in
dec
mov
cltd
sbb
or
fiaddl
add
push
imul
pop
dec
int
arpl
cmpl
jmp
pop
jbe
ds
sti
add
dec
lret
ret
pop
pushf
fs
mov
scas
sub
lsl
shrb
rcl
and
lret
js
ja
or
mov
in
rsm
es
cmpsb
cmpsl
lret
icebp
jle
std
jecxz
push
das
lahf
mov
dec
rorb
dec
fcmovnbe
dec
cli
jae
adc
push
iret
jno
dec
insb
sbb
sbb
mov
push
xchg
pop
xlat
jmp
lock
and
insl
xchg
incl
push
icebp
test
out
push
pop
sbb
mov
pusha
lret
adc
add
mov
mov
popf
test
addb
jmp
or
sbb
test
popa
and
cld
lods
push
sbb
mov
dec
cmp
pop
and
rcl
mov
enter
push
mov
outsl
popf
push
pop
xor
lret
ret
jns
ficoms
loopne
push
lock
mov
out
xor
xor
xor
pop
popa
pop
jecxz
dec
jmp
lcall
add
cmc
arpl
fisubrl
repnz
pop
rcrb
mov
inc
inc
aaa
dec
std
ljmp
in
scas
sti
sbb
sbb
loopne
mov
add
add
jg
stos
cli
dec
shl
popf
adc
mov
sbb
push
push
out
cmp
pop
fcoml
lret
jns
fsts
pop
out
stos
jnp
in
insl
movsl
into
sub
pop
or
fildll
scas
jns
push
in
int
push
test
or
pop
sarb
push
jle
ljmp
stc
testb
arpl
adc
leave
fs
outsl
fistpll
dec
loopne
nop
sub
mov
std
jo
pusha
fstl
lods
add
shrb
jge
dec
loopne
nop
sub
mov
std
jo
pusha
fstl
lods
add
shrb
jge
dec
loopne
nop
sub
mov
cld
je
pusha
fstl
lods
add
xor
hlt
jge
dec
loopne
nop
sub
and
scas
adc
stos
addr16
fbld
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
inc
cltd
push
mov
jb
or
bound
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
imul
cmp
mov
jb
add
adc
and
xor
ret
or
sbb
es
or
imul
add
inc
push
adc
test
xchg
add
insb
mov
ret
repnz
leave
iret
out
or
pop
xchg
ss
les
outsl
cmp
jge
xchg
mov
dec
cli
lds
sbb
faddl
sbb
pop
sbb
pop
mov
adc
repz
fdivl
push
ret
outsl
aam
jl
cli
mov
xchg
jbe
cmp
push
mov
in
xor
in
pop
repnz
jnp
cmovns
in
punpckhdq
fists
inc
fisttpll
or
sub
mov
cltd
push
mov
jb
add
adc
and
xor
ret
or
cmp
sub
jns
add
cmp
outsb
mov
leave
inc
mov
mov
adcl
cmp
jnp
sub
and
inc
xchg
jle
and
sarb
mov
out
and
sbb
cmp
shlb
fimull
shll
add
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
push
out
fcoms
sub
push
jo
mov
dec
arpl
sub
and
sbb
fdivs
test
or
test
test
or
dec
mov
push
jge
rorb
jmp
cli
insl
cmp
push
iret
scas
es
mov
pop
dec
jg
jne
fsubrp
lret
mov
test
jmp
lret
adc
sbb
mov
pop
call
xchg
inc
insb
or
fucomi
pop
dec
incb
repz
mov
xchg
jno
mov
dec
sub
or
enter
das
or
loop
and
adc
add
fsubl
pop
mov
cmpb
fistl
popa
jge
out
adc
add
jnp
bound
mov
inc
xchg
cli
mov
adc
call
inc
sahf
xchg
inc
bound
inc
nop
or
push
fcomps
repnz
pop
stos
fstps
xor
mov
jno
mov
pop
loope
push
gs
test
dec
stos
dec
mov
out
adc
lds
bound
inc
mov
out
push
mov
xor
lods
daa
inc
icebp
stos
pusha
sbb
shrl
in
mov
or
mov
ror
mov
mov
in
pop
aad
sarl
sbb
repz
out
je
sbb
mov
cli
pop
or
xchg
or
jno
popa
dec
jne
sbb
xor
adc
cltd
mov
or
or
pop
fimuls
movsb
iret
fnstenv
and
mov
test
das
push
popa
push
outsb
xchg
xchg
cmp
fst
aad
bound
pop
popf
mov
xchg
xchg
jge
push
pushf
daa
in
stos
adc
fs
insb
mov
xor
shrl
mov
jp
cmp
in
test
test
sbb
mov
xor
imul
sub
push
pushf
pop
stc
rolb
sbb
sub
es
jecxz
push
pop
es
and
stos
inc
shrb
lods
lret
cmp
jle
sub
dec
roll
xorl
xchg
inc
sbb
inc
and
and
cltd
cwtl
push
and
cs
mov
jg
cmp
push
loop
mov
les
cmpb
jecxz
cs
or
push
dec
jnp
inc
sbb
and
std
movsl
arpl
jmp
or
mov
jns
cwtl
cmc
add
cmp
fdivp
push
mov
lods
nop
imul
lret
ljmp
push
jae
xchg
aam
xchg
and
dec
cmp
in
daa
jecxz
pop
jb
mov
add
push
xchg
push
xor
fldz
mov
popf
in
cmp
shrb
inc
aam
mov
pop
std
fwait
push
hlt
lret
sub
adc
pop
add
inc
iret
stos
fsubs
ss
dec
or
or
xor
pop
rcrb
fimull
dec
sub
mov
test
sarb
dec
sub
scas
loopne,pn
jecxz
insb
in
push
push
call
jb
mov
jle
ret
cmpsb
xchg
bound
rcl
sub
or
sbb
xor
xchg
aad
cmp
shrl
das
mov
orl
sbb
das
daa
lds
arpl
jge
cwtl
adc
repz
jne
in
inc
movl
xchg
fs
push
test
xchg
push
stc
out
cwtl
push
and
ja
cmp
fldcw
shrl
push
sar
int3
xchg
cltd
jecxz
or
dec
pop
in
and
sbb
and
sub
stc
outsb
arpl
add
notb
inc
ret
adc
sarl
sbb
cmpsl
out
dec
dec
jg
ss
mov
int
scas
testl
pushf
popf
jge
cmp
imul
rolb
mulb
pop
dec
outsl
push
repz
or
adc
cltd
mov
ror
arpl
mov
and
mov
and
arpl
sbb
inc
xchg
and
cmp
pop
adc
out
xchg
jecxz
ficoms
cli
ret
dec
cmp
cmc
addr16
rorl
cmp
mov
push
xor
call
lret
pop
or
in
lret
mov
ss
cmp
sbb
sbb
and
fs
cmp
mov
jmp
inc
outsb
aad
push
sti
inc
aam
loope
data16
repz
mov
inc
pop
data16
add
mov
decl
xchg
cltd
repz
mov
mov
andb
pop
jne,pt
pop
mull
add
push
push
jecxz
sub
dec
or
adc
jmp
and
ror
js
lahf
inc
xlat
push
out
mov
lahf
jecxz
adc
jo
xchg
shlb
mov
cwtl
push
or
inc
shlb
in
outsl
xor
jmp
sti
data16
call
cwtl
push
push
sub
aam
mov
sub
sub
inc
mov
and
xchg
negb
imul
push
add
fs
bound
lods
imul
fsts
test
dec
iret
mov
push
inc
ret
cwtl
jmp
out
inc
adc
data16
imul
xchg
lea
and
ret
testb
in
xchg
sub
cmp
push
sbb
jmp
fcmovne
rcll
adc
lcall
movsl
fdivl
pusha
and
push
dec
jae
mov
daa
movsl
and
andb
or
imul
sub
mov
xchg
adc
ja
lret
clc
testl
fisubl
popf
and
clc
xor
mov
add
inc
xchg
sub
cmpsb
inc
int
sbbb
dec
rolb
inc
pop
add
or
dec
dec
xor
clc
mov
jns
jne
jo
out
aam
sub
xlat
sbb
add
xchg
rolb
inc
sbb
xor
adc
cmp
cmpsb
xchg
push
mov
dec
cs
or
aad
jle
jbe
or
out
clc
sub
xchg
mov
fs
xchg
lret
dec
fnstsw
iret
shrl
and
mov
repz
inc
in
negl
aas
xorl
jl
fnstcw
aaa
xor
ret
lret
fwait
xchg
pop
sub
fisttpll
ss
in
sbb
and
sub
push
lods
ss
data16
dec
lods
mov
xchg
mov
insl
lret
rcrl
idivb
in
add
in
imul
pop
sahf
lds
ss
pushf
jbe
ds
pop
ret
pop
sbb
das
jl
shll
fistpl
loopne
cmp
out
sub
xchg
movsb
fwait
xor
mov
jecxz
xorb
out
xor
cmp
loop
pop
mov
push
pop
push
mov
icebp
jne
ret
jno
jmp
insl
mov
fldcw
mov
cs
ret
inc
test
or
loope
int3
jecxz
addr16
xlat
dec
xlat
loop
xchg
mov
imul
bound
ret
loop
cmp
sarl
arpl
cs
sub
test
push
inc
popa
cmp
int3
cwtl
xchg
ficoml
stos
mov
and
nop
jo
icebp
ljmp
or
jno
xchg
sub
dec
sub
repnz
jnp
mov
lea
jnp
cmpb
adcl
shrl
xchg
jns
cmovg
xchg
and
sahf
jl
or
push
sub
test
call
aam
mov
xchg
cmpsb
and
and
dec
mov
and
mov
ds
test
fsubl
insb
push
clc
push
dec
dec
xchg
sub
or
push
lock
pop
fwait
pop
adc
jbe
enter
xchg
in
lods
cmpb
aam
jb
call
ror
add
test
or
push
icebp
fwait
adc
lock
movsl
in
sub
lret
cld
lods
out
fcmovnu
rcrl
add
or
jmp
call
fidivrs
mov
jg
sub
rcrb
xchg
lret
icebp
js
hlt
int
pop
mov
scas
leave
sbb
lock
enter
cmp
es
test
inc
xor
insl
out
aad
jbe
notb
cmpl
lds
loop
mov
fmull
add
xchg
sbb
jno
fnsave
aam
lahf
sub
addr16
test
ljmp
rclb
jmp
pusha
adc
add
into
mov
in
push
inc
cmpsl
sub
ja
addb
inc
jg
push
pop
add
sub
sbb
pop
sbb
clc
sarl
mov
mov
sbb
adc
cmp
mov
jnp
std
add
pusha
adc
scas
inc
lock
adc
pop
adc
pop
mov
sahf
rcrb
adc
lods
jbe
test
lahf
loope
mov
mov
out
xchg
hlt
mov
test
ss
test
rcll
inc
cltd
loope
shld
fildl
pop
pop
nop
dec
out
mov
and
mov
push
mov
push
mov
pop
or
in
in
mov
jp
mov
pusha
xor
jmp
orl
xchg
sub
mov
iret
jae
xorl
xchg
dec
sbb
aad
cmp
sub
add
popf
aad
pop
xlat
cmpsb
andl
neg
pop
daa
inc
ret
stc
dec
jl
imul
cmpsl
jecxz
lret
jge
mov
cmpsb
xlat
pop
jle
mov
and
jno
inc
pop
testb
mov
mov
adc
out
or
pop
movsb
shlb
fdivl
ret
mov
ljmp
pop
mov
and
jns
addr16
mov
or
outsl
lock
add
xchg
das
dec
pop
inc
push
mov
and
sub
cld
imul
add
mov
fxch
pop
inc
and
dec
arpl
sub
sub
test
xchg
push
pushf
add
rolb
mov
mov
or
cwtl
cmpsl
and
out
getsec
push
xchg
xor
int3
fsubrs
pushf
pusha
scas
notb
in
sbb
lahf
out
mov
imul
inc
and
jg
xlat
mov
into
sub
xor
ja
mov
fisttpl
pop
and
push
sbb
cmpsl
xor
and
stc
jge
and
dec
adc
sub
add
or
lock
mov
in
add
rol
andl
jp
add
sti
ret
cs
dec
sahf
das
mov
inc
pop
stos
test
sbb
call
push
jle
pop
nop
jne
add
fnstcw
mov
stc
arpl
out
movsl
adc
mov
sub
inc
in
ss
jns
sahf
add
lret
loop
repz
and
stos
xchg
and
dec
mov
dec
and
dec
cmp
in
aam
dec
clc
and
mov
les
lret
dec
arpl
cmp
sbb
inc
and
addr16
jge
adc
rcrl
mov
leave
and
daa
xor
cld
pop
mulb
das
jns
push
xchg
cwtl
cmpsb
test
mov
cmc
xchg
and
inc
mov
mov
and
inc
add
sub
xchg
lret
loop
popa
popf
pop
jp
test
xchg
lcall
fcomps
add
fwait
sub
leave
je
mov
jmp
fnstenv
cmp
sbb
mov
push
fstl
adc
aam
jb
xor
mov
adc
dec
aam
ficompl
mov
mov
repz
cs
and
sub
add
fisttpll
dec
insl
pop
and
mov
je
xchg
jne
test
movsl
or
out
inc
aas
dec
xchg
mov
fiadds
xchg
jge
mov
push
mov
in
inc
push
mov
xchg
cmpsl
push
sti
shlb
sahf
xor
enter
jae
fisubs
ficomps
mov
es
mov
enter
scas
inc
cld
push
inc
idivl
sbb
push
dec
mov
cmp
push
mov
sbb
push
addr16
mov
shlb
jb
and
sub
xchg
aas
or
jb
sub
icebp
lret
inc
xor
enter
and
ljmp
roll
scas
cmc
mov
es
icebp
mov
repnz
jge
cwtl
sub
dec
loop
push
cmp
lds
lds
cld
cmp
add
cwtl
imul
adc
shrb
imul
repnz
mov
aad
xchg
dec
inc
xchg
aam
movsb
inc
psrlq
mov
jns
imul
xor
lods
fistl
insb
add
aam
test
cld
jg
mov
add
inc
pop
sub
add
fidivrs
aam
mov
sahf
dec
and
dec
std
pop
sub
outsb
mov
outsb
dec
adc
push
fs
std
stc
xchg
aas
loopne
push
sub
mov
lahf
icebp
shrb
pop
lcall
je
clc
enter
mov
int
test
js
lock
movsl
xchg
sahf
sbb
sbb
cmp
psraw
fidivs
adc
cld
out
push
push
add
cmp
mov
iret
shl
mov
imul
cld
popa
xor
dec
idiv
mov
xor
ret
inc
ja
xor
mov
mov
push
jecxz
in
pop
jle
cmp
jne
inc
fwait
ds
lret
sti
mov
loope
and
pop
test
pop
daa
xor
push
bound
stc
pop
out
pop
insb
or
mov
lds
test
dec
stos
sbb
sahf
pop
push
mov
sub
js
sarl
sti
inc
ljmp
xor
ret
in
sar
inc
ss
push
mov
daa
adc
xchg
and
into
push
jg
xor
or
addl
mov
sbb
xchg
dec
xor
fnsave
pop
cmp
cmpsl
imul
loope
cmp
cli
pop
mov
or
mov
cmp
jbe
cmp
mov
add
sbb
arpl
cmpsl
mov
adc
sbb
fisubrl
loop
int3
testl
adc
fwait
into
push
idiv
push
jp
jnp
adc
std
inc
and
ja
mov
sub
cmc
mov
sub
pop
inc
andb
iret
cmp
sub
sbb
cs
cmp
daa
inc
rorb
cli
xor
sub
adc
pop
clc
mov
sub
add
push
shll
aad
and
iret
out
mov
adc
sbb
adc
and
pop
inc
add
and
mov
pop
orb
ds
inc
dec
inc
xor
aaa
cmp
push
xchg
movsb
dec
sbb
sbb
aad
dec
ret
cs
add
jl
cmc
lds
int
pop
jmp
lods
mov
sbb
dec
clc
xchg
push
mov
push
jecxz
xlat
mov
rcrl
push
mov
xor
mov
mov
mov
cs
out
jge
daa
sbb
fisubrs
push
aas
mov
in
cmp
movsw
lock
jmp
sarb
lret
lret
dec
lahf
test
pushw
sbb
cmp
jl
xchg
xor
push
test
sub
sbb
add
adc
lock
push
jl
imul
sbb
or
out
fisubs
iret
mov
mov
mov
add
cmp
jne
stos
sbb
lods
insl
ljmp
lods
mov
movsb
sbb
aad
nop
les
or
aas
test
xchg
xor
lret
mov
xchg
add
adc
inc
aam
lods
inc
imul
mov
cmp
aad
xchg
int3
xchg
adc
mov
mov
pop
popf
loop
cli
add
adc
lahf
addr16
imul
out
ret
fmuls
lods
icebp
mov
mov
pop
pop
mov
xchg
adc
movsl
imul
call
and
loop
pop
imul
pushl
adc
fbld
cmp
stos
clc
fdivr
push
jb
adc
sti
addb
pop
cmp
push
rcrl
or
cld
out
mov
fcoms
lock
cltd
sbb
cltd
and
sub
and
bound
jl
outsl
pop
sbb
pop
pop
insb
int3
adc
stos
mov
or
je
mov
nop
push
push
stos
mov
or
stos
inc
mov
dec
int
push
jp
dec
hlt
and
iret
mov
dec
or
mov
cs
mov
mov
cmp
clc
sbb
mov
add
andl
je
movsb
jmp
or
in
in
mov
test
mov
adc
loop
xor
enter
insl
cmp
inc
jp
sbb
add
cmp
cmp
popa
pop
cmp
sti
adc
push
insl
add
jb
loopne
pop
push
and
shr
out
loop
js
dec
fdivrp
add
negb
movl
outsb
ret
addr16
dec
pop
and
sub
pop
mov
call
cld
cmpsb
lock
ljmp
scas
add
paddsw
shlb
sub
mov
sub
pop
mov
mov
out
test
jns
call
xchg
push
lcall
repz
inc
push
xor
pop
lds
fcomps
dec
aam
scas
mov
sub
cmp
jno
dec
jg
fiadds
daa
or
pop
ljmp
sahf
fstpl
pop
fldcw
ret
mov
fldt
clc
mov
mov
dec
cli
xor
sbb
fcmovnb
mov
ss
push
ss
sub
add
push
push
jns
or
sar
lcall
repnz
out
dec
jae
idivl
ret
loopne
sub
mov
mov
cmp
xchg
loop
jecxz
push
ret
adc
nop
dec
outsl
sub
outsl
test
mov
mov
push
dec
inc
mov
inc
push
pop
add
mov
cmc
cli
and
pop
dec
lods
mov
in
or
pop
scas
add
stos
adcb
aaa
pop
lret
mov
sbb
mov
popf
add
dec
test
loop
or
mov
xlat
mull
xor
mov
push
ret
jp
ja
sarl
sbb
and
xlat
insl
test
imul
cmp
mov
cmp
cld
nop
cld
sbb
mov
js
jne
jno
pop
bound
dec
jo
mov
jns
cmp
inc
sbb
aad
mov
je
sub
mov
lret
xchg
ja
cmp
aad
jmp
jns
dec
jb
aad
in
sbbl
aas
jo
mov
test
loopne
sub
rcl
mov
out
popf
orb
push
sub
mov
sti
mov
sub
xor
jb
mov
sub
sub
pop
insl
inc
test
movsb
cmp
fdivr
xchg
mov
jmp
in
in
adc
add
mov
xorl
lock
or
scas
xchg
pop
ret
jge
shl
aas
sbb
mov
mov
push
movb
test
lods
push
add
sbb
push
std
mov
xor
sub
sarb
vfmsubps
push
cmpsb
into
jmp
and
pop
push
je
stos
sub
sub
pop
imul
xor
pop
cwtl
int3
lods
and
sub
or
lret
inc
cmc
inc
push
pop
mov
pushf
ret
sub
mov
jmp
ja
sbb
mov
mov
fldl
ret
xor
sub
and
jmp
dec
or
ja
imul
adc
fisttps
mov
jb
dec
sahf
xor
inc
sahf
sub
or
pop
dec
leave
jmp
mov
mov
nop
lock
int
xchg
daa
stc
push
adc
insl
arpl
out
or
fnsave
and
add
inc
cmpsb
jecxz
add
stos
add
and
xor
xor
mov
outsb
adc
jo
std
sub
outsl
mov
mov
cmc
faddl
jnp
push
inc
lret
arpl
mov
das
scas
mov
mov
loope
popf
cmp
shrl
loopne
inc
xchg
jnp
mov
lea
loope
sbb
std
mov
out
fwait
mov
mov
mov
dec
mov
aam
imul
das
js
sbbb
mov
mov
and
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
stc
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
mov
cmc
rcrl
mov
xchg
mov
testl
cmpsl
jb
into
dec
push
addr16
gs
outsb
pop
pop
daa
pop
daa
fcmovbe
scas
repnz
cmpsl
ds
cs
jg
push
addr16
xlat
pop
aaa
dec
daa
push
into
pop
or
push
loopne
mov
pop
mov
jge
add
adc
popa
adc
rcl
loop
sahf
and
cli
js
pop
add
in
jns
sbb
xor
cld
outsb
cmp
dec
jl
mov
push
jg
sbb
sbb
jns
cmp
pop
scas
fwait
addr16
inc
sub
inc
jmp
cwtl
xorl
scas
xchg
ret
std
dec
push
lret
push
loop
pop
sub
xchg
leave
jb
bound
xlat
add
into
pop
aas
pop
cs
addl
inc
out
mov
pop
add
inc
cmpsb
push
fisubrl
cmp
mov
fdivs
daa
lahf
divl
add
sti
sub
cli
ja
inc
cmp
aaa
in
clc
rcrb
xchg
xchg
xchg
scas
push
pop
push
pcmpgtb
insb
aaa
dec
inc
xlat
mov
ljmp
jmp
ds
jnp
imul
jp
push
aaa
aaa
sub
scas
lret
in
xchg
loop
in
mov
rcrl
es
add
pop
add
pop
cmovb
xchg
ret
xchg
fstl
fidivs
cs
push
ja
addr16
outsb
pop
pop
aaa
dec
daa
mov
testl
cmpsl
ds
cs
push
ja
addr16
outsb
pop
pop
aaa
dec
daa
mov
dec
hlt
xor
insb
dec
push
rcr
jge
and
xchg
call
dec
movsb
mov
addl
aam
mov
inc
mov
andl
cmp
cmp
int
leave
repz
stos
jns
cwtl
sbb
popa
je
mov
lock
popf
inc
jae
push
movsb
loope
or
push
pop
inc
sbb
mov
imul
clc
rcll
test
lret
scas
fldt
lds
jno
bound
repnz
ja
pop
jge
cmc
test
orl
push
sub
rcrl
es
inc
xchg
shrb
cmp
les
mov
jge
add
xchg
pop
testl
ds
ret
pop
cmp
mov
pop
daa
mov
mov
out
adc
rcl
dec
xchg
adc
push
jp
loope
lock
mov
adc
inc
sbb
or
mov
or
je
imul
inc
fwait
mov
into
sub
fnstsw
sbb
jl
enter
jno
sbb
mov
xchg
sbb
in
mov
pop
stc
stos
jno
xchg
nop
mov
sbb
cltd
cld
mov
jno
aas
pop
pop
mov
lret
push
add
mov
popf
jb
enter
sub
mov
lea
mov
ffree
iret
fsubl
push
mov
cmp
outsb
aaa
mov
lret
out
sbb
inc
mov
popa
xchg
xchg
out
xchg
pop
outsl
notl
adc
es
adc
out
xor
daa
push
enter
mov
mov
dec
dec
or
jg
lock
loope
js
xchg
mov
mov
in
fidivrl
xor
mov
inc
fisttpll
cld
mov
enter
push
in
push
pushf
sub
out
add
sub
sub
push
shrb
inc
fsts
setg
mov
cli
cli
pop
scas
std
shlb
je
jnp
cmp
xchg
daa
test
test
clc
mov
scas
popa
test
iret
mov
repnz
testb
mov
and
sahf
inc
sbb
push
push
das
push
sub
es
push
scas
lea
outsl
mov
jnp
sbb
inc
add
fbstp
xlat
outsb
lea
not
shr
mov
jbe
push
jle
jl
mov
std
test
or
int3
je
fs
or
in
cmpb
ds
incl
iret
and
mov
cmp
push
mov
bound
jb
test
addl
push
mov
mov
int3
mov
xchg
test
inc
mov
stc
and
movd
mov
xor
std
inc
sbb
xor
int3
shr
mov
push
pop
icebp
push
outsl
int
aaa
out
cmpsb
sbb
dec
mov
daa
dec
sub
adc
xchg
add
inc
mov
mov
int3
pop
mov
pop
outsb
inc
loope
xor
xor
inc
cltd
out
xchg
mov
fisubrs
bound
lret
jg
xor
cltd
imul
cmpsl
ret
ss
pop
push
xchg
jmp
dec
shrl
adc
lds
lret
dec
xor
outsb
int3
sahf
pop
iret
jnp
dec
sbb
pop
test
sbb
sub
sbb
mov
imul
xchg
jmp
add
cmp
inc
or
xor
test
push
test
rcrl
je
jmp
push
xchg
jg
jae
jbe
sub
mov
rclb
cmc
pop
jmp
cmp
pushf
lods
dec
repz
xchg
cmc
xor
ds
jno
cmp
or
pop
iret
add
mov
inc
lds
cld
lods
test
inc
lret
mov
sar
lahf
mov
mov
sbb
mov
xor
push
jl
or
xchg
jg
and
add
sbb
pop
in
push
je
popf
in
sbb
xchg
xchg
hlt
shrl
jbe
add
push
mov
out
jl
add
cmp
or
add
outsb
inc
jp
jbe
and
jbe
or
sbb
out
sub
dec
xchg
pop
mov
std
sub
outsl
daa
inc
outsl
icebp
dec
push
mov
cmp
adc
push
push
push
adc
and
mov
test
int3
aad
aaa
cmpl
in
aad
dec
je
in
adc
sahf
jecxz
dec
mov
or
popf
sub
xchg
es
jmp
adc
xchg
push
int3
jmp
mov
in
lea
ret
cmc
dec
sarb
in
mov
xor
add
ret
aad
aaa
sbb
repz
repz
sbb
or
test
mov
lea
sbb
mov
fidivrs
mov
mov
push
mov
je
ret
pusha
adc
test
pop
lods
adc
dec
fsubrp
push
icebp
in
out
dec
leave
shrb
xchg
movsl
shrb
movsl
push
test
inc
fisttps
test
jb
sub
jno
cmp
hlt
loop
pusha
in
xor
shl
insb
and
or
cli
out
mov
add
les
scas
xchg
fsubl
imul
imul
dec
xchg
cli
cmp
sahf
fistl
lea
xchg
repnz
mov
and
xchg
test
dec
dec
cmp
push
sarl
outsb
jne
push
pop
cmp
pop
mov
inc
adc
data16
into
add
cmpsb
xor
popf
fcmovb
in
sbb
idivb
outsb
in
or
test
cmp
into
lds
add
jecxz
dec
frstor
jne
jne
mov
fwait
dec
dec
ds
outsb
cmp
fbld
jecxz
cmp
popf
fs
sbb
das
mov
imul
mov
insb
jns
gs
aaa
inc
add
outsb
sub
jno
mov
sbb
les
inc
iret
repz
outsb
mov
mov
ljmp
mov
and
scas
pop
gs
mov
scas
jecxz
add
imul
rorb
sbb
or
out
mov
lret
hlt
enter
push
shll
dec
and
les
in
inc
pop
push
stos
daa
in
enter
pop
fs
xchg
pop
pop
repz
pop
sti
fnclex
sti
push
and
jl
jl
cmp
lret
addr16
mov
sub
pop
xchg
mov
imul
in
mov
dec
out
rclb
aad
pop
inc
adc
mov
movsl
outsl
pop
mov
shlb
inc
push
ss
cmpsb
xchg
adc
mov
cmp
cmp
adc
mov
hlt
call
lods
inc
xor
xchg
jne
xor
cmp
sbb
sub
mov
std
sub
pop
xor
jnp
push
scas
mov
or
push
mov
mov
adc
and
xor
clc
test
aam
push
adc
cmp
movsl
mov
xchg
push
add
push
or
inc
mov
or
cmp
inc
push
jle
cmpsl
mov
ljmp
xor
in
mov
sbbb
frstor
icebp
fidivrl
sbb
push
jnp
int3
pop
adc
add
popa
mov
xor
rcr
into
mov
int3
clc
lods
mov
repnz
sub
stc
mov
loope
shll
dec
push
and
icebp
jb
aas
jne
mov
pop
pop
call
push
mov
repnz
mov
cmp
sbb
cmpsl
cli
or
add
push
push
cmpsl
jns
push
pop
cmp
dec
movsb
and
repz
icebp
pop
or
scas
mov
dec
or
lea
cmp
xchg
in
jmp
lcall
lods
mov
mov
sbb
mov
fistl
lods
or
inc
xor
jno
dec
hlt
scas
cmp
jbe
inc
add
push
mov
addr16
test
push
dec
inc
mov
movb
jnp
lcall
repnz
jbe
or
xchg
and
mov
loope
add
dec
mov
cmc
aas
adc
lret
clc
testl
lahf
mov
pop
aad
imul
xchg
jmp
out
ja
movsl
pushf
ret
out
pusha
mov
notl
or
sahf
loope
sti
and
pop
jnp
hlt
jecxz
and
push
jmp
dec
mov
sbb
sbb
movsb
jg
xchg
cmp
fs
aam
shrb
mov
std
inc
inc
sbb
mov
fucomi
addr16
arpl
and
mov
cli
sbb
xchg
add
mov
adc
mov
mov
call
jg
fimull
jne
inc
mov
sti
lcall
push
insl
add
das
test
jne
jns
adc
in
sub
shl
stos
cwtl
push
stos
sar
xchg
iret
mov
push
pop
xor
in
pop
cmpsb
sti
sbbl
fwait
ljmp
mov
enter
andb
jb
push
xor
mov
nop
mov
fmul
mov
mov
clc
in
add
cltd
dec
arpl
mov
fs
sbb
jb
popa
mov
add
cmp
jp
outsb
fucom
cld
dec
inc
mov
sti
mov
mov
push
add
dec
stos
or
cmp
xor
lea
pushf
loope
jo
movsl
mov
jl
sarl
pusha
outsl
jno
std
pop
pop
lods
dec
pusha
daa
sti
jge
jg
cmp
mov
cmpsb
jns
fdivrs
xor
mov
push
aas
in
aad
fdivrs
mov
inc
mov
and
repnz
sbb
mov
call
sbb
ja
clc
aas
mov
fnstcw
xchg
xor
aas
mov
sub
lods
into
push
jp
cltd
mov
leave
popf
cs
cmc
inc
xor
inc
xor
movsl
cmp
mov
push
jne
sub
rorl
cmp
push
push
lock
jne
push
jge
mov
mov
add
jmp
jnp
pop
test
mov
adc
data16
outsl
xchg
pop
adc
and
lods
inc
sub
test
out
sarl
mov
inc
pextrw
sub
lahf
pop
cmp
mov
and
or
xor
ret
jne
into
movsl
lea
and
push
jg
xchg
xchg
adc
jae
mov
sbb
dec
repnz
jae
pop
sbb
fwait
insb
int3
jb
movb
dec
xchg
sub
movsl
push
pop
mov
sub
sub
cwtl
rolb
cwtl
pop
push
out
roll
inc
ret
movsl
pop
iret
hlt
cmp
aaa
ja
daa
aad
dec
xchg
add
sub
cmpsl
aas
nop
push
add
mov
repnz
sahf
data16
mov
add
push
in
out
add
insb
pop
jge
or
lcall
xor
and
mov
bound
sti
fbstp
ja
inc
mov
lods
mov
jb
add
pop
imul
and
rsm
mov
fdivp
push
ja
sbb
shlb
sub
mov
mov
mov
and
sbb
sbb
xchg
sbb
xor
cmp
bound
pop
cmp
xchg
sbb
xlat
hlt
outsb
xor
add
aaa
test
sti
mov
addl
mov
sbb
js
push
les
xor
xorl
inc
xchg
push
movl
push
icebp
mov
jmp
sbb
or
std
dec
cmp
cmp
hlt
push
and
mov
enter
test
cmp
mov
fiadds
iret
push
sub
cmc
pop
adc
rclb
or
and
mov
aaa
loope
xchg
sbb
sbb
xchg
inc
testl
int
pop
ret
lock
dec
add
and
pop
addr16
fildll
pop
xchg
leave
jnp
lea
popa
insb
fcoml
pop
lds
and
sahf
fsubrp
push
lods
lock
and
neg
mov
xchg
popa
hlt
xchg
bound
sbb
mov
or
mov
xor
pop
sahf
int
fs
and
jb
repz
mov
fidivrl
cmp
or
add
mov
mov
pop
sbb
and
mov
mov
daa
outsl
popa
and
outsb
push
in
repz
ljmp
aad
and
lret
imul
inc
or
es
jmp
jbe
sbb
dec
cmp
sub
roll
sub
xor
shll
push
add
fnstenv
dec
aad
jo
mov
inc
adc
and
fnsave
dec
mov
out
mov
mov
mov
mov
ljmp
in
adc
jb
divl
mov
sub
test
dec
fwait
mov
push
cmp
js
push
jge
xor
pop
jmp
lcall
pop
or
cmp
pop
testl
stos
inc
lds
dec
loop
inc
add
test
push
or
mov
dec
jno
add
mov
rolb
mov
lods
pop
and
fisttps
add
push
xlat
lds
sub
lret
push
pushf
subb
xor
jo
cmpsl
mull
push
fs
mov
mov
dec
stos
out
test
hlt
pop
and
fildl
cmp
mov
pushl
xchg
mov
cmp
jne
jecxz
ds
mov
add
ljmp
fwait
outsb
cmc
lret
mov
mov
stos
lods
xor
sub
jnp
xor
mov
pop
rep
jno
or
xor
mov
das
push
inc
orl
or
loopne
jge
xor
sub
in
cmp
daa
icebp
aaa
jecxz
fnsave
sub
inc
inc
push
orb
add
in
or
xchg
adc
call
add
loop
push
aam
lock
out
sub
and
jns
loop
push
or
movsl
push
add
dec
jp
es
hlt
outsb
mov
clc
jo
test
rol
xchg
addr16
adc
enter
jno
or
sbb
xchg
mov
push
or
ret
adc
stos
data16
dec
and
jl
and
out
pop
data16
imul
inc
movsb
and
push
imul
jno
jno
xchg
sar
add
outsb
mov
imul
add
push
repnz
adc
out
xor
push
mov
ret
sub
xchg
mov
cmpsl
fsubrs
mov
movsb
in
xlat
cmc
adc
cs
jp
bound
test
lea
divb
sbb
and
in
pop
sbb
insb
add
mov
imul
xchg
int
sub
je
xor
jle
aad
lds
lea
in
loopne
out
test
jbe
lock
mov
outsl
lods
push
pavgb
gs
fidivs
cmp
sbb
sbb
fisubrs
push
int3
mov
push
mov
jbe
mov
lds
lods
popf
aad
cmp
mov
inc
dec
stos
dec
test
mov
bnd
inc
insl
fstl
movsl
cs
stos
shlb
adc
push
popa
jmp
push
adc
daa
es
dec
clc
dec
inc
in
lods
jle
jecxz
int3
adc
sub
xor
in
adc
sbb
sbb
hlt
movsb
xchg
mov
vandnps
mov
outsl
into
outsl
inc
outsl
dec
push
inc
mov
adc
push
fstpl
inc
daa
and
jae
cld
enter
sbb
enter
icebp
lahf
lods
imul
iret
adc
lods
xchg
sahf
lea
cmpl
pop
lret
data16
cmp
xchg
rcr
je
add
mov
cltd
shrl
ret
xchg
mov
xor
pop
inc
jne
xor
adc
mov
push
fists
dec
testb
adc
inc
pop
fistpll
cmp
cmc
mov
mov
xchg
lcall
dec
roll
imul
pop
mov
dec
mov
cld
pop
ficoml
push
loop,pt
sbb
mov
imull
inc
nop
and
sub
cmp
or
lcall
sub
ds
pop
and
xchg
popf
loope
adc
mov
xchg
fwait
xorb
sbb
ret
push
ss
push
cmp
sub
push
fsubl
rcl
jns
mov
sub
cmp
aad
push
xchg
add
xor
enter
sub
shlb
and
mov
fnstcw
mov
push
push
lds
cmp
pop
jbe
dec
je
dec
outsl
rorb
adc
cli
or
into
mov
mov
and
xchg
fisubrl
mov
shrb
mov
test
adc
xor
xlat
clc
mov
adc
jl
xor
or
pop
outsb
test
push
sahf
in
das
mov
push
xor
stc
xor
andb
idivl
jnp
sub
jle
or
dec
into
inc
sbb
fs
imul
lods
jno
mov
xor
mov
fnsave
sbb
stc
and
sbb
push
ja
fwait
repnz
pop
push
add
pusha
xchg
and
jl
dec
jge
mov
jo
xor
pop
inc
mov
test
sub
add
xor
sub
lret
add
sub
sbb
pop
sub
pop
mov
lods
std
and
out
stc
outsl
dec
loope
push
mov
inc
call
imul
nop
dec
mov
push
adc
fnstsw
je
cli
js
push
jns
das
sub
in
pop
jmp
sti
xchg
dec
and
and
dec
stos
ljmp
cli
and
arpl
cmp
iret
mov
sub
cmpsb
shlb
scas
push
pop
das
rorb
inc
dec
mov
movsb
or
jle
scas
in
and
jg
leave
lock
dec
dec
repz
fsubrp
cwtl
and
jmp
cmp
pop
loop
add
xchg
mov
jmp
inc
std
cmpsl
jno
pop
cmpsl
ret
dec
scas
enter
mov
cmp
adcl
into
lods
push
push
jmp
lret
js
sub
or
xchg
pop
dec
daa
stc
sbb
dec
lret
sbb
xor
inc
and
cmp
dec
icebp
cmpsb
or
xor
cltd
and
inc
mov
out
mov
fdivl
push
jnp
je
cmp
loope
sbb
xchg
inc
mov
and
adc
js
das
adc
stos
cmp
es
mov
sbb
mov
nop
sub
mov
or
fcomps
adc
push
faddp
pop
into
mov
inc
jmp
jne
int3
add
mov
enter
xor
test
idivl
shl
ss
mov
rolb
hlt
and
loope
orb
fiaddl
loopne
je
dec
pop
push
cmp
vmovntpd
loope
lea
jecxz
adc
mov
cld
adc
pop
fcom
push
jmp
adcl
ret
jmp
xchg
dec
push
decl
pop
push
jnp
and
push
mov
xor
and
dec
sbb
clc
pop
sub
adc
sub
xchg
imul
ret
mov
mov
lret
scas
cmp
or
cld
imul
xchg
sub
inc
xchg
mov
xchg
jns
les
sbb
inc
cltd
xchg
add
setne
dec
xchg
pop
call
pop
lods
test
push
xchg
imul
rdpmc
xchg
sub
sbb
dec
movsl
cli
and
mov
rcll
jo
lea
inc
imul
std
mov
repnz
push
mov
fidivrs
shll
adc
fistl
popa
cmp
adc
or
and
popf
lods
pop
lret
out
jge
xor
test
dec
pop
sarb
lcall
fwait
addb
adc
cmp
mov
xor
or
lret
dec
popf
ret
mov
fmul
mov
xor
jg
ret
add
sbb
lcall
push
inc
cmpsl
push
inc
cs
shrl
pop
mov
flds
mov
xchg
mov
mov
add
push
cmpsl
sbb
fmull
scas
in
and
adc
fcmovnbe
es
aam
add
loope
mov
clc
sbbb
movb
pop
dec
xchg
mov
jmp
adc
pop
divb
push
jmp
mov
repz
jl
nop
jle
popa
mov
inc
sbb
stc
push
fstps
mov
xchg
out
xchg
mov
cmpsl
ds
cs
push
ja
addr16
outsb
pop
pop
aaa
dec
daa
mov
testl
cmpsl
ds
cs
push
ja
addr16
outsb
pop
pop
aaa
dec
daa
mov
testl
cmpsl
ds
cs
out
ja
data16
jle
pop
cmpsb
daa
stos
xlat
repnz
xchg
incb
ds
shr
mov
push
adc
lahf
out
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
arpl
addl
jae
or
stos
cmp
push
add
add
or
pop
lds
add
add
add
add
mov
mov
movb
add
add
add
add
call
add
sahf
add
add
add
add
add
add
add
add
test
push
add
ja
add
inc
add
add
add
or
pop
add
popf
add
add
add
add
add
lahf
add
add
add
addl
popl
movl
push
add
add
add
sub
jnp
sub
add
add
mov
cmp
pop
add
add
out
test
inc
add
inc
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
jnp
and
add
add
add
sub
lahf
add
add
insb
add
add
add
into
add
add
add
jae
sub
add
pop
add
add
add
into
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
fs
add
add
add
inc
add
add
add
push
add
add
add
into
add
add
and
push
add
int
inc
add
add
das
add
add
push
add
lcall
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
pop
inc
add
add
add
xchg
add
add
out
add
bound
push
add
add
add
add
add
xchg
add
add
add
inc
add
push
add
pop
add
inc
add
add
add
add
add
sub
add
das
add
add
testl
mov
in
add
out
add
inc
add
add
add
add
add
push
add
or
add
cmpsb
add
add
jbe
sub
data16
add
push
add
hlt
add
add
add
add
jbe
js
and
mov
or
and
test
add
cmp
popl
add
add
int3
add
add
add
add
add
add
add
add
add
add
push
add
add
insl
add
add
inc
add
add
add
pop
sub
pop
add
add
add
add
add
add
inc
add
add
lcall
add
add
rolb
add
adc
inc
add
add
add
add
add
add
sbb
into
add
add
add
testb
add
add
add
xchg
add
add
sub
addl
js
or
jnp
test
add
add
sbb
sub
xlat
add
add
insb
add
add
add
add
add
sub
cmp
mov
inc
add
add
mov
add
add
add
pop
insl
rcll
leave
or
idivb
arpl
push
hlt
movsl
mov
and
mov
lods
les
lahf
subb
dec
mov
add
outsl
pop
push
nop
ds
inc
sub
add
addr16
shll
jl
pushf
pop
ret
mov
mov
lea
dec
adc
jns
cltd
xor
stc
add
adc
mov
dec
inc
mov
test
cmc
insb
xor
lods
sbb
xor
jbe
xlat
sti
je
adc
je
popf
cli
xorl
in
push
or
pop
es
jo
xchg
mov
jb
lds
pop
push
sbb
cli
push
pop
pop
push
das
push
fdivr
cmp
add
mov
lcall
mov
imul
stos
or
stc
sub
out
movsl
call
test
pop
pop
mov
cltd
add
push
addr16
movsl
xchg
aam
cmc
lahf
enter
movsl
clc
add
lret
or
sub
xchg
inc
mov
lock
fstpl
nop
dec
dec
testb
lea
sub
js
es
fistpll
lock
addr16
jmp
dec
or
pop
mov
ds
cmp
cmpl
out
push
pop
inc
jnp
icebp
popl
fcomip
or
repz
scas
sbb
jbe
popa
iret
cmc
stc
lret
xchg
sbb
push
in
mov
jne
fwait
imul
sub
pushl
mov
scas
jb
ds
add
daa
mov
daa
fucom
sbb
shrl
jno
push
mov
inc
or
in
sub
lods
popa
mov
test
fdivl
lds
jo
adc
int3
imul
mov
dec
mov
mov
mov
jno
ja
push
sub
jbe
lret
inc
int3
dec
sbbb
sub
and
jnp
sahf
idivl
mov
cli
sti
cmp
je
in
stc
fadd
and
shll
jae
sarb
add
test
push
adc
jnp
fisttpll
mov
jmp
in
push
mov
adc
mov
daa
cli
add
jecxz
jmp
scas
je
rcrl
mov
loope
sbb
and
jg
mov
addb
add
dec
jle
xchg
lock
pop
cmpb
push
in
jg
push
add
sub
jns
testb
inc
inc
les
jne
sub
sarb
cmp
aam
icebp
push
adc
pop
imul
mov
loope
add
dec
cmp
adc
adc
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
