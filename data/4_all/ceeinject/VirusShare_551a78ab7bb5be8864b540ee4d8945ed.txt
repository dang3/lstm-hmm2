call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
sbb
sub
cmp
inc
add
or
pop
mov
mov
jle
lret
cld
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
mov
sti
in
mov
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
pushf
mov
movsb
scas
mov
fildl
sbb
pop
fs
dec
or
pop
cwtl
out
xchg
xor
out
push
inc
sub
jo
ret
mov
mov
callw
addr16
mov
jp
mov
and
leave
pop
in
fwait
add
in
mov
adc
dec
stos
adc
xchg
mov
push
testb
data16
ljmp
dec
ds
sbb
jnp
les
mov
xlat
and
xor
push
repz
push
in
push
outsb
insl
pop
jge
pushf
push
pusha
in
mov
sti
fiadds
or
jmp
les
fsub
mov
popf
notb
fdivp
mov
lock
fnstsw
fists
sub
cmp
dec
imul
jl
mov
mov
sti
in
lret
cld
mov
inc
jne
dec
bound
and
adc
or
into
cwtl
iret
iret
jecxz
leave
test
movntps
jl
pop
imul
cmp
pop
jmp
ljmp
sahf
scas
cld
mov
js
inc
arpl
jnp
dec
jl
mov
mov
sti
in
lret
cld
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
mov
sti
in
lret
cld
fisttpl
mov
pop
xchg
cmpsl
lock
aad
arpl
ds
pop
inc
sbb
sub
dec
adc
jne
loope
add
popf
xchg
adc
aas
push
mov
jbe
cli
push
lods
cmp
mov
or
imul
and
jle
pop
mov
xor
mov
push
pop
add
outsl
int3
cmp
stos
pop
or
add
pop
dec
pop
nop
jnp
fs
sbbb
lea
or
dec
add
mov
in
xchg
xchg
push
mov
push
xchg
jns
mov
dec
pop
inc
mov
sub
imul
loopne
ret
fistpl
sti
or
sub
cmp
shr
cmpsl
jle
out
push
adcb
test
adc
test
dec
or
outsl
jle
add
insl
sbb
jns
mov
or
jge
lods
pop
mov
pop
popa
jae
jecxz
gs
jl
pop
out
jno
xlat
ffree
hlt
cmpl
mov
addr16
inc
xor
bound
xor
bound
int
pop
sbb
push
cs
repz
xchg
adc
mov
push
stc
vmread
enter
sub
cmpsl
std
lcall
and
and
pushf
inc
mov
mov
loop,pt
push
movsb
imul
sub
mov
mov
test
aaa
and
rcrl
out
fidivrs
lcall
push
jge
scas
repz
xchg
js
cmpsb
stos
pop
sbb
dec
mov
movswl
in
cmp
xchg
push
sub
sub
int
pop
inc
add
jmp
jge
add
mov
in
pop
inc
int
adc
dec
push
fwait
jb
out
jno
repnz
mov
cmp
dec
js
in
lcall
add
jo
jno
fimull
sub
pop
xor
xchg
inc
jle
jno
mov
jecxz
ljmp
xor
jecxz
out
sub
rol
dec
adc
movsl
std
test
jmp
in
lahf
xchg
aas
pop
lret
pop
pop
imulb
adc
int3
insl
cmp
iret
mov
es
cmp
mov
sbb
or
ficoml
sbb
imul
loopne
jno
jnp
mov
sbb
je
adc
jne
inc
mov
or
jl
mov
lock
rcll
dec
jae
movsl
shll
pop
ss
loop
push
jl
incb
ficompl
ror
adc
dec
jg,pt
std
mov
aaa
inc
cld
sbb
adc
aam
and
movb
xor
adc
cmp
xor
inc
dec
fidivs
pop
jb
xor
dec
stos
mov
mov
jnp
test
lods
mov
jmp
mov
mov
push
mov
std
jbe
ja
mov
xchg
mov
add
and
push
cmpb
mov
push
inc
adc
and
aas
mov
jp
aam
inc
jge
and
ljmp
cmp
sbbb
and
mov
in
jns
imul
and
pop
xor
xchg
imul
dec
sub
orl
pop
lea
mov
pop
loop
lods
pop
shll
push
sbb
cwtl
and
lods
sub
outsl
xlat
addb
rcrl
loopne
or
leave
scas
add
cld
test
push
nop
mov
stos
inc
adc
loope
enter
pushf
cmp
mov
cs
in
mov
sbb
jb
jge
pop
in
mov
imul
fmuls
or
pusha
sub
pop
and
fmull
idivl
sbb
mov
xchg
push
stos
sub
flds
leave
inc
inc
inc
jo
push
xchg
cwtl
pop
shr
fldenv
or
stos
js
or
xchg
pop
jno
jo
dec
sub
out
enter
inc
hlt
and
mov
adc
add
sub
neg
lcall
or
stos
aad
and
jo
jl
push
scas
cltd
je
or
test
sub
sub
jl
or
dec
pop
jp
rolb
mov
jle
xchg
mov
sti
fadds
loopne
les
inc
cmc
add
loop
pusha
or
jecxz
into
mov
mov
jp
sub
cmpsb
out
mov
out
popf
insb
cmp
pop
xor
or
stos
and
cli
cmp
movsl
dec
jo
cmpsb
jb
mov
outsl
xchg
jmp
lods
adc
lock
lods
push
lods
jge
push
and
jg
outsl
scas
jg
pop
lods
shr
lret
scas
cmpsl
das
lcall
icebp
pop
xchg
push
cmp
pop
push
sti
insb
inc
mov
iret
cmpsb
jmp
dec
sub
mov
pop
movsb
fidivl
adc
mulb
mov
rorb
movsb
adc
out
loop
jmp
inc
int
jmp
neg
or
imul
xor
or
outsl
inc
jl
mov
test
das
mov
popf
addr16
sbb
push
shlb
pop
cmp
mov
mov
cmp
adc
outsb
dec
ja
jp
enter
mov
insb
add
push
push
push
sbb
inc
xor
adcl
enter
mov
pop
jmp
pop
inc
push
aas
jne
jg
mov
inc
jmp
cmp
fistpll
pop
aas
fistl
stos
mov
sbb
jnp
jle
loope
add
incb
repnz
cmp
pop
push
inc
xor
mov
add
leave
stos
scas
cs
or
jp
ljmp
push
xchg
inc
lock
in
dec
and
in
cmp
in
lock
into
or
push
xchg
mov
lods
fistl
xor
cmp
call
call
test
fcomps
sti
nop
cmp
dec
push
ja
adc
inc
mov
mov
std
fwait
add
or
mov
inc
xor
pop
rolb
dec
sbb
xchg
pop
inc
stos
aam
jne
btc
jp
in
cld
lahf
mov
and
arpl
pop
cmp
jo
and
icebp
nop
xlat
xor
fldenv
mov
icebp
inc
pop
ja
pop
push
mov
adc
test
sbb
jmp
pusha
fildl
inc
push
gs
adc
inc
dec
leave
sub
sarb
sbb
stos
cltd
std
cmp
inc
in
fdivrl
add
lret
nopl
cwtl
repz
push
mov
out
pushf
sub
jge
push
es
or
mov
jmp
in
scas
lea
rcr
pop
xchg
add
sbb
pop
out
in
cld
mov
test
inc
inc
xor
pop
icebp
mov
in
push
addr16
cmp
push
test
imull
addl
lahf
mov
jns
cmp
adc
lcall
das
sbb
adc
dec
test
cmp
out
in
out
xor
xchg
imul
cmpsl
addr16
sahf
sub
adc
movsl
pop
dec
popf
add
rcrl
jge
dec
sbb
inc
inc
leave
jns
add
cwtl
lcall
ja
xchg
cmp
mov
shl
jne
addb
mov
xor
aas
in
sub
adc
test
sbb
mov
fdivl
push
jae
mov
test
inc
ficompl
sub
call
call
out
fucomp
jecxz
icebp
mov
and
push
xor
out
mov
inc
ljmp
int
and
fs
cmp
pop
jecxz
jmp
pop
and
pop
or
lea
cmpsb
fisttps
mov
jne
loope
iret
lcall
es
dec
in
scas
movntps
fbstp
inc
xchg
jae
sbb
popf
cmp
dec
or
dec
fsts
push
inc
movl
xor
mov
push
push
inc
push
push
mov
pop
scas
and
sub
dec
fstl
lods
ffree
adc
adc
sbb
xor
mov
adc
jb
outsl
ret
jb
adc
scas
sub
inc
fldcw
xor
xchg
adc
cld
loop
aaa
lds
mov
sbb
sti
jecxz
in
lods
jp
jl
xchg
pop
sub
stos
cmp
sub
xchg
gs
inc
and
addr16
fsubrs
fstpt
gs
loope
inc
lcall
movsl
push
aad
mov
sub
jae
mov
pop
shr
push
mov
loop
mov
test
mov
push
mov
sbb
loopne
jl
sub
out
push
pop
pop
xorl
fistl
setge
jae
push
nop
pop
repz
cmp
gs
pushf
mov
or
mov
test
xor
push
enter
lret
out
and
push
mov
inc
xor
cmpsl
cmp
mov
popf
xchg
sbb
fwait
cmc
and
jl
imul
jle
dec
or
adc
js
jbe
cld
test
test
add
adc
mov
data16
mov
js
aam
jo
sub
nop
ds
xchg
mov
js
out
mov
bound
dec
push
pop
push
negb
stos
cmc
cmp
fistpll
or
call
dec
nop
insb
out
test
jo
jnp
xchg
mov
dec
iret
sbb
push
pop
and
or
mov
lds
or
mov
and
dec
sub
rorl
mov
push
fnstsw
cmpsb
add
xor
adc
mov
jb
inc
sub
jnp
fxch
dec
sti
pop
clc
xchg
movsl
and
ss
and
movsl
or
cmpsb
push
xchg
js
stos
inc
dec
add
adc
inc
fdivrs
cmpsl
sbb
jne
in
mov
aaa
int3
xchg
xchg
ret
filds
xor
pop
mov
sbb
push
lock
mov
push
ficompl
movsl
jns
mov
adc
add
xor
js
push
dec
cld
push
add
aas
les
pop
cmovae
lds
js
into
sub
ret
lea
pop
lret
or
idivb
add
jl
xchg
push
pop
in
xchg
and
sbb
mov
cltd
rcrl
adc
ud1
fcomi
jno
pushf
jae
fsubrl
pop
iret
sbb
mov
inc
mov
std
push
rclb
push
popa
xor
inc
cwtl
data16
xlat
push
call
sbb
loopne
pop
shll
iret
push
dec
mov
xchg
fistpll
dec
enter
lods
dec
insl
mov
jnp
sbb
ret
in
aam
mov
andl
push
push
lea
aad
sub
aas
mov
sbb
fdivs
mov
jecxz
enter
fsubrl
lret
cmpsb
in
dec
mov
jb
stos
mov
adc
xchg
fcmovnbe
pop
xor
out
jp
sbb
sbb
mov
repnz
mov
push
mov
mov
loope
xor
fstps
imul
and
dec
imul
cvtpi2ps
ss
sub
pop
lea
mov
xlat
jne
push
lea
dec
and
adc
lods
xchg
popa
mov
divl
sub
inc
push
ror
pop
andb
inc
ds
mov
sahf
sahf
test
add
cmp
xchg
cld
xchg
in
pop
icebp
lds
dec
scas
mov
or
sub
les
in
cli
in
push
adc
sub
int3
mov
xor
ret
ret
bsf
add
jp
mov
mov
inc
mov
stos
in
mov
push
inc
loope
cmp
push
sbb
xor
test
cmpsl
jnp
and
xor
int
push
std
loopne
xor
lret
stos
pop
imul
mov
addb
push
dec
fwait
repnz
rclb
mov
rolb
cmp
fmul
xchg
xor
sarl
and
fs
pop
scas
sub
fdivr
insb
push
movsl
add
icebp
in
imul
pop
aad
sub
cmp
pop
inc
pop
mov
push
jae
add
jl
stos
xor
es
in
insb
inc
jge
push
popa
cltd
push
mov
mov
inc
sti
repnz
fistpl
daa
push
ret
lcall
cmp
push
and
push
mov
pop
mov
int3
inc
stos
arpl
jbe
sub
add
inc
xlat
cs
dec
cmp
pop
call
popf
popf
sbb
ljmp
add
out
bound
jg
test
mov
sbb
sub
sbb
iret
insl
ret
sub
push
in
lods
mov
les
in
xchg
mov
mov
sub
sub
mov
mov
adc
and
cmp
or
fld
movsb
flds
test
lods
pop
jle
test
jae
xor
imull
push
cmp
mov
or
or
shlb
rcll
rcrl
imul
jnp
push
sub
xchg
out
stos
mov
lds
int3
loope
jno
jo
repz
mov
push
inc
sbb
popa
arpl
mov
sbb
pop
adc
fs
cmp
mov
lods
fmuls
mov
lods
adc
mov
jb,pt
push
aam
adcb
inc
ja
cmp
sub
sbb
lsl
lret
mov
out
mov
fnsaves
stos
shl
adc
inc
stos
fyl2x
pop
int3
outsb
stos
push
push
cmp
and
mov
sub
jae
gs
test
sub
hlt
lret
test
ficoms
les
mov
push
cmpsl
movsb
or
flds
out
inc
sbb
adc
pop
jns
xlat
rcrl
sti
lret
test
push
shlb
push
mov
repz
fstpt
loop
dec
loop
icebp
push
xchg
clc
nop
push
xchg
inc
shll
ja
xchg
loop
ror
sbb
adc
frndint
fsts
outsl
int
in
gs
shrl
jg
mov
inc
or
dec
cld
loope
cmp
mov
cwtl
jno
xchg
mov
movsl
cmp
aaa
mov
push
lret
add
rorl
loopne
mov
add
loop
scas
push
pop
ss
dec
sub
sbb
xor
lcall
dec
sub
cs
cltd
xchg
sbbb
mov
or
sub
dec
pop
mov
add
sti
and
jl
rol
cmp
cmp
pop
iret
add
fisubs
push
cmp
popf
push
mov
xlat
mov
pushf
jmp
lcall
mov
mov
aam
sbb
imul
inc
in
xor
and
fcompl
pop
hlt
ja
pop
push
xlat
fs
pop
je
add
js
mov
mov
adc
mov
or
rcrb
movsb
adc
inc
mov
loopne
jp
jl
cmpsb
arpl
and
jbe
clc
push
cmpb
pop
mov
adc
push
xchg
adc
icebp
movsb
aam
mov
lcall
or
mov
shlb
scas
fisubs
cwtl
loopne
push
and
pushl
xchg
gs
push
and
or
cwtl
xchg
repz
je
ror
lret
xor
xor
cmp
adc
fcmovne
lock
inc
outsb
inc
out
and
outsl
adc
js
mulb
inc
mov
jo
subb
into
fsub
pop
int3
loope
mov
aad
subb
sub
pop
mov
mov
mov
sub
cs
xchg
rol
push
push
ret
mov
popf
cmp
std
and
out
cmp
cltd
and
push
fsts
and
iret
add
xor
mov
addr16
mov
ficomps
xchg
jae
push
xor
loop
inc
arpl
mov
mov
sub
jns
or
lret
pop
mov
popf
mov
clc
jnp
adc
fisttpll
jnp
arpl
xor
cmp
test
dec
in
outsl
sarb
mov
jb
sub
or
movsb
aad
in
stc
mov
sub
xor
pop
dec
outsb
popf
in
sub
loope
sahf
aas
jno
add
push
ja
sbb
and
addr16
fcompl
pop
fcmovu
mov
dec
xor
lahf
fidivrs
loopne
cmpsl
les
or
xchg
cmp
mov
not
scas
dec
and
in
out
imul
xor
shll
sti
lods
sti
pop
sbb
xor
and
shll
push
or
mov
sbb
and
insb
mov
sub
jnp
cwtl
xlat
inc
stos
ds
xor
jns
push
xor
lods
shlb
int3
ss
test
gs
fdivrl
std
xor
and
xor
or
js
test
add
test
fisttpll
mov
lea
pusha
sbb
into
sti
addr16
xchg
adc
mov
mov
aam
mov
jmp
pop
cltd
sub
adc
lahf
movsb
jp
pushf
scas
push
or
int
push
mov
in
ficompl
cltd
inc
dec
jo
lds
xchg
test
in
lahf
sahf
mov
jge
sbb
push
jmp
out
fisubs
mov
sbb
pop
jmp
mov
shlb
hlt
jns
fdivrs
in
test
or
inc
rorb
imul
jno
cltd
push
inc
pop
popa
ret
fst
sahf
mov
sbb
mov
jo
dec
into
arpl
mov
into
push
pop
mov
sti
xchg
loope
out
lret
dec
mov
add
push
test
ss
jp
dec
loope
mov
sub
rcrl
and
das
enter
cmp
add
aaa
mov
scas
roll
in
enter
sbb
add
repz
paddusw
mov
lcall
aas
lods
insl
push
jp
inc
fsubrs
pop
test
cmp
adc
into
xchg
xor
pushl
mov
add
fisttpl
mov
adc
out
gs
jecxz
xor
ljmp
fcomps
and
neg
imul
aaa
sbb
sbb
add
push
jge
push
lock
adc
subb
push
jecxz
jge
data16
jo
xlat
ljmp
xchg
lds
mov
or
nop
hlt
adc
aas
aas
rclb
inc
jl
sbb
pop
and
pop
inc
xchg
lret
fucom
jle
sahf
sbb
dec
pop
add
shll
adc
pop
pop
adc
sbb
lahf
sarb
outsl
mov
xor
and
cwtl
xlat
mov
call
shrb
movsb
test
es
call
add
fstl
push
mov
inc
and
addr16
cld
and
push
adc
mov
dec
and
loop
divb
popa
mov
test
mov
xchg
andb
lods
xchg
mov
daa
cld
sub
test
nop
ss
in
adc
lret
js
sub
add
in
fnstcw
adc
push
lds
mov
pop
les
jno
lret
jns
iret
add
or
dec
pop
push
sti
in
cli
adc
test
js
xchg
pop
mov
dec
add
fs
mov
push
or
jle
dec
ljmp
mov
adc
jnp
lcall
test
div
dec
pop
pop
sbb
cltd
jecxz
jecxz
adc
addl
les
clc
ljmp
xlat
cmp
pop
jl
ret
movsl
mov
loopne
add
and
mov
add
bound
inc
xor
data16
cmc
mov
jl
leave
cld
cmp
scas
sbb
ljmp
inc
daa
cmp
mov
push
mov
es
mov
inc
ss
sarl
int3
clc
nop
imul
imul
xor
mov
loopne
push
fldcw
mov
mov
jno
outsb
pop
insl
nop
cltd
dec
sbb
jge
sar
rcrl
push
xor
xor
lock
add
int
sub
dec
lcall
cs
cmpsl
ja
pop
sub
pop
jae
mov
fs
lock
push
mov
push
cmc
lahf
adc
or
push
ret
fwait
shr
mov
pusha
mov
fxch
cmpsb
xchg
jge
xlat
fs
pop
stc
shl
in
fistps
pop
cld
test
cmp
xrelease
cmp
scas
jecxz
mov
imul
jl
mov
mov
sti
in
lret
cld
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
mov
sti
in
lret
cld
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
pushf
mov
int3
jmp
sti
in
lret
cld
fisttpl
sbb
sub
cmp
dec
imul
jl
mov
mov
add
xor
and
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jbe
cmp
or
sbb
jae
cmovns
pop
jmp
xlat
mov
out
xchg
faddl
cmp
sbb
insb
aaa
jl
dec
pop
pop
pop
cmpsb
idivl
in
mov
cmpsl
int3
xchg
faddl
adc
add
jne
gs
push
pop
dec
pop
lods
leave
mov
loopne
call
ret
mov
ja
adc
jb
fs
and
adc
in
jmp
mov
xlat
jo
cwtl
mov
jg
sbb
dec
sub
mov
or
or
stos
iret
sbb
sbb
xchg
xchg
push
ja
sub
xchg
push
jnp
bound
inc
mov
jge
pop
adc
aaa
inc
sbb
shlb
adc
sbb
in
push
xchg
push
dec
imul
cwtl
aam
mov
sarb
in
testl
push
fcomps
push
movsb
mov
out
sub
inc
xchg
and
int3
repnz
inc
push
xchg
xor
cld
mull
fdivl
push
or
jae
popf
sub
in
push
sub
faddl
or
or
aaa
data16
dec
pop
inc
pop
mov
movsb
out
xlat
test
hlt
mov
cmpsl
int3
xchg
vmaxpd
pop
mov
adc
or
dec
jb
ja
fwait
mov
test
test
ss
imul
or
js
pop
scas
mov
mov
sub
enter
jmp
imul
jl
dec
pop
pop
pop
lods
idivl
in
mov
cmpsl
int3
xchg
faddl
or
sbb
insb
aaa
jl
dec
pop
pop
pop
lods
idivl
in
mov
cmpsl
int3
xchg
faddl
push
movsl
je
inc
repnz
xor
inc
add
sub
and
stos
adcl
jno
pusha
mov
fmuls
outsl
pop
adcl
and
lea
nop
pop
sbb
sbb
fiaddl
add
les
add
int
push
stos
add
fildll
mov
push
out
mov
ljmp
pop
add
leave
add
decl
out
ret
sti
dec
lret
ss
fnsave
add
je
loop
loop
leave
sbb
mov
xor
sbb
mov
test
cmp
fnstsw
rolb
jno
mov
push
imul
fstpl
mov
adc
add
cwtl
ficomps
and
lret
mov
out
test
adc
inc
js
cmp
outsl
sarl
scas
sahf
cmp
test
idivl
sub
das
aad
mov
cld
cs
je
ror
insb
aam
decb
and
sahf
push
dec
push
fs
or
hlt
pop
lods
dec
jecxz
cltd
jnp
inc
dec
mov
cwtl
push
je
sub
cwtl
pop
cmp
sub
jnp
and
jns
xchg
xor
ja
ret
push
jmp
jb
outsl
mov
dec
cmpsl
jge
data16
dec
adc
push
out
mov
add
jno
loopne
xor
or
mov
and
lcall
stos
mov
cmpsl
cmp
jmp
lods
daa
add
dec
pop
push
or
iret
push
pop
or
leave
insl
enter
cmpl
or
ss
movsl
test
dec
xor
out
xchg
out
jl
mov
push
dec
std
cmc
dec
mov
pop
cld
dec
daa
pushf
mov
aam
inc
pop
dec
xor
add
jnp
rcrl
insb
inc
fwait
daa
shrl
mov
int
outsl
xlat
cmp
adc
fnsetpm(287
cmc
jg
adc
arpl
xor
inc
cmp
add
or
mov
loope
imul
sbb
inc
scas
out
add
push
mov
das
popa
inc
pusha
or
push
inc
lahf
subl
mov
lds
jo
xor
cmp
cmc
inc
lods
dec
mov
lods
out
sarb
or
sarb
xchg
mov
mov
adc
mov
imul
add
lods
push
arpl
push
stos
and
lahf
rol
enter
mov
sbb
loopne
andl
imul
lods
inc
shll
pop
jp
imul
js
into
in
stos
fldt
loop
mov
inc
aad
jb,pt
pop
int3
cmp
mov
call
push
dec
cmp
dec
mov
xchg
xchg
add
mov
xchg
sahf
rclb
cltd
call
cmp
mov
mov
mov
data16
imul
rolb
subl
fs
dec
fcompl
jp
lret
cld
int3
jmp
xchg
mov
ja
loopne
ljmp
and
pusha
pusha
enter
outsb
in
inc
or
xchg
into
sub
and
outsl
fs
adc
cmp
push
jns
imull
fisttpll
cltd
sbb
jmp
sub
sti
mov
aas
jo
outsl
xorl
push
pop
pop
fst
jns
mov
pop
mov
mov
jb
cmp
imul
test
mov
mov
sbbb
es
lret
repz
xlat
mov
in
je
cmp
rolb
dec
pop
xchg
not
sbb
sbb
movsb
repnz
jnp
call
sarb
data16
nopl
shl
fldt
aas
jb
push
bound
out
out
sub
add
jne
stos
aas
test
inc
std
pop
out
push
rorb
pop
ficompl
and
sub
int
sti
xor
gs
roll
movsb
sub
in
jo
scas
out
and
pop
mov
mov
inc
aas
sahf
adc
addr16
ss
or
dec
or
out
je
lahf
sbb
or
pop
loop
mov
loope
aad
cmp
push
fiadds
movsl
out
fistpl
gs
fdiv
idivl
lret
or
dec
cmp
sub
jp
fisubrl
sbb
out
test
push
imull
and
dec
dec
mov
mov
ret
push
dec
jp
shrb
cmp
xlat
jg
xor
adcb
sbb
out
mov
push
mov
insl
ja
push
mov
inc
jb
or
int
in
adcl
pop
or
int
adc
and
pop
popa
pop
inc
movsb
xchg
push
xor
gs
cld
dec
pop
pop
jp
dec
andl
pop
mov
cmp
mov
mov
in
sbb
testb
xor
pop
cltd
push
cmp
dec
pushf
xor
xchg
in
fs
adc
pop
and
lods
jl
cwtl
mov
xor
fmuls
movsl
sarl
add
inc
movb
inc
mov
icebp
inc
adc
cld
mov
icebp
adc
or
xchg
testb
dec
rcl
es
flds
cwtl
mov
out
cwtl
xor
orb
ret
inc
repz
and
xchg
into
cmp
push
repnz
test
xchg
xor
imull
mov
pop
mov
push
test
mov
xchg
sbb
mov
popf
not
fstpl
stc
popf
gs
negl
cs
xchg
andl
std
adc
xchg
adc
aaa
pop
lret
cmpsb
cmp
pop
movsb
std
and
lods
js
jle
jmp
int3
iret
aas
test
fsubp
and
imul
out
and
jnp
in
shll
pop
push
xchg
rol
dec
ret
pop
cmpsl
frstor
iret
mov
cwtl
addr16
je
cwtl
jg
fnstcw
and
xchg
xor
fsts
lret
jo
cli
push
push
mov
into
mov
lds
test
in
inc
call
mov
popf
icebp
fimuls
ret
mov
loop
adc
pop
gs
sbb
xchg
mov
push
jle
popa
or
mov
test
insl
aas
sti
jb
adc
stos
add
or
stc
nop
sarb
mov
test
stos
sbb
lret
mov
adc
mov
punpckhbw
test
ljmp
add
lods
out
push
adc
mov
cmpsl
sub
or
cmp
inc
fisubl
xor
stos
cmp
test
xor
dec
add
push
ret
inc
mov
data16
cli
dec
cmp
mov
scas
shll
mov
pushf
xchg
loop
int
jge
in
divb
inc
mov
sahf
push
jnp
inc
jle
or
mov
mov
push
popf
mov
push
rclb
int
mov
mov
ja,pt
jbe
mov
sbb
mov
mov
out
pop
ss
daa
inc
add
outsb
jg
jle
pop
xor
xchg
lock
fwait
jle
dec
dec
and
popa
pop
loop
pop
cmp
inc
out
bound
push
insl
insl
cmp
dec
xchg
rol
lods
xchg
lds
pop
add
scas
or
mov
scas
mov
out
mov
mov
lcall
jbe
cmp
dec
xchg
jo
cmp
mov
mov
aad
sbb
push
push
push
rcl
jp
and
or
stos
ret
enter
es
out
dec
inc
inc
sub
dec
fs
pop
icebp
push
mov
sbb
dec
lret
decl
jl
fimuls
xchg
jae
mov
mov
pop
mov
push
mov
popa
mov
pop
ljmp
stos
push
lret
pop
ret
int
test
sahf
out
mov
pushf
in
sbb
push
clc
cmp
inc
mov
mov
xorb
es
pop
mov
xor
and
jl
fsubr
jg
int
out
sbb
in
push
cmpsb
rorl
shll
or
dec
in
push
mov
mov
pop
lds
sbb
mov
cld
jns
sahf
or
les
push
outsl
ljmp
cmpsb
adc
xchg
adc
mov
pop
fs
cmp
orl
dec
ss
ficoms
mov
mov
pop
sbb
mov
aam
jnp
sbb
and
add
cld
jmp
test
std
iret
xlat
jne
fstl
xor
pop
sub
mov
sbb
sub
loope
pushf
lea
stos
dec
mov
xor
jmp
movsl
inc
cmp
or
mov
or
and
add
stc
ror
scas
inc
mov
sbb
jae
gs
mov
aas
cli
push
push
mov
jmp
fisubrl
popf
mov
cmp
pop
popf
aad
adc
xlat
inc
jne
pop
xchg
pop
add
jnp
add
ss
nop
cli
out
cmc
test
mov
dec
int3
outsl
add
sub
dec
xchg
push
inc
jge
jno
fsubrs
pop
sub
enter
cmp
lds
cmp
insb
and
adc
sbb
mov
test
pop
mov
out
ret
insb
jge
xchg
cli
push
jge
arpl
adc
mov
push
aad
adc
int3
adc
mov
xchg
sub
movsl
cmpsl
nop
cmc
stos
dec
and
and
jl
pop
jecxz
sub
sti
pop
mov
fcmovne
push
jge
std
test
and
adc
mov
cmc
sub
or
sub
in
rcr
ljmp
and
push
cltd
mov
mov
or
mov
push
out
scas
lret
cmp
int
fldt
sarl
mov
aaa
sarl
sub
adc
add
or
add
icebp
inc
mov
pusha
sub
imul
adc
imul
imul
out
cmp
gs
sbb
push
loop
adc
out
mov
fdivs
fs
xchg
mov
fs
sbb
outsl
imul
add
loopne
cli
mov
and
cmp
add
mov
inc
mov
mov
pop
fsub
pop
notb
lcall
jne
xlat
loopne
cmp
sbb
fcmovne
or
rcll
rcll
call
insl
icebp
movsl
fiadds
int3
mov
shl
icebp
cmp
daa
jle
mov
addl
lods
push
frstor
loopne
aam
mov
dec
adc
mov
push
movsb
lds
clc
pop
jge
std
icebp
test
in
pushf
mov
or
popa
inc
test
jmp
inc
cmp
cmc
mov
lcall
push
imul
shlb
mov
arpl
sahf
int3
mov
lret
inc
mov
mov
xchg
lret
ss
dec
sub
push
loop
sub
imul
js
dec
jecxz
xchg
xor
sbb
and
insb
sbb
inc
movsl
out
sub
xchg
cmpb
xor
push
xor
daa
pop
jb
ret
sar
cwtl
jl
mov
mov
xchg
es
lods
mov
mov
adc
testb
jge
imul
arpl
xchg
mov
fcmovne
jae
jecxz
popa
or
push
mov
jecxz
mov
adc
mov
inc
or
daa
stos
mov
mov
test
mov
dec
sti
jecxz
and
inc
imul
mov
mov
mov
jns
testl
lret
xchg
sbb
ja
dec
sub
decl
and
arpl
icebp
or
mov
mov
stos
mov
cmpsl
pushf
pop
push
pop
jge
int
loopne
call
xchg
cmp
xor
aas
jp
or
das
ret
push
popf
cmp
xchg
push
add
pop
call
inc
rcrl
sarl
xchg
fdivrs
dec
icebp
outsb
pop
dec
mov
dec
iret
xor
test
adc
stos
xchg
jb
fnstenv
mov
mov
cmp
leave
xor
sbb
out
fs
inc
pop
or
ret
aaa
push
xor
jmp
mov
sub
popa
mov
sbb
ss
jl
pop
cld
inc
fmuls
aaa
jge
dec
gs
test
cmp
mov
xchg
aam
pop
jo
out
lret
push
fdivs
push
into
pop
addl
dec
shll
mov
lock
inc
xor
and
and
adc
sub
xchg
test
mov
jb
cmp
add
and
int3
stos
out
hlt
rcl
dec
aaa
pminsw
shrb
cmc
pop
sbb
push
mov
push
cmp
sbb
loopne
sbb
jl
outsb
mov
cmpsb
fwait
fwait
mov
cmp
rcl
aam
mov
jp
cwtl
cli
insl
lahf
mov
inc
sbb
cmp
fistpl
jne
or
ljmp
add
add
inc
cmp
jae
sbb
test
push
stc
shl
mov
imul
daa
mov
cmp
cmpsl
rcll
xchg
xchg
mov
ljmp
pusha
es
inc
enter
lock
inc
mov
push
es
xorl
ljmp
and
rol
outsl
and
ja
mov
in
cld
add
clc
push
and
push
add
hlt
jmp
pop
addr16
rorl
stos
fnsave
scas
jp
adc
inc
push
or
adc
mov
mov
xchg
andb
sub
loop
scas
ret
sbb
push
cmp
pop
xor
push
and
out
push
add
pop
pop
pop
mov
out
mov
iret
sahf
mov
fs
inc
out
mov
and
lahf
mov
sub
int3
inc
sub
jge
or
lcall
cmp
test
sub
push
aad
cmp
pop
dec
cs
das
mov
int3
fbld
or
scas
mov
mov
xchg
testl
xchg
pop
push
add
int
int3
mov
ja
mov
jns
push
es
add
inc
test
sbb
daa
mov
int3
mov
jp
mov
push
imul
mov
mov
insb
loope
push
xor
pushf
jae
daa
dec
enter
stos
lds
lods
pop
lods
push
cmp
cmp
sti
dec
sub
jmp
and
jo
inc
data16
test
cli
jge
mov
nop
sub
mov
push
mov
loop
jle
xchg
xchg
cmp
out
and
mov
in
mov
mov
or
ja,pn
or
xchg
push
neg
or
and
mov
push
aam
imul
pop
imull
jns
repz
and
cli
cmp
jg
and
push
ds
dec
and
imul
push
aas
fildl
into
sbb
add
sbb
int3
cmp
jge
lcall
add
dec
aad
xor
les
sub
cmp
jl
out
or
jg
jo
mov
insb
and
out
sub
scas
lods
mov
inc
cli
xchg
mov
push
and
push
push
mov
dec
inc
cmc
inc
mov
pop
in
xor
lock
daa
loopne
xchg
je
push
pop
mov
pop
scas
inc
pop
mulb
push
ljmp
es
addr16
sbb
loop
add
fdivrs
adc
cmpsl
push
sub
pop
adcl
xchg
enter
push
push
lea
leave
mov
fldl2t
pushf
sahf
repnz
scas
in
mov
imul
popa
or
cwtl
dec
sarl
out
jl
push
clc
inc
jns
dec
jl
fsubrl
fmull
xchg
stos
xchg
jmp
icebp
dec
scas
pop
push
xchg
xchg
aaa
sub
sbb
sub
ja
fcompl
pop
test
call
iret
fisubrl
dec
ja
daa
pop
movsb
in
and
push
pop
lcall
xchg
sbb
stc
in
push
in
add
cmp
scas
dec
cmp
mov
push
push
pop
call
icebp
mov
and
ss
das
mov
out
cmpsb
jne
sbb
cmp
enter
in
fnstenv
cmc
ljmp
es
rorl
fstps
js
lret
cli
sub
xchg
cmp
mov
rcrb
iret
xchg
je
sub
les
xor
and
cmp
icebp
in
or
push
fidivl
pop
dec
xchg
push
and
call
jmp
fcmovne
nop
pop
cmc
psubd
cmp
out
mov
inc
push
test
or
data16
dec
popf
in
les
xor
das
mov
sbb
in
pusha
xchg
out
dec
arpl
cmp
add
add
idivb
mov
push
or
psubd
adc
filds
mov
fsubr
movsb
test
inc
dec
andb
shlb
adcl
das
jp
cltd
ds
inc
or
pop
pop
adc
inc
ljmp
outsb
push
mov
and
push
in
pushf
clc
aas
stos
mov
fstl
aas
in
inc
dec
out
mov
xor
cmpb
jae
mov
rcrb
popf
mov
test
hlt
xorl
arpl
pop
es
xchg
lds
lret
xor
cld
pop
movsl
push
lea
movsl
sti
xor
ljmp
add
mov
ficoms
xchg
nop
jle
jno
fcoms
pop
xchg
aaa
jg
mov
out
icebp
inc
cs
push
addr16
cmc
es
adcl
push
imul
scas
adc
adc
xchg
clc
sub
adc
xchg
fcoml
mov
pop
ds
jo
jne
mov
call
ljmp
jp
ss
pushf
dec
jl
rolb
cmpsb
out
sub
lret
orl
and
je
lods
push
pop
pop
pushf
ficoms
js
popf
mov
ret
pop
daa
into
mov
inc
xchg
cmp
cmpsl
lret
or
test
add
sbb
test
adc
int3
rcrl
mov
test
jle
push
inc
int3
add
mov
mov
lret
orb
js
addr16
cmp
les
setnp
outsb
pop
and
std
std
jg
jg
add
outsl
inc
push
lret
lcall
stc
je
cmp
lods
inc
xchg
jno
sti
or
pop
int
scas
cmpsb
pop
lahf
das
lcall
stos
mov
inc
adc
cmpsb
loopne
sub
nop
orl
nop
mov
ja
add
mov
jge
sahf
xchg
int3
mov
stc
xchg
repnz
out
mov
clc
cmc
and
pop
popf
mov
mov
and
push
imul
adc
clc
mov
dec
vmread
mov
rcll
push
lods
pop
into
aaa
mov
pop
jecxz
out
sbb
pusha
push
arpl
aas
sbb
rcll
or
and
stos
adc
in
cmp
mov
inc
xchg
sub
pop
fwait
mov
fs
aas
mov
and
pop
cmp
call
out
add
std
jg
mov
push
andl
jbe
adcb
insl
int3
test
push
lock
mov
arpl
or
int
and
popf
cmp
ss
push
jg
test
pop
les
jle
jmp
jno
adc
xor
shl
das
insb
nop
lret
lods
ds
sub
pop
call
pop
sub
insl
cmp
inc
cwtl
cmp
jmp
push
fisubrs
add
sahf
dec
orb
lret
dec
add
stc
fistl
mov
pusha
mov
smsw
dec
cli
inc
insb
mov
mov
mov
mov
imul
xor
xchg
addb
xor
cmpsb
mov
mov
sahf
push
and
push
mov
adc
cmc
jae
data16
insl
dec
hlt
in
das
push
outsl
bound
dec
fwait
and
mov
adc
nop
and
jmp
das
mov
cmpsb
sbb
sarl
shll
arpl
dec
sub
test
daa
mov
mov
imul
lods
or
pop
adc
aad
cmp
xchg
jae
roll
pop
or
mov
dec
rcr
shl
push
xchg
sarl
jl
mov
mov
movsl
xor
std
jnp
mov
jns
xor
inc
arpl
jle
aaa
enter
add
movsb
pop
xchg
scas
data16
xor
push
jo
mov
adc
dec
lds
jp
inc
jbe
test
loopne
jbe
xor
cmp
sub
int
insb
mov
flds
adc
or
out
xchg
fistpl
push
pop
sub
push
icebp
mov
fwait
sbb
dec
mov
pop
out
mov
in
test
push
mov
clc
addr16
mov
mov
stos
push
sbb
insb
aaa
jl
dec
pop
pop
pop
lods
idivl
in
mov
cmpsl
int3
xchg
faddl
or
sbb
insb
aaa
jl
dec
pop
pop
pop
lods
idivl
in
mov
cmpsl
int3
xchg
faddl
or
sbb
insb
aaa
jl
dec
push
pop
pop
lods
idivl
in
mov
cmpsl
int3
xchg
in
xchg
ja
cmp
inc
insb
aaa
jl
int3
xchg
fdivr
push
or
xlat
pushf
mov
aas
je
xor
js
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jle
stos
into
fcmovu
lret
sahf
lret
in
mov
jle
dec
push
dec
das
aas
aas
push
sbb
or
cli
ljmp
mov
movsb
outsb
jp
push
push
pop
dec
cs
sub
sbb
or
pop
sub
inc
fidivrs
nop
sahf
mov
das
cmp
cmp
push
dec
cs
stos
orb
push
jne
lods
dec
out
icebp
jge
inc
sbb
mov
pop
in
inc
mov
scas
lahf
xor
add
jmp
sbb
rcrl
shrl
shll
out
imul
cmp
push
shrl
jp,pn
pop
mov
into
pop
int
cli
ljmp
xchg
lcall
mov
dec
into
das
insl
cmpsl
push
in
jbe
sub
pop
popf
daa
lret
xor
mov
jbe
pop
or
jge
push
aas
mov
xchg
add
pop
sbb
jbe
jbe
pop
mov
mov
and
outsl
psadbw
pusha
mov
dec
into
scas
fmulp
scas
mov
sahf
sbb
jle
dec
pop
pop
jbe
push
les
add
cmp
mov
cmpsb
in
pop
fcmovnb
leave
out
sti
int
cmp
sbb
cmp
pop
jge
inc
arpl
arpl
test
mov
out
cmp
adc
or
jp
jne
sub
add
mov
or
idivb
mov
jle
dec
pop
pop
dec
cmp
sub
sbb
or
cli
ljmp
mov
mov
jle
dec
pop
pop
dec
cmp
sub
sbb
or
cli
sti
mov
fstp
mov
cld
xor
jns
daa
adc
lret
add
das
fsubrl
adc
adc
mov
mov
cmp
jle
xor
fimuls
adc
cmp
adc
push
data16
sub
pop
rcpps
add
jge
daa
cltd
filds
lret
mov
jns
cmc
out
mov
cmp
ja
sahf
pusha
xchg
test
inc
mov
cmp
pop
out
cmpsb
jp
pop
loopne
xchg
sbb
aad
movsb
cltd
fcmovnu
popf
mov
xchg
test
cmp
shl
rclb
cwtl
int
movsb
push
add
add
xor
and
xchg
fisubrs
and
xchg
inc
add
jnp
pop
bound
stc
ret
and
fsubrl
push
pop
and
fadds
fucomip
push
roll
addl
fildl
xorl
sub
dec
mov
mov
jmp
leave
jle
lret
aaa
sub
incb
lret
sbb
scas
add
mov
test
or
push
lods
xor
mov
cmp
inc
neg
cmp
pop
stc
jo
rcrl
push
mov
or
xlat
cwtl
mov
xor
xchg
add
ret
cmp
das
fistpl
push
rclb
pushf
out
jo
push
jmp
inc
mov
pop
out
mov
lock
or
rcr
and
cs
cmp
repz
cs
xor
cmp
fsts
mul
sbb
icebp
adc
loop
addb
dec
mov
loope
leave
aad
and
addr16
lods
rclb
js
test
lods
jbe
ret
je
loopne
jl
cmpsl
add
scas
fildll
and
and
lret
xchg
adc
lds
in
sub
shlb
enter
mov
das
mov
stc
sub
mov
cli
flds
mov
cmpsb
je
push
outsb
sbb
ljmp
xchg
cmp
addl
icebp
scas
mov
pop
inc
mov
test
mov
adc
pop
orl
int
cmp
movsl
pop
jns
out
xor
cld
inc
enter
dec
gs
xor
mov
adc
jo
sub
push
mov
mov
add
pop
aam
and
push
inc
mov
pop
adc
pop
lods
out
fbstp
inc
mov
jecxz
je
rolb
aas
pop
mov
arpl
cmc
int3
aaa
add
dec
cmp
inc
lret
sub
pop
icebp
sti
out
inc
dec
inc
pop
and
test
out
sub
es
sub
cmpl
push
movsb
bound
xchg
jbe
and
xor
punpcklbw
cli
pop
xorl
lods
jmp
sbb
push
mov
pushf
add
ss
cwtl
loopne
inc
sub
mov
shl
imul
pop
fwait
xchg
fidivrs
sub
push
cmp
jne
test
inc
adc
mov
fmull
or
or
push
mov
dec
ret
movsb
cmp
fidivl
pop
out
test
xor
fnstcw
pop
jge
roll
mov
les
pop
push
fsubrl
xor
int
int3
add
shrl
test
lcall
xor
jo
push
repnz
out
lret
pop
xor
and
inc
lds
dec
jb
adc
cmpsb
sbb
loope
jmp
jnp
scas
outsl
xchg
imul
inc
lods
inc
rolb
mov
decb
jl
inc
iret
mov
lods
fs
dec
repz
mov
push
cmp
adc
in
mov
xchg
scas
cld
jns
sbb
inc
cltd
xchg
ret
sbb
mov
or
adc
adc
mov
pop
xchg
das
inc
in
mov
daa
movsb
test
push
inc
cmpsb
cmpsb
xor
pop
dec
jge
push
xchg
mov
cmpsb
daa
mov
sbb
scas
mov
loopne
xor
mov
out
mov
or
xlat
mull
pop
adc
jle
test
adc
ja
stc
pop
cmp
mov
add
pop
cmpsl
inc
div
outsb
repz
or
cmc
enter
in
or
inc
adc
jle
sub
or
inc
lods
or
arpl
mov
push
lds
mov
xchg
and
xor
add
or
push
gs
out
repnz
outsl
les
cltd
insb
mov
jo
or
popf
lcall
or
rcl
jae
cmp
fildl
mov
setno
xor
jg
insb
in
adc
mov
cmp
inc
push
test
into
dec
call
pop
and
cmc
inc
jae
inc
rclb
xor
and
mov
out
fistps
xchg
sub
jg
in
lods
lods
sub
jae
cmp
push
pop
les
push
iret
fdivrl
jno
push
int3
or
imul
in
adc
jmp
sbb
inc
lods
jge
add
pop
and
and
jne
sbb
loopne
pop
jle
dec
sbbl
out
pop
push
sub
add
mov
cmp
or
aas
add
xchg
push
mov
cmc
sub
scas
adc
sbb
loop
adc
pop
out
testl
dec
mov
les
pop
pop
loop
push
mov
jb
test
ljmp
sub
push
call
in
out
mov
cmc
adc
jns
jnp
outsb
mov
jbe
xchg
sbb
movsb
cmpb
mov
ret
or
inc
adc
dec
pop
out
sbb
leave
mov
mov
mov
scas
imul
imul
scas
sbb
mov
mov
fisttpl
mov
adcb
daa
in
aas
sti
or
and
nop
stos
push
sbb
mov
add
and
imul
rep
or
xchg
ljmp
xchg
xor
hlt
xchg
les
cmp
andb
xor
arpl
dec
mov
mov
lret
rcr
js
cld
flds
sub
iret
rol
fdivp
pop
iret
mov
rorl
lret
mov
pop
jmp
cld
scas
sbb
es
pop
cmp
xor
mov
add
adc
in
pusha
jbe
or
or
pop
popa
stc
pop
sub
aaa
pop
in
pop
out
lahf
cs
sti
mov
enter
cmpsb
mov
push
jbe
pop
mov
add
adcb
addr16
aam
add
call
jl
mov
cmp
dec
aad
movsb
das
ljmp
xchg
imul
aad
arpl
adc
sahf
loopne
mov
push
insl
jl
scas
cmp
mov
ret
and
adc
daa
dec
fisubs
jmp
fs
adc
mov
push
ret
sbb
sub
data16
fildl
repnz
pop
mov
loope
ror
enter
jmp
clc
push
setle
pushf
and
xor
mov
add
xor
leave
and
push
js
shll
cmpsl
hlt
movsbl
sti
push
inc
cmp
mov
inc
sub
cmp
or
mov
int
mov
hlt
repnz
imul
sbb
cmp
ja
fstps
xor
push
and
jb
pop
add
jbe
insl
mov
add
add
aaa
mov
imul
or
mov
fnstcw
jno
xchg
test
loop
data16
mov
orb
jg
xor
aad
popa
add
mov
jp
cltd
ret
loop
lea
pop
adc
sbb
jnp
sbb
or
clc
sbb
cld
iret
leave
jmp
dec
adc
jo
fwait
call
and
pop
aad
ss
mov
xchg
cli
in
punpcklbw
sbb
test
and
iret
xlat
insl
mov
movb
ja
jnp
fidivrl
bound
sbb
shll
dec
pushf
mov
sub
adc
pusha
fstpl
rcrb
inc
shrb
sub
rcrb
pop
mov
push
aam
pop
pushf
jne
sti
mov
xor
lahf
dec
icebp
jb
aam
adc
lock
add
xchg
stos
add
cmp
aaa
cwtl
adc
inc
scas
push
out
inc
cmp
pop
lcall
xchg
in
sub
xor
cmp
das
mov
ror
xorb
ret
adc
sbb
outsl
dec
push
mov
mov
les
or
dec
push
cmp
les
push
jno
dec
fs
popa
jmp
clc
pop
fwait
dec
and
sbb
sti
out
pop
dec
adc
in
adc
into
jbe
pusha
add
repz
mov
jmp
cmp
cmp
adc
loope
ret
xor
icebp
jl
push
lods
scas
pop
adc
outsl
ja
and
xchg
out
pop
sub
inc
out
ja
jne
fsub
pop
and
dec
xchg
mov
outsl
or
jne
rolb
sbb
mov
and
loopne
jecxz
xchg
stos
pop
xor
hlt
rcll
mov
cltd
incb
push
jecxz
frstor
lock
pop
out
and
stos
ljmp
xlat
adc
sub
dec
rcrl
testb
push
js
sbb
jbe
lcall
cmc
in
in
adc
xchg
rorl
in
pop
outsl
push
jecxz
push
int
hlt
push
aam
jmp
and
push
inc
jge
scas
xor
pop
stos
stc
add
outsb
jb
adc
mov
pusha
sub
es
out
mov
sbb
xor
push
or
mov
sti
stc
cmpsb
pop
in
cmp
cmp
repz
xchg
xchg
dec
mov
sbb
mov
or
mov
gs
enter
mov
xor
xchg
pop
push
cs
cmp
adc
femms
movq
aad
repz
xor
mov
clc
add
int3
out
mov
pop
xchg
rol
frstor
loope
aad
xor
cmp
bnd
push
cmp
cs
aas
sub
in
cmp
out
or
sub
and
mov
aam
sub
mov
cmp
mov
lock
leave
fsubrs
cmpsl
jae
mov
movsl
or
fucomip
arpl
mov
jno
ss
cs
or
mov
mov
mov
cmp
fcomps
sub
push
jl
lock
cli
or
and
int3
daa
mov
mov
jmp
fisttps
mov
cmp
sub
mov
ja
pop
neg
lock
jle
adc
xor
push
in
adc
jmp
loope
dec
cmpsl
lea
mov
cmp
lock
fsts
mov
sub
jae
xchg
orb
fisttpl
inc
cwtl
pminsw
jg
mov
in
fiaddl
pop
jl
adc
xchg
mov
int3
mov
sahf
and
jnp
jge
cmpsl
push
pop
data16
push
loop
sti
testl
jb
and
rcr
sbb
and
bnd
mov
movsbl
mov
adcl
mov
xchg
jg
jge
ja
push
inc
std
xor
fstl
xor
test
cmp
cmp
xorl
sahf
out
ds
pop
cltd
inc
movsl
in
ficoml
mov
ret
sarl
xchg
pop
ret
sbbl
clc
push
dec
jbe
mov
add
cmp
push
hlt
daa
and
aas
adc
jge
sbb
addb
mov
les
aaa
ss
stos
jbe
inc
cld
pop
dec
loop
mov
cli
push
sbb
test
es
scas
cmc
mov
and
outsb
shrb
and
fdivrl
sbb
jle
lods
add
stc
ja
mov
pop
xchg
insb
jecxz
dec
mov
or
cmp
pop
loope
and
adc
rcll
clc
mov
das
mov
jl
jo
cltd
adc
cmpsl
sub
or
and
loopne,pt
adc
dec
push
js
lahf
adcb
adc
or
repz
sahf
movsl
cmp
jno
fsubrs
add
ja
mov
cmc
std
out
pop
aam
inc
stc
outsl
xlat
pushf
xchg
inc
or
mov
or
pushl
push
fsub
ds
arpl
movlps
pop
negl
loopne
xchg
cmp
out
in
xchg
inc
mov
dec
insl
pusha
mov
cmp
popf
jae
jne
push
jle
jmp
aad
dec
jbe
cld
adc
mov
mov
xor
sub
int3
mov
std
jns
ficoml
mov
inc
mov
and
jge
sub
xchg
loopne
jg
xchg
clc
int
dec
movsb
repz
inc
aas
jmp
shrl
add
push
movsl
pop
cmp
pusha
cmp
sbb
negb
pop
out
inc
repnz
and
mov
xor
inc
jmp
lds
sahf
lret
out
mov
push
lahf
or
in
push
out
les
mov
adc
sub
cmp
sbb
outsb
push
push
cmp
call
or
and
fists
aad
jmp
out
jae
dec
add
cmp
inc
leave
sub
sub
inc
cmp
pushf
jnp
ret
cmc
or
dec
xchg
fwait
xlat
popf
xchg
sti
std
and
gs
sbbb
xlat
adc
mov
adc
jle,pn
aaa
out
adc
mov
data16
mov
stc
pusha
loope
and
lret
cli
dec
scas
cld
push
mov
push
xchg
and
bt
out
mov
test
push
xchg
xor
xorl
and
aaa
iret
dec
or
inc
mov
es
jo
jb
jo
cmpsb
hlt
bound
push
jb
clc
aas
lock
aad
mov
bsf
jnp
and
inc
mov
mov
pusha
cmp
into
inc
cmpb
out
dec
mov
leave
push
scas
into
and
sahf
dec
mov
pusha
insl
pop
sbb
mov
scas
outsb
loopw
mov
movsl
sub
and
xor
shlb
and
push
notb
mov
mov
sub
jne
negl
clc
cmp
or
inc
cmp
out
lods
cld
loope
adc
nop
sbb
add
shld
and
fimull
xor
lds
push
sahf
xor
sub
stos
push
sbbb
jge
js
out
push
in
pop
pop
int3
push
ret
lods
and
mov
push
addl
mov
pop
addr16
int3
sbb
std
mov
jl
fbld
das
jle
jbe
movsb
sub
jbe
adc
fdivr
std
jnp
mov
push
std
dec
push
stc
jle
xor
or
xor
xchg
sti
pop
mov
movsl
jecxz
test
pop
mov
or
inc
and
lods
cmp
mov
fadds
push
mov
xchg
sbb
in
mov
pushf
insl
inc
push
mov
jbe
aas
je
push
ja
push
mov
xchg
out
lret
sub
aam
stos
fldenv
shl
pushf
jns
jp
sbbl
and
hlt
gs
jp
mov
enter
and
popa
ret
aaa
dec
daa
jae
sub
ljmp
mov
cli
or
mov
adc
shr
sub
das
sbb
popa
lret
in
sti
inc
jbe
sets
mov
add
mov
xor
shl
fstpl
or
sbb
xchg
cwtl
int3
mov
push
and
pop
lret
or
enter
fcomp
inc
dec
xor
jno
lock
add
test
out
ljmp
pop
mov
mov
xchg
sub
ljmp
out
sub
xchg
dec
or
movsb
mov
pop
inc
mov
in
mov
push
fistps
push
inc
jge
rcl
fcmovne
mov
mov
xchg
call
add
std
fnstcw
add
dec
popf
popa
mov
adc
fs
mov
cli
or
nop
pop
pop
sub
mov
mov
jp
xor
mov
adc
jbe
jo
push
xchg
lea
scas
xchg
ret
mov
fcmovb
out
filds
mov
dec
mov
enter
xlat
fdivs
aas
push
mov
repnz
inc
xchg
add
icebp
out
mov
push
dec
jl
mov
aaa
rorb
pop
jp
popf
cltd
ds
jmp
xchg
mov
xchg
jl
xchg
movsl
dec
rcll
add
aas
push
jnp
mov
es
loopne
test
pop
mov
out
scas
xchg
add
outsb
int
js
pop
add
jmp
and
xor
sub
add
mov
mov
jae
mov
aam
add
xor
mov
cmp
neg
into
popf
stos
fxch
xchg
push
fiaddl
jg
or
dec
dec
stc
xchg
push
leave
es
push
cwtl
jb
in
mov
fisttpl
dec
std
bound
xchg
xchg
add
es
repz
aam
sub
outsb
pop
movsb
pop
arpl
int3
mov
push
sub
mov
push
loop
lock
mov
sub
push
fucomi
int3
add
mov
push
lret
sbb
and
mov
call
cmp
dec
dec
mov
push
shl
lods
aad
jl
and
pop
sub
cli
and
sbbl
cmp
lods
es
mov
jecxz
jl
fbstp
inc
ja
jno
out
or
imul
fcompl
stos
pop
cmp
notb
sahf
push
mulb
imul
pop
cli
les
adc
cmp
scas
mov
mov
and
shlb
sbb
push
ds
leave
sti
sbb
sbb
inc
imul
pop
int
and
push
aaa
push
cmc
mov
mov
adc
sti
mov
sbb
test
cmp
iret
std
enter
aas
enter
test
add
pusha
dec
shll
in
test
aas
mov
mov
push
mov
stos
xor
adc
mov
inc
fisttpl
stc
add
inc
or
mov
mov
cmp
popf
insb
add
sahf
sub
jno
in
mov
cs
cmpsl
add
fildll
xor
jno
lcall
icebp
data16
push
idiv
sbb
push
pushf
or
pop
mov
ds
aas
sub
jp
fisubl
or
fsubrl
pop
jmp
xchg
xor
lods
addr16
rorb
inc
cmp
dec
adc
jg
mov
ret
aas
mov
pop
arpl
ljmp
jbe
xchg
inc
ud1
out
aas
push
sahf
adc
sub
mov
repnz
sarl
add
xchg
scas
push
pop
pop
pop
call
mov
into
mov
and
pop
jecxz
fdivr
ja
popf
cmpsb
decb
mov
test
and
sbb
repnz
jo
stos
out
push
pop
notl
push
sub
shr
inc
sti
int
fsubl
jo
or
in
ds
mov
icebp
cs
jmp
mov
jbe
imul
push
or
dec
test
lods
push
je
adc
js
call
push
sub
pop
or
aam
push
jg
xor
inc
pop
jne
and
out
in
jl
pop
pop
cltd
adc
xchg
lea
andb
nop
sub
jne
sub
push
outsl
iret
jo
cltd
test
aas
mov
out
mov
scas
push
jge
stc
push
ljmp
cmpsb
mov
fidivs
sub
xor
cwtl
fmuls
add
adc
in
iret
push
cmp
ss
loopne
dec
call
sub
pop
repz
xchg
fildl
js
jb
iret
pop
mov
cmc
mov
nop
jno
xchg
xor
cmp
jg
mull
or
xor
cmc
out
mov
dec
add
push
mov
pop
testb
sub
in
inc
xor
inc
inc
push
cmp
jl
jae
jnp
xor
xchg
mov
dec
jle
frstor
dec
mov
sbb
mov
push
sbb
xor
jne
mov
jp
movsl
sbb
cltd
movsl
ds
or
hlt
loope
lret
sbb
inc
sub
push
inc
push
sbb
pushf
mov
and
add
mov
push
push
in
cli
add
cmpsl
cwtl
push
ja
lahf
fidivrs
sahf
addr16
shlb
pop
fsubp
fstl
mov
mov
fisubs
mov
jo
xchg
popf
lret
outsb
pop
out
mov
dec
repnz
sub
bound
mov
pop
push
jle
mov
sub
jno
adc
jp
bound
loop
cltd
xor
add
jae
inc
xlat
cmpsb
jnp
xchg
mov
mov
imul
rolb
rcrb
loope
mov
push
or
mov
and
or
push
and
add
xchg
js
mov
cmpsb
lret
mov
mov
jle
dec
pop
pop
dec
cmp
sub
sbb
or
cli
ljmp
mov
mov
jle
dec
pop
pop
dec
cmp
sub
sbb
or
in
ret
scas
mov
sahf
mov
jle
dec
pop
pop
inc
cs
adc
out
out
push
decl
iret
fimuls
mov
sahf
dec
outsb
test
in
pop
cmp
icebp
jb
mov
add
mov
jp
cs
mov
out
repnz
loop
sarb
and
jle
outsb
jb
bound
mov
mov
out
xor
loop
sar
ret
int3
and
add
bound
push
rolb
mov
subl
cmpsl
lret
insl
pop
inc
and
or
mov
and
je
cmp
scas
mov
cmpsl
add
aad
pop
dec
and
rorb
jle
insb
dec
sti
daa
sahf
insl
xchg
jge
or
mov
sub
fs
stc
dec
pop
fstps
testb
inc
arpl
jle
mov
js
add
push
push
ja
xlat
lds
aas
and
sahf
insb
lret
call
jno
push
idiv
int
ret
sub
bound
ss
cs
hlt
ficoms
cmp
out
mov
scas
ret
push
iret
sahf
shrl
push
mov
nop
fistpll
shl
ficoms
insl
add
jno
mov
and
jb
bound
push
in
scas
mov
mov
cmpsb
repnz
jbe
mov
push
dec
jnp
imul
adc
push
inc
dec
mov
mov
icebp
loop
mov
test
push
sbb
ja
outsb
dec
jb
daa
cmp
xlat
mov
orb
fbstp
or
outsb
or
push
ds
cs
mov
out
repnz
loop
sarb
and
jle
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
pop
cltd
sub
lds
xchg
cmpsb
xchg
cwtl
mov
sahf
add
leave
sub
int
sub
int
push
mov
push
pop
insb
lret
pop
idiv
jae
js,pn
rorl
out
jecxz
fsubr
sub
inc
inc
adc
cltd
pop
clc
stos
mov
jb
and
jp
out
and
mov
pop
xchg
hlt
adc
icebp
and
faddl
add
xlat
scas
inc
dec
sbb
jb
sub
es
mov
rcr
cmp
mov
pushf
rorb
pop
inc
push
leave
or
cmpsl
cmp
or
xor
stos
dec
cmp
adc
iret
ret
xchg
or
scas
iret
je
into
ss
dec
cmp
adc
or
imul
cmp
sub
ljmp
adc
xchg
inc
push
mov
dec
daa
cmp
adc
pop
mov
je
pop
adc
mov
je
or
fwait
add
lds
mov
jp
fsubrl
xchg
mov
and
or
std
cli
daa
jae
lods
movsb
ret
mov
xor
pop
addr16
push
not
cli
adc
hlt
call
and
xchg
pop
sahf
loope
fldcw
cld
fsubrs
jns
xor
xchg
push
ds
shll
push
push
xor
out
push
test
nop
je
inc
ffreep
lods
in
daa
xchg
pop
dec
sub
in
mov
adc
cmp
jle
sti
cmp
cmp
mov
test
mov
adc
mov
inc
mov
sarb
add
test
xchg
push
xor
jmp
mov
repz
divl
xchg
or
xchg
xor
xchg
cltd
pop
jmp
mov
sub
data16
pop
mov
xchg
push
les
push
xchg
fxam
jne
or
and
mov
mov
and
ja
lods
push
jbe
adc
mov
xchg
xor
cli
mov
cmp
jge
xchg
mulb
ret
les
mov
jne
inc
jle
mov
pop
pop
mov
jo
fmull
sbb
ja
lods
dec
in
cmpl
popw
test
or
pop
mov
add
in
out
rcrl
and
repz
mov
outsb
cmp
aad
frstor
inc
pusha
xor
dec
insl
jae
adc
iret
jmp
pop
js
cmp
addr16
stos
out
test
jl
push
pop
subb
jle
push
lods
dec
sub
ficoml
cmp
add
lods
adc
sub
cmp
aad
arpl
mov
jmp
push
or
pop
loop
lret
repnz
mov
xlat
pusha
inc
mov
jb
xor
mov
push
dec
fwait
add
or
jmp
mov
data16
lahf
leave
adc
dec
je
xor
cmp
add
inc
mov
int3
pop
push
hlt
push
mov
add
pop
xor
dec
imul
sub
or
dec
loop
arpl
ss
push
repnz
adc
jmp
stc
insb
mov
inc
xor
add
repnz
push
stos
rcll
push
cmpsl
xchg
push
mov
and
xchg
mov
jle
test
adc
add
ljmp
jnp
pop
jp
lods
movsb
lret
arpl
lds
sub
dec
adc
addr16
test
lret
and
add
repnz
js
xchg
push
xlat
sti
lahf
or
test
mov
stos
lods
mov
mov
cmpsb
sti
inc
mov
mov
sub
jle
faddl
add
sbb
xor
xor
sbb
mov
mov
fwait
push
dec
inc
jmp
and
jmp
mov
push
dec
add
ljmp
xor
adc
std
outsb
daa
int3
test
cs
dec
push
ret
xorb
push
js
loop
divb
lahf
cmp
xchg
repnz
inc
sub
jecxz
push
mov
xchg
add
out
and
mov
outsb
orb
jle
clc
pusha
sbb
sub
aad
testl
mov
xchg
xchg
popf
fldl
mov
je
mov
mov
jge
xchg
sbb
push
lds
call
sar
sub
pop
pop
mov
or
mov
outsl
mov
push
xor
ficoml
lret
cli
orb
out
pusha
movsl
push
mull
dec
shll
sub
cwtl
inc
leave
mov
sub
push
testb
inc
cmp
mov
add
or
push
popf
test
frstor
aad
jb
push
xchg
push
push
mov
leave
dec
iret
jno
adc
inc
in
add
mov
fcmovu
jmp
call
test
pop
xor
enter
push
ss
movsb
mov
inc
iret
scas
pop
arpl
pop
mov
sbb
push
bound
push
push
jp
jnp
fidivrs
ret
cltd
cmp
orb
mov
push
xchg
and
mov
lods
xor
cmp
aas
adc
mov
pop
or
mov
nop
pop
push
call
push
cmpsl
inc
xchg
pusha
lds
push
mov
adc
adc
lret
xchg
or
jl
adc
sbb
movzbl
mov
sbb
lods
mov
mov
sbb
lea
das
xchg
jbe
fmull
in
mov
out
imul
dec
and
sub
popa
push
jmp
xchg
jmp
xchg
jecxz
jg
gs
inc
movsl
cmpsb
cmp
lea
cmpl
loopne
pop
jnp
popa
dec
mov
and
inc
xchg
sbb
lret
push
sbb
ss
cmp
loop
or
sahf
fdivl
or
fcomps
cmp
daa
cld
int
ss
repz
mov
cmp
sbb
mov
lret
push
fwait
mov
bnd
out
mov
das
repz
push
dec
dec
cmc
push
sti
sub
js
lcall
scas
mov
xchg
push
pop
dec
rorb
bound
jmp
adc
xchg
and
jl
dec
add
cmpsb
cs
adc
push
nop
inc
sarl
and
push
cmc
int
jg
sahf
fnstcw
cli
adc
cmp
in
mov
inc
lea
scas
pop
les
imul
dec
test
jbe
xor
int
fimuls
adc
sub
dec
pop
cmp
adc
xor
jp
sub
and
cltd
insb
pop
js
ficomps
sub
pop
arpl
divb
pop
sub
add
xchg
or
xchg
mov
cmpsl
sbb
in
mov
call
or
or
or
sub
stc
lea
push
mov
das
fisubs
lods
cmc
pop
dec
insl
and
cmpsl
jl
xor
sarb
in
dec
xor
stos
popf
cmp
mov
dec
push
aaa
adc
xchg
sub
fildl
pop
addr16
and
cli
mov
cmp
or
pop
movsb
in
and
in
stc
enter
fiaddl
cmp
das
jmp
mov
and
stos
loop
hlt
xchg
push
inc
mov
sbb
inc
cltd
into
inc
or
inc
ret
dec
divl
ljmp
or
jne
mov
leave
xchg
fdivrs
or
cwtl
dec
outsl
imul
dec
mov
stos
or
add
or
nop
nop
int3
mov
sub
stc
push
add
lock
addr16
sbb
idivl
cmp
inc
ret
sub
mov
push
push
hlt
movsb
xchg
std
adc
mov
mov
cmc
mov
mov
mov
test
jae
loop
jno
iret
call
xchg
mov
mov
jge,pt
testl
loope
xchg
aad
test
push
cmpsl
pop
and
sbb
nop
shrb
sub
aam
orl
mov
popa
xchg
andb
push
push
xchg
pusha
lods
in
lock
outsl
scas
int
je
cmp
cs
cmp
fmuls
xchg
add
popa
scas
aad
jae
fisubs
mov
mov
stos
shrl
scas
or
mov
enter
lcall
imul
jg
popa
iret
ss
std
addr16
adc
sti
lret
addl
rcrl
push
in
das
movsl
adc
and
cltd
mov
and
push
jl
add
cmpsb
xor
lea
inc
inc
push
shlb
cmp
mov
or
adc
xor
jge
out
and
cmp
inc
aaa
addr16
and
inc
add
push
sub
mov
xor
loope
pop
mov
jl
outsb
mov
or
cli
loop
ffreep
xor
xor
cmp
mov
or
stos
jb
sub
fstl
and
adc
mov
add
mov
push
test
xor
nop
ds
movzbl
arpl
adc
movb
mov
inc
push
mov
inc
fwait
xor
mov
ds
repnz
out
dec
test
call
adc
xor
adc
push
sarl
xor
or
cmpsl
test
hlt
inc
add
fidivl
dec
dec
loopne
ja
in
dec
outsl
pop
and
rolb
inc
push
loope
pop
mov
adc
xchg
xor
repz
std
ljmp
int
jmp
push
out
jge
leave
lcall
jge
and
mov
jle
ds
or
out
rcr
mov
repnz
dec
xor
push
push
std
fs
push
test
out
lock
out
jne
into
mov
sub
xchg
jae
dec
int
adc
push
push
mov
mov
mov
or
and
pusha
mov
lods
mov
fdivp
xor
icebp
add
pop
inc
loopne
xchg
cs
dec
jb
add
mov
add
int3
jae
xchg
cltd
jns
add
das
shl
push
in
push
lcall
push
or
inc
in
jge
jl
testl
mov
push
dec
pushf
xor
push
cli
pop
repnz
mov
xor
xlat
inc
or
mov
lahf
les
sub
lret
mov
cmp
lcall
jo
and
xchg
scas
out
gs
xchg
lahf
dec
test
icebp
add
or
ds
out
pushf
movsb
ret
or
inc
and
ds
mov
out
fidivs
push
negb
mov
scas
mov
ja
lret
out
cmpsb
jo
call
test
arpl
xor
decb
cmpsb
aaa
popa
mov
int
imulb
stos
inc
sub
jne
xchg
and
inc
xor
xchg
repnz
sbb
sub
pushf
sbb
icebp
fisubrs
repnz
idivb
adc
inc
lea
xor
ds
pop
and
lods
pop
aad
stos
outsb
movl
xchg
dec
pop
mov
fnstcw
repz
ud2
or
gs
test
cld
lods
adc
ja
mov
jle
pop
push
mov
jb
dec
cwtl
xchg
mov
mov
test
mov
inc
int3
dec
mov
sahf
add
fsubrs
adc
imul
sub
das
sti
lcall
pop
xor
repnz
jo
mov
mov
movsb
adc
adc
into
mov
mov
mov
jno
push
adc
nop
add
xchg
sbb
add
xchg
mov
clc
adc
out
out
out
adc
push
mov
and
sbb
loopne
out
pusha
mov
scas
pop
and
mov
xchg
lea
ss
mov
push
pop
sar
push
jae
xlat
sub
idivl
xor
xor
cwtl
sbb
fstp
pop
jbe
or
push
mov
xor
and
shll
mov
dec
cmp
push
sub
pop
jne
cmp
mulb
and
stos
int3
xchg
cmp
pop
loop
pop
loop
xchg
mov
test
sbb
dec
xor
setge
push
fcoml
nop
sbb
enter
pop
push
pushf
add
sbb
js
xor
jno
add
sahf
mov
mov
lret
imul
es
and
rorl
mov
loope
cmpsb
testb
test
dec
mov
xchg
out
lods
jmp
div
jo
inc
and
rcll
loope
jns
cwtl
ja
aad
mov
xchg
rorl
popf
outsb
pusha
icebp
sbb
aaa
and
enter
xchg
jno
scas
jbe
lea
xchg
icebp
and
xchg
ret
imul
adc
insl
ficoml
mov
add
mov
in
jb
daa
push
xlat
mov
imul
cmp
ds
lret
mov
int3
in
outsl
mov
nop
xor
out
xchg
add
cmc
jecxz
popf
cmp
jno
xchg
sbb
xchg
pop
fisubl
dec
loope
sub
popa
icebp
dec
and
add
pop
test
aam
pop
data16
mov
sub
das
cmp
aas
dec
popf
ror
out
sbb
jge
fists
in
mov
aam
jne
std
xchg
rcrb
jl,pn
stos
scas
pop
push
out
xor
mov
dec
shlb
mov
mov
mov
sbb
ds
add
add
cmp
mov
xchg
xchg
dec
mov
xor
mov
add
lods
cwtl
rcrb
jge
inc
dec
adc
ja
ds
adc
movsl
push
adc
mov
out
push
jge
mov
test
mov
add
fwait
scas
push
and
and
mov
clc
jb
aad
sti
push
dec
movsl
daa
pop
pop
sub
aas
or
sbb
xor
ror
adc
daa
mov
pop
sti
xor
sarl
iret
or
add
mov
daa
jl
enter
fprem1
popf
push
iret
sub
mov
shll
xchg
ret
out
ret
jecxz
or
pop
sub
push
mov
mov
jnp
push
pop
pop
leave
jns
repnz
or
push
inc
faddl
sub
popf
dec
lret
mov
imul
repnz
ja
jl
cmp
sbb
sub
sbb
xlat
mov
mov
stos
jne
das
imul
es
mov
das
jge
jb
in
shl
andnps
scas
aad
sbb
jno
sbb
mov
and
cs
loopne
sbb
push
dec
iret
cmp
ljmp
rorl
lret
cmp
mov
dec
stc
imul
jecxz
and
movsb
xlat
sub
dec
cmc
jge
and
mov
outsl
inc
lock
push
incl
je
jmp
jae
out
xchg
inc
scas
cli
negb
jb
xchg
and
cmpsb
mov
aas
js
into
push
call
ret
xorb
push
mov
push
cmp
mov
iret
sbb
adc
and
cmpsb
insb
fwait
add
dec
aas
and
push
repnz
push
in
and
add
mov
jp
sub
sbb
push
mov
std
add
fimull
pop
pop
dec
cltd
test
call
sub
fbstp
pop
pop
xchg
pushf
std
mov
jne
jg
stc
xchg
push
lcall
push
and
mov
or
test
sarb
insl
aaa
sbb
stc
fsts
cwtl
jg
negb
sarl
or
in
xchg
pop
gs
sbb
bound
jns
adc
repz
stos
in
aad
incl
jnp
push
int3
pop
sub
mov
aas
data16
scas
stos
popf
adc
adc
and
lock
add
xor
into
sbb
lds
shlb
xchg
sub
mov
and
leave
test
hlt
push
mov
jle
adc
mov
dec
cmp
aaa
outsb
fwait
adc
cmp
jle
jle
add
movsb
jp
push
xor
ret
pop
add
mov
mov
pop
lcall
loop
dec
mov
mov
jmp
es
imul
lcall
stos
lret
mov
ljmp
push
je
push
sbb
xchg
push
out
movsl
mov
arpl
jae
sub
test
rorl
adc
lea
out
push
inc
lcall
sub
andl
nop
in
hlt
jo
test
push
xor
push
fwait
fwait
out
iret
and
sbb
jo
divb
sub
or
mov
push
xchg
cli
daa
notb
inc
or
jp
cmp
xor
xchg
out
sbb
xor
pop
jno
test
lahf
sbb
cwtl
sbb
test
ret
xchg
sbb
sub
int3
aas
out
jno
or
sarl
mov
sub
mov
aaa
and
out
ret
sub
sub
xor
dec
dec
xchg
gs
xchg
mov
ret
inc
mov
jo
js
push
ljmp
test
orl
popf
ljmp
sub
mov
add
sub
sahf
mov
push
mov
dec
clc
jne
mov
dec
dec
shll
lret
insl
mul
and
cmpsb
fcompl
cmp
in
insl
stc
push
mov
mov
mov
sbbb
ret
mov
mov
imul
pop
out
jo
out
adc
sub
mov
lea
mov
mov
adc
movsl
loopne
mov
int3
jno
push
stc
imull
stc
gs
push
cld
addr16
imul
or
cltd
mov
mov
sub
adc
aad
xchg
xor
sub
mov
rcr
outsb
icebp
out
outsl
out
cli
jno
sbbl
dec
push
inc
mov
jp
dec
cs
xchg
pop
leave
or
pusha
cld
pop
jae
push
insl
cmp
cs
mov
add
shlb
pop
mov
cmpsl
jg
xor
scas
jno
add
sbb
lret
mov
stos
aaa
dec
scas
mov
arpl
jae
clc
imul
movups
in
pushl
adc
sbb
xchg
mov
sbb
sbb
pop
or
dec
pop
addr16
sbb
mov
and
mov
dec
jns
jns
pop
push
hlt
mov
pop
stos
jmp
dec
idivl
dec
js
les
cmc
icebp
in
add
daa
xor
and
cld
mov
fwait
dec
add
adcl
ja
xchg
inc
test
jg
test
xchg
inc
jns
push
mov
mov
aaa
pop
iret
imul
and
mov
in
lahf
and
and
scas
dec
cmp
rcrl
in
inc
das
mov
ja
add
fnstenv
push
adc
mov
js
stc
pop
lret
jmp
fidivs
cs
aad
daa
or
jno
xor
arpl
popa
pop
and
xchg
push
popa
cmp
mov
movsl
aam
shll
repnz
cmp
sti
mov
mov
xchg
add
inc
int
jno
imul
push
xorb
mov
pop
popf
sar
cld
mov
pop
push
jne
mov
shrb
das
pop
dec
ss
scas
add
cmp
add
test
mov
inc
xor
mov
xchg
aaa
out
and
daa
nop
out
xor
ljmp
pop
jae
mov
dec
mov
mov
xor
outsl
out
cltd
stos
lods
dec
bnd
ficoms
jne
add
push
pshufw
jl
call
aam
fnstsw
fdivl
push
dec
adc
daa
add
in
mov
lds
cmpsl
pop
or
dec
dec
xor
add
jno
imul
cli
aas
ss
cmp
cmpb
lcall
push
add
fistl
cmp
les
jo
push
or
dec
jp
scas
fmul
popf
or
imul
jo
dec
mov
sbb
inc
mov
fs
cli
fadd
push
inc
sbb
push
push
aas
jbe
or
in
push
sti
loop
or
xchg
rdpmc
sub
scas
stc
jmp
and
js
insb
out
testl
out
shll
ljmp
dec
mov
push
xor
fnsave
sbb
imul
addr16
lea
nop
xor
pop
gs
movsb
repz
mov
xchg
push
jge
push
test
cs
in
sahf
rcrb
fsubrp
orb
jne
mov
add
cmpl
dec
push
testl
xchg
dec
mov
out
mov
push
rcrb
lret
fistps
ret
test
pop
jo
shr
mov
push
aam
xchg
cld
nop
fldenv
mov
sbb
mov
pop
hlt
xchg
sbb
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
and
jle
outsb
jb
bound
push
ds
cs
mov
out
repnz
loop
sarb
mov
outsb
repnz
bound
mov
mov
out
repnz
loop
rcrb
and
jle
outsl
jb
bound
push
mov
mov
cltd
adcb
jno
inc
mov
jge
insl
mov
mov
mov
add
cld
push
in
and
pop
int
mov
push
lea
mov
mov
cmp
rorl
and
adc
add
push
lea
stos
je
inc
mov
and
xor
ftst
xor
add
cmp
pop
shll
sub
incl
rcrl
cmp
outsb
cmp
sub
jmp
xchg
add
lods
mov
sub
subl
js
frstor
inc
xor
in
adc
mov
scas
mov
test
sahf
stos
xor
and
jns
cld
mov
push
lea
jl
jge
xchg
insb
imul
loop
or
jbe
in
fucomp
in
xor
push
lods
lea
ss
shrb
ret
xchg
push
stos
std
iret
sub
fsubr
cmp
jae
add
xlat
sbb
or
jns
inc
out
rolb
dec
mov
pop
incb
mov
je
pop
mov
sub
cmp
xor
cmp
or
sbb
dec
lea
mov
sarl
idivb
out
icebp
dec
adcb
cmpsb
std
pop
andl
mov
cmp
das
adc
or
xor
cmp
lods
sbb
inc
mov
jbe
add
xor
aaa
sbb
and
jecxz
rorl
and
adc
add
push
lea
mov
mov
cmp
rorl
and
adc
add
push
lea
mov
mov
adc
adcl
enter
lods
fbstp
or
push
inc
cmp
aad
jecxz
sub
shlb
mov
ja
cmp
xor
jl
sbb
scas
lock
test
orl
lcall
lahf
aaa
and
push
dec
aas
and
sahf
jl
fldcw
insb
jp
rcrb
xchg
mov
mov
insl
push
sti
cltd
ss
dec
dec
loopw
push
scas
inc
xchg
test
rcrb
insb
mov
ret
jb
mov
pop
es
sub
jne
and
jge
dec
clc
push
jmp
shrb
jbe
inc
std
daa
cltd
jmp
addl
jne
pop
sti
xchg
inc
ljmp
movsb
loope
dec
jb
outsb
daa
test
pop
xchg
mov
ss
and
out
inc
loope
inc
add
idivb
test
leave
inc
aaa
lds
nop
push
into
dec
aas
pop
and
cmp
pop
jnp
xchg
dec
cmp
gs
xchg
movsb
sbb
imul
in
scas
dec
js
inc
jae
dec
pop
adc
jns
adc
hlt
jnp
or
xlat
cld
push
add
mov
dec
cmpsl
ja
shrl
imul
andl
push
aas
pusha
aam
mov
or
rcrb
jmp
or
push
pop
jae
add
loop
enter
out
mov
or
push
cld
scas
test
arpl
cmpsb
add
jb
jge
les
and
sub
jl
pop
inc
sbb
ficoms
push
inc
add
add
and
xor
xor
and
mov
add
repz
fimuls
lret
lret
sub
and
std
mov
mov
out
out
test
dec
fidivs
imul
loop
add
mov
std
inc
cmp
dec
dec
add
jo
push
add
add
aas
sub
dec
push
cmc
lods
ret
adc
lods
cmp
cmp
scas
mov
in
lea
enter
mov
mov
neg
addr16
jle
movsl
pop
sahf
ds
jge
clc
pop
gs
test
or
gs
filds
push
push
es
push
out
icebp
and
push
in
lret
push
enter
lods
sub
in
out
aaa
mov
jns
xor
out
pop
mov
or
or
insb
fs
push
daa
aad
inc
into
ret
pop
aas
andb
push
rorl
iret
mov
pop
ds
mov
inc
stos
aam
adc
xchg
sub
jl
je
and
pop
mov
sbb
xchg
lods
mov
js
out
lods
loop
fwait
clc
lcall
imul
out
add
push
stos
xorb
rcrl
and
adc
xor
sub
lahf
aad
cmp
jbe
inc
xlat
push
mov
test
adc
ja
xchg
rcr
push
cmc
dec
dec
cmc
xchg
ja
cmp
mov
shrl
cmova
xchg
sub
or
sub
sub
icebp
lret
push
into
or
pop
mov
push
in
fldl
sbb
fnstcw
xchg
or
rorl
maskmovq
testl
mov
push
sbb
push
cmc
push
mov
mov
or
jnp
lea
xchg
mov
cmpsl
or
shrb
in
lret
call
pop
rcr
lret
mov
jmp
jge
fildll
ror
mov
cmp
outsl
sbb
dec
stos
and
pop
mov
push
rcll
lods
push
mov
clc
inc
jns
sti
cs
adc
inc
lock
in
ret
fnstcw
jecxz
pop
lret
cld
push
add
sbb
lahf
test
push
and
add
rol
mov
mov
test
int3
mov
jb
add
pop
cwtl
imul
lret
fnstsw
add
pop
jle
xchg
stc
mov
aam
mov
test
cld
inc
mov
popf
mull
push
or
jmp
xor
aas
pop
rol
mov
movsl
or
test
and
lahf
shlb
cmc
and
dec
xchg
test
fdivrs
in
lahf
cmc
dec
push
out
inc
gs
mov
mulb
sti
movsb
cld
jnp
in
lods
xor
adc
daa
addl
xchg
loop
push
mov
call
mov
movb
mov
xchg
xlat
adcl
dec
scas
and
fcmove
bound
lret
lret
xorl
inc
nop
mov
in
cmpb
es
cmpsl
xor
movsl
rolb
xor
pop
in
mov
mov
outsb
jne
inc
int3
data16
icebp
mov
ljmp
cltd
jb
xor
daa
shll
mov
push
push
movsl
mov
hlt
mov
and
fs
pop
scas
pusha
aas
in
scas
or
gs
imul
out
fsub
mov
inc
dec
fnsave
mov
into
push
mov
adc
outsl
hlt
lcall
and
arpl
xchg
and
nop
xchg
push
mov
scas
outsl
stc
or
cmp
ja
xor
rcrl
jno
push
mov
imul
iret
es
mov
mov
gs
adc
cmpsl
test
sub
daa
sub
xchg
jle
and
leave
xchg
insb
or
jb
inc
das
mov
ja
mov
in
mov
enter
lret
cmp
adc
insl
and
shll
sub
stos
pop
orl
popf
inc
xor
sbb
rcrl
ficompl
out
mov
addr16
cmp
sti
pop
sbb
andw
out
jge
pop
rol
jecxz
mov
mov
stos
lret
and
add
repnz
sub
push
cmp
add
in
divb
dec
mov
aaa
cwtl
rclb
movsb
into
and
decb
xchg
mov
push
les
dec
mov
mov
adc
and
loopne
cmc
std
adc
insl
mov
data16
fiadds
inc
push
out
in
shrl
mov
cmpsl
mov
or
adc
lds
shr
fiadds
roll
repnz
arpl
xor
in
mov
sysret
jmp
push
cmc
pop
mov
sbb
push
lds
sbb
inc
cmp
les
cwtl
cwtl
add
fcmovbe
xor
mov
loope
rorl
jns
xchg
xor
lods
lcall
in
and
pop
arpl
adc
and
insl
subb
mov
aad
mov
xor
pusha
fisttps
icebp
cmp
xlat
outsl
sbb
data16
cmc
jl
mov
pop
mov
in
jae
ficoms
cmp
imul
lret
push
cwtl
cmp
ljmp
das
shlb
sti
lds
and
test
ret
fidivrl
rcl
sbb
dec
pop
xchg
add
aas
jne
sbb
outsl
jle
mov
aad
test
xor
inc
mov
ss
mov
fs
push
push
popa
xchg
imul
scas
ficompl
cmp
ror
lds
pop
les
pop
lahf
test
out
sbb
pop
jge
and
cld
mov
mov
and
add
add
and
mov
jb
call
mov
mov
lcall
sbb
int3
sbb
jo
std
rcrl
jns
push
cmpb
idiv
cs
testl
xchg
xor
pop
testl
push
das
pusha
push
stos
mov
cli
mov
dec
es
icebp
sti
jle
add
imul
ss
sbb
repnz
arpl
cmp
divl
in
and
fcomps
repnz
je
lea
mov
shl
fisttpll
aaa
lods
icebp
sub
loop
mov
pop
adc
pop
pop
add
mov
lret
sbb
filds
gs
dec
jp
test
sub
lods
imul
movsb
push
pop
adc
jne
inc
xchg
cmpsl
add
sub
adc
inc
and
or
or
test
cmp
mov
mov
scas
test
mov
push
or
push
jp
fcmovu
inc
xor
clc
push
hlt
push
push
cmp
xlat
out
push
sbb
je
lahf
in
in
push
outsl
push
dec
sub
and
test
jp
aaa
xchg
mov
popa
cmpsl
adc
je
fisubrl
mov
fsts
xor
inc
sub
or
pop
icebp
les
rolb
aam
adc
call
ds
jg
push
xchg
push
hlt
push
cs
fildl
adc
addb
xor
inc
adc
jbe,pt
mov
sahf
insb
add
pop
sbb
mov
cmp
aas
leave
fldl
in
pop
sahf
xor
lock
sbb
add
cmp
fidivl
es
mov
bound
ret
push
inc
pop
ficoml
loope
add
test
daa
cmp
mov
jno
cmovns
das
mov
jecxz
dec
push
mov
add
incl
pop
fwait
stos
pop
repz
in
push
lods
jns
in
fs
and
repnz
cmpsb
mov
add
insl
push
les
adc
aas
idivb
sub
lahf
jecxz
int3
mov
dec
push
daa
add
movsb
mov
lock
out
js
and
or
jl
ret
lcall
mov
xor
pop
call
cmp
mov
push
imul
stos
add
cmp
or
mov
stos
jae
mov
mov
loop
mov
aad
pop
int3
clc
jo
pop
int
pop
call
mov
xchg
sahf
mov
popf
jns
inc
push
imul
cmp
jmp
adc
or
xchg
jno
xchg
cmp
lods
pop
cwtl
push
out
inc
js
shlb
dec
rol
dec
je
imul
dec
or
mov
push
cmpsl
lret
adc
jmp
xor
xor
ja
test
or
rolb
dec
call
lcall
fiaddl
add
jle
jmp
jb
mov
sub
repnz
sbb
mov
jge
enter
movsl
jle
jmp
nop
fidivs
repz
ss
and
idivl
mov
gs
rcr
std
loope
out
pusha
jg
mov
push
pushf
stc
leave
jl
imul
pushf
test
cmp
jmp
cld
add
aam
gs
jns
cmp
pop
jle
ret
cld
stos
loope
or
aad
call
inc
jecxz
push
inc
shr
cmp
lea
scas
dec
addl
mov
insb
push
adc
mov
sahf
movsb
mov
lret
outsl
repz
pop
inc
and
xchg
mov
imul
xchg
mov
insl
dec
repz
adc
scas
enter
sbb
pop
lea
jae
mov
in
loope
jnp
int3
mov
and
rcr
test
loope
mov
cmc
cmp
ljmp
xchg
insl
push
les
mov
adc
jecxz
push
stos
outsl
daa
outsb
jnp
sar
inc
in
jle
mov
pushf
mov
sbb
and
mov
mov
rcll
jecxz
ja
lds
xor
push
jmp
stc
pusha
push
icebp
xor
sub
or
adcb
xchg
jmp
xor
push
sbb
gs
or
push
cmpsl
imul
stos
xchg
mov
jbe
decb
sahf
call
push
out
es
jbe
sub
stc
jg
popa
repz
xor
push
and
inc
bnd
arpl
aad
out
cmpsl
add
jo
add
fistpl
icebp
pop
add
popf
xchg
test
jp
loopne
outsl
push
mov
out
lods
jb
pop
add
adc
xchg
cs
push
xchg
imul
loope
pusha
test
lahf
mov
addl
aad
fnstenv
in
clc
loop
mov
and
pop
xor
subb
sub
mov
js
loopne
int
mov
sbbl
test
sub
pop
loope
imul
pop
mov
in
lods
dec
mov
mov
or
stos
adc
hlt
mov
mov
into
pop
cmp
xchg
lods
mov
xchg
mov
mov
pushf
loope
test
pop
cld
or
mov
jmp
dec
inc
lods
jbe
inc
adc
cmpsb
fwait
lret
xchg
push
pop
inc
jle
dec
push
dec
imul
pop
and
iret
mov
inc
cs
shrl
dec
js
pop
jnp
stc
and
cmpsl
rcrb
mov
cmp
and
and
sete
add
inc
daa
xchg
cmp
lcall
and
or
jp
lcall
xor
adc
pop
jmp
add
test
out
adc
cmp
mov
in
sub
adc
mov
push
sub
xor
cs
jp
in
aaa
into
add
aaa
lods
icebp
outsl
lods
and
jmp
mov
rorb
mov
iret
cmp
lock
or
pop
stos
fcoml
mov
cmp
mov
movsb
mov
cli
fwait
cli
add
push
call
into
mulb
dec
jge
mov
and
in
sbb
fisttps
xor
inc
outsl
push
jl
pusha
sbb
cwtl
sti
push
fmuls
sahf
in
sbb
sbb
push
jle
sub
lock
aaa
call
sbb
xlat
xchg
sbb
adc
out
xchg
test
adc
dec
flds
sbb
lea
or
xor
adc
push
sub
mov
leave
ds
test
jb
mov
in
addl
test
jl
pop
dec
dec
popf
push
push
and
jae
mov
sub
leave
mov
xor
shll
in
mov
in
in
or
lods
mov
jb
dec
jl
std
cmp
call
movsb
callw
dec
ficompl
mov
push
pop
les
dec
adc
scas
orb
leave
testb
inc
push
cmp
int3
out
pop
xor
in
lahf
mull
dec
pop
fildl
js
lods
mov
push
mov
jne
jecxz
imul
inc
fld
mov
adc
xchg
js
dec
repz
in
mov
push
and
mov
popf
fbstp
sbb
out
int3
mov
arpl
mov
xor
and
sub
pop
mov
xchg
xchg
movsb
cmc
int3
push
pop
mov
sub
mov
fcmovnu
aad
gs
mov
mov
mov
pop
subb
and
pop
cmp
arpl
cmp
jne
xor
adc
push
xchg
iret
lret
insl
fwait
or
jecxz
test
and
daa
inc
pop
xchg
add
shlb
cltd
adc
enter
or
add
sbb
mov
mov
add
sub
lret
adc
aaa
loope
sbbb
scas
add
jb
repnz
testb
push
ret
call
jmp
mov
aad
fs
jmp
xlat
es
cwtl
dec
test
mov
and
cld
aas
inc
xlat
jmp
mov
and
ret
jl
cmp
mov
xchg
in
lods
mov
lcall
out
push
push
and
mov
push
psrld
lcall
adc
mov
ljmp
insl
ficompl
cli
mov
es
xor
push
inc
xchg
jnp
das
lea
imulb
inc
loopne
gs
push
mov
or
repz
scas
lcall
ret
inc
pop
out
daa
loopne
pop
and
call
imul
gs
adc
inc
clc
jge
dec
cli
mov
js
pop
mov
mov
out
sahf
xor
pushf
sub
sbb
sarb
mov
lds
jmp
dec
sbb
sub
jae
adc
rcrl
and
dec
sub
pop
sbb
insb
add
fs
lea
insl
xchg
pushf
push
in
andl
shll
push
mov
xchg
fcmovu
or
jmp
mov
jnp
movlhps
jno
popf
cmp
mov
pop
push
lock
mov
mov
xchg
xor
fldt
pop
aad
adc
icebp
sub
popl
incl
lret
stc
les
out
fwait
adc
jno
jnp
jns
pop
push
lock
push
mov
mov
xor
data16
scas
or
aaa
aam
int3
scas
mov
xchg
loop
adc
and
xchg
sbb
sub
pop
inc
inc
fsubl
push
imul
push
push
xchg
add
loop
mov
int3
jecxz
jecxz
scas
or
adc
mov
movsb
push
mov
mov
nop
and
je
movsb
imul
shlb
cmp
sahf
cmp
cmp
xor
or
imul
imul
outsb
push
fsubrl
hlt
arpl
pop
and
xcrypt-ecb
cmpsl
mov
or
fimuls
sysenter
out
insb
mov
sarl
lcall
xor
sbb
jns
dec
fwait
test
popa
je
and
mov
orb
and
add
stc
mov
mov
arpl
cmpb
shll
mov
sbb
adc
push
aas
loopne
xor
xor
lods
bnd
popa
adc
xor
jl
cmpb
jnp
mov
dec
iret
push
pop
pop
insb
xchg
clc
sbb
xor
bound
xchg
inc
lock
jae
les
mov
push
xchg
jns
jge
mov
int3
xlat
inc
push
dec
mov
aas
mov
push
and
sbb
inc
xlat
lods
inc
sbb
shl
sbbl
std
mov
push
outsb
push
xchg
cmc
push
popf
mov
in
pop
call
or
jnp
scas
imul
jl
dec
mov
dec
jno
add
hlt
scas
lret
rorb
rcr
or
sub
dec
cmp
imul
test
sbbb
hlt
push
jecxz
xor
jns
stc
sti
pop
fwait
pop
inc
dec
roll
jne
lea
jmp
xor
xlat
cli
dec
fidivrl
popa
clc
subl
or
pop
inc
nop
mov
lret
sarl
jb
cltd
push
mov
add
cmpsb
insb
mov
je
xchg
outsb
adc
or
jl
mov
sbb
inc
ljmp
xchg
mov
loop
mov
push
xor
mov
jae
inc
adc
loopne
fbstp
imul
cmp
xor
sub
pushf
negb
scas
push
fisttpl
inc
cmp
leave
testl
dec
sbb
jp
int
aad
mov
outsb
mov
ret
mov
pop
or
push
jne
ror
cmpsl
pop
sbb
xor
or
adc
xchg
or
xor
sarl
mov
mov
mov
lock
sbb
mov
sbb
scas
repz
cmp
jg
mov
sub
and
popa
mov
jmp
sbb
repnz
sub
jmp
inc
mov
imul
push
inc
pop
frstor
and
jge
dec
push
xor
xor
adc
sbb
in
jl
cmp
out
dec
xchg
loop
ja
inc
aas
repz
popf
and
idivb
adc
or
popa
or
mov
shr
inc
or
sub
pop
adc
cmp
push
inc
mov
jne
pop
dec
fdivs
push
inc
leave
jae
push
pop
push
jbe
xchg
push
jp
cmp
pop
or
push
mov
mov
in
pop
dec
fwait
data16
cs
pop
dec
jae
jge
lock
fadds
movsl
sahf
lret
pusha
pusha
cli
sub
jle
jae
std
mov
shl
push
cmp
bound
push
cmp
mov
test
es
je
rcrl
in
inc
add
idiv
fstpl
push
ffree
mov
inc
and
fcoms
xor
lahf
out
je
sub
lods
mov
fnstcw
sub
stos
lock
aad
inc
les
ljmp
cmp
cmp
test
lods
xor
pusha
cmp
push
xchg
cmp
loopne
lret
sbb
sbb
ret
in
pushf
and
mov
leave
cli
fnstsw
incb
fmull
rcrl
sbb
cmc
ds
inc
adc
je
aam
mov
jnp
push
push
movsl
and
popa
cwtl
inc
add
mov
cmp
rorl
and
adc
add
push
lea
mov
mov
cmp
rorl
and
adc
add
push
lea
mov
mov
cmp
rorl
and
adc
pop
mov
push
popl
mov
cmpsl
pop
xchg
dec
cmpl
sub
add
xor
mov
int
lret
sbb
sub
cmp
sbb
dec
mov
out
inc
mov
push
add
mov
int3
or
sbb
sub
sub
test
fsubrl
pop
cld
dec
mov
pushf
lods
push
mov
out
or
fstpl
sub
cmp
je
outsb
jle
and
xchg
daa
cld
ss
mov
aam
stos
sbb
ljmp
js
pusha
mov
sub
divl
xchg
iret
or
gs
icebp
cwtl
dec
push
sbb
sub
aad
and
das
insb
jns
mov
xchg
xor
jmp
cmp
sub
ret
ret
xor
ljmp
push
loop
jnp
jns,pn
jl
sbb
pop
scas
in
add
or
jle
push
pushf
out
push
inc
mov
adc
xorb
in
sbb
sub
inc
rorl
jo
adc
daa
dec
aaa
jae
out
insb
fwait
cmp
dec
sbb
aam
xor
jno
mov
pop
add
push
and
cmpl
cli
in
mov
sub
aas
sahf
xchg
jle
jns
dec
cld
push
push
pop
sbb
mov
negb
dec
xlat
inc
cmpsb
push
mov
movsl
sbb
dec
jecxz
repnz
fdivs
arpl
xchg
or
jb
inc
sahf
pop
jecxz
push
mov
dec
in
stc
sbb
jp
bound
xchg
insb
stos
add
jne
jae
inc
bnd
mov
aas
scas
cmp
push
pushf
lods
push
mov
out
insb
fidivrs
mov
cmp
int3
jle
outsb
in
pop
cld
dec
mov
pushf
lods
push
mov
out
insb
fidivrs
mov
cmp
int3
jle
jmp
inc
add
mov
scas
test
push
push
ret
clc
xchg
mov
sub
test
cld
add
and
je
cmpsl
sbb
insl
mov
sbb
mov
pop
sub
js
loop
push
jns
hlt
sarl
mov
sub
sub
fucomp
jge
imul
push
sub
pop
mov
popa
pusha
ret
repnz
mov
fptan
sub
stc
out
ret
mov
pushf
jl
bound
pop
inc
sahf
and
insl
jmp
call
arpl
adc
add
aam
sub
add
jl
dec
xchg
into
xchg
jmp
jl
imul
inc
mov
sbb
jp
and
shrl
je
xchg
into
inc
pop
in
or
xor
pushf
out
in
sub
adc
xor
ljmp
test
dec
int
push
je
mov
xchg
jp
push
or
pop
cmp
fwait
loop
rcll
xrelease
jp
mov
jo
pop
mov
sub
add
or
add
outsb
ret
mov
leave
shl
ljmp
or
hlt
aad
jl
rol
xor
je
int3
es
imulb
cmp
sbb
aaa
sbb
mov
pop
adc
inc
cld
mov
pop
pop
push
mov
scas
inc
inc
xchg
xor
and
in
mov
or
add
shrb
sbb
or
lods
xor
dec
shrb
sub
fsts
pop
dec
xchg
dec
inc
sub
pusha
movsl
jl
push
repnz
icebp
in
aam
hlt
movsl
push
fcoms
dec
pop
out
icebp
ret
out
outsl
scas
data16
xchg
ret
sub
std
int
cmp
repnz
pop
pmulhrsw
loop
or
add
xchg
sub
mov
xchg
pop
das
pop
shlb
out
xor
pop
cli
gs
cmp
push
scas
push
imul
push
inc
repnz
push
sbb
out
pusha
and
sub
mov
iret
and
loope
daa
and
xchg
cmpsb
and
aaa
nop
icebp
xchg
outsl
dec
repnz
popa
xchg
sbb
loope
inc
jecxz
enter
subb
outsl
mov
xor
shl
xchg
fmull
clc
das
fcomip
mov
cmp
mov
je
insl
dec
pop
push
add
inc
pop
cmp
xchg
push
pop
dec
jle
out
push
pop
lret
jae
push
clc
fmul
dec
dec
or
ret
out
les
lea
mov
xor
fildl
fiaddl
xchg
insl
mov
dec
mov
fs
test
xchg
and
xor
sti
insl
in
insl
rcrb
sbb
cmp
pushf
mov
call
dec
into
pop
and
add
push
shrb
sbb
ficompl
sti
inc
jns
inc
inc
xor
adc
adc
daa
mov
cmp
arpl
cmp
in
cltd
cmc
push
jmp
push
fbld
adc
mov
push
lret
in
popf
icebp
sbb
xorb
pushf
les
push
aam
sbb
mov
inc
push
xchg
xchg
mov
push
or
adc
sbb
fwait
inc
add
ds
jecxz
mov
mov
push
adc
pop
xor
loop
js
fcmovbe
pop
xchg
cmp
notl
insl
ror
or
lret
xor
lds
mov
lret
mov
sub
adc
sbb
xorb
jge
cmp
push
mov
inc
jnp
mov
mov
dec
pop
aas
lock
push
mov
icebp
fs
pop
or
dec
dec
cmp
out
pop
add
std
or
cwtl
lcall
xlat
in
lods
jae
out
lcall
sub
rcrb
loope
jg
xor
insb
jg
stos
mov
decb
cmc
rcll
jge
inc
jae
cs
sub
stos
sbbl
imul
dec
outsl
push
dec
ds
adcl
pushf
out
cmpsb
addr16
dec
inc
dec
pop
or
add
mov
push
xchg
sub
out
divl
in
subl
push
xchg
repz
stc
mov
cmp
sbb
and
nop
or
stos
mov
lds
pop
or
dec
je
mov
pop
sub
inc
or
inc
addb
dec
dec
sub
mov
dec
out
imul
leave
xchg
cmpsb
vmovmskps
imul
out
test
pop
lods
xchg
jg
jno
push
jno
mov
arpl
shll
mull
daa
jl
cmp
mov
std
jnp
dec
mov
pop
fcomp
cmp
pop
sti
bound
fidivl
dec
ds
pop
dec
sbb
jo
adc
add
popf
shr
fadd
sti
cmpb
cmpsb
add
out
add
sbb
xlat
sub
pop
add
push
xchg
sti
and
lea
adc
cs
dec
fcmovb
arpl
sbb
pop
nop
ret
pop
stos
adc
lods
lret
dec
pop
mov
pushf
push
dec
cltd
jge
in
mov
outsl
cltd
cwtl
sbb
and
or
jo
stc
mov
das
sbb
shll
jns
ds
pushf
loope
popf
aam
aaa
push
fiadds
lea
xchg
out
or
xchg
stc
outsb
icebp
sbb
jl
out
sbb
and
xorb
sahf
mov
jge
lods
cmpsl
cli
and
inc
scas
sbb
cltd
push
xchg
xchg
shr
pop
jb
enter
loop
test
dec
ror
sub
les
cmp
xor
pushf
adc
xchg
inc
test
sbb
sbb
mov
lahf
pop
iret
inc
push
mov
aam
js
jb
dec
jp
lods
dec
jp
cmp
arpl
adc
gs
xchg
jecxz
push
es
mov
out
xchg
pop
enter
scas
rcrb
lds
jmp
dec
ret
scas
jmp
fadds
test
loopne
lea
and
lahf
push
outsl
sub
faddl
fbld
lahf
incl
bt
inc
daa
das
leave
fwait
pop
fidivrl
jl
addr16
jns
cmp
data16
mov
movsb
sub
test
sub
js
xor
push
clc
test
rcrb
or
xchg
mov
out
push
xor
add
dec
inc
int
add
stos
int
push
hlt
insb
fsub
xor
sub
ret
repz
pop
enter
or
cmp
sahf
pop
mov
lahf
mov
jbe
lret
mov
ret
push
int3
aaa
roll
stos
add
xor
ja
sub
out
jae
jne
lcall
cmp
adc
mov
es
or
xor
sub
prefetch
cmp
adc
jmp
jno
mov
insl
mov
ja
dec
and
sbb
sbb
mov
cmpsl
add
xadd
gs
mov
dec
adcl
inc
jne
mov
mov
sbb
mov
or
std
inc
movsl
sbb
add
jmp
jbe
je
inc
leave
ljmp
cmp
push
shll
nopl
cmp
adc
loope
fdivp
xchg
jle
push
mov
mov
xor
iret
lcall
mov
push
adc
aas
orl
repz
mov
aaa
xor
lret
mov
and
add
lds
add
test
sbb
pop
inc
inc
ficoms
dec
jno
lcall
aam
in
or
scas
jno
loope
cmovp
pop
cmp
mov
aad
decl
xchg
sub
lods
jb
pop
aam
mov
sti
jle
sub
fs
into
add
pop
cmc
popa
repz
add
push
cmp
adcl
out
lahf
mov
fcoml
jne
dec
aaa
push
dec
lcall
xchg
ret
mov
push
dec
cmp
fdivs
sbb
jae
orps
subl
dec
jne
iret
dec
test
mov
pop
xchg
jecxz
mov
stc
and
jae
sar
outsl
mov
or
mov
mov
dec
mov
mov
mov
inc
lret
repz
or
gs
sub
je
int3
or
pop
push
arpl
mov
icebp
mov
sub
sbb
insb
data16
mov
add
xor
or
inc
cltd
mov
loop
leave
mov
xchg
mov
dec
mov
push
aad
mov
push
dec
fisubrl
mov
mov
xor
enter
mov
mov
jne
push
call
imul
mov
pusha
icebp
je
fwait
jg
cwtl
aad
lret
dec
push
int3
xchg
sbb
cmp
adc
cmp
rclb
enter
mov
das
sahf
mov
icebp
sub
aad
clc
js
lahf
pusha
xchg
or
sbb
jecxz
fwait
dec
mov
sbb
jle
inc
mov
out
imul
mov
imul
mov
xor
pop
xor
rorl
pop
mull
pop
ficompl
and
mov
and
mov
and
mov
xchg
jmp
fidivrs
pusha
sar
add
es
lret
add
pop
pop
add
addr16
mov
cltd
mov
jle
and
xchg
mov
jecxz
xchg
and
insb
fiaddl
jp
movsl
cmpl
pop
lahf
jg
cmp
push
dec
cmp
jg
movsl
and
cli
sbb
call
icebp
adc
scas
ret
sub
movsb
rcl
pop
not
sub
je
popa
lods
fwait
int3
decl
fisttps
inc
mov
ds
xor
push
clc
scas
xor
ret
push
cmp
rol
in
inc
jbe
push
jg
add
fcmovne
jecxz
inc
fimuls
cs
mov
stos
call
push
or
sub
jle
jecxz
or
sub
ficoms
mov
cmpsl
mov
sbb
fldcw
in
pop
or
and
xchg
add
fbld
gs
lock
cmp
sub
and
or
sub
popa
inc
test
xchg
fwait
dec
xlat
mov
mov
cmp
mov
add
call
sbb
push
push
xchg
int3
mov
scas
enter
or
outsb
mov
add
je
and
je
xor
out
inc
sbb
pop
out
pop
shlb
and
test
cmp
jg
pop
rcr
cli
xchg
pop
add
or
gs
icebp
loopne
mov
aam
int3
movsl
adc
mov
sbb
cwtl
stc
xor
in
mov
call
xor
lcall
inc
out
add
cmp
pop
shlb
sub
imul
mov
xor
nop
stc
rcrb
pop
inc
lret
shlb
xchg
outsl
dec
cmp
dec
cmp
test
test
out
or
rclb
int3
lcall
push
test
mov
dec
mov
jae
daa
imul
push
es
sbb
sbb
xchg
popl
adc
mov
mov
xor
scas
jle
mov
jnp
sarb
dec
inc
je
test
sbb
lcall
and
add
pop
jmp
add
test
xchg
pusha
fnstcw
arpl
aaa
mov
test
ds
xchg
hlt
test
ror
xor
test
adc
or
rcrb
push
inc
cs
cmp
clc
sub
into
nop
je
movsb
adc
mov
stc
mov
imul
adc
test
mov
jns
inc
shll
push
mov
ret
fs
pop
fstps
xrelease
je
mov
xchg
xchg
dec
or
ja
loop
jne
mov
outsb
dec
sub
sub
jae
stos
push
repnz
xchg
sub
pop
into
mov
mov
aam
cmpsb
adc
push
sbb
mov
in
and
mov
xchg
push
iret
and
add
orb
sbb
cwtl
int3
or
stos
dec
clc
test
fs
lods
push
add
mov
rolb
test
mov
jo
movb
sub
test
out
sbb
mov
cmpl
mov
fidivrs
inc
or
push
cli
xor
loopne
dec
popa
pop
jae
test
std
scas
test
lea
popf
xchg
push
xlat
xor
test
daa
push
xchg
mov
push
mov
push
dec
sub
xor
push
and
sub
push
dec
data16
or
inc
std
add
in
fscale
xchg
push
cmp
aaa
xchg
dec
xor
push
aam
iret
jb
adc
adc
xor
push
push
call
add
sbb
pop
mov
ret
xchg
cli
and
push
out
jl
adc
call
cmp
lret
adc
cs
sub
fisttpll
and
loope
movsb
adc
add
test
xor
dec
push
insl
mov
out
mov
jmp
adc
dec
jg,pn
mov
xor
fsub
or
inc
push
jae
enter
mov
cmp
xchg
jae
rcrb
popf
and
push
xlat
cmp
cmp
test
pop
out
lret
int3
xorb
xchg
insb
push
arpl
gs
inc
jno
push
outsl
xor
shll
cmp
adcl
call
or
das
cmp
inc
fwait
cmp
movsb
push
jno
nop
jg
and
scas
sbb
push
add
mov
dec
jns
mov
cmpsb
and
mov
lods
jnp
jae
mov
and
test
test
test
cmpsb
dec
enter
aad
mov
popf
fsubl
movsb
push
ret
push
push
popa
pop
or
mov
jecxz
addr16
cs
dec
or
pop
cld
push
dec
fisttpll
add
nop
adc
mov
sbb
mov
jmp
push
icebp
sbb
xor
jns
mov
adc
xlat
xchg
mov
mov
inc
inc
cmpb
adc
pop
icebp
and
jp
sbb
or
push
cmp
aam
call
es
push
xor
push
nop
sarb
mov
jle
lods
sub
dec
stos
outsb
jb
add
fistl
inc
call
add
ret
and
xchg
aam
stos
test
xor
inc
loopne
cmovns
mov
xchg
ljmp
sbb
fldenv
imul
cmp
push
cltd
loopne
mov
xchg
popa
inc
mov
pop
cmpl
data16
popf
add
lods
ljmp
add
icebp
cmp
loope
dec
subb
shl
mov
or
aad
inc
out
bound
sub
shll
mov
cmp
push
pop
stos
stc
in
subb
dec
es
sub
ret
insb
lea
shrb
insb
dec
in
sub
pop
aad
push
out
std
or
dec
movsb
and
cmp
outsl
int
mov
filds
rcll
jl
inc
push
arpl
arpl
push
test
subl
jg
or
mov
jge
sub
jmp
shrl
adc
into
jno
push
jbe
push
roll
test
shlb
mov
addr16
sbb
dec
ljmp
pop
push
pop
pop
xor
pop
pop
outsl
test
mov
mov
and
outsb
enter
cmp
fs
inc
in
and
cwtl
mov
jl
test
std
sbb
in
lods
dec
and
lods
pop
sub
hlt
testb
iret
mov
cld
sub
enter
cmc
je
in
cmp
int
sub
mov
add
fbstp
fs
data16
mulb
mov
mov
ds
shrb
xor
and
jmp
jnp
push
nopl
push
fiaddl
repnz
bound
clc
pop
mov
cli
fnstcw
mov
es
cld
sub
in
jle
jns
mov
cwtl
and
movsb
or
mov
lock
sub
cltd
aam
repnz
adc
mov
mov
inc
sbb
repz
dec
cli
mov
sbb
push
mov
sbb
xchg
pop
jns
xlat
xlat
mov
push
cmc
fisubs
xorb
call
out
mov
jne
dec
js
scas
jmp
push
int3
bound
lcall
fwait
or
icebp
loope
and
jne
fstpt
pop
nop
xlat
mov
mov
mov
dec
mov
jb
jle
sbb
add
lahf
in
sub
std
stos
addr16
clc
push
push
add
inc
xor
mov
adc
aaa
sbb
lock
lds
test
daa
arpl
popf
fdivs
or
mov
in
or
lret
in
pop
faddl
cmp
out
sub
xchg
adc
pop
push
jge
mov
cwtl
dec
sbb
adc
fwait
push
aam
xor
mov
pop
stc
dec
fadd
xor
in
mov
sub
mov
sub
inc
add
mov
inc
mov
hlt
xchg
and
inc
xchg
sbb
jne
pop
pop
pop
and
sbb
repnz
mov
dec
pop
ss
cmp
mov
xorl
dec
fwait
jno
xchg
and
test
sub
ficoml
mov
cmp
cld
cmp
mov
movsl
lods
or
xchg
cwtl
pop
ja
sub
add
push
lds
mov
call
push
dec
mov
xor
iret
and
lds
shl
gs
pop
pushf
mov
mov
inc
sti
in
or
in
ret
add
test
sarl
sahf
push
sub
cwtl
xchg
sub
or
fsubr
xor
xor
xchg
or
pop
push
cld
rcll
mov
jne
repnz
mov
sub
jbe
lret
push
lods
sub
les
xlat
adc
xchg
out
lret
mov
movsl
movsl
lea
ss
xor
orl
mov
jl
cltd
or
cmp
lcall
inc
sahf
adc
push
jge
pop
mov
orb
int3
jp
and
ss
jno
ja
push
jg
icebp
or
stos
das
inc
int
movsb
popa
cmpl
sbb
icebp
dec
push
dec
repnz
xchg
enter
popf
lret
cmc
and
popa
ret
out
jmp
aas
push
push
mov
pusha
cld
enter
mov
orl
stos
sub
sti
loop
lods
push
gs
pop
xchg
push
mov
iret
mov
mov
scas
cmp
xor
sub
cmc
fistps
and
sub
add
stos
in
push
fiadds
mov
mov
cmp
sub
test
inc
inc
data16
psubb
test
push
jge
pop
mov
stos
test
mov
push
mov
daa
fucomi
ret
je
xor
jo
adc
push
jae
popa
sbb
rclb
jb
fs
movsl
xor
imul
push
in
cmp
cmpl
lea
js
mov
dec
push
pop
jns
sub
or
into
jb
das
push
inc
jmp
ja
int
shlb
bound
ret
in
add
shrl
cmpsl
sub
int
out
mov
rcr
movsl
xor
adcb
stos
cwtl
jp
into
inc
mov
flds
nop
sub
jmp
or
mov
aad
cmpsb
lret
jbe
pop
lock
mov
adc
xchg
lods
xor
inc
xchg
jmp
out
sbb
int
jae
push
fs
icebp
add
push
jbe
aam
cwtl
mov
call
add
cmp
loopne
xchg
mov
sahf
les
outsb
sub
mov
cmp
rcll
mov
jge
jl
sub
push
notl
sub
xchg
xchg
and
movsl
fsub
gs
shlb
dec
mov
dec
fwait
jnp
add
repnz
addr16
call
jmp
dec
repnz
push
lods
out
test
add
pop
mov
idivl
mov
sub
cmpsl
push
xchg
imul
arpl
push
pop
adc
add
sub
mov
pop
push
jge
and
mov
or
rcrl
mov
and
rolb
cltd
in
sbb
cld
or
icebp
push
insl
sub
mov
sub
push
aas
jb
sub
xchg
xchg
fistl
out
push
stos
out
xor
mov
imul
lcall
cmp
imul
push
cltd
push
push
shr
divl
and
icebp
iret
out
cmp
lea
dec
int3
in
adc
dec
aad
sti
pop
movsb
ja
inc
out
popf
addl
rorb
cmp
bound
outsb
stos
mov
dec
mov
pushf
lods
push
mov
out
insb
fidivrs
mov
cmp
int3
jle
outsb
in
pop
cld
dec
mov
pushf
lods
push
mov
out
insb
fidivrs
mov
cmp
int3
jle
outsb
mov
dec
sbb
pushf
lods
push
jl
dec
pop
out
pushf
fidivrs
mov
aam
fdivrs
outsb
mov
fmull
mov
lods
push
cmp
dec
mov
mov
shll
jno
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stc
rcrl
xchg
repz
cli
fisttps
mov
adc
add
jno
add
and
test
hlt
xchg
in
aam
inc
cmp
arpl
add
and
and
adc
inc
jecxz
xchg
lods
cmp
cmp
xor
dec
pusha
jb
add
push
and
push
cmc
mov
repz
mov
xchg
cmp
sub
mov
sbb
and
adc
repz
lods
scas
or
push
mov
fnstcw
adc
lret
leave
jb
shll
jl
xchg
add
add
cli
xor
mov
fwait
icebp
xchg
fsub
jmp
xor
adc
pop
and
cmp
data16
inc
cmp
xchg
imul
or
lods
je
jmp
pop
xchg
add
xor
xor
dec
imul
mov
push
mov
fcoml
adc
adc
xor
shll
hlt
xchg
mov
mov
int3
jae
arpl
jp
push
xor
dec
xlat
rolb
lcall
notl
gs
inc
push
gs
sbb
dec
add
mov
cmpsb
rcll
test
mov
sbb
jno
push
add
gs
mov
add
adc
les
adc
add
je
add
and
test
hlt
xchg
in
aam
les
adc
add
je
add
and
mov
cmp
loope
mov
fildl
loopne
testl
cmp
mov
in
sub
out
daa
lods
pop
push
mov
dec
stc
mov
xchg
mov
pop
cltd
stos
inc
or
loope
fdivr
pop
xchg
mov
jp
testl
insl
cli
les
mov
push
mov
paddusw
dec
jnp
cmp
js
inc
dec
imul
jl
out
add
jbe
lods
xor
mov
sub
cli
mov
cltd
stos
mov
jl
mov
lods
push
push
je
pop
and
jbe
push
jg
cmpsb
pop
mov
jp
insb
mov
frstor
mov
cs
lds
stc
inc
cmp
cmp
movsb
gs
dec
insb
hlt
sub
mov
sbb
or
stos
mov
ffree
inc
mov
or
mov
jge
fcoms
insb
out
mov
scas
jo
fwait
cmp
inc
push
pop
sar
pop
test
dec
cwtl
cmp
jle
and
out
jl
cmp
dec
filds
fwait
pop
jp
fisubl
ss
cmp
cwtl
ljmp
out
ljmp
xchg
mov
aas
inc
mov
sti
dec
push
repz
popa
mov
jae
out
pop
lahf
repz
inc
cmp
adc
adc
sub
mov
jg
jmp
icebp
shrb
leave
scas
pop
sub
shlb
mov
mov
dec
cmp
cs
das
xor
sub
add
and
jmp
or
sar
add
dec
rcrl
fs
js
cmp
stc
negb
scas
int3
sarb
ficompl
and
mov
mov
xor
dec
movb
lds
mov
pop
into
nop
mov
push
xor
fisubrl
scas
and
stos
add
xchg
pop
cmp
lret
cmpsl
aad
dec
sar
mov
mov
or
scas
pop
cmp
data16
faddl
call
into
daa
aaa
or
xchg
adc
hlt
mov
stos
and
hlt
aas
lcallw
add
out
ret
shll
aam
sbb
pusha
aad
sbb
in
inc
push
lods
fmull
jle
fsub
cld
sub
sbb
mov
stc
pop
xor
dec
rorb
inc
sbb
mov
pop
inc
xchg
movsl
adc
sbb
cli
push
mov
fsubs
stc
rol
test
test
ret
cmp
cmp
bound
jl
insl
mov
xor
dec
mov
std
push
inc
jnp
gs
or
sbb
repz
das
inc
mov
add
fwait
xchg
fsub
dec
push
xchg
push
js
cmp
in
xchg
mov
aam
pushf
mov
and
out
aas
push
push
sbb
jmp
les
xor
popa
and
insb
sub
in
pusha
lock
sub
ficoml
movsb
mov
xlat
aas
into
push
rorb
push
sub
dec
test
mov
push
push
pop
sahf
loope
inc
subb
cmp
or
xor
push
ljmp
sbb
mov
ljmp
cmpsb
xor
mov
push
cmp
pop
sbb
negl
mov
mov
cwtl
lcall
jno
sub
dec
daa
cmp
rclb
pop
mov
inc
push
cwtl
out
fnstcw
mov
enter
fcomps
inc
test
lret
lock
mov
sub
or
mov
stc
aad
mov
pop
push
and
and
ret
sbb
arpl
cwtl
pop
mov
xchg
mov
sahf
mov
jp
inc
adc
sahf
push
lods
push
push
enter
mov
cwtl
out
mov
imul
mov
arpl
sar
hlt
mov
sub
rorb
add
leave
push
push
mov
sub
push
test
pop
mov
cld
fnstcw
aam
fwait
js
call
jnp
xchg
push
rcrb
iret
dec
sub
jae
dec
movl
jg
cli
sub
jbe
mov
dec
cwtl
xor
push
mov
shll
push
movsb
pop
fstl
shrl
stc
sbb
mov
and
fstl
cmc
inc
xlat
push
adc
mov
mov
je
cmp
cmpl
push
ficomps
ja
cmc
dec
and
mov
xchg
into
loop
in
aad
out
fwait
inc
int3
xchg
jmp
lcall
hlt
pop
cmp
adc
xchg
loopne
push
and
pop
fidivl
popa
pop
hlt
inc
sub
push
fs
imul
mov
sbb
inc
sub
es
add
test
jno
jb
idivl
cwtl
subl
mov
pop
repnz
add
jge
ja
lea
call
xchg
enter
clc
xor
mov
call
adc
mov
rcrb
test
int
dec
cmpb
iret
pop
add
adc
sbb
mulb
and
fs
movl
mov
adc
xchg
loopne
dec
xchg
push
jmp
andl
add
mov
mov
mov
sbbl
jecxz
or
sbb
flds
dec
lds
sub
loope
cmp
jle
lods
mov
pop
fsubl
pop
lods
jne
or
hlt
pusha
push
nop
xchg
push
lea
shll
sub
std
lock
pop
mov
sbb
adc
shll
add
mov
xor
cmp
movsl
xor
pop
cld
sbb
xor
add
pop
les
mov
rep
clc
out
push
testb
inc
stos
jo
aaa
jge
aas
sub
inc
xor
and
adc
idivb
fisttpl
dec
sbb
sbb
sbbl
insl
mov
xor
and
mov
out
mov
outsb
rcrb
mov
ljmp
insl
push
cwtl
loope
jbe
inc
es
iret
mov
sbb
pop
test
sbb
mov
pop
or
lcall
out
and
sarb
add
mov
mov
sar
lds
cwtl
iret
xchg
arpl
in
test
add
mov
sub
add
sub
clc
fisttpll
push
dec
shll
sahf
sub
movsb
sbb
je
jmp
sbb
sbb
push
xchg
fldt
ja
xor
and
xor
mov
nop
cs
out
fcoml
mov
int
lret
shll
popf
push
imul
mov
mov
dec
imul
lods
inc
leave
or
notl
fdivl
add
lretw
mov
mov
jg
jo
cmp
dec
mov
ret
push
mov
inc
mov
in
add
loop
lahf
and
xchg
mov
push
jmp
jg
ds
out
jno
jecxz
or
xchg
pop
rcl
stos
int
dec
out
addr16
addr16
jnp
fcmovu
call
cmpsl
sbb
add
loope
sub
bound
push
push
fstl
lret
push
dec
xchg
outsl
out
inc
mov
dec
xor
test
pop
pop
mov
in
add
xor
sub
lret
xor
mov
inc
xchg
testl
dec
mov
pop
scas
clc
cli
test
dec
mov
jo
jns
or
outsb
dec
dec
out
popf
pop
movsl
push
imul
aam
mov
cld
pop
jp
insl
neg
sub
popa
or
xchg
cmp
dec
or
pop
pushl
mov
xor
pop
imul
sti
dec
inc
sti
pushl
mov
mov
mov
dec
aas
xor
mov
sbb
in
jnp
das
jno
fmull
cmp
push
mov
mov
add
outsb
pushf
cld
cwtl
jecxz
arpl
int3
add
inc
inc
sbb
cli
inc
pop
sbb
imul
mov
inc
in
xchg
xor
dec
dec
mov
mov
fcmovu
xchg
fdivrl
mov
fildl
lahf
xor
cwtl
ficoml
adc
ret
lods
cmp
mov
xor
xchg
int3
jmp
daa
loopne
int3
add
mov
push
aam
nop
imul
fwait
dec
xor
inc
jae
xor
mov
dec
out
mov
add
inc
xchg
jp
andb
xchg
and
fisttps
fs
xor
cmp
mov
and
repz
in
jecxz
mov
cmp
add
push
cld
push
lods
or
data16
lahf
outsl
jg
dec
push
addl
sbb
push
in
cmp
add
jg
sub
js
cmp
lahf
sub
sti
imul
ja
xchg
or
mov
iret
ljmp
cwtl
dec
jno
adc
cmp
incb
jmp
inc
inc
in
push
adc
ljmp
add
sbb
daa
in
cmpsl
mov
icebp
shrl
or
leave
int
push
adc
aam
les
mov
sub
int3
xor
addr16
pop
rolb
mov
xorb
repnz
mov
sbb
insl
jp
mov
sub
mov
arpl
sbb
jle
mov
push
lret
add
fidivrl
jg
pop
push
mov
loop
jmp
mov
sbb
fdivrl
sahf
imul
in
rcll
sbb
ds
mov
xor
roll
sub
dec
cwtl
add
clc
sub
cmp
xor
cwtl
jne
addb
fs
dec
mov
imul
and
fsubrp
popf
cmp
sti
pop
dec
mov
and
pop
xchg
xchg
adc
repnz
rorb
rcrl
or
jb
es
jle
xchg
jns
pusha
pop
cmp
sub
push
xlat
jne
sub
icebp
or
lea
pop
outsl
mov
scas
xchg
pop
dec
push
std
movsb
mov
pop
inc
push
ljmp
sbb
and
or
lods
clc
push
stos
dec
repz
rorl
sub
dec
add
xor
add
pusha
push
jno
dec
adc
scas
imul
adcl
movsl
addr16
stc
mov
adc
pop
ds
bound
jle
pop
std
pop
popa
mov
ss
andl
enter
insl
jmp
jbe
and
popf
addr16
fs
sub
imul
or
andb
fs
std
or
sub
jnp
adc
cwtl
mov
xor
lret
push
fs
stos
icebp
enter
mov
dec
stc
data16
lret
out
in
lock
loopne
mov
scas
push
cmp
sbb
jb
shr
into
insl
inc
daa
leave
lret
sar
outsb
sti
push
nop
int3
mov
dec
scas
and
push
lret
les
inc
adc
mov
aas
mov
ds
inc
sti
xchg
repnz
xor
push
jns
push
xor
lods
movsl
cmpsb
mov
xlat
pop
ds
into
cld
lods
dec
std
sbb
andb
sbb
es
adc
dec
sub
jns
pushl
pop
push
inc
mov
or
pop
fistpll
fstps
mov
imul
sbb
xchg
fstpt
dec
lods
clc
loope
sbb
cmp
lods
xor
lods
rol
mov
testl
dec
xchg
xor
pop
sti
mov
out
sbb
dec
mov
test
std
ljmp
xchg
mov
xor
out
and
dec
lret
inc
xchg
mov
push
rcrl
sbb
push
xchg
mov
int3
xor
mov
pop
sbbb
jl
xor
call
xchg
popf
xchg
jl
xchg
sub
mov
inc
add
push
idivl
loope
lret
fnstenv
adc
mov
push
enter
mov
outsb
pop
mov
icebp
out
mov
inc
or
cmp
sub
xchg
jo
lret
loop
pop
or
icebp
sub
inc
xchg
repnz
into
popaw
sub
into
popa
inc
cmp
out
rorb
outsl
dec
mov
lcall
mov
testb
add
pop
lods
repnz
jo
clc
into
push
push
push
sbb
mov
push
xor
mov
jns
xor
out
ja
xchg
mov
mov
loopne
sti
jns
cli
sahf
repnz
add
scas
push
jmp
lods
int
jbe
rorl
insb
ljmp
in
mov
icebp
jb
mov
lods
cmc
jnp
sub
push
lea
clc
pop
int
lret
fadds
mov
pop
inc
movsl
xchg
mov
dec
fs
lods
rcrl
test
xchg
sbb
loope
rclb
test
cmp
adc
jno
cmpsb
loopne
dec
ljmp
inc
loop
sbb
pop
fcomip
xlat
out
adc
fucomip
xlat
scas
insb
popa
repnz
mov
into
inc
test
out
push
adc
adc
rol
sar
jbe
mov
nop
pusha
lock
cli
fstpl
data16
scas
push
or
hlt
add
test
jae
sti
cmc
shlb
mov
push
xchg
or
scas
movsl
jle
in
pop
and
adc
cmp
push
out
leave
negl
into
mov
lret
jns
hlt
xchg
adc
cmp
cmpsb
aas
sbb
mov
jecxz
and
lret
adc
das
sbbl
inc
or
adc
dec
ljmp
xor
cmp
movsb
frstor
lods
sub
cli
or
cmc
lahf
lcall
inc
pop
sub
lret
jge
stos
aaa
popa
fimuls
testl
cmp
clc
or
mov
in
mov
adcl
lahf
test
lods
and
shrb
sub
in
fnstenv
test
lock
lcall
xchg
addl
gs
jl
cmp
pop
out
push
and
sub
js
adc
pop
movb
outsl
cmc
and
loope
mov
sbbl
aad
dec
xor
xor
mov
fsubrl
xor
loopne
es
bound
orb
jbe
sti
pop
cmp
ret
sub
cwtl
sbb
xchg
sbb
repnz
dec
dec
out
int3
xor
jne
and
jnp
pop
arpl
push
lds
sbb
mov
add
scas
xor
push
shll
into
mov
in
or
jg
xchg
sbb
aad
mov
mov
sbb
test
and
ljmp
sbb
lret
ljmp
xor
jb
add
add
sti
lods
jo
std
es
stc
hlt
mov
add
jl
or
leave
sbb
mov
lods
push
mov
cli
data16
cmp
mov
sbb
dec
adc
es
and
dec
mov
sbb
out
xchg
aad
xor
clc
mov
jnp
ds
scas
fs
add
mov
stc
mov
and
jmp
mov
js
leave
dec
mov
enter
outsl
mov
xchg
dec
push
sbb
cltd
pop
cs
jmp
insl
mov
mov
mov
xor
pop
das
movsl
call
sbb
hlt
mov
lock
lret
lods
jge
sbb
sbb
fwait
rol
mov
inc
jl
nop
dec
mov
out
push
sub
insb
mov
roll
lea
out
aam
nop
mov
jecxz
jmp
xor
std
int3
sub
jnp
mov
lret
mov
shlb
call
and
sbb
test
mov
push
popf
ds
add
sbb
xchg
cmp
out
jmp
mov
loop
mov
test
jae
test
mov
jl
inc
lods
and
push
ds
xlat
cmp
push
xchg
inc
hlt
pop
pop
adc
loope
dec
inc
adc
fdivr
es
mov
es
cld
jge
xchg
mov
ret
xlat
jmp
leave
xorl
xor
pusha
mov
in
cld
in
xchg
dec
or
or
pop
pop
ja
out
in
inc
int
adc
mov
adc
add
icebp
aam
jnp
pop
cwtl
enter
and
and
dec
jns
arpl
or
fmuls
mov
mov
lods
xor
bound
add
arpl
jb
outsl
hlt
mov
dec
xor
jmp
lea
push
mov
js
mov
mov
inc
shl
lods
dec
sbb
jmp
nop
mov
mov
add
add
or
test
mov
add
pop
xchg
cli
lret
movsb
add
fwait
sbb
push
pop
mov
movsl
pop
nop
enter
jns
fstps
push
popf
add
add
push
mov
clc
fcmovu
lea
ficoml
movsl
cmp
pop
in
xlat
cmp
cmp
sbb
les
scas
scas
mov
mov
mov
in
test
andb
and
cmp
xlat
xlat
popa
mov
jne
mov
jp
add
xchg
and
sbb
push
push
jb
movsl
mov
add
pop
mov
add
or
cld
mul
cmp
cmp
lods
jne
dec
cli
dec
or
mov
leave
jbe
int
mov
test
xorl
jb
dec
sbb
push
xor
aas
adc
test
sbbl
push
fildll
faddl
adc
leave
andl
bound
sbb
push
cmpsl
sub
or
stos
sub
out
out
and
arpl
nop
jle
push
aam
lahf
std
mov
jl
xchg
sub
fiadds
dec
fstl
bound
sbb
dec
pushf
mov
add
bound
les
push
das
xchg
add
out
xor
lea
jp
test
jns
test
mov
dec
cs
sbb
test
clc
ficoms
mov
scas
inc
int
push
xchg
xor
fdivr
test
cmp
test
repz
fists
insl
mov
ficompl
enter
push
pop
mov
inc
inc
rol
lret
lret
mov
out
cmp
mov
test
sbb
fs
jae
lcall
jno
cli
adc
ja
mov
mov
sub
pop
shl
lock
lds
cmp
insl
xchg
sbb
imul
add
xor
xchg
and
movsl
inc
fidivs
xlat
ljmp
sbb
out
das
cmpsl
or
pop
and
fcomps
out
lcall
or
imul
cltd
or
mov
gs
sbb
xor
mov
cmp
and
shlb
iret
mov
and
into
or
scas
sub
scas
mov
adc
mov
jne
lods
jae
test
push
sbb
fbld
or
sti
push
out
xchg
add
pop
gs
out
imul
jge
or
add
in
sbb
icebp
clc
nop
ljmp
mov
cmc
sub
lcall
add
lods
repnz
pop
iret
or
cmpb
dec
movsl
pop
add
nop
push
mov
mov
xor
push
push
sbb
cld
outsb
mov
cwtl
fwait
lods
call
or
push
and
pop
dec
sahf
scas
stos
dec
jg
mov
cmpsl
jnp
shrb
dec
shr
loopne
jae
dec
push
sarb
inc
cmp
sti
test
pop
sbb
je
inc
mov
adc
cmpsl
iret
jecxz
pushf
dec
add
stc
mov
sub
les
aas
and
in
mov
mov
aam
mov
jecxz
sbb
sub
add
xlat
mov
fcom
test
jge
test
lret
adcl
in
push
aaa
leave
cltd
cmp
sub
lcall
das
lea
and
dec
jle
cmp
cmp
inc
in
dec
push
push
ds
xchg
in
dec
addr16
cs
lods
mov
push
push
xchg
pop
in
imul
push
sbb
mov
dec
int
pop
hlt
mov
test
jbe
cli
jle
dec
sti
mull
icebp
xchg
ret
mov
jmp
adc
mov
outsb
aaa
aas
inc
adc
mov
sti
cwtl
mov
popa
js
jns
fisttpll
subb
fcom
push
push
lret
inc
mov
add
gs
mov
push
pop
into
mov
mov
ret
push
lahf
imul
jb
push
sub
mov
pop
aam
stc
subb
add
xor
cmc
scas
je
into
jecxz
subb
add
jl
sub
mov
insl
dec
pusha
or
xor
push
sub
negb
xchg
enter
inc
mov
ret
and
fs
dec
test
push
lods
ret
inc
repz
jecxz
xchg
in
aam
les
adc
add
je
add
and
test
hlt
xchg
in
aam
les
adc
add
je
add
and
test
cmc
xchg
loopne
aam
lds
sbb
adc
push
xor
rorl
jecxz
xchg
hlt
adc
inc
mov
mov
fwait
in
cld
stos
int3
mov
sbb
sub
cmp
add
jp
xor
nop
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
pop
inc
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
jp
mov
adc
push
aam
mov
pusha
pop
lea
jns
pop
mov
les
mov
js
imul
cwtl
scas
lret
adc
sub
sbb
push
mov
pop
xchg
xlat
pop
loop
lock
mov
jne
bound
mov
mov
xchg
imul
testb
cwtl
out
xor
hlt
mov
hlt
insb
jmp
insb
pop
cli
bound
subb
ficoml
cmp
lahf
mov
in
aad
aaa
jl
mov
pop
cmp
jp
jne
out
push
clc
mov
faddl
sub
xchg
or
test
sbb
pop
loopne
repz
push
sahf
xchg
fistps
inc
out
inc
mov
ljmp
jecxz
repz
push
jp
mov
arpl
adc
and
xor
imul
int3
getsec
push
xor
adcl
ss
push
popf
inc
cwtl
inc
lahf
mov
cmpsl
jbe
bound
pop
out
notb
xor
push
int
call
dec
pop
scas
movsb
dec
rorl
dec
xchg
inc
js
pop
mov
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
jp
mov
arpl
adc
and
xor
ret
or
std
push
mov
sub
lock
sub
cmp
jge
loope
in
xor
xchg
pop
fwait
mov
sub
pop
mov
popa
mov
pop
xor
push
loope
push
jp
xor
movsl
ret
push
and
dec
pop
dec
mov
fsubr
dec
cmp
and
subl
divb
sub
jns
stc
test
inc
jmp
fistpll
and
testb
sbb
push
repz
and
mov
icebp
int3
push
sub
cmpsb
fwait
adc
and
mov
push
jno
jecxz
adc
rcr
or
clc
mov
and
popa
xor
mov
mov
imul
add
pop
dec
pop
add
mov
mov
hlt
pop
cmp
inc
jbe
jae
sbb
jo
sbb
adcl
cmpsl
jp
ret
adc
es
mov
jno
add
mov
sbb
dec
mov
mov
dec
outsb
dec
jp
sub
dec
sbb
ret
rcrb
outsb
add
mov
in
sahf
dec
xor
cs
xchg
ja
lds
inc
mov
mov
sub
arpl
and
je
mov
cmp
inc
pop
pop
cmc
leave
movsb
daa
push
imul
dec
jle
jo
inc
jmp
dec
xchg
fldenv
aad
pop
fisttpll
aaa
lcall
stos
mov
xor
inc
push
cmpsb
test
outsl
pop
into
xchg
cmp
adc
inc
test
lock
ja
pop
xor
inc
aam
lss
loope
lahf
sti
adc
xchg
and
jg
lret
nop
shll
arpl
in
cltd
jbe
out
icebp
test
lret
jns
sub
mov
jno
scas
mov
or
mov
stc
mov
lea
cli
sbb
shll
adc
dec
popf
push
iret
addr16
jge
jo
xchg
mov
je
push
mov
add
or
adc
dec
mov
hlt
sarb
xor
cmpsb
xor
pusha
subl
enter
enter
cmpsl
jle
idivl
insb
jnp
stos
lret
pop
shl
add
mov
cpuid
gs
out
and
out
xor
inc
js
and
into
dec
push
out
rol
and
in
pop
call
adc
cmp
inc
mov
fisttps
or
ss
cmp
stc
fnsave
pop
push
cmp
inc
push
lea
and
push
jno
arpl
into
or
inc
inc
dec
fisubrl
xchg
xor
sbb
test
pusha
pop
pop
jnp
add
mov
mov
dec
mov
mov
jns
mov
and
jp
lods
in
pop
in
pop
jecxz
jp
mov
jge
adc
scas
dec
mov
lock
mov
shll
lods
fcompl
or
nop
ja
int3
rcrl
adc
pusha
and
add
sbb
outsb
push
cmp
mov
inc
xchg
mov
xlat
add
shrb
pushf
ret
xor
mov
inc
lahf
pop
es
add
ja
int
gs
pop
mov
xchg
fisttpll
fldenv
xchg
pop
sub
enter
mov
xchg
fldt
mov
and
jle
mov
out
ret
pop
jg
pop
fimull
inc
mov
and
lahf
jo
sub
mov
outsb
or
push
ja
pop
in
adc
cmpsl
push
xchg
fwait
mov
daa
enter
jno
dec
pop
cmp
or
inc
mov
jl
mov
lods
outsl
je
and
insl
mov
aad
sbb
movsl
jl
repz
or
test
gs
ret
in
xchg
mov
es
lret
scas
mov
mov
and
adc
adc
imulb
push
add
adc
xchg
iret
popa
mov
outsl
loope
add
dec
pop
and
add
xchg
sub
stos
and
push
pop
or
lods
and
and
add
push
jmp
call
mov
iret
cmc
add
ret
ss
pop
ficoml
test
sbb
pop
cmp
xchg
sub
fstps
cwtl
je
adc
in
push
push
jg
hlt
inc
lcall
cmpsb
cwtl
xchg
and
mov
inc
push
mov
adc
mov
cmp
lock
mov
es
push
add
mov
mov
jae
in
mov
jno
movsl
into
cmpsb
or
mov
sub
sbb
scas
jns
pop
mov
test
pop
sar
aam
add
xchg
es
aas
negl
ret
cmp
pop
jge
mulb
cli
lock
mov
mov
popf
aas
enter
es
cmp
push
and
gs
inc
inc
dec
stos
cmp
gs
and
sahf
jl
mov
xor
push
fsubrs
pop
icebp
daa
loop
pop
ja
in
loop
lock
out
fdivs
inc
rep
xchg
lret
jne
push
out
sub
add
cld
add
mov
add
jg
outsl
jle
xchg
xchg
aas
inc
jne
push
add
inc
in
and
xor
mov
mov
jg
sar
stos
rol
adc
inc
cmp
jge
shll
lahf
sub
lea
cmpsl
stc
and
fldenv
adc
jp
jb
sub
fistl
int
ss
call
shlb
push
fldl
add
lahf
cmp
mov
and
xchg
es
dec
sbb
fistps
popf
outsl
cmpsb
cmpsl
cmpl
dec
cmp
adc
mov
call
in
daa
xchg
mov
add
mov
fs
insl
and
fstpt
repnz
mov
jb
cmpl
mov
mov
movsb
push
xor
push
mov
int3
xchg
pop
scas
mov
push
dec
cli
xchg
cmp
into
lcall
fs
int
cmp
mov
add
jge
mov
mov
xor
jbe
sub
pop
mov
jp
xchg
and
or
addr16
mov
mov
test
cmpsl
xor
xchg
mov
add
sarb
ds
dec
insb
cmp
jo
dec
adc
xchg
pusha
aas
xchg
mov
mov
and
js
xchg
or
mov
fwait
cmp
or
in
scas
cmp
sbb
pop
fnsave
into
adc
daa
inc
inc
push
dec
push
sub
fstpt
imul
inc
push
cmp
repnz
addl
cmc
aad
mov
int
dec
inc
movsl
xor
mov
pusha
or
ret
cs
xor
mov
popf
into
cmp
cmp
cmp
outsl
stos
stos
xchg
lock
cmp
insb
cmpsl
notb
clc
aad
pop
in
jbe
gs
rcrb
insb
ret
js
mov
lahf
sbb
mov
flds
jmp
movsl
movsl
and
sarb
xchg
sbb
mul
andl
mov
enter
cmp
outsb
outsb
lret
adc
mov
testl
jnp
mov
pop
or
mov
mov
cmp
cmp
mov
dec
push
xor
imul
pop
cld
out
mov
cmpsl
aad
dec
enter
or
sbb
xor
fs
inc
stos
mov
inc
arpl
in
lahf
pop
inc
sub
cmpb
imull
add
jecxz
test
mov
add
or
test
pop
mov
ret
les
lret
icebp
jne
push
lods
testb
inc
sub
xor
iret
xchg
mov
lret
popf
dec
mov
jae
cmp
push
cwtl
test
insb
inc
sahf
mov
popa
pop
pop
jp
jo
jo
fcoml
push
xor
jp
leave
aam
inc
imul
jmp
pop
loopne
mov
sbb
fbstp
stos
jge
loopne
pop
jp
push
mov
xchg
fists
in
dec
adc
std
cmp
jecxz
jo
xchg
push
and
movsl
adcb
lock
xchg
cs
sub
cmp
stc
add
or
sahf
data16
es
aam
ja
sahf
sti
arpl
push
xor
or
test
or
ret
ds
cmp
mov
jne
mov
lret
test
or
cmpsl
ficompl
repnz
popf
adc
scas
dec
sbb
add
inc
mov
jno
outsb
jl
inc
pushw
push
movb
mov
pop
dec
shll
add
inc
inc
std
xor
nop
and
enter
cli
hlt
test
ret
mov
adc
mov
test
aam
test
ja
out
xchg
les
mov
in
mov
xchg
push
pop
into
sarb
sub
icebp
clc
sbb
sahf
mov
loope
sar
insl
push
jno
out
rcl
xlat
lcall
das
jo
not
jl
sbb
out
arpl
addr16
fsubp
inc
inc
ret
or
bound
xchg
mov
push
imul
daa
repnz
fmull
loopne
dec
jge
dec
jae
mov
imul
scas
push
scas
aas
cmp
daa
and
inc
xlat
inc
es
mov
ds
jmp
add
loope
lods
xchg
lods
les
lret
in
ret
enter
shrb
mov
cli
stc
mov
je
and
popl
jb
mov
mov
push
sub
loopne
movsb
in
daa
addr16
inc
mov
subl
out
cwtl
popf
icebp
mov
pusha
dec
fisubs
cmpsl
sub
call
or
mov
jp
jo
mov
or
cmp
fwait
addb
mov
mov
sbb
pop
or
push
and
jle,pn
sub
ficoml
out
cmp
cwtl
inc
cmpsb
pushw
lret
sti
mov
cmc
add
mov
push
and
insl
stos
push
or
mov
js
fiadds
imul
push
jbe
int
std
int3
dec
jnp
lods
xchg
mov
into
jnp
mov
mov
ficoml
call
xchg
xchg
push
test
addl
ret
aad
ljmp
add
ljmp
xor
test
push
mov
aas
and
xor
and
pop
jle
jp
mov
cmpsl
testl
pop
je
fisubl
fs
mov
les
negl
xor
outsl
push
cld
dec
push
movsb
xchg
pop
push
push
mov
add
pop
andb
cwtl
daa
lods
ret
and
int3
mov
or
loopne
out
inc
sub
mov
adc
loopne
lret
jnp
pop
imul
js
adc
push
arpl
je
cmp
cmpsb
dec
rcrl
shrb
popa
dec
cmp
sbb
xor
enter
pushf
shl
cli
mov
ret
xchg
mov
repz
add
les
dec
or
inc
jo
jmp
stc
mov
movsl
xor
insb
jge
int
adc
test
shr
jg
sbb
jae
jge
add
sbb
mov
das
mov
inc
inc
xchg
in
out
outsl
clc
or
xchg
add
stc
cmp
push
insl
and
cmp
fcompl
dec
and
and
mov
mov
testl
cmp
and
js
jbe
and
pop
jne
dec
pop
xchg
pop
fimuls
jg
fistl
push
ret
or
imul
mov
cmp
pextrw
outsb
sub
out
mov
mov
cmp
popa
arpl
lods
jg
inc
in
sub
or
add
add
shlb
jb
loopne
es
push
mov
push
cmpl
push
jbe
cmp
mov
xor
scas
sub
push
dec
and
mov
xor
pop
outsb
push
mov
clc
cltd
aaa
out
pop
push
bound
add
addr16
fildl
out
data16
mov
iret
mov
mov
push
popa
shl
pushl
movntps
rcrl
mov
jmp
pushf
lret
sbb
mov
lret
jg
cmp
popf
xor
pop
clc
xor
es
mov
mov
sbb
and
fs
stos
dec
inc
dec
mov
pop
pop
mov
jnp
fdivs
cwtl
icebp
mov
pop
cltd
jne
mov
mov
mov
rorb
add
jno
and
insb
notl
int3
push
mov
testb
inc
test
and
pop
js
stos
insb
cmc
fwait
sbb
sub
push
dec
xlat
fcomp
fsubr
incb
mov
cmp
inc
fdivr
je
out
fldl
or
lods
mov
dec
push
sbb
sarb
and
inc
pop
lret
scas
pop
in
pop
xchg
in
shll
out
in
sahf
mulb
out
cmp
adc
sbb
fcoms
iret
lods
mov
jne
mov
adc
mov
cmpsb
xchg
mov
inc
shll
dec
push
hlt
inc
cli
loope
sub
mov
push
lods
fcompl
scas
aaa
xchg
jno
insb
scas
insb
sub
or
add
js
lock
out
test
and
in
iret
call
nop
adc
inc
pop
ja
lcall
movsl
xor
jmp
out
loopne
xchg
lahf
subl
roll
lods
adcl
and
mov
lock
push
mov
int3
loopne
jo
mov
fmull
jo
loope
sub
inc
int
push
test
add
rclb
jnp
add
xor
xor
je
mov
lret
and
and
movsl
out
mov
sbb
ret
adc
xchg
jp
in
scas
add
push
push
out
or
dec
loope
cmp
notb
pop
lret
nop
jbe
jmp
loop
xchg
xlat
cmp
test
inc
mov
lods
inc
pop
fsubl
out
xchg
jb
cmp
and
xor
mov
adcl
xor
and
mov
jge
or
push
imul
das
clc
in
dec
lods
sub
and
ljmp
jmp
outsb
inc
in
xchg
dec
jle
dec
fdivrs
sahf
mov
push
lods
sbbl
clc
cmp
jecxz
test
nop
rolb
mov
push
loopne
aas
pop
pop
and
cmpsl
push
or
mov
jbe
mov
jg
jbe
mov
lods
xor
sub
ret
ret
test
pop
xchg
inc
call
add
adc
xchg
pop
int
mov
or
inc
mov
mov
out
adc
loop
loop
inc
or
in
shrb
and
repnz
xor
stc
jg
jbe
stc
lret
test
inc
pop
fimuls
add
push
and
arpl
cmp
cmp
cmp
mov
loopne
cmc
ljmp
addr16
pop
cmp
mov
jle
hlt
mov
es
jae
es
cmp
mov
test
jecxz
outsl
or
int3
popa
mov
repz
fcompl
mov
mov
js
loopne
ljmp
dec
mov
mov
cmp
or
popf
mov
sbb
mov
jno
xlat
popf
xchg
mov
xor
pop
fidivrl
daa
dec
loop
fistps
loopne
les
popa
jl
sbb
iret
or
aad
movl
stc
out
sbb
gs
cmpsb
je
testl
roll
dec
dec
das
inc
jns
cmpsl
or
outsb
cmp
leave
jb
fstpl
sub
jns
cltd
pop
addb
xlat
cmp
andb
adc
dec
pop
roll
and
icebp
push
mov
inc
pop
jp
adc
pop
push
sub
mov
hlt
mov
mov
jl
aaa
xor
xor
and
push
xchg
aaa
ret
jns
mov
adc
or
das
xchg
pop
test
push
sub
mov
movsb
push
fucom
fistl
ret
je
lahf
ret
out
dec
jp
mov
add
test
data16
fisubrl
add
fldcw
int3
ret
inc
inc
xlat
js
dec
sub
inc
or
jle
lods
ss
inc
jmp
push
jl
or
call
arpl
lea
lcall
push
icebp
or
movsb
lds
or
jmp
mov
mov
dec
movsl
mov
popa
mov
addr16
pop
jmp
dec
inc
shlb
push
outsl
clc
mov
scas
cs
xorb
or
xor
jne
loopne
loopne
inc
xor
scas
xchg
push
arpl
ret
loop
or
mov
mov
sbb
xchg
sti
insb
cli
andl
ret
cltd
ret
cmp
shll
pusha
pusha
mov
sti
gs
jae
or
fwait
xor
movsb
aas
dec
insb
xchg
iret
in
push
std
aas
adc
fcoms
in
xlat
sub
aaa
repnz
jne
in
loope
pop
js
mov
faddl
and
xchg
loope
sbb
xor
aas
mov
shr
fidivl
sub
sbb
iret
push
xchg
jne
adc
inc
adc
mov
addr16
add
and
mov
xchg
xchg
xor
jge
stos
push
push
test
xor
out
fnstsw
daa
cwtl
jno
pop
gs
mov
and
dec
pusha
fisttpll
mov
mov
push
dec
adc
push
mov
mov
and
xor
jp
xchg
inc
loop
pop
mov
dec
pop
lret
push
and
sahf
out
sti
adc
test
sub
jecxz
jg
jle
aad
sub
jae
clc
or
jno
or
jb
ret
dec
sti
dec
push
lods
int3
adc
xor
out
stc
lods
mov
pop
mov
mov
add
inc
mov
imul
dec
movsb
aas
add
push
sub
shrb
push
cmpsl
in
and
ret
xor
mov
sbb
pushf
movsl
insl
nop
push
xchg
adc
rorl
sbb
xor
imul
push
mov
rcrl
test
push
jge
push
cs
dec
pop
and
jb
hlt
cwtl
scas
ja
shrl
in
add
gs
ficomps
push
out
sub
js
mov
mov
insl
sbb
jns
mov
inc
test
scas
push
loope
mov
ret
fcmove
mov
push
je
xchg
cmp
add
push
and
and
sbb
aas
inc
sar
js
mov
stc
mov
idivb
testl
inc
mov
sub
pop
sub
cmc
sub
dec
inc
cmp
imul
or
js
mov
xchg
mov
fwait
or
loop
pop
fdivs
push
sub
pop
or
mov
stos
mov
adc
jg
ss
dec
jae
pop
divps
jge
inc
jp
lahf
imul
jns
lret
inc
aam
xchg
inc
rorl
sbb
jne
push
pop
inc
fnstcw
dec
popf
pusha
xor
sbb
ret
adc
daa
fdivr
les
in
jge
inc
std
call
adc
rorl
cmp
push
or
iret
jge
mov
xor
add
or
push
gs
sub
adc
sbb
xchg
clc
rolb
add
sbb
adc
rcrb
push
lret
int3
mov
outsl
lock
fisubrl
ret
xchg
push
leave
mov
in
jmp
push
jl
es
xchg
push
mov
int3
cmp
xchg
xchg
inc
mov
mov
roll
cmp
ljmp
mov
xor
pop
or
fistpll
lahf
cmp
daa
adc
repz
sbb
pusha
adc
aam
pop
into
fs
or
test
int3
lock
out
sub
ljmp
shlb
adc
jns
data16
ficoms
cli
icebp
xor
and
sti
jo
xor
push
fwait
and
dec
insb
push
push
fwait
mov
adc
push
mov
xchg
cmp
cmpsl
popa
mov
sbb
into
or
testb
pop
mov
sbb
fmul
test
aas
or
das
mov
icebp
mov
add
xlat
test
mov
imul
addr16
add
inc
lods
or
dec
mov
lcall
in
loope
jae
out
jmp
jns
scas
rorb
in
loope
fisubrs
lods
cmc
ret
jbe
xor
pop
inc
cmp
orb
fstps
outsb
shrb
ret
iret
pop
inc
loopne
mov
leave
scas
cmp
out
arpl
cwtl
add
hlt
adc
xchg
adcl
add
mov
dec
sbb
call
test
lcall
cwtl
lods
in
int3
inc
std
icebp
cld
mov
cmp
add
jmp
negl
fsubrl
repz
push
jp
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
jp
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
jp
mov
arpl
adc
and
xor
ret
or
sbb
sub
cmp
push
mov
leave
stos
jae
je
fwait
and
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
in
bswap
js
xor
push
jae
and
add
add
add
or
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
dec
add
add
add
push
add
ret
add
add
add
jmp
add
add
dec
add
inc
add
int
add
arpl
dec
add
add
jmp
add
add
add
add
outsb
add
mov
add
add
and
pop
add
add
out
popa
add
leave
add
add
add
dec
add
add
add
add
add
add
add
add
pusha
add
add
pop
add
add
add
add
add
add
add
add
filds
cmp
add
add
add
add
int
mov
add
add
add
ljmp
add
jo
testl
testl
inc
add
add
pop
lahf
add
jb
pop
add
fwait
add
inc
add
leave
add
add
or
insb
add
add
add
add
add
add
add
add
out
sbb
add
add
add
cwtl
add
add
add
add
add
pusha
add
add
add
add
add
adc
push
add
add
add
mov
add
push
add
add
add
add
add
leave
add
add
xor
cmp
cmp
add
add
add
add
add
add
mov
add
add
inc
add
pushf
add
add
add
inc
add
data16
add
add
add
jo
lret
add
add
add
add
out
inc
add
add
add
add
add
add
inc
add
or
xchg
add
add
add
add
add
add
add
add
aaa
add
dec
add
add
inc
add
add
lcall
add
add
xor
pop
add
add
push
add
add
add
into
add
xchg
add
adc
add
test
add
inc
add
dec
add
add
leave
add
add
add
mov
add
roll
int
scas
add
mov
jmp
add
add
jne
push
add
add
add
add
addl
jae
data16
mov
mov
pop
add
add
add
mov
add
add
add
add
pusha
add
add
pop
add
ret
add
add
add
addl
sub
add
cmp
sub
pop
add
add
add
add
add
add
add
lahf
add
add
add
mov
mov
add
dec
add
add
add
add
add
add
sbb
xchg
add
add
add
add
add
add
add
pop
add
inc
add
loopne
nop
add
dec
add
add
enter
dec
add
add
add
add
pop
nop
add
add
add
add
add
loope
add
mul
pop
pop
imul
mov
inc
sub
pop
out
pop
mov
rcrl
jecxz
sub
cmpsb
in
pop
repz
push
or
ss
mov
sub
jle
into
pop
sbb
js
push
andl
loope
pop
sahf
idivb
adc
outsb
pop
jg
imul
pop
iret
fnstsw
decl
adc
and
loope
cmpsl
scas
pop
idivb
mov
loopne
test
fiadds
aaa
add
inc
mov
dec
int3
add
sub
sub
pop
inc
or
pop
daa
sbb
xor
insb
testb
sbb
imul
cwtl
fdivrp
inc
push
fwait
push
mov
ud0
ljmp
cld
push
xchg
jnp
mov
test
sub
xchg
or
mov
mov
inc
sbb
cmpsb
shrb
dec
scas
fdivr
stc
sbb
sub
int3
cmc
push
push
sbb
jb
pop
aas
rorb
cmpsl
dec
or
fldl
and
shrb
jne
push
sahf
clc
fldenv
sub
sub
xlat
or
pusha
xor
cmp
xchg
mov
je
push
ja
jecxz
dec
sbb
insb
daa
add
jle
sbb
pop
in
out
ss
rol
xchg
and
out
inc
fildl
lods
sbb
loope
lret
rcl
push
push
clc
cs
pusha
movsl
push
call
push
xor
mov
pushf
fsubr
push
enter
push
arpl
push
sbb
and
aaa
push
jne
or
jo
lret
arpl
xchg
adc
mov
leave
adc
scas
pop
sahf
fdivs
xchg
call
fildl
mov
loop
ffreep
mov
lahf
lcall
adc
sbb
into
or
jb
mov
subb
jge
xor
sub
andl
sbb
imul
cwtl
jle
cmpsl
push
fucom
adc
nop
shll
pop
and
mov
js
movb
xchg
ss
test
cmp
leave
xor
aas
nop
xchg
jns
push
lahf
jo
jmp
out
rol
add
mov
shr
fmull
rcrl
mov
push
or
dec
aaa
pop
mov
push
sbb
mov
push
pop
mov
cmc
shll
add
push
add
pusha
and
scas
mov
lret
or
aad
mov
pop
mov
push
pop
movsl
jo
call
pop
mov
fbstp
sub
mov
ljmp
xchg
insl
popf
fs
add
scas
ss
dec
stos
jle
mov
hlt
test
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
