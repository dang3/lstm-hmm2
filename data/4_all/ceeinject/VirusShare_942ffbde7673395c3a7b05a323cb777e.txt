fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sbb
push
pop
insb
cmp
dec
inc
or
clc
push
enter
call
jl
or
pop
sub
cmp
js
push
call
cwtl
mov
call
push
inc
cmp
sub
push
mov
test
enter
int3
lods
std
mov
jbe
inc
sbb
cmp
movsb
pop
decb
mov
in
mov
popf
mov
in
inc
hlt
jo
sub
ror
cmc
adc
add
cld
mov
js
and
cwtl
pop
je
insl
dec
mov
xchg
outsl
or
into
cmp
or
mov
aam
les
les
dec
cmp
lret
mov
cmp
push
aaa
daa
jmp
clc
stc
callw
in
xchg
sbb
rcl
out
pop
mov
and
sti
popf
jo
in
add
xchg
nop
cmp
cmp
xchg
pop
lea
fcompl
inc
fwait
pop
clc
jmp
inc
js
push
mov
sbb
or
adc
into
fcomps
test
cwtl
call
mov
aaa
push
imul
int
stos
aad
rcll
cmp
dec
pop
dec
pop
xor
push
lea
or
mov
shlb
in
test
sbb
sub
cmp
push
dec
sub
push
call
fdivrs
call
push
pop
cmp
js
push
call
fdivrs
call
jge
stos
call
ds
dec
lret
loope
sub
addl
and
mov
mov
pop
xchg
aam
dec
and
fwait
arpl
bts
sub
enter
hlt
mov
call
jbe
and
sbb
ds
std
out
call
loopne
mov
arpl
ret
pop
push
or
adc
add
jne
or
scas
inc
hlt
xchg
scas
add
fisubrs
mov
shl
xchg
push
outsb
jl
jmp
xchg
pop
stc
ja
ret
sub
pop
xlat
rclb
fimuls
data16
mov
cmpsl
adc
sub
push
xor
jne
mov
rolb
cmc
lret
lret
lret
cmp
jecxz
fsubs
dec
cwtl
jb
popf
test
sti
add
loopne
sbb
push
or
les
and
pop
sbb
pop
daa
fwait
mov
imul
cwtl
icebp
out
lahf
test
shll
push
cli
cltd
lret
shll
dec
jmp
adc
js
xchg
push
pop
mov
adc
cmpl
into
adc
cmpsb
mov
sbb
push
ret
call
nop
xchg
lods
scas
mov
mov
pop
mov
out
adc
not
mov
jbe
cmpl
es
rorb
insl
push
dec
imul
mov
adc
sbb
adc
in
lcall
and
faddp
in
push
nop
aad
int3
movsb
mov
scas
dec
out
mov
pop
into
jp
aad
lea
lods
pop
add
addr16
and
mov
inc
pop
mov
xbegin
pshufw
and
mov
xor
xchg
push
jl
add
cltd
mov
and
ret
xor
push
xor
or
xchg
xchg
dec
repnz
js
pop
inc
mov
stos
xlat
sti
jb
or
sbb
inc
add
in
push
jb
lcall
faddl
xchg
pop
cmp
or
pop
sbb
sub
sbb
popf
jo
rorb
and
roll
jns
cmp
vhaddps
or
mov
xchg
xchg
les
insb
adc
test
mov
pop
or
push
jp
jmp
lods
insl
out
jl
jp
jp
hlt
fcompl
pop
repnz
mov
jmp
scas
testb
imul
pusha
stc
push
clc
jg
mov
mov
in
and
das
cld
arpl
add
cmp
sbb
in
and
fxch
mov
and
jge
dec
dec
ljmp
stos
pop
test
loopne
pop
in
cmp
or
out
aad
lock
add
push
daa
and
sbb
cmp
push
xchg
rcrb
adc
fcoms
fisttps
rorb
add
out
adc
ret
ja
fmul
repnz
in
orl
mov
sbb
outsl
ret
rol
outsb
ret
insb
adc
pop
mov
test
imul
loopne
or
lds
pop
xchg
mov
mov
sbb
cmp
jb
mov
decb
loope
lcall
mov
mov
or
sbb
lock
jp
jle
add
test
jae
clc
adc
cmp
in
pushf
bswap
and
pop
mov
adc
xchg
sub
ljmp
in
xor
dec
sbb
lahf
add
test
cli
cli
fmul
xlat
idivl
dec
je
and
and
jbe
jmp
shl
jl
push
fisubrs
ds
addl
sub
ret
pop
xchg
xor
xchg
and
fs
sub
push
movsl
dec
adc
cmpsb
shll
push
xchg
stc
adc
les
mov
cmp
sbb
pop
push
fdivl
test
loop
sub
daa
scas
push
xchg
jne
jp
mov
xchg
dec
fucomi
mov
jae
mov
pop
lock
cmpsl
loop
stos
push
xor
loop
or
jl
inc
sahf
lret
aas
fiadds
jno
sub
inc
mov
cmove
cmp
mov
and
sub
xlat
jne
sahf
enter
orb
cmp
dec
inc
clc
jecxz
jge
sub
repz
lcall
cmp
push
mov
inc
out
aam
lds
fwait
mov
xchg
adc
aam
sti
out
rorl
mov
sbb
push
aad
or
out
sti
xor
imul
add
sub
inc
lcall
sahf
sahf
lret
stos
fidivl
inc
jge
cltd
out
pop
jl
pop
repnz
stos
fs
mov
mov
xor
xchg
inc
and
jle
call
sub
xorb
dec
mov
fisttpl
jle
dec
hlt
jne
sbb
fidivrl
inc
or
sub
fs
fstpl
int3
jp
push
inc
xlat
push
mov
rcl
hlt
aaa
lret
cmpsb
dec
add
jp
les
mov
mov
or
cs
insl
push
mov
adc
enter
and
xor
xlat
cmp
pop
pop
icebp
cs
out
lods
repz
cli
lods
mov
mov
pop
mov
and
or
mov
test
push
repnz
ss
adc
push
dec
in
sbb
gs
lahf
mov
mov
xchg
push
repnz
fsubl
cmp
xor
inc
lea
sbb
adc
arpl
xchg
cmp
push
fbld
and
ret
push
in
inc
in
test
cmp
movsl
lock
or
pop
cmp
jno
pusha
aaa
push
pushf
sbb
data16
or
and
repz
cli
pop
and
and
inc
and
xchg
xchg
push
ss
push
jle
xor
stos
clc
pusha
imul
dec
push
dec
xor
inc
cmp
andl
and
lds
enter
ret
cmp
movsb
adc
sbb
and
jecxz
pushfw
jmp
and
mov
xor
or
or
addl
out
mov
cmp
bound
imul
xchg
ror
notl
sub
testl
mov
outsb
push
sub
inc
lahf
add
ret
pop
leave
adc
add
dec
inc
push
insl
outsl
fisttpl
add
stos
adc
dec
pop
and
dec
xchg
inc
and
outsl
mov
jge
cmc
adc
inc
jne
hlt
imull
imul
cmp
pop
fwait
cmpsl
push
cmp
mov
and
fiaddl
mov
xchg
es
std
test
subl
in
out
adc
stos
hlt
lock
jp
scas
cmpsl
jns
mov
incb
std
adc
lea
test
mov
testb
lcall
sub
int
and
stos
out
inc
fwait
rcrl
jno
rol
sbb
mov
mov
lea
pusha
lods
lds
ja
jge
add
jnp
repz
jmp
repz
int3
xor
jmp
push
stos
test
movsl
jae
xor
pop
ljmp
and
jg
incl
fwait
ret
pushf
iret
out
fs
xchg
cs
shll
in
in
pop
jno
loop
mull
or
push
addb
hlt
push
dec
mov
in
adc
and
fsubr
cmp
les
jp
inc
and
add
leave
scas
outsl
cmp
cli
jp
dec
add
rolb
mov
les
clc
outsb
cli
sbb
into
and
push
cli
pop
inc
lods
das
stos
orl
fnstenv
hlt
jno
cli
daa
out
shlb
out
ja
pusha
std
rcrb
mov
sarl
fwait
push
int3
ljmp
dec
outsb
mov
gs
clc
out
les
arpl
xchg
pop
enter
inc
loope
sub
mov
sahf
jl
mov
int
jge
mov
movsb
jmp
outsl
sub
adc
dec
lods
lcall
in
loopne
jmp
xchg
xor
adcb
push
sbb
xlat
mov
fdivr
ja
adc
scas
test
xchg
fstl
out
sub
adcl
and
repnz
mov
icebp
rorl
cmc
jp
pop
loop
jl
test
mov
mov
add
mov
adc
cmc
mov
inc
sub
cs
mov
arpl
push
mov
lahf
imul
mov
fsubs
leave
add
xchg
popf
mov
mov
xor
arpl
mov
xchg
mov
sub
jns
cmp
cmp
imull
repnz
negb
mov
pop
jmp
cmp
xor
cmpsl
repnz
mov
cwtl
xor
ficomps
dec
cmp
sub
roll
push
test
sub
sub
add
xchg
test
popf
std
push
les
adc
lock
and
aad
sbb
cmc
arpl
push
das
fld
imul
push
xor
lods
push
call
outsl
ds
orl
push
sub
jo
ret
stos
les
out
js
cld
xchg
adc
mov
inc
push
dec
fwait
mov
cld
daa
and
or
push
sbb
pushf
mov
test
in
push
xor
dec
vcvtsd2ss
ss
fwait
dec
in
add
add
xor
xchg
es
pop
adc
insb
lods
arpl
cmpl
mov
push
dec
sub
cmp
ret
dec
in
insl
mov
mov
mov
lods
sub
dec
dec
imul
sbb
push
loop
int
outsl
mov
ja
sub
lret
ret
rcll
pop
aas
sti
jno
cltd
xchg
mov
fxch
outsl
enter
jl
cld
xchg
sbb
push
insl
pop
cmp
outsb
cmp
jcxz
js
add
sub
pop
and
dec
cwtl
jge
popf
push
cmpsl
ss
inc
or
scas
push
filds
cmc
addb
adc
inc
lods
mov
cmc
dec
std
jb
jecxz
sti
inc
inc
xchg
and
lods
pusha
push
pop
and
fsub
iret
cmp
stos
push
pushf
adc
inc
push
jmp
scas
stos
pop
lea
mov
sub
test
cld
inc
fs
mov
mov
jp
and
mov
inc
sub
les
mov
dec
push
fwait
loope
mov
mov
or
mov
sub
inc
scas
or
sbb
hlt
shlb
notb
popa
cmpsb
fmuls
and
pop
inc
jne
lea
lret
inc
pop
out
cwtl
into
stc
je
mov
in
test
scas
sub
stos
mov
clc
adc
std
jecxz
pop
mov
rdtsc
mov
aad
xchg
mov
and
loop
mov
sahf
cmpsb
push
scas
dec
mov
mov
fs
pushf
jno
xchg
test
subb
mov
imul
lahf
xchg
outsb
adc
add
xor
adc
fadds
inc
push
jo
xchg
repnz
lds
setg
sbb
cmp
xor
insb
adc
jmp
adc
xchg
dec
sbbl
push
test
and
cltd
lods
push
inc
mov
xor
fwait
dec
pop
jne
inc
adc
and
cmp
test
inc
adc
mov
push
insb
movsl
fwait
jmp
clc
insb
mov
adc
cmp
stc
in
daa
mov
jo
pop
inc
jge
cmp
test
add
addl
push
adc
inc
pusha
mov
in
out
in
clc
daa
adc
jbe
add
repz
dec
je
adc
test
mov
in
mov
pushf
push
mov
divb
push
mov
daa
aas
jecxz
mov
push
addr16
insl
cwtl
xor
and
nop
and
xchg
and
mov
adc
cmp
ret
push
add
dec
les
pop
arpl
call
mov
dec
cmp
add
clc
xor
test
dec
mov
mov
stos
xlat
or
add
and
in
iret
jae
mov
xor
cmp
shll
cwtl
fcomi
lods
push
mov
dec
xchg
cmp
jns
pop
xchg
sub
int3
pop
add
imul
mov
out
in
and
test
push
jg
out
lea
pop
sarb
or
pop
lods
and
sub
xchg
inc
prefetch
or
xorl
cmpsb
xchg
xchg
test
in
out
sbb
mov
or
scas
cwtl
shrl
cli
mov
sub
jecxz
mov
lcall
mov
icebp
imul
cmp
negl
stc
mov
adc
lcall
mov
mov
and
xor
sub
out
js
stos
or
sbb
push
push
int3
test
adc
mov
push
addr16
adc
sarb
inc
cmpsb
cmp
mov
jo
popf
adc
outsl
popf
and
xor
mov
mov
outsb
pop
push
into
daa
and
shl
stc
pushf
stc
push
xchg
stos
enter
push
jne
xor
pop
imul
scas
pop
jns
loope
mov
push
xor
dec
xchg
lock
jns
lahf
xchg
dec
rorb
repnz
pop
test
test
adc
and
sub
add
push
adc
clc
mov
sbb
scas
popf
push
shll
xchg
imul
mov
lret
jmp
add
addr16
ljmp
dec
fists
add
les
pop
xchg
fwait
jl
and
sbb
stc
inc
hlt
das
sub
test
mov
sti
inc
mov
loopne
pop
adc
jp
daa
leave
lods
inc
or
in
test
aaa
adc
push
jecxz
mov
mov
sbb
ret
call
in
xchg
das
stc
rol
add
mov
jl
lods
push
mov
or
xchg
filds
in
fiaddl
adc
ret
out
push
popa
xchg
adc
loope
cmc
popf
imul
inc
cmp
das
loop
jl
xor
sbb
or
xor
dec
jge
pushl
test
push
pop
adc
xchg
mov
inc
in
cwtl
lods
cmp
dec
inc
fcomip
shll
cltd
in
push
pop
lret
adc
addl
mov
jp
adc
cmpsl
cmpsl
adc
scas
imul
lea
inc
cmp
push
jp
mov
pop
daa
mov
mov
dec
adc
mov
andl
ror
out
fldl2e
add
dec
outsb
xor
xchg
sbb
ds
loop
movb
push
inc
or
pop
add
mov
data16
xor
lahf
jb
fwait
add
xchg
jp
out
call
rolb
out
cmp
leave
sahf
cs
sbb
and
cmp
aad
test
mov
test
xchg
jle
je
and
mov
fdivs
mov
fs
xor
xchg
pop
test
mov
sub
int3
and
xor
das
ret
fisttpll
sbb
inc
cmp
hlt
stos
lods
jp
xor
mov
cltd
insl
xchg
jl
cwtl
xchg
mov
mov
dec
cmpsl
vsqrtps
dec
les
int
out
dec
mov
adc
out
jbe
movsl
cwtl
imul
test
mov
pop
xchg
repnz
lret
push
or
mov
push
cmpsb
push
jo
push
inc
popf
nop
add
aas
and
mov
mov
mov
jmp
xchg
sbb
lcall
mov
aaa
adc
mov
iret
push
test
sub
popf
jno
hlt
xor
add
fs
cmpb
cmpsl
int3
shlb
imul
lcall
icebp
jbe
dec
repnz
and
inc
adc
push
jmp
iret
fisubs
cmp
ficomps
loop
stos
xor
mov
cmpsl
or
jp
push
out
shrl
mov
and
adc
jge
call
inc
aaa
sbb
cld
lret
mov
iret
mov
sbb
cmpsb
push
push
test
stos
test
cmpsb
sbb
jge
push
dec
enterw
jg
in
out
popf
js
sub
out
or
jp
push
test
inc
cltd
shr
push
imul
dec
in
xchg
or
leave
pop
stos
or
out
out
inc
dec
dec
jo
movsl
mov
push
pop
pop
xchg
xchg
sbb
lods
and
push
adc
inc
jp
aam
cmp
adcl
hlt
mov
jecxz
outsb
mov
fildll
push
lahf
sahf
scas
lcall
stc
xchg
xor
or
mov
sub
fisubrs
xchg
cmovne
lcall
rclb
mov
les
jbe
push
lods
cmp
xor
lret
sbb
test
sbb
pusha
fs
frstor
test
cmp
inc
loop
aad
aas
cvtpi2ps
jg
xchg
push
dec
dec
insl
cmc
mov
dec
scas
adc
stos
cmp
insb
roll
and
adc
cmc
mov
mov
add
lock
mov
mov
xchg
xor
fs
mov
mov
hlt
aam
test
cwtl
rcrb
dec
fst
or
dec
imul
repz
mov
xor
fcoml
sub
dec
mov
lock
lahf
test
sbb
shr
mov
mov
jno
int
cli
jae
pop
int
jp
sub
push
lds
fmuls
dec
inc
and
push
les
jmp
pop
test
movsl
sub
dec
jnp
je
sbb
stc
fwait
stc
sbb
jle
cmpl
mov
lahf
mov
adc
mov
shr
inc
xchg
fwait
jb
nop
pop
sub
test
orl
dec
lds
mov
dec
inc
jae
scas
int
pop
mov
mov
fistpl
fwait
push
xor
jge
xor
add
test
xchg
insl
inc
adc
cmp
jne
cmc
aaa
test
sbb
mov
lret
jmp
pop
sbb
push
push
mov
lret
fdivs
pop
and
cmpl
sahf
fwait
repnz
add
int
scas
fldt
fsubr
out
test
xor
pop
lret
in
addr16
aaa
mov
jae
in
lcall
and
clc
sub
pop
fisttps
cmp
clc
ja
fcoms
mov
test
adc
or
dec
lea
imul
into
stc
xor
push
rcrb
push
xchg
xchg
jo
gs
mov
inc
imul
into
xchg
vsubss
fs
or
push
xor
jp
jecxz
jnp
rcr
ret
fstps
jo
mov
sub
inc
push
mov
and
sbb
push
fnstsw
fists
mov
add
or
sub
clc
sub
sub
mov
fists
cmp
hlt
fisttpll
jnp
setp
xor
mov
cltd
adc
xor
sub
rorb
xchg
bswap
fimuls
dec
loop
in
pop
inc
cs
pop
movsb
imull
pop
add
cmp
and
or
fs
add
insb
sahf
mov
jp
test
cmp
xor
scas
cmp
jno
int
or
fs
jae
sbb
pop
and
mov
sbb
push
cli
adc
and
sub
lds
shll
and
add
repz
aad
int
mov
imul
xchg
jg
test
pop
xchg
or
jp
mov
clc
sub
xchg
lar
inc
add
iret
fdivrs
cmp
push
dec
jecxz
scas
cmp
repnz
xlat
jnp
imul
enter
add
out
xor
dec
fsts
rolb
add
pop
stos
cwtl
pop
cmp
mov
fwait
test
aam
in
sbb
or
je
and
cmp
pop
sbb
into
adc
pop
test
lret
test
dec
and
imul
fbld
popf
dec
jle
adc
and
mov
mov
or
insl
scas
inc
mov
enter
std
in
sbb
cmp
sub
ss
arpl
aad
adc
fmull
aas
ss
arpl
mov
mov
mov
imul
or
int3
mov
insl
xchg
fidivrs
sahf
push
sbb
pop
sub
cmp
js
push
call
fdivrs
call
push
pop
cmp
js
push
call
fdivrs
call
push
enter
js
test
cwtl
clc
mov
dec
fsubrs
test
cwtl
add
bound
dec
pop
cmp
js
call
inc
adc
test
scas
xor
pop
addr16
ja
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
inc
dec
movsl
pop
sub
mov
jno
inc
adc
clc
mov
adc
lods
std
mov
sub
or
or
sub
dec
ffree
popf
faddl
mov
mov
stos
je
fs
adc
test
int3
icebp
dec
xchg
fmull
lcall
sub
or
mov
jle
mov
call
cwtl
pop
test
int3
lds
dec
dec
adc
jl
out
inc
sar
ret
or
pusha
and
push
add
dec
ret
jo
pop
rorb
and
xchg
sbb
inc
popa
int
fcoml
inc
add
sub
push
lods
mov
mov
dec
or
or
pop
jg
cwtl
sub
and
mov
sbb
push
add
xchg
std
or
and
push
dec
xor
and
mov
mov
mov
sub
xchg
cwtl
test
movsl
mov
jne
gs
adc
jl
scas
in
mov
sub
or
sbb
sub
and
jne
mov
test
mov
mov
imul
sub
inc
sbb
in
mov
fcompl
cltd
ret
mov
xor
and
cmp
add
push
mov
fdivrl
mov
lret
mov
pop
pop
or
aas
pop
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
test
bound
xchg
orb
sub
mov
bound
and
in
jns
das
inc
insl
sbb
lods
andl
jg
js
mov
or
hlt
jno
adc
es
lret
shl
mov
pushf
sbb
lds
ret
push
cs
aad
rorb
addr16
std
loop
stos
or
and
and
mov
rcrb
aaa
inc
inc
cmp
pop
add
mov
push
hlt
imul
dec
cs
in
test
cli
rcrb
cmp
mov
test
mov
pop
jg
sub
cmpsl
jns
push
push
mov
mov
imul
adc
mov
or
xlat
inc
std
fdivrl
xchg
outsb
lret
add
xchg
xor
imul
test
push
rcrb
fstps
mov
sbb
dec
stos
jp
call
ljmp
repz
bound
push
lahf
int
loopne
add
iret
daa
cwtl
jne
jecxz
mov
lahf
push
mov
lods
sub
adc
movsb
pop
flds
xchg
ret
aaa
rorb
lahf
mov
movsb
rorb
mov
cli
sahf
adc
adc
mov
outsl
cltd
cmp
rolb
mov
out
arpl
leave
mov
mov
jge
sbb
or
lods
testl
mov
lock
dec
jle
jno
push
xor
mov
das
sbb
xchg
mov
mov
jb
mov
mov
push
lds
subl
scas
xlat
or
dec
cmp
andb
jle
cmp
rolb
xchg
fimull
mov
aas
int3
lret
out
popa
xor
loope
test
rclb
loope
test
xchg
push
and
xor
lds
mov
pop
xchg
or
sub
cmp
add
jne
gs
fs
inc
out
out
ffree
into
test
cld
pop
mov
aaa
out
lcall
lea
fsubs
in
xor
fs
dec
in
rorb
popa
add
fmuls
mov
jae
xchg
enter
into
inc
aaa
movsb
enter
test
sbb
xchg
jae
int3
shrl
popa
mov
mov
rorl
mov
dec
and
repnz
loope
ja
test
in
push
mov
loopne
repnz
sti
fsubrl
filds
cld
inc
adc
mov
inc
pusha
xchg
sahf
sub
jne
insb
shr
dec
fs
pop
and
fsubl
and
scas
cmp
add
mov
mov
sbb
mov
push
mov
adc
and
sub
arpl
lret
mov
mov
fnsave
inc
sbb
fsubrs
loope
inc
jmp
shrb
lds
popa
push
lods
sarl
xchg
cmpsl
insl
bnd
add
push
repz
loop
fwait
insl
jle
por
imul
test
stos
scas
xor
sub
push
inc
lds
out
js
jecxz
pop
movsl
loopne
push
lods
jmp
xor
int3
lods
test
sub
lods
insb
jne
inc
fstl
push
in
jo
push
cltd
push
aam
andb
jae
insb
cmp
adc
stos
repz
pop
int3
xor
jnp
lahf
xor
lret
ror
std
cmp
clc
cli
cmpsl
incl
jne
xor
mov
ss
arpl
loopne
lret
mov
dec
fnsave
inc
adc
fdivl
and
popf
xor
fcmovnb
xor
cmp
jmp
sbb
scas
lock
sti
mov
in
adc
loopne
movsl
sub
or
jnp
adc
sbb
or
test
pop
xor
insb
push
loope
mov
mov
ret
inc
lea
cmpsl
mov
inc
or
stc
mov
dec
orb
fisubl
ficomps
cmp
xchg
mov
adc
adc
xor
push
scas
push
gs
test
lock
sbb
repz
mov
xchg
xchg
icebp
jne
mov
jns
dec
dec
sub
cmp
xchg
dec
stos
jb
cmpl
mul
in
adc
xor
shlb
mov
das
popf
mov
js
pop
fildl
sbb
sti
push
pop
mov
cmpsb
jnp,pt
push
jns
repz
ret
stos
or
lahf
xlat
mov
decl
mov
mov
add
aaa
dec
dec
adc
in
out
jmp
sub
push
outsb
cmpsl
mov
sahf
sub
pushf
ds
jne
daa
stos
xor
dec
adc
stos
jno
std
jne
mov
nop
jp
mov
ret
call
and
aad
add
push
scas
pop
xor
push
inc
pop
mov
dec
mov
push
lds
test
cwtl
cwtl
imul
or
xchg
subl
ds
in
je
rcl
repnz
push
mov
mov
in
inc
test
jecxz
or
push
test
in
pop
fstps
xor
mov
jbe
into
les
mov
add
repz
xor
dec
or
les
push
fimuls
insl
pop
mov
and
stc
aas
das
push
lock
sub
cmp
push
js
test
push
sub
aaa
nop
in
jb
je
jp
nop
push
sbb
out
inc
add
pop
xor
lods
loop
push
mov
push
xchg
shrb
pop
dec
dec
cmp
sub
and
daa
push
inc
jl
or
push
loopne
adc
in
ds
fdivrs
dec
cli
cltd
movsb
push
push
sbb
cmc
inc
les
push
add
sahf
out
or
sub
data16
pop
lods
or
out
ret
dec
xlat
pop
mov
mov
push
mov
add
aam
inc
inc
push
push
add
xchg
cmp
addr16
xchg
neg
scas
sbb
insl
push
in
aam
orb
jl
or
sbb
filds
insb
ds
jo
inc
loop
dec
int
rolb
lea
add
dec
inc
pusha
enter
and
and
mov
ljmp
xchg
dec
hlt
arpl
dec
outsl
pop
out
rorb
repnz
push
xchg
fsubrl
arpl
mov
push
out
outsb
enter
jp
popa
fdivrs
xor
aas
loop
mov
mov
mov
cmp
cli
adc
hlt
adc
jge
or
mov
sub
mov
sti
dec
jo
lcall
out
addr16
push
stos
jle
fwait
or
ljmp
ss
cltd
lret
sub
or
dec
add
in
sbb
inc
mov
and
setns
movsb
lods
adc
lcall
pop
arpl
data16
fnstsw
adc
or
mov
mov
push
in
push
mov
lcall
sub
sbb
sbb
addr16
lret
addr16
movsl
outsl
decb
jle
dec
hlt
addr16
sbb
iret
inc
jbe
es
es
lcall
jle
jbe
test
mov
es
mov
push
test
push
fisttpl
pop
ja
mov
and
dec
movb
inc
pop
adc
push
or
arpl
mov
pop
test
pushf
mov
fldt
push
sub
push
aam
aad
pop
sub
movsl
sar
jns
xor
push
mov
stos
lahf
fadds
pushf
clc
adcl
mov
add
xor
mov
pop
test
lds
mov
mov
mov
adc
pop
and
int3
and
imul
ret
into
lds
xor
mov
dec
mov
mov
sub
mov
inc
sub
xchg
mov
sub
add
mov
mov
adc
cwtl
push
inc
aaa
std
xchg
mov
movsb
mov
mov
mov
out
mov
inc
xchg
mov
xor
jle
jmp
jmp
xor
pop
mov
orl
imul
in
daa
inc
lret
popf
push
test
fadd
mov
jnp
add
mov
mov
sbb
jne
mov
in
jnp
add
xor
sbb
ljmp
mov
mov
rcrb
add
sbb
fadd
jmp
in
mov
push
dec
push
inc
loop
hlt
jne
adc
cli
ret
insl
mov
arpl
xor
dec
cmp
dec
cmpsl
or
or
addr16
and
cmc
arpl
out
pop
call
adc
xlat
sub
xor
hlt
push
cmp
add
test
cmp
pop
shlb
sub
fistpll
mov
xchg
jne
fisttps
loopne
dec
adc
add
push
xchg
jmp
insl
fldenv
cli
push
jmp
jg
adc
cltd
push
stc
lods
test
adc
xchg
insb
jbe
mov
out
popa
rorl
adc
add
cmp
test
scas
rorb
mov
cmp
repnz
dec
gs
jle
es
es
xor
in
and
push
sub
or
push
das
fnsave
cmp
hlt
fildll
bound
lock
mov
mov
pop
addl
outsb
and
push
jg
lods
lret
sbb
ljmp
dec
jl
je
or
xor
scas
inc
sub
push
cmc
sbb
pop
ret
adc
sub
shl
int3
push
cmp
orb
fs
stc
xchg
sub
lahf
jp
mov
xlat
sub
js
cmp
rcrl
fsubl
push
add
xchg
xor
push
lea
add
stc
cs
jp
fidivrs
nop
out
rcrb
cmp
push
insl
adc
std
cltd
xor
mov
gs
pop
pop
lcall
adc
xor
dec
dec
mov
and
cmp
fisubrs
push
mov
inc
and
lods
outsb
mov
push
mov
popf
inc
pop
cmp
iret
gs
inc
ja
sbb
add
aaa
adc
and
mov
add
mov
mov
int
dec
jae
pop
les
pop
sti
stos
repz
xor
testb
xchg
in
sti
xchg
xchg
mov
jne
fisttpll
jmp
pop
inc
jmp
ss
jne
sub
leave
mov
lahf
pop
mov
in
stos
aaa
icebp
sub
mov
dec
or
sbb
scas
pop
adc
lods
rcr
and
test
or
imul
push
xchg
or
pop
inc
cmp
jbe
xor
mov
and
cmp
das
repnz
jecxz
mov
rcll
add
fwait
adc
enter
push
push
movsl
daa
aas
xor
fstps
inc
mov
push
mov
pop
or
out
mov
lock
movsl
arpl
scas
fwait
cmp
into
xchg
inc
push
incb
je
adc
sbb
sub
adc
cmp
out
insl
dec
into
xchg
std
imul
mov
ja
divl
test
push
mov
sub
dec
sub
mov
test
adc
or
stos
xor
mov
xchg
push
or
push
mov
fwait
pop
into
cmp
movsl
xchg
sbb
sahf
jb
stc
jns
addr16
and
ret
xor
out
popa
notb
fnstenv
pusha
jl
ror
fdivrs
xor
int
pop
outsl
rcll
shll
add
mov
push
lret
fsubs
ret
mov
mov
loopne
add
and
shl
add
rcr
add
push
xchg
jae
push
in
lock
std
sub
loopne
aaa
lret
inc
fs
pushf
push
jecxz
pop
arpl
mov
ljmp
xchg
out
jo
mov
loope
aad
loopne
sarb
ja
xchg
outsb
fwait
test
repz
dec
pushf
mov
pushf
xchg
movsb
push
sub
jbe
les
jne
test
xchg
orl
mov
xor
or
and
mov
adc
xchg
movsl
cld
shll
fs
push
pop
scas
test
cltd
test
cmp
lcall
push
scas
xor
jecxz
or
xlat
mov
int
out
cmp
mov
push
pop
clc
jg
cwtl
adc
adc
cli
xchg
sub
fiaddl
popf
pop
rol
testb
clc
das
mov
scas
inc
arpl
xchg
adc
pusha
mov
in
or
sbb
cld
sbb
lds
jbe
in
cwtl
inc
hlt
or
idiv
in
inc
xorl
push
jno
pop
cmc
decl
rcl
stos
js
inc
hlt
cmp
inc
jo
push
js
int3
lret
xchg
popf
pop
mov
adc
cld
lret
out
pop
dec
xlat
int3
loop
push
xlat
jmp
mov
int
sarl
xor
jle
imul
stc
sbbl
push
out
stos
lret
or
pop
jae
push
pusha
push
int3
pop
lods
push
daa
lds
int
cmp
mov
je
mov
mov
clc
mov
xchg
xor
jne
outsl
xlat
and
fwait
hlt
lods
mov
cltd
inc
mov
jb
mov
out
push
inc
and
fs
sbb
insb
js
push
jne
in
aad
mov
xchg
fcomps
jo
icebp
leave
stos
sahf
push
cld
dec
mov
dec
xchg
jbe
leave
mov
sbb
stos
cmc
pop
adc
movsl
lea
mov
out
xor
les
sti
aam
mov
andl
es
or
fs
scas
fdivrs
mov
stc
pop
and
mov
in
test
ret
pop
dec
mov
fwait
xor
push
jnp
popf
fstps
in
dec
xor
push
mov
xor
test
jne
es
call
lods
into
mov
cmpsb
aaa
leave
sbb
dec
push
rorb
inc
dec
sub
mov
sub
pop
imul
cmp
dec
outsl
test
sti
cmp
adc
pop
lea
je
insl
add
mov
mov
cmp
shlb
mov
roll
loop
pusha
ret
js
pop
fdivrl
repz
sbb
jb
mov
sti
pop
cmp
gs
add
and
and
sub
and
enter
sub
arpl
add
popf
int3
dec
jnp
shrl
lea
iret
neg
shlb
jbe
mov
or
out
jne
outsb
inc
fnsave
push
ret
mov
notl
xchg
dec
scas
mov
scas
push
cli
xchg
cmpsl
lcall
lds
call
push
jnp
out
pop
testb
das
xor
inc
cld
dec
subl
xchg
adc
cwtl
push
das
in
daa
adcb
mov
adc
mov
mov
mov
push
add
pop
notl
or
lret
sub
inc
lahf
mov
int
mov
xorb
into
cmp
jae
test
icebp
mov
outsl
cmp
add
xchg
ret
push
jg
outsb
ficompl
xchg
and
shrl
in
stos
jg
sub
mov
test
mov
mov
or
push
sub
pop
stos
jge
dec
out
fmull
in
imul
and
out
in
or
inc
mov
pusha
leave
pop
fildl
mov
lods
test
out
pop
call
das
inc
movsl
adc
sub
stos
inc
xchg
push
and
fld
adc
adc
in
or
sbb
xlat
lret
shrb
fildl
lret
ljmp
rorl
fwait
and
and
mov
faddp
mov
pop
inc
int3
mov
pop
add
cmp
pusha
std
pop
jne
jno
test
dec
mov
movl
jecxz
lret
cmp
cs
dec
fmull
mov
sbb
mov
push
mov
test
jnp
cmp
inc
sarl
int
call
nop
dec
iret
loop
pop
out
int3
fadds
xor
in
xchg
rcrb
mov
jmp
and
push
mov
push
jae
xor
push
outsl
bound
jae
jbe
mov
mov
pop
fdiv
jg
dec
movsb
mov
sbb
jbe
mov
rol
or
pop
cmp
jb
ficompl
mov
jl
cmp
push
sarl
or
pop
adc
dec
sbb
hlt
dec
add
scas
ja
lock
mov
xchg
inc
adc
pop
or
inc
sbb
push
in
xchg
daa
stos
sahf
jp
movb
cmp
cwtl
sahf
xor
adc
or
aas
popf
lods
cmpsb
lods
das
sub
mov
clc
or
mov
aam
outsb
mov
mov
push
jle
xor
push
mov
pop
push
mov
bound
clc
xchg
imul
nop
xor
mov
insb
xorl
sbb
mov
pop
sub
sub
sbb
addl
in
add
sbb
mov
ja
adc
mov
clc
cld
adc
sbb
push
loopne
mov
lea
lcall
cli
out
mov
popf
pop
xor
outsb
inc
jle
movsl
or
gs
jae
scas
mov
arpl
enter
mov
test
sub
subb
fists
test
scas
ljmp
neg
frstor
push
aam
cli
and
aam
push
jb
jb
mov
fildl
in
or
in
ret
fstl
cwtl
pop
nop
xor
xchg
test
inc
xchg
jae
adc
fsubl
mov
mov
push
mov
dec
and
test
movsl
lods
jbe
jp
in
leave
sbb
push
ret
insl
call
cmp
push
decb
out
ss
bound
movsb
adcb
dec
movsl
fdiv
stos
imul
mov
sub
xchg
cmpsl
or
mov
mov
push
mov
ss
inc
loopne
outsl
sarb
push
or
mov
pushf
mov
out
repnz
xchg
xor
rcrb
push
mov
xchg
faddp
dec
jle
xchg
scas
mov
dec
call
loopne
fisttpl
lds
add
sbb
pop
mov
test
ror
cmp
leave
sahf
or
mov
out
mov
inc
hlt
jnp
add
mov
mov
hlt
and
pop
in
dec
xchg
and
mov
push
sbb
sbb
scas
dec
mov
call
fnstenv
adc
scas
fsubs
fstpl
mov
mov
fdivrp
and
sarb
insb
pop
popa
push
inc
mov
stc
push
cmc
xchg
push
sub
cmp
mov
stos
mov
movsb
stos
jge
cwtl
imul
aaa
scas
femms
dec
jbe
xor
pop
roll
nop
sarb
or
inc
int
std
orl
in
loope
sbb
inc
pop
jmp
push
cld
dec
mov
fildl
std
fwait
js
hlt
int3
mov
std
clc
xlat
shrl
pop
lds
imul
mov
pop
int
mov
setg
jae
jl
pop
ds
loop
cli
insb
mov
outsb
and
daa
inc
stos
pusha
out
jp
jo
out
cmp
lret
cmpb
nop
stos
test
xchg
xrelease
add
cli
out
dec
adc
push
xchg
repz
pop
fists
mov
cmp
ja
or
stos
xchg
sbb
or
sbb
int
add
push
popf
cwtl
ss
inc
mov
jg
sar
dec
sahf
mov
cmp
xor
fwait
stos
lea
mov
dec
xchg
sti
lret
std
push
pop
inc
add
xor
adc
or
ficoms
or
xchg
imul
rol
pop
insb
ret
push
ds
sti
mov
stc
rorl
fadds
dec
xor
mov
hlt
iret
mov
add
icebp
into
loope
loop
movsb
inc
scas
jo
lcall
rcll
jl
mov
ds
adc
mov
xor
lods
dec
pusha
sbb
cmpsl
cltd
add
leave
inc
shll
rcll
pop
cwtl
imul
mov
ljmp
push
dec
ljmp
mov
test
push
repz
jbe
fxtract
sbb
mov
sbb
sbb
push
sub
jo
inc
fldt
mov
rep
mov
sbb
loopne
loop
pop
push
xor
arpl
jo
cli
imul
mov
sti
idiv
mov
jno
adc
add
xchg
xchg
xchg
and
pop
xor
cmp
lds
inc
mov
jns
in
xor
int
outsb
jbe
adc
loop
in
mov
xlat
inc
and
and
mov
roll
aad
xchg
imul
and
jbe
aaa
inc
loope
mov
jmp
jl
or
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
cmp
or
sbb
sub
cmp
int3
popf
fsubl
les
dec
xor
push
dec
sbb
sub
cld
int3
bound
in
mov
jecxz
roll
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pushf
inc
sbb
sub
cmp
mulb
jl
push
add
adc
lods
sarl
cld
mov
sbb
sub
add
and
rcrl
scas
fcoml
or
sbb
sub
cmp
dec
xor
sub
rcrl
shlb
aad
add
insb
adc
push
jl
xchg
mov
lahf
mov
pop
dec
popf
mov
inc
xchg
xchg
pop
adc
push
lcall
arpl
xor
cld
mov
sbb
orl
or
ror
cli
loopne
jb
insl
outsl
jne
jbe
inc
sbb
or
shlb
adc
jl
pushf
inc
pop
xor
xchg
sbb
pop
test
xchg
jecxz
jg
sub
insb
loopne
int
loop
xchg
add
imul
sbb
cmpsb
adc
mov
xchg
push
mov
sbb
jmp
std
fistl
sbb
sub
cmp
dec
add
and
rcrl
mov
cld
cmpl
ds
or
cmp
sbb
subb
ret
inc
fcoms
adc
pop
pop
pop
adc
push
cmp
dec
add
fisubs
fld
xchg
scas
xchg
mov
xor
mov
or
pop
adc
xor
mov
xchg
in
mov
sbb
sub
cmp
dec
add
and
rcrl
sbb
mov
inc
sbb
mov
push
sbb
mov
stos
das
jo
gs
mov
repnz
pop
stc
cmp
push
cltd
lcall
mov
jge
adc
fisttps
mov
imul
cwtl
xor
addr16
add
stos
insb
sub
int3
push
popf
ja,pt
xchg
jg
mov
push
gs
sbb
mov
fsubr
in
aas
es
and
sub
sahf
mov
movsb
aas
and
aaa
fbld
cmp
bound
fwait
push
adc
push
in
fisubl
add
mov
fsubl
sbb
xchg
push
xor
sub
mov
pop
mov
pop
ret
jae
pop
mov
pop
mov
enter
mov
pushf
or
inc
ljmp
dec
push
insw
pushf
outsb
push
adc
xor
fwait
mov
mov
mov
mov
mov
loop
or
nop
test
pop
cmp
mov
mull
xchg
sar
movsb
adc
mov
add
jp
ljmp
push
push
cmp
not
movsb
inc
rorl
jae
or
outsb
out
insl
sub
jecxz
into
xchg
std
xchg
add
jge
pop
daa
lcall
push
mov
mov
jecxz
xlat
cmp
pop
xor
mov
or
lds
pop
cmp
cli
rcll
pop
loopne
pop
and
adc
movsl
pop
jns
ss
es
sahf
mov
rorb
insb
dec
cwtl
and
fsts
movsb
mov
inc
icebp
jae
ret
jns
adcl
lahf
fdivrl
sub
inc
xchg
rclb
in
fwait
or
in
pushf
xor
sahf
into
cmp
jnp
mov
into
and
mov
stc
test
mov
sbb
imul
cmp
loopne
add
aad
pop
ret
sahf
scas
adc
and
dec
adc
loopne
mov
push
repnz
sub
clc
mov
movsl
cmp
add
jg
cmp
xor
dec
inc
mov
xchg
mov
mov
lods
or
mov
test
inc
jge
add
mov
cmp
or
and
repnz
paddusb
fistl
and
sub
sbb
dec
jp
push
cmp
out
dec
push
iret
push
insl
hlt
sub
lea
rclb
xor
xor
add
push
sub
inc
sub
pop
xchg
sub
jecxz
cmpl
dec
xchg
dec
aaa
repnz
cmp
or
mov
fnstcw
mov
dec
test
mov
sbb
cs
add
mov
pop
rolb
add
mov
scas
outsl
das
xor
pop
hlt
incb
jg
push
push
out
add
jo
fistl
pop
scas
ljmp
dec
leave
es
fisubs
popf
popa
pop
sbb
xor
push
jge
inc
mov
cmp
cmpsb
sub
fidivrs
out
stc
mov
popf
add
pop
pop
iret
test
js
push
mov
cmp
into
mov
mov
cld
addl
sti
jle
and
and
mov
inc
mov
iret
push
pop
xor
addb
mov
add
ds
mov
mov
or
hlt
add
test
inc
pop
aam
jbe
fsubrs
jno
adc
imul
inc
mov
mov
into
and
dec
mov
leave
mov
pop
pop
cwtl
push
cli
test
pop
sahf
popf
int
aaa
es
pusha
popa
pop
gs
out
mov
test
test
mov
fidivl
xchg
mov
loope
imul
or
push
add
jo
jp
inc
sbb
test
and
lret
hlt
jecxz
movsb
mov
rorl
add
dec
out
mov
mov
mov
xor
aad
ja
pop
fwait
push
jg
aaa
cmp
test
insl
push
dec
test
mov
cmc
fdivs
push
repz
ret
xchg
sbb
les
bnd
cltd
movsl
test
jl
fsub
enter
xchg
pop
dec
ljmp
sti
cmp
and
mov
out
shr
aaa
mov
mov
mov
add
ljmp
dec
loopne
adc
call
mov
gs
or
cmpsb
popf
dec
mov
mov
push
xchg
and
jge
subb
xlat
insb
push
cmp
in
inc
leave
jecxz
inc
dec
or
cmp
push
ret
aaa
jge
push
sbb
lea
jns
xchg
xlat
cmpsb
mov
add
jno
cmpsl
lcall
inc
mov
dec
dec
inc
pop
ja
inc
xor
sahf
or
xor
pushf
mov
movsl
mov
sar
mov
add
mov
add
hlt
and
push
jbe
jno
stos
out
rorb
ss
xchg
mov
adc
icebp
aad
gs
add
daa
jno
pop
out
ret
int3
aas
in
pop
aad
addl
or
or
pop
pusha
in
imul
push
popa
and
sub
scas
lods
jp
or
lock
iret
addr16
cs
mov
push
lahf
xor
pop
scas
movsl
inc
push
push
jl
sbb
outsl
adc
sbb
stos
mov
dec
inc
xchg
xor
xchg
jl
or
scas
push
jge
jp
xchg
lret
jge
add
in
sbb
cmpsl
dec
testb
mov
sti
push
jno
push
mov
fs
sbb
jae
sti
inc
mov
pop
and
fisubl
ret
sbb
test
jne
int3
mov
pop
adc
push
inc
in
and
addr16
pop
popa
mov
and
jb
adc
bound
fldl
cmc
push
pop
sbb
fwait
inc
xchg
repz
cwtl
cmp
and
add
xor
mov
sub
and
mov
lock
addr16
adc
dec
or
adc
sub
pop
or
fists
and
mov
loope
and
daa
mov
add
add
out
mov
outsl
insl
jmp
mov
fdivp
dec
mov
sarl
cwtl
xchg
inc
mov
pop
inc
loop
data16
cmp
rclb
cwtl
movsb
pop
jns
outsb
dec
sbb
and
mov
fdivs
pop
in
xchg
jle
insl
out
out
pop
in
ds
dec
xor
repz
adc
sub
sub
dec
std
sbb
cld
push
mov
mov
mov
or
lods
adc
aam
imul
repz
push
cmpsb
lahf
adc
mov
pop
xchg
jmp
bound
xchg
sti
and
pop
mov
jmp
clc
pusha
add
ljmp
std
pop
dec
xchg
xor
lahf
test
fwait
call
xor
or
push
dec
fisubrl
lock
pop
sbb
push
and
sbb
test
in
dec
pop
xchg
or
stos
shll
into
test
or
sahf
jo
push
fsubrl
push
mov
std
enter
dec
mov
ret
sbb
loopne
ja
out
in
lock
ret
popa
adc
and
loopne
in
aas
fcmovnb
int3
loop
dec
xchg
daa
mov
inc
js
sbb
mov
cmpl
test
mov
jg
jmp
sbb
sarl
mov
jnp
xchg
rolb
sbb
push
lds
xchg
fnstsw
out
lods
jns
imul
mov
inc
popa
inc
mov
adc
jnp
sub
sbb
scas
aas
sub
sub
ljmp
push
adc
xchg
pop
inc
inc
sub
es
subb
add
cmp
sub
add
and
inc
ljmp
bound
gs
sub
loopne
not
scas
push
dec
movl
lods
ret
movsb
push
in
pop
adc
or
test
jns
add
mov
sahf
cld
cwtl
jge
add
pop
outsl
push
ror
jmp
out
pop
mov
mov
mov
mov
cltd
inc
nop
cmp
hlt
pop
inc
cs
push
xchg
fsubrl
mov
or
xchg
mov
mov
pop
fcoml
inc
mov
and
add
pop
xchg
out
xchg
and
mov
jmp
clc
aam
push
out
rorb
fldl
rorb
pusha
inc
test
sbb
mov
fldcw
imul
sub
sub
xor
mov
sbb
mov
aad
icebp
push
inc
xchg
lcall
sub
inc
incb
dec
ret
dec
add
shrb
into
test
loop
sub
movsl
or
mov
fbstp
mov
sub
push
mov
fsts
adcb
lea
pushf
adc
divb
test
jb
pop
pop
repnz
add
and
sub
std
mov
cltd
cltd
push
mov
push
int3
testl
cs
loopne
fistl
shll
ret
repz
in
mov
adc
jnp
mov
mov
xchg
sub
es
decb
rorl
xor
push
sahf
iret
out
push
add
mov
outsb
xor
pop
pop
out
cli
mov
lahf
xor
or
ss
inc
scas
lds
cmpsl
inc
fs
jmp
mov
pop
rolb
cmp
lret
out
outsb
mov
rcr
outsb
pop
jge
sbb
push
mov
lods
pop
sub
nop
loopne
jns
in
imul
cmc
pop
dec
jo
pop
pop
push
out
shlb
mov
xchg
mov
mov
cmp
pop
test
cs
bound
scas
inc
in
pop
jge
in
ror
scas
lock
cmp
out
cmp
push
mov
cltd
mov
incl
aaa
pop
mov
mov
movsl
or
mov
sub
push
dec
mov
xchg
pop
jge
pop
push
pop
mov
pop
sbb
cmp
js
aam
call
test
push
into
cmpsb
add
pusha
push
lods
pop
cmpsl
jge
pop
sahf
dec
lock
aas
mov
pop
inc
call
jl
push
in
or
ss
daa
sbb
mov
or
jecxz
xor
push
dec
xlat
cmp
inc
pop
test
into
add
call
call
xor
clc
or
in
and
adc
push
stos
lret
mov
xor
xor
popa
pop
pusha
test
cmpsb
adcl
adc
pop
pop
xchg
push
cmc
outsb
mov
and
push
out
iret
xchg
sub
or
fwait
xor
lret
xchg
clc
cmp
inc
sub
pop
fcmovnb
adc
pop
scas
mul
xlat
cmc
xchg
sub
sar
push
sbb
es
add
sub
pop
lods
repz
cmp
repz
sub
xlat
sti
out
jne
out
mov
push
test
lds
adc
adc
lret
test
xchg
aas
pop
out
and
enter
add
push
and
jo
movsl
push
ret
xchg
les
andl
or
mov
out
int
inc
out
or
scas
adc
xor
hlt
in
lods
jmp
sbb
xor
es
fldt
mov
adcl
std
cs
jo
cmpsb
stos
jge
xchg
cmp
cwtl
fisubrl
lods
adc
sub
and
pop
pop
cmp
jp
fimull
fbld
xchg
sbb
fcomps
out
arpl
std
cmp
ds
pop
inc
inc
jge
jne
jle
push
cli
dec
in
push
cs
inc
adc
call
in
mov
jns
ds
je
dec
push
fisubrs
out
xchg
adc
insl
push
ds
loopne
sub
mov
mov
push
sbb
and
cmc
pop
lods
mov
xchg
cmp
ffreep
pushf
popa
cmpsb
jmp
mov
out
pop
lea
mov
mov
sub
xor
push
stos
cmp
adc
insl
nop
test
out
add
popa
and
test
ss
lea
add
js
pop
inc
push
adc
inc
test
out
cmpsl
push
add
inc
push
xchg
cld
orl
ret
xchg
rclb
insb
add
adc
mov
fnstcw
mov
and
inc
mov
push
push
push
dec
test
ffree
gs
xlat
xor
sarl
xchg
cmc
subl
data16
popa
and
add
add
cwtl
or
clc
daa
test
xor
mov
or
ja
sahf
daa
or
or
jns
testl
inc
inc
cmp
sti
lods
in
adc
ret
outsb
int
test
xchg
std
fstps
test
cli
or
out
out
movsb
testb
xchg
cs
dec
mov
mov
dec
mov
fisubrl
gs
imul
jle
inc
pushf
aad
out
cmp
repz
cmpsb
into
mov
jns
loope
out
es
dec
adc
sub
out
xchg
jge
add
jle
es
xor
nop
jp
int3
inc
dec
xchg
out
pop
nop
insb
in
daa
jnp
add
mov
push
and
loop
icebp
sub
aad
sti
stos
xlat
push
stc
in
mov
add
or
repz
mov
inc
js
xchg
pop
sbb
sahf
pusha
jb
mov
add
rclb
pop
jae
fs
push
sbbb
xorb
or
xchg
mov
insb
repz
cmpb
add
push
dec
sti
or
cmp
jb
inc
icebp
add
dec
les
rorl
cmp
mov
push
std
jl
jb
pop
add
inc
imul
outsb
int3
dec
fidivrs
or
stc
sahf
pop
stos
mov
or
or
inc
rclb
or
lcall
sub
or
dec
or
out
orb
mov
movsl
jp
test
push
fsubl
cwtl
testl
dec
out
xadd
inc
and
jo
ja
aas
cmp
insb
dec
les
out
test
ret
orb
mov
cmp
stos
pop
jo
jmp
cmp
push
int3
mov
fldcw
filds
jle
ja
in
addr16
xor
shr
cmpb
out
ret
in
test
xchg
cmp
repnz
xchg
pop
cmpsb
push
fstpt
cmp
xor
std
les
cmp
inc
js
mov
lock
loopne
ds
mov
dec
std
sbb
adcb
aaa
fistpl
push
cmc
sbb
outsl
gs
xor
sbb
push
or
and
insl
dec
and
inc
out
pop
mov
mov
int
cmp
mov
xchg
aas
add
pop
push
mov
cmp
fcoml
ja
xlat
push
cs
ficompl
lcall
mov
out
je
aam
scas
shl
int
std
mov
inc
and
xor
test
mov
ss
into
dec
mov
out
mov
enter
cld
in
and
sbb
jle
xchg
pop
xchg
lret
add
bnd
mov
or
lods
sub
imul
cmp
nop
or
loop
scas
sarl
xchg
cmp
xlat
sub
es
mov
pop
jle
push
adc
pop
js
fistpl
lahf
xchg
push
fsubr
and
fidivl
xchg
adc
inc
sbb
imul
mov
and
inc
mov
loope
out
lret
jbe
into
inc
fcoml
xchg
arpl
iret
xor
add
out
cmpsl
push
mov
mov
push
lret
mov
repz
mov
aad
pop
xchg
cld
popa
jle
and
incb
aaa
add
fcomip
jecxz
sbb
rcr
mov
fimull
sbb
xor
pop
jmp
mov
mov
push
pop
and
lcall
in
cmc
mov
inc
xchg
js
mov
mov
sub
sbb
fwait
inc
xor
cltd
add
mov
pop
jno
mov
dec
sbb
fmuls
mov
add
fwait
bound
fisubrs
lea
inc
jmp
add
loop
sbb
cmp
daa
shll
xor
fcompl
add
xchg
inc
js
popa
leave
pop
mov
mov
out
and
pop
xor
sbb
es
xlat
lock
mov
add
popf
and
adc
jg
inc
pop
loop
jno
sub
popa
sub
xchg
fwait
lret
mov
movsb
shll
pop
roll
jns
pinsrw
pop
mov
add
int
xchg
cmp
dec
inc
sahf
outsb
lahf
arpl
js
inc
clc
movsb
sbb
fdivr
sbb
dec
inc
movsl
xchg
scas
movl
aad
repz
jae
mov
and
jno
inc
pusha
inc
xchg
stc
xchg
add
into
jmp
or
jne
outsl
test
fisttpl
push
mov
push
lods
push
jne
mov
push
push
or
mov
jbe
push
pop
pop
lret
enter
gs
pop
repnz
insb
inc
int3
test
mov
sbb
shll
and
outsl
jne
xchg
jp
xor
add
push
cmc
fs
jle
loope
or
add
dec
adc
int
mov
and
outsb
cli
adc
call
inc
adc
data16
into
mov
pop
lret
or
xchg
test
jnp
adc
sbb
cmp
in
out
inc
jge
dec
jge
bound
fisubl
ja
xlat
jl
or
and
pop
fstpl
imul
dec
bound
bound
sbb
cmpsb
mov
mov
outsl
rorl
cmp
adc
pop
jle
mul
andps
pop
punpcklwd
lret
nop
or
jns
inc
jp
push
mov
jae
and
ja
jecxz
orb
dec
xchg
pop
bnd
cmp
scas
and
jno
xor
mov
pop
inc
mov
jns
xchg
sub
sub
sbb
and
jo
pop
xchg
xchg
dec
movsb
xchg
subl
pop
ljmp
cld
xchg
mov
jne
and
stc
mov
adc
jnp
sahf
in
push
mov
out
movl
sub
sarb
push
scas
xor
jecxz
jno
mov
das
jne
mov
xor
in
imul
imul
aad
repz
subb
scas
xor
dec
or
cmpsb
mov
mov
sub
pop
adc
inc
xchg
cmp
aad
imul
add
jo
add
dec
push
out
mov
es
jo
push
xchg
cltd
dec
lret
sub
add
pushf
mov
fdivr
mov
push
jg
xchg
aaa
mov
subb
notb
mov
cmpsl
mov
sbb
dec
push
not
xchg
jmp
sbb
or
enter
and
test
pushf
stc
cwtl
je
subb
mov
jnp
mov
mov
or
cld
es
test
mov
add
jb
add
call
inc
lcall
mov
sahf
adc
mov
jecxz
cli
xchg
sti
jmp
sahf
in
out
push
inc
and
or
insl
jnp
mov
adc
dec
pop
adc
add
frstor
jo
faddl
rcll
pop
mov
mov
or
inc
jle
mov
insb
or
adc
pusha
mov
xor
dec
mov
pop
mov
add
jbe
aaa
jne
loop
sbb
cmp
lods
pop
sbb
jo
lock
xor
imulb
add
jmp
cmp
in
lea
sbb
shll
fxtract
xchg
or
inc
lahf
inc
pop
ds
push
mov
test
out
sbb
test
lret
adc
or
aaa
add
loope
scas
xor
into
test
repnz
sar
ret
dec
shl
push
mov
cmp
cmp
movsl
xchg
jle
cmp
mov
sbb
popf
mov
dec
mov
fstl
hlt
insb
js
add
or
and
jno
aad
cmp
add
and
popa
mov
stc
lds
imul
imulb
rol
lock
in
cmp
rcrb
add
dec
loopne
mov
repnz
sub
fidivrs
sub
fsubrl
mov
cmc
cltd
adc
inc
lret
fistpl
push
shlb
mov
and
outsb
pop
xor
mov
cmc
popf
cmp
adc
es
dec
mov
divb
push
or
sbb
mov
pop
pop
push
pop
adc
jo
add
inc
imul
dec
xchg
arpl
jecxz
jge
pop
iret
in
xor
dec
std
loop
out
xchg
adc
xor
add
ss
inc
popf
rorb
cmp
jnp
mov
repz
addr16
cmp
push
fs
dec
add
and
rcrl
sbb
mov
inc
sbb
sub
cmp
dec
add
and
rcrl
sbb
mov
inc
sbb
sub
cmp
dec
add
and
pushf
aad
loope
clc
int3
test
xchg
in
test
push
or
test
dec
add
mov
pushf
jnp
loope
xchg
flds
leave
cmp
out
div
xor
mov
pop
data16
je
push
adc
ss
out
div
xchg
mov
push
inc
push
push
inc
js
push
gs
es
iret
out
out
lahf
lahf
mov
pop
movsl
jne
cmp
push
jbe
inc
jns
jp
popa
ss
mov
jge
imul
fucomp
bound
and
in
pop
sub
fiaddl
insl
inc
fwait
sub
lods
or
and
ret
jg
lcall
inc
es
jnp
cmp
push
adc
rclb
xchg
sub
ret
test
repz
push
ljmp
xchg
das
out
jns
xchg
push
pop
mov
int
push
test
stc
push
push
jmp
xchg
pop
aaa
imul
push
jns
mov
testb
lret
nop
push
and
outsb
push
fldenv
es
cs
ss
mov
mov
inc
sbb
inc
push
inc
arpl
fnstenv
es
out
imul
xchg
xchg
scas
pop
pop
dec
dec
jle
outsl
outsl
push
push
push
add
ss
stos
mov
xor
shl
clc
jmp
mov
inc
das
cmp
adc
imul
es
pop
test
xchg
xchg
ljmp
fiaddl
adc
xor
push
dec
push
push
mov
xchg
xchg
cmpsb
cmpsb
mov
inc
inc
push
push
data16
push
push
push
push
es
out
div
xchg
mov
inc
inc
push
push
data16
push
push
push
push
es
push
pop
movl
pop
rclb
in
imul
inc
aas
outsb
or
call
rcl
data16
inc
cltd
xchg
fs
dec
ret
aas
ret
jb
dec
data16
imul
mov
or
lret
nop
sub
mov
push
adc
cmp
fwait
repnz
idivb
scas
sub
pushf
pushf
nop
xchg
lret
pop
inc
addb
imul
xor
cmpsl
call
or
leave
rcll
jle
into
xlat
jle
xor
sbb
fdiv
popa
mov
mov
xchg
arpl
decl
jbe
stos
popa
scas
fnstenv
aaa
sbb
and
jge
or
inc
mov
xor
ds
or
mov
xchg
cmp
add
cld
sub
push
xchg
push
sbb
xchg
out
xlat
ret
or
add
cmp
xchg
out
imul
jmp
mov
cmp
and
dec
scas
mov
pop
sub
adc
sub
dec
xchg
scas
jnp
push
push
mulb
call
xchg
fwait
sub
add
aas
sbbb
adc
jp
jle
cmp
clc
dec
mov
jno
mov
inc
aad
scas
fsubs
roll
sbb
sbb
push
fsubrl
fstpl
dec
iret
arpl
mov
mov
push
lret
not
adc
pushf
outsl
in
shrb
loopne
inc
je
mov
xchg
test
adc
bound
adc
mov
xchg
add
pusha
or
fdivr
or
fwait
out
push
add
adcb
test
in
insb
jle
cmp
imulb
outsl
outsb
mov
ja
push
mov
cmp
das
hlt
lret
orl
mov
mov
pop
xor
arpl
xlat
inc
aaa
out
cmp
pop
push
lea
sbb
cmp
adc
mov
xchg
ret
andb
mov
jae
xor
out
cli
lds
cmp
int3
idivb
jb
jno
les
inc
scas
stc
daa
mov
or
dec
xchg
ds
jno
sbb
fwait
out
cwtl
cli
inc
cmp
push
push
mov
jne
aaa
in
cmpsb
inc
lods
push
int
mov
push
inc
mov
icebp
mov
adc
test
imul
inc
out
jns
or
pop
pop
lods
mov
add
lock
andl
sub
xchg
popf
xor
lea
dec
cltd
dec
xor
cs
sti
dec
jae
push
insb
stos
outsl
ljmp
xchg
repz
test
test
mov
mov
fincstp
mov
xchg
clc
iret
fstpt
outsl
add
sub
outsb
and
mov
dec
pop
leave
push
aad
sbb
dec
pop
mov
mov
fucom
outsl
mov
cmp
cmpsl
std
stos
mov
jno
pop
cmpsb
inc
loop
pop
mov
clc
mov
repz
lods
cmp
inc
pop
mov
pop
mov
out
pop
adc
movsl
aam
or
in
mov
flds
icebp
push
lods
lods
xchg
xchg
scas
into
push
dec
push
push
dec
icebp
je
lea
and
imul
push
mov
and
sub
push
dec
roll
fsubr
xlat
sbb
push
idivl
clc
xor
push
pop
sbb
pop
js
pop
in
lea
insl
les
xor
inc
jg
dec
mov
pop
mov
cmp
int
into
movsb
ret
pop
mov
lock
icebp
add
movsl
xor
mov
jecxz
mov
cmp
je
jp
pusha
xchg
stos
mov
xchg
cmpsl
push
repnz
in
imul
jns
add
jns,pt
mov
add
cs
mov
jmp
xor
aad
dec
lods
mov
cli
mov
jne
dec
xor
ss
pop
jmp
sub
jno
pop
int3
and
sbb
rol
pop
mov
sbb
xor
push
push
outsb
sbb
stos
cmp
jl
sub
inc
xchg
add
iret
movsb
cmp
ljmp
lds
xor
pop
xor
cli
mov
xchg
out
sti
mov
movsl
mov
out
add
into
xor
xor
mov
iret
dec
inc
adc
outsl
test
push
jo
inc
sbb
sub
pop
dec
push
and
sub
mov
inc
add
aad
add
mov
xchg
and
repz
mov
dec
mul
int3
xchg
leave
cld
mov
cmpsb
aad
inc
cmp
and
test
push
add
xchg
mov
daa
cld
sub
mov
imull
test
sub
bound
aam
rcll
mov
mov
sbb
adcl
pusha
repnz
add
inc
je
dec
cmp
mov
fidivrl
xor
aad
notl
rcll
xor
out
mov
jge
xor
add
add
cli
dec
rclb
addr16
test
popa
xchg
bound
stc
out
mov
imull
xchg
ja
dec
cmp
jae
mov
pop
imul
xor
jns
cmp
repnz
sbb
xor
add
inc
sub
jge
xchg
aad
sahf
outsl
dec
cmp
sub
jle
inc
adc
popf
cld
sti
lock
loop
fcmovb
and
ljmp
cmp
test
data16
aas
mov
mov
fisubrl
enterw
aas
sbb
mov
mov
mov
jae
xlat
adc
mov
stc
adc
test
inc
dec
data16
inc
mov
stos
popa
xor
xor
push
cmp
inc
testl
insb
mov
or
dec
outsb
addl
jb
subb
xchg
das
pop
pop
jno
repz
dec
xlat
add
dec
inc
sahf
mov
faddl
inc
jg
lds
push
xchg
inc
bound
rcll
test
fwait
sbb
add
or
cmc
lcall
lret
lods
test
jmp
leave
inc
in
dec
ret
int
dec
lods
adc
dec
push
dec
xchg
cmpsl
inc
int
cmp
dec
add
cmpsb
xor
outsb
add
lods
sub
dec
xlat
inc
popa
lahf
stc
xor
xchg
and
xor
and
scas
jno
fcom
sub
rcrl
pop
in
push
adc
iret
push
or
leave
mov
mov
clc
lahf
dec
sub
dec
push
push
idiv
es
add
sbb
rcll
mov
inc
aaa
loopne
inc
xor
xor
push
out
or
popl
lods
mov
mov
inc
filds
scas
xor
cwtl
bound
out
daa
mov
movsb
hlt
pop
cmpsb
push
mov
mov
dec
and
pop
int
push
loope
push
mov
ds
push
adc
adc
outsb
and
inc
lahf
lock
xchg
inc
aaa
out
or
or
cwtl
lods
daa
xorl
jl
sarl
add
xchg
out
jnp
adc
pop
outsl
test
xchg
daa
mov
out
and
jl
repnz
xchg
jmp
js
add
lret
fxch
or
inc
orb
gs
jg
or
sahf
xchg
stos
lea
ret
mov
aas
hlt
cld
mov
rcll
xchg
jge
inc
hlt
pop
test
adc
lret
or
inc
push
pop
pop
pop
aam
push
repz
or
adc
or
cmp
xor
mov
push
pop
ljmp
xor
dec
add
mov
or
cmpsl
clc
jp,pt
call
jg
popa
out
or
xchg
add
fistps
sbb
push
cmpsl
loop
and
sbb
shl
push
enter
xor
movsb
incl
and
dec
push
dec
lds
adc
sbbl
mov
add
mov
aad
addr16
sub
jne,pn
lods
outsl
jns
iret
mov
in
repnz
fsubs
outsl
xchg
xor
lret
xor
loop
cmp
andl
inc
mov
mov
add
daa
clc
cli
inc
jb
lock
cs
or
stc
and
jno
aad
or
aas
push
and
xchg
jle
dec
push
incb
inc
fwait
popf
push
sub
add
loope
insl
mov
cmp
sbb
xchg
daa
push
pop
adc
sbb
repz
insb
sub
mov
pop
cltd
cmpsl
addl
int
jecxz
jecxz
pop
imul
ljmp
ja
lds
sub
xor
and
push
pusha
movl
dec
mov
mov
add
fdivrl
cld
xor
sub
shlb
pop
mov
pop
mov
jp
xor
rcrl
xchg
lock
jmp
mov
aam
cld
xor
aam
idivb
sub
push
in
push
cltd
pop
mov
fdivp
sbb
hlt
xchg
sub
add
and
shl
inc
shll
mov
dec
out
sub
cmp
inc
adc
insb
popa
inc
cltd
inc
push
cmpsb
fistps
pop
push
mov
test
mov
test
inc
stos
cld
lods
or
rcrb
mov
iret
test
sub
mov
mov
xor
sbb
pop
popa
or
das
cmp
jle
sub
and
xor
fadd
push
sub
loope
je
mov
cmc
inc
in
xor
mov
cmp
jns
shrb
lods
and
xchg
cmpsb
sahf
pop
add
addl
inc
mov
pop
add
dec
xchg
test
mov
repnz
fidivs
mov
data16
mov
inc
xor
push
das
repnz
js
jne
fsub
jbe
add
rorb
pmulhw
mov
aaa
push
mov
cmp
mov
movb
pop
xor
mov
mov
insb
dec
roll
push
or
bound
add
loope
inc
stos
les
popa
cs
test
cmpsb
cmc
and
ja
fstpt
inc
pop
mov
in
scas
sub
lcall
dec
mov
pop
inc
sbb
sub
cmpsb
stc
jnp
pop
outsb
int
fistl
fisubrl
cmp
call
divl
jnp
jp
imul
push
jo
dec
dec
add
mov
std
lods
add
shll
ficomps
int3
mov
ljmp
bound
mov
push
ja
push
push
xor
xchg
rolb
dec
jbe
sub
pop
mov
dec
mov
cwtl
fimuls
int3
loop
fnstenv
mov
add
xor
loop
dec
outsl
cltd
xor
xchg
cld
or
leave
sahf
fwait
pop
lds
adc
test
popf
sarb
outsb
popf
fcomp
stos
enter
dec
mov
push
leave
xchg
femms
sub
gs
test
mov
xchg
arpl
or
sbb
pop
scas
lret
inc
out
dec
lds
or
in
inc
sub
pop
xchg
mov
ja
mov
jecxz,pn
mov
mov
shlb
mov
pop
mov
xchg
xchg
es
inc
or
out
pop
dec
mov
sti
inc
pop
fcomip
fsubl
sub
cmp
lods
aaa
xor
and
pop
out
push
cwtl
xor
adcl
cmc
xchg
dec
xchg
shll
rclb
jbe
mov
cmp
adc
cwtl
or
in
sbb
call
mov
inc
pop
jp
inc
sbb
in
push
repz
int3
lahf
test
inc
xchg
out
popf
cmc
pop
cmp
xchg
arpl
sub
aad
sbb
dec
in
pop
sbb
or
mov
add
mov
cmp
mov
xor
sarl
sbb
push
repz
in
add
aam
push
push
fidivs
jge
add
mov
gs
inc
arpl
lock
fdiv
or
jo
xchg
std
cmc
or
mov
dec
fwait
mov
in
adc
sbb
sub
cmp
mov
or
jmp
mov
mov
xor
pop
and
dec
push
test
out
loopne
sub
push
sub
mov
cld
pop
fldenv
in
shlb
mov
dec
or
jb
addl
ja
clc
pop
clc
popa
hlt
test
imul
jne
ljmp
mov
sbb
xlat
mov
into
mov
pushf
mov
cmp
mov
rcrb
aad
outsb
outsl
out
divb
gs
mov
mov
iret
adc
dec
pop
hlt
lock
xlat
int3
or
mov
into
sti
divb
cltd
xor
out
jmp
clc
and
mov
xor
mov
pop
inc
inc
pop
outsb
movsl
rolb
ret
fmull
or
mov
jge
sti
pop
mov
icebp
dec
daa
insl
int3
fnstcw
popa
inc
inc
test
xchg
sbb
into
lret
push
pop
pop
inc
xchg
ret
jmp
cmp
scas
jmp
fsts
sti
out
sub
push
mov
pop
repnz
mov
enter
sbb
push
fidivrl
push
mov
mov
aaa
js
dec
js
nop
flds
ss
int3
popa
jmp
jecxz
insb
cmpsb
sahf
mov
sbb
imul
outsb
call
mov
jle
xor
jbe
jmp
test
sub
cwtl
stos
dec
adc
pop
push
sub
lret
cmovns
pushf
and
outsl
xchg
test
push
jno
hlt
and
xor
sahf
sub
mov
stc
stos
cmp
or
aam
sub
xchg
lods
xchg
sub
andl
push
daa
mov
in
mov
imul
xchg
pop
xchg
fwait
leave
cmc
sub
ds
aaa
aas
inc
or
cmpsb
notl
inc
xchg
adc
ss
aad
push
sbb
pushf
aas
mov
jecxz
mov
mov
sub
mov
cs
shrl
adc
mov
in
sub
loopne
xor
mov
mov
xchg
icebp
lahf
inc
icebp
xor
fildll
xorb
nop
call
popa
sbb
rcr
push
sti
sbb
push
movsl
outsl
loopne
data16
test
sbb
pop
dec
cmp
sbb
pop
jmp
cmp
in
out
add
dec
sbb
lahf
cmp
mov
dec
enter
lret
cmp
ljmp
xchg
pop
fstpt
ret
and
lods
sarb
fldcw
jns
jmp
cmp
idivb
mov
and
aad
cs
inc
repz
pop
mov
das
test
lods
sbb
xchg
inc
mov
sub
mov
jne
in
push
popa
pushf
jle
scas
pop
cmpsl
push
filds
sub
cli
ret
pusha
rclb
stos
scas
cmp
inc
fildll
sbb
mov
mov
in
in
test
cmp
fisubrl
dec
xchg
in
insb
and
push
aaa
out
sbb
dec
pop
unpcklps
sti
loop
jg
lock
das
cltd
popf
fistps
jne
les
int3
add
std
mov
mov
fnstcw
mov
stc
nop
insb
pop
fs
in
mov
mov
lods
aaa
sub
test
sbb
adc
lods
cmp
inc
dec
xchg
std
jbe
out
or
popf
clc
mov
aam
push
sub
mov
fs
jae
out
out
aad
sti
dec
sbb
ja
fxch
cmpsl
or
and
pop
inc
and
xchg
in
cmp
mov
popa
jle
dec
adc
pop
adc
testb
push
inc
mov
lea
mov
or
loopne
push
cli
sub
ret
test
pop
es
dec
pop
dec
mov
in
fmuls
lods
iret
decb
xlat
int3
cli
xchg
add
mov
pusha
jo
inc
ficomps
jne
div
mov
aaa
pop
push
es
test
push
test
roll
inc
inc
push
mov
xchg
jne
inc
sub
lret
scas
and
leave
or
es
push
inc
es
in
cwtl
pop
stc
push
cmp
pop
xor
lock
cmp
sbb
ret
movsl
jp
ss
cmc
daa
jecxz
imul
stos
push
lds
add
aam
push
roll
int
inc
jne
push
sbb
test
adc
mov
mov
jbe
pop
or
adc
or
mov
cmp
imul
cmp
push
data16
bnd
scas
fs
iret
mov
jno
sub
out
sbb
fsubrs
mov
push
mov
sti
jo
lahf
mov
addr16
les
add
cmp
xor
nop
dec
jbe
mov
sub
sub
loop
fcoml
test
or
pop
cmp
stos
cmp
adc
cld
aaa
cmpsl
push
mov
mov
add
adc
mov
xor
clc
inc
mov
leave
aas
mov
pusha
repz
xor
inc
inc
lret
push
sub
cmpsl
ret
gs
adc
mov
push
ret
push
adc
dec
and
test
loope
pop
mov
add
push
sub
xchg
xchg
add
inc
xor
xor
mov
test
loope
gs
cmc
inc
mov
dec
pop
xchg
inc
sub
mov
adc
je
xor
enter
rorl
insb
jecxz
out
cmpsl
lret
lcall
inc
mov
mov
xor
mov
mov
adc
cmp
xor
xlat
mov
in
dec
mov
sbb
lcall
xchg
xor
sub
or
lcall
add
and
andb
scas
mov
inc
inc
leave
or
fidivrl
pop
pop
mov
stc
lcall
hlt
movsl
adc
pop
sub
pop
leave
test
test
pop
mov
jns
adc
adc
imul
pop
mov
shrl
fcmovb
jnp
and
ret
push
jb
or
outsl
fwait
push
push
sbb
shlb
dec
stos
lds
add
fisttps
bound
fmulp
fmuls
mov
pop
adc
stos
leave
and
clc
dec
push
xchg
push
mov
xchg
dec
jb
cli
xchg
pusha
out
and
xchg
jecxz
cld
shll
mov
jbe
mov
rcll
insb
arpl
inc
lcall
jecxz
roll
jmp
jge
ja
sbb
ficoms
adc
and
jb
or
jb
aaa
dec
scas
and
pop
fstps
sarl
and
bound
nop
jbe
push
mov
and
test
xor
push
adc
push
pop
jbe
outsl
mov
sub
inc
xor
aaa
ss
sbb
pushf
insb
sub
pushw
jmp
cmp
adc
out
mov
cld
cli
idiv
rclb
jge
jmp
jp
dec
into
sub
scas
das
fisttpl
dec
leave
add
ret
push
pop
cmp
out
jge
data16
test
fs
ficoml
sbb
adc
jnp
jb
pop
pop
lret
sbb
clc
xchg
jns
and
push
mulb
inc
adc
mov
dec
fildl
push
dec
jp
shl
dec
adc
scas
lock
mov
movsb
andl
adc
cmp
mov
fdivp
inc
shll
sbb
imul
cmp
cwtl
popf
bound
mov
xchg
movsb
pop
aad
in
mov
popf
sub
popl
adc
xchg
xchg
popf
fdivs
mov
pop
rclb
lret
inc
and
scas
stos
scas
inc
push
and
jmp
lock
or
xor
jno
jae
push
push
mov
pop
outsb
mov
and
lahf
xchg
test
jg
ds
pushf
mov
popf
ljmp
stos
xor
push
rclb
mov
cmp
popa
pop
push
ljmp
mov
mov
pusha
mov
nop
scas
repnz
sbb
rorb
stos
mov
fdivrs
lret
repnz
xor
pusha
scas
dec
loopne
lock
icebp
jp
sahf
movsb
inc
aad
repnz
clc
cmpsb
jmp
cli
pop
xchg
and
shll
xor
xchg
lock
mov
sbb
sbb
or
les
rcl
std
or
push
adc
xchg
movsb
lock
pop
hlt
notb
push
loope
or
add
ss
stos
push
mov
lcall
jae
mov
push
push
daa
adc
into
packuswb
inc
pop
inc
les
outsb
adc
out
outsb
mov
cmp
xor
repnz
fimuls
loopne
inc
test
out
dec
testl
jg
fwait
in
xchg
mov
in
cmp
pop
xchg
push
iret
cwtl
dec
xor
aas
add
xor
cs
in
or
testb
mov
inc
inc
push
push
data16
push
push
push
push
es
out
div
xchg
mov
inc
inc
push
push
data16
push
push
push
push
es
out
div
xchg
mov
inc
inc
push
push
data16
push
push
pop
push
es
xor
mov
out
div
test
ss
inc
test
add
sahf
jmp
mov
test
mov
arpl
fcompl
int3
sub
cmp
dec
pushf
pop
or
js
mov
test
mov
or
cmp
sub
fcompl
lods
sub
cmp
mov
lods
mov
test
mov
or
cmp
sub
je
int3
inc
cwtl
cmp
dec
fnstenv
jecxz
into
push
lods
xlat
pop
cld
adc
fistl
jecxz
add
imul
imul
jl
rorb
int3
hlt
sbb
aaa
lahf
fdiv
push
cmp
xor
std
popa
mov
pop
pusha
aas
in
cmc
std
fadds
pop
scas
mov
add
lods
frstor
cmpsb
rorb
dec
xor
cmp
adc
popf
and
and
ret
insb
out
sbb
clc
roll
add
mov
sbb
inc
dec
and
js
dec
stc
inc
xchg
xchg
sbb
mov
fwait
lods
add
sbb
and
addr16
sbb
xchg
or
andl
call
in
sbb
clc
lods
inc
pop
cwtl
dec
test
mov
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
js
leave
xor
dec
rcll
or
jb
jl
mov
inc
stos
dec
std
pop
decl
mov
std
dec
int
aam
enter
nop
dec
stos
sub
movsb
dec
mov
dec
pushl
out
pop
adc
or
clc
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
js
mov
test
mov
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
js
mov
xor
rcr
mov
inc
pminsw
sub
int3
outsl
sub
sahf
jne
fiaddl
test
cmp
push
sbb
loopne
add
mov
lods
lods
lcall
push
push
fs
sub
push
sbb
pop
pop
jmp
mov
sub
jns
fcmovb
outsb
test
popf
xor
imul
outsl
pushf
jle
push
movsb
push
and
push
or
neg
xor
sbb
fst
jg
mov
ficoml
xchg
cmp
pop
out
ret
mov
mov
jecxz
cs
pop
and
enter
mov
cmc
in
inc
mov
inc
cwtl
add
mov
sahf
jbe
cmp
jg
test
mov
mov
jg
mov
sbb
xchg
pop
enter
cmc
cmp
mov
add
lods
lds
push
loopne
dec
dec
ret
out
jns
mov
xchg
sbb
gs
test
lret
outsl
stc
sti
movsl
xor
dec
mov
lret
sub
jbe
mov
mov
inc
rorl
int
ds
ret
je
pop
mov
pop
mov
dec
pusha
and
sbb
jne
das
mov
xor
push
rorl
test
mov
std
lods
push
dec
movsl
repz
xchg
fcmove
mov
jecxz
jns
jbe
imul
stos
dec
dec
cli
mov
pusha
push
sub
pop
jo
push
nop
fstpt
xchg
cwtl
test
push
adc
xchg
xchg
sti
xchg
jnp
insb
das
sub
inc
in
jns
arpl
or
xchg
cmp
andb
inc
adc
push
cmp
ss
add
mov
dec
lahf
insb
enter
pushf
bound
mov
mov
das
add
sti
mov
sbb
shll
outsb
loopne
xor
push
or
pop
xor
inc
dec
push
sbb
and
addr16
xor
cmp
sub
int3
or
aam
not
sub
mov
or
cmp
test
mov
xchg
xorb
push
fwait
sbb
sahf
jmp
cltd
stos
mov
and
pop
cld
je
dec
nop
ljmp
scas
mov
dec
fadd
sti
imul
push
push
ljmp
call
mov
jnp
les
in
fsubrs
mov
sbb
push
mov
mov
aaa
and
pop
jbe
push
fistpll
xchg
cli
cmp
imul
xor
sahf
movsl
ds
inc
push
lock
jo
loop
ljmp
jnp
pusha
popa
cmp
push
mov
jmp
subl
jns
add
mov
push
xor
sub
adc
ss
scas
es
fdiv
and
and
or
cmp
mov
jecxz
inc
cwtl
push
xchg
pushf
lret
subb
dec
out
inc
insb
mov
std
inc
adc
outsl
shl
int
adc
das
js
adc
and
fcompl
sub
or
dec
shrl
xlat
xchg
mov
jb
stos
pop
jae
cld
mov
loopne
xlat
mov
hlt
xor
push
out
xor
in
xorb
and
add
ds
sbbl
sub
inc
add
cs
mov
xchg
cmpsl
jo
push
mov
sub
mov
pop
fadds
ret
lea
sub
les
or
mov
je
push
lret
pop
pop
clc
pushf
fnsave
and
push
xlat
lcall
stc
enter
adc
xor
leave
mov
or
test
push
lods
pop
imul
dec
fcoml
ror
pop
mov
mov
arpl
lret
push
sbb
in
jmp
adc
mov
pushf
mov
adc
out
sub
ret
out
das
jg
pop
and
hlt
jns
outsb
cld
cmp
outsl
cmovne
push
mov
imull
sbb
cmp
inc
add
sbb
addb
popa
lods
cmp
lahf
loop
scas
scas
jns
rcll
int
cmpb
inc
jl
outsl
ljmp
mov
lods
popa
or
adc
lahf
push
les
out
cmp
mov
insl
mov
sti
call
and
lahf
arpl
cs
in
sbb
fdivs
sub
mov
in
int
pop
xor
das
pop
jns
cmc
cwtl
cli
repnz
jmp
xor
out
scas
jecxz
xchg
xchg
or
jnp
sbb
pop
test
out
pop
cmp
jmp
addr16
sbbb
mov
sub
push
cs
inc
decb
sub
in
xlat
outsb
add
fstp
mov
xor
outsl
aam
mov
stc
mov
jnp
icebp
pop
or
sbb
mov
in
pop
inc
xchg
cmp
sub
and
int
sbb
xor
setns
les
stos
shl
xor
adc
cs
jge
fildll
xchg
or
inc
sub
jo
test
jp
push
sub
hlt
sub
loope
pop
or
clc
addr16
inc
leave
aam
imul
js
test
jge
pop
cmpsl
adc
aam
std
call
scas
sahf
push
nop
cmp
xor
adc
sti
in
cmp
sbb
push
dec
lods
fadds
outsb
adc
sbb
push
out
lock
cli
sbb
ret
test
mov
rclb
out
mov
mov
and
shlb
jmp
xlat
push
pop
dec
mov
cmpsl
cmp
and
lret
or
lcall
pop
scas
xchg
mov
test
out
pop
test
insb
aaa
cld
das
pop
nop
les
jae
ja
or
test
dec
iret
push
jl
cmp
mov
pop
loop
push
dec
rcrb
inc
addr16
inc
dec
fsubs
mov
lcall
and
mov
pop
and
movsl
fstps
js
dec
mov
rcr
jle
popw
or
data16
test
incb
insl
imull
decb
mov
incl
imul
push
pop
sbb
fadd
dec
jno
or
pop
adc
clc
mov
mov
mov
popf
push
les
shlb
mov
xor
filds
pusha
idivl
andl
push
mov
pusha
mov
xchg
aam
sarb
push
pop
cmp
mov
sbb
das
push
inc
mov
aas
jmp
pop
sub
or
sti
pop
fisubl
xor
jmp
cmp
jne
stos
lahf
seto
or
es
sbb
js
sti
andb
jge
dec
dec
outsb
jns
xchg
adc
pop
push
xchg
mov
scas
push
sahf
or
xor
xor
sbb
stc
aaa
mov
xchg
sbb
lods
inc
fwait
test
mov
test
cmc
push
sbb
push
out
xchg
pop
lret
mov
mov
loop
xor
sub
cmp
xchg
jae
lods
add
jmp
iret
mov
cmp
cwtl
cli
xchg
jns
or
sub
lahf
xchg
js
lret
mov
or
mov
test
mov
test
mov
pop
inc
mov
addl
sub
dec
sub
mov
push
mov
or
lock
push
pop
cmc
outsb
je
pop
dec
nop
insb
daa
loope
into
cmpl
mov
mov
fcoml
into
loop
xchg
pop
cmp
inc
iret
or
scas
insb
sub
repz
aas
loope
mov
je
dec
push
arpl
jg
xchg
out
repz
ret
inc
jne
jb
sbb
test
icebp
mov
pop
cmpsl
inc
scas
push
aaa
adcl
stos
shll
dec
push
and
es
fidivs
push
ja
fdivrs
aam
xor
in
xchg
es
mov
xor
sub
in
dec
mov
jno
mov
into
fisubrl
sub
pop
pop
not
cmc
xchg
ja
mov
loope
test
insb
mov
cmp
dec
jbe
sub
push
inc
call
add
push
xor
jb
add
lcall
iret
rcr
jnp
iret
jmp
les
call
out
adc
or
mov
push
les
mov
push
xchg
lods
aam
addr16
sbb
idiv
pop
jmp
push
enter
je
daa
mov
mov
iret
subb
lcall
add
sbb
add
movsb
mulb
dec
das
add
xchg
jns
push
fldenv
or
fcmovne
cli
mov
jl
push
mov
cld
cltd
jge
cmp
mov
stc
cmc
jecxz
cmpsb
cld
les
mov
jbe
add
push
int3
mov
push
dec
cmp
or
sti
sbb
stos
mov
push
adc
push
repnz
add
insl
lcall
mov
jne
fs
xlat
out
lods
pop
xchg
adc
nop
mov
and
jecxz
fisubl
and
popf
int
pop
adc
lock
lds
push
xor
inc
push
cmp
in
xor
sbb
into
shl
cwtl
dec
sub
mov
sbb
xchg
adc
jno
xlat
gs
fisubrs
test
sti
push
dec
rcrb
mulb
lahf
mov
and
add
add
or
addr16
outsb
pop
push
aam
fidivrl
xchg
bound
adc
imul
adc
dec
mov
xchg
adc
pop
mov
add
lahf
mov
mov
xchg
mov
sar
fwait
lds
lcall
cmpsb
sub
aaa
or
rorb
cwtl
cli
test
pop
or
pop
jnp
loopne
pop
cmp
sahf
popf
xor
mov
jbe
add
jo
xor
out
fwait
add
nop
loop
fistl
push
sbb
pop
jge
ljmp
adc
add
mov
jb
cmp
cltd
sub
sbb
sub
data16
adc
popa
jle
push
dec
insl
je
repz
outsl
push
sub
mov
xor
roll
cmp
pop
scas
gs
push
lahf
dec
std
mov
xchg
jmp
sub
inc
das
shr
sbb
loope
jg
mov
pop
sub
push
mov
add
add
inc
dec
icebp
mov
ret
rol
pop
jbe
frstor
inc
mov
hlt
popa
mov
push
add
dec
mov
pop
test
mov
xor
inc
xor
leave
inc
ret
loopne
enter
cmp
add
sbb
rcll
inc
cwtl
mov
sar
sbb
jb
fiadds
shl
jmp
rclb
fcomi
mov
xchg
repz
imul
int3
jp
mov
shll
popf
imull
inc
aaa
jmp
faddp
add
nop
mov
adc
pop
xchg
stos
pop
cmp
inc
rcll
nop
xchg
lods
fs
cmp
push
jnp
cmp
pop
pop
rol
cli
push
repnz
into
fs
or
or
lods
test
add
lret
mov
stos
add
dec
cmp
push
jmp
mov
mov
cmp
jnp
mov
jae
sbb
jle
sbb
jo
and
rcll
test
mov
mov
testl
test
xchg
xor
test
mov
inc
pop
adc
std
mov
addb
push
adc
add
dec
fidivs
popa
or
lret
ss
and
xor
xor
rorb
xchg
sbb
cmpsb
cli
cmpsb
rolb
sbb
jb
add
hlt
js
in
insb
sub
pop
mov
inc
adc
ss
daa
scas
shrb
out
dec
mov
test
or
mov
aad
loop
popl
aad
arpl
scas
stc
scas
cmp
xchg
mov
movsb
add
lahf
sahf
lret
cmp
or
sbb
outsb
stc
rclb
and
push
pusha
dec
push
sbbb
movsb
pop
imulb
lcall
mov
sbb
in
mov
sub
mov
xchg
popf
pop
jnp
fistpl
jno
into
lcall
xor
jl
adc
enter
orl
jecxz
inc
lods
aam
mov
rorl
cmpsb
xor
jbe
jbe
in
adc
sbb
jecxz
adc
push
push
ja
mov
stc
sbb
xor
xor
int
sarb
adc
dec
nop
test
aam
jne
bound
out
bound
into
xchg
dec
lods
je
cmp
push
daa
or
into
xchg
in
jg
pop
fwait
xor
xlat
sbb
add
out
jecxz
push
inc
mov
mov
das
sub
pop
bound
loope
mov
jnp
mov
adc
dec
test
sbb
ds
rolb
outsl
and
push
xor
xchg
jns
jne
aam
scas
inc
imul
divl
push
rcll
xchg
cmp
decl
sbb
inc
ret
stos
jmp
aad
mov
mov
repz
adc
inc
aad
or
and
pop
jo
pushf
out
fnstenv
push
clc
cli
lods
xchg
movsb
mov
mov
inc
std
dec
mov
cmp
add
iret
mov
aam
dec
adc
or
cld
std
js
call
pop
jae
lss
sub
sti
lret
cmp
gs
and
cmp
sbb
leave
data16
sbb
out
mov
sub
test
mov
jns
int
pop
inc
ja
sub
lcall
adc
gs
int
and
dec
or
or
imul
sub
jl
mov
outsb
mov
jbe
cli
scas
dec
bound
push
rorb
lock
jno
inc
cmp
and
ret
jle
cmp
hlt
movsl
and
add
pop
data16
lahf
out
jmp
addr16
mov
popa
stc
lcall
sub
stos
xchg
icebp
and
gs
iret
sahf
adc
nop
hlt
data16
cs
mov
push
popa
mov
xchg
or
cmp
mov
aaa
das
push
push
adc
add
pop
rcl
aaa
or
adc
sahf
cmpsb
outsl
fimuls
aaa
jl
dec
jne
jmp
xor
lcall
sbb
mov
test
pop
test
enter
mov
inc
jo
mov
mov
mov
pop
xchg
cmp
xchg
insb
or
ja
movsl
add
mov
jle
adc
or
sub
loopnew
and
dec
lahf
sbb
js
push
pop
decl
push
sbb
add
cwtl
arpl
dec
push
inc
insb
jl
pop
mov
jp
mov
int3
add
aam
adc
mov
fcomps
push
lahf
inc
or
push
mov
push
divb
adc
and
add
push
xchg
push
leave
cs
jnp
push
sti
out
mov
xor
test
aam
xchg
mov
shlb
in
pop
and
lods
int3
ds
mov
inc
pop
es
mov
data16
adc
es
pop
lods
test
jb
cs
scas
fdiv
cli
mov
xor
or
or
sub
negb
mov
dec
or
lret
and
scas
ds
js
dec
std
fnstenv
pusha
test
int3
pop
push
mov
xchg
mov
mov
lods
stos
or
pop
or
jmp
in
inc
pop
fisubs
negb
sbb
push
stc
xlat
cmp
push
pusha
jne
fidivrl
pop
test
ret
lret
fstps
ds
xchg
lods
xlat
insl
roll
fldenv
aad
cs
stos
movsb
mov
add
pushf
mov
aad
out
pop
scas
pop
xor
mov
lcall
adc
or
out
std
dec
add
hlt
cmp
add
mov
dec
add
pop
xorl
push
push
fldt
movsb
sbb
inc
paddd
or
push
xorl
push
add
and
cld
jne
jle
pop
aaa
fidivrl
lds
pop
call
sub
push
sub
fmul
jp
in
xchg
push
addr16
cmc
popf
adc
vpcmpgtw
push
push
ljmp
mov
mov
pop
xchg
gs
mov
inc
std
insl
sub
xchg
insl
or
pushf
cmp
sbb
xchg
sbb
dec
push
cmpsl
sub
adc
jns
jae
negl
sahf
pop
push
mov
daa
sub
lds
test
leave
pop
fs
push
inc
sahf
xchg
push
push
sbb
popa
ss
pop
push
mov
pop
aaa
ret
insb
data16
out
mov
and
nop
jecxz
clc
dec
cmp
sbb
mov
clc
or
lods
push
push
or
dec
fdivs
cs
jecxz
cmpsl
mov
cwtl
nop
pop
test
mov
mov
repnz
lahf
jp
clc
and
stos
push
or
loopne
jne
sub
fdivl
adcl
push
fidivrl
push
cmpsl
pop
push
cmpsb
add
mov
jmp
aam
mov
sub
jl
enter
push
outsl
daa
sti
jmp
mov
out
lods
insl
je
sub
mov
test
lret
push
or
enter
clc
je
mov
cmp
popf
dec
popf
int3
iret
dec
in
roll
in
jp
movsl
shlb
test
cmp
insb
mov
add
jae
add
popa
cmc
mov
sarb
fidivs
divl
ljmp
cmp
ja
xor
push
pop
mov
mov
data16
push
push
fnstsw
and
repnz
sub
les
mov
and
push
lods
mov
or
jns
bnd
push
ds
addr16
pop
xor
hlt
test
cwtl
sbb
push
jmp
inc
or
aam
aas
mov
pop
imul
mov
test
mov
add
inc
mov
cmp
dec
pop
repnz
pop
mov
xchg
add
shld
push
push
in
das
movsb
jo
stc
nop
push
push
push
dec
aad
loope
std
mov
and
int3
sbb
inc
or
dec
or
pop
and
and
xchg
daa
test
loop
jg
or
xchg
gs
cs
jae
loope
call
add
sbb
jg
jno
test
clc
sub
por
in
sbb
xor
sbb
clc
mov
dec
mov
jecxz
popa
pop
sub
int3
lea
inc
pop
movsl
cmp
andb
cmp
movsl
sub
enter
ljmp
shl
xchg
fs
enter
mov
or
push
pop
cmp
adc
push
jb
jno
pop
inc
xchg
lcall
sub
inc
pop
fwait
or
cmp
jae
shll
inc
ret
imul
push
cmp
push
clc
frstor
sub
imul
loop
adc
xlat
sarb
icebp
push
mov
pusha
sub
hlt
pop
aas
jl
out
daa
cwtl
fmul
movsl
cmpsb
sbb
or
and
imul
push
sbb
xor
fiadds
je
mov
les
mov
push
dec
mov
adc
mov
gs
lods
sti
fnstsw
inc
lahf
in
or
mov
aad
movsb
outsl
sarl
loopne
bound
add
push
lock
mov
xchg
push
xor
fists
ror
push
sbb
xchg
icebp
xor
test
decl
jbe
mov
scas
jge
lods
call
and
rclb
loop
cmp
fisubs
pushf
stc
sub
ds
mov
test
add
ja
xlat
dec
mov
push
loop
add
pop
cmp
jg
jo
daa
scas
dec
jmp
loope
addl
imul
je
push
out
cmpsb
add
xchg
jno
pop
xchg
sub
mov
xchg
push
inc
mov
dec
les
sub
dec
loope
cltd
pop
lea
das
pop
cmpsl
push
mov
movsb
fiaddl
push
lret
push
pop
fidivl
int3
ficoml
ret
push
xor
mov
into
push
push
movsb
shlb
psllq
dec
fdivr
aaa
cmp
dec
popf
imul
cmpsb
faddp
int
pop
mov
js
shr
std
add
in
cmp
push
sub
sahf
hlt
inc
xchg
xor
cli
push
pop
insb
cwtl
cmp
repz
mov
jnp
lea
jbe
mov
insb
push
lock
mov
xor
and
mov
aaa
cwtl
lret
cmpsb
jnp
add
xchg
jnp
sti
jns
jbe
cmp
fisubrs
testl
inc
pushf
les
dec
or
std
popa
jae
pop
and
imul
push
icebp
imul
xchg
ljmp
push
bound
aas
mov
addr16
outsb
sub
mov
jns
jno
inc
jb
test
andb
test
shrb
out
xor
loop
sub
adc
outsl
call
call
jo
imul
mov
mov
iret
outsl
cs
loop
jae
add
mov
pop
sbb
test
sbb
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
js
mov
test
mov
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
js
mov
sub
mov
mov
cmp
sub
pop
sbb
sub
cmp
dec
pushf
pop
mov
js
mov
test
mov
or
cmp
sub
fcompl
data16
fwait
cmp
jae
inc
or
dec
clc
pop
enter
cmpsb
or
cmp
inc
std
cmp
js
dec
jmp
sti
sub
sbb
enter
test
mov
pop
push
ljmp
or
clc
pop
enter
test
mov
cmp
js
cmp
pop
movl
clc
sub
mov
hlt
add
arpl
stos
dec
mov
mov
add
out
test
arpl
dec
cmp
sbb
andl
and
adc
out
xlat
fwait
sub
ljmp
push
mov
cmc
lock
push
in
xor
je
cmpsl
insl
fdivs
stc
dec
mov
or
fldt
push
jle
fwait
push
jnp
ficomps
mov
mov
xorb
js
test
pop
adc
sti
movsl
fdivrs
mov
ret
or
dec
aad
jae
inc
jns
ja
adc
mov
sbb
lret
or
clc
pop
enter
test
mov
cmp
js
dec
jmp
sti
sub
sbb
scas
dec
xchg
and
dec
icebp
outsl
in
dec
mov
xor
dec
call
dec
daa
mov
cwtl
and
pop
mov
or
mov
or
orl
flds
test
mov
cmp
js
dec
jmp
sti
sub
sbb
enter
test
mov
cmp
js
dec
jmp
sti
sub
sbb
jae
cld
mov
xor
add
pextrw
or
call
orl
call
jmp
std
icebp
mov
or
cmc
hlt
out
xor
add
xor
push
movsb
dec
inc
popa
test
jnp
or
pop
cmpsb
jnp
inc
sub
ret
mov
popf
cmpsl
xlat
movsl
sar
std
hlt
inc
sbb
dec
mov
lea
mov
ljmp
xchg
repz
or
aad
ret
lods
inc
ds
popf
pop
mov
sbb
dec
inc
push
xchg
pop
sbb
dec
fcoms
stos
notb
es
jo
sti
lcall
repz
aas
xchg
dec
or
bound
hlt
jge
sahf
test
and
jmp
or
inc
mov
mov
ficoml
cltd
pop
fsubrs
add
sahf
fiaddl
mov
scas
jno
loop
outsl
mov
int
in
stos
or
enter
cmpsl
das
adc
xor
out
gs
fwait
jg
cmc
daa
popa
sbb
out
pop
jge
adcl
mov
shll
jo
adc
push
aaa
roll
jns
shrl
and
jns
cs
pusha
sbb
aas
aad
add
stos
or
stos
sub
call
adc
adc
ret
xchg
jge
sbb
repz
in
scas
out
in
in
dec
lods
mov
movsb
pusha
push
adc
jmp
mov
push
mov
clc
inc
cmp
js
sbb
inc
mov
mov
popa
push
pop
shll
push
and
fldcw
roll
testb
and
enter
add
pop
inc
add
cmp
push
dec
xor
das
scas
add
inc
mov
ja
outsb
dec
xchg
mov
mov
stos
xorl
mov
sbb
add
xchg
jo
clc
or
sub
push
jbe
shrb
xor
fs
sbb
mov
ret
sbb
inc
sub
loop
inc
mov
xchg
push
add
xor
mov
ret
lea
jmp
cld
arpl
pop
ljmp
cmp
jb
xor
add
les
subb
push
dec
lock
orb
imul
jmp
std
in
rclb
pop
sub
cmp
push
cltd
add
out
ss
sbb
xchg
or
sbb
push
jle
mov
loope
in
pushf
inc
sarl
lret
sbb
insl
and
mov
les
add
xor
mov
fdivrs
push
cmp
sbb
pushf
mov
push
movsb
cmpsl
xchg
cmpsl
lods
pop
cmp
jmp
dec
xchg
es
sahf
in
jb
rorl
ljmp
xchg
std
or
pop
add
and
ja
bound
lds
push
adc
stc
mov
sahf
or
aad
and
hlt
repnz
sbb
div
xor
test
icebp
aad
jb
push
jo
imul
shl
or
dec
xchg
daa
xchg
inc
adc
xchg
outsl
mov
dec
or
js
fidivs
cltd
lret
es
das
cmp
cli
cmc
and
xor
call
cmpsl
popa
and
cmp
mov
pop
add
ss
imul
pop
add
xlat
int3
cwtl
xor
call
mov
decl
mov
inc
fsubrl
jp
sbb
movsl
or
sub
and
xchg
pop
sbb
repz
jl
and
pop
sti
adc
mov
mov
pop
sub
pop
jb
or
insl
cmpsl
pop
aaa
std
cld
cmp
sbb
xor
or
fmul
inc
or
add
push
pusha
daa
cmp
sub
xor
cmpsb
ret
bound
pop
cmp
nop
lret
cmp
mov
jo
int
dec
xchg
test
je
int3
and
push
daa
push
pop
cld
enter
or
mov
popa
cmp
jecxz
lods
add
iret
mov
dec
test
and
and
xchg
jmp
jecxz
call
and
std
jmp
xchg
mov
mov
cmp
push
xchg
or
fucomi
cmp
pop
ficoms
jo
pop
push
insl
jp
inc
cmp
inc
jae
and
xchg
testb
aam
mov
pop
ficomps
sub
mov
rolb
sub
mov
pop
xor
xor
mov
xchg
out
arpl
imul
xchg
std
sbb
dec
mov
jb
aaa
mov
jecxz
enter
out
add
push
loope
inc
inc
rcr
add
aad
or
or
subps
repnz
rorl
frstor
mov
js
xlat
push
cmc
lds
inc
xor
xchg
jecxz
out
pop
sbb
lods
pop
sub
xor
insl
add
ud1
sub
mov
mov
cmc
and
mov
jmp
mov
sub
into
dec
test
mov
push
inc
mov
jl
jge
cmp
jbe
sub
sbbl
or
pop
mov
int3
pop
bswap
mov
jno
mov
and
mov
and
in
testb
mov
sarb
jp
dec
adc
sbb
pop
stos
rorb
in
mov
mov
cli
fldenv
and
cmp
enter
mov
lret
add
loop
repz
or
and
fidivrl
sbb
sbb
mov
push
sti
jne
xchg
cmp
mov
xchg
ret
and
repnz
inc
data16
shlb
xlat
add
shl
test
jl
cmc
and
ret
cmp
lods
xor
mov
sbb
sbb
popa
dec
fbld
dec
jl
in
subl
jl
mov
fwait
in
xor
insl
adc
and
push
scas
fldenv
scas
xor
jg
out
xlat
sbb
fucomip
sbb
mov
jo
enter
mov
jg
aam
js
cmpsb
loope
rorb
imul
adc
cmc
mov
push
stos
sbb
jmp
mov
xchg
in
sbb
xor
xor
jnp
jg
xchg
lahf
xor
jno
pop
mov
mov
jp
inc
cmp
jns
mov
shll
inc
pop
fists
sub
mov
imul
fwait
and
in
aam
mov
xchg
iret
pusha
sbb
sub
push
and
inc
sub
cwtl
in
cmp
xor
pop
xchg
adc
ret
mov
pop
xor
sarl
jp
or
rorl
insb
cmp
inc
js
xchg
xor
int
adc
xor
adc
test
add
orl
cmp
sub
xor
scas
jl
xor
inc
add
push
and
out
iret
lret
orl
xor
ja
cwtl
adc
or
xor
sub
hlt
in
push
and
dec
in
xchg
popf
mov
bound
mov
fwait
mov
push
cld
xor
push
mov
lret
and
push
fcoms
pop
pop
sbb
popa
insb
jno
lea
mov
gs
and
adc
mov
xchg
je
pop
mov
push
xchg
insb
fs
addb
jp
xor
test
into
jns
fwait
inc
ja
lret
cmp
in
jae
push
xor
jl
mov
add
sub
notl
push
sub
pop
popl
adc
shl
mov
jnp
in
mov
dec
or
inc
data16
out
dec
gs
arpl
xorl
idiv
jo
addr16
sbb
pushf
jp
mov
cmp
movsl
mov
adc
inc
in
jns
imul
cs
push
iret
pop
mov
mov
jg
adc
adc
jmp
pop
dec
int3
push
sti
or
cwtl
xor
ret
insb
sub
into
jge
cmp
sbb
hlt
inc
and
arpl
enter
mov
mov
outsl
push
mov
jb
mov
add
insl
loope
jle
mov
add
outsl
es
rcrb
pop
ljmp
dec
sbb
hlt
xor
repnz
sahf
fcoml
push
and
pop
and
fstl
popa
and
and
lods
or
jb
stc
cmpsl
pop
xchg
cmp
lret
int3
movsb
inc
leave
sbb
jecxz
leave
out
shl
addr16
daa
je
lret
inc
push
adc
sub
lods
xchg
insb
inc
sahf
rcrl
jecxz
dec
xchg
out
sub
lods
rep
stos
xor
xchg
add
rorb
fdivrs
std
xor
lcall
call
or
outsb
pop
aaa
sub
cmp
xchg
ss
pop
out
shrb
decb
sub
or
dec
and
lods
aaa
aas
pop
adc
mov
rcl
fidivrs
mov
adc
push
roll
iret
jmp
imul
sub
sbb
iret
and
testb
pushf
pop
cmp
jo
stos
rcll
out
cmp
nop
cmp
in
push
orw
add
xor
in
mov
leave
mov
lods
repz
rorl
mov
aam
xor
les
push
mov
js
ljmp
push
mov
inc
or
outsl
jnp
sub
cmp
js
popa
cwtl
flds
sbb
pop
jbe
cmp
and
loope
jmp
cmp
aaa
gs
inc
lock
push
movsl
rorl
sub
jnp
mov
mov
iret
cli
xchg
lea
aad
xchg
in
cmpsl
and
dec
inc
aaa
mov
push
icebp
inc
xchg
popf
cmp
in
xchg
xor
or
mov
test
lods
cmp
vprotb
lcall
mov
iret
cmp
xchg
idivw
daa
add
cmp
daa
testb
push
out
rcrb
push
aam
aaa
push
cmc
int3
adc
cmc
inc
adc
shrl
sbb
jb
sbbl
stc
fucom
mov
popa
mov
pop
xchg
mov
aad
inc
in
or
mov
shll
inc
cmp
fcmovne
adc
cld
jge
mov
xchg
push
pop
addb
push
sbb
cmp
nop
jmp
dec
fiadds
adc
push
lret
imul
enter
rclb
js
dec
add
xchg
dec
lea
and
cbtw
add
pop
dec
mov
inc
cwtl
in
push
push
out
ss
adc
int3
dec
dec
popa
out
xor
push
out
add
ss
sub
add
push
orl
fldl
mov
xchg
daa
jg
inc
daa
call
addb
outsl
sarl
jno
pop
sbb
or
push
iret
jl
rol
pop
and
je
cmp
xchg
into
mov
stc
nop
jb
adc
cwtl
mov
or
cmp
fcompl
shrb
push
es
je
mov
pop
enter
or
loop
imul
negl
adc
aas
xchg
xor
clc
xlat
mov
loopne
out
fstps
mov
arpl
shlb
gs
hlt
ja
dec
out
movsb
push
jbe
lock
jecxz
imul
lahf
in
std
notb
lahf
ss
les
testb
ss
iret
in
loop
bound
lods
sbb
mov
fidivrs
mov
xlat
aad
arpl
adc
push
inc
dec
clc
dec
jo
scas
loop
mov
xchg
jns
aad
inc
xorl
lret
adc
fs
clc
jo
fbld
pop
inc
cmpsl
in
xor
out
inc
andl
in
cld
les
jns
jbe
icebp
pushl
int3
sub
jns
lds
lahf
lret
lahf
xor
pop
dec
outsl
sub
dec
dec
sub
mov
mov
dec
int
and
out
scas
xchg
data16
fildl
test
mov
int
inc
xchg
inc
fidivrl
lock
aaa
xchg
push
js
data16
pop
mov
dec
lret
add
dec
fstpt
aaa
nop
in
dec
jns
movsl
jp
push
fisttpl
stc
jne
mov
push
addr16
jge
jbe
push
fstpt
or
mov
incb
and
fwait
xchg
push
lret
movsb
push
mov
nop
sti
mov
xor
xor
push
add
repz
test
jae
dec
inc
faddl
adc
jo
or
imul
mov
inc
pop
rorl
jnp
ficoml
jg
sub
xchg
mov
imul
mov
call
das
push
pop
mov
clc
dec
sub
inc
dec
xchg
mov
mov
aad
ss
or
xor
loop
fptan
cmpl
mov
loop
or
add
and
pop
sbb
std
loop
cwtl
pop
scas
gs
out
stos
push
call
repnz
or
jmp
mov
jmp
mov
out
jp
mov
fsts
add
pusha
mov
mov
sub
hlt
pop
mov
xchg
cli
enter
lea
mov
test
push
mov
jl
pop
add
std
imul
pop
pop
push
std
mov
inc
addr16
arpl
fs
inc
sub
inc
scas
jnp
enter
fwait
les
push
sbb
push
in
mov
test
movsb
or
inc
lcall
fs
push
mov
ret
outsl
cld
bound
fnstcw
shrl
imul
and
ja
pop
int
push
xor
xor
mov
sub
fs
push
arpl
fwait
dec
mov
push
aaa
leave
setg
out
ljmp
pop
or
int
movsl
pop
push
out
add
push
orb
bound
sbb
outsl
adcb
icebp
or
sub
pop
push
sti
jl
fbld
movsl
cli
mov
or
loope
aad
dec
subl
pushf
repz
push
fmuls
cli
movsb
jle
insb
fidivs
mov
or
add
ja
inc
mov
adc
xor
jo
cs
andl
mov
leave
mov
lock
mov
or
inc
and
cmpb
pop
cmp
in
mov
pop
and
data16
dec
fbstp
icebp
pusha
in
xor
push
pop
or
inc
jmp
ffreep
arpl
and
subl
xor
fisttpll
int
cs
xchg
jl
insl
mov
cmpsl
ret
xchg
mov
xchg
test
testl
clc
lea
push
out
fstl
mov
movsl
mov
ret
jbe
or
cmp
in
dec
mov
lea
rolb
jno
and
or
movsl
popa
test
sarb
movsb
test
xlat
in
outsb
lret
fidivrl
mov
in
mov
sbb
call
jl
js,pt
adc
mov
icebp
imul
xor
add
aaa
aam
stos
daa
popf
pop
mov
call
fisttpll
sbb
fst
pop
push
out
sti
or
push
js
out
rcl
movsl
add
out
aad
adc
cmp
test
fldcw
inc
sbb
xchg
cmp
imul
mov
add
mov
push
sbb
push
inc
sub
js
dec
es
push
stos
loopne
fiaddl
test
ret
and
fnstenv
xchg
xorb
xchg
scas
pop
jae
aaa
adc
mov
lcall
scas
movl
cmp
arpl
data16
cmpsb
xor
in
add
push
cltd
xor
sbb
in
popa
dec
loop
pop
and
lods
inc
xor
xor
insb
movsl
cmp
xor
scas
sub
es
mov
sub
inc
rolb
test
dec
fsubrl
adcb
push
setge
in
jb
arpl
repz
cmpsb
dec
lds
add
pop
xchg
cmp
fidivrl
in
int
mov
or
jmp
stc
pushl
pop
nop
mov
jno
mov
fsubs
sahf
loopne
stc
dec
cwtl
inc
xchg
jne
cmp
fiadds
ret
add
jle
aad
jbe
push
jmp
mov
cmpsl
dec
lods
int
and
mov
or
cmp
mov
into
in
sbb
add
insb
dec
mov
jno
xor
ficompl
xor
popf
lea
cs
cmpsl
mov
adc
and
push
jg
add
jge
ret
repnz
shrl
xor
jmp
lcall
imul
dec
adc
sub
and
sbb
ss
lcall
sbb
dec
es
xlat
cmp
out
xor
ja
leave
aam
jns
cmc
push
cmc
push
push
lock
push
mov
nop
cmp
sub
data16
sub
repz
dec
lods
xchg
cmp
mov
and
mov
xor
mov
and
fldcw
sbb
mov
and
int
xchg
inc
pop
fs
idivb
dec
shll
xorb
mov
scas
xor
lds
cmpsb
push
xchg
xchg
cmp
inc
mov
xchg
push
inc
add
jmp
in
imul
data16
sub
hlt
jle
sbb
dec
shll
mov
data16
hlt
and
push
daa
ss
jbe
movsl
lea
sbb
cmpsb
jg
dec
pop
mov
xor
add
mov
add
push
pop
dec
arpl
js
gs
jle
out
lret
int3
sbb
sti
push
mov
cwtl
xchg
xor
lods
std
and
add
push
fdivrs
stos
sti
int
xor
pop
lea
in
sbb
pop
jo
push
add
inc
lds
mov
into
scas
jp
xchg
jo
add
shlb
or
lock
cli
in
jp
sub
jge
xchg
repz
int3
pop
cmp
dec
movsl
ret
mov
sbb
sahf
rcll
cmp
mov
data16
or
stc
mov
adc
add
data16
cmc
sub
jns
into
lret
ljmp
popf
mov
cltd
dec
int
jne
mov
mov
nop
mov
int3
call
lods
xor
mov
mov
rcl
fwait
dec
insb
inc
push
push
popa
test
scas
xchg
sub
mov
mov
and
or
aam
loope
aaa
int
out
orb
fs
sub
jg
dec
cld
adc
mov
jno
test
fsubrs
int
pop
int3
push
inc
pop
rol
mov
pop
aad
loope
test
cwtl
aad
stc
mov
mov
sub
jg
cmp
test
jbe
jge
pop
aam
icebp
inc
adc
mov
call
sbb
imul
sbb
fldt
imul
and
sub
push
cs
mov
xor
mov
mov
mov
jbe
fcmovnb
cmpsb
adc
subb
mov
mov
incl
pushf
jae
fs
mov
in
mov
xor
adc
fiadds
mov
ret
pop
jae
push
mov
pop
pop
xchg
mov
aaa
popa
pop
shrb
lock
loope
ret
or
sarl
addl
mov
mov
pop
pop
jge
dec
mov
lcall
mov
inc
sub
xor
mov
adc
dec
arpl
add
sahf
and
icebp
dec
push
fisubrs
adc
sbb
sbb
mov
cmpsl
adc
and
dec
push
xor
and
fisubs
inc
call
test
push
jnp
mov
ds
inc
sub
stc
sub
das
daa
ret
fidivs
mov
out
and
pop
hlt
xchg
mov
or
cmp
out
mov
aad
inc
inc
jle
dec
mov
jge
fildl
leave
data16
pop
mov
xchg
pusha
or
adc
jle
pop
inc
testl
add
adc
fimuls
out
test
xchg
jno
jg
les
xchg
repnz
jl
lea
jg
mov
cmp
mov
aas
mov
cli
xor
xchg
mov
test
mov
jnp
mov
das
push
imul
repz
mov
insl
fwait
mov
outsb
dec
loope
xor
jl
adc
pop
or
mov
pop
fdiv
ljmp
nop
pop
cmp
lahf
inc
pop
imul
sbb
dec
loope
inc
sbb
pop
shlb
xor
mov
jb
cmp
pop
and
xchg
fidivrl
mov
sbb
add
push
adc
dec
jmp
int
dec
or
and
stos
sbb
pop
aad
jne
scas
scas
cltd
adc
ret
xor
pop
insl
lods
inc
cld
mov
ret
addr16
inc
push
and
mov
cmc
sti
dec
mov
test
and
imul
test
mov
cmp
js
dec
jmp
sti
sub
sbb
enter
test
mov
cmp
js
dec
jmp
sti
sub
sbb
enter
test
mov
cmp
js
dec
jmp
sti
sub
sbb
enter
test
mov
sti
push
jmp
mov
mov
notl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fwait
xor
jge
inc
lods
cld
mov
out
sbb
pop
cmp
jge
or
imul
in
stos
std
fisttpl
jmp
sbb
jge
insl
sub
bound
jnp
imul
inc
stos
jmp
sbb
dec
push
pop
pop
cmp
add
mov
mov
pusha
rorl
out
scas
sub
icebp
rclb
inc
je
inc
mov
inc
fisttpl
jmp
add
dec
fisubrs
int3
loope
shl
loop
mov
sbb
movsl
rcrb
sub
scas
lock
sub
imul
std
lods
inc
mov
xor
mov
mov
or
or
loop
enter
ds
jmp
pop
movsl
pusha
mov
mov
mov
sbb
cmp
ret
jae
cmp
inc
push
pop
in
sti
inc
pop
dec
dec
xor
mov
sub
mov
fisttpl
jmp
sbb
or
pop
and
jnp
imul
call
sarl
les
imul
sbb
outsb
adc
bound
imul
mov
pushf
fmuls
scas
mov
sub
or
sbb
add
fwait
mov
sahf
jmp
jmp
sbb
pop
cmp
jge
or
imul
in
stos
std
fisttpl
jmp
sbb
pop
cmp
jge
or
imul
dec
aam
or
mov
test
fdivs
jb
jp
inc
mov
aad
dec
mov
jg
subl
enter
mov
or
dec
stos
and
lods
lods
sub
loopne
mov
mov
inc
xchg
push
out
mov
xchg
sub
pushf
fs
inc
cmp
jns
shlb
fstpl
sbb
mov
fwait
jns
push
or
sub
mov
push
push
jg
cwtl
mov
lret
sub
cmpsb
pop
inc
test
xor
push
mov
add
repnz
jno
lock
adc
int
mov
ss
call
push
sub
stc
lds
sti
and
pop
push
call
inc
outsb
cmp
pop
cmp
mov
jno
repnz
xchg
inc
or
mov
xchg
or
or
dec
or
mov
cmc
push
rcrl
mov
scas
scas
leave
cmp
aas
adc
fimull
idiv
sti
movlhps
bound
add
roll
jnp
sub
in
and
cmp
sub
and
and
movsl
int
cltd
jle
inc
sub
pop
pop
leave
mov
sbb
xchg
fxch
notb
adc
pop
movsl
xor
push
out
popa
mov
ljmp
mov
cmp
fcmovnbe
mov
fistpll
orb
mov
stos
xor
dec
aas
and
add
and
mov
push
js
lods
adc
aas
adc
out
mov
jle
cmp
add
dec
andb
pop
decb
dec
ljmp
adc
mov
adc
mov
nop
aam
and
fcompl
mov
cmp
or
popa
movsb
push
sar
mov
push
psrlq
dec
repnz
das
mov
push
or
addl
add
xchg
and
mov
xor
jns
fs
sbb
insl
adc
mov
arpl
dec
mov
ljmp
mov
test
add
in
push
inc
cmp
cmp
adc
adc
enter
cmp
fdivrs
movsb
jl
adc
cmp
xlat
cwtl
or
repnz
cmp
ror
jle
push
aaa
popa
out
sub
dec
daa
mov
dec
jo
xor
scas
mov
mov
loopne
cmp
arpl
mov
sbb
dec
pusha
sbb
inc
mov
das
lds
mov
mov
jg
push
jle
pop
cli
mov
cmp
sub
mov
into
inc
pop
das
inc
xor
lods
mov
xorb
sahf
cmpsb
xor
pop
pop
add
insb
lahf
pop
outsl
mov
shr
jl
sbb
xor
mov
pop
sbb
xorl
je
pop
pop
adc
in
imul
mov
int3
and
and
xor
jns
mov
pop
mov
cwtl
cmpsl
xchg
aas
lods
std
in
pop
and
or
shll
pushf
in
push
xlat
mov
sarl
leave
xchg
jnp
mov
ss
adc
clc
lock
xchg
inc
pushf
mov
adc
rorb
adc
loop
aam
add
les
jb
mov
mov
mov
leave
jo
and
mov
es
sub
cmp
test
cltd
les
lock
sub
inc
insl
mov
test
ret
mov
mov
dec
fnstenv
inc
lret
popl
mov
iret
push
sub
setg
in
nop
lds
outsb
cmp
sahf
push
test
icebp
enter
jecxz
pop
xlat
cli
or
fdivs
inc
sbb
fcoms
mov
fldenv
nop
loopne
adc
cmp
push
out
rorl
fdivrs
pop
adc
neg
adc
jbe
add
jnp
xchg
loope
mov
lods
imul
cmp
jge
in
arpl
xor
pop
rcrb
mov
sahf
xor
mov
out
adc
push
xor
fneni(8087
ljmp
inc
xchg
ficompl
xchg
jo
movsl
enter
xor
xor
pop
inc
cmp
in
es
hlt
stos
jns
cmp
xchg
adc
jnp
or
sbb
packuswb
hlt
outsl
mov
lock
sbbl
cmp
outsl
movl
xchg
adc
push
repz
dec
sbb
sahf
repz
xchg
mov
pop
jb
inc
push
mov
daa
shlb
pop
dec
mov
xor
add
cmp
jecxz
and
out
xchg
sbb
fcomps
hlt
xchg
pop
shrb
jno
outsl
fildll
jp
sbb
mov
dec
and
loope
inc
cltd
inc
rcrb
stos
mov
jmp
adc
popf
test
jge
sub
xchg
popf
mov
cltd
mov
fimuls
popf
fdivrp
lret
xor
insb
mov
jbe
mov
push
nop
les
cs
decl
cs
jae
or
sti
pop
cld
inc
pusha
pop
jne
cmp
loopne
sti
add
mov
imul
xor
push
andb
adc
and
mov
push
loopne,pn
cmp
inc
test
mov
cmp
jmp
add
dec
inc
push
imul
pop
cmc
and
push
std
mulb
sub
scas
cmp
inc
lahf
push
test
cmp
out
mov
jno
add
sub
xor
imulb
xor
int
mov
pop
std
aas
ja
pop
out
push
or
push
jno
cmp
jae
addr16
fnstsw
in
test
add
adc
dec
dec
and
or
arpl
inc
mov
movsb
and
rcr
xchg
xchg
push
adc
movsl
mov
push
xchg
sti
pop
addr16
test
and
pop
cld
ja
test
incb
test
sbb
clc
enter
psrad
imul
cmp
pop
mov
mov
mov
inc
sub
pusha
jge
in
sarl
xchg
jle
push
jns
scas
insb
dec
test
lods
push
push
sub
dec
mov
call
into
pop
cmp
xlat
adc
outsb
dec
sub
popa
jmp
decb
cmpsb
aam
js
pop
mov
mov
push
les
mov
in
jo
or
cwtl
rcll
cmp
add
dec
adc
push
icebp
mov
sub
fmuls
loope
xchg
mov
xor
fnstsw
nop
popf
sahf
nopl
int
pop
adc
jne
mov
xchg
fs
stos
xlat
testl
in
inc
inc
into
jmp
scas
ljmp
fiaddl
es
idivl
cs
mov
test
pop
jns
pushl
fdivr
mov
movsb
shlb
jne
mull
mov
pop
in
sbb
movsl
subb
ljmp
mov
add
mov
add
cmp
or
add
ljmp
inc
and
iret
xchg
js
cltd
imul
aad
sub
notb
jmp
mov
sbb
pusha
xor
out
insb
in
mov
test
addr16
lods
mov
and
fwait
push
fs
scas
jo
insl
das
fstp
lcall
repnz
mov
push
mov
mulb
lahf
negl
adc
push
movsb
lea
adc
cltd
xchg
jae
and
and
cmp
cltd
push
mov
sbb
cmpl
loope
mov
mov
fildl
outsb
popf
int
adc
xchg
push
inc
push
cmp
jb
das
push
outsb
ds
ret
enter
push
jb
push
lahf
adc
adc
xchg
pusha
xchg
pop
mov
jne
test
jle
roll
int3
loop
push
add
sub
movsb
jae
sbb
fildl
xor
out
add
dec
jmp
jno
mov
stos
jl
jg
push
cmpsb
mov
xorl
fadds
mov
rorl
lret
loopne
stos
test
jg
nop
sub
add
int3
nop
jb
scas
pop
mov
mov
std
int3
inc
xchg
pushf
int
mov
adc
jp
pop
fistps
movsb
ret
idivl
mov
lcall
pop
mov
inc
or
ret
mov
mov
stc
jne
pop
sub
xchg
mov
or
add
dec
rcl
rorb
stos
mov
cwtl
sbb
cli
or
outsb
lock
adc
lods
push
test
xchg
aad
insl
movsb
cmp
jg
incl
push
scas
add
lea
ret
lea
cltd
in
dec
xor
inc
push
or
adc
pop
cmpsb
lret
fnsave
pop
in
mov
mov
cmp
fidivl
das
dec
inc
arpl
shll
sbb
es
sbb
test
jns
in
hlt
int
mov
dec
in
push
pop
sti
push
nop
inc
imul
lds
sahf
lds
mov
mov
ss
mov
mov
enter
adc
jo
push
pop
imul
jnp
mov
mov
adc
pop
cmp
loop
arpl
shll
mov
sbb
scas
in
js
xor
fsubrl
push
dec
in
das
dec
jmp
push
or
mov
loop
cs
dec
test
and
mov
inc
pop
mov
xor
jmp
or
add
or
test
clc
push
xor
jb
dec
add
xchg
ja
lods
xlat
mov
ss
sub
into
add
andb
out
clc
inc
jne
dec
add
push
popa
iret
lock
inc
imul
mov
mov
fiadds
jns
movsb
mov
cmc
sub
xor
inc
lret
xchg
sub
fldenv
adc
test
pop
cwtl
or
mov
inc
arpl
pushf
and
fisttps
jmp
jmp
jns
jl
scas
lods
mov
jle
lock
mov
xchg
hlt
nop
mov
dec
push
push
push
nop
aad
out
lock
and
push
insb
mov
sbb
gs
and
aaa
test
adc
mov
les
add
push
mov
jnp
push
lods
bound
outsl
std
xchg
movsb
cmpsl
and
pusha
adcb
inc
mov
xor
mov
and
aad
fwait
xchg
adc
jne
xchg
lods
out
fwait
pop
insl
into
cli
add
or
push
outsb
daa
notb
divl
mov
pop
dec
lea
scas
pop
aaa
inc
add
sub
inc
push
dec
jne
jl
adc
and
in
pop
cmpsl
mov
dec
adc
xor
outsl
aad
fiadds
xlat
inc
add
sbb
mov
sbb
int3
dec
ja
in
dec
push
mov
jge
cmc
push
xchg
mov
push
cli
push
adc
inc
xor
lret
jmp
dec
pop
outsl
fnsave
or
shrb
sbb
fwait
insb
cmpsl
xor
fwait
popa
ret
clc
loope
or
push
pop
and
jmp
mov
in
rol
xchg
fadds
mov
stos
popa
push
mov
xchg
pop
jae
icebp
lahf
inc
out
aad
loopne
jge
filds
in
out
mov
sub
stos
inc
ja
xchg
in
jle
push
push
test
and
cs
and
mov
dec
cmpl
pusha
shrl
pop
into
stos
inc
daa
mov
stc
cmp
mov
dec
dec
outsb
pop
ret
xchg
arpl
das
sub
cmp
testl
mov
iret
inc
popf
jno
mov
jbe
add
sahf
outsl
arpl
mov
into
cmp
lds
lret
bound
nop
pop
movsl
fisubl
xchg
je
jne
xchg
xor
xor
xor
fld
popf
jg
movsb
mov
jno
imul
in
cmc
jg
xchg
imul
fnstenv
xor
xorl
and
xor
cs
out
icebp
dec
add
cs
clc
sub
dec
cmp
call
mov
loope
dec
adc
adcl
aam
push
es
notl
mov
pop
arpl
sbb
scas
orl
or
pop
ret
aam
lahf
cmp
scas
jae
cmp
fistps
jg
or
mov
ss
dec
jl
push
popa
xchg
popf
sub
jnp
gs
jo
std
inc
in
push
pop
add
mov
popa
xchg
je
fwait
out
into
icebp
in
jae
daa
push
sti
xchg
inc
pusha
jge
pop
gs
fwait
js
xchg
adc
or
ret
sbb
ds
gs
inc
xor
cmp
push
sbb
xor
push
ss
shll
mov
leave
cmpsl
movsl
sbb
out
repz
jecxz
enter
data16
mov
in
fcoml
sahf
xor
or
push
sbb
jnp
pushf
in
and
mov
cmpsb
ret
pop
jnp
out
arpl
fwait
imul
dec
jmp
cli
xor
cmpsb
es
push
sbb
test
sbb
inc
adc
xorb
outsl
fsts
mov
sub
dec
aaa
xlat
and
xor
inc
stc
sbb
or
add
fwait
gs
aas
sahf
xchg
sti
rorb
push
addr16
decb
mov
cli
sub
xchg
test
movsl
mov
fldl
fcomp
pop
mov
stos
or
inc
aaa
out
and
xlat
frstor
in
loop
xchg
in
iret
pushf
sbbb
dec
mov
jmp
xorb
loop
stos
add
nop
sub
push
pop
add
popa
inc
mov
mov
and
ret
out
shl
aam
repz
push
sbb
iret
or
outsb
loopne
out
mov
sahf
pop
out
stos
cmpsb
loope
xchg
sub
into
in
push
test
mov
add
push
in
cmpsb
mov
movsb
popf
cltd
mov
add
sbb
cmp
pusha
arpl
push
push
xor
mov
out
xlat
pop
mov
push
inc
xchg
lock
iret
popa
mov
das
mov
jne
icebp
repnz
js
lea
mov
mov
xchg
dec
mov
pop
adc
or
cli
mov
ss
cmp
andl
test
fcoms
mov
mov
aaa
mov
pop
pushf
and
fs
ja
push
jle
mov
xchg
xchg
push
dec
jle
fisttps
xor
sub
aas
sti
rep
mov
rol
je
jno
pop
mov
lcall
push
adc
fistl
or
cmp
xchg
fldenv
sub
loopne
push
shl
cwtl
loopne
mov
int3
jnp
ja
adcl
sbb
sbb
mull
in
es
int
push
xchg
mov
fiaddl
sub
pop
jp
lea
pop
ss
cmpsl
lret
sbb
test
mov
pop
jns
pushf
pop
pusha
xor
push
cmpsl
cli
push
xor
xchg
push
and
repnz
inc
xlat
lea
imul
pop
pop
pop
mov
into
mov
jae
mov
mov
notl
push
outsl
xchg
cld
sbb
ss
mov
ja
ja
lods
bnd
in
aas
std
dec
repnz
insb
int
jecxz
es
and
mov
ret
cmp
fiaddl
mov
fists
das
scas
sbb
jmp
movsb
iret
out
js
sti
xchg
ret
movsl
addl
sbb
or
insb
mov
negb
scas
mov
pop
sub
pop
leave
and
je
call
mov
push
push
lret
dec
jp
negl
jge
xchg
xchg
ss
push
jb
mov
dec
aaa
push
jg
push
jo
stos
js
cmpsb
inc
cltd
mov
rcrl
stos
jecxz
fistpll
jno
jle
sbb
fsubl
outsl
stos
btr
xchg
lret
adc
mov
xchg
lods
incb
dec
dec
xlat
cli
cld
xchg
xchg
mov
out
mov
int3
inc
call
movsb
pop
and
sbb
pop
add
fimull
pop
rcll
ljmp
sub
and
sbb
insl
dec
jmp
push
fidivrl
arpl
fs
mov
sbb
mov
pop
push
cld
push
dec
cmc
in
push
insb
pop
inc
sub
cmpsl
in
js
mov
jae
xchg
adc
sbb
jnp
lods
jle
xchg
lock
daa
xlat
cmpsb
dec
aam
test
test
push
insl
mov
mov
cltd
pop
out
xor
push
je
xor
sbb
fdiv
xor
push
push
or
incb
arpl
js
dec
dec
pop
shl
call
cmpsl
mov
insl
sbb
inc
ja
mov
fcmovb
subb
movsl
xchg
lea
insb
or
out
xor
cmp
mov
repz
mov
ficomps
ret
in
ret
test
negb
sbb
xchg
mov
enter
xor
xrelease
mov
mov
adc
clc
out
imul
insl
mov
nop
sub
popa
push
inc
mov
stos
js
xor
cmp
jne
loope
mov
rcrb
sahf
jae
jns
mov
pop
mov
bound
sbb
cmp
fwait
pop
pop
adc
xchg
xor
pop
mov
dec
dec
cmc
xchg
or
dec
cmp
enter
dec
pop
ja
aas
test
mov
sbb
out
lcall
arpl
jge
push
ljmp
xchg
cmc
lods
mov
push
adc
mov
add
cmpsl
stos
inc
mov
lahf
xor
sbb
addb
imul
xchg
mov
js
jnp
push
jp
and
lds
and
jge
mov
sub
cld
sbb
std
std
in
pop
and
ficoms
dec
test
cltd
adc
sbb
jmp
cmpb
mov
jae
ret
mov
dec
add
int
cli
mov
lds
cmp
out
clc
mov
call
and
mov
mov
out
mull
fdivrs
stos
test
aad
or
in
and
sahf
push
icebp
push
push
dec
or
inc
cmpsl
pusha
pop
out
mov
cmc
mov
xor
push
sub
lahf
jns
mov
add
mov
neg
lds
pop
or
adc
dec
push
lcall
sarl
add
xchg
lahf
movsl
add
idivl
xchg
push
pop
popl
or
pop
inc
sbb
jnp
js
bound
dec
push
pop
mov
pop
mov
sub
sub
ds
cltd
loop
repnz
jae
or
dec
test
stos
xlat
js
int3
in
add
inc
popa
sub
mov
std
ret
idivl
repz
push
cmp
fstpt
filds
cli
sahf
ret
mov
pop
fidivrs
mov
xor
and
sbb
sbb
repnz
or
add
lret
lock
loope
hlt
ret
out
mov
sub
dec
fwait
ja
xchg
cmp
inc
jle
in
jns
xchg
jmp
les
jle
sti
popf
ficomps
int3
cwtl
fnsave
pop
push
cmc
cmp
sbb
cmp
lds
sbb
cwtl
adc
mov
and
or
add
jmp
add
rcrb
popa
push
mov
jg
je
xor
data16
xchg
xchg
mov
pop
mov
test
push
mov
mov
cmpsb
lahf
push
and
aad
or
ret
jo
sub
sub
lods
incl
rolb
mov
std
imul
cmp
lcall
outsl
hlt
bound
xor
inc
or
cmp
push
icebp
sub
icebp
xor
cmp
and
fadd
sarl
rorl
push
xlat
in
or
out
push
loope
jns
outsl
out
mov
stos
jl
jle
and
and
loop
inc
adc
or
stos
mov
pop
dec
cli
aam
xchg
ret
jae
rcll
ljmp
int
push
call
push
mov
stos
mov
cmp
mov
or
mov
sti
aad
adc
sub
call
push
xor
loopne
notb
mov
xor
jle
mov
in
and
and
addl
addr16
pop
jnp
int
stos
and
xchg
dec
pop
aam
outsb
mov
ss
jp
stc
push
xor
dec
adc
cmp
mov
stc
lea
push
pop
aad
iret
xchg
ljmp
jge
sti
dec
test
cmp
or
mov
mov
push
push
sbb
lock
mov
test
lret
popf
sti
lods
jmp
sbb
pop
cmp
jge
or
imul
in
stos
std
fisttpl
jmp
sbb
pop
cmp
jge
or
imul
xchg
stos
std
fisttpl
jmp
sbb
sub
or
imul
in
stos
cld
fisttpl
imul
insl
sub
sub
ret
loop
rclb
inc
les
gs
adc
je
inc
cmc
je
and
je
add
adc
repz
hlt
inc
hlt
jne
movsb
adc
xchg
pop
outsb
aad
lds
cmc
xchg
in
stc
xor
movsl
std
push
in
inc
fdivl
gs
xor
jg
sub
jns
ja
jge
xchg
es
or
sbb
dec
add
mov
push
ror
xchg
or
sbb
in
jns
les
loopne
adc
pop
das
lods
mov
pop
sbbl
push
hlt
dec
lea
push
arpl
sbb
mov
orl
fildl
rcrl
and
pop
xor
pop
xchg
fistl
sbb
inc
jno
add
inc
mov
or
hlt
popf
je
xchg
pop
test
push
or
xor
pop
add
hlt
enter
and
fs
mov
in
and
in
adc
and
hlt
inc
les
gs
scas
add
jge
insb
lds
in
xchg
sub
add
or
add
jne
shlb
xchg
jno
lods
je
ss
cmp
popa
int3
jno
in
hlt
and
jns
dec
call
sahf
je
add
inc
test
lret
or
fdivrl
mov
test
je
inc
cmc
push
in
xchg
xor
add
adc
in
hlt
inc
les
movsb
adc
xchg
and
inc
cmc
push
in
xchg
xor
add
adc
in
aaa
sub
mov
ljmp
pop
pop
mov
dec
test
or
mov
mov
sti
push
and
fidivs
fldcw
and
sbb
popa
pop
inc
cmp
sub
cmc
in
lret
mov
popf
call
jp
dec
repnz
lock
lods
adc
lret
test
cli
aam
or
dec
jge
fstpl
or
sub
jecxz
mov
das
jae
cwtl
in
cmpl
pop
cmc
mov
ss
in
xor
iret
lds
inc
scas
jb
dec
jno
aad
or
enter
stc
mov
arpl
sbb
add
mov
adc
push
out
repz
mov
lock
pop
jae
shrl
pop
shrb
pushf
ficoms
lods
mov
sub
xchg
jns
ret
notb
imul
enter
test
mov
ljmp
js
repnz
or
adc
ja
lock
call
int
cltd
dec
enter
inc
ret
xlat
push
mov
ds
popa
cmp
sbb
cltd
mov
and
or
mov
fsts
test
push
xchg
sbb
mov
mov
jo
xlat
adc
or
cmp
xor
sub
enter
pop
mov
repz
mov
add
stc
adc
mov
adc
sbb
jge
iret
loop
loop
mov
arpl
cld
cmc
add
scas
in
sbb
xchg
loope
push
test
rorb
mov
jp
xor
mov
addr16
push
xor
in
lods
dec
aam
mov
int
pop
fnstcw
cld
cmp
dec
in
or
cmpsl
and
ret
stos
insb
jmp
rorl
and
xor
outsl
xchg
mov
pop
dec
xchg
pushf
inc
push
mov
call
lock
lret
sar
insb
enter
inc
lock
add
jns
push
faddp
mov
mov
push
int3
pop
inc
push
pop
mov
add
mov
inc
cmp
and
adc
or
mov
fcoms
xchg
outsb
cmpsb
fcoms
mov
sbb
xchg
pop
sub
push
xchg
in
fadd
pushf
push
mov
ljmp
dec
mov
jnp
inc
loop
inc
shrb
jbe
ljmp
jne
icebp
cmp
int3
sbb
adc
or
jb
jns
sbb
mov
dec
scas
mov
pop
jne
push
in
dec
mov
fcmovu
inc
into
mov
scas
jecxz
cmp
lea
mul
lods
sub
cwtl
pop
fsts
push
jnp
pop
adc
inc
push
mov
jne
push
pushf
mov
cmp
in
mov
cwtl
popa
mov
pop
stos
aam
mov
or
mov
mov
adcb
sub
jns
mov
out
movsl
sbb
in
pop
imul
jns
mov
jne
jns
and
push
mov
lock
jmp
xor
insl
mov
or
enter
or
orb
pop
sub
aad
stos
mov
adc
into
push
gs
ret
push
cld
xor
xor
sbb
std
xlat
int
lcall
mov
xchg
cmp
or
jae
dec
push
push
push
mov
or
jae
pop
jno
mov
pop
inc
cmp
call
or
xor
inc
icebp
hlt
out
mov
and
jnp
push
sbb
clc
cmpsb
cli
add
xchg
in
jle
and
pusha
xlat
clc
jo
mov
shll
sub
imul
jg
sub
dec
pop
out
and
sbb
dec
test
jns
stc
aaa
stos
inc
pop
mov
sbb
sbbb
into
xchg
jne
popa
or
mov
push
mov
cmpsl
dec
icebp
or
add
fldl
ret
jg
mov
pop
inc
jo
sub
ss
adc
test
inc
lahf
int3
lcall
cli
addr16
pop
insb
test
mov
repnz
push
ja
shr
push
vpsubusb
sub
and
loop
push
jecxz
stos
shll
mov
xchg
xchg
mov
jns
adc
pop
outsl
jns
mov
insl
sub
jecxz
fstl
nop
enter
imulb
fidivrs
cmpsb
addl
xchg
mov
cld
outsb
push
inc
call
mov
jge
sbb
scas
adc
lret
xor
stc
sbb
fiadds
je
loopne
jns
das
cli
pop
ds
cmp
lcall
jg
jmp
mov
cld
sub
clc
into
pop
push
ret
es
int3
in
xor
aam
movsl
outsb
inc
into
jne
test
adc
mov
and
push
jl
fs
sbb
mov
fadd
dec
xor
mov
inc
addb
or
push
add
sahf
xchg
inc
push
push
inc
adc
mov
test
mov
dec
inc
clc
cmp
into
out
push
xor
sub
fistps
pop
sub
sbb
ret
mov
jb
add
fisubrs
int
xor
xchg
inc
mov
xchg
mov
and
or
dec
xor
push
mov
add
pop
mov
inc
mov
inc
divl
xor
push
pop
call
inc
adc
and
sub
mov
push
pop
dec
cld
fistl
pop
fdivrl
ljmp
mov
aas
mov
sahf
and
push
jbe
xchg
xorl
lods
pop
call
stc
pop
pop
sbb
ret
or
add
imul
ret
inc
add
xor
fs
sbb
repnz
cmp
mov
jmp
sub
pop
sahf
addl
and
push
and
lock
jp
and
mov
mov
je
xchg
dec
push
adc
lock
mov
dec
adc
mov
ficomps
dec
fs
sbb
data16
cs
xor
aad
and
jecxz
or
pop
and
jnp
xor
lret
sbb
push
xchg
int3
imul
lds
jecxz
test
add
cmc
mov
loop
dec
movsl
fsubr
popa
add
xchg
sub
cmp
cwtl
arpl
pop
sub
test
mov
and
pop
sbb
ljmp
lret
or
jp
xchg
pop
dec
lret
cmp
xchg
outsb
mov
push
add
shlb
fmul
insb
inc
adc
xchg
or
sub
fdivrs
ja
lret
sub
cwtl
into
mov
pop
fcmovbe
ficoms
les
daa
outsb
jns
pop
aas
out
lods
imul
adc
outsb
ljmp
push
pop
sub
sub
cmpb
xchg
enter
cld
ss
dec
dec
leave
inc
call
fsubrs
imul
cs
adc
das
ss
sub
lods
or
xor
rcl
lret
cld
mov
and
xchg
in
sbb
fnstsw
add
aas
das
push
inc
int
push
fisttps
ja
mov
sbb
dec
ja
mov
cwtl
testl
cltd
sub
mov
rcrl
sub
cmp
inc
or
dec
pop
adc
inc
mov
jl
push
fmull
les
out
push
fcom
leave
sahf
xor
dec
or
testl
cmc
fwait
adc
xor
xchg
mov
call
arpl
and
add
test
jmp
in
int
sbb
out
mov
mov
stos
imul
popa
inc
iret
jb
adc
mov
xchg
pop
unpcklps
movsl
loopne
mov
int3
jbe
cwtl
mov
push
das
stos
shl
jecxz
mov
pusha
icebp
inc
adc
pop
fwait
mov
sti
mov
mov
inc
mov
xchg
fsubrs
pushf
je
push
xchg
sahf
jb
fs
and
sbb
xchg
inc
aas
imul
dec
test
pop
divl
pop
add
xor
or
add
adc
daa
pushf
imul
shlb
or
push
mov
mov
je
call
sub
add
mov
in
adc
je
out
jecxz
outsl
frstor
aas
fsubl
sbb
aam
and
xchg
jbe
mov
notl
insl
stos
sbb
or
in
or
dec
cmpsb
ds
dec
insb
mov
test
stc
or
fsts
push
pop
aad
arpl
xchg
push
bound
dec
lds
insl
push
mov
add
dec
in
dec
inc
outsb
mov
loope
sbb
mulb
aas
andb
push
mov
movsb
jmp
insb
pop
sub
mov
sub
adc
mov
out
jmp
adc
inc
inc
cld
outsb
add
leave
fwait
lods
sti
jge
sub
mov
fcmovnu
das
jl
cmp
lods
subb
mov
imul
push
jo
xchg
fimuls
jg
hlt
fisttps
scas
test
in
popf
sub
lea
xlat
in
sbb
cmp
repnz
jecxz
sahf
test
into
sub
dec
push
cmp
fisttps
push
std
sbb
mov
and
pusha
sub
mov
push
outsb
adc
sbb
popa
xor
push
cs
aad
dec
leave
ror
addr16
mov
pushf
sub
inc
icebp
dec
pop
fs
and
xchg
inc
outsb
fsubl
js
les
pmullw
pop
icebp
add
pop
add
lret
and
es
sti
push
sbbb
lret
mov
fnstcw
cwtl
out
out
sbb
insl
dec
cltd
jmp
aaa
into
xor
inc
dec
cmpsl
inc
nop
sbb
cmc
call
and
lcall
out
call
cmp
pop
fiaddl
sub
mov
out
xchg
jno
jmp
subl
push
cmp
xorl
std
sub
cmp
je
ret
insl
sbb
jle
mov
out
enter
outsl
sbb
scas
sbb
sub
mov
icebp
jle
mov
inc
ror
mov
gs
jbe
pop
jmp
es
jle
xchg
xor
in
xchg
rolb
je
jae
xchg
repnz
mov
sbb
fisttpl
loopne
xchg
adc
xor
fisubrs
insl
push
xchg
scas
sub
mov
push
fisttpl
gs
xlat
int3
dec
lcall
fptan
sbb
mov
cmpsb
shl
or
mov
pusha
jg
cwtl
cmp
sar
and
push
or
sbb
pop
lret
loope
sbb
cmpsb
and
lds
fstpt
arpl
out
popf
jmp
add
aad
or
push
push
shlb
cld
sbb
stos
cmpsb
mov
mov
adc
fnstcw
mov
popf
cmpsl
inc
mov
or
ja
icebp
aas
push
sub
imul
popf
adcl
dec
mov
push
mov
pop
cmpsl
ret
xchg
xor
test
cltd
pop
jge
xchg
push
lock
shl
xchg
leave
int
inc
pop
mov
mov
pushf
adc
mov
pop
add
mov
xor
outsl
xchg
jne
inc
mov
inc
add
leave
jp
fsubp
test
lods
lds
jo
pop
jmp
or
xchg
popf
rclb
xorl
in
je
out
xchg
icebp
mov
cmc
push
mov
inc
xchg
stos
add
es
fnstsw
mov
dec
jecxz
dec
daa
mov
mov
jns
ss
sbb
bound
cmpsl
sahf
pop
lahf
mov
iret
shll
test
push
and
popa
mov
and
add
lret
xchg
pop
xor
icebp
into
fbld
es
inc
adc
and
repz
shrl
cs
jecxz
push
mov
mov
or
jmp
in
jbe
mov
mov
lea
inc
mov
lcall
in
daa
aaa
ja
dec
cwtl
sbb
pop
adc
xor
xor
xchg
outsl
mov
mov
or
push
xlat
xor
enter
loope
jmp
cli
fsubl
outsl
sub
mov
fdivl
push
in
pop
cld
fidivl
push
aam
lds
pop
pop
fisubrl
pop
vmovntdq
je
rcl
rcll
adc
or
arpl
dec
jne
mov
xchg
divb
fiaddl
xor
out
inc
jnp
cmp
mov
push
add
outsl
inc
les
inc
cltd
scas
and
iret
ljmp
shr
inc
repnz
and
stos
lods
mov
pop
mov
fisttpl
xchg
inc
mov
mov
js
or
outsb
inc
in
push
test
xor
jmp
add
je
test
sahf
dec
loop
test
dec
dec
cmp
rol
sub
rcrb
enter
sub
cli
rclb
mov
in
xor
pop
std
xor
sub
fistps
cmpsl
inc
sub
xor
xor
stos
xor
pop
dec
cmp
lock
adc
roll
stos
call
push
icebp
mov
pop
cmp
daa
or
in
push
cmp
add
mov
jns
rclb
sub
adc
rcll
push
cmpsb
mov
fcmovu
xchg
push
xchg
adc
add
adc
adc
out
mov
loop
js
popf
or
mov
xor
js
or
outsb
out
xchg
cmpsb
pop
mov
mov
mov
inc
add
int3
push
outsl
popa
sub
xor
arpl
js
insl
and
xor
or
mov
sub
xor
adc
push
adc
call
test
popf
xchg
pushf
xor
add
sarl
lcall
jns
pop
dec
sbb
add
fwait
test
stos
lods
jge
addr16
insb
imul
mov
mov
loope
xor
es
out
adc
jb
mov
jno
mov
nop
mov
mov
inc
rorl
shll
in
add
xor
lcall
popf
movsl
aam
dec
sahf
pusha
rolb
es
and
lock
into
out
push
out
and
cli
mov
cli
or
or
dec
or
cmp
in
sub
push
xchg
lea
pop
xchg
push
sub
pop
cs
out
push
push
fwait
push
inc
imul
aaa
sbb
es
mov
xor
lock
xor
jg
xchg
xacquire
xchg
pushf
mov
aam
stos
cs
imul
sbb
sbb
mov
and
pop
cmp
nop
xchg
popf
cmpsb
leave
add
insl
pop
sti
stc
cmp
xchg
jmp
pop
inc
sub
push
push
test
lcall
pop
add
out
dec
mov
mov
jne
mov
or
pop
aad
test
jnp
sub
dec
sbb
in
std
mov
jo
popf
sarl
in
je
push
rcl
mov
jbe
pushf
gs
pushf
push
outsb
pop
xor
jl
in
gs
movsb
inc
aaa
adc
add
lock
cmc
dec
sarb
adc
sbb
das
iret
sbb
inc
bound
sti
cmp
je
jmp
jl
xor
mov
cmc
sbb
dec
sarb
dec
in
mov
sub
pop
movsb
test
add
pop
dec
stos
orb
repz
push
jns
sub
mov
rorl
push
and
jnp
push
filds
pop
mov
inc
je
repnz
sbb
pop
xlat
in
adc
dec
xchg
imull
out
daa
cmp
jnp
sti
sub
js
repnz
lahf
gs
cmp
or
xor
xor
ret
xchg
add
arpl
pop
movb
ja
lods
stos
jbe
in
lcall
ljmp
mov
xchg
fldcw
adc
xlat
adcl
and
cmpsl
outsb
inc
push
fdivs
movb
xchg
outsl
mov
or
ret
sti
fcomps
stos
or
mov
mov
mov
push
jb
xchg
mov
sbb
xor
mov
jg
jle
fsubs
pop
int
and
pop
mov
mov
mov
push
mov
rolb
and
sub
jae
mov
imul
mov
sub
movsb
cmc
iret
out
dec
jmp
imul
fdiv
movhps
jge
js
or
jbe
icebp
xor
es
stos
xchg
rol
daa
out
stos
ljmp
or
xchg
mov
add
jmp
jns
inc
outsl
mov
adc
sub
in
mov
pop
add
testl
test
inc
call
sub
fdivs
push
push
mov
adc
adc
adc
mov
call
jmp
pop
popf
lea
lods
mov
lods
pop
mov
ss
fidivrs
xchg
mov
fs
outsl
cld
mov
add
lods
dec
frstor
mov
mov
cmp
jp
jle
mov
and
inc
out
imul
popl
and
cmp
ret
mov
cltd
in
out
mov
sub
stos
mov
inc
adc
mov
pop
cmp
roll
shll
pushf
incl
lahf
xor
dec
repz
test
call
out
xchg
aad
sbbl
jle
pop
rcrl
in
out
aam
psubw
dec
je
xor
lods
xor
sti
inc
cmp
sub
or
ds
mov
stos
jne
mov
test
les
lock
and
iret
push
fs
aaa
xchg
pop
cmp
xchg
jp
xchg
data16
ljmp
jp
es
and
mov
movsl
cmpsl
and
mov
movsl
inc
incl
mov
cwtl
aad
aad
loope
adc
cmp
xor
jg
mov
pusha
insb
jg
dec
aam
pop
pop
inc
and
jae
inc
push
adc
into
cmp
pusha
int3
inc
test
inc
aam
int
xor
fisubs
xchg
in
stos
hlt
lea
inc
fdivrp
lea
fwait
pop
lret
mov
cmp
shll
push
cmp
jecxz
test
fidivs
xchg
inc
rcr
js
pop
cmp
out
int3
inc
aam
dec
dec
dec
sbb
adc
or
outsl
popf
mov
mov
jae
in
pop
in
add
push
mov
pop
sub
sbbl
and
jb
and
mov
iret
mov
out
popf
out
enter
and
aaa
and
insl
mov
ja
sbb
scas
ret
data16
mov
aam
mov
xchg
mov
mov
sbb
jb
push
inc
out
pushf
ja
jmp
jle
xchg
les
mov
out
mov
scas
addr16
sub
outsl
popf
popf
pop
outsl
and
test
pop
inc
dec
in
cli
loope
dec
mov
ljmp
jl
xor
adcl
sbb
and
js
adc
js
divb
sub
imul
and
bound
and
mov
inc
xor
jg
mov
dec
pop
mov
leave
mov
lret
fwait
mov
cmpsl
in
mov
mov
testb
daa
inc
aaa
inc
pop
mov
rcrl
rorb
mov
jp
sub
jmp
mov
dec
aas
push
movsl
adc
mov
mov
lods
xor
loope
cli
call
mov
xchg
iret
icebp
jne
push
test
shll
mulb
inc
movsl
mov
cs
sarb
push
cli
ret
pushf
lcall
imull
jne
dec
push
movsb
pushf
lcall
jb
jp
loope
and
lods
push
lcall
add
inc
or
leave
fimuls
out
jecxz
add
leave
fnstcw
fldenv
sbb
test
cmp
or
sbb
inc
push
pop
ljmp
mov
cmpsb
arpl
out
sbb
xchg
sti
aaa
cmpsb
stos
adc
jle
sub
mov
push
sahf
inc
add
lahf
fnstsw
stos
pop
cmp
fs
mov
stos
jno
jg
and
cltd
jb
xor
push
in
mov
inc
lods
or
mov
mov
test
ja
cmpsb
mov
cs
or
and
xor
fistps
pusha
out
cmp
subb
adc
cmp
add
shlb
les
subl
jo
iret
les
cmp
sub
dec
add
flds
xlat
xchg
and
addr16
aam
movsb
adc
xchg
and
inc
cmc
push
in
xchg
xor
add
adc
in
hlt
inc
les
movsb
adc
xchg
and
inc
cmc
push
in
xchg
xor
add
adc
in
hlt
inc
les
movsb
adc
xchg
and
inc
cmc
push
in
xchg
xor
rclb
inc
bnd
movsb
adc
adc
fwait
aad
outsl
out
cmc
push
xchg
push
sbb
jmp
or
ret
popf
pop
ror
push
add
add
add
add
pop
add
add
jmp
add
sbb
loope
aad
xor
js
add
mov
enter
lcall
add
add
add
jae
xor
aad
aad
lret
add
pushf
add
add
add
cmp
icebp
add
add
push
add
popl
testb
add
add
add
push
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
popf
add
sub
leave
add
add
add
add
add
les
jb
mov
add
add
add
add
addb
add
add
sbb
add
add
mov
add
add
add
add
add
add
pop
add
add
stos
add
push
add
add
or
add
add
add
sbb
or
mov
add
movsb
add
add
add
add
jae
cmp
add
add
add
add
add
leave
add
les
jmp
lcall
add
add
add
add
add
mov
sbb
cmp
adc
add
add
add
add
pushf
add
add
add
add
push
add
movsb
add
add
add
fadds
imul
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
test
roll
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
add
pop
add
popa
add
add
push
add
das
add
push
add
add
invd
leave
add
add
xor
out
jnp
or
lcall
add
xor
sbb
and
ss
jl
jmp
lcall
add
or
mov
add
add
add
add
add
add
addb
add
pushf
add
push
add
aaa
add
add
flds
dec
add
add
cmp
testb
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
or
xchg
add
testb
add
add
add
add
mov
add
pop
add
roll
add
fildl
insb
add
add
add
add
add
mov
jo
xor
or
enter
fs
add
add
and
fadds
imul
push
adc
imul
add
pop
add
add
cmp
mov
add
add
push
add
add
roll
add
add
flds
adc
insb
add
add
add
add
push
add
add
xor
bound
enter
movsb
add
jp
add
test
add
pop
outsl
loopne
hlt
mov
sbb
pop
or
jecxz
lock
pop
push
mov
pop
rclb
inc
or
out
call
mov
push
insl
push
push
outsb
sbb
shrl
pop
lcall
test
jb
push
jmp
rcl
daa
xchg
push
stc
adc
hlt
pop
loopne
aas
fldt
cmc
xchg
test
jl
jo
pop
dec
rclb
nop
adc
pop
mov
stos
pop
cmp
jo
cmp
aad
in
call
nop
mov
mov
push
or
testl
mov
iret
stc
mov
shlb
and
jmp
jno
fisubrs
mov
mov
sahf
push
pop
push
sbb
cmp
std
mov
pop
into
fnsave
cltd
adc
mov
and
std
mov
pop
jb
je
hlt
push
cltd
jg
movsl
lods
mov
iret
out
in
jbe
stc
inc
pushf
pusha
lret
xchg
add
dec
popf
dec
mov
xchg
add
dec
insb
mov
cmpsb
xchg
and
mov
sbb
adcl
pop
pop
push
lock
into
sub
ss
jo
inc
insl
dec
movsb
or
aas
jg
out
cmp
imul
xor
jns
sti
arpl
mov
mov
mov
mov
shl
inc
shll
and
sub
mov
in
nop
inc
jg
shr
hlt
js
push
or
mov
mov
lods
xor
cs
mov
ss
mov
in
mov
gs
jno
repz
xor
or
out
cltd
or
xor
ja
push
xlat
aad
xchg
lcall
or
mov
test
frstor
stos
call
loope
mov
xor
out
dec
loopne
sbb
std
cmp
decb
fwait
jae
cwtl
ficoml
and
mov
not
out
jp
stos
sub
pop
xchg
and
jge
mov
cmp
icebp
lods
and
int3
jle
push
shrl
sahf
aas
add
push
adc
mov
cmpsb
sti
push
push
cmpsb
sbb
jb
cmp
adc
into
mov
fnsave
repnz
fstpl
incl
into
add
fdivs
pop
and
cmp
xorl
inc
call
cltd
jmp
sbb
mov
xor
faddl
dec
push
mov
adc
mov
or
loopne
testb
mov
cmp
jns
shr
gs
jno
es
aad
dec
addr16
fmuls
jae
adc
in
leave
lret
sti
fisttps
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
