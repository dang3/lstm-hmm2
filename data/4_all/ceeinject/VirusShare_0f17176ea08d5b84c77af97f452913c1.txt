call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rorb
ret
pop
repz
cmp
dec
lea
dec
mov
mov
xor
xor
mov
ret
sbb
dec
sbbl
mov
lcall
add
xor
and
imul
lea
adc
mov
sbb
push
enter
mov
mov
jns
pop
xchg
inc
andl
add
sub
out
push
push
adc
aaa
adc
aas
fnstenv
lds
xchg
test
push
lahf
ljmp
fdivl
xchg
lret
ret
lcall
stos
arpl
inc
es
ds
cmp
push
cs
pop
subl
mov
jp
push
popf
mov
xor
into
out
xlat
jle
outsl
jns
pop
cmp
ror
dec
es
push
mov
das
ja
cmc
pop
in
pop
sbb
test
pusha
flds
cli
jl
rcrb
push
and
repz
jecxz
ja
sti
pop
mov
add
xor
testb
add
and
mov
inc
fwait
push
cld
out
in
aaa
pop
mov
ljmp
insl
mov
sahf
inc
xchg
sahf
dec
cmpsb
pop
sbbl
or
testb
adc
jae
sbb
pop
bound
xchg
inc
mov
rolb
pop
mov
mov
lcall
add
xor
and
rorl
ret
sbb
sub
cmp
push
jp
mov
jae
arpl
xor
and
rorl
gs
xor
aam
sub
add
lds
mov
popa
ljmp
xor
adc
sub
xchg
cmp
jg
xchg
fs
and
xchg
mov
ret
dec
xchg
jecxz
xchg
ljmp
dec
lahf
leave
pop
pop
test
leave
in
or
adc
sti
push
rcrb
fstpt
cmpsb
icebp
imul
cs
mov
les
lods
and
pushl
mov
adc
lea
pop
push
orb
cmp
dec
pop
inc
out
add
xchg
cld
hlt
push
push
jno
mov
pop
nop
jecxz
out
mov
dec
and
jbe
cmpsl
sbb
xor
push
xchg
leave
jmp
std
push
xor
adc
stc
xlat
iret
cmpsb
push
stos
inc
aam
lcall
push
dec
mov
iret
dec
stos
xchg
movsb
lods
sbb
adc
xchg
xchg
xchg
lods
pop
cltd
and
or
cmp
xchg
lret
aad
add
mov
push
mov
hlt
lcall
and
adc
pop
std
sub
pop
jae
pop
in
or
mov
iret
pop
addr16
out
div
test
jmp
cmp
in
cmp
inc
inc
ss
cmpsb
orl
mov
rcrl
sub
jge
sbb
sbb
outsb
xor
insl
dec
insb
sbb
fsubp
lret
sbb
sarb
ret
testl
imul
sub
adc
fwait
out
pop
je
imul
hlt
cmp
lods
cmpsl
jl
dec
lds
shr
sahf
cmp
cmp
inc
aad
pop
jns
shlb
jb
pop
outsb
pushf
push
mov
loope
cs
pop
jne
inc
pop
fisttpll
dec
dec
push
mov
jns
push
sbb
pop
lods
cmpsl
jne
cmp
jp
orb
out
in
or
sbb
jo
add
pushf
mov
stos
arpl
leave
insb
ss
outsb
sbb
repz
dec
mov
dec
gs
inc
outsl
ljmp
jb
jne
das
cmp
dec
push
and
inc
add
push
mov
dec
pushl
shrb
js
mov
addb
jge
cmp
mov
test
fildl
jg
push
adc
sub
xchg
clc
lret
fs
pop
inc
or
shlb
test
cmp
or
movb
ret
loope
mov
adc
mov
aaa
inc
lea
popf
addr16
ror
xchg
sub
pusha
pop
push
mov
fnstsw
aaa
mov
lret
or
mov
and
mov
jmp
and
filds
arpl
adc
fcomp
push
xor
xchg
or
cltd
fs
mov
aaa
pop
clc
sub
push
data16
mov
fcomip
cwtl
ficompl
les
jecxz
lods
jmp
pop
add
gs
mov
xchg
pop
notl
lds
ljmp
call
pop
jnp
xor
xchg
xchg
shll
cmp
ljmp
sbb
imul
cmp
nop
cmp
lret
jg
in
into
push
push
jmp
ja
pop
test
xchg
inc
lods
mov
jbe
lods
movsl
test
loop
pop
loopne
inc
jg
mov
pop
xchg
es
or
jne
push
pop
mov
or
dec
mov
outsl
int
xlat
sub
push
popf
addr16
cmp
dec
es
into
jns
outsl
adc
and
dec
fiadds
inc
sub
lahf
add
or
pusha
push
adc
push
mov
inc
mov
pop
subl
imul
inc
xorb
mov
and
push
mov
iret
ret
xor
out
mov
cmp
iret
test
cmp
es
inc
fsts
ss
cmpsb
adc
fcoms
inc
fistl
jmp
and
mov
negb
mov
pop
xor
sti
xchg
inc
and
clc
out
xor
jle
jecxz
pusha
mov
je
add
inc
and
fisttpl
pmaxsw
mov
inc
jnp
ja
mov
sub
mov
push
inc
push
jl
add
mov
inc
mov
out
add
push
sbb
mov
push
dec
or
lea
xchg
in
push
jle
sahf
mov
test
addr16
aad
rclb
push
sub
lret
xchg
cmpsl
push
mov
aad
loop
bound
cwtl
shlb
popl
xor
dec
xchg
data16
and
or
xchg
jle
jle
addl
imul
in
and
jno
ds
sub
xchg
xlat
loopne
out
fists
mov
int
data16
clc
add
push
sbb
ficompl
into
mov
add
ja
xchg
push
push
lock
scas
inc
xchg
and
xchg
jbe
push
mov
pop
sar
jb
add
jo
roll
lock
dec
lods
std
mov
push
mov
cmp
mull
hlt
imul
and
jmp
pop
rcl
jnp
mov
mov
dec
fisubs
sbbl
stos
add
test
add
and
lods
popf
or
xchg
bound
loope
cld
and
in
lds
popf
ror
and
xchg
inc
les
mov
mulb
mov
loope
cmp
ja
fnstsw
scas
pop
mov
fwait
xchg
or
pusha
cmp
inc
sarl
mov
jmp
popf
outsb
adc
mov
lods
aas
test
ljmp
adc
dec
ret
push
push
dec
adc
jae
ss
movsb
sbb
loopne
add
jbe
xchg
mov
xchg
xor
test
xlat
fwait
push
pop
jecxz
gs
jp
mov
lret
cwtl
mov
cmpsl
in
xchg
jo
jl
call
pushf
lods
pop
dec
scas
dec
inc
xchg
cld
cmp
add
cmp
loopne
repz
and
xchg
scas
xchg
ss
fidivrs
adc
mov
lcall
jmp
mov
mov
jne
popa
cli
ss
lret
cwtl
jmp
loopne
andl
gs
repz
mov
sbb
daa
and
fbstp
dec
sbb
loop
sti
shr
repz
lcall
test
in
lret
aaa
sahf
cli
outsb
jns
push
mov
or
xchg
ss
jo
sub
lods
aaa
in
dec
mov
cmpl
shll
xor
pop
js
inc
mov
mov
je
jmp
xor
xor
mov
ds
fildll
stc
imul
daa
mov
lcallw
cld
dec
xchg
in
arpl
call
in
and
push
orb
aam
or
xchg
ret
into
or
push
or
ds
and
or
jp
mov
sbb
mov
popf
mov
das
xchg
push
cmpsl
lcall
test
adc
sub
out
clc
sbbl
mov
mov
mov
ja
in
outsb
psrlq
stos
lret
mov
mov
bound
out
imul
movsb
pop
sbbb
pop
dec
mov
mov
sub
std
pushf
movsb
pop
insb
and
or
jae
xchg
sti
jo
ja
dec
scas
testl
mov
pop
jb
je
ss
test
stc
push
jbe
fs
pop
popf
lret
lret
pop
mov
push
add
mov
xchg
mov
or
repnz
aam
in
push
in
jmp
cltd
push
out
int3
inc
xor
mov
and
xor
repnz
mov
or
lods
mov
ret
loopne
or
fdivrl
jae
jmp
addr16
cmp
cmp
mov
out
cmc
loop
jl
add
test
loopne
pop
jno
mov
jb
add
stos
out
pop
test
sahf
mov
mov
addr16
es
mov
out
mov
sub
enter
call
sub
hlt
jns
xchg
ljmp
loop
mov
pop
call
and
clc
push
subb
leave
and
add
das
movb
sarl
and
mov
jb
push
cmc
lahf
cli
inc
lcall
decb
addl
cmp
movsl
adc
mov
jnp
inc
adc
pop
loopne
mov
mov
int
mov
jbe
dec
jnp
rcrl
js
out
shll
in
sti
add
das
fxch
add
and
dec
jae
xchg
loope,pn
add
in
push
in
gs
mov
sbb
divl
add
cmpl
and
mov
lret
or
xchg
jmp
out
lds
jnp
sbb
int3
lods
mov
mov
int
clc
dec
jmp
cmpsl
rclb
iret
push
or
push
hlt
and
sub
pop
pop
sub
lret
add
mov
xchg
inc
fwait
icebp
xor
lret
cmp
lock
push
jae
pop
cmc
or
add
je
test
inc
cmp
xchg
jae
pop
sub
daa
movsb
out
add
iret
out
out
jno
sbb
cmp
push
sub
fists
ds
cmp
scas
ljmp
and
cmp
js
mov
add
jne
out
add
mov
pop
add
cld
mov
pop
scas
ja
stos
jmp
sbb
fistpl
lods
cmpsb
mov
xor
std
mov
in
mov
xor
sbb
hlt
icebp
jmp
inc
shll
xchg
outsl
ficoml
fwait
sub
je,pt
leave
das
jle
sbb
mov
fidivl
xchg
inc
push
loop
sbb
mov
aad
mov
loope
mov
xor
cmc
jg
fimuls
cltd
xorb
inc
xor
or
dec
xchg
lea
nop
cmp
xchg
lret
jns,pt
scas
mov
xor
and
out
popa
add
and
push
push
hlt
insb
jns
stos
ljmp
popa
jp
ds
in
aaa
jno
dec
outsl
pop
call
sub
jecxz
push
cmp
xlat
lret
inc
es
dec
push
sbb
lods
add
out
arpl
pop
paddb
xchg
and
stos
mov
imul
repnz
inc
gs
sbb
nop
cmp
aas
rcll
inc
or
dec
and
mov
scas
mov
fcmovu
pop
pop
fcmovne
sbb
in
je
leave
sbb
dec
sub
unpckhps
pop
dec
dec
jp
fistpll
rcl
xchg
sbb
aas
les
mov
mov
push
sub
and
sbb
mov
cmp
lahf
mov
loopne
leave
cli
andb
mov
inc
xchg
adc
in
lods
fucomp
mov
xor
jge
movsl
fmul
dec
adc
xchg
gs
lret
stos
sti
imul
pop
jno
ds
jnp
or
aad
xchg
sbb
add
lock
sub
fdivrs
xor
test
filds
int3
push
pop
repz
popf
cmc
sbb
andb
xchg
test
dec
pushf
cmpsl
int
into
jl
inc
mov
and
sarb
repnz
std
pop
pop
mov
inc
and
push
add
and
push
ret
decl
push
and
inc
xchg
xor
jecxz
ljmp
and
sahf
leave
in
mov
cltd
repnz
add
data16
ret
int
rcl
adc
sbb
push
pop
imul
scas
or
test
mov
arpl
xchg
add
mov
xlat
test
int
add
jns
mov
fisubrs
outsl
push
sub
inc
adc
fsts
dec
roll
push
pop
xor
int
adc
cwtl
aad
insl
push
data16
adc
pop
or
mov
mov
jne
cmc
xchg
sti
xor
idiv
fcompl
mov
cld
mov
mov
jb
mov
addb
lahf
mov
testb
xor
mov
std
out
mov
sbb
subb
mov
dec
mov
and
mov
xor
movsl
ret
adc
jl
testl
inc
sbb
sbb
sti
mull
mov
mov
fstpt
or
rcll
dec
mov
daa
or
mov
mov
jnp
lods
sub
mov
pop
mov
xchg
test
xor
int3
lds
xchg
loope
in
xor
dec
or
xchg
sarb
inc
cmp
repnz
insb
mov
inc
push
mov
push
cltd
sub
into
jns
cmp
add
pop
test
rcl
shrl
xchg
out
insl
fs
fists
jle
std
into
rep
imul
in
testl
mov
pop
or
lret
dec
popf
cs
fsub
and
push
inc
fimull
push
dec
sub
or
rolb
lods
shlb
pop
jo
shr
or
cmp
add
es
pop
scas
pop
add
sahf
inc
out
das
cmpl
inc
mov
aad
cmc
inc
mov
add
aad
mov
jne
and
pop
pop
cmp
js
ljmp
xchg
arpl
jb
and
mov
add
lea
dec
icebp
xchg
xlat
and
fstl
jb
xor
sub
dec
cmp
popl
ret
xor
testl
push
jbe
add
das
adc
and
adc
add
add
ret
lods
cmp
sti
fwait
sub
mov
sub
mov
adc
scas
push
insb
loopne
push
mov
pushf
repnz
mov
xor
fstpl
cli
fs
xchg
addl
sub
mov
or
mov
fwait
push
out
sub
daa
push
sbb
pop
fcmovnbe
push
dec
cmpsl
call
out
shrb
pop
clc
imul
xchg
inc
outsl
icebp
rol
sbb
jl
xor
jbe
xchg
cltd
dec
cmp
aaa
stos
jp
and
xchg
sbb
sbb
ljmp
jne
jne
xchg
outsl
push
test
js
comiss
popf
cmp
enter
and
fs
add
push
std
inc
add
mov
inc
sub
insb
rclb
aam
xor
les
mov
add
push
push
shrb
add
mov
in
fistpll
and
stos
pop
pop
gs
call
adc
gs
or
enter
inc
roll
test
in
sub
gs
test
lds
cmp
in
movsb
xor
sbbl
and
jg
sbb
cli
movb
push
mov
mov
ret
loope
hlt
neg
xchg
lahf
mov
mov
xchg
aad
dec
mov
or
gs
sbbb
dec
arpl
sbb
bound
in
push
out
scas
sbb
lcall
mov
repnz
loopne
shl
adc
or
popf
sbb
je
nop
jmp
cmp
addr16
xlat
mov
xor
std
imul
jp
mov
xchg
push
mov
rorb
sbb
jle
and
lahf
hlt
inc
enter
les
mov
addr16
fcmovnu
fs
dec
dec
mov
fistpl
xchg
sahf
xor
xor
or
shlb
out
int3
je
das
push
aam
dec
pop
sub
jns
les
and
inc
mov
testl
lcall
mov
sub
and
sbbl
repz
cli
test
push
push
or
inc
fnstsw
adc
popa
mov
cmp
arpl
rcr
dec
adc
lahf
dec
adc
outsb
sub
imul
sub
push
push
sbb
ja
fisubrs
stos
or
jecxz
movsb
push
mov
decl
ja
cmp
jb
out
jecxz
fsubrl
mov
pop
mov
sub
jecxz
aas
mov
js
lahf
xchg
and
ljmp
call
int3
imul
dec
cmc
jge
repnz
sub
push
mov
cld
pop
std
xor
in
xchg
mov
inc
lahf
cmp
lahf
dec
gs
fidivrl
mov
xor
mov
lods
jmp
ja
cmpsb
int3
imul
subl
push
push
jg
insl
jp
jmp
or
ljmp
and
jge
nop
andb
rcl
pop
sbb
xor
fsts
sub
jb
loope
and
mov
add
aad
mov
ds
xor
insb
rcl
mov
jns
int3
addl
aas
movsl
popf
pop
stos
sbb
pop
out
je
and
addl
sti
or
ljmp
add
faddl
pop
jo
lret
cmp
sbb
popf
stos
sbb
dec
mov
mov
mov
dec
push
sbb
sbb
jbe
jg
mov
sub
pop
xlat
test
push
andl
mov
mov
outsl
mov
mov
mov
rorl
inc
test
or
inc
icebp
cmp
push
jl,pn
daa
test
or
test
inc
push
in
pop
daa
lock
dec
xor
out
fwait
lock
or
pop
or
ja,pn
jg
sub
insb
clc
call
stos
out
std
fistpl
xor
subb
mov
fmuls
xchg
iret
imul
repnz
pop
jmp
test
sti
test
imul
sbb
push
or
sarl
jno
jnp
and
jmp
stos
lods
int
test
fdivl
and
test
jge
xchg
mov
mov
dec
sbb
adc
mov
xchg
scas
pop
in
imul
add
ret
xor
stos
jb
or
repz
and
adc
push
sub
dec
dec
jne
push
mov
xchg
loopne
dec
xlat
shlb
rcl
inc
mov
aas
arpl
scas
dec
insb
or
mov
ficoms
daa
faddl
cmp
push
pop
push
jp
lret
sub
push
test
lret
xchg
adc
xchg
mov
sbb
jnp
pusha
dec
jge
xchg
add
dec
and
mov
dec
outsb
bound
or
lods
shrl
outsb
js
scas
push
in
sti
scas
xchg
pop
push
lret
bts
xor
cmc
pop
sbbb
cmp
lock
or
or
arpl
loopne
add
cmpsl
sbb
xor
jmp
stos
mov
xchg
aaa
mov
test
pop
out
mov
outsb
push
pop
sub
cmp
ss
bound
ds
lcall
push
jmp
call
jae
adc
or
jecxz
in
rcr
jnp
iret
setg
pop
shr
mov
cmp
dec
inc
icebp
lret
add
jo
fwait
push
out
sbb
popa
mov
jb
xchg
test
or
mov
repz
mov
inc
mov
movsb
sti
dec
cmp
jl
repz
fidivrs
sub
icebp
adc
cmp
add
in
inc
ret
movsb
addb
jge
xchg
addr16
sbb
imul
sub
fcoms
sbb
mov
dec
cmp
mov
arpl
outsb
cmp
adc
bnd
fldln2
mov
call
xor
adc
or
jge
faddp
mov
xchg
adc
add
mov
test
sti
inc
pcmpeqd
mov
out
dec
dec
sti
adc
pushf
gs
jp
push
sbb
push
testl
add
push
test
out
lods
in
add
mov
push
mov
hlt
fcomps
pop
sub
popa
fld
mov
xchg
jns
jecxz
sub
loopne
mov
icebp
out
out
gs
adc
cmp
mulb
push
mov
adc
jp
mov
sub
jmp
jnp
daa
shl
push
addl
cmpsl
sub
mov
fiaddl
inc
int3
xchg
sahf
xchg
mov
clc
sub
insb
sar
lahf
sti
add
int3
clc
jl
ja
sub
jmp
jne
or
out
cmp
notb
cmpsl
pop
gs
lcall
sbb
subb
and
cwtl
and
lcall
test
or
jne
stc
mov
lea
mov
ffreep
push
arpl
sbb
imul
and
aam
mov
or
push
clc
add
scas
fcoms
cmp
cmp
push
jp
mov
jae
arpl
xor
and
rorl
ret
sbb
sub
cmp
push
jp
mov
jae
arpl
xor
and
rorl
repz
xor
add
xor
mov
subl
fidivl
jecxz
push
out
lahf
test
dec
xchg
pop
mov
and
fldcw
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fstps
stc
sub
nop
cs
xchg
int3
xchg
jns
imul
cmp
push
fldenv
jmp
jg
ret
test
adc
imul
cmp
sub
xor
mov
sub
xchg
cltd
fisttps
lret
pop
cld
push
or
sbb
sbb
inc
push
lods
mov
add
aam
js
fbld
or
shrl
lahf
cmp
push
outsb
or
push
fsts
cltd
loop
cmovne
les
imul
outsl
inc
js
mov
mov
lret
jae
negb
scas
pop
mov
mov
sahf
sbb
jae
subl
fldenv
mov
icebp
jecxz
fwait
loopne
test
arpl
bound
mov
stos
mov
pop
jl
adc
data16
test
rcrl
inc
and
xor
lods
in
xor
ret
xchg
push
test
sbb
and
mov
add
std
bound
incb
xlat
sbb
jmp
repz
movsl
dec
cmc
jns
imul
inc
sub
mov
xchg
out
stos
sub
jbe
ja
jp
or
pop
pop
add
scas
out
repnz
sar
in
mov
add
imul
inc
cmp
rorl
mov
and
jns
imul
cmp
push
fldenv
jmp
repz
and
jns
imul
cmp
push
fldenv
xchg
mov
jmp
jecxz
pop
inc
gs
xor
cmp
xlat
cwtl
xor
mov
fistpl
filds
mov
xchg
jns
out
fsubl
push
inc
mov
stos
dec
daa
repz
aas
stos
in
xor
fidivrs
mov
mov
shlb
jge
mov
mov
lcall
test
mov
xor
xchg
adc
mov
push
js
add
nop
push
call
adc
sub
xchg
mov
aad
mov
testl
sbb
and
pop
out
add
movsb
inc
jmp
xorl
sbb
mov
sarb
xchg
mov
sub
xchg
mov
into
ret
mov
lock
mov
mov
fwait
xchg
subb
outsl
pop
xor
jle
and
es
outsl
inc
push
mov
icebp
stc
mov
mov
lock
lds
ret
addl
mov
repz
dec
mov
fwait
scas
out
mov
dec
bound
adc
xor
xchg
sbb
into
stos
ficoml
push
sub
es
je
andl
jns
push
adc
sub
mov
xchg
jnp
out
les
or
data16
cmp
dec
jbe
jbe
cwtl
adc
les
lret
and
sbb
inc
jbe
in
and
gs
mov
push
mov
and
imul
mov
daa
mov
aad
mov
mov
mov
inc
call
xor
mov
lock
mov
inc
fisubrl
mov
stos
rclb
pop
xor
jp
mov
pop
or
pop
mov
or
inc
sbb
popl
ret
rorl
pusha
inc
fs
loope
mov
mov
cli
addr16
add
mov
pop
aaa
rcrb
dec
in
cwtl
push
out
movsl
fcompl
into
xor
inc
fisubs
sbb
stos
stos
ja
aas
imul
lods
cmp
test
sahf
push
stc
mov
mov
mov
lret
xchg
cmp
push
lahf
lods
int3
mov
jmp
lea
dec
sbb
pop
add
adc
cs
jle
push
mov
aad
dec
cltd
push
lret
stos
pop
pop
mov
leave
sbb
lahf
push
fcoml
jmp
lret
jge
orb
jle
cmp
mov
mov
jle
ret
andl
jae
pop
lods
inc
mov
dec
adc
add
fadds
out
xor
or
out
mov
mov
aaa
adc
add
mov
mov
add
mov
out
add
loop
into
mov
jno
lea
rol
addr16
rclb
push
call
push
cmp
mov
fimuls
test
mov
jae
sbb
aad
mov
lahf
fbld
mov
ret
test
test
vunpcklpd
or
mov
inc
test
and
aaa
nop
jge
enter
xlat
add
xchg
sbb
cmp
sub
xchg
push
xlat
xchg
pop
adc
xor
int3
jmp
jle
jmp
lcall
add
loope
orl
js
pop
mov
push
dec
and
das
mov
or
pop
rcrl
mov
pop
aas
sub
xor
inc
mov
mov
js
cmp
push
xor
cwtl
jno
mov
in
and
out
jge
or
pop
mov
jecxz
cltd
dec
cmp
jle
push
aas
mov
or
mov
mov
jno
sub
ret
cmpsb
sbbb
push
sub
dec
inc
std
push
enter
pop
xchg
outsl
lahf
cmc
xchg
pop
mov
call
out
imul
out
jl
pop
sbb
xor
les
push
daa
cwtl
sub
push
or
cld
test
lods
push
lods
push
hlt
fucomi
sti
mov
in
je
push
stos
adc
scas
mov
sub
xchg
notb
push
or
stos
and
testb
std
cmc
lock
mov
add
in
push
xor
fs
pop
jb
push
jmp
imul
aaa
xor
xchg
mov
sub
xchg
add
rclb
leave
fabs
jno
cmp
mov
ss
out
fdivl
aaa
shrl
inc
adc
push
movsb
dec
add
addr16
mov
xor
icebp
test
lods
push
dec
push
int3
pop
stos
es
ret
orb
les
dec
push
mov
scas
ja
addl
jnp
js
jae
cmp
cmp
outsl
xor
mov
or
push
push
sbb
push
push
mov
rorl
cmp
cs
out
mov
mov
sbb
movsb
adc
movsl
in
push
insb
inc
jle
xchg
pushl
in
push
push
jmp
insl
pop
lods
mov
inc
mov
adc
mov
xor
daa
xchg
js
push
pop
rcrb
fnstsw
dec
sbb
inc
mov
scas
or
pop
and
outsl
bnd
pop
xchg
stos
inc
sub
divl
daa
mov
lea
jnp
jp
dec
pop
icebp
mov
pop
sbb
add
std
repz
xlat
add
out
scas
mov
mov
repz
std
sbb
dec
push
jbe
jle
inc
mov
add
out
insl
adc
push
lret
pop
adc
shlb
mov
pushf
fucomi
lcall
lock
ljmp
sbb
and
popa
jno
data16
pop
and
xchg
adc
inc
into
ds
jnp
mov
das
scas
cmc
out
jb
and
pop
cmp
and
push
out
leave
mov
scas
insl
rolb
sbb
ret
adc
cmpsl
and
dec
testb
lods
pop
xlat
icebp
fists
pop
lahf
inc
push
cs
stos
cmovs
data16
pusha
sub
add
nop
fisubl
daa
cmc
insb
mov
jb
mov
adc
sti
sub
mov
sahf
mov
sbb
mov
sbb
mov
dec
test
xor
mov
fsts
add
inc
mov
jmp
in
dec
jecxz
popf
mov
push
xor
jns
or
cmp
sub
test
adc
addr16
jb
xchg
and
inc
push
mov
lret
loope
lods
inc
sarb
out
jp
mov
inc
inc
lods
pusha
sub
fldcw
imul
xor
inc
je
mov
popl
pop
in
and
mov
arpl
int3
orl
ret
mov
mov
dec
adc
jne
fdivl
rclb
das
bound
push
mov
sarl
push
dec
xor
jae
mov
ret
dec
in
popf
aaa
pop
enter
mov
ficoms
cmp
jbe
pushf
cwtl
outsl
ljmp
mov
aas
rcrb
iret
fiadds
xlat
fstps
mov
std
fnstsw
cltd
out
adc
sub
jge
sbb
in
pop
fwait
jl
out
add
fdivrl
jmp
cmp
aad
std
sub
cltd
pop
js
push
or
cmc
sub
dec
loop
inc
repnz
mov
inc
stc
ljmp
into
sbb
sbb
pop
rclb
pop
enter
arpl
sahf
inc
add
enter
cmpb
pop
fbld
or
dec
adc
or
test
cltd
sbb
js
jo
inc
xor
sub
imul
xchg
dec
cmp
push
inc
or
loop
pop
jb
mov
imulb
fidivrs
jno
aad
stc
mov
jo
pusha
dec
cmc
hlt
jmp
mov
rcll
ljmp
repz
out
cs
fildll
lret
loope
loop,pt
mov
stc
mov
outsb
push
mov
sbb
out
lahf
adc
out
bound
pushf
mov
subl
std
mov
dec
outsl
and
stos
adc
scas
mov
dec
inc
cli
add
mov
inc
ss
push
dec
xchg
repz
aas
test
movsb
xchg
xor
mov
mov
add
movsl
dec
pop
add
fildl
stos
sub
imul
lods
mov
idivb
xlat
mov
lahf
cmp
and
outsb
push
push
les
add
cmpsb
add
xor
inc
stos
or
stc
into
add
cwtl
sarl
scas
fdivl
or
test
sub
outsb
outsb
adc
lcall
icebp
in
mov
mov
push
adc
cmp
mov
fs
mov
inc
adc
aas
adc
sbb
fwait
fs
insb
and
pusha
add
test
mov
mov
sbb
cmp
shrl
fnstenv
das
adc
call
xor
mov
cmp
fpatan
or
lea
or
lods
ficoms
mov
sahf
test
les
aaa
cwtl
out
clc
ljmp
jge
sub
rorl
repz
push
pusha
adc
cmp
ljmp
pusha
or
sbb
mov
repz
scas
dec
aad
int3
repnz
inc
push
pop
xor
shl
sub
jbe
jo
xchg
pop
jno
mov
adcb
out
dec
inc
aad
out
jno
test
insb
pop
ja
inc
add
or
rcll
xchg
sub
mov
mov
adc
sahf
push
mov
stc
into
es
cltd
out
js
and
inc
icebp
and
and
fisubl
fcompl
das
jae
aaa
jbe
push
inc
mov
ja
icebp
push
lret
dec
jb
imul
pop
and
push
sbb
data16
add
cwtl
xchg
mov
mov
mov
push
xchg
add
daa
jne
pop
xchg
push
mov
mov
and
xor
mov
mov
mov
lea
pushf
cmpsl
lcall
mov
imul
jecxz
sbb
mov
add
ja
mov
jle
pop
ficomps
adc
fdivrl
dec
push
int
lcall
xchg
mov
gs
cmp
adc
js
jbe
and
mov
cmp
cs
ror
subl
popf
jne
add
pop
inc
jae
sbb
and
push
jg
std
enter
aas
es
mov
sub
mov
pop
popa
hlt
push
stos
dec
imul
xor
loop
into
daa
lods
add
jns
insb
rolb
add
xchg
cwtl
mov
mov
mov
dec
std
sbb
divl
test
dec
xchg
les
je
ret
push
lahf
mov
inc
cld
hlt
sti
cli
add
jl
mov
inc
cmp
fwait
lods
xchg
lret
pushf
mov
enter
and
pop
outsb
int
icebp
mov
ja
in
sbb
xor
sbb
into
lea
inc
shrb
mov
in
cwtl
sbb
or
inc
mov
cmp
pop
xchg
inc
sbb
lea
aaa
xchg
push
push
push
test
xchg
leave
aam
mov
and
sub
pop
lcall
daa
dec
and
rcrb
test
push
cmp
loopne
stc
add
sar
lret
pop
stos
faddp
sub
dec
scas
mov
out
fwait
mov
repz
pushf
out
add
cli
cmp
stos
mov
xlat
add
jl
gs
int3
sbb
adc
jl
inc
push
pushf
and
mov
sub
add
fdivrl
xor
or
loop
cmp
and
xor
cmp
fisubrs
inc
xor
testb
mov
fildll
popl
pop
add
cmp
test
into
xchg
and
add
mov
or
daa
inc
aad
cmp
dec
fwait
xchg
cmpsl
or
pop
mov
outsb
ds
shrl
mov
mov
push
cmp
dec
push
mov
add
sbb
or
shll
lds
cmp
jmp
sub
dec
mov
mov
and
xor
xlat
bound
rol
test
arpl
add
in
mov
pop
push
scas
cmp
stc
outsb
sarl
lret
notb
adc
push
jo
xchg
repz
divps
int
mov
add
inc
ljmp
popf
add
push
aaa
dec
mov
movsl
in
lods
mov
adc
jg
and
xchg
out
xchg
xchg
add
je
loope
xlat
ffreep
call
scas
lret
mov
adc
cmp
imul
ljmp
cltd
dec
mov
add
sbb
mov
rcrl
or
lret
shr
add
rclb
push
sub
cmpsl
ficoms
popf
sub
and
fdivrs
leave
add
xchg
adc
or
mov
out
dec
pop
xor
out
mov
popf
dec
cmp
into
imul
push
dec
ss
lock
mov
and
dec
repnz
stc
outsl
js
daa
ss
js
inc
pusha
xchg
shrb
xchg
imul
pop
push
or
pop
mov
jge
ss
fnstsw
ds
mov
jb
sbb
int3
add
scas
push
in
int3
sub
inc
pop
and
stos
cld
adc
stos
fadds
fiadds
and
pop
push
inc
call
das
in
movsb
lea
loop
gs
xchg
and
cmp
push
clc
cmpsb
push
lcall
pop
mov
push
mov
cmpsb
dec
add
or
jl
sbb
xor
add
mov
or
pop
adc
imul
negb
adc
ret
cmc
nop
popf
dec
movsl
mov
pop
inc
imul
cmpsb
sub
push
adcb
stos
and
out
mov
push
jp
fiaddl
orl
pop
pop
or
shl
aaa
push
push
xchg
or
lcall
ret
or
je
shlb
inc
subb
xadd
aaa
sti
add
push
adc
pop
push
xchg
cwtl
push
mov
stos
mov
scas
and
sub
pop
test
and
out
pop
push
mov
jo
stos
out
inc
inc
scas
adc
mov
mov
dec
xchg
vpaddd
mov
mov
out
int3
mov
adc
outsb
les
fistpl
not
jae,pt
adc
sbb
mov
inc
pushf
scas
std
jmp
lods
jbe
xchg
gs
shrb
test
fcoml
test
cmp
xor
cmp
into
pop
or
jno
daa
xchg
or
gs
daa
push
stos
mov
dec
adcb
movsl
stos
imul
push
sub
pop
jmp
dec
ret
sbb
pop
inc
cwtl
adc
call
mull
cwtl
les
subl
adc
enter
data16
inc
stc
and
inc
andb
jnp
insl
test
loopne
cmpsb
repz
fstl
mov
sub
or
andl
cmovb
iret
inc
out
nop
push
movsb
mov
aaa
shll
insb
push
xchg
stos
outsl
dec
mov
and
lret
hlt
popa
outsl
mov
or
adc
ret
hlt
jae
pop
call
push
xchg
jo
or
mov
mov
push
imul
xchg
ficoml
sbb
or
xchg
lret
aam
or
in
call
mov
xchg
movsl
or
cmp
dec
adc
shlb
push
stos
aaa
mov
icebp
mov
loopne
mov
cmp
cmpsb
cmp
lock
mov
cmp
pop
shr
xor
pop
pop
mov
js
cltd
outsl
es
add
mov
jne
imul
mov
daa
jns
xor
fmuls
mov
sub
push
stos
add
in
or
and
mov
and
movsl
sub
into
or
cli
cmp
out
dec
jne
outsl
mov
ret
int3
ds
xor
jb
inc
mov
data16
in
gs
popf
fistpll
mov
movsl
ljmp
rcll
cwtl
or
out
sub
add
jp
xchg
push
test
xchg
std
sahf
add
pop
dec
test
arpl
loop
mov
push
mov
push
mov
sub
fldt
dec
loop
sub
fisubrl
ss
cmp
pop
xor
cmpsl
and
jo
loop
lods
mov
fwait
imul
fwait
sbb
cmp
and
pop
loopne
icebp
nop
inc
jg
mov
rcl
adc
subl
daa
xor
fs
sub
xchg
or
pop
mov
mov
cmp
adc
inc
dec
push
test
xor
mov
inc
out
popa
pop
ljmp
push
pop
mov
lock
add
aad
dec
in
sub
loopne
cltd
pop
sub
mov
jecxz
loopne
jl
decl
popa
data16
repnz
dec
jmp
fldenv
mov
lcall
in
push
xchg
mov
ficoml
inc
mov
pop
in
jbe
push
fildl
adc
mov
xor
rolb
ja
push
jne
cs
enter
dec
iret
into
add
xor
int
cmp
and
cmc
jb
pop
ret
or
cld
add
mov
mov
ds
ja
imul
insl
sub
daa
mov
mov
cwtl
adc
popf
sbb
mov
dec
cmp
or
cmp
cmpb
lea
xor
data16
push
nop
and
out
insl
mov
insl
push
mov
push
dec
pop
push
jle
lock
dec
and
xchg
mov
xchg
fstps
inc
cmpsl
scas
push
ds
push
mov
jo
mov
ret
xor
shll
push
je
cli
push
add
out
mov
push
popa
push
and
add
popf
add
push
cmp
outsb
jmp
mov
mov
ljmp
test
mov
fildl
loopne
jg
mov
xlat
and
xor
mov
pop
push
jne
inc
clc
and
mov
stos
xchg
icebp
sti
rcrl
movsb
test
mov
xchg
push
or
xor
push
jne
repnz
jmp
mov
adc
insb
push
mov
sub
mov
pop
sub
std
pop
imul
addr16
mov
repnz
jo
ficompl
and
pop
sbb
sbb
push
int
mov
mov
enter
pop
jecxz
xchg
cmpsb
pop
mov
mov
sbb
mov
jns
sub
sub
pop
add
pop
adc
dec
pop
out
cmovnp
mov
fbld
xor
adc
in
jne
xchg
sub
mov
xlat
dec
mov
mov
or
cmpsb
cmp
negb
jge
push
jge
pusha
jbe
stos
xchg
int3
sub
int3
xor
inc
enter
adc
pop
loop
int
repnz
out
call
lods
pop
push
sub
outsl
in
cwtl
enter
aaa
push
adc
insb
dec
sbb
in
mov
or
xchg
pop
xor
push
cmpsl
aaa
mov
cmc
mov
stc
cmp
dec
imul
and
rcr
pop
jb
inc
mov
sbb
cli
inc
add
inc
adc
fsubrl
decb
fadd
es
push
push
int
das
iret
push
pop
jecxz
add
test
cli
mov
sbb
adc
pop
push
mov
dec
stos
aad
mov
fcomps
daa
mov
sub
cmp
sub
and
push
pshufw
mov
arpl
xchg
mov
mov
xlat
adc
xchg
cwtl
movsl
cmp
arpl
out
pop
fisttpll
fdivs
lock
jecxz
int3
aad
and
inc
add
shl
test
div
xchg
push
sbb
cs
jo
arpl
aad
rcl
stos
fidivs
adc
outsb
xchg
rcll
dec
xor
jne
or
push
rclb
jg
inc
fiadds
sbb
loop
scas
mov
jb
push
cmpsb
es
stos
jns
test
sbb
adc
push
add
push
dec
dec
fnstsw
add
sub
push
es
cs
push
inc
add
popf
mov
aaa
clc
daa
enter
pop
jg
lods
ret
pop
jo
push
in
pop
xchg
jno,pn
sbb
and
cwtl
or
or
out
mov
das
xor
and
cltd
inc
add
daa
pop
cld
and
xchg
mov
adc
inc
pop
imul
inc
cltd
out
das
xor
dec
push
leave
adc
test
sub
jns
out
jmp
repz
and
jns
imul
cmp
push
fldenv
jmp
repz
and
jns
imul
cmp
push
fldenv
jmp
pop
mov
sti
dec
xor
push
jae
arpl
push
fldenv
jmp
repz
shll
add
outsb
jmp
mov
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
inc
push
push
arpl
jne
dec
jl
push
add
rcl
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
std
cmc
sub
xchg
mov
inc
dec
push
jnp
imul
or
fcmovb
lock
cld
ret
in
sub
cmp
arpl
adc
loop
hlt
mov
push
stos
lea
cs
push
lods
fstpl
cmp
lock
cmpsb
aas
inc
mov
sub
lock
pop
mov
inc
scas
pop
nop
sysexit
jae
or
repz
xchg
xchg
sub
fstpt
xchg
mov
add
stos
dec
push
and
cmpsb
adc
dec
xor
dec
cmp
sub
popa
or
jl
xchg
imul
mov
adc
fiadds
cld
lea
pushf
outsb
dec
ret
adc
loop
add
jnp
xchg
xchg
pop
movsl
mov
fsubs
adc
shrb
pop
xchg
test
mov
inc
dec
push
arpl
jne
add
sub
sti
in
cmc
fwait
test
fsubrl
inc
ss
gs
jne
pusha
jne
outsb
arpl
popa
ret
mov
xchg
addl
and
xor
add
imul
push
orb
nop
sub
xchg
aad
xlat
fisubl
add
sbb
dec
sub
adc
ret
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
addl
mov
inc
jl
fmull
jno
and
xchg
dec
shld
nop
js
pop
jmp
fnstsw
pop
stos
add
push
insl
cmpsl
cwtl
dec
mov
or
mov
les
or
enter
lcall
ret
dec
xor
sub
loope
adc
lock
fbld
cltd
jg
xchg
xor
pop
mov
cmp
cmc
scas
icebp
bnd
idivb
mov
stc
stos
rcll
cmp
shlb
icebp
cmp
aaa
stos
fs
jae
cmpsl
jno
mov
call
cwtl
stc
pop
jge
jmp
gs
mov
lcall
mov
arpl
xor
notl
or
repnz
jae
pop
push
pop
hlt
shr
clc
das
lds
aad
cltd
push
xor
repz
lock
popa
jmp
lods
push
add
xor
arpl
sub
mov
fs
cwtl
mov
rcr
mov
mov
cs
in
fstl
repnz
mov
sahf
dec
pop
mov
xor
dec
cmp
mov
imul
call
mov
mov
shrl
lods
xor
les
in
lock
mov
cmp
test
movsl
arpl
xchg
popa
gs
jmp
jno
jge
movsb
stos
jns
daa
leave
mov
push
ljmp
int3
inc
sbb
scas
pusha
daa
lods
inc
dec
ja
adc
jp
sbb
fucomip
add
int
mov
mov
push
jl
lock
jmp
adc
xor
or
and
xchg
pop
in
fnsave
cmp
cmc
mov
outsb
push
mov
inc
xor
xor
xlat
or
in
cwtl
shlb
push
pop
push
test
imul
jbe
adc
xchg
loop
cmc
dec
imul
and
rcrl
addr16
jmp
jne
std
inc
daa
mov
sub
jp
enter
outsb
dec
lcall
das
jnp
add
xor
lret
pop
push
icebp
cmpsl
push
adc
mov
popa
int3
sbb
fnstenv
dec
adc
mov
and
orb
ficomps
shrb
jns
sub
insl
xchg
dec
and
lahf
loope
enter
sub
xchg
sbb
addr16
bound
addr16
cld
popa
push
push
outsb
mov
jns
ret
sub
inc
loope
cltd
add
ds
jg
inc
lret
out
push
enter
cmp
aam
dec
push
mov
mov
mov
inc
lahf
das
loop
dec
cmp
mov
pop
jle
adc
inc
in
ret
iret
sti
mov
pop
mov
add
sub
lock
lret
std
inc
jae
loopne
or
and
stos
outsb
stos
cs
jno
mov
lods
popa
imul
pop
cmp
dec
ljmp
or
mov
or
xchg
lods
lret
lock
out
sbb
rorb
ror
mov
xchg
and
jmp
mov
sub
loop
fwait
adc
mov
ljmp
sub
mov
or
int3
hlt
sbb
and
jb
test
mov
mov
add
mov
xchg
insl
or
mov
push
mov
or
aad
push
fbld
sbb
or
cmpsb
bound
xor
in
push
std
and
movsb
mov
filds
jnp
out
cmpps
decb
dec
add
dec
xor
shlb
jnp
push
push
xor
push
pop
sbb
jecxz
loopne
mov
xor
mov
sub
in
add
push
adc
or
mov
sub
insb
out
xchg
test
and
dec
xchg
bound
pop
xor
in
daa
xchg
xchg
xchg
je
push
adc
xor
mov
and
int3
inc
xchg
jno
nop
mov
mov
jae
mov
subl
popf
mov
std
cmp
sti
stc
and
mov
jns
int
fdivs
or
out
adc
sbb
and
std
sub
lahf
push
or
js
and
ret
adc
jecxz
mov
pop
loop
dec
iret
cmp
sbb
movsl
jne
insl
outsl
lea
mov
mov
mov
clc
bound
sub
cmp
xor
jmp
and
or
daa
and
mov
sbb
dec
cmc
dec
pushf
sub
or
rorl
pop
pop
xor
pop
jle
dec
push
rcrl
sbb
cmp
sub
gs
dec
ljmp
and
pop
lods
fwait
add
xor
ds
jecxz
scas
into
push
mov
scas
mov
xchg
cmp
jo
xor
inc
fdivr
filds
sub
in
arpl
cmc
xchg
pop
fidivrs
mov
aas
mov
movsl
push
mov
test
mov
in
jbe
icebp
in
pop
jl
test
xchg
and
lcall
fcomps
scas
push
mov
push
mov
push
in
and
incl
loop
cmp
pop
mov
inc
mov
rcrl
xchg
adc
inc
stc
icebp
mov
add
dec
push
add
movsb
stc
dec
add
jae
outsb
pop
andl
pop
or
dec
mov
xchg
push
test
in
mov
nop
movl
jecxz
add
inc
fcomp
add
test
push
insb
cltd
pop
jge
sub
es
mov
in
or
push
movsb
je
adc
insl
xlat
cwtl
xor
mov
dec
test
mov
mov
out
mov
sarl
push
jae
ljmp
jnp
mov
add
fldl
aad
insl
cmp
dec
mov
push
pop
mov
das
aas
cs
push
xor
in
adc
in
bound
addr16
xor
loopne
sub
call
ja
repnz
ljmp
das
pop
pop
dec
inc
jge
mov
stos
mov
sbb
popf
inc
adc
jnp
cmp
mov
shlb
out
sbb
cmp
lds
test
ret
movsb
in
inc
inc
mov
les
mov
hlt
sub
or
insb
outsl
arpl
xchg
jl
jae
mul
cwtl
orb
clc
shll
dec
mov
out
bound
mov
jle
jmp
inc
add
scas
dec
stc
or
sub
mov
ret
out
insb
inc
out
mov
add
inc
push
mov
mov
jp
dec
into
push
sbb
les
scas
push
lahf
in
xchg
mov
pminsw
push
jp
pop
and
pusha
cmp
inc
jp
andl
daa
or
cmp
out
scas
int3
shl
fisttpl
jne
add
stos
mov
add
jae
rclb
pop
sub
xor
mov
xchg
scas
idivb
test
mov
rcr
icebp
xchg
popa
xor
mov
and
lock
jg
fs
push
test
push
xchg
mov
cmp
stc
dec
xchg
int
adc
adc
pop
mov
mov
inc
es
sub
dec
push
fcmovb
pusha
push
inc
int
jne
pop
imul
rcll
xor
data16
or
xor
lahf
mov
fstpl
or
ds
or
fsts
mov
mov
inc
lret
pop
cmpsl
sbb
jmp
cmpsl
cs
or
arpl
dec
pop
pop
test
sbb
mov
push
xlat
nop
sti
push
adc
test
loop
mov
cli
xor
icebp
push
gs
ds
js
inc
add
in
xorb
jbe
testb
xor
pop
dec
ret
clc
inc
repz
jmp
mov
jne
sbb
imul
push
push
mov
jae
cli
movsb
cmp
mov
xor
push
lock
addr16
shlb
xchg
mov
repnz
mov
leave
outsb
jbe
sbb
push
lods
mov
pop
adc
ja
add
movsl
lea
popa
in
mov
add
sbb
test
jo
int
test
lock
jno
rclb
test
dec
jmp
sub
outsb
dec
pop
pushf
loopne
loopne
addr16
repnz
xchg
cwtl
mov
sbb
mov
push
xchg
inc
mov
cwtl
mov
lock
mov
sbbl
out
ja
jnp
xchg
out
js
xchg
movsl
cmp
jno
adc
enter
xor
test
jecxz
and
arpl
in
pop
dec
cmpb
adc
jb
cmp
inc
xchg
fcompl
adc
repnz
add
mov
in
inc
push
adc
sub
lret
or
ret
xchg
xchg
jno
inc
les
xor
and
adc
adc
shlb
data16
out
fdivrp
mov
outsl
popf
push
pop
stc
mov
inc
rcrb
sub
inc
es
add
hlt
dec
pop
test
fsubrp
pop
push
add
xchg
cmc
mov
ss
adc
sbb
idivb
and
ror
stos
ficomps
lock
aam
dec
aas
maxps
add
addr16
in
mov
out
repz
xchg
push
mov
xchg
and
add
sti
out
inc
sbb
rcrl
fisubs
dec
and
dec
xchg
aas
xchg
incl
and
movsl
inc
ss
pop
loopne
push
sub
je
mov
xchg
sarl
push
sub
or
jo
or
mov
jmp
xor
jne
pop
stc
xlat
stc
jns
stos
pop
aas
incl
scas
data16
push
jnp
sbb
es
cmpsb
mov
pop
arpl
lahf
xchg
icebp
rolb
fucom
adc
loop
adc
xchg
or
cmpsb
notl
push
cltd
mov
cmpsl
test
or
int3
add
inc
dec
loopne
je
dec
mov
pop
mov
adc
add
xor
or
jb
sahf
mov
cld
lret
dec
and
std
cmpsl
mov
in
lea
je
notl
xor
jbe
xor
test
jns
mov
cmp
sbb
sub
mov
rcl
pop
pop
cmpsb
mov
fnstenv
sub
lcall
push
xor
mov
loopne
mov
leave
adc
add
fnsave
loopne
dec
mov
adc
mov
jmp
xor
inc
fisttpl
push
sarl
or
add
pop
xchg
adc
jmp
and
rcrb
xlat
call
dec
jo
push
f2xm1
xor
pop
mov
roll
shll
outsl
jbe
das
repz
jp,pt
in
xor
pop
pop
push
fstpt
fadds
ret
push
mov
outsl
bound
mov
call
sbbb
mov
sub
or
or
fldt
daa
inc
push
or
popf
cld
mov
or
icebp
adc
lahf
mov
push
ret
inc
aas
insb
mull
lret
or
and
xchg
sbb
adc
lret
xchg
and
testl
les
fwait
mov
cltd
fildll
mov
jge
shll
testb
xor
repnz
into
arpl
cmp
fbld
jmp
sbb
es
int3
sub
and
mov
inc
imul
mov
xchg
cmpb
out
adc
jg
sbb
inc
iret
sub
les
inc
dec
jl
orb
push
bound
scas
loop
sbb
lea
pop
fdivs
xor
in
cmpsl
dec
or
mov
jge,pt
jge
mov
mov
dec
aaa
cmp
aam
fcoml
rcr
and
pop
push
test
dec
push
mov
push
and
int3
repnz
mov
stos
mov
xor
cmp
ja
div
sti
fdivrl
mov
jo
sbbb
xor
inc
dec
dec
cmp
in
dec
pop
mov
mov
jp
pop
test
push
andl
jle
and
sub
push
push
adc
lods
xor
jmp
pop
and
or
out
jmp
mov
adc
dec
mov
xchg
mov
xor
rol
movsb
arpl
push
sbb
fcoms
xor
mov
je
rorb
out
insl
adc
loopne
push
icebp
in
push
rcll
sbb
xchg
jnp
push
cmp
cltd
xlat
hlt
orb
and
push
mov
jb
add
adc
adc
mov
ja
cli
inc
mov
push
insl
adc
inc
mov
jp
out
pop
pop
ffree
jno
int3
std
pop
sahf
mov
pop
jns
popa
sbb
xchg
clc
jbe
ficoms
jmp
scas
lret
mov
adc
xchg
iret
mov
sub
fnsave
mov
lret
jno
mov
adc
push
pop
repnz
mov
loop
call
cmp
cmp
mov
mov
insl
test
and
sti
adc
sub
xchg
imul
aaa
jmp
xchg
add
cmp
rolb
pop
rolb
shrb
shll
sub
daa
pop
js
outsb
imul
jl
push
mov
or
loopne
mov
add
pop
sbb
lods
sahf
push
cmp
push
lahf
mov
push
mov
in
push
jg
jecxz
test
jecxz
int
and
mov
xor
inc
xor
or
test
das
ret
arpl
hlt
movsl
dec
add
xor
push
pusha
adc
xchg
push
and
aaa
outsb
repnz
out
adc
gs
nop
pop
push
daa
movsb
aad
repnz
dec
lock
es
xor
rcrb
lds
inc
pop
ret
loope
xor
mov
jno
ror
xchg
loop
in
xchg
add
add
scas
mov
js
push
lock
push
xor
insb
sub
mov
dec
inc
out
std
cli
jo
loopne
mov
leave
pop
mulb
add
and
sbb
out
or
mov
das
hlt
pop
xchg
sbb
mov
aad
fwait
xor
test
sti
sbb
pop
mov
jecxz
out
or
and
sub
sbb
mov
dec
popa
xchg
sbb
aas
scas
lock
andl
mov
repz
pop
inc
jae
xchg
test
ret
ja
adcl
movsb
insl
push
in
outsb
dec
movsl
sub
jecxz
fcompl
pop
data16
sbb
adc
inc
push
push
fisttpll
dec
fisttpll
dec
out
test
nop
xchg
outsl
jle
sub
in
inc
inc
jl
jle
cmp
sbb
les
js
xchg
ljmp
test
cltd
dec
inc
add
lods
ja
pop
push
aaa
xchg
pop
dec
xchg
sahf
cmpl
in
pop
sarl
pop
dec
xchg
jl
push
jp
stos
subl
lock
pop
cmpsb
ret
jbe
lock
enter
pushf
dec
scas
in
mov
outsl
jno
sbb
mov
into
icebp
add
pop
mov
sub
mov
lret
sbb
popa
push
scas
cltd
jno
dec
test
and
dec
pusha
ss
push
mov
sahf
cmp
cmovbe
pop
cmc
adc
and
sbb
pop
add
cmp
pop
les
push
addr16
jle
push
pop
mov
mov
cs
mov
iret
or
popa
mov
call
int3
pusha
sbb
imul
imul
stc
in
mov
mov
rcll
and
or
iret
mov
inc
cmp
lcall
pop
sub
mov
cltd
insb
iret
sti
shrb
int3
adc
add
dec
cmp
dec
cmpsb
ss
mov
xor
cmp
sub
add
jg
mov
fucomp
xchg
testl
shlb
loopne,pt
xchg
sar
push
xor
dec
or
ljmp
outsl
popa
cwtl
lock
jnp
jno
outsl
add
and
jle
popf
mov
test
enter
aas
sahf
or
pop
je
xchg
push
mov
dec
jecxz
into
mov
adcb
sub
loop
mov
icebp
rcr
xchg
clc
addr16
cmp
bound
scas
jb
les
fwait
adc
inc
aam
cli
jge
mov
jecxz
adc
cmp
and
ljmp
out
cmp
and
and
jp
cmpsb
ja
sub
aas
cltd
sub
stos
sbb
mov
xchg
mov
inc
push
adc
out
xchg
test
into
sbb
mov
jbe
sbb
mov
jae
and
adc
xlat
xor
cmp
jne
inc
mov
in
mov
jge
jl
nop
jp
add
sbb
xor
lea
in
mov
test
xchg
push
fs
inc
cltd
fsubl
lcall
pop
lods
pop
mov
push
pop
stos
jl
mov
test
push
push
ss
jmp
fidivs
arpl
xor
mov
mov
clc
test
mov
jge
cmp
in
xor
punpckhbw
outsl
popf
test
orl
push
push
jmp
mov
sarl
xchg
mov
int
test
xchg
clc
sbb
mov
ljmp
inc
mov
ljmp
les
popf
mov
adc
adc
aam
xchg
push
adc
ss
pop
in
movsl
aam
ss
jo
push
sub
sub
stos
imul
repz
jp
or
inc
sbb
mov
push
int3
lods
fwait
xor
cli
jl
mul
testb
xor
xchg
cmpsb
adc
in
mov
scas
addr16
mov
icebp
daa
xor
mov
sbb
inc
mov
dec
adc
frstor
lcall
or
xchg
pusha
xor
cmp
xchg
pop
jp
jb
sub
add
sub
sub
and
and
adc
inc
dec
fisubs
jb
mov
lret
mov
es
scas
lcall
outsl
xor
adc
and
push
cmp
shll
bound
push
rorl
xor
andb
dec
pop
jb
jns
loop
push
sub
mov
int3
xchg
mov
push
sbb
fwait
and
dec
daa
xchg
sti
add
les
lods
out
xor
jo
sbb
outsl
lock
in
mov
loop
arpl
mov
idivl
sarb
iret
stos
rcrb
out
addb
inc
push
push
xor
push
dec
std
mov
mov
stos
data16
xor
add
pop
neg
repz
mov
jne
mov
pop
or
outsl
pop
imul
sbbb
or
mov
or
adc
fisttpl
add
mov
bound
push
and
mov
jg
popf
push
inc
lods
adc
lock
xor
in
pop
pop
addr16
leave
fistl
adc
lock
mov
mov
out
xchg
mov
cmp
pop
or
lret
shrl
les
and
adc
shlb
dec
sahf
ds
jecxz
inc
sbb
cmp
mov
push
cli
loop
int3
push
andl
je
scas
pop
mov
jno
pop
shrb
push
sub
push
testb
pop
je
and
jecxz
or
jge
shrb
sub
jb
stc
pop
lea
sub
jns
icebp
stc
nop
adc
and
fisubrl
jns
imul
cltd
xchg
stos
fs
out
iret
xchg
sub
mov
push
fnstenv
mov
lea
lods
pop
into
inc
daa
aaa
xor
mov
addr16
popf
mov
xor
mov
inc
jmp
lds
in
mov
outsb
loopne
in
mov
pop
mov
add
jle
pop
clc
faddl
cmp
add
sbb
in
cmp
mov
mov
arpl
lods
push
pop
sub
rclb
mov
pop
or
popf
jbe
jb
testb
xchg
jg
adc
mov
repnz
icebp
fs
addr16
or
push
sub
fiadds
pushf
mov
popa
in
mov
nop
dec
fistl
push
jl
push
out
rclb
int3
inc
adc
gs
push
imul
inc
jno
dec
push
xchg
mov
fisubrs
mov
push
std
xchg
movsl
pop
addr16
pop
cltd
xor
imul
xor
popa
dec
mov
ficomps
adc
push
aas
mov
dec
hlt
and
inc
imul
mov
shlb
mov
data16
popf
mov
cltd
dec
mov
clc
loope
ss
inc
pop
jns
cmpsl
movsl
shrb
int3
stc
push
imul
adc
ret
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
addl
mov
inc
push
push
arpl
jne
add
xor
jecxz
repz
addl
mov
inc
push
push
bound
jne
add
mov
cmp
sub
dec
in
xor
sbb
pop
dec
dec
push
jmp
arpl
jae
or
xchg
xchg
inc
rcll
addr16
pop
xchg
xchg
mov
push
xlat
arpl
jae
add
xor
int
repz
pop
notl
mov
rcl
in
mov
adc
lret
mov
out
mov
ja
inc
iret
js
push
shlb
jae
daa
mov
mov
je
jge
mov
fnop
pop
in
xor
pop
rcl
out
xor
xchg
add
pop
cmp
push
inc
scas
cs
data16
push
jb
sti
and
adc
repz
mov
bound
out
pop
cmpl
mov
xlat
push
fsubr
mov
push
sub
testl
sub
dec
pushf
cmpb
cwtl
or
push
insl
xchg
call
daa
scas
sub
nop
andb
xor
mov
lock
pop
xchg
jmp
fadd
mov
pushf
adc
sbb
xor
push
loop
repz
adc
ss
push
xlat
arpl
pop
testl
cmpsl
mov
cmp
ja
pop
lea
mov
test
xlat
daa
mov
xchg
xor
push
out
and
xor
data16
xlat
and
fcmovnbe
and
mov
repz
rolb
sti
aas
xchg
and
idivb
repnz
adc
adc
ret
inc
rcll
addr16
pop
xchg
pop
mov
push
xlat
arpl
jae
add
xor
jecxz
repz
pop
xchg
pop
mov
xchg
sahf
lret
push
sub
dec
dec
jl
inc
fsts
andb
mov
hlt
add
int3
push
add
or
mov
xchg
jbe
lds
mov
aam
jae
mov
test
out
dec
in
mov
xchg
out
mulb
je
adc
lcall
or
push
mov
inc
jae
cli
inc
xor
push
cmp
mov
cmc
adc
je
sub
cs
mov
mov
into
mov
xchg
test
cli
xchg
adc
lret
jmp
imul
gs
lret
aad
clc
add
stc
adc
sarb
cmpsl
mov
push
cmp
and
cmpsb
daa
cmp
sahf
rcll
xchg
add
out
icebp
les
dec
mov
xchg
int3
pop
mov
enter
push
call
cwtl
dec
jecxz
sbb
mov
mov
xchg
stos
adc
ret
cwtl
lahf
adc
sub
out
add
pop
addr16
sub
add
add
je
mov
mov
mov
shl
leave
out
dec
je
pop
mov
ret
stc
dec
stc
inc
xchg
in
test
push
cmpsl
xor
dec
stos
push
xor
jbe
addr16
mov
xchg
inc
repnz
clc
std
fcomps
push
mov
cmp
add
xor
rorb
scas
pusha
or
mov
dec
jl
out
jnp
xchg
lret
lods
scas
testb
das
flds
popf
les
movl
or
sub
mov
popf
xchg
cmp
mov
incl
lahf
enter
outsb
jne
inc
daa
into
sub
pop
push
pushl
add
or
mov
addr16
ret
fmuls
or
cmpsl
xor
add
push
jge
mulb
jnp
cmp
mov
icebp
push
fisubl
add
mov
icebp
call
loope
sub
sub
pop
decl
pop
testl
xchg
xchg
cmp
pop
xchg
in
dec
fistl
add
jo
jmp
adc
lret
inc
arpl
xor
test
stc
test
movsl
icebp
jo
imul
fbld
dec
cltd
pop
rol
shlb
dec
push
jp
pop
popa
cmp
jle
mov
je
out
into
add
push
xchg
xor
or
sub
add
popa
test
inc
es
lds
aaa
aad
mov
test
stc
adc
sbb
jmp
scas
pusha
movsb
pop
in
nop
loop
jg
insl
mov
adc
imul
popf
sbb
mov
rcl
xchg
rolb
xchg
push
lret
mov
jge
push
or
or
daa
add
or
add
scas
test
lods
mov
jno
rol
ljmp
xchg
dec
mov
xchg
dec
xchg
pop
dec
movsl
adc
sub
xlat
pop
and
mov
cmp
in
lods
fs
std
push
push
and
or
pop
push
sub
or
jb
mov
ljmp
data16
push
pop
add
lret
dec
mov
push
xchg
mov
xchg
or
adc
rorl
insl
or
xlat
movsl
xchg
ret
test
std
mov
mov
pop
call
insl
jge
pinsrw
push
xchg
aaa
call
stc
cmp
push
loop
pusha
add
or
mov
jecxz
mov
repz
fcom
pop
scas
sub
pushf
leave
sti
jne
xorb
cmpsl
or
xor
ljmp
xchg
gs
fstp
lret
popa
mov
sarl
int
or
inc
imul
subl
push
fmull
push
das
xorb
ss
test
mov
mov
sbb
jno
and
and
push
xor
sub
cmc
jne
in
inc
mov
shlb
dec
ret
iret
imul
test
push
xchg
ret
add
pop
adc
inc
movsl
faddl
or
xchg
outsl
dec
push
add
jne
shl
dec
in
xchg
xchg
pop
or
xchg
cmp
adcb
cs
out
orb
jge
dec
mov
and
lods
outsb
cs
les
lods
jae
sub
in
outsb
jle
sub
jge
loop
or
inc
int
popf
adc
iret
repz
aas
rcrb
sbb
into
je
lds
and
pop
pusha
push
out
add
inc
pusha
xchg
and
call
fwait
mov
push
std
or
ss
mov
test
xchg
shr
mov
and
adc
clc
or
jmp
mov
jne
or
loop
xchg
movsb
fstps
pop
dec
je
push
adcb
push
dec
push
jmp
add
idivl
push
in
leave
cmp
iret
inc
or
stos
sbb
cmp
mov
or
jbe
pop
push
jl
sub
mov
lea
ss
mov
in
mov
add
or
mov
pop
pop
mov
cmp
loopne
mov
daa
test
dec
outsb
daa
mov
test
lret
cld
add
ljmp
pop
shl
dec
pop
xlat
in
movsl
sub
cs
dec
jle
xor
push
pop
or
lea
sbb
lods
into
add
push
mov
cld
mov
add
shlb
and
negl
ljmp
daa
xor
sbbl
fisubs
jecxz
clc
jle
jbe
dec
leave
test
push
mov
pop
and
out
ds
pop
jno
sbb
mov
loope
push
and
lods
mov
inc
daa
and
sbbb
jae
lods
call
aaa
out
cmp
jg
shlb
fdivrl
adc
mov
out
cmp
into
loopne
addl
sbb
dec
adc
mov
and
notl
fadd
sar
sub
movsl
mov
jl
pop
add
mov
xchg
cltd
test
adc
jno
dec
mov
je
and
inc
push
mov
test
stos
popa
push
dec
push
add
fistpl
hlt
or
jne
dec
mov
popa
movsb
ja
ss
in
movsl
aas
push
testb
test
or
aam
cmp
jg
mov
pop
and
lcall
sub
push
in
adc
ljmp
int
enter
sbb
mov
mov
cmpl
dec
fstp
jo
xchg
mov
push
jecxz
ret
cmc
sbb
test
pop
into
data16
movsb
push
jle
out
decb
jmp
out
inc
push
cmpsl
rcrb
daa
push
popf
dec
xor
push
push
xchg
sbb
test
mov
sbb
fbld
js
out
xchg
je
and
loop
cmp
xlat
fs
lahf
iret
pop
mov
test
unpcklps
pop
push
or
sbb
mov
enter
mov
mov
dec
xchg
adc
lock
movsl
inc
int3
sbb
mov
loope
cli
icebp
lret
xor
sbb
insl
mov
pop
push
mov
sbb
xor
xlat
sbb
loopne
mov
mov
jge
pop
dec
mov
dec
enter
fdivrl
ja
or
mov
insl
pop
mov
xchg
or
fsubl
adcl
adc
pushf
pusha
pop
shll
pop
xor
cmp
add
sub
pop
insl
das
cmp
int
aas
xchg
movsb
push
add
xchg
aas
push
pop
or
add
mov
repz
push
cmp
es
clc
push
pushf
jns
arpl
push
rolb
mov
cmp
ret
adc
mov
adc
leave
and
mov
pop
popf
mov
sbbl
mov
add
dec
shlb
dec
les
cmp
js
in
fiaddl
dec
fwait
jno
dec
sbb
nop
insb
mov
stc
pop
cli
xor
add
addr16
repnz
orl
addr16
js
aaa
push
add
ret
in
mov
dec
hlt
mov
push
insl
loope
insb
jb
jle
shll
lcall
sub
daa
out
scas
dec
test
jp
lds
mov
inc
mov
imul
test
clc
je
push
sub
and
leave
data16
ror
mov
in
jmp
popf
inc
inc
pop
fstpt
bound
mov
mov
add
dec
sbb
add
or
jbe
sbb
sub
cmc
mov
push
mov
push
leave
xchg
mov
inc
dec
test
push
insb
mov
icebp
ret
jae
xlat
mov
ljmp
xchg
out
leave
test
push
add
int
test
test
das
xor
add
xchg
push
xchg
popf
scas
dec
enter
pushl
cltd
cmp
jg
mov
mov
es
mov
into
jl
lods
pop
lret
mov
fisubl
nop
nop
dec
pop
in
shll
es
inc
dec
xchg
rclb
mov
mov
xor
or
mov
fadds
hlt
stos
clc
bound
adc
pop
pusha
mov
fwait
dec
ret
adc
add
xchg
lret
out
lods
call
mov
mov
xor
outsb
dec
jno
rcrb
testb
xor
lods
es
movsb
test
les
scas
mov
pop
scas
in
lds
lock
xchg
int3
mov
lods
push
mov
pxor
add
out
mov
push
jmp
xchg
mov
cmp
add
rolb
cld
ret
fdivs
push
fsts
add
cld
sub
pop
std
sbb
adc
lahf
xchg
dec
pop
and
jno
pop
repz
sarl
mov
testb
cld
sbb
jecxz
ss
test
sub
xor
out
sub
xor
add
sub
testl
adc
pop
jge
cwtl
cli
sbb
cmpsb
loopw
gs
hlt
inc
lds
popl
push
testb
sti
pop
and
addr16
cli
orl
cmpl
inc
test
jecxz
lret
inc
push
arpl
pop
sub
cmpsb
jo
cmp
inc
dec
cmp
sub
mov
mov
pop
xchg
cmp
jmp
or
mov
aam
test
cltd
mov
dec
add
or
mov
mov
int3
ficoml
scas
cmp
and
dec
jae
and
out
fldcw
push
xor
out
xchg
inc
mov
aas
mov
mov
loope
nop
outsb
and
sub
divl
sbb
sarb
das
mov
push
les
pop
push
dec
mov
lcall
push
or
movsl
lcall
int
mov
lock
sbbl
cmp
or
xor
sahf
fs
and
addr16
pop
mov
dec
xor
enter
popa
mov
mov
cmp
sub
aam
adc
filds
pop
stos
cld
hlt
loopne
push
lock
cmp
cmpsb
leave
cmp
insl
cmpsl
jb
dec
aad
xchg
shrl
push
inc
pop
and
mov
dec
cmc
loope
pusha
sub
dec
cmc
stos
inc
sbb
cwtl
nop
shl
pusha
fsin
xchg
xor
lds
rorl
mov
pop
fbld
xchg
fnsave
push
mov
push
out
fs
mov
adc
lahf
xor
inc
imul
add
lcall
inc
xor
ljmp
je
or
fldl
arpl
mov
shl
shrb
loope
add
subb
sti
fxch
movsl
xor
mov
aad
loop
push
lea
in
mov
ljmp
xchg
cltd
and
mov
xchg
xor
jb
aaa
add
std
mov
jmp
cmp
sbb
jge
push
je
mov
and
vpsubq
cmp
lcall
mov
je
movsb
sub
and
mov
pop
fsubs
mov
int3
popl
inc
sub
ret
stos
xchg
loope
enter
cmp
in
jo
repnz
insl
out
push
push
fdivs
push
imul
sbb
mov
js
and
loop
mov
jecxz
inc
mov
adc
addr16
in
xchg
adc
dec
and
enter
rcll
pop
xchg
cmc
js
loopne
in
xchg
cmp
lds
lea
sub
cmpsb
inc
push
pop
push
or
cmp
adc
movsl
movl
pop
ds
mov
imul
or
cli
mov
xor
push
jae
push
mov
push
lods
adc
movsb
jne
sar
inc
aas
clc
pop
out
add
sub
ret
mov
insl
shlb
xchg
call
mov
repnz
inc
pop
or
sbb
fisubrs
mov
pop
jl
out
or
mov
nop
lret
ss
imul
sahf
es
xor
or
dec
outsl
cmc
jmp
imul
mov
notb
cli
mov
nop
bswap
outsb
push
pop
pop
sub
cmpsl
xchg
pop
adc
aad
sub
cltd
or
loope
pop
adc
inc
dec
pop
mov
cmp
cmp
adc
mov
jmp
xor
rorb
fcompl
adc
sub
scas
jnp
aam
inc
ja
ss
test
inc
cmp
cmp
pop
mov
js
inc
sbb
push
push
shrb
pop
rclb
mov
sub
cmp
and
mov
mov
ror
arpl
mov
ljmp
shl
sub
mov
stc
mov
inc
les
divl
and
xor
pop
sbb
iret
jbe
daa
movsb
sub
dec
mov
adc
pop
inc
mov
xlat
js
jo
push
push
popf
xorl
cmpsb
or
mov
cmp
arpl
mov
insl
xchg
push
rcrb
enter
lock
dec
movsb
sarl
cmp
and
mov
lahf
cmpl
mov
sub
insl
mov
adc
mov
and
add
hlt
lcall
cwtl
add
adc
push
cmp
fwait
mov
add
imulb
aam
fstp
xor
push
mov
pusha
jbe
mov
cmp
in
jmp
fscale
aaa
cmc
or
xchg
rcrb
dec
test
xchg
stos
lret
iret
push
mov
ficomps
pop
aam
mov
fdivrl
enter
lock
or
dec
xor
inc
mov
mov
cmp
add
leave
xor
loope
or
in
cmpsl
fistpll
xchg
mov
sub
mov
mov
push
push
rep
adc
je
mov
xchg
xchg
mov
xchg
imul
lods
lret
add
shl
push
jns
sbb
shll
lock
cmpsb
add
sub
cmpsl
iret
pop
jmp
pop
mov
aas
sbb
cmpsb
adc
test
stc
adc
push
fcom
xchg
mov
inc
mov
jns
mov
sub
inc
mov
loopne
dec
js
or
sub
adc
cmc
cmpsb
icebp
test
and
dec
movsl
das
cmpsl
mov
out
mov
mov
pop
jl,pn
in
clc
mov
or
cmpsl
inc
jmp
pop
mov
xchg
inc
es
insl
ja
fcmovnbe
scas
decb
mov
mull
add
jbe
sbbb
or
dec
cmp
mov
push
push
lds
push
mov
int
fiadds
dec
fisubl
lahf
daa
pop
sub
sbb
pop
std
jo
int3
cmp
fcom
dec
cmp
pop
inc
js
mov
enter
dec
sub
jecxz
dec
les
ljmp
scas
dec
dec
adc
jp
outsl
pop
scas
in
dec
push
adc
inc
mov
cmp
jmp
inc
andl
xchg
ljmp
sub
lret
pop
push
sub
xlat
push
adc
mov
push
sub
int3
inc
push
xchg
mov
jmp
xor
pop
jo
inc
ret
adc
stos
mov
leave
mov
adc
cmpsb
bound
cmp
add
das
mov
cmpsb
add
cmp
pop
push
outsl
adc
push
jp
outsb
xchg
insb
dec
test
push
loop
pop
mov
push
lock
xlat
push
scas
xchg
xor
pop
pop
and
cmc
or
add
stos
ret
loopne
mov
fildll
cmpsl
hlt
test
and
cmp
xchg
mov
enter
cmpb
movsl
inc
aas
test
es
js
or
icebp
xchg
add
xor
mov
std
inc
loope
mov
lret
jo
jle
and
sub
cs
pop
aad
jno
cmp
cmp
aaa
push
mov
cltd
out
sub
cltd
sub
aas
loope
pop
jno
jp
mov
jl
pusha
adc
cmp
mov
lret
jle
mov
sbb
mov
mov
js,pt
rcr
pop
and
fdivl
xor
lods
je
int3
repz
pop
xchg
repnz
sbb
aad
fs
cwtl
mov
xor
clc
push
jl
dec
out
loop
push
out
xor
aad
xor
rcll
or
lahf
mov
cmp
outsl
adc
mov
mov
pushf
inc
xor
pop
adc
cli
adc
jl
fisubrl
stos
aas
int
jne
inc
xor
sub
pop
jle
popa
push
pusha
xor
lret
mov
out
adc
pop
jg
sub
add
pop
jnp
pushf
stos
int
sbb
xor
xchg
call
dec
cltd
mov
enter
repz
push
cmp
shll
or
push
imul
or
push
sub
testw
ds
stos
adc
pushf
cmp
cmpl
push
jg
xchg
out
faddl
push
mov
jbe
jg
stos
pop
rol
mov
xor
sahf
aad
push
push
imul
mov
aas
push
fwait
mov
and
cltd
dec
stc
jae
bound
adc
push
out
inc
out
pop
ret
inc
loop
dec
jo
jno
sub
and
jle
xchg
and
movsl
outsb
sub
je
es
lret
add
enter
pusha
pop
pop
int
mov
cmp
dec
xchg
or
inc
dec
xchg
mov
imull
adc
imul
imull
icebp
jae
clc
loop
movsb
aam
repz
jmp
das
rolb
xchg
push
mov
xor
lret
or
cmp
cmp
xchg
add
dec
std
ljmp
stc
inc
and
scas
mov
xor
cmp
mov
mov
sub
bnd
stos
lret
sbb
clc
ss
sbbl
xchg
pop
push
aas
mov
aas
jbe
mov
dec
inc
mov
mov
divb
xchg
lret
and
inc
xchg
fsubp
dec
pushf
insl
fimuls
popa
dec
xchg
cmp
mov
mov
stos
arpl
mov
lods
dec
mov
lret
jne
neg
cmpsl
mov
loope
sub
sbb
mov
sarb
sub
mov
jb
dec
ret
shrb
mov
push
mov
pop
test
mov
pop
outsl
mov
fiaddl
dec
pop
or
mov
push
and
xchg
push
lods
and
addr16
pop
loop
ret
lret
in
jnp
in
stos
pop
leave
inc
aad
imul
mov
and
inc
xchg
mov
pop
pop
cmp
lods
fwait
movsb
pop
jo
pop
xor
ja
jno
or
push
lret
or
jae
jno
push
sar
call
jbe
mov
test
fmull
push
ja
mov
xorb
pop
test
leave
jo
lret
cld
bnd
sbb
jl
or
cld
mov
fcompl
mov
jno
adc
or
pop
rorb
xor
stos
test
idivb
xchg
sahf
mov
in
enter
jp
shrb
subl
and
adc
jge
mov
mov
lret
mov
adc
pop
int
nop
cmp
mov
sahf
push
push
das
insl
lcall
test
dec
ss
push
int3
lods
popa
movq
das
ret
call
jle
mov
sbb
mov
or
mov
mov
lds
sahf
imul
test
jecxz
mov
fisttps
pop
mov
or
lods
gs
ret
insl
mov
push
in
negl
jb
leave
push
xor
or
xchg
mov
into
mov
repnz
out
loop
jae
jne
add
xchg
sub
ret
cbtw
lret
jg
subb
fadds
shlb
imul
out
fnsave
push
push
xlat
dec
and
lret
pop
xchg
stos
or
pushl
inc
push
push
bound
fwait
lcall
nop
pop
push
pop
stc
adc
out
testl
cmpsl
xor
jecxz
repz
pop
xchg
pop
mov
push
xlat
arpl
jae
add
xor
jecxz
repz
pop
xchg
pop
mov
push
push
jae
jae
add
xor
ljmp
pop
cmpsl
daa
xorl
jg
jmp
pop
testl
cmpsl
mov
ret
inc
sub
dec
addr16
sbb
pop
fmuls
xor
ret
dec
mov
push
std
pushl
inc
iret
jb
and
adc
repnz
rorb
aas
mov
sbbb
punpckhbw
jb
call
jg
lahf
adc
fiaddl
push
mov
pop
test
cs
es
or
leave
jnp
xchg
jg
push
mov
mov
divb
je
fs
mov
xchg
or
aam
and
ret
mov
mov
shll
pop
xchg
iret
pop
iret
sahf
cmp
out
lahf
lahf
ret
bnd
in
imul
das
adc
dec
aad
xor
loop
and
jg
pop
cmpsl
out
push
xchg
lock
scas
sbb
inc
aas
push
xor
adc
or
scas
repnz
jb
xchg
dec
orb
jb
out
push
lcall
lahf
ljmp
pop
pop
test
add
mov
sti
mov
in
and
loop
adc
ret
push
mov
test
addb
push
jnp
push
pop
dec
cmp
or
xchg
sbb
dec
imul
bound
xchg
jb
xor
push
cld
addr16
ja
loop
repnz
cmpsl
das
rorb
dec
fcompl
pusha
xchg
pop
stos
daa
mov
inc
shlb
ljmp
sarb
ficoml
das
sbbb
punpckldq
jb
inc
fists
and
adc
ret
dec
mov
pop
xchg
punpckldq
jb
inc
fists
and
adc
fwait
jle
pop
lea
sahf
dec
cmp
imul
ret
sahf
lds
mov
sub
fsubl
ja
xchg
mov
sub
test
out
cmp
mov
mov
ret
rcrl
stos
mov
mov
loopne
je
loopne
nop
inc
popa
dec
mov
mov
nop
notl
pop
mov
cmc
pusha
les
mul
inc
jp
arpl
xchg
incb
push
add
sbb
popa
xchg
fistpl
in
mov
lds
sub
mov
cmp
popa
adc
cs
pop
repz
leave
mov
sbb
or
pushl
adcl
push
mov
loopne
add
nop
mov
insl
subb
icebp
ret
or
sbb
into
push
sub
jno
mov
pop
inc
cs
sbbb
lcall
idiv
pop
or
add
cli
scas
mov
mov
push
loopne
ficompl
ret
push
imul
cmc
mov
mov
cltd
aam
out
int3
mov
jns
imul
mov
add
xor
mov
dec
sti
out
nop
mov
pop
cmp
in
in
mov
sub
stos
subb
cmp
scas
mov
add
std
or
lods
xchg
aaa
mov
sbb
jns
lret
pop
or
int
mov
cmpsb
cmp
sub
jle
ljmp
jb
push
and
js
push
stc
mov
cmp
push
jge
ss
clc
add
out
out
repz
fucomi
xchg
add
mov
pop
add
sub
jl
arpl
scas
inc
aad
in
push
pop
mov
sahf
fsubs
jmp
addr16
push
enter
and
ror
popf
pusha
jmp
mov
inc
int3
mov
sub
repnz
stos
setge
ficomps
test
pop
xchg
adc
cwtl
add
add
cmc
dec
loope
dec
sbb
hlt
xchg
test
sbb
mov
cmpsl
mov
xchg
cwtl
popa
and
in
lods
mov
push
addr16
cmp
cltd
adc
jle
and
mov
lcall
sbb
es
adc
xor
repz
inc
jg
or
loope
xor
or
push
ret
mov
bound
xchg
sbb
les
aad
imul
xchg
aaa
lea
mov
lret
and
pop
inc
mov
mov
adc
pop
sahf
cld
mov
in
dec
dec
sbb
sub
out
test
ret
mov
lds
in
add
push
popf
in
subl
dec
push
ljmp
int3
xchg
push
enter
sub
shll
inc
enter
mov
and
xorb
push
jp
xor
roll
and
or
push
and
ret
adc
idivl
jg
jne
or
inc
mov
adc
aam
mov
inc
cmc
add
in
enter
inc
mov
addr16
adc
arpl
shlb
inc
test
jle
lcall
ds
test
bound
int3
and
cmpsb
inc
jge
and
mov
dec
int3
sbb
shll
cmc
add
shll
lods
outsl
push
in
mov
cld
decb
xchg
fistps
sbb
outsb
cmpsl
sub
push
movsb
movsl
ds
fisubrl
sbb
popa
push
xchg
push
rorb
stos
pop
lds
gs
mov
or
xor
mov
pop
pushf
sahf
int
add
dec
data16
outsb
add
pop
push
push
test
adcb
out
sti
or
and
pusha
add
add
pop
mov
fiaddl
inc
cmp
sub
xchg
mov
sub
nop
outsl
imul
hlt
or
test
sahf
loope
stc
outsb
ret
mov
xchg
mov
lret
push
bound
popf
bound
push
inc
ljmp
xlat
pop
mov
xchg
jle
and
push
pop
xchg
popf
fbstp
divb
pusha
in
mov
rorl
cmp
fisubl
mov
mov
inc
scas
stc
out
push
mov
sbb
test
xchg
repnz
in
jb
jmp
fisttps
mov
into
jb
jg
std
in
push
das
dec
adc
cmpsb
mov
pop
out
nop
cmp
pop
mov
sbb
sub
rorl
into
mov
lea
lds
lock
jne
lock
dec
jl
clc
pop
ss
fs
insb
out
sbb
addb
in
pop
or
iret
sbb
in
push
test
cmp
adc
mov
in
fdivr
shlb
incb
lret
xchg
or
jle
aaa
insb
orl
ss
rorb
in
add
std
sbb
gs
pop
cmp
dec
push
mov
jmp
jge
stc
int3
dec
mov
xor
mov
rcrb
out
sub
lahf
jo
xchg
xor
mov
dec
imul
addl
sbb
or
cmp
fistl
movsb
movb
fidivrl
dec
jge
mov
mov
adc
inc
cmp
pop
test
push
or
scas
lret
sahf
stos
mulb
inc
inc
repz
lods
add
rorl
pop
in
iret
cli
out
pop
mov
insb
mov
xor
xor
bound
rcrb
xchg
sbb
rcrl
ljmp
cmpsb
pushf
mov
js
dec
mov
mov
jnp
pop
fsubrs
int3
sub
and
sub
sbb
mov
ljmp
pop
cmp
int3
add
sbb
xchg
or
fists
or
xchg
nop
mov
fdivr
fs
aad
fsubrl
mov
xor
xlat
inc
fcomi
xor
mov
sbb
mov
enter
and
shll
inc
xchg
push
adc
pop
sub
add
mov
pop
repnz
leave
push
xchg
mov
mov
adc
sbb
lret
and
pop
test
jae
cltd
jle
push
ds
cli
int3
repnz
ljmp
adc
sub
dec
mov
jle
xor
movl
jmp
push
xchg
popa
jno
jae
ja
pop
xchg
jl
mov
and
jle
dec
and
xchg
mov
dec
cwtl
sti
nop
jmp
inc
jns
arpl
jo
outsb
imul
jb
imul
mov
sbb
fildll
cmp
jo
arpl
cmp
xor
pop
or
clc
mov
cmpb
sub
sub
orb
sti
add
or
ss
shrl
xchg
scas
lret
enter
lock
outsl
cs
cmp
pop
mov
movb
inc
gs
jnp
popa
mov
dec
adc
ljmp
or
fsts
lcall
push
aad
xchg
pop
push
movsl
mov
sbb
shrl
das
xchg
dec
jae
imul
out
pushl
xchg
push
inc
push
outsl
cmp
rorl
daa
ret
aad
sbb
mov
add
jbe,pt
test
mov
pusha
lahf
fsubrl
repnz
mov
es
and
jb
push
outsl
cmp
xor
or
inc
out
xor
inc
jne
xchg
pop
cwtl
mov
sub
lahf
pop
pop
rcll
arpl
ret
out
test
or
mov
shlb
pop
orl
cwtl
xchg
adc
xor
or
dec
fistps
lret
cmp
aaa
aam
cmp
ss
sbb
mov
jmp
movsl
sub
jne
pop
sbb
adc
bound
lret
insb
jae
inc
and
mov
pop
cbtw
int
in
mov
jmp
int3
enter
test
stos
sub
test
jle
sub
mov
adc
and
aaa
dec
ja
sbb
aaa
cmp
jb
push
mov
rol
stos
or
fsubrs
mov
out
jmp
xchg
push
mov
or
stos
fsubl
dec
addb
fadds
push
add
cmp
xchg
ret
mov
jnp
jmp
jl
mov
addr16
test
mov
sub
pop
push
xchg
pop
stos
jne
or
sbbl
stc
cmp
mov
jge
and
pop
sarb
pop
sbb
imul
or
gs
ds
out
test
jle
test
mov
in
or
popa
mov
mov
hlt
stos
inc
cli
cli
cmp
stc
mov
rcr
adc
inc
xor
stos
das
lret
push
xchg
jb
or
arpl
adc
pop
jno
pop
mov
mov
cli
cmp
push
enter
adc
xchg
leave
lcall
sub
pop
subl
pop
aad
and
sbb
mov
int
mov
mov
daa
outsl
jle
sarb
mov
pop
jle
gs
popf
jl
dec
cwtl
icebp
inc
sbb
rorl
pop
shrb
sub
mov
in
dec
inc
adc
or
sub
aaa
sarb
ljmp
aad
das
dec
imul
adc
in
test
jg
mov
fisubrs
aas
test
fists
lret
add
adcl
leave
test
push
push
pop
adc
xor
sub
test
xor
shlb
adc
lret
notl
xor
inc
add
mov
dec
adc
out
push
sub
push
popf
dec
clc
pop
sbb
cwtl
adc
and
call
cltd
bnd
inc
pop
repnz
shrb
mov
xor
push
les
push
outsl
lods
mov
outsb
arpl
push
jmp
sbbb
mov
cmp
enter
shll
and
mov
push
mov
stc
adcb
push
out
xor
into
adc
outsl
jle
mov
xchg
xor
scas
notl
sub
mov
int3
cmp
push
loope
addl
das
sahf
daa
adc
mov
addr16
je
lods
in
orl
jecxz
sub
dec
dec
pop
xlat
hlt
sub
daa
inc
out
ja
int
cmp
outsl
jmp
fcoms
mov
xchg
dec
xor
xchg
push
sahf
sbb
jle
cld
xchg
cmpsb
ret
sar
test
or
pop
or
lahf
jo
sub
dec
dec
data16
lea
cli
imul
pop
xchg
jmp
ds
pop
cmp
loope
rcll
and
fwait
lahf
jmp
into
push
and
dec
sbb
dec
je
mov
lret
pop
gs
push
add
std
mov
mov
pop
ss
add
sbb
test
loop
adcb
add
xchg
mov
mov
pop
cmp
das
lock
jnp
mov
push
dec
xchg
ja
inc
adc
and
ljmp
push
mov
mov
fcompl
ds
ds
or
sub
decl
repnz
and
dec
push
cmpsl
test
pop
mov
movsl
cmc
xchg
dec
adc
pop
hlt
out
repnz
and
jns
repz
stos
xor
inc
inc
push
mov
xor
es
insl
jae
into
leave
push
xchg
sbb
sbb
js
push
pop
lcall
dec
push
push
mov
jns
outsl
add
mov
test
loop
popf
imul
pop
int
sahf
dec
jge
jg
mov
cmp
mov
inc
and
jne
enter
lods
or
movsb
cltd
stos
flds
fldcw
aad
lret
pop
aas
and
mov
push
lods
inc
sbb
negl
or
xchg
jge
xor
sbb
push
rcl
jnp
or
adc
mov
sbbb
div
inc
rcrl
hlt
sbb
lahf
pop
adc
ds
jnp
push
iret
mov
mov
inc
cwtl
and
pop
dec
cli
decb
mov
inc
xchg
xchg
sub
cmp
adc
jns
jns
enter
or
xor
pop
scas
repnz
loop
and
in
mov
dec
out
fsubrs
mov
pop
mov
push
and
xor
mov
rolb
push
fldcw
cwtl
test
mov
ret
icebp
adc
gs
jo
mov
iret
leave
out
jmp
in
adc
or
in
adc
enter
or
mov
xor
addb
add
cmc
xor
adc
push
pushf
shlb
xchg
je
mov
push
loopne
cli
jge
mov
movsl
inc
dec
or
aam
xor
push
loopne
jp
cmp
push
inc
jns
nop
sahf
dec
mov
call
jno
sub
push
lea
mov
pop
subb
repz
dec
xor
mov
sahf
mov
movsb
aam
dec
and
push
sub
loop
cld
xor
jl
pop
in
inc
cmovp
repz
out
xchg
push
xchg
jo
add
lahf
xchg
or
fwait
add
xlat
ficoms
xor
dec
es
pushl
or
repz
into
inc
jg
sub
push
pop
or
fs
dec
mov
rclb
pop
sbb
mov
out
enter
fisubrl
in
push
pop
test
lock
mov
cmp
fiaddl
test
add
shrb
push
xchg
jne
cmc
push
mov
popa
addr16
ss
fmuls
out
xchg
fisttpl
int
pop
mov
jecxz
sti
mov
imul
sbb
aaa
arpl
iret
pusha
es
push
jne
cmp
insb
movsl
icebp
aam
repnz
sbb
lcall
adc
and
xchg
out
mov
inc
xchg
push
imul
shl
mov
lahf
mov
cmp
xchg
lret
pop
imul
test
xor
repz
repnz
pushf
inc
pop
push
sbb
inc
ret
jp
inc
mov
aam
add
lds
aad
jnp
cmp
jecxz
call
lahf
sahf
arpl
sub
rclb
das
mov
inc
mov
fwait
push
cltd
add
cmp
mov
inc
subb
mov
das
xor
mov
xor
fcompl
out
fcompl
push
bound
jmp
cs
outsb
cmp
out
mov
stos
test
lods
repnz
cli
inc
mov
inc
dec
jle
insb
sbb
test
xor
push
imul
cltd
add
pop
push
scas
lret
inc
inc
fbstp
lock
pop
xchg
xchg
mov
psubusw
stos
shl
in
pop
cmp
ret
loopne
shrl
decb
jp
test
loop
cwtl
ss
lret
and
pop
lret
mov
inc
mov
mov
add
repz
push
jae
pop
push
xor
and
int3
in
inc
mov
add
or
or
cmpb
cmp
cmovg
mov
push
fbld
jnp
cmp
sahf
int3
mov
cltd
cmp
in
sbb
jb
and
cmp
cmp
cltd
sbb
call
xor
insb
lea
negb
adc
xor
add
cmpsb
into
mov
in
mov
test
daa
leave
sbb
nop
xchg
inc
add
fldenv
jne
xor
push
mov
jge
flds
push
jmp
sar
inc
ret
test
test
xor
or
mov
dec
nop
sub
fsubrp
sbb
cmpsl
push
outsl
dec
dec
push
xchg
pop
bound
loope
pop
or
mov
dec
cli
repz
adc
mov
inc
push
xchg
add
jns
and
iret
sub
push
dec
inc
jns
lds
push
mov
add
out
negb
xor
xchg
cwtl
mov
rolb
in
pop
int3
dec
add
adc
mov
out
mov
bound
lret
sub
fdivrl
arpl
lahf
mov
mov
out
xchg
lret
mov
in
lret
dec
call
cmp
lcall
push
or
mov
mov
dec
pushf
int3
inc
mov
aaa
cmp
pop
mov
stos
add
inc
loop
shr
sub
mov
into
bound
cvtps2pd
and
mov
lcall
aas
xchg
add
loop
pop
fsubs
mov
ss
adc
loop
inc
and
mov
popa
push
jb
sahf
jnp
jl
rcll
mov
shr
loope
inc
gs
fnstenv
loop
popf
cmp
clc
mov
and
sahf
pop
std
jns
mov
fimull
xchg
outsb
mov
jmp
cmp
ret
in
clc
imul
mov
es
xlat
ss
or
xchg
push
xchg
mov
cmp
sbb
adc
or
rolb
and
lahf
stos
push
out
add
jg
jns
popf
stc
pop
dec
sub
into
pusha
pop
sti
mov
push
add
bswap
hlt
push
outsb
sbb
jbe
pop
pop
lret
cld
xlat
jp
ss
sub
out
das
pop
in
push
pop
jg
cmpsl
jo
rcl
insb
repz
xor
jp
push
adc
out
movsb
mov
sub
aas
mov
xor
push
lea
pop
and
push
jns
pop
xor
movsl
aas
mov
lds
inc
xor
outsb
dec
in
lds
shrl
mov
or
jle
dec
mov
cmp
std
lods
pushf
jno
pop
fisubrs
mov
xacquire
imul
shl
gs
push
dec
cmpsb
cmpsl
push
leavew
cltd
and
in
mov
or
out
xchg
movsb
or
push
xchg
mov
stc
mov
push
dec
mov
stc
cli
jle
jg
cs
jo
leave
push
adc
lods
pop
mov
test
sub
rol
insb
int3
jo
xchg
lods
pop
fstpt
push
data16
push
mov
inc
pop
push
xlat
dec
xor
stc
xchg
addr16
test
clc
mov
mov
cld
fdivrs
repnz
inc
jae
dec
ljmp
cmp
jecxz
loope
push
addr16
pop
pop
cwtl
xor
inc
add
mov
xor
cltd
int
in
pop
cld
dec
cwtl
push
add
aad
jno
fimuls
icebp
nop
je
xorps
sarb
popa
bound
mov
sti
call
nop
inc
xor
inc
mov
sbb
ja
daa
sub
ds
ja
lret
ret
scas
call
adc
hlt
test
loopne
jmp
int3
sub
adc
mov
mov
push
hlt
jne
sub
fsts
loop
popf
and
test
insb
inc
fst
das
cmp
loop
sti
lods
pop
lret
lret
cmp
cmp
jae
or
and
mov
mov
out
sti
in
xor
or
int
xchg
xor
xchg
lret
push
sysret
imul
inc
xchg
push
lahf
mov
lcall
xor
mov
or
movsb
aaa
mov
sub
xchg
popl
mov
cld
outsb
mov
hlt
push
jecxz
lahf
into
shll
mov
testb
pop
xchg
das
xorb
lea
in
ja
jmp
pop
mov
mov
sub
lods
fndisi(8087
lcall
iret
pop
inc
test
and
popa
outsb
out
jmp
jmp
and
lock
aad
mov
lcall
aad
cmpsl
push
mov
dec
dec
shlb
jbe
xchg
in
fbstp
mov
aam
fbstp
mov
xchg
mov
arpl
cltd
sbb
xchg
mov
dec
adc
dec
fisubrs
rolb
mov
lock
mov
add
xor
loop
in
cmp
xlat
and
mov
add
mul
xchg
adc
lahf
pop
and
sub
jbe
or
decb
sbb
int3
push
arpl
fidivrl
hlt
add
ss
sbb
cmp
ja
lret
pop
add
aaa
mov
std
or
pop
lock
jnp
jnp
std
sbb
mov
cli
imul
pop
cwtl
mov
aad
pop
in
adc
daa
add
lret
and
aam
shrb
push
mov
push
sbb
mov
xchg
fwait
cmp
mov
sub
jl
cmc
adc
aaa
adc
insb
mov
bound
xchg
in
lahf
and
lcall
mov
mov
fdivl
xchg
mov
fbstp
sbb
or
lods
mov
fbld
rorb
aas
mov
sbbb
punpckldq
jb
inc
fists
and
adc
ret
dec
mov
pop
xchg
punpckldq
jb
inc
fists
and
adc
ret
dec
mov
pop
xchg
punpckldq
jb
inc
fists
and
and
hlt
pop
rorb
aas
mov
add
adc
popf
decl
mov
std
pusha
in
jo
out
xor
add
adc
scas
cli
add
sub
pop
sahf
mov
dec
xchg
pop
loop
bnd
push
rcrb
and
xor
add
adc
bound
push
sahf
mov
dec
xchg
pop
and
bnd
push
and
xor
add
adc
bound
push
sahf
mov
ds
pop
loop
popf
pop
mov
mov
mov
stos
jle
stos
push
stos
jge
jb
sub
dec
push
or
test
xlat
push
mov
and
subb
jge
insl
pop
sbb
push
pop
loop
sti
cmp
add
stc
pop
xor
mov
dec
push
sahf
mov
or
and
xor
push
scas
scas
addr16
into
das
pop
aaa
imul
sbb
lock
fnsave
add
sbb
and
scas
jb
shll
dec
sub
jg
mov
insl
mov
or
dec
fildll
push
ror
stos
mov
inc
push
sbb
xchg
inc
outsl
jge
mov
lret
push
push
out
out
xor
add
adc
bound
push
sahf
mov
dec
xchg
pop
loop
bnd
pop
arpl
jnp
add
es
out
mov
and
xor
inc
repnz
mov
scas
push
mov
into
jle
lret
aaa
nop
cmp
add
sbbb
xor
inc
pushf
push
scas
jnp
jo
mov
jle
cs
inc
mov
mov
dec
xchg
pop
loop
bnd
push
and
xor
add
adc
bound
push
sahf
mov
dec
xchg
pop
loop
bnd
push
and
pop
jmp
cmp
setl
test
fldenv
mov
data16
mov
jg
dec
mov
cwtl
xor
mov
xor
pop
jo
sbb
cmp
jo
inc
icebp
in
pop
enter
xor
cld
pop
movsl
and
and
or
out
hlt
or
sarl
mov
fsubl
test
dec
out
xchg
mov
stos
cmp
push
jae
mov
xor
adc
cwtl
pop
mov
push
xchg
inc
jge
lcall
divb
out
in
or
in
in
sub
jmp
jecxz
adc
pushf
jge
mov
xchg
lods
cmp
cmp
mov
sbb
stos
test
cltd
call
mov
test
subb
sarb
and
imul
push
rol
stos
jecxz
frstor
fisubl
inc
mov
nop
dec
es
xchg
fstl
outsl
dec
cmpsb
daa
dec
inc
cld
xchg
jnp
in
aas
xchg
mov
mov
pusha
push
mov
lcall
push
lock
cbtw
pop
lcall
cmpsb
push
mov
out
add
cmp
adc
pusha
mov
mov
mov
and
stos
movsl
pushf
pop
pop
jle
and
push
mov
dec
jg
movsb
mov
out
subl
mov
pop
inc
int
sbb
popf
adc
adc
mov
jle
mov
xchg
popf
mov
js
je
test
sub
loopne
test
jl
cmp
test
mov
xor
roll
js
repz
data16
lds
mov
mov
sub
mov
das
shll
dec
xor
mov
cli
mov
movsb
jae
pop
push
jo
inc
out
xor
jno
lds
mov
mov
hlt
idivb
and
add
imul
lahf
push
cmp
adc
mov
jbe
mov
jl
test
mov
and
dec
adc
fbstp
fbld
shlb
sub
xchg
push
icebp
mov
mov
jg
dec
mov
bound
and
mov
mov
sahf
jecxz
popf
loope
push
test
mov
push
lcall
ss
daa
sub
imul
mov
fistpl
mov
jne
loope
mov
or
shlb
jecxz
mov
jg
add
loopne
mov
scas
adc
dec
lcall
inc
pop
mov
add
jo
cmp
sub
mov
int3
xor
les
pusha
push
mov
daa
fimull
cmp
inc
push
adc
mov
test
or
dec
movsb
push
push
or
xchg
jge
imulb
pop
xor
ss
mov
jmp
in
adc
inc
daa
inc
pop
sub
sbb
add
sarb
test
hlt
mov
add
loop
push
mov
push
stos
sbb
sbb
cs
and
shrl
les
in
and
shrb
loope
test
fs
mov
aaa
imul
je
jnp
jle
cmpsb
or
mov
popf
inc
cmp
int3
pop
rcll
std
lods
sbb
pop
test
jne
sub
sub
inc
in
fiadds
addr16
mov
push
and
sahf
stc
sub
cmp
xchg
pop
outsl
mov
fiadds
inc
or
iret
or
loope
cmc
xchg
and
mov
mov
push
mov
pop
dec
cmc
jb
aam
mull
adc
lret
test
outsl
imul
jno
fdivrp
jmp
jae
push
outsl
les
movsb
mov
ret
enter
fcomip
xchg
mov
ljmp
in
mov
fwait
xor
sub
in
or
call
sbb
or
mov
xor
shlb
push
sbb
or
lahf
or
mov
dec
add
mov
lds
pop
dec
pop
sbb
sbb
jl
stos
xchg
leave
lods
sbb
and
cmp
stos
mov
notb
mov
xlat
scas
sti
aas
jmp
mov
mov
clc
pop
sub
hlt
xchg
jl
stos
add
outsl
xchg
cld
push
hlt
dec
enter
xchg
sub
stos
mov
mov
sti
es
xor
xlat
rolb
dec
xor
aam
out
stos
out
aad
push
lcall
jne
fstl
in
out
gs
ja
push
clc
sbb
mov
stos
inc
cmp
into
sti
inc
mov
aas
aad
je
mov
mov
sub
fnstenv
cmc
ret
repz
inc
pcmpeqw
inc
cmp
pop
dec
or
jo
movsb
pop
inc
cmp
jno
jmp
inc
sahf
icebp
dec
adc
popa
movl
mov
negl
fisttpll
iret
loope
popa
outsb
repz
and
xor
test
jmp
sti
sub
in
sbb
and
mov
mov
outsl
or
sbb
sti
xor
lret
ret
pop
adc
dec
pop
xor
cmp
out
mov
aas
inc
sbb
mov
mov
sarb
mov
jo
pop
mov
add
fsubl
ret
or
in
test
sahf
call
xor
push
out
pop
sbb
in
and
dec
hlt
rolb
cld
lret
inc
addr16
in
dec
jno
mov
loope
clc
jns
mov
cmp
mov
das
jecxz
out
adc
jb
mov
iret
jo
push
mul
gs
int
xlat
cmpsb
inc
inc
int
dec
xchg
add
cmp
loopne
sti
add
sub
push
stos
xlat
cmp
outsl
out
lret
outsb
xor
ret
jae
outsl
adc
sbb
xor
cmp
imul
hlt
aas
push
push
sbb
gs
lcall
cmp
push
mov
xor
pop
push
push
call
outsl
and
or
lahf
mov
lock
jge
neg
rcll
fsubr
adc
repz
lea
dec
aaa
jae
dec
out
push
popa
xchg
or
mov
jmp
out
out
cld
popa
sbb
hlt
mov
test
rclb
xchg
adc
inc
lret
add
mov
mov
test
in
jp
push
stc
ret
or
ljmp
inc
ret
jge
cmp
inc
push
iret
and
movsl
inc
int3
aad
gs
hlt
dec
fisttpl
pushf
popa
cmp
aas
mov
xorl
mov
std
es
lret
lods
xchg
lds
dec
lret
lahf
add
in
jo
jg
mov
popa
mov
sub
test
ret
adc
xchg
faddp
cmp
das
aaa
pop
fildl
je
ds
and
jl
mov
pop
data16
xchg
lods
and
mov
mov
inc
push
test
lcall
mov
adc
loopne
add
mov
outsb
nop
outsl
mov
incb
xlat
and
enter
xor
push
and
scas
imul
icebp
xchg
inc
adc
repz
orb
sub
nop
push
out
and
xchg
xchg
xadd
fcmovne
mov
or
push
jecxz
in
add
cmp
xor
aas
xchg
pop
mov
push
std
push
jns
daa
pop
aaa
xor
shlb
inc
leave
pop
loope
xchg
dec
out
negl
negl
lods
gs
jb
popa
or
lock
mov
dec
cmp
fcmovne
sub
sbb
pop
ret
sbb
cld
jae,pt
mov
xor
fwait
pop
adcb
scas
adc
fists
cmc
pop
jl
movb
inc
adc
mov
lds
pop
cmc
inc
push
mov
dec
loop
pop
aas
lods
outsl
pop
xor
jb
push
xchg
inc
dec
mov
lods
pop
adc
dec
or
lods
adc
xor
cli
push
pop
lret
jns
fstpl
out
aad
jg
push
add
push
fnstsw
lahf
push
cltd
xor
mov
clc
jbe
add
mov
lcall
data16
insb
xchg
adc
mov
in
cmp
cld
xchg
cmp
pop
dec
fsubrl
lret
ljmp
lds
dec
mov
cld
sub
popa
fnstsw
enter
das
int3
clc
bound
mov
lret
xchg
in
in
les
imul
in
pop
loop
lret
xor
push
arpl
leave
push
addr16
pop
pop
push
jl
add
xchg
adc
test
aad
inc
out
jecxz
push
in
xchg
nop
pop
push
outsb
push
xchg
out
insl
rcrl
test
je
out
inc
sub
pop
test
loop
arpl
jno
ret
popl
sub
js
pop
lcall
test
adc
adc
movsl
daa
sub
lock
pop
push
push
in
dec
scas
adc
orl
push
shl
insl
fwait
sub
pusha
pop
cmc
in
les
rclb
cld
adc
in
sbb
jge
add
icebp
repnz
and
js
add
or
xchg
int3
cwtl
cmc
and
mov
push
fcmovnbe
add
testb
add
xchg
rcrl
cmpsb
xchg
std
xchg
jo
aas
or
dec
or
xchg
out
mov
sub
xchg
sub
mov
fisttpll
jns
jbe
mov
pop
loopne
inc
lea
lock
dec
dec
sbb
call
notb
ss
out
mov
scas
jnp
mov
aam
xor
push
int3
xchg
lret
fistps
xor
outsb
loop
or
test
in
and
aaa
inc
in
add
mov
loopne
jne
cltd
push
mov
lcall
pop
mov
lcall
roll
loope
cmp
push
fistl
mov
pop
jmp
repz
cmpsl
mov
lods
icebp
fcoml
xor
mov
and
add
cmpsl
sub
neg
int3
sbb
push
negb
scas
sti
or
or
stos
push
ret
dec
jo
xlat
sub
mov
xor
cmp
call
cmp
popa
popa
insl
mov
add
pop
dec
ljmp
sti
cmp
or
out
jnp
test
adc
negl
hlt
out
ficompl
dec
lahf
insb
loopne
push
push
jmp
cmp
xchg
mov
or
out
out
mov
add
cli
cmp
addr16
jbe,pt
popa
sub
test
inc
scas
mov
inc
jbe
adc
lcall
adc
push
mov
and
cmp
add
pop
jnp
mov
movsb
insl
inc
daa
and
xor
and
add
iret
or
push
daa
shlb
xchg
jo
mov
mov
push
cmp
inc
or
test
inc
idiv
scas
outsb
stc
addb
inc
nop
cwtl
dec
inc
push
mov
mov
std
sbb
fwait
ror
loope
ja
sub
jge
rorb
cmp
cwtl
dec
je
adc
int
out
fneni(8087
divl
add
and
mov
xchg
outsb
inc
fists
xlat
mov
mov
xchg
adcl
xor
out
aad
mov
in
mov
ret
call
inc
stos
rolb
add
es
cltd
outsb
repz
loope
mov
and
insl
lea
mov
rorl
insl
mov
mov
jnp
cmpsl
pusha
nop
nop
inc
push
fmulp
jo
out
pushf
sbb
jne
sbb
and
mov
inc
or
flds
push
pop
pusha
leave
and
flds
insb
push
xor
cmp
mov
xchg
xor
bound
loope
jge
inc
cmp
push
mov
test
test
decl
push
and
adc
adc
xorl
add
or
test
sbb
outsl
add
std
and
lock
add
mov
add
test
xchg
cmp
flds
ss
pusha
inc
shll
imul
mov
push
mov
inc
cmp
andb
sbb
xchg
dec
adc
add
pop
fwait
mov
movsb
add
jnp
push
outsb
jg
loope
mov
xor
fnstsw
xchg
sbbl
or
dec
xchg
stos
inc
xchg
ljmp
pop
push
lds
xor
inc
dec
pop
cmc
inc
jnp
in
es
or
mov
xchg
and
iret
inc
add
mov
and
mov
ja
cmpsb
pop
push
sub
insl
mov
jns
sbb
sub
out
xlat
cld
mov
out
orl
add
add
lahf
jo
jecxz
mull
scas
call
inc
movsl
jp
fwait
pop
cmc
es
push
popl
test
pop
push
lcall
inc
in
sbb
clc
cwtl
clc
in
inc
dec
push
dec
inc
jmp
xor
jno
addr16
pop
xchg
mov
test
fdivs
sbbl
mov
mov
adcl
cmp
mov
cltd
aas
xchg
or
xchg
test
ss
pop
iret
les
sbb
sahf
loope
jmp
psubusb
into
shrb
neg
lcall
pop
test
add
sar
std
mov
mov
shlb
xor
add
insb
and
fnstsw
iret
dec
or
rcll
inc
mov
mov
or
bnd
xchg
nop
sub
clc
fbstp
push
push
fsts
mov
lahf
mov
and
and
and
in
add
jmp
stos
mov
movsl
jne
outsl
sbb
stos
cld
mov
int
cmp
stos
rorl
loop
lods
xchg
inc
pop
pushf
daa
inc
mov
cs
pop
cmp
mov
andl
push
dec
mov
pop
mov
test
in
xchg
adc
and
push
ja
outsl
cs
shrl
mov
pop
call
mov
mov
lahf
cwtl
xchg
lret
rolb
jo
std
cmp
roll
into
mov
ljmp
jo
jbe
lcall
adc
cmp
jmp
pop
dec
mov
jmp
sbb
pop
pop
mov
cmp
nop
mov
cwtl
test
stos
das
mov
or
dec
pusha
xor
mov
out
call
dec
adc
stos
sub
ret
pop
add
adc
lret
xlat
xor
sub
mov
cmpsl
pop
mov
lret
dec
sbb
mov
lcall
inc
in
jns
dec
push
shlb
loope
in
lods
rol
clc
jge
ret
cmp
call
xchg
pop
dec
or
cmc
xchg
pop
mov
jbe
cltd
xchg
pop
int3
pushf
fistl
xor
dec
mov
or
add
mov
jg
pop
mov
or
pop
adc
jmp
push
mov
jmp
popl
adc
mov
ret
cmp
outsl
stos
movsl
push
fidivs
int
add
mov
cwtl
jmp
outsb
pop
test
push
jnp
jecxz
dec
xchg
movsl
sti
push
cld
cmpsb
ss
popa
mov
test
xchg
stos
call
leave
sub
lahf
out
dec
mov
pop
add
cmp
dec
sub
xchg
fnstenv
sbb
movsb
cs
insl
sbb
pop
jp
lcall
cwtl
cmp
mov
bound
push
inc
ds
xor
fwait
ljmp
sbb
pop
mov
cmc
mov
loope
and
es
pop
pusha
roll
sub
in
push
mov
sub
clc
shl
mov
lds
inc
mov
or
mov
mov
fs
lret
pop
loop
push
mov
rol
add
clc
arpl
mov
push
inc
das
push
sbb
aad
shll
data16
push
shl
cmc
sub
fidivl
push
jne
pop
mov
adc
call
jecxz
xchg
lcall
dec
jg
mov
jne
rorb
outsl
nop
clc
mov
test
leave
pop
push
push
mov
jg
pop
pop
stc
arpl
loope
arpl
mov
test
call
mov
sub
popf
push
pop
dec
aas
aas
ds
xor
adc
adcb
cmpsl
stc
jno
xchg
loope
fldt
fsubp
call
push
arpl
in
xchg
push
mov
xchg
inc
pop
out
fldenv
scas
ljmp
mov
stos
adc
cmp
add
dec
push
or
or
test
imulb
into
sub
fisubrl
and
fdivrl
pop
mov
out
aas
lods
cmpsb
pop
xchg
pop
and
call
sarl
ret
mov
ret
push
xchg
mov
ret
pusha
jecxz
xorb
xor
cltd
out
pop
scas
loope
repnz
sub
in
pushf
mov
xchg
repnz
dec
xor
fildll
lds
jns
es
lahf
das
inc
ficoms
lret
pop
adc
jno
cmc
out
jno
jmp
cmp
and
insb
aam
mov
int3
ret
js
mov
push
fs
mov
mov
enter
fiaddl
icebp
imul
dec
mov
mov
je
mov
lea
xor
jbe
sub
cmpsb
mov
fdivr
addr16
fdivrl
ss
push
sbb
lock
arpl
loop
cmp
mov
push
loopne
movsb
repnz
clc
into
out
inc
or
xlat
pop
out
aas
jno
pushl
sbb
enter
movb
xchg
mov
aad
and
mov
ficoms
mov
or
mov
cld
lods
rorl
add
adc
and
dec
popa
bound
rolb
ss
aas
ds
xor
sahf
adc
outsb
mov
cmpsl
scas
mov
pop
mov
repnz
mov
int
lea
add
lret
add
lcall
pushf
in
out
jmp
bound
sti
xchg
xor
push
mov
popl
lods
sahf
xchg
ret
xchg
mov
popf
cmp
mov
iret
icebp
sarb
or
filds
out
out
adcl
mov
push
mov
pop
sahf
mov
xor
out
dec
loopne
xchg
inc
xlat
sbb
or
pop
hlt
das
sub
dec
in
stc
outsb
push
out
stos
pop
movsb
lahf
lock
push
inc
das
ja
sar
loopne
push
jp
or
inc
mov
ds
scas
mov
xor
sbb
cmp
ret
mov
cli
add
mov
fs
or
sbb
movsl
movsb
mov
add
adc
lret
into
mov
xchg
in
push
mov
loope
in
add
mov
in
pop
iret
xor
pop
cmpb
jg
sub
and
popf
add
pushf
jl
push
xor
into
in
push
inc
enter
mov
lds
add
xor
add
mov
or
xchg
push
sbbl
lret
pop
loop
imul
ljmp
push
fistl
int3
je
jnp
mov
sbb
imul
xchg
cmp
arpl
iret
xlat
pushf
sub
pop
out
ja
shll
into
in
mov
icebp
push
stc
outsb
mov
push
shrl
sbb
shrl
ja
popa
dec
ja
xchg
lock
lock
iret
inc
dec
rcl
xchg
cli
adc
sbb
mov
pop
lods
pop
push
xchg
enter
imulb
fstl
push
das
pop
sub
aam
es
ds
jbe
in
cmpsb
mov
outsb
pop
int3
mov
es
aam
jb
push
push
pop
clc
cltd
jnp
xchg
xchg
xor
pop
in
in
aas
and
bound
cmpsl
shlb
fs
call
call
push
stc
cld
fsts
outsb
dec
add
fiaddl
movb
mov
int3
out
insl
movsl
xor
push
fsubl
cmpl
push
adc
pop
adc
mov
test
test
lea
sahf
sahf
cmc
mov
sti
out
daa
adc
mov
sub
pop
mov
dec
inc
out
loopne
push
sub
sub
fcomps
jae
pop
out
adc
sub
aam
xchg
mov
jmp
mov
mov
or
lret
push
and
loope
test
mov
sbb
fwait
rorb
pop
dec
lea
int
and
sar
incb
mov
pushf
xchg
xor
sbb
lods
xchg
call
mov
cmpsl
mov
fistpl
negb
or
lahf
jmp
xor
pop
mov
mov
adc
xchg
stos
xchg
test
add
mov
sbb
repz
add
add
idivb
jnp
and
test
jne
addr16
xor
es
sbb
ret
rorb
movsb
mov
dec
std
popf
fiadds
inc
pop
push
incb
iret
adc
bound
push
sahf
mov
dec
xchg
pop
loop
bnd
push
and
xor
add
adc
bound
push
sahf
mov
dec
xchg
pop
loop
bnd
push
and
mov
or
scas
jb
inc
rcrb
orb
loop
bnd
push
and
xor
add
adc
bound
push
popa
mov
dec
xchg
sub
icebp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
fwait
ljmp
scas
stos
lahf
mov
sahf
lahf
or
sbb
dec
cmp
cs
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
dec
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
pop
pop
sub
arpl
mov
leave
mov
pusha
mov
lcall
push
dec
out
cmp
add
daa
out
pop
movsl
ss
loope
pop
xor
pop
or
andb
dec
fs
test
call
aas
arpl
lret
push
adc
jle
dec
push
mov
push
cmpb
fstp
cmp
adc
xchg
or
mov
xor
imul
je
out
add
xor
push
ljmp
push
mov
pop
jl
das
mov
pushl
jmp
xor
sbb
add
jno
sarl
jle
ja
pop
outsl
imul
loopne
out
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
int
repnz
mov
sahf
cmpsl
call
mov
dec
sbb
das
cs
xor
jge
jp
sub
sti
xchg
mov
jmp
sti
mov
or
or
cs
pop
sbb
dec
loop
ljmp
popf
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
xlat
adc
ja
push
fsub
jnp
jg
popa
mov
dec
ljmp
sbb
add
cmpsb
out
and
push
popf
daa
and
mov
cli
mov
adcb
aam
push
pop
push
xchg
jnp
or
ds
cmc
fisttpll
add
mov
sbb
adc
lods
jo
insl
cld
mov
popl
push
cmp
cld
mov
xchg
mov
inc
fwait
out
movsl
cmp
lret
in
and
ljmp
mov
sbb
mov
lods
add
cmp
sbb
outsb
fwait
mov
xor
ss
pop
mov
call
xchg
push
shl
sbb
test
iret
lret
inc
outsb
mov
mov
add
jae
lods
les
push
in
scas
lds
push
xlat
or
subl
lret
jmp
lea
in
add
shll
cmp
gs
push
insb
xor
stc
push
push
xor
in
and
fwait
rorl
cli
ret
mov
or
je
and
lret
andb
sub
xlat
outsb
cmp
inc
jns
fwait
mov
xchg
mov
test
cmp
dec
dec
pushf
out
inc
cmpsb
pop
stc
cld
movsl
pminub
add
sub
lods
dec
es
pop
inc
mov
mov
and
and
rol
int3
js
rcl
pusha
ret
js
scas
pop
int
cltd
adc
cmp
add
into
sbb
cmpsl
int3
pop
sarb
repnz
adc
cmp
es
pop
push
cwtl
mov
pop
and
je
lods
hlt
call
loope
pop
enter
into
dec
shrl
testb
mov
jne
mov
xchg
inc
iret
mov
cmp
movsl
add
push
pop
ret
cld
ss
insb
or
clc
sub
mov
shl
add
lea
cltd
fwait
mov
add
jmp
test
xchg
rorl
mov
outsb
push
call
testb
push
mull
sub
inc
add
inc
ds
xor
xor
push
jo
cli
inc
or
sub
ss
cmc
stos
lock
lcall
cmp
mov
daa
ror
mov
cld
jae
and
add
les
jne
out
add
mov
jbe
fldt
lods
sahf
les
and
inc
push
in
cwtl
fsubs
loop
push
mov
adc
xor
dec
push
mov
mov
into
jbe
or
hlt
pop
or
stos
jge
xor
xchg
gs
mov
xor
dec
or
cmp
out
scas
insb
pop
aad
push
loop
icebp
nop
lret
and
push
cmp
fwait
js
nop
dec
ret
in
pop
lret
fsts
inc
in
dec
cmp
and
xchg
sbb
lret
mov
dec
mov
lahf
or
push
andb
idivb
in
xchg
and
fwait
lahf
jp
scas
push
out
outsl
pop
mov
push
fcomp
lcall
mov
cs
add
xchg
sub
ljmp
popf
imul
and
movsb
outsl
hlt
xchg
insb
mov
pop
in
mov
cmp
test
enter
jns
shl
cmp
mov
dec
adcl
xchg
xchg
ljmp
sarl
bound
pop
das
push
jnp
mov
movsl
daa
jne
xor
loope
dec
or
jecxz
rclb
mov
pop
out
cmp
jae
push
outsb
pop
pop
popf
fwait
mov
pop
sti
shll
jbe
subl
ret
test
mov
xchg
add
std
or
inc
and
push
loope
pop
add
jb
scas
arpl
nop
cwtl
or
ror
dec
add
push
loop
dec
mov
popf
mov
mov
fs
test
daa
div
ljmp
xchg
add
aas
insl
mov
rclb
xchg
xchg
jl
outsb
movsl
lahf
test
jb
adcb
lcall
push
push
sbb
and
jge
mov
fwait
aam
push
das
fisubrs
sbb
bound
aad
cmpsl
or
push
jbe
decb
xor
and
or
pop
push
jp
xchg
dec
fsubrp
mov
lcall
rcll
shrl
add
loop
adc
cmp
push
sbb
rclb
push
pop
inc
add
das
mov
mov
fwait
lea
push
nop
je
jno
lret
into
daa
out
pop
mov
je
xor
insl
pusha
xrelease
dec
xor
pop
test
das
adc
insl
mov
jno
outsl
mov
sbb
std
std
jecxz
sub
aaa
inc
xlat
inc
jmp
cltd
and
cmp
or
xor
pop
lods
mov
add
scas
stc
fstps
xor
lea
mov
cmp
lret
or
push
dec
hlt
cmc
iret
pop
add
push
add
in
mov
out
clc
cmp
subb
mov
into
cmp
lods
mov
jae
lcall
movsb
movl
je
loop
fnstsw
adc
xchg
icebp
xchg
rcrb
push
into
into
cmpsb
or
push
inc
sub
push
aas
scas
lods
es
stos
sub
dec
sbb
sbb
mov
sbb
push
loopne
shrb
push
test
mov
fistps
mov
xlat
sbb
mov
inc
out
adc
or
jmp
out
nop
loope
je
cltd
icebp
cmp
cmp
subb
xor
pop
pop
in
popa
mov
add
sub
xchg
sbb
sbb
xor
pop
call
imul
out
pop
stos
or
pushf
sbb
and
imul
and
je
inc
aad
sbb
sbb
data16
adc
mov
stc
outsb
or
cs
lcall
or
test
loop
or
adc
dec
ret
scas
inc
pop
inc
pop
add
sbb
ret
shll
push
pop
jae
roll
icebp
or
imul
adc
pop
adc
pop
mov
repnz
out
jp
fwait
pop
hlt
push
xor
jns
es
cld
dec
push
sub
sbb
sub
mov
push
and
and
xlat
clc
or
out
or
pop
cmp
cmp
loope
ds
daa
das
inc
xchg
mov
out
jo
arpl
cmpsl
cmpsb
lcall
mov
inc
les
xlat
push
in
adc
shl
adc
bound
nop
add
fnsave
cli
or
inc
subb
in
stos
push
lods
test
es
mov
and
stos
sbb
inc
aaa
adc
popf
or
add
movsb
fstl
iret
adc
adc
push
xor
xor
stc
fidivs
adc
aas
cmpsl
es
sub
lock
test
mov
adcl
mov
pop
sbb
pop
pop
inc
sbb
jecxz
pop
lahf
arpl
arpl
lret
adc
pop
or
movsb
push
xchg
add
push
push
loopne
mov
sbb
or
ds
lcall
lock
es
pop
cltd
sbb
loop
rorb
adcb
mov
out
mov
xchg
cs
lds
addr16
cmp
clc
or
cmp
adc
push
out
lret
inc
mov
add
in
adc
sahf
mov
lcall
outsb
lds
xor
pop
popa
mov
int3
push
pop
jg
outsl
aas
rorb
mov
or
bound
cmpsl
enter
mov
daa
push
pop
pushf
loopne
inc
inc
icebp
imul
divb
mov
aaa
inc
mov
sbbb
stos
imul
popf
addr16
sub
stos
jb
push
mov
sbb
dec
ficoms
xlat
cmp
nop
mov
pop
adc
dec
sarb
jle
lods
mov
and
pop
dec
repz
idivl
popa
add
fprem1
cmp
shl
gs
xor
xchg
mov
inc
add
mov
pop
xor
test
imul
xor
mov
test
inc
add
cmp
sub
out
xor
mov
outsl
into
addl
pop
in
cmp
iret
repz
push
je
pop
cmp
cmp
pop
rcr
cmc
je
and
inc
data16
pop
loopne
dec
lcall
push
mov
popa
popf
pop
hlt
daa
addr16
jbe
rorb
jno
mov
push
addr16
inc
push
mov
jne
insb
xchg
mov
ret
mov
or
and
or
popf
sti
scas
pop
fimull
mov
jne
jo
inc
fdivrl
adcl
js
lods
iret
mov
jg
sub
sub
inc
out
loop
sahf
cli
gs
insl
dec
jns
mov
cmpsl
bound
mov
ljmp
sub
xor
addb
aaa
mov
fdivs
jo
mull
gs
dec
push
cli
fcmovb
dec
mov
add
movsb
loopw
fcomip
loopne
das
cmp
cmp
pop
xor
xor
jae
cltd
inc
les
and
adc
daa
out
fldt
in
xchg
or
das
add
jge
in
dec
dec
repnz
lahf
mov
stc
stos
int3
stos
mov
lods
sahf
adc
pop
test
jne
jnp
orl
push
lods
movsl
inc
cmp
clc
ret
sub
lods
dec
dec
test
outsb
je
rcr
jne
inc
mov
xor
out
mov
sbb
insl
call
es
decb
rcrb
fdivrs
adc
lcall
lods
ret
mov
mov
dec
xor
fisttpll
push
call
and
push
fdivrl
pop
shrb
aas
pop
inc
push
push
xchg
rcll
call
sbb
xor
mov
fs
cmp
aaa
cltd
adc
dec
les
jl
adc
dec
pop
xlat
cmpl
jecxz
xor
jno
in
xchg
pop
jge
adc
cwtl
test
sahf
outsb
inc
stos
shrb
fdivs
add
sub
push
pop
pop
pop
xchg
push
xchg
pop
loope
sbbb
aaa
mov
and
mov
pop
movsl
movsb
jl
sbb
pusha
in
sub
add
lahf
fcomps
inc
jno
testb
lahf
pop
je
roll
cltd
xor
mov
add
sbb
push
mov
fdivp
pop
int
repz
push
cmpl
xor
or
xchg
sub
fldt
and
nop
push
inc
push
lods
inc
push
ss
into
mov
xchg
jbe
insb
ror
mov
add
adc
xchg
mov
pop
inc
addb
or
in
movsl
add
xchg
push
cmc
xchg
dec
lock
cmc
sti
sub
mov
xchg
mov
and
sbb
ss
aad
arpl
lret
les
fstp
ss
sahf
frstor
movsb
cmpsb
ljmp
sbb
and
lods
xchg
adc
imul
pop
clc
sub
dec
dec
cltd
mov
cmpsb
fwait
out
jns
xchg
push
xor
mov
popa
dec
xchg
push
push
pop
jge
daa
cli
dec
mov
sub
mov
insb
ret
jbe
and
inc
movsb
nop
jmp
sub
andl
add
jne,pn
xchg
add
jl
dec
mov
enter
mov
lods
add
outsb
in
sbb
add
push
das
inc
sarb
sbb
dec
and
sub
fs
pop
fsubrl
xchg
repz
adc
ds
pushf
cmpsb
in
mov
in
mov
adc
adc
enter
fistpl
cwtl
cmp
sbb
pop
in
ret
mov
sub
lods
push
jmp
xor
fwait
imul
imul
sbb
out
mov
cltd
or
push
aaa
xchg
xor
lahf
aad
scas
bound
cmp
stc
fadd
adc
and
fucomp
mov
or
das
and
or
xor
xchg
cmp
pop
jg
add
das
mov
ret
paddb
dec
js
es
or
ljmp
mov
fisttps
inc
fsubrl
lods
xchg
sbb
jo
data16
hlt
inc
lret
popa
push
xchg
loope
push
ja
incb
js
mov
imul
les
lret
sub
and
scas
cmp
push
hlt
fst
and
ss
adc
imul
ss
movd
push
aas
rcrb
out
pop
insl
xor
pop
cmp
lahf
js
bound
test
xlat
movsb
push
std
jmp
xchg
xor
inc
lea
outsb
cli
in
enter
imul
fsubl
or
loope
pop
push
push
add
das
lcall
mov
and
clflush
sbb
test
pop
mov
pop
test
mov
push
sub
or
lds
insl
or
gs
test
bound
cmp
mov
xor
ss
roll
pusha
push
pop
lods
and
stos
adc
mov
mov
popf
mov
add
pop
dec
cmp
call
imul
je
ja
movsl
cltd
mov
pop
jge
and
cmc
scas
inc
push
or
xchg
xchg
sbb
mulb
ss
jb
out
mov
iret
test
dec
inc
fcoms
in
xchg
imul
mov
idivb
adc
scas
sub
data16
mov
sti
adc
lret
fisubs
mov
lock
pop
scas
int
aam
ffree
cmpsb
mov
and
pop
in
lds
lret
fdivs
in
xor
fidivl
inc
xchg
movl
into
std
jo
sbb
int3
mov
mov
mov
ret
in
sbb
adc
push
es
int
pop
add
pop
out
adc
xchg
mov
clc
push
push
ljmp
push
dec
or
int3
mov
jns
and
js
xchg
test
jbe
pop
popf
lods
cs
je
and
mov
in
sbb
ljmp
sub
inc
xor
cmp
mov
xorb
ror
lret
push
sub
xchg
insb
sbb
aas
jb
dec
xor
jbe
in
push
mov
enter
xor
sub
jae
out
or
or
jno
adc
pop
js
out
xchg
mov
mov
sbb
pop
cld
cmp
in
push
pop
negb
js
and
aad
or
mov
fcoml
into
cli
sbb
push
jns
xchg
and
gs
and
mov
jne
sub
scas
jns
iret
mov
sbbl
xor
lahf
sti
leave
push
push
and
ror
sahf
sub
in
int
mov
fisubrs
mov
xchg
hlt
gs
bound
or
fists
insl
aad
cmc
xchg
jnp
test
rcrb
xorb
push
into
jp
xchg
rcr
push
mov
cmp
call
mov
inc
test
fiadds
cmc
sbb
xchg
and
lea
in
cs
push
mov
jg
hlt
mov
inc
loopne
iret
cltd
sub
mov
adc
xchg
pop
pop
jbe
push
mov
lret
cmp
mov
aam
cmp
jns
sub
add
and
outsb
cld
mov
icebp
cmc
in
or
imul
in
fsubl
mov
decl
xor
ficoms
mov
std
lds
fnsave
in
ljmp
inc
sub
mov
mov
sub
fcoms
std
pop
ret
pop
push
leave
xor
imul
int
push
inc
jne
pop
adc
cltd
sahf
mov
pandn
out
sub
arpl
call
or
push
push
cmp
cs
addr16
outsb
jmp
adc
adc
sbb
pop
or
xchg
jecxz
push
push
pop
mov
sub
or
clc
cmp
stc
cmp
andl
xlat
or
arpl
scas
inc
arpl
pop
fildl
push
pop
sub
mov
dec
aad
add
call
xchg
add
jno
xor
xchg
dec
xchg
jns
mov
jbe
pushf
add
add
pusha
inc
rolb
aam
pop
adc
mov
dec
jecxz
add
stos
jbe
cmc
mov
test
cmp
repnz
clc
fcomp
sub
test
sbb
inc
xchg
sbb
outsl
ja
cmp
mov
in
push
cmp
aam
lds
lcall
xchg
out
xchg
lods
aaa
cmp
aad
enter
cwtl
ficoms
mov
in
arpl
inc
data16
pop
daa
mov
ja
shlb
push
jo
aaa
sbb
es
sbb
fidivs
addb
cwtl
dec
outsb
sti
sub
push
inc
mov
movsb
cmp
test
lahf
loopne
dec
in
cltd
pop
push
ret
pop
mov
arpl
dec
inc
clc
jge
mov
cmc
fldcw
pusha
push
divl
jecxz
mov
fmul
adc
jg
fwait
push
mov
xchg
cmp
inc
mov
test
xchg
cmpl
add
cmc
mov
daa
lret
aam
stos
out
push
and
jle
imul
popa
dec
jle
das
test
ss
jae
cmpsb
or
cmp
mov
mov
xor
xor
dec
test
aas
inc
sbb
mov
or
push
pop
push
dec
fwait
movsl
pop
adc
ljmp
int3
repz
ficompl
xchg
test
xchg
inc
call
jle
ret
dec
or
lret
or
fucom
sahf
loop
add
xchg
shll
xchg
mov
sbb
push
fisttpl
shlb
sub
das
in
fcmovnb
ss
popw
sub
pop
in
out
loop
dec
push
mov
loopne
xchg
xchg
cmp
cmp
popa
movsl
mov
add
je
dec
in
sbb
xchg
fs
or
rep
mov
aaa
adc
in
aas
je
test
pop
mov
inc
sub
or
mov
pop
or
mov
xchg
push
ds
pop
pop
mov
in
stos
push
xchg
xlat
movups
aad
push
mov
push
mov
add
bound
mov
push
daa
cwtl
adc
data16
pusha
inc
shl
rcrb
push
test
mov
xchg
int
pop
cmp
jbe
inc
je
xorl
adc
std
mov
add
jge
in
pop
adc
call
bound
dec
add
leave
cld
rcrl
retw
mov
lods
jns
cmp
das
cltd
insb
xchg
stos
pop
and
jmp
mov
mov
dec
daa
pop
sbb
fistps
movsl
jno
lret
or
sub
sub
sub
jo
push
jb
in
mov
mov
je
add
icebp
dec
int
or
cltd
lahf
clc
mov
push
pop
mov
pop
data16
cmc
cmp
pop
mov
in
daa
push
loop
dec
sbb
sahf
push
out
push
sahf
das
push
pop
add
xor
jg
test
js
ret
ret
sbb
mov
jmp
jg
jle
clc
shlb
xor
cwtl
jo
adc
dec
or
dec
xor
jmp
adc
sbb
popa
adc
gs
lcall
lds
lods
push
daa
outsb
xchg
push
xor
jp
mov
inc
push
pop
in
jmp
dec
leave
xchg
or
fs
movsl
cmp
xchg
jae
test
ja
out
jnp
loop
mov
loopne
ss
inc
cmpsl
dec
mov
pop
sub
mov
xchg
dec
inc
outsb
insl
mov
addl
lods
in
and
jo
mov
dec
out
das
lcall
mov
into
pusha
pop
inc
add
sub
xchg
xchg
call
mov
repnz
dec
push
jns
dec
loopne
dec
push
or
and
mulb
inc
lea
cmpsb
lods
pop
push
mov
movsl
jp
hlt
cmp
cmpsl
ret
lock
jmp
cmpl
mov
in
movsl
insb
leave
daa
repz
je
fsts
mov
pop
adc
dec
add
decl
ret
outsl
add
bound
push
leave
jnp
rcll
xor
jmp
lcall
out
cmpsb
mulb
add
pop
jecxz
adc
test
imul
outsb
jle
xor
movsl
gs
push
aad
in
imul
or
dec
jle
jo
xchg
dec
in
mov
in
scas
jge
aaa
mov
add
xchg
inc
xchg
sti
mov
rorb
add
bound
xchg
aaa
fxch
sub
add
fmulp
push
idiv
imul
lret
xchg
xor
and
cmpsl
push
jle
pop
adc
fdivrs
sbbb
leave
loope
cmpsb
xor
hlt
adc
ljmp
iret
mov
mov
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
jg
dec
cmp
das
pop
aas
imul
pop
mov
fwait
ljmp
scas
fstpt
or
aad
dec
cmp
cmp
rol
xchg
lock
jecxz,pt
repz
sahf
rcll
fisubrs
jb,pt
push
push
inc
outsl
and
pop
add
scas
jecxz
repz
sahf
shr
mov
fsubp
outsl
jae,pt
inc
push
push
outsb
push
jle
dec
add
scas
cli
mov
lret
out
mov
fimuls
outsl
cmp
or
jno
jl
scas
mov
mov
imul
xor
mov
dec
push
fucomi
mov
sti
jecxz
jns
lret
out
shl
inc
inc
jl
insb
pop
pushf
rorl
inc
subl
jg
cwtl
xor
je
inc
mov
into
arpl
pop
sub
lods
rolb
sbb
mov
jb
out
mov
ficoms
ds
bsf
fimuls
cld
push
add
inc
or
cmp
cmpsl
push
arpl
into
mov
sti
inc
lahf
dec
mov
push
ljmp
mov
xchg
sbb
sub
push
sbbb
rorl
call
lods
sbb
jle
dec
add
icebp
hlt
mov
shr
mov
fimuls
push
pop
push
dec
outsb
cmp
dec
sbb
cli
and
mov
mov
jae
inc
jp
sbb
xor
insb
sub
mov
lcall
lcall
pop
push
push
jbe
jnp
and
fs
addr16
nop
repz
cmpsl
mov
mov
sbb
arpl
jae
inc
push
push
outsb
and
dec
add
scas
jecxz
repz
sahf
shr
mov
ficoms
push
inc
push
push
outsb
and
dec
add
scas
jecxz
loopne
inc
int3
rcrl
dec
sub
pop
inc
add
shrb
lock
dec
cli
movsl
mov
cmp
add
jmp
in
shlb
or
faddl
pop
call
testb
scas
rorl
in
jmp
addr16
notl
pop
adc
insb
into
sbb
cli
or
lock
scas
call
jnp
push
and
xchg
daa
stos
jns
adc
loopne
into
or
jecxz
push
or
mov
std
gs
sbb
inc
in
jnp
mov
sbb
test
jg
sub
stos
adc
cld
or
pop
loope,pt
add
bnd
loop
mov
push
scas
out
aas
push
cwtl
lahf
adc
nop
mov
fisubl
xchg
rol
push
insb
sbb
out
pop
sub
pop
mov
insl
mov
inc
pop
add
or
fwait
shll
and
xlat
idivl
push
scas
fistl
dec
adc
enter
inc
shlb
push
mov
xor
adc
lods
push
rorl
adc
hlt
push
repnz
pop
popf
push
mov
mov
loopne
or
cs
dec
jecxz
punpckldq
mov
cmp
or
test
repz
clc
jne
mov
xchg
jle
ret
jecxz
sbb
das
es
dec
out
or
and
aas
push
gs
incb
mov
lea
test
push
jbe
mov
inc
xor
pop
gs
fwait
jno
cmp
jne
test
mov
jae
arpl
sub
mov
les
dec
inc
dec
dec
push
xchg
into
out
test
cmp
mov
sbb
or
adc
mov
cmpb
stos
pop
push
mov
push
jg
mov
mov
pop
sub
adc
stos
cmp
aam
push
xorl
out
or
stos
dec
sti
xchg
or
repz
inc
jno
jbe
pop
lods
aad
push
rclb
insl
pusha
jle
xchg
cltd
and
mov
pop
xchg
adcl
xor
mov
ljmp
xchg
imul
adc
mov
mov
and
and
add
adc
lcall
or
or
fnstenv
aas
scas
pop
and
call
in
xor
jns
ja
lahf
sub
sub
ss
mov
mov
jl
sbb
sar
pop
aaa
pop
or
inc
sarb
fistps
sbbl
jecxz
cwtl
push
je
xor
pop
adc
xchg
int3
xchg
mov
add
aad
arpl
in
push
push
popa
xor
test
sub
jge
mov
mov
mov
lds
aam
sti
das
and
add
nop
jmp
sub
and
mov
stos
aam
lret
mov
lret
mov
dec
imul
test
addr16
sbb
jne
lret
neg
stos
out
aaa
mov
test
out
or
std
pop
mov
in
inc
les
jl
imul
dec
or
or
adc
loopne
jnp
mov
test
mov
mov
push
fcoml
or
jb
mov
and
inc
roll
ret
mov
and
or
inc
and
mov
lods
lods
shrb
push
jg
out
dec
icebp
pop
inc
shlb
inc
jo
in
shrl
or
and
mov
subl
cli
stos
enter
jmp
cmpl
and
in
jnp
mov
mov
dec
mov
aas
push
cmp
xor
ljmp
mov
das
and
mov
gs
lahf
and
lahf
lods
shl
cld
aaa
add
or
clc
xchg
test
call
lea
test
repz
mov
ds
mov
add
inc
adc
stos
or
addl
mov
sub
addr16
in
or
les
xchg
inc
test
dec
lds
or
mov
test
iret
mov
cli
das
add
mov
sbb
cmp
xor
test
jmp
mov
jae
loop
insl
loope
adc
addr16
push
call
out
insl
js
iret
rorl
push
sbb
jmp
fstl
adc
pop
inc
int3
fwait
insl
push
mov
mov
dec
mov
pop
jo
notl
sbb
frstor
xchg
mov
pop
xchg
push
and
jne
stc
push
into
mov
add
and
pop
xchg
sbbl
push
gs
mov
stos
xchg
jl
push
sub
jo
mov
sbbb
and
xchg
mov
xchg
cmp
add
mov
cmp
dec
mov
add
es
push
in
pop
imul
repz
push
out
sbb
cmpl
imul
pop
sub
add
mov
repz
addr16
mov
jle
jbe
divb
imul
add
cmp
test
cmp
int
mov
jo
mov
test
nop
faddl
cmp
shl
gs
in
inc
fwait
data16
rep
lds
aad
inc
out
pop
das
shll
adc
pop
push
push
lods
je
dec
lock
pop
dec
mov
mov
scas
and
lock
addr16
and
fiaddl
xchg
stos
aas
rcr
jae
arpl
sub
xor
fcomps
sub
sarb
push
pop
shlb
ja
mov
jns
sbb
push
insl
push
je
or
pushf
jno
ds
pop
sbb
jmp
aam
popfw
mov
lahf
nop
pop
mov
enter
pop
mov
pop
xchg
fdivr
xor
lock
popf
out
sbb
inc
adc
sahf
jl
rcrb
aam
sub
sbb
sbb
pop
popl
mov
and
cmp
call
adc
ja
sub
addr16
loopne
fimuls
rcr
dec
ljmp
stc
sub
sbb
mov
vmwrite
arpl
sbb
shlb
sahf
addr16
stc
fs
pusha
mov
outsl
or
mov
sub
push
bnd
push
mov
lcall
js
out
sahf
pop
out
mov
decl
dec
fidivrl
push
outsl
xor
fisubrl
xchg
and
pop
pop
out
and
jecxz
jl
stos
mov
mov
iret
out
and
sub
xlat
add
ds
jbe
or
out
xor
and
clc
xchg
stos
nop
ds
ret
mov
imul
pushf
or
add
sbb
frstor
pop
into
fistl
jp
shrl
movl
das
push
fbstp
push
test
call
fimuls
or
ss
xor
xor
xchg
ss
cwtl
ds
dec
cmpsb
imul
test
sub
push
test
xor
xchg
or
fbld
sub
outsl
imul
in
in
add
fstp
decb
insl
xchg
push
sahf
cltd
cltd
cmp
je
mov
xorl
dec
out
inc
rorl
clc
dec
or
xorb
add
inc
in
and
dec
fwait
les
xchg
repz
js
mov
notb
pusha
repnz
dec
or
adcl
xchg
mov
repnz
es
xchg
popa
xchg
pop
orl
or
aas
or
cmp
cmp
xchg
fldt
cmp
mov
pusha
arpl
mov
aam
movsb
mov
clc
mov
jl
ret
out
adc
aaa
sub
cmpsb
sbb
jg
repz
xor
jmp
add
ljmp
pushl
out
in
std
lea
scas
test
jo
pusha
jne
mov
cmp
aad
jle
movsb
mov
pop
wbinvd
mov
mov
mov
mov
adc
fwait
pop
pop
stc
and
inc
lcall
mov
in
lahf
mov
mov
stos
mov
daa
fimull
lret
push
pop
pop
cmp
jns
ret
xor
fidivl
movsb
hlt
pusha
mov
mov
adc
cs
fisubl
sahf
cs
jle
dec
push
imul
loop
pop
loop
ja
sbb
div
les
dec
cmp
aad
not
jge
ja
sahf
fst
fdivs
enter
je
sbb
jl
fcompl
fistps
iret
cmpsl
pusha
fimull
fs
bound
xchg
mov
sahf
sbb
sti
lods
test
sbb
push
add
fimull
in
fstpl
outsl
cmpsl
in
or
aas
fnstcw
arpl
sahf
addr16
mov
jge
cmp
lret
push
push
mov
sbb
lret
mov
fwait
stos
push
adc
aam
test
mov
stc
dec
xchg
insb
or
rclb
jl
stc
and
mov
mov
jae
rclb
push
lods
mov
je
hlt
aas
mov
lds
jno
xchg
out
mov
mov
mov
fldenv
idiv
pop
mov
mov
pop
or
mov
fisttps
pop
hlt
adc
sub
cs
out
insl
fstps
aam
pop
mov
sbb
mov
sub
sarb
push
lods
clc
pop
enter
jge
push
dec
adc
korw
and
lret
aad
loop
stos
ret
out
jbe
lods
sar
add
js
imul
jno
decb
sbb
bound
iret
sub
insl
call
xor
aad
fstpl
dec
inc
movsb
mov
rcr
cld
xorl
mov
sahf
enter
out
xor
mov
pop
inc
imul
out
lods
insb
sbb
ret
xchg
repnz
scas
cmp
movsb
xrelease
pop
nop
mov
inc
xor
call
xor
enter
ljmp
rclb
lcall
andl
mov
jge
or
fisttps
in
icebp
mov
pushf
scas
mov
inc
rclb
push
pop
sahf
aad
mov
cmc
push
mov
dec
lock
js
pop
cli
hlt
gs
fildll
or
inc
mov
jns
lock
adc
xchg
jne
mov
or
fwait
sub
fmul
scas
push
pop
pop
cmp
xor
lods
sbb
jge
and
mov
inc
push
in
mov
or
pushf
rcl
and
pop
in
dec
cltd
sub
dec
mov
xchg
cmpsb
add
out
xchg
addr16
movsb
adc
in
aad
int3
or
mov
or
pop
shrl
int3
clc
pop
xor
add
outsl
mov
jp
aaa
and
dec
cli
imul
hlt
insl
aam
pop
sbb
imul
cmc
jmp
cld
insl
ja
addl
jns
into
cmc
repz
daa
jnp
pop
mov
jnp
repnz
rcrb
pop
aas
adc
or
orl
pushf
fs
imul
sbb
sbb
add
or
adc
mov
pop
pushf
shl
clc
mov
xchg
lods
or
push
xor
lahf
xchg
and
ret
adc
fldpi
cmp
inc
jl
xlat
xor
mov
and
gs
and
daa
insb
xor
mov
mov
push
fimuls
push
clc
add
stos
pop
rolb
inc
mov
inc
sahf
in
sbb
popf
pushf
pop
mov
cmp
sbb
js
xor
scas
fdivrl
xorb
push
jo
xor
mov
ss
xchg
loope
mov
xchg
shll
sub
mov
in
sti
mov
and
inc
in
test
mov
call
es
inc
adc
jb
mov
mov
pusha
xchg
xchg
mov
loopne
gs
mov
stc
sbbl
pop
test
icebp
pushf
mov
adc
mov
in
cli
ss
pusha
lds
aam
arpl
fmull
ss
xchg
les
fadds
repnz
clc
imul
lods
addr16
push
imul
fs
testl
push
sahf
sbb
push
sub
outsl
jl
loopne
test
ja
adc
mov
adc
push
loopne
cmc
cmp
dec
rcrl
jne
cmp
arpl
outsb
xor
orb
loopne
scas
das
jle
inc
sub
sbb
or
bound
cmp
sbb
mov
pop
imul
scas
sbb
adc
hlt
ret
add
mov
mov
jle
jp
addl
pop
adc
fsubl
fiaddl
outsb
or
addr16
in
fnsave
mov
pop
add
je
inc
insb
sbb
sub
and
mov
pushf
pop
sbb
jno
ss
xlat
dec
push
ss
in
jbe
cmc
sub
or
aas
sbb
fwait
cmp
pop
rcrl
ret
cmp
lock
xchg
mov
jno
dec
mov
inc
fcomps
sub
xchg
mov
mov
mov
aaa
stc
pop
ljmp
mov
add
sub
outsb
pop
and
adc
or
das
pop
pop
jl
and
aaa
add
add
lods
clc
sbb
lea
inc
mov
sbb
in
movsb
repz
shrl
out
mov
or
imul
cltd
or
mov
ljmp
adc
fistpll
aaa
push
leave
clc
and
or
mov
stos
jb
lahf
sub
cld
mov
mov
inc
aad
mov
cmp
xor
lahf
adc
pop
add
ret
xor
lret
mov
mov
mov
inc
sub
popa
mov
xchg
imul
movsb
xchg
push
xor
rcrb
ss
lods
jl
pop
outsl
inc
pop
adc
mov
jo
adc
and
mov
in
xor
mov
xchg
dec
xchg
add
xorw
jnp
rol
stos
lds
test
sbb
xor
inc
arpl
dec
in
jmp
sbb
inc
dec
addl
push
mov
jnp
aad
sub
movsb
fdivr
push
into
lcall
out
adc
sti
jecxz
pusha
imul
sbb
sbb
shrb
mulb
mov
outsl
stos
pop
test
mov
leave
fisubrl
push
inc
pop
lret
and
inc
mov
or
add
or
divb
adc
xchg
xchg
sbb
rorb
xorl
pop
aad
dec
cmpsl
sbb
and
mov
mov
mov
mov
mov
xchg
inc
enter
aam
mov
repz
push
out
dec
dec
stos
push
icebp
int
int
cmp
xchg
jae
sub
dec
stos
sbb
test
jns
shll
stc
add
cmp
jbe
cli
jmp
jp
rolb
out
xchg
shl
iret
xor
sahf
sahf
fisubl
bnd
mov
call
dec
mov
lds
or
pop
mov
dec
inc
jns
subl
out
adc
leave
pop
clc
mov
addr16
rorl
dec
jmp
aas
leave
lahf
insb
scas
cmp
fcoms
clc
dec
lock
sarl
je
push
test
adc
inc
mov
push
stos
fmul
push
sbb
loope
xchg
hlt
js
pusha
pop
lret
xor
in
mov
call
push
add
and
mov
daa
or
jne
cmpsl
jecxz
lea
clc
xor
mov
gs
xchg
ljmp
lods
notl
xlat
mov
fistpl
bswap
adc
ret
call
pop
xchg
pop
mov
test
fsubrs
push
cmp
inc
or
mov
outsb
arpl
iret
sbb
int3
lea
jae
inc
sbbb
fimull
in
aad
mov
jnp
rolb
push
or
clc
or
subb
cmpxchg
cli
mov
adc
daa
in
jae
dec
xchg
iret
cmp
sar
mov
mov
jae
jbe
mov
xor
sub
fidivrs
cwtl
xor
inc
lds
mov
iret
push
pop
test
cmpsl
out
insl
test
test
aas
push
xchg
and
xor
sub
or
lret
adc
outsb
rolb
shll
cmp
inc
rcl
std
lods
jbe
test
fs
stc
hlt
inc
dec
sahf
ret
adc
rcll
jbe
xlat
stos
pop
stos
jns
test
cli
xlat
stos
addr16
stc
mov
neg
push
int3
sbb
cmpsb
mov
popf
int3
push
rorl
jle
adc
rorl
repnz
or
jns
inc
and
inc
jb
lahf
test
pop
dec
pop
out
push
mov
inc
push
push
out
sbb
dec
sbb
pop
mov
xchg
push
lcall
adc
push
popa
pop
and
gs
cmpsl
int3
adc
mov
test
test
mov
dec
lcall
jns
dec
adc
leave
jno
fwait
pop
cmpsb
xor
dec
test
movsl
mov
outsb
mov
nop
add
lock
jnp
aas
mov
push
mov
insl
imul
pop
fisubrl
pusha
inc
pop
in
adc
std
cmp
mov
pop
subl
dec
mov
dec
mov
or
xchg
test
popf
jmp
mov
push
jg
push
inc
xchg
inc
push
cmp
xchg
sub
xor
xchg
iret
or
lcall
xchg
nop
cmp
je
sbb
pop
int
and
cmp
insb
call
insb
in
out
mov
out
mov
jnp
mov
or
push
mov
loopne
push
nop
test
cmp
adc
imul
pop
hlt
aaa
lcall
addr16
mov
faddl
cld
sub
mov
sti
popa
xchg
or
inc
xor
jbe
es
mov
ljmp
lcall
mov
fmull
sbb
xchg
fwait
orb
sub
fnstcw
push
das
es
leave
adc
insb
and
jnp
lret
dec
xor
data16
test
jl
or
dec
mov
mov
xchg
leave
outsb
jle
test
dec
rolb
gs
mov
inc
stc
cmpsl
aam
xlat
int3
flds
pushl
inc
ret
leave
leave
dec
add
adc
sbb
cld
ja
adc
imul
adc
jns
jmp
cmc
lahf
mov
sub
lds
mov
dec
cmc
fs
mov
dec
sub
pusha
int3
out
push
xchg
mov
loope
and
mov
insb
lock
xor
iretw
jle
or
jge
and
xchg
fcompl
sub
adc
sti
divb
pop
pusha
out
lret
aad
loope
ljmp
mov
push
fsubrs
mov
xlat
dec
xchg
inc
push
aaa
or
or
ja
add
pop
out
lds
ss
incl
add
adc
jae
out
cli
and
out
test
mov
das
lods
pop
in
jbe
aas
subb
sahf
adc
jns
in
iret
mov
mov
inc
push
sbb
dec
jecxz
sub
xor
sahf
adc
push
xlat
call
lret
or
cwtl
insl
sub
dec
and
xchg
xorl
leave
mov
dec
mov
cld
ret
fisttps
dec
out
shll
inc
stos
nop
lds
jns
loop
inc
shrl
fcoms
push
cmp
jns
push
add
xor
cmp
or
mov
enter
push
xlat
sbb
or
pop
lcall
insb
addl
or
imul
or
mov
cmpb
imul
xlat
adcb
inc
sar
fdivrp
imul
stos
jbe
jl
add
inc
push
xor
orb
xor
mov
sarl
pop
gs
movsl
mov
mov
ljmp
and
outsb
out
sahf
mov
sarl
sbb
mov
xor
sub
in
cmp
lahf
cld
mov
bound
int
jnp
pop
cmp
mov
xchg
cmp
mov
aas
popf
xor
dec
or
lret
cmpsb
out
inc
pop
pop
pop
aam
sbb
jns
inc
out
lods
xchg
lock
jmp
push
lret
popa
xor
pop
fistpl
fsubrp
mov
sbb
divb
fsubp
pop
xchg
data16
push
movsb
cli
aad
add
sahf
shr
mov
ficoms
push
inc
push
push
outsb
and
dec
add
scas
jecxz
repz
sahf
shr
mov
ficoms
push
inc
push
push
outsb
and
dec
add
scas
jecxz
repz
sahf
shr
mov
ficoms
push
inc
push
push
outsb
and
dec
pop
pop
pop
scas
out
testl
sbb
arpl
fldenv
testb
insb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
jecxz
mov
inc
fbld
scas
jb
enter
pop
add
add
add
pop
add
add
jbe
lock
add
add
add
cmp
add
add
pop
add
stos
add
add
add
je
push
add
add
add
add
add
add
add
pop
add
mov
sbb
add
add
add
add
add
add
add
add
add
add
cmpsb
add
test
adc
add
push
push
testb
add
add
pop
add
add
add
sti
add
add
add
push
xor
mov
leave
add
add
add
add
add
add
cmpsl
add
in
add
add
jno
mov
loopne
sti
add
add
push
push
add
add
add
add
jbe
sbb
test
add
add
mov
jae
inc
add
add
add
add
add
dec
add
inc
add
pop
add
stos
add
push
add
add
add
and
add
add
add
add
add
add
sbb
inc
add
jmp
mov
addl
pop
add
add
dec
add
pusha
add
add
add
add
add
add
add
add
add
sbb
add
add
repz
add
add
pop
push
add
add
add
add
add
fwait
add
add
mov
pop
add
add
pop
add
add
add
add
push
add
add
add
inc
add
jnp
mov
mov
pushf
add
add
add
int3
add
icebp
add
add
cmpsl
add
and
test
push
add
add
add
add
jno
sbb
push
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
sti
add
jae
imul
add
mov
add
xor
mov
daa
add
xchg
add
int3
add
add
add
cmp
roll
jo
pop
add
pop
add
cmp
add
add
add
add
add
add
xchg
add
mov
repz
add
add
xchg
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
movb
add
and
jge
lods
add
adc
add
add
add
add
push
add
add
jb
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
mov
mov
insl
add
mov
add
inc
add
or
xchg
add
add
add
add
add
dec
pop
flds
cmp
add
sub
add
add
push
imul
push
mov
into
xchg
jg
movl
cld
pop
stos
loope
inc
in
cmpsb
pushf
adc
imul
jmp
lcall
leave
xor
or
jne
sbb
jmp
cmp
sbb
jmp
out
mov
push
insl
lea
scas
add
add
roll
pusha
cmp
fisttpl
xchg
mov
xchg
xor
pusha
and
xchg
jg
pop
mov
les
shrb
mov
out
cmc
sbb
leave
pop
xlat
jl
jne
jecxz
cmp
push
add
dec
fmuls
jge
out
insl
ljmp
movsl
add
in
mov
pop
mov
repnz
enter
fwait
cmp
mov
mov
mov
pop
fs
cmp
aaa
adc
adc
faddl
jae
sti
enter
mov
fldcw
and
mov
arpl
loop
nop
out
stos
mulb
shr
sub
xor
pop
add
ret
and
cmp
pop
xchg
jmp
add
xchg
out
aad
outsl
out
scas
mov
mov
mov
in
faddl
repnz
scas
sub
dec
loope
and
js
sbb
sub
stos
jb
pop
or
negb
mov
sub
dec
dec
nop
subb
and
rcll
rorl
lcall
stos
mov
dec
aam
mov
jge
scas
les
rcrb
push
cmp
cmc
cwtl
mov
cld
aad
das
pusha
ret
mov
dec
mov
lods
jns
xor
adc
xchg
jg
cmp
xchg
jae
jnp
sub
or
outsl
lret
enter
in
pop
stos
test
mov
mov
test
jmp
mov
mov
mov
pop
inc
clc
popf
inc
push
shll
xor
stos
mulb
xchg
outsl
mov
and
stc
add
shlb
pop
mov
mov
ss
pop
add
dec
sbb
inc
or
gs
arpl
push
push
cmp
sti
pop
mov
mov
inc
mov
mov
fidivrl
mov
fwait
cmovp
ror
pop
dec
xchg
mov
popf
pop
add
lods
shll
mov
mov
loop
xchg
sbb
mov
outsb
jg
test
cmp
scas
xor
dec
pop
xchg
ljmp
ja
dec
sbb
data16
mov
arpl
inc
jne
inc
pop
aaa
inc
loope
xchg
fidivrl
hlt
pop
jecxz
jne
arpl
jb
jle
sahf
push
jge
and
push
shll
and
push
mov
xor
insl
inc
inc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
