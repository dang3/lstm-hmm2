fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
mov
sbb
mov
pop
out
dec
and
inc
mov
sti
and
adc
add
sti
cmp
sub
sbb
or
pop
cmpl
mov
inc
mov
xchg
inc
jmp
fwait
add
sub
add
push
mov
fs
xor
lods
jg
fs
jo
mov
ret
inc
xchg
outsb
mov
cmp
xchg
inc
adcb
pop
enter
data16
sahf
xor
jmp
dec
mov
jp
xchg
mov
sahf
sahf
sti
lods
repz
mov
mov
xchg
fimull
roll
inc
and
out
mov
lods
push
mov
jmp
sbb
sti
fwait
cmp
jnp
add
inc
xor
inc
scas
mov
adc
xor
cwtl
jbe
push
ret
sub
add
xlat
push
lret
dec
mov
xor
shrb
xor
sti
jecxz
sub
xor
cmp
call
mov
inc
xchg
mov
and
fistl
dec
sarb
fcmovnbe
lahf
scas
add
cmpl
insl
mov
cmp
movsl
subl
and
xorb
cs
and
add
and
pop
xchg
dec
lahf
addr16
xchg
jp
ficoml
pop
pushl
and
ss
das
in
inc
stos
inc
cmpsl
mov
subl
push
xchg
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
cld
jnp
pushf
daa
jmp
int3
dec
repz
rol
je
pushf
and
dec
mov
xchg
cltd
xchg
mov
fwait
lods
jnp
icebp
divl
dec
pop
aas
mov
sbb
and
lods
adcl
js
lret
sbb
lcall
push
icebp
mov
das
movsb
outsb
ret
mov
mov
push
xchg
addl
in
mov
mov
aaa
ja
adc
cmp
rol
mov
outsl
mov
out
jae
xor
add
mov
in
xchg
sub
mov
into
fwait
stos
mov
jne
cmp
sbb
dec
dec
dec
jmp
pop
test
cmpb
aas
mov
push
mov
lret
das
xor
movsl
xchg
test
and
dec
dec
mov
cwtl
arpl
cmp
int3
sub
nop
push
cld
dec
lock
leave
jl
shll
xchg
sub
add
jmp
les
xor
nop
and
sbb
mov
mov
xchg
or
pop
stos
daa
lods
jne
sub
lds
xor
sub
mov
in
jae
jne
jp
into
pop
mov
xchg
fsubr
push
mov
repnz
mov
jmp
jg
loope
adc
dec
ja
push
pusha
push
stc
fdiv
push
movsl
je
sub
inc
gs
or
cmp
pusha
push
adc
icebp
jmp
fcomip
std
push
sub
cs
mov
dec
xchg
jl
insl
adc
movsb
dec
cmpsb
sti
pop
fnstsw
std
sub
xorb
loope
es
into
sbb
loop
imul
and
push
ds
in
pandn
cwtl
cmpsb
les
mov
pop
fildll
pop
cld
rcl
and
mov
lods
push
cld
into
pop
enter
jne
pop
loop
negl
pop
shll
cmp
les
mov
ds
int
jmp
icebp
jns
in
xchg
and
dec
push
ret
xor
push
les
push
shl
fcoms
cli
and
in
sti
add
mov
notb
sub
mov
pusha
loope
mov
pop
out
mov
adc
mov
sbbb
pop
mov
inc
dec
icebp
mov
out
add
and
aas
fidivs
adc
iret
loopne
and
jno
out
pop
mov
fwait
sub
gs
mov
sbb
jbe
sub
rcrl
sub
xor
mov
lods
js
mov
pop
popa
push
sbb
sub
andl
mov
adcb
xor
lock
xor
jne
or
jb
insl
xor
test
lods
stos
jae
movsl
addl
les
mov
sbb
pop
mov
mov
inc
cmc
test
sbb
mov
movsl
mov
inc
mov
sub
xor
daa
sarl
xor
adc
dec
fistpll
xchg
cmp
push
xchg
loop
out
mov
and
sub
xchg
rcrl
in
mov
jb
cld
push
call
cmp
sti
in
sbbb
dec
jno
out
jmp
hlt
fwait
arpl
ret
test
jne
movsb
adc
sub
dec
lods
mov
add
add
push
stos
adcb
call
mov
inc
int3
loopne
dec
test
cmpsl
repnz
pop
fimull
adc
add
setle
mov
mov
rorb
repz
push
cmp
test
add
and
movsb
fcoms
inc
pop
push
sbb
mov
push
int
aas
pop
and
and
test
adc
lds
stos
or
jo
icebp
ja
or
jb
mov
shll
add
fistpll
pusha
ret
mov
jecxz
xor
ret
and
ljmp
adc
loop
leave
push
jno,pt
test
xchg
sub
test
push
mov
xchg
iret
jmp
mov
pop
jl
aad
lods
xchg
daa
in
in
mov
ss
scas
jnp
cmovae
mov
das
adc
add
testl
xorl
ss
andl
scas
dec
mov
inc
jge
sub
pop
xlat
sbb
lock
adc
or
lds
mov
test
xor
push
mov
aad
push
adc
aam
movsl
sbb
adc
pop
int
icebp
mov
jmp
pop
xchg
push
mov
xchg
mov
cmp
in
pushf
or
cmp
and
push
pop
test
cmc
sbb
ficoms
popf
mov
mov
negb
fisttpl
imul
push
inc
sbbb
js
push
pop
lock
xchg
xchg
add
aas
movsb
inc
mov
push
pop
push
sub
dec
pop
pop
inc
jne
jo
data16
sbb
and
out
mov
shr
mov
xchg
dec
xchg
jbe
sarl
xor
xchg
jbe
dec
negb
movsl
adc
aas
jecxz
pop
shlb
popf
filds
neg
inc
mov
movsl
mov
adc
mov
dec
or
push
lahf
mov
xchg
adc
mov
stc
aad
lods
in
movb
aas
cmpsl
mov
pop
inc
and
gs
cmpsb
lahf
dec
or
inc
cmpb
std
cld
int
gs
clc
mov
call
shll
lret
aas
stos
jae
loope
ja
cwtl
call
cs
ror
decl
mov
imul
sahf
pop
test
lret
pop
cmp
loop
dec
pop
movsb
and
cmp
inc
aad
pop
adc
adcl
outsl
mov
cmpsb
lahf
dec
xor
pop
push
lods
adc
in
lods
pop
fidivl
mov
pop
cmpsb
add
lret
jle
sub
cmpsl
jp
add
and
sub
add
cltd
dec
cmpl
or
sub
push
lcall
xlat
data16
fcoms
mov
cmp
xchg
fdivrl
sahf
nop
stc
arpl
mov
aas
enter
adc
sub
iret
adc
inc
dec
add
ds
push
in
lcall
aam
push
daa
pop
sub
add
push
sahf
mov
mov
lods
movsl
sub
insl
mov
and
nop
repnz
mov
cltd
lods
loop
adc
sbb
negb
sbb
xchg
fndisi(8087
inc
lds
les
add
ljmp
dec
inc
mov
pop
ror
or
sub
mov
mov
maskmovq
int3
ss
mov
fsqrt
push
pop
outsl
in
lea
out
movsb
jle
jp
pop
loope
iret
int
add
ret
inc
lea
leave
outsl
xchg
in
outsl
xchg
pop
roll
mov
jp
fcomp
xchg
mov
sbb
les
xor
and
int
cmp
movsl
jmp
push
mov
ljmp
mov
neg
xchg
mov
mov
and
lods
dec
fistpl
mov
xor
loope
dec
lret
jns
mov
mov
or
mov
and
pushf
cltd
xchg
fisttpll
pop
add
pusha
jg
xor
or
test
daa
jae
clc
cmp
cltd
lods
arpl
jle
imul
mov
adc
dec
rolb
cmp
in
push
sub
out
push
push
loop
mov
mov
and
stc
dec
test
inc
lds
mov
xor
cwtl
fwait
pop
mov
cmp
popa
scas
mov
loopne
pop
mov
mov
ljmp
ret
and
shlb
pop
pop
ss
add
mov
push
jecxz
and
jl
pop
mov
fisttpll
cmpsl
jo
test
and
aam
hlt
popa
mov
cmpsb
subl
mov
negb
inc
inc
iret
inc
sub
lds
inc
arpl
and
mov
test
or
mov
lods
loop
dec
lds
in
or
movsb
in
xchg
cmpsw
loop
sti
movsb
pop
jno
in
xchg
cld
adc
in
int3
cmp
pusha
nop
sti
test
or
pop
test
aas
jae
pop
sbbb
imul
nop
xor
push
mov
mov
or
mov
int
mov
xchg
push
mov
mov
scas
xchg
or
outsl
std
enter
mov
pop
mov
popf
mov
cltd
popa
imul
adc
adc
js
int3
adc
subb
cli
stos
xchg
das
jbe
stc
ror
popa
es
aas
int
sub
loope
gs
es
mov
enter
inc
addr16
xchg
adc
sub
lock
mov
add
loop,pt
cmp
dec
sbb
hlt
or
icebp
scas
stos
lods
xlat
jge
or
arpl
xor
mov
xor
pop
inc
xor
jg
push
mov
aas
insb
inc
lds
pop
push
mov
sub
lock
in
pop
and
xchg
sub
not
mov
incb
test
jno
sub
jl
or
sahf
pop
push
push
bound
addr16
push
mov
movsb
mov
mov
test
les
jg
loopne
adc
aam
lcall
mov
xor
push
push
xchg
out
add
sub
jnp
mov
loopne
add
in
push
xchg
pop
dec
aaa
or
hlt
pop
movsl
outsb
call
sub
inc
mov
arpl
js
jecxz
lahf
ljmp
xchg
jl
test
mov
in
nop
xchg
lret
jb
sub
aad
push
mov
pop
sahf
out
fs
les
pop
fsubl
push
scas
fmull
dec
add
shlb
and
jl
je
cmp
push
mov
cs
inc
cwtl
push
shl
sbb
jg
in
addb
jl
push
sti
loope
mov
xor
xchg
std
scas
std
push
pushf
in
adc
sti
inc
xchg
or
inc
mov
bnd
or
mov
das
sub
sub
fs
addr16
shll
fcmovne
insl
repnz
add
scas
test
xor
js
xchg
pop
addr16
iret
stos
and
sub
lahf
lds
pusha
ficomps
mov
and
scas
test
insl
cmpsl
loopne
fisubs
dec
cmp
mov
inc
sbb
in
and
cld
repnz
xchg
pushf
jbe
aaa
jbe
aad
out
fnstenv
mov
adc
popf
pop
imul
loopne
mov
mov
and
jb
cli
add
test
ss
repnz
mov
pusha
in
jbe
je
arpl
mov
pop
insl
pop
in
lods
std
sbb
mov
dec
mov
cmp
popf
xchg
sub
xchg
mov
xorb
push
sub
stos
test
fsubs
sub
pop
or
mov
mov
sub
shll
inc
shlb
jns
cltd
test
push
les
lahf
and
ljmp
pop
das
ds
add
pop
js
movsl
cmp
addr16
xchg
mov
mov
push
mov
cs
dec
xchg
sub
enter
call
negb
adc
sub
sbb
jnp
in
shl
xchg
adc
xchg
lahf
sbb
add
ja
add
mov
xor
movsl
jecxz
fildl
jl
stos
daa
mov
sub
int
push
lods
or
push
iret
push
cmp
popa
aam
jne
push
dec
jmp
or
fcmovnbe
pusha
into
lahf
cmc
inc
fwait
addl
mov
sti
movsl
jne
mov
or
in
add
and
mov
clc
cs
sahf
xchg
es
and
sub
mov
movsl
sub
and
loopne
xchg
and
push
fdivp
xor
nop
xchg
in
adc
outsw
div
xchg
sub
cltd
add
xor
les
xchg
movl
aad
rcll
xchg
sarl
mov
cmp
rorl
cld
mov
mov
mov
mov
pop
lods
test
in
aam
and
test
bound
call
scas
rclb
lea
cmc
ja
arpl
ss
cwtl
and
call
mov
xchg
ljmp
sub
add
ret
pusha
mov
mov
push
rcrb
jae
in
inc
mov
jae
jb
push
sbbl
dec
insl
adc
adc
xlat
fbld
cmc
dec
sub
notl
mov
mov
jno
push
je
or
std
bound
push
stc
xchg
inc
insl
aas
add
push
mov
scas
jl
movsb
jmp
in
and
enter
dec
mov
or
call
cmp
fbld
popa
mov
movsl
out
out
imul
mov
xchg
rclb
addr16
movsb
jae
mov
cmp
push
scas
fnsave
or
mov
arpl
lods
mov
adc
lcall
lock
mov
and
or
inc
push
cld
sub
shrl
es
stos
hlt
mov
js
std
sbb
cmpsb
scas
mov
mov
arpl
rol
cmpl
mov
dec
ja
gs
or
sbb
dec
push
shll
fdivr
inc
or
out
lcall
dec
cmc
sti
les
and
or
mov
in
or
aad
xor
das
mov
cmc
ret
add
jecxz
out
ret
jo
jge
jbe
dec
push
mov
jp
push
inc
mov
push
xor
cs
push
xor
into
add
dec
or
mov
jbe
push
mov
xor
ja
pop
jnp
xchg
fisubrs
jbe
lret
mov
subb
roll
inc
mov
jbe
bnd
fcompl
lds
add
sub
mov
dec
adc
xchg
pop
pop
lock
adc
std
xor
push
mov
cmpb
xchg
ljmp
add
jb
xlat
stc
sbb
clc
mov
push
imul
ja
cmpsb
mov
aaa
sbb
xchg
aaa
addr16
inc
push
jns
mov
addr16
ja
mov
icebp
cmpsl
push
outsl
mov
clc
jo
push
icebp
fsubl
cs
lcall
out
xor
and
adc
and
jb
sub
repz
jecxz
insb
pop
sti
mov
ret
leave
push
cmp
sbb
jmp
inc
aad
lds
jo
dec
test
and
mov
out
int
or
punpckldq
call
inc
insb
cmp
inc
push
mov
jne
xor
xchg
pop
jecxz
mov
adc
inc
adc
sbb
add
enter
dec
jg
xlat
lods
jae
test
xor
scas
pop
call
scas
vrsqrtps
scas
test
push
push
pop
mov
sub
push
roll
das
int3
shrb
jecxz
nop
pusha
add
xor
outsl
dec
mov
loop
cmpb
iret
fsubrs
jns
mov
mov
jne
test
mov
fmuls
outsb
stos
mov
bound
ljmp
xor
sbb
mov
sub
dec
add
jge
mov
sbb
out
pushf
pop
aam
inc
pop
xchg
inc
xchg
mov
call
push
mov
jnp
push
out
sub
add
push
sti
lods
cmp
test
mov
pop
pop
lea
inc
mov
jg
call
fsts
push
push
outsb
xchg
add
daa
insl
or
fwait
add
dec
idivl
test
push
sub
push
addr16
into
mov
xchg
fcomps
mov
call
out
sbb
or
cmovg
popf
inc
sub
inc
fs
lods
imul
jnp
mov
push
outsl
arpl
fwait
add
cli
push
mov
lea
jae
outsl
adc
pop
icebp
xor
nop
xchg
or
aas
and
sub
inc
jecxz
and
lcall
sub
outsl
sbb
adc
insl
sub
jb
sbb
sub
or
sbb
cmp
xchg
lret
jecxz
dec
inc
jo
dec
dec
js
push
stos
out
cmp
fstpt
dec
nop
mov
mov
aas
xchg
inc
pusha
clc
fwait
push
jecxz
pop
out
adc
lahf
mov
add
cwtl
jp
cli
sbb
cmp
scas
fwait
xchg
pop
out
scas
mov
shll
aas
adc
pushf
pop
outsb
je
sbb
mov
and
add
mov
pop
mov
and
jge
rorb
and
scas
dec
push
xchg
lcall
popa
sub
loop
mov
in
arpl
jmp
sub
dec
fbstp
cmpsl
dec
testb
sub
fmul
xor
dec
insl
adc
inc
add
movb
mov
scas
test
ss
jle
insb
divl
imul
sub
push
xchg
inc
push
aas
rolb
pop
or
push
cli
or
in
popa
andb
mov
xchg
test
in
out
xchg
ja
icebp
out
or
enter
out
bswap
dec
filds
push
sub
push
mov
xor
hlt
mov
pop
cltd
icebp
in
hlt
mov
add
jmp
or
arpl
rolb
jbe
test
jp
jp
lods
add
out
adc
jb
pop
adc
aad
mov
inc
rorl
xor
fistpll
sub
je
adc
mov
cmp
ja
jge
cmc
xchg
adc
cs
pop
add
fwait
in
scas
add
cmpsb
stos
and
adc
push
sbb
ss
mov
adc
movsb
xchg
adc
dec
sbb
jmp
push
loop
mov
andb
add
and
mov
mov
jbe
mov
push
inc
sarl
and
shrb
arpl
mov
jecxz
rcr
mov
mov
es
into
lock
cwtl
or
fnstcw
fdivrs
sbb
les
ret
sbb
je
jp
dec
fnsave
or
fldenv
loopne
pop
mov
cmp
ret
fbld
or
fwait
lret
inc
mov
jnp
test
rcr
andb
pop
add
adc
lret
jmp
addr16
insb
push
in
mov
lods
adc
icebp
lea
sub
jno
jl
sub
sbb
sub
scas
test
movsb
jmp
aam
cwtl
stos
leave
push
call
cmpsl
in
in
mov
push
pop
or
and
outsl
pusha
pusha
repz
lahf
cmp
cltd
ss
div
and
sbb
sub
stos
and
xlat
hlt
xor
je
cld
mov
or
sub
sbb
cltd
mov
hlt
adc
jno
xchg
or
movzbl
out
inc
sub
push
inc
add
out
fs
and
das
cmp
mov
out
comiss
sub
mov
inc
mov
in
xchg
and
and
adc
jae
add
pop
xor
ret
mov
ljmp
test
lock
ljmp
push
push
push
pop
pop
pop
mov
mov
add
sub
dec
mov
pop
in
dec
pop
repnz
and
cmp
in
lods
push
lods
xchg
sub
sub
cmpsl
lock
sub
sbb
pop
int
fwait
adcb
clc
jnp
ds
test
cmc
repz
xor
fimull
test
ds
sub
jle
push
addr16
ds
xchg
adc
cmpsb
pusha
cmp
dec
inc
loop
jno
mov
lods
fidivl
cmpsl
push
bound
jo
out
cli
daa
fists
add
inc
or
fisttpll
add
and
sbb
mov
pop
add
loope
sbb
push
xor
or
clc
xchg
xlat
inc
mov
or
imul
aas
mov
xchg
in
cmp
sub
ret
mov
rclb
ret
and
shlb
xchg
movsl
in
pop
xchg
insl
daa
nop
pop
jmp
mov
jmp
push
push
mov
dec
mov
sub
jmp
jb
aam
add
insl
mov
xchg
cmp
mov
lret
les
push
fldenv
nop
adc
ret
mov
mov
flds
orb
cmp
push
fstpl
cmp
shl
mov
ret
add
pusha
sbb
mov
repz
cmp
xlat
mov
jmp
jae
loopne
shr
insl
fstpt
add
sbb
cltd
add
or
pop
orl
arpl
xor
and
adc
add
repz
sub
sbb
or
pop
orl
arpl
xor
and
adc
add
repz
arpl
arpl
or
pop
orb
arpl
xor
cmp
pop
sti
xor
jmp
iret
sub
jmp
mov
mov
xchg
fildl
dec
jae
pushf
add
fwait
inc
cld
inc
jae
adc
and
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sti
push
mov
xorl
loope
mov
lds
loopne
hlt
popa
xchg
xor
inc
mov
movsb
mov
mov
mov
xchg
fs
icebp
adc
xor
push
sub
xor
gs
shl
popa
out
xchg
push
movsb
mov
insb
mov
call
ds
cmp
insl
lea
dec
fstpt
xor
cmp
rcrl
mov
int
incl
jmp
xlat
sub
fimull
leave
mov
lock
out
insb
lea
dec
dec
pop
frstor
jge
xor
fs
divl
lret
sbb
call
movsb
sbb
fisubrl
enter
inc
push
cmp
pop
leave
jns
aam
les
out
sbb
mov
loope
or
aaa
les
adc
inc
shll
add
dec
imul
dec
mov
mov
mov
xor
cmp
dec
sub
into
cmp
adc
xchg
jo
int3
out
and
mov
into
mov
pop
sahf
jp
and
into
scas
decb
adc
mov
mov
mov
subl
add
xor
cmp
sbb
or
jns
imul
adc
add
pop
mov
les
jg
or
mov
pop
xchg
or
inc
xchg
push
and
fs
in
test
rcll
enter
in
xchg
and
xor
and
aam
les
hlt
adc
popa
xchg
jno
inc
mov
movsb
mov
je
fs
icebp
add
xor
and
aam
les
hlt
adc
popa
xchg
jno
inc
mov
movsb
mov
repz
data16
lahf
fstpl
cmovge
in
es
roll
cld
cmpsl
fldenv
xor
adc
inc
add
div
inc
loop
mov
dec
add
jo
sbb
scas
imul
das
test
nop
fidivrs
rolb
cmp
into
dec
jl
mov
pop
push
cmp
mov
sbb
lcall
inc
pop
ljmp
add
mov
mov
negl
addl
mov
or
sbb
dec
add
mov
dec
mov
sbb
sbb
adc
pop
out
fbld
aam
mov
data16
ja
push
ret
push
sub
jp
lods
xor
xchg
mov
mov
push
xchg
hlt
pushf
xchg
sub
sub
push
fisttpll
testb
pop
aas
int
cld
dec
out
sbb
mov
xor
and
hlt
jg
inc
repnz
mov
jl
pop
clc
pushf
sub
into
push
lock
dec
sahf
sbb
sar
mov
das
mov
lds
arpl
push
outsl
pusha
pop
mov
int
adc
stc
and
in
push
inc
mov
push
xchg
in
call
push
jle
shlb
xchg
es
test
pop
xor
lret
test
xor
and
lock
xchg
ja
loop
mov
test
cmpsb
gs
xchg
lock
mov
rolb
mov
and
jl
sbbb
sub
xor
jnp
mov
pop
dec
loopne
iret
push
in
push
out
mov
out
cmpsl
cmp
jo
add
inc
mov
popf
sbb
cli
xchg
mov
icebp
lds
sub
and
sub
iret
or
dec
cwtl
cmp
inc
or
dec
cmp
lahf
mov
cli
mov
cld
icebp
sbb
push
repz
adc
fwait
mov
stos
and
lods
jl
cmp
sub
sub
mov
jl
loop
out
outsb
or
in
iret
mov
stos
pop
mov
inc
pop
sahf
addb
cwtl
pop
xchg
sub
out
enter
test
add
orb
fxch
sbb
push
xlat
mov
cmpsl
in
mov
push
cmp
push
sub
lea
out
jnp
in
and
stos
mov
ljmp
adc
rcrb
rcll
pusha
inc
inc
mov
and
sub
pop
push
aas
mov
out
cld
xor
xchg
pushf
loopne
enter
lea
inc
sub
pop
out
push
push
push
fistpl
inc
inc
cli
sub
or
movb
jne
mov
addr16
mov
test
mov
scas
sbb
stos
orb
adc
push
dec
rorl
jg
movsb
xchg
out
fstpt
adc
dec
leave
andl
filds
fidivrs
inc
mov
xchg
xchg
loop
popf
sarl
inc
ds
xchg
out
cmp
cmp
mov
sub
xchg
or
cmp
add
insb
add
pop
pushf
cs
es
rcl
xor
arpl
ret
add
pop
js
mov
hlt
enter
mov
mov
jle
jne
xchg
and
dec
pusha
icebp
hlt
pop
mov
xchg
out
call
or
stos
mov
cmpsb
push
sbb
into
lods
jae
inc
fadds
lea
loop
dec
jne
mov
inc
rcll
ljmp
inc
adc
movsl
cmc
sbb
xchg
test
ja
mov
insb
xchg
mov
outsl
lret
or
je
pop
mov
das
insb
scas
insl
clc
imul
sbb
gs
int
ljmp
mov
loopne
lahf
mov
sub
mov
or
in
out
test
xchg
fs
adc
adc
or
cmp
add
insb
fisubrl
test
int3
push
ret
mov
push
push
xor
or
fcoms
push
lahf
sti
addb
enter
test
fdivr
insb
adc
stos
stos
sbb
jns
pop
dec
pop
inc
and
cmp
imul
bound
mov
mov
add
mov
xor
xchg
xor
lods
rolb
dec
fildl
mov
xor
cmc
pushf
xlat
lods
ret
cld
mov
cwtl
out
cli
stos
leave
popf
testb
loope
and
xor
jecxz
in
aaa
mov
fdiv
ja
jo
lret
popf
lea
sub
ja
nop
or
je
jns
sahf
push
cmp
out
xor
xchg
sub
sub
test
movsb
cwtl
inc
mov
lahf
cmp
xorb
mov
fisttps
sbb
lods
test
aas
adc
enter
xor
mov
or
and
loopne
inc
or
xor
jmp
icebp
push
mov
loop
insb
pop
icebp
insb
cld
movsl
adc
insb
pop
sub
pop
push
cmp
insl
ljmp
outsb
outsb
mov
loop
push
xchg
mov
jnp
femms
inc
gs
mov
cmp
and
jl
pop
or
test
and
cmp
fs
mov
xor
sbb
mov
arpl
or
push
out
pop
ficomps
stos
cmp
mov
push
push
dec
lds
imul
and
ret
leave
mov
jb
mov
call
lahf
dec
std
jge
or
xchg
popf
leave
mov
jecxz
dec
cmp
inc
add
movsb
sbb
ljmp
xor
ja
call
inc
scas
mov
sbb
mov
ja
sti
mov
jbe
fs
imul
pop
xor
movsl
ljmp
sub
add
imul
fistps
or
sub
dec
in
fwait
jne
lcall
adc
xor
pop
lock
out
mov
clc
xchg
insl
imul
pop
add
pop
imul
repnz
jbe
leave
mov
lahf
push
aas
arpl
xchg
dec
add
movsb
pop
push
jb
in
inc
pop
iret
sbb
mov
jbe
jo
xchg
xlat
inc
lret
sub
or
jbe
xor
inc
sti
inc
sbb
mov
jae
adc
mov
jo
add
addb
insl
pop
mov
sbb
cmp
push
stos
dec
xor
xchg
mov
inc
int3
fwait
and
sbb
pop
fsubrs
mov
sub
mov
mov
ja
cmc
mov
mov
or
into
pop
xchg
faddl
add
ss
enter
fldenv
imul
mov
ds
mov
push
jne
out
inc
lea
dec
daa
dec
stc
shll
cli
xor
testb
ljmp
dec
dec
mov
push
mov
fs
shlb
out
aaa
sub
jl
inc
into
xchg
mov
sub
inc
test
ret
mov
mov
xlat
jnp
cs
orb
cmp
cmpsb
lea
fdivs
mov
mov
xlat
mov
rcr
xchg
jmp
push
mov
fisubrl
negl
mov
mov
push
or
and
sbb
aas
pop
jb
outsb
fwait
add
outsb
mov
mov
test
xchg
std
mov
outsb
sti
push
int
lea
dec
mov
scas
adc
sub
mov
cmp
and
jl
ret
inc
inc
lock
mov
dec
mov
enter
loope
xchg
dec
or
and
lds
repnz
out
dec
mov
mov
sbb
mov
pop
inc
loope
jnp
dec
xlat
into
aam
cld
dec
out
jmp
push
stos
mov
fists
int
sbb
testl
out
sub
loop
inc
push
pop
dec
jl
mov
nop
outsb
dec
test
cmpsl
popa
pop
dec
decl
sarb
push
or
adc
fiaddl
pushf
rol
xorb
jno
dec
leave
stos
mov
lock
jmp
sub
push
fidivrs
insb
addb
push
addr16
jb
in
mov
mov
add
cmp
aad
add
shl
jmp
add
xor
mov
push
in
jp
movsl
and
rcrb
scas
inc
pop
adc
push
es
pop
fstl
hlt
dec
push
in
jo
pop
jmp
les
push
jnp
cltd
mov
add
lods
inc
mov
push
xchg
stc
popa
inc
outsb
mov
gs
add
xchg
inc
xchg
xlat
lret
push
repz
cmc
ficompl
xor
dec
push
inc
lret
pop
fs
scas
or
repnz
int
jle
fwait
inc
nop
push
fdivrs
cmp
iret
pop
outsl
mov
pop
mov
mov
cmc
xor
ds
fiaddl
mov
pop
bound
bound
mov
push
push
cs
or
pop
push
mov
dec
or
out
and
movsb
bound
stos
roll
sbb
leave
lcall
fwait
xchg
or
lahf
mov
movsl
loopne
mov
aad
and
imul
push
xchg
inc
les
push
mov
roll
cmc
mov
aas
roll
jecxz
and
outsb
lret
std
push
sti
sbb
pop
pop
push
stos
xchg
pop
hlt
cwtl
xchg
xchg
and
in
adc
pop
ljmp
mov
or
xor
mov
jg
lods
fnstsw
adc
sub
push
fmul
mov
leave
test
xchg
add
leave
inc
fcom
data16
or
jmp
pusha
bound
jbe
ja
ljmp
push
cmc
imul
fs
pusha
lock
add
push
fimuls
das
call
ss
stos
push
xor
shlb
adc
mov
cli
push
cltd
cmp
ficomps
data16
or
outsb
mov
dec
in
push
sbb
je
aas
mov
xchg
and
jmp
dec
push
add
add
idivl
jb
test
or
xchg
cmp
lahf
inc
movsb
adc
xor
movsb
xchg
sbb
mov
sub
lock
popa
in
push
lcall
mov
inc
jp
lods
lock
cs
ljmp
mov
test
cmp
add
out
in
pop
cmp
das
jbe
jmp
ss
lcall
sub
mov
dec
pop
mov
popa
fwait
push
shr
mov
lds
sbb
das
xchg
jae
popf
rclb
lea
into
outsl
push
scas
adcl
scas
stc
dec
jns
pop
std
clc
xchg
outsl
mov
push
push
and
mov
orb
aam
add
mov
dec
or
or
push
adc
testl
jne
fistpl
outsl
popa
shrl
in
cmp
push
pop
jo
imul
into
iret
in
fiadds
jb
stos
sub
addb
mov
add
dec
sub
and
in
add
inc
arpl
orb
adc
mov
xor
mov
or
hlt
test
xchg
jno
push
out
xchg
jo
adc
js
mov
negb
scas
popf
jg
sub
jle
xor
jmp
insl
ds
pop
iret
pop
jg
cld
push
xchg
jbe
out
popa
sbb
imul
cmpsl
push
cld
adc
pop
mov
insl
popf
insl
jp
dec
sahf
or
mov
lods
pop
ss
pop
jle
mov
out
dec
fsubrl
mov
add
sbb
popf
ljmp
imul
std
cmp
sub
ret
adc
or
aad
jno
pop
mov
add
jns
ds
arpl
outsb
out
jge
mov
ret
popa
xor
cmp
ljmp
and
adc
lea
jmp
pushf
aam
testl
aaa
out
pop
test
fmulp
sbb
sti
shlb
sbbb
notb
test
ffree
and
leave
mov
jne
out
dec
add
jne
leave
lds
inc
jp
gs
ret
xchg
push
std
popf
and
push
mov
adc
lods
xchg
rcrl
negl
mov
aas
test
daa
test
sub
loop
stos
iret
inc
dec
cmp
repnz
mov
dec
popa
pushf
outsl
call
iret
pushf
cltd
inc
xor
into
lret
push
dec
sbb
xor
jl
dec
dec
mov
clc
cli
ret
pop
mov
and
dec
mov
jecxz
cmc
rcll
cmp
sbb
push
das
sub
mov
push
ja
aaa
mov
cmc
lret
jns
mov
imul
addr16
mov
add
add
adc
lea
pop
xchg
lret
jmp
lahf
mov
imul
inc
test
insb
and
cmp
mov
inc
cmpsb
dec
pop
pop
rorl
cmp
push
cmpsl
pusha
testb
out
cmp
mov
pop
arpl
and
pop
stc
xor
lret
pop
and
cmp
and
pusha
lods
lret
sub
xlat
outsl
mov
test
cmp
pop
lods
dec
arpl
push
xlat
out
cwtl
pop
adc
imul
loopne
fstps
insb
xor
dec
lcall
in
pop
movsl
inc
jl
pop
std
mov
cmp
pop
dec
into
dec
add
sbb
dec
lahf
mov
and
mov
push
ja
pop
mov
enter
or
cmp
lcall
mov
sub
add
inc
mov
bound
mov
mov
mov
test
jmp
sahf
icebp
inc
dec
dec
movsb
sub
lods
stos
unpckhps
lds
mov
xchg
sbb
push
je
loope
repnz
int3
or
mov
ss
hlt
mov
add
data16
or
insl
push
lahf
push
in
cld
or
les
xor
and
jmp
lret
xchg
pop
jae
cs
test
insl
and
xchg
fadds
adc
cmp
cmp
int3
pop
scas
sbb
mov
or
adc
sbb
xor
imul
sbb
sbb
mov
sbb
loope
xchg
jg
add
pop
adcb
xchg
out
add
cmp
rclb
aam
and
sbb
es
shl
les
pop
in
out
and
ds
cltd
sbb
testl
pop
add
cmp
inc
push
jno
mov
insl
jbe
pop
xor
daa
bound
rcrb
lods
xchg
add
fnstsw
pop
sub
adc
sbb
scas
mov
mov
inc
mov
push
jne
add
pushf
xorb
xchg
shll
inc
lock
push
in
ss
mov
imul
push
sub
jle
sbb
test
sbb
mov
insb
fucomip
in
xchg
hlt
scas
mov
inc
mov
fs
sub
jae
xchg
xchg
jle
fnstcw
clc
rclb
cmp
ret
test
fidivs
call
leave
bound
xorb
xor
pop
jae
arpl
jge
sub
loope
sub
jbe
or
insl
mov
in
or
andb
in
mov
and
stos
xor
xchg
lahf
mov
push
pop
jnp
shr
jne
es
sub
jb
adc
jg
xor
mov
neg
sub
pop
add
mov
xor
clc
mov
dec
mov
add
sub
clc
inc
lea
dec
add
cmp
mov
popf
push
out
sti
icebp
fnstsw
cld
xchg
aad
sbb
and
mov
xchg
or
xchg
js
enter
pop
cli
xor
pop
xorps
xchg
pop
adc
inc
pop
push
cmc
xchg
nop
push
and
add
xchg
and
je
pop
xor
das
mov
mov
xlat
or
push
fs
data16
pop
arpl
fisubs
push
rolb
imul
fstpl
pop
cwtl
inc
fadds
pop
outsl
popf
scas
pop
mov
add
jnp
jno
sbb
pop
andl
lcall
mov
pop
lret
testl
rcrl
addr16
das
out
and
fs
mov
stc
inc
test
std
incl
repnz
sub
fs
mov
and
xlat
or
test
pushf
ror
xchg
or
mov
filds
dec
dec
mov
jne
mov
in
ret
fs
lahf
fwait
cli
into
cld
cmp
pop
arpl
popa
cmpsl
sysret
mov
cmpsb
iret
jl
shr
dec
int
pusha
cmp
adc
mov
scas
sub
xor
cmpsb
sub
jo
add
xchg
or
bound
mull
lods
sub
mov
mov
add
ficoms
lods
adc
roll
icebp
inc
and
xlat
shlb
or
mov
xchg
movsb
mov
dec
lret
cmp
xchg
sub
shlb
mov
sub
pushf
or
fnstsw
imul
jbe
xchg
xchg
out
cmp
stos
inc
cmp
jecxz
xchg
jne
push
xchg
ret
xor
out
adcb
inc
in
push
repnz
pop
enter
dec
in
arpl
inc
or
out
out
xchg
call
mov
jno
stos
iret
out
call
insl
sbb
shrb
or
das
pushf
arpl
push
lret
xlat
stc
add
sbb
and
xchg
cmpsl
scas
jo
mov
push
fdiv
outsb
pop
scas
mov
cwtl
cmp
das
insl
sub
rolb
push
sbb
imul
xor
fisubl
and
cmp
adcl
mov
push
jle
ss
nop
rcll
bound
sub
std
rcr
ret
sbb
push
stc
out
mov
or
outsl
xchg
jo
pop
daa
test
jl
mov
push
jmp
out
je
loop
xlat
pushf
les
fsubrs
sbb
adc
or
es
test
stos
lds
lret
test
hlt
inc
xchg
cs
out
rclb
xor
push
in
push
sub
inc
dec
popf
enter
call
sbb
rcrl
in
mov
hlt
outsl
and
mov
int3
call
xor
sbb
jmp
jb
mov
sub
add
das
js
mov
and
cmp
loopne
je
aad
jno
pop
repz
pushf
lahf
inc
pop
sbb
andl
imul
fldcw
arpl
lcall
sbb
dec
fisubs
popf
mov
out
mov
inc
das
fnstenv
and
jmp
sub
cmpsb
mov
sub
dec
test
ds
addr16
ja
test
add
push
dec
or
inc
pop
imul
insb
dec
and
inc
in
ja
out
in
ds
out
xchg
jb
nop
mov
xchg
cmc
sub
loop
dec
data16
movsb
pusha
movsb
movb
xchg
jle
cs
dec
adc
mov
arpl
push
and
mov
frstor
dec
jb
xchg
push
fcom
jle
andb
dec
jo
call
lods
js
fcomps
sub
sbb
jle
mov
cld
jo
sub
inc
sbb
hlt
xorl
adc
xor
cltd
mov
sahf
cmp
dec
js
add
pop
pusha
lret
cmpsb
lret
call
adc
pop
add
sbb
or
stos
mov
rcll
enter
lock
xor
shlb
je
cmpsb
mov
ret
icebp
add
std
jge
ret
ss
lds
shll
sub
push
and
daa
xchg
xor
mov
add
repz
rcrl
int
push
ja
aas
je
dec
lds
mov
loope
mov
inc
test
repz
push
mov
stc
sub
push
mov
mov
jmp
or
inc
rcll
add
nop
pop
jns
fadd
cmpsl
mov
cs
mov
imul
add
dec
push
sbb
xchg
testl
lea
je
in
jne
or
clc
mov
bound
jge
shl
fs
push
in
xchg
clc
scas
and
add
notb
lret
in
fcompl
idivb
push
pop
scas
mov
xor
mov
xchg
leave
mov
clc
cmp
and
into
pop
or
push
dec
mov
sbb
inc
in
enter
push
mov
dec
idivb
jb
mov
insl
mov
popa
ja
lahf
out
mov
sub
mov
sub
pop
mov
mov
sub
mov
xchg
push
roll
cs
mov
je
sti
pop
push
jg
test
fiaddl
xchg
fs
icebp
add
xor
and
aam
les
hlt
adc
popa
xchg
jno
inc
mov
movsb
mov
je
fs
icebp
add
xor
and
aam
les
hlt
adc
popa
xchg
jno
inc
mov
movsb
mov
je
fs
icebp
add
xor
and
aam
les
xchg
jne
inc
mov
mov
mov
xchg
fs
icebp
add
xor
in
aam
outsb
stos
hlt
adc
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
jle
outsb
push
push
push
mov
into
or
sbb
mov
pop
scas
lods
pop
mov
outsb
in
push
std
push
int
fstl
fidivrs
out
insl
bnd
dec
mov
mov
outsb
in
push
std
push
int
sub
mov
push
lret
insl
shlb
fstp
sub
int
data16
ss
movsl
lods
cmp
dec
xchg
popa
fucomi
sahf
sbb
xor
clc
and
jmp
push
repnz
test
pop
stos
ret
jmp
mov
mov
mov
push
inc
int
jnp
mov
pop
cmpsl
loop
rorl
sbb
push
mov
cmp
mov
fst
cmp
jp
push
lea
push
scas
push
sub
fisubrs
mov
add
push
fisttpll
inc
and
pop
add
mov
mov
mov
cs
sbb
iret
jmp
js
nop
sti
sbb
pop
mov
lea
outsb
in
push
std
push
int
sub
sbb
mov
pop
fstps
psraw
outsb
scas
jnp
mov
jp
cmpsl
iret
bound
xor
and
sub
repnz
sub
sbb
outsb
mov
inc
int
movsl
dec
jg
push
mov
lods
js
es
sbb
sbb
or
sub
sbb
mov
pop
scas
lods
pop
mov
outsb
in
push
std
push
int
sub
sbb
mov
pop
scas
lods
pop
mov
lods
sahf
push
loope
mov
insb
cmp
fs
mov
sub
add
bound
call
insl
mov
cs
sub
leave
jecxz
popf
fcomps
push
jg
adc
pop
arpl
push
imul
xor
pop
or
or
dec
fidivs
push
fbstp
shrl
fadds
fsts
lahf
cmp
mov
push
mov
orl
icebp
cmpsl
sub
and
pop
dec
adc
jmp
les
xchg
mov
imul
outsl
movsl
cmp
outsb
and
pop
adc
gs
push
mov
or
dec
xchg
in
cmpsl
cmp
jne
inc
pop
roll
std
into
or
cmp
stc
pop
gs
dec
imull
push
and
sbb
xor
insb
rcrb
stc
test
dec
add
inc
adcl
xchg
push
outsl
cld
outsl
shrl
mov
stos
pop
daa
mov
jo
add
mov
xchg
mov
pop
dec
add
push
pop
lds
js
rcr
into
dec
push
cmp
lds
cmp
fs
movsb
loopne
lods
jge
inc
sub
adc
test
push
xlat
and
fnsave
out
lcall
outsb
xor
out
xchg
lcall
into
mov
sub
sbb
std
mov
testl
rorb
push
mov
jb
push
into
xor
xor
sbb
stos
add
in
cld
mov
add
and
xor
cmp
stos
nop
lret
outsb
movsb
mov
sbb
out
push
or
fisubl
push
scas
hlt
mov
mov
dec
cs
testb
stc
pushf
filds
popf
cmp
dec
sbb
outsl
add
in
push
mov
mov
test
cmpsb
mov
mov
mov
lcall
or
not
xor
setl
enter
lea
movsb
and
xor
inc
movsb
outsl
and
das
dec
sbb
mov
hlt
xchg
mov
stos
leave
sbb
mov
mov
sbb
lcall
jmp
pusha
lcall
dec
pushf
fcompl
mov
jno
cld
push
sbbl
scas
or
gs
pop
iret
adc
fs
push
les
shr
adc
mov
push
lea
sbb
push
hlt
sbb
movsl
add
adcl
mov
pushf
mov
mov
xchg
cmp
mov
lock
rcrl
cmc
lods
les
lds
xchg
enter
cmc
sub
fcompl
test
jo
movsl
push
mov
xlat
jbe
push
xchg
jle
xor
outsl
mov
inc
into
dec
push
dec
pop
mov
scas
xor
pop
addr16
aaa
dec
mov
test
add
jp
movsb
sbb
jns
mov
or
lock
jb
cli
xchg
fsubrs
pop
lcall
mov
push
je
fsubrl
test
ss
jne
mov
cmpsl
and
movsl
in
pop
loope
pop
in
arpl
cmp
shlb
int3
scas
jmp
push
sbb
mov
cs
imul
jne
scas
adc
arpl
andl
jnp
nop
xorl
sub
mov
or
inc
in
test
dec
insl
xor
and
dec
xor
movsb
cld
cld
jb
mov
sbb
xor
loopne
inc
fcmovbe
and
pop
sbb
mov
dec
mov
pop
shrl
imul
les
inc
idivb
push
push
addr16
fs
mov
add
jbe
pop
push
ret
push
mov
lock
jmp
mov
fnstcw
mov
in
adc
and
mov
inc
out
or
cli
pushf
cmp
mov
xchg
mov
lock
lgs
adc
mov
xchg
fwait
jbe
push
fbld
cld
push
scas
jns
cmpsl
std
test
xlat
dec
add
dec
add
inc
std
xchg
icebp
popa
js
ja
dec
adc
jmp
cmpsl
jae
jno
mov
lods
das
mov
sub
lods
xchg
inc
inc
sbb
out
cmp
addr16
push
jbe
popa
pop
pop
inc
addb
jp
mov
ret
daa
adc
stc
push
scas
sbb
push
idivb
cmpsb
inc
mov
daa
cmp
push
push
test
mov
aam
popl
scas
mov
add
jl
es
pop
add
ja
imul
ret
popf
mov
jb
fmull
les
inc
pop
addr16
lods
in
shlb
int3
cmp
sbb
adcb
in
enter
jecxz
out
mov
popf
ja
or
mov
aas
cld
lock
pop
adc
jo
push
pop
xchg
outsb
fimuls
arpl
sbb
inc
and
aam
pop
mov
jl
adc
push
lret
mov
jb
push
lds
push
dec
inc
cmpsl
adc
add
jg
test
push
sbb
cmp
ret
jmp
pop
xor
dec
ds
jae
jl
sub
mov
inc
mov
cmp
xor
and
sub
andl
add
lahf
loop
mov
xchg
add
jl
movsl
sub
stos
rcrl
ja
fistl
in
icebp
js
pushf
cwtl
stos
mov
mov
cmp
inc
inc
adc
sub
push
xchg
push
jno
mov
xchg
pop
outsl
adc
inc
and
dec
mov
shlb
dec
push
sbb
jae
mulps
mov
inc
inc
in
iret
sub
ret
add
mov
mov
imul
insb
pop
and
clc
cmc
push
push
out
repnz
pop
inc
mov
les
lds
jnp
mov
sub
fildll
aam
push
pop
cmp
loopne
mov
subl
enter
fs
fs
out
pop
or
stc
mov
dec
mov
xchg
mov
lcall
pop
adc
dec
jne
ss
cmp
ds
pop
sti
fwait
sbb
and
adc
add
push
insb
push
dec
repnz
cld
daa
mov
test
xor
sub
cld
xchg
xchg
dec
sub
pop
testl
das
ljmp
stos
in
aas
mov
in
pop
adc
jp
movb
mov
adcl
jp
ficompl
popf
insl
in
mov
ret
jg
dec
mov
sub
push
xchg
shll
sbb
jno
andb
sbb
mov
mov
fdivrl
dec
inc
pop
adc
dec
test
bound
pusha
popaw
adc
dec
aas
inc
out
out
inc
pop
cmp
imul
stos
movsl
xchg
out
push
sub
add
or
bound
lret
pop
push
aad
xor
ja
testb
lret
mov
ja
add
stc
clc
in
or
stos
add
inc
sub
decb
jmp
popf
pop
and
mov
lods
mov
sbb
cmp
adc
pop
jb
loope
jmp
ret
mov
sbb
enter
add
and
mov
xor
pop
insb
shrb
and
inc
mov
dec
nop
sbb
add
mov
inc
test
mov
or
mov
or
lds
imul
cld
pop
and
out
pop
mov
shlb
les
mov
out
sub
mov
add
movsl
pop
xor
pop
mov
pop
clc
lods
dec
add
jb
push
pop
dec
pop
add
jo
popf
rorl
aas
xchg
lret
push
iret
mov
roll
cmc
jp
xor
aad
aas
imul
dec
shrl
xchg
lret
jnp
and
scas
add
jg
cmp
dec
nop
xlat
lahf
xchg
jmp
jnp
cli
fadd
pop
ret
out
mov
shrl
push
jecxz
add
xchg
lret
insl
push
insl
mov
into
mov
movsl
int
push
jp
dec
nop
dec
dec
sub
or
dec
jo
sbb
cmpsb
jl
mov
sbb
and
push
addr16
in
daa
mov
xchg
aad
clc
dec
scas
sbb
mov
lcall
push
jp
sti
mov
call
xchg
mov
mov
repz
pop
test
aas
and
mov
insb
push
hlt
repnz
jge
sbb
pop
fsubr
addb
jne
dec
lods
inc
adcb
insb
mov
mov
pop
xchg
mov
ret
lock
mov
lods
dec
push
movsb
popf
xchg
aam
repz
push
inc
or
imul
fsubl
icebp
add
sahf
push
xor
lret
inc
and
inc
in
add
pusha
insl
sbb
sub
add
inc
test
push
les
xlat
cmp
push
and
cmpsb
pop
in
and
out
stos
jae
mov
lock
shl
jns
push
pop
mov
and
ss
adc
fwait
imul
into
pop
add
lcall
imul
pop
leave
stos
insl
xchg
mov
dec
jl
jae
movsb
xchg
inc
gs
push
pop
negl
out
inc
push
out
les
rol
into
mov
cmpsl
mov
das
jge
pushf
xchg
cmp
mov
mov
hlt
push
jne
push
into
push
pop
ja
lds
int
arpl
inc
mov
xchg
jp
out
stos
repnz
jle
mov
dec
nop
inc
mov
jo
mov
enter
shrl
mov
lods
iret
pop
ljmp
jbe
dec
jnp
stc
rorb
fsubrl
rolb
test
pop
cltd
ja
or
hlt
imul
jnp
loopne
xor
stos
cmp
pop
es
movsb
lret
pusha
shlb
arpl
lcall
aad
outsb
cli
mov
or
leave
cmp
in
imull
or
lcall
mov
out
jg
test
push
dec
mov
sub
gs
int3
dec
idiv
lds
sti
clc
add
lret
repz
pop
and
dec
pop
jae
cli
push
cmp
popf
fucom
fst
jne
pop
jb
jmp
jp,pn
incl
repz
pop
imul
pop
pop
lret
dec
rclb
or
repz
push
dec
in
and
lahf
test
sub
ret
lea
jne
seta
pusha
nop
jbe
push
insl
xor
xor
add
pop
mov
scas
xor
pop
mov
fucom
lahf
popf
jno
test
into
inc
mov
jns
pop
cmc
adc
imul
test
imul
adc
adc
xor
mov
add
jae
repnz
mov
mov
add
push
test
shl
sahf
fwait
lea
or
movsb
add
cmp
fdivr
je
cmp
xchg
and
into
adc
es
xchg
pop
or
in
mov
xchg
loop
loope
sbb
imul
cmpb
or
cmp
lods
fwait
rcrl
add
in
xchg
out
loope
xchg
mov
ret
xor
cmp
sarb
in
scas
jno
imul
sub
cmp
mov
sbb
aad
ljmp
jge
sub
mov
sbb
mov
outsb
xchg
or
leave
repnz
fildl
popa
les
push
sbb
push
xor
xchg
outsb
iret
das
sub
jne
jmp
aas
stos
add
cld
sbb
xlat
inc
add
jo
mov
popf
inc
jo
jmp
sub
insl
sbb
pop
bsr
jne
push
adc
les
sub
jns
mov
xchg
jmp
push
outsb
cs
xorl
movups
lods
inc
shlb
xchg
xchg
sub
sti
sbb
adc
outsl
add
or
pop
enter
add
in
add
push
lods
mov
push
popf
sti
jge
sub
or
xor
scas
cltd
cmp
loopne
mov
ret
rorb
les
enter
clflush
and
sbb
inc
inc
roll
mov
dec
dec
test
imul
shll
jg
clc
lahf
popa
sti
in
aaa
enter
ret
insl
lods
xchg
incb
popa
sub
mov
push
repz
stos
dec
imul
in
es
mov
inc
cltd
aam
imul
clc
xchg
push
adc
cmp
js
dec
inc
fistl
xchg
xor
push
inc
bound
call
fimull
ret
jno
dec
std
mov
mov
pop
rcl
sub
popf
and
xor
shlb
ljmp
test
cmp
cmc
mov
mov
mov
cwtl
fincstp
stc
outsl
jge
inc
out
xor
mov
in
adc
pop
fwait
sub
das
pop
or
test
stos
inc
add
out
outsl
mov
lcall
stc
sbb
loope
xor
into
push
dec
iret
lea
inc
pop
xchg
int
fs
insl
mov
lods
pop
mov
mov
inc
loopne
and
xchg
pop
mov
aas
push
inc
xor
adc
pushf
loope
sub
inc
flds
push
loop
pop
mov
out
mov
sub
popa
sbb
testl
and
ret
js
adc
cmpl
xor
fiadds
cmp
or
add
dec
dec
push
pop
xchg
ret
mov
loopne
jae
mov
je
add
rorl
insl
jnp
lock
into
mov
pop
sti
leave
leave
push
out
adc
test
out
inc
out
rcrl
mov
aam
push
pop
imul
jnp
gs
xchg
loopne
mov
jnp
push
jns
hlt
xor
jb
mov
xlat
arpl
jne
inc
pop
or
xchg
sbb
fmuls
push
xchg
sub
sub
mov
mov
mov
jbe
mov
cwtl
jno
lea
push
cmp
xchg
and
stos
test
lea
jne
cmc
ret
dec
add
mov
dec
ret
ret
pushf
xor
insb
mov
xchg
cmpsb
out
stos
imul
mov
jg
test
sub
xchg
test
add
fs
pop
mov
dec
adc
popa
inc
xchg
movl
jecxz
mov
std
mov
repnz
insb
jo
test
fldl
jns
add
push
cmp
adc
stos
movsb
stos
fdivs
lret
add
dec
addr16
out
push
and
and
mov
bound
xchg
out
test
xor
sub
mov
adc
adc
cwtl
xlat
push
fsts
xchg
fistps
mov
or
scas
fisttps
shll
int3
pushf
push
mov
popf
push
jns
sbbl
inc
push
xor
dec
in
int
push
pop
repnz
movsb
lret
pop
pop
into
and
call
push
sbb
mov
outsb
sub
add
sub
das
popf
add
sub
orb
mov
fdivrl
mov
int3
icebp
rorb
sbb
cmp
je
inc
ret
or
pop
mov
or
jnp
mov
clc
dec
stc
lret
cmpsb
dec
loop
jl
pop
and
and
dec
inc
and
and
mov
mov
or
add
adcl
ja
mov
pop
push
scas
es
roll
add
out
call
outsl
sbb
out
sbb
cld
or
jge
mov
les
and
lret
rorl
add
repz
sub
mov
dec
add
adcb
pop
lock
repnz
jge
addr16
and
sahf
push
push
add
adc
jge
jo
add
or
mov
push
cli
sub
subl
xchg
pop
test
xor
cmc
push
out
or
cmc
jecxz
insl
mov
aam
or
jecxz
cli
pop
in
xor
inc
add
clc
pop
and
jg
xchg
iret
mov
test
fcoml
jno
mov
enter
cmpsb
les
mov
push
sbb
sub
stc
das
lods
xchg
cmpsb
pop
or
lods
je
imul
insl
and
dec
mov
pushf
dec
and
push
adc
mov
mov
sub
push
mov
repnz
test
add
iret
xor
mov
sub
push
mov
mov
rol
hlt
and
pop
mov
push
jno
fldl2e
imul
cli
and
mov
mov
jns
outsb
es
pop
push
bound
notl
xor
loopne
mov
loop
mov
gs
push
xchg
xor
ja
mov
sub
sbb
xchg
js
fs
mov
sbb
mov
enter
mov
sahf
cwtl
enter
adc
fidivl
dec
xor
gs
scas
imul
cwtl
mov
imul
jo
stos
mov
jle
jl
in
push
mov
or
and
out
pop
or
incl
add
out
cmpsl
sub
mov
mov
cwtl
test
push
jnp
sbb
inc
fistps
leave
xor
mov
xchg
subb
xchg
enter
and
std
movsl
sahf
jg
shl
std
push
push
inc
lods
inc
les
notl
decl
stc
lcall
pop
lods
out
popa
xchg
lods
inc
cmpsl
stos
test
rorl
sub
in
out
shlb
lods
jmp
and
adc
sahf
je
in
adc
out
fsubrs
xchg
movsl
js
daa
imul
neg
adc
dec
sub
sti
sbb
xchg
pop
sbb
dec
leave
or
lret
inc
xlat
js
add
and
mov
push
mov
out
test
xor
jge
lret
lret
sbb
stc
mov
je
xorl
mov
std
mov
in
jmp
addb
push
and
and
xchg
out
push
sahf
pop
dec
and
outsl
shll
and
push
sbb
fisubrs
sub
testl
pop
lods
loop
add
mov
mov
mov
and
cmp
jl
popa
fbld
push
and
jg
and
pop
or
jge
cmp
jge
pop
mov
sbb
adc
and
pop
sti
mov
scas
push
mov
inc
shl
ljmp
xchg
or
pop
xor
jbe
andb
out
push
hlt
loop
mov
icebp
mov
cld
pop
and
jle
sbbb
je
arpl
mov
cs
mov
add
mov
hlt
das
pop
push
in
jnp
dec
jb
add
inc
inc
mov
mov
sbb
add
cs
outsb
jge
sahf
les
adc
mov
adc
sarl
dec
push
mov
xor
shrl
out
clc
mov
add
out
mov
hlt
pop
cmpsl
xchg
adc
dec
jb
aaa
popf
int3
stc
push
jmp
cmp
jnp
mov
mov
add
outsb
orl
div
jmp
rolb
mov
icebp
mov
add
lret
loop
push
add
and
adc
push
insb
in
test
adc
push
ds
inc
push
or
les
sbb
add
mov
pop
int3
test
xor
cli
and
stos
inc
cld
sub
pop
jb
xor
mov
xchg
push
push
cmp
mov
or
mov
sub
in
adc
testl
sahf
mov
pop
sbb
jl
pushf
jbe
lret
push
ret
add
enter
ficoml
mov
pop
jge
or
pop
adc
stos
cmc
jmp
notl
adc
je
or
test
jae
lahf
push
cli
movsl
jl
inc
sub
stos
arpl
and
push
cli
das
xlat
jb
call
or
aaa
mov
scas
sub
pusha
mov
mov
orl
mov
xor
pop
popa
in
push
cwtl
mov
pop
add
cmc
imul
jae
push
mov
sbb
bound
mov
inc
inc
ja
enter
lods
push
and
fwait
mov
pop
roll
push
das
mov
mov
cmpsl
or
sub
sub
arpl
pop
int
int
and
in
dec
fdivrs
out
pusha
sbb
add
push
lods
ljmp
jae
adc
adc
jge
int3
fldcw
arpl
rcrb
push
lods
xlat
imul
cmp
mov
sbb
add
inc
test
mov
pop
ret
sarb
pop
mov
mov
push
movsb
adc
xchg
mov
inc
orb
mov
pop
xor
lcall
cmp
mov
std
cmp
pop
jbe
iret
fstps
xchg
lods
cmc
adc
clc
mov
and
in
andl
dec
xchg
in
sub
xor
jmp
sub
jo
mov
addr16
into
sti
out
sub
and
hlt
mov
mov
pop
xchg
cmp
outsb
in
push
std
push
int
sub
sbb
mov
pop
scas
lods
pop
mov
outsb
in
push
std
push
int
sub
sbb
mov
pop
scas
lods
pop
mov
outsb
in
push
std
push
int
sub
sbb
mov
pop
scas
lods
pop
mov
outsb
in
push
std
push
int
sub
sbb
jno
inc
mov
jnp
dec
cld
pop
mov
push
mov
xchg
sbb
jmp
sti
insb
lret
jl
or
sbb
sub
sub
test
fdivrl
dec
cld
pop
mov
pushf
cmp
pop
fwait
or
stos
sbb
sub
cmp
je
jnp,pn
dec
and
xchg
sub
cmp
inc
jg
add
sbb
addr16
outsb
aam
stc
pusha
fwait
mov
and
or
rcll
repz
sbb
sub
and
insb
sub
sbb
and
sub
lret
repz
sub
ret
lret
cltd
imul
dec
negl
push
pop
add
or
stos
pop
jnp
je
adc
jle
clc
or
pushf
cmp
mov
xchg
call
rcrl
je
push
xor
popa
movsb
jo
adc
daa
push
aaa
cwtl
insb
pop
fildll
mov
xor
xor
inc
test
sub
jne
push
jle
sti
jg
pop
sti
in
mov
cmpl
mov
dec
cld
pop
push
or
sbb
lret
dec
fildl
mov
movsl
add
jnp
and
fadds
dec
dec
mov
popf
jle
jb
inc
mov
subl
sub
arpl
pop
pop
jl
sbb
xchg
push
mov
mov
enter
out
jge
mov
and
cmp
pop
sti
insb
lret
jl
or
sbb
sub
cmp
int3
imul
in
dec
cld
pop
mov
pushf
cmp
pop
sti
insb
lret
jl
or
sbb
sub
cmp
int3
imul
stc
cmp
inc
out
xchg
jne
frstor
push
push
push
xchg
pop
clc
mov
rclb
gs
popf
lret
lea
cmp
test
xor
dec
in
add
dec
stos
int
xchg
jle
pop
push
xor
icebp
push
fs
xor
mov
mov
pop
test
test
jle
test
inc
mov
in
push
pusha
cmp
push
xchg
inc
repz
mov
adc
mov
dec
stos
iret
push
call
in
pop
leave
mov
jmp
add
insb
push
test
push
sbb
xor
mov
dec
cli
or
sarb
hlt
mov
test
es
jbe
mov
pop
dec
sub
xor
fistpll
add
add
jmp
sub
cmpsl
xchg
test
xchg
test
mov
fnstcw
insb
lock
and
xor
inc
and
pop
fnstsw
pop
cmp
inc
jge
xchg
jb
dec
and
les
pop
test
js
incl
cmpsb
dec
or
inc
cltd
or
jno
xchg
push
std
jg
daa
stos
jl
dec
jp
rcll
stos
sub
pusha
adc
mov
aad
sub
or
adc
stos
clc
imul
mov
xchg
jl
push
jo
aas
fsubrl
hlt
mov
pop
mov
cmp
sbb
add
ljmp
out
mov
insl
sti
loop
sbb
or
inc
cmp
jp
gs
negl
shl
popf
jmp
scas
aas
sbb
mov
and
fs
int
test
loopne
das
cmp
stc
std
adc
or
inc
ss
mov
xor
dec
or
xchg
addr16
mov
xchg
add
jo
test
cld
xorl
push
imul
mov
mov
add
or
sub
decl
je
int
jno
aad
pop
int3
mov
sub
cs
lcall
sahf
movsb
xorl
repnz
popa
outsl
pop
psrld
pop
mov
insl
push
popa
cmpsb
add
dec
mov
adcb
cli
aas
cmp
pusha
out
mov
xchg
sahf
bound
push
repnz
xor
test
fldt
andl
and
xchg
fsubs
ret
pop
es
jmp
fsts
xor
push
scas
addr16
dec
insb
inc
loope
push
ds
add
and
bound
xchg
imul
movsl
arpl
mov
dec
dec
fucom
lods
cltd
push
or
in
inc
jle
xor
mov
cmp
fisubrl
inc
outsl
mov
jmp
push
pop
fcompl
into
jb,pn
dec
adc
shrl
dec
int
lret
fnsave
jmp
xchg
mov
hlt
ffree
pop
shrl
xor
andb
sbb
jns
call
mov
xchg
fcoms
sub
or
rorl
cmp
rorb
cli
std
lcall
addr16
dec
push
pop
jg
and
loope
je
or
test
in
pop
test
cmp
jne
fistpl
enter
pop
fcoms
cmp
inc
dec
sub
sub
xchg
cmp
ss
inc
xor
fsts
fsubrs
push
adc
pop
add
das
cltd
out
fcoml
stc
ljmp
mov
in
movsl
fsubrl
lret
inc
outsb
mov
jmp
xchg
lock
and
scas
xchg
loopne
or
xchg
lcall
xor
aas
sbb
push
mov
xor
std
andb
loope
xor
inc
add
xor
aaa
push
pop
dec
gs
and
push
loope
in
dec
daa
popa
pop
push
push
das
sub
adc
ss
aad
stos
fstpt
xchg
out
js
insl
in
mov
les
fdivp
push
adc
scas
lock
es
test
mov
out
sub
addr16
push
mov
push
xchg
lods
repz
mov
repz
or
scas
xchg
imul
popf
lret
sbb
enter
aad
cmp
add
inc
shlb
pop
cltd
add
fldl
or
or
iret
testb
inc
adc
ja
popa
dec
jg
jns
fsubrs
stos
push
stos
push
int
das
loope
addr16
shlb
fadds
sbb
inc
bound
add
add
cmp
xchg
pop
aaa
jno
add
adcl
lret
fcompl
loop
lahf
mov
shl
jno
out
and
adc
xchg
das
popa
sub
in
aam
fcoml
adc
cld
loop
lea
movsl
dec
pop
imul
xor
sar
dec
mov
ds
inc
outsb
push
mov
stc
cmp
repz
movsb
mov
sub
dec
mov
fisubl
push
ret
lods
adc
lods
jnp
cmp
jo
stos
daa
push
bound
lret
dec
xorl
cmp
rcr
cs
xor
jl
aam
sbb
outsl
int3
push
mov
test
xor
dec
xchg
subb
sub
dec
fidivrl
push
out
jge
mov
out
xor
mov
sub
mov
sub
mov
das
pop
sub
or
or
arpl
daa
xchg
add
lret
les
int
arpl
lods
aad
icebp
jg
jle
stos
jnp
add
outsl
lret
stc
cmp
jo
daa
sarl
sbb
add
push
rcrl
cwtl
jmp
sbb
cmp
fwait
imul
out
sbb
cmc
stc
cmp
aaa
xor
icebp
jnp
scas
fisubl
outsb
ss
movsl
push
jmp
add
gs
faddl
fwait
imul
dec
dec
in
shlb
xchg
mov
xor
or
cmpsb
mov
pop
or
ret
inc
aas
fisttps
pop
out
cmp
adc
sub
mov
mov
cmpsb
fcoms
mov
cmp
cmp
adc
jle
jl
mov
push
test
lea
call
mov
inc
ret
leave
jge
testl
fistl
dec
sub
shrl
test
sbb
data16
mov
insl
iret
cs
mov
movsl
jecxz
mov
out
fwait
mov
ss
pop
mov
stos
cmp
mov
daa
pusha
mov
mov
fcmovnb
dec
cmp
mov
or
mov
mov
inc
adc
adc
repnz
mov
jne
ss
cld
icebp
cmp
mov
movsl
pop
out
cmp
loop
adc
push
test
shl
movsl
push
hlt
leave
lret
rcr
es
pop
add
sub
test
xor
int3
outsb
add
lahf
pop
les
sbb
xor
mov
pop
push
push
sbb
mov
bound
xchg
dec
mov
out
or
mov
fiaddl
and
mov
jecxz
mov
jge
lea
popf
xor
mov
push
push
imul
sbb
sbb
jmp
stc
jne
and
in
lahf
test
xchg
inc
sub
mov
xlat
xor
push
push
adcb
repnz
cmp
lds
lods
inc
dec
mov
out
mov
cmp
add
movsb
inc
fmull
mov
push
push
xorl
stos
push
xor
pop
call
xor
cltd
sub
push
fstps
push
add
and
xor
lods
and
or
jmp
aas
lods
dec
mov
add
movsl
pop
pop
mov
pop
mov
push
test
cmp
pusha
pushl
jns
jo
nop
or
das
cli
inc
mov
cli
idivb
std
inc
xchg
lds
xchg
movsb
lds
pop
cwtl
lods
loop
pop
insl
push
sbb
sbb
stos
pop
ss
cmp
and
lahf
movsl
scas
mov
xor
cmpsl
jmp
or
xor
cmp
cwtl
push
mov
jmp
cltd
orl
loop
add
push
push
test
notl
sub
subb
mov
push
fs
lahf
mov
pop
je
add
push
xchg
and
xchg
cmp
aas
xor
mov
loope
mov
mov
pop
dec
lret
outsl
jb
fisttpll
out
pop
aaa
lods
repnz
in
push
cld
lcall
ds
mov
mov
stc
xor
aad
mov
into
push
insb
in
jl
jmp
sbb
lret
ja
movsl
shlb
xor
call
stc
add
insl
inc
sbb
jecxz
and
les
mov
sub
xchg
sub
es
push
mov
pop
or
adc
inc
into
sbb
push
xor
mov
scas
std
xor
cltd
icebp
leave
dec
repz
leave
mov
jns,pt
in
dec
test
imulb
and
es
nop
fildll
mov
test
xchg
aad
fildll
enter
jns
mov
out
push
jb
js
sbb
jmp
cmp
and
jno
cmpsb
xor
fsts
movsb
pop
sbb
shl
outsl
sub
xor
mov
sub
lahf
hlt
ja
int3
das
push
fwait
push
jl
add
jne
sahf
aam
mov
add
xchg
mov
xor
sub
rol
ja
push
or
xor
frstor
imul
nop
cltd
je
das
dec
dec
lahf
repz
aas
outsl
push
std
popf
inc
adc
cld
sbb
std
or
cwtl
lds
inc
jmp
imul
push
or
insb
sti
adc
mov
enter
loope
mov
adc
fdivr
fs
arpl
loopne
push
inc
or
sbb
dec
das
adc
xor
test
mov
add
cli
rclb
mov
dec
mov
pushf
sbb
mov
aaa
cmp
sub
scas
aam
adc
lea
shlb
mov
and
arpl
xrelease
pop
xchg
sarl
dec
fdiv
mov
pushf
mov
adc
jne
iret
push
sub
popf
mov
dec
cmp
or
adc
mov
fisttpl
lds
jno
xor
jb
pop
loope
sub
pop
jae
add
mov
xchg
cld
fwait
dec
clc
mov
pusha
lcall
movsl
cwtl
cmpsl
testl
test
pop
mov
stc
bound
cld
fisubrs
dec
or
add
mov
or
sbb
loopne
add
sbb
cld
ds
sbb
dec
lds
and
sbb
subl
pusha
mov
mov
ficoml
bound
mov
or
addr16
stc
loopne
xor
enter
jns
push
sahf
sub
orl
movaps
fisubrl
lret
sub
pop
les
rolb
out
and
test
data16
adcb
std
add
pop
mov
out
sbbl
imul
pop
imul
mov
jp
cwtl
cltd
es
int
ret
stos
dec
into
dec
push
orl
xor
or
mov
add
and
jp
fwait
lret
pop
scas
add
lods
sahf
pop
and
repz
inc
pop
lock
and
pop
sbb
cmc
sti
push
xchg
movsl
cmp
cmp
xor
cmp
movsb
lret
xchg
mov
aad
fistl
pop
loopne
in
leave
push
lret
pop
mov
fisttps
ss
jno
jb
shrl
pop
in
pop
pop
mov
daa
cs
rcrb
rcr
xor
int
outsb
fisubs
daa
add
lods
push
mov
mov
out
ds
stos
cmp
push
mov
cmp
xchg
cmp
add
and
push
lock
pop
push
adc
mov
mov
cmp
sub
jg
out
dec
shll
sbb
push
sbb
jns
inc
xchg
push
cmp
leave
pop
mov
mov
xor
xlat
icebp
push
sub
mov
push
dec
and
int
leave
stc
popf
dec
into
js
fsubr
lret
mov
dec
imul
mov
or
mov
pop
sbb
or
repz
out
pop
outsb
push
and
test
adc
stos
movsl
jg
or
fsubs
dec
push
insb
cmc
mov
sbb
mov
iret
sbb
mov
xor
sbb
and
out
rorb
lret
pop
sub
fcmovu
lds
jne
cmp
dec
pop
fldt
call
or
xchg
xchg
adc
rcrb
nop
out
push
mov
lcall
shll
sbb
and
icebp
add
mov
xor
ret
sbb
ret
jl
call
fwait
ret
and
loope
and
adc
test
xor
loope
cmpl
mov
imul
je
outsl
hlt
bnd
mov
push
aaa
push
pop
xchg
cltd
push
dec
sti
daa
jo
jbe
adc
arpl
sbb
jecxz
imulb
enter
sub
xchg
jecxz
xor
adc
push
iret
mov
cmp
or
jne
xor
sbb
adc
or
or
gs
bound
dec
fistpll
clc
cmp
mov
xchg
xchg
xor
push
xchg
and
pop
je
out
mov
rolb
inc
pop
jmp
sbb
pop
sub
ds
add
aas
fsubr
sbb
mov
bound
jge
or
leave
or
mov
mov
sar
mov
xchg
sbb
add
lock
insb
pushf
dec
in
mov
mull
pop
ret
repz
fstpt
mov
fdivr
hlt
xor
inc
in
cmp
out
je
pop
js
dec
addr16
add
in
cmp
orb
push
daa
mov
out
xchg
sahf
push
call
fisttps
fnsave
ljmp
sub
out
jl
orl
sarb
adc
xor
push
fcomi
xor
rorb
add
in
xor
call
pop
or
iret
jmp
cltd
add
dec
xchg
out
push
jae
faddl
cmp
mov
push
push
mov
fxch
std
sbbl
std
adc
fs
adc
insl
fimuls
jge
loope
mov
in
aas
pop
lret
inc
add
push
in
movsl
or
mov
cmpsl
repz
out
lret
js
adc
in
pop
mov
adc
jns
inc
adc
inc
clc
ret
cmp
loope
dec
and
add
into
ljmp
sub
mov
adc
pop
shl
sbb
jbe
mov
add
mov
dec
cmp
lea
pop
cmp
leave
jecxz
add
in
mov
adc
xor
or
repz
insb
nop
mov
cmpl
push
ret
push
pop
dec
sub
das
mov
nop
adc
mov
cs
mov
xchg
sbb
enter
inc
out
xchg
iret
jge
jns
cli
mov
ficoml
mov
xchg
mov
lds
ja
jl
mov
hlt
decb
mov
out
sub
sbb
lea
dec
and
jmp
cmp
stos
mov
inc
jle
push
mov
add
inc
add
pop
lock
pop
xchg
dec
adc
daa
add
adc
sub
data16
jg
aaa
inc
mov
cmpsb
jb
cmp
dec
cmp
ja
pusha
xor
inc
bound
inc
sub
ret
test
in
jb
pop
mov
dec
push
or
mov
aas
lahf
adc
mov
repnz
pop
lret
jg
fsubrs
je
cmp
sub
cltd
dec
out
lret
mov
adc
sbb
sub
mov
inc
mov
frstor
push
imul
out
sbb
es
and
inc
push
aad
and
or
xor
jbe
jb
ss
jne
xchg
cmp
jl
jae
mov
add
xor
push
insl
xor
push
fdivl
dec
nop
mov
test
inc
lcall
lret
pop
into
test
pop
ss
inc
cmpsl
pushf
das
decl
cmp
pop
xchg
jno
test
sbb
fimull
mov
pop
je
lcall
int
mov
shll
adc
ficoms
test
jecxz
in
jb
cmpsl
and
lock
sub
add
rorb
jl
push
xchg
push
adc
pushl
lcall
test
inc
ja
in
out
dec
jae
pop
loope
out
cli
push
data16
jl
fidivl
dec
cmpsl
mov
cmp
aaa
xor
jns
test
cli
add
in
push
dec
or
xchg
pushf
dec
cmp
ja
int
adc
push
and
dec
inc
lcall
js
pusha
mov
mov
dec
inc
ja
out
pop
imul
jmp
jle
xor
push
mov
aad
inc
mov
dec
lods
or
add
push
cmp
dec
add
sahf
xor
mov
push
xor
pop
cmp
lret
mov
pop
pop
jge
add
popf
loopne
movsb
sbb
adc
inc
pop
jbe
mov
ljmp
repnz
inc
xor
or
in
inc
push
andl
je
or
pop
and
push
xchg
in
mov
dec
retw
inc
into
mov
inc
xorl
fcomi
insl
adc
sub
insb
dec
repz
sti
add
and
enter
mov
mov
pop
outsb
inc
xchg
pop
dec
rorb
out
lahf
jo
pusha
mov
mov
cli
cmpsb
add
push
sbb
lret
mov
xchg
ds
add
push
stc
aam
bound
xchg
mov
dec
in
ds
lcall
inc
xor
sbb
fnstsw
aad
mov
ret
ret
cltd
push
sbb
sbb
rolb
imul
dec
pop
sti
fimull
inc
jg
push
xlat
hlt
mov
cmp
test
stos
jg
aas
fcmovnbe
popa
lcall
ja
mov
push
lcall
ljmp
loop
cmp
das
ret
js
lea
or
and
push
mov
hlt
xchg
jge,pt
cltd
stos
incl
xchg
push
and
addr16
cld
mov
pop
outsl
jno
xchg
imul
jecxz
mov
mov
and
pop
insb
int3
mov
push
dec
popa
aam
stc
cmpsl
cs
int3
mov
scas
clc
add
cwtl
imul
leave
jge
das
add
sub
fnstcw
push
rorl
enter
cmpsb
push
fcom
cmp
daa
sub
loope
sahf
insl
in
lds
and
cmp
xchg
mov
xor
xchg
std
and
fadds
std
inc
hlt
cmpsb
inc
xor
xor
pop
mov
sub
loopne
cmp
rclb
jnp
sub
cmp
mov
imul
jle
add
inc
cli
es
lea
inc
ret
pushf
mov
push
out
push
push
jl
push
xchg
add
loop
sar
pushf
xor
fwait
mov
xor
push
mov
cmp
mov
pop
adc
lods
mov
data16
dec
loopne
jns
enter
push
insb
and
mov
mov
cwtl
daa
fcompl
lahf
mov
adc
fwait
or
mov
lock
gs
hlt
xchg
inc
fdivrs
clc
mov
repnz
mov
insl
jle
mov
jno
add
mov
lods
or
and
cs
or
mov
xor
sbb
out
sub
cmc
in
addr16
and
out
loope
inc
mov
cs
dec
mov
jbe
in
jo
inc
cld
call
jge
test
test
fsubl
adc
jg
cmp
mov
pop
and
dec
pop
pushf
ffree
sub
jbe
and
sub
cli
xchg
xchg
lds
pop
inc
or
dec
std
ja
mov
inc
xchg
sbb
push
inc
jb
mov
adc
jp
out
ret
add
cmc
xchg
push
imul
xchg
sbb
mov
add
popf
jnp
rolb
in
mov
sti
jmp
inc
xchg
jmp
or
cwtl
jmp
cmpsl
jle
add
jns
dec
sbb
add
pop
ret
sbb
jb
das
lret
adc
dec
mov
insb
outsb
daa
add
lret
mov
cltd
pop
jbe
add
mov
arpl
clc
pop
mov
xchg
shlb
dec
insb
fwait
repnz
test
clc
popf
jl
sbb
cltd
jp
xorb
adc
pop
xchg
push
hlt
xchg
out
and
mov
pop
repz
divl
pop
sahf
push
and
lock
jnp
decl
sbb
ret
xorb
dec
and
outsb
in
and
add
inc
xchg
les
aas
lret
lock
add
sarb
into
and
pop
mov
pushf
cmp
pop
sti
insb
lret
jl
or
sbb
sub
cmp
int3
imul
in
dec
cld
pop
mov
pushf
cmp
pop
sti
insb
lret
jl
or
sbb
sub
cmp
int3
imul
mov
cld
pop
sbb
pushf
mov
dec
imul
jl
or
or
sub
aam
fsubrs
jnp
dec
fcompl
sub
dec
jmp
push
lret
jl
jnp
xchg
inc
shll
mov
mov
test
cmp
sub
sbb
or
jnp
imul
mov
jmp
lret
sub
sub
sbb
add
dec
pop
jns
imul
jmp
lret
sbb
sub
pop
jnp
add
pop
or
fwait
ljmp
sbb
sub
jnp
ret
push
addl
dec
jecxz
aaa
push
ror
jmp
pop
push
pop
push
mov
cmc
jns
dec
jnp
pop
repnz
inc
icebp
push
shrb
int
cmp
or
and
xchg
jnp
xchg
mov
lods
dec
scas
mov
mov
ljmp
pushf
sub
cs
hlt
sub
dec
adc
push
inc
imul
repz
adc
sbb
sti
flds
sub
push
dec
jbe
int3
je
add
jmp
call
out
pop
inc
xor
or
xchg
dec
add
mov
fwait
int
test
sarb
sbb
mov
arpl
cmpsl
inc
popa
dec
pop
xlat
cltd
into
out
aad
lds
mov
scas
cmp
jns
pushf
outsl
dec
jnp
push
sub
lret
lret
xchg
mov
fistl
dec
jl
imul
push
add
sbb
sbb
ljmp
mov
jmp
lret
jmp
sbb
or
jnp
imul
dec
imul
fldpi
leave
lret
jmp
sbb
or
jnp
imul
dec
imul
mov
push
sbb
jae
test
mov
adc
and
mov
push
inc
add
test
add
xor
xchg
push
bound
jae
jo
add
push
xor
inc
ret
fucomip
push
icebp
pop
adc
rcll
subl
lret
lods
cmp
shl
jae
cmpsb
pop
pop
and
xor
ljmp
push
or
xor
dec
mov
sbb
lods
push
clc
mov
dec
movb
xor
call
pop
lea
and
xor
daa
mov
ss
outsl
test
sbb
sahf
inc
and
test
popf
outsb
sub
jns
push
testb
or
xor
jns
dec
cli
test
enter
inc
mov
push
cmp
sub
ds
test
clc
push
out
jb
aad
or
or
aam
dec
lods
aad
xlat
std
sti
iret
inc
outsb
mov
inc
jl
pop
push
push
fstp
mov
in
in
cwtl
jb
or
dec
push
inc
aaa
lods
stc
jmp
push
pusha
sbb
andl
pop
fwait
inc
loope
lea
arpl
popf
movsl
pop
adcb
add
inc
add
decl
fisubrl
pop
jne
pop
add
outsb
lods
in
mov
adc
out
cld
mov
mov
mov
and
adc
mov
bound
push
fldpi
inc
jbe
out
fdivp
nop
movsb
gs
mov
xchg
dec
inc
xchg
mov
jmp
push
and
je
or
call
dec
adc
test
add
mov
jecxz
stc
insl
jle
inc
rcll
nop
in
aam
mov
mov
dec
dec
add
xor
leave
loope
lret
rclb
dec
lods
data16
in
push
out
and
mov
fsubrs
mov
jge
xchg
cmpsb
movsl
shlb
sbb
mov
repz
mov
cmp
dec
mov
movsb
mov
rcrl
mov
sbbl
xor
add
pusha
or
lea
imul
scas
mov
stos
imul
inc
jp
mov
pop
out
mov
mov
inc
mov
cmp
mov
stos
int3
cmp
or
add
stos
shlb
movsl
sbb
fninit
bound
xacquire
xchg
mov
clc
nop
cmp
std
adc
ret
jb
imul
movsl
arpl
jg
adc
insl
xchg
mov
xchg
ret
roll
adc
cmp
jne
add
sahf
push
jge
dec
sbb
xchg
imul
adc
and
push
ljmp
cs
imul
in
movq
pop
xchg
arpl
xor
lods
jle
add
repnz
ss
or
xchg
or
cwtl
js
lret
pop
mov
jge
cltd
cs
mov
lods
push
push
pop
in
and
push
test
rorb
inc
pushf
push
ss
sarb
pop
lahf
pop
mov
decl
push
test
mov
bound
add
xor
arpl
jns
xchg
fcom
jl
mov
mov
xchg
jp
fiaddl
mov
insl
push
loop
xchg
lret
mov
mov
mov
mov
js
or
mov
jg
mov
in
xchg
shr
stos
jle
push
rol
sti
mov
pop
ja
mov
mov
fs
jno
mov
insb
mov
movl
push
lock
cmp
adc
int
push
fs
sahf
dec
orl
mov
xor
mov
fists
cmp
pop
and
jb
and
loope
push
into
pusha
cmp
shlb
sahf
xchg
aaa
fcomi
jbe
out
es
sarb
pop
sub
mov
pusha
ds
inc
or
shlb
repz
mov
fisubs
push
in
cmp
inc
add
xchg
out
fidivs
out
push
inc
jp
xor
es
lock
sbbl
insl
add
ja
jnp
pop
enter
cmp
cmp
cmp
xchg
adc
hlt
aas
sub
stos
adc
lret
jnp
aas
push
pop
jg
push
lock
inc
xchg
add
pop
adc
gs
les
sub
icebp
scas
dec
aas
mov
sub
int3
jnp
pop
int3
push
xchg
faddl
and
mov
jnp
push
push
xor
dec
cmc
mov
and
fs
xor
pop
pop
jg
sbb
xchg
cmp
xchg
or
mov
fs
jle
gs
lods
aas
sbb
arpl
inc
lds
icebp
adc
or
mov
repz
les
sub
and
push
pushf
dec
mov
push
jno
mov
int3
js
shll
jl
sti
jno
inc
addr16
movl
mov
sbb
daa
inc
imulb
jnp
add
ficompl
add
pop
rclb
arpl
xchg
mov
lea
jne
pop
sti
mov
out
xchg
mov
sbb
or
mov
push
mov
in
pop
clc
outsl
imul
lds
es
dec
lcall
add
pop
fmulp
les
inc
aad
movsb
add
mov
nop
ficompl
mov
xchg
lahf
dec
dec
nop
mov
and
jne
ficompl
movsb
cmp
imul
dec
dec
insl
rolb
loopne
jno
xchg
filds
stc
fmuls
mov
and
mov
adc
push
hlt
adc
cmpsb
push
mov
pusha
mov
pop
mov
pop
dec
stos
sub
mov
jle
add
ficompl
imul
icebp
mov
mov
sbb
jb
aas
hlt
faddp
cmp
cmp
insl
ret
imul
addr16
ficompl
arpl
mov
sbb
inc
jle
into
lods
cmp
and
leave
ja
mov
adc
jb
cmp
mov
cmp
sahf
into
xlat
cmp
pop
adc
push
fwait
add
push
jnp
leave
rcr
sub
pop
hlt
pop
xlat
push
nop
mov
add
rorl
nop
cmp
sub
stc
rorl
lock
add
push
mov
shrl
mov
jnp
jecxz
xchg
and
imul
xchg
inc
mov
sub
jae
sbb
push
push
mov
clc
mov
mov
xchg
rol
mov
movsb
adc
push
rcrl
jb
aas
out
roll
xchg
shlb
xchg
popf
test
mov
incl
enter
inc
nop
mov
push
loope
pop
sub
pop
sub
movsl
fildll
push
pop
fsubl
inc
cmc
jecxz
je
cli
mov
insb
jb
cmp
mov
stc
adc
arpl
inc
mov
lea
cmp
push
repz
jg
xchg
xor
dec
and
or
mov
dec
pop
outsb
pop
xchg
rolb
ret
pop
mov
icebp
arpl
fwait
xchg
jmp
fnstcw
mov
test
mov
cmp
adc
and
loope
cli
pop
cwtl
and
add
bnd
cmpsl
cmp
into
add
arpl
in
and
incl
dec
lcall
or
and
xlat
pop
lahf
sub
xchg
dec
or
cmp
ret
das
imul
fdivp
sub
push
push
inc
lods
and
lret
int
xchg
int
mov
xchg
dec
mov
mov
fs
xor
mov
arpl
in
icebp
movsl
lods
mov
pop
test
xadd
jmp
sub
jno
stos
xchg
jne
add
pop
repz
fmull
cmp
mov
repz
and
xorl
scas
inc
push
mov
rolb
jmp
imul
in
nop/reserved
rolb
xchg
fnstsw
xor
jl
jne
inc
iret
loop
jbe
into
loopne
adc
std
lods
inc
adc
mov
imul
cmp
lcall
pop
lods
dec
xchg
pop
leave
test
sbb
cmp
or
mov
fs
mov
imul
xor
daa
insl
pop
push
and
jbe
popf
cmp
nop
hlt
push
push
mov
in
repnz
pop
xor
cwtl
mov
xchg
xchg
mov
clc
mov
inc
test
pop
testb
dec
xchg
push
outsb
repnz
test
and
sarl
sbb
popa
out
and
xchg
pusha
xor
push
push
hlt
cmp
addr16
sub
push
dec
inc
scas
repz
dec
xchg
movsl
jne
or
fisubrs
push
jecxz
jno
push
in
out
cli
fldcw
icebp
mov
fimuls
int3
aaa
mov
lret
xlat
mov
sahf
ja
and
sbb
fisubs
popf
rcll
and
jle
pushf
clc
pusha
push
push
push
pop
cmpsl
lcall
or
lahf
mov
xchg
addr16
mov
sti
xchg
push
jmp
cltd
iret
jp
pop
out
cmp
loop
cmp
adcl
jns
in
mov
xchg
scas
repnz
push
in
jle
fmul
rcr
daa
loope
cmp
xchg
adc
mov
mov
or
pop
mov
ret
add
and
pushf
orps
ss
cmp
mov
enter
mov
xchg
cmp
aas
add
mov
lock
pusha
sbb
pop
xlat
movl
in
loope
gs
pop
inc
or
sub
dec
jo
js
cmp
xchg
dec
xchg
add
push
jl
push
negb
jae
movsb
mov
jg
movsl
out
or
ja
rclb
pop
js
jmp
inc
pushf
in
dec
lahf
and
push
scas
push
adc
xor
cmpsb
adc
jl
pop
adc
call
mov
scas
int3
out
sub
stc
incb
lret
ficomps
pop
int3
mov
pop
adc
lock
imul
aam
xor
imul
pop
movsl
push
push
and
or
lret
push
minps
aaa
xchg
mov
dec
jg
shl
jne
iret
insl
ljmp
clc
mov
pop
fwait
mov
mov
aaa
lock
jne
into
add
movsl
mov
movsl
insl
bnd
jl
xor
scas
adc
imul
mov
call
mov
pop
xor
je
int
pop
clc
mov
and
iret
push
cli
jmp
cli
add
addr16
sbb
cltd
mov
push
cmp
imul
sub
lds
mov
xor
mov
jge
rcll
mov
xchg
fcomi
mov
adc
lods
push
ljmp
pop
movsb
bound
mov
mov
pop
popf
pop
clc
insb
add
and
call
jne
out
xor
jge
outsb
inc
sti
xchg
adc
and
xchg
cmp
in
cmc
lods
inc
pop
shrb
les
enter
push
jno
xchg
mov
pop
ret
jns
dec
bnd
lret
icebp
cmpsb
inc
pop
int
sbb
pop
push
loope
mov
xchg
cli
xchg
insl
sub
sbb
pop
test
mov
gs
inc
fildl
icebp
mov
add
mov
and
mov
pop
adc
sbb
enter
and
push
shr
scas
or
lea
xchg
fcompl
jne
popa
mov
jb
in
dec
faddl
jbe
dec
mov
arpl
out
insb
mov
scas
icebp
or
xor
je
xchg
inc
iret
or
aaa
push
pop
lods
push
mov
mov
sbb
sub
mov
daa
sub
iret
shlb
xchg
adc
stos
push
and
and
mov
xor
and
sti
ss
mov
push
or
pop
ss
ja
and
push
stos
jnp
pop
mov
cmpsl
fwait
gs
pop
or
or
sbb
xchg
mov
xchg
cmp
fnstcw
sarl
les
mov
and
ror
mov
out
jge
jle
notl
fadd
or
sti
into
cmp
insb
test
negl
adc
int
sbb
and
jno
in
push
fs
xchg
nop
scas
or
fisubl
ss
inc
ficoms
out
rcr
popa
test
pop
jecxz
sub
call
je
push
aas
xor
adc
out
arpl
in
add
and
inc
dec
xor
fiaddl
inc
aam
lret
add
cltd
add
stc
in
ja
dec
dec
ljmp
sub
in
sarb
pop
mov
mov
mov
popf
pop
jle
mov
dec
fisttpl
jns
push
fwait
jnp
fbstp
stc
dec
mov
fsubrs
mov
divl
lret
test
mov
int
pop
push
push
test
cmp
imulb
xchg
imul
popa
fisttpll
jle
daa
addr16
xchg
mov
mov
mov
pusha
and
push
lcall
int3
sub
mov
sahf
xor
sub
ficoms
pop
mov
cmp
jnp
out
mov
leave
addr16
mov
je
pushf
imul
ljmp
add
sbb
fisubrs
jmp
cmp
sub
ret
call
mov
out
stos
inc
sbb
mov
jle
mov
gs
inc
fdivl
test
jne
pop
addr16
adc
movsl
jns
inc
xlat
or
movsb
sti
jnp
repz
lret
imul
popf
inc
add
mov
pop
sbb
sbb
sbb
insl
push
or
sub
popf
pavgb
lahf
cs
pop
cwtl
xor
sar
lahf
stc
xor
je
mov
mov
fdivrl
in
push
or
jno
addr16
es
mov
and
xchg
xor
repz
fisttpll
and
pop
sbb
push
xlat
xchg
add
rcpps
cwtl
add
or
push
fistpl
rcrb
fdivrl
mov
divb
aam
mov
test
sub
dec
jne
cmp
fists
sbb
xor
bound
cmp
aam
jnp
movhps
push
xor
push
adc
loopne
and
out
inc
les
movsb
jp
addb
bound
mov
stos
shrl
push
movb
adcb
movsb
or
sub
stos
push
int3
and
mov
addl
push
mov
mov
jge
and
mov
or
push
xchg
sarl
test
mov
xor
jecxz
dec
stos
jne
iret
mov
add
test
pop
cmpsb
test
push
rcl
add
xor
aam
add
jle
mov
outsb
fstpl
mov
push
ret
subb
in
push
clc
mov
fwait
es
push
or
xchg
cmc
mov
sub
jne
mov
sbb
outsl
adc
push
out
iret
int3
add
ret
fisubrl
or
aaa
xor
push
ficomps
rcl
dec
xchg
pop
sbb
aaa
pop
je
lcall
mov
mov
pop
pop
test
sub
addr16
dec
mov
push
out
lret
adc
push
cli
imul
dec
out
cmp
fildl
xchg
push
cwtl
iret
xor
mov
js
mov
pop
cmc
xor
sub
sub
mov
inc
adc
mov
jns
shrb
lds
cli
in
nop
mov
sbb
stc
push
sub
stos
test
and
mov
sbb
pop
xor
jns
add
call
dec
pop
xchg
mov
ss
arpl
fcmovnbe
xchg
add
pushf
mov
stos
in
subb
popa
mov
icebp
lcall
xchg
push
push
sbb
sbb
mov
stc
xor
cltd
dec
or
out
dec
add
scas
cmp
test
mov
dec
mov
addr16
outsb
xor
outsb
adc
pusha
xor
inc
mov
lds
jle
jle
cltd
roll
aam
int
scas
sti
aas
outsl
loop
mov
outsl
sbb
stos
je
lock
or
sbb
mov
push
mov
fadd
cmp
fwait
mov
dec
add
mov
je
adc
test
fmuls
jno
clc
inc
lcall
fwait
mov
out
nop
in
sub
push
sub
addl
leave
sbb
outsl
mov
rcrl
jmp
test
lret
js
scas
jge
lock
push
adc
test
xchg
inc
mov
push
out
mov
adc
cs
pop
sub
mov
das
inc
jae
sti
mov
arpl
push
movsb
repz
mov
dec
xchg
dec
rcrl
fsub
mov
in
xlat
fwait
pop
mov
outsb
xchg
adc
push
jne
mov
inc
mov
nop
les
sub
mov
cltd
movsb
cmp
xchg
dec
data16
mov
dec
movsb
out
pusha
jnp
shl
add
clc
cmp
adc
sbb
in
or
push
push
cmp
add
out
xchg
push
iret
adc
add
iret
sub
loop
mov
mov
mov
cmp
fdiv
test
jb
xchg
dec
and
outsl
ljmp
mov
dec
sub
es
movsl
xor
push
sahf
pop
mov
jp
xor
inc
jle
cld
rol
js
lahf
in
je
repnz
push
inc
aas
je
or
loope
rcll
sbb
cmp
subl
mov
insb
loop
xor
aam
jb
push
das
fwait
minps
sbb
sub
cmp
incb
adc
mov
enter
mov
mov
fildl
aaa
leave
into
or
pop
sub
sbb
rcll
cwtl
enter
in
sbb
out
loope
das
xor
push
cmp
setg
jl
rorl
jp
dec
mov
lahf
das
fcompl
and
loope
gs
xchg
jbe
rolb
es
pop
mov
aam
push
add
aaa
iret
sub
mov
mov
fdivr
gs
xchg
mov
sarl
out
iret
leave
inc
mov
pushf
lock
or
xchg
mov
int
jle
in
stos
xchg
pop
mov
cmpsl
pop
cmp
pop
jnp
sbb
pop
movsl
inc
dec
mov
jp
or
leave
dec
iret
or
add
mov
cmp
mov
or
mov
or
pop
pushf
mov
fidivrs
pop
adc
pop
mov
jbe
mov
or
fldcw
das
pop
dec
mov
andl
lock
or
ficoml
stos
mov
sbb
movsl
stos
sub
jbe
fsubrl
xchg
into
ja
in
mov
andb
sub
cmp
pcmpeqw
insb
sbb
add
movsb
mov
jae
pop
arpl
push
mov
inc
daa
xor
mov
aam
incb
xchg
repz
ja
call
or
push
sbb
cmp
and
pop
adc
fbstp
mov
mov
and
stc
shl
or
pusha
mov
sbb
mov
in
into
fildll
sbb
cmpb
jge
call
and
push
mov
and
es
ss
aad
push
xor
sbb
je
aas
mov
push
and
lahf
nop
std
shrl
sbb
movsb
pusha
push
es
xor
mov
and
repz
adc
or
lds
int3
sbb
arpl
ljmp
lods
test
add
std
xchg
je
xchg
jb
and
fmulp
xchg
into
mov
pop
sub
fldl
ret
push
mov
aaa
and
mov
cmpsb
ljmp
inc
cmpl
push
xchg
push
je
sti
cmc
mov
and
shrb
pop
je
lods
dec
ret
mov
pop
dec
pushf
test
jg
fisttps
ret
xchg
scas
push
fistpl
dec
aad
stos
out
sub
add
and
push
adc
aad
add
jecxz
sub
gs
icebp
pop
cwtl
pop
xor
jl
mov
pop
outsb
test
or
dec
jno
cmp
pop
xlat
cmp
icebp
xchg
mov
imul
test
les
leave
lret
sbb
ficomps
jb
and
lret
mov
push
xchg
xorl
icebp
and
sub
mov
xchg
in
decl
imul
xchg
xchg
xchg
repnz
popa
bound
popf
into
mov
cld
pop
cmpsb
mov
loopne
push
aas
int
xchg
jg
lea
add
cmc
and
pop
sbb
mov
jmp
lret
jmp
sbb
or
jnp
imul
dec
imul
fldpi
leave
lret
jmp
sbb
or
jnp
imul
dec
imul
fldpi
mov
cmp
sub
jnp
push
pop
jo
lea
pop
mov
stc
fldpi
leave
pop
jns
sub
out
mov
or
jecxz
movsb
add
or
sbb
lods
or
sub
cmp
test
jge
jg
or
fnstcw
or
sbb
imul
mov
jge
outsb
stc
int
sub
cmp
or
sbb
imul
addr16
sbb
jae
jnp
cmp
jp
imul
jns
ret
jl
arpl
inc
imul
and
data16
gs
add
std
arpl
scas
xor
add
sbb
push
mov
dec
enter
shll
mov
shll
popf
xor
mov
test
shl
clc
dec
sbb
sbb
jg
cwtl
int
lods
imul
sbb
mov
loop
cmpsl
fistl
cmc
dec
cmp
adc
sbb
dec
std
pop
mov
cltd
sub
jge
gs
nop
sub
add
xchg
mov
jl
xchg
shlb
stc
dec
rorl
js
insl
aad
clc
push
ja
cmp
or
sbb
imul
mov
fs
sub
push
cld
add
rcrl
call
cmp
adc
lea
mov
fstpl
jl
das
adc
ror
xor
cmp
sbb
mov
jb
inc
fstps
mov
pusha
mov
mov
jns
dec
lods
pop
mov
mov
jge
or
fnstcw
or
sbb
imul
mov
jge
or
fnstcw
mov
cmp
clc
lock
rcr
ss
lret
jno
ja
xor
add
lods
mov
cwtl
notl
xchg
jge
and
loope
cwtl
xor
insl
rcll
out
stos
call
inc
sbb
jnp
dec
imul
int3
popa
cmp
ss
inc
testl
int3
jecxz
pop
inc
and
sbb
push
or
shll
push
dec
dec
shr
iret
mov
pop
jns
jge
test
cmp
bound
lret
mov
xchg
mov
jmp
fnstcw
push
cmp
push
fbld
mov
iret
dec
pop
int
jb
and
dec
in
out
xchg
sub
cmp
add
jae
mov
adc
adc
dec
mov
scas
jnp
or
pop
mov
repz
cmp
cmp
mov
loopne
xchg
jg
lret
sahf
cmp
lret
adc
imul
cwtl
movsb
es
jb
inc
sbb
inc
pop
outsb
mov
push
inc
ret
loopne
mov
pop
and
or
push
mov
fwait
sbb
mov
dec
sub
js
jo
jbe
or
xor
daa
sbb
out
sahf
inc
and
adc
and
inc
pushf
push
inc
xchg
mov
jmp
jb
or
aad
cltd
dec
dec
fldenv
popa
jnp
or
aam
xor
mov
inc
pop
ret
or
in
call
jp
fists
push
ss
sbb
mov
or
pop
movsl
ret
cmc
pop
mov
mov
shlb
inc
adc
roll
push
mov
ret
js
and
pop
pushf
popf
pop
and
cmpsl
frstor
movsl
mov
lret
cmp
dec
xchg
subl
sub
add
xor
jmp
adc
and
clc
fwait
ror
fsub
push
outsl
out
fidivs
sbb
inc
sbb
cmp
fildll
lock
shrb
cmp
mov
jns
arpl
add
daa
lret
push
aaa
lcall
out
mov
cmpsb
lods
push
xchg
into
cmc
shll
or
sbb
call
and
dec
pop
sets
push
or
add
or
cld
mov
addr16
mov
pop
sub
mov
inc
bound
sub
dec
scas
bound
shlb
xor
imull
out
aad
std
sub
push
dec
sbb
push
les
pop
rcll
jge
mov
add
xor
mov
sub
icebp
imul
or
sahf
sub
mov
out
pop
xchg
cmp
movaps
movsl
bound
mov
mov
loope
sbb
es
pop
imul
rcll
jg
jle
clc
sti
xchg
mov
sub
std
xchg
inc
cs
mov
jge
movsl
mov
add
xor
add
sub
fidivrl
push
mov
push
lods
xchg
mov
jnp
push
int3
cmp
fiadds
testl
inc
orl
cmpsb
xchg
sub
lcall
test
push
and
inc
daa
or
shlb
dec
pop
mov
sbb
ret
ljmp
mov
adc
pop
aam
cltd
imul
sub
fldl2t
jns
lods
sahf
int
in
rol
jmp
mov
jns
arpl
push
jne
rclb
das
mov
and
outsl
insb
sub
int3
xchg
cmpsb
pop
mov
pusha
shl
push
int3
dec
loopne
push
stos
push
cld
test
fwait
dec
divl
imul
nop
jl
jl
xchg
mov
fistl
mov
mov
push
idivl
aad
push
dec
loope
in
andl
lds
jge
jle
out
test
es
test
mov
pop
dec
imul
pushf
cltd
xor
pop
add
in
and
pop
mov
add
mov
rcrb
cmp
cwtl
ret
int3
clc
mov
jmp
push
cmp
xor
sbb
lcall
push
mov
outsl
jl
cmpb
and
enter
popf
fisttpll
adc
sub
jp
into
xchg
sbb
mov
sub
lods
jg
xchg
mul
out
test
ss
test
iret
sub
fstp
scas
sbb
das
test
sub
push
cmpsb
fcomp
cmp
insl
jmp
fisttpl
das
add
hlt
jp
mov
jne
xchg
bswap
ds
sahf
sbb
sub
push
cmp
mov
inc
adcb
inc
shl
mov
out
loopne
lods
inc
popf
sub
xchg
addr16
shll
and
jle
mov
mov
add
outsl
mov
fcom
mov
jl
pusha
mov
xchg
je
fistpll
cmpsl
mov
xchg
xchg
ss
inc
cwtl
and
out
dec
cmc
cmp
repz
pop
jg
jle
daa
push
out
or
fldenv
mov
sahf
mov
mov
repnz
fisttps
mov
pop
les
jno
insl
lahf
popf
aad
pop
int3
aas
mov
pop
sbb
jns
add
xchg
xlat
add
cmp
mov
dec
mov
push
lock
inc
and
leave
out
cmp
sbb
xorl
add
jb
jnp
movsb
outsl
scas
push
rcr
inc
clc
and
xor
lahf
repz
sbbl
int3
lods
sbb
into
stc
jmp
scas
lret
add
mov
jbe
jle
add
xchg
int
jb
daa
ja
mov
add
jne
xchg
or
dec
stos
repnz
mov
or
inc
lods
int
orb
test
adc
cmp
scas
insb
jns
lahf
cmp
jnp
fdivrs
sub
call
inc
add
or
test
test
out
xchg
xor
cmp
imul
out
mov
or
sbb
mov
push
xchg
loop
push
fsubl
inc
fistpl
xchg
enter
pop
push
inc
ja
xchg
pop
mov
aad
pushf
jae
repz
push
inc
imul
or
inc
jmp
xor
and
push
lret
pop
mov
popf
aam
inc
cwtl
mov
sbb
fcomip
ljmp
dec
jb
repnz
dec
gs
push
mov
sbb
mov
xchg
and
push
xchg
fidivs
sbb
mov
movsl
shrl
les
hlt
jmp
dec
xchg
test
dec
push
cmp
or
or
outsb
push
ret
push
repnz
inc
mov
dec
dec
pop
adc
fistps
bound
test
dec
sub
and
jmp
or
popf
or
rcl
mov
jge
push
insb
loopne
out
mov
pop
jl
fisubrs
mov
int3
mov
out
test
ss
inc
jne
ficoml
cmp
loope
or
cmova
lret
jecxz
lret
enter
dec
int3
add
and
aaa
cmp
stos
cmc
cs
inc
aas
sub
pop
arpl
adc
cld
pop
xchg
lods
cld
cmp
push
aad
arpl
mov
pushf
mov
fucomi
or
xchg
sbb
nop
jp
testb
clc
push
push
mov
lret
clc
and
stos
push
or
adc
adc
aad
ret
jg
or
shlb
les
lcall
test
and
mov
icebp
dec
into
jb
cmp
add
inc
or
inc
je
inc
inc
push
add
mov
fsts
mov
cli
popa
imul
ljmp
cwtl
gs
out
push
jno
xadd
fs
mov
mov
inc
negb
and
mov
dec
mov
mov
sarb
sbb
sbb
xchg
push
out
mov
xchg
push
fidivl
add
adc
dec
addr16
shr
mov
notb
lret
jne
mov
mov
mov
sarb
or
aad
rcl
xor
pushf
je
jle
inc
shlb
jne
push
enter
xor
inc
imul
xlat
rorb
repz
pop
mov
sbb
and
aas
xchg
sbb
push
dec
pop
add
xchg
es
jg
sti
xor
xchg
pop
push
adc
sti
sbb
lock
pusha
hlt
sub
movsb
or
pusha
pop
push
outsl
push
adc
icebp
lock
lcall
and
je
push
int3
idiv
lahf
les
rorl
addr16
enter
add
mov
enter
sub
and
pop
lods
sub
cltd
and
lahf
jo
xchg
sub
les
push
fisubl
jo
xchg
aaa
out
xor
jge,pt
int3
add
xchg
loop
dec
and
sbb
mov
stos
xor
cmc
sbb
sub
ret
cs
outsl
cmp
jp
jge
mov
jmp
std
call
mov
movl
addb
arpl
fwait
insb
addr16
inc
pop
pop
pop
add
decb
cmp
icebp
leave
mov
arpl
scas
rcrb
mov
daa
aaa
pushl
ret
jg
icebp
push
adc
mov
sub
or
loopne
cmp
jnp
imul
mov
repz
daa
xlat
dec
xchg
aas
xchg
jp
mov
imul
ret
outsb
xchg
dec
add
icebp
sbb
mov
xchg
xchg
call
stos
aaa
xchg
xchg
rcrb
out
pusha
dec
push
ret
ficomps
cltd
dec
nop
call
out
lret
inc
or
xchg
aad
pop
aad
scas
out
in
pushf
add
std
loopne
loop
cltd
or
inc
sub
jg
add
mov
jl
daa
xchg
xchg
adc
repz
push
xchg
shll
in
test
test
out
xlat
dec
cmp
in
pusha
dec
xchg
out
inc
mov
xchg
int3
jbe
xchg
xchg
sbb
push
and
mov
lods
ret
xlat
adc
fdivrs
outsl
jle
mulb
movl
xor
pop
bnd
cld
add
cmp
pop
jno
push
les
iret
mov
pop
shlb
mov
lret
repnz
cltd
adc
ror
out
mov
jmp
mov
jno
xor
pop
outsl
mov
xor
mov
jmp
aad
stc
cmp
sbbl
inc
lock
pop
pusha
std
mov
jl
inc
mov
test
stos
js
cmp
ja
fidivl
aaa
sbb
mov
xchg
adc
scas
mov
pop
adc
mov
and
push
push
cmp
rcll
test
sbb
push
xchg
mov
nop
push
repnz
pop
push
lods
psadbw
addr16
ja
push
in
scas
push
je
cmp
rorl
std
xchg
outsb
jns
loopne
adc
xor
mov
data16
or
ficomps
iret
inc
xchg
imul
push
es
mov
jnp
test
xor
inc
add
dec
insl
repnz
push
inc
mov
push
and
stos
jle
stos
jno
popf
xchg
subl
dec
call
adc
cmp
sub
out
jp
mov
les
xchg
out
add
lahf
aam
roll
pop
adc
sbbl
inc
jmp
mov
lahf
mov
dec
repz
add
stc
xor
jecxz
movsl
push
add
mov
stos
xlat
or
jno
xchg
or
shll
or
gs
pop
arpl
cs
cmp
cmc
cmp
xchg
les
dec
xor
stos
inc
fisubs
out
jo
mov
inc
push
mov
xor
outsl
mov
cmp
adc
mov
dec
in
push
sub
out
cmc
pushf
shrb
rorb
call
orb
pop
cmp
jle
pop
ds
or
imul
add
cld
mov
cmp
lret
cltd
sahf
popa
inc
inc
add
fwait
mov
sahf
sbb
outsb
arpl
dec
jmp
sub
setle
repnz
aad
and
pop
int3
jl
dec
sbb
rsqrtps
leave
aas
jmp
out
mov
cltd
pop
jns
and
js
mov
adc
adc
mov
imul
out
pop
jne
pop
stos
shl
movsb
fs
test
cmp
sti
add
jne
mov
cli
jo
add
xchg
lock
negb
aas
pop
xchg
mov
iret
mov
loope
pop
cmp
adc
mov
mov
jb
jbe
mov
cmp
sub
test
lret
jae
scas
xor
into
pop
sub
rcr
sbb
fdivs
pop
inc
sbb
popf
push
jecxz
cmp
mov
cltd
mov
and
pop
adc
popf
or
scas
shl
or
mov
ja
mov
adc
popa
cmp
or
movsb
mov
sub
xlat
dec
sub
and
push
push
cli
daa
inc
sbb
mov
mov
ljmp
adc
ja
pop
add
fs
push
fstps
fnclex
call
push
pushf
repz
sbb
mov
jp
movsb
inc
push
adcb
mov
lahf
sar
lea
dec
push
movb
xchg
and
add
pop
jmp
adcb
push
into
mov
mov
xlat
rol
scas
test
jae
push
ja
sbb
add
lods
sbb
aas
pop
fiadds
jmp
adc
sub
je
out
xchg
outsb
mov
adc
test
pop
mov
xchg
int3
outsb
das
lcall
sub
push
clc
imul
out
dec
or
bound
pop
rol
popa
adc
int3
xchg
scas
into
mov
in
sub
xor
js
push
dec
xchg
icebp
sub
pop
dec
scas
xlat
fists
xchg
out
push
fists
jp
jae
xorb
mov
in
inc
cmp
mov
xor
jl
or
dec
add
mov
pop
call
sbb
mov
cmp
repnz
fs
adc
push
repnz
jo
and
mov
sub
test
aas
push
push
pop
mov
cli
hlt
cld
aad
push
sub
sbbl
rcll
mov
js
xor
imul
push
push
add
adc
sti
test
jge
inc
cmp
lcall
inc
cmp
inc
loop
ss
and
mov
inc
ds
mov
push
imul
out
jp
adc
call
cmc
fdivp
mov
dec
js
push
push
neg
inc
loopne
test
pop
push
ljmp
cwtl
dec
ret
cmpsb
jno
pop
mov
leave
jg,pt
jo
out
fwait
jp
inc
rorl
idivl
fildl
cltd
dec
mov
mov
int3
xchg
push
and
add
xor
mov
mov
or
xlat
push
pop
cmp
xor
inc
jl
lods
push
movl
jne
fs
xchg
adc
pop
les
jg
imul
cwtl
mov
repz
ret
sbb
shlb
mov
dec
repz
and
lea
xchg
aas
mov
push
jnp
fiaddl
add
mov
cltd
jecxz
sbb
mov
sub
mov
stc
mov
mov
add
or
outsl
mov
or
ret
dec
cwtl
ret
notb
add
mov
sub
pop
rolb
mov
dec
mov
cmpsb
xor
lods
jle
add
inc
jno
leave
mov
adc
xchg
mov
sbb
mov
jns
loop
orl
fwait
inc
mov
or
das
stos
fcmove
jae
or
cmc
mov
xchg
ds
cwtl
call
in
aas
testb
jbe
data16
and
xchg
rcrb
out
pop
cmpsl
fidivs
adc
repz
xchg
rclb
popa
pushf
push
cmp
lcall
jle
inc
sbb
sahf
sbb
in
xchg
aam
push
clts
clc
push
and
imul
sahf
jmp
cmpsl
jecxz
mov
xchg
push
negl
push
data16
dec
iret
dec
sti
fsubs
addr16
xor
es
and
in
out
and
add
push
push
push
sub
bound
repz
in
dec
out
inc
lret
or
rcll
pop
cmpsl
sbb
inc
movsl
xor
and
dec
cmp
cli
push
jl
pop
stos
sub
xchg
data16
push
pop
aad
push
lea
mov
sarl
fwait
mov
xchg
adc
sti
ds
cmpsl
rolb
mov
or
xor
pusha
cs
xchg
xchg
add
sar
int3
mov
into
cmp
nop
xor
mov
jno
pop
sub
lahf
roll
inc
nop
xchg
fadds
insb
ret
sub
lret
imul
xor
jae
jae
or
pop
popa
cmpsl
ret
xchg
js
scas
das
icebp
test
adc
sbb
xchg
pop
jge
sbb
mov
out
jns
stos
jmp
cmp
int3
lods
mov
fs
push
mov
popf
adc
push
sbb
jecxz
fidivs
andb
jl
in
cld
ficompl
test
cmc
jge
dec
int
adc
cmp
sar
pop
test
sub
xchg
jp
dec
fdivrs
sbb
aam
mov
xchg
and
movsl
pop
pop
xor
js
bound
push
fwait
in
inc
mov
xor
mov
sub
sbb
sbb
xchg
push
cmc
repnz
outsw
aad
js
sti
loope
sti
mov
add
fimull
in
ror
fwait
popa
inc
sbb
out
movsb
dec
cmpsb
xor
mov
mov
jbe
stc
fcoms
scas
xchg
xchg
pop
repnz
andl
popf
add
or
movsb
jmp
xchg
push
dec
xchg
jns
addl
mov
aas
mov
ss
xchg
nop
fwait
dec
sub
insb
or
pushf
sub
out
enter
cmp
bound
mov
js
sbb
call
jnp
sub
cld
mov
jecxz
or
mov
test
cs
mov
xchg
push
pop
mov
divb
jg
mov
inc
jg
test
push
mov
sahf
pop
inc
cmp
addr16
and
mov
pop
add
ja
clc
or
dec
adc
push
xor
adc
push
in
mov
std
dec
data16
cld
out
xchg
cmp
daa
and
dec
lods
iret
enter
pop
arpl
or
xor
dec
xlat
push
pushf
sub
adc
jecxz
leave
inc
push
fstpt
test
clc
loop
test
ljmp
lock
inc
mov
jo
call
cld
adc
ja
in
in
mov
cmpsb
loop
xchg
pop
mov
out
pop
stc
push
pop
cmpsb
loopne
sub
mov
test
nop
gs
into
mov
ds
or
mov
cmc
mov
or
insl
dec
call
jge
adc
xchg
movsl
push
mov
push
adc
sub
imul
inc
pop
mov
xor
stos
jmp
subl
add
neg
jbe
add
sbbb
test
jp
mov
js
sbb
xchg
xlat
scas
outsb
sbb
lret
mov
mov
pusha
mov
pop
pminsw
add
mov
fildll
cmp
ja
mov
aad
sub
or
dec
jmp
loop
push
mov
inc
or
jne
aam
mov
sbb
xor
or
xor
inc
dec
bound
mov
lret
popf
cmp
jnp
and
xor
inc
loopne
mov
pop
push
xchg
sub
out
call
add
frstor
out
mov
lea
nop
inc
xchg
or
sbb
test
aaa
jecxz
jecxz
push
push
test
push
js
arpl
popa
mov
push
dec
push
jl
aam
sbb
pop
adc
aas
dec
iret
xchg
pushf
pop
inc
jo
pop
data16
aas
mov
andl
xor
mov
rcl
ret
mov
rcl
sbb
in
jns
sbb
jl
dec
sub
mov
adc
loopne
xchg
and
pop
outsl
xchg
dec
xor
jnp
out
jne
push
mov
jmp
mov
shr
inc
pop
add
sahf
cmpsb
mov
ror
lock
and
iret
aaa
imulb
jg
cmp
add
adc
and
repnz
in
lahf
sub
lret
xchg
repnz
repnz
jnp
push
inc
lea
clc
addb
stos
xor
into
dec
gs
mov
daa
inc
cmp
xor
inc
and
cmpsb
pusha
or
xchg
aad
jns
pop
cli
push
push
lock
scas
ja
ljmp
mov
dec
or
mov
mov
mov
cmp
sub
in
ret
popf
xor
rol
dec
fstp
add
std
imul
mov
jge
or
fnstcw
or
sbb
imul
mov
jge
or
fnstcw
or
sbb
imul
mov
jl
or
fnstcw
or
sbb
imul
mov
or
shlb
ret
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
imul
pop
and
insl
ljmp
lods
test
std
cltd
in
imul
cmp
jge
insl
jmp
mov
mov
in
imul
cmp
jge
insl
jmp
int
lods
test
cwtl
lock
sbb
pop
xor
es
outsb
mov
jle
mov
adc
cli
and
xor
test
movsb
shrb
movsl
cmp
push
and
mov
mov
adc
lret
jl
jmp
ret
jp
in
push
pop
in
jae
mov
xor
or
cltd
in
imul
pop
cmp
pop
push
xchg
sbb
sub
push
stc
mov
int3
cmp
movsb
rcl
pop
sbb
call
inc
push
sahf
stc
adc
cltd
mov
jae
cmpsb
pop
add
or
scas
bound
dec
and
cmp
fwait
in
stos
sbb
pop
sub
or
insl
jmp
mov
mov
stos
or
sbb
pop
imul
data16
in
rcrl
in
jg
mov
pop
or
jp
cmp
dec
adc
fcomps
rcrl
mov
push
dec
jns
cmovns
insb
xor
dec
or
insl
jmp
mov
mov
in
imul
cmp
jge
insl
jmp
mov
mov
in
imul
lret
pop
pop
sub
dec
mul
mov
xor
lahf
mov
sub
dec
repnz
inc
jo
and
lods
fldenv
push
inc
add
pop
je
mov
and
cmp
or
push
dec
and
xor
test
je
rcll
sub
jae
mov
xor
cld
dec
jmp
mov
jbe
fbld
movsl
packssdw
push
cld
insb
mov
sbb
cmc
fcmovnu
or
int3
outsl
fsubrs
les
and
call
pop
arpl
ret
int
push
adc
scas
cltd
jae
add
sbb
push
movsb
in
mov
test
loope
or
and
in
repz
jmp
cwtl
mov
js
or
cld
sub
test
lahf
iret
in
push
add
int3
stc
push
jo
push
pop
cmp
pop
inc
push
bound
mov
jns
es
sahf
out
data16
inc
jbe
xor
mov
inc
jp
inc
bound
mov
fsubrs
add
jns
jo
scas
lds
jo
call
push
repz
jo
cmp
push
mov
dec
int
js
clc
fdivl
adc
in
push
popa
gs
and
call
leave
into
or
out
pause
mov
and
or
ret
lret
ja
out
xor
push
adc
mov
je
mov
sub
jmp
lea
xchg
movsl
and
icebp
popf
iret
sub
adc
addl
test
xor
and
repz
cmpsl
adc
inc
das
xchg
xor
nop
insb
in
out
or
std
mov
test
jbe
mov
xchg
sub
push
pop
mov
cmpsb
jo
je
sbb
adc
sub
add
ret
xor
xor
popa
mov
int3
and
fldlg2
mov
jb
in
lods
icebp
cmp
arpl
dec
cmp
xor
scas
and
in
lods
pop
pop
xchg
fsubrl
test
mov
lahf
es
xchg
push
xchg
xchg
pop
test
push
or
jmp
add
shll
push
push
inc
push
dec
or
mov
lret
insl
xchg
dec
call
dec
lahf
shrw
dec
push
jo
fdivrp
or
cld
repz
mov
lock
or
icebp
fidivrs
jg
cmp
pop
xor
sub
cmp
mov
xchg
lods
dec
popf
ret
sub
lods
divl
inc
hlt
add
int3
clc
sbbl
in
dec
xor
pop
xor
in
jp
mul
add
lcall
cltd
push
fsts
daa
mov
push
inc
push
mov
xchg
aad
jge
test
test
push
jle
ss
adc
fimull
adc
jne
sbb
idivl
pushf
aam
pusha
jns
pop
aam
xchg
shll
pop
mov
mov
sub
jl
outsl
test
icebp
xor
popl
fdivrs
outsb
test
rorl
add
inc
inc
repz
out
xor
mov
jle
xor
xor
shrl
cltd
aad
out
stos
cmc
xchg
xchg
out
xchg
rorb
adc
arpl
orb
pop
add
es
idivl
pop
into
pop
test
sub
or
lods
sbb
and
je
pushf
dec
or
sub
test
xchg
lcall
addr16
cmp
xor
es
sbb
andl
lods
fdivs
xor
jns
ljmp
jge
mov
cmp
xlat
xchg
orb
and
int
mov
push
xchg
es
xchg
filds
pop
push
cmpsb
in
test
repz
cli
mov
ds
ret
test
jno
add
xchg
fistps
mov
cltd
fwait
scas
lea
popf
adc
fs
and
push
iret
mov
dec
lds
shll
shl
out
insl
sub
xchg
and
xor
scas
loopne
push
xor
pushf
jbe
add
repnz
or
test
popf
test
xchg
pop
xchg
jb
lahf
xchg
jno
mov
divb
adc
jnp
inc
out
test
repnz
push
xor
pop
pop
fimull
inc
adc
out
movntps
xchg
xchg
ljmp
mov
fs
arpl
add
sub
repz
mov
and
leave
xor
cwtl
lahf
repz
int3
mov
push
insb
jb
sahf
stos
or
stos
sub
rcrl
or
fidivrl
jno
les
ret
xor
and
sbb
dec
int
cld
es
dec
mov
dec
push
add
and
insb
mov
out
dec
les
gs
andb
cmp
hlt
push
in
xor
std
mov
inc
pop
lods
popf
jno
or
aam
clc
icebp
pop
test
mov
div
adc
in
sub
popf
int3
daa
or
mov
cld
in
push
fmuls
xchg
add
push
iret
push
repz
and
xor
lods
add
dec
push
push
inc
ja
inc
push
jno
adc
sub
sbb
popf
inc
xchg
dec
mov
arpl
mov
cltd
adc
out
fwait
inc
xchg
jl
jb
push
inc
jl
cs
fwait
ret
inc
out
dec
xchg
mov
scas
pop
jmp
jne
pop
in
and
add
push
push
pusha
pop
mov
jne
add
ss
adc
das
sbb
ljmp
push
fcomip
jmp
jbe
ds
inc
inc
jo
pop
push
xchg
jg
mov
pop
in
popf
fidivrl
leave
or
clc
push
ja
adc
inc
lahf
fsubr
cmp
pop
lret
sub
dec
xchg
xchg
adc
xorb
xchg
pop
add
mov
rclb
popa
adc
jno
movsl
mov
rclb
jb
das
add
inc
loopne
movsb
imul
lds
push
sbb
jmp
cmp
push
test
cld
cmc
addr16
aaa
in
je
push
mov
jo
int3
fs
dec
sub
scas
xor
dec
inc
dec
push
in
dec
decl
out
xor
xor
pop
loop
lock
std
pop
dec
rcll
lods
mov
aad
ljmp
xchg
inc
pop
push
insb
mov
into
imul
ret
rorl
rcrb
and
cmp
mov
dec
xor
fiadds
cmp
and
xchg
clc
or
lret
lods
shlb
mov
mov
cmp
cmp
icebp
adc
cmp
ds
xchg
leave
es
jge
fcomp
movnti
mov
xor
mov
out
push
add
dec
sbb
scas
xchg
push
sbbl
mov
mov
push
out
mov
cli
mov
cmpsb
xlat
mov
mov
mov
sahf
jne
push
jbe
add
xchg
out
lret
in
pop
sub
xor
mov
push
mov
mov
cmc
sbb
and
and
scas
xchg
xchg
xchg
lahf
lds
pushf
jl
pushf
xchg
push
and
xchg
aas
scas
movsb
add
push
imul
pop
xor
sbb
mov
xor
test
inc
mov
cmpsl
xor
xchg
fdivs
cwtl
push
lock
add
pop
push
inc
and
leave
pop
fistps
jnp
adc
mov
or
xor
jo
ja
data16
sbb
dec
movsb
adc
mov
adc
xchg
add
ds
pushf
lahf
test
jnp
ss
leave
jns
dec
mov
clc
sub
xor
adc
movsb
out
pusha
cmc
loopne
mov
stos
jge
add
cmp
ss
push
fucomip
iret
add
imul
icebp
xor
lock
js
add
scas
test
or
jno
ljmp
or
cmp
inc
xchg
mov
icebp
adc
test
stos
dec
mulb
js
test
fwait
scas
sbb
dec
clc
pop
or
mov
fcoml
into
dec
fmuls
insb
lods
pop
test
add
inc
jge
lret
push
add
aad
and
pusha
stc
inc
enter
ljmp
inc
or
adc
fadd
mov
cmpsb
nop
mov
inc
xchg
mov
mov
jle
jne
popf
repz
xor
mov
jno
shl
and
sbb
lods
mov
shrl
add
cld
pop
icebp
pop
mov
pop
aas
loopne
movsl
xchg
xchg
outsb
push
aas
adc
shr
mov
in
enter
dec
clc
dec
cmc
xor
inc
cmp
daa
push
sub
mov
mov
sbb
aad
xchg
lock
mov
ss
add
cmpb
cmp
andb
rcrb
sti
mov
dec
int
test
rcll
scas
adc
loope
mov
daa
or
inc
popl
das
insl
inc
add
lret
int
js
or
popf
jg
inc
cmpsb
aas
sarb
pop
movsl
mov
mov
fildll
mov
cmp
leave
fisttpll
sbbb
adc
aad
adc
shlb
or
in
nop
loopne
pop
dec
add
cmp
mov
insl
int3
das
test
push
scas
insb
stos
mov
les
pop
imul
testl
lahf
mov
mov
push
hlt
xchg
aad
cmp
call
sub
and
mov
jle
mov
btr
aas
mov
and
mov
shl
push
mov
cs
adc
in
sub
mov
popf
or
cltd
aam
mov
mov
push
and
sbbl
sbb
nop
shlb
inc
test
popf
add
mov
loop
inc
outsb
adc
sub
pop
mov
xchg
pop
jns
iret
pushf
or
movsb
outsb
inc
rcrb
imul
jo
and
loop
leave
std
aas
clc
shll
jne
mov
lret
sbb
int
dec
ror
xor
sbb
push
shlb
push
rclb
fimuls
add
dec
and
loope
pop
sbb
or
mov
inc
ret
lds
xor
push
and
test
sub
dec
ret
movsl
mov
mov
pop
jo
cmp
adc
push
jmp
adc
cmp
pop
xchg
pusha
adc
or
rol
sbbb
jmp
dec
xor
lods
or
xchg
icebp
cmc
packsswb
imul
xchg
inc
push
mov
mov
sub
jp
push
jg
push
sbb
push
movsl
sbb
mov
pop
cli
inc
loop
xchg
push
repz
push
loopne
mov
sub
xchg
aas
push
test
and
xor
daa
mov
in
ret
rcrb
jecxz
pop
xor
jae
jb
dec
jne
ss
out
pushf
mov
aam
clc
adc
insl
in
jge
jle
lock
aad
shlb
popa
adc
jle
jmp
shll
sahf
or
jb
cs
filds
fnstsw
mov
ret
mov
in
jl
add
nop
pop
push
adc
clc
sarb
xchg
loope
xchg
jecxz
sbb
dec
pop
stos
pop
xchg
jp
jg
and
push
in
xor
adc
push
xor
js
nop
adc
lods
aad
and
inc
and
int
jmp
aad
iret
ficoml
add
fs
out
loop
dec
out
xor
loopne
mov
mov
pop
test
in
jb
xor
mov
add
inc
inc
push
inc
icebp
xlat
mov
lret
adcl
ja
movsl
pop
movsb
mov
insl
cmp
jae
pop
pop
pop
jecxz
jmp
ja
mov
xchg
inc
loop
cltd
shll
dec
adc
addr16
aaa
jnp
pop
cmp
sbb
leave
pop
lock
aaa
inc
flds
mov
lret
xor
dec
pop
mov
std
dec
cmp
mov
adc
push
test
jns
fcoms
add
xchg
cmp
inc
mov
jae
adc
es
mov
mov
adc
xchg
mov
lods
mov
sbb
mov
inc
aad
and
mov
push
mov
push
lock
xor
out
mov
insl
mov
out
nop
jl
stos
movsl
fs
addr16
cli
inc
and
subl
sub
inc
jp
and
mov
ss
sbb
mov
pop
and
push
jno
cmc
jmp
lsl
call
jmp
mov
es
mov
out
xor
insl
mov
out
sti
out
cmp
out
lods
testb
mov
pop
mov
lods
ficomps
push
in
sub
ljmp
scas
add
fimull
dec
push
jns
int3
inc
ret
or
sub
sub
mov
lods
incb
mov
aam
fwait
lea
push
mov
jno
push
shrl
fiadds
cmp
mov
iret
xor
insl
jb
inc
inc
or
mov
push
sti
mov
iret
les
into
stc
std
pop
addr16
or
int
scas
inc
xchg
sub
jb
cmp
je
pop
shr
pop
sbbl
arpl
aam
insl
shll
inc
clc
repnz
mov
xchg
xchg
cs
xchg
mov
xchg
fadds
xor
mov
mov
data16
rcrl
xor
xor
add
lcall
in
into
jle
mov
mov
das
out
lahf
or
nop
into
inc
cmc
push
cmpsb
outsb
loop
jb
inc
lcall
jo
adc
popl
jns
adc
aam
scas
sub
push
or
lods
lods
rolb
arpl
jbe
pop
mov
aam
cmp
sbb
and
popf
iret
mov
scas
cltd
mulb
pushl
jns
das
xlat
and
pop
sub
aad
lahf
cltd
lcall
cmp
insb
cmp
and
cmpsb
enter
cwtl
fadds
or
ljmp
lods
mov
sbb
dec
xor
cs
jb
dec
dec
mov
into
imul
xlat
jg
mov
ss
sarl
fisubs
mov
pop
mov
loopne
add
cltd
stos
cli
aam
imul
popa
mov
ss
mov
inc
jno
jae
cli
jae
pushf
dec
or
sub
jnp
sub
cmp
cwtl
xchg
xorb
sub
loopne
lods
ret
enter
dec
cmpsl
xorb
jo
xor
leave
xchg
dec
jecxz
shl
cmpsb
push
jmp
ja
adc
jbe
mov
xchg
mov
add
jns
insl
dec
push
sarb
dec
inc
jge
jo
adc
sbb
pop
sti
push
ror
icebp
jb
cmpb
jb
sbb
stc
jno
divl
sub
push
jp
jne
sbb
jmp
cmp
pop
dec
mov
xchg
pop
fwait
push
xchg
mov
jbe
mov
cs
dec
pop
push
test
cmc
adc
sub
rcrb
mov
call
sub
sbb
push
test
inc
dec
icebp
xchg
add
cmpsl
bound
xchg
push
adc
stc
in
dec
xor
fldenv
in
pusha
sub
rorb
or
push
fildll
mov
inc
lock
or
or
out
loop
or
adc
mov
or
int
lret
call
fcomps
in
pop
iret
insl
or
jns
mov
sub
mov
sub
fadds
rorb
mov
sar
xor
repnz
pop
sbb
pop
mov
scas
shl
xor
dec
fisubrl
jmp
push
sbb
mov
das
cltd
jae
xor
roll
cli
outsl
xchg
jae
push
nop
stos
pop
fiadds
xchg
mov
scas
push
mov
push
pusha
fwait
scas
mov
jecxz
shl
mov
sbb
cli
das
loopne
enter
add
lods
mov
sahf
lock
sahf
std
lds
cmpsb
jne
xchg
outsl
xchg
inc
stc
mov
lea
mov
xlat
pushf
fs
mov
dec
sub
fbld
push
mov
lret
lods
ja
icebp
pop
pop
add
mov
inc
ss
mov
mov
shll
xchg
mov
iret
jns
inc
fstps
mov
sahf
push
sbb
xchg
pop
pushl
pushl
pop
fists
mov
lret
sbb
jge
ljmp
lcall
stos
dec
js
lods
push
dec
jae
pop
adc
cmp
jl
test
push
pop
mov
push
aas
jns
dec
dec
adc
mov
ljmp
add
lea
movsl
js
mov
imul
push
lcall
mov
cwtl
mov
test
sub
out
out
push
add
imul
push
lods
add
fnstsw
cmp
xor
push
xchg
fsubl
xor
push
jmp
jp
sahf
mov
pop
sub
push
pop
mov
cli
les
outsb
adc
cs
sbb
sub
xor
movsb
scas
lahf
sbb
int
out
jno
sub
cmp
ljmp
push
xadd
sbb
out
data16
lret
out
fisubrs
adc
push
shr
outsb
iret
dec
enter
lahf
inc
sub
sbb
adc
js
xchg
cltd
pop
shlb
sub
fwait
adc
daa
test
lcall
out
ret
add
add
mov
out
inc
je
mov
fld
aaa
inc
lock
cmp
mov
stos
mov
add
push
add
or
sub
pop
test
mov
popf
loopne
pushf
cmpsb
push
adc
xor
out
mov
lret
loopne
dec
aas
insl
leave
adc
icebp
xor
ret
or
inc
jmp
inc
mov
sub
jae
lea
mov
push
jne
not
xor
hlt
and
lcall
fdivrl
xchg
inc
dec
arpl
mov
leave
in
mov
push
das
cltd
xchg
push
mov
mov
sbb
and
in
jl
xlat
out
sarl
add
fs
mov
lret
or
cmp
mov
dec
jecxz
adcb
fisttpl
pop
arpl
inc
movd
xchg
int3
mov
nop
cmp
insl
add
pop
test
or
hlt
push
dec
sub
push
out
mov
pop
cs
test
lods
pop
or
push
out
js
mov
xlat
leave
data16
or
or
rcrb
imul
mov
popa
pop
in
and
xchg
fsubr
outsb
stos
push
stos
add
pop
mov
jl
mov
pop
sbb
push
in
sbb
jns
dec
pusha
sub
mov
xchg
mov
push
xchg
das
or
mov
pop
cs
insb
sbb
cmp
pop
mov
xchg
jb
or
dec
dec
add
cltd
adc
add
fistpl
or
xchg
and
lret
aam
jge
xchg
add
fildl
dec
sub
pop
ja
cmp
add
jmp
out
push
cltd
sub
mov
ss
xchg
subb
arpl
and
popf
pop
ret
subb
int3
jns
mov
je
stos
xchg
sub
stos
add
push
adc
lds
repz
xchg
test
das
mulb
fwait
in
inc
mov
and
sub
inc
push
mov
stc
imul
lock
arpl
xchg
mov
lcall
mov
daa
mov
and
add
insb
sbb
xor
addr16
test
push
sbb
mov
pop
adcl
mov
jb
call
test
adc
lods
in
sbb
push
mov
xchg
add
lock
dec
sub
and
nop
jmp
jmp
test
jbe
repz
mov
js
push
pop
jmp
gs
iret
data16
add
add
push
mov
filds
or
dec
and
mov
jecxz
in
cmp
jb
in
orl
xor
adc
mov
jge
out
jb
push
sbb
icebp
in
add
cwtl
std
cmp
jne
jl
popa
mov
or
add
inc
pop
sub
aas
xchg
lret
cmc
loop
das
hlt
repnz
push
and
inc
ficoms
in
fadd
sbb
mov
inc
out
mov
rcrl
ljmp
jno
inc
sub
mov
sub
aad
daa
leave
push
fwait
lods
cmp
push
xor
fmull
push
imul
and
es
popa
xor
outsl
cli
pop
iret
pop
pop
ss
or
push
in
jbe
lock
icebp
jb
pop
push
pushf
or
sub
dec
or
insl
jmp
mov
mov
in
imul
cmp
jge
insl
jmp
mov
mov
in
imul
pop
sub
pop
cmp
jl
insl
call
mov
mov
in
imul
cmp
mov
cltd
xchg
push
bound
daa
arpl
xor
jno
popa
adc
lods
sub
in
sbb
xor
xchg
stos
ss
or
sbb
insl
jmp
fistpl
cmp
pushf
jnp
imul
int3
dec
mov
fwait
or
jmp
fisttpl
cmp
pushf
jnp
imul
int3
dec
fdivrl
imul
sub
int3
sbb
addr16
mov
loopne
push
iret
mov
fisubrl
dec
push
mov
mov
cwtl
jae
mov
adc
mov
inc
cmp
ret
fs
add
ljmp
mov
jle
lock
adc
cmp
stos
xchg
xchg
inc
mov
and
test
pop
in
jle
faddp
dec
cmp
shrb
ret
gs
add
stos
pushf
pop
cmp
pop
les
sti
jae
xchg
and
adc
popf
push
fcoml
std
sub
repz
aas
adc
mov
mov
fdivs
adcb
dec
push
in
sub
cmp
jecxz
jge
sub
dec
dec
mov
sbb
cld
pop
int3
dec
fdivrl
or
sbb
insb
jmp
fisttpl
jp
pop
lds
fnstsw
sbb
mov
pop
rep
cli
sbb
cmp
rorb
les
jnp
cs
fimuls
dec
cltd
imul
mov
mov
out
je
addr16
fisubrs
pop
int3
dec
fdivrl
or
sbb
insb
jmp
fisttpl
cmp
pushf
jnp
imul
int3
dec
fdivrl
or
sbb
insb
jmp
fisttpl
cmp
pop
test
imul
cmp
and
setp
or
rol
inc
ljmp
mov
cld
rorb
cmp
pop
mov
and
xchg
nop
add
outsl
xor
xorb
inc
pop
pop
pop
xchg
xchg
cs
jo
das
xchg
dec
arpl
fists
mov
stos
xor
sub
and
and
pop
or
push
out
hlt
lret
mov
jo
mov
ljmp
insb
fdivrl
into
inc
repnz
cmp
push
dec
jo
lock
test
dec
into
shlb
scas
pusha
adc
adc
shl
decl
mov
ret
jmp
outsl
mov
fwait
sbb
mov
inc
cmp
lods
mov
aam
cs
adc
push
rol
mov
xchg
pop
dec
jae
and
daa
hlt
dec
fsubrl
js
in
mov
mov
ss
roll
pop
shll
in
aas
jbe
std
int3
dec
and
sar
mov
inc
cwtl
imul
int3
cmp
int
insb
fcmovu
int
push
imul
dec
sub
cli
xor
push
jb
rclb
test
pop
sbbl
jp
fwait
inc
mul
sub
data16
push
scas
les
jne
outsl
stc
pushf
sub
ja
or
iret
xor
or
mov
push
jae
xchg
hlt
cmp
inc
bound
call
pop
sub
and
push
outsb
pop
jl
sbb
pop
sahf
sarb
lret
movsb
sbb
or
insl
es
out
loop
mov
mov
inc
ss
xchg
dec
or
out
fisttps
scas
clc
arpl
clc
jmp
sbb
jge
shlb
fadds
jmp
adc
adc
outsl
mov
jo
pop
and
movb
bound
push
andb
add
jp
mov
xor
insb
mov
je
sti
ficomps
and
inc
xchg
fstpl
std
pushf
enter
enter
and
dec
call
add
out
inc
pop
push
mov
lret
adc
bound
xchg
jb
loope
into
out
lret
mov
test
rcrl
inc
dec
les
cltd
mov
inc
outsl
add
add
outsb
inc
lea
loopne
jne
dec
test
pop
movsb
enter
test
mov
imul
in
xchg
push
cltd
call
pop
enter
pop
stc
ljmp
pop
mov
mov
or
push
sub
sub
mov
fnstsw
loop
adc
test
or
xlat
jle
iret
pop
xchg
int
xchg
pop
mov
fldcw
es
fcmovu
pop
pop
jecxz
fimuls
and
imul
fistl
aad
push
in
ret
sub
cwtl
sub
push
hlt
das
fs
mov
cmpsb
pushf
adc
mov
pop
adc
ljmp
xchg
int
shl
sbb
jmp
mov
lret
cmp
sbb
jp
mov
add
loop
jb
hlt
punpckldq
mov
push
mov
and
ret
or
jge
fsub
cmp
sbb
or
sbb
or
inc
add
cmpb
mov
inc
movsl
loop
icebp
and
xchg
ret
adc
mov
lcall
mov
sbb
insl
js
cmpsb
in
and
adc
scas
rolb
mov
popa
inc
loope
dec
stos
dec
ret
in
insb
sarl
popf
popa
mov
jge
insb
out
ret
mov
test
dec
or
sbb
pop
pop
and
pop
fdivs
in
popa
push
sub
movnti
call
xlat
loop
adc
inc
popf
js
insl
call
jmp
push
mov
mov
cmp
lret
lcall
mov
incb
es
lods
rcrl
lods
add
cli
cmp
fisubl
aaa
xor
shrb
mov
sti
aad
xor
and
rcrl
enter
inc
das
orb
inc
dec
lcall
int
ret
das
pop
arpl
lock
xlat
pop
pop
jbe
push
cs
mov
xchg
enter
or
lods
xor
sub
jp
or
out
dec
out
mov
mov
stc
imul
gs
scas
jbe
dec
and
mov
dec
pusha
xor
ja
test
je
xchg
or
mov
xchg
pop
or
sub
popa
lods
push
add
fsub
cmp
aaa
fldt
lods
pop
sbb
outsb
mov
or
pop
ljmp
jo
dec
mov
test
pop
lds
addr16
mov
divl
push
cmp
jno
mulb
lret
in
cwtl
dec
dec
stos
push
jnp
shll
inc
out
mov
rcl
cmp
int
sbb
cmp
xchg
xchg
dec
test
or
sti
xor
addr16
fsubrs
lock
jnp
sub
mov
shr
or
xchg
pop
mov
cli
cmp
stc
inc
mov
outsb
mov
divb
or
shrl
jno
jnp
int
ljmp
les
pop
or
xchg
mov
cltd
or
xlat
mov
xchg
in
mov
into
fdivrl
push
jg
aaa
sbb
test
nop
or
popw
add
movsl
lock
nop
dec
mov
adc
sub
int3
mov
pop
call
and
loop
das
es
sbb
loopne
fildl
mov
ret
cmp
icebp
mov
and
std
cmp
lods
aad
add
jge,pt
adc
mov
sub
ljmp
sub
test
mov
mov
adc
out
pop
inc
fwait
rcll
pusha
or
sub
pop
aas
testb
and
mov
jg
push
sub
mov
jae
and
lcallw
les
dec
cmp
mov
adc
movsb
add
cmc
insb
or
adc
xchg
jae
aas
cmp
loop
xchg
pusha
xchg
mov
cmpsb
cmp
xchg
adcb
test
stos
cmpsb
adc
lret
jb
out
jb
fcom
out
sub
pop
and
mov
push
mov
cmc
inc
rorl
mov
adc
and
push
lret
cmpsl
sbb
filds
sub
xchg
scas
dec
js
jns
xchg
sbb
iret
pop
and
mov
sub
mov
pop
xchg
ja
adc
fcmove
push
int
rclb
mov
cmp
outsl
movsl
xchg
fstpt
and
cmp
push
daa
push
fs
incb
cmpsb
mov
and
dec
ljmp
lods
pop
std
jnp
push
scas
inc
das
sbb
or
aas
ja
push
xchg
adc
jmp
xchg
sbb
dec
sbb
xchg
incb
jecxz
hlt
adc
sbb
cmpb
outsb
sbb
shll
sub
mov
ja
pop
sbb
fnsave
xchg
xchg
loop
outsl
mov
inc
xchg
das
cmp
mov
or
movsb
push
xor
cmpxchg
push
test
mov
dec
in
sbb
sbb
sbb
xchg
push
mov
mov
xor
pop
repz
repz
clc
add
jns
adc
xor
pusha
test
iret
rcrb
stc
rorl
pop
mov
cmc
inc
shll
and
inc
xor
lret
and
jne
enter
out
mov
or
mov
gs
dec
add
cmp
les
shr
das
xchg
sub
mov
push
xchg
and
aad
push
pop
pushf
dec
mov
add
in
test
cmc
pop
cmpsl
sbb
dec
mov
push
push
push
dec
xor
dec
sti
xchg
scas
adc
adc
orl
mov
mov
inc
bound
in
test
stos
mov
inc
stos
inc
sub
movsb
push
sub
shlb
push
pop
pop
insb
jg
inc
ljmp
add
lret
je
outsb
xchg
pusha
sub
adc
dec
xor
stos
fldl
add
mov
cmpsb
arpl
mov
adc
xor
jmp
and
lcall
pushf
outsb
add
mov
dec
popf
daa
push
and
add
arpl
jns
int3
push
fmull
std
pop
idivl
add
jg
fwait
push
icebp
push
sahf
sub
jbe
lods
cmp
sbb
xchg
jmp
sarl
push
rorb
mov
ret
jne
mov
dec
jecxz
adc
dec
popf
push
pop
xor
ficompl
out
push
les
icebp
popf
cs
ds
xor
and
jecxz
push
jmp
out
push
add
in
clc
enter
mov
cmp
sahf
sbbb
jnp
pop
sub
in
mov
outsl
pop
sahf
lock
push
xchg
insb
sub
fs
fdivl
mov
sub
cmp
shll
out
xor
andb
adc
cli
jmp
cmp
and
lods
loop
mov
mov
das
sbb
pop
data16
mov
jne
bound
mov
dec
and
push
inc
or
imul
sub
dec
loope
subl
cs
pop
inc
adc
pop
cmp
dec
xor
pop
lods
jo
mov
in
test
fsub
sahf
dec
clc
mov
mov
outsl
pop
les
repnz
filds
icebp
aas
lds
mov
xchg
sub
or
aas
cmp
xlat
jb
jnp
pop
orl
and
call
mov
sti
pop
clc
clc
mov
out
bound
add
rolb
mov
cmp
dec
add
sub
adcl
aas
loopne
mov
xchg
adc
testb
imul
lret
cltd
or
pop
dec
jnp
pop
insb
lods
inc
push
dec
xchg
cwtl
and
jg
or
pop
mov
add
push
fnstenv
out
aas
incl
add
adc
inc
sbb
or
in
jl
pop
cli
jge
ret
inc
dec
push
mov
pop
jne
int3
sbb
movl
pop
and
add
mov
sub
xor
mov
test
mov
imul
sbb
push
lahf
adc
jg
bound
sbb
cmpsb
add
mov
andb
iret
cmpsb
ret
sub
inc
jge
mov
and
rcrb
test
sahf
out
sbb
mov
or
cmp
cmp
mov
scas
loopne
mov
mov
repz
jl
out
sbb
dec
inc
xor
xchg
cltd
addb
push
lret
lret
popf
mov
pop
aam
lods
xor
xor
dec
hlt
xchg
sub
mov
pop
ret
fdivrl
pop
insl
mov
add
dec
enter
inc
or
icebp
movsl
ret
xchg
jmp
sub
or
jno
orb
dec
outsb
adcl
lret
jno
les
dec
ljmp
add
push
jno
cmpsl
adc
mov
lods
fadds
inc
and
mov
fwait
shrl
jno
or
and
enter
cltd
or
aad
inc
adc
push
xchg
aas
cmp
ljmp
dec
in
mov
fists
xorb
dec
notl
imul
rorb
outsl
scas
mov
pushf
lcall
insl
test
xchg
jp
cmp
jb
cltd
add
pop
inc
mov
push
jge
leave
pop
jecxz
notb
sub
cld
push
push
sahf
sbb
xlat
push
out
imul
mov
in
icebp
dec
fstpt
push
test
lods
mov
push
jno
add
push
pop
movsb
cmc
push
and
jmp
jb
add
ja
loop
and
adc
sub
stos
out
inc
mov
std
cmp
cmp
dec
int
hlt
addr16
xchg
test
outsb
push
mov
xchg
imul
pop
bnd
lods
icebp
scas
or
sub
mov
clc
flds
add
cmc
mov
divb
ret
into
dec
xchg
xchg
adc
sbb
pop
lcall
ret
inc
xchg
push
xchg
rcrl
cs
jle
andl
or
push
rcll
inc
nop
xchg
movsl
inc
iret
loope
daa
jbe
cs
xchg
fldcw
test
movsl
inc
cmp
sbb
mov
pop
enter
ficompl
mov
push
adc
stos
mov
clc
pop
sbb
test
sti
outsb
push
xchg
add
jae
inc
xlat
and
aas
stos
je
mov
ret
pop
mov
sub
rcrb
lds
ljmp
cwtl
mov
imul
filds
fcoml
pop
stc
xor
cmp
dec
inc
shll
cli
inc
push
xor
or
xchg
mov
lds
push
jno
jne
pop
pop
std
icebp
hlt
shrb
loopne
jp
pop
movsb
call
sub
shll
pop
mov
inc
jmp
fwait
repnz
out
add
addl
into
mov
pop
mov
pop
loope
in
sarl
lcall
push
fdivrs
mov
sbb
push
lods
arpl
out
push
mov
add
shr
dec
xor
psllw
xor
dec
pushf
jae
aaa
shll
inc
out
dec
push
enter
jns
or
push
daa
inc
loop
std
pop
mov
pop
int
push
push
lea
mov
mov
mov
push
and
push
enter
mov
jno
clc
aas
rorl
sub
iret
mov
mov
shll
cld
dec
ljmp
je
stos
xor
or
mov
mov
xchg
addr16
jnp
nop
cmp
sbb
js
cmp
jo
push
cltd
mov
push
jno
push
leave
push
sbb
sub
sbb
mov
mov
fcoms
dec
addr16
mov
mov
outsb
loop
in
es
dec
les
sub
sbb
mov
jle
scas
pop
add
inc
ss
push
mov
outsb
xor
jmp
iret
jns
popf
dec
jns
adc
mov
fldl
int3
jmp
cltd
dec
inc
mov
dec
add
lds
nop
xor
les
inc
ror
mov
imul
mov
sub
loop
and
fidivrs
cli
mov
sub
in
lret
fwait
test
sbb
inc
xchg
lcall
xchg
add
cwtl
inc
sbb
sub
aas
int
out
imul
divl
cli
enter
aaa
test
sar
int
sahf
popf
aad
and
push
ret
and
mov
pusha
into
sbb
cmp
idivb
jecxz
mov
inc
sbb
xor
push
or
mov
dec
ret
stos
stos
je
popa
cmpsb
sub
je
pusha
push
adc
add
lods
push
ss
in
sbb
mov
xchg
sub
mov
inc
jecxz
mov
mov
xor
xchg
call
loop
xchg
push
and
lret
jmp
or
dec
clc
lods
jo
adc
xor
fwait
or
xorb
mov
cmp
cmp
pop
push
dec
mov
sbb
mov
mov
out
pop
mov
insl
mov
sub
lds
cwtl
popf
es
mov
sub
mov
cmp
pushf
shr
fistl
or
lods
aam
jmp
and
push
inc
push
push
inc
inc
fiadds
jae
lock
xor
pop
das
dec
mov
sahf
inc
inc
xor
arpl
push
lcall
xchg
mov
imul
stos
inc
mov
inc
dec
push
imul
sub
out
pop
cmp
xor
xor
outsl
cmpsb
into
je
push
inc
loope
jbe
fmull
les
aam
dec
fs
loope
dec
push
inc
jne
outsb
sub
mov
adc
scas
xchg
cmc
inc
fwait
cmpl
pop
or
jo
pop
call
mov
cmpsb
sub
test
jbe
sub
int
cmp
pop
xlat
stos
mov
dec
xor
sbb
mov
mov
addr16
and
dec
bound
push
jmp
pop
or
lods
cld
pop
ja
inc
jg
scas
insl
int
sub
rcrl
mov
mov
in
scas
pop
pop
mov
data16
jno
out
data16
add
dec
or
pushf
jl
cmpsl
daa
dec
jg
in
sahf
cli
fwait
repz
lock
sbb
pop
add
jmp
fstpl
adc
mov
ss
adc
dec
cmc
test
add
lret
adc
mov
cmp
ret
out
push
jns
or
mov
fucomip
adc
fistl
pushf
fiaddl
sub
pop
or
fidivl
fwait
iret
dec
adc
xor
es
jmp
lret
movsl
cmp
inc
mov
pusha
mov
mov
xor
shll
out
fbld
insl
cmp
movsb
xchg
jecxz
bound
ljmp
dec
iret
push
movsl
ret
sbb
cmp
mov
xchg
fisttps
cli
das
int
ss
inc
in
inc
sti
add
adc
mov
test
idivb
scas
cmp
dec
pop
outsl
gs
into
scas
movb
mov
pop
pop
test
enter
je
push
xor
cltd
cmpl
inc
dec
movsb
xor
mov
lock
orl
xchg
pop
jl
sbb
stos
stos
xchg
addb
leave
and
jns
sub
jbe
or
test
adc
imul
rcrl
jae
xor
ss
into
mov
xor
sbb
pop
loope
lds
cmp
sahf
pop
cmp
lds
ds
testb
mov
xor
and
data16
pop
push
cltd
mov
das
ds
xor
clc
std
aad
imul
les
lods
pop
mov
push
cmp
pop
inc
dec
pop
into
scas
aaa
or
mov
mov
and
pop
lcall
hlt
outsb
or
out
add
dec
mov
imul
sbb
lcall
out
loop
mov
rorb
add
mov
mov
sbb
mov
cli
scas
rorl
or
pop
je
out
pop
js
mov
lret
repz
mov
add
ljmp
int3
dec
sbb
dec
pop
xchg
in
pop
ucomiss
out
add
jecxz
fisttps
fiaddl
in
jo
mov
xchg
lcall
roll
lods
push
fs
sbb
push
imul
jne
add
test
pop
or
iret
and
xlat
jno
push
fsubl
loop
pop
add
mov
nop
mov
call
add
adc
or
cmp
cmp
cltd
sti
xlat
or
xchg
lcall
mov
lods
arpl
sub
jl
jge
testl
adc
in
pop
ljmp
mov
outsb
sub
cmc
pop
fs
pop
mov
mov
or
and
mov
ljmp
dec
mov
fwait
xorb
mov
outsb
jbe
lock
pushl
cmpl
push
leave
cmpsb
loopne
lret
inc
adc
mov
iret
or
in
xchg
dec
shll
fsubl
fs
jns
outsb
test
stos
dec
popf
iret
out
jae
jge
push
add
push
xchg
ss
push
mov
in
repz
insl
push
push
aas
push
aas
ljmp
outsl
dec
inc
jnp
flds
data16
mov
dec
add
jmp
aad
cwtl
aas
mov
andl
icebp
sbb
ficoms
fisttpll
add
es
fsubs
inc
shll
jp
jno
sbb
xchg
add
int
loope,pn
jg
pushf
pusha
xlat
add
imul
add
bound
vmovntps
jo
roll
out
jg
xchg
and
dec
gs
xchg
mov
pop
rolb
sub
lea
inc
xchg
out
mov
cmpsl
cmpsb
mov
test
pop
push
out
or
out
outsl
and
xor
xchg
dec
scas
push
dec
jg
inc
call
pop
mov
adc
or
or
lods
out
or
ja
cmp
hlt
es
adc
pop
cwtl
lret
mov
push
or
fs
pusha
js
negb
jge
sarb
mov
dec
insb
faddl
add
mov
fnstenv
in
pusha
cs
or
stc
clc
xchg
mov
dec
lock
mov
or
xchg
fimull
sub
mov
sbb
jp
mov
inc
data16
pop
cmp
data16
add
push
xchg
jg
jge
nop
mov
std
pop
xchg
jl
sub
mov
xchg
xor
test
into
es
aas
not
inc
dec
fwait
sbb
adc
push
in
push
push
outsl
sbb
xchg
and
jecxz
cmp
hlt
mov
dec
mov
pushf
jnp
imul
int3
dec
fdivrl
or
sbb
insb
jmp
fisttpl
cmp
pushf
jnp
imul
int3
dec
fdivrl
or
sbb
insb
jmp
fisttpl
cmp
pushf
sti
in
imul
int3
lret
fdivrl
or
sbb
insb
jmp
fisttpl
cmp
pushf
jnp
imul
int3
dec
sbb
sub
xchg
xor
imul
mov
sub
mov
cmpsb
push
aaa
rclb
add
add
add
pop
or
push
pop
add
add
mov
xor
inc
add
add
add
pop
add
add
mov
add
add
add
push
add
add
push
inc
add
add
add
add
add
add
add
add
xor
add
cwtl
add
add
push
add
add
add
mov
add
cmp
fildl
mov
insb
add
add
xchg
add
dec
add
add
add
add
add
add
add
add
add
add
and
mov
mov
mov
add
add
add
add
add
add
sub
add
add
add
test
lcall
add
add
add
add
add
add
add
add
add
or
sub
test
mov
add
add
add
add
mov
ltr
dec
add
add
add
inc
add
add
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
add
ret
add
add
data16
add
add
add
add
add
add
cmp
add
add
popl
xchg
add
add
add
add
add
add
add
add
add
add
add
jns
loopne
cmp
add
add
add
add
add
add
add
add
add
add
test
xchg
cmp
add
add
add
add
add
jo
roll
sub
add
add
add
inc
add
and
add
add
add
pop
add
add
jne
pusha
add
add
add
add
inc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
dec
add
add
add
test
or
sub
dec
add
filds
cmp
add
jge
add
xchg
add
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
roll
mov
add
xchg
add
add
add
add
add
cmp
mov
add
add
add
jns
filds
push
add
pop
add
add
add
mov
add
add
add
add
add
add
jne
cmp
add
cwtl
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
jmp
add
stos
add
add
add
add
add
jle
pop
cli
aad
int
imul
add
sahf
dec
inc
cmp
pop
jl
push
imul
leave
fwait
pop
dec
xor
pusha
or
or
ffree
mov
movsb
push
pop
push
cmp
push
sub
popf
test
fidivs
scas
fstl
fcoms
sbb
mov
stos
fs
jnp
push
sub
jmp
lret
sbb
andl
mov
sub
xchg
push
sub
movsl
fwait
dec
jbe
bound
int
xchg
fists
mov
push
pop
push
mov
mov
arpl
js
daa
loopne
inc
lcall
loope
insb
sbb
mov
push
mov
jb
push
and
mov
arpl
out
or
sbbl
push
xchg
sub
jle
pushf
scas
add
setns
lds
rcrl
test
lods
scas
xchg
mov
cmpsb
rcll
rolb
push
mov
pop
aam
dec
xlat
lret
push
incl
mov
dec
shlb
orb
xacquire
pop
mov
fs
jo
adc
je
in
sbb
adc
fwait
inc
dec
hlt
xchg
test
pushf
into
dec
inc
lods
fisttpl
shrb
scas
lods
adcl
leave
push
in
shl
adc
outsl
sub
or
in
cmp
cld
rcrl
adc
stc
rorl
ret
fwait
inc
ror
pop
add
jbe
dec
lcall
out
fwait
jo
ss
or
fimull
rclb
cmp
push
xor
faddl
mov
pop
aad
jno
mov
cs
mov
xchg
mov
pop
jno
sbb
jge
stos
push
pusha
cmc
add
or
in
mov
sbb
call
cmp
xor
in
push
sti
aas
pop
out
jno
or
xor
fcomip
xor
mov
in
dec
dec
inc
out
lea
mov
rorb
pop
sbb
out
or
loopne
repz
sbb
pusha
jp
imul
push
dec
mov
lods
fisttpl
fisttpl
lods
jge
mov
lods
push
int
mov
scas
xchg
stc
sbb
ficomps
mov
or
fidivrl
or
in
test
mov
sbbl
push
or
sbb
ret
and
xor
add
jle
out
xchg
jae
out
push
or
popf
jns
lds
sti
pop
mov
push
add
xchg
pop
sbb
mov
adc
push
movsb
fldenv
aas
mov
pop
into
mov
mov
xor
stos
cmp
loope
sbb
pop
sahf
call
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
