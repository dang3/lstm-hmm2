call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fistpl
lret
or
cmp
sub
adc
mov
imul
cli
sub
fistpl
lret
or
cmp
sub
jp
push
pop
xchg
dec
mov
imul
cli
sub
fildl
lret
adc
and
xor
bound
test
sbb
inc
test
pop
orb
fmull
xchg
inc
pusha
jno
insb
test
roll
xor
add
push
jp
sub
xchg
out
je
ljmp
insl
or
and
mov
jne
rcrl
jno
hlt
aaa
in
pop
mov
out
push
sbb
jae
cli
sub
cmp
in
jns
pop
je
loop
stos
out
stos
jp
je
inc
xchg
daa
dec
out
dec
ret
add
dec
cmc
jle
push
pop
fs
pop
inc
jne
inc
loopne
dec
fmuls
outsl
out
xor
ret
mov
add
pop
jnp
cmp
push
loopne
inc
add
repnz
sub
clc
sub
sbb
jmp
fwait
pop
mov
jp
jae
lcall
sbb
or
cmp
sub
mov
pop
lods
dec
pop
in
aam
das
cmc
mov
mov
dec
enter
xchg
dec
stos
inc
pop
rolb
out
pop
sub
sub
push
fildll
in
stos
outsb
lret
inc
sahf
mov
pop
mov
imul
mov
imul
cli
sub
fistpl
lret
or
cmp
sub
jp
push
lcall
sbb
or
cmp
sub
fistpl
stos
sbb
xchg
sub
jns
jmp
xor
call
mov
cmp
pop
mov
inc
imul
lcall
jg
xor
cwtl
sub
jno
ds
push
insb
push
add
cmp
enter
aas
mov
inc
imul
adc
test
mov
xor
inc
leave
mov
lahf
enter
cmp
int3
sbb
aam
sbb
xchg
scas
adc
ss
imul
cs
aas
jecxz
in
cmp
cmp
aas
cltd
addl
xlat
aas
cmpsl
cmp
cmp
adc
lods
pop
dec
adc
call
lock
int
sahf
outsb
test
divl
or
pop
pop
jbe
mov
adc
inc
scas
sub
call
ja
xor
ss
add
mov
sbb
inc
or
shl
mov
pop
mov
loope
sbb
or
ret
loopne
jne
inc
lahf
sbb
daa
push
dec
test
sbb
pop
jno
pop
jg
mov
sub
xor
lds
pop
cmp
push
and
and
lret
mov
sbb
pop
lcall
js,pn
adc
mov
and
std
xor
dec
sbb
in
push
in
adc
mov
stc
dec
into
jle
mov
mov
lds
jecxz
bound
pop
enter
ror
mov
adc
fistl
sbb
fcmovb
pop
inc
or
xor
daa
xor
sub
pop
jb
mov
mov
pop
jmp
xor
or
loopne
inc
or
fwait
dec
pxor
or
scas
dec
repnz
jo
imul
lahf
cmp
into
les
in
sub
push
clc
inc
jg
mov
and
dec
call
leave
out
lds
popf
fnstenv
push
jmp
push
out
cmp
mov
aaa
dec
sub
push
xor
mov
lret
in
pushf
pop
jno
pop
and
mov
test
jmp
hlt
push
stos
icebp
addb
rorb
cwtl
and
idivb
sarl
xchg
inc
pop
sahf
cli
les
jae
adc
loope
dec
sub
mov
jns
cmp
fs
lods
ret
xchg
jle
xlat
or
sub
push
jle
test
data16
sub
lods
adc
inc
into
dec
mov
repz
mov
in
cmp
adc
mov
mov
adc
jle
cmp
insl
sub
mov
jecxz
hlt
mov
mov
xchg
mov
stc
add
jno
gs
sub
jl
ds
out
in
or
cwtl
fistpll
inc
in
jae
arpl
cvttps2pi
adc
xor
add
xchg
jb
dec
lret
xor
sub
je
mov
test
cwtl
jnp
adc
pop
adc
mov
jmp
jno
push
jl
out
jo
stc
jbe
fistpll
fisubl
rcl
scas
jb
inc
idivb
sbb
dec
sub
lods
je
pop
ret
imul
mov
sbb
lea
push
push
pop
imul
sarl
inc
mov
scas
xchg
jmp
adc
sub
mov
jp
imul
or
cmp
es
push
sbb
cmp
jno
pop
sbb
loopne
pop
inc
ret
xchg
outsb
imulb
lea
push
dec
movsl
jne
or
dec
loopne
sub
fiaddl
pop
js
jne
in
jbe
sub
adc
push
insl
pop
test
and
cmp
loop
cmc
fisubrs
sar
dec
mov
sbb
popa
popf
jge
icebp
out
jno
in
inc
inc
sub
in
sbb
xchg
xchg
out
add
rorb
jg
test
sbb
mov
cmp
icebp
adc
ret
or
xor
std
jl
jle
push
or
add
xchg
lcall
mov
inc
popa
stos
xchg
inc
cmc
and
jecxz
jp,pn
out
mov
loop
push
cmpsl
les
xchg
xor
and
adc
test
push
pop
xchg
outsb
pop
jg
mov
push
mov
lods
pop
pop
mov
into
stc
cli
mov
push
movsl
lcall
fsubrs
pop
mov
or
lret
sbb
xrelease
inc
test
call
int3
mov
dec
xchg
test
sbb
mov
add
hlt
or
fs
sbb
mov
push
sub
jmp
adc
push
int3
sub
pop
mov
push
not
inc
sbb
mov
push
lret
and
test
lea
mov
ljmp
add
and
xchg
push
push
cmpsl
cmp
dec
inc
add
mov
iret
bound
sarl
sub
int3
mov
inc
cmp
cltd
mov
hlt
dec
dec
sbb
push
enter
xor
enter
push
jno
outsb
mov
push
inc
mov
int3
movsb
rcll
cwtl
fsts
mov
pushf
inc
ljmp
dec
xchg
data16
scas
fs
cmpsl
pop
mov
popf
fidivs
mov
add
idivb
inc
in
ret
adc
lods
and
add
or
adc
adc
xchg
faddp
mov
mov
sbb
test
pushf
aas
int
data16
jo
je
call
bound
inc
orb
shl
sbb
jl
inc
dec
dec
inc
stos
loop
in
and
ret
aad
in
loopne
cmp
lds
test
test
adc
pop
add
xchg
add
inc
jo
ficoml
push
in
push
pop
dec
rcl
inc
dec
add
ret
jnp
bsr
leave
ret
arpl
pop
out
pop
jg
cmp
cs
adc
roll
repz
je
add
into
sbb
es
xor
jge
cmp
fidivrl
popf
das
cmp
pop
pop
int3
mov
imul
in
out
and
dec
scas
pop
je
fsubrl
sbb
outsb
sub
lock
in
shl
mov
rclb
jbe
mov
xor
dec
or
test
inc
cmp
mov
jle
iret
arpl
mov
fwait
stos
insl
sarb
xchg
adc
rorl
pop
or
out
dec
jb
and
mov
es
stos
pop
lahf
data16
lock
sub
loop
push
out
pop
lcall
cltd
or
inc
xchg
pop
lret
xor
jae
lods
je
movsb
fnstenv
jo
fisttps
mov
sub
add
fstl
cs
addr16
adc
adc
or
cmp
js
insl
or
xchg
lret
pop
data16
pop
mov
cmp
cltd
push
enter
push
mov
test
gs
adc
data16
arpl
sub
push
sbb
out
fadds
mov
pop
xchg
push
and
pop
jg
lods
int
sbb
loop
adc
scas
push
dec
jle
push
lods
icebp
sub
inc
cmp
adc
pop
lock
pop
sub
adc
jnp
xchg
pop
repnz
sbb
sbb
addb
inc
jns
int3
fmull
fstpt
mov
xlat
pop
ds
mov
mov
jnp
fs
pop
push
cmpsl
cmp
aaa
cs
mov
jb
mov
jno
stos
jbe
mov
cmp
lret
push
add
xor
pop
jo
add
inc
mov
into
mov
clc
jbe
cmp
mov
imul
stc
fcoms
xchg
or
adc
pop
stos
insl
into
mov
fsubrs
imul
repnz
das
stos
xchg
out
sbb
out
mov
and
xchg
cmp
rol
ds
cld
fidivrl
pusha
out
mov
outsl
shlb
jne
roll
xor
stc
pop
mov
jno
mov
jle
pop
dec
pop
push
mov
adc
inc
or
jg
outsb
mov
in
cs
mov
sbb
mov
test
pop
mov
mov
sbb
into
dec
dec
adc
in
xor
loope
xor
xchg
add
test
mov
add
adc
out
add
jle
mov
in
mov
mov
popf
insb
lods
jnp
jge
adc
cmpsb
sbb
mov
or
xor
adc
mov
jle
sub
aam
div
cli
lds
dec
add
in
jae
lcall
cld
mov
sbb
push
xor
cmp
pop
enter
cli
sbb
outsb
jb
pop
aad
xchg
jb
xchg
movsl
imul
lods
stc
dec
loopne
js
sbb
push
lods
push
xlat
push
jle
pop
fcmovb
pusha
adc
fidivrl
adc
xchg
addl
ret
fstps
push
push
daa
jb
mov
adc
sti
and
cld
loopne
xor
hlt
mov
xorl
pop
aas
add
mov
fisubrs
out
inc
add
mov
testb
cmc
mov
scas
mov
jbe
dec
inc
jmp
cmpsl
sbb
pop
xor
addr16
add
pop
pop
dec
lock
push
dec
lcall
mov
outsb
cs
sbb
insb
jl
scas
ds
ficomps
adc
pop
div
pop
or
jbe
push
sti
mov
sub
repnz
cmp
imul
mov
mov
jle
mov
xchg
inc
cwtl
insl
dec
out
or
lods
or
sbb
fstpl
xchg
and
not
lods
and
jbe
sub
adc
popf
adcb
lods
mov
scas
insl
out
stc
inc
enter
pop
loop
subl
xchg
or
adc
cld
lahf
and
mov
adc
dec
outsl
mov
rcll
jmp
in
pop
sub
jle
aad
andl
ficoms
or
xor
inc
or
sbb
dec
mov
out
mov
push
data16
add
shll
mov
mov
jns
dec
inc
cs
jnp
popa
jp
loop
inc
iret
loope
jae
iret
ret
push
pop
cmp
test
das
push
xchg
inc
mov
fs
sbb
push
fmul
sbb
sub
mov
lcall
mov
xchg
push
mov
in
out
outsl
mov
mov
inc
inc
out
ds
cmpsl
stc
bound
dec
mov
or
xchg
es
inc
fsubr
clc
fisttps
in
dec
and
cmp
xor
cltd
push
jg
xor
dec
and
enter
lds
rclb
ds
imul
popl
mov
incl
sbb
pusha
sub
sbb
jecxz
enterw
in
and
int3
mov
fnsave
xor
mov
mov
pop
jae
ffree
jecxz
in
fistps
cmp
xor
test
stos
push
iretw
and
jno
lods
cli
jnp
fdivs
aam
imul
sub
inc
pop
push
jbe
jae
and
aas
adcb
imul
lods
fwait
mov
sub
scas
in
fcomip
xchg
data16
neg
pop
dec
pop
cmc
add
adc
add
rcrl
shrb
sbbl
mov
fldt
and
popa
push
fs
mov
sarl
loopne
or
jno
outsl
cmp
out
mov
jp
adc
fbld
cmp
inc
xor
idivb
loop
repz
push
jp
outsl
gs
ret
pop
add
dec
popa
lret
fimull
mov
xchg
dec
or
or
adc
xchg
dec
jne
into
fldt
movsl
mov
jge
pop
pushf
dec
sahf
adc
push
sbb
fidivrl
or
rcll
lods
inc
bound
adc
and
clc
mov
mov
cld
sti
mov
ja
jmp
insl
mov
stos
outsl
fbstp
cmp
xchg
pop
rorl
hlt
inc
ret
inc
add
dec
mov
daa
insb
xor
test
or
sarl
adc
mov
cmc
ljmp
jnp
insl
sarb
shrb
das
idivb
mov
push
rcrl
pusha
mov
mov
incl
mov
shll
add
mov
fnstcw
adc
add
cltd
cmpsl
ss
mov
movsl
jge
fs
sub
popa
enter
dec
mov
xor
fucomp
popf
imul
dec
out
stc
aad
cmp
jae
enter
rcrl
mov
inc
ds
xchg
stos
cmpsl
cmc
pop
inc
cs
xchg
jno
mov
adc
xchg
lahf
inc
call
dec
divl
or
loopne
rcrl
bnd
dec
fs
cmpsl
jmp
cwtl
sbb
pop
call
test
xor
add
je
ja
jmp
or
mov
stc
jno
adc
cld
and
je
and
mov
pusha
mov
push
ss
lods
dec
adc
sti
cld
fistpl
jno
rcr
push
cmc
jne
lret
test
xchg
cmc
stos
jmp
sbb
adc
push
js
movsb
jle
add
mov
rcr
mov
dec
and
fwait
std
jg
sarb
add
arpl
stos
sbb
lret
push
push
pop
popa
sbb
ss
mov
jg
in
jbe
into
psubusb
mov
les
inc
mov
gs
pop
mov
pop
ret
fistps
rcrb
xor
mov
test
jg
popa
jl
mov
add
mov
cmp
bound
jo
data16
sbb
push
sbb
int3
imul
and
xchg
stos
lods
xorb
lods
jnp
cmp
shrb
or
jmp
mov
pushf
ret
mov
imul
sub
xchg
push
jno
jp
mov
fmul
movsl
mov
adc
std
or
mov
popf
cmp
inc
data16
push
aam
and
cmp
mov
loopne
test
push
outsl
ljmp
nop
jae
loope
mov
or
lret
sbb
repnz
fcomip
or
in
push
loope
in
pop
in
push
cltd
sub
icebp
ds
lods
xor
lock
cwtl
out
jecxz
dec
push
es
push
or
jg
aam
lods
adc
cmp
mov
mov
movsl
ror
pop
add
fidivl
outsb
adc
and
and
add
enter
and
adc
rolb
or
les
adc
ret
sub
or
jnp
push
mov
cli
cs
subb
mov
pop
js
mov
dec
cmp
hlt
mov
popf
shlb
insl
mov
fnstenv
lahf
mov
adc
int3
cmpsb
cmp
fldln2
cmpsl
shlb
cmc
ds
and
push
cli
ljmp
sbb
scas
pop
loop
mov
outsl
sti
xchg
movsl
ljmp
dec
sbb
adc
loopne
sar
add
mov
or
and
cli
jno
into
fcomi
adc
stos
aas
jb
aam
dec
xchg
pusha
push
pop
push
mov
dec
outsb
and
add
imul
daa
jns
daa
lods
mov
testb
loopne
jb
and
pop
cmp
pushl
mov
add
das
fsubrl
add
ja
ret
inc
shl
dec
pusha
out
xor
repz
arpl
xor
enter
mov
negb
int3
aas
aam
pop
bound
sbb
int
pinsrw
dec
data16
and
int3
repnz
test
imul
push
mov
ss
aad
xchg
xchg
std
repz
jmp
pushf
pop
inc
popa
imul
inc
ss
std
xor
cmp
scas
mov
iret
cmp
mull
aas
mul
stos
push
pop
mov
mov
stos
push
lock
inc
shlb
rorl
in
insb
inc
stos
je
or
lret
xlat
sbb
sarl
cmp
aas
jae
ret
xchg
test
pop
jg
je
jmp
repnz
pop
xchg
mov
inc
mov
or
and
insb
sub
xchg
jg
cmp
sbb
mov
add
pusha
add
sub
int3
ds
push
xchg
test
inc
aam
lahf
div
mov
push
icebp
sbb
filds
and
btc
out
mov
adc
mov
mov
hlt
aad
dec
jmp
iret
add
fsubp
jnp
and
mov
or
mov
fwait
rolb
or
cmp
mov
mov
int3
fnstsw
xchg
jl
adc
dec
stc
adc
jge
adc
add
inc
jmp
add
add
pushl
stos
jmp
es
or
daa
push
leave
sbb
popf
mov
popa
out
ss
xchg
or
out
sub
xchg
and
mov
out
or
addr16
mov
mov
push
fldcw
test
je
sbbl
insl
xor
or
inc
in
mov
adc
pop
orl
hlt
xchg
ljmp
lods
pop
test
arpl
ljmp
in
xchg
std
fmull
loop
push
out
int3
xor
xor
and
out
incl
lods
sbbl
mov
add
push
lods
jg
jecxz
xor
pop
adc
scas
lock
push
pop
ret
ret
lahf
jno
pop
imul
pop
fcomps
fsts
dec
ja
push
in
sub
dec
mov
je
lea
dec
lea
mov
aam
dec
sub
inc
push
jl
mov
dec
inc
xchg
ds
cltd
rorl
lcall
addr16
or
or
mov
loop
xchg
test
jmp
loop
jnp
inc
jg
jbe
mov
pushf
mov
testb
cwtl
lds
xchg
dec
pop
loop
scas
sarb
xchg
dec
pusha
cmp
aad
mov
ljmp
xchg
stos
pop
das
adc
outsb
out
push
cmp
sbb
fisttps
stos
divb
add
scas
cmpl
mov
adc
push
bound
mov
xchg
mov
xchg
cmpsl
scas
dec
scas
out
test
jnp
movsl
adcl
pop
pop
push
add
aad
dec
and
xor
ret
mov
push
shlb
pop
xor
add
test
cmp
fcmovnbe
enter
push
popf
fsts
stc
int
scas
jb
mov
mov
mov
mov
subb
dec
jl
pop
lahf
jo
or
adc
pop
roll
loopne
or
lret
in
ret
cmpsb
add
lods
popa
and
call
outsb
fimuls
mov
jp
outsl
ret
rcrl
jge
iret
loope
ret
ss
mov
out
imul
mov
clc
pop
pop
or
jle
loopne
repz
out
ret
stos
inc
xchg
cld
lds
mull
dec
jg
in
push
jge
pushf
insl
xor
mov
and
xor
out
inc
pop
jbe
xor
jae
pop
and
sub
jno
add
mov
arpl
sub
jb
pop
dec
cwtl
xor
jmp
lret
mov
add
mov
outsb
out
mov
add
xchg
movsl
fdiv
shrb
dec
pop
fidivl
ret
mov
dec
gs
jle
or
push
inc
xchg
fildll
inc
xchg
xlat
test
jp
sbb
in
jg
dec
sbb
inc
pop
imul
subl
into
rcr
xor
iret
mov
pop
and
fimuls
fs
jp
gs
scas
fs
pusha
push
cwtl
into
fldt
lea
test
sbb
push
mov
mov
push
mov
ds
mov
push
mov
inc
push
mov
inc
push
test
adc
mov
loop
sbb
adc
fsubrp
fildll
dec
push
push
sti
adc
adc
lock
xlat
add
inc
popf
repnz
mov
mov
aam
mov
pop
nop
rclb
push
nop
mov
inc
pushf
sti
lods
clc
repnz
cmp
xchg
pop
mov
jle
mov
stos
enter
sbb
add
cmp
mov
xchg
movsl
ljmp
es
dec
adc
adcb
fsubr
cmp
push
lret
mov
mov
mov
movsl
pop
adc
aad
cmp
in
ficoml
jmp
sbb
notb
cmp
xor
cmpsb
repnz
dec
rcr
icebp
jmp
clc
bound
mov
jb
dec
pop
fldt
dec
mov
cmp
in
pop
mov
jmp
ja
cmpsb
ss
sarl
lods
mov
sbb
xlat
inc
push
popa
les
popf
or
cmp
sub
jp
push
lcall
sbb
or
cmp
sub
fistpl
lret
or
cmp
sub
jp
push
lcall
sbb
or
cmp
sub
fistpl
lret
or
cmp
sub
jp
push
lcall
sbb
or
cmp
sub
fistpl
lret
push
sti
ds
fwait
pop
mov
jp
stos
movsb
lcall
insb
push
xorl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
subl
lcall
dec
xchg
lock
or
sbb
push
jnp
pop
pusha
pop
in
nop
mov
shr
cli
loopne
lock
inc
or
sbb
jp
dec
jo
cmp
push
cli
dec
lock
sbb
push
je
sub
es
sub
out
out
lret
fcos
les
adc
inc
test
mov
pcmpgtb
insb
stos
and
xor
ja
inc
jge
idivb
lds
jp
and
or
aad
aad
cmpsb
pop
or
ret
sbb
adc
xor
xchg
adc
xchg
pop
daa
clc
scas
inc
lahf
pop
int3
aas
jmp
cli
pop
ret
add
adc
movsb
int3
into
lahf
mov
aas
jo
jg
popf
inc
xorb
cmp
pop
adc
and
xchg
das
and
jne
add
and
repz
xchg
aas
movsl
cmp
inc
lds
sub
test
jnp
sub
jae
fldt
mov
and
test
loopne
push
fcmovb
sub
sbb
push
jp
dec
jo
jmp
lret
enter
mov
scas
add
and
push
push
push
ds
int
cmc
rol
sar
test
popf
movsl
hlt
addr16
inc
dec
and
dec
cmp
aas
in
or
xor
in
jmp
jmp
xchg
fcom
cli
loopne
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
lcall
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
pop
nopl
jns
popf
push
imul
sbb
fisttpll
mov
mov
cmpsb
aaa
dec
in
imul
xchg
in
arpl
sbb
mov
and
mov
push
cltd
cmp
push
lahf
xlat
aas
aam
divb
push
into
fst
push
sub
push
enter
mov
push
enter
cmp
imul
sbb
jp
leave
rolb
cmp
dec
cmp
lea
push
loope
lods
icebp
pop
and
mov
lret
stos
and
pop
or
das
aam
add
cmp
out
lods
movsl
mov
add
adc
inc
je
lret
out
pop
hlt
mov
cmc
sti
push
mov
sub
mov
pop
out
enter
incb
fnstenv
dec
push
fs
sarw
cmpsl
mov
imul
push
adc
mov
dec
sub
mov
sbb
test
pusha
popf
jno
lock
fs
adc
xchg
and
shld
jle
pusha
sub
pop
frstor
xchg
or
dec
inc
or
pop
test
pop
leave
adc
clc
sarl
mov
adc
daa
and
test
sahf
je
outsb
xchg
adc
lods
idivb
jae
aad
cli
scas
cmc
jne
add
sti
inc
cmc
push
outsl
sbb
in
jmp
push
and
jp
inc
lods
push
mov
loopne
push
adc
jb
mov
es
push
aad
repz
sub
dec
call
lret
jp
aad
mov
dec
iret
mov
aaa
insl
rcll
fimuls
mov
sbb
out
push
add
sbb
daa
fs
das
add
jge
in
rcll
jmp
xchg
addl
pop
shrl
inc
addr16
lods
sub
sub
out
fwait
jnp
push
data16
loopne
xchg
rcl
negl
inc
lock
fwait
iret
xlat
dec
cmp
mov
sar
pop
iret
inc
sub
fidivrs
fcmovb
xor
inc
inc
out
jb
sbb
fsubl
jle
pusha
mov
xor
and
scas
sbb
push
ret
addl
push
adc
pop
xor
and
pop
scas
test
pop
jb
jnp
lods
sbb
sbb
test
xchg
lds
xchg
add
push
testl
lret
mov
sbb
aam
jo
or
mov
xchg
mov
stc
movsb
sti
sbbb
inc
test
insl
mov
jne
pop
es
sub
ret
aas
mov
sub
adcb
mov
test
adc
sbb
inc
adc
mov
and
daa
fwait
jl
nop
mov
mov
and
jl
je
jp
lds
popl
mov
fidivrs
cmpl
inc
insl
movsb
int
and
mov
lret
in
imull
pop
lret
sbb
jno
push
fs
mov
adc
mov
aaa
call
ficompl
and
scas
xor
add
aam
movsl
dec
jne
mov
pop
mov
inc
mov
pop
les
fimull
fs
mov
jg
pop
pop
sti
call
sbb
inc
mov
cmp
dec
fs
add
leave
sbb
stos
out
popa
dec
xor
loopne
icebp
insl
mov
sub
lret
mov
mov
inc
sbb
js
xor
negl
xchg
aaa
add
ljmp
ret
cmp
cltd
lcall
sub
xchg
dec
push
cmp
sub
shlb
and
not
cld
leave
test
out
add
push
mul
lds
sahf
mov
and
sbb
sbb
cmpsl
lock
dec
xchg
dec
xchg
adc
push
push
pop
pop
adc
lock
mov
jmp
dec
in
dec
mov
fcmove
aad
sub
sbb
lock
and
fisubs
xchg
mov
clc
sti
push
aad
jo
dec
fldl
mov
pushf
movsl
pusha
lds
mov
pushf
sub
sbb
jnp
mov
push
xor
mov
pushf
xchg
aad
lret
mov
lock
jno
dec
cmc
shrb
add
ror
adc
jns
pop
mov
push
push
int
mov
dec
add
dec
enter
or
mov
jl
push
bound
repz
lods
cmp
das
sbb
add
xlat
push
ja
imul
lret
adc
mov
mov
pop
imul
dec
sbb
xchg
mov
xchg
bound
xor
mov
int
lds
mov
adc
xor
les
jnp
add
inc
out
push
ficoml
and
cs
outsl
xor
fsubrs
lock
mov
sub
push
pop
mov
lea
aad
cmp
or
jmp
clc
pop
pop
xchg
iret
enter
cmc
ljmp
scas
and
xor
jo
mov
imul
enter
and
mov
xor
stos
xchg
inc
jge
dec
pop
push
sub
bound
xchg
jle
nop
loopne
xchg
inc
inc
movsl
fildll
sar
cltd
or
fwait
pop
cmp
xchg
dec
xchg
rcl
fsubl
out
xchg
xchg
test
dec
pusha
setae
cmp
movsb
testb
pop
xorl
and
out
xlat
and
push
mov
repnz
loope
clc
mov
xor
pop
or
pop
cmp
inc
cwtl
jg
adc
lods
xchg
jno
sub
xorb
xchg
cmp
outsb
mov
mov
and
mov
jp
pop
ljmp
jbe
ss
mov
cmpsb
push
cmpb
lret
xchg
push
lea
dec
jg
loopne
repz
mov
mov
imul
adc
mov
imul
jbe
pusha
dec
xchg
sbb
pop
shr
xchg
xchg
adc
fs
pop
repnz
inc
xchg
popl
add
cmpsl
mov
cmpsb
xor
jecxz
icebp
mov
inc
push
insb
lods
test
dec
mov
sub
vpsrlw
lret
stos
aaa
xlat
xchg
add
lock
jecxz
dec
add
cli
mov
insl
sahf
mov
xchg
mov
test
xchg
lea
loop
fs
mov
sub
in
sub
sbb
fwait
pop
daa
inc
test
push
lret
xchg
daa
xchg
push
shll
inc
mov
test
sub
cmpsb
or
inc
push
sbb
mov
cmp
dec
cmpsl
inc
jns
and
shll
repz
outsl
in
jle
xlat
mov
push
ret
enter
mov
dec
cmp
mov
inc
and
and
xchg
add
pop
daa
stc
in
lcall
pop
movsl
xor
int3
jb
lds
push
cld
push
ss
dec
jb
roll
fsubp
sbb
cmp
or
dec
and
jle
or
xchg
push
fwait
mov
push
outsb
std
in
lea
inc
inc
subl
lcall
std
pop
inc
incb
fsubl
add
insl
and
insl
jnp
push
jb
fistpl
sbb
mov
stc
pop
dec
leave
xchg
mov
bound
and
fmuls
mov
ljmp
jb
jbe
mov
das
stos
xorb
stc
scas
push
jo
les
sub
lods
pop
push
icebp
test
jl
notl
test
in
inc
lcall
sahf
gs
ss
jo
fdivs
out
dec
lods
xlat
insl
push
std
add
icebp
out
fidivrl
mov
cli
es
mov
push
insb
push
jne
jbe
test
test
jno
jnp
xor
mov
jnp
mov
das
pusha
shlb
pop
mov
mov
fistpl
mov
dec
xchg
mov
gs
lods
jmp
out
mov
xlat
mov
jnp
leave
add
push
jmp
fsts
and
dec
push
mov
hlt
sti
lock
cmp
imul
clc
push
popf
push
daa
int3
cli
push
mov
mov
aad
sub
and
sub
ds
out
es
jp
push
dec
daa
lds
out
pop
mov
xchg
in
mov
aas
xchg
leave
cmp
push
sbb
xor
negb
in
xchg
cmp
push
jbe
mov
push
repnz
in
fcomi
mov
loopne
je
call
fidivrs
push
pop
dec
lret
sti
xchg
out
xchg
shufps
fimuls
mov
xchg
add
mov
stos
out
test
test
pusha
bound
cmpsl
sti
sarl
lods
hlt
pop
aad
adc
push
ds
lods
push
jg
mov
ret
adc
test
xchg
es
push
add
pop
outsl
mov
mov
sbb
inc
adc
in
push
popa
sub
cld
cmpsb
sbb
or
push
shll
push
add
rclb
xor
mov
sbb
dec
jbe
xchg
jb
cmp
lods
sbb
jg
andl
sbb
dec
add
push
stos
sbb
lock
adc
es
mov
scas
ljmp
mov
loope
jnp
adc
sbb
mov
or
mov
cmp
negl
mov
xorl
inc
jecxz
push
pop
jg
lds
inc
in
ffree
outsb
int
inc
push
xchg
dec
jae
adc
push
out
hlt
fcomps
adc
and
frstor
ror
test
dec
pop
mov
outsb
cmp
push
xor
ljmp
pop
inc
dec
insb
adc
aas
pcmpeqw
out
in
sub
sbb
repz
scas
xor
dec
repnz
push
fnop
scas
test
jae
sbb
fcmovu
mov
popf
sbb
adc
sbb
out
mov
mov
ret
inc
push
mov
cmovl
insl
dec
and
cmp
cmpb
push
push
lods
movsb
stc
ret
into
and
adc
mov
sub
ljmp
bound
sarb
and
insl
lods
test
dec
sub
arpl
jl
hlt
xchg
mov
loope
push
insb
jmp
jno
mov
dec
jo
fsubl
movsb
je
push
outsb
inc
mov
jo
cmp
into
ss
xor
push
stos
add
out
add
xchg
xchg
inc
add
sub
mov
and
jns
xchg
sarl
inc
jp
mov
xchg
push
and
push
leave
mov
loop
add
mov
sets
enter
and
jge
int3
xlat
loope
popf
mov
inc
sbb
popf
mov
xor
inc
imul
push
cli
pop
inc
popf
and
mov
xchg
fstps
mov
cmp
fucomp
xor
rolb
mov
sarl
dec
cld
sbb
fldl
cmp
lcall
push
pop
shlb
add
in
xchg
pusha
repnz
in
test
xchg
push
dec
mov
sub
lock
mov
fwait
add
adc
cmpsl
shlb
or
pop
in
fmul
rcll
mov
mov
cmp
loopne
out
lds
xorb
or
stc
cld
sub
dec
inc
addl
adc
dec
out
lds
stos
lods
movsb
mov
push
stc
mov
loopne
lds
lods
imul
ds
adc
das
aam
or
jo
test
popa
aad
jns
arpl
cmc
jge
hlt
mov
mov
into
pop
enter
xchg
dec
lret
ror
rorb
mov
mov
fcomp
xchg
mov
sub
cmp
cmpsl
mov
lea
jne
mov
aas
push
push
mov
enter
pop
fsubp
cmp
or
pop
ljmp
repnz
pusha
aam
std
mov
xchg
je
aad
pop
inc
mov
sahf
jns
push
cmc
adc
dec
fldenv
test
pop
shrb
mov
and
xchg
mov
fdivrl
ds
xor
push
xchg
fdivrl
scas
or
jmp
scas
cmpsb
daa
add
mov
fnstenv
scas
mov
jg
adc
ljmp
aad
sub
addr16
repnz
pop
bound
jecxz
or
or
test
fcmovnbe
push
or
repz
push
rorl
cltd
vcvttss2si
xorl
test
mov
xlat
fidivrs
push
arpl
mov
push
mov
pop
sti
mov
add
out
xor
add
lock
adc
insb
adc
stos
mov
leave
jns
sbb
inc
test
and
pop
faddl
sub
sbb
push
push
dec
js
orl
lds
mov
xchg
scas
lcall
dec
test
bound
add
adc
push
xchg
add
loop
fdivrs
xchg
jbe
cmp
lea
jge
cmpsl
mov
push
jae
bound
clc
je
in
loop
pop
test
pop
and
out
push
add
inc
push
push
adc
scas
lock
js
mov
cwtl
and
rcrl
loope
inc
dec
adc
jns
sub
inc
mov
pop
xorl
jbe
nop
add
pop
lahf
push
push
xor
fimuls
inc
push
sbb
mov
daa
pop
rcr
sub
sbb
push
pop
cmp
shll
sbb
pop
test
mov
mov
lea
jmp
push
scas
and
or
cli
test
sarl
mov
add
out
inc
int
rorb
or
push
in
jmp
lds
xchg
push
ljmp
sbb
test
addr16
stos
mov
scas
cmp
jp
pop
xsavec
push
int3
jmp
inc
std
cmp
mov
pushf
mov
jo
push
aad
lock
ret
jo
add
mov
stos
jge
ret
inc
push
push
mov
mov
and
inc
es
dec
ror
lock
js
sbb
clc
pop
push
sub
ja
mov
inc
fwait
add
or
adc
dec
repnz
inc
insb
roll
sub
neg
popa
mov
pop
outsb
sbbl
xchg
pop
adc
ja
repnz
dec
dec
mov
inc
adc
int
outsb
jns
cltd
test
addb
push
movb
and
sar
cli
loopne
mov
pop
fdivp
cmpsl
das
cld
iret
mov
jne
clc
outsb
mov
fsubl
and
jbe
test
sub
inc
lods
xor
ret
pop
jl
movsb
movsl
and
and
les
pop
aaa
mov
stos
imul
xchg
test
jmp
xchg
xlat
arpl
pop
inc
inc
aaa
sub
mov
mov
rorl
inc
xor
xchg
lahf
fstl
daa
dec
es
out
and
mov
je
fptan
js
fsubrs
mov
push
dec
rcr
ss
add
mov
je
push
lret
sub
cmp
add
fucomp
jle
hlt
int
mov
fcomp
gs
push
mov
push
ret
clc
lods
lds
fmull
adc
mov
inc
out
jmp
shrl
jge
lcall
ds
loop
pop
xchg
push
pushw
jb
push
jb
std
dec
xor
pushf
dec
xchg
or
sbb
movsl
mov
xchg
scas
scas
push
stc
into
mov
jge
pushf
fldenv
dec
sarb
pushf
adc
test
in
rcll
or
add
adc
push
pop
jl
pop
cmp
pop
xchg
aad
adc
or
out
testb
mov
sbb
repnz
jae
pop
test
stos
inc
inc
mov
cmpsb
push
enter
adc
inc
lds
mov
test
cli
jle
daa
imul
xchg
loopne
mov
lods
aam
inc
fcmovb
jno
cli
sbb
ret
ret
dec
inc
add
jno
pop
das
cmp
jmp
loope
dec
mov
es
mov
inc
push
xor
xor
mov
adc
push
sbbb
addr16
test
and
nop
popf
inc
sub
mov
fnstsw
idivb
cmp
xchg
and
cmp
sub
jbe
in
adc
ss
sbb
inc
mov
ret
push
dec
dec
test
aas
xchg
enter
jb
cltd
mov
jl
mov
out
fdiv
leave
lcall
inc
das
pop
insl
mov
cmc
xor
or
movsl
push
fnstcw
insb
ja
or
mov
mov
lods
mov
repz
inc
inc
adc
in
push
dec
sbb
stos
rorb
mov
out
ss
mov
js
lea
sarl
adc
or
add
repz
std
add
adc
scas
lahf
dec
and
xchg
mov
push
sbb
ret
rcrb
mov
inc
lods
jns
or
dec
mov
and
out
cmpsb
les
xor
or
xchg
and
sbb
jp
sbb
repz
int
xor
ss
sbb
add
xchg
movsl
pop
inc
cltd
fnstsw
ss
fistpll
arpl
lds
popf
dec
or
sbbb
jmp
fwait
dec
pop
daa
cmp
mov
pop
push
stos
pop
or
scas
and
imul
pop
aaa
push
pop
sbb
popa
or
gs
cmp
mov
mov
xor
call
sbb
je
mov
outsl
addb
pop
jmp
rolb
jmp
popf
xchg
inc
dec
mov
pusha
sub
jmp
cmpsl
test
mov
cmpsl
jbe
out
mov
pop
bound
fdivl
mov
sub
xor
xchg
xchg
stos
mov
mov
out
aad
insl
adc
jp
cli
int3
mov
xor
arpl
cltd
sub
pop
xchg
xchg
mov
pusha
jecxz
push
cmpsb
test
shrb
mov
loopne
mov
cmp
pop
je
arpl
rolb
popa
mov
cmp
gs
mov
xor
xchg
mov
xchg
aad
mov
push
xor
push
gs
insb
lods
and
inc
ror
in
xor
cmp
sbb
loopne
js
and
cli
pop
mov
add
push
pop
mov
pop
inc
xchg
inc
pusha
mov
inc
xor
fdivs
or
sub
test
fidivrs
loope
or
inc
test
div
lock
fbld
or
shrl
ss
out
aad
pop
xchg
cmp
ds
pop
dec
testl
out
shl
pop
dec
mov
or
xchg
mov
cmpsl
imul
dec
dec
mov
sti
xchg
and
aam
sbb
or
or
xchg
push
and
negl
push
inc
test
mov
pop
xchg
or
loop
das
cmp
jg
push
aad
inc
dec
adc
mov
cltd
pop
outsl
xchg
nop
sti
sbb
push
scas
sub
dec
mov
imul
loope
repnz
push
and
leave
cs
in
adc
mov
out
sub
jl
or
jl
out
xchg
push
pop
lods
xchg
mov
mov
mov
jp
mov
inc
jmp
fiadds
xor
xor
sbb
nop
ret
cmp
push
out
xchg
in
mov
mov
mov
add
cli
pushf
shl
jb
incb
pop
inc
push
adc
pop
sbb
xchg
xor
fs
dec
mov
xchg
inc
faddp
push
aas
arpl
jns
aam
xlat
lds
cmp
or
lods
pop
jl
in
xchg
stos
repz
mov
rcl
pop
sub
mov
cmp
loope
adc
pop
shlb
test
sub
xorb
data16
mov
add
lds
les
call
aas
lds
cltd
popa
ljmp
es
stos
sbb
sub
imul
in
lahf
xchg
pusha
xlat
add
and
bound
sub
repnz
jns
in
sub
cltd
jnp
pop
mov
movsl
in
adc
cld
sti
inc
xchg
dec
es
or
sahf
out
push
xchg
xchg
add
push
cwtl
aad
and
cmpsb
mov
jae
rcrb
dec
sbbb
sub
pop
or
je
pop
cmp
ret
scas
pop
pop
icebp
and
mov
mov
pusha
or
jle
mov
inc
fcom
dec
int
push
dec
bt
into
sub
data16
popf
mov
pop
test
in
fs
outsb
out
pop
dec
push
imul
hlt
pop
pop
mov
adcl
pop
sbb
shr
cli
loopne
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
lcall
lock
sub
cmp
or
sbb
push
jp
dec
jo
subb
lcall
xor
add
adc
rorb
xor
inc
push
jp
dec
cwtl
pop
xchg
stos
int3
mov
shr
cli
loopne
jo
add
out
nop
mov
xor
loop
test
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lahf
mov
mov
lcall
sbb
sub
cmp
dec
pop
jg
outsl
js
mov
mov
call
prefetcht0
das
cmp
dec
pop
jg
outsl
js
mov
mov
call
dec
pop
add
sbb
rdtsc
push
add
sti
ror
rcr
lahf
call
adc
fucomp
aad
mul
jl
aam
pop
dec
repnz
daa
adc
xor
dec
hlt
and
hlt
loopne
bnd
cmp
pop
xchg
jle
xchg
sub
add
ja
daa
mov
sbbb
lods
pop
pop
gs
shlb
lcall
pop
sbb
scas
rcr
mov
imul
add
pop
out
lods
or
mov
bound
pusha
cld
sti
enter
xor
incb
repz
das
xlat
cmpsb
cmp
sbb
lahf
push
mov
clc
mov
push
adc
loopne
mov
shrb
arpl
or
pop
insl
rorl
mov
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
adc
mov
test
mov
lcall
sbb
dec
cmp
es
pushf
in
std
std
out
int
mov
incl
or
pop
cmp
sbb
outsl
pop
test
rcl
fisubrl
fdivr
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
js
mov
mov
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
js
mov
lock
mov
mov
lock
lods
push
fidivrl
xchg
jns
aam
fwait
add
lods
pop
insl
lret
add
sbb
insl
mov
pushf
pushf
mov
jg
imul
xor
imul
pop
lret
loop
test
mov
test
int
test
pop
cmp
les
jg
out
pop
imul
pop
cmpsb
jns
push
push
jle
cmp
clc
mov
fcoms
adc
int
int
ret
cmp
imul
mov
leave
mov
in
dec
pop
inc
xor
cmpsb
outsl
cs
sbb
cld
pop
xor
pop
sbb
ret
xor
pusha
mov
scas
les
or
inc
dec
fsubs
xor
xor
pop
and
inc
cmp
cwtl
and
xchg
aad
nop
mov
mov
and
push
jns
cmp
jle
sub
xchg
pop
rorb
les
mov
test
enter
mov
jl
leave
lods
rolb
dec
adc
inc
xchg
cmp
ret
aam
xor
mov
lods
lret
jmp
push
test
push
out
xchg
shlb
testb
int
push
fdivl
repz
lock
sub
push
inc
push
imul
fs
cltd
adc
jg
jg
aaa
xor
scas
and
jp
pop
loopne
pop
jmp
jg
adc
out
loopne
sbb
fs
jecxz
stc
roll
and
insb
push
push
cmc
imul
xor
leave
jno
xchg
mov
xor
sbb
popa
cli
outsb
sub
aad
push
and
adc
ret
adc
into
scas
add
mov
mov
leave
loop
cmp
fisttps
cli
inc
xlat
pop
call
adc
fisubrl
inc
inc
jge
loopne
insb
jl
sahf
rolb
sti
pop
mov
dec
outsb
mov
dec
and
xchg
adc
sub
pop
cmp
cli
adc
rclb
dec
sub
pop
or
mov
push
adc
loopne
pop
lods
cmpsl
xor
or
sbb
and
jmp
fs
mov
daa
cmp
jb
out
stos
stc
wbinvd
insl
jae,pn
sbb
mov
cmp
lret
and
adc
mov
insb
gs
out
sub
xchg
adc
cmp
and
and
xchg
in
add
xchg
movhps
inc
nop
jbe
in
scas
mov
cwtl
imul
test
mov
adc
inc
insb
imull
inc
fs
and
xchg
mov
xor
mov
or
or
add
xchg
inc
and
es
sbb
ficoml
lock
inc
stos
mov
sbb
jne
sbb
orl
ljmp
xchg
in
or
clc
in
mov
add
hlt
ret
outsb
add
cli
shlb
mov
fisubs
sbb
test
lods
mov
xor
popa
popa
scas
push
mov
addr16
rcrl
mov
push
xchg
mov
cmp
in
push
jns,pt
fsubrs
mov
hlt
mov
xlat
les
outsl
ja
test
les
mov
xlat
jae
xchg
lods
stc
add
xchg
fisubs
gs
add
lret
loopne
pop
test
mov
outsl
and
aas
imul
cmc
jbe
push
or
jo
insb
repnz
in
pop
add
and
xchg
in
fsubrl
test
or
ljmp
imul
mov
mov
mov
ret
mov
shll
js
ja
sbb
push
incb
imul
insl
sahf
jmp
mov
mov
xor
cmc
dec
call
mov
enter
popf
enter
outsb
jge
scas
leave
jae
repnz
jo
jo
or
out
es
add
cltd
adc
add
mov
xor
fmuls
pusha
add
lret
out
std
in
js
and
and
mov
rclb
add
mov
and
sbb
int3
roll
xchg
inc
test
pop
sub
dec
rcr
ror
out
popa
mov
mov
push
jbe
ds
xchg
ss
orb
gs
pushf
fdivrs
xchg
mov
lcall
push
in
sbbl
das
jle
pop
enter
xchg
adc
sbb
sbb
ja
aas
adc
in
jne
in
das
movsl
xor
add
mov
stos
adc
aas
inc
mov
jno
ja
call
jecxz
push
daa
fnop
push
lahf
test
pop
pop
dec
cmpsb
lods
fcmovne
pop
jo
mov
sub
mov
insl
dec
xchg
xor
test
inc
mov
ret
push
xor
or
aam
aaa
push
lods
cmpsl
inc
dec
fucomp
cwtl
shll
out
or
or
and
inc
loop
mov
pop
add
mov
mov
add
inc
inc
jmp
out
ljmp
push
andb
xlat
ja
cmp
jle
imull
mov
cltd
in
cmp
fimuls
movsl
lds
ljmp
lcall
popa
inc
stos
dec
inc
push
mov
cmc
mov
and
sub
lds
add
ss
fstpt
xor
into
in
in
add
dec
mov
call
and
aaa
inc
lods
outsb
shlb
fdivl
cmpsb
inc
roll
push
jge
dec
sbb
dec
lret
shlb
lret
xchg
cltd
rcl
sub
pop
mov
mov
inc
cmp
adc
loopne
int
jl
jno
jp
push
push
xchg
repz
jno
push
pop
dec
sti
xor
xchg
adc
pop
mov
dec
pop
push
adc
mov
out
std
sub
jecxz
push
cmp
into
int3
test
cli
jl
mov
out
hlt
test
shr
and
mov
ret
adc
inc
pop
mov
icebp
inc
mov
fucomp
xor
ja
in
inc
push
je
jmp
push
push
mov
in
lock
sbb
inc
shlb
int3
fcompl
mov
jne
lds
jp
pushf
add
dec
jp
mov
adc
fimuls
push
popa
add
or
jb
cmpsl
mov
xor
ds
sub
mov
roll
imul
nop
imul
roll
lea
std
pop
sbb
movsb
repz
insl
imul
xchg
jnp
out
adc
mov
xor
jne
mov
js
outsl
sub
jnp
loope
xor
pop
andl
fnstenv
adc
or
dec
insl
xchg
pop
or
dec
call
mov
stos
dec
aam
and
je
mov
or
or
inc
cmpsb
adc
aaa
push
xor
nop
repz
mov
div
in
jp
fstpl
mov
lock
xor
pop
rcll
movsl
jo
dec
push
sbb
fpatan
mov
fbstp
fwait
pop
pusha
lcall
popa
sub
mov
insl
mov
xchg
lahf
or
mov
push
es
push
bound
adc
inc
add
sub
fnstcw
add
xorl
mov
negb
inc
pop
in
in
fsubs
das
stc
test
inc
movsl
or
dec
jbe
into
movsl
inc
mov
xchg
pop
lcall
mov
pop
or
xorl
icebp
addr16
xchg
inc
sbb
leave
addr16
sbb
mov
dec
add
mov
or
ret
or
push
imul
out
cmp
test
cmpsw
mov
and
stos
dec
mov
sbb
or
lret
arpl
add
and
sbb
andb
push
xchg
pop
lret
inc
out
repz
imul
pop
mov
neg
adc
mov
push
call
add
test
inc
std
mov
jne
dec
sbb
test
mov
movsb
xchg
mov
push
movsl
lahf
mov
rclb
pushf
aas
adc
arpl
pop
js
xlat
push
test
sbb
sub
rorb
inc
lea
cltd
mov
in
cwtl
xchg
xchg
mov
mov
inc
adc
movsb
nop
pop
mov
arpl
ja
clc
adcb
repz
or
mov
pop
inc
or
mov
inc
out
pop
pop
fmuls
mov
cs
and
xor
in
mov
ficompl
hlt
adc
movsb
popf
enter
addl
pop
fdivrs
dec
cmpb
scas
cs
mov
sub
popa
xor
pop
xor
sbb
sbb
scas
testb
inc
out
push
pop
rolb
inc
negl
pop
mov
jbe
sub
cmc
addr16
loopne
push
lea
ja
pop
push
add
ret
sarl
icebp
scas
fimuls
aaa
pop
cli
es
mov
dec
cmpsw
and
pop
out
push
mov
int
lahf
lds
jmp
push
popa
jecxz
roll
stos
pop
std
pop
xor
lret
jg
push
jecxz
adc
test
pop
sub
xchg
sub
cltd
dec
cmpsb
mov
cmpsl
mov
daa
loop
jl
jns
sti
int
je,pt
xchg
arpl
cmp
sub
mov
xchg
xchg
loop
pop
and
mov
push
mov
or
cld
sbb
clc
adc
cwtl
push
jno
mov
inc
push
lods
insb
mov
out
inc
sub
andl
cld
pop
sar
imull
popa
add
mov
jns
aad
dec
ss
lret
repnz
cmp
mov
jmp
dec
daa
std
imul
pop
mov
repz
iret
xchg
std
inc
call
pop
push
push
xchg
sub
stc
xor
adc
aaa
fcmove
stos
jnp
push
jp
jnp
dec
adc
xchg
ds
pop
or
ror
pop
stos
out
mov
xchg
sbb
push
mov
inc
pop
mov
push
lcall
ds
pusha
and
xchg
adc
out
dec
add
clc
enter
inc
scas
and
movsl
lea
pop
push
addb
jp
or
gs
inc
cs
mov
pop
cli
stos
daa
in
ljmp
inc
fsubs
inc
call
int
push
iret
sbb
stc
cmpsl
xchg
mov
scas
imul
sub
push
sti
pop
dec
xor
shr
push
add
push
out
andl
cmp
cmp
movsb
testl
leave
inc
shlb
sbb
lea
sbb
sbb
shrb
into
jno
cmp
pop
sbb
lods
in
fs
rep
imul
test
jno
inc
fildll
in
lds
xor
mov
ljmp
insl
fcomps
dec
xchg
in
sub
xchg
jae
mov
dec
icebp
mov
push
pusha
int3
push
xorl
inc
icebp
fwait
lret
sbb
jle
push
sbb
adc
movsb
lret
lock
inc
push
mov
lret
sti
push
or
stc
pop
and
repz
rcrl
pop
xor
adc
addr16
dec
cmp
out
add
push
and
movsb
mov
or
or
inc
dec
push
roll
ret
testl
pop
rcll
push
adc
xor
push
shl
nop
pop
cs
testb
push
pushf
jl
stc
sub
jae
cmpsb
fwait
aam
daa
mov
push
mov
inc
aas
mov
xor
into
cld
jae
dec
mov
jp
lds
add
cmc
adcl
fs
jns
das
or
dec
in
fldenv
cmp
mov
or
fcmovb
mov
push
jp
repnz
mov
ljmp
cltd
push
push
mov
xchg
mov
cli
jno
lods
enter
loopne
mov
mov
xor
in
xchg
imul
cmp
dec
push
inc
pop
inc
mov
andl
outsl
mov
cmp
and
jo
cmpb
ja
jl
gs
cld
xchg
pop
sub
popa
jp
cmp
cmc
divl
sbb
xchg
adc
xor
sub
mov
bound
adc
push
sub
or
inc
jg
cmp
and
mov
into
adc
pop
adc
lret
lret
adc
hlt
aad
int3
sub
fldcw
jmp
imul
push
cmp
xor
dec
enter
push
jl
movsb
test
loope
aaa
sti
add
xor
pop
orl
adc
outsl
sbb
mov
mov
call
out
jcxz
jb,pn
dec
lahf
test
xchg
nop
pop
inc
or
loopne
jle
sub
xchg
fdiv
push
mov
cmpb
jns
mov
sahf
mulb
jle
test
shl
hlt
movsbl
fs
push
fidivrs
lods
divb
sbb
iret
ja
sub
in
inc
in
aad
add
sub
fstpt
mov
cmpsl
insb
dec
push
enter
sbb
and
and
jno
movsl
fistl
call
or
outsl
and
mov
mov
jg
hlt
pop
dec
or
sub
jmp
aaa
inc
mov
stc
pop
sbb
out
xchg
fsubl
xor
pushl
inc
mov
scas
mov
jecxz
xor
pop
sbb
roll
jp
cmc
repz
inc
mov
imul
jle
outsl
and
or
mov
mov
aas
inc
mov
test
jl
and
cmp
popl
repnz
rorl
arpl
mov
mov
xchg
push
int
jge
inc
testl
rcll
or
test
xchg
rorl
sub
mov
rcrl
xchg
aad
mov
mov
adc
mov
push
in
jb
mov
mov
pop
hlt
clc
aas
das
pop
push
outsb
xor
dec
xchg
add
and
out
or
pop
mov
pop
or
mov
aad
mov
pop
xchg
or
cmp
adc
inc
dec
dec
add
hlt
movl
push
mov
outsb
mov
aas
pop
daa
test
into
lcall
add
push
bound
pop
mov
mov
or
xor
adc
clc
sub
pop
inc
mov
cwtl
add
cmpsl
xchg
fildl
shrl
push
and
negl
lods
mov
cld
inc
lahf
fildl
scas
inc
sarl
dec
fcompl
pop
rorl
iret
subl
das
and
push
and
sub
xor
popa
push
mov
cmp
mov
and
sbb
mov
lock
int
xchg
mov
test
enter
cmp
cmp
shr
rcrl
das
add
sti
mov
inc
xor
int3
dec
leave
les
test
leave
fiaddl
mov
fs
loopne
fmull
test
fidivrs
xor
dec
jg
pop
fisttpl
adc
movsl
mov
xor
lock
jge
scas
in
rcr
cli
and
loop
popa
test
inc
sub
inc
cmp
in
je
subb
sub
xlat
inc
imul
adc
mov
ss
loopne
je
ror
sahf
pop
in
arpl
popf
sub
xchg
fwait
rcrb
mov
adc
adc
mov
ja
callw
jne
pushf
mov
shrl
dec
mov
or
insb
insb
adc
lods
sub
adc
jmp
ljmp
sbb
pusha
inc
lret
xor
test
aad
loopne
icebp
addr16
jg
or
xchg
dec
or
inc
xorb
repz
jae
xchg
xor
pushf
add
shll
jno
fs
ja
imul
add
pop
xchg
sti
xor
cmc
in
shll
ret
sub
dec
rcrb
cmp
xor
shrb
and
gs
cmp
xor
icebp
mov
bound
loop
push
mov
jns
js
add
imul
xchg
or
adc
jae
sbb
repnz
jle
sbb
and
ror
stos
test
shr
or
rcr
lret
rcr
mov
mov
jp
test
inc
pop
sbb
stos
or
adc
pop
sahf
rorl
hlt
pop
dec
inc
push
xchg
adc
imul
add
push
ljmp
jb
pop
jae
jge
xchg
fbstp
test
lahf
adc
or
jg
push
out
or
mov
pop
inc
pop
xlat
or
jg
ss
dec
fdivr
lcall
jbe
inc
xchg
or
enter
into
lods
aas
popf
mov
mov
mov
xor
jno
jns
push
pop
mov
mov
adc
sub
jl
cmc
fldenv
sub
imul
adc
icebp
mov
and
cmp
cld
dec
adc
in
mov
push
sarb
push
ljmp
xchg
sub
out
push
sub
jnp
sub
aas
jne
lret
sbb
inc
cmp
sbb
clc
lock
ss
mov
pop
daa
mov
adc
jno
negb
add
cmp
js
std
mov
daa
sahf
outsl
popf
ja
xchg
lds
das
pusha
or
jmp
lahf
repz
push
imul
inc
or
sbb
mov
pop
ret
or
mov
aad
push
lds
out
mov
mov
cltd
mov
dec
jo
out
fstpl
mov
pop
xchg
sub
push
fnsave
dec
xchg
jo
nop
cmp
lea
xchg
or
xor
sbb
js
xorb
aam
push
scas
or
orb
xchg
lds
or
mov
sahf
out
cmp
test
pop
mov
lret
jl
or
flds
pop
int
sbb
nop
xchg
aam
sub
pop
imul
lahf
mov
ret
xor
aaa
out
out
inc
cmp
xor
push
jl,pt
mov
xlat
mov
jns
outsb
mov
inc
add
sub
xor
lcall
pop
push
and
and
ret
adc
mov
dec
mov
pop
shll
add
testl
cmpsb
leave
fnstcw
xor
push
mov
lods
dec
ret
xchg
fwait
mov
cmp
stc
dec
imul
ret
adc
fmull
mov
lods
inc
aaa
leave
mov
sbb
cmp
pusha
sbb
sti
out
mov
and
sbb
pushl
cltd
inc
push
push
xchg
js
mov
pop
test
in
mov
pusha
fs
add
cs
loop
xchg
and
pop
sti
xchg
push
ret
sti
jmp
cltd
add
iret
cmp
adc
mov
dec
ret
ljmp
cmp
dec
or
in
imul
mov
clc
add
sub
xor
daa
cmp
mov
mov
incb
sbb
aaa
mov
pop
ds
pop
leave
fsts
in
fnstsw
aas
test
mov
jns
mov
xchg
lret
mov
add
or
jp
xor
inc
mov
imul
push
xchg
xchg
popf
clc
fisubs
cmp
cli
inc
imul
imul
adc
push
sub
and
mov
jmp
cld
aad
fiadds
insb
ret
and
inc
pop
adc
mov
adc
jg
shl
loop
ret
aas
pop
je
mov
rorl
repnz
fisubl
test
leave
out
or
inc
xor
or
or
mov
mov
mov
daa
pop
sbb
data16
sbbb
mov
cmp
mov
ror
lods
test
cld
cmpb
mov
dec
ja
cmc
mov
fistpll
bound
imul
jle
push
xchg
sub
jmp
push
stos
jbe
loope
mov
dec
mov
jnp
add
adc
fisttps
jmp
hlt
push
iret
sub
jno
loop
dec
or
adc
sub
mov
pusha
das
xchg
ljmp
lods
movsl
sub
mov
sub
enter
aam
mov
pushf
xor
lock
mov
cli
out
jno
xor
divl
mov
loopne
inc
xchg
popa
sarb
movsl
push
out
inc
mov
inc
jecxz
shlb
loop
sbb
imul
icebp
inc
nop
subl
js
cli
insl
cmp
std
dec
push
sti
inc
loopne
or
dec
sbbl
mov
loop
inc
or
sbb
cmp
loope
and
std
sub
add
push
fisubl
jmp
lahf
pop
stc
cmp
out
pusha
cld
mov
dec
fistpll
nop
jle
stc
mov
mov
add
cmp
ljmp
jmp
push
mov
mov
cli
push
cwtl
and
iret
fdivr
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
js
mov
mov
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
js
mov
mov
call
nop/reserved
sub
cmp
dec
pop
jg
outsl
js
mov
mov
call
lss
rol
adcb
les
hlt
adc
lods
cld
add
cs
pop
movsb
mov
je
fs
lock
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
and
add
jbe
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
adc
imul
push
fwait
add
sti
addr16
outsb
test
ror
dec
or
push
loope
shll
out
cmpb
lahf
pop
jo
mov
mov
outsl
jmp
xchg
fs
jne
mov
pop
add
jmp
add
dec
mov
mov
cltd
mov
les
shll
push
adc
inc
xchg
gs
cmp
sub
mov
xor
jle
sti
inc
lret
in
fbstp
cmp
jno
sbb
xchg
jo
ret
mov
out
add
add
clc
nop
lret
shrl
ret
xchg
fwait
sbb
int
push
inc
mull
inc
inc
jg
mov
ret
test
push
and
add
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
dec
popa
mov
jns
pusha
clc
add
xor
xor
jne
ja
ss
gs
aam
gs
jl
pusha
fdivl
movsb
lds
xor
ja
outsl
lods
push
movsl
je
popf
xor
sub
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
lea
pop
jb
stos
lret
xlat
mov
sbb
out
add
inc
push
mov
in
outsl
clc
sti
cli
test
jbe
test
xchg
mov
inc
lea
jb
cwtl
loopne
cwtl
pop
xchg
gs
sbb
dec
imul
xor
push
notl
add
int3
mov
xor
mov
jne
sbb
inc
ja
lods
xchg
lods
xor
movsb
stc
sub
jge
adcl
pop
clc
add
cmp
out
lea
out
enter
mov
jle
movsb
gs
lds
mov
cld
jge
sbb
in
sub
xchg
addr16
mov
std
push
mov
inc
jl
push
mov
lock
jae
adc
mov
push
sub
fsubs
sub
jg
pop
xor
test
pop
sti
loopne
sbb
stc
orb
add
jge
cmp
mov
pop
dec
pop
mov
xor
push
cmpsl
mov
pop
mov
ja
mov
and
aam
push
inc
fxtract
pop
add
lods
jns
rcrb
adc
pop
xchg
jmp
ret
cmpsl
xchg
jmp
mov
jg
in
inc
cli
imul
xchg
out
and
mov
popf
shlb
int
fs
mov
jb
mov
popf
loope
shll
fdivr
mov
test
xchg
ds
pop
add
ficoml
test
or
xchg
xchg
push
xchg
xchg
fnstsw
sarl
inc
sub
or
mov
cmp
jp
ja
leave
push
add
inc
aas
sub
icebp
cmpb
pusha
add
pop
and
xchg
jecxz
shlb
cltd
dec
lret
cmp
jecxz
push
add
call
adc
adc
int3
es
shlb
negl
lea
sub
xor
sub
pop
add
xchg
mov
js
inc
pop
pop
xchg
aaa
ret
addb
mov
aaa
sahf
and
pop
inc
ja
repz
jg
lea
pop
lock
jno
dec
push
dec
dec
outsl
cmc
movsl
imul
cmp
xor
or
mov
clc
mov
and
push
cwtl
outsb
movsl
pusha
add
fistl
sbb
mov
sub
xchg
idivl
cmc
sub
xchg
rclb
shl
adc
addr16
jmp
adc
sar
xchg
dec
mov
std
arpl
fdivs
pop
mov
lret
stos
jne
js
dec
int3
sti
test
and
sub
mov
sub
insl
ficoms
dec
push
add
fwait
push
jg
sub
notl
ljmp
xor
pop
rcrl
inc
pop
ficomps
dec
gs
mov
add
inc
jp
icebp
std
fistl
addr16
add
mov
pushf
aas
aas
sub
push
mov
out
pop
sub
movsl
sarl
push
les
mov
xor
mov
adc
ret
xor
sub
inc
sbb
iret
imul
mov
int3
mov
push
jl
xor
inc
sarb
sbb
sti
mov
cmp
in
sub
int
mov
fisubrs
mov
and
jb
js
push
aad
in
popf
mov
push
popa
sub
cmc
cli
lahf
scas
lock
jno
out
lret
push
loopne
out
bound
in
mov
xchg
push
dec
js
jo
lcall
inc
stc
jno
mov
jg
adc
adc
pop
das
jo
mov
or
pop
jp
sub
insb
pop
addr16
push
lods
repnz
and
lock
popa
mov
lcall
ja
hlt
es
xlat
inc
insb
xor
and
into
jnp
aas
jecxz
push
sbbb
cmc
rorb
push
xor
and
aas
aam
mov
ss
mov
jg
push
cmp
orl
imul
jecxz
das
popa
ds
inc
jge
cmc
inc
sbb
cmp
xchg
cli
cli
or
out
push
mov
lds
fldenv
leave
out
sbb
arpl
lock
movsb
idivl
sub
movsl
pop
je
sarl
mov
xor
push
mov
test
mov
lret
mov
cmovns
jne
insl
fisubrl
test
pop
mov
fisubrl
or
push
jle
xor
xchg
in
mov
sbb
fldcw
movsb
movsl
sbb
outsb
jg
lock
cmc
push
mov
xchg
sbb
in
xor
addr16
fmuls
mov
inc
sbb
jmp
adc
frstor
ficompl
movsl
jl
cmp
sub
cs
mov
fs
jnp
lds
push
imul
pop
cmp
mov
sbb
lahf
popa
mov
jae
mov
js
pop
sub
cmp
das
adcb
jp
push
push
jo
inc
mov
aad
or
repz
sbb
ja
push
lds
xor
data16
repnz
pop
daa
or
and
inc
mov
push
fldenv
push
xchg
add
rcrl
pop
inc
jnp
sub
push
lcall
cmp
mov
inc
mov
jmp
pop
add
and
out
sbb
or
xor
cwtl
pop
cmp
sub
or
mov
xor
inc
shlb
into
xadd
lods
pop
movsb
ds
repnz
cmpsb
out
sub
ficomps
ret
mov
out
mov
mov
repz
mov
cwtl
icebp
fnstcw
push
jne
sub
test
push
pop
mov
xchg
rcl
mov
cmp
push
clc
inc
mov
jb
mov
cmpl
lret
test
jae
fs
inc
mov
inc
add
sub
imul
jmp
das
pop
jp
rorb
or
sarb
jbe
dec
rcrl
hlt
adc
stc
and
push
sub
xchg
push
sarl
add
adc
cmp
or
mov
xor
call
pop
jp
adc
scas
lea
call
and
rcrl
cmp
incb
mov
mov
mov
cmc
sub
and
loopne
sub
sbb
mov
or
mov
or
or
push
and
lcall
cld
rcr
adc
mov
xor
sub
psllq
into
ss
add
dec
rorb
sub
test
mov
in
cmc
sbb
ret
hlt
or
fistpll
loop
inc
mov
rclb
pop
rol
insb
add
imul
jmp
decl
jmp
imul
cmpsl
inc
test
xor
push
push
cwtl
test
jl
ret
xchg
adc
pop
stos
in
xchg
jecxz
movsb
aaa
test
notl
out
pop
mov
jne
cmp
in
sbb
stc
stos
and
jbe
inc
add
inc
sbb
push
int3
into
xchg
sti
add
out
stos
mov
push
lret
gs
dec
test
add
and
push
aas
add
push
in
jmp
outsb
pop
jg
pop
movsb
imul
jno
and
stos
push
mov
shlb
mov
push
jo
in
loop
ds
jg
xchg
mov
xor
lret
inc
shrl
mov
sarb
xor
adc
movsl
mov
adc
sbbb
cmp
dec
loope
loopne
jbe
jg
shrb
cmc
jae
mov
in
rcr
mov
xor
out
dec
mov
outsb
jmp
xchg
int3
sub
rol
jle
mov
jne
pop
adc
loope
add
imul
and
dec
andb
fimull
sub
lret
inc
fidivrs
pop
mov
hlt
mov
sub
das
lods
hlt
pop
cmpsb
movsb
xor
dec
scas
mov
xor
push
pusha
addl
xchg
das
out
push
sar
stos
pop
cwtl
les
add
lds
push
mov
adc
ss
inc
lds
je
outsb
inc
inc
pop
test
mov
movsl
jae
dec
popf
push
inc
je
ss
cs
test
mov
and
jo
inc
in
mov
cmc
lcall
insb
pop
cmp
pop
push
dec
inc
stos
jo
les
sub
adc
out
mov
ja
xchg
sbb
push
xchg
fldl
ret
xchg
out
loop
cltd
shrl
leave
and
and
sub
push
int3
mov
je
mov
mov
or
dec
das
clc
insl
data16
or
mov
lea
push
dec
arpl
mov
jae
popa
sbbl
inc
pushf
fistps
mov
ljmp
mov
std
xor
shrl
jecxz
add
push
movsb
pop
xor
mov
add
inc
cmpsb
inc
cmovg
jle
stos
mov
jle
jge
and
push
adc
cmp
lcall
inc
imul
sub
mov
test
mov
dec
fdivrl
xchg
cmp
addr16
jns
outsb
shr
inc
lcall
dec
cli
data16
out
xlat
jae
lcall
push
out
sbb
pusha
shrl
push
test
mov
adc
xor
cmpsl
cmc
outsb
dec
dec
mov
cmpsb
or
in
rol
ss
div
sub
inc
stc
jp
es
test
push
dec
fldl
mov
mov
adc
sub
imul
inc
pushl
push
pop
push
sbb
adc
cmp
dec
pop
jmp
fstps
pop
clc
mov
sahf
std
mov
aas
leave
and
scas
out
sub
movsb
addl
dec
add
sub
hlt
test
clc
insb
lcall
dec
push
inc
fcomps
out
in
mov
mov
clc
ret
inc
cmp
out
cs
xchg
cs
es
add
xor
sub
clc
enter
mov
inc
mov
jmp
xchg
mov
xor
sub
cmp
fidivs
cmpsl
test
pop
push
jl
test
out
loopne
lock
mov
cltd
inc
inc
or
pop
push
clc
lahf
inc
xor
adc
insb
mov
add
lock
icebp
mov
push
xchg
or
lock
pop
mov
out
jle
cmpsb
mov
mov
mov
rcll
pop
or
fisubl
adc
call
lock
sub
stos
adc
inc
out
sub
ja
mov
call
pop
and
lahf
loop
and
bnd
dec
mov
and
xor
sub
inc
mov
or
jecxz
fmul
push
loope
daa
sub
xor
jmp
add
movsb
nop
sahf
adc
into
mov
pop
les
mov
orl
scas
stos
imul
repnz
imul
movsb
das
xor
mov
sbb
cmp
idiv
inc
pop
pop
popf
orb
dec
and
mov
out
mov
sub
and
cmp
pop
mov
mov
sbb
rorb
cmp
popa
xchg
pop
mov
lcall
jae
outsb
and
fwait
mov
arpl
inc
imul
sub
rcrb
xchg
and
cmp
fsts
sarb
in
rolb
stc
xchg
test
inc
inc
adcl
ljmp
addl
sub
out
test
in
cmpsl
and
movsb
mov
cmp
and
pop
addr16
jl
les
sbb
mov
into
in
adc
push
ss
push
test
test
jle
mov
sub
add
push
test
and
imul
fmulp
lahf
insl
sbb
mov
push
xor
insb
out
xchg
dec
std
push
adc
movsb
in
imul
ret
add
xor
add
xchg
cmp
mov
xorl
out
in
in
mov
shl
insb
rolb
scas
dec
mov
fdivp
in
fwait
mov
jno
pop
iret
push
cmp
fstl
or
push
inc
test
fmuls
imul
jae
jp
fsts
pop
int3
dec
jne
ss
and
ret
aam
dec
rorb
mov
cli
mov
lods
pushf
punpckhdq
addr16
adc
mov
xchg
adc
inc
sbb
lret
test
xchg
mov
imul
jo
jl
mov
loopne
inc
dec
xor
adc
sbb
outsl
sub
into
leave
fistl
dec
ds
insl
mov
fstl
pop
pop
fists
cmp
pop
shlb
cmpsb
loop
repz
lahf
jp
inc
lret
push
out
jle
lods
sub
div
inc
leave
cmp
inc
pop
ret
js
jae
xor
jmp
addr16
scas
shlb
enter
pop
mov
or
out
xchg
or
scas
mov
stc
sub
in
mov
loope
pushf
adc
std
add
xchg
xor
gs
ja
sbb
repnz
xchg
andl
das
out
bound
repz
push
fwait
imul
dec
sub
neg
pushf
adc
arpl
sbb
xchg
xchg
mov
push
cwtl
sbb
out
dec
nopl
xchg
push
dec
sbb
add
leave
je
icebp
cwtl
shr
and
add
push
xchg
sub
pop
mov
popa
mov
jbe
in
dec
sbb
or
ljmp
incl
pop
add
rcll
lds
insl
mov
mov
sarl
sbb
dec
mov
sbb
cmp
lea
sub
inc
in
insl
push
mov
fdivs
mov
adc
push
lds
sub
inc
fdivr
jo
xor
pop
add
inc
adc
out
addr16
mov
jle
jns
test
adc
aam
or
push
jp
fisubl
enter
nop
insl
lahf
cmp
add
or
xor
or
mov
and
mov
std
insb
lahf
outsb
std
mov
and
mov
ffreep
push
daa
addr16
out
mov
inc
xor
in
hlt
push
sub
aam
push
adcl
add
pop
out
out
pop
pop
xlat
hlt
mov
cmp
js
lods
mov
movsl
test
fidivrl
xchg
movsb
jns
insb
cmp
xchg
cltd
ss
push
jge
and
movsb
cmp
dec
rorb
or
jb
rcrb
mov
aad
aas
fiaddl
cmp
and
mov
xchg
dec
data16
shrl
mov
jl
push
pop
push
sarb
jno
rcl
inc
aas
dec
push
cmp
cmp
shrb
adc
int3
dec
sub
fs
insb
xor
subb
cmpsl
lret
push
addr16
jecxz
out
jl
aam
jne
ds
cltd
inc
xor
je
adc
lds
xlat
scas
or
inc
pop
jb
mov
jbe
jns
cmpsl
lcall
lods
ret
add
es
push
jmp
push
inc
add
sub
push
scas
sub
xor
sbb
inc
sar
xchg
scas
ror
sahf
insl
sahf
pop
movsb
sarl
add
push
and
scas
ja
sarl
dec
cmp
mov
inc
mov
jbe
test
lcall
shrl
or
mov
mov
loopne
jmp
sti
js
push
jg
and
inc
cmc
cmp
xchg
and
inc
or
in
sub
cmp
out
loop
pop
out
ss
xchg
mov
out
dec
out
sbb
push
movsb
mov
sbb
int
pop
test
push
mov
and
xchg
jne
lods
out
aaa
inc
mov
das
add
insb
or
lods
push
lds
popf
jns
nop
cmp
mov
cmpsl
and
lret
daa
jns
cs
xchg
rorl
pop
mov
sub
icebp
out
or
mov
mov
inc
insl
adc
mov
pop
mov
out
push
push
ret
or
mov
pusha
adcl
cmpsl
test
mov
xor
js
imul
movsb
adc
leave
fadd
dec
mov
jae
mov
lret
cmp
outsl
shlb
jns
aad
push
mov
in
popf
enter
hlt
loop
enter
dec
inc
into
insb
fisubl
xchg
pushl
ds
inc
idivb
push
mov
loop
pop
shrl
lret
notl
fstp
xor
in
dec
test
mov
mov
repz
xor
adc
or
push
jmp
cmp
fadd
lods
push
xchg
and
sbb
dec
add
push
pop
pushf
cmpsb
movsb
inc
out
push
mov
out
cs
int3
roll
or
ljmp
jae
push
push
jmp
insb
or
inc
fistl
xchg
mov
lcall
movsl
xor
loop
std
xor
push
mov
loop
jae
and
push
mov
std
cmc
movsb
push
jne
out
inc
xlat
jno
rorb
mov
sub
rorb
cmp
sahf
cmpsl
daa
xor
jnp
xchg
adc
xor
fcom
xor
mov
fnstenv
and
les
rol
dec
mov
daa
push
push
jge
test
stos
loope
cwtl
jae
mov
sub
add
rcr
inc
dec
mov
xor
inc
xor
cmp
xchg
dec
mov
in
mov
notb
mov
pop
scas
insl
cltd
push
xchg
cmp
insb
or
sub
fidivrl
lret
mov
mov
xchg
push
jae
fsubrs
ja
mov
das
xorl
test
adc
mov
sbb
dec
gs
pusha
loop
cs
jecxz
fstpl
xchg
lret
outsl
mov
std
xor
into
lret
testl
and
add
stos
pop
jg
mov
mov
lock
mov
icebp
or
data16
incb
and
test
mov
cmp
daa
mov
cmp
cmp
popa
adc
insl
adc
jmp
das
insl
mov
lock
or
lahf
push
jl
cmpsl
dec
addr16
sbb
mov
mov
pop
shrl
arpl
out
fidivl
insl
and
dec
inc
fdivrp
mov
in
insb
xchg
inc
mov
mov
xchg
inc
mov
mov
cwtl
cld
add
cld
test
mov
jmp
dec
std
cmp
sub
mov
pop
cli
mov
mov
cmp
sub
sti
xor
add
mov
pop
std
and
xchg
jge
dec
leave
sub
mov
mov
add
jne
mov
fs
sbb
pusha
scas
xchg
scas
add
push
pushf
loopne
stos
stos
dec
dec
sbb
movsb
shll
pop
fisttps
inc
lods
jecxz
leave
cli
stos
adc
jecxz
out
lods
dec
das
pop
stos
adc
mov
rcll
scas
adc
or
push
insb
loope
cs
daa
fcmovne
fiaddl
inc
dec
jnp
bound
jg
xor
shlb
sbb
push
xchg
jle
stos
sbb
jp
push
mov
sub
les
sub
iret
cmp
aam
aaa
cltd
rcl
jge
adc
jecxz
aaa
sbbl
pop
fstpt
add
negb
pop
adc
pusha
daa
cltd
insl
gs
add
xchg
roll
or
jecxz
xlat
and
or
add
add
mov
enter
mov
mov
scas
enter
cmp
xchg
sbb
sub
les
sarl
dec
xor
sbb
xor
jae
mov
adc
sbb
push
xor
test
mov
xlat
into
mov
mov
push
data16
aas
arpl
xchg
ja
mov
std
test
andb
xchg
js
jo
jae
out
imul
pop
push
or
rorb
or
stc
jle
rol
xor
orb
cwtl
inc
addl
test
push
adc
clc
adc
cmp
daa
inc
ljmp
mov
pusha
fcoms
mov
pop
call
ss
enter
pop
mov
lods
jae
icebp
jle
lcall
mov
gs
jns
stos
ds
std
lock
push
pop
gs
adc
xchg
sahf
stos
mov
or
jecxz
ret
xchg
push
add
push
cmp
sub
in
dec
mov
mov
cmpsb
outsl
imul
add
cmp
push
stc
data16
icebp
and
repnz
hlt
je
dec
and
int3
cmp
cmpsb
xchg
test
mov
test
mov
cs
iret
hlt
mov
nop
pop
arpl
xlat
jg
add
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
inc
xorb
xchg
jo
inc
mov
movsb
mov
je
fs
lock
xor
and
aam
les
hlt
adc
pusha
xchg
jo
inc
mov
movsb
mov
je
adc
lret
mov
lret
insl
ljmp
and
std
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
dec
std
jp
push
sbb
sub
lret
jne
add
adc
stos
les
mov
dec
loop
loope
cli
sub
and
dec
pop
or
dec
pop
inc
ss
je
mov
xchg
sbb
pushf
jecxz
shlb
adc
mov
out
sub
jp
imul
popf
cmpl
or
mov
mov
in
sub
jg
stos
popf
sbb
mov
and
dec
loop
or
ret
cli
push
imul
xchg
bound
pop
les
ss
pop
loop
adc
cld
fstpl
or
xchg
dec
inc
cmp
xor
sti
xchg
lahf
loop
jns
and
mov
mov
ficoml
cli
insl
ljmp
xor
les
dec
in
hlt
push
sbb
insb
xor
sbb
fildll
and
ja
jae
mov
sub
adc
sbb
movsb
cmp
pop
test
std
sub
push
popf
jne
gs
dec
leave
inc
cmp
add
mov
pop
int
std
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
dec
std
jp
push
sbb
sub
ffreep
or
cmp
outsl
pushf
aas
in
call
mov
and
sub
xor
pop
cmc
lret
ret
dec
dec
xchg
mov
cmp
push
dec
inc
daa
pop
jmp
xchg
inc
scas
mov
lds
addb
jmp
xor
mov
mov
adc
sbb
and
adc
or
cli
jle
rcrb
push
fnsave
push
jns
or
cmp
push
mov
rolb
add
xchg
dec
cmpsb
icebp
mov
mov
mov
push
push
add
dec
popf
xor
xor
add
sbb
sub
jnp
iret
movsl
push
lahf
std
adc
imul
fistpl
xor
add
gs
into
cmp
in
stos
insb
cli
in
or
sbb
cli
paddb
pushf
xchg
aam
pop
test
dec
scas
mov
repnz
sbb
lret
pop
ljmp
jns
fisttps
dec
cmp
cwtl
mov
repz
hlt
add
or
pop
xchg
pop
xor
push
mov
gs
test
dec
push
in
es
stos
in
mov
cmc
mov
mov
mov
xchg
adc
xchg
sahf
nop
or
jg
or
insb
mov
jbe
xor
or
ret
jne
or
fnstsw
lcall
in
mov
imul
push
iret
push
cmp
pop
scas
pushf
xchg
pop
ljmp
xchg
jnp
adc
addr16
xchg
xor
pusha
mov
jle
and
mov
pop
sbb
cmc
vaddsubps
sub
and
cmp
sahf
cmc
test
push
add
addr16
add
fnstsw
lods
xchg
dec
push
xchg
mov
cmc
mov
mull
daa
ret
xchg
adc
xor
jecxz
sub
push
cmc
adc
pop
push
push
daa
pop
cmp
mov
ret
push
inc
cmp
outsb
push
cmpsb
movsl
xor
dec
pop
cmp
test
inc
push
and
add
lcall
lcall
imul
add
xor
dec
cmp
mov
adc
cmp
add
mov
mov
mov
fcmove
xchg
mov
fcmovnb
add
and
xchg
jbe
icebp
imul
mov
ja
cld
mov
in
inc
jnp
and
scas
jbe
movsb
push
insl
jo
shll
xchg
xor
fcomp
pop
ret
outsl
jl
pop
xor
mov
pusha
jno
test
inc
cmp
mov
add
nop
xchg
mov
fcomp
mov
xor
sahf
pushf
lahf
jecxz
shlb
push
or
dec
xor
pop
cltd
adc
and
lret
icebp
pop
sub
cmp
jae
cmp
mov
jbe
jmp
pop
mov
js
ficompl
les
sub
mov
decb
pop
into
dec
clc
out
loope
cmp
lahf
cmp
call
shll
ss
push
sub
xor
outsl
jmp
adc
movsl
adc
into
mov
out
clc
lahf
inc
cmp
push
test
fcomp
adc
mov
or
sbb
int
jae
aam
pop
sbb
rolb
jno
cmpsl
add
push
mov
sbb
dec
mov
cld
ds
dec
sbb
aad
call
or
sti
loope
pop
jp
mov
push
js
cmp
cmpsb
mov
leave
pushf
xchg
aaa
mov
outsb
push
lods
xchg
mull
repnz
mov
xchg
repz
push
test
adc
aam
fistpl
fs
fs
push
mov
orb
shl
test
movsb
std
push
out
inc
inc
mov
scas
add
dec
or
leave
stos
or
and
ja
adc
icebp
mov
lods
fdivr
jns
sub
cmp
push
jmp
cmp
dec
and
daa
out
pop
aas
and
std
xorl
inc
mov
cmc
daa
xchg
cwtl
xchg
cwtl
int3
sbb
or
cs
dec
insl
insb
fnstenv
push
sahf
xchg
rcrb
xlat
js
mov
enter
or
cmp
adc
cli
stos
in
lcall
dec
mov
and
repnz
test
mov
cmp
push
and
xor
xor
imul
add
xchg
shlb
cmp
pop
push
icebp
stc
or
shl
es
mov
jge
push
xchg
cmpsb
sbb
mov
push
rolb
jle
repz
or
xchg
mov
imul
movsb
outsb
inc
rcrb
push
jae
pop
push
and
dec
mov
push
test
dec
leave
push
pop
mov
inc
jnp
outsl
pop
sbb
mov
mov
out
sbb
mov
pop
and
repz
and
into
cmpl
pop
popa
pop
ss
pusha
fwait
adc
arpl
outsl
imull
shl
rorl
aam
cli
xchg
fwait
lea
mov
pushl
mov
shrl
pop
jge
insl
sti
pusha
inc
and
aas
iret
pop
mov
lahf
pushf
stc
cmp
enter
lcall
sub
push
mov
jns
movsl
outsb
cmp
aas
fcmovnb
out
mov
adc
add
fildll
pop
test
aad
sub
cmp
jb
jo
mov
fidivl
adc
leave
mov
cltd
xchg
cwtl
test
jnp
pop
push
sahf
xchg
sub
jne
push
or
pop
inc
cwtl
xlat
mov
movsl
push
and
adc
cli
hlt
cmp
xor
push
push
ds
pop
jecxz
iret
sbb
adc
sbb
mov
add
mov
in
pop
fisttpl
fwait
dec
pop
ljmp
mov
into
cmp
dec
in
cmp
mov
pop
repz
imul
pop
xlat
xor
push
push
lahf
ret
daa
popf
aaa
out
sti
arpl
jle
push
mov
push
xor
push
sub
jge
loope
push
out
cmpsl
lcall
dec
or
aas
fsubrl
mov
notl
mov
adc
popa
pop
lahf
out
adc
cltd
lods
outsl
mov
int3
popf
cmp
xor
mov
add
sub
dec
jbe
xchg
enter
mov
in
push
stos
adc
push
push
cwtl
inc
popf
xchg
cmp
dec
mov
push
add
inc
mov
adc
push
enter
sbbb
xor
xchg
xor
faddl
sbb
sarb
jl
es
sub
arpl
jne
loopne
dec
push
sti
xchg
stc
mov
ret
fadds
pop
fwait
adc
mov
cs
inc
popf
mov
enter
pop
stos
ret
sub
pop
cmp
pushw
push
add
xchg
sbb
shrl
jno
dec
stos
push
fdivp
sahf
into
stos
clc
lock
inc
mov
fcoms
add
in
call
pop
and
sub
adc
cltd
clc
cmp
jb
mov
inc
cld
or
iret
cwtl
push
xor
ficompl
repnz
dec
js
dec
jbe
insb
dec
ficoms
lahf
push
sarb
into
cmpsl
adc
jns
in
imul
icebp
or
aaa
add
ja
in
jecxz
fs
add
scas
add
xor
cld
scas
sub
arpl
loopne
jae
jb
les
rcr
cltd
shrb
testb
es
pop
ret
fs
cmp
fldl
jmp
lock
adc
lea
sbb
arpl
adc
int
mov
test
hlt
scas
cmp
cmp
mov
add
sub
mov
mov
inc
inc
inc
jbe
mov
push
movl
sub
and
mov
jl
cmp
push
xor
push
aaa
adc
mov
sbb
adc
stos
popa
sbb
xchg
test
mov
test
xlat
testl
loop
pop
loop
sahf
ret
fdivr
push
jne
movsb
jns
add
xchg
xchg
fstps
fsubrs
fsubrs
ret
fstl
pushf
cmpsb
std
ss
sbb
cmp
inc
negl
and
scas
imul
sbb
insb
xchg
xchg
lret
xor
cli
cmp
sub
dec
xor
pop
adc
sub
push
sub
mov
adc
imul
mov
cmp
push
xchg
mov
add
es
xchg
inc
fxam
rcl
mov
int
jl
pop
pop
cmp
cld
int
jne
aaa
fcomps
xchg
les
dec
push
cli
out
jns
xchg
sbb
mov
das
test
or
dec
mov
sti
add
adc
cmp
pop
js
xchg
imul
mov
nop
stc
add
imul
in
ss
daa
cs
mov
jl
mov
sub
lea
or
add
ljmp
fisttps
push
cmp
xor
push
sub
mov
push
mov
or
test
movsb
dec
pop
jne
pop
xor
and
in
jl
divl
xchg
stos
es
add
inc
xor
jp
test
jae
aad
mov
xor
das
pop
xchg
rcrl
mov
out
je
lods
aas
je
adc
xor
cmpsb
shlb
pop
insl
pushf
aaa
xlat
xor
cmp
lret
or
inc
clc
push
insb
add
sarb
cmp
loop
das
jg
dec
shll
xchg
push
fdivr
inc
pop
jecxz
fstpl
outsb
xchg
enter
push
xor
sub
ljmp
stc
mov
cmp
lret
test
mov
movsb
out
cmp
jl
jae
sbb
cmp
or
in
mov
mov
inc
and
outsl
test
xor
push
mov
pop
push
lret
lret
add
sti
cmp
icebp
mov
xor
inc
outsl
add
test
and
andb
lahf
xor
addl
dec
push
mov
fdivs
mov
add
adc
mov
dec
mov
jecxz
add
xlat
shrb
mul
add
fisttps
loope
clc
xor
cwtl
mov
icebp
mov
dec
je
shlb
cwtl
ja
bound
fcoml
mov
fistl
cmp
xchg
std
cmp
ret
fistps
in
inc
cmp
aad
outsb
cwtl
mov
sar
fs
movsb
jp
dec
je
call
lods
dec
movsb
fucom
inc
dec
xchg
cmc
sbbw
xchg
mov
dec
fs
fsubr
and
sub
stc
or
pop
sbb
aad
repz
mov
cmp
add
push
jge
nop
or
dec
into
push
scas
ret
pop
les
mov
dec
xor
cli
lcall
shll
lds
or
inc
push
out
jno
inc
fdivrs
add
push
popa
lds
rol
cld
loop
cmpsb
jae
mov
or
fmul
pop
out
dec
cmp
jle
fldcw
hlt
pop
sbb
ds
push
mov
add
iret
adc
mulb
ret
ljmp
push
sub
cli
mov
je
lea
das
xorl
insb
cltd
cmp
aam
add
into
mov
rorl
inc
test
ja
or
in
cmp
mov
push
mov
or
fldt
push
fnstenv
js
lods
loop
sub
leave
lcall
bound
ds
stc
pop
mov
rcll
mov
xchg
mov
mov
punpckhwd
dec
lahf
mov
scas
mov
xor
xchg
int3
cmc
ss
pop
cmp
insb
mov
mov
cmpsb
sahf
lcall
jl
cbtw
pop
cli
mov
std
repz
lret
xchg
dec
lds
and
mov
jo
lods
ljmp
mov
lret
pop
sub
cmp
inc
jns
lret
pop
ja
daa
cmpl
iret
lods
push
push
jb
cmpsb
in
mov
shll
inc
jl
xor
or
sub
mov
adc
gs
fcoml
outsb
jns
pusha
mov
inc
jae
push
aas
mov
push
lret
fsubl
movsb
je
jbe
pop
subl
scas
and
inc
mov
inc
jl
mov
cld
xlat
push
xor
clc
dec
loopne
lahf
jns
xor
xchg
iret
into
mov
mov
sbb
mov
cmp
add
subb
repz
cmp
dec
mov
fwait
std
stos
cwtl
inc
les
inc
mov
stos
fsubs
loope
dec
jbe,pn
test
ljmp
fcoms
sub
outsb
sbb
xor
jl
cmpsl
shll
inc
push
clc
inc
icebp
push
xchg
sarl
icebp
in
icebp
out
andb
fimull
lock
insb
xor
cmp
repz
les
out
xchg
cmpsb
mov
mov
lret
sbb
ljmp
jbe
ja
mov
push
aam
fstl
inc
dec
data16
cli
aas
insl
sub
int
test
add
xlat
test
lret
in
hlt
add
cltd
mov
fdivl
mov
adc
xchg
pop
mov
mov
mov
rcrb
data16
mov
movl
out
dec
xor
shrl
rclb
jge
out
pop
imul
jle
aas
fisubrs
test
xor
adc
and
sub
adc
outsl
sub
movl
into
or
hlt
sbb
pop
inc
out
testl
icebp
cmpsb
imul
out
xchg
cmpsb
hlt
rol
or
test
movsb
out
insl
fidivs
xor
sahf
aaa
pop
add
scas
pusha
sub
shlb
mov
xchg
pop
xlat
aad
pmullw
adc
cmp
jmp
push
mov
xor
sbb
pusha
ljmp
mov
xor
mov
push
push
andl
popf
add
lods
jp
or
pop
clc
out
jmp
cmp
inc
hlt
int
hlt
negl
aas
shlb
negl
mov
das
mov
jbe
neg
jg
jg
mov
jno
and
mov
rcrl
and
idivb
mov
rolb
inc
out
je
mov
sti
stc
jge
adcl
fimuls
sub
repnz
mov
imul
outsb
and
out
sub
test
or
xchg
adc
stos
out
sub
rorl
pop
test
sbb
jecxz
in
mov
pop
xor
fildl
jg
pop
cmp
shrl
add
cmp
aas
mov
adc
stc
push
adc
dec
jnp
test
mov
divl
lods
jae
insb
xchg
xorb
repz
jg
jnp
ja
pop
icebp
arpl
adc
f2xm1
xchg
in
je
push
xor
adc
xchg
repnz
popf
xchg
test
sahf
jp
stc
fiaddl
add
or
adc
mov
sahf
dec
jecxz
insl
sbb
sub
push
dec
fmuls
push
nop
in
inc
xor
int3
push
iret
pop
loop
je
cmpsb
pop
inc
add
add
loope
lds
xchg
xchg
dec
inc
pop
xchg
sbb
ljmp
shr
test
adc
outsl
lret
mov
xchg
push
pop
fdivr
inc
mov
movsb
xchg
incl
ror
outsb
sub
jle
rcr
push
negl
fcompl
sbb
fs
testb
jecxz
cli
stos
lret
ja
sti
fucomp
rcr
dec
in
inc
dec
sub
ss
and
push
inc
in
jo
test
cli
fs
loopne
pop
xchg
push
or
mov
stos
jae
and
cmp
jmp
xchg
xor
ljmp
cwtl
push
xchg
shll
push
int3
mov
movb
push
dec
adc
sbb
repz
scas
sub
loopne
leave
js
sub
jbe
imul
mov
dec
jl
ja
andb
pusha
arpl
std
test
mov
in
es
inc
sub
and
mov
into
add
pop
adc
les
imul
sub
mov
xchg
sbb
jbe
sti
xchg
test
jnp
xchg
rcrl
mov
pop
dec
pushf
push
xchg
lcall
inc
inc
in
pop
add
ret
and
and
add
sahf
xchg
sub
xchg
sub
or
jl
push
daa
pop
in
std
xchg
jp
and
mov
mov
imul
ja
mov
lods
dec
insb
push
sbb
dec
mov
sub
rol
sub
mov
shlb
add
sub
adc
sub
aam
push
cwtl
cmp
xlat
xlat
xor
jns
repnz
out
or
push
fmul
jle
out
jae
jle
fdivr
mov
sbb
fdivrl
movsb
call
out
mov
mov
inc
ficompl
out
adc
mov
and
divl
ret
nop
dec
nop
shll
out
mov
cld
cld
test
test
inc
cwtl
jnp
mov
pop
xchg
mov
jmp
mov
fs
mov
xchg
sub
inc
repnz
cmp
mov
xchg
scas
or
mov
push
cli
or
enter
sahf
in
jp
sbb
sbb
mov
inc
insb
and
or
push
or
movsb
mov
cli
push
sbb
mov
xchg
aaa
sub
out
pop
and
xchg
cmp
shll
add
and
xor
nop
scas
fcompl
jp
sub
shrb
adc
cmp
mov
into
aas
sub
mov
inc
rorl
and
xchg
inc
sbbb
push
test
adc
dec
or
pop
lods
test
outsl
jge
lea
adc
mov
mov
fmulp
dec
mov
insl
dec
into
jmp
out
int
inc
mov
enter
popf
cltd
mov
into
cli
push
not
inc
xor
sti
jge
mov
fwait
push
pop
or
jno
lret
or
add
jne
sbb
js
jns
popa
or
cld
cltd
and
push
jge
fcmovne
lods
add
cli
adc
inc
pop
push
adc
call
jb
xlat
fidivs
and
mov
mov
ds
fisttps
jne
mov
test
cmp
lcall
mov
jo
cmpsb
sbb
inc
in
fwait
xchg
push
fistpll
or
push
gs
shlb
xor
push
jmp
dec
jne
dec
mov
sub
or
mov
inc
insb
ret
adc
test
lret
sub
movsl
inc
mov
push
mov
ljmp
jns
je
xchg
mov
push
push
scas
fwait
and
out
and
lahf
scas
push
negl
cmpl
outsl
mov
cmp
and
idivb
gs
push
dec
movsl
mov
xor
xor
push
cs
in
xchg
repz
lods
add
stc
xor
pop
daa
inc
and
ja
xchg
fmuls
push
rcrl
repnz
gs
sahf
loop
xchg
mov
sbb
roll
mov
adc
rcrb
nop
mov
push
scas
push
mul
jge
pop
cmc
ja
mov
leave
movsb
xchg
jmp
inc
jp
fcmovbe
jo
push
xlat
fwait
and
idivl
mulb
push
in
fimull
fisttps
pop
or
or
pop
jg
faddp
jp
pop
inc
popf
dec
inc
mov
and
or
push
test
rcll
popf
lcall
es
pop
aad
mulb
fwait
xchg
mov
fwait
mov
sbb
add
mov
or
or
and
xor
shll
lods
push
mov
xor
insl
ljmp
push
pushf
sbb
mov
and
sub
mov
mov
iret
fadd
popa
aas
sti
push
jle
std
adc
dec
bnd
push
push
cmp
sub
xor
into
dec
ljmp
fs
iret
rcll
movb
imul
cwtl
jnp
mov
pop
lahf
icebp
imul
outsb
incl
lock
mov
test
std
js
sbb
ds
cmpsb
ja
ja
mov
subl
jg
jno
gs
hlt
sbb
cmp
mov
inc
mov
dec
jb
mov
clc
nop
and
test
mov
xor
fs
cmp
mov
es
jecxz
cmpsb
aas
xchg
and
or
pop
lret
pop
adc
js
fstpt
lahf
cs
js
int
rolb
mov
ja
xchg
push
data16
in
mov
cmpsb
add
sbb
mov
fbstp
es
xor
pop
xchg
ja
orl
pop
lahf
out
and
repz
xchg
call
repnz
add
cmp
sahf
pop
fs
add
pop
adc
fs
ja
insl
ljmp
sub
dec
std
jp
push
sbb
sub
dec
lret
insl
ljmp
sub
dec
std
jp
push
sbb
sub
dec
lret
insl
jmp
lcall
fstpl
dec
std
jp
push
sbb
pop
fimull
jl
insl
out
pop
lcall
and
in
sbb
inc
lds
pop
mov
mov
mov
add
test
rol
loope
icebp
sbb
and
fnsave
gs
fwait
mov
mov
icebp
iret
xchg
test
mov
jecxz
inc
jge
insl
pop
popf
imul
xchg
cltd
mov
push
add
fidivs
fidivl
test
xchg
mov
cmp
aam
sbb
lods
lea
and
xor
movsb
js
dec
leave
dec
mov
je
push
adc
cmp
imul
or
adc
sub
cmp
loope
roll
and
add
jo
push
inc
mov
mov
xchg
pop
dec
pop
rol
loopne
sbb
lret
mov
gs
adc
imul
mov
xchg
lock
push
nop
roll
fadds
mov
lea
jge
mov
movsl
test
mov
cmc
jne
add
cmp
add
mov
pop
push
insl
mov
stc
mov
fldt
cmc
loope
lahf
addr16
jae
jno
dec
pop
cmp
add
hlt
mov
fdivrs
mov
push
jb
out
adc
cs
sbb
push
sbb
rol
leave
cmpsb
xchg
mov
lcall
fs
adc
gs
addl
shl
loope
icebp
adc
and
push
jne
gs
addl
shl
loope
icebp
adc
cmpb
fsubrs
jb
aas
add
inc
xor
xchg
jp
inc
mov
push
pop
jbe
mov
jbe
inc
and
add
jle
mov
push
sub
lods
pop
lds
cwtl
xchg
or
pusha
or
test
stc
enter
xor
and
test
push
add
in
lcall
bound
mov
sbb
fsubrp
jo
mov
cmp
push
xor
xlat
pop
jp
cs
xchg
pop
jecxz
add
sbb
add
xchg
inc
push
xchg
pop
fldcw
xchg
add
inc
or
adc
dec
mov
mov
insb
cmp
fidivrl
xorb
in
in
or
jns
lea
inc
inc
cs
out
pusha
push
pop
cli
lahf
mov
test
and
fisubl
ret
push
jle
mov
arpl
dec
jecxz
movl
loope
push
aad
cld
out
mov
adc
xchg
cs
cmp
or
or
pop
inc
enter
jb
or
das
add
dec
xchg
in
jp
dec
xor
pop
xchg
in
mov
pop
push
clc
sbb
sbb
cmp
mov
stos
push
lea
push
repz
jmp
adc
mov
icebp
ret
js
mov
imul
inc
imul
inc
add
roll
mov
aaa
mov
add
gs
jp
int3
xor
mov
sbb
jecxz
jl
mov
adc
add
or
pop
mov
jae
pop
dec
ds
cld
outsb
dec
repz
test
mov
nop
lods
ds
fadds
cmpsl
dec
out
fcmovb
add
jle
add
sbb
hlt
sbb
jmp
call
adc
mov
insl
fwait
clc
jnp
movsl
in
in
or
ss
call
loope
test
sub
adc
adc
push
xor
push
and
xor
filds
notl
ljmp
popf
add
add
fwait
sbb
mov
jmp
cwtl
push
aas
popf
daa
fcomps
sbb
es
dec
icebp
cmpsl
aas
pop
mov
xchg
mov
sub
xor
cmpsl
and
sarb
or
dec
enter
add
push
sahf
mov
add
xor
adc
call
mov
sub
mov
fistpl
lea
mov
repz
sbb
clc
xchg
ror
mulb
sbb
xor
outsb
divb
scas
adcb
mov
mov
jnp
mov
scas
inc
daa
adc
xchg
push
xlat
cmp
mov
inc
jp
faddl
test
mov
inc
lret
dec
pop
leave
push
add
jns
add
pushf
jl
mov
inc
lds
pop
lods
mov
push
fidivs
dec
cmpb
pop
in
push
push
or
or
add
outsb
lcall
addr16
dec
xor
lea
les
xchg
fbld
mov
or
mov
bnd
jmp
pop
mov
jo
cmp
sbb
ljmp
imul
ret
hlt
lds
adc
pop
movsl
scas
adc
xor
imul
fcoms
test
ss
enter
pop
cli
jl
ljmp
iret
lahf
cmp
add
stc
into
xor
jmp
adc
lea
lret
js
outsb
cltd
int
or
or
pop
mov
test
push
mov
jbe
add
dec
mov
stos
sub
xchg
insl
repz
jp
mov
mov
jne
fmul
pop
cmp
pop
sub
imul
in
into
lds
mov
mov
iret
outsl
fwait
add
dec
and
sbb
movsl
mov
add
mull
test
cmp
test
sbb
cmpb
cld
sub
jmp
dec
push
jns
xchg
mov
add
push
cmpsb
popf
or
ljmp
cmp
or
xlat
in
inc
push
popa
dec
ds
leave
dec
std
mov
pop
fs
lret
sub
adc
push
cmpsb
xor
adc
mov
sub
mov
sbb
mov
shrb
in
push
bswap
sub
and
loopne
lods
or
push
adc
mov
scas
xchg
mov
pop
mov
pop
sub
out
or
out
addr16
fdivrs
outsl
sbb
cltd
lock
stc
cmpsb
lahf
cwtl
jno
mov
adc
mov
pusha
pusha
push
imul
xor
repnz
pop
mov
ja
jo
mov
jns
xchg
add
lods
sbb
inc
cmp
or
jg
xor
push
mov
ret
and
mov
popf
pop
shrl
jle
mov
aad
and
inc
int
push
jl
jno
lahf
aas
sti
daa
dec
inc
rorl
scas
mov
arpl
pop
mov
inc
jle
pop
cmp
jle
push
mov
mov
or
mov
pusha
addl
bound
pop
ret
test
mov
or
mov
cmpsb
cli
xor
add
mov
fcmovb
xor
or
push
pop
sahf
add
push
mov
lret
fnstsw
imul
stc
adc
jb
add
hlt
mov
les
jbe
mov
test
inc
aad
das
inc
rcll
lods
push
cmp
or
xchg
je
repz
cmp
lcall
add
loope
jge
sub
pop
xchg
mov
push
cmpsb
mov
pushf
pop
mov
sbb
cltd
aad
jbe
outsl
test
jge
popf
push
jnp
or
sahf
hlt
pop
fadds
dec
add
mov
les
xchg
pop
mov
sbb
mov
sub
xor
test
jp
sub
dec
mov
xchg
outsl
and
ss
loop
or
jp
push
adc
sub
outsl
xchg
jle
or
in
fnsave
popa
pop
inc
int
out
mov
dec
ja
mov
jp
add
mov
insb
dec
inc
orb
aas
dec
pop
popf
ret
mov
cmp
mov
add
jecxz
enter
mov
call
out
mov
xor
xchg
inc
cmp
outsb
stos
test
jmp
pop
imul
dec
xchg
fs
mov
imulb
ljmp
loop
scas
sub
fcmove
pop
rolb
jge
daa
push
xor
in
jb
jmp
gs
andl
xchg
movsb
jbe
push
mov
imul
test
lds
jg
test
push
lods
inc
and
movsb
js
inc
ljmp
cmp
xchg
and
scas
fwait
xchg
xchg
sbb
adc
sub
push
ror
in
adc
jl
jp
add
pop
push
cmp
out
inc
outsb
out
push
in
xchg
and
cltd
pop
and
xchg
leave
mov
aas
mov
arpl
xor
mov
das
xchg
jl
add
pop
stc
xor
push
loopne
sti
loop
add
pop
push
or
ret
xchg
inc
cmp
sbb
mov
roll
pop
fistl
movsb
daa
jne
or
jl
xlat
mov
lret
push
std
fsub
aam
out
imul
inc
mov
or
mov
cmp
mov
mov
pusha
mov
mov
ss
fs
cmp
fsubs
pop
adc
in
mov
dec
mov
mov
mov
notb
xlat
iret
cmp
pop
lods
ljmp
xchg
out
mov
dec
inc
into
iret
call
outsb
mov
pop
mov
int3
ds
in
mov
clc
adc
mov
cmpsb
xor
push
test
inc
or
dec
inc
sbb
out
repnz
mov
repz
pop
movsb
roll
sub
add
pop
adcl
mov
xor
test
and
jae
sahf
imul
loope
bound
inc
dec
ds
cmpl
xor
imul
icebp
xor
insb
icebp
stos
adc
fildl
or
or
test
arpl
in
in
push
lret
mov
imul
pop
insb
mov
push
xor
ret
testb
das
jnp
sahf
lea
lea
nop
loope
cmp
in
bound
stc
push
push
add
ja
rolb
push
mov
push
aaa
push
xlat
fldcw
inc
xor
aaa
sbb
xor
ds
inc
mov
mov
xlat
jns
lock
add
xor
mov
push
and
sub
mov
and
jle
insl
cmc
nop
fcomip
push
aaa
and
jbe
rorb
pop
outsb
aas
and
jbe
inc
aas
rol
outsb
jae
sub
xchg
and
jo
inc
aam
int3
hlt
stos
fidivrl
pop
hlt
mov
stos
pop
and
addr16
adcl
jp
cld
jns
jge
push
sub
push
and
in
test
adc
icebp
push
push
xor
pop
push
sti
mov
xchg
adc
movsb
icebp
mov
sub
outsl
adc
mov
cltd
jl
sub
stos
out
outsl
sarl
pop
int
jns
xchg
aam
pop
mov
clc
hlt
mov
fsubrl
cmpsb
fistpll
mov
mov
adc
and
dec
xchg
lock
rol
or
stc
jmp
out
rorb
xor
pop
lock
jbe
jne
iret
sub
leave
xchg
shlb
adc
out
push
cmp
call
xchg
jb
cli
mov
jnp
or
cld
jns
xlat
inc
and
fnstenv
lret
dec
fnsave
dec
jno
insl
lcall
adc
pop
ret
out
jne
or
push
inc
int3
stos
mov
add
jle
inc
mov
inc
fidivrs
fsts
sbb
stos
sub
into
mov
push
inc
stos
bound
dec
inc
daa
aad
xchg
shlb
pop
add
push
sbb
scas
or
lock
lret
xor
cmp
and
cwtl
in
xor
out
repnz
dec
cltd
sub
jp
jl
mov
subl
and
xchg
lret
les
fsubs
add
add
repnz
and
aad
icebp
arpl
jae
inc
jne
repz
es
divl
xchg
das
cmpsb
jns
cmp
addl
jnp
pop
es
push
dec
jg
mov
adc
mov
cmp
iret
in
es
lret
daa
daa
fistps
addr16
adc
pop
push
or
lock
push
fnsave
cmc
jo
mov
imul
lock
sub
inc
push
gs
xchg
add
mov
xchg
xchg
mov
or
mov
jecxz
pop
repnz
adc
out
inc
rcrb
dec
mov
inc
or
sahf
ret
and
pop
xchg
call
xorl
rclb
push
mov
jns
sbb
aam
pusha
popa
pop
fbstp
xlat
sbb
enter
nop
xor
sarl
sbb
lock
xchg
mov
imul
mov
fbld
pop
or
stc
cltd
mov
ret
jmp
xchg
mov
enter
cld
inc
icebp
inc
mov
pop
out
push
nop
or
daa
test
ljmp
dec
sub
std
lods
loop
nop
push
sub
push
out
mov
add
or
inc
cmp
test
scas
fwait
adc
mov
mov
cmpsl
or
je
mov
adc
mov
pop
cmpsl
jnp
test
pop
mov
mov
gs
stc
insl
stos
je
pop
loopne
jmp
mov
sub
pop
nop
fdivrl
jle
nop
sbb
scas
setnp
int3
fstpt
sti
ljmp
add
inc
cmp
aas
inc
push
gs
in
lea
pop
imul
fistpll
comiss
inc
and
inc
or
xor
ret
lods
test
adc
xor
xor
test
jg
jae
xor
or
mov
lahf
jnp
test
dec
jmp
lcall
fs
jle
mov
rcll
lret
mov
into
cmp
jnp
test
fcoms
pop
pop
sub
mov
sub
add
or
mov
mov
add
aad
mov
fstpl
add
or
sbb
es
cmp
cmpsl
mov
cmp
jae
in
push
cli
test
jecxz
mov
dec
add
int3
stc
pop
aad
xor
and
dec
adc
mov
pmulhuw
jecxz
adc
nop
xchg
mov
push
call
mov
xor
es
ret
sub
rcll
xchg
adc
out
cmp
mov
outsb
fmul
cmp
enter
fstpl
rcl
lods
xchg
add
lods
lahf
test
pusha
test
dec
inc
mov
addb
and
push
jb
or
arpl
push
sbb
int3
adc
gs
ljmp
imul
stos
adc
mov
jg
icebp
ss
outsl
sub
mov
shl
fnstcw
add
jno
or
insl
mov
adc
pop
lret
scas
push
rorl
inc
rcll
sub
call
pop
mov
insl
loope
scas
lock
adc
jg
in
mov
or
jge
int
push
repnz
dec
dec
lock
mov
dec
pop
jmp
push
les
js
xchg
lahf
jbe
popa
jg
icebp
jnp
frndint
fs
test
sub
out
lcall
fsts
pop
sbbl
stos
movsl
xor
dec
lods
push
mov
ljmp
loope
push
mov
int3
leave
roll
loop
xchg
out
cmc
or
mov
push
push
in
cmp
aaa
dec
jae
loop
cmpsb
mov
inc
ds
sar
jecxz
push
add
add
iret
cltd
lret
loopne
daa
ret
test
xlat
adc
es
idivb
add
pop
jb
inc
outsl
mov
mov
xchg
cmpsl
push
out
mov
or
jl
insb
bound
ja
sti
gs
outsb
cld
xor
test
ja
out
pop
push
push
push
iret
adc
in
sbb
mov
xchg
fcoml
das
mov
std
sub
cmpsl
lods
dec
fidivrl
mov
mov
push
out
in
cwtl
lahf
dec
out
das
subb
fidivrl
ficomps
sub
inc
xchg
inc
rcrl
mov
aam
inc
jg
jo
aaa
or
adc
xor
icebp
hlt
fs
es
les
sbb
sub
sbb
sahf
out
lea
das
paddb
push
mov
outsl
icebp
fiadds
xchg
mov
push
in
mov
mov
loope
sub
jp
pop
mov
jg
jne
orl
call
adc
xor
and
and
dec
jnp
test
popf
jne
adc
dec
lods
push
outsl
or
rcrl
mov
aaa
je
rcrb
arpl
andl
xchg
pop
jno
cli
fidivrl
rcr
rcll
adcl
sub
test
or
cmp
xchg
dec
rolb
xchg
lods
subb
je
jnp
dec
jp
mov
std
xchg
push
pop
hlt
aad
push
cmp
and
jp
test
or
cmp
and
or
scas
data16
iret
shlb
cmpsl
pushf
mov
sbbl
xchg
inc
fwait
inc
cld
stc
mov
fucomp
bound
sbb
jae
pop
lea
and
sbb
movsb
ror
push
repnz
shrb
jno
jecxz
in
xor
sbb
xor
inc
cmc
add
or
jle
call
pop
and
mov
stos
in
cmp
add
call
std
insl
push
pop
outsb
std
push
adc
cwtl
mov
mov
fs
add
adc
push
sbb
sbb
ret
aaa
out
dec
scas
fdivl
push
or
xlat
push
cli
cltd
adc
mov
cmpsb
ljmp
dec
out
and
cmpb
xlat
xor
adc
sub
cli
loope
jnp
fld
sub
jmp
inc
xchg
fisubs
xor
mov
movl
and
mov
push
es
mov
fs
jmp
push
add
js
mov
jae
aam
rolb
xchg
dec
cmpsb
cmpsl
test
repnz
insb
xchg
mov
ja
jb
add
jo
frstor
inc
ljmp
push
subl
adc
push
mov
out
fisubs
movsl
mov
ss
cmp
mov
int3
pop
sbbb
and
inc
fnstcw
xor
or
push
out
sbb
dec
inc
and
in
cmc
and
jns
push
rorl
shrb
sub
lods
inc
push
mov
adc
enter
sbb
mov
mov
jecxz
inc
xor
outsl
cwtl
pop
lock
and
rcl
mov
call
fiaddl
and
lods
cmpb
ret
jecxz
ret
mov
imul
fidivl
add
nopl
xchg
xchg
scas
xor
jnp
inc
popf
insl
aad
sub
aad
int3
inc
inc
into
sub
idivl
add
jne
cmpsl
repnz
inc
movsl
test
movsl
push
and
icebp
inc
pop
hlt
test
or
jb
xchg
pop
jne
xchg
xchg
test
and
subb
push
xor
aaa
cmpsl
mov
inc
xor
push
fimull
sbb
das
mov
arpl
stc
loopne
pop
pop
test
and
pop
loopne
cmp
jb
lods
cld
iret
pop
sbb
fidivrl
in
stos
push
lods
jae
dec
addl
jbe
adc
arpl
movsb
dec
pop
hlt
or
xchg
xor
xorb
dec
adc
push
in
xchg
lods
adc
adcl
stos
out
push
subb
jo
mov
adc
test
imul
mov
mov
daa
imul
fisubl
sbbl
inc
push
push
das
inc
hlt
stc
lds
and
xor
loope
inc
pop
xor
xor
mov
bound
sub
data16
outsl
xor
jl
icebp
sbb
jp
xchg
and
paddsb
rolb
in
sub
and
push
outsl
cs
xchg
aaa
inc
loop
jp
sub
in
mov
enter
adc
popf
sahf
mov
pushf
push
mov
int3
dec
sub
mov
loop
add
iret
nop
loopne
movsb
push
mov
loop
inc
ds
mov
test
jbe
gs
jno
mov
mov
bound
inc
jb
rorl
arpl
dec
pop
cmc
mov
push
fistpll
lcall
out
lods
xor
xlat
sbb
jne
mov
and
loopne
pushf
xchg
or
xor
test
pop
jnp
inc
lods
in
or
ljmp
cld
rcrb
pop
or
lock
lret
xchg
mov
lea
ret
shl
or
push
inc
pop
mov
imul
jae
lret
lds
mov
sub
pop
out
xchg
leave
inc
orl
jb
addr16
cli
xor
dec
gs
lret
inc
daa
xor
rcpps
xchg
push
pop
lret
cmpsb
es
in
pop
outsb
cmpsl
dec
jno
jle
sub
push
adc
outsb
test
mov
sbb
mov
sbb
pop
repnz
push
jmp
je
popa
pusha
mov
push
ss
inc
xchg
xchg
pushfw
add
pop
hlt
cmp
and
cmpl
push
fcmovu
and
mov
nop
mov
sti
lret
arpl
jae
and
gs
jb
pop
test
xchg
adc
xor
addr16
or
insb
jge
fisubl
cwtl
xchg
mov
mov
and
mov
int
in
fucomp
xor
pushl
sbb
lea
xor
jge
test
mov
cmpl
cmp
test
mov
mov
sahf
xor
cmp
push
dec
cli
xlat
mov
push
icebp
jle
loopne
test
mov
add
push
dec
inc
push
sub
or
fsin
jb
loop
lods
rcrl
fdivs
out
divl
cmp
sbb
jle
sbb
es
roll
cld
fdiv
cmp
dec
adc
pop
loopne
push
es
enter
test
test
cwtl
scas
add
inc
fbstp
pop
arpl
jns
cmp
push
inc
inc
push
jne
gs
addl
shl
loope
icebp
adc
and
push
jne
gs
addl
shl
loope
icebp
adc
pop
and
stc
jne
fs
pop
test
aad
icebp
rcl
or
and
push
jne
in
xchg
jle
cmp
mov
dec
or
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
ljmp
or
out
cmp
push
pop
cld
dec
fdivrl
test
or
dec
lret
sub
cmp
or
xor
push
cmp
dec
fdivrl
subb
sbb
mov
mov
push
mov
jp
push
cmp
inc
fidivrl
gs
mov
ljmp
and
imul
ss
mov
jae
xlat
scas
outsl
addr16
mov
repz
movlps
mov
mov
repnz
jmp
aad
stos
lods
mov
cld
incl
in
cmp
or
mov
test
inc
cltd
pop
dec
pop
cmp
dec
es
mov
int3
mov
pop
xor
xor
jae
loopne
mov
fbld
lcall
stos
or
sub
movb
fcomip
adc
xchg
ljmp
arpl
bound
test
mov
les
stc
sbb
mulb
cmp
pop
mov
or
mov
push
pop
into
dec
loopne
nop
sub
xchg
or
mov
test
stc
mov
push
fnstsw
pop
adc
cs
ja
jle
movsl
sub
xor
jle
outsb
lcall
mov
sahf
das
in
jno
pop
mov
mov
les
pusha
stos
cmp
or
sbb
in
push
pop
int3
dec
fdivrl
lods
sub
insb
ljmp
sub
cmp
or
sbb
in
push
pop
int3
dec
fdivrl
lods
sub
insb
out
sub
cwtl
mov
dec
mov
and
xor
cmp
pop
add
scas
push
int3
imul
ss
add
out
inc
aad
dec
sbb
stc
je
lahf
fmuls
out
pop
dec
push
outsl
xor
xor
cmpb
inc
prefetchwt1
xchg
and
and
aas
jne
pop
enter
stc
push
push
ljmp
jbe
mov
mov
idivl
aam
in
rorl
fidivl
cmp
mov
aas
test
mov
iret
jae
repnz
mov
out
lock
dec
xchg
clc
mov
cmpsb
test
and
jmp
lds
push
and
es
int
inc
jo
cmp
pusha
ss
xchg
pop
inc
and
xor
add
stc
mov
lret
add
cmp
int
out
add
push
xchg
jp
rcrl
bound
es
inc
pop
xchg
xor
cmpsl
push
mov
fists
jno
xchg
add
leave
gs
es
or
push
addr16
xor
push
jle
inc
shll
fld
or
cmp
xor
inc
repz
cmp
xor
jg
sbbl
cli
pop
sti
lods
cmp
inc
js
dec
xor
sub
or
xor
aad
pop
cwtl
outsb
loop
mov
jle
and
push
add
aam
aaa
nop
in
jg
ljmp
sbb
xor
mov
inc
loope
sahf
cmp
stos
push
lea
push
rclb
or
sub
cmp
iret
out
mov
jmp
subb
rcrb
push
dec
in
xor
sahf
jno
js
jle
lock
push
xchg
imul
imul
stos
sub
cmpsb
mov
fiadds
cmp
xchg
jge
cmp
dec
jb
jne
pop
pop
mov
add
cli
adc
xchg
movsw
add
out
lods
daa
jmpw
adc
fwait
or
push
ja
arpl
in
cmpb
adc
cmp
pop
dec
cld
push
push
scas
push
mov
push
in
daa
out
jo
cmp
lret
scas
out
add
xlat
test
ret
push
pop
pushf
pop
push
aam
xlat
mov
iret
jae
in
adc
xor
xor
lods
jge
push
lods
or
out
bound
insb
lds
lock
inc
fimuls
iret
or
fisubs
hlt
mov
xchg
das
sbb
and
jge
fwait
dec
cli
jecxz
adc
sub
pop
shll
shr
sub
or
dec
out
cmp
les
cmpsl
and
fs
addr16
mov
jbe
cmp
loop
push
mov
inc
pop
int3
sub
outsb
call
adc
adc
mov
int3
mov
insb
mov
push
mov
add
dec
mov
int
sbb
gs
loopne
hlt
jb
test
aas
dec
mov
adc
in
int
in
xchg
jmp
rol
bound
add
dec
out
in
arpl
notl
jo
xchg
lcall
jmp
jp
js
in
inc
inc
scas
cmp
inc
cli
mov
jmp
fadds
lods
notb
or
cli
sbb
mov
fbstp
cmpsl
sub
push
call
xchg
bound
lds
push
mov
sbb
cmp
aas
aam
add
es
fs
in
test
shrb
sub
jbe
pop
xchg
cmpsl
or
mov
pushf
jecxz
mov
scas
push
shll
repnz
and
adc
or
xchg
mov
sahf
and
int
jmp
or
xor
mov
out
add
loop
push
fcomi
sub
cmp
pop
xor
sub
sbb
adc
mov
lock
jmp
add
adc
in
in
and
and
mov
sub
cmp
inc
xchg
call
les
pop
sbbl
jb
test
insb
mov
ss
movsl
jno
test
mov
std
aad
sti
dec
in
movsl
xchg
push
dec
xlat
scas
xorl
gs
inc
ret
stc
lcall
cmpsl
xlat
or
iret
lcall
sub
inc
inc
cltd
repnz
mov
out
pop
sahf
icebp
inc
lret
xor
dec
loopne
movsl
dec
mov
dec
out
mov
pop
xchg
int3
cmc
jb
xchg
push
aam
mov
sbb
imul
jmp
in
mov
ds
imul
cmp
mov
push
dec
cld
mov
pop
push
aad
xor
out
scas
and
add
in
push
arpl
mov
mov
adc
cltd
je
lahf
fisubrs
outsb
xchg
inc
imul
jg
or
or
pop
mov
xor
addl
pminub
mov
push
fcmovnb
lds
mov
add
or
pop
and
repz
in
dec
jge
xor
test
mov
add
sbb
mov
pop
pop
push
sub
scas
jecxz
add
push
cs
notl
jle
add
jge
dec
aad
xchg
sbb
xchg
jmp
out
lret
cs
aaa
add
and
mov
xchg
daa
sbb
sbb
inc
fisttpl
push
inc
mov
adc
and
insb
aas
inc
je
pop
jbe
es
cld
sbb
aam
std
icebp
add
and
sbb
sti
jmp
daa
jns
test
pop
lods
in
push
xchg
clc
jo
xchg
inc
mov
add
sbb
sbb
jp
fistl
adc
notb
mov
call
adc
sbb
out
das
mov
and
ljmp
mov
xchg
subw
jns
jl
stos
jbe
lret
pop
or
mov
mov
sbb
pop
outsl
test
push
dec
int
adc
mov
adc
popa
popf
js
mov
add
insb
in
jo
sub
shll
add
mov
icebp
test
incl
dec
sub
repnz
test
es
addr16
ret
xchg
popf
inc
cmc
hlt
or
lret
xchg
popa
ret
bnd
std
cmp
int3
or
fstpt
ffree
fnstsw
xor
push
insb
dec
or
das
pop
push
stc
imul
xchg
mov
jecxz
mov
jo
xor
sarb
xlat
loope
cld
ja
jo
je
mov
ljmp
cmp
outsl
or
testl
out
cmpb
insb
push
adc
je
lods
ss
or
adc
push
lods
sbb
dec
subb
fdivr
pop
push
sub
std
or
inc
ret
dec
mov
cmp
test
push
inc
les
adc
ja
mov
push
push
jae
dec
mov
push
dec
cmpsl
lret
icebp
test
dec
inc
mov
out
jmp
iret
cmp
sub
and
mov
mov
insl
mov
jl
push
adc
sbb
or
mov
pop
dec
insb
daa
movsl
xor
push
pop
andb
jo
outsb
divb
jmp
xor
cld
insb
ja
mov
cmp
fs
iret
and
dec
ja
lret
sahf
mov
loopne
insl
xor
cmc
scas
jbe
add
fdivrs
xor
mov
cmpsb
cli
sub
cwtl
imul
fs
mov
adc
or
andl
fs
fiaddl
daa
cmp
push
ret
out
jmp
sub
outsw
ror
movsb
loope
pop
adc
arpl
neg
in
movsl
xor
mov
test
mov
and
dec
lret
mov
gs
adc
mov
pusha
std
and
call
loopne
jmp
ficoms
daa
rcll
cmp
jecxz
pushf
jno
dec
mov
inc
popa
jge
push
mov
xchg
jp
fdivrl
popa
imul
outsb
test
movsb
mov
mov
sub
andnps
ud2
enter
and
add
jns
test
mov
cmp
mov
adc
loop
sbb
sbb
fcoml
shlb
insb
fdivs
mov
adc
and
outsl
jl
ret
push
in
pop
xchg
ds
xor
pop
xor
std
mov
call
push
mov
aas
inc
inc
pop
lods
int3
mov
mov
inc
icebp
scas
ljmp
mov
push
and
loopne
add
sarl
inc
fcmovbe
dec
fsubs
adc
pop
xor
scas
test
popa
mov
cmp
out
add
or
and
mov
in
test
inc
nop
pop
mov
fs
adcb
ja
aas
jge
and
sub
int
and
jge
inc
loope
mov
js
cli
jbe
shl
je
pop
cmp
cmp
jb
adc
mov
div
outsb
ss
mov
fbstp
dec
xorb
movsl
xchg
xchg
test
push
out
test
xlat
adc
or
es
sub
push
test
fsubp
mov
push
aaa
lret
sbb
pop
loopne
aas
pop
xor
out
out
sub
cmpsb
inc
jnp
jns
repz
dec
jl
push
jl
add
fnsave
pop
adc
mov
in
pop
inc
jp
daa
cltd
fs
lret
fisttps
dec
inc
sbb
iret
xor
jbe
push
js
mov
xchg
dec
mov
mov
xchg
xchg
xorb
or
pop
jnp
push
pusha
dec
mov
push
adc
mov
stos
stos
mov
mov
fildll
jmp
icebp
jnp
js
add
push
push
cmp
adc
and
mov
pop
xor
mov
mov
mov
pushf
fs
sub
subl
or
adc
shll
mov
testb
or
ja
add
and
fcoml
cwtl
iret
or
mov
sahf
lods
sbb
push
lods
mov
fldl2e
js
loop
cmp
cmpsl
ret
xchg
sub
adc
xchg
xchg
lock
lahf
sbb
add
aad
pop
mov
xchg
and
jbe
sbb
xchg
xchg
addr16
add
leave
mov
add
outsl
fs
and
xor
imul
xchg
adc
push
mov
out
push
adc
sub
mov
push
inc
pop
les
and
pop
rorl
iret
es
shlb
mov
dec
aad
ss
fbld
xor
icebp
jb
mov
aas
sub
stc
fwait
cmc
sub
test
cmpsl
test
lock
fisttpll
addr16
repz
loope
mov
and
cmpsb
xor
movsb
sbb
or
cmp
jp
push
das
shll
mov
xchg
cld
adc
adc
aas
std
mov
mov
push
adc
push
mov
stos
pop
jecxz
push
mov
ss
lcall
fiadds
sbb
jae
pushf
xor
ret
jle
pop
sahf
cmc
incl
ficoms
push
cmc
stos
imul
or
adc
dec
aam
sub
xchg
shl
rolb
sub
in
ficomps
negl
push
cmp
xor
adc
in
mov
mov
or
push
push
mov
cs
out
sub
ljmp
test
sbb
aaa
sub
push
mov
pop
test
scas
imul
push
jl
jg
sbb
add
subl
insl
mov
cmp
or
lds
or
and
repnz
enter
mov
and
dec
inc
test
out
arpl
clc
and
mov
xchg
int
inc
hlt
fs
cmp
xor
stc
dec
and
cltd
adc
mov
and
mov
push
xor
xlat
add
dec
imul
pop
fdiv
faddl
pop
lock
sbb
nop
addr16
dec
push
es
cltd
test
adc
xchg
test
inc
stos
mov
or
xchg
lret
loopne
icebp
mov
popa
popf
ja
cmp
pop
inc
or
dec
adc
int
out
ja
push
cmc
mov
adc
cmpl
cltd
mov
fnstcw
xchg
jns
and
ja
sub
pop
xchg
pushf
pop
mov
push
jae
nop
mov
adc
mov
fstp
xor
lret
adc
sbb
mov
dec
imul
std
mov
and
pop
lcall
cmp
loopne
mov
test
test
inc
sbb
add
or
out
pop
jb
inc
test
jo
popf
sbbb
jmp
dec
push
sub
xchg
out
xchg
inc
cmp
and
xor
in
int
sbb
into
mov
pusha
lret
mov
mov
fsub
mov
cmp
mov
pusha
test
shl
sub
xor
pushw
mov
mov
mov
push
sub
mov
xorl
or
pop
das
or
cld
daa
jb
jp
fcmovb
stos
test
popa
sbb
dec
lock
sub
sub
mov
repnz
aas
int3
mov
push
jg
ss
dec
out
outsb
mov
sbb
ret
imull
cld
jnp
mov
jns
jmp
in
xchg
scas
mov
sbb
xor
rclb
jae
jl
repnz
mov
jg
adc
push
xor
shrl
jmp
lcall
and
insl
xchg
inc
rcrl
insb
push
sbb
pop
mov
out
rcll
add
dec
and
in
push
mov
push
dec
cs
jne
stos
pop
mov
pusha
xchg
sbb
rol
aad
jge
je
mov
inc
mov
aas
jl
sbb
leave
dec
xchg
int3
mov
cmp
xchg
ja
mov
loopne
insl
add
cmpsl
jecxz
fstps
mov
cli
test
lods
lret
or
dec
xchg
xor
mov
loope
in
outsb
or
icebp
out
add
or
bound
sarb
xor
int
jbe
mov
loopne
jno
inc
adc
pop
dec
jp
cmp
mov
pop
loop
mov
popf
xchg
sbb
push
mov
cld
nop
sub
sbb
lods
repnz
add
and
mov
dec
sbb
test
inc
int3
mov
aas
outsb
pop
std
sub
js
add
cmp
cwtl
lock
sbb
pop
aas
leave
inc
sbb
xor
add
cwtl
xlat
pop
and
adc
jg
mov
sub
cmc
insl
inc
or
jbe
fs
adc
fistl
push
pop
jg
in
adc
pusha
inc
scas
iret
or
xorl
or
sarl
mov
pop
test
out
xchg
push
mov
push
test
pop
inc
inc
xchg
cltd
jbe
outsb
pop
mov
das
nop
ss
je
les
call
fdivs
adc
notb
pushf
inc
cwtl
pop
pusha
dec
mov
mov
add
push
adc
fisttps
mov
insl
pop
add
icebp
mov
cmpsl
inc
jno
add
aad
pop
push
mov
or
hlt
inc
cmp
jle
push
cmpsb
mov
inc
mov
jnp
mov
dec
add
call
push
movsl
call
ja
popa
into
push
out
mov
jno
iret
fldl
add
mov
enter
adc
xor
sbb
popf
cs
xchg
das
sarl
test
out
mov
fsubl
fiaddl
sbb
gs
notb
mov
loop
inc
jle
jmp
insl
into
outsb
and
aaa
in
in
xor
stos
mov
mov
test
pop
cmpsl
fsubl
das
xor
inc
daa
repz
jo
scas
js
jo
shr
stos
mov
out
data16
push
std
cmp
int3
sbb
sbb
mov
fdivl
jno
xchg
sub
xchg
add
xor
mov
cmp
sahf
push
repz
push
lds
mov
pop
mov
dec
jmp
jle
cld
ror
mov
js
sub
push
push
push
ffreep
add
cmp
sahf
inc
inc
std
or
orb
out
sbb
adc
cli
rcrl
xchg
iret
daa
add
lea
push
int3
int
or
cmp
in
push
jmp
xchg
cwtl
mov
test
sahf
inc
mov
sub
push
mov
cmp
lret
adc
enter
aad
icebp
jg
leave
sti
mov
sar
pop
mov
ret
mov
mov
pop
cld
out
mov
inc
jecxz
adc
out
bswap
mov
fbld
cmp
sarb
inc
mov
mov
pop
bound
ret
sbb
cmp
push
jg
int
push
xor
mov
cmp
inc
jg
add
inc
push
shll
fsubr
adc
loop,pt
mov
movsl
dec
ret
arpl
dec
push
fdivrl
and
dec
jo
js
mov
jg
fwait
mov
and
lret
ss
insl
lods
aam
push
out
or
mov
ja
icebp
adc
cmp
jns
lea
imul
movsl
pop
repz
jg
shlb
push
test
call
imul
mov
in
mov
sbb
testb
divb
mov
or
xchg
cs
cld
cli
fistl
mov
fidivs
cmp
rcll
ret
in
mov
mov
cltd
shll
jg
or
xchg
ficomps
mov
push
push
loopne
add
and
sti
lods
rolb
sub
fdivrp
bound
fsubrs
je
data16
mov
adc
pop
ret
add
lsl
fcoms
popa
ds
lcall
or
push
jne
xor
adcb
adcl
push
xor
pop
cwtl
test
mov
test
lahf
stos
xchg
inc
mov
mov
mov
iret
enter
fldenv
mov
fiadds
mov
dec
ljmp
pop
orl
xor
inc
dec
mov
and
pusha
adc
pop
in
or
pop
sub
xor
sarb
js
adc
sarb
jns
add
mov
push
inc
popa
mov
insl
clc
inc
lods
push
addb
push
push
xchg
inc
lods
push
pushl
pushf
shl
dec
fst
loop
or
cmp
jmp
loopne
add
xor
jle
les
and
sub
out
jge
jl
out
sahf
add
fisttpll
and
jns
and
push
mov
push
adc
loopne
dec
repz
sbb
fbld
lret
mov
lods
ret
jge
xor
popa
jp
repnz
add
xchg
or
add
add
xor
push
test
cli
fwait
mov
mov
mov
mov
cmp
test
incb
inc
mov
mov
or
lock
nop
gs
out
out
xor
jle
add
lcall
jg
lock
orb
pop
ja
dec
clc
xor
js
cmpsb
pop
lret
imul
insl
cmp
movsl
dec
mov
adc
incb
cmpsb
ret
insl
ret
pop
jmp
jl
rol
mov
insl
bndldx
jmp
mov
lods
pop
scas
imul
xor
cmove
smsw
mov
mov
test
inc
movsb
xchg
imul
add
pop
bound
inc
mov
mov
cltd
dec
pop
bound
stos
and
xor
pop
daa
and
mov
test
adc
jg
push
pop
pop
test
mov
lods
xor
mov
das
lret
cmpsb
dec
inc
out
xchg
sbb
pusha
xchg
pop
js
dec
mov
mov
adc
cwtl
cmp
jmp
jecxz
fisubs
clc
mov
sar
xchg
sub
mov
aaa
loop
scas
sbb
cmp
push
in
and
cld
aam
xchg
sub
in
push
mov
xor
dec
es
es
xor
inc
loop
xchg
fwait
sub
mov
out
adc
and
sub
lock
sub
pop
and
lea
dec
dec
mov
leave
jmp
test
cwtl
cli
outsl
fistps
and
push
mov
in
sub
lea
and
addr16
movsb
fdivrl
add
dec
inc
pop
arpl
sbb
lea
jae
test
mov
jnp
fadd
add
clc
sahf
inc
xchg
push
xabort
sarb
adc
jb
push
mov
sti
add
sbb
jo
out
push
aam
rclb
dec
xor
inc
jmp
jne
lods
jb
pop
dec
mov
dec
mov
adc
push
adc
add
imul
call
loopne
js
pop
iret
sub
enter
insl
icebp
jecxz
jg
sbb
xchg
mov
cmp
xchg
or
arpl
dec
dec
lret
sub
cmp
or
sbb
in
push
pop
int3
dec
fdivrl
lods
sub
insb
ljmp
sub
cmp
or
sbb
in
push
pop
int3
dec
fdivrl
lods
sub
push
lret
sub
push
lcall
clc
pop
int3
dec
aad
test
mov
sti
mov
cwtl
fldt
stos
cmp
mov
push
lock
dec
stos
dec
aam
in
cmc
in
repz
sub
cmp
insl
sbb
js
daa
jl
mov
mov
fdivr
enter
sub
sub
cmp
dec
push
jl
mov
mov
fsubr
enter
xor
xor
and
inc
je
mov
cmpsb
hlt
frndint
mov
stos
mov
sub
pop
data16
mov
mov
inc
pop
push
pop
push
test
ljmp
cmpsl
cmp
pop
sbb
mov
jno
push
je
mov
mov
mov
repz
sbb
dec
sbb
mov
adc
pop
fsubrl
cld
call
sub
or
insb
jge
mov
dec
orl
inc
jge
mov
xchg
fdivs
std
inc
sarl
insb
test
dec
cmp
jge
add
jmp
jmp
add
add
cld
push
sub
test
push
arpl
inc
lea
addr16
clc
test
clc
or
or
cmp
es
jne
mov
mov
movsl
loopne
lock
fsubr
rcrl
jge
insb
cmp
pop
add
in
stc
out
xchg
mov
lods
xchg
cmp
jge
or
or
push
outsb
xor
or
std
fstp
std
lcall
or
push
dec
sbb
dec
or
and
pop
insb
dec
jl
mov
mov
fsubr
enter
sub
sub
cmp
dec
push
jl
mov
mov
fsubr
enter
jmp
inc
or
inc
cmp
rclb
xchg
xchg
sbb
mull
mov
cmc
aad
gs
cmc
xchg
inc
ss
or
cli
and
neg
roll
add
dec
bound
and
add
test
dec
ds
adc
rcl
cmpl
fcomi
xlat
lock
xor
dec
mov
loop
rol
les
mov
jl
test
jbe
xchg
cs
mov
daa
fsubs
ja
fidivl
dec
pop
test
sub
jne
adc
sub
repnz
xchg
mov
sti
rclb
xchg
push
mov
mov
dec
xchg
daa
js
adc
iret
and
mov
mov
cmp
xor
pop
loope
xchg
scas
cmp
push
dec
inc
fidivs
icebp
psadbw
push
mov
pop
xlat
or
jecxz
xchg
inc
mov
mov
dec
mov
test
xor
push
xchg
arpl
cmp
repz
mov
sub
add
shlb
popa
sahf
cmp
mov
dec
lret
jnp
hlt
inc
or
inc
add
inc
sub
push
cmpl
mov
jb
addr16
mov
xchg
and
inc
test
mov
test
add
popa
iret
adc
dec
add
push
mov
insl
cmc
inc
cmc
sbb
xchg
cmp
mov
roll
sbb
insb
movsb
scas
jnp
mov
cmp
mov
mov
xchg
inc
mov
push
xor
and
test
mov
push
pop
pop
mov
mov
outsl
cmp
data16
daa
stc
shlb
mov
negb
sub
mov
int3
out
insl
in
xchg
aam
mov
loopne
adc
rcrl
test
jp
jle,pt
pop
inc
lds
jge
ss
pop
arpl
mov
cmc
daa
mov
adc
sub
scas
cmc
dec
fs
stc
mov
mov
add
repz
sub
xor
sub
push
jae
shl
aas
xor
jnp
cltd
jbe
dec
loope
mov
fldl
or
cmpsb
pop
out
cli
test
mov
cld
dec
sub
xlat
outsb
iret
jp
jnp
jecxz
add
out
sub
addb
jecxz
inc
mov
icebp
rcrl
mov
addb
inc
dec
sahf
cld
in
cmp
sahf
push
push
andl
mov
iret
push
mov
jmp
shlb
loopne
std
out
mov
jg
icebp
xchg
jns
mov
inc
shrl
sub
cwtl
imul
icebp
popf
xor
pop
push
adc
adc
dec
pop
mov
sahf
mov
sub
scas
cmp
lds
mov
cmp
icebp
ss
mov
pop
shlb
mov
cmpsb
xor
sbb
add
mov
xchg
div
inc
aam
loop
xor
ljmp
push
clc
mulb
inc
or
pop
clc
aas
push
mov
lea
cmp
stos
pop
pop
push
mov
nop
push
sbb
mov
push
bswap
aad
fstps
lods
mov
xchg
repz
bound
cmp
lock
push
lock
push
pushf
pop
inc
loop
cltd
sarb
xchg
mov
in
scas
jmp
and
or
pop
dec
sub
lds
mov
addl
and
push
cmp
xor
setne
lret
bnd
mov
aaa
mov
ds
inc
sti
inc
and
out
in
jbe
inc
js
icebp
xor
out
notb
or
mov
inc
cmp
mov
ret
cwtl
mov
inc
push
repz
xor
xlat
mov
xchg
or
aas
andb
sbb
movsb
es
leave
mov
pushf
testb
or
pop
out
inc
dec
loop
push
jmp
sahf
movb
lods
push
lcall
fdiv
mov
ljmp
es
xchg
sbb
aam
mov
ljmp
imul
pop
je
pop
into
cmp
es
shlb
adc
mov
xchg
mov
cmpsb
adc
filds
loope
in
jl
xor
test
inc
mov
je
int
scas
mov
fs
ds
or
scas
push
push
sbb
sbbl
mov
arpl
pop
or
inc
in
cltd
dec
jecxz
aas
sahf
ljmp
mov
xchg
push
sbb
loop
ja
lret
push
fstps
stc
test
adc
out
push
and
mov
das
loope
js
push
push
insb
push
out
arpl
out
cmp
cwtl
xchg
cwtl
xchg
pusha
insb
cmp
pop
cwtl
insb
inc
test
aam
mov
dec
pushf
push
scas
mov
cmp
jo
pop
or
mov
mull
aaa
or
add
mov
sbb
ja
push
push
repz
lret
lods
out
xlat
and
sbb
lea
jb
and
jp
inc
cmp
faddp
xchg
adc
jbe
std
xchg
push
es
repnz
xchg
insb
xchg
dec
jmp
into
popa
add
add
in
mov
and
stos
addb
push
jge
lock
mov
cmpb
fmul
testb
dec
mov
sbb
mov
loope
scas
gs
adc
pop
subb
das
lock
daa
add
loope
les
sbb
xor
into
js
wrmsr
ss
xor
pop
xor
scas
adc
test
rcl
out
faddl
gs
call
mov
scas
mov
jnp
into
insl
cli
pop
pop
shlb
mov
aas
add
fadds
aam
dec
mov
cld
es
mov
xchg
repnz
das
fisttpll
xlat
pop
ds
rcrb
mov
jg
scas
ficoml
icebp
addr16
test
cmp
mov
fidivl
lods
jae
dec
pop
lea
sahf
mov
push
inc
and
outsb
sub
in
push
imul
and
push
mov
pop
iret
inc
push
shlb
xchg
xor
std
or
inc
shl
sbb
pop
xchg
adc
xorb
push
jmp
movsl
popa
mov
mov
shlb
fdivr
clc
pop
lods
push
shlb
lahf
fsubl
icebp
push
sub
and
notb
out
idivl
add
repz
lahf
xchg
push
cltd
cmp
dec
je
lea
sub
int
pop
or
imulb
mov
sbb
movsb
testl
dec
mov
aas
sbb
ficoms
out
pop
dec
and
lret
mov
popa
clc
xchg
pushf
dec
sub
insb
leave
call
xchg
sbb
mov
xor
aaa
lods
popa
lret
jnp
sbb
mov
dec
imul
or
sbb
je
aam
mov
push
fs
sub
or
jg
and
push
inc
rcrl
adc
mov
insb
push
or
leave
add
mov
xchg
insl
insb
in
ds
mov
fidivrs
mov
lea
dec
sbb
mov
jbe
mov
cli
inc
mov
add
mov
mov
sub
dec
xchg
cmp
add
or
fstl
movsl
ret
mov
pop
push
sub
xchg
jae
js
mov
or
dec
sahf
cltd
leave
xchg
shll
push
repz
stc
cltd
rclb
daa
enter
push
pop
aas
into
jb
movsl
ja
add
je
pop
mulb
mov
dec
jl
mov
ret
out
xchg
repnz
incb
adc
daa
and
fildll
sbb
push
je
in
jle
nop
out
mov
dec
jecxz
stos
mov
xor
push
and
adc
loopne
push
repz
pop
mull
stos
nop
mov
pushf
lds
std
rorl
xchg
dec
dec
iret
sbb
sub
jp
shr
je
fistpl
mov
push
mov
stos
mov
dec
or
mov
loope
out
aaa
jnp
pop
in
and
push
stos
mov
sahf
in
mov
jbe
push
loop
push
inc
lea
pop
inc
sub
dec
aaa
out
std
pop
and
mov
mov
xor
pop
xor
js
jecxz
mov
sbb
imul
sbbb
sbb
popa
xchg
popa
jp
push
mov
sarl
sub
addr16
and
sbb
lea
loop
mov
call
ret
out
popf
lea
cmpsb
jae
shll
inc
push
add
insl
mov
adc
push
loop
sub
mov
xorl
gs
dec
negl
inc
push
sub
pop
mov
outsb
xchg
cld
repnz
cmp
scas
or
xor
xor
stos
gs
and
mov
cmpsl
pop
stos
inc
dec
mov
dec
out
imul
mov
jge
andl
lea
inc
shr
cmp
add
in
popf
push
add
sbb
lea
cmp
ljmp
jmp
mov
stos
fidivl
std
push
sbb
fcoms
lret
shrl
jo
dec
mov
fadds
dec
outsb
xchg
int
stos
xor
dec
dec
jo
or
lock
cmp
fwait
mov
stos
test
adc
mov
adc
adc
dec
out
fwait
xchg
inc
xchg
sti
pushf
xor
inc
outsl
cmp
pop
out
jns
popa
lock
jae
mov
pushf
ds
int3
outsl
outsb
jle
enter
ret
outsl
insb
mov
cmp
loope
pop
inc
fwait
test
popaw
or
xor
add
adc
xchg
and
aam
in
lods
mov
adc
insl
inc
mov
mov
stos
and
push
aam
and
xlat
xchg
xchg
js
inc
adc
pop
adc
cmp
loopne
adc
adc
push
xor
fld
mov
sub
loope
mov
mov
loop
pushf
cmp
ret
std
mov
pop
cmpl
xchg
sub
outsl
and
outsl
adc
or
push
and
mov
nop
test
jnp
loopne
xchg
pop
or
sub
mov
hlt
outsb
add
pop
jl
adc
lods
jae
jp
fnsave
stos
add
fsts
xor
add
repnz
icebp
fiaddl
fistl
cmp
xchg
fiadds
pop
mov
outsl
sub
aad
mov
int
rorl
je
push
push
fsubrs
fildl
and
xchg
repnz
popa
pop
push
xchg
pop
pop
mov
sbb
das
jle
std
cmp
xlat
pop
dec
xchg
fwait
ret
jo
mov
icebp
add
insb
loope
les
add
stos
aam
sbb
shll
fldcw
sub
sbb
mov
jecxz
imul
adc
out
in
dec
push
dec
inc
mov
fmull
bnd
jo
mov
or
push
sub
pop
cld
insb
jae
pop
fwait
inc
popa
mov
sbb
daa
xor
pop
pop
mov
push
mov
mov
pushf
mov
inc
jmp
out
push
adc
or
pop
and
jno
jp
cmp
stc
sub
jne
repz
fcoms
mov
out
in
and
xchg
jle
lcall
jecxz
sbb
cmp
ret
cmp
insb
jge
repz
and
pop
icebp
xchg
push
pop
sarb
daa
cmpsl
and
add
sub
das
rcll
jmp
cltd
jmp
dec
mov
push
inc
jge
fidivrs
aad
adc
in
xor
xchg
out
sbb
pushf
lret
sbb
test
sbb
push
popa
push
sub
sub
lock
jnp
dec
mov
cltd
ss
roll
adc
pushf
cmpsb
jb
pushf
jns
push
add
movsl
clc
dec
pop
test
aas
addr16
jo
lcall
lods
in
outsb
inc
jge
jo
shll
std
call
pop
fucomip
loopne
test
lods
pop
pushf
out
mov
iret
sbbl
es
push
orl
add
stc
mov
rolb
loopne
std
lahf
jle
or
out
add
fcomp
adc
sbb
inc
xor
outsb
shll
adc
cs
bound
sahf
leave
lock
rolb
stos
xchg
ret
fnsave
push
push
cmp
cmpsl
dec
mull
insl
out
jo
shl
pusha
imul
adc
sahf
cmp
jmp
icebp
shlb
fxch
sub
leave
cmp
andl
out
and
mov
fildll
cli
dec
rol
dec
mov
sub
lret
scas
sub
lea
xor
lcall
mov
xor
ds
xor
out
test
jg
dec
mov
mov
mov
repz
push
mov
xchg
cmp
mov
adc
sarb
push
mov
movsl
xchg
fistpl
mov
xchg
dec
push
pop
mov
popa
add
lcall
mov
in
imul
adc
loop
add
pop
xor
cmp
sbb
lahf
std
minps
rcrb
js
lods
pop
lods
adc
inc
movl
lods
push
fdivrs
out
imul
hlt
push
add
sub
mov
imul
sub
xor
add
xor
fsubrs
jae
add
dec
stos
inc
clc
xlat
dec
test
out
int3
pop
fnstsw
inc
adcb
and
xor
sub
insl
sub
adc
adc
push
and
in
sbb
sub
mov
ljmp
push
pop
call
mov
jmp
icebp
xor
mov
pop
jne
movsb
xchg
push
insb
pop
mov
dec
icebp
test
jno
xor
pop
inc
iret
and
fs
jb
aaa
inc
push
push
pop
in
pop
jne
dec
jmp
ficomps
loope
aas
out
sub
mov
mov
mov
test
sbb
lock
xchg
lcall
ljmp
in
xchg
sub
jg
dec
popa
add
adc
out
add
mov
lret
aad
mov
mov
movl
pop
mov
fimull
push
out
repnz
stos
inc
inc
addr16
pushf
and
scas
or
and
adc
jmp
cwtl
pop
or
push
fwait
test
push
xchg
pusha
mov
or
jnp
lahf
and
push
xchg
lods
inc
inc
imul
xor
popa
sbb
test
pop
mov
cmpsl
test
call
adc
cmp
ljmp
inc
cltd
cltd
scas
idivl
push
les
pop
fcomip
mov
mov
mov
mov
lret
fs
push
xchg
cwtl
cmp
out
cmp
xchg
mov
pop
mov
shrl
fucomi
inc
push
loopne
mov
jl
adc
fwait
mov
ja,pn
add
mov
aaa
ja
push
or
ja
out
xchg
es
stos
sbb
outsl
rclb
outsl
cmp
popa
mov
les
and
sahf
stc
mov
mov
cmp
or
ficomps
addr16
in
cli
xor
inc
loopne
sub
aad
adc
stos
push
movl
mov
inc
or
sub
insl
jb
subl
je
enter
loop
inc
pop
ret
xchg
cmpsl
or
stos
test
push
inc
addl
sub
aaa
xor
jge
mov
shll
inc
jo
xchg
es
cmpsb
xchg
lea
cs
bound
pop
popa
jb
out
sahf
mov
hlt
nop
hlt
test
div
cmpsl
lea
cs
dec
in
jl
inc
loop
mov
cmp
lret
xchg
cli
fiadds
popa
xchg
outsl
jno
cmpsb
add
inc
insl
pop
int
jb
xlat
iret
int3
sub
call
or
push
je
daa
clc
mov
inc
into
nop
mov
jecxz
arpl
or
mov
cs
enter
adc
int
jecxz
and
ljmp
loop
mov
and
fidivrl
in
sub
ljmp
sub
into
cltd
shufps
jle
call
inc
push
xchg
in
mov
push
jae
popf
pop
mov
aad
dec
stos
add
es
fisubl
cmp
icebp
orl
mov
cld
enter
test
xchg
ret
dec
nop
out
xchg
mov
lcall
and
push
les
push
pop
sahf
jbe
mov
lods
popl
ficoms
into
mov
and
out
xchg
push
out
cmp
test
daa
ja
enter
fistpl
jge
ljmp
or
sub
inc
ss
int3
dec
inc
mov
movsb
adc
sbb
test
in
mov
xor
jp
cmp
repz
sahf
add
xorb
pop
adc
cmc
jb
push
mov
aas
xor
cmc
popf
xor
pop
in
int
jecxz
jb
add
mov
xor
push
clc
or
mov
popf
inc
ds
sub
insb
jo
rclb
neg
fsts
pop
movsl
mov
xchg
in
lds
enter
mov
adc
dec
pop
mov
adc
sub
out
jno
clc
push
sbb
lods
or
jp
jle
shlb
fists
jg
arpl
nop
call
inc
and
add
adc
jmp
arpl
adc
out
xor
sub
nop
and
fidivl
sub
sub
inc
ficoml
xchg
mov
cmp
mov
rcrb
add
das
gs
addr16
mov
or
xchg
adc
adc
mov
adc
stc
pop
add
xchg
addr16
les
outsb
mov
ret
out
jae
aaa
mov
jb
dec
movsl
rcr
ss
dec
xchg
rclb
inc
inc
cmp
enter
iret
stos
movsb
loope
ja
lods
insl
mov
sbb
inc
inc
lcall
outsl
xor
xchg
repnz
aas
ret
xlat
push
insb
mov
pop
jle
inc
jo
arpl
mov
fs
repnz
cmp
stc
pusha
popa
pop
int3
cwtl
cld
nop
mov
loop
int3
pushf
mov
dec
enter
adc
xor
inc
sbb
int
add
mov
adc
inc
inc
jns
and
push
mov
push
sub
jbe
andl
test
mov
or
loop
mov
popa
xor
pop
push
pop
loop
pop
jns
cli
adc
outsl
idiv
iret
push
inc
mov
push
jg
sub
sbb
pop
inc
daa
jns
fwait
test
loopne
out
sub
inc
insl
bound
pop
fisubl
lea
dec
popf
and
mov
xor
xchg
cwtl
fwait
sub
mov
xor
scas
mov
mov
adcl
xor
test
hlt
fs
xchg
cmp
mov
fdivp
cmp
push
jo
mov
iret
sahf
jmp
int3
xor
jb
in
xor
sarb
jne
sbb
adc
out
loop
jnp
xchg
jae
movsl
not
sbb
dec
sub
movsb
daa
cmpl
mov
notb
in
fildl
fbstp
jnp
repz
add
xor
sub
mov
ret
mov
ds
jns
dec
fs
mov
mov
pop
inc
cmp
mov
std
sti
pop
pop
addr16
inc
lock
ret
pusha
pop
rorb
dec
iret
mov
pop
jmp
xor
adc
test
pusha
scas
test
jo
hlt
es
movsb
xor
dec
dec
mov
or
bound
pop
pop
arpl
push
xchg
movsb
sub
jo
testl
ljmp
out
data16
xchg
outsb
fisubrs
push
sub
sub
in
incb
push
test
in
jb
push
pop
int
inc
ljmp
pop
test
adc
mov
setp
mov
fmul
cwtl
pop
outsl
loope
aaa
clc
adc
cmovg
call
mov
xchg
ret
ficomps
divb
jle
sbb
in
ret
xchg
inc
daa
inc
in
scas
gs
fwait
xchg
or
mov
orl
push
hlt
sti
je
in
repz
adc
add
fwait
lock
lods
add
mov
inc
jne
sbb
pushf
add
and
xchg
je
and
adc
sub
or
stc
jbe
and
dec
es
jmp
push
out
cmc
addb
rorl
xchg
scas
lret
out
jmp
pop
shl
fildl
gs
lds
stos
sbb
test
fucomp
roll
ljmp
push
sti
cltd
xchg
sub
cmp
dec
sub
mov
push
sahf
and
inc
jno
out
push
pop
sti
inc
push
loopne
push
ljmp
xor
dec
stos
and
mov
shlb
outsl
pop
adc
movsl
ret
inc
jg
divb
xor
test
inc
loop
lock
xchg
push
mov
in
aam
cwtl
mov
addr16
pusha
mov
sbb
lock
outsb
icebp
jp
push
call
xor
pop
std
mov
mov
dec
ss
mov
mov
jp
stos
xchg
sbb
ret
or
dec
push
jl
mov
mov
fsubr
enter
sub
sub
cmp
dec
push
jl
mov
mov
fsubr
enter
sub
sub
cmp
dec
push
jl
mov
mov
fsubr
stc
cld
or
sbb
cs
cmp
dec
push
jl
mov
xor
and
adc
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
pop
frstor
adc
fildl
or
add
add
add
push
or
add
add
loope
adc
add
mov
add
add
pop
push
add
add
add
add
push
add
add
jo
sub
mov
lcall
add
sbb
sbb
sub
dec
add
add
push
add
add
add
add
sbb
cmpsl
add
push
add
push
or
add
add
pusha
add
sti
add
add
lahf
add
add
or
dec
add
add
mov
adc
dec
add
insl
add
add
add
pop
add
inc
add
add
sbb
push
add
add
add
add
add
add
enter
or
sub
sub
dec
add
arpl
imul
add
add
dec
add
sub
add
add
jae
ret
add
add
js
add
add
add
add
jge
sbb
js
inc
add
mov
add
add
in
add
cmpsl
add
add
dec
add
add
add
arpl
roll
add
add
add
add
pop
add
fiadds
outsb
add
add
add
arpl
outsb
add
add
cmpsb
add
add
add
outsb
add
add
add
add
sub
mov
fadds
dec
add
rolb
add
add
add
or
or
cmp
test
xchg
add
add
sbb
inc
add
add
imul
add
add
add
add
or
and
pusha
add
cmp
addb
add
add
add
add
add
add
add
add
add
loope
mov
addl
or
les
inc
add
mov
pop
add
aaa
add
lea
sub
xor
add
or
cltd
add
imul
add
add
add
or
jecxz
addb
add
or
add
cld
add
add
lcall
add
add
add
outsb
add
pushf
add
add
push
add
inc
add
add
addb
add
inc
add
bound
addl
pusha
add
add
add
or
sub
lock
lods
add
xor
add
add
add
add
add
add
pusha
add
add
add
sub
mov
imul
inc
add
add
add
add
xor
cltd
add
iret
add
add
add
faddl
push
add
add
lcall
add
add
adc
lcall
add
add
cltd
add
add
sub
jecxz
sbb
or
mov
sub
mov
push
add
add
pusha
add
mov
adc
or
inc
add
or
sbb
pusha
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
testb
add
add
add
add
xchg
add
add
add
add
add
dec
add
arpl
rolb
add
add
dec
add
add
push
sbb
cmp
pusha
dec
cld
add
lcall
js
pop
int
mov
aam
into
mov
mov
jmp
lds
push
testl
cmc
popf
adc
xor
mov
mov
setnp
shrl
popa
push
push
outsl
and
sbb
clc
fcmovne
lods
mov
roll
pop
sub
cltd
xchg
out
pop
cmovl
out
shrb
lods
xor
and
fbld
dec
jne
test
clc
push
sbb
xchg
mov
mov
insl
pushf
rorl
adc
ret
das
dec
ja
test
jle
sbb
add
stc
push
outsl
cltd
push
pop
mov
xchg
insb
mov
es
dec
and
ret
cmp
movsb
les
jo
lock
flds
js
cmpsb
outsl
lds
lret
inc
jg
fisubs
cmpsb
inc
lods
add
sahf
jo
sbb
push
fldt
xorb
jae
popa
ja
mov
lea
adc
mov
sub
jb
mov
xchg
mov
sti
lods
sub
imul
add
and
push
js
xchg
enter
in
fisubs
inc
push
fiadds
push
outsl
inc
mov
loope
mov
mov
outsl
imul
push
add
clc
insb
nop
pop
outsb
xchg
cli
and
and
jl
inc
aad
and
mov
dec
lea
add
nop
int
fcmovb
dec
jns
in
sbb
push
lods
sub
push
subl
inc
popa
incl
push
pop
mov
cmp
cli
ds
subl
xchg
inc
pop
cmove
stos
cltd
push
call
xchg
jge
ret
rcll
or
xlat
lahf
mov
xchg
or
or
cmp
push
xor
sti
movsb
mov
je
sub
xchg
call
jo
ja
repz
cmp
lahf
lods
mov
or
xor
int
addr16
adc
cmpl
std
sti
add
sub
sub
repnz
ja
scas
les
pusha
push
push
scas
pop
int3
imul
pop
push
test
lahf
lret
lret
xchg
xchg
cmc
push
jae
jns
jno
pop
xlat
mov
mov
mov
loopne
mov
pop
sahf
insb
mov
sbb
sub
loope
add
cmp
pop
decl
jmp
push
outsb
pusha
loope
call
sbb
int
xchg
sarl
add
hlt
repnz
inc
cwtl
or
mov
jne
aam
push
adcl
mov
rcrl
and
ljmp
mov
nop
arpl
mov
jl
clc
stos
cmp
subb
sbb
call
sub
xchg
cltd
pop
push
adc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
