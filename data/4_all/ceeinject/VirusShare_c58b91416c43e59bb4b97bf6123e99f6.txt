call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
xchg
into
movsl
fidivs
scas
vpmaddwd
dec
jle
dec
and
jle
push
gs
jne
test
xchg
movsl
fidivs
mov
sahf
lea
adc
sub
push
push
gs
jne
test
xchg
movsl
mov
lds
cmc
outsb
add
sub
jae
jge
ja
sahf
idiv
faddl
in
sarb
out
pusha
xchg
mov
pop
add
inc
push
out
adc
out
jae
into
stc
into
xor
inc
push
jle
push
jmp
xor
xchg
inc
imul
iret
sbb
loopne
mov
mov
push
jl
rcll
push
movsb
loopne
int
shr
lea
mov
aam
sahf
or
push
ljmp
insl
stos
dec
outsl
divl
add
xchg
cmc
stos
cmp
dec
jle
sahf
mov
data16
sbbl
push
aas
push
andl
push
add
sbb
les
mov
adc
inc
mov
pop
and
inc
cs
out
gs
pusha
cs
xchg
into
movsl
leave
mov
lds
ja
adc
inc
xor
push
gs
sbb
sbbl
mov
sbb
cmp
xor
push
pop
xor
jnp
out
loopne
lock
rcr
fisubrl
fistl
or
push
dec
sub
jle
push
sbb
xlat
jmp
aad
in
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
into
movsl
fidivs
mov
sahf
cmc
outsb
add
pop
xor
push
gs
jne
test
ja
mov
cmp
push
mov
in
or
push
xchg
fwait
mov
add
mov
addb
jno
add
and
xor
les
add
mov
pop
das
mov
leave
cmp
aaa
out
leave
test
mov
bound
add
pop
and
rclb
out
sub
in
xor
decl
sarl
mov
ljmp
ja
xor
sub
cmp
mov
jp
scas
pop
jp
cwtl
das
out
stc
sbb
dec
bound
bound
jae
mov
add
push
rclb
movsb
es
shrb
stos
mulw
cmpsb
fdivrl
aas
xchg
inc
sbb
pop
add
cmpsl
sbb
fisttpll
test
push
outsl
fdivrs
rcl
sbb
xchg
cs
jmp
nop
xchg
cmpsl
pusha
inc
enter
or
fisubrl
scas
jne,pt
sub
push
pop
repz
xor
aas
jbe,pn
js
cmp
leave
enter
sbb
push
dec
repnz
dec
mov
push
pop
mov
jno
cmp
adc
std
ljmp
fs
movsb
out
xor
arpl
jne
in
or
cmp
cmc
add
sub
imulb
jmp
jns
mov
stc
loopne
cmp
push
in
in
pop
sbb
fadds
lret
adc
mov
std
xchg
mov
adc
pop
dec
sti
lret
xchg
jns
mov
call
xchg
ret
test
adc
jle
push
pop
cmp
push
fdivr
scas
push
push
fdivrs
out
fdivl
lods
stos
and
or
sbb
in
clc
lahf
sbb
les
mov
outsb
xor
dec
inc
rclb
test
lods
pop
decb
lea
scas
mov
mov
sbb
ds
test
add
ja
movsb
and
repz
xchg
pop
ret
das
ljmp
mov
inc
pop
or
inc
cmp
dec
xchg
push
push
pop
sbb
out
imul
add
sub
push
mov
inc
outsl
lock
xchg
jmp
sub
dec
loopne
fwait
in
repnz
sti
and
cmp
sub
mov
add
cmpsl
inc
movsb
or
subl
lcall
jp
sub
cltd
mov
loop
push
ret
pushl
addl
jl
and
sub
loopne
cmp
inc
pop
lcall
cmp
add
dec
xchg
xchg
inc
lods
sbb
pusha
shrb
leave
mov
pop
mov
enter
popf
adc
xor
cmp
mov
cmpsb
shlb
jmp
shlb
mov
btr
cmp
scas
in
fcomp
lahf
aam
mov
xchg
and
xchg
hlt
mov
loope
ret
adc
out
mov
or
lret
les
popa
jns
sbb
fwait
cmp
mov
or
lock
pushf
lods
and
mov
push
das
xchg
ds
cmp
stc
insl
enter
cmpb
sub
pop
bound
pop
dec
dec
mov
mov
mov
jae
out
mov
xchg
in
jne
mov
mov
cmpsl
push
add
test
imul
lahf
jnp
lds
mov
stos
xor
ret
jp
mov
sub
cpuid
mov
mov
push
pop
hlt
in
xchg
insb
dec
dec
enter
pop
mov
lods
add
jnp
inc
gs
mov
add
mov
sbb
cli
ja
nop
jae
repnz
dec
and
dec
repnz
in
pop
dec
cwtl
adc
cmc
mov
ret
sub
repz
aaa
cmpsl
jl
mov
pusha
cld
sub
sbb
pop
pop
dec
and
mulb
mov
faddp
add
pop
rorl
rclb
sbb
jp
xor
push
cltd
dec
ja
push
ficoms
push
insb
std
xor
cmp
jnp
movsb
or
or
andl
in
fiaddl
pusha
sub
inc
pushf
cltd
popf
jno
aam
inc
inc
xor
cmpsl
lods
int3
push
aaa
enter
int3
push
add
ret
shrb
add
mov
or
jmp
add
pop
cmpsb
xor
dec
dec
test
dec
sub
out
cmp
sub
pop
adc
out
mov
fisubs
lgs
pop
sbb
ja
dec
lcall
popf
inc
jle
dec
outsb
mov
lret
xchg
jl
adc
jbe
xor
adc
xor
bound
pop
stos
sbb
xor
mov
xchg
lock
in
bound
stos
insl
ss
sbb
xchg
xor
fs
pop
cmp
pop
sub
cmp
cmp
imul
data16
arpl
lds
jne
stos
sahf
sub
loopne
inc
mov
or
cmc
cmp
icebp
mov
movsb
mov
push
jge
push
test
gs
outsl
dec
popa
pop
dec
add
addr16
shl
aas
insb
fcmovne
add
in
jno
aam
push
fisubrl
leave
cld
mov
cmp
xchg
pusha
subb
insb
lea
in
filds
scas
cmp
push
loop
push
setle
or
pop
pop
pushf
fdivrs
add
stos
adc
in
mov
mov
js
and
ds
rorb
mov
mov
aam
aam
adc
cmp
and
cmp
std
pushf
mov
sbb
and
pop
adc
out
pop
lea
or
adc
pop
test
fidivs
rcr
dec
nop
mov
mov
lret
lds
push
cli
daa
ds
pusha
icebp
push
sub
pop
cltd
sbb
dec
cs
and
xor
add
mov
cmpsl
mov
sub
and
sub
arpl
scas
ljmp
xchg
push
int3
inc
jg
int3
mov
fisttps
fisubrs
jns
fldenv
rcrb
movsb
leave
cmc
jnp
adc
dec
call
bound
mov
cli
xor
fs
sbb
jae
sahf
arpl
sub
dec
push
lret
jnp
imul
sub
cmpsl
xchg
adc
in
sbb
pop
pop
mov
fwait
lods
lahf
aas
pop
push
cmc
pop
scas
aam
xor
ljmp
rcrl
les
mov
movsb
mov
rcll
cmp
ja
jno
in
es
or
cmp
and
ss
cld
movsb
in
imul
cs
lods
add
into
xor
test
insl
jo
xchg
xor
shlb
or
insl
push
add
inc
arpl
sbb
fisttpll
mov
popa
or
dec
cmp
gs
mov
lds
clc
cmp
aas
fisttpll
cmpsb
hlt
out
mov
jo
push
popa
cmpsb
mov
push
dec
pop
ss
pop
rol
jae
mov
in
cwtl
or
ret
cmp
xchg
cmpsl
or
jns
and
fnsave
int
jbe
cld
lret
and
sbb
pop
adc
gs
mov
mov
xchg
cld
dec
andl
nop
xchg
mov
leave
dec
cmc
into
and
dec
xchg
rorb
xchg
iret
aaa
faddl
lret
push
xchg
adc
les
push
mov
mov
xor
divb
inc
jmp
je
push
les
and
es
addr16
push
push
push
test
popf
add
inc
inc
xchg
out
mov
or
add
or
mov
inc
jp
push
cwtl
rep
or
push
xor
xor
push
test
addr16
lea
xchg
daa
lretw
lcall
jge
dec
ds
xchg
mov
test
push
mov
xor
cltd
cmp
data16
mov
and
cmp
dec
and
and
out
adc
pop
test
sbb
jmp
xor
jmp
push
stc
fnsave
movsl
mov
sbb
mov
imul
mul
lea
xor
dec
data16
ret
call
in
pop
in
mov
andb
sbb
jae
pop
popa
out
inc
int3
mov
mov
and
cwtl
cld
imul
inc
and
mov
and
cwtl
pop
iret
pop
mov
pushf
cmpb
mov
outsl
sub
stc
ret
fbstp
outsb
inc
jp
test
or
pushf
pop
push
movsl
les
sbb
cmpsl
dec
test
out
cwtl
or
enter
mov
test
test
mov
aad
or
push
inc
pop
inc
dec
fsubrs
repnz
cli
roll
imul
mov
mov
adc
stc
pop
cmpsb
xor
inc
repz
sbb
sarl
xor
js
gs
or
xor
dec
mov
cmp
rcl
cs
aas
inc
lock
in
and
push
push
sbb
pop
out
pop
call
and
cmp
xchg
mov
ficoml
jno
in
adc
sbb
jae
adc
lods
and
test
stos
inc
mov
push
xor
pop
mov
mov
xor
dec
sub
enter
dec
mov
test
arpl
andl
lds
jecxz
pop
mov
mov
mov
mov
mov
sub
loopne
loopne
cmp
mov
sahf
dec
shrd
mov
sbb
add
hlt
or
push
mov
ffreep
stos
xorl
and
mov
xor
and
sti
daa
mul
stos
cmpsl
inc
add
push
mov
rcll
sbb
sbb
fwait
ret
jmp
repz
cmp
inc
repz
ret
push
adc
bound
jbe
mov
fcoms
sub
push
jg
inc
inc
mov
dec
mov
inc
add
add
popf
cmp
sti
repz
ds
hlt
lret
out
push
inc
scas
lea
cltd
jb
jo
jnp
inc
test
xor
jae
adcb
ret
mov
mov
daa
jge
mov
xor
xor
int
xor
lcall
test
cmp
shr
ljmp
and
mov
mov
rorb
test
mov
lock
mov
push
aas
js
xchg
fildl
shll
xlat
xchg
lods
insl
xor
xchg
add
jno
stc
decb
lcall
fdivrs
cltd
in
mov
cltd
push
popf
mov
in
js
push
push
add
out
mov
popa
push
js
mov
fwait
pop
fst
hlt
stos
pop
inc
stc
or
mov
jle
neg
call
or
in
pop
or
pusha
out
in
jnp
sub
call
loopne
mov
dec
nop
lea
xchg
push
cmp
or
and
std
fisttpl
es
cmp
repnz
lock
lods
and
inc
into
jno
inc
add
repnz
mov
push
fisttps
pop
jnp
loop
movsl
cmc
add
mov
adc
dec
or
mov
mov
sbb
add
andb
repnz
add
xor
pop
cld
mov
cmpsb
mov
cmp
mov
mov
fcmovnu
xchg
pushf
ror
jmp
jle
or
jecxz
inc
into
sub
inc
std
fwait
lods
xor
insl
scas
dec
jecxz
or
sbb
mov
cld
pop
aam
jge
jecxz
dec
push
pop
xchg
test
fiadds
rorb
arpl
sub
push
stos
sahf
add
dec
imul
popa
cmpsb
sbb
jno
add
not
xchg
mov
lods
jo
pop
leave
xor
pop
adc
rcrb
enter
icebp
daa
cwtl
gs
mov
imul
pop
sbb
mov
xor
add
cs
cmp
fbstp
cmp
inc
cli
xchg
inc
or
mov
jnp
cli
and
popf
fs
cs
pop
mov
dec
cmp
inc
aaa
stc
imul
xor
mov
in
sub
xchg
aas
jnp
stos
sti
shrl
stc
sbb
dec
pop
cmp
inc
and
nop
frstor
rcll
jno
and
or
add
or
clc
mov
das
mov
in
mov
movsb
pop
mov
xchg
hlt
bound
pop
es
xor
and
pop
inc
pop
dec
sti
incb
ret
sarb
and
mov
push
jmp
addr16
into
mov
xchg
aas
fldl
sbb
mov
in
leave
aaa
pop
jnp
clc
movsl
popf
cmp
and
movsl
in
mov
repnz
dec
rcrb
loopne
pop
sahf
sbb
fwait
shll
jl
fwait
popf
fisttpl
dec
adcl
mov
sbb
mov
and
test
std
xor
insl
push
xchg
js
jp
xorl
ret
mov
add
shll
mov
jne
int
dec
ljmp
sub
sub
inc
mov
xadd
clc
and
or
adc
pop
pop
cs
pop
xchg
cmp
fdivs
and
or
aaa
imul
push
pop
notb
mov
leave
pop
in
hlt
add
popa
add
cltd
gs
add
je
xchg
lods
xchg
andb
inc
mov
mov
pop
push
fildl
aas
ficoms
in
xchg
mov
push
movl
pop
pusha
cmpsb
js
lcall
xor
cmp
loope
cmp
bound
ds
mov
and
push
sbb
insb
push
shlb
dec
in
jmp
inc
js
mov
ficompl
xchg
sub
xor
adc
cmp
jne
xchg
push
cmpxchg
inc
aas
in
adc
pushf
xlat
sbb
cwtl
out
aas
inc
jl
add
in
pushf
into
lcall
push
pushl
cmp
loopne
sub
fdivrl
mov
inc
int3
sbb
push
fadds
xchg
pusha
imul
psubsw
sbb
cmp
rcrb
push
aaa
mov
fstps
xor
loopne
int3
cmp
xchg
jmp
mov
jle
mov
ret
call
push
test
arpl
adc
sbb
iret
jge
xchg
add
push
data16
xchg
insl
dec
cli
mov
mov
or
lea
es
xor
in
adc
cmc
fildl
pop
in
aam
enter
cmpsl
popf
mov
arpl
xchg
dec
xchg
fldcw
cmp
mov
sbb
lods
jno
adc
lret
ret
nop
mov
cld
and
movsb
pop
xchg
lea
ja
shrb
fs
mov
or
jl
inc
xchg
loop
xchg
push
lea
cmp
xchg
cli
dec
pop
inc
out
aas
fxch
in
xor
sbb
xchg
int3
and
jb
push
out
mov
pop
aaa
pop
clc
push
inc
out
xor
mov
mov
in
jg
push
roll
push
test
daa
scas
call
sub
test
into
dec
ja
inc
dec
test
add
sub
incb
and
sbb
mov
stos
cmpsl
jae
or
sbb
jbe
into
mov
adc
aam
in
cwtl
pop
mov
fdivrs
int3
sub
jle
mov
movsb
pop
testl
fs
icebp
jae
or
cmpsl
xchg
lds
lock
aad
pop
out
cmp
sub
mov
sbb
pop
mov
sbb
aas
add
clc
repz
pop
out
outsl
icebp
stc
test
sti
icebp
mov
push
lods
adc
inc
dec
test
mov
out
pop
xchg
insb
xchg
jb
push
mov
loop
jmp
jl
out
jp
inc
stos
pushf
repnz
mov
addr16
scas
mov
mov
stos
sarl
outsb
lea
out
loope
mov
mov
cs
enter
dec
mov
sub
mov
stc
cmp
ja
imul
stc
les
inc
mov
push
lods
mov
push
mov
and
imul
fmuls
insl
stos
adc
dec
orl
sbb
mov
por
insl
adc
push
das
sbb
outsb
sbb
sbb
jge
fistl
mov
and
sub
push
subl
aas
inc
push
stos
mov
xor
jge
fisttpl
xchg
mov
push
in
ss
imul
jo
in
adc
lret
inc
adc
jb
repnz
stos
sub
dec
xor
test
nop
test
fldt
jg
add
xchg
xchg
sbb
inc
cld
mov
lods
jno
cmp
dec
roll
rol
fildl
ja
pushl
push
nop
outsb
mov
jbe
arpl
push
pop
adc
push
popa
mov
xor
sbb
popf
aam
dec
jb
push
rcl
push
push
dec
mov
mov
cwtl
bound
loop
adcl
mov
mov
adc
mov
test
std
lcall
stc
cmp
loop
pop
andl
adc
xchg
inc
stc
test
loope
out
sbb
insb
and
scas
xor
xor
push
push
incl
pop
and
inc
inc
push
outsb
dec
ss
mov
push
and
andb
aad
push
rcr
mulb
inc
or
ror
cmp
dec
pop
adc
out
adc
xchg
add
pusha
xor
push
mov
push
divl
mov
jne
pop
sub
popa
mov
imul
dec
xchg
inc
in
mov
xchg
lret
push
popa
xorl
mov
pop
mov
movzbl
pop
or
loope
js
pop
dec
add
mov
jb
dec
aam
rcrb
outsl
mov
xchg
icebp
inc
shlb
je
and
shll
loop
gs
mov
xor
xchg
or
inc
lahf
push
jae
scas
mov
xor
gs
mov
cmp
push
mov
sti
xchg
in
sbb
hlt
mov
sbb
shlb
ss
sbb
test
je
aas
adc
xchg
and
aam
pop
enter
mov
dec
cmpsb
mov
xor
mov
sub
mov
mov
mov
dec
shrb
xor
loopne
int
xchg
cs
pop
xchg
mov
lea
test
dec
push
test
sbb
stos
divb
pop
sub
fs
dec
sahf
sub
in
outsl
xor
in
pop
sub
sbb
loope
adc
mov
inc
sbb
loop
push
xchg
js
lock
pop
lea
out
dec
or
shll
in
mov
pop
out
aaa
js
mov
nop
aam
out
add
push
movsl
out
adc
push
jp
inc
lret
push
sti
out
mov
mov
outsl
out
inc
sub
mov
jb
testb
outsb
lahf
push
fstps
jp
push
loope
push
or
lahf
mov
popf
adc
inc
pop
ss
xchg
sub
scas
sub
dec
pop
negl
inc
push
xor
pop
dec
ss
insl
xchg
inc
push
stos
adc
outsb
cld
in
push
lcall
loope
mov
xchg
xchg
lret
inc
cmpl
scas
and
mov
jae
ss
pop
pop
mov
push
mov
jb
cli
and
hlt
imul
clc
push
xor
and
mov
fs
mov
mov
in
ja
das
repz
pop
lahf
dec
or
push
dec
fstpt
mov
mov
add
mov
inc
push
mov
aas
insb
add
loop
lods
rcrb
mov
pop
xchg
xor
jb
jns
cmp
jne
lret
inc
adc
mov
cmp
cld
gs
je
xor
sbb
jo
popf
ds
pushf
leave
jl
imul
inc
mov
fisubrs
and
lea
cld
xchg
and
mov
lret
jmp
push
jno
push
lock
dec
bnd
jae
sub
cmc
xchg
vrcpps
mov
std
aam
ja
sub
jne
cmp
push
or
loope
dec
lahf
loope
inc
xchg
in
in
fwait
push
jno
in
jnp
lds
cs
dec
fsubp
fadds
mov
stc
jmp
test
or
jno
xor
xchg
bound
lods
jge
jnp
inc
call
push
outsb
xchg
dec
dec
das
mov
xchg
sbb
sub
in
cld
incb
fisubs
in
test
adc
sahf
es
rolb
dec
cld
or
mov
sbb
sbb
pop
adcb
xchg
testl
pop
push
test
imul
pop
adc
repnz
dec
scas
push
js
inc
push
sarl
rclb
fadds
or
jbe
icebp
mov
push
jo
fidivl
pop
jg
push
fwait
mov
xlat
arpl
les
rolb
jg
cmp
xchg
mov
and
pop
mov
add
push
inc
push
lds
mov
mov
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
into
movsl
fidivs
mov
sahf
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
into
movsl
fidivs
mov
sahf
cmc
outsb
add
pop
xor
push
gs
jne
test
xchg
clc
movsl
fidivs
push
in
cmc
xchg
add
pop
inc
pop
int
stos
icebp
lcall
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
in
addl
xor
and
xchg
add
push
rolb
arpl
arpl
xchg
adc
and
push
ret
into
repz
push
add
sub
ret
arpl
mov
mov
jle
pushf
jecxz
or
loope
in
pop
rcll
sub
das
xchg
cli
adc
insb
mov
aad
andb
xor
mov
mov
cs
dec
stos
mov
mov
lret
push
ret
mov
xchg
mov
ror
fcmovu
mov
rcll
jae
pushf
outsl
insb
adc
inc
sub
or
add
js
and
inc
pop
cld
pop
or
scas
das
push
repnz
repnz
rclb
lcall
loop
cwtl
insl
add
push
xchg
pop
lods
roll
clc
sbb
ret
pop
push
ljmp
fildl
mov
rol
xor
mov
mov
jae
jnp
arpl
sub
rol
xor
sahf
in
xchg
mov
dec
dec
jae
push
rcll
cmp
pop
adc
sub
push
roll
test
loop
adc
inc
sub
pop
cmp
arpl
jno
or
movsl
sub
adc
outsl
movl
es
mov
cmp
loop
fcoml
pop
mov
sbb
push
push
mull
xor
lds
sub
testb
lret
inc
fwait
ss
inc
repz
bound
xchg
add
push
rolb
jae
arpl
xchg
adc
and
push
ret
inc
repz
bound
xchg
add
push
rolb
jae
arpl
xchg
adc
mov
sub
sub
push
inc
ljmp
pop
sarb
or
dec
hlt
fs
jle
scas
mov
jo
sbb
in
lods
std
sub
xlat
lods
icebp
mov
jmp
mov
mov
mov
and
aas
pop
filds
es
inc
mov
cld
bound
pushf
filds
or
adc
loop
mov
in
loope
dec
and
sbb
adc
in
xchg
jmp
mov
xchg
mov
cmp
scas
loopne
xchg
xor
pop
jae
xchg
xchg
int
notb
fmul
les
cmc
arpl
icebp
xchg
mov
insb
mov
int3
mov
cmpsl
inc
xchg
add
xor
aam
iret
mov
inc
xchg
movsl
ror
cwtl
or
or
adc
mov
pop
dec
inc
mov
cmpsb
cmc
mov
movsl
sub
cmpsb
pop
and
or
jb
int
out
inc
cmp
inc
xchg
push
ss
cmp
mov
mov
sbb
scas
imul
push
ret
pop
push
popa
out
fisubrs
pusha
jmp
test
jb
test
adcb
ficompl
daa
fld
das
cli
scas
rclb
xor
push
sahf
cmp
subl
seta
outsb
mov
cmp
jns
mov
ljmp
xchg
dec
iret
jg
inc
cs
mov
pop
rcrb
insl
inc
cmpsb
mov
gs
or
out
dec
out
aad
dec
xor
pop
ss
aam
addr16
jae
sti
cmc
out
in
mov
cli
das
dec
lea
rorl
pusha
rcll
lgs
sub
repnz
test
cmp
adc
enter
jmp
xchg
cwtl
scas
jb
xor
sbb
add
mov
cmp
inc
idivl
push
mov
xchg
sub
add
sbb
mov
lock
adc
cltd
fcmovnu
fsub
outsb
test
outsb
hlt
mov
loop
mov
mov
imull
addl
loop
sbb
dec
leave
fcompl
or
hlt
sub
repz
out
push
and
pop
sub
pop
aas
enter
push
pusha
test
ss
pop
sbb
ret
push
imul
xchg
jge
push
test
fcomi
aad
mov
cwtl
insb
add
out
pop
mov
add
inc
pop
add
mov
mov
jb
sbb
repnz
add
pop
jecxz
repnz
cmpsl
dec
dec
les
adc
sub
das
sbb
inc
add
test
stc
sub
add
adc
or
stos
lahf
xchg
in
mov
clc
sbb
inc
int3
mov
push
mov
movsl
pop
ss
jb
fidivl
xchg
jecxz
or
cmp
dec
mov
les
xlat
pop
and
sbb
push
imul
out
loop
xchg
push
xor
lret
or
add
push
mov
fisttpl
gs
or
cmp
mov
xor
imul
or
mov
inc
push
pop
scas
and
sbb
imul
lret
outsb
popf
ljmp
jg
sub
cmpl
jbe
xchg
dec
test
sahf
enter
and
or
cmp
pop
mov
jl
lods
mov
pop
jl
test
ja
inc
mov
sub
icebp
aaa
dec
dec
dec
popf
lcall
mov
cwtl
cmp
xchg
fdivrs
sub
jne
pop
cmp
lret
insb
push
xor
std
test
in
jne
pushw
dec
push
das
sbb
dec
rorb
dec
sbb
js
pop
adc
mov
and
jmp
jg
in
js
movsb
and
mov
bndldx
mov
pop
stos
loop
insl
icebp
mov
iret
xchg
fwait
subb
xchg
outsb
incb
ret
js
mov
lret
cmp
jle
fs
imul
jecxz
lock
mov
jmp
xchg
xchg
pop
pop
gs
inc
jge
jmp
cmc
pop
dec
pop
mov
les
imul
push
icebp
or
or
mov
imul
adc
negl
or
adc
xor
cmc
mov
popf
jb
lret
sub
iret
pusha
mov
inc
add
stos
pop
daa
xor
aad
das
sbb
lret
mov
ret
fdivrl
inc
sbb
gs
jp
mov
xor
ror
nop
dec
test
popf
cltd
mov
push
adc
rclb
or
iret
cmp
icebp
adc
xchg
aad
or
clc
mov
daa
jo
lock
jnp
test
testb
roll
mov
data16
outsb
leave
scas
pop
popa
std
jmp
mov
mov
mov
cmp
xchg
mov
aam
in
add
push
xor
mov
pusha
jno
xchg
repz
dec
daa
lret
bound
cwtl
mov
or
add
jno
rorb
add
mov
fsubs
xchg
fcomip
fwait
push
in
pop
jmp
or
jne
mov
adc
xchg
sbb
and
or
ljmp
or
mov
dec
pushf
mov
jno
xor
das
push
daa
imul
or
cmp
pop
sub
and
or
addr16
or
mov
inc
cmp
fnstsw
imul
inc
or
jmp
xor
jle
jecxz
xchg
pop
out
popa
push
cli
jp
repz
cmpsl
cmc
mov
leave
das
andl
hlt
je
popa
xchg
shl
dec
jle
pop
sbb
mov
clc
dec
negl
mov
or
test
fstpl
fadds
or
stc
push
out
je
leave
jmp
or
lods
shl
add
mov
flds
lods
jae
aas
push
or
fimull
cmp
add
lods
cmpsb
inc
cmp
or
in
sub
and
and
jle
popa
out
lcall
inc
push
js
mov
sbb
xchg
cwtl
std
jmp
fsubl
enter
test
or
jmp
in
in
fstpl
jg
cmp
inc
out
outsb
xorl
mov
or
push
leave
pop
cld
inc
jae
addr16
ret
das
lret
pop
enter
fldenv
inc
jmp
jae
fcmovne
mov
ror
subb
rcll
imul
pop
ret
shlb
pop
and
xchg
and
aas
jne
cli
or
push
in
mov
out
lret
dec
jnp
mov
in
sub
xor
and
test
cld
mov
jns
mov
lods
iret
in
mov
jns
push
pop
or
maxps
fildl
jmp
fdivrs
add
push
imul
cmp
xor
xchg
aad
jle
ud0
push
js
repz
hlt
and
push
stc
cmp
jnp
outsb
scas
sub
fsubrp
stos
lcall
addb
movsb
inc
mov
sbb
adc
ja
and
in
cmc
ret
adc
or
xchg
je
enter
xor
mov
lret
imul
sub
jae
aas
idivb
or
push
pop
push
cmp
or
call
jle
cmpsb
ret
in
dec
sub
shl
add
push
push
lods
pop
dec
das
notl
adc
pop
jl
xor
fstl
mov
je
xor
pop
sbb
mov
shrb
adc
push
inc
sub
cmpsl
ljmp
pop
notl
dec
ljmp
iret
push
leave
mov
xor
rcrb
jecxz
pop
pop
sub
imul
xchg
pop
inc
xchg
loopne
sbb
and
add
mov
dec
pop
xchg
sub
jbe
xlat
ljmp
add
mov
cmp
in
in
fiaddl
int
jb
mov
mov
arpl
mov
pop
dec
pop
hlt
push
inc
and
out
cmp
sahf
lock
ret
pop
std
popf
fcoms
sbb
shll
ret
sahf
arpl
xchg
sbb
gs
std
shlb
cmp
inc
lea
dec
xor
adc
and
sarb
lcall
dec
pusha
adc
jecxz
in
mov
jp
cltd
loop
cmp
mov
scas
addb
aam
adc
inc
pop
dec
inc
xor
add
in
pop
and
in
push
ja
shrl
into
mov
aad
sub
pop
out
jge
adc
insl
push
add
add
andb
push
stos
mov
adc
outsb
sahf
ss
test
lds
xlat
sub
in
das
or
imul
push
inc
ficompl
int
sbb
dec
dec
adc
jmp
iret
rorb
enter
pop
shll
cmpsb
pop
ficoms
mov
setg
push
adc
jp
add
imul
xor
jnp
jmp
leave
lcall
mov
je
shl
leave
xor
sahf
and
out
dec
movsl
push
mov
fcompp
mov
mov
xor
lds
jne
dec
dec
std
mov
cmpsb
cld
jecxz
mov
jbe
lret
mov
jbe
rcll
inc
mov
aas
jg
js
jge
je
jns
inc
dec
pop
orb
pop
idiv
xor
nop
cmp
sbb
test
enter
or
inc
adc
iret
ds
and
loope
pop
jge
xchg
cmp
ja
jl
outsl
mov
mov
dec
pushf
lret
cmp
stos
jbe
push
out
scas
jecxz
testb
iret
adc
dec
mov
add
mov
jae
xchg
and
adc
es
xor
dec
movsl
xchg
or
repz
pusha
inc
pushfw
es
out
fidivl
add
mov
dec
jge
mov
xchg
lds
test
sub
xchg
cmc
fwait
mov
cmp
xor
test
data16
cli
xor
stos
imul
loop
vsubsd
into
sub
in
pop
sub
fisttps
xchg
out
rcll
je
add
inc
sbbb
mov
mov
popf
mov
sti
cmpsl
je
add
jle
mov
xor
push
std
nop
push
cltd
aam
stos
lock
inc
out
mov
arpl
adc
pop
mov
outsb
enter
push
inc
lods
test
sub
fimull
and
test
in
push
and
mov
sahf
push
dec
es
add
hlt
in
jno
cmp
dec
mov
jmp
popa
inc
imul
fimull
jp
dec
push
enter
inc
add
shll
mov
repnz
pop
pop
ds
ja
js
sbb
and
scas
rcrl
mov
ror
jb
enter
add
sbb
xchg
test
movl
or
js
pop
icebp
popf
decb
push
or
mov
mov
lock
idivl
enter
lcall
std
in
and
sub
hlt
xchg
adc
mov
gs
xchg
mov
sub
mov
inc
and
add
int3
inc
push
sub
push
sub
std
pop
out
xchg
clc
and
sub
mov
cmp
or
subb
out
icebp
repnz
pushf
int
imul
mov
xchg
enter
enter
mov
xchg
jl
pushf
push
insb
daa
mov
je
jge
stc
pop
adc
cmp
jne
ret
xor
push
jno
push
mov
test
cmpsb
dec
mov
sub
loopne
xor
out
cmp
push
rorb
mov
fwait
inc
movsb
stos
lret
movsb
or
inc
cli
push
pop
jmp
sahf
loope
mov
decl
push
shlb
mov
push
mov
push
adc
imul
aam
repnz
dec
fdecstp
inc
movsl
outsb
rclb
sub
mul
loopne
pop
dec
pop
xlat
xor
loopne
popf
push
push
jge
das
xchg
outsb
xorl
cmpsl
fists
dec
mov
loope
mov
add
adc
mov
scas
jl
call
mov
adc
and
out
mov
je
cvtps2pd
fildll
push
xchg
push
xchg
jmp
or
jg
dec
mov
cmp
pop
fwait
fimull
xlat
or
adc
lods
sub
ds
divl
mov
out
mov
push
in
jecxz
cmpsl
jne
imul
daa
push
push
stos
jl
dec
jp
push
xchg
sahf
push
mov
in
in
rorl
test
ss
cmp
dec
xor
stc
jns
jmp
das
mov
xchg
mov
testl
push
cmc
into
sub
mov
repz
xchg
jbe
push
add
add
and
pop
test
push
frstor
roll
mov
mov
out
inc
hlt
or
test
stc
add
out
jg
out
out
mov
sbbb
data16
arpl
add
xchg
pop
cmpsl
cs
loop
lods
xlat
and
icebp
ss
mov
das
and
stos
cs
into
fdivp
popf
repnz
adc
gs
stos
push
test
scas
push
pop
dec
pop
inc
push
xchg
jmp
shll
mov
mov
push
stos
scas
out
repz
jmp
aaa
ss
movl
add
sub
mov
mov
sbb
jecxz
xchg
mov
fbld
mov
pop
or
cmpl
fcompl
hlt
add
idivl
insb
aaa
ljmp
loopne
pop
ja
sub
push
adc
popf
shl
pop
pop
add
jp
xor
inc
push
lcall
sbb
jae
push
imul
rcll
or
sub
jge
push
push
insb
out
xchg
push
scas
into
adc
ss
pop
cmp
fistps
push
dec
out
movsl
test
in
xor
mov
adc
flds
mov
inc
push
enter
insb
hlt
in
mov
call
das
jno
cwtl
loopne,pn
adc
mov
ret
add
adc
jg
lahf
jb
jmp
pushf
fiadds
cwtl
ss
mov
jae
test
leave
jno
rcll
mov
enter
pop
pop
scas
addb
subb
and
or
dec
or
mov
popa
pop
in
jmp
fisubs
mov
xor
jg
pop
into
dec
dec
mov
fcmovne
push
push
push
push
arpl
pop
out
jl
adc
fstp
xor
sub
ret
adc
and
lock
std
and
push
or
loope
pop
mov
call
inc
cmp
insb
xchg
or
sub
push
pop
xor
inc
and
aam
cmp
mov
rcrb
mov
enter
and
inc
fstps
frstor
adc
xchg
dec
cmp
out
jns
mov
jo
xchg
jp
mov
sbb
jnp
test
fwait
les
jge
cmp
mov
int
pslld
inc
or
and
popa
js
ss
pop
mov
out
and
mov
mov
sbb
call
push
dec
lods
popf
test
movsb
add
pushf
sbb
sbb
sti
mov
addr16
icebp
and
das
lret
sbb
sub
dec
add
cmc
xor
gs
add
jecxz
mov
aas
dec
repnz
subl
imul
inc
dec
or
sub
movsb
stc
out
jmp
inc
mov
sub
dec
movsb
inc
test
mov
rclb
mov
mov
push
add
lds
pop
fisttps
xor
mov
cmp
popa
sar
cltd
mov
xor
xor
cld
and
and
pop
cmpsb
and
xorl
in
stos
push
pusha
mov
bound
sbb
ret
ja
popa
ror
adc
cld
xchg
inc
xor
sahf
mov
fnstcw
mov
je
lret
xchg
scas
and
push
lods
sub
add
xchg
pushf
dec
push
jns
or
pop
mov
jae
cli
pop
and
orb
ja
pop
dec
jl
mov
and
repz
jns
xor
pusha
xor
push
pop
push
mov
jmp
scas
mov
and
ljmp
add
add
int
xchg
cmp
inc
andl
adc
insb
push
mov
notb
or
push
clc
insb
scas
cmp
mov
sub
adc
insl
and
in
jns
shl
les
mov
inc
jae
pop
sbbl
out
les
or
andb
mov
popf
mov
xor
daa
in
test
push
mov
xor
ja
jne
adc
incl
mov
aam
xor
ss
or
adcb
add
inc
in
mov
push
roll
cs
lods
ret
sub
sbb
xchg
lods
ret
fmulp
mov
lret
movsl
inc
pop
cmpb
andl
stos
das
repnz
repz
adc
mov
mov
je
or
int3
jle
pop
shrl
or
outsb
cs
pop
dec
int
inc
in
in
pop
xchg
test
aad
adc
pushf
xchg
insb
and
jae
adc
enter
test
into
jnp
jle
mov
mul
divb
jnp
add
cmp
xor
fistps
gs
leave
in
xchg
lock
push
fdivp
jl
std
enter
xor
orb
mov
rcll
xchg
scas
ficoms
xorb
jmp
sahf
es
ja
idivl
push
frstor
data16
xchg
sub
and
or
not
cld
bound
jno
aad
xchg
jae
dec
mov
das
push
loopne
out
loope
pop
sti
push
or
or
lods
jp
mov
and
fucomi
loopne
sbb
and
rorl
adc
into
cmp
and
push
lods
inc
push
pop
popf
test
cmpsl
loope
ret
mov
in
push
or
and
pop
jbe
lods
xor
mov
fwait
daa
in
mov
inc
cmp
inc
test
repnz
rorl
inc
std
mov
outsl
loope
es
insl
sub
pop
daa
and
gs
add
mov
push
or
adc
mov
imul
xor
add
movsb
xlat
enter
dec
pop
dec
push
pop
int3
xchg
fiaddl
je
arpl
xchg
jns
mov
cwtl
popf
lods
dec
cwtl
and
jo
or
in
push
fwait
cmc
icebp
inc
dec
sbb
sbb
pop
lods
test
mov
push
imul
or
outsl
out
mov
mov
movlps
sarb
jmp
pusha
sub
jns
shl
in
in
popf
je
cmpsl
mov
hlt
retw
cs
adc
pop
fsts
sbb
mov
jmp
fisttpl
lahf
arpl
push
aam
sbb
inc
and
ficompl
jb
xchg
sbb
xor
pusha
dec
es
fidivrs
je
or
push
sub
inc
sub
jge
xor
jecxz
inc
aad
imul
fisttpl
pop
test
sbb
xor
or
int
rclb
cmpsl
outsb
xchg
mov
push
push
stos
sbb
roll
imul
outsb
cmc
bound
iret
stos
push
mov
mov
mov
lods
sbb
jo
mov
pop
cmc
jno
popf
inc
jno
loope
pop
jmp
aam
fsubr
int3
pop
ljmp
test
out
sub
sub
pusha
fbld
inc
ds
daa
pop
push
cmpb
sbb
shlb
lds
or
or
outsl
insb
or
je
mov
mov
dec
and
jne
mov
adc
shlb
mov
pushf
insl
negl
adc
es
push
sub
jbe
adc
popf
xorb
pop
and
and
mov
jne
cmpsb
pop
es
stos
int
add
insl
xor
mov
loope
shrl
loopne
jne
enter
push
and
sbb
addr16
push
sti
insl
mov
push
mov
out
add
bound
add
push
or
cmp
mov
mov
xlat
jge
shrb
cmpsb
stos
xchg
or
push
push
xor
cld
sub
popf
sub
jp
add
adc
sbb
lds
adc
inc
jl
ljmp
mov
in
loopne
fwait
inc
ss
xor
pop
dec
negl
rcrb
dec
cmp
scas
clc
enter
arpl
jae
je
andl
xor
out
cmp
sub
scas
and
shr
xchg
shll
cmpsb
daa
rcl
mov
xchg
pop
mov
inc
repz
bound
xchg
add
push
rolb
jae
arpl
xchg
adc
and
push
ret
inc
repz
bound
xchg
add
push
rolb
jae
arpl
xchg
adc
and
push
ret
ljmp
add
push
rolb
jae
popa
loop
adc
and
push
ret
inc
jae
arpl
insl
cld
sub
pop
lret
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
out
dec
jge
insl
ficoms
scas
jge
pop
loopne
sahf
fst
int
std
dec
in
pop
popf
das
lea
mov
out
dec
jge
insl
ficomps
mov
jle
dec
in
pop
popf
dec
lea
mov
out
dec
jge
insl
ficomps
mov
pop
mov
ret
xor
push
ret
imul
pop
mov
mov
fwait
pop
in
pop
xorb
popf
dec
xor
in
fcmovbe
out
icebp
out
mov
xor
push
fistl
jle
xorl
cwtl
gs
inc
ds
in
inc
jecxz
jo
push
ret
pop
jg
dec
xchg
fadds
dec
jmp
fucomi
mov
xchg
fstl
lret
in
mov
cmp
pop
xor
cmpsb
and
sub
int
xor
mov
pop
adc
cs
mov
mov
call
in
int3
xor
lea
jp
cmp
outsb
mov
out
dec
jge
insl
ficomps
mov
jle
dec
in
pop
popf
lea
mov
out
and
sbb
inc
lret
insb
ljmp
subl
stc
jl
jnp
cmpb
sub
in
popa
sti
cmp
or
or
sub
test
imul
adc
insb
cmpsb
sbb
mov
jle
dec
in
pop
popf
lea
mov
out
dec
jge
insl
ficomps
mov
jle
dec
in
pop
popf
lea
mov
out
call
sbb
pop
mov
jp
jle
pusha
outsl
cmp
mov
xor
dec
or
adc
jae
cld
cmp
ret
or
inc
cmp
push
jg
lds
test
jp
aaa
adc
fmull
cmp
and
sbb
mov
push
mov
inc
mov
int3
loope
mov
les
and
test
repz
cmpsb
push
sbb
inc
push
push
ja
int
icebp
in
cmp
rcrl
fwait
lret
cmpsl
pop
hlt
addr16
imul
insl
xchg
aaa
insl
movsb
fs
stos
loopne
cmpsb
in
pushf
xor
pop
data16
fdivrl
jns
mov
sti
scas
fcompl
or
lret
mov
fimuls
mov
inc
mov
pop
dec
mov
clc
adc
scas
icebp
in
ret
or
jmp
push
shlb
rcl
mov
mov
cmpsl
sbb
lock
dec
push
lods
imul
int3
cmp
cmp
push
pusha
outsl
test
out
das
xchg
dec
repz
lea
std
and
pusha
ds
or
or
out
pop
hlt
dec
psubd
cmp
sub
repz
stos
jmp
aas
dec
hlt
jae
mov
mov
insl
shl
std
jae
imul
sbb
testb
push
cmp
aas
and
or
fs
adc
pop
sub
ret
aas
sbb
xor
mov
iret
dec
fwait
mov
sbb
or
aas
mov
enter
leave
arpl
push
push
rolb
inc
js
ret
insl
call
inc
or
fldt
pop
mov
push
int3
fimuls
scas
add
ret
jns
lods
pop
mov
adc
inc
push
mov
xor
sbb
jnp
xor
adc
leave
sub
cmp
insb
adc
mov
mov
sti
scas
fstps
aad
ret
repnz
inc
data16
out
inc
cmp
mov
cmovae
in
mov
inc
adc
jno
rcl
out
pop
jmp
add
insl
jb
scas
into
out
ficompl
mov
notb
cmp
push
pop
push
data16
push
ljmp
jge
jle
jb
xchg
xchg
jg
dec
pop
je
adc
jnp
mov
repz
lods
ljmp
jne,pt
or
aas
pop
xor
sbb
cmc
jg
stos
jge
jnp
out
clc
gs
xor
xchg
xchg
insb
adc
xor
pop
testl
pop
xchg
sbb
bound
vmovd
adc
pop
push
or
call
mov
jl
jp
and
cltd
push
movsl
jge
jp
mov
or
incl
dec
add
sbbb
pop
lods
outsb
stos
scas
test
dec
daa
stos
cmpsl
out
scas
test
fisttpl
adc
mov
push
cld
cli
jmp
mov
inc
mov
xor
pop
xchg
loopne
ss
stos
nop
and
shl
cmpsl
adc
daa
adc
aaa
and
mov
dec
adc
stos
mov
and
sbb
stos
stc
icebp
nop
jmp
test
or
outsb
xchg
jl
fdivs
and
repnz
jecxz
push
xchg
int3
mov
mov
adc
in
push
stc
fstpt
push
jl
lea
fcoms
or
or
mov
jle
sub
loope
cmp
jmp
jne
jmp
sbb
pop
xchg
adcb
pop
add
lods
xor
push
daa
push
mov
icebp
jne
aaa
inc
mov
fmul
lods
cmp
loop
pop
arpl
in
xor
sub
dec
add
inc
minps
xchg
mov
ret
xor
out
iret
mov
lcall
jmp
xchg
les
arpl
fists
and
cmp
mov
inc
push
inc
cli
imul
dec
scas
lret
out
jmp
jns
push
sub
out
out
out
push
pusha
into
imull
cmp
pop
ja
fs
ret
inc
mov
adc
or
sbb
inc
xchg
clc
push
push
sub
mov
add
shll
push
jo
sbb
aaa
fisttps
jecxz
clc
lret
in
mov
xchg
ss
sub
push
xchg
jno
xchg
and
pop
ficomps
push
ret
ljmp
mov
test
xchg
je
pushf
and
popf
cmpb
std
ret
dec
arpl
push
out
dec
es
in
insb
divb
sbb
inc
and
xchg
sbb
cmp
xchg
stos
mov
jmp
cld
aam
cld
mov
lahf
imul
dec
dec
cmp
repz
mov
mov
es
cld
cs
and
push
jnp
sub
xlat
addr16
js
insb
data16
jne
test
inc
or
fbld
cmp
or
push
ljmp
aam
shr
dec
mov
cmp
push
dec
loope
sbb
cmpl
mov
cmp
push
in
cmpsl
jae
rcl
lret
sti
and
mov
lahf
clc
mov
clc
xor
scas
dec
or
cld
in
and
and
jmp
fstp
pextrw
xor
cli
or
jmp
add
push
stos
jmp
or
fdivr
out
or
icebp
jl
inc
or
popa
cld
movsl
mov
repnz
push
pop
std
addb
out
aaa
or
cmp
mov
inc
jbe
inc
cmp
dec
push
ss
push
xor
sub
mov
xchg
lret
xchg
call
fs
and
sub
xor
out
fs
pop
or
push
clc
out
rcll
add
fsubs
les
push
loope
push
inc
lret
stos
xor
push
ljmp
outsl
push
in
aaa
int3
xchg
call
pushf
lods
adc
addl
outsl
out
test
loop
pop
sub
sub
push
popa
lret
daa
arpl
sbb
div
xchg
or
adc
add
mov
incb
xor
jecxz
pushf
and
jmp
push
lods
mov
mov
jl
xor
pop
inc
pusha
std
fnstenv
nop
in
pop
sahf
mov
mov
and
call
add
int
fwait
inc
sti
cltd
sub
loope
ret
pop
adc
jp
lret
je
xchg
cmp
dec
enter
rolb
fiadds
xor
ja
call
push
cmp
push
xor
rclb
push
xor
jb
inc
jo
push
mov
out
fcmovb
fisubl
lret
cmpsl
ja
pop
xor
xchg
loope
cmp
jle
mov
aad
fidivrl
pop
movsb
ds
addr16
mov
or
or
stos
push
pushf
adc
pushf
hlt
jns
jb
shrb
xchg
int3
dec
aaa
push
rorl
aas
mov
pop
mov
ret
leave
mov
xchg
enter
ds
daa
inc
cwtl
jg
xlat
es
pop
lea
fisubs
sysexit
or
sbb
insb
push
adcl
mov
aas
jecxz
pop
in
arpl
dec
and
xor
sahf
xchg
jno
loope
mov
out
mov
jb
push
jecxz
push
push
xor
pop
xchg
stos
jno
iret
pop
stc
test
repnz
call
pop
es
lretw
xor
das
insl
mov
aas
mov
cmp
fdivs
sub
push
fdivs
outsb
xorb
mov
sbb
push
mov
push
ljmp
pop
inc
outsl
push
push
sbb
fcmovu
add
into
ss
repz
or
ja
inc
push
dec
mov
adc
pop
lret
dec
jg
repnz
or
into
test
cli
fidivl
push
aam
aas
fiadds
cltd
adc
clc
and
jb
outsb
sbb
rcr
daa
and
push
dec
stos
and
xchg
mov
daa
shrl
sbb
mov
and
push
cli
das
repnz
icebp
push
jne
xlat
mov
pop
dec
jl
lds
mov
ljmp
pop
xchg
push
scas
jnp
cmpsb
shr
das
jno
aas
mov
xor
scas
pop
rorb
add
jo
jmp
mov
xchg
test
dec
movsb
les
cmp
xchg
inc
mov
cmp
push
mov
sub
push
or
sbb
inc
adc
mov
mov
fnstcw
push
bound
test
cmp
aas
aaa
push
adc
leave
dec
push
jle
pop
fidivrs
sub
jne
add
push
popa
inc
cmp
mov
aaa
cmp
sub
test
pop
bound
push
inc
sti
and
icebp
gs
xor
fsub
lcall
sub
iret
incl
add
mov
testb
mov
mov
scas
shlb
int
sbb
loopne
fimuls
adc
sbb
pop
mov
lds
inc
push
mull
mov
push
popf
pop
mov
or
cmp
xor
mov
movb
push
sahf
adc
aas
cmp
ds
and
mov
fnclex
int3
push
dec
arpl
xchg
test
out
mov
add
gs
jle
adc
stos
imul
or
sub
dec
pop
pop
or
not
lahf
inc
xchg
ljmp
dec
cmpl
lret
inc
insl
jl
bound
fwait
mov
jge
shl
jmp
mov
movsb
test
or
out
sbbb
mov
mov
xchg
insb
jo
mov
lret
movsb
jae
lahf
pop
xchg
cmp
inc
cltd
xchg
notl
or
stos
pop
adc
mov
xchg
sub
cmc
rorb
sahf
js
mov
nop
pop
or
sub
xchg
and
in
fcmovne
out
pop
xchg
mov
je
mov
pop
ret
fimull
ret
arpl
xor
mov
stos
je
jmp
mov
inc
stc
outsb
mov
and
dec
xchg
mov
and
std
pop
pop
dec
and
ja
insb
pop
mov
pop
push
loop
cwtl
push
mov
xchg
std
fwait
testl
cmp
sub
rorb
icebp
sarl
scas
xchg
or
gs
dec
loop
mov
dec
mov
cmp
or
jnp
adc
cwtl
sub
cmp
lea
addr16
mov
cwtl
mov
sbb
imul
loop
popa
mov
sub
xor
ss
sbb
ret
shll
or
and
icebp
and
mov
sbbb
adc
into
test
cmp
jne
call
dec
xlat
or
or
int3
hlt
cmp
or
pop
dec
popf
mov
mov
cld
dec
dec
je
xor
jbe
idivl
pop
mov
xor
dec
ret
call
push
pop
pop
jmp
sub
inc
daa
mov
add
test
cmp
add
push
mov
roll
stc
jae
lock
mov
sub
cmc
outsb
xor
sub
aam
sbb
in
mov
mov
mov
pop
dec
das
xchg
push
mov
outsl
dec
mov
clc
stos
xchg
ret
stos
lock
mov
and
icebp
pop
xor
pop
in
sub
and
jge
dec
adc
mov
stos
int
jae,pt
adc
mov
pop
cmp
jns
push
sub
ds
test
push
mov
or
sti
loope
rolb
mov
push
lret
in
in
jnp
out
movsl
sbb
mov
mov
adcb
out
ds
push
lcall
lahf
je
out
mov
lret
stc
cld
negl
mov
inc
aam
mov
je
xor
ret
mul
push
movsl
xchg
mov
xchg
andb
fimuls
bound
pop
sub
fadds
cwtl
dec
xor
stc
lret
cmpsb
aas
stos
fs
or
mov
lea
jge
filds
or
int
sbb
js
out
cmp
or
and
jb
jno
push
cmp
insl
aam
adc
insb
ljmp
inc
daa
mov
pop
popa
pop
cwtl
cltd
xchg
mull
test
mov
xchg
arpl
sbb
push
pop
insb
loopne
jge
cmc
in
sub
jb
lock
in
int
scas
sub
or
ljmp
xor
fstps
aam
test
and
pop
out
mov
cmpsb
scas
fmuls
fnstsw
sub
push
out
cmp
fldl
adc
sbb
add
jbe
incl
jns
pop
fs
and
test
loop
sarl
dec
cli
jb
iret
jmp
add
ficoml
shlb
or
mov
imul
outsb
lods
xchg
mov
mov
cmc
ret
fistl
inc
push
movsb
pop
mov
mov
or
ljmp
or
add
xchg
lods
push
lcall
repnz
les
mov
gs
lock
cmpsb
mov
ss
fstcw
mov
jecxz
or
out
shll
sub
shrb
jne
stos
push
xchg
out
stos
les
dec
icebp
in
leave
sti
aam
scas
aam
sbb
ficompl
mov
jmp
inc
stos
negb
mov
cli
outsb
lcall
jo
rcr
jno
xchg
adcb
adc
pop
push
mull
call
in
mov
les
pop
orl
cmc
mov
lock
iret
sahf
pop
fadd
js
lods
xor
out
mov
push
xchg
mov
mov
imul
sbb
mov
cmp
lret
inc
mov
xor
fs
or
xlat
scas
data16
stos
pop
fisttpl
jmp
add
sub
mov
adc
jb
adc
add
sub
les
ss
mov
call
popf
fcmovbe
lock
fwait
pop
pop
icebp
lcall
inc
sub
pop
jmp
add
or
cmp
roll
inc
clc
adc
pop
pop
pop
inc
xlat
fldl
inc
jb
jo
pop
imul
inc
shrl
js
repz
xchg
jo
arpl
call
mov
out
ja
mov
arpl
jmp
jl
xor
cwtl
gs
cmp
cld
loop
or
jbe
aas
fs
mov
xchg
xchg
arpl
push
imull
rcll
fildll
bound
xchg
sub
mov
lret
dec
lods
push
cmpsl
push
xchg
aas
mov
inc
pop
repz
outsb
cmc
push
adcl
adc
pop
jl
mov
or
fmuls
mov
mov
add
pop
sub
insl
dec
or
ss
fucom
sbb
push
pop
pop
rorb
out
bound
push
in
cmp
mov
cmc
inc
ja
shlb
adc
or
sbb
mov
dec
rclb
pop
aas
loopne
sbb
and
into
clc
das
lea
ljmp
std
inc
lahf
loope
xor
jno
dec
and
arpl
hlt
jp
and
mov
pop
cwtl
jo
adc
mov
push
insl
ret
in
add
negb
das
clc
xchg
push
xor
sbb
or
xor
popf
lret
call
mov
inc
pop
push
in
and
jg
stc
push
jnp
sbb
cs
xchg
jge
jecxz
in
jge
sub
out
stos
test
inc
ficomps
adc
adc
mov
sbb
shll
js
outsb
pop
std
data16
cwtl
and
cmp
mov
mov
xor
out
negl
fdivs
and
adc
in
test
dec
or
xchg
pop
stos
das
fdivrl
add
jae
xor
add
jns
scas
sub
je
jge
or
pop
xor
scas
push
add
sub
adc
or
dec
es
nop/reserved
sub
arpl
inc
adc
mov
mov
cmc
mov
outsl
in
andl
mov
sbb
lock
cld
xchg
push
mov
pop
pop
cld
lods
mov
sub
jmp
cmp
pop
lret
and
sub
cli
mov
inc
popf
jnp
lcall
push
pop
push
loop
ljmp
sahf
dec
jb
mov
xchg
or
call
imul
ljmp
repnz
mov
pop
mov
popf
xchg
repz
mov
xchg
jp
iret
add
push
les
ljmp
in
jmp
pop
pushf
in
jge
sbbl
aas
icebp
xor
ja
arpl
je
pop
jb
dec
dec
cmc
outsb
dec
inc
es
in
adc
cmc
mov
mov
movsb
xchg
sub
das
or
and
mov
lock
lret
mov
pop
push
jnp
sub
mov
fcoms
mov
jge
cmp
xchg
add
add
push
das
inc
mov
xor
loopne
mov
push
xchg
ss
jnp
adc
mov
scas
pop
cltd
outsb
sbb
ss
lahf
jae
mov
xchg
mov
outsl
jmp
mov
mov
mov
pop
push
loop
imul
sub
sahf
stos
inc
xchg
shrd
adc
sbb
mov
add
into
syscall
shlb
xor
mov
rclb
xchg
and
push
addr16
call
in
loop
rclb
cmpsl
mov
xchg
das
jbe
addr16
adc
lret
mov
mov
add
sbb
pop
and
lret
jns
mov
push
movsl
mov
pop
fistl
push
cli
push
xlat
rorb
jp
loope
pusha
fsubl
clc
sbb
test
mov
int3
ret
jns
dec
xor
cmpl
dec
in
cmp
and
lea
sbb
int
sub
mov
out
xchg
daa
cmp
xchg
add
shll
xor
loop
adc
neg
xchg
mov
sbb
cmpsb
test
sub
add
inc
rorl
pushf
int
cmp
ljmp
js
cmp
jmp
inc
sub
adc
add
inc
fs
push
daa
les
insl
adc
mov
pop
push
cmpsb
push
and
push
out
sbb
mov
in
pop
mov
ja
and
mov
adc
iret
gs
cmp
das
js
push
lret
xorb
push
outsb
jae
repz
pop
js
xchg
insb
dec
pop
ljmp
es
mov
sbb
pop
int
push
inc
sub
jbe
ds
push
test
and
popf
subl
sbb
inc
adc
mov
divb
push
cmpsl
dec
mov
popa
dec
decb
fbstp
std
mov
sti
pop
xchg
aad
loope
sbb
js
insb
sbb
ror
and
shrl
dec
ds
sbb
fstpl
repz
mov
pop
pop
mov
movsb
aaa
cmc
loop
hlt
jecxz
mov
cmpsb
fildl
cmp
push
in
popf
ss
imul
rorl
push
mov
push
mov
pop
pop
fs
les
push
inc
inc
in
std
insl
jl
adc
fdivr
mov
dec
adc
xchg
mov
mov
xchg
ret
cmpsb
ja
and
add
iret
dec
sbb
sbb
bound
aas
pushf
fnstenv
sbb
lods
push
mov
stos
mov
pushf
mov
pop
outsl
inc
sbb
lcall
jecxz
or
lret
push
cmpsb
das
out
fmuls
inc
leave
inc
cwtl
inc
pop
cmp
cmp
les
icebp
mov
leave
sbb
mov
loopne
aad
imul
mov
mov
add
in
repz
mov
lock
jae
fwait
cwtl
sub
stos
xor
pop
push
testl
pop
mov
dec
pop
fildll
lret
cmpsl
xchg
ret
insl
cmp
pop
in
shll
inc
pop
mov
push
jmp
cwtl
outsb
pop
jp
inc
repz
add
stos
outsl
inc
iret
inc
mov
sahf
cmpsl
insl
cmpb
out
fisubrl
std
popa
add
or
ss
bound
cmp
pop
cmpsb
and
fisttpl
add
pop
xchg
in
in
out
pusha
dec
ljmp
cs
push
stos
adc
add
inc
aad
pop
repz
and
sub
xchg
push
pop
test
loop
out
pop
mov
cs
sahf
xor
mov
cwtl
test
fwait
leave
xchg
xchg
adc
adc
mov
in
fnstsw
jg
mov
sub
fdivrl
movsl
ftst
jns
xor
xchg
xchg
add
js
hlt
pop
scas
shlb
dec
jecxz
pop
push
push
icebp
fxch
in
lret
lcall
mov
dec
outsb
popa
and
scas
adc
push
enter
js
pop
jp
mov
pop
mov
inc
dec
cwtl
shll
repz
test
ss
flds
sbb
movsl
add
mov
fadd
fistpll
adc
add
add
imull
adc
scas
or
sahf
jle
dec
in
pop
popf
lea
mov
out
dec
jge
insl
ficomps
mov
jle
dec
in
pop
popf
lea
mov
out
dec
jge
insl
ficomps
mov
jle
dec
in
pop
popf
lea
mov
out
dec
jge
insl
ficomps
mov
aam
dec
in
sub
cmpsb
add
loope
inc
sbb
mov
das
orb
into
sarl
and
jle
outsb
in
dec
in
dec
imul
pop
out
insl
fidivrs
lea
push
lea
std
dec
mov
out
scas
mov
out
divb
jge
jmp
imul
cmpsb
aas
scas
add
mov
push
add
mov
push
bswap
mov
movsl
repnz
pop
mov
stc
adc
lods
push
mov
adc
push
lock
jnp
jmp
push
xor
cmpl
repz
pop
sub
sub
test
dec
and
mov
mov
outsb
and
out
jne
enter
mov
pop
cs
xchg
mov
shrl
incb
xor
std
and
xchg
dec
or
adc
mov
iret
lods
mov
lods
pop
clc
push
mov
fucom
adc
mov
dec
sub
ret
inc
mov
mov
xchg
in
inc
mov
or
inc
sub
pop
push
mov
cmp
out
insl
fcmovnbe
dec
es
fildl
lea
test
jns
pop
std
sub
scas
pop
lahf
inc
and
jge
lea
push
enter
mov
pop
cwtl
and
js
pop
out
pop
mov
sub
lods
push
dec
mov
mov
test
mov
lret
dec
ljmp
push
xchg
pop
out
insl
fidivrs
lea
popf
lods
push
mov
outsb
in
pop
std
dec
or
sahf
cmp
out
insl
fidivrs
lea
popf
lods
push
mov
outsb
in
pop
std
dec
or
mov
mov
add
es
outsb
inc
into
xchg
xchg
add
cmp
jae
or
call
repnz
ds
mov
aaa
push
outsb
jb
aam
aaa
icebp
outsb
jge
rep
sub
fnsave
sbb
inc
les
adc
out
push
movsl
push
add
int3
in
push
mov
xor
inc
sbb
mov
fwait
xchg
shrb
es
jo
aas
pop
icebp
aam
inc
mov
xor
or
fnstenv
out
sarl
mov
out
jg
push
xlat
and
shlb
ljmp
ficomps
fcoms
repnz
sbb
or
in
leave
push
in
add
mov
je
dec
sub
add
lret
push
lret
and
or
pop
sub
nop
push
or
push
cmp
mov
xchg
mov
pop
add
repz
je
lret
inc
imul
movsb
sub
cltd
xchg
mov
shl
mov
fistl
jl
xor
mov
dec
mov
loopne
mov
jp
fcmove
xor
fidivrs
subl
shlb
lea
mov
and
insb
push
std
add
push
push
nop
js
ljmp
or
subb
inc
jle
std
and
scas
je
sbb
cmp
movsb
mov
ret
mov
shlb
imul
adc
jb
dec
mov
xorb
mov
mov
dec
js
iret
int3
hlt
jnp
cld
xchg
lret
jecxz
cmp
cmp
dec
pop
pop
pop
mov
out
mov
push
lcall
pop
test
fs
shrb
outsb
xchg
ja
cs
sub
ljmp
mov
repnz
pop
jnp
fildll
insl
lods
mov
mov
roll
add
mov
imul
mov
dec
xchg
jae
xlat
cmpsb
push
jns
add
lock
inc
bnd
shll
pop
orb
push
lcall
mov
inc
lret
repz
xchg
inc
aad
sbb
movsl
jp
pop
fistpl
jg
jge
xchg
fistl
sub
popf
fninit
jbe
mov
sub
jae
mov
jno
jne
pop
aad
jnp
xor
mov
mov
stc
mov
in
xor
mov
in
or
stos
pusha
mov
xlat
push
cltd
push
testl
lods
divb
pop
lahf
pop
mov
xor
mov
mov
dec
push
int
cs
lahf
imul
mov
daa
mov
adc
lea
jecxz
cmpsl
push
jns
in
sti
movsb
adc
jns
cmp
mov
in
pop
fcomp
ffreep
in
je
mov
repnz
sbb
insl
and
push
inc
mov
or
call
cmp
dec
jne
cmpsl
xchg
cltd
pop
rcl
lret
bnd
je
ds
jg
aaa
rcl
pop
lahf
testl
lods
in
sbb
jo
aad
popa
incb
sbb
push
gs
cmp
rcr
xor
xchg
sbb
cmp
roll
aaa
in
scas
mov
sub
xor
pop
mov
std
inc
rcrl
js,pn
outsb
add
jmp
ljmp
mov
icebp
jb
dec
inc
pop
push
mov
dec
dec
jae
js
add
insb
mov
xchg
and
cs
leave
xchg
aaa
pushl
sbb
in
or
test
les
cli
les
xor
adc
divl
aas
adc
or
xchg
mulb
insl
sarb
negb
pusha
sub
aas
xchg
mov
loopne
imul
jo
icebp
mov
cmp
mov
mov
inc
mov
in
daa
imull
jae
push
adc
xor
mov
mov
nop
hlt
imul
gs
rclb
sub
int
cltd
movl
shrl
ficomps
add
cltd
es
jl
pushf
shlb
stc
cmp
or
or
call
bound
add
lahf
push
sbb
push
js
mov
jae
test
rol
sbb
xchg
or
sbb
out
cmp
pop
scas
gs
out
es
fcoms
addl
dec
xchg
icebp
lods
mov
aas
aas
out
arpl
mov
mov
inc
sti
sub
adc
jo
daa
xor
gs
stc
push
mov
cmpsb
push
fdivrl
inc
add
or
jge
cli
stc
mov
xchg
out
mov
jae
add
loop
stc
pop
shl
and
cmpsb
jmp
xor
inc
outsl
fiaddl
inc
movsb
mov
aaa
xor
nop
ja
faddl
es
clc
xchg
dec
mov
repz
jecxz
popa
or
and
loop
xchg
outsl
and
xchg
mov
mov
cmp
mov
dec
pop
popf
add
lahf
imul
mov
inc
fidivrl
outsb
mov
iret
in
scas
pusha
push
add
movsl
pusha
test
mov
jns
lret
dec
pusha
loop
mov
insb
jl
jns
inc
inc
sub
or
nop
mov
xchg
mov
dec
pop
xor
jb,pn
scas
add
adc
fistl
pop
cmp
pop
jo
or
shll
sub
outsb
repnz
mov
push
enter
mov
dec
bound
jno
dec
clc
hlt
and
ror
loop
mov
jae
jne
in
pop
lods
orl
fucomp
add
pop
pop
loopne
jnp
lock
int3
xorb
inc
cmp
stos
lods
jbe
cld
mov
sub
push
loope
stos
rcll
push
cli
add
jbe
mov
dec
fs
mov
or
sbbl
mov
xchg
pop
and
push
mov
push
pop
xchg
sbb
sbb
jae
ror
inc
pop
addr16
mov
push
ss
fcmovnb
subl
push
push
int
dec
rclb
popf
sbb
jle
mov
insb
stos
push
cwtl
clc
nop
cmp
push
rorb
lods
popf
fisubrs
subb
or
adc
cmpsb
or
stos
jp
test
subl
fwait
pop
arpl
roll
cld
pushf
mov
mov
out
inc
lds
movswl
and
sub
adc
fistpll
inc
jbe
aas
push
shrl
push
cltd
add
inc
out
adc
sbb
push
sub
call
into
push
mov
stos
std
pushf
stos
lret
inc
push
fdivs
pusha
or
mov
jge
lret
insb
jo
scas
rcrl
out
inc
out
inc
in
xor
jbe
push
shl
scas
je
jbe
jo
es
dec
adc
gs
imul
jae
js
mov
test
cmp
xchg
outsb
mov
inc
imul
hlt
call
pop
lret
ja
std
hlt
pop
cmc
repz
jge
enter
adc
add
lahf
cld
cwtl
add
jp
clc
insb
lcall
push
xchg
lods
fimuls
xchg
add
dec
add
in
add
jg
jle
xchg
repz
inc
fisttpll
push
dec
and
dec
ljmp
xchg
push
add
out
cmpsb
or
mov
inc
jno
xlat
xor
adc
clc
mov
lods
mov
adc
test
stos
cmpsb
lcall
cmpsl
icebp
rol
stos
por
les
sbb
sub
dec
xchg
data16
out
loopne
mov
jmp
pop
pop
lahf
lods
addr16
nop
cmpsb
xor
mov
pop
repz
call
shll
pop
loop
cmp
cmp
ret
icebp
dec
pusha
jo
add
and
sub
fcmovnbe
nop
ljmp
mov
mov
ja
add
addr16
jbe
cmc
ret
fmul
mov
loope
cmp
clc
or
int3
lcall
xor
jmp
mov
add
jns
add
jg
test
jb
push
or
jb
int3
cmp
hlt
mov
data16
and
stc
call
mov
mov
jae
push
icebp
insb
cs
jecxz
sahf
or
leave
jo
jge
mov
xor
fdivp
push
sub
icebp
push
push
or
in
and
pop
or
push
in
xor
adc
mov
in
push
lds
jmp
jle
xchg
shr
out
ret
out
ljmp
jbe
pop
or
inc
movsb
aad
and
mov
jge
jae
jl
mov
cli
and
out
cld
and
scas
repnz
push
fwait
sub
pusha
push
xlat
mov
andb
push
sub
xchg
xor
arpl
das
mov
mov
fmuls
divl
shlb
mov
or
lahf
imul
sub
loopne
cli
out
inc
jns
sub
dec
jae
test
fists
mov
xchg
adc
std
cli
movaps
ja
add
mov
mov
lcall
into
xchg
jne
pop
ljmp
insb
stos
push
mov
imul
add
aam
clc
add
ja
bound
popa
mov
sbb
in
cli
xchg
insl
pop
add
xchg
fstpt
mov
push
and
in
les
adc
out
out
pop
jg
lahf
nop
jmp
xchg
call
mov
sbb
nop
push
inc
aam
pop
jg
rcl
adc
sub
mov
inc
xchg
ret
rcrl
push
out
fwait
pop
and
or
xor
push
ret
xor
cmpsb
push
jno
dec
lcall
mov
and
sub
outsb
cmp
jle
pop
push
mov
or
mov
test
mov
rcl
jmp
jge
rorl
xchg
xchg
call
loope
mov
fistpl
fwait
aad
insb
push
xlat
idivb
adc
and
movsb
jmp
negl
push
into
popa
push
faddl
dec
cmp
mov
pop
cmp
mov
cs
or
test
adc
test
xor
dec
ss
cmp
cld
dec
mov
pop
pop
cwtl
or
cmc
in
fisttpl
cmp
dec
cltd
shll
mulb
shll
and
inc
mov
sub
add
sub
xchg
aam
pop
xor
sbb
push
push
fildl
mov
sub
out
js
or
pop
dec
je
lds
outsb
pop
leave
jecxz
sbb
cli
lock
pop
daa
repnz
xchg
repnz
fisttpll
das
orb
out
mov
in
scas
repz
xchg
cltd
xchg
mov
ret
lods
mov
cmp
ja
jl
push
xchg
pop
jmp
ja
or
pop
iret
mov
decb
jno
outsl
mov
push
jmp
mov
mov
sub
add
pop
adc
les
fsub
lahf
cltd
loopne
gs
gs
stc
jecxz
stos
sbb
add
mov
mov
clc
pop
insl
int
sti
call
cmpsl
inc
adc
mov
cmc
insl
aam
les
es
push
inc
push
scas
in
pop
adcl
cmpsl
jbe
loopne
mov
fs
test
mov
xchg
int
lods
jmp
daa
addr16
xchg
push
cmp
mov
mov
mov
add
dec
rorb
dec
cmpsl
popf
adc
arpl
cmpsl
push
xchg
mov
insl
pop
mov
lret
ds
push
xor
add
sbb
roll
jp
or
mov
add
push
rcll
int
in
test
sbb
push
int3
jnp
sahf
push
add
sub
in
js
enter
gs
fcoms
and
and
push
js
fcompl
jmp
ret
mov
sar
add
cltd
jge
cmp
sbb
test
cli
pop
mov
inc
cltd
push
cmpsl
dec
fadd
in
cs
daa
lock
bound
xchg
jno
cmc
addr16
fldl
mov
xor
xchg
sub
jnp
pusha
into
scas
adc
repnz
add
imul
lret
xor
inc
out
js
xchg
cwtl
pop
lds
pop
adc
mov
add
push
scas
shrb
push
add
mov
jp
jp
xor
mov
jmp
or
mov
and
push
pop
jp
cmc
sbb
and
sub
jmp
add
test
sbb
add
addb
loope
cmp
inc
dec
scas
mov
andl
loope
aam
push
aaa
lcall
mov
add
inc
pop
pop
mov
and
pusha
sbb
psubb
push
jmp
pop
nop
xor
mov
into
out
mov
leave
mov
dec
das
sarb
mov
in
icebp
xchg
adc
lahf
aad
xchg
aaa
cmpsl
roll
ficomps
orl
jno
mov
cmc
add
out
mov
sub
mov
gs
out
jge
loop
mov
lcall
and
imul
pusha
jle
dec
push
cmc
outsl
cmp
pop
dec
jge
sarl
sbb
mov
pslld
out
and
jnp
rcr
sub
sub
daa
jae
xchg
imul
mov
push
mov
jp
and
add
mov
bound
js
and
cltd
addr16
mov
xlat
mov
fistpll
sbb
ds
filds
out
iret
push
hlt
movsb
pop
aam
outsl
xchg
mov
fisubrs
nop
adcl
cs
inc
mov
xchg
or
mov
jo
mov
iret
insb
rcrl
mov
daa
jnp
nop
pop
mov
xchg
fcom
loope
mov
inc
lods
mov
pop
pop
xlat
std
clc
fidivs
icebp
ss
cmc
aad
sbbl
stos
ja
sbb
in
pop
test
jge
push
push
insl
fldt
adc
mov
push
std
jns
pop
test
push
pop
push
movb
fsubrl
push
icebp
mov
or
or
mov
mov
push
addr16
lcall
addl
and
cmp
xchg
setl
xchg
adc
mov
es
or
push
inc
rcrl
mov
add
cmp
jns
sub
mov
jb
adc
mov
mov
or
pop
shll
push
xchg
adc
mov
dec
mov
adc
std
ljmp
xchg
jb
mov
fadds
add
push
inc
or
das
subl
jnp
xor
pop
cmp
push
insb
sub
sahf
lcall
adc
insl
dec
lock
jnp,pn
imul
or
gs
mov
mov
jmp
faddl
fdivs
pop
jb,pn
xlat
fstl
add
and
inc
imul
lret
fwait
out
cs
ljmp
dec
adc
add
repz
pop
push
insb
out
dec
loopne
and
and
insl
pop
je
mov
adc
jg
ss
adc
push
pop
xchg
xor
stos
ja
and
inc
into
data16
mov
mov
push
xchg
cltd
xchg
pop
mov
inc
sbb
sub
and
push
pop
sar
pop
sbb
int
mov
mov
mov
adc
pop
test
scas
daa
xor
fstpl
incb
push
out
mov
lods
mov
sbb
inc
dec
jp
cs
test
sbb
clc
ds
push
push
les
push
sbb
dec
or
mov
push
mov
cmp
sub
push
lods
jmp
xor
cltd
inc
dec
pop
rcl
subb
dec
push
test
call
inc
inc
aas
icebp
adc
movsb
ret
loope
inc
pop
enter
pop
in
sbb
nop
inc
mov
add
movsl
cmp
repz
out
push
mov
push
jl
test
ds
nop
dec
or
mov
sbb
in
inc
fstl
fwait
jnp
xor
shrb
nop
mul
adc
cmc
jecxz
sbb
jo
ljmp
or
outsb
cmc
fcom
popa
adc
lock
fsubrl
enter
fdivrs
cmp
popa
rorb
jp
ret
and
sarl
lahf
push
xor
rclb
dec
and
rcrl
push
xor
in
nop
je
push
outsb
cmp
cmp
lret
or
cmp
jl
outsb
decb
sbb
or
in
gs
jb
cli
stos
loop
adc
inc
and
push
jl
icebp
leave
mov
xor
ficompl
gs
fisttpll
ror
add
sbb
fnstsw
enter
cld
arpl
pop
push
add
add
loop
mov
mov
jne,pn
lret
out
out
negb
jge
pop
data16
jle
sbb
and
mov
and
cli
sub
mov
insl
push
xchg
cwtl
dec
andps
cmp
jmp
jae
rorb
pop
fsub
inc
fcoms
sub
mov
mov
mov
sub
xchg
shl
lret
jbe
mov
add
testb
pop
push
xchg
inc
and
mov
lret
mov
adc
inc
nop
or
jmp
fwait
scas
pop
push
loop
lret
js
jo
adc
sbb
cwtl
je
orb
scas
fdivl
cltd
outsb
arpl
in
rorb
rcrb
fstpl
add
dec
or
pop
into
mov
shrl
add
mov
arpl
aad
inc
pop
pop
mov
mov
sub
test
popf
aad
insl
lods
and
mov
roll
ljmp
lds
cltd
jo
int
or
cs
mov
fsub
and
jg
cmp
cmp
lret
out
push
in
test
sti
icebp
pop
in
mov
data16
push
add
sub
je
lods
fnstcw
xchg
in
mov
cmp
leave
lahf
cmpsb
sbb
mov
xor
maskmovq
mull
mov
out
fsubrl
cwtl
in
lea
mov
outsl
mov
mov
push
jb
xor
push
pop
mov
call
scas
test
sub
fldenv
mov
inc
xchg
jp
jae
push
dec
mov
add
fbld
insb
das
inc
or
and
cmp
fcoml
adc
dec
dec
cmp
inc
lods
int
push
shll
cmp
mov
and
es
push
hlt
inc
fcoms
mov
sbb
stos
lods
sub
xchg
push
mov
in
or
pusha
hlt
and
sub
and
je
lahf
push
mov
subb
push
outsb
mov
adc
xor
rcrb
pushf
out
sub
push
mov
lods
shl
inc
cwtl
icebp
cmp
pop
pop
cmp
subb
imul
mov
daa
out
xor
cs
in
mov
repnz
jne
fidivrs
addr16
sti
and
mov
xchg
iret
push
inc
mov
stos
insb
or
push
push
jb
dec
sub
subb
mov
lret
call
mov
sbb
sbb
sbb
jns
std
or
pushf
inc
cmpsl
inc
pop
das
sahf
andb
jg
inc
add
xor
enter
xor
cmc
add
add
and
jbe
cmp
jecxz
ret
xor
inc
or
in
xor
mov
stc
add
das
xor
jb
lret
jne
xor
insb
enter
cli
mov
xchg
aas
int3
sbb
pop
adc
lock
popa
xor
stc
mov
mov
lods
insl
je
dec
xchg
sub
and
les
popa
clc
xchg
ja
out
test
mov
shrl
sbb
jmp
mov
cmpsl
pop
into
insl
stos
mov
sbb
mov
test
pop
arpl
std
ret
mov
pop
fcompl
xchg
sub
cld
sub
out
sub
aas
je
jb
mov
or
push
add
jp
vminss
push
in
cld
mov
in
jecxz
in
lock
andb
cmpsl
shrb
in
iret
push
loop
cmp
dec
insl
fdivrs
sarb
outsb
insb
rcrl
pop
push
lret
cmp
popf
cmc
fistps
push
cltd
sub
xchg
loopne
xchg
jp
outsb
mov
nop
shlb
popf
lock
out
mov
aad
add
ret
stos
insl
pop
push
push
or
movsl
push
repz
push
pushf
repz
sub
jae
pop
test
adc
clc
in
dec
enter
out
and
mov
push
inc
call
test
pop
ficomps
inc
scas
xor
cmp
mov
jge
fildll
lock
shll
mov
andb
push
or
xor
mov
mov
sub
scas
jl
dec
dec
add
les
inc
scas
push
cmp
out
insl
fidivrs
lea
popf
lods
push
mov
outsb
in
pop
std
dec
or
sahf
cmp
out
insl
fidivrs
lea
popf
lods
push
mov
outsb
in
pop
std
dec
or
sahf
cmp
out
insl
fidivrs
cs
push
mov
outsb
in
pop
adc
scas
ja
sbb
out
insl
fdivrp
into
lea
bound
notb
adc
faddl
test
mov
dec
adc
jl
or
sbb
sub
cmp
int3
xchg
faddl
mov
pushf
lds
pop
gs
xor
sbb
gs
xchg
faddl
mov
pushf
lds
jg
sbb
sbb
outsl
pop
push
gs
ficoml
es
das
aaa
loope
mov
pushaw
jnp
adcl
and
mov
cmp
push
movsl
lock
sar
xchg
xor
test
and
jp
insl
xor
int
xchg
xchg
leave
fstps
adc
mov
or
call
stc
fmuls
mov
int3
cmp
das
jns
movsl
in
arpl
cmc
jp
sbb
xorl
sbb
aam
mov
lahf
jne
jp
xor
pop
jae
mov
dec
jmp
mul
pop
inc
pushf
mov
lock
roll
pop
cmpsl
mov
lods
add
pushf
and
dec
sub
ds
test
mov
movsl
mov
pushf
lds
pop
add
or
sbb
sub
cmp
test
fdivrl
cmp
pop
pop
cmp
xor
ss
ja
and
xchg
test
mov
xlat
jmp
cmp
ds
cmp
push
jl
sti
ss
inc
adc
stos
stos
fstpl
lds
pop
add
or
sbb
sub
cmp
int3
xchg
faddl
mov
pushf
lds
pop
add
or
sbb
sub
cmp
int3
xchg
mov
loop
sbb
cld
mov
and
testl
inc
adc
lea
or
rolb
inc
incb
jb
test
aad
aam
stos
imul
push
insl
push
imul
or
out
xchg
repz
xlat
xchg
fwait
lret
popf
gs
inc
adc
dec
xchg
jnp
pushf
gs
inc
fsub
dec
insb
dec
je
pop
inc
and
popf
cmp
arpl
mov
in
add
push
insl
mov
out
pop
xchg
fidivs
insl
cmpsl
push
ftst
das
testl
mov
dec
cmp
cmc
and
mov
sarl
mov
jge
adc
push
dec
xchg
xor
test
adc
data16
adc
mov
lea
lea
lahf
inc
stos
cwtl
sbb
icebp
push
movsb
in
dec
or
rolb
clc
push
xchg
and
addl
ljmp
insb
scas
repz
jle
or
inc
jb
sti
and
sbb
popf
xchg
sub
lock
dec
or
dec
cmpsl
or
sbb
or
inc
stos
sub
and
stc
test
out
cmpsb
ret
mov
pop
shlb
insb
cltd
test
fisttps
sar
or
cmp
jns
enter
pop
das
adc
outsb
mov
movsb
or
test
lret
or
leave
cs
push
jge
movb
into
lret
roll
in
out
or
dec
cmpsl
pop
cmp
dec
dec
test
aad
dec
cmc
mov
push
pushf
add
jns
and
push
mov
push
js
rcrb
popa
test
and
test
mov
xchg
push
adc
sahf
or
or
push
adc
adc
les
jno
jl
push
in
outsl
and
add
mov
dec
xlat
xor
dec
fwait
aam
filds
cld
push
xchg
dec
neg
ret
fnstcw
inc
aam
xor
lods
xchg
or
out
xor
xchg
ret
jecxz
push
xchg
pop
int3
sub
or
aad
ljmp
mov
and
add
shlb
ret
aas
dec
xor
lock
movsb
enter
cmp
daa
ljmp
cld
pop
and
pushf
andl
je
inc
clc
mov
xor
inc
push
lods
inc
fs
adc
jmp
inc
stos
add
sub
sbb
mov
out
fs
mov
mov
inc
ja
stc
mov
sub
aam
cmc
int
and
xchg
ret
mov
add
mov
xchg
sti
pop
bound
or
repnz
lock
popf
cmp
int
in
fdiv
adc
mov
dec
jo
cltd
in
pop
pop
jp
mov
xor
push
lds
sbb
dec
mov
stos
jp
or
icebp
xor
std
cmp
xchg
sbb
clc
push
sahf
stc
test
cltd
stos
push
cmpsb
jle
insl
xchg
test
mov
push
inc
and
fbstp
clc
clc
pusha
inc
xchg
cmp
cmp
arpl
jno
add
arpl
push
sub
std
imul
add
jno
sbb
out
shll
fwait
inc
cmp
lahf
lock
icebp
sub
xor
lods
div
push
movsl
sti
fisttps
gs
cmpsb
jecxz
pop
fnsave
fwait
into
adc
mov
repnz
xor
jge
pop
pop
xchg
mov
xchg
or
push
xlat
test
cmp
rcll
pop
out
stc
test
or
mov
inc
fmuls
jp
mov
pop
scas
pop
cmovae
ret
lcall
jl
adc
imul
jmp
negl
out
xchg
data16
pop
pop
inc
mov
insb
pop
aas
dec
xchg
insb
or
pop
aam
push
aas
out
jo
add
jnp
cmp
fisubrl
mov
aam
push
jge
mov
hlt
ljmp
test
pop
rclb
cld
pop
cmc
lock
int3
ret
mov
push
pop
cmpb
stc
dec
and
and
nop
cmp
cwtl
addr16
insl
fxtract
aaa
inc
or
ret
pop
stos
adc
mov
dec
aas
fdiv
jne
lret
xor
leave
inc
dec
fmul
out
mov
mov
xchg
mov
xor
jecxz,pn
in
xor
xor
cld
rclb
mov
mov
lret
sub
xor
add
int
jg
jle
scas
aas
jae
jnp
sbb
aaa
push
jae
out
jge
dec
fwait
hlt
xor
sub
imul
in
sub
out
je
mov
xor
imul
ss
into
mov
inc
pop
lahf
cli
mov
mov
mov
mov
daa
fcomps
cmpsl
data16
mov
cmp
xchg
into
incl
int
jns
rcrb
pushl
mov
sub
ret
pop
cmpsb
lods
add
mov
adcl
fdivrs
pop
or
push
and
loopne,pn
std
test
cmpsb
fstpl
inc
mov
push
call
mov
enter
inc
repz
jge
movsb
adc
jle
sbb
mov
ljmp
nop
test
or
sub
out
testl
inc
pop
aaa
adc
in
bound
gs
inc
push
sbb
test
js
icebp
push
ja
into
sub
ja
sbb
cmp
ja
jnp
jge
pusha
shrb
repnz
mov
jl
mov
hlt
data16
lock
flds
or
loop
xor
dec
scas
mov
ja
or
push
movsb
into
dec
daa
es
ret
jne
sbb
arpl
dec
push
mov
dec
in
mov
cmp
inc
lods
dec
inc
rclb
scas
xchg
shll
dec
fs
sub
cmp
mov
sarb
cmpsb
out
enter
imul
mov
mov
les
int3
bound
fwait
jo
in
test
add
or
mov
outsb
jae
addr16
subb
push
adc
addr16
fwait
call
in
fdivrl
hlt
dec
incl
enter
dec
pop
aad
sti
inc
jno
xor
es
mov
mov
popl
inc
sbb
dec
movsl
sub
rcr
push
pop
push
jecxz
or
lcall
cld
insl
in
lcall
in
ficomps
pop
pop
lods
lret
aaa
dec
mov
mov
push
mov
sbb
mov
gs
adc
std
push
int
test
rcr
aam
jbe
mov
xor
lret
pushf
and
and
aad
aas
popa
out
add
sbbl
dec
jae
cmp
hlt
dec
xchg
sahf
les
stos
mov
fistl
xor
pop
pop
xor
pop
into
mov
mov
aad
stos
stos
lret
pop
adc
in
push
mov
push
xchg
ljmp
pop
iret
pop
inc
inc
jp
xchg
ret
inc
inc
or
movsb
inc
add
out
bound
aaa
ss
inc
adc
stos
out
repz
jecxz
jecxz
sbb
daa
add
in
push
shr
fwait
sbb
out
rcrb
int3
add
push
push
mov
enter
pop
nop
pop
pop
cmp
and
pop
cmc
jne
fdiv
iret
xchg
sub
adc
fcomps
pop
int3
cmp
jmp
and
mov
xorl
pop
xor
cmp
fdivrl
addl
cmpb
inc
nop
aaa
roll
and
out
push
sbb
das
jne
jp
adc
in
test
ljmp
dec
nopl
ret
pusha
js
xor
cltd
mov
aaa
pop
pop
pop
xor
clc
xlat
shll
adc
sub
pop
mov
shr
sub
jl
cld
jnp
push
inc
push
dec
lock
decl
inc
data16
push
cmp
sbb
das
sub
xchg
xchg
and
or
adc
jl
or
sbb
jb
daa
movsb
outsb
shlb
test
int
call
jne
pop
fsub
cli
fwait
xchg
and
cmp
lds
fisubrl
lods
test
into
lret
std
mov
test
adc
ret
push
stos
repnz
and
scas
jbe
mov
sbb
push
mov
pop
inc
std
and
mov
loopne
sbb
clc
dec
fidivrs
xchg
std
jp
frstor
pushf
mov
lock
xchg
adc
js
stos
adc
mov
sti
adc
jne
jne
pop
out
cltd
sbb
sbb
or
add
in
inc
mov
and
pusha
xor
sub
aad
inc
push
test
cmpsl
push
mov
mov
mov
adc
cmp
xor
and
sbb
icebp
jnp
es
aaa
ficoms
stos
pop
pop
lcall
cmp
gs
push
out
mov
pop
xchg
cmp
std
fldt
mov
aas
cmp
loop
mov
mov
mov
aas
jmp
int3
mov
jbe
cli
dec
popa
pop
aam
inc
push
cs
push
lret
xchg
popf
pop
movl
adc
popa
xchg
popf
test
scas
loop
xor
cs
pop
cmpsl
les
mov
lcall
int
and
push
inc
mov
xchg
repz
inc
dec
cmp
jo
sub
xor
dec
xor
mov
inc
pop
ljmp
divb
xor
add
or
orb
dec
mov
pusha
mov
pop
and
or
push
in
ds
pop
adc
enter
stos
insl
xorb
mov
je
xor
daa
mov
mov
push
je
lahf
je
or
ja
cwtl
rcrb
sbb
push
adc
leave
or
jp
int
mov
out
mov
dec
jb
fstps
jmp
pop
mov
cwtl
jb
push
sbb
xor
inc
add
ret
stc
mov
sbb
push
int
adc
cmc
outsl
mov
dec
movsl
xchg
inc
shlb
push
cmp
mov
es
inc
fstpl
xchg
lahf
in
loope
adc
aaa
mov
fisttpll
sbb
mov
outsb
and
or
fnsave
xchg
fucomp
stc
inc
inc
insb
int
test
pop
xchg
dec
mov
sbb
orb
inc
jmp
dec
jg
mov
jne
mov
push
cmp
or
mov
inc
lret
fsubrl
mov
cmp
or
loope
and
imul
stc
cli
std
add
outsl
push
test
push
add
xor
cmp
insb
sbb
bound
pop
add
mov
xor
testl
inc
hlt
repz
scas
jp
sbb
jbe
mov
shll
jno
gs
mov
js
pop
hlt
and
pop
add
cmp
lds
jmp
cmp
sbb
add
hlt
xchg
xchg
outsl
jmp
sub
repz
xor
push
pushf
stc
pop
pop
mov
jb
fcmovne
dec
loopne
xor
cmp
sti
shrl
cmp
xor
xchg
mov
ret
xor
in
pextrw
fwait
sub
movsl
scas
mov
sbb
add
or
das
and
js
dec
adc
xor
lock
sbb
jb
push
and
xchg
shl
push
leave
ret
int
sti
leave
sbbl
repz
cltd
call
lock
cmpsl
test
pusha
int3
icebp
cmp
insb
push
mov
loopne
adc
stos
std
rcr
outsl
and
das
sbb
insl
lds
jbe
jb
cmp
inc
jp
push
int3
jae
xor
jo
stos
les
inc
jg
and
jecxz
adc
sarl
mov
inc
and
cmc
fs
out
leave
lea
and
not
sub
into
fidivrs
gs
cmc
roll
stos
mov
lret
mov
cmp
add
adc
xchg
push
in
push
ljmp
xchg
addl
inc
and
sub
sbbb
cmp
outsb
xor
mov
pop
xor
lock
mov
nop
int3
pop
lods
inc
pop
mov
dec
adc
cwtl
les
ds
cmc
lods
mov
es
and
xorb
pop
xchg
les
inc
mov
fnstenv
add
hlt
jae
test
mov
cltd
daa
fcmovne
mov
lahf
stos
pop
pop
in
roll
pop
adc
mov
cld
xchg
sub
imul
mov
mov
jl
push
sbb
mov
lret
and
cmp
pop
decb
addr16
out
and
or
mov
mov
xor
repz
mov
push
pop
int3
insl
outsb
into
movsl
xor
mov
mov
in
lcall
pop
inc
adc
push
outsb
mov
lahf
loope
add
push
cmpb
outsb
lds
inc
ret
into
mov
add
addl
in
repnz
incl
scas
xlat
popf
incb
aam
daa
in
inc
sarl
add
ja
sub
or
lods
incb
mov
add
add
push
rorl
cmpsl
mov
leave
lods
dec
fldl
push
inc
dec
dec
mov
int
into
stos
inc
out
out
mov
loope
shr
xchg
or
dec
iret
outsl
push
lret
loope
xor
lods
xchg
pop
insl
fisttpl
pop
dec
je
subl
fstl
mov
fucomp
sti
cmp
mov
xchg
decl
pop
test
and
pop
mov
cltd
loop
mov
iret
jae
vmovd
popf
push
rcll
sub
mov
mov
push
ds
insb
or
outsb
fsts
jmp
xchg
pusha
ljmp
mov
or
aam
sbb
jmp
lea
or
jo
ret
stc
or
fstps
int3
fwait
mov
imul
xchg
or
jb
cmc
hlt
xlat
add
cs
lcall
in
dec
cmp
adc
xlat
ja
testl
cmp
sub
and
cmpsl
aad
mov
fimull
dec
jo
insb
out
js
inc
adc
pushf
mov
ljmp
les
jo
push
mov
and
jb
aad
mov
mov
aaa
pop
mov
pop
addr16
xor
in
or
lahf
aad
mov
dec
mov
xlat
ret
test
in
pop
jmp
lcall
aam
or
lret
dec
cmc
in
mov
xchg
mov
into
xchg
test
addr16
sbb
push
aad
sub
pushf
mov
dec
rcll
inc
filds
dec
cmp
aad
dec
or
fld1
mov
fisttpll
fwait
sbb
call
push
mov
sahf
xchg
inc
lock
xchg
into
int
loopne
pop
nop
test
jae
test
adc
mov
dec
mov
fsubrs
ret
inc
push
mov
imul
jno
inc
pop
ja
dec
in
sbbb
jnp
mov
adc
sarl
imul
xchg
lcall
sub
fadd
scas
push
mov
enter
xchg
xorl
sub
pop
cld
or
fildl
push
sub
dec
mov
xchg
mov
mov
repz
push
dec
ret
mov
push
ret
inc
daa
iret
stc
stc
fsubrl
inc
jno
xor
insb
adc
fisttpl
mov
fsts
testl
mov
dec
test
in
shl
mov
minps
xchg
setl
imul
fsubr
cmp
lea
insb
jp
xor
mov
xchg
insl
mov
ss
ss
xchg
cmp
ror
sti
addr16
clc
xchg
insb
mov
pop
dec
loopne
cltd
sub
pop
mov
lock
std
cmp
mov
xchg
adc
int3
cmpsl
inc
pop
jns
ljmp
call
loopne
pushf
xor
jae
imulb
xlat
test
clc
in
outsb
pop
pop
inc
ss
or
push
inc
mov
add
xchg
icebp
push
xor
pushl
fsubrs
loop
pop
inc
dec
and
fidivrs
lret
insl
lret
adc
cmp
mov
or
or
xchg
pop
sub
loop
mov
mov
or
sahf
lods
insb
dec
jo
xorb
out
sahf
aaa
jno
pop
gs
lret
fs
pop
cmp
dec
jmp
and
push
sbb
mov
push
div
add
xor
cltd
in
sbb
ja
dec
xlat
cmpb
daa
pop
movsb
and
mov
jne
add
push
lods
mov
repnz
xlat
addl
imul
sub
insl
cmp
cmp
lock
je
mov
inc
hlt
in
inc
xchg
cwtl
and
out
push
xchg
mov
jp
dec
xor
outsb
xor
rcrl
adc
pop
lock
sbbl
in
pop
push
ret
or
dec
xchg
ss
sbb
xor
std
call
dec
cli
mov
mov
fidivrs
in
movsl
mov
jb
cld
jge
notb
xchg
ds
xchg
les
outsl
push
mov
adc
add
sbb
movsb
jl
and
sbb
fsubs
mov
inc
dec
jo
rcr
ret
ljmp
pusha
mov
mov
cmc
jb
and
mov
imull
fwait
in
jno
cmpsl
adc
mov
loopne
dec
mov
dec
ja
cmp
add
aad
adcl
cli
cmp
outsl
mov
ljmp
rorl
inc
lods
jns
push
leave
loopne
push
sbb
mov
xchg
enter
enter
sub
xor
test
sbb
addr16
dec
movsb
int3
sub
popa
pop
xchg
fsubs
cmp
movsb
dec
xchg
xchg
out
sti
xlat
sbbb
pop
jge
lea
lea
daa
dec
pop
push
mov
ret
jbe
cmp
lods
adc
bound
int
sbb
jl
inc
jl
fisttps
inc
dec
inc
xchg
mov
ljmp
mov
push
in
shlb
in
out
and
xor
jl
das
mov
jp
test
imul
fwait
mov
and
out
mov
cmp
mov
cmpsl
rorb
sbb
add
push
icebp
cmp
ret
pusha
mov
jae
dec
sub
inc
add
adc
pop
dec
dec
cmp
mov
pop
sub
leave
mov
sahf
test
sub
ss
and
cmpb
out
sbb
aam
sbb
enter
cli
push
not
jnp
sbb
push
daa
inc
std
leave
sahf
popa
sub
mov
adc
mov
mov
pushf
mov
mov
shl
sub
or
dec
or
adc
je
loopne
add
mov
pop
out
dec
xchg
pushf
iret
push
pushf
adc
flds
xchg
inc
mov
shl
icebp
mov
sbb
roll
imul
lock
sub
add
lret
sub
dec
pop
cmp
sub
sbb
mov
nop
ret
adc
insl
inc
dec
cmp
scas
jle
cmp
rol
or
jbe
scas
out
sub
sub
outsb
mov
pushf
pop
xlat
movntq
sub
gs
loope
push
xor
xor
aaa
jg
mov
push
dec
xor
ja
jno
push
movsb
inc
sub
push
insl
iret
lock
jle
stc
sbb
iret
jo
cmp
rsm
or
test
popa
xchg
ljmp
repnz
inc
mov
adc
adc
xchg
movsl
and
sub
enter
in
shll
sbb
mov
inc
ds
pop
cmc
gs
in
sbb
xlat
mov
pop
aas
shlb
repnz
adc
and
mov
andl
xchg
ljmp
add
cmp
iret
lds
imull
mov
fisubrs
fisubrl
sbb
push
adc
jp
popa
in
movsb
int
movsl
popa
xchg
cli
push
mov
sahf
pop
cltd
in
out
repnz
test
mov
jae
push
mov
dec
lods
and
call
fstpl
inc
lret
adc
in
cmc
shrb
ret
adc
xor
xchg
ds
cmp
mov
pop
jle
test
call
shrb
stc
xor
aaa
sar
scas
pushf
div
xchg
adc
xchg
les
fmuls
cli
fistpll
push
sub
sub
fdiv
mov
int
fldl
and
xor
mov
lock
jns
imul
inc
xchg
fs
jnp
xchg
cli
sbb
bound
cmc
insb
fs
pop
add
jno
adc
test
mov
movsl
mov
pushf
lds
pop
add
or
sbb
sub
cmp
int3
xchg
faddl
mov
pushf
lds
pop
add
or
sbb
sub
cmp
int3
xchg
faddl
mov
popf
inc
lods
cmc
mov
add
or
sbb
sub
xchg
faddl
mov
pushf
lds
mov
push
jnp
xchg
mov
sub
stos
call
inc
add
lds
dec
sub
dec
or
cmp
dec
sbb
mov
fmuls
mov
cmp
jnp
or
dec
push
pop
sbb
mov
rorb
fiaddl
sub
and
sbb
pop
jp
and
cwtl
mov
lret
jnp
addr16
pop
pop
dec
jbe
mov
out
clc
daa
out
ror
cwtl
sti
enter
addr16
xchg
inc
or
jbe
call
stos
adcl
pusha
adcl
aad
js
push
les
cmovge
stos
pop
mov
mov
lret
cwtl
in
xchg
sbb
cmp
inc
jge
pop
leave
daa
lahf
mov
ficoml
pop
xchg
dec
mov
add
fisttps
lea
stos
pushf
adc
cmovb
xor
or
lds
cld
add
xchg
pop
sbb
in
stos
clc
lcall
test
cwtl
lret
js
jo
inc
or
and
pop
add
into
clc
out
lcall
scas
in
push
pop
cwtl
push
push
pop
sub
ja
fs
jmp
cmpsl
lahf
mov
mov
push
cmp
sbb
or
jl
clc
test
stc
mov
ljmp
js
push
jp
push
pop
sbb
mov
fmuls
test
cwtl
lret
js
push
jp
push
pop
sbb
mov
pop
fmul
mov
loope
test
ds
sub
inc
push
pop
jnp
cmp
rolb
and
push
push
adc
push
adc
push
fildll
loope
push
sbb
sti
mov
int3
repnz
mov
loopne
call
cmp
and
icebp
mov
out
imul
lret
push
repz
push
movsb
pop
into
push
sub
and
inc
jecxz
repnz
outsl
enter
addr16
xchg
sub
pop
xor
cmp
loope
and
inc
cli
jle
cs
lds
mulb
sub
cmp
and
std
lods
cmp
add
imull
xlat
lods
lods
and
mov
adc
out
pop
ror
daa
sbb
rclb
jp
add
arpl
xchg
xor
scas
sbb
call
jae
out
dec
dec
fsubrs
inc
sahf
push
sbb
add
sbb
sub
pop
rorl
inc
dec
add
roll
subb
push
pushf
or
sub
pop
inc
mov
mov
push
mov
rcrb
leave
fwait
xchg
insb
xchg
push
rcll
mov
add
mov
outsb
andb
ret
and
fsubrl
and
mov
dec
or
test
push
lret
imulb
cmpsb
sub
mov
jp
int
pop
jecxz
mov
xor
inc
icebp
ss
imulb
scas
adc
in
mov
pop
xor
es
inc
lret
dec
lock
in
imul
repnz
mov
inc
test
mull
stc
inc
jg
std
stc
push
adc
fsubl
jb
mov
jmp
arpl
mov
ljmp
xchg
inc
aaa
add
sbb
push
out
push
cmp
dec
setge
add
mov
dec
sub
aas
add
push
cli
jns
pop
stos
jl
and
fistpl
or
dec
icebp
shlb
rol
ret
fcmove
xchg
mov
jmp
ja
cli
jb
cmp
inc
pusha
jmp
mov
mov
sub
push
mulb
cmp
xchg
loope
aam
pop
out
int3
into
adc
loopne
in
xor
cmpsl
push
inc
pushf
cmpsl
mov
jg
cld
fisubrl
lds
mov
push
je
and
in
cld
ret
mov
cs
or
fs
pop
rcr
out
xor
aas
in
ficomps
aad
xchg
enter
aad
mov
jbe
cmp
and
or
cmpsb
mov
mov
push
sub
out
repnz
mov
or
mov
lock
mov
decl
or
pop
bound
shlb
pushf
aad
adc
in
sbb
loopne
es
dec
push
and
fiadds
or
or
test
sbb
sbb
popa
cmc
pop
je
xor
cltd
sarl
xlat
adc
jmp
stc
push
or
hlt
inc
sbb
or
sub
jecxz
sub
loop
jbe
mov
data16
je
push
pusha
int
pusha
mov
mov
and
xchg
xchg
and
cmpsb
and
mov
add
test
loope
testl
mov
adc
out
xor
lea
lods
and
pop
cmp
xchg
movsb
jge
lods
and
add
add
jae
pop
sub
cmp
call
cmpsl
out
inc
in
pop
push
jg
cmpsl
and
adc
negl
les
leave
fstpt
outsb
pop
pop
leave
call
clc
sub
bound
jle
add
lret
adc
les
in
dec
imul
adc
or
adc
insb
jle
lea
jne
iret
cmp
fcompl
sub
pusha
loope
push
push
xchg
sub
cmp
outsl
aaa
cli
sti
jmp
cli
popf
push
xchg
push
or
pop
fmuls
push
adc
bound
xor
ret
mov
aam
mov
pop
aaa
and
dec
pop
stos
js
lods
push
sub
fidivrs
and
insl
loopne
or
test
pop
fsubrs
pop
mov
sahf
out
mov
mov
cmp
cmpb
mov
in
pop
xchg
notb
pop
movsb
fiaddl
add
dec
push
mov
scas
pop
aad
and
lods
aad
sbb
aas
lods
pop
pop
and
pop
push
mov
sub
or
push
insb
add
jge
shll
push
fldln2
xor
pop
jne
sarl
cmp
xor
pushf
mov
cltd
dec
dec
mov
cmp
xchg
and
pushf
mov
mov
mov
jle
jmp
push
test
cmp
test
data16
fstpl
pusha
mov
sbb
test
push
cli
loop
pop
inc
out
and
mov
lcall
mov
test
pop
add
lcall
push
push
adc
xor
add
int
int3
lock
andb
add
lcall
xchg
daa
mov
out
stos
into
push
js
lret
int
pusha
lea
cli
in
mov
or
xchg
lea
movsb
test
mov
cld
cmp
mov
jne
and
stos
adc
mov
out
test
repz
dec
sbb
outsl
jmp
inc
pusha
popf
add
mov
sub
xor
in
mov
orb
ss
inc
lds
lods
sbb
or
arpl
mov
test
jge
out
dec
out
mov
inc
bound
xchg
jp
mov
pop
pop
fs
sub
mov
insl
addr16
lock
mov
inc
dec
sbb
jmp
push
nop
push
jmp
jmp
dec
std
push
lahf
mov
cmc
inc
nop
imul
inc
cwtl
and
scas
xor
push
push
out
lods
pop
mov
fistl
xor
sub
addl
lret
mov
sbb
mov
inc
add
ret
outsl
stos
add
pop
in
xchg
sarb
and
pop
mov
pop
inc
or
roll
xchg
mov
xchg
sbb
das
add
in
mov
out
popa
popa
mov
push
lock
sub
fwait
movsb
jp
jmp
int
shll
mov
dec
adc
out
insb
lock
in
mov
inc
lods
mov
xchg
mov
sbb
jp
outsb
push
jne
sbb
add
ds
lcall
cmp
in
jmp
push
inc
mov
sahf
mov
sbb
add
sub
adcl
je
popf
jnp,pn
js
xchg
movsl
mov
mov
xchg
out
adcb
je
dec
add
fsubr
pop
pop
sbbl
mov
pop
lret
ljmp
jb
sub
and
push
arpl
xor
push
movsl
negb
mov
jp
and
pop
sbb
adc
push
call
popa
insl
jp
mov
iret
jnp
push
mov
icebp
inc
dec
int3
ss
xchg
in
fcoml
loop
je
pop
sbb
jns
or
add
lret
mov
push
sbb
nop
aaa
cmp
jmp
dec
aaa
jno
cmp
xor
es
lods
cmc
jo
stc
hlt
adc
cld
mov
pop
pop
ja
push
push
jnp
cli
mov
cltd
out
ds
cwtl
stos
pop
stc
mov
ljmp
imul
hlt
in
arpl
push
adc
dec
pop
xchg
xchg
xor
xlat
aas
or
mov
addr16
out
pop
insb
add
xchg
fs
rep
pop
adc
gs
xchg
cmpl
sbb
sub
int
shr
xor
imull
ljmp
dec
push
inc
popf
fstpt
sub
insb
pop
je
dec
push
pop
fs
fmul
mov
mov
inc
inc
mov
fists
xor
add
in
sti
adc
mov
cltd
in
rcrb
fnstsw
inc
aas
and
mov
cmp
push
loop
xchg
add
jns
mov
push
imul
jb
cmpsb
pop
cmp
cmp
int3
rcrl
cmp
and
and
sub
mov
cwtl
xchg
cli
dec
mov
jge
push
pinsrw
push
repnz
idivl
rcl
sub
push
dec
xor
add
lret
pop
cmp
add
inc
add
add
imul
push
inc
testb
adc
shrl
jb
in
les
push
cld
pop
lret
adc
jle,pn
push
push
int3
or
fwait
dec
dec
sub
sbb
mov
cmp
sbb
insl
mov
sbb
and
ja
xlat
ja
add
scas
pop
fldcw
sub
mov
xor
out
cmpsb
pop
and
mov
add
test
std
mov
testb
add
sub
lahf
jae
adc
push
cmp
cmp
jmp
push
and
add
scas
push
pop
xor
insb
notb
xchg
fs
or
xchg
imul
or
das
lret
sub
ljmp
es
xor
mov
or
pusha
jnp
mov
std
inc
xchg
xor
fists
pop
lcall
mov
dec
push
lret
dec
mov
loope
loope
xchg
loop
dec
mov
inc
pop
mov
add
push
xor
xchg
xor
roll
inc
test
xor
mov
push
nop
and
mov
dec
mov
xchg
sbb
pop
push
imul
dec
rorb
push
push
xchg
popf
mov
add
lret
lods
mov
imul
adc
adc
scas
cmp
xchg
lds
or
repz
and
subl
inc
lea
scas
repnz
push
mov
fisttpl
jne
ljmp
cltd
and
ret
add
inc
jl
mov
sub
imul
popf
inc
sbb
mov
lea
cmp
pop
or
sub
push
sub
add
test
sbb
pop
push
mov
or
cs
addl
mov
fdivs
mov
jo
mov
mov
and
imul
jl
xor
test
push
adc
aaa
jecxz
jle
push
in
into
enter
pop
sub
pop
sarb
sbb
sarl
or
orb
mov
fwait
rol
fscale
mov
mov
out
stc
cmp
rcr
pop
xchg
repz
sbb
and
pop
xchg
push
or
test
inc
xchg
addl
sbb
sub
push
lret
and
aam
fcompl
adc
dec
outsl
out
or
cmp
xchg
shll
mov
cmp
mov
je
in
mov
lret
jg
sbb
fs
shll
test
incb
add
mov
jmp
das
out
into
fiadds
sbb
push
jae
xchg
stos
pop
xchg
xor
dec
inc
pop
out
push
sahf
into
fsubp
ret
or
push
cltd
aaa
sti
call
pop
call
dec
add
movsl
popf
ss
mov
stos
dec
out
push
lret
jo
xor
cltd
dec
sbb
loope
popf
mov
pop
loope
andb
mov
lock
test
push
imul
jne
cmp
roll
and
dec
and
popf
loopne
mov
fcoml
clc
movsb
pop
adc
inc
in
pop
imul
lock
int3
ret
call
inc
mov
push
sti
popf
add
or
aad
cmpl
dec
or
stos
and
scas
je
addr16
mov
sub
mov
sahf
mov
xchg
push
inc
pushf
add
hlt
or
lcall
gs
rolb
or
mov
sbb
fwait
xlat
xchg
es
aam
addr16
aam
jecxz
cmpb
lods
mov
mov
add
fistl
fwait
int
js
arpl
mov
lahf
and
sub
hlt
mov
jp
pop
cmc
fldenv
addl
jbe
mov
jmp
push
mov
out
xlat
sbb
nop
stos
cli
pop
imul
xor
or
mov
in
ret
and
stos
fiadds
aaa
push
fdiv
iret
call
xor
rorb
mov
cmpsl
push
inc
jecxz
stos
sbb
or
sub
xchg
inc
dec
stc
sbb
jno
xchg
and
jb
fcoml
sbb
outsl
jge
sub
lret
imul
push
pop
sbb
pop
jmp
mov
jle
scas
push
push
adc
imul
into
lahf
sub
inc
lods
clc
mov
mov
repnz
and
imulb
cmp
das
sbb
or
jns
test
js
sub
mov
jne
inc
in
adc
dec
add
or
push
das
cmp
sbb
mov
jmp
repz
daa
push
aad
hlt
mov
xor
cld
jmp
xchg
jnp
lret
mov
arpl
push
sub
loopne
popf
sub
mov
xchg
lcall
popf
jns
movsb
test
cmp
test
mov
test
and
pushf
inc
shlb
fisubrl
test
mov
pusha
or
aaa
repz
push
jmp
shl
and
filds
and
ret
inc
pop
xchg
pop
mov
push
loopne
mov
sbb
inc
jp
nop
fxtract
fildll
jo
cmp
dec
notb
rcll
adc
rcr
sahf
fs
int3
int
push
lock
and
jb
cltd
cmpsl
jne
pop
xor
cltd
gs
push
mov
dec
cmp
ss
scas
jmp
testl
jo
pop
mov
test
jle
stos
pop
insl
sub
jae
and
cmpsl
sarl
repz
mov
push
out
icebp
push
sahf
outsb
hlt
inc
loopne
je
je
adc
fcomps
cmpsb
xchg
push
les
movsl
jmp
scas
ja
jle
push
fmulp
fistpll
fadd
popl
cmc
and
xor
and
push
jmp
and
pop
push
xchg
sahf
cwtl
lret
sbbl
xchg
adcl
and
out
xchg
dec
lahf
adc
xor
cmpsl
andb
mov
jno
fisttps
hlt
js
mov
cltd
and
dec
xchg
mov
std
data16
pushf
xchg
int3
sbb
add
cmp
jecxz
adc
and
testl
dec
push
jno
fwait
sub
jge
push
cltd
jg
jecxz
jnp
pushf
inc
mov
shl
and
adc
addb
or
mov
dec
fwait
cmp
testl
call
mov
or
aam
ss
lods
rorb
pop
push
loop
mov
jle
test
sbb
xchg
outsl
xor
test
add
ret
sub
add
stc
push
jo
fwait
cltd
pop
cmp
popa
cmpsb
ds
pop
cmp
cltd
lock
xchg
xor
lock
aad
std
jp
mov
pop
sbb
repnz
adc
pop
mov
ja
rcrl
fmull
push
lock
inc
mov
pop
loop
cltd
rol
pop
dec
outsl
xor
or
out
sbb
pusha
lea
adc
mov
lret
cmp
or
enter
in
mov
xchg
std
dec
xor
into
mov
cmc
sbb
inc
inc
and
inc
outsl
cwtl
jae
insb
xor
and
add
xor
cwtl
rcrl
sbb
mov
sub
xor
add
inc
clc
xor
or
fildl
aaa
jae
out
xor
mov
and
stc
loope
movsl
inc
push
pop
out
xor
mov
xor
dec
or
ret
push
adc
ret
sub
into
sti
pop
lods
dec
out
rcll
and
repnz
adc
add
sub
loopne
jb
mov
cmpb
addr16
cld
mov
cmc
cld
ljmp
mov
outsb
adc
pop
sub
outsl
sbb
jg
loop
mov
stos
scas
jbe
pop
cltd
sub
push
jbe
xor
pop
add
jae
xor
mov
xchg
sbb
add
jl
xchg
lret
or
push
addr16
enter
adc
and
int
aaa
adc
out
rorl
xchg
dec
mov
insl
stos
mov
addr16
push
repnz
jo
adc
push
sub
daa
and
cwtl
icebp
cmpsb
inc
mov
arpl
mov
push
adc
push
jae
lahf
or
mov
sub
imul
jne
imul
cld
add
pop
mull
and
and
mov
and
jl
popf
jbe
sbb
shlb
jmp
jnp
jge
fs
and
push
lret
lock
fildll
mov
shll
fwait
in
push
mov
mov
out
push
test
dec
imul
lahf
hlt
rcrb
mov
push
pop
mov
mov
inc
out
ret
leave
cmove
fsts
mov
imul
lret
mov
pushf
scas
loop
dec
aas
jp
loopne
xchg
pusha
addr16
rep
icebp
xor
add
push
in
repz
sub
xlat
stos
mov
xchg
mov
in
inc
xor
sahf
inc
scas
pop
cmp
fsts
cmp
dec
cmpl
lds
enter
and
insb
popa
xchg
add
out
pop
cmp
jmp
and
aaa
fstpt
xchg
bts
mov
xchg
push
jge
push
icebp
mov
inc
nop
stc
bnd
jns
dec
jae
out
jl
xor
or
or
sbb
push
outsb
cmpb
stc
adc
mov
cmc
js
loope
lahf
push
lcall
mov
cmp
mov
and
lahf
pop
push
cmp
ja
or
insb
sbb
adc
popf
outsb
inc
adc
push
aad
mov
imul
and
sti
cmp
aad
fdivl
jns
push
mov
daa
lahf
lahf
cmc
lcall
ror
popa
lods
push
out
and
adc
scas
dec
pop
xchg
stos
rolb
div
mov
cmp
and
xor
movsb
jl
test
gs
leave
sbb
mov
and
in
xchg
mov
sbb
or
jne
or
int
lahf
mov
add
xor
xchg
sbb
mov
js
aad
arpl
cmpsl
mov
dec
push
pushl
enter
jecxz
cmp
int3
push
aad
imul
iret
insl
roll
rcl
jecxz
test
ds
cmp
sbb
jmp
xchg
dec
push
aaa
mov
dec
inc
std
divl
cmp
jb
add
scas
scas
test
xchg
nop
enter
sarb
xchg
mov
repnz
or
out
repz
aas
cmpsl
loope
test
sbb
and
pop
sbb
xlat
sbb
xlat
lock
std
lock
fidivrs
mov
movsl
sub
or
cld
std
sbb
xchg
push
ljmp
les
push
cmp
mov
repnz
jl
adc
imul
das
sahf
addb
mov
adc
in
xchg
dec
in
fcmovu
mov
clc
minps
repz
out
jl
lds
jmp
enter
test
mov
in
fnsave
fwait
or
inc
test
idivl
pusha
inc
mov
sbb
and
iret
jmp
flds
ljmp
sbb
push
push
sbb
push
mov
test
push
out
mov
fwait
mov
xchg
push
ljmp
jb
js
test
xor
lods
cmc
mov
adc
add
lcall
dec
sub
pop
jae
out
shlb
add
call
pop
sub
ret
insb
rcl
cmp
out
sub
jle
cmp
mov
ss
je
xchg
fs
decl
mov
js
cmpl
shll
xchg
test
mov
arpl
orb
mov
das
aaa
and
lods
jp
mov
jecxz
movb
popa
or
mov
and
hlt
in
adc
aad
push
push
xchg
cltd
leave
cmp
cltd
push
push
sarb
sarl
cmp
pop
jmp
push
push
es
aas
sbb
sbb
out
jmp
dec
jne
je
jae
pop
adc
pop
jno
mov
repz
idivl
and
dec
xorl
scas
and
sub
pop
lcall
fprem1
test
mov
push
sub
sbb
push
pop
mov
mov
dec
insl
popa
adc
and
es
daa
jne
sub
push
adc
cli
dec
or
inc
outsl
fcmove
rcl
xchg
mov
test
mov
cli
mov
lret
js
push
jp
push
pop
sbb
mov
fmuls
test
cwtl
lret
js
push
jp
push
pop
sbb
mov
fmuls
test
cwtl
lret
js
push
jp
push
pop
sbb
or
cld
stos
in
fmull
test
cwtl
lret
js
ret
or
or
addr16
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
sub
or
aas
jle
push
sbb
pop
fsubrl
in
fwait
pushf
jmp
mov
pop
sub
or
imul
dec
sub
fsubrl
in
fwait
pop
jmp
sti
mov
sub
or
imul
dec
sub
fcoml
in
fwait
pushf
mov
ret
sub
dec
jl
add
aad
xchg
mov
mov
and
inc
test
adc
jnp
sbb
test
inc
rcll
push
dec
fildl
mov
lcall
and
or
inc
in
jnp
sbb
cmp
lock
jb
fsubrl
inc
cld
mov
int3
jmp
enter
ficompl
cmp
or
push
imul
dec
scas
add
arpl
cltd
cli
mov
fstl
test
out
lcall
and
in
lret
mov
or
outsb
fisubs
sub
mov
add
add
stc
fisubrs
nop
sub
or
imul
dec
sub
fsubrl
in
fwait
pushf
jmp
sti
mov
inc
cmp
adc
add
cmp
cs
test
cmc
popf
xchg
cmp
jno
or
dec
sbb
dec
push
inc
and
pop
mov
fucomp
negl
mov
dec
dec
adc
outsl
push
pop
or
cmp
sub
fsubrl
in
fwait
pushf
jmp
sti
mov
sub
or
imul
dec
sub
fsubrl
in
fwait
pushf
jmp
sti
mov
sub
loope
inc
lret
push
insl
xlat
sbb
and
call
aad
sbb
std
test
mov
fimuls
sbb
icebp
adc
popa
jmp
pop
sbb
in
or
adc
xchg
mov
fsubl
lahf
rcrb
push
movsl
sti
mov
leave
fildl
mov
lret
lret
out
adc
cmp
je,pt
arpl
push
xor
into
lret
inc
les
push
push
ja
ret
and
add
xchg
xchg
aas
xlat
jle
js
jnp
dec
js
lods
pop
push
adc
jo
int
adc
cmp
insl
xor
jge
xor
mov
or
mov
lcall
imul
add
cmc
in
dec
int
ljmp
xor
ss
mov
icebp
pop
add
jg
or
inc
mov
xchg
adc
adc
lods
xchg
ja
lds
nop
fidivs
push
ret
popa
mov
and
fdivr
or
inc
cmp
in
mov
jb
je
rcrb
div
test
je
mov
imul
pop
cmp
leave
rolb
rolb
pushf
es
push
loopne
cmpsl
dec
adc
xchg
pop
dec
pusha
push
xchg
cmp
push
cmpl
push
sbb
mov
pop
mov
jno
arpl
adc
mov
ret
add
mov
cmp
xchg
fldcw
cmpsl
dec
lea
cmp
shrb
adc
ljmp
mov
jmp
or
mov
inc
cmpsb
push
divl
in
mov
repz
mov
and
imul
xor
ret
sub
jge
mov
aam
pop
outsl
movsl
jnp
aam
sub
cmpl
push
jmp
sbb
fldlg2
daa
lds
push
in
xchg
mov
loope
sbb
sub
hlt
xor
scas
cmc
sub
or
or
dec
jg
mov
cmc
mov
cs
mov
inc
dec
inc
jp
xchg
push
test
incl
dec
cld
mov
push
or
mov
les
push
fiaddl
pop
movsl
add
xor
clc
mov
jno
xor
or
mov
cmpsb
jno
stos
lds
fprem
jle
cmpsl
lret
xchg
daa
aaa
and
mov
add
pop
int3
cmpsb
pop
or
and
loop
test
dec
in
jmp
jae
pop
fisubl
adcb
xchg
imul
mov
cli
dec
jle
cwtl
mov
xchg
shrl
push
mov
negb
push
dec
shll
cmp
sbb
cmp
int3
arpl
sub
push
sbb
or
ljmp
sti
xchg
daa
push
sahf
adc
das
jns,pn
into
out
xor
push
or
ja
mov
dec
ljmp
dec
inc
pop
mov
hlt
adc
rcl
test
xchg
mov
inc
and
push
sbb
and
mov
and
rcll
dec
stos
or
mov
arpl
push
xlat
xchg
jge
or
arpl
xchg
mov
jae
ret
pop
enter
lahf
pushf
incl
sbb
dec
cmp
mov
xor
mov
cltd
test
pop
iret
mov
inc
dec
icebp
into
or
jo
and
pop
push
data16
lea
xor
cmp
xor
mov
mov
loop,pt
pusha
jp
fsts
jo
mov
inc
cmpb
xchg
nop
leave
cli
adc
pop
jno
cmp
pusha
inc
pop
fisttpll
xchg
mov
jmp
aam
push
cs
fimull
jg
fistps
in
fs
je
mov
and
ds
lds
in
rcrb
std
xchg
pop
jg
sahf
cmpsl
fisubrs
xor
push
call
sub
pop
fdivs
mov
aam
mov
repz
call
push
mov
dec
das
pop
test
mov
lods
jle
lods
mov
mov
popa
jg
bound
adc
pop
push
loop
aas
xor
mov
addr16
imul
jne
jnp
add
sbb
pop
loop
xlat
mov
pop
ret
mov
fs
dec
jp
and
outsl
xchg
lock
repz
cld
sbbl
int3
add
mov
xchg
pop
movsb
sarl
mov
xor
aaa
stos
es
pusha
adc
or
out
adcl
mov
movsb
jbe
jecxz
sbb
mov
aad
push
mov
in
mov
adc
push
xor
cmp
sbb
mov
insl
loop
in
in
pop
xor
cmp
jge
or
cmp
shll
shll
sahf
lcall
movsl
popf
mov
inc
dec
xlat
enter
add
jmp
sti
xchg
jno
or
ret
jl
rcr
sbb
sub
mov
inc
shrb
fsub
popf
fs
mov
std
push
lcall
sub
xchg
xor
sub
and
fiadds
fcoml
testl
aam
ljmp
outsl
sbb
out
cltd
filds
push
mov
or
insb
cld
inc
ja
xor
nop
xchg
fldcw
mov
mov
inc
xchg
in
leave
fdivrl
mov
mov
icebp
stc
xchg
jb
inc
and
dec
sbb
imul
xor
xchg
mov
jp
in
and
cli
cmc
jge
lds
add
and
cmc
in
mov
inc
aad
dec
cmpsb
iret
sbb
pop
jns
inc
push
jp
fiaddl
or
scas
arpl
adc
cwtl
jno
fwait
mov
push
loop
mov
stc
jb
insb
fs
push
pop
jns
cltd
aaa
push
and
add
mov
and
inc
cmp
adc
aaa
out
xchg
sbb
cs
sub
lret
lcall
add
dec
addl
insl
lods
dec
jp
push
sahf
sbbl
std
cmp
sbb
and
ja
sbb
das
out
pop
cmp
push
outsb
push
xchg
mov
jecxz
xor
pop
xchg
xchg
push
push
fdivrl
test
pop
or
or
out
xchg
je
inc
nop
test
add
push
mov
stc
repz
xchg
in
push
scas
jecxz
sub
scas
push
or
inc
jg
and
mov
inc
popf
psllq
arpl
jns
xor
xor
mov
das
imul
xchg
fstl
movsl
pop
jns
in
push
mov
mov
gs
adc
cs
push
add
jge
lea
lcall
sub
fidivrs
jge
mov
aam
add
or
cmpsl
stc
dec
add
test
imul
xlat
add
push
dec
jno
fldl
jl
ret
int
mov
sub
rorl
xor
int3
outsl
or
dec
mov
jge
lret
in
fwait
jnp
test
xchg
into
in
sbbb
movsl
insl
push
das
add
push
sti
push
test
xor
shlb
sub
sbb
nop
fs
mov
xchg
mov
xor
lods
lea
call
stos
pop
cmpsl
inc
rorl
les
add
sub
pop
mov
mov
cwtl
sbb
mov
stos
test
fmull
and
rorl
outsl
jne
or
mov
dec
ret
ja
fidivs
jo
push
lcall
jne
lcall
movsb
test
sbb
fistpll
mov
in
hlt
jae
sbb
sarb
fisubrl
clc
ljmp
mov
or
mov
int3
push
and
add
or
cmp
adc
inc
loope
adc
sbb
pop
add
pop
pop
aam
jecxz
jle
jge
jmp
pop
adc
inc
adc
mov
dec
daa
pop
adc
stc
xchg
or
jl
pushf
aam
xor
bound
fs
pusha
nop
icebp
test
add
test
add
jbe
std
in
stos
and
icebp
sbb
out
xchg
jle
insb
xchg
scas
and
cmpsb
mov
fidivs
adc
stc
inc
mov
push
insb
cltd
imul
in
pop
bound
add
jns
lahf
dec
sbb
aaa
push
cmp
negb
div
ljmp
in
imul
int3
and
cs
or
cs
arpl
fwait
xchg
dec
and
andl
iret
pop
das
jecxz
push
mov
push
test
dec
ret
xlat
daa
inc
pop
das
or
imul
and
std
mov
cli
xor
push
jno
inc
mov
stos
daa
adc
fstps
mov
cmp
xor
fsts
adc
adc
xorb
in
mov
jp
and
fwait
pop
mov
ret
sbb
xor
insl
xchg
sub
jns
movsb
les
mov
je
insb
bound
das
mulb
adc
pushf
mov
xchg
mov
mov
lret
ficomps
push
stos
shrl
push
fsubrl
sub
dec
inc
cld
jbe
out
sub
scas
movsl
rclb
push
jne
in
adc
movsl
ffree
inc
adc
mov
jp
in
pop
gs
cld
daa
dec
ret
cmc
sbb
bound
lea
lods
pushf
imul
jmp
sbb
dec
loopne
pop
mov
cltd
loopne
pop
aaa
mov
sbb
mov
jg
pop
les
jp
jbe
jae
pop
rolb
cwtl
mov
jbe
push
jge
dec
pop
push
and
data16
sbb
mov
fsubr
add
jnp
movsl
jmp
xchg
fucomp
iret
shlw
mov
fisttpll
cmp
js
pop
cmp
lcall
inc
adc
sub
or
lret
cwtl
inc
ds
stos
xor
in
mov
pop
adc
cs
mov
pop
es
stos
mov
mov
add
add
andl
dec
dec
insb
out
sbb
mov
mov
push
lods
mov
push
push
enter
adc
pop
mov
scas
jmp
lahf
jl
mov
stc
daa
in
or
push
xchg
pusha
and
call
lds
adc
aas
ret
inc
idiv
out
daa
mov
sub
lcall
fstpl
std
popf
or
push
data16
into
mov
fwait
inc
adc
pop
push
int
or
dec
mov
add
mov
fdivrs
pop
dec
das
out
shl
adc
fdiv
in
xchg
adc
popf
mov
xor
push
fldl
cmpsl
and
out
dec
mov
bound
cmp
stc
cli
mov
loopne
in
push
push
push
jns
mov
in
push
mov
loop
add
mov
dec
stos
push
outsl
imul
jge
pop
addl
cltd
cltd
aas
rolb
inc
push
shlb
xchg
movsb
inc
sub
pop
add
jns
shrb
loop
inc
inc
and
sub
inc
pop
jle
je
mov
jns
jbe
sub
jbe
mov
test
scas
xor
lods
je
pop
jo
cmp
jg
movsb
sbb
aaa
sbbb
inc
xchg
lahf
pop
mov
ficoms
test
jge
jge
addr16
imul
iret
pop
pop
cmp
mov
ficoml
int3
mov
rclb
cwtl
cltd
push
pop
mov
nop
insb
add
mov
mov
sub
sbb
xchg
cltd
push
sub
mov
inc
and
ss
das
das
lock
stos
mov
fxch
dec
iret
jne
add
aad
or
pop
scas
and
incl
popf
mov
ror
bound
jno
jle
add
pop
cli
xchg
sarb
outsl
mov
out
sub
pop
movsb
imul
dec
pop
in
mov
imul
rclb
sbb
es
pop
sahf
movsb
dec
mov
pop
aas
aam
aam
sub
xor
adc
in
sbb
outsl
adc
daa
pop
leave
out
sarl
lock
mov
sub
pop
adc
scas
sbb
test
mov
aas
mov
cs
cmp
imul
cmc
xor
cwtl
mov
push
gs
mov
xor
pop
push
or
adc
xchg
ds
out
scas
imul
aam
movsl
gs
mov
pop
push
pop
or
enter
xchg
insb
cmp
loopne
add
daa
test
mov
sbb
fstl
iret
mov
call
inc
mov
or
aas
and
sub
outsl
or
lea
pop
and
shrb
dec
adc
shl
or
push
pop
mov
arpl
xchg
call
lock
mov
push
fs
or
jae
cli
jae
push
lock
dec
loop
jl
mov
shl
jnp
loope
pop
mov
lcall
fisttpll
ret
xor
add
pop
into
xor
aas
push
int3
adc
sub
jns
in
loope
js
mov
in
push
fcmove
icebp
push
jl
xchg
dec
jne
dec
addr16
imul
jae
xchg
movb
or
or
jge
push
test
cmp
dec
mov
cmp
call
mov
mov
mov
test
in
jge
pusha
outsb
dec
sbb
andl
xchg
and
sbb
push
mov
add
pop
add
pop
jns
pusha
dec
cwtl
inc
xchg
cs
cmp
addr16
pop
mov
aad
and
sub
imull
pop
ljmp
je
mov
daa
cmp
jno
aaa
pop
mov
insl
sub
mov
add
jle
jle
inc
inc
push
mov
das
inc
data16
adc
mov
dec
xchg
fwait
or
pop
enter
or
or
push
ret
adc
out
inc
stos
push
mov
imul
add
jnp
mov
outsb
push
xor
aas
shrl
sbb
cwtl
inc
and
jbe
jecxz
mov
les
jg
mov
jmp
outsl
pop
xchg
pop
push
sub
mov
pop
pop
arpl
inc
mov
mov
xor
xor
icebp
rolb
test
pop
adcb
movsl
pop
dec
cmp
mov
jno
fsubl
fs
push
sbb
pop
je
cmp
jecxz
in
das
cmp
adc
jge
out
mov
pop
xchg
cmp
jl
cmp
lods
icebp
sub
jb
cmp
xor
xchg
test
cmpsl
lds
pop
or
imul
xor
icebp
adc
and
fmulp
dec
mov
movups
es
in
cli
mov
jno
stos
daa
push
addr16
movsl
inc
pop
pop
mov
outsb
bound
xor
push
sti
hlt
mov
sbb
out
sub
xchg
pop
out
push
adc
bound
mov
add
rcrb
loope
push
into
cmpsb
aas
or
inc
xor
push
adc
mov
aam
sbb
test
add
mov
lds
mov
mov
sub
adc
mov
sbb
outsb
js
aas
dec
sbb
mov
jnp
dec
cli
cli
mov
rcrb
add
aam
mov
cmp
gs
jle
lret
and
jb
fwait
aad
jmp
aas
mov
push
sub
ficoml
sbb
push
rolb
xchg
xor
adc
outsb
mov
sbb
cmp
aad
jmp
jmp
dec
sti
and
lods
movsb
mov
repnz
movsl
xor
sub
dec
sbb
popa
pop
sub
jb
loope
sarb
mov
and
shlb
int3
lods
dec
mov
mov
xchg
mov
popa
addr16
cmpsb
mov
push
subl
xor
loope
jg
lret
cwtl
pushf
mov
cli
push
jb
out
pop
imul
ret
xchg
inc
push
dec
fsubl
loope
sub
int
dec
mov
pop
sti
sub
push
aas
jne
jge
aas
cmp
or
adc
mov
pop
test
sbb
loop
sti
test
inc
xchg
ljmp
or
jo
ret
dec
lock
jb
imul
jp
mov
jmp
pop
push
icebp
xor
xor
pop
int3
pop
lock
iret
xchg
lods
mov
adc
mov
jp
out
dec
fwait
ja
jle
add
fsubl
out
xchg
cmpsb
adc
and
xchg
push
dec
mov
push
dec
and
test
test
stc
sbb
icebp
mov
inc
xor
push
movsl
xchg
loope
scas
mov
stos
mov
mov
mov
add
sbb
pop
push
or
bnd
dec
cmpsb
das
and
rcll
mov
sub
into
ljmp
or
inc
lret
test
and
and
psubb
stc
incl
out
test
js
inc
les
loop
stos
mov
cmpb
lcall
fldt
shll
pop
sub
shrb
stc
push
repnz
inc
testl
jae
jns
adc
test
sub
ret
xor
xor
ljmp
scas
push
mov
into
pop
faddl
pop
enter
mov
out
or
pushf
mov
repz
shr
add
mov
or
xor
loopne
push
loope
imul
out
lods
fimull
jnp
adc
add
fmull
fwait
sarb
push
jb
inc
movsb
clc
cmpb
loopne
push
out
sub
xchg
movl
fcmovb
push
in
out
jmp
or
roll
test
call
xor
and
ret
fs
and
mov
sbb
jmp
aad
jbe
out
leave
push
pusha
pop
ret
lcall
inc
xchg
icebp
push
inc
fisubs
icebp
adc
cmp
or
popf
sbb
out
adc
mov
jae
fwait
lcall
fnsave
mov
mov
xorl
adc
iret
mov
push
xchg
sahf
stos
ret
sar
and
dec
js
mov
scas
xchg
loopne
and
sti
in
cwtl
push
cli
mov
dec
movsb
inc
dec
push
sarb
in
inc
setno
push
dec
pop
pop
inc
lods
gs
sub
or
nop
fnstenv
xchg
enter
jbe
jb
in
pushf
cmp
jle
fistl
mov
outsl
mov
adc
dec
cli
hlt
mov
sbb
jg
and
dec
outsb
fstpl
orl
cwtl
xchg
cmpsb
pop
mov
xchg
cmpsl
xchg
bound
push
ret
hlt
bound
pop
sbb
push
push
inc
mov
pop
ret
sbb
sub
sbb
dec
loopne
arpl
pop
and
mov
imul
out
push
xchg
lods
or
mov
loope
mov
call
addr16
adc
push
sbb
pop
std
lods
lcall
ficompl
outsb
xor
cld
or
push
push
subb
pop
push
lock
inc
pop
jp
pop
aaa
imul
push
ljmp
xchg
push
push
lock
shll
insl
ss
lcall
repz
push
mov
test
mov
outsb
in
xchg
fsubr
mov
push
mov
mov
hlt
loopne
mov
cmp
or
std
sti
scas
es
shl
add
xor
testl
push
xchg
aad
push
mov
es
xlat
xorl
fcmove
aad
and
jno
mov
push
adc
mov
inc
daa
cld
sub
sarl
lock
pop
gs
xor
mov
jge
xchg
mov
xchg
hlt
les
xor
xlat
cmp
fxch
sbb
jae
cli
mov
loop,pn
rcl
dec
jecxz
inc
cmp
loope
jno
xchg
out
jbe
mov
sub
cltd
jle
rolb
ds
pop
mov
mov
stc
clc
sti
jl
mov
inc
imul
jb
cs
ss
in
adc
enter
adc
lea
sbb
out
jecxz
aas
lds
imul
cmp
xchg
or
mov
cld
les
out
sbbb
std
icebp
out
das
cmp
addr16
adc
dec
xlat
adc
cltd
lods
cmp
xor
mov
add
into
xor
sub
xor
pop
lods
jg
jo
sti
cwtl
scas
adc
xchg
in
xor
xor
jmp
xor
sub
cs
cmc
sbb
lcall
stos
mov
pop
cwtl
xchg
test
fs
insl
shlb
test
insb
in
mov
cltd
pop
dec
mov
jg
jno
xlat
cmpsb
shlb
cli
pop
int
add
es
cmp
leave
ljmp
push
mov
cmp
out
loopne
das
pushl
sbb
or
cmp
sub
fsubrl
in
fwait
pushf
jmp
sti
mov
sub
or
imul
dec
sub
fsubrl
in
fwait
pushf
jmp
sti
mov
das
int3
cmp
or
imul
dec
lods
pop
fsubrl
in
fwait
pushf
ljmp
pop
sub
or
imul
lret
sub
fcoml
push
mov
in
in
arpl
add
xor
and
into
inc
lcall
sar
decl
jnp
dec
pop
pop
jp
testl
lret
lret
ljmp
mov
jnp
bound
sub
sbb
sub
cmp
insb
jnp
dec
jo
mov
mov
pop
jns
or
or
pop
addr16
pop
push
fwait
mov
arpl
sarl
sub
xchg
lock
dec
aad
jno
leave
lods
sbb
sahf
push
add
mov
mov
cmpsb
mov
mov
scas
pop
stos
inc
mov
jmp
lret
mov
or
lretw
pop
mov
dec
mov
movsl
test
stc
mov
clc
incb
lret
mov
mov
stos
sahf
inc
stos
mov
aaa
jle
sub
cmpsb
pop
cmp
outsb
sbb
daa
xor
sbb
iret
imul
stos
imul
mov
pusha
cmp
pop
jns
mov
xor
jle
lds
push
fisubl
xchg
sbb
adc
or
inc
sti
cli
lret
sahf
mov
stos
mov
lcall
jmp
inc
dec
ss
or
xchg
negl
or
sub
iret
cmp
inc
dec
push
jne
pop
pop
push
jmp
jae
mov
fcmove
out
call
das
cmp
dec
pop
inc
pop
sbb
pop
dec
cltd
mov
lcall
stos
fwait
mov
dec
push
jp
or
sbb
sub
cmp
lret
lret
ljmp
mov
jnp
dec
push
jp
or
sbb
sub
cmp
lret
arpl
aam
jmp
incl
insb
sti
test
mov
jb
sbb
mov
les
aam
call
icebp
push
dec
add
sahf
or
add
pop
out
sub
fcom
subl
mov
adc
adc
loop
test
mov
lods
or
or
mov
xor
mov
pop
pop
int3
test
cwtl
dec
push
adc
jle
mov
pop
call
das
sbb
push
movsb
movsl
pop
leave
fsts
jbe
push
ret
aad
sbb
stc
pop
or
adc
fsubrl
nop
or
shrb
jecxz
mov
icebp
add
jno
cmp
jae
dec
ds
idivb
mov
lret
sbb
push
insl
add
or
mul
mov
rorl
xchg
push
push
sbb
fxch
in
mov
push
push
popf
jae
jb
jecxz
data16
hlt
sub
sbb
jl
popf
pop
push
mov
fmul
or
cmc
lret
pop
xchg
out
inc
pop
xor
loopne
sbb
or
jno
or
jmp
aad
sub
or
cli
mov
jge
or
int
dec
jg
js
lret
push
pop
mov
cmpsb
sub
fstpl
adc
sub
ja
lea
sarl
jb
rorb
pop
jae
ja
dec
xchg
sti
sub
push
clc
xor
repz
enter
out
arpl
sub
xor
push
jno
pop
xchg
fnstcw
push
sbb
imul
jb
push
movsl
inc
roll
pmaxub
setb
mov
mov
iret
loop
push
dec
push
scas
push
lods
insl
cmp
orl
jp
sbb
movsl
daa
xchg
mov
xchg
addr16
mov
das
pop
sub
pop
push
lret
xorb
jae
std
fs
pop
xor
ds
sbb
mulb
fwait
ror
sub
adcb
in
insb
sti
mov
mov
cltd
jb
sbb
in
pop
hlt
jp
adc
jg
sarb
inc
loope
lcall
mov
stos
mov
xchg
stos
add
add
pop
enter
adc
in
pop
mov
cmp
loopne
or
add
lds
and
jle
pop
mov
fs
movsb
lret
faddl
pop
push
cmp
mov
fcmovnu
lods
ret
pop
pop
inc
sarl
sub
sub
and
inc
fists
arpl
push
pop
or
push
sub
mov
nop
mov
mov
dec
mov
pop
cwtl
push
loopne
js
xchg
imul
mov
insb
test
or
daa
mov
in
dec
pop
push
xchg
dec
ds
pop
nop
in
into
inc
lock
movsl
cmpsb
outsb
insl
xchg
out
test
lret
arpl
mov
and
xchg
negl
inc
lahf
sub
jp
loop
xchg
cmp
push
shrb
mov
pop
xchg
jbe
dec
lods
daa
sbb
nop
mov
fistpl
movsb
insb
loop
push
sbb
mov
mov
push
cmc
out
push
jb
jae
jae
movsl
xchg
jp
add
push
or
ficoms
pop
mov
push
mov
in
sbb
out
jo
std
xor
nop
add
out
cmp
mov
movsb
sarl
cli
rcrb
mov
dec
sti
outsb
xchg
dec
fdivrs
bound
xor
push
je
cmp
jecxz
std
fcoml
pop
scas
clc
fcmovnbe
jle
sbb
test
jle
or
or
stos
cs
or
pusha
js
dec
xor
out
std
lea
ds
movsb
and
in
or
pop
add
mulb
sbb
mov
cmp
xchg
rcrb
mov
dec
popf
subl
sbbb
pushf
push
pushl
iret
xor
and
mov
dec
movsb
xchg
enter
fs
jbe
jno
adc
fnstcw
sbb
enter
or
xor
push
gs
call
js
in
mov
repz
in
add
lods
or
jle
jo
pop
dec
or
out
xchg
rol
dec
push
in
ret
out
ret
dec
dec
pusha
nop
clc
dec
fwait
pushf
fsubl
dec
cld
test
out
out
mov
adc
nop
lcall
dec
imul
in
adc
fwait
pop
cmp
shrb
test
jbe
lea
jno
cmpsb
sub
mov
lcall
ss
jnp
pop
adc
iret
mov
push
xchg
test
mov
push
xlat
adc
insl
adcb
jmp
orl
cld
or
aad
lret
or
mov
pop
push
jge
test
jge
mov
or
xchg
fistps
adc
mov
ljmp
jns
mov
idivb
sub
loope
loop
fcmovb
adc
or
cmpl
scas
cmp
outsb
or
push
jo
jns
out
dec
ds
jl
aas
popf
repz
mov
cmp
sbbl
sub
ja
pop
and
bound
lods
ds
xchg
loope
adc
popa
lods
mov
pop
cmc
sub
mov
fs
test
lcall
sub
mov
and
enter
lcall
pop
ret
sbb
mov
mov
pusha
ror
lcall
mov
jl
dec
pop
aad
aam
pop
aad
add
xorl
mov
aas
sahf
jecxz
call
adc
xor
mov
mov
mov
adc
fst
call
stos
popl
fwait
ret
add
sahf
mov
mov
mov
xor
test
mov
sarl
xlat
xor
aad
add
mov
jo
loop
jne
cld
scas
sbb
mov
sbb
cs
mov
ljmp
movsl
fbld
loopne
scas
inc
mov
lcall
int3
sbb
jb
std
loope
adc
std
movsb
in
ret
push
jl
xor
inc
cld
into
addl
mov
shlb
and
lret
inc
jle
out
bound
or
jo
rcr
xchg
mov
mov
clc
mov
popf
fs
in
adc
sbb
fimuls
push
mov
or
push
lcall
add
mov
cmp
xchg
test
mov
and
fwait
imul
call
mov
lret
insb
jbe
sub
sub
pop
sahf
cmp
popf
mov
jnp
xor
cmpsl
pop
fisubrl
nop
fwait
inc
or
dec
sbb
stc
sbb
ss
fstps
roll
sbb
dec
push
xor
mov
ret
nop
or
dec
mov
dec
cwtl
mov
mov
out
pop
loope
insb
rcr
pushf
addr16
push
outsb
mov
enter
jb
fmuls
aam
mov
repz
bswap
aad
dec
std
shrl
jle
jnp
mov
js
movb
jbe
sub
lea
sub
popa
decl
push
into
xor
inc
pop
push
stos
xchg
arpl
dec
dec
loope
xor
pusha
push
mov
hlt
nop
mov
cmp
loopne
leave
xlat
jecxz
sar
fsubl
les
inc
cmp
and
and
stos
in
ja
xchg
lahf
and
aaa
jle
out
cmp
jmp
inc
outsb
or
psraw
sbb
shll
cld
cltd
inc
mov
mov
adc
leave
sahf
pop
adc
mov
and
mov
cmp
pop
daa
mov
pushf
push
mov
ret
cmpsb
movsb
lds
add
into
and
mov
xchg
lods
xstore-rng
cmpsl
ret
or
rcll
aaa
mov
pushf
sti
jnp
popf
push
push
ret
and
mov
push
jle
outsb
inc
mov
mov
adc
jb
ljmp
dec
hlt
and
cli
call
push
adc
mov
and
jno
cmp
notb
mov
sub
sub
pop
clc
mov
push
movsl
push
outsl
es
mov
lret
pusha
ljmp
mov
lds
addr16
jmp
scas
pushf
out
dec
pushf
add
push
sub
push
enter
sbb
jae
xorb
dec
cmp
fcom
add
inc
fidivl
push
jle
lods
inc
inc
pushf
mov
mov
sbb
cmp
mov
inc
test
aam
aas
inc
cmp
xchg
jo
repz
inc
sub
sahf
dec
nop
int3
xor
jns
cld
stc
xchg
xchg
jno
mov
cmc
jno
add
inc
sub
icebp
mov
lahf
or
mov
iret
jo
pop
pop
iret
lret
pop
mov
xor
dec
sbb
jae
cmp
adc
lret
test
cs
test
ss
inc
ficoms
mov
push
cwtl
jno
lods
mov
and
pop
or
sbb
call
es
mov
in
sysexit
shlb
pop
sbb
jl
addr16
jns
lds
cmp
or
xlat
pushf
test
push
cmp
cmc
mov
rcll
adc
cld
cmpl
or
push
negl
in
sbb
sub
adc
mull
jp
int3
enter
popf
cs
dec
dec
movsl
jno
sub
adc
push
lds
lods
xor
lret
cmp
xchg
jnp
sub
aam
jp
icebp
iret
and
addr16
mov
test
dec
inc
subb
fldt
mov
addr16
sub
sub
pop
sti
push
jo
mov
pop
dec
arpl
jb
cmc
and
inc
sbb
adc
pop
sub
hlt
mov
jae
gs
add
fisttpll
sbb
inc
loopne
xor
xlat
aad
adc
cmp
xchg
inc
cmp
adc
xchg
sbb
or
adc
xor
rcrb
pop
or
fs
inc
loop
les
in
cld
jne
mov
push
push
push
fdivs
sub
inc
jno
test
sub
cmpsb
stos
pop
in
jb
sbb
insb
addr16
cmp
mov
jecxz
sub
mov
sbb
fdiv
xchg
cmc
rcrl
cmc
jle
xchg
ret
in
lods
imul
add
loopne
inc
popa
stos
push
lcall
mov
jo
pop
mov
addb
and
lods
xchg
aas
aas
movsb
jb
ret
push
or
push
mov
pcmpeqd
push
add
lcall
xor
data16
or
xlat
jle
sub
hlt
inc
adc
adcl
fidivrl
add
bound
jb
xor
pushf
lods
add
ret
mov
movsb
ds
sub
xchg
lahf
sbb
inc
fbstp
or
bound
cmpsl
dec
hlt
pop
cmp
mov
loop
push
pop
testb
xor
xchg
gs
pop
negb
inc
addb
inc
push
sbb
cmp
sbb
xor
push
xor
push
shrl
push
push
outsl
data16
mov
jl
in
sub
jns
imul
imul
bound
sbbl
cld
mov
mov
pop
dec
divb
push
lds
insb
std
ret
addr16
xor
sbb
pop
pop
dec
mov
popa
push
sbb
aaa
sub
nop
pusha
js
pusha
lahf
pop
pavgw
lds
lods
mov
es
fadds
cltd
fiaddl
mov
push
lret
std
mov
fabs
icebp
mov
aas
gs
std
pushf
sbb
inc
cmp
and
adc
vshufps
in
pusha
dec
lcall
xchg
or
lret
sbb
push
dec
js
or
outsl
insl
stos
cmc
aas
aad
test
push
sbb
dec
in
inc
mov
lds
shrl
sub
lea
mov
push
inc
xchg
mov
imul
dec
cmc
mov
movsl
outsb
pop
mov
or
xchg
mov
fcoml
jne
scas
insl
cltd
and
faddl
cmc
dec
rcrl
cmpsl
divb
push
test
push
sbb
out
loopne
and
push
add
or
int3
push
sbb
xchg
cmp
loope
in
push
adc
cmpsb
or
mov
cli
jmp
xchg
mov
push
dec
fisttps
fisttpll
loop
test
dec
or
add
int3
push
sbb
lock
jno
int
cmp
lods
out
sub
fisubl
inc
cltd
frstor
mov
jo
aad
addr16
repz
scas
mov
test
repz
cmc
jae
adc
push
inc
cmp
loopne
mov
and
insl
data16
test
add
enter
lods
scas
outsl
jge
sub
push
pusha
mov
lea
fwait
in
fdivs
xchg
movsb
xchg
pop
mov
jl
cmp
push
mov
shll
lahf
cli
sbbl
loop
sbb
pop
jg
mov
mov
cmp
and
fs
pusha
jo
xcrypt-cbc
cmpsl
sar
xchg
inc
or
cmp
mov
lea
xchg
daa
stc
adc
adc
cltd
daa
iret
repz
push
int
in
test
push
mov
push
or
addl
push
mov
aad
mov
jle
xor
xlat
xor
mov
dec
dec
mov
inc
and
jp
lds
push
fcompl
pop
pop
ds
icebp
push
lock
adc
xchg
gs
mov
mov
loopne
xor
cmpsl
andl
cmp
cltd
xor
leave
fisubrs
test
hlt
ret
cltd
sbb
or
dec
and
jle
jns
jl
imul
std
dec
cmpsl
mov
shr
bound
mov
mov
jnp
sbb
dec
sbb
int
jg
maskmovq
in
mov
and
repz
addr16
mov
popa
sub
lahf
push
jmp
rolb
dec
fidivrl
lret
addl
adc
dec
popf
mov
fldl
int3
enter
xchg
lock
jmp
push
xor
pop
out
mov
jge
lcall
or
imul
cld
inc
jecxz
ret
int3
outsb
shl
pop
or
cmp
push
adc
mov
jae
adc
incl
push
dec
movsl
adc
out
cmp
mov
add
xor
icebp
sub
inc
jmp
shr
test
out
or
adc
mov
cs
sahf
dec
lahf
cmc
and
loop
rcrl
mov
dec
sbbb
push
inc
push
test
pop
mov
lret
repnz
scas
leave
or
leave
pop
stos
xor
int
mov
adc
out
or
orb
bound
mov
cmp
jo
pushf
push
shr
dec
mov
lahf
iret
clc
pop
rcll
xor
cmp
iret
lret
loope
fcmove
xchg
out
adc
flds
nop
in
jns
cmp
push
xor
stos
jnp
xor
ja
jmp
ss
or
loop
iret
inc
mov
mov
into
sti
outsb
xor
dec
jbe
fisubrl
adc
jg
and
pop
idivl
std
mov
clc
int
popf
xchg
mov
inc
sub
mov
mov
lcall
or
jb
xor
mov
test
stos
adc
aam
daa
jle
or
push
sahf
in
jp
xor
mov
push
cmpsb
pop
ret
or
mov
out
data16
in
or
std
arpl
jp
lret
xlat
mov
cmpsb
mov
adc
bound
mov
mov
jno
out
fs
movsb
dec
ret
lds
das
sub
pop
arpl
cmp
mov
bound
fistpl
fidivs
sub
ret
xchg
stc
sub
sti
jne
repnz
subb
stos
jg
repz
xchg
adc
jecxz
pop
and
andb
mov
out
jnp
dec
stos
or
jo
and
jp
dec
movsl
sub
cmpsl
jbe
mov
jo
or
xor
adc
leave
jecxz
ss
inc
mov
mov
cwtl
xorl
sbbl
mov
sahf
mov
mov
pxor
xor
into
aas
push
mov
and
sahf
jae
std
notb
mov
add
fdivrl
stc
push
push
jbe
lret
inc
out
xor
add
loope
ffreep
mov
inc
xchg
jmp
push
loopne
xchg
mov
out
stos
jmp
xor
or
gs
stos
push
sarl
adc
rcrl
loop
xchg
or
add
push
std
je
lcall
aad
cmp
mov
sbb
imul
inc
insl
inc
addr16
lds
jno
xor
inc
imul
jnp
and
xor
adc
cmp
lods
mov
int3
pop
movsb
lods
aas
in
sahf
inc
cld
jmp
push
clc
imul
mov
fsubs
pop
dec
notl
jnp
dec
mov
rcrb
insl
mov
jae
dec
in
pop
xor
leave
scas
jmp
sbbl
mov
push
pop
sbb
cmc
stos
aad
daa
add
test
sbb
add
mov
xor
push
jb
loopne
and
enter
fs
lds
iret
or
pop
iret
lret
mov
fs
sub
ja
or
aad
jmp
loop
or
popa
mov
mov
mov
ds
das
loope
insl
sti
xor
inc
sbb
adc
mov
pop
and
add
dec
xor
sahf
jp
xorb
jmp
dec
movsb
lcall
mov
das
adc
sbb
sarl
imul
adc
push
adc
push
mov
cmpb
ret
dec
lret
ret
insl
push
cmpsb
or
cmp
incl
lret
sbb
loope
inc
or
decb
pushf
add
ret
fsubl
pusha
fs
fyl2xp1
jl
ja
aaa
pop
idiv
mov
movb
sub
data16
mov
outsl
aaa
and
xchg
xorl
mov
xchg
xchg
test
xchg
mov
test
aad
xchg
mov
les
xlat
adc
push
dec
jmp
cmc
mov
and
stos
mov
add
div
mov
nop
add
jne
pop
cli
inc
adc
add
rclb
push
xchg
fsubrl
inc
fneni(8087
mov
lahf
out
cmpsb
mov
mul
int3
jl
mov
xchg
imul
add
push
pop
negl
gs
sbbl
lahf
mov
pushf
cmp
shll
or
out
nop
mov
dec
and
cmp
gs
fsub
push
jnp
dec
and
sbb
mov
pop
inc
and
push
mov
ret
push
aad
sti
xchg
cli
addr16
sti
jl
ss
cmc
nop
or
bswap
pop
cli
pop
cmp
in
cmp
test
xchg
fiaddl
cmp
dec
sti
add
in
mov
mov
pop
mov
call
push
cmpsl
push
rsm
and
sar
cmpsl
inc
mov
jo
add
imul
sub
sub
ja
jecxz
dec
outsl
xlat
and
movsl
enter
or
cli
in
mov
out
xor
pop
cs
in
pushf
xchg
out
jbe
cmp
ficoml
adc
je
push
imul
popa
push
dec
sub
pop
in
pushw
xor
jo
test
out
in
and
rolb
mov
shrb
and
bound
daa
add
dec
sub
cmpsl
jle
stos
xor
out
push
or
out
pop
jns
dec
scas
mov
xor
sbb
out
out
fwait
stos
shr
imul
push
mov
scas
pop
popa
cltd
je
add
test
xor
pop
xor
adc
or
mov
lods
inc
mov
mov
jmp
push
mov
mov
jmp
push
sub
ljmp
loopne
xchg
scas
lcall
inc
push
bound
inc
jno
mov
sub
stos
rcrl
dec
pop
dec
xchg
ret
int3
pop
daa
jb
xchg
inc
sbb
jecxz
mov
cltd
mov
ss
xor
mov
mov
test
add
bound
mov
ret
jge
and
cmp
inc
xchg
push
leave
es
pop
push
fwait
mov
in
cmc
add
mov
mov
dec
stos
iret
out
xchg
mov
sbb
mov
pop
bound
cli
sbb
mov
cli
stos
mov
mov
dec
push
jp
or
sbb
sub
cmp
lret
lret
ljmp
mov
jnp
dec
push
jp
or
sbb
sub
cmp
into
clc
aam
repnz
stos
mov
mov
inc
push
jae
push
and
mov
fdivp
xlat
ds
push
repz
mov
sbb
mov
lock
pop
or
hlt
push
in
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jmp
mov
pop
ret
mov
mov
lcall
add
add
add
add
faddl
adc
adc
sub
lahf
add
add
add
jg
faddl
add
ds
add
add
add
add
add
add
xor
stos
add
add
add
add
add
add
add
add
add
add
add
xor
mov
iret
add
ds
add
add
in
cmp
cwtl
add
sbb
je
mov
pop
add
add
out
add
add
add
add
add
add
push
add
add
add
cmpsl
add
add
add
add
add
out
inc
add
add
add
add
xor
pushf
add
and
adc
adc
mov
add
add
lret
add
pushf
add
jns
pop
add
add
add
add
sbb
out
add
xor
push
add
addb
add
add
rolb
jl
pusha
add
add
add
add
add
jg
add
add
add
add
add
add
nop
add
xor
sbb
or
sahf
add
arpl
test
push
add
add
add
add
jge
scas
add
inc
add
add
add
add
cmp
add
add
nop
add
fldl
test
test
ja
push
add
add
add
add
cwtl
add
add
add
faddl
scas
add
add
fadds
movsl
add
add
add
iret
add
add
sbb
test
testl
push
add
cmpsl
add
add
add
add
add
add
mov
add
add
dec
add
add
add
add
add
add
mov
add
inc
add
adc
add
add
add
add
add
inc
add
add
sbb
add
add
add
adc
jns
xchg
add
add
out
add
add
add
enter
movl
or
add
scas
add
add
dec
add
xor
sbb
and
rolb
add
add
jns
mov
str
add
jle
xchg
add
add
add
add
add
add
add
jg
filds
add
add
add
pop
add
add
add
add
add
add
lahf
add
fwait
add
add
jge
inc
add
add
add
add
add
add
stc
add
add
sub
add
add
test
push
add
add
add
add
add
add
add
add
add
add
add
add
imul
dec
add
push
add
add
jge
sub
jns
stos
add
add
add
add
add
add
add
add
add
out
push
add
add
in
lea
roll
add
add
add
add
add
add
add
add
add
add
add
roll
add
dec
add
lea
xor
push
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
testl
daa
mov
adc
and
cli
incb
xor
repnz
arpl
cmpsl
fcmovne
fucom
js
add
xor
xchg
loopne
push
sub
stos
rorl
sub
and
xchg
dec
and
cmpsl
xchg
push
or
jl
enter
and
sbb
lcall
rorb
cs
add
push
lock
mov
inc
add
push
sbbb
mov
jo
xor
lds
mov
sarl
test
xchg
mov
xor
mov
mov
clc
sbb
adc
pop
xor
pop
mov
dec
xchg
adcb
jae
mov
jo
sbb
mov
cmp
mov
xor
outsb
sbb
push
into
mov
mov
mov
cmpsb
xchg
push
add
dec
xchg
jg
jmp
divl
inc
mov
xchg
cmp
loop
push
add
sti
pop
mov
sub
cld
sbb
xor
movsb
stos
scas
jae
inc
pop
sbbl
xchg
imul
mov
leave
cld
adc
mov
inc
fnsave
aaa
insb
rep
mov
pushf
add
jg
test
jne
xchg
enter
jmp
and
enter
lea
inc
sahf
pop
out
or
inc
int
add
cmp
stc
sbb
add
arpl
add
mov
arpl
xchg
frstor
xchg
and
cli
insb
push
xor
jge
cmp
out
dec
dec
rcrb
push
ret
addb
and
push
ret
dec
addb
je
pop
pop
jl
sarl
jns
ret
decb
jge
push
mov
clc
jne
pop
add
push
gs
dec
pop
lret
jp
inc
jle
hlt
dec
in
dec
sahf
aam
pop
das
push
mov
daa
notb
mov
mov
ja
testb
jp
fdiv
push
sti
sbb
js
fnstcw
mov
pop
sahf
fs
movsb
xor
inc
dec
cli
cmc
xchg
insl
rep
mov
fimuls
xchg
adc
inc
roll
rorl
cmp
test
dec
sti
lods
add
jnp
adc
sbbb
stos
sub
xchg
mov
xchg
cmpsl
sbb
in
inc
sar
cwtl
or
leave
push
sbb
inc
insl
out
and
mov
push
inc
shrb
andb
dec
or
fwait
xor
sbb
cmpsb
and
les
jl
xchg
pop
scas
adc
cmp
std
es
lds
insb
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
