call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aad
lds
sbb
or
testl
push
jg
mov
adc
sub
sbb
or
pop
movsl
gs
mov
gs
aad
jmp
in
cmc
and
and
mov
gs
adc
test
mov
outsb
pop
je
xchg
mov
xor
pusha
push
and
fs
sbbb
sbb
push
test
dec
movsb
pop
mov
inc
rclb
lcall
push
test
test
jb
inc
nop
sti
push
xchg
lock
ds
sti
adc
adc
inc
or
push
or
cmp
sub
outsl
nop
pop
xor
rorb
jp
mov
adc
adc
dec
test
lcall
lock
jnp
xchg
cli
mov
sub
cmp
outsb
outsb
fistl
ja
cmp
movsl
dec
add
mov
mov
loope
xchg
mov
sbb
in
xchg
jnp
imul
inc
add
gs
movl
inc
pushf
ja
addr16
fdivp
push
shrl
cmpsl
or
clc
and
jne
sbb
test
arpl
nop
push
sarb
xor
js
ficoml
ja
gs
pop
mov
ja
fnstenv
test
pop
movsl
dec
push
mov
mov
sub
sbb
or
pop
movsl
dec
push
mov
mov
jge
lretw
sbb
bound
push
je
hlt
je
jbe
pop
pop
xchg
sbb
shrb
cmc
nopl
aad
add
out
jbe
scas
popa
jbe
jnp
dec
mov
loop
out
cs
jns
outsb
cwtl
es
insl
mov
loope
inc
mov
lea
ds
add
and
add
jne
fdivrp
hlt
xor
cmp
inc
push
stos
inc
data16
icebp
xchg
pop
adc
adc
gs
adc
cmpsl
repz
cmp
mov
mov
push
sarw
movsb
mov
mov
pop
or
adc
xchg
addl
ljmp
push
test
inc
sbb
or
fstl
cltd
in
pop
cwtl
fcmovnb
es
mov
or
rcrl
xor
outsb
mov
jns
movsl
jo
sub
dec
aad
xchg
push
inc
add
sbb
jl
mov
or
cmp
dec
jno
lahf
in
sahf
or
xor
les
outsl
insl
daa
dec
scas
loope
push
shlb
cmpsb
in
push
pop
loopne
lods
jb
cmp
and
loop
or
mov
jnp
adc
or
nop
jg
shlb
inc
and
lock
xchg
std
std
cmp
or
xchg
pop
adc
push
and
mov
add
push
add
rcrb
sahf
xchg
sbb
int3
pop
mov
sbb
mov
add
push
lds
scas
sub
clc
add
pop
popf
int
dec
dec
inc
pop
ficompl
pop
icebp
aas
imul
add
cli
cs
jmp
mov
sub
mov
xor
jno
add
andb
adc
stc
dec
and
mov
out
add
pop
mov
xor
xchg
and
ja
test
popf
loop
jmp
jne
loopne
data16
xor
sub
dec
jp
fimull
jg
dec
lea
pop
mov
pop
jp
mov
popf
mov
xor
outsb
push
push
cmp
sub
sub
test
jno
inc
aad
in
and
cli
inc
into
cmpsb
push
dec
mov
mov
enter
mov
mov
push
aaa
add
and
or
jle
mov
fldt
xor
jno
lods
xchg
add
shlb
loop
scas
popf
xchg
std
ret
add
subb
andl
sbb
inc
pop
cmp
mov
and
jae
jecxz
lds
test
fists
test
addr16
lea
xor
xor
insl
jae
jge
lret
mull
loope
or
pusha
lcall
dec
pop
fisttpll
jp
or
mov
dec
insl
mov
mov
add
je
in
mov
jae
inc
cmp
fcmove
jne
jae
out
cmpsl
xlat
cmp
pop
sbb
fistl
xor
test
adcb
mov
ja
fucomp
ss
imulb
pop
imul
arpl
or
ret
pushf
dec
movsb
and
adc
cmp
mov
ror
xor
mov
pusha
ja
mov
imulb
fs
push
iret
and
dec
mov
aas
addr16
hlt
pop
mov
lock
imul
mov
scas
mov
jne
lret
out
ss
popf
into
rcr
cmp
pop
imul
lret
mov
movsb
and
sahf
jge
outsb
adc
ljmp
aam
iret
jne
adc
xchg
sbb
leave
pop
mov
xchg
inc
jno
arpl
jb
cmp
mov
aam
out
daa
and
lret
leave
xchg
jg
or
int3
iret
mov
xor
test
ffreep
jl
adc
dec
mov
insl
in
movsb
daa
jg
adc
dec
cwtl
repnz
dec
xorb
enter
fadd
sar
stc
out
or
jno
cmp
fcoms
sub
xchg
xchg
xchg
icebp
jnp
fists
icebp
sarl
test
or
mov
gs
adc
call
cld
stos
dec
jp
xchg
lods
rorb
and
std
mov
test
fstl
sahf
das
mov
shll
adc
dec
jmp
ret
or
clc
enter
sub
sub
rolb
daa
scas
sar
int3
jb
stc
je
mov
mov
loop
mov
adc
loop
add
push
xchg
stc
hlt
call
xabort
jo
ret
iret
fs
sub
aam
inc
push
push
pop
lcall
loopne
cmp
and
push
aas
add
push
push
les
add
xchg
dec
or
cmpsb
sbb
push
sbb
inc
leave
movsl
popf
repnz
pop
mov
imul
cmpsb
das
dec
mov
push
sub
outsb
mov
mov
in
mov
mov
daa
add
fmull
push
inc
mov
adc
xor
lock
addr16
clc
fstpt
das
add
out
into
push
lds
sbb
cmc
dec
mov
into
mov
fmuls
dec
pop
fists
or
sub
mov
bound
lret
cltd
adcl
or
out
lods
cmpsl
test
dec
lods
pusha
jno
bound
mov
into
lret
or
imul
jmp
fadds
test
sbb
ret
decl
int3
sbb
loopne
das
imull
in
mov
add
lret
int
aad
fbstp
and
fildll
mov
push
or
inc
inc
jae
lret
sub
cltd
xchg
xchg
cwtl
mov
inc
rcll
dec
imul
cmpsb
stc
jb
pop
pop
iret
and
push
mov
adc
lods
pop
push
les
movsl
dec
bound
add
in
mov
mov
jge
loopne
and
jmp
jno
mov
lret
inc
mov
jb
mov
push
xchg
stos
xchg
inc
outsl
aad
adc
sbb
loopne
sarl
lcall
pop
movsl
or
adc
in
pop
test
cmp
movsl
lods
sbb
js
sti
adc
lret
out
mov
and
int
pop
dec
insb
test
cmp
xchg
fcompl
ds
or
rorl
outsb
xor
sbb
jg
mov
push
jmp
fildl
in
add
xor
mov
jo
adc
or
jle
xchg
ljmp
das
push
sbb
aas
es
pop
cli
cmp
adc
push
adc
shrl
or
aam
jno
cmpsb
arpl
pop
sti
xchg
sahf
je
cmp
addl
xor
sbb
imul
in
jmp
mov
dec
loopne
in
pop
and
je
mov
mov
pushf
sub
shll
push
movsl
addr16
dec
movsl
lahf
rcrb
sbb
in
loopne
xchg
es
mov
subb
leave
aad
cltd
in
jnp
stc
dec
mov
xchg
xchg
push
icebp
cld
fistpll
sahf
aam
dec
dec
and
sbb
or
in
gs
cld
shlb
sbb
loopne
ss
loopne
in
lock
mov
jae
push
and
lods
dec
nop
sub
pmullw
sub
push
mulb
roll
insl
adc
dec
adc
mov
movsb
bound
popa
pop
nop
fistpl
xchg
jle
mov
out
xchg
cmp
cli
scas
xor
mov
mov
mov
pusha
lds
push
imul
std
jae
or
inc
icebp
hlt
inc
cli
xor
in
mov
gs
xor
ret
into
or
in
push
les
out
cmp
daa
pop
std
scas
ss
pop
imul
iret
cs
mov
gs
cmpsl
add
lock
lods
lds
fadds
lret
adc
aad
push
lock
and
mov
shr
inc
adc
add
idivl
xchg
cmp
scas
cmp
ret
xor
sbb
add
js
pop
dec
or
in
push
pop
fisttps
push
addr16
imulb
mov
push
inc
pop
mov
out
adc
cmp
xlat
add
rclb
lret
roll
aas
mulb
xor
xchg
fimuls
lea
mov
sahf
xor
ja
bnd
bound
std
dec
int
out
mov
inc
sub
adc
je
out
add
xchg
dec
xlat
leave
fsubrs
xchg
mov
scas
dec
arpl
out
mov
loop
loopne
mov
in
repz
xchg
add
push
call
cmp
fisubrl
mov
inc
leave
mov
mov
bound
movsl
fcoml
bound
stos
scas
adcb
lds
mov
fiadds
dec
aaa
mov
lret
bound
into
xchg
mov
adc
xchg
sbb
mov
mov
xchg
push
mov
std
fimuls
sahf
xor
call
out
ljmp
mov
mov
xchg
mov
filds
inc
jnp
test
aam
imul
inc
bnd
xchg
lods
sbb
in
push
jae
inc
je
lret
adc
bound
movl
xchg
cwtl
sub
lahf
xlat
mov
sarl
movsb
xchg
fnsave
jno
std
imul
addr16
adc
ss
mulb
in
pop
add
loopne
scas
shlb
adc
or
lret
sub
outsb
xlat
shlb
add
xchg
inc
daa
into
push
dec
sbb
js
xor
cmc
dec
jno
loopne
xor
ds
out
lret
sub
cli
mov
and
mov
sbb
dec
imul
cmc
daa
push
imul
adcb
sbbb
out
fs
mov
mov
jmp
fimuls
fs
lahf
inc
jl
cs
test
pop
enter
testb
mov
dec
push
imulb
xlat
int3
insl
mov
repnz
add
shlb
jo
push
and
and
stos
dec
xchg
jo
cmp
hlt
push
sub
aam
sbb
test
adc
cld
and
or
scas
xor
push
mov
or
jno
mov
inc
mov
push
xorb
movsb
idivl
cmp
sbb
jae
test
das
in
jo
adc
cmpsl
lds
stos
aas
cmp
jns
imul
rol
arpl
bound
out
add
pop
inc
push
mov
fldcw
dec
mov
fwait
or
xor
cld
or
stc
mov
lock
in
and
es
fnsave
mov
add
out
mov
sbb
sbb
xlat
xor
mov
cmpsl
std
inc
imul
mov
or
mov
pop
or
or
sub
mov
xor
fwait
jne
push
or
push
cmp
jmp
icebp
cmpsb
mov
cmp
and
mov
push
cld
in
add
and
icebp
imul
cmpsl
in
and
stos
push
mov
subl
cmp
fisttpl
xchg
pusha
shr
sub
ds
mov
cld
cmp
or
cmp
movsb
mov
pop
in
mov
in
inc
xchg
mov
in
adc
adc
imul
cmp
pop
jl
and
add
mov
adc
cmp
or
and
xchg
dec
dec
ss
mov
stos
loopne
xor
push
jae
ljmp
es
lds
lock
insl
stc
cmc
shlb
push
cld
pop
adc
imul
xor
arpl
sub
nop
push
xor
iret
dec
sbb
jcxz
lock
inc
inc
call
enter
cmc
inc
cmp
or
jns
and
lcall
xorb
sub
jns
leave
jnp
clc
into
pusha
mov
and
rol
add
fcoml
lods
mov
jo
cli
jb
mov
loope
adc
push
mov
enter
xor
mov
mov
inc
rcrl
mov
mov
pop
in
and
xchg
inc
movl
test
dec
bswap
xchg
pop
mov
rcrl
sub
fstl
adc
xor
add
enter
lock
cli
xor
idivl
xchg
test
mov
movsl
mov
jb
jle
sahf
xorb
pop
mov
icebp
in
int3
push
jae
push
fldenv
push
movups
ror
aad
pop
ret
popa
fdivrp
cmp
push
rol
push
pop
push
into
lcall
stc
sahf
sub
lods
decb
insl
es
ljmp
es
lods
ret
xchg
testl
dec
cmp
lods
sub
popl
jae
or
or
jl
jmp
mov
aas
sbb
jl
pop
mov
imul
ret
jne
imul
pop
mov
jg
cmp
pusha
test
popf
adc
test
xor
lds
xchg
xlat
repnz
outsl
dec
mov
sbb
and
icebp
aaa
lret
daa
pop
xchg
add
inc
mov
xchg
rclb
in
shll
push
jne
jbe
cs
pusha
lock
sbb
sub
shll
leave
and
sahf
or
mov
mov
mov
in
jb
jl
pop
shr
or
out
push
xchg
add
pop
sti
test
sahf
and
ss
aam
inc
sub
fbstp
cmp
or
push
xor
pop
aaa
das
cld
lret
push
cltd
addl
dec
xor
add
adcb
cmpsl
scas
sub
sbbb
mov
ret
loopne
mov
pop
add
xchg
fcomps
loopne
pop
jle
mov
mov
mov
roll
pop
pop
or
fidivl
stos
and
xchg
inc
sti
scas
cmp
fwait
in
jecxz
xchg
out
int3
scas
sub
daa
mov
vmptrld
xchg
xchg
lret
sbb
xor
push
and
mov
mov
jecxz
lret
inc
mov
in
add
stos
addr16
shrl
das
mov
lcall
sub
testl
cmpsb
aaa
xor
insl
lock
leave
cld
shrl
ja
pop
jmp
clc
ja
sbb
cli
test
int
movsb
rclb
call
xchg
xchg
mov
daa
jb
mov
repz
and
fstpt
push
add
mov
fcompl
inc
xor
rorl
cwtl
scas
xor
iret
shrl
xor
and
ljmp
daa
adc
cmpsb
mov
jge
fcmovnbe
rorb
cmp
push
adc
mov
lds
jne
mov
xlat
mov
test
aam
fs
je
cli
mov
ss
inc
incb
popf
subb
xor
add
push
sub
nop
jg
arpl
idiv
cmpsb
cmp
xchg
test
push
jge
in
add
mov
cli
mov
pop
push
adc
call
out
sbb
xor
fwait
mov
fistpl
jae
add
test
add
pop
testl
add
jae
push
dec
mov
in
and
sub
imul
rol
sahf
sbb
filds
lods
in
jno
sub
mov
sub
lods
xchg
jle
movsl
xchg
dec
jnp
xor
add
xchg
cs
push
in
jnp
subb
inc
and
or
jmp
xor
movsl
cmp
or
mov
nop
sarl
hlt
out
jo
push
xchg
mov
scas
cmp
popa
pop
sbb
iret
stc
pop
xor
popa
inc
cli
insl
and
ljmp
xorl
daa
push
dec
dec
inc
push
sub
ror
cmp
or
add
xor
test
std
mov
push
outsb
sub
cmpsl
cs
mov
dec
inc
pop
jbe
and
mov
repz
or
push
push
or
dec
call
in
jp
mov
js
scas
pop
movsb
xchg
jb
mov
fwait
pop
pop
sbb
mov
xor
cmpl
jge
fwait
loope
mov
mov
dec
lea
fbld
pop
and
jmp
mov
and
int
inc
stos
sti
repnz
es
mov
mov
xchg
add
inc
push
push
imul
mov
push
jle
sbb
push
sbb
and
stos
sbb
pop
out
outsb
cmp
out
shl
rolb
pushf
sbb
out
lahf
cmp
rcrb
stos
adc
stos
fs
xchg
and
mov
data16
xchg
or
adc
out
into
adc
cmp
sub
xchg
mov
fildll
inc
lahf
movsl
xor
movsb
popf
xchg
stos
pop
sub
ficomps
add
lods
or
mov
in
cltd
pop
mov
xchg
outsb
mov
add
leave
jnp
cmp
shlb
jge
popf
arpl
jmp
outsl
les
ja
inc
mulb
pop
inc
fldcw
and
cmp
or
ja
dec
dec
loopne
aam
std
scas
xchg
pop
les
mov
call
jae
jne
fmuls
fmul
mull
cli
pop
mov
enter
jecxz
mov
dec
mov
inc
mov
pop
or
and
mov
dec
xchg
ret
bnd
ds
adc
add
mov
push
xchg
mov
jmp
movsl
lret
aad
out
sarb
ljmp
mov
add
and
pop
lahf
cmc
pop
cmc
sbb
out
aam
xor
je
or
aas
insb
data16
ret
xor
or
push
loop
xchg
nop
in
popa
imul
mov
add
pushf
cmp
cmp
mov
push
outsb
xor
pop
fs
mov
scas
int
lea
les
leave
sarb
pop
xor
insl
add
xchg
fs
jmp
int3
add
mov
fsubrp
adc
cmp
and
mov
jecxz
inc
out
fistpl
cwtl
mov
jl
les
sub
jmp
lret
movsb
xchg
pop
lods
add
xchg
cmp
aam
ficoms
leave
out
sbb
pop
dec
jl
jbe
sub
movsb
sbb
or
test
inc
into
repnz
jl
stc
inc
test
pop
pop
fwait
cmp
push
pop
mov
daa
inc
xor
in
js
out
cmp
push
and
mov
pop
or
insb
fnstsw
xor
daa
stos
data16
mov
pop
subb
stos
dec
iret
and
out
jp
shlb
mov
aam
push
pop
mov
add
lods
sbb
adc
sbb
xchg
xchg
pop
mov
and
sbb
ret
call
lcall
lcall
xor
repz
inc
scas
mov
and
repnz
enter
dec
push
mov
iret
adc
les
lahf
and
rcll
jmp
pop
inc
insb
pop
add
movsb
push
cmpb
loop
jecxz
xor
sub
xchg
repnz
mov
outsb
fsubrs
mov
dec
lock
test
cmp
ds
call
push
in
shrl
stos
out
xchg
fstpl
sub
push
dec
data16
inc
and
out
out
aad
incl
sbb
js
mov
cmp
dec
push
pusha
lahf
popl
clc
sti
cmp
leave
cmp
xchg
lcall
movsl
inc
cld
lods
jbe
popa
call
fbstp
dec
push
in
pushf
jecxz
out
cmc
dec
repnz
sbb
pop
mov
add
outsl
cmp
popa
dec
ret
fs
std
inc
repz
inc
push
mov
inc
mov
test
in
jne
xor
icebp
int3
jne
mov
jle
cmp
pop
leave
fs
out
ds
xor
sub
decb
push
lods
and
jno
cwtl
mov
xchg
ds
call
pop
lods
pop
push
fiadds
push
out
inc
sub
dec
xchg
adc
and
push
xor
dec
cmp
xchg
cli
inc
add
loopne
pop
jae
leave
idivl
add
repz
ret
jecxz
mov
or
push
stos
in
dec
xchg
ror
cmp
lcall
pop
mov
adc
ror
add
fwait
into
pop
cli
add
gs
sub
mov
adc
enter
mov
sub
or
jmp
jnp
or
les
add
pop
into
outsl
shll
dec
push
cld
xchg
jl
adc
sbbb
rcrb
test
cmc
imul
dec
lret
mov
shr
push
pop
push
jl
push
jbe
rolb
mov
rcll
repz
sbb
lea
in
mov
pusha
icebp
push
mov
push
dec
lds
sub
push
in
xchg
jnp
imul
inc
stos
jne
mov
sub
sbb
or
pop
movsl
dec
push
mov
mov
and
adc
pop
and
scas
jne
adcb
and
iret
cmc
jmp
dec
xchg
jnp
imul
inc
add
fwait
gs
xorl
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
sbb
push
ret
pop
popf
mov
clc
in
enter
cmp
push
insl
pop
add
jmp
mov
fdivr
nop
or
sarb
insl
pop
jge
lea
faddl
addl
inc
jno
insb
insl
js
xchg
out
imul
outsb
mov
xlat
fs
int
data16
mov
mov
lds
ja
stc
int3
bound
int
adc
in
daa
lods
or
push
cmp
sahf
imul
fstpt
in
clc
fdivrs
inc
hlt
dec
push
cmp
add
js
mov
pop
subl
pop
pop
int
and
out
cld
xlat
jns
dec
sub
mov
ret
pop
rcrl
jb
rorl
sahf
clc
fnsave
in
aam
xlat
mov
jge
dec
xchg
xchg
mov
insl
cmp
push
insb
test
int
mov
in
fucomi
jae
outsb
sbb
mov
pop
dec
insl
jge
lea
popf
lods
test
mov
in
fcoms
sub
push
xor
sub
test
jmp
in
enter
mov
mov
push
jns
add
sbb
sbb
ljmp
mov
cltd
xchg
inc
dec
push
push
imul
pop
dec
insl
pop
jge
lea
mov
enter
sub
sbb
dec
insl
pop
jge
lea
mov
enter
sub
fdivr
cmpsl
cmp
aas
shll
in
mov
jne
sbb
adc
leave
xor
cmpl
add
inc
fimuls
jle
xchg
push
test
mov
aam
dec
arpl
in
xor
pushf
mov
sbb
arpl
int3
cli
cmpb
inc
mov
sbb
leave
cmp
xchg
add
stc
insb
in
std
shll
sysexit
test
mov
adc
ja
inc
jge
pop
lds
and
pusha
dec
aaa
jae
mov
fadd
sbb
fs
jae
add
jne
scas
mov
ret
xchg
inc
push
mov
mov
cs
mov
push
nop
out
inc
inc
lock
add
pusha
nop
daa
lods
arpl
jmp
in
fs
cwtl
outsl
in
jnp
mov
push
inc
jbe
pop
push
pop
stos
mov
inc
cmpsl
mov
pop
sub
gs
rcrl
adc
repz
cmp
jb
mov
aas
sarb
in
nop
jle
push
jmp
push
dec
ficompl
out
imul
and
jne
mov
aas
and
pop
push
mov
sbb
pushf
add
out
mov
xor
or
aas
fisttpl
shrl
sub
test
pop
adc
cltd
jge
sbb
jg
into
mov
mov
leave
mov
mov
rcr
inc
cmp
test
ret
xchg
lods
pop
lcall
pop
push
daa
sahf
pusha
mov
dec
nop
stc
xchg
es
mov
out
ret
outsb
xlat
push
int3
dec
jmp
cs
lds
pop
pop
cmpsl
outsl
lods
sbb
mov
add
cmp
xchg
fwait
jae
std
fs
add
xchg
mov
jp
mov
mov
push
ret
hlt
stos
adc
std
dec
or
fnstenv
cmp
inc
push
push
das
dec
shl
fwait
push
xchg
cs
add
jae
inc
shrb
aam
bnd
mov
notl
adc
aad
mov
clc
int3
insl
pusha
push
xor
lea
xor
mov
xchg
inc
sbb
aam
imul
test
sar
push
jmp
mov
mov
dec
sbb
push
xor
or
cmp
out
sub
out
pop
repz
fistps
pusha
lahf
incb
xchg
inc
adc
add
mov
insl
stos
lods
dec
lock
xchg
movsl
testl
xchg
push
mov
adc
mov
cmpsb
cwtl
fsubrp
push
out
movsb
mov
push
cmp
pop
test
stos
stos
repz
fisttps
push
icebp
test
ja
dec
xchg
pop
lret
es
mulb
xchg
pop
push
in
test
mulps
mov
mov
jne
and
mov
pop
shlb
sbb
daa
sub
sbb
ja
dec
mov
sti
fs
xchg
mov
sbb
mov
ret
mov
lods
inc
cmp
lret
cmp
hlt
xchg
testb
xchg
dec
movlps
xlat
push
jge
pushf
in
dec
call
test
push
outsb
movl
and
mov
lock
xor
xor
sti
and
pop
xor
movsb
jp
movsb
stc
mov
jle
je
bnd
jne
mov
xchg
aam
pop
add
test
and
and
jmp
or
mul
repz
pop
xchg
mov
rorl
in
and
pop
xchg
add
push
add
sub
push
push
cli
pop
in
jl
dec
xor
fs
ret
arpl
jge
cld
mov
lea
jne
xchg
test
xchg
xchg
pop
test
lret
addr16
cwtl
lret
sbb
mov
fldt
push
dec
popf
cltd
mov
arpl
nop
pop
fs
std
pop
fimull
mov
les
xchg
jne
insb
xchg
lcall
sub
les
jl
xor
jnp
jae
adc
push
dec
cmpb
sub
cltd
push
mov
xor
daa
enter
mov
inc
loopne
mov
mov
cmp
jg
insl
pop
and
sub
push
ret
jmp
shrb
lret
mov
ljmp
sbb
jle
mov
or
ss
sub
xlat
je
mov
inc
pop
subl
pop
jmp
jge
and
jp
icebp
cmp
cmp
or
fdivrl
or
inc
shlb
dec
mov
lea
aaa
pop
ror
pop
jge
jae
loopne
sbb
jae
popf
inc
mov
pop
out
jle
pop
cmc
cmp
fldenv
pop
mov
sbb
cmp
pushf
mov
pusha
aam
pop
lea
fldl
add
int
lret
adc
cmp
sbb
inc
mov
push
nop
fnstenv
mov
sub
cmp
xchg
cmpsb
ja
addr16
jbe
aam
adc
inc
pop
push
lods
add
adc
repnz
xchg
push
add
scas
pop
mov
andb
rcr
clc
sub
dec
sub
outsl
test
mov
fists
clc
cmc
cltd
xchg
mov
mov
push
xor
mov
mov
mov
add
push
xchg
scas
movb
mov
mov
xor
sti
dec
cmpb
pop
push
adc
aas
scas
jno
mov
adc
ret
mov
or
test
addr16
xchg
adc
dec
std
outsb
stos
dec
std
push
xchg
or
adc
push
sbb
insb
and
cmc
and
es
out
lcall
sub
dec
mov
or
mov
int
mov
cmc
xchg
repnz
pusha
cmp
inc
adc
push
cld
stos
adc
pop
inc
jne
je
mov
rol
xchg
ss
ja
sbb
addb
pop
jp
mov
xor
test
mov
cmpsl
aam
fidivl
test
xor
stos
daa
adc
xchg
or
rclb
into
mov
mov
pop
mov
in
iret
cmpsl
inc
sub
push
ss
scas
and
cmp
dec
xor
and
mov
sbb
xor
jl
fs
out
and
lahf
xchg
push
movsb
addr16
test
fstpt
mov
cmp
xlat
pop
out
out
mov
jg
add
sbb
adc
jge
iret
leave
pop
mov
mov
cmp
sahf
or
cmp
loopne
cld
pushf
xchg
and
ljmp
cmc
test
shlb
xchg
pop
xor
xchg
jl
push
push
insl
out
ljmp
int3
xor
stc
inc
in
popa
in
test
shll
out
add
xchg
inc
cwtl
shlb
scas
jno
lods
mov
mov
test
leave
shll
jbe
and
in
dec
push
push
mov
test
loop
push
out
out
aas
push
leave
lea
sbb
or
jle
and
cltd
jmp
stos
lahf
test
stc
popa
inc
push
xchg
add
mul
aam
pop
push
arpl
shrl
cli
cwtl
add
sub
mov
sbb
jl
fcmovne
std
and
and
adc
in
pop
add
outsl
test
stc
out
pop
loop
sub
mov
xor
sbb
mov
mov
les
sub
jge
add
in
lock
stos
xchg
mov
leave
daa
inc
cld
test
in
mov
daa
lods
push
dec
lcall
ret
sub
mov
dec
xchg
int
mov
bnd
dec
mov
scas
test
clc
cli
sbb
jb
stos
add
nop
mov
ljmp
pusha
jb
cli
sub
cmp
int
clc
adc
push
mov
add
icebp
iret
rcr
loope
dec
outsb
jmp
dec
loope
jnp
loope
movsl
xor
cmpsb
lahf
and
xchg
cltd
jl
popf
inc
bound
insl
mov
cmp
setl
jg
adc
in
mulb
notb
fwait
adcl
ss
inc
je
push
inc
xor
fwait
imul
mov
mov
enter
or
iret
lcall
and
mov
mov
xor
sub
cmpsb
xor
cmp
loope
ret
jmp
sbb
mov
push
fsubl
fdivrs
cmp
mov
rdmsr
sahf
gs
push
pop
mov
arpl
and
pop
mov
mov
push
and
push
cli
xchg
cmp
aad
loopne
outsl
mov
jb
sub
lea
mov
mov
pushf
test
sti
iret
pushf
jae
cmp
jbe
dec
daa
mov
test
xchg
stos
les
sub
inc
cmpsb
movsl
cmp
ljmp
lods
cs
jecxz
jecxz
push
pop
rcr
rorb
ds
sub
mov
sbb
dec
aad
int
xlat
lods
push
in
pop
leave
cmp
inc
xchg
dec
idivb
pop
popa
pop
hlt
sub
test
pushf
and
out
jo
mov
mov
jo
xchg
int
leave
sub
push
sub
leave
dec
sahf
mov
cmp
mov
push
inc
es
jne
push
cwtl
pop
add
push
dec
movsl
out
and
cmpsl
mov
mov
inc
push
lret
inc
mov
insb
cmp
push
mov
jg
ja
nop
ror
call
jnp,pt
inc
mov
push
ficomps
pop
xchg
jg
icebp
xor
xchg
lock
scas
mov
gs
sub
mov
jmp
mov
pop
in
and
int3
jecxz
rorl
mov
cld
push
ljmp
scas
jg
and
arpl
loopne
cmp
sub
and
imul
push
jno
scas
out
cwtl
je
shrb
insl
testl
cmp
sbb
out
add
push
aaa
outsl
push
mov
inc
cmp
stc
dec
jns
lds
mov
int
sub
dec
jmp
cmpl
dec
lret
subb
stos
dec
xor
mov
sub
addr16
out
cmp
test
sub
fisubrl
shll
sahf
lcall
fs
and
fsubrp
sub
inc
iret
or
mov
cmp
lea
jns
fwait
nop
arpl
imul
lcall
mulb
xlat
push
cmpsb
mov
adc
adc
jnp
or
mov
mov
test
cmpsb
push
fsts
pop
clc
jge
les
xor
xorb
mov
jb
mov
push
lret
pop
sbb
dec
pop
cmp
mov
mov
push
mov
jle
xorl
std
std
adc
int
inc
mov
in
leave
es
and
jge
add
or
nop
mov
or
cli
in
cmpsl
jp
mov
fldt
loopne
mull
or
mov
out
push
cmc
mov
icebp
mov
aaa
pop
fisubrl
mov
jmp
cmpsb
popf
xor
inc
jp
or
mov
lds
jl
dec
mov
insl
xchg
sbb
jb
scas
pop
jnp
cmp
mov
cmp
xorb
lock
or
adc
in
iret
pusha
les
or
mov
jbe
fwait
add
pop
std
icebp
pop
cmpsl
outsl
cmp
dec
push
push
jecxz
lods
and
loope
jmp
icebp
xor
std
icebp
test
jge
imul
sbb
lods
xchg
outsl
adc
clc
inc
clc
add
fstpt
hlt
sti
sbb
sbb
mov
sub
les
clc
inc
pop
xor
sub
sub
sub
push
sbb
xor
cli
sub
and
sahf
jne
push
cmpsl
pop
into
pop
enter
movsl
sahf
clc
addr16
add
lods
push
lret
pop
push
aam
imul
dec
scas
mov
sub
mov
jbe
iret
lods
inc
jecxz
sti
divl
aam
sbb
out
scas
outsl
test
data16
in
mov
addr16
sub
dec
fcmovu
push
mov
dec
test
mov
dec
and
js
jmp
out
jbe
push
stos
jecxz
test
sbb
fsubrl
aas
pop
push
bnd
imul
outsl
jno
sub
popf
aaa
mov
stos
mov
mov
jecxz
notl
mov
dec
popa
in
fdiv
inc
lahf
repnz
pop
inc
jbe
inc
clc
loope
cli
mov
sti
mov
cmc
jns
test
sub
jns
out
je
inc
sub
lahf
mov
inc
jns
push
xchg
rorb
sub
cmp
xchg
pop
fstp
test
mov
mov
add
pop
mov
dec
call
or
mov
mov
fldt
xchg
sbb
test
and
add
jne
pushl
test
dec
push
loope
popa
loop
mov
mov
pop
test
push
mov
cmpsl
push
lret
cmp
data16
lock
cmp
js
mov
push
inc
mov
pop
dec
ds
ss
out
mov
lds
sub
xchg
das
pop
push
fadds
pop
clc
test
pop
aas
lods
stc
cmp
and
cmp
stos
bswap
cmp
or
mov
shll
jae
sysenter
rcr
push
push
sub
mov
xor
jne
mov
or
mov
out
mov
push
adc
cmpsb
cmp
inc
call
loop
sbb
call
dec
pop
sub
loop
inc
add
adc
subb
mov
dec
xchg
stc
pushf
mov
lret
outsb
inc
mov
dec
inc
neg
and
idivb
lcall
into
mov
cmp
sbb
sub
cmc
add
out
std
jg
fcmovnu
cmpsl
pop
and
testl
mov
sahf
shlb
call
lahf
mov
dec
adcl
es
jne
adc
adc
lods
imul
jo
adc
in
pop
cwtl
xor
es
insl
or
pop
xor
push
add
rorb
pop
dec
fldcw
lods
std
adc
jg
mov
inc
jl
inc
jp
rcr
mov
or
testl
push
pop
xor
repnz
test
imul
xchg
xchg
xchg
enter
and
insl
scas
mov
insl
sbb
pop
out
xchg
in
js
pop
dec
mov
daa
pop
mov
pop
mov
out
call
sub
daa
bound
insl
push
mov
fidivrs
pop
mov
cmp
and
pop
add
inc
sbb
xor
movsl
inc
inc
ret
and
pop
sub
iret
inc
inc
jecxz
add
jp
dec
mov
fstpl
sub
push
sub
in
aad
das
bswap
pop
adc
add
test
repnz
daa
mov
jg
repnz
sub
dec
nop
add
out
mov
xchg
lds
and
sub
pop
jg
mov
pop
data16
loop
sarl
dec
dec
fidivs
scas
jge
sti
test
neg
out
iret
jno
push
ret
ja
xchg
outsl
js
and
jb
imul
nop
and
jmp
and
mov
push
stos
stc
mov
repnz
cli
ret
les
lahf
mov
push
lahf
rclb
jns
cwtl
and
movsb
call
or
js
insb
stos
sahf
push
bound
int
pop
sbb
scas
lret
mov
cmpsl
mov
push
std
shll
daa
daa
jmp
das
imul
mov
aas
pop
pop
cmp
and
mov
jns
iret
or
add
les
pushf
es
scas
pop
fdiv
mov
xchg
imul
cwtl
sbb
dec
fsub
and
xchg
insb
mov
mov
add
xchg
ds
fisttps
jge
mov
and
test
jno
xchg
adc
in
jae
fsubrs
cs
bnd
adc
popf
pop
or
icebp
bnd
push
xor
and
mov
cmp
cwtl
pop
jge
pop
xchg
xlat
pusha
mov
jne
or
and
sbb
push
adc
mov
push
add
fldenv
daa
xor
dec
push
out
sub
cmp
pop
adc
data16
fwait
mov
sarl
leave
xchg
int3
xor
clc
mov
iret
push
popl
out
enter
je
cmpsb
lock
push
push
ds
ds
rolb
cmp
xchg
mov
imul
push
add
int3
lret
ds
sahf
scas
sti
or
loopne
lods
push
filds
mov
inc
dec
xchg
iret
sub
pop
leave
sbb
outsl
lret
pusha
ss
arpl
push
je
addr16
inc
in
lahf
mov
pop
sti
notb
movsl
shl
pop
int3
hlt
psubusb
fmuls
lds
mov
mov
sub
into
mov
clc
cmp
push
les
test
ja
add
outsb
pop
fcompl
addr16
ret
xor
sti
adc
clc
pop
xor
push
mov
add
adc
ss
dec
jne
pusha
and
sub
xor
xchg
cltd
inc
sbb
cs
push
sbb
mov
jg
pop
faddl
fcoml
pop
int
cmp
loope
mov
mov
fldt
lret
mov
mov
outsb
test
xchg
jno
pusha
lfs
push
mov
insb
ror
sub
cmp
outsb
adc
push
dec
jle
push
lea
adc
xchg
pop
mov
xor
test
out
fistps
lods
daa
jmp
iret
les
dec
dec
mov
jae
inc
mov
fisubs
add
and
inc
cmpb
data16
cmp
push
mov
insb
call
call
adc
mov
pushf
aad
dec
bound
cmpsl
push
mov
lods
sbb
cwtl
aaa
mov
popf
mov
sti
arpl
loopne
in
sub
aaa
out
out
jns
xorb
dec
inc
dec
cmp
cmp
or
or
xchg
and
dec
mov
adc
sbb
mov
adc
inc
sub
sub
sbb
mov
xor
andb
jbe
loopne
scas
add
pop
out
out
int
or
repz
dec
xor
dec
pop
ret
sbb
xchg
popf
inc
dec
jae
testl
cli
xchg
sbb
jae
jmp
test
add
push
cwtl
inc
pop
cmc
pop
stos
xchg
bound
add
pop
xchg
fsubl
stos
add
inc
inc
mov
mov
xor
icebp
cmpsl
mov
jns
test
and
xor
ret
mov
push
inc
sbb
jmp
movsb
mov
les
xor
mov
loope
ret
pop
notb
imul
cld
push
mov
jecxz
push
ror
mov
jmp
scas
loope
int
push
jecxz
pop
add
jecxz
dec
sub
cltd
ljmp
aas
push
fldenv
jns
cmc
and
fimuls
hlt
mov
aad
adc
mov
push
sarb
shll
jbe
mov
and
mov
push
outsl
repz
mov
mov
mov
imul
sub
mov
xlat
inc
jg
jmp
xchg
or
cltd
dec
or
rcr
popa
mov
fidivl
mov
les
fsubrs
out
out
int3
inc
leave
js
incl
mov
jl
mov
les
adc
xorb
clc
push
pop
jno
jle
xor
fsubl
and
fistl
cmp
stc
repnz
shl
pop
sub
push
or
clc
jge
sub
sub
rcll
mov
incb
lods
mov
add
push
std
shrb
gs
jns
cmp
test
imul
xchg
mov
popa
inc
jbe
jns
imul
lea
mov
add
adc
int3
les
repnz
divb
aas
and
jb
imul
jns
dec
jae
add
pop
cmpb
icebp
or
hlt
cltd
dec
jnp
lds
pop
sub
pusha
inc
mov
lods
jne
pushf
xchg
ja
loope
cmp
shrl
or
mov
shl
lahf
insl
in
xchg
push
cmpsl
push
int
sub
dec
movsb
push
pop
cli
push
mov
adc
dec
pop
dec
in
add
cmpsb
xchg
xchg
xchg
xlat
mov
mov
in
xor
jo
fwait
addb
flds
int
bound
jnp
mov
aad
insl
aam
add
mov
xadd
loop
or
mov
ds
test
in
pop
mov
cltd
sbb
mov
scas
rclb
gs
adc
jb
rclb
sahf
jmp
bound
dec
push
xor
mov
test
lcall
add
bound
gs
mov
addr16
jo
add
add
insl
ror
out
xor
scas
jg
cmp
mov
les
leave
adc
jle
and
rclb
jecxz
dec
fs
sub
mov
push
enter
aaa
fisttps
nop
in
out
xor
dec
xchg
pushf
xchg
inc
repnz
arpl
divl
xor
hlt
cmp
xchg
pop
subb
sbb
push
insl
pop
jge
lea
mov
enter
sub
sbb
dec
insl
pop
jge
lea
mov
enter
sub
sbb
dec
insl
cwtl
jge
lea
mov
enter
cmp
fs
push
insl
fdivrs
lea
and
jo
aaa
adc
add
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
daa
push
aaa
aam
pop
cmp
cmp
mov
xchg
mov
cmpsl
out
lcall
out
imull
pop
ds
push
aaa
outsb
inc
jle
dec
addr16
add
cmpsl
sahf
mov
mov
aad
out
imull
push
ds
push
aas
push
das
outsb
pop
jle
dec
jg
insl
scas
xchg
ret
xchg
mov
pop
dec
ds
inc
dec
push
in
pop
xchg
mov
insl
cwtl
das
pop
mov
mov
aas
push
cltd
sbb
jnp
mov
jnp
pop
outsl
aaa
jno
les
inc
imul
cmpsl
add
stos
fwait
aas
jl
adc
push
lds
scas
xchg
xchg
fmul
popa
dec
push
bound
outsb
dec
out
mov
pop
ds
outsb
inc
push
inc
scas
adc
mov
pop
jbe
push
sti
lods
push
ficomps
aam
roll
or
xchg
dec
outsl
pop
pop
jnp
push
mov
mov
jb
clc
arpl
mov
mov
cwtl
daa
push
out
push
dec
lcall
icebp
jno
ds
push
ds
aaa
outsb
inc
jle
dec
addr16
outsb
scas
xchg
scas
out
iret
into
std
fdivp
pop
pop
jp
bound
push
sub
or
adc
call
cli
rcrb
mov
jle
push
push
pop
or
sbb
es
cld
repz
test
mov
mov
xlat
sahf
add
pop
pop
adc
insl
inc
jb,pt
je
push
dec
addr16
ja
xchg
mov
xlat
into
out
imull
pop
ds
push
daa
push
aaa
outsb
inc
jle
dec
addr16
ja
xchg
mov
xlat
into
out
imull
pop
cmp
mov
jne
cmp
stos
push
or
ss
divl
or
inc
lcall
cvtdq2ps
cmpsl
or
in
fistps
jno
adc
je
dec
xor
rolb
aaa
and
add
push
jl
mov
inc
fsubrs
jb
jecxz
negl
mov
adc
mov
imulb
xor
sbb
test
sub
std
test
sbb
dec
sub
cmp
call
push
mov
sbb
addr16
rclb
mov
fwait
mov
and
aam
aam
cltd
leave
xchg
jecxz
lods
push
dec
dec
and
mov
jne
xchg
sti
xor
mov
cs
adc
mov
adc
loopne
repz
or
das
sbb
gs
arpl
icebp
lods
mov
lds
pop
insl
mov
jne
inc
add
daa
dec
loope
test
mov
jge
mov
loope
xor
in
xchg
ja
stos
jle
jnp
cmp
pop
mov
lcall
js
xchg
jo
cmp
cmpl
into
loope
arpl
pop
add
clc
or
gs
clc
add
jge
jns
sub
dec
js
adc
in
mov
insl
sti
jns
mov
insl
lea
mov
std
dec
ja
sahf
gs
ja
or
sbb
aam
repnz
mov
jb
pop
add
mov
sub
addr16
test
cmp
andl
ss
mov
pusha
in
outsl
out
xchg
xchg
mov
out
or
cs
pop
xor
inc
cmp
jge
and
or
test
xor
add
movaps
mov
jb
dec
push
scas
push
cmp
clc
jle
sbb
ljmp
pop
out
loope
call
loop
and
mov
dec
stc
or
movsb
cmp
or
fwait
mov
push
push
enter
pop
inc
lret
flds
jo
mov
scas
lahf
fisubs
xchg
loopne
sbb
outsb
and
pop
pusha
pop
pop
aam
sub
inc
mov
push
cwtl
ret
lea
mov
add
xchg
sarb
popa
pop
sub
enter
cmp
mov
add
pop
test
push
mov
push
push
pop
mov
pop
cmp
pop
adc
sbb
xchg
cwtl
add
outsb
mov
rorb
nop
or
jmp
cmpsb
jge
mov
dec
das
xchg
push
stc
jae
es
movsb
outsl
nop
ror
jge
mov
gs
popf
out
push
sbb
and
xorb
jmp
lahf
mov
in
sbb
xor
leave
mov
add
movsl
lcall
inc
stos
cmp
xchg
adc
repnz
insb
or
inc
testb
sub
aas
jbe
adc
cmp
fistpl
js
enter
into
or
cmp
jecxz
nop
or
test
fisttpll
sbb
dec
repnz
inc
pop
les
sbb
hlt
cmp
fidivs
cs
push
sbb
divb
imul
xor
inc
fistpl
hlt
jecxz
push
mov
enter
roll
icebp
in
cmp
repnz
cmp
pop
and
lret
xlat
lahf
sarb
popa
cmp
cmp
cmp
ss
mov
and
mov
ss
das
dec
sub
inc
or
xlat
xchg
inc
ret
adc
add
les
daa
add
mov
rcrb
dec
inc
shr
pop
push
ljmp
xor
enter
xor
adc
pop
movsl
imul
push
cmc
mov
lahf
mov
jne
mov
pop
imul
mov
jmp
clc
subb
ret
test
and
inc
jo
scas
scas
mov
xchg
mov
sbb
ret
out
test
pop
sub
jmp
in
icebp
mov
movsl
leave
mov
add
mov
pop
jb
mov
xchg
push
mov
cmp
mov
shlb
push
sub
and
ret
xor
pop
mov
lret
arpl
fsub
push
mov
repz
jg
pop
fwait
stc
sarb
test
sub
sti
sahf
clc
scas
jp
mov
loop
js
xchg
jg
xchg
or
sti
into
mov
fldenv
mov
xchg
ljmp
fwait
push
add
push
adc
or
lods
flds
popf
or
nop
outsb
add
jle
fwait
in
imull
xchg
xchg
inc
std
lret
mov
insl
hlt
insb
jecxz
loopne
sbb
adc
sahf
test
dec
add
push
sbb
inc
xchg
cmp
pop
sbb
xchg
add
hlt
lret
std
icebp
xchg
dec
or
xchg
sub
fists
inc
lods
fsub
jne
or
decb
or
movsb
adc
cmp
addr16
mov
xchg
push
jecxz
or
scas
cmp
pop
dec
ds
outsl
push
jmp
test
fcoms
xchg
xchg
jae
imul
dec
rcr
inc
in
mov
mov
push
jno
jne
jmp
mov
push
push
mov
out
arpl
ret
cs
leave
aad
push
add
ds
sbb
aaa
in
mov
cwtl
or
push
in
fmuls
sbb
popf
in
pop
packssdw
cs
fwait
xor
push
dec
mov
arpl
jp
hlt
jne
xchg
sbb
jge
push
scas
call
inc
lods
inc
cwtl
test
xchg
addr16
push
sub
into
or
or
mov
cmc
icebp
push
xchg
lret
je
test
test
pusha
sbb
imul
imul
sbb
rorb
testl
ret
lock
cmpsb
leave
cli
cs
into
out
inc
movsl
jg
popa
imul
ss
outsl
scas
cmp
xchg
mov
xchg
out
ja
mov
or
lahf
clc
call
xor
cmp
push
add
popa
insb
jecxz
jmp
mov
scas
repnz
scas
int
cmc
subl
sbb
xchg
das
and
inc
pop
ss
imul
ret
xor
lret
mov
lods
and
pushf
cmp
dec
das
subb
stc
aam
mov
xchg
push
mov
loope
or
pusha
sub
cli
fadds
adc
lret
pop
inc
dec
cs
test
push
add
imul
js
add
cs
dec
jb
addb
or
push
inc
pop
cmpsb
cwtl
out
cwtl
pop
inc
movsl
and
cld
mov
stos
sbb
push
out
xchg
scas
stos
fidivs
add
push
rcrb
inc
push
pop
jmp
inc
mov
mov
jg
scas
jns
pusha
loope
and
stos
xchg
xchg
rolb
sub
insl
cmp
mov
mov
lea
cmp
cmp
arpl
stos
dec
adc
xchg
jecxz
fnsave
add
sub
ret
cmp
lds
test
dec
xchg
test
call
adc
cmp
jbe
xchg
or
imul
scas
xchg
lcall
xchg
mov
outsb
xor
mov
addr16
ds
xchg
lcall
cmp
sahf
in
fisubs
pop
imul
mov
lcall
in
jnp
test
xor
aad
leave
les
popf
and
jns
mov
xor
mov
jecxz
cmovg
nop
dec
pop
add
jl
js
in
outsl
aad
dec
jne
popa
mov
repz
ljmp
xor
adc
adc
or
mov
scas
arpl
lret
sti
and
mov
data16
push
fimull
push
pop
leave
cld
cmc
stc
sub
sub
pusha
cmp
test
insb
in
push
xor
pusha
cli
add
sti
ljmp
adc
aaa
and
les
stos
mov
in
mov
cld
sti
xchg
inc
shlb
inc
adc
adc
sbb
add
add
iret
out
les
lcall
sbb
aaa
dec
aas
fcoms
in
movsl
or
mov
and
shl
push
mov
movsb
fistpl
pop
or
scas
pop
lea
mov
imull
jl
fs
sub
js
xor
push
mov
testb
sbb
cmp
insl
out
push
addr16
into
dec
mov
push
mov
add
loopne
clc
push
nop
sbb
xor
xor
xchg
sbb
inc
sub
mov
fisttps
test
sub
out
xchg
jo
das
ret
mull
repz
sub
add
pop
int
inc
xchg
sbb
sub
dec
dec
out
int3
out
pop
pop
inc
arpl
and
push
adc
stc
dec
dec
sub
pop
les
rorl
add
mov
push
rcrb
arpl
popf
data16
mov
test
cmp
mov
in
push
outsb
sub
push
pop
jns
fnstcw
lret
shlb
add
leave
push
ret
mov
xor
xchg
jns
adc
cld
repnz
adc
dec
std
ljmp
icebp
test
lahf
inc
mov
clc
jb
fisttps
scas
cmp
push
and
mov
xchg
movsl
dec
dec
add
out
lcall
cmp
fists
cmc
mov
bnd
jp
xchg
add
inc
sbb
js
or
js
adc
inc
movsl
pop
jg
jno
dec
repnz
jmp
call
scas
add
lret
cmpsb
jle
inc
lcall
push
add
pop
jl
push
xor
sbb
sub
jmp
ja
mov
int3
scas
addl
mov
ljmp
icebp
pushf
fstpl
aas
bound
sahf
inc
outsb
test
sub
cli
js
mov
pop
push
pop
xchg
loop
push
jno
jg
lret
push
std
push
adcl
ja
adc
push
mov
and
sub
ss
js
out
push
arpl
adc
jbe
test
xchg
arpl
adc
jl
pop
mov
xor
das
int3
push
sar
int
push
movsl
stc
lahf
and
push
scas
xchg
sti
xor
roll
stc
push
lods
mov
push
repnz
jmp
into
jl
cmp
pop
add
cli
fld
fs
es
mov
dec
cld
jo
mov
sahf
cmp
jae
sbb
mov
xchg
adc
hlt
mov
test
movsb
inc
mov
adc
out
repnz
stos
cmp
imul
les
fprem1
xor
ds
mov
mov
inc
pop
sbb
in
loopne
mov
inc
hlt
add
aam
push
test
fs
mov
ds
xchg
fcmovnb
aam
or
jno
data16
mov
dec
fcoms
push
xchg
push
dec
xor
xchg
adc
test
shll
int3
push
fs
mov
subl
xor
stos
and
dec
dec
or
lock
dec
scas
cmp
cmp
jns
and
aaa
xchg
dec
xchg
xlat
ficoms
adc
out
mov
int3
js
hlt
ljmp
xchg
push
notb
lcall
jno
rcrl
in
mov
jg
mov
and
hlt
lods
adc
mov
popa
mov
lcall
fwait
and
xor
aas
inc
scas
push
jmp
lret
xor
in
mov
in
mov
inc
out
lods
push
dec
int3
xor
mov
adc
dec
aaa
xchg
xor
scas
jne
fists
test
mov
nop
dec
fisttps
out
sub
test
cmp
dec
dec
xchg
movsb
add
pop
cmp
xor
fmul
pop
cmp
stos
cmp
adcl
test
ret
mov
test
orb
pop
shlb
xchg
xor
rcll
cmc
sub
lods
cld
xchg
fldcw
divb
mov
mov
into
ljmp
cld
data16
fsubrs
or
dec
cmpsl
in
lahf
dec
data16
sahf
push
inc
in
lods
cmp
sub
dec
and
mov
and
sub
or
cmp
dec
sub
sbb
sub
dec
xchg
xchg
ljmp
test
pushf
outsl
or
je
clc
scas
pop
in
fmull
adc
jae
lahf
pop
loop
xor
mov
in
sti
fsincos
outsb
add
scas
pop
psubw
mov
cli
loop
mov
fdivrs
sarb
cmp
inc
sti
cmpsl
gs
jmp
lret
mov
adc
bound
and
aad
wbinvd
push
add
xor
repz
fistps
or
dec
xchg
dec
je
insl
jmp
mov
fstps
or
loop
lret
fmul
and
xchg
adcl
aad
mov
mov
xor
or
push
adc
jbe
xor
inc
mov
xchg
outsl
jb
jge
inc
es
dec
xor
stos
xlat
mov
sub
daa
jle
sbb
add
cs
adc
add
and
out
shl
in
sbb
jg
pop
mov
shll
fwait
adc
push
push
or
xor
nop
shrb
pop
jle
mov
popa
test
pop
pop
jmp
test
pusha
mov
lods
mov
add
mov
adc
out
inc
mov
imul
xchg
dec
out
lock
mov
aam
push
lret
lcall
cli
shr
or
cmpsb
ss
lods
mov
pop
cmp
adc
xchg
stos
mov
repz
push
mov
sub
jne
xor
sub
jae
hlt
dec
lahf
mov
insb
add
xchg
mov
ss
cmpsl
testb
fstpl
xchg
inc
pusha
aas
jg
stc
ss
and
jl
sub
mov
bound
xor
inc
mov
sahf
ja
std
in
cs
inc
push
cmp
popa
loop
fsts
pushf
sub
in
lahf
mov
out
and
and
mov
jnp
sub
cmp
push
jb
je
push
push
lds
add
cmp
and
dec
dec
je
leave
mov
out
xchg
fdivs
inc
cmc
shl
mov
inc
adc
repz
loopne
addr16
fisttps
out
mov
xor
mov
mov
stos
cltd
cltd
sti
jmp
adc
loope
inc
daa
enter
cli
negl
sbb
das
out
pusha
dec
jae
stos
ja
cmpsb
xlat
rorb
dec
cmc
jo
popa
fstps
repnz
es
xchg
outsb
in
or
leave
or
sub
add
mov
test
lcall
sub
lret
sbb
xchg
mov
lods
adc
movsb
adc
fnstcw
sub
xor
rclb
addr16
fmuls
lea
in
cs
or
je
fisttps
mov
xor
imul
or
sbb
mov
sub
inc
cwtl
xchg
cli
mov
adc
ret
lds
addr16
and
push
jl
dec
push
out
cmp
icebp
cmpsb
leave
mov
imul
leave
jl
popf
insl
movaps
jge
out
pop
or
nop
ret
scas
sub
andl
in
adc
add
push
imul
movsl
outsl
pop
adc
insb
js
sbb
xchg
inc
mov
adcb
pop
pop
and
jb
push
pop
cmp
lret
bound
mov
in
aas
hlt
imul
aam
add
push
pushf
cmp
std
xor
test
insl
xchg
pop
sbbw
cmp
insl
xorl
pop
enter
or
popf
cld
call
adc
negl
push
arpl
cmc
xchg
xchg
lock
cmp
pop
xchg
adc
mov
lcall
insl
mov
add
jb
push
mov
pop
jo
push
mov
ret
inc
pop
icebp
cs
or
sub
mov
xchg
pop
pop
ror
xchg
sahf
lret
xor
pop
jno
sti
cmp
and
ljmp
test
test
pop
ret
leave
dec
pusha
mov
cmpsl
push
sbb
pop
sub
sbb
push
or
mov
out
mov
lret
dec
orl
push
iret
sti
imul
ja
fldenv
inc
lock
sub
cs
test
je
cmp
lds
mov
xor
ja
xchg
ljmp
insl
or
xchg
inc
jmp
push
enter
add
mov
jns
jae
ljmp
fists
inc
mov
bound
pop
cs
xchg
out
sub
or
in
dec
es
mov
je
adc
pop
adc
movsl
jno
repnz
pop
arpl
xor
sbb
add
push
add
mov
sbb
push
sbb
xchg
mov
aaa
mov
adc
fdivrs
cmp
xchg
jmp
fcmovnu
dec
scas
enter
push
hlt
cmp
pop
dec
dec
outsb
push
popa
jp
stos
jne
movsb
xlat
in
mov
pop
test
jp
mov
icebp
bound
insb
pop
dec
mov
shlb
xchg
rcr
pop
xchg
xor
cmp
loop
imul
std
rclb
dec
addr16
xchg
xor
popa
mov
lds
int3
cwtl
mov
es
jnp
lcall
push
movsl
lods
jmp
pop
mov
push
inc
popa
out
out
jmp
mov
pop
cmp
inc
insl
push
push
pop
jle
je
pop
in
in
sub
dec
int3
xlat
dec
test
sub
add
xor
shlb
cmp
add
lret
xchg
movsl
pop
jb
adcl
xchg
jg
inc
and
jo
sahf
adc
pop
xchg
fsubrl
jp
add
jmp
aaa
popa
inc
pop
orl
hlt
jg
xor
pop
aas
lock
repnz
and
add
lods
negb
lcall
fisttpll
into
lahf
stos
mov
mov
jo
or
cmp
dec
push
pop
fidivrs
xor
cli
fisubl
or
out
dec
out
or
imul
push
xlat
data16
dec
push
add
lea
jecxz
ffreep
insl
sti
inc
incb
cmc
stc
es
pop
test
cmove
cs
iret
and
pushf
loope
andb
add
pop
bound
outsb
incl
fiadds
inc
outsb
mov
ds
dec
xlat
lcall
sbb
mov
les
and
insb
pop
addr16
inc
stos
negb
pop
daa
pop
lock
pop
shlb
cmpsl
fsubl
inc
in
std
fldenv
xchg
stc
je
dec
add
daa
xchg
xor
aaa
ljmp
xor
jg
into
xchg
fs
add
xchg
adc
into
shll
mov
sub
push
mov
cmp
fwait
js
cmp
jno
aas
stos
test
sub
dec
jge
loopne
mov
bnd
sbb
add
cltd
imul
xchg
pop
scas
mov
mov
mov
js
pusha
or
aaa
leave
insl
scas
mov
fdiv
mov
ds
and
lods
xor
dec
jo
cli
push
lahf
add
jae
sbb
out
xor
pop
xor
lods
nop
mov
cltd
jae
and
inc
popa
jmp
insb
inc
mov
mov
dec
xor
shrb
test
sbbl
rcll
xchg
sbb
insb
gs
dec
cmc
insb
cmp
push
xchg
mov
aad
jl
movsb
mov
cmp
push
and
jle
mov
andl
xchg
arpl
lock
lds
inc
pop
jge
cmp
mov
lahf
push
adc
mov
aam
in
sbb
in
mull
pushf
mov
cmp
cmp
movsb
js
lock
push
and
fsubrl
lds
scas
pop
mov
cmpsb
lds
lods
js
adc
push
jp
xor
std
jecxz
fs
pop
repz
and
mov
mov
jae
mov
pop
pop
fmuls
outsl
pop
sub
mov
jmp
xchg
inc
inc
xchg
sti
xchg
xor
pop
or
xor
aam
in
pop
sahf
inc
leave
lahf
fcmovne
iret
xor
aas
sbb
dec
pop
dec
fistpll
inc
orl
push
int3
sub
xor
jb
adc
insb
xchg
jno
ret
das
lea
xchg
shll
and
pop
sarl
inc
xor
loope
cmp
lods
cmp
cmp
sbb
out
jae
imul
insl
pop
cmpsl
shlb
xchg
popf
daa
push
aaa
outsb
inc
jle
dec
addr16
ja
xchg
mov
xlat
into
out
imull
pop
ds
push
daa
push
aaa
outsb
inc
jle
dec
addr16
ja
xchg
mov
xlat
into
out
imull
pop
ds
push
daa
push
aaa
outsb
inc
jle
dec
addr16
ja
xchg
mov
xlat
into
jecxz
repz
add
adc
and
aaa
outsb
inc
jle
dec
addr16
mov
xchg
rcrb
and
xor
and
add
cs
mov
nop
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
xchg
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
outsl
scas
inc
fmull
sarb
orb
xchg
push
loopne
adc
int3
in
cmpsb
adcl
popf
aad
mov
idivl
xlat
daa
sbb
jnp
sub
sbb
and
pushf
test
mov
repz
mov
dec
push
lock
sbb
add
orb
lret
sbb
push
cltd
jle
mov
pusha
ss
repz
clts
loope
out
testb
xor
xor
push
cmpsl
push
imul
mov
nop
popf
push
push
shll
fisttpll
mov
ss
mov
xchg
into
sbb
test
icebp
push
mov
xchg
push
clc
xchg
xor
push
dec
fwait
movsb
inc
gs
jmp
sub
xor
in
loopne
adc
add
xor
and
jo
pusha
outsl
nop
jle
dec
mov
mov
or
push
cmpsb
lcall
lds
rolb
adc
or
and
mov
imul
xor
outsb
xchg
pop
aad
xor
out
int3
ss
bound
mov
cmp
inc
xchg
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
adc
ficoml
inc
push
push
mov
inc
mov
jb
pop
add
popa
outsb
pop
ljmp
icebp
push
cmc
ret
sub
imul
jnp
mov
scas
jge
and
or
sbb
cmp
test
fstl
adc
xor
repnz
mov
and
and
push
call
xlat
aaa
jno
cli
hlt
out
fnclex
sub
mov
dec
xchg
or
gs
imul
lods
dec
rcrl
jo
into
rcrb
aaa
xor
nop
mov
rolb
jns
mov
sbb
push
sub
mov
pop
repnz
insb
pop
shlb
jns
lcall
and
in
push
jp
jge
mov
sub
loopne
xchg
outsl
mov
dec
push
and
int3
push
int
cltd
loope
pusha
das
xchg
pop
jp
mov
fs
repnz
jbe
pushf
clc
test
mov
mov
fwait
sub
add
popa
data16
das
add
orb
sub
dec
or
outsb
movsb
lcall
or
dec
jns
in
inc
xor
jecxz
fcom
or
addb
mov
push
mov
push
addr16
stos
jno
mov
xchg
push
aaa
icebp
pop
sbb
ljmp
add
je
test
pusha
jns
pop
cs
inc
mov
and
xchg
mov
or
jge
push
ja
fucom
insl
insl
inc
dec
je
insb
popf
sti
dec
fisubrl
nop
in
push
mov
ret
enter
out
sarb
fidivrl
or
out
into
lret
nop
repnz
inc
lods
std
in
jbe
std
hlt
sbb
scas
cmpsl
adc
mov
mov
sbb
dec
dec
pop
ret
insb
out
sub
and
xor
xor
add
adc
mov
pushf
xchg
inc
or
js
cmpsl
cmp
mov
movsb
ljmp
sbbb
lock
adc
adc
out
mov
xor
mov
icebp
out
lcall
xchg
test
push
mov
jecxz
ret
mov
jecxz
roll
sub
enter
adc
movsb
cmp
enter
dec
orb
push
outsl
adc
sbb
dec
das
pop
mov
add
push
jae
ja
or
xchg
jecxz
add
xchg
push
stos
and
mov
cmp
test
cmp
in
mov
mov
cmpsl
push
stos
sbbb
jmp
cmp
push
sbb
mov
in
mov
xchg
aad
jno
aam
aas
adc
aam
cmp
bound
sbb
or
jno
jmp
mov
dec
shll
ja
mov
cmp
pusha
test
push
ret
sub
cmpsl
add
cltd
dec
push
divl
mov
xchg
or
out
mov
mov
insb
ret
push
out
add
mov
aad
les
xchg
jo
rcrb
insl
jo
std
push
repz
cmp
inc
test
insl
mov
xchg
sbb
out
movsl
mov
pop
icebp
mov
cs
negb
cmp
jle
mov
push
hlt
loope
aad
xor
sub
shll
outsl
fdivs
mov
xor
sub
pop
in
jl
scas
sbb
notb
xor
cmp
pop
add
lods
or
flds
inc
add
mov
push
jns
push
xlat
iret
inc
mov
push
push
dec
notl
pop
inc
sahf
hlt
push
dec
jo
ja
mov
hlt
push
mov
mov
bound
add
sub
or
test
pop
pushf
je
movsl
xchg
dec
mov
adc
jecxz
mov
mov
mov
sub
and
leave
xchg
enter
jmp
inc
push
dec
xchg
daa
pop
jbe
jecxz
xor
mov
push
push
aam
mov
mov
cmp
popa
lret
pop
test
inc
insl
dec
stos
sub
loopne
xchg
jno
cmp
sbb
xor
das
daa
jp
das
and
test
fwait
into
aaa
sbb
mov
xor
push
out
out
jb
loopne
mov
push
rorb
push
push
mov
ss
int
sbb
inc
push
xchg
push
cwtl
in
insb
cmpsb
out
idiv
mov
rcll
jns
push
xor
mov
pop
inc
lods
pop
add
jle
movsl
push
test
cmp
ja
daa
and
sarl
xlat
mov
and
aaa
int3
fisttpll
dec
add
stos
ficoms
ret
jecxz
jecxz
dec
hlt
stc
mov
arpl
leave
mov
jge
jb
cmpsl
orl
setno
push
sub
mov
jbe
loopne
or
jns
cli
xlat
ret
jo
xor
xchg
pop
xchg
je
add
mov
xchg
leave
xchg
cltd
or
das
pushf
dec
and
push
std
push
or
jne
test
xor
mov
jnp
repnz
js
pop
mov
pusha
shl
scas
mov
mov
ljmp
dec
xchg
into
and
pop
pusha
aaa
js
adc
inc
inc
mov
popa
iret
cltd
ss
push
mov
js
jge
mov
stos
gs
cmp
mov
mov
mov
or
data16
cmp
sbb
inc
pop
xor
fistpll
lretw
mov
sbb
push
call
push
gs
addr16
btr
insb
test
jb
mov
lret
add
push
cmp
in
inc
mov
out
lahf
push
dec
mov
pop
jnp
adc
mov
pushf
xor
mov
jno
fwait
cmpl
int
loope
mov
dec
jnp
popf
pop
xchg
mov
mov
jnp
out
and
add
cli
sub
out
mov
mov
lods
add
cmp
mov
cwtl
cmpsb
and
out
inc
aad
minps
push
or
push
cmp
push
xchg
or
iret
into
loopne
es
ret
xchg
test
lods
inc
mov
push
pop
outsb
test
adc
or
mov
pop
je
sub
ds
mov
sbb
or
movsl
inc
int3
lret
mov
imul
and
fmull
cs
xor
scas
cmpsb
jb
xchg
repz
sbb
sub
shll
mov
fbstp
adc
movsl
stos
or
sbb
daa
mov
jns
cltd
dec
ret
stos
pop
push
push
int3
and
repnz
out
popl
test
jg
lods
xlat
jns
mov
cs
jb
xchg
outsb
enter
sub
das
popa
leave
mov
jge
inc
into
test
stos
movsb
jmp
inc
and
push
adc
jo
pop
dec
in
jmp
inc
test
dec
xchg
xchg
sbb
aaa
aaa
add
ret
sarl
pop
dec
push
jg
std
std
ljmp
mov
dec
outsl
dec
dec
ror
cmp
out
jae
lret
btr
pop
jno
jmp
xchg
nop
int
arpl
cs
dec
ss
push
shll
pop
mov
push
clc
loop
test
mov
sbb
jo
mov
es
divb
popl
movlps
cmpsl
aad
mov
jne
fxch
sub
incb
test
scas
jmp
cwtl
dec
aaa
ret
ljmp
pop
fstpt
psubd
test
repz
lock
push
orb
adc
inc
lret
mov
fcoms
and
sbb
sub
insb
nop
jbe
pop
repnz
adc
xor
cmp
xlat
inc
imul
mov
mov
fcoml
adc
clc
scas
add
sub
mov
lret
inc
aas
mov
jmp
xor
push
xchg
cmp
leave
push
sbb
cmp
push
sbb
enter
xlat
pop
adc
call
mov
test
dec
fidivrs
nop
pop
adc
es
and
ficoms
and
jge
lea
or
mov
xchg
inc
leave
xchg
mov
fmuls
lahf
mov
or
cmp
popa
cmp
jl
bound
jnp
idivl
jle
adc
or
mov
pop
cld
movsl
push
sub
cmp
cmc
rorl
cltd
dec
mov
daa
sbb
rol
es
cwtl
xor
adc
lret
addl
pop
subb
mov
fwait
das
mov
je
popa
loopne
scas
outsb
inc
jbe
mov
mov
adc
rcrl
das
push
inc
dec
aam
lret
ret
arpl
ja
adc
mov
jae
cmc
mov
mov
dec
aas
sbb
insb
mov
push
mov
ret
cmp
clc
mov
cmpsb
loope
mov
sub
adc
lods
rcl
adc
sahf
scas
movsb
cltd
bound
xor
stos
pop
mov
jae
jle
popa
pop
pop
jb
std
sbb
js
jmp
jecxz
loopne
pop
inc
cld
roll
cmp
mov
test
dec
jo
nop
fistpl
stc
xchg
xor
sub
push
aam
mov
sbb
in
aam
in
mov
adc
popf
sbb
and
das
pop
jmp
ret
jg
aam
jb
aaa
xlat
imul
ret
and
cmp
popf
shrb
jl
inc
sub
push
push
inc
mov
and
sar
shll
out
sbb
cmpsb
mov
mov
int3
or
adc
jbe
push
mov
sbb
repz
fldcw
mov
push
mov
insb
or
sub
inc
lea
sub
lea
adc
rolb
mov
pop
or
leave
lock
push
sarb
add
xchg
xchg
cwtl
mov
enter
xchg
adc
bound
frstor
xor
xchg
ret
mov
xor
jae
pusha
xchg
xor
jg
mov
pushf
shll
sbb
xor
xchg
add
pusha
dec
xchg
loope
lock
imul
lods
aam
push
mov
daa
aad
popa
add
xchg
ds
repz
in
jbe
cmp
inc
imul
cmpsb
jecxz
jge
sar
cmp
mov
lea
les
push
dec
adc
mov
sub
dec
add
jecxz
dec
and
jp
aad
sbb
ss
mov
data16
scas
xchg
test
xchg
mov
pop
add
les
mov
adc
insb
arpl
das
ficoml
mov
sahf
fimuls
jge
sbb
or
or
xlat
jmp
test
inc
push
data16
push
mov
jecxz
out
pop
inc
out
mov
inc
mov
xor
push
mov
jno
shrb
or
pop
mov
dec
lret
fsubl
dec
dec
xlat
mov
adc
jne
imul
test
cmpsl
push
enter
das
loopne
cli
nop
ret
insl
js
sbb
or
xchg
mov
ljmp
out
inc
jp
xor
xchg
jp
add
add
idiv
add
mov
out
stos
insl
pop
xchg
mov
daa
lock
lea
push
jge
shlb
aad
repz
int3
mov
adcb
rcl
sbb
push
fsubl
divl
repz
test
jle
cmp
dec
lock
popf
jo
mov
pop
dec
shrb
in
sbb
push
cmc
sbb
jmp
clc
push
stos
orl
enter
rcrl
jb
shr
pusha
mov
mov
test
ret
ja
repz
add
pop
and
xchg
pop
xchg
pop
mov
pop
ficompl
std
push
mov
adc
div
pushf
das
stos
xlat
or
daa
push
push
jmp
sub
inc
and
xor
mov
sub
rorb
shrb
aas
xchg
and
test
xor
mov
nop
int3
cmp
inc
outsl
shlb
fwait
mov
xchg
mov
addb
aam
fs
shlb
shll
iret
popa
jp
cld
and
out
mov
jmp
js
add
push
aaa
f2xm1
add
xchg
fnstcw
inc
mov
cmc
js
pop
scas
jg
sub
pop
lea
jnp
test
add
pusha
sub
cmpsl
lahf
add
fucom
out
out
pop
ss
jmp
pop
mov
filds
es
jne
rolb
ja
imul
repz
inc
dec
cli
sbb
stos
out
mov
gs
push
cmp
cmpsl
xchg
xchg
pop
lock
js
push
test
add
jne
cmc
jp
cmpsb
in
int3
notb
and
icebp
cmp
sbb
gs
inc
test
or
sbb
cmp
cmpsb
xor
add
push
in
sbb
dec
scas
icebp
pop
xchg
fimull
jns
imul
hlt
into
xor
in
fnstsw
rol
out
pop
cmp
jo
enter
sbb
mov
mov
cmpsl
fisttpl
sbb
mov
adc
dec
xchg
pop
mov
fdivrl
and
cmp
mov
jmp
insb
sub
xchg
faddl
jecxz
out
add
scas
test
cmp
outsb
lret
outsl
inc
and
xor
and
jg
cmp
xchg
mov
cmp
sub
jmp
xorl
xor
cwtl
sub
popl
push
sti
mov
xchg
adc
and
das
sahf
loopne
int3
or
leave
mov
jecxz
sbb
mov
negl
mov
loop
lret
xor
mov
inc
xor
dec
enter
mov
add
shl
sbb
inc
or
mov
aas
inc
aas
push
jb
fisubrs
xlat
sub
jnp
jb
mov
jnp
test
test
out
xchg
mov
movhlps
jle
mov
mov
add
mov
mov
lret
imul
scas
push
xchg
lock
xor
jae
fdivrp
mov
xchg
mov
rolb
out
movsl
pushf
stos
enter
fs
loope
mov
or
lcall
cmpsb
fnstsw
mov
pop
rcr
aaa
cltd
sahf
inc
push
and
adc
aaa
daa
aad
adc
popa
shr
jnp
adc
inc
cmp
mov
cmp
pop
or
cld
rep
mov
ss
add
std
inc
iret
fldenv
add
sub
push
mov
pop
stc
cmp
scas
and
adc
xchg
jecxz
jnp
jecxz
mov
sbb
outsb
jo
insb
repnz
outsb
pop
mov
mov
call
push
das
in
pop
push
sub
mov
sbb
icebp
pop
mov
sbb
add
xchg
repnz
xchg
icebp
int
fisubrs
push
int
sub
sbb
nop
mov
fisttpll
sbb
push
jnp
scas
js
inc
pusha
adc
xor
jp
add
call
xlat
mov
or
xorb
adc
cmp
push
xor
ficoml
add
xchg
iretw
pop
push
fmuls
rorb
hlt
push
push
jb
cli
filds
or
jl
xor
in
push
xchg
mov
fcoml
mov
pop
outsb
push
adc
xchg
ja
addr16
iret
sub
fnsave
mov
int
leave
fidivl
std
ficompl
push
pop
addb
pop
outsb
imulb
sbb
xchg
lret
out
in
fidivl
push
push
cmc
mov
ret
shrl
sarb
xadd
dec
ret
mov
lret
aaa
inc
pop
jge
jae
pop
push
or
arpl
push
cmp
mov
pop
jg
cmpsl
jmp
dec
pop
mov
inc
inc
in
sub
mov
loopne
daa
cmc
sbb
add
push
xorl
loope
clc
mov
pop
sub
jo
outsl
push
or
scas
inc
data16
pop
je
adc
add
add
pop
and
mov
ficomps
jmp
stc
add
pop
lock
sbb
and
jbe
lea
aad
notb
es
fdiv
mov
mov
imul
dec
xor
addr16
mov
outsb
adc
sub
adc
jnp
fnstenv
ss
mov
js
int3
pushl
mov
cmp
out
aas
cwtl
push
filds
xchg
scas
pop
in
push
and
testb
lods
cs
pop
std
icebp
lods
aas
imulb
test
in
inc
ja
xchg
pop
push
or
sbbb
fidivrl
cmp
cmp
mov
jae
sti
sub
mov
dec
popf
imul
rcrl
outsb
sub
mov
xor
pushf
icebp
testb
xchg
cmp
push
mov
leave
icebp
loop
mov
test
inc
nop
and
test
cmp
mov
xlat
push
lea
fdivrl
cltd
or
mov
jne
sarl
hlt
or
popa
je
or
sbb
push
pushf
push
sub
mov
jle
call
push
out
hlt
sbb
inc
or
lcall
negb
pop
add
cld
mov
aaa
cltd
ja
push
jae
mov
lret
jnp
clc
sub
or
pop
stos
rcrl
lock
push
push
dec
outsb
xor
push
xchg
pop
sub
hlt
ja
xchg
icebp
scas
ret
into
lods
mov
popa
mov
adc
shlb
adc
pop
cmp
inc
mov
test
incl
pushf
xor
add
je
mov
test
xchg
test
and
rcrb
push
inc
roll
inc
nopl
adc
sahf
or
cmp
out
push
out
lahf
and
jbe
lds
mov
jbe
shl
imul
lods
roll
fnsave
fsubl
lret
jmp
scas
push
sub
out
rol
adc
jle
cmp
inc
mov
test
orb
or
push
loop
stc
jae
imul
into
cld
aaa
jae
jl
lods
or
inc
rorb
push
xor
or
decl
insb
mov
xchg
test
or
inc
xor
pop
das
ret
imul
sti
pop
inc
stos
das
je
js
jb
test
jno
test
lds
fdivl
sub
sbb
ljmp
mov
test
xor
and
pop
push
and
pop
fwait
xor
repz
adc
stc
add
dec
lods
or
inc
push
call
aaa
xchg
out
sbb
cmp
add
mov
repz
call
sbb
pop
mov
std
je
xchg
sar
and
xchg
mov
push
mov
cmp
inc
lods
mov
cwtl
push
xor
pusha
xchg
mull
test
push
in
adc
je
outsb
jecxz
ret
rol
cmpsb
pop
sbb
stc
jmp
add
iret
es
daa
push
xchg
sub
sbb
xchg
stc
dec
je
stos
int3
ret
cmp
adc
or
or
inc
movsl
or
xlat
fisubrl
testl
add
xlat
mov
push
adc
call
repz
sub
je
push
and
gs
mov
inc
imul
rclb
icebp
dec
xchg
push
mov
out
test
cmp
dec
jp
mov
jg
gs
jbe
ret
in
cmpsl
fs
addl
orl
testl
push
stos
or
jbe
adc
sbb
push
clc
std
divl
psrad
mov
cmp
enter
xor
stos
aad
enter
repnz
jg
mov
rolb
pop
lahf
std
jb
aad
cld
push
mov
pop
push
into
xchg
push
scas
cli
arpl
mov
xchg
cltd
pop
nop
shrb
test
jp
adc
sarl
filds
aaa
stos
cmp
fiaddl
js
subl
insb
sbb
inc
push
std
cmp
cmp
jecxz
xor
std
hlt
dec
cmpsl
mov
push
and
imul
call
dec
sbb
fwait
mov
adc
or
lahf
imul
jno
lcall
clc
rolb
jg
shlb
icebp
jns
xchg
mov
mov
push
mov
clc
sub
fadd
loopne
ss
rorl
arpl
cmpl
xchg
stos
mov
mov
ret
clc
sub
aad
test
jnp
in
xchg
aaa
and
cmp
pop
jb
cmp
lock
mov
inc
sub
jno
cmp
add
arpl
xchg
movsl
arpl
add
imul
jnp
add
orb
scas
sbb
pop
push
in
inc
fistl
cwtl
js
outsl
leave
or
jne
push
fxch
add
in
push
adc
adc
cmp
push
lods
push
lcall
movsb
cltd
jl
fdivl
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jo
pusha
jbe
data16
mov
push
lock
loopne
adc
add
xor
and
jno
pusha
jbe
adcw
shll
rclb
add
notb
in
xlat
xor
and
push
cmpsb
rclb
push
lahf
mov
sub
mov
xlat
inc
pop
scas
aas
jmp
aam
cmp
xor
dec
dec
xor
xchg
mov
jmp
sti
in
hlt
fildl
adc
and
xor
inc
imul
je
test
mov
les
hlt
fildl
adc
and
xor
inc
jb
arpl
inc
test
adc
stos
cmpsl
xchg
cmpsl
popf
popf
jne
and
pop
nop
dec
test
mov
dec
and
int
add
or
mov
call
or
inc
loopne
test
sub
push
pop
fwait
dec
fwait
xchg
outsb
aam
mov
movsl
xchg
sti
aam
mov
adc
sub
mov
xor
vmaxsd
addr16
xor
out
xor
sub
stos
mov
je
sbb
dec
fs
mov
jg
push
adc
sti
mov
sbb
pop
test
pushf
mov
xchg
adcl
hlt
and
and
fistpl
or
shrb
fistps
ret
stos
shrl
and
test
sub
and
xor
inc
imul
je
test
mov
repz
in
hlt
mov
bound
jb
and
lock
ret
xlat
fdivp
hlt
inc
xchg
mov
push
pusha
cmp
jne
and
pop
dec
and
xor
not
repz
pushl
lea
adc
bound
outsb
add
push
jnp
dec
je
test
mov
jmp
sti
in
hlt
fildl
adc
and
xor
inc
imul
je
test
mov
jmp
sti
in
hlt
fildl
jne
mov
push
cmpsb
push
xor
jmp
aaa
cmp
fsts
fsub
inc
and
xchg
shrb
push
sub
mov
outsb
mov
xchg
or
add
adc
outsb
pop
push
or
jle
mov
mov
std
dec
add
repz
add
or
push
ja
xor
movsb
in
popf
inc
or
mov
mov
daa
add
cmp
stos
jbe
xor
dec
mov
mov
cmp
jne
fwait
or
push
pop
xchg
inc
push
test
fbstp
or
fldln2
mov
test
jne
in
fcmovbe
inc
divl
loop
jne
addr16
out
sarl
sbb
cmp
add
mov
jle
faddp
lret
mov
lea
push
loope
pop
sub
push
icebp
mov
or
aas
mov
adc
xlat
pop
push
adc
stc
test
out
das
fucomi
lret
or
jnp
lret
ficoml
push
dec
sub
pop
and
pop
in
sbb
jb
movl
shlb
jno
repz
outsl
mov
jg
cmp
or
out
ror
mov
test
mov
insl
call
inc
paddsw
lods
bound
cs
pop
pop
inc
push
leave
adc
push
xorl
fisubs
cmp
ds
sub
mov
mov
mov
mov
mov
mov
ljmp
stos
push
cli
jge
add
jne
xchg
lods
fst
mov
sbb
sbb
rorl
mov
pop
mov
xchg
push
pop
jbe
xor
mov
push
pop
enter
lods
fwait
es
push
jmp
shlb
xchg
cmpsl
add
clc
aam
pop
cmpsl
pop
lea
insl
cmp
enter
cmp
jne
and
jle
lretw
xor
cmpsl
mov
jns
jl
dec
add
pop
mov
push
jno
dec
and
xor
rorb
scas
cmc
mov
icebp
lods
pop
rorb
jg
lcall
jle
or
add
out
loop
movsl
mov
jp
icebp
shlb
outsb
aas
aaa
out
or
mov
adc
cwtl
add
or
fldcw
sbb
lcall
adc
insb
lahf
pop
mov
sub
cmp
add
jg
aaa
imulb
cmpsb
push
or
inc
shlb
cmpsb
mov
dec
orl
inc
repz
aam
xorl
push
mov
cli
xchg
ret
dec
shll
and
jge
inc
repnz
pop
jl
push
mov
lods
ds
and
and
dec
pushf
mov
sub
ret
addr16
leave
movsb
xchg
cwtl
or
mov
inc
or
and
pop
sub
enter
jbe
out
pop
fldl
test
js
jne
mov
fisubrl
ss
add
mov
fistpll
in
nop
jo
scas
mov
sbb
int
out
stos
aad
in
jp
xorl
pop
das
or
mov
inc
mov
in
jo
jbe
and
add
dec
mov
in
setbe
or
jo
or
sub
push
inc
stos
aas
popl
das
cmp
insb
xchg
dec
add
mov
outsb
stc
call
test
add
push
sbbb
add
mulb
mov
inc
cmp
in
push
cs
push
pop
jae
mov
lock
loope
clc
inc
cmp
xchg
addr16
xchg
inc
stos
sahf
in
lods
cltd
dec
enter
and
push
ret
aaa
sbb
pop
mov
ljmp
cs
dec
aaa
cmpsl
out
jno
mov
push
nop
sub
loop
add
outsl
inc
stc
pop
mov
ud0
int
jge
jecxz
and
in
cld
std
fsubr
cmc
dec
pop
je
movsl
ss
gs
arpl
sti
xor
dec
sub
cwtl
test
jl
outsl
js
into
inc
ror
insb
xchg
xchg
push
xchg
loop
iret
repnz
aad
es
lret
push
xchg
dec
lds
cmp
imul
idivl
call
insl
push
jnp
pusha
sarl
xlat
jbe
mov
aad
push
ret
lea
arpl
adc
push
sbb
into
xchg
das
and
cmpsl
std
lret
sub
inc
mov
cltd
sub
fdivs
leave
cmpsb
les
push
dec
ds
pop
rcll
imul
mov
lcall
add
loopne
mulb
data16
mov
sub
pop
mov
inc
cmp
pop
std
mov
loope
push
cwtl
movsl
fcomip
fsts
out
addr16
dec
sbbb
pop
sub
push
xchg
inc
pop
xor
lock
and
sbb
inc
mov
es
movsb
icebp
sub
sti
or
test
fcomi
cmc
dec
push
mov
movsb
push
mov
dec
in
rcr
push
pop
or
leave
lock
dec
xor
imul
mov
das
jae
cmp
repnz
xlat
psrlq
pop
push
mov
std
mov
and
inc
jl
pushf
in
jb
xchg
les
sub
dec
outsb
xchg
sti
mov
rorb
xchg
mov
jge
lock
mov
cmp
jl
add
xchg
insl
scas
test
lret
das
sahf
in
aad
inc
cmp
push
dec
insl
push
scas
pop
div
mov
out
js
orl
push
test
pop
xchg
lcall
nop
inc
ficoms
cmc
cmc
mov
cmpsl
xchg
divl
mov
rolb
movsl
fs
sub
sub
mov
pop
jae
push
scas
or
cmc
push
stos
ds
sub
stc
and
cmp
pop
add
testb
jecxz
jno
test
fmulp
pop
js
lds
and
xor
and
int3
push
dec
jb
cwtl
jecxz
loope
adc
adc
pop
mov
test
and
adc
std
dec
jbe
cli
rcrb
cld
jg
xchg
mov
orb
pop
jl
mov
cmp
adc
ljmp
movsl
push
xchg
xchg
mov
ret
pop
lcall
or
xchg
lret
mov
les
int3
out
xchg
in
inc
jnp
mov
jg
and
sbb
or
cmc
sbb
mov
into
shlb
pop
sub
mov
mov
mov
xchg
adc
aas
out
filds
fldenv
add
icebp
cmp
pop
mov
xchg
sahf
mov
lcall
xor
pop
adc
mov
push
insb
stos
adc
stc
xlat
mov
lods
cli
mov
scas
adc
stos
iret
iret
or
push
pop
cld
xlat
dec
push
jp
dec
dec
jle
shr
loop
mov
rcrb
lock
jns
xchg
mov
dec
xor
mov
adc
arpl
and
or
movsl
pop
mov
add
ficoms
test
cmpsl
mov
movsl
mov
jge
shll
cwtl
loope
mov
fcomi
popf
jmp
movsb
cmp
inc
xor
push
mov
gs
mov
dec
outsb
mov
xor
cmp
aaa
test
pop
push
cwtl
pop
and
cmp
int
loopne
lea
dec
add
jmp
or
xor
or
xchg
adc
cld
mov
xor
dec
xor
push
into
cltd
mov
shl
pop
ret
pop
movsb
sbb
movb
xchg
mov
pop
in
adc
sub
out
dec
push
sti
jp
pusha
inc
sbb
add
lock
test
lock
mov
sbb
pop
push
add
or
into
lcall
mov
push
sbb
loopne
cmp
movsb
inc
inc
insl
sub
addr16
mov
lret
and
lcall
adc
jbe
mov
inc
inc
insb
popa
iret
dec
ja
pop
pushf
mov
mov
scas
ja
lods
mov
pop
clc
jbe
cwtl
xchg
cmp
div
stc
shll
mov
pop
aam
jno
or
in
pop
pop
ljmp
and
or
les
xor
ljmp
mov
pop
lahf
jns
sti
idivl
scas
call
lahf
sub
aam
arpl
sahf
test
fildl
adc
stos
stc
push
shrl
mov
test
cli
icebp
pushf
inc
test
inc
lahf
pop
push
dec
push
lods
fisttps
dec
adc
pop
lret
mov
push
cmpl
sub
pop
jle
sarb
jo
pusha
addl
fwait
les
movsl
xlat
mov
mov
ss
cmp
outsl
movsl
stos
mov
and
pop
mov
cmp
push
cmp
mov
aas
mov
lods
stos
pop
xor
fbld
cmc
mov
pusha
mov
sbb
icebp
loope
lods
popf
fscale
ffreep
cmp
dec
addb
inc
sbb
faddl
xor
jp
icebp
rcrl
mov
orl
pop
jmp
mov
ljmp
fidivl
stc
rcrl
pop
aaa
push
sub
dec
lret
popa
sbb
filds
je
inc
add
push
pushf
cmpsl
ss
lods
inc
dec
push
aam
in
iret
dec
lods
or
inc
sarb
xor
fldenv
ret
push
inc
rorb
aaa
sbb
jne
lea
xor
out
adc
sub
cmp
fadds
inc
lock
jb
test
dec
cwtl
sbb
idiv
je
rorb
ja
scas
and
loop
push
int3
cli
fdivrp
ret
xchg
fsts
jle
lea
mov
pop
sti
sbb
stos
sbb
cmp
hlt
xchg
mov
cwtl
push
fcompl
icebp
xchg
shlb
adc
adc
sub
mov
popf
add
jg
cmp
cmp
xor
or
mov
xchg
into
lock
add
mov
jmp
and
xchg
jle
stos
sbb
aam
scas
mov
inc
mov
adc
aaa
push
pop
out
push
popf
push
xchg
popa
mov
shll
test
ljmp
sbb
ret
cmp
les
in
adc
insl
xchg
ret
outsl
xchg
aas
adc
shll
inc
pushf
xchg
and
test
clc
mov
js
add
or
jb
push
mov
pop
movsb
lret
negl
mov
outsl
adc
dec
aas
jne
fists
mov
fsts
sbb
or
test
inc
inc
cmp
aaa
repz
dec
add
hlt
popf
cld
inc
cmc
mov
push
mov
sbb
sbb
adc
mov
stc
mov
rcrb
iret
divl
xor
fs
mov
xchg
push
addr16
lahf
shll
xlat
popa
test
sbb
fistps
jae
inc
jae
pop
cltd
push
data16
bound
stc
inc
mov
rolb
insb
lea
sti
jle
mov
jg
clc
add
fisubrs
das
xchg
xor
push
jne
mov
sbbb
xor
sahf
sub
les
cmpsb
or
gs
stos
mov
adc
fiaddl
mov
cmc
lret
mov
sbb
lods
jmp
jge
jl
stc
or
divl
fsub
or
out
je
pop
xchg
in
sbb
mov
jge
test
mov
std
ss
dec
pusha
sti
cmp
jnp
mov
aam
aam
or
movsl
test
sbb
repz
dec
inc
and
or
and
inc
inc
push
sbb
std
sub
add
sti
sti
inc
dec
sbb
shrb
dec
cmpsl
adc
movsb
jae
scas
clc
push
cwtl
push
test
jmp
fildl
mov
and
push
aad
imul
push
sub
sbb
jmp
xor
fs
mov
stc
loopne
push
inc
loope
aad
ljmp
mov
mov
std
aaa
test
out
movsb
test
nop
cmpb
push
push
push
or
or
pushf
pushf
cmp
lahf
push
gs
shl
dec
inc
pop
pop
aam
aad
inc
sbb
mov
sbb
and
add
pop
rcl
push
dec
pop
jnp
xchg
cs
xor
push
jns
jmp
adcb
loopne
sub
mov
dec
dec
fsubs
cltd
inc
fisubrl
cmp
sbb
pop
stc
loop
cmp
ds
sub
stos
popf
mov
push
cmpsb
icebp
sub
pop
lods
sub
adc
mov
in
push
push
call
xchg
and
jae
dec
adc
sahf
xchg
dec
es
dec
sub
mov
xchg
mov
cli
roll
cmpb
out
sahf
orb
call
imul
pop
bound
out
sbb
cmp
pop
sub
cmpl
pop
es
cltd
cs
cld
clc
push
mull
stos
fwait
mov
xchg
xor
inc
popa
aas
inc
inc
and
fstl
push
pop
mov
mov
cltd
pop
fdivr
or
mov
sbb
xchg
test
fiaddl
xor
pop
lcall
ds
push
fs
mov
pushf
stc
mov
push
into
mov
iret
cmpsb
in
ljmp
dec
mov
xor
pop
push
inc
pop
cmp
shll
mov
int3
jns
and
or
mov
pop
adc
lock
pop
adc
jl
adc
ds
jg
clc
lcall
dec
lea
cli
pop
mov
jle
sbb
ljmp
test
pop
xor
shrl
sbb
cmpsb
mov
sub
dec
pusha
cmc
or
hlt
cmc
or
outsl
inc
int3
push
push
aaa
mov
xlat
testl
or
cmp
scas
cmp
cli
jnp
data16
adc
inc
push
sub
icebp
adc
pushw
push
loopne
add
rorb
push
jno
adc
fiadds
sub
push
ficoml
cmp
pop
xor
xorb
cmc
js
xchg
xchg
push
push
cli
xor
lock
pop
pop
int
scas
addb
fnstsw
jecxz
xor
xor
addr16
lahf
subb
lock
leave
jo
dec
jne,pt
xor
push
jnp
fmulp
lock
or
jmpw
sub
shll
arpl
lahf
lret
stc
int3
mov
push
xchg
je
sbb
loopne
xchg
lret
and
push
repnz
inc
dec
popa
push
and
and
fcoms
es
xor
and
lods
out
mov
xchg
or
ss
dec
add
add
push
popa
ljmp
push
and
orb
in
pop
cmpsl
xor
out
pop
cld
aas
popf
aaa
ds
fcompl
not
jae
cld
xor
or
xor
mov
push
mov
lods
insb
jbe
and
pop
shll
xchg
mov
vxorpd
or
sbb
mov
or
stos
push
enter
cmp
mov
in
jnp
movsb
call
arpl
test
mov
gs
scas
arpl
faddl
or
sbb
push
jb
xchg
cmp
push
imul
aas
sarl
pop
lods
lcall
ffreep
cld
cwtl
call
jp
pop
imul
loop
mov
popf
push
inc
jg
addr16
sbb
je
push
sub
sahf
lds
pushf
faddl
scas
push
fiadds
push
jo
xchg
cmp
repnz
dec
je
adc
lea
hlt
pushf
and
pop
jp
dec
mov
out
fwait
cmp
shrb
aam
xor
inc
and
cmpsl
or
out
sbb
adc
sub
xchg
sbb
aaa
xchg
aam
nop
ret
push
jp
int3
lahf
dec
andl
and
dec
and
nop
das
std
pop
add
fnsave
jne
popa
and
maskmovq
negl
mov
and
xor
ljmp
pushf
sub
andl
rorl
mov
mov
orl
and
mov
jp
into
mov
xchg
and
jo
out
lahf
xchg
iret
out
add
xchg
jbe
cs
iret
jo
xchg
icebp
inc
cmp
stos
sbb
adc
loop
add
pop
sub
inc
lea
dec
pop
push
jmp
sub
in
jb
ds
inc
aad
dec
cmp
cmc
imul
pop
add
out
cmp
aam
or
imul
jo
add
push
ljmp
push
ficompl
or
movsb
sbb
popf
jbe
fwait
dec
cmp
jnp
test
popa
jl
dec
and
cld
shr
int3
inc
sbb
mov
adc
mov
test
jecxz
aad
cmp
add
mov
scas
and
insl
lods
scas
add
mov
lcall
dec
lock
iret
push
out
xchg
xchg
in
sbb
imul
dec
hlt
jmp
xor
xor
out
add
pop
cmc
std
insl
adcl
movsl
scas
or
or
imul
and
add
in
fiadds
sub
repnz
xchg
xchg
xchg
hlt
ret
lcall
popa
cmp
ds
mov
popa
je
lods
push
insb
mov
fwait
dec
lret
shlb
aam
outsl
cmc
in
or
aam
xor
movl
fistpll
or
adc
sbb
add
insl
dec
mov
into
in
cmc
fsubp
pop
push
adc
sar
pop
daa
and
sbb
or
mov
cmp
lret
jmp
lcall
adc
cld
xor
fwait
out
ficomps
sub
pop
push
sub
jl
test
jo
mov
int3
rclb
divl
test
push
sub
push
xchg
lcall
sub
loopne
ss
pop
jmp
filds
and
inc
xchg
jg
mov
sub
adcl
mov
lods
divl
dec
push
jae
xchg
pushf
cmp
mov
je
sbb
rcrb
push
mov
lret
sti
cmp
pop
sub
xchg
and
nop
mov
mov
fdiv
in
cmpsl
xchg
mov
push
pop
call
je
sbb
dec
inc
mov
adc
mov
and
or
out
cs
lods
test
mov
jecxz
scas
in
dec
mov
mov
hlt
add
sarb
xchg
ja
lret
add
popa
lea
stos
jb
cmp
sbb
jp
aas
jecxz
std
xor
pop
lds
push
es
jne
dec
push
mov
pop
sub
lds
inc
inc
push
and
outsl
in
mov
sbb
sti
xchg
add
inc
fidivrs
push
out
dec
sub
push
sub
or
jo
cs
ds
fists
lahf
out
pop
or
fdivl
adc
out
es
jmp
popa
insl
xor
sub
pop
ljmp
sbb
pushf
mov
test
shll
mov
lret
jns
sbb
inc
or
pushl
lea
ret
jp
movsl
or
mov
insb
fadd
cmc
add
sub
dec
repnz
hlt
addr16
cmpsb
dec
and
testl
addr16
hlt
inc
insl
ss
jg
dec
mov
leave
add
paddusb
call
jge
sub
mov
mov
ret
xchg
jmp
inc
stos
add
and
test
test
inc
xlat
push
aaa
inc
ljmp
push
mov
jae
shll
mov
sub
inc
testb
mov
dec
adc
or
scas
imul
sub
jne
fsts
mov
jns
xchg
or
xor
popf
fistps
pop
pop
and
cs
mov
inc
jle
out
or
and
scas
outsb
std
mov
nop
dec
jle
jge
mov
pop
data16
jb
mov
adc
inc
jno
or
cmp
add
mov
xlat
popa
jecxz
push
pop
push
rclb
mov
jae
mov
xor
cmpsb
adc
stos
sub
inc
or
cli
out
ds
sbb
add
addr16
pusha
push
sbbl
xchg
fwait
dec
out
cmp
pusha
loop
data16
outsl
aad
ja
loope
push
inc
and
push
push
and
shr
enter
jp
idivl
in
or
jecxz,pt
push
push
mov
pusha
lret
add
pop
pop
cltd
dec
cwtl
testl
test
not
jno
stos
mov
out
hlt
test
ljmp
lock
and
dec
hlt
mov
in
dec
scas
lods
xor
loop
scas
xor
sti
lock
es
mov
popf
hlt
mov
pop
ss
sub
inc
ljmp
hlt
mov
pop
or
jnp
movsl
inc
xchg
cmp
les
movl
jg
aaa
xchg
push
pop
push
roll
sbb
fldcw
push
out
shl
push
fidivrl
mov
insb
add
movsl
sub
in
mov
int
pop
data16
inc
cld
and
adc
mov
ret
rorb
sbb
jnp
dec
je
test
mov
jmp
sti
in
hlt
fildl
adc
and
xor
inc
imul
je
test
mov
jmp
sti
in
hlt
fildl
adc
and
xor
inc
imul
dec
je
test
mov
jmp
sti
in
hlt
fildl
adc
and
xor
inc
imul
hlt
pop
jnp
imul
mov
sbb
or
fwait
decb
mov
mov
jno
orl
mov
rorl
loope
icebp
fwait
add
xor
inc
lret
popa
jmp
sbb
sub
jnp
imul
xchg
mov
mov
jge
insl
sti
jmp
sbb
repnz
incb
mov
rolb
mov
push
fldenv
lret
fidivl
adc
repz
sarb
sub
dec
jnp
icebp
inc
dec
lods
lock
shll
pop
adc
xchg
jl
add
adc
cmp
pop
test
fisubrl
movl
cmp
loope
rcrl
and
add
xor
mov
inc
fstpt
add
jle
shll
and
jnp
imul
pusha
rclb
ljmp
data16
rcrb
shll
and
or
add
pusha
lea
popa
stc
ret
pop
outsb
test
jnp
add
add
cmp
inc
lret
push
sti
mov
or
mov
stc
pop
in
dec
sub
imul
into
pop
mov
cmpb
or
aam
aad
fdivrs
scas
and
cwtl
inc
stc
push
jmp
into
adc
cmpsl
sti
por
jp
outsb
ds
pop
popf
or
out
push
shlb
push
jmp
sbb
sub
jnp
imul
add
xor
inc
lret
push
sti
popa
jmp
sbb
sub
jnp
imul
add
movb
sbb
inc
aas
hlt
cmp
jl
test
mov
repnz
aaa
stc
push
jb
cmp
inc
push
lds
les
jne
mov
jle
das
jae
add
inc
sub
stos
fcoms
les
jmp
cwtl
dec
inc
mov
lcall
pop
cmc
xor
sbb
jle
nop
mov
hlt
ljmp
loop
and
sbb
ja
adc
lods
loop
sar
or
sti
dec
sub
dec
bound
jecxz
lret
daa
aas
jmp
cld
sub
inc
ror
je
jle
cmp
leave
cmp
push
push
sbb
fisubrs
sti
adc
movsl
aaa
adc
adc
mov
inc
shlb
mov
out
push
sti
into
lds
cmp
test
sbb
and
outsl
xchg
data16
in
lahf
sbb
mov
dec
fsubrl
dec
xchg
mov
xor
cmp
shrb
push
pushf
lret
arpl
cli
pop
jl
and
or
push
xchg
jg
inc
cmc
mov
push
cltd
bound
in
test
call
mov
out
xchg
cmp
fistpl
adc
adc
or
mov
push
rcrl
es
pop
ficomps
nop
in
push
sbbl
or
insb
push
adc
add
sbb
dec
sbb
ljmp
add
insl
jbe
repnz
and
cmc
lcall
add
mov
outsl
out
mov
inc
insb
mov
cwtl
popl
daa
inc
cmpb
mov
add
insl
std
cltd
inc
and
popa
aam
or
xor
jle
aaa
insb
dec
mov
imul
loope
sub
movl
sbb
scas
mov
push
mov
aam
mov
shll
test
cmp
jmp
fisttps
pusha
xor
stos
or
in
out
mov
adc
cmpsl
add
andb
jle
pop
insl
mov
adc
sub
in
push
sbb
cld
mov
jmp
push
aas
lret
enter
mov
cmp
test
add
add
aad
repz
pop
add
xor
bound
repz
dec
pop
push
jb
in
add
in
aam
imul
mov
pavgb
packuswb
sahf
pop
pop
push
rcr
mov
fdivrl
cwtl
lds
push
repz
rcrl
dec
enter
dec
scas
mov
std
adc
loopne
cmc
inc
fistpl
and
ja
and
aad
punpcklwd
cmp
outsl
fdivp
sbb
jnp
ja
xor
mov
scas
jl
cmc
rorl
jle
xor
sub
mov
xchg
imul
xor
ss
hlt
test
adc
pop
dec
gs
dec
xchg
lahf
inc
lock
and
ljmp
xor
js
add
xchg
call
xor
int
gs
ljmp
pushl
jne
adc
inc
lret
cmpsb
dec
push
sti
xor
pop
jns
lret
sub
push
call
out
xchg
out
sub
leave
in
aad
jnp
lock
out
fnstcw
mov
fwait
sub
lds
inc
cmp
and
or
pop
cmp
adc
sbb
scas
repz
and
rcrl
test
jae
cmpsb
push
sbbl
push
inc
mov
and
add
sub
outsl
xlat
in
cmp
xor
aam
and
fiaddl
xor
arpl
mov
lea
stc
or
pop
cli
pushf
sti
aam
je
mov
ret
dec
add
ja
xor
ret
das
or
mov
rorl
adc
arpl
in
imul
xchg
cmp
loop
or
mov
roll
inc
mov
fwait
and
or
ss
int
aam
add
dec
imul
into
sbb
mov
xor
ret
and
add
mov
mov
mov
movsb
pop
in
das
lock
dec
mov
xchg
mov
cmc
rolb
xchg
mov
ret
pop
cmp
inc
xchg
add
ret
pop
out
inc
punpckhdq
stc
sub
lcall
jb
xchg
pop
stc
jnp
insl
shlb
xchg
fcmovne
pop
adc
insl
inc
incl
fisubl
sbb
shl
mov
jne
and
add
jge
stos
jle
cmp
cmp
pushl
addr16
inc
mov
lret
arpl
lcall
jle
adc
hlt
xlat
or
add
in
inc
cmp
js
xchg
xchg
call
mov
add
fadds
jle
or
lcall
clc
lea
jp
repz
in
js
push
push
cmc
sbb
add
mov
cmp
sbb
adc
adc
push
sub
and
push
adc
add
lcall
dec
and
fildl
ret
inc
xor
das
outsl
shlb
call
adcb
arpl
cmp
and
subb
xchg
fs
sbb
and
dec
mov
std
push
cmpsl
ficoms
mov
dec
outsb
pop
aaa
dec
inc
cmp
xchg
or
or
xor
in
push
add
cltd
pop
add
lods
rorl
adc
in
adc
jbe
inc
das
int3
fwait
mov
mov
add
inc
add
pushf
pusha
adc
mov
cli
pop
push
mov
jl
hlt
add
outsb
xor
xchg
cmp
push
mov
jle
test
das
outsb
sub
mov
jno
xchg
push
std
ds
int
test
pop
mov
rol
adc
bound
cld
movsl
pop
add
push
mov
adc
jg,pt
adc
cmpsb
xchg
pop
xor
pop
aaa
not
adc
adc
in
mov
sbb
pop
jnp
imul
icebp
push
cmp
xchg
lds
xlat
icebp
outsb
and
mov
mov
clc
cmp
cmc
imul
out
and
push
rcrb
pusha
push
nop
sub
sbb
jp
pop
fimull
scas
aaa
call
aad
xchg
repz
in
sbb
inc
mov
and
pusha
sbb
ds
aas
lods
add
outsb
or
push
dec
push
sbb
pop
mov
cmp
sbb
lret
sbb
idivl
mov
mov
pushf
imul
into
inc
insb
mov
mov
lock
pop
insb
sub
frstor
add
mov
xchg
mov
je
or
arpl
fbstp
or
push
sub
int
pushf
add
xchg
scas
push
in
xor
xchg
adc
lods
aad
adc
scas
mov
cltd
mov
or
fs
xlat
adc
loop
repz
in
lods
push
inc
cmpsl
sbb
xor
int3
push
jecxz
lahf
mov
xchg
adc
adc
ljmp
adc
push
call
cmpsb
mov
rcr
je
or
and
mov
cmpsb
imul
aaa
pop
sbb
dec
pushf
lcall
mov
imul
loopne
sub
push
cmp
inc
cld
stc
and
mov
adc
mov
jg
daa
in
mov
adc
mov
sub
sbb
popa
out
cmpsb
push
sti
pop
std
int3
sahf
stos
js
nop
and
pop
xchg
pop
xchg
nop
daa
cmpsb
repnz
popf
jae
pop
movl
call
mull
nop
mov
xchg
in
push
pop
sub
clc
or
mov
stos
jp
cmp
fwait
int
mov
dec
add
je
inc
aam
sub
mov
lahf
int
jmp
mov
lahf
ja
shl
dec
mov
jno
xchg
mov
adc
sub
punpckhwd
outsl
aas
push
xchg
mov
bound
mov
sub
dec
jnp
mov
mov
cmp
popa
jg
adc
shrb
scas
ret
lods
loopne
repnz
adc
and
lcall
xor
cwtl
cmpxchg
lods
add
gs
cwtl
or
dec
nop
bound
xchg
adc
fcoml
mov
inc
dec
or
movsb
addr16
push
cmpsl
sarl
adc
ja
mov
and
dec
mov
daa
push
stos
cs
cmp
add
xchg
jecxz
mov
or
push
add
inc
mov
fdiv
jbe
dec
orl
mov
pop
ja
pop
inc
add
jecxz
arpl
mov
add
nop
fisttpll
or
shll
lcall
cmp
fidivl
pop
pusha
or
imul
dec
fmull
and
xchg
shrb
xor
jl
ljmp
cmpsb
pop
lahf
add
insl
sbb
lock
pusha
shl
sbb
int
mov
mov
sbb
popa
and
jb
inc
mov
pop
pusha
loop
mov
cld
mov
pop
lods
dec
cmpsl
pop
push
das
jle
jecxz
testl
cmp
fsubl
out
cmp
jnp
out
xlat
push
rcl
cmc
das
mov
mov
in
dec
int
int3
aas
push
shrl
jae
mov
cmp
pop
cmp
cli
xor
xchg
sub
sahf
pushf
inc
pop
out
jge
jnp
sub
inc
movsb
xor
sbb
sub
and
cwtl
adc
aas
push
and
adcl
test
and
xchg
add
shl
or
call
imul
push
lret
rcrb
add
das
cmp
pop
fstps
pop
hlt
and
fisttps
test
inc
mov
call
or
call
dec
fcompl
scas
inc
mov
pop
push
popa
xor
mov
inc
mov
fldcw
ljmp
test
sbb
shufps
mov
xlat
clc
mov
scas
inc
fldt
mov
adc
xor
jne
insl
fisubrl
pop
push
pop
cmc
incb
js
aam
je
pop
dec
rcll
cmpsb
jmp
outsb
dec
jmp
fidivrl
jecxz
stos
xlat
inc
out
or
mov
test
shr
mov
inc
xchg
leave
cmp
push
lret
push
das
sub
stc
repz
lret
jb
pop
pushl
mov
fistl
fstpt
cld
add
decl
mov
jnp
lock
xorl
hlt
ljmp
leave
hlt
cmpsb
gs
jne
cli
fidivl
mov
test
fcomps
mov
imul
fwait
sub
js
roll
mov
aam
ja
lods
and
pop
sti
fwait
xor
arpl
cmp
sub
insl
cmp
fwait
and
insb
mov
bound
test
repz
xchg
rcll
fs
dec
into
lock
xlat
loop
and
in
loop
sti
push
jne
cmp
fstps
js
inc
xchg
insb
add
scas
aaa
add
sub
jne
or
push
xor
jns
not
xor
popl
es
add
popa
inc
push
cmp
push
cmp
aas
cltd
mov
ss
scas
push
inc
movsl
sbb
adc
inc
mov
int
and
scas
int3
sbb
xchg
sub
mov
cmp
repz
aaa
mov
scas
inc
push
add
xchg
jnp
adc
lock
xchg
sbb
inc
icebp
mov
jo
jnp
xchg
mov
jmp
cmc
xchg
leave
jns
dec
adc
mov
shl
or
filds
inc
out
xor
enter
push
bound
adc
mov
repz
mov
pop
add
into
add
pop
pop
fisubl
rorl
dec
xor
test
mov
mov
enter
sub
push
aad
adc
adc
mov
pop
push
pop
sbb
jbe
dec
std
adc
fisttpl
add
rol
xchg
push
testb
sbb
sbb
jle
cmc
fstpt
jae,pn
jg
inc
jge
fcompl
mov
jne
stos
dec
cmp
lds
jae
sbb
out
xchg
imul
lahf
js
add
inc
cmp
fdivp
fcoml
mov
adc
aas
insl
dec
mov
imul
jno
mov
sbb
mov
jmp
test
cmp
mov
stc
xchg
xchg
imul
ds
cmpb
jle
lea
sub
xchg
out
mov
lcall
and
push
inc
insl
das
sbb
mov
aas
fwait
repnz
pop
andl
popf
jecxz
dec
pop
pop
arpl
lds
xchg
das
add
mov
sbb
iret
movsl
ds
or
fildll
push
dec
mov
push
mov
js
ljmp
pop
push
push
sbb
lea
mov
and
inc
xchg
pop
adc
enter
lret
gs
mov
shrd
cwtl
jne
mov
das
pop
sbb
pop
sub
push
cmp
rclb
dec
push
adc
in
cld
pop
or
dec
ds
pop
stos
ds
cltd
mov
add
mov
enter
and
imul
jg
xlat
mov
sub
mov
pusha
gs
jecxz
pusha
push
test
xor
xchg
adc
jbe
mov
pop
popaw
int
or
enter
push
sub
mov
and
mov
mov
or
sbb
cmp
sub
mov
test
data16
ret
mov
aas
sub
adc
cmp
call
mov
lds
faddl
push
cli
push
adc
sub
dec
ja
popa
lcall
jge
mov
xchg
push
mov
jo
inc
shl
je
inc
pop
inc
mov
std
xchg
lret
cld
enter
push
negl
push
mov
and
int3
lods
stc
pusha
dec
sbb
mov
movsl
mov
mov
xchg
sub
xor
mov
mov
dec
das
mov
jg
in
cs
xchg
int
pushf
mov
inc
int3
sbb
fnstenv
adc
jecxz
or
xor
data16
pop
jg
dec
pop
ret
jae
inc
aas
movsl
or
push
sub
sbb
outsb
out
cmp
add
hlt
stos
loop
rclb
fdivr
push
cmc
ja
or
mov
in
loop
jl
xlat
xor
add
dec
fs
lods
and
mov
xchg
cmp
test
push
into
xchg
mov
call
jmp
inc
sub
xchg
mov
jp
cmp
xor
jmp
xchg
and
and
lds
cmc
jnp
mov
into
mov
sub
sarb
cmp
or
xchg
adc
mov
lods
fldcw
out
dec
cli
mov
xchg
fisubs
jp
cmp
sub
jl
clc
imull
out
popa
iret
int3
sub
loopne,pt
iret
inc
add
dec
mov
fs
ret
or
rclb
lods
jnp
mov
mov
mov
lods
or
xlat
dec
out
dec
adc
fcomps
dec
ja
sub
cld
mov
pop
push
shll
add
imul
add
int
xlat
mov
mov
aaa
test
ficoml
fcmovb
mov
stos
int
add
push
cmp
push
fucomp
mov
jecxz
pop
pop
fadd
shld
pop
xor
and
nop
jnp
sub
lods
mov
cwtl
xchg
adc
push
mov
jle
popa
scas
cmpsb
arpl
sbb
rol
sub
jbe
aaa
or
cli
cmp
stc
cld
xor
mov
jae
idivl
je
jl
fwait
push
lahf
bound
icebp
inc
insb
or
mov
int3
lahf
sbb
mov
sbb
ret
mov
lahf
cmp
xlat
in
out
xchg
add
aam
repnz
call
adc
icebp
data16
movsb
and
mov
add
cmp
xchg
icebp
mov
scas
mov
sbb
xchg
cmp
sbb
cmp
aam
push
xchg
popf
xor
pop
sub
pop
jg
cmp
cmp
cli
xor
push
pop
fwait
inc
lret
or
xchg
stos
fbstp
gs
and
push
outsb
adc
jne
or
lret
cmp
jge
loope
fnstcw
idivb
jle
adc
fmull
test
cmp
fiaddl
or
jae
adc
mov
ja
pop
ret
xchg
imul
cmp
inc
xchg
roll
cltd
mov
dec
pusha
aas
outsb
inc
cmp
or
lcall
loop
popf
mov
mov
xchg
ljmp
or
mov
jl
add
js
push
jmp
mov
mov
add
bound
dec
les
flds
cmp
jnp
lss
inc
push
testb
mov
pusha
mov
int3
rol
inc
dec
int3
ret
sbb
xchg
push
cwtl
cmp
pop
inc
cmp
cmp
repnz
lea
push
adc
sbb
pop
aas
pop
sbb
xchg
je
pop
xor
jmp
jbe
out
outsb
iret
xchg
sub
push
inc
inc
or
lock
cmp
xchg
imul
adc
imul
jge
jp
aam
add
aaa
repz
push
insb
dec
sbb
or
shr
mull
sbb
sbb
cmc
xchg
xor
outsl
sub
lods
push
or
jnp
pop
int3
test
pop
jb
shr
stos
xchg
loope
aaa
in
cmp
fisubrl
jmp
pop
les
push
daa
insb
sarl
xchg
cli
sbb
or
insb
aam
out
shll
xorl
out
adc
pop
fbstp
cmpsb
lret
dec
and
mov
es
test
cltd
imul
decb
sahf
mov
movsb
hlt
into
int
push
pop
and
mov
mov
out
mov
mov
lahf
test
jg
add
and
cmpsl
dec
repz
inc
subb
in
inc
ljmp
js
add
mov
movsl
imul
pop
xchg
aas
pop
mov
jg
int3
pop
dec
push
notw
sbb
sub
out
scas
js
pop
pop
outsl
dec
in
aaa
jp
mov
out
std
imul
sahf
mov
icebp
jp
push
add
test
sbb
push
testl
xor
adc
enter
dec
cwtl
outsl
push
es
add
mov
test
or
dec
lds
xchg
pushf
sti
and
idiv
push
insb
pop
xor
js
or
and
jae
and
xor
mov
sbb
cs
leave
call
pop
xor
inc
or
push
imul
fidivl
sub
push
mov
daa
scas
stos
jge
xor
dec
cwtl
jge
addr16
out
pop
sbb
aaa
and
shrl
dec
lret
push
push
mov
out
pop
adc
arpl
movsb
mov
jle
les
fiadds
jne
cmp
sub
sbb
je
cmp
cmp
and
fldt
lock
sbb
cmc
sub
daa
fildl
dec
fs
adc
push
push
pop
dec
je
ret
loop
xchg
enter
push
push
pop
push
push
icebp
sub
ss
jne
jne
mov
ror
shlb
xchg
jo
mov
fcmove
or
mov
and
push
mov
jecxz
xchg
mov
dec
xchg
inc
cmpsl
cltd
or
mov
ss
dec
test
jo
and
stos
dec
cmp
add
call
push
fcomi
and
imul
test
test
leave
mov
lret
fstps
ss
mov
adc
mov
pusha
dec
pop
mov
jno
push
push
aam
xchg
mov
add
and
sbb
sub
xor
adc
jl
lods
jnp
bound
xchg
sarl
jg
repz
fistpll
mov
rcll
loop
nop
lcall
push
mov
aas
mov
or
xchg
push
adc
imull
mov
rorb
dec
cmp
mov
lcall
ficoms
pushf
fldcw
ljmp
pop
push
clc
loop
mov
push
test
mov
sbb
mov
sub
mov
xlat
jg
int
andb
loop
ficoml
lock
dec
xlat
or
clc
pop
aam
stos
bound
add
stos
stc
cld
xchg
cmp
push
mov
sbbb
shll
in
mov
pop
fwait
cld
and
lock
xchg
rcll
pop
test
arpl
add
xchg
push
add
roll
mov
pop
dec
ret
push
mov
fdivrl
mov
rolb
cmp
jbe
mov
sub
shll
adc
xor
inc
lret
push
sti
popa
jmp
sbb
sub
jnp
imul
add
xor
inc
lret
push
sti
popa
jmp
sbb
sub
jnp
imul
add
xor
inc
lret
stc
sti
popa
jmp
sbb
xchg
cmp
dec
sarl
imul
add
xor
inc
lret
push
sti
loope
jno
jle
cmp
dec
ret
test
xchg
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
ss
stos
push
frstor
sbb
data16
je
inc
mov
cmpsb
and
xor
add
adc
in
push
hlt
push
les
aam
movsb
push
mov
test
add
je
push
push
cmpsb
and
push
movb
out
push
je
inc
adc
mov
cld
inc
test
insb
fs
sbb
add
push
xchg
movsl
pop
aam
andb
das
in
icebp
test
push
adc
fucomip
lcall
mov
or
push
cld
pop
pop
stos
hlt
inc
dec
lret
scas
adc
loopne
mov
dec
mov
popf
test
mov
push
in
in
loope
sbb
mov
lods
lods
movsl
and
mov
fldt
mov
sub
and
inc
test
xchg
daa
jns
jo
and
sub
popa
or
cmp
adc
pop
fnsave
test
movsb
imul
xlat
test
push
sahf
popa
push
popa
dec
hlt
adc
mov
sub
dec
int
cld
insl
out
pushf
xchg
mov
mov
testb
push
hlt
push
les
mov
inc
test
xchg
xchg
out
pushf
mov
cmpsb
inc
sub
add
jo
xchg
push
cmpb
mov
xor
out
lahf
adc
xor
xorl
jl
cmpl
int
aad
call
repz
hlt
push
mov
push
jno
push
mov
push
push
mov
xchg
pop
loope
mov
test
fs
je
inc
mov
cmpsb
and
xor
add
adc
in
hlt
push
les
aam
movsb
push
mov
test
fs
je
inc
mov
cmpsb
and
xor
add
adc
in
xor
insb
pop
mov
call
and
andb
lds
mov
cmpsl
lods
imul
out
or
pop
mov
lock
adc
das
ret
lea
in
test
pop
jmp
adc
or
jmp
jle
cmp
cmpsl
cmp
jg
mov
popf
paddq
movsb
rolb
push
mov
xor
test
daa
jns
shrl
or
jecxz
pop
shrb
xchg
pop
push
jp
fldcw
add
fstl
mov
dec
rolb
inc
or
xchg
js
dec
push
cli
xorl
add
pop
rolb
test
push
ljmp
iret
gs
push
ljmp
inc
test
or
inc
inc
cmp
dec
adc
xchg
cmp
popa
cmp
jl
xlat
adc
xor
fnsave
sbb
mov
out
cli
addr16
and
popf
adc
pop
push
inc
cmpl
jns
inc
outsl
sub
hlt
xrelease
loop
jb
mov
sub
mov
mov
arpl
xchg
sub
leave
add
add
xor
test
lea
out
sarb
xchg
lahf
fldcw
inc
push
data16
adc
jge
pop
and
jge
mov
fdivp
popl
xchg
test
in
mov
call
cmp
add
sbb
adcb
fdivrp
sub
xchg
or
add
pop
or
cmp
inc
sub
insb
mov
mov
mov
xchg
push
or
mov
add
sar
cmpsl
dec
and
push
inc
in
sahf
xchg
adc
dec
mov
fucomi
pop
and
stos
xor
adc
ja
mov
push
pop
or
adc
sub
lods
mov
cmp
lds
and
iret
xor
cld
push
xor
inc
xor
and
inc
outsl
and
lret
sbb
popa
sub
ds
and
mov
inc
inc
testl
fs
dec
in
jle
pop
repz
pop
hlt
out
lods
fwait
add
sti
fs
add
inc
sbb
cmc
ljmp
dec
lock
sahf
jne
sub
movsb
fcoml
mov
adc
std
loope
mov
out
cli
dec
cmp
mov
push
ret
mov
mov
shll
and
mov
les
loop
in
jp
jnp
push
mov
into
out
idiv
popf
sub
adc
shrb
lods
mov
rcll
push
inc
iret
pop
dec
or
cmp
jl
loope
inc
inc
dec
mov
mov
mov
cwtl
imul
push
cmpsl
cmp
gs
pop
mov
aas
mov
push
mov
leave
mov
jbe
lcall
mov
enter
in
std
lods
cmp
fs
xchg
mov
and
dec
push
ljmp
mov
adc
mov
andb
push
frndint
aad
jo
lahf
ret
mov
xchg
ds
std
lret
and
sarb
pop
imul
in
lds
mov
xchg
mov
sub
mov
push
mov
push
imul
loope
cld
aaa
adcb
mov
mov
jae
cmp
push
mov
sbb
pop
je
adc
aad
pop
sub
dec
pop
adc
xlat
fcoms
outsl
lock
jns
je
jns
mov
hlt
addb
mov
jae
dec
fcmovu
jmp
nop
out
in
mov
fstps
sub
push
fwait
loope
jp
push
movq
lcall
cmp
nop
xchg
outsl
xchg
test
dec
push
sbb
insl
lret
loop
mov
lds
cmp
xor
out
lret
xchg
cmp
and
jne
xlat
jo
or
cltd
mov
pop
push
mov
imul
cmp
dec
out
or
in
enter
mov
sbb
push
test
jmp
xor
insl
dec
divb
push
arpl
sbb
and
subb
cmp
cmp
dec
dec
mov
je
aas
adc
xchg
pop
outsb
sbb
push
test
fcoml
es
dec
test
lcall
push
jl
push
xchg
test
loopne
adc
cmpsb
ja
dec
inc
popf
cmc
cmp
add
xor
mov
mov
dec
cs
pop
inc
or
ljmp
rcll
arpl
iret
sahf
or
pop
out
jle
inc
and
jmp
gs
gs
andb
add
cmp
gs
ljmp
movsl
shl
jle
cmp
mov
fcom
pusha
cli
stos
aad
jg
xor
mov
pusha
jg
xor
cs
fnstcw
arpl
fmull
test
aad
fmulp
sbb
push
bound
clc
mov
sub
inc
push
enterw
mov
cltd
les
xor
mov
adc
dec
fstps
xor
jge
in
dec
inc
inc
or
daa
sub
push
xlat
std
push
inc
fnstenv
icebp
cmp
cmpsl
loopne
adc
in
jno
push
enter
das
cwtl
filds
adcb
pop
mov
mov
lea
loop
xor
and
in
cli
xchg
fimuls
testl
out
mov
mov
jb
rol
jge
pop
adc
dec
pop
or
and
pushf
push
adc
cwtl
pop
or
insb
ljmp
xor
pusha
pop
mov
xchg
pop
pop
imul
or
sub
xchg
ljmp
nop
mov
scas
pusha
ret
mov
adc
dec
shlb
adc
inc
cltd
push
xchg
pop
sahf
add
int
or
sbb
xchg
packuswb
imul
jmp
ja
cli
call
xchg
in
mov
lret
push
push
add
arpl
sub
dec
jle
ja
push
jae
test
push
lcall
cwtl
or
imul
mov
mov
shlb
and
xor
mov
test
sti
sub
arpl
inc
ljmp
sti
xchg
leave
sbb
lret
test
mov
pop
pop
jno
dec
dec
int3
jo
mov
jno
or
imul
fidivrs
mov
lea
out
stc
dec
out
and
mov
mov
sbb
test
rcrl
sbb
mov
lcall
test
push
jns
and
stc
sub
push
cld
int
xlat
mov
clc
je
xchg
jae
xor
adc
enter
pop
mov
adc
sub
sub
sub
in
outsl
mov
dec
add
je
popa
pop
cmp
pop
jo
arpl
mov
mov
enter
roll
cmpsl
inc
lods
sbbl
lahf
fistl
imul
push
cltd
xor
mov
lahf
pop
fsubrs
lahf
xchg
je
enter
pop
orb
mov
or
insl
dec
scas
das
fs
sbb
jbe
jbe
xor
sarl
push
mov
cmc
push
fstps
or
lea
or
xorb
mov
inc
popa
jmp
mov
fwait
mov
mov
or
popa
imul
cmpsl
loop
xor
mov
push
divl
sbb
jl
movsb
fisubrl
xchg
and
orb
fdivl
leave
sbb
sbb
sub
mov
push
inc
arpl
out
adc
pop
jl
aaa
mov
dec
adc
sbb
shrb
cmpsl
pop
and
mov
ds
sbb
push
subl
mov
mov
jns
push
add
loope
scas
enter
mov
out
adc
mov
push
push
mov
add
imul
pop
cmp
pop
stos
addr16
inc
mov
test
enter
pop
lock
pop
jl
fidivrs
movb
jle
mov
adc
std
fmuls
hlt
pusha
sbb
lahf
aas
add
sbb
in
push
faddl
in
ficoml
fcomi
repz
push
add
rclb
out
xchg
pop
js
es
test
lock
cs
push
cmp
sti
mov
xchg
sub
out
cwtl
add
cs
add
shl
sub
shll
or
mov
popa
ljmp
test
mov
fsubs
stos
add
fwait
mov
inc
pop
cmp
ror
xor
cmp
mov
mov
add
jmp
adc
sub
in
pop
lea
jle
ret
lret
dec
xchg
add
pop
mov
lea
sti
sub
push
cmc
mov
sub
lcall
aam
sahf
xor
loopne
punpcklwd
jo
adc
rorb
pop
jb
mov
xor
aas
fists
mul
xchg
ds
lahf
inc
jns
xchg
addr16
pusha
push
xorb
test
in
pushf
sub
mov
call
movl
and
es
std
pop
add
out
jno
inc
mov
sbb
adc
xchg
jg
je
push
mov
mov
lret
sti
imul
repz
mov
cmpb
icebp
jae
push
subb
xchg
iret
shll
data16
cld
jno
mov
sub
movsb
jmp
cli
cmp
cmpsb
mov
xor
lock
fisttps
mov
inc
mov
andb
test
adc
les
pushf
pop
mov
dec
test
fyl2x
xchg
xchg
xor
xchg
cmc
pushf
enter
in
lds
test
cmc
cltd
adc
cld
pop
dec
xor
enter
movsl
add
jl
stos
cmp
push
add
mov
mov
jecxz
stos
mov
mov
fnsave
clc
sbb
add
insl
in
push
add
push
push
les
cli
popa
scas
outsl
dec
decb
pop
scas
icebp
push
insl
notb
cmp
hlt
aam
sub
cmpsl
pop
cmc
imul
add
push
pop
call
dec
jne
into
adc
sub
in
clc
cmp
stos
dec
in
mov
mov
arpl
mov
inc
add
int
lret
mov
mov
add
fscale
addr16
mov
sbb
dec
and
inc
cmp
cmpsl
aad
xor
fs
aaa
xor
mov
sbb
les
pushf
fwait
out
loop
incl
jno
mov
add
or
cmp
in
je
lcall
in
xchg
inc
and
dec
std
mov
mov
jnp
inc
pop
fildl
ja
and
movsb
and
pop
push
push
adc
subb
ret
and
dec
jo
cltd
dec
test
xchg
dec
add
aas
ljmp
and
cmp
outsl
mov
jns
mov
inc
jb
in
mov
jg
gs
mov
in
gs
jo
jno
and
xor
in
mov
mov
cmpl
add
repz
xchg
stos
aas
das
popf
mov
gs
or
add
xlat
mov
jle
inc
rcll
shrl
cmp
xor
fsubrs
push
fistpl
add
insb
inc
pop
push
pusha
shr
shll
ds
int
in
int
pop
mov
add
imul
clc
add
add
fldl
mov
test
jge
add
and
leave
and
dec
sub
ss
outsl
call
and
ret
std
sbb
and
jp
cmc
sbb
cmp
dec
mov
pop
add
sub
mov
andb
push
jno
pop
or
mov
xor
jo
daa
and
push
mov
ret
in
cmp
add
int3
mov
out
add
jge
incb
xchg
lahf
push
mov
and
ficoms
imul
push
jg
sbb
add
jecxz
and
outsl
pop
dec
dec
std
imul
aas
pop
xor
rorl
movsb
sbb
sub
xor
pop
lcall
out
leave
in
repnz
call
mov
lret
insb
mov
cmp
or
aas
mov
les
fwait
mov
jmp
inc
mov
sub
sbb
and
and
push
je
loope
cmpl
cmpsl
cmp
arpl
mov
jne
fisubs
aam
test
push
shr
ja
sub
mov
mov
push
push
mov
popa
xchg
out
sub
inc
sarl
clc
frstor
xchg
repnz
cli
dec
xor
cmp
lret
or
scas
sti
shrb
es
out
add
xchg
and
and
in
das
lcall
mov
mov
mov
cld
fisttps
cmp
mov
fistl
lcall
xor
jbe
jo
adc
lods
leave
xchg
sahf
adc
int3
cmpsl
ret
mov
lea
fstpt
xchg
and
sub
test
jae
pop
lds
jnp
andb
shlb
sbb
add
sub
and
lds
int3
insb
add
dec
pop
nop
stos
push
mov
push
loope
mov
pusha
jno
inc
insl
sub
xchg
fdivl
testl
decb
in
pushf
mov
test
mov
xlat
push
mov
or
gs
pusha
sub
aas
adcb
daa
int3
les
or
nop
in
push
adcl
sbb
mov
mov
jmp
pop
insb
sbb
mov
aas
adc
das
jno
in
std
fists
ret
test
in
mov
add
mov
add
mov
sub
mov
xor
gs
xor
jg
insb
xchg
fnsave
fisttps
jge
jne
add
dec
mov
dec
mov
xchg
out
adc
jb
add
xor
aam
pop
sub
in
lods
in
lods
xchg
ljmp
pop
ljmp
cmp
jmp
xchg
out
jecxz
push
jb
call
data16
adc
out
mov
movsb
fcoml
sub
outsl
and
cwtl
pop
loopne
leave
push
mov
lods
and
sti
pop
sub
lcall
xchg
jmp
mov
cmpsb
cltd
dec
sbb
fsub
mov
ljmp
pop
enter
subb
je
lcall
mov
jecxz
loop
outsb
fdivl
loop
fldl
mov
aam
and
imul
fisubs
mov
xor
out
push
scas
pop
dec
cmp
inc
lret
sbb
icebp
test
inc
xor
outsl
ljmp
or
jne
pop
or
or
movsb
cmpsb
cmpsl
xchg
jnp
push
pop
insb
pop
hlt
push
aad
in
subb
cmp
push
cmp
aad
jo
out
pushl
jae
scas
out
mov
fmuls
mov
aad
mov
mov
mov
mov
lods
pop
mov
ss
add
out
lea
fwait
clc
inc
or
sbb
aam
adc
out
imulb
inc
push
mov
xor
cs
adc
add
dec
fst
repz
and
rolb
lods
sub
jno
in
jno
les
push
movsl
inc
pop
into
mov
loop
push
dec
int
ds
or
into
pop
into
cmp
mov
jae
sub
mov
cltd
lret
pop
roll
ret
mov
inc
imul
xor
fldt
push
or
lret
adc
ljmp
lcall
push
lods
stos
pop
add
cli
add
and
inc
outsb
idivb
pop
push
sub
inc
sbb
push
cmpsb
rorb
push
das
int3
bound
add
adc
jns
xchg
movsb
out
enter
xchg
stos
cltd
xchg
push
cltd
jl
or
sbb
inc
adc
test
xor
fisttpll
clc
outsb
sub
xlat
fisubs
or
inc
ja
sub
rolb
dec
in
movsb
and
fwait
xchg
adc
lea
inc
fidivs
and
notl
lcall
clc
inc
jns
lds
dec
jecxz
jne
adc
cmc
je
jle
push
call
sub
cmp
jmp
fs
and
xchg
inc
dec
int3
adc
cs
sbb
lahf
jb
mov
xchg
sub
dec
mov
lods
test
push
mov
in
icebp
xor
loope
jmp
jp
adc
pushf
jle
dec
adcb
add
push
nop
xchg
je
cmpsb
mov
in
clc
mov
inc
dec
std
jns
xchg
and
scas
fisubl
andl
insb
test
xchg
test
call
add
out
dec
xchg
mov
aas
insb
outsb
pusha
jg
data16
fisttpl
leave
and
or
cmp
cmpsb
or
push
adc
xchg
jp
fldenv
nop
movsb
and
stc
mov
inc
jge
movsb
inc
mov
inc
ja
dec
adc
dec
ret
loop
loop
clc
inc
lahf
mov
pop
mov
inc
outsl
lea
les
jo
xchg
jbe
orb
xchg
dec
imul
dec
jmp
dec
lret
cmp
scas
aam
mov
std
jae
in
je
mov
ss
enter
mov
in
mov
xor
or
mov
add
cli
icebp
jmp
jno
cld
pusha
aas
inc
shll
cmp
jmp
xlat
add
out
push
push
fcoml
scas
pop
cmp
xchg
and
rcll
inc
add
or
fimuls
nop
xor
pusha
and
add
jmp
sub
imul
cmp
mov
outsb
stos
cmp
mov
mov
and
loopne
outsl
dec
mov
mov
dec
stos
scas
imul
mov
push
jne
int
xor
mov
ljmp
jmp
xor
dec
sahf
push
adc
add
push
sbb
xchg
pop
and
adc
arpl
inc
or
fidivrl
divb
push
mov
test
movsl
mov
ja
addl
aas
push
pop
jb
xchg
iret
int3
push
mov
stc
nop
outsb
mov
jne
bound
mov
push
hlt
lods
push
mov
lret
jb
in
cmp
add
mov
sub
test
loope
lea
sub
xchg
mov
inc
fisttps
icebp
dec
xchg
incl
subl
add
jo
insb
mov
fnstsw
gs
push
outsb
adc
rcr
pop
pop
xor
scas
pop
mov
cmp
push
pop
sub
jae
mov
stos
pushf
int3
cs
lods
insb
pop
sbb
lock
pop
push
sub
mov
push
jns
or
adc
loopne
or
or
lods
and
ds
add
xchg
push
adc
adc
repz
add
fcomps
int3
jb
icebp
dec
inc
gs
fstpl
cmp
xchg
adc
sbb
sti
push
test
jno
dec
enter
jmp
xor
add
aam
bound
and
loopne
in
pop
jb
push
fisttps
lds
pop
in
adc
icebp
inc
enter
pop
in
loope
fisttpll
frstor
filds
rorb
addr16
daa
rcr
sub
outsb
jne
xor
mov
addb
call
sarb
adc
xchg
in
nop
scas
test
out
pop
mov
lds
xchg
outsb
aam
fiadds
shrl
inc
adc
mov
sbb
fld
mov
loope
clc
inc
mov
mov
ja
insb
out
cmpsl
insb
shl
mov
jb
mov
push
enterw
jecxz
jmp
in
mov
dec
imul
xchg
bnd
add
sbb
in
lods
cmpsb
aad
mov
inc
dec
adc
fisubrl
pop
out
mov
cmp
loop
test
movsb
inc
or
pop
push
fs
dec
cwtl
jg
je
inc
mov
cli
cli
jo
aad
mov
lcall
aaa
fwait
mov
and
mov
sub
iret
ss
mov
test
fs
je
inc
mov
cmpsb
and
xor
add
adc
in
hlt
push
les
aam
movsb
push
mov
test
fs
je
inc
mov
cmpsb
and
xor
add
adc
in
testl
movsl
push
mov
test
pushaw
xchg
je
dec
mov
cmpsb
and
sub
out
push
fadds
dec
ss
movsb
push
movsb
inc
test
cmpsb
fs
mov
mov
rcll
mov
sbb
or
dec
sub
inc
cmp
sub
sbb
jmp
mov
fsubrs
call
jns
dec
sub
sub
js
push
cltd
fmul
push
fsubrs
call
jns
dec
xor
sub
pusha
or
cwtl
inc
cmp
lods
imul
test
mov
sbbl
push
out
mov
dec
rcll
icebp
jno
inc
pop
lods
outsb
xor
lock
stc
cmp
cmp
mov
mov
push
inc
enter
fcompl
enter
imul
xor
push
jo
lcall
and
test
jns
jbe
adc
jl
cli
fadds
pop
cmp
xor
xchg
mov
ret
fwait
inc
mov
mov
xchg
pop
cmpsb
or
mov
sbb
lcall
test
jb
leave
inc
jne
adc
decl
xchg
movsl
mov
cwtl
jl
stc
addr16
ja
inc
fldcw
jle
popf
call
jns
dec
aas
pop
dec
sub
js
jno
sub
mov
shrb
lock
jns
and
inc
and
dec
in
mov
lahf
mov
lods
lret
fcomps
imul
sub
es
adc
sub
mov
test
mov
lret
mov
call
sub
sub
sub
js
push
stc
mov
test
call
jns
dec
sub
sub
js
push
stc
mov
test
call
xor
inc
push
ja
fs
ja
fbstp
push
lahf
sbb
pop
js
cmc
incl
jne
popf
sub
push
pop
push
adc
rol
cmp
fnstsw
pop
add
cmpsl
loope
jae
sbb
cmovge
cmp
mov
mov
sbb
and
jb
mov
inc
xchg
insl
mov
mov
imul
xchg
lret
loopne
fsts
pop
jbe
subb
gs
into
sub
mov
in
js
js
and
mov
cwtl
leave
push
in
pop
cmc
cltd
jae
xchg
and
sub
shr
xchg
mov
notb
add
push
pop
sbb
adc
out
jo
repz
repnz
stos
cmpsb
mov
jmp
fmuls
daa
sti
ffree
xor
mov
negl
outsl
lods
sbb
pop
pop
cmp
push
shll
xchg
cs
andb
pop
loope
imul
popa
push
pop
divl
mov
sub
das
int
loopne
add
add
adcl
sbbl
or
stos
out
aad
sarl
into
in
loopne
dec
fidivs
xchg
cmp
sbb
adc
arpl
int3
lahf
les
sub
mov
adcb
pushf
je
repz
mov
mov
in
dec
cmp
test
call
sbb
dec
cmp
out
xchg
push
jmp
insl
nop
ds
xor
mov
sub
mov
dec
repnz
fldenv
inc
dec
lret
es
sub
mov
sbb
jbe
and
pop
inc
ret
jnp
leave
fisubrs
shlb
lock
add
jbe
pop
movsb
sbb
call
adc
adc
jbe
out
add
int3
add
xchg
pusha
movsl
adc
movl
sbb
test
in
loope
fdivs
xchg
ja
test
pop
out
push
aam
mov
dec
das
out
aaa
jno
outsl
and
test
jl
fiadds
inc
cmp
mov
cmc
roll
add
dec
xchg
andl
jae
mov
dec
in
cmp
gs
frstor
outsb
lea
mov
sbb
dec
cmp
ds
add
mov
xchg
outsl
mov
xchg
pop
lahf
xor
pusha
and
xchg
pop
push
sub
push
inc
and
pop
lods
mov
cmp
fdiv
fmull
adc
sub
test
mov
xlat
aas
xchg
test
inc
js
js
or
in
pop
pusha
sti
inc
xchg
push
cmp
rcr
loope
or
test
fdivrp
icebp
daa
call
push
mov
and
pusha
insb
jp
popf
mov
ret
xchg
push
addr16
pop
int
mov
test
iret
jge
mov
in
jnp
inc
pop
pop
push
imul
jmp
jns
add
imul
mov
out
inc
xchg
or
int
movaps
xor
lahf
jp
sbb
pop
and
push
ja
rorl
lahf
addl
fstp
cmpsl
sbb
in
in
stc
or
and
cmp
sub
cmpsl
out
sub
loopne
mov
xor
movsb
leave
mov
nop
cld
lret
push
pop
loop
add
jmp
ret
faddp
sbb
mov
mov
jge
sub
lods
xlat
in
mov
xor
and
push
cmc
inc
xchg
mov
push
push
sbb
ret
sbbl
or
mov
int3
shl
add
and
dec
mov
mov
mov
mov
push
sbb
mov
cmp
mov
test
ss
lods
push
je
cmp
inc
mov
ror
or
add
lods
out
sub
xor
mov
jo
mov
dec
pop
lods
sahf
loopne
fisttpl
dec
xchg
push
push
or
sahf
std
cmpsb
cmc
movsl
push
push
push
xchg
inc
movsb
bound
sub
fdivl
gs
das
loopne
jmp
jbe
cmp
dec
mov
inc
xlat
out
shll
add
in
popl
xchg
xchg
push
xchg
and
psrlq
cltd
lahf
dec
sahf
fisttpll
stc
push
ret
jl
add
cmp
aas
mov
test
out
ffreep
adc
xchg
inc
mov
outsl
xor
fiaddl
rcr
jg
mov
bound
xchg
ljmp
xlat
cli
iret
sub
jno
xchg
lods
in
rolb
mov
pop
mov
arpl
pusha
fists
bound
pop
loope
aaa
add
rol
nop
in
mov
and
mov
and
fdivl
mov
mov
jb
and
lahf
sub
daa
imul
mov
push
sbb
addr16
outsl
inc
aaa
mov
mov
mov
insb
jne
cltd
mov
push
or
adc
inc
arpl
sub
fstpl
fstl
cmc
in
ljmp
in
ja
xchg
jecxz
pop
les
xlat
xchg
into
jge
mov
pop
lock
lds
aam
dec
xor
ss
test
sub
jbe
fldt
xor
lahf
xor
add
insb
push
sbb
sub
aaa
fisttpll
mov
mov
or
test
sarl
jns
cmpsl
arpl
add
adc
pop
jge
sbb
pop
mov
xchg
roll
sahf
testb
addr16
mov
dec
xchg
popf
sub
scas
dec
pusha
lock
inc
pop
imul
add
icebp
fcompl
jns
std
test
fsubr
iret
fsubr
scas
sbb
cs
sbb
movsb
fisttpll
and
scas
mov
scas
aad
shll
roll
addr16
leave
das
aad
mov
xor
or
stos
or
call
bnd
pop
in
add
loop
cmpsb
mov
pop
repnz
or
ret
pop
jecxz
and
loopne
lds
inc
data16
inc
pop
shrl
bound
sahf
rcrl
pusha
lods
mov
xor
jns
mov
subl
push
cld
addr16
dec
movsb
pop
xor
dec
pop
adcl
aas
ds
push
mov
pop
jecxz
js
addr16
and
or
cmpsb
cmp
pop
movsb
bound
leave
push
outsb
fwait
xor
insb
sub
arpl
fsubrl
or
mov
dec
cmp
sub
movsb
nop
out
xchg
sbb
adc
adc
aaa
fidivl
add
xor
mov
dec
sbbb
cmc
dec
in
fnsave
inc
adc
pop
or
mov
push
pop
mov
mov
push
sub
push
xor
adc
ja
mov
xchg
xchg
xor
dec
push
sarl
add
or
cmp
jb
mov
xor
insl
cmpsl
je
inc
jne
jmp
dec
loopne
fcmove
sub
int3
sub
cmpsb
out
movsb
ds
mov
inc
add
xchg
clc
lock
iret
push
xchg
inc
mov
or
insl
je
mov
dec
and
cmp
mov
push
scas
arpl
jg
pop
lods
ss
xchg
gs
out
mov
ljmp
pop
inc
subl
mov
mov
loopne
push
aas
xor
int3
sbb
movl
and
dec
add
mov
imul
pop
push
shlb
data16
inc
shll
sub
and
es
in
jmp
leave
mov
pop
cmp
sub
sarl
int
lods
mov
add
sub
scas
movsb
xchg
imul
std
aas
insb
in
sbb
fnstsw
stc
sbb
std
negb
dec
xchg
inc
aam
sub
aam
sub
adc
dec
into
js
gs
lea
addr16
outsb
rcll
sahf
dec
loope
js
leave
pop
push
push
mov
mull
push
popa
bound
xchg
xor
scas
dec
in
ljmp
add
sub
push
roll
add
mov
inc
lods
and
lods
mov
sub
jecxz
push
inc
adc
xor
adc
sub
add
xchg
sub
test
mov
ds
into
ljmp
cmpsl
test
push
xchg
scas
mov
negb
cltd
stos
pop
notb
jmp
fistl
orl
jbe
fbld
lcall
mov
pushl
push
loop
iret
inc
add
jl
dec
fld
loopne
andb
pop
dec
mov
fdivl
jb
icebp
out
jg
xchg
cmc
inc
loop
data16
xor
ret
out
js
stc
cmpsb
repz
adc
mov
lds
out
stos
inc
push
push
add
sbb
mov
mov
mov
push
lahf
fs
inc
lret
into
bound
jb
or
rorl
cmpsb
mov
add
and
push
mov
fidivrl
push
mov
mov
rolb
std
jle
xor
add
lea
jno
movsl
sub
in
xchg
sub
enter
out
ljmp
and
sub
dec
mov
test
rolb
mov
adcl
aas
lahf
popa
enter
mov
pop
push
mov
fldenv
adc
mov
addb
pop
xchg
inc
std
ret
ds
and
sti
xchg
mov
mov
xor
mov
mov
in
cmp
fsubr
out
pop
cli
mov
sar
xchg
int
push
into
inc
pop
outsl
fldl2t
push
insl
outsb
sub
fidivs
xchg
ret
stos
xor
inc
hlt
pop
jecxz
adc
fstps
xor
hlt
cmp
dec
les
sbb
sub
pop
mov
inc
es
add
push
add
push
adc
call
or
dec
push
das
jo
orl
faddl
rorl
insl
pop
cmp
std
add
into
ds
in
js
push
cli
lods
popf
mov
push
test
xor
xorb
mov
and
mov
cwtl
hlt
pop
pop
leave
push
adc
sub
scas
stos
mov
fchs
scas
or
fwait
mov
mov
push
jge
das
cmp
pop
mov
xchg
out
in
and
pusha
int3
sbb
addb
adc
ret
in
or
fs
jle
scas
fldenv
pop
rol
mov
adc
xchg
sub
shl
cmpsl
add
pop
std
nop
push
or
and
fsubs
inc
addr16
movsl
mov
xchg
les
dec
addl
aam
add
in
sub
stos
sbbl
imul
xor
add
mov
jmp
xchg
sub
and
in
mov
mov
jecxz
gs
enter
push
push
fdivrl
or
mov
inc
arpl
jnp
sahf
adc
and
into
mov
dec
call
jbe
cld
jne
push
mov
inc
daa
adc
or
cmpsb
add
mov
leave
fimull
leave
cmp
jg
mov
inc
cs
mov
frstor
pop
or
mov
pop
and
or
pushf
mov
les
popa
xor
popf
fisttpll
in
iret
imul
jmp
sub
pop
jns
test
mov
cld
inc
xchg
icebp
mov
add
cs
sbb
out
int3
mov
fs
popa
lahf
lcall
mov
cmpsl
mov
mov
lahf
in
movsb
pop
ret
mov
or
mov
lods
loop
cmp
and
mov
mov
jne
repnz
int
and
jo
std
jg
rcr
sbb
sub
lods
jmp
jae
mov
jnp
lods
dec
adc
das
sub
test
xchg
cmp
push
xchg
xor
or
mov
fidivrs
outsb
mov
nop
mov
daa
out
and
xor
hlt
and
sbb
cmp
push
push
mov
lea
push
jmp
or
adc
jbe
and
pop
dec
ret
scas
push
sub
data16
xchg
pusha
loope
in
push
jg
cld
mov
clc
cmpsl
mov
jg
cmp
dec
pushl
inc
imul
xchg
jnp
xor
dec
lds
subl
mov
stc
mov
add
in
imul
out
adc
sub
inc
adc
movsb
imul
in
xchg
jmp
gs
lock
fdivr
outsb
rorb
mov
fidivrs
in
cs
sub
pop
inc
shl
cmpsb
dec
jnp
push
xlat
mov
mov
push
push
divw
aaa
sub
test
xlat
std
fsubr
or
and
mov
subl
repz
data16
or
iret
add
in
pop
subl
inc
test
pop
jnp
jmp
mov
cmpsl
add
sub
mov
dec
or
xchg
iret
sbb
mov
dec
jo
dec
fistpll
arpl
pop
jle
test
xor
mov
push
xchg
and
and
mov
inc
sub
mov
lcall
add
push
push
mov
scas
loopne
loopne
sub
sahf
scas
sub
fstl
popf
pop
shlb
xchg
mov
test
sbb
shr
or
daa
xchg
loop
xor
fiadds
jecxz
mov
js
push
addr16
int3
fsubrs
mov
and
mov
leave
sub
dec
add
and
test
mov
pushf
xchg
cmp
inc
lock
fiadds
xchg
and
sub
fwait
mov
mov
popf
pop
mov
stos
xchg
lcall
push
pop
jno
scas
fcmovbe
shlb
pop
mov
dec
int3
jb
xchg
repnz
repnz
push
scas
sbb
pushf
cmpsb
xchg
sub
loop
test
pop
mov
addb
int
imul
stc
pop
je
and
xor
mov
cld
mov
mov
jne
test
notl
jne
mov
or
orl
nop
pop
adc
add
dec
pushf
xor
stos
std
jle
push
test
push
test
loopne
sub
jne
int3
sbb
movsb
mov
stos
inc
shlb
repz
push
fdivrl
cmp
fwait
xchg
inc
lcall
jmp
xor
sbb
scas
jne
dec
mov
fwait
leave
mov
aam
aas
jb
sbb
outsl
movsl
add
mulb
mov
push
jmp
popl
js
outsl
sub
decb
int
mov
pop
adc
andb
daa
sub
rcrb
push
jo
pop
das
jl
sbb
andb
in
lods
xchg
mov
pushf
dec
aaa
sub
mov
mov
add
push
adc
push
xchg
mov
mov
hlt
push
fwait
inc
or
adc
or
xchg
fldl
out
mov
out
or
out
xor
xor
lret
in
out
mov
loop
fidivrs
push
leave
or
mov
fldl
lcall
das
dec
inc
adc
sbb
push
add
scas
pop
in
scas
mov
mov
mov
call
jbe
jno
xor
or
mov
jp
push
cmp
mov
inc
or
xor
and
jbe
pusha
add
inc
inc
sbb
mov
test
push
sub
or
xorl
shrb
imul
cwtl
jl
or
dec
sarb
pusha
pushf
xchg
dec
pop
push
jecxz
xchg
ljmp
test
js
mov
jo
aad
fdivrl
scas
cli
fsubl
dec
repz
push
movsb
mov
leave
jbe
push
sbb
sub
mov
inc
jb
mov
aas
js
add
xchg
lret
pop
sbb
shrb
test
xchg
pop
je
sub
mov
loopne
nop
and
test
aam
cmpsl
ficomps
xor
or
enter
aaa
call
cld
adc
and
jle
mov
data16
mov
lds
mov
ljmp
loopne
int
jne
lret
fisttpl
xor
pushf
iret
mov
jle
mov
in
xor
lds
cltd
popf
icebp
xor
divl
push
mov
xchg
in
outsl
outsb
movsl
movsb
lock
fadds
mov
fnstsw
cmpsl
cmpsb
xchg
sbb
mov
out
imul
jne
jmp
mov
jg
jmp
shrb
inc
dec
rorb
in
aam
or
push
repz
fcmovnu
or
adc
mov
jno
lahf
mov
insb
jmp
loop
jle
jns
daa
mov
xor
imul
xchg
lret
loop
cwtl
orb
push
cmp
into
sbb
xchg
jns
push
jmp
dec
fimuls
out
mov
ret
xchg
shrb
jecxz
mov
ret
or
test
fs
jg
inc
iret
cmp
out
rcrb
jb
mov
jmp
iret
int3
scas
fiadds
xor
insl
das
mov
fdivrp
xchg
dec
xchg
cwtl
xor
call
lock
or
adc
mov
hlt
xchg
ret
or
or
popa
dec
mov
outsl
pop
mov
insl
je
cmp
sbb
movsb
dec
rcr
or
decl
and
test
fildl
xor
dec
or
xor
pop
sub
fdivrl
out
inc
sbb
out
cli
cmp
mov
in
mov
jne
adc
mov
or
jl
inc
cmp
mov
sahf
push
stc
inc
and
jne
inc
mov
pop
fistps
cmp
pop
inc
lods
adc
dec
mov
icebp
or
or
das
sub
mov
gs
dec
sub
jl
lock
cmp
pop
add
lret
dec
dec
sahf
cmc
aad
pop
jmp
shll
mov
push
inc
pop
mov
sub
popf
inc
out
fcoml
ret
js
adc
scas
or
gs
mov
xchg
pop
pop
lcall
mov
push
cmc
int
sub
andl
fidivl
fwait
pop
jne
cmp
notb
pop
ret
jb
xchg
xchg
jmp
mov
mov
dec
sti
sub
popa
mov
adc
rorb
mov
sbb
mov
loope
lods
xchg
negb
jle
xchg
roll
cmovo
or
orb
mov
into
stos
addb
std
mov
aas
xor
mov
sbbb
mov
out
jns
pusha
fists
xlat
adc
mov
mov
insl
imul
push
fadd
js
xor
decl
jmp
lcall
jp
icebp
cmpsl
fld1
and
ror
lret
ljmp
out
sbb
xlat
fadd
das
mov
xor
pop
push
mov
ja
out
into
inc
in
sahf
mov
adc
mov
jg
mov
mov
pop
pop
pop
subb
pop
jecxz
cmpsb
test
cwtl
or
pop
jbe
decl
popa
call
xchg
add
in
dec
daa
mov
inc
adc
ror
adc
or
xchg
sub
jno
mov
push
movq
xchg
fwait
push
int3
dec
xchg
popf
jl
cmp
and
mov
icebp
outsb
sbbb
loop
adc
add
mov
mov
lods
call
psubusw
adc
fisubrl
loope
jb
jno
mov
sub
push
jbe
icebp
or
dec
mov
fstl
adc
inc
xor
rcrl
insb
enter
jb,pn
shl
xor
xor
push
add
mov
lds
fimuls
mov
movsl
cs
fnstsw
cmp
in
mov
iret
out
mov
add
data16
or
fnsave
data16
cmp
insb
mov
repnz
pop
cld
enter
inc
cmpl
cltd
gs
xchg
xchg
movsb
mov
sbb
push
in
jno
hlt
fdivrs
xlat
repnz
daa
fimull
es
mov
dec
push
dec
mov
jae
test
outsl
aad
mov
mov
rolb
imul
xor
jmp
and
and
fiaddl
cmp
xchg
jbe
pop
sbb
aaa
mov
jns
je
jmp
hlt
lea
mov
cltd
in
int
lods
repz
add
jnp
cmc
iret
inc
sbb
int3
sbb
popf
and
bound
ss
mov
inc
loope
lock
pop
or
xor
mov
lcall
inc
out
ss
or
imul
rcll
jns
cs
lret
jne
push
cmp
push
popf
es
mov
jle
fwait
aas
mov
fisttpll
xlat
gs
dec
out
pop
cmp
mov
pusha
pushf
and
into
fnstenv
xor
push
out
ficompl
add
dec
ja
aad
aad
xchg
test
jp
jle
repz
and
dec
negl
imul
addr16
sbb
inc
push
adc
mov
sti
mov
xor
scas
dec
dec
jae
and
das
test
jns
jns
dec
sub
sub
js
push
stc
mov
test
call
jns
dec
sub
sub
js
push
stc
mov
test
call
stc
cmp
sub
sub
js
push
stc
mov
test
fstps
push
dec
sub
sub
clc
or
sbb
ja
adc
test
scas
and
pop
jbe
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
sub
sub
add
xor
sbb
or
or
push
add
add
add
cmpsb
add
add
or
roll
add
add
add
pop
add
add
add
add
sub
mov
jle
cmp
sti
add
add
bound
add
aam
bound
js
and
add
into
add
xchg
jo
filds
aam
insl
add
pop
add
aam
roll
push
add
add
outsl
add
pop
add
add
and
insl
add
adc
sbb
ret
add
outsl
add
add
add
xchg
add
add
add
add
add
jo
adc
dec
add
inc
add
add
add
add
sbb
jo
addr16
add
add
add
add
or
add
out
add
add
xchg
add
add
dec
add
add
les
outsl
add
push
add
out
add
add
add
add
dec
add
xchg
lret
add
add
test
das
add
add
add
aaa
add
add
add
mov
add
add
add
in
add
add
inc
add
or
jle
ja
aam
sub
dec
add
lret
add
das
add
add
xchg
add
and
mov
add
popl
xchg
add
add
add
add
add
inc
add
popl
cmp
test
add
adc
xchg
add
insl
add
into
add
add
add
add
xchg
add
add
add
add
add
push
add
add
test
sbb
sub
add
mov
mov
sbb
filds
adc
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
sti
add
add
roll
add
add
out
add
add
mov
sub
dec
add
add
add
add
add
xchg
add
add
pop
add
add
adc
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
popl
push
add
aam
inc
add
add
dec
add
add
add
add
add
add
add
aam
sti
add
sub
dec
add
add
out
add
add
add
add
add
add
add
stos
add
add
xor
adc
dec
add
add
mov
out
add
add
bound
sti
add
adc
aam
lret
add
fwait
add
add
add
add
add
push
add
add
and
popl
or
mov
jg
and
add
add
add
add
and
add
add
mov
insl
add
add
add
add
add
mov
jo
cmp
out
add
add
add
add
add
add
ret
add
adc
pop
add
add
add
add
add
add
and
int3
add
add
add
add
add
cmp
inc
add
add
add
add
and
add
add
add
add
dec
add
dec
add
aam
add
mov
add
roll
sbb
sahf
add
add
add
add
add
jl
in
add
add
pusha
add
dec
add
add
add
add
add
xchg
nop
aaa
push
inc
xchg
push
imul
shll
lods
lcall
imul
xor
xchg
fcmovbe
mull
pop
aam
dec
and
lret
xor
xor
and
dec
cmpsl
mov
test
adc
cmpsb
dec
outsb
pushf
icebp
jecxz
jp
fimull
mov
or
sbb
cmc
or
ljmp
cltd
mov
in
insb
ss
xchg
ja
sub
nop
notl
mov
enter
pusha
or
cmp
push
clc
insl
mov
fcmovnb
xchg
test
shrb
and
and
lcall
pop
stos
imul
cmp
pop
or
mov
jmp
xor
int3
cs
or
pop
mov
movsb
jecxz
hlt
adc
fidivl
jmp
mov
les
cmpsb
dec
setns
in
xchg
jmp
jl
xor
sbb
lods
daa
xchg
push
outsl
push
adc
dec
cli
add
callw
imul
add
loop
aaa
mov
insl
add
xor
inc
adc
fstpt
data16
mov
sub
pop
out
pusha
cmp
bound
inc
add
mov
das
mov
loopne
dec
aam
dec
mov
mov
icebp
dec
xchg
fs
std
xor
jb
call
dec
stos
cmp
cwtl
push
rcl
test
in
jle
jl
imul
push
cmp
or
xchg
das
stos
jns
jns
lds
incb
testl
addr16
mov
in
push
mov
or
hlt
push
jb
scas
jo
or
mov
rorl
add
arpl
push
ffreep
fst
jb
mov
testl
pop
cs
xchg
add
fnstsw
lret
icebp
jmp
out
setae
inc
testb
aam
cmp
mov
loop,pn
aaa
cmp
dec
mov
mov
and
sbb
dec
push
push
push
stos
insb
mov
out
imul
mov
mov
and
sub
sub
and
jnp
lods
or
pop
int
pop
lock
mov
dec
xchg
fs
sahf
dec
jo
fwait
jecxz
pop
mov
mov
cld
sub
xor
fistl
push
and
mov
out
pushf
in
lahf
inc
xor
push
inc
push
or
jo
mov
jle
test
jecxz
aad
add
xor
or
aam
aam
jb
pushf
das
popf
push
test
xchg
stos
mov
fildl
lahf
daa
mov
fwait
test
mov
push
scas
mov
addb
lods
sbb
inc
mov
xchg
xchg
xchg
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
