call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
dec
jle
xchg
insl
mov
insl
mov
movsl
pop
icebp
int
fstl
in
and
xor
popa
mov
xchg
insl
mov
sbb
test
add
xor
cs
push
lods
and
xchg
insl
or
or
jmp
sahf
jle
inc
in
cmp
adc
pop
lcall
aam
in
negb
sub
add
stos
and
mov
std
das
or
sbbb
cltd
sub
cmp
inc
pusha
dec
js
jb
mov
mov
xchg
movsl
mov
or
push
inc
sarl
mov
mov
enter
or
sbbl
rorl
int
int
pusha
adc
int
inc
cmc
scas
lods
mov
jns
repnz
xor
in
xchg
sub
cmp
fstl
add
out
xor
adc
mov
mov
mov
xchg
push
shlb
mov
adc
inc
pushf
scas
lods
popa
aad
adc
jge
or
cmp
xlat
in
xor
jns
insl
popf
test
or
xor
or
sbb
dec
mov
inc
fsts
xchg
pop
call
and
adc
das
sarb
scas
jno
sub
filds
inc
mov
sbb
and
cmp
add
jl
or
loope
icebp
int
fstl
in
and
xor
popa
mov
xchg
insl
mov
sbb
icebp
int
fstl
in
and
xor
popa
mov
inc
add
xlat
pop
mov
xchg
mov
stos
jns
inc
scas
fwait
add
sub
insb
cmc
and
in
xor
aas
es
rcrb
loope
movsb
shl
out
fidivl
repz
fistps
jg
mov
cs
and
aaa
lret
jl
mov
fsubp
push
xchg
iret
decl
push
sarl
sub
inc
ret
test
pop
sar
orb
mov
hlt
nop
adcb
xchg
loope
rorl
lret
jmp
imul
sbb
jb
bound
jl
add
push
lods
frstor
mov
into
pop
addl
and
inc
sbb
jns
push
sub
mov
mov
subb
movsb
test
shlb
fidivl
push
inc
inc
pusha
inc
fsubs
push
adc
scas
in
enter
push
pop
mov
lods
fbld
add
test
dec
in
call
es
into
movsl
outsb
xor
cmp
test
sbb
repnz
fwait
mov
adc
add
jp
decl
mov
jb
mov
shl
mov
or
and
or
mov
push
fbld
test
mov
lods
js
gs
or
popf
cld
add
jecxz
and
cld
icebp
sbb
cmp
pop
pop
jne
aam
pop
or
add
insl
in
lret
imul
push
pop
or
push
insb
mov
adc
and
push
or
sbb
and
mov
push
pushl
iret
lret
xchg
movaps
jge
je
pushl
sub
rolb
push
push
ret
es
lock
push
bound
jno
and
fisubl
dec
gs
cmp
stc
jp
mov
sbb
jmp
jnp
sub
pusha
pushf
push
add
cmp
sbb
loop
scas
loop
inc
mov
inc
lahf
stos
das
add
lahf
cmp
jo
fcmovnbe
mov
mov
pop
and
push
cmp
ficomps
push
pop
or
movsb
or
mov
adc
fwait
mov
outsl
ljmp
xor
xor
movsl
xchg
scas
cltd
or
and
jmp
mov
imul
cmp
leave
push
hlt
lods
ljmp
mov
mov
pop
flds
in
mov
fwait
loopne
xor
lret
int
adc
andl
mov
out
or
xchg
ss
in
insl
mov
or
or
loop
inc
cmp
push
popf
or
popf
mov
inc
jns
push
aam
data16
sub
mov
inc
int3
adcb
or
jne
out
loop
cwtl
fs
cmc
lret
in
mov
je
std
in
add
mov
hlt
cmp
pop
movsl
mov
push
dec
xchg
fistpll
sbb
out
inc
mov
mov
js
ror
push
pop
test
fisttpl
and
mov
std
jge
ret
sbb
sub
or
sbb
xorb
out
rol
fs
xchg
adc
xlat
xor
push
decl
jmp
sbb
fcoml
or
jns
mov
mov
int3
mov
imull
sub
inc
in
nop
dec
jle
arpl
test
out
leave
ficompl
and
movsl
ret
jns
adc
xor
push
inc
out
fwait
out
test
xchg
scas
fs
add
idiv
mov
sub
roll
push
lods
cld
mov
outsb
mov
movsl
hlt
scas
mov
sarl
push
shrb
cmp
int
shl
pusha
jmp
mov
xchg
mov
xchg
xchg
xchg
mov
stc
cmp
adc
and
pushf
lock
push
icebp
push
mov
aaa
sbb
pop
jecxz
lods
aas
xchg
repz
lds
adc
pop
push
pushf
lret
mov
sub
cmpsl
lcall
xor
jle
mov
jb
sub
sub
add
movsb
xchg
rol
push
lcall
xor
lahf
xchg
add
xor
jg
daa
xchg
sub
cmp
mov
push
push
fwait
cmpsb
inc
pop
add
inc
in
pushf
xchg
push
out
in
sbb
xor
mov
lcall
enter
mov
and
dec
faddp
into
test
inc
add
loope
ja
sbb
inc
add
sti
bt
repnz
es
push
adc
pop
out
ljmp
xchg
pop
jl
shr
pop
push
leave
ds
mov
jp
cwtl
jne
sub
loop
or
pop
xchg
hlt
xor
jle
enter
pusha
sbb
inc
mov
out
push
mov
push
outsb
je
insl
rcrl
dec
adc
shrb
cmp
cwtl
inc
xor
and
push
out
or
repnz
xchg
xchg
int3
dec
sub
push
or
inc
pop
jl
inc
lret
jnp
loopne
ret
outsb
repnz
aas
adc
push
icebp
adc
dec
inc
fisttpl
mov
iret
testb
adc
cwtl
lods
push
cmc
add
mov
loopne
cmp
mov
test
loopne
ret
aas
cmp
rcrb
in
mov
scas
push
mov
cmp
scas
add
cmp
shr
ss
loopne
into
stc
add
lock
mov
dec
xor
push
mov
sbb
cmpb
in
cmp
das
inc
lods
xor
nop
jecxz
subl
iret
dec
mov
inc
in
mov
xor
cmc
rol
mov
hlt
push
and
xchg
lret
add
cmpsb
add
pop
shl
popf
sahf
pop
cmp
adc
cmpsb
mov
cli
rcl
jae
repnz
xchg
imul
push
popa
mov
dec
xchg
xor
fcmovnu
mov
stos
push
pop
daa
mov
stos
imul
lds
fmuls
or
cmp
cld
rcr
lret
fwait
dec
jns
mov
loope
stc
out
dec
xchg
dec
aad
or
pop
add
dec
outsl
push
addr16
fisttpl
push
cmp
pushf
mov
outsl
xchg
stos
xchg
sub
dec
repnz
dec
inc
xor
fimull
outsb
inc
sbb
popa
sahf
mov
std
or
xchg
testl
inc
shr
mov
push
lods
dec
push
in
fucomip
pop
sub
jg
pop
testl
xchg
pop
ret
pushf
sbb
popf
add
incl
lock
hlt
dec
mov
dec
cmpl
aam
mov
out
mov
stos
lret
add
adc
dec
lret
out
pop
fucom
xor
adc
dec
daa
xor
ret
pusha
fisttpll
dec
add
loopne
push
in
mov
cmp
mov
mov
lods
push
outsl
pusha
cmp
inc
roll
sbb
and
cmp
inc
fisubs
in
inc
add
cmp
das
sti
sarb
mov
je
scas
sbb
inc
lea
dec
jle
xchg
jnp
pushf
inc
jge
aad
fisubrl
popf
cmp
je
sbb
lock
add
jecxz
push
adc
add
pushf
pop
jl
and
pop
rcl
sbbl
and
mov
scas
and
pushf
in
inc
negb
movsb
cli
xchg
sbb
ss
add
jo
push
das
fdivrl
jae
pop
and
pop
imul
mov
sub
test
cmp
dec
jae
sbb
cld
into
cli
push
add
dec
pop
jnp
dec
outsb
scas
sbb
cli
mov
or
sbb
jae
jecxz
and
out
mov
and
out
aas
int
addr16
imul
cmp
loope
jno
mov
push
push
pop
data16
adc
mov
push
fcmovbe
add
popf
lds
add
clc
aad
xor
cmpsl
cmp
xchg
pop
pop
sbb
sub
xchg
lahf
movsl
fcompl
pop
mov
loopne
cmp
fsubr
xchg
das
loop
inc
ret
sub
loop
dec
std
enter
cmc
cli
xor
lds
test
stc
rolb
rcll
dec
ret
push
mov
inc
mov
adc
jno
test
fldt
hlt
xor
dec
jo
dec
or
fs
sahf
xchg
mov
cmp
mov
icebp
hlt
out
push
fdivrl
data16
xchg
xchg
fld
pop
fsubrl
orb
xchg
sbbb
scas
adc
mov
int
dec
cmc
in
cld
jle
sbb
mov
pop
insl
lock
movsb
adc
cmp
adc
mov
out
fisubrs
imul
sub
mov
xor
in
add
lock
std
repz
fisubrs
mov
push
iret
mov
inc
xor
xchg
dec
loop
jns
inc
pop
lods
mov
imul
cmp
jecxz
and
inc
push
int
divb
or
out
flds
loop
loop
dec
fwait
sbb
mov
lock
es
lods
cmc
rcrb
cs
mov
push
int3
filds
add
js
xor
pusha
jmp
sti
push
loope
push
maskmovq
divl
add
and
and
fstps
sti
push
xor
inc
test
push
arpl
icebp
mov
push
sbb
fucomip
jb
stos
cli
insb
mov
add
add
andb
cs
pusha
or
repz
sub
pop
jbe
xchg
cld
cmp
inc
pop
sub
xchg
addr16
adcl
ds
cmp
cmc
jbe
jg
ret
xchg
pop
mov
pop
insb
test
mov
cmpl
dec
push
pop
and
xor
adc
xchg
lods
lcall
sbb
sbb
xchg
leave
hlt
movsl
pop
lods
imul
mov
and
add
test
das
sarl
add
xchg
pop
cmp
cmp
sbb
xchg
ss
pop
rcr
sub
test
xor
ret
push
pusha
mov
xor
call
pop
jle
inc
scas
movsb
bound
adc
out
pop
adc
in
stos
or
shll
jo
jnp
mov
aaa
mov
sti
scas
xchg
clc
inc
jge
sbb
dec
hlt
leave
dec
in
mov
daa
mov
push
pop
dec
cmp
xchg
stos
adc
movsb
fadd
lret
arpl
push
mov
cwtl
and
and
jp
inc
pop
lds
loope
shr
leave
xchg
xchg
inc
dec
sub
ja
add
bound
movsl
push
mov
addr16
push
dec
inc
mov
and
push
leave
xlat
rcr
fucom
cwtl
mov
mov
push
fcomps
shrl
sub
mov
jl
in
dec
push
movsb
mov
insl
pop
push
xor
aaa
fdivrp
sbb
lods
sub
lods
push
imul
mov
inc
add
int3
aaa
or
and
xchg
dec
and
sbb
mov
out
xor
pop
cmpsb
ret
mov
mov
in
xchg
movsb
add
mov
sub
ds
loope
dec
jo
bound
mov
lods
icebp
int
mull
inc
pop
xchg
das
dec
xchg
inc
out
cli
sub
mov
sub
in
je
neg
inc
adc
lds
and
shlb
mov
push
add
adc
sub
hlt
jge
repnz
cmp
sbb
inc
mulb
jp
dec
jp
int3
add
push
mov
dec
repz
add
imul
push
and
fldcw
dec
cld
ljmp
rcrl
test
sahf
inc
cmpsb
sub
fcomi
int3
pop
jns
test
or
or
xchg
add
or
jbe
fbld
jnp
xlat
in
andl
mov
les
push
push
lds
fwait
jo
jno
push
jnp
jno
pop
cs
and
mov
jne
int3
jnp
lcall
fadds
daa
and
xor
cli
psrad
jae
push
call
inc
gs
pop
in
lret
into
icebp
popf
movl
xor
sahf
jbe
jbe
fldl
mov
sbb
mov
dec
xor
add
rorl
jns
nop
lods
clc
fistps
fstpt
sub
mov
shrl
std
pop
xchg
mov
push
inc
jne
pushf
push
repnz
popa
inc
xor
add
xchg
dec
ficompl
xor
clc
push
jp
mov
sub
arpl
movsl
jno
out
adc
scas
ficoms
leave
cmp
cmp
sub
outsb
fwait
mov
cmp
push
push
push
xor
lock
adc
xchg
insl
stos
fstl
jecxz
adc
lret
xor
xor
bound
fwait
gs
fdivs
push
jecxz
mov
push
movsl
lea
mov
orl
lock
xlat
mov
cmp
adc
les
mov
cmc
ja
shlb
lds
stc
pushf
shl
insb
add
sbb
or
sub
and
cmpsl
sbb
enter
push
push
clc
lahf
mov
jno
movsb
xchg
mov
or
adc
sub
fistl
loop
mov
xor
inc
sbb
adc
les
cmp
cmp
add
fistps
dec
mov
and
inc
pop
ljmp
int
xchg
pop
sahf
rorb
and
cli
add
aaa
mov
cwtl
aaa
xor
push
in
jmp
push
and
lods
fdivl
mov
div
push
jo
rcl
and
xchg
outsl
int3
jmp
xchg
cwtl
mov
dec
pop
mov
or
pop
mov
loopne
push
xchg
jo
mov
scas
sbb
dec
fadd
lea
pop
mov
jecxz
pop
dec
inc
xor
iret
out
addb
int3
fs
outsb
addr16
sbb
xor
aas
out
mov
ret
jp
pop
test
nop
test
bound
xor
pop
xor
push
mov
lds
or
int
fwait
mov
adc
sub
dec
inc
mov
sbb
aam
orl
xor
push
pusha
outsl
testb
loopne
lea
and
clc
add
mov
jbe
xchg
insl
fcompl
push
push
xchg
pusha
inc
imul
dec
repz
enter
dec
pop
test
or
sbb
repnz
sub
hlt
lods
mov
xor
arpl
dec
orl
outsl
stc
sub
add
add
xor
mov
pop
mov
cmpb
xor
add
add
pop
arpl
shrb
das
jp
jmp
cs
add
xchg
inc
push
enter
and
ror
fmul
xchg
fimuls
clc
push
ficoml
sbb
cld
ja
xor
inc
jae
int3
mov
imul
push
and
inc
sub
or
stos
pop
mov
mov
shrb
pop
or
adc
pop
or
cwtl
mov
aam
dec
mov
ret
adc
test
xchg
movsl
ret
sbb
add
int
mov
out
and
cmp
test
and
bound
repnz
push
lds
idivb
jo
cmp
punpckhdq
cli
inc
leave
jno
mov
push
mov
daa
out
imul
fwait
lods
movsb
jo
inc
je
xchg
fwait
ret
js
xor
xchg
sti
cli
jl
push
xor
adc
cmpsl
xor
inc
call
scas
or
in
pop
cmpsb
inc
push
sub
cld
pop
or
fmuls
pop
jne
xor
stc
xor
scas
cmc
cmp
rorb
mov
stos
mov
push
popa
pop
inc
ret
mov
out
xchg
inc
cmc
pop
mov
inc
ror
xchg
clc
xchg
test
cmpsl
sti
mov
push
jmp
push
subl
jns
cmp
dec
inc
pop
dec
jne
jg
or
pop
push
lea
mov
xor
jmp
dec
pushf
cmp
jb
adc
pusha
mov
and
cmp
in
inc
cmp
lret
popa
inc
out
pop
lea
shrb
or
pusha
or
jae
clc
mov
sti
aad
imull
inc
push
pop
int
cmp
in
std
fidivs
inc
pop
stc
xchg
add
outsl
pop
ret
dec
mov
movsl
jecxz
scas
xor
int3
popf
jbe
cli
adc
sub
or
mov
pop
je
xor
out
out
and
dec
add
sub
add
or
adc
mov
push
jne
into
adc
sub
and
sbb
sbb
xchg
inc
in
aam
xor
xor
les
sub
jbe
xchg
dec
hlt
and
xchg
rorb
stc
inc
rcrl
movsb
and
lock
fyl2xp1
jmp
pop
leave
push
cmp
test
sbb
push
xor
enter
and
or
pushf
and
dec
xchg
pop
mov
inc
sub
shrl
orb
cli
mov
xor
sbb
or
xchg
fsubrs
xchg
lea
xchg
fwait
adc
mov
mov
aaa
jns
jbe
ds
pop
cmp
rcll
mov
aas
pop
sub
cltd
push
adc
fsubrl
push
std
test
sub
jl
lret
stc
je
cld
pop
cmpsb
cmp
jno
mov
or
or
fnsave
fs
xchg
and
dec
scas
cld
xchg
ss
mov
inc
iret
cmp
adc
and
lods
dec
pop
xor
or
sbb
imul
jno
movsb
jle
sbb
test
dec
insl
sbb
sub
out
ljmp
aad
lods
ffreep
jmp
out
out
stc
mov
lahf
addr16
push
je
rorb
cmpsl
negl
or
mov
and
jns
push
inc
push
pop
out
jecxz
push
and
mov
or
pushl
pusha
out
xor
xor
jne
and
jo
pop
add
shlb
and
mov
mov
jb
sbb
cmp
lahf
lods
adc
int
leave
inc
adc
jae
ss
push
fcmovu
xchg
jne
jle
test
shrl
jle
test
xor
xchg
xchg
data16
mov
mov
ds
jge
gs
fistpl
dec
movsb
cli
roll
pop
or
pop
shrl
test
movsb
subb
cmp
mov
in
xchg
dec
jo
push
fsin
out
in
inc
mov
push
xchg
or
popf
sub
stos
les
mov
jp
mov
shlb
pop
xchg
push
neg
loop
daa
inc
lcall
aaa
insl
and
fsubr
fwait
lea
mov
jg
jp
push
mov
cmp
push
outsb
and
and
nop
in
out
inc
sbb
mov
lods
insl
sti
test
or
adc
les
rolb
repz
jle
add
cmp
arpl
jb
cmpsl
push
cmpsb
dec
mov
or
mov
sub
sbb
and
nop
and
out
out
mov
adc
and
movsb
mov
add
mov
push
jge
push
inc
mov
push
jbe
fldcw
add
xchg
xchg
cmp
xor
push
cmp
shlb
in
enter
sbb
mov
or
enter
fidivl
lcall
scas
data16
movb
jo
inc
jne
adc
or
push
adc
aad
pop
adc
lea
inc
and
or
sub
insl
fs
test
pop
push
jnp
out
and
dec
xchg
ret
arpl
out
push
pop
mov
stos
mov
fs
xchg
cmc
jnp
jo
xor
and
loope
nop
cli
pop
cmp
cld
cmpb
das
or
jns
jl
repz
sahf
scas
data16
add
pop
jmp
mov
pop
pop
out
addb
push
cs
sbb
jo
mov
mov
repnz
cwtl
push
sbb
jbe
xchg
xor
pop
repz
jno
mov
mov
xor
adc
cld
popa
fcom
cltd
sbb
bound
into
popa
mov
adc
leave
test
stos
xchg
test
rorb
dec
aad
pusha
out
xor
mov
xor
and
daa
cld
jp
rol
add
mov
mov
enter
xchg
push
mov
push
cmpsl
lahf
jle
dec
in
sti
loop
cwtl
xchg
mov
lahf
mov
mov
test
jns
fldl
push
daa
mov
lret
adc
xchg
cld
pop
fiadds
mov
sbb
add
cmpsb
ja
lea
mov
jb
fdivl
adc
std
inc
push
pop
lcall
fsubrs
jg
lods
ja
ds
dec
mov
jne
sub
inc
push
cwtl
push
push
mov
add
adc
push
push
out
sub
in
nop
xchg
es
in
xor
bound
ficomps
int
push
pusha
push
dec
push
pop
jmp
jno
pop
mov
push
push
xor
mov
mov
sbb
sbb
pop
rcrl
shlb
lcall
ficoml
mov
mov
push
push
mov
ds
adcl
fcoml
dec
dec
xchg
and
add
mov
pop
shl
test
and
addb
push
xlat
xor
ljmp
jl
es
sbb
mov
ljmp
jge
or
loope
icebp
int
fstl
in
and
xor
popa
mov
xchg
insl
mov
sbb
icebp
int
fstl
in
and
xor
popa
mov
fldcw
jge
or
loope
icebp
int
fstl
in
and
xor
inc
mov
xchg
insl
mov
sbb
icebp
int
fnstsw
cli
leave
adc
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
jle
outsb
mov
cmpsl
dec
insl
push
out
xchg
orl
incb
out
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
incb
mov
daa
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
push
pop
out
push
mov
rcll
mov
jle
xor
xor
pop
pop
stc
out
or
aam
xchg
pusha
add
cmp
shll
ret
out
ret
mov
mov
xchg
dec
bound
clc
adc
stos
inc
stos
lret
mov
fists
xchg
and
mov
jl
xchg
loop
add
popa
push
fdivs
jmp
popa
and
push
imul
xlat
aas
jmp
pop
xchg
out
pop
and
iret
sahf
mov
adc
addr16
insl
add
js
in
mov
aas
aas
iret
cmp
or
lea
jb
and
push
add
das
push
repnz
cwtl
add
xchg
aaa
dec
bt
imul
call
into
stos
iret
and
data16
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
addr16
adc
outsb
jmp
cs
sbbb
mov
pop
mov
mov
fisttps
fstpl
pushf
adc
enter
ret
pop
out
cmp
jbe
dec
imull
push
inc
xchg
dec
mov
xor
daa
sti
js
loope
test
sub
push
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
daa
cmp
cmc
or
adc
add
mov
inc
jp
push
dec
adc
sub
out
dec
cltd
out
mov
ret
cltd
push
sub
add
push
data16
sbb
in
xchg
jo
xchg
push
sbb
cmp
inc
push
jle
add
lods
push
cmp
and
add
out
jbe
push
or
rcrb
add
test
setns
inc
in
jmp
pop
into
lds
imul
fadd
jp
inc
push
dec
push
pop
sub
xor
push
dec
or
pop
sub
push
jne
pop
cltd
mov
fwait
decb
add
dec
jbe
xor
jle
cli
roll
inc
mov
mov
ret
int
jecxz
test
adc
mov
xor
adc
or
jnp
mov
and
test
sbb
jp
mov
jnp
jo
hlt
lods
roll
lock
push
popa
neg
pop
push
and
push
out
pusha
outsb
xchg
scas
in
or
inc
andl
xchg
or
push
push
sbb
dec
push
xor
and
aaa
ds
sub
sbb
push
inc
cmp
ds
mov
and
bound
adc
packuswb
jmp
inc
mov
push
xchg
testb
arpl
inc
jnp
pop
mov
arpl
imulb
cmpl
mov
lea
ficomps
int
mov
sbb
outsl
testl
aad
xchg
xchg
andb
jb
mov
mov
cmp
or
or
add
andl
leave
push
mulb
sbb
lret
adc
sbb
push
out
push
bound
pop
mov
sub
inc
adc
int
mov
and
inc
sbb
cltd
cmpsb
jge
data16
lds
pop
lea
jno
pop
enter
fcmovbe
iret
lds
sbb
adcl
outsl
out
cmp
outsl
mov
fdivr
xor
push
dec
int3
push
jno
dec
mov
xor
xchg
cld
adc
cmpsb
xor
mov
sub
sarl
test
stc
adc
cmc
ds
jmp
mov
pop
inc
lahf
or
and
push
xor
push
pop
xchg
xchg
aas
fisubs
push
lret
sub
divb
jecxz
int3
add
rorl
xchg
test
sbb
les
jae
push
push
dec
mov
icebp
xor
or
sbb
pop
int3
push
mov
pop
test
cld
add
sub
cltd
int
cmp
dec
push
and
cmp
push
mov
push
lods
jns
icebp
sti
outsl
cmpsb
mov
xor
andl
in
imul
dec
testl
dec
addr16
int
popa
xchg
fnsave
imul
add
cmpsb
test
adc
fcomip
cmp
mov
fstpl
ds
int
out
mov
dec
cmc
outsl
adc
sub
out
pop
aaa
mov
ljmp
adc
push
in
sbb
data16
and
mov
sbb
lock
cmpsl
dec
and
lret
pusha
sub
and
cwtl
jns
bound
cmpb
lods
mov
or
shrb
mov
das
pop
sbb
ljmp
in
cmp
movsb
inc
pop
and
push
jl
nop
test
das
lea
pop
scas
sbbl
inc
inc
sbb
jle
mov
popf
mov
rcl
pusha
lods
das
lret
daa
das
cmp
inc
dec
lds
push
jecxz
ss
jp
cmpsl
add
xchg
push
add
lea
scas
dec
outsb
xchg
lahf
sahf
bnd
sbb
dec
aad
jge
stc
repnz
dec
scas
add
xchg
cwtl
sahf
lahf
xor
xchg
iret
mov
fsubrs
dec
mov
and
mov
jo
adc
or
aam
lds
inc
xor
subl
sti
data16
stc
gs
or
test
add
inc
rorb
xchg
or
sbb
lcall
ror
sub
adc
inc
xor
sub
dec
enter
mov
xchg
add
in
rorb
adc
or
jge
xchg
movl
jp
hlt
scas
cmp
mov
sub
push
lret
sub
push
push
sarb
pop
data16
movsl
out
int
clc
and
inc
and
aas
aam
push
cs
fwait
iret
es
dec
out
lods
adc
roll
push
rcr
mov
ljmp
js
stos
xor
ficoml
sbb
ret
push
adc
xchg
loop
iret
cmp
inc
ds
enter
mov
ror
insb
lds
inc
lods
sbb
movl
inc
clc
or
add
inc
lds
cmp
jmp
or
shll
sub
or
enter
xchg
dec
lret
jne
notb
jle
add
push
add
cltd
je
xchg
mov
dec
les
call
daa
je
fwait
out
and
fbld
push
imul
push
aam
loope
and
aaa
mov
test
mov
inc
out
jmp
mov
mov
mov
jmp
cli
addr16
jae
cmpsb
mov
or
loop
sar
dec
inc
ret
mov
adc
stos
mov
fwait
or
sbb
loope
std
add
cmp
mov
hlt
ds
pop
test
stos
cmp
jge
ss
and
mov
fists
dec
xor
xor
mov
mov
fs
cmp
loop
sar
jg
dec
shl
out
cwtl
push
jmp
fidivs
add
mov
loope
loop
push
cmp
inc
arpl
int3
dec
and
fidivs
add
imul
mov
loopne
stos
lods
or
hlt
mov
xlat
shlb
or
mov
push
xchg
pop
popa
lds
jp
inc
xchg
adc
xchg
icebp
adc
sub
xchg
jbe
xchg
cli
jb
xor
aaa
mov
shll
scas
shll
xor
sub
dec
push
xchg
in
daa
lahf
adc
sbb
pop
dec
xchg
repnz
mov
gs
inc
mov
xchg
or
fstl
mov
sahf
adc
xchg
push
scas
cmp
loopne
xchg
xchg
ds
xchg
fwait
jp
fnstsw
fsubp
enter
jne
repz
mov
out
loope
popa
mov
mulb
push
mov
cltd
loopne
xchg
sahf
das
iret
and
loope
jmp
gs
and
mov
rcll
add
jnp
pcmpeqb
xchg
rcrb
mov
jecxz
nopl
cmpsl
test
inc
xchg
popf
or
dec
and
repnz
leave
iret
std
xor
adc
or
xchg
pushf
in
std
out
dec
mov
jno
add
xchg
adc
mov
cmc
pushf
mov
inc
jnp
xor
jecxz
mov
clc
in
mov
test
mov
jge
inc
jo
or
in
ja
xchg
in
pop
dec
jns
sbb
pop
jo
adc
mov
xor
xor
icebp
push
data16
outsl
mov
cmp
scas
push
gs
mov
faddl
xlat
loop
pop
repz
or
mov
dec
enter
test
adc
jo
daa
adc
xchg
scas
mov
mov
ljmp
cmp
aas
xchg
or
fwait
outsl
pop
push
jg
mov
jg
mov
xchg
rcll
incl
jnp
pop
push
xor
pusha
dec
filds
dec
sti
mov
push
mov
cli
bound
and
aas
cmpsb
jl
or
and
es
insl
shrl
push
mov
in
cmp
or
inc
cmpsl
xchg
int
inc
sbb
pop
inc
repnz
add
or
cmp
je
adc
mov
dec
in
jns
outsb
pop
rorl
loopne
imulb
xor
insl
and
je
out
mov
fisubl
fiadds
mov
or
dec
js
push
xchg
clc
andl
ret
pop
orl
dec
icebp
rcll
fmuls
and
jb
out
ljmp
or
fildl
sub
fisubs
jo
cwtl
mov
fs
mov
rcrb
or
xchg
inc
aaa
cltd
insl
lret
cmp
fs
pop
cmp
in
out
pop
popa
adc
push
xchg
inc
mov
movsb
subb
iret
push
cs
ret
push
sbb
call
daa
faddp
xor
gs
stos
xor
pop
and
pop
std
cmc
lds
ud1
fs
add
jb
fadds
push
sahf
sahf
and
mov
xchg
jg
insb
or
jl
push
lret
pop
or
mov
jle
aas
xchg
xchg
int3
test
loope
test
aas
cld
fwait
xchg
aam
cli
sti
mov
inc
push
lods
pmaddwd
lods
gs
ss
push
push
outsb
mov
adc
movsl
les
popf
jbe
inc
mov
sbb
xchg
lret
sbb
lea
addr16
cmpsb
or
sbb
cs
and
loopne
inc
mov
aad
dec
ror
mov
test
aaa
sub
cmpb
mov
dec
lds
pop
jo
mov
cmp
mov
fcomps
sbb
test
stos
add
add
xor
xor
cmpsb
lret
push
lcall
stos
enter
xor
cwtl
rcrb
push
sub
sub
mov
or
fidivrl
mov
xor
aam
or
dec
or
push
sbb
mov
imul
or
add
mov
lea
orb
pop
bswap
or
lret
mov
jnp
insb
mov
pop
cmp
and
lea
cwtl
adc
lahf
mov
cmp
adcb
sub
cmpsl
icebp
ja
sub
or
outsb
cld
rorb
push
out
sbb
ljmp
loop
outsl
mov
cmc
dec
insl
add
push
std
add
loop
call
and
sbb
dec
hlt
shll
mov
mov
xorb
mov
sub
mov
pop
mov
int
jo
push
idivl
not
add
jns
int3
pop
mov
sub
sbb
enter
outsb
jb
mov
mov
gs
cmp
outsb
add
jle
xor
mov
fildl
lcall
dec
int3
add
push
inc
sbb
popa
mov
in
lret
and
mov
cmpsl
dec
gs
outsl
fs
enter
jp
je
clc
and
lahf
add
insb
mov
mull
sub
hlt
jno
push
inc
int3
sub
aaa
dec
dec
jg
pop
add
mov
mov
stos
fldenv
mov
outsl
pop
pop
dec
loope
not
sub
push
xchg
sbbl
push
add
jmp
push
xchg
cli
cmp
bound
mov
shlb
mov
lds
sarb
js
test
arpl
pushf
bound
ret
mov
mov
punpckldq
cs
jl
push
lret
mov
int3
push
insb
add
and
xchg
cmp
inc
jmp
mov
cltd
push
leave
mov
xlat
sbb
ret
mov
jno
hlt
fwait
js
mov
jmp
push
andb
mov
pusha
daa
out
pop
mov
xor
or
inc
xchg
fldt
sub
cmp
pop
or
sbb
push
jno
int3
jp
loopne
popf
cvttps2pi
int3
dec
adc
iret
dec
push
xchg
das
cwtl
cmp
jmp
mov
add
mov
add
adc
jo
pushf
aam
mov
adc
test
int
xchg
daa
sbb
pop
movsb
pop
cs
loop
test
mov
push
bound
mov
push
pop
pop
dec
adc
in
inc
sub
xchg
sbb
sbb
push
shl
mov
dec
xchg
push
les
dec
cmp
and
push
inc
jae
or
cmpsl
popf
xchg
movsb
fsts
xlat
in
mov
fwait
in
rcr
dec
ss
data16
mov
add
and
jp
ss
pop
test
xor
cmp
adc
out
add
enter
cmp
mov
outsl
add
clc
aas
push
shrb
xor
cmpsl
fwait
inc
jg
push
scas
add
hlt
mov
cs
loope
into
loope
cmpsb
dec
es
mov
jb
or
sbb
mov
mov
mov
lahf
xchg
mov
psubb
cmc
clc
adc
mov
dec
movsl
in
outsl
mov
imul
pop
add
xorb
or
sbb
push
ds
leave
lods
mov
adc
lods
or
add
inc
and
imul
jb
push
gs
das
fstps
push
cli
jmp
into
hlt
jge
mov
xchg
repz
cmp
mov
jnp
mov
or
test
mov
pop
in
stos
out
lds
xchg
addr16
divb
movsb
stos
inc
jmp
mov
xchg
pop
or
sub
dec
das
inc
xchg
jge
ljmp
and
jbe
arpl
push
fisubl
pop
lods
imul
ss
cwtl
mul
jb
shr
xchg
loopne
sbb
mov
test
call
push
ss
in
inc
cmpsb
lcall
insb
pop
push
insb
das
aad
pop
jno
scas
icebp
xchg
adc
mov
sahf
mov
and
dec
push
or
xchg
shr
or
push
push
dec
mov
pusha
rorl
adc
insb
fwait
pop
and
dec
mov
pop
cs
popf
mov
les
adc
popf
mov
in
frstor
adc
stos
dec
hlt
lea
fs
push
aas
dec
mov
sti
push
cltd
subl
and
push
jmp
pop
sahf
js
jno
ja
adc
or
add
sti
xchg
hlt
add
adc
insb
or
mov
mov
out
mov
repz
out
xor
cmpsb
jp
cmpsl
cwtl
pop
jae
mov
stos
lods
sub
repnz
xchg
ds
rorb
in
jl
aas
lods
dec
and
in
inc
cmc
cmc
repnz
lahf
xchg
shl
inc
jbe
push
mov
mov
cs
ficomps
push
cmp
xchg
sbb
imul
push
lods
or
jp
adc
sub
das
xor
lahf
dec
hlt
jmp
pop
inc
cmpsl
add
mov
sub
adc
std
inc
and
mov
popf
push
insb
inc
add
mov
mov
and
pop
pusha
pusha
push
mov
xchg
rcrl
jg
movsb
jecxz
xchg
jbe
xor
les
push
cwtl
std
pop
pop
cmp
cli
mov
rcll
pop
jecxz
inc
test
push
and
int3
sbb
cld
push
cmp
mov
pop
jecxz
ss
sbb
inc
iret
inc
lea
lea
aad
adc
out
mov
adc
dec
sbb
xchg
inc
mov
in
adc
cltd
lock
sub
sahf
inc
inc
mov
xchg
cld
mov
jns
jmp
test
bnd
mov
mov
dec
inc
les
mov
add
daa
test
add
les
movsb
in
xlat
adc
mov
jo
xchg
cli
jmp
lahf
pushl
rcll
outsb
mov
sti
push
in
in
mov
mov
out
inc
call
pushf
add
dec
lods
jge
fmull
jo
lahf
inc
into
mov
dec
test
adc
out
mov
jg
push
lods
push
dec
lods
cmp
outsl
test
push
jmp
mov
gs
or
mov
mov
xor
inc
xchg
cmpsb
push
stos
insb
es
sbb
lods
cmp
mov
pop
push
jge
movsl
bnd
mov
push
xlat
mov
adc
orl
jae
shlb
rcr
enter
movb
fistpll
xchg
push
aaa
push
xor
mov
leave
pop
inc
mov
cmpb
ss
in
bound
dec
aad
jnp
sbb
pop
pushf
cld
punpcklwd
rclb
adc
or
fwait
repnz
mov
push
ljmp
cld
mov
sub
lret
inc
cmpsl
test
lcall
or
mov
or
addl
mov
daa
out
aad
sbb
imul
iret
push
pop
sub
stos
cmpsb
ficomps
into
cmpsl
adc
and
daa
mov
ja
xchg
sbb
push
or
lahf
andb
mov
loope
call
or
daa
sbbl
ja
adc
je
adc
cmp
xlat
mov
sub
mov
rcll
inc
and
imul
fcompl
loopne
cmp
adc
push
rol
pusha
into
insb
ret
or
dec
push
mov
and
rolb
jb
or
cmp
cs
clc
or
mov
cs
jmp
ss
add
enter
jp
mov
or
jb
jnp
ja
outsb
sub
filds
rcrb
pop
lods
xor
in
scas
ret
lods
xchg
arpl
jne
mov
fmuls
scas
pop
stc
dec
insl
or
stos
jno
sti
mov
xchg
pop
jle
add
fcoml
fs
decl
dec
jmp
mov
pop
stos
or
inc
lcall
jecxz
adc
and
fyl2x
repnz
repz
and
jno
test
bound
xor
jno
cmp
adc
add
xlat
dec
inc
jg
mov
cs
push
out
rclb
mov
aad
pop
loopne
add
xchg
popa
push
fwait
cmc
xor
dec
xchg
jnp
xchg
inc
dec
pop
cli
stos
mov
fidivs
pop
push
imul
fldl
clc
and
xchg
pop
js
lahf
inc
loopne
mov
and
pop
mov
add
int
push
mov
dec
push
dec
push
mov
mov
xor
xchg
cmp
pusha
pop
jo
popf
movsb
das
scas
pushf
mov
or
cmc
ss
test
cmp
jns
cmpsb
ror
ds
ja
movsl
repz
enter
xchg
mov
in
sbb
push
inc
std
loop
aas
leave
insl
call
add
shll
cmp
sbb
stos
adc
ja
cmpsb
lds
cmp
xor
cli
sbb
inc
imul
rcll
sbb
mov
dec
mov
mov
pop
cld
mov
jo
in
jo
cmp
mov
dec
add
jns
mov
pusha
mov
mov
cmpsb
adc
stos
jno
incl
imul
push
fs
fists
mov
push
in
inc
push
scas
jns
outsl
mov
inc
outsb
inc
pop
jo
ds
adc
cld
negb
aaa
jg
xor
xor
inc
jle
fidivl
adc
jle
sbb
mov
lcall
scas
sbb
es
movsb
and
dec
lret
cli
xchg
out
push
jns
movsl
insl
pop
push
cltd
pop
das
ret
repz
ja
pop
loope
pop
popf
hlt
or
xchg
sbb
lret
sub
subb
mov
shrl
movsl
pop
outsw
dec
sub
xchg
dec
sahf
lahf
adc
or
lea
jg
fnstenv
fsubrs
scas
push
xchg
xchg
pop
popf
push
and
mov
mov
sahf
pop
and
sbb
mov
js
xorb
add
ljmp
ret
sti
insb
push
imul
dec
mov
imul
mov
fiaddl
leave
adcl
mov
jp
push
mov
jbe
lahf
aaa
std
fbstp
dec
daa
mov
aad
xor
dec
jmp
rclb
sub
movb
push
jae
into
mov
and
movsb
imul
sub
ret
sahf
inc
xchg
xchg
cwtl
sarb
push
inc
fdivr
test
or
int
cmpsb
lods
outsl
test
ficomps
push
jnp
mov
es
sbb
jo
lcall
ror
sbb
inc
negb
push
and
aad
sub
mov
jle
mov
lea
push
test
imul
sub
es
sahf
inc
bound
ds
mov
push
in
vandps
xchg
into
and
js
add
push
cmc
rolb
mov
mov
fidivrs
adc
push
fucomp
lock
cmp
xor
repz
pop
mov
cmpsb
or
mov
mov
cs
jb
push
test
adc
aam
sbb
or
push
andl
jne
xchg
lock
je
push
push
data16
cmp
xchg
aas
xchg
sub
pop
cmp
push
js
outsb
pop
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
out
mov
cmpsl
dec
xlat
ds
scas
negl
out
pop
jle
out
aaa
fisubs
into
push
mov
data16
pop
cmpsl
dec
xlat
ds
negl
out
pop
incb
inc
popf
fisubs
mov
mov
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
out
idivb
imul
mov
inc
jns
pop
es
aam
or
sbb
jmp
fldenv
mov
jns
inc
push
pop
out
cmp
or
sbb
dec
idivb
push
scas
cmpsb
cltd
mov
xchg
push
pop
sub
push
sub
jp
pop
jae
js
mov
lcall
lea
outsb
pop
pop
loop
xchg
or
xor
scas
ljmp
pop
mov
imul
repz
cmp
push
sbbb
rcll
inc
or
push
xchg
cmpsl
jbe
dec
lds
push
fsubp
jmp
flds
dec
xchg
adc
in
repz
mov
cmp
mov
mulb
sbb
push
add
xor
lcall
shll
dec
and
ret
test
leave
sub
pop
pop
xchg
sbb
or
add
out
dec
or
xchg
cwtl
xor
xchg
mov
inc
mov
jae
gs
mov
mov
xchg
jbe
inc
dec
push
gs
push
sub
movsl
mov
aam
cld
xchg
fisubs
adc
inc
in
cmp
outsb
ss
gs
jo
scas
xchg
mov
cmpsb
sti
repz
loopne
stos
add
daa
or
sbb
daa
pop
cmp
arpl
lcall
ljmp
cltd
imul
push
pop
sub
cmp
or
sbb
jmp
fldenv
mov
jns
dec
push
pop
sub
cmp
or
sbb
jmp
stc
aaa
pop
into
mov
insl
and
adc
inc
add
outsl
int
iret
inc
adc
sbb
mov
ficoms
sbb
out
mov
jmp
mov
rcl
mov
lahf
data16
popa
sbb
cli
mov
dec
fs
fldenv
stc
hlt
or
dec
lods
repz
popa
and
mov
xchg
imul
ret
fsubrs
sbb
jb
das
and
loope
jg
mov
inc
inc
sub
pop
xlat
enterw
add
mov
outsb
cmpsb
push
into
call
jmp
pop
movsb
add
mov
pop
fldcw
imul
icebp
loopne
inc
cmpsl
jmp
push
inc
mov
mov
scas
mov
mov
jae
rcrl
ret
inc
int3
jo
xchg
lods
push
lcall
out
pop
jecxz
jge
scas
xor
dec
ja
int3
sub
movsb
outsl
icebp
and
fwait
or
pop
inc
pop
in
adc
rolb
outsb
inc
ret
mov
dec
sub
adc
inc
push
dec
repnz
leave
pop
push
pop
outsb
outsl
inc
roll
mov
fisubs
std
mov
repnz
lods
adc
mov
int
shrl
inc
inc
fstps
xor
lds
cmpsb
mov
test
mov
in
das
jle
mov
xor
loop
loop
enter
fists
fcomp
aad
lods
mov
mov
shl
scas
adc
and
repz
cmp
aaa
fimuls
incb
inc
dec
inc
mov
mov
xchg
cli
or
or
add
jb
mov
xor
insl
orb
jo
mov
sbb
pop
nop
pop
repz
nop
mov
cmpsb
mov
ficoms
rclb
dec
iret
lods
mov
bound
in
xlat
jg
pushf
mov
xor
les
aam
mov
lret
std
jb
aad
cmp
add
mov
or
ds
daa
and
aam
xchg
incb
or
lock
dec
xor
cmp
push
daa
cmp
nop
sub
movsl
addr16
not
pop
sti
cmpsb
xchg
add
jbe
daa
sub
cld
lret
pushf
xor
and
sub
mov
pop
dec
mov
cmp
pop
mov
iret
xchg
add
aaa
cmpsl
outsl
fbstp
bound
pop
push
xchg
jne
cli
sbb
fnstenv
push
ror
mov
pinsrw
subl
mov
mov
xchg
insb
mov
adc
pop
lds
paddsb
je
lods
in
push
insb
mov
sub
decl
das
cmp
loopne
das
inc
xchg
add
sub
jecxz
pop
rcr
inc
inc
pop
mov
jecxz
mov
mov
testb
sub
mov
ss
mov
lcall
mov
mov
int
inc
mov
filds
xor
push
jg
sub
xchg
fbld
mov
orl
inc
xchg
addr16
jns
movsl
jmp
shrl
sub
stos
popa
int3
mov
jo
imul
aas
xorl
xor
dec
imul
cmp
push
cmc
xor
and
insb
adc
repz
cli
idivl
and
fwait
jns
pop
jge
fildl
into
icebp
push
inc
xor
push
je
rcll
addl
rcrl
les
pushf
aas
xchg
add
or
shl
mov
sub
dec
inc
mov
scas
xor
call
repnz
arpl
hlt
stos
adc
push
subl
mov
lahf
pop
mov
test
sub
fadd
sub
push
sub
xchg
out
sbbb
sub
sub
insb
cmp
push
int
jne
js
test
sbb
inc
insb
mov
xor
int
dec
movsb
mov
and
mov
mov
xchg
dec
sbb
xchg
sbb
pop
repz
sbb
je
add
enter
adc
adc
aad
push
lods
shll
mov
dec
sbb
insl
inc
push
dec
ljmp
mov
xor
test
in
insb
iret
in
xchg
push
sbb
fucomip
cmp
adc
out
push
push
adc
mov
shrl
ds
xor
sub
mov
lods
ret
cld
dec
ja
lret
mov
mov
pop
testb
insb
pop
cs
sbb
enter
jo
cmpsb
inc
push
mov
hlt
mov
mov
int3
inc
daa
mov
in
movsb
add
lods
clc
xor
push
and
mov
add
fsubr
pop
outsl
in
xchg
inc
mov
rcrl
jp
sub
inc
jo
ror
xor
mov
in
fwait
mov
push
mov
push
shll
aad
jle
rcrb
xchg
sbb
pushf
adc
imul
stc
adc
cmc
adc
jg
pop
nop
and
xchg
and
popf
fistps
pop
mov
jae
push
inc
test
enter
fxch
cmp
loop
test
fstl
dec
stc
inc
enter
lea
xor
or
mov
mul
mov
arpl
jno
jle
jbe
leave
ret
cmp
mov
pop
or
sti
pop
sbb
cmp
push
cli
ret
pop
and
cmpsb
xchg
cmp
push
push
jmp
fnstcw
push
stc
cltd
or
and
test
fstpt
cmp
test
pop
sti
push
pop
mov
mov
xor
mov
das
pop
dec
js
movsl
xchg
jnp
aas
loope
jae
iret
push
imul
inc
mov
mov
mov
in
popa
gs
orl
mov
add
test
stos
pop
push
std
out
push
add
jo
clc
xchg
dec
movsb
mov
aas
repz
lret
push
mov
mov
xor
rolb
lret
adcb
cltd
rolb
mov
ret
scas
sub
or
fwait
aas
jo
rorb
jecxz
je
mov
popl
pop
outsb
faddl
sahf
rcrl
pop
subb
xchg
call
pushl
sbbb
mov
inc
cltd
push
ret
cmpl
aas
addr16
sbb
push
aas
out
pop
popa
lods
xchg
dec
mov
sahf
dec
test
mov
sub
stc
out
movsl
out
xor
dec
mov
fiaddl
inc
les
ret
loop
mov
sub
adc
pop
pop
sarb
aam
fdivr
ja
hlt
xor
sbb
cmc
jle
cwtl
push
daa
xchg
adc
mov
mov
fnstsw
test
fdivrp
mov
imul
mov
and
test
ja
sub
sbb
push
jl,pn
test
jl
test
mov
es
std
sub
outsb
add
push
xor
insl
cmp
in
out
not
xor
iret
xor
push
popa
or
adc
stos
jae
xor
das
xor
push
mov
pop
lea
jecxz
add
ja
jmp
inc
push
mov
xchg
cmpsl
arpl
ret
jge
mov
mov
fs
and
das
mov
sub
daa
jns
out
jo
das
stos
ret
mov
scas
pop
cmc
xor
push
jnp
insb
sub
out
int3
adc
jae
mov
js
lods
mov
inc
in
cmp
add
sub
jmp
push
popa
xchg
rorb
cmp
jns
lods
mov
outsb
pop
and
enter
lret
mov
jle
pop
test
push
loop
aad
xor
call
jmp
call
mov
je
gs
mov
mull
push
or
push
jge
mov
xor
lret
test
mov
lods
mov
enter
xlat
lds
jg
add
xchg
clc
xchg
mov
cmp
push
sub
test
ljmp
add
call
jo
adc
mov
push
add
insb
mov
adc
jae
movsl
test
inc
stos
xor
xor
fcom
add
call
inc
sub
sbb
jbe
adc
pop
adc
mov
inc
push
xchg
test
ds
push
outsl
and
popa
push
xor
daa
mov
lret
mov
lret
or
in
cs
mov
repnz
fcomp
pop
into
adc
adc
pop
repz
jmp
int3
inc
sbb
bound
xor
adc
mov
cmpb
dec
dec
jecxz
xchg
or
inc
testl
rorb
push
mov
cmp
cmp
int3
or
lods
pusha
dec
adc
divl
pusha
addl
scas
pop
mov
mull
pushf
fdivs
fidivrs
jecxz
lea
mov
insb
xchg
pop
les
cmp
ret
mov
add
out
sub
insl
push
mov
out
jne
push
daa
adc
addb
je
adc
xor
cwtl
int3
adc
cmpb
add
shlb
jmp
enter
push
cli
stos
stos
or
pop
adc
icebp
sbb
imul
adc
mov
out
pop
inc
fwait
pop
out
dec
iret
sti
dec
jo
and
mov
lret
les
and
jg
lahf
xlat
push
dec
xor
test
add
inc
fsubs
sbb
iret
mov
inc
xor
out
cmpsb
jle
mul
fnsave
mov
fsubs
mov
cmp
push
fists
mov
or
jo
addl
ljmp
aam
stos
test
jl
cwtl
mov
or
or
mov
inc
push
pop
jnp
lret
dec
push
or
pop
and
dec
mov
fs
pop
xchg
pop
sarl
adc
lods
mov
jnp
dec
adc
or
lds
mov
and
sub
insb
and
shlb
pop
mov
fs
or
xchg
add
out
lds
xchg
scas
inc
dec
fwait
stos
rcrb
divl
fisttps
lret
pop
inc
nop
lahf
lret
or
xor
jmp
sub
in
push
cld
dec
jo
mov
out
lahf
push
dec
push
xchg
xorb
mov
sbb
notl
pop
sub
jnp
mov
les
rol
mov
sub
daa
cwtl
lcall
and
mov
push
mov
jo
loope
loope
imul
cmc
repnz
out
sbb
jge
aaa
mov
sbb
xchg
pop
cwtl
loope
sub
enter
sbb
cmc
xchg
sub
filds
mov
int
mov
rcrl
inc
and
xor
testl
mov
or
sti
shlb
cltd
xchg
or
add
jecxz
push
movsb
cmpsb
iret
scas
jnp
in
push
inc
cs
push
mov
insl
adc
sub
sbb
rclb
pop
test
inc
stc
scas
xchg
or
add
jge
pop
adc
popa
loop
data16
outsl
dec
dec
shrl
ret
outsb
and
lcall
lds
pop
inc
push
mov
mov
jbe
in
sbbb
push
mov
dec
outsl
xor
mov
adc
rorb
or
inc
mov
arpl
mov
xorl
pop
adc
bound
sub
adc
jl
sbb
push
mov
hlt
insb
adc
mov
xlat
or
mov
push
test
sbb
pop
add
rcrl
push
push
cmpb
mov
outsl
ret
andb
add
scas
les
nop
sub
outsb
push
cmc
adcl
push
in
icebp
jno
pop
xor
jbe
movsl
in
and
xchg
aad
ret
jae
inc
mov
and
xchg
mov
mov
inc
repz
mov
clc
mov
mull
pop
cmp
jmp
ret
sahf
mov
xchg
sbb
xchg
pushf
xor
mov
push
inc
cltd
mov
inc
out
inc
sub
jl
ja
xchg
xor
lea
or
popa
mov
xchg
pop
jnp
call
adc
adc
mov
inc
adc
sub
mov
cs
and
inc
xchg
out
int
addb
out
push
ret
sbb
mov
mov
adc
lcall
adc
cmp
rcll
cmp
inc
lahf
cmp
xor
dec
sub
inc
rolb
cmc
cwtl
jb
fstpt
mov
pushf
xchg
rcll
les
rorb
sbb
xor
sub
fbstp
rol
add
pop
cmp
fs
dec
daa
jle
leave
bnd
ret
lods
cmp
roll
cli
test
addl
and
insb
int3
xchg
mov
xlat
gs
imul
repnz
loop
les
push
loop
jecxz
hlt
and
inc
scas
jecxz
pushf
mov
sbb
cmp
mov
cld
jne
gs
ror
ds
sbb
mov
adc
pop
adc
test
lcall
mov
shl
pop
icebp
push
jae
test
fstp
adc
add
and
outsb
mov
mov
mov
stc
or
lods
jle
pop
dec
sti
scas
enter
sbb
mov
pop
stc
mov
jge
xor
hlt
sbb
mov
mull
scas
clc
ret
out
and
hlt
pop
movsb
lock
dec
mov
dec
push
mov
jl
xlat
leave
mov
movsl
cltd
pop
nop
addr16
outsb
fnsave
subb
in
shlb
in
cmc
adc
mov
cli
adc
jl
push
in
adc
arpl
xchg
inc
outsb
inc
enter
imul
test
and
test
jb
clc
popa
daa
pop
inc
jb
jns
test
stos
fsubr
loop
stc
jl
imul
jmp
ds
test
test
std
rolb
xor
cmp
add
push
stc
add
out
out
aad
imul
lret
out
les
js
push
mov
sub
and
xor
loopne
fcompl
repz
xor
mov
enter
cmpsl
les
jl
mov
lods
jae
jo
rol
test
lock
jmp
mov
stos
das
std
add
mov
subl
data16
dec
fcoms
sub
inc
mov
int
cmp
pushf
repz
push
pusha
out
mov
aas
pusha
jle
pop
sub
mov
push
lret
jb
es
dec
sahf
inc
repz
sbb
popf
and
mov
sub
xchg
mov
sub
xchg
cmp
pusha
fs
add
ljmp
and
pop
mov
popa
ja
dec
cmpsl
jecxz
dec
rcll
mov
dec
jns
cmp
mov
leave
loop
aas
and
cmc
cmp
xchg
push
cli
inc
das
mov
xchg
xor
cmp
fidivrl
sub
imul
add
sbb
mov
test
mov
pushl
push
adc
jne
ja
adc
cwtl
gs
jp
clc
pusha
mov
sbb
popf
pop
xor
roll
sbb
test
les
lds
xchg
mov
jnp
mov
push
div
shrb
xor
cltd
sbb
in
aam
adc
or
jle
add
test
repnz
cmp
inc
add
lds
lock
pop
inc
push
xor
enter
bnd
adc
fdivs
mov
xchg
in
dec
and
je
pushl
stos
test
xchg
in
or
sub
addr16
outsb
mov
or
lds
jge
push
sbb
ljmp
dec
pushf
movsb
xorb
mov
ret
out
adc
aad
shrl
bound
lods
sarl
loopne
sbb
lea
jge
lahf
je
call
test
xor
xchg
icebp
sarl
fisttpl
jge
outsl
cmp
push
cwtl
jp
sbb
daa
jmp
xor
ds
or
jbe
ror
stos
xorl
into
aad
jmp
jno
repz
lock
sahf
add
popa
pop
sahf
cmp
ja
jg
rcl
in
movsl
cmc
pop
or
fstps
mov
pop
icebp
lock
or
push
test
add
cmp
andb
push
gs
cmp
in
arpl
jecxz
sub
push
pop
popf
jle
addr16
orb
dec
sbbl
push
xchg
scas
sbb
into
or
mov
xchg
call
jge
dec
das
loope
icebp
das
jbe
adc
fprem1
jbe
mov
jg
xor
loope
dec
hlt
mov
xchg
lock
xor
mov
ss
out
xor
cld
xor
push
jmp
cli
mov
mov
dec
mov
addl
fisttpll
xor
cmova
loop
in
outsl
inc
lods
loopne
in
adc
mov
pop
xchg
in
push
pop
inc
addb
xor
mov
out
mov
addr16
iret
adc
mov
inc
jl
fcompl
sbb
jg
jg
sub
push
mov
or
jne
loope
cmp
adc
mov
jno
jno
sub
or
enter
mov
gs
jg
pusha
adc
loope
mov
rcrl
pop
mov
jae
sub
and
cs
mov
sbb
push
pop
jae
mov
mul
or
aam
out
imul
sbb
lods
push
cld
xlat
or
xchg
jle
ljmp
loopne
sahf
xor
sub
push
mov
xlat
leave
aas
adc
sahf
push
sbb
mov
push
cmc
gs
pop
push
ja
fcmovb
repz
sahf
jp
sahf
js
sub
push
data16
mov
lea
lods
enter
inc
in
mov
push
jecxz
mov
mov
arpl
js
sub
fcmovnbe
jae
cmp
adc
mov
pusha
out
mov
and
shll
das
dec
push
bound
push
xlat
sub
out
fsubl
push
inc
dec
js
into
dec
push
out
mov
jg
popf
xor
pusha
jnp
mov
dec
movl
shrd
test
cmp
jp
inc
js
mov
xor
mov
sub
sbb
push
mov
jecxz
lret
fs
pushf
add
xchg
testb
in
adc
add
add
out
inc
or
cmp
cmp
les
cmp
adc
pop
cmp
jb
xchg
pop
mov
outsb
sub
jo
mov
pop
std
jmp
insl
movb
scas
mov
test
insb
faddp
fwait
sbb
fwait
inc
cld
ds
icebp
mov
scas
inc
pop
lods
mov
push
gs
lds
sub
inc
movsb
inc
cwtl
cmp
sbb
rcrl
in
sub
sub
int
xor
add
push
adc
das
or
dec
imul
aas
sahf
movsb
pop
les
push
notb
sub
in
test
xchg
in
sbb
mov
mov
xchg
xlat
cmp
sbb
rcr
clc
jge
outsl
hlt
fcompl
xor
fsubrl
scas
pop
xor
lret
xchg
mov
loope
pusha
popf
aaa
mov
dec
mov
xor
jae
xchg
jl
cltd
jb
push
pushf
test
out
cmp
dec
test
insl
or
pop
movsb
arpl
adc
dec
mov
movhps
adc
xchg
mov
dec
das
sub
shlb
pop
mov
cmc
and
shlb
fs
push
adc
fs
sbb
jg
xor
out
shlb
push
adc
push
xchg
pop
call
cmp
mulb
aam
xor
addb
inc
bound
push
sub
sub
pop
lea
mov
int
sahf
and
int
imulb
xchg
sub
sarl
outsb
xor
cwtl
pop
xor
jge
mov
xorl
fcmovu
adc
rorb
mov
mov
pop
push
jg
dec
push
jne
or
scas
dec
add
mov
jns
lcall
sbb
sub
xchg
push
dec
xor
push
fisttpll
sub
jge
mov
ffree
stos
cltd
sbb
pop
and
pop
insb
inc
xchg
lods
sbb
rclb
lahf
add
push
sbb
cmp
pop
test
jbe
sbb
cli
cmpl
lcall
pop
repz
add
aam
push
adc
pop
sbb
cltd
ficoml
fbstp
clc
popf
rclb
sub
push
mov
movsl
jge
in
or
pop
cmp
int3
fldenv
mov
jns
dec
push
pop
sub
cmp
or
sbb
jmp
fldenv
mov
jns
dec
push
pop
sub
cmp
or
sbb
in
jbe
inc
rcl
frstor
test
push
cltd
pushw
inc
dec
push
push
es
push
std
out
negb
cmpsb
test
xchg
pop
xchg
jbe
in
dec
push
cs
push
inc
inc
jbe
popaw
insb
sarl
dec
icebp
pop
loope
nop
dec
mov
mov
jno
popa
scas
adc
and
sarl
and
pop
loope
xchg
aas
orl
push
incl
jo
popa
out
je
add
rorl
loope
xchg
pop
adcl
push
fsubl
adc
pinsrw
fistl
add
test
sub
outsb
aad
xor
test
int3
mov
ljmp
in
roll
insb
add
xchg
sub
inc
mov
push
add
pop
xchg
sarl
cmp
dec
es
jle
pop
push
bound
ja
sahf
mov
mov
pop
aam
in
mov
nop
aas
xor
lods
mov
push
add
and
push
ret
sbb
mov
iret
mov
adc
xchg
rcll
mov
or
cmp
sub
push
sti
inc
inc
add
sahf
and
in
push
xor
dec
icebp
pop
loope
xchg
inc
orl
push
gs
mov
adc
addr16
rorl
mov
jnp
pop
aad
and
frstor
inc
out
cli
inc
and
addb
cli
out
xor
push
cmpsl
xor
je
xchg
out
fidivs
nop
adc
jl
aas
orl
push
incl
jno
popa
scas
adc
and
jg
dec
icebp
pop
loope
xchg
aas
orl
push
incl
jno
popa
scas
adc
and
fldl2t
lea
xlat
add
mov
pop
lods
add
mov
jb
push
mov
in
cwtl
mulb
push
xor
into
add
out
sbb
mov
inc
imul
inc
out
pusha
mov
pop
cmpb
sbb
pop
sahf
or
or
cmp
mov
push
mov
out
out
sub
xchg
sbb
scas
lods
ja
mov
lds
jecxz
or
mov
dec
in
lcall
jl
mov
lcall
pop
ljmp
pop
int3
inc
lock
adc
ljmp
repz
add
and
cwtl
daa
sub
xchg
mov
cmpsb
lahf
sub
xchg
addl
inc
adc
and
or
mov
push
in
leave
in
push
ret
cli
outsb
push
cmp
cmova
cld
ja
arpl
cmp
push
sbb
dec
js
sbb
fbstp
and
ljmp
es
outsl
xor
cltd
pop
and
adc
mov
adc
lahf
mov
sub
lcall
bound
fisttpll
outsb
roll
imul
inc
daa
loopne
cld
inc
push
pushf
push
push
adc
fcomps
jp
pusha
arpl
ror
push
ss
or
sarb
out
inc
xor
clc
ja
lods
pop
mov
or
mov
dec
sbbl
std
pop
fstpt
adc
xchg
and
mov
scas
jne
jg
movsl
cld
popf
add
mov
repz
insl
mov
mov
xor
cwtl
mov
inc
es
ljmp
xchg
xlat
icebp
sbb
arpl
and
jb
aam
add
mov
cld
xor
decl
pushf
mov
test
scas
outsl
subl
movl
xchg
sub
xchg
and
cmpl
mov
aas
xorb
pop
sub
stos
dec
sbb
pop
test
stos
dec
scas
add
mov
icebp
stc
xor
pop
inc
pop
xor
ja
sbb
xchg
mov
pop
mov
and
out
mov
sub
stc
inc
lret
out
lahf
dec
ret
lds
or
popa
test
xchg
stos
mov
dec
mov
enter
shll
pmovmskb
mov
repnz
mov
xchg
pop
mov
sub
and
movsl
nop
xor
jnp
mov
pop
push
lret
ficoms
jmp
inc
mov
cmpsl
aaa
bound
sbb
xor
stos
inc
inc
enter
aad
aam
mov
sub
es
xor
mov
mov
cli
dec
dec
mov
add
test
add
mov
icebp
adc
mov
push
dec
outsl
addr16
int
dec
or
inc
iret
push
inc
cmp
cmpsb
jg
xor
insl
out
loope
adc
mov
cli
subb
and
arpl
in
pop
mov
mov
pop
or
hlt
sti
pop
adc
jecxz
xchg
xchg
mov
pusha
jmp
jg
xchg
mov
xchg
pop
ljmp
push
dec
cmp
add
xor
cmp
cmp
das
es
dec
ror
fdivs
stc
jge
rorb
and
mov
cli
push
add
cld
and
jo
ret
dec
sar
call
andb
xchg
mov
mov
mov
ret
xlat
test
popf
lret
iret
or
imul
js
sbb
dec
jb
push
pop
xchg
cmc
bound
cmp
in
jnp
sar
push
mov
inc
xchg
pop
outsl
test
sbb
xchg
int3
fldl
mov
jmp
push
ror
xlat
mov
xchg
aam
es
jnp
jl
popa
pop
dec
std
dec
pop
daa
adc
and
leave
push
clc
dec
push
mov
xor
fadd
and
int
fisttpl
daa
rcr
cmp
sahf
sbb
push
rcrb
sbb
pop
pop
flds
testl
arpl
push
das
mov
inc
push
out
add
cwtl
push
jl
jmp
aas
inc
insl
fisubl
xor
int3
clc
dec
insb
jg
lahf
les
cmp
in
jle
jmp
orb
aas
movsb
pusha
int3
outsb
or
insl
lods
or
mov
or
and
push
jmp
sti
je
aaa
aam
mov
xlat
or
inc
cmp
inc
aad
pusha
adc
or
mov
adc
cld
out
xlat
std
test
in
push
test
mov
imul
out
rclb
jno
call
xchg
arpl
pop
push
outsb
jge
pop
repz
pop
inc
mov
sub
ret
adc
fisubs
ljmp
inc
dec
and
dec
fistpll
pop
int
jecxz
mov
scas
add
xchg
js
and
aam
vmulpd
ja
arpl
lds
fdivr
shlb
adcb
mov
inc
cld
shrl
jbe
sbb
add
adc
jae
cmc
je
add
mov
add
pop
push
mov
leave
dec
push
shrb
pop
mov
and
pop
xor
push
lds
dec
xchg
popa
icebp
push
testl
mov
fsts
fnstcw
and
in
add
mov
mov
mov
xor
sti
shrb
mov
insb
popa
mov
mov
lea
dec
loop
mov
negb
xor
jns
dec
insl
pop
rclb
pop
sbb
loope
mov
stos
scas
sbb
cli
mov
hlt
iret
stc
sbb
mov
push
hlt
pop
push
inc
inc
mov
or
les
gs
js
push
out
icebp
js
xchg
cmc
roll
dec
dec
mov
lea
mov
xlat
loope
or
test
pusha
xchg
addl
daa
dec
push
jnp
dec
sub
pop
add
dec
fcompl
jae
out
test
adc
cs
jecxz
xchg
insl
sbb
mov
add
jp
push
xchg
push
add
movsl
inc
jmp
push
lret
sbb
dec
lods
and
dec
jo
mov
or
sbb
push
ficoml
xlat
cmpl
inc
int
lahf
in
adc
jb
adc
addb
jge
idivl
jmp
mov
hlt
in
scas
mov
mov
mov
cltd
ret
sub
movl
out
sbb
push
ss
pushf
data16
insb
push
icebp
dec
sbb
lods
xor
ret
sti
outsb
fwait
sbb
enter
or
sub
xor
mov
sbb
inc
cld
or
cmp
adc
mov
int3
mov
mov
push
fistpl
mulb
cli
adc
push
je
add
pop
stos
pop
or
mov
xor
leave
dec
and
arpl
pop
filds
push
add
xchg
cmp
roll
rorl
pop
and
or
test
mov
aaa
and
int3
mov
push
xor
mov
data16
rclb
push
inc
jge
jge
push
rolb
pop
lret
call
fwait
stc
repz
test
or
jmp
ds
outsb
icebp
ja
add
mov
popa
jge
dec
mov
jle
cmpsl
arpl
mov
xchg
push
std
jmp
add
test
push
popa
xchg
and
dec
stos
out
sub
lret
mov
xor
mov
cmpsb
sti
push
fwait
sbbb
sbb
fdivrl
hlt
inc
mov
sbb
cmp
mov
or
dec
mov
sahf
mov
outsl
divb
fs
mov
movsl
sub
test
xorl
sub
test
mov
jecxz
xor
into
push
pop
orb
in
xchg
data16
mov
daa
jl
mov
mov
mov
push
es
stos
xor
pop
repnz
jno
mov
mov
insl
loopne
mov
dec
jb
fwait
icebp
mov
mov
pop
je
xlat
sbb
add
rcr
scas
leave
xor
add
xor
pop
cltd
inc
in
jmp
pop
and
fisubl
stos
iret
pop
mov
sub
xchg
adc
test
inc
mov
lret
lret
inc
in
xchg
mov
jg
jmp
mov
xchg
es
js
mov
test
pushf
loope
stos
xlat
aad
xlat
in
data16
loop
sub
cmp
add
and
xor
push
es
sub
xor
mov
cmpl
fwait
adc
fsubl
xor
sub
leave
jo
push
inc
stc
sbb
xchg
and
in
xor
push
adc
cmp
js
xchg
fiadds
push
jb
out
mov
lods
mov
shll
sub
icebp
inc
rorl
and
xorb
in
call
xchg
push
xor
xchg
js
pusha
idivb
cmc
xor
sub
jp
cmpsb
mov
sahf
cli
rol
popa
in
lret
leave
clc
repnz
xchg
icebp
daa
stos
dec
xor
pop
sub
fwait
clc
cmp
je
jae
stos
and
xor
xchg
and
and
aam
dec
xchg
mov
lret
sbb
pusha
sti
inc
bound
cmp
cwtl
xor
fs
jae
sbb
imul
cld
adcl
fwait
sbb
jns
shlb
insb
ret
mov
iret
mov
lret
and
mov
xor
push
pop
or
stc
or
jl
shll
dec
fmulp
jl
jbe
pop
cmp
pop
gs
sahf
cmpsl
xor
xor
pushf
cmp
xchg
mov
mov
push
add
test
pop
jno
jns
imul
and
xchg
push
arpl
js
mov
or
into
jae
mov
stc
adc
lcall
or
xchg
cmpb
ret
add
sbb
cmc
fiaddl
ja
test
shrl
pop
stos
inc
mov
jg
lea
mov
push
xchg
xchg
or
inc
mov
jno
or
mov
push
sti
xchg
or
jns
sbb
push
testb
popa
jae
mov
test
in
xor
sub
and
mov
dec
cmp
jecxz
fwait
int
add
jbe
jge
push
push
xor
pushf
add
aas
es
sti
fstps
testl
outsb
cmc
jp
loop
sarb
and
mov
popa
mov
fmulp
enter
xchg
incb
jne
fucomi
std
jbe
adc
xchg
sarb
pop
inc
push
daa
mov
mov
movsl
addr16
lcall
ret
and
inc
shlb
fisttps
add
xor
shrl
and
fisttps
shl
daa
movsb
inc
push
lret
test
mov
lods
xchg
xchg
js
and
inc
cmpsb
pop
gs
mov
scas
jle
nop
sbb
js
shrb
idivl
pop
jnp
mov
cmp
jg
pop
lds
cmp
ljmp
cs
fcoml
ret
sbb
sahf
ret
jne
and
push
pop
jl
ret
xor
imul
push
rorl
cmp
repnz
fmul
or
in
add
jnp
dec
or
add
insl
cld
pop
ret
xchg
or
sti
push
or
dec
lcall
mov
jmp
faddl
ljmp
xchg
and
inc
dec
mov
gs
mov
sub
pushl
stc
xor
shrb
sbb
or
int
imul
cli
insb
lods
mov
xorb
insb
mov
stc
loop
xchg
out
mov
jae
ds
mov
push
cwtl
dec
insl
sahf
out
out
jb,pn
int
mov
jne
loop
std
cmp
jo
inc
sahf
or
int3
icebp
loop,pt
pop
imul
mov
aas
pcmpeqb
cmpsl
lock
lods
sub
inc
or
adc
and
and
test
jbe
scas
iret
lcall
out
sti
test
xchg
adc
inc
dec
out
movsl
sub
aaa
icebp
adc
ljmp
mov
jns
mov
ret
adc
fldcw
shl
ja
sbb
xchg
pop
rcrb
jg
xor
arpl
fldenv
pop
cmp
mov
inc
push
push
pop
jl
sbb
sbb
lcall
shrl
sub
xchg
scas
vcvttss2si
xor
mov
or
or
mov
adc
adc
jge
dec
sub
lods
mov
fwait
mov
mov
bound
dec
pop
inc
paddb
xor
hlt
int3
test
scas
cmp
leave
cmp
mov
scas
adc
adc
fs
xchg
jge
cs
adc
dec
push
dec
jnp
push
fbld
cwtl
push
push
repnz
add
insb
cmp
pop
jb
push
scas
pop
push
pop
inc
inc
cmc
stos
aad
pushf
popf
push
jns
sbb
jo
imull
xor
repz
mov
jno
xchg
lds
into
cld
fs
mov
xchg
aam
mov
aaa
ss
decb
mov
aas
sbb
bound
repnz
outsb
dec
push
inc
in
jp
inc
push
pop
test
mov
add
dec
mov
call
or
dec
mov
dec
xor
pusha
mov
cmc
and
fsubl
push
dec
lea
popa
daa
shr
into
jbe
in
pushl
dec
iret
adc
out
dec
ret
dec
lret
mov
loopne
xchg
loopne
or
jbe
clc
cmc
nop
mov
xlat
aas
mov
in
inc
and
push
sub
sbb
test
lahf
or
pop
jp
and
cmp
dec
push
andb
loopne
nop
cmp
leave
inc
shl
vmwrite
lret
mov
mov
int3
push
inc
outsb
mov
lahf
jge
mov
imul
fstpl
lcall
xchg
fdivrp
inc
repnz
push
mov
pop
cs
dec
filds
sbb
fsubs
les
or
stc
mov
mov
pop
xchg
sbb
rcl
fmuls
lock
repz
addr16
movsl
cmc
imul
xchg
mov
sbb
ffree
jle
sub
xchg
inc
mov
cltd
mov
mov
mov
adc
adc
hlt
rorl
fwait
stos
push
test
popa
push
add
dec
stos
out
xor
xor
sbb
mov
and
push
jne
das
cli
and
xor
mov
lret
mov
mov
push
rep
ficoml
add
js
test
xor
sub
mov
shlb
push
fists
rcrl
add
mul
inc
in
les
stos
bound
jno
loop
lahf
mov
pop
xchg
mov
mov
int
mov
or
sub
lock
daa
mov
lds
adc
mov
loopne
aam
call
cmp
xchg
int3
xor
sub
or
sbb
mov
negb
mov
jl
loop
and
shrb
inc
into
mov
iret
cli
cmc
incl
fmulp
mov
pop
mov
adc
xor
ja
xor
push
fisttpl
pop
adcl
scas
loop
dec
and
out
pop
rorl
je
stos
xchg
push
sahf
mov
and
andb
repnz
add
out
cltd
incl
push
cmp
pop
pop
mov
mov
rcrb
fwait
and
shll
les
adc
push
cs
and
lcall
fwait
mov
push
call
mov
or
aam
mov
ja
pop
incb
sub
subl
fs
mov
hlt
test
dec
mov
in
es
ss
add
sbb
xchg
adc
lods
into
push
pop
pop
sbb
dec
icebp
cmp
jge
dec
daa
add
in
test
mov
cmp
cwtl
jbe
dec
jle
cmpsb
dec
cmp
jmp
mov
and
js
popf
scas
mov
jae
loopne
lret
mov
push
add
push
les
jbe
cli
and
mov
dec
mov
xchg
repz
mov
mov
push
in
gs
jg
lret
mov
cmp
mov
xchg
and
shlb
test
daa
mov
xor
or
dec
cltd
adcl
mov
daa
pop
and
ja
std
lock
jne
roll
sbb
out
push
out
stos
jle
xorl
in
or
mov
pop
push
push
adc
xor
rorb
inc
pop
mov
stos
lock
mov
out
bound
loopnew
popf
ljmp
lods
fisubrs
repnz
add
leave
pop
ds
jecxz
inc
jl
jge
popa
mov
fstpt
pop
jno
pop
shll
js
ja
inc
fldt
aad
jno
arpl
sub
xor
cwtl
inc
jge
mov
lahf
ret
pop
daa
sarl
sbb
lock
or
lahf
daa
out
stos
test
xchg
shll
adc
fdivrl
jecxz
mov
xchg
icebp
xchg
mov
enter
pop
fstl
out
jne
mov
push
jl
xchg
xor
xchg
adc
mov
push
lea
xchg
xor
mov
loopne
and
rorb
test
mov
stc
pop
sbb
cld
xchg
cmpsb
inc
jmp
orb
or
mov
sbb
pop
mov
pop
andl
mov
xor
ret
xor
or
cmp
nop
sub
flds
adc
push
mov
or
xchg
xchg
add
cs
ficomps
mov
cld
scas
cmp
xchg
xchg
mov
xlat
movsl
icebp
lret
inc
jecxz
pushf
mov
cmp
push
les
xchg
jecxz
loopne
mov
adc
mov
leave
jp
filds
fistpl
sbb
adc
push
cli
out
push
or
mov
outsl
push
in
pop
sti
pop
sub
clc
pop
inc
sarb
lea
int
cwtl
gs
push
cmp
xor
and
mov
xor
mov
pusha
jae,pt
adc
mov
cmpsl
lcall
mov
mov
push
and
pop
and
pusha
ja
add
jbe
xor
cmp
test
pop
out
jne
addr16
jne
push
or
jle
jo
inc
pushf
or
inc
mov
pop
or
call
leave
push
mov
mov
mov
dec
cmp
xchg
out
xor
ss
adc
jmp
add
push
lcall
int
mov
stos
push
aad
cmc
fsub
imul
sub
mov
popa
loop
leave
loop
into
cmp
or
je
dec
ss
jns
mov
pop
jo
mov
add
aad
loopne
nop
sbb
push
shll
jno
adc
add
gs
sub
ljmp
jmp
dec
sbb
pop
pop
pop
into
lods
std
pop
xchg
aad
movl
fwait
out
pop
sbb
mov
cmp
dec
xchg
or
leave
pop
xor
movsl
jg
imull
and
outsl
xchg
loopne
mov
push
mov
jmp
cmp
cmpsl
fnstcw
ds
push
lds
pop
xor
inc
push
imul
xor
leave
or
mov
call
or
jle
jge
out
sbb
pusha
push
dec
xor
lret
pushf
icebp
and
repnz
or
jge
in
mov
repz
jle
mov
mov
or
and
pusha
mov
lods
test
sbb
pop
mov
in
and
int
pop
xchg
icebp
aaa
pop
jns
jg
fdivl
and
xor
rcr
lahf
shlb
ja
mov
enter
cmpsl
in
pop
fbld
std
mov
cmp
dec
pop
in
jns
and
push
and
notb
das
in
insl
push
loop
int
push
cwtl
aam
sbb
inc
mov
aas
mov
sbb
jno
sti
and
pop
jo
repnz
pushf
pop
dec
jle
sub
call
mov
es
add
in
js
arpl
incl
pop
inc
and
xor
push
mov
cmp
in
in
cmpsl
jb
sub
not
ljmp
pop
rclb
test
sbb
push
mov
js
je
sub
jne
frstor
mov
xchg
mov
or
popf
mov
mov
es
jmp
inc
pusha
or
lret
sbb
mov
sbb
sub
push
mov
hlt
pop
and
push
sarl
lods
push
lds
ss
pop
jo
pop
insl
sbb
lret
stc
in
push
je
fisubs
out
cvtps2pi
enter
adc
inc
cmp
or
pop
loope
xchg
aas
orl
push
incl
jno
popa
scas
adc
and
jg
dec
icebp
pop
loope
xchg
aas
orl
push
incl
jno
popa
scas
adc
and
dec
shrl
pop
loope
xchg
aas
orl
push
incl
jno
popa
scas
adc
and
and
adc
xchg
das
orl
push
add
gs
push
fcomps
pusha
fdivrp
mov
pop
test
jle
das
xchg
popa
mov
rolb
xor
mov
inc
mov
mov
mov
xchg
jle
push
hlt
push
les
aam
cs
xor
pusha
into
fs
jne
inc
scas
push
mov
pushf
jbe
addr16
pop
in
push
fdivl
ret
and
sub
pusha
decb
cmp
aaa
clc
cmp
aaa
enter
in
loope
divl
int3
push
int
clc
test
mov
movsb
adc
pop
test
test
xor
sbb
ss
sbb
fmuls
and
test
fpatan
sub
push
sbb
pop
int3
shlb
dec
lret
push
push
push
jmp
fwait
sahf
xor
je
movsb
pop
outsb
pop
dec
shrl
fisubrs
aam
adc
dec
add
frstor
popa
add
mov
mov
mov
xor
aam
les
sub
lret
ficoms
stos
adc
into
out
adc
scas
lods
inc
inc
inc
mov
lret
outsb
sbb
and
pushl
sti
sti
adc
jmp
push
push
scas
fs
mov
test
fs
push
out
push
les
int
cmp
testl
fcmovbe
sub
pop
loope
lock
pop
cltd
jo
inc
mov
cmpsb
jbe
jp
or
adc
and
mov
loope
xchg
jnp
jge
sub
dec
xchg
push
es
mov
add
pop
icebp
xor
push
fcmovne
jbe
or
aam
and
xor
add
adc
mov
scas
push
mov
test
jle
push
hlt
push
les
aam
and
xor
add
adc
mov
scas
push
mov
fisttpll
insl
lret
xor
jnp
xchg
mov
or
mov
fs
fdiv
les
mov
scas
pop
adc
je
pusha
sub
mov
jl
int3
fwait
rcll
mov
dec
movsb
add
fisttps
add
scas
call
pop
in
sub
in
pop
mov
push
test
pop
cmp
push
mov
xor
push
xor
adc
push
xor
sbb
inc
lret
push
fcoml
cmpsb
loop
aam
test
pop
and
dec
adc
xchg
icebp
call
dec
je
jle
push
dec
pop
or
mov
cs
ficompl
dec
in
jecxz
arpl
mov
dec
jo
ret
push
inc
loopne
inc
ret
icebp
sbb
or
mov
lcall
lret
into
adc
mov
adc
inc
hlt
mov
or
dec
jo
andl
pop
inc
or
aam
push
fcompl
inc
das
pop
loope
inc
xor
inc
jl
out
mov
test
enter
jae
mov
push
push
std
bts
xor
pop
jmp
mov
ljmp
pop
sbb
inc
pop
ds
fadd
xchg
cmpsb
fstps
cmp
xchg
pop
stos
xor
add
in
int
out
adc
sub
push
sub
inc
gs
xor
dec
cli
mov
movsl
mov
mov
decb
add
and
add
pop
push
inc
cld
cltd
loopne
cmpsb
call
clc
add
xchg
in
and
ss
sahf
jns
int
mov
loop
inc
pop
xchg
push
sbb
mov
xchg
loop
jne
or
mov
arpl
movsb
lcall
imul
test
cli
orl
lods
pop
mov
jg
data16
mov
lahf
jg
enter
inc
xor
pop
jnp
orb
adc
pop
int3
ret
fldcw
lcall
into
add
enter
inc
inc
pop
in
aas
pop
push
loopne
fiadds
inc
cld
arpl
sahf
fdivrs
xchg
insl
das
jp
data16
and
test
adc
push
out
pusha
mov
mov
push
loop
xchg
icebp
dec
xchg
pop
shr
mov
add
jge
lea
inc
mov
push
outsl
das
lret
daa
xchg
insl
loop
mov
add
push
enter
aam
add
add
push
jae
pop
ja
inc
or
adc
cmp
mov
shll
and
les
push
std
add
sub
pop
out
cmp
das
sub
sbb
adc
repz
xor
sbb
xchg
xchg
dec
lea
inc
call
pop
cltd
lcall
stc
dec
add
sub
aam
decb
jge
push
jno
outsb
mov
add
and
sub
push
test
popf
cmp
cmc
fidivrl
fcoml
lret
push
scas
arpl
fsubrs
sub
sub
icebp
adc
xor
aad
sbb
daa
add
jge
jge
or
cmpl
lret
daa
movsl
cmp
adc
push
xchg
xchg
cli
mov
mov
movsl
adc
dec
jnp
sahf
jne
jg
adc
imul
pop
add
pop
sub
stc
add
and
inc
mov
sbbl
dec
imul
popf
inc
mov
mov
mov
mov
popa
inc
add
lret
repnz
stos
test
test
insl
jae
mov
xor
mov
rcrl
mov
pop
fistps
inc
fnsave
adc
add
dec
fnstsw
test
or
insl
add
dec
cli
test
icebp
cwtl
push
adc
sub
mov
sub
push
xchg
pop
dec
adc
out
sahf
add
cmpsb
out
lcall
cmp
lcall
sbb
cmp
sbb
imul
sbb
push
mov
add
fnstenv
int3
mov
or
cli
jnp
shll
outsb
orb
lret
push
mull
sub
loope
sub
dec
sbb
in
shll
mov
dec
xchg
or
mov
pop
fnsave
imull
roll
add
out
test
jl
sub
push
je
or
pop
sub
push
mov
pop
cmp
xor
lock
push
popf
mov
mov
cmpsb
cmp
mov
shlb
add
and
sti
jne
and
faddp
inc
mov
out
popf
stos
lods
negb
pop
addr16
in
sub
xchg
or
pop
pop
outsl
pop
iret
fucom
scas
jns
add
loopne
pop
shll
push
sub
add
sub
inc
stc
out
pop
shl
aaa
dec
xlat
addb
inc
repz
xor
jb
xor
flds
push
jb
aad
add
and
mov
inc
mov
pop
inc
cmp
dec
jge
filds
sahf
je
push
icebp
lret
pushfw
xor
mov
lret
add
int
sub
xchg
ds
mov
mov
in
leave
in
pop
movsb
arpl
loopne
mov
mov
lahf
lods
inc
xabort
adc
cmp
inc
push
xlat
sbb
leave
sti
lret
stos
or
inc
inc
mov
addb
push
out
and
out
mov
nop
in
lods
adc
rcrl
and
lock
insb
add
mov
mull
loopne
movntq
xor
push
test
test
push
rorb
outsl
pop
pop
icebp
adc
ja
test
xlat
pop
into
enter
and
aaa
cs
mov
and
out
xchg
sbb
mov
xor
in
jbe
inc
andl
dec
adc
shrl
xor
in
cwtl
mov
pop
mov
int3
not
mov
pusha
lahf
sarl
test
xor
lret
or
cmp
sub
sbb
sbb
ss
movl
enter
xchg
xchg
orb
and
jl
jbe
es
insl
jp
cmp
test
pop
in
setle
cwtl
movsl
test
mov
pop
testb
mov
inc
cvtpi2ps
inc
int3
inc
loopne
mov
mov
mov
mov
or
or
sti
mov
pop
push
xor
or
lds
mov
sbb
lcall
out
iret
cwtl
enter
outsb
add
cmp
test
push
js
inc
mov
jmp
fsubrl
sbb
das
cli
mov
lcall
pop
inc
ja
fs
pop
and
and
or
mov
incb
sbb
cwtl
mov
xlat
mov
xchg
pop
jo
mov
stos
cmp
out
fistpll
sub
movl
out
rolb
out
data16
mov
divl
cwtl
adc
or
test
lret
das
fidivrs
pop
ljmp
adc
jmp
repnz
add
dec
sub
ss
dec
fdivl
sbb
jo
sub
into
sbb
cld
jo
xor
jb
xor
add
lret
in
loop
incl
jge
mov
mov
call
sub
imul
ret
sahf
das
add
and
aas
or
popa
int3
stc
enter
xor
mov
push
out
mov
sub
jae
popa
add
sbbb
test
push
vpmacssdd
cmp
mov
test
fildll
popf
jge
pop
shl
fdivrl
push
popf
adc
scas
pusha
dec
pop
sti
stos
mov
inc
fisubrs
fidivrl
inc
xorb
sbb
fs
xchg
popf
and
mov
mov
outsb
sbb
lds
sti
cmp
cs
jae
aaa
jge
xchg
sar
xchg
pop
xchg
cli
sub
xchg
rolb
or
ret
das
repnz
dec
hlt
xlat
xor
jle
clc
pusha
ja
xor
xlat
mov
mov
xchg
int
sub
test
popf
inc
shlb
aam
and
in
dec
lods
jge
loop
or
jns
daa
gs
jbe
inc
and
mov
pop
push
out
fmul
ret
mov
test
push
and
cmp
hlt
cs
xchg
fildl
mov
sbb
aam
xlat
stos
js
or
dec
lods
cmp
jno
cmc
fsubrl
sbb
jge
repz
add
subl
cld
test
xor
sub
sbb
adcl
cmp
push
lcall
or
fsubs
popa
cmp
cli
divb
lods
sti
mov
mov
pop
inc
adc
jne
or
jmp
fdivr
popa
stos
sub
adc
roll
mov
dec
jle
inc
dec
leave
xor
push
inc
stc
enter
push
lcall
pop
dec
xor
les
jp
ds
pop
push
loopne
mov
dec
xor
xor
mov
mov
adc
in
push
push
inc
cwtl
dec
out
fs
inc
daa
push
push
add
dec
adc
lret
cmpsb
xchg
jge
pop
test
in
int
push
hlt
aas
adc
imul
jne
and
dec
and
mov
sbb
xor
or
add
and
int3
inc
data16
scas
dec
enter
stos
push
jge
xor
xor
and
sub
xor
inc
xchg
shlb
int
or
lret
jle
mov
movsb
pop
cmp
xorl
mov
test
push
mov
sub
xor
pop
xchg
es
in
sub
lods
addb
leave
sub
cwtl
cmp
cmp
sub
fisubrs
push
mov
xor
dec
ret
xor
jg
fldl
outsl
sbb
fimull
fucomip
push
mov
aaa
iret
repz
cltd
fidivrl
out
xchg
outsb
lods
movsl
inc
jle
add
pop
fiaddl
loope
push
cmp
xchg
jle
addr16
fidivrs
pop
adcb
pop
xchg
pusha
and
jb
fdivs
loopne
decb
in
aam
push
popf
ss
push
fcmovne
sub
push
xor
testl
std
add
call
gs
dec
adc
stos
call
and
dec
dec
mov
cs
jmp
addl
shrb
out
xchg
sahf
rorb
mov
cmc
ljmp
add
xchg
sub
loop
jmp
or
xchg
jmp
mov
push
push
or
jp
sub
mov
mov
cli
iret
cli
sti
pop
cmc
jl
pop
xor
test
test
jnp
sarl
adc
cmp
inc
daa
xchg
sub
std
xchg
ss
ds
call
fwait
dec
push
sub
lea
stos
push
pop
cmp
test
xchg
push
xchg
xchg
in
mov
dec
and
in
mov
int
popf
cltd
pop
push
mov
jge
out
lahf
icebp
inc
pushf
mov
mov
clc
jl
jl
lret
hlt
dec
mov
push
sbb
repnz
ss
xor
jne
sbb
bnd
incb
sbb
jle
dec
nop
dec
xor
out
lahf
loope
adc
add
cli
xor
and
sub
mov
cwtl
inc
rcrl
xchg
pop
mov
es
into
cmp
icebp
pop
lret
ret
pop
data16
ret
dec
in
cmp
loopne
sub
sti
push
xchg
inc
adc
in
cwtl
inc
sahf
push
gs
loopne
inc
adc
cmp
mov
lock
scas
lcall
inc
xchg
int3
inc
ss
clc
ret
std
mov
mov
lods
pusha
mov
inc
cli
aaa
mov
cmp
loope
lahf
add
jns
inc
sbb
push
call
pop
and
sti
shrl
mov
imul
ljmp
or
cli
aam
jo
jp
test
fnstenv
lcall
pop
testl
lods
dec
sahf
adc
push
jmp
cmc
out
add
gs
jecxz
bound
stos
add
lea
data16
pop
sbb
sbb
sub
stos
leave
mov
sub
cltd
out
jmp
add
mov
xchg
pop
inc
inc
sbb
subb
sub
cmp
lods
dec
adc
dec
fmull
dec
and
loop
xor
insb
lods
insl
popa
adc
pop
and
sbb
popf
in
imul
in
lds
mov
mov
insb
icebp
cmpsl
push
jns
push
lods
fildll
in
aad
hlt
ds
arpl
into
mov
mov
addr16
sbb
add
lods
insb
imul
or
adc
test
inc
fildl
adc
xor
and
stos
add
adc
addr16
inc
xchg
outsl
in
lods
adc
movsl
lret
mov
sub
xor
adc
jle
in
lock
lock
push
mov
inc
pop
dec
sbb
js
inc
add
xchg
mov
mov
mov
cmp
sar
dec
pop
andl
js
cmpl
dec
mov
push
add
in
insl
push
scas
jg,pn
aad
rorb
xchg
leave
pop
repnz
cmp
cwtl
pop
dec
outsb
test
in
repz
sub
mov
call
dec
mov
mov
dec
clc
mov
enter
sbb
mov
xchg
xor
daa
outsl
ss
mov
nop
sub
xor
cmp
insb
fdivp
cltd
int3
sub
in
and
les
aad
or
arpl
and
dec
sub
mov
cmpsb
jb
pop
dec
mov
and
stc
pop
dec
pop
push
shll
mov
mov
mov
jl
xor
sub
add
pop
xor
pusha
fld
or
inc
cmp
popf
in
sub
fbstp
xchg
movsb
jno
sub
push
push
insb
sub
test
mov
sbb
into
mov
out
sbb
rol
ljmp
dec
pop
cmp
jecxz
ds
pop
clc
sbb
mov
cmp
into
jp
mov
fwait
mov
mov
scas
in
jae
cmp
mov
orb
in
jo
mov
sub
imul
mov
jns
cmp
xchg
sub
sbb
xor
ds
out
mov
jecxz
xchg
jp
sbb
aad
mov
gs
aam
cmc
xchg
leave
jl
jmp
xchg
inc
in
inc
mov
scas
xor
mov
shrl
fildl
in
js
mov
mov
sahf
nop
in
mov
mov
jle
pop
inc
dec
test
mov
add
jne
or
repnz
pushf
xor
and
pop
mov
mov
nop
aaa
lahf
xor
xor
add
sbb
inc
test
je
inc
cmpsb
xchg
mov
insl
sub
lret
xchg
test
sub
jbe
imul
mov
mov
or
mov
lahf
push
and
dec
lahf
xchg
inc
jge
pop
nop
mull
cmc
inc
and
into
iret
mov
jecxz
cwtl
js
ljmp
push
jbe
xor
cmp
pop
adc
mov
cmp
xchg
dec
mov
push
aas
out
xor
cmc
stos
ja
rcrb
clc
idiv
bound
jo
inc
clc
pop
adc
cmp
leave
lahf
call
mov
fildll
cmp
push
mov
mov
sbb
repz
sub
insb
imul
aam
cmp
xlat
out
aaa
stos
inc
sub
push
iret
andb
push
jb
mov
das
mov
or
out
adc
pop
add
mov
je
hlt
pop
jbe
sbb
xor
mov
in
pop
push
adcl
rcll
cld
push
addr16
cwtl
inc
push
or
xor
lcall
ret
loope
in
mov
insb
mov
dec
dec
adc
lret
lret
push
lcall
mov
mov
push
ljmp
xor
roll
pop
jecxz
lcall
and
notl
or
arpl
les
jne
clc
movswl
sub
mov
add
mov
shll
push
push
in
leave
xchg
repz
pop
inc
add
lods
add
dec
mov
pop
test
out
mov
ret
or
jle
push
ja
lret
in
leave
cs
mov
insb
mov
jae
or
loopne
popa
dec
repnz
cmp
ja
and
out
push
cmp
fsubrs
mov
xchg
fiaddl
clc
cmpb
dec
mov
testb
fldl2t
insb
mov
lcall
jnp
mov
xchg
mov
xchg
mov
jg
inc
out
push
cmp
push
add
jge
mov
mov
xor
mov
push
shrl
cmp
repz
aam
repz
mov
jns
mov
inc
repnz
fbld
xchg
jnp
dec
pop
adc
cmc
insb
lods
popf
out
bound
add
loope
jle
hlt
mov
push
inc
jl
push
push
push
inc
jmp
inc
inc
cwtl
push
and
mov
xor
jl
test
pop
or
dec
sub
cltd
jns
sbb
push
std
jo
ficomps
push
cmpsl
mov
insl
pop
mov
out
mov
in
xchg
jl
sti
lcall
mov
sub
mov
mov
leave
add
xchg
lods
sti
fimuls
subb
sub
mov
sub
mov
adc
mov
fistl
mov
xchg
adc
es
rorb
nop
insl
push
or
adc
ljmp
addr16
gs
dec
sbb
jl
test
xor
pop
mov
sbb
testb
in
xlat
mov
bound
and
adc
push
xchg
into
sub
inc
repz
push
mov
dec
or
cltd
sahf
loopne
fcoml
xor
mov
enter
aam
and
insl
arpl
jo
mov
push
fs
fprem
sbb
mov
cvttps2pi
cmp
ret
cmc
into
cmpsb
inc
popf
mov
push
jns
sbb
mov
in
mov
mov
andl
insl
jmp
ja
mov
xchg
push
cmp
aad
xchg
push
xchg
sbb
push
push
adc
cmp
ds
push
xchg
cmp
xor
es
sbbb
call
add
jno
lods
sub
cmp
xchg
loop
movsl
jnp
pop
and
dec
mov
mov
add
jnp
roll
nop
push
pusha
movsl
push
fdivrs
pop
add
jnp
mov
imul
add
das
js
mov
mov
mov
incb
out
mov
decb
and
push
dec
sahf
jp
icebp
cmove
mov
xchg
rol
dec
es
bound
jbe
sbb
stos
adc
leave
popf
into
cmp
jge
jmp
lret
or
repz
adc
cmp
fs
push
fstpt
or
fidivs
push
sbb
xchg
mov
jp
pop
jmp
icebp
push
xchg
cmp
jb
iret
test
jno
sbb
sti
jae
inc
push
mov
jb
shrb
cmp
jp
dec
aaa
cmp
cld
or
or
jno
push
lods
loopne
iret
incb
ss
addl
push
fmul
sahf
mov
and
fcomps
and
adc
fwait
push
inc
xor
out
jns
jbe
jo
into
cs
shlb
jb
mov
lods
pop
push
pop
pop
fimull
mov
fstps
push
push
xor
fdivrl
ret
scas
lahf
daa
mov
jo
pusha
jp
dec
jg
adc
mov
xchg
outsl
jl
into
adc
or
notb
pop
cmc
jmp
ss
in
ret
mov
movsl
movsl
lea
cmpsb
ficomps
mov
xchg
adc
mov
leave
out
sub
les
fsubrs
mov
loop
ds
cltd
int
mov
or
cmp
pop
inc
sub
out
push
cmc
test
inc
mov
pop
jne,pt
cli
and
inc
enter
xor
lock
mov
stc
jg
xchg
jle
mov
hlt
or
and
cmp
sbb
adc
mov
pop
dec
loopne
adc
test
mov
pushf
push
repz
inc
aad
fs
dec
jecxz
clc
enter
lock
or
lahf
xchg
imul
add
test
xor
lock
lcall
jnp
lock
xchg
aaa
lcall
out
push
subl
test
pop
pop
lahf
push
pop
rcll
jmp
jle
push
hlt
push
les
aam
and
xor
add
adc
mov
scas
push
mov
test
jle
push
hlt
push
les
aam
and
xor
add
adc
mov
scas
push
mov
test
jle
push
hlt
push
les
aam
and
xor
add
adc
mov
inc
scas
gs
mov
xchg
jle
push
hlt
push
inc
cs
ds
lret
je
out
adc
adc
cld
popa
mov
pop
jbe
inc
jl
mov
push
xor
int
fdiv
in
cld
mov
mov
jbe
inc
jl
or
sbb
sub
cmp
fsub
fdiv
in
repnz
mov
mov
jbe
inc
fs
adc
push
cmp
aad
ljmp
mov
repz
jecxz
xchg
and
and
mov
in
add
daa
mov
test
lea
outsb
mov
test
test
pop
cmc
xchg
adc
add
fsubl
cmp
mov
mov
cmp
jno
mov
fwait
and
aam
jno
mov
mov
ja
inc
pop
inc
repz
sbb
inc
inc
aad
jecxz
cmp
sub
pushf
out
js
mov
sti
rorl
repz
popa
stc
int3
inc
int3
mov
or
je
pushf
repz
xchg
sub
and
in
push
xor
xor
push
out
ret
leave
pop
iret
inc
lods
xchg
mov
jbe
inc
jl
sbb
or
sub
and
div
in
xchg
cmpsb
test
and
cmp
jg
jp
popa
arpl
int3
mov
mov
fiadds
repz
cmp
add
sbb
sub
outsl
push
mov
mov
repz
sub
xor
add
adc
inc
dec
sbb
sub
cmp
int3
out
imul
cld
mov
mov
jbe
inc
jl
or
sbb
sub
cmp
int3
out
imul
cld
mov
mov
arpl
mov
xchg
jle
cs
stc
push
add
enter
ror
aam
fidivrl
rolb
cmpsl
shrb
stc
out
adc
push
shll
shrl
rorl
and
mov
repz
mov
pop
adc
loop
and
inc
icebp
sub
mov
add
jecxz
jmp
jp
fld
cmc
jne
lods
out
filds
jge
or
jno
cmpsb
jmp
mov
incb
aad
add
inc
out
sub
jnp
test
xchg
cmc
out
insb
rorb
sti
sub
xchg
fisubl
lret
jmp
mov
sbbb
sub
push
daa
sbb
in
jne
adc
adc
mov
jecxz
insl
cmpb
push
enter
xor
adc
push
xor
push
ljmp
jne
clc
hlt
inc
lahf
xchg
cmpsb
popa
pop
push
pushf
and
adcl
enter
ss
popf
icebp
in
dec
mov
pop
je
lret
scas
aas
aaa
loop
lds
jmp
cs
cmp
add
jae
add
addr16
mov
push
popf
negl
bound
mov
outsb
icebp
pop
xor
in
xlat
sbb
xchg
push
aad
clc
icebp
dec
inc
in
lea
outsl
add
add
fisttps
pushf
lods
sub
hlt
xchg
outsb
pop
lds
das
cld
pop
lret
push
lea
aad
insl
iret
cmc
add
sbb
sbb
or
jl
pop
mov
nop
push
add
push
jl
adc
and
out
aam
cmpsl
dec
xchg
and
mov
xchg
xor
push
js
nop
and
and
fdivrl
mov
lret
pop
incl
aad
cmpsb
xchg
inc
pop
add
mulb
pop
dec
lea
xchg
sarb
jl
cmpsb
dec
sbb
mov
xchg
dec
xor
bound
mov
mov
popf
nop
push
call
or
and
aad
movsl
pop
mov
mov
test
sbb
adc
lock
inc
cmp
lods
outsb
sub
enter
in
pop
test
orb
mov
movsb
test
pop
mov
and
xchg
jb
mov
ds
xor
roll
out
arpl
xor
cld
into
hlt
add
add
lret
in
mov
jle
jg
out
popa
mov
scas
aaa
iret
sbb
ret
mov
xchg
ficoms
adc
mov
push
scas
dec
xchg
push
out
dec
or
test
inc
jecxz
jmp
push
dec
outsb
leave
clc
push
fnsave
js
mov
xchg
in
push
shll
cmpsl
push
test
sbb
fs
inc
sahf
stos
loop
dec
add
fwait
imul
adc
outsl
sub
rol
or
pop
xchg
mov
adc
inc
divl
inc
inc
sbbb
int
inc
push
into
push
jl
es
sarb
ret
imul
pop
add
sbb
and
pop
mov
mov
movsb
pusha
rcll
pop
and
cmp
mov
cmp
push
aam
jbe
or
lods
jmp
adc
movsl
or
or
mov
push
dec
jge
push
test
cmp
and
lock
fdivrs
adc
and
pop
je
and
stos
xchg
lcall
nop
jmp
ljmp
mov
push
xor
imul
push
jno
pushf
xchg
jmp
dec
repz
adc
push
mov
orb
pop
test
lods
cli
sbb
out
repnz
ret
xchg
add
gs
inc
in
iret
cmp
jle
mov
xor
movsl
adc
dec
cli
cmp
loopne
inc
js
mov
inc
lret
icebp
dec
out
push
pop
pop
addb
pushf
shll
pushf
mov
cmp
scas
and
aam
mulb
or
fcomi
inc
xchg
test
add
movsb
daa
data16
xchg
lret
cmp
lea
pop
out
mov
data16
jo
xchg
aam
cmc
lods
fiaddl
push
jle
xchg
mov
test
ss
xchg
popf
jne
daa
mov
sti
scas
notl
stc
in
jp
rcl
enter
dec
bound
or
fadds
jmp
jb
inc
lods
adc
sbb
je
lret
outsb
sarb
ret
repnz
push
push
jae
or
dec
orb
leave
jbe
xchg
cmc
aam
xor
sarl
movsl
cmpb
daa
in
cltd
out
mov
movsl
sub
jg
aam
dec
dec
cmp
gs
jmp
push
and
outsl
out
lcall
sahf
adc
xchg
shlb
lock
inc
imul
cmp
inc
jbe
iret
aam
fnstenv
enter
lret
test
xor
pop
jo
pop
dec
out
xor
sahf
cmp
imul
push
sub
or
rcll
mov
pop
lds
cli
push
mov
int
out
mov
int
cmc
jecxz
test
adc
mov
rol
jb
ljmp
sbb
mov
int3
rorb
sti
push
mov
leave
inc
pusha
add
pop
pop
push
gs
loope
and
stos
cmp
xchg
mov
test
xchg
xor
pop
pop
xor
push
mov
das
fs
mov
ljmp
dec
jl
popf
icebp
and
pusha
std
cmp
sub
add
std
movsb
repz
aas
enter
dec
inc
dec
in
subb
ficompl
outsb
add
stc
int
popl
and
addr16
testl
sub
push
mov
push
sbb
popa
sub
dec
mov
lds
popf
cmp
add
push
jmp
jb
cmc
fidivs
push
or
add
add
rorb
rcr
sbb
aad
cmpsb
pop
movsl
test
loopne
push
dec
and
and
dec
and
addb
mov
push
jl
cmp
xchg
inc
xchg
pop
rcl
imul
push
sub
jne
mov
mov
push
adc
ss
cmp
mov
sub
dec
inc
rorl
and
jecxz
jg
push
std
aam
jg
jmp
int
out
push
mov
pop
xchg
mov
jge
idivl
mov
inc
outsl
repnz
add
shll
pop
int
xchg
cli
fdivs
cmp
sbb
pop
movl
lret
push
in
dec
movsb
aam
lods
sarl
or
mov
xchg
add
addr16
rcll
inc
sbb
je
push
xchg
leave
adc
flds
mov
xchg
mov
test
mov
mov
rcll
mov
js
pop
cmp
mov
pop
inc
into
dec
sbb
stos
sti
nop
test
ss
lret
mov
aam
mov
out
aas
mov
cmp
sbb
xor
enter
cs
cli
mov
out
int3
popf
xor
mov
push
rorb
sar
mov
test
sbb
imul
sub
test
xor
fidivrs
mov
mov
subl
sbb
sub
lock
fcmovb
test
shl
push
jp
mov
cmpsb
add
jnp
test
push
dec
inc
jne
inc
outsb
lahf
aad
mov
xchg
lds
jp
or
lcall
std
les
or
xchg
xorb
es
sub
pop
pusha
add
sub
ljmp
mov
fistpll
lods
mov
fdivrl
cmp
nop
das
mov
sub
cmpb
and
js
outsl
out
out
ss
ja
cmp
pushf
lock
xor
je
imul
push
push
add
popa
xor
lcall
inc
dec
enter
lods
mov
adc
stos
imul
dec
pop
in
subb
sub
sub
xchg
rdmsr
jle
imul
mov
adc
das
jl
mov
mov
popa
inc
into
lods
jg
daa
jecxz
jne
xor
mov
fs
gs
sbb
jecxz
jo
xor
imul
xor
cmp
into
lds
cld
lea
xchg
cmpl
xor
pop
lahf
rcrl
mov
mov
ja
data16
push
push
jbe
mov
pop
inc
mov
mov
sub
ljmp
mov
push
outsb
push
inc
ljmp
mov
mov
shlb
mov
and
xor
data16
pusha
sar
or
and
fcomps
sub
xchg
xor
ret
bnd
das
out
fsts
jge
and
sub
out
es
xchg
or
push
pop
lock
js
rolb
jmp
negb
loop
pop
push
gs
jmp
dec
push
jg
push
add
push
mov
xchg
rcl
and
pop
ret
jne
push
test
cmp
fmull
or
mov
int
mov
ja
imul
xor
inc
xor
jo
mov
stc
sbb
fwait
dec
jp
out
or
addr16
push
inc
xchg
stc
mov
adc
jle
sarb
sti
dec
outsb
mov
xchg
pop
in
shl
dec
dec
lods
mov
inc
mov
inc
inc
or
les
scas
lds
out
pop
es
cs
xchg
pop
nop
mov
mov
sub
xlat
xchg
mov
dec
sbb
or
sub
icebp
push
dec
inc
push
arpl
mov
dec
or
cmp
jne
xchg
cmc
les
pushf
mov
aaa
dec
mov
inc
sbb
test
xor
and
jge
or
sbb
rol
je
pop
xor
ds
jne
push
outsl
jl
sbb
and
das
ret
jns
push
jno
shll
mov
xor
js
sub
sub
lds
pushf
pop
gs
dec
loopne
push
scas
mov
sbb
push
jo
push
fs
fidivrl
int3
mov
or
sbb
rorb
aas
adc
jmp
mov
sub
fstpt
jbe
movsb
add
rolb
rolb
es
loopne
cwtl
xchg
push
movsb
dec
in
arpl
je
int
xor
sub
bound
jne
lods
mov
jae
push
and
out
daa
fbstp
int3
push
pop
adc
aad
lds
cmpsl
xchg
add
or
fs
ret
push
stos
dec
cmpsl
pusha
push
dec
addr16
xchg
sub
mov
cmpsb
insl
pop
dec
jmpw
test
push
ret
in
es
rcll
push
cli
cmp
mov
cld
test
out
dec
xchg
mov
push
mov
mov
into
fistl
leave
mov
lods
mov
jmp
cwtl
or
pop
rcrb
jge
faddl
jle
jg
repz
xchg
cmp
jo
loop
ret
cmp
xchg
int3
cwtl
xor
jl
and
shrl
test
inc
xor
and
and
cmp
push
xchg
testb
pop
inc
dec
dec
cmpsb
cmc
out
loope
mov
sub
cmpsb
jle
test
mov
dec
mov
std
jnp
div
and
sub
or
pop
loope
test
add
inc
adc
fnstsw
mov
lods
xor
cwtl
lret
and
pop
dec
push
dec
xor
mov
ret
jnp
stc
cmp
fists
in
cli
lret
cmpsl
mov
sub
mov
add
dec
sbb
imul
cmp
push
in
mov
add
xor
les
sub
sub
xchg
and
fnsave
and
lret
push
pusha
loop
jbe
pop
push
adc
hlt
push
das
aad
enter
movsb
or
xchg
push
icebp
mov
std
fdivr
pop
pop
divl
stc
pop
mov
inc
xor
fsubrl
jmp
fldcw
insl
push
insl
add
pop
and
adc
inc
cmp
insb
out
and
sub
call
jp
sti
jnp
dec
sbbb
add
xchg
ss
mov
hlt
addr16
jo
scas
data16
imul
adcb
movsl
mov
pop
icebp
pop
lock
mov
in
aaa
pop
xchg
fcoms
fwait
mov
jno
dec
mov
adc
fnsave
cmp
loope
mov
add
xchg
es
test
or
cmpsl
mov
lods
fdivrs
ret
neg
out
cmpsl
outsl
dec
xor
xchg
adc
sbb
xor
dec
div
jle
imull
testb
push
shr
mov
cmp
sbb
inc
adc
mov
jae
pop
cmpsb
lea
addl
and
cltd
dec
xchg
jp
in
cs
xor
sbb
pop
idivl
aam
sub
mov
jnp
jo
mov
sub
and
outsl
pop
pop
push
add
pop
mov
pop
std
push
or
pop
lea
mov
outsb
jne
bound
leave
push
inc
jb
jmp
inc
scas
adc
pop
shrb
pop
pop
or
imul
inc
lock
add
push
test
and
cmp
push
mov
jbe
pop
or
bound
and
mov
shrl
cwtl
data16
sti
nop
and
cmpsb
lahf
mov
mov
xchg
stos
pop
imul
pop
push
aam
dec
add
adc
jo
pop
xor
out
notb
cmp
mov
mov
cld
push
xlat
jl
dec
mov
fidivs
cmp
btr
add
mov
push
cmpsb
adc
outsb
lahf
sub
dec
xor
lret
out
add
aam
pop
test
sub
xor
inc
fldcw
pop
cmp
pop
dec
jle
push
xchg
sbbb
and
cmpb
or
mov
les
cli
adc
mov
pop
xor
icebp
cmp
mov
push
popa
mov
jl
or
sub
sub
mov
jp
add
pop
js
adc
aas
test
adc
clc
scas
push
and
mov
push
adc
hlt
int3
popf
andl
xor
imul
aas
shr
xor
movsl
daa
push
imul
fildl
inc
mov
jnp
cmpsb
dec
pop
xor
xor
inc
adc
adc
push
inc
cmp
shl
je
or
adc
fld
mov
jo
subb
adc
mov
jle
pop
sahf
push
mov
test
mov
loope
add
or
lods
dec
notb
sahf
pop
test
push
aam
xor
sahf
fidivrl
jne
int3
push
inc
jl
insb
xchg
pop
mov
in
add
mov
jle
adc
in
cmc
out
and
jne
jns
loope
dec
insb
shll
inc
and
push
mov
jb
jp
xchg
adcb
add
jbe
xorl
jbe
nop
jno
xor
pop
jmp
dec
inc
data16
mov
loopne
inc
push
lds
cmc
loopne
inc
sahf
xchg
andl
pop
adcl
in
push
mov
loop
jbe
lcall
mov
xlat
sbb
popa
mov
dec
cmc
imul
inc
in
sahf
or
test
rcl
daa
out
xlat
and
lcall
fwait
xchg
cmp
pop
mov
shrl
lds
push
stos
hlt
sbb
mov
addb
out
fstps
adc
mov
mov
dec
and
cli
ljmp
es
shll
iret
sahf
aad
mov
mov
add
sbbl
mov
outsb
int
in
stos
pop
mov
daa
andl
jecxz
jo
or
inc
dec
xchg
cmp
pop
jge
sbbl
ret
mov
lods
jo
or
sbb
xchg
xchg
adc
jmp
daa
mov
std
fs
hlt
xchg
data16
xor
lret
mov
andb
push
cmpl
and
bound
cmpsb
push
dec
repnz
jae
mov
loop
stos
pop
and
stos
sub
lock
jg
add
outsb
leave
enter
add
pop
aam
push
addr16
push
js
xor
aas
lret
out
mov
jl
mov
daa
into
pop
out
lods
clc
add
xchg
daa
mov
fists
mov
fstps
ja
inc
xchg
or
cs
push
mov
loope
sub
xchg
and
daa
jnp
test
mov
jp
cltd
and
pop
and
mov
push
and
stos
sbb
pop
inc
jge
or
loopne
jp
jae
cmp
ss
mov
sbb
sbb
jg
rcl
cmp
loop
jg
inc
push
inc
mov
rorl
cmc
xor
dec
jp
enter
sub
dec
and
push
or
xchg
fidivrs
xchg
sub
xchg
sub
xor
insl
lret
faddl
add
jnp
or
mov
jmp
adc
outsb
sbb
fisttpl
pushl
sub
aam
cld
add
pop
into
cmp
clc
xor
jg
cmp
and
mov
inc
icebp
scas
popa
stos
mov
in
loopne
xor
sub
or
loopne
cwtl
inc
push
push
pop
adc
and
cmp
fimull
or
add
xchg
mov
mov
popa
std
lds
shlb
dec
mov
data16
pop
sbb
xor
dec
shll
xor
cmpsb
and
in
push
inc
sbb
popf
push
xor
pushf
pop
sub
mov
lods
dec
int
fs
and
add
pop
inc
jbe
inc
icebp
add
jle
xor
aam
inc
mov
sbb
xor
pop
xor
jae
xchg
or
inc
movl
dec
inc
es
shll
mov
add
mov
in
xor
mov
push
mov
cmp
sub
mov
ret
fiadds
inc
popf
int
mov
jge
or
inc
cmp
sub
dec
xchg
pushf
pop
push
and
dec
fstps
mov
fwait
adc
pop
lea
inc
repnz
sub
movsb
jp
into
jle
add
repnz
jae
push
mov
adc
mov
xchg
jmp
xlat
ljmp
mov
repz
cmp
fnstsw
push
add
xchg
test
xchg
dec
and
or
loopne
out
das
xchg
rclb
popf
das
notb
xchg
dec
mov
jb
mov
dec
adc
js
roll
lahf
pop
adc
lds
int
ficoms
cmp
ja
cmp
daa
inc
jg
jo
mov
in
bnd
and
lret
test
mov
add
add
mov
dec
pop
sbb
flds
adc
outsb
loop
je
fisubrs
push
push
stc
test
lods
js
je
jl
add
adc
lds
rcl
cmp
mov
jp
cld
cmp
imul
enter
imul
xlat
out
pop
aad
pinsrw
jle
or
call
std
xchg
inc
jecxz
jmp
or
std
jbe
jb
xlat
inc
loope
sbb
mov
add
xlat
dec
xchg
mov
mov
mov
mov
pop
jg
repz
ja
loopne
cmp
and
outsb
inc
or
inc
fsubrs
out
mov
faddl
je
adc
in
call
fmul
lahf
or
leave
aam
push
mov
inc
ja
mov
divb
cmp
in
cmp
xchg
sub
fwait
xchg
das
sarl
pop
int3
imul
pop
cmp
lds
lret
push
shr
xor
fs
dec
hlt
cmp
mov
cmpb
cmp
jecxz
ljmp
adc
rdmsr
icebp
and
inc
ficomps
jb
mov
test
fstp
icebp
mov
and
pop
cmc
std
jmp
out
xchg
mov
or
add
insb
jns
icebp
ja
movsl
sti
mov
mov
push
mov
mov
stc
dec
loop
daa
test
cltd
aas
sub
mov
jg
ret
loope
aaa
and
sub
add
push
jl
push
int
int
mov
fidivl
test
aam
inc
imul
fisttpll
and
sub
jo
lea
cmpsb
push
mov
xchg
mov
in
out
lcall
lret
pop
xor
nop
cmp
mov
and
sbb
push
or
sahf
sti
sbb
pop
jg
or
pop
or
xchg
xor
pop
cmp
nop
enter
pop
pop
int
movb
pop
cmp
xchg
mov
push
or
sbb
sub
cmp
int3
out
imul
cld
mov
mov
jbe
inc
jl
or
sbb
sub
cmp
int3
out
imul
cld
mov
mov
jbe
inc
jl
or
sbb
sub
cmp
int3
out
imul
cld
mov
mov
jbe
inc
jl
push
es
lods
xchg
inc
cld
mov
push
jns
imul
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
iret
mov
decl
mov
int3
dec
or
outsl
or
pop
jecxz
pop
aas
dec
iret
mov
decl
fdivrl
sub
sbb
or
push
push
outsb
das
pop
aas
dec
iret
movsl
fbstp
in
hlt
scas
les
nopl
jns
xor
cs
and
stc
xchg
jmp
xor
sub
xchg
je
sbb
addb
and
fmull
and
repz
rcl
xchg
dec
xor
sbb
xor
outsb
mov
and
rcr
ja
gs
loopne
icebp
cmp
sub
jbe
repz
fsts
iret
loop
push
sub
clc
cld
pusha
cld
imulb
rcl
mov
addb
mov
pop
push
push
add
jo
mov
movsb
dec
rclb
in
mov
jle
jl
leave
repz
daa
fcom
add
movsb
jbe
dec
or
scas
pushf
or
lahf
jecxz
repz
dec
mov
pop
cmp
mov
cld
lahf
in
scas
fdivrl
xor
add
pop
je
inc
aas
dec
stos
mov
mov
shlb
sub
sbb
imul
aad
lds
aam
ljmp
dec
adc
push
clc
or
insb
inc
cmp
test
fildll
iret
lahf
in
scas
fdivrl
sub
sbb
or
jl
insb
das
pop
aas
dec
iret
mov
decl
fdivrl
sub
sbb
or
jl
insb
das
pop
aas
dec
iret
mov
orb
adc
sar
movsl
mov
push
add
pop
lea
scas
adc
mov
out
lahf
mov
ja
or
mov
xor
sub
jno
pushf
xor
push
mov
sub
and
cwtl
jecxz
mov
cmp
out
outsb
or
pop
mov
mov
cmp
mov
sbb
mov
jge
jbe
sbb
cltd
sub
int
xor
mov
imul
push
xchg
cld
push
push
jne
or
gs
inc
daa
mov
pop
add
add
fwait
enter
jno
pop
sahf
cmc
shll
orb
insb
inc
inc
mov
hlt
xchg
sti
ret
dec
push
lcall
imul
and
pop
cmpsl
pop
outsl
test
xchg
push
mov
insl
mov
clc
mov
pop
push
lahf
or
xor
xchg
push
out
xchg
mov
jmp
jmp
aaa
std
mov
insb
bound
rolb
xchg
jl
push
popa
andl
push
imul
sbbl
add
pusha
shll
in
bound
adc
fidivrs
mov
int
jmp
adc
jns
mov
scas
out
out
in
das
popf
mov
pop
imul
jg
mov
outsb
pop
and
lock
je
and
in
in
adc
loope
push
and
imul
imul
shrb
sahf
and
mov
inc
adc
jmp
das
movsl
fisubl
sbb
inc
push
scas
test
and
xor
jge
xor
shlb
and
xchg
pushf
cwtl
fsubrl
push
lret
stos
jmp
fstpl
int
push
test
in
push
xor
rcll
cmp
mov
cwtl
dec
mov
mov
sub
inc
xchg
stc
in
or
jle
push
adc
push
sbb
cwtl
sub
xor
inc
sbb
mov
aaa
clc
cmp
test
aaa
cltd
inc
pusha
mov
jl
mov
mov
pop
loopne
jle
inc
cli
mov
dec
cmp
lcall
xchg
in
or
lods
stos
sbb
sbb
inc
xor
dec
sbb
jl
xchg
xchg
jge
mov
cmp
xor
push
fwait
stos
or
sar
in
mov
inc
rorb
jb
sub
iret
push
repz
scas
out
clc
outsb
xchg
mov
dec
and
jl
and
sbb
mov
mov
dec
dec
inc
add
in
cld
rep
push
popf
inc
mov
sbb
andl
popa
unpcklps
jns
dec
popf
divb
push
insb
xor
adc
int3
scas
sarb
pop
adc
les
insb
mov
jns
xor
or
xor
fistps
pop
lret
fistpl
test
and
es
out
push
sub
in
mov
add
xlat
cmp
testb
lods
test
movsl
imul
loopne
lock
in
push
dec
and
sysret
int3
xchg
sbb
pcmpgtb
lcall
les
or
cmp
mov
test
inc
mov
in
pusha
sub
xor
sub
cmpsb
inc
xlat
mov
xchg
das
and
in
cli
adcl
jo
xchg
leave
test
aad
jle
jns
xchg
enter
dec
dec
add
xor
test
sub
mulb
int3
jle
sub
push
jg
pop
lcall
dec
pop
es
loop
push
xchg
mov
mov
fmull
or
xor
and
das
test
xchg
insw
in
push
dec
pop
shl
popa
rcr
call
or
rcr
xor
outsl
ret
loopne
in
jns
jl
ds
sbb
and
add
mov
adc
out
bound
lahf
adc
add
sbb
scas
dec
lret
and
bound
mov
int
inc
xchg
pop
jno
pop
test
cli
lahf
clc
xor
mov
push
daa
and
call
push
mov
push
mov
xchg
divb
sub
insl
xchg
loope
adc
cmovs
inc
jo
cli
xchg
pop
scas
mov
mov
jno
imul
and
arpl
jp
stc
je
iret
mov
insb
mov
ud2
xchg
fmuls
push
xor
lods
xor
popa
das
push
jnp
out
inc
fnstenv
cmp
imul
fsubl
mov
xchg
pop
pushf
das
mov
idivb
nop
imul
push
pusha
sahf
out
cli
xlat
push
out
pop
sbb
jae
inc
imul
cmpsb
movb
iret
in
mov
test
jmp
aam
imul
fs
cmpsl
repnz
pop
movsl
ja
leave
rolb
popf
lock
or
pop
push
outsb
sahf
out
ss
xor
sbb
setle
fs
sub
jne
adc
aaa
push
jecxz
jne
scas
push
xor
sbb
call
xchg
cmp
pop
pop
sbb
add
bswap
push
orb
adc
cmc
ret
sub
jns
stos
or
or
xor
jle
xlat
bound
mov
mov
adc
and
sbb
mov
loop
bound
xchg
push
imul
mov
push
mov
fwait
ds
cwtl
dec
jp
or
xchg
fstpl
jle
or
jae
fistpl
std
mov
and
or
rcll
sbb
mov
gs
les
out
movsl
push
adc
xor
inc
fiaddl
in
mov
shlb
shl
fimull
jmp
xorb
and
jbe
fisubrs
cmpsl
sub
mov
cmp
jnp
pop
inc
pushf
pop
scas
es
addr16
xor
pop
inc
sub
bound
call
pop
jle
add
lods
push
sub
sub
leave
lods
cmp
mov
test
jne
ret
notl
add
inc
adcl
inc
and
mov
xchg
cli
popa
mov
mov
jnp
sbb
cmpsl
sbb
xchg
mov
cmpsb
cmp
aad
filds
push
lods
or
mov
cmp
dec
stc
stc
xchg
or
and
cmpsl
rorl
cmp
jle
cmp
je
divps
rcrl
or
int
mov
cld
push
out
jmp
push
fdivs
xlat
mov
in
xchg
stc
fadd
jbe
aas
inc
xchg
push
mov
push
dec
push
mov
inc
dec
pop
adc
pop
dec
dec
mov
je
xchg
flds
gs
jo
push
mov
sbb
mov
test
mov
mov
movsb
jb
jecxz
es
imul
test
xchg
popa
sub
lret
inc
out
shl
sub
push
mov
and
dec
inc
in
aad
adc
outsb
adc
adc
pop
xchg
adc
mov
and
pop
cmp
loope
sub
mov
in
in
cs
ss
aad
fucomp
xor
pop
icebp
ja
cmpsb
jl
test
xor
xchg
push
jnp
push
inc
pop
fld
jnp
inc
lods
push
enter
out
cwtl
repz
stc
std
push
je
sbb
movsb
sub
adcl
stos
add
jb
xchg
sbb
mov
cli
or
lock
je
sti
out
lret
or
rol
mov
or
stc
test
fistps
imul
xor
test
pop
aas
push
adc
push
ret
loop
pusha
mov
xchg
lahf
mov
ficoms
adc
sub
enter
in
jle
ret
jae
add
mov
or
cmpsb
or
mov
xchg
pusha
iret
mov
xchg
mov
scas
dec
cwtl
xorl
ss
out
jbe
andb
dec
sub
movsb
push
mov
or
mov
mov
sub
insl
push
int3
sbb
loopne
call
loop
mov
fst
cli
push
int
lcall
mov
sub
push
inc
pop
addb
add
test
aaa
mov
out
push
dec
push
es
cmpsb
sbb
scas
fmul
push
push
adc
xchg
repz
sub
mov
adc
insl
or
pop
pushf
addr16
push
sub
insl
push
clc
adc
pop
mov
add
or
ret
sbb
xchg
jge
in
xor
jmp
xchg
cld
mov
daa
fidivl
dec
arpl
cmp
test
sub
jecxz
or
inc
int
pusha
sub
fcompl
or
movsb
xchg
cmc
jns
in
mov
push
xor
movsb
xchg
push
mov
jge
sbb
notl
js
imul
std
jg
xchg
jnp
jae
cmp
mov
daa
xchg
lcall
inc
inc
mov
and
movsb
and
lds
mov
sbb
sbb
push
pop
xorw
xor
jo
pop
rorl
les
push
jmp
push
movsl
std
xchg
jb
out
lcall
aad
notb
mov
ja
in
adc
in
aam
movsb
mov
popa
mov
ffreep
ljmp
ljmp
dec
int
aaa
or
das
daa
mov
cmp
or
lock
and
sub
int
sub
cli
inc
xor
jns
pushf
sub
push
and
inc
sub
mov
mov
aad
xor
pop
pushl
sbb
mov
or
notb
sub
jp
bswap
jbe
ds
in
inc
out
imull
sbb
cmp
jecxz
fadd
lods
jno
cld
mov
es
or
mov
mov
mov
cltd
mov
mov
add
lahf
in
fmuls
mov
or
jl
xor
ja
andl
sbb
jl
cmp
in
xor
add
leave
cmp
test
int
ja
pusha
out
les
adc
dec
int
push
cmpsb
jae
mov
mov
daa
ret
jp
push
rcrl
daa
and
sbb
das
fnstenv
hlt
stos
iret
xchg
lods
mov
sbb
lds
pop
mov
hlt
jno
mov
push
inc
fs
sub
pop
sub
mov
push
dec
popf
insb
pop
cwtl
jmp
ret
sub
push
pop
incb
or
aaa
les
cmpsb
stc
pop
into
push
shll
mov
dec
xchg
addr16
and
mov
loop
jl
ficompl
xor
mov
rcrl
clc
cld
push
loop
orl
dec
jns
ret
jle
inc
jp
sub
xchg
xor
mov
lea
pop
pushl
add
cmp
mov
inc
scas
or
je
mov
psrld
mov
mov
leave
inc
jns
sbb
add
fistpl
push
mov
js
and
pop
shrl
roll
push
inc
ss
dec
pop
sbb
mov
jl
pop
dec
pop
jmp
cmp
outsl
push
ljmp
mov
jg
dec
add
push
xor
xor
int3
pop
aam
test
push
add
es
lds
push
jnp
sarb
mov
adc
ljmp
mov
rcrl
adc
xor
icebp
bound
mov
repnz
or
leave
mov
test
ja
stos
movsw
lods
mov
lahf
jge
iret
enter
dec
jbe
movsl
pusha
mov
fwait
popa
cld
clc
cmp
sub
jl
test
scas
popf
mov
fiaddl
int3
pop
jae
mov
cmp
jge
int3
dec
popa
pop
mov
incb
jo
cmp
pop
outsl
dec
mov
iret
mov
clc
mov
lods
pop
insl
mov
fs
sub
add
in
clc
pop
sub
in
sbb
aad
jge
and
dec
sub
mov
inc
imul
mov
shr
mov
xchg
add
sarl
mov
push
cltd
ja
xor
sbb
cli
inc
scas
mov
and
out
dec
stos
adc
sub
lods
sub
adc
stos
adc
add
sub
repnz
insl
xor
mov
fs
pop
leave
ljmp
fidivl
mov
cmp
js
mov
sbb
xchg
pop
mov
pop
sub
xchg
loope
and
loopne
pushf
iret
mov
dec
lods
xchg
push
and
inc
faddl
cmp
fcmovnbe
in
paddb
jp
add
and
hlt
cmp
add
fmull
or
sub
arpl
rcll
cltd
jp
pop
and
leave
push
cmp
xlat
sbb
mov
jle
in
mov
ja
orb
fmul
inc
loop
xor
sub
mov
dec
mov
fwait
xchg
mov
pop
mov
mov
xor
jmp
cmp
ret
lcall
mov
aaa
sub
pop
loopne
enter
mov
test
jle
icebp
adc
loopne
push
push
rol
mov
sbb
mov
ja
mov
jmp
cmp
adc
in
add
pop
out
loop
inc
in
lods
test
jg
mov
xchg
push
mov
cmovne
test
mov
stos
mov
pushf
cs
out
insl
lds
adc
shl
push
fldt
or
mov
mov
imul
or
js
imul
addb
jecxz
push
cmp
dec
sub
jg
mov
and
int
or
in
cmp
add
mov
mov
sti
lock
int
pop
dec
jne
imul
ficompl
repnz
dec
jne
fstpl
push
push
sti
je
lods
andl
mov
adc
idivl
fcomip
adc
mov
inc
cmp
jne
movb
ds
inc
cmpsb
stos
fcmovnbe
xor
xor
mov
addl
sub
cmpsl
xor
enter
aas
inc
jg
add
into
xor
leave
fstps
cmp
jle
or
outsb
js
test
popa
pushf
cmp
pop
pop
jbe
inc
iret
push
cmp
outsl
dec
pop
pop
inc
test
rolb
mov
push
sub
mov
mov
call
cltd
xchg
imul
filds
into
sub
push
rol
jne
gs
sbb
dec
imul
test
add
pushf
rcll
adc
xor
or
jo
pushw
and
adc
push
xor
lret
mov
inc
jnp
es
add
sbb
cmp
mov
pop
dec
push
lock
orb
sbb
insl
enter
in
push
inc
mov
shlb
xchg
xchg
inc
sbb
mov
data16
mov
xor
jl
lcall
pop
xchg
lahf
mov
jg
lods
sahf
inc
popa
pop
test
lock
push
lods
pop
lea
push
bnd
test
outsb
mov
stc
mov
leave
loop
testl
enter
fcmovnbe
sbb
sub
push
xchg
mov
xchg
dec
cld
popa
or
negb
dec
xor
in
mov
push
in
sub
aam
mov
fcmovne
inc
ss
pusha
pop
add
lods
iret
adc
mov
jmp
out
mov
lea
pop
div
sbbb
in
insl
sbb
fs
icebp
cmp
aad
test
cmp
fdivs
xor
cld
xor
cld
or
int
cmp
lahf
loopne
mov
mov
test
mov
ljmp
sub
adc
push
sti
stc
leave
mov
or
popf
fs
mov
xor
sbb
mov
insb
pop
xchg
arpl
xchg
outsl
aad
fsubp
push
mov
flds
mov
sub
sbb
push
sets
pop
xor
xor
addr16
les
lock
mov
in
pop
inc
int
add
imul
in
add
xchg
inc
js
lcall
push
adc
hlt
fsubs
fldl
add
dec
dec
scas
in
int3
pop
mov
leave
addr16
arpl
cwtl
jnp
stc
mov
mov
inc
movsb
and
jmp
rol
push
jg
add
imul
lods
or
push
inc
mov
repz
bound
loopne
jmp
xor
mov
push
or
cmp
push
mov
jne
and
mov
les
loop
inc
cmp
fs
cmp
add
xchg
push
jne
icebp
xchg
mov
push
mov
test
mov
xchg
das
add
insb
xor
out
test
dec
sub
cmp
cwtl
jmp
jmp
stos
dec
ja
popf
ret
arpl
lods
out
jns
shr
aad
in
lahf
dec
call
push
enter
push
mov
shll
and
push
jle
in
xchg
scas
loop
leave
hlt
add
aam
fs
cli
mov
jg
test
test
inc
xchg
adc
xor
lods
sub
or
mov
rsqrtps
push
add
roll
insb
xchg
inc
cli
xchg
pushf
lods
gs
mov
mov
add
dec
and
in
xlat
movsb
xor
stos
jg
in
es
call
cmp
add
or
fs
xchg
fisttpll
cmp
lcall
xor
dec
push
xchg
inc
xlat
les
lea
pop
pop
mov
mov
orl
mov
shlb
xor
stc
adc
call
add
xor
ss
inc
lcall
mov
jle
adc
push
bound
jno
adc
add
sub
mov
push
test
jno
mov
ljmp
add
mov
push
insb
jg
int
movsb
or
cmp
or
dec
pop
push
sub
mov
push
sbb
pusha
scas
mov
loopne
cmpsb
movsl
jb
push
or
sar
ret
mov
cmp
cmp
adc
pop
aas
fsub
loopne
dec
shll
pop
jge
iret
push
jge
out
in
cli
fcoml
xchg
int
cmpsb
clc
cmp
repz
ret
inc
lea
push
mov
stos
rcl
sub
sbb
and
pop
mov
mov
es
pop
mov
fs
stos
sbb
loopne
rcrb
adc
data16
js
jae
push
test
xchg
fsubrs
scas
xor
rcrb
sbb
sbb
jbe
xor
jle
push
aad
sbb
push
setns
lock
adc
rcll
or
rcrb
mov
xor
jl
and
int3
push
mov
cwtl
add
popa
sub
sub
push
scas
cmpsl
ret
push
push
mov
dec
fmull
or
movsl
bound
inc
xor
or
lock
fcoms
ja
outsl
xor
adc
or
mov
jecxz
sub
cmpb
fwait
rcrb
daa
pop
push
in
inc
or
sub
lret
insl
bnd
pop
js
data16
pop
shr
and
enter
cmp
outsb
js
jg
repnz
test
inc
pop
jno
outsl
dec
jecxz
xor
add
inc
dec
loope
fldcw
sbb
vpcmpeqw
xor
and
pop
out
test
pop
inc
addr16
nop
xchg
mov
jmp
and
mov
in
jl
test
stc
inc
jae
and
andl
jecxz
inc
stos
les
xchg
or
mov
pusha
aaa
cmp
outsl
adc
pshufw
les
sub
xchg
in
insl
mov
jge
mov
adc
inc
shrb
repz
push
scas
pop
jb
add
xchg
add
testb
inc
mov
jle
arpl
movb
jle
cmp
mov
jnp
in
pop
rorb
push
sub
dec
cmp
jo
sub
jmp
cmc
jae
push
outsb
cmc
and
fsubrs
and
xor
arpl
in
or
bound
mov
cs
hlt
mov
push
leave
mov
mov
dec
push
les
mov
rolb
fists
loop
push
popf
daa
push
push
rorl
lods
lea
aad
add
xchg
ss
dec
pop
lret
or
cmp
sahf
mov
ficoms
dec
mov
xchg
and
int3
orl
jmp
mov
loopne
cmp
sbb
pop
enter
cmpsl
and
sbb
push
mov
lods
cmp
jl
adc
decl
fdivrl
sub
sbb
or
jl
insb
das
pop
aas
dec
iret
mov
decl
fdivrl
sub
sbb
or
jl
insb
das
pop
aas
dec
iret
mov
decl
fdivrl
sub
sbb
or
jl
insb
cs
aas
dec
iret
mov
decl
fdivrl
or
cmp
xchg
sbb
jnp
hlt
xchg
adc
and
xor
scas
call
mov
or
pop
js
push
pop
cmp
jg
scas
call
fistpll
cmovs
push
das
push
pop
cmp
jg
scas
cs
xchg
out
push
lcall
and
push
pop
or
sbb
add
cltd
cld
call
mov
mov
in
dec
push
out
inc
ret
or
jge
sbb
aam
lahf
pop
shl
cmp
iret
ja
xchg
out
cmc
fdivrl
loopne
cmp
xchg
mov
fcoms
adc
stc
pop
int3
sbb
stos
sbb
xchg
xchg
outsl
out
test
ljmp
test
ja
mov
lock
push
dec
or
pop
sti
xor
xor
or
test
fistps
shrb
jmp
or
outsl
pop
sbbl
dec
call
out
mov
jns
push
or
outsl
cmp
scas
test
mov
pminub
mov
dec
push
pop
cmp
push
stos
mov
mov
stos
test
or
sub
dec
jno
data16
xor
ljmp
icebp
mov
fistpl
sbb
and
dec
cmp
stos
lret
sti
xlat
mov
test
fistpll
cmovs
js
push
pop
cmp
jg
scas
call
fistpll
cmovs
js
push
pop
cmp
jg
or
push
inc
mov
aam
out
fsubs
mov
pop
outsl
mov
mov
fwait
dec
enter
pop
adc
insl
mov
popa
push
mov
inc
jae
jg
adc
mov
mov
js
dec
fildl
loopne
sbb
push
rorb
filds
addl
test
imul
lret
xchg
jge
push
movsl
jecxz
std
mov
cmp
jge
in
lahf
xchg
insl
xor
push
xlat
mov
jg
xchg
aas
xchg
test
fadds
scas
sub
pop
lods
cmp
or
daa
add
aad
nop
pop
sti
ja
jge
cwtl
jno
jns
push
fnsave
fwait
in
das
cli
mov
mov
inc
push
pop
fstpt
ret
out
push
inc
jmp
ja
cltd
imul
add
enter
cmpsl
add
shll
icebp
cli
movsb
out
movsb
pop
mov
out
or
mov
stos
call
mov
adc
cli
inc
ljmp
push
sub
inc
outsb
cmp
stos
inc
pop
movsb
lods
inc
mov
lods
inc
into
or
inc
repnz
lods
repnz
roll
imul
adc
dec
faddl
fcompl
cmpsl
mov
mov
pop
jge
xchg
jo
cmp
ja
fld
cltd
mov
iret
xchg
pop
mov
pop
fwait
lret
fidivl
in
mull
lret
jle
or
in
and
jbe
mov
mov
pop
push
mov
inc
outsb
shl
iret
lock
and
xor
jmp
shrb
pop
loopne
lods
insl
aad
push
in
mov
mov
sub
mov
mov
sbb
pushf
adc
pushf
fsubl
pop
adc
jo
mov
jbe
xchg
mov
leave
or
push
push
fwait
lods
or
sbb
in
xor
in
sti
outsb
cmpsb
in
jmp
fisttpll
rorb
in
or
adc
and
pop
sbb
jnp
into
sbb
cli
jecxz
sbb
stc
pop
dec
ret
cmpsb
pop
shl
cli
or
popa
dec
addr16
sahf
jle
pop
mov
sbb
push
insb
lods
push
xor
mov
mov
sahf
divl
adc
sti
cmp
cmp
cwtl
lret
lea
jecxz
cmp
xchg
jae
jge
out
call
jle
jle
push
jp
rcll
ret
ss
aas
mov
sahf
in
ljmp
cmp
xchg
lea
xlat
mov
or
push
cmp
inc
rcrb
mov
pop
jno
add
mov
test
pusha
xchg
mov
in
ljmp
and
jp
movsb
outsl
xchg
cmp
hlt
push
jge
mov
jbe
jne
or
push
push
imul
imul
int3
dec
pop
push
mov
mov
inc
out
and
addb
adc
sub
sub
xor
mov
jnp
adc
dec
cmpxchg
mov
ja
xchg
push
into
xlat
pop
test
inc
add
xor
fldenv
mov
or
jg
jbe
mov
mov
in
jb
jmp
and
imul
ja
addr16
loop
inc
in
data16
mov
repnz
jnp
mov
or
xchg
mov
sbb
mov
sarl
mov
filds
push
pop
fsubl
lret
stos
data16
push
jp
adc
loope
fadds
arpl
jo
insb
xchg
inc
push
cmc
xchg
sbb
inc
loope
imul
outsl
imul
pop
and
xchg
and
xor
leave
repz
out
je
imul
in
jno
inc
popf
adc
lods
test
mov
xor
shrl
push
pop
xlat
outsb
es
and
mov
and
xor
pop
cmc
push
inc
ljmp
int
out
dec
sti
nop
cld
test
in
rolb
push
loope
sub
mov
mov
mov
rolb
jo
mov
xor
rol
or
sub
mov
stos
inc
clc
ss
stos
mov
mov
testb
ret
je
push
mov
adc
in
leave
sbb
aam
fistpll
iret
mov
gs
lcall
dec
or
xchg
jne
aad
mov
pop
push
add
xchg
es
loop
mov
inc
out
neg
stos
or
lret
mov
cvtps2pd
cltd
xor
inc
imul
add
sub
jns
movsb
jge
jmp
mov
arpl
loop
pop
pop
scas
pop
lcall
popf
bound
cmpsl
xor
sbb
pop
out
xchg
dec
fdivs
or
imul
daa
pop
icebp
sbb
scas
add
ljmp
loop
xorb
xchg
sbb
sti
insb
dec
cmp
mov
fnsave
stc
or
js
adc
push
sbb
mov
out
mov
pop
sarl
rclb
add
lds
push
jecxz
mov
fstps
mov
pop
and
and
mov
xor
add
shrb
rorl
inc
xchg
rclb
roll
push
push
push
add
jl
xchg
les
fmull
pop
mov
mov
jmp
test
xor
test
cld
push
inc
dec
dec
or
xchg
dec
mov
pusha
lods
cmpl
in
fidivrl
jbe
les
sti
dec
dec
and
mov
xor
push
shl
vpsllq
stos
mov
add
and
jae
sub
jne
jecxz
mov
call
mov
mov
xor
adc
pop
imul
xchg
pop
std
xchg
push
test
pop
xor
or
in
xchg
cltd
pop
inc
sub
xchg
inc
push
mov
stos
adc
push
xlat
nop
mov
xchg
repz
push
inc
add
in
jnp
sub
jae
push
xchg
jecxz
mov
sbb
sub
sbb
or
cmpsl
jp
gs
ffreep
ret
dec
adc
sarb
cmp
jae
adc
outsl
pop
hlt
or
sbb
cltd
push
stos
call
test
and
mov
or
lea
cld
arpl
je
jo
out
jne
xor
push
dec
add
into
gs
insb
mov
arpl
cmc
sub
pop
or
arpl
jg
pop
daa
ds
bt
sub
rcrb
pop
xchg
rcll
or
mov
xor
popl
into
nop
inc
mov
jb
push
mov
cmp
and
add
ret
adc
mov
mov
pop
aas
pop
clc
sbb
jle
jbe
fwait
leave
dec
test
adc
dec
aaa
packuswb
addl
les
enter
and
ja
mov
mov
and
shlb
pop
mov
loope
fistpl
or
xlat
push
mov
out
dec
xor
adc
cwtl
mov
and
and
jne
add
aas
fwait
jo
add
sti
les
mov
xchg
enter
ret
lods
int
sub
aas
cltd
mov
mov
pushl
lds
fwait
ss
repnz
jmp
cli
inc
or
mov
or
add
loope
cltd
rol
cmp
mov
aaa
sbb
lock
sbb
jmp
lcall
sub
cmp
push
sub
in
arpl
jbe
call
jno
mov
mov
mov
and
xchg
xor
xor
imul
and
pop
sub
test
push
outsb
ficompl
push
jg
cmp
lds
push
sbb
ds
add
xchg
cwtl
fsubs
movsb
inc
mov
xchg
in
pop
xchg
insl
insb
iret
insl
ds
les
cmp
mov
inc
sub
sbb
add
xchg
add
inc
loope
pop
add
pop
pop
jnp
cmp
push
add
push
adc
push
decb
mov
in
out
or
insl
test
sub
outsl
adc
cmc
xchg
mov
or
adc
cld
ror
mov
stos
lock
mov
push
cltd
ds
int3
std
ljmp
pop
jle
sub
sbb
nop
jb
jge
push
mov
fsts
dec
add
cmp
fstl
pop
insl
repz
in
adc
cmpl
xchg
fdivp
xlat
mov
repz
mov
cld
or
push
jae
lea
jl
mov
pop
incl
cmpsb
jg
outsb
rcll
lahf
lods
mov
dec
sub
cli
cmp
loope
cltd
pop
out
iret
cmp
adc
aaa
call
sbb
movsl
lahf
sbb
xlat
sbb
lds
xchg
jecxz
div
pop
jmp
addr16
inc
cld
add
lret
pop
pushf
leave
mov
push
lods
outsl
sbb
add
dec
push
int3
dec
sbb
xchg
outsl
mov
sub
in
shlb
xchg
add
push
or
jno
push
imul
fnstenv
and
adc
mov
std
jo
movq
fisubrl
inc
outsl
cmp
cmp
and
mov
stos
outsl
jae
fidivrl
fwait
or
add
mov
out
sub
loope
lret
divb
lea
jle
popa
mov
mov
cwtl
pusha
dec
mov
pop
inc
or
xchg
inc
subl
mov
push
adc
icebp
add
dec
mov
pop
rcrb
jno
xor
test
jg
gs
mov
test
mov
ret
pop
decb
test
adc
filds
jle
add
mov
out
fsubrs
mov
and
nop
mov
mov
jecxz
nop
and
lret
adc
sbb
lods
cmp
cli
or
sti
and
data16
test
xchg
inc
adc
pop
mov
repnz
fimuls
mov
dec
sub
jns
xchg
push
sub
xor
loop
ja
ljmp
filds
push
repnz
xor
arpl
mov
imul
addb
inc
out
mov
jecxz
leave
aad
loop
arpl
add
aaa
loopne
cmpsb
jbe
mov
push
inc
push
out
xchg
cmpsb
sub
adc
dec
lods
mov
fwait
dec
jno
shlb
inc
fldl2e
or
xor
test
jle
jl
sbb
movsl
int3
mov
mov
cmp
xor
into
js
lret
aad
sub
stos
loope
cld
nop
push
aaa
test
bound
pop
push
lea
dec
sub
adc
shlb
mov
je
mov
dec
cmp
xchg
out
mov
xor
mov
clc
jg
js
popf
xor
popa
dec
add
enter
data16
lods
jns
jl
jb
jb
test
jecxz
ret
ffreep
faddl
test
aam
test
je
movsb
pop
push
xor
xor
xchg
dec
mov
jnp
adc
addr16
int
pop
fs
lret
sub
cmc
jo
pop
cmpsl
cs
inc
insl
push
mov
dec
mov
xor
mov
mov
sbb
and
adc
push
pusha
xor
mov
or
mov
pop
rol
mov
bnd
xor
cbtw
sub
cmp
stc
je
and
xlat
push
fisubrl
and
fwait
insb
push
xchg
inc
imul
in
mov
insl
xor
sahf
pop
cmp
dec
aaa
cmc
cmp
mov
jp
pop
lret
jp
dec
xor
jae
fmull
add
jmp
movsb
xchg
mov
jns,pn
mov
and
xor
scas
inc
lcall
test
push
dec
adc
loope
fcmove
adc
push
jb
out
mov
lea
sub
mov
cmp
jb
fisubrl
push
stos
hlt
and
or
lods
and
lret
imul
jb
addl
in
push
adc
push
ror
dec
cmpl
arpl
pop
add
push
adc
pop
xchg
mov
jge
cs
cwtl
hlt
jmp
mov
mov
push
repnz
clc
in
dec
popf
xor
mov
outsl
and
xchg
popa
mov
nop
cltd
and
cmp
jae
ss
inc
mov
std
mov
push
or
adc
sbb
cmpl
sub
push
dec
mov
iret
out
lock
sahf
insb
jge
adc
movsl
add
mov
mov
divb
mov
cmp
shll
add
mov
mov
pop
push
sbb
mov
int
fs
xchg
ss
mov
outsl
inc
or
cmp
and
mov
fimull
gs
add
loope
or
lods
pop
and
out
mov
jp
loop
pop
mov
fs
sbb
shlb
outsb
mov
lret
or
xbegin
dec
xor
rcrl
sbb
jns
ljmp
cli
out
lea
or
call
dec
inc
ja
xchg
fs
stos
jo
ja
js
mov
jecxz
mov
mov
pop
mov
fbstp
fwait
adc
or
push
mov
sub
into
xlat
jge
shll
push
xchg
add
mov
imul
or
sbb
jg
rolb
mov
enter
test
sub
iret
mov
and
add
cs
sub
sbb
shll
sub
cmp
xor
inc
out
cmp
adc
mov
cwtl
mov
sti
jb
cwtl
insl
out
orl
dec
stos
ss
pop
out
mov
test
xchg
dec
mov
aas
mov
pop
adc
cli
fcmovnb
pop
fwait
shrb
xchg
xchg
aaa
inc
sbb
test
sub
int
and
mov
adc
cmp
mov
xchg
xchg
in
imul
mov
add
xor
mov
add
cmp
cld
sbb
sbb
push
fbld
sbb
inc
mov
pushw
push
sti
je
adc
jns
gs
mov
push
das
sbb
in
pop
notl
jl
mov
imul
pop
lea
daa
lea
sub
dec
add
pop
mov
and
test
xor
test
rclb
mov
lcall
insl
mov
push
add
movsl
test
je
push
hlt
pusha
jmp
push
rcll
sarl
or
or
xor
xchg
push
pop
in
mov
cmp
sbbb
jmp
sub
mov
add
cltd
insl
cmp
or
inc
xor
cmp
sti
cmp
mov
pop
rcr
cld
lret
ret
xchg
fld
pop
ljmp
pop
mov
cmp
dec
jb
pop
jmp
in
inc
xor
in
jno
js
icebp
jecxz
mov
sbb
add
loope
mov
cmpsb
fldcw
ficoml
xchg
call
sub
outsl
push
push
mov
test
repnz
loopne
jge
jbe
out
cmp
aam
bound
pop
into
push
xlat
cmp
imul
shlb
sarl
pop
fists
loop
mov
mov
sub
or
sti
jecxz
push
and
or
sbb
stos
mov
push
dec
push
push
imul
sub
lods
cmp
cmp
jmp
mov
ja
adc
les
cmpsb
push
xchg
mov
xchg
aad
push
inc
xor
iret
mov
jecxz
outsl
inc
and
cmpsl
mov
daa
test
shrl
subb
push
stc
jle
mov
dec
or
roll
fdiv
add
out
ret
sbb
iret
mov
stos
push
adc
gs
and
lahf
int3
cmp
cmc
out
int3
mov
mov
out
fidivrs
or
sub
xchg
in
xor
clc
imul
jl
mov
lods
and
cmc
ficompl
mov
mov
add
sub
mov
push
and
mov
xor
mov
adc
aaa
cmp
mov
sbb
xchg
cs
jb
aad
ss
xchg
cmp
stos
jnp
outsb
mov
add
ds
outsb
scas
aam
push
xor
xor
mul
test
jg
rclb
sbb
cmpsl
sbb
aas
and
jg
mov
mov
dec
test
sbb
mov
hlt
idivl
add
in
test
jo
xlat
cli
jmp
aas
lret
or
sti
mov
dec
insb
ja
jae
dec
pop
into
in
andb
je
std
xor
call
adc
icebp
add
int3
jno
orl
adc
sbb
aam
pop
xchg
and
xor
ret
mov
sbb
xor
fnclex
test
add
pusha
xchg
out
leave
insl
int3
lret
nop
cmp
xor
cmc
daa
ret
add
pop
add
inc
std
aam
aaa
sub
lcall
add
sbb
mov
inc
lods
inc
clc
mov
pop
fwait
sub
enter
push
xorb
lods
mov
fistps
inc
jl
pop
dec
adc
fimull
dec
cmp
mov
leave
imulb
or
pop
outsb
lea
scas
add
cmp
int3
push
ljmp
mov
and
cwtl
cmpsb
or
dec
jno
arpl
xchg
add
xchg
je
ret
call
fnsave
jg
inc
xchg
adc
aad
bound
outsb
subb
data16
push
add
jne
mov
push
pop
xchg
idiv
cmp
aaa
js
xchg
push
xor
addr16
add
lcall
and
and
sub
outsb
rcll
inc
inc
cmp
inc
pop
mov
push
sub
jns
lea
mov
fistpl
mov
sti
jmp
daa
stc
dec
adc
jle
fidivs
pushf
sbb
outsb
insl
outsl
push
gs
shll
call
aad
adc
inc
jnp
lcall
das
xchg
dec
icebp
les
jb
xchg
dec
addr16
aad
mov
loope
push
hlt
mov
mov
pop
inc
jo
jb
inc
mov
pop
push
jns
xchg
icebp
fwait
mov
subl
jmp
pop
push
faddp
fldt
addl
jecxz
cmc
cmc
xchg
add
lcall
cmp
pop
cld
daa
and
cmp
es
cwtl
mov
inc
nop
lret
cmp
stc
sahf
mov
mov
test
lock
jo
mov
pusha
jle
lret
call
dec
addb
push
mull
and
inc
divb
push
scas
pop
sub
lods
ret
iret
mov
add
xlat
fsubs
xor
and
popa
int3
and
shrb
dec
add
inc
sbb
mov
sbb
les
jae
fldl
addl
lret
pusha
scas
int3
ja
lahf
inc
popf
xor
shrb
mov
cs
cli
shlb
xlat
add
mov
xor
lret
cltd
add
imul
pop
sbb
mov
sbb
cmp
repnz
leave
pop
or
pop
jns
mov
sub
jo
cwtl
mov
int3
mov
out
pop
icebp
pmaxsw
and
and
xchg
lds
mov
add
scas
test
adc
lods
call
out
cmp
test
lret
push
iret
shrl
bound
pop
xchg
xchg
dec
repnz
mov
cmp
icebp
jle
imulb
xor
int
cmp
movsb
dec
dec
xchg
mov
cmpsb
lods
xchg
add
in
mov
cmp
sub
lret
idiv
fwait
xor
jge
test
mov
jno
ficoml
push
inc
dec
jbe
stc
mov
imul
cmpsb
es
xlat
cmp
aad
sti
pushf
aad
and
arpl
pop
mov
xor
fdivrp
add
int
mov
mov
push
adc
repnz
cs
pusha
test
or
adc
popa
cmp
dec
test
lret
mov
xchg
jle
mov
jb
lock
jecxz
andl
cmp
xor
adc
adc
cmp
in
push
iret
xchg
repz
movsl
push
xchg
in
mov
inc
xor
cmp
cli
rcrb
and
dec
je
mov
lret
out
lahf
ja
movsl
mov
push
stos
mov
dec
add
mov
inc
and
sub
and
int3
inc
scas
aam
popf
insl
lods
ss
xchg
mov
add
mov
mov
cmovs
js
push
pop
cmp
jg
scas
call
fistpll
cmovs
js
push
pop
cmp
jg
lret
lahf
call
iret
mov
mov
cmovs
jno
insb
aas
sbb
pop
cmp
sbb
in
jo
sarb
out
sub
pop
movzwl
outsl
movl
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
fsubs
leave
loope
mov
test
add
pop
add
pop
add
add
jp
push
add
add
add
outsb
add
and
imul
inc
add
add
push
add
add
add
add
add
pop
fldl
enter
add
push
pop
aas
add
add
xor
add
mov
outsb
add
add
push
pop
faddl
rolb
add
lcall
add
add
add
add
add
add
add
add
add
lods
add
lret
add
inc
add
add
add
add
cmp
push
add
add
outsl
add
push
add
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
or
dec
add
add
add
add
add
pop
inc
add
sbb
add
lcall
add
add
add
mov
xor
add
add
add
add
add
pop
add
cmp
jno
mov
pop
add
add
pop
mov
mov
add
test
pop
add
add
test
add
add
add
add
add
add
push
add
add
add
jge
xor
add
add
add
add
mov
dec
add
add
add
outsb
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
add
add
stos
add
add
test
add
add
pop
add
add
add
add
add
add
add
add
faddl
out
push
push
add
dec
add
add
popf
add
add
add
dec
add
add
add
movb
add
add
add
add
inc
add
sbb
fadds
mov
or
leave
add
push
push
pop
add
jae
fldl
cmp
xchg
add
add
mov
add
add
add
add
add
add
mov
add
dec
add
or
lahf
add
add
add
add
lock
add
pop
call
add
add
pop
add
add
add
test
add
add
pop
addl
add
add
add
add
add
add
add
add
or
inc
add
clc
add
add
add
add
test
add
dec
add
add
add
pop
add
add
icebp
add
add
push
add
add
pop
or
inc
add
inc
add
add
push
enter
scas
add
add
lods
add
aas
add
add
sbb
add
add
add
stos
add
add
sbb
adc
sbb
sub
sbb
add
insl
add
add
or
add
add
add
daa
add
add
inc
add
sub
pop
add
push
pop
mov
icebp
add
adc
add
movsl
add
add
add
cmp
jge
cmp
and
sub
add
add
mov
add
add
sub
out
xchg
dec
es
jecxz
push
dec
mov
jle,pn
push
fildll
inc
fstps
dec
call
mov
add
sub
or
add
push
mov
jne
das
fmuls
lcall
dec
outsl
popa
int3
and
ljmp
jg
fimull
bnd
cmp
repz
pop
stos
add
dec
inc
xchg
jo
ret
pop
ret
fmuls
cmc
cmp
enter
mov
ret
fidivrs
insb
bound
rcrb
add
mov
sahf
xor
sbb
es
lds
mov
jl
addr16
ret
pop
cld
mov
xchg
cmp
in
push
and
cmp
mov
pop
mov
jns
pop
push
push
inc
lods
outsb
mov
out
fldl
inc
in
push
in
stos
into
or
insl
mov
rolb
aaa
xor
mov
hlt
or
aam
js
sarl
mov
pop
adcb
addr16
jp
mov
cmp
pop
dec
cwtl
in
inc
daa
xchg
movsl
lds
push
mov
xchg
ja
jecxz
inc
xor
call
mov
jno
push
sub
or
adc
into
outsl
sub
jge
cltd
jmp
sub
arpl
add
push
dec
stos
les
scas
adc
dec
or
xchg
jg
pop
sbb
jl
dec
stc
push
mov
sub
adc
lock
imul
or
stos
out
jl
fldcw
imul
dec
xor
cmpsb
jg
lds
je
inc
call
xor
xor
cmpl
pop
repz
mov
repnz
xchg
mov
mov
adc
mov
sbb
jae
test
inc
pop
dec
dec
out
shll
mov
xchg
movl
xlat
bnd
jmp
sub
testb
icebp
in
out
leave
lahf
or
outsb
xor
jmp
jge
sbb
or
lret
jmp
mov
test
add
sub
in
dec
dec
ss
cmp
addr16
cld
loopne
lcall
fadds
rcll
cmpsl
pop
mov
imul
push
or
adc
xchg
or
cld
mov
xchg
mov
xor
test
adc
repz
popf
pop
stos
inc
dec
stos
mov
cmp
jle
dec
push
popf
mov
stc
arpl
adc
inc
fmul
int3
jl
es
stc
out
jp
cmp
outsb
ds
and
push
add
out
loop
pop
xor
lahf
stc
inc
jg
sbb
adc
frstpm(287
std
fadds
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
