call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
rcll
ret
std
subl
adc
xor
inc
adc
icebp
mov
out
rcll
mov
and
popa
bound
inc
and
and
push
add
icebp
inc
loope
rorl
std
mov
mov
inc
jno
inc
imul
and
add
jg
jb
cmp
cmpl
movsb
sbb
clc
or
adc
cwtl
sahf
cmp
je
xor
push
pop
dec
mov
push
inc
int
jae
dec
cltd
pop
mov
add
out
and
inc
adc
idivb
mov
lret
loopne
jne
xor
push
or
adc
and
mov
lds
jg
sbb
repz
and
in
mov
inc
sbb
pop
test
dec
pop
cmp
dec
sti
pop
mov
add
jae
mov
je
insb
add
sbbl
out
adc
xor
xor
jb
adc
clc
icebp
in
adc
roll
mov
in
test
inc
sub
jns
jno
push
push
not
jmp
mov
popf
enter
aad
or
data16
xor
sub
dec
out
xchg
test
mov
rorl
xchg
inc
cmp
add
imul
sbb
sub
outsb
iret
mov
test
mov
repz
and
popa
add
inc
arpl
jae
inc
adc
mov
rcll
mov
and
popa
add
inc
arpl
jae
inc
adc
mov
cmp
add
jno
dec
cwtl
sar
adc
and
out
xchg
mov
inc
adc
add
mov
cmpsb
mov
aam
or
lret
xchg
inc
xchg
rolb
jns
sbbl
mov
nop
stc
int3
mov
mov
add
cmpsb
es
call
inc
fdiv
sbb
add
out
add
notb
incl
dec
popf
jl
push
mov
into
cmpl
cmp
mov
imull
jmp
ljmp
sbb
push
scas
int3
subb
es
out
divb
xchg
lahf
push
cmp
mov
add
jns
and
xor
add
stos
sbb
xor
cmp
ja
jb
dec
or
loope
stc
lock
hlt
xor
cwtl
out
stos
jle
or
jge
sbb
punpcklbw
stc
adc
cwtl
cld
add
xlat
aad
xchg
mov
test
inc
sbb
int3
pop
pop
xor
push
hlt
mov
int
mov
mov
fwait
cld
test
lret
mov
push
xor
cmp
xchg
int
cmpsb
outsb
cmp
jns
outsl
or
pop
cmp
cmp
test
mov
mov
cmc
or
daa
aam
enter
js
mov
insl
jecxz
aaa
inc
cmp
push
idiv
stos
xorl
incb
lcall
popa
add
mov
icebp
inc
xor
loop
ds
pop
aas
add
mov
push
pop
jl
inc
dec
stc
adcb
repnz
xor
out
xchg
out
sbbl
int
dec
adc
loope
scas
mov
call
ret
insb
call
push
push
inc
add
stos
repz
cmp
fiaddl
pop
or
sub
or
sbb
adc
jne
mov
icebp
outsb
or
sbb
mov
fwait
inc
lods
jmp
aad
add
in
mov
jg
aaa
jecxz
out
loope
jne
push
mov
add
pop
in
jmp
loop
sbb
push
pop
stc
dec
mov
mov
fxch
jecxz
xchg
loop
xor
int
jo
loopne
mov
push
andb
mov
sub
jl
lret
ljmp
jno
push
icebp
and
fldcw
lret
or
xchg
movsb
add
movsl
or
arpl
addr16
adc
sbb
xchg
pop
ljmp
shl
aas
mov
insl
pop
adc
cwtl
mov
stc
ss
xor
push
xchg
mov
xchg
inc
xchg
cld
orl
test
mov
int3
mov
orl
sbb
mov
adc
pop
lcall
shrb
sbb
fs
movsl
adc
imul
sub
mov
jb
scas
ficoms
in
sub
push
out
adc
xor
cmp
sub
xlat
loope
xor
and
ja
jl
call
inc
adcl
cmpsl
popf
lods
icebp
lock
cmp
or
cmp
data16
call
bound
nop
dec
jecxz
loop
int
sbb
dec
rolb
sahf
sub
pop
cmpb
in
sub
cmpsb
cwtl
jno
mov
iret
push
outsb
and
pandn
movsl
cmc
xor
xor
mov
mov
dec
rorl
or
push
push
dec
xchg
mov
or
mov
sbb
xchg
xchg
test
stos
in
mov
mov
insl
lock
ficomps
ss
jnp
push
and
push
cmp
mov
sub
mov
pop
scas
filds
and
xor
out
popa
outsl
cwtl
mov
movsb
out
adc
test
imul
pop
inc
pop
shlb
or
push
cmp
stos
dec
test
shll
dec
fcomps
inc
mov
pop
jg
push
shr
mov
lahf
add
cmp
lcall
cmp
cld
call
jns
jp
leave
iret
daa
xlat
xor
inc
jo
xchg
pop
or
xor
cmp
sub
add
dec
xchg
shll
imul
loopne
mov
fdivrl
enter
sti
ret
dec
lret
sbb
and
popa
adc
test
mov
xchg
xor
mov
bound
out
out
je
xor
test
pop
dec
out
or
shl
adc
push
sarl
leave
pop
jbe
divl
jg
mov
pop
and
pop
sbb
fstpl
and
jne
mov
push
xchg
xor
ret
and
repz
inc
push
sti
fnstcw
push
push
jle
mov
push
add
dec
in
dec
int
ss
stos
iret
pushw
stc
fsubr
mov
cmp
popa
ljmp
xor
xor
dec
mulb
stos
mov
stc
fcoml
adc
aas
lods
movsl
cmp
ficomps
xchg
dec
sub
or
mov
cwtl
sub
and
cltd
add
push
lds
cs
jae
mov
mov
sbb
movl
lcall
and
adc
data16
ret
int
dec
imul
cwtl
jecxz
sub
mov
jl
mov
fdivs
jbe
mov
out
add
inc
push
mov
fisubl
cmpb
stc
lcall
es
ss
jle
or
scas
jg
mov
aas
pop
popa
pop
pop
jmp
mov
push
ror
pop
jne
scas
jg
insb
adc
roll
scas
in
outsb
dec
shl
sbb
pushf
or
mov
daa
cmp
pushf
daa
fwait
loopne
aad
jg
mov
aaa
pop
movsb
mov
add
adc
sahf
and
movsb
fmull
or
push
mov
mov
icebp
int3
dec
jno
iret
mov
loop
leave
roll
movsl
icebp
lret
xor
mov
daa
adc
xor
je
xchg
push
aas
out
pop
sbb
loopne
mov
mov
mov
pusha
pushf
xor
jnp
and
pop
sbb
shll
imul
xchg
mov
dec
push
data16
inc
je
pop
mov
dec
jmp
ret
mov
pop
xchg
pop
testl
jae
cmpsb
stos
jb
xchg
xor
dec
sbbb
call
out
cmpsl
sbb
in
cmp
mov
subb
jnp
fistpll
pop
xchg
mov
js
hlt
cmp
push
adc
rorb
out
jecxz
mov
enter
dec
jne
imul
aas
outsb
mov
in
adc
add
and
ja
adc
in
push
mov
sbb
lock
addl
jno
pop
and
xchg
shr
inc
rorl
jb
xor
add
mov
pop
sub
orb
loope
ret
push
lcall
lretw
loop
push
ja
inc
sub
movsl
daa
mov
sbb
test
xchg
imul
bound
das
mov
es
and
test
imul
sbb
cmpsb
and
inc
int
popa
xchg
inc
pop
xchg
and
roll
js
notb
xchg
mov
xor
jg
shl
pop
mov
int3
bound
outsl
dec
push
sub
cmp
cwtl
in
movsb
test
daa
cmp
sbb
xor
movsl
push
psrad
and
dec
fwait
enter
dec
mov
testb
addr16
into
daa
jbe
xor
rcrb
xchg
outsb
gs
bound
inc
jo
cltd
and
loopne
jge
out
add
loop
in
mov
das
movl
pusha
fdivrs
sbb
pop
sbb
xchg
inc
add
inc
stos
push
adc
loop
cmpsl
fbld
arpl
inc
or
xchg
int
lods
idivb
xor
sbb
out
fistl
cmp
cmp
movsb
or
mov
lret
sbb
sbb
cwtl
sub
mov
test
outsb
addb
aaa
and
add
push
cs
jmp
push
lea
and
dec
sbb
addr16
xchg
fisttpl
ljmp
fistl
rolb
adc
adc
cmp
dec
fdivrs
jle
std
daa
jmp
scas
push
dec
ret
testb
push
or
push
mov
in
jg
push
jl
mov
push
ja
rclb
cmp
jns
fidivs
mov
pushf
lret
in
adc
shlb
mov
insl
pop
ret
ret
dec
call
std
ret
jns
lock
jae
popa
pop
mov
cmpsl
loop
jecxz
or
and
arpl
aad
mov
inc
js
inc
jecxz
cmp
adc
das
into
aam
xor
push
push
inc
jb
mov
mov
jb
push
dec
or
sbb
out
test
in
mulb
push
outsl
jo
daa
dec
xorb
pushf
push
add
mov
adc
enter
in
scas
or
mov
testl
incl
stos
out
add
inc
mov
bound
out
adc
mov
mov
mov
mov
icebp
adc
jbe
push
xchg
push
sbb
ljmp
bound
sbb
into
out
andl
jae
mov
mov
lock
jp
jno
scas
and
mov
incb
push
dec
in
fistpll
mov
dec
sbb
push
mov
and
shrb
inc
push
mov
aad
insb
lcall
fwait
xchg
or
pop
loope
xchg
jg
add
dec
nop
mov
and
loope
add
jg
ss
add
fldl
cli
jle
add
test
pop
jmp
sub
lods
fldenv
insl
loope
cltd
sbb
movb
aas
shrb
mov
adc
inc
popf
addr16
call
std
and
sahf
xor
jmp
xchg
filds
insb
cmp
std
xor
push
push
clc
mov
pop
leave
ss
add
adc
sub
and
sti
cwtl
mov
cmpsb
scas
les
pop
lock
inc
jl
xchg
data16
dec
sti
sbb
aas
inc
call
insb
xor
js
sarb
das
sbb
mov
cmpl
mov
inc
jno
adc
je
enter
addr16
pop
pusha
fcompl
mov
push
xor
ret
call
stos
cmp
mov
or
stos
and
fsubl
lods
mov
daa
pop
and
jae
sbb
push
mov
lea
in
ljmp
mov
adc
or
call
jl
sbb
dec
jbe
pop
push
jae
xor
cs
xchg
jnp
test
jg
iret
das
call
cmc
fcomps
xor
dec
hlt
push
outsl
push
arpl
pushf
scas
rcl
pop
mov
loope
ljmp
outsb
test
dec
push
repz
lea
dec
pop
or
inc
xchg
clc
dec
dec
data16
inc
fmuls
lahf
dec
out
sahf
fadds
mov
insb
rorb
stos
inc
or
cltd
mov
pop
mov
or
testb
movups
adc
test
add
cld
sub
lahf
insb
sbb
fisubs
pop
cmp
insb
cmp
mov
mov
xor
pop
mov
movsl
repz
imul
pop
jl
aaa
xor
movsl
bound
in
je
rorl
sub
and
test
dec
enter
cld
out
xchg
fistps
rclb
jl
fidivrl
pop
jnp
xchg
sbb
xchg
int3
cltd
dec
popa
push
adc
test
shrb
mov
push
arpl
mov
mov
mov
inc
leave
pusha
in
mov
pop
sarb
in
mov
lds
push
stos
insl
xor
fldenv
scas
pop
jnp
pushf
inc
mov
std
outsl
clc
inc
fsts
sub
pop
movsl
pop
jmp
pop
sbb
mov
outsl
push
inc
insl
cmp
jno
repnz
dec
pop
cmp
in
movsb
fsubrs
xchg
mov
sub
add
push
mov
xor
cli
or
and
dec
and
jno
pop
popa
add
jo
lds
or
popa
stc
jmp
cmp
scas
push
jne
mov
mov
popa
fstpt
sub
sbb
orl
insb
ljmp
add
mov
sbb
sahf
ss
movsb
stos
hlt
push
mov
ljmp
inc
jle
in
jmp
and
mov
xor
adc
stos
jne
int
in
push
insl
inc
les
outsl
xchg
jnp
mov
shll
jmp
pop
xchg
mov
mov
cwtl
and
inc
dec
sahf
fidivrl
mov
sbb
push
repnz
stc
add
xchg
push
cltd
je
shl
push
jl
ja
sub
inc
lret
shrb
and
shr
insl
repnz
daa
out
in
add
daa
cmp
hlt
into
inc
aas
bound
inc
loopne
pop
mov
and
aaa
push
out
push
xor
dec
loop
es
pushf
mov
aad
and
shll
mov
mov
sti
sub
add
add
sahf
or
shr
jp
cs
mov
pop
pop
adc
sub
adc
lea
ficoms
add
sbb
ss
sbb
push
into
sub
sub
and
out
loope
cmp
fisttps
ret
loopne
icebp
fildl
ficoms
push
jg
int3
stos
and
in
adc
in
popf
xchg
push
dec
clc
sbb
push
push
xor
sbb
pop
or
stos
jecxz
cmp
mov
sahf
xor
pop
sbb
and
mov
xchg
pop
pusha
or
sbb
fs
sahf
mov
test
pusha
sbb
cltd
pop
and
rcr
sbb
jg
loopne
mov
pop
fs
les
jg
cmp
xor
cltd
adc
loopne
push
out
and
out
push
and
popf
jecxz
pop
sbb
loope
sbb
gs
inc
adc
jae
out
sbb
daa
out
jbe
pushf
test
testl
enter
pop
sbb
lcall
pop
shl
xor
xor
lss
or
lcall
pop
sbb
aas
push
sub
xor
inc
add
lods
lods
xchg
pop
adc
jge
mov
cmp
xorb
enter
stc
xchg
and
out
or
pushf
leave
repnz
outsl
mov
test
imul
lea
in
pop
pop
mov
pop
stc
mov
movsl
stc
rclb
adc
cmp
xor
scas
pop
mov
leave
imul
xchg
adc
call
inc
adcb
cmp
push
sub
dec
outsl
psubsw
nopl
cld
xchg
js
shlb
hlt
pop
pop
fldl
jns
jecxz
pop
push
fistps
cmpl
or
les
loopne
cmpb
mov
jge
pusha
or
loopne
push
fs
pop
rcr
push
xor
data16
ret
cmp
xchg
ja
jae
in
fcomps
cmpsb
mov
jp
pop
popf
addr16
cltd
xchg
shlb
mov
jp
pop
mov
jge
mov
popf
dec
loop
hlt
movsb
jecxz
xlat
lea
daa
or
aaa
ss
ss
cmp
int3
mov
lcall
lret
cmp
out
pop
or
popa
mov
cli
out
inc
pop
mov
in
xchg
lods
mov
mov
insb
cs
bound
pop
jbe
movsb
xchg
in
pandn
daa
xchg
jo
push
adc
xor
cwtl
fdivl
or
sub
mov
add
jecxz
push
and
divl
sub
daa
rcrl
adc
pop
js
mov
jne
scas
in
lret
testl
mov
jb
jg
xor
insl
test
sub
adcl
mov
sti
dec
stc
fwait
xchg
dec
add
xor
sbb
cltd
fildll
addl
movsb
leave
js
add
push
fwait
in
push
fld
fldl
jp,pn
repnz
rorb
test
aas
repz
data16
shrb
mov
add
ds
in
push
pop
sub
addr16
imul
shl
out
outsb
fldt
lret
and
sub
or
repnz
jl
jb
stos
pusha
cmp
cmpsb
cld
mov
call
push
xlat
pop
adc
mov
sbb
aaa
cli
outsb
push
call
jl
pop
and
push
cs
fs
fimull
sbb
lds
push
in
addr16
xchg
mov
mov
cmp
mov
loopne
rclb
mov
jmp
mov
jbe
lret
das
and
and
pushf
roll
mov
or
fsubr
and
jg
lret
dec
loope
sub
aaa
in
stos
cmp
dec
jge
ja
pusha
mov
cld
xchg
xor
xchg
cs
or
inc
stos
aam
jge
mov
clc
pop
jle
push
adc
stc
into
xchg
pop
clc
mov
cltd
movsb
mov
cli
xor
xor
aad
xchg
out
sub
sahf
jle
mov
jecxz
rcrl
mov
shl
and
test
enter
sbb
mov
jno
push
ja
imul
fidivrs
dec
xchg
ds
insb
insl
mov
lret
xchg
mov
xor
xchg
les
xchg
test
scas
clc
lret
in
aaa
mov
enter
jmp
jae
inc
loop
dec
idivl
xchg
jae
mov
xchg
aaa
repnz
add
pop
lret
push
aam
dec
add
repz
int
sub
push
mulb
sbb
cld
stos
push
cmp
jno
movsb
add
mul
lods
lahf
dec
add
push
add
rcrl
shl
push
je
lods
subl
pop
leave
mov
pop
fwait
add
jl
ds
stc
fdivrl
lds
lret
test
out
sbb
mov
jns
fstpl
dec
jbe
jge
out
sub
mov
adc
cwtl
inc
lea
mov
dec
xchg
mov
sub
and
pusha
dec
cmpsl
cmp
push
push
imul
jo
test
mov
mulps
jg
xchg
xchg
cmp
cwtl
cmp
fsubl
bound
mov
xor
int3
xchg
sbb
jge
xchg
ss
xchg
jae
ss
jecxz
loope
mov
jb
sub
aad
movsl
push
adc
sbb
jne
or
mov
rolb
inc
fistl
lcall
lret
pop
stc
inc
or
cmp
pop
fs
insl
xlat
enter
fsubrl
push
dec
jl
frstor
xchg
cmp
pop
imul
dec
inc
lahf
daa
xchg
insb
in
sbb
enter
add
sbb
or
pop
jmp
push
add
dec
rol
mov
dec
adc
fsts
lret
jl
xchg
jns
sti
add
add
and
and
fdivr
xor
or
out
outsl
xchg
inc
jb
pop
and
cmp
add
ja
popf
lods
dec
test
sub
push
push
xor
jl
ljmp
push
test
rolb
push
pop
xor
xchg
pop
inc
popa
or
fisttpl
dec
divb
cmc
xchg
scas
and
and
inc
sbb
icebp
sbb
mov
or
wrmsr
pop
rcrl
jecxz
nop
adc
push
dec
in
xchg
xor
or
sub
stc
mov
jb
pushf
add
arpl
aas
clc
jo
mov
es
xor
inc
dec
icebp
mov
or
ljmp
jle
daa
enter
movsb
jmp
adc
scas
cli
repnz
shlb
call
js
sbb
ja
sub
andl
call
cld
ret
dec
mov
fsubp
in
lret
ja
mov
cwtl
pop
jmp
jne
inc
jecxz
dec
mov
cmp
ljmp
adc
dec
es
out
lahf
lods
xchg
lahf
cmp
fmuls
push
imulb
lcall
cmp
and
push
cltd
lea
push
mov
in
shl
enter
lock
daa
div
out
ret
jb
es
mov
dec
scas
and
jbe
push
fwait
pusha
mov
dec
call
mov
pusha
stos
lock
xor
cmp
jnp
ljmp
xor
movsl
jle
and
add
pop
mov
sub
mov
fld
lock
inc
js
nop
jle
lods
pop
ds
pop
or
shl
inc
dec
loope
mov
in
notl
lods
out
mov
mov
mov
adc
in
mov
ret
mov
and
inc
jb
pop
xor
adc
and
dec
push
push
loope
rcll
mov
and
popa
add
inc
arpl
jae
inc
adc
mov
rcll
mov
and
popa
add
inc
arpl
jae
inc
adc
mov
rcll
mov
and
popa
repz
adc
xor
inc
adc
loope
shll
mov
and
lret
test
mov
lods
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
sub
cmp
or
sbb
sbb
pop
or
pop
cwtl
or
pop
mov
fldt
fdivrl
fmull
cld
sbb
mov
mov
or
sbb
fcom
sub
cmp
or
sbb
dec
stos
pop
dec
xchg
push
in
clc
or
pop
lods
push
fdivrs
xchg
hlt
test
inc
mov
movsl
mov
and
xor
int3
and
in
sbb
out
nop
arpl
test
jno
mov
dec
jae
enter
cmp
je,pt
aas
popf
repz
push
sbbl
pop
lret
xchg
sti
fstps
int3
cmp
ja
test
mov
xor
insb
jbe
mov
insb
ss
sub
and
mov
mov
fsubrl
xchg
mov
stos
cmpsb
and
mov
jno
xor
xchg
fnsave
mov
int3
pop
or
int3
fnstsw
or
fdivrl
in
or
sbb
movsl
pop
push
test
mov
adc
add
sub
and
jmp
dec
cwtl
pop
call
sub
pop
rcrl
out
mulb
js
dec
dec
pop
mov
mov
decb
or
stc
pop
dec
in
pop
aam
fimuls
hlt
imul
out
dec
mov
hlt
add
js
dec
mov
mov
or
sbb
sub
cmp
int3
sub
cmp
or
sbb
mov
mov
or
sbb
sub
cmp
int3
sub
sub
mov
pop
in
bound
dec
fidivs
cmp
imul
lahf
movsb
rcrl
jnp
mov
push
mov
test
xchg
push
sarl
push
fsub
iret
test
insb
rcrb
gs
and
sub
sbb
mov
in
mov
aam
cs
sahf
fidivl
sti
jp
dec
inc
or
negl
scas
jno
add
xchg
push
pop
cmp
dec
xor
fisttps
push
mov
bound
push
and
jp
test
iret
jnp
mov
push
jne
repz
pop
sub
and
push
loopew
lods
add
jp
loopne
insl
inc
mov
push
mov
add
enter
sbb
sbb
push
xor
mov
lahf
or
sti
test
adc
fldcw
mov
out
fcmovnu
mov
shll
add
lret
xor
in
sub
lds
dec
xchg
ja
pop
mov
enter
inc
or
push
ficompl
sbb
push
mov
adc
jne
xor
pusha
and
pushf
inc
das
out
cmp
popa
pop
aas
in
xor
jo
pop
sub
mov
mov
dec
xchg
pop
mov
aas
xchg
xchg
stc
test
imul
dec
lahf
xor
iret
cltd
sub
xor
cmp
bound
jno
xor
mov
or
insl
lahf
or
and
pop
outsl
insb
call
push
lds
xchg
loopne
lea
rsqrtps
pop
fstpt
add
inc
sub
pop
sub
stos
mov
xlat
and
inc
lds
push
ss
xlat
sub
fcompl
pop
or
sbb
andb
sbb
mov
mov
scas
jns
sbb
enter
pop
stos
xchg
sbb
jg
mov
mov
and
cwtl
insb
daa
pop
aam
in
mov
adc
pop
xchg
fdiv
dec
add
stc
add
test
loope
inc
sbb
pop
mov
in
out
push
ljmp
jp
int
adc
cmpsl
mov
and
popf
xchg
adc
daa
sub
loopne
mov
or
cmp
leave
and
mov
add
ja
mov
or
cmp
jno
jne
dec
ss
pop
lock
mov
insw
imul
jl
adc
popa
test
sub
jmp
add
loope
icebp
xchg
push
lea
jbe
loopne
shl
mov
stos
mov
stos
or
jb
dec
sbb
push
test
push
jp
or
loope
subl
imul
out
sbb
adcb
les
insl
push
inc
les
pop
movsb
push
mov
jbe
fwait
scas
xor
jmp
shl
or
loope,pt
daa
sub
je
mov
xor
push
cs
sub
pop
cli
imul
mov
aas
pop
push
popf
dec
movsl
push
mov
popf
outsb
cmpsb
xor
cmp
roll
adc
outsb
std
adc
adc
shll
adc
fldl
jle
or
ja
fwait
sbb
mov
xchg
lcall
mov
inc
add
lahf
outsb
sub
mov
stc
pop
xor
fs
xchg
stos
mov
jge
pop
jle
xchg
loope
fwait
int3
movsl
mov
pmaxub
and
ds
and
or
loopne
jle
stos
or
mov
fldcw
std
mov
inc
test
test
push
outsb
mov
popa
jne
fbld
cmc
inc
adc
popf
pop
gs
sub
in
out
inc
lock
sbb
jle
out
in
dec
sbb
fidivrs
dec
mov
fidivrs
jne
ret
push
jns
cltd
mov
imul
xor
xor
dec
mov
add
inc
jns
jle
adc
adc
jb
and
adc
lret
cmp
int
imul
in
jne
push
push
mov
testb
ja
iret
pop
out
nop
or
lods
outsl
cmp
mov
jp
pushfw
enter
lods
ds
cltd
dec
call
js
push
stc
loop
mov
jecxz
leave
in
negb
push
aas
test
push
adc
and
lock
lods
fwait
xchg
sbb
add
add
mov
push
shl
ss
in
loope
inc
adc
int3
inc
int3
loopne
ljmp
push
add
es
cmp
notb
push
cld
std
push
dec
popa
xchg
movsb
lret
sbb
jle
add
insb
inc
xor
int
xchg
sub
pop
cmp
stos
push
push
icebp
loop
push
mov
out
jmp
call
decb
pop
cmpsl
dec
sub
mov
push
sbb
subl
sahf
cmpb
pop
push
insb
pop
pusha
insl
in
mov
cmp
push
pop
mov
add
mov
pop
sarb
dec
out
ss
lcall
push
ds
adc
sbb
push
push
push
out
leave
adc
jge
jle
push
cmp
cmp
add
cmpsb
lods
cmc
negl
iret
mov
in
inc
push
lcall
sbb
and
xor
cld
cmpsb
ljmp
cmp
test
pop
lret
push
jmp
mov
pop
popl
or
jnp
stc
popf
inc
bnd
lahf
push
add
inc
xchg
sub
jo
gs
push
jl
and
iret
push
hlt
xor
pop
add
ljmp
jecxz
ficoms
stc
testl
sub
testb
mov
inc
dec
mov
out
cmp
lahf
dec
pop
jp
mov
testl
sbb
pop
test
mov
hlt
aas
inc
cmpb
cmp
test
lods
aam
mov
cmp
xor
out
jne
ret
popf
xor
jns
in
mov
inc
imul
into
movl
imul
sbb
sbb
nop
xor
mov
jge
jns
mov
js
loope
iret
shrd
mov
negl
inc
and
fistl
push
dec
scas
push
pop
sbb
push
jns
pop
outsb
xchg
mov
mov
adc
fwait
mov
push
inc
enter
push
adc
lea
push
in
pop
adc
ljmp
mov
push
jb
addr16
cli
aad
ljmp
push
sbb
sbb
push
jae
cld
xor
gs
pop
cwtl
xchg
fiaddl
push
jae
xchg
push
lea
lds
mov
mov
cmpsl
pop
gs
les
sub
aad
mov
adc
pop
xchg
jnp
mov
push
pop
inc
xchg
sbb
mov
xchg
dec
pop
int
xchg
mov
sahf
xchg
cmp
pop
mov
or
push
or
mov
mov
push
mov
in
stos
and
xchg
pop
inc
inc
mov
or
push
in
cs
push
adc
das
mov
and
lods
outsb
loop
xchg
aas
cmp
adc
test
es
push
cmp
ja
sub
mov
push
repz
fisubs
int
add
jo
mov
jo
leave
jecxz
sub
cmp
outsb
sub
push
js
repnz
push
mov
cmp
mov
pop
ficompl
xchg
sbb
or
jno
ja
dec
adc
mulb
fmull
data16
ss
les
inc
aas
jge
mov
push
xchg
xor
sbb
adc
push
adc
xchg
test
les
outsl
aad
in
or
imul
test
mov
in
xor
sub
pop
in
lea
sarl
pop
out
sbb
rorb
sub
das
movsl
fisubrs
lock
rol
cmpsl
repnz
inc
inc
sub
lock
inc
mov
data16
xor
push
adcl
add
divb
inc
popa
enter
cmp
js
sbbb
sahf
mov
fildl
mov
call
stos
popa
ja
ret
dec
notb
filds
popa
push
xor
dec
mov
inc
jp
std
add
fistpll
xchg
neg
inc
pop
and
sbb
mov
jns
addr16
cs
ret
mov
faddp
test
in
and
ljmp
pop
push
test
dec
inc
sti
add
cmp
xchg
int3
add
popa
clc
xlat
adcl
inc
daa
push
and
fstpl
lcall
and
mov
jae
push
push
sub
xor
sahf
mov
pop
test
push
aam
sbb
dec
mov
pop
push
mov
into
pop
arpl
in
mov
inc
clc
mulb
stc
or
sub
cmp
jp
fbstp
shrb
shr
test
repnz
cwtl
jl
pusha
inc
xor
test
cltd
int3
out
clc
movsb
lret
mov
bound
test
aad
sbb
test
and
jle
mov
cmp
inc
mov
test
mov
mov
lds
shl
mov
xchg
mov
ret
gs
rcr
daa
pop
fcmovnb
stos
pop
cmp
sbb
jmp
mov
xor
mov
cltd
scas
push
mov
jb
lea
imul
push
pop
daa
int3
add
lock
or
jno
dec
mov
pop
adc
mov
outsb
jb
xlat
imul
mov
fwait
and
lahf
popa
sbb
std
scas
dec
sti
xor
and
int
stc
lret
mov
dec
or
push
std
fistl
insl
loope
push
mov
sub
test
pop
xor
insl
sub
lods
sarb
pop
addr16
outsb
xchg
or
lcall
jg
lretw
push
stos
and
adc
push
mov
dec
cs
mov
cmp
fwait
push
les
xchg
xchg
sbb
mov
push
push
dec
outsb
gs
lret
jecxz
xchg
xchg
outsl
les
fs
mov
aad
push
sub
mov
rcr
pusha
test
mov
andb
cli
stc
xor
sub
xchg
dec
mov
dec
inc
int
sub
xchg
dec
adc
add
arpl
popa
mov
iret
cmp
cwtl
dec
ret
dec
add
lcall
mov
xchg
mov
pop
cmpsb
dec
dec
lds
divl
test
or
ja
jno
jl
addr16
mov
or
mov
test
cmp
mov
xlat
mov
xlat
push
loop
dec
testl
add
sub
rolb
jns
add
lds
pop
mov
hlt
sbb
ja
into
rorl
xlat
out
test
cs
movsl
repnz
mov
xchg
push
adc
es
roll
mov
lock
and
sti
ficompl
cltd
cmc
adc
ficoml
adc
cmc
cmp
cs
lods
mov
sti
lcall
fincstp
repz
ljmp
imul
leave
popa
call
xor
xor
out
jne
adc
push
stc
adcb
sbb
pop
add
xchg
cld
dec
cmp
inc
jg
clc
sbb
hlt
in
pop
mov
mov
add
arpl
pop
daa
sub
mov
mov
mov
or
in
pop
xor
cmp
int3
xchg
aad
cmpsb
xchg
shrl
stos
and
jae
xorb
repnz
cli
cmpsb
out
sub
add
popf
pop
mov
add
repz
int3
add
fcompp
mov
scas
cmp
imul
xor
outsl
cmp
cs
test
in
and
int3
movsl
cmpsl
int3
sarb
in
cmp
icebp
mov
rclb
and
push
les
add
xor
push
and
dec
ret
sbb
push
arpl
xchg
movsl
pmulhuw
or
mov
cmp
or
dec
clc
popf
fs
mov
in
fs
out
hlt
sti
inc
lret
jp
push
mov
xchg
cli
popf
sub
jecxz
or
sbb
mov
adc
stc
test
mov
mov
xor
push
jno
dec
xchg
mov
and
stc
into
fidivrs
fcomip
inc
pop
or
bound
arpl
lret
cli
lahf
test
lea
popf
ja
loope
add
pop
scas
bnd
xchg
inc
sub
and
out
ljmp
xchg
dec
push
sarb
mov
push
xchg
jnp
hlt
push
jae
inc
scas
roll
dec
sub
aas
mov
out
add
sbb
mov
dec
adc
inc
mov
sbb
int
arpl
ret
fmuls
inc
divb
jmp
cmc
cwtl
add
outsb
clc
adc
loope
jno
in
cmp
sti
pop
mov
out
and
test
lahf
lods
xorl
pop
mov
cltd
mov
adc
adc
pop
std
sub
in
insb
add
jp
add
cmpsb
mov
xchg
cmp
push
aam
das
pop
mov
inc
rorl
mov
push
pushf
cmp
and
outsl
lret
xchg
cmc
push
xchg
mov
jle
sub
add
xorb
test
push
xchg
hlt
fdiv
jne
push
inc
pop
outsl
cmc
in
enter
inc
pop
das
pop
sbb
xchg
pop
mov
add
jo
adc
insl
jmp
mov
insl
std
hlt
cmp
cli
ret
push
rorb
push
adc
pop
test
adc
loope
jg
repnz
outsb
mov
adc
xchg
das
xchg
pop
lock
les
ljmp
jecxz
daa
jns
clc
inc
jge
ljmp
addr16
inc
ret
sbb
loopne
adc
push
xor
daa
pop
fisttps
mov
lcall
pushf
test
das
cltd
mov
push
aad
les
mov
pop
sbb
cwtl
and
out
fcmovnb
mov
pop
daa
cltd
jmp
test
leave
pop
faddl
sbb
imul
dec
int
ficoms
fisttpl
fstl
adc
sti
xor
in
jns
xor
push
pop
aas
add
sbb
out
mov
imul
jnp
add
test
mov
mov
and
push
sub
jmp
nop
insl
xor
in
mov
shlb
mov
cmpsb
nop
add
pop
xor
arpl
xchg
inc
mov
and
or
or
push
in
shlb
mov
cld
inc
xlat
mov
inc
push
xchg
push
loopne
or
ret
sbb
les
mov
adc
xlat
inc
cwtl
adc
sub
xor
jae
gs
es
dec
sbb
cmp
mov
fdiv
add
mov
test
or
push
lds
pop
cmc
dec
fs
adc
xor
fwait
mov
insb
mov
and
mov
les
push
mov
jo
cs
imul
fsubrs
ja
sahf
lds
outsl
sbb
out
out
fcmovb
or
fwait
pop
sub
dec
outsb
iret
cmp
dec
pop
mov
add
xchg
sub
testl
rorl
out
std
mov
dec
cmp
push
movsl
pop
fcompl
mov
pop
sbb
hlt
inc
out
gs
dec
clc
sbb
jl
cli
mov
mov
daa
leave
pop
inc
jo
lea
pop
insb
or
leave
push
test
mov
and
jne
imul
sub
mov
xchg
sbb
mov
mov
mov
jnp
in
mov
loopne
adc
in
imul
roll
jmp
jb
call
dec
jo
out
mov
xchg
dec
mov
enter
nop
and
stos
test
xchg
mov
nop
sbb
lea
add
inc
not
cmp
and
ret
mov
sub
pusha
out
js
add
mov
sub
xorb
std
das
xchg
push
cmp
jge
clc
jno
das
push
push
in
inc
nop
adc
bnd
call
sbbl
sarl
mov
pushf
sub
mov
sahf
stos
cltd
test
jg
insb
cmp
xor
das
mov
pop
dec
mov
fidivrl
cmp
jae
fmul
sbb
in
gs
and
xchg
and
shlb
jle
and
lds
inc
outsb
shlb
cmp
jge
repz
mov
or
call
or
mov
mov
std
pop
lcall
add
mov
xchg
pop
adc
jbe
mov
aas
cmpsl
fiaddl
push
push
and
outsl
dec
shrl
xlat
ror
sbb
adc
xor
sub
dec
sub
mov
mov
dec
mov
enter
shl
insl
push
fwait
mov
xlat
inc
dec
jno
sub
xchg
fiadds
test
push
fst
loope
das
mov
dec
lock
stc
stos
push
sbb
mov
in
aas
lahf
bndldx
loopne
dec
xlat
in
sub
pop
xlat
test
mov
inc
gs
add
push
lret
repnz
adc
dec
inc
mov
mov
cmp
lahf
sub
inc
or
jo
pusha
outsb
fidivl
out
push
aad
cltd
mov
cld
cltd
mulb
mov
or
repz
cli
sub
sub
outsl
ficompl
in
push
dec
shlb
xor
repnz
popa
shlb
addl
je
sbb
and
cmpsb
shll
mov
sti
pop
lds
mov
lahf
ret
xchg
ljmp
movsl
rcrb
mov
and
xchg
and
enter
popa
or
dec
xchg
dec
enter
cmp
mov
loopne
and
or
sbb
out
push
jl
or
lret
int
repz
jb
lret
jae
jmp
fcoml
cmp
inc
notl
and
jnp
mov
ljmp
push
jl
test
ja
and
inc
cmp
inc
xchg
or
sub
mov
sbb
rcrb
pop
sub
sahf
mov
jbe
xor
in
or
sbb
fmuls
js
dec
test
xor
push
sub
leave
jns
dec
ret
dec
sbb
pop
dec
mov
lea
popa
pop
and
dec
fs
scas
data16
jle
jo
stc
mov
xor
sbb
mov
sub
loope
xchg
sbb
test
ljmp
or
push
inc
bnd
pop
mov
sbb
popa
syscall
addb
out
mov
xchg
mov
pop
outsb
sub
sahf
mov
popl
fwait
cmp
jne
or
and
mov
xorl
ja
inc
cs
outsl
xchg
outsb
sar
push
popa
push
out
adc
xchg
sub
std
cmp
xor
sub
or
pop
fwait
cltd
cmp
data16
in
decl
aam
xchg
sbb
lret
int
inc
arpl
dec
cwtl
scas
ljmp
pop
or
jb
ds
jb
mov
insb
dec
pop
adc
mov
gs
andl
pop
push
adc
aas
pop
adcl
in
inc
movsb
jno
push
lods
pop
loope
adc
cmp
cmpxchg
push
push
aas
mov
and
divl
cmpsb
adc
xchg
test
cmpsb
fadd
ret
idivb
pop
xor
push
test
rclb
add
jmp
ret
jl
cltd
inc
sbb
mov
test
mov
cmp
je
adc
les
add
mov
arpl
or
pop
ds
cltd
mov
sti
pop
adc
and
dec
pop
pop
lret
ds
jle
sti
mov
fimull
add
aad
jae
adc
repz
add
mov
dec
cmpsb
pop
adc
cmp
fldl
divl
push
insl
xchg
stos
mov
repz
enter
sar
imul
out
cmpsb
rorl
inc
mov
cmp
lods
les
into
inc
push
sbb
xchg
dec
nop
in
pop
xchg
mov
mov
add
dec
xchg
ds
out
retw
mov
mov
pop
add
mov
and
mov
test
inc
ret
loop
add
mov
mov
popf
mov
sbb
sti
sbbl
mov
test
and
fcmovnu
jnp
popf
std
sub
sub
or
imul
out
jecxz
lcall
cmp
push
aam
push
insb
popf
mov
pinsrw
inc
and
ret
mov
inc
cmp
push
mov
mov
or
sbb
sub
cmp
int3
sub
cmp
or
sbb
mov
mov
or
sbb
sub
cmp
int3
sub
cmp
or
sbb
mov
mov
or
sbb
sub
or
cmp
or
sbb
push
cmp
mov
mov
out
jnp
xchg
pop
shll
ret
daa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
clc
xchg
call
fimull
pop
ljmp
cli
pop
lret
cmp
or
fmuls
pop
mov
or
ficompl
inc
fidivrl
lds
mov
loope
icebp
jp
loop
pop
mov
in
add
dec
cltd
pop
xchg
xor
inc
pop
lcall
mov
mov
push
dec
ret
xchg
inc
rorl
adc
ror
les
pop
imul
test
sbb
iret
inc
stos
movsb
mov
cmp
mov
pop
pop
imul
push
mov
sub
adc
jg
inc
lds
mov
mov
stc
stos
clc
push
pop
in
loop
sub
in
adc
mov
stos
sub
bound
leave
test
gs
push
sbb
filds
mov
aad
js
js
scas
ljmp
sub
adc
aaa
pusha
inc
insl
stos
mov
xchg
in
and
stos
jnp
sbb
icebp
mov
into
enter
mov
lcall
push
xchg
and
or
xchg
cmp
je
pop
into
push
aad
mov
lods
add
sub
dec
into
push
gs
xchg
das
mov
mov
mov
or
or
mov
outsb
jmp
icebp
popf
cmp
cmp
lock
test
cwtl
or
cli
pop
lret
cmp
or
fmuls
pop
mov
or
cli
pop
lret
cmp
or
addr16
lret
push
dec
push
pop
sub
xchg
mov
push
jo
enter
push
popfw
xor
add
add
add
dec
pop
shll
mov
xchg
and
dec
add
push
bound
out
aas
pushf
pop
es
cltd
repnz
inc
iret
or
and
or
negb
fimull
cs
in
mov
cmp
movsb
xchg
daa
negb
aam
pop
mov
cmp
ja
lahf
push
jmp
test
jle
cmc
sub
adc
pop
imul
hlt
push
mov
in
jbe
adc
sub
pop
push
push
xorl
pop
ror
push
sub
push
inc
into
inc
push
lea
jle
pop
mov
enter
push
sub
arpl
repz
sbb
fldt
cmp
icebp
hlt
js
mov
cmpsb
nop
mov
push
add
lret
imul
repnz
insl
jge
subl
xchg
loope
push
dec
and
xlat
xor
and
xchg
cwtl
push
sub
xchg
dec
push
push
jbe
int
movsb
mov
lret
pop
inc
mov
imul
mov
test
mov
rclb
fistpll
dec
and
and
mov
fs
add
popa
push
mov
jmp
int3
inc
aad
sbb
orb
inc
push
lods
sbb
xor
movsl
inc
sbb
fadds
pop
add
cmp
subb
push
jo
aam
adc
test
and
mov
cmp
jge
insb
insb
adc
xor
pop
xor
sti
xchg
push
mov
stc
xchg
rolb
dec
push
in
arpl
lds
jmp
ljmp
push
das
dec
pop
jge
pop
cmpl
or
xor
loop
jo
push
mov
loope
xorb
andb
mov
xchg
xor
push
pop
pop
arpl
ljmp
lret
adc
lods
add
aas
subl
pop
dec
std
mov
adc
fabs
jg
call
out
in
test
outsl
dec
push
lea
pop
adc
popa
aaa
scas
mov
cmp
dec
inc
cmp
fxch
xor
xchg
or
or
outsl
out
adc
movsb
jns
or
pop
mov
dec
dec
int
nop
aad
adc
mov
int
sub
or
push
rorl
lods
filds
fdivrs
in
notl
adc
xchg
ss
mov
js
pop
push
jbe
xor
lret
cmp
ljmp
ret
cmp
cmp
pusha
mov
xor
push
xchg
xor
jg
rcrb
insl
mov
xchg
and
out
scas
inc
push
xchg
fists
movsl
shl
jbe
mov
test
and
hlt
jae
das
rorb
cmp
xchg
mov
aas
xor
outsb
scas
pop
dec
scas
push
lods
cmp
xchg
fwait
outsb
clc
adc
xor
aam
int3
jne
mov
xchg
cmpsb
mov
bound
loope
pusha
mov
sbb
fistps
data16
mov
push
mov
shll
mov
lods
add
test
sar
xchg
nop
test
adc
inc
push
jne
mov
sbb
mov
add
mov
adc
pushf
xchg
cmp
xor
adc
mov
popf
add
jg
enter
sbb
popf
js
out
cmp
fnstenv
sub
push
movsl
imul
xlat
cmpsb
sarb
lahf
addr16
not
sub
jle
or
adc
add
mov
adc
loop
orb
mov
mov
and
add
and
mov
mov
mov
mov
xchg
dec
mov
sbb
movsb
jl
sti
xor
ljmp
orl
stos
add
fwait
adcb
sbb
cwtl
fidivs
sub
lock
fdivrs
popa
xchg
insl
call
imull
xchg
dec
loope
xchg
xchg
ja
cmp
popf
dec
popf
test
xor
and
or
xchg
mov
push
int
shrl
jnp
xchg
push
cmp
icebp
add
pop
sub
xchg
stc
adcb
daa
loopne
jge
push
push
movsb
rolb
das
jbe
in
lock
int3
shrl
int3
inc
push
nop
mov
loope
xchg
je
dec
adc
xor
ja
pop
cmp
add
dec
mov
pushf
lret
out
dec
decl
sar
dec
sub
test
dec
jle
xchg
add
jne
mov
inc
add
mov
mov
jg
jb
enter
fdiv
arpl
inc
ljmp
shl
addr16
int3
jno
stos
xor
or
cmp
xchg
mov
dec
mov
stos
into
aaa
loope
bound
lea
inc
push
out
push
push
into
mov
xchg
adc
call
fimuls
inc
push
nop
dec
xchg
cmp
popf
push
push
cld
andl
mov
cmpsl
push
push
lret
and
mov
xlat
imulb
jmp
add
or
jno
jnp
pop
jns
sbb
std
inc
or
repz
sbb
push
aad
into
insb
daa
cmp
mov
insl
fldenv
cltd
test
mov
rorb
daa
or
xor
pushf
sub
shll
and
cmp
mov
pop
mov
cltd
dec
push
aas
rorb
out
in
sub
fnstsw
cmp
in
inc
es
push
cltd
fcmovnu
mov
aad
add
or
fisubs
and
inc
aam
stos
test
rcrl
movsb
imul
lods
iret
sub
dec
mov
icebp
fnstsw
sub
jnp
mov
stos
sub
repz
cmp
repz
stc
adc
sbb
int3
sub
aas
int3
pusha
fists
popa
cmpsb
aas
dec
pushf
sbb
mov
cwtl
pop
negb
mov
iret
mov
or
bound
rolb
lods
inc
cmc
push
xor
dec
fs
dec
fildl
ss
cmp
ret
jnp
dec
orb
test
int3
test
adc
pushf
sti
jp
pop
hlt
stc
dec
stos
mov
inc
cmpsb
mov
xchg
push
cld
inc
mov
xor
and
fstps
mov
dec
xchg
fs
clc
adc
icebp
add
jge
loopne
xlat
and
cmp
add
push
les
xor
daa
push
dec
push
in
xchg
jno
dec
scas
xor
lock
cmpsb
in
mov
test
mov
das
xor
test
inc
and
or
adc
mov
jmp
std
sti
out
mov
pop
xor
jo
pusha
xchg
xor
shrl
xchg
jmp
or
add
aas
cmp
mov
jge
sbb
stos
cmpsl
mov
mov
repz
sarl
cmpsb
inc
shl
ja
les
gs
scas
adc
mov
lock
adc
sbb
mov
fcmovbe
cmp
pop
dec
addl
enter
into
dec
clc
in
adc
mov
xchg
into
pop
mov
mov
mov
push
push
data16
adc
fwait
sbb
fimuls
test
xor
dec
pop
ficomps
imul
pushf
lcall
pop
cmp
and
mov
mov
sbb
or
cmp
cltd
push
outsl
ret
fadds
xchg
push
push
std
out
aad
aas
lahf
cmc
nop
and
std
ljmp
iret
mov
ss
sub
xor
loop
cmc
push
cld
pop
or
pushf
xchg
add
add
mov
jmp
aad
cld
sti
aaa
jle
adc
cmp
pop
fistps
int3
ja
push
fldl
sbb
add
adc
pop
jmp
hlt
repz
lcall
pop
clc
andb
pop
stc
xchg
jge
pop
pop
into
femms
add
push
pushf
addb
and
jge
xor
push
cli
mov
jnp
xlat
push
jns
sbb
mov
xor
add
push
sbb
jb
lods
add
scas
xor
lahf
gs
fmuls
add
iret
pop
jl
mov
dec
xchg
subl
xchg
xchg
popf
push
push
cmp
jecxz
adc
pop
mov
mov
hlt
ja
mov
xchg
frstor
movsl
xlat
add
cmp
jge
pop
lret
mov
xlat
test
xor
mov
xorb
mov
hlt
jecxz
out
xchg
filds
cmp
jo
mov
xchg
sbb
test
xchg
popf
arpl
xorb
or
add
jle
cmp
lret
mov
aad
add
sbb
je
push
lock
mov
mov
test
mov
dec
outsb
std
mov
out
inc
dec
andl
daa
mov
push
cmc
sbb
and
movsl
sbb
out
imul
aaa
nop
cmpsl
out
inc
addr16
filds
imul
or
call
enter
jo
and
xchg
es
gs
pusha
push
test
gs
mov
and
mov
out
sarl
lea
data16
or
mov
in
mov
mov
fcmovu
das
int
fxch
cmpsb
inc
and
mov
sub
dec
rorb
ret
jo
inc
es
aas
sbb
fistps
or
adc
das
push
cmp
push
mov
cmp
negl
sbb
pop
sarl
cmp
dec
les
xchg
loop
pop
push
dec
dec
and
popa
and
iret
xchg
adc
fists
sbb
enter
sub
pushf
cmp
scas
pop
adc
lods
fwait
push
hlt
call
add
addl
push
jo
js
xor
cmp
adc
lret
and
es
subl
sub
mov
lcall
xchg
push
lods
leave
xchg
in
cmp
jbe
lahf
xor
pop
shr
adc
sbb
adc
adc
sbb
sbb
mov
fsubrp
push
add
xlat
popa
pop
cwtl
pop
addr16
adc
push
stos
loopne
setno
sbb
es
or
cld
inc
jno
aaa
cli
adc
dec
mov
sub
lods
sub
sub
aad
idivl
icebp
addr16
call
ljmp
mov
pop
sub
imul
or
mov
das
mov
loopne
je
inc
jg
push
mov
repz
mov
mov
popa
sub
mov
in
cmp
idivl
das
dec
rorl
test
in
movsl
fcompl
mov
inc
imul
sbb
arpl
cmp
mov
fildl
fstpt
frstor
push
jno
insb
mov
mov
loope
ret
dec
cmpsl
ret
stos
and
mov
in
jo
montmul
cmpsb
ret
dec
mov
pop
fsubrl
shll
jle
push
cmp
test
sub
aad
dec
pop
xchg
mov
push
mov
sub
mov
ffree
mov
outsb
sub
aad
mov
or
pop
sub
sbb
or
xor
push
sub
jns
aas
adc
add
in
sub
inc
mov
push
cmp
jae
and
cmp
subb
mov
sahf
std
stos
inc
stc
aam
movsl
mov
fs
ret
pop
les
clc
or
mov
sahf
cmp
pop
push
loopne
add
iret
loop
inc
jmp
push
push
arpl
shrl
cmc
roll
nop
jno
mov
xlat
xchg
sub
fimull
loope
repz
xor
adc
sub
push
pop
out
pop
adc
cmp
add
bound
rol
mov
xor
loope
daa
std
fisttpl
out
inc
add
fcompl
xchg
add
lret
pop
das
sub
inc
jmp
loope
push
dec
and
lods
mov
loopne
mov
fsubrl
cmpl
mov
mov
out
lea
jecxz
std
inc
adc
mov
inc
pop
outsb
arpl
and
mov
das
sbb
outsb
ret
push
sbb
jmp
repz
jl
mov
outsl
fwait
xchg
jl
jbe
das
xor
arpl
mov
std
ss
xor
mov
cld
jae
nop
loope
sbb
lret
mov
inc
add
cltd
and
xor
adc
mov
aaa
bound
mov
out
mov
adc
add
scas
pop
pop
shl
movsb
add
dec
push
pop
pop
andl
sub
lret
dec
insl
es
and
fs
mov
pop
das
inc
pushf
pop
jp
dec
push
fdiv
gs
xchg
pop
dec
inc
popa
sbb
lahf
sbb
cltd
xchg
cmp
jno
lock
jle
js
in
pop
loop
fdivrl
push
mov
scas
fwait
jecxz
test
jnp
and
fisttpl
fwait
mov
xchg
mov
sub
lods
popa
addr16
mov
adc
jne
ficomps
xor
cs
cltd
flds
mov
push
mov
out
xchg
stos
xor
call
pop
into
add
xor
pop
and
shr
sbb
and
cmp
and
and
cld
dec
aaa
or
clc
pop
or
xor
sbb
popa
add
mov
repz
adc
sub
sub
cwtl
ret
not
cmp
leave
pusha
out
mov
mov
inc
movsb
push
faddp
mov
cmp
das
outsb
xlat
dec
popa
jbe
sub
pop
inc
rcr
jl
lahf
adc
xor
cmp
mov
sub
cmp
pop
rclb
push
cmpl
pop
rclb
mov
hlt
loop
nop
loope
pop
adc
leavew
dec
inc
inc
pop
clc
push
cmpsb
fs
aas
out
dec
xor
js
stc
jns
cltd
outsb
test
rolb
cwtl
xor
jecxz
ret
mov
cmpsb
dec
mov
les
mov
int3
sbb
add
add
pop
ret
out
aad
das
loopne
mov
shrb
ljmp
adc
sub
push
inc
rcll
stos
jno
sub
pop
ja
inc
sub
and
ljmp
dec
xlat
xorb
mov
out
sbb
lock
dec
mov
lcall
or
pop
xchg
add
orl
data16
lock
xchg
cltd
mov
clc
pushl
mov
nop
xlat
mov
and
jno
out
and
xor
arpl
add
xchg
pop
jbe
mov
push
mov
mov
push
idivl
jle
nop
adc
jb
cmp
pop
lahf
or
sub
aas
xor
shll
fldl
mov
mov
ret
out
aaa
pop
xchg
repz
mov
or
jns
push
jmp
push
push
jnp
icebp
mov
add
or
xchg
out
and
lret
in
ret
mov
mov
js
jl
pop
mov
ror
out
ljmp
std
mov
sub
ds
mov
mov
xor
lea
mov
lret
add
jns
testl
cli
add
ficoms
das
or
cmpsl
popa
popa
pop
cmp
push
fs
fsub
call
add
mov
andb
or
insl
xor
mov
mov
xor
loope
enter
mov
inc
push
jae
inc
or
jne
js
test
xor
inc
push
pop
int3
or
shl
push
aad
iret
loop
out
cmp
and
mov
pop
das
mov
push
popf
push
mov
jl
push
jo
mov
xchg
in
pop
lock
cs
sahf
push
jmp
jbe
lods
fimull
mov
mov
jg
inc
fs
jge
mov
push
mov
push
dec
popa
or
test
sub
mov
pop
push
testb
jae
rclb
ss
mov
mov
push
mov
pop
aam
fnstenv
mov
rolb
es
enter
ret
or
sbb
les
push
adc
mov
sahf
adc
mov
maxps
pop
incb
mov
cli
fmull
aad
push
sbb
movsb
stos
imul
dec
fildl
sub
aas
inc
ss
es
and
lock
ret
int
ds
xlat
xchg
xchg
call
mov
jae
fbstp
add
pop
mov
fdiv
js
add
xor
bnd
sahf
xchg
sub
mov
xchg
scas
push
xchg
scas
mov
fcomp
push
cli
or
mov
xor
in
rcl
and
add
push
adc
xchg
mov
mov
aam
jle
xchg
out
add
push
aaa
add
mov
sub
rcrb
lcall
add
dec
dec
std
inc
push
daa
lahf
sub
xor
iret
jl
nop
sbb
lret
mov
or
int3
sub
pop
mov
xchg
ret
outsl
inc
mov
cmp
gs
sbb
mov
jb
sbb
fs
aaa
fcmovb
mov
jge
xchg
cmp
jge
inc
inc
fidivrs
inc
rcrl
imul
dec
cld
loopne
aad
dec
hlt
mov
push
out
cmc
xchg
pop
aam
dec
mov
loopne
inc
inc
pop
push
sbb
push
push
cld
xor
daa
mov
popa
push
push
pop
aam
pop
repz
xorb
mov
bound
bound
push
mov
pop
int3
outsl
mov
sbb
pop
push
adc
cmpsl
mov
inc
into
add
sahf
xchg
pop
add
subl
aam
cmpsb
dec
rorl
les
xorb
xchg
xchg
adc
int
xlat
je
ljmp
std
xlat
filds
ret
iret
adc
dec
xchg
cs
cmpb
adc
sub
movsl
inc
popf
add
lret
sahf
xchg
mov
bound
repnz
call
mov
adc
cmp
cli
cmp
mov
xchg
cwtl
scas
scas
xor
mov
and
mov
aad
mov
ja
cmc
dec
inc
mov
adc
mov
popf
lods
sub
lds
repz
and
xchg
es
add
negl
adc
nop
dec
fldt
mov
inc
xchg
aam
xchg
xchg
jg
add
adc
lcall
js
pop
sbb
xchg
mov
jl
add
ret
push
inc
and
data16
ret
jnp
cmp
mov
stos
fs
mov
pop
arpl
xor
or
icebp
jl
add
cmp
mov
pop
sti
stc
data16
call
adc
lret
cmp
adc
fdivrl
enter
ljmp
repz
dec
push
and
lds
fcoml
jg
push
addl
std
stos
shll
mov
int
ja
and
pop
xchg
adc
cltd
jge
cvtpi2ps
push
mov
pusha
xchg
daa
outsb
movsl
ljmp
mov
mov
std
xchg
sub
rcrl
popa
std
icebp
sbb
in
jge
adc
clc
out
js
lea
imul
imulb
int3
sub
jno
fs
testl
pop
cmp
das
daa
aaa
adc
in
xor
in
rcrl
sahf
push
dec
scas
loop
lret
in
insl
sub
lahf
dec
inc
jl
pop
xor
sbb
and
mov
add
fldt
xchg
xorl
pushf
xchg
push
cmp
fwait
sub
jl
ja
mov
test
push
daa
cmp
mov
inc
and
rol
sub
dec
sbb
adc
lahf
add
mov
xor
loop
leave
sub
icebp
pop
mov
sbb
lahf
fistpll
xchg
mov
or
sub
pop
addl
dec
push
xchg
je
push
pop
add
in
adc
ljmp
pop
ljmp
loopne
push
insb
push
jb
push
add
rcll
mov
dec
inc
popa
cmc
dec
or
inc
jno
mov
mov
cltd
stos
scas
mov
out
scas
neg
lahf
jo
jecxz
icebp
lea
xchg
mov
int
xchg
mov
add
jp
stc
hlt
mov
stc
adc
push
jne
xchg
scas
inc
jns
out
jb
sahf
and
iret
or
pusha
or
xchg
fildl
and
cmp
in
push
addr16
ds
lea
inc
add
ja
pop
lret
imul
sub
lahf
lret
pop
push
mov
lea
or
push
jo
and
fists
mov
pushf
fadd
ja
pop
pop
mov
pop
xchg
xchg
cmp
jmp
sbb
push
shrb
and
mov
stos
xlat
adc
dec
fcoms
sub
rclb
popf
imul
jp
es
test
cwtl
or
cli
pop
lret
cmp
or
fmuls
pop
mov
or
cli
pop
lret
cmp
or
fdivs
enter
test
cwtl
or
cli
pop
lret
cmp
or
pop
mov
mov
sbb
lret
dec
and
gs
xchg
jg
outsl
mov
jle
mov
fbstp
into
pop
pushl
out
es
inc
fnstcw
xchg
jg
outsl
mov
shufps
das
sbb
iret
push
jmp
out
ss
xor
push
mov
lahf
dec
jg
outsl
scas
pop
fisttps
into
aas
das
in
filds
in
xor
lahf
or
and
adc
sbb
lret
jg
add
push
test
xor
xlat
sbb
and
xor
out
cltd
stos
movhps
nop
out
mov
and
and
dec
call
pusha
mov
call
sbb
js
sbb
xchg
dec
jp
mov
jno
filds
fwait
push
decl
iret
jecxz
out
fisubl
xor
dec
imul
xchg
das
jae
out
call
pusha
jp
sarl
lcall
pop
nop
ret
bt
cltd
jmp
int3
inc
jo
out
xor
mov
mov
dec
std
jae
out
cmpsb
mov
jl
fld
leave
iret
outsb
add
xchg
xchg
dec
xchg
outsl
mov
aas
out
out
filds
iret
push
aas
out
das
lahf
pop
dec
mov
xchg
in
ret
push
rcrl
les
pop
mov
push
jmp
xchg
push
sahf
and
sbb
out
sub
sbb
add
pop
dec
cwtl
inc
xchg
jge
mov
inc
out
xor
ss
roll
fiaddl
cmp
add
push
cmc
aas
out
neg
push
iret
push
jmp
out
ss
inc
push
mov
xchg
jg
outsl
mov
aas
out
neg
push
iret
push
jmp
out
ss
inc
push
mov
xchg
loop
inc
mov
dec
or
jmp
cld
ds
popa
sbb
movsb
sbb
iret
xor
pop
sub
popa
pop
mov
xchg
jmp
jno
mov
shlb
jmp
aaa
adc
mov
mov
ljmp
aas
mov
xchg
sbb
cmp
int
sbb
test
jns
pop
es
push
mov
jne
add
cmp
les
out
adc
jg
add
aad
push
fnstcw
inc
scas
pop
mov
out
push
repnz
enter
cwtl
and
daa
pop
cmc
jmp
jno
jecxz
imul
mov
jbe
or
rcr
insl
dec
out
xchg
jmp
mov
dec
mov
testb
push
imul
fcoml
xor
mov
and
mov
cmp
mov
int3
jb
mov
pop
dec
es
cltd
repz
sbb
jae
push
lock
sbb
outsb
xor
mov
mov
test
pop
sahf
mov
inc
nop
pop
mov
shll
pop
adc
mov
mov
cmpsb
xorl
cmp
add
repz
fwait
push
mov
lahf
inc
shll
pop
call
aad
arpl
std
and
addr16
push
aam
xchg
pop
hlt
jp
imul
ficoms
aam
test
ficoml
xchg
div
xchg
xor
fwait
iret
sub
jo
pop
inc
mov
cmpsb
sar
inc
jle
in
pop
add
cwtl
lock
inc
add
pop
clc
or
jmp
xor
adc
mov
popf
pop
mov
push
js
mov
out
add
scas
nop
cmpsb
iret
orl
mov
jg
inc
jle
fbstp
mov
aam
xchg
dec
mov
xchg
adc
push
popa
gs
dec
ret
mov
filds
rcll
xchg
fstl
mov
cs
and
lcall
les
fdivrs
popa
rcrb
mov
mov
xchg
pusha
out
ljmp
nop
lcall
aad
into
push
dec
adc
dec
sbb
xchg
lds
sbb
jne
jg
inc
fldenv
dec
inc
mov
and
cs
call
adc
dec
mov
sahf
xor
xchg
fisubs
nop
or
xor
cmpsb
fldt
inc
sti
popa
dec
ja
mov
movsl
cmp
xchg
jmp
dec
dec
sbb
add
in
aad
mov
cmp
mov
dec
les
andb
sbb
insl
mov
sub
insl
sub
lret
mov
and
jle
cld
xchg
jb
sbb
jnp
inc
xchg
out
cmpl
ret
push
mov
xchg
ret
ret
add
sbb
pop
and
repz
add
lret
hlt
dec
push
xchg
jle
push
mov
leave
add
lret
icebp
jecxz
xchg
xor
out
ljmp
icebp
repz
mov
and
jmp
mov
xor
push
call
icebp
je
cmp
dec
xchg
test
mov
inc
leave
mov
out
jne
leave
xor
pop
in
imul
mov
mov
or
out
xchg
pop
mov
mov
clc
xor
pop
insl
sahf
stc
jns
inc
clc
fimuls
nop
mov
and
cmc
mov
sbb
cwtl
jbe
rorl
std
push
lds
call
xor
js
cmp
test
xchg
or
jns
xor
mov
lret
pop
xlat
mov
or
push
les
faddl
sahf
adc
out
or
mov
fiaddl
and
out
shrl
shrb
push
push
out
add
leave
aam
lret
movsl
mov
adc
out
push
iret
popa
xchg
xchg
inc
sbb
faddl
adc
addl
adc
je
repz
lcall
dec
xchg
and
xor
and
lock
jecxz
pop
gs
xor
jecxz
add
add
mov
cmp
push
or
xchg
mov
dec
pop
fnstcw
dec
int3
pop
xchg
push
or
out
imul
add
lcall
push
outsb
mov
cmp
jo
test
xor
in
push
push
stos
loope
cmp
fisttpl
mov
cs
call
ret
filds
dec
idivb
arpl
push
and
sbb
mov
bound
test
pop
mov
out
and
inc
xchg
data16
scas
cmp
mov
add
jb
or
aaa
ds
mov
es
adc
hlt
sub
cmpsb
inc
mov
adc
aas
movsb
inc
in
push
aam
sub
cmc
cmp
cmp
cwtl
sub
push
push
fs
into
mov
sub
lret
adc
and
repnz
das
pop
pop
pop
dec
loop
paddsb
inc
ficoms
movsb
pop
je
rcrb
or
addl
dec
addr16
cmp
xchg
enterw
dec
mov
xor
adc
pop
adc
cmpsl
push
test
rcrl
jmp
adc
daa
sti
js
push
std
andb
andb
inc
scas
and
dec
enter
xor
dec
sub
cwtd
dec
mov
rol
mov
mov
nop
push
xor
aas
sub
mov
fdivrl
push
sub
and
push
jle
push
mov
insb
fwait
sarb
cmpsl
int
popa
xchg
inc
xor
mov
xor
fs
xor
fbld
pop
pop
and
mov
jge
xor
mov
icebp
mov
add
out
fisttpll
imull
gs
cmpsl
stos
mov
push
push
mov
lret
dec
mov
arpl
push
outsb
pshufw
mov
mov
mov
pop
cmp
std
and
add
mov
rcll
and
stos
testb
icebp
aas
xchg
aaa
mov
out
mov
xlat
adc
roll
loop
pop
cmp
dec
movsl
pop
push
fdivs
jge
jnp
xchg
std
scas
imul
push
sbb
pop
sbb
or
mov
sarl
in
push
into
xor
into
sbb
inc
and
or
push
xchg
int3
repz
sbb
cmp
outsb
cmp
fisubrs
mov
lods
sbb
xchg
lds
bound
jmp
add
pop
inc
adc
xor
insb
scas
in
loop
mov
sbb
push
out
add
outsb
cld
xchg
pushl
gs
sbb
addr16
mov
jae
jne
xchg
jp
cmp
ss
les
pop
insl
inc
and
add
out
stos
repnz
inc
add
mov
ret
push
pop
call
movsl
add
aaa
loopne
push
iret
gs
rclb
pop
mov
lods
js
shll
xor
sub
rolb
sbb
in
out
push
es
in
cmpsb
mov
xor
mov
shrl
pushf
cmp
fldl
cltd
xor
cmpsb
add
mov
cmp
scas
lcall
xor
and
cld
int3
adc
sbb
sbb
mov
xchg
mov
push
subb
mov
mov
insl
add
bound
ljmp
aad
das
leave
and
popa
iret
xor
jle
xchg
jge
rcll
fs
cltd
clc
xchg
stos
in
cmp
pop
das
jg
jno
xor
push
sti
int
ret
rep
mov
sub
int3
sub
mov
fadds
daa
repz
iret
cmpsb
and
jae
jnp
pop
or
xor
inc
pop
xchg
mov
in
dec
mov
shl
scas
andl
jns
fs
loop
xlat
sahf
pop
adc
fwait
js
lds
into
notl
cmpsl
sbb
sbb
xchg
mov
inc
lods
adc
int3
adc
imul
aad
sarb
cmpsl
mov
adc
add
insl
mov
cwtl
pop
push
orb
mov
dec
ret
cmp
mov
xchg
outsl
cltd
mov
repnz
jmp
aaa
xor
test
xchg
pop
dec
mov
xchg
addr16
xchg
or
je
jno
xor
cmpsb
pop
ljmp
les
jl
lea
sub
sbbl
and
call
jo
xor
inc
mov
test
std
xchg
out
cli
add
mov
inc
add
lea
dec
add
cld
mov
sbb
das
cmp
in
push
xchg
sbb
out
inc
add
bound
jne
cmp
sub
add
lods
and
push
adc
push
inc
adc
sti
ja
pushf
shrb
loope
cmpsl
or
pop
xchg
fwait
mov
vxorps
shll
xor
nop
inc
sbb
push
stc
dec
cmp
aam
fimuls
mov
adc
faddl
add
mov
pop
test
add
shl
mov
adc
push
adc
jmp
cmc
jno
xchg
xchg
adc
mov
jg
jecxz
fdivl
jne
mov
mov
sarl
adc
mov
dec
xor
out
mov
cmpsl
pop
mov
js
lret
mov
popa
fsubrs
push
inc
mov
jge
or
adc
lock
mov
inc
sarb
mov
stos
hlt
dec
negl
add
lcall
sub
mov
xchg
ds
jmp
test
jo
push
or
leave
xchg
inc
jbe
out
cmp
inc
in
mov
hlt
sbb
jmp
mov
dec
repz
aas
int3
aam
lea
pushf
pop
aam
cmp
mov
inc
xor
jne
hlt
mov
cmp
mov
mov
sub
jo
mov
fbstp
stos
xchg
or
or
sub
cmp
stos
xchg
rolb
pop
cmp
cmpsb
sbb
mov
xchg
mov
jecxz
and
sub
ljmp
out
pop
sub
stos
bound
pop
mov
out
adc
cmp
lock
jae
sbb
or
or
aad
adc
and
cmpsb
cmpsb
jecxz
cwtl
std
xor
popf
pop
in
mov
stos
dec
add
popa
adc
icebp
stc
outsl
xchg
adc
push
outsb
xchg
cld
nop
mov
std
mov
mov
fmul
pop
popf
mov
xchg
adc
cmpsl
sub
pop
addl
daa
cltd
mov
call
dec
push
fistl
loope
imul
xchg
int
pop
adc
dec
fldenv
ss
jo
es
add
push
mov
and
mov
pop
xchg
push
test
pop
sbb
dec
test
mov
mov
adc
sub
inc
stos
test
mov
xchg
dec
push
cli
lods
adc
lods
pop
mull
sbb
push
and
jl
mov
in
inc
aad
mov
clc
mov
cltd
adc
pop
inc
stos
nop
or
xor
mov
sarl
dec
cmc
xchg
cmpsl
adc
es
aad
mov
call
pop
shll
push
lea
fisubl
jno
aad
cs
add
fwait
andl
jmp
aad
mov
scas
sub
pop
xor
test
push
cmp
push
fs
mov
and
inc
push
push
icebp
rcr
pop
or
dec
sub
or
jnp
add
out
aaa
mov
scas
sbb
cmp
mov
push
out
dec
ficoml
adc
notl
addr16
ja
xor
mov
pop
mov
sbb
push
in
sbb
lods
movsb
stos
les
cli
push
in
xchg
pop
sub
adc
mov
shl
aad
inc
jae
scas
jbe
sbbl
mov
outsl
ds
inc
pop
adc
sbbl
adc
push
pushf
or
xchg
les
pmaxsw
aad
ss
cmp
mov
push
xchg
scas
sub
js
dec
stos
sar
loop
xchg
sub
jg
push
out
mov
jns
push
cmpl
cmp
mov
inc
fistpll
xchg
ljmp
faddl
pushf
inc
add
jo
jnp
cmp
cltd
paddusw
mov
mov
sub
cmpsl
mov
push
add
adc
ret
sti
shll
xchg
jecxz
sbb
clc
jle
xchg
pop
sbb
mov
ja
nop
fs
fidivs
ficompl
inc
out
aaa
movsb
nop
jnp
or
xor
pop
in
or
data16
xor
insl
outsl
ss
push
jbe
js
pop
add
sub
lods
daa
sbb
sti
or
mov
sub
mov
adc
push
xor
outsl
pop
sub
mov
push
shll
or
xchg
jb
out
not
xchg
xchg
jecxz
mov
test
pop
int
outsl
fwait
push
mov
or
inc
adc
iret
in
fnstcw
aas
mov
fdivp
inc
and
cwtl
cwtl
jg
push
pop
xorb
inc
stos
cmp
cmpb
mov
inc
pop
push
xor
mov
lcall
adc
nop
int
mov
fisubs
push
shl
adc
fisubs
cmpsl
add
push
xchg
jne
adc
push
add
movsl
xchg
sub
push
adc
pop
mov
xor
fldcw
popf
pop
fimull
and
xchg
popf
mov
dec
lahf
mov
ret
test
mov
and
es
xchg
mov
dec
arpl
fwait
inc
inc
inc
roll
adc
test
xor
mov
mov
lods
inc
shlb
mov
add
cmp
push
xchg
push
std
daa
daa
and
mov
pop
jnp
jge
shrb
sub
repnz
fmul
enter
lret
pop
sbb
mov
pcmpgtb
mov
jae
in
add
loop
int3
jb
shll
xchg
nop
add
push
incb
adcb
mov
test
outsl
inc
mov
arpl
add
push
add
into
pushf
or
xchg
pop
jg
adc
imulb
shrl
cltd
xchg
out
icebp
pop
or
inc
or
jg
or
sub
fcoms
add
out
aas
jb
mov
dec
rorl
add
out
addb
roll
push
jnp
push
mov
push
adc
pop
fistl
mov
xchg
push
shll
push
mov
js
ficoml
adc
aad
loope
mov
fwait
xchg
or
inc
cmpsb
lret
mov
or
xchg
mov
pop
pop
mov
dec
dec
mov
mov
adc
mov
xorl
jns
pop
mov
or
mov
outsl
das
cmpsl
dec
mov
mov
push
into
lcall
cmpsl
sub
pop
mov
movsbl
adc
jmp
cltd
inc
jecxz
jl
sub
sbb
cmpsl
scas
xchg
sub
push
jecxz
shl
mov
jp
and
pop
cltd
mov
cld
add
mov
cmp
shrl
jb
cmc
adc
pop
fnsave
insl
adcb
jg
sti
jns
into
mov
lret
mov
cltd
sub
hlt
cmpsb
push
push
lock
push
lahf
rcl
insl
movsl
out
cltd
inc
jmp
mov
mov
push
jg
bound
push
aam
mov
xor
pop
push
inc
mov
add
shll
leave
push
xor
je
pop
mov
mov
jmp
pop
pop
fwait
adc
sub
jnp
ss
push
xlat
inc
cmp
bound
push
adc
ljmp
xchg
insl
lret
pop
sub
aas
add
dec
fdivr
jae
mov
pop
and
push
adc
lahf
insb
inc
lock
out
pop
aaa
in
fdivs
push
bound
and
hlt
mov
cmp
fcmovne
push
mov
fisttps
sbb
sarl
stos
fadd
dec
in
add
cmp
repnz
mov
mov
jae
fcoml
cmp
mov
jg
shll
dec
aad
adc
push
jbe
jl
push
add
sub
inc
dec
push
dec
ficompl
sarb
gs
lahf
aas
inc
inc
jae
ljmp
dec
mov
jmp
loopne
push
xchg
fbstp
sub
outsb
jl
cmp
call
push
add
cmp
rorb
out
in
in
mov
outsb
stos
je
jmp
test
movsb
mov
ds
lcall
dec
jno
negb
fdivr
int3
add
popa
loopne
frstor
test
adc
test
push
inc
scas
ds
mov
lock
addr16
sarl
or
mov
adc
insl
popf
adc
add
pop
jne
mov
mov
add
mov
cmp
std
adc
dec
mov
fdivrl
jl
outsl
xchg
pop
fs
add
lahf
sbb
add
fsts
popf
sbb
xor
sbb
mov
inc
sub
cmp
icebp
aad
jb
push
aaa
jae
xchg
xchg
ja
lea
sub
mov
adc
fldenv
push
cmp
pop
cmp
fbstp
cli
out
data16
imul
in
add
dec
mov
xchg
mov
sub
orl
add
cmpsb
mov
push
sub
add
pusha
sahf
sar
sbb
pop
or
sub
cmp
fwait
add
inc
adc
jnp
mov
mov
lods
imul
sbb
ret
pop
cmpsl
js
out
or
mov
jne
lea
cmp
and
scas
mov
jns
pop
dec
pop
inc
add
into
xor
fst
les
adc
cmp
jle
aam
mov
adc
sbb
push
pop
fstl
fs
inc
popa
mov
fsubrl
push
sub
jl
cmp
mov
sbb
adc
push
call
mov
and
xlat
sub
mov
jno
pop
adc
adc
aad
mov
mov
cmc
cmp
sub
lcall
sub
sub
inc
lock
inc
mov
pop
jbe
pop
push
sub
sbb
jl
xor
rcl
push
imul
enter
xchg
lret
mov
lret
inc
mov
mov
adc
mov
scas
xor
xor
je
sbb
lock
xlat
fstl
fldl
sti
push
fldenv
xor
dec
in
or
push
sbb
jno
ret
mov
mov
xor
pop
add
sub
int3
pop
lea
cli
mulb
jge
dec
sub
jmp
sbb
imul
jb
pushf
pop
or
fdivrp
xchg
add
xor
or
xchg
nop
addb
inc
ret
test
jne
mov
leave
repz
jp
inc
fstps
mov
popa
and
fwait
xor
mov
imul
cmc
repnz
sbb
rol
in
jae
cmpsl
cmpsb
jne
pop
xorl
mov
xor
jecxz
xchg
mov
mov
pop
jnp
sbb
mov
cmpsl
nop
test
xor
jge
cmp
fiadds
je
inc
xchg
ret
movsl
xor
jae
inc
fists
in
cmp
cmp
and
sub
lahf
lea
sub
xor
arpl
add
sub
mov
aas
or
dec
imul
sbb
es
in
jb
cmpsb
sar
lds
cmp
pop
sub
rdmsr
inc
dec
xchg
shl
xor
jge
cld
mov
pop
movsl
test
jb
into
or
dec
adc
popf
pop
adc
adc
cmp
pop
push
adc
xchg
jge
inc
xlat
scas
inc
or
test
jecxz
jb
xor
lret
cmp
xchg
mov
leave
mov
pusha
es
sbb
lcall
inc
je
pop
jecxz
jmp
jns
scas
push
jmp
dec
push
lods
adc
sub
repz
xor
mov
dec
loopne
lods
aas
movsb
fiaddl
rorl
xchg
jns
push
out
loopne
and
push
pop
pop
cmp
jmp
aaa
adc
daa
or
push
mov
scas
xor
push
movsl
cmp
mov
outsl
add
or
lock
mov
add
test
sbb
scas
test
sub
adcl
std
dec
cmp
xor
mov
push
incl
imul
jns
sub
popa
xchg
push
jns
cltd
jmp
popf
scas
xor
out
ja
xchg
cmp
mov
aas
out
neg
push
iret
push
jmp
out
ss
inc
push
mov
xchg
jg
outsl
mov
aas
out
neg
push
iret
push
jmp
out
ss
inc
push
mov
xchg
xchg
jmp
aas
out
neg
push
iret
push
jmp
out
xor
bound
xchg
jg
outsl
mov
aas
out
filds
iret
mov
out
into
ljmp
iret
sbb
or
and
xor
add
adc
gs
push
mov
mov
xchg
repnz
cmc
rcl
ret
and
xor
add
adc
bound
inc
xor
test
hlt
rol
ret
and
xor
add
adc
bound
inc
push
mov
adcl
xchg
mov
inc
inc
adc
jno
fidivs
push
jp
mov
filds
cmpl
and
and
outsb
lcall
scas
int3
stos
fimuls
mov
dec
insb
jnp
andl
xor
hlt
js
dec
shll
sub
xchg
or
mov
addb
enter
sbb
test
add
je
dec
inc
mov
pop
das
dec
jae
jge
mov
mov
aam
in
lret
xchg
sti
lcall
out
inc
fwait
scas
adc
stos
mov
mov
lods
ret
jge
and
mov
jmp
movsb
out
call
movsb
adc
and
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
dec
push
inc
inc
push
pop
and
and
aam
lods
loope
in
nop
mov
mov
dec
push
pop
jno
inc
ja
daa
sub
pop
adc
jp
rol
out
jecxz
movb
test
push
and
popa
insb
aaa
push
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
sbb
imul
xchg
nop
testl
mov
stos
lods
imul
inc
fildl
jae
mov
xor
jnp
or
cld
dec
adcl
stos
fcoms
xor
and
ja
sbb
xorb
dec
es
lea
das
enter
lods
test
fldt
cmpsl
jp
in
movsb
fisttpl
jg
fidivrl
stos
inc
jb
lretw
xchg
add
test
or
push
std
xlat
clc
sbbb
psrlq
lods
ret
push
notb
jp
inc
xlat
cmpsl
cmove
sub
pushf
call
mov
jns
pop
dec
pop
sbb
dec
pop
bound
mov
push
xor
lahf
imul
outsl
into
xchg
and
sarl
push
clc
mov
jo
clc
popf
andb
push
push
mov
cmp
sbbl
mov
test
je
ret
push
jge
xchg
sub
int
rorb
lods
adc
sti
dec
clc
cli
divl
imul
adc
sbb
sub
imul
sbb
adc
pushf
push
dec
push
mov
negb
fiadds
add
cli
sbb
or
and
je
mov
or
push
pop
lret
push
stos
gs
je
sbb
aam
pop
out
movsl
adc
stos
add
xchg
and
inc
jmp
dec
xchg
adc
sbb
sub
hlt
dec
push
pusha
sbb
sub
push
lcall
fwait
in
push
gs
sub
movsl
nop
xchg
cmp
stc
inc
bound
outsb
lcall
dec
xlat
xor
stos
mov
dec
out
imul
mov
mov
mov
jnp
inc
xchg
push
subl
and
jmp
sub
imul
jmp
mov
adc
sbb
adc
inc
unpckhps
repnz
aaa
add
push
mov
adc
rcr
unpcklps
iret
or
testb
and
les
lret
push
inc
jecxz
fdivl
push
loop
ljmp
sub
scas
dec
loope
mov
push
pushf
jne
add
mov
fstpl
leave
cmp
adc
cld
jl
lret
xchg
movsb
pop
js
or
xchg
addr16
mov
push
and
xorl
sbb
popa
cmpsl
mov
push
cmp
repz
sub
push
ja
fmul
push
jge
btl
ljmp
out
jg
adc
bound
popf
cmp
fwait
cmp
fisubl
fdivl
icebp
andl
lds
lea
cmp
mov
cmp
jbe
pushf
cmp
pop
imul
mulb
dec
mov
pop
push
in
dec
stc
adc
pop
dec
ret
inc
jns
dec
add
sbb
shlb
filds
push
pop
mov
pop
std
scas
fwait
in
sbb
inc
and
jl
mov
test
pop
mov
cli
xchg
je
cmp
or
fsubs
lods
and
cs
jns
scas
mov
insl
xchg
pop
xchg
jno
inc
pushf
loopne
sbb
cmp
aam
or
lahf
in
ret
xor
repnz
std
jmp
inc
or
mov
xor
sub
xchg
add
int
cmpsl
xor
mov
push
ds
mov
push
rorb
dec
sbb
movb
ud1
into
jne
push
cmp
bound
jecxz
pushf
popa
aad
iret
or
movsb
xchg
pop
jbe
push
mov
xchg
adcl
or
mov
sbb
mov
test
int
lea
insl
cmp
cltd
lds
pop
divb
cs
test
out
sub
cmpsl
imul
jmp
dec
cltd
cld
cmp
in
push
shlb
loopne
hlt
jo
push
pop
or
cmp
cmpsl
cwtl
enter
loope
jo
mov
ds
fcom
sbbl
fdivr
cmp
jmp
mov
and
add
push
pop
dec
jg
stos
jns
loop
lret
es
loope
pop
mov
fcmovb
jmp
xor
or
arpl
loope
xchg
sbb
andb
adc
dec
lea
test
dec
pop
adc
add
mov
mov
test
push
lea
cwtl
js
xchg
dec
pop
dec
push
jo
out
jmp
repnz
pop
sbb
sub
shrl
cmc
lock
in
test
stos
pushf
flds
mov
stos
imulb
ljmp
lret
lods
adc
push
inc
or
prefetchnta
dec
bound
dec
fists
imul
push
sbb
inc
pop
fs
adc
jp
mov
lret
rolb
push
pop
cs
add
mov
xchg
inc
fldcw
lret
cmp
pushl
lret
mov
mov
jbe
mov
push
stos
mov
lcall
inc
and
or
xchg
sub
cmp
or
repnz
fidivs
popa
mov
int
ret
or
aad
sub
add
nop
jns
dec
fdivl
je
cld
stc
lds
pop
mov
cmp
imull
mov
pop
mov
in
cmp
mov
inc
inc
adc
sti
pop
popf
xchg
mov
loope
push
shll
mov
xchg
mov
mov
mov
dec
sbb
pop
or
js
std
jecxz
or
roll
dec
addr16
icebp
mov
stos
sarl
cmpl
cmp
xor
jg
sub
adcb
adc
mov
jg
lods
adc
mov
out
push
cmp
adc
jo
xchg
shlb
pop
data16
mov
shrb
mov
dec
popf
das
adc
and
pop
out
push
outsl
push
test
dec
stos
lods
inc
xchg
xor
sub
scas
mov
icebp
imul
cmp
les
xor
inc
test
jp
sub
xchg
repz
scas
jae
addr16
clc
sahf
mov
ja
xor
or
sub
dec
aas
sub
imul
fistps
js
jns
jne
popa
ret
xor
inc
mov
das
pop
xor
fimuls
jnp
mov
mov
arpl
enter
addr16
jge
dec
jns
jno
xchg
test
test
mov
adc
cli
lea
inc
xor
xchg
inc
sbb
push
add
pop
mov
stos
xor
pop
cvtps2pi
push
cmc
jns
aaa
dec
in
jmp
div
div
pop
mov
mov
fnsave
in
outsb
das
lret
into
nop
loop
les
test
loope
aas
pop
inc
sbb
pop
push
push
jl
cs
push
fimuls
mov
fneni(8087
sbb
cmpsb
enter
repnz
cmc
ss
inc
xor
or
pop
push
insl
xor
xchg
push
cmpsb
js
int
xchg
cmc
cmp
ficoml
jae
sbb
je
mov
pop
and
dec
mov
xchg
je
cmp
xor
cmp
out
int
movsb
scas
cmp
fmulp
cmp
in
dec
insl
rorl
and
inc
btc
les
mov
dec
push
push
shl
push
test
stc
adcl
in
jmp
sbb
pop
lods
add
mull
cmpsl
mov
ret
pop
cs
mov
or
out
push
mov
arpl
addr16
negl
pop
push
bound
shrb
aaa
adc
test
pop
jno
push
lahf
push
sahf
icebp
pop
mov
rol
in
fimull
cmpsb
aas
mov
inc
cmp
mov
mov
pop
push
or
pop
cmc
insb
loope
or
call
mov
sbb
jae
dec
sub
out
and
cmp
and
and
pop
in
sub
cmp
add
jnp
faddl
cmp
inc
sbb
and
test
lods
jp
xor
idiv
test
stc
mov
jno
daa
inc
ret
lahf
dec
cmpsl
jno
push
cmc
mov
pop
fdivs
cmc
sbb
jb
mov
inc
imul
iret
clc
mov
pop
jbe
jmp
arpl
scas
ss
push
out
ljmp
mov
jmp
and
mov
int3
jge
rcll
loop
ljmp
scas
xchg
jmp
scas
add
clc
mov
mov
and
pop
mov
ret
jmp
in
sbb
inc
dec
cmpsb
xor
dec
xchg
cmp
pop
pusha
pmaxsw
mov
in
and
bound
lret
mov
fimuls
subb
sub
xchg
inc
loope
std
fistl
jecxz
xchg
inc
aaa
mov
outsl
inc
cmp
ss
mov
arpl
cmp
popf
repz
sti
in
xchg
std
mov
filds
addr16
cmc
and
push
cmp
mov
add
lods
xor
push
enter
pop
pushf
pop
iret
js
lock
popf
jb
sbb
pop
jnp
hlt
pushf
sbb
out
cld
test
and
gs
ret
sub
jle
dec
out
data16
adc
sarl
in
inc
out
cmp
lret
or
inc
mov
pop
call
dec
sbb
adc
shrb
push
dec
mov
popf
cmp
fwait
mov
inc
outsb
cmp
inc
imulb
xchg
mov
insl
jno
bt
test
mov
sbb
sarb
int
pushf
in
or
add
sub
adc
aas
js
repnz
sub
pop
push
fwait
icebp
fwait
mov
cld
fisttpll
das
jle
cmc
insb
sbb
mov
fldenv
and
out
gs
das
mov
lret
add
in
sahf
ficoml
or
pop
hlt
xchg
push
jno
sbb
bound
inc
sbb
sbb
das
mov
cmc
xor
pop
sbb
ret
fdivrp
insl
hlt
ret
xor
adc
sub
xchg
int
js
push
ret
icebp
insl
lods
mov
mov
fidivrs
add
dec
inc
les
mov
sarl
mov
fbstp
call
xchg
test
in
hlt
into
xchg
push
je
jb
xchg
in
jg
icebp
inc
mov
pop
xchg
mov
or
sarb
inc
mov
adc
adc
or
sahf
in
mov
and
in
filds
bswap
loope
push
add
sarb
div
or
jae
inc
js
rcl
cmp
inc
test
ret
mov
pop
push
test
cmpsl
sbb
jp
pop
mov
sub
loope
subb
stos
sbb
cmp
enter
mov
adc
add
cmp
mov
scas
popf
xorl
fisubs
mov
and
push
jnp
mov
daa
shll
fs
pop
xchg
push
pop
inc
or
in
les
hlt
xor
cmp
pop
mov
and
imul
and
maskmovq
testl
xchg
add
nop
sub
mov
es
pop
xchg
or
cmpsl
cmpsb
movb
sub
pushf
sub
xchg
lahf
mov
push
shr
orb
das
adc
out
xor
clc
or
xor
adc
test
sub
cs
mov
data16
mov
jbe
js
aad
xchg
jl
xchg
sub
loope
adc
js
jp
jecxz
pop
push
je
sbb
cmpsl
xchg
insb
push
adc
ljmp
cmp
add
xchg
iret
sbb
sub
fdiv
sbb
and
adc
add
xor
sbb
mov
jmp
popf
pop
or
cmp
pop
mov
jp
cmp
gs
sub
pop
jecxz
cmc
divl
push
cmp
stos
outsb
push
into
stos
clc
jmp
jle
scas
movsl
iret
ja
mov
iret
lcall
imul
ret
nop
mov
ss
inc
mov
dec
add
mov
test
push
sbb
ret
shll
rep
xor
lds
outsb
out
pop
mov
aam
sti
icebp
out
ds
mov
shlb
out
mov
call
aas
jle
in
xchg
les
push
lahf
add
sahf
bnd
insb
adc
jns
sti
xchg
lret
es
cmp
add
out
jno
add
imul
sahf
aas
aaa
adc
and
shlb
imul
and
jae
into
push
data16
add
lcall
fcomps
stc
push
adc
lods
fidivrl
dec
cmc
fimuls
fists
sub
or
dec
xchg
ss
jno
jecxz
mov
xchg
imul
push
push
add
and
or
xor
pop
push
mov
pop
mov
dec
jno
push
repnz
leave
mov
je
push
mov
sti
lods
int3
lods
pop
jg
lds
lret
lds
cmp
xchg
mov
cli
shll
nop
int
adc
sub
push
cmp
test
out
pop
jno
ja
sub
mov
push
pop
jecxz
adc
dec
out
pop
pop
aad
add
push
clc
cmp
test
mov
jecxz
test
ss
scas
fiaddl
xor
leave
pop
xchg
sub
sub
sub
cwtl
mov
or
ss
jl
mov
pop
pop
cmpsb
xchg
push
xchg
lcall
cmpsl
pop
out
test
inc
incl
mov
xchg
test
cwtl
fisubrs
xor
stos
js
int3
rolb
jnp,pt
lock
xor
clc
mov
stc
in
cs
movsb
pop
mov
std
loop
xchg
test
xlat
and
sbb
cmpsl
xor
cs
fsts
pop
cmp
jmp
jl
xchg
pusha
stos
adc
sti
xor
xor
mov
aad
cmp
sub
pop
jnp
out
lods
daa
mov
in
shll
push
and
mov
add
mov
pop
lcall
xchg
fnstenv
decl
into
jge
lods
movsb
jns
sub
lock
mull
xor
jecxz
mov
inc
mov
test
ljmp
or
leave
push
cmp
cltd
rorl
ret
pop
notb
leave
sub
stc
xchg
mov
lods
jo
call
int3
mov
adc
fadds
pop
cmp
or
dec
js
xor
pop
cmpb
lock
adc
fucomip
mov
int3
sub
jae
or
test
push
cmc
adc
sti
push
cld
aam
ljmp
cmp
jae
inc
pop
add
fmull
insb
jecxz
mov
das
xchg
sahf
mov
cli
rolb
jae
dec
jo
cwtl
dec
sti
jecxz
inc
lcall
mov
mov
fidivs
mov
add
lret
adc
cmp
pushf
loop
movsb
mov
xlat
leave
lods
cwtl
call
shll
push
arpl
mov
cmp
xor
xchg
and
mov
inc
test
xchg
scas
adc
sub
lods
stc
push
add
pop
jmp
dec
sub
add
xor
xchg
loope
mov
loopne
dec
cld
or
arpl
sbb
mov
push
lahf
inc
jae
sub
leave
pop
ss
pushl
addr16
lods
repnz
test
jae
lds
pop
jl
repnz
xchg
pop
fsubl
jmp
xor
mov
out
fidivs
lods
cmp
and
jge
mov
xchg
sbb
pushf
lds
cmpsl
mov
or
cmp
sarb
cmc
add
mov
ja
jo,pn
adc
inc
xor
rolb
mov
and
int3
insl
push
iret
test
std
pop
and
mov
sbb
xchg
test
aaa
hlt
sub
mov
mov
test
sbbl
and
jne
inc
icebp
es
jecxz
xchg
and
scas
xorl
adc
negb
fnsave
add
loopne
sbb
dec
mov
pop
pop
daa
out
std
dec
mov
std
mov
push
imul
sub
div
arpl
cwtl
dec
jbe
fbstp
icebp
loope
fcoml
das
cltd
rorl
push
cmp
add
insb
in
daa
add
out
jecxz
push
cmp
push
and
mov
or
mov
pop
ficompl
icebp
subl
cmp
int3
push
cmpsl
lock
fisttps
pop
fsts
dec
add
mov
nop
imul
xor
fildl
add
or
jo
jo
aas
lods
fs
mov
fwait
sahf
jecxz
lods
int3
and
mov
test
je
inc
sbb
in
fcompl
stc
adc
jmp
imul
lahf
dec
cld
xchg
cmpsl
icebp
arpl
ret
test
inc
dec
fistl
xorl
testl
dec
dec
inc
fildl
mov
pop
lcall
mov
fdivrl
xor
and
cmp
out
ret
sub
inc
cmc
das
scas
mov
sub
stos
mov
hlt
lahf
mov
ret
lods
sub
hlt
fldl
pop
in
lods
cwtl
lds
pop
pop
pusha
lret
and
movsl
loop
inc
jge
stc
cmp
pop
jle
fld
imul
scas
dec
mov
or
mov
mov
movsl
or
cmpsl
stos
adc
arpl
pop
mov
xchg
imul
sub
out
dec
xor
and
aad
pop
insl
sti
repz
outsl
or
in
cmp
test
mov
lret
dec
add
dec
cltd
mov
pop
dec
out
ret
mov
inc
fimuls
iret
jg
mov
add
push
ds
je
sbb
mov
loope
gs
movd
mov
push
push
cmp
scas
les
loop
idiv
sbb
aas
jp
jge
stos
sbb
cmpsl
xor
fnstsw
jmp
pop
into
daa
leave
inc
insl
dec
imul
adc
lods
andl
mov
pop
fidivl
nop
std
pop
push
dec
and
push
push
xor
pop
in
in
cmp
xchg
and
daa
cmp
inc
shrl
addr16
pop
or
xchg
sbb
jb
sub
ja
cltd
mov
cmp
mov
loopne
testb
push
push
enter
push
lcall
cli
ret
cs
mov
addr16
sahf
pop
cmp
in
push
jno
pop
sti
mov
xchg
pop
sbb
push
enter
movsb
push
and
pop
loope
jns
in
addb
das
sbb
aas
xor
sarb
inc
mov
ljmp
jle
add
or
sbb
icebp
or
lret
sbb
gs
add
jnp
lds
xchg
pop
push
out
dec
cmp
scas
fisubrl
sub
jge
loopne
sbb
ss
pop
stos
cs
adc
test
dec
nop
adc
and
adc
cli
mov
mov
push
jge
pop
mov
pushl
sbb
dec
ficompl
jle
mov
dec
mov
inc
jne
ja
adc
push
and
iret
jb
repnz
mov
mov
daa
stos
lds
inc
dec
sub
movntps
scas
sti
sbb
dec
xchg
lods
fs
jno
xchg
jle
pop
xchg
xchg
mov
pop
shlb
in
mov
sub
outsl
inc
loop
sub
lret
dec
inc
dec
jnp
mov
and
dec
icebp
arpl
mov
sti
push
sar
pop
inc
imul
mov
adc
sub
ret
and
push
lods
ja
push
mov
pop
xchg
sbb
aam
mov
inc
mov
fildll
cmp
ss
cltd
or
mov
loope
sahf
in
out
outsl
pop
stc
push
roll
in
add
stos
xor
fs
pusha
cld
cmp
mov
mov
dec
pusha
adcb
push
sbb
xor
jecxz
adc
sarb
sub
and
or
mulb
call
es
sbbb
and
push
bound
jp
ds
and
enter
jns
mov
sbb
idiv
insb
insb
xchg
jp
mov
mov
jle
cs
roll
mov
popf
cmp
pushf
mov
in
pop
arpl
cmp
mov
sbb
adc
mov
pusha
dec
or
cwtl
insl
mov
xor
inc
test
imul
xor
fisttps
xor
jo
and
clc
dec
stos
adcl
jp
es
pushf
dec
sbb
imul
and
hlt
xchg
out
andl
repnz
adc
cmp
mov
hlt
or
idivb
jb
mov
cmp
xor
jns
inc
out
test
ljmp
xor
idiv
adc
popf
stos
push
bound
mov
add
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
arpl
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
bound
ret
movsb
pop
push
cmp
or
cmp
sub
leave
je
insb
sarb
in
sub
imul
cmp
sub
sbb
push
fldenv
mov
and
xor
les
ja
dec
hlt
cmp
mov
inc
imul
loope
mov
jno
jns
add
hlt
sbb
jne
outsb
jp
mov
or
negl
pop
push
push
mov
jno
inc
insb
pop
pop
lods
cmp
adc
mov
xchg
mov
or
sub
icebp
mov
in
sbb
inc
fsts
fadd
in
fs
cmp
xchg
sub
test
mov
test
je
add
mov
insb
pop
cmp
mov
sub
pop
idivb
jl
adc
es
mov
sub
fnsave
shll
sbb
lret
push
jl
jmp
lea
push
cltd
sbb
jo
xorl
sub
mov
mov
inc
jmp
je
add
adc
and
xor
sti
aam
in
hlt
pop
test
xchg
sbb
push
popf
or
fcoml
push
sbb
sub
insl
cmpsb
dec
cmc
stc
inc
popa
push
sahf
add
rorb
cmc
push
cli
xor
mov
and
ljmp
in
or
mov
cld
add
adc
and
xor
les
pop
in
hlt
cmp
mov
inc
jmp
je
add
adc
and
xor
les
pop
in
hlt
cmp
mov
inc
sub
xor
enter
pop
in
repnz
fmuls
lods
ja
xchg
jbe
mov
pop
xchg
cwtl
dec
roll
mov
xor
push
lret
lahf
cwtl
push
fimuls
push
stos
dec
test
cmp
lds
jmp
test
movsb
daa
shl
mov
leave
xchg
xor
jg
ss
cwtl
lds
xlat
inc
xchg
jmp
pop
leave
sarb
add
imul
jb
adc
out
xchg
mov
mov
daa
out
jae,pt
lea
popf
push
shll
adc
mov
popa
pushf
xor
push
lcall
insl
and
scas
and
lret
fistpll
je
xor
sarl
lret
int
sahf
pusha
in
je
das
mov
or
ja
out
leave
lret
ss
fs
jo
int
shll
outsb
sub
mov
clc
in
push
lea
jge
dec
cli
mov
adc
out
loop
ret
cmp
mov
mov
dec
adc
sub
inc
xor
fsubs
push
dec
out
xchg
or
pop
pop
outsb
rclb
mov
push
fildl
xchg
mov
call
sub
xchg
adc
in
xchg
inc
mulb
push
mov
inc
cmpsl
adc
lods
sub
or
push
or
int3
mov
std
aaa
cltd
js
mov
test
inc
fld
mov
test
xabort
pop
jo
das
call
sub
or
pop
mov
or
mov
jl
xor
cmc
mov
jmp
ja
nop
popa
mov
push
fadds
je
mov
sub
xchg
add
mov
cmc
pop
mov
cli
inc
stc
xor
mov
jnp
push
jo
add
mov
pop
imul
sti
repnz
pop
ret
sbb
push
dec
xor
cwtl
out
mov
mov
rcrl
scas
ret
sub
inc
cs
mov
test
add
mov
jo
je
jb
fstps
mov
jbe
jg
cmpsl
add
inc
or
pusha
xchg
and
mov
push
mov
mov
push
pushf
arpl
dec
das
pushl
cmp
mov
cmc
or
xchg
dec
test
lods
test
pop
or
iret
jb
sub
sbb
es
mov
aad
pushf
cmpsl
stos
pop
cmc
cwtl
and
ja
jns
mov
sub
pushf
int
cs
xor
push
mov
dec
repnz
insl
and
fldcw
popa
test
hlt
sub
mov
cmp
mov
cli
adc
mov
and
jo
shr
push
fsubr
idiv
mov
jmp
pushf
sahf
sbb
lds
push
jecxz
or
mov
aad
mov
repnz
fidivrl
daa
or
and
adc
and
pop
inc
sub
sti
cld
clc
jno
jg
cmp
cmp
enter
adc
test
lahf
and
or
es
xchg
in
push
jb
jp
pop
jecxz
pop
sub
mov
and
gs
sbb
and
and
jo
dec
sbb
sbbl
and
xor
incl
pop
push
cmp
jnp
push
jns
xchg
icebp
les
sbb
push
dec
enter
test
jae
iret
jno
jge
popf
pop
xor
xor
sarl
loopne
cli
sub
ret
sub
pop
adc
aad
ds
mov
mov
lock
mov
push
jle
or
mov
or
jmp
jae
pushf
aam
nop
sub
mov
dec
mov
je
ljmp
push
mov
stos
xchg
mov
in
les
std
add
fists
mov
leave
aam
sub
dec
sbb
cs
pop
add
mov
mov
pop
in
dec
mov
jno
daa
mov
cmp
push
cmp
push
and
les
sbb
mov
xor
js
pop
xchg
dec
ds
fsts
pop
stos
jg
test
dec
xlat
push
fldcw
xor
mov
pop
pop
adc
or
xor
ljmp
daa
fbstp
nop
cli
pop
cmpl
push
mov
shrl
test
adc
xchg
jg
out
mov
or
fmuls
jp
jo
lret
fisttpll
insl
mov
das
int
movsb
xor
pop
mov
jno
dec
aad
mov
mov
jmp
and
rorb
dec
outsl
cmpsb
or
push
sbb
lahf
rorb
xlat
test
jg
fsub
test
push
or
cmpsb
es
loop
mov
sahf
dec
jb
loope
cltd
adc
popa
sbb
cmp
int3
push
jmp
cmp
mov
add
pop
and
iret
jecxz
lock
xor
mov
mov
out
and
pop
xor
cmp
mov
sub
dec
adc
rorl
adc
jo
cmp
jge
and
sbb
ret
mov
lds
fsubs
bnd
aam
aaa
pop
in
test
push
shrb
jbe
jb
mov
iret
inc
lods
mov
cmp
adc
in
mov
fwait
xchg
lea
xchg
mov
mov
push
pop
insb
sub
nop
or
insl
xchg
into
notb
test
xor
mov
out
push
aas
and
ljmp
outsb
push
dec
repz
fxch
sbb
dec
add
inc
sbb
xchg
repz
xchg
aaa
push
or
cld
sub
pop
adc
xor
pop
mov
mov
add
test
aam
lahf
cli
sbb
clc
dec
lcall
fistpl
mov
and
jns
mov
jb
jb
stc
pop
cmp
mov
jl
loopne
sahf
ret
lahf
pop
add
adc
pop
les
dec
lcall
ss
xchg
jne
pop
mov
mov
stc
sti
jb
lds
sbb
fdivp
pop
sar
push
cmc
push
cld
dec
mov
setae
sahf
loopne
jb
sbb
xlat
jmp
dec
jl
inc
fstps
mov
pop
clc
std
xor
pop
xchg
mov
popa
movsb
aad
movsb
je
aam
pop
jp
xchg
sti
lcall
insb
loop
out
sti
and
push
subl
ds
out
adc
jecxz
inc
sub
imul
mov
pop
insb
lock
in
xor
hlt
jp
js
pop
fbstp
out
xor
movsl
mov
push
dec
fnclex
fnstcw
xor
ret
adc
push
cmp
dec
push
dec
bound
pushf
dec
dec
cli
mov
fbstp
sub
sbb
jb
dec
push
popa
loopne
imul
outsl
in
lcall
insl
xor
mov
imul
jnp
div
push
jns
incl
sub
iret
push
push
fs
mov
fcmovbe
mov
sub
dec
fwait
xor
dec
repz
shl
dec
jae
mov
lcall
shrl
aam
push
ss
sub
sub
jns
mov
lods
repnz
gs
sbb
test
xchg
mov
fs
lea
xlat
loopne
int3
dec
jle
sbb
push
test
bsr
mov
and
add
roll
cmc
xlat
adc
frstor
repz
sbb
sbb
dec
in
sub
jge
pop
leave
xchg
pop
pop
pushf
daa
jge
int3
cmpsb
mov
sbb
push
repnz
dec
test
xchg
mov
test
in
cmp
pop
and
lods
add
mov
cmc
push
cmc
pop
sub
fdivrs
repnz
dec
lock
inc
mov
xchg
insl
mov
mov
test
ss
js
mov
roll
loopne
pop
negl
call
fisubl
push
cmp
pop
pop
je
push
jmp
les
orl
fwait
roll
mov
int3
push
popa
ljmp
out
arpl
pop
xor
mov
movsl
andb
dec
jne
jnp
add
inc
cmp
cmp
dec
outsb
jb
stos
sbb
pop
jl
leave
int
push
mov
bound
popa
mov
and
mov
mov
mov
and
arpl
jo
lock
mov
imul
enter
mov
or
xor
sub
pop
sbb
push
xor
mov
add
mov
adc
push
jbe
xchg
xchg
mov
gs
mov
aaa
jg
add
xor
dec
adc
jecxz
add
insl
scas
and
lea
aad
jle
add
add
cmp
adc
inc
out
inc
xor
fdivrl
pushf
ja
pop
pusha
jge
sub
test
cmp
pop
or
lret
push
push
pop
bound
pop
ljmp
and
inc
jb
cmp
dec
mov
hlt
out
movsl
xchg
push
mov
jmp
fistps
in
or
call
push
loop
add
shr
cltd
inc
mov
jae
dec
mov
clc
stc
mov
in
xchg
mov
stos
leave
inc
cmp
push
inc
xor
push
jmp
and
repz
fisttps
push
loope
and
sub
jo
pop
push
js
adc
jnp
jg
push
idivb
jecxz
insl
test
das
mov
leave
jg
jns
lods
lahf
dec
arpl
test
lret
mov
lods
add
push
loop
pop
sub
mov
scas
cmp
outsl
mov
jmp
clc
sbb
push
or
clc
adc
xchg
andb
inc
fmul
add
inc
push
fnstenv
ljmp
sub
or
cwtl
lods
dec
test
iret
pop
sbb
cmp
test
loopne
dec
lods
popf
jp
sub
repz
pop
das
add
add
push
mov
mov
lods
fs
xchg
loopne
gs
jl
dec
loopne
int
xor
inc
sbb
sarb
fsubrs
push
sbb
jle
xor
int
je
ljmp
mov
lret
sbb
test
jae
dec
movsb
mov
stc
dec
loope
jecxz
sub
pop
add
mov
pop
jbe
jne
lds
call
sub
jbe
adc
jae
loopne
leave
sti
rcr
jae
loopne
les
or
jb
inc
andl
xlat
rorl
add
mov
pop
inc
xchg
fildl
xchg
pop
in
pusha
fadd
inc
mov
xchg
cltd
popf
fisubrs
scas
sub
jg
roll
pop
mov
movsl
scas
js
jae
add
call
jo
fstl
sub
push
es
dec
in
pop
push
cli
push
dec
xchg
sahf
mov
daa
mul
adc
out
mov
xchg
and
or
mov
sarl
in
push
lcall
call
pop
lock
xchg
test
inc
outsl
adc
sub
mov
push
cli
insl
sbb
pop
jb
pop
and
subb
je
cmp
push
insl
xchg
rcrb
fs
xor
mov
or
dec
sub
cli
jnp
clc
xor
andb
xchg
push
mov
fildl
mov
xchg
cmpsb
loope
and
add
dec
mov
mov
ret
pop
fwait
xchg
movsb
inc
xor
push
xchg
lret
sub
shr
repz
test
loopne
rcrb
xor
pop
in
ficomps
lret
xor
mov
sbb
into
mov
lcall
mov
push
push
sub
stc
pop
fnstenv
cld
inc
loop
cmp
pop
imul
mov
adc
lds
ds
ljmp
js
jecxz
mov
imul
gs
sti
mov
or
and
push
push
addb
push
or
je
shlb
xor
dec
mov
xorb
fldl
and
loop
iret
loop
adcl
and
or
adc
or
jbe
mov
ret
pop
inc
sbb
adc
push
inc
xchg
mov
inc
cmp
and
pop
xor
pop
lods
loopne
jne
lahf
sbb
ljmp
push
out
into
das
daa
pop
repnz
add
scas
dec
leave
lcall
lods
cmp
add
xchg
cmp
xchg
test
and
mov
stc
mov
push
push
add
jno
sub
outsl
jne
dec
sbb
lret
cmpsb
insl
pop
mov
inc
rcrl
movsl
mov
lods
inc
mov
mul
jmp
push
call
shrb
ja
scas
cmp
mov
je
aaa
mov
icebp
jle
mov
or
repnz
mov
and
mov
insl
daa
mov
sbb
das
sub
sub
js
and
mov
inc
ret
or
js
arpl
loop
les
mov
cmp
jo
inc
aas
jmp
or
fs
jnp
fimull
repnz
pop
push
movsl
filds
je
imul
loop
mov
rcll
int
mov
insb
xor
movsb
xor
adc
scas
addr16
int
cmp
sub
sub
ret
fcmovnu
sbb
shll
not
mov
mov
in
push
add
rcll
cmp
inc
nop
push
mov
lret
cltd
mov
das
jb
stc
sar
or
lds
js
pop
xorl
xchg
jmp
int
es
aam
rcrl
pop
aad
movsl
xchg
inc
popa
sub
ja
add
fldt
shrl
add
add
pop
inc
rclb
addr16
sub
xchg
sbb
cwtl
xor
int3
add
cwtl
scas
cmp
or
sbb
subl
push
loopne
xchg
sbb
lahf
iret
xor
lret
call
das
pop
push
or
mov
xor
fwait
lcall
cld
or
outsb
jnp
not
sbbb
sub
sti
xor
jecxz
jno
xor
push
pop
mov
inc
inc
mov
pop
pop
pop
fldt
mov
add
aaa
pop
shll
pminsw
cli
mov
fs
jge
pop
xor
div
fmull
divb
mov
divl
scas
adc
pop
cmp
sbb
orl
imull
fdivr
inc
aas
push
inc
lea
lods
scas
jp
xchg
pushf
aam
and
sbb
xchg
add
inc
sub
or
fiaddl
xor
mov
in
repnz
lret
lret
sub
mov
lods
and
std
xorl
mov
outsb
push
jbe
or
push
cmp
insb
mov
xchg
inc
enter
ljmp
clc
mov
out
pop
adc
inc
mov
sub
test
js
dec
jbe
les
jne
jnp
movl
ret
push
test
push
mov
pushf
and
out
in
sbb
mov
dec
aam
mov
in
int
xchg
and
mov
pop
lods
cs
ret
push
out
divb
repz
pop
inc
adc
sub
repnz
mov
adc
or
mov
mov
push
mov
loopne
sub
nop
sbb
not
out
mov
or
lock
addl
bound
fwait
or
mov
or
adc
pop
pop
add
aaa
add
inc
jno
js
inc
mov
incl
fildl
rorb
lcall
clc
lahf
shl
in
xor
dec
sbb
cmp
xor
subb
in
push
jo
sub
dec
mov
xor
jbe
out
adc
hlt
rcl
test
test
push
icebp
je
add
sarl
sahf
mov
sub
adc
cmc
lahf
lahf
cs
sbb
dec
in
fldenv
popf
inc
loop
dec
loope
jle
push
inc
cmp
push
in
inc
sysexit
fcmovnb
jnp
movsl
xchg
or
jp
xchg
call
andl
out
inc
fsts
xchg
sub
push
js
in
out
dec
mov
ret
in
orb
call
adc
or
push
enter
sub
repnz
jp
jle
pop
cmpl
cwtl
mov
stc
js
dec
addr16
jl
jns
mov
addl
pop
pop
cli
not
adc
push
das
dec
stc
cmp
xor
mov
fistps
dec
cmp
sbb
lcall
out
and
cmp
sarb
or
das
cmp
dec
jle
adc
clc
orl
xchg
pop
xchg
xchg
frstor
pusha
cs
xchg
fsubrl
subb
bound
add
sarb
out
cmp
mov
cmpsl
stos
mov
in
fbld
inc
fwait
movsl
mov
dec
aas
push
int3
testb
subl
mov
push
inc
dec
sbb
cmp
loopew
cmp
aaa
popf
ss
enter
mov
push
outsb
xor
loope
sub
sbb
xorb
mov
sub
dec
mov
out
push
mov
xchg
shl
sub
sub
loope
cs
pop
test
or
xlat
rol
sub
stc
xchg
or
adc
jno
idiv
or
push
mov
sub
rol
xor
fcoml
and
lea
arpl
rol
jle
mov
arpl
cmp
add
vmwrite
daa
sub
mov
jae
dec
lds
mov
mov
stc
sub
outsb
sbb
inc
jg
sbb
push
jno
mov
das
mov
cmpsb
sub
sub
xchg
push
repz
pop
add
cmpsb
hlt
cmpsb
or
sub
adc
dec
ds
enter
add
dec
mov
popf
inc
jnp
push
cli
jecxz
lods
fstpl
mov
xor
outsl
mov
loope
ss
in
into
repnz
dec
pushf
movsb
cli
push
idivl
add
sub
push
leave
mov
scas
mov
or
pop
and
or
arpl
mov
jo
adc
aam
test
insb
ret
movsl
rcrb
fistpll
stos
outsl
mov
stos
inc
pusha
pop
pop
shll
mov
sub
xor
clc
addr16
sbb
das
movsb
mov
jb
cmpsl
add
iret
cmp
inc
inc
jmp
test
scas
sahf
jmp
cmc
pusha
mov
movsb
out
shrb
mov
add
hlt
cmp
movsb
dec
orb
push
dec
negl
in
inc
imul
push
hlt
lret
jge
push
loope
dec
mov
lods
mov
cli
stc
aad
inc
adc
clc
mov
std
cwtl
loope
jno
mov
lahf
jb
shlb
adc
imul
in
pop
insb
fs
mov
das
mov
pop
push
push
sbb
sbb
imul
int3
mov
cmp
inc
dec
pushf
jo
mov
inc
je
cmp
setbe
xchg
sbb
mov
popf
push
jp
mov
dec
fidivl
xchg
orb
into
jae
push
mov
sbb
mov
mov
pop
sbb
das
mov
fldl
xor
out
lods
bnd
xor
dec
mov
outsb
les
xchg
sbb
xchg
push
add
push
mov
stc
jl
test
xor
repz
sbb
jle
add
jb
jmp
fcmovnu
movsl
cmp
aaa
push
jp
mov
inc
xchg
mov
jg
aas
mov
test
adc
jno
add
ds
pop
mov
cli
xchg
xor
ljmp
xor
das
fistl
mov
xchg
rorb
add
pop
pushf
xor
mov
push
jecxz
cmp
imul
push
sub
and
sub
in
in
adc
sub
test
iret
inc
inc
sbb
push
cs
stos
push
addr16
push
xchg
idivl
out
fisttpll
jg
or
or
pushf
adc
lds
dec
cmp
int
jl
and
fidivl
nop
mov
pop
mov
movsl
je
cmp
dec
fcoml
inc
fsubrs
lds
imul
imul
fadd
dec
repnz
and
int3
hlt
das
out
mov
inc
cmp
or
xchg
in
mov
jae
push
incb
push
data16
jle
sbb
push
stos
movb
cmpb
out
andps
shl
outsb
inc
or
and
inc
shlb
lret
std
scas
mov
or
xchg
add
es
mov
sbbb
aad
mov
and
xor
les
pop
in
hlt
cmp
mov
inc
jmp
je
add
adc
and
xor
les
pop
in
hlt
cmp
mov
inc
ljmp
add
xchg
cltd
and
xor
inc
imul
cmp
mov
inc
lds
loope
mov
and
xor
les
orl
imul
testb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
sbb
aad
test
xchg
adc
jns
push
and
and
arpl
mov
mov
mov
test
xchg
adc
jne
and
inc
inc
in
add
xor
frstor
lods
repz
jecxz
adc
or
pop
cmp
in
pushf
shlb
insb
js
sbb
fsin
sti
inc
jo
fmul
push
or
stc
and
mov
cs
cs
dec
clc
unpckhps
mov
mov
popf
pop
imul
jb
lcall
mov
or
mov
stc
dec
shl
xor
mov
cmc
in
test
jne
fisttpll
mov
jbe
lret
popa
jg
adc
cmp
dec
repnz
xchg
add
pushl
add
mov
insb
ljmp
sub
push
popa
lret
push
inc
outsl
jbe
inc
jae
or
mov
mov
mov
pushf
jecxz
adc
insl
xor
push
cmp
arpl
sub
aam
repz
xchg
jmp
pop
or
ss
sub
add
icebp
cmc
jecxz
rclb
loope
stc
jbe
add
xor
ss
pop
pop
add
jo
movsb
out
fisubl
mov
test
xchg
adc
jne
inc
and
and
arpl
mov
mov
mov
test
xchg
adc
jne
inc
and
and
arpl
or
xchg
or
cld
jge
repz
mov
pop
repnz
sub
loopne
push
bound
push
inc
cmp
aas
cmpsb
cli
sbb
test
iret
lods
notl
dec
xchg
in
xor
pop
enter
fwait
pop
xor
test
xchg
xchg
les
call
or
outsb
jbe
jecxz
jnp
jecxz
mov
enter
pop
stos
insl
iret
sbb
stos
es
xor
sbb
jmp
mov
sbb
xor
inc
sub
shl
into
shr
ja
outsb
pop
dec
or
add
inc
aas
push
or
popa
lods
js
mov
cwtl
mov
ficomps
loopne
push
push
dec
cmp
add
cwtl
xor
jbe
fstl
aam
jo
inc
or
hlt
movsl
mov
out
push
imul
mov
jl
in
xchg
pop
fisubrl
and
repnz
clc
cltd
push
add
mov
push
dec
xor
jl
sbb
in
shlb
inc
pusha
push
mov
lea
cmp
neg
in
rcrl
sub
dec
aad
mov
mov
mov
lds
cli
lret
icebp
cmp
inc
xchg
in
mov
stos
out
add
outsb
pop
scas
fcomi
jp
jno
jo
cmp
outsl
es
js
test
pusha
xor
hlt
out
aaa
scas
jg
insb
mov
in
push
stos
adc
arpl
lahf
push
pop
pop
mov
adc
jo
push
cmp
arpl
sub
cmp
or
jb
test
mov
sbb
adc
pop
test
pop
add
cmp
sbb
in
xor
mov
repnz
sbb
jl
cltd
sbb
xchg
sub
xchg
adc
xor
lods
and
jge
orb
fxch
mov
adc
repz
or
mov
out
jno
dec
xor
shl
adc
cwtl
imul
and
push
cmp
push
int
je
jb
and
call
xchg
dec
pop
mov
adc
inc
fnstsw
xor
test
popa
aam
dec
cltd
and
lret
popa
pusha
scas
mov
push
sbb
loope
add
or
jmp
mov
test
or
lcall
cmpsl
pop
fdivr
fldl
mov
outsl
dec
testb
xor
inc
push
xchg
pusha
cmpsb
xchg
je
cmp
repnz
cs
adc
sub
repnz
popf
jmp
std
pop
mov
lcall
sarl
repz
movsb
repz
inc
inc
fwait
insb
nop
rcr
push
mov
and
sub
push
pop
pop
hlt
imul
dec
imul
int
or
aas
adc
adc
lods
jo
push
and
and
or
jo
pop
xchg
and
rcrl
or
inc
lods
push
bound
mov
out
jl
negb
adc
pop
fcoms
mov
notb
push
test
inc
or
movsl
mov
pushf
loope
cmp
jp
loope
adc
dec
loopne
out
bound
fs
cltd
enter
nop
mov
ret
mov
pop
jne
ror
aaa
test
popf
clc
mov
outsb
cli
mov
inc
jle
dec
sbb
insl
data16
fcompl
ljmp
loop
arpl
mov
sub
in
fimull
in
aaa
pop
mov
test
inc
das
jns
insl
jle
lock
sbb
aam
jns
push
xor
xor
mov
popf
jp
mov
sarl
jo
mov
ljmp
xor
push
xchg
jne
dec
or
push
pushf
xlat
sub
gs
and
sub
icebp
into
xchg
loopne
ljmp
aaa
andl
pop
ret
fld
inc
idiv
jp
inc
sarb
sub
stos
mov
mov
and
lods
mov
bound
push
psubusb
popf
adcl
xorl
push
aas
movsb
test
jge
add
vorps
jge
xchg
ret
in
mov
scas
adc
in
nop
mov
in
jno,pn
dec
stos
push
jle
inc
xchg
fmuls
inc
outsb
je
in
daa
rolb
cmp
xchg
fidivs
shlb
scas
addb
xor
push
jno
push
mov
or
jne
and
out
cmp
xchg
mov
std
inc
cwtl
fisubrs
xchg
lods
incl
mov
repnz
fsubs
rorb
mov
ljmp
mov
adc
data16
js
test
push
pop
jge
jo
xor
dec
loope
in
or
not
add
sub
and
adc
jecxz
hlt
adc
movsb
int
xchg
jb
inc
lods
leave
xchg
dec
dec
sbb
mov
adc
xchg
nop
es
pop
outsl
rcll
adc
adc
inc
nop
sub
addr16
add
aas
fidivrl
mov
idiv
dec
movsl
imul
sub
pop
movsl
jmp
pop
in
pop
testb
cwtl
mov
push
xchg
js
lcall
add
xchg
add
adc
push
aaa
mov
fcmove
int3
loopne
dec
rcll
or
pop
hlt
pop
mov
std
dec
out
inc
insb
cmc
ljmp
out
xchg
hlt
jne
fsubrs
xchg
sub
and
mov
jge
stc
roll
les
fcmovnu
or
pop
fsubrp
fiaddl
jnp
jns
mov
bound
mov
cmp
dec
loopne
inc
stos
es
ljmp
movsb
sbb
flds
movsl
xchg
loope
fsub
mov
bound
and
sti
dec
dec
adc
xor
int3
cmp
jne
jbe
ljmp
jb
lea
les
pop
sub
mov
ja
fisttpll
or
das
inc
jo
jns
cmpb
mov
sub
xchg
lcall
jno
push
dec
and
test
push
jle
push
pop
int3
les
sub
fs
or
call
sbb
cwtl
jno
cmpl
imul
js
sub
inc
push
loopne
les
mov
or
or
jl
xchg
push
mov
inc
mov
sbb
je
xchg
add
sbb
lock
inc
xor
leave
callw
sub
dec
mov
inc
scas
inc
enter
inc
adc
cmp
cmp
jp
jnp
jmp
mov
mov
rcrl
mov
cmp
inc
cmp
add
daa
rcrb
ds
fnstsw
in
iret
push
or
or
and
and
aad
push
xor
add
scas
push
popa
shr
pop
pop
test
mov
sarb
xor
or
jge
outsb
lds
lea
inc
jne
rolb
sarl
bound
data16
clc
stos
xor
mov
and
addr16
dec
pop
xchg
sub
cs
push
aam
int3
in
sahf
or
fs
mov
sbb
rol
test
mov
pushf
loop
mov
imul
adc
sub
mov
inc
loope
lahf
inc
cvtpi2ps
popl
inc
aad
sub
add
and
aas
aaa
popa
das
mov
stos
mov
pop
daa
sbb
jne
sbb
push
repnz
in
loopne
add
out
mov
pop
xchg
adc
inc
jb
pop
mov
and
add
push
test
xor
bound
adc
jne
movsb
inc
xchg
add
lock
dec
xchg
sub
xchg
jnp
mov
shrl
jae
stos
push
inc
stc
add
popf
mov
lret
fisubrs
roll
int3
orb
out
xlat
sbb
pop
and
jle
cwtl
push
jl
jg
mov
dec
inc
push
dec
push
dec
dec
aam
xchg
mov
mov
pop
sub
das
out
rol
fstpt
push
fnop
in
push
lcall
in
or
jne
test
orb
lods
jp
dec
mov
mov
fcomps
or
out
js
shrb
cmc
push
cld
cli
adc
pop
js
sub
es
adc
test
lcall
sub
xlat
das
jl
das
stos
shrb
idiv
paddq
lods
loop
push
orb
hlt
out
das
mov
cmpsb
cmp
out
inc
or
lods
mov
inc
das
mov
sbb
ljmp
js
leave
adc
gs
cmp
xchg
into
jae
dec
shl
cmp
push
xor
nop
movsb
or
jns
clc
adc
mov
dec
inc
jnp
dec
xor
mov
pop
js
call
aas
aam
icebp
xor
push
test
fwait
pusha
scas
xor
xlat
mov
xchg
sub
mulb
cmp
push
fdivr
in
rcl
pop
lcall
dec
or
lea
imul
cmc
loopne
jns
jge
jge
sub
mov
iret
icebp
push
push
mov
adc
add
xor
mov
mov
mov
lods
cmp
xorl
mov
test
jo
mov
xchg
fiaddl
jle
adc
divb
popa
popf
sarb
lods
loop
rcrb
fistps
pop
or
dec
push
xor
and
popa
jmp
mov
jecxz
cltd
cmp
push
repnz
xchg
and
imul
mov
jmp
les
cmp
mov
sbb
xor
push
push
stos
neg
push
loopne
add
test
ljmp
stos
repz
mov
add
fidivl
jecxz
xorl
popl
cltd
push
cwtl
fadd
add
iret
sub
shll
pusha
mov
daa
push
out
imul
adc
icebp
jnp
mov
push
sbb
sar
jne
fdivs
aam
sti
mov
xchg
aas
lds
or
std
add
push
inc
push
aas
fstl
mov
xchg
and
imul
xchg
aas
dec
cwtl
push
jb
jp
ljmp
imul
test
clc
aaa
xor
loope
cmpsb
lcall
fcmovbe
lret
jae
stos
ja
dec
shrb
cmc
out
stos
xor
push
push
lea
sub
jnp
jo
inc
mov
mov
cmp
sbbl
out
or
mov
push
xchg
sbb
sbb
ds
je
fnstenv
divl
xchg
inc
push
incb
addr16
cli
es
or
cmp
insl
bound
les
lods
scas
addr16
test
sub
inc
in
popf
xor
lcall
mov
aaa
pop
xlat
xchg
add
mov
mov
mov
push
dec
push
stos
lcall
pop
xchg
push
sub
add
pusha
cmc
dec
xor
fsincos
mov
push
fdivl
cs
or
js
push
push
int
dec
lcall
aas
lret
popf
ret
xchg
adc
push
repz
andb
fldl
push
fstpl
movsb
pop
iret
cld
lret
cli
jecxz
int
mov
inc
pop
sbb
cmpsb
inc
rcr
sub
jne
fucomp
xchg
sbb
dec
lock
cmc
push
adc
mov
xor
jns
imul
repnz
and
repz
leave
popl
jbe
sti
xchg
shl
pop
jge
pusha
nop
cmp
in
enter
push
rorl
lods
into
jbe
mov
xchg
cmp
xchg
addr16
sbb
pop
shll
sub
lcall
cwtl
xchg
push
inc
ficoms
mov
mov
ror
dec
jl
and
lods
loop
shrb
dec
sub
cmp
in
or
or
mov
jne
xchg
sub
imul
mov
cmp
enter
fs
inc
or
mov
add
fisttpl
imul
xlat
adc
leave
insb
out
push
dec
and
test
sbb
push
rolb
cld
xor
xor
daa
fdivrl
scas
ret
dec
mov
jle
pop
je
sbb
movsb
or
mov
mov
xor
pop
outsb
dec
jo
pusha
mov
jb
add
cmp
ds
lret
idivl
xlat
dec
cmp
pop
pop
das
inc
ja
es
cmp
adc
in
sarb
pop
es
repz
rclb
hlt
repz
pop
push
stos
mov
mov
movsl
or
cmc
aam
add
xchg
inc
lret
xchg
xchg
popa
jg
add
or
icebp
loop
loope
cmc
mov
jle
test
adc
sub
jge
pusha
sarb
pop
cmp
je
into
push
push
push
jmp
xchg
in
xchg
rclb
mov
sahf
and
out
dec
add
add
jle
stos
imul
in
aaa
ja
icebp
pop
into
or
sbb
out
dec
dec
pop
jnp
stos
adc
dec
pop
mov
and
mov
xor
fnstsw
lahf
frstor
dec
add
test
ret
jb
fsts
ret
dec
imul
int3
dec
ficomps
addr16
mov
adc
mov
jno
xchg
pop
gs
inc
das
clc
push
mov
decl
sbb
mov
mov
cmp
jae
or
pop
mov
hlt
into
lds
xchg
sub
mov
sti
mov
dec
pop
adc
cmp
push
lods
cmp
and
sub
adc
dec
repnz
sub
jge
fcomps
mov
movsl
loopne
leave
mov
lock
ret
xchg
inc
les
loopne
testb
pop
cwtl
xor
mov
push
insb
push
ss
lock
mov
fcom
xchg
or
pop
add
dec
xor
mov
push
ficomps
fstp
js
movsb
and
arpl
add
xchg
mov
movsl
movsl
jbe
sub
std
and
aaa
push
mov
stc
inc
mov
cmp
iret
adc
daa
fistpll
xor
push
push
push
sbb
lea
cmpsb
testb
cltd
jno
aas
xor
std
ds
mov
fs
mov
cld
ds
fidivrs
xor
arpl
shlb
xchg
das
dec
mov
sbb
and
in
mov
push
cmpsl
nop
sahf
popa
ret
lcall
pop
mov
xor
jne
add
sub
ljmp
push
clc
cli
mov
imul
lock
fnstsw
outsl
outsb
rorb
and
mov
fmuls
les
adc
push
xchg
cltd
jo
sbb
in
dec
imul
cmp
std
hlt
sub
sub
inc
mov
mov
icebp
into
and
loopne
inc
add
xchg
sahf
adc
dec
rcll
add
pop
fildll
jo
in
jmp
in
cmp
ret
stos
fists
dec
movsb
mov
and
pusha
popa
xor
lods
fsubs
pushf
dec
xchg
pushf
imul
ljmp
repnz
inc
mov
lcall
pop
mov
push
loope
adc
cwtl
add
jno
jmp
pop
fsubrl
cmova
jnp
int
jns
das
into
pop
ret
xchg
ss
adc
or
shll
outsb
movsb
pop
std
mov
stos
scas
lahf
push
sbb
shr
mov
cmp
shlb
pushf
adc
mov
stc
call
dec
clc
dec
inc
cmp
int3
or
dec
scas
sub
mov
inc
mov
jne
and
inc
jl
add
leave
in
je
and
stos
xor
add
call
out
nop
cmp
mov
mov
sbb
lds
adc
lret
out
mov
xchg
jno
mov
ljmp
mov
push
gs
imul
jo
adc
adc
mov
enter
jg
idivl
xor
js
or
jnp
ljmp
cli
and
cmp
adc
inc
xor
mov
imul
movsb
leave
ret
stos
xor
cmc
jmp
xor
or
pop
ljmp
or
push
pop
ret
imul
pop
mull
adc
daa
sub
fisttpll
rcll
imul
jmp
imul
push
add
sub
xorl
pop
add
inc
mov
or
cmp
adc
and
xchg
and
bound
add
push
mov
test
rcrl
xchg
rep
inc
pop
imul
xor
daa
pusha
faddl
sub
dec
test
sar
jecxz
jbe
push
jae
sahf
jae
sub
fwait
mov
aaa
inc
bnd
push
mov
shlb
pop
mov
cld
xchg
in
clc
movsl
push
jmp
cmp
dec
and
fcmovnu
pop
dec
sub
inc
mov
imul
mov
dec
sbb
cwtl
xchg
mov
xor
sub
or
ja
outsb
cli
xchg
stos
xchg
push
and
inc
movsl
xchg
xor
dec
fimull
xchg
sarl
or
lock
add
pop
loopne
fbld
rcl
cmp
mov
sbb
fisttps
js
mov
dec
jl
insl
cli
mov
gs
mov
pop
shlb
sahf
enter
jne
ss
jae
mov
push
push
fidivrl
xchg
adc
adc
sub
xchg
insb
sub
aaa
movb
and
mov
inc
dec
jnp
aas
sub
stos
mov
sbb
jmp
add
loope
or
mov
in
mov
xchg
cld
adc
mov
push
add
gs
bound
roll
adc
dec
lods
insb
rorb
loop
pushf
inc
jle
in
sar
jmp
mov
fs
imul
cmp
or
mov
jmp
cmp
add
and
xchg
test
pop
sbb
add
cmp
mov
or
repz
adc
jne
add
lret
add
sub
mov
pop
sub
push
stos
loope
int3
es
rorl
bound
lcall
push
sbb
push
xchg
push
pop
sahf
in
dec
lock
mov
jnp
xchg
out
or
gs
insb
push
jbe
cmp
pop
adc
imul
stos
lock
mov
dec
push
cmpsb
or
push
push
xchg
or
xor
daa
cmpsl
fsubrl
lret
addb
pusha
out
add
inc
fwait
or
pop
mov
test
push
ja
decl
imul
push
loopne
loop
adc
ds
xor
lret
in
aaa
mov
or
push
cmp
push
cli
xchg
xchg
outsb
sub
xor
nop
cmp
dec
mov
xchg
xchg
mov
mov
pop
jae
sbb
imul
out
es
inc
in
xor
push
fs
adc
daa
xor
loop
ss
pop
mov
sarw
movl
popa
xchg
pop
ja
shrd
jo
test
or
fistl
jns
mov
xchg
jae
test
jle
sbb
icebp
cmp
rclb
and
rcl
test
lods
clc
in
fptan
mov
mov
cmpsl
xor
push
fwait
mov
call
nop
imul
es
pop
xor
das
flds
aaa
stos
aad
cmpsl
jle
pop
stc
add
mov
pop
je
sbb
xchg
jb
imul
jecxz
nop
pop
fstpt
adc
xor
test
pop
mov
outsl
mov
jo
push
inc
push
orb
mov
scas
or
test
mov
xor
push
jno
add
adc
dec
aam
push
mov
xor
inc
push
sbb
xchg
test
push
push
pop
and
test
ds
lret
or
les
jmp
inc
div
test
sub
cmp
dec
loopne
mov
jl
lods
xor
adc
pop
sti
adc
daa
xor
pop
pop
adc
cmpsl
loope
sub
push
push
xor
dec
mov
ds
mov
pop
addr16
hlt
loopne
pop
popf
scas
or
push
sbb
rcr
push
sub
adc
xor
mov
bound
shl
fwait
xchg
jmp
ja
sti
orb
dec
push
out
push
jp
mull
and
in
inc
js
lods
lahf
int3
mov
cmp
mov
ret
icebp
cmp
fwait
scas
cmpb
cs
shrl
inc
addr16
push
push
cmp
out
lret
movsb
sbb
fidivrl
xchg
mov
pop
pop
aaa
in
pusha
adc
mov
push
out
fucomp
xchg
rcr
stos
cmp
stos
sub
mov
test
xchg
adc
jne
inc
and
and
arpl
mov
mov
mov
test
xchg
adc
jne
inc
and
and
arpl
mov
mov
mov
test
xchg
adc
jne
inc
and
inc
xor
xchg
in
cmc
mov
mov
mov
test
xchg
adc
fistps
lods
lret
lret
pushf
ljmp
and
ljmp
jg
outsl
xorb
out
rcll
lret
loopne
adc
add
xor
and
push
imul
dec
pusha
jne
stos
cmpb
lock
loopne
adc
and
pop
inc
xor
pusha
imul
mov
mov
jl
jo
mov
push
lcall
icebp
jo
xor
xor
nop
inc
sub
in
jle
lock
mov
movsb
in
jg
jmp
aas
movsb
clc
inc
sbb
aas
push
inc
jmp
xchg
cmp
adc
stos
out
pop
outsb
sbb
pop
jae
movsl
sbb
sub
cmp
bswap
sbb
insb
dec
nop
mov
subb
pop
mov
dec
lcall
ljmp
divb
jp
mov
clc
mov
in
loopne
mov
out
jne
pop
push
call
jle
lret
mov
mov
outsl
clc
push
jmp
pop
sub
mov
dec
cmpsl
add
xor
sbb
inc
jnp
dec
pusha
leave
nop
stos
adcb
mov
adc
sub
outsb
ja
into
and
sbb
call
clc
movsb
lods
mov
insl
inc
jge
js
ja
cmp
jo
sbb
lret
enter
fwait
movsb
mov
mov
pop
fistl
add
daa
inc
jnp
dec
pusha
pop
nop
stos
cmpb
jmp
sti
lock
loopne
adc
add
xor
and
push
imul
dec
pusha
pop
nop
stos
cmpb
jmp
sti
lock
loopne
adc
add
cmc
and
jb
loop
fs
fld
xor
std
psrlw
inc
dec
inc
scas
sbb
repz
stc
adc
mov
inc
mov
ds
leave
aad
inc
mov
call
push
xor
mov
ja
adc
insl
jp
ret
scas
xor
jge
in
push
imul
insl
dec
fs
add
cmp
ds
push
repz
clc
add
pop
hlt
push
xor
adc
aas
test
pop
inc
icebp
and
dec
mov
jl
and
lods
ret
notl
test
mov
sahf
xor
insb
pop
in
mov
cwtl
mov
jbe
dec
inc
loop
cmpsb
fstp
fisttpll
movsb
adc
and
jnp
stc
cli
push
mov
aam
or
shrl
mov
mov
xlat
dec
imul
ret
imul
frstor
pushf
lods
out
mov
cmp
pop
call
ljmp
into
mov
xor
inc
lahf
and
out
mov
jns
popf
push
fcmove
aas
and
movsb
gs
test
fsubrs
fcoms
aam
dec
js
xchg
jne
push
notl
pop
adc
xor
lock
adc
mov
jo
enter
mov
pop
adc
mov
dec
aam
pop
in
jb
enter
dec
loope
inc
push
insb
mov
sbb
sub
lcall
std
das
sar
pop
jmp
clc
call
mov
jo
xchg
clc
jne
xchg
shrl
cmp
out
in
sti
sbb
jp
inc
fistpl
jp
shrl
fcomi
mov
les
pop
std
ss
js
scas
aad
inc
lods
in
xchg
int3
fcos
enter
dec
aam
xchg
and
lds
hlt
jmp
inc
mov
xlat
ret
xlat
ret
stos
inc
xor
out
xor
jmp
push
loopne
jbe
push
loopne
cmp
pushf
lods
popf
roll
leave
mov
into
mov
cmp
ja
xchg
mov
mov
xchg
mov
cmp
jo
mov
jmp
jne
sub
ja
sbb
out
repnz
push
jnp
xor
subb
insb
dec
push
cmpsl
nop
mov
aas
std
mov
or
mov
enter
test
sub
or
jecxz
jp
mov
jo
mov
xor
mov
or
sahf
sbb
mov
sub
push
fs
mov
jnp
mov
dec
mov
sub
push
cmc
mov
inc
adcl
hlt
push
inc
gs
cltd
out
inc
imul
xor
leave
sub
jno
dec
xor
push
sahf
shll
decb
push
xchg
mov
push
mov
mov
call
gs
lea
xchg
sub
pop
fnstcw
xor
int
push
inc
mov
pushf
mov
jmp
addr16
mov
xchg
mov
in
add
or
push
sbb
popa
sbb
sti
inc
pop
lcall
ss
mov
pop
testb
pop
dec
shll
roll
ret
loop
adc
in
daa
lea
sbb
cmp
pusha
push
test
imul
ljmp
mov
lods
push
mov
dec
dec
xor
out
test
in
and
mov
or
mov
in
mov
fadds
pop
pop
xorl
ss
adc
pop
getsec
call
ficompl
and
adc
and
mov
loopne
inc
jp
xchg
xor
ret
les
test
js
loop
pop
lods
ljmp
add
inc
cmpsb
fldcw
lret
sub
popf
lods
subl
inc
loope
lods
ss
lds
adc
adc
push
and
and
pop
xchg
lock
inc
pop
sbb
mov
and
xor
and
or
dec
lret
je
nop
or
push
loop
lea
cmp
inc
jb
mov
lds
mov
xchg
xchg
fstpl
push
fs
out
fs
sub
popf
pusha
jle
mov
and
shr
mov
fucomp
mov
fstps
popa
or
rcr
outsb
jae
mov
add
mov
inc
add
mov
or
add
push
push
dec
jle
sub
dec
popa
aaa
fs
mov
lret
sbb
sub
imul
roll
push
sti
xchg
xlat
nop
adc
xchg
sub
test
pop
pop
jg
into
mov
jmp
ljmp
fldenv
add
adc
in
or
pop
inc
push
pop
xor
mov
in
mov
xorl
out
in
outsl
lahf
sbb
scas
lea
mov
in
sbb
mov
mov
sbb
mov
ss
pop
stos
xor
mov
xchg
cmp
adc
add
xchg
add
xchg
imul
fwait
push
xchg
sbb
sbb
jbe
pop
sti
js
pop
inc
jns
jge
xchg
roll
call
dec
fdiv
jno
jg
das
int3
aaa
stc
addr16
xchg
cmp
cmp
sub
lahf
andb
cmp
inc
inc
mov
mull
das
cld
inc
in
ds
aas
clc
rorb
xor
adc
jbe
scas
and
addr16
mov
jnp
stc
mov
test
xchg
push
cli
hlt
cwtl
push
pushf
sbb
je
cmp
hlt
dec
sbb
roll
add
fistps
fwait
ss
fmull
cmp
xor
mov
push
sub
aad
jg
out
mov
or
stos
movsl
pop
enter
lret
xchg
pushl
lods
es
jle
xchg
pop
or
call
hlt
sti
pop
rcll
xor
jo
xchg
xor
adc
pop
iret
xchg
ret
mov
stc
sahf
mov
mov
mov
push
or
std
adc
push
ret
sbb
jno
inc
and
sbb
push
xlat
sub
adc
xchg
ljmp
and
lret
sub
dec
dec
mov
xor
lea
cmp
stc
push
iret
lea
pop
or
push
je
mov
pusha
push
pop
popa
sti
inc
repnz
aaa
movsl
lock
sahf
scas
ficomps
push
lret
adc
pop
lock
int
shll
cli
inc
xlat
dec
scas
int
pop
mov
push
in
xchg
addr16
shrl
ret
inc
jmp
fld
and
mov
add
mov
sub
scas
cli
enter
loop
xchg
xchg
xchg
lods
int
pop
sub
or
iret
lods
int
add
dec
cmp
sbb
push
inc
fmull
or
xchg
jge
lock
jbe
ljmp
push
adc
mov
stos
fucomp
sbb
out
and
adc
pushf
in
icebp
push
lret
jo
xchg
xchg
mov
lret
dec
inc
repnz
push
mov
jno
nop
jno
inc
sbb
cmp
cmp
das
adcb
mov
in
adc
and
bound
xchg
sbb
les
in
aaa
sub
jno
mov
cmpl
dec
xchg
shrb
shl
cwtl
sahf
sub
add
add
sbb
xchg
lods
mov
daa
scas
scas
mov
xchg
and
and
pop
sbb
int3
in
aaa
add
sub
aaa
in
cmpsb
cmpsl
hlt
leave
les
mov
inc
outsb
iret
enter
pop
jno
xchg
lods
cmpsb
cmp
cs
mov
scas
xor
and
rorl
pop
test
or
and
out
mov
jg
decb
sarl
and
lea
sub
lcall
cmp
mov
outsb
dec
fdivl
mov
out
cmp
daa
pop
sbb
inc
mov
add
int
adc
lcall
xchg
xchg
dec
daa
sahf
pop
xchg
sbb
pop
cli
leave
and
in
pop
add
lahf
push
ljmp
xchg
fcmovnbe
jae
test
inc
and
fcomps
add
push
imul
sbb
adc
mov
fwait
ljmp
and
mov
inc
sbb
add
xor
xchg
mov
bound
es
int3
movsb
rcll
test
xchg
and
or
push
pushf
pop
pushf
xor
or
mov
pop
aaa
adc
lock
xor
into
outsl
pushl
mov
mov
test
ja
daa
cmp
cwtl
sbb
and
jo
in
out
push
repz
popf
push
lahf
mov
sbb
pop
mov
jmp
pusha
push
repz
mov
xchg
rclb
into
jl
inc
lods
inc
lock
mov
jns
mov
lea
add
movsl
stc
lds
stc
cs
dec
or
scas
ret
push
or
lcall
adc
push
sbb
cli
and
in
out
ljmp
mov
cmp
xchg
clc
fcomps
fcomp
inc
add
mov
cmp
xor
fisttpl
fistpll
addr16
mov
stos
pop
fldlg2
xor
mov
dec
cmp
add
outsw
adc
js
sub
stos
je
fistpl
xchg
cltd
xor
data16
or
push
push
js
icebp
xchg
pushf
sbb
int3
or
dec
jecxz
lahf
pushf
ret
jnp
imul
jl
lahf
icebp
xchg
mov
or
xorl
enter
ja
adc
pop
ds
adc
in
std
rcrl
xor
out
jle
aad
notb
jl
sub
ljmp
js
xor
scas
call
pop
daa
test
cmpsl
and
jae
mov
mov
adc
xchg
add
test
fdivrs
outsl
lahf
dec
adc
stc
inc
or
popa
data16
shl
lods
filds
dec
or
repz
push
decb
loope
cltd
or
incl
mov
xchg
or
add
sahf
iret
add
sbb
inc
xor
dec
jg
out
xorl
xchg
or
out
cs
aam
cmp
icebp
dec
jae
mov
jnp
mov
mov
mov
jecxz
imull
test
stos
cmp
adc
sbb
xchg
fimuls
ds
or
add
das
pop
rorb
out
mov
mov
rcrl
bound
mov
int3
movsb
mov
cs
cmp
imul
bound
or
add
and
test
cli
into
push
inc
cwtl
cmp
vpor
sub
mov
inc
cmpsb
cmc
pop
cmp
dec
inc
dec
inc
shll
xor
loope
adc
fsubrl
aaa
ljmp
es
mov
rdtsc
jns
sub
and
inc
je
stos
add
mov
lods
jae
fistpl
js
jmp
push
shrl
xor
test
not
jo
sub
mov
je
call
jl
repz
sahf
mov
mov
xor
mov
lcall
jge
sti
adcb
and
dec
sub
sbb
dec
sbb
push
imul
xor
push
stc
and
add
lret
mov
sbb
xchg
cmp
rcr
inc
lds
lods
mov
lret
mov
xchg
mov
sub
repz
xchg
mov
lods
testb
adc
out
ret
push
mov
es
add
jns
pushf
cmc
and
scas
test
js
add
pop
push
lcall
xchg
ret
pusha
cwtl
xchg
mov
pop
or
mov
jb
sbb
xchg
mov
test
aas
or
in
nop
lds
sbb
ret
hlt
ret
xor
rcll
adc
stos
mov
daa
jge
stos
adc
repz
cmovl
jno
lods
addr16
subl
testl
xor
xor
dec
pop
or
add
mov
sub
mov
mov
insl
mov
call
jb
subb
mov
fstpl
insb
popa
addr16
imul
mov
mov
arpl
nop
ljmp
mov
add
arpl
and
imul
mov
das
lret
mov
add
adc
stos
fldcw
sub
xor
test
lds
jg
sbb
jo
pop
in
dec
in
dec
fsubr
push
mov
in
xlat
push
cmp
sub
int
out
dec
cmpsl
add
dec
push
lahf
sub
gs
mov
fcomp
mov
inc
aam
ja
insl
mov
sub
xchg
mov
inc
mov
les
mov
and
push
shlb
adc
or
lock
fildl
mov
mov
jle
cmp
cmp
addr16
cmp
xchg
lahf
loop
add
in
sbb
in
cld
out
xor
shll
push
sub
stc
dec
pop
ret
sbb
ss
mov
and
dec
push
and
mov
je
shrb
cmpl
dec
sub
std
fisubrl
leave
jecxz
stc
mov
shlb
jo
cmp
out
adc
inc
out
mov
sbb
iret
xor
sbbl
in
cltd
pushf
sbb
mov
adc
fwait
pop
sub
xchg
sbb
sub
aad
or
xchg
enter
mov
adc
inc
adc
aas
xor
rcr
sbb
repz
pop
mov
pop
and
out
scas
pop
dec
sbb
inc
into
add
scas
mov
pop
cmp
outsl
sbb
dec
notl
mov
sbb
in
xor
jno
into
dec
aad
push
xor
lock
fs
movsb
sbb
add
adc
cmp
dec
sbb
add
push
repnz
push
cmpsb
idivl
imul
inc
popa
pusha
jae
push
cmp
jne
into
andb
repz
fs
and
scas
push
push
data16
jle
shrb
push
std
fs
push
mov
pop
das
hlt
mov
mov
sti
adc
mov
mov
and
cmp
sbb
cmc
cmp
mov
scas
adc
push
cmpsl
mov
stos
sbb
cwtl
jp
mov
mov
inc
pop
dec
ficompl
stos
inc
xor
jno
pop
sbb
iret
dec
int
je
dec
testl
sbb
hlt
pop
sti
movsl
xchg
xchg
stc
daa
pushf
cmpsb
test
xchg
mov
repz
lret
frstor
cmp
mov
pop
aam
dec
int
stos
fldl
cmp
fsts
or
cmpsb
or
hlt
pop
mov
dec
cwtl
mov
mov
cmp
lret
jo
cmp
movsb
jge
cmp
adc
loopne
adc
adc
cmp
stos
fcoms
mov
insb
das
or
out
test
js
adc
stc
push
les
pop
and
cs
outsb
mov
jb
scas
push
paddw
lret
sbb
add
mov
push
insb
mov
push
fidivrl
add
sarl
pop
pop
divl
mov
xchg
mov
fsubrs
popf
mov
cmp
push
imul
cmpsb
lret
or
and
in
mov
gs
jno
dec
mov
cmp
leave
push
pop
fwait
mov
shlb
in
out
xchg
sub
mov
xlat
add
lock
ja
jb
push
loopne
inc
outsl
adc
scas
loopne
loopne
aam
mov
push
xchg
xchg
ljmp
mov
popf
add
mov
mov
adc
shlb
sbb
mov
cltd
push
or
clc
loopne
pop
ss
xchg
icebp
popf
subl
shrl
andl
or
outsl
imul
cmp
mov
cwtl
and
cmp
imul
stos
mov
clc
sub
dec
jne
das
cmp
mov
in
inc
repz
imul
mov
xor
imul
push
cmp
lods
adc
mov
lcall
mov
inc
leave
adc
pop
mov
ljmp
mov
sahf
mov
push
scas
mov
adc
in
inc
icebp
xchg
sbb
in
dec
pop
pop
sarl
cmp
jo
mov
sub
sub
clc
fidivrs
repz
rcr
jno
xchg
movsb
pop
pop
jns
cld
fs
outsb
iret
lret
push
and
cmp
jae
adc
ds
pop
scas
sbb
inc
pop
xchg
sub
inc
subl
dec
sti
add
std
roll
data16
add
dec
mov
aad
or
scas
sbb
lock
jmp
sbb
addr16
cmpsb
inc
add
xchg
pop
mov
or
lahf
mov
inc
mov
jle
lock
inc
mov
aas
data16
addr16
inc
je
gs
shll
adc
add
sub
mov
mov
cmpl
push
mov
jnp
sarb
aam
int3
test
mov
mov
fisttps
jl
js
mov
mov
rol
xchg
xor
add
insb
dec
in
mov
mov
add
andb
lds
dec
lods
lods
adc
nop
push
mov
iret
push
stc
sub
jecxz
aas
sahf
sub
sbbl
inc
fdivr
sbb
popf
shl
sub
dec
je
nop
es
aaa
mov
xor
fdiv
sub
and
cmp
lahf
es
lods
push
xchg
mov
cmp
ljmp
ret
adc
out
ljmp
ds
pop
pop
in
pop
sbb
xor
test
mov
pop
in
inc
int3
mulb
sahf
fcomp
call
xchg
inc
xchg
add
mov
and
mov
cmc
cltd
icebp
arpl
pushf
add
mov
push
mov
add
cmc
jmp
test
loop
push
xchg
aad
adcl
push
lods
pop
pop
jp
push
jbe
xlat
cmp
imul
inc
fiaddl
in
xchg
and
mov
sub
std
xchg
xor
sub
imul
cmp
pusha
add
adc
lds
mov
daa
out
mov
adc
add
incl
outsl
ja
cltd
xchg
or
jae
leave
in
mov
addb
adc
in
test
test
je
jns
and
call
jle
fcoml
dec
add
outsl
or
fcmovb
sub
mov
mov
int3
or
mov
xchg
mov
inc
push
pop
aam
out
dec
out
les
mov
sar
js
sbb
mov
push
mov
adc
daa
dec
or
rcll
xchg
dec
adc
xor
cwtl
cld
pmuludq
mov
in
sbb
xor
adc
jge
outsb
jns
xor
pop
pop
dec
movsb
add
or
xchg
and
inc
inc
and
pop
jg
mov
inc
and
pop
cmp
movsb
pop
out
mov
cmp
sbb
jl
test
ja
jle
in
rcr
ljmp
jb
sub
mov
add
jo
mov
cmp
adc
cs
lcall
fmull
bound
lret
testb
sbb
pop
cld
or
dec
in
mov
cltd
inc
icebp
mov
daa
cmp
negl
insb
lcall
scas
loope
mov
push
cmp
fistl
int3
dec
mov
cmp
scas
pop
dec
dec
call
leave
push
insb
insl
cltd
add
dec
and
into
fs
sub
and
fisttps
scas
in
jg
inc
xchg
sub
lods
pop
lcall
lret
and
fcompl
loope
mov
xchg
xlat
pusha
je
outsb
jb
in
mov
imul
mov
adc
xor
aaa
mov
lahf
call
ret
cmp
mov
xchg
mov
subb
call
adc
push
loope
iret
stos
xchg
cmp
gs
lods
into
daa
jae
int3
adc
inc
inc
inc
mov
roll
jo
aad
add
inc
lret
test
xor
inc
jnp
mov
insl
shr
popf
aas
in
test
fldl
pop
cmp
loop
shlb
aas
adc
and
lods
mov
rcr
loope
add
imul
jp
mov
xchg
popf
loope
push
and
les
jmp
test
add
cmp
out
aas
pop
cli
xchg
dec
testl
push
insl
or
jbe
stc
mov
addr16
bound
cmpsb
push
fisubrs
pop
outsl
in
xlat
stos
xchg
aad
movsb
cli
addr16
es
inc
shl
dec
repnz
xchg
movb
adc
mov
xchg
loope
cmp
and
push
imul
dec
pusha
pop
nop
stos
cmpb
jmp
sti
lock
loopne
adc
add
xor
and
push
imul
dec
pusha
pop
nop
stos
cmpb
jmp
sti
lock
loopne
adc
add
push
imul
dec
pusha
pop
nop
stos
cmpb
out
sar
ret
adc
add
xor
and
imul
lret
pusha
fwait
nop
push
adcb
mov
orl
pop
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stc
int
nop
cmpsl
std
xor
and
es
push
add
pop
add
add
add
pop
add
mov
out
add
imul
push
add
add
pop
add
push
add
add
lret
add
cmp
or
push
add
add
in
add
add
add
ss
add
add
add
add
add
xor
lods
add
dec
add
add
add
add
add
in
add
add
scas
add
cmpsl
add
addl
test
in
add
add
add
add
add
filds
addb
add
add
add
add
pop
add
add
addb
add
add
add
add
add
add
mov
pusha
add
push
add
add
insb
add
add
add
mov
dec
add
add
push
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
lret
add
add
push
add
pop
add
add
pop
add
add
add
add
addl
mov
push
add
in
add
sti
add
add
mov
ret
add
add
add
adc
sahf
add
add
add
jo
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
addb
add
imul
sti
add
add
add
add
ret
add
mov
cmp
push
add
popa
add
dec
add
add
add
pop
add
add
add
add
add
movsl
add
add
mov
les
scas
add
ret
add
add
mov
add
add
js
inc
add
add
add
add
add
scas
add
pop
add
fldl
dec
add
add
fldl
sti
add
add
add
in
add
add
add
add
sbb
sub
scas
add
or
inc
add
add
add
add
add
sti
add
add
jo
lret
add
mov
cmp
adc
js
push
add
add
add
add
add
add
add
add
push
add
add
add
leave
add
add
add
add
ret
add
adc
add
add
add
add
pop
add
adc
mov
addb
add
add
add
add
add
and
add
add
add
adc
insb
add
add
mov
add
leave
add
sbb
mov
faddl
adc
sti
add
leave
add
scas
add
add
add
add
add
add
lret
add
add
cmp
adc
xor
push
add
cmp
daa
add
xor
popa
add
add
add
int3
add
sbb
add
out
add
add
fldl
dec
add
mov
or
in
add
add
add
pop
add
xor
pop
add
add
add
add
add
nop
add
add
add
mov
sbb
or
lret
add
xor
cmpsl
add
add
add
xchg
mov
add
add
mov
jp
in
inc
stc
mov
daa
mov
inc
cmp
xchg
fadds
sub
lods
lds
in
ja
cmp
mov
dec
adcb
add
dec
and
jae
icebp
mov
in
xchg
lods
pop
cmp
lock
inc
adc
and
sbb
sbb
jecxz
mov
xor
stos
aam
push
sub
sahf
pop
les
cwtl
stc
sub
dec
adc
imulb
mov
pop
adc
add
jne
cltd
dec
out
iret
or
sahf
cmc
ret
fdivl
les
divb
adc
lret
jmp
arpl
pushf
add
push
mov
push
ror
and
repz
cmpsb
in
leave
push
fisttpll
int
aaa
mov
rcrl
xor
cmp
jmp
sub
hlt
xor
jbe
daa
cmp
pushf
jl
lahf
lret
mov
sbb
mov
addb
aas
stc
mov
push
mov
inc
or
leave
mov
inc
and
into
add
inc
cmp
xlat
imul
mov
xor
mov
int
xor
pushf
adc
lock
jl
cmp
idiv
ret
mov
loop
int3
incb
call
and
sbb
inc
xchg
enter
add
pop
insb
cs
xor
pop
in
sbb
call
movsl
mov
clc
std
sub
push
lock
jne
roll
lret
sahf
into
fidivs
pop
subl
adc
jg
pop
xchg
js
add
in
push
lds
cli
das
sbb
or
insl
jle
inc
pop
cmc
and
and
xor
scas
mov
add
das
pop
shl
fadds
dec
mov
subb
adc
fwait
lret
clc
mov
sub
and
pop
sbb
out
inc
test
lods
sub
push
sbb
aas
stc
add
aad
lea
cmp
movsl
call
lds
dec
xorl
out
mov
pop
xor
mov
fnstenv
sbb
push
adc
push
pop
shl
cmc
lcall
js,pt
pop
fcomps
ret
cwtl
push
mov
cmc
test
xchg
and
shlb
push
sub
push
push
test
addr16
and
lret
jmp
fistl
aas
daa
shlb
pop
sbb
cmp
cmpsl
inc
xchg
jo
rorl
mov
leave
push
addr16
sti
xor
outsl
mov
fiadds
jae
negb
mov
ljmp
xchg
imulb
orb
sbb
jle
inc
lods
sarb
adc
mov
outsb
stc
jo
stc
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
