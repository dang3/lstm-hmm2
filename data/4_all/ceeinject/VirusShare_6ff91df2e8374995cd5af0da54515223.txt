call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
sub
cmp
dec
sub
lods
cwtl
popf
test
mov
fucomp
int
cmp
sub
pop
pop
push
lods
cwtl
jmp
movsb
in
fcomp
call
sub
cmp
insl
pop
pop
push
lods
mov
xchg
pushf
mov
je
sub
cmp
jecxz
repz
ja
push
popa
faddp
jbe
std
enter
cmpsl
mov
xchg
nop
call
dec
jmp
jb
cld
andl
or
add
clc
adc
call
cmpsb
adc
and
fsubs
fwait
mov
adc
pop
frstor
insl
or
cmp
add
mov
ja
adc
stos
pop
add
test
fucom
iret
stc
ret
dec
ja
xor
rcrl
pop
lods
ja
aam
push
add
jo
out
fdivrs
lea
js
dec
lods
nop
mov
cltd
lret
gs
enter
in
mov
call
sub
cmp
insl
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
jnp
inc
pop
js
push
xor
cs
cld
icebp
test
int3
cwtl
mov
ds
pop
jge
dec
push
adc
add
fadd
scas
loope
sti
enter
mov
xchg
push
dec
dec
push
je
or
jge
insl
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
cmp
sub
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
cmp
lds
cli
cmpsl
cmp
mov
out
cmp
popa
fiaddl
psubsb
fnsave
pop
sbb
push
and
sbb
cmpsb
adc
or
or
es
pop
pop
jecxz
push
daa
push
jp
push
or
sti
cmpsb
adc
mov
call
mov
pushf
mov
int3
jo
imul
pop
add
aas
xchg
orb
dec
test
insb
das
sub
enter
lcall
lds
mov
fists
push
ja
mov
mov
int
fldcw
lret
jle
cmp
sbbb
fcmovne
inc
jp
mov
or
shrl
or
aam
pusha
xchg
mov
jle
sub
xor
pusha
jae
dec
xchg
xlat
or
or
add
imul
mov
in
dec
xor
adc
lea
mov
jl
into
mov
sbb
icebp
adc
mov
jbe
pop
aas
inc
pusha
fsts
push
xchg
hlt
mov
push
xchg
adc
andb
insl
jg
jbe
rdpmc
imul
xlat
stos
cltd
jns
sub
fcoms
shlb
jl
je
arpl
outsb
cmpsl
inc
rcr
loop
ja
sar
inc
inc
cmp
divl
movsb
jno
jmp
mov
rolb
jl
mov
pop
movsb
cmpsb
repnz
pop
cmp
push
push
jl
outsb
push
out
lahf
iret
pop
out
dec
push
hlt
mov
push
mov
outsl
movsb
sub
push
orl
sub
imulb
push
pop
lret
push
xor
add
in
data16
mov
aam
push
jmp
fisttpll
std
add
testl
sti
push
push
or
int3
notb
cld
inc
loopne
dec
test
mov
shll
dec
push
repz
jo
dec
mov
jecxz
stos
jl
mov
repz
mov
lcall
and
jbe
inc
mov
sti
inc
ljmp
dec
shlb
mov
testb
sbbb
mov
je
outsl
ss
push
sub
sbb
dec
add
clc
test
test
pop
jecxz
jmp
mov
lods
dec
adc
mov
dec
fisubrl
mov
xor
inc
mov
fwait
pop
lods
xor
insl
movsb
pushf
push
int3
leave
loope
rcrb
cli
bound
lods
flds
or
call
pushf
or
dec
aaa
scas
dec
int3
insb
out
das
or
into
sub
repnz
dec
lret
ljmp
and
pop
andl
dec
sti
les
add
or
pop
mov
jns
pop
sbb
scas
int3
punpckhbw
mov
push
and
dec
jle
in
cmc
das
push
sbb
xchg
repnz
xor
add
push
xor
into
mov
push
push
pop
xor
in
push
adc
call
aad
mov
mov
cmp
jo
adc
xor
nop
scas
jnp
cmp
popf
mov
pop
cmpb
imul
outsb
leave
pushf
pop
mov
cmpsl
test
test
fmul
fists
cli
mov
pop
push
lods
into
filds
inc
lea
mov
push
push
dec
enter
lods
out
xchg
and
mov
cmp
loope
fstps
ss
lahf
loope
aas
pop
repz
jns
mov
inc
push
rcl
and
aam
fadd
stos
sbb
rclb
inc
js
inc
stc
push
mov
and
jp
xchg
push
dec
sar
cmp
xchg
es
push
adc
dec
or
scas
jg
lea
test
enter
xchg
nop
adc
push
test
fldcw
loope
lcall
aas
pop
and
and
pop
imul
and
f2xm1
dec
shrb
in
pop
adc
push
ret
mov
cmp
push
jne
aad
cltd
in
sbb
in
push
pop
jle
arpl
push
cwtl
push
dec
les
stos
sbb
loopne
mov
insb
dec
jmp
xchg
adc
pop
rdpmc
cmpsl
sbb
setge
cmp
dec
dec
dec
mov
push
pop
cs
cmp
test
cmp
mov
lcall
std
sarb
push
sti
cmp
loop
cmp
popa
fs
adc
sti
xlat
jbe
pop
pusha
cwtl
inc
sub
jg
out
aas
jg
adc
into
imul
ss
jno
fadds
cld
jecxz
enter
repnz
mov
jle
call
and
cmp
lock
adc
add
jns
loop
mov
dec
rcll
sbb
or
add
mov
pushf
mov
scas
push
jg
fsubrs
xchg
and
mov
xor
sbb
mov
cmp
enter
fmuls
fadds
mov
icebp
out
fistpl
lods
xchg
mov
jp
aas
pop
in
pop
and
push
popf
push
fiadds
adc
and
enter
mov
insb
and
pop
in
jp
movsb
mov
mov
out
mov
mov
mov
popf
movsl
sub
rcr
fs
out
mov
mov
mov
cmp
pop
insb
pop
sbb
inc
imul
outsl
ljmp
mov
sub
push
addr16
or
and
stos
push
and
out
test
pop
inc
pushf
lahf
jbe
imul
cmpsb
mov
push
xor
or
push
sub
fisttps
xchg
adc
cmp
rol
sbbl
mov
leave
pop
mov
xchg
jo
fstpl
fidivs
push
mov
lret
test
sbb
iret
mov
pop
xor
inc
nop
ss
push
mov
jl
cld
das
es
fstps
cli
fildl
sbb
xor
insl
push
fsubrl
push
das
xchg
pop
lahf
out
sar
push
jp
pop
shlb
ret
clc
fwait
mov
sub
fistpll
mov
mov
cltd
fisttpll
arpl
cmp
or
mov
adc
pop
inc
sti
adcb
push
iret
leave
cld
mov
in
aaa
aam
in
negl
mov
pusha
add
pop
dec
aaa
add
sub
dec
sbb
inc
push
sarb
xor
test
jle
mov
bound
jl
cmp
inc
mov
jg
push
lock
xchg
mov
inc
fisubl
ss
mov
add
in
jae
into
subl
lods
add
mov
xlat
shll
movsb
push
sbb
lods
decl
inc
stos
ja
sbb
aas
lret
dec
rclb
jnp
shrb
sbb
pop
inc
push
and
scas
fiaddl
mov
pop
ja
das
test
in
lock
int
hlt
jmp
sub
les
shrb
aas
push
dec
jp
js
mov
mov
call
mov
cli
in
add
mov
popf
iret
jne
xchg
xlat
ljmp
jp
mov
jne
out
repz
sbbl
push
mov
push
cmp
mov
fisubrs
add
aaa
test
sub
pop
stos
adc
jne
mov
ficoms
or
lock
sbb
dec
xchg
lods
or
pop
mov
mov
xchg
xchg
iret
jmp
or
lock
dec
mov
cmp
pop
and
fwait
subl
ss
in
imul
movsb
in
int
jnp
xchg
js
sub
and
mov
pop
xor
dec
sbb
insl
jb
xor
add
outsb
mov
mov
out
mov
dec
cld
and
adc
ja
xchg
mov
xchg
leave
sbb
jno
out
arpl
jmp
sub
es
xchg
arpl
int3
push
or
cmp
cmp
xchg
js
jae
js
pop
add
jnp
inc
test
mov
push
inc
mov
call
ds
orl
lods
dec
add
cmc
popa
push
lea
jae
push
pushf
icebp
pushf
jb
ja
movsl
cmp
rolb
push
cmp
inc
sub
in
roll
bound
jne
mov
xchg
jge
dec
mov
or
add
inc
ss
mov
je
div
pop
insl
loope
push
inc
or
lods
lcall
in
in
mov
cs
xlat
pop
add
mov
test
mov
fimuls
stos
lret
inc
cmp
xchg
and
lods
xchg
cmpsb
jg
aaa
mov
xchg
out
fs
hlt
mov
sbb
or
cmpsl
pop
mov
dec
mov
add
and
xor
sbb
jmp
lahf
mov
mov
sbb
loopne,pn
inc
fadd
pusha
lea
cmp
add
lret
in
jns
ja
fcoml
loop
sbb
daa
xchg
mov
sub
add
out
adc
ja
push
in
insl
or
push
mov
xchg
jmp
cltd
cmp
cmp
fistps
adc
out
inc
shll
mov
cli
mov
js
out
mov
cli
jl
add
ljmp
or
push
ret
pushf
sarl
jp
in
stc
mov
mov
ss
iret
jl
pusha
xchg
sub
data16
jae
adc
in
push
inc
mov
into
and
adc
roll
mov
iret
ljmp
mov
daa
insb
cltd
sahf
gs
push
sub
cltd
pop
mov
mov
pop
dec
sbb
push
aaa
jge
push
adc
leave
cmpsl
push
cmpsl
hlt
xchg
sub
loopne
out
std
loope
or
cmc
add
ljmp
popa
mov
pop
sbb
bound
xchg
sub
sub
push
rcr
sahf
mov
mov
in
cmp
outsb
leave
mov
dec
fbstp
or
dec
stos
mov
aas
cmp
sarb
mov
jo
mov
outsl
cmp
pusha
lods
inc
xchg
out
pop
dec
push
add
inc
adc
hlt
adc
je
inc
inc
cli
clc
or
add
rcll
sbb
cld
push
cs
push
fsubrs
pop
pop
adc
sub
addr16
fsubrp
sbbb
fwait
pusha
icebp
fwait
or
lahf
aad
sbb
in
inc
mov
ja
xorb
stos
cmc
inc
add
mov
enter
outsb
int
fprem1
aad
xor
dec
test
cltd
pop
test
das
xor
fdivrs
mov
push
int3
push
push
mov
jmp
jp
mov
and
jno
sbb
xchg
add
cmp
cmp
push
pusha
call
mov
pusha
mov
aaa
jns
outsb
push
cmp
aad
mov
mov
test
das
shrl
scas
lods
cmc
and
call
out
and
nop
adc
cli
jbe
and
dec
sub
mov
xchg
add
in
jmp
imul
std
xor
loopne
jg
pusha
and
insb
das
add
cltd
xchg
add
ja
int
cmp
jo
call
es
in
mov
and
fsub
mov
sbb
stc
and
xchg
xchg
xchg
test
cmp
add
in
stos
cld
add
fcmovnb
pop
adc
mull
add
sub
cmpsb
mov
popf
pushf
mov
pop
hlt
pop
ret
sub
inc
fldt
add
insb
aaa
jmp
push
gs
mov
cmp
aad
sbb
lahf
xor
sbb
or
ret
add
fiadds
cld
fsubr
mov
ljmp
sub
aam
leave
icebp
cmp
sbb
push
adc
mov
insl
or
inc
sahf
arpl
movsl
and
sbb
std
xor
sahf
sbbl
jge
and
data16
rcrb
mov
push
cwtl
xor
stos
mov
setno
adc
and
out
mov
dec
jle
out
mov
scas
js
daa
push
or
sub
mov
insb
int3
jno
in
add
imul
dec
or
add
cltd
xor
hlt
out
xor
dec
cmc
sbb
out
cwtl
out
sub
imul
push
cmp
sub
inc
repz
lods
jns
xchg
mov
lcall
nop
inc
mov
push
loop
daa
and
pop
adc
inc
enter
shlb
icebp
push
in
mov
psubd
bound
adc
cmp
inc
jo
xor
rcll
push
shll
loope
mov
leave
mov
fbld
push
ret
push
cmc
insb
or
inc
das
inc
xchg
inc
cmp
mov
mov
inc
dec
adc
inc
and
enter
imul
hlt
fs
add
out
popa
mov
sarb
lods
lahf
sbb
xor
leave
or
jl
mov
movsl
dec
cltd
inc
cwtl
inc
adc
and
ljmp
dec
push
scas
imul
mov
xchg
and
sub
imul
lret
movsb
and
sub
outsl
les
mov
pop
out
and
pushf
sub
xor
fiadds
inc
inc
inc
cli
dec
daa
dec
cs
xor
lods
mov
cli
out
jmp
sbb
xchg
adcb
rclb
pop
push
mov
fistpl
popa
mov
push
and
repnz
xor
dec
push
insb
lret
xchg
xchg
cli
xlat
xor
xchg
adc
inc
cmp
xor
movsb
and
mov
inc
test
dec
test
loope
push
ret
int
inc
push
loopne
aaa
clc
fldl
test
pop
mov
and
lock
xor
out
mov
test
stos
sbb
mov
lcall
pop
cmp
dec
icebp
jb
push
xchg
std
loopne
repz
push
push
fisttps
out
loop
out
mov
mov
mov
frstor
push
fisubl
pop
es
mov
movb
mov
fldenv
roll
lods
mov
clc
adc
fdivrl
je
inc
into
rclb
dec
lret
mov
xor
dec
rol
mov
test
mov
pusha
or
push
and
out
jno
xchg
xchg
inc
popf
lcall
rcrb
and
push
popf
push
sub
fiaddl
mov
fstpl
mov
cmp
imul
call
out
adc
mov
and
sbb
add
and
jb
mov
inc
mov
sahf
mov
xor
xchg
jecxz
dec
sti
bound
loop
nop
xchg
leave
xor
call
pop
mov
cli
sbb
dec
aad
push
stos
xchg
push
xchg
movsl
mov
enter
cmp
icebp
jae
dec
and
fnstenv
xor
mov
cmp
into
mov
lods
cmpsl
loop
jle
bound
fsubs
jo
push
jge
rclb
mov
dec
imul
mov
not
pop
shrb
fisttps
scas
mov
mov
daa
dec
pop
std
js
xchg
push
aas
outsb
es
lret
and
lds
outsb
sbb
iret
push
pushf
push
push
inc
sbb
lock
addl
push
and
sahf
pop
lret
inc
lods
cmp
lea
mov
out
mov
or
add
in
sbb
cld
cmp
and
push
xchg
rcr
add
fucomi
sub
lret
fwait
mov
mull
mov
xorb
mov
int3
dec
lahf
xchg
mov
es
inc
push
push
int
jno
push
mov
or
shrb
sbb
popa
add
pop
fnstsw
clc
jb
xor
pushf
pop
jecxz
mov
dec
inc
in
arpl
dec
xor
pop
mov
cmpsb
xor
je
or
scas
xor
inc
mov
jo
and
lods
fsubrl
test
cmp
jbe
in
pop
aam
push
out
push
leave
xor
mov
push
loopne
je
lds
xor
and
ja
aas
push
int3
xchg
jno
pop
sbb
sbb
jmp
setbe
sahf
mov
sbb
outsb
jae
scas
outsl
mov
dec
loopne
pop
adc
push
push
push
cmp
xor
leave
jno
xchg
jp
loopne
cld
int
xchg
das
outsl
xchg
sahf
mov
int
lea
and
mov
adc
jge
shll
cmp
inc
out
das
mov
popa
mov
inc
sub
adc
lods
dec
fcompl
mov
or
ret
inc
int
scas
pop
aaa
stos
repnz
in
xchg
loope
pop
pop
and
nop
test
addl
ss
out
addr16
out
std
and
pop
and
jp
loope
icebp
fwait
shr
jb
push
jge
sahf
inc
pop
mov
test
cmp
les
push
call
push
mov
aam
jle
dec
dec
mov
in
in
mov
fnstcw
fildll
jns
pop
repz
ds
cmp
fistl
inc
pop
std
lea
mov
lock
mov
sar
divl
sti
into
lret
mov
out
shrb
and
mov
fsubl
xchg
inc
or
mov
jmp
fsubs
scas
and
out
test
jns
pop
out
or
pop
sbb
insb
cwtl
push
add
loop
bound
xchg
add
shlb
inc
fisubl
icebp
fstl
stc
push
fldt
in
leave
mul
cmpsb
aaa
imul
and
adc
neg
cwtl
aam
int
mov
push
push
cmp
sbb
ss
rorl
rolb
inc
adc
rcr
dec
jae
lods
xorl
dec
xchg
inc
test
repnz
clc
mov
in
mov
shrl
loop
add
xchg
stos
test
mull
movl
inc
js
sarl
test
dec
arpl
fildl
icebp
mov
lods
pop
sbb
pop
negl
es
push
mov
pop
mov
and
stc
pop
or
add
mov
push
dec
inc
cmc
jbe
lcall
mov
insl
mov
add
mov
jl
or
mov
gs
fwait
aaa
mov
cmp
cmc
push
push
push
xor
imul
jns
and
sbb
test
dec
mov
outsb
xchg
xchg
xlat
inc
call
pusha
lahf
or
pop
inc
cli
pop
push
call
mov
movsl
sbb
fsubrs
jecxz
jno
popf
scas
mov
sbb
inc
sub
pop
in
sbb
pop
jo
test
aad
ljmp
jmp
jne
je
loop
out
fisttps
jg
nop
mov
sub
in
adc
mov
movsb
sbb
dec
xchg
inc
and
mov
mov
add
mov
mov
aaa
jno
insl
pop
xor
pop
loope
add
in
ds
cmp
and
std
push
cmp
lods
push
jne
cwtl
outsl
lcall
add
jle
mov
in
ds
shl
or
jle
push
jbe
movsb
pop
add
cmpsb
pop
fsubrl
mov
pusha
adc
cmp
pop
cmp
jp
das
xchg
cli
sub
xor
adc
cmp
popa
imul
lret
test
ret
push
cmp
push
add
xchg
or
xor
jns
inc
adc
or
xchg
js
in
jl
xchg
bound
pop
icebp
cmp
xchg
add
mov
jmp
push
or
push
fsubrs
outsl
enter
icebp
bound
dec
mov
cltd
mov
inc
int3
jle
push
cmpsl
dec
mov
fmull
call
test
inc
pop
jmp
lods
in
sbb
sbb
stos
sbb
flds
in
ret
aam
sbb
mov
repz
mov
fnstenv
inc
cwtl
dec
sub
adc
popf
ja
imul
and
aam
pop
cwtl
inc
inc
mov
jecxz
mov
cmp
ljmp
ret
mov
lret
int
outsb
sbb
mov
mov
in
dec
imul
push
adc
jae
bound
jbe
dec
xchg
dec
jle
adc
outsl
outsl
jno
cmp
lds
dec
test
loope
mov
aaa
inc
das
fistl
pop
adc
loop
xlat
shrw
pop
popf
in
add
and
sub
xchg
mov
xchg
lods
mov
idivl
fldl
repz
ljmp
mov
pop
xor
dec
mov
xchg
inc
xor
jb
shlb
jp
aam
mov
mov
add
mov
fidivrl
ljmp
imul
adc
flds
cmp
loope
enter
loopne
lret
pop
inc
inc
mov
lret
mov
dec
insb
jl
jo
pop
repz
popf
cli
jno
imul
and
lahf
fdivs
and
movsl
arpl
xchg
add
sarl
scas
loope
dec
xor
scas
mov
lret
or
mov
xchg
fwait
pop
mov
or
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
cmp
sub
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
cmp
sub
pop
pop
push
lods
cwtl
popf
test
mov
fucomp
int
cmp
sub
pop
pop
push
lods
xor
test
iret
mov
daa
and
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
lahf
xchg
insl
addr16
xchg
xchg
sub
sub
push
sub
aas
push
pop
inc
shlb
outsl
xchg
lahf
xchg
xlat
ffreep
fcomip
jmp
fwait
pop
adc
orps
daa
das
push
sub
outsl
xchg
xchg
mov
mov
mul
out
pop
pop
pop
sub
inc
inc
pop
xor
cmp
or
out
xchg
sti
enter
push
or
aam
xchg
lds
cmp
jbe
pop
cmpsl
rol
and
or
scas
enter
xchg
adc
clc
icebp
outsb
outsl
stos
shrb
lahf
xchg
adc
xchg
mov
push
dec
in
int3
xchg
mov
pop
push
punpcklwd
shr
cli
xchg
hlt
jg
sub
xchg
inc
dec
cld
xlat
fucomip
fists
mov
push
inc
icebp
ss
mov
adc
subb
sbb
in
mov
aas
pop
iret
mov
jg
jb
addr16
daa
xchg
add
das
pop
repnz
ljmp
and
paddd
mov
inc
shrb
jbe
imul
lahf
mov
cmpsl
scas
xlat
ffreep
iret
idiv
out
pop
pop
pop
pop
aaa
es
ss
inc
inc
push
ja
outsb
jecxz
ret
std
fcmovnu
jmp
scas
mov
orb
cmp
and
or
adc
add
test
ret
int3
out
shlb
lahf
fldl
push
dec
pop
inc
sub
daa
sbb
loope
test
ljmp
out
pop
pop
pop
getsec
aas
daa
das
push
pop
inc
dec
ja
outsl
xchg
lahf
xchg
xlat
ffreep
iret
idiv
out
pop
pop
pop
getsec
aas
daa
das
push
pop
inc
dec
ja
outsl
xchg
lahf
sbbb
int3
push
test
adc
add
jp
push
scas
adc
arpl
imul
clc
mov
addb
pop
mov
sub
aam
sbb
subl
sub
push
sti
pop
rol
movsb
bound
nop
adc
es
or
decb
movsb
dec
cmp
dec
pop
cmp
sbb
ljmp
and
xchg
sbb
push
sub
jg,pt
ret
ret
or
sarb
push
lods
not
adc
and
add
sahf
add
das
jne
lcall
ds
jnp
xchg
orb
les
inc
scas
movsl
cs
or
adc
add
xor
je
mov
jo
imul
xchg
pop
pop
pop
int
inc
or
test
repz
jg
mov
iret
jbe,pt
and
adc
daa
sub
adc
pop
ljmp
cld
movsb
mov
scas
lret
rorb
jecxz
int3
dec
mov
ds
inc
xchg
push
push
cltd
ficoms
ficomps
outsb
addr16
push
cld
push
or
das
ret
cmp
ja
in
loop
pop
pusha
nopl
aad
mov
leave
mov
ret
xchg
jbe
xor
inc
sub
sub
rorl
push
sbb
push
into
mov
inc
push
fsubrl
clc
pushf
hlt
jp
daa
mov
sub
lea
movsl
lret
loope
dec
xor
fisubrs
repz
xchg
dec
jo
sub
fwait
jae
jns
mov
pop
add
jno
and
dec
and
pop
or
sub
lret
fsubrs
sbb
xor
xchg
int
int3
imulb
push
jecxz
push
std
out
rorl
jmp
jne
pop
cmp
adc
mov
ret
aad
in
cmp
scas
loop
mov
mov
in
lock
out
testl
sub
pop
notl
adc
scas
pop
icebp
je
movsl
dec
popa
pop
in
push
push
iret
repnz
sti
mov
mov
loopne
mov
cmpsl
pop
mov
push
xor
pusha
mov
and
aas
rol
movsb
shl
imul
fildll
mov
xchg
sub
sub
test
aas
mov
clc
fs
imul
dec
jecxz
jo
shll
sahf
inc
xchg
mov
pop
std
ds
popa
mov
scas
movsb
in
or
sbb
mov
push
inc
add
out
scas
or
mov
pxor
ret
fdivrp
rcll
aaa
test
xchg
adc
jns
jp
push
pop
shrl
das
out
push
loopne
jb
out
das
and
jmp
add
pushf
mov
leave
addr16
aas
subb
inc
add
pop
test
sub
icebp
pop
dec
int3
pop
std
push
stc
notrack
adc
nop
pop
addr16
pop
push
sbbl
cli
cltd
iret
in
cmp
dec
jecxz
cs
leave
xchg
mov
sub
pusha
push
push
aas
adc
icebp
insb
cmp
and
inc
xor
mov
sub
push
addr16
dec
mov
sub
repz
cld
sub
adc
push
dec
bswap
out
pop
mov
ret
pop
lret
cmc
movl
sub
in
imul
stos
dec
sbb
sbb
or
sbb
sti
dec
aad
dec
dec
dec
ss
fs
jge
test
imul
test
lds
push
jnp
dec
mov
insb
adc
icebp
sbb
pop
pop
lods
push
jo
cmp
flds
test
popa
mov
addr16
xor
pop
jbe
in
cmp
movsb
mov
rclb
xchg
imul
xchg
in
aam
mov
ret
mov
mov
and
fisttps
nop
dec
pop
cmp
sub
jecxz
and
adc
in
xor
mov
push
rorl
je
lea
icebp
xchg
or
sbb
and
loope
mov
stos
fisubs
dec
jp
call
mov
xor
jae
cmpsb
hlt
inc
ss
cmp
fimuls
iret
xchg
outsl
and
out
lods
stos
mov
mov
movsl
dec
mov
xchg
cmp
repnz
scas
or
addl
shll
sub
cmp
stc
clc
ret
inc
xor
or
xchg
mov
pop
aas
stos
hlt
outsl
lods
xchg
les
in
inc
mov
push
stos
jne
mov
lds
incb
add
stos
or
mov
dec
fidivl
and
mov
pop
mov
jecxz
add
mov
mov
sti
mov
adc
push
or
iret
mov
xchg
cmpsl
sub
sub
lahf
int
daa
je
xchg
rclb
gs
xchg
mov
addr16
adc
mov
mov
xchg
or
inc
int3
inc
mov
ret
sbb
jmp
sti
in
and
mov
xor
xchg
pop
or
dec
call
sbb
out
loopne
idivl
pop
scas
cmp
add
rolb
mov
jne
vxorps
orps
shl
xlat
std
jg
xchg
aaa
cwtl
outsb
mov
adc
push
adc
es
xor
into
mov
push
push
cli
call
dec
in
fdivrs
lea
and
xchg
mov
loopne
bound
pop
into
cs
jmp
sub
pop
mov
mov
cmp
aas
push
fstp
mov
sbbb
pop
xor
and
sti
mov
lcall
imul
cmp
cmpsb
mov
adcl
lahf
testl
jmp
sbbl
bound
lods
mov
xor
adc
sarl
jg
repnz
pop
jmp
dec
dec
popf
xchg
fildll
or
add
jecxz
cmp
cs
cli
push
rcrb
pop
xchg
mov
inc
push
push
insl
sbb
fcomps
leave
xchg
out
mov
in
mov
inc
out
adc
or
in
ret
mov
or
movsl
fwait
mov
test
push
jl
xchg
mov
test
out
fdivrp
xor
jecxz
mov
mov
sub
xor
clc
mov
cmpsb
movsb
dec
jmp
sub
test
mov
jno
imul
jle
mov
xor
addr16
mov
dec
movsl
popf
add
ret
xchg
daa
std
or
xchg
mov
and
and
dec
outsb
stc
fwait
outsb
xorb
push
outsl
je
mov
add
push
push
imul
mov
sar
fildll
pop
test
test
aam
cli
push
dec
sahf
jae
pop
or
fstl
pop
and
out
xor
mov
lea
pop
cmpsb
pop
dec
inc
sarl
sbb
test
sub
inc
dec
data16
xlat
xor
outsl
outsl
out
inc
in
cmc
mov
popf
lret
enter
imulb
loope
in
leave
insl
test
sub
lods
fdiv
jne
jmp
mov
les
jae
cwtl
jnp
ljmp
push
imul
cld
push
rcr
cltd
mov
filds
aad
lock
test
ret
xor
stc
in
mov
pushaw
lret
loope
mov
xchg
sub
jns
je
pop
push
aam
sub
call
rdmsr
sbb
jg
xchg
add
cld
or
pop
pop
pop
sti
fucomp
repnz
leave
in
inc
jo
pop
outsl
sbb
pusha
lcall
mov
dec
rol
cmp
aad
add
std
mov
movsb
push
movsb
and
jmp
inc
sahf
std
pop
sub
lahf
push
stc
fs
jbe
movl
int3
push
out
fwait
jmp
pop
repz
mov
mov
fsubrs
test
outsl
popl
jne
xor
scas
inc
xchg
cmp
inc
mov
sar
push
and
jbe
mov
filds
jo
pop
push
and
adc
push
ljmp
sbbl
mov
rorb
and
bound
jne
or
fcoml
out
fstl
fsts
inc
cmp
dec
rorb
or
pushf
inc
xchg
add
dec
mov
mov
jo
ficoml
outsb
cmp
call
movsb
stos
mov
push
jg
mov
js
rdrand
pop
mov
sub
int
testl
inc
aad
std
outsb
aaa
xor
nop
aaa
jecxz
js
lahf
xor
pop
in
nop
xchg
lock
inc
leave
das
pop
pop
stos
cli
mov
test
in
andb
or
std
sub
in
pop
sbbl
mov
movsb
push
jl
mov
aad
dec
popa
fwait
lock
ror
adc
test
xor
pop
inc
jnp
imul
and
es
out
adcl
and
ror
pop
add
lods
add
jo
mov
cmp
inc
flds
rcrl
jmp
stos
cmp
stc
shll
nop
int3
fmuls
xor
xor
stc
dec
fs
repz
or
xchg
f2xm1
dec
cmp
sbb
inc
jae
out
and
hlt
push
push
cmp
cmc
movsb
mov
data16
jns
or
bound
fdivrl
jle
add
leave
mov
xor
or
push
sub
jmp
fisttpll
fldcw
xor
xchg
xor
inc
and
inc
int3
push
std
test
pop
adc
int
dec
adc
inc
push
ljmp
addb
leave
xchg
xor
ss
arpl
lock
xchg
cmpsb
adc
mov
dec
jb
inc
fmul
xor
sbbl
lea
into
pop
mov
enter
loopne
adc
or
pop
cli
jae
xchg
repnz
push
int3
ljmp
pop
fistps
lahf
dec
fisubs
sarb
xchg
lret
stos
sbb
rcrb
sbb
sub
jb
jb
loop
in
fnstcw
jmp
cmp
xor
cmc
mov
in
test
pop
jl
lret
nop
cmp
aaa
fisttps
shll
out
jbe
outsb
add
adc
ja
dec
jb
jno
push
or
add
sbb
aam
xor
mov
jge
pop
test
in
pop
int
rorl
push
jbe
pop
shl
lds
or
in
in
push
sbb
and
inc
jmp
inc
repnz
outsl
cmpsl
cli
add
mov
mov
stos
xchg
mov
insb
test
cmp
xor
imul
adc
cmp
sub
xchg
jecxz
fs
nop
sbb
insl
js
int3
fcmovnbe
ljmp
dec
lea
lahf
and
add
xchg
cmp
xor
shll
sbb
frstor
adc
adc
cmp
xchg
xchg
in
repz
cmpsb
sbb
subb
sbb
idiv
shlb
lock
add
pusha
lea
cmp
cmp
int3
jmp
cs
xchg
add
push
push
mov
mov
pop
jbe
cmpsl
cltd
adc
call
pushf
mov
dec
fwait
push
push
lcall
shl
std
sbb
ljmp
jae
mov
or
out
pop
xor
insb
je
adc
call
dec
mov
lahf
ret
les
inc
call
fiadds
pop
sarl
les
leave
push
imul
inc
scas
add
outsb
push
test
sbb
movsl
sbb
mov
daa
mov
out
jb
cmp
adc
sbb
inc
inc
mov
outsb
in
dec
mov
sbb
sbb
add
or
fs
sub
mov
aam
jne
loope
push
mov
sub
into
jge
push
cmp
movsl
je
pop
pushl
fstpl
dec
add
or
aas
cmp
jecxz
push
sahf
push
fisttpl
pop
xchg
test
pop
cmpsb
pushw
adc
mov
rcrl
in
cmc
jge
mov
ret
and
push
jl
fs
and
lcall
ljmp
mov
and
jo
inc
jmp
sub
call
sbb
add
adc
xor
shl
mov
movsb
movsl
cmp
pop
dec
push
les
mov
or
push
push
mov
push
xchg
in
in
xlat
clc
inc
bound
rcrb
cmp
shl
nop
outsb
repnz
pop
mov
adc
or
sub
cli
dec
into
and
pop
inc
ficompl
and
adc
inc
mov
jp
xor
or
push
rolb
mov
adcb
fcmovu
jae
dec
cmpb
dec
lock
xchg
in
jbe
push
negl
pusha
adc
je
cltd
bswap
and
mov
add
mov
es
dec
divl
stc
jp
or
mov
iret
mov
mov
add
jnp
and
mov
adc
jmp
aad
pop
cmpb
loope
dec
push
mov
and
daa
jg,pn
push
lcall
mov
dec
inc
cs
sbb
xchg
imulb
dec
lret
arpl
jae
xchg
jb
fs
lret
jne
xchg
out
dec
out
in
or
sbb
mov
mov
push
pop
jo
outsl
test
ror
in
xchg
pop
mov
push
adc
mov
inc
xchg
cmc
mov
roll
test
xor
adc
lds
push
les
sahf
es
jae
xchg
fimuls
sbb
sub
adc
add
aad
leave
and
pusha
jecxz
outsb
int3
sub
cmpl
mov
xor
les
or
mov
xor
cs
aam
adc
pop
xchg
push
adc
xor
loop
into
jno
sub
popl
out
aad
std
sbb
outsb
adc
jbe
fsubl
mov
xor
sub
stc
jge
test
das
xor
pop
inc
push
or
xor
hlt
and
push
jle
inc
repz
test
push
cli
pop
dec
insl
jb
and
nop
mov
jecxz
mov
gs
mov
sbb
aaa
mov
pop
pop
pop
adc
pop
add
dec
cmpsl
push
sub
xor
xchg
mov
dec
inc
pop
lahf
ret
push
lods
mov
cmp
ljmp
mov
xchg
adc
ja
fs
es
jns
adc
mov
sbb
cpuid
ficoml
xor
aam
lds
div
and
pop
scas
fisttpll
loopne
ret
cwtl
push
and
hlt
out
fnstcw
cmpb
push
push
mov
jle
sahf
repz
int3
cmp
jno
cmp
subb
xchg
les
stc
sub
inc
in
lock
xchg
sub
int3
lcall
andl
js
leave
sbb
test
mov
mov
and
cltd
ret
rolb
cmc
icebp
mov
mov
push
pop
test
mov
cmc
add
inc
jae
dec
lret
xor
sahf
lods
outsb
mov
dec
cmpsl
leave
push
dec
popf
mov
sbbl
jp
dec
or
scas
fistpl
pop
add
xchg
jb
sbb
subb
aas
pop
cs
in
pop
inc
mov
and
sub
fs
test
mov
jno
popa
into
out
mov
imul
test
add
pop
cmp
or
push
pop
fisubrs
lods
lods
xchg
jne
push
es
fs
xor
stos
push
scas
jo
adc
aad
adc
popf
adc
mov
cli
fisttpl
xor
repnz
push
add
hlt
adc
xor
push
xlat
jmp
add
ss
mov
sub
enter
aad
jecxz
mov
ret
icebp
sub
inc
sub
rorb
push
xchg
cmp
pop
or
movsw
je
push
lret
mov
mov
sbb
adc
mov
adc
in
aas
sbb
adc
push
ficomps
mov
movsb
jne
add
mov
pop
jb
iret
mov
enter
adc
es
cltd
or
and
or
inc
xor
mov
enter
shlb
test
lahf
negb
pop
out
scas
fcmovb
lcall
jno
cmp
lret
mov
lds
or
sarb
scas
insb
mov
das
push
xchg
mov
xchg
insl
sbb
gs
xchg
idivl
sbb
hlt
xchg
into
jge
sti
inc
cwtl
jo
mov
ljmp
add
jg
jg
iret
int
mov
sub
into
imul
sub
jns
and
mov
mov
mov
adc
adc
jne
lcall
test
movsl
out
lar
cwtl
fistpll
cwtl
cmp
ds
mov
stc
stc
int
je
bound
xchg
mov
pop
jnp
rcrl
pusha
adc
mov
mov
out
movb
push
inc
aas
loopne
hlt
mov
xor
or
data16
cmpl
stc
fnsave
lret
in
push
dec
jmp
jbe
mov
adc
xor
jo
scas
or
stos
sarb
arpl
xor
xchg
xchg
jg
mov
and
stc
ds
dec
lods
mov
jb
addr16
pop
test
pop
fwait
sbb
out
imul
or
mov
cmp
or
imul
xchg
cmpsb
lret
in
cmp
mov
out
out
mov
dec
pushf
adc
sarb
add
cltd
xor
repnz
cmp
cmpsb
icebp
push
decl
sub
cmpsb
in
pop
aad
leave
mov
inc
inc
cmpsb
add
movsb
dec
aaa
popf
cwtl
and
ret
push
les
addb
mov
inc
lahf
push
fwait
out
ja
loope
push
loop
sub
sbb
jne
xchg
xor
cmp
andb
dec
fcompl
sub
lea
test
pop
test
outsb
pop
mov
sub
ds
inc
mov
lcall
mov
fidivrl
add
or
cmp
repz
in
mov
into
je
pop
jmp
xor
pop
in
jle
mov
dec
mov
enter
xor
xor
ficoml
arpl
adcb
mov
mov
sbb
mov
pop
cmpb
mov
fcomi
sub
cmpsb
scas
pop
or
or
loop
cmp
pushf
notl
shlb
jp
dec
ret
lret
stos
and
int3
lahf
sub
jno
mov
sub
add
xor
mov
pop
test
pop
hlt
outsb
xor
cmp
in
push
lods
push
mov
lret
test
call
mov
dec
outsb
dec
int
or
pop
ja
xor
rcrl
enter
dec
test
push
add
cmpsl
sub
inc
pop
sbb
inc
outsl
into
int3
and
or
nop
out
mov
pop
mov
push
xor
movsb
paddd
ficoms
test
adc
fldenv
sub
add
add
add
sub
jae
je
stc
lea
inc
add
aaa
mov
aas
out
push
cmp
test
mov
nop
js
shlb
dec
ret
xchg
dec
sbb
dec
dec
jne,pn
stc
int3
movsb
jmp
out
cs
inc
jae
lea
inc
cmp
out
mov
loop
outsl
movsl
aad
sahf
hlt
lods
mov
icebp
mov
mov
and
xchg
xchg
iret
adc
xor
inc
push
add
mov
cld
js
int
jp
adc
sub
popf
adc
mov
push
mov
ret
adc
push
xchg
inc
or
sbb
ret
or
xchg
add
xor
lods
push
fildll
loopne
lock
pop
clc
mov
adc
stos
push
cmp
mov
repnz
push
insb
jge
test
pusha
sbb
jb
jp
popa
mov
out
xchg
pusha
push
stos
icebp
pop
ret
mov
andb
and
or
lcall
mov
jno
mov
or
test
lahf
lods
xchg
inc
mov
decl
sbb
or
and
jb
filds
inc
sub
cmp
mov
or
loope
js
pop
out
popa
lods
aam
lds
cld
xor
mov
xchg
addr16
sti
gs
push
mov
mov
sub
xor
fwait
subl
jmp
es
subb
xchg
sbb
aad
cltd
sub
add
shll
add
pop
mov
mov
daa
dec
fidivl
cwtl
mulb
jp
mov
push
mov
sbbb
in
cmp
int
mov
inc
jnp
bound
je
xor
fdivr
mov
in
test
test
inc
outsl
jbe
mov
xor
mov
sub
in
fldenv
cmp
jo
std
sub
cmpsl
scas
xlat
ffreep
iret
idiv
out
pop
pop
pop
getsec
aas
daa
das
push
pop
inc
dec
ja
outsl
xchg
lahf
xchg
xlat
ffreep
iret
idiv
out
pop
pop
pop
getsec
aas
daa
das
push
pop
inc
dec
ja
outsl
xchg
lahf
xchg
xlat
ffreep
iret
idiv
out
pop
pop
pop
getsec
aas
daa
sub
inc
dec
ja
imul
cmpsl
scas
xlat
ffreep
iret
idiv
out
pop
pop
pop
movsl
popf
aas
daa
pop
and
iret
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
and
adc
add
push
adc
jno
outsl
lods
std
pop
inc
dec
xchg
jge
insl
icebp
sbb
shrl
jge
add
jno
popa
add
inc
fnstenv
jge
insl
mov
loope
sarl
sub
adcl
outsl
mov
inc
mov
addb
lcall
sub
adc
popa
push
mov
xchg
test
loope
adc
lds
push
fstp
xchg
cmpsl
test
pushf
loope
fdivr
int3
out
inc
js
sbb
push
sbb
into
sarl
mov
fs
ret
mov
sbb
out
mov
loopne
cmp
std
cmp
hlt
in
in
push
mov
inc
push
mov
mov
xchg
push
sbb
repnz
sarl
sub
xor
jmp
lods
xchg
push
and
mov
loope
sub
jo
in
call
mov
mov
scas
std
je
sbbb
sbb
mov
sarl
ja
adc
out
popf
sbb
ja
cmp
mov
cmp
push
int
mov
psrad
sbb
or
or
add
jb
jns
jl
dec
jl
inc
mov
pusha
enter
mov
cmp
sbb
dec
mov
pop
addb
dec
mov
push
mov
stc
popa
lea
inc
lods
mov
mov
insl
icebp
sbb
shrl
std
add
jno
popa
lea
inc
lods
mov
mov
insl
icebp
sbb
shrl
pop
rol
add
scas
aas
jecxz
out
popf
push
and
insb
jg
sbb
idivl
mov
aam
mov
pop
adc
pusha
add
cmpsl
movl
pushf
push
xchg
jge
and
sbb
aas
je
repnz
xchg
jecxz
mov
mov
out
mov
nop
jmp
out
jg
push
int
push
in
movsl
add
xchg
out
dec
add
mov
xlat
dec
mov
sahf
sbb
hlt
sub
pushf
movsb
cmp
hlt
xlat
js
cwtl
insb
mov
cmpsb
push
mov
mov
push
dec
in
jnp
dec
fstps
out
push
xchg
nop
aas
mov
or
xchg
push
scas
lock
mov
push
int
add
ss
xlat
popa
movsb
sub
out
lds
xchg
lcall
sbb
test
add
sti
into
rcrl
jle
hlt
xor
add
xorl
xchg
mov
jg
arpl
mov
or
pop
call
je
xchg
dec
ret
and
xor
xchg
push
cmpsb
mov
xor
and
jno
js
arpl
mov
stos
and
sbb
lret
and
dec
rcrb
sbb
das
dec
dec
fs
add
push
adc
and
sub
aam
std
fstpt
mov
cmpb
out
adc
dec
push
shl
enter
push
jo
push
xchg
push
dec
mov
mov
aaa
add
push
sbb
push
mov
outsl
frstor
cmp
add
or
jo
adcb
and
pushf
adc
cmpsb
inc
sub
pop
push
ss
loope
daa
aad
je
push
std
add
xor
pop
in
stc
out
stc
stc
or
push
cltd
xchg
gs
out
mov
and
add
in
testl
sti
es
lods
fwait
ror
dec
or
aam
fidivs
add
pop
or
cmpsb
dec
jae
and
cmc
movsb
jecxz
pushf
pop
je
loop
jnp
push
sbb
call
dec
adc
lods
stc
dec
push
sub
enter
xchg
pop
out
inc
push
lcall
sbb
aas
push
mov
sbb
push
jecxz
mov
push
mov
adc
dec
mov
jbe
mov
test
imul
movl
sbb
mov
pop
mov
cmp
cmp
jmp
ja
test
inc
inc
fwait
inc
mov
adc
imul
mov
nop
mov
movsb
cli
fcompl
js
leave
and
dec
cmpsl
insb
movsb
sub
in
leave
sub
lret
insl
outsb
dec
pop
ss
loope
stos
loopne
push
mov
fcoms
sbb
cmp
insl
mov
decl
out
mov
pusha
sbbb
in
xchg
pop
sahf
or
mov
sbb
or
sbb
inc
mov
adc
testl
push
imul
les
or
jne
mov
xorb
or
outsb
ficompl
mov
js
sbb
or
in
mov
push
xor
xor
and
popf
xor
mov
lds
pusha
push
sub
jle
xor
clts
sub
sbb
fimuls
pusha
mov
sbb
cmp
shl
mov
sub
mov
sub
ljmp
or
and
ret
push
pop
stos
sahf
mov
add
pop
stos
adc
dec
sub
xor
mov
lods
sbb
jb
adc
ja
add
sub
popa
push
lods
pushf
inc
inc
sub
stos
stos
popf
sub
sub
and
or
mov
mov
insb
dec
add
xor
mov
imul
mov
fucomip
ror
push
repnz
adc
lea
add
push
aad
les
push
sub
adc
cmp
icebp
pop
fsts
aad
lock
and
enter
pop
in
cmpsl
sbb
xchg
pop
push
dec
cmp
or
loop
pop
mov
dec
sub
fs
inc
inc
in
adc
jne
add
dec
push
mov
rclb
jno
icebp
and
insl
cmp
xor
and
xchg
sbb
daa
and
test
aas
jl
popa
xchg
insl
clc
cli
ds
adc
mov
mov
push
add
cltd
sub
adc
sti
mov
adc
lahf
xchg
std
xchg
aad
loop
in
outsb
mov
add
shr
sub
push
mov
pop
adc
jecxz
cwtl
aam
and
std
cmp
cld
and
in
je
jae
push
mov
pop
leave
movsl
scas
adc
sahf
mov
mov
pop
xor
push
stc
push
adc
xchg
mov
mov
inc
loop
adc
mov
xchg
pop
mov
test
bound
imul
fs
into
dec
push
sbb
stc
movsb
mov
insb
mov
add
int3
pop
cmp
shrb
xor
in
in
rcrb
pop
add
or
mov
gs
or
aad
fldl
dec
push
iret
ljmp
sbb
mov
cli
jae
xchg
mov
pop
jne,pt
jb
or
cld
sub
psllq
ret
sbb
cmc
adc
ss
dec
xor
mov
jae
in
or
inc
test
mov
repnz
xor
leave
scas
lock
shlb
shll
adc
ficoms
fwait
imul
pusha
lcall
push
fdivl
lret
ds
les
in
fcomps
mov
and
cmpsb
cli
btc
fiadds
insl
loop
xchg
jmp
lcall
movsl
pop
push
rdpmc
imul
and
les
push
mov
and
gs
jnp
add
xchg
loopne
loopne
mov
out
in
xchg
rorl
jecxz
dec
flds
inc
lock
mov
mov
or
jl
xchg
movsb
pop
mov
inc
dec
lds
xor
push
mov
pop
add
test
int
jns
sub
sbb
imul
ret
lods
sub
das
push
out
sub
push
out
jle
aam
lret
cmc
rol
or
cmp
xchg
pop
jl
push
push
sbb
inc
das
mov
pop
push
aas
pop
inc
or
pop
push
dec
cmpb
iret
push
fbld
sbb
nop
dec
inc
dec
popf
js
push
push
mov
mov
jnp
inc
cmp
push
jg
out
pushf
push
push
andb
dec
bound
adc
data16
gs
mov
insb
je
fnsave
into
ret
xor
mov
sti
rcrl
or
ret
hlt
frstor
dec
push
xor
stc
popf
ret
inc
mov
xor
push
lahf
xchg
push
dec
pop
mov
ret
repnz
mov
orl
mov
ret
cmp
mov
mov
dec
xchg
ljmp
addr16
mov
imul
xor
movsb
push
or
sbb
stos
sahf
int
jae
dec
repz
pop
pop
jbe
adc
mov
in
rcll
in
pop
sbb
repnz
in
mov
dec
imul
scas
sub
pop
adc
mov
push
xchg
mov
sbb
int3
adc
andb
cltd
cmp
cmp
testb
jbe
imul
out
or
enter
push
mov
xchg
and
cmp
mov
xchg
daa
ljmp
jmp
ljmp
fs
push
xor
mov
movsl
imul
jno
rol
fiadds
lret
mov
rol
jg
adc
in
xor
ljmp
xor
xchg
dec
mov
push
mov
cmp
mov
xchg
push
cmp
jo
inc
pop
data16
sbb
dec
or
mov
fstpt
sti
repz
pop
xor
inc
sar
xor
add
xchg
lods
push
jmp
add
and
or
js
hlt
xchg
mov
mov
rclb
xchg
jge
stc
dec
or
jmp
add
daa
xchg
cmp
inc
mov
lcall
nop
icebp
ret
or
je
pop
xchg
lds
pop
jbe
xchg
loop
mov
or
lcall
mov
les
pminsw
outsl
jl
rcl
out
mov
in
pushf
cmp
mov
push
pop
ljmp
scas
push
shrl
mov
inc
aam
ds
cwtl
and
rcrl
push
adc
inc
sub
jo
or
out
pop
adc
and
loop
dec
pop
and
fistps
pop
bound
inc
sbb
int3
inc
ss
fistpll
mov
lods
jg
sub
fs
mov
ficomps
lea
or
inc
add
dec
fadds
adc
pushf
adc
out
cmc
push
xchg
push
inc
xchg
push
mov
or
outsb
inc
push
push
adcl
stos
ffreep
adc
aad
add
pop
mov
mov
and
repz
sub
push
mov
roll
fmuls
mov
scas
imul
mov
popf
sbb
mov
pusha
sti
shrl
aam
mov
pop
push
push
add
xor
pop
add
inc
mov
jecxz
sahf
push
add
aad
test
into
inc
lahf
leave
aaa
repz
std
push
push
sahf
insl
rcl
scas
push
es
mov
sbb
add
mov
cmp
bound
add
adc
in
insb
lret
loope
sub
add
or
dec
int
daa
imul
jo
xor
ss
lods
adc
adc
or
stc
fbstp
pop
fcmovne
test
shl
jno
das
sbb
or
aaa
in
xor
or
cmp
ret
cmp
daa
stos
mov
dec
jnp
adc
or
sarl
in
in
pop
stos
fsts
pop
mov
push
cli
test
clc
arpl
fcoml
rcrb
pushf
scas
add
sub
mov
sbb
dec
add
xchg
loope
iret
sbb
pusha
inc
test
sub
push
mov
jo
pop
outsb
jmp
lds
lret
pushf
sarl
sar
mov
into
stos
cwtl
adc
lea
xchg
jmp
jae
gs
sub
mov
sbb
faddl
mov
test
fisubrl
loop
mov
aam
lock
out
cmc
aam
sub
or
xor
and
jns
jle
dec
and
aam
push
sbb
fcompl
ret
lock
xor
adc
and
out
xchg
jl
cmp
pop
add
pop
inc
sbb
adc
mov
std
ja
jp
ljmp
mov
mov
sub
clc
roll
loop
and
xchg
je
int3
stc
jns
cli
xlat
and
inc
sub
push
and
cmp
mov
push
cmp
lcall
mov
clc
rcl
stos
inc
or
mov
xchg
sbb
aam
loopne
insb
xor
outsl
sbb
leave
inc
dec
add
pop
jb
in
inc
push
jbe
jge
gs
jge
repnz
mov
mov
in
mov
xchg
fmuls
jl
fmul
into
jb
dec
rolb
dec
icebp
or
sahf
ficompl
test
cmp
xchg
les
aam
hlt
sbb
les
in
pop
popa
jmp
jbe
ror
mov
pop
cmpsb
xlat
ja
dec
icebp
aam
out
mov
xchg
or
adc
sbb
leave
and
mov
sbb
sbb
mov
test
jne
sbb
adc
fcoms
sbb
cmp
arpl
cs
loope
mov
mov
enter
or
loopne
jo
jo
rclb
adc
sbb
repz
sbb
inc
mov
fstpt
xor
mov
repz
mov
cli
pop
popa
jle
loope
pushf
xor
loope
fwait
mov
icebp
or
mov
pop
dec
into
roll
or
adc
movsl
jae
scas
or
dec
nop
and
push
outsb
fadds
imul
pusha
and
jle
notb
frstor
or
jecxz
adc
loop
idivl
or
cmp
out
mov
cmp
or
cmp
outsb
fisubrs
xchg
add
repz
xchg
mov
lds
xor
inc
dec
and
dec
mov
adc
adc
outsb
lods
or
jp
std
or
inc
jbe
or
out
mov
cmpsl
add
jmp
fstps
arpl
dec
out
add
push
scas
std
pop
dec
imul
es
adc
imul
jbe
adc
jmp
cmp
sub
xor
enter
or
leave
das
cmp
outsl
mov
jae
rorl
jp
pushf
lret
push
in
xchg
mov
mov
je
adc
xchg
hlt
xor
pop
int3
jl
jns
enter
or
leave
push
jl
mov
jns
mov
addr16
mov
repz
fsubrs
mov
xchg
nop
cli
pop
cmc
jno
sbb
pop
mov
push
adc
jge
scas
sub
pop
or
mov
xchg
in
lcall
jge
sti
xchg
mov
loope
ds
leave
pop
xchg
pop
popf
mov
sbb
stos
jns
pop
sbb
mov
ja
sub
mov
pop
and
into
inc
pop
ret
and
rcrl
xchg
xchg
in
lcall
stos
in
cltd
fnstenv
cwtl
loopne
ret
or
stos
fisubrs
sub
dec
dec
popl
dec
and
push
push
push
mov
je
adc
xor
lret
out
ss
repz
mulb
mov
jne
inc
rclb
test
mov
movsb
icebp
lret
xchg
pop
inc
lock
out
xor
daa
mov
pusha
xchg
aas
jge
jmp
xor
jmp
mov
test
push
inc
daa
pop
adc
push
pop
and
jecxz
jno
out
cmp
inc
lea
in
pop
stos
mov
cs
sbb
cmp
in
or
sub
repnz
rcrb
mov
jo
dec
dec
fnstenv
mov
xor
dec
mov
xchg
cwtl
and
jns
ds
je
pop
imul
in
scas
mov
mov
imul
pop
inc
lods
rcll
fwait
out
mov
fsubrp
aaa
int3
xchg
imul
lock
jmp
mulb
jne
xor
testb
iret
and
adc
inc
mul
dec
mov
mov
push
mov
cmp
leave
pop
inc
icebp
mov
lods
push
dec
in
jno
jne
sbb
loopne
repnz
sbb
stos
xor
dec
mov
insb
subl
add
sub
dec
imul
mov
stc
cli
xchg
dec
incl
cmp
rcrb
xchg
imul
xchg
scas
bound
out
dec
rol
repnz
fisttpl
arpl
leave
fdivl
cmp
fst
out
cli
rol
in
faddl
and
push
mov
stos
xchg
fdivs
push
scas
jg
pop
popa
fs
jno
inc
jge
xor
mov
sub
mov
in
push
xor
or
ret
add
inc
mov
sub
stc
dec
and
movsb
lods
xchg
and
mov
aas
mov
lahf
sbb
addr16
cwtl
mov
insl
push
sub
dec
pop
or
es
add
inc
sub
fcmovnbe
mov
add
xchg
adc
sub
pop
sbb
jecxz
aam
or
mov
or
jecxz
pop
mov
inc
push
pop
stos
js
movsb
pop
ret
test
jmp
movw
negl
movb
aas
sbb
pop
mov
adc
data16
or
push
bts
clc
mov
in
ss
inc
cmp
dec
push
cwtl
imul
sub
cmpsl
shrl
mov
data16
xor
push
gs
sbb
jno
xchg
repz
mov
xor
cmpsb
jnp
jmp
add
scas
fsubrl
jecxz
cmc
pop
stc
adc
inc
mov
sahf
fs
lahf
dec
roll
lods
push
hlt
rol
cmp
repnz
mov
test
shlb
rclb
dec
sti
mov
dec
add
lret
mov
out
add
xor
pop
cli
mov
out
jbe
nop
notl
lods
mov
sub
test
jmp
jae
xchg
stc
jbe
les
mov
jecxz
cmp
xchg
out
mov
mov
pushf
rcll
jbe
mov
jmp
inc
fs
mov
cmp
adc
mov
sub
stos
xchg
call
jbe
push
nop
lcall
insb
rcll
insl
xor
jge
cld
sti
pop
cmp
jnp
pop
sbbl
sub
push
pop
shll
add
mov
dec
or
call
mov
jp
mov
mov
movsl
sub
dec
outsb
vpaddq
lock
out
int
jbe
cmpsb
mov
sti
cmp
hlt
cmpsb
addr16
les
addr16
push
in
sbb
sub
jns
xchg
adc
jns
ds
pop
hlt
loop
xor
jo
clc
cmp
stos
fildll
in
xchg
int3
xchg
sub
scas
out
test
push
fcomi
js
pop
adc
push
scas
and
js,pn
push
repz
jp
and
inc
daa
pop
mov
test
add
ljmp
jnp
daa
sbb
scas
mov
push
cmp
ja
add
lds
and
xchg
push
mov
cmp
adc
stc
ljmp
sbb
ss
mov
ds
dec
outsl
das
jae
jo
mov
sbb
xor
pushl
mov
or
adc
and
cli
inc
and
lds
cltd
adc
lret
aad
stos
out
lock
pop
xlat
inc
xor
shrb
mov
or
xor
jne
pop
push
fsts
mov
jle
outsb
ret
adcl
test
lahf
or
fwait
dec
and
cs
sub
jbe
xor
ror
adc
cmpsl
cltd
jle
mov
std
test
mov
test
cmpsl
loopne
jp
insl
fcompl
movsl
aaa
rcll
and
add
in
outsb
lahf
xor
loop
aam
enter
push
fwait
repnz
lods
push
call
jmp
shll
popa
pop
sbb
sahf
dec
cmpsl
rorb
ja
lods
movsb
gs
mov
dec
mov
jae
push
cmpb
loop
mov
rcrb
ljmp
adc
push
int3
out
inc
rclb
push
cwtl
sbb
push
xor
or
cmp
out
jb
xchg
pop
ret
and
xchg
les
and
lret
adcb
or
test
subb
arpl
sbb
repz
movsl
jle
jnp
aam
mov
mov
jnp
xor
and
int
or
std
dec
mov
mov
adc
mov
fcmovne
arpl
push
in
in
add
and
leave
stos
inc
out
cltd
sbb
mov
mov
jno
mov
push
dec
inc
cli
push
stos
mov
test
stos
jmp
test
divb
cmpsb
push
repnz
fadds
fists
addr16
scas
lcall
dec
fbld
std
ja
aam
cs
or
outsb
jg
jo
mov
mov
pop
int
sbbl
cmp
lds
xor
movsl
pop
sub
xchg
out
dec
xchg
mov
push
stos
jbe
jge
and
cli
leave
cmp
test
shl
mov
stos
mov
insl
adc
idivl
jnp
scas
clc
pop
cmp
stc
mov
nop
inc
sbb
int3
mov
jge
mov
cmp
or
imul
xor
clc
adc
ds
push
clc
aas
push
push
fcomip
std
dec
push
out
sarl
xlat
add
dec
sbb
jl
fs
add
out
outsl
ljmp
das
jle
and
pop
pop
mov
jno
add
mov
ret
xchg
out
or
test
dec
lea
insb
inc
adc
pushf
sbb
fwait
mov
je
movsb
jae
pop
mov
loopne
fnstcw
into
cmp
push
jno
inc
sub
pop
xchg
xor
adc
xchg
jge
out
push
mov
dec
mov
testb
cmp
jmp
fwait
adc
push
xchg
divl
sbb
push
xchg
add
jno
popa
lea
inc
lods
mov
mov
insl
icebp
sbb
shrl
std
add
jno
popa
lea
inc
lods
mov
mov
insl
icebp
sbb
shrl
test
in
loope
popa
and
mov
mov
insl
icebp
sbb
sub
dec
std
and
jno
jno
push
cmp
pop
out
jge
sbb
ret
gs
jne
inc
jmp
sti
sub
push
cmc
jo
sbb
lds
jnp
or
cmp
jne
inc
jmp
sti
and
stos
adc
pop
lds
jnp
or
gs
jne
inc
jmp
sti
and
stos
adc
pop
mov
mov
movsl
pop
jg
dec
cld
cmp
lret
adc
inc
cmp
sub
pop
out
test
pop
sub
imul
sub
ret
insl
mov
mov
and
cmpsl
std
mov
idivb
cmp
jp
lret
mov
shrl
lcall
xchg
jo
out
iret
lods
dec
cmp
loopne
aad
push
mov
push
aam
cmp
push
fiaddl
mov
mov
jmp
js
dec
and
sub
aad
sbb
push
lock
sarb
fs
push
sahf
in
in
std
pop
dec
xchg
pop
dec
cmc
ret
xor
imul
and
stos
mov
inc
mov
mov
outsl
mov
out
inc
ds
cmp
jmp
sti
and
stos
adc
pop
lds
jnp
or
jge
cmpsb
push
or
lods
adc
push
xchg
lret
xchg
daa
nop
xor
data16
loopne
in
adc
adc
inc
out
jle
inc
les
xchg
push
xchg
aaa
mov
shlb
call
fwait
jne
add
xor
mov
lds
jnp
or
cmp
jne
inc
jmp
sti
and
stos
adc
pop
lds
jnp
or
cmp
adc
fcomps
sub
cmc
dec
lea
mov
push
push
es
cli
xor
dec
mov
ljmp
and
xor
outsb
std
arpl
lret
xor
aas
icebp
pop
pusha
lahf
mov
push
push
mov
imul
mull
sub
jae
ss
add
adc
or
jne
add
icebp
sti
inc
imul
xchg
push
xor
and
ficompl
mov
and
daa
sub
or
jg
mov
sub
xchg
pop
push
outsl
xchg
mov
xchg
mov
icebp
mov
inc
mov
mov
dec
movsb
fsubrs
mov
ds
sbb
testb
jge
mov
add
fidivl
mov
gs
sub
xchg
lods
adc
adc
and
or
mov
sub
shrb
je
lock
push
lahf
sahf
aaa
stc
enter
lea
mov
std
inc
jnp
push
je
sbb
leave
adc
mov
and
test
mov
jbe
shl
cmpsb
dec
xor
jno
adc
lret
push
add
scas
subl
lret
mov
imul
mov
dec
push
lret
pop
sub
imul
in
test
push
inc
xchg
pop
push
inc
cmp
popfw
push
and
aas
dec
divl
lds
pop
jp
jnp
xor
flds
ror
xchg
sbb
sbb
iret
pop
pop
adc
fistpl
dec
test
fs
pop
add
jnp
div
ret
and
mov
rolb
jae
and
jmp
mov
iret
add
sbb
xchg
ficompl
jl
jmp
subl
inc
and
push
sbb
fs
loopne
dec
push
and
sbb
repz
push
test
push
out
cld
fdivl
lcall
pop
adc
imul
xlat
mov
sbb
xor
pop
cltd
mov
sub
into
insb
xchg
fwait
data16
add
repz
sbb
pop
dec
scas
das
fimuls
push
std
jecxz
jmp
fucomp
stc
lret
inc
notb
inc
cmpsb
jmp
jge
das
adc
pop
ss
jmp
loop
adc
in
mov
cltd
inc
pop
add
mov
mov
ret
xor
xchg
rcll
jmp
push
cli
cwtl
and
ret
sbb
mov
push
pop
addr16
pop
loopne
sub
dec
or
ret
adc
sbb
call
xor
fxch
cmp
icebp
or
xlat
arpl
and
add
cmp
int3
mov
dec
js
pop
movsl
iret
lods
dec
xchg
rorl
mov
sahf
xchg
or
bnd
popa
or
fnstsw
and
jnp
test
push
push
loope
rorb
pop
dec
fbstp
pop
fdivr
pop
fsubr
insl
imul
pop
push
out
mov
cmp
mov
mov
scas
dec
int
aad
ss
mov
addr16
inc
push
push
cwtl
das
hlt
fisttps
pop
std
xor
addb
test
test
or
repnz
leave
scas
clc
popa
adc
jno
lea
fistps
gs
dec
pushf
xchg
or
mov
fcompl
xlat
dec
push
sub
lahf
sbb
jle
mull
pop
jg
sub
pop
fwait
and
cltd
pop
mov
cltd
ret
and
xlat
or
nop
call
mov
fcompl
shll
dec
and
mov
lods
cmp
les
les
scas
ret
shlb
repz
add
int3
fcomip
negb
jns
in
or
rorb
icebp
push
into
add
clc
inc
repnz
xchg
arpl
stc
mov
and
xor
sub
rcr
daa
cmc
test
xchg
add
stos
lds
mov
xor
sbb
inc
xlat
and
or
xchg
mov
addb
sarl
or
outsb
cld
neg
xor
add
fisubrl
call
inc
cmpsl
inc
data16
dec
dec
mov
xchg
out
add
cltd
sub
jbe
mov
daa
out
jge
je
push
aaa
fadds
ret
mov
fwait
xchg
adc
sahf
pop
aas
mov
stc
pusha
testl
addl
xchg
cmp
push
sbb
ret
push
mov
popa
dec
mov
xchg
adc
stos
dec
pop
out
add
sbb
aam
addl
jg
inc
push
jb
out
mov
imul
inc
add
lock
insl
nop
jmp
mov
arpl
push
lcall
in
mov
sub
sti
stos
test
insb
sbb
call
sub
in
add
xor
or
push
pop
pop
xchg
enter
add
std
rclb
sbb
jge
dec
lahf
and
jne
push
inc
push
sbb
loope
dec
mov
imul
inc
xor
xchg
xlat
xchg
pushf
in
sar
ret
shrl
push
push
mov
repz
aad
xor
neg
shlb
sub
fwait
pushf
mov
jg
xchg
inc
call
fwait
loop
mov
movsl
adc
lahf
push
lret
mov
xchg
movsb
int
dec
div
mov
insb
stc
inc
mov
sbb
push
sub
aaa
leave
and
pop
mov
sub
shrl
mov
cmp
scas
je
jl
mov
sub
adc
pop
mov
push
xchg
jae
out
negb
scas
cwtl
and
inc
lods
xor
cmp
mov
jnp
outsb
sar
movsb
inc
sti
mov
inc
mov
add
mov
lock
mov
cmpsl
cld
mov
lea
jns
inc
dec
fdivr
dec
xchg
testb
sbbl
scas
popa
jmp
scas
pop
jb
or
push
mov
push
cmp
xor
pop
pushf
sub
loope
into
scas
fisubrs
stc
inc
sub
das
lock
push
shrl
add
mov
enter
jge
iret
sbb
in
cmpsl
mov
or
mov
xchg
bound
loope
jle
cmp
imul
add
mov
fnsave
loop
ja
outsl
gs
adc
std
rorb
movsl
cs
cmp
into
in
repnz
xor
sub
insl
lock
push
je
icebp
lcall
jbe
cmpsl
cli
int
aam
adc
movsl
cmp
sbb
lea
addl
jb
sbb
cmpsb
lock
lahf
enter
js
incb
scas
lret
sbb
jb
pop
xor
cmp
pop
nop
mov
inc
pop
sbb
in
pop
cmp
out
cli
pop
cmp
mov
out
pop
mov
repz
jp
in
xchg
icebp
fstpt
ds
dec
mov
sbb
fs
dec
test
push
xor
aad
xchg
adc
sbb
into
xchg
bound
dec
cmpsb
mov
cmp
cmp
jmp
jb
test
pop
outsl
js
in
data16
mov
cmp
or
fcompl
mov
mov
pop
cwtl
fimull
cmp
es
pushf
push
pushf
jmp
jns
mov
iret
testl
mov
pop
data16
mov
repz
stos
sahf
rolb
sbb
int3
mov
jl
lret
cmp
mov
inc
push
sbb
push
adc
jbe
in
add
or
enter
scas
dec
jne
dec
jnp
aaa
xor
pop
incb
mov
add
push
xor
add
dec
fcomi
xchg
push
mov
or
sti
out
testb
jg
insb
fsubl
add
mov
cmpsl
dec
mov
shr
lret
jp
xor
lods
in
rclb
stos
repnz
xchg
mov
jo
jg
mov
push
sbb
repz
push
sub
pop
cmpsb
pop
push
imul
data16
push
ja
pop
xor
sbb
push
jno
in
call
add
ss
mov
add
or
xchg
sti
outsb
inc
and
xchg
out
repnz
jae
pop
push
mov
ja
in
fwait
mov
adc
push
std
ficoms
loope
and
mov
cmp
and
shlb
mov
lahf
and
pop
cld
sbb
and
cmpsb
sar
and
repz
jg
fucomp
cmpsl
addr16
cmpsl
scas
cs
movsb
sarl
and
sub
movsl
jo
and
mov
push
mov
call
jno
loopne
jae
iret
shl
out
mov
fistl
adc
leave
imul
sub
iret
or
filds
or
stos
cs
je
push
imul
mov
cmp
sub
dec
cmp
stos
repz
mov
test
lret
or
inc
or
sbb
xchg
push
mov
mov
popf
insl
and
lock
fiadds
cmpsb
and
inc
adcl
test
jno
mov
jne
lds
xor
sbbb
xlat
jns
mov
insb
mov
test
sti
add
fidivs
cmp
iret
jne
jl
sub
mov
push
mull
enter
clc
push
loop
mov
pop
les
pop
popf
mov
cmpb
push
jecxz
lcall
icebp
test
jge
jl
enter
inc
pushl
xchg
iret
sub
inc
and
fucomp
or
adc
dec
std
hlt
jb
flds
and
mov
jb
sahf
push
pop
xor
fildl
inc
inc
bound
pop
fs
or
sti
add
mov
cmc
lods
mov
not
push
or
mov
jno
aas
pop
lahf
pop
mov
xchg
sub
dec
bound
inc
fmulp
subb
adc
mov
bnd
push
lods
sbb
push
fs
xchg
jmp
push
jp
lods
fdivs
mov
cmp
jae
dec
push
orb
inc
adc
shrb
push
subb
in
insb
imul
mov
push
mov
xchg
cmpsl
add
push
add
mov
adc
rcrl
out
adc
jns
test
or
pushf
sbb
jecxz
jecxz
cmpsb
sub
adc
jno
scas
pop
sbb
iret
out
xlat
mov
test
in
sbb
shl
stc
jns
adc
fs
push
lret
arpl
hlt
sahf
in
not
int
je
cs
push
mov
mov
or
mov
mov
aas
test
ret
frstor
jne
setg
mov
sub
add
test
lds
int
xor
cltd
xchg
js
xchg
outsl
and
and
aad
sahf
aam
js
gs
push
out
cmp
adc
mov
mov
lahf
dec
ret
int3
cltd
std
adc
stos
push
push
aam
sbb
sbb
cmpsl
test
js
lock
ja
adc
jg
cs
pop
js
xchg
sbb
jmp
clc
scas
fs
arpl
fnstcw
sub
fs
pop
mov
mov
int3
ja
pushf
fucom
xor
and
out
inc
rcll
enter
std
ss
xchg
ret
jmp
rcl
mov
aas
and
xor
ljmp
dec
xchg
pop
fwait
mov
repnz
jne
repnz
xor
or
xchg
or
mov
push
push
and
adc
nop
test
mov
cmpsl
clc
ficoms
insl
xor
aas
push
xchg
cli
daa
push
adc
scas
pusha
mov
mov
int3
jg
cmp
mov
ret
pop
fwait
fwait
lods
cld
xchg
xchg
sbb
pcmpgtb
push
ja
pop
imul
ret
out
xchg
ds
add
pop
ja
push
dec
cmpsl
mov
jne
repz
mov
mov
imul
or
loope
clc
pop
or
xor
mov
in
push
add
es
jp
int
mov
sbb
loopne
mov
lcall
or
sbb
outsb
inc
mov
mov
mov
movb
out
and
int3
mov
popa
repz
aad
xchg
loop
loopne
jo
xchg
push
aaa
in
test
inc
jno
inc
das
push
sahf
lret
test
dec
xchg
sbb
fldt
shll
cltd
cltd
out
jecxz,pt
mov
sub
mov
jne
or
pop
dec
imul
xor
mov
jl
xchg
outsl
js
jo
cmp
mov
mov
shr
pop
push
pop
ret
nop
sbb
bound
stc
stc
inc
jmp
repz
mov
cmovne
repz
fcompl
adcl
cltd
pop
xorb
mov
aaa
mov
roll
adc
jmp
stos
mov
lret
adc
punpckhbw
mov
push
xor
faddl
dec
popf
dec
xchg
mov
lock
nop
add
ret
xchg
movsb
insl
out
add
je,pt
out
jnp
and
std
xor
push
mov
sub
mov
pop
dec
pop
ret
pop
pop
out
sbb
or
loop
cpuid
scas
loop
mov
cmp
ja
js
pop
icebp
pop
rolb
inc
jecxz
clc
jg
or
sahf
js
lea
ja
mov
in
cs
and
rcr
lods
mov
in
cmp
repnz
sbb
test
ret
jmp
addr16
outsb
pop
sbb
push
jmp
js
push
mov
ret
dec
jp
int3
mov
daa
nop
adc
mov
xor
in
cmp
jne
or
or
popf
js
in
aas
push
jns
jmp
mov
lds
jmp
and
js
stos
out
mov
lods
and
js
cmp
inc
lea
jp
jno
pusha
xchg
mov
lea
ds
stos
push
ret
mov
clc
pop
adcl
cmc
lods
push
sub
std
jbe
cmpl
outsb
mov
cmp
hlt
dec
sahf
xchg
dec
adc
imul
push
dec
dec
jmp
test
dec
bound
test
repz
js
test
xor
addb
in
inc
push
cmp
mov
jnp
pop
in
rorb
push
mov
clc
mov
sbb
pop
repnz
out
es
mov
ljmp
pusha
dec
mov
ret
fsubrp
jmp
loope
hlt
jns
dec
dec
jle
in
sahf
fldl
lods
add
call
mov
cmp
call
pop
leave
and
and
roll
jecxz
sarl
push
mov
mov
inc
repz
pusha
and
push
sub
clc
fldcw
mov
sub
incb
jp
xor
jp
ljmp
and
xor
in
out
mov
daa
mov
pop
fmul
sbb
je
in
jne
enter
arpl
dec
adc
cmp
pop
or
stc
je
xchg
mov
push
int3
out
mov
adc
outsl
mov
cs
clc
loopne
cmp
cmp
jno
outsb
add
inc
inc
lret
rcrl
adc
mov
insb
dec
pop
cmp
mov
or
test
and
ret
xchg
in
and
adc
mov
xchg
aaa
roll
imul
rorl
jmp
jno
cmc
mov
insb
mov
addl
outsb
xor
add
jmp
add
xor
cmp
mov
addr16
scas
inc
sub
notl
hlt
xchg
sub
adc
push
jae
sbbl
fsubl
inc
arpl
aam
scas
sbb
cmc
ret
mov
mov
cmp
dec
inc
insb
nop
sahf
jnp
adc
mov
cmp
mov
bound
fidivrs
jecxz
jo
inc
jecxz
shll
jp
inc
idivl
lods
sahf
mov
add
and
in
movsl
xor
xor
fwait
in
cmp
inc
xchg
add
sbb
xor
test
push
push
sbb
lret
and
xchg
dec
sub
adc
pop
das
test
push
iret
shrb
outsl
sub
std
dec
dec
loope
mov
mov
int
sbb
jg
aam
das
jne
call
lahf
add
bound
push
sbb
jae
js
sub
sub
or
ja
mov
push
adc
sub
push
dec
or
mov
or
into
popa
xor
dec
std
in
sti
cli
sbb
stos
cmpsl
fucomp
cs
mov
push
inc
mov
pop
imul
int3
push
cli
cmp
xchg
hlt
inc
lods
rcl
xchg
pushl
xor
aad
notl
adc
adc
xchg
lock
cmp
out
es
sahf
rorb
cmp
nop
mov
jle
cltd
sub
xchg
dec
enter
add
sub
pop
mov
loop
div
sbb
cmpsl
inc
pop
cmpsl
sub
cmp
mov
leave
pop
mov
adc
cmp
xchg
testb
push
pop
mov
sub
mov
shrl
or
test
cmpsb
psrad
adcb
syscall
cs
insb
jle
pusha
insl
rol
lret
cmpsl
fistpll
int
and
mov
iret
inc
iret
cmpsb
jbe
sbb
push
push
xor
push
inc
fildl
cli
andb
movsl
adc
mov
mov
aad
ret
adc
lock
add
imul
sbb
adc
push
mov
faddl
push
xchg
adc
out
push
sub
outsb
out
out
shl
jo
dec
xchg
mov
ds
jo
dec
clc
xlat
inc
xor
pop
and
ret
cmp
jmp
addb
pop
xor
jmp
and
or
stos
loope
sti
mov
std
push
clc
sbb
ja
cmc
or
push
fsubs
into
dec
imul
inc
jns
xchg
sub
rcr
lea
mov
sbb
add
dec
sahf
les
adc
xor
sbb
dec
cmc
les
sub
fildll
jno
sbb
pop
jge
sub
sub
mov
xchg
leave
orb
lea
mov
mov
xor
inc
jg
lcall
std
scas
cmp
pop
xchg
punpckhwd
fistpl
sub
cltd
pop
pop
pop
mov
je
or
xchg
xchg
mov
or
fwait
pop
jp
inc
scas
test
mov
xor
iret
and
jae
mov
add
int
dec
cmc
xchg
test
lds
dec
fisttps
sbb
pop
xchg
inc
inc
dec
lods
or
in
mov
daa
mov
add
or
and
add
data16
push
movsb
cmp
adc
push
and
xchg
call
mov
dec
mov
stc
sbb
sbb
insb
sub
mov
loopne
bnd
imul
cmp
ss
mov
lds
mov
inc
test
cmpsl
dec
std
out
rcll
add
jecxz
jns
outsl
mov
mov
jp
aas
and
sbb
dec
scas
push
inc
or
mov
popf
push
jg
pop
ficoms
cld
cltd
bound
idivb
dec
lcall
scas
idiv
cmp
pop
mov
add
int
fsts
fwait
mov
add
fwait
mov
fstpt
bound
int3
xchg
pop
xor
mov
into
mov
mov
or
mov
aam
adcl
jle
xor
or
and
stos
or
cmp
jp
adc
mov
dec
ret
addb
std
insb
fdivs
orb
dec
dec
lcall
fwait
or
push
pop
stos
xchg
inc
or
rolb
movsl
mov
mov
stc
stos
mov
xor
mov
xchg
sbb
inc
pop
addr16
sub
xor
sub
call
mov
push
mov
xchg
push
pop
cmpsb
lea
jge
pop
ljmp
movsb
enter
outsw
sub
push
or
jecxz
movntq
mov
sub
xor
aas
movsl
cmp
cmp
faddl
mov
jg
xchg
out
pop
inc
pushl
in
shll
sbb
xorb
xor
mov
cld
pop
aam
jne
sahf
cwtl
mov
into
pusha
dec
jno
pop
adc
clc
mov
test
add
ljmp
or
lret
fstl
push
xor
loopne
pop
dec
aad
and
pop
add
xor
inc
es
dec
iret
out
add
out
in
in
pop
lcall
aad
mov
enter
cmpsl
mov
in
xchg
and
jecxz
pop
lock
mov
mov
and
scas
ja
dec
inc
sbb
add
jb
scas
lcall
or
or
mov
adc
cli
fisttpll
fstpt
push
sti
and
stos
adc
pop
lds
jnp
or
cmp
jne
inc
jmp
sti
and
stos
adc
pop
lds
jnp
or
cmp
jne
inc
jmp
cli
and
stos
adc
pop
lds
jnp
or
cmp
jne
inc
jmp
jmp
sub
icebp
outsl
imul
rolb
insl
testb
sbb
sub
cmp
aam
clc
add
addr16
push
stos
inc
mov
push
sti
push
sti
testb
sbb
sub
cmp
imul
push
stos
inc
mov
push
jmp
sti
testb
sbb
sub
cmp
imul
cmp
inc
aad
lea
arpl
subb
stos
pop
jg
sub
jle
or
lock
arpl
mov
inc
cmp
push
fwait
jecxz
test
addb
stos
cmpsb
sbb
fcmovnbe
stc
mov
cmp
mov
mov
push
lods
xchg
pop
out
pushw
aaa
testb
insl
xchg
dec
mov
adc
fwait
sti
ja
fs
sub
leave
xchg
sahf
xor
or
push
in
aam
ss
shlb
sahf
je
mov
push
cmp
inc
addl
or
or
je
push
rcrb
loope
repnz
outsb
inc
data16
add
or
sbb
sub
cmp
imul
push
stos
inc
mov
push
jmp
mov
mov
or
das
repnz
test
jbe
add
aaa
mov
inc
sahf
xchg
xorl
stos
pop
mov
jecxz
out
cmp
push
adc
aaa
jmp
aaa
scas
dec
dec
jp
jae
xchg
dec
out
mov
jns
pop
xchg
imul
push
stos
inc
mov
push
jmp
sti
testb
sbb
sub
cmp
imul
push
stos
inc
mov
push
jmp
sti
testb
xor
jmp
fdivrs
jno
add
jg
mov
push
mov
push
or
xchg
xor
push
out
sbb
adc
dec
mov
int
sub
and
shll
adc
push
xchg
or
inc
cmp
loope
xor
fists
in
mov
lcall
jo
adc
nop
cmpsb
mov
loop
movsl
xchg
xchg
cmp
mov
sbb
imul
ds
lock
inc
cli
in
mulb
mov
mov
mov
daa
scas
mov
imul
pushf
fld
int
dec
enter
add
jb
jo
add
xor
inc
mov
and
mov
xor
sarb
add
cli
jp
push
in
push
mov
xchg
mov
pop
fwait
data16
jecxz
imul
stos
xor
shl
lods
popa
dec
or
nop
adc
int3
cmp
outsb
pop
mov
jno
sbbb
mulb
mov
fdiv
xchg
cmp
jp
sub
rolb
or
jmp
les
jae
sub
sti
pop
sbb
xor
ret
xchg
inc
fs
mov
loopne
or
js
sub
roll
xchg
adc
pop
cmp
mov
mov
sti
dec
mov
xchg
sub
inc
inc
or
jl
dec
mov
mov
fsubrp
cmpl
mov
std
xchg
push
or
sbb
and
jecxz
call
ss
ljmp
push
adc
out
decl
push
push
sub
jnp
mov
or
les
aaa
mov
loope
inc
fs
sub
dec
rcll
clc
pop
outsl
test
push
ljmp
dec
cld
or
jbe
lret
cmpsb
icebp
lahf
testl
jo
int3
adc
in
outsl
dec
inc
dec
lock
jmp
inc
or
lods
adc
insb
sbb
sub
adc
aaa
out
xchg
sub
or
addr16
fucomi
inc
aaa
sub
insl
jns
inc
push
mov
cmp
mov
inc
dec
xor
pop
add
dec
inc
into
xor
fimull
test
test
pop
loope
mov
xchg
pop
push
dec
test
jbe
push
orl
out
mov
pop
cmp
jo
inc
jns
icebp
push
aaa
dec
daa
out
and
xchg
loope
lods
repnz
lock
mov
subl
or
je
daa
in
push
aaa
sahf
lods
mov
dec
sahf
add
out
aas
mov
xchg
clc
test
mov
or
mov
inc
add
lss
inc
xchg
roll
sarl
and
jge
enter
jmp
push
and
jp
outsb
jg
je
cmp
jg
aam
sub
pop
inc
push
push
stos
jmp
in
mov
jo
lahf
js
add
and
and
dec
add
inc
ds
push
pop
aaa
inc
stc
mov
push
insb
xlat
lds
out
out
xor
popf
dec
nop
ljmp
repz
pusha
out
ss
in
fmull
std
dec
popa
daa
mov
push
xlat
xchg
ja
daa
iret
fwait
add
je
sub
arpl
sub
jbe
mov
jbe
inc
js
jbe
imul
rcpps
lock
out
inc
or
inc
in
fstp
jns
sub
dec
inc
mov
mov
mov
inc
or
adc
jne
arpl
xor
mov
test
mov
insb
jno
clc
scas
cmp
jle
mov
fimull
jbe
dec
std
or
lods
cwtl
mov
push
pop
jl
js
insl
inc
fisubrs
pop
stc
mov
xchg
jbe
cwtl
movsb
lcall
inc
cmp
lods
push
inc
int
loopne
sti
out
sub
sub
xor
cmp
lds
sbb
std
mov
mov
fstps
loopne
out
push
movsl
cmp
mov
fisttpl
adc
in
xor
push
adc
lret
cld
stc
mov
sahf
push
and
pop
and
cmp
jl
add
cld
adc
push
ss
and
dec
inc
popf
mov
gs
or
xor
adcl
lcall
inc
dec
push
add
mov
dec
sub
pop
xchg
jmp
xchg
mov
mov
dec
test
std
sarb
cltd
and
push
out
mov
outsb
push
xchg
mov
arpl
roll
mov
lods
jge
mov
jmp
popf
rcl
loopne
push
test
testb
push
lret
cmc
jge
fldenv
inc
push
pop
push
sub
jecxz
mov
mov
rolb
jmp
shrb
mulb
popf
add
fdivrl
add
in
ret
lahf
pop
pop
push
hlt
inc
lahf
cmpsl
aaa
pushf
mov
mov
and
call
loop
aaa
addr16
cmp
lret
sbb
xchg
mov
addl
or
aad
enter
dec
pusha
mov
mov
std
pushl
repz
or
les
std
mov
cmp
lock
insb
jb
test
and
mov
gs
lret
jl
xchg
test
dec
push
aad
xchg
jne
movsb
fidivrl
cmp
pop
push
mov
push
dec
dec
insb
dec
sahf
fwait
push
and
mov
sub
push
add
cmpsb
mov
stc
push
xchg
shr
xchg
nop
lcall
insl
sti
add
xor
into
mov
insl
cmpsb
lahf
mov
xor
in
test
mov
dec
jb
pop
xorl
repz
outsb
ficompl
xchg
leave
insl
fisttps
cmpsl
orb
xchg
decl
data16
sbb
rolb
pop
xchg
cmpsb
push
stos
loopne
adc
or
fnstenv
lret
inc
pop
push
mov
ss
repz
mov
pop
mov
jg
or
enter
mov
pop
mov
mov
jmp
mov
out
cmp
imul
mov
out
lods
mov
cwtl
je
xor
jle
idivb
popa
mov
cmp
push
roll
lcall
out
and
pusha
sub
inc
adc
dec
sub
inc
daa
inc
mov
leave
int
or
dec
outsl
stc
es
mov
lcall
fsubs
mov
data16
push
mov
stc
fstps
cltd
je
jmp
loope
jle
mov
mov
loopne
adc
leave
cmp
mov
cmp
xor
shl
rcr
cs
inc
and
icebp
xchg
call
fstl
movsl
xlat
adc
addl
movq
loopne
sbb
sbb
push
mov
std
mov
jecxz
adc
add
xchg
int3
fnsave
lods
js
xchg
pop
je
push
pcmpeqw
bound
adc
sbb
sbb
scas
sbb
imul
incl
cmp
push
inc
sahf
xchg
enter
fst
push
test
pop
sbb
nop
in
mov
data16
fcoml
pop
mov
iret
in
movsl
shr
jnp
dec
inc
sbb
dec
lret
in
add
xchg
arpl
rcr
popf
loope
pop
jp
add
rcr
test
adc
shr
ss
ficomps
xlat
push
push
and
inc
cmpsl
pop
rorl
jae
test
xchg
das
aaa
adc
aas
xchg
orb
lea
xchg
push
adc
mov
nop
push
xor
fs
lret
dec
fstpl
jb
out
xor
faddl
dec
adc
mov
mov
bound
cmp
sub
mov
adc
pop
or
pop
cwtl
add
push
xor
pop
out
out
pop
cltd
imul
mov
jae
pop
dec
daa
scas
adc
push
pop
or
lock
xor
mov
cmp
jle
mov
add
or
xor
mov
repnz
push
mov
arpl
imul
cmp
fwait
add
mov
push
icebp
call
dec
shrb
out
fistpll
mov
adc
pop
adc
cmpsb
push
stc
pop
mov
xlat
or
xor
rcll
pop
mov
test
int3
lahf
push
repnz
xor
cmc
cmp
jnp
pop
dec
hlt
sbb
dec
push
sub
push
push
push
dec
cmpsl
ja
or
pushf
fstl
and
xor
inc
xchg
lea
push
fisttpl
xor
lahf
mov
cmpsl
ret
cwtl
ja
xchg
out
addl
adc
mov
loopne
cmc
add
lcall
cli
pushf
test
mov
jp
iret
in
mov
push
andl
lret
jg
inc
daa
lret
mov
mov
push
nop
sbb
sub
out
jp
test
jmp
sbb
inc
int
push
inc
cmp
or
in
sbb
sub
mov
mov
ja
mov
pusha
out
sub
cmp
lds
cmp
xchg
out
jg
scas
push
push
xor
mov
faddl
dec
jp
icebp
xchg
icebp
nop
adc
inc
pop
jge
je
inc
in
clc
icebp
sar
xchg
mov
hlt
dec
or
lret
adc
rcll
add
xchg
stos
pop
push
mov
inc
push
xor
or
mov
push
mov
pop
mov
add
cmp
loopne
dec
sub
push
pop
ficoms
ret
adc
jmp
lods
loopnew
dec
es
inc
sbb
xchg
out
mov
inc
stc
cs
or
dec
xchg
out
mov
lret
or
das
call
push
lock
xchg
add
lret
adc
mov
jns
cmp
jmp
xlat
enter
adc
das
out
test
fidivrs
adc
stos
pop
jae
in
jmp
sahf
xor
ftst
mov
imul
xchg
sbb
adc
lret
daa
jle
mov
cli
loop
cli
or
sub
stos
or
fnstsw
add
xor
jmp
ja
repz
and
cmp
push
ds
data16
daa
lods
movsb
testb
push
data16
pushl
mov
mov
push
push
pusha
push
rol
adc
mov
add
xlat
dec
fsubrs
cmp
cmc
lret
mov
jnp
cmp
xchg
bound
lret
lahf
jmp
add
sbb
cmpl
movsl
pop
sbb
cmp
jns
jnp
or
push
and
mov
fsubs
cs
arpl
xor
test
fisubrl
push
xlat
xor
xor
notb
out
xlat
subb
inc
xchg
mov
lock
add
lods
dec
in
out
push
mov
in
clc
push
outsb
movsl
ljmp
insl
fistl
sub
mov
lahf
cmpsl
adc
mov
push
arpl
cld
leave
xchg
and
jnp
push
sub
std
cmp
mov
test
in
cmp
in
pop
test
or
inc
xor
enter
push
push
jmp
jo
xchg
mov
sub
dec
fadds
pop
dec
xchg
xchg
idivb
inc
jno
jecxz
or
jne
cs
sahf
sbb
and
psubb
cmp
mov
ja
lahf
mov
fstpl
ret
mov
sub
popf
lods
repnz
adc
jne
lea
test
aas
icebp
jmp
testb
dec
mov
stos
mov
xchg
repz
fistl
mov
cld
pusha
sbb
push
push
test
sub
add
pop
loope
jns
jg
cmp
idivb
dec
rclb
jl
ljmp
xor
adc
out
aam
out
inc
movsl
je
push
sbb
xchg
test
cli
ss
out
roll
pop
and
nop
xor
rorl
sbb
add
test
loop
add
test
mov
mov
dec
lock
push
ret
pop
push
rcrl
xchg
xchg
mov
dec
mov
jle
dec
dec
shll
mov
imul
into
sahf
mov
push
loopne
in
xor
insb
inc
xchg
mov
movsb
clc
mov
mov
pop
mov
sti
cltd
popf
aas
push
sti
pop
or
dec
adc
add
mov
fdivr
imul
cmc
sbb
stc
cmpsl
xchg
sti
addr16
jmp
push
sub
push
in
movsl
das
in
adc
insb
mov
mov
and
clc
fwait
imul
xchg
imul
lock
mov
cld
int3
stos
push
adc
sub
push
cmp
cs
xchg
into
popa
mov
popf
cmp
scas
or
dec
cmpsl
iret
insl
stos
lods
mov
push
and
ljmp
and
jp
mov
and
subb
sbb
sbb
cmp
test
insb
stc
sbb
cmp
pop
xchg
cmpsl
mov
arpl
sbb
mov
js
cmp
aaa
adc
add
mov
jl
xchg
cmp
mov
das
push
les
in
xor
xchg
pushf
push
lea
out
mov
and
xor
ds
add
aaa
push
pop
xchg
cmp
mov
fildl
stos
ja
dec
adc
mov
inc
call
imul
xor
push
add
push
sti
adc
icebp
push
xor
dec
rol
int3
fabs
ds
ja
mul
rclb
into
aad
or
mov
or
or
xchg
jl
inc
outsl
fidivs
clc
sub
addr16
rolb
or
aam
jp
mov
lods
dec
inc
lods
push
rcr
rdpmc
rcrl
outsl
mov
ja
jbe
xchg
fildl
aas
adc
adc
pop
imul
fnstsw
mov
mov
pop
dec
js
jle
imull
jne
push
lock
je
cwtl
rclb
es
inc
mov
repz
pop
insl
into
add
inc
adc
sbb
jne
inc
movsl
testb
sub
sets
int
imul
test
mov
std
sti
jle
mov
call
div
dec
rorb
pop
data16
xchg
stc
xchg
cmpb
pop
or
imul
aas
jecxz
cmc
imul
mov
jp
ret
imul
sub
loop
xchg
mov
sarb
xor
ficomps
push
out
mov
pop
cmpsl
cmp
adc
mov
lea
push
or
enter
jge
jle
push
adc
jbe
int3
insl
adc
lret
inc
fistps
pop
cwtl
mov
leave
xchg
imul
cltd
mov
inc
push
push
dec
std
dec
movl
ljmp
xchg
repz
or
or
inc
je
gs
push
inc
pop
inc
xor
hlt
mov
jmp
xor
fs
clc
and
push
jge
add
and
and
fiaddl
les
je
push
in
pushf
sahf
mov
imul
daa
mov
fcmovnu
out
pop
or
mov
dec
or
insl
stos
fsub
xor
and
cmp
or
imul
jle
mov
lock
shrl
ja
stos
xchg
xchg
or
into
dec
shlb
repnz
pop
in
jmp
das
jae
lods
inc
int3
aad
cmp
sbb
sbb
fistpll
scas
dec
xchg
dec
lret
out
sbb
push
xor
ljmp
push
adc
in
add
push
mov
push
and
or
flds
dec
mov
or
xchg
gs
sbb
lock
adc
out
mov
mov
negb
sahf
js
jo
adc
xor
pop
jle
or
mov
and
into
xchg
enter
jno
lods
jne
pop
xchg
jle
inc
test
pop
test
and
repnz
lcall
mov
jecxz
rcrb
jnp
and
movsb
dec
ja
fs
xchg
add
lds
roll
mov
popf
jmp
iret
xor
jp
outsl
sub
sbb
jns
scas
sarl
inc
data16
fcomi
xchg
into
dec
sub
xor
pop
or
mov
mov
test
cmp
lods
pop
incb
sti
nop
cmp
shr
fldt
xchg
mov
out
iret
pushf
sub
outsl
ja,pt
mov
aam
mov
stos
mov
mov
add
lods
incb
bound
jns
push
add
mov
xor
or
fistps
xchg
push
repnz
push
pop
jp
out
jle
xor
sbbb
dec
and
dec
mov
inc
mov
pop
pop
inc
cmc
data16
pop
outsb
dec
sarl
scas
faddp
rcr
jae
je
outsl
pop
lahf
lcall
and
hlt
xchg
sub
adc
ss
sti
pop
lret
cmp
jmp
pop
push
mov
jmp
and
icebp
pusha
mov
push
push
stos
addb
out
pusha
repz
pop
xchg
imul
cmp
aam
dec
aam
pop
stc
lret
mov
cmp
cld
mov
test
aam
or
pop
ja
xlat
js
mov
pop
jb
cmp
jae
jecxz
and
test
lods
push
jl
ja
push
je
hlt
mov
sub
in
imul
rolb
cld
add
xchg
loopne
mov
pop
shrb
mov
push
rclb
shrb
out
xchg
das
mov
xor
pushf
das
dec
push
mov
or
push
mull
pop
push
adc
cmp
cmp
cs
int3
aam
mov
ss
enter
mov
lods
cwtl
push
rcll
pop
xor
stos
in
push
inc
call
inc
daa
ljmp
dec
xchg
mov
cmp
jmp
std
lods
daa
in
xchg
adc
cmp
mov
xchg
mov
pushf
daa
jg
cld
int3
and
jo
cltd
int
mov
es
jl
ljmp
sahf
mov
shlb
enter
jo
xchg
mov
insl
cmp
pop
fimuls
xor
mov
sti
je
mov
mov
bound
mov
push
dec
sbb
jmp
push
and
fimull
inc
cmpsb
push
jne
rorb
or
pop
inc
mov
popa
out
adc
xchg
ret
mov
sbb
mov
xchg
xor
mov
adc
mov
add
jmp
fists
inc
ret
jle
add
fdivl
mov
xchg
insl
inc
fwait
out
shrb
pop
add
pop
xchg
fstpl
fwait
mov
mov
test
rcrl
or
add
or
pop
dec
jo
cld
mov
lods
xor
in
dec
add
fsts
adc
pop
cltd
inc
adc
and
pop
cwtl
xorb
xor
fisubs
icebp
push
push
push
cwtl
pusha
popa
sarl
add
dec
mov
out
clc
sbb
xor
inc
cmpb
and
lods
insb
mov
hlt
dec
fisubrs
cmpsb
scas
dec
lock
int3
jp
adc
mov
add
mov
dec
out
mov
pop
fcoms
rclb
mov
stos
mov
and
push
cs
xchg
imul
lret
in
nop
inc
jge
into
xor
bound
les
bound
enter
int
ret
out
pop
jp
movsl
xor
or
test
sti
xor
ror
lods
jbe
js
scas
dec
or
out
jmp
adc
movaps
ljmp
sub
or
rcrb
adc
sti
or
ret
jae
loop
adcl
and
lahf
orb
inc
es
sub
pop
int3
mov
cmp
mov
inc
and
dec
call
pushf
jns
mov
cmp
jmp
cs
xlat
lahf
xchg
subb
sub
shl
dec
int3
dec
lock
adc
ja,pt
adc
fisubs
push
add
repz
fwait
push
pop
lret
pop
cmc
jle
sbb
mov
fucom
imul
ret
sbb
rcrb
mov
mov
ss
dec
icebp
jnp
jnp
pop
pop
cli
repz
xor
insl
pop
mov
and
aam
lods
adc
adc
or
out
outsl
das
out
xchg
mov
sarb
cli
mov
inc
mov
rcrl
xchg
outsl
fldenv
loope
enter
xchg
scas
lret
push
xchg
cmp
pop
or
aam
xchg
hlt
sbb
and
add
jl
pop
bound
daa
sub
inc
mov
push
ljmp
popa
movsb
fmull
das
ljmp
lcall
pop
ljmp
cmp
imul
push
stos
inc
mov
push
jmp
sti
testb
sbb
sub
cmp
imul
push
stos
inc
mov
push
jmp
sti
testb
sbb
cmp
dec
cmpsb
pop
xchg
imul
jbe
data16
push
stos
inc
mov
push
jmp
sti
testb
sbb
sub
cmp
imul
cld
stos
inc
int3
inc
inc
push
and
adc
add
scas
and
jo
pusha
les
movd
jg
and
loopne
loop
nop
loop
shlb
inc
adc
pusha
jo
pusha
add
inc
and
rorb
push
shlb
cmp
push
js
dec
sub
test
test
loopne
rorl
mov
adc
jmp
jmp
xchg
scas
xchg
ss
pop
dec
sbb
fdivs
or
mov
filds
push
fwait
pusha
aad
aad
xor
loopne
loopne
adc
aas
in
iret
scas
fadd
jecxz
inc
add
inc
in
fildl
out
pop
add
sbbb
dec
shlb
jo
push
xor
scas
push
mov
pop
loopne
pop
cmp
lret
lods
mov
xor
sbb
pop
data16
loopne
das
mov
pop
fcomps
mov
mov
shrl
lock
mov
rorb
mov
push
cmp
pusha
add
adc
push
sub
test
jmp
clc
xchg
lret
les
inc
jne
je
add
outsb
sbb
mov
in
lock
test
mov
sub
jg
jo
sbb
pusha
xor
adc
lds
lock
out
cmpsb
fsubl
jl
push
add
inc
and
lock
nop
loopne
shlb
and
jo
pusha
jo
pusha
add
inc
and
lock
nop
loopne
shlb
xsaves
sub
test
xchg
inc
loopne
jl
popf
in
or
mov
cwtl
popf
scas
enter
inc
sub
push
dec
cmp
jae
popa
fmulp
dec
and
cmpsl
pop
fwait
or
sub
outsb
movsl
inc
cwtl
cmp
mov
adc
and
scas
or
popl
push
or
xor
or
hlt
fadds
mov
pusha
add
mov
xor
xor
cmp
add
sbb
ss
fisubrl
sbb
fidivs
pop
xchg
insb
cmp
into
add
fsubl
cmp
outsb
into
push
je
pop
or
and
test
jg
ret
addr16
insb
clc
xor
pusha
mov
sahf
aad
loop
add
test
repnz
mov
or
push
leave
or
daa
testl
das
fisubs
jmp
xchg
sub
xchg
incb
dec
jge
or
in
inc
inc
jmp
push
pop
adc
jmp
mov
adc
push
arpl
pop
aam
rclb
xor
pusha
test
xchg
sub
rorl
xchg
mov
push
lret
pop
mov
adc
cmp
lea
dec
or
test
jno
lcall
or
xchg
dec
in
ljmp
mov
push
stc
pop
push
les
inc
mov
in
movsl
push
out
mov
in
outsb
jmp
sub
inc
dec
sarl
cmp
push
cmpsb
sub
and
xor
jmp
jmp
shlb
jno
jmp
repnz
stos
push
inc
adc
das
inc
aaa
shl
xchg
enter
and
xchg
mov
jp
sti
and
mov
es
jne
fstpt
push
and
jmp
in
xchg
orl
icebp
add
sbb
jg
and
je
sarl
sahf
data16
or
xlat
cmpsl
std
nop
ret
mov
push
fimuls
mov
add
lcall
aad
movsb
push
fs
sub
mov
mov
stos
dec
aam
jb
xor
xor
push
inc
int3
shrl
pop
push
push
push
es
or
inc
aad
dec
mov
inc
sbb
fistpll
test
repnz
lcall
xor
mov
lds
push
out
pop
jle
ror
jno
loope
xor
enter
sbb
out
ds
sub
jl
sbb
cmp
shrl
mov
adc
aaa
mov
cmp
mov
sarl
cmpsl
or
call
jne
movsb
sub
and
ret
iret
pop
enter
jnp
imul
sub
pop
or
push
rcrl
inc
fisubrl
sarl
cmpsb
shl
pusha
lret
out
rorb
xlat
or
xchg
mov
jmp
cmpsb
cltd
out
jecxz
popf
xchg
mov
icebp
repz
add
sub
rolb
loopne
sahf
test
add
scas
sti
inc
mov
dec
cmp
pop
aas
xchg
push
sub
mov
cmp
push
fwait
adc
int3
push
nop
cli
insl
shl
mov
test
loope
pop
or
mov
pop
sub
inc
push
inc
mov
add
push
roll
std
mov
xlat
sub
inc
out
fsubp
mov
mov
jp
movsl
sub
xrelease
loopne
xchg
push
adc
js
lods
cmp
rorb
clc
mov
ja
out
adc
cmp
jnp
sub
call
mov
lods
push
aad
inc
inc
scas
sub
cwtl
mov
or
fwait
popf
stc
xchg
enter
jecxz
in
mov
stc
mov
cli
lcall
dec
dec
mov
or
fs
add
xor
pop
sbb
mov
ja
addb
xor
pop
jl
lahf
sub
out
divl
jmp
sub
pop
inc
mov
jp
pop
sub
jge
out
pop
pop
shl
imul
mov
mov
lock
fldenv
push
outsb
push
vmread
jb
mov
and
fisubl
jne
add
test
aam
popf
fimull
dec
add
jne
rcll
pop
ljmp
mov
insl
rcll
cmpsl
out
sar
push
sbb
sarb
jae
std
and
outsb
insb
inc
adc
and
jae
jl
addr16
je
dec
test
pop
rcr
sub
pop
out
rolb
lods
mov
cmp
jns
test
out
fadds
fucom
ljmp
inc
lcall
popf
inc
lcall
lea
fadd
push
inc
adc
pushl
jge
and
loope
sti
mov
repnz
mov
test
fildl
outsb
sbb
jg
repnz
fbld
mov
push
or
cmp
lahf
jg
sbb
cmpsl
in
push
cmp
scas
sub
andl
lods
push
jno
xchg
add
outsl
dec
mov
shll
push
xchg
jg
xchg
push
in
mov
jecxz
mov
mov
test
fwait
sub
call
cmp
ret
aad
pop
movsb
insl
jp
jg
mov
lret
lods
ljmp
movsl
outsb
subl
or
je
adc
adcb
imull
push
add
jbe
push
cmp
shlb
push
pop
mov
mov
jne
mov
mov
inc
cmc
mov
push
mov
clc
sub
lret
fsubr
or
or
dec
and
mov
mov
add
test
mov
jl
loope
aad
icebp
jo
mov
jns
mov
xchg
lock
sahf
and
arpl
sbb
sub
push
sarl
cmp
fs
pop
bound
scas
lock
cmp
mov
sbb
fs
pop
xor
jns
lahf
pop
lods
mov
cwtl
adc
mov
cltd
cmp
sub
and
adc
ficompl
push
push
mov
push
pusha
mov
lock
outsb
add
ss
inc
mov
mov
cli
inc
lea
dec
loopne
jo
mov
test
adc
out
inc
pushf
inc
sbb
in
jbe
add
cwtl
out
or
push
dec
mov
lds
inc
inc
mov
cli
icebp
mov
jbe
jmp
es
aam
clc
inc
sbb
xchg
js
and
fs
das
ss
mov
xchg
adcl
enter
mov
fs
push
xchg
inc
das
inc
sbb
push
sbb
je
mov
stos
out
arpl
push
xor
fiadds
dec
inc
rol
iret
jl
test
cmc
inc
dec
ja
xor
jecxz
xor
dec
bound
test
scas
popa
mov
xchg
xchg
rorb
mov
out
push
push
dec
push
inc
cmp
dec
pop
insb
mov
xlat
aam
test
out
test
movsb
leave
test
repz
xchg
or
cmp
imul
xor
or
mov
iret
xchg
adc
leave
in
shll
push
rolb
aad
add
fwait
stos
shlb
ds
or
in
stos
mov
mov
add
xor
bound
es
xchg
mov
or
int3
adc
sub
iret
imul
popa
sub
mov
jge
dec
jge
shrb
insl
add
gs
sub
and
loope
mov
outsl
xor
dec
pop
jecxz
test
insb
jns
pop
inc
sub
pop
sbb
mov
xor
fldl
hlt
sbb
sub
jne
dec
and
mov
inc
inc
cmpsl
and
mov
xchg
in
push
out
dec
inc
inc
movsl
and
fwait
inc
lods
mov
mov
mov
inc
xor
lahf
test
insl
jbe
icebp
filds
and
lahf
mov
cmpsb
mov
mov
push
leave
inc
jbe
fldl
lock
push
in
scas
pop
out
cltd
jbe
sub
xchg
push
fs
or
shlb
cmc
push
sub
leave
cmp
mov
dec
outsb
pop
ss
pop
mov
cmp
stos
push
sub
lret
push
fcomp
push
adcl
stos
stos
lds
mov
dec
shrl
inc
mov
dec
push
pushf
inc
jo
mov
sbb
bnd
popa
arpl
xchg
lods
xor
lods
pop
lods
filds
shl
adc
dec
hlt
and
stos
mov
mov
std
stos
mov
xor
lcall
xor
dec
insb
test
mov
scas
movsb
lock
pop
and
mov
loop
mov
xor
in
pop
scas
sub
xor
push
xor
sbb
lods
lgdtl
sbb
sbb
lea
mov
or
rorb
xor
mov
mov
inc
inc
inc
adc
mov
sbb
in
and
es
push
clc
adc
test
pop
frstor
sub
stos
rorl
out
xchg
gs
pop
adc
push
or
sub
jne
ds
outsb
pop
add
insl
push
iret
aaa
mov
cli
fisttpll
andb
aas
outsb
jg
fiadds
mov
adc
popf
adcl
cmc
jno
and
dec
or
xchg
jle
mov
repz
xchg
jnp
cltd
mov
cli
inc
aas
fistpll
jl
push
adc
and
scas
xchg
pop
shrb
pop
lret
lods
es
xor
push
push
jp
xchg
push
mov
lods
inc
cmp
pop
movsb
in
jae
mov
fs
adc
dec
out
loope
dec
inc
push
push
mov
inc
pop
out
mov
popa
adc
shrl
cmp
or
sub
loope
repz
add
fiaddl
xchg
in
out
icebp
outsl
fnstenv
xchg
jns
lcall
mov
sub
jb
ljmp
stos
sbb
or
iret
arpl
pop
arpl
adc
xor
pop
pushf
mov
push
out
mov
fwait
pop
push
aaa
pop
popa
in
and
aaa
mov
in
int
rcrl
test
push
js
and
pusha
adc
test
xorl
shlb
ja
ficompl
xor
mov
out
pop
orl
mov
mov
clc
dec
cmpsb
push
and
pop
cmpsl
stc
mov
pop
lcall
push
mov
dec
adc
adc
fldt
xchg
mov
jp
or
test
push
imul
pop
mul
pusha
mov
push
popa
inc
push
outsl
adc
sbb
xchg
cmp
xchg
outsl
mov
nop
mov
lea
xchg
out
out
mov
mov
mov
mov
cmc
push
dec
cmp
mov
outsb
test
xchg
cmp
jg
cltd
dec
imul
jmp
lock
dec
xor
xor
pop
cmp
pop
push
in
out
aam
cli
mov
mov
andl
fcoml
hlt
movsl
stos
adc
inc
cmp
loope
sub
push
addb
cmc
mov
mov
dec
imul
pop
dec
xchg
xchg
jne
cmp
jge
and
xchg
add
cmpsb
cmp
or
lret
in
test
sbb
jl
jmp
adc
jnp
pop
cmp
pop
es
sbb
leave
pop
out
jbe
push
mov
decb
xor
cmp
and
xor
mov
and
shll
and
dec
push
je
orl
dec
adc
sbb
adc
mov
pop
sbb
dec
int3
sub
in
addb
inc
xor
adc
dec
sbb
sbb
push
in
fisttps
mov
jp
int3
rolb
xchg
out
inc
push
sbb
add
xchg
mov
sbb
loope
dec
mov
inc
xchg
inc
ja
fisubl
ja
mov
inc
into
pop
mov
jg
cmp
mov
outsl
cs
outsl
pop
bound
stos
lock
lock
add
stos
xchg
push
xchg
sbb
inc
pop
ret
shlb
sbb
cmc
loope
cmp
loope
or
testl
cmp
xchg
sbb
in
mov
add
roll
test
adc
mov
sbb
cmp
xchg
cmp
add
add
mov
jle
arpl
jo
add
mov
jp
movsl
mov
insl
push
lret
in
and
pop
xlat
fistl
jne
mov
cmp
aas
push
ret
sbb
mov
or
mov
mov
jbe
test
jle
lods
push
and
out
adc
adc
sub
add
mov
and
cmc
in
push
xchg
test
sbb
pushf
add
xchg
jg
fsub
push
lahf
pop
adc
mov
sbbb
mov
adc
mov
loop
ret
dec
fbstp
jl
mov
dec
pop
dec
fimull
mov
js
inc
addb
in
and
lsl
ret
lahf
movsb
aas
adc
push
inc
insb
dec
aas
in
rcr
adc
ljmp
cli
adc
in
mov
cld
push
and
inc
mov
adc
es
imul
js
addr16
dec
movsl
add
arpl
jo
xacquire
jle
cli
mov
outsb
xor
insl
cmpsl
fisubl
call
xor
outsl
adc
ljmp
push
mov
jp
rcr
cmpsl
clc
mov
popa
lcall
das
aas
aaa
xchg
dec
push
inc
cmp
in
jne
pushf
flds
nop
cmp
jmp
cmp
cmp
jbe
cmp
fmuls
xlat
into
dec
js
pusha
out
fmuls
testl
decl
jl
mov
stc
movsb
lret
loopne
iret
mov
shrl
push
push
xor
jbe
mov
ljmp
cld
cmp
mov
xor
daa
arpl
test
jbe
xor
pusha
pop
cltd
xchg
dec
lret
or
je
mov
sbb
jbe
fstp
out
sub
in
cmp
shl
adc
jne
and
rcr
cmc
mov
mov
test
add
ret
inc
push
out
test
sbb
stos
cmp
mov
jo
jmp
int3
out
dec
jmp
inc
das
imul
pop
enter
jnp,pn
push
imul
sbb
mov
push
adc
ja
pop
ds
sahf
outsl
xorl
cli
sub
notb
mov
pop
mov
icebp
or
repnz
loopne
xchg
loope,pn
mov
stos
dec
psraw
mov
xchg
mov
subl
out
std
push
rcll
cmpb
outsb
loopne
movsb
hlt
stos
and
insb
or
and
gs
out
jmp
int3
push
fstps
xchg
repz
sbb
mov
jnp
mov
mov
xchg
aaa
test
jp
pop
cmp
push
mov
in
sbb
adc
scas
sbb
jle
shl
mov
sbb
scas
add
cmp
dec
mov
and
scas
mov
loop
popa
insb
in
inc
jecxz
fwait
mov
and
and
mov
pop
je
inc
and
pusha
enter
jae
loop
xchg
push
push
cmp
mov
jp
int3
add
push
jmp
xlat
xchg
fildl
mov
pop
iret
int
jno
testl
addb
push
insb
icebp
test
dec
loope
jg
ret
jge
fidivrs
js
clc
sub
push
add
int3
xor
dec
repz
mov
push
or
lods
inc
stos
mov
subb
add
fwait
or
inc
sbb
in
enter
sbb
xorl
repz
int3
xchg
add
lods
push
icebp
inc
sbb
xor
stc
or
addr16
iret
adc
dec
dec
call
insb
arpl
aad
test
inc
sub
movsl
dec
mov
add
mov
movsl
push
fdivrl
xor
shlb
scas
xchg
push
push
rcrb
ss
pop
shrb
je
and
decl
and
xchg
outsl
shl
pusha
mov
xor
cmp
xor
jp
popa
flds
cmp
repz
fadds
testb
into
xor
imul
and
idivb
js
inc
cmpsb
mov
cmp
pop
sub
addr16
mov
lods
sbb
rorb
adc
sub
stos
mov
push
xchg
jp
fstps
push
and
jmp
inc
jle
sub
popf
sarl
dec
inc
imul
mov
xor
adc
arpl
mov
mov
lret
jno
push
insl
das
dec
test
or
movsb
lock
and
je
fldcw
mov
cld
jb
stos
pop
jno
sbb
dec
in
fwait
es
in
lea
inc
inc
push
cmp
add
push
ret
cmp
mov
mov
add
xchg
mov
add
repnz
das
ficoml
lcall
cmp
sbb
or
out
dec
addr16
pop
jbe
ret
add
pop
rorl
imulb
shrl
dec
xchg
test
pusha
inc
imull
cmp
insl
pop
adc
sti
rcrb
jno
add
push
negl
int3
aam
dec
js
cmc
movsl
fcompl
sbb
lock
sub
inc
jle
cltd
ret
in
shll
jnp
adc
scas
mov
sbb
push
dec
mov
iret
push
jg
add
out
nop
call
stos
outsl
inc
add
add
addr16
mov
mov
out
scas
push
ljmp
adc
lret
push
jnp
cmp
sub
cmpsb
into
push
inc
aad
mov
jo,pt
xchg
jbe
push
mov
cmp
cmc
mov
repnz
or
cmp
xchg
mov
ja
pop
and
ds
dec
in
mov
xorb
dec
mov
mov
push
leave
sbb
das
adc
std
icebp
mov
testl
sti
xorl
push
les
ds
mov
shrb
push
dec
fdivrl
cmp
popf
lret
jg
jge
int
int3
imul
mov
in
pusha
icebp
bound
das
out
push
mov
jno
mov
push
adc
andl
mov
cli
mov
sub
xor
xor
lock
jno
inc
or
and
xchg
imul
mov
in
ljmp
fs
push
cmp
adc
push
loopne
xor
push
xor
mov
mov
pop
loope
and
mov
aam
sarb
jbe
sub
in
and
cmp
decb
add
sar
mov
mov
and
das
imul
aas
inc
mov
lahf
sub
cmp
dec
les
xor
outsl
jmp
sti
imul
cmp
popf
dec
mov
push
frstor
pop
sbb
std
mov
and
mov
iret
bound
add
xchg
test
bound
es
inc
dec
xor
push
add
imul
mov
dec
out
test
jb
mov
fsubl
or
cmp
ret
test
mov
mov
sahf
xchg
mov
pop
cmp
popa
popf
ljmp
stc
mull
movl
in
js
ret
jns
xor
cmpsl
xor
popf
or
std
lahf
jnp
mov
cwtl
mov
push
roll
xor
fsubs
sahf
mov
push
or
push
or
rcr
movsb
xor
cs
xor
push
push
adc
and
lret
nop
cltd
stc
out
movl
push
sbb
pop
scas
imul
repz
mov
add
xchg
mov
clc
daa
pop
adc
mov
out
pushl
push
push
popf
outsl
mov
cmpsl
mov
mov
test
xchg
fimuls
and
xorb
addr16
or
inc
jae
in
fs
vmwrite
mov
sub
mov
das
jns
add
sti
xchg
std
dec
push
sbb
cmp
pushf
das
inc
xchg
cs
movl
cmp
push
inc
add
add
add
dec
sarb
xor
inc
mov
cmp
inc
pop
jp
inc
lret
cmp
ret
fstpt
lds
add
sbb
sbb
and
loope
ss
mov
leave
pop
js
scas
addr16
sub
lret
pop
ja
push
mov
insl
inc
das
data16
jge
xor
lods
loope
lods
sti
jecxz
popa
mov
inc
lret
jbe
mov
pop
pop
test
lret
pushf
xlat
mov
mov
pop
cmpsl
fsubs
inc
lds
lahf
sbb
in
jl
fs
pxor
ret
xor
int
fidivrl
cmc
xchg
add
cmp
dec
repz
lahf
add
adc
push
xor
mov
mov
loopne
nop
loopne
shlb
and
jo
pusha
jo
pusha
add
inc
and
lock
nop
loopne
shlb
and
jo
pusha
jo
pusha
add
inc
and
lock
nop
loope
shlb
and
jo
pusha
jb
pusha
add
xor
and
pop
push
lock
dec
aas
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
jns
push
ljmp
mov
fsts
jmp
fnstcw
mov
mov
imul
pop
stos
jns
or
sbb
sub
cmp
ret
or
sbb
gs
pop
test
sub
popa
int
sti
add
leave
or
cmp
sbb
cmp
cmp
pop
fisubl
in
sbb
cmp
andb
and
sar
xchg
gs
mov
mov
pop
imul
out
fsts
add
hlt
es
aam
imul
xor
and
mov
and
sbb
mov
mov
mov
jle
cltd
mov
mov
or
shrl
jbe
mov
cmp
lret
xchg
push
pop
test
push
or
fidivrl
sub
pop
shrl
dec
cld
lret
stc
lret
and
cwtl
dec
and
inc
imulb
fdivp
imul
cli
ss
es
push
std
clc
push
dec
and
adc
fildll
sbb
add
sub
and
or
mov
sub
pop
xchg
ja
mov
jae
dec
cmp
sbb
mov
sahf
push
mov
fwait
mov
xor
pop
fcoml
dec
int
fisttpll
jnp
jge
ja
inc
cmpb
fldcw
jns
or
add
pop
mov
jnp
jns
jno
sbb
sub
cmp
leave
or
sbb
sub
cmp
imul
imul
cmp
leave
or
sbb
sub
cmp
imul
xor
adc
lods
xor
out
stos
popa
pop
mov
sub
movsb
xor
out
ja
add
pop
pop
push
hlt
lods
inc
enter
imul
fistl
inc
mov
inc
xchg
push
jecxz
xor
push
sarb
jb
bound
mov
mov
cwtl
bound
rcr
mov
xchg
popf
in
push
mov
mov
jne
aam
daa
das
pusha
mov
pop
and
rcll
sub
sbbl
dec
cli
lods
movsb
imul
lds
cmp
pop
xlat
scas
mov
xchg
scas
sub
sub
in
pusha
or
push
mov
fwait
in
insl
out
imul
dec
push
das
fistl
pop
bound
push
cld
push
lcall
xchg
dec
jecxz
or
xchg
movsb
sahf
ret
ss
pop
jnp
mov
enter
pop
mov
outsl
dec
seto
pop
shll
loop
shl
ds
outsb
sahf
adcl
mov
mov
scas
movsl
fimuls
mov
dec
xchg
stos
in
pop
shrl
ret
mov
cmp
inc
repnz
call
in
jl
push
xchg
into
mov
pop
add
call
and
push
test
enter
cmp
test
mov
xchg
mov
sti
mov
inc
jns
pop
xor
jne
mov
mov
push
push
insb
inc
lods
and
orl
adc
inc
movsl
ret
repz
mov
inc
adc
push
jne
dec
loope
fdivl
sub
loop
mov
fdiv
or
mov
test
mov
cld
fucom
cmpsb
fwait
cmp
addr16
dec
mov
push
pop
call
fwait
int3
jno
mov
sbb
rorb
sub
xor
insl
mov
add
aam
lds
lret
faddp
push
ljmp
mov
stos
lret
popa
push
cmpsl
xlat
das
inc
and
push
sub
sub
rcrb
div
movsb
cmp
push
lret
xchg
sbbl
mov
jo
es
aaa
out
and
adc
mov
in
cmp
bound
or
push
push
out
pop
adc
sub
mov
in
cmpsl
iret
xor
push
jg
mov
pushf
inc
dec
adc
shlb
xor
xor
test
out
mov
mov
movsb
fcmovnbe
xchg
clc
mov
xor
mov
inc
in
data16
add
mov
decl
mov
ljmp
mov
inc
mov
mov
stos
jno
xor
int3
push
mov
inc
mov
push
jnp
jnp
pop
cmp
xchg
mov
adc
mov
sbb
lret
ss
jle
aaa
push
es
outsb
bound
xor
pop
cmc
pop
mov
out
lret
testb
mov
ffreep
cmpsl
cmp
rcrl
mov
mov
jp
push
fcomip
xor
insb
pop
mul
push
lret
mull
pop
popf
lock
cli
in
dec
scas
push
addr16
scas
outsb
xchg
rolb
lods
out
adc
lahf
shll
mov
xchg
rep
les
cmp
pop
lea
rcrb
jge
cmp
add
or
arpl
ljmp
push
lock
idivb
dec
pop
xlat
dec
dec
pop
cmp
subl
adc
push
sahf
cmp
adc
lret
add
ljmp
mov
xchg
push
pop
testb
jmp
jne
sbb
inc
sub
or
addr16
fwait
mov
mov
mov
mov
sub
cmc
loop
cmpsl
fildl
incb
outsl
or
xchg
mov
fdiv
mov
iret
adc
sub
sub
ss
test
pop
rcrl
jbe
mov
add
xlat
repz
add
rcr
scas
xor
rorb
stos
adc
dec
mov
jns
or
jl
mov
into
fidivl
push
dec
fdivrl
xchg
rcll
je
adc
fnstenv
push
pusha
pop
outsb
add
push
sarb
sub
xor
cld
cmc
xchg
mov
inc
mov
sbb
mov
scas
mov
mov
repnz
js
popa
inc
xor
ja
rorl
add
stc
lods
nop
inc
cmpsb
aas
adc
int
inc
push
add
ss
lcall
or
fisubs
adc
xchg
push
push
sbb
cli
lret
popf
add
filds
jns
mov
out
jbe
aam
cmpsb
popa
pop
mov
mov
test
adc
mov
movsb
in
pop
inc
xor
stc
adc
test
inc
jnp
loop
and
sub
cmp
nop
lock
nop
loope
mov
cmpsb
sub
pop
push
stos
mov
sarl
and
adc
in
outsl
pop
pop
popa
popa
test
int
leave
add
pop
xor
lock
fdivr
sbbb
ja
imul
jecxz
jmp
or
loopne
xchg
lret
jecxz
nop
push
mov
out
push
inc
mov
xbegin
mov
or
adcb
lods
cs
jbe
dec
jns,pt
dec
pop
je
imul
lods
std
nop/reserved
into
pop
cmc
popa
adc
pop
in
sbbl
push
cwtl
das
pop
in
lds
data16
xlat
adc
sbb
lds
jge
imull
or
inc
pop
out
inc
inc
cmovae
loopne
dec
in
ja
sub
dec
fists
mov
mov
loop
xor
mov
jge
jge
in
mov
jmp
jmp
add
xor
ja
cmp
adc
inc
adc
dec
stos
fsub
fldcw
ret
and
inc
add
les
aaa
jb
jp
xchg
jnp
subb
adc
lds
mov
aaa
cmp
leave
pop
xor
mov
movsl
js
aas
cld
mov
daa
lods
in
jne
fmuls
and
xchg
sub
xchg
xchg
pop
mov
lret
inc
mov
rolb
test
scas
lret
mov
sub
fwait
ja
pop
insb
mov
mov
mov
std
insb
nop
lock
or
jb
pop
xchg
test
xchg
lds
jmp
mov
out
iret
push
adc
cmpsl
mov
enter
xchg
movsb
fcoms
xlat
fidivl
sub
add
or
test
or
in
mov
loope
aam
or
pop
stos
push
cmp
jp
rolb
insb
clc
pop
cmp
xor
mov
pop
pop
in
sub
in
push
call
jbe
cmp
sub
add
jnp
jne
data16
js,pn
push
cmp
setl
pop
jmp
clc
push
mov
add
shll
jle
xor
push
sti
and
lods
cmp
dec
in
and
loop
mov
inc
movsb
js
inc
xlat
sti
in
aad
mov
adc
adc
mov
imul
push
ja
outsl
scas
mov
fiadds
nop
xorb
jnp
fiaddl
adc
pop
lcall
scas
cmpsb
imul
push
sub
and
sbb
inc
les
scas
cmp
lods
imulb
daa
ss
enter
aad
dec
ret
ror
cmp
mov
push
jecxz
stos
icebp
xchg
loop
cmp
and
and
pushf
popf
shl
aaa
sbb
outsb
js
repnz
loopne
iret
imul
cltd
imul
pushf
pop
test
or
pop
aaa
in
cld
icebp
test
jmp
cmp
hlt
xchg
pop
push
mov
add
dec
and
stc
cmc
pop
fwait
adc
dec
fidivl
sbb
and
outsb
mov
out
xchg
sti
jo
cmp
aas
hlt
mov
bound
fldl
mov
dec
push
arpl
sub
dec
jb
cli
or
mov
push
das
adc
fs
inc
imul
loopne
loop
je
mov
insb
scas
fiadds
jnp
mov
adc
xor
mov
xor
call
loop
sti
fists
jle
roll
cmp
cmp
jbe
mov
jl
sub
add
cmp
inc
cli
lret
scas
sahf
xchg
jg
xchg
pop
outsl
movsl
xor
adc
insb
loope
or
mov
addl
filds
or
int3
dec
xor
mov
mov
rolb
aas
outsl
into
or
lds
call
sub
mov
addr16
loope
jmp
xchg
inc
pop
lea
sub
adc
mov
cmp
les
lret
mov
mov
andb
rcrb
xlat
imul
sbb
mov
or
mov
out
fxam
sahf
lock
out
ret
or
outsb
mov
gs
sbb
xchg
xchg
xor
add
stos
dec
scas
cld
sub
inc
adc
call
add
pop
pop
pop
lret
les
or
sti
sub
sbb
movsb
cmpsl
and
and
in
push
jnp
push
in
mov
adc
lods
sbb
stos
mov
popf
iret
xchg
movsl
das
insb
addl
xor
and
scas
lret
sbb
pop
jl
int
sub
xor
test
jns
dec
loop
test
push
dec
or
aad
pop
in
sub
xor
pop
pop
ljmp
jns
add
shl
bound
cmp
ljmp
dec
sub
orb
cmp
imul
clc
mov
pop
mov
sub
ret
and
jle
xchg
dec
stos
inc
es
scas
mov
outsb
es
scas
pop
pop
fwait
cs
jl
mov
ja
push
rep
lea
pop
repz
pop
or
in
and
push
icebp
aas
adc
in
iret
jmp
ja
jmp
fcoms
xchg
lods
call
jecxz
sub
push
in
xchg
iret
cmp
sub
cltd
jle
scas
xor
stos
sbb
and
jge
push
rolb
fildl
jp
push
aad
add
std
push
aad
mulb
pop
push
stos
mov
jp
fsubs
pop
xchg
and
insl
xor
add
add
or
jbe
fcoml
outsb
jb
dec
push
repz
fidivrl
pop
xor
orl
sbb
push
push
dec
lods
outsb
inc
inc
add
pop
add
iret
xor
add
sarl
in
xchg
outsb
sub
add
pop
iret
pusha
jae
repnz
xchg
jg
mov
dec
sub
dec
add
subb
add
push
mov
fnop
cmpb
loopne
xor
xchg
js
pop
adc
mov
mov
lret
and
bound
jae
push
addr16
repnz
cmp
clc
mov
mov
pop
rcl
rol
and
inc
jo
lods
mov
or
les
orl
sub
outsl
mov
push
test
daa
orl
jne
add
mov
inc
push
jae
popf
mov
sub
or
cli
lcall
lods
cltd
repz
mov
jl
add
and
sbb
fisttpll
push
push
stos
xor
add
push
test
lods
jno
mov
mov
jle,pt
sub
add
pop
aad
adc
add
out
push
inc
and
enter
push
shll
push
sub
cmpsb
cmp
pusha
sbb
xchg
test
inc
push
push
in
in
je
xchg
repz
add
int3
cltd
push
add
and
mov
add
loop
test
stos
sbb
adc
mov
or
pop
pop
add
into
sub
inc
cld
mov
cwtl
cld
jns
mov
sti
sub
bound
inc
ss
sbb
pop
dec
cmp
mov
jae
add
sbb
es
cwtl
sub
insb
push
out
pop
xor
movsl
jp
jp
cmpsb
jo
loopne
jno
mov
outsb
popa
cmp
mov
add
fisubrl
out
stos
push
mov
add
and
mov
insl
jne
fiadds
mov
lret
sub
add
fidivrl
jl
cmp
xor
ret
loopne
scas
in
pop
pop
nop
dec
inc
cmp
repz
push
gs
push
cmc
in
inc
xchg
inc
mov
jne
ret
out
mov
xchg
lcall
sbb
je
aas
sbbb
pop
cs
xor
cmp
jmp
hlt
mov
pop
ficoms
cmp
xchg
xchg
adc
sbb
scas
add
add
sub
mov
fs
fidivs
out
repz
pop
xchg
ljmp
mov
pop
or
decl
sbb
fistpll
add
push
pop
and
push
in
jbe
xchg
shll
sub
gs
jae
in
sub
jb
repnz
mov
xchg
mov
out
or
or
jb
sub
ljmp
mov
jns
push
dec
add
cmp
pop
mov
add
xor
push
inc
pop
add
pop
inc
xchg
hlt
stos
sub
mov
jecxz
fwait
and
ret
es
and
xor
add
div
jg
test
inc
movsl
inc
dec
popf
mov
test
in
or
mov
add
jmp
fwait
ss
mov
arpl
sbb
add
lods
mov
and
cltd
push
stos
insl
arpl
stc
mov
pop
pushf
out
ljmp
push
ja
outsl
push
lods
adc
pop
pop
movsb
jbe
mov
sub
dec
stos
sarb
das
dec
in
sti
repz
jae
pop
push
sub
push
cmpsb
adc
pop
jp
mov
push
xchg
ljmp
xchg
jl
mov
cwtl
ljmp
in
adc
add
test
subps
in
scas
jo
ret
outsb
mov
and
aaa
xor
icebp
dec
push
and
sarb
mov
xor
adcb
cmp
neg
dec
cmc
outsb
xchg
outsl
or
popf
sub
mov
loop
outsb
negl
in
xor
sub
ret
fisttpll
mov
icebp
sti
xor
enter
cmc
and
mov
xchg
sbb
xchg
cmc
xchg
pop
insl
inc
test
mov
shll
out
pop
int
mov
mov
dec
add
je
push
dec
add
jg
and
ljmp
in
add
add
pop
push
sbbl
idivl
adc
scas
repz
aaa
sub
mov
cmp
jns
pop
jg
arpl
roll
jg
cli
incb
mov
pop
repnz
sbb
pop
cmpsb
popf
cmp
inc
addb
cmp
mov
shll
out
insb
cmpsb
es
push
push
pop
or
sub
rclb
imul
pop
cmp
stos
in
fsubrs
sub
pop
mov
lods
jle
call
int
test
outsb
out
dec
ljmp
jnp
jge
sbb
aas
push
movsl
mov
iret
sub
push
mov
test
sub
insl
or
and
xchg
cmpsl
dec
out
xchg
pop
add
test
jecxz
movsl
lahf
and
push
outsb
nop
xor
jno
pop
enter
notb
cmc
aaa
out
out
jbe
xchg
rolb
sahf
lret
pop
dec
xchg
and
push
sbb
lods
xchg
test
sub
sub
pusha
push
xchg
sub
fldenv
out
out
rorb
pushf
fcmovbe
imul
addr16
arpl
inc
cmp
jg
dec
mov
sub
je
gs
loope
mov
add
test
add
cld
rorl
repz
orb
adc
scas
in
add
outsb
ret
and
add
test
or
addr16
ret
lea
pop
mov
mov
inc
dec
rolb
pop
popf
fs
addr16
enter
ja
and
arpl
cmpsl
test
add
or
sbb
mov
pushf
pop
stos
jecxz
pop
xchg
jle
popa
or
jg
fsubs
lcall
ds
test
mov
and
dec
lea
mov
adc
mov
inc
push
jno
push
or
loope
pop
xor
pop
xchg
mov
pusha
cmp
sub
daa
sahf
insb
fwait
sub
dec
iret
pop
adc
std
and
data16
adc
or
es
push
in
mov
inc
in
cld
lock
gs
and
xchg
jne
jb
es
or
fwait
mov
bound
sti
ds
mov
data16
jmp
jecxz
mov
int
mov
ja
mov
test
inc
pop
dec
loopne
cwtl
aaa
add
cmp
sub
mov
xchg
ret
ljmp
es
scas
xor
jl
sbb
mov
repnz
cmp
cmc
cmp
or
rorl
ja
push
lcall
cmp
bnd
bound
insl
out
add
adc
jl
shl
jg
mov
mov
test
push
push
cltd
pop
pop
scas
ljmp
adc
cli
sahf
sti
sti
add
aad
inc
loopne
das
iret
inc
lods
sbb
xchg
add
arpl
mov
mov
inc
idivb
xchg
inc
mov
xchg
sub
push
pop
test
jo
outsl
pusha
js
and
fsubs
cli
push
jno
xor
add
ja
cmc
xchg
movsl
cmp
dec
push
pop
xchg
add
push
push
fmull
in
pop
cmp
and
pop
es
lret
push
and
add
rorl
xchg
stos
cmp
lods
ja
xor
ljmp
das
mov
loope
xor
jbe
jle
dec
mov
aad
lret
and
in
pushf
xor
lea
inc
and
xchg
ret
ret
xchg
sti
mov
enter
inc
into
lods
ja
std
out
push
or
mov
loop
sahf
pop
roll
and
out
pop
test
jge
sti
repz
xchg
add
pop
pop
daa
fcomps
push
or
jecxz
mov
into
out
bound
sbb
repz
inc
cmp
or
and
ja
aad
xlat
lret
and
inc
enter
xor
pop
fcomp
pop
sbb
and
push
fnstsw
test
jnp
repnz
pop
jg
aaa
jp
mov
jecxz
inc
mov
push
andb
testb
jecxz
cmpsl
mov
popa
stos
ds
mov
cmpsb
cmpsl
sbb
xor
mov
and
in
out
mov
icebp
repnz
mov
pop
lret
cmp
xchg
in
add
cs
test
mov
jb
nop
inc
mov
mov
sbb
test
mov
push
mov
push
leave
xor
inc
pop
mov
movsl
mov
loop
xor
fistpll
mov
jno
fimull
jmp
loopne
push
dec
stos
cmpsl
xchg
cmpsl
and
or
lods
cmp
mov
lret
rclb
clc
ret
cmp
mov
pop
push
aaa
pop
hlt
movsb
mov
sub
adc
xchg
lret
insb
loopne
cmc
lock
cwtl
aaa
xchg
andb
add
mov
sbb
sub
pop
jmp
xchg
or
notl
fadd
setbe
adc
out
sub
xchg
cmp
mov
add
cs
lret
mov
insl
jmp
je
lods
dec
push
stos
mov
pop
xor
sub
sahf
sbb
or
loop
jge
arpl
inc
add
mov
cmpb
pop
xchg
and
data16
shl
fidivs
or
mov
push
shll
dec
push
sub
or
testb
movsl
sub
in
jp
test
arpl
loop
outsl
je
push
cmpsb
mov
movsb
out
mov
stos
inc
mov
je
pop
mov
ret
inc
xlat
cwtl
out
pop
jb
popa
repnz
in
lret
xchg
mov
sub
inc
arpl
adc
push
popf
jg
mov
fiaddl
and
sbb
pop
inc
lds
cmp
mov
sub
stos
sbb
or
dec
stos
sti
adcb
pop
sbb
test
fsubrs
orb
xchg
addr16
push
jnp
testl
js
xchg
xor
xor
xchg
loop
sub
mov
hlt
or
mov
insl
lret
xor
xchg
xor
inc
xor
fucompp
xchg
mov
out
int3
add
add
rclb
xchg
add
cli
push
push
jo
clc
pop
rclb
fxch
into
sbb
mov
repz
dec
aad
test
pop
out
pop
mov
into
push
mov
lret
and
into
idiv
mov
imul
xchg
sbb
sub
cmp
leave
or
sbb
sub
cmp
imul
imul
cmp
leave
or
sbb
sub
cmp
imul
imul
cmp
leave
or
pop
in
sub
xor
bound
jg
dec
jns
or
sbb
test
hlt
es
sub
dec
xor
and
inc
add
inc
cmp
push
jl
imul
mov
mov
xchg
leave
add
mov
movsb
adc
cmp
pop
adc
add
xor
and
aam
movsb
xchg
hlt
test
test
imul
movsb
ret
push
mov
out
fs
adc
add
xor
and
jl
fists
xchg
jmp
lcall
sbb
rcl
or
jge
push
stos
dec
mov
mov
and
push
mov
mov
add
add
mov
sti
push
xor
fs
cmc
inc
imul
cmc
dec
or
push
cmp
cmp
or
sub
inc
xor
sbb
xchg
inc
inc
or
sub
inc
mov
mov
js
imul
pminub
push
dec
jnp
dec
push
sub
jmp
adc
sub
xchg
inc
or
js
dec
pushf
sub
mov
cld
inc
nop
les
jno
mov
or
movsl
sub
cmp
pop
adc
add
xor
and
aam
les
mov
mov
mov
int
cmp
jge
inc
or
push
or
enter
enter
cmpsl
testl
je
push
xor
adc
lods
enter
lds
mov
test
imul
add
dec
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
cmp
pop
adc
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
xchg
jbe
adc
dec
or
lcall
pop
adcl
cltd
imul
je
xchg
or
cli
mov
insb
xchg
and
lret
lret
xor
or
sbb
loop
jecxz
outsb
movsl
shrl
push
push
inc
pop
xlat
pop
adc
push
sub
adc
xor
mov
in
rorl
fldl
sub
cmp
or
xchg
out
dec
mov
sbb
fwait
jns
mov
in
loopne
clc
xchg
push
pushl
jecxz
out
sub
mov
sub
sub
notb
sbb
inc
mov
andl
lds
cmc
or
ja
mov
cmp
xchg
adc
push
jl
add
mov
in
xchg
dec
pop
xor
mov
and
fdivrl
inc
sub
adc
bound
addb
arpl
fnstcw
mov
push
repz
jg
nop
jb
stos
inc
push
jnp
dec
jecxz
cmp
js
sub
cmp
test
stc
pusha
das
push
xorb
daa
sahf
ds
ds
jnp
push
dec
pop
inc
js
push
test
pop
and
jne
mov
pop
cmp
or
jno
sbb
scas
lea
xchg
aad
insl
loop
test
push
cmp
xor
popf
in
pop
lret
stos
and
xchg
add
movsl
xchg
cli
inc
inc
xor
xchg
decb
aad
adc
out
fisubl
por
inc
pusha
sub
xchg
sti
jle
gs
icebp
push
mov
lahf
lret
jg
add
inc
or
sub
cmp
jae
push
and
aaa
mov
cmp
sbb
aas
ret
fisttpl
fcoml
jbe
jp
and
call
ja
leave
jb
jb
lods
pop
dec
push
fwait
in
jo
inc
push
mov
lock
jo
aas
sahf
push
divl
lods
mov
test
fstps
scas
loop
inc
loope
add
jle
pusha
mov
inc
int3
sbb
repz
dec
pop
clc
xchg
dec
rorb
inc
dec
mov
call
mov
jns
or
push
insl
fisubl
fimuls
test
in
and
cwtl
rclb
nop
mov
inc
xchg
orb
inc
psllw
fcoms
jbe
jo
sub
inc
std
dec
das
fwait
cmp
pushf
and
cltd
jbe
dec
incb
sub
scas
fistpl
js
xchg
rorb
lea
pop
sbb
inc
inc
fidivrl
mov
out
lcall
pop
mov
inc
mov
popw
sub
iret
pop
mov
sub
repnz
sub
sub
push
push
jnp
mov
jmp
push
arpl
es
mov
and
es
cmp
mov
jle
lret
std
fnsave
lret
sbb
xor
int3
rcl
mov
mov
stos
push
pusha
jmp
pop
mov
fldl
ss
jmp
mov
xor
xchg
repnz
sbbl
push
xchg
es
pushf
fwait
pusha
aam
mov
loop
sub
cmpsb
cmp
add
xchg
cwtl
testb
mov
addr16
and
sub
cmp
sti
cmp
mov
adc
xchg
ds
cmpsl
jge
pop
movups
mov
mov
mov
roll
ss
ljmp
xchg
fs
mov
sbb
mov
sti
inc
push
push
inc
stos
hlt
mov
sub
sbb
mov
in
or
sub
xchg
shll
mov
jmp
popf
push
daa
ljmp
cmp
std
lcall
mov
add
lods
cmpsl
jbe
fstpl
jb
xor
andb
mov
sbb
in
mov
or
xchg
mov
jne
hlt
sti
add
call
mov
in
xchg
mov
jecxz
xchg
mov
pmuludq
movsl
insb
jle
xor
icebp
jne
or
sub
insb
test
lea
cmp
and
cltd
mov
dec
mov
add
jno
mov
jns
mov
adc
stos
cld
addr16
lods
mov
andb
mov
subl
cmp
jle
adc
xlat
or
movsb
xchg
imul
shrb
mov
push
test
roll
xlat
cmpsl
aad
lcall
shl
dec
xchg
xor
into
cs
loope
inc
fisubrs
fldt
mov
lret
cmc
mov
es
movsb
xchg
add
lods
jg
movsl
adc
sub
cmp
movsl
cld
adc
movsl
mov
push
addr16
ss
fnstcw
mov
enter
mov
cli
bsf
ret
pushf
add
push
rclb
dec
push
jbe
pop
fdivrl
loopne
out
outsl
jl
call
sub
mov
jbe
add
sbb
bound
xor
shlb
cmpb
cmp
mov
int3
xor
push
loopne
daa
popf
out
aaa
sbb
xchg
inc
loop
inc
xchg
mov
and
loop
imul
cld
pop
sub
mov
add
addr16
shrb
scas
xchg
daa
addr16
add
lret
out
mov
std
or
or
cli
add
mov
out
or
mov
enter
cli
cld
inc
into
or
jb
xchg
aaa
adc
and
scas
mov
xchg
movsb
dec
sub
mov
shlb
pop
rcll
sub
sub
mov
dec
pusha
xchg
mov
sbb
cmp
lcall
loop
mov
dec
push
cltd
push
xchg
ds
pop
and
inc
dec
xorb
std
ss
iret
mov
mov
test
xchg
out
mov
push
xlat
sub
xor
inc
call
xchg
test
repnz
mov
sub
pop
sbb
and
in
in
cmp
dec
mov
xor
xchg
dec
test
mov
sub
ljmp
js
js
into
dec
pop
push
repz
sbb
add
out
dec
out
sti
jp
call
shr
ja
ljmp
dec
and
iret
jmp
mov
std
dec
push
add
mov
daa
cli
mov
in
push
mov
lahf
adc
jnp
add
jmp
imul
mov
ret
dec
lds
sbb
pushl
insl
and
pop
dec
mov
add
iret
sub
add
cmp
jbe
adc
insb
mov
sub
inc
mov
cmp
call
sbb
int3
inc
inc
flds
xchg
add
jecxz
sbb
mov
out
add
js
pop
dec
mov
push
ds
xor
sub
push
out
outsb
push
out
cmpsl
mov
call
mov
dec
mov
loop
ja
push
in
mov
pushf
stos
nop
sub
sbbl
or
mov
out
leave
pop
jle
aam
imul
inc
ds
inc
mov
mov
xchg
fsubl
lret
adc
inc
lea
test
pop
loope
or
jecxz
cmp
gs
insl
fwait
cmpl
fildl
mov
inc
mov
out
cmp
mov
inc
orl
jecxz
pop
fsubl
lret
add
pushf
mov
fldcw
mov
add
lock
pop
aam
ficomps
pop
into
dec
dec
pop
out
push
inc
inc
jge
shlb
fcmovnb
test
inc
pop
jo
or
idivb
sbb
pop
mov
mov
mov
in
fisubrl
jae
add
movb
inc
cmp
mov
loopne
push
mov
cmp
sbb
xor
ret
je
mov
pop
repnz
daa
daa
hlt
shl
fadd
jnp
fisubs
or
gs
sub
leave
and
and
les
inc
xchg
xchg
loope
or
jl
iret
push
jnp
sub
adc
clc
jg
mov
pop
cmpsb
mov
in
push
je
xchg
lret
pop
scas
mov
pop
xlat
andb
sub
adc
jmp
dec
roll
jnp
xor
rcll
mov
stos
es
popf
test
stos
and
ret
dec
je
mov
jmp
jge
jge
adc
out
cmp
ja
mov
ret
sub
ds
lea
cmp
jno
nop
jl
mov
push
jp
lcall
xorb
sub
push
push
lods
movsb
inc
xchg
add
bound
les
stos
mov
and
pop
xor
rcl
push
sbb
xor
sub
xchg
aaa
mov
jne
gs
push
dec
or
mov
pop
outsl
mov
loop
repnz
cmp
out
stc
mov
popa
inc
xchg
ret
mov
sbb
adc
filds
jge
scas
out
push
xchg
jb
inc
add
inc
adc
mov
jge
xchg
mov
leave
shrb
pop
mov
inc
sbb
mov
push
lret
fiadds
out
repnz
int3
mov
in
add
add
icebp
cmpsb
adc
mov
add
cld
pop
in
fnsave
xchg
jl
jnp
mov
push
inc
sub
mov
aas
dec
xchg
cmp
sahf
jns
sub
idivl
test
mov
mov
std
inc
hlt
out
and
nop
push
add
cs
mov
push
ficomps
and
mov
shrl
pop
pop
xchg
cltd
cli
mov
inc
mov
negb
sbb
lahf
mov
add
popf
shll
and
lds
cmp
das
stos
inc
subl
adc
ficoml
jne
and
mov
mov
adc
mov
or
mov
and
xchg
jae
ret
aaa
pop
xor
push
nop
jae
arpl
inc
inc
xchg
call
lret
xchg
push
push
loop
sub
jg
into
jmp
and
cmpsl
repnz
nop
xchg
or
and
xor
std
sub
movsb
imul
sti
and
jb
imul
fiadds
and
xor
addb
jo
cmpsb
insl
inc
mov
iret
push
scas
adc
gs
leave
dec
arpl
mov
and
sub
inc
cwtl
adc
sub
iret
dec
adc
stc
add
lods
add
pushf
inc
inc
mov
fstps
or
mov
lahf
out
mov
test
or
fistps
xor
repz
push
js
test
push
cld
push
test
sbb
iret
repz
rorl
jb
jge
cld
call
mov
cmp
fstps
fbld
pop
mov
shll
flds
pushf
mov
fcoms
stc
mov
dec
and
cmc
jp
decb
andb
mov
sti
and
movsb
inc
test
cmp
xchg
in
leave
je
xchg
and
jmp
push
lret
mov
loop
mov
sub
dec
mov
mov
addr16
lods
and
or
dec
mov
push
cli
jp
int3
and
push
mov
inc
push
fs
sub
call
inc
jno
push
aad
jns
cmp
add
mov
or
pushf
shr
add
aaa
ljmp
clc
jecxz
dec
dec
mov
inc
in
sub
repnz
cmpsb
push
mov
scas
mov
sarb
cmp
js
callw
outsb
repz
hlt
mov
jns
fildll
iret
addl
je
or
fcomi
ljmp
sub
jb
std
out
jbe
ja
outsb
mov
pop
mov
test
dec
inc
nop
in
out
cwtl
sar
and
mov
jae
outsb
push
mov
mov
sar
xchg
clc
pop
inc
xchg
into
fs
cmp
sbb
xchg
or
mov
shll
frstor
xchg
jno
push
inc
cmp
mov
mov
push
ljmp
cmp
mov
shll
xchg
push
xchg
inc
fmuls
add
push
sarl
bound
adc
jb
stc
pop
lods
inc
inc
jmp
push
test
aad
sub
js
loopne
pop
lock
mov
stc
jnp
in
push
les
gs
scas
xchg
adcb
orb
ret
cld
subl
test
jl
inc
xor
popa
mov
in
add
in
daa
call
dec
imul
mov
stc
es
ja
cmpsb
jmp
pop
es
mov
outsb
stos
out
mov
pop
mov
pop
xchg
insb
in
mov
inc
dec
xor
pusha
outsl
int3
orl
inc
inc
jl
sub
push
cmp
push
jge
cltd
xchg
js
mov
xchg
push
mov
movl
dec
mov
loopne
out
imul
mov
adc
push
xchg
rdtsc
sbb
mov
jecxz
cli
add
fs
adcb
cmp
ljmp
movsl
mov
arpl
sbb
cmpsb
or
lahf
jmp
out
adc
int3
dec
inc
gs
adc
mov
movsb
or
shll
push
xor
in
jno
and
rcrl
cmpsl
lds
cld
jbe
push
xchg
aaa
incb
repz
clc
sub
ret
jle
scas
cmc
push
test
insb
aam
std
lcall
movsb
shlb
shll
sbb
pop
in
lds
xchg
inc
pop
mov
adc
adc
push
mov
push
adc
dec
call
into
test
icebp
mov
leave
xchg
adc
addr16
frstor
sub
cwtl
cli
cmp
jo
stos
mov
in
fs
in
into
adc
std
jmp
rolb
adc
imul
fidivs
jnp
loope
pop
pop
sbb
pop
sub
pop
pop
cld
pushw
jg
sbb
sahf
pop
sub
add
sarl
xor
das
popf
iret
inc
cmp
test
xorl
ss
or
add
mov
loop
sub
xor
push
sub
popa
xchg
into
sub
push
ret
ds
out
in
insb
mov
or
lret
mov
fiaddl
cwtl
ljmp
xchg
cmp
lds
loope
add
cmp
mov
mov
int
je
lds
adc
push
sub
enter
leave
es
movsl
mov
sub
mov
inc
gs
push
int3
sbb
aaa
mov
cs
mov
ret
jle
xor
mov
jnp
dec
mov
push
cli
outsb
sub
test
pop
xor
aaa
rcl
pushf
xchg
leave
push
add
mov
mov
mov
scas
pop
imul
arpl
mov
sbb
add
pop
inc
iret
push
push
stos
push
add
outsb
adc
ja
push
xorl
or
xor
push
add
push
pop
jge
adc
push
mov
lods
movsb
add
cmp
jle
movsb
insb
and
mov
ret
push
dec
fisubrl
mov
xor
movsb
dec
inc
and
push
mov
pop
push
adc
inc
push
push
mov
mov
push
dec
mov
inc
insb
pushf
push
push
imul
and
outsb
or
daa
test
push
cmp
shll
negb
jge
mov
and
aad
nop
xchg
test
adc
sbb
xchg
ret
lods
lea
call
cmp
or
lea
push
sub
pop
adc
sub
xor
mov
mov
popf
jmp
xchg
cmc
test
fcmovbe
faddl
imul
daa
xchg
sub
out
mov
xor
je
ds
std
pop
negl
ds
sti
jns
dec
cmpsl
aad
push
jne
ljmp
movsb
test
loop
sub
fildll
dec
leave
leave
mov
adc
fildl
push
xor
dec
add
or
pop
inc
xchg
xor
cwtl
aad
aaa
push
mov
shlb
addl
test
dec
mov
repnz
and
imul
fcom
lds
push
dec
push
xchg
repz
xor
and
adc
pusha
leave
arpl
mov
loope
or
pop
insb
adc
les
stos
mov
jo
xchg
int
loopne
scas
sub
cmp
mov
ss
jne
xchg
int
lods
test
divb
inc
cmpsl
sub
bound
jge
sbbb
cmp
mov
adc
push
lea
iret
cmp
xchg
scas
mov
jg
repnz
shlb
cld
sbbb
xor
mov
int3
shll
add
cmp
inc
push
rcll
adc
sub
or
shlb
clc
mov
pop
arpl
inc
sub
xchg
push
mov
mov
sub
xchg
cmc
xlat
mov
jecxz
adcb
fwait
inc
je
lcall
push
repz
cmp
xchg
push
ret
aas
jbe
inc
mov
loope
daa
out
mov
jae
cmp
adc
cmp
pop
jnp
mov
scas
mov
repnz
aaa
inc
mov
arpl
sbb
popf
pop
and
mov
sarb
lock
jns
add
fstpl
ficoml
xchg
and
in
xchg
add
jb
aas
pushf
or
or
loope
pop
inc
ljmp
lds
pop
mov
xchg
test
xor
xor
push
inc
cld
dec
adc
sahf
lret
jno
dec
shr
popa
and
mov
ss
dec
arpl
push
mov
loope
jle
nop
int3
ds
jno
jecxz
mov
fs
dec
pop
imul
adc
and
int3
fwait
stos
dec
sub
insb
fwait
dec
ja
dec
mov
fcoml
jbe
shr
adc
jp
ja
xchg
lds
movsl
sahf
jmp
push
push
mov
pop
cmc
nop
test
adc
out
cmp
insb
rorl
cmp
jl
cltd
inc
movsl
xor
lock
rcll
stos
dec
insl
int
mov
loopne
push
lods
scas
push
xchg
pop
sbb
pop
xor
mov
mov
repz
push
adc
into
popa
sbb
or
jno
call
dec
mov
rorb
or
shr
jl
ja
push
leave
pop
test
jmp
lock
jno
sti
int
mov
ljmp
push
push
in
xchg
sbb
inc
inc
mov
mov
mov
push
push
add
hlt
hlt
incb
outsb
sahf
push
mov
and
mov
push
inc
repnz
out
mov
sbb
jb
rcll
rcrb
xor
pop
cmp
lahf
stos
imul
in
push
or
icebp
jl
push
ret
jmp
adc
test
or
cwtl
inc
sbb
daa
xorl
sub
rcl
idiv
push
aad
mov
adc
sti
pop
jnp
push
xor
mov
test
lahf
xor
xor
fs
shll
div
sub
jp
ds
cmp
mov
cmpl
daa
fs
out
popw
jae
lahf
clc
in
pushf
sbb
ficoms
ja
hlt
mov
out
repz
cmp
dec
dec
outsl
mov
lds
push
sbb
cmp
xor
cwtl
or
daa
xor
lret
jle
sub
jbe
je
outsl
popf
or
jecxz
negl
mov
out
cltd
dec
jne,pt
test
push
int3
xor
xor
adc
popa
push
dec
cmp
jl
dec
push
adc
ret
mov
test
mov
inc
jo
adc
dec
scas
test
data16
lahf
and
imull
sub
or
or
rolb
scas
add
and
mov
jne
fistl
lods
mov
ret
js
inc
dec
jns
and
out
ficoms
cld
push
jle,pn
adcl
xorb
mov
sbb
jb
stos
sbb
mov
sub
mov
divb
sti
adc
mov
push
xchg
in
stos
dec
fsubrl
pop
push
ret
adc
pop
notl
pop
pop
imul
mov
mov
pop
fchs
push
js
int3
cmp
ljmp
mov
dec
mov
push
arpl
mov
sbb
pusha
xchg
les
insl
sub
xchg
movsb
adc
inc
sbb
call
inc
cmp
jae
sbb
push
aad
scas
cmp
pop
dec
jg
inc
nop
je
fs
adc
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
cmp
pop
adc
add
xor
and
aam
les
xchg
leave
test
mov
movsb
sbb
sub
sub
dec
test
push
les
xchg
rolb
push
and
fs
adc
add
xor
and
aam
outsb
adc
test
jnp
dec
push
pop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
ds
xchg
add
rcrl
pop
or
add
add
add
pop
add
or
incl
flds
pop
add
add
add
or
filds
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jbe
les
insb
add
in
add
add
push
add
xor
movsl
add
add
add
add
add
add
add
add
add
add
xor
rolb
add
add
add
and
insb
add
add
jns
jne
sub
enter
add
and
nop
add
in
add
ja
mov
imul
les
addb
add
add
add
adc
leave
add
imul
push
add
add
add
add
add
add
add
add
nop
add
add
add
add
pop
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
add
mov
add
lea
pop
add
add
add
add
add
add
add
add
mov
popa
add
add
add
add
add
add
add
add
add
add
add
xor
lea
bound
jge
cmpsb
add
nop
add
add
lea
mov
roll
sub
outsl
add
add
add
add
imul
sbb
add
and
add
add
push
add
add
add
add
add
mov
insl
add
lea
push
add
or
add
jb
les
push
add
add
add
add
add
outsb
add
lock
add
add
add
add
outsl
add
add
add
add
add
add
filds
mov
xor
mov
jbe
xor
jno
nop
add
add
add
add
sub
xchg
nop
add
dec
add
add
sub
add
mov
push
mov
cmp
add
add
add
add
add
imul
sbb
insb
add
add
add
or
xor
add
sbb
cltd
add
add
add
add
add
add
push
add
push
add
add
add
add
or
rolb
add
add
fwait
add
add
add
add
add
add
nop
add
add
mov
enter
pop
add
add
add
add
add
xor
add
add
add
lcall
add
add
add
adc
stos
add
add
or
out
daa
add
add
add
add
add
xor
dec
add
nop
add
add
mov
and
mov
pop
add
and
or
add
adc
inc
add
add
dec
add
add
add
add
add
add
mov
xchg
pop
sub
mov
cmp
adc
inc
mov
popf
sbb
lcall
fldl
adc
and
xlat
sub
sub
test
adc
jbe
cmp
aaa
jb
mov
add
pushf
push
push
test
jecxz
pop
sbb
cmp
and
push
movsb
add
inc
push
hlt
stos
movsb
push
add
outsl
mov
iret
fadds
cmp
adc
sub
repz
or
sarl
loopne
int
jmp
pop
hlt
and
or
or
std
mov
rorb
sahf
es
pop
bound
jns
jae
lret
or
xor
xchg
or
jg
push
mov
not
dec
arpl
aad
aas
sub
xchg
xlat
js
nop
leave
jmp
popf
mov
sbb
jp
aam
pushf
mov
sbb
shll
push
push
cmp
jge
addr16
pop
sub
aad
rcrl
adc
push
push
mov
mov
movsb
inc
xor
adc
adc
rorl
and
pusha
fdivp
gs
or
jns
sub
add
mov
sbb
push
push
adcb
xor
jbe
jno
push
push
add
xor
jge
outsl
pop
dec
add
mov
jge
sub
xchg
ds
mov
je
push
jmp
outsl
lods
and
fs
dec
push
cmp
xorl
rclb
sub
movsb
lcall
test
cmpsb
das
outsl
fsts
and
outsl
inc
cmpsb
fsubrl
ljmp
sub
or
cmpsb
repnz
cli
mov
out
mov
std
mov
and
mov
leave
pop
or
jae
aaa
fwait
cmp
bnd
pop
xor
testb
sahf
mov
mov
dec
xor
mov
xor
nop
inc
stos
mov
sahf
jb
push
mov
jne
fiadds
mov
cmp
pop
aaa
hlt
xor
scas
mov
pop
ds
push
push
fwait
pop
mov
int
sahf
ret
rcrb
mov
push
add
xchg
inc
xor
mov
add
andb
mov
leave
bound
or
shlb
mov
pop
and
jb
sahf
adc
gs
cwtl
dec
cld
in
fcomps
sar
and
dec
push
cmc
mov
imul
or
and
ja
xor
mov
xchg
rolb
add
mov
add
jae
das
cltd
xchg
dec
rcrb
test
outsl
mov
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
