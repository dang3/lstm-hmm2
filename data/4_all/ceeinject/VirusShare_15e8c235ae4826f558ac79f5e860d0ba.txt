call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
movsb
dec
dec
jnp
imul
jns
sbb
sub
sti
jmp
fwait
fwait
mov
aas
pop
dec
dec
pop
jnp
imul
or
fcmovnu
lret
jmp
sti
jmp
fcomi
mov
jecxz
mov
imul
add
test
movsb
mov
out
iret
imull
jnp
add
pop
sub
and
add
pushf
fdivr
jno
cmp
fisubs
push
mov
shlb
xlat
xor
jnp
imul
lcall
movsl
pop
push
dec
push
popa
jge
rorb
xor
popf
sbb
out
jbe
mov
xchg
mov
sahf
imul
shrb
fisubl
fwait
jg
adc
je
push
stos
clc
movsb
dec
inc
mov
out
orl
mov
cmp
jmp
enter
stos
cmpsl
push
movsb
fwait
idivb
xchg
push
in
loop
les
xlat
call
add
repz
lcall
add
mov
lcall
jae
cmp
lea
jmp
mov
mov
cmp
cmp
inc
je
gs
push
sub
popf
cwtl
mov
hlt
in
sar
into
lret
or
sbb
dec
jb
outsb
cmp
push
jle
mov
sahf
xchg
mov
lret
in
rcr
ljmp
sub
or
or
cmp
sub
fcmovnu
lret
lret
sti
sti
jmp
fwait
fwait
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
lret
sti
sti
jmp
fwait
fwait
mov
pop
pop
in
pushf
mov
and
push
mov
sbb
mov
push
stc
outsl
fwait
bound
or
cmp
aam
push
fsub
cltd
mov
icebp
maskmovq
testl
jecxz
in
inc
or
clc
fs
mov
add
xchg
cli
or
xor
xchg
mov
rorl
sub
jae
or
jne
jae
mov
cmp
cmp
das
adc
jo
pop
add
inc
mov
mov
xchg
inc
mov
outsl
sub
or
rcll
push
xor
and
je
subl
adc
xor
popl
add
pop
or
xor
jecxz
push
lods
pop
in
pusha
into
lahf
insb
in
mov
dec
jae
in
roll
mov
ret
inc
imul
mov
aad
je
jno
add
nop
aad
iret
cmp
psllw
scas
sbb
cmp
test
sbb
test
and
lea
jg
push
mov
push
enter
adc
xlat
mov
jb
js
sbb
push
jno
mov
dec
mov
ret
xchg
sbb
jmp
imul
jmp
sbb
jecxz
mov
mov
mov
push
cli
movsl
mov
rorl
adc
and
maskmovq
testl
and
sub
aaa
xor
dec
mov
pop
or
pop
add
ror
add
mov
movsl
push
push
cmp
and
adc
clc
in
mov
xor
repz
jmp
inc
push
adc
jl
test
hlt
lods
cmpsl
push
mov
jmp
cmp
and
sbb
dec
xor
testl
xchg
pop
mov
xor
and
mov
decl
xchg
out
jnp
fsubl
fwait
xchg
pop
scas
jb
inc
clc
sbb
push
sub
cmp
dec
test
gs
stos
jb
cmp
mov
das
arpl
lea
jp
jo
mov
push
mov
movsb
pop
pop
jle
push
scas
pop
leave
dec
arpl
in
cmpsb
add
xlat
ficompl
inc
pop
xchg
and
arpl
mov
aad
mov
and
xchg
xchg
and
lret
adc
sbb
mov
dec
sarl
pop
inc
inc
stc
loop
xchg
mov
pop
push
or
pop
lcall
pop
jb
push
mov
pop
cmc
fcoms
push
pushf
jae
movb
adc
lahf
and
movsb
lahf
clc
cs
mov
daa
mov
imull
lcall
lea
cwtl
push
mov
push
cmp
mov
mov
push
pop
cmp
cmp
arpl
popf
jbe
shll
repz
jno
lret
push
arpl
xchg
push
inc
adc
scas
sbb
fsubrs
xchg
jne
subb
mov
bound
lcall
loopne
int
lret
add
clc
rcrb
in
mov
sbb
mov
mov
pop
push
fmull
mov
jmp
pop
lret
dec
xchg
lret
adc
push
inc
xor
pop
mov
add
out
lret
or
jno
int3
cli
fcompl
ljmp
inc
sbb
addr16
shlb
jp
xor
pusha
arpl
popa
adc
mov
push
icebp
in
call
xchg
imul
lds
out
push
or
insl
cmpsb
movsl
stos
mov
push
stc
js
jecxz
js
bound
adc
ret
shll
pushf
icebp
cmpsl
sbb
sub
adc
ret
or
pushf
xor
mov
jp
cmpsl
xor
ss
data16
jg
das
or
cmp
adc
mov
test
pop
sbb
stc
adc
ret
daa
mov
inc
push
push
cmp
or
pop
adc
insl
lret
testl
xchg
hlt
data16
pushf
push
xor
lds
pop
cmpl
ud0
jnp
xchg
inc
fcmovu
insb
sbb
insb
mov
mov
add
or
push
sub
int3
push
lret
adc
scas
inc
sub
add
addr16
adc
sahf
sbbb
push
scas
jb
lock
jne
push
or
es
mov
loope
sbb
and
ficomps
aas
testl
idivl
cmp
mov
mov
mov
adcl
data16
mov
xlat
cltd
mov
scas
loop
inc
adc
xor
jo
jne
js
cmp
lods
xor
fwait
inc
push
in
xor
pop
and
and
outsl
scas
adc
test
xchg
ljmp
int3
fstpt
xchg
out
push
xor
xchg
jne
cltd
and
xchg
scas
test
pop
lahf
sbb
mov
dec
into
inc
lock
subl
xchg
sbb
loopne
mov
jns
xchg
inc
dec
loop
inc
bound
xchg
jnp
inc
and
orb
out
in
es
sti
add
sub
stos
mov
pop
int
ret
dec
dec
fadds
sub
dec
mov
sbbb
ss
dec
in
arpl
inc
or
push
call
inc
rorb
iret
mov
in
xor
cmp
sahf
scas
pop
jne
in
inc
bound
icebp
fidivl
fwait
movsb
adc
scas
or
pop
sub
cmp
adc
mov
shl
mov
push
incl
out
cmp
int
add
mov
leave
and
out
cmp
inc
out
xor
xchg
sub
pop
pop
gs
negb
lahf
pop
sarl
popf
pop
sub
cmp
xchg
cli
scas
jns
lds
push
push
test
xor
out
mov
jle
pop
sub
jno
scas
leave
sti
outsl
call
fsubr
data16
test
loopne
push
popf
jg
leave
and
rcrl
out
fsts
add
lods
dec
add
jge
mov
scas
jns
fcomp
mov
push
pop
nop
adc
pop
or
stos
scas
adc
pushw
leave
mov
push
ja
xor
rol
in
mov
pop
push
cli
lahf
cmp
stos
sbb
add
jl
lcall
mov
pop
jae
or
imul
mov
inc
mov
mov
int3
jns
bound
jbe
push
add
std
mov
faddl
mov
lea
andl
xchg
or
push
movsl
mov
data16
lret
mov
jle
push
push
and
in
icebp
dec
js
jbe
fmuls
mov
jae
xchg
cmp
pop
xchg
adcb
lret
lcall
xchg
stos
insl
out
shlb
ret
adc
mov
nop
jmp
lahf
cmp
shll
mov
xchg
or
xchg
push
leave
aaa
inc
dec
test
pop
cs
jg
dec
or
xor
loopne
fiadds
loope
fmuls
sbb
cld
jae
loope
jge
add
cmp
and
shlb
pop
ret
jae
sub
aaa
xor
cmp
push
mov
or
scas
shll
in
movsb
lret
cmpsb
pop
mov
and
pop
jp
pop
pop
dec
lret
imul
shl
and
movsl
adc
sub
cmp
fdivrs
iret
popf
rorb
cmp
sub
xchg
test
in
mov
sbb
pop
xor
icebp
cmpsl
xlat
or
cmp
ror
call
imul
lods
add
xchg
adc
push
jge
leave
ret
sub
jno
xor
call
lret
or
push
pop
ret
jb
lds
or
mov
mov
loop
dec
loopne
inc
mov
cmp
lret
cmpsl
aaa
pop
test
xchg
sahf
cmp
lods
xchg
xorb
ss
dec
scas
daa
sub
sub
jge
jmp
push
pusha
subb
inc
mov
mov
test
aas
cmp
fs
les
jg
add
pop
pop
fnstsw
aam
cmp
lods
test
aam
lret
add
adcl
clc
daa
cmp
sub
sbb
mov
inc
add
pop
jge
xchg
xchg
cmp
xor
mov
dec
push
int3
add
ficoms
xchg
pop
add
clc
test
cld
push
lods
cmp
aad
es
pop
jno
sti
inc
mov
xor
andl
dec
clc
scas
mov
dec
xor
call
sub
xchg
push
sub
sub
scas
arpl
adc
in
ljmp
mov
shlb
inc
push
cltd
pop
or
sbb
sub
dec
sub
cltd
xchg
aas
push
maxps
stc
cmp
xor
mov
push
mov
xchg
in
jo
push
outsl
push
sub
mov
into
cmpsl
nop
call
pop
xchg
test
mov
xchg
adc
loopne
cmp
jo
outsb
adc
mov
push
loope
testl
lahf
outsl
pop
mov
push
cld
outsb
and
add
stos
loope
jne
lods
test
hlt
cltd
mov
push
insb
jns
pusha
adc
mov
and
add
addr16
adc
and
in
xchg
repnz
leave
mov
or
jno
lods
sahf
in
pop
and
in
jne
mov
xchg
test
iret
lods
jo
fldl2t
mov
rorl
adc
test
orl
sbbl
shlb
sub
or
mov
movsb
push
jl
pop
xor
es
test
cmc
push
cld
dec
xchg
imulb
jge
inc
cmpsb
in
js
out
xor
test
sbb
jnp
sub
movsl
movsb
inc
test
popa
xor
and
pop
shlb
in
xor
loop
inc
jp
and
int3
shrl
aad
stos
pop
sub
mov
dec
cli
mov
and
pop
cli
add
adc
or
gs
jl
lret
pop
xchg
outsb
mov
push
movsl
sbb
int
fists
test
jmp
test
test
mov
cmp
lea
push
cwtl
mov
jge
pop
dec
aas
cmpsl
or
or
and
repz
pusha
sbb
pop
adc
add
xor
into
xor
mov
push
ret
int
scas
add
mov
in
xor
std
fmul
mov
mov
sub
pop
stos
cli
xlat
stos
adc
lcall
or
jge
aaa
push
xor
sub
aam
int
sbb
nop
pushf
mov
mov
mov
xchg
fs
cltd
push
shrl
xchg
dec
mov
mov
fwait
mov
cmc
loop
repz
sahf
xor
imul
inc
cmpsl
in
fsubs
push
rcll
xchg
push
daa
mov
loop
test
lods
jmp
add
pop
scas
fists
mov
shl
sub
sti
insb
add
stos
imul
sti
push
mov
lcall
lahf
add
adc
push
push
aaa
loope
and
dec
jbe
cmpl
jle
sbb
test
push
jl
int3
mov
fs
lcall
outsb
jmp
xor
in
lret
ljmp
sub
fcompl
daa
shll
pop
fisubl
movsl
jl
xor
int3
dec
pop
sbb
push
pop
ficoms
cmpsb
sub
je
mov
sti
pop
movb
and
adc
popf
adc
cld
push
lahf
in
out
push
push
hlt
sub
xchg
addr16
jg
add
outsl
mov
adc
sub
jne
dec
dec
jns
mov
jns
test
inc
or
adc
push
sbb
cli
movsl
inc
pop
add
shrl
and
jns
inc
mull
inc
aas
and
or
inc
sub
out
rcll
xchg
movsl
loop
in
push
movsl
fidivrs
mov
sub
sbb
sahf
jl
movsl
fisubrl
sbb
popa
imul
lahf
loope
notl
sbbl
imul
cmp
inc
push
mov
dec
in
mov
sub
push
sbb
or
ficoml
mov
mov
dec
notl
insl
arpl
and
push
sbb
cmp
out
push
call
pop
cmc
fstl
mov
push
imul
add
mov
sbb
in
lods
add
mov
out
divl
push
xchg
inc
sti
ret
fstpt
or
jns
cmp
idivl
cltd
cwtl
fildl
loop
ds
xchg
out
xchg
mov
lds
sbb
cmp
xchg
pop
sbbb
mov
or
jo
mov
sahf
xchg
lcall
sti
mov
out
push
sbb
mov
mov
jno
cmp
or
sar
sub
icebp
jl
mov
shlb
cmc
inc
dec
jl
dec
mov
lock
icebp
sub
cmp
rorl
mov
aas
mov
test
cmp
mov
pusha
push
push
insl
es
cltd
dec
out
gs
les
and
jg
mov
adc
mov
les
iret
and
cmpsb
sub
loopne
pop
and
pop
mov
inc
test
dec
jnp
and
mov
mov
add
shlb
test
xchg
jmp
dec
jns
dec
xlat
mov
cmpsl
xchg
and
fcoms
mov
xor
notb
fcomps
stos
adc
xchg
jmp
lret
cmpsl
out
out
dec
rolb
sarb
cmp
cmpsl
movsl
sub
mov
mov
push
adc
and
shlb
lock
inc
ss
fldt
cmp
cmpsl
sbb
pop
xor
pushl
in
out
sbb
or
xlat
enter
dec
dec
ljmp
adc
movb
mov
pop
jg
inc
fwait
cmp
mov
cmp
sbb
pusha
je
flds
lcall
inc
jg
sbb
cmpsb
sti
xor
or
mov
sbb
test
loope
mov
arpl
pushf
lods
xorb
ja
aas
adc
dec
sub
xchg
pextrw
mov
sbb
cmc
jmp
inc
outsb
push
imul
pop
es
push
ret
push
mov
mov
jo
mov
cmp
test
scas
icebp
ljmp
add
mov
test
jl
stos
and
xor
pushf
out
loopne
popf
aad
dec
jecxz
aaa
mov
or
gs
jp
inc
out
pextrw
cmp
fistl
jne
add
fidivrs
pop
in
lds
lea
dec
sub
add
fldcw
mov
ds
lock
mov
or
mov
inc
shld
lea
nop
test
imul
repz
repnz
and
mov
sub
mov
setl
cmpsb
subl
pop
mov
pop
xchg
loopnew
push
daa
and
pop
sbb
adc
push
movsl
cs
cmp
into
pop
loopne
ss
ljmp
and
mov
into
gs
sub
add
xchg
je
jp
movsl
addr16
xor
jmp
mov
les
dec
xchg
mov
pop
jns
cmp
mov
mov
test
aad
inc
jo
push
lcall
into
push
cli
in
xchg
jae
repnz
add
xor
ret
sti
fcomps
cwtl
mov
addr16
rorb
pop
adc
fcoml
shll
clc
cmp
xor
test
lcall
inc
shlb
daa
jg
xor
cmp
and
rolb
lods
mov
cltd
packssdw
xor
add
cmc
cltd
push
in
negl
jge
and
inc
inc
push
lods
insb
stc
call
outsl
notb
cwtl
and
movsl
gs
adc
call
jg
orb
pop
mov
mov
out
mov
stos
pop
jle
jmp
or
mov
sbb
jg
jg
push
int3
outsb
popf
mov
or
mov
jle
pusha
cmpsl
adc
inc
bsr
dec
xchg
add
xchg
xor
jecxz
xchg
mov
mov
ficomps
jge
scas
mov
jae
imul
test
push
push
and
shll
shrl
ror
ficoml
xchg
adc
popf
addl
int3
leave
daa
insb
sarb
and
insb
push
jl
push
xchg
je
test
sbb
mov
cmp
push
jle
cltd
fnstsw
fdivp
rol
or
clc
enter
add
lret
xor
testl
in
sub
ljmp
inc
add
out
jo
mov
aas
lret
inc
mov
in
repz
leave
add
cmpl
pop
jg
gs
adc
stos
cwtl
mov
xor
fmul
jo
aam
inc
loop
out
xchg
sub
adc
inc
loope
cs
push
pushf
cmp
jle
test
inc
pop
cwtl
mov
fdivrl
fldcw
and
cmp
rcll
outsb
pop
in
movsb
lods
hlt
cmc
mov
sahf
sub
cmp
jmp
popa
cld
xchg
sbb
js
add
ja
xor
xchg
in
fdivl
inc
call
arpl
pushf
jmp
pop
rcr
andl
andb
loopne
mov
shll
pop
fidivs
aaa
and
xchg
jae
sbb
lret
add
mov
push
addr16
push
or
pop
scas
imul
dec
das
jb
pusha
jmp
movsl
inc
cwtl
pop
arpl
inc
inc
mov
aam
sbb
outsb
jl
mov
lahf
enter
jb
ud2
cmp
sbb
jae
loopne
ja
mov
cmc
out
mov
idivb
cmp
pop
push
push
lods
aaa
and
fs
or
test
imul
repnz
xor
lea
lock
into
jle
sbb
mov
xchg
xor
pop
mov
push
sbb
pushf
orb
lret
pop
jnp
icebp
pop
add
cmpsb
es
push
xor
fndisi(8087
mov
scas
mov
sub
dec
sbb
push
mov
mov
mov
jl
bound
cmp
inc
clc
insb
idivb
call
cltd
out
loop
dec
cmpsb
rclb
or
xor
fisttpll
or
pop
push
movsl
jb
sbb
pusha
sbb
jnp
nop
mov
mov
pop
data16
mov
popa
push
jne
rorb
lret
mov
sub
fnstsw
mov
mov
jecxz
jo
jbe
lods
xlat
ds
cmpsb
xchg
outsb
cli
das
stos
mov
cli
fmulp
jle
push
mov
lret
xor
movsl
loop
outsb
push
add
std
jns
lret
cmp
les
std
in
cmp
pop
mov
xorl
repnz
das
sub
cmp
adcl
pop
scas
or
adc
add
add
mov
add
bnd
testl
imul
fcmovnbe
jecxz
ja
inc
fisttpll
cmpsb
cwtl
rolb
fdivs
dec
xor
mov
lock
test
in
clc
pop
outsl
cwtl
mov
inc
ret
rcrl
adc
movsb
xor
int
dec
sbb
pop
mov
mov
stos
sti
nop
insl
leave
mov
xor
or
out
and
mov
xchg
dec
sub
xchg
cmp
cmp
dec
sbb
or
dec
cli
jnp
cltd
cld
cmp
dec
bound
push
inc
test
or
into
cmp
in
cmp
pop
out
push
sub
and
dec
call
std
test
fdivl
pop
sbb
cmp
mov
xor
mov
aad
lret
cs
push
jne
sbb
xor
mov
push
rcrl
xor
lock
xor
ss
pop
mov
dec
fcmovnb
dec
dec
movsb
inc
ja
jle
or
insb
lcall
testl
xor
mov
xchg
bound
pop
cmp
lahf
cmpsb
mov
jo
xchg
inc
insl
mov
jle
mov
mov
adc
inc
testb
es
fldt
mov
sbb
fwait
pop
inc
pop
sub
sti
mov
and
mov
adc
pushf
sbb
je
jle
fisttpll
ljmp
cmp
jae
adc
sbb
inc
cmp
dec
aad
cs
push
mov
mov
mov
fstpl
ja
jmp
or
pop
jo
sbb
scas
add
addr16
popa
call
aaa
jbe,pn
sbb
dec
push
sub
push
jmp
push
and
ret
mov
pusha
outsb
xchg
dec
adc
mov
xor
mov
scas
pop
fsts
adc
mov
das
inc
jmp
sub
pop
imul
or
cmp
sub
fcmovnu
lret
lret
sti
sti
jmp
fwait
fwait
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
lret
sti
sti
jmp
fwait
fwait
mov
pop
pop
jnp
sbb
imul
or
fildl
lret
lret
or
jmp
fwait
fwait
fwait
mov
pop
pop
dec
and
push
sbb
or
mov
xor
push
sti
jmp
in
adc
je
inc
push
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jnp
sahf
test
mov
movsl
js
rsm
and
sub
out
cmpsb
add
repz
out
jne
gs
test
mov
movsl
jbe
lds
inc
in
adc
xchg
aaa
gs
xchg
cmpsb
test
aad
lds
mov
add
adc
gs
push
ficoml
jno
std
adc
es
das
inc
loope
mov
mov
xchg
jge
cmpsl
cmp
jno
rorl
cmp
ret
std
pop
cli
imul
xor
int
xchg
push
inc
xchg
pop
pop
adc
mov
or
call
js
or
and
sbbb
jns
movsl
ja
cltd
lds
inc
sbb
lret
jnp
in
ret
mov
call
jmp
aam
rclb
loopne
data16
notb
lret
add
mov
jp
shll
dec
roll
pop
add
jae
out
xchg
popa
fs
mov
movsl
jbe
and
push
cmc
in
adc
cwtl
and
jne
or
cli
push
test
push
lds
daa
mov
jo
jno
pop
out
lahf
xor
mov
xchg
scas
xchg
int
pop
popf
pop
mov
mov
jo
push
ljmp
adc
data16
xor
lds
inc
in
adc
xchg
jne
gs
test
mov
movsl
jbe
lds
inc
in
adc
xchg
jne
gs
loop
mov
sbb
jns
mov
and
notl
pop
mov
pop
loopne
cmpsb
jne
mov
mov
cmc
lds
dec
sbb
jbe
sbb
or
in
push
rorl
inc
lahf
pop
mov
movsb
out
and
mov
int3
jae
mov
pop
rol
outsb
xor
sbb
adc
in
cmc
adc
adc
shlb
inc
and
cltd
fcmovnu
scas
and
ja
test
dec
push
sti
aaa
mov
push
and
cld
insl
or
push
adc
xor
loope
xchg
inc
sub
mov
loopne
cmp
sub
sbbl
xor
mov
sub
shrb
push
enter
and
ror
cmp
test
cwtl
stc
sbb
rorl
pop
sub
pop
jae
jno
roll
rcll
dec
dec
sbb
mov
nop
cli
adc
arpl
mov
mov
out
adc
xchg
repnz
inc
gs
mov
hlt
inc
cmc
dec
dec
mov
xor
push
repnz
push
in
je
fadds
mov
xor
lret
fs
into
outsb
jnp
mov
sbb
jl
rorb
cs
and
sub
cli
icebp
mov
xchg
out
cmp
jmp
pop
notl
push
out
jge
push
int3
lcall
js
mov
push
orl
stos
sbb
mov
stc
lock
bound
imul
xchg
ljmp
and
stc
push
ss
pushf
enter
aam
int
jecxz
lods
popa
or
jmp
sbb
push
adc
fcoml
xor
dec
test
xchg
subb
icebp
or
mov
jno
cmp
out
dec
sub
xchg
inc
imul
sbbb
cli
pop
push
adc
jno
dec
fwait
add
sub
dec
mov
jns
jl
mov
incb
insb
mov
sub
in
push
repnz
mov
sbb
bound
mov
fimull
nop
dec
dec
aaa
dec
test
mov
nop
cmp
filds
lret
mov
lods
xor
mov
pop
dec
les
cmp
mov
cmp
push
cmc
out
inc
mov
ja
mov
adc
cmp
repz
cwtl
jge
nop
in
dec
aas
fwait
mov
xchg
cmp
xchg
jb
iret
cmpsb
push
jle
out
xor
nop
cs
mov
cmp
icebp
ljmp
das
fs
adc
dec
push
lret
sbb
xor
inc
ljmp
and
pop
pop
jnp
in
xchg
mov
mov
and
mov
pusha
fldt
arpl
and
es
adc
cld
cmpb
and
insl
in
ss
fsubrl
iret
lea
adc
lahf
mov
cmc
stos
in
in
push
xchg
push
cmp
push
pop
mov
pop
pop
xchg
cmpsl
scas
mov
sbb
outsb
lret
stos
pop
rol
or
adc
enter
icebp
loope
lret
pop
mov
in
icebp
jge
iret
mov
mov
leave
jl
inc
ret
es
add
cli
mov
sbb
inc
pop
dec
mov
or
jo
adc
mov
test
push
lods
call
nop
mov
imul
repnz
into
sahf
les
inc
rcrb
out
out
cmp
aad
fidivrl
lahf
push
add
mov
inc
mov
adc
fistpl
sahf
negl
enter
into
jmp
fwait
inc
mov
ja
movsl
dec
adc
inc
mov
adcl
inc
inc
daa
fdivrl
gs
popa
mov
fsubrl
dec
sbb
and
roll
lds
movl
ljmp
push
ret
sahf
inc
dec
hlt
add
int3
dec
iret
ds
jl
repz
addb
and
clc
addr16
fcmove
mov
cmpsl
popf
push
mov
ficoml
pusha
in
dec
movsl
jle
mov
jle
popa
jnp
add
adc
ret
jae
dec
inc
and
mov
aas
sub
mov
push
lock
out
xor
mov
lcall
sahf
adc
mov
es
insb
jbe
and
faddl
mov
es
jg
insl
and
adc
sbb
stc
dec
repnz
ret
pop
imul
pop
sbb
arpl
scas
dec
xchg
out
icebp
push
imul
idiv
jg
hlt
or
cld
orl
ret
rcrb
adc
cmp
cli
test
and
inc
jp
stos
push
jmp
pop
inc
jle
dec
arpl
ljmp
xchg
or
sbb
sbb
xlat
sub
and
xchg
jns
sbb
cmpsl
add
addr16
pop
mov
and
pop
mov
sahf
cmp
fisttps
in
out
mov
nop
jge
fcomip
dec
adc
push
in
icebp
xor
jg
es
aaa
sub
out
pop
in
lds
pop
jmp
pusha
sub
mov
dec
repz
inc
pushf
mov
js
xchg
pop
clc
rolb
in
jbe
stos
aam
repz
jle
fldl
inc
cmp
fsts
fcoml
mov
fdivrl
iret
add
add
push
or
push
push
xchg
mov
addb
dec
push
sub
push
in
pop
inc
sub
fldcw
xchg
adc
lret
cmc
and
and
xchg
pop
fldl
mov
les
xchg
inc
outsb
aam
neg
dec
mov
adcb
nop
cld
xor
jne
xchg
dec
mov
xchg
ret
scas
xor
imul
arpl
cmp
js
mov
and
sbb
add
xor
vpminub
add
jge
adc
popa
fidivl
inc
cmc
inc
stos
rcll
bound
mov
ja
mov
and
fwait
popa
out
mov
mov
hlt
xchg
leave
pop
push
data16
out
insl
rcll
mov
mov
xchg
addb
into
cwtl
iret
adc
dec
out
sarb
mov
popf
push
test
in
sbb
scas
inc
lcall
add
jae
push
jns
jb
repnz
loop
pop
dec
lea
sbb
data16
loope
mov
mov
cmpsl
pop
lcall
xor
cld
pushf
or
mov
out
pop
out
xchg
mov
inc
nop
push
pop
sub
test
sti
add
in
xor
gs
test
adc
mov
sub
dec
jmp
inc
call
scas
inc
sub
xchg
sub
or
dec
mov
in
lahf
ret
jne
mov
lock
lahf
jno
aas
aam
aas
ss
xlat
rclb
sub
ja
outsb
daa
fisubl
test
add
in
daa
adc
jecxz
mov
aam
icebp
hlt
push
cmp
sub
dec
push
std
imul
jle
and
mov
test
push
cmpl
stos
icebp
popa
loopne
cmp
xor
lods
hlt
loope
out
push
sbb
repz
pop
cli
adc
call
xchg
jbe
add
push
sbb
sahf
or
xchg
sub
pop
adc
das
notb
dec
div
ja
outsb
je
in
test
pop
cmpsl
push
adc
sub
jecxz
dec
sub
aam
cmc
mov
and
inc
jl
in
mov
pushf
xor
mov
lods
xchg
inc
pop
les
mov
in
dec
mov
fwait
fs
sbb
sahf
loop
test
mov
cli
xor
xchg
dec
das
pop
add
xchg
outsl
shrb
fisttps
popa
cwtl
in
fs
dec
jne
mov
stc
rorl
fwait
ja
jo
rorb
sub
std
les
aad
lahf
add
mov
test
and
je
scas
shll
xchg
test
xchg
mov
adc
fsubr
add
movsb
and
test
or
inc
test
std
popf
js
pop
xchg
sbb
jge
xchg
pop
pop
or
jle
fwait
mov
aas
rorl
jae
or
aad
fistps
mov
cltd
cmc
aad
mov
adc
push
mov
fistps
sub
mov
sbb
mov
pop
into
rclb
jmp
lret
dec
das
in
add
ja
mul
stc
jae
lcall
andl
and
jl
mov
add
das
enter
sub
pushf
cmc
lds
outsb
push
push
mov
repnz
push
mov
mov
and
push
dec
mov
mov
mov
ja
loope
add
std
inc
std
add
jge
sbb
fwait
addl
repnz
imulb
out
mov
add
or
cli
pop
loopne
xor
daa
push
push
inc
mov
mov
pop
pop
dec
int3
pushf
jno
mov
dec
sar
sub
sbb
sub
ja
stos
push
mov
mov
loope
es
nop
out
loop
dec
sub
insb
jb
cmp
pushf
inc
sar
mov
inc
xchg
jno
bound
add
or
inc
fwait
insb
push
add
and
and
cmpsl
xor
je
fcmovnbe
mov
xor
mov
mov
cmp
xchg
xor
dec
add
jno
roll
add
or
xchg
mov
mov
adc
lahf
adc
mov
jl
inc
pop
fwait
adc
cli
arpl
imul
ret
dec
mov
dec
loope
cltd
sub
das
mov
sbb
or
mov
or
sbb
add
test
or
xchg
scas
add
movsb
aas
ret
and
and
fadds
pop
mov
add
adc
mov
push
arpl
xor
clc
cmp
inc
xchg
dec
stos
scas
ss
int3
mov
sbb
add
dec
jmp
mov
es
or
jp
in
js
std
pop
add
imul
push
push
stos
or
mov
out
xchg
icebp
imul
pop
xchg
ss
fucomip
and
lods
and
sub
or
xor
shlb
fmull
popf
lcall
fidivl
xor
xor
xchg
imul
inc
push
jb
das
out
jecxz
and
stc
mov
dec
mov
loope
cmp
ljmp
jbe
sub
test
js
inc
aaa
imul
xchg
xor
popf
xor
mov
xchg
dec
sub
shlb
push
inc
repnz
pop
jbe
push
andl
mov
dec
gs
xor
out
dec
enter
push
sub
repz
jnp
push
jne
lret
add
in
jmp
clc
mov
push
dec
sub
push
rolb
pop
xchg
mov
jg
push
outsl
sahf
and
pop
in
cwtl
adc
sbb
inc
pushf
inc
into
xor
outsb
clc
mov
popa
adc
and
jo
cmc
add
das
push
fdivrs
sarl
negb
insl
dec
outsl
mov
lcall
pop
mov
outsl
push
pop
add
int3
inc
gs
repnz
push
lods
pop
jae
sbb
out
pop
jmp
in
pop
pop
pop
repz
shl
pop
clc
jno
addr16
lret
je
ret
lods
push
cmp
rcrb
aaa
xor
pop
rolb
jl
push
mov
and
lods
push
aas
pop
mov
mov
mov
imul
xchg
mov
push
xchg
movsb
mov
cltd
dec
fnstenv
jbe
popa
test
jae
mov
das
popf
cmp
xchg
xor
jecxz
into
bound
ss
out
fs
js
call
add
push
arpl
orl
loop
fiaddl
out
hlt
sub
push
lahf
fcmove
imul
stc
add
inc
sub
mov
pop
mov
rcl
push
es
jb
cmp
or
push
xchg
fistps
gs
call
test
jo
lock
push
add
es
mov
mov
in
adc
rcrl
insb
addb
mov
ds
fimull
push
jle
cmpsl
xchg
movsl
mov
push
pop
mov
and
pop
shl
mov
mov
add
dec
or
push
popf
push
clc
pushf
fs
ret
outsb
cmp
std
sbb
xor
xchg
test
into
xchg
mov
lea
pusha
lret
pop
enter
jge
mov
inc
cmp
dec
jo
or
jbe
and
test
mov
sbb
mov
adc
mov
cmpsb
call
popf
xor
inc
aam
ss
pop
cs
dec
push
adc
or
push
inc
mov
sub
jmp
cltd
insl
dec
adc
subb
sarb
jle
repnz
arpl
mov
imul
arpl
cli
mov
cld
sbb
call
mov
into
fcmove
into
sub
rolb
mov
cmp
scas
mov
bound
pop
out
xor
in
movsl
lods
xor
cmp
ret
xor
cmpsl
cmp
mov
sub
std
es
ljmp
xor
mov
dec
imul
xor
xchg
fnsave
sub
mov
push
ret
xchg
sub
pusha
int3
int3
adc
into
mov
and
sub
je
add
in
ret
mov
roll
lods
fnstcw
test
cmpsb
jmp
pop
in
loopne
pop
dec
mov
rcrl
xchg
and
mov
test
mov
daa
jne
pusha
rcll
or
mov
push
sbb
call
ja
pop
cltd
rcrb
in
inc
sti
into
mov
jg
inc
xchg
add
jo
fwait
clc
call
loopne
fdivs
add
outsl
jle
sbb
push
push
push
aas
insl
ret
lods
pop
lods
dec
xor
scas
ljmp
ret
adc
pop
outsl
or
push
mov
jbe
daa
ja
lods
push
push
dec
mov
ret
pop
lods
jmp
lcall
test
pop
push
mov
ret
push
mov
pop
sbbb
lods
je
pop
popa
adc
pop
mov
dec
xor
bound
pop
or
fsts
xchg
int3
sbb
daa
stos
testb
xchg
inc
or
dec
push
dec
push
inc
adc
js
cmp
sbbb
xchg
ss
fimull
inc
pushf
fisubrs
test
orb
or
in
mov
in
push
xor
adc
sub
cld
dec
jnp
cmc
add
xor
inc
bound
sbb
push
cli
lcall
cli
fnstsw
stos
inc
xchg
lret
fisttpll
shll
mov
sahf
jb
xchg
xchg
xchg
orb
pop
xchg
in
push
mov
mov
ficompl
inc
sbb
push
out
adc
aam
jg
sarl
fisttps
fadds
push
xchg
inc
xchg
cmp
xor
ret
les
popl
imul
sbb
xorl
inc
push
rorb
and
mov
mov
jle
pop
cmp
mov
or
mov
or
inc
gs
lods
sar
jge
adc
add
xchg
mov
adc
in
pop
pop
andl
sub
pop
jns
adc
pop
in
andb
loopne
jns
test
xchg
in
lods
out
mov
dec
jno
cld
or
in
mov
insb
sarl
xchg
repz
dec
jnp
jnp
out
jle
sub
fiadds
icebp
pop
sarb
mov
mov
int3
cmp
mov
and
pop
out
inc
jle
sbb
repnz
mov
mov
shl
and
loopne
test
int3
mov
loope
xorb
sbb
inc
pop
adcb
daa
jge
leave
push
xor
fsubrs
std
fimuls
cmp
push
mov
icebp
lods
inc
or
outsb
xchg
push
pop
inc
or
inc
testb
sar
dec
fwait
pop
mov
mov
js
std
push
rcrl
push
and
js
sbb
shlb
movsb
shl
ret
sbb
push
or
gs
hlt
cltd
in
jbe
fwait
push
jp
sbb
add
pop
mov
leave
rcl
jle
movsl
cmp
cltd
or
in
sbb
mov
mov
ds
popa
inc
mov
adc
fcomps
mov
adcl
pop
les
sarb
mov
cli
rcr
es
stc
jno
outsb
aam
mov
dec
xor
push
push
jg
fnsave
rcrb
loopne
lea
add
shr
xchg
call
in
lds
xor
sahf
inc
and
xchg
fiaddl
js
ret
incb
dec
or
sbb
and
incb
lock
fs
xchg
fcom
stos
xchg
push
mov
fwait
outsb
cmp
mull
movsb
rorl
mov
xchg
inc
cmp
in
orps
jno
daa
insb
je
xchg
js
ljmp
cmc
or
cli
dec
pop
push
scas
sbb
insb
push
nop
sub
xlat
push
mov
mov
adc
or
stos
data16
cmp
pop
xchg
push
jl
pop
push
add
popa
test
mov
das
fistl
iret
cs
add
cmp
mov
inc
ljmp
mov
mov
cld
inc
and
mov
data16
ljmp
push
fisttpll
push
jo
dec
mov
jg
pop
inc
xor
push
jge
cmp
pop
dec
adc
push
and
dec
lretw
imul
int
and
test
and
xor
mov
jge
mov
rcr
mov
jnp
lret
ret
and
dec
mov
sub
mov
dec
inc
cmp
push
inc
cltd
and
jno
lahf
movsb
mov
jmp
adc
icebp
flds
mov
movsl
fxch
dec
std
scas
and
xchg
cmpsb
mov
and
inc
dec
mov
test
pop
call
fstp
dec
data16
or
ja
mulb
pop
cmc
sub
sub
pop
or
push
faddl
insl
mov
inc
adc
mov
push
hlt
stc
mov
jne
mov
push
loope
fbld
mov
sub
in
lea
pop
jp
mov
mov
pop
shlb
or
sbb
jmp
out
cli
cmc
lret
push
mov
and
and
clc
icebp
jbe
pushf
fwait
and
es
outsl
sbb
mov
icebp
loope
sub
mov
ror
aaa
bound
pop
imul
jp
inc
lods
hlt
jmp
push
scas
jmp
dec
in
jg
jo
stc
mov
mov
cmpsl
lock
mov
adc
push
gs
inc
rcll
test
xor
mov
aaa
decl
mov
adc
xor
xor
sbb
push
xchg
hlt
aad
call
push
and
ss
add
jns
mov
or
dec
unpckhps
js
test
jmp
and
insl
into
dec
stos
add
test
rolb
push
push
ja
jo
lret
xor
sub
shrl
lock
jg
sti
out
push
inc
lods
xchg
push
push
test
out
push
or
fisubrs
jge
sub
mov
aaa
sarb
mov
imul
popa
mov
pop
and
push
jbe
out
jge
addr16
xor
iret
imul
or
out
xchg
adc
adc
cmp
sbb
std
mov
inc
or
aam
mov
xchg
inc
push
mov
push
adc
rorb
outsb
jb
inc
rorl
lcall
jl
xchg
sbb
pop
or
je
out
inc
icebp
adc
inc
mov
push
stos
jbe,pt
in
cmp
and
push
popf
xlat
sbbb
jns
mov
jmp
xor
dec
scas
sub
inc
jl
pop
rorb
jle
dec
cmpsl
jecxz
xlat
data16
out
imul
lret
push
dec
dec
cltd
test
push
fsubrs
mov
test
sbbl
xchg
sbb
pop
lret
mov
jg
jne
jl
push
repnz
cmp
test
ret
mov
mov
stos
out
push
mov
sub
rorl
shrb
movb
mov
arpl
add
jno
mov
in
ja
imul
add
fbld
leave
out
aam
xor
jecxz
std
out
insl
jae
iret
out
inc
inc
nop
xchg
sarl
sbb
mov
push
push
adcl
iret
arpl
movsl
mov
xor
in
ret
fimuls
in
adc
scas
aas
mov
adc
inc
cli
in
and
mov
sub
add
push
loopne
ss
xchg
jecxz
negl
movsb
dec
cltd
scas
push
xchg
incb
xor
xor
fldenv
jg
sub
cs
test
mov
movsl
jbe
lds
inc
in
adc
xchg
jne
gs
test
mov
movsl
jbe
lds
inc
in
adc
xchg
jne
gs
and
movsl
ja
bound
cmc
inc
in
xchg
cmpsb
add
notb
inc
shlb
gs
or
jbe
jbe
push
cmc
in
adc
xchg
sub
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
mov
mov
cmc
xor
adc
jb
pusha
push
inc
gs
jne
test
mov
shl
ret
add
or
jb
push
push
push
gs
jne
test
mov
lret
cmc
sub
jp
jb
or
push
fcomi
int
xchg
int
mov
in
rclb
outsb
add
pusha
fwait
in
pop
dec
jp
arpl
out
jae
xor
pop
sbb
fadd
loop
push
in
push
pushl
xor
push
and
pushf
push
gs
cwtl
popa
iret
les
pop
push
add
sub
jb
sahf
push
push
loopne
int
shlb
or
pop
or
mov
bound
loop
das
lds
cmc
bound
or
xor
xor
in
adc
repnz
gs
mov
inc
sbb
mov
cmc
or
in
lret
adc
inc
outsl
fstl
aaa
inc
xor
push
gs
pusha
jnp
mov
mov
shl
fcomi
sub
sbb
dec
gs
sbb
add
mov
mov
ret
jl
adc
inc
inc
jb
pop
xor
sbb
cmp
loopne
lock
shl
sahf
test
xchg
xchg
jno
inc
insb
adc
push
jb
or
es
ror
xlat
ljmp
in
cmc
xor
add
push
gs
jne
test
mov
shl
ret
add
add
push
gs
jne
test
ja
mov
cmp
push
mov
in
bound
mov
sub
cmp
add
pop
addr16
mov
repnz
out
fildl
insb
mov
cmc
xchg
gs
add
je
shlb
add
addr16
push
js
and
adc
daa
loope
test
test
ljmp
in
ss
mov
ja
and
push
dec
subl
jae
fnstenv
int3
inc
fmulp
dec
test
pop
ss
sbb
sub
inc
jle
std
ljmp
movsb
sub
icebp
mov
or
mov
jo
jg
cmp
je
stos
jl
gs
mov
pop
repnz
in
out
lods
daa
arpl
and
leave
xchg
sbb
movsb
add
adc
xchg
dec
jno
mov
jns
mov
cmp
out
push
dec
mov
fwait
adc
jmp
out
pushf
xlat
sub
push
loop
adc
jbe
inc
jl
ret
cmp
xchg
xchg
mov
repnz
pop
inc
into
dec
sbb
movsl
inc
rol
popf
adc
push
xchg
adc
push
scas
pop
or
mov
adc
mov
mov
adc
shlb
xchg
das
mov
push
cli
rcll
lods
and
sahf
cwtl
adc
push
jg
mov
leave
aad
cmp
add
test
aas
sbb
test
gs
mov
xor
pop
imull
and
pop
outsl
xchg
cmc
pop
jo
jmp
ljmp
and
iret
aad
ss
fdivl
mov
or
push
ret
and
push
lea
mov
xchg
les
mov
ja
xor
addr16
lahf
adc
pop
jecxz
push
inc
out
mov
sbb
out
push
and
rorl
repnz
inc
mov
outsl
inc
lcall
leave
pop
test
xlat
test
rolb
iret
adc
ss
jo
dec
mul
movsb
aam
push
adc
movsl
xor
jge
mov
rcrb
pop
cmp
test
dec
push
inc
addr16
sub
inc
xor
pop
add
data16
fidivrl
add
adc
dec
fsubrs
pop
adc
jmp
fdivl
xchg
ds
mov
mov
shl
ret
lret
stc
push
cwtl
pop
das
mov
aas
aam
inc
inc
cmp
clc
scas
xor
xchg
mov
in
add
mov
or
adc
iret
push
jns
mov
sub
subl
adcb
mov
shrl
jbe
iret
mov
or
push
repnz
lcall
inc
subb
rolb
mov
aaa
or
notb
push
xchg
icebp
imul
xchg
mov
push
adc
lcall
mov
add
lahf
jnp
xchg
ret
push
ljmp
and
in
xchg
shl
mov
mov
sbb
cmpsl
sub
push
pop
mov
sub
sub
xchg
outsb
lret
or
ja
stos
xchg
and
jno
xchg
cltd
mov
das
adc
enter
sti
inc
outsl
sti
cmp
fists
fisttpll
dec
scas
outsl
push
pop
enter
bound
hlt
in
add
jnp
xor
sub
popa
insl
push
lcall
shl
and
mov
into
hlt
cld
mov
test
adc
mov
jne
and
std
mov
bound
xchg
jne
ret
outsb
jl
push
mov
xchg
sahf
pop
dec
mov
jle
shlb
mov
neg
leave
add
push
mov
sbb
ret
xor
out
outsl
fstpl
ss
inc
inc
insb
ret
outsb
aad
dec
cmp
addb
jecxz
dec
insl
fs
out
dec
or
adc
cmp
imul
sub
cmc
insl
adc
dec
out
cli
and
hlt
mov
ss
mov
je
jge
pop
dec
fdivrp
sbb
or
pop
lds
ss
xchg
repnz
clc
repnz
mov
sbb
and
push
xchg
insl
dec
imul
iret
adc
jae
imul
lret
inc
cmp
mov
mov
call
mov
in
enter
ficompl
dec
aaa
into
mov
cmp
imulb
xor
popa
pop
or
cs
pop
sub
dec
sub
in
sbb
ret
sub
pop
mov
mov
mov
cmp
xor
call
stc
fiaddl
or
adc
xor
test
sub
pop
dec
mov
ljmp
xor
daa
lahf
cmp
std
inc
test
int3
xor
pop
aas
add
xor
sbb
jge
add
sbb
mov
dec
adc
out
sti
aas
and
test
add
sar
iret
cmp
les
out
daa
mov
xor
mov
hlt
jmp
aam
cmpsl
sbb
ljmp
cwtl
inc
test
adc
mov
mov
mov
fwait
in
loope
fstpl
or
pop
jnp
lcall
cmp
xor
xchg
movsb
sub
pop
movsb
scas
ret
mov
cmovl
mov
shlb
stos
scas
dec
das
int3
in
push
lods
mov
pop
or
dec
fsubs
out
pusha
aam
stc
test
jns
dec
fisubrl
mov
xchg
dec
push
xor
ret
or
mov
push
cli
fsubrl
push
test
cwtl
mov
iret
pushf
lret
adc
pushf
mov
test
and
fsubrs
rcll
outsb
xor
jne
inc
inc
gs
cli
push
cmp
imul
fisubs
loope
dec
xlat
ja
stos
mov
xchg
test
call
mov
xorb
mov
ret
ret
push
jp
sbb
rcr
pop
or
and
shll
cmp
xchg
mov
jb
add
mov
pushf
jg
xor
and
cmp
xor
push
dec
fimuls
pop
testb
push
cmpsl
imul
iret
inc
sbb
pop
insl
lods
js
repz
ss
add
xorb
scas
in
add
push
push
add
pop
and
mov
loope
jle
clc
dec
test
fstl
out
xchg
push
pushw
arpl
push
loop
jp
adc
inc
call
fdivrl
and
int3
and
and
pop
mov
test
leave
pop
imulb
and
aam
outsl
xchg
mov
data16
dec
lods
inc
fisubrs
cmp
mov
push
cmp
data16
adc
add
mov
inc
jne
cmp
mov
mov
mov
push
pop
jge
mov
add
sbb
js
ss
mov
pop
ss
pop
sub
stos
xchg
cmp
add
cltd
cmp
stos
outsb
mov
fstl
popa
push
inc
aaa
fstl
mov
sub
in
pushf
cld
loopne
lock
mov
hlt
dec
xor
inc
pop
and
andb
cmp
fnstcw
xchg
jmp
fsubr
pop
cwtl
pop
xchg
in
sbb
mov
sbb
adc
int
xchg
sbb
dec
gs
jae
ja
das
mov
adc
inc
into
dec
sub
xchg
pushf
xchg
stos
and
mov
outsb
mov
pusha
dec
lcall
inc
or
cmp
fisttpl
shll
dec
push
mov
addr16
push
cmp
fucomip
out
dec
mov
lods
dec
in
sbb
or
int
cs
nop
jge
mov
ds
jle
mov
pop
mov
rcl
jb
leave
push
adc
dec
add
cwtl
jbe
cmp
or
int3
testl
sbb
push
inc
ljmp
adc
out
shl
sub
sub
mov
pop
xor
jmp
lock
mov
test
subb
sarb
movsb
mulb
adc
add
mov
mov
mov
sbb
sbb
cmpsb
daa
jge
pop
cmp
out
fcomip
sub
lods
xchg
or
or
ja
jg
xor
scas
mov
in
pop
mov
rorb
mov
arpl
sarb
les
cmp
repz
sub
outsb
mov
sub
pop
xor
call
ret
sti
adc
sbb
popa
and
test
cli
mov
dec
inc
loop
push
mov
aam
add
pop
push
jae
xchg
out
cs
mov
or
sbb
nop
sar
xor
cmp
cmpsl
xor
jb
and
aad
push
lock
repnz
rorl
data16
jb
outsl
xor
pop
lea
lds
mov
mov
pop
lods
test
stos
add
mov
push
mov
gs
xor
inc
mov
inc
or
pusha
cmc
jb
fbld
je
fcmovu
mov
cwtl
popf
les
mov
sub
jne
scas
jle
adc
push
sub
mov
inc
mov
push
xlat
cmp
mov
pop
sbb
gs
push
icebp
je
in
rcr
je
test
sti
out
ja
push
add
das
test
mov
fmuls
imul
mov
arpl
cmp
cld
add
inc
push
push
push
std
push
flds
int
int3
jp
hlt
jg
inc
arpl
lods
lock
negl
lea
test
aaa
push
insl
out
cli
mov
cmp
or
stc
mov
fwait
xchg
cmpsl
lods
out
test
inc
jbe
xchg
es
jg
sbb
lods
sarb
call
pop
adc
cltd
cli
in
mov
repz
subb
enter
cwtl
or
jl
out
cmpsl
dec
jns
shll
mov
xlat
dec
sub
dec
aad
repnz
cmc
push
mov
movsb
out
pop
fs
lcall
mov
aad
pop
dec
popa
xlat
insb
fcmovnb
cmc
cld
dec
nop
mov
cmp
dec
xor
test
popl
jle
xchg
js
lret
leave
ja
mov
aad
inc
pop
or
lahf
test
repz
sbbl
popf
lret
fisttps
mov
pop
pop
cmp
subb
or
mov
sub
std
outsb
popf
xchg
in
lahf
lret
inc
lahf
jb
inc
pop
cmp
jbe
fcomip
cmp
xchg
iret
pop
push
popf
mov
xchg
loop
aam
movsl
fcmovb
jle
imul
hlt
mov
pop
dec
pop
mov
jns
movsl
or
jne
divl
imul
pop
imul
jns
adc
sahf
and
cwtl
sub
ja
mov
mov
push
stc
insb
les
add
stos
and
mov
outsb
notl
sub
cltd
loopne
push
and
sahf
mov
orb
sbb
jb
out
add
mov
cld
mov
sbb
das
cmp
cmp
loop
insb
and
xor
arpl
pushf
scas
rol
mov
cmp
cli
push
in
in
sbb
inc
push
mov
popa
pop
inc
sub
push
add
mov
icebp
bound
dec
adcb
fucomp
push
fcmovbe
mov
inc
mov
fisttpll
mov
jg
pop
sbb
dec
ljmp
cmpsb
mov
out
ds
fisubs
out
dec
ret
popa
sarl
dec
sub
jmp
sbb
or
adc
test
cmp
sub
ret
cmc
lods
xchg
dec
pop
lahf
pop
mov
jo
mov
lret
jecxz
inc
jl
push
pop
lods
jbe
jmp
push
idivl
or
scas
mov
popa
stc
xchg
shld
out
sub
cmp
sbb
xorl
popa
lcall
sbb
jo
in
mov
fisttps
leave
andl
jecxz
ljmp
inc
out
xor
nop
dec
test
sahf
call
mov
mov
imul
pop
clc
out
mov
sahf
jns
popa
mov
sbbb
sub
sbbb
jecxz
xor
inc
pop
and
xor
xor
push
mov
popf
adc
pushf
inc
int
lret
daa
push
sub
sub
jmp
out
cmp
movsl
mov
ret
sbb
push
cltd
or
jae
xor
ret
mov
xchg
mov
sbb
popa
xchg
and
push
lea
cmp
mov
adc
out
cmp
adcl
cmc
aam
pusha
fwait
int3
add
xchg
dec
jae
xabort
arpl
rcr
xor
arpl
adc
sub
and
int
js
xchg
ret
cmp
int3
fbstp
xchg
fnstenv
mov
or
jmp
lahf
mov
repz
sahf
popf
cmp
sarl
gs
dec
aam
sub
and
add
lea
pop
test
movsb
push
mov
push
sub
int3
jnp
xor
and
mov
mov
test
std
xor
push
fistpll
lea
mov
clc
cmpl
lret
xchg
or
cmp
or
pop
les
inc
sbb
jbe
jb
movsl
mov
mov
lahf
inc
mov
jg
dec
mov
xor
test
neg
pop
xchg
test
mov
bound
inc
dec
cmp
adc
pop
loop
push
push
pushf
aad
in
add
imul
out
scas
jmp
jbe
std
cmp
inc
pop
dec
lods
imul
push
int3
stc
pushf
sti
fistpll
test
iret
call
or
pop
popa
push
leave
iret
popf
or
xor
in
xor
jg
lea
jae
test
jecxz,pn
popf
lret
test
inc
outsl
mov
cli
lcall
add
pop
add
test
or
inc
xchg
xchg
pop
and
repz
sbb
adc
mov
iret
xor
js
icebp
mov
jmp
cmpsl
fistpll
push
sbb
std
mov
xlat
ds
xorb
test
xchg
mov
mov
adc
cmp
push
gs
pop
out
mov
mov
sbb
dec
inc
sub
adc
js
orl
pop
test
popa
inc
jecxz
mov
clc
out
je
stos
pusha
out
pop
push
rorb
lods
inc
cmp
mov
sahf
lret
inc
mov
stos
repz
mov
fbstp
dec
stc
mov
inc
fldt
sbb
push
popa
movsb
cmp
movsl
pushf
and
push
push
lds
xchg
xchg
pusha
insb
ds
cwtl
rolb
test
sbb
xor
notb
and
ds
test
mov
movsb
add
xchg
adc
adc
pop
cli
sub
daa
call
mov
das
cmp
push
push
orb
xchg
sbb
jge
inc
popa
pop
inc
scas
dec
dec
in
into
out
sbb
stc
fiadds
jns
pop
jno
frstor
addr16
and
xchg
pusha
scas
leave
sub
fdivr
rcl
jnp
add
cwtl
adc
xchg
or
lea
xor
std
push
call
test
mov
jge
incl
adc
cwtl
push
sbb
adc
and
out
adc
cs
xchg
inc
and
inc
push
sub
jecxz
ds
cld
loopne
inc
es
pop
ror
dec
jmp
push
sti
dec
mov
sbb
sbb
mov
jno
mov
sub
lret
icebp
loopne
scas
scas
mov
or
mov
andl
das
jo
pop
fistps
fsub
in
dec
hlt
lret
fsubl
test
mov
arpl
sub
push
cs
and
dec
mov
ficompl
sarl
push
test
mov
test
aaa
inc
subb
jg
sub
loope
sbb
loop
adc
nop
insb
bound
dec
push
xchg
das
sbb
jae
nop
mov
cld
arpl
imul
imul
mov
popa
adc
dec
sbb
cmp
lcall
fwait
dec
sbb
stc
icebp
in
mov
inc
mov
push
mov
fdiv
std
call
push
mov
rcl
lods
jl
cmp
cmp
movsl
lea
jns
scas
test
js
test
call
lods
pop
dec
mov
cmp
sub
call
jae
rorl
shll
nop
bound
dec
outsb
xchg
inc
xchg
testl
ret
mov
and
jmp
aad
jge
lods
out
sbb
inc
aam
xchg
daa
push
iret
inc
imul
push
pop
add
sub
test
test
cmpl
jg
pop
fnstcw
scas
ret
dec
int
loopne
xchg
stc
mov
in
loopne
ret
xor
adc
into
mov
push
jnp
push
add
icebp
fs
daa
mov
ror
sbb
dec
pop
sbb
iret
into
jns
dec
addr16
pop
mov
mov
dec
clc
subb
jp
movsl
popf
cmp
and
fiadds
outsl
push
mov
mov
and
mov
xchg
cli
das
mov
out
adc
mov
ficompl
pop
cmc
cli
out
sarb
sub
loopne
pop
xchg
adc
jnp
xor
ss
push
in
mov
out
hlt
scas
cmp
xchg
sbb
inc
or
or
pop
and
xor
sbb
jl
inc
pop
jbe
jge
sbb
jo
test
jle
mov
jmp
adc
cmpsb
add
push
or
adc
fcmovnu
ret
sub
loopne
cmp
dec
das
jle
sbb
outsl
jno
xchg
or
call
fsts
add
cs
push
leave
inc
cld
je
ret
lods
hlt
mov
int
bound
jecxz
cld
loopne
icebp
cmp
dec
mov
int3
fcompl
pop
mov
fsubs
cmp
mov
mov
sbbl
inc
dec
xchg
lock
fisubrl
adc
mov
and
mov
lods
sbb
and
clc
mov
ficomps
push
push
jo
and
mov
push
sbb
aaa
es
jle
dec
sbb
xchg
ja
lret
ljmp
cmp
scas
insl
sbb
xchg
cltd
pop
pop
out
test
xor
cmpsl
inc
outsb
mov
push
xchg
andl
xor
leave
stos
adc
out
adc
aas
outsl
imul
mov
cmpsl
int
cld
inc
jb
pop
mov
aaa
sbb
test
jle
fsubs
xor
mov
jbe
lods
testl
cmc
mov
sbb
adc
shll
push
pop
mov
add
movsl
sbb
stc
push
cmpsl
lahf
lds
aas
out
popa
cwtl
aaa
mov
inc
ljmp
or
ret
fdivp
cmc
sub
jp
xchg
xchg
bnd
jl
cmpsl
sbb
xchg
in
stos
in
test
in
xchg
push
mov
sbb
testb
mov
outsl
aaa
pusha
dec
mov
or
jnp
ret
loopne
aas
mov
push
mov
gs
cmp
adc
popa
cmp
outsl
dec
std
or
mov
mov
pop
test
xorl
mov
bound
sbb
adc
movsb
cli
xor
imul
cmpsb
stos
adc
pusha
scas
out
inc
scas
fs
int3
jp
jnp
mov
mov
add
mov
jbe
mov
xchg
fwait
dec
cltd
lods
pop
in
sub
push
mov
or
and
dec
insl
mov
xor
aaa
test
pop
mov
cmp
add
ljmp
sub
jge
ljmp
jl
cmp
cmpsl
iret
push
mov
cmp
jl
mov
mov
ror
js
mov
adc
cmp
repz
cmp
inc
pushf
ret
test
sbb
pop
jbe
leave
sub
in
jmp
cli
mov
xchg
and
lds
xchg
out
sub
xor
popa
cmc
iret
mov
cli
stos
push
adcl
cld
shr
fs
mov
fidivs
call
mov
fs
sbb
xor
pop
nop
fisttps
mov
push
fwait
ja
hlt
inc
push
xchg
std
into
rcll
or
xchg
fiaddl
lcall
or
daa
and
mov
in
insb
sti
mov
insb
push
mov
lds
push
fcmovu
inc
or
out
dec
das
andb
outsl
inc
jecxz
dec
xchg
cmp
add
and
mov
jecxz
mov
inc
lcall
or
inc
adc
xlat
jns
push
xchg
cwtl
movsl
xorb
in
cmc
xor
add
push
gs
jne
test
mov
shl
ret
add
add
push
gs
jne
test
mov
shl
ret
add
add
push
gs
jne
test
mov
push
in
cmc
int
fnstsw
add
lcall
inc
and
das
inc
push
jo
push
sbb
ds
lcall
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
adc
mov
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
jo
adc
mov
mov
cmpsb
xchg
mov
test
xchg
dec
pop
pusha
inc
jae
push
sub
popa
mov
cs
insb
int3
sti
sar
sub
movsl
outsb
pop
shll
add
mov
cli
call
jnp
cmp
movsl
icebp
shlb
mov
sub
pop
divl
in
int3
mov
jecxz
cmpsb
push
dec
cmpsl
aas
cmp
cmp
lea
test
leave
push
pop
push
jnp
daa
sub
jle
sbb
out
ret
fildll
mov
out
incb
notb
xchg
adc
mov
jl
test
xorb
inc
shl
addb
shld
jbe
inc
and
es
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
mov
add
jno
pop
pop
and
add
xchg
mov
mov
xchg
jecxz
out
adc
and
add
inc
aaa
push
pop
xchg
in
loop
loop
movsl
roll
test
movsb
add
inc
add
dec
arpl
push
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
cmp
dec
sub
divb
mov
sarb
mov
data16
out
xchg
ss
test
arpl
mov
loopne
in
pop
shll
mov
ds
dec
in
xorb
dec
in
ds
mov
stos
mov
in
pushf
jnp
gs
or
out
into
shlb
mov
pop
test
or
ret
stos
and
je
push
addl
shl
in
mov
js
xchg
mov
repnz
xlat
ret
xchg
mov
gs
fcmovu
out
fnsave
jnp
push
mov
jecxz
test
out
rol
jge
out
pop
call
mov
or
andb
push
mov
pop
mov
adc
and
add
or
inc
arpl
push
cmpsl
push
les
xchg
mov
mov
add
js
sub
mov
mov
sbb
add
mov
mov
and
mov
aaa
xchg
mov
jecxz
ret
mov
popa
cmp
lds
jo
and
mov
sbb
bound
testb
inc
sbb
out
addr16
fcomps
xchg
out
imul
lea
lahf
das
mov
mov
into
push
adc
mov
jmp
andl
mov
inc
stos
or
inc
pop
or
std
sub
dec
scas
jl
adcl
mov
sbb
add
mov
and
scas
cmpsb
loopne
dec
int3
inc
pop
call
stos
xor
hlt
lods
fwait
xchg
dec
mov
inc
js
fldenv
jle
push
sbb
je
test
xchg
enter
setno
fstl
int3
sahf
icebp
jmp
xchg
pop
shrl
ja
dec
test
jae
pop
ret
rcll
mov
sub
mov
es
and
and
xchg
cli
add
cwtl
xor
mov
and
mov
sahf
imul
lea
jle
jae
or
jp
aas
cmc
cltd
adc
lret
adc
lock
scas
jle
lock
ret
js
icebp
sbb
push
fsubrl
pop
adc
int3
push
mov
push
leave
aaa
fildl
mov
dec
jne
les
shrl
sarb
nop
aam
cli
out
sub
jo
dec
loop
jecxz
push
into
je
aas
adc
cli
pop
dec
jle
roll
lret
mov
adc
jno
cs
push
aam
push
cwtl
lds
mov
add
and
and
cmpsl
cmpsb
cmp
inc
test
in
test
jg
cltd
daa
pop
xor
jb
xchg
into
push
shr
fiaddl
mov
inc
test
pop
fildll
leave
in
lcall
pop
xchg
pop
jne
in
xchg
outsl
enter
mov
jle
ja
dec
fmulp
mov
mov
out
aam
mov
sarb
inc
call
inc
mov
xlat
push
vpaddsw
pop
mov
scas
sub
push
dec
dec
cmp
adc
mov
adc
aas
xchg
out
sarl
int3
rcl
cltd
test
out
lock
mov
mov
sub
in
roll
push
sbb
mov
sub
push
repnz
fistpl
cmc
sub
pop
and
mov
add
and
mov
lods
jae
mov
ja
inc
dec
xlat
mov
ljmp
imul
jnp
adc
or
mov
or
sahf
cmpl
into
popf
jnp
push
cmpsl
fwait
xchg
dec
pop
icebp
adc
mov
xchg
imul
sub
lret
mov
sbb
and
mov
hlt
test
outsb
movsl
xchg
cld
add
fidivrl
aas
pop
fsubrs
mov
inc
lahf
dec
mov
pusha
leave
dec
mov
clc
cmpsb
fwait
mov
mov
xor
or
sarb
dec
pop
xor
lahf
popf
cmp
cmc
cltd
cld
mov
fs
inc
sbb
pop
mov
jle
outsb
lods
pushf
lea
or
xchg
lods
cs
jae
fs
dec
and
call
insl
shrl
jo
push
out
dec
push
add
cwtl
in
xrelease
lock
lcall
mov
shl
sarl
enter
pop
mov
jmp
sbb
or
out
inc
dec
fstps
cld
imull
mov
cmp
sub
nop
sahf
pandn
xchg
movsl
mov
test
pop
add
jno
lret
xchg
pop
xchg
pop
and
cmp
shrb
add
call
aaa
pop
xor
subb
mov
test
adc
mov
add
mov
cmc
mov
int3
shl
nop
in
cmp
fimull
cmc
xlat
dec
popf
xchg
xchg
clc
ret
out
inc
pop
dec
cltd
sbb
test
mov
dec
fisttpll
mov
inc
or
mov
popf
in
fcmovb
sub
pop
cmpsb
movsl
out
outsb
adcl
nop
inc
stos
mov
paddsw
push
push
sub
loopne
mov
addl
lret
shlb
icebp
ret
lods
lret
mov
ja
je
dec
jnp
push
xlat
jne
movsl
and
fildl
xchg
pushf
int3
jg
outsl
in
arpl
mov
adc
lods
adc
pop
movsb
jns
test
fisubrs
jle
xor
mov
subl
and
mov
ret
mov
dec
push
out
cmp
lret
pop
cmpl
sahf
jmp
mov
mov
mov
lret
icebp
adc
out
fs
xchg
mov
jb,pt
repnz
sub
loope
or
fldl
lret
stos
jmp
jb
cmp
pop
or
pushf
push
push
ret
test
jge
ljmp
int
push
cmpsb
xchg
fwait
mov
push
insl
jmp
and
les
movsl
jl
mov
sub
test
fs
sub
int3
mov
sub
jp
lods
shl
mov
mov
mov
pop
xchg
and
xchg
imul
int
clc
ja
les
push
int
ds
ds
sub
add
cmpsl
std
sbbb
xchg
and
ja
mov
or
insb
lcall
jb
shl
dec
call
push
jno
xchg
cmp
lahf
ret
adc
and
push
leave
out
mov
orl
add
in
rorb
xchg
sub
and
and
sbb
sbb
add
adc
cld
xchg
adc
enter
jg
nop
notl
fsubs
inc
bound
or
xchg
add
adc
lcall
mov
cs
cmc
sti
je
ja
fwait
adcb
repnz
dec
inc
inc
dec
pop
mul
xchg
or
mov
pop
out
and
mov
gs
adc
jg
es
or
dec
loope
add
sub
adc
dec
jbe
sbb
inc
pop
cmc
cmpsl
cmpsb
inc
lds
jg
call
pop
pop
in
push
in
mov
sbb
xor
xchg
add
and
nop
mov
mov
jb
cmpsb
push
mov
jge
push
inc
mov
cmp
mov
cs
xor
pop
aaa
cwtl
sbb
popf
lods
decl
shll
push
mov
push
sbb
mov
mov
dec
mov
cmpsl
das
popa
movntq
out
adc
fisubl
cmp
or
dec
das
pop
push
push
loopne
mov
outsl
mov
cmpsb
jae
inc
fists
ss
aad
mov
mov
push
insl
sbb
sub
fwait
and
adc
dec
pop
mov
fnstsw
rcll
mov
lods
inc
jg
and
mov
outsl
push
inc
stos
int
test
ljmp
cmp
push
pop
lret
in
je
addr16
cmp
sbb
jae
bound
cmpsb
ret
inc
jg
aas
cwtl
lods
shrb
jmp
int3
jg
push
jae
push
fs
lcall
xor
int
ficoms
leave
add
mov
popf
out
fld1
xor
enter
in
push
jnp
push
xor
je
jecxz
call
loopne
int3
clc
or
divl
sub
addl
fcmovnb
lcall
loope
mov
jnp
push
add
cmp
pusha
push
add
inc
lods
enter
sub
in
push
hlt
xchg
mov
sub
mov
jmp
mov
xchg
mov
loop
ja
ret
decl
mov
pop
js
daa
mov
mov
push
inc
dec
das
lds
or
xchg
aad
sub
pusha
adc
stc
push
orl
inc
aam
lods
fcompl
cli
push
pop
ret
pop
les
int
cmp
add
cltd
and
xchg
and
rcrb
sbb
dec
out
and
mov
test
call
mov
mov
jne
mov
outsl
pop
cs
dec
push
stos
adc
mov
daa
and
adc
add
shrb
aaa
xchg
hlt
hlt
mov
or
mov
mov
fstl
fdivs
add
bound
add
addr16
inc
xchg
pop
jmp
loop
repnz
jecxz
movsb
mov
cwtl
pop
mov
decl
stos
adc
and
pushf
and
jmp
add
cmp
arpl
sbbb
shll
push
mov
js
mov
cmpsl
ror
stc
inc
je
popf
test
test
xchg
mov
gs
or
stos
jge
xor
xor
in
icebp
loop
ss
and
call
mov
subb
ds
ds
dec
cmc
fsubrl
arpl
cld
mov
xor
in
adc
mov
jecxz
mov
mov
jnp
fimuls
mov
mov
test
add
pop
inc
jbe
ljmp
or
imul
fwait
push
test
movsl
push
sbb
loop
lods
push
add
bound
pop
scas
mov
or
stc
popa
push
xor
sub
cld
xor
call
lods
or
xchg
push
gs
xchg
dec
dec
or
insl
dec
test
sub
fidivl
and
push
and
mov
push
dec
cmp
out
mov
mov
and
xor
subl
inc
or
mov
mov
bound
pop
cmp
cmp
push
and
dec
pushf
jno
stc
flds
cmp
aaa
sarb
jl
jbe
in
lret
mov
cmpsb
or
and
jge
jo
push
jb
in
mov
ret
clc
mov
popa
aaa
mov
lret
jmp
mov
nop
aas
inc
rclb
xchg
inc
scas
inc
and
add
leave
dec
xor
sbb
fisttpll
and
bound
dec
fs
xchg
call
into
mov
push
add
jle
and
insl
xchg
inc
and
popf
mov
mov
push
xor
lods
add
cmp
lcall
dec
jno
or
mov
nop
je
and
mov
mov
pop
xchg
mov
jg
stc
or
js
pusha
repz
call
out
scas
add
lods
pop
incl
xor
jbe
mov
xchg
push
popf
popf
addr16
std
xchg
cltd
stc
out
loopne
fisttpll
insl
fldln2
aas
push
pop
out
pusha
sbb
jo
cmp
push
and
fisttpll
jp
int3
adc
loope
test
std
mov
sbbb
inc
andb
sbb
je
pop
int3
pop
fld
pop
sub
insb
pop
sti
hlt
lea
mov
push
lret
pop
insl
cmp
or
in
arpl
dec
jp
or
rcrl
lds
mov
xor
mov
lds
fstl
mov
pop
out
mov
enter
cmp
pop
sub
jmp
jns
dec
jp
jo
pusha
dec
mov
repnz
adcl
imul
sub
pop
aaa
int3
or
xchg
call
or
sub
aas
and
inc
in
sahf
mov
int3
inc
mov
popa
push
jb
inc
jbe
outsb
lea
lcall
and
sbb
cmp
mov
cltd
mov
out
xchg
test
dec
enter
sub
mov
hlt
fs
xchg
aam
mov
aaa
fwait
and
add
cltd
in
fildl
or
ret
stos
dec
mov
sarb
rcl
sti
xlat
sub
stos
pushf
cwtl
fildll
inc
lea
cmp
lret
and
fcmovnbe
sub
mov
inc
jnp
arpl
scas
sub
add
in
or
insl
mov
pop
nop
push
repz
movb
pop
cli
mov
vorps
dec
push
iret
daa
cmp
cmpsl
loope
cwtl
into
out
mov
pop
addl
xchg
or
fwait
and
aaa
push
adc
or
shrl
shr
sti
jne
pop
mov
sbb
push
mov
push
xor
inc
inc
cmc
xor
push
mov
je
xor
dec
popa
pop
adc
test
push
cmp
pop
dec
jg
push
sahf
jmp
imul
add
loopne
mov
dec
outsb
hlt
iret
jno
adc
sbb
lock
test
inc
in
shrl
jno
int3
nop
pushf
jb
inc
movsb
enter
adc
mov
inc
push
lret
xor
sub
inc
or
repz
jmp
popf
cmp
add
scas
fidivl
xchg
fs
inc
and
mov
movsb
int
cmpsb
incb
test
test
lret
shll
pop
add
sbb
xor
inc
cmp
xchg
sbb
sti
je
sahf
clc
sub
sbb
repz
jo
sti
nop
cs
fidivrs
jmp
jge
pop
mov
dec
push
jl
popf
sbb
scas
imulb
sub
sti
scas
cmpl
imul
pop
bound
cli
jbe
dec
xor
xorb
jb
ja
jne
ficomps
ret
mov
inc
pop
jnp
push
icebp
and
out
xchg
iret
in
dec
sbb
cld
xchg
cmp
add
mov
in
inc
sti
sahf
xlat
or
push
or
scas
pushf
aas
jo
mov
push
repz
sbb
xlat
cltd
cmp
sahf
cmp
out
shlb
sub
mov
ds
pop
sbb
cmpsb
popa
add
mov
adc
arpl
in
jne
setg
icebp
sarl
bound
test
int3
outsl
popf
cmp
loop
pop
pop
mov
jmp
lret
bnd
sar
movsl
jne
inc
push
in
mull
mov
out
mov
jge
push
adc
push
and
sub
mov
push
aad
sahf
jmp
scas
sahf
ljmp
dec
or
cmpsl
in
shr
imul
dec
je
fmull
je
call
dec
mov
sahf
mov
sti
out
shll
pop
sbb
stos
jno
lahf
fidivrs
jns
movzbl
and
ret
xchg
jmp
xchg
fcmovbe
xor
cwtl
inc
lods
outsb
sbb
push
out
lahf
pop
mov
xchg
ret
jp
lea
dec
out
bswap
mov
lods
pop
imul
lea
aad
mov
push
push
dec
dec
ret
add
jl
jbe
or
inc
push
sahf
push
xor
xor
cld
and
push
fisttpll
mov
pop
sbb
pop
fwait
pop
pop
or
popa
pop
sbb
mov
imul
lods
inc
arpl
scas
jmp
pmullw
inc
repnz
hlt
dec
dec
adc
cld
xchg
psraw
lods
add
pop
or
cmp
jb
sahf
in
jp
and
push
ljmp
sub
dec
lcall
pop
push
pop
lcall
inc
pop
dec
xor
cmp
movsl
jmp
enter
out
mov
sbb
pop
test
push
dec
push
jg
mov
lea
mov
js
into
icebp
adc
rcrb
pop
or
xchg
imulb
inc
or
sbb
out
cmp
roll
insb
loop
mov
nop
inc
pop
aad
addr16
sub
sub
mov
pop
rcrl
adc
push
leave
fstl
icebp
jge
dec
popf
pushf
lea
mov
orb
cltd
mov
cmp
pop
imul
in
ds
mov
lods
jmp
dec
or
mov
sbb
dec
dec
dec
xchg
lods
scas
imul
adc
adc
fisttpll
ret
sti
mov
loop
sub
xchg
sub
fimull
mov
bound
divl
lcall
sahf
pop
and
daa
rclb
mov
inc
dec
mov
jne
imul
add
gs
sub
xchg
dec
inc
mov
sar
testb
xor
ds
or
scas
inc
push
shl
push
imul
in
xor
pusha
inc
test
scas
iret
lods
jbe
in
fs
lods
ja
leave
cli
xlat
shll
dec
std
push
out
mov
insl
mov
mov
dec
lds
and
int3
cwtl
dec
or
mov
jbe
insb
jl
loope
mov
call
push
sub
fsubs
int
mov
mov
ret
stos
jg
xor
xor
in
into
mov
nop
stc
outsb
iret
jo
ss
nop
sub
cmp
jno
into
jge
stc
mov
in
and
or
lret
rorl
add
lahf
bound
xchg
mov
xchg
push
add
rcrb
xchg
fsubs
jg
push
mov
jmp
xchg
out
push
mov
mov
rcr
mov
test
jo
mov
ret
addr16
dec
lods
pop
jne
scas
scas
repnz
imul
aam
xor
sbb
inc
xor
push
inc
or
je
cmp
movsl
insb
les
fadds
jo
push
xchg
xchg
pop
sbb
sahf
xor
xor
push
movsl
rorl
lods
and
sbb
mov
movsl
sub
shl
cltd
push
xchg
mov
movsb
lret
mov
hlt
jae
pop
imul
aaa
mov
push
dec
pop
inc
cmp
push
mov
or
subb
mov
cwtl
pushf
sub
out
sbb
test
jl
dec
mov
sub
sub
jecxz
ss
cmp
fbstp
adc
add
fistpll
je
roll
mov
lods
push
sbb
mov
sub
rcl
pusha
mov
xor
cmp
popa
jp
pop
dec
cld
and
mull
inc
adc
cmp
out
gs
idiv
cmp
mull
dec
xchg
shlb
add
jnp
scas
mov
ljmp
lods
imul
in
xchg
push
sub
sub
dec
sbb
xchg
cmp
rclb
pop
idiv
int
or
adc
push
mov
and
out
mov
xor
pop
jp
fistpl
nop
jne
jl
jbe
js
mov
daa
and
fcoml
add
out
push
fcmovnu
mov
cmp
ss
movsb
jle
push
sahf
addr16
push
mov
sbbb
sub
adc
cmp
jge
push
in
iret
cmpsl
push
inc
and
call
bound
bound
push
dec
ret
mov
iret
pop
mov
inc
or
pop
repz
insl
rep
xor
xor
lock
mov
cmp
std
dec
sub
push
mov
ret
movsl
xor
scas
push
jbe
jns
sti
loope
iret
mov
mov
ficoml
call
out
jp
lock
mov
push
ret
int3
sub
mov
enter
mov
pop
or
jno
mov
ja
mov
mov
dec
sbb
loop
fcmove
loope
les
inc
sbb
adc
xor
sub
pop
movl
inc
test
leave
aas
sar
int3
mov
xchg
push
push
and
stos
mov
and
out
outsb
insl
mov
sbb
sbb
das
mov
cmpl
pop
sbb
and
or
mov
pushf
mov
inc
clc
cltd
sbb
bound
in
nop
gs
and
aad
iret
repnz
push
test
xlat
sub
jo
or
push
jo
dec
xor
cli
mov
xor
or
test
jg
lea
fadds
lldt
jnp
jecxz
xchg
cmpsl
mov
sub
sub
add
aad
pop
jbe
sbb
imul
sbb
pusha
dec
cmp
in
mov
and
xchg
pop
jle
push
mov
pushf
stos
ds
add
lret
adc
or
loopne
mov
lahf
shll
pushf
xor
arpl
mov
mov
sbb
jle
adc
cmp
and
cmpsb
cli
mov
or
push
pop
cmp
pushl
adc
ret
add
mov
dec
add
fbstp
or
jno
pusha
mov
mov
dec
bound
lea
gs
pop
xor
out
add
enter
out
fstps
adcl
xor
and
pop
cmpsb
push
mov
mov
xchg
jmp
clc
dec
sahf
jb
pop
int3
stc
lahf
jnp
pushf
outsl
mov
nop
testl
cmp
jecxz
pop
jecxz
aaa
or
inc
int3
inc
enter
faddl
jg
mov
mov
lock
stos
push
jnp
xorl
adc
push
xor
inc
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
ss
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
aaa
push
push
pusha
push
jo
xor
mov
mov
xchg
xchg
lock
inc
and
es
ss
xchg
mov
orb
insb
mov
ds
jle
outsb
sysexit
out
and
fidivrl
stos
dec
mov
xchg
jp
pop
cmc
das
in
aad
lds
xor
lret
jne
gs
mov
movsl
jp
inc
test
add
cmp
or
sbb
push
add
repnz
addb
push
pop
stc
sub
pop
mov
scas
inc
mov
mov
or
test
inc
mov
repnz
push
jge
scas
cmp
cli
and
stos
jne
gs
xchg
and
or
in
addb
mov
incb
inc
fidivrs
shll
inc
movsb
movsl
fstps
fnsave
into
add
mov
dec
inc
pop
cmp
and
or
movsl
mov
cmc
lock
pop
cmc
aaa
cli
and
dec
add
dec
repz
cmpsb
inc
sbb
test
xchg
enter
mov
xchg
dec
fdivr
inc
fwait
loop
push
sub
lods
xor
out
jo
and
mov
gs
mov
movsl
rclb
push
in
aad
lds
je
push
xchg
jl
insb
mov
xlat
xor
inc
fnsave
out
std
cmp
insl
in
mov
xorl
inc
mov
jne
and
sub
or
seta
test
mov
mov
cltd
and
mov
out
mov
mov
movsl
jp
dec
test
sub
cmp
or
sbb
lret
jne
gs
mov
movsl
jp
dec
test
sub
cmp
or
sbb
mov
xor
int
mov
and
add
int3
xchg
addl
scas
stc
testb
lret
dec
push
sahf
into
or
adc
daa
adc
xor
and
addr16
xor
jae
push
push
test
cmp
lock
jo
mov
test
pop
mov
jb
scas
lds
faddp
lea
or
shlb
mov
cmp
std
and
cmpsb
aaa
inc
je
cmp
fimull
xchg
aad
lock
inc
test
xchg
pop
push
hlt
cmpsl
outsl
in
push
clc
data16
stc
loope
stos
and
pop
sti
mov
pop
fisubl
push
xor
inc
repnz
adc
ljmp
push
out
mov
push
jl
addb
cld
inc
xchg
jae
das
sub
stos
cmp
sbb
cmpsl
mov
insl
imul
xchg
int3
inc
repnz
adc
jne
in
mov
and
mov
pop
mul
fs
jns
pop
test
cwtl
rcrl
in
jecxz
aas
in
pop
nop
std
pusha
fsubl
xor
inc
mov
adc
jnp
jmp
cmp
js
loope
lea
push
lds
mov
mov
enter
inc
dec
inc
cmp
mov
movsb
inc
sbb
sbb
inc
or
mov
xor
mov
sub
divb
add
arpl
sbb
loopne
loope
xor
je
out
pop
mov
negl
xchg
inc
fsts
and
mov
cmpsb
adc
inc
push
push
out
lds
jge
xchg
sbb
sbb
xor
sbb
pop
mov
xorb
in
and
or
lret
stos
push
adc
fisubrs
fidivrl
push
icebp
xchg
pop
add
add
and
clc
adc
jecxz
or
flds
movb
jg
jbe
mov
movsl
inc
outsl
insb
fstl
shl
cld
mov
or
sub
neg
je
lret
xor
dec
xchg
mov
lret
mov
jo
xchg
dec
mov
inc
add
and
add
dec
jb
add
jae
dec
xor
inc
sub
jae
popf
ret
or
lahf
test
fisubrs
adc
gs
mov
leave
adc
sbb
and
pop
xor
or
scas
or
out
test
or
mov
gs
xchg
stos
sar
jno
cltd
cmp
jmp
sbb
scas
les
pop
je
and
popf
movsl
movb
adc
or
sbb
xor
das
sbb
dec
inc
sub
data16
mov
je
idiv
fisubs
adcb
call
mov
xchg
popa
lcall
sahf
pop
cmpsb
push
jge
jge
aam
stos
fistpll
daa
mov
jo
pop
mov
arpl
mov
je
xchg
cmp
data16
popl
lahf
mov
insl
sbb
fstp
xor
mov
clc
mov
sti
lret
into
cmp
push
jecxz
push
or
sub
mov
loope
test
add
arpl
inc
add
lods
imul
sti
xchg
ret
inc
in
xor
inc
mov
mov
push
sbb
sti
cmp
mov
mov
adc
out
hlt
stc
inc
mov
jne
add
in
pop
inc
xor
test
cli
inc
adc
fdiv
or
mov
xor
and
andl
movsb
xchg
jg
jmp
icebp
push
gs
in
lock
call
or
xor
fimull
push
dec
xchg
inc
dec
lods
inc
xchg
and
mov
int3
mov
jbe
es
sub
cmp
mov
sbb
xor
cwtl
xchg
push
aad
jge
int3
mov
jmp
pop
mov
ficomps
mov
test
aam
add
repz
jg
cmpsb
ljmp
push
cmp
cltd
push
lcall
mov
outsb
adc
es
andl
xchg
fld
je
pop
xor
outsb
mulb
adc
fstps
inc
mov
dec
fwait
push
inc
cmp
and
mov
fwait
xchg
mov
in
jo
int3
popa
or
dec
inc
cmp
lcall
mov
sbb
xchg
jns
cmp
ljmp
inc
mov
sbb
mov
sub
sub
cmp
inc
or
in
sbb
pop
adc
mov
scas
popa
into
jecxz
push
jl
cmc
in
dec
sbb
stos
cmpb
mov
add
sahf
enter
pop
hlt
mov
dec
rcr
sbb
mov
mov
sub
cmc
pushf
testb
adc
xor
filds
mov
dec
dec
mov
xchg
and
pushf
sahf
inc
fs
xor
adc
rolb
sub
xor
inc
or
sub
fucomip
dec
pop
fld1
pop
dec
inc
jne
add
push
mov
das
lds
dec
push
jg
filds
mov
xor
pop
pop
ret
push
rorl
or
cmp
sub
add
cwtl
ret
subb
in
adc
cmpsb
addb
mov
sbb
cmp
and
pop
xor
mov
cmpsl
mov
stc
movb
insl
stos
loope
imul
lahf
repnz
call
inc
stos
aam
lods
sahf
add
push
pushf
in
xor
fdivr
jle
sub
rcrb
movb
incl
shl
movsl
ret
mov
and
or
xor
out
cmp
fstpt
add
jne
int3
fwait
cmp
adc
sahf
lret
lods
pop
push
mov
mov
or
idivl
scas
ror
push
dec
rcrl
ss
in
mov
or
clc
jge
mov
mov
xchg
in
cwtl
jb
in
imul
rcrl
in
imul
out
scas
xor
mov
repz
mov
add
cld
int
xor
xor
loope
add
fs
out
cmp
add
add
add
xchg
jp
lahf
in
scas
pushf
lds
cmp
add
insb
sub
lods
fcompl
ror
imulb
and
std
cmpsl
dec
int
dec
loopne
xor
mov
xor
mov
mov
out
icebp
loopne
inc
sarl
daa
fsubl
aam
int
inc
dec
mov
mov
popf
sub
push
das
mov
or
pop
and
fisttpll
mov
fcmovnb
imul
imul
sbb
jecxz
jle
in
xchg
lods
mov
jle
cmp
aam
mov
jg
and
icebp
inc
xor
add
jne
cmpsb
mov
push
pop
mov
sub
stos
xlat
mov
push
pushf
ud2
sbb
jnp
push
push
add
imul
add
mov
loopne
pop
es
inc
jo
mov
mov
or
jnp
pop
adc
sbb
pop
or
shll
ss
xchg
mov
shrl
push
mov
pop
clc
aas
fwait
xor
fiaddl
xlat
cmc
pop
rolb
xchg
xlat
inc
aad
jecxz
inc
push
nop
clc
cs
cli
mov
push
aam
into
into
sbb
push
xchg
mov
mov
decl
mov
adc
scas
movsl
sahf
jl
xlat
aas
push
sbb
mov
adc
std
mov
pop
inc
jmp
jg
pop
jg
popa
add
loopne
mov
ret
hlt
push
les
pushf
jmp
cmp
mov
mov
and
aaa
jno
mov
imul
mov
std
adc
pop
stos
out
mov
lock
mov
pop
xchg
test
stos
lret
xchg
mov
test
xchg
mov
jae
repnz
mov
les
loopne
popa
push
out
mov
cli
xor
enter
andb
dec
adc
jp
adc
jecxz
and
addb
and
popa
cli
or
mov
jns
aas
mov
ljmp
in
test
mov
je
jg
xor
sar
xchg
iret
lret
mov
sbb
popf
xchg
repz
pushf
dec
push
mov
stos
jl
aaa
ljmp
repnz
add
pop
insl
jae
mov
or
dec
popa
inc
gs
scas
mov
sub
mov
jne
fsubl
sbbb
insb
scas
jle
sar
shll
cmp
addr16
test
neg
repnz
shl
and
es
ret
test
aad
xchg
addr16
add
enter
and
std
nop
addr16
and
cmpsl
adc
adc
cmp
repz
pop
lcall
jne
fcoml
dec
fimuls
jg
cmp
or
jns
out
scas
and
or
int
and
ja
shlb
mov
lret
icebp
loop
cld
and
aas
push
out
and
inc
sti
std
inc
xor
cli
dec
inc
cmc
sbb
pop
cmp
icebp
daa
jle
mov
out
repz
leave
mov
cld
ja
cmp
int
sbb
dec
out
dec
mov
sbb
fxch
les
fwait
mov
ds
fidivrl
int3
sbb
lret
adcl
ja
scas
iret
xor
scas
out
inc
xor
out
add
mov
inc
mov
xor
cli
enter
mov
add
xchg
pop
adc
faddl
inc
jl
mov
mov
cmp
mov
outsb
js
ret
xor
mov
jo
ljmp
dec
call
jnp
rcr
dec
xchg
xchg
jle
cmpb
jmp
push
sbb
addl
mov
ret
lcall
or
dec
inc
das
jne
jp
xor
push
cli
or
mov
cmp
sbb
sub
mov
mov
stos
jbe
fisubrl
push
lret
and
andb
add
int3
int
pop
data16
mov
mov
call
jnp
test
push
xor
cltd
xchg
push
outsl
mov
sub
and
call
bound
clc
push
adc
scas
aaa
mov
cli
lret
mov
movsb
adc
rcrb
push
mov
aas
pop
cmpsb
mov
xchg
sub
and
jb
pop
pop
adc
xor
in
sbb
pop
popa
sbb
je
std
or
ss
pushl
sub
insb
and
pop
cmp
push
popl
popf
sbb
ja
fiadds
sbb
pusha
repnz
adc
jne
int3
pop
imul
scas
xorb
dec
inc
ds
jmp
mov
jle
sbb
adc
dec
cmp
aad
arpl
push
add
pop
insb
inc
int3
mov
push
call
fwait
aad
aas
lea
or
ret
sbb
xchg
cltd
jo
xchg
sbb
pushl
pushf
mov
imul
xchg
add
jmp
mov
jecxz
popa
adc
push
dec
iret
pop
das
push
pop
lock
pop
adc
rolb
adc
add
arpl
pop
dec
pop
rorb
pop
mov
xor
xor
movl
sbb
sbb
xor
shl
adc
push
popl
aad
gs
mov
jge
add
mov
data16
lcall
cmp
shll
fidivrs
push
adc
icebp
xor
je
cmc
out
mov
or
xor
sub
jle
mov
rcr
and
movsl
test
popa
xor
mov
je
xor
int
in
sub
loopne
mov
das
aam
cmpl
jns
imul
push
sub
jno
or
push
xor
fsubrl
arpl
pop
xor
aas
mov
ja
stos
cmp
mov
mov
std
jb
pusha
or
mov
dec
cmp
stos
cld
scas
arpl
lret
repnz
fisubrl
jbe
ret
or
adc
mov
test
and
dec
sub
add
mov
gs
mov
jbe
xor
int3
xor
int3
stos
jbe
add
add
mov
test
inc
sbb
pop
mov
adc
int
icebp
cmc
xchg
add
mov
dec
sub
repnz
cmc
sbb
je
mov
mov
out
mov
cmp
aad
lds
or
pop
mov
push
std
adc
lret
xlat
inc
cli
mov
xor
mov
fs
push
push
add
addr16
mov
mov
sub
iret
cmpl
jge
inc
mov
pop
inc
cwtl
lahf
ret
xorl
fdivrl
loop
fwait
pop
fldenv
mov
int
movsl
ret
or
sbb
mov
mov
dec
stos
insb
mov
ljmp
outsl
adc
add
push
jmp
adc
jge
inc
fdivrl
fwait
cmp
cmp
sti
xchg
mov
push
jns
adc
jnp
push
push
cmpsb
jo
mov
push
inc
xchg
push
jl
add
lcall
mov
push
xchg
test
sahf
sbb
mov
cmpsl
wbinvd
sub
daa
stos
popa
cmp
stos
test
ret
ret
cwtl
ret
xchg
fadds
and
les
aaa
int
and
test
and
shlb
dec
and
xlat
fs
out
inc
daa
sub
mov
cmpsl
addr16
dec
jae
jle
xchg
stc
xchg
jmp
mov
in
daa
mov
sbb
mov
je
jne
ljmp
mov
cmp
or
aad
mov
dec
or
lret
in
mov
cli
and
sub
fwait
dec
int3
adc
jno
addr16
jb
les
jmp
stos
xchg
ficoms
or
hlt
cmp
enter
jnp
fistl
movsb
dec
aas
fcompl
popf
xchg
mov
icebp
ficomps
push
out
lcall
inc
fs
leave
aas
add
aam
sbb
xor
nop
inc
push
cltd
fbld
leave
add
movsb
bound
cmp
es
mov
inc
jp
push
fidivs
test
dec
cmp
js
test
pusha
fisubrs
stos
pop
movsl
loopne
jno
cltd
addr16
lret
cs
jmp
mov
outsl
cmp
push
ror
iret
jne
aad
out
int3
sti
or
lcall
xchg
pop
cmpsl
lods
mov
shrl
push
mov
jge
mov
adc
add
mov
mov
mov
rorb
imul
cmc
imul
cwtl
dec
and
std
push
dec
push
aas
xchg
lods
in
add
cmp
push
and
in
mov
cmc
or
rcr
lahf
sub
add
les
push
push
dec
leave
icebp
mov
test
testl
xor
dec
data16
loope
sub
and
jmp
mov
xor
xchg
popa
test
push
fidivrs
xchg
jne
xchg
cmpsl
popf
and
jo
lock
dec
lahf
dec
push
push
sub
xchg
inc
dec
adc
repnz
into
sti
andb
pushf
push
cwtl
push
pusha
sbb
into
cmpsb
push
cmp
into
ret
xchg
cmp
xchg
jmp
dec
daa
imul
mov
ret
mov
fiaddl
and
lods
dec
mov
lret
xor
xlat
sbb
pop
push
adc
setae
xor
cld
push
mov
scas
jle
pop
sbb
inc
cmp
fwait
dec
inc
fdiv
cwtl
popf
flds
push
stc
sub
cmp
rcll
xor
das
pop
lret
inc
clc
push
in
adc
jle
icebp
and
fs
xor
pop
inc
inc
ret
sbb
mov
jbe
jg
andb
std
mov
ss
sub
xor
mov
stos
std
mov
enter
sub
xor
jle
sbb
rcll
lcall
mov
push
and
adc
cli
call
or
sahf
jno
movsb
mov
mov
scas
movsb
insl
jmp
gs
in
mov
jmp
inc
adc
sbb
movsb
inc
mov
lret
rclb
lret
and
mov
adc
cmp
mov
aad
clc
pop
pop
adcl
pop
mov
pusha
mov
stos
gs
mov
sbb
adc
xchg
pop
add
cmp
lods
dec
xchg
shlb
cltd
pop
test
ret
icebp
cli
imul
xor
das
cmpsl
push
sub
mov
shr
rcrl
icebp
pop
cltd
movsb
repz
stos
out
aad
jo
insl
inc
daa
aaa
in
mov
into
incl
push
dec
aad
inc
dec
cmp
add
popf
out
fwait
pop
adc
enter
cmp
add
mov
rolb
aam
test
cmp
add
out
loop
dec
sbb
fwait
scas
jo
sub
mov
mov
push
jle
inc
pop
frstors
test
jecxz
adc
in
cmp
call
add
push
push
adc
pop
cltd
xchg
nopl
outsl
in
push
sub
clc
or
test
pop
sbb
int3
cs
inc
pop
xchg
sub
push
or
int3
xchg
scas
testl
sarl
lcall
outsb
lahf
aaa
xor
popf
movsb
or
aas
into
xchg
je
jnp
pop
dec
lock
mov
aam
cmp
push
mov
pop
cmc
or
daa
inc
int
sbb
sti
pop
mov
test
push
add
cmp
nop
push
stos
mov
jecxz
sub
testb
adc
or
adc
lods
outsl
xchg
mov
cs
mov
or
repz
sbb
add
stc
mov
cld
pop
ret
fucomi
cmp
insb
jno
lahf
icebp
and
movsl
pop
fiaddl
sub
push
mov
mov
inc
test
loop
sarb
and
addr16
mov
jmp
and
or
outsl
cmpsb
add
clc
xor
sub
xchg
mov
stos
dec
std
ret
dec
icebp
loopne
jo
imul
sbb
pop
pop
sub
mov
pop
imul
xchg
rcr
push
js
adc
sbb
rcl
scas
fsts
or
lods
in
iret
sbb
mov
mov
sbb
outsb
adc
jbe
sbb
inc
dec
adc
adc
push
add
sub
arpl
jb
in
inc
xlat
popa
inc
xchg
push
xor
xchg
popa
das
cmp
dec
iret
jbe
cmpsb
adc
fwait
in
adc
mov
jg
mov
or
or
mov
inc
andl
jecxz
add
pop
pop
fnstenv
stc
lahf
inc
inc
fld
fsub
scas
or
push
and
pop
ds
ret
mov
add
mov
adc
xor
scas
pop
movsl
push
xchg
mov
xchg
mov
push
shlb
ret
in
int
adc
sub
sbb
std
sbb
mov
inc
sbb
imul
inc
xor
daa
or
mov
scas
std
hlt
out
xor
sbb
cmp
add
ja
fidivs
adc
outsb
sub
mov
shl
push
pop
xlat
mov
ljmp
fiaddl
lcall
outsl
pop
stc
pop
mov
mov
lods
aad
jns
pop
mov
xor
sub
ficomps
lods
xchg
in
push
lcall
jb
sti
imul
fsub
adc
dec
lahf
push
sub
jne
inc
cmpl
notl
mov
pop
insl
cmp
shl
pop
mov
jne
ret
movsb
nop
lea
adc
aad
scas
mov
add
orl
inc
das
mov
lea
ljmp
jp
fmull
cmp
jns
push
icebp
aas
pop
into
jnp
mov
inc
test
leave
pop
mov
or
aaa
pusha
dec
adc
xor
scas
pop
xchg
test
push
push
in
mov
pop
sub
and
pop
icebp
jno
fldt
jp
lock
shl
rcr
jns
leave
cmp
in
rclb
ret
pop
push
arpl
jo
xchg
fsubrs
cmp
add
push
pop
lret
lock
jo
inc
sbb
push
add
xchg
push
adc
mov
sbb
mov
push
jnp
test
rolb
jmp
inc
rcrb
mov
pusha
fldenv
sub
aas
jmp
inc
mov
or
adc
adc
cmp
imul
andb
mov
js
shlb
and
fisubl
ss
das
pop
sti
shlb
jbe
cld
das
addr16
pop
shll
sbb
nop
cltd
dec
mov
cmp
lret
lock
xchg
mov
jne
cli
add
arpl
and
push
jno
or
leave
popf
dec
mov
pop
mov
and
rcrl
lahf
test
jo
or
inc
mov
loop
dec
popa
jne
and
sub
mov
aas
or
stc
mov
daa
cmpsl
cmp
mov
addr16
leave
lock
cmpsb
push
push
adc
xchg
notl
push
lret
add
cld
xchg
nop
pushf
jg
sub
popf
pop
lock
adc
add
mov
mov
movsl
jp
dec
test
sub
cmp
or
sbb
lret
jne
gs
mov
movsl
jp
dec
test
sub
cmp
or
sbb
rolb
rcll
lds
xchg
dec
test
cs
aad
push
and
lcall
inc
pop
mov
movsl
sarb
dec
test
movsl
jb
bound
cmp
aam
in
hlt
dec
movsl
and
pop
jmp
mov
inc
xchg
pop
mov
add
adc
xor
xor
les
aam
in
hlt
inc
test
bound
push
inc
mov
ret
xor
fstl
aam
cld
xor
inc
popf
push
mov
jb
andb
je
inc
mov
lods
jb
xor
les
mov
add
dec
jmp
iret
dec
fildll
loope
dec
out
ret
fdivs
xchg
xlat
insb
mov
push
test
les
cmp
and
jns
cmp
nop
sbb
inc
xchg
pop
rcrb
pop
fcomp
icebp
bound
adc
fidivl
xor
xchg
adc
push
in
les
inc
push
pushf
cld
sbb
adc
stos
das
test
loop
lock
std
cld
xor
or
movsb
pop
push
xchg
leave
outsb
push
mov
cmp
rcrb
std
lret
sub
mov
stc
cmp
inc
clc
inc
pop
jno
fs
push
shll
fistpl
ret
and
xor
inc
test
bound
xchg
dec
mov
sbb
add
and
push
inc
mov
push
cmc
rcrb
cli
pop
enter
sub
ficomps
cmpsl
imul
aam
xchg
push
icebp
add
cmpsb
shlb
cmp
divl
cmpsl
jbe
jnp
dec
repnz
imul
addl
jb
addb
fs
ret
adc
and
xor
les
aam
in
hlt
inc
test
bound
push
mov
add
adc
and
xor
les
out
mov
insl
pop
jmp
in
xor
loopne
dec
jle
cmp
lahf
movsb
cmp
dec
mov
les
mov
or
push
popf
and
sbb
popf
mov
rorb
les
aaa
mov
and
cmpsl
cltd
pop
outsb
mov
cmp
aad
xor
stos
fstpl
loop
iret
gs
push
sbb
inc
test
or
pop
mov
and
test
ja
aad
aaa
xor
push
push
jnp
out
sbb
pop
xlat
leave
into
aad
aas
mov
inc
jge
xor
ret
mov
push
in
mov
xor
or
iret
dec
push
pop
das
jbe
mov
push
xchg
les
test
cmp
scas
test
jecxz
test
outsl
addr16
ret
add
js
xor
into
scas
mov
lds
lea
aas
or
dec
rclb
jae
popa
test
mov
cmp
adc
mov
hlt
movhps
xor
push
pop
lret
inc
add
sub
enter
jl
out
insl
jb
xchg
cmp
int3
jbe
stc
jp
mov
dec
stos
mov
and
adc
xchg
mov
mov
enter
test
sub
jae
xor
sub
adc
push
dec
inc
pop
popf
sub
outsb
decl
icebp
pushf
fcoml
cmp
aas
jne
sbb
and
or
inc
jae
cmpl
or
and
aas
push
mov
and
cltd
adc
add
mov
pcmpgtd
mov
test
jecxz
dec
fldl
xor
daa
mov
or
jns
and
inc
loopne
sub
pusha
popf
add
pop
sbb
jbe
dec
inc
jae
shr
mov
add
mov
add
cmp
cmp
fsubr
movsb
pop
cmp
adc
sub
int
or
push
or
and
je
push
jl
or
out
jns
sbb
pop
test
adc
push
pop
push
mov
pop
aam
in
or
inc
sub
mov
enter
imul
xor
clc
jmp
js
lea
pop
xor
repnz
outsw
xor
cmp
pop
jae
adc
js
jl
les
test
mov
dec
lods
ja
pop
cmp
std
and
ss
and
push
cmpsb
push
stos
push
cmp
lods
xchg
aam
les
movsb
sbbb
mov
lret
sahf
mov
add
lahf
movl
cmpsb
xlat
mov
lea
jl
das
lock
ljmp
and
cs
leave
sahf
sbb
inc
push
add
mov
fisubs
dec
testb
popa
jl
push
lahf
mov
dec
stos
mov
sahf
dec
sarl
mov
enter
je
fldl
leave
add
pop
and
cwtl
jg
cltd
ret
sbb
std
push
repz
pop
mov
mov
xchg
pop
fcmove
scas
and
push
pop
jmp
pop
jno
popf
rcrb
xchg
jmp
ficompl
mov
paddsw
push
add
mov
lock
into
ss
sbb
push
mov
cmc
jae
mov
clc
mov
test
ja
pop
loop
cmp
movsl
popf
push
sbb
es
xchg
push
xorl
cmp
mov
call
or
out
js
push
negb
jbe
add
jns
pop
aaa
ret
in
add
cld
into
xchg
test
mov
lock
dec
cli
pop
aas
out
mov
insb
lods
or
out
cmp
pop
sbb
jecxz
shrl
aad
lods
jo
decb
sub
lods
push
pextrw
aaa
enter
imul
push
dec
shl
xor
push
push
push
mov
sti
add
cmp
test
sub
dec
or
add
add
push
lods
cli
mov
xor
push
fldl
xor
js
out
mov
cwtl
pop
dec
rcr
xchg
dec
gs
add
ds
mov
movsl
loopew
icebp
jno
push
loop
xor
pop
and
js
adc
cmpsl
aad
pop
pop
inc
dec
icebp
test
nop
xchg
clc
outsl
mov
orl
cmp
repnz
insl
dec
mov
mov
mov
pop
ret
jnp
mov
push
pop
push
dec
popa
adc
or
lods
sahf
pop
ss
loope
xchg
cmp
add
out
shlb
jl
sbbb
mov
stos
out
sub
and
sahf
jns
popa
xlat
xor
iret
xor
mov
fdivrl
imul
mov
stos
xchg
das
xor
pop
sbb
lds
and
mov
cltd
scas
dec
stos
sub
test
pop
xor
mov
xchg
inc
call
sbb
push
dec
stos
ja
mov
cmp
clc
jae
dec
push
decl
leave
jg
sbb
out
pop
lcallw
and
cmp
test
daa
addr16
cmpsl
ds
pop
stos
rcl
nop
mov
cltd
jo
fprem
not
insb
sub
cmp
xor
icebp
inc
and
jg
and
or
scas
sahf
sbb
test
mov
mov
aam
ds
lcall
fcmovnu
mov
call
cmp
stc
popa
cli
sub
adc
outsb
push
xor
push
jbe
push
pop
lock
xchg
xlat
rorl
mov
cltd
dec
sub
jo
push
xor
mov
fidivrs
mov
insl
pusha
lret
inc
aam
pop
int
xor
lods
out
fcmovbe
std
push
fldenv
mov
notl
sbb
mov
jmp
jg
or
add
insl
data16
adc
fwait
pop
loopne
xchg
repz
jge
outsl
xchg
adc
sbb
mov
cmpl
ret
std
repnz
mov
jo
jae
lahf
iret
mov
inc
repnz
cwtl
cmc
imul
and
xchg
inc
dec
pop
push
xchg
dec
mov
lret
scas
mov
adc
push
mov
xlat
sbb
cmp
add
xchg
jge
or
scas
mov
aam
jmp
mov
das
pushf
cmpsb
mov
fldenv
mov
inc
jnp
xchg
push
lret
pop
fimuls
sar
int3
mov
fadds
in
dec
inc
xchg
pop
dec
push
jg
mov
movsb
jbe
ljmp
mov
mov
push
insl
xchg
xor
out
in
push
lods
pop
xchg
movsb
adc
data16
jge
dec
cmp
enter
stos
pop
xor
dec
ret
shll
xchg
lret
xchg
adc
test
out
or
test
fbld
inc
jo
mov
jb
iret
sbb
fistpl
lods
push
gs
movsl
cmc
mov
imul
mov
mov
mov
push
les
mov
dec
mov
xchg
mov
inc
xor
xchg
shll
adc
out
cmpsl
sbb
dec
pop
and
sub
scas
jns
mov
test
outsl
sub
cmp
add
fdivrp
adc
lret
jle
or
rcrl
sahf
loope
test
inc
lods
dec
inc
push
inc
insl
mov
push
addb
loope
cld
cltd
jo
mov
pop
mov
int3
fdivrp
mov
pop
sub
or
lods
pop
popf
adc
gs
pop
mov
lret
shlb
adc
shl
sbb
inc
adc
rolb
cmpsb
push
and
cmc
out
stc
inc
xchg
ret
cld
orb
jne
sbb
mov
out
nop
xchg
xor
js
cs
stos
mov
aam
xor
cwtl
sahf
xor
jle
je,pn
daa
fldenv
test
rcll
sbb
js
sub
mov
jge
pop
sub
sub
add
movsb
cmp
out
ds
cwtl
mov
sar
mov
mov
jmp
sbb
cmp
jg
aam
das
fisubrs
arpl
ds
imul
movsl
fistps
lods
push
pushf
add
mov
mov
in
out
add
and
ljmp
or
int3
imul
sarb
jg
push
add
push
sub
sub
movsb
roll
popf
ret
xchg
mov
imul
imull
data16
mov
push
leave
test
cmpsl
mov
in
and
cli
and
call
cs
dec
cmpsb
mov
in
mov
jbe
pop
push
mov
mov
pop
or
mov
pusha
aam
mov
push
dec
push
xor
in
lea
hlt
mov
xor
or
cmp
cmp
jno
js
std
filds
dec
xor
hlt
leave
jle
xor
cmp
sub
xchg
cmpsl
rorl
inc
pop
ret
sub
clc
out
xchg
jne
js
sub
xor
sbb
xor
mov
mov
pop
mov
lods
loope
fists
mov
adc
cmp
ret
xchg
sbb
lahf
enter
cltd
clc
popf
aad
mov
pop
fimull
sbbb
mov
sbb
hlt
into
push
mov
dec
sub
mov
repz
adc
fidivs
cmpsb
lods
imul
sarb
imul
int
mov
or
dec
xor
mov
int
pop
shl
pop
lret
xor
mov
xor
and
scas
jle
jae
int3
push
mov
adc
int3
xor
idiv
stos
cmp
adc
test
push
in
xor
xbegin
pop
clc
push
and
jl
mov
aam
cmpsl
xchg
xchg
lods
cld
out
dec
fwait
mov
mov
aas
les
out
mov
sbb
jne
or
mov
and
or
jnp
cwtl
scas
les
ljmp
jmp
fs
mov
out
or
loopne
popf
out
loopne
cmp
div
rcrl
ret
sub
and
jecxz
ja
and
mov
inc
in
jmp
push
cld
mov
jmp
sub
push
ffreep
fs
stos
xor
dec
aad
call
lret
rcrl
push
popa
sbb
adc
mov
outsb
rcrb
mov
jge
add
add
dec
push
sbb
and
adc
mov
insl
fdivr
pop
adc
mov
inc
sub
fcomps
pop
in
xor
into
xchg
out
inc
cmp
inc
inc
aas
or
pop
dec
mov
in
sub
in
jno
pop
push
sbb
data16
and
and
in
push
clc
add
fcompl
sub
xchg
sbb
iret
mov
test
push
loop
pop
lcall
mov
push
rol
mov
dec
push
sub
lods
push
mov
add
les
mov
push
mov
pop
or
clc
or
or
and
mov
es
aaa
cmp
mov
movsl
add
push
inc
pushf
lahf
mov
push
cmpb
and
add
dec
pop
fwait
arpl
mov
adc
stc
adc
xchg
push
mov
sti
mov
mov
push
mov
or
jmp
es
cmp
jns
or
in
cld
and
pop
jmp
pop
fbld
sub
lock
cwtl
pop
test
pop
xchg
mov
inc
jmp
cltd
inc
or
mov
lods
sbb
push
iret
sbb
aad
nop
enter
lea
aad
mov
xor
add
adc
mov
lds
daa
fdivrs
imul
nop
push
into
data16
in
pop
std
push
mov
sub
js
add
into
xchg
dec
inc
and
mov
inc
adc
pushf
pop
pop
jecxz
cmp
jno
fldt
or
sub
xchg
enter
loope
test
xor
ja
mov
xchg
aam
mov
pusha
hlt
test
lret
repz
popf
hlt
dec
mov
fistps
adc
mov
cmp
ds
xor
leave
mov
cmpsb
icebp
shlb
mov
shlb
lret
inc
adcl
mov
data16
in
fs
lods
adc
and
push
lock
add
and
cmc
int3
adc
jno
cmpl
mov
and
insb
in
mov
pop
pushf
cltd
fldl
pop
addr16
test
mov
jge
xor
inc
inc
cmp
inc
outsl
dec
stos
mov
iret
in
sbb
sbb
jbe
rcl
inc
lret
imul
in
bound
push
push
jg
out
mov
or
xor
imul
and
daa
je
inc
cwtl
xchg
loope
cmp
jecxz
add
adc
out
pushf
push
movsl
insl
arpl
cmp
bts
out
rclb
mov
insb
xor
xor
lret
mov
adc
ror
shlb
mov
pop
dec
xchg
pop
jae
insb
xchg
lahf
aaa
xchg
xor
lret
inc
mov
movsl
enter
cmc
mov
cmpsl
loopne
and
daa
cmc
adc
iret
out
shl
or
cwtl
out
push
scas
daa
xchg
add
aam
jp
push
mov
fsubr
sub
and
mull
clc
out
test
fwait
icebp
sbb
out
mov
rcr
add
pop
push
xorb
imul
movsb
andb
stos
jae
lds
pop
push
pop
sbbb
push
ret
mov
push
push
mov
bound
and
ss
cmp
mov
dec
mov
pop
test
xorl
nop
insb
jbe
and
mov
fs
pop
sar
loop
jle
sahf
mov
mov
movsb
mov
jle
push
xchg
test
pusha
test
sub
dec
mov
cld
mov
stos
mov
repz
lock
mov
inc
imul
mov
mull
inc
rol
addr16
pop
stos
popa
push
xchg
daa
mov
adc
loope
jnp
sahf
lea
cmpsb
outsb
and
arpl
aas
out
and
ds
sahf
xor
call
lds
xchg
in
push
repnz
pop
lret
rcrl
push
clc
xchg
jl
adc
jmp
mov
jle
inc
or
mov
clc
mov
push
nop
test
inc
xor
mov
test
push
or
adc
fcomps
movsb
cmp
lea
pop
pop
cmp
push
in
push
stos
subb
and
mov
mov
mov
jg
inc
insb
cmpsb
push
add
rclb
cmc
cmp
xchg
clc
es
repnz
cmc
add
lods
mov
out
push
pop
jge
mov
test
and
int3
loopne
lret
movsb
xchg
in
aas
lret
inc
fs
cmp
aas
jo
mov
cmpsl
rcrl
jne
dec
fcomps
aam
leave
pop
hlt
pop
pop
cs
add
push
mov
inc
cmp
adc
ljmp
popa
mov
xchg
inc
mov
jecxz
gs
faddp
pop
in
stos
into
aam
cmc
mov
lret
adc
xor
fsubrs
sbb
loope
sub
push
dec
pop
out
adc
jno
repnz
mov
dec
mov
daa
imul
xor
lahf
add
stos
ja
out
cmp
sbb
sbb
fldl
mov
orl
sub
test
int3
xor
xchg
push
pop
fistpll
and
mov
pop
dec
std
aad
aaa
in
inc
xchg
rorl
push
xor
cmp
xchg
or
sub
testb
addr16
aad
or
mov
dec
jp
pop
and
dec
push
je
jl
sbbb
fisubrl
cmp
adc
and
cld
fnstenv
and
xchg
lock
fnstenv
arpl
sbb
movsb
add
xchg
pop
repnz
dec
in
xor
test
ds
icebp
add
xchg
push
and
std
std
in
or
push
sub
fs
cmp
push
sub
and
mov
scas
or
mov
movsb
pop
xor
xchg
dec
inc
jg
outsl
xor
pop
or
sbb
stos
imul
scas
sbb
in
cmp
mov
sub
scas
andl
dec
in
xor
fiadds
dec
cli
adc
popa
mov
in
in
cltd
cmpsl
pop
fnsave
pop
fsubr
push
enter
xor
sbb
rcrl
pusha
testl
xor
jl
xor
outsb
out
bound
sarb
fmul
addb
rcll
fcomps
cmp
cmp
push
and
mov
push
lods
mov
jl
xchg
pop
bt
stos
pop
pop
test
fcompp
push
xchg
and
das
scas
cmc
mov
notl
cmp
test
in
jmp
or
leave
jne
push
pop
scas
pop
idiv
nop
xchg
and
jns
out
pop
fisubl
and
lcall
jmp
filds
lret
cmp
mov
push
and
sub
leave
mov
pop
popf
iret
testl
sbb
dec
dec
roll
movsb
sub
lods
in
mov
or
sub
push
in
pusha
and
imul
inc
cmp
sti
aaa
push
xor
repz
push
sbb
in
push
int3
rcrb
stos
int
pop
xor
ss
sti
inc
rorb
jnp
repnz
inc
pop
test
fbld
jae
pusha
jno
stos
aaa
adc
xchg
nop
fldcw
fsubrp
cli
les
fdivl
mov
jbe
jg
and
ss
mov
push
test
xor
pop
popa
popa
out
lods
gs
sub
adc
pop
sbb
roll
dec
iret
rclb
or
sub
jnp
in
inc
data16
adc
imul
sbb
out
ljmp
sub
cs
sarl
shr
cwtl
push
je
xchg
in
shlb
or
jae
push
jns
sub
xor
cmp
cwtl
fwait
mov
daa
arpl
pop
fldenv
sbb
insl
fsubrs
push
jbe
xchg
test
arpl
mov
adcb
je
mov
rcrb
sbb
cs
subl
jl
lret
iret
out
out
jae
outsb
scas
movsb
pusha
mov
fnstsw
lods
aaa
push
and
ss
les
add
or
sbb
inc
mov
in
jl
inc
adc
pop
in
dec
pop
je
test
sub
and
movsb
inc
nop
add
imul
fmul
xchg
push
cmp
cwtl
out
pushl
inc
cmp
or
fsts
push
pcmpeqb
cmpsb
lods
xchg
adc
adc
push
lretw
int
xor
xchg
mov
xor
das
push
mov
xlat
jge
pusha
lods
fisubs
dec
or
sub
cwtl
arpl
mov
push
fwait
pop
sub
aaa
movsl
mov
jnp
xchg
and
cmpb
and
jae
stos
jle
mov
std
out
enter
in
jmp
sub
test
xorb
in
cs
mov
xlat
pop
mov
stos
xlat
sub
or
add
dec
ss
pop
cltd
mov
and
pop
ljmp
mov
and
or
and
jne
or
push
sub
testl
mov
nop
pop
mov
out
add
out
mov
mov
stc
pop
or
icebp
push
daa
jp
imul
xchg
std
mov
out
add
dec
adc
loop
adc
add
push
mov
jo
shr
cld
sbb
push
aad
jg
iret
dec
dec
pop
in
cmp
xchg
adc
xorl
cld
xchg
cmpsl
xor
xor
out
xchg
xchg
es
iret
add
mov
xchg
push
xchg
cmp
das
jp
cld
dec
in
pop
and
fs
lds
xor
mov
and
stc
mov
mov
xchg
push
inc
or
pop
adc
xchg
mov
mov
dec
mov
imul
fwait
pop
sbb
test
mov
leave
mov
jl
push
nop
std
mov
cli
icebp
dec
addr16
dec
mov
in
shrl
cmp
popf
nop
xchg
lods
decl
or
pop
pop
jmp
sub
pop
mov
js
inc
mov
inc
push
arpl
add
ja
jge
clc
mov
jle
mov
loope
push
rorb
and
stc
mov
mov
push
rcrl
inc
cltd
fs
xor
push
pop
shll
push
idiv
mov
pop
mov
add
call
repnz
sti
mull
xchg
repnz
repz
ret
xchg
lods
inc
mov
adc
aaa
lcall
aas
jb
out
mov
popa
ljmp
out
mov
out
push
mov
out
loope
push
xchg
cmp
or
hlt
inc
test
bound
push
mov
add
adc
and
xor
les
aam
in
hlt
inc
test
bound
push
mov
add
adc
and
xor
les
aam
in
hlt
inc
test
bound
push
mov
add
adc
and
adc
and
xor
inc
test
bound
decb
fs
mov
pop
jmp
fisttpl
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jp
cli
hlt
lret
aam
lock
fs
dec
inc
pop
push
sub
je
add
adc
in
hlt
lret
fcmovbe
stos
movsb
mov
xchg
push
jp
sub
sub
xor
add
adc
in
hlt
lret
aam
movsb
mov
xchg
push
jp
sub
push
dec
jbe
push
sub
adc
in
addb
lcall
js
and
or
and
fnstsw
aad
sub
mov
pushf
pop
flds
push
xlat
in
mov
outsl
icebp
sti
and
xor
aas
add
sub
xchg
and
pop
mov
pop
adc
ljmp
movsb
push
lcall
mov
imul
add
sub
mov
mov
ret
pcmpeqw
mov
push
jno
add
cli
or
lds
dec
outsl
jb
jb
pop
adc
inc
xlat
push
pop
fstpt
rorb
sbb
fcmovbe
stos
movsb
mov
xchg
push
jp
dec
inc
pop
push
sub
xor
add
push
sahf
mov
xchg
jmp
loope
in
or
sbb
pop
dec
jbe
xchg
mov
mov
or
ficomps
cmp
pop
sbb
adc
cmp
dec
pop
pop
jno
jp
mov
subb
mov
xchg
push
jp
dec
inc
pop
push
sub
xor
add
adc
in
hlt
lret
aam
movsb
mov
xchg
push
jp
dec
inc
pop
push
sub
xor
add
adc
in
loope
mov
clc
shrl
jge
and
sub
insl
data16
mov
xor
aad
es
push
test
sbb
inc
test
test
mov
ss
xchg
pop
pop
lret
mov
int
dec
ja
cmpsl
and
js
add
fisubs
lods
hlt
push
xor
mov
sbb
lock
popf
movsb
push
cmp
inc
mov
dec
stos
dec
call
or
int3
cwtl
sub
jns
sbb
rcrl
fs
adc
xorb
nop
xchg
inc
jae
and
jmp
adc
jg
rorl
cltd
hlt
sub
xorb
pop
inc
or
loopne
mov
mov
outsb
int
ffree
push
mov
sbb
inc
cmp
mov
sub
popf
sub
movsl
cmp
ljmp
sbb
imul
add
cmpsl
jge
ds
sbb
push
mov
das
inc
lods
sti
in
popl
or
push
sbb
jp
adc
cmp
fcom
cs
cmp
insl
sti
mov
dec
add
insl
repnz
cltd
mov
sub
aas
mov
nop
pop
xchg
xchg
cmpsl
icebp
push
cmp
imul
out
nop
pop
pushf
push
jae
movsb
and
add
dec
sbb
jecxz
mov
dec
cmp
pop
sub
fsubr
mov
loope
cmp
lods
xor
ret
jle
push
xchg
jmp
nop
mov
sub
mov
push
jp
scas
and
movsb
jmp
out
lods
xchg
jae
ss
pop
into
les
sti
cs
jp
dec
add
add
cli
lock
pop
cld
call
jbe
push
mov
lahf
mov
jl
xchg
or
out
js
jo
or
popl
jmp
popf
or
rcrl
bound
or
add
filds
hlt
cltd
sbb
roll
movsl
push
movsl
mov
inc
pop
fcomi
loope
mov
xor
xchg
xor
push
push
repnz
jae
lcall
mov
cmp
xchg
jle
and
mov
push
in
add
xor
icebp
xlat
push
cs
xor
or
sub
push
push
fwait
arpl
stos
sub
clc
mov
xor
loop
xor
popf
push
lret
lock
sbbl
dec
push
fmulp
mov
ret
lcall
or
insl
cmp
je
and
loope
or
es
pop
loope
out
cmc
jle
bnd
repnz
or
fldenv
inc
aam
mov
mov
mov
mov
sahf
bound
rorl
push
data16
loop
icebp
jecxz
adc
std
test
fwait
cli
into
xchg
inc
icebp
inc
cmp
loop
lods
cmp
in
cld
add
sub
dec
addb
aam
icebp
cmp
es
add
sub
lcall
inc
in
mov
pop
out
leave
outsl
pop
mov
xchg
lock
push
dec
inc
pop
dec
push
jne
mov
cmp
jno
dec
fistpl
or
loop
push
test
xchg
mov
subl
and
gs
add
and
in
jno
test
push
xor
shl
ljmp
lea
scas
movsl
ret
fiadds
or
jne
test
push
add
or
fidivrl
pop
dec
in
arpl
daa
sub
clc
stos
jl
test
sub
test
or
scas
adc
and
lds
ret
add
xchg
aaa
or
ret
addr16
adc
jmp
cli
sbb
xchg
fsubrl
xchg
push
fnstsw
and
in
iret
out
and
pop
inc
adc
mov
leave
mov
mov
jno
out
mov
adc
and
push
adc
push
shll
clc
xchg
dec
cmp
call
ffreep
push
push
sub
pop
xchg
movsl
movsl
ljmp
fildll
or
test
adc
jecxz
outsl
xchg
pop
cmp
or
adc
imul
fnsave
and
sbb
loope
and
rolb
test
dec
out
out
fistpl
cmp
fimuls
popf
fnstcw
sbb
cmp
js
xchg
sti
jb
sbb
push
aaa
adc
out
pop
pop
sahf
mov
jae
mov
test
jle
fldenv
nop
pop
loope
mov
enter
pop
dec
arpl
pop
push
add
or
or
xchg
ret
cmc
ds
push
and
dec
push
fldcw
cmc
push
or
daa
and
inc
int
insb
loop
jbe
sbbb
dec
mov
sub
push
add
nop
push
lahf
nop
push
mov
pop
jmp
mov
or
push
int3
mov
add
push
add
das
push
stc
push
sbb
jnp,pn
jecxz
clc
outsl
data16
fdivrs
dec
out
pop
in
bnd
lods
out
push
xchg
cmp
ja
sub
xor
fst
hlt
js
mov
mov
sahf
mov
push
stc
ja
add
adc
jg
dec
cmp
in
push
rcr
jns
and
jnp
push
out
push
jge
xlat
sti
pop
int
in
sahf
jg
divb
adc
repnz
je
adc
divb
adc
or
sub
stc
or
xor
cmp
icebp
adc
sbb
repnz
mov
xchg
cmc
xchg
sbb
sub
adc
outsb
pop
xor
icebp
scas
fwait
and
push
ja
adc
mov
sub
jns
push
cmpsb
jnp
xor
cld
in
mov
sbb
cmp
repnz
aam
or
jmp
adc
fstpl
xchg
dec
negl
xchg
jae
hlt
fisttps
adc
pop
add
aas
cmc
ret
and
and
in
cltd
or
fldl
cltd
push
jl
call
mov
xor
or
fdivl
in
repnz
mov
aad
insb
xchg
insb
out
jecxz
mov
push
ja
sub
mov
cld
jb
call
inc
cmp
das
push
stc
xchg
fsubrs
sub
xchg
jno
stc
push
sub
daa
std
je
xor
mov
bound
fcmovbe
add
pop
mulb
fsubs
dec
insb
lds
arpl
xchg
inc
push
or
push
or
inc
cli
push
or
dec
mov
xchg
rclb
mov
jno
jbe
mov
in
mov
and
idivb
mov
lea
subb
mov
add
mov
insb
inc
mov
mov
adc
mov
push
push
jg
push
inc
lods
out
test
nop
lcall
cmp
inc
mov
outsl
or
jnp
ja
push
mov
cmp
or
stos
push
jecxz
mov
data16
push
mov
addr16
jge
in
xchg
sahf
inc
jbe
call
mov
xchg
repz
in
test
std
aaa
js
mov
and
repnz
rorb
push
lret
dec
daa
and
mov
adc
inc
les
adc
int3
nop
mov
pop
push
cli
popf
mov
xor
in
pop
jmp
inc
ret
call
and
jb
jae
xchg
ret
cld
std
movsb
mov
scas
mov
add
adcl
outsl
in
jo
imul
pop
mov
push
and
subl
imul
in
mov
pop
mov
clc
rorb
out
pop
add
into
lahf
mov
sbb
sub
movsl
adc
aaa
mov
jae
fnsave
push
sub
or
sbb
jnp
pop
das
jmp
mov
loop
mov
iret
sbb
push
lods
inc
sub
mov
outsb
std
sbb
xchg
out
shrl
sbb
mov
andb
mov
jns
adc
movsb
cmp
sub
sbb
sbbb
jecxz
xchg
cmp
and
cmp
add
push
push
xor
pop
clc
in
movsb
hlt
out
lcall
cmp
sti
dec
push
loop
insl
jmp
dec
es
imul
lret
imul
or
aas
fldt
dec
stc
adc
ret
imul
xor
jge
lcall
stc
adc
imul
nop
push
cwtl
push
and
mov
mov
pop
lret
out
mov
sub
jmp
mov
dec
cwtl
pop
ds
ljmp
mov
mov
js
aad
sbb
xor
xor
push
fwait
imul
shll
test
cli
insl
pop
imul
insl
jg
out
ljmp
and
cmpb
pop
mov
test
jo
sub
shrl
jg
ja
fincstp
add
je
addr16
lds
lods
fimuls
adc
cmpsb
mov
subl
or
jbe
ret
pinsrw
cmpsl
inc
shlb
fsubrs
mov
cmpl
jb
sbb
frstor
mov
pop
cmp
adc
test
push
cltd
dec
jmp
cmc
rcll
aaa
jmp
cmp
push
and
and
stos
jns
sub
je
add
test
dec
cmp
iret
loop
lods
ret
cmpsl
aam
inc
lds
sbb
imull
aam
mov
cwtl
in
add
push
jns
adc
xchg
and
sbb
int
adc
vmread
je
dec
jns
mov
mov
pop
cltd
pop
jae
ljmp
mov
add
dec
ds
dec
push
cmp
push
sub
popl
loopne
xorl
nop
imul
cltd
mov
adc
cmp
and
xchg
sbb
in
sub
lds
mov
jle
mov
stos
and
jno
sub
std
es
insl
adc
gs
push
call
push
mov
jl
scas
sub
inc
cmpsl
lcall
pop
inc
clc
and
jne
int
cld
or
int
ret
bound
mov
xchg
xor
loope
inc
aad
test
pop
les
mov
and
inc
xchg
arpl
rorl
sbb
jp
cmpsl
shll
xor
daa
cmpsb
add
xor
pop
aam
mov
cmc
fldln2
mov
jmp
daa
dec
push
ds
push
out
mov
xchg
push
aas
cli
test
dec
or
jbe
sbb
lcall
movsb
cmp
push
mov
mov
mov
fs
fmull
sbb
inc
dec
add
push
mov
negl
adc
add
das
int
imul
mov
aaa
lret
movsb
dec
mov
add
xchg
cmpl
clc
mov
lcall
add
dec
push
push
fcomps
jle
jp
rorl
cmp
inc
test
mov
jo
cmp
fistl
adc
aam
jbe
push
iret
adc
pushf
cld
mov
dec
rorl
add
ljmp
hlt
or
add
out
xchg
mov
sbb
cld
sub
mov
clc
gs
stos
js
or
fwait
or
mov
push
add
mov
or
outsl
push
sbb
inc
in
lcall
and
testb
outsb
or
xor
out
dec
xchg
les
pusha
icebp
inc
add
subb
ret
repz
and
inc
fldcw
xchg
mov
arpl
push
dec
das
mov
insb
dec
popa
sbb
or
insl
cmpsb
sub
mov
stos
xchg
dec
pop
cmc
mov
sarb
ret
mov
aaa
cwtl
aam
repz
xchg
mov
test
mov
pop
push
inc
or
stos
mov
inc
iret
outsl
rcll
adc
dec
outsb
das
adc
jne
mov
js
jp
jp
sbb
aaa
sbb
aas
jl
add
and
add
xor
lock
push
andl
hlt
out
ret
data16
icebp
pop
push
push
repnz
sbbl
shll
out
pop
mov
pop
flds
dec
sub
lahf
fnstcw
aam
mov
in
pop
mov
push
movsl
sbb
lret
fwait
in
lods
ret
call
loope
scas
sub
test
pop
test
add
add
jge
inc
shl
in
push
xchg
or
pushf
adc
mov
pop
and
lock
xchg
lcall
sub
dec
sub
loope
rcrb
mov
je
dec
push
mov
or
lods
mov
test
sbb
addr16
mov
jne
inc
inc
add
xchg
cmp
mov
mov
decl
jmp
and
pop
out
je
fcmovb
shrb
mov
mov
aas
fsub
mov
stos
rcr
jno
lret
adc
mov
jns
fstl
repz
loop
mov
pop
push
and
push
pop
push
call
sub
mov
jl
or
dec
adc
dec
or
in
xor
and
and
in
std
mov
negl
mov
fcomp
inc
xchg
fdivrs
lock
xorb
shrl
pusha
mov
cmp
icebp
mov
enter
cli
pusha
movsl
ljmp
mov
cmp
xchg
lods
out
bound
lods
loop
ds
xchg
mul
es
es
adc
dec
popf
test
xor
rol
jb
xor
shrb
push
subb
dec
pop
mov
xchg
inc
fstl
adc
es
rcll
pop
adc
xchg
mov
movsb
fwait
cmp
xor
add
add
push
lcall
inc
dec
arpl
in
sbb
mov
shll
mov
fdivrs
mov
adc
mov
inc
jne
subl
addl
or
pop
xor
loope
cwtl
inc
mov
jge
and
nop
jb
pusha
push
bound
jo
cmp
scas
roll
dec
call
jmp
jmp
inc
fwait
cld
nop
cmc
ja
push
nop
cmp
dec
shrb
xchg
xchg
mov
lods
std
sbb
mov
mov
mov
xchg
pop
cmpsl
jle
xchg
das
mov
cmp
jg
jb
jo
xor
adc
pop
test
sub
scas
mov
adc
cmp
pop
and
inc
jns
cmp
pushf
addr16
inc
in
test
test
and
mov
mov
clc
imul
pop
mov
xchg
mov
mov
pop
jbe
insb
fimull
lds
int3
fildl
dec
jmp
daa
pop
add
jp
xchg
inc
cmc
mov
and
xchg
pop
pop
xor
sub
lea
mov
push
cli
push
in
pop
sarb
cwtl
sbb
push
cltd
sbb
ficompl
push
or
cmp
int
dec
mov
mov
insb
push
leave
mov
sbb
hlt
stc
cmp
mov
call
mov
add
sbb
pop
mov
fldt
sbb
int3
dec
out
mov
mov
inc
cmpsb
or
push
cmp
sbb
add
stc
jle
cmpl
out
adc
icebp
aas
push
lea
insl
pop
mov
or
cli
cltd
mov
mov
rol
outsl
pop
mov
stc
dec
hlt
cli
sbbl
in
pop
dec
mov
cmp
int
insl
xlat
jns
in
in
loopne
inc
cmpsl
inc
test
cld
aaa
dec
and
aas
test
jno
pop
mov
pop
adc
fisubl
push
je
loope
call
outsl
mov
dec
jge
fistps
mov
push
fbstp
ss
inc
rorb
test
add
cmp
test
mov
lret
mov
enter
repz
orl
dec
lea
mov
inc
daa
lahf
xchg
out
pop
cmpsb
sbb
call
out
pusha
jae
adc
adc
jmp
mov
aam
in
add
lds
jns
sbb
cmp
cmp
sti
nop
lea
or
push
insl
mov
sbbb
ss
sub
or
fs
or
sub
jmp
or
dec
outsl
sub
jbe
adc
adc
loopne
sub
cmpsl
or
decb
dec
dec
jne
cmpsb
xor
in
push
mov
pusha
pop
push
loope
push
mov
jae
pop
add
push
xchg
xor
shrl
cmc
mov
fimull
rorb
push
pushf
push
mov
ret
in
sub
les
mov
sub
jge
mov
pop
sub
repz
scas
call
jbe
flds
das
cli
sahf
aam
pop
jb
mov
adc
imul
js
cmpsb
add
stos
cltd
sub
mov
das
cld
push
xor
js
xchg
loope
faddp
shl
jp
clc
pop
daa
imul
cmp
sbb
and
lahf
je
cmp
mov
or
aas
addr16
or
mov
mov
enter
add
ret
data16
mov
pop
movl
into
xor
sbb
push
int
mov
adc
or
or
mov
ss
data16
and
and
dec
loope
cmc
out
sub
fistpll
out
xor
mov
lds
push
xchg
fiaddl
and
fsts
lods
mov
lahf
test
fwait
leave
mov
mov
pop
and
dec
xor
lods
rolb
lret
sub
int
pop
cmc
sub
xorl
pop
xor
cmpsb
ret
imul
pop
lock
popf
std
outsl
call
imul
mov
add
mov
das
loop
jne
daa
mov
cmpsl
fdiv
outsb
insl
xor
pushf
ja
aam
dec
mov
pop
cwtl
sbb
cmp
in
push
lods
xor
or
pop
sub
mov
jne
xchg
xorl
jne
mov
xor
mov
cmp
out
in
lock
xchg
arpl
mov
shr
dec
jb
sub
shl
testb
lock
pop
jne
test
adc
enter
pushf
cmp
stos
jp
sarl
adc
ja
or
dec
and
jg
ljmp
mov
sahf
test
scas
jnp
xchg
imul
es
inc
xlat
mov
adc
and
pop
push
cmp
pmulhuw
xchg
out
ret
or
scas
cli
or
jp
inc
test
inc
push
popf
imul
inc
jmp
stos
sbb
push
call
adc
cld
inc
xchg
mov
arpl
leave
insb
insl
xlat
sbb
mov
jmp
mov
stos
decb
mov
mov
pop
lods
push
fsts
scas
pushl
cmp
fsubr
mov
mov
cli
inc
ret
add
xchg
or
scas
in
call
hlt
mov
fs
push
push
cmp
popa
inc
mov
xchg
stos
sbb
nop
scas
adc
out
sbb
addr16
imul
xor
js
mov
aaa
movsb
fadds
and
inc
movsb
js
mov
movsl
in
testl
rorb
fstpl
mov
xor
ret
lcall
aad
orb
jge
outsl
into
aas
out
ret
ss
dec
dec
push
pmulhw
mov
outsb
int3
ljmp
cmp
stos
ljmp
outsl
rorl
fwait
and
sbb
jecxz
fisubrl
int
fcmovbe
pop
pusha
idiv
push
mov
xchg
scas
sbb
add
dec
pop
out
lods
es
mov
roll
loope
mov
mov
mov
xor
push
jle
popa
jno
push
es
lods
jns
add
jmp
loopne
scas
or
push
adc
call
pushf
scas
test
out
xor
shl
xchg
out
xor
movsb
inc
out
pushf
mov
jae
lahf
shrl
sub
cmp
fcompl
mov
cmp
scas
fstp
fcomp
or
rol
mov
dec
add
pop
mov
inc
jae
test
inc
test
pop
pop
mov
dec
jne
xor
ljmp
sbb
mov
or
test
jo
stc
fimuls
add
jo
rorb
ffreep
ljmp
cmpb
orb
sbb
std
ja
loop
jp
jnp
divb
xchg
xchg
sub
ss
nop
pop
inc
pop
sub
sub
cltd
jns
outsl
cld
dec
outsl
jb
mov
cld
pop
cwtl
inc
js
out
imul
gs
int
dec
adc
and
hlt
sub
fcmovbe
stos
movsb
mov
xchg
push
jp
dec
inc
pop
push
sub
xor
add
adc
in
hlt
lret
aam
movsb
mov
xchg
push
jp
dec
inc
pop
push
sub
xor
add
adc
loopne
hlt
lret
aad
movsb
mov
xchg
push
jp
dec
inc
pop
push
sub
sbb
in
hlt
lret
fcmovbe
stos
movsb
mov
imul
fsubp
inc
pop
and
mov
cmc
sti
in
testl
mov
push
xor
pop
jbe
xchg
mov
std
int
fldl
imul
jl
dec
pop
jbe
lahf
movsb
xchg
mov
in
aad
lret
push
ss
inc
or
and
adc
sbb
lret
rol
shl
push
add
incb
lds
and
xor
inc
cltd
push
shrd
out
mov
and
in
ret
jbe
leave
shll
sub
mov
sbb
jmp
lds
pop
dec
loop
xchg
jecxz
out
out
lcall
pop
push
in
call
jae
out
call
call
cltd
mov
dec
add
aam
jmp
mov
and
ficomps
inc
shlb
loop
pop
adc
dec
jbe
sub
outsb
ret
fstps
lods
outsb
insl
mov
fs
jo
xchg
mov
mov
out
int
out
xor
and
das
jne
gs
dec
jl
ja
xchg
in
ret
stc
rorl
mov
push
jg
jae
add
sbb
cmp
lods
out
mov
fstps
xchg
cwtl
les
jb
jae
inc
push
push
cmp
xchg
repz
cmc
std
int
sub
es
push
dec
pop
jbe
xchg
mov
std
int
sub
es
push
dec
pop
jbe
xchg
aam
cmc
mov
dec
rorl
sub
ljmp
int
inc
sub
jmp
insl
in
adc
add
movsb
mov
ret
ret
fiaddl
orb
jecxz
jge
xor
ja
dec
push
cmpsb
loopne
int3
jmp
mov
push
cli
test
mov
cwtl
mov
out
xchg
pusha
lahf
rorb
out
adc
mov
and
dec
hlt
and
mov
jge
icebp
bound
dec
les
and
xchg
inc
mov
mov
dec
mov
xchg
inc
mov
xchg
jp
push
leave
test
sbb
shl
lea
jp
adc
cmp
cli
and
cltd
mov
dec
int
or
or
or
lcall
scas
xchg
mov
lds
in
inc
lods
imul
adc
fwait
movsb
add
and
cli
jmp
leave
out
popf
cmp
xor
inc
arpl
sub
jns
test
decb
fadds
popf
dec
mov
pop
rcrl
jmp
xlat
cmpsb
call
lea
jg
cmp
push
out
xor
push
cmp
into
std
out
sbb
lock
add
dec
cmp
sub
les
in
leave
jb
sbb
or
dec
sbb
xchg
mov
pushf
mov
pop
push
push
testl
mov
xchg
mov
add
push
sbb
in
push
out
fadds
cmp
xchg
cmc
push
xor
cmp
adc
add
push
sbb
dec
mov
adc
je
rclb
test
sbb
push
or
addb
pop
adc
jnp
cld
lret
xchg
xor
and
insb
jge
and
cld
xchg
add
cmp
loope
mov
popf
repnz
dec
stos
push
adc
rol
push
jo
lods
or
xchg
leave
outsb
mov
xor
lret
push
fnstcw
fsubrl
mov
pop
leave
stos
xor
jae
inc
mov
dec
mov
shrl
pop
sar
push
icebp
mov
and
adc
add
sbb
cli
inc
das
push
ret
leave
scas
mov
mov
test
test
pop
xor
pop
sar
fstpl
pusha
hlt
mov
push
lea
xchg
pop
push
lcall
outsb
mov
int
les
sahf
icebp
jo
mov
push
orl
test
inc
fstps
cld
mov
lods
sarl
aam
sbb
inc
popa
sbb
xchg
jg
push
mov
sarl
fcmovnu
lock
leave
cmpb
addr16
sbb
mov
lods
xchg
loopne
and
mov
push
add
js
jl
cmc
data16
inc
rolb
add
mov
popa
or
inc
cmp
and
sbb
mov
xor
jle
cld
das
rcrl
insl
and
aad
push
jp
pop
test
daa
and
movsb
xchg
js
add
sub
jbe
inc
gs
mov
out
hlt
mov
int3
loopne
jl
sub
scas
addl
pop
ret
xchg
pop
outsb
outsl
or
cwtl
mov
enter
aam
insl
xchg
jp
shrl
push
mov
scas
sbb
ja
arpl
test
sub
fcmovnu
ss
pop
dec
std
mov
cmp
push
push
jmp
popa
fnstsw
xor
stos
int
out
lahf
sub
loope
addl
lret
lcall
and
sub
xlat
jo
fnstsw
popa
sub
add
scas
inc
sbb
mov
dec
loopne
xchg
mov
stc
inc
imul
adc
repz
pop
ret
jnp
push
outsl
or
dec
mov
pop
jae
jne
cli
or
mov
pop
sbb
mov
ljmp
movsb
call
mov
lods
cmp
sub
ret
mov
inc
in
xor
and
and
jl
outsl
test
xor
or
cmc
inc
in
call
inc
mov
sahf
daa
fcmovne
push
dec
xchg
and
pop
add
gs
fstpl
adc
popf
out
or
shrl
xchg
enter
js
dec
pop
xlat
fcoml
mov
cmpsl
jae
test
lods
xchg
test
pop
shlb
shlb
xor
jae
xchg
paddd
aas
sbb
push
mov
repnz
and
xchg
jge
jge
and
mov
inc
inc
push
stos
push
out
sbb
pop
aam
subb
fists
cmpsl
mov
sbb
push
add
lret
mov
pop
dec
cmpb
dec
jecxz
icebp
inc
call
push
loope
mov
arpl
and
xorl
and
sbb
add
inc
cs
in
jnp
scas
out
mov
test
xchg
andl
lret
lcall
or
test
cmp
mov
rorb
test
lret
sub
mov
lcall
enter
add
inc
arpl
mov
and
and
adc
inc
adc
sti
cwtl
sub
sub
pop
xor
outsl
in
push
int3
cmp
fsubrl
imul
jecxz
jmp
fstp
sti
lahf
xor
jp
or
add
push
ret
fildll
or
int
sbb
push
mov
popa
push
lret
dec
push
xchg
loope,pn
popf
xlat
fcoms
cmpsb
sub
push
adc
dec
shrl
pusha
xchg
ljmp
cmpsb
popf
shll
mov
popf
mov
bound
jge
cmp
scas
rol
xor
sti
imul
and
vmread
push
mov
push
add
rcr
add
mov
aaa
jne
fsubs
jnp
out
sbb
push
out
cmp
jge
mov
mov
dec
dec
dec
scas
cli
test
push
ds
sti
sbb
sbb
adc
int3
pushf
cmp
scas
sbb
sub
sahf
xchg
pop
xchg
mov
cmp
sti
or
sub
jp
ret
rorb
movsb
dec
lods
cwtl
inc
fsts
xlat
in
mov
lret
je
add
and
in
mov
push
lahf
fistpll
jmp
nop
loopne
int
stc
std
scas
push
push
pop
lret
sub
leave
mov
mov
cld
fcmovne
aam
daa
and
cmp
xor
cld
jne
sub
mull
or
jg
jno
sbb
jb
es
out
subb
dec
mov
out
pop
in
enter
jb
les
or
pop
xchg
lcall
lds
mov
inc
pushf
dec
aas
pusha
test
sbb
adc
mov
fisttps
repz
cs
cmpl
dec
sbb
sub
imul
cmp
test
ds
test
xchg
xchg
addr16
fstl
andl
test
mov
jns
adc
or
bound
xchg
or
faddl
sub
inc
stos
xlat
ficomps
sub
setbe
je
jmp
sbb
aam
adc
mov
jno
jae
sub
jg
mov
push
add
xor
out
orb
push
or
dec
mov
pushf
mov
hlt
mov
test
rorl
hlt
fldcw
lods
lret
adc
mov
fisttpl
in
jle
mov
cld
or
mov
dec
sarb
xchg
or
test
icebp
imul
mov
js
movsl
test
scas
jns
add
push
fnsave
push
rclb
sub
sbb
jecxz
leave
fcmovb
xchg
pop
mov
inc
aad
or
ret
fmuls
mov
cmpsb
add
ss
loope
cmpsb
sub
sub
pop
mov
sub
cmp
sub
and
push
imul
call
sbb
scas
pushf
out
nop
int
sub
mov
push
sub
pop
loop
pop
lcall
inc
shr
lock
out
fdivrl
into
inc
mov
jae
and
fwait
push
enter
addr16
pop
mov
subb
push
xchg
push
out
sub
sahf
and
push
sarl
mov
or
dec
xor
nop
jg
mov
or
sbb
add
sub
repnz
xlat
out
dec
pop
cmp
mov
jg
dec
lock
push
mov
ret
das
cli
or
movsl
in
movsl
push
iret
pushf
xchg
enter
lock
jnp
popf
jecxz
xchg
popf
hlt
pop
pop
jmp
sub
pop
sbb
sbb
sub
sahf
mov
lea
lret
ja
sbbl
jp
push
inc
cs
hlt
loope
in
jne
ret
mov
mov
fs
fwait
out
in
cli
inc
cld
pop
inc
add
add
mov
lret
add
fstpt
sbb
int3
icebp
mov
loop
adc
fstl
jmp
pop
ss
daa
or
out
in
test
sbb
in
xlat
and
pop
adcb
sub
jge
fisubl
sub
push
test
dec
roll
mov
xchg
mov
pop
mov
notb
pop
iret
aad
ficomps
sbb
pop
xor
or
shll
aad
jl
sbb
pop
sub
in
rorl
fsub
xchg
sbb
sbb
into
xor
xchg
jmp
xchg
fmuls
push
fdivr
xchg
nop
adc
rsqrtps
jle
insl
jg
daa
int3
add
cmp
mov
sbb
xor
cmc
outsb
xor
xor
js
sarb
mov
in
in
pop
andb
xchg
test
push
xor
adc
mov
mov
div
gs
dec
xorb
add
pop
push
stos
push
js
hlt
lods
sub
enter
jmp
test
popa
xchg
add
pop
sbb
ja
jp
enter
rclb
aad
xchg
outsb
rolb
lret
fwait
and
xlat
lahf
jge
push
cltd
fsubs
or
sbb
push
pop
movsb
push
mov
push
mov
xchg
leave
inc
rcrb
push
or
mov
in
clc
ror
inc
mov
nop
or
pop
sti
in
out
sbb
stos
imul
ss
jl
adc
pop
sub
push
add
fistl
fisttps
add
jb
xchg
pop
xchg
add
addb
ret
and
stos
es
das
cwtl
push
cmp
rclb
rorl
push
lods
dec
ljmp
xchg
mov
xchg
repnz
icebp
mov
jne
pop
mov
test
mov
mov
xchg
arpl
js
adc
jge
and
mov
mov
lcall
mov
test
xor
jnp
fisttps
or
inc
bound
mov
sbbl
pop
arpl
nop
jmp
cmpsb
mov
insl
insl
jno
cmp
repnz
and
icebp
scas
pop
icebp
dec
add
scas
addr16
in
fnstenv
or
addl
test
inc
xchg
dec
imul
and
dec
mov
mov
out
stos
outsl
stos
fisubrl
dec
push
inc
into
out
cltd
subl
in
and
adc
std
movsl
inc
test
cmpsb
and
pop
mov
xchg
test
mov
cmp
xor
mov
pop
sbb
out
xor
pop
lea
inc
mov
cmc
fmulp
arpl
in
push
inc
mov
mov
cmp
and
push
xchg
push
push
sbb
push
popf
lret
or
ret
mov
lock
roll
je
mov
in
cmp
gs
jecxz
push
add
sub
add
push
popf
push
push
push
mov
imul
pop
push
mov
fisubl
pop
mov
loope
adc
out
xorl
fistpl
in
jne
dec
push
sbb
pop
push
inc
mov
push
lods
push
js
imul
mov
in
sahf
and
fmull
das
imulb
mov
lcall
test
roll
push
sahf
pop
xchg
or
xchg
push
daa
cmp
loopne
sub
daa
jno
int
jbe
fwait
add
or
gs
aaa
jae
sbb
sub
enter
pop
call
dec
test
push
add
cltd
pop
pop
cmp
addb
mov
and
fcomip
xorl
lods
inc
xor
jp
sbb
fiadds
jns
and
insl
push
sub
inc
pop
popf
sub
sbbb
aam
je
lods
push
xor
jnp
movd
xor
push
cli
pushf
loope
or
jg
jg
cs
popa
aad
mov
outsl
jne
stos
mov
gs
ljmp
les
adc
jne
sub
mov
push
and
ret
cwtl
adc
xchg
mov
dec
adc
in
gs
inc
and
scas
dec
fs
mov
popf
in
mov
outsb
roll
in
and
sbb
inc
pop
dec
subb
sbb
adc
shrb
jbe
and
rcr
es
les
xor
call
iret
jl
mov
or
sub
add
scas
test
aad
and
adc
mov
sbb
and
pop
repz
fisubrl
dec
shrb
cmpsb
div
push
lods
sub
inc
data16
push
inc
jne
test
cmpsl
sti
sahf
xor
cld
out
xor
mov
add
ret
fiaddl
mov
gs
jae
ss
out
cmc
xor
int3
push
or
adc
popa
xchg
push
into
cwtl
pop
dec
outsl
sub
adc
adc
mov
xlat
lea
sarl
fwait
popa
lret
push
shll
subb
and
adc
jno
jp
jge
dec
add
out
jb
adc
push
repz
insl
repnz
xchg
orl
pop
mov
jo
and
mov
adc
pop
xchg
idivb
adc
fnstsw
mov
scas
sti
sub
imul
loop
rcrl
dec
mov
pop
les
mov
mov
scas
repnz
pushf
mov
es
mov
xchg
es
mov
sbb
loope
pop
arpl
push
dec
inc
jmp
sbb
add
je
dec
xor
mov
cmp
add
shrb
and
mov
mov
xchg
loopne
mov
jecxz
inc
sbb
adc
sbb
mov
jmp
std
xchg
stos
cmp
pop
xchg
and
clc
int
mov
mov
xchg
inc
ljmp
addr16
pop
sbb
push
or
sbb
sbb
sub
in
into
sbb
stos
push
outsb
mov
inc
cmpsl
jo
pop
out
cmp
add
dec
das
jmp
ja
xchg
test
xchg
mov
mov
cmp
inc
imul
movsb
les
ja
sbb
out
dec
adc
ds
lahf
mov
shl
pop
mov
mov
adc
lods
push
lock
cmp
push
jno
pushf
inc
and
jae
mov
pop
ljmp
push
fcomps
fsubrs
imul
cli
jne
adc
shrb
stc
jo
cmc
mov
loopne
mov
cmp
clc
mov
or
or
adc
jns
mov
pop
pop
aaa
lcall
imul
fmulp
in
adc
pop
enter
std
pop
mov
pop
test
mov
and
les
sbb
mov
mov
aad
fsubrl
xlat
sub
cmp
rclb
daa
dec
sbb
xor
stos
bound
je
daa
xchg
push
dec
shll
mov
ret
pop
mov
fistps
sbb
dec
fmuls
mov
aad
jo
out
jecxz
addr16
push
xchg
pop
jbe
fcmovne
fdivs
adc
adc
or
inc
fadds
dec
idivb
or
mov
pop
fst
inc
xor
ljmp
cli
mov
adc
addb
xor
add
adc
dec
pusha
imul
nop
cltd
int3
pop
push
xchg
sub
adc
adc
jmp
outsb
cwtl
aaa
scas
xchg
aaa
bound
mov
hlt
mov
std
xchg
in
mov
lahf
js
out
outsb
inc
or
ret
test
dec
mov
mov
mov
cld
inc
andl
mov
sbb
add
dec
jne
xor
jns
cwtl
std
idivb
push
and
sbb
cld
dec
cwtl
ljmp
lock
sti
nop
aam
xchg
dec
push
lret
mov
jae
and
rcr
sarb
mov
scas
mov
sti
outsb
cld
je
jae
xor
fiadds
push
and
mov
add
dec
and
cmp
cltd
pusha
fisubrs
jmp
cmpsl
mov
sub
mov
jl
mov
pop
imul
rclb
mov
pushl
pop
out
rorb
mov
pop
outsb
push
cmp
cmpsl
scas
ja
and
outsb
fcomp
mov
movsl
mov
cmp
adc
dec
scas
in
in
insb
mov
sub
test
pop
incl
mov
jmp
sub
push
fidivrs
jbe
popf
sub
hlt
and
fdivrp
cmp
cwtl
adc
mov
sbb
mov
push
mov
icebp
imul
sub
in
xchg
jbe
push
nop
das
loope
test
icebp
and
lock
loope
pop
gs
add
lds
sub
lods
je
movsl
shlb
pop
cli
stos
adcb
pop
iret
test
mov
cwtl
xor
pop
je
push
mov
cwtl
mov
xchg
or
test
mov
push
ficomps
gs
mov
out
int3
pop
outsb
out
pop
xchg
push
jle
enter
aaa
ja
fwait
or
mov
mov
aaa
inc
movsb
dec
mov
push
ljmp
fs
add
arpl
or
xor
scas
ljmp
lret
xchg
adc
sub
orl
dec
pop
aad
mov
push
rolb
sahf
dec
pop
or
add
movsb
loopne
inc
mov
jae
jnp
ret
cwtl
imul
push
aaa
pop
sbb
push
loopne
popf
xlat
ds
mov
xor
xchg
adc
mov
lods
jecxz
insb
leave
and
pop
rorl
loopne
test
loop
lret
test
push
subl
data16
std
and
and
es
push
and
mov
cwtl
add
pop
mov
jmp
adc
mov
call
data16
mov
dec
mov
rsqrtps
in
add
mov
mov
cmp
test
cwtl
lock
nop
adc
push
cmp
loop
sub
mov
es
daa
das
movsb
orl
sub
lods
and
xchg
adc
out
or
add
negl
inc
pop
jbe
into
iret
outsl
push
nop
ret
mov
stos
fwait
lods
inc
in
mov
mov
xchg
fwait
inc
xchg
jbe
xchg
jge
mov
idivb
ret
rorl
push
xor
fidivl
out
jne
test
sbb
lock
sahf
pop
out
or
cmp
outsl
mov
mov
sub
stc
or
or
jo
adc
sbb
sub
mov
popa
movsl
in
out
jae
mulb
mov
adc
mov
call
aad
cltd
add
cs
xchg
test
push
mov
jns
scas
aas
daa
and
mov
ja
lahf
loope
push
and
jb
inc
sub
out
sbb
rclb
pop
lods
adc
shrb
inc
popa
sti
sti
xchg
jp
jmp
outsl
jnp
mov
je
pop
lahf
fldenv
dec
std
repnz
or
arpl
inc
repz
notb
mov
aaa
dec
push
cmp
xchg
xchg
mov
pop
je
adc
jns
adc
pop
dec
mov
fdivs
xchg
cld
cmc
jle
cmp
cli
int3
pop
jp
lahf
and
add
frndint
mov
pusha
in
mov
imul
xchg
xchg
mov
test
popf
mov
stos
dec
sbb
jbe
and
fbld
push
inc
outsl
jmp
and
and
push
stos
push
insb
movsl
or
add
lret
jl
sub
repnz
mov
jb
dec
cmp
jp
push
cmpsl
push
sub
test
scas
xchg
ret
mov
xchg
scas
nop
in
outsb
shlb
sbbl
cmp
push
xorl
loopne
jecxz
jnp
jge
or
mov
jne
jecxz
jmp
repnz
mov
inc
sbb
adc
js
sub
dec
in
sub
movsb
lahf
cmp
ljmp
cmpsl
mov
adc
outsb
and
shrl
aad
inc
mov
jne
int
out
fistpl
enter
aas
cwtl
adc
popf
lods
cmp
sbb
fdivrl
or
sbb
or
cmpsb
popf
mov
std
int
sub
es
push
dec
pop
jbe
xchg
mov
std
int
sub
es
push
dec
pop
jbe
xchg
mov
std
int
sub
es
push
dec
bound
orb
in
std
dec
out
rolb
ret
es
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lods
call
xor
leave
ljmp
add
add
pop
add
add
filds
jb
jb
mov
aaa
add
mov
das
add
aad
daa
add
jg
filds
cmpsl
add
add
add
push
add
dec
add
add
add
sbb
jmp
dec
add
mov
out
add
add
add
add
rolb
je
push
and
bound
adc
sbb
outsb
add
add
add
add
add
rolb
stc
add
xor
in
out
add
add
add
add
aad
cmpsb
add
add
lcall
add
add
add
add
add
sbb
add
xor
add
add
add
sbb
sbb
add
add
outsb
add
add
add
jb
testb
add
add
or
sub
add
xchg
add
add
testb
add
add
add
mov
add
jg
push
add
add
add
add
adc
ret
add
add
add
add
add
mov
aad
aad
sub
bound
addl
outsb
add
add
ret
add
add
jge
roll
and
inc
add
adc
xor
dec
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
add
add
add
iret
add
add
add
push
add
add
add
add
add
add
mov
dec
add
add
add
add
add
add
add
pop
add
add
push
add
add
outsb
add
add
add
add
add
add
add
dec
add
add
add
outsb
add
add
add
jb
add
add
outsb
add
add
add
add
add
add
mov
push
add
push
add
add
add
add
add
add
add
add
and
bound
add
pushf
add
pop
add
add
add
inc
add
add
mov
or
add
roll
xchg
add
mov
addl
adc
xchg
add
add
jg
jb
insl
add
add
add
out
add
add
add
add
add
add
aaa
add
add
add
dec
add
add
jmp
cmpsl
add
dec
add
popa
add
add
add
add
mov
add
add
sub
pop
add
and
aad
lcall
add
add
add
add
add
add
add
mov
add
add
bound
dec
add
dec
add
add
add
add
sbb
and
xchg
add
add
add
sbb
or
movsb
add
test
rolb
ret
add
jo
pop
add
add
add
add
pop
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
into
add
add
add
add
in
mov
add
sbb
add
add
mov
add
add
add
mov
or
testb
add
add
add
push
xorl
les
jle
inc
dec
dec
test
test
lods
xchg
jmp
xchg
push
inc
inc
jecxz
pop
lods
mov
cmpsl
push
lea
shll
mov
jl
std
loopne
gs
dec
add
and
add
insb
pop
sbb
xchg
fisttpl
xor
insb
adc
ret
pop
rcrl
sub
bnd
ret
lock
fsubl
adc
inc
das
jg
pushf
fcmovnb
or
dec
pop
or
aaa
push
decl
xchg
pop
hlt
movsb
lret
lods
aam
inc
jmp
dec
hlt
arpl
out
jp
lret
fimull
push
and
dec
jl
jg
mov
adc
pop
xchg
pop
mov
ficomps
or
push
in
xor
mov
pop
lcall
mov
sub
in
or
test
test
ds
add
mov
jno
rclb
jo
daa
push
fdivrs
fadd
fs
ret
adc
sub
enter
mov
jae
cmp
out
fsubl
jns
lock
movsb
in
std
jmp
or
pop
pop
or
or
cmp
push
loop
mov
push
adc
subl
mov
arpl
cmp
lods
jg,pn
xlat
jge
sbb
mov
xchg
dec
and
iret
jp
outsl
inc
and
xor
or
inc
xchg
push
lret
scas
out
adc
aam
bound
adc
scas
mov
dec
insb
xchg
lds
sub
jge
popf
push
daa
sub
pop
rcll
popf
jno
pop
inc
sub
js
adc
xor
xchg
mov
sbb
sbb
js
mov
adc
frstor
scas
or
mov
xor
imul
jge
or
jns
cmp
fmul
rcrb
ja
lds
inc
adc
inc
in
mov
loop
xor
out
inc
xor
shll
pop
cmc
mov
lods
jb
push
xor
movsl
jbe
inc
or
fistl
xchg
mov
push
aad
jmp
test
dec
push
filds
gs
or
out
pop
mov
add
test
pop
add
dec
cmc
icebp
iret
xor
sbb
push
mov
roll
shl
in
push
pushl
cmp
cld
inc
dec
xor
lahf
ja
jmp
mov
and
out
adc
mov
sub
daa
xchg
or
int
roll
out
pop
pop
daa
movsb
sub
fwait
cli
push
shll
gs
adc
out
lods
outsb
sbbb
push
addr16
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
