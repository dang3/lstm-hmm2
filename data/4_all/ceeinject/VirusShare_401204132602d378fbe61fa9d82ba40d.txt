call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
in
mov
cmpsb
int
fldl
clc
mov
jg
dec
push
pop
push
sub
inc
sbb
cmpsb
int
fldl
popf
mov
dec
pop
pop
push
sub
push
sbb
cmpsb
int
fldl
popf
insl
ss
add
sub
xor
cli
pushf
int
mov
mov
aad
ret
movsl
mov
fiaddl
pop
dec
mov
test
add
lods
out
imul
dec
shll
lock
cmp
out
dec
pop
adc
xchg
inc
clc
mov
ret
ss
stc
sub
mov
mov
sbb
mov
sbb
out
ficomps
fldcw
cmp
inc
mov
imul
or
push
insb
leave
jne
shr
push
jge
mov
cmpsb
shr
add
mov
pop
lea
cmp
mov
outsb
ss
mov
int
fldl
popf
insl
ss
dec
push
pop
push
sub
push
sbb
fisttps
mov
xchg
loop
sbb
ds
sbb
add
and
and
ficomps
enter
pop
push
sbb
pop
push
ficoml
pop
lock
mov
std
cmc
mov
mov
out
popf
insl
ss
dec
push
pop
push
sub
push
sbb
cmpsb
int
fldl
popf
insl
ss
dec
push
pop
push
sub
push
sbb
mov
mov
fldl
scas
cmp
xor
add
or
xor
lods
mov
cmp
xorl
push
xor
dec
pop
mov
frndint
xchg
fwait
mov
dec
pop
jbe
sub
enter
xor
outsl
fwait
addr16
cltd
dec
mov
mov
ja
ss
pop
xchg
cmpsb
mov
test
fstpl
pop
mov
bound
sti
inc
cs
aad
cmp
enter
test
lret
pop
or
sub
mov
pop
push
imul
adc
ret
push
push
mov
inc
dec
pop
in
jle
js
push
sub
lcall
shrb
sub
in
stos
outsl
scas
popf
popf
faddp
xorl
fwait
jns
sub
fsubrl
stc
sti
mov
in
stc
add
jno
inc
xchg
outsl
pusha
aaa
into
jmp
sti
cmp
mov
inc
stc
push
test
xor
sub
push
test
xor
sbb
sbb
pop
pop
cmpsb
ror
pop
mov
or
mov
sti
out
icebp
cmc
repz
sub
xlat
xchg
sub
xchg
in
or
imul
stos
jecxz
lahf
add
sub
out
cwtl
pop
add
stos
ss
inc
add
fsub
sbb
add
mov
sub
int
lock
and
cmpl
sub
shll
cld
je
popf
sarb
ss
fisubs
dec
daa
push
sbb
push
or
pop
arpl
les
push
pop
fisubrl
divb
lea
cmp
imul
testb
fcoml
lods
push
sbb
inc
mov
pop
xchg
add
push
cmpsb
sbb
outsl
add
fsubs
int3
mov
push
adc
je
rolb
adc
lret
out
sub
mov
cmp
cmpsb
icebp
add
popa
sub
mov
stos
shlb
dec
mov
ss
inc
mov
movl
outsl
xlat
pushf
sub
mov
out
sbb
ret
sub
jmp
mov
fistps
xor
imul
cmp
add
add
ror
outsb
es
js
pusha
inc
scas
adc
push
lret
cmp
cmpsl
movsb
xchg
add
and
xchg
jge
ret
and
add
cmp
je
pop
sub
xor
adc
push
push
inc
jl
popf
test
ficomps
mov
std
inc
mov
aaa
and
xchg
xchg
bound
js
les
sbb
cli
mov
js
mov
out
push
scas
or
push
mov
popf
adc
mov
jmp
mov
sub
pop
push
xchg
cli
cmp
mov
inc
mov
sub
inc
mov
arpl
jae
faddl
jns
mov
push
mov
mov
mov
dec
and
data16
stos
iret
add
fcmovne
push
cmp
lods
sbb
push
dec
push
idiv
mov
sbb
rcrb
xchg
test
aaa
and
pop
dec
push
das
imul
inc
call
das
jo
mov
add
or
jg
ret
jnp
mov
lods
enter
lret
dec
mov
in
sbb
adc
mov
push
test
cltd
sbb
je
pop
test
dec
out
cltd
sbb
stos
pop
fcoml
rorb
xor
cmc
test
fisttpll
inc
iret
adc
sarb
add
push
add
test
int
jmp
add
jnp
add
sub
jns
cmc
bound
xchg
or
hlt
cltd
xchg
inc
inc
insl
mov
in
loope
jmp
dec
sarb
data16
or
xchg
adc
xlat
gs
rcrl
mov
adc
dec
sub
mov
or
fnstsw
fwait
in
jb
stc
lret
loop
sub
in
fs
stos
repnz
inc
and
fwait
dec
xchg
jbe
push
jns
mov
call
test
lahf
in
sub
mov
or
jnp
push
xchg
icebp
inc
insl
fimuls
inc
dec
or
fsubrl
icebp
push
ljmp
scas
xorl
push
pop
test
arpl
xor
or
js
lcall
mov
mov
pop
dec
jb
insl
cmp
aas
adc
jb
mov
sbbb
fsub
mov
test
xor
popa
outsb
jecxz
push
call
out
adc
insl
push
pop
scas
sub
pop
cmp
fwait
add
loop
je
movsb
loop
xchg
orl
outsb
pop
cmpsl
push
scas
push
cmpsl
lods
dec
pop
fcomi
dec
mov
mov
mov
sub
jnp
push
mov
adc
rcll
daa
jg
lock
xchg
adc
mov
in
xlat
jl
fs
xchg
mov
or
pop
mov
lock
or
inc
mov
in
xor
gs
jmp
push
and
jl
mov
aad
data16
xchg
das
dec
cmp
ret
orb
sbbb
arpl
xchg
xchg
aas
leave
in
mov
and
inc
ret
movsl
mov
sub
dec
fcomps
aas
mov
pop
imul
sbb
data16
xchg
mov
sahf
add
jbe
les
aaa
fmuls
mov
into
jnp
mov
and
out
dec
iret
mov
xchg
mov
rolb
jge
push
mov
icebp
inc
cli
push
pop
rolb
stos
adc
and
pop
sar
xor
mov
jne
and
or
cwtl
mov
jp
dec
sub
push
mov
sbb
jns
scas
or
int
add
loopne
dec
xadd
mov
push
gs
loope
stc
sbb
lahf
add
xchg
mov
mov
sbb
pushf
xor
int
daa
fsubrs
sub
pop
jle
mov
es
jnp
das
leave
jb
mov
lock
sub
adc
dec
jle
cld
enter
pop
cmp
arpl
push
mov
push
arpl
in
pop
sti
pop
sarb
mov
jle
sbbl
lock
outsb
add
mov
clc
into
incl
iret
push
xchg
dec
test
int
sti
aaa
or
cwtl
xchg
mov
aas
dec
pop
fwait
and
test
fs
jae
add
or
lods
addl
adc
scas
mov
pop
rol
mov
sti
adc
std
mov
in
in
out
sbb
push
mov
xchg
adc
lods
imull
jae
sub
cs
dec
and
movsb
lret
or
icebp
push
mov
xor
cmp
cli
mov
lods
adc
dec
jle
mov
jmp
fiaddl
mov
push
cmp
xchg
lret
js
push
rcr
mov
ret
push
jae
jg
je
jmp
cmp
push
fdivs
inc
lret
and
addr16
or
mov
movsb
insb
ljmp
out
dec
js
idivl
push
insl
in
mov
out
stc
mov
test
lock
and
dec
mov
mov
fisubs
mov
pop
xchg
inc
xor
mov
ja
push
pop
mov
outsb
jno
mov
adc
mov
stos
je
ret
cwtl
mov
popa
stc
arpl
out
scas
and
pusha
lahf
loopne
in
dec
rclb
inc
and
sub
mov
mov
jo
insb
mov
int3
je
cs
das
in
or
lock
sbb
les
adc
lds
adc
adc
pop
test
mov
xchg
mov
es
inc
or
cmpsl
fiadds
divl
jecxz
shlb
pop
xchg
enter
pop
test
mov
icebp
outsl
cmp
daa
xchg
or
inc
ficoml
dec
cmc
stc
xchg
add
jecxz
mov
ffreep
lock
push
shrl
negl
jl
repz
mov
js
cltd
dec
call
out
or
jmp
fwait
dec
mov
cld
shlb
rcll
cltd
in
rorb
clc
fs
pop
inc
dec
or
jae
jno
or
xchg
push
jecxz
out
aad
imul
mov
dec
ljmp
jo
add
pushf
mov
std
sahf
adc
mov
jl
ljmp
test
push
fsts
mov
loopne
push
cmp
dec
notl
aam
and
lahf
cli
lods
sbb
pop
mov
lock
xchg
popa
shrl
ljmp
fisubrs
enter
cmp
into
imull
xlat
test
jmp
push
aad
test
out
xchg
inc
dec
nop
jnp
sub
push
roll
pop
lahf
dec
jb
inc
push
pushf
cmp
cmpsl
ljmp
shlb
mov
popf
out
sub
cmp
jae
mov
add
mov
hlt
pop
cmp
pop
jbe
cmp
mov
std
xor
mov
adc
pop
js
xor
daa
icebp
xchg
pop
int3
rorl
stc
mov
sub
test
cmp
dec
xchg
test
fistps
inc
sbb
or
fscale
sbb
and
mov
push
cltd
test
or
stc
cld
xchg
loop
fisubs
mov
sub
rolb
and
push
mov
rcl
and
fisttpl
and
dec
push
push
mov
lods
test
xor
leave
loop
and
jne
xchg
sti
push
dec
rolb
pop
cli
popf
int
lret
xor
push
xchg
and
cli
ss
dec
mov
xor
push
outsb
xor
mov
or
jle
cmpsb
cli
nop
fneni(8087
adcb
inc
popa
adc
sbb
jge
sbb
fadds
imul
cmp
adc
jae
xchg
movb
push
mov
dec
test
lea
movq
mov
add
cmpsl
int3
lcall
ss
addr16
lods
gs
xlat
fadd
fldl
popa
mov
int3
adc
xlat
lahf
dec
dec
ret
push
int3
mov
mov
inc
mov
mov
sbb
xchg
pop
pop
lret
cltd
mov
cmp
fiaddl
pop
adc
jnp
dec
popa
inc
and
cmp
mov
cmp
push
sub
cmp
pushf
int
dec
imulb
sbb
loopne
xchg
test
mov
and
jg
mov
push
icebp
jl
push
xrelease
sti
insl
xor
arpl
movsb
sub
sbb
movsb
pop
mov
push
cmp
push
ficompl
bnd
inc
adc
adc
es
mov
jne
xor
arpl
or
mov
call
xchg
push
sbb
arpl
jbe
jbe
sbb
adc
mov
mov
add
lcall
imul
popa
icebp
popf
loopne
scas
jg
jno
xor
fstl
cli
out
int3
pop
adc
movsb
cld
jnp
adc
test
negb
xchg
inc
adc
mov
xchg
sbb
or
pop
mov
adc
add
mov
jle
stc
push
push
and
jne
add
rorb
in
cmp
pop
pop
jns
lds
mov
test
enter
mov
mov
sub
xlat
cld
push
mov
xor
sbb
xchg
jo
fsubl
test
out
cli
dec
imul
xchg
lds
cmpsb
repnz
call
xor
leave
xor
xchg
jmp
jbe
mov
fdivl
mov
or
cli
sub
test
sub
pusha
jne
frstor
addr16
xor
mov
test
pushl
sub
pop
lret
sbb
sub
dec
mov
xchg
adc
leave
mov
push
lret
add
insb
loope
aad
push
decb
loopne
xlat
sahf
addr16
out
xor
and
mov
mov
and
popf
adc
ret
insl
popf
popf
mov
ja
divb
imul
jo
lcall
push
aaa
fldenv
sbb
fcomps
mov
mov
sbb
jge
imul
mov
rclb
pop
mov
push
lock
pushl
sbb
sbb
xlat
jnp
stos
mov
jge
and
sti
xchg
xor
jne
js
sbb
clc
sub
pushf
stc
jg
test
icebp
xor
in
out
ja
scas
push
xchg
xchg
test
and
idiv
pop
insb
push
sbb
das
pop
scas
mov
aad
stos
adc
dec
aam
cmc
js
jne
adc
jmp
cmp
mov
inc
lods
ljmp
fs
mov
popf
cmp
pop
mov
add
cwtl
fisubs
addr16
sbb
mov
or
std
hlt
push
jns
popl
movsb
in
xchg
mov
xchg
xchg
push
pop
out
jp
jne
xor
dec
dec
ss
cmp
fidivrl
add
inc
inc
es
adc
push
outsb
mov
pop
lcall
lea
jle
fwait
xor
insl
pop
stc
mov
lea
mov
orb
push
stc
sahf
stos
pop
aas
pop
pop
xor
mov
add
out
iret
aaa
aas
inc
jle
jne
push
inc
cmp
cmc
mov
jecxz
dec
adc
test
inc
push
mov
push
pop
mov
and
enter
lret
aaa
movsl
inc
lret
out
shlb
mov
push
mov
stos
jecxz
stos
add
xor
adc
and
or
ds
shr
dec
cmp
dec
hlt
sahf
cmp
mov
and
xchg
dec
in
testl
lcall
outsl
inc
xchg
xchg
std
mov
nop
sub
insl
mov
pop
xor
call
push
adc
test
roll
xchg
push
dec
imul
and
shl
xor
cs
cmp
popa
xchg
mov
cltd
inc
and
std
aad
and
inc
pop
test
aaa
xchg
add
pop
pusha
lock
cld
xlat
dec
fstpt
pusha
icebp
xor
push
test
js
adc
mov
mov
sub
lret
ds
add
mov
in
sub
test
sub
movsl
cmp
dec
scas
pop
imul
cmpsl
jmp
sub
loop
ds
push
ja
add
scas
popa
cmc
add
into
movsb
dec
mov
ss
jmp
mov
pop
jmp
xchg
xor
and
insl
or
add
mov
es
dec
popf
inc
sbb
std
in
xchg
or
xor
lds
mov
sub
into
lret
rclb
cmp
incb
sub
lret
clc
dec
mov
push
stos
xchg
dec
hlt
lods
sub
into
push
pop
aad
lock
ret
inc
pop
xor
mov
int
lods
mov
lret
mov
mov
mov
jp
or
push
push
mov
mov
ret
add
cmp
cmc
jg
jl
mov
fistps
mov
aad
add
cmovle
cltd
jno
and
sbb
mov
xchg
push
adc
mov
loope
es
inc
nop
lahf
xchg
out
mov
mov
test
xor
and
cld
insl
mov
ss
int3
idivl
lgs
inc
sahf
aam
add
loope
pop
in
ret
lahf
fnsaves
outsl
std
xchg
daa
inc
mov
pop
ja
sub
sbb
lahf
xor
pop
mov
popf
adc
mov
in
mov
dec
in
jge
jnp
or
jmp
enter
stos
es
sub
jecxz
push
add
orb
mov
jno
out
outsl
sti
gs
insl
or
lret
sahf
pop
insl
dec
repz
push
adc
mov
push
daa
or
mulb
mov
xchg
ficomps
leave
sahf
mov
pop
loop,pn
sbb
cs
inc
div
sbb
jns
jns
loop
ja
mov
pop
add
pusha
call
lahf
jl
cwtl
popf
outsl
repnz
mul
or
cmp
stc
rsqrtps
mov
or
inc
mov
shl
fidivrs
cmp
cmc
pop
repnz
jb
mov
xor
imul
push
mov
xchg
and
insb
popf
pop
sbb
hlt
arpl
xor
mov
nop
jb
rorl
pop
test
sarb
mov
js
xchg
inc
cwtl
enter
xchg
push
mov
fsubrl
or
push
inc
mov
pop
pop
insb
imul
data16
inc
enter
outsb
and
in
jns
xchg
aas
and
mov
jne
movups
fsts
push
stc
iret
dec
push
push
mov
jp
push
mov
xchg
cmpsl
jecxz
xor
das
out
add
dec
cwtl
adc
pop
outsl
jnp
cmp
daa
push
jmp
mov
jbe
pop
jcxz
shrl
xor
add
test
dec
rolb
fwait
pop
xchg
jnp
mov
mov
mov
inc
add
jo
clc
arpl
lahf
dec
test
stos
sahf
push
into
pusha
jl
icebp
movb
jle
and
sub
aas
jbe
mov
repz
mov
movsl
jb
dec
pop
subl
jne
test
adc
xor
pop
mov
inc
imull
xor
inc
jle
aad
xor
stos
aas
imul
pop
inc
xlat
fabs
out
jnp
sarb
pusha
adc
call
out
pusha
dec
dec
in
notb
nop
jne
repnz
inc
cltd
adc
inc
out
sbb
push
fimuls
fsubrl
lock
inc
inc
xorb
or
or
in
adcb
fnstcw
cwtl
or
add
mov
sub
or
cmc
cmp
popf
mov
lcall
scas
into
push
and
pop
loop
inc
out
adc
lock
aad
or
iret
cmp
lahf
imul
les
fstpl
aas
pop
movsb
jb
cmp
xchg
sbb
out
sub
fwait
int
fcoml
push
adc
insb
xchg
sarb
stc
dec
adc
imul
pop
pop
lods
iret
push
inc
mov
cmp
lcall
imul
push
iret
call
adc
repz
pop
mov
xor
in
test
loopne
jnp
outsb
jmp
scas
scas
xlat
xchg
xor
mov
pop
cmp
loopne
and
sub
fmull
and
mulb
inc
sub
add
push
mov
push
and
mov
cmp
sete
push
mov
popa
lods
push
scas
dec
mov
in
daa
adc
inc
adc
jg
pop
xor
loope
int3
xchg
out
les
sti
mov
stos
shlb
xor
jns
add
mov
or
cmp
mov
addb
jl
nop
sub
adc
push
and
test
xchg
xchg
les
ret
not
movl
cld
stos
test
mov
ds
lahf
push
add
sub
test
push
movsl
out
jmp
mov
push
mov
add
jmp
dec
insb
aas
test
push
xchg
lods
dec
ss
pop
ret
jmp
in
push
adc
xor
cs
inc
fmull
mov
add
mov
mov
int3
lahf
sub
dec
push
cmpsl
lret
dec
in
push
or
sbb
pop
aas
pop
shr
dec
add
ja
pop
cmp
movsl
xor
dec
xor
pop
cmp
sub
lods
add
fimuls
cmp
sbb
xor
push
push
inc
pop
sbb
jge
call
testb
or
or
mov
faddp
hlt
push
stos
lret
and
and
dec
fsubs
jl
push
sbb
icebp
ljmp
dec
sarl
push
dec
inc
xchg
and
ret
insb
dec
leave
pop
xchg
and
adc
sbb
in
pop
pop
jno
shll
lods
mov
iret
mov
icebp
test
enter
into
cmp
movb
ds
dec
mov
sahf
cmp
in
jmp
cmp
mov
outsl
sub
pop
idivb
aaa
shll
mov
cld
lcall
mov
pop
fisubrs
subl
xchg
dec
and
cwtl
js
scas
inc
sub
xorl
mov
ljmp
rcll
fisttps
fiadds
mov
sbb
xchg
jl
cmp
sub
add
push
pop
lret
repz
jg
mov
inc
insb
or
lret
out
sub
xlat
inc
jae
and
sbb
xchg
mov
cmp
icebp
dec
sbb
or
lock
push
test
mov
sahf
aaa
or
xchg
out
sub
push
jmp
ljmp
xor
insl
or
and
sub
ss
insl
repnz
mov
lods
idivb
insl
ss
dec
push
pop
push
sub
push
sbb
cmpsb
int
fldl
popf
insl
ss
dec
push
pop
push
sub
push
sbb
cmpsb
int
fldl
popf
insb
ss
dec
push
pop
push
sub
push
sbb
cmpsb
int
fldl
or
orb
mov
cmc
test
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsb
jl
insb
adc
add
imul
je
sub
mov
in
xchg
fsubl
aam
les
pop
add
je
fs
sbb
je
cld
movsb
in
lock
hlt
shl
lods
aam
les
pop
sbb
insl
cmp
sub
sbb
or
cld
scas
iret
clc
scas
lock
fucomi
test
incl
and
jl
cwtl
sub
mov
cltd
pop
adc
sbb
das
test
leave
mov
fwait
test
jge
pop
adc
mov
cmp
popa
pop
ss
dec
cmp
pop
mov
pop
popa
les
mov
xor
cmp
hlt
je
sbb
jno
mov
add
adc
mov
xchg
xchg
sub
cmp
or
shll
movsl
inc
jbe
sub
add
andl
in
pop
pushf
cmp
aam
and
pop
dec
mov
cmp
outsl
dec
dec
in
pop
mov
xor
hlt
pushl
les
adc
adc
jle
push
sbb
or
cld
mov
int3
in
mov
fucom
inc
js
sub
adc
inc
push
pop
sub
test
cwtl
incl
ret
and
jno
push
dec
add
pusha
cmp
push
rorl
xchg
lods
movsb
lret
pop
cmp
and
cs
or
fs
sbb
or
cld
movsb
in
xchg
faddl
aam
les
pop
add
je
fs
sbb
or
cld
movsb
in
xchg
faddl
aam
les
mov
mov
dec
ret
jmp
sbb
lcall
test
fldenv
imul
push
lret
lahf
scas
lods
adc
ficoms
cld
adc
xchg
or
ja
or
pop
add
xor
jns
daa
push
or
pop
imul
jle
sub
inc
aad
xchg
fnstcw
jne
cmp
dec
add
stc
test
cmpsl
cmp
cs
cmpb
mov
mov
sub
sahf
adc
cmpsb
add
pop
outsb
insb
fimull
jnp
bnd
inc
cwtl
push
movsb
adc
shlb
mov
movsb
stos
js
pop
sti
cmp
lcall
sub
xor
mov
vmwrite
ja
dec
iret
das
outsl
dec
xchg
pop
cli
sub
pop
pop
push
in
inc
sub
lahf
and
dec
ja
cld
bound
push
xor
movsl
adc
xchg
xchg
mov
std
mov
or
shll
mov
je
dec
jmp
jne
sbb
loopne
xor
xor
ret
sbb
cmp
adc
or
repnz
cltd
out
test
cli
sar
sbb
push
lock
sbb
mov
xchg
in
inc
xchg
jne
xor
dec
movsb
repnz
cmp
sub
xchg
dec
lahf
push
push
out
sbb
add
fs
insb
insb
add
into
inc
ja
or
inc
cmp
je
idivb
movsl
or
cmp
push
in
pop
sub
add
lret
add
sbb
push
add
rorl
dec
jle
nop
fwait
lds
repz
push
jmp
insl
adc
dec
enter
and
cltd
pusha
fsubl
mov
mov
mov
cmp
xchg
add
mov
xchg
jl
call
and
dec
lds
cmc
icebp
clc
jo
adc
frstor
jbe
xchg
mov
sub
xchg
out
inc
push
inc
out
or
idiv
mov
cwtl
inc
rcrb
adc
xchg
push
xor
stc
mov
mul
icebp
or
stos
mov
push
sub
insl
pause
and
sti
adc
cmc
pop
pop
dec
rcrl
pop
cli
ljmp
leave
mov
inc
xchg
mov
fcmove
fdivrs
loope
inc
cmc
inc
aam
pop
rclb
fdivl
gs
test
dec
push
js
cwtl
push
jmp
cs
in
sarl
mov
adc
sub
lea
hlt
inc
std
fwait
lea
add
xchg
repz
pop
daa
fnsave
sahf
call
push
loop
mov
pop
push
arpl
ret
push
cmpsl
ret
outsb
jl
and
das
aaa
hlt
pop
sbb
ret
inc
pop
sub
pop
push
scas
les
les
jl
mov
fimuls
sahf
sti
decl
dec
in
pop
cld
or
xor
or
inc
mov
cmp
cmp
pop
scas
call
cli
shll
std
imul
ret
sbb
in
push
cmp
int3
sub
mov
hlt
xchg
int
insl
scas
adc
sub
insl
mov
push
sbb
or
dec
jbe
outsb
and
sbb
out
popa
in
mov
movsl
mov
ds
out
sarb
dec
jae
jg
fidivrs
mov
subb
fisttpl
mov
sbb
in
and
fldenv
fidivs
fwait
cmp
jnp
xchg
jecxz
mov
mov
cmp
dec
jecxz
cmp
xchg
lcall
add
push
adc
movsl
nop
adc
popf
jge
add
mov
cld
fistps
xchg
ja
in
call
mov
mov
dec
mov
fsubrs
bound
sbb
addr16
adc
pop
xor
fstpl
mov
mov
and
out
inc
dec
mov
mov
pop
int
sub
jecxz
repnz
testl
in
sub
xor
int3
jns
xor
add
loopne
out
outsl
cmp
push
cmp
cmpsl
int3
loopne
loopne
xor
and
cli
inc
mov
or
cmp
jbe
cli
daa
psubusb
sahf
popf
mov
cwtl
loopne
aam
das
daa
bound
das
xchg
call
sub
xlat
pop
jmp
push
repnz
scas
or
xor
xor
les
ljmp
into
aaa
std
fs
and
and
lods
jge
call
ss
lret
xchg
sahf
mov
mov
pop
test
jnp
inc
pop
jb
addr16
cmp
push
fadd
das
lea
cmp
lds
lea
inc
xchg
test
out
shlb
ja
adc
or
dec
pop
sbb
outsb
or
sbb
sbb
sbb
pop
mov
push
xor
mov
inc
movsb
mov
dec
dec
out
jg
bts
mov
inc
sub
fs
arpl
add
rcrb
inc
jl
scas
push
jne
mov
push
in
push
ja
mov
sbb
jmp
repnz
add
inc
insl
pop
popa
push
cmp
in
mov
fcmovb
adc
je
in
cmpb
lea
testb
js
mov
into
idivb
rcrb
scas
iret
jg
mov
andb
xor
stos
xchg
push
adc
xchg
out
push
push
jmp
inc
rol
pop
push
fisttpll
shrb
aad
sbb
ret
jg
bound
mov
push
mov
sbb
jp
xchg
popa
outsb
aas
inc
jp
lea
and
mov
or
lahf
fwait
inc
loope
gs
cmp
lret
jns
nop
mov
push
xchg
stos
push
das
int
pop
fwait
jecxz
adc
lret
adc
xchg
jne
jb
in
inc
inc
push
push
adc
outsb
inc
xlat
rep
adc
aaa
and
push
xchg
cltd
lods
out
rorb
call
push
push
aad
stc
pop
mov
int3
les
mov
and
pop
scas
adc
mov
das
or
pop
mov
shlb
cmpxchg
dec
shrl
inc
add
or
jg
adc
push
dec
jmp
push
mul
jp
xor
dec
xor
cmc
jo
jbe
sub
adc
push
inc
add
and
shlb
xchg
adc
out
aaa
gs
mov
mov
pop
mov
push
ret
in
std
or
xchg
cmp
mov
je
fidivs
push
aaa
pop
add
pop
insl
xchg
jg
push
push
hlt
aam
jne
imul
jnp
ja
mov
add
add
imul
cmp
test
dec
mov
lock
cld
in
mov
loopne
stc
cmpsb
inc
out
jp
aaa
cmp
push
sub
mov
frstor
xchg
sub
test
popa
dec
cli
outsb
jg
pop
popa
add
push
daa
das
testl
icebp
sub
push
and
or
push
enter
adc
lock
sub
out
cmp
imul
cmp
and
inc
repnz
enter
aam
stc
scas
test
pop
add
scas
rol
int3
sbb
jnp
incb
xchg
mov
sahf
inc
lcall
xor
inc
push
cmp
dec
inc
or
ljmp
mov
mov
push
add
mov
out
xchg
scas
lahf
lret
xchg
add
lds
fs
push
lret
sbb
testb
jns
mov
mov
fs
imul
pop
mov
sahf
and
ret
mov
movq
sarb
stos
cli
cld
popf
cli
mov
mov
sbbb
mov
sbb
out
outsl
in
sbb
pop
mov
scas
ljmp
xor
pop
test
push
mov
cmpb
mov
xchg
sbb
repz
cmp
cmp
sub
cmp
add
addr16
pop
lret
lods
xor
inc
sub
pusha
pop
fildl
push
shl
adc
clc
or
mov
int
dec
fcmovb
test
pop
pop
lds
inc
mov
out
mov
sub
jo
or
xor
gs
sub
dec
sub
gs
sarl
lret
sbb
cli
or
push
mov
pop
int3
cmp
fists
cli
or
outsl
mov
hlt
orb
stos
jnp
js
cld
cmpsl
and
mov
sub
cs
lock
mov
lods
in
scas
mov
xchg
sbb
out
clc
hlt
aam
fsubs
fstpl
daa
sbb
mov
es
cwtl
add
cltd
int
sub
mov
repz
sarb
test
push
imul
ljmp
sar
js
out
test
dec
dec
inc
ja
jb
add
inc
ror
add
int3
push
mov
and
ds
xor
jg
es
aad
arpl
in
mov
or
inc
lcall
cmpsb
or
repnz
lcall
cmpsb
scas
iret
cli
imul
and
xor
lods
int
insb
mov
push
mov
ficomps
mov
xchg
or
xor
lock
lcall
outsl
push
push
push
adcb
fisubl
mov
jl
mov
in
and
outsb
cmpsl
xchg
adc
push
xchg
repz
sahf
shr
cwtl
adc
mov
push
sbb
add
je
les
sarb
xchg
push
inc
adc
mov
adc
jo
dec
push
lea
rclb
adc
mov
loop
dec
out
leave
and
xchg
dec
in
mov
popa
pop
fmulp
push
inc
mov
clc
cld
ret
gs
or
in
mov
pop
mov
pop
fstpl
pop
add
xor
mov
mov
out
push
push
aaa
jg
mov
mov
test
cld
push
xor
sub
cltd
sub
inc
push
dec
mov
xchg
mov
dec
mov
in
sbb
dec
adc
add
push
dec
push
jg
pop
in
jb
or
sti
lret
sbb
dec
insl
jecxz
push
icebp
imul
out
stc
jmp
jae
shrb
outsb
mov
pop
sub
mov
movsl
xchg
fadds
xor
mov
mov
and
jmp
out
pop
jmp
mov
cmp
mov
mov
and
gs
scas
lea
scas
je
add
ret
mov
cmp
ss
outsl
mov
stos
insl
sub
mov
xchg
push
xor
mov
int3
rolb
cmpsl
or
mov
mov
leave
add
cmc
cwtl
jne
jmp
ja
jno
andl
test
int
insb
filds
call
push
sub
sbb
pop
sbb
int3
fsubrp
in
orb
int
scas
icebp
hlt
xchg
subb
notl
mov
stos
lret
or
in
mov
push
fisubl
insb
or
cld
cmp
into
pop
das
push
cmpl
add
sarl
add
cmp
fwait
sub
sbb
mov
movsl
aaa
aad
inc
push
lds
out
movsb
xlat
sti
in
add
mov
repz
pushf
sub
mov
xor
inc
pop
leave
cld
xchg
sahf
mov
or
testl
shll
repz
xchg
ja
or
hlt
repnz
movsl
std
lcall
lea
scas
cli
stc
cs
or
adc
jnp
push
cli
leave
inc
and
dec
ds
mov
icebp
sahf
adc
stc
inc
cld
fsts
test
jno
or
pop
daa
xchg
lds
push
and
and
adc
jno
pop
push
add
mov
dec
and
pop
pop
fldl
mov
lds
in
sbb
dec
sbb
sbb
lret
xchg
jmp
adc
add
loopne
cli
jecxz
push
mov
lds
ljmp
inc
ja
or
xchg
loopne
sbb
shll
cmpsb
clc
add
jecxz
in
popa
sub
add
sub
pop
pop
or
call
lds
pop
xchg
or
fisubs
cltd
test
adc
sbb
mov
out
hlt
add
dec
subb
les
sub
enter
xchg
les
dec
mov
int
or
int3
pop
adc
inc
pop
rol
jne
jo
clc
data16
cmpsl
or
lock
xchg
gs
sbb
add
shlb
arpl
out
adc
mov
dec
add
adc
int
and
mov
sbb
jp
inc
out
pop
das
jmp
es
jmp
mov
bound
pop
gs
sbb
loopne
jno
cmp
inc
ja
loop
adc
insb
cmp
stos
insl
cmc
and
mov
sub
lret
rclb
aaa
jmp
lret
push
je
cmp
scas
xchg
loopne
aam
insl
mov
mov
cli
icebp
js
stos
push
cwtl
add
fisubrl
lea
jp
inc
insb
movsl
pop
cmp
bound
fbld
data16
sbb
pop
cmpsl
arpl
rcr
push
in
mov
es
stos
sbb
jbe
xor
jne
sbb
jmp
mov
push
enter
dec
jno
es
out
int
xchg
push
ss
shlb
int
mov
jl
out
jg
xchg
jbe
adc
and
loop
mov
mov
xor
push
inc
loop
dec
mov
xlat
pop
and
jne
adc
ljmp
jne
mov
or
push
or
jb
data16
sub
inc
jo
jnp
jbe
jmp
push
add
sahf
and
int
sbb
int3
adc
call
in
and
mov
lahf
pop
xor
pop
les
mov
sbb
jmp
lods
push
dec
jmp
in
push
test
aaa
mov
call
pop
fadds
movb
cmp
int
pop
mov
lret
cmp
jbe
sti
xchg
cmpsb
adc
sbb
je
lahf
daa
add
clc
pop
aam
enter
movsb
inc
in
inc
or
mov
std
xor
pop
sub
repnz
jle
inc
rcll
aaa
dec
lods
ret
pop
adc
xlat
dec
sbb
push
and
cmp
lock
scas
daa
test
dec
xchg
ret
mov
jg
cmc
mov
je
lods
pop
xchg
orb
sub
dec
xorb
movsb
xor
pop
jb
and
leave
or
gs
xchg
xchg
xor
aam
pop
movsl
sbb
xchg
push
sbb
shll
xchg
dec
and
call
sub
mov
cmp
jecxz
ret
sub
jb
dec
icebp
pop
lcall
test
pushf
jno
adc
jns
sbb
mov
test
dec
pushf
pop
push
cmp
adc
cmp
imul
jp
int
test
lahf
lea
loopne
and
rclb
pop
cmc
jge
pop
fisttps
lcall
sbb
sahf
aam
push
fldl2t
adc
pusha
lret
xchg
outsl
movsb
pop
rcrl
cwtl
xchg
mov
imul
push
pop
cmp
ljmp
sbb
mov
not
xchg
mov
scas
sub
or
imul
push
bound
mov
jecxz
lods
in
fs
cwtl
push
jo
inc
sub
adc
fbld
dec
pop
jbe
sub
xor
push
cwtl
pop
movsb
xchg
fstp
jb
add
sarb
cmp
lock
repnz
jmp
push
xlat
aaa
in
ret
and
clc
push
push
popa
movsb
mov
sti
dec
cmp
notl
cmp
pop
xchg
sbb
mov
lret
es
lds
divl
ljmp
js
jnp
lods
xchg
pushf
sti
iret
pop
jmp
sbb
inc
hlt
jge
dec
dec
scas
hlt
pop
mov
cwtl
jle
int
jbe
andl
mov
loop
mov
dec
cmpsl
lahf
dec
pop
dec
ret
daa
pop
out
adc
push
xchg
mulb
mov
aam
xor
inc
xor
jae
nop
xchg
into
aam
aaa
adc
push
mov
push
jae
dec
dec
mov
aaa
loop
pop
pop
sub
xor
jne
lret
push
mov
sahf
jns
adc
into
mov
adc
jp
dec
push
xchg
mov
dec
ret
push
mov
mov
aas
mov
cmp
ret
or
mov
addr16
pop
xor
xlat
pusha
movsl
scas
cli
rcrb
out
jmp
clc
push
mov
daa
mov
cmp
sub
outsl
mov
dec
adc
mov
push
cld
pushf
nop
sub
outsl
inc
and
idivl
and
lods
mov
mov
movsb
jle
adc
out
notl
adc
ret
ret
clc
decb
adc
push
ret
repnz
iret
test
shlb
mov
out
inc
mov
cmp
hlt
es
sub
add
aam
dec
nop
push
mov
sub
jge
add
jp
addr16
arpl
arpl
sbb
add
inc
arpl
pop
jo
movsb
sub
aam
in
mov
mov
std
std
fs
hlt
sbb
push
loop
sahf
cli
cltd
stos
jmp
jbe
outsb
pushl
pusha
movsl
mov
ljmp
push
mov
push
test
adc
inc
xchg
mov
inc
xor
mov
sub
xor
cmpsl
out
sbb
out
dec
jge
cmp
push
cld
dec
xchg
fistps
push
lock
shl
addr16
es
cmp
xchg
sbb
inc
popf
pop
imull
flds
pop
mov
sub
insl
mov
int
mov
pop
jb
or
enter
sub
scas
ds
and
and
sbb
sub
dec
mov
jg
pop
jecxz
xchg
sarb
cmp
sahf
lret
icebp
mov
ds
mov
sbb
cmp
pop
push
pop
bswap
inc
inc
sbb
stos
pop
arpl
cli
iret
push
pushl
repnz
inc
jo
mov
aas
push
adc
rorb
add
mov
xchg
dec
jl
dec
jl
int3
lock
lods
cltd
outsb
dec
pop
mov
pop
dec
jmp
out
jns
fwait
mov
and
xchg
inc
hlt
xchg
push
sub
out
sarb
ret
adc
cs
mov
xor
jb
sbb
subb
cli
mov
mov
cmp
ret
stc
clc
aas
test
incb
test
xchg
icebp
popf
fwait
xor
add
push
aad
clc
sub
repnz
nop
inc
xlat
in
cmpsb
repnz
adc
out
shll
imul
fsqrt
stc
jge
enter
test
and
sub
jo
jbe
lock
fsubr
xchg
popf
in
xchg
push
imul
ss
mov
mov
add
std
decl
test
mov
outsb
outsb
jae
add
ds
dec
cmp
add
cmp
xchg
popa
mov
fcoms
sub
cltd
inc
jg
inc
pop
cli
insb
xchg
inc
stos
lea
imul
scas
pusha
int3
pop
xor
les
pop
imul
push
sbb
in
bound
ss
sbb
clc
sub
dec
into
pusha
int3
pop
and
adc
cltd
pop
hlt
xlat
jb
bnd
mov
pop
xchg
cli
mov
je
fiaddl
aas
int
inc
lret
loop
push
test
repz
cmp
xchg
cmp
mov
lods
enter
mov
data16
cli
incb
arpl
nop
jle
lahf
mov
inc
xor
scas
push
es
xchg
inc
xor
and
add
jb
jl
or
mov
jmp
rcll
ljmp
pop
rcrb
cmp
jns
pop
mov
lea
xorl
pop
jae
fcmovu
cli
out
mov
adc
stos
xor
das
add
mov
insb
fimuls
dec
idivb
test
sbb
mov
addl
adc
mov
mov
test
or
fdivr
js
repz
jge
sbb
popf
pop
call
imul
iret
cmp
jge
scas
sbb
into
adc
gs
mov
enter
mov
mov
or
pushw
jl
roll
add
icebp
test
push
jo
scas
adc
jl
pop
sub
imul
push
pop
pop
scas
jle
out
es
mov
mov
iret
cmpsl
enter
add
lahf
les
mov
cmp
inc
cmp
repz
xchg
inc
pop
fdivr
imul
fstps
or
add
xchg
pop
dec
xchg
jo
jl
push
repnz
aad
sub
xchg
fsubl
int3
mov
ret
repz
push
cmpps
dec
repnz
jg
mov
xlat
addr16
in
sbb
movsb
out
push
dec
cmp
mov
adc
mov
fmuls
mov
inc
int
int
dec
pop
sub
test
cmp
cld
mov
fsub
outsb
or
rcll
adc
data16
xlat
in
or
cmp
adc
movsl
in
adc
shlb
mov
adc
push
jge
push
mov
cmp
pop
dec
pop
addr16
and
sarl
mov
adc
mov
stos
in
in
test
lods
dec
mov
es
iret
add
cmpsl
push
jp
inc
mov
and
mov
pop
mov
xor
nop
push
mov
sub
xor
repz
pop
lea
fidivrl
pop
xchg
add
je
fs
sbb
or
cld
movsb
in
xchg
faddl
aam
les
pop
add
je
fs
sbb
or
cld
movsb
in
xchg
faddl
aam
les
pop
add
je
fs
sbb
or
cld
movsb
in
nop
faddl
aam
cmc
mov
jl
insb
and
je
fs
sbb
or
cld
pop
inc
faddl
sub
jae
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
pop
pop
in
dec
or
adc
cmp
leave
sbb
test
xlat
cltd
imul
pop
pop
sub
ja
push
sbb
jmp
xchg
flds
mov
cltd
imul
pop
pop
sub
jg
dec
sbb
mov
test
mov
imull
dec
jb
pusha
loopne
mov
add
ljmp
cld
insb
fsubrs
popf
mov
adc
pop
cmp
dec
jl
ss
es
xchg
mov
aas
cmp
sub
mov
fs
sbb
mov
cmpsl
leave
std
sbb
push
les
xlat
cltd
subb
fsubs
call
sub
mov
sbb
fs
jl
aaa
push
stc
bound
sub
test
mov
adc
dec
scas
pop
dec
outsl
movsb
ds
cmc
inc
neg
test
push
mov
rorb
test
pop
mov
push
xor
int3
aad
shll
pop
pop
sub
or
pop
jmp
mov
sahf
test
int
sub
or
bound
jne
push
insl
cmp
and
fcomps
test
mov
stos
or
sbb
sub
xor
sub
dec
jne
ret
test
lret
repnz
in
in
mov
aaa
jns
es
inc
gs
cmp
push
sbb
mov
cmpsl
leave
xchg
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
jbe
xlat
cld
cmp
loop
out
pop
sahf
cs
loopne
sub
lcall
dec
incl
ljmp
fistps
or
lea
jb
rorl
pop
inc
aam
adc
insb
out
leave
jbe
xchg
nop
lds
call
and
jge
test
dec
cmc
incl
jge
aad
mov
dec
int
shrb
push
sbb
mov
pushf
sbb
lods
pop
adc
stc
jge
shll
cmp
mov
push
int3
xchg
aas
aaa
ja
pushl
addb
push
test
mov
mov
xchg
push
hlt
pop
icebp
mov
les
dec
xor
jae
cs
or
pop
and
pop
gs
jne
rolb
inc
cmp
xlat
push
xor
dec
aad
leave
mov
jno
in
data16
pop
popa
cmp
push
movsl
mov
test
jno
sub
pop
xchg
jae
inc
lds
mov
add
mov
fists
add
sub
inc
sbb
pop
mulb
sbb
lret
hlt
sub
jp
loopne
jp
lcall
push
sub
dec
push
loope
es
cmpsl
push
mov
push
push
divl
add
sub
pop
jae
lods
push
mov
mov
cli
incl
cmp
inc
add
popf
in
xor
in
xchg
sti
sub
xlat
outsl
xchg
in
insl
xchg
pop
outsl
xlat
jo
movsb
sbb
imul
add
lds
mov
jmp
jo
jl
adc
imul
jbe
pop
and
imul
sbb
mov
sarl
fsubs
cs
mov
pop
and
cmp
adc
sbb
adc
int
clc
loopne
pop
push
mov
mov
ret
adc
inc
ds
inc
inc
scas
sbb
xchg
fcom
jbe
movsl
pop
mov
imul
and
outsb
push
jns
dec
pop
add
icebp
jae
fmul
mov
lods
iret
mov
lods
jge
das
jmp
sbb
sbb
loopne
jp
lahf
jb
lret
adc
incl
iret
frstor
push
mov
xor
pop
or
add
cmp
push
dec
repz
and
mov
fdivrs
xchg
and
rcrl
fnstcw
dec
ja
data16
cld
mov
ss
imul
fnstsw
pop
loop
outsb
aas
adc
xor
std
rcrl
sbb
in
outsl
pushf
push
jmp
clc
ja
cmpsb
shll
push
ret
xorb
mov
sub
lea
pop
cmp
int
pop
out
int3
and
inc
adc
rcll
in
pusha
jg
jo,pt
jmp
mov
mov
dec
cs
mov
lods
es
mov
dec
mulb
add
es
xchg
jb
push
dec
pop
dec
hlt
cmp
mov
ficomps
add
call
push
mov
sti
ficomps
sbb
mov
xor
pop
mov
pop
sbb
shrd
and
xchg
pop
lcall
cld
mov
mov
stos
testb
fs
pop
outsb
loopne
and
adc
int
popf
push
aaa
sbb
dec
loopne
mov
test
cmpb
push
jbe
idiv
or
faddl
fisubrl
fistpll
divb
invd
movsl
cs
mov
add
cmpsl
and
xor
dec
jp
data16
ret
in
insb
cmp
dec
icebp
fistps
mov
mov
dec
pop
pop
dec
xor
stos
pop
std
sub
out
cli
sti
sbb
data16
cmc
mov
ret
adc
addr16
dec
xchg
pop
mov
dec
or
and
ss
jo
dec
fsubrl
aam
adc
jp
xlat
add
mov
mov
jmp
cmp
cmp
test
or
jg
in
cmp
pop
mov
inc
adc
ja
dec
jns
outsb
mov
xchg
cmpsl
adc
nop
inc
push
shlb
jne
out
test
jnp
xorl
push
cmpsb
clc
in
ljmp
mov
cmp
push
fwait
sbbl
push
je
pushf
in
cmp
or
cwtl
mov
mov
loope
lea
mov
jb
mov
xor
adc
shrb
fldt
xor
ja
push
pop
jecxz
pop
mov
inc
pop
add
dec
negb
out
inc
nop
cld
mov
push
icebp
jno
add
outsb
dec
mov
dec
cmp
xchg
sbb
xlat
mov
sub
gs
xor
mov
negb
mov
std
les
and
subb
rolb
sbb
stos
xlat
or
cmpsl
xchg
dec
nop
pop
lret
daa
loopne
sbb
jmp
lea
pop
dec
pop
adc
sbb
movsb
out
pop
push
shl
subl
inc
mov
test
fcoms
fwait
push
adc
rolw
mov
inc
int3
ljmp
scas
xor
arpl
xchg
and
aad
fldl
outsl
fildl
test
xchg
lods
inc
jecxz
jbe
dec
out
xor
sarl
inc
pop
xchg
imul
sar
sub
pop
xchg
inc
sub
scas
lock
inc
es
lahf
or
jns
xchg
fwait
push
push
jg
aaa
xchg
push
mov
xchg
jae
mov
mov
insl
fwait
sarl
sbb
add
ss
cmp
mov
filds
fcmove
into
mov
in
and
cmpsl
shl
xchg
sbb
mov
les
jmp
jbe
mov
inc
lret
and
xor
cwtl
jb
in
or
movsb
xor
xchg
xchg
and
fsubrs
inc
movsb
push
inc
add
push
insb
fldcw
add
out
cld
jae
mov
adc
movsb
inc
stos
mov
rcpps
loope
lods
les
pop
push
push
dec
rcl
scas
cs
or
mov
mov
out
add
add
pop
add
repz
test
cmp
shll
sbb
dec
call
mov
roll
ds
iret
jg
outsl
incb
inc
insl
negb
xchg
aaa
push
cld
sub
rorb
adc
pop
std
cltd
push
inc
sub
cs
add
sahf
dec
inc
pop
mov
insb
orl
fsubrp
int
cmp
sub
scas
fwait
or
jmp
fsts
cmc
jae
cmpsl
in
add
and
jle
cwtl
jno
fbld
out
jnp
mov
test
jmp
in
arpl
mov
test
mov
addr16
aaa
xchg
jmp
dec
bound
push
popf
mov
rcr
aaa
or
jp
jno
jne
push
loop
sub
add
jge
push
fsubrl
out
and
insb
js
cli
mov
in
push
mov
jne
sbb
out
inc
mov
adc
sbb
mov
adc
loope
xchg
scas
sbb
lods
fcomps
ja
lods
xchg
enter
je
enter
lods
icebp
stos
inc
stc
xchg
rcrl
lret
xor
mov
ds
mov
or
test
jmp
add
push
lea
pop
add
test
hlt
orb
insb
out
test
sbb
loopne
push
pop
idiv
cmp
dec
popf
push
jns
fdiv
jns
xchg
iret
sbb
xorl
lea
mov
sub
call
xchg
iret
arpl
and
add
mov
or
fwait
jl
repnz
das
pop
mov
or
mov
loopne
push
leave
sbb
pop
mov
out
mov
mov
les
mov
xchg
bound
add
pop
lret
jmp
mov
sti
and
mov
add
inc
dec
fmull
das
addb
push
jmp
sbb
popf
and
push
rorb
lods
sub
mov
inc
jmp
pop
inc
push
cmp
in
xchg
inc
test
pop
into
stos
adc
jle
sub
out
loop
or
adcl
jno
or
dec
xchg
push
mov
dec
mov
roll
xchg
imul
shlb
popf
dec
xchg
inc
mulb
sbb
call
repnz
xor
dec
cmp
dec
popf
fwait
pushw
int
mov
gs
data16
cmp
mov
jae
gs
xorb
jno
cli
mov
in
cs
push
jo
in
ja
pushf
pop
add
lea
test
jmp
or
sahf
push
pop
sbb
repnz
push
ret
sbb
push
pushf
jmp
push
or
fchs
shlb
jecxz
push
push
ficoml
push
or
mov
sarl
and
ds
mov
and
push
mov
fdivl
add
add
or
in
pop
cmp
aas
jne
stos
lods
mov
mov
je
add
icebp
iret
pop
or
add
dec
push
loop
ljmp
adc
pop
jno
insb
sub
cmp
incl
iret
mov
leave
cld
dec
dec
xlat
cld
cmpsl
out
repnz
xor
int
xchg
clc
push
lock
sbb
xor
aas
push
jbe
out
and
sbb
mov
push
jle
call
or
dec
jl
scas
clc
mov
mov
in
sub
or
cmp
dec
and
jmp
gs
into
xor
outsb
popa
push
sbbb
rcr
cwtl
mov
xchg
jno
xchg
and
js
loope
sbb
sbb
cmpsb
std
icebp
inc
dec
mov
lds
xchg
ss
add
inc
lret
sub
je
push
fiadds
mov
add
test
out
pop
sub
mov
int3
insl
rclb
xor
cld
dec
out
stc
pop
sbb
ss
sbb
inc
sbb
jge
cmp
je
xchg
inc
sbb
repz
fcoml
mov
push
cltd
or
lods
adc
test
and
stc
push
cs
stos
xor
inc
mov
mov
inc
inc
movsb
push
fdivrs
jmp
aas
test
js
lcall
lods
out
xchg
pop
or
adc
fstpt
sahf
lret
addr16
pop
push
xor
aad
shrl
xor
pop
lods
insl
adc
mov
add
lds
lret
lret
nop
testb
test
pop
sub
jp
xchg
in
rcll
add
nop
jb
jbe
sub
add
ffree
movsl
lret
in
test
jno
shll
stc
inc
ret
ja
movsl
mov
sub
add
xchg
in
xchg
mov
data16
dec
xor
xor
loopne
pop
mov
fistpll
xor
cwtl
cmpsb
mov
ret
pop
stc
jge
mov
pop
subl
call
and
hlt
bound
adc
or
cmp
cs
xlat
dec
pushf
cmp
or
adc
fbld
ret
dec
and
mov
sahf
adcl
out
push
dec
cmc
fwait
mov
sti
bound
jg
mov
pop
ss
cmpsb
leave
sub
xchg
sub
mov
fcmove
xchg
mov
cld
jecxz
jo
mull
inc
adc
fnstcw
pusha
xchg
mov
push
lea
push
cltd
outsb
scas
jge
sub
mov
out
dec
sub
pusha
pusha
pop
in
ljmp
sub
and
movsl
inc
xor
movb
sahf
jne
push
test
jae
dec
cmp
pusha
and
movsl
mov
lods
pop
cltd
cmp
out
cmp
scas
lds
or
out
xor
fsts
test
lock
xchg
int
inc
jns
sbb
lret
outsb
loop
dec
rorb
sub
push
insb
mov
add
pushf
lcall
bound
cmp
ror
jb
mov
dec
out
sbb
mov
dec
sub
push
pop
cmp
mov
dec
xor
cmpsb
pushf
mov
hlt
sahf
or
fnstenv
inc
sbb
mov
cmp
in
ljmp
insb
repnz
call
xor
xchg
push
loop
push
ficompl
and
xor
pusha
es
pop
pop
mulb
popa
aam
stos
pop
outsl
daa
dec
jge
fnstenv
popf
add
call
aam
repnz
xchg
rclb
test
cmc
pop
or
and
sub
scas
jns
ja
sub
bound
xorl
or
push
icebp
ds
xor
adc
sbb
mov
test
lods
mov
fstp
je
jl
pop
movsl
pop
mov
mov
aad
ficompl
jo
adc
dec
adc
xchg
adc
daa
adc
ss
out
jae
stc
stc
xor
and
cli
fwait
inc
push
ret
mov
cwtl
stc
sbb
cmp
dec
adc
inc
xchg
add
fstpl
aaa
lods
cmp
dec
jle
dec
xor
jecxz
jmp
push
sub
sbb
xchg
es
lock
jmp
mov
vfrczsd
out
lods
addr16
push
in
pop
mov
inc
add
sbb
cmc
js
adc
jno
and
push
idiv
dec
frstor
mov
outsl
xor
stos
or
arpl
mov
sub
mov
lret
clc
mov
cmc
movsl
fbstp
push
mov
push
jo
gs
and
adc
je
cmp
adc
ret
lock
and
push
movsb
jns
push
push
xlat
add
pop
cmp
loope
jecxz
stos
pop
out
or
jne
inc
cmp
test
xlat
pop
nop
sti
fimull
inc
mov
cmp
gs
sarb
imul
xor
rcl
decl
icebp
pusha
jp
mov
xor
xor
es
lods
leave
icebp
mov
roll
mov
pop
fstps
mov
lds
cmp
mov
dec
push
sub
mov
push
call
xchg
adc
adc
in
push
mov
stos
jge
sub
popf
mov
pop
int
inc
out
inc
scas
aad
lds
test
dec
not
je
sub
lret
jmp
cltd
insb
jnp
lods
mov
loopne
fistpl
jae
push
push
std
in
pop
jg
shll
push
mov
ret
sbb
pop
xchg
stc
add
xchg
sbbb
cs
rorl
icebp
sub
push
xchg
xor
sbb
in
or
lods
ret
popl
jg
into
xor
mov
inc
pushf
mov
outsl
into
xchg
pop
inc
jg
je
and
mov
mov
incb
bound
mov
sub
pusha
in
pop
imul
icebp
jbe
push
cmpsl
xor
push
lds
push
sbb
loop
pop
lds
mov
lcall
pushf
or
test
pop
mov
and
inc
jecxz
movsl
or
mov
push
mov
into
sbb
cmp
inc
push
mov
jo
inc
xchg
or
pop
cmp
pop
and
inc
sub
and
bnd
lret
or
popa
pop
fcoms
pusha
or
dec
push
mov
sub
int
xorb
and
and
shll
sub
cmpsb
js
mov
xor
jae
adc
xor
xchg
ret
arpl
stos
cmp
enter
stos
dec
gs
cmp
lcall
sarb
fst
mov
out
dec
rcrb
fnstsw
lds
retw
ficoms
xchg
cmp
lcall
and
fidivl
shlb
cwtl
popa
cli
int
pop
outsb
dec
sar
aaa
jecxz
insl
nop
push
in
fwait
sub
loope
jmp
ss
sub
pop
nop
mov
adcb
fimuls
aaa
aam
movsb
and
inc
lcall
or
adc
fstpt
sbb
fmull
dec
arpl
sahf
lea
in
add
jbe
and
sub
mov
repz
ja
nop
adc
mov
mov
sbb
fs
and
icebp
inc
insl
push
xchg
aam
es
cli
call
fsubs
das
cmp
mov
xlat
pop
nop
sbb
cmp
xchg
ss
jmp
fmull
fwait
cmp
add
xchg
std
jns
rclb
std
mov
rorb
sbb
sbb
xor
dec
sbb
cs
push
in
lods
push
xor
and
lds
sub
push
push
popa
mov
adc
outsb
lret
fbstp
cmp
ja
addr16
dec
int3
lret
ret
pusha
outsl
mov
outsl
pop
frstor
popa
sbb
sub
xlat
adc
inc
sbb
cltd
xchg
and
add
mov
push
inc
or
mov
xor
pop
or
jge
sub
xchg
repnz
fucom
fcoms
dec
mov
dec
inc
xlat
adc
sbb
hlt
inc
cli
pop
jns
and
xor
mov
fidivrs
xchg
aam
rorl
xor
pop
and
addr16
aam
into
mov
rcrb
xor
std
icebp
or
or
sbb
jbe
loope
sarl
add
dec
div
pop
sbb
lea
cmp
andl
int3
dec
push
lret
repz
cld
arpl
inc
push
mov
xchg
in
dec
jl
xorb
dec
mov
inc
adc
aad
stc
pop
lahf
inc
xchg
iret
and
xchg
jnp
iret
push
stos
adc
mov
cmp
ds
sbb
adc
adc
faddl
mov
movsb
or
xor
lcall
pop
in
pop
ds
push
daa
cmp
loope
cs
pop
ficomps
lds
js
notb
xor
call
sbb
or
popl
jge
pop
cmpsl
aas
cmc
pop
pop
pushf
jle
sbb
fistpll
dec
in
out
pop
push
adc
bnd
js
outsb
mov
stos
xor
jb
in
add
jmp
push
stc
mul
jl
cmp
jmp
cmp
lcall
xorb
lock
addl
jo
je
stc
ds
and
inc
mov
lret
mov
out
scas
cltd
cld
push
and
and
leave
dec
dec
xlat
push
loop
cmpsl
xchg
bound
mov
imul
mov
imul
nop
leave
repz
dec
shlb
in
inc
shl
ja
add
xlat
cmp
cmp
mov
addl
or
jnp
jmp
xlat
or
or
push
add
dec
xchg
lcall
sub
mov
cld
jnp
pop
hlt
movsb
sub
dec
lcall
mov
cmp
push
sub
push
shll
loope
cmpsb
aas
test
test
push
lea
and
cmp
pop
enter
movsb
jae
sub
push
lret
sub
repz
cmpsl
mov
das
jle
cmp
pop
jns
scas
sbb
xchg
xlat
hlt
test
pop
daa
jp
test
loopne
les
ds
mov
fistl
dec
and
rcrb
push
rcrb
cmp
cmp
xor
lods
pop
sub
aam
loop
rol
test
shll
push
mov
daa
mov
inc
cmpsl
jbe
adc
pop
mov
or
xchg
or
add
movsb
mov
cmp
add
in
fucom
dec
andb
sub
rclb
addr16
mov
dec
jl
adc
push
inc
nop
ss
sub
mov
pop
push
mov
in
jbe
ficomps
into
sub
push
xchg
add
insl
cmpsl
mov
mov
rorl
adc
mov
sub
int
rcrl
xor
jns
mov
push
inc
inc
push
adc
fs
je
fnsave
in
xchg
dec
aaa
subl
ds
test
hlt
push
es
rcrb
xchg
pop
les
jge
out
lret
jae
xchg
es
lcall
lds
scas
inc
mov
fsts
fisttpl
cli
mov
imul
push
stc
mov
cs
out
rolb
mov
mov
inc
test
lock
outsb
mov
fisttpl
jge
jl
out
mov
or
mov
fsubrl
inc
test
popf
loope
pop
scas
lods
aam
add
mov
lds
sbb
pop
outsl
fisubrl
sarl
mov
dec
mov
lock
mov
lds
lahf
push
movsb
sub
cli
cmp
cld
or
cltd
xchg
mov
arpl
and
mov
dec
inc
ja
sub
fcompl
add
jae
cmp
lea
push
mov
movsl
adc
push
lret
leave
pusha
cli
das
test
mov
push
cs
jne
imul
hlt
push
jecxz
pop
and
stos
cs
stos
icebp
jg
or
dec
mov
outsb
jmp
jp
push
xchg
add
daa
dec
pop
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
pop
pop
sub
or
inc
jmp
xchg
flds
mov
cltd
imul
pop
pop
test
push
cltd
inc
jmp
xchg
flds
mov
cltd
ret
imul
pop
pop
sub
or
xchg
mov
or
fnstcw
cwtl
stc
test
mov
loope
icebp
sarl
mov
ret
mov
movsl
inc
mov
push
popa
jno
add
int3
xor
xor
shl
loope
shl
roll
mov
inc
jno
popa
add
inc
add
adc
and
xor
rcll
loope
icebp
mov
adcl
inc
add
adc
bound
inc
add
gs
shll
or
addb
push
sahf
outsb
adc
stos
or
out
mov
and
sahf
sub
outsb
les
mov
adc
and
jle
lcall
out
mov
pop
sub
fiaddl
add
push
mov
mov
icebp
shl
rcl
roll
mov
push
hlt
xchg
andl
inc
lods
xor
cmp
daa
cs
sub
imul
and
xor
jns
movsb
inc
into
mov
push
rcrl
imul
pop
loope
cmpb
cld
sub
adc
xor
jge
shl
icebp
roll
mov
inc
jno
leave
popa
push
jno
add
xor
mov
xchg
mov
adc
int3
out
aam
sub
jecxz
push
hlt
adc
dec
dec
gs
push
xchg
mov
cmc
repz
adc
sbb
adc
dec
jle
and
jb,pn
cmp
cmpb
mov
inc
jno
popa
popa
push
jno
add
adc
and
xor
shl
loope
shl
roll
mov
inc
jno
popa
popa
push
jno
add
adc
and
xor
shl
mov
lods
mov
test
cmp
push
or
loop
sub
add
inc
lcall
xor
dec
sub
mov
icebp
pop
stos
int3
enter
xchg
test
movsb
mov
mov
jg
test
lcall
ficompl
mov
out
xchg
mov
xor
mov
imul
bound
gs
mov
fcoms
mov
jnp
jbe
das
add
xlat
adc
dec
mov
movsb
xlat
loopne
sti
lret
fdivp
sub
repz
rol
outsb
nop
or
xchg
jns
sbbl
and
jge
adc
pop
inc
add
sbb
cmp
mov
and
mov
mov
out
sbb
add
mov
stos
mov
ret
xor
lods
push
adcb
and
pop
cmc
push
sub
push
je
test
xor
mov
movsl
sbb
int
mov
incl
repnz
lcall
dec
lock
xchg
or
test
iret
inc
pushf
js
push
ret
mov
mov
cmpsl
clc
push
xchg
xchg
fistl
push
hlt
or
and
dec
inc
aad
mov
nop
lds
adc
leave
adc
xchg
pop
sbb
js
sahf
or
mov
rorb
shr
in
aam
pusha
cmp
mov
adc
add
push
inc
mov
mov
adc
cmp
pushf
push
xor
in
scas
lods
ja
loope
mov
cmp
mov
add
fsubrp
ret
mov
cmpl
xor
ja
mov
into
negl
pushf
mov
xchg
jb
ja
les
sti
leave
rclb
pop
push
sub
add
add
int3
jl
aaa
scas
lcall
fnsave
inc
inc
out
lock
mov
mov
push
inc
add
outsb
sbb
inc
icebp
test
xor
insl
sti
or
mov
mov
add
test
pop
insb
jno
fs
add
leave
icebp
push
or
cmp
dec
jl
rcrb
sbb
mov
outsl
pop
inc
sahf
fsts
pop
sub
jns
mov
aaa
cmpsl
cmp
adc
lcall
popf
xor
cld
iret
pop
mov
add
jb
pop
cmpsb
repnz
sbb
mov
loope
pop
insl
mov
lea
in
mov
pop
and
cmpl
cld
mov
jne
jb
hlt
not
pop
std
and
jo
jae
adc
inc
xlat
or
in
clc
leave
and
mov
mov
out
lret
fwait
or
mov
cmp
mov
push
arpl
daa
sbb
into
xor
jp
xor
jge
jb
xchg
add
fsts
push
inc
push
mov
nop
repnz
bound
pop
imul
mov
mov
and
lds
lds
mov
mov
sbb
arpl
aad
pop
jg
xchg
daa
pop
push
aas
dec
das
or
popa
fisubl
roll
mov
pop
jge
xor
fwait
jns
movsb
mov
sub
out
pop
faddl
outsb
sub
cmpsl
shll
xlat
int3
ljmp
or
mov
loopne
imul
ljmp
lods
lock
out
mov
cmp
test
hlt
ret
sub
pop
mov
sub
push
dec
in
dec
jo
int3
mov
push
lds
popa
cmp
sub
and
fidivrl
cmc
cmc
in
sub
aaa
mov
or
pop
mov
je
psrlq
dec
les
pop
movsl
movsl
sbb
aad
push
dec
clc
das
mov
and
jae
xchg
idivb
push
mov
out
jo
sbb
mov
push
testb
mov
into
jnp
loop
hlt
popf
repnz
sbb
cmp
xchg
and
cmp
sbb
sbb
aam
push
ficompl
fsubrs
ljmp
mov
adc
push
mov
and
and
cmpsb
pop
pop
mov
sub
mov
mov
or
mov
sti
cltd
jno
jne
loop
adc
add
call
in
ljmp
dec
sti
rcrb
icebp
xlat
insl
test
mov
subl
sbb
pushf
jge
fdivl
cwtl
shll
stos
cmp
fidivrl
xor
nop
push
inc
in
sti
push
fiaddl
xchg
dec
enter
cmp
in
daa
iret
push
fiadds
push
daa
or
les
add
lcall
stos
xchg
pop
adc
and
lret
jmp
sub
inc
sbbb
add
adc
push
mov
shlb
sbb
shll
push
dec
loope
dec
mov
in
jp
leave
jle
leave
dec
and
jno
shrl
hlt
jecxz
mov
fdivs
lds
mov
mov
bound
mov
jo
test
test
add
inc
cmp
negl
das
and
jns
xor
push
testb
cld
nop
and
stos
les
mov
fadds
mov
sub
cmpsb
jnp
inc
gs
xchg
adc
adc
aas
rorb
and
sbb
adc
pop
dec
push
cwtl
mov
lock
cmp
push
jecxz
repz
and
jg
xor
xor
dec
dec
pusha
mov
lahf
fnstcw
push
outsl
outsl
xor
sub
sbb
jne
adc
std
shlb
dec
popf
pop
inc
cmp
call
int
cmp
enter
inc
xor
js
inc
mov
adc
adc
in
mov
sub
mov
pop
lcall
mov
sub
lahf
mov
pop
mov
mov
test
popa
cmp
fisttpll
rorb
lds
jb
xchg
data16
leave
daa
adc
fstps
pusha
pop
lcall
sti
mov
xchg
add
inc
or
mov
sub
xchg
outsl
js
cmp
and
mov
push
movsl
sti
cmc
lock
dec
test
fs
lret
rcr
aas
sahf
repz
ret
push
idiv
dec
mov
cli
in
cmpl
cmpsb
and
cmpsb
roll
stos
jge
cli
imul
push
out
add
or
sub
loopne
and
shl
shll
cli
rclb
loopne
lods
cmpsb
pop
push
setg
ds
inc
sbb
jb
call
pop
push
mov
pop
iret
or
mov
mov
loope
in
jmp
sti
mov
out
mov
fstl
sub
outsl
dec
inc
pusha
jne
pop
rorb
stos
mov
movsb
call
cmp
jecxz
push
pop
sti
and
pop
xchg
mov
jp
int3
and
je,pn
or
mov
daa
enter
ret
lock
xchg
push
mov
mov
lea
adc
nop
xchg
gs
mov
loop
ficomps
adc
rcrb
mov
xlat
bound
jb
pop
ret
or
das
jno
mov
push
mov
shrl
in
or
andl
ljmp
adc
inc
inc
push
fsubrl
jl
stc
sub
adc
cmp
jne
and
into
mov
es
vcvttsd2si
or
sub
es
mov
inc
mov
push
shrl
aas
xchg
xlat
lret
and
sbb
dec
addl
cmc
push
lods
aam
data16
mov
cmp
repz
and
add
popa
loope,pn
aam
mov
movsl
aad
mov
dec
fimull
inc
cli
sbb
sub
shrb
pushf
jne
in
or
xchg
add
movsb
stos
movsb
iret
add
sub
in
mov
aaa
aaa
lock
mov
sbb
pusha
inc
das
mov
test
dec
xchg
xor
xchg
mov
mov
jle
inc
push
daa
pop
xchg
push
rcr
adc
dec
sti
shrl
ret
addr16
fistpl
pushf
imul
repnz
rolb
aas
or
add
dec
inc
fwait
mov
sub
nop
imul
inc
out
pop
add
mov
push
sbb
pop
cmpsl
inc
or
gs
dec
push
push
push
pusha
inc
rorl
jae
cmc
lcall
ja
mulb
xor
inc
jns
sti
in
cld
jg
cwtl
pop
hlt
xor
xchg
lods
cmp
je
lock
rolb
inc
mov
pop
test
push
xor
mov
hlt
push
or
dec
bound
xor
dec
mov
in
xchg
mov
fadds
jbe
testl
xchg
dec
sub
ljmp
jp
cmc
mov
push
shrl
mov
sbb
mov
addb
pop
imulb
loope
mov
fldcw
pop
xchg
shrb
dec
adc
in
cltd
jg
xor
sbb
andb
xchg
adc
inc
push
pop
sbb
mov
arpl
imul
and
jae
jb
pop
and
loop
lock
dec
xor
mov
std
inc
sub
out
and
mov
xchg
pushf
or
jnp
aas
out
data16
sub
das
test
jp
btc
scas
push
mov
jo
lds
jecxz
inc
popa
test
dec
add
mov
popa
ret
out
pop
and
pop
and
xchg
or
lods
test
aam
jge
shlb
jl
cmp
xchg
in
nop
mov
in
subb
iret
stc
aad
ret
mov
movsb
inc
bound
pusha
and
lds
lods
xchg
lock
inc
adc
rol
and
push
pop
movsb
push
ds
fsubl
fidivrl
ret
mov
into
in
in
dec
lods
jno
pop
sub
enter
inc
jae
pop
sbb
fimuls
push
outsb
xchg
inc
lock
insl
push
xor
dec
cld
ljmp
imul
in
mov
loop
lcall
fcomps
lahf
sbb
mov
xor
mov
or
jb
sbb
jp
push
sub
into
aas
push
sbb
or
out
cwtl
sbb
push
and
scas
jmp
in
testl
fldcw
add
mov
cmp
sub
xor
idivl
sub
loop
xchg
push
dec
mov
sub
sbbl
mov
mov
mov
mov
adc
js
xor
jmp
cmpsb
ret
push
notl
pop
rcrl
fcomps
adc
cmp
pop
mov
int
jp
xchg
bound
cmp
sbb
pop
fs
mov
xor
es
scas
aas
dec
mov
or
inc
mov
ss
mov
imul
mov
or
ret
in
pop
movsb
sbb
and
add
pop
sbb
xchg
repz
jmp
mov
mov
aaa
mov
pusha
test
push
mov
or
iret
sub
sti
jmp
sub
dec
mov
or
push
leave
mov
ljmp
jle
jl,pn
or
jo
cltd
popa
int3
shl
xchg
out
pop
inc
rclb
xchg
fstps
pop
xchg
shl
addr16
outsl
in
mov
mov
dec
pop
sbb
pop
out
data16
call
int3
movl
mov
jp
out
push
mov
faddl
ds
std
insl
pop
add
into
xchg
push
fdivs
bound
popa
xlat
aas
js
sbb
or
mov
jecxz
rcrb
mov
fistps
or
or
or
in
sarl
pushf
push
lods
pop
rorl
jns
aaa
add
cs
sbbb
push
or
loopne
int3
push
jp
pop
ljmp
leave
movsl
test
pop
jae
sbb
jg
sbb
jecxz
aas
cli
and
das
out
mov
lret
insb
outsl
cmp
mov
ds
scas
int3
sbb
mov
cmpsb
xchg
fdiv
mov
test
jno
outsl
lea
inc
mov
hlt
and
and
pop
mov
cmp
test
pop
fwait
outsl
push
dec
xchg
xor
cmp
cmp
mov
mov
aad
sub
xchg
jnp,pn
push
jne
mov
pop
fldenv
jmp
adc
jae
xchg
in
sti
and
out
mov
dec
adc
sub
adc
pop
inc
enter
mov
rcr
dec
ljmp
jl
mov
in
jne
outsl
lcall
int
sbbl
daa
imul
or
loopne,pn
adc
pop
sub
incl
scas
mov
add
movsl
lret
fs
fs
ficoml
nop
and
neg
ljmp
scas
sbb
mov
jns
lahf
mov
mov
and
mov
aad
sub
mov
btc
add
cmpsl
fiaddl
fadd
dec
test
xchg
xorb
sub
xlat
push
push
add
pop
aad
rolb
and
xor
roll
and
xor
movsb
dec
cltd
add
sbbl
sub
pop
mov
xor
adc
fistpll
push
fcmovnu
mov
es
enter
aaa
and
mov
rep
mov
pop
test
mov
xchg
add
dec
shlb
ret
mov
repnz
xchg
lods
mov
es
mov
add
icebp
push
sbb
negb
jae
rorb
or
rcll
fwait
stc
notb
leave
xchg
mov
jae
mov
xlat
adc
mov
stc
ss
or
or
fstps
std
jl
add
jp
js
mov
adc
cltd
dec
roll
popa
and
adc
insl
lods
adc
jbe
jge
add
adcb
jge
jns
mov
int3
jb
push
and
daa
xor
aas
add
or
mov
pop
andb
adc
dec
out
jae
test
test
mov
pop
mov
and
gs
push
fmul
dec
fstpt
add
negl
and
or
jmp
xor
out
iret
lds
andl
push
stos
or
xor
jnp
decb
mov
dec
fs
and
popa
mov
fimull
cltd
and
fwait
mov
xchg
pop
pop
andl
jnp
fisttpll
clc
push
lock
mov
into
cld
mov
imul
xchg
xchg
cmp
xchg
dec
pop
out
mov
imul
pop
aaa
mov
cmpsl
cmp
add
loope
xchg
mov
push
lock
push
pop
inc
imul
popa
ficoml
icebp
or
inc
ror
imul
dec
inc
dec
sbb
push
xor
sahf
scas
and
fwait
sub
mov
test
fidivrs
je
push
xchg
int
dec
jge
mov
dec
mov
jo
mov
mov
adc
roll
mov
sub
popf
jae
sbb
add
dec
sub
dec
out
mov
dec
sbb
or
jne
dec
add
lods
xlat
xor
inc
jnp
push
adc
cmp
push
push
pop
es
lds
add
sarb
das
in
shl
fwait
ja
fcmovnbe
fcoms
push
cmp
cltd
cwtl
fmull
and
sti
adcl
pop
sahf
pop
xor
insb
jbe
movsl
pop
stos
push
add
jl
sub
or
mov
jo
push
inc
movsl
inc
push
leave
sub
jge
sbb
out
call
paddd
es
les
pop
shl
sbb
es
jmp
sbb
scas
add
sbb
scas
pop
inc
call
jg
negl
and
in
ja
icebp
or
sbb
sahf
add
pop
jmp
pop
sub
mov
mov
stos
lret
jecxz
fidivrl
popa
inc
add
and
fs
pop
jecxz
sub
out
inc
xchg
test
js
cmp
xor
mov
sti
push
cwtl
popf
jo
sub
push
jnp
in
sub
ja
fs
fldt
inc
push
das
xchg
inc
in
add
outsb
push
in
sbbb
dec
shrl
dec
outsl
fldl2e
fs
jmp
stc
jmp
lcall
sub
add
ss
test
mov
lods
popa
sub
jnp
lock
dec
mov
xchg
mov
ret
bound
leave
insl
loope
push
mov
mov
mulb
jg
scas
mov
xchg
cmp
xadd
pop
adc
cmp
int
xor
pushl
sub
sti
pop
cmp
les
mov
mov
scas
push
std
ror
dec
call
xor
cmp
pop
jb
mov
jno
cmpsl
jp
push
das
les
cmp
push
ja
repnz
mov
pop
int
push
stc
mov
cmp
pushf
imul
jo
xchg
xor
jge
clc
xchg
sub
xchg
int3
push
pop
jae
test
test
xchg
ret
jmp
or
out
mov
mov
cli
dec
pusha
inc
sbb
outsl
jne
icebp
dec
mov
call
mov
clc
jo
loopne
xchg
xor
mov
xchg
ljmp
mov
push
push
std
loopne
nop
inc
cmp
dec
xor
pop
jp
pushf
jg
push
adc
data16
loope
dec
xchg
dec
loope
das
jp
shl
adc
shlb
enter
or
sub
iret
mov
pop
inc
inc
loopne
xchg
mov
gs
idiv
cs
or
les
aas
mov
insb
or
cwtl
inc
int
iret
mov
mov
pop
adc
pop
cmpsb
mov
outsb
or
fwait
xchg
in
xchg
xlat
xlat
movsb
mov
adc
loope
fwait
and
cs
lret
rcll
xlat
fs
lret
sub
xor
scas
adc
mov
jns
test
push
aad
sbb
out
lcall
push
lcall
xchg
dec
orl
mov
inc
jecxz,pn
scas
aaa
jb
test
xchg
test
mov
cmp
jg
xchg
fisttpl
fidivrs
mov
dec
xor
xor
adc
ficoms
leave
xchg
call
mov
mov
cmp
scas
xor
and
int
xor
les
sbb
and
add
and
icebp
push
xchg
dec
jg
xlat
fwait
pop
jns
popa
hlt
mov
push
adc
mov
fwait
mov
cmp
lret
add
mov
mov
aaa
sbbl
in
sub
adc
or
outsl
or
je
xorb
mov
push
test
orb
ljmp
add
pop
dec
ss
cmp
xchg
push
inc
or
sub
je
in
int
mov
lock
push
mov
mov
fsubrs
push
mov
adc
mov
aaa
and
leave
xchg
and
push
rolb
ljmp
repnz
out
lods
mov
mov
push
test
pop
das
fidivrs
or
mov
iret
push
addr16
push
in
fsub
push
mov
sbb
in
cmp
mov
sub
aad
or
rep
xchg
insb
xchg
sahf
mov
enter
pop
mov
xor
pop
pop
aaa
push
outsb
stos
cs
cmpsb
mov
xchg
les
cmc
inc
ficoms
sub
push
and
aas
fists
addl
push
inc
and
sbb
outsl
cmp
popf
sbb
mov
sbb
dec
loopne
scas
ret
pop
push
mov
movb
or
inc
push
jns
out
shrb
out
xchg
cld
mov
mov
test
push
insl
movsl
imul
add
in
xchg
dec
jne
inc
fldz
and
aam
jnp
fildl
push
js
cmp
jecxz
inc
and
orb
mov
add
es
ret
push
add
lcall
sub
jle
xchg
inc
fbld
negl
inc
cmp
stc
sbb
es
sub
xor
test
jg
cmp
mov
pop
push
cmpl
mov
mov
adc
movsl
inc
out
inc
mov
aad
mov
sbb
push
mov
pop
push
std
leave
mov
xchg
and
aad
push
bound
cltd
cmp
cli
cltd
popf
and
xchg
inc
mov
ret
cli
push
cmp
shrb
aaa
bound
jl
fs
mov
push
inc
sbb
mov
test
aam
scas
mov
testb
mov
test
jge
jbe
gs
jno
outsl
sbb
filds
cmp
ja
or
or
aad
fcmovbe
icebp
roll
mov
inc
jno
popa
popa
push
jno
add
adc
and
xor
shl
loope
shl
roll
mov
inc
jno
popa
popa
push
jno
add
adc
and
xor
shl
out
loope
icebp
lds
xchg
mov
inc
jo
gs
push
jno
add
xor
rclb
addl
mov
lret
push
jno
jbe
cltd
pop
fisubrs
jns
inc
dec
lods
jle
outsb
or
push
cltd
add
xchg
cmp
out
or
mov
mov
outsb
lea
std
push
popa
mov
lahf
sbb
mov
sbb
mov
popl
shrl
xor
aad
loop
dec
xchg
inc
mov
sub
add
sub
dec
xor
pop
fcomps
lret
in
add
xchg
mov
orl
mov
xor
mov
mov
mov
jge
jne
sbb
mov
mov
js
xlat
scas
dec
aad
jnp
inc
mov
out
orb
xchg
pop
cmpb
fwait
lea
test
es
ret
jp
adc
popa
jl
xchg
mov
test
inc
pop
into
repz
flds
int
outsb
dec
cmp
fldt
mov
mov
adc
nop
mov
mov
sbb
in
cmp
sbb
mov
mov
outsb
xchg
std
jbe
ds
mov
mov
fiadds
push
test
aaa
out
cmp
or
push
mov
dec
mov
test
jnp
push
in
adc
sbb
sbb
sub
clc
sub
or
push
ja
imul
mov
mov
js
push
sub
out
es
and
pop
int
out
dec
cltd
push
in
int
cmp
out
or
mov
mov
outsb
lea
std
push
in
int
cmp
out
or
mov
mov
scas
mov
push
orl
jnp
cmpsl
add
push
addr16
or
pop
jmp
xor
sbb
hlt
push
ret
aas
nop
cmp
push
pop
arpl
pop
sub
in
pop
mov
sub
adcb
cmc
adc
pop
and
xor
ss
adc
mov
loope
ss
sahf
cmp
shrb
push
or
mov
rclb
cmp
lods
pop
cli
jns
jbe
or
jge
rcr
insb
xor
adc
xchg
out
jo
out
cmp
mov
in
jmp
lods
inc
mov
mov
and
jno
arpl
roll
jns
xchg
movsb
inc
xchg
hlt
addr16
dec
mov
dec
out
sysenter
js
fs
mov
fldcw
push
add
bound
fcmovnu
test
pop
in
and
jge
ds
es
nop
outsb
mov
or
ret
dec
push
aam
jbe
leave
cmp
int3
sti
enter
daa
jns
mov
jbe
jle
jecxz
mov
and
cmp
aaa
adc
in
mov
and
out
or
jb
mov
mov
xchg
mov
mov
fsub
pop
mov
imul
jmp
jp
pop
hlt
dec
pop
mov
sahf
js
add
xchg
arpl
lock
add
sbb
dec
inc
insl
loop
mov
mov
mov
fldenv
fadds
pop
rcl
sbb
lea
xor
data16
movsl
outsb
rcl
fcomps
loope
sbb
les
mov
in
push
add
cltd
push
out
scas
rclb
fsubp
push
cmp
cmpsl
push
cmp
inc
mov
ret
bound
insb
int3
xlat
arpl
addr16
int3
and
or
movsl
addr16
daa
xor
outsl
jle
push
adc
pop
jecxz
stos
das
cmp
sbb
mov
cmpsb
pop
dec
mull
adcb
popa
sbb
leave
ficoms
aas
adc
mov
or
xchg
nop
jo
push
dec
mov
pop
xchg
outsl
sub
push
xchg
mov
ficompl
je
rep
push
push
xchg
inc
push
dec
push
xlat
ret
outsb
push
out
push
adc
sbb
mov
enter
je
icebp
or
cmpsb
xor
shlb
ljmp
xor
mov
pop
mov
leave
mov
add
fmulp
popa
mov
add
xor
fildll
inc
loope
ss
int
scas
pushf
adc
and
add
xchg
rol
pop
sbb
mov
dec
mov
mov
adc
int
rolb
mov
adc
loope
xchg
insl
scas
mov
push
gs
mov
inc
mov
std
jle
iret
or
xor
movsl
adc
imulb
or
inc
xchg
jb
int3
sub
push
arpl
shll
faddl
mov
in
lods
and
int3
jge
push
insl
push
dec
adc
addb
ss
loop
add
push
addr16
call
pop
das
inc
push
jns
dec
fdivs
rcll
fcomps
jecxz
ja
cmp
jno
data16
lret
scas
lcall
jno
jns
in
fidivrl
out
xorl
mov
shrb
shrb
and
pusha
sub
cltd
sbb
imul
movsl
cmpsl
push
add
shrb
pop
xchg
cld
imul
pop
sti
lret
fistpl
hlt
jne
bswap
out
andb
add
pop
jbe
into
add
mov
and
insl
adc
call
xor
in
push
push
mov
adc
mov
push
pushf
mov
jo
shll
cmp
and
popf
jl
xchg
push
xor
adc
jge
cmp
sub
adc
scas
mov
cmp
or
pop
test
scas
repnz
out
cmpl
fildll
adc
adc
mov
mov
out
adc
jecxz
movsl
jae
mov
nop
movsb
in
jae
jae
popf
mov
mov
lcall
fisubrl
xor
sub
add
sahf
jne
mov
push
stos
adc
imull
mov
xchg
add
xchg
inc
mov
mov
shrb
adc
xor
sub
repz
mov
cmp
in
mov
push
arpl
clc
inc
popa
aaa
or
out
mov
imul
xchg
arpl
mov
andl
jl
lods
xor
out
xchg
idivb
cmp
push
or
lods
and
enter
dec
fwait
or
ljmp
xlat
and
dec
in
add
test
es
sub
mov
loop
sti
pop
lea
loope
push
sarl
aaa
in
or
orl
cmp
xchg
mov
mov
sbb
subb
add
in
mov
imul
or
push
pop
cli
ss
dec
imul
add
lods
gs
jecxz
mov
jl
int
mov
mov
xor
cmpsl
and
push
insb
add
jb
inc
loopne
inc
adc
cmp
push
pop
es
lods
fcomp
mov
leave
sub
out
test
repnz
pop
adc
cwtl
bnd
aas
mov
das
jecxz
scas
inc
jno
mov
pop
out
sbb
mov
std
cmpb
lock
repz
pop
xor
into
push
iret
dec
xchg
sbb
pusha
les
inc
mov
sbbb
push
or
mov
mov
pop
lds
sbb
fnsave
and
mov
cmp
jmp
jnp
mov
xchg
push
pop
icebp
xor
push
dec
sub
xchg
imul
dec
mov
addr16
and
and
das
loope
jle
push
test
ret
shrl
push
rcrl
pop
xor
pusha
orb
fisttpl
mov
sar
test
sub
push
jl
pop
je
or
dec
xchg
or
sbb
jo
push
jge
outsb
jnp
sbb
addr16
pop
jbe
inc
std
in
jo
test
dec
add
fcmovnu
hlt
pop
and
cltd
add
jb
ljmp
mov
lods
aad
push
orl
lcall
jp
or
jnp
jne
dec
push
andl
add
rcll
mov
push
mov
mov
dec
daa
mov
mov
adc
roll
sbb
cmc
outsb
imul
stos
push
test
mov
cmp
cmpsl
inc
ds
and
insb
add
sbb
sub
lea
loopne
xchg
insl
fadd
or
outsl
test
cmpsb
jp
mov
mov
shrl
jmp
mov
ljmp
cmpsl
and
insb
or
loope
jg
out
ljmp
inc
clc
cwtl
cmp
lods
mov
sbb
cld
or
dec
aas
adc
and
mov
inc
les
add
xchg
cmp
fldl
dec
jg
hlt
movb
xchg
out
adc
cltd
mov
mov
imul
popa
nop
sbb
aas
in
fwait
addb
mov
cmp
mov
dec
push
push
add
int3
jmp
and
xchg
out
adcb
sub
jns
divb
int3
xchg
ret
sub
addr16
adcl
mov
jb
jb
mov
mov
adc
xchg
mov
push
and
stc
and
cmp
inc
in
out
dec
ss
pop
rorl
dec
cwtl
test
inc
xchg
in
test
jl
movsl
push
lret
mov
xor
push
push
jne
pop
negb
daa
jmp
mov
or
cmp
icebp
adc
mov
push
xchg
mov
ret
insl
push
push
aam
mov
dec
rclb
call
roll
xchg
pop
or
mov
push
sbb
int3
and
push
mov
loopne
lret
inc
and
rcll
mov
aad
leave
orl
aam
push
call
inc
pop
mov
pop
or
cwtl
scas
inc
scas
dec
push
cmp
fisubs
and
ss
sbb
movsl
mov
jns
fdiv
dec
dec
pop
cmp
mov
loop
out
mov
lret
sub
stc
inc
or
sub
subb
fcompl
adc
jle
dec
mov
stc
out
sub
sbb
pop
mov
fdivs
popa
lcall
enter
xchg
repz
fs
cmp
lods
fs
sahf
mov
add
jle
imul
dec
jns
das
fisubrs
xchg
jo
mull
insb
cmp
adc
daa
mov
pop
loopne
pop
sbb
inc
lods
test
fisubs
fstps
pop
push
mov
and
pop
mov
xorl
mov
icebp
push
pop
cmc
pusha
dec
cmp
outsb
push
fistpl
fldenv
fucomp
ret
or
xor
cmc
inc
es
movsl
movsb
adc
cltd
sti
push
mov
lods
cmp
add
fwait
jle
into
cmp
lret
push
pop
lret
cmp
fld
ss
pop
les
repz
std
in
and
adc
cmp
xor
xor
xchg
pusha
cltd
jle
xor
xchg
mov
cmp
dec
add
js
shl
xor
xchg
cmpsl
jmp
enter
or
ucomiss
roll
and
fs
xchg
sbb
or
xchg
bound
jp
shl
cmp
int3
xor
mov
xchg
rcll
aaa
mov
mov
cs
fisubl
jnp
cmpl
rorl
adc
lret
fucomi
iret
jle
imul
rcll
push
add
jg
mov
bound
push
push
mov
cwtl
jg
addr16
leave
xor
outsb
shlb
orl
and
push
arpl
jp
rcrb
int
xlat
mov
jle
adc
pop
fdivl
outsl
out
dec
inc
push
in
test
testl
add
inc
pop
mov
or
lods
inc
insb
cmp
inc
push
push
add
pop
jge
shlb
inc
out
pop
sahf
xchg
iret
push
pop
test
int3
mov
pop
jae
imul
or
push
sbb
sbb
sbb
out
or
pop
in
icebp
subl
mov
iret
mov
subl
data16
in
mov
jge
mov
ret
cmp
test
sub
fucomip
aaa
sub
inc
mov
rcll
inc
mov
stc
push
xchg
push
loop
scas
xchg
add
fbstp
cmp
mov
adc
loop
pop
push
mov
fldl
xchg
dec
pop
aaa
pop
sbb
in
and
out
add
outsb
fptan
cmc
int
inc
test
push
out
add
lret
outsb
and
mov
gs
xchg
imul
outsb
lcall
xchg
pop
xor
mov
pop
repnz
call
cltd
es
and
push
add
push
ret
add
sti
mov
or
adc
repnz
insb
or
and
dec
nop
push
loopne
dec
sbb
popf
mov
icebp
repz
push
sub
popa
jbe
cmpsl
cmp
push
add
or
mov
ret
jns
call
pop
clc
loopne
fimuls
and
inc
std
stc
pop
inc
xchg
pop
inc
lods
mov
cmpsb
cmp
stc
test
je
incb
lahf
push
cmc
aad
cwtl
ror
inc
adc
aas
mov
cmp
push
xchg
adc
jl
xchg
shll
xor
jle
adc
mov
into
negb
shll
inc
cmp
dec
adc
leave
insb
sbb
adc
loop
punpcklwd
ds
scas
jp
pushf
pop
push
inc
mov
fnstsw
and
mov
fcoms
dec
jp
push
jp
inc
cmpsl
lods
xor
and
mov
outsb
rcrl
dec
inc
cs
sub
lahf
mov
addr16
inc
pop
aam
fsubrp
sbb
xor
dec
jg
jl
jb
push
pusha
aad
xchg
add
and
add
lret
sub
imull
mov
dec
cwtl
mov
xor
xchg
ja
insb
push
cmpxchg
cmp
jecxz
mov
loopw
lcall
out
push
cmc
mov
inc
xchg
jecxz
cmc
mov
clc
popa
xor
pop
xchg
or
fidivrs
push
sbb
and
popf
push
int3
insl
sub
mov
test
cmp
imul
call
pop
sbb
sbb
ret
jne
stc
mov
mov
pop
jno
fwait
js
lret
adc
jmp
push
enter
jl
xchg
dec
out
jle
sbb
cli
cli
mov
inc
dec
push
es
xor
xor
cmpl
cmp
pop
scas
rolb
mov
jbe
movsb
sub
and
jo
fistpl
cmp
pop
pop
adc
jae
fnsave
fsubrl
mov
inc
lret
cmc
xchg
ljmp
pop
adc
mov
subl
dec
mov
push
ret
add
jmp
outsb
xor
cld
push
mov
xchg
push
jmp
cmp
push
and
jg
jb
add
imul
or
loopne
jle
call
and
add
push
and
push
lcall
ja
pop
pop
in
mov
jecxz
pop
pushf
push
lret
xchg
mov
mov
pop
mov
pop
pop
negl
addr16
in
cli
xor
inc
xlat
jne
imull
aaa
loope
test
negl
lret
dec
xchg
cld
fs
roll
xchg
cmc
xorl
add
test
jae
xlat
push
inc
sahf
hlt
arpl
lods
cld
and
ret
jge
push
int
std
test
jg
sahf
test
pcmpgtw
mov
mov
mov
pop
rcll
pop
jp
roll
mov
push
aaa
dec
pusha
jmp
ret
loop
mov
cmpsl
or
leave
shll
sahf
pop
out
pop
leave
call
dec
push
mov
std
ds
int3
rorb
pop
decl
mov
mov
nop
sbb
scas
push
aas
adc
rorl
rol
or
xor
dec
fs
sarb
subl
xor
sti
sub
or
loope
lods
pop
xor
pop
mov
dec
mov
mov
xchg
clc
fsubrs
mov
ja
stos
lret
pop
lret
sub
dec
mov
xor
mov
or
mov
and
xor
jle
loop
mov
test
sahf
push
pop
push
sub
cmc
cld
leave
push
inc
pop
mov
mov
imul
inc
int3
inc
xchg
xchg
pop
fldcw
push
and
lret
fsubl
lock
sbb
mov
sbb
mov
mov
push
xchg
pop
popl
das
fs
cmp
cmovp
ja
adc
dec
mov
push
fsubrl
sub
sub
sar
or
jns
and
orb
push
cltd
pushf
dec
mov
xchg
bound
pop
jp
aam
out
adc
ret
cltd
and
aaa
in
mov
jl
pop
adc
sub
test
movsl
mov
xor
mov
lahf
jnp
nopl
adc
push
push
ja
pop
movsb
jge
push
push
jl
adc
neg
call
rolb
aas
mov
push
push
and
jmp
outsb
ret
pop
push
dec
jns
into
or
adc
repnz
call
mov
jbe
shlb
imul
add
jge
mov
or
pop
leave
push
fldl
pop
aam
aad
ds
movsb
push
lock
fstpl
push
xchg
frstor
repz
icebp
push
in
sub
cmp
mov
fsub
mov
mov
int
mov
aam
out
cmpsb
cmp
addb
sub
inc
xorps
popf
jge
pop
push
rcl
mov
arpl
movsl
ljmp
movsb
in
mov
shrb
imul
mov
mov
push
aad
insb
decb
aad
out
push
mov
mov
adc
sub
clc
xchg
sub
cwtl
js
pop
sbb
add
icebp
cmp
repz
cld
push
lds
adc
fsubrs
test
lea
andb
stos
jb
cmp
pop
lea
inc
push
jns
imul
movsb
add
xor
lahf
mov
test
jnp
loope
imulb
mov
sbb
pushf
inc
push
mov
ds
lock
jo
add
sahf
jl
orb
inc
sbb
jo
aam
es
cmp
jnp
xchg
push
adc
xchg
dec
icebp
mov
les
pop
incl
add
sbb
lds
sub
ljmp
aaa
mov
xchg
and
rcrb
xchg
testl
insb
and
mov
jne
daa
sbb
mov
mov
mul
xchg
mov
adc
mov
push
xlat
test
lcall
mov
test
or
pop
adc
stos
mov
stc
push
sbb
and
scas
shl
push
movsb
dec
cltd
fnstcw
xor
fldcw
adc
aas
ret
imul
inc
test
in
add
push
shr
fwait
enter
icebp
pop
cmpsl
mov
cltd
sub
in
mov
and
pushf
enter
and
jmp
adc
insl
daa
stc
dec
sub
insl
inc
out
adc
push
mov
dec
roll
xchg
mov
cmp
mov
jb
mov
enter
inc
and
xabort
addr16
out
leave
cmpsb
hlt
lods
mov
repz
sub
stos
scas
out
jl
mov
push
inc
in
fcmovnb
lea
aas
pushf
inc
xchg
testl
adc
jne
jns,pt
jl
mov
or
imul
adcl
ret
dec
loope
sub
sarl
xlat
aad
lods
dec
cs
xor
sbb
jbe
ficoml
shll
cli
dec
cli
jo
shrl
and
jnp
lret
cmc
in
and
mov
daa
mov
xchg
and
push
nop
sbb
repz
xchg
add
aad
cmpsl
sub
dec
das
mov
int3
loopne
or
sub
fimull
sahf
jo
mov
jecxz
mov
adc
adc
leave
jne
std
lcall
rorl
popa
repz
inc
out
jl
rorb
sub
push
iret
pop
and
enter
push
or
push
and
sbb
push
add
ja
test
push
lcall
adc
aam
xchg
mov
ret
pop
test
in
cs
jmp
mov
rorl
add
rcr
xor
out
test
dec
cwtl
ja
leave
jmp
mov
adc
mull
mov
dec
imul
roll
fisubl
not
mov
in
and
mov
lea
xlat
or
xchg
xor
pop
incb
inc
cmp
pop
popf
outsb
mov
sub
mov
cli
cmp
popa
lock
and
pop
mov
xchg
xchg
mov
jl
gs
rolb
and
xchg
out
test
push
mov
fdivs
fdivrl
xor
sub
mov
int
sbb
orl
incb
mov
inc
out
jo
mov
cwtl
pushf
add
in
push
ss
mov
ret
mov
cli
out
hlt
cmp
cltd
repz
lahf
mov
xchg
sub
jae
add
pop
inc
leave
popa
aad
sub
sbb
mov
cmp
cwtl
pusha
fxch
adc
xchg
sub
dec
add
xor
mov
xchg
sbb
mov
or
adc
je
clc
mov
cmp
mov
sub
and
xchg
push
ja
cmp
mov
insb
jbe
inc
inc
push
xor
movsl
stos
in
rorb
cltd
dec
inc
scas
jl
dec
outsl
sub
daa
lods
ljmp
sbb
cmp
add
stc
idivl
js
mov
pop
cmpb
shr
arpl
dec
ret
xlat
subb
sti
or
mov
outsl
ret
jae
imul
aas
inc
mov
in
ror
ja
pusha
mov
or
repz
and
mov
std
sub
repnz
mov
test
pop
mov
fwait
jmp
inc
fidivs
pop
ja
pop
xchg
dec
arpl
add
sti
mov
lea
adc
pop
mov
ss
xchg
xchg
enter
inc
out
inc
pop
aaa
mov
or
out
lods
cmp
outsb
lea
std
push
in
int
cmp
out
or
mov
mov
outsb
lea
std
push
in
int
cmp
out
or
mov
mov
outsb
lea
fucomp
int
in
sub
sahf
jge
insl
mov
mov
dec
mov
std
push
in
ds
scas
int
ret
push
sbb
push
xchg
inc
mov
mov
or
xchg
pop
mov
mov
sbb
insb
stc
jle
pop
fstps
cmp
in
jns
imul
mov
adc
dec
fstps
cmp
or
jns
imul
xchg
cmc
push
jmp
adc
lds
rcrl
jge
in
mov
sbb
test
jge
xchg
push
insl
add
or
test
cld
xchg
dec
push
dec
inc
test
cltd
loop
cmp
insb
bound
xor
jg
fisubl
js,pn
inc
pop
sbb
jnp
ret
push
xor
xchg
dec
insb
stc
sbb
es
enter
sub
mov
jns
mov
sbb
jcxz
xchg
stos
jl
daa
pop
call
add
jl
adc
xchg
andl
in
mov
mov
dec
cltd
inc
mov
arpl
push
xchg
aam
roll
mov
sub
das
sbb
cmp
or
jns
imul
mov
add
jmp
rclb
pop
call
sub
aad
sarb
out
xchg
sbb
ret
js
arpl
sbb
pop
sbbb
int3
ss
pop
lds
pop
in
xchg
pop
xchg
lods
cmp
loopne
hlt
jge
adc
fmull
mov
sbb
insb
stc
jl
dec
fstps
cmp
in
jns
imul
mov
sbb
insb
stc
jl
dec
fstps
cmp
fadds
push
sbb
or
ret
xchg
xlat
sub
inc
sub
inc
dec
xor
and
shll
leave
xchg
mov
imul
mov
dec
js
sbb
mov
popa
test
xor
dec
loopne
pop
sbb
aas
sub
sub
lods
out
nop
dec
adc
shl
inc
or
jle
cmp
add
fcom
inc
add
mov
cwtl
outsb
inc
movsl
imul
mov
les
repnz
fidivl
jbe
and
push
xchg
or
mov
mov
sbb
rclb
cmp
pop
out
pop
adc
repz
outsb
push
pushf
pop
movsb
ficomps
and
test
repz
xchg
cmp
xor
jl
insb
out
push
ljmp
mov
push
mov
jp
xor
mov
lea
aad
sub
adc
adc
enter
adc
mov
cld
inc
fwait
pop
scas
outsb
add
mov
loope
jp
orl
lds
loop
incl
mov
push
xchg
push
or
mov
idivl
out
push
dec
movsl
ljmp
scas
notb
imul
mov
in
mov
push
mov
and
mov
jg
xchg
dec
pop
adc
pop
pop
cli
cmp
jne
xor
ss
aaa
cmp
or
test
pop
ss
outsl
jge
add
push
xor
mov
add
mov
jb
shl
xor
je
xorl
cs
aam
xchg
adc
fsubl
push
fsub
dec
pop
xor
jo
cld
lods
ret
in
iret
or
mov
dec
pop
xor
cmp
mov
or
jl
aam
xor
lret
xchg
mov
leave
mov
mov
push
or
loope
arpl
fsub
and
insl
push
inc
pop
scas
mov
dec
repnz
jo
mov
or
in
rcrb
mov
test
insb
fisubs
pop
xchg
cli
gs
mov
mov
sbb
mov
mov
xor
mov
std
sbb
mov
loopne
andb
daa
icebp
nop
cmp
jg
sbb
iret
jbe
mov
adc
movsb
mov
int3
xchg
dec
fldl
mov
sti
xor
mov
or
mov
lods
fadd
sahf
mov
inc
lods
sub
adc
lret
rclb
xchg
clc
xor
lret
movsl
cmp
inc
cmp
cmp
notb
fcompl
xor
cmp
push
mov
or
jg
sbb
cmp
out
in
inc
inc
ja
mov
aad
jecxz
rolb
mov
testb
push
fldt
ja
xchg
das
cld
cld
std
pushf
xchg
xchg
daa
inc
rorb
out
fildll
and
aaa
jno
add
dec
test
xor
aad
sti
pop
cmpsb
mov
or
insl
lret
ljmp
add
or
mov
cmc
jbe
int3
dec
push
sub
xor
stos
pop
adc
sete
sbbb
ficoml
mov
fs
into
sahf
hlt
push
mov
std
pop
pushf
je
push
out
mov
adc
mov
xor
inc
push
sub
mov
aaa
mov
cmpsb
loopne
data16
jno
and
test
imul
rorl
cmp
push
roll
ljmp
sti
popf
sbbl
xchg
jne
sbb
loop
loopne
cli
scas
sahf
test
push
sbb
cs
cmp
push
and
or
push
mov
enter
push
jo
out
push
xor
movl
movsl
cmc
cwtl
push
shlb
add
neg
ret
out
xor
mov
fldcw
lahf
ficoms
cmc
add
sbb
inc
ljmp
les
out
sti
xor
daa
rolb
js
inc
pop
jp
in
int
rcrb
testl
leave
jmp
dec
xchg
sbb
adc
pop
das
pop
shlb
pusha
sbb
cld
add
cwtl
out
pop
mov
mov
mov
cli
es
stos
mov
dec
arpl
ret
add
jo
mov
or
xor
add
ss
push
dec
rcrl
lods
or
mov
xchg
gs
cmp
mov
jns
add
sbb
mov
dec
push
fiaddl
jo
in
ds
js
cmp
sub
cwtl
jge
jo
lahf
mov
mov
jmp
fidivrs
adc
call
xlat
inc
out
scas
mov
scas
negl
or
lds
outsl
mov
fidivrl
ret
lret
mov
dec
xor
xchg
ret
mov
adc
out
cmp
pop
mov
cltd
ret
cmpsb
pop
lock
pop
lret
xor
push
push
dec
jne
notl
pop
inc
nop
loop
adc
js
cmp
nop
lahf
out
ss
aad
repz
addb
shrl
scas
xor
mov
test
ucomiss
jle
mov
push
adcl
sub
data16
lea
enter
lret
sub
fists
dec
xor
into
repnz
repnz
dec
aam
pushf
shll
ret
fs
push
pop
in
sbb
mov
pop
leave
jb
cmp
adc
rcr
xor
cmpsl
es
cs
cli
popa
pushf
push
sbb
pop
adc
or
jae
or
mov
cwtl
dec
add
mov
xchg
sub
xlat
out
sub
mov
pop
gs
leave
cmp
sbb
add
inc
int
or
push
mov
jecxz
nop
mov
les
xchg
sbb
jae
xchg
ja
push
xor
rcll
inc
dec
lock
mov
std
lcall
mov
mov
cmpsl
dec
in
pop
cwtl
dec
jae
adc
mov
xchg
loopne
js
xor
lret
ja
scas
movsb
mov
shll
sub
and
xchg
vucomiss
call
xlat
cli
shll
xchg
add
jecxz
in
lret
adc
test
sub
sub
es
nop
inc
dec
sub
test
pop
pop
sarb
js
sbb
xor
sbb
aaa
mov
pop
mov
cmp
sbb
cmpsb
jecxz
std
pop
arpl
out
inc
cmp
pushf
dec
ds
pop
fmul
xchg
pop
xor
mov
imul
scas
bound
ss
sbb
pop
ja
sar
sbb
insl
xorb
and
adc
mov
or
mov
cmpsb
jae
iret
ljmp
aaa
fimull
add
rclb
loope
mov
leave
rcrb
cltd
jle
idiv
imul
in
cs
loopne
cmp
cld
mov
mov
mov
fld1
icebp
jbe
and
rcl
mov
inc
add
js
xor
js
xor
push
pop
ret
mov
mov
jnp
sbb
std
cmp
push
or
loop
into
out
hlt
mov
jnp
div
lock
pop
out
jo
mov
jo
mov
ss
mov
in
add
sub
shl
clc
push
mov
notl
out
cmp
inc
jecxz
shll
push
aaa
sti
lret
insb
add
out
inc
ret
sub
ret
leave
adc
cmpsl
or
outsl
lods
pop
cmpsb
insb
inc
mov
stos
pop
cmp
mov
sbb
dec
sbb
mov
je
enter
add
out
lods
mov
hlt
call
mov
popf
in
add
arpl
or
bound
pop
mov
push
xor
mov
push
cmpsl
insb
stc
sti
jecxz
bound
push
aas
xor
add
pop
jo
idivb
or
sbb
jns
or
shl
xor
aaa
adc
jns
cmpsb
stos
mov
dec
iret
lret
xchg
fs
push
stc
sub
std
mov
mov
adc
pushf
and
lds
mov
fstps
sbb
pusha
cltd
js
push
mov
sbb
cld
lret
pushf
or
shrb
or
jmp
ja
pop
xchg
rolb
sarb
mov
cwtl
js
ret
rorb
and
out
hlt
scas
cmp
adc
std
stos
stc
pmuludq
inc
int
inc
pop
test
popf
push
push
lds
cwtl
in
sti
test
mov
xchg
or
or
xor
sar
mov
stos
shll
jo
ja
push
scas
cs
adc
addr16
xor
inc
jecxz
and
or
add
stos
inc
cltd
in
push
sub
popa
push
loop
push
and
stc
lds
mov
pop
sahf
mov
xlat
mov
xor
ds
lods
adc
mov
mov
mov
outsb
insl
add
pop
enter
inc
or
lods
lret
inc
adc
dec
mov
stc
or
and
mov
daa
clc
add
inc
imul
jl
lret
jge
adcb
adc
mov
mov
dec
mov
pop
mov
fisttpll
dec
testl
mov
push
xchg
repz
subb
mov
jno
and
aam
mov
mov
ja
in
lret
cld
std
pop
fwait
repnz
and
fcmovnbe
or
mov
inc
leave
in
cmpsw
ja
sti
xor
pop
jl
daa
test
mov
repnz
adc
insb
test
mov
es
push
xor
jno
scas
xchg
or
std
mov
push
mov
push
lahf
shl
add
and
cs
dec
lret
cli
dec
or
fadd
subl
data16
xchg
stos
lret
sbb
dec
cld
mov
shll
in
dec
push
xor
cmp
mov
roll
sub
xchg
adc
nop
in
xchg
jecxz
out
insb
sbb
mov
int3
add
pop
out
mov
sub
test
push
mov
dec
mov
and
sbb
mov
dec
stos
cmpl
leave
jle
push
and
mov
ss
loope
addr16
ja
mov
add
sahf
aam
imul
pop
js
out
hlt
xchg
roll
jmp
fbld
cmp
les
aad
mov
lea
es
icebp
jp
pop
push
jo
mov
cmpsb
les
aam
and
imul
pop
int3
push
push
add
shrb
inc
pop
rcll
mov
gs
pop
jmp
scas
mov
jp
les
lret
lahf
xchg
cmp
vmovhps
clc
and
shll
push
jmp
add
cld
cltd
push
stos
xchg
mov
pop
lea
or
cmp
lock
cld
xor
mov
das
jnp
or
push
stc
cmpsl
je
mov
rclb
dec
subb
jns
pop
and
fistpll
add
xchg
push
lods
jmp
sub
outsb
sbb
int
jne
push
mov
mov
dec
and
and
dec
push
xchg
insb
out
mov
mov
loopne
iret
mov
inc
jo
mov
dec
adc
pop
mov
pusha
xchg
in
sub
dec
fcoms
lods
cmc
divb
js
jmp
inc
out
test
jl
xchg
push
xchg
or
push
or
insl
fstps
mov
repz
sbb
test
repz
mov
ror
cmc
dec
cmp
lods
es
and
fisubrl
cli
lock
imul
fsubl
sbb
ret
xchg
sub
mov
push
push
mov
adc
jmp
push
pusha
push
pop
mov
xchg
repnz
shl
xor
pushf
mov
adc
icebp
xchg
inc
je
stc
mov
or
leave
xchg
xchg
daa
xchg
pop
mov
lock
addr16
cwtl
dec
adc
push
lret
popf
lods
fptan
fmul
add
inc
cmp
lds
sub
stos
pop
push
jo
imul
loopne
popa
outsl
insb
cmc
daa
icebp
aaa
push
mov
xchg
inc
decb
mov
jl
cmp
cmp
cmp
ret
mov
mov
lds
xchg
push
lock
push
jge
cmp
hlt
adc
rclb
loope
jmp
mov
cmpl
add
pop
lahf
xchg
test
mov
inc
das
xor
xchg
push
inc
stos
dec
lret
mov
insl
int
fnsave
jnp
jmp
hlt
or
jbe
xchg
or
adc
jecxz
loop
pcmpgtb
xor
int
cltd
dec
add
push
xor
mov
jno
or
ror
fsts
leave
andb
cmpsl
push
aam
add
outsb
call
lcall
jmp
push
clc
mov
arpl
dec
decl
js
pop
pop
fisubl
inc
sbb
stc
and
xchg
dec
gs
movsb
add
shl
in
or
jp
icebp
push
pop
dec
inc
cwtl
push
adc
fs
mov
mov
xorl
fldl
cld
repnz
mov
sbb
iret
jnp
data16
ret
cmp
mov
pop
cwtl
je
fsubrs
orl
aad
push
sbbl
mov
je
mov
xor
cmp
in
jmp
mov
sbb
xchg
adc
sub
mov
sub
cwtl
mov
mov
aam
xor
sti
into
dec
and
sub
push
push
lahf
dec
into
popf
or
lcall
mov
sub
mov
ret
in
addr16
in
negb
test
rorb
call
mov
pop
xor
pop
dec
je
inc
addr16
not
filds
or
mov
xchg
lods
xor
jno
xchg
lret
xor
mov
ret
mov
aas
jns
int3
aaa
fs
filds
and
mov
mov
dec
fwait
jle
xchg
rcrl
sbb
dec
mov
int
add
push
arpl
inc
jecxz
push
repnz
xor
mov
push
mov
cmp
stc
movq
cmpsl
sub
mov
or
icebp
fstps
rcl
push
and
lahf
cmp
xor
adc
cmp
int3
xor
xchg
xor
hlt
lret
ret
scas
fstps
or
in
pusha
xchg
in
imul
fs
push
jbe
loope
jl
xchg
jecxz
movsb
jbe
movsb
inc
test
and
int3
add
inc
scas
adc
lock
dec
lea
pop
mov
mov
xor
pop
cmc
mov
in
ret
aas
dec
adc
push
push
mov
sub
mov
ds
lret
sub
int3
jmp
xor
lea
testl
jb
sbb
and
fcmovnb
jle
fimull
fcomps
push
int3
jl
popa
and
pop
xchg
lcall
jns
xor
data16
add
loop
push
pop
sar
adc
sbb
mov
inc
and
insl
dec
pop
lock
out
into
repnz
daa
mov
cli
daa
adc
ljmp
add
test
je
aas
pop
sbb
ret
or
xchg
decl
xchg
jle
push
and
sbb
jge
ljmp
jmp
insb
inc
mov
mov
mov
jnp
test
xlat
xor
and
popa
mov
xchg
xchg
cmc
sub
in
xorb
ja
pop
in
hlt
mov
push
pop
pop
add
mov
fdiv
jno
ja
cli
js
call
mov
stc
add
pop
inc
sbb
or
sub
mov
adc
xchg
insb
imul
cmpsb
xchg
repnz
cmpb
cmp
push
adc
push
cwtl
lds
out
testl
lods
scas
pop
sub
jo
je
and
mov
cmp
outsl
mov
outsb
les
daa
push
and
into
jae
xorl
add
xlat
cmc
dec
dec
adc
int3
mov
jo
dec
fcomip
rorb
pop
out
sbb
mov
mov
and
jb
call
sub
stos
mov
ss
punpcklbw
mov
imul
adcb
in
jo
cmp
sti
push
pop
xor
sbb
jle
inc
xchg
jbe
or
and
or
push
dec
loop
leave
arpl
and
lret
pop
xor
dec
decl
sub
std
jb
sti
cmp
sarl
rcll
ja
dec
ja
imulb
int3
xchg
ljmp
xchg
dec
cli
ljmp
mov
mov
xor
pop
xorb
xor
sarl
or
mov
in
outsb
jbe
lds
clc
jnp
test
xor
fisubrs
rcr
pop
dec
xchg
mov
test
lock
outsb
dec
cmp
iret
push
dec
adc
cmp
popf
out
jns
lret
insb
sbb
mov
int3
fisttpl
xor
lea
dec
mov
icebp
in
scas
jp
adc
movsb
sub
xchg
fs
mov
lock
out
cmp
fisttpl
push
ljmp
shlb
in
sub
mov
and
and
and
mov
imul
cwtl
push
gs
cmpsb
fst
rcr
jnp
test
cmpsl
or
cmp
leave
adc
or
lods
mov
not
ljmp
fs
pop
pop
sti
jb
leave
or
push
je
pop
mov
xchg
fsubl
mov
lods
lahf
daa
sub
inc
inc
popf
js
das
push
decl
add
cmp
into
xchg
repz
mov
pop
sub
shll
cmp
les
test
das
mov
lret
pop
or
or
push
mov
inc
cmpsl
inc
mov
adc
ret
inc
inc
cli
mov
lea
fsts
adc
inc
scas
imul
je
stos
mov
xchg
lods
je
adc
add
enter
xor
or
xchg
ret
sbb
gs
pop
mull
in
dec
mov
mov
xor
pop
fnstcw
pop
insl
movl
xchg
pop
cs
iret
push
and
popa
push
test
adc
clc
mov
mov
pop
xor
xchg
nop
lret
loope
jae,pn
shl
test
push
lock
xor
aad
clc
xchg
sti
repnz
xlat
and
xor
dec
mov
push
add
daa
pusha
data16
push
shlb
shll
sbb
pop
fistpll
dec
std
dec
loop
push
les
mov
sbb
jo
xchg
adc
neg
xchg
mov
ret
cwtl
mov
ss
pop
mov
scas
cs
mov
fldcw
stos
pop
inc
adc
mov
pop
imul
jecxz
fs
cmp
nop
ljmp
fisttpl
outsb
xchg
cli
outsl
lret
xor
cmc
lcall
jnp
sbb
pop
sub
clc
mov
pop
and
fnstenv
ljmp
outsl
dec
sahf
test
lcall
lock
xchg
movsb
xor
mov
xor
daa
fistpll
add
icebp
pop
sbb
inc
cmpsl
push
and
pusha
data16
arpl
jl
fimuls
push
cmp
outsb
jnp
mov
push
in
mov
cwtl
mov
cld
cmpsb
pop
les
push
jb
repz
sbbl
mov
add
jl
and
jns
shl
test
jl
and
add
int3
fadds
mov
push
pop
lods
mov
mov
pusha
cmp
or
dec
lcall
xchg
shrl
cmpsb
sub
mull
push
leave
cs
sbb
scas
fsubl
jb
sbb
or
mov
mov
adc
xchg
in
mov
sbb
sub
xor
push
fmull
xchg
pop
mov
sbb
call
popl
jae
fldcw
enter
cmpsl
add
out
xchg
divb
test
pop
lret
imul
jae
jmp
cmp
dec
imul
sbb
cmp
fyl2x
fsubl
lds
xchg
pop
adc
cmc
prefetch
or
xchg
out
daa
xchg
aam
fisttps
and
cmp
jae
lods
dec
das
adc
jle
ficompl
stc
or
pop
lods
lock
pop
cld
incl
loopne
mov
and
ljmp
or
std
mov
adc
test
ja
ret
scas
sbb
mov
and
and
cmp
je
jnp
jae
loope
mov
sub
ret
aad
outsb
rcr
mov
jns
lods
dec
dec
imul
lret
xor
inc
xlat
fmull
data16
mov
lea
xadd
and
xchg
out
sar
sub
fs
mov
cmp
xchg
pushf
or
jns
imul
mov
sbb
insb
stc
jl
dec
fstps
cmp
in
jns
imul
mov
sbb
insb
stc
jl
dec
fstps
cmp
pushf
or
jns
imul
mov
sbb
insb
clc
jge
dec
fstps
lods
cmp
or
dec
fstps
inc
ret
add
jno
push
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jecxz
repz
lods
test
xchg
out
neg
arpl
push
sbb
add
pop
jecxz
repz
mov
int
frstor
jae
aaa
or
xor
movlps
lods
repz
mov
int
frstor
jae
xor
sbb
dec
aas
jge
stos
lods
repz
loop
int3
jecxz
mov
or
push
xor
test
and
mov
lahf
push
jmp
bound
lret
gs
xchg
lds
into
or
nop
fcompl
es
add
js
or
icebp
std
pusha
mov
xor
sbb
mov
insb
mov
aam
mov
push
popf
mov
inc
sti
and
arpl
bnd
fldl
pop
addb
adc
sbb
xchg
or
bound
in
mov
pop
jae
fcmovu
scas
jge
and
cmp
inc
test
xor
jb
jl
sbb
mov
js
mov
mov
rcrl
or
frstor
jae
inc
or
xor
dec
adc
in
hlt
iret
cmp
lea
dec
ja
and
pop
inc
or
push
inc
dec
inc
sbb
lods
cmpl
cmpl
dec
add
inc
push
addr16
jno
adc
stos
in
clc
mov
int
frstor
jae
inc
or
xor
dec
adc
lods
repz
mov
int
frstor
jae
inc
or
xor
dec
adc
lods
push
hlt
js
neg
jns
pop
inc
cmp
add
rcll
js
cmp
sub
in
mov
outsb
push
and
push
add
ss
movsl
rcr
sbb
repz
sub
cs
aas
adc
clc
test
mov
xchg
xchg
je
fistpll
dec
out
jle
stos
dec
dec
cli
pop
mov
lea
outsb
loope
rcll
lock
jbe
adc
xchg
loopne
push
pop
stc
lahf
adc
sti
out
dec
test
inc
call
bswap
psubusw
aaa
stos
popl
sbb
fnsave
push
dec
icebp
mov
daa
sub
pop
adc
mov
sbb
mov
xor
and
fnstcw
push
fstpt
in
mov
sub
mov
sub
and
jo
dec
aad
cmp
sub
add
jp
add
mov
cmpsl
popf
jl
push
clc
sub
inc
push
sbb
jb
fldcw
mov
jle
jmp
call
loopne
sbb
add
out
das
mov
adc
sub
mov
mov
cld
dec
sub
push
jmp
or
lcall
shlb
push
cmp
repz
sub
xor
xchg
jno
mov
inc
dec
mov
leave
sbb
insl
call
mov
fucomi
clc
mov
lods
ss
and
cmp
lcall
jno
jne
ret
xor
int3
push
inc
sbb
outsb
mov
sarb
sbb
inc
sarb
popf
sub
aaa
testb
adc
mov
add
jl
pop
pop
cmp
out
ror
shlb
popa
and
mov
aas
data16
mov
leave
jg
pushf
push
cmpsb
dec
js
and
inc
in
cmp
fstps
xor
or
jge
test
sbb
stc
cwtl
or
add
pop
inc
mov
push
out
cmpsl
sub
add
stc
ljmp
add
mov
push
jge
cmp
hlt
stos
cld
and
jge
mov
aam
push
outsb
add
jne
mov
dec
stc
xor
xchg
dec
fwait
push
ja,pn
pop
jo
and
adc
add
mov
sub
sub
dec
pop
push
push
nop
les
test
ficompl
cmc
cli
or
sbb
adc
repnz
lds
mov
xor
call
dec
rclb
lea
add
cmp
mov
fidivl
mov
xchg
popf
and
in
inc
inc
sub
mov
sbb
adc
cmc
jbe
je
in
adc
fsts
xor
sub
js
or
es
fidivl
and
jg
pop
push
les
ja
jle
es
xchg
dec
mov
repnz
mov
xchg
mov
or
fadd
jg
mov
cwtl
popf
in
in
mov
mov
sarb
fmul
and
loop
sbb
call
sub
fbld
lret
mov
inc
pop
xchg
cmpsb
fsubp
push
insb
outsl
shr
lods
popf
jg
add
dec
cmp
inc
mov
mov
cmp
arpl
xchg
sahf
stc
xchg
fnstcw
lahf
sbb
xchg
icebp
sahf
mov
push
lock
sahf
mov
dec
frstor
sub
imul
mov
xchg
sub
xchg
mov
test
and
mov
sti
xchg
fildl
mov
xchg
cmp
push
mov
js
jmp
pop
xor
jg
pop
imul
mov
data16
pop
mov
outsb
iret
cmp
xchg
stc
jb
dec
and
pop
cmp
jb
pushf
lods
cld
adc
mov
cmp
cmpsb
cmc
outsl
ss
sub
sbbb
gs
dec
in
jns
out
jmp
mov
xor
mov
shl
cmp
into
sub
mov
xchg
pop
or
dec
dec
mov
int3
push
sbb
push
cwtl
mov
inc
inc
clc
dec
std
inc
enter
aas
int
inc
sub
sub
lahf
repz
outsb
icebp
add
push
mov
xor
js
arpl
cmp
adc
loop
in
jmp
xor
mov
insl
mov
pop
xchg
mov
test
mov
xchg
cmovge
test
and
scas
aas
pop
loope
mov
les
popf
push
clc
and
push
lret
orb
dec
adc
xchg
pop
push
xor
pop
test
ss
shrb
add
and
inc
mov
jmp
adc
je
and
jnp
inc
movsl
jns
or
cmp
cmp
jg
cmp
out
xchg
shr
sub
sub
sbb
pop
iret
mov
jp
arpl
shll
sub
ret
ds
sahf
lea
dec
leave
xchg
push
mov
mov
and
int
push
inc
jle
int
cmpsl
fisttps
mov
iret
push
fdivrl
into
dec
cmp
xchg
cmpsb
sub
ljmp
mov
xchg
lcall
popa
jmp
jecxz
or
xor
shl
cwtl
xchg
add
fisubl
push
pop
lret
ret
lods
std
add
jno
and
adc
sahf
push
jb
aas
jae
loope
hlt
bound
cmpsl
dec
inc
mov
and
or
or
push
cltd
jnp
jl
pop
addl
pop
mov
mov
negb
xchg
cli
push
fistps
cwtl
and
mov
les
xor
push
out
xor
mov
cmovae
pop
sbb
xor
aam
sbb
mov
pop
test
push
or
rclb
push
pop
sub
sub
inc
leave
or
jle
rcrl
push
and
xor
cmp
xchg
aad
arpl
dec
mov
xchg
jge
cs
mov
jp
pop
xlat
popa
xlat
xchg
fisubrs
call
sahf
popf
rorb
cmpsl
lret
xor
std
stc
pop
pop
push
imul
mov
stos
mov
and
in
roll
cwtl
test
jp
inc
popa
xchg
jmp
or
in
incb
inc
shll
sub
cmp
lods
call
xor
or
negl
cmpsl
cmp
xlat
push
int
enter
sahf
insl
sbbl
clc
sub
dec
or
or
xchg
cmc
enter
cmp
jae
dec
jge
and
popa
hlt
cmp
mov
data16
mov
adc
lods
jnp
fcmovnbe
cs
xchg
out
imul
mov
andb
test
mov
mov
test
or
mov
mov
sbb
movl
clc
jb
cmp
push
sub
mov
mov
and
jne
adc
pop
mov
movsl
js
enter
imul
shll
arpl
push
push
inc
repnz
arpl
mov
inc
push
gs
insl
test
aas
and
out
push
pop
cmc
test
push
jmp
mov
jnp
cltd
mov
mov
xor
inc
jecxz
pop
frndint
mov
xchg
and
in
lods
push
pop
or
dec
stc
fistl
rorl
outsb
sub
add
mov
js
push
scas
jg
dec
fdivrs
fs
lahf
data16
int3
dec
mov
mov
cwtl
xlat
mov
push
scas
xor
and
call
dec
add
out
pop
in
loop
xor
adc
mov
mov
pop
push
jae
outsb
cmp
ret
add
xor
inc
shlb
xchg
dec
into
mov
jg
or
gs
aad
imul
add
repnz
adc
sub
inc
and
push
shl
ret
sbb
sub
movl
add
jbe
and
xor
push
std
movsb
xchg
push
in
push
jne
rcll
mov
ret
push
lcall
or
pop
iret
mov
xor
pop
imul
or
in
dec
or
mov
loope
into
leave
pop
and
gs
mov
jno
inc
fidivrl
mov
nop
aaa
sbb
sbb
jnp
cmp
pop
sbb
push
add
dec
and
mov
mov
push
dec
aas
mov
dec
push
and
pop
pushf
ds
or
mov
jb,pn
inc
lfence
push
mov
mov
jno,pn
cmp
popa
mov
sahf
sahf
bnd
push
xor
mov
xchg
jg
push
lahf
lret
add
push
lock
and
sbb
enter
inc
push
lods
fs
lcall
sahf
stos
sahf
xchg
je
sbb
mov
or
mov
xchg
filds
popa
call
leave
ret
xor
jbe
jge
and
ja
subl
outsb
push
jp
loop
fisubrs
int3
xor
push
insl
out
mov
dec
pop
rclb
mov
dec
loop
mov
mov
clc
mov
push
shrb
ljmp
and
mov
dec
add
ret
aaa
dec
and
sub
leave
jp
mov
out
movsb
push
cmc
mov
cld
test
aam
data16
xchg
push
outsb
cmp
out
pushf
leave
into
or
dec
add
mov
push
mov
mov
rclb
sub
mov
in
dec
inc
or
inc
nop
daa
push
rcr
out
out
or
sbb
test
imul
cld
jb
and
inc
pop
push
push
add
mov
mov
pop
data16
lods
std
notb
movsl
enter
pusha
and
and
fbstp
fcoms
repz
daa
shlb
cmp
shll
jnp
insl
mov
mov
cmc
fcomp
fdiv
pop
pop
sbb
jl
inc
fisubs
imul
ficompl
jg
xchg
push
sbb
aad
cmp
mov
int
loope
out
pmulhuw
clc
out
out
inc
add
adc
pop
sbb
jle
fdivrs
xchg
cmpl
cli
push
mov
lods
sahf
cmpb
and
sarl
or
xchg
mov
test
popa
cmp
mov
pop
pop
mov
push
mov
adc
ficoml
sub
hlt
inc
popf
add
cmp
jecxz
adc
iret
repz
mov
inc
push
inc
and
inc
push
cmp
cmp
sbb
push
adcb
sti
push
shlb
orl
push
cld
sbb
sbb
push
lds
sbb
push
out
push
dec
cmp
sub
inc
ficoml
outsb
add
shrb
pusha
sub
cmp
sti
add
imul
sub
popa
mov
or
std
in
fistps
jb
mov
imulb
dec
pop
mov
shll
cld
cmp
mov
lahf
lret
mov
or
xor
push
jg
daa
ljmp
cmp
cld
in
lock
add
inc
xor
daa
push
int3
or
adc
test
sbb
cmp
jmp
repz
fwait
fwait
jb
sbb
sahf
mov
repnz
xor
ret
pop
loope
pop
aad
sbb
repnz
cmp
mov
roll
insl
mov
mov
xchg
dec
subl
sahf
scas
add
stc
lock
jecxz
sbb
pop
add
hlt
jecxz
insl
mov
int
in
dec
mov
sbb
stc
js
enter
dec
repnz
xor
mov
lret
xor
test
mov
fwait
shrl
xor
mov
nop
mov
adc
mov
pusha
xor
roll
scas
inc
dec
ljmp
jb
sub
xor
pop
lret
dec
enter
lret
and
dec
jl
das
sub
cwtl
jb
adcl
mov
cmp
push
pop
inc
es
inc
jns
sti
xchg
out
dec
ret
inc
push
rorb
lods
lods
clc
sub
into
aad
cld
mov
sbb
lret
mov
and
and
cmp
fsubrs
cmpl
and
outsb
cmp
mov
cld
cmpl
fcompl
jecxz
imul
inc
adc
incl
rcr
stos
xchg
mov
testl
adcl
pop
fcmovnu
pop
mov
pushf
cwtl
add
pop
add
push
and
aas
lds
stos
jl
repz
mov
fs
sbb
sub
fsubrl
test
or
lret
arpl
cmp
in
pop
in
xchg
pop
les
ljmp
inc
es
iret
ja
ja
outsl
xchg
inc
mov
xchg
mov
sub
sbb
jmp
cmpsb
jnp
mov
sub
and
or
cmpsb
push
and
sub
xchg
cli
sbb
frstor
cmp
scas
xor
out
icebp
sub
lds
ds
mov
or
dec
and
jecxz
xchg
ss
and
cmp
andl
push
in
stos
pcmpeqw
cmp
inc
xchg
cmc
bound
in
or
jp
repz
mov
mov
leave
or
outsb
jne
jmp
xor
das
popa
jp
popa
or
aad
inc
scas
xor
es
in
xor
xchg
adc
add
cmp
pop
iret
in
mov
adc
cmpsb
shlb
inc
cli
ja
in
outsl
adc
sti
ret
add
lods
aaa
js
jl
or
daa
xchg
sub
xchg
pop
jle
inc
cld
sbb
clc
inc
jae
shlb
clc
ret
cli
pop
incl
ljmp
jbe
mov
std
hlt
adcb
imul
popl
dec
sub
test
adc
adc
jb
mov
sbb
add
jns
inc
adc
enter
scas
repnz
push
xchg
loop
dec
jne
in
inc
push
fimull
mov
xor
aaa
leave
xchg
mov
mov
popa
std
pop
add
dec
orl
adc
aam
or
inc
repz
xchg
in
mov
jmp
push
into
test
and
stos
leave
sbb
ret
mov
jo
iret
push
jb
inc
xchg
adc
lret
fidivrs
inc
std
pushf
xchg
fisttpl
test
lret
sbb
cmp
lret
xor
lods
cld
add
mov
bound
std
mov
xchg
mov
sarb
and
xchg
shrl
push
fstpt
sub
or
push
out
jae
jle
mov
ret
xor
push
cmc
aas
cld
xchg
loop
push
xor
ljmpw
jmp
dec
adc
cmp
movsb
mov
sar
lret
movb
push
inc
hlt
inc
dec
mov
out
into
cltd
xchg
push
jg
roll
mov
daa
add
jle
and
sbb
in
fs
dec
out
pushf
mov
inc
ret
wbinvd
scas
outsl
cld
icebp
xor
and
dec
sbb
mov
jb
jle
pop
push
jns
pushf
out
sbb
and
xlat
stos
subl
mov
ret
insl
popa
clc
xchg
dec
gs
mov
ljmp
mov
cmp
xlat
pusha
in
lods
js
test
push
bound
push
in
negl
sbb
lahf
jp
pop
pop
sub
pop
push
add
adc
xchg
stos
enter
dec
lea
outsl
cmp
shlb
movsb
pop
ja
andb
out
jbe
mov
xor
pop
or
sbb
lods
inc
insl
and
pop
daa
cmp
mov
inc
adc
arpl
stos
cmp
rclb
xchg
clc
in
adc
mov
dec
std
stos
test
pop
ret
daa
fwait
xchg
leave
sub
lods
leave
or
mov
stc
xor
xor
stos
adcb
lds
xchg
xchg
mov
jle
mov
call
mov
mov
or
fcom
and
setne
sbb
mov
mov
mov
mov
and
jp
xlat
pop
mov
in
push
cld
fisttpll
sub
adc
inc
enter
mov
stos
scas
imul
addr16
shll
mov
mov
pop
pop
xor
adc
push
rcll
jg
enter
push
cmc
outsl
iret
mov
idivl
jmp
addb
rorl
movsl
subl
jbe
rcll
mov
ret
std
jle
sahf
loop
mov
popf
stc
inc
mov
cli
mov
mov
push
imul
cmpsl
add
add
inc
into
or
in
push
test
mov
insl
sarb
dec
icebp
jnp
lahf
clc
aam
sahf
outsl
mov
xor
cwtl
and
mov
in
jl
push
mov
jne
mov
mov
aam
mov
add
pop
jecxz
xchg
lea
mov
stc
movsb
es
lea
and
or
push
jnp
cmp
daa
xchg
mov
idivb
imul
test
notb
loop
xor
lahf
xchg
mov
inc
dec
bound
loope
movsb
sbb
jecxz
test
iret
pop
sub
sbb
sub
xor
mov
mov
mov
out
aaa
scas
out
rorl
jae
fsubrl
mov
aam
mov
js
adc
pusha
xor
sbb
test
xchg
lcall
pop
push
jecxz
test
or
push
cli
add
and
pop
pop
dec
add
mov
scas
out
insl
pop
lods
fadd
stos
adc
sbb
leave
ja
cltd
adc
insb
daa
sub
pop
lret
out
push
les
inc
fnsave
dec
loope
lcall
pop
ret
or
mov
xor
jns
jno
stos
out
mov
push
test
mov
push
fs
pop
xor
leave
pop
jne
arpl
xlat
cmp
shll
cmc
pop
fstpt
inc
pop
sub
and
mov
hlt
iret
jl
orl
lds
jo
and
sarb
adc
sub
mov
insb
xorl
inc
dec
scas
stc
cmpsb
lcall
aam
jb,pn
pop
scas
mov
inc
inc
in
bound
inc
jno
ljmp
scas
int
push
das
add
cmp
test
iret
adc
pmuludq
add
leave
imul
icebp
cmp
xchg
movsb
cwtl
sbb
clc
je
fidivs
in
test
xchg
out
jp
frstor
mov
pop
pop
int3
push
mov
or
adc
orb
cmp
mov
fstps
xchg
lret
clc
mov
popf
add
orb
aaa
cwtl
int
sub
mov
or
imul
push
push
lret
std
clc
xor
jecxz
mov
mov
mov
repz
jno
aaa
dec
dec
imull
data16
pop
icebp
fadds
inc
mov
mov
mov
push
inc
les
das
imul
testl
push
jle
sub
js
scas
or
imul
les
scas
cmp
jge
adc
sti
daa
mov
push
idivl
pusha
add
rolb
push
or
jnp
sbb
fisttpll
adc
sbb
push
dec
je
push
cmpb
jae
cmp
mov
dec
jge
insb
fs
mov
cmpsl
fnstenv
dec
mov
icebp
push
dec
ja
dec
mov
push
lret
orb
aad
xchg
loop
leave
mov
sti
add
clc
movsl
inc
xlat
call
cmpsl
add
test
add
insl
orl
fmuls
test
in
xchg
sbb
stos
jp
cmpsb
mov
std
ss
mov
scas
pop
inc
fmul
test
add
mov
or
test
aaa
mov
lods
repnz
outsl
mov
sub
cmp
cltd
and
mov
int3
rcll
add
cli
in
pop
lods
cmp
push
sbb
xorl
dec
stc
std
fsubrs
adc
jb
adc
fbstp
add
fildl
out
imul
sti
xor
js
mov
adc
inc
xor
stos
cmp
and
push
fcompl
push
dec
mov
test
scas
pop
ss
out
insl
mov
pop
popa
aas
mov
enter
inc
arpl
adc
jns
mov
jae
inc
in
stos
adc
stos
cmpsb
jbe
mov
sbb
inc
mov
xchg
hlt
out
aad
movsb
cli
cmpsl
loope
sub
xor
inc
in
mov
mov
dec
xor
cmp
addr16
lcall
jnp
stos
ds
out
dec
xlat
iret
imul
mov
and
mov
xor
repnz
or
push
adc
sub
imul
dec
push
daa
jo
popl
xor
pop
or
mov
mov
jl
mov
mov
lret
jg
or
shll
pop
adc
or
dec
insl
mov
mov
xorl
notb
and
cltd
mov
mov
in
jbe
push
mov
js
lea
xor
add
fldt
adc
mov
int
frstor
jae
inc
or
xor
dec
adc
lods
repz
mov
int
frstor
jae
inc
or
xor
dec
adc
lods
repz
mov
int
frstor
jae
inc
or
xor
dec
adc
lods
repz
mov
int
frstor
jae
jmp
in
cmp
in
mov
jo
pusha
mov
loopne
mov
addb
sbb
xchg
inc
adcb
mov
xchg
jo
pusha
mov
roll
xor
and
addb
adc
add
xor
popa
mov
xchg
idivb
dec
leave
sbb
fsubr
shl
lods
sub
add
aas
aaa
shll
andl
fwait
cs
or
and
jecxz
ret
lcall
lds
popf
xchg
sub
rorb
jmp
das
sbb
jns
cmpl
add
popa
sub
push
jo
loopne
cwtl
xchg
jno
inc
xchg
sbb
setge
mov
push
or
jno
sarl
xchg
or
loope
adc
mov
xchg
out
loopne
pop
into
sbb
jmp
sbb
mov
mov
sub
adc
xor
sbb
popa
aad
aad
inc
jno
mov
clc
xor
add
add
adc
sahf
mov
arpl
or
adc
inc
shll
clc
cwtl
call
sub
sub
pop
sahf
inc
mov
les
xor
push
mov
xchg
jne
and
subl
sub
add
popa
out
push
stc
enter
stos
mov
mov
jecxz
test
call
push
mov
xor
lds
jae
add
and
push
lods
add
xor
and
rolb
rclb
and
xor
popa
mov
xchg
jo
pusha
mov
roll
xor
and
rolb
rclb
and
xor
popa
mov
push
fadds
outsl
mov
pop
inc
sbb
stos
aas
cmp
fisttps
movsb
mov
test
scas
cmc
and
push
cmp
push
outsl
dec
push
pushf
out
jnp
adc
inc
jp
inc
mov
fxch
out
sub
call
in
cmp
std
and
pop
aas
idivl
mov
and
les
sub
xor
and
sahf
ret
jnp
sub
fsubs
mov
dec
loope
or
shll
dec
bound
ficomps
dec
mov
sub
adc
fwait
mov
ficompl
jbe
cmp
sti
jle
jns
movsl
clc
jae
hlt
adc
loope
add
lret
cltd
pop
cmp
mov
push
pop
sbb
loopne
sub
and
shll
xchg
push
xchg
inc
adc
xchg
js
lahf
mov
inc
sti
lret
sub
roll
add
inc
dec
pusha
and
iret
or
mov
sbb
roll
pop
repz
lds
sub
and
pop
into
xor
fwait
push
sub
data16
sbb
xchg
or
ffreep
push
jns
pop
jnp
inc
cwtl
xchg
xchg
inc
jge
and
scas
mov
int3
or
fldz
inc
je
dec
adc
fimull
and
pop
ret
sub
and
inc
add
cmc
cmp
push
imul
jecxz
je
nop
and
mov
push
imull
push
subl
xlat
pop
jo
mov
mov
xchg
int
insb
loop
mov
sbb
lock
jae
je
ja
and
shll
out
mov
xor
sbb
aaa
xchg
mov
adc
or
mov
dec
cmp
push
icebp
ja
sti
call
jns
sbb
sahf
ret
shlb
aad
or
jbe
rcrl
xchg
jbe
push
les
mov
fwait
aaa
push
or
subl
jbe
insb
adc
jp
test
stos
mov
dec
faddp
cmpsb
jo
dec
xor
add
add
icebp
xchg
clc
add
push
or
cmp
jp
imul
adc
push
out
mov
out
rorb
test
adc
fidivrl
dec
icebp
loop
arpl
jae
scas
mov
lds
mov
jmp
std
sbb
push
jl
scas
je
imul
into
mov
jno
sub
imul
popa
imul
or
jnp
popa
ror
insb
sbb
lcall
sti
ljmp
cmp
das
lods
push
pop
xor
sbb
jbe
ret
xchg
and
repnz
sbb
sahf
jo
lret
jb
mov
mov
ficoms
mov
dec
shll
loop
insl
lret
push
mov
jno
mov
data16
cmp
xor
mov
je
push
mov
mov
xchg
fcoms
jp
mov
add
cli
cmp
je
dec
lahf
pop
iret
lahf
pop
call
sarb
daa
ret
mov
repz
dec
and
jns
outsb
jbe
test
cld
fsubr
push
roll
in
dec
cmp
xor
mov
arpl
es
dec
dec
sub
pop
addr16
out
cmp
adc
sub
iret
jge
push
lds
sbb
testl
jl
lds
xor
out
das
add
pop
dec
mov
stos
push
outsl
dec
dec
iret
rcl
lret
loopne
cmp
fcomi
subl
cmp
add
test
loop
divb
or
mov
jge
push
pop
cmp
dec
cmp
pushf
jmp
and
push
rcrb
popf
adc
jb,pn
mov
out
popa
cltd
dec
lahf
roll
aaa
or
mov
xchg
clc
push
xchg
repz
dec
sbbb
fldt
pop
xchg
jb
sbb
jge
mov
push
loope
xor
sbb
adc
xchg
ret
faddl
push
sti
test
imul
mov
gs
jbe
jno
arpl
jp
js
mov
scas
test
push
mov
dec
cwtl
xor
pop
push
cli
mov
je
mov
cmp
xchg
leave
or
into
mov
mov
pop
xorb
jbe
inc
popa
jno
inc
jge
push
mov
mov
xchg
mov
test
mov
adc
jge
aad
jl
out
jmp
fnstenv
sbb
sub
and
icebp
std
mov
fnsetpm(287
mov
aad
cwtl
rolb
dec
push
jle
adc
notl
fsubs
mov
fs
inc
add
xchg
jecxz
inc
shr
rcr
pushf
out
push
dec
cld
and
cltd
add
scas
cmp
jge
mov
sbb
jae
mov
in
outsb
movsb
adc
outsl
roll
in
push
sbb
xchg
push
or
std
aas
mov
mov
jp
adc
mov
scas
mov
popa
sub
mov
xchg
pop
fsubs
repz
inc
aam
scas
imul
scas
pop
loop
lcall
cmp
xchg
dec
lds
xor
mov
push
in
fsubrl
call
inc
adc
loop
repz
mov
mov
int
dec
mov
insb
int
repz
outsb
cld
movntps
inc
jg
rolb
lcall
pusha
dec
popa
dec
pop
popa
jmp
or
and
mov
cltd
or
rcrb
xlat
mov
jbe
aam
dec
push
xchg
dec
dec
ficoms
lret
mov
popa
movsl
or
lds
jae
push
das
jb
push
sub
andl
scas
pop
xor
lods
scas
xadd
or
mov
jg
popa
aaa
divb
dec
fnsave
adc
test
sub
fs
mov
jl
push
xor
scas
lods
adcl
scas
adc
dec
push
and
add
inc
lahf
mov
push
push
clc
cmp
xor
fsubs
sbb
push
cltd
jg
jae
mov
mov
mov
repnz
dec
xchg
sub
outsl
mov
fiaddl
pop
sub
aas
xor
jnp
xchg
mov
mov
rol
inc
inc
cld
clc
notl
shrl
sbbl
lahf
push
inc
daa
sbb
gs
aam
and
inc
or
loopne
xor
icebp
sbb
xchg
js
inc
mov
mov
push
push
jnp
dec
sub
jp
mov
lods
cmp
cmp
in
add
jne
sub
mov
push
jmp
stos
inc
add
mov
jmp
in
test
dec
mov
sarb
sti
and
pop
mov
addr16
inc
mov
out
nop
fisubrl
insl
ficoms
jne
shr
imul
out
fcomp
or
mov
call
idivl
out
adc
add
sub
lods
cmp
add
int
fs
hlt
mov
push
jge
or
mul
out
out
stos
sbb
cmp
xchg
divl
dec
or
push
inc
add
or
bnd
imul
pusha
push
push
fwait
pop
push
fisubrs
push
pop
mov
out
jns
std
ss
ljmp
and
dec
int3
imul
push
test
subb
dec
not
sub
xchg
dec
pushf
jg
push
enter
repz
sub
mov
inc
sub
jne
rcll
adc
or
xchg
xchg
sub
out
inc
sbbl
nop
cmp
loope
lock
xchg
pop
lea
mov
xchg
xchg
and
push
xchg
js
cmpsb
inc
adc
mov
mov
cmp
les
adc
inc
mov
sbb
frstor
rcrb
stos
clc
popf
les
imul
sar
das
xchg
inc
jg
lds
sar
cmpsb
xchg
jbe
popf
fwait
repz
pop
inc
dec
aad
mov
lods
popa
into
add
dec
popa
jae
or
inc
dec
aas
sbbb
mov
ja
and
dec
int3
cmp
es
xorl
sbbb
out
scas
test
cld
adc
pop
pop
popf
jge
push
push
loopne
push
gs
shll
push
push
cmp
pop
jecxz
ret
cmpsb
fsubrs
psubsw
inc
add
and
pushf
flds
xchg
ljmp
jbe
push
les
outsb
fcomps
popa
leave
cmp
add
xchg
aam
push
test
aaa
jmp
sub
scas
or
or
xchg
pop
lea
imulb
jo
adc
js
out
mov
mov
push
test
scas
imul
xchg
cli
and
cmc
push
adc
insb
lds
icebp
cwtl
cmpsb
lcall
push
cmpsl
sbb
loopne
out
push
jl
or
mov
sub
ret
jle
pop
or
cld
push
int
cmp
mov
add
push
pop
mov
cmp
pop
lahf
movsl
xchg
lods
cmp
movsb
clc
and
pop
ljmp
and
inc
sbb
ret
mov
sub
cli
jns
push
popf
mov
push
pop
dec
dec
outsl
out
test
scas
xchg
add
je
cli
or
pusha
mov
lcall
dec
clc
sarb
sbb
jmp
cmp
jnp
lods
out
in
push
dec
adcb
mov
pop
push
icebp
lods
clc
cmpsl
mov
cmpsb
push
sub
clc
push
pop
sub
cmpsl
xchg
xor
cld
test
pop
dec
xchg
jns
mov
scas
aam
pop
xor
sar
push
jl
rcll
mov
mov
movsb
cmp
xor
cld
lret
in
cmp
shr
test
loopne
pause
xchg
aas
stos
ret
add
sbb
push
sbb
push
ret
lcall
cmp
arpl
movnti
leave
sahf
cwtl
test
ljmp
adc
jns
out
jno
xor
std
xchg
sub
fiadds
jmp
mov
bound
cmp
pop
or
pushf
pop
imull
bound
add
push
js
mov
push
stc
jne
jmp
adc
sub
test
pop
fs
imul
ja
cli
repz
cld
fists
mov
add
push
mov
shll
mov
fcompl
daa
jno
sahf
sub
sub
mov
sar
mov
pop
or
ret
pop
ds
inc
lods
scas
out
sub
xor
ror
sti
addr16
fcomps
ljmp
pop
sbb
sub
in
xor
add
loopne
cltd
scas
cmp
or
and
xchg
push
nop
or
mov
jl
xchg
add
adcb
ret
fldenv
icebp
inc
and
pop
fimuls
roll
add
mov
mov
inc
packuswb
mov
push
pop
cmp
sti
out
pop
sub
mov
pop
or
int3
insl
and
test
mov
into
mov
and
xor
leave
inc
popa
mov
inc
push
hlt
adc
seta
mov
fldenv
pavgb
lds
stos
xor
imul
cmpsb
add
les
mov
xor
enter
ljmp
xchg
mov
fcmovu
lods
daa
rorl
gs
push
bound
lock
repz
int
idivl
popf
shr
das
pop
push
nop
shrl
mov
notb
fldcw
push
or
add
iret
stos
or
jbe
xchg
fwait
and
mov
adc
loope
movsb
lcall
adc
jne
ja
sbb
lock
sub
in
jecxz
jnp
inc
xchg
inc
push
int
xor
stc
movsb
and
pop
xlat
mov
loop
pop
xchg
js
push
shll
xor
lods
pop
pop
push
pop
xor
mov
and
mov
ret
bswap
test
xor
and
sub
xchg
lahf
in
mov
mov
test
xchg
aad
mov
insl
cmp
movsl
in
rep
xchg
sbb
xchg
push
test
nop
and
mov
add
cmp
mov
sub
adc
sub
cmp
adc
shrl
mov
xchg
in
test
lcall
adc
jg
test
call
negl
mov
xchg
push
pop
nop
cmc
ret
sarb
out
lret
xchg
adc
in
push
test
dec
in
das
into
repz
nop
cmp
mov
lahf
negl
outsb
jbe
adc
mov
addb
ss
jae
sti
xchg
data16
mov
xchg
xor
xor
loop
movsb
lods
lods
jle
pop
pushf
ja
or
outsl
xchg
and
dec
sahf
mov
pop
hlt
xor
adc
jle
xor
jno
pop
jle
iret
orl
jnp
movsl
mov
inc
stc
inc
add
loop
std
or
dec
aam
mov
movsl
aas
push
mov
add
inc
idivb
es
jge
dec
maskmovq
mov
mov
incb
cmpl
in
jmp
cmp
call
cmp
mov
adc
mov
or
or
inc
add
test
inc
sub
insl
pop
fucompp
fnstsw
jns
pop
outsl
mov
or
xchg
xchg
sub
mov
dec
jmp
shlb
notb
int3
movsb
cltd
mov
or
pushf
sbb
push
hlt
ficompl
dec
mov
mov
adc
aad
js
mov
mov
cmp
dec
sahf
cli
add
ja
xor
jno
inc
clc
pushf
lahf
pushf
mov
mov
fldcw
push
call
lahf
lods
inc
push
ds
in
ret
int
mov
sbb
testl
iret
mov
lahf
pop
cmp
movsl
xor
add
ljmp
rcll
mov
mov
jbe
dec
add
sbb
push
test
dec
jno
icebp
lea
push
add
nop
inc
mov
push
sub
adc
clc
sub
fstps
dec
mov
shlb
inc
dec
xlat
icebp
sbb
loop
stos
clc
iret
push
inc
outsl
or
cmp
jnp
pop
mov
rcrl
jae
fsubr
mov
lret
ror
or
testb
sub
add
or
cli
stos
cltd
dec
and
setae
aam
std
test
jmp
pop
mov
pop
outsb
xchg
fsubrl
ds
fwait
ds
cld
dec
fbstp
mov
cmp
mov
loopne
sub
leave
dec
add
test
pop
int3
adc
xor
or
cwtl
les
movsb
mov
push
lahf
cltd
mov
mov
cmpsb
jno
ret
mov
push
mov
dec
push
cmp
subb
aad
sub
das
ret
loop
pusha
pop
cli
jecxz
push
pop
mov
xchg
mov
test
imul
dec
gs
and
adc
or
xchg
in
mov
popf
and
push
lret
std
cs
xor
into
pop
xchg
jg
addr16
dec
maxps
ss
enter
mov
cld
ss
and
jnp
jnp
jge
pop
sbb
js
pop
sbb
ja
fstpl
test
and
xor
or
cmpsl
dec
stc
lea
cld
push
and
xchg
movsl
xor
mov
dec
or
fs
insb
jmp
in
add
jb
mov
inc
movl
mov
mov
push
pusha
or
pop
fwait
jns
cmp
cld
jo
test
pop
cmp
xchg
cld
xchg
jge
sub
sti
clc
jne
mov
cli
mov
shll
xchg
rol
outsl
fildll
mov
xchg
xchg
test
mov
fcom
adc
push
aas
and
fildll
mov
out
and
daa
add
and
dec
addr16
xchg
int
cmp
dec
or
push
lods
push
enter
shll
mov
les
xlat
ret
test
push
rclb
dec
fsts
xor
outsb
jbe
pop
call
dec
jle
pop
rcll
lds
mov
mov
in
jp
rclb
mov
push
gs
movsl
jmp
sti
mov
aad
pop
push
pop
sbb
sahf
mov
or
hlt
dec
jmp
fs
dec
or
xchg
dec
mov
push
addr16
push
cs
push
aaa
testb
test
ret
pop
cmp
or
jp
dec
jge
cmpsl
stos
or
stos
sti
jle
pop
mov
sarl
es
or
mov
dec
js
cmp
out
add
inc
loopne
pop
pop
xchg
aad
mov
or
sub
in
dec
dec
dec
sub
addb
inc
into
jmp
ret
rorb
adc
jns
push
sar
sbb
xchg
imul
jns
ds
loop
ljmp
mov
lcall
loope
out
and
orb
test
xor
xchg
aas
popa
lods
bound
out
jne
lds
daa
jnp
shll
inc
dec
mov
gs
fld
shrb
add
das
mov
pop
fdivr
cmp
dec
loope
pop
sub
mov
pop
test
fcos
ja
icebp
inc
mov
sbb
jmp
data16
xchg
mov
xchg
out
jb
mov
sub
push
mov
les
or
notb
xor
movsl
adc
mov
jnp
pop
sub
popa
icebp
mov
arpl
inc
sbbl
mov
dec
sti
les
dec
and
mov
lea
dec
xor
jns
jne
repnz
pop
adc
ja
mov
add
rclb
out
dec
sub
mov
or
es
movsl
push
mov
push
bound
jbe
adcb
insb
jp
jmp
int
cmp
or
dec
mov
push
sbb
lret
fcmovne
xor
or
dec
test
and
sbb
mov
push
or
mov
adc
jecxz
les
call
mov
jbe
sub
jb
or
inc
and
jl
mov
cmp
jmp
lea
cmp
add
aas
out
aam
cltd
test
test
push
pop
fcompl
push
push
push
in
in
or
inc
add
adc
pop
adc
cmp
insl
xchg
push
pop
pop
dec
andl
lea
push
fwait
sub
fisubl
pop
aad
push
and
loopne
xchg
jnp
or
mov
mov
mov
jo
adc
or
lods
or
loopne
int
mov
mov
pop
cmp
je
cld
gs
les
xchg
out
adc
adc
enter
mov
stos
jecxz
stos
and
repnz
aas
enter
roll
insl
sbb
in
addl
xchg
lods
gs
push
push
clc
imul
inc
cwtl
cs
insl
inc
aam
mov
inc
mov
push
mov
hlt
repnz
mov
mov
negl
adc
xchg
dec
mov
inc
shl
push
sub
es
movsb
out
in
xor
cmp
push
pcmpgtd
insb
dec
dec
scas
repnz
add
ret
fwait
nop
add
stos
pop
popa
lods
mov
sbb
lods
repz
jge
jge
rorb
push
xchg
inc
mov
aad
mov
ret
push
subl
xchg
rcrb
aas
jg
or
repz
cmpb
fimull
mov
ja
lret
sbb
xchg
add
imull
jno
out
xchg
nop
xlat
push
push
sti
test
sbb
mov
inc
or
xlat
push
out
andb
rcl
lods
jb
sub
rcll
push
mov
push
inc
and
lahf
adc
cmovns
aad
lock
cmp
in
jle
insl
lds
pop
insb
shlb
es
aad
inc
ds
pop
and
aam
add
ss
xchg
mov
mov
mov
or
out
incl
ljmp
adc
jge
fcomps
inc
fcomps
aas
ficoms
xchg
call
insb
mov
push
cwtl
iret
xor
cmp
in
fnstcw
mov
clc
dec
icebp
xchg
or
add
jmp
inc
jnp
lock
add
insb
inc
add
cld
into
mov
cwtl
scas
lods
inc
lcall
jge
add
mov
cmpsb
cmpsb
cmp
popa
push
addb
sub
mov
jmp
jns
sub
aas
mov
mov
aam
mov
hlt
sbb
int
stc
dec
test
fs
or
sbb
pop
push
gs
and
pop
ss
jmp
mov
pop
je
mov
dec
daa
popf
sbb
popf
xchg
sbb
mov
mov
adc
leave
cmp
ja,pn
push
hlt
push
jmp
mov
ljmp
cmpsl
gs
fwait
xchg
push
shlb
jno
out
and
dec
repz
and
mov
roll
xor
and
rolb
rclb
and
xor
popa
mov
xchg
jo
pusha
mov
roll
xor
and
rolb
rclb
and
xor
popa
mov
xchg
pusha
mov
add
xor
and
aam
rclb
and
xor
pusha
nop
jno
subl
rcll
xor
mov
mov
out
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
xor
jmp
stc
ds
mov
add
add
add
add
pop
add
lcall
add
push
add
add
into
add
das
add
add
push
add
add
add
add
adc
clc
add
or
imul
push
add
into
add
add
mov
mov
addl
add
add
rolb
mov
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
bound
lock
es
add
and
add
add
lea
lea
adc
icebp
add
add
xchg
add
add
add
add
add
jo
push
add
loope
mov
jmp
add
add
add
and
add
add
add
add
add
add
push
ret
add
add
add
dec
add
add
add
add
add
add
lahf
add
add
and
mov
add
bound
cmp
xor
js
add
sbb
lea
sti
add
add
lret
add
mov
clc
add
add
add
pop
add
add
mov
add
add
xchg
lcall
add
add
add
add
add
pop
add
lea
mov
inc
add
add
add
add
add
lret
add
cmp
add
and
dec
add
add
lea
lea
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
lea
mov
lcall
add
add
add
add
push
add
add
mov
sub
mov
add
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
sahf
add
add
mov
mov
stos
add
dec
add
add
add
add
mov
add
add
add
mov
add
add
or
add
add
lahf
add
add
mov
and
je
inc
add
add
add
add
add
add
add
enter
dec
add
inc
add
add
ret
add
add
add
add
add
add
or
popa
add
add
add
add
addb
add
add
add
imul
mov
and
adc
lods
add
add
add
push
insb
add
add
enter
fs
mov
outsb
jnp
enter
cmpsb
jl
sbb
lods
pop
mov
insb
mov
push
pop
push
jp
dec
leave
aam
pusha
adc
pop
sub
test
out
fdivr
mov
clc
lods
cmp
mov
add
adc
adc
xchg
stos
shlb
lods
mov
lahf
out
ret
pop
and
inc
fsts
jmp
cmp
jp
aad
mov
sahf
dec
inc
dec
mov
movsb
mov
inc
sub
rcll
and
pop
xor
icebp
mov
bound
lods
aad
pop
push
addr16
add
inc
inc
cmp
jb
inc
rcll
popa
push
mull
or
mov
or
das
add
adc
sub
mov
mov
add
mov
sbb
es
aad
add
popf
mov
mov
lea
pusha
cmp
mov
ds
insl
lods
xor
lds
subb
xchg
call
inc
in
test
cltd
cmp
pushf
in
push
les
push
adc
lret
rolb
lidtl
addr16
add
push
stc
test
rcr
add
leave
sub
out
movsl
in
loop
les
pop
daa
mov
int3
lea
sub
mov
pop
cmp
rep
dec
iret
inc
lods
mov
addr16
inc
loopne
and
push
lahf
leave
mov
mov
cmp
cmp
xchg
popa
neg
mov
mov
pop
push
ss
popf
lcall
pop
sbbl
push
int3
xchg
xchg
movsb
inc
or
out
fdivl
jge
jp
xchg
addr16
cmp
lods
insl
fsubrs
enter
xchg
push
and
idivl
xor
and
xchg
adcb
das
mov
lods
insl
imul
jle
inc
dec
xchg
xchg
cmc
int
cmc
jge
loopne
xchg
call
pop
dec
rorb
mov
jnp
rcrl
clc
push
push
int
inc
cmp
mov
int
and
pop
in
cs
cmpl
xchg
ret
out
into
mov
in
insl
imul
and
mov
pop
repz
loope
es
iret
hlt
addr16
fisubl
jle
mov
inc
mov
filds
jns
pusha
jb
cmc
clc
mov
insb
fisubrl
ss
lods
stos
add
cwtl
ljmp
push
ret
rcrb
and
cmc
imul
jmp
inc
call
jge
nop
pop
hlt
xchg
jo
enter
and
sbbb
mov
jp
dec
dec
in
xchg
and
pusha
scas
sbb
jne
xor
cs
cs
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
