in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
in
mov
add
movl
nop
cmpl
dec
cli
push
mov
push
movb
std
mov
lea
add
les
insb
push
sti
cmp
mov
cmp
je
jne
incl
lea
push
dec
repz
idivl
std
scas
notl
dec
pop
xor
js
call
ds
lea
mov
movsl
cs
add
sbb
cmp
lea
lret
sarl
rorb
in
push
xor
mov
push
iret
sub
xchg
fistpll
add
stc
cltd
enter
out
mov
int3
inc
cmpl
add
test
add
jo
rolb
sbb
or
rcrl
push
xchg
sarb
cli
sarl
test
iret
sbb
aam
cmp
pop
push
test
fisttpl
xchg
add
cli
icebp
pop
mov
push
jo
pxor
xor
push
pop
xor
pop
xor
mov
and
add
mov
push
cmp
cld
and
lea
xchg
adc
push
movsb
loopne
shlb
loop
pop
dec
into
jnp
mov
sub
sub
mov
mov
es
inc
add
inc
push
fldcw
push
push
lds
or
mov
push
movsb
and
sbb
ret
jno
dec
daa
push
add
outsl
in
or
pop
pushf
jbe
lock
std
push
je
push
into
jno
cld
jl
push
dec
lret
mov
or
es
notl
fxtract
xchg
and
push
push
stos
jno
icebp
xchg
lret
xchg
xchg
insl
data16
mov
repnz
xor
imul
shlb
in
cs
xchg
cmpsl
test
lret
jne
mov
lcall
jne
scas
scas
cmp
pop
or
mov
out
into
in
mov
lea
adc
mov
push
xor
addl
mov
and
ja
adc
cmp
rcr
in
iret
cmp
nop
clc
cld
decb
sbb
dec
outsb
jmp
adc
das
jo
add
int3
xor
andb
icebp
xchg
sub
jnp
sbb
mov
cmp
inc
mov
je
jnp
imul
sub
xor
movzwl
or
mov
js
js
scas
xchg
and
ss
add
adc
enter
rcrl
add
mov
popf
dec
sub
mov
adc
clc
fadds
jmp
hlt
xor
add
lock
xor
inc
mov
clc
cld
jecxz
mov
movsb
cmpsl
or
and
add
scas
mov
mov
cmp
jnp
ret
sub
std
test
xchg
xor
or
leave
sub
enter
nop
inc
push
sbb
out
iret
push
fsts
jno
lds
stos
in
push
or
inc
sub
jo
ret
push
dec
movsl
jb
push
jo
inc
test
mov
iret
movsl
mov
mov
mov
lods
xchg
repnz
inc
pop
xchg
popa
mov
inc
adc
test
cmc
fisubrs
test
outsb
rclb
fistps
xor
or
rcrb
clc
aas
pop
add
push
adc
jne
pop
dec
xor
rolb
dec
lock
jmp
adc
sub
fs
cmp
fsubrl
cltd
popf
mov
mov
test
jge
daa
sub
pop
adc
push
xchg
jo
pop
je
xchg
jo
in
mov
cmp
add
sbb
in
sarb
adc
push
adc
enter
adcl
loop
adc
loopne
shlb
push
push
sbb
mov
and
sub
fcoms
sbb
mov
std
sbbb
enter
pusha
or
adc
adc
push
jb
nop
ret
out
pop
mov
jb
negl
mov
add
shll
insb
pmaxub
pop
scas
mov
and
pop
xchg
stos
or
jle
cmp
addl
push
or
in
ret
popa
xor
je
push
rcrl
aas
fistl
das
pop
mov
or
fwait
mov
xor
xchg
xchg
push
push
push
mov
enter
inc
sub
push
sbb
xor
or
scas
dec
roll
lods
jl
repnz
lods
xchg
jl
jecxz
push
adcl
add
adc
cmp
test
arpl
dec
cmc
insb
dec
inc
add
adc
push
je
nop
andb
sbb
pop
xor
push
in
xchg
sbb
mov
aaa
in
sahf
inc
sub
lea
mov
mov
lea
jmp
bound
cltd
mov
pop
add
repnz
xchg
push
inc
call
adc
movsb
cmp
insl
sbb
mov
ss
mov
fldenv
xor
js
add
xchg
lea
jge
ret
pop
insb
shr
fcoms
ret
sub
xchg
ret
or
mov
stos
or
xor
xor
or
mov
mov
dec
sub
mov
jmp
lods
call
inc
inc
aam
int
notb
jb
cmpsb
sub
adc
jmp
stos
sbb
daa
in
inc
addb
push
inc
mov
push
lret
je
mov
push
and
leave
xorb
push
mov
mov
push
or
call
sub
and
pop
xchg
cmpsl
xchg
push
jbe
ficoms
insl
cmp
bound
test
jnp
push
cmp
addb
xor
xor
cld
int3
mov
ret
mov
add
sub
mov
cmp
mov
js
xchg
push
ret
adc
inc
push
loope
add
repnz
subb
jge
test
les
sbb
jne
push
inc
inc
and
orb
inc
pop
mov
iret
jmp
movl
push
lea
push
xchg
sub
and
xchg
sub
es
xchg
lock
adc
xor
xchg
cwtl
push
mov
in
push
sbb
mov
mov
sbb
xorb
xchg
xchg
test
pop
movsb
pop
push
stos
add
loop
popa
pop
inc
pushf
xchg
subb
popl
frstor
jne
mov
push
mov
fstps
sbb
sub
or
and
fwait
mov
sbb
inc
add
bswap
mov
add
mov
mov
mov
out
cmp
cmpb
sub
cld
mov
or
xchg
stc
shlb
inc
hlt
aaa
or
cmp
mov
mov
xchg
test
sub
fdivrl
hlt
mov
adc
sar
shr
das
repz
push
adc
xchg
dec
in
in
pushf
push
jno
xorl
test
rorb
fidivl
ss
mov
test
orl
push
stc
or
or
gs
mov
vandps
roll
movsb
in
mov
pop
push
test
sbb
add
push
add
inc
mov
orb
roll
cli
or
dec
hlt
mov
mov
mov
cmp
rcll
mov
xor
loope
push
mov
xchg
aam
mov
rclb
pushf
jp
push
mov
call
sarl
inc
mov
test
popa
enter
pushf
cmpsb
ret
pop
repnz
adc
mov
lea
add
aad
inc
mov
fs
inc
pushfw
dec
pop
or
rcrb
ror
xchg
test
call
mov
sub
mov
andb
cmp
mov
mov
jo
xchg
mov
call
pushf
arpl
xchg
lret
mov
loope
inc
sub
adc
shlb
add
addb
nop
push
out
faddl
or
andl
ret
cmp
and
xlat
pushf
push
sbb
sbb
xchg
mov
push
mov
and
or
adc
inc
adc
xchg
sub
gs
test
ss
jmp
movsb
jmp
or
out
popf
insb
or
jl
mov
sarb
sbb
mov
mov
icebp
ss
rorb
push
add
pusha
sbb
pop
sub
iret
xchg
mov
es
rolb
iret
rcll
push
jne
and
aam
in
ret
adc
rol
lret
mov
std
rclb
enter
jmp
push
mov
nop
adc
mov
adc
adc
xchg
push
xor
adc
clc
jnp
mov
mov
mov
sub
cmp
xchg
mov
movsl
rcll
xor
cwtl
add
addr16
sbb
es
jle
lods
cmp
sbb
mov
and
add
ret
sbb
aaa
sbb
rcrb
mov
mov
jnp
out
inc
add
test
out
mov
mov
and
les
xchg
jb
fmuls
popf
inc
lea
jl
push
fists
sub
sbb
hlt
pop
push
add
xchg
add
xlat
pusha
rclb
rorb
mov
dec
mov
sbb
push
and
or
sbb
lahf
adc
ret
sbb
shrb
push
mov
xor
sbb
add
mov
sub
loopne
pushf
cmp
cld
inc
or
loop
call
or
iret
inc
in
int3
fsubs
imul
xchg
rol
push
in
cmc
lock
pop
push
pop
add
lea
lods
loopne
xor
add
dec
in
mov
int3
pop
xor
shlb
xchg
xor
and
je
ret
inc
out
xorl
sub
ret
lock
arpl
cmpsb
mov
adc
adc
lds
fildl
ret
call
pusha
shrl
adc
dec
or
ljmp
xor
loope
rorb
sbb
sbb
mov
lock
popf
sbb
xchg
pushf
aaa
mov
inc
mov
movsb
lods
int3
inc
inc
push
cmp
mov
sbb
clc
insl
insb
lea
mov
lock
enter
outsl
add
aad
enter
xchg
scas
hlt
push
push
pop
sbb
fs
push
push
mov
aaa
jne
and
testl
push
adc
pop
xlat
imul
mov
or
repnz
insb
and
push
dec
cmp
leave
lock
iret
xor
daa
int3
movzbl
faddp
shll
pop
movd
push
push
stc
aam
scas
mov
mov
push
mov
in
rcrb
xchg
das
pop
push
sub
pop
xchg
aas
mov
mov
jl
mov
andb
pop
cmp
xchg
xchg
dec
mov
inc
pop
pop
jne
or
push
mov
cmp
dec
aaa
sti
mov
inc
enter
js
add
add
push
pop
in
sbb
insb
cli
outsl
push
cld
push
add
mov
lods
je
mov
add
mov
mov
cmp
lock
cmpl
sti
fisttpl
lock
lea
movsb
clc
mov
dec
push
mov
push
push
or
shlb
sti
inc
ja
inc
add
sbb
add
enter
add
sti
fldt
xchg
dec
push
cmp
jge
sub
sub
clc
mov
push
sbb
jmp
adc
dec
add
es
imul
jmp
shl
js
or
cmp
pop
cmpl
pop
sbb
add
add
call
adc
or
or
mov
xor
out
cwtl
mov
add
mov
xchg
cmpl
mov
test
loopne
dec
loopne
roll
data16
loopne
cmp
ss
sbb
loope
xorb
cwtl
jmp
jae
mov
outsb
cmp
les
les
fsubrl
imull
int
mov
xchg
pop
xchg
aam
jmp
or
icebp
and
mov
inc
sti
push
add
push
xor
hlt
xchg
bound
mov
ss
push
and
jne
mov
clc
lock
push
mov
lret
fadds
mov
out
xor
aam
rcl
rorb
adc
or
jmp
popa
mov
xchg
mov
call
add
jle
mov
adc
add
int3
xor
shr
xor
cmp
cli
cmovge
xchg
rolb
mov
popa
lock
sar
xchg
js
inc
add
imul
and
or
mov
or
insl
push
hlt
and
adc
into
in
std
push
and
adc
push
push
mov
push
sti
imul
loop
adc
add
shll
mov
add
jmp
cmpsl
loope
out
jbe
inc
add
aam
or
jmp
mul
xor
or
add
sub
push
adc
rorl
add
fsubs
add
movsl
mov
mov
mov
aad
iret
sub
or
call
push
pop
jns
push
lock
mov
out
push
stos
cmc
test
cld
je
mov
sbb
or
call
out
or
mov
and
sub
push
repz
push
fdivrl
int
lea
jae
sub
jns
xor
hlt
in
add
out
lcall
hlt
sbb
push
cld
sub
ffree
icebp
xor
shrl
roll
ret
mov
jae
push
lock
adc
hlt
fwait
adc
mov
mov
mov
sar
cmp
jne
cmpb
pop
sub
sub
xchg
jne
andl
push
call
cltd
jbe
mov
rcr
or
fs
cmp
fcomp
cmp
scas
in
ret
mov
jmp
jmp
xchg
xlat
dec
fmul
jmp
jo
test
sub
xchg
pop
mov
sbb
nop
and
pop
jmp
push
sbb
pop
js
pcmpgtb
std
pushf
clc
push
and
incl
repnz
add
pop
pop
xor
leave
cs
dec
xorl
outsb
cwtl
dec
dec
aam
dec
pusha
add
mov
es
es
and
and
push
jmp
mov
mov
xor
dec
pop
push
or
cmp
push
aad
loop
iret
in
dec
lcall
lahf
cltd
dec
pop
mov
and
add
mov
cmp
dec
das
dec
ljmp
imull
xchg
ret
out
add
lock
insl
enter
imul
iret
sub
pop
jg
and
sbb
daa
rorl
push
bound
jno
sbb
dec
shlb
in
and
push
mov
sub
dec
std
lea
or
inc
movsb
xchg
daa
push
repnz
in
shll
js
push
xor
mov
mov
sbb
call
add
adc
lock
lahf
and
add
cmp
fsubrs
add
in
iret
mov
shrl
test
cld
or
daa
or
lock
mov
xor
inc
out
enter
test
aaa
fdivl
add
loopne
mov
cwtl
mov
bound
cltd
cmpsl
mov
cwtl
xor
xor
int
test
int
fistpl
stos
arpl
shrb
movsb
sub
push
loopne
loope
and
lea
push
shlb
addb
pop
mov
push
outsl
mov
jae
dec
popf
test
cltd
xchg
jns
das
and
push
add
push
push
popf
pop
xor
xchg
addb
mov
sbb
mov
xchg
pop
and
xchg
push
xchg
test
fnsave
mov
in
inc
push
sbb
pop
xor
mov
mov
fcomi
stc
add
cmp
rolb
add
adc
and
cs
lea
mov
decl
mov
das
inc
outsl
sbb
ret
inc
xchg
xor
mov
addr16
into
jle
jmp
xor
out
adc
dec
cld
mov
dec
test
inc
testl
out
movsb
mov
fisttpl
xor
movsb
inc
lahf
orl
adcb
repz
jge
add
xor
push
mov
popf
sbb
cmp
int
xor
mov
jno
jne
push
cmp
aas
sbb
mov
or
add
push
dec
cmpl
jb
lahf
loope
mov
movsb
cld
cmpl
jbe
das
pop
loop
nop
js
mov
mov
gs
in
xlat
cld
and
mov
bound
mov
cld
clc
sarl
add
inc
sbb
addb
adc
mov
mov
and
adc
jp
or
es
cmpsb
add
or
out
mov
popf
or
pop
push
pop
jl
imul
sbb
enter
adc
mov
mov
out
popf
mov
ret
ret
sub
vpackssdw
push
es
jne
jl
cmp
shrl
or
adc
loop
adc
push
pusha
ljmp
fs
cmp
jae
push
mov
leave
or
xchg
jecxz
add
cmp
jo
movb
lahf
mov
mov
mov
and
dec
mov
mov
mov
and
fsubrs
lret
lret
xchg
outsb
shl
ret
push
sarl
faddp
mov
or
scas
lods
push
insb
sub
lods
lods
add
lcall
add
cmpl
or
and
test
test
in
mov
push
jnp
imul
es
jne
cmp
or
add
fwait
and
xor
xor
fbstp
mov
shl
mov
fldcw
push
test
test
out
pop
sub
or
jno
pop
test
call
cld
movsl
xchg
sbb
movsb
sub
xchg
lret
mov
pop
mov
mov
push
mov
imul
pop
or
mov
enter
insb
sub
and
cmp
ret
lock
or
and
mov
imul
sbb
mov
shll
mov
divb
xor
jae
mov
test
out
mov
mov
mov
ds
jmp
mov
or
sahf
mov
sub
in
xor
js
sbb
rorl
or
ret
jecxz
ja
pop
xchg
es
in
add
in
in
scas
shll
in
mov
mov
or
dec
icebp
mov
insl
dec
sti
scas
push
and
add
lret
jo
imul
repnz
mov
dec
mov
in
xchg
or
sti
fcomp
sbb
sbb
cs
jns
roll
ljmp
fmuls
dec
jno
add
sbb
adcb
int
imul
and
mov
mov
lea
mov
cmpsb
jae
push
clc
rcrl
leave
sub
js
notb
je
cwtl
or
jae
cs
xchg
mov
in
aam
orl
push
movsb
loopne
push
lock
cmp
jne
call
in
add
jmp
loopne
int
jb
loopne
shlb
mov
xor
sbb
shl
icebp
add
int
jg
enter
test
enter
js
lret
subb
xchg
cs
push
enter
xor
mov
cwtl
aas
fs
xchg
xchg
xchg
enter
xchg
add
les
gs
es
jle
pusha
and
rcrb
cmpsl
imul
sahf
rcl
iret
enter
nop
enter
mov
mov
jb
fcomip
addb
add
push
enter
lods
xor
out
loopne
loopne
sbbb
push
andb
cli
jno
xor
mov
je
call
cmp
aam
mov
jae
rcrl
cmp
call
div
sub
dec
sbb
jp
movsb
stc
jmp
fcomp
pop
fmuls
test
scas
scas
or
fimuls
je
dec
mov
dec
sub
lods
and
aam
shrl
enter
mov
xor
cmp
dec
push
add
push
push
pusha
cs
pop
xlat
push
test
testb
test
jmp
and
jnp
dec
and
add
lods
je
into
dec
call
test
sbb
test
push
das
mov
daa
mov
movsl
jb
movsb
outsb
test
xlat
pushf
hlt
mov
push
or
add
adc
out
xor
push
mov
pop
test
sbb
insb
push
test
or
xchg
xchg
jo
xlat
ret
dec
or
test
movsb
pusha
sub
je
mov
add
cld
nop
cmpsb
cmp
jle
ja
lret
hlt
cld
hlt
es
add
cmc
ja
dec
add
add
aas
adc
ret
adc
lods
aas
mov
jp
add
inc
or
loopne
mov
jne
clc
add
jl
insl
sub
mov
ret
and
add
lcall
mov
inc
push
ret
mov
shl
pop
add
sub
mov
add
adcl
or
je
data16
or
sub
adc
fistpll
xor
mov
add
mov
test
sahf
popa
imul
add
scas
mov
sub
or
sbb
dec
aad
insl
cmp
and
insb
pusha
incb
add
rclb
mov
mov
je
cmp
fs
cwtl
jge
cmp
cmp
sbb
pushf
xchg
push
cmpsb
cmovs
sub
jns
or
nop
lret
aad
sarb
pop
test
or
push
lcall
hlt
ret
addb
or
loope
mov
movsb
bound
pop
xchg
cwtl
push
mov
add
xchg
in
test
cmp
or
out
hlt
push
jne
push
js
adc
test
je
aam
popf
hlt
out
cli
or
pop
pop
xchg
or
daa
pop
pop
es
xchg
or
xchg
xchg
fadd
dec
mov
enter
push
call
inc
cwtl
imul
test
or
mov
rorb
movsb
add
pop
cs
ror
fs
inc
sub
fidivs
and
inc
adc
shl
repz
scas
in
cmp
fs
aaa
fs
mov
and
push
dec
inc
repz
adc
fwait
pop
mov
mov
inc
test
loopne
sub
fisubl
jo
js
in
inc
je
inc
pusha
jmp
in
jbe
add
decb
adc
mov
and
push
cmp
rolb
sbb
ret
or
hlt
pop
test
dec
push
push
cmp
adc
fcomps
jmp
xchg
cwtl
int
pushf
cmp
std
aas
insb
std
icebp
testl
inc
push
cmp
out
mov
cmp
outsb
cmpsl
cmpb
sbb
es
rorb
call
adc
add
adc
jbe
ljmp
cld
cltd
push
sub
xchg
xchg
shll
add
test
mov
dec
push
sub
das
and
inc
pop
outsb
dec
popl
adc
jl
mov
inc
add
xchg
sbb
cwtl
add
dec
mov
sub
cmp
jge
aas
mov
sub
mov
rolb
dec
pop
sbb
or
xchg
sbb
adc
nop
out
dec
xchg
call
adc
xchg
and
dec
inc
jge
xchg
bound
xchg
dec
gs
fadds
out
jnp
jne
adc
out
cmp
cmpl
mov
and
mov
std
mov
mov
mov
sbbl
mov
add
enter
std
push
test
sbb
lods
cmp
fmuls
cmp
adc
push
cmp
lods
andb
or
jbe
push
xchg
xchg
out
add
sti
inc
out
mov
sbb
je
push
pop
verr
mov
mov
fs
add
dec
and
fldcw
adc
sahf
push
pop
pop
xor
daa
mov
inc
popf
inc
imul
pop
ljmp
pushf
std
pusha
movsl
subl
fld1
cmp
in
sub
adc
pop
faddl
dec
cwtl
push
or
mov
sbb
cmp
adc
enter
pop
repz
push
inc
sub
cmpsb
cmp
jbe
xorb
xchg
imul
jl
xchg
sbb
mov
cmp
pop
repnz
sbb
mov
dec
xchg
mulb
clc
inc
pop
fs
ljmp
or
jge
popf
addb
insb
xchg
or
jge
mov
loopne
add
inc
jnp
mov
add
dec
pushf
outsl
lahf
imul
mov
pop
adcb
shll
dec
mov
pop
std
imul
pusha
sti
push
pop
push
and
and
cmp
je
in
sbb
nop
je
xor
dec
pop
xor
inc
lds
mov
pop
iret
stc
add
addb
mov
sbb
dec
push
xchg
pop
daa
sub
lods
in
xchg
mov
or
movsb
test
sbb
add
movsb
xorl
sub
adcb
cmpl
jae
fsub
add
sbb
nop
clc
sbb
in
jge
imul
aad
sub
aaa
shlb
mov
mov
sbb
cmp
add
cmp
xor
inc
mov
shrl
push
mov
mov
pusha
push
jnp
pop
mov
in
cmp
dec
sbb
mov
mov
inc
push
sub
xchg
mov
mov
fstpt
pop
jp
and
pop
test
add
jne
pop
outsl
sbb
sti
push
or
aad
lea
mov
mov
das
lcall
sbb
or
xlat
sub
mov
or
mov
dec
lds
mov
xchg
arpl
in
push
and
out
sbb
aad
rcr
insb
test
cmp
push
adc
roll
or
adc
cs
cmp
push
push
adc
push
aam
push
add
pop
nop
inc
or
add
push
cld
mov
std
sbb
in
pop
std
adc
mov
xchg
js
push
jge
fwait
lods
andb
jl
or
inc
mov
lea
push
add
inc
fistps
add
or
mov
loop
addl
out
push
and
leave
ret
sub
adc
pop
adc
jo
aas
popa
add
dec
and
and
xchg
pop
or
test
dec
xor
jmp
adc
add
dec
sub
jno
dec
or
add
and
das
and
lock
mov
shl
ror
adc
push
jge
jmp
test
pop
add
fucomp
and
mov
jmp
sbb
push
test
push
lods
in
mov
jmp
jnp
jno
fwait
mov
mov
imul
add
jmp
lea
push
cmp
xchg
push
shrl
nop
add
pop
out
sub
mov
mov
popa
cwtl
jp
test
dec
xor
mov
mov
xchg
mov
fadd
xchg
js
push
jl
push
mov
nop/reserved
xor
aad
aas
fwait
dec
xchg
or
jle
lds
mov
leave
dec
dec
pusha
shrl
rcll
arpl
and
xchg
cmp
mov
jmp
xchg
and
je
jl
stc
push
test
cmp
cltd
inc
pop
mov
leave
xchg
xor
xchg
xchg
in
add
subb
dec
sub
pop
mov
lea
jb
sbb
mov
test
mov
push
adc
lret
xor
mov
jmp
jmp
xchg
mov
outsb
inc
adc
adc
xor
and
mov
pushf
sub
pusha
adcl
xor
mov
or
fstps
xchg
mov
scas
push
mov
pusha
outsb
sbb
cmp
mov
jmp
insl
and
pop
loopne
and
jnp
add
dec
repz
negb
nop
mov
xchg
sub
xor
xor
add
popf
adcb
xor
push
leave
add
sbb
jne
and
push
int3
aas
scas
add
pop
sbb
sub
push
lods
dec
cmp
adc
roll
pop
scas
popl
outsb
adc
mov
les
add
push
mov
icebp
aas
icebp
sub
mov
mov
sub
test
lods
add
add
dec
adc
ljmp
and
xchg
ret
loop
fwait
lods
or
ljmp
stc
add
addb
pop
ds
mov
std
xor
adc
fwait
jne
ret
addr16
adc
pusha
add
outsl
dec
int3
xchg
inc
daa
aad
orl
adcl
pop
pop
movsl
mov
ss
xor
push
mov
je
iret
pushf
das
pop
cmc
fsubs
sbbl
lods
rcrl
ja
nop
dec
adc
jmp
xchg
dec
sarl
sub
sub
stos
inc
and
cltd
dec
pushf
leave
dec
es
push
popf
mov
movsl
push
gs
je
mov
cs
push
or
pop
pop
xchg
or
push
fwait
arpl
mov
testl
pop
test
stos
mov
cmpsl
stos
sub
mov
add
jb
dec
push
and
enter
pop
adc
pop
dec
aaa
faddl
out
add
pop
popa
xchg
sub
lret
push
sbb
jle
out
fcoms
pusha
cmp
adc
in
test
je
call
sbb
cmp
push
dec
neg
sbb
cmp
mov
test
mov
xchg
cli
xor
inc
shrb
sub
jmp
xchg
push
pop
sub
mov
jnp
cmp
je
lahf
sub
dec
test
int
aaa
adc
inc
cmp
hlt
cld
cmp
push
xor
cmp
add
cmp
scas
inc
lahf
rorb
cmpl
sub
pop
test
sbb
sbb
arpl
inc
dec
xor
mov
in
sbb
jp
jne
jno
pop
insb
cmp
push
add
push
xor
addr16
popa
inc
and
fisubl
inc
decb
int
jns
loopne
xor
out
lret
add
movsb
inc
cmpsl
mov
movb
sub
cmp
sahf
stos
adc
ret
lret
rcrb
sbb
mov
pushf
and
or
push
dec
leave
fisubrs
leave
clc
mov
loopne
sbb
insb
push
push
or
andb
sbb
push
sub
rolb
pop
mov
or
lods
or
fmull
scas
inc
subb
std
add
and
filds
jmp
push
or
es
jo
loope
cmpb
dec
mov
mov
loopne
mov
lret
daa
fs
pop
add
es
push
cmpsb
jne
and
scas
mov
mulb
pop
inc
push
add
pop
xchg
jbe
sti
test
xchg
cmp
pop
add
add
pop
call
jns
and
add
sbb
xchg
jecxz
call
aad
or
xchg
or
imul
stc
fldl
push
and
jb
stc
in
push
arpl
mov
push
cmp
mov
mov
add
xor
mov
push
sbb
mov
add
xchg
lock
jg
mov
add
clc
push
testb
int3
cmp
sub
and
push
nop
test
lods
std
aam
fucomp
les
cmp
test
or
cmpsb
popl
sbb
inc
movsb
enter
sub
fsubrl
push
xchg
dec
sub
and
mov
mov
cmpsb
inc
shll
add
in
or
fistpll
mov
mov
xor
test
push
in
mov
jg
je
inc
push
push
jl
faddl
pop
imul
sbb
dec
add
test
dec
test
outsb
or
xchg
cmpsb
cmp
mov
xchg
cli
jl
test
adc
pop
push
dec
add
mov
dec
lds
inc
pop
push
or
stos
mov
xchg
adc
dec
inc
mov
lcall
call
jns
jae
cmp
test
js
mov
add
add
jo
push
imul
add
xchg
xor
push
mov
imul
push
or
mov
movl
loop
inc
jg
outsl
add
mov
mov
paddq
add
fmull
test
shrl
imul
les
shll
push
and
adc
add
add
dec
dec
inc
outsb
mov
pop
adc
lea
and
inc
add
push
rcr
cwtl
inc
push
imul
dec
pop
outsb
je
cmp
mov
adc
push
aad
xor
and
inc
pop
int
daa
jne
inc
add
cmp
cmp
xor
je
cmc
sbb
in
dec
in
mov
ja
sbb
mov
push
lds
xor
stos
jb
testl
fwait
add
cltd
aad
and
jno
lar
cmp
mov
cmpsb
popa
sbbb
aad
pop
outsb
ret
cli
pop
pushf
push
pop
or
push
loop
sbb
dec
xor
sub
sahf
cwtl
mov
mov
addr16
jne
sub
jecxz
push
mov
int3
pop
mov
out
push
mov
push
arpl
mov
in
add
pop
data16
lock
pop
sbb
sbb
test
mov
push
adc
fildl
inc
jb
cli
js
add
in
icebp
and
xchg
xor
push
or
jne
xor
push
pop
jbe
push
xor
cmpsl
fdivs
and
push
flds
ret
lret
pop
push
out
repz
dec
mov
pop
out
jnp
adc
cmpsl
sub
or
addl
lret
cmpsb
mov
jmp
daa
cmp
mov
dec
popa
push
inc
imul
mov
or
xlat
fnsave
out
imull
rcrb
lods
dec
pushf
js
sbb
in
jl
sahf
inc
pop
dec
pop
je
pop
subl
xor
and
cmp
test
adc
jb
std
adc
test
stos
inc
push
sub
out
jne
mov
push
rcrl
and
push
push
stc
mov
nop
lret
mov
add
ss
and
loop
push
lds
mov
mov
sbb
dec
enter
repnz
fbld
push
fs
cmp
xchg
jno
roll
xor
mov
shl
repnz
and
xorl
out
and
movsb
push
or
js
dec
lds
mov
lret
sbb
test
and
scas
dec
pop
xchg
xchg
xchg
lret
or
fs
sub
xchg
addl
mov
xchg
and
lret
xchg
sub
jo
bound
push
adc
nop
xchg
mov
mov
cmpsb
jge
push
mov
add
and
imul
dec
shl
xor
pusha
std
jno
out
orb
idivb
fimull
and
mov
push
andl
sub
addb
cmpsl
push
add
or
push
mov
int
add
out
ret
xor
enter
shlb
inc
out
imul
sti
or
movl
xchg
mov
dec
les
ljmp
inc
push
lea
or
loopne
cwtl
sbb
inc
sub
ds
xor
mov
testl
mov
cmp
mov
sti
enter
les
adc
sbb
rolb
adc
push
movd
jle
push
mov
addr16
xor
pop
mov
cmp
cmpl
cmp
mov
cmpl
cli
jmp
int3
sub
xchg
push
inc
or
mov
jns
push
clc
aaa
in
jns
sbb
cmp
or
outsb
test
nop
fdivrl
or
or
lahf
fildll
cmpl
je
or
je
add
push
pop
shll
adc
aam
dec
or
subb
fwait
inc
ljmp
add
movsb
test
or
sahf
fwait
xchg
inc
mov
loop
pop
dec
or
mov
adc
add
xchg
addb
imul
shlb
jne
cwtl
mov
lea
push
cs
fidivs
lods
fcomi
and
cmpsb
push
cmc
or
jmp
out
or
mov
cs
sub
add
cwtl
outsl
push
and
dec
add
push
adc
add
js
and
add
andl
stc
adc
mov
std
shlb
add
jbe
cmpl
aam
clc
jge
jge
dec
loope
cmp
daa
or
repz
sub
fcoms
pop
add
pushf
lret
add
test
stos
and
loope
ljmp
lret
mov
add
stos
add
add
xchg
xchg
cmpsb
sbb
push
lahf
sub
loop
mov
pop
scas
fs
or
adc
sub
xor
adc
sbb
add
xor
mov
xor
adc
arpl
xchg
pop
add
jae
out
push
push
mov
pushf
or
sbb
sub
jmp
xor
dec
mov
xchg
xor
inc
pop
pop
int3
or
mov
addr16
dec
adc
xchg
mov
clc
in
cpuid
data16
mov
in
and
mov
mov
outsl
ret
jg
mov
jmp
push
sub
push
jp
dec
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
adc
arpl
call
push
pop
pushf
loopne
sub
lods
rorb
loop
cmc
shlb
xor
pop
out
rolb
je
push
fdivs
sbb
pop
js
push
mov
push
int3
mov
inc
out
xchg
insb
gs
add
je
in
push
cmp
bound
sub
sbb
sub
js
mov
xor
push
scas
adc
fsubrp
adc
jl
cmpps
pop
inc
inc
dec
inc
add
fdivrs
mov
mov
inc
movsl
imul
arpl
push
adcb
aam
or
mov
cmp
mov
pushl
int
mov
pop
mov
jmp
sub
cmp
mov
rolb
jbe
jbe
sub
cwtl
xchg
mov
mov
pop
mov
loop
sti
jbe
scas
xor
orb
xorl
xlat
cmp
jne
or
ja
loopne
or
dec
sti
cld
add
push
sahf
sbb
add
push
aad
adc
cltd
fsubl
dec
rorl
pop
xor
pop
push
call
scas
add
shlb
push
mov
sbb
ret
hlt
jno
adc
and
push
test
loopne
rcl
jmp
push
jl
movsb
popf
add
cwtl
mov
loop
cld
clc
dec
stos
arpl
and
pop
inc
add
movsb
sti
ljmp
out
sub
adc
test
or
cmp
mov
sub
add
mov
cmp
nop
int3
int3
mov
cmpsb
sbb
sarl
or
lods
add
cmc
fbld
fs
cwtl
add
push
pop
pop
and
sti
mov
adc
fsubs
aam
jbe
inc
adc
test
lods
mov
into
cmpsb
enter
add
dec
mov
or
or
mov
loopne
scas
sti
inc
test
shll
test
sub
xor
movsl
enter
pop
add
xor
dec
pop
cwtl
movsl
sub
inc
ja
xor
or
or
jmp
inc
pop
ret
xor
jmp
incb
iret
sub
ja
mov
push
pushf
xchg
mov
repz
nop
jg
mov
xchg
mov
pop
xchg
out
push
imul
pop
sbb
incl
adc
add
add
push
pop
or
adc
or
mov
fiadds
push
push
movups
adc
mov
js
mov
pop
cmpsl
add
add
sbb
ljmp
pushl
xor
mov
in
cld
neg
arpl
xchg
es
jecxz
lock
pushl
roll
dec
push
nop
mov
push
add
jns
dec
ret
dec
enter
fs
xchg
mov
adc
testl
sbb
dec
jecxz
and
add
or
push
mov
lret
mov
shll
in
inc
lea
push
pop
ret
cld
or
pop
push
dec
cld
cwtl
and
jnp
dec
lret
xor
pop
mov
pop
jo
imul
ja
lds
faddl
jne
cmp
xchg
lock
push
push
lahf
or
mov
fisubs
dec
in
ja
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
and
xor
or
inc
pop
push
test
cmp
lahf
and
jmp
xorl
outsl
or
jmp
incl
add
dec
aas
sub
jo
or
sbb
or
jl
addl
add
xlat
fdivr
ja
or
pop
xor
ljmp
out
scas
cmp
push
repnz
xlat
mov
adc
xchg
je
je
ret
sub
lret
push
sbb
sub
and
sbb
xor
stc
add
test
push
sbb
es
cmp
loope
pop
sbb
enter
add
arpl
sbb
std
and
push
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
mov
add
and
test
cwtl
out
sbb
jge
jmp
cs
imul
insb
mov
fmull
jne
mov
das
mov
jns
push
das
adc
je
imul
mov
adc
jne
inc
lcall
cmp
push
adc
jge
cli
add
cmp
jne
roll
adc
jecxz
inc
or
cmpsl
inc
shrl
je
sbb
das
movswl
push
or
subb
push
jo
or
mov
pop
clc
cwtl
je
leave
xchg
cmp
jl
ljmp
push
movlps
jnp
push
enter
or
ret
xchg
sbbb
shlb
xor
add
sbb
stc
add
and
imul
adc
out
pop
arpl
inc
pusha
jns
or
sbb
jne
loope
push
mov
pop
or
repz
inc
xchg
sub
cmp
pusha
push
rolb
jnp
or
cli
adc
inc
das
shlb
push
jecxz
ja
mov
adc
xor
push
adc
mov
dec
xchg
mov
loope
aaa
gs
add
adcl
loop
je
out
in
lods
inc
cmpsl
call
add
adc
xchg
cmp
xor
cmp
clc
push
ss
dec
or
push
and
add
sbb
shrl
loopne
in
test
jmp
xor
inc
sbb
mov
cmp
fwait
inc
add
int
stc
mov
push
fwait
lcall
and
pop
pop
add
add
add
or
das
push
mov
lock
add
push
inc
popa
in
xlat
orb
shrl
inc
and
or
shll
add
dec
cmp
lods
sti
orl
clc
jmp
xor
lret
insl
orl
pusha
adc
cmp
jmp
adc
add
rcrl
dec
mov
lret
push
sub
xor
mov
ret
pop
add
fiadds
bsf
push
sub
insl
clc
push
cmp
inc
in
nop
push
stc
jbe
enter
adc
mov
sub
fsubrl
mov
imul
add
pop
cmp
xchg
lds
movsb
add
mov
push
rclb
bound
aaa
adc
loope
cmp
loopne
pop
test
pop
push
mov
push
jo
sar
add
sbb
push
sub
cmp
sahf
test
lock
lods
les
or
cmp
inc
hlt
pop
movsl
jb
mov
pop
pop
stc
cmpsl
pop
cmp
jno
or
and
clc
jmp
mov
dec
cmp
insl
out
js
mov
cld
or
add
nop
mov
jae
cwtl
xchg
inc
roll
mov
sbbb
jge
cld
scas
cmp
pop
jne
ds
lret
aam
je
pop
add
jno
icebp
imul
adc
mov
lock
xor
in
xchg
mov
adc
cmp
pop
add
sbb
lods
adc
cmp
pushf
addb
lock
and
hlt
push
push
cmp
gs
jnp
fisttpl
test
pop
dec
jmp
aaa
sbb
mov
repnz
loopne
cli
rcl
cld
ret
fwait
xchg
wbinvd
pop
xabort
mov
push
icebp
aad
fs
push
sbb
xor
sub
andl
or
test
clc
lds
add
in
cmp
je
mov
enter
cli
mov
sub
jne
shl
xchg
mov
or
push
and
dec
or
jnp
or
inc
nop
add
xchg
add
arpl
pusha
or
cmp
adc
out
jmp
adc
or
jge
rol
adc
add
mov
clc
psllw
push
sub
lea
hlt
loopne
add
pop
push
into
call
pop
sub
jbe
dec
add
loopne
cld
neg
and
cmp
xor
je
adc
add
lahf
jns
adcl
insb
cmpsb
ss
rep
incb
or
imul
push
adc
mov
xchg
cmp
iret
lcall
add
pop
mov
jmp
shlb
inc
mov
jo
and
adc
sub
cld
dec
pusha
inc
mov
add
in
cld
push
push
lds
mov
or
cld
sbb
pop
cmpl
in
mov
xor
push
push
mov
mov
mov
xchg
fcoms
arpl
or
dec
call
mov
add
adcl
call
fnstenv
and
repz
cmp
pop
inc
or
shll
mov
outsl
or
fdiv
cmp
jne
scas
je
sub
loopne
dec
test
movl
stos
dec
inc
loopne
test
loopne
pop
daa
movsb
test
test
cmpl
sub
stos
or
dec
jl
bound
or
scas
sub
and
xchg
imulb
or
mov
fidivrl
jnp
xor
xchg
inc
mov
ret
mov
push
xlat
inc
aas
or
dec
pop
adc
or
push
or
je
adc
test
fiadds
pop
xorl
rcrl
cs
jae
or
push
inc
sub
cmp
sub
xor
repz
mov
add
adc
sbb
push
jns
inc
add
inc
sbb
outsb
fadds
or
roll
xchg
les
call
stc
mov
mov
sbb
jmp
clc
jg
sbb
mov
arpl
mov
push
mov
push
les
iret
in
js
add
push
addb
push
cld
mov
cmp
cmp
jne
lock
or
cmp
sbb
clc
es
and
pop
loopne
add
or
popa
and
roll
jns
aas
sbb
loope
fs
push
lock
mov
je
orb
and
jl
push
in
pop
adc
lahf
jecxz
and
inc
enter
xchg
dec
in
lea
push
bound
push
sbb
aas
dec
fnstenv
enter
mov
pusha
loopne
jp
mov
add
dec
pop
movb
outsb
test
push
pop
fiaddl
call
dec
dec
outsb
and
push
add
sbb
daa
fists
inc
das
mov
adc
jmp
mov
or
add
int3
dec
sub
inc
sub
inc
or
inc
cmp
jle
dec
adc
cmp
lahf
bound
sbb
jo
mov
aad
les
or
jmp
cmp
push
lea
shl
push
ret
jne
out
pop
push
pop
jo
shlb
inc
das
push
pop
jl,pn
mov
lds
dec
sub
push
nop
lcall
add
mov
pop
pop
add
pushf
sarb
adc
or
and
add
sub
sub
add
es
jmp
and
mov
inc
add
push
xor
xor
sbb
xchg
ret
add
jb
sub
or
push
mov
and
mov
and
add
jbe
sahf
lods
mov
test
adc
jb
adc
test
add
mov
pusha
insl
insl
int
push
jmp
sti
adc
mov
add
inc
mov
lea
dec
push
sub
es
fsub
push
pop
aaa
in
shl
fs
pushf
cmp
je
imul
loop
and
clc
jne
popf
lods
sub
das
and
in
jge
addr16
push
and
and
push
jecxz
cmp
shlb
loopne
in
sub
dec
in
push
xor
addr16
push
icebp
sub
popf
mov
mov
jo
or
inc
xlat
push
pushf
sub
sbb
cmpsl
cmc
add
xor
test
pop
aaa
xchg
xchg
push
call
cltd
add
jb
add
call
jno
sbb
or
stos
fisubrs
mov
push
fimuls
sbbb
or
or
in
push
xchg
lock
add
cmp
sbb
push
sub
stc
lods
insb
xchg
jl
push
shll
fcmovnbe
mov
xchg
stos
inc
dec
fxch
dec
lods
pushf
call
mov
mov
outsl
mov
and
jmp
imul
nop
repnz
xchg
push
or
andb
jnp
mov
adcb
pop
mov
mov
popf
inc
lea
cltd
in
push
dec
mov
xchg
mov
andl
stc
jmp
or
pusha
test
and
add
pminsw
test
or
push
xor
jecxz
pop
mov
test
fs
mov
in
loopne
inc
xchg
jbe
mov
loope
dec
ret
jbe
inc
or
mov
inc
negl
adc
ljmp
test
cmc
cmp
add
adc
shr
and
imul
orl
call
lods
push
jmp
jbe
pop
dec
hlt
jge
enter
cli
mov
add
scas
jno
in
add
push
movsb
xchg
add
insb
lds
jmp
lahf
cmp
cmp
fisubrl
xchg
repnz
cmp
dec
jge
fcoml
insb
push
and
jmp
sub
jae
out
jne
push
xlat
inc
test
adc
neg
mov
dec
or
pop
dec
or
mov
shl
push
or
push
pop
and
dec
movsl
out
fsub
adc
jge
arpl
loope
imul
in
pushf
shrb
cmp
sarl
or
loop
je
mov
push
add
insl
add
shll
xor
or
fdivs
xorb
stos
dec
xor
mov
int
cmp
inc
mov
inc
mov
jae
fistl
stc
xchg
jne
scas
mov
rolb
ss
fsubr
sbb
insl
fcmovne
cmp
fwait
jns,pn
push
inc
inc
sub
xchg
subb
dec
lret
jmp
daa
push
and
leave
pop
popa
mov
pop
sub
test
rcll
add
pop
adc
int3
imul
adc
popf
int3
sub
ja
int3
cmp
jae
cmp
xor
mov
lock
test
xor
mov
sbbb
fcoms
cmpsb
les
fisubrl
push
cmp
clc
jne,pn
daa
dec
jne
push
stc
dec
dec
jne
adc
jne
loope
inc
pop
std
pop
iret
das
pushf
es
adc
lods
sub
repz
inc
adc
adc
or
mov
mov
jno
jge
mov
clc
aaa
mov
dec
mov
jne
add
add
insb
dec
pop
addl
dec
imul
hlt
fldt
or
movsl
mov
fcomi
cmp
push
and
dec
int3
loopne
call
test
jbe
gs
in
pop
push
adc
pop
push
scas
roll
das
fsubs
lock
add
cmpsl
roll
add
insb
adc
jecxz
lcall
sub
pop
out
andl
popl
cmp
sti
fsubrs
or
pop
imul
mov
inc
loop
and
cmp
or
mov
lret
jle
enter
je
or
cmp
pop
jae
cmp
insb
jbe
mov
mov
mov
jmp
decl
jl
dec
push
add
push
movsb
dec
sbb
pop
sbbl
jo
push
add
in
jge
or
lock
adc
pop
aad
adc
in
mov
popa
jb
fnstcw
jmp
and
dec
inc
test
dec
dec
xor
push
add
ret
dec
out
adc
push
ds
dec
push
xlat
mov
push
jmp
dec
mov
gs
lea
rolb
pop
imul
push
push
in
mov
sbb
push
sub
or
imul
pop
mov
loopne
movsl
rcr
xchg
push
fiadds
movsl
add
sbb
adc
mov
fadds
int3
adcb
hlt
add
jo
shrb
push
sub
xchg
lods
mov
jb
out
mov
sub
xchg
lahf
xchg
mov
push
push
xchg
cld
movzbl
xor
stc
xchg
sbb
xor
gs
cs
aaa
dec
cmp
mov
and
and
mov
testb
fadds
xor
movsb
sti
mov
hlt
dec
and
mov
cmp
push
pop
and
lods
icebp
mov
insl
mull
push
pop
mov
xor
leave
push
pop
mov
shrl
sub
movsb
xor
aaa
and
fadds
sbb
sub
or
dec
loop
in
pop
mov
xchg
out
nop
hlt
dec
in
mov
mov
sub
popa
adc
push
in
mov
xor
adc
mov
lahf
insb
push
xchg
xor
cwtl
pop
pop
xchg
test
or
outsb
add
xor
inc
sbb
popa
mov
test
mov
adc
xchg
addb
sub
movsb
sub
mov
sbb
lods
pushf
loopne
mov
or
sahf
hlt
daa
fs
xor
or
mov
and
pop
enter
xor
mov
and
pop
cmp
nop
cmp
sub
push
popa
mov
push
and
dec
andb
mov
jns
xor
clc
pushf
jns
or
loope
das
lret
aam
in
xor
hlt
das
sub
in
pop
mov
mov
lods
cmp
mov
pop
mov
sub
lahf
jbe
out
mov
nop
pop
lcall
jnp
mov
call
dec
xor
xor
repnz
xlat
adc
in
pop
or
mov
pusha
lret
mov
or
push
adc
daa
jne
xchg
enter
fs
test
addr16
sub
sub
add
adc
and
pop
jp
es
xchg
add
xchg
movsb
dec
test
dec
add
jmp
cmp
push
push
mov
pop
add
pop
mov
fdivrl
mov
add
sub
adc
dec
inc
cld
sbb
cmp
bound
cmp
jns
or
arpl
jg
ret
push
adc
pop
sti
cld
shl
push
test
addb
cmp
or
lock
mov
and
ds
lock
ret
push
call
loopne
popa
sub
sub
cmp
jl
mov
or
outsb
push
in
lea
mov
jmp
jae
lcall
loop
xor
sbb
shll
mov
ret
mov
adc
and
mov
out
pop
hlt
shr
jb
dec
rcrl
inc
rcll
shrb
mov
jae
gs
adc
push
aas
mov
jnp
cmp
cld
push
pop
rcrl
popa
cld
cmp
mov
inc
mov
insb
push
sub
jmp
sti
clc
mov
mov
shrl
mov
mov
cld
mov
jmp
loopne,pt
and
inc
js
xor
or
les
in
or
adc
mov
mov
inc
or
test
std
jae
pop
xor
mov
daa
pop
adc
mov
xchg
push
rorb
call
into
nop
std
xor
mov
out
mov
lea
jno
or
scas
xor
aam
jge
pop
ret
ljmp
and
push
cmc
cld
sahf
inc
add
add
and
fimuls
xchg
cld
leave
frstor
inc
dec
xchg
push
cltd
push
cmpl
push
jne
in
push
xor
sub
jbe
inc
jb
jmp
dec
dec
out
ret
stos
add
ljmp
shlb
outsl
jecxz
hlt
es
add
mov
mov
cld
push
jg
jp
jb
je
adcl
loope
sahf
cld
je
shl
nop
outsb
imul
aas
clc
roll
inc
daa
icebp
test
mov
xor
sub
pop
cmp
les
jg
dec
lods
jecxz
push
pop
jge
not
les
int3
pop
adc
add
pop
pop
ljmp
dec
jae
adc
push
mov
negl
movsl
mov
mov
push
jmp
push
mov
mov
inc
pop
xor
in
ljmp
sahf
mov
dec
mov
adcl
jo
cs
adc
dec
sub
jge
jns
lret
ja
pop
insb
int3
pop
or
jno
and
push
adc
push
adc
dec
mov
int3
xor
popa
push
or
xor
stos
adc
testb
jmp
push
pop
jg
dec
cmp
loopne
fcmovne
push
rolb
out
add
add
add
ja
jge
addl
addr16
subb
dec
mov
lods
push
mov
out
add
mov
mov
push
inc
inc
add
stos
loopne
outsl
popa
push
cltd
cld
jg
xor
mov
mov
add
inc
pop
test
mov
call
or
es
les
loopne
xchg
rolb
test
xor
sbb
insl
sub
cmp
push
xor
les
pop
dec
sarb
and
sbb
pop
sub
aas
mov
les
adc
adc
sbb
repz
pop
cmpsl
xchg
push
and
les
in
hlt
push
adcb
or
ljmp
imul
mov
in
push
cs
int3
in
call
sub
xor
jo
dec
sahf
cmp
les
adcl
cmp
jg
bound
in
dec
jge
orps
ror
and
inc
pop
das
add
in
adc
or
mov
lsl
mov
xchg
jbe
rcrl
cmp
popa
aad
addr16
mov
shrb
xchg
push
fadd
decl
les
lock
mov
shll
aam
lret
cmp
or
rcrl
test
push
inc
dec
or
or
test
and
xlat
imul
ret
mov
ret
data16
push
mov
mov
mov
mov
mov
mov
stc
lcall
mov
fadds
pusha
add
adc
inc
pop
hlt
add
jno
out
mov
add
push
test
nop
mov
mov
je
adc
jle
push
int3
dec
add
xor
add
mov
and
inc
or
cmpsl
mov
dec
dec
adc
sub
cmp
int3
sub
add
adc
or
pop
pop
mov
inc
ret
and
jno
cmpsl
imul
dec
add
fidivrs
aam
in
dec
icebp
sahf
inc
pop
mov
add
mov
mov
je
xchg
add
inc
or
mov
cmp
mov
dec
scas
push
push
add
fists
aas
push
mov
sbb
push
imul
cltd
into
nop
push
ja
bswap
loopne
push
xor
mov
lcall
jb
jo
js
mov
xor
sub
mov
test
ret
mov
push
add
aas
mov
and
and
stc
adc
jo
mov
adc
mov
pop
jo
jno
pusha
les
dec
pop
aad
lcall
nop
jb
pop
inc
sbb
notb
mov
xor
std
xor
inc
and
arpl
and
decb
std
movl
mov
lock
and
cmp
and
cmpsb
cmp
adc
pop
pop
pop
inc
mov
sbb
pop
orl
rol
push
sbb
stos
pop
andl
hlt
lret
inc
faddl
iret
or
inc
popa
aam
or
aam
mov
jae
jmp
jg
or
sbb
ret
dec
xor
mov
popf
arpl
hlt
ds
outsl
popa
test
pop
adc
shr
push
xchg
lock
aaa
clc
aad
cmp
outsl
push
or
xor
mov
push
addb
jb
stc
dec
adcl
mov
mov
je
in
mov
or
rcll
inc
orl
jmp
dec
or
mov
cld
or
push
pop
ljmp
stos
aam
jae
fnsave
aaa
clc
sbb
push
stc
lcall
pop
and
in
adc
int3
cltd
sbb
pop
cs
lret
adc
lods
inc
dec
jecxz
test
or
or
jne
loop
ret
mov
sbb
or
mov
repnz
mov
xor
sti
push
mov
xchg
pop
xchg
test
xchg
aam
lar
enter
mov
je
mov
or
inc
bound
js
cmpsl
xchg
dec
cld
push
adc
or
adc
xor
ror
ret
es
or
sarl
clc
jmp
add
popf
addr16
mov
push
mov
inc
pop
shll
pop
repnz
and
test
jne
and
jb
aad
enter
aas
loopne
mov
push
les
insb
test
xchg
in
pusha
mov
adc
dec
push
mov
scas
mov
sub
sar
push
jecxz
mull
subb
andl
pop
sbb
int
push
jne
xchg
outsl
hlt
pop
push
push
inc
dec
inc
adc
ret
lea
pop
call
es
movsb
push
notb
push
hlt
push
adc
mov
add
out
sub
dec
xchg
pop
call
jbe
int3
loop
fdivrs
mov
iret
adc
pop
push
dec
sub
lods
xchg
lcallw
or
pop
rorb
movsb
mov
cvtdq2ps
mov
push
push
or
or
sahf
mov
iret
lcall
in
lahf
xor
xchg
and
dec
cmp
jno
dec
cmpsl
dec
addr16
inc
loopne
jo
push
xor
dec
xor
push
sub
xchg
or
add
jecxz
dec
push
jg
inc
cmp
icebp
adc
inc
lret
rolb
mov
inc
ret
popf
and
mov
jl
pop
cmp
adc
sbb
sbb
int3
pop
pushf
dec
sbb
add
push
inc
and
sub
adcl
test
xor
ss
leave
and
lods
dec
test
jb
aam
das
fildll
int
add
loopne
in
into
or
add
cmc
adc
fldlg2
add
pop
jne
add
inc
adc
les
xchg
int3
scas
push
imul
insb
pushf
add
jl
pop
mov
ds
adc
xor
sbb
jg
inc
sarb
imul
movzwl
int
iret
jnp
rclb
ret
pop
popa
mov
pushf
fstpt
test
in
push
adc
or
mov
xchg
adc
es
add
pop
andw
jne
mov
push
push
sbb
divb
push
andb
ja
sbbb
cltd
sub
mov
sar
scas
cmpsb
fildll
enter
sub
imul
push
pop
push
js
pop
push
jecxz
in
inc
pop
dec
subb
ficomps
lods
rorb
mov
adc
or
gs
push
aad
jl
push
mov
lods
outsb
mov
xchg
push
outsl
cwtl
jo
into
and
filds
xchg
cmp
or
je
dec
aaa
outsl
inc
and
pop
test
mov
push
enter
nop
dec
mov
imul
or
or
and
or
fistpl
test
and
sbb
lods
lea
xchg
inc
pushf
cltd
pushf
sub
cmp
je
or
add
pop
shlb
mov
stos
addl
lret
or
sub
jne
and
push
test
scas
cmp
in
mull
jg
add
test
stos
mov
repnz
aad
add
adc
ret
jmp
adc
mov
or
pushf
xorl
loope
add
dec
rolb
pusha
subl
pop
pop
push
push
push
or
shrb
je
mov
cltd
dec
incl
enter
adc
shll
test
push
add
iret
push
fstl
cmp
cld
dec
push
and
sbb
out
pop
call
insl
mov
das
call
rep
mov
push
imul
add
pop
idiv
outsl
loope
shrl
mov
pop
andl
cmp
arpl
loope
sub
pop
xchg
xor
mov
adc
lahf
fiadds
push
or
push
push
rcll
jp
cld
mov
pop
test
or
fucomi
rcll
mov
aam
ret
inc
jp
and
pop
adc
add
loopne
outsb
loopne
cwtl
sub
and
xor
pop
add
movsl
mov
mov
and
add
pusha
orb
xchg
push
pushf
shl
mov
mov
push
jle
pop
or
and
out
or
test
mov
jo
cs
dec
push
mov
jge
fmuls
or
add
sub
or
jb
cmp
movsl
ret
adc
mov
not
jle
mov
lods
jbe
pop
push
lods
pushf
cwtl
jl
sahf
cmp
cmpsb
and
or
aaa
adc
pop
cmp
test
test
jp
mov
add
idivl
sbb
pop
iret
inc
pop
lret
es
push
rorb
jge
sbb
jne
and
cli
scas
cltd
mov
icebp
js
mov
je
inc
out
addr16
mov
mov
jae
xor
sbb
test
xchg
divb
and
pusha
jg
pop
lock
xchg
or
jge
push
lahf
pop
push
inc
pushf
mov
ja
andl
sub
ss
or
jmp
stos
pop
push
push
mov
shlb
mov
adc
mov
mov
push
pop
pop
xor
clc
xchg
jecxz
pushf
cmp
add
pushf
add
inc
pusha
fisttpll
pushf
jb
inc
movsb
push
test
in
ss
adc
mov
inc
sub
and
lock
jne
sub
outsb
xor
inc
call
adc
add
jecxz
add
les
sub
popf
out
cmp
cwtl
aam
pushf
lret
movsl
or
fsub
xchg
jo
cmp
fisubs
imul
jne
adc
add
add
push
mov
notl
pop
lods
xchg
jmp
in
aad
xor
sbb
dec
jo
stos
add
jno
cmp
mov
add
sbb
out
rol
lcall
mov
xchg
enter
cmpl
dec
inc
inc
lret
in
lret
add
in
mov
dec
jmp
cli
addb
push
int
cmpsb
int3
sbb
shrb
in
xchg
test
or
add
cmpsb
mov
outsb
dec
pop
scas
mov
push
enter
and
ficomps
dec
nop
dec
sbb
pop
icebp
sbb
stc
mov
push
cmp
xchg
inc
inc
test
push
lahf
test
insl
incl
fnsave
or
test
adc
mov
sub
out
fcmovnb
sbbl
add
mov
and
jg
add
sub
xchg
xor
jmp
add
inc
imul
and
inc
inc
daa
icebp
push
dec
mov
loope
and
imul
add
loop
je
lea
or
mov
jbe
jl
jo
pop
and
push
sub
jno
add
adc
add
aas
pop
inc
stos
or
mov
sub
push
xchg
rorb
sbb
aam
push
lea
push
push
sbb
arpl
loopne
inc
or
pusha
mov
inc
pop
cmp
int3
clc
imul
push
testb
mov
mov
mov
push
jmp
push
sahf
jge
xchg
ds
jmp
lret
cmp
xor
sbb
pop
adc
inc
sarb
addl
mov
or
xor
cmp
movsb
fstpt
mov
and
imul
pusha
fcmovne
lods
jge
push
stos
xchg
lret
lea
vpmacsdd
mov
xor
loopne
std
aam
sbb
xchg
add
add
sti
xchg
cmp
push
imul
cmc
pusha
add
adc
or
jo
inc
sub
rorb
dec
int
xchg
rorb
mov
or
cmp
ret
imul
sub
cmp
fmuls
sbb
cmp
outsl
insb
jne
lods
xchg
dec
enter
dec
or
cli
sub
and
dec
dec
das
lds
add
and
or
fdivrl
rcrl
xor
sbb
jne
cli
sub
sub
mov
fmul
push
dec
cmp
rolb
dec
in
mov
pop
xchg
push
jbe
push
mov
int3
xorl
push
mov
jecxz
int
enter
fistpll
push
sbb
jne
dec
dec
push
in
jmp
dec
in
add
xchg
ljmp
mov
in
fsubrl
sub
clc
xchg
mov
outsl
add
push
mov
and
jmp
lahf
inc
es
pop
or
add
xchg
stos
nop
sbb
or
loope
jge
inc
pop
jmp
adc
jge
pinsrw
es
xor
push
inc
add
mov
xchg
data16
sbb
add
cld
push
popf
add
fimull
dec
xchg
sub
cwtl
and
lods
test
jmp
fcmovnb
add
mov
pop
in
sahf
or
loop
dec
or
cmp
aas
test
adc
push
jne
mov
out
hlt
push
dec
jge
dec
inc
subl
sti
add
shlb
xor
mov
mov
sub
mov
dec
hlt
pop
sub
adc
mov
pop
mov
sbb
sbb
sarb
inc
std
mov
lret
in
sar
mov
sbb
push
push
adc
nopl
icebp
jo
hlt
or
push
mov
aaa
bound
xchg
or
ret
or
call
sbb
sbb
push
dec
scas
jg
add
lods
and
nop
js
sbb
cwtl
sbb
inc
repz
pop
je
pop
cmp
jbe
imul
mov
loopne
in
push
hlt
hlt
cmp
jne
daa
roll
movsb
or
mov
jmp
movsl
rcr
mov
dec
inc
ret
cmp
jmp
stc
jbe
bswap
inc
or
xchg
test
jge
cmpsb
fnstcw
push
aad
add
loope
jne
inc
test
sbb
xchg
push
loopne
mov
or
jbe
shrl
adcl
push
faddl
lods
adc
jno
fs
ds
loopne
dec
imul
push
or
sbb
jno
call
pop
push
leave
or
pop
jg
shl
xorb
add
cmpb
push
xor
xor
testl
adc
incb
stc
sub
lea
out
ljmp
bound
or
mov
inc
dec
jne
test
pop
jne
dec
mov
outsl
mov
pop
mov
pop
or
je
jp
fcompl
push
cmp
sub
mov
push
out
gs
mov
dec
sbb
loop
out
notb
js
mov
lods
mov
in
push
dec
call
push
mov
mov
mov
xor
lea
into
cmp
jno
js
jge
sbb
stc
insl
ljmp
cwtl
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
xor
cld
popf
sar
das
cmp
xor
test
mov
leave
ret
or
decl
and
mov
push
push
mov
jne
cmp
outsb
shll
int
mov
mov
push
sub
mov
sbb
sub
mov
jge
loopne
sub
movl
lock
adc
xchg
sbb
mov
frstor
adc
adc
rolb
add
push
arpl
mov
mov
lcall
and
test
dec
jo
insl
jb
inc
jno
sbb
mov
xor
fldenv
or
rorl
rcll
fsubs
idivb
loopne
rorl
lret
or
mov
or
out
dec
out
push
rcrb
add
push
clc
sub
not
and
mov
and
or
jb
mov
pop
xchg
mov
add
test
inc
roll
test
iret
push
push
cmc
ja
inc
cmpb
mov
xchg
mov
arpl
cs
outsb
clc
loopne
leave
loop
pop
xchg
lret
jno
push
fs
jg
ss
inc
mov
add
faddl
clc
add
cli
adc
add
cwtl
les
add
pop
cld
mov
fs
mov
out
or
shld
or
ds
rclb
cld
fbld
popf
or
jle
fs
adc
inc
mov
xor
stos
adc
xchg
jbe
jbe
dec
jbe
idivb
adc
cmp
jo
aam
push
addl
stc
jo
add
inc
inc
mov
jg
jmp
mov
call
mov
xchg
xor
add
sbb
leave
sub
fadds
andl
imul
push
push
mov
xchg
ds
out
jle
mov
sahf
enter
addb
int3
push
rcr
adc
sub
jmp
addb
xor
add
xchg
enter
in
push
sub
adc
mov
add
inc
pusha
lcall
test
out
pop
sahf
std
data16
movl
leave
inc
jmp
jmp
jle
xchg
gs
imul
mov
fnstcw
call
iret
push
xchg
negl
imulb
jmp
arpl
pop
movsl
loopne
imul
cmp
in
imull
ja
mov
jmp
cmp
add
add
adc
add
cmp
jge
cmp
orl
adc
stos
hlt
sbb
jge
sub
xor
sbb
pop
or
add
repz
addl
or
je,pt
outsl
in
inc
add
mov
ret
jmp
or
or
repnz
inc
mov
loope
test
jg
adc
dec
add
mov
pusha
push
xchg
cmp
mov
imul
xor
rol
and
push
ljmp
shll
mov
xchg
sbb
push
mov
mov
pop
xchg
xchg
push
jb
pop
mov
in
sub
pop
inc
xor
cmpsb
jecxz
push
inc
testl
mov
sub
inc
scas
mov
jae
pop
movsb
adc
or
das
jge
rorb
js
je
pop
xlat
or
in
je,pn
push
push
lea
xor
xor
xor
xor
xor
ja
sub
js
into
into
cmp
pop
mov
mov
adc
cwtl
push
pushf
rcrb
adc
mov
add
mov
inc
in
dec
mov
aad
orl
movsl
out
fsubrs
stos
pop
sub
inc
adcl
sbb
push
sbb
test
and
filds
or
mov
lea
rep
jno
push
ds
or
add
pop
shll
pop
lret
add
jne
push
cmp
cli
push
clc
fstp
add
call
pop
push
dec
out
arpl
rolb
fsubs
pop
out
stc
cld
mov
or
rorb
outsl
pushf
neg
pop
sbb
pop
inc
mov
cwtl
dec
fists
or
ja
popf
inc
xchg
push
roll
cmp
jbe
andl
andb
jle
push
pop
and
and
dec
pop
pop
adc
push
xor
push
sti
push
stos
test
or
or
fdiv
out
sbb
enter
mov
jb
int
pop
lock
add
xor
push
jns
stc
push
fdivr
push
and
mov
mov
xor
inc
add
scas
adc
repnz
dec
add
addl
add
xchg
mov
out
cmp
push
and
adc
sbb
push
jp
in
sbbb
call
jns
out
lock
hlt
clc
clc
mov
mov
add
lock
iret
imul
push
push
je
inc
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
idiv
out
loopne
inc
neg
adc
nop
xchg
pop
push
inc
xchg
stc
sub
lcall
mov
movups
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
ljmp
mov
or
push
movsb
repz
rep
mov
xlat
out
sahf
mov
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
imul
add
test
add
andl
adc
and
push
loopne
jge
adc
push
cmp
lret
std
scas
cmp
dec
sbb
xor
jge
into
add
inc
adc
cmp
adc
or
xor
jl
and
mov
push
popf
and
mov
sub
pop
sub
push
stc
je
icebp
add
popf
loopne
inc
xlat
push
or
sub
orb
scas
pusha
mov
lock
mov
mov
es
cmp
and
push
int3
mov
inc
lock
add
adc
xor
fisttpl
mov
andl
inc
adc
adc
pop
out
or
insb
test
or
push
test
jle
inc
movl
cmp
push
add
jns,pt
push
inc
hlt
daa
clc
inc
push
cmp
stos
xchg
inc
loop
inc
testl
ret
fucomi
add
pop
or
scas
jns
add
or
jno
sbb
mov
cwtl
add
xor
pop
enter
xchg
movsb
xor
data16
dec
jp
add
cmp
fisttpl
and
sub
sbb
add
aaa
mov
sbb
sbb
cmp
arpl
push
jle
push
cmp
icebp
mov
cmp
cmp
leave
mov
mov
add
push
mov
dec
adc
mov
les
cmp
jne
in
incb
inc
inc
inc
inc
jmp
and
or
shrl
jo
seta
xchg
shll
mul
xor
into
incb
inc
inc
sbbb
movsb
mov
negb
dec
je
loopne
mov
inc
pop
sti
outsl
les
ret
rep
adc
data16
and
inc
or
arpl
jg
sti
fwait
inc
scas
dec
insb
mov
or
dec
add
push
cmp
sub
adc
mov
loop
jne
dec
sub
mov
mov
dec
imul
or
or
mov
sub
inc
jo
adc
sub
enter
jge
sbb
inc
add
outsl
push
or
cmpl
xor
cmp
iret
add
dec
add
jae
mov
movsb
inc
add
and
push
inc
and
in
sbb
add
push
xor
jno
cmp
and
mov
mov
mov
sbbb
lods
and
mov
shll
dec
or
sarl
sub
sub
push
push
add
cmpsb
dec
mov
cld
add
xor
movsb
add
mov
add
cmp
sub
loope
pusha
hlt
stos
rcrl
fbstp
repz
inc
push
add
and
push
inc
jbe
dec
push
jno
dec
loopne
and
cmp
or
sbb
sahf
cmp
inc
imul
xchg
inc
xor
cmp
movq
jl
cmp
jb
orl
xchg
clc
pop
jl
jg
outsl
inc
xchg
jbe
and
mov
xor
pusha
jbe
push
stc
push
aaa
push
or
xor
or
xchg
hlt
mov
not
inc
sub
jl
clc
jg
aaa
incl
fcomps
sbb
push
mov
mov
hlt
push
xor
bound
test
xor
test
push
das
loop
repz
into
sbb
pop
jle
mov
sbb
push
imul
inc
and
mov
push
dec
push
cmp
add
je
popf
dec
xor
mov
and
rcrl
xor
stc
mov
sbb
xchg
mov
cvtps2pi
fs
jmp
fnstsw
push
push
and
int3
mov
add
add
in
jl
outsb
push
adc
aaa
sbb
inc
add
add
iret
ret
sub
fisubl
data16
orl
or
fs
enter
sbb
shrb
aam
sarb
scas
leave
jbe
jl
dec
aam
pop
sahf
push
cltd
pop
idiv
add
mov
or
repz
cmc
jl
out
lea
loopne
xor
push
push
adc
outsl
aaa
js
add
pop
decl
or
push
push
or
or
lock
rolb
dec
mov
not
pop
and
imul
jb
mov
push
add
ss
cwtl
add
push
push
xchg
mov
jg
cmp
daa
add
sarl
adc
mov
mov
pop
cmp
add
int
loopne
add
repnz
ljmp
aaa
dec
mov
divb
fs
sar
or
mov
lcall
mov
sbb
in
incb
jne
mov
sbb
mov
decl
push
jbe
xor
cmp
cli
call
pop
jne
jb
push
int
sti
jle
lock
sbb
stc
push
pop
and
cmp
mov
inc
mov
jge
pop
movsb
pop
testb
dec
inc
andl
jl
inc
enter
push
add
cmp
lcall
inc
icebp
test
je
cmp
add
ss
ss
pop
lods
push
push
xor
idivb
pop
jne
pop
jb
xchg
adc
inc
push
jp
add
mov
int3
or
gs
xchg
mov
sahf
cmp
mov
add
jae
add
jmp
sub
and
mov
dec
js
stc
pop
mov
jmp
jne
repz
adc
incl
pop
fildl
jle
or
jmp
rorb
clc
jmp
lea
push
inc
push
test
and
inc
push
mov
jne
pusha
jo
mov
mov
lods
adc
into
mov
sub
pusha
or
jmp
loop
mov
push
cwtl
adc
sbb
add
in
jbe
cmpsb
fnsave
std
jge
rep
ss
neg
enter
or
push
push
add
sub
add
xchg
nop
aas
push
dec
or
clc
or
jo
pop
xor
data16
loope
mov
add
pop
ljmp
ret
cltd
cmp
sbbl
in
and
inc
push
out
sub
push
pushf
pop
aam
pusha
and
push
loope
popf
pushf
pop
sub
je
push
popf
fisubs
sbb
jne
push
sbb
or
data16
pop
mull
lods
or
push
adc
je
paddsw
and
jg
or
movl
adc
movl
sbb
stc
aas
add
dec
imul
pop
push
inc
lea
cmpb
in
push
inc
push
or
xchg
adc
and
push
add
or
push
in
insl
out
add
test
or
jl
aas
dec
xor
or
je
cmp
test
loop
jne
mov
add
mov
and
sbb
or
test
nop
test
adc
jg
cltd
sbb
push
cli
ficomps
cmp
je
movsb
jle
in
cmp
jl
shl
dec
or
pop
xor
mov
fs
divl
pop
mov
ds
sub
pushl
loope
sbb
pop
cmp
sbb
and
or
xchg
das
inc
sub
in
mov
dec
push
in
add
xor
gs
cmp
push
stc
ds
movsl
std
and
push
and
and
mov
sbb
out
mov
mov
or
movsl
mov
cmpl
loope
or
jle
pushl
aam
jne
shll
fimuls
lret
call
das
int3
out
mov
or
mov
ret
add
push
jl
dec
dec
adc
das
sub
add
add
repz
or
or
jg
sbb
jle
pop
pop
loopne
push
push
arpl
pushf
sbb
cs
fstpt
out
and
pusha
iret
cmp
jno
mov
adc
sbb
cld
mov
out
dec
add
jg
jmp
nop
add
inc
cmp
mov
pop
mov
leave
lock
xor
sub
leave
xchg
or
or
repnz
cld
iret
fstpt
ret
add
les
cld
outsl
and
leave
sbb
push
in
int3
les
and
pushl
or
xor
lock
pop
inc
fmul
mov
add
or
call
adc
ss
outsb
xor
pop
pop
sbb
adc
push
incl
jbe
popf
hlt
sbb
inc
in
outsl
and
push
sbb
cmpsb
sbb
add
cmpl
add
mov
jo
adc
inc
or
sbb
je
mov
jle
push
cmc
adc
fdivrs
push
shlb
dec
in
fscale
arpl
and
mov
aam
or
add
xlat
loopne
sar
push
ds
mov
inc
outsb
fadds
dec
pop
mov
shl
dec
shll
stos
ds
cmpl
mov
cld
adc
test
cmp
movsl
and
jne
mov
inc
ret
pop
sarb
decb
call
daa
adc
lret
pop
data16
adc
inc
inc
lock
imul
ljmp
add
test
inc
out
pushl
jecxz
cmpsb
or
mov
loope
inc
sbb
dec
adc
fimuls
push
movb
lret
je
cmp
aam
push
sbbl
mov
add
test
fsubr
xor
jl
or
pushf
cmp
or
je
xchg
pop
nop
mov
dec
xchg
sbb
nop
imul
dec
and
mov
pop
or
int3
add
dec
xlat
call
push
ss
push
or
push
mov
xchg
repnz
mov
js
fsubs
pop
adc
adc
and
cmp
mov
dec
je
dec
jne
hlt
pop
and
add
jno
push
adcb
add
jmp
xor
and
inc
cmp
mov
sbb
adcl
xchg
fcmovu
sub
cmp
add
push
and
mov
daa
and
scas
enter
or
pop
arpl
mov
add
or
dec
sub
xchg
cmp
int3
call
imul
sub
jg
ja
filds
or
and
je
pop
cmc
and
sbb
push
out
push
add
xchg
lcall
push
out
inc
imul
ds
mov
lds
xor
pop
push
cmp
jl
mov
inc
sahf
jp
adc
pusha
dec
adc
mov
addb
pop
lock
jne
clc
pop
and
add
mov
repz
add
lods
mov
es
jb
pop
pop
pop
pop
sub
push
cmpsl
adc
nop
sbb
dec
scas
add
pushf
in
dec
test
add
or
push
enter
dec
leave
mov
icebp
cmp
scas
mov
add
mov
pop
daa
mov
adc
or
xchg
insl
dec
incl
sbb
cmc
push
in
shrl
mov
or
push
xchg
xlat
fisubrs
jne
jmp
fildl
fwait
mov
push
xchg
mov
arpl
adc
inc
dec
mov
cs
pop
icebp
mov
cmp
jle
xchg
cwtl
rorl
xor
inc
adcl
jecxz
cmp
subl
lret
repz
imul
aam
test
push
mov
push
jle
jecxz
cmp
push
jbe
pop
das
loopne
clc
dec
push
push
lock
jae
mov
adcl
pusha
jg
dec
ljmp
subb
shlb
jno
call
add
dec
adc
ret
add
cmp
fstl
orl
fmuls
addr16
hlt
dec
jne
out
cmp
jecxz
cmpsb
xlat
or
rolb
and
cmpb
mov
stc
add
pop
scas
pop
and
negb
std
jb
or
or
jne
cmp
xlat
dec
xor
repnz
andb
push
push
dec
or
xor
jne
lock
out
jnp
push
inc
lret
je
ljmp
add
cmc
push
nop
xlat
lock
adcl
sbb
dec
and
mov
adc
xlat
je
cmp
pop
cli
mov
and
cmp
jb
testb
xchg
pop
sbbb
inc
add
int3
sub
sbb
jge
push
negb
inc
jmp
inc
movb
and
cmp
jne
cmpl
push
cmp
jbe
mov
push
or
pop
add
push
push
call
pusha
dec
lret
push
call
and
ret
sbb
lcall
push
clc
add
xor
mov
inc
mov
push
je
push
cmp
shlb
push
adcb
cld
and
push
inc
js
sbb
mov
test
ret
sbb
stos
sbb
push
jbe
xorb
and
cmc
add
pop
sub
cmpsl
cs
out
call
push
jne
and
andb
xor
mov
movsb
cmp
mov
hlt
in
mov
push
lods
orl
dec
out
inc
sarb
test
mov
jl
hlt
inc
pop
pop
mov
jle
cwtl
and
xchg
mov
sti
lret
outsb
out
test
push
cld
push
jo
xchg
cmp
add
pop
pusha
and
cmp
in
outsl
repnz
es
pusha
sub
or
fiadds
cld
mov
ficoml
bound
sbb
daa
jle
sarl
dec
inc
add
and
mov
scas
push
jns
ret
push
test
or
inc
ret
cs
clc
dec
push
xchg
and
or
push
push
movsb
inc
jne
shll
jns
lock
dec
add
mov
jmp
push
loopne
clc
and
ljmp
jb
push
jno
jns
mov
push
inc
xor
add
sti
ret
inc
and
push
cltd
sbb
pop
jb
xor
jb
pop
jb
inc
dec
mov
mov
pop
cmp
arpl
pop
mov
test
push
or
cmp
mov
pop
and
jl
and
lods
pop
cmp
push
mov
cmpsb
jne
sub
dec
pop
sbb
sub
add
outsb
adc
andb
cwtl
rcrb
inc
inc
xor
mov
pop
adc
jl
mov
cmp
pop
and
cmpl
dec
mov
push
mov
inc
dec
and
popf
ds
mov
movl
dec
ja
xchg
and
xor
out
mov
adcl
and
pop
mov
and
push
scas
int
mov
sahf
add
inc
fstps
mov
push
cmp
pop
xchg
mov
and
xor
call
pop
das
dec
out
rdtsc
fnstenv
lret
js
push
jne
sub
mov
aas
dec
sbbl
adc
pop
lret
xchg
inc
lea
push
sbb
lahf
and
add
push
inc
arpl
sbb
push
push
mov
sub
jo
inc
es
add
pop
or
push
push
fstpl
pop
jmp
jne
xchg
clc
testl
xchg
scas
mov
jg
out
jo
shlb
or
cld
push
cmp
push
sub
or
scas
mov
pushf
aas
push
adc
sbb
cld
pop
sub
xchg
bound
push
divl
aad
je
mov
and
pusha
stos
cld
xor
mov
sarb
jle
pop
push
sub
and
les
daa
jo
test
cwtl
fadd
xor
push
push
js
inc
loop
mov
push
lea
sti
jge
jmp
jbe
or
pop
inc
adc
or
cmp
clc
outsl
jbe
lea
mov
mov
push
dec
cmp
adc
pop
sub
mov
loope
mov
adc
adc
mov
enter
in
sbb
pop
xchg
mov
jns
adc
clts
pop
int3
push
or
push
or
push
or
add
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
jmp
cmpl
aad
pop
inc
fldl
mov
jmp
and
test
ret
push
mov
or
add
es
add
jne
push
aaa
je
testl
and
mov
lret
iret
and
outsl
mov
subb
pop
push
into
xor
js
sbb
and
mov
pop
faddp
shll
jg
lcall
lock
inc
rorb
xor
lds
inc
xor
cld
aas
or
push
inc
add
das
push
ret
adc
mov
push
jno
mov
add
cld
pop
pusha
clc
cmp
jb
cmp
jb
mov
jge
push
cmp
mov
xor
jb
mov
pusha
add
pop
int
cmp
jae
inc
add
fcompl
add
jbe
test
adc
inc
loopne
xchg
ret
cwtl
mov
ret
xchg
add
xor
cs
imul
aaa
and
lea
or
sub
fdivrs
insl
cmp
cld
sub
mull
je
sub
sbb
fwait
jne
sbb
mov
mov
inc
pop
popf
repnz
xchg
ffree
idivl
es
ja
add
je
aaa
lea
lock
fdivrs
pop
cmpsb
jns
jmp
in
sub
adc
pop
inc
mov
iret
jo
lret
mov
jg
mov
cmp
sbb
aad
jle
mov
cli
inc
cmp
jle
cld
adc
rclb
mov
xor
in
xchg
pusha
add
push
and
test
and
out
loopne
dec
and
decl
inc
mov
mov
stos
jg
fwait
je
testb
cmp
in
jecxz
sub
imul
xchg
inc
daa
cmpb
std
jmp
out
add
cs
xor
mov
bound
jle
cmp
jle
int3
std
sbb
cmp
jo
loope
je
dec
sub
jg
clc
inc
int3
rcll
shr
sub
jg
mov
mov
dec
cmc
ja
or
pop
lea
mov
mov
sub
jg
sub
rorb
jmp
jne
scas
outsb
loope
mov
mov
lock
les
loop
or
rorb
mov
cmpsl
adc
enter
push
inc
push
fdivl
dec
xchg
das
mov
or
inc
or
sub
adc
add
dec
add
pushl
sbb
cmp
push
jnp
sahf
or
mov
shr
lds
rcrb
hlt
and
xor
ret
loopne
mov
cs
cmp
and
lcall
add
sub
add
pop
and
call
add
xor
js
sar
es
nop
sbb
shl
into
ret
xchg
sbb
scas
mov
xor
push
mov
push
sahf
out
xor
mov
pop
sub
aaa
cmp
es
decb
adc
push
outsl
movdqa
push
dec
adc
push
and
int3
or
pop
xor
dec
push
jl
pop
outsl
inc
or
jbe
jle
aas
iret
push
or
jg
lea
adc
sub
hlt
mov
daa
mov
shlb
push
std
lret
and
or
push
testb
jne
test
push
jg,pt
mov
adc
icebp
push
push
sub
jbe
cltd
andl
xchg
shlb
mov
int3
shl
push
loopne
pop
sti
in
add
sub
lock
in
lock
rep
mov
clc
imul
jne
and
adc
adc
ss
and
sub
mov
ret
stos
jmp
insl
rorl
and
movsl
mov
and
fiadds
test
scas
sbb
shll
jno
ret
outsb
mov
push
pop
out
shl
sbb
aas
lcall
outsl
pop
xchg
pop
pop
jae
lret
clc
or
jno
cmp
dec
xor
push
inc
mov
iret
mov
jns
push
add
call
loopne
cmp
sbb
movsl
repz
incb
je
push
push
sti
ret
movsl
or
lea
subl
sub
xor
sub
mov
sub
loopne
fcoml
sub
int3
data16
clc
or
test
movsl
sar
aas
das
lods
mov
int
lea
cs
add
sarl
enter
pusha
cmpsl
in
aaa
dec
cld
adc
cmp
pop
add
rcrb
popf
xchg
and
rolb
fcoms
jo
xchg
sub
or
fildl
add
pop
push
xor
cwtl
inc
and
loope
into
loopne
fsubrs
jmp
jge
adc
mov
call
jle
inc
cmp
jb
lea
push
fmuls
cld
adc
push
pop
out
add
add
xor
shlb
ds
popa
or
xchg
jb
push
mov
subl
es
pop
out
in
push
sub
sub
fdivp
mov
sub
movsb
push
enter
mov
mov
pop
dec
pop
iret
jnp
adc
dec
or
push
xor
cmp
repz
sbb
or
stos
fwait
pop
fldcw
jmp
pop
jns
fcompl
lock
sub
cmp
and
sub
nop
add
pushf
call
push
sub
lock
inc
pop
xor
out
fidivrs
push
mov
rorb
int3
aam
sub
mov
add
sbbb
aas
adc
add
push
cmp
xor
jge
ja
xor
adc
xor
adc
sbb
fisubl
jge
mov
inc
inc
cmp
inc
dec
jne
jo
adc
xor
test
cmp
imul
ja
out
andl
xor
sbb
xchg
adc
ja
cs
push
mov
shl
inc
aam
or
inc
add
mov
inc
mov
push
ds
add
lods
jbe
es
jmp
and
iret
sbb
test
inc
sub
lock
xlat
mov
xchg
cs
lock
cld
push
ljmp
and
push
adc
je
pop
jmp
push
xor
icebp
gs
daa
xor
aam
sub
out
shll
outsl
cmc
je
mov
rolb
mov
pop
or
icebp
mov
add
xor
xor
jb
add
add
pop
incb
jb
test
mov
fs
mov
xor
mov
lea
xchg
ret
adc
std
inc
or
fidivl
enter
les
roll
and
sub
adc
inc
add
fs
in
in
xor
or
ds
jae
mov
push
cmp
jb
mov
or
jecxz
pop
iret
lea
cli
mov
push
sti
add
xor
mov
or
sbb
movb
les
pop
pusha
fists
das
movsl
scas
pop
add
and
loop
icebp
fimuls
pop
lods
add
ret
andl
sub
enter
add
adc
mov
insl
or
pop
push
adc
js
inc
xchg
sbb
inc
mov
incl
sub
pop
icebp
in
xchg
daa
dec
mov
inc
and
fstl
sbb
xchg
cmp
sbb
xor
add
icebp
shrb
sub
dec
lods
xor
lock
lock
in
pushf
or
ret
adc
loopne
jle
add
and
les
mov
imulb
sub
jmp
adc
inc
mov
or
cmc
push
call
mov
sbb
push
sub
and
jne
lahf
pop
scas
insl
subb
inc
cmp
dec
clc
js
ja
in
or
or
adc
lock
in
adc
jno
pop
push
sub
sub
sub
call
dec
in
sub
pop
cmp
ja
pop
jbe
lea
in
fildll
sbb
adc
add
leave
cmp
jae
loopne
sbbl
or
jb
push
clc
jbe
hlt
xor
push
add
test
jne
sbb
mov
int
cs
jo
les
or
sub
sbb
movsb
cmp
rorl
ja
subb
push
jbe
adcl
or
cmpsb
add
and
adc
and
pop
test
mov
adc
jb
ljmp
cmp
call
push
dec
xor
ret
adc
popa
je
or
dec
jmp
out
pop
insb
pop
and
dec
sub
mov
je
or
daa
dec
mov
add
or
insb
fcomps
or
xor
data16
pop
inc
mov
mov
jle
sti
fbstp
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
xor
idiv
dec
jne
lea
daa
or
leave
fwait
popa
call
mov
fisubs
and
jo
mov
mov
repnz
idiv
div
mov
and
jbe
lea
inc
ret
enter
enter
in
adc
lea
pop
push
inc
mov
inc
in
fdivrs
jbe
fdivr
ficoml
push
hlt
roll
movsl
jo
and
jp
cs
push
cmp
testb
gs
inc
inc
cld
cwtl
testb
cmp
in
jbe
mov
test
orb
std
push
sbb
lods
jmp
and
je
and
arpl
ds
mov
adc
aad
jmp
mov
jle
and
leave
sub
mov
or
rorb
or
and
roll
and
sub
xchg
push
and
and
jmp
test
nop
mov
jb
push
rolb
shrb
inc
jecxz
mov
sbb
mov
imul
push
nop
or
addl
or
cmp
pusha
adc
push
cltd
mov
mov
mov
push
mov
inc
or
and
pusha
test
cmc
movsl
add
mov
bswap
jne
movl
cmp
push
popa
movsb
push
in
insb
jmp
inc
std
jne
rolb
jnp
fldt
mov
xchg
cmp
cmp
les
clc
mov
sub
mov
push
push
mov
or
mov
cmp
push
mov
sbb
mov
cmp
or
adc
adc
jle
xchg
cmp
or
jnp
jo
push
jmp
adc
loopne
push
jno
push
pusha
out
push
and
xor
das
orl
inc
or
push
pop
in
inc
jae
cmp
jbe
movsb
js
movsb
iret
push
jne
mov
test
cmp
sbb
pop
leave
dec
movsl
lds
inc
daa
mov
cmp
leave
xor
lea
jmp
into
sub
add
jmp
hlt
dec
inc
sbbb
add
clc
jbe
mov
rcrb
inc
inc
cmpb
shrl
add
push
add
loopne
xorb
pop
call
movl
adc
push
mov
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
xchg
imul
divb
dec
fdivs
jo
mov
sbb
or
inc
dec
jne
fisubrl
movsb
mov
cwtl
push
rolb
push
jnp
test
jmp
inc
mov
lods
push
jp
jae
adc
and
insb
cli
and
bound
inc
into
pop
mov
fisubrs
jp
loop
push
xchg
clc
mov
and
dec
push
pop
lahf
xchg
shrl
inc
mov
inc
loop
cli
rep
andl
pop
jno
aaa
or
nopl
fsubl
inc
adc
jno
js
push
mov
int3
cmp
cmp
ljmp
xor
std
and
clc
mov
add
xchg
cld
or
add
or
clc
add
loopne
or
cmp
cmp
jmp
xor
dec
sbb
mov
cmp
sbb
pop
ret
ss
ds
arpl
rcl
insl
adc
jne
es
xor
or
and
push
cs
rcll
shll
mov
push
std
in
ds
data16
and
sbb
movl
or
and
cmp
inc
fidivrl
pop
cmp
jne
sbb
js
pop
pushl
dec
and
inc
mov
cld
sbb
xchg
adc
jno
mov
inc
xor
les
lods
shll
int3
lret
sub
and
sbb
mov
movsl
cmp
mov
mov
jne
addr16
out
jle
sahf
jg
test
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
add
sub
sub
test
mov
xor
divl
mov
mov
push
loope
loop
push
add
xor
pop
in
inc
hlt
in
push
jbe
outsb
inc
sub
dec
jle
ret
sbb
jo
loope
scas
nopl
clc
rorb
in
jmp
sub
data16
adc
jge
adc
into
and
xchg
inc
mov
imul
sbb
sbb
and
fs
push
cmp
or
pusha
int
mov
add
shll
loopne
pop
xor
fimull
cltd
cmp
and
bound
xor
push
fmuls
cmpsl
iret
push
mov
outsl
inc
aam
or
mov
fistpll
inc
mov
ret
les
repz
jecxz
pushl
push
je
mov
push
push
xchg
push
cwtl
imul
in
or
push
sti
pop
mov
mov
pop
push
cmp
shrl
inc
aas
add
insl
push
orb
lea
add
pop
loope
es
jnp
loop
sti
xchg
or
sarb
cmp
sbb
sub
cmp
ret
scas
int3
sub
mov
pop
sub
push
and
or
push
loop
xor
sub
cmp
int3
mov
sti
and
cmp
jne
mov
mov
jmp
adc
pop
aaa
test
outsl
jo
fiaddl
jl
adc
mov
pop
or
xor
mov
int
pop
push
fdivl
fdivs
dec
xchg
xor
mov
jne
xor
adcb
aam
dec
push
mov
lods
cmpb
or
pop
and
and
imul
push
cmp
je
dec
hlt
decl
cmp
jl
cmp
jg
inc
jmp
xor
les
jbe
loope
xor
jne
imul
add
push
pop
inc
jo
jge
or
sarb
sbb
dec
enter
test
movsbl
clc
shll
pushl
pop
adc
addl
jle
push
inc
jp
inc
dec
jne
adc
int3
adc
push
inc
jns
fiadds
insl
pop
and
std
and
mov
cld
inc
pop
test
mov
fs
pop
idiv
inc
mov
lea
mov
ret
mov
inc
sub
insb
in
fcompl
jl
or
sub
lea
mov
pop
decl
ret
loopne
cltd
imull
lea
cltd
lea
sar
xlat
imul
loope
in
ret
lea
inc
cli
push
xchg
dec
js
sub
add
pop
call
sbb
lea
jmp
add
loop
adc
dec
pop
out
pop
mov
inc
jb
jo
xorb
adc
inc
sub
jmp
icebp
ss
addl
out
shll
jne
imul
mov
and
and
leave
call
lods
and
add
cwtl
movsl
sub
imul
movsb
fildll
or
xor
out
jbe
add
ltr
decl
jg
sbb
or
ud0
push
cmp
in
push
lock
arpl
xor
hlt
aam
push
add
or
fbstp
inc
add
mov
inc
cmp
mov
fs
cmp
jnp
sti
mov
or
vmwrite
xchg
lret
rclb
xchg
out
push
xor
push
push
jmp
pop
push
push
push
push
in
in
mov
jp
popf
dec
addr16
mov
jbe
jns
daa
insb
pop
jo
fistpl
push
sbb
mov
jmp
cmp
nop
into
stos
aaa
sahf
pop
push
pop
mov
or
loope
lret
push
pop
mov
mov
mov
aas
push
pop
push
push
jnp
icebp
add
mov
mov
rclb
stos
dec
mov
aaa
in
sti
cmp
jle
jge
cmp
jl
cmp
jg
push
jle
dec
xchg
fdivrs
adc
adc
mov
and
repnz
jle
imul
jle
pop
sub
mov
jmp
jne
ret
xchg
ret
sbb
data16
dec
ret
xor
and
jo
cmp
sub
adc
sarb
push
push
push
sbb
ret
xlat
xor
sub
adc
stc
xchg
mov
cld
fdivl
cmpsl
sub
xor
adc
call
dec
into
rcrb
push
arpl
je
mov
ret
jg
jl
fdivs
inc
or
bnd
outsl
aas
dec
xor
jg
xor
es
xchg
xor
lock
push
push
push
xor
add
jmp
lock
lea
add
push
sub
rolb
lret
add
movsb
sub
adc
fwait
test
push
lea
rclb
lods
sbb
sbb
push
mov
and
xor
scas
inc
and
add
cmp
mov
or
repnz
jbe
ret
orl
inc
mov
mov
sti
leave
mov
fldt
xor
jns
or
push
adc
pop
ja
pop
shrb
mov
adc
and
add
adc
cltd
xor
pop
outsl
imul
mov
xchg
adc
inc
add
or
jl
fsts
push
leave
decb
dec
adc
add
test
ds
add
or
pushl
mov
popf
shrb
cltd
cld
test
and
xchg
ljmp
icebp
decl
in
push
dec
inc
inc
fldcw
cmpsl
or
adc
add
icebp
mov
cmp
jne
push
pop
lock
fstp
pusha
mov
mov
and
add
iret
or
in
test
sti
dec
mov
test
inc
pop
test
inc
jge
push
push
push
add
or
adc
inc
loopne
fdiv
fiaddl
cltd
fs
ja
ss
sbb
sbb
sbb
sbb
mov
xor
pop
inc
jg
mov
inc
push
xor
jmp
ljmp
or
lods
lock
xor
add
jb
cmp
or
cmp
mov
dec
out
dec
pop
fsub
sbb
lods
xchg
sub
pop
ret
push
fisttpll
shlb
sahf
sub
movsl
ss
pop
sbb
rol
sbb
pop
push
or
cmp
testb
push
dec
jns
jmp
popa
cmp
js
mov
popa
enter
adc
jle
cs
adc
push
jbe
sub
adc
inc
pusha
iret
cmp
or
lcall
pop
outsb
and
xor
ret
lahf
loope
fwait
mov
xor
mov
adc
adc
outsl
jmp
in
ror
repz
loopne
in
or
dec
test
xor
and
test
mov
ljmp
cmp
push
nop
add
sbbb
push
mov
ds
andl
push
jae
xlat
lock
jmp
ja
xchg
push
std
neg
pop
mov
inc
push
inc
testl
mov
ficoml
sahf
insl
lret
popf
cmp
pop
pushl
pop
clc
int3
push
imul
outsl
mov
ds
push
popa
ficompl
jb
cmc
aam
rolb
hlt
in
mov
leave
inc
rorl
in
jbe
push
aaa
mov
rol
sbb
cmp
push
pop
or
and
add
dec
push
xchg
aad
or
cmp
inc
push
jo
sbb
and
mov
inc
and
xor
mov
outsb
and
sub
sbb
xor
xchg
cmp
or
or
mov
mov
mov
sub
or
pop
xchg
fsubrl
in
outsb
add
out
add
cmp
jb
jg
jle
mov
je
sbb
ss
jp
mov
lcall
test
stc
in
cmp
cmpsb
cmpsb
faddl
sti
dec
sbb
mov
in
dec
sbb
std
in
sbb
pop
push
sbb
lds
ja
mov
adc
in
clc
mulb
lea
jns
jbe
dec
add
call
sub
xchg
je
pop
mov
sbb
scas
mov
xchg
out
mov
or
pop
sbb
or
icebp
xchg
xchg
push
nop
cmovne
dec
movsl
test
push
and
mov
dec
lods
mov
jg
cli
sbb
dec
inc
jb
sbb
or
xorl
loopne
add
or
in
clc
pop
fistpl
or
cmp
iret
xor
aam
fwait
mov
ljmp
lods
rol
push
or
sbb
push
sbb
leave
mov
xor
movb
das
or
and
into
pop
cmpl
inc
cmp
cmp
pop
xchg
cs
push
mov
mov
enter
mov
mov
pop
and
add
inc
sub
loopne
push
push
imul
or
xor
dec
push
dec
push
sub
push
inc
call
xor
jo
add
push
mov
push
sti
in
pop
mov
lea
pop
and
adc
or
testl
pop
jne
orl
adc
jno
adc
das
sub
cmp
or
jb
mov
push
cmp
mov
imul
jge
xchg
ficoml
imul
ret
jae
and
add
push
es
dec
sahf
mov
mov
test
sub
test
shrb
icebp
mov
or
out
dec
pusha
or
add
adc
adc
sub
ds
fxch
lods
lock
cmp
scas
jl
jge
imul
mov
andl
cmp
xor
xor
andb
mov
fs
jae
mov
sbbl
pop
adcl
cmp
test
cmp
sahf
lret
xchg
cmp
push
mov
dec
jbe
dec
rcrl
and
pop
leave
push
sbb
pusha
mov
pop
bound
cmpl
mov
xor
stos
push
ret
cmpb
or
enter
fidivl
leave
adc
lock
jno
and
jmp
push
fsubrl
cmc
enter
add
in
in
jae
add
inc
adc
cmp
xchg
pop
sbb
push
inc
mov
jmp
cmp
add
dec
adcl
popa
idivl
orb
xor
push
pop
push
xor
dec
cmpsb
iret
mov
movl
lahf
shlb
adc
daa
or
lock
jge
sbb
cmp
dec
adc
mov
lea
mov
xchg
add
pop
out
add
scas
outsb
loopne
add
orl
mov
push
ss
adc
adc
adc
mov
incl
pop
add
mov
push
sbbb
inc
mov
push
inc
incl
mov
jnp
clc
cmp
faddl
orb
out
idiv
and
or
xchg
add
inc
push
data16
push
mov
jmp
push
mov
cmp
ss
jmp
xor
loopne
addb
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
adcb
inc
lahf
pop
and
cmpb
nop
lock
addl
xchg
mov
xor
add
cmp
popa
mov
jne
xchg
xchg
or
dec
je
sarb
cmpsl
adc
leave
or
mov
mov
scas
inc
mov
test
pop
stc
pop
inc
xlat
cmp
arpl
sub
aad
jne
cli
pop
push
sbbl
inc
les
inc
or
int
pop
dec
xor
mov
mov
jmp
ret
jo
mov
sbb
out
sbb
add
jge
addb
pop
cmpsl
subb
icebp
sub
cli
jae
les
out
lea
cmp
jb
loope
jmp
add
sub
push
push
and
mov
or
test
mov
add
jle
pop
or
jne,pn
data16
cmp
in
mov
and
sbb
js
add
mov
test
rorb
jne
insb
in
incl
mov
cmp
je
inc
inc
or
jne
repnz
mov
mov
sar
inc
push
push
lret
push
mov
adc
int3
loopne
or
das
xchg
cmp
sbb
add
cmpsl
jo
out
cmpsb
dec
adc
mov
cmp
cld
adc
inc
xor
test
cmp
inc
addb
addr16
adc
popa
adc
aam
or
sub
out
int
pop
mov
push
fiadds
inc
xor
lds
mov
adc
pushf
mov
outsb
and
dec
clc
or
add
mov
icebp
mov
test
lea
mov
xchg
add
or
or
or
fcmovbe
mov
push
and
cmp
inc
test
sbb
in
sbb
mov
or
rclb
loopne
mov
ljmp
jl
mov
push
sbb
sbb
xor
jb
jbe
shl
rorl
and
lea
das
mov
andb
and
pop
addb
adc
cmp
jb
mov
cmp
fnstsw
cmp
mov
jecxz
xchg
ljmp
je
mov
push
or
or
aaa
push
call
std
push
add
clc
add
out
add
push
loopne
scas
xorb
pusha
mov
xchg
nop
pop
js
and
push
cld
outsb
test
sti
fiaddl
hlt
inc
adcl
jl
and
jne
je
xorl
mov
push
orb
jmp
xchg
adcl
add
dec
mov
cmc
push
roll
ds
sub
int3
aaa
xor
ds
mov
add
jmp
push
cmpsl
xor
add
or
je
and
into
mov
movl
jl
loop
jmp
scas
pop
notb
xor
adc
xlat
jle
mov
or
jae
mov
mov
addl
icebp
dec
and
iret
testb
push
sub
andb
lcall
hlt
and
push
xchg
js
sbb
outsb
inc
mov
sahf
mov
push
jmp
insb
push
lea
loopne
cld
add
cmpsb
jge
adc
jle
ret
shrb
aad
jge
pop
fadds
pop
aas
cmp
xor
dec
ret
std
test
or
sahf
add
add
xor
push
sub
pop
cmp
cmpsb
testb
push
loopne
sbb
lea
mov
push
xchg
mov
push
pop
mov
mov
dec
xchg
add
xchg
xlat
adc
xlat
fcoms
pop
xlat
add
sahf
shl
loopne
fsubr
jne
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
cltd
mov
push
sbb
cmp
or
pop
adc
jmp
jbe
sub
pop
or
testl
enter
or
pop
dec
or
lds
daa
push
xchg
mov
popf
pop
mov
adc
cmp
mov
xchg
sar
aaa
or
mov
mov
mov
or
not
mov
test
push
fnsave
adc
sbb
add
out
sbb
cmove
dec
lock
xor
and
pop
mov
test
adc
adc
cmp
loop
lock
not
push
rcrl
insb
in
pop
mov
fstps
inc
sbb
stc
std
pop
cmp
pusha
or
jns
jns
sub
sub
pop
push
lods
repz
mov
add
push
pop
sbb
push
mov
add
cwtl
ret
cmp
and
sahf
inc
or
inc
push
fcmovb
inc
sbb
jb
fsubrl
push
aas
or
push
mov
mov
push
insb
pushf
nop
xchg
add
test
push
pop
lea
sub
adc
adc
mov
xlat
into
insl
shll
adc
hlt
jmp
aad
xchg
push
int3
imul
xchg
stos
push
hlt
insl
inc
mov
inc
lods
sbb
push
jl
call
call
mov
xor
sbb
aad
dec
decl
cmp
jl
jle
and
mov
js
in
icebp
xchg
negb
push
push
mov
adc
movl
scas
adcl
cmp
aam
movsb
fcoml
testl
or
int
out
add
ret
cmp
pop
aam
or
int3
inc
sbb
nop
sbb
leave
mov
movb
cmp
mov
sbb
lods
and
pop
xchg
inc
mov
dec
clc
jmp
push
imul
clc
sbb
jne
push
aaa
mov
or
xor
mov
jl
dec
mov
or
mov
or
add
dec
pop
das
adc
jmp
int3
call
add
loope
icebp
es
lods
lods
daa
cmp
adc
pop
push
dec
xchg
jle
repz
sub
mov
add
xchg
lret
test
mov
fs
mov
xchg
jb
nop
sub
cs
or
jmp
xor
adc
add
push
testb
mov
outsl
jge
aas
mov
add
fistl
lret
cwtl
and
or
add
mov
cmpsl
or
cld
push
xor
inc
out
lods
rep
push
shlb
stc
cmp
xor
mov
pop
je
loop
ret
dec
fistpl
sub
add
lods
pop
stos
cmpsl
std
addl
cmp
roll
and
rorb
dec
sbb
cmp
inc
xor
inc
aam
das
inc
fisttpl
jno
push
dec
or
test
jbe
mov
ljmp
mov
jb
inc
add
cmp
jb
in
and
int3
mov
movsb
daa
add
and
cs
clc
or
and
call
and
xchg
loopne
cmpb
sbb
hlt
lahf
push
adcl
jle
jg
out
adc
push
push
sub
pop
leave
inc
and
xchg
pop
sub
sbb
xchg
cli
mov
shlb
push
pop
mov
or
movsl
push
mov
inc
dec
imul
movsl
hlt
mov
popl
mov
adc
negl
call
rolb
mov
push
adc
ja
lcall
adcl
subb
jecxz
mov
mov
cld
sbb
leave
xor
out
into
shlb
imul
bswap
insb
adcb
push
push
and
inc
and
dec
jle
sar
push
andb
jmp
or
sbbl
mov
push
xchg
mov
adc
jmp
xchg
cmpsb
fadds
out
outsl
mov
sub
cld
shr
aas
inc
cld
jnp
jp
add
fldcw
sbb
dec
or
roll
xor
sbb
mov
fcmovnbe
clc
clc
push
cld
rclb
mov
test
jne
sar
je
lds
sub
mov
lds
jge
dec
or
mov
je
cld
sbb
shr
lea
shll
pop
mov
and
sti
das
mov
lea
xor
inc
cmp
pop
add
push
mov
or
add
pop
outsl
push
jg
and
push
or
aas
pop
shr
pop
clc
and
into
push
jecxz
add
incl
xor
lret
cmp
jbe
mov
mov
imul
cltd
jl,pn
and
cmp
je
pop
ss
jno
mov
fists
mov
shr
not
and
sbb
and
xor
sbb
pop
mov
push
jle
pop
dec
cmpsb
cltd
adc
or
addr16
lods
andl
mov
ficomps
lock
mov
out
pop
cmp
or
or
mov
dec
pusha
mov
mov
inc
mov
js
mov
mov
push
xchg
lods
add
call
inc
dec
or
xchg
sbb
sub
lods
dec
push
and
ljmp
insb
cli
sbb
insb
decl
xchg
inc
int
clc
inc
mov
dec
mov
cli
fldl
add
scas
in
gs
pop
jp
adc
aas
gs
mov
testl
adc
andl
popa
sub
dec
inc
adc
inc
jbe
mov
and
jmp
and
push
pop
int
push
mov
arpl
js
in
push
iret
ljmp
les
push
loopne
jp
mov
adc
mov
pusha
pusha
xchg
add
push
mov
pushf
adc
imul
lock
rclb
call
outsl
push
or
xor
ror
cmpsl
xchg
out
js
add
test
cmp
push
mov
inc
adc
shlb
stos
xor
pop
ret
movsb
adc
int
jmp
orl
test
add
mov
adc
xchg
push
mov
shlb
fsub
xchg
add
inc
xchg
stc
mov
dec
stc
ljmp
incb
pop
mov
inc
mov
inc
dec
jne
sub
push
push
cmp
adc
test
imul
lock
xchg
jns
pop
cmp
call
cli
ja
sub
shr
sti
sbb
sub
inc
orl
orl
or
mov
push
out
inc
inc
cld
lock
call
adc
add
icebp
mov
mov
cmp
jb
adc
sarl
inc
popf
mov
negl
inc
inc
mov
lock
push
mov
jne
or
clc
aad
js
lds
not
and
ds
inc
les
adc
add
jns
movsb
xlat
sub
add
shr
jb
shld
cld
and
icebp
stos
mov
add
lds
adc
mov
test
lods
daa
loop
inc
jp
pop
cmp
ljmp
add
mov
addb
int3
push
pop
inc
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
aam
fdivrl
or
push
jns
sbb
movsl
inc
sub
add
mov
mov
punpcklbw
fiaddl
mov
fstpl
add
pop
push
lea
jbe
pop
lcall
jle
mov
jns
cmpsb
imul
xor
push
pop
lcall
iret
mov
pop
add
and
and
cmp
test
xchg
xor
add
xchg
mov
mov
push
mov
sub
sahf
test
hlt
jl
push
inc
or
pop
add
inc
dec
insb
pop
xor
push
pusha
push
cld
push
sar
dec
jp
movsb
decb
or
sbb
inc
cwtl
sarb
xor
cmp
ss
jo
dec
je
filds
mov
call
ja
imul
mov
adc
adc
fimull
xor
adc
mov
mov
sbb
xorb
inc
and
mov
push
lods
pop
sbb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
insl
sub
mov
add
inc
sarl
cs
insb
and
add
lods
pop
and
inc
cmp
jecxz
add
inc
into
call
out
subl
jmp
in
push
imulb
dec
or
push
fildl
and
or
mov
or
fdivs
push
jne
mov
jg
jne
jmp
in
in
data16
lock
aaa
jnp
sahf
outsb
arpl
adc
fsubs
daa
jo
addl
dec
leave
lock
xor
out
or
mov
mov
les
push
ds
insb
clc
loope
mov
jl
and
iret
xor
dec
add
add
mov
rcrb
mov
jmp
pop
push
scas
out
repz
mov
outsl
shrb
into
jne
mov
push
pop
outsb
leave
inc
test
or
xor
mov
sub
icebp
dec
push
push
cmp
inc
dec
xor
test
push
adc
iret
js
dec
dec
push
dec
cmp
mov
fildll
into
in
and
mov
decb
jne
dec
or
or
sub
dec
mov
addr16
pop
pusha
dec
bound
dec
jmp
and
and
imul
je
mov
inc
mov
pop
lock
push
or
das
pop
xor
adc
xor
sub
jge
inc
or
jmp
push
or
testl
inc
insl
and
in
mov
pop
inc
mov
orb
jmp
call
add
lcall
sbb
mov
lea
xchg
cs
sub
cmp
adcb
pop
add
shlb
leave
es
xchg
into
mov
inc
mov
rorb
fisttps
mov
sbb
inc
mov
pop
inc
jge
push
inc
cmp
inc
inc
aam
push
push
inc
cmp
dec
pop
mov
xor
or
jl
data16
pop
movsl
jo
outsb
ret
repz
mov
jo
mov
pop
mov
ljmpw
je
jae
mov
pushf
pop
ret
sbb
jae
rolb
xor
mov
fmuls
push
hlt
pusha
push
pop
cmp
inc
push
js
cltd
idivb
pop
sub
pop
lock
dec
jb
mov
leave
mov
fiaddl
mov
sub
cmp
loopne
push
imul
sti
add
gs
inc
fisubl
mov
outsl
sub
cmp
enter
cmc
shlb
das
lock
ljmp
mov
mov
adc
inc
push
xchg
xchg
enter
adc
subb
add
repz
mov
jle
mov
jne
push
dec
loope
and
or
adc
add
cmp
stos
shlb
aas
sbb
inc
lcall
push
inc
je
or
adc
jmp
cmp
push
adc
int3
push
inc
cmp
sub
or
cmp
or
mov
adc
fistl
or
mov
adc
or
mov
iret
pop
jns
mov
or
inc
ret
add
pop
xchg
adc
push
shlb
pusha
mov
cmp
and
push
xor
lock
adc
ja
and
or
inc
jmp
pop
dec
pop
push
out
movl
dec
adc
dec
cmp
cmc
mov
pop
inc
cmp
jne
or
adc
sbb
jge
inc
jmp
popf
out
pop
je
lods
mov
sbb
lcall
popa
adc
sbb
inc
and
inc
repz
pop
sub
adc
clts
pop
ds
add
push
test
pusha
xorb
ljmp
jle
push
push
pop
div
mov
aas
jle
dec
ret
sub
adc
jbe
mov
cld
pop
insb
adc
adc
repz
or
and
inc
jo
ret
or
fiadds
pop
jno
push
add
hlt
mov
pop
push
hlt
xor
xlat
pop
lret
iret
jecxz
daa
and
adc
sub
call
cmc
je
mov
nop
imul
push
jo
jae
subb
arpl
icebp
cld
and
dec
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
xor
or
shl
data16
or
push
adc
dec
sbb
mov
sbb
pusha
sub
sti
scas
popa
popa
pop
jbe
sahf
xchg
cmpsb
loop
inc
gs
cmp
or
add
push
enter
add
xor
push
push
imul
cmp
fistl
dec
cs
jno
les
movsl
loope
mov
mov
xchg
push
gs
xor
fs
jle
test
ja
enter
shrl
cmp
je
movl
sbb
call
fsubs
lds
sbb
jecxz
add
dec
add
and
lock
ds
inc
and
or
pop
pop
sub
push
ficomps
mulb
jl
xor
ljmp
andl
orl
cmp
into
cli
adc
daa
lea
push
cmpsb
adc
dec
pop
pop
pop
adc
sbb
bound
mov
mov
popa
andl
push
shll
aad
xor
cmp
aam
push
xlat
test
movsb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
stos
stos
lods
lcall
ja
ja
mov
push
divb
aas
push
stos
jae
mov
fidivrs
mov
rcrb
push
sbb
add
js
lret
jmp
sbb
pop
sbb
mov
mov
cmp
mov
cltd
inc
push
mov
push
inc
add
push
and
pop
or
adc
lcall
jns
jno
and
gs
lods
movsb
sbb
in
mov
adc
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
movsb
xchg
xchg
sbb
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
pop
pop
inc
aad
adc
dec
xor
and
mov
xchg
cwtl
pushf
shlb
dec
mov
jno
mov
mov
push
cmp
adc
add
inc
mov
je
dec
and
dec
dec
imul
data16
dec
adc
imul
push
movsb
pusha
inc
lcall
or
and
fs
psrld
cmp
add
insb
pop
ret
adc
adc
js
and
ret
cmp
loop
pushf
sbb
cmp
je
inc
dec
jne
cmp
mov
jle
sbb
sbb
xchg
lock
add
scas
ret
loope
pop
stos
add
jmp
mov
stc
push
push
jp
push
xor
xchg
lock
mov
dec
leave
adcl
enter
int
mov
jne
aad
lods
pop
ja
mov
jmp
hlt
xor
adc
test
or
inc
test
jecxz
iret
push
jmp
sbb
inc
shlb
add
fimuls
pusha
bound
push
mov
pop
sbb
mov
push
cwtl
or
and
mov
loopne
icebp
lea
repz
out
jns
popa
mov
shrb
hlt
movsl
sbbb
xor
sbb
dec
outsl
daa
popa
xchg
inc
pop
ret
je
xchg
adc
adc
dec
cmp
sbb
sbbb
cmp
jnp
adc
xchg
jp
ss
shll
cmp
push
push
lea
jmp
mov
lea
jnp
aad
push
pop
fdivr
sub
push
push
loope
sub
xchg
adcl
sarl
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
fistps
lret
sbb
sti
or
out
testb
add
shll
fs
jl
cmp
lret
mov
incb
rep
jbe
inc
mov
inc
xor
lock
mov
mov
mov
jmp
xchg
sub
je
or
je
dec
je
aaa
popa
xorb
xchg
out
scas
mov
mov
mov
sbb
adcl
pop
pop
xchg
pop
add
pop
and
in
or
test
rcrb
sbb
or
mov
aam
inc
pusha
sbb
jne
sbb
inc
addb
and
fsubrl
scas
rcll
add
sbb
jge
pop
sbb
pop
mov
xchg
movb
jmp
dec
adc
mov
mov
sbb
push
push
sbb
or
xor
repnz
add
add
aaa
xor
mov
jo
sub
adc
fs
jno
sub
and
sbb
xor
arpl
cmp
mov
das
xor
sub
into
jo
pop
sbbl
arpl
and
mov
jp
je
fimull
add
pop
aas
iret
cmp
repnz
sub
push
adc
xlat
push
sbb
and
push
mov
push
cmp
and
mov
mov
mov
jnp
ja
pushf
or
cmp
inc
into
xchg
test
sbb
sub
scas
push
stos
aam
lret
movsl
mov
or
in
and
xchg
add
push
idivb
jne
orl
cmp
xor
and
ds
adc
cmp
adc
cld
aas
repnz
xchg
jne
les
roll
je
adc
dec
into
jl
popa
xchg
lods
push
lcall
shl
sti
add
jmp
or
js
push
test
dec
xchg
das
mov
ds
mov
sbb
jne
rcll
iret
adc
mov
jle
and
dec
mov
xchg
push
mov
add
jo
sub
xchg
mov
pop
xor
jbe
push
pop
xor
fs
les
in
nop
ss
or
cmp
out
jb
inc
test
mov
xchg
sbb
or
mov
mov
cld
ja
orl
dec
out
cmp
mov
fcomps
mov
or
ret
aad
jne
push
mov
mov
dec
cmp
out
xor
scas
or
push
dec
jne
loopne
test
push
cs
std
jl
dec
sub
xor
push
add
push
loope
mov
fmuls
sbb
and
dec
insl
cli
xchg
pop
pop
sbbb
adc
add
sahf
out
mov
jge
push
add
sti
faddl
mov
dec
jo
mov
lret
sbb
outsl
ret
lahf
pushf
pop
nop
sbb
dec
inc
jno
pop
es
hlt
pop
enter
adc
and
loopne
adc
jae
add
pop
pop
scas
jne
adc
ret
test
sub
das
rorl
leave
push
mov
test
push
sub
add
mov
ret
jae
jmp
pushf
loop
shll
dec
je
push
jmp
pop
and
push
cmp
shll
pop
sbb
mov
in
rorl
jle
stos
and
jl
fldl
cmp
jbe
mov
ds
or
cmp
cmp
inc
sbb
or
pop
or
or
je
and
std
cmp
jae
sub
add
fcomip
or
les
jecxz
push
shr
add
fwait
push
mov
inc
cli
cmp
cs
pusha
sbb
xchg
or
cltd
jmp
xchg
sti
sbb
insl
in
insl
dec
adc
jl
push
rcrl
imul
jo
inc
mov
jp,pn
insl
push
inc
or
and
pop
pusha
fs
out
pop
xchg
add
in
dec
and
inc
call
and
test
cmp
inc
dec
jle
cmp
sub
inc
ss
je
imul
inc
xchg
mov
ret
adc
jg
cwtl
add
negb
fmuls
test
into
in
push
push
popf
divl
pop
jg
int3
sbb
outsb
sbb
inc
adc
mov
cmpsb
jmp
ficompl
jae
inc
add
add
inc
divb
pushf
mov
sub
and
pop
imul
pop
adc
add
outsb
mov
shlb
push
adc
or
enter
mov
leave
or
out
inc
inc
mov
sub
jo
xchg
jecxz
or
jno
adcl
outsb
out
pop
adc
aad
shlb
cs
mov
in
rorb
cmp
rorb
je
mov
push
or
jne
mov
push
jge
lods
xchg
sbb
inc
cmp
adc
movsb
sbb
dec
lock
inc
fists
mov
inc
xchg
or
mov
je
sub
mov
push
jg
adc
adc
adc
clc
mov
sub
or
addr16
pushf
cld
adc
jge
aas
outsb
cmpsb
lods
push
mov
cmpsb
jle
cmpl
jl
jle
sbb
sbb
mov
mov
out
xchg
aas
xor
loopne
adc
mov
inc
jmp
cmp
lods
out
push
push
sub
inc
rolb
mov
test
add
cmp
sub
or
ljmp
cmp
je
cmp
lods
repnz
sub
adc
or
adc
out
inc
dec
add
add
lds
or
lock
lret
or
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
stc
pop
add
ror
dec
adc
sbb
jb
movsb
cmp
jbe
pop
inc
stos
add
add
pop
adc
fsts
cmc
mov
xor
or
pop
inc
lods
and
ss
orl
push
add
cmpsb
xor
jge
pop
xchg
loope
jo
xlat
mov
jnp
mov
or
in
pop
mov
sbb
loop
cltd
cmpsb
aas
xchg
hlt
mov
or
xor
out
jle
push
or
jecxz
mov
add
jge
xor
cmc
jle
xor
add
and
arpl
movsb
in
jp
iret
push
push
or
inc
es
dec
mov
gs
mov
popf
push
push
in
add
sub
inc
mov
cld
and
sbb
mov
dec
cmp
push
dec
sbb
pop
mov
jg
or
jne
sarl
testb
push
xlat
add
and
inc
cwtl
iret
sbb
push
push
mov
imul
inc
and
add
mov
notb
xchg
jmp
cmpb
ret
daa
inc
das
adc
lcall
jge
or
sbb
jg
mov
jno
or
adc
adc
add
movb
je
jg
xor
imul
sub
std
add
adc
mov
push
jno
cmp
push
push
push
push
sbb
and
hlt
jp
pushf
outsl
pop
pop
mov
mov
les
or
cli
or
or
jb
inc
pushf
lock
ljmp
leave
je
xchg
mov
mov
mov
mov
into
es
push
je
sbb
push
mov
xchg
out
adc
mov
ja
add
cmp
adc
cmp
jne
dec
inc
or
adc
fisubrl
mov
jb
neg
mov
into
leave
lock
adc
add
es
cmp
jmp
dec
clc
dec
xchg
cmp
stc
je
test
cmc
push
lahf
lea
and
add
inc
gs
pusha
movsb
xor
sarl
jmp
dec
cmpb
pusha
mov
cmc
dec
and
mov
mov
sub
ficompl
fcompl
cmp
mov
jno
cmp
mov
cmp
add
dec
jge
jle
fiaddl
es
jle
dec
mov
sbb
xlat
jle
add
mov
mov
and
adc
subl
jl
adc
stc
stc
add
push
icebp
jae
sbb
jne
jbe
std
and
add
hlt
dec
sbb
jo
ret
xlat
jne
jnp
adc
pop
cltd
mov
cmp
sbb
in
jmp
cmc
sbb
or
movsb
sub
ljmp
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jg
jne
jmp
pop
sbb
and
in
pop
mov
ss
inc
add
ljmp
iret
push
xor
loope
into
push
jbe
push
push
or
les
pop
dec
aam
test
xchg
lock
mov
repz
sub
inc
pop
repz
or
or
mov
pop
xlat
mov
leave
test
and
loopne
mov
lods
test
add
cmp
fmull
inc
popf
fdivrl
orb
jb
sahf
cmpl
xchg
cld
outsb
aad
pushl
sarb
sti
test
push
push
mov
js
ljmp
jb
inc
loopne
push
loopne
pop
adc
jle
arpl
enter
sbb
xor
adcb
mov
lret
sbb
rclb
fcoml
daa
fcomp
imul
dec
sahf
sbb
clc
incl
xor
sbb
inc
in
and
mov
movsb
ss
pusha
push
pop
mov
cltd
enter
xchg
adc
and
pushf
sbb
mov
push
les
adc
push
nop
push
repnz
push
roll
mov
test
dec
jmp
inc
adc
push
push
push
ja
aas
scas
inc
ja
jle
cs
lahf
pop
adc
rolb
imul
sbb
xlat
aaa
pop
sub
add
mov
add
aam
fsts
lods
adc
insb
pop
repz
fsts
xor
mov
mov
or
inc
push
cld
add
push
js
mov
dec
jbe
movsb
lock
push
xor
add
sbb
jne
push
sub
and
roll
sbb
sub
outsb
jle
mov
cmp
pop
test
sub
push
inc
pop
jbe
ss
les
adc
mov
test
add
addl
and
sbb
repz
dec
rcl
pop
or
inc
neg
mov
je
mov
jg
sbb
enter
ret
inc
mov
add
cs
add
call
pop
jl
jb
xchg
test
jbe
or
int3
cmp
fldt
jns
sbb
mov
nop
cmp
repz
and
stos
dec
xor
push
jmp
adc
loop
jge
filds
push
jmp
inc
add
mov
sub
sub
js
sub
xchg
sbb
xor
or
mov
call
push
sbb
dec
je
leave
inc
js
scas
mov
inc
sar
mov
pusha
fcompl
xchg
mov
pop
icebp
or
jg
add
sub
add
mov
inc
cmp
and
and
push
xor
stos
or
and
jo
popa
push
and
add
dec
in
or
sub
mov
push
loopne
xor
xor
mov
adc
jmp
ljmp
in
mov
or
mov
cmp
cmp
cmp
jp
shl
inc
xor
shlb
decb
pmaxsw
rol
loope
or
push
sti
test
or
or
sbb
insl
andl
ds
push
fmul
xchg
mov
push
jmp
jns
xchg
sbb
or
decl
jbe
add
cmp
loopne
rorb
pop
es
iret
push
lret
or
es
shl
push
adc
cmpl
lret
mov
nop
shr
fs
xor
jo
and
push
sbb
or
dec
das
aam
out
jne
lods
call
inc
cld
ret
and
pop
sub
cmp
je
mov
cmp
jnp
jb
adc
cmp
addr16
outsb
or
cmpsb
xor
mov
out
and
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
push
mov
into
jns
ds
jle
add
dec
or
push
xchg
ret
fadd
fldt
rorl
and
jb
outsb
cmpsb
int3
pop
jp
push
push
mov
cmp
mov
pop
ljmp
xor
mov
in
dec
xchg
rorb
mov
ja
pusha
pop
cwtl
xchg
aas
popf
lods
inc
cmpsb
fs
lods
lods
les
mov
sbb
rcl
pop
xlat
aam
push
inc
push
mov
mov
into
push
outsl
enter
les
xor
clc
inc
cs
pushf
insl
cmp
andl
push
lds
push
insb
stc
repnz
mov
jb
or
mov
inc
and
aam
lods
xorb
add
cld
xor
jmp
mov
mov
aam
movsb
lahf
mov
enter
das
daa
lods
mov
sti
jecxz
in
jg
dec
call
into
add
pop
add
aaa
pop
dec
imul
dec
in
pop
mov
or
or
xor
nop
arpl
hlt
int3
jnp
and
int
add
push
xchg
mov
add
add
bound
add
fwait
in
add
push
add
and
insb
outsl
arpl
imul
add
add
mov
push
aaa
je
xor
inc
jb
dec
jae
pop
inc
cmp
inc
push
jg
inc
push
jne
jae
inc
dec
dec
inc
push
dec
jbe
jne
outsb
jb
dec
push
jo
push
je
push
decl
pop
dec
push
insl
dec
jne
outsb
push
inc
push
jbe
imul
push
jp
insb
push
fs
push
push
ljmp
dec
pop
inc
dec
inc
pop
push
dec
imul
push
js
push
jns
push
imul
decl
inc
jb
push
dec
push
imul
dec
pop
outsb
inc
push
pop
push
js
pushl
fs
push
push
jbe
jno
inc
jb
bound
push
insl
dec
js
jno
outsb
dec
push
jbe
ljmp
pushl
arpl
addr16
inc
jo
inc
insb
push
jne
jo
dec
push
popa
jne
dec
imul
jo
div
outsb
dec
dec
dec
dec
int3
push
push
arpl
mov
fildl
mov
inc
jp
popa
pop
dec
fs
inc
dec
push
pusha
ja
fiaddl
cld
jg
inc
push
inc
popaw
outsb
ja
jno
insl
add
jns
fidivrl
fistps
ja
outsl
push
inc
inc
popa
imul
fs
push
insb
jne
loope
fldt
dec
push
pop
outsl
dec
add
insb
inc
push
pop
inc
js
jne
push
jne
jg
mov
dec
push
bound
insb
popa
cmp
dec
jno
push
dec
dec
push
dec
je
dec
mov
je
push
inc
insl
jbe
inc
dec
push
push
push
dec
ficoml
push
sbb
inc
pop
clc
idivb
push
dec
push
push
push
gs
inc
pop
dec
mov
push
inc
dec
insl
mov
push
popa
jns
jne
push
ja
je
jo
pop
ljmp
mov
pop
dec
data16
dec
insl
pop
loop
push
push
pop
inc
arpl
outsl
dec
jo
adc
gs
push
inc
inc
imul
dec
outsl
inc
jno
sbb
mov
insl
inc
gs
xor
js
xchg
dec
imul
popa
adc
pop
pop
pop
lock
pop
inc
pop
push
jo
cmp
jns
pop
sti
jg
fisttpll
test
pop
je
inc
push
dec
inc
push
bound
imul
and
outsl
pop
mov
and
dec
dec
arpl
inc
imul
dec
addr16
dec
push
inc
adc
js
sub
push
sub
add
inc
jb
push
pop
lods
mov
aas
dec
jne
gs
aaa
aas
fisubrl
push
inc
int
mov
fmull
cmpsl
popf
mov
push
cmovl
ret
mov
jae
or
pop
add
xchg
testl
jb
pop
lds
lods
das
inc
and
ja
dec
insb
in
pop
jbe
cs
and
outsb
jmp
jmp
data16
cs
push
pop
ja
outsb
insl
popa
pop
add
adc
ja
data16
out
insl
inc
mov
aaa
xorb
sub
je
test
lods
inc
mov
fildl
insb
xor
int
imul
push
mov
pusha
leave
jmp
jmp
jo
repnz
pop
dec
push
push
push
jb
fcom
inc
les
pop
jnp
fldt
incl
cmp
inc
ss
sub
cmp
aaa
aaa
sub
add
mov
xor
inc
aaa
inc
jge
clc
jo
push
pop
pop
add
add
add
lds
jp
inc
adcl
ds
or
sbb
inc
jo
add
imul
and
arpl
pop
fs
orl
inc
push
movl
jg
insb
and
and
add
dec
add
add
add
add
or
pop
and
gs
jl
cmp
pop
inc
psrld
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
mov
clc
aas
inc
inc
inc
inc
outsb
inc
dec
call
dec
pop
push
adc
pop
ret
mov
pop
pop
pop
pop
pop
pusha
popa
bound
addr16
imul
lcall
jo
jb
jne
ja
jns
jnp
jge
jg
cmp
loope
add
sub
sub
dec
add
inc
scas
in
test
mov
add
or
lods
stos
mov
and
ss
xchg
push
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
imul
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
or
loope
addb
and
decl
aas
pop
pop
add
push
mov
pushl
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
aaa
lcall
dec
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
fs
jmp
gs
arpl
jbe
xchg
jb
mov
sub
js
je
xchg
gs
insl
add
mov
jb
add
add
push
jb
outsb
je
dec
adc
stc
insl
and
jb
or
adc
push
push
and
inc
es
std
add
inc
and
push
ss
adc
call
incl
and
jo
imul
xor
je,pn
gs
jo
and
insb
outsl
es
push
sub
and
bound
jns
imul
cmpsb
insb
jns
or
cmpb
outsb
je
arpl
into
insb
jae
sbb
xor
and
insl
and
imull
insl
inc
cs
mov
xor
mov
pop
rol
mov
rolb
les
das
fmul
stos
out
insl
bound
and
xchg
and
rcr
sti
xchg
jbe
dec
mov
sbb
jp
xor
pop
es
cmp
push
and
je
and
mov
ds
gs
popf
jb
je
outsl
mov
cmp
sbb
daa
sub
dec
imul
insb
jb
or
dec
pusha
push
fwait
andb
mov
sti
outsb
clc
add
inc
xchg
sub
not
pop
lret
xor
int3
or
or
push
lcall
data16
popa
pop
cmp
gs
jo
cmpsl
jns
push
fistps
push
shlb
popf
xor
orb
popa
sbb
add
add
or
outsl
inc
ds
cmpsb
outsl
ss
fs
cmp
xor
stos
je
and
xor
stos
jbe
pop
push
cmp
mov
shll
mov
out
sarl
jle
outsl
push
or
pop
scas
xor
lcall
bound
push
inc
xor
nop
aaa
insl
in
ljmp
adc
imul
or
imul
push
jne
jmp
push
push
push
leave
nop
mov
mov
insl
imul
xor
cmp
xorl
add
sub
and
pop
or
inc
mov
jne
push
mov
jae
xor
fmull
jo
sub
test
cld
pusha
stos
xor
push
sub
lret
inc
sub
xlat
and
jmp
pop
xchg
mov
add
cmp
sub
jmp
out
gs
dec
pusha
aaa
lods
and
dec
cmp
out
add
add
xchg
out
xchg
lea
mov
mov
adc
lds
cmp
cwtl
push
scas
pop
jbe
shl
scas
dec
bound
mov
shrb
inc
ss
movsb
and
adc
shrl
arpl
inc
xor
mov
cmp
nop
xchg
pop
arpl
daa
daa
pop
cwtl
push
or
mov
push
pop
mov
arpl
jo
cmp
rcll
lcall
push
push
in
mov
sub
pusha
inc
jbe
push
shl
jnp
lahf
fs
and
xor
stos
int
dec
mov
popl
cmp
inc
and
gs
and
shll
es
dec
lahf
into
jmp
inc
xchg
or
mov
pop
pop
pop
push
push
jae
jo
pop
in
cmp
cmp
mov
sbb
imul
js
pop
ja
mov
mov
loopne
inc
or
mov
push
dec
testl
insb
jne
repnz
je
outsb
pusha
bound
fisttps
xor
mov
mov
pop
jg
jb
or
rorb
fistpll
inc
adc
lods
sbb
xor
jg
popa
cmp
rorl
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
cmp
mov
pop
pop
cmp
cmp
add
jnp
negl
push
sub
sahf
mov
addr16
jle
sub
cltd
jnp
cmpsl
sub
push
push
cmp
add
addr16
cmpsl
jle
add
sub
sub
into
jmp
sub
mov
sbb
and
cmp
and
add
xchg
dec
pop
pop
test
addr16
cltd
push
scas
sbb
push
jb
imul
dec
fdivl
xor
push
insb
mov
cld
sbb
xor
out
adc
ss
jo
sub
push
movsb
jl
out
sub
fs
push
inc
cmp
mov
or
add
stos
cmpsl
stc
cmp
mov
mov
int
mov
push
call
sahf
out
int3
enter
sahf
sarb
jns
test
mov
out
xchg
nop
mov
test
jns
out
insb
push
jns
out
push
push
inc
cmp
out
sahf
xor
add
mov
cmp
mov
jns
out
or
mov
jns
out
jo
pop
xor
repz
sub
adc
mov
repz
pop
xor
mov
push
mov
aas
insl
mov
cmp
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
push
dec
push
inc
test
adc
sub
gs
pop
dec
ret
dec
mov
mov
hlt
jne
or
nop
mov
xchg
outsb
gs
cmp
xor
push
push
push
filds
out
into
mov
xchg
jns
jg
addr16
popa
hlt
int3
pop
add
data16
ss
daa
push
clc
sbb
daa
shlb
mov
jae
sahf
dec
sahf
jbe
je
pushf
dec
inc
aas
add
pop
cli
jp
lea
outsl
ja
cmp
push
inc
mov
cmpsb
jb
dec
fcmovnbe
dec
loopne
ret
ss
inc
arpl
push
sub
daa
pop
lea
jo
into
mov
js
loopne
and
inc
push
ljmp
fisubrl
mov
push
test
iret
in
dec
cltd
adc
mov
adc
lock
xchg
jl
and
add
push
mov
add
repz
das
or
scas
cmp
popa
cmp
dec
add
push
add
push
je
inc
inc
out
sub
push
into
aaa
push
outsl
fstp
xchg
mov
cmpsl
ja
fdivs
adc
lahf
das
test
int3
aam
mov
mov
jl
shl
sbb
mov
push
xor
fisubrl
fcoms
pop
inc
mov
jae
int
xchg
adc
fs
add
adcb
negl
xor
daa
add
push
pop
leave
jae
rcrb
nop
iret
test
adc
sub
lds
insb
xchg
clc
push
call
int
fildl
jbe
pop
push
andb
mov
iret
repz
loopne
or
jns
push
js
out
or
jbe
nop
lcall
mov
xor
dec
data16
aas
pop
mov
dec
mov
fdivl
mov
cmpsl
or
clts
jg
cs
dec
scas
sbb
xchg
out
add
xor
mov
aaa
iret
sarb
or
mov
jb
mov
les
add
iret
es
dec
repz
add
movl
xchg
movl
inc
cs
xor
aaa
inc
push
inc
les
out
aas
cwtl
movl
ds
imull
int3
dec
add
mov
aaa
or
add
and
enter
adc
cmpsb
xchg
push
lahf
sub
pop
cwtl
or
push
pop
pop
jb
aam
dec
pusha
mov
fcmovnu
outsb
leave
rorb
daa
push
aas
jmp
mov
rolb
push
inc
in
bnd
mov
inc
aam
pop
inc
mov
xchg
pop
jb
aas
mov
adc
daa
or
iret
adc
adc
dec
jg
adc
push
mov
leave
inc
mov
fisttpl
dec
mov
out
and
pop
sbb
insl
nop
xchg
mov
sbb
add
jmp
leave
test
pop
mov
and
mov
and
and
in
call
jl
fs
dec
and
xor
das
cmpl
jbe
xchg
adc
inc
nop
mov
enter
mov
push
mov
inc
jnp
push
mov
and
mov
mov
inc
sarb
jg
daa
or
aas
and
pushf
mov
add
add
dec
in
int3
shl
jns
aaa
add
inc
int
xor
negb
lcall
or
cltd
jo
scas
in
mov
lcall
pushf
int
push
test
dec
mov
add
les
inc
sub
sub
inc
insl
inc
jne
push
dec
dec
push
dec
decl
imul
dec
jns
push
push
push
dec
fs
imul
addr16
pop
popa
addr16
jae
jno
incl
dec
popa
popa
imul
addr16
inc
push
push
jae
dec
ja
pop
pop
dec
jp
arpl
je
add
jno
arpl
cmp
push
dec
push
bound
jp
decl
push
dec
jo
dec
jns
jne
jns
dec
pop
jae
pop
jb
inc
pop
jae
inc
fs
push
dec
std
add
jo
pop
daa
sbb
jne
xchg
mov
dec
mov
push
jg
cltd
dec
push
sti
push
push
cli
insb
movsb
inc
enter
push
add
adc
add
cmp
and
sbb
cmp
or
sbb
jb
xor
fisubs
jns
push
imulb
insl
aaa
add
xor
addr16
loopne
and
inc
stos
repz
mov
enter
aam
pop
enter
mov
pop
mov
xchg
mov
inc
popa
xchg
xor
cmpsb
xchg
inc
mov
mov
cmpsb
lods
push
mov
xchg
inc
repnz
jnp
dec
jge
dec
or
arpl
jno
inc
nop
in
movsl
sub
add
popa
mov
lcall
push
jne
aas
jae
dec
cltd
or
or
mov
jp
jg
pop
dec
lret
sar
sub
jnp
dec
inc
jg
repnz
pop
inc
dec
jne
jno
push
outsb
push
imul
pushl
je
insb
pop
push
imul
scas
gs
cld
repz
adc
pop
dec
js
jo
or
incl
jb
std
jg
jne
fnstenv
jp
jb
add
push
cmp
sub
cmp
insl
and
dec
mov
imul
adc
xchg
and
inc
sbb
inc
adc
incl
fabs
sub
xor
sub
and
jg
nop
int
mov
imul
dec
mov
inc
mov
dec
xor
sbb
enter
jp
lcall
fsubrl
push
add
or
xor
je
jl
jbe
or
and
jmp
fucomp
dec
pushl
cltd
popf
mov
cmpsb
mov
push
gs
mov
add
mov
jl
outsl
insl
ljmp
adc
push
cmc
mov
mov
lret
mov
mov
pop
nop
sub
xor
lea
mov
inc
inc
lods
sub
and
aaa
ret
push
outsb
clc
orb
or
inc
in
pop
movsb
inc
fwait
test
pop
sub
jmp
and
fsubl
cld
sub
pop
lods
sub
mov
cmp
cmc
gs
pop
movsb
sbb
int
pop
mov
mov
test
aas
decl
pop
inc
push
jl
or
ret
mov
push
std
jns
sbb
push
sub
cld
dec
and
decb
jle
sub
loop
push
dec
push
nop
and
lahf
nop
aas
inc
jb
ljmp
jns
ss
leave
inc
int3
xor
jecxz
push
fidivl
dec
enter
pop
jo
or
call
fadds
cmp
es
add
sub
xor
jl
repnz
outsl
dec
mov
mov
xor
lcall
push
cs
popa
js
test
mov
mov
ret
jb
dec
add
push
aas
fldenv
inc
arpl
sbb
ds
jne
jmp
out
std
pop
push
xor
lods
cmpsl
dec
outsl
ja
popa
rclb
lcall
add
sub
cmpsl
dec
pusha
stos
pop
ret
add
lcall
les
push
push
cmp
daa
jp
das
cmp
xchg
test
stc
xchg
push
or
loope
push
std
ljmp
xor
inc
cmp
push
icebp
cmp
daa
stc
decl
and
into
xor
cmp
shll
lret
shll
cmc
ljmp
mov
pop
dec
jno
push
push
jg
ret
decl
jmp
jns
inc
jbe
mov
mov
mov
stos
sbb
sbb
out
add
pop
cmp
pop
shll
ljmp
outsb
pop
sub
ja
mov
sbb
int3
push
inc
inc
push
mov
testb
movl
pop
dec
adcl
jle
aaa
jge
stos
and
dec
jmp
pop
push
lret
pop
dec
sahf
in
pusha
stc
movsl
ret
push
ljmp
push
or
iret
mov
lods
push
inc
cltd
mov
mov
cwtl
mov
pushf
xor
inc
mov
jle
cmpsb
call
das
pusha
repz
cwtl
cmp
fdivrs
inc
out
pop
push
sub
mov
adc
adc
ret
mov
jle
stos
sub
dec
repz
jmp
jne
movsb
cmp
mov
sub
shrb
lcall
add
mov
dec
jne
push
call
frstor
out
clc
mov
cmp
sahf
pop
pop
and
insb
insl
mov
dec
push
push
arpl
in
cmpsb
cmp
icebp
or
popa
xchg
test
clc
cmpsl
scas
xchg
leave
push
push
inc
cltd
lahf
pop
pop
inc
insl
loopne
daa
jg
jne
push
daa
dec
incl
enter
sub
lods
cwtl
lahf
mov
jbe
sub
dec
add
add
mov
call
sbb
subl
sbb
mov
push
and
or
lds
pop
pushl
cld
jmp
cmpsb
fldt
outsl
arpl
nop
xchg
ljmp
dec
rcrl
inc
stc
mov
imul
dec
int
mov
ficompl
outsb
int3
sbbb
push
jg
sti
add
stos
rorb
push
push
out
and
mov
ljmp
hlt
or
mov
nop
pop
stos
adc
lcall
out
fs
cmp
cmp
xchg
ljmp
sar
xchg
push
push
sbb
jle
mov
pushl
mov
ficoml
or
ss
jl
or
or
sti
adc
test
inc
sub
aad
bnd
fwait
push
xchg
mov
pop
outsl
jle
loopne
xor
sbb
mov
add
addr16
mov
arpl
lds
int3
outsl
jle
jg
mov
and
jle
xchg
pop
out
int3
popa
adc
cmp
dec
stc
aaa
jmp
imul
rcll
addr16
shl
imul
mov
outsl
std
enter
lock
mov
test
stos
mov
jecxz
dec
inc
mov
popa
into
out
push
xor
fwait
call
inc
jo
lods
shrl
fisubs
push
mov
sahf
mov
lcall
dec
fldcw
pop
jg
add
movsb
sbb
cmp
jg
pop
push
xor
outsl
and
jno
adc
and
bound
lea
push
int
lock
cwtl
lock
cmc
dec
xor
in
jmp
adc
iret
fidivrl
adc
test
ljmp
hlt
xchg
js
sub
int
pop
stos
ja
xchg
lea
test
ljmp
push
pop
pop
repz
inc
movsl
push
dec
ds
xor
inc
roll
and
imul
cmp
mov
mov
mov
add
cld
or
cmc
lea
pextrw
mov
pop
shrb
mov
fidivrl
jo
ds
xor
push
mov
dec
and
add
rorb
xor
shlb
mov
ljmp
cwtl
pop
movsb
adc
mov
ds
pusha
js
scas
iret
aaa
dec
inc
mov
stos
lods
xchg
test
clc
decl
jo
in
and
bswap
jne
into
sahf
dec
xchg
and
or
fdivs
pop
and
pop
lcall
mov
jl
add
and
cmp
int
push
pusha
loop
incl
dec
mov
xor
fs
or
aas
and
or
jns
mov
jg
decb
cmp
sub
lcall
or
inc
mov
push
dec
scas
ja
mov
mov
push
call
es
rcrb
repz
pop
mov
push
cli
sbb
rcrb
aas
mov
or
pop
add
das
mov
frstor
pusha
mov
sub
cmp
or
sti
xchg
dec
mov
cmpsl
ss
jo
aaa
push
lds
data16
push
xor
mov
push
cld
push
fnstsw
xor
mov
push
push
jecxz
adc
decl
adc
cmp
or
and
mov
pop
xor
mov
and
sbb
aas
add
jl
mov
push
test
sbbb
inc
cmpsb
xchg
lcall
dec
je
pop
arpl
jae
xchg
outsb
arpl
add
push
mov
sub
ret
adc
iret
and
adc
inc
mov
adcl
mov
test
or
daa
add
and
movsl
in
mov
jg
push
xchg
jne
bound
xlat
and
sti
and
mov
cld
dec
pushl
inc
loop
inc
push
mov
xor
cmp
cmp
push
mov
ljmp
mov
cld
jle
pop
xor
mov
jle
out
insl
ja
fcompl
sub
es
pop
add
mov
and
lods
insb
mov
test
and
je
jecxz
inc
inc
add
xchg
dec
push
imul
insb
and
mov
push
push
cwtl
adc
insb
frstor
inc
bound
fisubl
lret
push
xchg
test
jb
fstpt
je
and
mov
jp
pop
cmp
fldcw
sub
emms
cmp
or
lret
test
pop
mov
shll
push
test
sbb
call
popa
cmp
sub
jo
imul
out
push
stc
pop
andb
add
pop
data16
mov
dec
scas
xlat
pop
fs
cmp
mov
in
jo
add
imul
daa
pop
lret
pushf
fwait
or
cli
lods
cld
pushl
jl
push
push
into
call
aaa
mov
mov
fdivs
shl
incl
push
lret
lcall
dec
inc
inc
mov
pop
push
sti
incl
dec
dec
scas
jbe
push
icebp
pop
dec
das
clc
call
fistl
add
push
gs
enter
inc
fdivr
adc
cmp
decl
jecxz
jge
es
cltd
jge
dec
gs
ds
inc
stos
pcmpeqd
int
and
push
pusha
adc
jnp
mov
adc
fs
push
pop
dec
xchg
in
mov
std
and
fisubrl
or
dec
xor
ljmp
cmpsl
outsb
dec
adc
jg
loope
inc
sbb
jnp
pop
cmp
sbb
repz
push
cli
jp
jbe
ljmp
arpl
fdivs
pop
int
pop
out
cmovle
cmova
ljmp
mov
xchg
mov
scas
jle
shlb
pusha
push
jns
pop
notl
inc
mov
xchg
popf
add
xor
or
stc
adc
mov
push
test
cli
xor
adc
fistl
push
jb
adc
xchg
pop
mov
mov
xchg
shlb
sbb
sbb
sbb
enter
jg
lcall
sub
xchg
pop
repz
xor
daa
in
incl
inc
in
dec
inc
adc
ja,pn
scas
je
inc
insb
xlat
mov
dec
mov
jg
mov
das
inc
ret
mov
pop
and
fmull
outsb
adc
fs
je,pn
outsb
rorb
dec
cld
aad
fs
cwtl
test
adc
mov
xor
mov
inc
inc
incb
orb
jle
mov
ja
sub
cli
js
dec
jp
sbb
push
cld
mov
adc
cmp
mov
pop
mov
scas
push
push
push
pop
cmpsl
xor
push
or
jg
push
jns
push
insl
jb
push
in
imul
insl
pop
add
int
pop
dec
mov
add
call
jmp
push
pop
shrl
rcrb
sahf
lcall
xchg
or
cli
decl
rolb
sub
orl
xchg
push
push
pop
mov
ljmp
inc
insb
push
es
das
rcll
mov
ret
adc
jae
sarl
lcall
popa
sub
pop
insl
sbb
and
shll
sbb
xor
frstor
inc
sbb
ja
adc
popa
adc
roll
adc
repz
lret
mov
clc
lret
dec
fisubs
mov
ljmp
sarb
inc
into
push
push
mov
sbb
sbb
push
jl
repnz
pop
sub
pop
xchg
dec
jne
ljmp
in
push
and
lock
dec
mov
inc
xchg
inc
jge
dec
dec
sbb
jl
xchg
lcall
sbb
mov
sub
or
push
jmp
jno
ljmp
rcr
es
cmc
js
add
inc
stos
dec
js
or
mov
jg
jg
push
add
scas
fidivrl
adc
in
lods
cwtl
jno
jmp
popa
dec
jno
push
jp
shlb
jg
ja
inc
js
jne
fsubl
stos
mov
jp
loop
dec
mov
repz
insl
jae
stos
lcall
cmpsb
sub
orb
push
jae
sbb
xor
cmp
or
jg
repz
cli
and
or
ds
decl
std
sub
stos
aam
or
push
imul
test
adc
jo
in
mov
add
mov
fs
push
insl
add
and
cmp
xor
imul
jle
jbe
mov
sahf
mov
or
jns
sbbb
and
imul
je
push
inc
xor
sub
or
shrl
in
push
push
aaa
movsb
fdiv
fisttps
jno
xor
lods
out
and
dec
popa
dec
outsl
outsl
je
notb
dec
adc
into
fwait
mov
sub
jg
push
pusha
mov
fidivrl
jbe
adc
in
push
adc
mov
mov
leave
push
push
dec
jbe
mov
jnp
add
jg
xor
push
jg
push
xor
jne
cmp
ret
push
out
dec
xor
ljmp
push
loope
call
ljmp
dec
inc
xchg
pushf
jg
out
cli
push
imul
decl
dec
jo
dec
sub
sbb
call
dec
dec
outsb
inc
cwtl
and
fwait
mov
jb
dec
jno
inc
lcall
push
es
cmp
sub
pushl
imull
or
inc
xchg
mov
push
jg
mov
push
push
mov
pop
bound
jg
mov
inc
rorl
cmp
in
xchg
testb
dec
fs
cmc
push
push
inc
sbb
daa
jae
add
sbb
out
push
mov
add
jge
pop
cltd
jmp
lcall
inc
ds
stos
mov
hlt
pop
aas
jne
push
inc
xchg
stos
inc
jne
outsb
inc
daa
dec
fidivs
jmp
loop
pop
jge
xorb
push
mov
movsl
xchg
gs
jg
test
jb
mov
outsl
ss
mov
roll
jno
popf
icebp
jbe
enter
insb
or
fcomip
into
pop
imul
sub
sbb
push
push
mov
pushw
push
call
enter
cmpsl
bound
lods
je
outsl
adc
ss
cli
stos
aad
cmp
cwtl
dec
scas
sbb
add
roll
ja
and
push
and
mov
mov
inc
or
mov
lcall
test
arpl
cmpsb
pop
pop
jbe
cli
sub
jp
add
push
sub
jne
xor
push
pop
aam
arpl
add
into
adc
clc
ljmp
decb
dec
inc
xor
shll
jnp
ret
push
mov
dec
cmp
jbe
lcall
mov
inc
add
fs
test
idiv
inc
push
xchg
outsl
imul
fisubrl
jle
xchg
out
and
bound
loope
push
jg
test
xchg
dec
pusha
push
js
push
dec
addr16
jl
fs
jb
jl,pt
pop
xor
nop
jne
mov
test
adc
xor
add
movsl
jg
lock
inc
jl
or
mov
inc
and
mov
mov
loope
or
leave
xorb
arpl
xchg
inc
inc
jp
cmp
ja
ljmp
push
push
addr16
mov
adc
push
pusha
outsb
ja
mov
xchg
mov
lcall
push
ja
push
mov
lcall
jne
push
pop
insb
push
mov
in
xchg
inc
fsub
pop
shll
pop
mov
test
in
dec
dec
int3
xor
inc
add
push
sbb
sbb
jmp
jl
fs
jb
cmpb
imul
emms
pop
or
cs
stos
mov
sub
jbe
mov
arpl
mov
push
popa
bound
xor
ljmp
xchg
xor
and
ljmp
jno
push
mov
mov
cli
pushl
xchg
ja
in
dec
pop
int
pop
in
rclb
cli
addr16
dec
std
push
xor
adc
push
push
mov
jmp
push
or
mov
and
das
sar
and
dec
push
cli
decb
dec
repnz
jae
jmp
jg
jns
dec
push
dec
outsb
sbbb
mov
jnp,pt
adc
cld
push
insb
inc
mov
push
out
push
lds
sbb
mov
mov
and
inc
jle
rcll
sub
iret
mov
xor
jp
in
inc
in
mov
call
shll
insb
dec
js
clc
jl
sub
and
mov
dec
adc
inc
pop
stos
scas
es
mov
stos
mov
incl
mov
pop
icebp
pusha
jnp
inc
lldt
xor
rcrb
mov
push
dec
mov
call
js
and
xchg
jbe
bound
rcr
lcall
cmp
xchg
enter
push
repnz
add
call
fdiv
xchg
fcoms
test
imulb
ds
cmp
xchg
dec
mov
pop
cmp
pushl
je
out
or
scas
aaa
push
adc
in
sub
aas
mov
lcall
js
es
imul
pop
rcl
inc
lds
push
or
ret
mov
call
push
into
das
imul
dec
js
cltd
or
mov
and
sarl
add
lock
cmpb
decl
inc
adc
cmp
in
js,pn
out
dec
push
or
lcall
dec
push
xor
pop
inc
bound
jmp
push
dec
push
or
sub
add
fwait
jle
jae
nop
mov
sbb
jg
rolb
pusha
add
or
cld
push
dec
xor
mov
sbb
jmp
dec
push
adc
pop
pop
es
fs
imul
call
cli
inc
push
adc
fs
das
or
fneni(8087
je
addr16
push
movsl
fwait
stos
push
inc
add
jg
dec
rcrb
and
cmp
out
add
mov
pop
lods
sub
ljmp
test
cmp
ljmp
mov
test
cmpsl
xchg
ds
cmp
xchg
or
or
pushl
cmpsl
scas
js
rep
sbb
jmp
mov
mov
cmp
sub
push
pop
cwtl
dec
inc
insb
push
decl
mov
mov
and
jp
loopne,pt
incl
push
popa
add
xchg
xchg
mov
sti
or
movsl
mov
mov
ss
adc
pop
pop
mov
call
cmp
ds
and
push
push
mov
xor
add
or
add
call
pop
frstor
test
lods
jb
insb
stos
call
xor
pop
icebp
sbb
stos
jecxz
es
loop
inc
push
xchg
cmp
mov
cmp
lods
je
sbb
xchg
mov
dec
sub
pushl
xorb
push
imul
pop
push
test
xor
adc
jmp
dec
leave
mov
pop
jl
test
outsb
push
jno
sub
mov
filds
sbb
adc
in
xor
mov
lcall
mov
push
xchg
dec
in
xchg
cmp
std
jne
jb
push
xchg
int
js
loopne
ja
ljmp
cld
xor
add
daa
cmp
lea
dec
jbe
xchg
decl
mov
mov
mov
aad
mov
filds
mov
dec
fnstsw
cmpsb
and
test
ljmp
pop
icebp
push
dec
fldt
push
fidivrs
cli
pop
pop
lea
lcall
sub
frstor
sbb
inc
cli
mov
jp
cmpsb
fisttps
fdivrl
imul
cmpsl
push
loope
icebp
adc
sub
inc
sub
inc
sub
mov
fdivr
jg
pop
jle
in
test
push
call
int3
dec
sti
cmp
add
sub
ljmp
pop
pusha
cmp
push
clc
or
mov
cmpsb
iret
mov
push
fistpl
inc
mov
imul
sahf
fbld
xor
dec
pop
in
adc
sbb
stos
cmp
push
cmp
test
sub
sub
mov
sub
and
sbb
and
mov
add
fiadds
pop
pop
iret
xchg
and
jecxz
into
repz
xchg
jg
ds
xchg
call
lds
or
push
lret
lds
mov
call
addr16
clc
adc
ja
pop
pop
jbe
pop
dec
jb
jae
out
bound
aas
jbe
scas
pop
jne
call
std
decl
push
adc
divps
mov
push
add
lds
jb
add
mov
pushl
cmp
adc
pop
jno
in
ss
sar
call
dec
pop
mov
push
in
inc
mov
add
call
popa
fcomip
jg
ljmp
mov
jo
stos
int3
lret
repz
inc
icebp
jae
jno
push
jg
mov
repnz
test
in
mov
push
std
ds
mov
ljmp
das
test
sahf
dec
inc
cmp
cwtl
mov
jmp
jae
xor
jb
or
push
sbb
adc
and
mov
mov
lcall
mov
subb
jp
icebp
imul
inc
test
pushl
dec
fs
es
adc
movl
add
incl
imul
cs
cli
jno
subl
jo
popf
scas
add
int3
dec
jmp
fcompl
imul
incl
movsb
loope
je
les
gs
add
lcall
dec
push
out
daa
insb
test
lcall
mov
mov
ja
js
addb
fbld
addr16
rorb
incl
addr16
dec
ds
out
adc
orb
ljmp
or
or
and
add
add
repz
inc
add
push
cwtl
icebp
popa
push
clc
inc
insb
mov
xchg
xchg
sbb
sbb
cld
mov
jae
add
push
loop
movsl
addr16
push
cli
ljmp
or
mov
inc
stos
pusha
push
pop
outsb
enter
mov
jp
add
out
push
mov
sbb
popf
cmp
push
decl
push
lock
xor
fwait
inc
xor
add
test
insb
fbstp
push
fisubs
and
jno
mov
ret
mov
cs
mov
sar
ljmp
pop
push
insb
sti
lods
jae
ja
inc
mov
pop
popf
ss
dec
push
out
sar
ljmp
in
mov
jns
cmp
xchg
sub
sub
out
and
sbb
ret
cmc
das
jne
push
xor
inc
sub
jle
add
and
sub
mov
jp
movsl
mov
cmp
sbb
adc
aas
push
das
pusha
push
sbb
adc
loop
outsb
ds
adc
pop
jp
mov
lods
pop
or
xchg
jecxz
insb
cmpsb
inc
cli
add
aaa
pop
imul
or
inc
fiadds
jmp
cli
es
std
ss
out
mov
ja
aas
lods
mov
fsubrs
push
icebp
jbe
adc
incl
mov
scas
mov
test
decl
pop
leave
dec
je
fldenv
ss
push
mov
adc
sub
outsl
sti
jle
dec
enter
add
outsl
clc
sub
outsl
jmp
cli
fidivrs
jl
add
dec
mov
jg
in
int
jb
scas
sti
adc
and
cmp
adc
adc
pop
mov
or
inc
insb
jo
repz
inc
repz
incl
fldenv
sbb
imulb
aaa
jge
imul
xchg
sub
imul
lcall
and
add
sbb
adc
stc
aas
jecxz
push
jae
xor
stos
pusha
jge
inc
hlt
scas
xor
jnp
fidivl
outsl
add
mov
inc
popa
lock
jbe
jnp
gs
loopne
dec
fs
mov
push
jb
add
add
push
add
sub
mov
or
jg
add
sub
adc
sbb
jnp
xor
dec
push
inc
or
jge
dec
stos
push
inc
in
call
test
mov
orl
movsl
cmp
jmp
ja
call
call
js
js
lahf
in
lods
and
inc
inc
dec
lret
outsl
ss
jne
sbb
jae
cltd
mov
xchg
es
push
xor
pop
push
pusha
xlat
xchg
xor
mov
sub
add
dec
js
pushl
or
or
test
jmp
dec
sti
xchg
jne
sub
andb
std
xor
fisttps
add
sub
popa
je
sahf
inc
mov
add
decl
imul
push
jb
adc
or
mov
ds
mov
addl
jmp
dec
pop
fs
pop
std
mov
xchg
insl
mov
adc
in
or
dec
popf
loopne
daa
aaa
enter
or
test
push
test
cltd
push
xchg
jle
jge
call
pop
mov
xor
adc
pop
popa
jmp
data16
jp
movsb
add
or
pushl
in
mov
add
pop
push
pusha
dec
cld
mov
out
push
insl
mov
dec
dec
rcrb
pop
lock
aas
outsb
push
fidivrl
sbb
pop
loope
pusha
pop
mov
ds
jg
inc
es
scas
stos
fsubrs
dec
imul
std
mov
sbb
aam
and
jle
arpl
xor
mov
cmp
xchg
aas
sub
lea
ss
mov
loopne
push
adc
mov
fstpt
push
ja
clc
add
insb
mov
xor
int
jne
or
cs
call
cmp
inc
in
jp
jae
jno
out
sbb
jb
ljmp
ret
add
repz
hlt
cmp
push
mov
jo
pushf
dec
mov
jmp
stos
je
dec
fstps
jno
xchg
lret
pop
scas
jne
pop
jns
lods
ja
jno
push
repz
incl
addb
sahf
mov
mov
cmp
mov
jmp
shrb
inc
cmpsb
add
sbb
and
mov
into
cmpsl
daa
cmp
ss
and
outsl
sub
inc
test
aas
add
dec
mov
imul
push
incl
ret
cmpsb
pop
cmp
dec
outsb
inc
lret
in
inc
pop
in
sbb
clc
push
xchg
popa
pop
ja
jl
or
push
rolb
popa
adc
aaa
cs
inc
sbb
imul
sar
adc
outsb
outsb
jae
insl
stos
aas
ja
xchg
sarb
cmp
ljmp
pushf
xor
push
jae
cwtl
dec
shrl
pop
pop
insb
out
and
decl
pop
loope
pop
dec
imul
daa
sbbb
incl
outsb
inc
fiaddl
jle
pop
dec
sbb
jno
pusha
fs
or
mov
sbb
sub
sbb
sbb
shll
jmp
sar
ds
add
enter
jbe
xchg
xor
aaa
mov
or
loopne
vphsubdq
sub
sub
inc
mull
lcall
ja
xchg
mov
jle
cmp
es
in
rorb
mov
popl
shll
jl
or
dec
mov
mov
data16
lret
js
ja
lcall
dec
ljmp
mov
pushl
or
or
pusha
push
inc
stos
mov
add
lds
insb
sti
pop
arpl
aaa
push
jns
xchg
jnp
push
outsb
mov
jmp
pop
mov
adc
inc
sub
decl
test
pop
cmp
xchg
jge
adc
in
and
adc
cs
incl
ret
loopne
adc
in
loope
cltd
in
jle
test
lahf
insb
xlat
mov
addb
rcr
iret
int3
mov
cmpsb
mov
jge
pushf
sahf
fsqrt
lcall
inc
arpl
fstpl
mov
mov
jnp
xor
dec
xlat
mov
mov
lcall
mov
incl
aas
popf
les
stos
mov
das
out
stos
bound
and
mov
pop
pop
call
mov
dec
fidivrs
xchg
loopne
mov
xor
push
mov
call
jp
ss
loop
popa
inc
dec
xchg
lds
test
add
sar
decl
popa
inc
sbb
ss
mov
call
sbb
in
inc
sub
mov
pushl
mov
sahf
jle
cs
jp
je
es
movsb
jecxz
jbe
repnz
inc
stc
es
pop
push
incl
sbb
daa
popa
in
mov
nop
movsl
push
pop
push
out
ljmp
add
das
cmp
jp
loop
movsb
repz
sub
adc
and
sbb
lcall
mov
pop
inc
call
pop
pop
pushf
sbb
mov
popa
data16
mov
and
into
sub
cmp
mov
pusha
mov
jns
dec
rclb
push
loopne
lods
inc
stos
mov
or
and
pop
movsb
aam
xchg
js
mov
add
mov
push
ja
popf
add
roll
push
incl
mov
pop
into
cmp
jne
call
shlb
and
ljmp
mov
arpl
mov
into
adc
adc
push
fstpt
push
pushl
js
bound
push
std
jns
outsl
into
imul
outsl
inc
ljmp
ljmp
inc
popf
or
gs
out
ja
dec
sbb
jmp
and
pop
jmp
pop
addr16
mov
sbb
int3
dec
shll
pop
out
arpl
cmp
insb
fildll
fmull
jne
add
mov
add
sbb
inc
enter
outsb
inc
mov
xchg
dec
icebp
stos
movsb
xor
adc
add
xchg
sti
lods
jno
lods
and
jo
gs
push
jae
fwait
incl
sub
mov
in
push
dec
mov
int3
push
push
jne
push
jmp
push
pop
sarl
push
jo
adc
push
jbe
ljmp
decb
and
jge
cmpsl
mov
jo
xor
inc
clc
mov
xchg
mov
lahf
adc
or
popa
jns
pop
dec
aas
sbb
ret
int
sbb
and
lock
test
add
xchg
les
cld
frndint
call
pusha
dec
jnp
xor
into
push
roll
aam
popa
int
repz
xor
pop
push
pop
cmpsb
cmp
scas
icebp
arpl
push
fcomip
aaa
pushf
iret
pop
dec
jp
sbb
sbb
daa
cmc
cmp
pop
icebp
mov
out
inc
jle
lods
and
xlat
or
jg
mov
aaa
push
loop
add
pop
decl
dec
scas
xchg
jle
test
dec
mov
xchg
popa
dec
pop
shll
call
push
les
push
adc
aas
scas
adc
inc
imul
dec
mov
popf
outsl
dec
ja
fdivr
jbe
stc
and
jae
faddl
lcall
popa
jne
or
sbb
cmpsl
push
mov
out
insb
ljmp
call
out
insb
shlb
adc
xchg
sbb
nop
stc
xchg
inc
dec
ret
or
insb
jne
repnz
sbb
push
pushl
add
cmp
inc
sbb
fstpl
sbb
mov
sar
pushl
fbld
je
fdivrs
inc
push
fistpll
push
test
jge
xor
jg
jb
mov
int3
cs
sbb
shll
jns
push
aaa
sbb
ljmp
test
xchg
mov
push
pop
dec
mov
decl
loope
lock
lods
test
push
add
pop
jl
cmp
sahf
bound
in
lea
aas
pushl
adc
pop
sbb
sub
addl
or
adc
loopne
fwait
aas
and
lahf
fdivl
push
sbb
cmp
add
rcr
sbbl
and
add
int
repz
add
lahf
fstpt
insl
mov
mov
ljmp
int3
cmp
ret
cmc
sbb
add
cs
outsl
frstor
push
ja
ljmp
mov
sbb
inc
test
addr16
fsts
sub
sbb
decl
mov
loopne
je
adc
mov
mov
jae
cltd
push
pop
int3
test
pusha
out
fnstcw
inc
icebp
cld
fwait
mov
cmpsl
mov
iret
stc
push
out
bound
cmc
xor
lds
push
mov
iret
ss
jle
ja
insl
dec
cmc
sbb
test
insb
je
mov
loope
test
call
sbb
or
pusha
mov
cmpsl
ljmp
pop
sbb
sub
push
enter
mov
and
ds
cmp
adc
xor
jae
jle
cmp
stc
adc
int3
push
enter
fcomps
pinsrw
push
and
scas
nop
jecxz
ja
mov
pop
clc
xor
mov
pop
inc
jg
lds
insl
mov
inc
pop
int3
mov
push
loop
imul
lcall
push
pop
jbe
lods
mov
add
lea
shrb
ss
out
cmp
test
stos
scas
push
and
jbe
jnp
test
cmp
jae
push
sbb
jmp
dec
shr
in
cmp
lock
jmp
lea
push
popa
mov
cwtl
data16
in
outsb
and
ss
jl
mov
mov
and
jg
mov
mov
jo
cs
mov
push
adc
incl
movsl
push
mov
into
dec
cli
jg
call
pop
sub
nop
add
jg
xor
cmpsl
daa
in
cld
dec
or
xchg
mov
lcall
icebp
sbb
gs
xchg
pop
in
push
out
stc
sti
cli
inc
sti
cmc
add
sub
je,pn
push
iret
jbe
xor
push
jge
pushl
sub
or
add
and
ljmp
ficoml
imul
push
decl
sahf
mov
adc
cmpsl
xor
xchg
mov
aas
je
adc
mov
jg
in
add
push
mov
dec
leave
mov
jecxz
into
mov
jmp
mov
jbe
jmp
cmpsb
jmp
int3
mov
add
call
cwtl
jbe
loopne
cmp
cwtd
nop
mov
stc
push
mov
push
fiaddl
sbb
ja
sbb
cmp
mov
jl
mov
ret
inc
push
in
imul
add
iret
test
jg
inc
pushf
stos
test
mov
lods
aas
repnz
xorb
and
or
push
arpl
push
scas
push
lcall
adc
xorb
inc
cld
push
aam
hlt
ja
cli
cmpsl
sbb
outsl
stos
and
andb
adc
decl
pop
incb
aad
adc
mov
es
sbb
je
dec
jg
mov
jmp
cmpsl
add
clc
adc
cs
mov
and
movl
out
mov
pop
mov
mov
scas
clc
jg
gs
sub
scas
inc
mov
cltd
ljmp
mov
test
mov
sbb
inc
xor
mov
push
and
add
cwtl
jl
js
or
fs
decl
fdivl
jl
mov
frstor
mov
xchg
cmpsb
rcll
leave
lods
xor
decl
dec
punpckhbw
mov
test
xor
and
jmp
or
xor
iret
or
out
adc
jmp
add
cmp
xor
shll
sahf
xchg
jl
inc
repnz
bound
pop
xchg
sub
adcb
or
loop
push
ljmp
lcall
inc
leave
and
sti
das
dec
out
pushf
jno
add
adc
test
mov
mov
daa
popf
repnz
gs
stos
repz
call
mov
int
aad
pushl
jnp
xchg
out
pop
outsb
and
les
scas
mov
lcall
lea
mov
aas
xchg
push
loop
xor
add
mov
mov
mov
and
incl
sti
mov
cmc
addr16
ss
adc
dec
ljmp
enter
ja
mov
fdivrl
adc
rcll
mov
pop
lock
lcall
lret
mov
ds
decl
int3
out
inc
fsts
push
mov
aas
lcall
sar
out
mov
and
test
adc
cltd
xor
jmp
or
jo
and
cmpsl
add
xchg
sahf
cmp
or
sbb
mov
mov
and
jb
inc
dec
ret
imul
mov
jl
ret
pushl
add
push
imul
xchg
call
mov
fnstsw
mov
push
lods
fsubs
add
sub
or
cmp
movsbl
js
jle
adc
int3
xchg
and
inc
lret
pop
popa
push
sti
pop
outsl
enter
add
iret
ljmp
push
jp
mov
mov
mov
nop
stc
push
push
dec
dec
xchg
push
inc
call
jge
sbb
sbb
inc
fnsave
inc
jp
rorl
bound
pop
shlb
cltd
repz
pushl
xchg
xchg
xchg
sub
scas
pushf
stos
mov
in
out
orl
sub
loop
adc
scas
test
scas
aas
incb
push
bound
iret
loop
loop
insb
aaa
xor
jmp
orl
aas
call
daa
jecxz
lods
and
out
cmp
gs
and
mov
dec
mov
mov
sbb
ja
stos
icebp
push
les
imul
push
test
call
test
mov
mov
adc
lds
mov
sbb
and
cwtl
sub
jmp
jae
push
jl
lods
add
sbb
rorl
popa
into
add
movsb
sahf
xchg
int3
aaa
lea
fcomip
scas
lods
ret
jmp
and
arpl
inc
out
subb
leave
jns
jmp
dec
rcrl
imul
pop
push
scas
cmp
push
jmp
xorl
mov
push
std
decl
cmpsb
shll
popf
scas
inc
jbe
dec
jbe
dec
movsl
and
decw
and
lea
clc
sub
pop
inc
dec
icebp
cs
sub
jo
mov
add
rclb
mov
add
test
jne
aam
decl
pop
enter
jnp
or
push
mov
jb
aad
fs
insl
jmp
mov
mov
mov
cltd
mov
test
add
shl
inc
clc
sbb
sub
mov
cs
push
lods
add
clc
ljmp
scas
pop
or
sbb
adc
push
sti
or
mov
ficompl
xchg
pop
scas
inc
clc
out
push
inc
cmp
cwtl
movsl
cltd
xchg
stos
mov
ret
sub
or
sub
pushl
adc
xor
rorl
push
xor
arpl
cmovp
mov
pop
or
sub
push
lea
cli
jae
xchg
das
dec
stos
mov
adc
jne
sbb
lea
test
sahf
push
inc
outsb
mull
call
fdivl
push
shll
outsb
jb
iret
pop
lods
scas
jg
xor
sub
repz
push
push
jg
add
or
add
cld
jmp
jmp
icebp
sbb
adc
das
icebp
loop
jge
test
jmp
pop
imul
push
mov
dec
popa
in
cmp
cmp
jno
lock
jmp
mov
insl
jo
sahf
push
jb
push
movsb
adc
data16
sbb
ds
push
pop
fcompl
xor
popf
inc
ja
mov
jb
sub
cmp
cmp
inc
push
mov
dec
or
cmp
clc
mov
lods
into
out
outsl
addr16
icebp
out
jl
and
rolb
mov
pop
jo
sbb
sub
dec
or
icebp
sbb
clc
outsl
clc
pop
mov
stos
or
mov
fdivrp
or
repz
mov
jg
ret
fsubrl
pop
adc
add
push
gs
sbb
pop
fcompl
or
xchg
jns
mov
fidivrs
adc
mov
fcoml
incb
push
int3
mov
cmpb
cmp
sub
mov
pop
sbb
sub
outsb
and
inc
jmp
xor
inc
cld
inc
int3
es
outsb
lea
inc
mov
loop
js
ja
xor
mov
repz
stc
jecxz
jo
dec
int3
xor
cmpsb
pop
leave
adc
mov
and
pop
test
int3
mov
sub
xchg
mov
mov
aas
cli
push
incl
addr16
inc
ret
stos
and
out
inc
mov
out
inc
shrl
fdivrl
std
ljmp
push
sti
add
out
stos
fwait
adc
fs
lret
aaa
cld
push
jb
pop
cmp
movb
popa
fisubl
movsl
jo
insl
mov
sarl
inc
jmp
adc
addr16
push
mov
sbb
sub
push
sub
pushl
jmp
jbe
hlt
sahf
aaa
jbe
mov
repz
inc
bound
jnp
in
cmpsl
mov
mov
jmp
addr16
gs
jg
ss
out
jg
lods
in
add
loop
icebp
dec
test
fwait
mov
std
call
les
ds
and
mov
jne
jmp
das
push
adc
pop
xor
decl
leave
cmp
shlb
ja
add
cld
jg
cmp
shrb
arpl
iret
std
push
or
imul
xor
jp
adc
inc
mov
in
or
imul
out
cmpsb
dec
mov
push
fidivl
call
push
pushf
push
mov
imul
loope
pusha
lcall
push
mov
ljmp
adc
jnp
pop
dec
jecxz
repz
push
andb
daa
push
lret
dec
incl
out
repz
insb
ret
pop
lods
inc
mov
dec
out
inc
jg
loope
int3
add
jg
ljmp
jns
adc
mov
movsl
dec
sti
xor
ljmp
push
inc
cmp
ret
arpl
and
insl
into
aas
jbe
sbb
outsl
ljmp
loop
jl
scas
add
in
and
jo
sbbb
enter
jno
jno
sbb
lret
mov
pushf
cmp
call
jbe
jb
cmp
push
out
push
mov
mov
cmp
jg
popa
fnstsw
jbe
cmpsb
mov
ljmp
out
and
rolb
or
or
push
jbe
push
mov
outsb
dec
divl
jl
adc
xchg
insb
ficompl
dec
les
mov
inc
ja
xchg
jne
pop
clc
or
and
push
in
lret
jne
mov
ljmp
je
jl
aad
sbb
sub
lea
mov
arpl
mov
je
les
push
xchg
icebp
das
fcompl
adc
cmp
outsb
fists
andl
ret
clc
cld
dec
insl
xchg
stos
ja
arpl
adc
lcall
add
je
and
jno
mov
add
js
pop
fnstsw
decb
incl
push
insb
push
xorl
add
icebp
xchg
inc
sarb
loope
mov
out
imul
fwait
outsb
test
jnp
cli
mov
push
sbb
scas
shl
ret
repnz
in
aam
gs
repz
decl
fbld
push
leave
jb
mov
pop
xchg
clc
jo
cmp
das
cli
ljmp
add
push
dec
jg
jp
stos
inc
jl
lea
cwtl
aaa
pop
fsubs
decl
dec
loop
insb
fs
cmpsl
jl
xchg
arpl
out
xchg
inc
jp
aaa
popa
insl
xchg
mov
pushl
out
sub
negb
fidivl
outsb
outsb
mov
lcall
out
ja
mov
jne
or
dec
inc
mov
inc
in
jg
push
pusha
repz
or
pushl
add
ret
es
iret
sbb
push
inc
xor
adc
push
gs
adc
fnsave
inc
push
sti
push
loop
pop
mov
push
lock
push
fildl
pop
pop
pop
nop
jge
loopne
jg
into
sbb
xchg
add
das
arpl
imul
xchg
sbb
fsts
data16
jno
cmp
inc
lcall
filds
inc
insl
mov
push
gs
subb
mov
mov
sub
xor
repz
out
daa
js
popa
jbe
pop
ljmp
pop
mov
arpl
ds
pop
aad
or
out
pshufw
push
icebp
addr16
loope
lcall
dec
mov
jo
iret
sbb
test
movsb
sbb
pushl
out
pop
ja
jo
sub
pop
sarl
cld
movd
mov
mov
sti
fistpl
add
test
scas
jle
mov
add
push
insb
shll
cmp
cmpsb
adc
sbb
pusha
sti
xchg
cmp
daa
decl
ret
xchg
lods
cli
xchg
xchg
mov
push
pusha
push
mov
fs
dec
fldcw
lea
sub
mov
out
popa
add
addl
add
rcrb
mov
adc
xor
inc
jbe
dec
insb
sti
mov
mov
fldt
clc
bound
ret
and
ljmp
frstor
mov
rorl
push
pop
bound
jl
adc
mov
mov
pushl
clc
sbb
out
emms
insl
add
testb
dec
dec
lahf
and
pop
adc
outsb
es
test
test
sub
cmc
add
xor
ss
sbb
push
mov
sub
inc
ret
fdivr
sbb
jg
push
clc
dec
add
les
push
or
or
incl
rolb
inc
hlt
jle
je
push
repz
jbe
std
dec
dec
push
cli
xor
loopne
xor
dec
mov
mov
jmp
lcall
sbb
add
dec
loop
or
mov
in
pop
popa
or
sub
stos
xor
mov
mov
popf
es
sbb
rolb
movsb
cmp
and
incl
cli
push
dec
cmp
sbb
imul
pop
dec
dec
jns
or
push
dec
cmp
imul
outsb
jle
add
ja
cli
sbb
sub
pusha
in
cmp
fbstp
test
in
xor
pop
push
dec
add
cmp
daa
inc
loope
fwait
lcall
test
dec
arpl
repnz
addr16
pop
mov
sub
mov
cs
xor
imul
pop
hlt
fcomip
jb
bound
add
jp
mov
cld
jg
enter
in
inc
fs
xor
imul
dec
pop
test
xchg
xchg
lcall
shl
fbstp
lds
imul
jns
mov
sub
loope
incb
adc
ljmp
ljmp
leave
jl
out
or
rcrb
pusha
adc
cmp
jg
mov
sbb
inc
jl
call
imul
inc
bound
in
jmp
push
cwtl
pop
mov
xchg
ss
sbb
idiv
lcall
pusha
xor
add
imul
sti
sbb
or
imul
xor
rorl
xor
jo
mov
adc
cltd
jmp
iret
add
lcall
inc
or
adc
sbb
enter
bnd
adc
test
push
call
mov
enter
push
fbstp
and
xor
and
pusha
inc
mov
out
and
dec
int3
ljmp
xor
jae
movq
sub
outsb
push
push
outsl
pop
shll
imul
rolb
sbb
lcall
into
xor
cld
and
push
pop
daa
pop
aad
mov
call
stc
mov
mov
mov
xchg
push
pop
and
jb
mov
adc
or
fstps
jo
ret
adc
jge
test
out
orb
shll
xchg
cmp
adc
push
jne
xchg
int
cld
push
xchg
mov
clc
es
mov
mov
pop
dec
in
cmp
clc
pop
loope
xchg
and
push
icebp
mov
jnp
or
dec
mov
inc
ja
inc
xchg
xchg
gs
sub
mov
dec
in
movsb
repnz
mov
aaa
std
add
xor
cs
ss
push
or
jbe
and
pcmpgtd
jecxz
aad
pop
std
jge
adc
loop
jae
sbb
lcall
decl
push
push
jno
dec
cmp
insl
and
js
leave
mov
jg
pushw
sarb
push
insb
push
mov
das
inc
inc
cmpsb
call
mov
outsl
lds
sbb
cmp
in
mov
jmp
fsubrs
push
cli
adc
or
cmp
push
dec
sub
mov
and
push
jo
push
dec
adc
dec
sub
gs
fcompl
add
cli
sub
data16
and
bnd
movsl
sub
jno
loope
push
jns
add
inc
movsb
pop
inc
cli
xor
xchg
adc
sar
call
inc
popa
jne
mov
cmp
adc
inc
jmp
movsb
insl
push
hlt
jl
movsb
int3
xor
add
cmp
aas
push
push
stos
lahf
mov
into
mov
movsb
jns
jg
and
xchg
mov
mov
ja
inc
and
inc
ljmp
sbb
xor
shll
les
data16
fidivs
cmp
xlat
push
push
ljmp
jo
add
in
sar
ljmp
sub
adc
out
inc
aaa
shlb
fsubrl
dec
and
add
jg
pop
ret
sub
imulb
sbb
dec
movsl
mov
mov
pop
dec
aaa
jl
and
scas
icebp
lcall
add
popa
inc
stos
shrb
in
in
cmp
call
adc
add
loopne
sbb
add
sub
and
stos
cmc
ja
jge
xchg
jp
dec
xor
or
mov
hlt
scas
cmpsl
push
and
push
push
lret
or
aaa
xor
fildll
inc
adc
decl
in
xchg
inc
sbb
xchg
sbb
outsl
inc
insl
out
cmpsb
push
mov
jae
stos
ljmp
loope
call
aam
sub
cmp
lds
fiadds
inc
std
xor
arpl
and
fistpl
pop
xor
lds
ja
clc
add
pop
push
add
sub
push
sub
ds
push
cmp
add
das
clc
pop
dec
out
or
js
fildll
shrd
jmp
pcmpeqw
jmp
cmpl
adc
stc
mov
mov
fisttps
in
mov
lock
xor
decl
fsub
adc
ss
adc
bound
loop
inc
daa
es
or
incl
loopne
push
sbb
cmc
jl
push
js
adc
fwait
mov
inc
sub
xor
sub
mov
add
outsl
fmull
leave
push
xor
and
cltd
incl
cmp
icebp
adcl
pop
mov
jg
pusha
clc
dec
fcoms
xchg
sbbl
fwait
icebp
inc
clc
mov
data16
and
push
push
test
loopne
dec
test
lcall
fisttps
inc
pop
out
xor
icebp
lcall
jne
ret
ja
sub
push
mov
sti
out
adc
ljmp
mov
pop
test
push
repz
cmc
call
jge
jg
push
mov
pop
call
ljmp
mov
stos
stos
lea
incl
mov
mov
ljmp
adc
test
imul
nop
popf
jne
ds
pop
mov
fs
mov
lcall
decl
test
mov
dec
mov
mov
ja
sti
ljmp
stos
fwait
mov
cmpsl
scas
mov
add
xchg
sahf
stos
mov
mov
decl
jbe
mov
jg
jge
mov
inc
mov
mov
push
xor
testl
add
mov
mov
xchg
jns
test
mov
push
mov
cmp
aaa
pop
pop
pushf
xchg
dec
add
add
clc
cs
or
push
xor
add
push
arpl
test
jnp
mov
popa
jno
in
push
jbe
ljmp
push
add
repz
jg
cmpb
jno
cmp
leave
adc
dec
negl
fistps
test
out
out
cmp
push
insl
and
push
push
and
jmp
std
incl
inc
xor
sub
and
mov
jbe
sbb
mov
sbb
out
or
and
fldenv
inc
pop
add
adc
stos
jle
push
xchg
mov
sbb
jge
mov
dec
push
mov
mov
pop
mov
stos
xchg
mov
ds
in
pop
out
lret
xor
jg
push
adc
inc
inc
frstor
pop
and
push
idivb
daa
fdivp
sub
js
xor
insb
mov
mov
test
jge
mov
in
ficoml
jp
mov
dec
jns
inc
xchg
inc
sahf
jg
ljmp
std
dec
bound
aam
mov
je
movsb
mov
andb
jmp
data16
cmpsl
lods
imul
push
gs
scas
test
bound
stos
stos
cmpsl
inc
jmp
incl
cmpsl
stos
xchg
and
ss
lret
mov
test
mov
xchg
push
in
mov
outsb
mov
xor
jg
call
test
je
dec
repz
roll
and
sti
mov
jmp
xchg
mov
mov
dec
ja
test
mov
lds
cli
aaa
and
push
pushf
add
sub
mov
cmp
sahf
dec
mov
mov
add
jp
leave
mov
sbb
mov
or
and
jl
popa
aaa
jbe
add
incl
sti
mov
xor
or
jle
jge
movsl
adc
push
ljmp
mov
sub
repnz
in
and
add
out
cli
jg
pop
es
sbb
lret
mov
adc
cmp
rclb
incl
pop
pop
xor
sbb
mov
dec
mov
stos
ljmp
or
inc
mov
nop
push
mov
inc
lcall
mov
cwtl
sti
mov
stc
mov
fcomip
incl
negl
xchg
iret
adc
pop
js
and
adc
out
insb
aaa
sbb
jg
icebp
add
push
mov
or
cmp
xor
shlb
decb
mov
inc
mov
sbb
lods
push
jge
lock
jg
adc
lahf
sbb
movsl
in
push
rorb
lock
mov
sub
dec
pop
data16
dec
and
pmaddwd
outsl
out
sbbl
mov
push
sti
fs
repnz
sbb
and
cmp
pusha
jnp
mov
push
insb
jno
lret
aam
sbb
loopne
jecxz
insl
lret
pop
adc
adcb
ja
das
jmp
mov
jae
mov
incl
mov
inc
lcall
sahf
bound
les
push
insb
fsubrl
les
imul
lahf
pusha
pushf
push
jp
outsb
arpl
jmp
pop
fisubrs
arpl
adc
vmread
sbb
xor
jae
adc
add
aaa
jle
push
jns
or
pop
cld
sbb
jno
mov
mov
aas
pop
fadds
outsb
test
andb
inc
test
adc
jb
and
push
scas
mov
std
and
add
pusha
mov
cmp
sbb
stos
push
scas
push
jne
enter
push
jmp
xor
xor
subl
orl
jmp
adc
aam
hlt
push
into
stc
mov
out
aas
jb
ljmp
jae
shrl
nop
lock
sar
outsl
pop
popf
fwait
jl
inc
fimuls
out
inc
pop
jae,pn
add
push
mov
jle
inc
aad
push
loop
cwtl
push
mov
ficoms
jl
stos
jmp
ret
icebp
or
add
dec
insb
jp
stos
push
cmpsb
pop
outsb
cmpsl
sub
inc
jle
popa
sub
movsb
roll
in
push
insl
repz
jmp
pop
pushf
out
dec
clc
std
popa
cmp
mov
dec
pop
stos
mov
push
cmp
and
mov
push
repz
or
and
jo
push
arpl
rolb
sar
add
ret
je
popw
xor
adc
or
test
push
pop
daa
stos
decl
and
jne
repnz
insb
pop
jmp
dec
cmp
ss
pop
dec
je
ffree
jmp
rcll
jno
add
cld
call
push
or
xchg
out
test
adc
int3
bound
inc
lds
push
cmp
repz
ja
ja
adc
jns
in
push
inc
sbb
sbbb
xchg
rcrl
cld
mov
and
imul
jge
test
ljmpw
mov
cmp
idiv
fwait
and
lock
stc
cld
or
pop
mov
sbb
orl
fadd
daa
inc
dec
divl
lcall
mov
inc
dec
dec
mov
enter
mov
mov
outsb
js
std
out
int3
add
or
fbstp
inc
and
inc
stos
loope
iret
sub
cmp
movsb
int
call
lcall
jno
insb
xor
sub
aaa
daa
je
sub
sub
mov
pop
sub
rclb
fisubrs
adc
clc
pop
loopne
xchg
das
push
int3
mov
pop
xlat
je
cmp
jb
mov
jg
outsl
xor
inc
cwtl
ret
cs
pop
adc
shrl
into
ljmp
out
jbe
data16
sbb
out
daa
jl
out
pop
add
cmc
dec
jmp
sub
jmp
int3
cld
dec
ffree
filds
jl
in
push
stc
into
in
jno
dec
in
inc
call
rol
ss
pop
jmp
int
cs
pushf
adc
nop
into
es
inc
cli
ljmp
and
out
cmp
ficompl
push
popa
xchg
inc
mov
in
xor
out
dec
inc
jb
inc
cmp
shrb
push
push
inc
in
loopne
cli
and
push
jmp
decl
push
fidivs
jns
pop
repz
push
loopne
int3
fdivrl
ja
adc
fisubl
out
fwait
hlt
loopne
push
repnz
pop
jmp
out
sar
aaa
jg
out
xchg
jmp
push
dec
fs
inc
push
dec
sarl
lds
dec
lahf
mov
push
jb
sti
out
inc
dec
mov
insl
je
aaa
outsl
jmp
lods
addr16
insl
shlb
ret
lods
out
push
lds
adc
push
lock
add
in
call
mov
vminps
xor
mov
sub
inc
in
or
cli
fidivl
ficoml
inc
iret
inc
into
loop
ret
mov
adc
mov
popa
popa
cmpsb
pop
push
dec
jbe
jge
push
rcll
jg
add
repz
add
outsb
dec
rcr
jb
adc
fstpt
push
int
jb
out
xchg
stos
loopne
xchg
fiadds
jbe
out
or
testb
ljmp
call
mov
push
and
mov
dec
rol
inc
icebp
jb
sbb
inc
adc
loop
jge
jg
mov
pop
into
sub
fs
out
inc
push
mov
notb
std
lret
fldcw
ja
dec
shlb
jo
lds
repz
fildll
cmp
sti
mov
jecxz
pop
in
sarb
lock
dec
scas
and
mov
cld
das
ret
add
enter
adc
or
and
mov
pop
mov
in
aam
mov
mov
enter
stc
shrl
ljmp
add
cmc
lods
popa
push
cmp
push
les
push
dec
mov
icebp
push
ficompl
cld
fimuls
jno
repz
jg
xor
fprem
je
nop
in
dec
push
in
fcoml
jno
adc
adc
and
push
push
fadds
inc
jge
stos
test
imul
stc
ffree
stos
movsb
mov
mov
jb
mov
fistpll
fcomip
pop
icebp
int
push
ret
jecxz
fisubs
add
adc
and
out
ss
and
jge
push
popf
pop
jno
inc
push
into
and
scas
pop
mov
inc
mov
dec
ret
jne
in
pop
loopne
sub
sub
push
aam
inc
jmp
icebp
push
nop
sub
imulb
scas
mov
lret
push
loope
fists
jbe
push
dec
fcomip
cld
inc
push
shl
int
cmp
sub
adc
imul
sbb
and
xchg
jbe
mov
pop
add
dec
imul
inc
sbb
jg
out
mov
push
or
out
push
mov
scas
iret
or
pop
adc
dec
shlb
sbb
add
les
rorb
loop
insb
inc
mov
mov
out
clc
mov
xor
push
adc
ficoml
inc
mov
sub
icebp
pushl
lock
sub
push
jmp
pusha
add
mov
jp
cmpsl
push
ret
mov
incl
mov
ja
cmp
enter
pop
mov
mov
stos
outsb
fcomip
das
xor
int
push
sbb
jo
ss
scas
addr16
push
mov
scas
cli
cmpsl
inc
mov
subb
std
push
test
bound
mov
fdiv
ret
mov
and
mov
dec
cld
inc
cmp
fwait
adc
or
cmp
sbb
inc
jge
and
movsb
cmp
xor
xor
shlb
jg
loope
dec
add
and
inc
int3
ss
dec
test
subb
ret
jg
mov
mov
mov
test
sti
aaa
inc
arpl
xchg
sbb
sub
pushl
push
cld
cmp
popf
inc
mov
xchg
xor
in
mov
ljmp
in
jno
pcmpeqb
mov
mov
inc
test
popa
out
xchg
cmp
rorl
lcall
sbb
int3
mov
mov
jg
sbb
std
sub
insb
xor
dec
adc
push
out
inc
outsl
or
cmp
push
clc
test
insb
outsb
push
cltd
insl
mov
push
pusha
call
roll
jb
ficoms
jno
rep
sti
xchg
imul
scas
mov
sbb
fadd
cwtl
ret
sub
and
lock
out
cli
outsb
addr16
insb
cli
sub
decl
in
add
mov
dec
cmp
mov
sub
cmp
ljmp
xor
xchg
insl
mov
inc
dec
mov
test
lea
add
addb
imul
sub
call
xchg
inc
inc
xor
cmp
cmp
and
fldenv
or
push
add
or
hlt
jmp
adc
mov
push
jb
nop
scas
jnp
pop
insl
xor
and
pop
mov
xlat
popf
es
faddl
pop
addr16
outsb
add
push
dec
sbb
pop
push
cmp
cs
and
fisttpll
xchg
bound
pop
lahf
sub
les
dec
xor
push
xor
cld
sbb
pop
dec
sub
xchg
cwtl
mov
outsl
cld
fldt
jbe
inc
adc
int3
jb
ss
jg
push
arpl
arpl
sub
in
loop
mov
cs
cwtl
cmp
fists
dec
pop
inc
rclb
jg
or
int3
xor
popa
mov
leave
ds
dec
rcrb
inc
xchg
sub
pop
adc
xor
sbbb
std
lahf
test
out
push
pop
repnz
inc
out
jmp
pop
cmp
push
imul
les
sub
mov
shl
call
adc
test
or
int
mov
xlat
js
jle
push
int3
add
decl
cld
jbe
mov
xor
xchg
decb
push
es
inc
test
sub
xor
call
ret
jl
pop
jbe
mov
scas
sbb
adc
sbb
jecxz
repnz
push
sbb
pcmpeqd
jae
dec
int3
aas
gs
lds
lcall
pop
fidivrl
decb
push
jecxz
loope
inc
out
mov
sub
pop
fists
decl
call
sbb
sbb
ss
in
std
or
leave
es
jb
les
or
mov
repz
out
cli
cmp
and
test
cmpsl
adc
cmpsb
cmc
cmpsl
xor
xor
sti
dec
gs
pushl
outsl
stc
push
pop
loop
jo
popa
mov
ljmp
shll
ja
mov
ret
cmc
incl
jle
xlat
mov
fwait
mov
push
push
jg
lcall
inc
shrl
aaa
push
sub
jb
sbb
enter
inc
lahf
push
pop
sbb
fs
mov
in
pop
xchg
lds
out
out
ss
add
clc
addr16
testb
lds
dec
ret
repz
xchg
rolb
cmpsl
popf
xchg
sub
pop
xor
dec
outsb
or
push
jo
cli
xor
fsts
dec
pop
clc
test
push
inc
mov
int3
cmpl
xor
loopne
fstps
incl
pop
mov
popf
in
sahf
xchg
sahf
pop
sti
mov
adc
test
jg
hlt
xor
and
call
mov
movsb
push
xor
mov
mov
pop
addl
iret
ror
inc
outsb
stc
bound
arpl
lcall
decl
or
fimuls
inc
and
sbb
add
adc
cmp
or
outsl
mov
loop
clc
scas
and
xor
cmc
pop
pop
loopne
fdivrl
in
mov
adc
mov
push
push
icebp
scas
cld
aas
clc
push
add
cmp
mov
aaa
dec
xor
push
data16
popa
mov
jge
stos
ffreep
push
inc
cmp
ficomps
pop
popf
sar
cmp
dec
pop
xchg
adc
data16
and
jl
nop
shrb
dec
shlb
mov
incl
movsb
jg
push
es
insl
dec
inc
mov
loope
lcall
cld
int3
add
sbb
push
pusha
lcall
inc
xor
mov
addr16
inc
or
mov
mov
stos
push
pushl
inc
sbb
nop
dec
add
sub
icebp
incl
jg
fwait
adc
mov
mov
cmp
scas
jns
inc
roll
dec
leave
inc
or
mov
ja
xchg
xor
loop
pushl
scas
push
and
inc
xchg
imul
adc
daa
push
mov
push
aam
sti
movsl
jge
sbb
sub
arpl
dec
lods
push
pop
push
ss
mov
cld
incl
adc
in
sbb
pop
or
bound
out
pushf
mov
fs
icebp
incl
and
push
mov
xchg
dec
imul
data16
mov
pop
dec
mov
sbb
stos
popf
xor
iret
scas
inc
dec
inc
jae
lock
jmp
addr16
add
test
lods
andb
fimull
add
call
arpl
jne
pop
lret
sbbw
pop
add
lock
jmp
pop
sarl
nop
cwtl
decb
cmc
das
jl
mov
in
daa
or
jbe
ljmp
jg
movsl
call
loop
fs
sbb
mov
call
test
enter
mov
cmp
aas
push
in
fistl
jbe
insl
imul
push
jl
es
jge
jl
jbe
insb
ret
std
ljmp
bound
outsb
xchg
xor
adc
cmp
insl
outsb
jecxz
out
or
ja
jo
gs
jo
clc
mov
cmp
sbb
jg
stos
or
out
sbb
add
push
ljmp
out
daa
loop
sti
xor
ja
stos
fmul
mov
or
je
sar
jg
orl
mov
adc
shll
imul
and
imul
and
cli
cmp
inc
push
enter
xchg
scas
dec
xchg
mov
or
test
mov
pushl
dec
add
pushf
xchg
xchg
lret
sbb
arpl
xchg
jle
icebp
insb
dec
ljmp
or
sub
repnz
push
push
incl
push
sub
pop
aas
repnz
loop
jbe
or
xor
inc
cmp
subb
outsb
clc
lock
mov
mov
test
aas
push
lds
outsb
push
sbb
xchg
adc
pushf
mov
sar
lea
sub
ret
xor
jnp
pop
lea
push
adc
xor
pushl
adc
je
push
cmp
sti
push
cmp
stos
mov
sbb
inc
jno
push
aam
jo
push
pop
insb
or
or
in
ficoms
cmp
sub
or
cmp
out
cmpsl
adc
rcll
and
fisubl
pop
pop
mov
add
mov
lock
loop
push
adc
pop
inc
pop
outsb
cmp
cmp
dec
inc
sahf
mov
outsb
mov
out
inc
sbb
decb
sbb
xchg
and
mov
ja
adc
aaa
mov
jle
test
adc
cld
pop
mov
xor
dec
mov
sbb
in
inc
jmp
cmp
push
movsl
ljmp
std
pushl
ja
pop
movsl
or
lahf
cmp
sub
out
cwtl
lcall
mov
mov
inc
xor
mov
push
lods
push
add
fcomip
jg
mov
mov
fiadds
jl,pt
push
imul
xchg
adc
xor
call
std
call
mov
aas
dec
lret
aad
jbe
sub
pop
dec
shlb
rolb
push
insl
repnz
incl
pop
rcll
xor
outsl
into
cmp
jge
or
pop
icebp
xor
roll
in
mov
enter
std
pop
loopne
fwait
pushf
shrl
filds
std
pop
push
out
xor
jno
or
clc
mov
sub
xchg
adc
mov
sti
test
dec
mov
push
js
or
mov
call
mov
sbb
sbb
inc
mov
icebp
es
mov
push
dec
add
pushf
popa
or
ds
andb
insl
cli
mov
mov
inc
push
icebp
addl
into
add
mov
xchg
lea
cmp
sbb
or
mov
data16
and
inc
jmp
mov
repnz
cmp
jo
or
sub
mov
decl
rorl
cmpsb
mov
vprotb
xchg
and
je
dec
stos
pop
hlt
lcall
pop
loope
outsl
rcll
xor
jns
xor
ficoml
dec
les
in
add
jge
push
jns
mov
dec
stc
jp
std
cwtl
add
stos
mov
jno
and
call
pop
push
in
add
jmp
xor
test
pop
dec
sbb
lret
mov
mov
jmp
lea
mov
in
mov
ret
mov
pop
pusha
lahf
push
cli
in
fwait
push
mov
mov
jo
and
addr16
jbe
add
out
cmpsl
push
sar
add
lods
lea
dec
push
cmp
data16
gs
jne
stc
or
sbb
data16
lcall
jge
push
addl
cmp
jns
add
push
inc
cmp
fisubl
inc
leave
cmp
or
pop
loopne
pop
aad
push
lcall
push
js
jns
pop
jg
pop
js,pt
or
data16
std
test
pop
in
inc
push
add
mov
mov
sub
fsubl
mov
or
out
add
cltd
sbb
int3
mov
or
std
jns
sub
mov
es
inc
cld
outsl
mov
out
jle
dec
faddl
xor
push
and
push
xchg
aam
pop
dec
out
adc
jae
pop
jb
pop
or
call
jmp
out
mov
xchg
lcall
pop
cmc
xorb
mov
xchg
or
mov
pop
sarb
mov
jbe
scas
repz
fnstcw
push
push
xor
pop
sub
cmp
pop
add
dec
int3
sbb
arpl
lcall
sbb
movsb
jns
and
sbb
iret
cld
imull
sub
imul
fs
xchg
adc
call
pop
and
jge
cwtl
insb
pop
loope
push
jg
lcall
je
sbb
mov
sub
or
push
jno
sar
js
pop
and
dec
jb
pop
movsb
inc
xchg
jmp
inc
popa
push
clc
fidivrs
dec
or
adc
push
push
aam
fildll
jb
sbb
fstpl
cli
adc
ja
sahf
inc
inc
mov
ljmp
add
lock
sbb
mov
add
adc
inc
sbb
cs
imul
mov
xchg
je
fs
imul
push
mov
jo
loopne
push
cmp
or
pusha
into
pop
adc
jp
xor
and
inc
icebp
lea
inc
daa
in
adc
xchg
lods
cs
pop
mov
out
outsb
clc
stos
test
xor
sahf
mov
pop
pusha
sub
in
sub
decl
aas
sub
shlb
aas
add
jg
lods
or
dec
jns
jmp
cli
pusha
repz
sbb
xor
sbb
ds
int
shrb
outsl
jle
xabort
jo
bound
jecxz
popa
repz
fwait
outsl
pop
pop
pop
lock
inc
cwtl
mov
jecxz
lret
push
insb
fsubrp
cmp
test
dec
jmp
pop
cmc
sbb
sti
inc
sub
sub
lret
insb
push
imul
dec
dec
cwtl
xchg
aaa
adc
mov
push
push
ds
mov
mov
mov
mov
lock
test
mov
push
push
mov
inc
rcll
jg
mov
imul
jns
mov
and
adc
jmp
lcall
inc
rcll
push
add
cmp
cmp
out
lret
sti
cli
push
in
roll
ss
push
aaa
psrad
incl
xlat
scas
sbb
inc
inc
and
decl
push
pop
and
cmp
adc
ds
pop
imul
inc
lods
and
hlt
xor
hlt
imul
stos
xchg
jbe
mov
outsb
inc
xorb
adc
push
mov
aad
lcall
cli
mov
popa
loopne
dec
out
xlat
push
in
ficoms
scas
xor
mov
mov
call
in
xchg
test
call
or
inc
add
add
fucomip
movsb
std
cld
mov
lcall
ret
push
push
cwtl
jae
adc
popa
addr16
inc
xor
std
xor
incl
push
push
nop
push
adc
xchg
mov
lds
inc
ja
decl
out
mov
cmpsb
push
sbb
xlat
pop
popa
dec
jle
inc
int3
add
cmpl
mov
in
popa
stc
aas
aaa
scas
sbb
arpl
add
or
in
add
jnp
xchg
inc
add
or
fnstenv
xor
mov
fstpt
adc
push
add
cmp
mov
add
or
mov
and
push
cmpsb
adc
loopne
push
inc
adc
jg
mov
ficomps
je
adc
mov
jbe
aas
out
cmp
pop
adc
xchg
sub
lock
pop
sarb
add
gs
popa
xchg
shll
jns
mov
js
jbe
out
add
sub
add
out
nop
mov
mov
fsubs
or
xor
dec
mov
mov
movsl
dec
sub
cmc
jg
loop
das
inc
out
jae
pop
cmp
or
mov
cli
cli
movsl
outsl
addr16
mov
cmp
add
mov
fstpt
ja
popf
cmc
imul
xchg
je
lahf
icebp
mov
lock
std
inc
inc
and
add
js
rcll
loope
gs
inc
adc
mov
in
add
pop
add
clc
push
xor
out
test
pop
loopne
loope
add
jle
stos
push
scas
xchg
mov
addl
cmp
add
mov
push
jg
flds
jb
jae
add
arpl
cwtl
and
mov
gs
cmp
out
and
mov
push
inc
cmp
fildll
fsubrs
jmp
clc
addr16
adc
mov
clc
popf
shlb
dec
pop
xchg
xchg
fsubl
sub
das
add
xor
add
mov
add
pop
icebp
lcall
cmp
jae
mov
mov
and
outsl
bound
and
fildl
jo
xchg
mov
and
test
pushl
popa
stc
jle
add
push
and
dec
inc
push
sbb
es
test
inc
push
cwtl
jo
rcrb
call
aas
and
sub
xchg
bound
ljmp
sbb
bound
inc
push
push
das
daa
or
pop
mov
jle
lcall
xchg
pop
push
hlt
jo
jmp
sbb
lcall
push
std
out
mov
push
addr16
insb
fnsave
nop
xor
mov
clc
push
das
insl
popa
lret
adc
mov
lret
pop
mov
out
mov
mov
mov
pusha
dec
ret
loopew
ds
and
mov
call
lods
aas
pop
popaw
aaa
cs
ss
call
jo
and
hlt
outsl
pop
sahf
inc
in
adc
xor
sarl
decl
adc
lcall
push
mov
pop
out
inc
push
fisubs
ja
cwtl
dec
ljmp
add
mov
out
sub
xchg
push
test
imul
fldcw
jns
cwtl
ret
es
mov
pop
jmp
test
mov
pop
push
pop
xor
icebp
daa
mov
cmp
add
pop
jae
fistl
pop
jne
mov
sbb
mov
push
inc
jmp
dec
inc
mov
xchg
int
fcomip
outsl
clc
gs
rcrl
ljmp
mov
inc
dec
pop
mov
mov
fildl
in
mov
sahf
dec
xchg
lds
std
mov
or
ljmp
xor
test
mov
cwtl
and
mov
jb
into
mov
push
xchg
cmpsb
scas
je
iret
jae
mov
jg
xacquire
rcll
push
xchg
mov
outsb
ljmp
xchg
xor
test
clc
mov
pop
cmpsb
out
fs
scas
cld
decl
adc
xor
xchg
pop
sahf
push
cmp
xchg
push
flds
mov
iret
mov
enter
jl
pop
xchg
pusha
jg
mov
aaa
pop
jmp
test
pop
pop
fldl
cmp
aas
das
popf
int
fiadds
xchg
icebp
incl
add
jl
pop
pop
js
adc
imul
mov
cwtl
lea
cmp
inc
jl
push
push
jle
cmp
inc
jg
imul
mov
pop
xchg
incl
nop
or
mov
push
add
cmpb
jp
inc
add
lcall
jae
sub
and
icebp
and
add
push
insl
dec
testb
lcall
adc
sbb
dec
adc
mov
and
push
loopne
stos
stos
cltd
adc
insb
cld
mov
jnp
jae
xchg
je
stos
sub
test
mov
mov
mov
call
sbb
test
add
and
lea
adc
push
stos
sti
imul
incl
sub
out
movsl
jns
inc
xchg
mov
inc
xor
lcall
mov
scas
in
lods
scas
push
fwait
jle
iret
xchg
add
loop
ret
mov
mov
arpl
ljmp
sar
popf
fildll
mov
mov
fidivrl
mov
iret
mov
pushl
addr16
and
lods
adc
pop
lods
mov
mov
cmp
fildll
sbb
jmp
mov
sub
adc
pop
call
rcll
push
mov
add
cmpsb
adcl
bound
mov
jg
ficoms
jns
xchg
add
inc
out
jnp
jmp
sbb
imul
lcall
jmp
pop
sub
imul
loopne
outsl
stos
push
jge
xor
pop
or
into
and
ficompl
fbld
mov
mov
gs
ja
lcall
lea
inc
mov
push
ss
pushl
or
mov
je
fistpll
pop
divb
inc
pop
stc
rclb
ja
jge
inc
outsl
jne
fdivrs
stos
rorb
data16
fidivrs
add
mov
fcoms
mov
js
repz
sub
mov
mov
out
cltd
sbb
mov
aad
inc
dec
or
mov
push
js
add
cmpl
xchg
loopne
mov
in
mov
push
jg
jmp
rcrl
adc
mov
loop
ret
lods
test
aam
inc
or
cmpsb
inc
mov
incl
mov
xchg
loop
mov
in
mov
ficoml
loope
xchg
incl
scas
sahf
mov
cld
cltd
mov
mov
popf
mov
xlat
sbbb
xchg
push
fsub
orl
mov
call
mov
ljmp
add
call
push
enter
repnz
mov
inc
push
jne
negb
fstpt
daa
mov
les
mov
cmpsl
pop
push
insl
mov
stos
ja
inc
js
lods
loope
xchg
test
inc
sub
gs
std
call
mov
pop
data16
push
aad
cbtw
xchg
fwait
and
inc
std
xchg
jg
lea
pop
mov
or
sbb
xchg
push
jne
push
clc
pop
jno
arpl
sahf
enter
and
fwait
xchg
std
mov
mov
testb
test
mov
sub
mov
arpl
xor
xchg
jbe
add
cmp
and
mov
loop
jl
push
mov
std
lahf
rcr
or
mov
mov
pop
xchg
or
mov
cmp
stos
cld
mov
add
pop
adc
adc
cmp
enter
jl
mov
dec
out
addr16
std
cmp
mov
add
mov
mov
push
int3
nop
insb
std
incl
dec
dec
es
mov
lods
pop
ss
fisttps
adc
scas
push
jmp
xor
inc
adc
test
mov
lock
push
out
nop
sbb
movsl
mov
or
call
mov
dec
out
ja
dec
xchg
adc
in
in
jae
mov
outsb
push
jbe
mov
inc
add
lcall
movsl
std
adc
popf
imul
push
lods
sub
push
jge
jo
shrb
fs
mov
pop
pop
xor
test
push
movsl
cmp
arpl
push
aad
dec
jmp
inc
pop
rolb
push
pop
adc
mov
dec
insl
sbb
mov
mov
outsb
ja
ds
insl
gs
idivb
or
push
jl
pop
bound
decl
or
rcrb
cmp
jns
pop
sbb
mov
outsl
cltd
sahf
xlat
xchg
sbb
outsl
fdivrl
jno
mulb
lock
das
rolb
pop
xchg
mov
cwtl
jmp
std
dec
daa
outsb
adc
jo
or
push
push
loop
mov
gs
jns
jno
mov
call
push
bound
hlt
cwtl
cmp
inc
pusha
testl
ljmp
pop
jmp
mov
imul
les
push
jno
mov
popa
ss
jmp
std
fistpll
mov
pop
lods
dec
inc
into
das
add
lods
add
sbb
into
aas
and
inc
loopne
inc
and
pop
lea
xchg
scas
rolb
mov
cli
call
repnz
bound
xor
mov
mov
shlb
lcall
mov
push
and
push
sbb
dec
divb
sub
shll
clc
pushl
mov
sbb
inc
clc
inc
or
aaa
popl
call
loopne
adc
mov
das
mov
insb
push
movsb
out
dec
stc
jl
cmp
icebp
es
and
mov
and
lcall
lcall
fs
fldcw
aas
jle
pop
dec
mov
cs
js
add
in
js
and
lcall
xchg
or
xchg
dec
push
add
jl
xchg
rcr
popa
dec
inc
call
decl
jno
gs
je
jb
jbe
dec
dec
pop
ret
jge
push
push
fstpl
je
push
out
pop
aad
jbe
mov
pop
jbe
mov
xor
jnp
call
imul
popa
arpl
cld
push
fisubrl
push
xor
inc
pop
ror
push
xorb
call
dec
sub
cmc
push
jb
mov
pop
fldt
inc
xchg
call
fdivp
cwtl
xchg
xchg
push
push
insb
push
fs
mov
jns
lock
inc
pop
xchg
dec
enter
addr16
je
cmpsl
mov
push
jp
outsl
cmpb
pop
ror
push
lret
sbb
cmpsb
xchg
mov
jg
jbe
loopne
pop
push
xor
push
nopl
jle
push
pushl
dec
rep
pop
xchg
shrl
jmp
jne
inc
data16
bound
pop
aam
addr16
insb
xchg
mov
fs
lods
je
rorb
test
sti
mov
call
add
cs
test
test
jo
lock
outsb
cmp
mov
adc
and
adc
bound
jno
call
mov
jg
push
and
jg
and
stos
das
pushf
push
fldt
idivl
das
aam
ds
movsb
ja
stos
sti
test
ja
mov
xchg
fsubl
sbb
cmpsl
test
cmc
lcall
fsubl
sbb
mov
inc
cmovne
stos
add
inc
jg
jg
xchg
test
inc
push
lock
push
add
cltd
pop
dec
and
incl
je
sub
rorl
dec
dec
push
sbb
sub
dec
jae
dec
jp
cmp
dec
dec
aam
mov
add
push
sti
arpl
stos
inc
sbb
or
lods
pop
mov
pop
cmp
inc
bound
mov
out
jl
jg
outsl
jle
push
xor
in
data16
dec
mov
pop
addr16
mov
incl
bound
roll
out
xchg
xchg
mov
add
xlat
lods
dec
insb
loopne
jg
pushl
test
push
idivl
ret
push
cmp
xchg
out
sbb
jp
xor
pop
adc
lea
xchg
jge
sbb
adc
lock
xchg
dec
arpl
mov
loope
xor
ljmp
xorl
insb
in
mov
pop
inc
aaa
pop
sbb
sahf
mov
jg
jmp
push
inc
cmp
mov
xchg
inc
bound
mov
daa
fbstp
scas
cmp
sti
or
add
xchg
and
dec
jmp
jle
mov
cs
repz
xor
mov
jmp
jnp
xchg
mov
shrl
and
mov
mov
jo
add
sbb
lods
cli
arpl
dec
lea
pop
inc
lcall
push
mov
test
sub
xor
ja
mov
or
jle
push
addr16
push
cmp
or
xchg
ja
and
decl
stos
mov
inc
xchg
xchg
add
pop
mov
lcall
sbb
adc
ds
push
fs
mov
or
jl
jmp
ret
outsb
add
scas
mov
lcall
mov
push
int
mov
mov
test
mov
mov
mov
or
call
mov
pop
cltd
pop
xchg
mov
and
cwtl
out
imul
pop
mov
das
cli
jg
push
push
add
cwtl
inc
cltd
mov
cmp
cmp
pop
xchg
inc
decl
xchg
push
mov
sub
dec
jne
xor
clc
or
lcall
jno
hlt
inc
pushw
ljmp
clc
jmp
pushf
mov
cmp
pop
dec
sarl
js
lods
jno
xchg
pop
test
xchg
mov
mov
mov
cwtl
in
imul
faddl
cld
aaa
fadds
test
pop
out
mov
cmc
dec
lcall
cli
fdivs
or
sub
fcomip
ds
sbbb
dec
imul
pusha
faddl
int3
cmp
lock
cmp
les
add
lods
mov
and
jnp
fadds
scas
and
xchg
pop
sub
hlt
inc
out
jb
cld
jmp
pusha
dec
scas
orb
js
push
decl
pop
dec
pop
popf
jp
daa
mov
mov
mov
dec
nop
mov
dec
fsubrs
adc
jmp
mov
pop
mov
decl
insb
repz
sub
sbb
xor
rolb
mov
xlat
lahf
pop
add
sbb
pop
ljmp
sub
lcall
subb
cld
xor
cmp
fsubrl
mov
pop
xchg
outsb
nop
and
inc
mov
scas
aam
ljmp
fistpll
imul
ret
ljmp
inc
lds
inc
aas
lret
adc
pop
frstor
pop
dec
inc
cmpsb
inc
lds
movsl
mov
outsl
adc
push
roll
inc
es
shll
dec
jo
outsb
sub
cmp
xor
sbb
ljmp
adc
les
pop
cli
add
mov
cli
ljmp
addr16
or
mov
out
or
pushl
add
sub
push
ret
jb,pt
cmp
jae
inc
aas
sub
sbb
jl
jg
lock
dec
lea
in
jns
js
jbe
inc
fildll
mov
scas
outsb
push
mov
add
cli
call
jg
or
xor
sub
mov
scas
adc
inc
punpckhwd
aas
stos
aam
imulb
mov
cld
xchg
lcall
fistl
pop
pop
out
dec
push
or
das
sarl
dec
arpl
xchg
ja
mov
push
add
jmp
pop
movsl
push
dec
dec
ret
push
adc
jbe
adc
fwait
dec
adc
push
int
outsb
adc
cmpsb
mov
inc
je
jp
lret
ljmp
add
jmp
mov
push
pop
jae
in
js
js
popa
je
mov
fldenv
jnp
push
out
gs
xor
les
call
cmp
sbb
jo
jp
add
ret
pusha
inc
dec
pop
lret
sbb
xor
jae
xor
mov
dec
je
or
jae
popa
mov
jne
scas
dec
imul
push
in
insb
push
jb
jecxz
out
ljmp
inc
push
mov
push
icebp
push
inc
arpl
and
add
sub
lcall
mov
jno
inc
dec
jge
jae
add
cmp
int
inc
lcall
cld
pop
icebp
xchg
dec
jno
shl
pop
dec
jne
pop
mov
or
decl
mov
lret
mov
loop
cmc
jl
jne
inc
mov
ds
pop
or
ljmp
jle
scas
insb
mov
push
or
push
inc
dec
mov
mov
sbb
pop
cltd
cmpsb
jg
decl
push
insl
push
rcr
pop
fwait
inc
pusha
popa
decb
call
mov
inc
insb
jge,pt
dec
movsb
insb
fs
lods
je
adc
push
pusha
dec
mov
cmp
insb
dec
dec
and
js
add
into
cmp
pop
sahf
cmp
and
in
mov
pusha
addr16
inc
jne
inc
inc
scas
std
loop
jg
clc
jl
sbb
jo
push
jo
decl
push
aad
mov
mov
xor
xchg
push
and
sbb
cmp
add
cmp
mov
jne
test
lods
sti
xchg
adc
ret
addr16
jg
jno
sbb
insb
stc
push
arpl
mov
sbb
lods
add
jno
cltd
scas
push
incl
insb
lret
push
adc
push
xchg
cmp
mov
out
and
push
lcall
lea
add
sahf
lods
movsb
je
ljmp
das
lret
mov
push
imul
addr16
into
pusha
jecxz
nop
mov
mov
repnz
and
loope
jg
jae
insl
popa
imul
out
xor
add
fwait
jecxz
test
add
jp
cs
shrl
push
or
add
in
jg,pn
adc
and
add
xchg
xor
int
test
push
add
xor
or
je
decl
push
adc
shll
inc
in
sbb
sub
mov
and
mov
out
daa
pop
add
loop
pop
or
xor
fcomip
andl
mov
mov
ljmp
push
or
mov
or
pusha
mov
enter
jle
or
shrl
repz
rclb
cwtl
mov
push
dec
cli
call
cmp
mov
mov
lea
cmpsb
xor
or
or
incl
cmp
sbb
loop
push
cmp
mov
sti
cmp
xchg
fwait
clc
ljmp
fimull
pop
sbb
push
ja
push
les
sub
xchg
pop
dec
in
pop
out
mov
ljmp
sub
pop
aam
fsubrs
inc
cli
fcmovb
sbb
jle
or
in
jae
popf
jno
mov
testl
fimuls
pop
pushl
xor
inc
outsl
cmp
lds
mov
sbb
lret
cmp
out
ljmp
fcompl
jl
xor
sbb
jbe
inc
adc
clc
cmp
ret
pop
jp
xor
and
jae
dec
ds
inc
repz
lret
outsl
ja
rolb
imul
fistpl
mov
bound
js
cmp
imul
orb
inc
std
ljmp
cmp
aas
test
add
mov
fists
jp
add
lds
add
lods
cmpl
dec
sub
add
js
lock
mov
ja
pop
aam
inc
push
inc
in
cmp
pop
add
lret
into
das
inc
mov
mov
jg
pushl
cld
sbb
sub
adc
mov
cmc
out
es
int
mov
mov
push
adc
fldt
bound
loopne
jg
pop
sbb
test
jo
mov
es
das
jmp
push
jo
cltd
push
push
ljmp
and
jl
mov
mov
scas
push
pop
ret
decl
sub
cmp
or
ds
pop
ficompl
inc
repz
adc
incl
out
add
popf
push
or
cltd
js
jae
jp
mov
cmp
push
call
cmp
jb
pop
callw
cmp
xor
pop
dec
jno
aas
repnz
sti
and
repnz
lret
lcall
push
testb
push
adc
mov
xchg
mov
iret
sub
pop
cld
fdivrs
inc
dec
ss
lds
mov
inc
outsb
jb
lcall
push
dec
mov
out
add
clc
add
out
mov
mov
adc
jns
sub
mov
push
mov
add
sarl
enter
add
pop
adc
dec
push
jns
mov
test
mov
cmp
ret
push
push
cmp
andl
mov
insb
xacquire
adc
daa
xchg
jmp
pop
repz
repz
dec
adc
inc
mov
push
pop
shrl
popf
push
mov
out
jnp
ja
gs
pop
loop
dec
sti
decl
sbb
cmp
mov
xor
fwait
push
lcall
inc
adc
mov
addr16
or
scas
sbb
bound
fstl
dec
out
push
dec
push
add
decl
mov
les
dec
insl
xchg
add
dec
sahf
sbb
jmp
lods
icebp
cmovb
cmpl
pop
mov
insb
push
inc
push
sahf
inc
xchg
xchg
jnp
push
hlt
mov
es
outsb
mov
cwtl
sbb
loopne
mov
decl
lcall
hlt
xlat
scas
adc
xor
mov
enter
add
xchg
inc
lret
lock
sbb
rcll
add
dec
mov
mov
dec
fisttps
fwait
or
icebp
stos
data16
repz
sbb
decb
js
jecxz
xor
fsubrs
mov
je
call
dec
mov
inc
in
mov
jo
lea
outsl
mov
mov
xchg
jmp
mov
sbb
dec
or
sbb
add
dec
sub
jne
push
jbe
aam
push
jle
imul
incl
push
cmc
ds
stc
mov
sti
adc
inc
cltd
mov
and
xor
out
cli
decl
ret
inc
and
cmp
jge
inc
cmc
daa
cltd
movsb
jo
xchg
loopne
decl
ficoml
outsl
pop
cmpsb
pop
inc
test
out
cli
adc
mov
cwtl
jp
pop
ljmp
pop
ret
das
dec
stc
movd
xor
push
inc
icebp
adc
cmp
cwtl
push
shlb
mov
cmc
insl
or
dec
fistpl
lds
gs
and
add
push
jne
and
sbb
jmp
inc
jb
cmp
mov
or
adc
sub
or
call
loope
mov
sti
mov
movsl
sbb
jmp
sbb
sub
jge
cmp
lods
xor
fisubrs
cmp
or
sub
sar
jg
lock
pushf
ret
dec
decb
mov
mov
inc
lret
ljmp
mov
add
sbb
repz
pop
mov
aas
lcall
fmuls
jns
inc
in
mov
dec
dec
dec
push
pop
outsb
inc
adc
stos
push
jle
mov
call
imul
pusha
push
in
push
fcompl
add
mov
pop
pop
add
mov
push
repz
ja
jno
adc
push
lret
aas
mov
jbe
hlt
shlb
push
pop
cwtl
push
movsb
xchg
sub
xchg
out
nop
cmc
xor
stos
mov
cwtl
jg
ss
adcl
repz
jg
mov
mov
jnp
jbe
xchg
icebp
pushl
rorb
and
push
pop
jecxz
dec
les
cld
imul
jae
mov
xchg
mov
add
jg
cld
pop
jns
xchg
test
cmpb
sub
fstpl
ljmp
xor
jle
adc
xor
adc
stos
lcall
lock
decl
lret
dec
fisttpl
jecxz
mov
test
repnz
fcomip
or
enter
sahf
or
sub
adc
mov
mov
mov
xchg
inc
and
cltd
xor
sahf
jne
inc
insl
jp
lcall
fisubl
inc
repz
mov
pop
mov
movsl
cmp
sbb
sbbb
mov
jmp
sub
sub
pop
push
add
mov
cld
jmp
dec
pop
mov
imul
and
mov
mov
mov
call
cmp
in
xor
and
xchg
mov
inc
out
jg
sbb
scas
mov
gs
ljmpw
dec
sbb
and
sahf
lds
lcall
insb
sub
add
stc
xor
jle
mov
sub
frstor
dec
jbe
pop
pop
jle
sahf
incl
jecxz
jnp
es
jns
pop
pop
pop
jp
test
clc
or
call
andl
stos
push
sub
scas
pop
xor
out
clc
into
mov
sbbb
xchg
ret
cmpsb
adc
mov
bound
incl
insl
lea
push
roll
pmulhuw
pop
and
cmp
nop
mov
fcomip
ljmp
pop
mov
je
pop
xchg
in
fs
adc
ljmp
dec
lea
pop
ljmp
push
fldenv
movsl
mov
scas
clc
lcall
movsb
or
xchg
mov
pop
sahf
out
mov
in
mov
jecxz
mov
jo
inc
addr16
push
sub
int3
mov
and
dec
adc
mov
out
mov
mov
inc
pushl
stos
mov
repnz
xchg
add
cmp
xchg
xchg
call
stos
inc
mov
out
push
add
push
ja
dec
adcl
popa
mov
daa
inc
mov
add
jg
daa
pop
imul
hlt
ljmp
pop
inc
std
xchg
add
push
inc
mov
xor
sub
jg
aaa
int3
test
arpl
mov
addr16
xchg
insb
xlat
movsb
cwtl
xor
gs
gs
scas
sti
mov
jecxz
es
pop
jle
push
test
arpl
ja
push
push
sbb
dec
cmp
call
test
pop
call
mov
test
in
dec
mov
in
push
sub
xchg
add
add
scas
inc
outsb
ja
cltd
js
lcall
decl
movsb
mov
mov
sarb
push
jmp
xchg
lahf
lahf
lahf
fwait
inc
sbb
insl
fcmovnu
je
divb
dec
scas
ss
sti
cmpsl
test
sbb
repz
cwtl
js
nop
jl
js
push
mov
loop
mov
mov
ja
xchg
push
dec
loop
inc
push
jp
adc
lods
cmp
mov
sbb
ljmp
fists
mov
cmp
mov
pop
push
pop
mov
les
ffree
sub
jg
ljmp
in
adc
in
dec
push
lock
cmp
testb
pop
loopne
jbe
push
adc
jne
mov
and
xchg
cmp
cli
lcall
jb
cmp
mov
andb
mov
add
ljmp
daa
mov
test
and
xorb
into
lods
inc
xchg
mov
inc
divl
aam
jns
mov
sub
adc
jb
mov
and
fistl
push
inc
loop
inc
roll
lds
pop
and
fbstp
push
push
jbe
jo
imul
add
rorl
or
sbb
inc
add
adc
aam
pop
add
xchg
mov
and
arpl
push
inc
call
push
int3
gs
inc
sbb
cmpsl
jae
out
mov
and
cltd
push
pop
stc
sahf
insb
std
fdivp
dec
jb
push
out
decl
cs
dec
jne
in
js
inc
xchg
stc
push
jmpw
out
and
lahf
jno
adc
pushl
stos
dec
adc
popf
rorb
inc
inc
clc
or
xchg
dec
lret
push
ret
mov
incl
and
shlb
mov
sub
movsl
enter
jp
inc
inc
out
decl
outsb
icebp
jo
mov
mov
addr16
pop
sbb
mov
dec
rorb
jg
pushl
sub
arpl
jns
adc
popa
lods
fstpl
mov
jp
into
push
jns
les
ret
sbb
mov
adc
xlat
add
out
cltd
int3
and
mov
ljmp
mov
clc
xor
das
bound
xchg
int3
xor
lret
sub
mov
out
lock
jp
jae
fadd
jne
jg
mov
divb
pusha
in
jnp
into
mov
cmp
lods
call
ret
inc
repnz
ljmp
out
dec
fsubl
xor
push
inc
iret
pop
dec
cmp
cmpsl
mov
cmp
adc
arpl
push
incl
push
shlb
incb
data16
fildll
incl
inc
test
ss
movsb
mov
jno
mov
sti
mov
cmpb
stos
mov
nop
scas
inc
repz
aad
jns
mov
cwtl
mov
aad
leave
gs
cmp
jg
lock
in
mov
push
and
rorl
inc
rol
incl
mov
in
popf
ret
movsl
fsubrl
inc
fisubrs
repnz
jb
pushl
mov
call
gs
lret
aam
mov
in
data16
insl
add
inc
lods
mov
out
dec
rorb
adc
lea
mov
ror
fcmovb
and
test
sub
add
daa
pop
mov
or
mov
fs
dec
movb
sahf
xchg
test
lea
jne
call
cmp
leave
inc
inc
and
push
jae
aam
push
std
pop
pop
ret
gs
xchg
in
jmp
divb
sub
imul
fcom
fistpll
push
sbb
aaa
ret
dec
lret
fisttps
ljmp
ficompl
add
aas
pop
jnp
adc
pop
loop
ret
pop
shll
jbe
outsb
loope
inc
mov
pushl
lret
enter
dec
push
xchg
aad
data16
cs
pop
cwtl
call
adc
sub
jge
sbb
jmp
inc
int
insb
mov
sub
sub
cmp
jno
cs
pusha
jmp
arpl
loope
cmp
dec
rorl
xchg
mov
arpl
std
push
sahf
jbe
adc
and
call
xchg
addl
nop
add
mov
jmp
push
add
push
cmc
push
icebp
fs
bound
add
cs
ja
lods
jne
mov
xor
add
scas
addr16
js
scas
jp
and
test
test
scas
popa
add
xchg
call
int
hlt
sti
xchg
js
inc
hlt
aad
sti
scas
outsb
add
mov
jl
std
int
gs
mov
ljmp
pop
lret
sbb
mov
iret
fs
push
enter
or
decl
pop
fldt
dec
mov
jmp
jbe
xorb
and
rol
out
clc
stc
outsb
push
loope
les
fldenv
je
cmpsb
imul
jno
mov
loope
imul
mov
cmp
mov
ljmp
jl
data16
cmp
dec
xlat
pushf
outsb
add
pusha
mov
cmp
jmp
cmp
inc
arpl
int3
dec
pop
sbb
dec
data16
inc
jle
ljmp
inc
fisttpl
rorl
incl
cld
fmuls
push
fistpl
repnz
pushf
fistpll
filds
call
add
iret
mov
out
sub
les
jecxz
imulb
lahf
lods
in
data16
call
rolb
les
repz
popa
popa
int3
and
mov
incl
insb
jmp
test
dec
loop
je
add
xor
cmp
mov
cs
int
out
out
je
jno
and
es
or
pop
mov
clc
jecxz
push
push
xchg
cmpsb
jne
mov
inc
clc
incl
cld
test
mov
inc
cltd
xchg
fnsave
out
add
add
mov
outsb
addr16
stc
jg
mov
dec
cmp
aad
adc
ret
push
mov
into
pop
enter
pop
sub
fbstp
jecxz
imul
aaa
push
stc
mov
int
push
ljmp
std
stos
mov
cld
inc
sti
push
ja
inc
cmp
ds
dec
mov
das
jae
mov
in
add
test
mov
sbb
movsb
call
pushl
sti
arpl
fbstp
or
add
jmp
cltd
mov
repnz
insl
lret
notb
call
int
mov
insb
inc
clc
and
jo
jmp
bound
lcall
imul
dec
pop
dec
out
push
js
fbld
clc
sub
push
into
ds
jl
push
push
stc
imul
jmp
sub
dec
int3
add
push
out
and
int3
popa
in
pop
fdivrl
aaa
cld
dec
aas
test
inc
or
pop
ret
xor
jno
sub
les
in
mov
mov
clc
insb
decb
fidivrs
jecxz
addr16
push
out
mov
ss
inc
rclb
dec
out
sub
or
repnz
call
sti
ds
loopne
imul
ret
and
sub
inc
leave
cmp
lret
call
shrb
inc
fstps
imul
imul
pop
push
pop
mov
xchg
mov
cmp
in
mov
test
xor
cmp
stos
and
push
dec
inc
pusha
aam
addr16
ljmp
push
gs
xchg
loopne
ds
jge
arpl
sub
ja
mov
mov
add
cmp
lea
adc
xchg
cmpsb
mov
lock
jg
ret
les
xorl
sub
cli
sub
arpl
pop
jb
std
cmp
cltd
mov
pushl
mov
dec
pcmpeqd
sbb
sub
arpl
decl
mov
jb
arpl
and
pop
das
push
and
lea
mov
mov
mov
fwait
inc
fwait
and
call
sbbb
test
sub
push
jmp
icebp
mov
push
dec
daa
mov
cmpb
sub
mov
inc
jp
mov
pop
dec
daa
cwtl
jl
add
pop
mov
sbb
sti
xchg
jae
out
xchg
sub
cmpsl
adcb
gs
call
push
je
daa
push
xchg
cmp
mov
adc
out
pop
mov
dec
push
pop
cmp
jmp
jmp
in
mov
cmpsb
and
inc
dec
push
push
and
cwtl
xlat
bound
lcall
jae
or
sbb
lahf
jg
xor
jbe
arpl
stos
fstpt
iret
cltd
pusha
jg
xorl
ret
out
mov
lahf
fildll
fdivp
mov
xor
in
add
outsl
bound
mov
mov
test
loop
mov
add
pop
adc
sub
ficomps
cld
pop
lods
cmp
add
and
aas
xor
adcl
push
imul
mov
gs
cli
ret
incl
ss
dec
push
lods
cltd
mov
out
sub
scas
and
in
sub
incl
fcompl
dec
mov
bound
add
mov
adc
pop
rcr
das
jl
mov
inc
sub
cmp
add
adc
mov
xor
adc
inc
pop
sbb
sub
sbb
inc
and
cmc
mov
pushf
icebp
fcomip
insb
adc
mov
push
push
stos
mov
shll
test
xchg
xchg
loope
outsb
pop
inc
call
inc
push
mov
scas
and
mov
ljmp
jb
and
push
lea
xor
nop
dec
es
add
mov
inc
adc
adc
cmp
push
ret
popa
adc
mov
scas
movb
adc
repnz
add
pop
adc
inc
jo
push
cmc
pusha
cmp
jecxz
daa
ja
lea
leave
mov
lcall
adc
and
pop
test
movsb
adc
mov
xor
js
ds
dec
popf
or
pushl
add
xchg
add
lea
cmp
jecxz
inc
adc
decl
cmpsb
dec
add
lods
pop
jb
cltd
fucomp
cwtl
lcall
cmp
mov
daa
xchg
out
xor
mov
fcomip
push
sahf
and
add
fstpl
js
add
test
stos
scas
das
mov
mov
jb
mov
pop
sbb
push
inc
pop
sarb
mov
xchg
sbb
or
push
push
mov
shrl
adc
pop
call
sbb
adc
mov
movsl
push
popa
cmp
inc
js
test
mov
repz
mov
inc
lret
push
sbb
jle
mov
test
cmp
sbb
icebp
lods
clc
ja
dec
push
icebp
mov
mov
call
movsl
mov
pop
jo
sub
pop
xorw
push
cli
mov
add
sahf
pop
mov
mov
ljmp
cwtl
or
bsf
in
inc
fdivrl
bound
repnz
pop
stc
pop
cs
lds
out
out
out
cli
inc
push
mov
push
rcr
lcall
lahf
mov
sub
mov
jmp
pushl
popa
jae
push
dec
loopne
mov
push
add
test
mov
lods
test
mov
out
out
dec
scas
inc
nop
movsl
xchg
jge
jg
jmp
mov
xor
lods
and
mov
outsl
js
pop
pop
dec
insl
nop
dec
inc
jbe
cmpsl
pop
mov
sahf
jmp
mov
adc
rcll
and
jg
pop
dec
jl
repnz
jbe
cmpsb
sbb
rorb
cmp
cltd
mov
ficompl
test
push
in
outsb
rorb
push
daa
jb
ss
push
mov
sbb
xchg
incl
sub
lcall
call
push
cmp
and
pop
mov
dec
sbb
sar
decl
fldenv
popa
sbb
xor
mov
test
rcrb
inc
mov
insl
xchg
cs
daa
shrb
pop
xchg
ds
xchg
xor
jp
fcomip
push
inc
adc
pop
or
sbb
xor
aad
pop
ds
sub
cmp
mov
xchg
sbb
mov
push
or
cld
incl
add
scas
lcall
push
cld
mov
incl
cld
adc
xchg
mov
inc
decb
arpl
push
gs
sbb
loop
rcr
cld
shrb
push
or
or
in
dec
cwtl
jne
and
call
decl
push
fcmovu
jmp
dec
movb
lret
scas
clc
jle,pn
push
xchg
mov
adc
xor
aaa
add
pushl
imul
popa
scas
pop
ljmp
cmp
scas
sbb
pop
int
pop
push
push
xor
mov
cmp
inc
and
sub
imul
icebp
mov
dec
rclb
push
sbb
adc
ret
add
repnz
jg
pushl
xor
sti
nop
gs
xchg
gs
push
nop
mov
aad
add
mov
add
sbb
push
decl
lock
xor
sub
xchg
cmp
ret
lcall
push
xor
jbe
adc
mov
jg
cmc
mov
addr16
adc
add
mov
xchg
add
decl
pop
fs
pop
sbb
mov
bound
mov
pop
neg
iret
push
dec
push
xor
fldt
sbb
push
and
mov
lods
test
mov
pop
push
mov
push
push
sbb
test
gs
jecxz
mov
lock
adc
or
out
cmp
int3
add
pop
inc
lret
decl
pop
xchg
into
cmovns
or
sahf
inc
into
and
popa
sahf
ja
leave
arpl
push
add
mov
xchg
add
mov
in
jle
inc
divl
sar
adc
data16
add
cwtl
xor
repz
insl
push
ljmp
sbb
xlat
cmpsl
push
mov
cwtl
push
mov
pushf
fwait
xchg
das
testb
popa
in
sahf
push
cmpsb
add
mov
imul
cmp
call
cwtl
add
outsl
bound
ja
push
sbb
xchg
iret
mov
out
sub
call
jns
add
cli
or
out
jnp
repnz
jns
pop
hlt
pop
xor
mov
pusha
fwait
mov
and
sub
jg
loop
cmp
dec
lea
test
icebp
sub
fisubl
pop
mov
push
fcomps
cmp
push
sub
orb
mov
loopne
lcall
shrl
jns
inc
stos
aaa
jb
or
aas
mov
pop
pushf
and
sub
mov
icebp
fnstsw
dec
stos
or
xor
add
pop
xor
cmp
sub
call
push
ret
push
sub
ss
cmp
mov
test
ljmp
lcall
sbb
iret
pop
dec
xor
push
shlb
adc
adc
into
or
jmp
mov
sbb
add
jmp
mov
add
js
and
and
stos
dec
mov
cmc
xor
sti
fabs
or
add
fmull
scas
adc
out
xor
push
pop
cld
in
ljmp
adc
inc
imul
repnz
sub
sbb
pop
inc
inc
dec
adc
insl
out
mov
jle
in
decb
xor
in
push
data16
push
pop
cmp
decl
inc
mov
dec
into
adc
push
add
fbld
rorb
inc
mov
lds
lock
das
add
movsb
xor
ljmp
mov
leave
xor
shll
mov
xor
xor
push
mov
jmp
cmp
repnz
pop
mov
std
mov
fs
mov
mov
sub
test
fld
cli
pop
or
xchg
lea
add
rcrb
sbb
sub
scas
pop
ret
mov
cmc
lds
scas
clc
in
adc
add
gs
push
lds
pusha
sti
mov
out
pop
xchg
clc
xor
xchg
xchg
mov
lods
dec
roll
iret
mov
pop
lock
movsl
es
sub
std
sub
jg
test
adc
xchg
xlat
adc
push
sub
decl
std
mov
push
inc
nop
mov
mov
mov
push
inc
lahf
inc
lds
pop
adc
sahf
pop
hlt
call
std
sub
mov
test
jno
xor
push
fwait
mov
sahf
cmpsb
std
add
sahf
mulb
in
ljmp
mov
jle
lds
mov
icebp
addl
and
cmp
sti
xchg
pusha
repz
and
pushl
mov
and
xor
xchg
icebp
scas
cmp
push
lret
mov
mov
mov
push
imul
mov
mov
js
pop
jnp
out
add
shlb
xchg
xchg
sbb
mov
ds
and
out
test
mov
fmul
xchg
dec
repz
jno
cmp
pop
push
out
jo
xchg
jne
push
clc
lcall
push
daa
enter
xchg
scas
xor
sub
test
or
jecxz
incl
lds
dec
xor
out
push
mov
mov
inc
je
push
lcall
ret
rcl
or
xor
stos
lcall
sub
lods
push
cs
addr16
sbb
push
cld
ljmp
fsubr
inc
sbb
jb
dec
es
and
das
test
xchg
xchg
in
dec
clc
jg
icebp
mov
in
mov
cmc
sbb
aaa
shl
push
mov
flds
out
xchg
fwait
repz
jg
mov
pop
ja
sar
xchg
and
push
cmp
mov
mov
loop
inc
dec
sub
test
push
adc
aam
xchg
cwtl
call
xlat
push
mov
mov
mov
cmpsl
mov
lret
ja
rolb
cmp
xchg
cwtl
mov
jl
and
sbb
cld
incl
imull
xchg
sahf
mov
mov
sbb
jnp
jle
pop
mov
adc
xchg
add
icebp
decb
mov
dec
fdivr
pop
test
cmp
call
dec
sar
adc
xlat
or
loop
xchg
mov
add
jbe
ret
outsl
fsubl
lcall
loopne
mov
cmc
lds
and
cmp
scas
sbb
lods
test
ffree
xchg
mov
and
xor
in
fs
jno
addr16
pop
std
add
push
imul
push
out
push
sub
cmp
stc
xchg
aaa
sub
inc
jmp
mov
aas
lcall
mov
mov
jne
movsb
lcall
jne
add
jae
push
addr16
sarb
adc
sarb
jl
std
sbb
fisubl
jge
or
decl
adc
mov
jns
aad
xchg
frstor
mov
lock
mov
sub
cmpsl
mov
in
mov
lret
mov
clc
adc
pop
jl
stos
pusha
test
xor
es
shlb
jg
lcall
aad
jle
xchg
arpl
jbe
cs
xor
imul
lret
mov
xchg
out
push
cmpsb
stos
ja
incl
lock
pop
fldt
cmp
adc
addb
lods
xchg
icebp
xchg
sbb
aad
inc
fcomip
out
sub
adc
daa
push
cltd
stc
cltd
xor
fadds
pushl
jb
mov
mov
jl
jbe
cwtl
xchg
pushf
scas
mov
leave
and
fisttpll
popf
sahf
push
test
push
rclb
push
and
negb
jne
mov
jnp,pt
outsb
fsubrl
push
jmp
pushl
pop
loopne
jbe
push
sarb
jno
lahf
cmp
lcall
jge
mov
arpl
data16
xchg
inc
xlat
sbb
fsubl
stos
iret
sarl
aad
pusha
mov
add
xchg
inc
movsb
pop
dec
cld
sbb
fistl
push
mov
push
push
testb
shr
mov
lcall
pusha
lret
out
push
sbbl
mov
decl
cltd
inc
mov
adc
icebp
pop
jns
out
jecxz
filds
mov
lock
imul
das
es
push
cltd
and
loopne
aaa
scas
mov
pop
cmp
push
and
mov
mov
or
add
and
sub
mov
aas
pop
mov
cli
lahf
out
arpl
mov
popa
sbb
mov
jge
push
push
mov
aaa
cwtl
mov
lds
sub
add
out
xchg
daa
jns
mov
add
ds
sbb
mov
ljmp
es
out
hlt
pop
lea
or
lcall
adc
divps
ret
mov
mov
cld
xor
xchg
adc
test
cmp
mov
add
les
dec
and
stos
loopne
xor
cmp
ljmp
add
mov
xor
rsm
outsb
stos
mov
js
or
or
pusha
repnz
inc
test
or
mov
jmp
ret
sub
xor
and
in
dec
jnp
lea
lea
lods
push
clc
cmpsb
test
rcl
xor
jmp
xchg
hlt
add
cmp
fidivs
pop
jg
hlt
dec
xchg
sti
push
xchg
push
insb
adc
mov
mov
pop
inc
clc
adc
es
mov
cs
lcall
lds
fstpl
lea
cltd
fdivrl
ret
push
dec
out
xlat
pop
mov
xor
cmp
dec
mov
gs
sbb
test
mov
jmp
jbe
mov
push
dec
imul
mov
outsl
js
hlt
mov
mov
add
sbb
adcl
aas
nop
xchg
sub
popa
and
bound
inc
sbb
push
sarb
pop
mov
add
js
jb
loope
xor
je
dec
pop
lea
push
jg
sbb
cmpl
movsl
dec
mov
lahf
mov
sbb
pushf
cs
lods
cld
mov
sbb
ljmp
mov
pop
sahf
loope
mov
mov
mov
mov
test
cmpsb
pop
push
les
mov
push
xchg
xchg
jl
xchg
aad
mov
adcl
and
lds
arpl
lds
popl
mov
arpl
scas
xchg
jg
mov
and
and
bound
mov
mov
inc
aaa
jecxz
jmp
mov
dec
cmp
insl
sbb
inc
and
fcomip
lcall
cmp
cwtl
and
jo
ds
push
add
loop
sbb
push
pop
mov
dec
xor
mov
js
loop
ljmp
dec
mov
mov
ljmp
pusha
jnp
jge
ljmp
xchg
mov
lcall
dec
cmpsb
push
fs
push
xor
lcall
les
cmp
loope
jne
mov
enter
push
sahf
inc
jle
outsb
sub
mov
push
lock
dec
pop
jbe
ljmp
jle
mov
adc
daa
xchg
xchg
inc
in
dec
inc
xchg
insl
jae
movsl
call
je
mov
or
clc
movsl
aam
xor
dec
or
aas
cli
popa
push
jns
sub
xchg
jle
popf
inc
push
test
inc
push
fmuls
jmp
dec
lods
imul
mov
jb
lods
arpl
inc
jae
stos
dec
mov
scas
mov
call
cld
jo
mov
fs
pop
xor
push
repz
push
gs
cmpsl
cmp
cmp
ret
jno
int
je
jg
sub
mov
xor
push
js
xchg
push
loopne
mov
ds
jo
xor
pop
imul
xlat
test
inc
push
sub
decl
jo
cmp
inc
arpl
subb
data16
stos
fdivp
test
fbld
es
lret
add
js
cmp
mov
call
cmp
sbb
mov
mov
sbb
jno
mov
scas
jbe
orb
gs
jns
fdivr
or
das
sar
add
in
cmpsl
push
out
cmp
rcrl
in
nop
lock
adc
call
fldl
mov
inc
xchg
push
jecxz
jge
dec
sahf
jp
xchg
scas
cmp
lock
call
xchg
sbb
fisttps
dec
in
push
jno
inc
push
popf
lcall
outsb
cli
mov
mov
add
clc
call
inc
sbb
xchg
dec
jp
ljmp
and
jbe
scas
insb
inc
clc
jmp
dec
push
push
mov
mov
insl
sub
lods
mov
adc
ljmp
xchg
pusha
add
jae
lret
xchg
jb
pop
sbb
mov
mov
cmp
ljmp
jns
jecxz
sub
adc
rcrb
cmpsb
pop
push
push
dec
test
loop
cs
or
jns
xorb
test
enter
mov
cmp
jbe
test
mov
outsl
aam
push
jg
and
loope
fwait
mov
fnsave
js
mov
leave
fildll
xchg
adc
adc
outsl
sub
out
mov
sbbb
cmpsb
mov
cmp
movsl
adc
mov
mov
ss
mov
out
push
xor
cmp
inc
arpl
ljmp
sahf
cmpsb
adc
imul
outsb
fisubl
das
shrl
pop
or
ret
mov
pop
aaa
push
lods
shlb
jbe
mov
mov
nop
add
clc
pop
test
mov
jns
mov
test
rorb
inc
scas
inc
pop
xor
lcall
test
and
adc
xor
cmpsb
data16
incl
xor
mov
pushf
lods
mov
push
fisubrl
ljmp
xchg
fcoml
cmp
cli
cmp
in
je
mov
sbb
adc
lcall
and
cwtl
jb
test
out
or
jns
lcall
jp
xchg
dec
pusha
incl
cmpsl
ja
sahf
mov
ret
push
pop
xchg
lcall
pushl
dec
mov
sahf
stos
adc
push
scas
cmpsb
mov
mov
test
dec
pop
adc
jg
jg
enter
cmp
fcoms
std
xchg
aas
jge
cmpsl
mov
push
jne
in
ret
stos
jns
aaa
jns
popa
pusha
idivb
add
jg
dec
addr16
add
stc
fcoml
sti
push
inc
addr16
cmpsb
ds
jb
ljmp
fistpl
popa
jno
test
dec
dec
pop
and
popf
rcll
js
dec
sar
mov
cwtl
int
pop
pop
jp
outsb
loop
sbb
inc
push
add
pop
and
ljmp
jb
sub
call
or
sub
cld
int
jae
inc
xor
decl
inc
jl
inc
or
lds
pop
arpl
pop
jmp
pop
aad
mov
mov
into
xchg
xchg
dec
or
arpl
add
ds
in
lock
adc
insb
inc
mov
mov
jb
loope
aaa
inc
ja
add
mov
pop
mov
lret
sub
mov
shrb
push
das
pop
outsl
add
popf
aas
xchg
stos
mov
sbb
jnp
mov
sar
add
lahf
enter
outsl
sbb
dec
mov
sub
call
xchg
mov
jno
xor
ja
ja
clc
cwtl
mov
push
cmpsb
jno
jbe
dec
call
pop
nop
std
mov
jp
jb
mov
mov
cwtl
and
cmp
jmp
lods
adc
mov
or
xchg
sub
add
inc
cwtl
sub
fisttps
insb
dec
pop
shll
cltd
mov
add
pop
mov
outsb
fcmovne
cmpsb
shrl
hlt
ja
call
mov
cld
add
or
jg
or
jb
dec
dec
js
cmp
inc
test
and
dec
jecxz
jmp
pop
psubsb
outsb
mov
sub
xchg
or
mov
jg
cmp
xchg
jno
xlat
jne
test
xor
fdivr
inc
loop
and
push
xchg
mov
jne
mov
pushf
mov
outsl
push
jns
dec
add
xor
adc
cmpsl
sbb
cmp
jl
push
scas
jecxz
push
push
std
mov
xchg
jmp
lcall
in
push
popa
ror
lock
xor
insb
xor
push
jle
incl
add
cmpsl
push
mov
mov
ja
sub
push
jge
mov
adc
stos
out
dec
jg
das
nop
pop
in
and
mov
fwait
sub
data16
loopne
inc
ret
lods
xor
fsts
or
movsb
lods
sbb
das
push
push
frstor
jns
pop
lods
lcall
mov
test
repz
push
jge
data16
shlb
call
test
sarl
adc
sarl
mov
jmp
js
xor
jnp
out
fsub
imul
mov
ret
jmp
mov
adc
inc
sub
pop
ficoml
das
mov
sub
mov
add
lcall
jmp
push
jae
dec
stos
repz
into
lcall
stos
cmp
inc
inc
stc
sub
adc
shl
adc
cmp
movsb
lods
mov
lock
jg
mov
movsl
gs
sub
mov
pop
jmp
mov
fidivs
inc
in
cmp
inc
push
ret
ret
incl
and
ds
adc
lods
mov
rcrb
xor
adc
fnstenv
xchg
ja
add
aaa
dec
mov
push
movsl
xor
pop
xor
cli
mov
dec
cmpsb
minps
or
lcall
pop
mov
adc
adc
jb
push
das
dec
out
repz
das
jns
inc
lds
and
xchg
or
pop
cmp
sbb
or
dec
js
mov
ljmp
rorb
mov
lret
xor
loope
cmpsl
mov
repnz
pushl
mov
out
mov
fists
nop
push
dec
jp
mov
das
add
nop
arpl
add
sbb
xor
mov
call
pop
clc
sbb
lods
xlat
fwait
mov
dec
lock
mov
push
mov
and
adc
mov
pop
mov
sbb
pop
imul
cltd
aaa
pop
testb
test
cli
data16
rclb
push
or
mov
scas
clc
fistps
jg
or
movl
cs
incl
jb
and
in
push
cmp
dec
push
int3
jg
add
sbb
mov
je
mov
incl
dec
rorl
fiadds
insl
pop
es
pop
jb
inc
jge
inc
inc
enter
call
push
ss
mov
addr16
clc
add
adc
orb
aaa
callw
pop
xchg
sub
mov
jmp
repz
xor
stos
xchg
inc
insl
movb
es
mov
jae
mov
and
xchg
hlt
or
mov
fsubrl
mov
jg
in
adc
pop
out
sbb
lea
outsl
outsl
xchg
adc
popf
xchg
mov
xor
inc
stos
aad
lcall
shl
out
add
or
andb
icebp
das
scas
test
lret
jl
jbe
add
fldl
mov
fwait
xor
cli
or
mov
sbb
cmp
lcall
dec
clc
adc
adc
movsl
int3
cli
ljmp
notb
add
addr16
jge
mov
push
push
mov
xor
das
sbb
sar
incl
dec
xor
push
aas
pop
sub
stos
mov
cmp
js
mov
push
rolb
mov
mov
sbb
dec
xchg
adc
cmp
add
je
mov
jl
aas
push
lcall
bound
jmp
mov
lcall
xchg
sbb
shlb
mov
xchg
mov
push
add
and
lret
mov
testb
cli
ja
nop
sti
xchg
call
movsb
nop
jbe
lods
das
std
das
add
call
cmp
push
jae
fwait
jae
adc
lret
mov
inc
arpl
outsb
imul
fisubs
loopne
pushl
sub
shll
cmp
mov
push
lods
push
cmp
movsb
shlb
xchg
mov
push
sar
sarb
push
data16
mov
dec
fsubr
movsl
movsb
lock
xor
inc
mov
out
loopne
mov
das
xor
stos
cmp
pushf
xor
jg
loopne
jmp
sbb
mov
jmp
mov
mov
insl
data16
ljmp
js
push
aas
pop
sub
je
call
sahf
jo
push
pop
arpl
gs
dec
xor
lea
push
mov
or
push
mov
mov
negl
jbe
rep
clc
pushl
test
jo
pop
add
dec
inc
in
mov
stos
push
xchg
mov
stos
or
and
lds
cli
ljmp
dec
jp
jbe
inc
jle
dec
arpl
sbb
nop
xchg
mov
xchg
mov
and
pop
and
cwtl
lcall
push
push
lcall
adc
arpl
mov
fistps
mov
nop
mov
das
cltd
add
jbe
aam
sub
stos
mov
mov
incl
sub
xchg
mov
dec
incl
jmp
push
pop
xor
mov
sbb
mov
repz
jle
mov
push
mov
rorb
fwait
xor
hlt
stos
jmp
js
imul
out
je
outsb
push
jp
ret
mov
inc
pushf
ret
jg
loope
pop
cmp
lret
bound
push
lds
jmp
andb
push
jo
div
insl
inc
or
out
push
inc
adc
lcall
fstl
ret
push
ja
jne
scas
xchg
sarb
lods
push
dec
add
pop
pop
lea
or
mov
loop
inc
push
jp
cmp
sub
js
jg
and
push
std
mov
cmp
lock
out
dec
imul
pusha
cmp
mov
mov
lods
fwait
jo
dec
call
inc
mov
dec
aad
jg
orl
xchg
sti
push
cmc
push
pusha
cld
fildll
pushl
pop
sar
pusha
pop
iret
aaa
inc
dec
push
cmc
jo
inc
addr16
adc
xchg
lods
xchg
cmpsb
mov
out
add
stos
lret
stos
adc
mov
jge
jg
xchg
sahf
xchg
cs
or
xchg
lret
mov
dec
lahf
pop
adc
ja
clc
decl
and
cmpsl
jns
loope
push
lods
scas
sub
ljmp
outsb
xchg
push
jl
xchg
pop
test
mov
mov
ss
out
xchg
andl
fists
mov
or
rorl
dec
cmp
mov
das
mov
ficoms
cmc
jmp
in
pop
mov
cmc
jmp
aad
gs
ljmp
popf
adc
rclb
notb
ret
or
call
adc
ret
pop
inc
js
or
cmpsb
push
xor
cltd
fwait
mov
scas
xor
adc
dec
add
push
mov
mov
mov
pop
dec
sub
jnp
cmpsl
lcall
or
add
xor
loope
sub
mov
mov
xchg
xor
incl
cmpsb
shrl
addr16
pop
mov
cs
icebp
out
dec
add
add
or
add
scas
mov
jns
dec
stos
mov
in
dec
popf
gs
or
daa
cmp
fwait
data16
mov
add
and
push
mov
dec
incl
cmp
mov
sbb
push
decl
out
bound
popa
loope
dec
pusha
pop
shll
jp
cld
loopne
stc
outsb
jo
pop
xorl
je
pop
pushf
xchg
add
dec
fimull
js
out
mov
pop
jp
es
call
push
dec
repz
outsl
shrl
mov
gs
push
mov
ljmp
inc
ret
jo
popa
pop
ret
and
dec
or
ja
cld
push
faddl
inc
leave
dec
out
and
leave
jo
mov
mov
ja
lea
popf
xor
pop
mov
shrl
sub
mov
mov
clc
ljmp
lock
jnp
je
jp
insb
push
pushl
adc
lock
movsl
push
inc
push
aad
insl
imul
xor
mov
pushl
push
push
scas
xor
lret
movsl
add
jo
sbb
fs
pusha
push
pop
es
sar
ljmp
push
pop
arpl
add
xor
pop
xchg
loopne
enter
sbb
lods
popl
aas
ret
imul
sbb
fisubrs
data16
ret
jns
and
jg
arpl
mov
mov
dec
push
int
push
jno
jmp
lds
in
push
insb
adc
pop
sub
jecxz
inc
pop
cmpb
xchg
aam
std
mov
xchg
adc
adc
and
ds
push
cwtl
fadds
out
pusha
push
pop
std
outsb
pushl
idivb
test
push
hlt
ss
lret
mov
imul
sub
cs
arpl
stos
xor
nop
cltd
add
mov
jg
das
or
push
xor
mov
jae
call
push
mov
inc
repnz
mov
enter
jg
hlt
dec
cmp
push
aam
popw
nop
adc
fs
inc
sahf
aad
incl
subb
push
sub
mov
pusha
leave
adc
fcomip
decl
mov
jl
mov
imul
pushl
popf
mov
mov
dec
xor
fdivr
adc
push
out
ljmp
push
cmp
cmp
cmc
or
push
adc
or
jno
jno
add
jmp
push
jne
mov
cmpsl
mov
stos
pop
repnz
loopne
push
icebp
xchg
push
jp
les
adc
loopne
clc
xchg
out
jno
outsb
jb
and
cmp
pop
filds
or
stos
jl
pop
push
cltd
lret
movsb
and
movsl
test
fildll
pop
sbb
test
push
sahf
fsubrl
lock
test
and
lcall
sbb
push
enter
mov
movsl
sbb
lds
xor
orb
push
pop
adc
sub
mov
jo
and
push
cmp
xor
decl
jp
mov
add
loop
fs
mov
popa
xchg
jmp
lcall
repz
stc
push
push
mov
shrb
jno
lret
inc
fs
inc
fs
lcall
push
pop
cltd
push
pop
or
idivl
push
test
lods
mov
push
dec
add
ljmp
sub
decl
add
dec
xchg
sbb
pop
les
xlat
popf
outsl
push
rolb
jo
cld
or
aas
pop
push
fnstenv
or
dec
jb
js
stos
std
inc
data16
out
push
mov
mov
jmp
push
loope
psrlw
fsubrl
sub
xor
mov
lcall
ds
pop
push
inc
repz
int
mov
pop
decb
ljmp
mov
jg
sub
lcall
loopne
adcl
negb
xchg
insb
mov
and
jg
insl
mov
je
dec
adc
dec
sbb
mov
scas
lret
push
xor
push
inc
cmp
push
and
or
mov
es
mov
les
cwtl
out
dec
push
add
fwait
movsb
cmp
stos
inc
inc
push
mov
inc
into
adc
push
push
xor
xchg
mov
mov
mov
int3
fildll
mov
mov
aas
std
mov
or
test
jg
add
sbb
outsl
testl
inc
add
pop
inc
pop
adc
call
mov
xchg
cmp
mov
or
jb
out
lods
aas
pop
jecxz
lret
mov
dec
lret
push
das
sar
or
loopne
xchg
mov
imull
decb
scas
push
jg
sub
mov
shlb
lret
cmp
and
sbb
push
test
xchg
xchg
adc
in
push
dec
ljmp
aad
mov
inc
cmpsb
inc
sbb
ds
insl
jle
inc
stos
mov
xchg
test
jbe
pusha
mov
int
pop
addr16
cmp
push
push
cltd
je
xlat
shl
mov
pushl
jns
pop
jne
and
sub
pusha
shlb
repz
or
adc
incb
stos
mov
inc
call
ja
imul
in
lods
and
jbe
cmpsb
dec
int3
pop
pop
jne
sbb
scas
clc
call
mov
fimull
push
add
sbb
and
sbb
mov
loop
mov
sbb
jg
lock
add
push
push
mov
ds
mov
mov
jge
jle
test
into
inc
fidivrl
xor
cltd
pop
cwtl
jl
add
addl
movsb
incl
outsb
jb
ja
mov
cli
jg
sub
lret
mov
aas
cs
xor
in
inc
arpl
mov
fidivl
jb
sahf
adc
xchg
aad
call
mov
push
scas
sahf
mov
dec
pop
pop
jl
or
sub
cmp
push
push
mov
jne
add
sub
add
cmp
adc
pushl
mov
outsl
mov
push
add
fisubrs
cltd
xor
mov
ljmp
add
stos
xchg
xchg
mov
jmp
aaa
nop
sbb
jl
loope
jns
lcall
inc
push
pop
int
je
out
fwait
cmp
pop
fldenv
xor
inc
dec
add
lcall
or
fisubrl
cwtl
int3
mov
inc
and
pop
movsb
insl
fadd
addr16
mov
mov
fwait
clc
mov
xchg
loope
inc
sbb
pop
leave
lock
popf
xor
fstps
pushl
cmpsb
jb
add
sahf
dec
test
push
int3
inc
adc
cmpsl
mov
inc
push
fwait
xor
test
dec
data16
call
std
xchg
outsl
bound
stos
dec
mov
iret
mov
iret
mov
push
stos
xor
sub
stos
mov
incl
sub
test
in
test
pop
dec
ljmp
sbb
enter
ja
clc
sub
lea
mov
xchg
push
mov
scas
push
cmpsl
cmp
jae
aaa
dec
push
das
push
nop
ljmp
ss
jl
test
or
adc
push
lcall
loopne
mov
pusha
xlat
mov
jmp
jge
jbe
es
ss
addb
ret
scas
ljmp
fistpll
or
cmp
call
gs
mov
leave
filds
cmp
or
bound
mov
sbb
subl
ljmp
cmp
gs
dec
push
movsl
pop
push
iret
dec
xor
scas
shrl
das
mov
dec
enter
out
inc
scas
pop
push
adc
adc
decl
push
lods
cmp
xor
scas
xorb
call
jae
jg
hlt
xchg
sub
insb
mov
inc
mov
xchg
or
in
pop
icebp
stos
inc
rorb
mov
rol
pushl
dec
mov
pop
lret
stos
sbb
das
and
push
mov
jle
dec
pop
scas
ss
sahf
sub
repnz
inc
test
cmp
cmp
mov
cmp
or
mov
gs
sub
xor
pushl
shufps
xchg
leave
xchg
xor
stos
enter
mov
sub
add
xor
call
mov
mov
sbb
cmpsb
testb
movsb
fdivr
jg
or
popa
or
fldt
sahf
or
enter
cltd
dec
test
es
xchg
mov
incl
xorb
add
and
inc
ret
add
lea
test
popf
mov
push
inc
lcall
inc
ss
sub
cmp
ljmp
movsb
push
and
cmp
add
in
xchg
add
mov
jae
jecxz
or
jmp
les
xchg
inc
bound
xor
mov
cmc
fbstp
jle
xchg
xor
sbb
test
cmc
call
mov
pop
xchg
pop
mov
out
mov
ja
clc
lcall
scas
jp
jo
test
mov
jg
mov
rcrb
js
jnp
ja
lret
arpl
das
scas
dec
mov
adc
cmpsl
mov
lcall
repz
daa
and
cmp
je
fstpt
lcall
adc
das
cmpsb
cld
ds
icebp
mov
mov
divb
outsl
pop
push
cwtl
iret
xor
incl
or
leave
sbbb
pop
dec
jne
add
scas
repz
mov
in
mov
push
outsb
inc
gs
stos
jp
mov
and
cmpb
ds
loope
inc
ljmp
pop
imul
clc
popa
sbb
pusha
clc
out
adc
pop
sub
push
shrd
movsl
in
xchg
outsb
dec
js
iret
xchg
push
pop
add
mov
xchg
jg
cmpsl
inc
insl
adc
call
adc
mov
outsl
add
fildll
push
popf
jbe
push
xor
je
xchg
inc
lret
fwait
movsb
clc
xchg
and
das
xor
jbe
pop
push
orb
js
cmp
fcoms
fdivl
lods
aaa
daa
xchg
inc
inc
inc
roll
out
cli
jmp
mov
xor
les
je
subl
fsubs
add
sbb
fs
dec
imul
or
lcall
add
mov
jmp
arpl
xor
aam
addr16
orl
mov
add
sbb
mov
jo
jno
sbb
fs
and
pop
mov
pop
dec
xchg
pop
and
ljmp
mov
loop
mov
sti
or
out
pop
inc
xchg
add
icebp
jnp
jb
push
xchg
mov
sbb
movsb
sub
insb
push
sub
jno
jae
ljmp
pop
push
mov
insb
iret
pop
leave
insl
pusha
pop
dec
aas
pop
and
mov
sub
mov
fwait
and
mov
sbb
es
push
loopne
mov
jbe
and
cmp
pop
jmp
push
pop
lea
cmp
add
jmp
pop
mov
push
ficoms
aas
pop
jo
or
sub
jns
popa
loop
fs
mov
add
icebp
add
pushf
mov
push
push
cmpl
aad
sbb
decl
std
jne
outsl
stc
push
imul
push
push
or
rcll
hlt
outsl
jp
movsl
scas
sub
inc
lret
je
sub
or
pop
scas
repz
ret
jmp
incl
jb
mov
inc
rcrb
addr16
add
jge
lea
fildll
jo
mov
push
push
xchg
and
addl
sub
or
ret
and
arpl
pusha
fldcw
ljmp
or
mov
ret
sub
jge
xor
xchg
xor
or
subb
mov
mov
xor
std
shrb
rolb
mov
scas
mov
enter
andb
outsb
jb
pusha
stos
dec
sahf
inc
stos
popa
mov
mov
out
clc
and
xchg
sarl
sub
rdmsr
or
movsl
sbb
cmp
shrb
lcall
or
cli
fwait
imul
pop
decl
or
jge
and
push
imul
clc
add
push
nop
sbb
nop
fcoms
cmp
sub
mov
pop
xor
dec
and
int3
xchg
out
and
pop
mov
call
sub
insl
lea
xor
sub
jmp
ljmp
cmp
ret
push
cmc
addb
add
mov
insb
clc
incl
adc
or
cmp
adc
xor
mov
add
ljmp
shll
int
push
xor
cmpb
popl
dec
clc
incl
es
testb
pop
dec
sbb
sahf
xor
and
add
and
or
les
pusha
inc
mov
or
fstl
inc
mov
add
pop
imul
scas
xchg
mov
pushf
inc
loopne
push
dec
loope
outsl
xchg
sbbl
addl
cmpsl
sbb
mov
mov
cli
test
lcall
mov
daa
cmpsl
rcrl
dec
dec
xchg
dec
test
loope
into
mov
decl
mov
cwtl
or
add
into
and
jne
jg
or
sub
les
iret
mov
pop
mov
aaa
inc
ret
sub
push
add
cld
scas
test
lret
hlt
push
inc
or
sbb
or
fs
decl
es
adc
add
xor
adc
and
clc
clc
out
mov
sbb
fldcw
cltd
pop
out
ljmp
xor
repz
popf
pop
pop
stos
dec
pushf
lret
lods
and
add
cli
outsl
pop
add
xor
mov
add
nop
xor
mov
pop
loop
inc
rcrl
das
outsl
push
inc
inc
xchg
aas
xchg
jnp
incl
ds
pop
lcall
dec
xchg
or
clc
decl
test
mov
retw
jbe
outsb
cmpsb
xor
insl
add
xchg
les
or
es
or
clc
fwait
or
mov
mov
pop
popf
imul
test
mov
data16
sub
mov
fsubl
push
movsl
adc
lcall
xchg
adc
xchg
inc
stos
and
test
mov
loop
ljmp
xchg
daa
icebp
pop
mov
sbb
es
fimuls
cmp
incl
or
pop
xchg
dec
cmp
lock
lds
test
adc
filds
xchg
rorl
rcr
add
into
das
mov
adc
das
lods
out
pop
cmp
lods
mov
jg
xchg
mov
test
les
mov
lea
push
sahf
arpl
pop
inc
test
or
mov
jmp
call
cmp
jg
or
push
ljmp
push
add
or
outsb
pop
inc
arpl
insl
push
cmp
cs
xor
pop
push
adc
ljmp
mov
dec
adc
or
or
or
adc
or
pop
and
mov
and
add
hlt
in
cmp
cld
repz
lcall
pop
pop
ss
ret
add
xchg
and
dec
ret
pop
ljmp
mov
or
mov
loop
jecxz
jg
mov
pop
push
lods
gs
into
loop
lcall
ret
jge
inc
sahf
sti
xchg
pop
fimull
mov
fldenv
mov
lcall
outsb
andl
cmp
jne
stc
lods
inc
rolb
dec
fsubr
jg
incl
mov
mov
ljmp
sbb
push
ljmp
sub
fdivr
sub
xor
mov
into
cmp
fildll
std
adc
sti
sub
jp
and
mov
sbb
incl
or
and
stos
pushf
mov
enter
jge
sub
out
sbb
loopne
dec
cmpb
or
jne
hlt
rorb
jp
mov
cli
pop
xchg
out
mov
ljmp
xchg
in
push
js
loope
mov
shrl
push
jge
and
sbb
ljmp
call
jmp
mov
push
push
negb
add
cmp
cmc
mov
scas
mov
jmp
pop
inc
clc
jmp
xor
aad
popa
adc
nop
adc
add
push
call
mov
add
adc
lret
add
sahf
cmp
popa
inc
jns
out
or
sar
jle
and
sub
jg
fsubl
in
mov
pushf
pop
and
iret
xchg
xor
ret
or
sbb
sahf
in
cs
sbb
js
fcomip
pop
lods
sbb
pop
and
test
adc
sbb
push
cltd
incl
xchg
pop
mov
mov
jo
dec
xchg
call
pop
lea
mov
push
cmpsb
sbb
addb
sahf
lea
jnp
fidivl
pop
add
push
cmpsl
cmp
ds
mov
cwtl
bound
sbb
and
sbb
dec
pop
dec
or
pushl
cmove
call
repz
pop
xchg
inc
sbb
mov
das
pushf
sbb
sbb
popf
call
stos
rcrb
cmp
cmp
mov
push
ljmp
xchg
cmp
add
cmpl
sub
ds
aaa
std
call
sahf
push
cmp
sub
js
outsb
sahf
rcll
jle
xor
pop
xor
leave
mov
outsb
test
ds
das
xor
aas
xchg
xor
mov
jge
decl
sbb
leave
pop
mov
xor
popfw
into
adc
mov
cmp
adc
aaa
inc
inc
stos
std
sbb
sbb
popf
pop
and
and
nop
hlt
xor
cmp
scas
sbb
call
pop
inc
inc
mov
add
and
sub
loop
call
test
aaa
adc
pop
mov
sub
add
push
mov
push
add
jmp
pop
mov
or
iret
mov
dec
mov
and
or
and
sahf
sbb
nop
divl
inc
jbe
ljmp
decl
daa
cwtl
xor
add
lock
insl
mov
daa
sbb
cmp
mov
ss
adc
mov
push
push
ds
mov
mov
aaa
mov
adc
jmp
mov
js
fldenv
push
daa
add
cmpsb
xor
ds
pop
sub
outsb
mov
call
sbb
cmp
scas
js
arpl
mov
adc
cmp
sub
sbb
sbb
xchg
cmc
cs
shrd
xchg
xor
and
dec
flds
enter
or
aaa
ljmp
sub
inc
mov
and
xor
adc
dec
ljmp
dec
test
push
or
and
and
data16
aam
repz
sar
cmp
xor
xor
lret
aas
inc
loop
add
fpatan
add
call
ss
xchg
sbb
sahf
sbb
lcall
inc
in
add
stos
push
mov
pop
xchg
xor
pop
dec
outsl
mov
mov
sub
xchg
and
cltd
call
lds
and
fs
stos
vmovsd
xor
xchg
pop
jg
ffree
int3
fimull
sbb
cmp
movsb
scas
jbe
scas
not
enter
ja
push
mov
add
adc
mov
ljmp
and
jo
push
push
sbb
rcrb
cmp
dec
pop
xchg
leave
lret
js
fcoms
pop
pop
fcompl
sarb
jmp
and
mov
fdiv
loope
sub
add
add
pop
jmp
rcrb
test
adc
in
adc
insl
mov
popf
pop
jnp
ljmp
inc
sbb
mov
fdivr
ljmp
repz
jmp
xor
ret
shlb
pop
mov
pop
stos
adc
insb
xor
pop
lcall
inc
sbbb
dec
movsb
or
push
call
cmp
mov
lock
loopne
jb
push
mov
push
push
xchg
cmp
vpshlb
xor
mov
push
icebp
xchg
in
add
mov
pop
sub
clc
out
das
sahf
daa
xor
inc
aad
cmp
xorb
les
loop
and
outsl
lock
xchg
cmpsb
xchg
mov
add
sub
movsl
out
cmp
lods
pop
add
test
push
hlt
sub
push
ljmp
and
cltd
mov
sbb
sahf
lret
mov
les
push
loop
mov
mov
push
arpl
mov
fstp
clc
fdivrs
xchg
cld
mov
ja
fbld
jecxz
xchg
lcall
das
xor
in
lods
popl
add
ljmp
adc
pop
and
or
lcall
cli
push
or
mov
fistl
ret
jae
roll
das
int3
out
sub
shlb
mov
pop
pop
adc
lods
pushf
sahf
xchg
mov
mov
or
adc
dec
lods
sbb
cltd
sub
mov
or
mov
inc
rolb
dec
fstp
sub
aaa
mov
mov
out
mov
scas
hlt
xchg
movb
add
arpl
and
and
data16
jnp
mov
aas
sbb
aas
fists
dec
negb
pop
imul
cmpb
mov
pop
pop
jl
dec
addr16
jo
cltd
loopne
fdivr
adc
xor
mov
ds
xlat
lret
or
sub
stc
mov
add
pop
mov
loopne
test
dec
add
and
ficomps
ss
mov
cmpsl
pop
add
bound
jg
push
and
push
pushf
ljmp
jbe
outsb
xor
cmp
sbbl
iret
repnz
cwtl
cs
decl
daa
pop
popf
out
lds
push
in
or
sahf
aaa
jp
js
cmpsl
scas
xor
test
incb
sbb
push
or
test
xor
lcall
xor
add
subl
add
loop
jecxz
jl
xchg
mov
ljmp
fistps
rcll
jo
aam
cmp
inc
adc
and
in
sbb
pop
sbb
adc
dec
adc
loopne
add
adc
dec
push
or
lock
in
scas
add
xor
js
idivl
inc
aas
clc
pop
cmp
xchg
mul
cmp
fbstp
push
push
xor
nop
dec
xor
cmpsl
jno
pop
push
in
fs
xor
lods
push
mov
xor
imul
stc
inc
sarl
cwtl
mov
test
push
sbb
lret
pop
mov
dec
jecxz
fcomip
incl
jl
jl
xchg
dec
inc
filds
mov
adc
cs
adc
scas
push
jge
mov
push
and
ja
add
xchg
ljmp
shrb
mov
mov
shrb
sbb
xchg
int3
push
and
cld
inc
arpl
ss
clc
or
lahf
sub
cld
fists
xorb
sbb
into
mov
repz
add
in
outsl
jb
dec
mov
push
sbb
or
outsb
inc
adc
xchg
or
sub
or
push
jo
dec
push
cmpsl
push
cmpsb
sar
jmp
and
bound
adcl
cmp
xor
or
or
je
sbb
sbb
scas
rolb
arpl
or
jg
lock
nop
sub
repnz
push
ja
xor
dec
push
mov
rclb
das
xor
mov
call
pop
cld
mov
sbb
jle
inc
pop
or
jns
xor
cli
call
arpl
jl
dec
cmp
push
mov
xchg
xchg
mov
pop
xchg
mov
dec
jl
xchg
mov
in
and
adc
pop
add
fbld
inc
repnz
mov
icebp
outsl
test
inc
lahf
cmp
movsb
mov
push
loopne
fsts
filds
pop
jmp
pop
pop
add
xor
pop
push
decl
cwtl
fstl
inc
add
push
cmp
cmp
sub
sub
add
or
push
dec
mov
sbb
lock
cmp
int3
aas
cltd
and
stos
arpl
sub
or
jmp
push
inc
or
pop
and
dec
and
jbe
in
test
int3
ljmp
in
addr16
sbb
adc
adc
xchg
sbb
jg
stos
sub
sbb
and
arpl
movsb
xchg
sbb
pop
nop
cmc
pop
cld
push
or
dec
adc
or
xor
hlt
pop
add
jmp
inc
cwtl
pop
adc
inc
jmp
fwait
int
sahf
ret
adc
clc
add
das
sbb
int3
mov
and
adc
sub
pop
sub
or
in
clc
incl
in
inc
sub
mov
cmp
incl
or
ds
adc
daa
pop
push
loopne
add
scas
out
inc
and
or
call
xchg
push
mov
jno
lds
imul
push
or
push
mov
icebp
add
jmp
inc
fs
xchg
push
mov
lahf
push
add
jge
jl
mov
sub
dec
adc
sbb
or
scas
and
fbstp
jne
dec
call
stos
push
or
nop
pop
aaa
jge
lcall
aas
mov
in
rclb
jecxz
dec
int
out
outsl
rcr
pop
js
test
jg
lock
leave
pop
mov
ljmp
fcos
incl
jnp
dec
les
pop
ret
aas
insb
cld
or
stc
arpl
adc
sbb
decl
pcmpgtw
test
xchg
icebp
imul
pushl
imul
and
jb
rol
incb
sub
lock
sbb
xchg
sub
outsb
push
and
ret
ret
mov
lret
ficomps
xor
xlat
push
xchg
sub
mull
fucomip
lock
inc
stos
mov
cwtl
dec
movsl
and
add
mov
adc
pop
jno
xor
pop
std
dec
xor
int3
xor
cmp
xchg
loopne
cld
stc
sub
jne
imul
clc
jne
out
dec
push
lds
push
push
pusha
and
jl
mov
adc
das
jle
mov
fwait
cmp
aad
sbb
hlt
stos
inc
faddl
popa
outsb
sbb
jg
ja,pn
repz
dec
sbb
adc
sbb
fidivl
pop
std
mulb
fildll
lods
popf
fnsave
push
dec
adc
scas
out
push
adc
lret
push
dec
pop
xor
jns
cld
jg
adc
jae
jl
jnp
inc
fsubrl
addr16
incl
or
jb
aaa
mov
xor
or
shll
lock
bound
inc
popa
jo
xor
sahf
xor
xchg
ja
clc
push
outsl
adc
dec
filds
or
outsl
cwtl
push
sub
out
mov
sahf
lcall
adc
push
mov
jp
adc
mov
xlat
mov
xchg
mov
dec
std
fcomip
pushl
imul
xchg
cmp
cmp
and
pop
pusha
pop
dec
cmp
sub
sahf
xchg
add
ljmp
out
jb
into
mov
mov
mov
ja
clc
jg
add
sti
cmp
dec
lds
incl
sub
add
push
jo
or
aas
mov
or
dec
push
aam
push
leave
lcall
dec
ljmp
and
cmp
pop
sub
and
in
clc
gs
lea
jle
add
add
fdivr
das
nop
icebp
test
sub
sbb
les
pushl
or
sahf
repnz
jae
jmp
roll
out
stos
scas
adc
xor
decb
in
ljmp
lcall
pop
int3
and
cmp
cmpsb
clc
xchg
loopne
lods
cli
addr16
lahf
push
and
mov
cld
lcall
decl
dec
inc
jp
mov
sub
dec
aam
adc
inc
sbb
int
mov
in
sub
js
js
and
xchg
xor
add
int
nop
stc
mov
js
je
add
xchg
inc
imulb
jmp
mov
mov
adc
in
inc
call
sar
cmp
movsb
mov
rorb
jo
and
sub
jg
fsts
aad
add
ror
mov
insb
mov
je
iret
lds
call
cmpsb
and
fst
lret
inc
movsl
sbb
stos
mov
scas
mov
repz
mov
fisubl
addb
lods
out
lods
into
repz
mov
lret
sub
shl
ljmp
fldt
ret
out
out
xchg
stos
fwait
add
and
sarb
test
and
out
out
dec
aaa
mov
movsl
movsl
jle
mov
add
inc
out
pushf
mov
test
cmp
sbb
jg
dec
push
xchg
xor
xchg
js
in
add
outsl
push
in
enter
inc
pop
xchg
fcoml
or
sub
push
ja
cmc
test
lds
popa
xchg
outsb
mov
stos
out
scas
lcall
lcall
jb
xor
lcall
ljmp
cld
scas
nop
ja
add
cmp
cmp
or
mov
sar
inc
mov
scas
call
jl
js
cld
cmpsb
mov
insl
push
xchg
addr16
cs
mov
ljmp
loopne
sbb
clc
push
push
addb
jnp
jnp
lcall
decl
sahf
jecxz
mov
adc
push
and
jg
inc
adc
lahf
jge
dec
and
or
inc
dec
dec
sub
jb
jne
jbe
dec
std
outsl
xor
push
mov
inc
je
icebp
cmpsl
sbb
out
sbb
call
cwtl
mov
das
fs
sub
arpl
ficoms
ja
and
aas
das
xor
call
jne
movsl
std
sub
fdivr
call
data16
cli
push
adc
insl
xchg
sbb
js
fidivrl
push
pandn
loope
fistps
push
dec
in
adc
pop
jo
popa
incl
sub
movsl
or
cli
sahf
pop
stc
xchg
cmpsl
inc
push
insl
dec
fldenv
jo
jp
icebp
xor
jo
incl
xchg
adc
gs
insl
inc
lret
mov
cmp
mov
bnd
mov
and
cmp
xor
rcrl
sub
mov
push
cmp
lds
or
jp
lcall
outsl
sub
arpl
popf
stos
lea
jne
icebp
xchg
stos
or
push
pushl
clc
je
icebp
test
sbb
iret
xchg
stos
mov
fistl
push
jo
dec
mov
scas
adc
xlat
stos
xchg
mov
insb
xor
jbe
and
lock
clc
pushl
fnsave
cmp
xlat
xchg
mov
pop
inc
inc
push
mov
bound
mov
call
pop
loope
or
fistpll
mov
add
popa
sti
loop
xchg
test
mov
and
lds
outsb
pop
int
imul
dec
jg
add
outsl
jl
lea
ja
or
cmpsb
sbb
mov
ss
roll
cmp
test
int
sahf
xchg
decl
inc
inc
inc
push
inc
mov
xor
repz
imul
clc
xchg
int
outsl
jmp
inc
cmc
xchg
insb
xor
das
inc
dec
push
repnz
xchg
jb
push
dec
nop
xor
mov
incl
movsl
and
scas
cmp
mov
ljmp
test
shll
dec
arpl
push
or
push
cmp
jle
cmp
int
xor
dec
test
mov
inc
mov
hlt
cwtl
mov
arpl
mov
fs
and
pop
ja
xchg
arpl
addr16
mov
enter
ljmp
incl
pop
xchg
push
push
sbb
adc
xorb
or
ljmp
ljmp
roll
inc
mov
mov
lcall
popf
adc
sahf
or
in
or
mov
out
in
inc
or
enter
pusha
cmpsb
mov
loopne
jmp
mov
inc
pushw
xor
inc
fisttps
nop
push
sbb
adc
xchg
mov
gs
test
scas
jl
cmp
cmp
jae
decl
xchg
fnstcw
or
bound
incl
xchg
push
or
or
fwait
adc
call
xchg
test
mov
scas
jae
sub
cmp
lcall
add
add
es
mov
pop
dec
sbb
incl
mov
cltd
inc
lods
mov
out
xor
insb
loope
aas
sarb
ljmp
mov
mov
dec
movsb
mov
aam
jns
arpl
mov
jecxz
pop
imul
es
decl
jmp
push
ret
push
push
inc
data16
sub
mov
mov
sarl
fisubrs
jne
xor
add
popa
cwtl
cmp
fbld
aaa
jno
sbb
ja
xor
or
decl
call
xchg
inc
fimuls
mov
shlb
test
imull
js
push
in
push
push
sbb
add
mov
js
xor
mov
xchg
pop
stos
xchg
dec
sti
add
xchg
and
pop
dec
les
push
std
adc
xbegin
sub
push
xor
mov
call
push
inc
sbb
and
imul
cmp
movsl
pop
sbb
xchg
lock
cmovb
ljmp
lret
mull
aam
pop
sahf
jns
sub
lds
add
pop
adc
pop
push
daa
mov
lcall
xchg
xchg
mov
jno
dec
push
js
subb
adc
jecxz
inc
hlt
cmc
adc
out
int3
jle
icebp
jge
cs
lods
std
cmp
jp
rclb
loopne
jg
fsubl
pop
pop
mov
in
mov
sbbb
or
push
inc
call
push
mov
arpl
gs
jle
lods
mov
stc
cmp
pop
test
lea
call
aad
mov
sub
sahf
leave
mov
pop
xchg
mov
xchg
mov
fildll
sbb
cmp
and
jmp
add
gs
push
dec
in
xor
push
jne
test
sbbl
lock
lret
popf
sar
jg
aas
and
mov
rcl
js
pushf
xor
sti
mov
cmp
dec
add
rorb
repz
add
inc
out
adc
xor
pusha
jle
push
out
sub
mov
bound
dec
push
cli
aas
cli
ljmp
sub
xor
xor
outsb
add
sub
call
add
jno
jns
addr16
stos
incb
pop
test
pop
aam
dec
roll
dec
loop
push
mov
daa
js
inc
pop
jno
fwait
mov
imul
lret
popf
and
out
adc
enter
loopne
or
cmpsb
mov
sbb
mov
push
lock
sbb
sbb
stc
jmp
or
icebp
ljmp
ljmp
jg
cli
jle
insb
push
arpl
lret
push
xor
icebp
xchg
popa
inc
xchg
shlb
repz
testl
out
clc
jg
imul
xchg
pop
adc
mov
and
jno
jg
lea
pop
mov
in
mov
xrelease
sbb
iret
loopne
scas
mov
pushf
mov
jo
jp
stc
cmp
call
or
stos
mov
push
aam
jnp
push
add
push
lcall
insb
fildll
push
dec
data16
stos
out
popl
in
cmpsl
clc
adc
je
and
ljmp
and
cli
xor
xor
out
mov
add
repz
sbb
pop
adc
movsl
idiv
pop
adcb
scas
fisubrl
jnp
cmp
test
jne
pop
xchg
filds
jmp
dec
cmp
hlt
mov
xchg
jmp
cli
dec
jl
xor
pop
push
or
add
xor
xchg
adc
jmp
incb
das
sub
adc
adc
mov
add
sbb
mov
ja
add
adc
mov
sub
sbb
pop
push
std
cmp
mov
cwtl
pop
jae
fiaddl
incl
cld
iret
mov
jmp
push
in
mov
lock
mov
decl
incb
lahf
add
dec
ret
jge
jecxz
add
pop
repnz
sub
pop
lods
cmp
mov
cmpsl
inc
lret
inc
leave
push
push
or
mov
das
mov
jp
test
fdivs
mov
ret
out
data16
imul
pop
gs
xor
idiv
dec
dec
mov
rolb
lds
xchg
loopne
js
add
cmp
jge
jnp
das
lock
xor
xor
mov
xor
call
inc
out
and
popf
popa
add
adc
clc
fistpll
lret
mov
jno
pop
adc
jg
inc
les
jnp
cmp
ss
loop
out
es
imulb
cmpsl
sub
nop
add
or
lcall
in
in
fwait
jl
xor
lret
mov
and
cmp
xchg
xchg
jno
add
push
shrl
xchg
inc
incl
inc
and
cmc
xchg
cmovs
pop
jmp
bound
lcall
clc
push
pop
loopne
adc
adc
push
sub
sbb
ljmp
movsl
and
lcall
pop
popf
adc
jle
dec
pop
mov
and
dec
mov
gs
pop
fists
andb
icebp
cmp
mov
xlat
mov
movsb
shll
adc
in
fucom
jno
add
or
jle
xchg
mov
push
rcrb
mov
aas
decl
mov
sbb
pop
inc
add
ret
mov
fs
jg
cmp
fdivs
into
xchg
in
imul
add
mov
stos
cmp
xor
or
push
enter
dec
out
fwait
add
stos
imul
pusha
les
iret
and
or
decl
icebp
sub
sub
cwtl
sub
mov
fstl
push
mov
mov
xchg
out
mov
roll
repz
cmp
stos
jne
adcl
cmp
in
mov
bound
fcompl
pop
xchg
jne
or
cmp
shll
aaa
addr16
jg
cmp
push
cmpsl
fdivr
xchg
add
jl
adc
sbb
imul
call
and
lea
lods
sahf
mov
mov
sbb
outsb
loope
lret
jns
in
adc
ds
ss
pop
dec
fs
jns
jbe
into
mov
xchg
mov
shlb
lcall
mov
jl
inc
aaa
dec
lret
or
jbe
push
push
fsubs
lods
sbb
mov
cmpsl
mov
jle
lods
sbb
cmpsl
dec
test
addr16
xchg
xchg
cld
scas
fwait
scas
lea
lods
xor
sub
decb
sbb
movsl
mov
push
cltd
cli
lcall
mov
xchg
iret
pop
xchg
loopne
pop
adc
iret
mov
movl
mov
inc
pusha
mov
jno
jb
xor
je
add
outsb
jp
cmp
xor
mov
nop
sbb
shll
cmp
clc
aaa
lret
cmp
push
pusha
subl
dec
pop
gs
cmp
stos
mov
mov
cld
les
pushl
sahf
outsl
mov
das
sub
xchg
adc
and
inc
inc
push
int3
sbb
and
adc
ljmp
fdivs
dec
divb
int3
es
inc
scas
sbb
arpl
mov
shlb
decl
pop
outsl
lds
push
xchg
ds
fisttpll
dec
xchg
dec
out
insb
nop
mov
jge
scas
adc
and
sarl
out
push
out
sbb
int3
and
add
jnp
push
imul
push
in
pusha
and
in
sar
add
sub
push
dec
mov
dec
lea
mov
cmpsb
outsl
dec
push
adc
mov
shll
out
push
faddl
call
cmp
adc
sub
dec
clc
ja
clc
cmc
and
push
fiadds
dec
dec
xor
pop
js
dec
out
or
xor
gs
adc
sahf
xchg
cmp
inc
aas
sqrtpd
insl
cmp
pop
dec
push
dec
in
sbb
xor
dec
mov
mov
inc
adc
inc
loop
push
push
pop
hlt
or
jl
or
imul
mov
jp
movsb
sti
mov
icebp
adc
loop
cld
jg
adc
stos
jl
repnz
add
pop
es
mov
dec
inc
lods
cli
notb
sbb
and
inc
cld
sub
fstl
in
xchg
xchg
scas
xchg
cli
mov
loopne,pn
pushl
call
sub
mov
sbbl
push
mov
call
push
cmpsb
jg
fsubs
ret
push
ja
inc
xor
sbb
jg
pusha
jno
movsb
jl
add
inc
pop
push
mov
push
ja
decb
in
cmp
add
xor
mov
xor
cmc
mov
push
xor
loopne
mov
cmp
pop
jmp
inc
sarb
push
inc
ret
and
je
sahf
xlat
test
and
cli
je
or
push
mov
jne
mov
cwtl
mov
dec
xorl
call
les
xchg
out
sub
cs
cmp
and
icebp
test
ljmp
push
sbb
imul
mov
test
ret
shld
inc
dec
fisttps
imul
lcall
imul
jne
outsb
out
sub
dec
addl
movsl
pop
cltd
fwait
dec
cltd
sub
popa
xor
push
push
popf
dec
cli
ja
int3
nop
popf
mov
push
add
clc
sub
insl
test
inc
xchg
xor
push
push
rorl
decl
incb
sti
xchg
adc
mov
mov
ljmp
icebp
cltd
loopne
in
push
push
outsb
leave
add
ja
pop
or
sub
inc
cmp
jg
dec
loope
or
testb
jne
sbb
jbe
fwait
cwtl
mov
add
out
shlb
push
loopne
ljmp
scas
push
outsl
leave
imul
pushf
mov
ds
fisttps
sub
jns
jmp
aam
xor
jp
insl
inc
mov
mov
inc
filds
lret
lcall
lock
mov
je
mov
lea
pop
pop
lock
in
je
sbb
out
sarb
add
or
decl
pop
fistl
bound
jnp
or
xor
test
jge,pt
ljmp
mov
and
ss
adc
cld
lahf
std
aaa
fsubrs
mov
pushf
mov
fwait
shll
pop
out
stos
ljmp
mov
popa
pop
inc
loopne
jbe
repnz
cwtl
data16
adc
jmp
aad
inc
dec
shll
loop
jne
xchg
jp
aad
xor
test
mov
int3
xchg
jg
jno
inc
call
std
lcall
shll
and
jle
loop
je
sbb
xor
sub
out
mov
out
xor
add
jno
push
loope
inc
imul
sbb
xchg
jns
add
sub
push
pop
lods
sbb
paddd
cmp
xchg
test
mov
sub
or
ja
adc
incl
push
lods
subl
or
cmp
js
mov
jb
clc
decl
sbb
push
jge
mov
adc
es
jg
mov
lea
mov
loop
sysenter
cwtl
pop
clc
jg
lcall
leave
mov
inc
mov
push
jp
sub
cld
jno
loopne
das
fdivrl
jl
sbb
push
int
fildll
sub
cld
xor
sbb
pushl
and
fiadds
fsubrs
mov
icebp
mov
mov
movl
scas
jb
ja
or
jnp
and
push
xchg
xlat
mov
sbb
jmp
cmp
dec
jl
and
fsubrl
jnp
cltd
and
inc
xchg
fnstsw
ss
inc
cmpsb
pop
cld
fstps
pushf
inc
inc
pop
sti
xor
add
ljmp
mov
movsb
pop
jmp
loopne
mov
mov
jae
dec
push
ljmp
pop
bound
adc
and
rcrl
popf
xor
scas
in
mov
movsl
rorl
mov
out
je
xchg
inc
cmc
scas
jo
bound
adc
cld
inc
dec
mov
shrb
incl
es
sarb
into
insb
push
pop
push
pop
out
push
inc
jns
lods
cmc
xchg
cmpsb
into
movd
cmp
inc
mov
jbe
jp
push
jne
decl
ja
movsb
es
xchg
out
js
ljmp
sub
fidivs
sahf
inc
es
jp
fistpl
pop
pop
inc
sub
cmp
dec
clc
sbb
mov
rcll
and
xchg
clc
mov
fidivrs
dec
pop
dec
push
add
adc
mov
outsl
pop
xchg
fdivl
lock
rcrb
outsl
test
sarb
aaa
std
outsl
adc
popa
dec
mov
std
mov
arpl
jnp
lcall
adcb
fdivl
dec
jg
sbb
jg
sbb
sub
mov
adc
ret
sbbl
insl
int
out
and
pop
es
and
outsl
xor
cmp
incl
insl
jns
idivb
dec
cmpsb
int3
mov
mov
in
jne
jno
decl
sbb
mov
pop
jo
int
addr16
js
fadds
lret
pop
inc
loopne
inc
jp
aaa
pop
insl
cmpsb
add
mov
mov
das
sub
jmp
dec
xchg
fistl
push
jno
pop
fdivl
pop
clc
cmp
dec
ret
incl
shlb
and
lcall
lock
outsl
mov
inc
shrb
es
jg
dec
inc
mov
loope
pop
leave
mov
sub
out
push
aam
dec
cwtl
jg
push
pop
addr16
sub
outsb
test
popa
pop
mov
mov
sbb
into
lahf
roll
mov
xlat
add
pop
test
pop
push
mov
mov
push
adc
call
scas
jecxz
rcll
fisubrs
fidivl
add
cmp
clc
andl
dec
sbb
in
xchg
test
xchg
fwait
push
xchg
je
jae
xor
cmp
addr16
aaa
jp
aad
clc
call
inc
pop
mov
popa
dec
mov
mov
xchg
loopne
outsb
mov
cmpsb
ret
mov
lcall
inc
jne
xor
inc
fs
mov
add
mov
lcall
pop
loop
mov
jbe
xor
cmpb
jnp
rorb
jg
test
push
jb
lret
mov
dec
pop
fmull
clc
stc
and
mov
pop
popa
repz
aaa
jns
shll
hlt
xchg
pop
mov
outsb
dec
sbb
pop
sub
ficoms
pop
dec
aaa
pop
inc
cmpsl
add
loopne
inc
int3
mov
ljmp
pusha
imul
pop
lock
cli
cmp
or
cmpsl
pop
push
inc
mov
mov
add
iret
incl
faddl
mov
pop
dec
in
jl
popf
add
cltd
call
cmp
mov
mov
inc
repz
lcall
adc
into
push
outsl
push
mov
rcll
ljmp
jecxz
pop
stos
std
mov
mov
out
push
push
ljmp
jne
ds
idivl
pop
push
loopne
jns
xchg
add
push
nop
mulb
das
bound
jmp
sarl
push
xchg
xor
push
dec
mov
scas
dec
fcoml
incl
jne
fisubrl
jle
clc
pop
loopne
push
pop
xchg
arpl
into
scas
pop
repnz
cmc
or
in
mov
sub
rclb
out
dec
imul
jmp
arpl
mov
and
lcall
jno
lret
mov
xchg
push
cwtl
inc
iret
int3
mov
lock
lcall
loopne
insb
popa
les
cmc
adcl
cmpsl
lcall
pop
cmc
pushl
pop
outsb
fadds
dec
mov
fs
divl
fs
mov
incl
mov
into
add
pop
sahf
lock
and
repz
std
lcall
and
jns
sbb
xchg
ret
xor
mov
sti
movsb
loop
push
into
pop
into
aaa
lea
lea
add
lcall
cwtl
ljmp
mov
imul
mov
enter
jbe
jmp
sbb
movsb
jns
and
js
aam
inc
out
cld
and
lock
sbb
repz
dec
call
cltd
inc
mov
inc
inc
mov
mov
xor
in
jg
pop
call
fs
cmpsb
inc
cld
sbb
push
xchg
negb
xor
mov
inc
repz
stos
lcall
adc
jg
jbe
dec
mov
sbb
mov
dec
jo
jbe
mov
cmp
add
inc
int3
stos
inc
loopne
mov
jne
repz
stos
hlt
and
pop
xor
fisttpll
fsts
mov
push
lcall
sub
mov
mov
scas
cmp
sahf
mov
sbb
cmp
cmp
xor
cmp
test
sub
mov
lahf
lods
les
mov
fs
fwait
ja
outsl
test
sub
push
add
xchg
inc
in
pushl
test
sbb
test
mov
sarl
sti
in
pushl
idivb
mov
jb
adc
cwtl
inc
inc
lret
cmpsl
jmp
jl
mov
movsb
dec
jecxz
nop
mov
jl
mov
xorb
jg
jge
sarl
cmp
mov
xchg
scas
mov
push
stc
es
inc
ret
add
add
sbb
dec
mov
add
inc
shr
inc
fs
rcrb
push
mov
cmp
and
and
mov
cmpsl
enter
out
sbb
cld
mov
fidivrl
push
fcoms
movsb
jb
lock
push
mov
xchg
sti
sbb
leave
and
nop
mov
decl
pop
mov
sub
inc
mov
adc
in
jmp
cld
jp
lea
and
add
add
mov
xor
mov
cld
fistpl
mov
sahf
rcrb
fisubrl
mov
push
inc
icebp
mov
adc
jbe
in
js
lcall
iret
cmp
fadds
pop
mov
test
dec
fsubs
lcall
std
mov
inc
in
ret
mov
mov
xchg
jg
sub
clc
mov
cwtl
int3
sbb
mov
cltd
fwait
mov
lock
mov
or
lds
lods
inc
mov
in
dec
in
mov
cmp
mov
loop
stos
cwtl
mov
call
das
loop
xchg
je
popf
add
mov
push
fs
cltd
frstor
call
mov
int3
mov
push
fwait
jnp
add
xchg
cmc
cwtl
out
cli
mov
loopne
stos
outsb
ret
add
pop
cmpl
call
out
inc
aad
lds
jb
pop
inc
clc
lods
test
fcomip
scas
mov
sub
jge
loopne
js
nop
aam
dec
lods
into
cmpsl
push
mov
decl
sbbb
jo
cs
and
scas
cli
jae
mov
cmp
xchg
inc
in
fwait
jl
or
jns
fnstsw
jle
push
jl
int
cwtl
std
xchg
xor
aaa
cld
mov
mov
out
andb
inc
sahf
fbstp
ja
call
cld
shr
sbbb
fmull
mov
out
xchg
data16
cmp
jbe
mov
jmp
nop
in
push
test
mov
sbb
outsl
nop
lock
hlt
xchg
dec
in
test
out
push
ljmp
inc
inc
xchg
mov
mov
push
mov
adc
ret
fcoms
jg
sbb
mov
sbb
ret
adcb
seto
mov
push
data16
sar
xchg
mov
clc
mov
repz
mov
fidivl
lods
pop
repz
mov
add
jno
loopne
ljmp
mov
mov
pop
cwtl
in
pop
mov
lcall
ja
and
dec
jl
call
add
repz
xchg
push
ljmp
xchg
push
xchg
scas
fwait
in
push
mov
daa
jbe
push
loopne
mov
add
lcall
inc
push
cltd
xor
loope
in
xchg
xchg
lahf
mov
cmpsl
lcall
adc
dec
ja
mov
or
hlt
mov
leave
in
lods
mov
mov
sbb
addr16
idivl
pop
cmc
das
faddl
fists
stos
arpl
and
push
adcb
jg
lcall
add
bound
pop
xchg
int
sub
mov
scas
xchg
repz
jle
xorl
out
sbb
inc
hlt
outsl
mov
imul
fsts
popa
repnz
fistps
mov
mov
in
orl
out
sbb
ret
mov
push
mov
mov
pop
mov
pop
stos
adc
mov
mov
mov
inc
mov
es
xchg
aas
bound
std
mov
in
mov
fstpt
cld
cli
mov
testl
sub
cs
in
pushf
dec
loopne
mov
aas
icebp
adc
mov
xor
adc
jmp
subl
mov
xchg
add
mov
mov
clc
test
and
mov
push
lock
ja
lds
test
call
jl
cmp
mov
mov
inc
cmp
dec
clc
pop
cmc
mov
cwtl
pop
push
leave
push
push
cltd
ljmp
das
mov
pop
mov
aas
test
xchg
movsl
add
cwtl
mov
fidivs
pushl
dec
xchg
xchg
pop
fiaddl
pushf
dec
mov
leave
lods
dec
roll
loop
cmc
ljmp
icebp
mov
dec
faddl
sbbb
nop
pop
mov
inc
push
xchg
fdiv
mov
cmp
out
mov
jg
cmp
nop
inc
into
xor
movsb
leave
xchg
mov
ss
cmpsl
ficompl
cmpsb
jp
xchg
mov
add
mov
jg
lock
mov
mov
ljmp
cltd
xchg
popf
mov
roll
xchg
push
cmpsb
mov
fwait
imul
aad
cltd
mov
dec
pushf
nop
cld
int
pushl
mov
lods
jg
push
mov
jmp
call
popf
mov
add
mov
xchg
scas
imul
lods
pop
mov
fbstp
mov
addb
stos
mov
pop
lods
cmc
xchg
push
jno
loope
nop
mov
sbb
push
or
mov
bt
out
xchg
lahf
mov
sar
xchg
fs
mov
lea
xor
je
loop
push
mov
sti
xlat
cmpsb
jmp
or
sub
movsl
in
jg
mov
movsb
sbb
dec
in
cwtl
mov
sbb
mov
cwtl
data16
lcall
xor
rclb
xchg
inc
in
lods
dec
int3
cmp
jle
clc
mov
mov
mov
xchg
cmpsl
push
cmpb
jge
mov
or
lcall
jns
mov
movsb
fwait
repnz
pop
icebp
mov
incl
xacquire
cld
xchg
mov
lahf
dec
sti
pop
scas
jge
add
xchg
jmp
insb
or
call
xchg
std
sub
mov
mov
mov
jg
pop
ret
push
sub
jne
cmp
jg
cmpsl
mov
or
mov
fwait
jne
loopne
cld
dec
repz
movb
mov
mov
add
gs
sub
popa
test
mov
call
xchg
sahf
dec
shlb
inc
mov
loop
dec
out
lods
enter
loop
pop
jg
mov
jp
xchg
pushf
or
xorl
xchg
pop
pop
cwtl
mov
inc
mov
jbe
mov
icebp
ljmp
mov
lcall
repnz
inc
mov
inc
fcoml
mov
loop
mov
pop
push
or
inc
sub
dec
mov
mov
mov
test
shlb
mov
add
inc
mov
mov
mov
loop
push
adc
pop
or
cmp
sbb
pop
cld
xchg
movsl
inc
lds
in
loope
cmpsl
test
xchg
xor
jae
sbb
xchg
push
ret
stos
push
lock
xchg
fcomps
push
pop
hlt
push
and
dec
ficoml
push
cmp
incl
in
pop
std
or
mov
std
pushl
inc
and
outsb
sbbl
xchg
outsb
mov
xor
inc
movsl
push
push
nop
mov
fdivr
mov
mov
and
mov
cmp
jmp
repz
jp
lods
pushl
pop
lods
sti
mov
xorb
mov
mov
add
jle
or
pop
lcall
mov
xchg
testl
jmp
in
push
mov
sub
pop
movsb
adc
xchg
cmc
mov
add
decl
loopne
xchg
xchg
dec
imull
xchg
arpl
jmp
fistps
sbb
cli
mov
dec
popa
mov
mov
xchg
sub
jle
mov
repz
cwtl
jnp
and
push
and
jecxz
mov
mov
call
cmpsl
jge
jp
dec
jo
int
popf
sahf
loopne
test
sbb
sub
int
decl
push
mov
mov
and
fists
lods
dec
rclb
mov
js
and
inc
xchg
testb
mov
xchg
push
out
mov
popl
inc
int3
or
mov
mov
cld
cmpsb
cmc
mov
ljmp
in
lea
movsl
gs
inc
jge
in
xchg
cmpsb
movsl
daa
inc
scas
repz
clc
pushl
out
cmpsb
data16
and
mov
into
and
adc
mov
or
jmp
pop
xchg
aam
sarb
mov
and
sub
sbb
sub
pop
stos
inc
jmp
pushf
fbstp
push
popf
loopne
mov
lahf
jg
aaa
stos
js
add
mov
jae
out
xor
mov
int
mov
xor
xchg
adc
jnp
inc
inc
ret
add
cld
pushf
mov
rorb
mov
lock
mov
clc
incl
pop
mov
pop
mov
mov
rorl
jmp
lock
sub
mov
test
je
push
inc
xchg
clc
mov
stos
leave
movsb
mov
data16
mov
xor
stos
inc
adc
aaa
inc
divb
subb
fwait
mov
mov
cmc
add
mov
inc
out
test
sbb
std
mov
data16
loopne
pushf
push
sbb
imul
ss
clc
call
xchg
scas
fldenv
jnp
sti
xchg
stos
in
xorb
jg
decb
nop
cmp
jns
inc
idivl
in
mov
fwait
imul
cltd
jl
add
inc
shll
push
inc
stc
mov
lahf
mov
lock
clc
xor
jecxz
cmp
addl
les
clc
mov
cmp
add
push
mov
push
mov
frstor
and
cwtl
rolb
incl
push
out
addl
xchg
outsb
addb
pop
cltd
inc
fdivrp
mov
enter
popa
and
add
mov
les
push
cli
orl
or
sbb
pushf
dec
mov
popa
pop
xchg
inc
div
inc
call
xor
xchg
sahf
jo
lahf
add
mov
mov
mov
cmp
std
dec
mov
scas
inc
sti
push
push
fs
cmpsb
loopne
js
push
test
mov
popa
sar
sbb
and
pusha
cmpsl
inc
fimull
std
lcall
clc
aaa
ljmp
pop
cld
sub
inc
cwtl
lret
cmp
lcall
fwait
imul
sbb
dec
gs
jg
mov
pop
popa
stos
fimull
mov
mov
jmp
out
adc
aas
das
data16
mov
imul
mov
jns
add
mov
mov
jg
add
jmp
mov
and
call
ret
xchg
mov
ja
xor
addr16
inc
popf
dec
adc
mov
out
mov
sbb
nop
mov
push
outsl
clc
jnp
scas
xchg
ja
mov
mov
jo
lcall
inc
sbb
in
test
outsl
sahf
paddd
cwtl
mov
xchg
mov
fsubr
mov
les
bound
addb
add
sbb
sbb
addr16
adc
push
xchg
sbb
mov
xchg
pop
notb
lcall
jg
lds
ja
cmp
push
xchg
push
inc
pop
mov
xchg
and
ficompl
test
movsl
or
or
mov
pop
inc
lea
loope
pop
leave
mov
and
out
pop
hlt
push
push
aam
dec
das
dec
addr16
cmp
imul
jg
mov
scas
enter
loop
cltd
in
sbb
incl
cmp
sbb
inc
ja
je
test
iret
mov
stos
cmc
add
clc
movsb
daa
ljmp
xlat
sbb
shrb
dec
pop
mov
scas
push
cld
sub
lods
jp
add
outsb
jo
sar
inc
push
pop
ret
add
outsl
jge
pop
js
or
inc
stos
xlat
mov
fstpt
pop
mov
lods
clc
push
push
add
push
jbe
imul
push
pop
push
add
inc
fstps
gs
sbb
outsb
loopne
mov
add
call
mov
push
adc
popa
ljmp
jg
jp
mov
jp
push
test
push
das
test
jp
xchg
popa
popa
into
xchg
decl
xchg
dec
popa
lods
movsl
jb
mov
mov
outsb
pop
push
lahf
jne
or
fs
mov
arpl
addr16
jmp
jns
sahf
gs
ljmp
push
gs
test
jbe
add
fisttps
lods
gs
hlt
xchg
push
jae
sahf
outsb
push
ret
in
lea
sbb
ljmp
mov
inc
mov
and
push
pop
add
mov
mov
daa
loopne
jg
push
stos
and
and
and
adc
clc
incl
fiadds
inc
dec
push
jnp
js
sbb
lcall
jb
jp
ficompl
xchg
push
int
je
pop
shrl
loope
enter
or
scas
lcall
shrb
mov
pop
aam
sbb
xchg
imul
cld
push
ret
into
xor
fstps
jg
sbb
xchg
ss
push
decl
mov
cli
dec
and
shlb
scas
cli
or
into
aaa
push
stc
mov
fdivl
clc
jmp
imul
inc
inc
jo
push
test
pop
sbb
sub
daa
jge
jb
movsl
nop
and
popf
adc
ja
pushl
ds
mov
mov
enter
adc
aam
pop
pushl
dec
and
cltd
hlt
stos
pop
push
adc
daa
push
cltd
adc
sbb
lcall
decl
xor
adc
push
mov
mov
icebp
sbb
ljmp
jp
push
push
or
cwtl
outsb
repz
adc
dec
sbb
out
popa
lds
push
loopne
push
movsl
xor
test
xor
mov
mov
or
std
incl
in
pop
or
pop
je
lahf
mov
cltd
lret
popf
pop
js
cmp
clc
ss
cmpsb
pop
pop
fsubl
adc
and
add
mov
decl
sbb
xchg
jbe
and
xchg
sbb
jmp
orl
sub
pop
push
ss
stos
mov
lea
add
cmp
add
push
xchg
pop
insb
roll
int3
jo
cmp
imul
sub
jb
mov
lock
sbb
outsb
and
movb
xchg
mov
out
scas
add
es
jb
adc
xchg
add
xchg
mov
inc
daa
sti
lods
jo
daa
movl
and
loop
adcb
add
ljmp
ljmp
or
push
add
xchg
negl
movsl
and
hlt
fstpt
lcall
or
sarb
cmpsl
cmp
ljmp
scas
sbb
sbb
add
ja
cmp
jo
pusha
mov
xlat
or
adc
lcall
jp
in
test
adcb
push
fildll
pushl
das
mov
test
mov
and
jbe
pop
lea
aaa
jmp
decl
sub
xor
sbb
sub
and
sbb
xchg
sub
imul
push
fwait
or
insl
enter
jns
xor
push
mov
lahf
jmp
or
pop
pushf
push
jbe
jg
push
jne
std
and
test
in
inc
xchg
sbb
dec
xor
jg
test
push
lidtl
xor
enter
mov
mov
mov
sub
sbb
mov
loopne
mov
mov
add
decl
les
popf
repnz
popf
dec
cli
adc
mov
sahf
mov
dec
adc
xor
or
decl
jae
push
insb
movb
sahf
into
stos
mov
cmpsb
push
mov
cmp
stc
lock
sar
cmp
push
mov
cmp
icebp
ljmp
andb
jnp
push
mov
aas
ja
xadd
cwtl
nop
incl
ljmp
adc
cltd
cs
xchg
sub
lods
sub
cltd
sahf
test
jp
sub
mov
push
stos
sbb
call
xchg
addr16
pusha
icebp
adc
mov
dec
gs
scas
and
sahf
or
jg
test
mov
mov
jecxz
jno
jns
incl
dec
adc
jmp
mov
add
mov
inc
add
je
clc
mov
test
movsb
push
daa
mov
xor
loop
push
push
cmp
pop
loopne
xchg
cmpsb
xchg
int3
pop
popa
cltd
mov
inc
ljmp
pop
pop
stc
lods
jmp
mov
xor
jl
out
push
dec
mov
sarb
push
jg
mov
add
jle
sub
sbb
and
sbb
mov
push
push
fists
scas
jmp
fildll
outsb
out
push
adc
push
xchg
mov
popa
scas
aam
mov
stos
cmp
adc
and
cmp
lret
mov
sub
mov
sub
lock
pop
dec
je
jb
xor
outsl
mov
and
shrl
mov
cld
push
test
push
jns
xor
sub
sbb
cmpsl
and
jg
mov
xchg
rclb
mov
mov
inc
or
xchg
fisttpll
or
xchg
jno
dec
mov
pop
fdiv
add
cld
sub
bound
lcall
mov
stos
mov
int
sbbb
dec
pop
mov
dec
pop
cmpsl
push
inc
movsb
scas
jmp
in
pusha
add
pushf
mov
adc
ja
decl
mov
xchg
mov
push
xor
dec
ret
pusha
mov
xchg
pusha
into
lock
ret
mov
push
mov
jae
test
stos
test
std
int
scas
test
cli
jg
mov
scas
inc
and
xchg
jns
dec
cld
sbb
stos
cmpsb
lods
push
int3
cmpsb
cmp
add
enter
das
fdivrl
nop
mov
add
pop
sbb
xchg
shrl
fwait
dec
cld
jg
test
add
jp
dec
lret
call
xchg
mov
imul
push
mov
fildll
lock
sub
aam
cmc
jbe
xchg
loopne
lcall
fsubrl
and
ret
mov
pop
loope
sub
arpl
push
stos
xchg
sub
aaa
add
jb
stos
insl
int3
sub
push
cltd
push
cmc
je
mov
or
das
clc
pushf
jne
xor
fwait
insl
inc
xlat
jb
fists
mov
pop
mov
push
scas
cmc
dec
cmpsl
xchg
lcall
push
lock
incl
dec
lret
xchg
xchg
mov
jmp
xchg
icebp
pop
jg
outsl
cli
rolb
fs
mov
data16
pushf
data16
test
bnd
add
mov
in
mov
sbb
adc
nop
call
loopne
nop
ljmp
sub
mov
call
dec
loope
jg
xchg
mov
dec
ja
adc
jcxz
jmp
hlt
pop
push
adc
ret
lods
test
jb
pop
jo
call
mov
rol
jne
dec
inc
lock
and
scas
mov
mov
sub
sbb
in
lods
outsb
icebp
mov
es
es
sbb
clc
jmp
dec
mov
add
cmpsb
mov
cmp
push
adcb
into
rorl
xchg
add
sbb
cmc
incl
inc
or
jecxz
dec
xchg
mov
and
shlb
les
std
test
inc
jbe
jmp
jnp
jg
lcall
jbe
mov
dec
mov
xchg
test
and
lock
movsb
cmpsl
test
stos
add
aam
pop
cmc
incl
mov
cmp
lea
add
mov
jecxz
pop
fildll
sahf
int3
or
jg
jnp
jbe
jns
mov
out
mov
or
insb
xchg
mov
ja
jo
push
push
jne
ljmp
push
je
push
in
mov
out
or
fsubl
lods
vphaddbw
incl
dec
je
and
mov
push
cmp
jae
and
dec
pusha
test
inc
in
aam
mov
in
dec
xchg
mov
dec
sub
adc
testl
insl
pop
push
out
mov
xchg
outsb
mov
fsubr
mov
push
adc
mov
jle
cmpsl
jne
sahf
push
lret
pop
mov
lcall
push
sarb
ja
cmpl
push
mov
xchg
add
hlt
push
aam
ljmp
lods
cmpsb
mov
aad
gs
call
in
leave
outsb
mov
mov
sub
jge
inc
dec
pop
push
xchg
loope
xchg
xchg
mov
cmc
incl
shrl
mov
stos
inc
inc
ljmp
sbb
xchg
jg
incl
push
loopne
cltd
cmc
dec
xchg
mov
jmp
and
mov
aas
pop
lcall
popf
stos
pushf
xorl
mov
sbbb
jg
iret
xor
xor
pop
push
mov
hlt
or
jae
shlb
mov
sbb
sbb
ljmp
inc
lcall
ret
out
fdivp
push
mov
pop
hlt
fwait
cwtl
imul
loop
jo
mov
adc
aas
fcompl
inc
push
xchg
outsb
jecxz
aad
xchg
mov
enter
lock
pop
add
dec
and
icebp
rcr
imul
ljmp
imull
mov
popa
imul
mov
dec
and
ds
cli
add
daa
mov
xchg
gs
lock
add
xlat
outsb
mov
or
cmp
stc
outsb
xor
in
xchg
cwtl
shll
push
cs
cli
inc
fdivr
jg
pushl
ret
clc
xchg
fchs
jbe,pn
lahf
cs
enter
mov
aaa
mov
mov
dec
pop
cmpsb
pusha
test
jmp
insb
int
jno
std
jle
sarb
push
dec
rcll
xchg
dec
fldcw
enter
jecxz
push
cwtl
cwtl
jne
inc
data16
jae
rol
movsl
fsubrl
pusha
pop
loope
jl
push
or
test
lcall
fmull
enter
xchg
and
rorl
xchg
mov
jg
inc
ds
adc
push
add
arpl
or
pop
rorl
ss
dec
jb
ljmp
push
popf
mov
xchg
scas
add
cli
dec
push
cld
jae
scas
cli
outsl
cli
add
push
mov
inc
jbe
std
xchg
push
out
add
inc
mov
scas
adc
das
xchg
and
sbbb
jno
fmuls
fsubrl
imul
aaa
std
or
test
clc
and
mov
adc
int
aam
in
shrb
insl
xchg
jns
cmp
push
fsubs
aas
push
outsb
cwtl
sub
push
xlat
push
pusha
adc
sub
jg
or
cmc
outsb
xorb
jns
lock
aad
dec
jbe
xchg
sub
ret
icebp
jne
fsubl
cli
outsl
decl
mov
in
mov
mov
addl
inc
pop
lock
xor
cltd
leave
push
sbb
fcoml
adc
pop
stc
inc
jecxz
rclb
test
pop
add
bound
add
mov
fstps
imul
mov
cwtl
adc
out
pusha
pop
cld
dec
addb
pop
xor
jecxz
fdiv
jp
aaa
push
sbb
adc
mov
push
lcall
xchg
bnd
mov
repz
push
divl
popa
daa
xor
and
sar
cs
lods
movsl
and
aas
sub
rcll
out
sub
adc
xchg
mov
xchg
mov
data16
pop
inc
mov
mov
dec
call
sar
xchg
jae
cmp
dec
inc
inc
sub
rcll
mov
hlt
je
flds
cmpsb
inc
jnp
clts
clc
call
cmp
das
mov
mov
scas
mov
push
out
dec
iret
enter
decl
mov
jle
outsb
imul
scas
push
xchg
lret
popa
xor
xor
and
jne
push
jle
cmp
xchg
decb
adc
pushfw
pusha
jg
adc
sub
incl
mov
cmp
xchg
lcall
orb
mov
mov
or
pushl
xchg
imul
or
incl
std
xchg
xchg
jge
imul
dec
shll
ds
roll
inc
ljmp
push
jae
push
js
jnp
xor
les
inc
mov
cli
pop
push
mov
insl
dec
rolb
roll
movsl
cmp
mov
pop
int3
xor
repz
repnz
dec
incl
test
dec
mov
inc
push
jge
decl
sar
dec
dec
dec
test
adc
adc
test
mov
or
inc
popl
xchg
push
mov
inc
ljmp
pop
fldl
jb
shrb
js
gs
push
jne
sbb
jp
faddl
arpl
ja
stos
inc
out
add
mov
repz
inc
pop
and
push
mov
fisttps
sub
xor
dec
and
arpl
outsl
ja
xchg
loopne
sub
aaa
xor
adc
loop
ret
push
rclb
cmp
jo
rolb
pop
push
movsl
inc
stc
sub
lcall
dec
in
jl
in
push
xchg
jl
xchg
ret
test
sub
sbb
pushl
jl
fldcw
dec
fsub
call
rcll
jle
jne
out
lods
and
mov
inc
imull
out
mov
lock
dec
mov
push
cmpsb
sub
push
fists
and
insb
pop
gs
sbb
sub
je
jg
sbb
aas
inc
frstor
jns
sahf
add
ja
aad
jno
out
stos
push
xorb
xchg
and
mov
out
ja
sub
and
decl
mov
std
xchg
and
cmp
insb
sub
dec
and
call
and
mov
punpckldq
push
pop
jbe
xor
mov
xor
call
add
fisttpll
insl
rclb
sahf
mov
dec
inc
xlat
fbld
jb
and
or
test
mov
xchg
imul
sbb
stos
jbe
mov
scas
dec
ss
jns
sub
out
mov
fstpl
mov
push
push
sub
int3
sbb
push
jmp
gs
dec
pop
inc
xchg
shrl
push
sbb
call
ds
lahf
pop
nop
fwait
lret
xchg
xor
sbb
dec
and
sbb
gs
add
fildll
in
cmpsb
mov
sub
fistps
aam
hlt
scas
icebp
jg
incl
pop
lahf
cmc
call
sub
jne
mov
push
mov
cli
divl
inc
mov
jno
mov
icebp
fistl
int
cmc
xchg
jns
repnz
jg
lock
pop
xchg
cmp
xchg
add
dec
add
jmp
je
and
fidivrl
push
jmp
test
add
jo
add
cs
enter
loope
fimull
les
scas
cmpsb
jmp
lods
xor
inc
jmp
mov
sbb
pop
hlt
in
pop
add
ja
push
sub
cltd
inc
add
add
ja
jl
add
jle
or
sub
lea
dec
filds
mov
fmuls
lcall
sbb
and
mov
push
push
and
and
ds
clc
addl
add
scas
adc
pop
aas
cmpsb
mov
incl
add
and
jb
dec
sub
mov
jge
mov
shlb
movsl
ljmp
add
int3
sub
xchg
cmp
push
add
nop
ret
push
xchg
in
push
and
test
push
ds
mov
dec
or
std
sar
lcall
jae
and
or
mov
shl
push
jno
das
jns
jmp
popf
nop
lret
jae
xor
fimull
mov
push
leave
push
test
jbe
xchg
dec
testb
nop
les
cs
pop
cmp
mov
mov
or
and
jg
adc
add
sbbl
xchg
cld
aas
cmp
or
sbb
out
sub
add
push
adc
push
inc
out
xchg
ja
dec
fcomip
add
leave
and
mov
sbb
mov
dec
xchg
jp
or
mov
adc
ja
jl,pt
pop
lods
cmp
and
pop
call
gs
mov
push
cmpsl
xchg
in
mov
ljmp
lret
sahf
mov
mov
fimuls
pop
pop
loope
dec
jns
mov
mov
xchg
cwtl
movsb
mov
andb
mov
icebp
cltd
mov
test
sub
scas
mov
cld
jg
xor
and
pop
push
push
arpl
push
jp
push
call
jp
push
xor
insl
xor
cmpsb
mov
inc
int3
mov
mov
pop
pop
add
xor
nopl
or
mulb
data16
adc
lcall
scas
imul
std
mov
movsb
movl
and
mov
xchg
push
lcall
sub
aaa
in
fwait
fdivl
jge
out
clc
fcomip
jg
dec
lret
dec
xchg
add
movq
xchg
sub
pushl
sbb
movsl
int
add
pop
pusha
jns
js
adc
push
dec
in
dec
lods
sbb
hlt
incl
cmpsl
adc
arpl
rolb
pop
jl
cltd
fisubrl
adc
cwtl
out
jp
adc
dec
lds
inc
cwtl
loop
test
clc
add
dec
push
sbb
adc
inc
stos
xor
cmp
cld
rcll
mov
mov
stos
mov
int3
loope
mov
xchg
loopne
mov
cld
mull
into
mov
repz
out
mov
mov
loopne
push
ljmp
in
jbe
mov
push
mov
and
shlb
or
cmp
pop
lcall
cli
fs
call
cwtl
mov
stc
shl
fcoml
xchg
icebp
lcall
mov
cmpsb
lea
mov
and
cmpsl
lea
jg
gs
data16
xchg
xchg
hlt
lods
mov
insb
xchg
xchg
jbe
mov
call
push
insl
addr16
jb
lods
mov
xor
cmp
mov
call
xchg
mov
jle
call
dec
shrl
std
push
mov
insl
scas
inc
cmc
cmp
call
loop
aam
adc
loopne
aaa
aaa
out
shrb
sub
punpcklbw
sar
fucomp
mov
out
pop
sbb
scas
rcrb
pop
aam
sbb
jne
loope
mov
sti
stos
jns
ret
mov
aad
decl
repnz
dec
sahf
mov
addl
mov
loopne
jmp
mov
pop
not
pop
je
lods
outsb
call
pop
push
jge
out
cmp
and
mov
std
cld
test
shrb
icebp
scas
in
jecxz
sar
mov
pushf
and
rcl
sarl
ljmp
push
jbe
test
adcl
push
inc
inc
stos
aas
jbe
or
outsb
ljmp
dec
movb
mov
cmp
dec
rcr
xchg
incl
push
imul
loopne
test
popa
js
out
enter
xchg
rorl
jg
pop
addl
pushf
test
jge
loop
incl
pop
cmp
je
into
nop
lahf
sahf
xchg
jmp
test
cld
pop
or
std
stos
insb
enter
dec
notl
cmp
mov
mov
fs
cld
adc
into
mov
fmull
push
mov
xchg
lea
xchg
js
cmp
sar
aas
pop
fisttpl
mov
sub
push
pushl
pop
pop
div
fs
fs
mov
pop
out
aam
scas
xchg
js
lcall
jl
fwait
cmc
add
lock
inc
call
inc
fs
and
push
rclb
mov
xor
mov
popa
jmp
in
cmpl
dec
jb
loop
xor
jnp
stc
fcos
incl
push
mov
insb
dec
push
xchg
mov
jo
gs
inc
mov
addb
jbe
dec
pop
push
push
jg
aaa
dec
jle
jb
sub
mov
inc
leave
inc
jp
cld
popf
mov
xchg
mov
push
sub
jne
inc
push
and
lret
fimuls
cwtl
fidivs
push
dec
jbe
adc
cmpsb
fs
decl
dec
adc
mov
dec
jp
and
mov
outsb
imul
js
inc
cvtdq2ps
loop
call
call
insb
cmp
lret
imul
push
int
mov
mul
mov
xchg
cmp
lock
pop
hlt
xor
arpl
cwtl
movsb
mov
xchg
mov
xchg
iret
xchg
mov
inc
sbb
mov
in
jge
out
mov
rcr
mov
adc
sbb
mov
cmpsl
mov
mov
xchg
and
lahf
push
cmp
imul
movl
dec
leave
mov
xor
cmp
pcmpeqw
out
jp
cmc
mov
mov
fisubrl
iret
sarl
mov
and
mov
sbb
xor
lock
mov
shlb
outsb
jb
aam
incl
adc
test
das
sub
test
outsl
fdivrl
divl
loop
call
cmpsl
jmp
bound
dec
mov
push
inc
call
dec
jae
fadd
test
cmpsb
xchg
scas
xchg
inc
inc
pop
dec
adc
repz
lcall
mov
mov
mov
and
repnz
clc
decl
mov
xchg
mov
sub
sbb
rcr
je
bound
rolb
inc
mov
pusha
out
mov
inc
pop
mov
cmpsb
lock
imul
std
aaa
cld
movsb
adc
mov
push
sbb
xor
inc
addb
or
sub
shlb
mov
incl
mov
lods
fdivrl
call
jae
ret
and
mov
mov
nop
pop
mov
bound
aaa
int3
xchg
jge
jno
ret
std
mov
shlb
fdivrl
fwait
mov
nop
in
xchg
mov
mov
push
ret
loopne
mov
icebp
das
xor
pop
insb
loope
ljmp
push
pusha
add
outsb
loop
inc
mov
mov
jmp
mov
pop
push
popa
clc
dec
mov
add
dec
andb
pop
cmc
xor
jbe
loopne
push
mov
loopne
mov
in
xchg
push
mov
decb
test
cmc
mov
rorb
cmp
lods
push
dec
flds
inc
lcall
add
push
push
mov
and
in
add
xchg
clc
mov
mov
out
mov
jo
mov
aaa
leave
sti
cwtl
fdivl
xchg
ret
cwtl
fwait
sub
dec
repz
stos
xchg
mov
fidivl
rclb
scas
cli
mov
in
popa
xchg
jbe
cmc
cmpsb
xchg
aaa
sub
ror
mov
daa
movl
mov
hlt
mov
int3
xor
clc
pushl
pop
lret
call
sub
xlat
mov
arpl
push
or
enter
cmpsb
cwtl
push
js
jle
loope
inc
dec
push
push
jne
cli
es
mov
dec
or
cmp
mov
xchg
adc
sbbl
push
jo
jg
push
lock
xchg
outsl
cli
push
ss
stc
mov
jle
orb
pushl
and
pushf
mov
mov
fwait
xchg
out
js
cmpl
push
mov
jle
lea
stos
loopne
and
hlt
adc
ret
xor
pushf
mov
aaa
test
icebp
hlt
pop
std
out
and
aad
out
mov
sbb
stos
inc
lahf
incl
test
rorl
ret
shrb
clc
jg
xor
arpl
enter
test
mov
sub
hlt
cmp
mov
jbe
cmp
loope
cwtl
sub
mov
mov
inc
sahf
jnp
sahf
mov
call
shlb
in
xchg
ja
repz
inc
loopne
jg
xor
mov
xchg
adc
fists
xchg
aas
int3
push
in
jo
icebp
das
es
bound
jmp
test
ss
addb
xchg
mov
push
loopne
pop
leave
sahf
add
ficomps
rcr
dec
cli
ljmp
cld
xlat
rcrb
sub
das
add
scas
xor
mov
nop
test
lret
cmp
add
mov
adc
in
lods
mov
mov
shlb
dec
aam
and
adc
push
mov
push
ja
pop
aam
mov
cli
xchg
outsb
cmpsb
test
cmp
fcomps
sbb
inc
dec
lds
mov
inc
dec
in
cmpsb
imull
mov
push
test
push
cld
inc
sahf
clc
fcompl
adc
push
std
xchg
data16
lcall
scas
in
insl
cmpsb
mov
mov
insb
mov
mov
popa
test
xchg
adc
inc
lods
lock
dec
xor
int
lods
xchg
pop
cmc
dec
rolb
loop
lcall
sub
adc
mov
ret
push
sbb
loopne
mov
xchg
mov
lret
stos
push
xchg
clc
and
sbb
movd
mov
ljmp
outsb
movsb
ror
mov
sarl
pushf
xchg
scas
inc
fyl2x
lcall
test
in
test
fwait
jmp
push
cmpb
mov
subl
xchg
push
je
int
jbe
dec
or
rorb
xor
incl
popf
int
pop
aaa
push
cmpsb
out
test
scas
test
add
imul
jle
xor
cmpsl
cmp
push
lock
sarl
scas
jb
out
jecxz
jbe
dec
and
jo
add
out
push
les
test
xchg
arpl
scas
mov
mov
ret
cwtl
lock
outsb
fcoml
push
pop
mov
into
into
aaa
sbb
inc
incl
fildll
adc
repnz
push
dec
test
fldl
cld
out
add
jnp
enter
cmpl
push
jb
movsb
push
enter
pop
xchg
iret
stos
movsl
mov
insb
sub
mov
faddl
mov
pop
lret
stos
xchg
jecxz
call
sbb
cmp
sti
loope
call
sbb
and
cwtl
cli
xchg
scas
fsubl
xchg
xchg
js
lock
rclb
lds
mov
call
dec
loopne
repz
mov
sbb
cmp
std
mov
loop
push
lods
push
rcrb
fnstsw
fisttps
lock
lret
mov
nop
icebp
decl
in
negl
es
lcall
aad
movhps
leave
stos
mov
out
cmp
lcall
mov
jl
jecxz
xor
pushf
xchg
mov
hlt
lcall
fcmovnu
cmp
mov
fs
sarl
pop
mov
xchg
fldt
mov
mov
xor
aad
lcall
fwait
and
mov
xor
dec
jmp
and
push
lock
mov
mov
xor
push
push
mov
jg
adc
lret
cld
call
aaa
enter
cli
pop
fildll
mov
dec
stc
call
ljmp
mov
fs
inc
shrb
xchg
mov
fwait
lcall
gs
or
aas
cs
jb
adcb
jl
ficomps
fst
add
test
call
cmp
dec
xchg
cltd
mov
dec
push
push
jl
addr16
jns
jg
jge
nop
gs
jp
push
push
inc
inc
inc
sub
xlat
fs
and
sbb
push
and
push
lcall
xor
outsl
xor
and
mov
dec
push
jbe
mov
mov
xchg
inc
into
andl
sarl
in
xor
popf
sbb
lahf
add
loopne
mov
xor
jle
jge
pop
jnp
cmp
mov
call
mov
lds
dec
cwtl
mov
cmp
loope
jo
mov
sbb
imul
mov
jb
push
into
xor
jo
cmp
mov
push
mov
inc
xor
mov
leave
mov
pushl
jnp
jbe
dec
js
sahf
dec
sub
gs
and
pop
dec
mov
popa
add
adc
lods
push
and
call
test
mov
xchg
push
dec
xchg
adc
jns
sarl
pop
pop
dec
call
or
inc
mov
repnz
push
push
stos
push
push
mov
mov
es
gs
mov
outsl
and
and
push
and
lcall
mov
push
sbb
les
pop
mov
aaa
aam
shrb
arpl
push
pop
repz
inc
pop
xchg
jmp
mov
sar
jo
dec
add
and
add
xchg
sub
pop
stos
pop
push
push
sub
add
jmp
out
gs
push
jns
add
and
lret
mov
mov
push
jg
jmp
and
xchg
adc
pop
mov
mov
pop
mov
ljmp
pop
pop
lods
xor
mov
test
lods
mov
ss
push
sbb
std
jmp
negb
ja
and
movsb
or
mov
push
lods
sahf
fdivl
pop
and
xchg
dec
mov
inc
push
lock
inc
in
and
sbb
cmp
and
out
scas
xor
test
xchg
subb
mov
aaa
mov
mov
inc
es
cwtl
ss
pop
jmp
mov
cmp
and
cmpsb
bound
cli
fbld
loopne
inc
add
or
fidivs
lret
xchg
es
int3
cmp
mov
frstor
pop
pop
pop
sbbb
arpl
mov
cs
out
fs
mov
mov
fimull
push
add
cmp
outsl
dec
rcrl
mov
pop
inc
pop
frstor
sub
scas
push
ret
pop
jo
push
mov
sub
jnp
test
cmp
es
movsl
xor
imul
mov
movsb
pusha
faddl
xchg
mov
xchg
leave
dec
lcall
jns
jns
pop
das
lahf
mov
lds
test
int
mov
mov
addl
xchg
addr16
lock
lock
ds
rolb
inc
push
mov
cmpb
mov
jg
insb
daa
dec
mov
les
into
add
cmp
movsb
stos
jmp
jns
loop
push
mov
nop
stos
clc
jbe
sub
sar
mov
xchg
push
pushf
test
mov
and
scas
mov
jnp
cmpsl
in
or
or
jmp
or
xchg
outsb
imul
xchg
loopne
add
fisubl
push
push
cmpb
pop
push
jne
pop
jmp
xor
or
bound
xchg
xor
or
sar
mov
test
aam
push
fs
call
cmc
pop
pop
ja
mov
loop
pusha
fimull
fldcw
je
pop
mov
sahf
or
pop
pusha
fnsave
jmp
mov
adc
jle
movsl
jns
cmp
sub
pop
loop
es
lcall
cmpsb
jbe
stos
pusha
jo
sbb
adc
sbb
jp
pop
lcall
dec
dec
mov
adc
pop
cltd
scas
les
jno
lods
stos
push
popa
cltd
sbb
xchg
xchg
lcall
mov
or
pushf
dec
cmp
push
out
pop
imul
movsb
adc
mov
jp
test
sub
mov
lret
out
xchg
xor
inc
loopne
mov
subl
arpl
in
mov
lcall
xchg
in
mov
cli
inc
xchg
enter
jl
jns
cmpsb
lcall
arpl
sbb
scas
lret
sub
mov
or
push
cmp
ljmp
sbb
bound
rcll
push
jl
jb
dec
xorl
jo
push
call
rcll
ja
arpl
call
sbbb
push
lock
mov
adc
ljmp
ljmp
insl
stos
push
int
mov
and
xor
mov
cmp
loop
mov
in
jb
mov
dec
jmp
jno
pop
std
sub
sbb
fldl
call
cs
and
cld
and
and
rclb
popa
adc
scas
xor
sti
jnp
inc
loop
xchg
movl
insl
and
incl
insl
mov
cmpsb
sbb
add
std
and
frstor
ja
xchg
rorl
lahf
mov
jbe
std
pop
pop
and
cwtl
int
pop
cmp
cmp
stos
or
fnstenv
mov
cmp
outsb
mov
imul
cmp
sbbl
es
ljmp
mov
or
ljmp
test
aas
and
xchg
inc
add
sbb
iret
pop
inc
imul
lcall
loop
or
scas
shlb
mov
dec
subb
rorb
leave
pop
jae
nop
fldt
dec
das
add
pop
imul
mov
jg
loopne
shrl
inc
stos
aaa
mov
jne
out
aaa
xchg
jno
outsb
add
jo
or
outsl
cmp
leave
mov
fwait
or
into
jbe
stos
xor
outsb
fmul
inc
sbb
inc
mov
add
in
xor
jo
xchg
and
dec
xchg
adc
push
and
popf
pop
loope
stos
mov
sar
and
pop
sbb
fbstp
xchg
or
stos
lds
test
push
pop
cmpl
inc
jne
cmp
xor
adc
adc
xchg
mov
push
push
xchg
sbb
mov
gs
ret
es
jmp
ljmp
add
mov
mov
add
test
add
mov
incl
ret
inc
inc
call
lock
jmp
lret
cmp
jns
sub
xor
adc
inc
daa
xchg
dec
mov
fdivs
insl
ljmp
add
and
sahf
push
jbe
cmp
mov
dec
pusha
pop
imulb
in
jle
cmpsl
xor
shrb
mov
add
movsb
lods
mov
ret
xchg
cmp
pop
clc
mov
mov
sbb
cmp
jg
loopne
pusha
and
xchg
cmp
and
or
xchg
mov
add
push
daa
dec
ljmp
pop
xor
mov
ja
jb
push
or
scas
rclb
cwtl
or
cmp
insl
cwtl
pop
xchg
and
xchg
sbbl
xchg
cmp
jno
incb
cmp
stc
xchg
aaa
shlb
add
cltd
xchg
lret
jbe
or
inc
popa
inc
inc
push
pop
add
jecxz
dec
ret
cmp
stos
std
adc
repnz
mov
sahf
inc
hlt
pop
jb
fbld
pop
jb
dec
pop
and
cmpsb
push
js
stos
mov
mov
pop
rorb
leave
mov
mov
call
push
lea
rclb
or
xchg
mov
mov
je
mov
shll
sahf
subb
dec
ja
mov
mov
test
in
out
aad
jns
js
mov
fs
insl
inc
das
sar
xor
repnz
sbb
sub
pop
les
je
pop
mov
sbb
lock
sub
imul
iret
lods
jo
gs
jg
jmp
jnp
dec
mov
scas
sub
scas
and
rcrl
daa
es
setle
in
jg
jg
scas
mov
xchg
outsb
or
data16
push
mov
or
scas
add
call
lods
xor
xchg
stc
lcall
aaa
adc
push
push
ret
add
pop
xor
clc
mov
stos
pushf
sbb
inc
push
sahf
mov
out
rolb
inc
lea
xor
incl
jge
sbb
mov
sbb
jmp
push
ret
cs
push
adc
mov
and
sarb
push
jbe
push
popa
hlt
bound
dec
cmpl
pop
push
add
mov
pop
scas
xchg
scas
addr16
sahf
xchg
push
xor
subl
push
dec
cmp
pushw
dec
cmp
adc
push
or
xor
repz
push
add
jbe
dec
jne
and
push
push
imul
lods
cmp
xor
clc
out
mov
lods
dec
sub
aaa
outsl
adc
mov
add
inc
push
ljmp
sub
pushl
popa
mov
pop
add
pop
sbb
js,pn
add
mov
push
push
jmp
push
inc
fnstcw
xchg
addr16
jge
dec
sub
in
mov
enter
lea
jb
mov
jl
push
dec
aas
jle
dec
and
je
addr16
cld
ret
ss
fbld
inc
and
mov
adc
pop
xchg
sbb
subl
not
sbb
or
pusha
sbb
mov
jl
ljmp
jp
inc
jo
inc
sbb
lret
ret
or
add
imul
pop
movsb
outsl
mov
mov
ficomps
test
call
sbb
jns
sub
cmp
ds
jg
and
add
and
pop
inc
jns
inc
dec
pushl
out
adcl
cmp
and
inc
stos
in
insl
dec
lea
adc
rorl
data16
lods
bound
add
and
add
lahf
data16
jnp,pt
loope
mov
cmp
outsb
imul
jg,pt
or
jl
cmc
xchg
ja
add
ja
popl
loop
and
push
add
adc
inc
data16
repz
pop
jns,pt
push
or
cli
fst
push
sub
es
ljmp
jno
dec
cmp
sub
rcrb
cwtl
and
cmp
lds
inc
xlat
cmp
arpl
xchg
pusha
inc
fdivr
dec
pop
test
jle
in
imul
call
xor
sbb
sub
inc
popfw
dec
cmc
call
jae
pop
mov
pop
popf
adc
insl
fisttpll
and
inc
and
in
cltd
bound
decl
xchg
scas
mov
stos
inc
adc
jecxz
dec
jns
aaa
pop
scas
xor
add
jo,pn
xchg
jae
sub
jp
scas
js
pop
pushf
push
ss
inc
mov
mov
mov
jb
add
mov
pushf
push
stc
or
push
push
imul
pushl
cmp
gs
and
movsl
cmp
gs
rorb
adc
mov
xchg
int
stos
jbe
sahf
xchg
mov
pusha
dec
push
and
push
adc
pop
jne
jge
neg
int3
push
push
ja
sar
ja
xchg
xchg
or
xor
dec
fisttps
loop
nop
mov
push
mov
and
ret
lods
pusha
mov
test
dec
decb
imul
dec
hlt
filds
les
int
loopne
dec
popf
aaa
and
mov
pop
cwtl
out
jo
insb
and
lcall
xchg
inc
mov
mov
out
test
mov
xorl
push
and
std
call
js
inc
push
fsts
lcall
call
jb
inc
push
and
mov
push
add
rcl
dec
dec
enter
dec
jmp
loope
adc
xor
mov
sub
inc
orl
adc
push
xor
jmp
popa
iret
inc
icebp
sub
dec
push
jp
dec
ficompl
call
pop
mov
aaa
sbb
sti
cs
mov
xchg
cwtl
push
outsl
dec
push
call
ret
inc
pop
iret
and
jle
xchg
and
in
xchg
test
mov
mov
push
pusha
jnp
sbb
and
xchg
decb
jl
adc
mov
clc
out
dec
or
add
cltd
stos
push
inc
cwtl
sbb
out
lcall
mov
orb
jge
je
mov
xor
sar
mov
mov
mov
nop
xchg
inc
xchg
cli
stos
add
fiadds
cltd
mov
pop
mov
.byte
push
in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
in
mov
add
movl
nop
cmpl
dec
cli
push
mov
push
movb
std
mov
lea
add
les
insb
push
sti
cmp
mov
cmp
je
jne
incl
lea
push
dec
repz
idivl
std
scas
notl
dec
pop
xor
js
call
ds
lea
mov
movsl
cs
add
sbb
cmp
lea
lret
sarl
rorb
in
push
xor
mov
push
iret
sub
xchg
fistpll
add
stc
cltd
enter
out
mov
int3
inc
cmpl
add
test
add
jo
rolb
sbb
or
rcrl
push
xchg
sarb
cli
sarl
test
iret
sbb
aam
cmp
pop
push
test
fisttpl
xchg
add
cli
icebp
pop
mov
push
jo
pxor
xor
push
pop
xor
pop
xor
mov
and
add
mov
push
cmp
cld
and
lea
xchg
adc
push
movsb
loopne
shlb
loop
pop
dec
into
jnp
mov
sub
sub
mov
mov
es
inc
add
inc
push
fldcw
push
push
lds
or
mov
push
movsb
and
sbb
ret
jno
dec
daa
push
add
outsl
in
or
pop
pushf
jbe
lock
std
push
je
push
into
jno
cld
jl
push
dec
lret
mov
or
es
notl
fxtract
xchg
and
push
push
stos
jno
icebp
xchg
lret
xchg
xchg
insl
data16
mov
repnz
xor
imul
shlb
in
cs
xchg
cmpsl
test
lret
jne
mov
lcall
jne
scas
scas
cmp
pop
or
mov
out
into
in
mov
lea
adc
mov
push
xor
addl
mov
and
ja
adc
cmp
rcr
in
iret
cmp
nop
clc
cld
decb
sbb
dec
outsb
jmp
adc
das
jo
add
int3
xor
andb
icebp
xchg
sub
jnp
sbb
mov
cmp
inc
mov
je
jnp
imul
sub
xor
movzwl
or
mov
js
js
scas
xchg
and
ss
add
adc
enter
rcrl
add
mov
popf
dec
sub
mov
adc
clc
fadds
jmp
hlt
xor
add
lock
xor
inc
mov
clc
cld
jecxz
mov
movsb
cmpsl
or
and
add
scas
mov
mov
cmp
jnp
ret
sub
std
test
xchg
xor
or
leave
sub
enter
nop
inc
push
sbb
out
iret
push
fsts
jno
lds
stos
in
push
or
inc
sub
jo
ret
push
dec
movsl
jb
push
jo
inc
test
mov
iret
movsl
mov
mov
mov
lods
xchg
repnz
inc
pop
xchg
popa
mov
inc
adc
test
cmc
fisubrs
test
outsb
rclb
fistps
xor
or
rcrb
clc
aas
pop
add
push
adc
jne
pop
dec
xor
rolb
dec
lock
jmp
adc
sub
fs
cmp
fsubrl
cltd
popf
mov
mov
test
jge
daa
sub
pop
adc
push
xchg
jo
pop
je
xchg
jo
in
mov
cmp
add
sbb
in
sarb
adc
push
adc
enter
adcl
loop
adc
loopne
shlb
push
push
sbb
mov
and
sub
fcoms
sbb
mov
std
sbbb
enter
pusha
or
adc
adc
push
jb
nop
ret
out
pop
mov
jb
negl
mov
add
shll
insb
pmaxub
pop
scas
mov
and
pop
xchg
stos
or
jle
cmp
addl
push
or
in
ret
popa
xor
je
push
rcrl
aas
fistl
das
pop
mov
or
fwait
mov
xor
xchg
xchg
push
push
push
mov
enter
inc
sub
push
sbb
xor
or
scas
dec
roll
lods
jl
repnz
lods
xchg
jl
jecxz
push
adcl
add
adc
cmp
test
arpl
dec
cmc
insb
dec
inc
add
adc
push
je
nop
andb
sbb
pop
xor
push
in
xchg
sbb
mov
aaa
in
sahf
inc
sub
lea
mov
mov
lea
jmp
bound
cltd
mov
pop
add
repnz
xchg
push
inc
call
adc
movsb
cmp
insl
sbb
mov
ss
mov
fldenv
xor
js
add
xchg
lea
jge
ret
pop
insb
shr
fcoms
ret
sub
xchg
ret
or
mov
stos
or
xor
xor
or
mov
mov
dec
sub
mov
jmp
lods
call
inc
inc
aam
int
notb
jb
cmpsb
sub
adc
jmp
stos
sbb
daa
in
inc
addb
push
inc
mov
push
lret
je
mov
push
and
leave
xorb
push
mov
mov
push
or
call
sub
and
pop
xchg
cmpsl
xchg
push
jbe
ficoms
insl
cmp
bound
test
jnp
push
cmp
addb
xor
xor
cld
int3
mov
ret
mov
add
sub
mov
cmp
mov
js
xchg
push
ret
adc
inc
push
loope
add
repnz
subb
jge
test
les
sbb
jne
push
inc
inc
and
orb
inc
pop
mov
iret
jmp
movl
push
lea
push
xchg
sub
and
xchg
sub
es
xchg
lock
adc
xor
xchg
cwtl
push
mov
in
push
sbb
mov
mov
sbb
xorb
xchg
xchg
test
pop
movsb
pop
push
stos
add
loop
popa
pop
inc
pushf
xchg
subb
popl
frstor
jne
mov
push
mov
fstps
sbb
sub
or
and
fwait
mov
sbb
inc
add
bswap
mov
add
mov
mov
mov
out
cmp
cmpb
sub
cld
mov
or
xchg
stc
shlb
inc
hlt
aaa
or
cmp
mov
mov
xchg
test
sub
fdivrl
hlt
mov
adc
sar
shr
das
repz
push
adc
xchg
dec
in
in
pushf
push
jno
xorl
test
rorb
fidivl
ss
mov
test
orl
push
stc
or
or
gs
mov
vandps
roll
movsb
in
mov
pop
push
test
sbb
add
push
add
inc
mov
orb
roll
cli
or
dec
hlt
mov
mov
mov
cmp
rcll
mov
xor
loope
push
mov
xchg
aam
mov
rclb
pushf
jp
push
mov
call
sarl
inc
mov
test
popa
enter
pushf
cmpsb
ret
pop
repnz
adc
mov
lea
add
aad
inc
mov
fs
inc
pushfw
dec
pop
or
rcrb
ror
xchg
test
call
mov
sub
mov
andb
cmp
mov
mov
jo
xchg
mov
call
pushf
arpl
xchg
lret
mov
loope
inc
sub
adc
shlb
add
addb
nop
push
out
faddl
or
andl
ret
cmp
and
xlat
pushf
push
sbb
sbb
xchg
mov
push
mov
and
or
adc
inc
adc
xchg
sub
gs
test
ss
jmp
movsb
jmp
or
out
popf
insb
or
jl
mov
sarb
sbb
mov
mov
icebp
ss
rorb
push
add
pusha
sbb
pop
sub
iret
xchg
mov
es
rolb
iret
rcll
push
jne
and
aam
in
ret
adc
rol
lret
mov
std
rclb
enter
jmp
push
mov
nop
adc
mov
adc
adc
xchg
push
xor
adc
clc
jnp
mov
mov
mov
sub
cmp
xchg
mov
movsl
rcll
xor
cwtl
add
addr16
sbb
es
jle
lods
cmp
sbb
mov
and
add
ret
sbb
aaa
sbb
rcrb
mov
mov
jnp
out
inc
add
test
out
mov
mov
and
les
xchg
jb
fmuls
popf
inc
lea
jl
push
fists
sub
sbb
hlt
pop
push
add
xchg
add
xlat
pusha
rclb
rorb
mov
dec
mov
sbb
push
and
or
sbb
lahf
adc
ret
sbb
shrb
push
mov
xor
sbb
add
mov
sub
loopne
pushf
cmp
cld
inc
or
loop
call
or
iret
inc
in
int3
fsubs
imul
xchg
rol
push
in
cmc
lock
pop
push
pop
add
lea
lods
loopne
xor
add
dec
in
mov
int3
pop
xor
shlb
xchg
xor
and
je
ret
inc
out
xorl
sub
ret
lock
arpl
cmpsb
mov
adc
adc
lds
fildl
ret
call
pusha
shrl
adc
dec
or
ljmp
xor
loope
rorb
sbb
sbb
mov
lock
popf
sbb
xchg
pushf
aaa
mov
inc
mov
movsb
lods
int3
inc
inc
push
cmp
mov
sbb
clc
insl
insb
lea
mov
lock
enter
outsl
add
aad
enter
xchg
scas
hlt
push
push
pop
sbb
fs
push
push
mov
aaa
jne
and
testl
push
adc
pop
xlat
imul
mov
or
repnz
insb
and
push
dec
cmp
leave
lock
iret
xor
daa
int3
movzbl
faddp
shll
pop
movd
push
push
stc
aam
scas
mov
mov
push
mov
in
rcrb
xchg
das
pop
push
sub
pop
xchg
aas
mov
mov
jl
mov
andb
pop
cmp
xchg
xchg
dec
mov
inc
pop
pop
jne
or
push
mov
cmp
dec
aaa
sti
mov
inc
enter
js
add
add
push
pop
in
sbb
insb
cli
outsl
push
cld
push
add
mov
lods
je
mov
add
mov
mov
cmp
lock
cmpl
sti
fisttpl
lock
lea
movsb
clc
mov
dec
push
mov
push
push
or
shlb
sti
inc
ja
inc
add
sbb
add
enter
add
sti
fldt
xchg
dec
push
cmp
jge
sub
sub
clc
mov
push
sbb
jmp
adc
dec
add
es
imul
jmp
shl
js
or
cmp
pop
cmpl
pop
sbb
add
add
call
adc
or
or
mov
xor
out
cwtl
mov
add
mov
xchg
cmpl
mov
test
loopne
dec
loopne
roll
data16
loopne
cmp
ss
sbb
loope
xorb
cwtl
jmp
jae
mov
outsb
cmp
les
les
fsubrl
imull
int
mov
xchg
pop
xchg
aam
jmp
or
icebp
and
mov
inc
sti
push
add
push
xor
hlt
xchg
bound
mov
ss
push
and
jne
mov
clc
lock
push
mov
lret
fadds
mov
out
xor
aam
rcl
rorb
adc
or
jmp
popa
mov
xchg
mov
call
add
jle
mov
adc
add
int3
xor
shr
xor
cmp
cli
cmovge
xchg
rolb
mov
popa
lock
sar
xchg
js
inc
add
imul
and
or
mov
or
insl
push
hlt
and
adc
into
in
std
push
and
adc
push
push
mov
push
sti
imul
loop
adc
add
shll
mov
add
jmp
cmpsl
loope
out
jbe
inc
add
aam
or
jmp
mul
xor
or
add
sub
push
adc
rorl
add
fsubs
add
movsl
mov
mov
mov
aad
iret
sub
or
call
push
pop
jns
push
lock
mov
out
push
stos
cmc
test
cld
je
mov
sbb
or
call
out
or
mov
and
sub
push
repz
push
fdivrl
int
lea
jae
sub
jns
xor
hlt
in
add
out
lcall
hlt
sbb
push
cld
sub
ffree
icebp
xor
shrl
roll
ret
mov
jae
push
lock
adc
hlt
fwait
adc
mov
mov
mov
sar
cmp
jne
cmpb
pop
sub
sub
xchg
jne
andl
push
call
cltd
jbe
mov
rcr
or
fs
cmp
fcomp
cmp
scas
in
ret
mov
jmp
jmp
xchg
xlat
dec
fmul
jmp
jo
test
sub
xchg
pop
mov
sbb
nop
and
pop
jmp
push
sbb
pop
js
pcmpgtb
std
pushf
clc
push
and
incl
repnz
add
pop
pop
xor
leave
cs
dec
xorl
outsb
cwtl
dec
dec
aam
dec
pusha
add
mov
es
es
and
and
push
jmp
mov
mov
xor
dec
pop
push
or
cmp
push
aad
loop
iret
in
dec
lcall
lahf
cltd
dec
pop
mov
and
add
mov
cmp
dec
das
dec
ljmp
imull
xchg
ret
out
add
lock
insl
enter
imul
iret
sub
pop
jg
and
sbb
daa
rorl
push
bound
jno
sbb
dec
shlb
in
and
push
mov
sub
dec
std
lea
or
inc
movsb
xchg
daa
push
repnz
in
shll
js
push
xor
mov
mov
sbb
call
add
adc
lock
lahf
and
add
cmp
fsubrs
add
in
iret
mov
shrl
test
cld
or
daa
or
lock
mov
xor
inc
out
enter
test
aaa
fdivl
add
loopne
mov
cwtl
mov
bound
cltd
cmpsl
mov
cwtl
xor
xor
int
test
int
fistpl
stos
arpl
shrb
movsb
sub
push
loopne
loope
and
lea
push
shlb
addb
pop
mov
push
outsl
mov
jae
dec
popf
test
cltd
xchg
jns
das
and
push
add
push
push
popf
pop
xor
xchg
addb
mov
sbb
mov
xchg
pop
and
xchg
push
xchg
test
fnsave
mov
in
inc
push
sbb
pop
xor
mov
mov
fcomi
stc
add
cmp
rolb
add
adc
and
cs
lea
mov
decl
mov
das
inc
outsl
sbb
ret
inc
xchg
xor
mov
addr16
into
jle
jmp
xor
out
adc
dec
cld
mov
dec
test
inc
testl
out
movsb
mov
fisttpl
xor
movsb
inc
lahf
orl
adcb
repz
jge
add
xor
push
mov
popf
sbb
cmp
int
xor
mov
jno
jne
push
cmp
aas
sbb
mov
or
add
push
dec
cmpl
jb
lahf
loope
mov
movsb
cld
cmpl
jbe
das
pop
loop
nop
js
mov
mov
gs
in
xlat
cld
and
mov
bound
mov
cld
clc
sarl
add
inc
sbb
addb
adc
mov
mov
and
adc
jp
or
es
cmpsb
add
or
out
mov
popf
or
pop
push
pop
jl
imul
sbb
enter
adc
mov
mov
out
popf
mov
ret
ret
sub
vpackssdw
push
es
jne
jl
cmp
shrl
or
adc
loop
adc
push
pusha
ljmp
fs
cmp
jae
push
mov
leave
or
xchg
jecxz
add
cmp
jo
movb
lahf
mov
mov
mov
and
dec
mov
mov
mov
and
fsubrs
lret
lret
xchg
outsb
shl
ret
push
sarl
faddp
mov
or
scas
lods
push
insb
sub
lods
lods
add
lcall
add
cmpl
or
and
test
test
in
mov
push
jnp
imul
es
jne
cmp
or
add
fwait
and
xor
xor
fbstp
mov
shl
mov
fldcw
push
test
test
out
pop
sub
or
jno
pop
test
call
cld
movsl
xchg
sbb
movsb
sub
xchg
lret
mov
pop
mov
mov
push
mov
imul
pop
or
mov
enter
insb
sub
and
cmp
ret
lock
or
and
mov
imul
sbb
mov
shll
mov
divb
xor
jae
mov
test
out
mov
mov
mov
ds
jmp
mov
or
sahf
mov
sub
in
xor
js
sbb
rorl
or
ret
jecxz
ja
pop
xchg
es
in
add
in
in
scas
shll
in
mov
mov
or
dec
icebp
mov
insl
dec
sti
scas
push
and
add
lret
jo
imul
repnz
mov
dec
mov
in
xchg
or
sti
fcomp
sbb
sbb
cs
jns
roll
ljmp
fmuls
dec
jno
add
sbb
adcb
int
imul
and
mov
mov
lea
mov
cmpsb
jae
push
clc
rcrl
leave
sub
js
notb
je
cwtl
or
jae
cs
xchg
mov
in
aam
orl
push
movsb
loopne
push
lock
cmp
jne
call
in
add
jmp
loopne
int
jb
loopne
shlb
mov
xor
sbb
shl
icebp
add
int
jg
enter
test
enter
js
lret
subb
xchg
cs
push
enter
xor
mov
cwtl
aas
fs
xchg
xchg
xchg
enter
xchg
add
les
gs
es
jle
pusha
and
rcrb
cmpsl
imul
sahf
rcl
iret
enter
nop
enter
mov
mov
jb
fcomip
addb
add
push
enter
lods
xor
out
loopne
loopne
sbbb
push
andb
cli
jno
xor
mov
je
call
cmp
aam
mov
jae
rcrl
cmp
call
div
sub
dec
sbb
jp
movsb
stc
jmp
fcomp
pop
fmuls
test
scas
scas
or
fimuls
je
dec
mov
dec
sub
lods
and
aam
shrl
enter
mov
xor
cmp
dec
push
add
push
push
pusha
cs
pop
xlat
push
test
testb
test
jmp
and
jnp
dec
and
add
lods
je
into
dec
call
test
sbb
test
push
das
mov
daa
mov
movsl
jb
movsb
outsb
test
xlat
pushf
hlt
mov
push
or
add
adc
out
xor
push
mov
pop
test
sbb
insb
push
test
or
xchg
xchg
jo
xlat
ret
dec
or
test
movsb
pusha
sub
je
mov
add
cld
nop
cmpsb
cmp
jle
ja
lret
hlt
cld
hlt
es
add
cmc
ja
dec
add
add
aas
adc
ret
adc
lods
aas
mov
jp
add
inc
or
loopne
mov
jne
clc
add
jl
insl
sub
mov
ret
and
add
lcall
mov
inc
push
ret
mov
shl
pop
add
sub
mov
add
adcl
or
je
data16
or
sub
adc
fistpll
xor
mov
add
mov
test
sahf
popa
imul
add
scas
mov
sub
or
sbb
dec
aad
insl
cmp
and
insb
pusha
incb
add
rclb
mov
mov
je
cmp
fs
cwtl
jge
cmp
cmp
sbb
pushf
xchg
push
cmpsb
cmovs
sub
jns
or
nop
lret
aad
sarb
pop
test
or
push
lcall
hlt
ret
addb
or
loope
mov
movsb
bound
pop
xchg
cwtl
push
mov
add
xchg
in
test
cmp
or
out
hlt
push
jne
push
js
adc
test
je
aam
popf
hlt
out
cli
or
pop
pop
xchg
or
daa
pop
pop
es
xchg
or
xchg
xchg
fadd
dec
mov
enter
push
call
inc
cwtl
imul
test
or
mov
rorb
movsb
add
pop
cs
ror
fs
inc
sub
fidivs
and
inc
adc
shl
repz
scas
in
cmp
fs
aaa
fs
mov
and
push
dec
inc
repz
adc
fwait
pop
mov
mov
inc
test
loopne
sub
fisubl
jo
js
in
inc
je
inc
pusha
jmp
in
jbe
add
decb
adc
mov
and
push
cmp
rolb
sbb
ret
or
hlt
pop
test
dec
push
push
cmp
adc
fcomps
jmp
xchg
cwtl
int
pushf
cmp
std
aas
insb
std
icebp
testl
inc
push
cmp
out
mov
cmp
outsb
cmpsl
cmpb
sbb
es
rorb
call
adc
add
adc
jbe
ljmp
cld
cltd
push
sub
xchg
xchg
shll
add
test
mov
dec
push
sub
das
and
inc
pop
outsb
dec
popl
adc
jl
mov
inc
add
xchg
sbb
cwtl
add
dec
mov
sub
cmp
jge
aas
mov
sub
mov
rolb
dec
pop
sbb
or
xchg
sbb
adc
nop
out
dec
xchg
call
adc
xchg
and
dec
inc
jge
xchg
bound
xchg
dec
gs
fadds
out
jnp
jne
adc
out
cmp
cmpl
mov
and
mov
std
mov
mov
mov
sbbl
mov
add
enter
std
push
test
sbb
lods
cmp
fmuls
cmp
adc
push
cmp
lods
andb
or
jbe
push
xchg
xchg
out
add
sti
inc
out
mov
sbb
je
push
pop
verr
mov
mov
fs
add
dec
and
fldcw
adc
sahf
push
pop
pop
xor
daa
mov
inc
popf
inc
imul
pop
ljmp
pushf
std
pusha
movsl
subl
fld1
cmp
in
sub
adc
pop
faddl
dec
cwtl
push
or
mov
sbb
cmp
adc
enter
pop
repz
push
inc
sub
cmpsb
cmp
jbe
xorb
xchg
imul
jl
xchg
sbb
mov
cmp
pop
repnz
sbb
mov
dec
xchg
mulb
clc
inc
pop
fs
ljmp
or
jge
popf
addb
insb
xchg
or
jge
mov
loopne
add
inc
jnp
mov
add
dec
pushf
outsl
lahf
imul
mov
pop
adcb
shll
dec
mov
pop
std
imul
pusha
sti
push
pop
push
and
and
cmp
je
in
sbb
nop
je
xor
dec
pop
xor
inc
lds
mov
pop
iret
stc
add
addb
mov
sbb
dec
push
xchg
pop
daa
sub
lods
in
xchg
mov
or
movsb
test
sbb
add
movsb
xorl
sub
adcb
cmpl
jae
fsub
add
sbb
nop
clc
sbb
in
jge
imul
aad
sub
aaa
shlb
mov
mov
sbb
cmp
add
cmp
xor
inc
mov
shrl
push
mov
mov
pusha
push
jnp
pop
mov
in
cmp
dec
sbb
mov
mov
inc
push
sub
xchg
mov
mov
fstpt
pop
jp
and
pop
test
add
jne
pop
outsl
sbb
sti
push
or
aad
lea
mov
mov
das
lcall
sbb
or
xlat
sub
mov
or
mov
dec
lds
mov
xchg
arpl
in
push
and
out
sbb
aad
rcr
insb
test
cmp
push
adc
roll
or
adc
cs
cmp
push
push
adc
push
aam
push
add
pop
nop
inc
or
add
push
cld
mov
std
sbb
in
pop
std
adc
mov
xchg
js
push
jge
fwait
lods
andb
jl
or
inc
mov
lea
push
add
inc
fistps
add
or
mov
loop
addl
out
push
and
leave
ret
sub
adc
pop
adc
jo
aas
popa
add
dec
and
and
xchg
pop
or
test
dec
xor
jmp
adc
add
dec
sub
jno
dec
or
add
and
das
and
lock
mov
shl
ror
adc
push
jge
jmp
test
pop
add
fucomp
and
mov
jmp
sbb
push
test
push
lods
in
mov
jmp
jnp
jno
fwait
mov
mov
imul
add
jmp
lea
push
cmp
xchg
push
shrl
nop
add
pop
out
sub
mov
mov
popa
cwtl
jp
test
dec
xor
mov
mov
xchg
mov
fadd
xchg
js
push
jl
push
mov
nop/reserved
xor
aad
aas
fwait
dec
xchg
or
jle
lds
mov
leave
dec
dec
pusha
shrl
rcll
arpl
and
xchg
cmp
mov
jmp
xchg
and
je
jl
stc
push
test
cmp
cltd
inc
pop
mov
leave
xchg
xor
xchg
xchg
in
add
subb
dec
sub
pop
mov
lea
jb
sbb
mov
test
mov
push
adc
lret
xor
mov
jmp
jmp
xchg
mov
outsb
inc
adc
adc
xor
and
mov
pushf
sub
pusha
adcl
xor
mov
or
fstps
xchg
mov
scas
push
mov
pusha
outsb
sbb
cmp
mov
jmp
insl
and
pop
loopne
and
jnp
add
dec
repz
negb
nop
mov
xchg
sub
xor
xor
add
popf
adcb
xor
push
leave
add
sbb
jne
and
push
int3
aas
scas
add
pop
sbb
sub
push
lods
dec
cmp
adc
roll
pop
scas
popl
outsb
adc
mov
les
add
push
mov
icebp
aas
icebp
sub
mov
mov
sub
test
lods
add
add
dec
adc
ljmp
and
xchg
ret
loop
fwait
lods
or
ljmp
stc
add
addb
pop
ds
mov
std
xor
adc
fwait
jne
ret
addr16
adc
pusha
add
outsl
dec
int3
xchg
inc
daa
aad
orl
adcl
pop
pop
movsl
mov
ss
xor
push
mov
je
iret
pushf
das
pop
cmc
fsubs
sbbl
lods
rcrl
ja
nop
dec
adc
jmp
xchg
dec
sarl
sub
sub
stos
inc
and
cltd
dec
pushf
leave
dec
es
push
popf
mov
movsl
push
gs
je
mov
cs
push
or
pop
pop
xchg
or
push
fwait
arpl
mov
testl
pop
test
stos
mov
cmpsl
stos
sub
mov
add
jb
dec
push
and
enter
pop
adc
pop
dec
aaa
faddl
out
add
pop
popa
xchg
sub
lret
push
sbb
jle
out
fcoms
pusha
cmp
adc
in
test
je
call
sbb
cmp
push
dec
neg
sbb
cmp
mov
test
mov
xchg
cli
xor
inc
shrb
sub
jmp
xchg
push
pop
sub
mov
jnp
cmp
je
lahf
sub
dec
test
int
aaa
adc
inc
cmp
hlt
cld
cmp
push
xor
cmp
add
cmp
scas
inc
lahf
rorb
cmpl
sub
pop
test
sbb
sbb
arpl
inc
dec
xor
mov
in
sbb
jp
jne
jno
pop
insb
cmp
push
add
push
xor
addr16
popa
inc
and
fisubl
inc
decb
int
jns
loopne
xor
out
lret
add
movsb
inc
cmpsl
mov
movb
sub
cmp
sahf
stos
adc
ret
lret
rcrb
sbb
mov
pushf
and
or
push
dec
leave
fisubrs
leave
clc
mov
loopne
sbb
insb
push
push
or
andb
sbb
push
sub
rolb
pop
mov
or
lods
or
fmull
scas
inc
subb
std
add
and
filds
jmp
push
or
es
jo
loope
cmpb
dec
mov
mov
loopne
mov
lret
daa
fs
pop
add
es
push
cmpsb
jne
and
scas
mov
mulb
pop
inc
push
add
pop
xchg
jbe
sti
test
xchg
cmp
pop
add
add
pop
call
jns
and
add
sbb
xchg
jecxz
call
aad
or
xchg
or
imul
stc
fldl
push
and
jb
stc
in
push
arpl
mov
push
cmp
mov
mov
add
xor
mov
push
sbb
mov
add
xchg
lock
jg
mov
add
clc
push
testb
int3
cmp
sub
and
push
nop
test
lods
std
aam
fucomp
les
cmp
test
or
cmpsb
popl
sbb
inc
movsb
enter
sub
fsubrl
push
xchg
dec
sub
and
mov
mov
cmpsb
inc
shll
add
in
or
fistpll
mov
mov
xor
test
push
in
mov
jg
je
inc
push
push
jl
faddl
pop
imul
sbb
dec
add
test
dec
test
outsb
or
xchg
cmpsb
cmp
mov
xchg
cli
jl
test
adc
pop
push
dec
add
mov
dec
lds
inc
pop
push
or
stos
mov
xchg
adc
dec
inc
mov
lcall
call
jns
jae
cmp
test
js
mov
add
add
jo
push
imul
add
xchg
xor
push
mov
imul
push
or
mov
movl
loop
inc
jg
outsl
add
mov
mov
paddq
add
fmull
test
shrl
imul
les
shll
push
and
adc
add
add
dec
dec
inc
outsb
mov
pop
adc
lea
and
inc
add
push
rcr
cwtl
inc
push
imul
dec
pop
outsb
je
cmp
mov
adc
push
aad
xor
and
inc
pop
int
daa
jne
inc
add
cmp
cmp
xor
je
cmc
sbb
in
dec
in
mov
ja
sbb
mov
push
lds
xor
stos
jb
testl
fwait
add
cltd
aad
and
jno
lar
cmp
mov
cmpsb
popa
sbbb
aad
pop
outsb
ret
cli
pop
pushf
push
pop
or
push
loop
sbb
dec
xor
sub
sahf
cwtl
mov
mov
addr16
jne
sub
jecxz
push
mov
int3
pop
mov
out
push
mov
push
arpl
mov
in
add
pop
data16
lock
pop
sbb
sbb
test
mov
push
adc
fildl
inc
jb
cli
js
add
in
icebp
and
xchg
xor
push
or
jne
xor
push
pop
jbe
push
xor
cmpsl
fdivs
and
push
flds
ret
lret
pop
push
out
repz
dec
mov
pop
out
jnp
adc
cmpsl
sub
or
addl
lret
cmpsb
mov
jmp
daa
cmp
mov
dec
popa
push
inc
imul
mov
or
xlat
fnsave
out
imull
rcrb
lods
dec
pushf
js
sbb
in
jl
sahf
inc
pop
dec
pop
je
pop
subl
xor
and
cmp
test
adc
jb
std
adc
test
stos
inc
push
sub
out
jne
mov
push
rcrl
and
push
push
stc
mov
nop
lret
mov
add
ss
and
loop
push
lds
mov
mov
sbb
dec
enter
repnz
fbld
push
fs
cmp
xchg
jno
roll
xor
mov
shl
repnz
and
xorl
out
and
movsb
push
or
js
dec
lds
mov
lret
sbb
test
and
scas
dec
pop
xchg
xchg
xchg
lret
or
fs
sub
xchg
addl
mov
xchg
and
lret
xchg
sub
jo
bound
push
adc
nop
xchg
mov
mov
cmpsb
jge
push
mov
add
and
imul
dec
shl
xor
pusha
std
jno
out
orb
idivb
fimull
and
mov
push
andl
sub
addb
cmpsl
push
add
or
push
mov
int
add
out
ret
xor
enter
shlb
inc
out
imul
sti
or
movl
xchg
mov
dec
les
ljmp
inc
push
lea
or
loopne
cwtl
sbb
inc
sub
ds
xor
mov
testl
mov
cmp
mov
sti
enter
les
adc
sbb
rolb
adc
push
movd
jle
push
mov
addr16
xor
pop
mov
cmp
cmpl
cmp
mov
cmpl
cli
jmp
int3
sub
xchg
push
inc
or
mov
jns
push
clc
aaa
in
jns
sbb
cmp
or
outsb
test
nop
fdivrl
or
or
lahf
fildll
cmpl
je
or
je
add
push
pop
shll
adc
aam
dec
or
subb
fwait
inc
ljmp
add
movsb
test
or
sahf
fwait
xchg
inc
mov
loop
pop
dec
or
mov
adc
add
xchg
addb
imul
shlb
jne
cwtl
mov
lea
push
cs
fidivs
lods
fcomi
and
cmpsb
push
cmc
or
jmp
out
or
mov
cs
sub
add
cwtl
outsl
push
and
dec
add
push
adc
add
js
and
add
andl
stc
adc
mov
std
shlb
add
jbe
cmpl
aam
clc
jge
jge
dec
loope
cmp
daa
or
repz
sub
fcoms
pop
add
pushf
lret
add
test
stos
and
loope
ljmp
lret
mov
add
stos
add
add
xchg
xchg
cmpsb
sbb
push
lahf
sub
loop
mov
pop
scas
fs
or
adc
sub
xor
adc
sbb
add
xor
mov
xor
adc
arpl
xchg
pop
add
jae
out
push
push
mov
pushf
or
sbb
sub
jmp
xor
dec
mov
xchg
xor
inc
pop
pop
int3
or
mov
addr16
dec
adc
xchg
mov
clc
in
cpuid
data16
mov
in
and
mov
mov
outsl
ret
jg
mov
jmp
push
sub
push
jp
dec
fwait
in
addr16
xchg
xchg
mov
add
fstps
out
leave
mov
mov
sub
adc
arpl
call
push
pop
pushf
loopne
sub
lods
rorb
loop
cmc
shlb
xor
pop
out
rolb
je
push
fdivs
sbb
pop
js
push
mov
push
int3
mov
inc
out
xchg
insb
gs
add
je
in
push
cmp
bound
sub
sbb
sub
js
mov
xor
push
scas
adc
fsubrp
adc
jl
cmpps
pop
inc
inc
dec
inc
add
fdivrs
mov
mov
inc
movsl
imul
arpl
push
adcb
aam
or
mov
cmp
mov
pushl
int
mov
pop
mov
jmp
sub
cmp
mov
rolb
jbe
jbe
sub
cwtl
xchg
mov
mov
pop
mov
loop
sti
jbe
scas
xor
orb
xorl
xlat
cmp
jne
or
ja
loopne
or
dec
sti
cld
add
push
sahf
sbb
add
push
aad
adc
cltd
fsubl
dec
rorl
pop
xor
pop
push
call
scas
add
shlb
push
mov
sbb
ret
hlt
jno
adc
and
push
test
loopne
rcl
jmp
push
jl
movsb
popf
add
cwtl
mov
loop
cld
clc
dec
stos
arpl
and
pop
inc
add
movsb
sti
ljmp
out
sub
adc
test
or
cmp
mov
sub
add
mov
cmp
nop
int3
int3
mov
cmpsb
sbb
sarl
or
lods
add
cmc
fbld
fs
cwtl
add
push
pop
pop
and
sti
mov
adc
fsubs
aam
jbe
inc
adc
test
lods
mov
into
cmpsb
enter
add
dec
mov
or
or
mov
loopne
scas
sti
inc
test
shll
test
sub
xor
movsl
enter
pop
add
xor
dec
pop
cwtl
movsl
sub
inc
ja
xor
or
or
jmp
inc
pop
ret
xor
jmp
incb
iret
sub
ja
mov
push
pushf
xchg
mov
repz
nop
jg
mov
xchg
mov
pop
xchg
out
push
imul
pop
sbb
incl
adc
add
add
push
pop
or
adc
or
mov
fiadds
push
push
movups
adc
mov
js
mov
pop
cmpsl
add
add
sbb
ljmp
pushl
xor
mov
in
cld
neg
arpl
xchg
es
jecxz
lock
pushl
roll
dec
push
nop
mov
push
add
jns
dec
ret
dec
enter
fs
xchg
mov
adc
testl
sbb
dec
jecxz
and
add
or
push
mov
lret
mov
shll
in
inc
lea
push
pop
ret
cld
or
pop
push
dec
cld
cwtl
and
jnp
dec
lret
xor
pop
mov
pop
jo
imul
ja
lds
faddl
jne
cmp
xchg
lock
push
push
lahf
or
mov
fisubs
dec
in
ja
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
and
xor
or
inc
pop
push
test
cmp
lahf
and
jmp
xorl
outsl
or
jmp
incl
add
dec
aas
sub
jo
or
sbb
or
jl
addl
add
xlat
fdivr
ja
or
pop
xor
ljmp
out
scas
cmp
push
repnz
xlat
mov
adc
xchg
je
je
ret
sub
lret
push
sbb
sub
and
sbb
xor
stc
add
test
push
sbb
es
cmp
loope
pop
sbb
enter
add
arpl
sbb
std
and
push
sahf
jbe
adc
inc
or
adc
cmpl
dec
pop
xchg
dec
ficompl
cmpsb
cltd
cmpsl
or
jl
add
cmp
push
sbb
mov
xor
stos
adc
and
inc
mov
inc
mov
pop
loopne,pn
push
and
push
jbe
pop
cs
mov
add
and
test
cwtl
out
sbb
jge
jmp
cs
imul
insb
mov
fmull
jne
mov
das
mov
jns
push
das
adc
je
imul
mov
adc
jne
inc
lcall
cmp
push
adc
jge
cli
add
cmp
jne
roll
adc
jecxz
inc
or
cmpsl
inc
shrl
je
sbb
das
movswl
push
or
subb
push
jo
or
mov
pop
clc
cwtl
je
leave
xchg
cmp
jl
ljmp
push
movlps
jnp
push
enter
or
ret
xchg
sbbb
shlb
xor
add
sbb
stc
add
and
imul
adc
out
pop
arpl
inc
pusha
jns
or
sbb
jne
loope
push
mov
pop
or
repz
inc
xchg
sub
cmp
pusha
push
rolb
jnp
or
cli
adc
inc
das
shlb
push
jecxz
ja
mov
adc
xor
push
adc
mov
dec
xchg
mov
loope
aaa
gs
add
adcl
loop
je
out
in
lods
inc
cmpsl
call
add
adc
xchg
cmp
xor
cmp
clc
push
ss
dec
or
push
and
add
sbb
shrl
loopne
in
test
jmp
xor
inc
sbb
mov
cmp
fwait
inc
add
int
stc
mov
push
fwait
lcall
and
pop
pop
add
add
add
or
das
push
mov
lock
add
push
inc
popa
in
xlat
orb
shrl
inc
and
or
shll
add
dec
cmp
lods
sti
orl
clc
jmp
xor
lret
insl
orl
pusha
adc
cmp
jmp
adc
add
rcrl
dec
mov
lret
push
sub
xor
mov
ret
pop
add
fiadds
bsf
push
sub
insl
clc
push
cmp
inc
in
nop
push
stc
jbe
enter
adc
mov
sub
fsubrl
mov
imul
add
pop
cmp
xchg
lds
movsb
add
mov
push
rclb
bound
aaa
adc
loope
cmp
loopne
pop
test
pop
push
mov
push
jo
sar
add
sbb
push
sub
cmp
sahf
test
lock
lods
les
or
cmp
inc
hlt
pop
movsl
jb
mov
pop
pop
stc
cmpsl
pop
cmp
jno
or
and
clc
jmp
mov
dec
cmp
insl
out
js
mov
cld
or
add
nop
mov
jae
cwtl
xchg
inc
roll
mov
sbbb
jge
cld
scas
cmp
pop
jne
ds
lret
aam
je
pop
add
jno
icebp
imul
adc
mov
lock
xor
in
xchg
mov
adc
cmp
pop
add
sbb
lods
adc
cmp
pushf
addb
lock
and
hlt
push
push
cmp
gs
jnp
fisttpl
test
pop
dec
jmp
aaa
sbb
mov
repnz
loopne
cli
rcl
cld
ret
fwait
xchg
wbinvd
pop
xabort
mov
push
icebp
aad
fs
push
sbb
xor
sub
andl
or
test
clc
lds
add
in
cmp
je
mov
enter
cli
mov
sub
jne
shl
xchg
mov
or
push
and
dec
or
jnp
or
inc
nop
add
xchg
add
arpl
pusha
or
cmp
adc
out
jmp
adc
or
jge
rol
adc
add
mov
clc
psllw
push
sub
lea
hlt
loopne
add
pop
push
into
call
pop
sub
jbe
dec
add
loopne
cld
neg
and
cmp
xor
je
adc
add
lahf
jns
adcl
insb
cmpsb
ss
rep
incb
or
imul
push
adc
mov
xchg
cmp
iret
lcall
add
pop
mov
jmp
shlb
inc
mov
jo
and
adc
sub
cld
dec
pusha
inc
mov
add
in
cld
push
push
lds
mov
or
cld
sbb
pop
cmpl
in
mov
xor
push
push
mov
mov
mov
xchg
fcoms
arpl
or
dec
call
mov
add
adcl
call
fnstenv
and
repz
cmp
pop
inc
or
shll
mov
outsl
or
fdiv
cmp
jne
scas
je
sub
loopne
dec
test
movl
stos
dec
inc
loopne
test
loopne
pop
daa
movsb
test
test
cmpl
sub
stos
or
dec
jl
bound
or
scas
sub
and
xchg
imulb
or
mov
fidivrl
jnp
xor
xchg
inc
mov
ret
mov
push
xlat
inc
aas
or
dec
pop
adc
or
push
or
je
adc
test
fiadds
pop
xorl
rcrl
cs
jae
or
push
inc
sub
cmp
sub
xor
repz
mov
add
adc
sbb
push
jns
inc
add
inc
sbb
outsb
fadds
or
roll
xchg
les
call
stc
mov
mov
sbb
jmp
clc
jg
sbb
mov
arpl
mov
push
mov
push
les
iret
in
js
add
push
addb
push
cld
mov
cmp
cmp
jne
lock
or
cmp
sbb
clc
es
and
pop
loopne
add
or
popa
and
roll
jns
aas
sbb
loope
fs
push
lock
mov
je
orb
and
jl
push
in
pop
adc
lahf
jecxz
and
inc
enter
xchg
dec
in
lea
push
bound
push
sbb
aas
dec
fnstenv
enter
mov
pusha
loopne
jp
mov
add
dec
pop
movb
outsb
test
push
pop
fiaddl
call
dec
dec
outsb
and
push
add
sbb
daa
fists
inc
das
mov
adc
jmp
mov
or
add
int3
dec
sub
inc
sub
inc
or
inc
cmp
jle
dec
adc
cmp
lahf
bound
sbb
jo
mov
aad
les
or
jmp
cmp
push
lea
shl
push
ret
jne
out
pop
push
pop
jo
shlb
inc
das
push
pop
jl,pn
mov
lds
dec
sub
push
nop
lcall
add
mov
pop
pop
add
pushf
sarb
adc
or
and
add
sub
sub
add
es
jmp
and
mov
inc
add
push
xor
xor
sbb
xchg
ret
add
jb
sub
or
push
mov
and
mov
and
add
jbe
sahf
lods
mov
test
adc
jb
adc
test
add
mov
pusha
insl
insl
int
push
jmp
sti
adc
mov
add
inc
mov
lea
dec
push
sub
es
fsub
push
pop
aaa
in
shl
fs
pushf
cmp
je
imul
loop
and
clc
jne
popf
lods
sub
das
and
in
jge
addr16
push
and
and
push
jecxz
cmp
shlb
loopne
in
sub
dec
in
push
xor
addr16
push
icebp
sub
popf
mov
mov
jo
or
inc
xlat
push
pushf
sub
sbb
cmpsl
cmc
add
xor
test
pop
aaa
xchg
xchg
push
call
cltd
add
jb
add
call
jno
sbb
or
stos
fisubrs
mov
push
fimuls
sbbb
or
or
in
push
xchg
lock
add
cmp
sbb
push
sub
stc
lods
insb
xchg
jl
push
shll
fcmovnbe
mov
xchg
stos
inc
dec
fxch
dec
lods
pushf
call
mov
mov
outsl
mov
and
jmp
imul
nop
repnz
xchg
push
or
andb
jnp
mov
adcb
pop
mov
mov
popf
inc
lea
cltd
in
push
dec
mov
xchg
mov
andl
stc
jmp
or
pusha
test
and
add
pminsw
test
or
push
xor
jecxz
pop
mov
test
fs
mov
in
loopne
inc
xchg
jbe
mov
loope
dec
ret
jbe
inc
or
mov
inc
negl
adc
ljmp
test
cmc
cmp
add
adc
shr
and
imul
orl
call
lods
push
jmp
jbe
pop
dec
hlt
jge
enter
cli
mov
add
scas
jno
in
add
push
movsb
xchg
add
insb
lds
jmp
lahf
cmp
cmp
fisubrl
xchg
repnz
cmp
dec
jge
fcoml
insb
push
and
jmp
sub
jae
out
jne
push
xlat
inc
test
adc
neg
mov
dec
or
pop
dec
or
mov
shl
push
or
push
pop
and
dec
movsl
out
fsub
adc
jge
arpl
loope
imul
in
pushf
shrb
cmp
sarl
or
loop
je
mov
push
add
insl
add
shll
xor
or
fdivs
xorb
stos
dec
xor
mov
int
cmp
inc
mov
inc
mov
jae
fistl
stc
xchg
jne
scas
mov
rolb
ss
fsubr
sbb
insl
fcmovne
cmp
fwait
jns,pn
push
inc
inc
sub
xchg
subb
dec
lret
jmp
daa
push
and
leave
pop
popa
mov
pop
sub
test
rcll
add
pop
adc
int3
imul
adc
popf
int3
sub
ja
int3
cmp
jae
cmp
xor
mov
lock
test
xor
mov
sbbb
fcoms
cmpsb
les
fisubrl
push
cmp
clc
jne,pn
daa
dec
jne
push
stc
dec
dec
jne
adc
jne
loope
inc
pop
std
pop
iret
das
pushf
es
adc
lods
sub
repz
inc
adc
adc
or
mov
mov
jno
jge
mov
clc
aaa
mov
dec
mov
jne
add
add
insb
dec
pop
addl
dec
imul
hlt
fldt
or
movsl
mov
fcomi
cmp
push
and
dec
int3
loopne
call
test
jbe
gs
in
pop
push
adc
pop
push
scas
roll
das
fsubs
lock
add
cmpsl
roll
add
insb
adc
jecxz
lcall
sub
pop
out
andl
popl
cmp
sti
fsubrs
or
pop
imul
mov
inc
loop
and
cmp
or
mov
lret
jle
enter
je
or
cmp
pop
jae
cmp
insb
jbe
mov
mov
mov
jmp
decl
jl
dec
push
add
push
movsb
dec
sbb
pop
sbbl
jo
push
add
in
jge
or
lock
adc
pop
aad
adc
in
mov
popa
jb
fnstcw
jmp
and
dec
inc
test
dec
dec
xor
push
add
ret
dec
out
adc
push
ds
dec
push
xlat
mov
push
jmp
dec
mov
gs
lea
rolb
pop
imul
push
push
in
mov
sbb
push
sub
or
imul
pop
mov
loopne
movsl
rcr
xchg
push
fiadds
movsl
add
sbb
adc
mov
fadds
int3
adcb
hlt
add
jo
shrb
push
sub
xchg
lods
mov
jb
out
mov
sub
xchg
lahf
xchg
mov
push
push
xchg
cld
movzbl
xor
stc
xchg
sbb
xor
gs
cs
aaa
dec
cmp
mov
and
and
mov
testb
fadds
xor
movsb
sti
mov
hlt
dec
and
mov
cmp
push
pop
and
lods
icebp
mov
insl
mull
push
pop
mov
xor
leave
push
pop
mov
shrl
sub
movsb
xor
aaa
and
fadds
sbb
sub
or
dec
loop
in
pop
mov
xchg
out
nop
hlt
dec
in
mov
mov
sub
popa
adc
push
in
mov
xor
adc
mov
lahf
insb
push
xchg
xor
cwtl
pop
pop
xchg
test
or
outsb
add
xor
inc
sbb
popa
mov
test
mov
adc
xchg
addb
sub
movsb
sub
mov
sbb
lods
pushf
loopne
mov
or
sahf
hlt
daa
fs
xor
or
mov
and
pop
enter
xor
mov
and
pop
cmp
nop
cmp
sub
push
popa
mov
push
and
dec
andb
mov
jns
xor
clc
pushf
jns
or
loope
das
lret
aam
in
xor
hlt
das
sub
in
pop
mov
mov
lods
cmp
mov
pop
mov
sub
lahf
jbe
out
mov
nop
pop
lcall
jnp
mov
call
dec
xor
xor
repnz
xlat
adc
in
pop
or
mov
pusha
lret
mov
or
push
adc
daa
jne
xchg
enter
fs
test
addr16
sub
sub
add
adc
and
pop
jp
es
xchg
add
xchg
movsb
dec
test
dec
add
jmp
cmp
push
push
mov
pop
add
pop
mov
fdivrl
mov
add
sub
adc
dec
inc
cld
sbb
cmp
bound
cmp
jns
or
arpl
jg
ret
push
adc
pop
sti
cld
shl
push
test
addb
cmp
or
lock
mov
and
ds
lock
ret
push
call
loopne
popa
sub
sub
cmp
jl
mov
or
outsb
push
in
lea
mov
jmp
jae
lcall
loop
xor
sbb
shll
mov
ret
mov
adc
and
mov
out
pop
hlt
shr
jb
dec
rcrl
inc
rcll
shrb
mov
jae
gs
adc
push
aas
mov
jnp
cmp
cld
push
pop
rcrl
popa
cld
cmp
mov
inc
mov
insb
push
sub
jmp
sti
clc
mov
mov
shrl
mov
mov
cld
mov
jmp
loopne,pt
and
inc
js
xor
or
les
in
or
adc
mov
mov
inc
or
test
std
jae
pop
xor
mov
daa
pop
adc
mov
xchg
push
rorb
call
into
nop
std
xor
mov
out
mov
lea
jno
or
scas
xor
aam
jge
pop
ret
ljmp
and
push
cmc
cld
sahf
inc
add
add
and
fimuls
xchg
cld
leave
frstor
inc
dec
xchg
push
cltd
push
cmpl
push
jne
in
push
xor
sub
jbe
inc
jb
jmp
dec
dec
out
ret
stos
add
ljmp
shlb
outsl
jecxz
hlt
es
add
mov
mov
cld
push
jg
jp
jb
je
adcl
loope
sahf
cld
je
shl
nop
outsb
imul
aas
clc
roll
inc
daa
icebp
test
mov
xor
sub
pop
cmp
les
jg
dec
lods
jecxz
push
pop
jge
not
les
int3
pop
adc
add
pop
pop
ljmp
dec
jae
adc
push
mov
negl
movsl
mov
mov
push
jmp
push
mov
mov
inc
pop
xor
in
ljmp
sahf
mov
dec
mov
adcl
jo
cs
adc
dec
sub
jge
jns
lret
ja
pop
insb
int3
pop
or
jno
and
push
adc
push
adc
dec
mov
int3
xor
popa
push
or
xor
stos
adc
testb
jmp
push
pop
jg
dec
cmp
loopne
fcmovne
push
rolb
out
add
add
add
ja
jge
addl
addr16
subb
dec
mov
lods
push
mov
out
add
mov
mov
push
inc
inc
add
stos
loopne
outsl
popa
push
cltd
cld
jg
xor
mov
mov
add
inc
pop
test
mov
call
or
es
les
loopne
xchg
rolb
test
xor
sbb
insl
sub
cmp
push
xor
les
pop
dec
sarb
and
sbb
pop
sub
aas
mov
les
adc
adc
sbb
repz
pop
cmpsl
xchg
push
and
les
in
hlt
push
adcb
or
ljmp
imul
mov
in
push
cs
int3
in
call
sub
xor
jo
dec
sahf
cmp
les
adcl
cmp
jg
bound
in
dec
jge
orps
ror
and
inc
pop
das
add
in
adc
or
mov
lsl
mov
xchg
jbe
rcrl
cmp
popa
aad
addr16
mov
shrb
xchg
push
fadd
decl
les
lock
mov
shll
aam
lret
cmp
or
rcrl
test
push
inc
dec
or
or
test
and
xlat
imul
ret
mov
ret
data16
push
mov
mov
mov
mov
mov
mov
stc
lcall
mov
fadds
pusha
add
adc
inc
pop
hlt
add
jno
out
mov
add
push
test
nop
mov
mov
je
adc
jle
push
int3
dec
add
xor
add
mov
and
inc
or
cmpsl
mov
dec
dec
adc
sub
cmp
int3
sub
add
adc
or
pop
pop
mov
inc
ret
and
jno
cmpsl
imul
dec
add
fidivrs
aam
in
dec
icebp
sahf
inc
pop
mov
add
mov
mov
je
xchg
add
inc
or
mov
cmp
mov
dec
scas
push
push
add
fists
aas
push
mov
sbb
push
imul
cltd
into
nop
push
ja
bswap
loopne
push
xor
mov
lcall
jb
jo
js
mov
xor
sub
mov
test
ret
mov
push
add
aas
mov
and
and
stc
adc
jo
mov
adc
mov
pop
jo
jno
pusha
les
dec
pop
aad
lcall
nop
jb
pop
inc
sbb
notb
mov
xor
std
xor
inc
and
arpl
and
decb
std
movl
mov
lock
and
cmp
and
cmpsb
cmp
adc
pop
pop
pop
inc
mov
sbb
pop
orl
rol
push
sbb
stos
pop
andl
hlt
lret
inc
faddl
iret
or
inc
popa
aam
or
aam
mov
jae
jmp
jg
or
sbb
ret
dec
xor
mov
popf
arpl
hlt
ds
outsl
popa
test
pop
adc
shr
push
xchg
lock
aaa
clc
aad
cmp
outsl
push
or
xor
mov
push
addb
jb
stc
dec
adcl
mov
mov
je
in
mov
or
rcll
inc
orl
jmp
dec
or
mov
cld
or
push
pop
ljmp
stos
aam
jae
fnsave
aaa
clc
sbb
push
stc
lcall
pop
and
in
adc
int3
cltd
sbb
pop
cs
lret
adc
lods
inc
dec
jecxz
test
or
or
jne
loop
ret
mov
sbb
or
mov
repnz
mov
xor
sti
push
mov
xchg
pop
xchg
test
xchg
aam
lar
enter
mov
je
mov
or
inc
bound
js
cmpsl
xchg
dec
cld
push
adc
or
adc
xor
ror
ret
es
or
sarl
clc
jmp
add
popf
addr16
mov
push
mov
inc
pop
shll
pop
repnz
and
test
jne
and
jb
aad
enter
aas
loopne
mov
push
les
insb
test
xchg
in
pusha
mov
adc
dec
push
mov
scas
mov
sub
sar
push
jecxz
mull
subb
andl
pop
sbb
int
push
jne
xchg
outsl
hlt
pop
push
push
inc
dec
inc
adc
ret
lea
pop
call
es
movsb
push
notb
push
hlt
push
adc
mov
add
out
sub
dec
xchg
pop
call
jbe
int3
loop
fdivrs
mov
iret
adc
pop
push
dec
sub
lods
xchg
lcallw
or
pop
rorb
movsb
mov
cvtdq2ps
mov
push
push
or
or
sahf
mov
iret
lcall
in
lahf
xor
xchg
and
dec
cmp
jno
dec
cmpsl
dec
addr16
inc
loopne
jo
push
xor
dec
xor
push
sub
xchg
or
add
jecxz
dec
push
jg
inc
cmp
icebp
adc
inc
lret
rolb
mov
inc
ret
popf
and
mov
jl
pop
cmp
adc
sbb
sbb
int3
pop
pushf
dec
sbb
add
push
inc
and
sub
adcl
test
xor
ss
leave
and
lods
dec
test
jb
aam
das
fildll
int
add
loopne
in
into
or
add
cmc
adc
fldlg2
add
pop
jne
add
inc
adc
les
xchg
int3
scas
push
imul
insb
pushf
add
jl
pop
mov
ds
adc
xor
sbb
jg
inc
sarb
imul
movzwl
int
iret
jnp
rclb
ret
pop
popa
mov
pushf
fstpt
test
in
push
adc
or
mov
xchg
adc
es
add
pop
andw
jne
mov
push
push
sbb
divb
push
andb
ja
sbbb
cltd
sub
mov
sar
scas
cmpsb
fildll
enter
sub
imul
push
pop
push
js
pop
push
jecxz
in
inc
pop
dec
subb
ficomps
lods
rorb
mov
adc
or
gs
push
aad
jl
push
mov
lods
outsb
mov
xchg
push
outsl
cwtl
jo
into
and
filds
xchg
cmp
or
je
dec
aaa
outsl
inc
and
pop
test
mov
push
enter
nop
dec
mov
imul
or
or
and
or
fistpl
test
and
sbb
lods
lea
xchg
inc
pushf
cltd
pushf
sub
cmp
je
or
add
pop
shlb
mov
stos
addl
lret
or
sub
jne
and
push
test
scas
cmp
in
mull
jg
add
test
stos
mov
repnz
aad
add
adc
ret
jmp
adc
mov
or
pushf
xorl
loope
add
dec
rolb
pusha
subl
pop
pop
push
push
push
or
shrb
je
mov
cltd
dec
incl
enter
adc
shll
test
push
add
iret
push
fstl
cmp
cld
dec
push
and
sbb
out
pop
call
insl
mov
das
call
rep
mov
push
imul
add
pop
idiv
outsl
loope
shrl
mov
pop
andl
cmp
arpl
loope
sub
pop
xchg
xor
mov
adc
lahf
fiadds
push
or
push
push
rcll
jp
cld
mov
pop
test
or
fucomi
rcll
mov
aam
ret
inc
jp
and
pop
adc
add
loopne
outsb
loopne
cwtl
sub
and
xor
pop
add
movsl
mov
mov
and
add
pusha
orb
xchg
push
pushf
shl
mov
mov
push
jle
pop
or
and
out
or
test
mov
jo
cs
dec
push
mov
jge
fmuls
or
add
sub
or
jb
cmp
movsl
ret
adc
mov
not
jle
mov
lods
jbe
pop
push
lods
pushf
cwtl
jl
sahf
cmp
cmpsb
and
or
aaa
adc
pop
cmp
test
test
jp
mov
add
idivl
sbb
pop
iret
inc
pop
lret
es
push
rorb
jge
sbb
jne
and
cli
scas
cltd
mov
icebp
js
mov
je
inc
out
addr16
mov
mov
jae
xor
sbb
test
xchg
divb
and
pusha
jg
pop
lock
xchg
or
jge
push
lahf
pop
push
inc
pushf
mov
ja
andl
sub
ss
or
jmp
stos
pop
push
push
mov
shlb
mov
adc
mov
mov
push
pop
pop
xor
clc
xchg
jecxz
pushf
cmp
add
pushf
add
inc
pusha
fisttpll
pushf
jb
inc
movsb
push
test
in
ss
adc
mov
inc
sub
and
lock
jne
sub
outsb
xor
inc
call
adc
add
jecxz
add
les
sub
popf
out
cmp
cwtl
aam
pushf
lret
movsl
or
fsub
xchg
jo
cmp
fisubs
imul
jne
adc
add
add
push
mov
notl
pop
lods
xchg
jmp
in
aad
xor
sbb
dec
jo
stos
add
jno
cmp
mov
add
sbb
out
rol
lcall
mov
xchg
enter
cmpl
dec
inc
inc
lret
in
lret
add
in
mov
dec
jmp
cli
addb
push
int
cmpsb
int3
sbb
shrb
in
xchg
test
or
add
cmpsb
mov
outsb
dec
pop
scas
mov
push
enter
and
ficomps
dec
nop
dec
sbb
pop
icebp
sbb
stc
mov
push
cmp
xchg
inc
inc
test
push
lahf
test
insl
incl
fnsave
or
test
adc
mov
sub
out
fcmovnb
sbbl
add
mov
and
jg
add
sub
xchg
xor
jmp
add
inc
imul
and
inc
inc
daa
icebp
push
dec
mov
loope
and
imul
add
loop
je
lea
or
mov
jbe
jl
jo
pop
and
push
sub
jno
add
adc
add
aas
pop
inc
stos
or
mov
sub
push
xchg
rorb
sbb
aam
push
lea
push
push
sbb
arpl
loopne
inc
or
pusha
mov
inc
pop
cmp
int3
clc
imul
push
testb
mov
mov
mov
push
jmp
push
sahf
jge
xchg
ds
jmp
lret
cmp
xor
sbb
pop
adc
inc
sarb
addl
mov
or
xor
cmp
movsb
fstpt
mov
and
imul
pusha
fcmovne
lods
jge
push
stos
xchg
lret
lea
vpmacsdd
mov
xor
loopne
std
aam
sbb
xchg
add
add
sti
xchg
cmp
push
imul
cmc
pusha
add
adc
or
jo
inc
sub
rorb
dec
int
xchg
rorb
mov
or
cmp
ret
imul
sub
cmp
fmuls
sbb
cmp
outsl
insb
jne
lods
xchg
dec
enter
dec
or
cli
sub
and
dec
dec
das
lds
add
and
or
fdivrl
rcrl
xor
sbb
jne
cli
sub
sub
mov
fmul
push
dec
cmp
rolb
dec
in
mov
pop
xchg
push
jbe
push
mov
int3
xorl
push
mov
jecxz
int
enter
fistpll
push
sbb
jne
dec
dec
push
in
jmp
dec
in
add
xchg
ljmp
mov
in
fsubrl
sub
clc
xchg
mov
outsl
add
push
mov
and
jmp
lahf
inc
es
pop
or
add
xchg
stos
nop
sbb
or
loope
jge
inc
pop
jmp
adc
jge
pinsrw
es
xor
push
inc
add
mov
xchg
data16
sbb
add
cld
push
popf
add
fimull
dec
xchg
sub
cwtl
and
lods
test
jmp
fcmovnb
add
mov
pop
in
sahf
or
loop
dec
or
cmp
aas
test
adc
push
jne
mov
out
hlt
push
dec
jge
dec
inc
subl
sti
add
shlb
xor
mov
mov
sub
mov
dec
hlt
pop
sub
adc
mov
pop
mov
sbb
sbb
sarb
inc
std
mov
lret
in
sar
mov
sbb
push
push
adc
nopl
icebp
jo
hlt
or
push
mov
aaa
bound
xchg
or
ret
or
call
sbb
sbb
push
dec
scas
jg
add
lods
and
nop
js
sbb
cwtl
sbb
inc
repz
pop
je
pop
cmp
jbe
imul
mov
loopne
in
push
hlt
hlt
cmp
jne
daa
roll
movsb
or
mov
jmp
movsl
rcr
mov
dec
inc
ret
cmp
jmp
stc
jbe
bswap
inc
or
xchg
test
jge
cmpsb
fnstcw
push
aad
add
loope
jne
inc
test
sbb
xchg
push
loopne
mov
or
jbe
shrl
adcl
push
faddl
lods
adc
jno
fs
ds
loopne
dec
imul
push
or
sbb
jno
call
pop
push
leave
or
pop
jg
shl
xorb
add
cmpb
push
xor
xor
testl
adc
incb
stc
sub
lea
out
ljmp
bound
or
mov
inc
dec
jne
test
pop
jne
dec
mov
outsl
mov
pop
mov
pop
or
je
jp
fcompl
push
cmp
sub
mov
push
out
gs
mov
dec
sbb
loop
out
notb
js
mov
lods
mov
in
push
dec
call
push
mov
mov
mov
xor
lea
into
cmp
jno
js
jge
sbb
stc
insl
ljmp
cwtl
aam
dec
lea
cmp
sbb
inc
jmp
push
xor
xor
cld
popf
sar
das
cmp
xor
test
mov
leave
ret
or
decl
and
mov
push
push
mov
jne
cmp
outsb
shll
int
mov
mov
push
sub
mov
sbb
sub
mov
jge
loopne
sub
movl
lock
adc
xchg
sbb
mov
frstor
adc
adc
rolb
add
push
arpl
mov
mov
lcall
and
test
dec
jo
insl
jb
inc
jno
sbb
mov
xor
fldenv
or
rorl
rcll
fsubs
idivb
loopne
rorl
lret
or
mov
or
out
dec
out
push
rcrb
add
push
clc
sub
not
and
mov
and
or
jb
mov
pop
xchg
mov
add
test
inc
roll
test
iret
push
push
cmc
ja
inc
cmpb
mov
xchg
mov
arpl
cs
outsb
clc
loopne
leave
loop
pop
xchg
lret
jno
push
fs
jg
ss
inc
mov
add
faddl
clc
add
cli
adc
add
cwtl
les
add
pop
cld
mov
fs
mov
out
or
shld
or
ds
rclb
cld
fbld
popf
or
jle
fs
adc
inc
mov
xor
stos
adc
xchg
jbe
jbe
dec
jbe
idivb
adc
cmp
jo
aam
push
addl
stc
jo
add
inc
inc
mov
jg
jmp
mov
call
mov
xchg
xor
add
sbb
leave
sub
fadds
andl
imul
push
push
mov
xchg
ds
out
jle
mov
sahf
enter
addb
int3
push
rcr
adc
sub
jmp
addb
xor
add
xchg
enter
in
push
sub
adc
mov
add
inc
pusha
lcall
test
out
pop
sahf
std
data16
movl
leave
inc
jmp
jmp
jle
xchg
gs
imul
mov
fnstcw
call
iret
push
xchg
negl
imulb
jmp
arpl
pop
movsl
loopne
imul
cmp
in
imull
ja
mov
jmp
cmp
add
add
adc
add
cmp
jge
cmp
orl
adc
stos
hlt
sbb
jge
sub
xor
sbb
pop
or
add
repz
addl
or
je,pt
outsl
in
inc
add
mov
ret
jmp
or
or
repnz
inc
mov
loope
test
jg
adc
dec
add
mov
pusha
push
xchg
cmp
mov
imul
xor
rol
and
push
ljmp
shll
mov
xchg
sbb
push
mov
mov
pop
xchg
xchg
push
jb
pop
mov
in
sub
pop
inc
xor
cmpsb
jecxz
push
inc
testl
mov
sub
inc
scas
mov
jae
pop
movsb
adc
or
das
jge
rorb
js
je
pop
xlat
or
in
je,pn
push
push
lea
xor
xor
xor
xor
xor
ja
sub
js
into
into
cmp
pop
mov
mov
adc
cwtl
push
pushf
rcrb
adc
mov
add
mov
inc
in
dec
mov
aad
orl
movsl
out
fsubrs
stos
pop
sub
inc
adcl
sbb
push
sbb
test
and
filds
or
mov
lea
rep
jno
push
ds
or
add
pop
shll
pop
lret
add
jne
push
cmp
cli
push
clc
fstp
add
call
pop
push
dec
out
arpl
rolb
fsubs
pop
out
stc
cld
mov
or
rorb
outsl
pushf
neg
pop
sbb
pop
inc
mov
cwtl
dec
fists
or
ja
popf
inc
xchg
push
roll
cmp
jbe
andl
andb
jle
push
pop
and
and
dec
pop
pop
adc
push
xor
push
sti
push
stos
test
or
or
fdiv
out
sbb
enter
mov
jb
int
pop
lock
add
xor
push
jns
stc
push
fdivr
push
and
mov
mov
xor
inc
add
scas
adc
repnz
dec
add
addl
add
xchg
mov
out
cmp
push
and
adc
sbb
push
jp
in
sbbb
call
jns
out
lock
hlt
clc
clc
mov
mov
add
lock
iret
imul
push
push
je
inc
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
idiv
out
loopne
inc
neg
adc
nop
xchg
pop
push
inc
xchg
stc
sub
lcall
mov
movups
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
ljmp
mov
or
push
movsb
repz
rep
mov
xlat
out
sahf
mov
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
imul
add
test
add
andl
adc
and
push
loopne
jge
adc
push
cmp
lret
std
scas
cmp
dec
sbb
xor
jge
into
add
inc
adc
cmp
adc
or
xor
jl
and
mov
push
popf
and
mov
sub
pop
sub
push
stc
je
icebp
add
popf
loopne
inc
xlat
push
or
sub
orb
scas
pusha
mov
lock
mov
mov
es
cmp
and
push
int3
mov
inc
lock
add
adc
xor
fisttpl
mov
andl
inc
adc
adc
pop
out
or
insb
test
or
push
test
jle
inc
movl
cmp
push
add
jns,pt
push
inc
hlt
daa
clc
inc
push
cmp
stos
xchg
inc
loop
inc
testl
ret
fucomi
add
pop
or
scas
jns
add
or
jno
sbb
mov
cwtl
add
xor
pop
enter
xchg
movsb
xor
data16
dec
jp
add
cmp
fisttpl
and
sub
sbb
add
aaa
mov
sbb
sbb
cmp
arpl
push
jle
push
cmp
icebp
mov
cmp
cmp
leave
mov
mov
add
push
mov
dec
adc
mov
les
cmp
jne
in
incb
inc
inc
inc
inc
jmp
and
or
shrl
jo
seta
xchg
shll
mul
xor
into
incb
inc
inc
sbbb
movsb
mov
negb
dec
je
loopne
mov
inc
pop
sti
outsl
les
ret
rep
adc
data16
and
inc
or
arpl
jg
sti
fwait
inc
scas
dec
insb
mov
or
dec
add
push
cmp
sub
adc
mov
loop
jne
dec
sub
mov
mov
dec
imul
or
or
mov
sub
inc
jo
adc
sub
enter
jge
sbb
inc
add
outsl
push
or
cmpl
xor
cmp
iret
add
dec
add
jae
mov
movsb
inc
add
and
push
inc
and
in
sbb
add
push
xor
jno
cmp
and
mov
mov
mov
sbbb
lods
and
mov
shll
dec
or
sarl
sub
sub
push
push
add
cmpsb
dec
mov
cld
add
xor
movsb
add
mov
add
cmp
sub
loope
pusha
hlt
stos
rcrl
fbstp
repz
inc
push
add
and
push
inc
jbe
dec
push
jno
dec
loopne
and
cmp
or
sbb
sahf
cmp
inc
imul
xchg
inc
xor
cmp
movq
jl
cmp
jb
orl
xchg
clc
pop
jl
jg
outsl
inc
xchg
jbe
and
mov
xor
pusha
jbe
push
stc
push
aaa
push
or
xor
or
xchg
hlt
mov
not
inc
sub
jl
clc
jg
aaa
incl
fcomps
sbb
push
mov
mov
hlt
push
xor
bound
test
xor
test
push
das
loop
repz
into
sbb
pop
jle
mov
sbb
push
imul
inc
and
mov
push
dec
push
cmp
add
je
popf
dec
xor
mov
and
rcrl
xor
stc
mov
sbb
xchg
mov
cvtps2pi
fs
jmp
fnstsw
push
push
and
int3
mov
add
add
in
jl
outsb
push
adc
aaa
sbb
inc
add
add
iret
ret
sub
fisubl
data16
orl
or
fs
enter
sbb
shrb
aam
sarb
scas
leave
jbe
jl
dec
aam
pop
sahf
push
cltd
pop
idiv
add
mov
or
repz
cmc
jl
out
lea
loopne
xor
push
push
adc
outsl
aaa
js
add
pop
decl
or
push
push
or
or
lock
rolb
dec
mov
not
pop
and
imul
jb
mov
push
add
ss
cwtl
add
push
push
xchg
mov
jg
cmp
daa
add
sarl
adc
mov
mov
pop
cmp
add
int
loopne
add
repnz
ljmp
aaa
dec
mov
divb
fs
sar
or
mov
lcall
mov
sbb
in
incb
jne
mov
sbb
mov
decl
push
jbe
xor
cmp
cli
call
pop
jne
jb
push
int
sti
jle
lock
sbb
stc
push
pop
and
cmp
mov
inc
mov
jge
pop
movsb
pop
testb
dec
inc
andl
jl
inc
enter
push
add
cmp
lcall
inc
icebp
test
je
cmp
add
ss
ss
pop
lods
push
push
xor
idivb
pop
jne
pop
jb
xchg
adc
inc
push
jp
add
mov
int3
or
gs
xchg
mov
sahf
cmp
mov
add
jae
add
jmp
sub
and
mov
dec
js
stc
pop
mov
jmp
jne
repz
adc
incl
pop
fildl
jle
or
jmp
rorb
clc
jmp
lea
push
inc
push
test
and
inc
push
mov
jne
pusha
jo
mov
mov
lods
adc
into
mov
sub
pusha
or
jmp
loop
mov
push
cwtl
adc
sbb
add
in
jbe
cmpsb
fnsave
std
jge
rep
ss
neg
enter
or
push
push
add
sub
add
xchg
nop
aas
push
dec
or
clc
or
jo
pop
xor
data16
loope
mov
add
pop
ljmp
ret
cltd
cmp
sbbl
in
and
inc
push
out
sub
push
pushf
pop
aam
pusha
and
push
loope
popf
pushf
pop
sub
je
push
popf
fisubs
sbb
jne
push
sbb
or
data16
pop
mull
lods
or
push
adc
je
paddsw
and
jg
or
movl
adc
movl
sbb
stc
aas
add
dec
imul
pop
push
inc
lea
cmpb
in
push
inc
push
or
xchg
adc
and
push
add
or
push
in
insl
out
add
test
or
jl
aas
dec
xor
or
je
cmp
test
loop
jne
mov
add
mov
and
sbb
or
test
nop
test
adc
jg
cltd
sbb
push
cli
ficomps
cmp
je
movsb
jle
in
cmp
jl
shl
dec
or
pop
xor
mov
fs
divl
pop
mov
ds
sub
pushl
loope
sbb
pop
cmp
sbb
and
or
xchg
das
inc
sub
in
mov
dec
push
in
add
xor
gs
cmp
push
stc
ds
movsl
std
and
push
and
and
mov
sbb
out
mov
mov
or
movsl
mov
cmpl
loope
or
jle
pushl
aam
jne
shll
fimuls
lret
call
das
int3
out
mov
or
mov
ret
add
push
jl
dec
dec
adc
das
sub
add
add
repz
or
or
jg
sbb
jle
pop
pop
loopne
push
push
arpl
pushf
sbb
cs
fstpt
out
and
pusha
iret
cmp
jno
mov
adc
sbb
cld
mov
out
dec
add
jg
jmp
nop
add
inc
cmp
mov
pop
mov
leave
lock
xor
sub
leave
xchg
or
or
repnz
cld
iret
fstpt
ret
add
les
cld
outsl
and
leave
sbb
push
in
int3
les
and
pushl
or
xor
lock
pop
inc
fmul
mov
add
or
call
adc
ss
outsb
xor
pop
pop
sbb
adc
push
incl
jbe
popf
hlt
sbb
inc
in
outsl
and
push
sbb
cmpsb
sbb
add
cmpl
add
mov
jo
adc
inc
or
sbb
je
mov
jle
push
cmc
adc
fdivrs
push
shlb
dec
in
fscale
arpl
and
mov
aam
or
add
xlat
loopne
sar
push
ds
mov
inc
outsb
fadds
dec
pop
mov
shl
dec
shll
stos
ds
cmpl
mov
cld
adc
test
cmp
movsl
and
jne
mov
inc
ret
pop
sarb
decb
call
daa
adc
lret
pop
data16
adc
inc
inc
lock
imul
ljmp
add
test
inc
out
pushl
jecxz
cmpsb
or
mov
loope
inc
sbb
dec
adc
fimuls
push
movb
lret
je
cmp
aam
push
sbbl
mov
add
test
fsubr
xor
jl
or
pushf
cmp
or
je
xchg
pop
nop
mov
dec
xchg
sbb
nop
imul
dec
and
mov
pop
or
int3
add
dec
xlat
call
push
ss
push
or
push
mov
xchg
repnz
mov
js
fsubs
pop
adc
adc
and
cmp
mov
dec
je
dec
jne
hlt
pop
and
add
jno
push
adcb
add
jmp
xor
and
inc
cmp
mov
sbb
adcl
xchg
fcmovu
sub
cmp
add
push
and
mov
daa
and
scas
enter
or
pop
arpl
mov
add
or
dec
sub
xchg
cmp
int3
call
imul
sub
jg
ja
filds
or
and
je
pop
cmc
and
sbb
push
out
push
add
xchg
lcall
push
out
inc
imul
ds
mov
lds
xor
pop
push
cmp
jl
mov
inc
sahf
jp
adc
pusha
dec
adc
mov
addb
pop
lock
jne
clc
pop
and
add
mov
repz
add
lods
mov
es
jb
pop
pop
pop
pop
sub
push
cmpsl
adc
nop
sbb
dec
scas
add
pushf
in
dec
test
add
or
push
enter
dec
leave
mov
icebp
cmp
scas
mov
add
mov
pop
daa
mov
adc
or
xchg
insl
dec
incl
sbb
cmc
push
in
shrl
mov
or
push
xchg
xlat
fisubrs
jne
jmp
fildl
fwait
mov
push
xchg
mov
arpl
adc
inc
dec
mov
cs
pop
icebp
mov
cmp
jle
xchg
cwtl
rorl
xor
inc
adcl
jecxz
cmp
subl
lret
repz
imul
aam
test
push
mov
push
jle
jecxz
cmp
push
jbe
pop
das
loopne
clc
dec
push
push
lock
jae
mov
adcl
pusha
jg
dec
ljmp
subb
shlb
jno
call
add
dec
adc
ret
add
cmp
fstl
orl
fmuls
addr16
hlt
dec
jne
out
cmp
jecxz
cmpsb
xlat
or
rolb
and
cmpb
mov
stc
add
pop
scas
pop
and
negb
std
jb
or
or
jne
cmp
xlat
dec
xor
repnz
andb
push
push
dec
or
xor
jne
lock
out
jnp
push
inc
lret
je
ljmp
add
cmc
push
nop
xlat
lock
adcl
sbb
dec
and
mov
adc
xlat
je
cmp
pop
cli
mov
and
cmp
jb
testb
xchg
pop
sbbb
inc
add
int3
sub
sbb
jge
push
negb
inc
jmp
inc
movb
and
cmp
jne
cmpl
push
cmp
jbe
mov
push
or
pop
add
push
push
call
pusha
dec
lret
push
call
and
ret
sbb
lcall
push
clc
add
xor
mov
inc
mov
push
je
push
cmp
shlb
push
adcb
cld
and
push
inc
js
sbb
mov
test
ret
sbb
stos
sbb
push
jbe
xorb
and
cmc
add
pop
sub
cmpsl
cs
out
call
push
jne
and
andb
xor
mov
movsb
cmp
mov
hlt
in
mov
push
lods
orl
dec
out
inc
sarb
test
mov
jl
hlt
inc
pop
pop
mov
jle
cwtl
and
xchg
mov
sti
lret
outsb
out
test
push
cld
push
jo
xchg
cmp
add
pop
pusha
and
cmp
in
outsl
repnz
es
pusha
sub
or
fiadds
cld
mov
ficoml
bound
sbb
daa
jle
sarl
dec
inc
add
and
mov
scas
push
jns
ret
push
test
or
inc
ret
cs
clc
dec
push
xchg
and
or
push
push
movsb
inc
jne
shll
jns
lock
dec
add
mov
jmp
push
loopne
clc
and
ljmp
jb
push
jno
jns
mov
push
inc
xor
add
sti
ret
inc
and
push
cltd
sbb
pop
jb
xor
jb
pop
jb
inc
dec
mov
mov
pop
cmp
arpl
pop
mov
test
push
or
cmp
mov
pop
and
jl
and
lods
pop
cmp
push
mov
cmpsb
jne
sub
dec
pop
sbb
sub
add
outsb
adc
andb
cwtl
rcrb
inc
inc
xor
mov
pop
adc
jl
mov
cmp
pop
and
cmpl
dec
mov
push
mov
inc
dec
and
popf
ds
mov
movl
dec
ja
xchg
and
xor
out
mov
adcl
and
pop
mov
and
push
scas
int
mov
sahf
add
inc
fstps
mov
push
cmp
pop
xchg
mov
and
xor
call
pop
das
dec
out
rdtsc
fnstenv
lret
js
push
jne
sub
mov
aas
dec
sbbl
adc
pop
lret
xchg
inc
lea
push
sbb
lahf
and
add
push
inc
arpl
sbb
push
push
mov
sub
jo
inc
es
add
pop
or
push
push
fstpl
pop
jmp
jne
xchg
clc
testl
xchg
scas
mov
jg
out
jo
shlb
or
cld
push
cmp
push
sub
or
scas
mov
pushf
aas
push
adc
sbb
cld
pop
sub
xchg
bound
push
divl
aad
je
mov
and
pusha
stos
cld
xor
mov
sarb
jle
pop
push
sub
and
les
daa
jo
test
cwtl
fadd
xor
push
push
js
inc
loop
mov
push
lea
sti
jge
jmp
jbe
or
pop
inc
adc
or
cmp
clc
outsl
jbe
lea
mov
mov
push
dec
cmp
adc
pop
sub
mov
loope
mov
adc
adc
mov
enter
in
sbb
pop
xchg
mov
jns
adc
clts
pop
int3
push
or
push
or
push
or
add
mov
adc
xlat
dec
or
or
push
push
pop
pop
fsubr
jmp
cmpl
aad
pop
inc
fldl
mov
jmp
and
test
ret
push
mov
or
add
es
add
jne
push
aaa
je
testl
and
mov
lret
iret
and
outsl
mov
subb
pop
push
into
xor
js
sbb
and
mov
pop
faddp
shll
jg
lcall
lock
inc
rorb
xor
lds
inc
xor
cld
aas
or
push
inc
add
das
push
ret
adc
mov
push
jno
mov
add
cld
pop
pusha
clc
cmp
jb
cmp
jb
mov
jge
push
cmp
mov
xor
jb
mov
pusha
add
pop
int
cmp
jae
inc
add
fcompl
add
jbe
test
adc
inc
loopne
xchg
ret
cwtl
mov
ret
xchg
add
xor
cs
imul
aaa
and
lea
or
sub
fdivrs
insl
cmp
cld
sub
mull
je
sub
sbb
fwait
jne
sbb
mov
mov
inc
pop
popf
repnz
xchg
ffree
idivl
es
ja
add
je
aaa
lea
lock
fdivrs
pop
cmpsb
jns
jmp
in
sub
adc
pop
inc
mov
iret
jo
lret
mov
jg
mov
cmp
sbb
aad
jle
mov
cli
inc
cmp
jle
cld
adc
rclb
mov
xor
in
xchg
pusha
add
push
and
test
and
out
loopne
dec
and
decl
inc
mov
mov
stos
jg
fwait
je
testb
cmp
in
jecxz
sub
imul
xchg
inc
daa
cmpb
std
jmp
out
add
cs
xor
mov
bound
jle
cmp
jle
int3
std
sbb
cmp
jo
loope
je
dec
sub
jg
clc
inc
int3
rcll
shr
sub
jg
mov
mov
dec
cmc
ja
or
pop
lea
mov
mov
sub
jg
sub
rorb
jmp
jne
scas
outsb
loope
mov
mov
lock
les
loop
or
rorb
mov
cmpsl
adc
enter
push
inc
push
fdivl
dec
xchg
das
mov
or
inc
or
sub
adc
add
dec
add
pushl
sbb
cmp
push
jnp
sahf
or
mov
shr
lds
rcrb
hlt
and
xor
ret
loopne
mov
cs
cmp
and
lcall
add
sub
add
pop
and
call
add
xor
js
sar
es
nop
sbb
shl
into
ret
xchg
sbb
scas
mov
xor
push
mov
push
sahf
out
xor
mov
pop
sub
aaa
cmp
es
decb
adc
push
outsl
movdqa
push
dec
adc
push
and
int3
or
pop
xor
dec
push
jl
pop
outsl
inc
or
jbe
jle
aas
iret
push
or
jg
lea
adc
sub
hlt
mov
daa
mov
shlb
push
std
lret
and
or
push
testb
jne
test
push
jg,pt
mov
adc
icebp
push
push
sub
jbe
cltd
andl
xchg
shlb
mov
int3
shl
push
loopne
pop
sti
in
add
sub
lock
in
lock
rep
mov
clc
imul
jne
and
adc
adc
ss
and
sub
mov
ret
stos
jmp
insl
rorl
and
movsl
mov
and
fiadds
test
scas
sbb
shll
jno
ret
outsb
mov
push
pop
out
shl
sbb
aas
lcall
outsl
pop
xchg
pop
pop
jae
lret
clc
or
jno
cmp
dec
xor
push
inc
mov
iret
mov
jns
push
add
call
loopne
cmp
sbb
movsl
repz
incb
je
push
push
sti
ret
movsl
or
lea
subl
sub
xor
sub
mov
sub
loopne
fcoml
sub
int3
data16
clc
or
test
movsl
sar
aas
das
lods
mov
int
lea
cs
add
sarl
enter
pusha
cmpsl
in
aaa
dec
cld
adc
cmp
pop
add
rcrb
popf
xchg
and
rolb
fcoms
jo
xchg
sub
or
fildl
add
pop
push
xor
cwtl
inc
and
loope
into
loopne
fsubrs
jmp
jge
adc
mov
call
jle
inc
cmp
jb
lea
push
fmuls
cld
adc
push
pop
out
add
add
xor
shlb
ds
popa
or
xchg
jb
push
mov
subl
es
pop
out
in
push
sub
sub
fdivp
mov
sub
movsb
push
enter
mov
mov
pop
dec
pop
iret
jnp
adc
dec
or
push
xor
cmp
repz
sbb
or
stos
fwait
pop
fldcw
jmp
pop
jns
fcompl
lock
sub
cmp
and
sub
nop
add
pushf
call
push
sub
lock
inc
pop
xor
out
fidivrs
push
mov
rorb
int3
aam
sub
mov
add
sbbb
aas
adc
add
push
cmp
xor
jge
ja
xor
adc
xor
adc
sbb
fisubl
jge
mov
inc
inc
cmp
inc
dec
jne
jo
adc
xor
test
cmp
imul
ja
out
andl
xor
sbb
xchg
adc
ja
cs
push
mov
shl
inc
aam
or
inc
add
mov
inc
mov
push
ds
add
lods
jbe
es
jmp
and
iret
sbb
test
inc
sub
lock
xlat
mov
xchg
cs
lock
cld
push
ljmp
and
push
adc
je
pop
jmp
push
xor
icebp
gs
daa
xor
aam
sub
out
shll
outsl
cmc
je
mov
rolb
mov
pop
or
icebp
mov
add
xor
xor
jb
add
add
pop
incb
jb
test
mov
fs
mov
xor
mov
lea
xchg
ret
adc
std
inc
or
fidivl
enter
les
roll
and
sub
adc
inc
add
fs
in
in
xor
or
ds
jae
mov
push
cmp
jb
mov
or
jecxz
pop
iret
lea
cli
mov
push
sti
add
xor
mov
or
sbb
movb
les
pop
pusha
fists
das
movsl
scas
pop
add
and
loop
icebp
fimuls
pop
lods
add
ret
andl
sub
enter
add
adc
mov
insl
or
pop
push
adc
js
inc
xchg
sbb
inc
mov
incl
sub
pop
icebp
in
xchg
daa
dec
mov
inc
and
fstl
sbb
xchg
cmp
sbb
xor
add
icebp
shrb
sub
dec
lods
xor
lock
lock
in
pushf
or
ret
adc
loopne
jle
add
and
les
mov
imulb
sub
jmp
adc
inc
mov
or
cmc
push
call
mov
sbb
push
sub
and
jne
lahf
pop
scas
insl
subb
inc
cmp
dec
clc
js
ja
in
or
or
adc
lock
in
adc
jno
pop
push
sub
sub
sub
call
dec
in
sub
pop
cmp
ja
pop
jbe
lea
in
fildll
sbb
adc
add
leave
cmp
jae
loopne
sbbl
or
jb
push
clc
jbe
hlt
xor
push
add
test
jne
sbb
mov
int
cs
jo
les
or
sub
sbb
movsb
cmp
rorl
ja
subb
push
jbe
adcl
or
cmpsb
add
and
adc
and
pop
test
mov
adc
jb
ljmp
cmp
call
push
dec
xor
ret
adc
popa
je
or
dec
jmp
out
pop
insb
pop
and
dec
sub
mov
je
or
daa
dec
mov
add
or
insb
fcomps
or
xor
data16
pop
inc
mov
mov
jle
sti
fbstp
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
xor
idiv
dec
jne
lea
daa
or
leave
fwait
popa
call
mov
fisubs
and
jo
mov
mov
repnz
idiv
div
mov
and
jbe
lea
inc
ret
enter
enter
in
adc
lea
pop
push
inc
mov
inc
in
fdivrs
jbe
fdivr
ficoml
push
hlt
roll
movsl
jo
and
jp
cs
push
cmp
testb
gs
inc
inc
cld
cwtl
testb
cmp
in
jbe
mov
test
orb
std
push
sbb
lods
jmp
and
je
and
arpl
ds
mov
adc
aad
jmp
mov
jle
and
leave
sub
mov
or
rorb
or
and
roll
and
sub
xchg
push
and
and
jmp
test
nop
mov
jb
push
rolb
shrb
inc
jecxz
mov
sbb
mov
imul
push
nop
or
addl
or
cmp
pusha
adc
push
cltd
mov
mov
mov
push
mov
inc
or
and
pusha
test
cmc
movsl
add
mov
bswap
jne
movl
cmp
push
popa
movsb
push
in
insb
jmp
inc
std
jne
rolb
jnp
fldt
mov
xchg
cmp
cmp
les
clc
mov
sub
mov
push
push
mov
or
mov
cmp
push
mov
sbb
mov
cmp
or
adc
adc
jle
xchg
cmp
or
jnp
jo
push
jmp
adc
loopne
push
jno
push
pusha
out
push
and
xor
das
orl
inc
or
push
pop
in
inc
jae
cmp
jbe
movsb
js
movsb
iret
push
jne
mov
test
cmp
sbb
pop
leave
dec
movsl
lds
inc
daa
mov
cmp
leave
xor
lea
jmp
into
sub
add
jmp
hlt
dec
inc
sbbb
add
clc
jbe
mov
rcrb
inc
inc
cmpb
shrl
add
push
add
loopne
xorb
pop
call
movl
adc
push
mov
adc
decl
inc
mov
inc
inc
inc
dec
jne
mov
xchg
imul
divb
dec
fdivs
jo
mov
sbb
or
inc
dec
jne
fisubrl
movsb
mov
cwtl
push
rolb
push
jnp
test
jmp
inc
mov
lods
push
jp
jae
adc
and
insb
cli
and
bound
inc
into
pop
mov
fisubrs
jp
loop
push
xchg
clc
mov
and
dec
push
pop
lahf
xchg
shrl
inc
mov
inc
loop
cli
rep
andl
pop
jno
aaa
or
nopl
fsubl
inc
adc
jno
js
push
mov
int3
cmp
cmp
ljmp
xor
std
and
clc
mov
add
xchg
cld
or
add
or
clc
add
loopne
or
cmp
cmp
jmp
xor
dec
sbb
mov
cmp
sbb
pop
ret
ss
ds
arpl
rcl
insl
adc
jne
es
xor
or
and
push
cs
rcll
shll
mov
push
std
in
ds
data16
and
sbb
movl
or
and
cmp
inc
fidivrl
pop
cmp
jne
sbb
js
pop
pushl
dec
and
inc
mov
cld
sbb
xchg
adc
jno
mov
inc
xor
les
lods
shll
int3
lret
sub
and
sbb
mov
movsl
cmp
mov
mov
jne
addr16
out
jle
sahf
jg
test
push
push
cmpl
adc
shlb
cmp
sbb
xchg
adc
dec
subl
ret
jecxz
push
out
xor
xchg
mov
movsl
movsb
push
sbb
add
lea
jnp
test
aaa
cmpl
andl
pop
ret
jo
testl
push
movsb
add
sub
sub
test
mov
xor
divl
mov
mov
push
loope
loop
push
add
xor
pop
in
inc
hlt
in
push
jbe
outsb
inc
sub
dec
jle
ret
sbb
jo
loope
scas
nopl
clc
rorb
in
jmp
sub
data16
adc
jge
adc
into
and
xchg
inc
mov
imul
sbb
sbb
and
fs
push
cmp
or
pusha
int
mov
add
shll
loopne
pop
xor
fimull
cltd
cmp
and
bound
xor
push
fmuls
cmpsl
iret
push
mov
outsl
inc
aam
or
mov
fistpll
inc
mov
ret
les
repz
jecxz
pushl
push
je
mov
push
push
xchg
push
cwtl
imul
in
or
push
sti
pop
mov
mov
pop
push
cmp
shrl
inc
aas
add
insl
push
orb
lea
add
pop
loope
es
jnp
loop
sti
xchg
or
sarb
cmp
sbb
sub
cmp
ret
scas
int3
sub
mov
pop
sub
push
and
or
push
loop
xor
sub
cmp
int3
mov
sti
and
cmp
jne
mov
mov
jmp
adc
pop
aaa
test
outsl
jo
fiaddl
jl
adc
mov
pop
or
xor
mov
int
pop
push
fdivl
fdivs
dec
xchg
xor
mov
jne
xor
adcb
aam
dec
push
mov
lods
cmpb
or
pop
and
and
imul
push
cmp
je
dec
hlt
decl
cmp
jl
cmp
jg
inc
jmp
xor
les
jbe
loope
xor
jne
imul
add
push
pop
inc
jo
jge
or
sarb
sbb
dec
enter
test
movsbl
clc
shll
pushl
pop
adc
addl
jle
push
inc
jp
inc
dec
jne
adc
int3
adc
push
inc
jns
fiadds
insl
pop
and
std
and
mov
cld
inc
pop
test
mov
fs
pop
idiv
inc
mov
lea
mov
ret
mov
inc
sub
insb
in
fcompl
jl
or
sub
lea
mov
pop
decl
ret
loopne
cltd
imull
lea
cltd
lea
sar
xlat
imul
loope
in
ret
lea
inc
cli
push
xchg
dec
js
sub
add
pop
call
sbb
lea
jmp
add
loop
adc
dec
pop
out
pop
mov
inc
jb
jo
xorb
adc
inc
sub
jmp
icebp
ss
addl
out
shll
jne
imul
mov
and
and
leave
call
lods
and
add
cwtl
movsl
sub
imul
movsb
fildll
or
xor
out
jbe
add
ltr
decl
jg
sbb
or
ud0
push
cmp
in
push
lock
arpl
xor
hlt
aam
push
add
or
fbstp
inc
add
mov
inc
cmp
mov
fs
cmp
jnp
sti
mov
or
vmwrite
xchg
lret
rclb
xchg
out
push
xor
push
push
jmp
pop
push
push
push
push
in
in
mov
jp
popf
dec
addr16
mov
jbe
jns
daa
insb
pop
jo
fistpl
push
sbb
mov
jmp
cmp
nop
into
stos
aaa
sahf
pop
push
pop
mov
or
loope
lret
push
pop
mov
mov
mov
aas
push
pop
push
push
jnp
icebp
add
mov
mov
rclb
stos
dec
mov
aaa
in
sti
cmp
jle
jge
cmp
jl
cmp
jg
push
jle
dec
xchg
fdivrs
adc
adc
mov
and
repnz
jle
imul
jle
pop
sub
mov
jmp
jne
ret
xchg
ret
sbb
data16
dec
ret
xor
and
jo
cmp
sub
adc
sarb
push
push
push
sbb
ret
xlat
xor
sub
adc
stc
xchg
mov
cld
fdivl
cmpsl
sub
xor
adc
call
dec
into
rcrb
push
arpl
je
mov
ret
jg
jl
fdivs
inc
or
bnd
outsl
aas
dec
xor
jg
xor
es
xchg
xor
lock
push
push
push
xor
add
jmp
lock
lea
add
push
sub
rolb
lret
add
movsb
sub
adc
fwait
test
push
lea
rclb
lods
sbb
sbb
push
mov
and
xor
scas
inc
and
add
cmp
mov
or
repnz
jbe
ret
orl
inc
mov
mov
sti
leave
mov
fldt
xor
jns
or
push
adc
pop
ja
pop
shrb
mov
adc
and
add
adc
cltd
xor
pop
outsl
imul
mov
xchg
adc
inc
add
or
jl
fsts
push
leave
decb
dec
adc
add
test
ds
add
or
pushl
mov
popf
shrb
cltd
cld
test
and
xchg
ljmp
icebp
decl
in
push
dec
inc
inc
fldcw
cmpsl
or
adc
add
icebp
mov
cmp
jne
push
pop
lock
fstp
pusha
mov
mov
and
add
iret
or
in
test
sti
dec
mov
test
inc
pop
test
inc
jge
push
push
push
add
or
adc
inc
loopne
fdiv
fiaddl
cltd
fs
ja
ss
sbb
sbb
sbb
sbb
mov
xor
pop
inc
jg
mov
inc
push
xor
jmp
ljmp
or
lods
lock
xor
add
jb
cmp
or
cmp
mov
dec
out
dec
pop
fsub
sbb
lods
xchg
sub
pop
ret
push
fisttpll
shlb
sahf
sub
movsl
ss
pop
sbb
rol
sbb
pop
push
or
cmp
testb
push
dec
jns
jmp
popa
cmp
js
mov
popa
enter
adc
jle
cs
adc
push
jbe
sub
adc
inc
pusha
iret
cmp
or
lcall
pop
outsb
and
xor
ret
lahf
loope
fwait
mov
xor
mov
adc
adc
outsl
jmp
in
ror
repz
loopne
in
or
dec
test
xor
and
test
mov
ljmp
cmp
push
nop
add
sbbb
push
mov
ds
andl
push
jae
xlat
lock
jmp
ja
xchg
push
std
neg
pop
mov
inc
push
inc
testl
mov
ficoml
sahf
insl
lret
popf
cmp
pop
pushl
pop
clc
int3
push
imul
outsl
mov
ds
push
popa
ficompl
jb
cmc
aam
rolb
hlt
in
mov
leave
inc
rorl
in
jbe
push
aaa
mov
rol
sbb
cmp
push
pop
or
and
add
dec
push
xchg
aad
or
cmp
inc
push
jo
sbb
and
mov
inc
and
xor
mov
outsb
and
sub
sbb
xor
xchg
cmp
or
or
mov
mov
mov
sub
or
pop
xchg
fsubrl
in
outsb
add
out
add
cmp
jb
jg
jle
mov
je
sbb
ss
jp
mov
lcall
test
stc
in
cmp
cmpsb
cmpsb
faddl
sti
dec
sbb
mov
in
dec
sbb
std
in
sbb
pop
push
sbb
lds
ja
mov
adc
in
clc
mulb
lea
jns
jbe
dec
add
call
sub
xchg
je
pop
mov
sbb
scas
mov
xchg
out
mov
or
pop
sbb
or
icebp
xchg
xchg
push
nop
cmovne
dec
movsl
test
push
and
mov
dec
lods
mov
jg
cli
sbb
dec
inc
jb
sbb
or
xorl
loopne
add
or
in
clc
pop
fistpl
or
cmp
iret
xor
aam
fwait
mov
ljmp
lods
rol
push
or
sbb
push
sbb
leave
mov
xor
movb
das
or
and
into
pop
cmpl
inc
cmp
cmp
pop
xchg
cs
push
mov
mov
enter
mov
mov
pop
and
add
inc
sub
loopne
push
push
imul
or
xor
dec
push
dec
push
sub
push
inc
call
xor
jo
add
push
mov
push
sti
in
pop
mov
lea
pop
and
adc
or
testl
pop
jne
orl
adc
jno
adc
das
sub
cmp
or
jb
mov
push
cmp
mov
imul
jge
xchg
ficoml
imul
ret
jae
and
add
push
es
dec
sahf
mov
mov
test
sub
test
shrb
icebp
mov
or
out
dec
pusha
or
add
adc
adc
sub
ds
fxch
lods
lock
cmp
scas
jl
jge
imul
mov
andl
cmp
xor
xor
andb
mov
fs
jae
mov
sbbl
pop
adcl
cmp
test
cmp
sahf
lret
xchg
cmp
push
mov
dec
jbe
dec
rcrl
and
pop
leave
push
sbb
pusha
mov
pop
bound
cmpl
mov
xor
stos
push
ret
cmpb
or
enter
fidivl
leave
adc
lock
jno
and
jmp
push
fsubrl
cmc
enter
add
in
in
jae
add
inc
adc
cmp
xchg
pop
sbb
push
inc
mov
jmp
cmp
add
dec
adcl
popa
idivl
orb
xor
push
pop
push
xor
dec
cmpsb
iret
mov
movl
lahf
shlb
adc
daa
or
lock
jge
sbb
cmp
dec
adc
mov
lea
mov
xchg
add
pop
out
add
scas
outsb
loopne
add
orl
mov
push
ss
adc
adc
adc
mov
incl
pop
add
mov
push
sbbb
inc
mov
push
inc
incl
mov
jnp
clc
cmp
faddl
orb
out
idiv
and
or
xchg
add
inc
push
data16
push
mov
jmp
push
mov
cmp
ss
jmp
xor
loopne
addb
add
movsb
push
clc
lods
dec
inc
inc
inc
pop
je
adcb
inc
lahf
pop
and
cmpb
nop
lock
addl
xchg
mov
xor
add
cmp
popa
mov
jne
xchg
xchg
or
dec
je
sarb
cmpsl
adc
leave
or
mov
mov
scas
inc
mov
test
pop
stc
pop
inc
xlat
cmp
arpl
sub
aad
jne
cli
pop
push
sbbl
inc
les
inc
or
int
pop
dec
xor
mov
mov
jmp
ret
jo
mov
sbb
out
sbb
add
jge
addb
pop
cmpsl
subb
icebp
sub
cli
jae
les
out
lea
cmp
jb
loope
jmp
add
sub
push
push
and
mov
or
test
mov
add
jle
pop
or
jne,pn
data16
cmp
in
mov
and
sbb
js
add
mov
test
rorb
jne
insb
in
incl
mov
cmp
je
inc
inc
or
jne
repnz
mov
mov
sar
inc
push
push
lret
push
mov
adc
int3
loopne
or
das
xchg
cmp
sbb
add
cmpsl
jo
out
cmpsb
dec
adc
mov
cmp
cld
adc
inc
xor
test
cmp
inc
addb
addr16
adc
popa
adc
aam
or
sub
out
int
pop
mov
push
fiadds
inc
xor
lds
mov
adc
pushf
mov
outsb
and
dec
clc
or
add
mov
icebp
mov
test
lea
mov
xchg
add
or
or
or
fcmovbe
mov
push
and
cmp
inc
test
sbb
in
sbb
mov
or
rclb
loopne
mov
ljmp
jl
mov
push
sbb
sbb
xor
jb
jbe
shl
rorl
and
lea
das
mov
andb
and
pop
addb
adc
cmp
jb
mov
cmp
fnstsw
cmp
mov
jecxz
xchg
ljmp
je
mov
push
or
or
aaa
push
call
std
push
add
clc
add
out
add
push
loopne
scas
xorb
pusha
mov
xchg
nop
pop
js
and
push
cld
outsb
test
sti
fiaddl
hlt
inc
adcl
jl
and
jne
je
xorl
mov
push
orb
jmp
xchg
adcl
add
dec
mov
cmc
push
roll
ds
sub
int3
aaa
xor
ds
mov
add
jmp
push
cmpsl
xor
add
or
je
and
into
mov
movl
jl
loop
jmp
scas
pop
notb
xor
adc
xlat
jle
mov
or
jae
mov
mov
addl
icebp
dec
and
iret
testb
push
sub
andb
lcall
hlt
and
push
xchg
js
sbb
outsb
inc
mov
sahf
mov
push
jmp
insb
push
lea
loopne
cld
add
cmpsb
jge
adc
jle
ret
shrb
aad
jge
pop
fadds
pop
aas
cmp
xor
dec
ret
std
test
or
sahf
add
add
xor
push
sub
pop
cmp
cmpsb
testb
push
loopne
sbb
lea
mov
push
xchg
mov
push
pop
mov
mov
dec
xchg
add
xchg
xlat
adc
xlat
fcoms
pop
xlat
add
sahf
shl
loopne
fsubr
jne
js
cltd
and
push
add
add
xor
push
dec
mov
leave
into
arpl
jb
xor
cmp
cltd
mov
push
sbb
cmp
or
pop
adc
jmp
jbe
sub
pop
or
testl
enter
or
pop
dec
or
lds
daa
push
xchg
mov
popf
pop
mov
adc
cmp
mov
xchg
sar
aaa
or
mov
mov
mov
or
not
mov
test
push
fnsave
adc
sbb
add
out
sbb
cmove
dec
lock
xor
and
pop
mov
test
adc
adc
cmp
loop
lock
not
push
rcrl
insb
in
pop
mov
fstps
inc
sbb
stc
std
pop
cmp
pusha
or
jns
jns
sub
sub
pop
push
lods
repz
mov
add
push
pop
sbb
push
mov
add
cwtl
ret
cmp
and
sahf
inc
or
inc
push
fcmovb
inc
sbb
jb
fsubrl
push
aas
or
push
mov
mov
push
insb
pushf
nop
xchg
add
test
push
pop
lea
sub
adc
adc
mov
xlat
into
insl
shll
adc
hlt
jmp
aad
xchg
push
int3
imul
xchg
stos
push
hlt
insl
inc
mov
inc
lods
sbb
push
jl
call
call
mov
xor
sbb
aad
dec
decl
cmp
jl
jle
and
mov
js
in
icebp
xchg
negb
push
push
mov
adc
movl
scas
adcl
cmp
aam
movsb
fcoml
testl
or
int
out
add
ret
cmp
pop
aam
or
int3
inc
sbb
nop
sbb
leave
mov
movb
cmp
mov
sbb
lods
and
pop
xchg
inc
mov
dec
clc
jmp
push
imul
clc
sbb
jne
push
aaa
mov
or
xor
mov
jl
dec
mov
or
mov
or
add
dec
pop
das
adc
jmp
int3
call
add
loope
icebp
es
lods
lods
daa
cmp
adc
pop
push
dec
xchg
jle
repz
sub
mov
add
xchg
lret
test
mov
fs
mov
xchg
jb
nop
sub
cs
or
jmp
xor
adc
add
push
testb
mov
outsl
jge
aas
mov
add
fistl
lret
cwtl
and
or
add
mov
cmpsl
or
cld
push
xor
inc
out
lods
rep
push
shlb
stc
cmp
xor
mov
pop
je
loop
ret
dec
fistpl
sub
add
lods
pop
stos
cmpsl
std
addl
cmp
roll
and
rorb
dec
sbb
cmp
inc
xor
inc
aam
das
inc
fisttpl
jno
push
dec
or
test
jbe
mov
ljmp
mov
jb
inc
add
cmp
jb
in
and
int3
mov
movsb
daa
add
and
cs
clc
or
and
call
and
xchg
loopne
cmpb
sbb
hlt
lahf
push
adcl
jle
jg
out
adc
push
push
sub
pop
leave
inc
and
xchg
pop
sub
sbb
xchg
cli
mov
shlb
push
pop
mov
or
movsl
push
mov
inc
dec
imul
movsl
hlt
mov
popl
mov
adc
negl
call
rolb
mov
push
adc
ja
lcall
adcl
subb
jecxz
mov
mov
cld
sbb
leave
xor
out
into
shlb
imul
bswap
insb
adcb
push
push
and
inc
and
dec
jle
sar
push
andb
jmp
or
sbbl
mov
push
xchg
mov
adc
jmp
xchg
cmpsb
fadds
out
outsl
mov
sub
cld
shr
aas
inc
cld
jnp
jp
add
fldcw
sbb
dec
or
roll
xor
sbb
mov
fcmovnbe
clc
clc
push
cld
rclb
mov
test
jne
sar
je
lds
sub
mov
lds
jge
dec
or
mov
je
cld
sbb
shr
lea
shll
pop
mov
and
sti
das
mov
lea
xor
inc
cmp
pop
add
push
mov
or
add
pop
outsl
push
jg
and
push
or
aas
pop
shr
pop
clc
and
into
push
jecxz
add
incl
xor
lret
cmp
jbe
mov
mov
imul
cltd
jl,pn
and
cmp
je
pop
ss
jno
mov
fists
mov
shr
not
and
sbb
and
xor
sbb
pop
mov
push
jle
pop
dec
cmpsb
cltd
adc
or
addr16
lods
andl
mov
ficomps
lock
mov
out
pop
cmp
or
or
mov
dec
pusha
mov
mov
inc
mov
js
mov
mov
push
xchg
lods
add
call
inc
dec
or
xchg
sbb
sub
lods
dec
push
and
ljmp
insb
cli
sbb
insb
decl
xchg
inc
int
clc
inc
mov
dec
mov
cli
fldl
add
scas
in
gs
pop
jp
adc
aas
gs
mov
testl
adc
andl
popa
sub
dec
inc
adc
inc
jbe
mov
and
jmp
and
push
pop
int
push
mov
arpl
js
in
push
iret
ljmp
les
push
loopne
jp
mov
adc
mov
pusha
pusha
xchg
add
push
mov
pushf
adc
imul
lock
rclb
call
outsl
push
or
xor
ror
cmpsl
xchg
out
js
add
test
cmp
push
mov
inc
adc
shlb
stos
xor
pop
ret
movsb
adc
int
jmp
orl
test
add
mov
adc
xchg
push
mov
shlb
fsub
xchg
add
inc
xchg
stc
mov
dec
stc
ljmp
incb
pop
mov
inc
mov
inc
dec
jne
sub
push
push
cmp
adc
test
imul
lock
xchg
jns
pop
cmp
call
cli
ja
sub
shr
sti
sbb
sub
inc
orl
orl
or
mov
push
out
inc
inc
cld
lock
call
adc
add
icebp
mov
mov
cmp
jb
adc
sarl
inc
popf
mov
negl
inc
inc
mov
lock
push
mov
jne
or
clc
aad
js
lds
not
and
ds
inc
les
adc
add
jns
movsb
xlat
sub
add
shr
jb
shld
cld
and
icebp
stos
mov
add
lds
adc
mov
test
lods
daa
loop
inc
jp
pop
cmp
ljmp
add
mov
addb
int3
push
pop
inc
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
aam
fdivrl
or
push
jns
sbb
movsl
inc
sub
add
mov
mov
punpcklbw
fiaddl
mov
fstpl
add
pop
push
lea
jbe
pop
lcall
jle
mov
jns
cmpsb
imul
xor
push
pop
lcall
iret
mov
pop
add
and
and
cmp
test
xchg
xor
add
xchg
mov
mov
push
mov
sub
sahf
test
hlt
jl
push
inc
or
pop
add
inc
dec
insb
pop
xor
push
pusha
push
cld
push
sar
dec
jp
movsb
decb
or
sbb
inc
cwtl
sarb
xor
cmp
ss
jo
dec
je
filds
mov
call
ja
imul
mov
adc
adc
fimull
xor
adc
mov
mov
sbb
xorb
inc
and
mov
push
lods
pop
sbb
bswap
mov
out
cmp
pmulhuw
scas
or
dec
insl
sub
mov
add
inc
sarl
cs
insb
and
add
lods
pop
and
inc
cmp
jecxz
add
inc
into
call
out
subl
jmp
in
push
imulb
dec
or
push
fildl
and
or
mov
or
fdivs
push
jne
mov
jg
jne
jmp
in
in
data16
lock
aaa
jnp
sahf
outsb
arpl
adc
fsubs
daa
jo
addl
dec
leave
lock
xor
out
or
mov
mov
les
push
ds
insb
clc
loope
mov
jl
and
iret
xor
dec
add
add
mov
rcrb
mov
jmp
pop
push
scas
out
repz
mov
outsl
shrb
into
jne
mov
push
pop
outsb
leave
inc
test
or
xor
mov
sub
icebp
dec
push
push
cmp
inc
dec
xor
test
push
adc
iret
js
dec
dec
push
dec
cmp
mov
fildll
into
in
and
mov
decb
jne
dec
or
or
sub
dec
mov
addr16
pop
pusha
dec
bound
dec
jmp
and
and
imul
je
mov
inc
mov
pop
lock
push
or
das
pop
xor
adc
xor
sub
jge
inc
or
jmp
push
or
testl
inc
insl
and
in
mov
pop
inc
mov
orb
jmp
call
add
lcall
sbb
mov
lea
xchg
cs
sub
cmp
adcb
pop
add
shlb
leave
es
xchg
into
mov
inc
mov
rorb
fisttps
mov
sbb
inc
mov
pop
inc
jge
push
inc
cmp
inc
inc
aam
push
push
inc
cmp
dec
pop
mov
xor
or
jl
data16
pop
movsl
jo
outsb
ret
repz
mov
jo
mov
pop
mov
ljmpw
je
jae
mov
pushf
pop
ret
sbb
jae
rolb
xor
mov
fmuls
push
hlt
pusha
push
pop
cmp
inc
push
js
cltd
idivb
pop
sub
pop
lock
dec
jb
mov
leave
mov
fiaddl
mov
sub
cmp
loopne
push
imul
sti
add
gs
inc
fisubl
mov
outsl
sub
cmp
enter
cmc
shlb
das
lock
ljmp
mov
mov
adc
inc
push
xchg
xchg
enter
adc
subb
add
repz
mov
jle
mov
jne
push
dec
loope
and
or
adc
add
cmp
stos
shlb
aas
sbb
inc
lcall
push
inc
je
or
adc
jmp
cmp
push
adc
int3
push
inc
cmp
sub
or
cmp
or
mov
adc
fistl
or
mov
adc
or
mov
iret
pop
jns
mov
or
inc
ret
add
pop
xchg
adc
push
shlb
pusha
mov
cmp
and
push
xor
lock
adc
ja
and
or
inc
jmp
pop
dec
pop
push
out
movl
dec
adc
dec
cmp
cmc
mov
pop
inc
cmp
jne
or
adc
sbb
jge
inc
jmp
popf
out
pop
je
lods
mov
sbb
lcall
popa
adc
sbb
inc
and
inc
repz
pop
sub
adc
clts
pop
ds
add
push
test
pusha
xorb
ljmp
jle
push
push
pop
div
mov
aas
jle
dec
ret
sub
adc
jbe
mov
cld
pop
insb
adc
adc
repz
or
and
inc
jo
ret
or
fiadds
pop
jno
push
add
hlt
mov
pop
push
hlt
xor
xlat
pop
lret
iret
jecxz
daa
and
adc
sub
call
cmc
je
mov
nop
imul
push
jo
jae
subb
arpl
icebp
cld
and
dec
cmp
push
hlt
cmp
je
movl
sbb
sbb
mov
inc
xor
or
shl
data16
or
push
adc
dec
sbb
mov
sbb
pusha
sub
sti
scas
popa
popa
pop
jbe
sahf
xchg
cmpsb
loop
inc
gs
cmp
or
add
push
enter
add
xor
push
push
imul
cmp
fistl
dec
cs
jno
les
movsl
loope
mov
mov
xchg
push
gs
xor
fs
jle
test
ja
enter
shrl
cmp
je
movl
sbb
call
fsubs
lds
sbb
jecxz
add
dec
add
and
lock
ds
inc
and
or
pop
pop
sub
push
ficomps
mulb
jl
xor
ljmp
andl
orl
cmp
into
cli
adc
daa
lea
push
cmpsb
adc
dec
pop
pop
pop
adc
sbb
bound
mov
mov
popa
andl
push
shll
aad
xor
cmp
aam
push
xlat
test
movsb
ljmp
ljmp
mov
sbb
jg
add
add
add
test
sbb
adc
sbb
stos
stos
lods
lcall
ja
ja
mov
push
divb
aas
push
stos
jae
mov
fidivrs
mov
rcrb
push
sbb
add
js
lret
jmp
sbb
pop
sbb
mov
mov
cmp
mov
cltd
inc
push
mov
push
inc
add
push
and
pop
or
adc
lcall
jns
jno
and
gs
lods
movsb
sbb
in
mov
adc
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
movsb
xchg
xchg
sbb
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
add
dec
pusha
fs
dec
jo
js
in
pop
pop
inc
aad
adc
dec
xor
and
mov
xchg
cwtl
pushf
shlb
dec
mov
jno
mov
mov
push
cmp
adc
add
inc
mov
je
dec
and
dec
dec
imul
data16
dec
adc
imul
push
movsb
pusha
inc
lcall
or
and
fs
psrld
cmp
add
insb
pop
ret
adc
adc
js
and
ret
cmp
loop
pushf
sbb
cmp
je
inc
dec
jne
cmp
mov
jle
sbb
sbb
xchg
lock
add
scas
ret
loope
pop
stos
add
jmp
mov
stc
push
push
jp
push
xor
xchg
lock
mov
dec
leave
adcl
enter
int
mov
jne
aad
lods
pop
ja
mov
jmp
hlt
xor
adc
test
or
inc
test
jecxz
iret
push
jmp
sbb
inc
shlb
add
fimuls
pusha
bound
push
mov
pop
sbb
mov
push
cwtl
or
and
mov
loopne
icebp
lea
repz
out
jns
popa
mov
shrb
hlt
movsl
sbbb
xor
sbb
dec
outsl
daa
popa
xchg
inc
pop
ret
je
xchg
adc
adc
dec
cmp
sbb
sbbb
cmp
jnp
adc
xchg
jp
ss
shll
cmp
push
push
lea
jmp
mov
lea
jnp
aad
push
pop
fdivr
sub
push
push
loope
sub
xchg
adcl
sarl
or
add
adc
mov
add
rclb
xorb
dec
or
add
adc
pushl
or
ret
mov
fistps
lret
sbb
sti
or
out
testb
add
shll
fs
jl
cmp
lret
mov
incb
rep
jbe
inc
mov
inc
xor
lock
mov
mov
mov
jmp
xchg
sub
je
or
je
dec
je
aaa
popa
xorb
xchg
out
scas
mov
mov
mov
sbb
adcl
pop
pop
xchg
pop
add
pop
and
in
or
test
rcrb
sbb
or
mov
aam
inc
pusha
sbb
jne
sbb
inc
addb
and
fsubrl
scas
rcll
add
sbb
jge
pop
sbb
pop
mov
xchg
movb
jmp
dec
adc
mov
mov
sbb
push
push
sbb
or
xor
repnz
add
add
aaa
xor
mov
jo
sub
adc
fs
jno
sub
and
sbb
xor
arpl
cmp
mov
das
xor
sub
into
jo
pop
sbbl
arpl
and
mov
jp
je
fimull
add
pop
aas
iret
cmp
repnz
sub
push
adc
xlat
push
sbb
and
push
mov
push
cmp
and
mov
mov
mov
jnp
ja
pushf
or
cmp
inc
into
xchg
test
sbb
sub
scas
push
stos
aam
lret
movsl
mov
or
in
and
xchg
add
push
idivb
jne
orl
cmp
xor
and
ds
adc
cmp
adc
cld
aas
repnz
xchg
jne
les
roll
je
adc
dec
into
jl
popa
xchg
lods
push
lcall
shl
sti
add
jmp
or
js
push
test
dec
xchg
das
mov
ds
mov
sbb
jne
rcll
iret
adc
mov
jle
and
dec
mov
xchg
push
mov
add
jo
sub
xchg
mov
pop
xor
jbe
push
pop
xor
fs
les
in
nop
ss
or
cmp
out
jb
inc
test
mov
xchg
sbb
or
mov
mov
cld
ja
orl
dec
out
cmp
mov
fcomps
mov
or
ret
aad
jne
push
mov
mov
dec
cmp
out
xor
scas
or
push
dec
jne
loopne
test
push
cs
std
jl
dec
sub
xor
push
add
push
loope
mov
fmuls
sbb
and
dec
insl
cli
xchg
pop
pop
sbbb
adc
add
sahf
out
mov
jge
push
add
sti
faddl
mov
dec
jo
mov
lret
sbb
outsl
ret
lahf
pushf
pop
nop
sbb
dec
inc
jno
pop
es
hlt
pop
enter
adc
and
loopne
adc
jae
add
pop
pop
scas
jne
adc
ret
test
sub
das
rorl
leave
push
mov
test
push
sub
add
mov
ret
jae
jmp
pushf
loop
shll
dec
je
push
jmp
pop
and
push
cmp
shll
pop
sbb
mov
in
rorl
jle
stos
and
jl
fldl
cmp
jbe
mov
ds
or
cmp
cmp
inc
sbb
or
pop
or
or
je
and
std
cmp
jae
sub
add
fcomip
or
les
jecxz
push
shr
add
fwait
push
mov
inc
cli
cmp
cs
pusha
sbb
xchg
or
cltd
jmp
xchg
sti
sbb
insl
in
insl
dec
adc
jl
push
rcrl
imul
jo
inc
mov
jp,pn
insl
push
inc
or
and
pop
pusha
fs
out
pop
xchg
add
in
dec
and
inc
call
and
test
cmp
inc
dec
jle
cmp
sub
inc
ss
je
imul
inc
xchg
mov
ret
adc
jg
cwtl
add
negb
fmuls
test
into
in
push
push
popf
divl
pop
jg
int3
sbb
outsb
sbb
inc
adc
mov
cmpsb
jmp
ficompl
jae
inc
add
add
inc
divb
pushf
mov
sub
and
pop
imul
pop
adc
add
outsb
mov
shlb
push
adc
or
enter
mov
leave
or
out
inc
inc
mov
sub
jo
xchg
jecxz
or
jno
adcl
outsb
out
pop
adc
aad
shlb
cs
mov
in
rorb
cmp
rorb
je
mov
push
or
jne
mov
push
jge
lods
xchg
sbb
inc
cmp
adc
movsb
sbb
dec
lock
inc
fists
mov
inc
xchg
or
mov
je
sub
mov
push
jg
adc
adc
adc
clc
mov
sub
or
addr16
pushf
cld
adc
jge
aas
outsb
cmpsb
lods
push
mov
cmpsb
jle
cmpl
jl
jle
sbb
sbb
mov
mov
out
xchg
aas
xor
loopne
adc
mov
inc
jmp
cmp
lods
out
push
push
sub
inc
rolb
mov
test
add
cmp
sub
or
ljmp
cmp
je
cmp
lods
repnz
sub
adc
or
adc
out
inc
dec
add
add
lds
or
lock
lret
or
test
sahf
movsbl
sub
jmp
test
jnp
mov
sub
cmp
cs
stc
pop
add
ror
dec
adc
sbb
jb
movsb
cmp
jbe
pop
inc
stos
add
add
pop
adc
fsts
cmc
mov
xor
or
pop
inc
lods
and
ss
orl
push
add
cmpsb
xor
jge
pop
xchg
loope
jo
xlat
mov
jnp
mov
or
in
pop
mov
sbb
loop
cltd
cmpsb
aas
xchg
hlt
mov
or
xor
out
jle
push
or
jecxz
mov
add
jge
xor
cmc
jle
xor
add
and
arpl
movsb
in
jp
iret
push
push
or
inc
es
dec
mov
gs
mov
popf
push
push
in
add
sub
inc
mov
cld
and
sbb
mov
dec
cmp
push
dec
sbb
pop
mov
jg
or
jne
sarl
testb
push
xlat
add
and
inc
cwtl
iret
sbb
push
push
mov
imul
inc
and
add
mov
notb
xchg
jmp
cmpb
ret
daa
inc
das
adc
lcall
jge
or
sbb
jg
mov
jno
or
adc
adc
add
movb
je
jg
xor
imul
sub
std
add
adc
mov
push
jno
cmp
push
push
push
push
sbb
and
hlt
jp
pushf
outsl
pop
pop
mov
mov
les
or
cli
or
or
jb
inc
pushf
lock
ljmp
leave
je
xchg
mov
mov
mov
mov
into
es
push
je
sbb
push
mov
xchg
out
adc
mov
ja
add
cmp
adc
cmp
jne
dec
inc
or
adc
fisubrl
mov
jb
neg
mov
into
leave
lock
adc
add
es
cmp
jmp
dec
clc
dec
xchg
cmp
stc
je
test
cmc
push
lahf
lea
and
add
inc
gs
pusha
movsb
xor
sarl
jmp
dec
cmpb
pusha
mov
cmc
dec
and
mov
mov
sub
ficompl
fcompl
cmp
mov
jno
cmp
mov
cmp
add
dec
jge
jle
fiaddl
es
jle
dec
mov
sbb
xlat
jle
add
mov
mov
and
adc
subl
jl
adc
stc
stc
add
push
icebp
jae
sbb
jne
jbe
std
and
add
hlt
dec
sbb
jo
ret
xlat
jne
jnp
adc
pop
cltd
mov
cmp
sbb
in
jmp
cmc
sbb
or
movsb
sub
ljmp
ds
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jg
jne
jmp
pop
sbb
and
in
pop
mov
ss
inc
add
ljmp
iret
push
xor
loope
into
push
jbe
push
push
or
les
pop
dec
aam
test
xchg
lock
mov
repz
sub
inc
pop
repz
or
or
mov
pop
xlat
mov
leave
test
and
loopne
mov
lods
test
add
cmp
fmull
inc
popf
fdivrl
orb
jb
sahf
cmpl
xchg
cld
outsb
aad
pushl
sarb
sti
test
push
push
mov
js
ljmp
jb
inc
loopne
push
loopne
pop
adc
jle
arpl
enter
sbb
xor
adcb
mov
lret
sbb
rclb
fcoml
daa
fcomp
imul
dec
sahf
sbb
clc
incl
xor
sbb
inc
in
and
mov
movsb
ss
pusha
push
pop
mov
cltd
enter
xchg
adc
and
pushf
sbb
mov
push
les
adc
push
nop
push
repnz
push
roll
mov
test
dec
jmp
inc
adc
push
push
push
ja
aas
scas
inc
ja
jle
cs
lahf
pop
adc
rolb
imul
sbb
xlat
aaa
pop
sub
add
mov
add
aam
fsts
lods
adc
insb
pop
repz
fsts
xor
mov
mov
or
inc
push
cld
add
push
js
mov
dec
jbe
movsb
lock
push
xor
add
sbb
jne
push
sub
and
roll
sbb
sub
outsb
jle
mov
cmp
pop
test
sub
push
inc
pop
jbe
ss
les
adc
mov
test
add
addl
and
sbb
repz
dec
rcl
pop
or
inc
neg
mov
je
mov
jg
sbb
enter
ret
inc
mov
add
cs
add
call
pop
jl
jb
xchg
test
jbe
or
int3
cmp
fldt
jns
sbb
mov
nop
cmp
repz
and
stos
dec
xor
push
jmp
adc
loop
jge
filds
push
jmp
inc
add
mov
sub
sub
js
sub
xchg
sbb
xor
or
mov
call
push
sbb
dec
je
leave
inc
js
scas
mov
inc
sar
mov
pusha
fcompl
xchg
mov
pop
icebp
or
jg
add
sub
add
mov
inc
cmp
and
and
push
xor
stos
or
and
jo
popa
push
and
add
dec
in
or
sub
mov
push
loopne
xor
xor
mov
adc
jmp
ljmp
in
mov
or
mov
cmp
cmp
cmp
jp
shl
inc
xor
shlb
decb
pmaxsw
rol
loope
or
push
sti
test
or
or
sbb
insl
andl
ds
push
fmul
xchg
mov
push
jmp
jns
xchg
sbb
or
decl
jbe
add
cmp
loopne
rorb
pop
es
iret
push
lret
or
es
shl
push
adc
cmpl
lret
mov
nop
shr
fs
xor
jo
and
push
sbb
or
dec
das
aam
out
jne
lods
call
inc
cld
ret
and
pop
sub
cmp
je
mov
cmp
jnp
jb
adc
cmp
addr16
outsb
or
cmpsb
xor
mov
out
and
mov
jb
fsubr
add
movsb
jb
push
clc
sbb
dec
and
push
mov
into
jns
ds
jle
add
dec
or
push
xchg
ret
fadd
fldt
rorl
and
jb
outsb
cmpsb
int3
pop
jp
push
push
mov
cmp
mov
pop
ljmp
xor
mov
in
dec
xchg
rorb
mov
ja
pusha
pop
cwtl
xchg
aas
popf
lods
inc
cmpsb
fs
lods
lods
les
mov
sbb
rcl
pop
xlat
aam
push
inc
push
mov
mov
into
push
outsl
enter
les
xor
clc
inc
cs
pushf
insl
cmp
andl
push
lds
push
insb
stc
repnz
mov
jb
or
mov
inc
and
aam
lods
xorb
add
cld
xor
jmp
mov
mov
aam
movsb
lahf
mov
enter
das
daa
lods
mov
sti
jecxz
in
jg
dec
call
into
add
pop
add
aaa
pop
dec
imul
dec
in
pop
mov
or
or
xor
nop
arpl
hlt
int3
jnp
and
int
add
push
xchg
mov
add
add
bound
add
fwait
in
add
push
add
and
insb
outsl
arpl
imul
add
add
mov
push
aaa
je
xor
inc
jb
dec
jae
pop
inc
cmp
inc
push
jg
inc
push
jne
jae
inc
dec
dec
inc
push
dec
jbe
jne
outsb
jb
dec
push
jo
push
je
push
decl
pop
dec
push
insl
dec
jne
outsb
push
inc
push
jbe
imul
push
jp
insb
push
fs
push
push
ljmp
dec
pop
inc
dec
inc
pop
push
dec
imul
push
js
push
jns
push
imul
decl
inc
jb
push
dec
push
imul
dec
pop
outsb
inc
push
pop
push
js
pushl
fs
push
push
jbe
jno
inc
jb
bound
push
insl
dec
js
jno
outsb
dec
push
jbe
ljmp
pushl
arpl
addr16
inc
jo
inc
insb
push
jne
jo
dec
push
popa
jne
dec
imul
jo
div
outsb
dec
dec
dec
dec
int3
push
push
arpl
mov
fildl
mov
inc
jp
popa
pop
dec
fs
inc
dec
push
pusha
ja
fiaddl
cld
jg
inc
push
inc
popaw
outsb
ja
jno
insl
add
jns
fidivrl
fistps
ja
outsl
push
inc
inc
popa
imul
fs
push
insb
jne
loope
fldt
dec
push
pop
outsl
dec
add
insb
inc
push
pop
inc
js
jne
push
jne
jg
mov
dec
push
bound
insb
popa
cmp
dec
jno
push
dec
dec
push
dec
je
dec
mov
je
push
inc
insl
jbe
inc
dec
push
push
push
dec
ficoml
push
sbb
inc
pop
clc
idivb
push
dec
push
push
push
gs
inc
pop
dec
mov
push
inc
dec
insl
mov
push
popa
jns
jne
push
ja
je
jo
pop
ljmp
mov
pop
dec
data16
dec
insl
pop
loop
push
push
pop
inc
arpl
outsl
dec
jo
adc
gs
push
inc
inc
imul
dec
outsl
inc
jno
sbb
mov
insl
inc
gs
xor
js
xchg
dec
imul
popa
adc
pop
pop
pop
lock
pop
inc
pop
push
jo
cmp
jns
pop
sti
jg
fisttpll
test
pop
je
inc
push
dec
inc
push
bound
imul
and
outsl
pop
mov
and
dec
dec
arpl
inc
imul
dec
addr16
dec
push
inc
adc
js
sub
push
sub
add
inc
jb
push
pop
lods
mov
aas
dec
jne
gs
aaa
aas
fisubrl
push
inc
int
mov
fmull
cmpsl
popf
mov
push
cmovl
ret
mov
jae
or
pop
add
xchg
testl
jb
pop
lds
lods
das
inc
and
ja
dec
insb
in
pop
jbe
cs
and
outsb
jmp
jmp
data16
cs
push
pop
ja
outsb
insl
popa
pop
add
adc
ja
data16
out
insl
inc
mov
aaa
xorb
sub
je
test
lods
inc
mov
fildl
insb
xor
int
imul
push
mov
pusha
leave
jmp
jmp
jo
repnz
pop
dec
push
push
push
jb
fcom
inc
les
pop
jnp
fldt
incl
cmp
inc
ss
sub
cmp
aaa
aaa
sub
add
mov
xor
inc
aaa
inc
jge
clc
jo
push
pop
pop
add
add
add
lds
jp
inc
adcl
ds
or
sbb
inc
jo
add
imul
and
arpl
pop
fs
orl
inc
push
movl
jg
insb
and
and
add
dec
add
add
add
add
or
pop
and
gs
jl
cmp
pop
inc
psrld
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
mov
clc
aas
inc
inc
inc
inc
outsb
inc
dec
call
dec
pop
push
adc
pop
ret
mov
pop
pop
pop
pop
pop
pusha
popa
bound
addr16
imul
lcall
jo
jb
jne
ja
jns
jnp
jge
jg
cmp
loope
add
sub
sub
dec
add
inc
scas
in
test
mov
add
or
lods
stos
mov
and
ss
xchg
push
or
or
test
pop
adc
mov
add
aaa
add
pop
adc
and
imul
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
or
loope
addb
and
decl
aas
pop
pop
add
push
mov
pushl
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
aaa
lcall
dec
popa
outsb
inc
bound
jb
jo
or
dec
add
inc
jne
fs
jmp
gs
arpl
jbe
xchg
jb
mov
sub
js
je
xchg
gs
insl
add
mov
jb
add
add
push
jb
outsb
je
dec
adc
stc
insl
and
jb
or
adc
push
push
and
inc
es
std
add
inc
and
push
ss
adc
call
incl
and
jo
imul
xor
je,pn
gs
jo
and
insb
outsl
es
push
sub
and
bound
jns
imul
cmpsb
insb
jns
or
cmpb
outsb
je
arpl
into
insb
jae
sbb
xor
and
insl
and
imull
insl
inc
cs
mov
xor
mov
pop
rol
mov
rolb
les
das
fmul
stos
out
insl
bound
and
xchg
and
rcr
sti
xchg
jbe
dec
mov
sbb
jp
xor
pop
es
cmp
push
and
je
and
mov
ds
gs
popf
jb
je
outsl
mov
cmp
sbb
daa
sub
dec
imul
insb
jb
or
dec
pusha
push
fwait
andb
mov
sti
outsb
clc
add
inc
xchg
sub
not
pop
lret
xor
int3
or
or
push
lcall
data16
popa
pop
cmp
gs
jo
cmpsl
jns
push
fistps
push
shlb
popf
xor
orb
popa
sbb
add
add
or
outsl
inc
ds
cmpsb
outsl
ss
fs
cmp
xor
stos
je
and
xor
stos
jbe
pop
push
cmp
mov
shll
mov
out
sarl
jle
outsl
push
or
pop
scas
xor
lcall
bound
push
inc
xor
nop
aaa
insl
in
ljmp
adc
imul
or
imul
push
jne
jmp
push
push
push
leave
nop
mov
mov
insl
imul
xor
cmp
xorl
add
sub
and
pop
or
inc
mov
jne
push
mov
jae
xor
fmull
jo
sub
test
cld
pusha
stos
xor
push
sub
lret
inc
sub
xlat
and
jmp
pop
xchg
mov
add
cmp
sub
jmp
out
gs
dec
pusha
aaa
lods
and
dec
cmp
out
add
add
xchg
out
xchg
lea
mov
mov
adc
lds
cmp
cwtl
push
scas
pop
jbe
shl
scas
dec
bound
mov
shrb
inc
ss
movsb
and
adc
shrl
arpl
inc
xor
mov
cmp
nop
xchg
pop
arpl
daa
daa
pop
cwtl
push
or
mov
push
pop
mov
arpl
jo
cmp
rcll
lcall
push
push
in
mov
sub
pusha
inc
jbe
push
shl
jnp
lahf
fs
and
xor
stos
int
dec
mov
popl
cmp
inc
and
gs
and
shll
es
dec
lahf
into
jmp
inc
xchg
or
mov
pop
pop
pop
push
push
jae
jo
pop
in
cmp
cmp
mov
sbb
imul
js
pop
ja
mov
mov
loopne
inc
or
mov
push
dec
testl
insb
jne
repnz
je
outsb
pusha
bound
fisttps
xor
mov
mov
pop
jg
jb
or
rorb
fistpll
inc
adc
lods
sbb
xor
jg
popa
cmp
rorl
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
cmp
mov
pop
pop
cmp
cmp
add
jnp
negl
push
sub
sahf
mov
addr16
jle
sub
cltd
jnp
cmpsl
sub
push
push
cmp
add
addr16
cmpsl
jle
add
sub
sub
into
jmp
sub
mov
sbb
and
cmp
and
add
xchg
dec
pop
pop
test
addr16
cltd
push
scas
sbb
push
jb
imul
dec
fdivl
xor
push
insb
mov
cld
sbb
xor
out
adc
ss
jo
sub
push
movsb
jl
out
sub
fs
push
inc
cmp
mov
or
add
stos
cmpsl
stc
cmp
mov
mov
int
mov
push
call
sahf
out
int3
enter
sahf
sarb
jns
test
mov
out
xchg
nop
mov
test
jns
out
insb
push
jns
out
push
push
inc
cmp
out
sahf
xor
add
mov
cmp
mov
jns
out
or
mov
jns
out
jo
pop
xor
repz
sub
adc
mov
repz
pop
xor
mov
push
mov
aas
insl
mov
cmp
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
push
dec
push
inc
test
adc
sub
gs
pop
dec
ret
dec
mov
mov
hlt
jne
or
nop
mov
xchg
outsb
gs
cmp
xor
push
push
push
filds
out
into
mov
xchg
jns
jg
addr16
popa
hlt
int3
pop
add
data16
ss
daa
push
clc
sbb
daa
shlb
mov
jae
sahf
dec
sahf
jbe
je
pushf
dec
inc
aas
add
pop
cli
jp
lea
outsl
ja
cmp
push
inc
mov
cmpsb
jb
dec
fcmovnbe
dec
loopne
ret
ss
inc
arpl
push
sub
daa
pop
lea
jo
into
mov
js
loopne
and
inc
push
ljmp
fisubrl
mov
push
test
iret
in
dec
cltd
adc
mov
adc
lock
xchg
jl
and
add
push
mov
add
repz
das
or
scas
cmp
popa
cmp
dec
add
push
add
push
je
inc
inc
out
sub
push
into
aaa
push
outsl
fstp
xchg
mov
cmpsl
ja
fdivs
adc
lahf
das
test
int3
aam
mov
mov
jl
shl
sbb
mov
push
xor
fisubrl
fcoms
pop
inc
mov
jae
int
xchg
adc
fs
add
adcb
negl
xor
daa
add
push
pop
leave
jae
rcrb
nop
iret
test
adc
sub
lds
insb
xchg
clc
push
call
int
fildl
jbe
pop
push
andb
mov
iret
repz
loopne
or
jns
push
js
out
or
jbe
nop
lcall
mov
xor
dec
data16
aas
pop
mov
dec
mov
fdivl
mov
cmpsl
or
clts
jg
cs
dec
scas
sbb
xchg
out
add
xor
mov
aaa
iret
sarb
or
mov
jb
mov
les
add
iret
es
dec
repz
add
movl
xchg
movl
inc
cs
xor
aaa
inc
push
inc
les
out
aas
cwtl
movl
ds
imull
int3
dec
add
mov
aaa
or
add
and
enter
adc
cmpsb
xchg
push
lahf
sub
pop
cwtl
or
push
pop
pop
jb
aam
dec
pusha
mov
fcmovnu
outsb
leave
rorb
daa
push
aas
jmp
mov
rolb
push
inc
in
bnd
mov
inc
aam
pop
inc
mov
xchg
pop
jb
aas
mov
adc
daa
or
iret
adc
adc
dec
jg
adc
push
mov
leave
inc
mov
fisttpl
dec
mov
out
and
pop
sbb
insl
nop
xchg
mov
sbb
add
jmp
leave
test
pop
mov
and
mov
and
and
in
call
jl
fs
dec
and
xor
das
cmpl
jbe
xchg
adc
inc
nop
mov
enter
mov
push
mov
inc
jnp
push
mov
and
mov
mov
inc
sarb
jg
daa
or
aas
and
pushf
mov
add
add
dec
in
int3
shl
jns
aaa
add
inc
int
xor
negb
lcall
or
cltd
jo
scas
in
mov
lcall
pushf
int
push
test
dec
mov
add
les
inc
sub
sub
inc
insl
inc
jne
push
dec
dec
push
dec
decl
imul
dec
jns
push
push
push
dec
fs
imul
addr16
pop
popa
addr16
jae
jno
incl
dec
popa
popa
imul
addr16
inc
push
push
jae
dec
ja
pop
pop
dec
jp
arpl
je
add
jno
arpl
cmp
push
dec
push
bound
jp
decl
push
dec
jo
dec
jns
jne
jns
dec
pop
jae
pop
jb
inc
pop
jae
inc
fs
push
dec
std
add
jo
pop
daa
sbb
jne
xchg
mov
dec
mov
push
jg
cltd
dec
push
sti
push
push
cli
insb
movsb
inc
enter
push
add
adc
add
cmp
and
sbb
cmp
or
sbb
jb
xor
fisubs
jns
push
imulb
insl
aaa
add
xor
addr16
loopne
and
inc
stos
repz
mov
enter
aam
pop
enter
mov
pop
mov
xchg
mov
inc
popa
xchg
xor
cmpsb
xchg
inc
mov
mov
cmpsb
lods
push
mov
xchg
inc
repnz
jnp
dec
jge
dec
or
arpl
jno
inc
nop
in
movsl
sub
add
popa
mov
lcall
push
jne
aas
jae
dec
cltd
or
or
mov
jp
jg
pop
dec
lret
sar
sub
jnp
dec
inc
jg
repnz
pop
inc
dec
jne
jno
push
outsb
push
imul
pushl
je
insb
pop
push
imul
scas
gs
cld
repz
adc
pop
dec
js
jo
or
incl
jb
std
jg
jne
fnstenv
jp
jb
add
push
cmp
sub
cmp
insl
and
dec
mov
imul
adc
xchg
and
inc
sbb
inc
adc
incl
fabs
sub
xor
sub
and
jg
nop
int
mov
imul
dec
mov
inc
mov
dec
xor
sbb
enter
jp
lcall
fsubrl
push
add
or
xor
je
jl
jbe
or
and
jmp
fucomp
dec
pushl
cltd
popf
mov
cmpsb
mov
push
gs
mov
add
mov
jl
outsl
insl
ljmp
adc
push
cmc
mov
mov
lret
mov
mov
pop
nop
sub
xor
lea
mov
inc
inc
lods
sub
and
aaa
ret
push
outsb
clc
orb
or
inc
in
pop
movsb
inc
fwait
test
pop
sub
jmp
and
fsubl
cld
sub
pop
lods
sub
mov
cmp
cmc
gs
pop
movsb
sbb
int
pop
mov
mov
test
aas
decl
pop
inc
push
jl
or
ret
mov
push
std
jns
sbb
push
sub
cld
dec
and
decb
jle
sub
loop
push
dec
push
nop
and
lahf
nop
aas
inc
jb
ljmp
jns
ss
leave
inc
int3
xor
jecxz
push
fidivl
dec
enter
pop
jo
or
call
fadds
cmp
es
add
sub
xor
jl
repnz
outsl
dec
mov
mov
xor
lcall
push
cs
popa
js
test
mov
mov
ret
jb
dec
add
push
aas
fldenv
inc
arpl
sbb
ds
jne
jmp
out
std
pop
push
xor
lods
cmpsl
dec
outsl
ja
popa
rclb
lcall
add
sub
cmpsl
dec
pusha
stos
pop
ret
add
lcall
les
push
push
cmp
daa
jp
das
cmp
xchg
test
stc
xchg
push
or
loope
push
std
ljmp
xor
inc
cmp
push
icebp
cmp
daa
stc
decl
and
into
xor
cmp
shll
lret
shll
cmc
ljmp
mov
pop
dec
jno
push
push
jg
ret
decl
jmp
jns
inc
jbe
mov
mov
mov
stos
sbb
sbb
out
add
pop
cmp
pop
shll
ljmp
outsb
pop
sub
ja
mov
sbb
int3
push
inc
inc
push
mov
testb
movl
pop
dec
adcl
jle
aaa
jge
stos
and
dec
jmp
pop
push
lret
pop
dec
sahf
in
pusha
stc
movsl
ret
push
ljmp
push
or
iret
mov
lods
push
inc
cltd
mov
mov
cwtl
mov
pushf
xor
inc
mov
jle
cmpsb
call
das
pusha
repz
cwtl
cmp
fdivrs
inc
out
pop
push
sub
mov
adc
adc
ret
mov
jle
stos
sub
dec
repz
jmp
jne
movsb
cmp
mov
sub
shrb
lcall
add
mov
dec
jne
push
call
frstor
out
clc
mov
cmp
sahf
pop
pop
and
insb
insl
mov
dec
push
push
arpl
in
cmpsb
cmp
icebp
or
popa
xchg
test
clc
cmpsl
scas
xchg
leave
push
push
inc
cltd
lahf
pop
pop
inc
insl
loopne
daa
jg
jne
push
daa
dec
incl
enter
sub
lods
cwtl
lahf
mov
jbe
sub
dec
add
add
mov
call
sbb
subl
sbb
mov
push
and
or
lds
pop
pushl
cld
jmp
cmpsb
fldt
outsl
arpl
nop
xchg
ljmp
dec
rcrl
inc
stc
mov
imul
dec
int
mov
ficompl
outsb
int3
sbbb
push
jg
sti
add
stos
rorb
push
push
out
and
mov
ljmp
hlt
or
mov
nop
pop
stos
adc
lcall
out
fs
cmp
cmp
xchg
ljmp
sar
xchg
push
push
sbb
jle
mov
pushl
mov
ficoml
or
ss
jl
or
or
sti
adc
test
inc
sub
aad
bnd
fwait
push
xchg
mov
pop
outsl
jle
loopne
xor
sbb
mov
add
addr16
mov
arpl
lds
int3
outsl
jle
jg
mov
and
jle
xchg
pop
out
int3
popa
adc
cmp
dec
stc
aaa
jmp
imul
rcll
addr16
shl
imul
mov
outsl
std
enter
lock
mov
test
stos
mov
jecxz
dec
inc
mov
popa
into
out
push
xor
fwait
call
inc
jo
lods
shrl
fisubs
push
mov
sahf
mov
lcall
dec
fldcw
pop
jg
add
movsb
sbb
cmp
jg
pop
push
xor
outsl
and
jno
adc
and
bound
lea
push
int
lock
cwtl
lock
cmc
dec
xor
in
jmp
adc
iret
fidivrl
adc
test
ljmp
hlt
xchg
js
sub
int
pop
stos
ja
xchg
lea
test
ljmp
push
pop
pop
repz
inc
movsl
push
dec
ds
xor
inc
roll
and
imul
cmp
mov
mov
mov
add
cld
or
cmc
lea
pextrw
mov
pop
shrb
mov
fidivrl
jo
ds
xor
push
mov
dec
and
add
rorb
xor
shlb
mov
ljmp
cwtl
pop
movsb
adc
mov
ds
pusha
js
scas
iret
aaa
dec
inc
mov
stos
lods
xchg
test
clc
decl
jo
in
and
bswap
jne
into
sahf
dec
xchg
and
or
fdivs
pop
and
pop
lcall
mov
jl
add
and
cmp
int
push
pusha
loop
incl
dec
mov
xor
fs
or
aas
and
or
jns
mov
jg
decb
cmp
sub
lcall
or
inc
mov
push
dec
scas
ja
mov
mov
push
call
es
rcrb
repz
pop
mov
push
cli
sbb
rcrb
aas
mov
or
pop
add
das
mov
frstor
pusha
mov
sub
cmp
or
sti
xchg
dec
mov
cmpsl
ss
jo
aaa
push
lds
data16
push
xor
mov
push
cld
push
fnstsw
xor
mov
push
push
jecxz
adc
decl
adc
cmp
or
and
mov
pop
xor
mov
and
sbb
aas
add
jl
mov
push
test
sbbb
inc
cmpsb
xchg
lcall
dec
je
pop
arpl
jae
xchg
outsb
arpl
add
push
mov
sub
ret
adc
iret
and
adc
inc
mov
adcl
mov
test
or
daa
add
and
movsl
in
mov
jg
push
xchg
jne
bound
xlat
and
sti
and
mov
cld
dec
pushl
inc
loop
inc
push
mov
xor
cmp
cmp
push
mov
ljmp
mov
cld
jle
pop
xor
mov
jle
out
insl
ja
fcompl
sub
es
pop
add
mov
and
lods
insb
mov
test
and
je
jecxz
inc
inc
add
xchg
dec
push
imul
insb
and
mov
push
push
cwtl
adc
insb
frstor
inc
bound
fisubl
lret
push
xchg
test
jb
fstpt
je
and
mov
jp
pop
cmp
fldcw
sub
emms
cmp
or
lret
test
pop
mov
shll
push
test
sbb
call
popa
cmp
sub
jo
imul
out
push
stc
pop
andb
add
pop
data16
mov
dec
scas
xlat
pop
fs
cmp
mov
in
jo
add
imul
daa
pop
lret
pushf
fwait
or
cli
lods
cld
pushl
jl
push
push
into
call
aaa
mov
mov
fdivs
shl
incl
push
lret
lcall
dec
inc
inc
mov
pop
push
sti
incl
dec
dec
scas
jbe
push
icebp
pop
dec
das
clc
call
fistl
add
push
gs
enter
inc
fdivr
adc
cmp
decl
jecxz
jge
es
cltd
jge
dec
gs
ds
inc
stos
pcmpeqd
int
and
push
pusha
adc
jnp
mov
adc
fs
push
pop
dec
xchg
in
mov
std
and
fisubrl
or
dec
xor
ljmp
cmpsl
outsb
dec
adc
jg
loope
inc
sbb
jnp
pop
cmp
sbb
repz
push
cli
jp
jbe
ljmp
arpl
fdivs
pop
int
pop
out
cmovle
cmova
ljmp
mov
xchg
mov
scas
jle
shlb
pusha
push
jns
pop
notl
inc
mov
xchg
popf
add
xor
or
stc
adc
mov
push
test
cli
xor
adc
fistl
push
jb
adc
xchg
pop
mov
mov
xchg
shlb
sbb
sbb
sbb
enter
jg
lcall
sub
xchg
pop
repz
xor
daa
in
incl
inc
in
dec
inc
adc
ja,pn
scas
je
inc
insb
xlat
mov
dec
mov
jg
mov
das
inc
ret
mov
pop
and
fmull
outsb
adc
fs
je,pn
outsb
rorb
dec
cld
aad
fs
cwtl
test
adc
mov
xor
mov
inc
inc
incb
orb
jle
mov
ja
sub
cli
js
dec
jp
sbb
push
cld
mov
adc
cmp
mov
pop
mov
scas
push
push
push
pop
cmpsl
xor
push
or
jg
push
jns
push
insl
jb
push
in
imul
insl
pop
add
int
pop
dec
mov
add
call
jmp
push
pop
shrl
rcrb
sahf
lcall
xchg
or
cli
decl
rolb
sub
orl
xchg
push
push
pop
mov
ljmp
inc
insb
push
es
das
rcll
mov
ret
adc
jae
sarl
lcall
popa
sub
pop
insl
sbb
and
shll
sbb
xor
frstor
inc
sbb
ja
adc
popa
adc
roll
adc
repz
lret
mov
clc
lret
dec
fisubs
mov
ljmp
sarb
inc
into
push
push
mov
sbb
sbb
push
jl
repnz
pop
sub
pop
xchg
dec
jne
ljmp
in
push
and
lock
dec
mov
inc
xchg
inc
jge
dec
dec
sbb
jl
xchg
lcall
sbb
mov
sub
or
push
jmp
jno
ljmp
rcr
es
cmc
js
add
inc
stos
dec
js
or
mov
jg
jg
push
add
scas
fidivrl
adc
in
lods
cwtl
jno
jmp
popa
dec
jno
push
jp
shlb
jg
ja
inc
js
jne
fsubl
stos
mov
jp
loop
dec
mov
repz
insl
jae
stos
lcall
cmpsb
sub
orb
push
jae
sbb
xor
cmp
or
jg
repz
cli
and
or
ds
decl
std
sub
stos
aam
or
push
imul
test
adc
jo
in
mov
add
mov
fs
push
insl
add
and
cmp
xor
imul
jle
jbe
mov
sahf
mov
or
jns
sbbb
and
imul
je
push
inc
xor
sub
or
shrl
in
push
push
aaa
movsb
fdiv
fisttps
jno
xor
lods
out
and
dec
popa
dec
outsl
outsl
je
notb
dec
adc
into
fwait
mov
sub
jg
push
pusha
mov
fidivrl
jbe
adc
in
push
adc
mov
mov
leave
push
push
dec
jbe
mov
jnp
add
jg
xor
push
jg
push
xor
jne
cmp
ret
push
out
dec
xor
ljmp
push
loope
call
ljmp
dec
inc
xchg
pushf
jg
out
cli
push
imul
decl
dec
jo
dec
sub
sbb
call
dec
dec
outsb
inc
cwtl
and
fwait
mov
jb
dec
jno
inc
lcall
push
es
cmp
sub
pushl
imull
or
inc
xchg
mov
push
jg
mov
push
push
mov
pop
bound
jg
mov
inc
rorl
cmp
in
xchg
testb
dec
fs
cmc
push
push
inc
sbb
daa
jae
add
sbb
out
push
mov
add
jge
pop
cltd
jmp
lcall
inc
ds
stos
mov
hlt
pop
aas
jne
push
inc
xchg
stos
inc
jne
outsb
inc
daa
dec
fidivs
jmp
loop
pop
jge
xorb
push
mov
movsl
xchg
gs
jg
test
jb
mov
outsl
ss
mov
roll
jno
popf
icebp
jbe
enter
insb
or
fcomip
into
pop
imul
sub
sbb
push
push
mov
pushw
push
call
enter
cmpsl
bound
lods
je
outsl
adc
ss
cli
stos
aad
cmp
cwtl
dec
scas
sbb
add
roll
ja
and
push
and
mov
mov
inc
or
mov
lcall
test
arpl
cmpsb
pop
pop
jbe
cli
sub
jp
add
push
sub
jne
xor
push
pop
aam
arpl
add
into
adc
clc
ljmp
decb
dec
inc
xor
shll
jnp
ret
push
mov
dec
cmp
jbe
lcall
mov
inc
add
fs
test
idiv
inc
push
xchg
outsl
imul
fisubrl
jle
xchg
out
and
bound
loope
push
jg
test
xchg
dec
pusha
push
js
push
dec
addr16
jl
fs
jb
jl,pt
pop
xor
nop
jne
mov
test
adc
xor
add
movsl
jg
lock
inc
jl
or
mov
inc
and
mov
mov
loope
or
leave
xorb
arpl
xchg
inc
inc
jp
cmp
ja
ljmp
push
push
addr16
mov
adc
push
pusha
outsb
ja
mov
xchg
mov
lcall
push
ja
push
mov
lcall
jne
push
pop
insb
push
mov
in
xchg
inc
fsub
pop
shll
pop
mov
test
in
dec
dec
int3
xor
inc
add
push
sbb
sbb
jmp
jl
fs
jb
cmpb
imul
emms
pop
or
cs
stos
mov
sub
jbe
mov
arpl
mov
push
popa
bound
xor
ljmp
xchg
xor
and
ljmp
jno
push
mov
mov
cli
pushl
xchg
ja
in
dec
pop
int
pop
in
rclb
cli
addr16
dec
std
push
xor
adc
push
push
mov
jmp
push
or
mov
and
das
sar
and
dec
push
cli
decb
dec
repnz
jae
jmp
jg
jns
dec
push
dec
outsb
sbbb
mov
jnp,pt
adc
cld
push
insb
inc
mov
push
out
push
lds
sbb
mov
mov
and
inc
jle
rcll
sub
iret
mov
xor
jp
in
inc
in
mov
call
shll
insb
dec
js
clc
jl
sub
and
mov
dec
adc
inc
pop
stos
scas
es
mov
stos
mov
incl
mov
pop
icebp
pusha
jnp
inc
lldt
xor
rcrb
mov
push
dec
mov
call
js
and
xchg
jbe
bound
rcr
lcall
cmp
xchg
enter
push
repnz
add
call
fdiv
xchg
fcoms
test
imulb
ds
cmp
xchg
dec
mov
pop
cmp
pushl
je
out
or
scas
aaa
push
adc
in
sub
aas
mov
lcall
js
es
imul
pop
rcl
inc
lds
push
or
ret
mov
call
push
into
das
imul
dec
js
cltd
or
mov
and
sarl
add
lock
cmpb
decl
inc
adc
cmp
in
js,pn
out
dec
push
or
lcall
dec
push
xor
pop
inc
bound
jmp
push
dec
push
or
sub
add
fwait
jle
jae
nop
mov
sbb
jg
rolb
pusha
add
or
cld
push
dec
xor
mov
sbb
jmp
dec
push
adc
pop
pop
es
fs
imul
call
cli
inc
push
adc
fs
das
or
fneni(8087
je
addr16
push
movsl
fwait
stos
push
inc
add
jg
dec
rcrb
and
cmp
out
add
mov
pop
lods
sub
ljmp
test
cmp
ljmp
mov
test
cmpsl
xchg
ds
cmp
xchg
or
or
pushl
cmpsl
scas
js
rep
sbb
jmp
mov
mov
cmp
sub
push
pop
cwtl
dec
inc
insb
push
decl
mov
mov
and
jp
loopne,pt
incl
push
popa
add
xchg
xchg
mov
sti
or
movsl
mov
mov
ss
adc
pop
pop
mov
call
cmp
ds
and
push
push
mov
xor
add
or
add
call
pop
frstor
test
lods
jb
insb
stos
call
xor
pop
icebp
sbb
stos
jecxz
es
loop
inc
push
xchg
cmp
mov
cmp
lods
je
sbb
xchg
mov
dec
sub
pushl
xorb
push
imul
pop
push
test
xor
adc
jmp
dec
leave
mov
pop
jl
test
outsb
push
jno
sub
mov
filds
sbb
adc
in
xor
mov
lcall
mov
push
xchg
dec
in
xchg
cmp
std
jne
jb
push
xchg
int
js
loopne
ja
ljmp
cld
xor
add
daa
cmp
lea
dec
jbe
xchg
decl
mov
mov
mov
aad
mov
filds
mov
dec
fnstsw
cmpsb
and
test
ljmp
pop
icebp
push
dec
fldt
push
fidivrs
cli
pop
pop
lea
lcall
sub
frstor
sbb
inc
cli
mov
jp
cmpsb
fisttps
fdivrl
imul
cmpsl
push
loope
icebp
adc
sub
inc
sub
inc
sub
mov
fdivr
jg
pop
jle
in
test
push
call
int3
dec
sti
cmp
add
sub
ljmp
pop
pusha
cmp
push
clc
or
mov
cmpsb
iret
mov
push
fistpl
inc
mov
imul
sahf
fbld
xor
dec
pop
in
adc
sbb
stos
cmp
push
cmp
test
sub
sub
mov
sub
and
sbb
and
mov
add
fiadds
pop
pop
iret
xchg
and
jecxz
into
repz
xchg
jg
ds
xchg
call
lds
or
push
lret
lds
mov
call
addr16
clc
adc
ja
pop
pop
jbe
pop
dec
jb
jae
out
bound
aas
jbe
scas
pop
jne
call
std
decl
push
adc
divps
mov
push
add
lds
jb
add
mov
pushl
cmp
adc
pop
jno
in
ss
sar
call
dec
pop
mov
push
in
inc
mov
add
call
popa
fcomip
jg
ljmp
mov
jo
stos
int3
lret
repz
inc
icebp
jae
jno
push
jg
mov
repnz
test
in
mov
push
std
ds
mov
ljmp
das
test
sahf
dec
inc
cmp
cwtl
mov
jmp
jae
xor
jb
or
push
sbb
adc
and
mov
mov
lcall
mov
subb
jp
icebp
imul
inc
test
pushl
dec
fs
es
adc
movl
add
incl
imul
cs
cli
jno
subl
jo
popf
scas
add
int3
dec
jmp
fcompl
imul
incl
movsb
loope
je
les
gs
add
lcall
dec
push
out
daa
insb
test
lcall
mov
mov
ja
js
addb
fbld
addr16
rorb
incl
addr16
dec
ds
out
adc
orb
ljmp
or
or
and
add
add
repz
inc
add
push
cwtl
icebp
popa
push
clc
inc
insb
mov
xchg
xchg
sbb
sbb
cld
mov
jae
add
push
loop
movsl
addr16
push
cli
ljmp
or
mov
inc
stos
pusha
push
pop
outsb
enter
mov
jp
add
out
push
mov
sbb
popf
cmp
push
decl
push
lock
xor
fwait
inc
xor
add
test
insb
fbstp
push
fisubs
and
jno
mov
ret
mov
cs
mov
sar
ljmp
pop
push
insb
sti
lods
jae
ja
inc
mov
pop
popf
ss
dec
push
out
sar
ljmp
in
mov
jns
cmp
xchg
sub
sub
out
and
sbb
ret
cmc
das
jne
push
xor
inc
sub
jle
add
and
sub
mov
jp
movsl
mov
cmp
sbb
adc
aas
push
das
pusha
push
sbb
adc
loop
outsb
ds
adc
pop
jp
mov
lods
pop
or
xchg
jecxz
insb
cmpsb
inc
cli
add
aaa
pop
imul
or
inc
fiadds
jmp
cli
es
std
ss
out
mov
ja
aas
lods
mov
fsubrs
push
icebp
jbe
adc
incl
mov
scas
mov
test
decl
pop
leave
dec
je
fldenv
ss
push
mov
adc
sub
outsl
sti
jle
dec
enter
add
outsl
clc
sub
outsl
jmp
cli
fidivrs
jl
add
dec
mov
jg
in
int
jb
scas
sti
adc
and
cmp
adc
adc
pop
mov
or
inc
insb
jo
repz
inc
repz
incl
fldenv
sbb
imulb
aaa
jge
imul
xchg
sub
imul
lcall
and
add
sbb
adc
stc
aas
jecxz
push
jae
xor
stos
pusha
jge
inc
hlt
scas
xor
jnp
fidivl
outsl
add
mov
inc
popa
lock
jbe
jnp
gs
loopne
dec
fs
mov
push
jb
add
add
push
add
sub
mov
or
jg
add
sub
adc
sbb
jnp
xor
dec
push
inc
or
jge
dec
stos
push
inc
in
call
test
mov
orl
movsl
cmp
jmp
ja
call
call
js
js
lahf
in
lods
and
inc
inc
dec
lret
outsl
ss
jne
sbb
jae
cltd
mov
xchg
es
push
xor
pop
push
pusha
xlat
xchg
xor
mov
sub
add
dec
js
pushl
or
or
test
jmp
dec
sti
xchg
jne
sub
andb
std
xor
fisttps
add
sub
popa
je
sahf
inc
mov
add
decl
imul
push
jb
adc
or
mov
ds
mov
addl
jmp
dec
pop
fs
pop
std
mov
xchg
insl
mov
adc
in
or
dec
popf
loopne
daa
aaa
enter
or
test
push
test
cltd
push
xchg
jle
jge
call
pop
mov
xor
adc
pop
popa
jmp
data16
jp
movsb
add
or
pushl
in
mov
add
pop
push
pusha
dec
cld
mov
out
push
insl
mov
dec
dec
rcrb
pop
lock
aas
outsb
push
fidivrl
sbb
pop
loope
pusha
pop
mov
ds
jg
inc
es
scas
stos
fsubrs
dec
imul
std
mov
sbb
aam
and
jle
arpl
xor
mov
cmp
xchg
aas
sub
lea
ss
mov
loopne
push
adc
mov
fstpt
push
ja
clc
add
insb
mov
xor
int
jne
or
cs
call
cmp
inc
in
jp
jae
jno
out
sbb
jb
ljmp
ret
add
repz
hlt
cmp
push
mov
jo
pushf
dec
mov
jmp
stos
je
dec
fstps
jno
xchg
lret
pop
scas
jne
pop
jns
lods
ja
jno
push
repz
incl
addb
sahf
mov
mov
cmp
mov
jmp
shrb
inc
cmpsb
add
sbb
and
mov
into
cmpsl
daa
cmp
ss
and
outsl
sub
inc
test
aas
add
dec
mov
imul
push
incl
ret
cmpsb
pop
cmp
dec
outsb
inc
lret
in
inc
pop
in
sbb
clc
push
xchg
popa
pop
ja
jl
or
push
rolb
popa
adc
aaa
cs
inc
sbb
imul
sar
adc
outsb
outsb
jae
insl
stos
aas
ja
xchg
sarb
cmp
ljmp
pushf
xor
push
jae
cwtl
dec
shrl
pop
pop
insb
out
and
decl
pop
loope
pop
dec
imul
daa
sbbb
incl
outsb
inc
fiaddl
jle
pop
dec
sbb
jno
pusha
fs
or
mov
sbb
sub
sbb
sbb
shll
jmp
sar
ds
add
enter
jbe
xchg
xor
aaa
mov
or
loopne
vphsubdq
sub
sub
inc
mull
lcall
ja
xchg
mov
jle
cmp
es
in
rorb
mov
popl
shll
jl
or
dec
mov
mov
data16
lret
js
ja
lcall
dec
ljmp
mov
pushl
or
or
pusha
push
inc
stos
mov
add
lds
insb
sti
pop
arpl
aaa
push
jns
xchg
jnp
push
outsb
mov
jmp
pop
mov
adc
inc
sub
decl
test
pop
cmp
xchg
jge
adc
in
and
adc
cs
incl
ret
loopne
adc
in
loope
cltd
in
jle
test
lahf
insb
xlat
mov
addb
rcr
iret
int3
mov
cmpsb
mov
jge
pushf
sahf
fsqrt
lcall
inc
arpl
fstpl
mov
mov
jnp
xor
dec
xlat
mov
mov
lcall
mov
incl
aas
popf
les
stos
mov
das
out
stos
bound
and
mov
pop
pop
call
mov
dec
fidivrs
xchg
loopne
mov
xor
push
mov
call
jp
ss
loop
popa
inc
dec
xchg
lds
test
add
sar
decl
popa
inc
sbb
ss
mov
call
sbb
in
inc
sub
mov
pushl
mov
sahf
jle
cs
jp
je
es
movsb
jecxz
jbe
repnz
inc
stc
es
pop
push
incl
sbb
daa
popa
in
mov
nop
movsl
push
pop
push
out
ljmp
add
das
cmp
jp
loop
movsb
repz
sub
adc
and
sbb
lcall
mov
pop
inc
call
pop
pop
pushf
sbb
mov
popa
data16
mov
and
into
sub
cmp
mov
pusha
mov
jns
dec
rclb
push
loopne
lods
inc
stos
mov
or
and
pop
movsb
aam
xchg
js
mov
add
mov
push
ja
popf
add
roll
push
incl
mov
pop
into
cmp
jne
call
shlb
and
ljmp
mov
arpl
mov
into
adc
adc
push
fstpt
push
pushl
js
bound
push
std
jns
outsl
into
imul
outsl
inc
ljmp
ljmp
inc
popf
or
gs
out
ja
dec
sbb
jmp
and
pop
jmp
pop
addr16
mov
sbb
int3
dec
shll
pop
out
arpl
cmp
insb
fildll
fmull
jne
add
mov
add
sbb
inc
enter
outsb
inc
mov
xchg
dec
icebp
stos
movsb
xor
adc
add
xchg
sti
lods
jno
lods
and
jo
gs
push
jae
fwait
incl
sub
mov
in
push
dec
mov
int3
push
push
jne
push
jmp
push
pop
sarl
push
jo
adc
push
jbe
ljmp
decb
and
jge
cmpsl
mov
jo
xor
inc
clc
mov
xchg
mov
lahf
adc
or
popa
jns
pop
dec
aas
sbb
ret
int
sbb
and
lock
test
add
xchg
les
cld
frndint
call
pusha
dec
jnp
xor
into
push
roll
aam
popa
int
repz
xor
pop
push
pop
cmpsb
cmp
scas
icebp
arpl
push
fcomip
aaa
pushf
iret
pop
dec
jp
sbb
sbb
daa
cmc
cmp
pop
icebp
mov
out
inc
jle
lods
and
xlat
or
jg
mov
aaa
push
loop
add
pop
decl
dec
scas
xchg
jle
test
dec
mov
xchg
popa
dec
pop
shll
call
push
les
push
adc
aas
scas
adc
inc
imul
dec
mov
popf
outsl
dec
ja
fdivr
jbe
stc
and
jae
faddl
lcall
popa
jne
or
sbb
cmpsl
push
mov
out
insb
ljmp
call
out
insb
shlb
adc
xchg
sbb
nop
stc
xchg
inc
dec
ret
or
insb
jne
repnz
sbb
push
pushl
add
cmp
inc
sbb
fstpl
sbb
mov
sar
pushl
fbld
je
fdivrs
inc
push
fistpll
push
test
jge
xor
jg
jb
mov
int3
cs
sbb
shll
jns
push
aaa
sbb
ljmp
test
xchg
mov
push
pop
dec
mov
decl
loope
lock
lods
test
push
add
pop
jl
cmp
sahf
bound
in
lea
aas
pushl
adc
pop
sbb
sub
addl
or
adc
loopne
fwait
aas
and
lahf
fdivl
push
sbb
cmp
add
rcr
sbbl
and
add
int
repz
add
lahf
fstpt
insl
mov
mov
ljmp
int3
cmp
ret
cmc
sbb
add
cs
outsl
frstor
push
ja
ljmp
mov
sbb
inc
test
addr16
fsts
sub
sbb
decl
mov
loopne
je
adc
mov
mov
jae
cltd
push
pop
int3
test
pusha
out
fnstcw
inc
icebp
cld
fwait
mov
cmpsl
mov
iret
stc
push
out
bound
cmc
xor
lds
push
mov
iret
ss
jle
ja
insl
dec
cmc
sbb
test
insb
je
mov
loope
test
call
sbb
or
pusha
mov
cmpsl
ljmp
pop
sbb
sub
push
enter
mov
and
ds
cmp
adc
xor
jae
jle
cmp
stc
adc
int3
push
enter
fcomps
pinsrw
push
and
scas
nop
jecxz
ja
mov
pop
clc
xor
mov
pop
inc
jg
lds
insl
mov
inc
pop
int3
mov
push
loop
imul
lcall
push
pop
jbe
lods
mov
add
lea
shrb
ss
out
cmp
test
stos
scas
push
and
jbe
jnp
test
cmp
jae
push
sbb
jmp
dec
shr
in
cmp
lock
jmp
lea
push
popa
mov
cwtl
data16
in
outsb
and
ss
jl
mov
mov
and
jg
mov
mov
jo
cs
mov
push
adc
incl
movsl
push
mov
into
dec
cli
jg
call
pop
sub
nop
add
jg
xor
cmpsl
daa
in
cld
dec
or
xchg
mov
lcall
icebp
sbb
gs
xchg
pop
in
push
out
stc
sti
cli
inc
sti
cmc
add
sub
je,pn
push
iret
jbe
xor
push
jge
pushl
sub
or
add
and
ljmp
ficoml
imul
push
decl
sahf
mov
adc
cmpsl
xor
xchg
mov
aas
je
adc
mov
jg
in
add
push
mov
dec
leave
mov
jecxz
into
mov
jmp
mov
jbe
jmp
cmpsb
jmp
int3
mov
add
call
cwtl
jbe
loopne
cmp
cwtd
nop
mov
stc
push
mov
push
fiaddl
sbb
ja
sbb
cmp
mov
jl
mov
ret
inc
push
in
imul
add
iret
test
jg
inc
pushf
stos
test
mov
lods
aas
repnz
xorb
and
or
push
arpl
push
scas
push
lcall
adc
xorb
inc
cld
push
aam
hlt
ja
cli
cmpsl
sbb
outsl
stos
and
andb
adc
decl
pop
incb
aad
adc
mov
es
sbb
je
dec
jg
mov
jmp
cmpsl
add
clc
adc
cs
mov
and
movl
out
mov
pop
mov
mov
scas
clc
jg
gs
sub
scas
inc
mov
cltd
ljmp
mov
test
mov
sbb
inc
xor
mov
push
and
add
cwtl
jl
js
or
fs
decl
fdivl
jl
mov
frstor
mov
xchg
cmpsb
rcll
leave
lods
xor
decl
dec
punpckhbw
mov
test
xor
and
jmp
or
xor
iret
or
out
adc
jmp
add
cmp
xor
shll
sahf
xchg
jl
inc
repnz
bound
pop
xchg
sub
adcb
or
loop
push
ljmp
lcall
inc
leave
and
sti
das
dec
out
pushf
jno
add
adc
test
mov
mov
daa
popf
repnz
gs
stos
repz
call
mov
int
aad
pushl
jnp
xchg
out
pop
outsb
and
les
scas
mov
lcall
lea
mov
aas
xchg
push
loop
xor
add
mov
mov
mov
and
incl
sti
mov
cmc
addr16
ss
adc
dec
ljmp
enter
ja
mov
fdivrl
adc
rcll
mov
pop
lock
lcall
lret
mov
ds
decl
int3
out
inc
fsts
push
mov
aas
lcall
sar
out
mov
and
test
adc
cltd
xor
jmp
or
jo
and
cmpsl
add
xchg
sahf
cmp
or
sbb
mov
mov
and
jb
inc
dec
ret
imul
mov
jl
ret
pushl
add
push
imul
xchg
call
mov
fnstsw
mov
push
lods
fsubs
add
sub
or
cmp
movsbl
js
jle
adc
int3
xchg
and
inc
lret
pop
popa
push
sti
pop
outsl
enter
add
iret
ljmp
push
jp
mov
mov
mov
nop
stc
push
push
dec
dec
xchg
push
inc
call
jge
sbb
sbb
inc
fnsave
inc
jp
rorl
bound
pop
shlb
cltd
repz
pushl
xchg
xchg
xchg
sub
scas
pushf
stos
mov
in
out
orl
sub
loop
adc
scas
test
scas
aas
incb
push
bound
iret
loop
loop
insb
aaa
xor
jmp
orl
aas
call
daa
jecxz
lods
and
out
cmp
gs
and
mov
dec
mov
mov
sbb
ja
stos
icebp
push
les
imul
push
test
call
test
mov
mov
adc
lds
mov
sbb
and
cwtl
sub
jmp
jae
push
jl
lods
add
sbb
rorl
popa
into
add
movsb
sahf
xchg
int3
aaa
lea
fcomip
scas
lods
ret
jmp
and
arpl
inc
out
subb
leave
jns
jmp
dec
rcrl
imul
pop
push
scas
cmp
push
jmp
xorl
mov
push
std
decl
cmpsb
shll
popf
scas
inc
jbe
dec
jbe
dec
movsl
and
decw
and
lea
clc
sub
pop
inc
dec
icebp
cs
sub
jo
mov
add
rclb
mov
add
test
jne
aam
decl
pop
enter
jnp
or
push
mov
jb
aad
fs
insl
jmp
mov
mov
mov
cltd
mov
test
add
shl
inc
clc
sbb
sub
mov
cs
push
lods
add
clc
ljmp
scas
pop
or
sbb
adc
push
sti
or
mov
ficompl
xchg
pop
scas
inc
clc
out
push
inc
cmp
cwtl
movsl
cltd
xchg
stos
mov
ret
sub
or
sub
pushl
adc
xor
rorl
push
xor
arpl
cmovp
mov
pop
or
sub
push
lea
cli
jae
xchg
das
dec
stos
mov
adc
jne
sbb
lea
test
sahf
push
inc
outsb
mull
call
fdivl
push
shll
outsb
jb
iret
pop
lods
scas
jg
xor
sub
repz
push
push
jg
add
or
add
cld
jmp
jmp
icebp
sbb
adc
das
icebp
loop
jge
test
jmp
pop
imul
push
mov
dec
popa
in
cmp
cmp
jno
lock
jmp
mov
insl
jo
sahf
push
jb
push
movsb
adc
data16
sbb
ds
push
pop
fcompl
xor
popf
inc
ja
mov
jb
sub
cmp
cmp
inc
push
mov
dec
or
cmp
clc
mov
lods
into
out
outsl
addr16
icebp
out
jl
and
rolb
mov
pop
jo
sbb
sub
dec
or
icebp
sbb
clc
outsl
clc
pop
mov
stos
or
mov
fdivrp
or
repz
mov
jg
ret
fsubrl
pop
adc
add
push
gs
sbb
pop
fcompl
or
xchg
jns
mov
fidivrs
adc
mov
fcoml
incb
push
int3
mov
cmpb
cmp
sub
mov
pop
sbb
sub
outsb
and
inc
jmp
xor
inc
cld
inc
int3
es
outsb
lea
inc
mov
loop
js
ja
xor
mov
repz
stc
jecxz
jo
dec
int3
xor
cmpsb
pop
leave
adc
mov
and
pop
test
int3
mov
sub
xchg
mov
mov
aas
cli
push
incl
addr16
inc
ret
stos
and
out
inc
mov
out
inc
shrl
fdivrl
std
ljmp
push
sti
add
out
stos
fwait
adc
fs
lret
aaa
cld
push
jb
pop
cmp
movb
popa
fisubl
movsl
jo
insl
mov
sarl
inc
jmp
adc
addr16
push
mov
sbb
sub
push
sub
pushl
jmp
jbe
hlt
sahf
aaa
jbe
mov
repz
inc
bound
jnp
in
cmpsl
mov
mov
jmp
addr16
gs
jg
ss
out
jg
lods
in
add
loop
icebp
dec
test
fwait
mov
std
call
les
ds
and
mov
jne
jmp
das
push
adc
pop
xor
decl
leave
cmp
shlb
ja
add
cld
jg
cmp
shrb
arpl
iret
std
push
or
imul
xor
jp
adc
inc
mov
in
or
imul
out
cmpsb
dec
mov
push
fidivl
call
push
pushf
push
mov
imul
loope
pusha
lcall
push
mov
ljmp
adc
jnp
pop
dec
jecxz
repz
push
andb
daa
push
lret
dec
incl
out
repz
insb
ret
pop
lods
inc
mov
dec
out
inc
jg
loope
int3
add
jg
ljmp
jns
adc
mov
movsl
dec
sti
xor
ljmp
push
inc
cmp
ret
arpl
and
insl
into
aas
jbe
sbb
outsl
ljmp
loop
jl
scas
add
in
and
jo
sbbb
enter
jno
jno
sbb
lret
mov
pushf
cmp
call
jbe
jb
cmp
push
out
push
mov
mov
cmp
jg
popa
fnstsw
jbe
cmpsb
mov
ljmp
out
and
rolb
or
or
push
jbe
push
mov
outsb
dec
divl
jl
adc
xchg
insb
ficompl
dec
les
mov
inc
ja
xchg
jne
pop
clc
or
and
push
in
lret
jne
mov
ljmp
je
jl
aad
sbb
sub
lea
mov
arpl
mov
je
les
push
xchg
icebp
das
fcompl
adc
cmp
outsb
fists
andl
ret
clc
cld
dec
insl
xchg
stos
ja
arpl
adc
lcall
add
je
and
jno
mov
add
js
pop
fnstsw
decb
incl
push
insb
push
xorl
add
icebp
xchg
inc
sarb
loope
mov
out
imul
fwait
outsb
test
jnp
cli
mov
push
sbb
scas
shl
ret
repnz
in
aam
gs
repz
decl
fbld
push
leave
jb
mov
pop
xchg
clc
jo
cmp
das
cli
ljmp
add
push
dec
jg
jp
stos
inc
jl
lea
cwtl
aaa
pop
fsubs
decl
dec
loop
insb
fs
cmpsl
jl
xchg
arpl
out
xchg
inc
jp
aaa
popa
insl
xchg
mov
pushl
out
sub
negb
fidivl
outsb
outsb
mov
lcall
out
ja
mov
jne
or
dec
inc
mov
inc
in
jg
push
pusha
repz
or
pushl
add
ret
es
iret
sbb
push
inc
xor
adc
push
gs
adc
fnsave
inc
push
sti
push
loop
pop
mov
push
lock
push
fildl
pop
pop
pop
nop
jge
loopne
jg
into
sbb
xchg
add
das
arpl
imul
xchg
sbb
fsts
data16
jno
cmp
inc
lcall
filds
inc
insl
mov
push
gs
subb
mov
mov
sub
xor
repz
out
daa
js
popa
jbe
pop
ljmp
pop
mov
arpl
ds
pop
aad
or
out
pshufw
push
icebp
addr16
loope
lcall
dec
mov
jo
iret
sbb
test
movsb
sbb
pushl
out
pop
ja
jo
sub
pop
sarl
cld
movd
mov
mov
sti
fistpl
add
test
scas
jle
mov
add
push
insb
shll
cmp
cmpsb
adc
sbb
pusha
sti
xchg
cmp
daa
decl
ret
xchg
lods
cli
xchg
xchg
mov
push
pusha
push
mov
fs
dec
fldcw
lea
sub
mov
out
popa
add
addl
add
rcrb
mov
adc
xor
inc
jbe
dec
insb
sti
mov
mov
fldt
clc
bound
ret
and
ljmp
frstor
mov
rorl
push
pop
bound
jl
adc
mov
mov
pushl
clc
sbb
out
emms
insl
add
testb
dec
dec
lahf
and
pop
adc
outsb
es
test
test
sub
cmc
add
xor
ss
sbb
push
mov
sub
inc
ret
fdivr
sbb
jg
push
clc
dec
add
les
push
or
or
incl
rolb
inc
hlt
jle
je
push
repz
jbe
std
dec
dec
push
cli
xor
loopne
xor
dec
mov
mov
jmp
lcall
sbb
add
dec
loop
or
mov
in
pop
popa
or
sub
stos
xor
mov
mov
popf
es
sbb
rolb
movsb
cmp
and
incl
cli
push
dec
cmp
sbb
imul
pop
dec
dec
jns
or
push
dec
cmp
imul
outsb
jle
add
ja
cli
sbb
sub
pusha
in
cmp
fbstp
test
in
xor
pop
push
dec
add
cmp
daa
inc
loope
fwait
lcall
test
dec
arpl
repnz
addr16
pop
mov
sub
mov
cs
xor
imul
pop
hlt
fcomip
jb
bound
add
jp
mov
cld
jg
enter
in
inc
fs
xor
imul
dec
pop
test
xchg
xchg
lcall
shl
fbstp
lds
imul
jns
mov
sub
loope
incb
adc
ljmp
ljmp
leave
jl
out
or
rcrb
pusha
adc
cmp
jg
mov
sbb
inc
jl
call
imul
inc
bound
in
jmp
push
cwtl
pop
mov
xchg
ss
sbb
idiv
lcall
pusha
xor
add
imul
sti
sbb
or
imul
xor
rorl
xor
jo
mov
adc
cltd
jmp
iret
add
lcall
inc
or
adc
sbb
enter
bnd
adc
test
push
call
mov
enter
push
fbstp
and
xor
and
pusha
inc
mov
out
and
dec
int3
ljmp
xor
jae
movq
sub
outsb
push
push
outsl
pop
shll
imul
rolb
sbb
lcall
into
xor
cld
and
push
pop
daa
pop
aad
mov
call
stc
mov
mov
mov
xchg
push
pop
and
jb
mov
adc
or
fstps
jo
ret
adc
jge
test
out
orb
shll
xchg
cmp
adc
push
jne
xchg
int
cld
push
xchg
mov
clc
es
mov
mov
pop
dec
in
cmp
clc
pop
loope
xchg
and
push
icebp
mov
jnp
or
dec
mov
inc
ja
inc
xchg
xchg
gs
sub
mov
dec
in
movsb
repnz
mov
aaa
std
add
xor
cs
ss
push
or
jbe
and
pcmpgtd
jecxz
aad
pop
std
jge
adc
loop
jae
sbb
lcall
decl
push
push
jno
dec
cmp
insl
and
js
leave
mov
jg
pushw
sarb
push
insb
push
mov
das
inc
inc
cmpsb
call
mov
outsl
lds
sbb
cmp
in
mov
jmp
fsubrs
push
cli
adc
or
cmp
push
dec
sub
mov
and
push
jo
push
dec
adc
dec
sub
gs
fcompl
add
cli
sub
data16
and
bnd
movsl
sub
jno
loope
push
jns
add
inc
movsb
pop
inc
cli
xor
xchg
adc
sar
call
inc
popa
jne
mov
cmp
adc
inc
jmp
movsb
insl
push
hlt
jl
movsb
int3
xor
add
cmp
aas
push
push
stos
lahf
mov
into
mov
movsb
jns
jg
and
xchg
mov
mov
ja
inc
and
inc
ljmp
sbb
xor
shll
les
data16
fidivs
cmp
xlat
push
push
ljmp
jo
add
in
sar
ljmp
sub
adc
out
inc
aaa
shlb
fsubrl
dec
and
add
jg
pop
ret
sub
imulb
sbb
dec
movsl
mov
mov
pop
dec
aaa
jl
and
scas
icebp
lcall
add
popa
inc
stos
shrb
in
in
cmp
call
adc
add
loopne
sbb
add
sub
and
stos
cmc
ja
jge
xchg
jp
dec
xor
or
mov
hlt
scas
cmpsl
push
and
push
push
lret
or
aaa
xor
fildll
inc
adc
decl
in
xchg
inc
sbb
xchg
sbb
outsl
inc
insl
out
cmpsb
push
mov
jae
stos
ljmp
loope
call
aam
sub
cmp
lds
fiadds
inc
std
xor
arpl
and
fistpl
pop
xor
lds
ja
clc
add
pop
push
add
sub
push
sub
ds
push
cmp
add
das
clc
pop
dec
out
or
js
fildll
shrd
jmp
pcmpeqw
jmp
cmpl
adc
stc
mov
mov
fisttps
in
mov
lock
xor
decl
fsub
adc
ss
adc
bound
loop
inc
daa
es
or
incl
loopne
push
sbb
cmc
jl
push
js
adc
fwait
mov
inc
sub
xor
sub
mov
add
outsl
fmull
leave
push
xor
and
cltd
incl
cmp
icebp
adcl
pop
mov
jg
pusha
clc
dec
fcoms
xchg
sbbl
fwait
icebp
inc
clc
mov
data16
and
push
push
test
loopne
dec
test
lcall
fisttps
inc
pop
out
xor
icebp
lcall
jne
ret
ja
sub
push
mov
sti
out
adc
ljmp
mov
pop
test
push
repz
cmc
call
jge
jg
push
mov
pop
call
ljmp
mov
stos
stos
lea
incl
mov
mov
ljmp
adc
test
imul
nop
popf
jne
ds
pop
mov
fs
mov
lcall
decl
test
mov
dec
mov
mov
ja
sti
ljmp
stos
fwait
mov
cmpsl
scas
mov
add
xchg
sahf
stos
mov
mov
decl
jbe
mov
jg
jge
mov
inc
mov
mov
push
xor
testl
add
mov
mov
xchg
jns
test
mov
push
mov
cmp
aaa
pop
pop
pushf
xchg
dec
add
add
clc
cs
or
push
xor
add
push
arpl
test
jnp
mov
popa
jno
in
push
jbe
ljmp
push
add
repz
jg
cmpb
jno
cmp
leave
adc
dec
negl
fistps
test
out
out
cmp
push
insl
and
push
push
and
jmp
std
incl
inc
xor
sub
and
mov
jbe
sbb
mov
sbb
out
or
and
fldenv
inc
pop
add
adc
stos
jle
push
xchg
mov
sbb
jge
mov
dec
push
mov
mov
pop
mov
stos
xchg
mov
ds
in
pop
out
lret
xor
jg
push
adc
inc
inc
frstor
pop
and
push
idivb
daa
fdivp
sub
js
xor
insb
mov
mov
test
jge
mov
in
ficoml
jp
mov
dec
jns
inc
xchg
inc
sahf
jg
ljmp
std
dec
bound
aam
mov
je
movsb
mov
andb
jmp
data16
cmpsl
lods
imul
push
gs
scas
test
bound
stos
stos
cmpsl
inc
jmp
incl
cmpsl
stos
xchg
and
ss
lret
mov
test
mov
xchg
push
in
mov
outsb
mov
xor
jg
call
test
je
dec
repz
roll
and
sti
mov
jmp
xchg
mov
mov
dec
ja
test
mov
lds
cli
aaa
and
push
pushf
add
sub
mov
cmp
sahf
dec
mov
mov
add
jp
leave
mov
sbb
mov
or
and
jl
popa
aaa
jbe
add
incl
sti
mov
xor
or
jle
jge
movsl
adc
push
ljmp
mov
sub
repnz
in
and
add
out
cli
jg
pop
es
sbb
lret
mov
adc
cmp
rclb
incl
pop
pop
xor
sbb
mov
dec
mov
stos
ljmp
or
inc
mov
nop
push
mov
inc
lcall
mov
cwtl
sti
mov
stc
mov
fcomip
incl
negl
xchg
iret
adc
pop
js
and
adc
out
insb
aaa
sbb
jg
icebp
add
push
mov
or
cmp
xor
shlb
decb
mov
inc
mov
sbb
lods
push
jge
lock
jg
adc
lahf
sbb
movsl
in
push
rorb
lock
mov
sub
dec
pop
data16
dec
and
pmaddwd
outsl
out
sbbl
mov
push
sti
fs
repnz
sbb
and
cmp
pusha
jnp
mov
push
insb
jno
lret
aam
sbb
loopne
jecxz
insl
lret
pop
adc
adcb
ja
das
jmp
mov
jae
mov
incl
mov
inc
lcall
sahf
bound
les
push
insb
fsubrl
les
imul
lahf
pusha
pushf
push
jp
outsb
arpl
jmp
pop
fisubrs
arpl
adc
vmread
sbb
xor
jae
adc
add
aaa
jle
push
jns
or
pop
cld
sbb
jno
mov
mov
aas
pop
fadds
outsb
test
andb
inc
test
adc
jb
and
push
scas
mov
std
and
add
pusha
mov
cmp
sbb
stos
push
scas
push
jne
enter
push
jmp
xor
xor
subl
orl
jmp
adc
aam
hlt
push
into
stc
mov
out
aas
jb
ljmp
jae
shrl
nop
lock
sar
outsl
pop
popf
fwait
jl
inc
fimuls
out
inc
pop
jae,pn
add
push
mov
jle
inc
aad
push
loop
cwtl
push
mov
ficoms
jl
stos
jmp
ret
icebp
or
add
dec
insb
jp
stos
push
cmpsb
pop
outsb
cmpsl
sub
inc
jle
popa
sub
movsb
roll
in
push
insl
repz
jmp
pop
pushf
out
dec
clc
std
popa
cmp
mov
dec
pop
stos
mov
push
cmp
and
mov
push
repz
or
and
jo
push
arpl
rolb
sar
add
ret
je
popw
xor
adc
or
test
push
pop
daa
stos
decl
and
jne
repnz
insb
pop
jmp
dec
cmp
ss
pop
dec
je
ffree
jmp
rcll
jno
add
cld
call
push
or
xchg
out
test
adc
int3
bound
inc
lds
push
cmp
repz
ja
ja
adc
jns
in
push
inc
sbb
sbbb
xchg
rcrl
cld
mov
and
imul
jge
test
ljmpw
mov
cmp
idiv
fwait
and
lock
stc
cld
or
pop
mov
sbb
orl
fadd
daa
inc
dec
divl
lcall
mov
inc
dec
dec
mov
enter
mov
mov
outsb
js
std
out
int3
add
or
fbstp
inc
and
inc
stos
loope
iret
sub
cmp
movsb
int
call
lcall
jno
insb
xor
sub
aaa
daa
je
sub
sub
mov
pop
sub
rclb
fisubrs
adc
clc
pop
loopne
xchg
das
push
int3
mov
pop
xlat
je
cmp
jb
mov
jg
outsl
xor
inc
cwtl
ret
cs
pop
adc
shrl
into
ljmp
out
jbe
data16
sbb
out
daa
jl
out
pop
add
cmc
dec
jmp
sub
jmp
int3
cld
dec
ffree
filds
jl
in
push
stc
into
in
jno
dec
in
inc
call
rol
ss
pop
jmp
int
cs
pushf
adc
nop
into
es
inc
cli
ljmp
and
out
cmp
ficompl
push
popa
xchg
inc
mov
in
xor
out
dec
inc
jb
inc
cmp
shrb
push
push
inc
in
loopne
cli
and
push
jmp
decl
push
fidivs
jns
pop
repz
push
loopne
int3
fdivrl
ja
adc
fisubl
out
fwait
hlt
loopne
push
repnz
pop
jmp
out
sar
aaa
jg
out
xchg
jmp
push
dec
fs
inc
push
dec
sarl
lds
dec
lahf
mov
push
jb
sti
out
inc
dec
mov
insl
je
aaa
outsl
jmp
lods
addr16
insl
shlb
ret
lods
out
push
lds
adc
push
lock
add
in
call
mov
vminps
xor
mov
sub
inc
in
or
cli
fidivl
ficoml
inc
iret
inc
into
loop
ret
mov
adc
mov
popa
popa
cmpsb
pop
push
dec
jbe
jge
push
rcll
jg
add
repz
add
outsb
dec
rcr
jb
adc
fstpt
push
int
jb
out
xchg
stos
loopne
xchg
fiadds
jbe
out
or
testb
ljmp
call
mov
push
and
mov
dec
rol
inc
icebp
jb
sbb
inc
adc
loop
jge
jg
mov
pop
into
sub
fs
out
inc
push
mov
notb
std
lret
fldcw
ja
dec
shlb
jo
lds
repz
fildll
cmp
sti
mov
jecxz
pop
in
sarb
lock
dec
scas
and
mov
cld
das
ret
add
enter
adc
or
and
mov
pop
mov
in
aam
mov
mov
enter
stc
shrl
ljmp
add
cmc
lods
popa
push
cmp
push
les
push
dec
mov
icebp
push
ficompl
cld
fimuls
jno
repz
jg
xor
fprem
je
nop
in
dec
push
in
fcoml
jno
adc
adc
and
push
push
fadds
inc
jge
stos
test
imul
stc
ffree
stos
movsb
mov
mov
jb
mov
fistpll
fcomip
pop
icebp
int
push
ret
jecxz
fisubs
add
adc
and
out
ss
and
jge
push
popf
pop
jno
inc
push
into
and
scas
pop
mov
inc
mov
dec
ret
jne
in
pop
loopne
sub
sub
push
aam
inc
jmp
icebp
push
nop
sub
imulb
scas
mov
lret
push
loope
fists
jbe
push
dec
fcomip
cld
inc
push
shl
int
cmp
sub
adc
imul
sbb
and
xchg
jbe
mov
pop
add
dec
imul
inc
sbb
jg
out
mov
push
or
out
push
mov
scas
iret
or
pop
adc
dec
shlb
sbb
add
les
rorb
loop
insb
inc
mov
mov
out
clc
mov
xor
push
adc
ficoml
inc
mov
sub
icebp
pushl
lock
sub
push
jmp
pusha
add
mov
jp
cmpsl
push
ret
mov
incl
mov
ja
cmp
enter
pop
mov
mov
stos
outsb
fcomip
das
xor
int
push
sbb
jo
ss
scas
addr16
push
mov
scas
cli
cmpsl
inc
mov
subb
std
push
test
bound
mov
fdiv
ret
mov
and
mov
dec
cld
inc
cmp
fwait
adc
or
cmp
sbb
inc
jge
and
movsb
cmp
xor
xor
shlb
jg
loope
dec
add
and
inc
int3
ss
dec
test
subb
ret
jg
mov
mov
mov
test
sti
aaa
inc
arpl
xchg
sbb
sub
pushl
push
cld
cmp
popf
inc
mov
xchg
xor
in
mov
ljmp
in
jno
pcmpeqb
mov
mov
inc
test
popa
out
xchg
cmp
rorl
lcall
sbb
int3
mov
mov
jg
sbb
std
sub
insb
xor
dec
adc
push
out
inc
outsl
or
cmp
push
clc
test
insb
outsb
push
cltd
insl
mov
push
pusha
call
roll
jb
ficoms
jno
rep
sti
xchg
imul
scas
mov
sbb
fadd
cwtl
ret
sub
and
lock
out
cli
outsb
addr16
insb
cli
sub
decl
in
add
mov
dec
cmp
mov
sub
cmp
ljmp
xor
xchg
insl
mov
inc
dec
mov
test
lea
add
addb
imul
sub
call
xchg
inc
inc
xor
cmp
cmp
and
fldenv
or
push
add
or
hlt
jmp
adc
mov
push
jb
nop
scas
jnp
pop
insl
xor
and
pop
mov
xlat
popf
es
faddl
pop
addr16
outsb
add
push
dec
sbb
pop
push
cmp
cs
and
fisttpll
xchg
bound
pop
lahf
sub
les
dec
xor
push
xor
cld
sbb
pop
dec
sub
xchg
cwtl
mov
outsl
cld
fldt
jbe
inc
adc
int3
jb
ss
jg
push
arpl
arpl
sub
in
loop
mov
cs
cwtl
cmp
fists
dec
pop
inc
rclb
jg
or
int3
xor
popa
mov
leave
ds
dec
rcrb
inc
xchg
sub
pop
adc
xor
sbbb
std
lahf
test
out
push
pop
repnz
inc
out
jmp
pop
cmp
push
imul
les
sub
mov
shl
call
adc
test
or
int
mov
xlat
js
jle
push
int3
add
decl
cld
jbe
mov
xor
xchg
decb
push
es
inc
test
sub
xor
call
ret
jl
pop
jbe
mov
scas
sbb
adc
sbb
jecxz
repnz
push
sbb
pcmpeqd
jae
dec
int3
aas
gs
lds
lcall
pop
fidivrl
decb
push
jecxz
loope
inc
out
mov
sub
pop
fists
decl
call
sbb
sbb
ss
in
std
or
leave
es
jb
les
or
mov
repz
out
cli
cmp
and
test
cmpsl
adc
cmpsb
cmc
cmpsl
xor
xor
sti
dec
gs
pushl
outsl
stc
push
pop
loop
jo
popa
mov
ljmp
shll
ja
mov
ret
cmc
incl
jle
xlat
mov
fwait
mov
push
push
jg
lcall
inc
shrl
aaa
push
sub
jb
sbb
enter
inc
lahf
push
pop
sbb
fs
mov
in
pop
xchg
lds
out
out
ss
add
clc
addr16
testb
lds
dec
ret
repz
xchg
rolb
cmpsl
popf
xchg
sub
pop
xor
dec
outsb
or
push
jo
cli
xor
fsts
dec
pop
clc
test
push
inc
mov
int3
cmpl
xor
loopne
fstps
incl
pop
mov
popf
in
sahf
xchg
sahf
pop
sti
mov
adc
test
jg
hlt
xor
and
call
mov
movsb
push
xor
mov
mov
pop
addl
iret
ror
inc
outsb
stc
bound
arpl
lcall
decl
or
fimuls
inc
and
sbb
add
adc
cmp
or
outsl
mov
loop
clc
scas
and
xor
cmc
pop
pop
loopne
fdivrl
in
mov
adc
mov
push
push
icebp
scas
cld
aas
clc
push
add
cmp
mov
aaa
dec
xor
push
data16
popa
mov
jge
stos
ffreep
push
inc
cmp
ficomps
pop
popf
sar
cmp
dec
pop
xchg
adc
data16
and
jl
nop
shrb
dec
shlb
mov
incl
movsb
jg
push
es
insl
dec
inc
mov
loope
lcall
cld
int3
add
sbb
push
pusha
lcall
inc
xor
mov
addr16
inc
or
mov
mov
stos
push
pushl
inc
sbb
nop
dec
add
sub
icebp
incl
jg
fwait
adc
mov
mov
cmp
scas
jns
inc
roll
dec
leave
inc
or
mov
ja
xchg
xor
loop
pushl
scas
push
and
inc
xchg
imul
adc
daa
push
mov
push
aam
sti
movsl
jge
sbb
sub
arpl
dec
lods
push
pop
push
ss
mov
cld
incl
adc
in
sbb
pop
or
bound
out
pushf
mov
fs
icebp
incl
and
push
mov
xchg
dec
imul
data16
mov
pop
dec
mov
sbb
stos
popf
xor
iret
scas
inc
dec
inc
jae
lock
jmp
addr16
add
test
lods
andb
fimull
add
call
arpl
jne
pop
lret
sbbw
pop
add
lock
jmp
pop
sarl
nop
cwtl
decb
cmc
das
jl
mov
in
daa
or
jbe
ljmp
jg
movsl
call
loop
fs
sbb
mov
call
test
enter
mov
cmp
aas
push
in
fistl
jbe
insl
imul
push
jl
es
jge
jl
jbe
insb
ret
std
ljmp
bound
outsb
xchg
xor
adc
cmp
insl
outsb
jecxz
out
or
ja
jo
gs
jo
clc
mov
cmp
sbb
jg
stos
or
out
sbb
add
push
ljmp
out
daa
loop
sti
xor
ja
stos
fmul
mov
or
je
sar
jg
orl
mov
adc
shll
imul
and
imul
and
cli
cmp
inc
push
enter
xchg
scas
dec
xchg
mov
or
test
mov
pushl
dec
add
pushf
xchg
xchg
lret
sbb
arpl
xchg
jle
icebp
insb
dec
ljmp
or
sub
repnz
push
push
incl
push
sub
pop
aas
repnz
loop
jbe
or
xor
inc
cmp
subb
outsb
clc
lock
mov
mov
test
aas
push
lds
outsb
push
sbb
xchg
adc
pushf
mov
sar
lea
sub
ret
xor
jnp
pop
lea
push
adc
xor
pushl
adc
je
push
cmp
sti
push
cmp
stos
mov
sbb
inc
jno
push
aam
jo
push
pop
insb
or
or
in
ficoms
cmp
sub
or
cmp
out
cmpsl
adc
rcll
and
fisubl
pop
pop
mov
add
mov
lock
loop
push
adc
pop
inc
pop
outsb
cmp
cmp
dec
inc
sahf
mov
outsb
mov
out
inc
sbb
decb
sbb
xchg
and
mov
ja
adc
aaa
mov
jle
test
adc
cld
pop
mov
xor
dec
mov
sbb
in
inc
jmp
cmp
push
movsl
ljmp
std
pushl
ja
pop
movsl
or
lahf
cmp
sub
out
cwtl
lcall
mov
mov
inc
xor
mov
push
lods
push
add
fcomip
jg
mov
mov
fiadds
jl,pt
push
imul
xchg
adc
xor
call
std
call
mov
aas
dec
lret
aad
jbe
sub
pop
dec
shlb
rolb
push
insl
repnz
incl
pop
rcll
xor
outsl
into
cmp
jge
or
pop
icebp
xor
roll
in
mov
enter
std
pop
loopne
fwait
pushf
shrl
filds
std
pop
push
out
xor
jno
or
clc
mov
sub
xchg
adc
mov
sti
test
dec
mov
push
js
or
mov
call
mov
sbb
sbb
inc
mov
icebp
es
mov
push
dec
add
pushf
popa
or
ds
andb
insl
cli
mov
mov
inc
push
icebp
addl
into
add
mov
xchg
lea
cmp
sbb
or
mov
data16
and
inc
jmp
mov
repnz
cmp
jo
or
sub
mov
decl
rorl
cmpsb
mov
vprotb
xchg
and
je
dec
stos
pop
hlt
lcall
pop
loope
outsl
rcll
xor
jns
xor
ficoml
dec
les
in
add
jge
push
jns
mov
dec
stc
jp
std
cwtl
add
stos
mov
jno
and
call
pop
push
in
add
jmp
xor
test
pop
dec
sbb
lret
mov
mov
jmp
lea
mov
in
mov
ret
mov
pop
pusha
lahf
push
cli
in
fwait
push
mov
mov
jo
and
addr16
jbe
add
out
cmpsl
push
sar
add
lods
lea
dec
push
cmp
data16
gs
jne
stc
or
sbb
data16
lcall
jge
push
addl
cmp
jns
add
push
inc
cmp
fisubl
inc
leave
cmp
or
pop
loopne
pop
aad
push
lcall
push
js
jns
pop
jg
pop
js,pt
or
data16
std
test
pop
in
inc
push
add
mov
mov
sub
fsubl
mov
or
out
add
cltd
sbb
int3
mov
or
std
jns
sub
mov
es
inc
cld
outsl
mov
out
jle
dec
faddl
xor
push
and
push
xchg
aam
pop
dec
out
adc
jae
pop
jb
pop
or
call
jmp
out
mov
xchg
lcall
pop
cmc
xorb
mov
xchg
or
mov
pop
sarb
mov
jbe
scas
repz
fnstcw
push
push
xor
pop
sub
cmp
pop
add
dec
int3
sbb
arpl
lcall
sbb
movsb
jns
and
sbb
iret
cld
imull
sub
imul
fs
xchg
adc
call
pop
and
jge
cwtl
insb
pop
loope
push
jg
lcall
je
sbb
mov
sub
or
push
jno
sar
js
pop
and
dec
jb
pop
movsb
inc
xchg
jmp
inc
popa
push
clc
fidivrs
dec
or
adc
push
push
aam
fildll
jb
sbb
fstpl
cli
adc
ja
sahf
inc
inc
mov
ljmp
add
lock
sbb
mov
add
adc
inc
sbb
cs
imul
mov
xchg
je
fs
imul
push
mov
jo
loopne
push
cmp
or
pusha
into
pop
adc
jp
xor
and
inc
icebp
lea
inc
daa
in
adc
xchg
lods
cs
pop
mov
out
outsb
clc
stos
test
xor
sahf
mov
pop
pusha
sub
in
sub
decl
aas
sub
shlb
aas
add
jg
lods
or
dec
jns
jmp
cli
pusha
repz
sbb
xor
sbb
ds
int
shrb
outsl
jle
xabort
jo
bound
jecxz
popa
repz
fwait
outsl
pop
pop
pop
lock
inc
cwtl
mov
jecxz
lret
push
insb
fsubrp
cmp
test
dec
jmp
pop
cmc
sbb
sti
inc
sub
sub
lret
insb
push
imul
dec
dec
cwtl
xchg
aaa
adc
mov
push
push
ds
mov
mov
mov
mov
lock
test
mov
push
push
mov
inc
rcll
jg
mov
imul
jns
mov
and
adc
jmp
lcall
inc
rcll
push
add
cmp
cmp
out
lret
sti
cli
push
in
roll
ss
push
aaa
psrad
incl
xlat
scas
sbb
inc
inc
and
decl
push
pop
and
cmp
adc
ds
pop
imul
inc
lods
and
hlt
xor
hlt
imul
stos
xchg
jbe
mov
outsb
inc
xorb
adc
push
mov
aad
lcall
cli
mov
popa
loopne
dec
out
xlat
push
in
ficoms
scas
xor
mov
mov
call
in
xchg
test
call
or
inc
add
add
fucomip
movsb
std
cld
mov
lcall
ret
push
push
cwtl
jae
adc
popa
addr16
inc
xor
std
xor
incl
push
push
nop
push
adc
xchg
mov
lds
inc
ja
decl
out
mov
cmpsb
push
sbb
xlat
pop
popa
dec
jle
inc
int3
add
cmpl
mov
in
popa
stc
aas
aaa
scas
sbb
arpl
add
or
in
add
jnp
xchg
inc
add
or
fnstenv
xor
mov
fstpt
adc
push
add
cmp
mov
add
or
mov
and
push
cmpsb
adc
loopne
push
inc
adc
jg
mov
ficomps
je
adc
mov
jbe
aas
out
cmp
pop
adc
xchg
sub
lock
pop
sarb
add
gs
popa
xchg
shll
jns
mov
js
jbe
out
add
sub
add
out
nop
mov
mov
fsubs
or
xor
dec
mov
mov
movsl
dec
sub
cmc
jg
loop
das
inc
out
jae
pop
cmp
or
mov
cli
cli
movsl
outsl
addr16
mov
cmp
add
mov
fstpt
ja
popf
cmc
imul
xchg
je
lahf
icebp
mov
lock
std
inc
inc
and
add
js
rcll
loope
gs
inc
adc
mov
in
add
pop
add
clc
push
xor
out
test
pop
loopne
loope
add
jle
stos
push
scas
xchg
mov
addl
cmp
add
mov
push
jg
flds
jb
jae
add
arpl
cwtl
and
mov
gs
cmp
out
and
mov
push
inc
cmp
fildll
fsubrs
jmp
clc
addr16
adc
mov
clc
popf
shlb
dec
pop
xchg
xchg
fsubl
sub
das
add
xor
add
mov
add
pop
icebp
lcall
cmp
jae
mov
mov
and
outsl
bound
and
fildl
jo
xchg
mov
and
test
pushl
popa
stc
jle
add
push
and
dec
inc
push
sbb
es
test
inc
push
cwtl
jo
rcrb
call
aas
and
sub
xchg
bound
ljmp
sbb
bound
inc
push
push
das
daa
or
pop
mov
jle
lcall
xchg
pop
push
hlt
jo
jmp
sbb
lcall
push
std
out
mov
push
addr16
insb
fnsave
nop
xor
mov
clc
push
das
insl
popa
lret
adc
mov
lret
pop
mov
out
mov
mov
mov
pusha
dec
ret
loopew
ds
and
mov
call
lods
aas
pop
popaw
aaa
cs
ss
call
jo
and
hlt
outsl
pop
sahf
inc
in
adc
xor
sarl
decl
adc
lcall
push
mov
pop
out
inc
push
fisubs
ja
cwtl
dec
ljmp
add
mov
out
sub
xchg
push
test
imul
fldcw
jns
cwtl
ret
es
mov
pop
jmp
test
mov
pop
push
pop
xor
icebp
daa
mov
cmp
add
pop
jae
fistl
pop
jne
mov
sbb
mov
push
inc
jmp
dec
inc
mov
xchg
int
fcomip
outsl
clc
gs
rcrl
ljmp
mov
inc
dec
pop
mov
mov
fildl
in
mov
sahf
dec
xchg
lds
std
mov
or
ljmp
xor
test
mov
cwtl
and
mov
jb
into
mov
push
xchg
cmpsb
scas
je
iret
jae
mov
jg
xacquire
rcll
push
xchg
mov
outsb
ljmp
xchg
xor
test
clc
mov
pop
cmpsb
out
fs
scas
cld
decl
adc
xor
xchg
pop
sahf
push
cmp
xchg
push
flds
mov
iret
mov
enter
jl
pop
xchg
pusha
jg
mov
aaa
pop
jmp
test
pop
pop
fldl
cmp
aas
das
popf
int
fiadds
xchg
icebp
incl
add
jl
pop
pop
js
adc
imul
mov
cwtl
lea
cmp
inc
jl
push
push
jle
cmp
inc
jg
imul
mov
pop
xchg
incl
nop
or
mov
push
add
cmpb
jp
inc
add
lcall
jae
sub
and
icebp
and
add
push
insl
dec
testb
lcall
adc
sbb
dec
adc
mov
and
push
loopne
stos
stos
cltd
adc
insb
cld
mov
jnp
jae
xchg
je
stos
sub
test
mov
mov
mov
call
sbb
test
add
and
lea
adc
push
stos
sti
imul
incl
sub
out
movsl
jns
inc
xchg
mov
inc
xor
lcall
mov
scas
in
lods
scas
push
fwait
jle
iret
xchg
add
loop
ret
mov
mov
arpl
ljmp
sar
popf
fildll
mov
mov
fidivrl
mov
iret
mov
pushl
addr16
and
lods
adc
pop
lods
mov
mov
cmp
fildll
sbb
jmp
mov
sub
adc
pop
call
rcll
push
mov
add
cmpsb
adcl
bound
mov
jg
ficoms
jns
xchg
add
inc
out
jnp
jmp
sbb
imul
lcall
jmp
pop
sub
imul
loopne
outsl
stos
push
jge
xor
pop
or
into
and
ficompl
fbld
mov
mov
gs
ja
lcall
lea
inc
mov
push
ss
pushl
or
mov
je
fistpll
pop
divb
inc
pop
stc
rclb
ja
jge
inc
outsl
jne
fdivrs
stos
rorb
data16
fidivrs
add
mov
fcoms
mov
js
repz
sub
mov
mov
out
cltd
sbb
mov
aad
inc
dec
or
mov
push
js
add
cmpl
xchg
loopne
mov
in
mov
push
jg
jmp
rcrl
adc
mov
loop
ret
lods
test
aam
inc
or
cmpsb
inc
mov
incl
mov
xchg
loop
mov
in
mov
ficoml
loope
xchg
incl
scas
sahf
mov
cld
cltd
mov
mov
popf
mov
xlat
sbbb
xchg
push
fsub
orl
mov
call
mov
ljmp
add
call
push
enter
repnz
mov
inc
push
jne
negb
fstpt
daa
mov
les
mov
cmpsl
pop
push
insl
mov
stos
ja
inc
js
lods
loope
xchg
test
inc
sub
gs
std
call
mov
pop
data16
push
aad
cbtw
xchg
fwait
and
inc
std
xchg
jg
lea
pop
mov
or
sbb
xchg
push
jne
push
clc
pop
jno
arpl
sahf
enter
and
fwait
xchg
std
mov
mov
testb
test
mov
sub
mov
arpl
xor
xchg
jbe
add
cmp
and
mov
loop
jl
push
mov
std
lahf
rcr
or
mov
mov
pop
xchg
or
mov
cmp
stos
cld
mov
add
pop
adc
adc
cmp
enter
jl
mov
dec
out
addr16
std
cmp
mov
add
mov
mov
push
int3
nop
insb
std
incl
dec
dec
es
mov
lods
pop
ss
fisttps
adc
scas
push
jmp
xor
inc
adc
test
mov
lock
push
out
nop
sbb
movsl
mov
or
call
mov
dec
out
ja
dec
xchg
adc
in
in
jae
mov
outsb
push
jbe
mov
inc
add
lcall
movsl
std
adc
popf
imul
push
lods
sub
push
jge
jo
shrb
fs
mov
pop
pop
xor
test
push
movsl
cmp
arpl
push
aad
dec
jmp
inc
pop
rolb
push
pop
adc
mov
dec
insl
sbb
mov
mov
outsb
ja
ds
insl
gs
idivb
or
push
jl
pop
bound
decl
or
rcrb
cmp
jns
pop
sbb
mov
outsl
cltd
sahf
xlat
xchg
sbb
outsl
fdivrl
jno
mulb
lock
das
rolb
pop
xchg
mov
cwtl
jmp
std
dec
daa
outsb
adc
jo
or
push
push
loop
mov
gs
jns
jno
mov
call
push
bound
hlt
cwtl
cmp
inc
pusha
testl
ljmp
pop
jmp
mov
imul
les
push
jno
mov
popa
ss
jmp
std
fistpll
mov
pop
lods
dec
inc
into
das
add
lods
add
sbb
into
aas
and
inc
loopne
inc
and
pop
lea
xchg
scas
rolb
mov
cli
call
repnz
bound
xor
mov
mov
shlb
lcall
mov
push
and
push
sbb
dec
divb
sub
shll
clc
pushl
mov
sbb
inc
clc
inc
or
aaa
popl
call
loopne
adc
mov
das
mov
insb
push
movsb
out
dec
stc
jl
cmp
icebp
es
and
mov
and
lcall
lcall
fs
fldcw
aas
jle
pop
dec
mov
cs
js
add
in
js
and
lcall
xchg
or
xchg
dec
push
add
jl
xchg
rcr
popa
dec
inc
call
decl
jno
gs
je
jb
jbe
dec
dec
pop
ret
jge
push
push
fstpl
je
push
out
pop
aad
jbe
mov
pop
jbe
mov
xor
jnp
call
imul
popa
arpl
cld
push
fisubrl
push
xor
inc
pop
ror
push
xorb
call
dec
sub
cmc
push
jb
mov
pop
fldt
inc
xchg
call
fdivp
cwtl
xchg
xchg
push
push
insb
push
fs
mov
jns
lock
inc
pop
xchg
dec
enter
addr16
je
cmpsl
mov
push
jp
outsl
cmpb
pop
ror
push
lret
sbb
cmpsb
xchg
mov
jg
jbe
loopne
pop
push
xor
push
nopl
jle
push
pushl
dec
rep
pop
xchg
shrl
jmp
jne
inc
data16
bound
pop
aam
addr16
insb
xchg
mov
fs
lods
je
rorb
test
sti
mov
call
add
cs
test
test
jo
lock
outsb
cmp
mov
adc
and
adc
bound
jno
call
mov
jg
push
and
jg
and
stos
das
pushf
push
fldt
idivl
das
aam
ds
movsb
ja
stos
sti
test
ja
mov
xchg
fsubl
sbb
cmpsl
test
cmc
lcall
fsubl
sbb
mov
inc
cmovne
stos
add
inc
jg
jg
xchg
test
inc
push
lock
push
add
cltd
pop
dec
and
incl
je
sub
rorl
dec
dec
push
sbb
sub
dec
jae
dec
jp
cmp
dec
dec
aam
mov
add
push
sti
arpl
stos
inc
sbb
or
lods
pop
mov
pop
cmp
inc
bound
mov
out
jl
jg
outsl
jle
push
xor
in
data16
dec
mov
pop
addr16
mov
incl
bound
roll
out
xchg
xchg
mov
add
xlat
lods
dec
insb
loopne
jg
pushl
test
push
idivl
ret
push
cmp
xchg
out
sbb
jp
xor
pop
adc
lea
xchg
jge
sbb
adc
lock
xchg
dec
arpl
mov
loope
xor
ljmp
xorl
insb
in
mov
pop
inc
aaa
pop
sbb
sahf
mov
jg
jmp
push
inc
cmp
mov
xchg
inc
bound
mov
daa
fbstp
scas
cmp
sti
or
add
xchg
and
dec
jmp
jle
mov
cs
repz
xor
mov
jmp
jnp
xchg
mov
shrl
and
mov
mov
jo
add
sbb
lods
cli
arpl
dec
lea
pop
inc
lcall
push
mov
test
sub
xor
ja
mov
or
jle
push
addr16
push
cmp
or
xchg
ja
and
decl
stos
mov
inc
xchg
xchg
add
pop
mov
lcall
sbb
adc
ds
push
fs
mov
or
jl
jmp
ret
outsb
add
scas
mov
lcall
mov
push
int
mov
mov
test
mov
mov
mov
or
call
mov
pop
cltd
pop
xchg
mov
and
cwtl
out
imul
pop
mov
das
cli
jg
push
push
add
cwtl
inc
cltd
mov
cmp
cmp
pop
xchg
inc
decl
xchg
push
mov
sub
dec
jne
xor
clc
or
lcall
jno
hlt
inc
pushw
ljmp
clc
jmp
pushf
mov
cmp
pop
dec
sarl
js
lods
jno
xchg
pop
test
xchg
mov
mov
mov
cwtl
in
imul
faddl
cld
aaa
fadds
test
pop
out
mov
cmc
dec
lcall
cli
fdivs
or
sub
fcomip
ds
sbbb
dec
imul
pusha
faddl
int3
cmp
lock
cmp
les
add
lods
mov
and
jnp
fadds
scas
and
xchg
pop
sub
hlt
inc
out
jb
cld
jmp
pusha
dec
scas
orb
js
push
decl
pop
dec
pop
popf
jp
daa
mov
mov
mov
dec
nop
mov
dec
fsubrs
adc
jmp
mov
pop
mov
decl
insb
repz
sub
sbb
xor
rolb
mov
xlat
lahf
pop
add
sbb
pop
ljmp
sub
lcall
subb
cld
xor
cmp
fsubrl
mov
pop
xchg
outsb
nop
and
inc
mov
scas
aam
ljmp
fistpll
imul
ret
ljmp
inc
lds
inc
aas
lret
adc
pop
frstor
pop
dec
inc
cmpsb
inc
lds
movsl
mov
outsl
adc
push
roll
inc
es
shll
dec
jo
outsb
sub
cmp
xor
sbb
ljmp
adc
les
pop
cli
add
mov
cli
ljmp
addr16
or
mov
out
or
pushl
add
sub
push
ret
jb,pt
cmp
jae
inc
aas
sub
sbb
jl
jg
lock
dec
lea
in
jns
js
jbe
inc
fildll
mov
scas
outsb
push
mov
add
cli
call
jg
or
xor
sub
mov
scas
adc
inc
punpckhwd
aas
stos
aam
imulb
mov
cld
xchg
lcall
fistl
pop
pop
out
dec
push
or
das
sarl
dec
arpl
xchg
ja
mov
push
add
jmp
pop
movsl
push
dec
dec
ret
push
adc
jbe
adc
fwait
dec
adc
push
int
outsb
adc
cmpsb
mov
inc
je
jp
lret
ljmp
add
jmp
mov
push
pop
jae
in
js
js
popa
je
mov
fldenv
jnp
push
out
gs
xor
les
call
cmp
sbb
jo
jp
add
ret
pusha
inc
dec
pop
lret
sbb
xor
jae
xor
mov
dec
je
or
jae
popa
mov
jne
scas
dec
imul
push
in
insb
push
jb
jecxz
out
ljmp
inc
push
mov
push
icebp
push
inc
arpl
and
add
sub
lcall
mov
jno
inc
dec
jge
jae
add
cmp
int
inc
lcall
cld
pop
icebp
xchg
dec
jno
shl
pop
dec
jne
pop
mov
or
decl
mov
lret
mov
loop
cmc
jl
jne
inc
mov
ds
pop
or
ljmp
jle
scas
insb
mov
push
or
push
inc
dec
mov
mov
sbb
pop
cltd
cmpsb
jg
decl
push
insl
push
rcr
pop
fwait
inc
pusha
popa
decb
call
mov
inc
insb
jge,pt
dec
movsb
insb
fs
lods
je
adc
push
pusha
dec
mov
cmp
insb
dec
dec
and
js
add
into
cmp
pop
sahf
cmp
and
in
mov
pusha
addr16
inc
jne
inc
inc
scas
std
loop
jg
clc
jl
sbb
jo
push
jo
decl
push
aad
mov
mov
xor
xchg
push
and
sbb
cmp
add
cmp
mov
jne
test
lods
sti
xchg
adc
ret
addr16
jg
jno
sbb
insb
stc
push
arpl
mov
sbb
lods
add
jno
cltd
scas
push
incl
insb
lret
push
adc
push
xchg
cmp
mov
out
and
push
lcall
lea
add
sahf
lods
movsb
je
ljmp
das
lret
mov
push
imul
addr16
into
pusha
jecxz
nop
mov
mov
repnz
and
loope
jg
jae
insl
popa
imul
out
xor
add
fwait
jecxz
test
add
jp
cs
shrl
push
or
add
in
jg,pn
adc
and
add
xchg
xor
int
test
push
add
xor
or
je
decl
push
adc
shll
inc
in
sbb
sub
mov
and
mov
out
daa
pop
add
loop
pop
or
xor
fcomip
andl
mov
mov
ljmp
push
or
mov
or
pusha
mov
enter
jle
or
shrl
repz
rclb
cwtl
mov
push
dec
cli
call
cmp
mov
mov
lea
cmpsb
xor
or
or
incl
cmp
sbb
loop
push
cmp
mov
sti
cmp
xchg
fwait
clc
ljmp
fimull
pop
sbb
push
ja
push
les
sub
xchg
pop
dec
in
pop
out
mov
ljmp
sub
pop
aam
fsubrs
inc
cli
fcmovb
sbb
jle
or
in
jae
popf
jno
mov
testl
fimuls
pop
pushl
xor
inc
outsl
cmp
lds
mov
sbb
lret
cmp
out
ljmp
fcompl
jl
xor
sbb
jbe
inc
adc
clc
cmp
ret
pop
jp
xor
and
jae
dec
ds
inc
repz
lret
outsl
ja
rolb
imul
fistpl
mov
bound
js
cmp
imul
orb
inc
std
ljmp
cmp
aas
test
add
mov
fists
jp
add
lds
add
lods
cmpl
dec
sub
add
js
lock
mov
ja
pop
aam
inc
push
inc
in
cmp
pop
add
lret
into
das
inc
mov
mov
jg
pushl
cld
sbb
sub
adc
mov
cmc
out
es
int
mov
mov
push
adc
fldt
bound
loopne
jg
pop
sbb
test
jo
mov
es
das
jmp
push
jo
cltd
push
push
ljmp
and
jl
mov
mov
scas
push
pop
ret
decl
sub
cmp
or
ds
pop
ficompl
inc
repz
adc
incl
out
add
popf
push
or
cltd
js
jae
jp
mov
cmp
push
call
cmp
jb
pop
callw
cmp
xor
pop
dec
jno
aas
repnz
sti
and
repnz
lret
lcall
push
testb
push
adc
mov
xchg
mov
iret
sub
pop
cld
fdivrs
inc
dec
ss
lds
mov
inc
outsb
jb
lcall
push
dec
mov
out
add
clc
add
out
mov
mov
adc
jns
sub
mov
push
mov
add
sarl
enter
add
pop
adc
dec
push
jns
mov
test
mov
cmp
ret
push
push
cmp
andl
mov
insb
xacquire
adc
daa
xchg
jmp
pop
repz
repz
dec
adc
inc
mov
push
pop
shrl
popf
push
mov
out
jnp
ja
gs
pop
loop
dec
sti
decl
sbb
cmp
mov
xor
fwait
push
lcall
inc
adc
mov
addr16
or
scas
sbb
bound
fstl
dec
out
push
dec
push
add
decl
mov
les
dec
insl
xchg
add
dec
sahf
sbb
jmp
lods
icebp
cmovb
cmpl
pop
mov
insb
push
inc
push
sahf
inc
xchg
xchg
jnp
push
hlt
mov
es
outsb
mov
cwtl
sbb
loopne
mov
decl
lcall
hlt
xlat
scas
adc
xor
mov
enter
add
xchg
inc
lret
lock
sbb
rcll
add
dec
mov
mov
dec
fisttps
fwait
or
icebp
stos
data16
repz
sbb
decb
js
jecxz
xor
fsubrs
mov
je
call
dec
mov
inc
in
mov
jo
lea
outsl
mov
mov
xchg
jmp
mov
sbb
dec
or
sbb
add
dec
sub
jne
push
jbe
aam
push
jle
imul
incl
push
cmc
ds
stc
mov
sti
adc
inc
cltd
mov
and
xor
out
cli
decl
ret
inc
and
cmp
jge
inc
cmc
daa
cltd
movsb
jo
xchg
loopne
decl
ficoml
outsl
pop
cmpsb
pop
inc
test
out
cli
adc
mov
cwtl
jp
pop
ljmp
pop
ret
das
dec
stc
movd
xor
push
inc
icebp
adc
cmp
cwtl
push
shlb
mov
cmc
insl
or
dec
fistpl
lds
gs
and
add
push
jne
and
sbb
jmp
inc
jb
cmp
mov
or
adc
sub
or
call
loope
mov
sti
mov
movsl
sbb
jmp
sbb
sub
jge
cmp
lods
xor
fisubrs
cmp
or
sub
sar
jg
lock
pushf
ret
dec
decb
mov
mov
inc
lret
ljmp
mov
add
sbb
repz
pop
mov
aas
lcall
fmuls
jns
inc
in
mov
dec
dec
dec
push
pop
outsb
inc
adc
stos
push
jle
mov
call
imul
pusha
push
in
push
fcompl
add
mov
pop
pop
add
mov
push
repz
ja
jno
adc
push
lret
aas
mov
jbe
hlt
shlb
push
pop
cwtl
push
movsb
xchg
sub
xchg
out
nop
cmc
xor
stos
mov
cwtl
jg
ss
adcl
repz
jg
mov
mov
jnp
jbe
xchg
icebp
pushl
rorb
and
push
pop
jecxz
dec
les
cld
imul
jae
mov
xchg
mov
add
jg
cld
pop
jns
xchg
test
cmpb
sub
fstpl
ljmp
xor
jle
adc
xor
adc
stos
lcall
lock
decl
lret
dec
fisttpl
jecxz
mov
test
repnz
fcomip
or
enter
sahf
or
sub
adc
mov
mov
mov
xchg
inc
and
cltd
xor
sahf
jne
inc
insl
jp
lcall
fisubl
inc
repz
mov
pop
mov
movsl
cmp
sbb
sbbb
mov
jmp
sub
sub
pop
push
add
mov
cld
jmp
dec
pop
mov
imul
and
mov
mov
mov
call
cmp
in
xor
and
xchg
mov
inc
out
jg
sbb
scas
mov
gs
ljmpw
dec
sbb
and
sahf
lds
lcall
insb
sub
add
stc
xor
jle
mov
sub
frstor
dec
jbe
pop
pop
jle
sahf
incl
jecxz
jnp
es
jns
pop
pop
pop
jp
test
clc
or
call
andl
stos
push
sub
scas
pop
xor
out
clc
into
mov
sbbb
xchg
ret
cmpsb
adc
mov
bound
incl
insl
lea
push
roll
pmulhuw
pop
and
cmp
nop
mov
fcomip
ljmp
pop
mov
je
pop
xchg
in
fs
adc
ljmp
dec
lea
pop
ljmp
push
fldenv
movsl
mov
scas
clc
lcall
movsb
or
xchg
mov
pop
sahf
out
mov
in
mov
jecxz
mov
jo
inc
addr16
push
sub
int3
mov
and
dec
adc
mov
out
mov
mov
inc
pushl
stos
mov
repnz
xchg
add
cmp
xchg
xchg
call
stos
inc
mov
out
push
add
push
ja
dec
adcl
popa
mov
daa
inc
mov
add
jg
daa
pop
imul
hlt
ljmp
pop
inc
std
xchg
add
push
inc
mov
xor
sub
jg
aaa
int3
test
arpl
mov
addr16
xchg
insb
xlat
movsb
cwtl
xor
gs
gs
scas
sti
mov
jecxz
es
pop
jle
push
test
arpl
ja
push
push
sbb
dec
cmp
call
test
pop
call
mov
test
in
dec
mov
in
push
sub
xchg
add
add
scas
inc
outsb
ja
cltd
js
lcall
decl
movsb
mov
mov
sarb
push
jmp
xchg
lahf
lahf
lahf
fwait
inc
sbb
insl
fcmovnu
je
divb
dec
scas
ss
sti
cmpsl
test
sbb
repz
cwtl
js
nop
jl
js
push
mov
loop
mov
mov
ja
xchg
push
dec
loop
inc
push
jp
adc
lods
cmp
mov
sbb
ljmp
fists
mov
cmp
mov
pop
push
pop
mov
les
ffree
sub
jg
ljmp
in
adc
in
dec
push
lock
cmp
testb
pop
loopne
jbe
push
adc
jne
mov
and
xchg
cmp
cli
lcall
jb
cmp
mov
andb
mov
add
ljmp
daa
mov
test
and
xorb
into
lods
inc
xchg
mov
inc
divl
aam
jns
mov
sub
adc
jb
mov
and
fistl
push
inc
loop
inc
roll
lds
pop
and
fbstp
push
push
jbe
jo
imul
add
rorl
or
sbb
inc
add
adc
aam
pop
add
xchg
mov
and
arpl
push
inc
call
push
int3
gs
inc
sbb
cmpsl
jae
out
mov
and
cltd
push
pop
stc
sahf
insb
std
fdivp
dec
jb
push
out
decl
cs
dec
jne
in
js
inc
xchg
stc
push
jmpw
out
and
lahf
jno
adc
pushl
stos
dec
adc
popf
rorb
inc
inc
clc
or
xchg
dec
lret
push
ret
mov
incl
and
shlb
mov
sub
movsl
enter
jp
inc
inc
out
decl
outsb
icebp
jo
mov
mov
addr16
pop
sbb
mov
dec
rorb
jg
pushl
sub
arpl
jns
adc
popa
lods
fstpl
mov
jp
into
push
jns
les
ret
sbb
mov
adc
xlat
add
out
cltd
int3
and
mov
ljmp
mov
clc
xor
das
bound
xchg
int3
xor
lret
sub
mov
out
lock
jp
jae
fadd
jne
jg
mov
divb
pusha
in
jnp
into
mov
cmp
lods
call
ret
inc
repnz
ljmp
out
dec
fsubl
xor
push
inc
iret
pop
dec
cmp
cmpsl
mov
cmp
adc
arpl
push
incl
push
shlb
incb
data16
fildll
incl
inc
test
ss
movsb
mov
jno
mov
sti
mov
cmpb
stos
mov
nop
scas
inc
repz
aad
jns
mov
cwtl
mov
aad
leave
gs
cmp
jg
lock
in
mov
push
and
rorl
inc
rol
incl
mov
in
popf
ret
movsl
fsubrl
inc
fisubrs
repnz
jb
pushl
mov
call
gs
lret
aam
mov
in
data16
insl
add
inc
lods
mov
out
dec
rorb
adc
lea
mov
ror
fcmovb
and
test
sub
add
daa
pop
mov
or
mov
fs
dec
movb
sahf
xchg
test
lea
jne
call
cmp
leave
inc
inc
and
push
jae
aam
push
std
pop
pop
ret
gs
xchg
in
jmp
divb
sub
imul
fcom
fistpll
push
sbb
aaa
ret
dec
lret
fisttps
ljmp
ficompl
add
aas
pop
jnp
adc
pop
loop
ret
pop
shll
jbe
outsb
loope
inc
mov
pushl
lret
enter
dec
push
xchg
aad
data16
cs
pop
cwtl
call
adc
sub
jge
sbb
jmp
inc
int
insb
mov
sub
sub
cmp
jno
cs
pusha
jmp
arpl
loope
cmp
dec
rorl
xchg
mov
arpl
std
push
sahf
jbe
adc
and
call
xchg
addl
nop
add
mov
jmp
push
add
push
cmc
push
icebp
fs
bound
add
cs
ja
lods
jne
mov
xor
add
scas
addr16
js
scas
jp
and
test
test
scas
popa
add
xchg
call
int
hlt
sti
xchg
js
inc
hlt
aad
sti
scas
outsb
add
mov
jl
std
int
gs
mov
ljmp
pop
lret
sbb
mov
iret
fs
push
enter
or
decl
pop
fldt
dec
mov
jmp
jbe
xorb
and
rol
out
clc
stc
outsb
push
loope
les
fldenv
je
cmpsb
imul
jno
mov
loope
imul
mov
cmp
mov
ljmp
jl
data16
cmp
dec
xlat
pushf
outsb
add
pusha
mov
cmp
jmp
cmp
inc
arpl
int3
dec
pop
sbb
dec
data16
inc
jle
ljmp
inc
fisttpl
rorl
incl
cld
fmuls
push
fistpl
repnz
pushf
fistpll
filds
call
add
iret
mov
out
sub
les
jecxz
imulb
lahf
lods
in
data16
call
rolb
les
repz
popa
popa
int3
and
mov
incl
insb
jmp
test
dec
loop
je
add
xor
cmp
mov
cs
int
out
out
je
jno
and
es
or
pop
mov
clc
jecxz
push
push
xchg
cmpsb
jne
mov
inc
clc
incl
cld
test
mov
inc
cltd
xchg
fnsave
out
add
add
mov
outsb
addr16
stc
jg
mov
dec
cmp
aad
adc
ret
push
mov
into
pop
enter
pop
sub
fbstp
jecxz
imul
aaa
push
stc
mov
int
push
ljmp
std
stos
mov
cld
inc
sti
push
ja
inc
cmp
ds
dec
mov
das
jae
mov
in
add
test
mov
sbb
movsb
call
pushl
sti
arpl
fbstp
or
add
jmp
cltd
mov
repnz
insl
lret
notb
call
int
mov
insb
inc
clc
and
jo
jmp
bound
lcall
imul
dec
pop
dec
out
push
js
fbld
clc
sub
push
into
ds
jl
push
push
stc
imul
jmp
sub
dec
int3
add
push
out
and
int3
popa
in
pop
fdivrl
aaa
cld
dec
aas
test
inc
or
pop
ret
xor
jno
sub
les
in
mov
mov
clc
insb
decb
fidivrs
jecxz
addr16
push
out
mov
ss
inc
rclb
dec
out
sub
or
repnz
call
sti
ds
loopne
imul
ret
and
sub
inc
leave
cmp
lret
call
shrb
inc
fstps
imul
imul
pop
push
pop
mov
xchg
mov
cmp
in
mov
test
xor
cmp
stos
and
push
dec
inc
pusha
aam
addr16
ljmp
push
gs
xchg
loopne
ds
jge
arpl
sub
ja
mov
mov
add
cmp
lea
adc
xchg
cmpsb
mov
lock
jg
ret
les
xorl
sub
cli
sub
arpl
pop
jb
std
cmp
cltd
mov
pushl
mov
dec
pcmpeqd
sbb
sub
arpl
decl
mov
jb
arpl
and
pop
das
push
and
lea
mov
mov
mov
fwait
inc
fwait
and
call
sbbb
test
sub
push
jmp
icebp
mov
push
dec
daa
mov
cmpb
sub
mov
inc
jp
mov
pop
dec
daa
cwtl
jl
add
pop
mov
sbb
sti
xchg
jae
out
xchg
sub
cmpsl
adcb
gs
call
push
je
daa
push
xchg
cmp
mov
adc
out
pop
mov
dec
push
pop
cmp
jmp
jmp
in
mov
cmpsb
and
inc
dec
push
push
and
cwtl
xlat
bound
lcall
jae
or
sbb
lahf
jg
xor
jbe
arpl
stos
fstpt
iret
cltd
pusha
jg
xorl
ret
out
mov
lahf
fildll
fdivp
mov
xor
in
add
outsl
bound
mov
mov
test
loop
mov
add
pop
adc
sub
ficomps
cld
pop
lods
cmp
add
and
aas
xor
adcl
push
imul
mov
gs
cli
ret
incl
ss
dec
push
lods
cltd
mov
out
sub
scas
and
in
sub
incl
fcompl
dec
mov
bound
add
mov
adc
pop
rcr
das
jl
mov
inc
sub
cmp
add
adc
mov
xor
adc
inc
pop
sbb
sub
sbb
inc
and
cmc
mov
pushf
icebp
fcomip
insb
adc
mov
push
push
stos
mov
shll
test
xchg
xchg
loope
outsb
pop
inc
call
inc
push
mov
scas
and
mov
ljmp
jb
and
push
lea
xor
nop
dec
es
add
mov
inc
adc
adc
cmp
push
ret
popa
adc
mov
scas
movb
adc
repnz
add
pop
adc
inc
jo
push
cmc
pusha
cmp
jecxz
daa
ja
lea
leave
mov
lcall
adc
and
pop
test
movsb
adc
mov
xor
js
ds
dec
popf
or
pushl
add
xchg
add
lea
cmp
jecxz
inc
adc
decl
cmpsb
dec
add
lods
pop
jb
cltd
fucomp
cwtl
lcall
cmp
mov
daa
xchg
out
xor
mov
fcomip
push
sahf
and
add
fstpl
js
add
test
stos
scas
das
mov
mov
jb
mov
pop
sbb
push
inc
pop
sarb
mov
xchg
sbb
or
push
push
mov
shrl
adc
pop
call
sbb
adc
mov
movsl
push
popa
cmp
inc
js
test
mov
repz
mov
inc
lret
push
sbb
jle
mov
test
cmp
sbb
icebp
lods
clc
ja
dec
push
icebp
mov
mov
call
movsl
mov
pop
jo
sub
pop
xorw
push
cli
mov
add
sahf
pop
mov
mov
ljmp
cwtl
or
bsf
in
inc
fdivrl
bound
repnz
pop
stc
pop
cs
lds
out
out
out
cli
inc
push
mov
push
rcr
lcall
lahf
mov
sub
mov
jmp
pushl
popa
jae
push
dec
loopne
mov
push
add
test
mov
lods
test
mov
out
out
dec
scas
inc
nop
movsl
xchg
jge
jg
jmp
mov
xor
lods
and
mov
outsl
js
pop
pop
dec
insl
nop
dec
inc
jbe
cmpsl
pop
mov
sahf
jmp
mov
adc
rcll
and
jg
pop
dec
jl
repnz
jbe
cmpsb
sbb
rorb
cmp
cltd
mov
ficompl
test
push
in
outsb
rorb
push
daa
jb
ss
push
mov
sbb
xchg
incl
sub
lcall
call
push
cmp
and
pop
mov
dec
sbb
sar
decl
fldenv
popa
sbb
xor
mov
test
rcrb
inc
mov
insl
xchg
cs
daa
shrb
pop
xchg
ds
xchg
xor
jp
fcomip
push
inc
adc
pop
or
sbb
xor
aad
pop
ds
sub
cmp
mov
xchg
sbb
mov
push
or
cld
incl
add
scas
lcall
push
cld
mov
incl
cld
adc
xchg
mov
inc
decb
arpl
push
gs
sbb
loop
rcr
cld
shrb
push
or
or
in
dec
cwtl
jne
and
call
decl
push
fcmovu
jmp
dec
movb
lret
scas
clc
jle,pn
push
xchg
mov
adc
xor
aaa
add
pushl
imul
popa
scas
pop
ljmp
cmp
scas
sbb
pop
int
pop
push
push
xor
mov
cmp
inc
and
sub
imul
icebp
mov
dec
rclb
push
sbb
adc
ret
add
repnz
jg
pushl
xor
sti
nop
gs
xchg
gs
push
nop
mov
aad
add
mov
add
sbb
push
decl
lock
xor
sub
xchg
cmp
ret
lcall
push
xor
jbe
adc
mov
jg
cmc
mov
addr16
adc
add
mov
xchg
add
decl
pop
fs
pop
sbb
mov
bound
mov
pop
neg
iret
push
dec
push
xor
fldt
sbb
push
and
mov
lods
test
mov
pop
push
mov
push
push
sbb
test
gs
jecxz
mov
lock
adc
or
out
cmp
int3
add
pop
inc
lret
decl
pop
xchg
into
cmovns
or
sahf
inc
into
and
popa
sahf
ja
leave
arpl
push
add
mov
xchg
add
mov
in
jle
inc
divl
sar
adc
data16
add
cwtl
xor
repz
insl
push
ljmp
sbb
xlat
cmpsl
push
mov
cwtl
push
mov
pushf
fwait
xchg
das
testb
popa
in
sahf
push
cmpsb
add
mov
imul
cmp
call
cwtl
add
outsl
bound
ja
push
sbb
xchg
iret
mov
out
sub
call
jns
add
cli
or
out
jnp
repnz
jns
pop
hlt
pop
xor
mov
pusha
fwait
mov
and
sub
jg
loop
cmp
dec
lea
test
icebp
sub
fisubl
pop
mov
push
fcomps
cmp
push
sub
orb
mov
loopne
lcall
shrl
jns
inc
stos
aaa
jb
or
aas
mov
pop
pushf
and
sub
mov
icebp
fnstsw
dec
stos
or
xor
add
pop
xor
cmp
sub
call
push
ret
push
sub
ss
cmp
mov
test
ljmp
lcall
sbb
iret
pop
dec
xor
push
shlb
adc
adc
into
or
jmp
mov
sbb
add
jmp
mov
add
js
and
and
stos
dec
mov
cmc
xor
sti
fabs
or
add
fmull
scas
adc
out
xor
push
pop
cld
in
ljmp
adc
inc
imul
repnz
sub
sbb
pop
inc
inc
dec
adc
insl
out
mov
jle
in
decb
xor
in
push
data16
push
pop
cmp
decl
inc
mov
dec
into
adc
push
add
fbld
rorb
inc
mov
lds
lock
das
add
movsb
xor
ljmp
mov
leave
xor
shll
mov
xor
xor
push
mov
jmp
cmp
repnz
pop
mov
std
mov
fs
mov
mov
sub
test
fld
cli
pop
or
xchg
lea
add
rcrb
sbb
sub
scas
pop
ret
mov
cmc
lds
scas
clc
in
adc
add
gs
push
lds
pusha
sti
mov
out
pop
xchg
clc
xor
xchg
xchg
mov
lods
dec
roll
iret
mov
pop
lock
movsl
es
sub
std
sub
jg
test
adc
xchg
xlat
adc
push
sub
decl
std
mov
push
inc
nop
mov
mov
mov
push
inc
lahf
inc
lds
pop
adc
sahf
pop
hlt
call
std
sub
mov
test
jno
xor
push
fwait
mov
sahf
cmpsb
std
add
sahf
mulb
in
ljmp
mov
jle
lds
mov
icebp
addl
and
cmp
sti
xchg
pusha
repz
and
pushl
mov
and
xor
xchg
icebp
scas
cmp
push
lret
mov
mov
mov
push
imul
mov
mov
js
pop
jnp
out
add
shlb
xchg
xchg
sbb
mov
ds
and
out
test
mov
fmul
xchg
dec
repz
jno
cmp
pop
push
out
jo
xchg
jne
push
clc
lcall
push
daa
enter
xchg
scas
xor
sub
test
or
jecxz
incl
lds
dec
xor
out
push
mov
mov
inc
je
push
lcall
ret
rcl
or
xor
stos
lcall
sub
lods
push
cs
addr16
sbb
push
cld
ljmp
fsubr
inc
sbb
jb
dec
es
and
das
test
xchg
xchg
in
dec
clc
jg
icebp
mov
in
mov
cmc
sbb
aaa
shl
push
mov
flds
out
xchg
fwait
repz
jg
mov
pop
ja
sar
xchg
and
push
cmp
mov
mov
loop
inc
dec
sub
test
push
adc
aam
xchg
cwtl
call
xlat
push
mov
mov
mov
cmpsl
mov
lret
ja
rolb
cmp
xchg
cwtl
mov
jl
and
sbb
cld
incl
imull
xchg
sahf
mov
mov
sbb
jnp
jle
pop
mov
adc
xchg
add
icebp
decb
mov
dec
fdivr
pop
test
cmp
call
dec
sar
adc
xlat
or
loop
xchg
mov
add
jbe
ret
outsl
fsubl
lcall
loopne
mov
cmc
lds
and
cmp
scas
sbb
lods
test
ffree
xchg
mov
and
xor
in
fs
jno
addr16
pop
std
add
push
imul
push
out
push
sub
cmp
stc
xchg
aaa
sub
inc
jmp
mov
aas
lcall
mov
mov
jne
movsb
lcall
jne
add
jae
push
addr16
sarb
adc
sarb
jl
std
sbb
fisubl
jge
or
decl
adc
mov
jns
aad
xchg
frstor
mov
lock
mov
sub
cmpsl
mov
in
mov
lret
mov
clc
adc
pop
jl
stos
pusha
test
xor
es
shlb
jg
lcall
aad
jle
xchg
arpl
jbe
cs
xor
imul
lret
mov
xchg
out
push
cmpsb
stos
ja
incl
lock
pop
fldt
cmp
adc
addb
lods
xchg
icebp
xchg
sbb
aad
inc
fcomip
out
sub
adc
daa
push
cltd
stc
cltd
xor
fadds
pushl
jb
mov
mov
jl
jbe
cwtl
xchg
pushf
scas
mov
leave
and
fisttpll
popf
sahf
push
test
push
rclb
push
and
negb
jne
mov
jnp,pt
outsb
fsubrl
push
jmp
pushl
pop
loopne
jbe
push
sarb
jno
lahf
cmp
lcall
jge
mov
arpl
data16
xchg
inc
xlat
sbb
fsubl
stos
iret
sarl
aad
pusha
mov
add
xchg
inc
movsb
pop
dec
cld
sbb
fistl
push
mov
push
push
testb
shr
mov
lcall
pusha
lret
out
push
sbbl
mov
decl
cltd
inc
mov
adc
icebp
pop
jns
out
jecxz
filds
mov
lock
imul
das
es
push
cltd
and
loopne
aaa
scas
mov
pop
cmp
push
and
mov
mov
or
add
and
sub
mov
aas
pop
mov
cli
lahf
out
arpl
mov
popa
sbb
mov
jge
push
push
mov
aaa
cwtl
mov
lds
sub
add
out
xchg
daa
jns
mov
add
ds
sbb
mov
ljmp
es
out
hlt
pop
lea
or
lcall
adc
divps
ret
mov
mov
cld
xor
xchg
adc
test
cmp
mov
add
les
dec
and
stos
loopne
xor
cmp
ljmp
add
mov
xor
rsm
outsb
stos
mov
js
or
or
pusha
repnz
inc
test
or
mov
jmp
ret
sub
xor
and
in
dec
jnp
lea
lea
lods
push
clc
cmpsb
test
rcl
xor
jmp
xchg
hlt
add
cmp
fidivs
pop
jg
hlt
dec
xchg
sti
push
xchg
push
insb
adc
mov
mov
pop
inc
clc
adc
es
mov
cs
lcall
lds
fstpl
lea
cltd
fdivrl
ret
push
dec
out
xlat
pop
mov
xor
cmp
dec
mov
gs
sbb
test
mov
jmp
jbe
mov
push
dec
imul
mov
outsl
js
hlt
mov
mov
add
sbb
adcl
aas
nop
xchg
sub
popa
and
bound
inc
sbb
push
sarb
pop
mov
add
js
jb
loope
xor
je
dec
pop
lea
push
jg
sbb
cmpl
movsl
dec
mov
lahf
mov
sbb
pushf
cs
lods
cld
mov
sbb
ljmp
mov
pop
sahf
loope
mov
mov
mov
mov
test
cmpsb
pop
push
les
mov
push
xchg
xchg
jl
xchg
aad
mov
adcl
and
lds
arpl
lds
popl
mov
arpl
scas
xchg
jg
mov
and
and
bound
mov
mov
inc
aaa
jecxz
jmp
mov
dec
cmp
insl
sbb
inc
and
fcomip
lcall
cmp
cwtl
and
jo
ds
push
add
loop
sbb
push
pop
mov
dec
xor
mov
js
loop
ljmp
dec
mov
mov
ljmp
pusha
jnp
jge
ljmp
xchg
mov
lcall
dec
cmpsb
push
fs
push
xor
lcall
les
cmp
loope
jne
mov
enter
push
sahf
inc
jle
outsb
sub
mov
push
lock
dec
pop
jbe
ljmp
jle
mov
adc
daa
xchg
xchg
inc
in
dec
inc
xchg
insl
jae
movsl
call
je
mov
or
clc
movsl
aam
xor
dec
or
aas
cli
popa
push
jns
sub
xchg
jle
popf
inc
push
test
inc
push
fmuls
jmp
dec
lods
imul
mov
jb
lods
arpl
inc
jae
stos
dec
mov
scas
mov
call
cld
jo
mov
fs
pop
xor
push
repz
push
gs
cmpsl
cmp
cmp
ret
jno
int
je
jg
sub
mov
xor
push
js
xchg
push
loopne
mov
ds
jo
xor
pop
imul
xlat
test
inc
push
sub
decl
jo
cmp
inc
arpl
subb
data16
stos
fdivp
test
fbld
es
lret
add
js
cmp
mov
call
cmp
sbb
mov
mov
sbb
jno
mov
scas
jbe
orb
gs
jns
fdivr
or
das
sar
add
in
cmpsl
push
out
cmp
rcrl
in
nop
lock
adc
call
fldl
mov
inc
xchg
push
jecxz
jge
dec
sahf
jp
xchg
scas
cmp
lock
call
xchg
sbb
fisttps
dec
in
push
jno
inc
push
popf
lcall
outsb
cli
mov
mov
add
clc
call
inc
sbb
xchg
dec
jp
ljmp
and
jbe
scas
insb
inc
clc
jmp
dec
push
push
mov
mov
insl
sub
lods
mov
adc
ljmp
xchg
pusha
add
jae
lret
xchg
jb
pop
sbb
mov
mov
cmp
ljmp
jns
jecxz
sub
adc
rcrb
cmpsb
pop
push
push
dec
test
loop
cs
or
jns
xorb
test
enter
mov
cmp
jbe
test
mov
outsl
aam
push
jg
and
loope
fwait
mov
fnsave
js
mov
leave
fildll
xchg
adc
adc
outsl
sub
out
mov
sbbb
cmpsb
mov
cmp
movsl
adc
mov
mov
ss
mov
out
push
xor
cmp
inc
arpl
ljmp
sahf
cmpsb
adc
imul
outsb
fisubl
das
shrl
pop
or
ret
mov
pop
aaa
push
lods
shlb
jbe
mov
mov
nop
add
clc
pop
test
mov
jns
mov
test
rorb
inc
scas
inc
pop
xor
lcall
test
and
adc
xor
cmpsb
data16
incl
xor
mov
pushf
lods
mov
push
fisubrl
ljmp
xchg
fcoml
cmp
cli
cmp
in
je
mov
sbb
adc
lcall
and
cwtl
jb
test
out
or
jns
lcall
jp
xchg
dec
pusha
incl
cmpsl
ja
sahf
mov
ret
push
pop
xchg
lcall
pushl
dec
mov
sahf
stos
adc
push
scas
cmpsb
mov
mov
test
dec
pop
adc
jg
jg
enter
cmp
fcoms
std
xchg
aas
jge
cmpsl
mov
push
jne
in
ret
stos
jns
aaa
jns
popa
pusha
idivb
add
jg
dec
addr16
add
stc
fcoml
sti
push
inc
addr16
cmpsb
ds
jb
ljmp
fistpl
popa
jno
test
dec
dec
pop
and
popf
rcll
js
dec
sar
mov
cwtl
int
pop
pop
jp
outsb
loop
sbb
inc
push
add
pop
and
ljmp
jb
sub
call
or
sub
cld
int
jae
inc
xor
decl
inc
jl
inc
or
lds
pop
arpl
pop
jmp
pop
aad
mov
mov
into
xchg
xchg
dec
or
arpl
add
ds
in
lock
adc
insb
inc
mov
mov
jb
loope
aaa
inc
ja
add
mov
pop
mov
lret
sub
mov
shrb
push
das
pop
outsl
add
popf
aas
xchg
stos
mov
sbb
jnp
mov
sar
add
lahf
enter
outsl
sbb
dec
mov
sub
call
xchg
mov
jno
xor
ja
ja
clc
cwtl
mov
push
cmpsb
jno
jbe
dec
call
pop
nop
std
mov
jp
jb
mov
mov
cwtl
and
cmp
jmp
lods
adc
mov
or
xchg
sub
add
inc
cwtl
sub
fisttps
insb
dec
pop
shll
cltd
mov
add
pop
mov
outsb
fcmovne
cmpsb
shrl
hlt
ja
call
mov
cld
add
or
jg
or
jb
dec
dec
js
cmp
inc
test
and
dec
jecxz
jmp
pop
psubsb
outsb
mov
sub
xchg
or
mov
jg
cmp
xchg
jno
xlat
jne
test
xor
fdivr
inc
loop
and
push
xchg
mov
jne
mov
pushf
mov
outsl
push
jns
dec
add
xor
adc
cmpsl
sbb
cmp
jl
push
scas
jecxz
push
push
std
mov
xchg
jmp
lcall
in
push
popa
ror
lock
xor
insb
xor
push
jle
incl
add
cmpsl
push
mov
mov
ja
sub
push
jge
mov
adc
stos
out
dec
jg
das
nop
pop
in
and
mov
fwait
sub
data16
loopne
inc
ret
lods
xor
fsts
or
movsb
lods
sbb
das
push
push
frstor
jns
pop
lods
lcall
mov
test
repz
push
jge
data16
shlb
call
test
sarl
adc
sarl
mov
jmp
js
xor
jnp
out
fsub
imul
mov
ret
jmp
mov
adc
inc
sub
pop
ficoml
das
mov
sub
mov
add
lcall
jmp
push
jae
dec
stos
repz
into
lcall
stos
cmp
inc
inc
stc
sub
adc
shl
adc
cmp
movsb
lods
mov
lock
jg
mov
movsl
gs
sub
mov
pop
jmp
mov
fidivs
inc
in
cmp
inc
push
ret
ret
incl
and
ds
adc
lods
mov
rcrb
xor
adc
fnstenv
xchg
ja
add
aaa
dec
mov
push
movsl
xor
pop
xor
cli
mov
dec
cmpsb
minps
or
lcall
pop
mov
adc
adc
jb
push
das
dec
out
repz
das
jns
inc
lds
and
xchg
or
pop
cmp
sbb
or
dec
js
mov
ljmp
rorb
mov
lret
xor
loope
cmpsl
mov
repnz
pushl
mov
out
mov
fists
nop
push
dec
jp
mov
das
add
nop
arpl
add
sbb
xor
mov
call
pop
clc
sbb
lods
xlat
fwait
mov
dec
lock
mov
push
mov
and
adc
mov
pop
mov
sbb
pop
imul
cltd
aaa
pop
testb
test
cli
data16
rclb
push
or
mov
scas
clc
fistps
jg
or
movl
cs
incl
jb
and
in
push
cmp
dec
push
int3
jg
add
sbb
mov
je
mov
incl
dec
rorl
fiadds
insl
pop
es
pop
jb
inc
jge
inc
inc
enter
call
push
ss
mov
addr16
clc
add
adc
orb
aaa
callw
pop
xchg
sub
mov
jmp
repz
xor
stos
xchg
inc
insl
movb
es
mov
jae
mov
and
xchg
hlt
or
mov
fsubrl
mov
jg
in
adc
pop
out
sbb
lea
outsl
outsl
xchg
adc
popf
xchg
mov
xor
inc
stos
aad
lcall
shl
out
add
or
andb
icebp
das
scas
test
lret
jl
jbe
add
fldl
mov
fwait
xor
cli
or
mov
sbb
cmp
lcall
dec
clc
adc
adc
movsl
int3
cli
ljmp
notb
add
addr16
jge
mov
push
push
mov
xor
das
sbb
sar
incl
dec
xor
push
aas
pop
sub
stos
mov
cmp
js
mov
push
rolb
mov
mov
sbb
dec
xchg
adc
cmp
add
je
mov
jl
aas
push
lcall
bound
jmp
mov
lcall
xchg
sbb
shlb
mov
xchg
mov
push
add
and
lret
mov
testb
cli
ja
nop
sti
xchg
call
movsb
nop
jbe
lods
das
std
das
add
call
cmp
push
jae
fwait
jae
adc
lret
mov
inc
arpl
outsb
imul
fisubs
loopne
pushl
sub
shll
cmp
mov
push
lods
push
cmp
movsb
shlb
xchg
mov
push
sar
sarb
push
data16
mov
dec
fsubr
movsl
movsb
lock
xor
inc
mov
out
loopne
mov
das
xor
stos
cmp
pushf
xor
jg
loopne
jmp
sbb
mov
jmp
mov
mov
insl
data16
ljmp
js
push
aas
pop
sub
je
call
sahf
jo
push
pop
arpl
gs
dec
xor
lea
push
mov
or
push
mov
mov
negl
jbe
rep
clc
pushl
test
jo
pop
add
dec
inc
in
mov
stos
push
xchg
mov
stos
or
and
lds
cli
ljmp
dec
jp
jbe
inc
jle
dec
arpl
sbb
nop
xchg
mov
xchg
mov
and
pop
and
cwtl
lcall
push
push
lcall
adc
arpl
mov
fistps
mov
nop
mov
das
cltd
add
jbe
aam
sub
stos
mov
mov
incl
sub
xchg
mov
dec
incl
jmp
push
pop
xor
mov
sbb
mov
repz
jle
mov
push
mov
rorb
fwait
xor
hlt
stos
jmp
js
imul
out
je
outsb
push
jp
ret
mov
inc
pushf
ret
jg
loope
pop
cmp
lret
bound
push
lds
jmp
andb
push
jo
div
insl
inc
or
out
push
inc
adc
lcall
fstl
ret
push
ja
jne
scas
xchg
sarb
lods
push
dec
add
pop
pop
lea
or
mov
loop
inc
push
jp
cmp
sub
js
jg
and
push
std
mov
cmp
lock
out
dec
imul
pusha
cmp
mov
mov
lods
fwait
jo
dec
call
inc
mov
dec
aad
jg
orl
xchg
sti
push
cmc
push
pusha
cld
fildll
pushl
pop
sar
pusha
pop
iret
aaa
inc
dec
push
cmc
jo
inc
addr16
adc
xchg
lods
xchg
cmpsb
mov
out
add
stos
lret
stos
adc
mov
jge
jg
xchg
sahf
xchg
cs
or
xchg
lret
mov
dec
lahf
pop
adc
ja
clc
decl
and
cmpsl
jns
loope
push
lods
scas
sub
ljmp
outsb
xchg
push
jl
xchg
pop
test
mov
mov
ss
out
xchg
andl
fists
mov
or
rorl
dec
cmp
mov
das
mov
ficoms
cmc
jmp
in
pop
mov
cmc
jmp
aad
gs
ljmp
popf
adc
rclb
notb
ret
or
call
adc
ret
pop
inc
js
or
cmpsb
push
xor
cltd
fwait
mov
scas
xor
adc
dec
add
push
mov
mov
mov
pop
dec
sub
jnp
cmpsl
lcall
or
add
xor
loope
sub
mov
mov
xchg
xor
incl
cmpsb
shrl
addr16
pop
mov
cs
icebp
out
dec
add
add
or
add
scas
mov
jns
dec
stos
mov
in
dec
popf
gs
or
daa
cmp
fwait
data16
mov
add
and
push
mov
dec
incl
cmp
mov
sbb
push
decl
out
bound
popa
loope
dec
pusha
pop
shll
jp
cld
loopne
stc
outsb
jo
pop
xorl
je
pop
pushf
xchg
add
dec
fimull
js
out
mov
pop
jp
es
call
push
dec
repz
outsl
shrl
mov
gs
push
mov
ljmp
inc
ret
jo
popa
pop
ret
and
dec
or
ja
cld
push
faddl
inc
leave
dec
out
and
leave
jo
mov
mov
ja
lea
popf
xor
pop
mov
shrl
sub
mov
mov
clc
ljmp
lock
jnp
je
jp
insb
push
pushl
adc
lock
movsl
push
inc
push
aad
insl
imul
xor
mov
pushl
push
push
scas
xor
lret
movsl
add
jo
sbb
fs
pusha
push
pop
es
sar
ljmp
push
pop
arpl
add
xor
pop
xchg
loopne
enter
sbb
lods
popl
aas
ret
imul
sbb
fisubrs
data16
ret
jns
and
jg
arpl
mov
mov
dec
push
int
push
jno
jmp
lds
in
push
insb
adc
pop
sub
jecxz
inc
pop
cmpb
xchg
aam
std
mov
xchg
adc
adc
and
ds
push
cwtl
fadds
out
pusha
push
pop
std
outsb
pushl
idivb
test
push
hlt
ss
lret
mov
imul
sub
cs
arpl
stos
xor
nop
cltd
add
mov
jg
das
or
push
xor
mov
jae
call
push
mov
inc
repnz
mov
enter
jg
hlt
dec
cmp
push
aam
popw
nop
adc
fs
inc
sahf
aad
incl
subb
push
sub
mov
pusha
leave
adc
fcomip
decl
mov
jl
mov
imul
pushl
popf
mov
mov
dec
xor
fdivr
adc
push
out
ljmp
push
cmp
cmp
cmc
or
push
adc
or
jno
jno
add
jmp
push
jne
mov
cmpsl
mov
stos
pop
repnz
loopne
push
icebp
xchg
push
jp
les
adc
loopne
clc
xchg
out
jno
outsb
jb
and
cmp
pop
filds
or
stos
jl
pop
push
cltd
lret
movsb
and
movsl
test
fildll
pop
sbb
test
push
sahf
fsubrl
lock
test
and
lcall
sbb
push
enter
mov
movsl
sbb
lds
xor
orb
push
pop
adc
sub
mov
jo
and
push
cmp
xor
decl
jp
mov
add
loop
fs
mov
popa
xchg
jmp
lcall
repz
stc
push
push
mov
shrb
jno
lret
inc
fs
inc
fs
lcall
push
pop
cltd
push
pop
or
idivl
push
test
lods
mov
push
dec
add
ljmp
sub
decl
add
dec
xchg
sbb
pop
les
xlat
popf
outsl
push
rolb
jo
cld
or
aas
pop
push
fnstenv
or
dec
jb
js
stos
std
inc
data16
out
push
mov
mov
jmp
push
loope
psrlw
fsubrl
sub
xor
mov
lcall
ds
pop
push
inc
repz
int
mov
pop
decb
ljmp
mov
jg
sub
lcall
loopne
adcl
negb
xchg
insb
mov
and
jg
insl
mov
je
dec
adc
dec
sbb
mov
scas
lret
push
xor
push
inc
cmp
push
and
or
mov
es
mov
les
cwtl
out
dec
push
add
fwait
movsb
cmp
stos
inc
inc
push
mov
inc
into
adc
push
push
xor
xchg
mov
mov
mov
int3
fildll
mov
mov
aas
std
mov
or
test
jg
add
sbb
outsl
testl
inc
add
pop
inc
pop
adc
call
mov
xchg
cmp
mov
or
jb
out
lods
aas
pop
jecxz
lret
mov
dec
lret
push
das
sar
or
loopne
xchg
mov
imull
decb
scas
push
jg
sub
mov
shlb
lret
cmp
and
sbb
push
test
xchg
xchg
adc
in
push
dec
ljmp
aad
mov
inc
cmpsb
inc
sbb
ds
insl
jle
inc
stos
mov
xchg
test
jbe
pusha
mov
int
pop
addr16
cmp
push
push
cltd
je
xlat
shl
mov
pushl
jns
pop
jne
and
sub
pusha
shlb
repz
or
adc
incb
stos
mov
inc
call
ja
imul
in
lods
and
jbe
cmpsb
dec
int3
pop
pop
jne
sbb
scas
clc
call
mov
fimull
push
add
sbb
and
sbb
mov
loop
mov
sbb
jg
lock
add
push
push
mov
ds
mov
mov
jge
jle
test
into
inc
fidivrl
xor
cltd
pop
cwtl
jl
add
addl
movsb
incl
outsb
jb
ja
mov
cli
jg
sub
lret
mov
aas
cs
xor
in
inc
arpl
mov
fidivl
jb
sahf
adc
xchg
aad
call
mov
push
scas
sahf
mov
dec
pop
pop
jl
or
sub
cmp
push
push
mov
jne
add
sub
add
cmp
adc
pushl
mov
outsl
mov
push
add
fisubrs
cltd
xor
mov
ljmp
add
stos
xchg
xchg
mov
jmp
aaa
nop
sbb
jl
loope
jns
lcall
inc
push
pop
int
je
out
fwait
cmp
pop
fldenv
xor
inc
dec
add
lcall
or
fisubrl
cwtl
int3
mov
inc
and
pop
movsb
insl
fadd
addr16
mov
mov
fwait
clc
mov
xchg
loope
inc
sbb
pop
leave
lock
popf
xor
fstps
pushl
cmpsb
jb
add
sahf
dec
test
push
int3
inc
adc
cmpsl
mov
inc
push
fwait
xor
test
dec
data16
call
std
xchg
outsl
bound
stos
dec
mov
iret
mov
iret
mov
push
stos
xor
sub
stos
mov
incl
sub
test
in
test
pop
dec
ljmp
sbb
enter
ja
clc
sub
lea
mov
xchg
push
mov
scas
push
cmpsl
cmp
jae
aaa
dec
push
das
push
nop
ljmp
ss
jl
test
or
adc
push
lcall
loopne
mov
pusha
xlat
mov
jmp
jge
jbe
es
ss
addb
ret
scas
ljmp
fistpll
or
cmp
call
gs
mov
leave
filds
cmp
or
bound
mov
sbb
subl
ljmp
cmp
gs
dec
push
movsl
pop
push
iret
dec
xor
scas
shrl
das
mov
dec
enter
out
inc
scas
pop
push
adc
adc
decl
push
lods
cmp
xor
scas
xorb
call
jae
jg
hlt
xchg
sub
insb
mov
inc
mov
xchg
or
in
pop
icebp
stos
inc
rorb
mov
rol
pushl
dec
mov
pop
lret
stos
sbb
das
and
push
mov
jle
dec
pop
scas
ss
sahf
sub
repnz
inc
test
cmp
cmp
mov
cmp
or
mov
gs
sub
xor
pushl
shufps
xchg
leave
xchg
xor
stos
enter
mov
sub
add
xor
call
mov
mov
sbb
cmpsb
testb
movsb
fdivr
jg
or
popa
or
fldt
sahf
or
enter
cltd
dec
test
es
xchg
mov
incl
xorb
add
and
inc
ret
add
lea
test
popf
mov
push
inc
lcall
inc
ss
sub
cmp
ljmp
movsb
push
and
cmp
add
in
xchg
add
mov
jae
jecxz
or
jmp
les
xchg
inc
bound
xor
mov
cmc
fbstp
jle
xchg
xor
sbb
test
cmc
call
mov
pop
xchg
pop
mov
out
mov
ja
clc
lcall
scas
jp
jo
test
mov
jg
mov
rcrb
js
jnp
ja
lret
arpl
das
scas
dec
mov
adc
cmpsl
mov
lcall
repz
daa
and
cmp
je
fstpt
lcall
adc
das
cmpsb
cld
ds
icebp
mov
mov
divb
outsl
pop
push
cwtl
iret
xor
incl
or
leave
sbbb
pop
dec
jne
add
scas
repz
mov
in
mov
push
outsb
inc
gs
stos
jp
mov
and
cmpb
ds
loope
inc
ljmp
pop
imul
clc
popa
sbb
pusha
clc
out
adc
pop
sub
push
shrd
movsl
in
xchg
outsb
dec
js
iret
xchg
push
pop
add
mov
xchg
jg
cmpsl
inc
insl
adc
call
adc
mov
outsl
add
fildll
push
popf
jbe
push
xor
je
xchg
inc
lret
fwait
movsb
clc
xchg
and
das
xor
jbe
pop
push
orb
js
cmp
fcoms
fdivl
lods
aaa
daa
xchg
inc
inc
inc
roll
out
cli
jmp
mov
xor
les
je
subl
fsubs
add
sbb
fs
dec
imul
or
lcall
add
mov
jmp
arpl
xor
aam
addr16
orl
mov
add
sbb
mov
jo
jno
sbb
fs
and
pop
mov
pop
dec
xchg
pop
and
ljmp
mov
loop
mov
sti
or
out
pop
inc
xchg
add
icebp
jnp
jb
push
xchg
mov
sbb
movsb
sub
insb
push
sub
jno
jae
ljmp
pop
push
mov
insb
iret
pop
leave
insl
pusha
pop
dec
aas
pop
and
mov
sub
mov
fwait
and
mov
sbb
es
push
loopne
mov
jbe
and
cmp
pop
jmp
push
pop
lea
cmp
add
jmp
pop
mov
push
ficoms
aas
pop
jo
or
sub
jns
popa
loop
fs
mov
add
icebp
add
pushf
mov
push
push
cmpl
aad
sbb
decl
std
jne
outsl
stc
push
imul
push
push
or
rcll
hlt
outsl
jp
movsl
scas
sub
inc
lret
je
sub
or
pop
scas
repz
ret
jmp
incl
jb
mov
inc
rcrb
addr16
add
jge
lea
fildll
jo
mov
push
push
xchg
and
addl
sub
or
ret
and
arpl
pusha
fldcw
ljmp
or
mov
ret
sub
jge
xor
xchg
xor
or
subb
mov
mov
xor
std
shrb
rolb
mov
scas
mov
enter
andb
outsb
jb
pusha
stos
dec
sahf
inc
stos
popa
mov
mov
out
clc
and
xchg
sarl
sub
rdmsr
or
movsl
sbb
cmp
shrb
lcall
or
cli
fwait
imul
pop
decl
or
jge
and
push
imul
clc
add
push
nop
sbb
nop
fcoms
cmp
sub
mov
pop
xor
dec
and
int3
xchg
out
and
pop
mov
call
sub
insl
lea
xor
sub
jmp
ljmp
cmp
ret
push
cmc
addb
add
mov
insb
clc
incl
adc
or
cmp
adc
xor
mov
add
ljmp
shll
int
push
xor
cmpb
popl
dec
clc
incl
es
testb
pop
dec
sbb
sahf
xor
and
add
and
or
les
pusha
inc
mov
or
fstl
inc
mov
add
pop
imul
scas
xchg
mov
pushf
inc
loopne
push
dec
loope
outsl
xchg
sbbl
addl
cmpsl
sbb
mov
mov
cli
test
lcall
mov
daa
cmpsl
rcrl
dec
dec
xchg
dec
test
loope
into
mov
decl
mov
cwtl
or
add
into
and
jne
jg
or
sub
les
iret
mov
pop
mov
aaa
inc
ret
sub
push
add
cld
scas
test
lret
hlt
push
inc
or
sbb
or
fs
decl
es
adc
add
xor
adc
and
clc
clc
out
mov
sbb
fldcw
cltd
pop
out
ljmp
xor
repz
popf
pop
pop
stos
dec
pushf
lret
lods
and
add
cli
outsl
pop
add
xor
mov
add
nop
xor
mov
pop
loop
inc
rcrl
das
outsl
push
inc
inc
xchg
aas
xchg
jnp
incl
ds
pop
lcall
dec
xchg
or
clc
decl
test
mov
retw
jbe
outsb
cmpsb
xor
insl
add
xchg
les
or
es
or
clc
fwait
or
mov
mov
pop
popf
imul
test
mov
data16
sub
mov
fsubl
push
movsl
adc
lcall
xchg
adc
xchg
inc
stos
and
test
mov
loop
ljmp
xchg
daa
icebp
pop
mov
sbb
es
fimuls
cmp
incl
or
pop
xchg
dec
cmp
lock
lds
test
adc
filds
xchg
rorl
rcr
add
into
das
mov
adc
das
lods
out
pop
cmp
lods
mov
jg
xchg
mov
test
les
mov
lea
push
sahf
arpl
pop
inc
test
or
mov
jmp
call
cmp
jg
or
push
ljmp
push
add
or
outsb
pop
inc
arpl
insl
push
cmp
cs
xor
pop
push
adc
ljmp
mov
dec
adc
or
or
or
adc
or
pop
and
mov
and
add
hlt
in
cmp
cld
repz
lcall
pop
pop
ss
ret
add
xchg
and
dec
ret
pop
ljmp
mov
or
mov
loop
jecxz
jg
mov
pop
push
lods
gs
into
loop
lcall
ret
jge
inc
sahf
sti
xchg
pop
fimull
mov
fldenv
mov
lcall
outsb
andl
cmp
jne
stc
lods
inc
rolb
dec
fsubr
jg
incl
mov
mov
ljmp
sbb
push
ljmp
sub
fdivr
sub
xor
mov
into
cmp
fildll
std
adc
sti
sub
jp
and
mov
sbb
incl
or
and
stos
pushf
mov
enter
jge
sub
out
sbb
loopne
dec
cmpb
or
jne
hlt
rorb
jp
mov
cli
pop
xchg
out
mov
ljmp
xchg
in
push
js
loope
mov
shrl
push
jge
and
sbb
ljmp
call
jmp
mov
push
push
negb
add
cmp
cmc
mov
scas
mov
jmp
pop
inc
clc
jmp
xor
aad
popa
adc
nop
adc
add
push
call
mov
add
adc
lret
add
sahf
cmp
popa
inc
jns
out
or
sar
jle
and
sub
jg
fsubl
in
mov
pushf
pop
and
iret
xchg
xor
ret
or
sbb
sahf
in
cs
sbb
js
fcomip
pop
lods
sbb
pop
and
test
adc
sbb
push
cltd
incl
xchg
pop
mov
mov
jo
dec
xchg
call
pop
lea
mov
push
cmpsb
sbb
addb
sahf
lea
jnp
fidivl
pop
add
push
cmpsl
cmp
ds
mov
cwtl
bound
sbb
and
sbb
dec
pop
dec
or
pushl
cmove
call
repz
pop
xchg
inc
sbb
mov
das
pushf
sbb
sbb
popf
call
stos
rcrb
cmp
cmp
mov
push
ljmp
xchg
cmp
add
cmpl
sub
ds
aaa
std
call
sahf
push
cmp
sub
js
outsb
sahf
rcll
jle
xor
pop
xor
leave
mov
outsb
test
ds
das
xor
aas
xchg
xor
mov
jge
decl
sbb
leave
pop
mov
xor
popfw
into
adc
mov
cmp
adc
aaa
inc
inc
stos
std
sbb
sbb
popf
pop
and
and
nop
hlt
xor
cmp
scas
sbb
call
pop
inc
inc
mov
add
and
sub
loop
call
test
aaa
adc
pop
mov
sub
add
push
mov
push
add
jmp
pop
mov
or
iret
mov
dec
mov
and
or
and
sahf
sbb
nop
divl
inc
jbe
ljmp
decl
daa
cwtl
xor
add
lock
insl
mov
daa
sbb
cmp
mov
ss
adc
mov
push
push
ds
mov
mov
aaa
mov
adc
jmp
mov
js
fldenv
push
daa
add
cmpsb
xor
ds
pop
sub
outsb
mov
call
sbb
cmp
scas
js
arpl
mov
adc
cmp
sub
sbb
sbb
xchg
cmc
cs
shrd
xchg
xor
and
dec
flds
enter
or
aaa
ljmp
sub
inc
mov
and
xor
adc
dec
ljmp
dec
test
push
or
and
and
data16
aam
repz
sar
cmp
xor
xor
lret
aas
inc
loop
add
fpatan
add
call
ss
xchg
sbb
sahf
sbb
lcall
inc
in
add
stos
push
mov
pop
xchg
xor
pop
dec
outsl
mov
mov
sub
xchg
and
cltd
call
lds
and
fs
stos
vmovsd
xor
xchg
pop
jg
ffree
int3
fimull
sbb
cmp
movsb
scas
jbe
scas
not
enter
ja
push
mov
add
adc
mov
ljmp
and
jo
push
push
sbb
rcrb
cmp
dec
pop
xchg
leave
lret
js
fcoms
pop
pop
fcompl
sarb
jmp
and
mov
fdiv
loope
sub
add
add
pop
jmp
rcrb
test
adc
in
adc
insl
mov
popf
pop
jnp
ljmp
inc
sbb
mov
fdivr
ljmp
repz
jmp
xor
ret
shlb
pop
mov
pop
stos
adc
insb
xor
pop
lcall
inc
sbbb
dec
movsb
or
push
call
cmp
mov
lock
loopne
jb
push
mov
push
push
xchg
cmp
vpshlb
xor
mov
push
icebp
xchg
in
add
mov
pop
sub
clc
out
das
sahf
daa
xor
inc
aad
cmp
xorb
les
loop
and
outsl
lock
xchg
cmpsb
xchg
mov
add
sub
movsl
out
cmp
lods
pop
add
test
push
hlt
sub
push
ljmp
and
cltd
mov
sbb
sahf
lret
mov
les
push
loop
mov
mov
push
arpl
mov
fstp
clc
fdivrs
xchg
cld
mov
ja
fbld
jecxz
xchg
lcall
das
xor
in
lods
popl
add
ljmp
adc
pop
and
or
lcall
cli
push
or
mov
fistl
ret
jae
roll
das
int3
out
sub
shlb
mov
pop
pop
adc
lods
pushf
sahf
xchg
mov
mov
or
adc
dec
lods
sbb
cltd
sub
mov
or
mov
inc
rolb
dec
fstp
sub
aaa
mov
mov
out
mov
scas
hlt
xchg
movb
add
arpl
and
and
data16
jnp
mov
aas
sbb
aas
fists
dec
negb
pop
imul
cmpb
mov
pop
pop
jl
dec
addr16
jo
cltd
loopne
fdivr
adc
xor
mov
ds
xlat
lret
or
sub
stc
mov
add
pop
mov
loopne
test
dec
add
and
ficomps
ss
mov
cmpsl
pop
add
bound
jg
push
and
push
pushf
ljmp
jbe
outsb
xor
cmp
sbbl
iret
repnz
cwtl
cs
decl
daa
pop
popf
out
lds
push
in
or
sahf
aaa
jp
js
cmpsl
scas
xor
test
incb
sbb
push
or
test
xor
lcall
xor
add
subl
add
loop
jecxz
jl
xchg
mov
ljmp
fistps
rcll
jo
aam
cmp
inc
adc
and
in
sbb
pop
sbb
adc
dec
adc
loopne
add
adc
dec
push
or
lock
in
scas
add
xor
js
idivl
inc
aas
clc
pop
cmp
xchg
mul
cmp
fbstp
push
push
xor
nop
dec
xor
cmpsl
jno
pop
push
in
fs
xor
lods
push
mov
xor
imul
stc
inc
sarl
cwtl
mov
test
push
sbb
lret
pop
mov
dec
jecxz
fcomip
incl
jl
jl
xchg
dec
inc
filds
mov
adc
cs
adc
scas
push
jge
mov
push
and
ja
add
xchg
ljmp
shrb
mov
mov
shrb
sbb
xchg
int3
push
and
cld
inc
arpl
ss
clc
or
lahf
sub
cld
fists
xorb
sbb
into
mov
repz
add
in
outsl
jb
dec
mov
push
sbb
or
outsb
inc
adc
xchg
or
sub
or
push
jo
dec
push
cmpsl
push
cmpsb
sar
jmp
and
bound
adcl
cmp
xor
or
or
je
sbb
sbb
scas
rolb
arpl
or
jg
lock
nop
sub
repnz
push
ja
xor
dec
push
mov
rclb
das
xor
mov
call
pop
cld
mov
sbb
jle
inc
pop
or
jns
xor
cli
call
arpl
jl
dec
cmp
push
mov
xchg
xchg
mov
pop
xchg
mov
dec
jl
xchg
mov
in
and
adc
pop
add
fbld
inc
repnz
mov
icebp
outsl
test
inc
lahf
cmp
movsb
mov
push
loopne
fsts
filds
pop
jmp
pop
pop
add
xor
pop
push
decl
cwtl
fstl
inc
add
push
cmp
cmp
sub
sub
add
or
push
dec
mov
sbb
lock
cmp
int3
aas
cltd
and
stos
arpl
sub
or
jmp
push
inc
or
pop
and
dec
and
jbe
in
test
int3
ljmp
in
addr16
sbb
adc
adc
xchg
sbb
jg
stos
sub
sbb
and
arpl
movsb
xchg
sbb
pop
nop
cmc
pop
cld
push
or
dec
adc
or
xor
hlt
pop
add
jmp
inc
cwtl
pop
adc
inc
jmp
fwait
int
sahf
ret
adc
clc
add
das
sbb
int3
mov
and
adc
sub
pop
sub
or
in
clc
incl
in
inc
sub
mov
cmp
incl
or
ds
adc
daa
pop
push
loopne
add
scas
out
inc
and
or
call
xchg
push
mov
jno
lds
imul
push
or
push
mov
icebp
add
jmp
inc
fs
xchg
push
mov
lahf
push
add
jge
jl
mov
sub
dec
adc
sbb
or
scas
and
fbstp
jne
dec
call
stos
push
or
nop
pop
aaa
jge
lcall
aas
mov
in
rclb
jecxz
dec
int
out
outsl
rcr
pop
js
test
jg
lock
leave
pop
mov
ljmp
fcos
incl
jnp
dec
les
pop
ret
aas
insb
cld
or
stc
arpl
adc
sbb
decl
pcmpgtw
test
xchg
icebp
imul
pushl
imul
and
jb
rol
incb
sub
lock
sbb
xchg
sub
outsb
push
and
ret
ret
mov
lret
ficomps
xor
xlat
push
xchg
sub
mull
fucomip
lock
inc
stos
mov
cwtl
dec
movsl
and
add
mov
adc
pop
jno
xor
pop
std
dec
xor
int3
xor
cmp
xchg
loopne
cld
stc
sub
jne
imul
clc
jne
out
dec
push
lds
push
push
pusha
and
jl
mov
adc
das
jle
mov
fwait
cmp
aad
sbb
hlt
stos
inc
faddl
popa
outsb
sbb
jg
ja,pn
repz
dec
sbb
adc
sbb
fidivl
pop
std
mulb
fildll
lods
popf
fnsave
push
dec
adc
scas
out
push
adc
lret
push
dec
pop
xor
jns
cld
jg
adc
jae
jl
jnp
inc
fsubrl
addr16
incl
or
jb
aaa
mov
xor
or
shll
lock
bound
inc
popa
jo
xor
sahf
xor
xchg
ja
clc
push
outsl
adc
dec
filds
or
outsl
cwtl
push
sub
out
mov
sahf
lcall
adc
push
mov
jp
adc
mov
xlat
mov
xchg
mov
dec
std
fcomip
pushl
imul
xchg
cmp
cmp
and
pop
pusha
pop
dec
cmp
sub
sahf
xchg
add
ljmp
out
jb
into
mov
mov
mov
ja
clc
jg
add
sti
cmp
dec
lds
incl
sub
add
push
jo
or
aas
mov
or
dec
push
aam
push
leave
lcall
dec
ljmp
and
cmp
pop
sub
and
in
clc
gs
lea
jle
add
add
fdivr
das
nop
icebp
test
sub
sbb
les
pushl
or
sahf
repnz
jae
jmp
roll
out
stos
scas
adc
xor
decb
in
ljmp
lcall
pop
int3
and
cmp
cmpsb
clc
xchg
loopne
lods
cli
addr16
lahf
push
and
mov
cld
lcall
decl
dec
inc
jp
mov
sub
dec
aam
adc
inc
sbb
int
mov
in
sub
js
js
and
xchg
xor
add
int
nop
stc
mov
js
je
add
xchg
inc
imulb
jmp
mov
mov
adc
in
inc
call
sar
cmp
movsb
mov
rorb
jo
and
sub
jg
fsts
aad
add
ror
mov
insb
mov
je
iret
lds
call
cmpsb
and
fst
lret
inc
movsl
sbb
stos
mov
scas
mov
repz
mov
fisubl
addb
lods
out
lods
into
repz
mov
lret
sub
shl
ljmp
fldt
ret
out
out
xchg
stos
fwait
add
and
sarb
test
and
out
out
dec
aaa
mov
movsl
movsl
jle
mov
add
inc
out
pushf
mov
test
cmp
sbb
jg
dec
push
xchg
xor
xchg
js
in
add
outsl
push
in
enter
inc
pop
xchg
fcoml
or
sub
push
ja
cmc
test
lds
popa
xchg
outsb
mov
stos
out
scas
lcall
lcall
jb
xor
lcall
ljmp
cld
scas
nop
ja
add
cmp
cmp
or
mov
sar
inc
mov
scas
call
jl
js
cld
cmpsb
mov
insl
push
xchg
addr16
cs
mov
ljmp
loopne
sbb
clc
push
push
addb
jnp
jnp
lcall
decl
sahf
jecxz
mov
adc
push
and
jg
inc
adc
lahf
jge
dec
and
or
inc
dec
dec
sub
jb
jne
jbe
dec
std
outsl
xor
push
mov
inc
je
icebp
cmpsl
sbb
out
sbb
call
cwtl
mov
das
fs
sub
arpl
ficoms
ja
and
aas
das
xor
call
jne
movsl
std
sub
fdivr
call
data16
cli
push
adc
insl
xchg
sbb
js
fidivrl
push
pandn
loope
fistps
push
dec
in
adc
pop
jo
popa
incl
sub
movsl
or
cli
sahf
pop
stc
xchg
cmpsl
inc
push
insl
dec
fldenv
jo
jp
icebp
xor
jo
incl
xchg
adc
gs
insl
inc
lret
mov
cmp
mov
bnd
mov
and
cmp
xor
rcrl
sub
mov
push
cmp
lds
or
jp
lcall
outsl
sub
arpl
popf
stos
lea
jne
icebp
xchg
stos
or
push
pushl
clc
je
icebp
test
sbb
iret
xchg
stos
mov
fistl
push
jo
dec
mov
scas
adc
xlat
stos
xchg
mov
insb
xor
jbe
and
lock
clc
pushl
fnsave
cmp
xlat
xchg
mov
pop
inc
inc
push
mov
bound
mov
call
pop
loope
or
fistpll
mov
add
popa
sti
loop
xchg
test
mov
and
lds
outsb
pop
int
imul
dec
jg
add
outsl
jl
lea
ja
or
cmpsb
sbb
mov
ss
roll
cmp
test
int
sahf
xchg
decl
inc
inc
inc
push
inc
mov
xor
repz
imul
clc
xchg
int
outsl
jmp
inc
cmc
xchg
insb
xor
das
inc
dec
push
repnz
xchg
jb
push
dec
nop
xor
mov
incl
movsl
and
scas
cmp
mov
ljmp
test
shll
dec
arpl
push
or
push
cmp
jle
cmp
int
xor
dec
test
mov
inc
mov
hlt
cwtl
mov
arpl
mov
fs
and
pop
ja
xchg
arpl
addr16
mov
enter
ljmp
incl
pop
xchg
push
push
sbb
adc
xorb
or
ljmp
ljmp
roll
inc
mov
mov
lcall
popf
adc
sahf
or
in
or
mov
out
in
inc
or
enter
pusha
cmpsb
mov
loopne
jmp
mov
inc
pushw
xor
inc
fisttps
nop
push
sbb
adc
xchg
mov
gs
test
scas
jl
cmp
cmp
jae
decl
xchg
fnstcw
or
bound
incl
xchg
push
or
or
fwait
adc
call
xchg
test
mov
scas
jae
sub
cmp
lcall
add
add
es
mov
pop
dec
sbb
incl
mov
cltd
inc
lods
mov
out
xor
insb
loope
aas
sarb
ljmp
mov
mov
dec
movsb
mov
aam
jns
arpl
mov
jecxz
pop
imul
es
decl
jmp
push
ret
push
push
inc
data16
sub
mov
mov
sarl
fisubrs
jne
xor
add
popa
cwtl
cmp
fbld
aaa
jno
sbb
ja
xor
or
decl
call
xchg
inc
fimuls
mov
shlb
test
imull
js
push
in
push
push
sbb
add
mov
js
xor
mov
xchg
pop
stos
xchg
dec
sti
add
xchg
and
pop
dec
les
push
std
adc
xbegin
sub
push
xor
mov
call
push
inc
sbb
and
imul
cmp
movsl
pop
sbb
xchg
lock
cmovb
ljmp
lret
mull
aam
pop
sahf
jns
sub
lds
add
pop
adc
pop
push
daa
mov
lcall
xchg
xchg
mov
jno
dec
push
js
subb
adc
jecxz
inc
hlt
cmc
adc
out
int3
jle
icebp
jge
cs
lods
std
cmp
jp
rclb
loopne
jg
fsubl
pop
pop
mov
in
mov
sbbb
or
push
inc
call
push
mov
arpl
gs
jle
lods
mov
stc
cmp
pop
test
lea
call
aad
mov
sub
sahf
leave
mov
pop
xchg
mov
xchg
mov
fildll
sbb
cmp
and
jmp
add
gs
push
dec
in
xor
push
jne
test
sbbl
lock
lret
popf
sar
jg
aas
and
mov
rcl
js
pushf
xor
sti
mov
cmp
dec
add
rorb
repz
add
inc
out
adc
xor
pusha
jle
push
out
sub
mov
bound
dec
push
cli
aas
cli
ljmp
sub
xor
xor
outsb
add
sub
call
add
jno
jns
addr16
stos
incb
pop
test
pop
aam
dec
roll
dec
loop
push
mov
daa
js
inc
pop
jno
fwait
mov
imul
lret
popf
and
out
adc
enter
loopne
or
cmpsb
mov
sbb
mov
push
lock
sbb
sbb
stc
jmp
or
icebp
ljmp
ljmp
jg
cli
jle
insb
push
arpl
lret
push
xor
icebp
xchg
popa
inc
xchg
shlb
repz
testl
out
clc
jg
imul
xchg
pop
adc
mov
and
jno
jg
lea
pop
mov
in
mov
xrelease
sbb
iret
loopne
scas
mov
pushf
mov
jo
jp
stc
cmp
call
or
stos
mov
push
aam
jnp
push
add
push
lcall
insb
fildll
push
dec
data16
stos
out
popl
in
cmpsl
clc
adc
je
and
ljmp
and
cli
xor
xor
out
mov
add
repz
sbb
pop
adc
movsl
idiv
pop
adcb
scas
fisubrl
jnp
cmp
test
jne
pop
xchg
filds
jmp
dec
cmp
hlt
mov
xchg
jmp
cli
dec
jl
xor
pop
push
or
add
xor
xchg
adc
jmp
incb
das
sub
adc
adc
mov
add
sbb
mov
ja
add
adc
mov
sub
sbb
pop
push
std
cmp
mov
cwtl
pop
jae
fiaddl
incl
cld
iret
mov
jmp
push
in
mov
lock
mov
decl
incb
lahf
add
dec
ret
jge
jecxz
add
pop
repnz
sub
pop
lods
cmp
mov
cmpsl
inc
lret
inc
leave
push
push
or
mov
das
mov
jp
test
fdivs
mov
ret
out
data16
imul
pop
gs
xor
idiv
dec
dec
mov
rolb
lds
xchg
loopne
js
add
cmp
jge
jnp
das
lock
xor
xor
mov
xor
call
inc
out
and
popf
popa
add
adc
clc
fistpll
lret
mov
jno
pop
adc
jg
inc
les
jnp
cmp
ss
loop
out
es
imulb
cmpsl
sub
nop
add
or
lcall
in
in
fwait
jl
xor
lret
mov
and
cmp
xchg
xchg
jno
add
push
shrl
xchg
inc
incl
inc
and
cmc
xchg
cmovs
pop
jmp
bound
lcall
clc
push
pop
loopne
adc
adc
push
sub
sbb
ljmp
movsl
and
lcall
pop
popf
adc
jle
dec
pop
mov
and
dec
mov
gs
pop
fists
andb
icebp
cmp
mov
xlat
mov
movsb
shll
adc
in
fucom
jno
add
or
jle
xchg
mov
push
rcrb
mov
aas
decl
mov
sbb
pop
inc
add
ret
mov
fs
jg
cmp
fdivs
into
xchg
in
imul
add
mov
stos
cmp
xor
or
push
enter
dec
out
fwait
add
stos
imul
pusha
les
iret
and
or
decl
icebp
sub
sub
cwtl
sub
mov
fstl
push
mov
mov
xchg
out
mov
roll
repz
cmp
stos
jne
adcl
cmp
in
mov
bound
fcompl
pop
xchg
jne
or
cmp
shll
aaa
addr16
jg
cmp
push
cmpsl
fdivr
xchg
add
jl
adc
sbb
imul
call
and
lea
lods
sahf
mov
mov
sbb
outsb
loope
lret
jns
in
adc
ds
ss
pop
dec
fs
jns
jbe
into
mov
xchg
mov
shlb
lcall
mov
jl
inc
aaa
dec
lret
or
jbe
push
push
fsubs
lods
sbb
mov
cmpsl
mov
jle
lods
sbb
cmpsl
dec
test
addr16
xchg
xchg
cld
scas
fwait
scas
lea
lods
xor
sub
decb
sbb
movsl
mov
push
cltd
cli
lcall
mov
xchg
iret
pop
xchg
loopne
pop
adc
iret
mov
movl
mov
inc
pusha
mov
jno
jb
xor
je
add
outsb
jp
cmp
xor
mov
nop
sbb
shll
cmp
clc
aaa
lret
cmp
push
pusha
subl
dec
pop
gs
cmp
stos
mov
mov
cld
les
pushl
sahf
outsl
mov
das
sub
xchg
adc
and
inc
inc
push
int3
sbb
and
adc
ljmp
fdivs
dec
divb
int3
es
inc
scas
sbb
arpl
mov
shlb
decl
pop
outsl
lds
push
xchg
ds
fisttpll
dec
xchg
dec
out
insb
nop
mov
jge
scas
adc
and
sarl
out
push
out
sbb
int3
and
add
jnp
push
imul
push
in
pusha
and
in
sar
add
sub
push
dec
mov
dec
lea
mov
cmpsb
outsl
dec
push
adc
mov
shll
out
push
faddl
call
cmp
adc
sub
dec
clc
ja
clc
cmc
and
push
fiadds
dec
dec
xor
pop
js
dec
out
or
xor
gs
adc
sahf
xchg
cmp
inc
aas
sqrtpd
insl
cmp
pop
dec
push
dec
in
sbb
xor
dec
mov
mov
inc
adc
inc
loop
push
push
pop
hlt
or
jl
or
imul
mov
jp
movsb
sti
mov
icebp
adc
loop
cld
jg
adc
stos
jl
repnz
add
pop
es
mov
dec
inc
lods
cli
notb
sbb
and
inc
cld
sub
fstl
in
xchg
xchg
scas
xchg
cli
mov
loopne,pn
pushl
call
sub
mov
sbbl
push
mov
call
push
cmpsb
jg
fsubs
ret
push
ja
inc
xor
sbb
jg
pusha
jno
movsb
jl
add
inc
pop
push
mov
push
ja
decb
in
cmp
add
xor
mov
xor
cmc
mov
push
xor
loopne
mov
cmp
pop
jmp
inc
sarb
push
inc
ret
and
je
sahf
xlat
test
and
cli
je
or
push
mov
jne
mov
cwtl
mov
dec
xorl
call
les
xchg
out
sub
cs
cmp
and
icebp
test
ljmp
push
sbb
imul
mov
test
ret
shld
inc
dec
fisttps
imul
lcall
imul
jne
outsb
out
sub
dec
addl
movsl
pop
cltd
fwait
dec
cltd
sub
popa
xor
push
push
popf
dec
cli
ja
int3
nop
popf
mov
push
add
clc
sub
insl
test
inc
xchg
xor
push
push
rorl
decl
incb
sti
xchg
adc
mov
mov
ljmp
icebp
cltd
loopne
in
push
push
outsb
leave
add
ja
pop
or
sub
inc
cmp
jg
dec
loope
or
testb
jne
sbb
jbe
fwait
cwtl
mov
add
out
shlb
push
loopne
ljmp
scas
push
outsl
leave
imul
pushf
mov
ds
fisttps
sub
jns
jmp
aam
xor
jp
insl
inc
mov
mov
inc
filds
lret
lcall
lock
mov
je
mov
lea
pop
pop
lock
in
je
sbb
out
sarb
add
or
decl
pop
fistl
bound
jnp
or
xor
test
jge,pt
ljmp
mov
and
ss
adc
cld
lahf
std
aaa
fsubrs
mov
pushf
mov
fwait
shll
pop
out
stos
ljmp
mov
popa
pop
inc
loopne
jbe
repnz
cwtl
data16
adc
jmp
aad
inc
dec
shll
loop
jne
xchg
jp
aad
xor
test
mov
int3
xchg
jg
jno
inc
call
std
lcall
shll
and
jle
loop
je
sbb
xor
sub
out
mov
out
xor
add
jno
push
loope
inc
imul
sbb
xchg
jns
add
sub
push
pop
lods
sbb
paddd
cmp
xchg
test
mov
sub
or
ja
adc
incl
push
lods
subl
or
cmp
js
mov
jb
clc
decl
sbb
push
jge
mov
adc
es
jg
mov
lea
mov
loop
sysenter
cwtl
pop
clc
jg
lcall
leave
mov
inc
mov
push
jp
sub
cld
jno
loopne
das
fdivrl
jl
sbb
push
int
fildll
sub
cld
xor
sbb
pushl
and
fiadds
fsubrs
mov
icebp
mov
mov
movl
scas
jb
ja
or
jnp
and
push
xchg
xlat
mov
sbb
jmp
cmp
dec
jl
and
fsubrl
jnp
cltd
and
inc
xchg
fnstsw
ss
inc
cmpsb
pop
cld
fstps
pushf
inc
inc
pop
sti
xor
add
ljmp
mov
movsb
pop
jmp
loopne
mov
mov
jae
dec
push
ljmp
pop
bound
adc
and
rcrl
popf
xor
scas
in
mov
movsl
rorl
mov
out
je
xchg
inc
cmc
scas
jo
bound
adc
cld
inc
dec
mov
shrb
incl
es
sarb
into
insb
push
pop
push
pop
out
push
inc
jns
lods
cmc
xchg
cmpsb
into
movd
cmp
inc
mov
jbe
jp
push
jne
decl
ja
movsb
es
xchg
out
js
ljmp
sub
fidivs
sahf
inc
es
jp
fistpl
pop
pop
inc
sub
cmp
dec
clc
sbb
mov
rcll
and
xchg
clc
mov
fidivrs
dec
pop
dec
push
add
adc
mov
outsl
pop
xchg
fdivl
lock
rcrb
outsl
test
sarb
aaa
std
outsl
adc
popa
dec
mov
std
mov
arpl
jnp
lcall
adcb
fdivl
dec
jg
sbb
jg
sbb
sub
mov
adc
ret
sbbl
insl
int
out
and
pop
es
and
outsl
xor
cmp
incl
insl
jns
idivb
dec
cmpsb
int3
mov
mov
in
jne
jno
decl
sbb
mov
pop
jo
int
addr16
js
fadds
lret
pop
inc
loopne
inc
jp
aaa
pop
insl
cmpsb
add
mov
mov
das
sub
jmp
dec
xchg
fistl
push
jno
pop
fdivl
pop
clc
cmp
dec
ret
incl
shlb
and
lcall
lock
outsl
mov
inc
shrb
es
jg
dec
inc
mov
loope
pop
leave
mov
sub
out
push
aam
dec
cwtl
jg
push
pop
addr16
sub
outsb
test
popa
pop
mov
mov
sbb
into
lahf
roll
mov
xlat
add
pop
test
pop
push
mov
mov
push
adc
call
scas
jecxz
rcll
fisubrs
fidivl
add
cmp
clc
andl
dec
sbb
in
xchg
test
xchg
fwait
push
xchg
je
jae
xor
cmp
addr16
aaa
jp
aad
clc
call
inc
pop
mov
popa
dec
mov
mov
xchg
loopne
outsb
mov
cmpsb
ret
mov
lcall
inc
jne
xor
inc
fs
mov
add
mov
lcall
pop
loop
mov
jbe
xor
cmpb
jnp
rorb
jg
test
push
jb
lret
mov
dec
pop
fmull
clc
stc
and
mov
pop
popa
repz
aaa
jns
shll
hlt
xchg
pop
mov
outsb
dec
sbb
pop
sub
ficoms
pop
dec
aaa
pop
inc
cmpsl
add
loopne
inc
int3
mov
ljmp
pusha
imul
pop
lock
cli
cmp
or
cmpsl
pop
push
inc
mov
mov
add
iret
incl
faddl
mov
pop
dec
in
jl
popf
add
cltd
call
cmp
mov
mov
inc
repz
lcall
adc
into
push
outsl
push
mov
rcll
ljmp
jecxz
pop
stos
std
mov
mov
out
push
push
ljmp
jne
ds
idivl
pop
push
loopne
jns
xchg
add
push
nop
mulb
das
bound
jmp
sarl
push
xchg
xor
push
dec
mov
scas
dec
fcoml
incl
jne
fisubrl
jle
clc
pop
loopne
push
pop
xchg
arpl
into
scas
pop
repnz
cmc
or
in
mov
sub
rclb
out
dec
imul
jmp
arpl
mov
and
lcall
jno
lret
mov
xchg
push
cwtl
inc
iret
int3
mov
lock
lcall
loopne
insb
popa
les
cmc
adcl
cmpsl
lcall
pop
cmc
pushl
pop
outsb
fadds
dec
mov
fs
divl
fs
mov
incl
mov
into
add
pop
sahf
lock
and
repz
std
lcall
and
jns
sbb
xchg
ret
xor
mov
sti
movsb
loop
push
into
pop
into
aaa
lea
lea
add
lcall
cwtl
ljmp
mov
imul
mov
enter
jbe
jmp
sbb
movsb
jns
and
js
aam
inc
out
cld
and
lock
sbb
repz
dec
call
cltd
inc
mov
inc
inc
mov
mov
xor
in
jg
pop
call
fs
cmpsb
inc
cld
sbb
push
xchg
negb
xor
mov
inc
repz
stos
lcall
adc
jg
jbe
dec
mov
sbb
mov
dec
jo
jbe
mov
cmp
add
inc
int3
stos
inc
loopne
mov
jne
repz
stos
hlt
and
pop
xor
fisttpll
fsts
mov
push
lcall
sub
mov
mov
scas
cmp
sahf
mov
sbb
cmp
cmp
xor
cmp
test
sub
mov
lahf
lods
les
mov
fs
fwait
ja
outsl
test
sub
push
add
xchg
inc
in
pushl
test
sbb
test
mov
sarl
sti
in
pushl
idivb
mov
jb
adc
cwtl
inc
inc
lret
cmpsl
jmp
jl
mov
movsb
dec
jecxz
nop
mov
jl
mov
xorb
jg
jge
sarl
cmp
mov
xchg
scas
mov
push
stc
es
inc
ret
add
add
sbb
dec
mov
add
inc
shr
inc
fs
rcrb
push
mov
cmp
and
and
mov
cmpsl
enter
out
sbb
cld
mov
fidivrl
push
fcoms
movsb
jb
lock
push
mov
xchg
sti
sbb
leave
and
nop
mov
decl
pop
mov
sub
inc
mov
adc
in
jmp
cld
jp
lea
and
add
add
mov
xor
mov
cld
fistpl
mov
sahf
rcrb
fisubrl
mov
push
inc
icebp
mov
adc
jbe
in
js
lcall
iret
cmp
fadds
pop
mov
test
dec
fsubs
lcall
std
mov
inc
in
ret
mov
mov
xchg
jg
sub
clc
mov
cwtl
int3
sbb
mov
cltd
fwait
mov
lock
mov
or
lds
lods
inc
mov
in
dec
in
mov
cmp
mov
loop
stos
cwtl
mov
call
das
loop
xchg
je
popf
add
mov
push
fs
cltd
frstor
call
mov
int3
mov
push
fwait
jnp
add
xchg
cmc
cwtl
out
cli
mov
loopne
stos
outsb
ret
add
pop
cmpl
call
out
inc
aad
lds
jb
pop
inc
clc
lods
test
fcomip
scas
mov
sub
jge
loopne
js
nop
aam
dec
lods
into
cmpsl
push
mov
decl
sbbb
jo
cs
and
scas
cli
jae
mov
cmp
xchg
inc
in
fwait
jl
or
jns
fnstsw
jle
push
jl
int
cwtl
std
xchg
xor
aaa
cld
mov
mov
out
andb
inc
sahf
fbstp
ja
call
cld
shr
sbbb
fmull
mov
out
xchg
data16
cmp
jbe
mov
jmp
nop
in
push
test
mov
sbb
outsl
nop
lock
hlt
xchg
dec
in
test
out
push
ljmp
inc
inc
xchg
mov
mov
push
mov
adc
ret
fcoms
jg
sbb
mov
sbb
ret
adcb
seto
mov
push
data16
sar
xchg
mov
clc
mov
repz
mov
fidivl
lods
pop
repz
mov
add
jno
loopne
ljmp
mov
mov
pop
cwtl
in
pop
mov
lcall
ja
and
dec
jl
call
add
repz
xchg
push
ljmp
xchg
push
xchg
scas
fwait
in
push
mov
daa
jbe
push
loopne
mov
add
lcall
inc
push
cltd
xor
loope
in
xchg
xchg
lahf
mov
cmpsl
lcall
adc
dec
ja
mov
or
hlt
mov
leave
in
lods
mov
mov
sbb
addr16
idivl
pop
cmc
das
faddl
fists
stos
arpl
and
push
adcb
jg
lcall
add
bound
pop
xchg
int
sub
mov
scas
xchg
repz
jle
xorl
out
sbb
inc
hlt
outsl
mov
imul
fsts
popa
repnz
fistps
mov
mov
in
orl
out
sbb
ret
mov
push
mov
mov
pop
mov
pop
stos
adc
mov
mov
mov
inc
mov
es
xchg
aas
bound
std
mov
in
mov
fstpt
cld
cli
mov
testl
sub
cs
in
pushf
dec
loopne
mov
aas
icebp
adc
mov
xor
adc
jmp
subl
mov
xchg
add
mov
mov
clc
test
and
mov
push
lock
ja
lds
test
call
jl
cmp
mov
mov
inc
cmp
dec
clc
pop
cmc
mov
cwtl
pop
push
leave
push
push
cltd
ljmp
das
mov
pop
mov
aas
test
xchg
movsl
add
cwtl
mov
fidivs
pushl
dec
xchg
xchg
pop
fiaddl
pushf
dec
mov
leave
lods
dec
roll
loop
cmc
ljmp
icebp
mov
dec
faddl
sbbb
nop
pop
mov
inc
push
xchg
fdiv
mov
cmp
out
mov
jg
cmp
nop
inc
into
xor
movsb
leave
xchg
mov
ss
cmpsl
ficompl
cmpsb
jp
xchg
mov
add
mov
jg
lock
mov
mov
ljmp
cltd
xchg
popf
mov
roll
xchg
push
cmpsb
mov
fwait
imul
aad
cltd
mov
dec
pushf
nop
cld
int
pushl
mov
lods
jg
push
mov
jmp
call
popf
mov
add
mov
xchg
scas
imul
lods
pop
mov
fbstp
mov
addb
stos
mov
pop
lods
cmc
xchg
push
jno
loope
nop
mov
sbb
push
or
mov
bt
out
xchg
lahf
mov
sar
xchg
fs
mov
lea
xor
je
loop
push
mov
sti
xlat
cmpsb
jmp
or
sub
movsl
in
jg
mov
movsb
sbb
dec
in
cwtl
mov
sbb
mov
cwtl
data16
lcall
xor
rclb
xchg
inc
in
lods
dec
int3
cmp
jle
clc
mov
mov
mov
xchg
cmpsl
push
cmpb
jge
mov
or
lcall
jns
mov
movsb
fwait
repnz
pop
icebp
mov
incl
xacquire
cld
xchg
mov
lahf
dec
sti
pop
scas
jge
add
xchg
jmp
insb
or
call
xchg
std
sub
mov
mov
mov
jg
pop
ret
push
sub
jne
cmp
jg
cmpsl
mov
or
mov
fwait
jne
loopne
cld
dec
repz
movb
mov
mov
add
gs
sub
popa
test
mov
call
xchg
sahf
dec
shlb
inc
mov
loop
dec
out
lods
enter
loop
pop
jg
mov
jp
xchg
pushf
or
xorl
xchg
pop
pop
cwtl
mov
inc
mov
jbe
mov
icebp
ljmp
mov
lcall
repnz
inc
mov
inc
fcoml
mov
loop
mov
pop
push
or
inc
sub
dec
mov
mov
mov
test
shlb
mov
add
inc
mov
mov
mov
loop
push
adc
pop
or
cmp
sbb
pop
cld
xchg
movsl
inc
lds
in
loope
cmpsl
test
xchg
xor
jae
sbb
xchg
push
ret
stos
push
lock
xchg
fcomps
push
pop
hlt
push
and
dec
ficoml
push
cmp
incl
in
pop
std
or
mov
std
pushl
inc
and
outsb
sbbl
xchg
outsb
mov
xor
inc
movsl
push
push
nop
mov
fdivr
mov
mov
and
mov
cmp
jmp
repz
jp
lods
pushl
pop
lods
sti
mov
xorb
mov
mov
add
jle
or
pop
lcall
mov
xchg
testl
jmp
in
push
mov
sub
pop
movsb
adc
xchg
cmc
mov
add
decl
loopne
xchg
xchg
dec
imull
xchg
arpl
jmp
fistps
sbb
cli
mov
dec
popa
mov
mov
xchg
sub
jle
mov
repz
cwtl
jnp
and
push
and
jecxz
mov
mov
call
cmpsl
jge
jp
dec
jo
int
popf
sahf
loopne
test
sbb
sub
int
decl
push
mov
mov
and
fists
lods
dec
rclb
mov
js
and
inc
xchg
testb
mov
xchg
push
out
mov
popl
inc
int3
or
mov
mov
cld
cmpsb
cmc
mov
ljmp
in
lea
movsl
gs
inc
jge
in
xchg
cmpsb
movsl
daa
inc
scas
repz
clc
pushl
out
cmpsb
data16
and
mov
into
and
adc
mov
or
jmp
pop
xchg
aam
sarb
mov
and
sub
sbb
sub
pop
stos
inc
jmp
pushf
fbstp
push
popf
loopne
mov
lahf
jg
aaa
stos
js
add
mov
jae
out
xor
mov
int
mov
xor
xchg
adc
jnp
inc
inc
ret
add
cld
pushf
mov
rorb
mov
lock
mov
clc
incl
pop
mov
pop
mov
mov
rorl
jmp
lock
sub
mov
test
je
push
inc
xchg
clc
mov
stos
leave
movsb
mov
data16
mov
xor
stos
inc
adc
aaa
inc
divb
subb
fwait
mov
mov
cmc
add
mov
inc
out
test
sbb
std
mov
data16
loopne
pushf
push
sbb
imul
ss
clc
call
xchg
scas
fldenv
jnp
sti
xchg
stos
in
xorb
jg
decb
nop
cmp
jns
inc
idivl
in
mov
fwait
imul
cltd
jl
add
inc
shll
push
inc
stc
mov
lahf
mov
lock
clc
xor
jecxz
cmp
addl
les
clc
mov
cmp
add
push
mov
push
mov
frstor
and
cwtl
rolb
incl
push
out
addl
xchg
outsb
addb
pop
cltd
inc
fdivrp
mov
enter
popa
and
add
mov
les
push
cli
orl
or
sbb
pushf
dec
mov
popa
pop
xchg
inc
div
inc
call
xor
xchg
sahf
jo
lahf
add
mov
mov
mov
cmp
std
dec
mov
scas
inc
sti
push
push
fs
cmpsb
loopne
js
push
test
mov
popa
sar
sbb
and
pusha
cmpsl
inc
fimull
std
lcall
clc
aaa
ljmp
pop
cld
sub
inc
cwtl
lret
cmp
lcall
fwait
imul
sbb
dec
gs
jg
mov
pop
popa
stos
fimull
mov
mov
jmp
out
adc
aas
das
data16
mov
imul
mov
jns
add
mov
mov
jg
add
jmp
mov
and
call
ret
xchg
mov
ja
xor
addr16
inc
popf
dec
adc
mov
out
mov
sbb
nop
mov
push
outsl
clc
jnp
scas
xchg
ja
mov
mov
jo
lcall
inc
sbb
in
test
outsl
sahf
paddd
cwtl
mov
xchg
mov
fsubr
mov
les
bound
addb
add
sbb
sbb
addr16
adc
push
xchg
sbb
mov
xchg
pop
notb
lcall
jg
lds
ja
cmp
push
xchg
push
inc
pop
mov
xchg
and
ficompl
test
movsl
or
or
mov
pop
inc
lea
loope
pop
leave
mov
and
out
pop
hlt
push
push
aam
dec
das
dec
addr16
cmp
imul
jg
mov
scas
enter
loop
cltd
in
sbb
incl
cmp
sbb
inc
ja
je
test
iret
mov
stos
cmc
add
clc
movsb
daa
ljmp
xlat
sbb
shrb
dec
pop
mov
scas
push
cld
sub
lods
jp
add
outsb
jo
sar
inc
push
pop
ret
add
outsl
jge
pop
js
or
inc
stos
xlat
mov
fstpt
pop
mov
lods
clc
push
push
add
push
jbe
imul
push
pop
push
add
inc
fstps
gs
sbb
outsb
loopne
mov
add
call
mov
push
adc
popa
ljmp
jg
jp
mov
jp
push
test
push
das
test
jp
xchg
popa
popa
into
xchg
decl
xchg
dec
popa
lods
movsl
jb
mov
mov
outsb
pop
push
lahf
jne
or
fs
mov
arpl
addr16
jmp
jns
sahf
gs
ljmp
push
gs
test
jbe
add
fisttps
lods
gs
hlt
xchg
push
jae
sahf
outsb
push
ret
in
lea
sbb
ljmp
mov
inc
mov
and
push
pop
add
mov
mov
daa
loopne
jg
push
stos
and
and
and
adc
clc
incl
fiadds
inc
dec
push
jnp
js
sbb
lcall
jb
jp
ficompl
xchg
push
int
je
pop
shrl
loope
enter
or
scas
lcall
shrb
mov
pop
aam
sbb
xchg
imul
cld
push
ret
into
xor
fstps
jg
sbb
xchg
ss
push
decl
mov
cli
dec
and
shlb
scas
cli
or
into
aaa
push
stc
mov
fdivl
clc
jmp
imul
inc
inc
jo
push
test
pop
sbb
sub
daa
jge
jb
movsl
nop
and
popf
adc
ja
pushl
ds
mov
mov
enter
adc
aam
pop
pushl
dec
and
cltd
hlt
stos
pop
push
adc
daa
push
cltd
adc
sbb
lcall
decl
xor
adc
push
mov
mov
icebp
sbb
ljmp
jp
push
push
or
cwtl
outsb
repz
adc
dec
sbb
out
popa
lds
push
loopne
push
movsl
xor
test
xor
mov
mov
or
std
incl
in
pop
or
pop
je
lahf
mov
cltd
lret
popf
pop
js
cmp
clc
ss
cmpsb
pop
pop
fsubl
adc
and
add
mov
decl
sbb
xchg
jbe
and
xchg
sbb
jmp
orl
sub
pop
push
ss
stos
mov
lea
add
cmp
add
push
xchg
pop
insb
roll
int3
jo
cmp
imul
sub
jb
mov
lock
sbb
outsb
and
movb
xchg
mov
out
scas
add
es
jb
adc
xchg
add
xchg
mov
inc
daa
sti
lods
jo
daa
movl
and
loop
adcb
add
ljmp
ljmp
or
push
add
xchg
negl
movsl
and
hlt
fstpt
lcall
or
sarb
cmpsl
cmp
ljmp
scas
sbb
sbb
add
ja
cmp
jo
pusha
mov
xlat
or
adc
lcall
jp
in
test
adcb
push
fildll
pushl
das
mov
test
mov
and
jbe
pop
lea
aaa
jmp
decl
sub
xor
sbb
sub
and
sbb
xchg
sub
imul
push
fwait
or
insl
enter
jns
xor
push
mov
lahf
jmp
or
pop
pushf
push
jbe
jg
push
jne
std
and
test
in
inc
xchg
sbb
dec
xor
jg
test
push
lidtl
xor
enter
mov
mov
mov
sub
sbb
mov
loopne
mov
mov
add
decl
les
popf
repnz
popf
dec
cli
adc
mov
sahf
mov
dec
adc
xor
or
decl
jae
push
insb
movb
sahf
into
stos
mov
cmpsb
push
mov
cmp
stc
lock
sar
cmp
push
mov
cmp
icebp
ljmp
andb
jnp
push
mov
aas
ja
xadd
cwtl
nop
incl
ljmp
adc
cltd
cs
xchg
sub
lods
sub
cltd
sahf
test
jp
sub
mov
push
stos
sbb
call
xchg
addr16
pusha
icebp
adc
mov
dec
gs
scas
and
sahf
or
jg
test
mov
mov
jecxz
jno
jns
incl
dec
adc
jmp
mov
add
mov
inc
add
je
clc
mov
test
movsb
push
daa
mov
xor
loop
push
push
cmp
pop
loopne
xchg
cmpsb
xchg
int3
pop
popa
cltd
mov
inc
ljmp
pop
pop
stc
lods
jmp
mov
xor
jl
out
push
dec
mov
sarb
push
jg
mov
add
jle
sub
sbb
and
sbb
mov
push
push
fists
scas
jmp
fildll
outsb
out
push
adc
push
xchg
mov
popa
scas
aam
mov
stos
cmp
adc
and
cmp
lret
mov
sub
mov
sub
lock
pop
dec
je
jb
xor
outsl
mov
and
shrl
mov
cld
push
test
push
jns
xor
sub
sbb
cmpsl
and
jg
mov
xchg
rclb
mov
mov
inc
or
xchg
fisttpll
or
xchg
jno
dec
mov
pop
fdiv
add
cld
sub
bound
lcall
mov
stos
mov
int
sbbb
dec
pop
mov
dec
pop
cmpsl
push
inc
movsb
scas
jmp
in
pusha
add
pushf
mov
adc
ja
decl
mov
xchg
mov
push
xor
dec
ret
pusha
mov
xchg
pusha
into
lock
ret
mov
push
mov
jae
test
stos
test
std
int
scas
test
cli
jg
mov
scas
inc
and
xchg
jns
dec
cld
sbb
stos
cmpsb
lods
push
int3
cmpsb
cmp
add
enter
das
fdivrl
nop
mov
add
pop
sbb
xchg
shrl
fwait
dec
cld
jg
test
add
jp
dec
lret
call
xchg
mov
imul
push
mov
fildll
lock
sub
aam
cmc
jbe
xchg
loopne
lcall
fsubrl
and
ret
mov
pop
loope
sub
arpl
push
stos
xchg
sub
aaa
add
jb
stos
insl
int3
sub
push
cltd
push
cmc
je
mov
or
das
clc
pushf
jne
xor
fwait
insl
inc
xlat
jb
fists
mov
pop
mov
push
scas
cmc
dec
cmpsl
xchg
lcall
push
lock
incl
dec
lret
xchg
xchg
mov
jmp
xchg
icebp
pop
jg
outsl
cli
rolb
fs
mov
data16
pushf
data16
test
bnd
add
mov
in
mov
sbb
adc
nop
call
loopne
nop
ljmp
sub
mov
call
dec
loope
jg
xchg
mov
dec
ja
adc
jcxz
jmp
hlt
pop
push
adc
ret
lods
test
jb
pop
jo
call
mov
rol
jne
dec
inc
lock
and
scas
mov
mov
sub
sbb
in
lods
outsb
icebp
mov
es
es
sbb
clc
jmp
dec
mov
add
cmpsb
mov
cmp
push
adcb
into
rorl
xchg
add
sbb
cmc
incl
inc
or
jecxz
dec
xchg
mov
and
shlb
les
std
test
inc
jbe
jmp
jnp
jg
lcall
jbe
mov
dec
mov
xchg
test
and
lock
movsb
cmpsl
test
stos
add
aam
pop
cmc
incl
mov
cmp
lea
add
mov
jecxz
pop
fildll
sahf
int3
or
jg
jnp
jbe
jns
mov
out
mov
or
insb
xchg
mov
ja
jo
push
push
jne
ljmp
push
je
push
in
mov
out
or
fsubl
lods
vphaddbw
incl
dec
je
and
mov
push
cmp
jae
and
dec
pusha
test
inc
in
aam
mov
in
dec
xchg
mov
dec
sub
adc
testl
insl
pop
push
out
mov
xchg
outsb
mov
fsubr
mov
push
adc
mov
jle
cmpsl
jne
sahf
push
lret
pop
mov
lcall
push
sarb
ja
cmpl
push
mov
xchg
add
hlt
push
aam
ljmp
lods
cmpsb
mov
aad
gs
call
in
leave
outsb
mov
mov
sub
jge
inc
dec
pop
push
xchg
loope
xchg
xchg
mov
cmc
incl
shrl
mov
stos
inc
inc
ljmp
sbb
xchg
jg
incl
push
loopne
cltd
cmc
dec
xchg
mov
jmp
and
mov
aas
pop
lcall
popf
stos
pushf
xorl
mov
sbbb
jg
iret
xor
xor
pop
push
mov
hlt
or
jae
shlb
mov
sbb
sbb
ljmp
inc
lcall
ret
out
fdivp
push
mov
pop
hlt
fwait
cwtl
imul
loop
jo
mov
adc
aas
fcompl
inc
push
xchg
outsb
jecxz
aad
xchg
mov
enter
lock
pop
add
dec
and
icebp
rcr
imul
ljmp
imull
mov
popa
imul
mov
dec
and
ds
cli
add
daa
mov
xchg
gs
lock
add
xlat
outsb
mov
or
cmp
stc
outsb
xor
in
xchg
cwtl
shll
push
cs
cli
inc
fdivr
jg
pushl
ret
clc
xchg
fchs
jbe,pn
lahf
cs
enter
mov
aaa
mov
mov
dec
pop
cmpsb
pusha
test
jmp
insb
int
jno
std
jle
sarb
push
dec
rcll
xchg
dec
fldcw
enter
jecxz
push
cwtl
cwtl
jne
inc
data16
jae
rol
movsl
fsubrl
pusha
pop
loope
jl
push
or
test
lcall
fmull
enter
xchg
and
rorl
xchg
mov
jg
inc
ds
adc
push
add
arpl
or
pop
rorl
ss
dec
jb
ljmp
push
popf
mov
xchg
scas
add
cli
dec
push
cld
jae
scas
cli
outsl
cli
add
push
mov
inc
jbe
std
xchg
push
out
add
inc
mov
scas
adc
das
xchg
and
sbbb
jno
fmuls
fsubrl
imul
aaa
std
or
test
clc
and
mov
adc
int
aam
in
shrb
insl
xchg
jns
cmp
push
fsubs
aas
push
outsb
cwtl
sub
push
xlat
push
pusha
adc
sub
jg
or
cmc
outsb
xorb
jns
lock
aad
dec
jbe
xchg
sub
ret
icebp
jne
fsubl
cli
outsl
decl
mov
in
mov
mov
addl
inc
pop
lock
xor
cltd
leave
push
sbb
fcoml
adc
pop
stc
inc
jecxz
rclb
test
pop
add
bound
add
mov
fstps
imul
mov
cwtl
adc
out
pusha
pop
cld
dec
addb
pop
xor
jecxz
fdiv
jp
aaa
push
sbb
adc
mov
push
lcall
xchg
bnd
mov
repz
push
divl
popa
daa
xor
and
sar
cs
lods
movsl
and
aas
sub
rcll
out
sub
adc
xchg
mov
xchg
mov
data16
pop
inc
mov
mov
dec
call
sar
xchg
jae
cmp
dec
inc
inc
sub
rcll
mov
hlt
je
flds
cmpsb
inc
jnp
clts
clc
call
cmp
das
mov
mov
scas
mov
push
out
dec
iret
enter
decl
mov
jle
outsb
imul
scas
push
xchg
lret
popa
xor
xor
and
jne
push
jle
cmp
xchg
decb
adc
pushfw
pusha
jg
adc
sub
incl
mov
cmp
xchg
lcall
orb
mov
mov
or
pushl
xchg
imul
or
incl
std
xchg
xchg
jge
imul
dec
shll
ds
roll
inc
ljmp
push
jae
push
js
jnp
xor
les
inc
mov
cli
pop
push
mov
insl
dec
rolb
roll
movsl
cmp
mov
pop
int3
xor
repz
repnz
dec
incl
test
dec
mov
inc
push
jge
decl
sar
dec
dec
dec
test
adc
adc
test
mov
or
inc
popl
xchg
push
mov
inc
ljmp
pop
fldl
jb
shrb
js
gs
push
jne
sbb
jp
faddl
arpl
ja
stos
inc
out
add
mov
repz
inc
pop
and
push
mov
fisttps
sub
xor
dec
and
arpl
outsl
ja
xchg
loopne
sub
aaa
xor
adc
loop
ret
push
rclb
cmp
jo
rolb
pop
push
movsl
inc
stc
sub
lcall
dec
in
jl
in
push
xchg
jl
xchg
ret
test
sub
sbb
pushl
jl
fldcw
dec
fsub
call
rcll
jle
jne
out
lods
and
mov
inc
imull
out
mov
lock
dec
mov
push
cmpsb
sub
push
fists
and
insb
pop
gs
sbb
sub
je
jg
sbb
aas
inc
frstor
jns
sahf
add
ja
aad
jno
out
stos
push
xorb
xchg
and
mov
out
ja
sub
and
decl
mov
std
xchg
and
cmp
insb
sub
dec
and
call
and
mov
punpckldq
push
pop
jbe
xor
mov
xor
call
add
fisttpll
insl
rclb
sahf
mov
dec
inc
xlat
fbld
jb
and
or
test
mov
xchg
imul
sbb
stos
jbe
mov
scas
dec
ss
jns
sub
out
mov
fstpl
mov
push
push
sub
int3
sbb
push
jmp
gs
dec
pop
inc
xchg
shrl
push
sbb
call
ds
lahf
pop
nop
fwait
lret
xchg
xor
sbb
dec
and
sbb
gs
add
fildll
in
cmpsb
mov
sub
fistps
aam
hlt
scas
icebp
jg
incl
pop
lahf
cmc
call
sub
jne
mov
push
mov
cli
divl
inc
mov
jno
mov
icebp
fistl
int
cmc
xchg
jns
repnz
jg
lock
pop
xchg
cmp
xchg
add
dec
add
jmp
je
and
fidivrl
push
jmp
test
add
jo
add
cs
enter
loope
fimull
les
scas
cmpsb
jmp
lods
xor
inc
jmp
mov
sbb
pop
hlt
in
pop
add
ja
push
sub
cltd
inc
add
add
ja
jl
add
jle
or
sub
lea
dec
filds
mov
fmuls
lcall
sbb
and
mov
push
push
and
and
ds
clc
addl
add
scas
adc
pop
aas
cmpsb
mov
incl
add
and
jb
dec
sub
mov
jge
mov
shlb
movsl
ljmp
add
int3
sub
xchg
cmp
push
add
nop
ret
push
xchg
in
push
and
test
push
ds
mov
dec
or
std
sar
lcall
jae
and
or
mov
shl
push
jno
das
jns
jmp
popf
nop
lret
jae
xor
fimull
mov
push
leave
push
test
jbe
xchg
dec
testb
nop
les
cs
pop
cmp
mov
mov
or
and
jg
adc
add
sbbl
xchg
cld
aas
cmp
or
sbb
out
sub
add
push
adc
push
inc
out
xchg
ja
dec
fcomip
add
leave
and
mov
sbb
mov
dec
xchg
jp
or
mov
adc
ja
jl,pt
pop
lods
cmp
and
pop
call
gs
mov
push
cmpsl
xchg
in
mov
ljmp
lret
sahf
mov
mov
fimuls
pop
pop
loope
dec
jns
mov
mov
xchg
cwtl
movsb
mov
andb
mov
icebp
cltd
mov
test
sub
scas
mov
cld
jg
xor
and
pop
push
push
arpl
push
jp
push
call
jp
push
xor
insl
xor
cmpsb
mov
inc
int3
mov
mov
pop
pop
add
xor
nopl
or
mulb
data16
adc
lcall
scas
imul
std
mov
movsb
movl
and
mov
xchg
push
lcall
sub
aaa
in
fwait
fdivl
jge
out
clc
fcomip
jg
dec
lret
dec
xchg
add
movq
xchg
sub
pushl
sbb
movsl
int
add
pop
pusha
jns
js
adc
push
dec
in
dec
lods
sbb
hlt
incl
cmpsl
adc
arpl
rolb
pop
jl
cltd
fisubrl
adc
cwtl
out
jp
adc
dec
lds
inc
cwtl
loop
test
clc
add
dec
push
sbb
adc
inc
stos
xor
cmp
cld
rcll
mov
mov
stos
mov
int3
loope
mov
xchg
loopne
mov
cld
mull
into
mov
repz
out
mov
mov
loopne
push
ljmp
in
jbe
mov
push
mov
and
shlb
or
cmp
pop
lcall
cli
fs
call
cwtl
mov
stc
shl
fcoml
xchg
icebp
lcall
mov
cmpsb
lea
mov
and
cmpsl
lea
jg
gs
data16
xchg
xchg
hlt
lods
mov
insb
xchg
xchg
jbe
mov
call
push
insl
addr16
jb
lods
mov
xor
cmp
mov
call
xchg
mov
jle
call
dec
shrl
std
push
mov
insl
scas
inc
cmc
cmp
call
loop
aam
adc
loopne
aaa
aaa
out
shrb
sub
punpcklbw
sar
fucomp
mov
out
pop
sbb
scas
rcrb
pop
aam
sbb
jne
loope
mov
sti
stos
jns
ret
mov
aad
decl
repnz
dec
sahf
mov
addl
mov
loopne
jmp
mov
pop
not
pop
je
lods
outsb
call
pop
push
jge
out
cmp
and
mov
std
cld
test
shrb
icebp
scas
in
jecxz
sar
mov
pushf
and
rcl
sarl
ljmp
push
jbe
test
adcl
push
inc
inc
stos
aas
jbe
or
outsb
ljmp
dec
movb
mov
cmp
dec
rcr
xchg
incl
push
imul
loopne
test
popa
js
out
enter
xchg
rorl
jg
pop
addl
pushf
test
jge
loop
incl
pop
cmp
je
into
nop
lahf
sahf
xchg
jmp
test
cld
pop
or
std
stos
insb
enter
dec
notl
cmp
mov
mov
fs
cld
adc
into
mov
fmull
push
mov
xchg
lea
xchg
js
cmp
sar
aas
pop
fisttpl
mov
sub
push
pushl
pop
pop
div
fs
fs
mov
pop
out
aam
scas
xchg
js
lcall
jl
fwait
cmc
add
lock
inc
call
inc
fs
and
push
rclb
mov
xor
mov
popa
jmp
in
cmpl
dec
jb
loop
xor
jnp
stc
fcos
incl
push
mov
insb
dec
push
xchg
mov
jo
gs
inc
mov
addb
jbe
dec
pop
push
push
jg
aaa
dec
jle
jb
sub
mov
inc
leave
inc
jp
cld
popf
mov
xchg
mov
push
sub
jne
inc
push
and
lret
fimuls
cwtl
fidivs
push
dec
jbe
adc
cmpsb
fs
decl
dec
adc
mov
dec
jp
and
mov
outsb
imul
js
inc
cvtdq2ps
loop
call
call
insb
cmp
lret
imul
push
int
mov
mul
mov
xchg
cmp
lock
pop
hlt
xor
arpl
cwtl
movsb
mov
xchg
mov
xchg
iret
xchg
mov
inc
sbb
mov
in
jge
out
mov
rcr
mov
adc
sbb
mov
cmpsl
mov
mov
xchg
and
lahf
push
cmp
imul
movl
dec
leave
mov
xor
cmp
pcmpeqw
out
jp
cmc
mov
mov
fisubrl
iret
sarl
mov
and
mov
sbb
xor
lock
mov
shlb
outsb
jb
aam
incl
adc
test
das
sub
test
outsl
fdivrl
divl
loop
call
cmpsl
jmp
bound
dec
mov
push
inc
call
dec
jae
fadd
test
cmpsb
xchg
scas
xchg
inc
inc
pop
dec
adc
repz
lcall
mov
mov
mov
and
repnz
clc
decl
mov
xchg
mov
sub
sbb
rcr
je
bound
rolb
inc
mov
pusha
out
mov
inc
pop
mov
cmpsb
lock
imul
std
aaa
cld
movsb
adc
mov
push
sbb
xor
inc
addb
or
sub
shlb
mov
incl
mov
lods
fdivrl
call
jae
ret
and
mov
mov
nop
pop
mov
bound
aaa
int3
xchg
jge
jno
ret
std
mov
shlb
fdivrl
fwait
mov
nop
in
xchg
mov
mov
push
ret
loopne
mov
icebp
das
xor
pop
insb
loope
ljmp
push
pusha
add
outsb
loop
inc
mov
mov
jmp
mov
pop
push
popa
clc
dec
mov
add
dec
andb
pop
cmc
xor
jbe
loopne
push
mov
loopne
mov
in
xchg
push
mov
decb
test
cmc
mov
rorb
cmp
lods
push
dec
flds
inc
lcall
add
push
push
mov
and
in
add
xchg
clc
mov
mov
out
mov
jo
mov
aaa
leave
sti
cwtl
fdivl
xchg
ret
cwtl
fwait
sub
dec
repz
stos
xchg
mov
fidivl
rclb
scas
cli
mov
in
popa
xchg
jbe
cmc
cmpsb
xchg
aaa
sub
ror
mov
daa
movl
mov
hlt
mov
int3
xor
clc
pushl
pop
lret
call
sub
xlat
mov
arpl
push
or
enter
cmpsb
cwtl
push
js
jle
loope
inc
dec
push
push
jne
cli
es
mov
dec
or
cmp
mov
xchg
adc
sbbl
push
jo
jg
push
lock
xchg
outsl
cli
push
ss
stc
mov
jle
orb
pushl
and
pushf
mov
mov
fwait
xchg
out
js
cmpl
push
mov
jle
lea
stos
loopne
and
hlt
adc
ret
xor
pushf
mov
aaa
test
icebp
hlt
pop
std
out
and
aad
out
mov
sbb
stos
inc
lahf
incl
test
rorl
ret
shrb
clc
jg
xor
arpl
enter
test
mov
sub
hlt
cmp
mov
jbe
cmp
loope
cwtl
sub
mov
mov
inc
sahf
jnp
sahf
mov
call
shlb
in
xchg
ja
repz
inc
loopne
jg
xor
mov
xchg
adc
fists
xchg
aas
int3
push
in
jo
icebp
das
es
bound
jmp
test
ss
addb
xchg
mov
push
loopne
pop
leave
sahf
add
ficomps
rcr
dec
cli
ljmp
cld
xlat
rcrb
sub
das
add
scas
xor
mov
nop
test
lret
cmp
add
mov
adc
in
lods
mov
mov
shlb
dec
aam
and
adc
push
mov
push
ja
pop
aam
mov
cli
xchg
outsb
cmpsb
test
cmp
fcomps
sbb
inc
dec
lds
mov
inc
dec
in
cmpsb
imull
mov
push
test
push
cld
inc
sahf
clc
fcompl
adc
push
std
xchg
data16
lcall
scas
in
insl
cmpsb
mov
mov
insb
mov
mov
popa
test
xchg
adc
inc
lods
lock
dec
xor
int
lods
xchg
pop
cmc
dec
rolb
loop
lcall
sub
adc
mov
ret
push
sbb
loopne
mov
xchg
mov
lret
stos
push
xchg
clc
and
sbb
movd
mov
ljmp
outsb
movsb
ror
mov
sarl
pushf
xchg
scas
inc
fyl2x
lcall
test
in
test
fwait
jmp
push
cmpb
mov
subl
xchg
push
je
int
jbe
dec
or
rorb
xor
incl
popf
int
pop
aaa
push
cmpsb
out
test
scas
test
add
imul
jle
xor
cmpsl
cmp
push
lock
sarl
scas
jb
out
jecxz
jbe
dec
and
jo
add
out
push
les
test
xchg
arpl
scas
mov
mov
ret
cwtl
lock
outsb
fcoml
push
pop
mov
into
into
aaa
sbb
inc
incl
fildll
adc
repnz
push
dec
test
fldl
cld
out
add
jnp
enter
cmpl
push
jb
movsb
push
enter
pop
xchg
iret
stos
movsl
mov
insb
sub
mov
faddl
mov
pop
lret
stos
xchg
jecxz
call
sbb
cmp
sti
loope
call
sbb
and
cwtl
cli
xchg
scas
fsubl
xchg
xchg
js
lock
rclb
lds
mov
call
dec
loopne
repz
mov
sbb
cmp
std
mov
loop
push
lods
push
rcrb
fnstsw
fisttps
lock
lret
mov
nop
icebp
decl
in
negl
es
lcall
aad
movhps
leave
stos
mov
out
cmp
lcall
mov
jl
jecxz
xor
pushf
xchg
mov
hlt
lcall
fcmovnu
cmp
mov
fs
sarl
pop
mov
xchg
fldt
mov
mov
xor
aad
lcall
fwait
and
mov
xor
dec
jmp
and
push
lock
mov
mov
xor
push
push
mov
jg
adc
lret
cld
call
aaa
enter
cli
pop
fildll
mov
dec
stc
call
ljmp
mov
fs
inc
shrb
xchg
mov
fwait
lcall
gs
or
aas
cs
jb
adcb
jl
ficomps
fst
add
test
call
cmp
dec
xchg
cltd
mov
dec
push
push
jl
addr16
jns
jg
jge
nop
gs
jp
push
push
inc
inc
inc
sub
xlat
fs
and
sbb
push
and
push
lcall
xor
outsl
xor
and
mov
dec
push
jbe
mov
mov
xchg
inc
into
andl
sarl
in
xor
popf
sbb
lahf
add
loopne
mov
xor
jle
jge
pop
jnp
cmp
mov
call
mov
lds
dec
cwtl
mov
cmp
loope
jo
mov
sbb
imul
mov
jb
push
into
xor
jo
cmp
mov
push
mov
inc
xor
mov
leave
mov
pushl
jnp
jbe
dec
js
sahf
dec
sub
gs
and
pop
dec
mov
popa
add
adc
lods
push
and
call
test
mov
xchg
push
dec
xchg
adc
jns
sarl
pop
pop
dec
call
or
inc
mov
repnz
push
push
stos
push
push
mov
mov
es
gs
mov
outsl
and
and
push
and
lcall
mov
push
sbb
les
pop
mov
aaa
aam
shrb
arpl
push
pop
repz
inc
pop
xchg
jmp
mov
sar
jo
dec
add
and
add
xchg
sub
pop
stos
pop
push
push
sub
add
jmp
out
gs
push
jns
add
and
lret
mov
mov
push
jg
jmp
and
xchg
adc
pop
mov
mov
pop
mov
ljmp
pop
pop
lods
xor
mov
test
lods
mov
ss
push
sbb
std
jmp
negb
ja
and
movsb
or
mov
push
lods
sahf
fdivl
pop
and
xchg
dec
mov
inc
push
lock
inc
in
and
sbb
cmp
and
out
scas
xor
test
xchg
subb
mov
aaa
mov
mov
inc
es
cwtl
ss
pop
jmp
mov
cmp
and
cmpsb
bound
cli
fbld
loopne
inc
add
or
fidivs
lret
xchg
es
int3
cmp
mov
frstor
pop
pop
pop
sbbb
arpl
mov
cs
out
fs
mov
mov
fimull
push
add
cmp
outsl
dec
rcrl
mov
pop
inc
pop
frstor
sub
scas
push
ret
pop
jo
push
mov
sub
jnp
test
cmp
es
movsl
xor
imul
mov
movsb
pusha
faddl
xchg
mov
xchg
leave
dec
lcall
jns
jns
pop
das
lahf
mov
lds
test
int
mov
mov
addl
xchg
addr16
lock
lock
ds
rolb
inc
push
mov
cmpb
mov
jg
insb
daa
dec
mov
les
into
add
cmp
movsb
stos
jmp
jns
loop
push
mov
nop
stos
clc
jbe
sub
sar
mov
xchg
push
pushf
test
mov
and
scas
mov
jnp
cmpsl
in
or
or
jmp
or
xchg
outsb
imul
xchg
loopne
add
fisubl
push
push
cmpb
pop
push
jne
pop
jmp
xor
or
bound
xchg
xor
or
sar
mov
test
aam
push
fs
call
cmc
pop
pop
ja
mov
loop
pusha
fimull
fldcw
je
pop
mov
sahf
or
pop
pusha
fnsave
jmp
mov
adc
jle
movsl
jns
cmp
sub
pop
loop
es
lcall
cmpsb
jbe
stos
pusha
jo
sbb
adc
sbb
jp
pop
lcall
dec
dec
mov
adc
pop
cltd
scas
les
jno
lods
stos
push
popa
cltd
sbb
xchg
xchg
lcall
mov
or
pushf
dec
cmp
push
out
pop
imul
movsb
adc
mov
jp
test
sub
mov
lret
out
xchg
xor
inc
loopne
mov
subl
arpl
in
mov
lcall
xchg
in
mov
cli
inc
xchg
enter
jl
jns
cmpsb
lcall
arpl
sbb
scas
lret
sub
mov
or
push
cmp
ljmp
sbb
bound
rcll
push
jl
jb
dec
xorl
jo
push
call
rcll
ja
arpl
call
sbbb
push
lock
mov
adc
ljmp
ljmp
insl
stos
push
int
mov
and
xor
mov
cmp
loop
mov
in
jb
mov
dec
jmp
jno
pop
std
sub
sbb
fldl
call
cs
and
cld
and
and
rclb
popa
adc
scas
xor
sti
jnp
inc
loop
xchg
movl
insl
and
incl
insl
mov
cmpsb
sbb
add
std
and
frstor
ja
xchg
rorl
lahf
mov
jbe
std
pop
pop
and
cwtl
int
pop
cmp
cmp
stos
or
fnstenv
mov
cmp
outsb
mov
imul
cmp
sbbl
es
ljmp
mov
or
ljmp
test
aas
and
xchg
inc
add
sbb
iret
pop
inc
imul
lcall
loop
or
scas
shlb
mov
dec
subb
rorb
leave
pop
jae
nop
fldt
dec
das
add
pop
imul
mov
jg
loopne
shrl
inc
stos
aaa
mov
jne
out
aaa
xchg
jno
outsb
add
jo
or
outsl
cmp
leave
mov
fwait
or
into
jbe
stos
xor
outsb
fmul
inc
sbb
inc
mov
add
in
xor
jo
xchg
and
dec
xchg
adc
push
and
popf
pop
loope
stos
mov
sar
and
pop
sbb
fbstp
xchg
or
stos
lds
test
push
pop
cmpl
inc
jne
cmp
xor
adc
adc
xchg
mov
push
push
xchg
sbb
mov
gs
ret
es
jmp
ljmp
add
mov
mov
add
test
add
mov
incl
ret
inc
inc
call
lock
jmp
lret
cmp
jns
sub
xor
adc
inc
daa
xchg
dec
mov
fdivs
insl
ljmp
add
and
sahf
push
jbe
cmp
mov
dec
pusha
pop
imulb
in
jle
cmpsl
xor
shrb
mov
add
movsb
lods
mov
ret
xchg
cmp
pop
clc
mov
mov
sbb
cmp
jg
loopne
pusha
and
xchg
cmp
and
or
xchg
mov
add
push
daa
dec
ljmp
pop
xor
mov
ja
jb
push
or
scas
rclb
cwtl
or
cmp
insl
cwtl
pop
xchg
and
xchg
sbbl
xchg
cmp
jno
incb
cmp
stc
xchg
aaa
shlb
add
cltd
xchg
lret
jbe
or
inc
popa
inc
inc
push
pop
add
jecxz
dec
ret
cmp
stos
std
adc
repnz
mov
sahf
inc
hlt
pop
jb
fbld
pop
jb
dec
pop
and
cmpsb
push
js
stos
mov
mov
pop
rorb
leave
mov
mov
call
push
lea
rclb
or
xchg
mov
mov
je
mov
shll
sahf
subb
dec
ja
mov
mov
test
in
out
aad
jns
js
mov
fs
insl
inc
das
sar
xor
repnz
sbb
sub
pop
les
je
pop
mov
sbb
lock
sub
imul
iret
lods
jo
gs
jg
jmp
jnp
dec
mov
scas
sub
scas
and
rcrl
daa
es
setle
in
jg
jg
scas
mov
xchg
outsb
or
data16
push
mov
or
scas
add
call
lods
xor
xchg
stc
lcall
aaa
adc
push
push
ret
add
pop
xor
clc
mov
stos
pushf
sbb
inc
push
sahf
mov
out
rolb
inc
lea
xor
incl
jge
sbb
mov
sbb
jmp
push
ret
cs
push
adc
mov
and
sarb
push
jbe
push
popa
hlt
bound
dec
cmpl
pop
push
add
mov
pop
scas
xchg
scas
addr16
sahf
xchg
push
xor
subl
push
dec
cmp
pushw
dec
cmp
adc
push
or
xor
repz
push
add
jbe
dec
jne
and
push
push
imul
lods
cmp
xor
clc
out
mov
lods
dec
sub
aaa
outsl
adc
mov
add
inc
push
ljmp
sub
pushl
popa
mov
pop
add
pop
sbb
js,pn
add
mov
push
push
jmp
push
inc
fnstcw
xchg
addr16
jge
dec
sub
in
mov
enter
lea
jb
mov
jl
push
dec
aas
jle
dec
and
je
addr16
cld
ret
ss
fbld
inc
and
mov
adc
pop
xchg
sbb
subl
not
sbb
or
pusha
sbb
mov
jl
ljmp
jp
inc
jo
inc
sbb
lret
ret
or
add
imul
pop
movsb
outsl
mov
mov
ficomps
test
call
sbb
jns
sub
cmp
ds
jg
and
add
and
pop
inc
jns
inc
dec
pushl
out
adcl
cmp
and
inc
stos
in
insl
dec
lea
adc
rorl
data16
lods
bound
add
and
add
lahf
data16
jnp,pt
loope
mov
cmp
outsb
imul
jg,pt
or
jl
cmc
xchg
ja
add
ja
popl
loop
and
push
add
adc
inc
data16
repz
pop
jns,pt
push
or
cli
fst
push
sub
es
ljmp
jno
dec
cmp
sub
rcrb
cwtl
and
cmp
lds
inc
xlat
cmp
arpl
xchg
pusha
inc
fdivr
dec
pop
test
jle
in
imul
call
xor
sbb
sub
inc
popfw
dec
cmc
call
jae
pop
mov
pop
popf
adc
insl
fisttpll
and
inc
and
in
cltd
bound
decl
xchg
scas
mov
stos
inc
adc
jecxz
dec
jns
aaa
pop
scas
xor
add
jo,pn
xchg
jae
sub
jp
scas
js
pop
pushf
push
ss
inc
mov
mov
mov
jb
add
mov
pushf
push
stc
or
push
push
imul
pushl
cmp
gs
and
movsl
cmp
gs
rorb
adc
mov
xchg
int
stos
jbe
sahf
xchg
mov
pusha
dec
push
and
push
adc
pop
jne
jge
neg
int3
push
push
ja
sar
ja
xchg
xchg
or
xor
dec
fisttps
loop
nop
mov
push
mov
and
ret
lods
pusha
mov
test
dec
decb
imul
dec
hlt
filds
les
int
loopne
dec
popf
aaa
and
mov
pop
cwtl
out
jo
insb
and
lcall
xchg
inc
mov
mov
out
test
mov
xorl
push
and
std
call
js
inc
push
fsts
lcall
call
jb
inc
push
and
mov
push
add
rcl
dec
dec
enter
dec
jmp
loope
adc
xor
mov
sub
inc
orl
adc
push
xor
jmp
popa
iret
inc
icebp
sub
dec
push
jp
dec
ficompl
call
pop
mov
aaa
sbb
sti
cs
mov
xchg
cwtl
push
outsl
dec
push
call
ret
inc
pop
iret
and
jle
xchg
and
in
xchg
test
mov
mov
push
pusha
jnp
sbb
and
xchg
decb
jl
adc
mov
clc
out
dec
or
add
cltd
stos
push
inc
cwtl
sbb
out
lcall
mov
orb
jge
je
mov
xor
sar
mov
mov
mov
nop
xchg
inc
xchg
cli
stos
add
fiadds
cltd
mov
pop
mov
mov
adc
xchg
jg
mov
mov
push
pop
cmpsb
adcb
add
rcrb
mov
mov
inc
pop
dec
loopne
sahf
lret
push
xchg
scas
pop
xchg
outsl
jmp
scas
and
mov
and
mov
dec
mov
mov
push
adc
jg
push
inc
js
mov
sub
add
mov
ljmp
dec
xor
gs
jmp
adc
mov
cmp
jp
xchg
xor
cmpsb
mov
cmpsl
repz
jg
mov
mov
pop
aam
mov
cmpsl
loop
pushl
or
pop
iret
and
push
push
mov
push
mov
popa
mov
stos
lock
enter
xor
and
mov
push
pop
scas
das
clc
mov
loope
incb
int
inc
and
test
or
das
and
ljmp
jo
mov
pop
jae
xor
incl
adc
das
loop
fisubrl
sbb
mov
ljmp
mov
divps
bound
sbb
add
mov
push
and
xor
mov
xor
lahf
les
add
push
xchg
stc
mov
jle
int
xchg
adc
cwtl
iret
and
fildll
dec
call
aaa
push
cli
jg
fwait
adc
sti
sub
mov
into
or
std
rolb
mov
sbb
add
test
lock
lcall
pop
inc
shrb
sahf
and
mov
subb
push
push
jg
out
les
ds
ljmp
xor
lds
push
cs
inc
lds
aad
adc
movsb
rorb
inc
arpl
imul
cmp
pop
push
dec
sbb
mov
push
or
pop
loop
jne
add
insl
in
mov
fisttps
scas
xchg
mov
stos
add
xchg
xchg
stos
xchg
je
clc
inc
stos
popa
xchg
mov
cmpl
js
pop
cli
incl
push
push
mov
dec
arpl
sbb
pop
jnp
sti
mov
inc
mov
mov
and
adc
std
lahf
adc
inc
mov
push
jle
inc
dec
loop
ja
fsubs
mov
aaa
inc
mov
push
lea
data16
in
cmp
add
bound
addr16
pop
push
or
and
sub
jmp
pop
test
std
mov
adc
ja
xor
push
adc
and
xor
cmp
sub
loopne
ss
gs
jle
pop
push
mov
jg
lret
mov
test
xor
das
mov
jns
daa
inc
and
icebp
imul
in
nop
sti
adc
test
dec
call
insb
loop
in
mov
add
pop
dec
mov
xchg
cmp
or
mov
mov
mov
pop
ds
pop
mov
xor
xchg
inc
loope
ficoms
pop
cmp
mov
std
mov
fisttps
insb
jae
scas
clc
pop
and
pop
push
add
pop
test
or
adc
mov
pop
clc
scas
xchg
adc
lret
sarb
mov
sbb
or
mov
mov
jo
sub
sbb
inc
lods
and
cli
movsb
call
adc
xchg
and
pop
repz
sbb
add
test
movsl
pop
dec
sbbl
cli
ljmp
je
jl
mov
movl
pop
mov
inc
cmp
xor
jne
mov
cmp
and
xchg
test
shrl
lock
pop
cwtl
pop
or
aam
das
jl
filds
lds
mov
fiadds
mov
ljmp
mov
lock
push
aad
adc
cmp
ja
gs
pop
add
fmull
mov
incl
mov
addr16
pop
movl
xchg
and
incl
mov
dec
sbb
sbb
mov
pop
add
xchg
int
arpl
incl
dec
std
pop
daa
fldl
dec
sbbl
or
pop
insb
push
or
or
inc
ss
sar
pop
pusha
loope
sbb
insl
mov
xor
or
loope
lcall
loope
cltd
mov
sbb
mov
sbb
pop
push
jo
les
xchg
sub
or
fs
mov
mov
inc
lea
jmp
inc
or
repnz
xor
sahf
mov
fimuls
jg
sete
cmpsb
sub
xchg
popf
mov
xchg
push
aam
mov
pushl
and
jmp
nop
out
adc
xchg
clc
outsb
adc
and
pop
push
fwait
mov
push
pop
mov
sbb
rorb
push
movsb
mov
mov
popa
loope
push
pop
into
sbb
jnp
adc
cs
cmpsl
cltd
xchg
ds
adc
sbb
scas
cmp
call
rcll
daa
popl
fisttps
mov
adc
pop
aas
icebp
test
mov
sub
sub
cs
jno
push
pop
adc
push
imul
loop
jo
sbb
test
push
ljmp
lea
mov
insb
mov
fldl
inc
inc
lcall
nop
adc
xor
ljmp
inc
cld
add
jbe
test
and
mov
scas
and
insl
in
call
mov
stos
adcl
pop
lods
mov
xchg
mov
mov
jns
push
dec
mov
jl
in
cmp
jae
adc
and
sbb
call
xor
jae
into
jbe
xor
ljmp
pop
cmc
lret
mov
xor
add
mov
mov
mov
cmpsb
push
mov
inc
mov
xor
adc
mov
xor
add
sbb
sbb
insl
mov
addr16
add
filds
xchg
pop
jmp
pop
ret
sub
das
dec
scas
mov
pop
or
incl
sbb
adc
jl
mov
decl
inc
mov
sbb
push
xchg
add
call
loopne
ja
ss
data16
push
insb
push
push
testb
decl
xchg
xor
lret
dec
mov
jl
pop
ret
fs
pop
dec
aas
push
dec
fwait
mov
pop
dec
dec
sbb
mov
and
test
jle
pop
les
mov
cwtl
lcall
push
jl
sub
xchg
mov
outsb
jmp
adc
adc
popf
and
push
std
or
js
les
xchg
shrl
clc
ja
test
cmp
pop
pop
push
scas
enter
decl
addl
push
jns
lods
pop
dec
movsb
mov
rcrb
outsl
mov
call
fsub
js
cmp
lods
mov
cmp
jno
sub
adc
mov
mov
lcall
into
mov
push
xor
mov
popf
imul
pop
call
int3
mov
mov
mov
push
cmc
lds
inc
cmpsb
std
decl
ret
and
dec
adc
pop
or
fiaddl
jg
ss
lret
jnp
pop
and
jne
popa
aam
push
stos
sar
lcall
push
rcrb
mov
sub
rol
jae
dec
das
mov
mov
mov
incl
push
jp
ds
inc
push
xchg
pop
adc
adc
xchg
fcmovnb
pop
pop
pop
ss
movsl
adc
lods
rcll
inc
jmp
mov
mov
ficomps
out
jno
xchg
push
in
dec
push
fiaddl
pusha
mov
incl
and
shrb
mov
push
xchg
in
lods
push
push
sbb
jmp
jg
xchg
arpl
and
movsl
cli
pop
jno
iret
insl
xchg
jns
in
mov
decl
push
inc
adcl
lret
adc
push
clc
and
and
je
lret
adc
repz
shll
mov
call
sub
mov
pop
mov
inc
push
aaa
xor
xchg
sbb
ret
loop
and
out
inc
adc
mov
inc
mov
lea
out
sbb
add
lcall
mov
pop
fstps
adc
cmp
loopne
call
mov
test
inc
insl
decl
pop
push
movsl
mov
xchg
es
mov
mov
push
push
stos
insl
xchg
aas
data16
or
stos
sbb
and
sub
scas
pusha
add
jecxz
ret
fs
aaa
pop
mov
push
mov
scas
adc
add
call
pop
dec
popl
insb
sub
test
jbe
mov
mov
xchg
and
adc
inc
pop
pop
fdiv
lcall
sub
std
mov
sbb
je
cli
jecxz
repz
jb
pushl
inc
pop
es
insb
jns
jno
pop
addr16
xchg
xor
sub
mov
cwtl
icebp
inc
mov
fbld
xchg
add
jmp
call
insb
adc
cmc
out
jg
lock
cmp
mov
in
fwait
lret
test
sarb
test
or
call
insl
sub
xlat
adc
xchg
lea
and
pop
mov
pop
dec
inc
aam
push
mov
popa
out
xor
decl
aas
pop
xchg
outsb
mov
push
jns
lea
pop
mov
loopne
aaa
movsb
lods
and
sub
mov
dec
rclb
adc
loop
push
cmp
cmpsl
adc
dec
jae
jbe
decl
in
dec
js
nop
mov
fisubl
into
inc
push
lods
push
push
sar
jo
es
or
pushl
and
mov
xchg
dec
mov
cld
ljmp
das
jo
lret
inc
pop
loope
dec
je
das
roll
add
fs
and
ljmp
push
mov
mov
into
mov
and
sub
pop
popa
repnz
push
fs
lcall
cwtl
outsl
cwtl
sub
jns
pop
jg
fwait
dec
lock
filds
into
int
ja
pop
fisttpl
mov
cmpsb
punpckhbw
subl
loope
mov
mov
cmp
cmpsb
into
lea
loope
sbb
jg
jmp
xor
das
inc
rorb
test
pop
psrlw
jg
or
imul
inc
es
jge
sbb
popf
mov
dec
xor
popf
rclb
pop
rclb
scas
cmp
xlat
xchg
xchg
icebp
imul
int3
mov
add
imul
pop
hlt
jmp
adc
out
cmp
clc
mov
inc
ret
push
ds
popa
add
test
fwait
inc
in
xchg
pushf
outsl
xchg
add
pop
gs
cwtl
cmp
orb
mov
daa
fwait
and
dec
jle
xor
inc
adc
push
mov
xchg
adcb
ljmp
adc
mov
inc
loop
cmp
imul
lock
push
xchg
fisubrl
add
add
pop
ljmp
ja
mov
sub
gs
inc
movsb
xchg
cmc
cmp
pop
jp
jae
mov
ljmp
add
jbe
xor
gs
jmp
sbbl
cwtl
inc
mov
mov
mov
cld
btr
out
xchg
jmp
cmp
addr16
xchg
dec
push
lods
fidivrl
inc
movsb
aas
popa
in
push
mov
add
mov
xchg
sub
lcall
sub
mov
mov
cli
add
or
popa
sbb
stos
xor
xor
pusha
loope
or
fistpl
pop
push
cltd
jne
and
jl
pushl
or
xor
push
inc
adc
mov
mov
fdivs
loope
mov
dec
test
push
je
jp
pop
jg
ficoml
pop
jp
mov
sub
clc
jne
movsb
fcoml
dec
sti
in
ffree
mov
add
or
test
and
or
subb
or
ja
into
jge
stos
outsb
pushl
lods
push
mov
mov
and
jbe,pt
mov
sub
out
jnp
shll
lret
xchg
push
mov
enter
dec
loop
outsl
decl
jmp
lock
testl
adc
popa
mov
jp
in
fnsave
sub
mov
and
pop
enterw
cmp
mov
xchg
inc
adc
test
pop
jge
xor
pop
push
adc
cli
dec
and
ret
data16
call
cmp
xchg
dec
inc
rorl
mov
jne
lcall
incl
push
lods
scas
inc
js
dec
jmp
lea
iret
stos
sub
pushl
fistl
cli
incl
jo
sub
push
and
sub
repz
and
cmp
inc
loopne
hlt
inc
testb
imul
fdivl
inc
lret
jnp
ljmp
icebp
fld
sbb
jl
insl
fisttpl
pop
in
insb
and
push
out
add
mov
mov
mov
mov
inc
dec
decl
jbe
ljmp
push
pop
dec
sub
inc
sti
xchg
inc
xchg
cmp
ficoms
lcall
cmp
xor
int3
daa
mov
or
in
mov
dec
repz
loopne
fcos
lcall
xor
xor
ja
and
push
nop
xchg
lods
sbb
xorb
xchg
cmp
call
sahf
add
mov
arpl
insb
or
push
jge
jns
cltd
ljmp
es
mov
sbb
aad
inc
fs
inc
ljmp
mov
cltd
nop
dec
jecxz
je
dec
aas
adc
clc
sbb
out
mov
loopne
sbb
jne,pt
stc
call
mov
cmpsl
dec
je
ja
mov
mov
into
leave
mov
jl,pn
in
fiadds
popf
mov
lret
movsb
loop
out
rclb
fsubrl
xchg
mov
push
fpatan
mov
sti
icebp
mov
test
mov
test
cld
leave
outsl
mov
and
sub
stc
rcll
aad
call
imul
mov
sbb
in
mov
jg
fcompl
adc
in
hlt
lahf
cwtl
mov
adc
dec
inc
clc
in
ss
frstor
pop
or
sbb
jno
jmp
mov
jbe
std
fdivs
dec
add
mov
push
mov
pop
push
lods
shlb
jg
mov
ret
mov
test
dec
and
dec
ret
or
out
push
sbb
sub
or
jno
add
or
test
inc
mov
dec
sbb
insb
cmp
xor
idivb
scas
pushl
shrb
lds
jae
loop
je
decl
pop
xchg
mov
sub
sbb
sub
das
loopne
test
mov
xchg
repz
add
mov
sbb
add
xchg
xchg
rclb
stc
fwait
cmp
je
cmp
adc
pop
lods
mov
sar
sbb
cmpsl
popa
ljmp
hlt
rcrl
repnz
add
in
cmp
movsb
adc
imul
adc
stc
inc
xchg
xchg
dec
pusha
jns
dec
and
mov
xchg
fwait
pusha
dec
mov
pop
cmp
sub
push
std
call
and
aas
jp
add
incl
sub
sqrtps
and
cmp
mov
dec
movsl
addl
jecxz
aas
or
jo
std
jle
int3
mov
int3
or
cmp
lock
test
rcrl
inc
push
inc
lcall
ljmp
fs
push
es
jecxz
push
or
sub
adc
or
ret
movsb
jns
test
popa
lds
stos
into
ds
push
mov
fsubl
cwtl
insb
push
pop
lock
ljmp
push
repnz
sahf
dec
sub
out
and
add
mov
and
jmp
jge
push
gs
insl
push
dec
inc
aaa
and
pop
xchg
cmovnp
cmp
mov
call
movsl
lahf
push
popa
push
cwtl
inc
mov
and
sbb
or
mov
jbe
in
insb
je
addr16
clc
jg
push
push
in
insb
js
iret
clc
mov
xchg
jp
lds
dec
sbb
aad
rclb
fdivs
pop
jo
pop
push
mov
add
dec
jmp
loop
int
ficoml
addr16
loopne
das
ss
lcall
and
fs
mov
sub
mov
push
arpl
cmp
jae
inc
nop
rolb
cwtl
lahf
dec
test
addb
sub
pop
and
cmp
inc
mov
push
cld
das
movsb
mov
out
lea
lcall
add
clc
pop
and
jl
jle
mov
inc
xchg
adc
add
and
hlt
repz
mov
jmp
jo
cmp
cmp
shrl
scas
jmp
std
ret
mov
cmpl
loop
sbbb
js
sub
lea
mov
insl
mov
inc
or
mov
pop
adc
dec
jne
mov
mov
jg
pop
test
mov
xor
into
push
data16
or
loope
out
xor
aad
cld
fcompl
jno
aaa
popf
cmp
dec
add
test
rclb
push
push
ffreep
mov
enter
outsb
movb
mov
push
loopne
add
lock
enter
dec
pusha
mov
popf
rolb
jmp
add
adc
call
push
push
pop
inc
sti
adc
xor
mov
loopne
inc
imul
cltd
add
and
jmp
data16
cmp
xchg
and
scas
movsl
outsl
pop
fcomip
lcall
push
mov
lds
mov
jecxz
fwait
clc
jmp
push
and
fidivrl
test
sbb
sub
sub
stos
cmc
mov
repz
mov
push
imul
stos
and
cli
pop
mov
in
nop
jo
lea
push
rcrb
aaa
xchg
sub
push
pop
clc
lret
pop
jno
insb
ds
loop
dec
mull
neg
mov
pop
and
fldcw
dec
xchg
scas
cmpsl
mov
je
sbb
sub
mov
lcall
ds
and
scas
add
ficoml
pop
leave
adc
xor
dec
fnstcw
repnz
outsl
add
call
inc
lret
mov
lock
mov
dec
jbe
cmp
mov
sbb
addl
push
lret
lea
fwait
inc
mov
into
xchg
in
filds
ss
mov
sub
mov
sub
outsl
and
push
das
dec
es
add
or
jmp
jp
imul
inc
xlat
pop
lods
dec
push
out
jb
scas
push
cmc
fwait
mov
ja
sahf
or
ljmp
mov
outsb
lods
push
jns
mov
xor
cmp
fwait
cmpsb
or
adc
clc
jbe
arpl
mov
cli
jg
popf
in
push
mov
adc
sub
divl
xorb
lods
es
inc
aaa
mov
jecxz
popf
mov
fidivl
mov
adc
stos
hlt
adc
nop
push
in
cmpsl
cmp
movsl
mov
push
pop
fs
mov
jl
pushf
mov
push
push
xor
test
and
add
jae
mov
sahf
push
pop
jns
dec
mov
pop
lock
dec
test
outsb
sbb
pop
mov
cbtw
xor
or
jl
sub
vandnps
daa
push
test
xor
adc
ds
pop
push
mov
fwait
stos
and
sub
pop
add
out
push
shlb
xor
push
test
std
xchg
adc
sti
lods
pop
add
cmpsl
hlt
call
and
icebp
lea
mov
mov
into
xchg
xchg
stos
sti
mov
mov
decl
sbb
outsl
jae
xor
adc
stos
dec
jno
scas
sub
loop
xchg
cmc
call
xchg
jecxz
xchg
hlt
push
imul
in
dec
hlt
out
push
add
outsb
idivb
ja
andl
sbb
fucomip
inc
test
add
fisttps
int
inc
mov
mov
push
stos
jo
xlat
pop
ljmp
mov
pop
mov
loope
cli
mov
sub
jae
movsb
popa
fistps
mov
lock
xchg
jle
int3
sbb
pop
nop
jle
mov
mov
add
cmp
addr16
decl
jo
movsl
ljmp
sbb
scas
jne
xchg
loope
popa
cld
push
pop
jne
sbb
pop
sub
or
hlt
push
adc
dec
decl
stos
xor
cld
add
add
es
cmp
incl
pop
insl
int
sahf
cld
xor
lods
dec
inc
cmpsl
int
lods
mov
xorl
decl
mov
jge
cmp
mov
xor
daa
mov
push
sqrtps
nop
repnz
incl
into
imul
or
or
adc
pop
icebp
scas
mov
inc
and
testl
adc
mov
add
cmp
and
cltd
adc
pop
imul
mov
xchg
cmp
int3
in
enter
jle
mov
clc
in
adc
and
xchg
push
adc
cld
scas
jle
adc
pop
xor
inc
mov
mov
mov
or
jl
pop
je
mov
inc
adc
dec
jmp
sbb
stos
cmpsb
pop
pop
mov
jmp
mov
movsl
mov
fnsave
roll
call
imul
inc
jne
int3
xchg
or
or
hlt
cmp
pushf
mov
outsl
and
inc
push
sbb
icebp
decl
mov
push
shrb
xor
fbld
cld
imul
mov
loop
add
jno
inc
outsl
pusha
out
push
insb
inc
sub
sbb
test
pop
jnp
adc
sbb
mov
in
cld
jg
pop
or
jge
push
idiv
insb
push
jge
test
mov
mov
jo
bound
push
push
repz
and
add
or
dec
mov
dec
fs
mov
repnz
jecxz
popf
mov
cwtl
gs
xor
lea
mov
addl
jg
adcl
adc
adcb
rorb
sbb
pop
sarl
cli
aaa
jmp
imul
add
add
sbb
pop
mov
sbbb
and
arpl
call
mov
or
scas
xor
lret
popa
xor
ljmp
inc
and
outsb
cld
cmp
mov
push
pushw
loopne
jg
cli
jnp
scas
fs
add
adcl
out
ret
fwait
inc
and
shll
pushl
cld
ljmp
in
jne
jne
push
jmp
xlat
subb
movsb
dec
shl
add
jb
fs
push
dec
in
mov
push
ljmp
jg
repnz
pop
xchg
aaa
cs
imul
scas
aas
fs
test
lcall
jmp
mov
mov
or
mov
mov
enter
cltd
jg
or
std
cmp
aad
xchg
push
xor
sub
scas
and
fsubl
test
aaa
cmp
int3
cmp
xrelease
lock
bound
sub
inc
dec
dec
leave
mov
xchg
fdiv
mov
lods
pop
int3
mov
fwait
gs
push
das
push
pop
ljmp
inc
inc
jbe
xchg
out
mov
mov
jo
adc
lods
or
jl
lcall
pop
push
and
jne
xor
adc
into
outsb
jno
repnz
sub
push
out
lock
scas
ficomps
mov
pop
add
dec
push
in
pusha
fs
test
xchg
or
cmp
cwtl
cmp
sbb
inc
or
and
mov
inc
mov
arpl
adc
adc
sbb
nop
stos
lods
mov
adc
or
daa
cltd
ret
xor
decl
push
call
int3
add
dec
jmp
cmpsb
daa
add
pushl
add
jns
dec
sti
mov
fwait
dec
push
cld
sbb
frstor
loope
dec
pop
adcb
pushf
inc
outsl
fisubs
fwait
test
dec
inc
gs
cli
and
mov
dec
jmp
mov
dec
mov
cmp
sar
jnp
bound
inc
jne
add
pop
shrl
jg
push
or
lock
incl
pushf
jbe
insb
cmp
mov
icebp
out
repnz
xor
mov
pop
cmc
xor
ja
sbb
push
movsb
loop
movsl
outsl
sahf
fwait
mov
dec
rolb
lret
pop
fdivl
stos
out
jb
mov
sub
inc
adc
lea
cmpsb
mov
cmp
lret
and
and
in
mov
sbb
mov
in
jg
jl
xchg
or
push
in
add
dec
jg
popf
sahf
mov
out
int3
imul
sub
sub
add
jle
mov
in
jmp
sub
ja
jle
js
psllw
jmp
or
inc
inc
mov
jmp
mov
mov
in
call
pop
je
fisttps
pop
and
xor
xchg
sub
js
js
stos
mov
scas
cmp
add
fistl
push
incl
pop
push
test
and
xchg
icebp
add
clc
jmp
push
gs
or
and
in
insl
pop
fbld
pop
xchg
push
lret
mov
mov
cmpsb
scas
cmpsb
loope
nop
lahf
mov
sbb
leave
sbb
jae
mov
loopne
test
mov
add
test
jg
fs
out
add
add
inc
adc
mov
cwtl
push
lea
mov
jge
dec
and
pop
or
sbb
mov
push
in
push
xchg
add
dec
adc
std
jg
mov
push
movd
enter
jp
jbe
jecxz
das
mov
add
and
or
add
push
insb
bound
scas
sti
mov
dec
mov
js
mov
pop
push
inc
cmpsb
fmull
mov
in
mov
pop
es
push
clc
or
mov
mov
in
push
aaa
dec
xor
imul
cmpsl
in
out
mov
inc
pushl
jge
inc
sbbl
inc
out
sahf
jg
inc
fisubl
mov
mov
cmp
mov
imul
cld
ljmp
xor
in
xor
and
aaa
jae
add
mov
or
fidivs
or
filds
and
movsl
adc
mov
jae
inc
dec
hlt
aaa
inc
and
cmp
mov
outsb
jg
fildll
xor
push
aaa
sbb
xchg
fxch
out
je
cmp
jmp
jmp
xor
add
lods
push
mov
lock
push
sbb
ss
icebp
outsl
xor
int
sbb
hlt
xor
xor
das
and
gs
jae
sub
adc
push
inc
icebp
adc
int
fs
test
adc
test
jnp
out
js
xchg
sbb
dec
sbb
jmp
pop
test
out
iret
add
inc
and
and
jp
sbb
cmc
jle
mov
push
mov
jno
icebp
outsb
dec
andl
push
or
dec
cmp
bound
jg
jmp
sub
es
pop
jecxz
mov
pushl
outsb
jmp
inc
dec
adc
ds
mov
dec
dec
pop
adc
sub
jmp
loopne
and
push
fldenv
push
cmp
cld
incl
add
push
incb
dec
dec
loopne
decl
inc
mov
aas
sahf
mov
and
mov
push
pushf
out
and
std
cmp
sbb
and
mov
loope
push
dec
ss
or
cmpsl
cmpsl
test
js
cmpsl
aas
test
mov
insb
cmp
sub
push
mov
loope
loopne
xchg
das
dec
inc
adc
ljmp
shlb
push
jbe,pt
cmp
les
cltd
sub
lea
and
mov
loop
nop
adc
mov
addl
mov
bound
mov
in
and
mov
imul
daa
outsl
loope
mov
inc
or
adc
cmp
shlb
out
push
mov
cmpl
inc
push
lret
and
jg
dec
xacquire
ds
mov
pop
push
pop
stos
fcoms
incb
data16
push
jg
ljmp
and
fbstp
mov
aaa
xchg
pop
scas
outsb
or
add
dec
push
pop
push
xor
shrb
or
jnp
pop
mov
xchg
inc
fst
jl
push
cmp
imul
add
das
jo
das
pusha
ret
pcmpgtb
mov
addb
adc
bound
and
lcall
xchg
push
stos
sbb
and
iret
aaa
xor
pop
push
insl
dec
xchg
test
outsb
mov
test
and
filds
decl
popa
repz
sub
mov
aaa
incl
loopne
inc
sbb
fisubrs
pushf
into
xor
sbb
incl
clc
mov
lcall
and
jecxz
sbb
dec
adc
scas
adc
mov
mov
mov
cs
push
in
jno
decl
pop
cld
call
sbb
xor
fldl
je
loop
insb
stc
iret
push
bound
adc
outsl
push
icebp
xor
adc
lret
mov
and
adcl
xchg
fiaddl
cmpsl
add
mov
dec
mov
adc
loop
pop
add
iret
sarb
and
jns
pop
pop
mov
or
mov
inc
mov
adc
or
jmp
add
int3
ja
pushf
movsl
push
push
leave
cltd
lcall
cld
out
xor
sbb
repz
mov
dec
movsl
xchg
decl
sahf
pop
lods
pushf
sahf
loopne
mov
cmpsl
push
push
add
cmp
push
lcall
fwait
cs
sbb
fs
bound
cld
incl
mov
mov
mov
mov
mov
rolb
add
mov
adc
xchg
lcall
cwtl
cmp
push
inc
loop
adc
orl
push
jle
push
je
into
sub
scas
sub
pushl
ljmp
dec
mov
inc
push
sbb
outsl
cmpsb
or
jl
xchg
adc
jb
mov
ljmp
test
outsl
inc
lods
fs
push
jge
mov
push
scas
jns
stos
inc
data16
cmp
inc
xchg
mov
in
stos
adc
lahf
subb
dec
push
std
inc
mov
sbb
push
incl
pusha
sbb
dec
dec
unpcklps
stos
call
xchg
frstor
fwait
leave
inc
dec
inc
adc
movsl
pop
pop
jbe
mov
inc
clc
jg
rcr
lahf
adc
or
mov
cld
pushl
sub
mov
inc
clc
push
ret
and
test
add
ljmp
out
jae
cmp
js
push
xchg
dec
push
add
xchg
and
cmp
jg
cmp
cwtl
push
fdivrl
push
mov
inc
fisubrl
sbb
pop
cs
shrl
mov
ja
inc
push
repnz
cli
or
loope
popa
movsl
xor
mov
enter
int3
xor
pop
pusha
xchg
mov
pushf
adc
sbb
lret
loope
xchg
pop
inc
rcrl
inc
insl
mov
mov
jns
sub
adc
adc
sub
in
xchg
jo
cmp
cmp
mov
scas
gs
imul
cmp
xchg
insl
push
ret
inc
arpl
xorb
insb
fwait
insl
adc
jb
or
jmp
mov
xor
jae
and
mov
adc
daa
call
mov
mov
mov
fists
orl
inc
daa
xchg
push
call
std
jg
lret
bound
arpl
xchg
mov
dec
roll
dec
pop
jno
lock
mov
push
pusha
and
lcall
xor
leave
adc
imul
inc
mov
scas
das
lcall
inc
mov
mov
loopne
into
cmpsl
and
into
mov
cli
lock
pop
push
sub
push
push
sbb
mov
sti
lcall
cwtl
push
shll
ret
pushf
daa
and
daa
insl
call
mov
jle
jmp
out
dec
mov
ljmp
je
sbb
xchg
xor
or
gs
mov
xchg
and
and
popl
mov
push
jno
cmp
mov
inc
popf
fcoml
insb
cli
xchg
test
add
add
jae
lcall
jp
fists
cmp
mov
loope
cli
mov
mov
mov
cltd
jbe
and
xchg
mov
dec
mov
stos
push
sub
push
into
and
cltd
leave
xchg
ss
lea
ret
inc
mov
mov
inc
mov
push
jae
jl
inc
xchg
and
push
pusha
repnz
jmp
jp
push
popf
xor
mov
mov
clc
sbb
sbb
dec
xor
push
push
inc
push
sub
shll
scas
and
ret
push
dec
dec
or
add
iret
pop
inc
es
or
lcall
sub
call
mov
aas
test
xor
ljmp
xchg
push
lds
mov
sbb
adc
xchg
in
add
test
and
out
fs
mov
fdivrl
cli
adc
lods
cli
cmp
sub
push
ror
inc
std
pushl
and
sub
icebp
sub
adc
lcall
push
cltd
add
shlb
int3
add
sub
dec
jecxz
incl
leave
jno
aas
xchg
rcll
les
popa
repz
mov
adc
into
addb
xchg
repz
push
cmp
inc
inc
mov
pushf
jmp
and
test
ds
ret
and
jo
lcall
pop
xchg
or
gs
cmp
and
push
inc
shl
shll
xor
add
and
lods
outsb
inc
inc
cld
call
bound
add
sbb
add
mov
mov
xchg
lods
sbb
add
cmp
sbb
fcomip
decl
lods
aam
outsl
pop
mov
dec
loop
push
test
js
adc
mov
sbb
js
xor
fldt
ljmp
andb
mov
mov
cli
orl
cmp
fdiv
pushl
cmp
dec
arpl
xor
lcall
mov
out
add
push
pop
inc
adc
sub
pop
fbstp
jno
push
jmp
mov
mov
or
adc
rep
ss
lahf
in
inc
sbb
std
or
dec
mov
das
inc
into
das
rcrb
out
out
pop
testb
movsl
aam
out
js
inc
clc
aas
xchg
cmpsb
imul
mov
cmc
pushl
mov
cmp
inc
icebp
sbb
lods
cmp
xchg
sub
adc
rorb
push
das
mov
clc
das
push
cmpsb
mov
cld
outsb
loopne
adc
pusha
stc
fdivrp
add
and
push
adc
rorb
dec
outsb
push
mov
stc
adc
mov
adc
ljmp
cmp
sahf
push
scas
push
adc
ljmp
jecxz
push
cld
xor
repz
loop
sub
adc
mov
rcl
fcomip
test
cmp
add
fcoms
enter
mov
add
push
mov
mov
icebp
and
sbb
mov
cmp
movsl
pushl
insl
inc
adc
cmp
lret
stos
loope
fst
call
subb
dec
cmc
adc
imul
loope
mov
mov
and
sub
sar
mov
mov
or
sub
sub
mov
sbb
sbb
fcomi
sub
inc
sub
xor
xor
movsb
daa
cmp
mov
mov
bound
outsb
mov
dec
popa
or
ss
sarb
cwtl
xchg
push
xchg
xchg
push
lods
push
scas
cwtl
jno
xchg
adc
stos
stos
mov
movsb
fiadds
sub
out
push
loop
push
sub
sbb
inc
insl
sub
mov
inc
movl
call
add
dec
and
mov
add
scas
fcoms
mov
add
pushl
inc
jno
inc
mov
std
sub
bound
add
push
outsl
decl
dec
cmp
or
out
pop
sub
adc
xor
mov
fwait
aad
stos
incl
xchg
fcomi
cmc
clc
mov
ljmp
inc
mov
insb
fdivs
cmp
addr16
mov
pop
js
jno
das
add
shl
pop
std
outsl
sub
ja
sarb
pusha
xchg
jbe
ss
mov
jg
dec
mov
js
adc
ss
lea
insb
pop
aas
je
cmp
pushl
mov
xchg
popf
ret
mov
pusha
jnp
call
and
jl
add
push
je
and
pop
loopne
iret
sbb
jae
adc
mov
inc
incl
push
jnp
sub
in
mov
movsl
das
je
js
or
sarl
mov
cmp
clc
xchg
add
andb
cmove
aam
filds
fadds
mov
jp
cmpsl
xchg
lds
popa
inc
mov
daa
stos
scas
sti
cli
mov
inc
or
mov
fsubrl
stos
iret
inc
sti
push
sub
sub
push
push
sub
les
pushl
mov
add
arpl
jnp
push
rclb
jns
adc
push
sahf
mov
out
stos
daa
xchg
scas
push
popf
add
out
dec
inc
into
lods
xchg
inc
test
loop
aam
dec
push
pop
aaa
cld
mov
leave
stos
adc
cmp
test
jecxz
dec
jmp
inc
inc
jne
or
cmpsl
adc
js
mov
push
inc
and
lahf
mov
rorb
xor
dec
out
xchg
sub
ja
cld
aaa
pop
in
ss
xor
decb
clc
pushl
xor
int
repz
dec
inc
fistpll
lcall
xchg
outsl
in
mov
enter
fsubl
mov
stos
add
jmp
and
mov
jp
xchg
xchg
enter
ret
out
inc
sub
adc
loope
fs
jb
stos
pop
jno
jg
mov
fistpll
xchg
cmp
aas
into
xor
sub
mov
and
sti
mov
jecxz
mov
sahf
lcall
dec
xor
xor
adc
ret
mov
je
inc
pop
scas
cli
enter
fwait
sahf
cmpsb
mov
or
mov
mov
mov
in
xchg
ja
lds
mov
mov
sub
add
clc
aas
lock
push
stc
lock
inc
fs
sarb
test
jle
xchg
mov
pop
div
scas
fisttps
fnstcw
or
loopne
add
decl
cmpsb
enter
and
sub
and
das
stos
xchg
push
mov
shlb
sar
int
or
test
xchg
mov
push
popf
mov
adc
jecxz
lock
inc
add
cmp
lret
cli
out
rorb
mov
addr16
out
js
ljmp
jp
sbb
stos
aaa
jl
scas
imul
lcall
mov
mov
stc
or
mov
ret
mov
lds
push
jp
xor
sti
sbb
mov
xor
add
cld
jmp
pop
rcrb
push
shll
xchg
xor
pop
cmp
sbb
ss
cmp
call
dec
call
xchg
and
cmpsl
ret
mov
inc
lds
xchg
js
mov
cli
in
sbb
xchg
aas
lods
xchg
scas
notb
inc
fildll
cmp
nop
lds
lea
addr16
mov
adc
lods
int
add
loope
popa
cli
or
mov
pop
and
test
out
xchg
inc
sbb
shl
lret
shlb
pusha
or
add
std
mov
add
xor
sub
sub
decl
jl
popa
push
gs
insl
sbb
jne
sti
jle
inc
lock
lcall
dec
sti
or
loop
xchg
dec
sbb
fwait
loopne
scas
hlt
jg
pushf
int
ds
mov
inc
ds
inc
sahf
mov
xchg
jbe
pop
mov
mov
push
jge
in
xor
or
jle
outsb
ljmp
jno
push
pop
push
adc
adc
add
call
js
pop
hlt
inc
rcr
dec
icebp
sub
jno
sbb
fistpl
and
add
sub
jle
ljmp
add
mov
movsb
jmpw
cli
aaa
es
std
mov
push
cmp
ss
inc
shl
popa
jmp
lods
cwtl
jg
clc
xchg
fiaddl
sbb
pusha
pop
pop
repz
xor
jmp
mov
add
adc
adc
xchg
rcl
ror
mov
andb
mov
mov
lods
pop
out
cmp
xor
out
mov
stos
add
pop
mov
loop
jle
push
jne
jg
icebp
hlt
pop
xchg
xchg
adc
fdivl
lret
mov
fbld
adc
jnp
fs
popa
add
sub
das
cli
and
cwtl
aaa
or
xchg
push
mov
std
call
dec
sub
and
aas
mov
push
sahf
popa
dec
mov
mov
out
cwtl
adc
fisttpll
mov
xchg
das
and
mov
push
out
push
jecxz
es
lahf
je
xor
dec
int
push
in
sub
fwait
push
loopne
loope
test
push
mov
out
sub
cmpsb
push
jnp
add
gs
adc
test
incl
sub
mov
nop
lret
fwait
pop
inc
cmp
repnz
rolb
xchg
sbb
cli
cmp
and
arpl
adc
dec
mov
fmul
or
push
call
repz
cmp
cmp
mov
jns
icebp
mov
ljmp
scas
push
pusha
pop
mov
pop
mull
imul
shrl
loop
xor
or
and
dec
cmp
mov
test
sub
xor
mov
push
ds
cmp
call
aas
mov
lcall
xor
je
test
xor
je
cli
lcall
mov
xchg
adc
mov
add
jns
xchg
add
sbb
cmp
xor
loop
dec
sub
push
icebp
nop
hlt
mov
bnd
aam
xchg
cmpb
scas
jne
jg
mov
sbb
ficompl
inc
stc
push
jno
leave
call
cld
scas
lock
shrb
decl
ljmp
xchg
test
fcomip
lcall
pop
jcxz
es
xorb
je
or
add
jecxz
jo
hlt
mov
aam
add
in
or
lcall
push
clc
pop
pop
rorb
push
lds
xchg
and
push
mov
push
stos
sarl
int3
xchg
jns
xor
inc
add
inc
pop
jge
push
sti
adc
and
xchg
call
loop
mov
fsubrs
inc
gs
std
push
xchg
mov
mov
scas
sbb
cmp
int
pop
pop
jbe
sub
scas
ss
mov
es
fldcw
les
popf
repnz
scas
add
sub
sbb
test
mov
fiaddl
bound
jecxz
outsl
mov
push
jb
hlt
sub
adc
punpckhbw
sbb
incl
iret
stos
sahf
cld
aas
mov
mov
out
cmp
push
dec
cli
aaa
cmp
sub
cmp
insb
or
scas
movsb
addb
loop
popa
mull
repz
sub
xor
push
outsl
pop
js
icebp
push
ja
jnp
pusha
push
mov
push
xor
call
add
sub
cld
js
jecxz
dec
jne
cmpsb
sbb
enter
rolb
pusha
xor
sbb
out
push
cwtl
clc
outsl
and
dec
or
or
movsb
dec
dec
sub
cmpsl
ja
clc
jbe,pt
mov
and
fsubrs
add
mov
push
dec
inc
shlb
dec
fs
rclb
das
inc
push
sub
nop
rolb
loop
ret
fwait
sar
out
shlb
jp
fsubp
icebp
lock
lods
and
je
mov
out
not
xor
dec
mov
loop
pop
cwtl
sub
cmpsb
cmp
scas
dec
push
pop
jl
aaa
jb
add
lcall
dec
pop
mov
cld
xchg
push
dec
xor
dec
sbb
adc
ja
ja
cmp
andl
cmp
cmp
xchg
nop
or
out
xchg
aam
sbb
sub
sbb
xlat
ret
dec
aad
pop
jbe
fildll
inc
jmp
sub
das
insb
push
mov
jg
jne
push
lcall
push
les
leave
aas
shrl
push
out
push
pop
aam
or
mov
hlt
repnz
adc
jmp
jecxz
mov
and
test
fyl2xp1
dec
cli
iret
adc
pop
jbe
jmp
pushl
ja
gs
rcll
aas
pop
clc
xor
int3
test
sbb
add
xor
fcomip
fdivrl
push
leave
bound
stos
cmc
scas
cmp
add
jae
cltd
cmp
xlat
xchg
decl
sbb
mov
out
push
js
add
sub
mov
or
push
sbb
dec
sbb
xchg
bound
xchg
mov
jno
add
outsb
adc
lcall
lods
push
mov
mov
testb
mov
mov
sub
and
jne
fs
inc
add
or
pop
jmp
pop
inc
fsts
xchg
pop
jae
pop
adc
or
aam
dec
out
loop
lcall
stos
push
cmp
shll
sbb
sbb
xor
mov
or
pop
sbb
or
inc
stc
es
rcr
dec
std
decl
add
xchg
cmp
xchg
jbe
xor
add
js
inc
cld
pushl
jo
mov
xchg
and
stc
test
incl
or
adc
adc
cmp
jns
addr16
jge
mov
aaa
dec
insl
inc
mov
fwait
or
jg
pop
push
xchg
addl
rcl
and
cld
or
ja
mov
jle
lods
mov
mov
and
mov
dec
mov
stos
dec
add
shrb
push
lea
call
jg
adc
dec
lds
popa
fistl
and
shrb
jl
jae
dec
cli
pop
arpl
outsl
cli
repz
dec
insb
dec
repnz
lret
sahf
bound
dec
inc
jg
or
and
es
mov
jne
dec
imul
int3
scas
js
or
xchg
sbb
add
jp
xlat
cltd
stos
add
or
mov
push
jns
jg
jmp
repnz
add
ljmp
pop
adc
xor
fs
or
cld
jl
jae
adc
in
inc
ret
jl
adc
mov
push
mov
pushl
in
cmpsb
xor
push
xchg
movsl
repz
xchg
es
mov
push
outsb
mov
cmp
sbb
mov
sbb
mov
into
or
or
call
mov
adc
mov
push
popa
push
jbe
jl
xor
sub
lcall
cmp
xchg
cmp
rcll
aas
out
rcll
push
into
cmp
aas
stos
dec
lahf
xchg
mov
cmp
mov
mov
loope
push
push
sbb
decl
sub
add
jns
int3
cmc
mov
stos
push
xlat
test
inc
pusha
test
jns
sub
idiv
jmp
push
fisttpll
dec
pusha
mov
mov
mov
mov
mov
inc
push
fs
mov
je
adc
mov
fwait
jbe
push
add
or
call
loopew
inc
jge
enter
lahf
lcall
cli
adc
jne
adc
ljmp
mov
adc
jmp
mov
cs
or
fnstcw
mov
pop
xlat
jne
mov
xchg
mov
subb
rorl
mov
xlat
je
idivb
iret
dec
or
xor
mov
sbb
pop
cmp
incl
add
mov
jno
jg
out
inc
ficoml
sti
outsl
add
mov
and
xchg
lret
mov
out
loopne
push
ds
jbe
adc
xor
and
pop
ljmp
mov
iret
int3
jo
pop
jo
cmp
adc
jo
stos
xor
decl
ret
mov
push
mov
in
sbb
adc
popa
aaa
in
mov
mov
out
dec
inc
add
cwtl
clc
jnp
push
jns
adc
std
decl
xor
rcrl
and
insb
push
out
fildll
decl
pushf
mov
xchg
sub
dec
mov
nop
adc
sub
jb
out
xchg
icebp
xor
pop
pop
xchg
jp
clc
mov
and
cmp
pushl
push
stos
loop
dec
repz
ret
adc
lret
mov
into
adc
cmp
mov
cmp
shll
incl
jno
sbb
jns
mov
xchg
mov
dec
pushf
rorl
in
lods
sahf
xor
hlt
ljmp
push
cwtl
mov
popf
loop
jb
fldl
js
out
sub
clc
fwait
shlb
mov
cld
and
mov
clc
ljmp
outsb
sbb
cmp
pushf
repnz
jge
adc
mov
mov
je
dec
mov
dec
mov
cld
lcall
add
sbb
jb
inc
push
stos
mov
lods
insb
call
push
icebp
adc
mov
nop
cmp
sbb
pop
inc
ja
push
and
push
in
push
jg
push
dec
xchg
jmp
pop
push
js
dec
push
lcall
das
jno
xor
ja
push
push
popa
xchg
ret
fcoml
dec
jle
movsl
stos
push
mov
ja
js
inc
out
jb
filds
push
clc
sbb
cmc
sbb
das
xchg
add
in
jmp
loope
dec
iret
jle
mov
adc
popa
pushl
outsl
mov
mov
imul
push
in
sbb
gs
lcall
daa
outsl
or
cwtl
sub
nop
imul
bound
call
cltd
pusha
jle
mov
cmp
je
push
and
jg
xor
sub
leave
imul
aas
push
add
pop
mov
or
lods
and
jl
add
mov
mov
mov
sbb
arpl
movsl
aaa
incl
lret
or
or
pop
jb
inc
clc
jle
push
jbe
imul
adc
shrb
sbb
shlb
das
push
jmp
xor
out
mov
pushl
clc
cmpsl
ret
sbb
daa
es
adc
adc
add
ljmp
nop
cmp
adcb
pop
inc
mov
push
jne
mov
push
test
insl
lcall
xor
pop
cli
pushl
call
mov
or
ss
mov
fwait
in
adc
mov
or
jno
mov
decl
dec
mov
dec
repnz
push
and
add
push
jnp
jmp
xchg
jmp
cld
push
pushf
testl
pop
xchg
test
jg
pop
inc
dec
mov
pushf
dec
and
sub
loop
cs
mov
movsl
xor
test
push
jg
sub
bound
test
das
mov
mov
xor
cmp
movsl
icebp
decl
push
and
mov
aam
inc
ss
test
push
scas
pop
mov
cmp
shlb
sbb
inc
stc
adc
mov
jns
popl
sahf
mov
pop
clc
pop
daa
and
mov
leave
mov
pop
cld
in
cmpb
fmull
in
cmpsl
mov
into
js
or
test
and
xchg
push
addl
jle
rclb
sub
cmp
dec
ja
ja
dec
lret
std
in
int3
cmpsb
mov
pop
jmp
jno
dec
loope
fs
xorl
in
ret
mov
loope
jg
shll
subb
push
aam
lea
aaa
add
int
push
aad
dec
xor
push
cmc
out
cli
ret
pusha
hlt
imul
ljmp
xchg
ja
inc
xchg
pop
inc
or
out
clc
out
dec
push
sbb
cmc
orb
dec
add
and
jns
cmp
xlat
jg
aas
jo
dec
shll
xchg
jmp
pusha
bound
jge
popa
dec
cmp
mov
mov
push
jecxz
dec
movsl
inc
inc
sub
inc
xchg
dec
out
cmpsl
lahf
xchg
insb
test
ret
add
xchg
lods
jne
fisubl
sahf
or
add
inc
scas
inc
jo
jle
push
push
orl
sbb
hlt
cmpsb
das
clc
in
pop
and
jnp
and
pop
push
push
mov
xorl
out
dec
das
repz
aas
adc
inc
in
jbe
pop
fsubl
sar
jg
pop
popf
dec
fucomp
pusha
in
js
dec
clc
push
rcrb
cmc
jl
fbld
test
jns
lcall
cmpsb
scas
add
cld
incl
dec
and
pop
dec
sbb
add
orl
pop
and
push
xlat
ja
sbb
push
notb
or
lods
sar
incl
in
cwtl
pop
fldenv
or
popf
dec
stc
xor
iret
pop
or
ljmp
iret
aaa
mov
sbb
jecxz
push
or
inc
inc
cli
fcomip
clc
aaa
fwait
inc
push
jns
cmpsb
or
mov
out
mov
and
pusha
ret
stos
xor
jne
inc
jge
test
jae
add
jp
mov
in
incl
ficoml
push
mov
xchg
or
jns
add
data16
jg
mov
xchg
pop
push
pop
roll
shll
loopw
repz
ret
ljmp
cli
pop
in
xchg
ja
pop
ret
xor
popf
jg
dec
push
pop
lahf
test
decl
addr16
js
mov
sbb
adc
gs
test
dec
xchg
push
pop
or
and
addb
pop
hlt
mov
nop
push
or
sahf
call
outsl
sbbl
adc
and
lods
pushf
push
jne
jl
in
pusha
or
xor
stc
mov
mov
mov
add
mov
jne
iret
mov
cmp
incl
xor
adc
inc
jle
jmp
shll
jl
incl
sahf
imul
jno
addr16
adc
inc
jge
inc
fistps
out
outsl
das
xchg
dec
arpl
xchg
xor
pop
mov
and
xor
pop
sbb
test
mov
das
cli
pushl
add
or
inc
shrl
cwtl
cmpsl
and
inc
loopne
ljmp
das
les
movsl
adc
sub
mov
fnstcw
mov
mov
or
test
mov
pushl
cmc
xor
xor
jmp
pop
pop
and
add
pop
mov
inc
pop
pusha
shll
ljmp
movsl
push
jb
daa
inc
inc
repz
push
mov
push
ljmp
mov
jle
scas
xchg
lock
movsb
mov
inc
mov
mov
cmp
icebp
push
xor
cmp
and
rep
sbb
jle
fistpl
mov
bound
jmp
or
mov
dec
sbb
lcall
xor
adc
mov
pop
stos
popl
mov
out
mov
or
inc
xchg
and
and
pop
faddl
mov
or
add
decl
cmp
and
sbb
add
outsb
xchg
jnp
aad
inc
jp
xchg
fiaddl
jbe
and
call
adc
lds
pop
inc
mov
lea
outsl
mov
mov
lea
cwtl
loopne
xchg
inc
push
into
sbb
and
and
sub
scas
and
jl
loop
movsb
pop
jl
mov
test
call
js
xchg
pop
inc
sti
jno
pop
mov
pushf
aaa
xor
mov
bound
call
popf
push
iret
pop
mov
sub
repz
xchg
js
scas
data16
mov
or
in
mov
fnstcw
jbe
and
pop
mov
sbb
enter
inc
mov
out
pop
imul
mov
or
dec
mov
push
loope
lcall
mov
sarb
jae
xor
sub
jb
ljmp
decl
xlat
push
jae
mov
lods
addr16
mov
xorl
mov
in
cli
das
cli
dec
lods
cmp
std
and
dec
xchg
les
adc
fs
dec
scas
adc
data16
ljmp
test
cmp
cs
dec
mov
pop
out
sahf
call
lock
mov
push
add
cmp
sbb
push
stos
adc
test
sub
je
jmp
cmc
cltd
xorb
scas
sub
popl
mov
cmp
push
std
jg
or
leave
sbbb
aas
ja
jne
or
mov
jl
mov
jo
mov
cs
fnstcw
sub
inc
aad
and
jge
push
dec
cwtl
pop
xchg
push
imul
pop
pop
xchg
add
mov
fwait
mov
jb
xor
sbb
cmpsb
xor
cmp
mov
dec
sbb
push
fwait
cmp
add
adc
or
lcall
push
jb
sub
mov
xor
fwait
daa
mov
push
mov
xchg
xor
add
add
cld
cltd
cmp
das
lea
incl
aaa
add
dec
dec
and
push
push
jge
mov
ljmp
cltd
cmp
xor
sbb
and
sbb
sbb
xor
imul
cwtl
and
pop
stos
xor
mov
test
mov
mov
mov
call
mov
pop
mov
lahf
mov
jbe
inc
inc
filds
adc
push
xor
mov
sar
xor
inc
ja
outsl
sbb
mov
scas
mov
daa
sbb
adc
popa
ja
stc
mov
mov
ljmp
or
jmp
jno
jne
sbbb
movsb
mov
stos
clc
jg
jl
push
aam
mov
jbe
test
es
ds
xor
das
cld
ljmp
fdivrl
gs
cmp
sahf
mov
or
loop
xor
ss
nop
loop
xor
arpl
ss
fildll
sub
mov
dec
pop
test
mov
test
call
sbb
xchg
rorl
cwtl
pop
mov
ss
jo
addb
in
xchg
or
pushl
add
mov
xchg
mov
nop
call
xchg
arpl
movsb
sub
mov
lcall
shlb
mov
adc
push
pop
lcall
loopne
pusha
jp
push
add
adc
or
mov
mov
lret
loop
push
aas
insb
cld
test
cmp
inc
mov
addl
notl
call
inc
jp
xor
sub
adc
lea
cltd
ja
push
push
cmp
add
clc
or
loop
adc
xchg
adc
mov
inc
cmp
inc
cmp
xchg
ret
pushf
leave
push
add
xchg
push
pop
je
or
adc
mov
adc
cmp
xchg
and
or
push
adcl
test
adc
push
mov
pop
cmp
scas
nop
repnz
decl
inc
or
sbb
mov
lds
sub
pop
decl
dec
clc
adc
mov
fbld
cwtl
lcall
fwait
mov
insl
xor
orb
mov
pop
add
or
decl
xor
cmp
lahf
stc
jns
pusha
jmp
jle
pop
xchg
push
inc
cmp
jno
or
xchg
out
push
hlt
incl
pop
inc
sbb
inc
xorl
lods
or
call
movsb
lea
int3
lods
jno
mov
sub
inc
xor
push
gs
clc
cmpsb
adc
inc
pop
sbb
ljmp
xor
xor
sbb
inc
add
sarl
imul
push
mov
xchg
cmp
xchg
add
xchg
arpl
scas
mov
in
pushf
pop
imul
and
cld
lds
psllq
xchg
mov
pop
adc
mov
divb
push
sar
jo
test
scas
inc
ds
fbld
push
cld
or
loopne
enter
into
jp
mov
adcb
push
inc
mov
mov
push
sarb
dec
icebp
imul
xchg
adc
mov
sub
cmp
in
filds
jl
int3
sbb
int3
sub
dec
add
mov
push
sbb
inc
ret
cwtl
xor
imul
cmp
xchg
icebp
inc
adc
and
xchg
pop
adc
shll
outsl
cli
ljmp
xor
xor
popf
ss
sbb
cltd
out
jbe
xor
inc
jge
push
sbb
cmp
scas
subb
ret
repz
push
adc
scas
lock
inc
sub
sub
mov
insb
addr16
mov
sbb
pop
fs
mov
cmp
jle
jp
sub
call
sbb
ds
push
movsl
mov
fwait
stc
mov
rolb
addr16
les
dec
pop
pop
cltd
pop
addr16
jg
out
or
inc
sahf
xchg
outsl
dec
cmpsb
pushf
mov
mov
or
repz
movsl
movsb
ljmp
add
push
jbe
mov
jne
cmpsl
cmpb
xchg
add
test
pushf
push
insb
push
roll
xchg
add
sbb
ljmp
imul
pop
add
jg
inc
outsl
jne
jge
ja
outsb
and
insb
and
push
and
dec
cld
incl
mov
icebp
lahf
dec
lds
shlb
mov
mov
dec
daa
push
adc
adc
dec
or
fiaddl
mov
mov
scas
dec
test
pushf
adc
sbb
test
xor
jo
xchg
out
add
movsb
mov
stc
or
mov
sub
mov
dec
pop
inc
push
adc
out
mov
or
xor
add
pop
fwait
xchg
dec
mov
je
inc
out
daa
mov
outsl
cmp
adc
mov
push
inc
loope
lods
inc
cwtl
mov
insb
push
sub
cmp
cld
sahf
and
mov
jnp
aad
popa
xor
xchg
lret
stos
dec
in
push
lcall
into
cmp
add
icebp
das
arpl
fs
mov
cwtl
aad
cltd
dec
outsb
push
cwtl
mov
add
lock
add
dec
pushl
ja
shrl
xchg
jno
mov
jns
aad
mov
out
dec
ljmp
lock
or
and
mov
inc
jmp
bound
jo
dec
movnti
pop
fisttpll
push
movsl
mov
ljmp
push
ljmp
cmp
mov
mov
inc
mov
sbb
mov
sbb
dec
ja
cld
decl
xchg
sub
iret
mov
mov
or
lea
push
mov
jo
in
mov
aas
call
push
mov
jo
sahf
outsl
gs
ljmp
fs
orl
mov
push
int
fistpl
cmpsb
ljmp
pushl
jb
inc
pusha
sbb
mov
lcall
inc
enter
xchg
dec
sbb
pushl
je
je
incl
sub
jecxz
dec
out
call
fidivrs
jo
pop
sbb
test
jmp
adc
add
std
sub
mov
cwtl
push
cmpsb
mov
dec
cs
or
loope
adc
inc
push
cmp
and
mov
pop
mov
mov
dec
dec
pushl
inc
inc
push
sub
aam
xchg
fadds
shr
bound
popf
xchg
scas
jae
out
mov
cwtl
xor
xchg
call
jmp
jge
mov
xchg
pop
xchg
inc
out
mov
nop
mov
call
inc
stc
orl
xchg
sar
incl
mov
mov
shlb
out
adc
xor
out
mov
je
incl
call
xchg
jl
cs
in
push
out
in
test
xchg
inc
cmp
subb
xchg
sub
insb
bound
in
sti
pop
sbb
pop
push
jns
mov
mov
icebp
sub
clc
call
jl
xlat
mov
or
jge
adc
les
jbe
loopne
in
cli
mov
scas
stos
movsl
popf
mov
add
and
pushl
in
inc
pop
jge
out
mov
adc
mov
cs
or
insl
adcl
inc
in
push
sbb
adcb
js
jp
mov
ljmp
test
push
dec
cwtl
push
imul
jg
test
insl
and
fwait
jp
test
jg
ds
pop
std
add
jg
mov
mov
cmp
xchg
aas
fstl
mov
aaa
xchg
loop
mov
test
decl
ss
adc
sbb
inc
mov
out
dec
das
jbe
arpl
into
mov
sbb
push
jne
mov
outsl
fcomip
fildll
or
push
add
xchg
scas
adc
sub
cmc
ffree
pushl
nop
xchg
xor
xor
inc
xlat
std
lcall
lds
xchg
sarb
js
mov
mov
outsb
inc
ja
notb
xor
fstl
xorb
jb
je
sbb
es
inc
xchg
cmpsl
je
es
bound
fstpt
xchg
sbb
and
mov
and
push
jecxz
cmp
dec
loopne
xchg
sbb
adc
xor
cmp
repz
mov
dec
mov
cltd
movsb
test
stc
mov
inc
jae
cmp
lods
sbbl
cld
add
fs
movsb
cmpb
fildll
mov
and
push
pop
clc
pop
out
xchg
into
jle
lea
jmp
dec
movsb
mov
jae
xor
rorl
stos
xchg
or
pop
jg
gs
mov
push
mov
js
and
incl
imul
aam
mov
nop
push
sub
stos
cmp
inc
loop
add
jl
pop
dec
jne
outsb
je
lods
or
pop
mov
push
shrb
mov
mov
ljmp
sar
xchg
std
popf
mov
inc
xrelease
rcll
xor
mov
mov
cmc
stos
in
and
mull
mov
lcall
xchg
cmpsb
xchg
sbb
inc
xchg
cmp
xchg
mov
mov
mov
mov
jno
cmc
cwtl
fistps
mov
lcall
sub
orb
fists
pop
lret
pop
dec
scas
push
cmpsl
or
leave
pop
in
jmp
icebp
and
scas
inc
sbb
lahf
insb
lock
adc
addr16
pop
jne
sub
decl
dec
pushf
mov
add
aam
call
ljmp
push
jl
cmp
jle
pop
dec
lds
aam
cld
aaa
push
loopne
fwait
pop
in
push
and
cli
pusha
or
cmc
mov
cmpsl
jns
sahf
pop
loope
inc
pop
fimuls
sub
fsubs
scas
test
mov
xchg
int3
sub
pop
loope
int
push
cld
call
jecxz
cmpsl
outsb
insl
dec
mov
mov
xor
hlt
fisttps
inc
jae
mov
xchg
jmp
sbb
ljmp
in
push
cmpsb
shlb
std
or
out
or
adc
jo
xor
decl
ret
jge
addr16
cmp
add
cmpsl
out
in
mov
inc
xchg
notb
outsb
inc
insl
in
push
test
xchg
add
pushf
test
in
ret
jl
xchg
sub
xor
mov
call
lret
enter
cmp
xchg
ljmp
shl
push
xchg
sbb
mov
sbb
or
mov
and
stos
call
sbb
push
mov
push
jmp
nop
pushl
seto
cmpsl
ja
cmp
mov
imul
sub
les
add
push
outsb
imul
fst
jle
push
mov
inc
loope
movsb
push
std
mov
sub
imul
adc
cmpsb
bound
and
decl
and
mov
aas
inc
loop
mov
mov
insb
jmp
mov
sub
enter
bound
lret
sbb
ja
out
fsubs
sar
jmp
cltd
jb
aam
inc
jbe
mov
jge
and
add
call
shrb
stc
addr16
loopne
mov
fiadds
das
stos
ffreep
int3
mov
dec
into
in
xchg
ljmp
push
push
xor
cmpsb
mov
in
cmpsb
push
ljmp
rcrl
inc
jecxz
mov
jl
test
out
hlt
xchg
or
pop
mov
stos
mov
pushf
rcrb
dec
lret
cmp
das
sahf
nop
mov
push
sbb
inc
in
cmp
add
push
or
lea
adc
outsl
mov
icebp
add
fdivrp
jmp
or
adcl
inc
ret
mov
jp
sub
add
mov
int3
mov
mov
ljmp
jmp
dec
lret
movsb
adc
loopne
xchg
sub
push
push
push
lods
push
inc
clc
mov
sub
repz
sbb
fistl
mov
mov
cmp
mov
mull
mov
lcall
std
mov
adc
test
dec
xlat
mov
dec
out
sub
sbb
mov
mov
jg
inc
test
addl
xlat
mov
inc
shll
sub
lahf
sbb
adc
ljmp
icebp
jle
jno,pt
jne
mov
loopne
stc
fs
dec
popa
xchg
jg
jg
decl
insb
lret
cmpsl
inc
xor
movsl
sub
shlb
or
push
cld
decl
and
mov
sub
adc
mov
pop
test
incl
push
sub
xchg
repz
xchg
mov
scas
dec
popa
jne
ss
sub
imul
xor
pop
xchg
imul
inc
dec
leave
xchg
movsb
add
sub
xor
jo
sub
lock
in
clc
std
jg
rorb
mov
mov
in
mov
cltd
in
jo
add
inc
shrb
jne
push
ljmp
mov
jbe
pop
mov
mov
lcall
xor
xchg
xchg
insb
sti
or
xchg
push
cmp
xchg
push
jmp
push
fs
movsl
add
test
add
arpl
imul
out
pop
hlt
ljmp
stos
fstl
out
jecxz
or
scas
lret
fldcw
iret
xchg
xchg
mov
out
mov
or
dec
add
scas
lods
adc
adc
insb
test
xchg
xor
dec
decl
adc
cmp
pop
out
or
mov
je
mov
dec
mov
sbb
in
add
pop
ljmp
imul
aas
mov
sbb
test
and
sbb
incl
or
mov
in
or
push
fdivrs
fbstp
push
rclb
mov
sub
jb
call
cwtl
lods
mov
daa
dec
mov
in
leave
mov
xchg
std
test
xchg
dec
jo
cli
sub
out
mov
ljmp
dec
fldenv
inc
fistpl
xchg
xchg
and
mov
mov
xor
test
mov
jecxz
mov
icebp
and
push
cmp
cld
xor
mov
sub
add
xchg
mov
jle
clc
sbb
push
pop
std
mov
lods
stos
jp
cmp
xor
cmpsb
inc
movsl
adc
push
std
sbb
sbb
cmpsl
jo
movb
adc
dec
cld
incl
bound
movsl
nop
das
lea
jmp
call
jmp
inc
pop
dec
daa
xchg
mov
pop
jp
sbb
inc
mov
ljmp
adc
clc
pop
xor
mov
test
cmp
pushl
es
xor
add
mov
or
out
jns
pop
pushf
adc
xor
in
mov
sub
fdivr
and
fnstenv
in
cmp
fisttpl
int
adc
enter
or
in
xor
dec
or
insb
mov
jmp
mov
scas
jno
orb
mov
adcl
sarl
out
fistpl
outsl
or
pop
adc
add
insb
aaa
jno
add
ljmp
mov
cmp
mov
into
inc
inc
adc
push
jmp
adc
jae
mov
mov
mov
push
jbe
xor
or
clc
ljmp
jp
arpl
or
clc
call
nop
jmp
jg
pop
cmp
aaa
inc
les
std
push
lcall
ljmp
mov
fstpl
jbe
jo
lcall
mov
cmp
ret
scas
inc
add
decb
dec
stc
ljmp
fcmove
or
pop
jo
sub
fdivs
scas
movsb
jmp
outsb
imul
into
push
sbbb
inc
loope
adc
push
adc
jno
push
push
dec
jno
call
mov
lcall
jecxz
int
jns
mov
cmpsb
iret
or
add
pop
loop
rcrb
loopne
dec
imul
sub
icebp
lds
pop
rclb
enter
mov
ljmp
cld
lcall
adc
outsl
adc
jle
pop
jmp
pusha
add
ja
inc
mov
test
push
inc
jnp
loopne
int3
lcall
pusha
fs
mov
mov
dec
and
inc
jns
rcrb
ret
aad
rcll
icebp
aas
rolb
push
fidivrs
mov
cwtl
dec
push
xchg
out
sbb
dec
push
dec
mov
icebp
addr16
lret
push
jns
jmp
mov
and
pop
mov
inc
pop
ljmp
aas
inc
mov
in
mov
cmp
mov
loopne
jmp
outsb
sbb
mov
cmpsl
pop
lock
ljmp
and
scas
imul
fcoml
push
mulb
hlt
mov
outsb
sbb
inc
mov
movsb
xchg
mov
jnp
jae
fsubl
scas
pop
jge
imul
cltd
in
movsb
dec
aam
jns
loop
mov
inc
je
push
insb
ljmp
insb
lret
int3
shrb
cmp
ja
loop
fimull
and
data16
mov
push
adc
shll
js
sub
bswap
or
xor
and
sti
aaa
ret
mov
call
dec
or
in
loopne
int
xchg
lcall
mov
std
call
mov
les
inc
test
lea
inc
dec
jp
inc
fsubrl
dec
mov
mov
push
iret
sub
or
lock
fwait
pop
inc
imul
bound
cmp
test
adcb
les
outsb
js
sahf
cmp
cmp
xor
popa
mov
ja
mov
adc
stos
fldt
dec
lods
mov
adc
push
sbb
adc
inc
and
cmp
pop
outsb
push
xor
mov
pop
inc
push
stc
cmp
add
leave
pop
lods
call
in
daa
stc
sub
push
call
xor
lods
lret
dec
insb
arpl
xor
iret
mov
push
aaa
pop
cmp
add
sub
mov
ljmp
add
inc
hlt
push
add
ljmp
fisttpl
loop
lods
js
in
sub
inc
cwtl
popf
cmc
dec
ret
push
dec
adc
xor
cs
roll
negl
pop
jg
scas
faddl
in
cmp
adc
ficomps
subl
test
mov
fstpt
push
icebp
xor
jl
cli
aad
incb
jns
adc
movsl
arpl
dec
pushl
xchg
inc
and
dec
push
pop
push
pop
jno
add
and
xchg
lock
jnp
mov
pop
mov
pop
outsl
out
xchg
push
decl
imul
add
jnp
scas
xor
sbb
sbb
test
movsl
mov
push
scas
cmp
push
ret
push
aaa
cmp
cmp
jp
addr16
or
loopne
decb
adc
mov
lock
jbe
pop
scas
and
decl
push
fdivs
in
mov
dec
mov
adc
sti
sub
sub
call
sti
xor
inc
int
int3
xor
dec
jp
scas
fimuls
test
cltd
or
andb
adc
dec
shll
mov
pop
jno
pushl
mov
ljmp
push
scas
xor
push
adc
rcrb
repnz
les
clc
lds
and
xorl
fcoml
lahf
out
or
incl
mov
movsl
popa
mov
fnstenv
gs
mov
out
add
decl
mov
jmp
adc
hlt
stos
xchg
or
les
pop
xor
orl
cs
cmp
or
fistps
popf
clc
and
cmp
push
dec
mov
mov
gs
pop
into
out
cmpsb
icebp
cmp
add
sbb
sarb
xchg
jb
mov
mov
inc
fldl
fiadds
lcall
lret
sbbl
insl
cmp
adc
or
push
pop
hlt
add
fistps
pop
lahf
cmp
fisttps
mov
decl
lods
mov
cwtl
jp
das
xchg
mov
pop
dec
add
pop
dec
pop
mov
and
sub
aas
stc
rcrl
mov
sub
icebp
movsl
dec
rorb
or
cmp
test
pop
cmp
push
fnsave
cmp
xor
sub
mov
mov
or
jg
subl
jbe
iret
insb
popa
enter
cmp
sub
aaa
out
push
dec
and
into
mov
in
adc
ret
xor
ja
clc
popa
xchg
and
jae
lods
pop
popa
mov
sahf
adc
lret
out
out
mov
test
out
inc
mov
nop
les
ljmp
jo
dec
movsb
roll
inc
adc
sub
inc
or
add
cmp
incb
jbe
aaa
lods
adc
pushl
push
push
stos
adc
mov
sbb
sub
adc
gs
mov
pushl
arpl
pop
js
sbb
sub
decl
push
je
mov
xor
jns
sub
push
cmpsl
cmp
decl
scas
or
mov
adc
push
inc
inc
mov
and
and
aas
push
push
push
loopne
add
cmp
or
lret
in
push
cmp
in
mov
inc
or
fimuls
aad
jmp
pop
andb
mov
popf
movsl
cmpsl
or
mov
mov
lcall
cwtl
movsl
add
mov
and
mov
and
push
mov
sbb
and
cmpsl
sub
incl
es
jae
ss
cmp
pop
in
xorl
negl
dec
mov
fistpll
cmpsb
xchg
dec
push
sub
inc
into
push
je
sub
mov
sub
nop
and
push
pop
add
fbstp
inc
dec
daa
arpl
push
out
inc
cld
mov
xor
jnp
stos
push
mov
cmp
mov
fwait
movsl
decl
daa
outsb
sub
mov
and
ret
mov
jp
fwait
cmp
xchg
push
xchg
ds
cmp
mov
pop
in
jno
push
es
xchg
ret
ss
mov
xor
mov
and
cs
rcll
bound
pop
cmp
lods
movsl
pusha
jnp
or
pop
sbb
jg
pushl
aaa
nopl
xor
xlat
mov
je
mov
jmp
js
mov
inc
cmp
mov
inc
lds
jno
add
js
mov
enter
push
clc
xchg
pop
test
mov
iret
sbb
imul
pop
jbe
out
sbb
daa
mov
xchg
push
clc
jb
addr16
push
jge
jp
ljmp
clc
jmp
xor
fstl
fmul
pop
cmc
adc
mov
test
mov
xchg
popa
ss
adc
fsts
repnz
cld
ljmp
rep
cld
or
in
int
xor
sub
cmc
cmp
std
cmp
mov
and
mov
xor
fsubrs
stc
mov
jbe
pop
mov
call
dec
dec
inc
sahf
dec
scas
fld
call
jl
mov
popa
aas
jae
imul
je
dec
xor
js
repnz
xor
cs
in
mov
dec
ljmp
std
int3
dec
inc
dec
sub
aas
pop
or
lcall
popf
stos
popa
cld
pop
sub
addb
sub
clc
sub
and
insl
jge
xor
cmpsb
mov
mov
mov
ja
mov
scas
pop
xor
or
push
push
inc
jg
cmc
cmp
imul
stos
push
xchg
insb
xchg
add
insb
cli
call
loope
mov
dec
out
xchg
pop
fsub
call
ljmp
cmp
ret
jp
cmc
add
insl
fsubl
jns
adc
push
sbb
sbb
lret
xor
popa
cld
xor
sbb
out
cli
jo
or
lret
dec
mov
clc
out
fdivrs
fdivs
fstpt
mov
mov
sbb
cmpsb
ja
aaa
fidivrl
imul
and
out
push
cmpsl
decb
andl
call
push
scas
sti
es
sahf
addr16
mov
into
xchg
xchg
mov
dec
out
mov
incl
mov
cmp
push
fs
lods
sub
clc
mov
push
mov
sub
jno
jmp
fs
stc
fidivl
fnstsw
movsb
mov
jp
pushf
jle
out
mov
orb
incl
or
es
mov
aam
je
out
mov
call
or
mov
sbb
mov
jns
out
mov
jmp
jne
and
xlat
aas
lcall
insb
xlat
or
sub
imul
clc
cmp
mov
mov
xchg
xchg
pop
pushf
add
outsl
mov
decl
add
jns
in
inc
scas
bound
and
std
js
mov
sub
cld
dec
popl
mov
loope
scas
pop
test
pop
mov
pop
xchg
cltd
cmpsb
inc
xlat
mov
sbb
decl
outsb
in
mov
inc
mov
decl
mov
pop
out
es
scas
lds
mov
lahf
in
xchg
fs
dec
adc
mov
mov
clc
lcall
cli
mov
jl
int3
das
shll
mov
stc
and
clc
out
push
in
add
test
mov
fmul
aam
dec
ljmp
aam
pop
aaa
push
mov
out
lcall
aaa
call
test
jmp
stc
sub
cmp
fisubl
adc
adc
mov
pop
in
push
mov
inc
das
pop
dec
cld
icebp
nop
and
arpl
mov
out
xchg
cmp
sub
adc
cmpsb
sbb
nop
sbb
pushl
push
mov
dec
adc
cltd
push
push
incl
adc
dec
xchg
sbb
mov
daa
inc
inc
sbb
and
jne
lcall
hlt
or
lcall
fsubl
dec
lcall
das
in
test
cld
fildll
repz
adc
daa
lret
jbe
jp
fidivrs
cmp
fdivrs
mov
leave
aam
cli
jne
jp
sbb
popf
xor
sar
call
int3
add
mov
push
adc
imul
into
add
push
das
xchg
stos
pushl
mov
xchg
arpl
fucomi
mov
js
or
or
hlt
ljmp
dec
aaa
mov
adc
mov
mov
xlat
decl
inc
dec
gs
shll
push
iret
orb
loopne
or
rcrb
mov
in
or
cli
test
inc
addl
xor
decb
xchg
stc
push
incl
and
xchg
stos
mov
mov
lahf
jae
xor
add
loope
incl
adcl
aam
orl
into
adc
ror
incl
and
movsl
jb
xlat
fucompp
jo
sub
incl
aaa
fwait
inc
ret
mov
pop
shlb
pop
xlat
mov
pop
inc
sub
enter
mov
decl
lcall
push
scas
sub
pushf
icebp
xchg
pop
jne
and
push
dec
bound
fistpll
mov
sub
lods
push
clc
lcall
out
cli
add
or
loope
pushl
jne
mov
insb
stos
int3
aas
lahf
call
or
scas
popf
mov
popa
lds
cs
ja
insl
in
mov
jb
or
jecxz
out
aaa
xlat
ret
push
fidivs
pusha
sarb
lret
wbinvd
call
addr16
mov
faddl
push
inc
xor
mov
jns
push
jmp
movsb
cwtl
xchg
insl
push
les
inc
mov
pop
data16
insb
fs
or
shrb
mov
pushl
mov
mov
add
xorb
inc
pop
mov
or
loope
pushf
mov
cmpsl
movsl
movsb
dec
push
lods
inc
test
push
pop
xchg
call
mov
lods
je
sbb
cmpsb
mov
xchg
inc
in
push
inc
into
sub
outsb
sbb
push
mov
lods
mov
inc
mov
cmp
out
or
into
push
idivl
in
cmp
fcmovbe
decl
iret
pop
mov
or
xchg
ss
enter
decl
xchg
xchg
sub
jb
movsb
stc
mov
imul
lods
rorl
fistpl
mov
jno
dec
inc
std
sub
jl
adc
push
stos
and
insl
dec
mov
pop
ret
pop
pop
gs
pop
scas
push
jne
lahf
dec
add
stos
add
push
push
sub
or
lds
sti
and
push
popf
and
xchg
or
pop
or
mov
out
inc
decl
out
fistpll
movsb
mov
pop
jno
loop
push
call
inc
sub
shlb
xchg
enter
jmp
les
ljmp
dec
push
sbb
sub
cltd
or
bound
sub
hlt
call
mov
mov
xor
adc
push
jp
dec
imul
faddl
mov
fs
int3
lcall
push
sub
push
movsb
xchg
lcall
inc
push
jne
mov
movsb
mov
push
lcall
js
jbe,pt
std
mov
call
xchg
mov
mov
clc
push
js
insl
pusha
mov
out
mov
jb
mov
inc
cmp
add
sub
lock
xchg
lea
ds
lahf
mov
inc
lea
test
outsl
clc
ljmp
dec
inc
daa
dec
fldenv
jnp
jno
add
lods
mov
dec
jno
popa
dec
jmp
jg
bound
pop
inc
lcall
js
dec
jbe
lahf
popa
pop
jg
mov
inc
dec
jo
les
gs
pushl
dec
ret
push
imul
mov
mov
push
mov
pop
arpl
outsb
cmpb
lds
decb
in
and
add
mov
or
push
scas
test
mov
pop
je
inc
pusha
gs
push
jne
mov
xor
adc
sahf
mov
sbb
dec
inc
cwtl
call
add
les
dec
gs
int
pop
dec
js
js
pop
mov
and
imul
pusha
inc
pop
and
loop
pop
sbb
sub
bound
jne
js
stos
push
xor
clc
mov
inc
je
jp
test
shrb
xchg
ss
inc
pop
out
inc
push
lcall
dec
push
lcall
fyl2x
xchg
push
push
notb
jp
mov
loopne
mov
mov
dec
xchg
mov
cmp
ljmp
stos
inc
cmp
cmc
mov
mov
sbb
push
addr16
fs
outsb
dec
dec
inc
lcall
ficomps
fs
dec
jae
push
adc
push
push
inc
inc
es
pop
cmpsl
sbb
cmpsb
test
xchg
orl
dec
mov
jle
lcall
dec
jp
dec
mov
outsb
push
inc
mov
mov
jns
jno
mov
fistpl
mov
mov
xchg
pop
in
sub
dec
xchg
push
decl
jae
xchg
scas
data16
lea
pushf
pop
mov
mov
scas
loop
mov
dec
mov
push
daa
dec
xor
xchg
pop
push
dec
sti
stos
jns
cmpsl
or
cmc
xchg
xchg
cmc
mov
notb
and
movsb
dec
ljmp
lods
je
pusha
pop
cmc
mov
sbb
push
incl
jle
dec
pop
push
push
inc
push
cmpsl
cmp
inc
inc
add
mov
dec
gs
cmpl
incl
cmpsb
jp
popa
pop
cmp
in
loopne
fimuls
out
mov
fcomip
pop
outsb
jne
xchg
inc
repnz
fistps
aaa
loop
je
dec
push
int
jb
pop
lock
stos
fldcw
ret
adc
ljmp
mov
cmp
jae
push
lds
dec
es
ljmp
pop
and
cmpsl
pusha
scas
cli
daa
test
cwtl
and
mov
jns
push
jg
sub
sbb
int3
inc
fisubrs
dec
shll
xchg
incl
mov
pushl
dec
pop
dec
mov
inc
jno
adc
or
and
pushl
ss
test
dec
test
sub
pusha
rclb
mov
mov
lcall
jo
sub
xor
sbb
js
cmpsl
sub
icebp
mov
cmp
insb
leave
xor
mov
outsb
stc
lcall
icebp
mov
sbb
xchg
mov
pushf
jge
jne
adc
test
jmp
add
jg
pop
fs
pop
cltd
leave
push
loop
jge
adc
mov
or
lcall
xchg
jns,pt
test
lea
outsb
push
xor
mov
push
jo
jns
inc
or
shll
pop
dec
fprem
out
mov
lcall
jae
pop
lcall
scas
mov
dec
insl
sbb
js
xor
ljmp
push
xchg
call
cmpsb
push
out
mov
loopne
jg
arpl
inc
adc
cmp
mov
bound
pop
out
movsb
cmp
lock
test
loop
lock
dec
mov
jmp
or
insb
into
scas
fistpll
and
mov
js
adc
xor
lods
pop
jge
xchg
dec
lds
or
je
jns,pn
and
adc
ja
and
adc
add
cmp
inc
outsb
sbb
xor
jmp
mov
inc
inc
stc
insb
dec
inc
stos
roll
pop
out
mov
jno
pop
mov
mov
xor
mov
icebp
mov
xchg
mov
mov
outsb
mov
mov
jnp
add
dec
xchg
imul
inc
jb
nop
sbb
sbb
mov
pop
dec
fildll
into
adc
xlat
lea
dec
xor
or
sub
add
shlb
push
nop
sbb
cld
decl
sub
cmp
sahf
adc
data16
and
and
dec
filds
mov
dec
enter
std
dec
push
std
cmp
mov
dec
jp
add
lods
out
sarb
out
cmp
jbe
aaa
mov
cli
sbb
stos
xor
xchg
jb
out
repnz
cmp
lret
pop
cmp
cltd
cmp
mov
jno
fwait
adc
xor
stos
jmp
dec
cmp
pop
pop
xchg
add
sub
sub
decw
xchg
jbe
sbb
lahf
xchg
add
mov
mov
lret
mov
loope
pusha
pop
test
xchg
inc
sarb
sbb
pop
popa
cmp
cld
cmp
cmpsl
into
push
in
sbb
mulps
imul
jg
int3
pop
xchg
les
push
js
push
stc
and
cmp
xchg
popf
jp
out
insb
icebp
cmp
movsb
or
das
xor
ljmp
mov
int3
cmp
mov
lcall
jp
mov
pushf
sahf
pop
mov
cli
mov
mov
imul
inc
jmp
push
or
or
and
dec
in
xor
addb
popa
scas
add
pop
insl
andl
jo
mov
lea
sbb
sahf
jmp
adc
jo
dec
rclb
pop
inc
mov
adc
and
ja
sub
mov
or
push
fisttpl
fs
ljmp
cs
gs
mov
jmp
push
inc
ja
nop
add
rolb
out
cli
dec
dec
int3
cmp
test
fwait
movsl
jle
mov
jns
cwtl
mov
fnstsw
cmp
cwtl
mov
shrb
xchg
ret
jg
pop
jge
pop
jp
subb
lcall
jl
sbb
adc
mov
decl
jle
mov
sbb
inc
or
and
ljmp
mov
sbb
fsubrs
mov
mov
fimull
push
and
inc
mov
lods
int
cmpsb
call
movsb
push
ljmp
scas
dec
call
std
lcall
cmp
xor
jl
test
stos
mov
in
mov
sar
lcall
pop
out
sub
popa
lahf
sbbl
test
mov
ss
push
mov
decl
pop
jle
and
test
inc
movsb
in
outsl
insb
add
or
pop
decl
xor
mov
sbb
scas
nop
mov
mov
or
call
cwtl
inc
loop
je
jle
incl
aas
dec
ljmp
es
lea
cmp
out
xor
scas
xchg
repz
mov
stos
fiadds
jmp
out
xor
fcompl
mov
sbb
lods
mov
gs
inc
leave
mov
addb
mov
shlb
lods
mov
adc
ljmp
mov
mov
mov
movsl
cmpsl
pop
into
mov
ds
int3
sbb
mov
stos
ss
jmp
nop
mov
scas
xchg
mov
test
pop
scas
clc
scas
push
adc
in
test
xchg
mov
jo
testl
test
cli
mov
xlat
xchg
jo
int
push
adc
add
icebp
addr16
and
fnstenv
test
cmp
test
mov
adcl
cmc
jg
mov
les
clc
jmp
les
mov
jecxz
mov
inc
cld
xor
dec
xlat
jns
sub
call
fldl
nop
lea
fidivl
mov
add
nop
mov
dec
pushf
push
xchg
je
xchg
xchg
outsl
cli
incl
mov
in
test
mov
fwait
xchg
mov
xchg
mov
pop
pusha
ljmp
cmp
or
sahf
xchg
incl
and
sahf
sahf
or
mov
hlt
xchg
sti
mov
test
movsb
icebp
jg
scas
and
loop
sub
rolb
ror
push
cli
fistpll
cs
mov
xchg
jmp
mov
fcmovne
push
faddl
lock
pusha
mov
mov
and
mov
gs
mov
push
or
jnp
cmpb
inc
mov
xor
lods
mov
std
or
jae
repz
sbb
xchg
xorb
and
xor
clc
scas
inc
push
rcrb
cmp
and
lds
cmc
lret
addl
mov
ds
fwait
ret
xor
clc
call
cli
pop
lock
and
fsubr
and
lcall
enter
outsl
xchg
cmc
sbb
cmp
jmp
mov
sub
lock
mov
jns
fcoml
in
xchg
mov
fldenv
movsl
clc
and
jp
xchg
pusha
neg
mov
dec
rolb
mov
adc
cld
pop
mov
cmp
or
push
xchg
movsb
ds
std
cmp
dec
jecxz
rol
lcall
fmull
pushf
mov
mov
fisttpl
jns
mov
sarl
mov
dec
out
test
test
les
mov
cmpsb
test
inc
rcrb
lea
cli
daa
in
push
and
jb
xorl
mov
in
test
mov
ljmp
decl
add
cmp
in
mov
mov
aam
pop
out
push
mov
mov
mov
or
fs
call
mov
mov
loope
mov
pop
mov
enter
mov
mov
mov
cltd
mov
sahf
lods
mov
pusha
cwtl
sub
ficompl
add
fcompl
mov
xor
mov
xchg
dec
popa
rcll
cmp
push
ljmp
divl
clc
ljmp
xchg
mov
fimull
out
xor
rcl
add
cwtd
nop
out
mov
xorb
js
fcmovnbe
mov
cltd
clc
call
sub
add
xchg
aad
ret
cwtl
push
icebp
mov
fstpt
hlt
cwtl
imul
xor
jl
loopne
hlt
fistpll
stc
pop
addl
sbb
mov
cmp
mov
subb
pushf
stos
fistl
inc
cmp
lahf
xchg
out
add
scas
jecxz
jo
enter
add
dec
lcall
call
sti
mov
add
push
scas
lahf
je
cmpsl
mov
cld
push
cwtl
addr16
out
inc
mov
decl
fisttpl
mov
mov
xchg
hlt
movsl
push
pop
xchg
ss
fdivr
xchg
and
mov
test
jmp
std
lea
add
mov
loop
push
pop
ljmp
ret
add
mov
lcall
imul
mov
push
or
xchg
cmc
pushl
jmp
mov
mov
mov
mov
pop
xchg
mov
xchg
inc
ja
mov
push
pop
mov
cmp
lods
mov
jo
dec
jns
lds
dec
xlat
call
mov
inc
dec
sub
ret
push
test
push
hlt
jg
repnz
ret
cltd
std
add
push
mov
stos
xchg
jmp
mov
adc
xchg
inc
decl
imul
pushl
mov
mov
xchg
or
pushl
push
mov
add
fldcw
mov
fwait
inc
xchg
shrl
lock
repz
aam
je
add
daa
push
jle
mov
fwait
hlt
pushl
popf
scas
mov
lods
test
iret
xor
movsl
and
pop
push
orl
xchg
sbb
frstor
add
cwtl
sub
decl
stc
sbb
lds
sub
scas
push
mov
mov
rorl
push
mov
mov
or
std
std
xchg
notb
pop
enter
cmp
incl
test
lods
mov
jg
inc
pop
cmpsl
out
mov
jle
sbbl
xchg
loopne
pop
xchg
mov
xlat
mov
push
mov
mov
loopne
pushl
test
sbb
jecxz
ret
ret
les
sbb
outsb
add
idivb
jbe
xchg
js
pop
mov
decl
jmp
in
or
push
adcb
test
fwait
mov
rcr
mov
fists
push
js
mov
xchg
push
mov
push
push
sbb
nop
mov
scas
out
fldz
fstl
push
push
scas
push
mov
push
scas
push
je
inc
rcr
ret
lahf
ja
pushf
sub
lock
out
test
mov
sub
mov
mov
sahf
aam
test
lahf
nop
pop
or
jmp
ret
aam
sahf
add
sub
sbb
jmp
mov
xchg
mov
jecxz
popf
mov
cltd
iret
mov
jbe
pop
push
incl
lret
cltd
out
leave
call
shrb
adcb
andb
cwtl
in
fdivl
sbb
xchg
addb
aaa
movsb
or
fisubs
mov
or
mul
xor
jp
adc
stos
stos
sahf
cwtl
adc
jbe
and
in
rcr
test
fcmovnb
push
inc
int
adc
mov
test
loopne
fwait
fiaddl
movsl
fdivrl
fstpl
aaa
sub
insb
cmc
enter
scas
test
in
out
je
mov
hlt
mov
leave
daa
mov
popf
or
push
pop
lahf
stos
mov
push
pusha
nop
adc
lods
and
aam
or
test
xlat
jmp
add
mov
jo
lds
inc
lock
clc
add
mov
rcr
ljmp
add
push
xchg
lods
push
in
ja
dec
dec
movl
andb
loopne
cld
sub
inc
movsb
hlt
leave
loopne
pop
jp
cwtl
rcrb
mov
int
fsubr
cs
jae
stos
call
dec
jbe
rolb
scas
jmp
lret
jae
mov
data16
push
pop
push
mov
outsl
ja
xchg
inc
insl
sub
lcall
frstor
imul
mov
js
nop
jns
sbbb
addl
inc
dec
xchg
jns
push
lea
adc
push
jp
mov
in
call
cmp
dec
pop
ret
stos
inc
pop
int3
stos
fs
push
push
mov
imul
jmp
xchg
dec
pop
inc
addl
insl
dec
jl
inc
inc
inc
movsl
push
dec
or
std
cmp
xor
lea
mov
mov
dec
ret
jno
scas
scas
mov
insb
push
dec
mov
push
mov
mov
jo
orl
add
jo
inc
or
stos
xchg
dec
bound
push
dec
dec
fwait
mov
pop
push
sub
inc
dec
pusha
into
mov
adc
decl
pop
inc
mov
jbe
shrl
inc
mov
stos
push
dec
scas
pop
push
bound
cltd
jns
loope
call
dec
push
daa
movsl
je
push
mov
test
nop
jbe
cld
sbb
data16
jmp
push
fdivl
jns
ficomps
adc
jae
aas
decl
call
dec
fwait
clc
push
dec
sahf
pushf
js
add
pop
or
ja
and
jge
pop
dec
cmp
dec
mov
mov
pop
cmp
dec
lcall
dec
orb
add
das
jae
push
daa
sub
or
aaa
push
push
pop
daa
incl
leave
xchg
inc
push
xlat
das
data16
sbb
fs
push
or
sar
inc
arpl
dec
pop
or
pop
inc
jmp
jle
fs
dec
push
or
cmp
pop
cld
incl
add
cmp
sbb
mov
sub
sbb
add
pushl
sbb
or
cs
xor
sbb
jns
adc
add
jecxz
add
adc
fildll
loope
shll
sti
inc
push
jnp
pop
jle
rcrl
ficompl
jmp
outsl
xchg
dec
inc
ja
dec
popa
dec
loopne
jnp
mov
push
shrl
inc
sar
decl
data16
bound
push
add
jbe
jge
out
in
notb
jl
push
jg
jbe
bound
pop
je
jo
push
push
add
jg
pushl
pop
ja
pusha
push
dec
imul
dec
ja
push
push
dec
jns
inc
js
pop
pop
dec
ljmp
fs
adc
and
xor
or
or
cmp
sbb
xor
jg
ljmp
or
sbb
xor
cmp
and
and
and
sbb
and
lcall
add
or
pop
adc
dec
bound
mov
into
sarb
fistpll
xor
and
adc
add
filds
add
inc
adc
dec
sbb
rcpps
pop
inc
jg
cs
xor
stc
dec
popa
cmp
es
cmp
aas
aaa
add
or
decl
inc
xor
pop
ds
add
add
and
add
sub
add
sbb
add
push
xor
add
push
sub
adc
orb
jg
js
xchg
decl
push
or
outsb
cmp
pop
pop
aaa
add
push
jg
dec
inc
push
dec
ja
jne
outsb
jno
dec
push
jb
push
xor
dec
push
pop
jl
sbb
incl
cmp
subb
jle
push
inc
dec
pop
cmp
aaa
mov
pop
cltd
dec
sub
ss
or
pop
xor
sub
and
dec
sahf
insl
inc
jne
jg
push
ss
add
ss
sub
sbb
cmp
add
fs
xor
jno
add
cld
inc
push
imul
xor
cwtl
mov
fs
test
jecxz
popa
daa
fwait
xchg
int
mov
ret
loope
xchg
add
xchg
fidivl
mov
aad
inc
cmpsb
imul
scas
sbb
in
jne
pushw
out
adc
pop
and
fwait
or
inc
loopne
xor
pop
and
aas
inc
inc
pop
or
fsubl
add
sub
pop
outsb
dec
jg
sbb
push
and
sbb
sbb
sbb
pop
jnp
pop
dec
dec
cmp
xchg
xor
and
aaa
pop
popa
add
cmp
outsl
jp
or
call
pop
inc
and
pop
pop
sub
sbb
or
or
inc
push
xchg
mov
das
or
sahf
push
sub
or
add
push
ss
imul
lcall
sbb
adc
pop
inc
or
cmp
and
sbb
add
sub
push
add
js
sbb
or
push
add
mov
and
aaa
cmc
incl
repnz
add
sbb
pop
sbb
and
dec
pop
repz
pusha
inc
jne
fwait
ret
rclb
ds
sbb
incl
dec
and
xor
adc
adc
pop
fmull
inc
in
cmp
sbb
sub
sub
aaa
inc
or
push
cmp
or
sbb
pop
jg
incl
push
and
and
sub
sbb
push
push
add
das
jo
and
clc
dec
lock
arpl
and
sub
push
and
sbb
outsl
cli
das
cmp
dec
add
sub
push
add
jo
call
add
cld
add
sub
dec
xor
push
sbb
mov
adc
and
sbb
add
dec
das
sbb
jmp
or
and
insb
sub
or
jp
jmp
sbb
sbb
jns
and
dec
pop
pop
xor
pop
mov
sub
push
sub
outsb
and
sub
cmp
pop
fdivl
jl
imul
push
jbe
data16
push
jl
push
cwtl
pop
add
adc
inc
push
xor
jp
and
aaa
and
sbb
in
add
inc
xor
dec
mov
lcall
js
adc
pop
sbb
sbb
push
sub
xor
das
xor
dec
aaa
cmp
or
xor
aaa
jbe
add
bound
pop
cmp
daa
push
sbb
sub
loope
std
sbb
xor
xor
addr16
sbb
dec
mov
sbb
push
pop
cmp
push
sbb
cwtl
and
push
insb
push
pop
shl
popa
dec
push
sbb
and
aaa
mov
pop
and
cwtl
jecxz
ljmp
jl
inc
jbe
outsl
dec
push
sbb
cmp
dec
push
push
sbb
mov
push
sbb
sub
mov
add
outsl
pop
jp
ja
pop
es
and
lcall
fcomip
sub
adc
cmp
cmp
mov
cli
mov
xor
and
adc
inc
xchg
clc
jmp
jge
pop
jl
sub
add
and
outsl
jg
fistl
dec
andb
aaa
xor
sub
cmp
or
ja
pop
adcb
dec
outsb
jb
push
inc
push
jo
push
inc
sbb
dec
cmp
and
or
das
clc
ljmp
or
sub
jge
jbe
pop
dec
xor
jle
inc
jg
adc
dec
add
inc
adc
add
sub
pop
jo
pop
cmp
cmp
xor
sbb
adc
push
jg
mov
imul
sbb
adc
or
cmp
mov
call
add
sub
sub
cmp
add
or
adc
and
outsb
jg
push
inc
push
cwtl
dec
push
or
pusha
mov
fs
xor
fcoms
adc
and
or
test
sbb
addr16
fdivrp
incl
or
pop
cmp
cmp
sbb
xor
add
push
das
pusha
std
outsl
xchg
cmp
xor
push
cmp
cmp
incl
inc
jb
push
sub
cmp
jl
push
sub
adc
cmp
test
xor
sub
push
cmp
xchg
aad
adc
call
cmc
decl
push
sysexit
sbb
sbb
cmp
and
adc
outsl
sbb
add
or
mov
sbb
inc
xor
sub
pop
push
add
push
test
mov
sub
xor
sub
femms
pop
jnp
and
adc
sbb
and
add
lar
and
add
and
cmp
cmp
cmp
jne
xor
jg
mov
or
pop
and
add
aas
ss
inc
dec
pop
or
push
dec
aaa
pop
push
inc
outsl
push
mov
mov
cmp
push
sub
push
and
incl
imul
xor
fsubl
xor
sub
adc
pop
jg
fdivp
ja
imul
jbe
in
adc
sbb
cmp
pop
outsb
cli
pushl
or
cmp
push
prefetch
or
rcll
push
mov
fmull
ret
decl
sub
sbb
and
and
adc
es
stos
daa
daa
add
or
adc
adc
loope
lahf
repnz
jns
cmp
js
scas
pop
je
sbb
pop
or
adc
lcall
pop
push
cmp
sbb
aaa
push
ss
add
ja
cmp
je
push
adc
or
adc
nop
or
pop
xor
dec
clc
adc
push
jbe
out
js
and
sbb
adc
clc
ljmp
aaa
cmp
cmp
xor
ljmp
cmp
dec
or
add
sub
sub
mov
mov
or
mov
or
lret
push
push
adc
daa
push
sub
ljmp
and
or
adc
dec
dec
push
adc
xor
daa
bound
xor
clc
decl
incb
pop
xor
faddl
dec
jae
or
sub
sub
rcrl
outsl
out
sub
aas
or
out
push
jg
ss
getsec
and
adc
sub
adc
popw
add
and
and
or
push
xor
sub
or
cmp
and
cmp
pop
push
sahf
xor
and
mov
sub
ds
cmp
xor
sbb
or
or
icebp
aaa
push
and
adc
sbbb
mov
ja
popa
daa
jno
ljmp
lock
sbb
xor
sbb
sub
push
add
mov
or
push
dec
pop
and
sub
subb
jns
scas
es
jbe
sub
mov
jle
outsl
sbb
aaa
and
out
push
sub
aad
mov
adc
pop
cmp
xchg
clc
mov
js
push
dec
js
add
pop
adc
push
adc
adc
mov
inc
adc
xor
and
and
cwtl
sbb
mov
jbe
add
sbb
add
or
jns
xchg
cmp
add
sbb
clc
sbb
jbe
arpl
ljmp
outsb
mov
daa
xor
sbb
sub
nop
mov
mov
sbb
dec
adc
push
fwait
outsb
or
cs
fwait
adc
std
pop
adc
aas
and
or
inc
adc
call
add
xor
cmp
or
pop
xor
xor
sub
pop
cmp
and
aas
sub
dec
jns
and
add
add
mov
jg
adc
adc
pop
es
es
sub
mov
adc
dec
cwtl
xor
adc
loopne
and
movaps
sbb
pop
sbb
ss
cld
mov
and
push
xor
dec
dec
sub
and
sub
call
cld
ja
cvtpi2ps
adc
sbb
xor
or
and
inc
xor
or
bndstx
and
and
adc
pop
sbb
sbb
push
cli
or
outsb
adc
cmp
or
mov
xor
sub
sub
and
sbb
sbb
mov
pop
xor
inc
adc
imul
aas
sub
push
xor
cmp
pop
sub
dec
dec
add
mov
fs
lock
jbe
push
imul
daa
mov
jp
jno
das
bound
sub
and
and
cld
mov
imul
xor
sbb
push
add
mov
sbb
call
add
and
mov
bound
jmp
cmp
add
push
sub
adc
jg
jb
sub
add
push
push
gs
or
xor
cli
sbb
sub
or
push
sub
jo
sti
push
pop
and
adc
outsb
pop
and
decl
cmp
and
pop
es
aam
push
dec
mov
cmp
pop
mov
pop
insb
faddl
xor
add
js
pop
push
and
andb
inc
loop
sbb
sub
inc
ret
jg
cmp
push
or
push
es
aas
add
cmp
and
mov
mov
xor
push
sbb
sub
insl
cmp
mov
sbb
pop
clc
add
aaa
xor
or
xchg
xor
or
or
mov
xor
and
sbb
cli
add
add
dec
xor
pop
jg
add
push
cmp
and
mov
lock
and
and
iret
decl
cmp
sub
push
pop
or
inc
jmp
cld
aaa
clc
and
das
xor
sbb
arpl
jg
jno
jbe
inc
gs
push
push
push
inc
jp
js
incl
mov
push
jp
push
cwtl
sbb
push
push
dec
push
dec
pop
cmp
or
add
jo
arpl
push
mov
jmp
push
inc
imul
push
je
cwtl
dec
mov
ja
push
imul
call
dec
hlt
stos
sbb
lret
jbe
pop
popa
inc
pop
es
mov
dec
pop
call
pop
or
cmp
imul
dec
mov
jg
dec
push
jbe
pop
dec
push
inc
adc
fcoms
adc
adc
add
cmp
and
cmp
or
pop
hlt
adc
xor
pop
js
sub
cmp
sbb
pushl
push
cmp
xor
or
sub
aad
mov
pop
push
inc
dec
xor
push
sbb
pop
push
fs
push
arpl
push
adc
es
aas
ljmp
inc
xor
add
cmp
es
ds
pushl
adc
clts
pop
cmp
aad
mov
data16
fst
pop
outsl
jo
fidivl
push
ficoml
mov
pop
pop
mov
jae
mov
inc
dec
inc
mov
inc
push
out
push
xchg
xchg
dec
dec
jle
push
dec
sahf
in
jno
in
gs
xchg
cld
ja
aad
dec
inc
bound
ret
shlb
icebp
jns
fucomi
ja
clc
in
imul
call
push
gs
xlat
out
repnz
jno
fisttpll
in
out
data16
jecxz
jno
pushl
pop
lret
jne
inc
sbb
jb
aaa
out
push
into
pop
incl
cld
dec
jns
push
fmull
add
jbe
xor
inc
or
addr16
fdivs
push
mov
fs
add
inc
arpl
ljmp
sub
inc
jle
int3
dec
inc
dec
xlat
loopne
bound
mov
dec
xor
push
jge
fimull
jns
cmp
jns
pop
fcoms
jbe
push
jl
lret
addr16
inc
clc
push
arpl
inc
pop
mov
gs
mov
dec
arpl
fnstsw
repnz
push
decl
push
sbb
in
jns
out
jnp
mov
loopne
jle
cld
pop
jp
aad
lock
jmp
sub
dec
inc
push
fisttpl
and
jae
pop
out
inc
pop
loopne
push
fsubrl
push
aad
jg
fisubl
cmp
push
xchg
push
int3
clc
je
add
fildll
pusha
gs
jecxz
jno
lods
leave
pusha
jnp
jecxz
pop
shl
lock
cli
add
jae
fmuls
insl
in
jnp
mov
dec
je
push
dec
and
inc
popa
dec
cmpsb
mov
pushl
jno
insl
inc
inc
jae
arpl
inc
insl
dec
imul
insb
incl
outsb
pop
arpl
push
js
cmp
jp
dec
jbe
insb
jne
outsb
jne
jne
pop
imul
jp
insb
jo
cs
and
jg
jae
pop
push
dec
push
pop
inc
dec
jne
cs
addr16
decl
ljmp
in
jno
pop
int3
shll
clc
push
push
dec
imul
pop
push
mov
fists
dec
outsb
push
push
sahf
pop
ss
fs
xlat
jbe
jno
inc
repz
jmp
pop
push
insb
dec
jns
jo
outsl
dec
data16
inc
cmpsb
je
xor
stos
adc
inc
enter
mov
je
jns
pop
xchg
jmp
jns
pop
jo
jae
imul
into
dec
enter
push
push
arpl
insb
inc
dec
inc
js
sti
outsl
mov
js
jbe
dec
push
gs
pop
adcb
inc
ret
adc
inc
jge
push
push
gs
arpl
and
adc
adc
jl
sbb
push
fsubrl
insb
js
mov
pop
dec
shll
inc
imul
clc
push
dec
jae
push
dec
sbb
insl
pop
add
mov
pusha
insl
mov
out
inc
push
ljmp
fs
enter
imul
fcoml
pusha
aad
lock
cld
push
cmc
sub
js
gs
jbe
inc
xlat
sbb
jae
ret
imul
das
and
hlt
push
push
pusha
cld
sbb
subb
ja
dec
arpl
push
dec
dec
dec
dec
fs
push
jmp
push
hlt
push
shlb
inc
dec
inc
jnp
pop
pushl
jbe
dec
inc
gs
in
push
fildl
outsl
jne
jae
outsl
fs
push
testb
inc
adc
out
ljmp
pop
popa
dec
push
jno
push
jbe
push
dec
add
icebp
js
dec
push
outsl
dec
gs
jle
push
push
jp,pt
idivb
push
pop
push
dec
push
inc
data16
outsb
call
icebp
jp
outsb
inc
nop
outsb
gs
inc
dec
push
push
jno
pushw
cs
push
jbe
jo
pop
add
incl
push
jne
insb
imul
popa
jp
js
or
pop
jle
and
dec
xchg
popa
inc
je
push
data16
ljmp
push
jb
bound
inc
insl
pop
js
jno
outsb
pop
push
data16
test
insl
inc
arpl
addr16
inc
in
and
pusha
xchg
out
jns
dec
fstp
adc
gs
inc
pop
push
jg
or
inc
push
inc
addr16
outsl
jbe
jo
insb
addr16
push
je
loopne
mov
adc
inc
push
dec
ja
je
outsl
jo
dec
add
in
in
call
jnp
dec
push
insb
dec
je
outsl
out
ja
push
jno
jnp
insl
push
inc
push
mov
dec
out
loopne
shl
ret
cli
hlt
lret
jmp
in
iret
sar
fucomip
jmp
dec
out
fmulp
out
in
ljmp
jmp
icebp
shl
jmp
int
int3
mov
ljmp
stos
mov
test
movsl
mov
mov
mov
lcall
jmp
xchg
lea
mov
addb
mov
sbb
pushl
push
push
inc
je
dec
inc
dec
shrb
pop
adc
pop
icebp
ljmp
arpl
dec
jl
insb
jb
inc
fdivs
lock
push
push
pop
scas
mov
imul
jle
les
inc
jbe
jg
decl
push
dec
pop
jbe
adc
xor
sbb
and
and
add
lods
add
decl
xor
add
ljmp
and
cmp
adc
pop
add
adc
sub
add
pop
or
ljmp
clc
out
vpsubw
shr
std
rcr
lret
repnz
lret
ret
ret
fildl
out
int3
in
fstp
sar
jmp
fdivr
iret
in
enter
cmp
test
pushl
pushf
mov
mov
mov
xchg
mov
subl
test
add
mov
cltd
mov
mov
sbbl
shr
out
std
in
pop
icebp
fst
leave
lret
ret
repnz
loop
out
fmul
call
out
in
out
out
jmp
std
call
rcr
out
ror
int3
or
loopne
in
lock
loope
or
mov
lods
mov
fdivl
mov
jg
lcall
xchg
sbbl
add
xchg
mov
lods
xchg
mov
filds
dec
or
fwait
cmpb
xchg
nop
mov
or
inc
js
dec
pop
inc
inc
pop
inc
push
gs
pop
push
mov
cmc
scas
mov
fcoms
jge
insb
je
dec
jb
push
pop
ljmp
test
fs
arpl
pop
jl
jnp
push
jp
adc
and
add
sub
add
sbb
and
sbb
aaa
cmp
adc
filds
adc
push
and
sub
push
xor
sub
and
ds
pushl
and
out
in
repz
test
stc
into
std
std
aad
ret
in
fdivp
push
jmp
fdiv
fcomi
out
fdivr
out
out
out
cli
mul
lret
mov
in
in
shr
movsb
cmpsl
mov
xchg
mov
mov
sahf
movsl
orb
mov
mov
pushf
addb
outsl
clc
pushl
mov
movsb
mov
xchg
mov
sub
or
and
xor
push
clts
addr16
and
xor
imul
cmp
pop
or
dec
sub
insb
adc
add
add
sbb
sub
add
adc
push
and
sbb
adc
or
cmp
sub
stc
repz
cmp
adc
cmp
sbb
adc
and
cld
fwait
outsl
add
xor
adc
add
add
cmp
lcall
xor
inc
sbb
push
imul
adc
aaa
fs
ds
and
and
mov
cmp
ds
imul
and
es
inc
and
sar
xchg
mov
adc
add
xor
std
aas
mov
add
and
cmp
add
xor
or
dec
adc
decl
fidivs
push
sbb
fdivl
adc
sub
das
xor
and
push
jg
decl
dec
sbb
push
xor
sbb
sbb
int3
adc
popa
adc
dec
shrb
xor
push
and
daa
popa
es
adc
adc
sub
jg
or
add
xor
and
in
add
add
outsl
push
lcall
ss
add
aaa
cs
push
and
or
and
cld
ljmp
push
push
and
ds
jne
xor
or
add
loopne
cmp
cmp
jbe,pt
pop
and
daa
and
push
faddl
aas
or
push
or
adc
sbb
je
or
decl
sub
aas
jb
add
cmp
adc
and
or
cmp
cmp
jg
fwait
mov
or
adc
dec
push
adc
adc
loope
add
inc
sub
cmp
sub
cmp
sub
pop
out
add
mov
pop
pop
lcall
out
ficompl
pop
xchg
popa
adc
sub
or
adc
aas
add
push
adc
adc
adc
jo
jge
and
push
loopne
into
mov
sbb
shll
sub
imul
push
ficompl
and
add
or
jmp
adc
adc
cmp
daa
das
or
pop
and
ss
jl
or
es
out
and
and
and
pop
cmp
cli
es
jg
cmpsb
sub
sub
sbb
pop
jg
cli
aaa
pop
xor
push
je
sbb
or
rcr
and
cmp
inc
out
xor
sbb
sub
inc
ucomiss
cmp
sub
push
stos
mov
sbb
adc
and
mov
add
dec
adc
sbbl
adc
sub
sbb
clc
adc
or
es
cvtps2pi
sbb
jg
testb
add
xor
jl
push
xchg
jmp
add
sbb
mov
and
push
adc
fbstp
cmp
inc
push
sub
sbb
inc
or
sub
and
es
cmp
andb
and
cmp
cmp
and
popa
mov
das
or
ja
fidivs
adc
mov
loopne
xor
xchg
ss
sub
inc
cmp
xor
sub
adc
cmp
ljmp
or
and
adc
sbb
sub
add
push
or
cmp
sbb
push
call
ret
cld
pop
mov
xor
add
push
mov
dec
or
push
pop
rorl
gs
sbb
add
and
cltd
fidivs
cmp
sbb
adc
aam
es
pop
andps
ficoms
or
xor
sub
adc
push
sub
stos
mov
outsb
cmp
adc
pop
sub
push
js
shl
mov
adc
sbb
dec
adc
pop
je
cmp
sbb
add
sbb
dec
jle
aaa
cmp
popa
ljmp
xor
adc
add
sub
das
inc
das
clc
sub
cmp
and
and
pop
and
inc
sub
add
and
lock
pop
and
jl
sbb
js
pop
push
sub
pop
cmp
popa
inc
aam
xor
add
pusha
or
unpcklps
pop
in
aas
inc
ret
or
and
les
or
xchg
incl
aas
or
sbb
push
cmp
jle
mov
and
cmp
pop
add
jbe
decl
pop
or
xor
and
push
das
cmp
sub
loopne
or
adc
or
into
outsb
adc
pushf
mov
mov
sub
mov
clc
negb
cmp
jp
sbb
pop
sub
ljmp
fidivs
sbb
les
cmp
stos
push
xor
sub
and
push
or
fmull
pop
and
cmp
pop
jbe
sbb
fwait
or
cli
nopl
jg
cwtl
push
mov
xor
adc
lcall
sub
aaa
sbb
sub
sbb
adc
pop
sbb
jp
outsb
push
sub
sbb
add
jmp
push
int
jbe
add
or
or
cld
ljmp
mov
and
movups
sub
and
jbe
and
sbb
add
or
cmp
add
xor
mov
outsb
jp
aam
push
adc
push
and
iret
scas
cmp
sbb
cmp
add
add
inc
xor
stos
clc
sbb
add
es
sbb
push
adc
add
xor
adc
mov
cmp
daa
sub
pusha
adc
pop
ret
aas
push
jae
in
pop
add
pop
dec
rcl
gs
sbb
or
out
jns
test
push
cmpb
into
out
push
int
jp
xlat
fbld
jnp
or
pop
inc
xlat
repnz
jle
in
aas
pusha
popa
add
ljmp
leave
dec
push
or
imul
pop
inc
cs
outsl
pop
es
outsl
popa
pop
and
lock
addr16
push
pop
xlat
mov
jmp
mov
cmp
in
pusha
gs
fisubs
into
ja
or
imul
clts
sub
movsb
push
jae
in
inc
mov
jnp
pushl
pop
adc
dec
data16
gs
push
jle
ds
sbb
inc
push
movsb
incl
or
dec
push
adc
and
stc
mov
call
jo
jmp
cmp
call
and
jmp
push
arpl
jno
ds
sub
adc
dec
mov
dec
push
sbb
gs
icebp
dec
cmpb
popf
lds
inc
push
aam
pop
jg
lcall
ss
ret
jl
sbb
push
push
pop
push
std
incl
cld
and
or
jo
cli
adc
icebp
jo
pop
and
bound
in
jge
call
push
push
jno
rorl
cmp
adc
sbb
fiaddl
xor
sub
je
and
je
cli
cmp
decl
cmp
dec
movsb
lret
daa
xor
bound
pop
push
decl
dec
fcmovnb
data16
sbb
fs
negb
or
sub
rclb
add
fildll
push
xor
gs
and
inc
or
inc
inc
call
inc
cmp
shlb
or
and
inc
movaps
dec
pop
rorl
add
mov
mov
push
push
sub
fs
cmc
push
inc
divb
mov
mov
add
imul
cwtl
cld
imul
sub
lret
pop
jb
shrl
adc
call
std
decl
inc
mov
dec
dec
pop
sbb
dec
lcall
ror
inc
je
adc
in
pop
icebp
dec
pusha
push
cmp
es
ljmp
repnz
jbe
iret
insb
inc
sub
cld
inc
pusha
sub
jns
es
ljmp
add
into
jae
cmp
add
enter
cmp
dec
pop
push
push
adc
inc
arpl
fsubl
adc
jb
pop
sub
lcall
jp
pop
push
adc
or
aad
pusha
fidivrs
gs
call
pop
dec
mov
mov
pop
and
xor
or
pop
int3
cmp
je
inc
jge
jns
popa
inc
pop
dec
insl
push
adc
add
jo
out
dec
ja
jge
adc
data16
push
push
cli
and
sbb
and
and
cld
aas
and
jmp
imul
lock
jle
dec
sar
add
add
in
dec
pop
inc
jae
int
out
lret
push
push
push
pop
jle
das
outsb
adc
dec
push
push
inc
jl
xor
cli
xor
jns
aaa
std
jg
out
sub
sbb
jae
and
and
outsl
dec
inc
add
cbtw
push
jb
jbe
sub
sbb
daa
pop
sbb
push
sub
and
or
lock
mov
and
sbb
sub
or
adc
cmp
aad
xchg
pushf
push
cmp
or
adc
or
or
sbb
scas
bound
cmp
and
and
mov
add
or
push
cmp
pop
sub
insl
sbb
mov
je
xor
adc
cmp
xor
sub
aas
sbb
xor
das
xor
inc
das
fdivs
xor
or
in
stos
lcall
and
sbb
cmovle
xor
pop
add
adc
adc
mov
outsl
mov
icebp
out
jbe
sub
mov
scas
mov
xchg
inc
cltd
xor
cmp
mov
pop
adc
stc
sub
outsl
push
in
pop
ret
xor
cmp
aas
daa
adc
sub
ficoml
and
imul
cmp
es
or
es
dec
xchg
xor
adc
ss
xor
jg
stos
jbe
test
cmp
inc
inc
daa
pop
add
add
mov
sbb
mov
arpl
and
pop
push
sbb
or
push
jo
sbb
aaa
cmp
sub
aas
das
cmp
sbb
outsb
adc
push
js
inc
adc
add
cs
push
or
call
push
aaa
push
daa
adc
enter
pop
mov
sub
and
lsl
or
fcoml
sub
clc
in
decl
xor
and
add
inc
inc
jo
dec
cmp
adc
or
or
and
pop
adc
xor
sub
push
cld
lcall
add
insl
cmp
es
or
or
test
ljmp
sbb
add
adc
jno
add
and
sbb
cld
jne
xor
pop
sbb
sbb
push
jmp
daa
push
pop
popa
adc
es
adc
jmp
js
outsb
xor
add
ss
popa
or
adc
add
xor
daa
sbb
ss
pusha
lods
fidivl
sbb
scas
jp
add
add
ljmp
xchg
cmp
push
push
movlps
push
pop
and
sub
sub
dec
xor
sbb
sub
adc
sbb
cmp
xor
cmp
adc
call
cmp
sbb
push
dec
and
sbb
cs
and
add
fadds
sub
or
and
es
xor
das
xor
call
or
push
pop
aas
daa
add
dec
bound
stos
sbb
dec
inc
stos
dec
pop
shrl
test
cld
sub
push
data16
lahf
aam
sahf
inc
dec
ja
cmp
call
insl
jne
jbe
push
xor
pop
push
push
pop
testb
into
push
arpl
decl
pop
push
pop
lcall
pop
pop
jo
jbe
lcall
xor
inc
pusha
popf
gs
adc
add
push
push
add
jle
incl
je
push
addr16
and
push
testb
inc
imul
add
or
xor
call
pop
insl
pop
push
push
je
dec
fimull
decl
pop
repnz
inc
sbb
dec
dec
ljmp
push
jg
gs
push
jbe
hlt
js
jae
push
push
add
fisubs
jne
push
gs
jne
pop
push
jno
lcall
fs
jns
and
pop
bound
test
dec
jne
js
inc
lahf
jb
call
cmp
mov
js
xchg
sub
push
cmp
inc
push
loop
addr16
cmp
jmp
and
ret
cmp
ret
pop
jae
dec
data16
jle
sub
shlb
or
push
or
call
scas
fucompp
loopne
push
repnz
daa
leave
jp
ljmp
sti
cmp
sub
pop
or
push
pop
sub
fs
xor
pop
outsl
nop
gs
pop
sbb
xchg
mov
stos
xor
sbb
cmp
xor
sub
xor
and
sub
fisubs
and
cmp
aas
repnz
push
aas
pop
sub
jne
je
sub
fistpll
jae
or
pop
ja
daa
cmp
gs
add
inc
inc
lods
stos
inc
inc
pop
repz
call
pop
push
or
test
dec
push
adc
jmp
mov
push
jg
ljmp
and
pop
je
adc
push
or
push
xor
push
adc
bound
and
or
jp
mov
jp
int
ljmp
imul
pop
push
les
push
inc
adc
jo
outsl
pop
push
jge
repnz
test
mov
inc
push
lahf
and
pop
inc
xchg
je
mov
pusha
pop
fisttpll
lods
mov
js
popf
bound
mov
cmp
inc
daa
ljmp
ficomps
mov
inc
or
lahf
pushl
sbb
dec
gs
mov
js
push
dec
pop
dec
inc
and
leave
fwait
pop
scas
add
xchg
test
jmp
in
dec
dec
push
out
dec
dec
in
mov
mov
mov
or
mov
int
and
cmp
pushl
inc
mov
out
mov
insl
decl
bound
mov
sub
leave
mov
dec
pop
fcompl
mov
adc
jmp
push
jmp
je
pop
mov
lcall
inc
cmp
push
pop
rclb
je
fiadds
test
and
cltd
jg
fwait
jl
inc
jg
jno
cs
in
push
jns
loope
inc
push
sbbb
pushf
dec
dec
push
mov
jno
push
lea
dec
cmp
adc
push
cld
scas
push
orl
sub
das
cwtl
mov
xorb
andb
dec
dec
jne
fs
aam
test
das
jns
mov
inc
fidivl
popa
push
cmpsb
fs
jg
fistps
pop
test
inc
cmp
push
fs
dec
push
jge
push
xchg
dec
xchg
push
inc
scas
addr16
pushl
daa
ljmp
pusha
or
dec
jne
mov
push
inc
inc
pop
stc
jns
mov
dec
pop
jle
out
adc
scas
lods
push
cmp
pop
repnz
jbe
rcrl
and
les
jbe
push
arpl
lods
ja
dec
dec
pop
dec
mov
repz
inc
dec
mov
pop
mov
mov
and
push
push
xor
xchg
mov
popf
insb
pop
xor
pushf
insl
inc
add
pop
sbb
dec
and
and
ja
jns
xor
fmuls
mov
dec
or
push
push
add
repnz
mov
popa
jmp
push
lret
loop
popa
push
push
mov
pop
xchg
adc
pusha
pop
js,pn
sbb
cmp
js
cwtl
bound
mov
repnz
decl
dec
lret
loopne
inc
jge
pop
je
fidivl
dec
cltd
mov
shlb
xorb
lock
imul
repz
jbe
addl
subl
ja
mov
inc
push
lock
push
ja
cmp
cmp
movsb
es
mov
jo
je
lahf
push
pop
add
jo
mov
mov
insb
inc
repz
inc
js
or
ja
xor
stos
ss
insl
test
fs
int
add
or
mov
cld
pop
add
fs
jne
das
mov
and
repnz
push
pop
jne
test
aaa
lahf
es
add
ss
fs
js
js
dec
cltd
cwtl
lods
dec
dec
push
push
pop
ja
push
fisttpll
add
mov
xchg
and
push
cwtl
int
and
lahf
push
jbe
mov
jmp
ja
mov
pop
gs
jle
ja
int
mov
sahf
adc
das
andb
jae
mov
out
xchg
je
test
push
xor
fists
xchg
inc
push
lcall
pop
and
lcall
xor
xchg
mov
mov
mov
mov
cmpsl
jns
fidivs
jl
stos
inc
push
mov
push
cmp
test
sahf
inc
or
dec
call
lods
ja
arpl
stos
dec
inc
push
out
fwait
daa
pusha
dec
xor
mov
je
inc
je
inc
push
fdivl
daa
outsl
ret
js
out
repnz
inc
sub
inc
xchg
inc
adc
dec
sub
repnz
js
pusha
mov
or
test
pushl
mov
outsl
jb
rsqrtps
adc
jp
jnp
add
insb
add
decl
outsl
push
loopne
ja
mov
fnsave
jge
insl
push
push
mov
sub
push
pavgw
out
lret
mov
cld
push
push
out
cs
shlb
repz
loop
cs
jo
jo
fs
sar
in
push
dec
xor
cli
dec
inc
push
in
xlat
outsl
inc
mov
out
jo
or
ret
std
push
call
cld
incl
xlat
push
insl
xor
loope
push
divb
imul
inc
sub
inc
rolb
jmp
adc
je
cmp
out
fdivp
outsb
pop
fisttps
fs
int
mov
or
js
mov
cwtl
rcr
sub
mov
xor
xor
test
lcall
or
imul
xor
mov
lock
daa
out
cwtl
pop
cmp
int3
lcall
ja
mov
pusha
mov
xchg
mov
iret
call
jo
test
stos
push
adc
and
or
mov
push
cltd
mov
dec
xor
fcmovbe
or
cmpsb
scas
sahf
es
ja
push
mov
out
mov
jg
mov
scas
and
frstor
nop
movb
or
pop
or
bnd
xor
shr
inc
pop
fucomp
arpl
imul
dec
jl
lcall
leave
jp
xchg
loopne
stc
popl
pop
push
mov
cmpsl
test
in
or
in
pop
pop
fwait
sarl
cltd
in
push
fdivrl
out
out
mov
imul
xchg
dec
push
out
mov
loope
push
je
and
jo
adc
mov
lcall
lahf
mov
pop
js
dec
jne
lcall
clc
aas
lea
mov
shll
imul
inc
push
andl
push
mov
xchg
push
mov
jb
mov
imul
push
je
cmpsl
aad
add
ja
dec
push
jg
add
xchg
int3
push
pusha
sub
push
ja
or
or
test
jno
mov
xchg
push
ja
mov
push
adc
ja
sbbb
mov
dec
fcoml
repnz
aas
roll
jne
xchg
scas
pushf
stos
ret
or
push
mov
dec
jbe
mov
mov
xor
lcall
out
mov
add
push
ja
lock
mov
repz
push
jb
ret
xor
out
mov
fsubl
inc
lret
stc
js
xchg
scas
xchg
scas
mov
mov
push
nop
inc
dec
jne
popa
inc
jmp
movsb
int3
stos
fistps
add
arpl
push
iret
sbb
rolb
mov
add
dec
into
into
jns
adc
je
push
dec
push
jb
arpl
ljmp
sub
inc
pop
js
inc
inc
jl
mov
xchg
repnz
push
jb
xchg
sahf
mov
int3
mov
ret
ljmp
mov
xchg
ja
and
data16
imul
push
mov
adc
xor
adc
or
dec
dec
stc
inc
repz
test
mov
data16
stos
test
mov
mov
adc
popa
sbb
pop
dec
ljmp
jb
inc
push
pop
insb
fildl
xchg
mov
mov
dec
rcrl
mov
outsl
pop
leave
sbb
inc
js
in
adc
pop
jbe
pop
loop
pop
adc
fldenv
push
cltd
sbb
insb
and
pusha
dec
xorb
mov
test
fidivl
ror
push
pop
rclb
pop
insb
add
loope
inc
push
lods
fldenv
dec
cmp
lret
inc
mov
jo
das
add
test
mov
push
push
dec
fimuls
sub
hlt
xchg
xorl
xor
dec
outsb
data16
lahf
lock
xchg
jno
lea
mov
jno
or
inc
daa
xchg
mov
dec
ja
mov
aas
popa
in
fdivl
jbe
daa
push
out
push
mov
fs
push
es
dec
pop
pop
orb
mov
xchg
jle
jge
sub
jns
nop
and
mov
mov
and
stc
jg
pusha
fldl
jns
xor
js
xchg
scas
xchg
mov
cmp
and
adc
pop
jle
push
mov
lods
cmp
in
inc
repnz
sahf
decl
mov
dec
push
out
jp
xchg
mov
ficomps
aas
lahf
or
mov
test
jae
test
out
das
sub
sub
xchg
push
jbe
xchg
arpl
iret
clc
xchg
add
jnp
sbb
addr16
nop
fcmovnb
scas
loopne
lcall
jb
mov
jbe
pushf
sub
addr16
inc
jp
sarb
push
jae
imul
xchg
push
ja
pop
cwtl
fdivs
push
sub
dec
jae
xor
mov
aas
cmp
addr16
imul
jae
std
int
jne
mov
mov
out
push
jbe
je
pop
in
lcall
je
popf
ja
xchg
push
les
arpl
or
lods
ja
inc
adc
js
dec
stos
aas
shrb
mov
cmpb
ja
mov
push
je
jo
test
int
sbb
arpl
test
inc
bound
cltd
lock
rolb
xor
test
cltd
pop
cmp
mov
ja
adc
aas
cli
nop
push
push
pusha
adc
cmc
mov
pop
test
lcall
aad
inc
repnz
leave
dec
and
inc
dec
push
repnz
sbb
inc
and
mov
leave
push
aaa
subl
pop
push
out
push
pop
js
je
aaa
dec
pop
insl
fcomip
push
dec
jne
mov
xchg
ss
mov
loopne
lret
mov
mov
inc
push
mov
pop
inc
and
lds
dec
fdivrp
jno
inc
notl
adc
aad
pop
sbb
jbe
imul
aam
lret
push
mov
fbstp
pushf
adc
inc
push
fs
fisubrs
cmp
inc
push
jae
loopne
add
mov
xorb
loopne
stc
dec
js
push
jl
fidivs
pop
addr16
imul
popa
stos
inc
push
push
jns
jbe
cwtl
jl
jbe
jl
stc
jno
leave
ja
dec
mov
lods
outsl
sub
xchg
cmc
std
addr16
enter
push
lock
ja
stos
mov
dec
cwtl
popf
mov
jge
jp
adc
popf
jnp
inc
out
sbb
stos
dec
mov
jbe
inc
loopne
inc
push
push
repnz
mov
jbe
incl
out
and
insl
inc
xlat
in
lock
fimull
cwtl
push
out
cli
mov
jge
jae
jbe
mov
push
xchg
and
aad
out
scas
test
ja
rol
sub
xchg
aam
jge
jb
stos
and
sbb
mov
jg
pusha
pop
push
jae
push
arpl
xor
aam
dec
pop
addr16
push
inc
lcall
pop
addr16
xor
imul
outsl
lcall
test
jp
push
jbe
jae
jo
mov
jo
mov
test
mov
arpl
fcoml
test
or
in
dec
xor
and
mov
push
lcall
jno
dec
ja
adc
pop
ja
mov
sbb
je
push
sti
popa
push
or
negb
push
or
inc
loope
insb
add
cld
inc
pop
mov
repz
ja
push
push
jbe
movsb
adc
push
sbb
loope
hlt
fcoml
mov
mov
pop
inc
dec
out
fldenv
mov
push
ret
mov
mov
inc
xchg
pop
sarb
fnstenv
push
sub
add
push
jne
jns
jg
incl
filds
dec
jecxz
jb
scas
in
lock
lock
inc
stos
vpcmpeqd
cli
lret
xchg
outsl
cli
cwtl
repnz
sahf
jo
push
mov
xor
mov
stos
cwtl
out
js
add
imul
jmp
inc
test
push
mov
inc
push
push
jno
pushf
jae
inc
mov
lret
dec
outsl
jge
outsl
pop
imul
inc
xchg
xchg
ja
das
mov
cli
js
into
sub
mov
ficoms
jle
movsl
push
push
pop
lods
pop
shll
add
cltd
imulb
push
pusha
jns
push
dec
cmp
stc
aas
testb
pusha
jae
mov
sbb
mov
insb
loop
scas
in
push
pop
mov
lret
dec
fwait
fmul
xchg
push
fisubs
pop
jo
pop
jne
jne
push
push
fisttpl
mov
int3
inc
xchg
popa
add
inc
hlt
enter
add
cltd
jg,pt
push
xor
test
int
inc
push
push
push
sti
insb
inc
mov
lea
xchg
cwtl
dec
ret
test
add
push
loop
lock
pop
mov
cmp
aas
arpl
pop
iret
jns
data16
inc
loope
pop
std
inc
jnp
fsubl
jbe
lea
dec
mov
adc
add
test
aam
inc
ja
sbb
adc
pop
pop
push
fsubrl
repz
data16
cmc
outsb
push
mov
mov
adc
dec
out
mov
add
dec
cs
out
insb
xchg
rcrb
jns
cwtl
push
mov
fimuls
jbe
sti
cli
add
test
cwtl
xchg
aam
gs
push
xchg
pop
fimuls
cmp
mov
les
sub
push
push
inc
lock
jecxz
mov
jne
xlat
ja
pushf
sbb
imul
dec
cwtl
sbb
push
gs
add
push
jno
fmull
mov
sbb
ficoms
lock
mov
out
aad
jns
rcr
xor
ja
push
jns
ret
hlt
inc
sbb
xlat
jbe
jb
es
mov
xchg
inc
arpl
push
test
cld
mov
cmp
js
fwait
decl
cmp
push
jl
popa
cmc
push
push
fdivrs
and
fbstp
lcall
mov
pop
jp
fwait
pusha
xor
ljmp
ret
int
xchg
addr16
lock
data16
lock
cltd
and
lods
push
nop/reserved
mov
mov
push
scas
movsb
inc
push
inc
cmpb
addl
test
mov
call
push
jo
mov
js
scas
jnp
stc
mov
dec
mov
ja
insl
popf
pop
icebp
mov
push
push
mov
push
and
dec
push
sbb
xor
or
pop
jb
jecxz
mov
sahf
mov
lcall
fs
fs
xchg
push
lods
ljmp
mov
imul
jo
push
stos
push
push
add
inc
xchg
push
sarl
jno
mov
ret
mov
xorb
test
jl
inc
inc
pop
mov
xchg
mov
sub
je
rorl
mov
outsb
xchg
stos
dec
dec
mov
add
int3
dec
xchg
sub
incl
dec
mov
ds
lods
push
inc
sbb
inc
insl
inc
stos
push
jne
fwait
jae
cmpsb
inc
push
lcall
arpl
popf
mov
push
xchg
pop
dec
jl
dec
jne
xchg
lahf
jns
sbb
rolb
cltd
mov
repnz
lods
inc
mov
jg
mov
jno
or
sub
repz
sub
adc
aas
add
ja
and
push
jg
fs
sbb
adc
daa
add
pop
push
dec
mov
xor
sbb
ret
sub
sub
sub
add
cwtl
add
sbb
push
sbb
xor
ljmp
adc
sbb
cmp
sbb
inc
dec
or
sbb
aas
or
mov
aaa
push
sbb
cmp
sub
mov
push
xor
adc
adc
jg
push
pop
lods
xor
add
cmp
sbb
push
add
inc
cwtl
sbb
popa
inc
cmp
cmp
sbb
xor
push
ud2
push
add
aas
sbb
jbe
or
mov
xchg
add
sub
sub
add
push
mov
daa
ds
push
xor
aaa
aas
cmp
jmp
pop
jno
or
aas
add
and
or
jbe
lock
ds
clc
pop
sub
xor
jg
ds
add
add
bound
add
and
or
stos
mov
xor
cmp
decb
push
or
and
adc
jp
incl
or
adc
or
or
fwait
dec
add
adc
sbb
add
aaa
add
and
sbb
insb
jb
dec
leave
gs
adc
ja
fdivrl
es
add
sbb
mov
push
adc
adc
cmp
or
push
sub
ja
add
or
adc
js
sub
sbb
or
cmp
daa
sub
das
insl
add
add
adc
cmp
xor
xor
mov
pop
sub
xor
push
xchg
inc
adc
and
push
decl
adc
sbb
xor
add
and
or
and
or
push
sub
in
adc
and
xor
jae
daa
movsb
push
pop
fistps
daa
xor
push
mulb
outsl
and
das
cmp
sub
or
push
push
or
outsl
mov
das
sub
cmp
imul
mov
sub
sbb
ds
or
cmp
testb
sbb
call
jmp
cvtpi2ps
add
add
cmp
add
or
mov
add
cmp
xor
ljmp
and
and
add
inc
pop
popa
test
add
adc
mov
mov
inc
and
xor
decl
push
inc
jl
or
sub
cmp
push
and
ds
sbb
push
pushf
push
sub
and
inc
adc
or
push
cld
aaa
daa
push
or
or
cmp
cmp
push
mov
test
rorl
cmp
and
fdiv
aaa
cld
or
xor
dec
mov
sbb
or
xor
cmp
adc
jb
adc
add
cmp
push
insl
lcall
add
and
je
dec
mov
or
mov
xchg
xor
sbb
js
fs
adc
pop
dec
cmp
inc
fsubl
dec
dec
add
jb,pn
dec
push
pop
xor
add
aas
push
cld
ljmp
cmp
jae
push
and
add
into
cs
or
cmpsb
test
movl
out
hlt
scas
lcall
cmp
cwtl
sbb
xchg
loop
loopne
add
mov
and
add
inc
push
xor
add
xor
sbb
sbb
xor
insl
pop
add
or
add
and
scas
sub
pop
add
cli
xor
push
sub
jo
jle
lidtl
mov
push
aas
xor
out
cli
sbb
shrb
cmp
add
pop
and
add
adc
pop
lock
cs
add
pop
and
fcomip
das
push
aas
or
sub
cs
and
push
inc
sbb
das
daa
or
push
pop
lcall
mov
prefetch
push
dec
rorl
or
or
jae
inc
sbb
outsl
push
mov
and
add
ja
jbe
js
aaa
ss
clc
mov
lret
jle
add
add
ret
inc
lea
stos
es
pop
or
sbb
dec
pop
pop
or
mov
das
sbb
and
mov
add
add
sub
lret
ficompl
ljmp
add
xor
or
and
jno
test
cld
sbb
push
add
out
push
rcrb
cmp
xor
aaa
or
call
dec
push
cmp
sub
adc
adc
cmp
xor
sbb
cmp
ja
add
adc
js
pop
and
outsb
jecxz
rorb
adc
decl
and
sub
stos
jno
or
mov
mov
xchg
or
lret
fs
pop
or
cld
or
add
addr16
int3
dec
and
call
cwtl
cmp
inc
out
inc
das
bndldx
add
cs
cmp
mov
mov
push
lds
es
or
adc
fdivl
ljmp
sbb
sbb
xor
js
adc
push
xor
adc
sub
cmp
ficoml
xchg
jo
test
sahf
push
das
or
adc
add
push
xor
fimuls
je
shll
ja
and
xor
adc
push
sbb
aad
adc
xor
or
add
jno
inc
xor
xorb
push
sbb
std
pop
popa
sub
outsl
mov
cmp
add
sub
xchg
adc
sbb
and
and
movsb
addb
add
sub
inc
add
decb
cs
cmp
rcll
cmp
xor
cmp
iret
addr16
sbb
adc
cmp
sub
and
xchg
and
popl
je
pop
push
cs
lcall
cld
bound
pop
inc
mov
or
or
adc
mov
or
popf
adc
mov
sub
scas
push
jb
pop
sbb
aaa
std
fiadds
add
xor
and
and
or
inc
mov
inc
pop
rclb
pop
icebp
addr16
jmp
clc
jg
fs
and
push
leave
outsb
jp
out
cld
das
cli
sub
sub
cmp
adc
push
gs
or
scas
xor
jns
out
ret
and
inc
out
sahf
out
pusha
outsb
pusha
pop
sarl
addr16
insl
pop
jp
lcall
jp
dec
rcll
mov
fs
xor
xor
add
inc
inc
cmpsb
dec
dec
shrl
inc
mov
mov
adc
out
ss
push
lcall
xor
es
stos
push
shll
sbb
data16
sbbl
pop
and
cmp
jae
fs
lcall
enter
imul
push
movsb
fimuls
jp
xor
movsl
sub
xor
rcl
popa
fcompl
dec
shll
js
shll
xor
inc
inc
dec
inc
push
outsl
adc
xor
pop
dec
push
push
and
and
cmp
mov
arpl
jb
inc
inc
cmpsb
mov
inc
jno
add
xchg
insb
pop
icebp
mov
shrb
push
je
jle
or
bound
pop
movsl
jo
mov
inc
inc
sbb
push
pop
add
bound
imul
jg
push
adc
add
daa
lock
dec
push
jns
jns
inc
jg
fcomip
inc
sahf
push
push
mov
ja
mov
push
inc
std
stos
out
push
jno
fsts
lcall
fldl
out
mov
dec
in
jge
lahf
jg
mov
push
data16
ficoms
pop
jo
addr16
inc
mov
repnz
pop
push
mov
stc
jns
jns
push
adc
cld
push
clc
push
mov
iret
aas
cld
push
jmp
ljmp
popa
pop
sub
cld
repz
jg
in
pop
inc
jb
xlat
outsl
pop
dec
test
addr16
jg
iret
fs
mov
push
gs
add
pusha
mov
or
arpl
xchg
in
jle
idiv
jg
fcompl
test
jmp
je
int3
dec
xor
jne
fbld
std
inc
inc
mov
lret
mov
incl
lods
stc
jb
xchg
testl
mov
outsl
xlat
repz
pusha
shr
jne
bnd
fucomi
fcomip
insb
pop
in
mov
loope
imul
ljmp
das
mov
jb
cs
dec
push
sub
dec
jne
fisubrs
psllw
ret
das
ret
outsb
call
add
jo
adc
fs
xor
imul
push
jns
push
gs
mov
jecxz
pop
insb
insb
notb
mov
out
lret
push
mov
call
movsl
rcll
xlat
fidivl
ja
add
dec
xor
pop
add
rclb
dec
fs
gs
jle
push
pusha
xchg
test
addr16
pusha
inc
push
jl
loope
inc
lds
inc
adc
jbe
std
outsl
mov
jbe
imul
jbe
jo
hlt
js
movsb
add
int
and
dec
sbb
nop/reserved
cmp
add
mov
add
and
das
and
sub
push
xor
ljmp
adc
add
or
cmp
adc
adc
push
or
xchg
mov
mov
pop
mov
imul
inc
pushf
pop
dec
pop
jne
bound
lods
push
call
aam
jle
jp
arpl
dec
outsl
pop
inc
push
push
insb
jb
push
insb
push
mov
or
inc
adc
das
decl
das
aaa
mov
adc
and
sub
and
sbb
or
jmp
push
aaa
sub
add
sbb
sub
cmp
cs
cs
dec
outsb
push
insb
ret
clc
orb
icebp
xor
cld
bnd
scas
call
adc
mov
add
jg
push
pop
test
mov
jp
scas
enter
mov
mov
out
xchg
pop
testl
mov
addr16
mov
add
jmp
sub
daa
mov
popf
dec
jb
xchg
cmp
imull
inc
sub
scas
out
sbb
test
into
push
pop
lock
sub
int
outsl
push
cwtl
dec
shlb
xchg
inc
cmp
out
subl
sbb
pop
call
xor
inc
xor
outsb
jae
jle
push
xchg
cld
or
push
pop
shrb
stc
jns
sbb
fs
xorb
cmovp
and
ss
imul
dec
mov
js
test
xor
xor
mov
push
or
jae
or
in
fdivrs
push
fdivrl
jbe
push
jp
and
push
xor
pop
or
gs
cmp
repz
loop
xchg
and
inc
inc
and
das
push
ss
xor
sahf
daa
lea
cmpsl
mov
fisttps
pop
pop
aaa
xor
and
add
sub
xor
or
movsb
ret
ja
mov
jns
decl
test
jle
cmp
cvtpi2ps
mov
aaa
inc
push
and
adc
adc
ss
cltd
ljmp
jl
daa
aaa
add
push
push
ss
sub
xor
cmp
add
dec
jbe
aam
mov
das
pop
inc
jo
daa
ds
sbb
adc
sub
pop
loope
mov
adc
mov
adc
lea
mov
jg
jp
insb
arpl
pop
inc
dec
jbe
sub
arpl
inc
adc
cs
mov
sub
aaa
insl
cmp
arpl
or
call
add
push
sub
cmp
imul
sub
scas
clc
incl
sub
sub
pop
mov
mov
lcall
aas
sbb
add
sub
add
add
add
xor
lock
sbb
xchg
fstps
pop
jge
add
pop
sbb
daa
cmp
pop
push
adc
pop
push
add
sub
cmp
mov
or
sbb
add
daa
sub
cli
aaa
cmp
sbb
nop
adc
pop
xor
mov
adc
or
push
sub
push
cwtl
xchg
fldcw
call
push
pop
inc
and
cmp
push
and
xor
cmp
sub
ljmp
inc
pop
inc
pop
cmp
dec
adc
and
add
das
adc
inc
incl
arpl
push
xor
adc
pop
sub
and
add
xor
mov
push
jge
pop
push
or
push
adc
and
sbb
xor
cmp
sub
and
cs
push
sar
or
jg
add
add
adc
or
cmp
xor
jg
sbb
and
or
sub
ss
lock
outsb
cli
sub
xchg
add
xchg
fbld
add
push
aaa
pop
xor
xchg
add
jns
cmp
or
cs
das
cmp
sbb
sub
adc
stos
inc
loopne
push
movups
and
xor
cmp
sbb
sbb
add
add
pop
xor
cmp
sbb
sbb
ja
pop
push
or
jnp
xor
loop
sbb
or
sub
pop
out
pushf
shrb
dec
push
pop
std
or
or
les
cmp
sbb
ss
cmc
mov
inc
jp
add
mov
mov
sub
or
adc
aaa
pop
dec
add
sub
mov
daa
and
xor
daa
adc
incl
loop
mov
scas
inc
outsb
sbb
jnp
daa
pop
adc
outsl
add
bound
sub
addr16
adc
and
sbb
sbb
pop
sub
adc
or
xchg
in
pop
inc
sub
push
pop
sub
clc
call
and
pop
adc
adc
imul
xor
cmp
push
dec
call
xor
sbb
push
sub
mov
cltd
in
gs
jnp
clc
dec
fildll
stos
sub
sub
sbb
cmp
pop
and
scas
not
icebp
call
push
xor
cs
sbb
mov
data16
pop
mov
cmp
or
and
xor
push
pop
fs
cmp
or
push
push
add
and
and
incl
shll
dec
mov
scas
jg
push
adc
dec
push
cld
xor
bndstx
push
mov
dec
pushf
pop
mov
dec
jp
mov
xchg
jns
inc
fwait
cmpsb
pop
cmp
cmp
xor
rorl
inc
popa
pslld
sbb
sarl
mov
repnz
insl
xor
or
sub
test
sti
leave
jne
jmp
scas
cld
gs
insb
sub
mov
shlb
fwait
add
mov
mov
cld
into
sub
cltd
sbb
sub
leave
ss
incl
fdivl
ficoml
mov
icebp
arpl
in
out
adc
jg
aam
mov
pop
mov
sub
orl
cmp
iret
adc
add
cli
decl
xchg
xchg
or
and
test
addr16
call
shlb
clc
pop
xchg
cmpsl
cmpsb
cmpsb
xchg
cmpsb
and
decl
in
cltd
das
xor
out
lret
in
xchg
leave
sub
jle
xor
out
cmp
adc
inc
pusha
push
jp
rcrl
dec
mov
leave
in
stc
cmp
xchg
and
ljmp
mov
and
push
shl
movsb
or
std
ja
and
inc
cmp
std
pusha
add
stos
push
or
fists
lahf
pop
add
mov
pop
xlat
nop
pop
mov
jge
pop
cmpsb
or
mov
dec
mov
dec
and
fcomip
incl
call
insl
enter
jp
int3
cmp
lods
mov
jo
nop
mov
sub
inc
xor
and
xchg
sbb
pop
hlt
mov
insb
sbb
andl
mov
pop
xor
sar
lcall
lods
xchg
vsqrtps
cli
aaa
sub
sbb
or
aas
aaa
inc
rcrb
jle
xchg
inc
std
shrl
xchg
pop
js
ljmp
cli
jl
xor
shlb
mov
mov
sti
mov
les
mov
sbb
dec
int3
mov
enter
push
lret
mov
pop
cmpsl
out
daa
or
sarl
decl
pop
mov
xor
cmp
jecxz
mov
repnz
roll
cmp
push
jecxz
add
and
fldenv
push
enter
adc
mov
push
in
mov
mov
xchg
lcall
and
outsb
cmc
sub
insl
dec
and
adc
xchg
xor
call
leave
cli
jo
adc
mov
mov
idivb
jne
pop
add
push
cwtl
inc
xchg
add
cs
int3
ret
rep
fwait
sub
das
fidivrs
push
lock
outsl
push
inc
pop
js
dec
leave
push
push
inc
dec
inc
adc
adc
scas
jle
push
jb
cmp
or
ds
and
adc
daa
cmp
jns
bndstx
arpl
and
sub
wrmsr
jl
mov
or
add
add
jg
sbb
dec
add
pop
inc
adc
jp
add
mov
ds
or
pusha
dec
fs
xchg
dec
addr16
push
ljmp
xchg
push
push
add
insb
sub
sbb
push
inc
cmp
add
dec
aas
add
push
movaps
addr16
and
or
add
and
sbb
ljmp
adc
push
inc
inc
inc
jl
outsb
je
pop
add
xor
jmp
cmp
insb
fs
push
push
bound
jg
adc
push
pop
cmp
daa
push
cmp
push
sbb
or
jo
jge
ret
pop
js
push
sub
or
xor
adc
call
push
fimuls
or
cmp
sbb
and
jno
incl
and
or
push
jbe
and
xor
xor
and
dec
aaa
pop
add
push
ljmp
and
or
sub
and
or
inc
mov
test
fwait
push
ds
dec
mov
and
cmp
sbb
gs
inc
sarl
push
push
jle
xor
sbb
push
dec
xchg
push
push
push
add
adc
daa
sub
and
inc
dec
pop
adc
adc
xor
lcall
or
sub
or
ds
push
sbb
xor
or
daa
xor
sbb
dec
add
pop
add
add
sub
adc
pop
sbb
add
clc
jg
xchg
push
pop
or
add
cmp
adc
sbb
jle
push
adc
adc
call
add
dec
cmp
mull
pusha
lea
push
cmp
jle
fidivl
jb
int
lock
pop
popa
aaa
jl
call
inc
push
insl
push
cmp
jge
out
and
stc
dec
fsts
jp
cld
jb
jle
push
or
call
je
pop
in
jl
jo
push
pop
pop
jae
pop
pop
jne
aaa
fdivp
filds
push
push
push
fmuls
jmp
ret
jg
mov
pop
jnp
xchg
inc
pop
dec
dec
push
js
push
icebp
inc
jl
and
jp
inc
sbb
push
in
push
sarb
js
push
sbb
fdivs
pop
movsl
jg
dec
push
push
aas
jg
mov
mov
xor
addr16
pop
jp
pop
decl
cld
clc
dec
lret
pop
push
and
jne
jle
pushfw
inc
in
ljmp
inc
pop
push
imul
arpl
dec
ret
cmpsb
pop
pop
inc
bound
inc
decl
pop
addl
push
inc
js
popa
jp
sbb
jns,pn
outsl
into
fildll
jns
dec
dec
dec
or
imul
enter
decl
push
insb
mov
pop
dec
dec
dec
push
sub
push
lds
mov
push
or
jg
or
pop
mov
pusha
adc
filds
jno
pop
inc
pop
es
jg
gs
jns
pusha
scas
inc
pop
jg
ss
fisttpl
jo
ds
clc
push
xchg
dec
movq
outsb
imul
cmp
fsubrs
dec
bound
dec
sbb
lcall
sbb
leave
pop
mov
jne
incl
cld
outsl
push
push
dec
ja
push
js
push
inc
cmpb
jmp
iret
lcall
jns
insl
std
pop
adc
ror
mov
jno
fisttps
mov
inc
pop
jnp
inc
in
fisttps
ljmp
gs
jg
jns
data16
lock
loop
repnz
lcall
ljmp
inc
les
jns
pushl
pusha
mov
popa
lret
insl
sub
inc
push
loope
repnz
mov
jno
jl
out
out
push
jg
call
jle
imul
gs
pop
mov
mov
mov
pop
pop
adc
push
pop
dec
and
push
or
sarb
pop
pop
push
cmp
cmc
jge
pop
xchg
push
add
lcall
inc
popa
pop
aas
js
inc
loope
xchg
push
enter
les
loopne
std
je
pop
out
js
dec
fstl
jns
push
mov
mov
push
test
push
ja
clc
call
pop
push
jno
inc
or
ja
jl
fs
mov
mov
nop
popa
insb
dec
jbe
push
popa
jge
sbb
pop
inc
sub
add
jmp
pop
cmc
pop
out
inc
leave
inc
cmc
dec
loopne
out
cmpsl
jge
pushl
cs
mov
arpl
insb
shlb
pop
cmp
xor
gs
call
loopne
cmp
push
gs
inc
clc
outsl
repz
nop
inc
scas
pop
test
mov
mov
mov
jo
push
sbb
dec
xor
sar
fcomip
dec
ret
dec
hlt
rclb
jae
imul
lahf
push
mov
fwait
dec
jg
mov
dec
insl
insb
push
pop
mov
or
mov
hlt
push
loope
jo
shlb
ljmp
js
jp
js
pusha
add
and
inc
lret
jbe
push
call
dec
mov
inc
out
clc
mov
movsb
cmpsb
sbb
push
inc
pop
pop
inc
inc
ja
push
push
jmp
jbe
inc
in
js
jbe
jge
pop
int
push
mov
popa
pusha
dec
dec
jl
outsb
outsl
fcomip
jmp
jp
jl
arpl
arpl
dec
aad
dec
xchg
bound
inc
sub
push
add
clc
add
jnp
inc
jbe
popa
in
fldenv
fistpll
mov
inc
sub
inc
fsts
push
ds
jo
jge
dec
cltd
push
pop
imul
inc
jg
fwait
mov
or
add
jp
xchg
pop
stc
jle
jne
out
xchg
ret
jne
pop
pop
loop
bound
jge
add
dec
stos
xchg
int3
dec
xlat
jg
ljmp
pop
xchg
jge
push
gs
std
lcall
jo
inc
inc
ret
lret
pop
call
jne
dec
mov
pop
in
or
push
mov
sbb
mov
call
pop
mov
dec
enter
fistl
mov
jne
push
out
inc
pop
inc
cmp
jno
inc
mov
arpl
jge
gs
jg
incl
inc
scas
pop
dec
push
lock
inc
ss
inc
popf
or
daa
push
mov
incl
xor
dec
ja
popa
inc
aaa
push
and
jb
imul
push
gs
dec
push
dec
adc
jmp
dec
and
out
scas
insl
pop
cmc
cmp
dec
mov
pop
mov
pop
push
dec
ss
imul
or
or
push
das
inc
push
dec
cmp
insb
ret
dec
out
ljmp
sar
movsb
jl
push
bound
sub
imul
cld
jbe
inc
movsl
push
inc
ljmpw
sbb
push
xor
jne
fs
call
jl
stos
dec
inc
dec
jle
inc
inc
adc
push
pop
pop
repz
pushl
fidivrl
jns
popa
inc
in
std
inc
shlb
jbe
push
mov
xchg
push
xchg
inc
xchg
mov
push
cltd
inc
insl
arpl
dec
pusha
mov
push
inc
dec
jo
outsl
aaa
std
and
or
sub
and
jp
pop
cli
lcall
movsb
fistpll
inc
cmpsb
gs
pop
jns
imul
movsb
jg
jns
data16
jmp
dec
adc
fmuls
pusha
mov
mov
and
push
and
jnp
jns
jns
pushl
sbbb
pop
je
jae
insl
cltd
inc
stos
push
xchg
call
push
xor
ss
dec
mov
jge
inc
xchg
jno
jle
imul
and
mov
pushl
pop
push
jge
jbe
insb
in
fstps
dec
sahf
pop
adc
bound
dec
and
jg
ficompl
xchg
xchg
jle
pop
push
jle
xor
jnp
push
dec
lcall
inc
and
jno
pop
push
dec
imul
jb
pop
iret
fwait
cmpb
xchg
jb
je
adc
imul
adc
lods
lret
add
pop
cmp
mov
adc
je
push
sbb
or
inc
mov
or
mov
lcall
pop
fdivr
decl
dec
mov
popa
mov
pop
jnp
pop
mov
inc
stos
xchg
icebp
add
push
pop
ss
incl
pop
xlat
push
sarl
and
insb
add
outsb
cmp
pushl
lcall
inc
jmp
mov
and
inc
ds
xor
outsl
cmp
xchg
push
les
push
sti
js
fisubs
jp
jbe
push
cmp
xchg
inc
fs
es
push
bound
sub
push
adc
incl
pop
dec
stos
pop
mov
gs
js
inc
push
jmp
jge
insb
xchg
push
push
dec
imul
repz
in
dec
mov
push
lahf
je
ja
jne
dec
sar
ljmp
inc
cmp
jl
js
pop
mov
xchg
pop
fs
cmpsb
rclb
push
hlt
popa
inc
ja
bound
pop
call
fcoms
arpl
jl
jb
jp
pop
cmpsl
jne
inc
xchg
jnp
inc
add
jmp
jl
aas
imul
pop
jg
jns
data16
loope
iret
dec
movsl
dec
sbbl
test
pop
pop
jp
ja
ja
pusha
mov
cmp
or
jl
lret
lcall
push
mov
ja
jae
jle
dec
scas
push
xchg
imul
es
mov
pop
fistpll
jle
fs
ret
test
call
push
pop
mov
stos
inc
jb
dec
pop
jae
mov
dec
push
dec
jno
push
pusha
je
pop
push
addr16
pop
dec
dec
push
pop
jg
push
mov
pushl
inc
add
jnp,pn
inc
and
cmp
push
sub
jns
push
rcrl
rorl
pop
sbbb
dec
mov
cwtl
push
or
mov
ljmp
outsb
cmp
jb
mov
dec
fs
mov
dec
popa
jle
jne
addb
lret
dec
xchg
push
cwtl
pop
bound
mov
js
jp
mov
push
inc
add
jbe
inc
and
pop
or
cli
pop
out
mov
lcall
imul
pop
sub
push
xor
jne
inc
xchg
mov
arpl
push
jmp
jge
pop
and
pop
mov
xor
fcomip
and
push
sub
dec
jb
pop
sub
jg
cs
or
pop
popl
mov
ficompl
je
inc
cltd
jbe
pusha
sbb
push
scas
addr16
dec
jp
mov
inc
in
push
xchg
pop
pushf
pusha
jl
daa
data16
ljmp
dec
sbb
inc
pcmpeqw
jno
push
test
jb
jle
dec
jns
push
and
lcall
gs
push
xor
jp
pop
mov
jp
dec
xor
jns
jb
mov
fistpll
dec
fdivl
dec
lods
es
mov
insl
push
outsb
sbb
ljmp
inc
incb
inc
stos
outsl
xchg
insl
outsb
insb
adc
outsb
inc
push
push
jno
jl
jl
imul
mov
pop
mov
imul
push
icebp
inc
repz
dec
sub
push
inc
sahf
pop
mov
loopne
in
jno
jg
test
outsl
sbb
push
out
jo
enter
inc
outsb
push
je
pop
ds
mov
lcall
sub
decl
push
pop
cmc
push
fstpl
jnp
pop
jmp
push
shlb
ds
or
ljmp
pop
xlat
dec
loopne
aad
mov
out
jo
pop
mov
ja
pop
lahf
push
xchg
imul
lcall
sub
inc
js
push
xchg
jp
inc
adc
pop
sbb
push
jbe
ret
inc
ja
push
aam
mov
sahf
pop
xorl
jbe
add
inc
mov
lcall
push
mov
jp
rolb
jne
aas
js
pop
in
mov
jle
dec
addr16
xor
dec
out
cli
decl
inc
jp
fs
and
dec
sub
jne,pn
arpl
jne
and
aaa
cld
sub
dec
cmp
pop
jnp
dec
incb
add
pop
lock
dec
and
out
jbe
push
idivb
fs
sbb
push
add
aad
inc
ret
pop
movsb
insb
pop
dec
in
das
aam
js
arpl
lcall
decl
lock
inc
dec
inc
je
addr16
inc
fidivl
ljmp
pop
xchg
inc
insb
addr16
inc
adc
push
rolb
notb
pop
mov
movsl
jno
or
jle
jl
imul
dec
test
push
cmp
dec
aaa
inc
out
into
push
gs
dec
push
lcall
in
xchg
push
jge
mov
outsb
cmp
dec
ljmp
push
dec
ss
inc
jecxz
hlt
inc
int3
fs
dec
pop
jge
ljmp
push
popa
jae
push
jge
bound
inc
dec
push
dec
push
dec
arpl
popa
xor
xor
or
lcall
int3
jbe
insb
int
rcrb
ss
xor
mov
cli
pop
cmpsl
jg
jp
ja
inc
pop
pop
xchg
popa
imul
ljmp
imul
and
pop
adc
test
add
int
rcrb
pop
pop
dec
or
sbb
pop
lahf
inc
xorb
loope
hlt
push
adc
push
lret
pushl
pop
lods
pop
push
inc
and
pop
xor
dec
adc
jno
dec
sbb
pop
sbb
jne
fdivrs
daa
push
outsb
sarl
push
jne
loope
dec
xor
inc
incl
push
cltd
popa
mov
pop
in
enter
fwait
jp
dec
add
jg
scas
clc
jg
je
insl
lcall
outsl
dec
inc
out
dec
mov
add
jb
push
adc
js
dec
pop
push
pop
push
repz
test
xchg
or
mov
push
pop
icebp
jg
push
jle
push
inc
inc
add
inc
xchg
rolb
decl
push
fs
inc
das
imul
inc
lock
in
fcompl
jb
sbb
mov
dec
push
jo
in
pop
outsb
pop
data16
dec
add
ljmp
cs
xor
jae
pop
ljmp
mov
dec
test
inc
sahf
inc
icebp
jg
xchg
pusha
fiaddl
outsl
jne
inc
jp
xor
adc
push
and
or
lcall
jge
push
xor
testb
jmp
js
jp
hlt
dec
cmpsb
ret
outsl
inc
and
sub
incl
inc
and
push
ds
xor
ja
bound
incl
jb
push
aas
arpl
jae
inc
int
ret
js
pop
in
ja
inc
ret
jns
inc
shlb
dec
loop
jp
push
mov
stos
mov
dec
mov
lods
lcallw
push
mov
sub
pop
xchg
mov
push
mov
addr16
sbb
fbld
pop
pop
push
dec
jb
js
pop
cmpsb
jns
je
cld
ljmp
rclb
sub
jns
jne
bound
push
call
sbb
addr16
jge
push
ret
push
ret
imul
out
push
sbbb
fadds
ficoms
pop
loope
loopne
rclb
jbe
das
cli
xor
scas
inc
insb
cwtl
mov
out
outsl
pop
dec
lock
js
inc
dec
jl
push
and
jl
jp
push
cmp
sbb
pop
lret
jns
dec
ljmp
roll
int3
push
enter
add
jmp
cmpsl
pop
mov
je
jne
push
xchg
orb
ljmp
inc
pop
je
jg
or
inc
xor
push
sub
dec
daa
incl
arpl
dec
sarb
pop
aam
ljmp
pop
mov
inc
mov
pop
mov
mov
jg
imul
jl
jbe
dec
pop
push
inc
outsb
push
or
arpl
jne
inc
lcall
add
inc
xor
inc
in
hlt
jns
pop
in
jae
pop
lock
jns
pop
pop
gs
jns
imul
push
jl
bound
inc
pop
jbe
pop
push
jg
sbb
pusha
xor
dec
pushl
std
and
inc
add
pop
sub
jae
bound
push
enter
cli
gs
faddl
inc
rclb
jle
jl
jle
data16
push
cmc
scas
xor
stc
inc
scas
jne
push
lods
outsl
cwtl
push
mov
xchg
cld
jg
mov
sahf
lods
jno
fs
inc
jns
popa
push
push
cli
jg
sub
imul
outsb
je
jg
pop
pop
jo
out
dec
push
jle
inc
inc
pusha
xor
push
jge
outsl
add
jnp
jge
bound
bound
dec
or
sti
pop
std
sbb
popa
out
addr16
pop
pop
push
push
push
out
mul
jns
outsb
repnz
test
pop
mov
insl
movsl
inc
inc
push
jnp
push
js
ljmp
add
pop
imul
sarl
in
arpl
jp
std
decl
pop
xchg
jle
jne
outsl
xchg
pop
push
dec
jb
mov
push
inc
push
inc
adc
push
add
pop
jg
adc
fxch
js
pop
jmp
push
test
jg
mov
jbe
pop
jge
inc
push
jge
push
dec
push
ja
das
pop
sbb
adc
sbbb
or
jle
push
xlat
jb
inc
iret
pop
cmp
pop
mov
std
dec
subb
xorl
mov
pop
inc
dec
inc
dec
add
jg
ljmp
xor
dec
clc
dec
fists
pop
mov
inc
orl
xchg
inc
mov
sbb
dec
mov
dec
fs
push
push
dec
dec
pusha
dec
push
add
xor
push
jae
push
mov
int3
lds
gs
jae
jp
xchg
pop
orl
pushf
jp
dec
jne
lcall
js
dec
imul
push
xor
cmp
jg
push
cmp
cmp
jae
push
decl
loope
repz
mov
insb
cmpsb
dec
mov
jp
push
outsb
loope
ljmp
dec
ss
inc
adc
dec
ljmp
push
sar
pop
jo
mov
inc
mov
jp
inc
push
add
inc
cmp
sarl
pop
jnp
jns
popa
cwtl
dec
test
inc
push
jno
jne
push
decl
xor
dec
rolb
in
push
mov
je
popa
sbb
inc
lds
std
pushl
push
xchg
pusha
lods
jo
inc
pop
jns
ja
push
pop
mov
inc
mov
jge
inc
lods
arpl
insl
fs
stos
fbld
xor
pusha
decb
dec
fmull
mov
xchg
pushf
gs
push
mov
push
pop
jmp
inc
ja
ja
pusha
push
push
and
pusha
aaa
jge
arpl
dec
ret
pop
sarl
pop
and
addb
jae
dec
and
decl
jae
fs
outsb
loop
hlt
push
in
int3
jnp
popa
mov
mov
lock
mov
push
push
inc
inc
mov
cmp
sahf
pop
xor
pop
add
pop
aaa
jg
push
cmp
in
or
incl
pop
cmpsb
je
pop
mov
dec
xchg
and
pop
dec
jo
out
call
push
cli
sub
cmp
or
notl
jo
inc
fistpl
jno
lcall
sbb
pop
add
sarl
jg
pop
mov
cmpsb
fisttpl
mov
jae
test
jle
jne
insl
sub
add
xor
pop
jmp
faddl
dec
mov
jae
push
pusha
dec
jle
imul
add
or
dec
incb
push
xchg
jb
imul
addr16
call
jae
gs
jae
xchg
pop
aaa
dec
fimull
imul
cld
ljmp
pusha
pop
jns
cmp
jg
push
in
clc
jge
jae
push
cmpsl
outsl
push
push
call
push
dec
jg
or
dec
and
jge
push
into
je
outsb
mov
dec
outsb
test
es
popa
jg
lcall
push
pop
ja
inc
push
jne
fs
pop
in
rcll
mov
jg
mov
or
mov
gs
outsb
jns
jnp
lock
or
jns
sub
jbe
push
cmp
lds
dec
xor
jg
push
jbe
pusha
mov
adc
jne
clc
jae
inc
jne
jp
outsb
incl
sub
jns
inc
sub
dec
xor
push
std
jns
push
std
out
data16
dec
mov
mov
fs
inc
pop
inc
ljmp
data16
push
std
push
in
in
sti
pop
mov
lcall
jl
cld
idiv
mov
inc
xchg
pop
dec
addr16
dec
ret
outsl
data16
cmp
cmp
jns
arpl
jns
push
push
inc
or
insl
cmp
dec
and
incl
xor
inc
out
jo
push
cld
pop
fstl
ja
push
fbstp
pop
in
lock
decl
mov
jns
push
int
repz
mov
jns
push
mov
jg
call
std
push
mov
pushf
popa
mov
jae
ja
pop
pop
jmp
ja
dec
mov
pop
hlt
mov
jns
js
pop
ljmp
jl
dec
sub
in
mov
sub
inc
mov
dec
outsl
inc
sbb
dec
mov
pop
pop
inc
jp
fnsave
inc
insb
pop
sub
mov
lock
xchg
dec
xchg
pop
mov
data16
sub
push
adc
add
add
inc
adc
xor
jns
leave
enter
insl
nop
lods
ja
call
fs
jno
dec
fsubs
fsubrs
jo
pushw
adcb
and
jae
push
incl
sub
adc
sbb
aas
jno
xor
adc
pop
das
cmp
cmp
add
aas
repnz
inc
pop
jbe
scas
mov
ds
int
xor
ret
imull
in
sarl
adc
xchg
and
std
pop
clc
icebp
ljmp
int
cmp
fadd
adc
sti
xlat
or
loope
cmp
push
lret
cmp
repnz
add
jmp
lock
inc
xor
lret
dec
jg
or
in
or
or
adc
aaa
xchg
jmp
rcrl
aas
aas
nopl
jecxz
xor
pop
decl
clc
jne
scas
mov
and
push
mov
xchg
jmp
lahf
jo
push
jmp
inc
cmp
inc
jge
push
inc
mov
je
inc
pop
push
push
lret
mov
mov
jbe
mov
jbe
dec
xchg
lret
lahf
mull
fs
addr16
imul
sbbb
daa
jecxz
je
dec
lahf
aas
or
js
cs
stc
jmp
dec
push
push
push
dec
push
push
push
dec
xor
cmp
dec
outsb
inc
scas
fs
and
and
push
push
inc
dec
push
pop
arpl
pop
inc
mov
test
test
insl
testl
out
jecxz
dec
fcos
mov
cli
dec
iret
dec
xchg
shlb
arpl
adc
fdivrs
lret
ret
movsl
ret
decl
daa
ficomps
fidivrs
jae
push
imul
cmp
inc
sbb
mov
pusha
movsl
push
pushl
mov
rorb
sbb
xchg
pop
xlat
call
test
imul
mov
mov
movsl
push
pushf
fiadds
hlt
lcall
iret
out
cmp
into
jmp
shl
mov
das
dec
lahf
and
movsl
xor
inc
ja
lcall
or
mov
add
sub
and
test
add
outsb
lcall
lcall
fildl
sarb
cwtl
ss
adc
sub
mov
sbb
add
lcall
push
test
xchg
cmp
mov
and
jmp
leave
aam
jle
into
iret
xor
fdiv
imul
inc
bound
mov
addr16
xchg
jo
jnp
das
fdivrl
push
popa
sub
jecxz
arpl
and
pop
push
jmp
lods
fsub
and
mov
adc
cmpsl
pop
mov
sub
cltd
in
sbb
filds
add
mov
inc
repz
sub
pop
loope
daa
lods
test
icebp
iret
sbb
mov
mov
call
xchg
fldt
sbb
and
and
push
push
xor
lcall
mov
fdivl
cmp
pop
ds
xchg
xchg
loope
push
sahf
outsl
cmc
mov
push
lea
or
stos
xchg
cmc
sub
stos
cmp
sbb
sahf
add
jmp
bound
xchg
stc
sub
add
jecxz
mov
mov
in
rcrb
dec
xor
lea
icebp
cwtl
pushf
rorb
loopne
adc
and
ljmp
xchg
or
test
jge
xor
lcall
loop
cmpsl
clc
and
lods
popf
or
add
decl
sub
mov
in
rcrb
dec
push
ficoms
xor
dec
sub
fwait
nop
int
push
sahf
pushf
call
div
mov
mov
xor
and
mov
popa
mov
push
rolb
push
cmpsl
insb
enter
inc
lcall
push
cmp
lea
bound
jno
mov
cmp
loopne
mov
not
adc
aaa
out
sbb
ljmp
jmp
pop
fsubs
nop
push
cmpsl
jge
fmul
and
fisttps
or
xchg
call
or
dec
cmp
xchg
iret
cmp
mov
or
mov
repz
sbbb
lahf
jno
cmpsl
movsl
into
xor
sbb
stos
add
aaa
inc
rol
dec
mov
mov
cmpsl
mov
mov
sbb
pop
xor
jno
xor
fisubs
fisubl
enter
lcall
mov
jge
mov
pcmpgtb
or
adc
mov
test
jnp
mov
push
mov
inc
fimuls
push
sti
jmp
or
pushl
pop
gs
or
in
mov
pop
ljmp
pop
arpl
pop
jb
mov
das
sub
adc
inc
push
xchg
ficompl
xchg
xor
push
adc
and
lret
sbb
pop
ljmp
cmpsb
das
mov
lcall
ss
js
jmp
pusha
xchg
push
xor
roll
cmpsl
arpl
out
stos
xchg
faddp
mov
pushl
dec
mov
dec
dec
imul
ss
clc
mov
sub
or
jmp
lods
pop
or
dec
subl
sub
test
into
mov
cs
stos
call
push
ja
pop
dec
jg
lods
lcall
cltd
mov
push
push
sbb
cli
mov
pushf
jle
leave
gs
xor
scas
sbb
hlt
fisttpl
aaa
std
ljmp
xchg
subl
test
or
adc
xorb
mov
xor
push
popf
jns
imul
pop
dec
cld
aam
icebp
sub
loop
std
mov
insb
mov
xchg
sbb
adc
mov
call
cmc
mov
or
out
jo
mov
inc
mov
dec
and
jmp
shll
pushl
xor
pop
sub
or
out
add
addb
js
xor
jle
mov
clc
decl
cmp
add
push
and
test
std
lds
outsb
pop
mov
jmp
shr
add
dec
pop
aam
jb
dec
mov
dec
xchg
stos
inc
jbe
test
jno
xchg
and
push
jle
cwtl
jle
out
or
mov
pop
hlt
incl
scas
xor
nop
cmpsb
mov
pushf
sbb
loope
add
lea
loopne
cwtl
and
xchg
scas
lcall
inc
sbb
jb
lahf
mov
xor
xor
lcall
decl
xor
add
outsb
mov
popa
mov
data16
cmp
xchg
xchg
and
mov
pushl
xorl
es
sub
xchg
pop
xor
sbb
adc
cmpsl
rcrb
scas
test
incl
call
aad
nop
lea
loopne
sub
insb
jnp
lcall
jmp
mov
dec
mov
pop
rcll
movsl
mov
mov
fisttps
fisubl
out
push
mov
test
xorb
or
lahf
pop
mov
mov
push
or
xor
fwait
mov
and
jb
sbb
jmp
out
push
sbb
xor
aaa
std
jg
lcall
or
pop
or
xchg
mov
pop
mov
hlt
push
add
out
movsb
aaa
cld
incl
sbb
add
lds
push
mov
pushl
xchg
nop
repz
mov
push
xor
js
mov
or
lcall
push
out
xchg
mov
pushf
cmp
mov
imul
stos
cmp
pop
jmp
lret
sub
data16
in
or
mov
mov
or
std
incl
pop
mov
cmpsl
sub
and
lea
cmp
lahf
pop
std
adc
repz
adc
cli
and
sbb
fbstp
cmp
test
cltd
mov
cmc
scas
lods
jl
mov
incl
cld
jmp
sub
or
cs
lahf
adc
mov
jg
xor
jb
adc
adc
sub
or
sub
sti
cmp
sub
shrl
xchg
aas
push
repnz
lods
out
test
out
sub
and
xchg
cs
and
or
hlt
imul
pop
lret
shr
and
xchg
and
fwait
lock
les
lcall
jl
dec
fldl
lahf
mov
mov
int
into
sbb
sti
mov
clc
incl
and
scas
push
pushf
cwtl
push
sbb
in
or
leave
aaa
das
in
inc
pop
mov
insb
ss
jg
fwait
cltd
xor
fldt
xor
aaa
js
cmp
jp
jmp
aam
das
sub
test
lods
jb
insl
insb
dec
cwtl
or
outsl
xchg
repnz
dec
inc
or
cmpl
or
jmp
bound
lods
aaa
mov
and
movsl
xchg
xor
or
mov
fdivl
mov
pop
lcall
pop
mov
call
shlb
or
or
cmp
sarb
nop
add
cmp
and
rol
cld
lea
pop
sub
lock
call
xchg
push
xchg
mov
std
aas
into
lcall
push
xor
cld
in
pop
add
pop
es
mov
daa
cs
scas
sub
fbstp
bound
jp
ret
js
cmp
sar
lcall
xor
loope
outsb
divb
loop
aaa
and
cmp
or
hlt
cmp
pop
aaa
clc
mov
dec
sbb
enter
inc
cmp
insl
aaa
or
sbb
leave
pop
std
das
rorb
sti
xor
pop
clc
hlt
inc
dec
add
mov
mov
aad
sahf
cli
into
xlat
inc
decb
mov
jecxz
xor
pop
aaa
fisubrs
sbb
mov
add
or
xchg
mov
jg
lret
add
out
pop
push
inc
dec
and
negl
aad
mov
int3
sub
adc
das
movsl
mov
jecxz
cmp
and
clc
call
mov
or
jmp
das
lcall
mov
add
sub
inc
lcall
xchg
pushf
sbb
push
adc
pushl
xchg
sub
scas
cltd
aaa
sbb
aaa
dec
sub
adc
mov
inc
mov
cmpb
jns
xlat
xor
sub
pop
and
dec
inc
cmpsb
mov
ds
jnp
js
roll
nop
push
mov
lcall
decl
sbb
add
jns
aaa
aad
shll
pop
cmp
icebp
mov
jb
imul
outsl
icebp
pop
into
dec
adc
adc
arpl
imul
sar
incl
orl
push
pop
jp
pushf
dec
enter
adc
pushl
mov
popa
xchg
inc
mov
cmp
or
push
push
push
jno
jg
jmp
sahf
mov
adc
push
pop
dec
js
pop
pop
sub
inc
sub
bound
mov
aaa
mov
pop
inc
mov
pop
xor
loopne
js
add
test
mov
sbb
sbb
cld
jnp
insb
mov
cmp
mov
out
lods
orl
sub
call
add
xor
scas
dec
xor
mov
and
cmp
or
xchg
imul
mov
mov
rcr
cmc
mov
sbb
sub
test
push
lret
loope
call
xchg
mov
rorl
mov
mov
lcall
mov
sbbb
and
xor
jle
cmp
jg
push
ret
sub
adc
inc
arpl
pop
scas
lods
cmp
mov
addl
lcall
xor
idiv
push
jmp
scas
stos
sahf
sub
jp
sar
sub
stos
std
ljmp
cli
cmp
int3
fwait
fs
mov
rcr
mov
sbb
add
and
out
mov
nop
push
or
hlt
sti
aas
popf
push
inc
add
cmp
ljmp
mov
fst
out
fistl
mov
fidivl
push
jle
ljmp
xor
lcall
cwtl
pop
sti
mov
mov
or
cmp
xor
cmp
lea
dec
scas
js
sbb
adc
mov
mov
ljmp
mov
cs
aas
or
sbb
adc
xor
add
sub
aaa
xchg
xorb
push
or
sub
fcomip
enter
int
notl
cs
mov
sub
push
pop
push
in
stos
push
das
fdivl
or
ds
mov
xor
xlat
sub
jmp
xchg
jae
std
push
add
and
jle
movsl
imul
push
xchg
cmpb
adc
cmp
aas
pop
push
outsb
sbb
cmp
dec
jo
fnstenv
jmp
or
or
or
cmp
idivb
xor
or
mov
xor
pop
and
enter
aaa
cld
sub
out
das
mov
loop
jecxz
loop
or
mov
int
add
mov
ljmp
in
mov
mov
pop
aaa
inc
dec
adc
stos
add
mov
ljmp
int3
mov
int3
cmp
jge
ds
imul
cmp
dec
or
adc
and
imul
mov
mov
xchg
or
xor
lcall
mov
mov
adc
xor
add
xchg
ja
clc
insl
rorl
mov
add
int3
sahf
mov
loopne
or
jle
aas
xor
in
cs
js
sar
andb
mov
fnstcw
ljmp
inc
test
call
aad
push
xor
inc
aad
pop
add
cmp
mov
mov
mov
or
cli
call
js
xor
fwait
ds
mov
or
add
jg
insb
outsb
and
ret
cmp
mov
mov
loop
add
mov
push
lret
sub
enter
cld
cld
adc
lds
and
test
out
jns
and
ds
rcr
rorl
sti
ljmp
bnd
adc
dec
pop
out
das
dec
or
popa
xchg
mov
ljmp
jle
jmp
nop
shl
incl
xor
in
negl
test
xchg
mov
mov
cmp
xchg
add
cmp
cmp
aas
dec
and
fdivrl
pushl
divl
in
or
div
pop
pop
inc
sahf
push
out
mov
pushl
dec
pop
test
test
icebp
es
mov
jae
mov
mov
call
jmp
fs
cld
in
add
sub
mov
dec
arpl
jmp
sub
sub
imul
xor
repnz
stos
in
lea
dec
jne
hlt
call
cmp
leave
push
in
test
dec
int3
lcall
push
in
push
pop
mov
cmpsl
and
sub
pop
lea
and
add
inc
ljmp
pushl
stc
std
pop
mov
lods
mov
leave
fs
inc
xor
fstpl
mov
lock
call
adc
sbb
pushf
insl
outsb
pop
in
mov
dec
sub
orl
pushf
les
inc
imul
cmp
dec
ljmp
ss
jo
pop
mov
popf
mov
outsl
lahf
sub
out
imul
mov
xor
mov
adc
jo
cmp
cs
xor
inc
or
cmp
cmp
cmpsb
incl
xor
and
lret
and
adc
push
sbb
mov
jp
hlt
lcall
adc
xor
xchg
add
jmp
push
fcoms
adc
adc
jne
sub
add
mov
and
data16
lahf
aas
dec
mov
popf
push
jns
in
sub
inc
sahf
dec
into
lret
ret
push
cld
call
js
xchg
sti
pop
pushf
adc
adc
inc
sar
outsl
mov
bound
pop
add
ss
xchg
outsb
dec
or
jmp
adc
fcomip
mov
inc
in
push
jmp
scas
jb
cmp
sub
cmc
jg
sbb
lcall
sbb
lea
and
xchg
or
filds
std
jmp
lea
pop
das
add
out
sbb
xchg
incl
int3
idivb
or
pop
popf
jns
scas
pop
xor
cld
xchg
cmpsb
jns
cld
in
pushl
pushf
test
cs
or
iret
adc
jne
xor
mov
push
scas
lds
xchg
fs
add
add
pop
mov
xor
xchg
cltd
mov
fs
pop
jg
push
jmp
xlat
sbb
cltd
jecxz
xchg
adc
or
mov
jecxz
mov
aad
jnp
jl
adc
movsb
jo
sub
stc
loopne
ss
cmp
out
std
pushl
fsubrl
cmp
cmp
adc
out
and
xor
notl
fwait
jle
divb
imul
aaa
or
and
push
mov
xor
sub
lds
aas
mov
jns
loopne
mov
aad
xlat
mov
popf
sbb
int
xchg
or
cli
mov
andl
jno
xchg
sub
pop
jecxz
out
fmuls
cmp
rcr
push
data16
mov
push
sti
sbb
mov
push
cmp
fistps
xchg
xchg
sub
mov
pop
adc
push
loope
popf
test
adc
mov
fwait
pushl
aaa
std
test
jns,pn
xor
test
cmp
idiv
jg
pushl
sbb
adc
xor
jl
out
jnp
das
aas
sub
in
pop
sub
mov
xor
pop
push
inc
or
push
mov
push
or
mov
add
push
mov
ja
jbe
ds
mov
and
pushl
sbb
push
or
fldenv
addr16
cmp
bound
cmpsl
xchg
add
xchg
testb
lcall
lahf
xchg
cwtl
mov
in
ss
push
es
pop
add
fcoml
lcall
aaa
and
xchg
mov
push
inc
cmp
mov
sarl
or
ja
or
and
jle
hlt
or
insb
push
mov
test
mov
dec
mov
ljmp
adc
insl
or
add
leave
pop
cmp
adc
cmp
pop
xor
mov
sbb
jl
or
decl
xor
xchg
adc
xor
sti
push
std
decl
xchg
jmp
xlat
loope
or
mov
mov
sub
jg
mov
mov
sbb
mov
pushl
fs
xor
xchg
mov
and
adc
inc
jg
sbb
hlt
hlt
outsb
adc
inc
sbb
cmp
pop
pop
lock
mov
jb
xor
push
xor
sub
cwtl
cltd
jle
sub
fnsave
pop
filds
repnz
daa
cmp
mov
mov
stc
sar
jmp
cs
cmpsl
jb
aad
mov
cmp
movsb
xchg
roll
test
cmp
and
insb
rcll
pushf
and
cmc
inc
add
sbb
sbb
sahf
mov
ljmp
lcall
pop
and
push
adc
fmull
stos
scas
ljmp
aad
lret
xchg
in
aad
cmp
xchg
mov
lds
inc
xor
mov
cld
push
iret
cli
pop
mov
push
sub
enter
xchg
mov
lahf
add
add
incl
cmpsl
push
lods
movsb
push
decb
sbb
test
adc
in
cmp
rclb
dec
call
clc
in
lods
or
mov
jp
or
call
shlb
or
dec
or
shlb
or
xor
icebp
jmp
sub
sbb
popa
inc
jae
pop
ret
std
inc
cmp
aaa
rcrl
mov
int3
aas
mov
dec
mov
popf
xchg
loopne
out
inc
inc
sbb
adc
lcall
dec
dec
or
ds
arpl
inc
test
and
nop
jle
je
movsl
stos
push
mov
cmp
call
lret
pop
cmp
push
add
and
mov
mov
std
xor
cltd
mov
fisttps
pop
scas
xchg
rcr
xor
mov
mov
mov
sbb
adc
push
mov
dec
xlat
js
xor
lahf
call
cld
adc
pushl
cmp
nop
or
hlt
xlat
pop
js
jbe
pop
daa
sub
lcall
sbb
js
mov
lahf
addb
sub
mov
es
pushl
mov
xor
minps
xchg
mov
push
hlt
incl
bound
mov
sub
nop
mov
incl
cld
das
xor
sahf
sbb
pop
jecxz
mov
mov
lret
push
clc
sbb
jne
fidivrs
pop
mov
bound
inc
fwait
sub
cwtl
repnz
js
repnz
adc
xchg
cld
push
mov
mov
lea
inc
dec
xor
std
pushl
lods
push
test
pop
mov
repz
call
add
sbb
cmp
jg
mov
xor
mov
push
push
in
inc
or
cli
ljmp
push
pop
hlt
or
dec
ret
out
sub
or
adc
cmc
out
ret
repnz
push
push
add
mov
aas
call
out
or
pop
pop
mov
mul
in
adc
pusha
mov
pop
ljmp
mov
clc
add
arpl
in
mov
pop
lahf
xor
jb
pusha
inc
call
das
xchg
int3
mov
leave
leave
xor
ljmp
sbb
dec
loopne
comiss
adc
adc
stc
jg
sbbb
cmp
sub
adc
lods
lcall
inc
sbbb
pushf
mov
std
or
fiaddl
push
xchg
add
ss
daa
testl
jecxz
out
sub
nop
mov
aas
fisttpll
cmp
sub
fisttps
mov
mov
shlb
mov
test
mov
lcall
icebp
adc
inc
shll
or
sahf
and
jbe
js
mov
rcrb
jmp
push
mov
xor
xchg
mov
icebp
sub
mov
push
xchg
or
fadds
add
mov
and
lcall
shlb
xor
push
inc
sub
inc
outsl
or
sub
decl
fcoms
jge
sub
dec
test
mov
pop
or
inc
pop
bsf
out
or
push
xchg
out
and
pushl
fucomip
jmp
xor
push
shrd
sbb
scas
mov
cmp
pop
inc
fisttps
sub
stos
mov
mov
mov
mov
cmp
inc
jno
test
cmp
add
ficomps
jg
mov
mov
push
mov
xchg
ljmp
pop
adc
mov
out
cmp
jns
jmp
xor
cs
sub
pop
push
push
mov
decl
cmp
lret
ret
fbstp
cld
scas
leave
pop
testl
ss
call
ds
jae
loopne
ret
add
ficoml
mov
mov
mov
mov
rcrl
testb
cli
fbstp
xor
add
cwtl
xor
adc
out
push
jmp
movsl
jge
mov
std
test
mov
add
lahf
testb
jp
sbb
inc
lar
push
les
push
pop
mov
repz
incl
repz
popa
nop
sahf
lods
stc
fsub
xor
lock
inc
lcall
decl
js,pn
add
and
into
mov
sub
dec
mov
mov
out
pop
cwtl
movsl
insl
mov
inc
push
rorb
ljmp
das
cli
lahf
aad
inc
mov
xor
mov
ja
popf
int3
jle
jns
int3
adc
js
sub
lcall
mov
and
movsl
lret
add
cli
adc
aad
shl
sub
sbb
ds
decl
repnz
insb
and
sbb
push
imul
stos
mov
jecxz
outsb
std
mov
push
scas
divb
jecxz
cmpsl
mov
pop
icebp
pop
mov
lock
xchg
nop
adc
ret
sub
clc
lcall
adc
xchg
xor
sub
lock
test
ja
jnp
in
add
aaa
lods
daa
pop
cmp
sarl
or
lods
xor
xchg
jbe
jg
sbb
xchg
cmp
cmp
std
and
xchg
shrl
cmp
adc
push
or
and
decl
sub
or
or
add
popf
cmp
adc
out
shr
decl
aad
lea
cmpsl
xor
sub
sbb
xlat
in
into
add
or
inc
sbb
sbb
cmp
fbstp
push
pop
jno
jl
add
aaa
cmpsl
xor
dec
out
jno
ds
call
fdivl
and
push
fnstcw
enter
test
and
push
and
and
iret
xchg
test
mov
scas
sbb
xor
call
cmp
enter
shll
xorb
mov
add
mov
andl
jge
mov
sub
inc
and
lcall
mov
movsb
pop
cmp
dec
or
pop
mov
jge
ret
adc
cld
fsub
in
aam
lahf
sbb
cs
les
xor
stc
pushf
maxps
adc
pushf
xor
call
adc
push
stos
int3
cwtl
jno
and
lcall
out
fimuls
rorb
pushl
push
adc
loope
icebp
xchg
xorb
cwtl
cwtl
clc
lcall
cmp
ljmp
pop
leave
push
scas
jbe
and
int
xchg
add
push
dec
subb
std
call
mov
xor
mov
pusha
lea
xor
popf
mov
add
aas
daa
push
idiv
dec
shrl
mov
dec
or
jbe
cmpsb
add
lock
jmp
leave
xor
leave
pop
movsb
cmpsb
outsl
test
dec
repnz
lock
inc
insl
push
push
dec
or
dec
pop
and
jp
outsl
cld
sbb
js
dec
xchg
in
or
jg
xorb
sbb
add
aas
in
inc
mov
mov
jnp
xor
xor
clc
fcoml
jge
and
pop
dec
bound
cmp
or
outsl
jo
push
pop
jb
iret
repnz
fwait
lcall
insl
sbb
mov
dec
arpl
xor
inc
sub
mov
das
cli
jmp
les
push
lods
aaa
inc
test
add
sbb
out
add
roll
xor
jp
aas
flds
or
mov
push
iret
xor
dec
sub
jle
xor
aas
cli
aas
adc
pushf
and
imul
jno
cmp
rcll
decl
sub
adc
insb
outsw
mov
jg
mov
aas
sub
inc
jno
sub
mov
loop
jl
hlt
call
pop
out
add
jle
inc
gs
sahf
pop
pushf
shll
push
rol
and
divb
push
insb
aaa
in
inc
dec
sbb
incl
mov
cs
and
push
outsb
inc
mov
xchg
pop
jb
pop
hlt
pushl
inc
dec
lods
push
jno
cmp
adc
ljmp
cwtl
add
inc
push
pop
jae
xor
std
cmp
jg
dec
add
jp
lods
sub
test
bound
pop
stos
sahf
jmp
fcomip
sub
cmp
or
dec
xchg
ss
jg
enter
mov
or
mov
pop
sub
jg
adc
mov
addl
das
cmp
or
pop
lcall
cltd
inc
mov
and
nopl
ds
jmp
or
lea
jnp
add
xor
ja
sub
inc
outsl
xchg
or
push
fwait
push
pop
cmp
pushl
or
xchg
icebp
les
mov
fdivr
hlt
in
stos
push
je
sar
xor
sub
mov
jmp
xchg
stos
inc
ljmp
cwtl
jb
test
fdivrp
loop
subl
call
bound
or
aas
clc
cmp
adc
jnp
mov
adcb
adc
mov
repz
cli
aas
cmp
ljmp
sahf
fsubrs
in
out
inc
xchg
xor
fadds
and
aam
adc
ljmp
lret
xchg
mov
idivl
pop
push
push
ja
clc
pushl
scas
mov
push
lcall
mov
xchg
sub
cld
scas
incl
dec
pop
inc
js
mov
imul
pop
hlt
lahf
sub
cmp
xchg
scas
push
sub
mov
scas
push
ds
faddp
enter
call
inc
mov
or
xor
rorl
add
ret
cmp
or
mov
mov
push
jmp
sub
fs
insl
xor
iret
mov
adc
sub
or
ljmp
clc
mov
bound
cmp
mov
enter
dec
xor
sarb
shrb
push
push
push
repnz
fbld
cmp
xor
jl
sub
pop
dec
pushf
rcrl
lret
in
in
cmp
inc
flds
incl
jno
dec
fs
sti
int
xor
ljmp
adc
xor
sbb
lock
sub
inc
add
sub
cld
aaa
aaa
fs
insb
fbstp
das
mov
cld
pop
add
popl
or
sbb
xor
popa
jb
push
xor
jmp
popl
xor
enter
jge
repnz
push
test
xchg
aas
mov
test
movsl
mov
out
push
adc
andb
in
clc
or
aaa
std
das
cmc
xorl
mov
mov
adc
jmp
jmp
scas
pop
cmp
scas
sub
push
cmp
pop
adc
ds
jle
mov
mov
rol
jno
and
pop
sbb
rolb
jnp
ljmp
scas
pop
aam
ljmp
test
sub
cld
mov
clc
arpl
jb
dec
push
test
add
dec
imul
or
mov
stos
sbb
in
xor
pop
testl
call
xor
jo
pop
hlt
sbb
aad
cmp
jg
lock
push
or
push
adc
xor
push
std
jle
daa
pop
mov
cmp
mov
inc
mov
psraw
adc
ffreep
and
aas
aad
or
lret
mov
scas
add
cmpsb
lret
cmp
jl
push
or
mov
mov
sarb
lahf
lea
pop
ds
or
out
or
cld
incl
lea
mov
inc
aaa
sbb
jbe
daa
fcomps
enter
and
mov
adc
addb
sub
lock
add
and
adc
fwait
popf
sub
add
movsb
xchg
popf
shlb
ficoml
subb
decl
stos
mov
inc
sti
pop
ds
jp
sub
fsubl
mov
movsb
mov
inc
mov
incl
mov
mov
nop
sbb
test
ljmp
lods
cmpsb
cmpsl
or
inc
lcall
test
fistpll
aas
pushf
dec
adc
jge
jg
call
xor
lods
mov
mov
xchg
or
xor
cmp
cmpsb
adc
sbb
out
cli
or
js
out
inc
in
sarl
out
stos
lea
dec
pop
dec
decl
sar
in
cmp
lcall
add
dec
or
sbb
test
cmpsb
mov
adc
mov
pusha
sbb
pop
add
push
xor
test
cmpsl
fdivrl
add
sub
pop
sub
xchg
stc
ja
xchg
inc
sbb
jg
fdivrl
sahf
jge
mov
in
les
jo
push
nop
sub
jno
jbe
jecxz
decl
or
push
add
inc
lcall
aas
sarb
cmp
adc
sbb
cmp
rcrb
push
std
xchg
inc
cli
adc
pusha
bound
lcall
mov
sub
shll
and
mov
sar
mov
mov
imul
mov
push
xchg
movsb
adc
shll
and
sbb
fists
add
bound
lea
test
stos
and
std
xor
mov
in
or
ljmp
xchg
mov
jo
cmp
fsubrs
and
daa
andl
aaa
cld
pushl
push
call
mov
sbb
mov
fisttpl
xchg
or
sub
das
pushf
decl
or
call
mull
sbb
shl
add
aaa
std
sbb
push
mov
mov
mov
jg
fmull
lea
inc
inc
xorb
sbb
in
adc
int
adc
xor
pushf
in
test
pop
fadd
or
mov
sub
pop
fcomip
mov
add
sbb
out
ljmp
insb
adcb
cmp
ficomps
cmp
incl
sub
sbb
xchg
lcall
xor
mov
push
and
js
jae
cs
stos
or
incl
nop
jnp
ljmp
scas
lahf
cmp
fsubrs
incl
cli
sbb
add
clc
frstor
sub
xor
sbb
pop
adc
in
cwtl
sti
ret
dec
mov
decl
xor
insb
cmp
decb
fidivs
sub
nop
xor
scas
inc
mov
idivb
or
neg
xor
push
fcomps
into
xchg
fs
ljmp
shlb
xchg
push
inc
mov
xor
mov
cmp
call
add
xor
fidivl
pop
add
pop
pop
xchg
pop
jmp
inc
repz
bound
fwait
dec
and
cmc
ja
jl
mov
cmpsl
pop
stos
cwtl
repnz
js
mov
fisttps
mov
xor
sbb
repnz
fstps
orb
dec
xlat
rcrl
jl
out
stos
mov
mov
sbb
lea
fisubrs
ja
iret
test
ds
mov
inc
dec
sar
xor
aas
addb
out
dec
lds
add
and
ror
sub
add
out
and
loopne
xor
mov
repz
clc
and
clc
dec
sbb
inc
jb
push
cmp
sbb
repz
enter
adc
xchg
jmp
jg
pop
inc
scas
sbb
or
pop
xchg
je
xchg
sbb
testl
fnstcw
jno
adc
and
outsl
jns
and
cmp
das
mov
ds
push
jo
daa
arpl
rclb
int3
daa
insl
jle
dec
mov
pushf
pop
gs
sar
aas
adc
lds
push
lcall
push
cld
cmpsb
sub
mov
push
insl
add
mov
imul
push
pushf
rcrl
adc
out
iret
sub
xchg
sub
mov
addr16
add
mov
push
push
dec
xchg
into
xor
std
out
push
cwtl
inc
bnd
jns
xchg
mov
fbstp
inc
sbbb
mov
mov
jg
pushl
inc
nop
mov
sbb
rcrl
ds
lods
pavgb
js
xor
xor
fwait
std
call
mov
jbe
mov
jbe
mov
adc
sbb
mov
leave
js
dec
push
scas
sbb
call
pushl
or
jmp
sub
mov
cmc
lods
aaa
mov
lcall
sbb
xor
iret
push
sbb
fs
into
sub
lock
push
mov
aaa
incb
loopne
cmp
pusha
xor
into
fdivrs
lret
add
add
testb
mov
lock
adc
aas
cmpb
pop
push
rcrl
xchg
push
adc
lock
or
imul
mov
bound
iret
xor
dec
clc
call
dec
inc
pop
flds
mov
scas
pop
inc
or
lret
lods
sahf
lret
and
test
clc
push
cli
pushf
xchg
mov
jo
loope
dec
xor
lcall
mov
lock
out
add
sbb
ds
xchg
and
mov
or
push
fcmovnb
sbb
or
jg
mov
mov
mov
cli
or
std
mov
sbb
mov
mov
or
lock
mov
rcl
adc
jecxz
xchg
ss
sub
pop
and
scas
cwtl
push
cmpsl
mov
pushl
hlt
aad
push
bound
xchg
or
in
pop
fcomi
push
xchg
cld
fbld
mov
inc
adc
xor
jnp
cmp
maxps
lock
das
repnz
insb
push
sti
adc
sbb
mov
mov
lcall
int
mov
cmp
dec
jo
pop
adc
leave
mov
mov
lcall
shlb
push
std
sub
mov
hlt
mov
pop
fwait
hlt
jb
fimuls
iret
frndint
movsl
mov
inc
jnp
aad
xchg
dec
aam
std
decl
daa
mov
mov
in
shr
adc
call
xor
data16
cvtpi2ps
jmp
stos
cli
sbb
dec
sbb
or
dec
lock
xor
jae
xor
hlt
xchg
xchg
cwtl
outsb
xlat
push
and
dec
out
or
jmp
fcmovb
cmp
test
push
xchg
jp
jbe
cmp
fmuls
aas
xor
mov
cmp
or
xchg
in
stos
pop
pop
jg
incl
push
adc
inc
outsl
adc
mov
ret
rorb
call
les
xchg
lock
xor
cmp
or
mov
jne
pop
data16
cmp
insl
cmp
bound
popf
dec
fld
xchg
lea
int3
push
xchg
es
insb
pop
rcll
or
aas
imul
adc
xor
fs
cs
ljmp
adc
push
pop
fcmovbe
je
loopne
lret
sahf
es
pop
pop
inc
sbb
das
aas
mov
iret
stc
jno
adcl
pushl
std
adc
mov
mov
arpl
gs
xchg
into
das
sub
ljmp
sbb
testb
orb
test
mov
pop
popf
das
mov
and
fsub
cli
outsb
int3
mov
das
push
andb
leave
pop
cmpl
call
adcl
orl
sarl
or
das
cli
ja
push
push
push
mov
scas
xorl
call
decl
adc
cltd
sbb
mov
js
sub
mov
sub
xchg
clc
jmp
push
fisttps
adc
jno
push
add
lret
jns
mov
filds
mov
repnz
or
mov
mov
icebp
sbb
dec
or
iret
call
add
cmp
pop
push
cmc
sub
imul
mov
ljmp
gs
in
lea
aas
movsb
jno
shl
inc
or
add
xor
pop
jae
ja
inc
sub
in
insb
jo
xchg
dec
push
sub
jg
or
pop
pushf
sbb
enter
nop
cli
incl
jmp
stos
mov
mov
jnp
jmp
mov
cmp
aaa
ret
or
lahf
mov
xlat
cmp
mov
aas
push
mov
mov
repnz
cmp
pop
or
dec
jmp
jmp
sbbl
pop
fsubs
mov
int
sub
sub
xchg
or
cmp
push
in
xlat
scas
push
cli
sar
xor
cmpsb
mov
pop
jle
pushf
sahf
icebp
adc
mov
out
xchg
loope
xchg
jmp
xchg
outsl
call
ss
cmp
in
adc
addr16
scas
cmpb
loopne
or
and
inc
sbbl
sbb
jg
xor
in
ret
dec
push
inc
dec
je
push
cmc
out
and
mov
cli
int3
push
and
fdivrs
or
sbb
xor
push
jmp
repz
je
lret
or
loop
fdivp
push
adc
mov
fldl
pop
adc
lcall
cmpsb
je,pt
ds
decl
movb
incl
int
push
aam
stc
fisubs
je
in
pop
adc
mov
ljmp
inc
push
jne
inc
icebp
stc
ss
iret
popa
push
in
rcr
lcall
dec
dec
fistpl
ja
jne
jp
inc
push
int3
shlb
push
jns
jo
sahf
into
cmp
call
pushf
out
inc
int3
pop
or
lds
repnz
push
mov
or
subb
mov
imul
xor
sbb
push
sbb
stos
loope
mov
inc
jmp
cmp
xor
xor
fistpll
dec
mov
and
xlat
movsl
loopne
xchg
rcl
aad
push
mov
sti
jns
jl
jmp
jmp
mov
pop
cmpsl
fs
ficompl
lods
test
lock
aad
imul
dec
sub
cmp
add
ret
fninit
lret
fistpl
add
decl
xchg
std
fisttpl
xor
lret
iret
lcall
dec
push
mov
mov
pop
test
jl
ds
jne
xlat
in
push
sub
aam
in
pushl
add
testl
cmc
int
jge
inc
adc
dec
push
pop
lcall
jmp
in
and
orl
inc
add
mov
scas
arpl
fcoms
push
daa
call
jg
outsl
cmp
pusha
dec
jno
popa
inc
int3
ficoms
std
test
std
imul
mov
addb
jle
lret
loop
dec
cs
enter
loopne
pop
aas
pop
ret
and
ljmp
psubusb
ljmp
inc
pusha
insl
push
or
out
fstpl
push
cmp
sub
pushf
pop
daa
or
adc
loope
xor
cmpsb
jnp
insl
xorl
clc
pop
adc
clc
or
mov
sub
and
pushl
or
fsubs
inc
sbb
push
call
bound
cmp
jmp
movsl
and
adc
das
or
out
rol
sbb
aaa
outsb
das
das
cs
icebp
adc
and
jmp
ljmp
push
cmp
pop
pop
aas
imul
mov
push
sub
aaa
or
sbb
jb
cmp
punpckhdq
jecxz
adc
dec
push
jb
int
lock
fdivp
jb
rclb
repnz
add
sar
sub
add
fimuls
cwtl
push
push
mov
mov
sbb
dec
push
fdivs
fbstp
adc
mov
add
dec
pop
inc
mov
ljmp
nop
shrb
sub
and
or
scas
add
adc
inc
add
or
decl
cmc
sti
or
out
mov
daa
pop
and
push
and
sbb
movsb
and
lods
xchg
prefetchwt1
or
pop
inc
aad
cmp
das
push
mov
adc
pop
out
sahf
or
mov
xor
push
jl
mov
data16
int3
mov
sti
fsubrl
test
cmc
dec
sub
inc
dec
inc
out
loopne
std
jg
cmp
xor
sub
fiadds
data16
icebp
insb
decl
test
test
xor
lret
jecxz
js
pop
inc
stos
inc
std
add
loopne
out
jl
das
aam
push
cmp
enter
xor
out
push
in
xchg
xchg
aas
outsb
push
cs
mov
dec
sub
cli
imul
push
pop
push
or
jmp
push
stos
idiv
icebp
arpl
mov
or
push
or
pop
cwtl
push
jl
fadd
push
arpl
xor
hlt
sar
ljmp
jmp
sbb
pop
dec
mov
mov
sbb
in
adc
out
cli
mov
ds
inc
ss
lods
in
roll
sub
lcall
adc
xor
adc
sbb
loope
adc
inc
das
cmpsl
lea
jns
int
cmp
loopne
pushl
sahf
push
cmp
sbb
mov
mov
jg
pushl
adc
outsl
neg
dec
cmp
jp
ljmp
add
dec
loopne
xor
and
jns
pop
and
repnz
fdivl
jg
mov
push
or
pop
push
mov
bnd
bound
decl
jl
mov
insl
cmp
bound
cwtl
inc
cmpsb
inc
lock
jmp
testb
int3
fisubl
gs
adc
inc
xlat
xor
sbb
pushl
mov
push
adc
pop
sub
jmp
hlt
mov
jno
xor
notb
sub
jb
push
stc
or
pop
xor
add
xchg
lcall
lock
dec
inc
jp
ja
dec
push
xchg
std
push
xchg
lock
jne
sub
xor
adc
or
ljmp
fwait
adc
test
jmp
and
fs
dec
stos
or
sbb
outsl
lods
jmp
push
scas
pop
fsubrs
sbb
incl
inc
sub
mov
aaa
fiaddl
std
add
push
arpl
cmp
push
repnz
cmp
out
out
add
dec
cmc
cmp
inc
push
insb
dec
push
cld
decl
rcl
mov
xor
outsb
sub
cld
inc
bound
push
mov
pop
lock
insl
fmuls
into
sub
imul
or
pop
shll
ret
cmp
fcom
repz
adc
pop
std
rclb
imul
stos
rorb
push
aam
cmpsl
out
incl
ret
jp
mov
inc
movsb
imul
jp
xor
pop
sbb
andb
or
cmpl
sbb
sbb
arpl
pushl
jg
stc
sub
pop
and
sub
sbb
lock
add
out
pop
js
int
pop
inc
add
dec
adc
push
int3
clc
ja
es
cmpsl
or
rol
data16
jmp
fwait
mov
mov
fnstenv
adc
into
jge
loopne
lock
fwait
call
xor
sbb
or
fmul
sahf
out
inc
lds
mov
dec
add
mov
jg
decl
dec
fs
in
inc
bound
sbb
insl
dec
lcall
add
inc
jp
incl
jno
fmuls
xor
icebp
or
push
fisttps
cmc
int
arpl
pop
fwait
cs
ret
stos
sub
loopne
outsl
nop
jnp
std
jo
xchg
or
sbb
adc
lock
and
movsl
and
mov
daa
push
xor
jmp
add
fisttpl
lcall
shrb
jg
mov
xchg
lcall
pusha
ret
xor
or
push
push
push
mov
fidivrs
sbb
mov
shlb
sbb
push
and
mov
pushl
xchg
sbb
push
out
cs
pop
xor
leave
out
jmp
sbb
or
idiv
xor
cmp
sub
cmp
fbstp
jo
ljmp
cld
push
test
fistpl
faddl
sub
pop
xor
sbb
cmp
icebp
cmp
mov
popaw
xor
incl
subl
xor
jge
cld
lds
and
sub
iret
cmp
cmp
dec
mov
adc
das
sbb
add
hlt
add
mov
xchg
out
stos
jg
add
pop
mov
repz
out
add
jmp
xchg
jmp
mov
and
daa
iret
xlat
leave
fnstsw
mov
in
xor
out
out
sarl
inc
adc
loope
or
stos
call
adc
dec
lcall
js
jb
mov
js
jl
popf
lods
ret
iret
push
ficoms
push
cld
lcall
xchg
sti
out
lcall
insb
xor
inc
sub
std
int
pop
mov
pop
jb
push
sub
outsl
add
fwait
idivb
ficoml
push
ja
pusha
clc
popf
lds
push
and
hlt
incl
in
sbb
scas
ficoms
adcb
jp
sbb
call
mov
out
fcmove
sti
ljmp
sub
in
aam
cltd
and
call
lahf
ljmp
loope
enter
pop
pop
mov
inc
cmc
jmp
mov
rcrb
js
dec
mov
fsubs
and
aaa
inc
stos
or
sbbl
push
rcrl
mov
pop
test
imul
out
das
sar
inc
push
call
adc
fcomi
sti
sbb
cmpsb
enter
mov
js
jmp
fadd
filds
jl
xor
repz
xor
ret
mov
imul
cld
add
cmp
mov
cli
fwait
pop
repz
inc
cmp
sbb
pop
std
lcall
imul
ret
stc
sbb
imul
or
fucompp
iret
mov
and
lcall
xchg
sbbl
cwtl
jecxz
mov
test
jnp
xlat
xchg
into
xchg
mov
cmc
ret
mov
pushf
cmpsl
mov
cld
xor
es
fsub
negb
cltd
test
add
in
push
fsubrs
mov
das
int
ret
add
outsb
clc
out
aam
loopne
in
xor
pop
xlat
adc
mov
insl
loope
add
jo
jmp
int
cmc
adc
sub
clc
enter
xlat
scas
clc
lcall
loop
shlb
sbb
repnz
lcall
xor
loope
sbb
clc
cwtl
in
fidivrl
xchg
pop
out
inc
enter
add
out
das
jmp
pop
adc
cltd
fdivrs
and
xchg
xor
and
pushl
push
subb
sbb
ds
ficoml
cmp
aam
cli
aam
sub
xchg
jae
icebp
mov
pand
repnz
lods
cmp
mov
pop
mov
push
incl
mov
adc
movsl
push
mov
js
push
pop
iret
loopne
fcomip
mov
popf
fmul
mov
pop
stos
fmulp
enter
mov
pop
icebp
jg
and
lret
push
clc
add
andb
lret
fwait
mov
dec
push
sub
cs
aad
mov
repz
jnp,pt
cmc
push
fsubr
push
jbe
mov
imul
dec
jmp
jns
fwait
clc
xor
arpl
not
enter
push
add
shrb
adcb
divl
cld
lods
stc
leave
aas
inc
xchg
sbb
aad
mov
jge
mov
mov
mov
in
in
iret
sub
xor
mov
gs
mov
call
cli
movsl
jecxz
fadds
pusha
ja
pop
ret
adc
aad
ret
int3
out
call
jg
call
out
mov
pop
mov
add
in
cwtl
adc
push
jecxz
int3
rorb
call
arpl
lcall
jbe
outsl
cli
scas
rolb
loopne
and
into
cs
adc
xchg
enter
jmp
ljmp
xlat
rolb
cmp
sub
jno
aas
xchg
js
jg
shl
orb
clc
pop
sbb
das
outsb
lret
sti
or
mov
sar
adc
into
mov
jmp
sbb
jmp
push
out
in
cmpsl
mov
mov
decl
sub
paddq
push
mov
hlt
pop
dec
aas
xchg
rclb
cld
out
clc
call
js
or
push
mov
aaa
sbb
aaa
int3
mov
fbld
add
ja
inc
lret
out
loopne
jge
and
mov
stc
sub
dec
and
mov
ss
cli
add
std
dec
mov
mov
adc
imul
int
mov
jmp
in
mov
out
cmpsl
cld
or
fsubrp
fcomp
repz
push
xor
not
push
push
pop
daa
call
or
movsb
lret
out
ret
repnz
xchg
xchg
mov
in
cmp
pop
lock
sbb
out
ss
sti
popf
in
call
jge
push
aam
xorb
mov
ret
or
cs
lea
in
pop
cmpsb
std
ljmp
hlt
in
push
push
dec
sub
iret
into
in
push
dec
jge
fcomip
pop
lret
xor
fcmovbe
and
int3
sbb
lds
sub
imul
adc
jg
in
and
pop
test
xchg
loop
or
inc
add
stc
sbb
lcall
jmp
fadd
jl
push
pop
test
sub
mov
enter
inc
fcoms
decl
sbb
scas
sbb
aad
daa
sub
call
mov
fisubl
js
jg
mov
xor
aam
lret
adc
mov
fistps
or
imul
mov
in
xorb
idiv
or
and
sub
add
imul
int3
std
pop
jge
adc
xor
iret
add
loope
cli
decl
or
iret
add
cmp
out
int
mul
adc
subb
movb
cmp
adc
jg
inc
mov
jno
es
inc
mov
js
in
jp
push
sub
mov
sub
sbb
idiv
jg
cmp
loopne
adc
and
or
imul
jecxz
iret
lods
jg
fstpt
test
mov
aam
enter
cmp
repz
lds
aam
or
js
dec
lcall
outsl
aas
stc
lods
loope
loop
in
daa
xchg
ret
outsb
pop
mov
jecxz
jmp
gs
jmp
pop
xor
cmc
loope
test
pop
add
sahf
dec
sub
in
fsubs
icebp
ljmp
iret
or
push
push
inc
push
gs
in
sub
lcall
inc
adc
and
jp
js
out
out
loopne
mov
sar
jmp
jecxz
dec
loopne
lahf
push
popf
rol
rol
lret
repnz
or
lret
push
icebp
inc
ret
testb
jg
jo
ja
mov
in
lret
dec
mov
fdivp
int3
loopne
icebp
pop
bound
mov
rclb
movsb
push
mov
adc
outsl
lret
push
movsl
bound
inc
icebp
fidivrs
xchg
les
pop
mov
cli
xlat
iret
cli
sar
std
fistps
leave
rcr
jb
xorb
pushl
out
ljmp
std
or
push
into
iret
jg
inc
lcall
fcom
pop
aas
lods
mov
in
sar
dec
cli
insb
push
cmpsb
mov
rcr
insb
repnz
int3
cmp
loopne
loope
cs
cli
jns
call
mov
xor
mov
push
outsb
xlat
movsl
pop
jmp
outsb
outsb
test
xor
enter
stos
ret
push
fdivl
daa
insl
int
clc
xchg
adc
in
sub
test
xor
jno
sahf
mov
loop
in
fdivrp
lcall
sub
aam
das
loopne
dec
insb
popf
push
fsubrs
mul
lock
ljmp
cld
add
pop
popf
dec
xlat
inc
or
cli
push
pop
repz
push
pop
mov
add
jmp
jecxz
pop
call
cld
std
xchg
xor
clc
loopne
add
cmp
ja
sbb
mov
cld
dec
shll
xor
sub
mov
jns
ds
adc
addr16
cmp
ljmp
sti
ljmp
es
ljmp
mov
inc
in
in
mov
lcall
adc
sub
scas
lcall
lahf
cmp
mov
out
cld
outsb
mov
xor
mul
ret
push
mov
daa
sbbl
pop
lcall
lock
jecxz
jo
jo
xchg
jae
inc
repnz
out
add
xchg
pushl
adc
es
int
imul
cmpsb
idiv
fs
xchg
adc
add
lds
cmp
lock
js
sub
ljmp
jo
fstpt
imull
jb
lds
jp
aaa
test
sbbb
cs
outsl
jbe
hlt
js
pop
cli
xor
negb
mov
jae
ret
pushl
xor
test
and
clc
mov
jmp
iret
js
pop
xor
mov
push
dec
sti
xchg
jnp
jmp
out
inc
std
lods
pop
sti
xor
lds
mov
out
in
lret
fisubrl
pop
loopne
add
inc
dec
clc
cwtl
or
jmp
push
jnp
negb
fcmovbe
popa
lcall
xchg
repz
push
mov
test
or
into
aam
push
icebp
in
mov
cmp
sub
out
pop
xchg
sbb
das
add
sub
and
ljmp
push
aam
push
mov
fisttpl
nop
push
mov
inc
fistpll
scas
mov
mov
outsb
rcrb
shr
mov
fs
ljmp
push
mov
cltd
sub
das
push
cwtl
mov
lock
movsl
cwtl
mov
es
jg
push
clc
clc
leave
fsubl
fidivs
jbe
mov
cld
stos
push
xchg
jge
cld
cmp
push
lret
inc
mov
sub
push
jae
stos
es
cmpsb
mov
lret
jae
repnz
sbb
pop
fildll
jmp
nop
es
repz
cli
out
pop
lret
pop
sahf
push
jmp
adc
stos
cmp
lock
neg
adcb
push
mov
call
std
fs
rorl
mov
sbb
sar
lcall
add
ret
jle
mov
jecxz
lea
add
call
sub
jg
dec
pushf
adc
in
mov
inc
movsl
xor
mov
adc
mov
mov
jmp
adc
mov
popl
sti
lret
xor
enter
fbld
movsl
sbb
insl
pop
lcall
leave
xor
movsb
inc
mov
adc
sar
sbb
sub
and
xor
or
or
in
ja
jg
cmp
cmp
repnz
jmp
adc
in
ror
rorl
and
jb
out
mov
xchg
aas
test
aad
mov
pushl
cld
sti
lods
xor
sar
jbe
in
mov
out
jno
out
sub
xor
stos
push
mov
enter
adc
iret
mov
loope
jg
pop
gs
jg
fsubrs
jmp
jo
aaa
lcall
mov
push
lret
out
aad
popa
in
xorb
push
hlt
in
xchg
jl
xor
cld
iret
fdiv
icebp
mov
loopne
mov
out
dec
in
or
hlt
push
stos
outsl
lea
cmp
js
cs
rcrl
cmp
jmp
add
push
aad
jmp
loopne
jnp
xor
in
in
idivl
inc
mov
jg
jmp
cmp
xchg
lods
push
mov
out
into
mov
jb
addl
mov
push
sarb
std
cwtl
ljmp
pop
clc
ja
cmp
test
je
mov
ljmp
sbb
pop
mov
out
cli
mov
out
decl
out
cmp
lret
inc
cld
add
hlt
lock
mov
in
fs
dec
mov
call
mov
push
jmp
push
pop
enter
out
ljmp
sub
or
in
cld
movl
mov
ja
dec
sbb
mov
nop
rorl
icebp
decl
cmpsb
push
pop
mov
jno
adc
xchg
movsb
jae
or
jmp
and
and
enter
and
insl
fsubrs
decl
jle
es
in
jle
sub
adc
jmp
adcb
push
fdiv
aad
push
popf
pop
xorb
jg
or
dec
testb
lods
push
leave
out
push
xchg
add
aad
pop
jmp
sbb
rorb
out
xorb
outsl
inc
sti
fcomip
pop
mov
adcb
cli
loop
sub
sub
std
mov
iret
push
mov
xchg
jmp
and
pop
int3
mov
fcmovb
jmp
sti
insb
mov
in
movsl
outsb
les
lret
out
fsubrs
ja
clc
sbb
inc
js
push
lds
in
dec
mov
sbb
scas
leave
push
addr16
loope
adc
xor
lcall
in
dec
adc
repnz
pop
pusha
sbb
lods
xlat
mov
cltd
lret
jecxz
insl
inc
fbld
lahf
push
scas
fcomip
scas
rorb
imul
jmp
daa
dec
dec
push
push
ljmp
cli
call
ss
loopne
icebp
lds
and
jae
dec
mov
das
aam
neg
bound
dec
out
out
iret
out
ja
loopne
or
push
mov
cld
push
lock
xchg
incl
ljmp
subb
sbb
out
lods
xor
hlt
rorb
adc
rorb
push
mov
leave
xlat
mov
frstor
addr16
imul
sar
test
jge
pusha
vcvtsi2sdl
sub
enter
in
ljmp
js
cmpsb
xchg
in
add
lock
out
aas
ret
dec
dec
pop
fcomp
xchg
xor
iret
lret
scas
daa
lods
cld
jg
ljmp
out
push
cli
lret
daa
xchg
add
dec
rcrl
call
adc
jmp
mov
mov
adc
clc
test
adc
icebp
jbe
jp
fwait
inc
lock
mov
fucomp
dec
outsb
stc
mov
pop
leave
cmpsb
sbbl
jmp
cmp
lahf
mov
add
lcall
rorb
repnz
leave
xchg
imul
out
jp
jb
je
and
fbstp
mov
std
sub
mov
mov
std
decl
sbb
or
out
fadd
outsb
popf
js
or
sub
into
ret
cmp
incl
mov
loope
dec
lods
cmp
jle
mov
sti
inc
insb
xchg
inc
fadds
push
pop
mov
ret
mov
js
nop
cmp
mul
nop
es
sub
or
rorb
pop
fsubrl
lds
xor
inc
clc
lea
stos
shrl
cmpb
jnp
ret
outsl
clc
rorb
push
js
inc
filds
repnz
pop
sub
inc
mov
ljmp
pop
push
fucomi
lcall
leave
ret
xor
int
fsubp
and
rcrb
jae
and
push
adc
into
cmpsl
stc
jmp
popf
dec
enter
ljmp
repz
popa
repnz
jmp
outsb
dec
sbb
cmc
xlat
icebp
scas
and
out
decb
and
out
je
imul
outsl
fwait
sbb
mov
xchg
dec
hlt
push
in
aad
scas
or
lret
stos
out
es
enter
jno
imul
pop
aas
mov
outsb
adc
pop
mov
push
inc
loopne
or
pusha
outsl
fisttps
in
lds
aam
mov
out
cmpl
sub
enter
dec
sub
pop
movsb
and
or
rolb
and
push
fstps
out
notl
cmp
push
pop
jns
scas
cmc
lds
cmp
jmp
cmp
mov
incl
inc
jnp
clc
pop
mov
xor
insl
imul
stos
adc
push
and
ljmp
mov
fmul
aas
fcom
fs
sbb
xchg
out
fcom
lcall
out
mov
jle
out
rcrb
cli
lods
sbb
pop
ljmp
mov
icebp
clc
lret
xchg
aaa
or
std
jo
lods
sub
ret
sahf
imul
mov
rcrl
daa
test
cli
pushf
pop
andb
divl
lret
iret
lods
xchg
das
push
mov
aaa
mov
sbb
pxor
out
fstpl
pop
mov
iret
aaa
loopne
adc
and
lahf
ss
cmpsb
or
shll
sbb
and
fcmovnb
incl
addr16
mov
adc
out
pop
inc
rorl
sarl
jmp
mov
fdivr
pop
dec
mov
mov
jmp
sti
cmc
cmp
sub
icebp
dec
les
and
mov
repnz
and
push
lods
out
sahf
aad
or
and
ret
test
pop
fisttps
aas
das
out
lret
inc
xchg
lret
shlb
sbb
in
sub
ljmp
addr16
add
in
js
repnz
mov
mov
clc
iret
cld
jno
std
lahf
xor
or
fsubl
lcall
fcomip
ljmp
iret
shlb
cmpsl
cmp
std
push
push
cli
pop
in
es
sub
xchg
adc
enter
push
xchg
and
nop
or
fs
cltd
pop
incl
mov
push
ds
adc
sbb
test
dec
xlat
fcomip
xchg
xor
cmp
dec
mov
aas
jns
stc
call
cld
lds
fmull
stos
dec
cmpsb
loopne
sub
shlb
ror
fcmovbe
jae
icebp
mov
cld
rdpmc
xchg
jbe
cmc
and
fldt
jg
loope
jns
adc
out
mov
mov
lret
dec
into
dec
sar
xchg
enter
in
test
ja
jmp
or
rcr
cld
pop
sbb
fadds
sbb
jb
mov
fcoms
inc
mov
popf
push
out
mov
jae
sbb
fistpll
add
fists
jge
stc
scas
pop
mov
sub
sti
repz
xor
sbb
ljmp
les
ljmp
jns
lock
push
adc
inc
xchg
es
call
inc
lret
ja
dec
fisttpl
out
adc
pop
hlt
dec
mov
adc
das
cld
fsub
in
jne
mov
les
es
or
push
outsb
mov
clc
incl
xor
push
push
stc
jne
jns
sbb
cmc
clc
mov
jns
out
aam
ljmp
icebp
shrl
push
rcr
mov
rorb
and
cmpsb
and
repnz
jecxz
es
in
pusha
inc
inc
mov
out
repnz
shr
data16
jge
popf
dec
lock
decl
sar
imul
aam
pushf
gs
jno
xchg
xor
sbb
and
sar
jno
subl
fs
jo
jle
or
push
fadds
lods
sub
add
xchg
das
mov
out
in
inc
movsl
cmp
in
sahf
dec
cltd
adc
orb
int3
cltd
dec
xchg
imul
lcall
repz
or
pop
imul
lods
dec
push
roll
adc
lret
out
cmpsb
call
push
loope
xchg
inc
jo
sbb
or
ffree
loop
mov
pop
cld
sbb
iret
or
mov
mov
clc
outsl
clc
mov
popa
fildll
inc
sub
jnp
decl
cmp
mov
mov
sub
jge
scas
mov
push
out
int3
lea
sub
decl
dec
inc
decb
mulb
sbb
lcall
incl
cmp
insb
or
cltd
cld
movsl
movsl
mov
mov
xor
pop
lret
fxch
repz
pop
jnp
jmp
mov
bound
in
dec
js
sbb
add
mov
sar
arpl
hlt
and
or
fs
aam
lcall
lods
sti
insl
jecxz
cltd
xlat
xor
out
sbbl
cmp
loope
lods
pop
push
dec
cmp
int3
rolb
push
hlt
dec
cmpsl
cmpsb
cmc
xor
xchg
clc
inc
les
lret
repnz
notb
cmpsl
mov
adc
mov
enter
lcall
sbb
movsl
or
xchg
out
push
mov
subb
lahf
adc
movsl
fcmovnbe
loop
mov
jno
mov
repnz
enter
scas
pushl
fcomps
idiv
outsl
mov
push
cld
lods
fwait
sbb
test
mov
mov
out
cli
inc
enter
cmp
ljmp
sbb
in
andb
js
adc
addr16
inc
mov
fsubp
movsb
add
push
ret
hlt
mov
pop
pop
lea
sbb
jle
scas
or
leave
sti
scas
loop
icebp
sub
fimull
in
addl
xor
mov
sub
enter
insb
fsubs
lcall
rolb
pop
push
into
lahf
add
stc
add
stos
add
fdivr
pop
loopne
test
test
jge
repnz
cmp
pop
xchg
adc
repz
ljmp
sub
hlt
jp
or
push
or
lret
cmp
nop
fwait
cmp
inc
xorl
cltd
mov
jg
inc
adc
adc
movsb
ljmp
jmp
call
aam
scas
call
bound
les
cmpsl
fcmovnu
std
sti
pop
xchg
add
hlt
out
cmp
xchg
stc
in
call
xchg
call
out
jecxz
jnp
test
sti
das
pop
ret
lds
xchg
mov
dec
mov
es
mov
test
mov
cli
fldlg2
int
insb
push
stos
mov
push
scas
sti
mov
ret
test
out
cmp
shlb
fmul
out
std
jg
jns
int3
jecxz
ffree
fucomi
xchg
pop
and
repnz
push
add
fcmovne
int
ja
dec
in
je
xchg
mov
xchg
jmp
cld
popa
fstl
aam
das
jmp
jno
shlb
mov
in
xchg
icebp
out
mov
scas
aas
fstps
push
aaa
cld
sbb
and
xchg
idiv
xchg
jbe
enter
and
xchg
cmp
clc
outsl
lcall
enter
loope
mov
ss
lea
jge
mov
inc
test
js
pop
xchg
mov
insl
negb
pushf
in
push
bound
lcall
call
fisttpll
in
cltd
mov
jmp
fadd
test
rclb
outsl
inc
shlb
movsb
frstpm(287
das
xlat
lret
push
mov
call
jl
inc
test
mov
jae
in
fwait
repnz
outsl
cli
incl
cmc
outsl
pop
incl
sahf
add
jmp
loop
lock
inc
repnz
jle
mov
jns
pop
popf
aaa
inc
iret
mov
bound
mov
xchg
scas
aas
inc
ror
mov
mov
call
jbe
mov
sub
and
stos
mov
xorl
int3
push
mov
add
inc
lea
test
jecxz
in
int3
adc
paddw
idiv
ljmp
mov
pushf
rol
xchg
cs
pushl
cmp
shll
fwait
gs
clc
add
jmp
xchg
sbb
sti
aad
sti
push
pop
js
repnz
in
jmp
data16
dec
lahf
mov
std
mov
push
dec
mov
add
loope
int3
push
in
fwait
in
lock
mov
daa
or
jmp
xor
loope
push
dec
cs
test
lock
loop
lret
pusha
popf
test
pop
shrl
call
test
repnz
jg
or
shl
shl
cmpsb
aas
adc
ret
jle
lea
mov
xlat
push
mov
mov
addb
xchg
xchg
cld
xor
les
xchg
mov
add
lret
out
cli
jbe
mov
xor
fdivs
or
mov
mov
int3
jg
sbb
idivl
mov
push
mov
cmp
cmpsl
adc
push
mov
cmp
loope
cmp
shrb
negb
cmc
cmpsl
push
test
jp
mov
cmc
cld
inc
sahf
sub
popa
cmp
inc
sahf
xchg
mov
dec
adc
cmc
fidivs
mov
push
mov
es
repz
sti
lret
push
cmp
cmp
jmp
add
push
inc
int
sbb
xchg
xchg
stos
push
mul
inc
scas
add
dec
jmp
mov
gs
dec
lahf
es
and
out
sub
scas
add
mov
mov
sbb
adc
rol
incl
fs
xor
popf
add
cmc
and
ror
std
jl
in
in
inc
sub
in
push
cmp
in
ret
out
out
je
sbb
aas
dec
in
dec
lods
vcvttpd2dq
out
sahf
addr16
clc
stc
xor
sahf
mov
mov
sar
ljmp
aam
sbb
mov
jecxz
jae
aaa
adc
lock
cmpb
fs
subl
sar
pop
add
out
test
jp
xor
call
jmp
sub
xlat
xor
xchg
inc
mov
call
or
loopne
loope
lea
enter
gs
lds
in
insb
lods
cmp
inc
xchg
xchg
hlt
in
jp
inc
hlt
push
jbe
and
icebp
push
ja
jg
mov
cmp
sti
mov
mov
shl
adc
pushl
adc
inc
mov
out
dec
ja
cmp
aaa
or
mov
sarb
sahf
mov
jbe
fsubrs
ljmp
out
popf
leave
xor
leave
mov
dec
pop
sub
cld
in
aaa
sbb
fwait
idiv
jle
lods
xor
add
mov
fsubp
mov
add
incl
sub
or
cwtl
out
leave
lock
mov
jl
xor
arpl
call
cld
outsl
mov
pop
or
in
iret
popl
push
stos
enter
aam
cmpsb
sbb
fucomp
inc
ljmp
clc
out
and
fsubrs
cs
sti
jmp
mov
mov
lahf
or
stc
xchg
aad
sbb
movsb
decl
sub
out
pop
pop
cmc
lds
aam
lret
mov
jecxz
pop
jg
lcall
test
mov
jle
fs
repnz
xchg
adc
je
pop
mov
call
iret
lret
enter
cltd
stc
fcmovu
subb
lock
iret
stc
daa
fcos
jg
loope
pop
jno
subb
mov
xchg
out
mov
loopne
push
inc
fstpt
ljmp
cltd
loope
push
ljmp
hlt
shlb
stos
xlat
inc
xor
sbb
idivb
aaa
call
xchg
cmp
aad
dec
mov
mov
or
pop
sahf
or
jmp
div
cmp
jae
sbb
fst
inc
dec
mov
jmp
sub
cmc
or
mov
or
rcl
xchg
cmp
out
pop
cli
imul
cmpsb
pop
adcb
cmp
push
scas
iret
rorb
mov
js
pop
rol
andl
fistpl
fdiv
xlat
push
pop
fidivl
popf
mov
fdivr
iret
mulb
aam
dec
fs
cld
lcall
int3
out
pop
cltd
xor
jno
ret
xchg
push
sar
sbb
sbb
push
xchg
ljmp
out
shll
scas
pop
fcoml
decl
fadd
cmpsl
mul
into
jne
jp
mov
test
scas
repnz
sar
lcall
fisubs
cmpsb
inc
xchg
fisubs
sti
addr16
mov
nop
sub
sub
dec
adc
shlb
xchg
adc
ffree
inc
jecxz
sub
decl
sbb
cwtl
aad
xchg
sbb
into
in
mov
rcll
push
xchg
adc
xor
push
cmpsl
stos
shll
decl
test
mull
js
stc
mov
push
sub
mov
incl
pop
int3
outsb
cmpsb
add
into
jbe
lods
ds
imul
mov
dec
cld
in
add
xor
lds
in
cmc
fldcw
insb
sub
xchg
aam
call
mov
fadd
int3
aaa
push
lret
push
iret
cmpsl
adc
outsl
mov
outsl
mov
or
out
sub
mov
mov
push
clc
bound
je
popf
fcoms
sti
lret
sbb
push
stc
call
cmpsb
hlt
in
int3
loopne
ret
adc
cltd
sti
lock
test
lret
or
fidivl
cld
sub
sbbl
jmp
lcall
lcall
inc
xchg
loop
insb
inc
dec
jmp
shrb
call
test
out
or
into
ror
stc
fildll
arpl
mov
cli
ror
pop
mov
adc
ljmp
cwtl
lret
sub
mov
mov
les
mov
imul
sub
out
addr16
xchg
push
lahf
add
in
sbb
cmpsb
incl
loope
pop
mov
jb
mov
ja
cmp
sbb
dec
add
mov
mov
cmp
in
les
outsl
sub
xor
clc
xchg
fmul
roll
pusha
cld
lcall
stc
push
notb
std
clc
jmp
xchg
lock
jg
push
mov
jmp
lahf
shl
ja
push
inc
xor
dec
cmpsb
add
pop
pop
icebp
fisubrs
aad
push
out
test
sbb
addb
in
iret
mov
add
loop
lret
shrl
cld
push
jp
sub
pop
cwtl
mov
call
movsb
test
fisubrs
cltd
jp
push
into
mov
ljmp
adc
cmp
stc
add
dec
std
ja
and
fwait
jg
cs
out
fbstp
mov
out
cmpsb
push
mov
xlat
iret
mov
outsb
lcall
cmpsb
in
ss
loopne
pop
dec
xchg
jo
in
enter
fucom
popl
test
push
adc
mov
aaa
loopne
sbb
sub
es
add
mov
jne
aaa
sbb
ret
lds
pop
pop
adcb
sub
or
mov
mov
fbstp
adcb
lock
mov
call
loop
add
das
mov
out
or
inc
call
adc
out
mov
fs
das
sti
in
jl
dec
aam
pop
in
movb
xor
imul
cli
aam
in
enter
sbb
add
add
repnz
inc
mov
xlat
jo
push
pop
fsub
xlat
loopne
decb
add
sub
xor
lock
add
insl
loop
test
cmp
xchg
pop
xchg
aaa
aad
mov
mov
out
and
pop
daa
jle
pop
mov
xchg
sub
mulb
push
pop
enter
pop
filds
cltd
in
or
xchg
dec
cmpsl
inc
cs
pop
or
orl
roll
lret
fdivrp
and
xor
outsl
push
jae
movsb
jmp
jmp
xor
call
push
aaa
lret
sub
js
out
rcrb
ss
cli
nop
add
outsl
fdivrp
je
jl
mov
push
push
cli
sub
jae,pt
out
lahf
fstpt
xchg
cs
and
sub
pop
aas
push
fistpll
in
imul
mov
ja
stc
int
jecxz
push
in
fwait
mov
lret
fwait
cmc
aas
mov
sbb
cld
leave
xchg
fmul
jbe
xchg
fs
aas
and
call
mov
jecxz
fs
xchg
sahf
ljmp
outsl
or
and
jg
mov
out
repz
cmpb
cli
xor
mov
ret
sub
flds
cld
call
xor
jnp
push
ror
adc
lcall
sbb
loop
popa
jae
je
jmp
fst
adc
shll
xchg
ds
into
inc
push
hlt
std
cmpsl
stc
addb
add
dec
mov
ss
js
pop
or
inc
adc
mov
mov
cld
out
outsl
imul
out
scas
add
aad
test
dec
mov
in
pop
fucomip
fwait
cmpsb
sbb
out
outsl
out
dec
jae
push
mov
ret
dec
ljmp
nop
add
gs
mov
xor
push
add
enter
push
cld
loope
pop
loope
insl
push
mov
add
lcall
sbb
push
cwtl
and
out
inc
addl
xor
sbb
int
fisubrl
jns
xlat
shrl
mov
cld
loop
pushl
scas
repnz
stc
data16
ret
popf
ss
repz
cltd
stc
shlb
jo
scas
ret
nop
ficompl
rcl
xchg
cmp
dec
mov
mov
sar
fwait
enter
mov
fcmovbe
cmp
mov
push
fsubs
mov
out
lret
int
ljmp
icebp
test
add
dec
mov
add
mov
mov
dec
fsts
aam
mov
mov
push
xor
mov
sbb
mov
pop
sub
dec
hlt
mov
mov
push
push
mov
xchg
sbb
xchg
dec
ss
jns
arpl
mov
ret
std
jmp
shrb
mov
or
loopne
fnsave
lcall
pop
cmpb
xor
pop
mov
enter
xchg
or
out
js
lcall
xchg
mov
mov
cli
add
push
cli
aad
inc
mov
pop
sub
pushl
lock
scas
push
enter
add
incl
add
mov
shl
cmc
call
rorb
mov
in
mov
mov
aaa
std
cli
in
ljmp
incl
adcb
popf
adc
clc
int3
out
shl
mov
xchg
adc
mov
mov
cmp
jg
ljmp
lods
mov
imul
movb
fisubrs
iret
clc
incl
mov
pop
xchg
xor
cmp
fisttpl
cli
jmp
cltd
xor
sub
clc
xchg
jl
insb
xor
xchg
orb
js
das
adc
imul
mov
push
and
fdivrp
aaa
mov
pop
and
cli
lret
addb
shrb
call
clc
cwtl
jmp
push
test
jmp
jg
ret
mov
movsb
xor
shr
xchg
es
lds
test
inc
in
push
call
mov
test
loop
mov
iret
cld
xchg
add
adc
lods
adc
lcall
outsl
mov
adc
jmp
add
js
outsl
imul
outsw
dec
es
andb
sub
out
es
and
cld
pop
cmp
pop
iret
sbb
push
lret
lock
clc
mov
ss
insb
mov
or
movsl
inc
mov
in
out
rorl
push
outsl
ja
inc
jnp
ljmp
clc
decl
dec
dec
cmp
and
xlat
or
adc
or
lock
push
and
jg
aas
dec
fldt
scas
and
jb
loop
xchg
pop
sub
add
je
cmc
sub
or
mov
adc
push
push
adcb
sbb
fidivrl
inc
cld
out
or
inc
sbb
incl
daa
dec
daa
setbe
adc
mov
mov
cmp
jge
cld
xor
add
jae
repnz
shufps
mov
lock
jp
inc
arpl
and
mov
adc
int
call
lea
mov
sub
pop
cmp
sbb
inc
mov
aam
cmp
call
mov
clc
hlt
add
hlt
aaa
movsl
mov
lcall
or
add
cmp
add
push
stos
ljmp
das
bound
shlb
jmp
idivl
repz
sarl
push
rcrl
hlt
pop
add
adc
or
sbb
call
fcmove
ljmp
arpl
dec
in
popf
dec
mov
andb
shl
and
pop
push
call
cli
xor
mov
and
mov
aaa
rolb
xchg
add
movsb
incl
adc
add
push
sti
in
jb
dec
js,pt
cmp
add
sub
fwait
mov
sbb
pop
loope
pop
adc
imul
jae
inc
movsb
push
adc
pushf
dec
add
sub
cmp
pop
insb
je
xor
mov
jmp
cmp
cmp
loopne
adc
cld
ret
push
dec
pop
or
dec
push
cmp
pop
dec
outsl
loop
jg
sbb
es
cmp
lods
xor
es
pop
sub
cs
fdivp
push
push
in
lcall
pop
pop
fmull
das
lods
int3
fcmovu
mov
lret
div
mov
sbbb
inc
cmp
das
ljmp
or
sub
sti
push
pop
aaa
mov
add
lcall
or
add
sbb
sbb
fistl
push
mov
incl
mov
call
sub
dec
sbb
mov
sarb
mov
or
cmp
stos
or
mov
cs
sub
cmp
call
ret
pop
jg
cmc
pop
cmp
out
add
sub
fsubs
jmp
mov
nop
sarb
push
cmpsb
aam
dec
xchg
push
pop
out
cli
stos
cs
adc
mov
fildl
movsl
js
es
call
lret
push
fcmovne
sbb
dec
iret
orl
dec
or
loop
arpl
mov
sbb
pop
cmp
outsl
mov
sub
xchg
sub
xor
sub
sub
test
lcall
sbb
or
out
js
jne
push
pop
aam
cmpsb
sub
add
mov
and
cmp
sbb
or
adc
into
shlb
xchg
bound
ljmp
je
jmp
adc
sbb
jp
rcrb
sbb
das
aaa
mov
hlt
or
mov
pop
ret
and
lea
xchg
leave
mov
hlt
pop
pop
jmp
neg
xor
cmpsb
pop
ljmp
leave
mov
das
sarb
add
testb
adc
ror
or
cmc
jmp
add
and
jmp
push
push
fcomip
neg
js
adc
clc
mov
xor
cmp
adc
pop
inc
dec
xor
sbb
pop
fidivl
cmp
add
mov
cld
sbb
nop
adc
pop
repnz
gs
sti
or
fcomp
add
adc
std
out
ret
repnz
gs
fistpl
mov
mov
loope
sbb
cmpsl
sub
mov
icebp
adc
mov
and
ljmp
ficoml
aas
mov
jmp
loop
pushl
adc
daa
adc
pop
and
jb
mov
pushf
lods
sar
incl
xchg
dec
sub
sbb
imul
cmpsb
cmc
daa
push
mov
fstpt
or
cmp
adc
idivb
loopne
mov
fisubrs
into
or
das
in
lret
mov
cli
leave
sbbl
je
or
push
and
mov
shrb
insb
in
jo
or
inc
adc
mov
inc
pop
sbb
std
call
sbb
or
unpckhps
fcom
jmp
shr
mov
incl
mov
sbb
imul
dec
clc
pushl
stos
cmp
das
push
pop
push
push
and
mov
in
xor
mov
lock
xor
shlb
push
and
or
sar
push
and
add
dec
aaa
push
cmp
in
insl
and
jle
out
addl
push
push
lcall
lcall
cmp
pop
aas
repnz
ds
cmp
xor
sarl
ljmp
jo
std
sub
or
add
ds
es
sub
in
or
sub
xor
dec
sbb
std
and
sbb
and
and
xor
cwtl
xchg
mov
test
lcall
or
aaa
add
cmp
aaa
sbb
daa
and
mov
sub
mov
idiv
movsl
testl
cmpsl
idivb
jmp
icebp
sub
or
cmp
test
jmp
outsb
xlat
leave
sbb
testb
lds
fstpl
xor
and
push
ds
imul
fcompl
cmc
sar
fst
dec
xor
and
cmc
enter
cs
call
mov
jmp
mov
in
loopne
ret
inc
aam
pop
cs
in
mov
into
sub
leave
loop,pt
cmpsl
icebp
ljmp
cli
mov
adc
add
mov
es
enter
outsl
xor
lcall
decl
ds
xchg
add
and
xchg
push
and
das
lcall
pushl
nop
ret
movsl
sub
fldcw
lret
stos
mov
inc
sarb
pop
push
inc
push
add
or
sbb
insb
pop
xor
pop
fisubs
sti
mov
cwtl
fcom
fs
rclb
mov
decl
lea
cmp
xor
adc
test
mov
inc
dec
fs
inc
dec
repnz
ss
repnz
cmp
fisttps
sub
test
imul
adc
mov
out
rcll
mov
insl
or
sub
sbb
scas
dec
cld
sub
or
fdivrl
lret
call
cmc
iret
sub
dec
stc
enter
lcall
pop
enter
je
cmp
dec
xchg
ret
pop
xor
pop
sti
out
add
je
ret
hlt
or
add
pop
cs
sahf
mov
or
cmp
fmull
mov
outsb
pop
nop
gs
lcall
fsubs
cs
xlat
sbb
add
push
icebp
aas
adc
mov
add
or
stos
daa
push
test
aas
out
sbb
leave
je
call
add
ja
mov
data16
ds
dec
adc
push
int
jmp
popa
js
in
sbb
dec
mov
jmp
jns
daa
aad
sub
idivb
pushf
xchg
push
int3
movb
popa
mov
xchg
loopne
negb
jle
test
cmp
mov
and
adc
pushl
mov
add
aaa
xchg
adc
or
cmp
sub
incl
adc
dec
dec
xchg
out
sti
cmp
jmp
or
call
sbb
cld
pop
pop
cmp
adc
adc
sbb
or
add
adcb
ljmp
push
div
and
push
pushf
mov
out
sbb
sub
not
or
das
adc
fiaddl
js
sbbb
enter
pop
aaa
hlt
mov
mov
movnti
add
lret
ror
jae
icebp
dec
aaa
jg
mov
mov
pop
mov
std
arpl
aam
pop
cmp
inc
pop
xchg
mov
push
repz
jl
pop
push
repz
ljmp
jb
mov
aam
sub
mov
fsubrs
rcrb
mov
cmp
sub
and
pop
add
in
test
and
sbb
int
and
lret
and
pop
mov
jb
fnstcw
fsubs
outsl
ret
push
cld
add
outsb
ficoms
js
add
stos
jmp
push
fsubl
hlt
sbb
pop
hlt
mov
and
and
daa
jne
xor
ljmp
and
into
mov
leave
out
pop
cli
jmp
sbb
add
xor
nop
lret
shlb
dec
lds
mov
adc
jecxz
das
push
fidivrl
aas
inc
decl
loop
in
sahf
adc
les
test
add
or
sub
mov
out
ljmp
push
push
jp
mov
mov
push
push
lods
jmp
sahf
adc
jg
call
xchg
loope
push
aam
jle
fdivrp
jb
xchg
fdivrs
ret
cli
or
lock
pop
xor
xchg
icebp
inc
pushl
dec
popf
aas
fdivs
push
in
xor
lock
sti
xor
or
std
fcomip
jno
xlat
out
and
sbb
push
aad
xchg
mov
mov
sub
pop
out
cmpsb
int3
test
popf
lcall
push
cmpsb
jg
scas
inc
or
fisttps
sarl
hlt
fisttps
clc
ds
inc
divb
sbb
mov
adc
adc
jae
loopne,pt
leave
and
popf
lcall
and
jbe
jecxz
lds
stos
ljmp
sub
jmp
popa
cmc
and
mov
adc
loope
add
arpl
pop
test
cmp
mov
push
push
lahf
into
add
pop
es
inc
xor
sub
xchg
cld
push
sar
sub
pushf
push
or
shrb
xchg
lret
adc
add
jo
lret
or
xor
sarl
inc
sti
ss
repz
in
ret
out
pop
loope
insl
push
out
pop
dec
inc
sti
ljmp
out
loop
pop
add
rorb
into
call
ds
dec
or
cmp
das
dec
lcall
clc
lods
mov
cmpsb
jmp
cmp
mov
iret
mov
leave
mov
jl
mov
lods
out
fdivs
int3
inc
stc
stos
sbb
push
push
jge
push
xor
repnz
insl
std
das
add
jb
pop
fnsave
adc
dec
rcrl
lret
sub
popa
scas
insb
mov
mov
mov
jmp
adc
xor
jmp
dec
add
dec
xor
inc
push
push
outsb
or
loopne
pop
dec
in
sbb
shrl
and
pop
ljmp
sub
adcb
push
fbld
pop
loope
mov
xor
in
subb
cmpb
movsb
pop
xor
mov
dec
jae
movsb
mov
pop
jb
sub
jecxz
ss
jmp
ret
or
loope
ds
add
adc
xor
lcall
mov
int3
adc
add
jmp
inc
fwait
push
test
push
cmpsb
aad
fiadds
fsubr
adc
xor
ljmp
or
shl
call
mov
clc
aad
and
mov
xor
das
std
les
mov
xorb
in
aad
inc
mov
test
or
pop
inc
mov
jle
fcomps
ljmp
ret
jg
hlt
xlat
jae
in
mov
in
and
daa
pop
mov
ds
cli
pop
insb
mov
cs
lcall
jg
or
xchg
sbb
jno
scas
mov
or
out
fistps
std
jg
mov
sti
cmc
and
pop
lods
in
adc
lock
or
lds
fsubrl
loopne
ja
insb
loop
jp
rclb
jmp
aas
lock
lock
and
jg
mov
or
dec
iret
mov
xor
jae
nop
mov
pop
cmp
cld
call
aam
and
push
lcall
rcr
cmp
das
clc
sub
and
and
fimull
and
decl
int
pop
pop
cwtl
cltd
push
int
jmp
inc
inc
mov
aad
ljmp
lea
sbb
or
enter
mov
lods
iret
out
push
dec
mov
dec
jbe
rcrb
mov
inc
jb
lcall
mov
scas
and
out
js
shrl
jbe
inc
mov
xor
adcb
mov
adc
test
sbb
repz
push
inc
jg
jmp
push
and
out
addr16
sbb
mov
pushl
clc
js
sbb
std
imul
test
hlt
inc
xor
decl
les
cwtl
push
mov
daa
ljmp
sbb
jg
sbb
mov
ret
movsl
xlat
jbe
xor
iret
into
pop
adc
out
dec
add
mov
cld
roll
jmp
mov
rcl
jl
adc
add
sub
test
das
fsubs
leave
jecxz
out
rcrb
ret
ljmp
cmp
inc
xchg
jne
push
mov
or
mov
mov
mov
loopne
fistpll
push
cmpsb
dec
sub
lret
cmp
testl
mov
xchg
fsub
adc
ljmp
sub
inc
xchg
dec
in
in
jge
loopne
dec
pop
leave
dec
lods
cmc
inc
andb
into
scas
and
inc
dec
cmc
test
adc
adc
dec
cli
call
sub
push
imul
adc
xor
hlt
aad
loop
adc
pop
fcomip
jmp
xor
add
sbb
cmp
mov
fimuls
pop
push
sub
decl
xchg
xlat
adc
cmc
xor
or
es
jo
sbb
sub
pushf
ljmp
sti
lock
adc
cmp
cmpsb
mov
pushf
lds
push
movsb
mov
andb
aad
cmp
in
aam
lods
jge
adc
or
aas
sub
movsl
mov
mov
mov
and
addr16
adc
outsl
mov
fildl
lods
in
push
ret
jmp
dec
or
cmp
sub
push
xor
push
das
aam
cli
aam
in
pop
xlat
fs
sbb
add
stc
int3
xor
mov
movsl
push
push
mov
outsb
adc
les
nop
dec
call
add
push
out
cmp
xlat
and
cmc
inc
ret
xorb
and
leave
pop
and
mov
pop
mov
add
cli
pop
jmp
lods
lea
in
jle
dec
xlat
mov
pusha
or
call
ljmp
adc
bound
mov
int
and
xchg
fs
ljmp
mull
pop
stos
call
icebp
push
pop
test
sub
jp
xor
sbb
cld
test
cmp
out
lcall
clc
js
ja
dec
inc
push
sub
push
jmp
into
in
cmpsl
or
jle
scas
arpl
xlat
xor
mov
sub
xor
sbb
xor
pusha
fs
cs
mov
aad
add
scas
pop
jo
cmp
fldlg2
dec
jbe
push
incl
pop
xchg
lods
push
push
mov
lds
adc
cwtl
daa
sbb
dec
call
cmp
lahf
insl
inc
sarl
jecxz
jg
sub
sub
int3
rorl
ja
outsb
ja
pop
gs
test
arpl
ja
or
cwtl
sar
jno
cmp
xchg
cld
das
mov
aam
jmp
push
xchg
dec
das
cmpsb
jl
repz
adc
ljmp
mov
add
add
or
mov
xor
daa
add
div
sub
sbb
fldt
test
mov
cmp
or
jp
fsts
outsl
shr
cwtl
cmpsb
jg
or
dec
add
das
mov
in
push
outsl
pop
mov
cld
pushl
lret
aaa
or
push
mov
or
or
pop
std
int3
les
add
in
adc
sbb
fstps
sub
pushl
lods
push
imull
xlat
sub
xor
out
les
sbb
mov
sahf
aad
call
aas
xor
xor
shr
push
repz
out
aaa
lret
mov
jp
das
lock
bound
mov
cmp
mov
adc
decl
cmp
repz
ret
rol
mov
call
cltd
movsl
sbb
xchg
pop
imul
and
push
sub
es
lcall
mov
imul
xor
ss
sub
outsl
jp
or
and
enter
inc
dec
or
jmp
pop
add
push
add
aaa
add
add
in
sbb
mov
or
or
sub
enter
and
inc
pop
xchg
gs
test
lcall
cltd
jecxz
into
sub
lret
or
pop
cmp
out
xor
add
cmp
ret
clc
incl
push
aas
push
push
das
jb
xor
aas
les
cld
cmp
sub
xchg
add
adc
int3
gs
and
dec
cld
xchg
push
sub
jae
mov
imul
cli
int3
add
add
call
dec
lods
jp
pushf
jecxz
es
or
adc
icebp
decl
lret
sub
adc
jns
sbb
sub
call
orl
fbstp
jae
xlat
pop
add
mov
aad
mov
jmp
xor
sub
loop
or
or
sbb
outsl
and
fsts
js
lcall
int3
outsb
sub
cmp
xor
es
loopne
fwait
jmp
cmp
xchg
decl
sub
or
out
pushl
push
sub
nop
jle
nop
aam
in
mov
fidivl
into
adc
iret
ljmp
ljmp
adc
nop
or
and
pop
loope
mov
jmp
ljmp
lds
in
mov
scas
ds
iret
pop
aas
xchg
mov
gs
cmp
mov
inc
pop
sbb
ret
sub
cld
mov
in
xor
adc
mov
dec
outsl
iret
lret
adc
xor
repz
call
loopne
sbb
sbb
pop
sub
pop
push
adc
addb
xor
daa
imul
sahf
enter
ss
inc
xchg
push
sbb
and
and
dec
and
cmpsl
lret
push
sbb
push
addr16
sbb
and
xorb
or
out
or
lods
dec
int
leave
sbb
vshufps
and
mov
jecxz
mov
sbb
leave
sub
test
dec
cmc
insl
daa
jle
jne
call
push
aad
inc
lcall
mov
loop
lahf
out
inc
mov
and
sub
movsl
data16
mov
lcall
ret
sbb
fstps
sarl
cmp
out
mov
mov
push
adc
cmp
lock
push
fsubrs
sar
jle
jg
loope
notb
lcall
mov
jmp
jg
aam
xor
adcl
out
sahf
xor
adc
sbb
pop
std
js
sbb
std
adc
push
inc
jbe
cmp
sarl
add
loopne
jl
cmpsb
in
and
push
lods
dec
add
movsw
mov
test
and
add
jbe
sbb
out
or
lcall
rcr
or
enter
in
mov
ror
pusha
imul
adc
mov
cmc
arpl
mov
in
inc
xor
in
xchg
xor
lcall
das
movsb
inc
aam
in
adc
lock
fildl
incb
sbb
pop
sub
imul
jmp
ret
loope
clc
out
in
aas
in
mov
repz
sub
cli
inc
pop
cs
jbe
sarl
lods
out
cwtl
mov
repz
push
jmp
aas
das
lcall
inc
in
xor
aas
dec
insl
call
xchg
inc
add
cmp
lahf
add
sub
adc
cli
fists
rcrl
std
fcoms
cli
add
insb
pop
dec
daa
add
out
sbb
and
lds
mov
dec
inc
sub
jnp
mov
mov
ljmp
mov
xor
je
negb
add
test
sub
dec
mov
sub
or
and
push
xor
cli
jnp
insl
loop
sub
inc
jmp
sub
xchg
movsl
pop
mov
or
aas
loopne
stos
push
mov
sub
or
out
cmp
sub
hlt
aam
cltd
cmp
mov
pop
movsl
jo
in
incl
or
sub
or
int
mov
idivl
mov
lcall
mov
sub
out
adc
sub
test
loope
jbe
jg
mov
loope
out
or
pushf
and
iret
dec
sub
pop
fs
inc
sub
ljmp
out
sub
out
cli
clc
mov
mov
lahf
aam
adc
aaa
sbb
adc
adc
and
incl
cmpsb
jmp
xchg
loopne
out
and
mov
push
xor
ficoml
and
xorl
inc
add
adcb
pusha
lret
push
loop
dec
dec
fisubl
jg
cmp
and
add
add
fdivrs
icebp
rcll
shrb
stc
and
pop
nop
jmp
das
mov
xor
sub
mov
jbe
jl
test
int
xor
mov
cmpsl
bound
jp
xchg
pop
in
cmp
imul
hlt
dec
sub
testb
aaa
add
mov
ficoms
xchg
nop
xor
sub
icebp
lock
fisubl
mov
dec
cld
mov
lods
inc
add
hlt
sub
dec
push
stos
mov
aam
xchg
mov
movsb
dec
jl
and
fisubl
mov
cli
jg
pop
cli
and
in
out
adc
push
out
loopne
lahf
or
call
les
sbb
daa
inc
add
fldt
rcrb
in
cmp
dec
xor
cmp
mov
ja
inc
sub
hlt
imul
push
jmp
cli
add
rorl
fstpt
popf
das
or
loopne
ljmp
sub
cmp
push
lock
cld
pop
xor
add
xchg
std
inc
mov
push
lds
loopne
cld
lcall
and
xor
arpl
outsl
jmp
shl
dec
call
cmpb
inc
aad
sub
xor
decl
jns
sub
mov
push
push
sahf
daa
sub
int
in
imull
mov
sarl
flds
and
jae
pop
xor
pushl
dec
xor
sti
mov
ds
sahf
shrb
je
xchg
adc
mov
pop
call
sbb
cltd
cltd
enter
and
or
and
push
and
divb
imul
in
cmp
das
add
sbb
jns
sub
adc
sbb
cmp
popf
cli
pop
sbb
adc
clc
pushl
cli
loop
dec
enter
pusha
pushl
mov
ljmp
rclb
add
ljmp
adc
in
pop
pop
out
or
and
in
filds
arpl
pop
in
cmp
adc
sbb
aaa
xchg
xchg
lods
das
xor
pop
or
cs
mov
pop
add
std
call
out
out
es
repz
enter
pop
inc
pop
fbstp
sahf
lods
je
mov
out
clc
out
into
dec
pop
enter
cmp
lds
or
or
movsl
iret
sub
repnz
mov
jbe
lret
jmp
add
dec
and
push
or
pop
dec
inc
loopne
sahf
dec
adc
stc
sub
jmp
icebp
out
push
out
xchg
call
xchg
jg
dec
push
stc
in
insb
int3
lock
sti
pop
push
dec
out
xor
pop
cmpb
add
js
sarb
or
push
cmp
repz
mov
jecxz
out
mov
mov
enter
pop
pop
pop
pushl
shrl
mov
subb
subl
ljmp
cli
mov
adc
xor
rclb
dec
push
in
out
fmuls
or
sbb
mov
or
in
push
aas
mov
mov
bound
mov
sub
push
pop
movsb
fucomip
dec
cmp
fistl
pop
fcmove
testl
punpckhwd
or
pop
xlat
sbb
push
jmp
outsl
out
and
jns
mov
out
sub
adc
jo
mov
mov
cli
sbb
rorb
rclb
mov
xor
sub
enter
jecxz
jbe
aad
push
fistps
or
cmp
adc
clc
call
jmp
out
imul
int3
jns
call
andl
leave
dec
mov
or
out
incl
ljmp
mov
into
jge
inc
sbb
rorl
push
imul
std
sub
sub
or
jl
test
jmp
jmp
dec
push
nop
fdiv
movsb
js
xchg
pop
jmp
sub
xor
dec
rcr
call
out
leave
inc
push
jno,pt
enter
out
cmp
ret
out
orb
stc
jecxz
shll
sub
adc
mov
ret
lock
dec
loopne
enter
jecxz
int
lods
lcall
cld
arpl
or
in
rol
mov
jle
inc
fstl
fsub
mov
mov
push
loop
ret
adc
orb
mov
add
sbb
sub
push
loopne
adc
shlb
inc
jecxz
es
ljmp
das
nop
or
push
cmp
push
loop
jno
pushf
cmp
mov
mov
mov
push
add
sub
lds
push
rorb
in
dec
dec
pop
push
push
fistl
and
jmp
ret
lock
sbb
sub
ljmp
repz
push
scas
or
cmp
movsl
adc
mov
pop
cmpsb
add
cmp
add
loopne
or
loope
lds
gs
scas
outsb
dec
mov
mov
mov
ret
mov
scas
movsl
inc
cld
sbb
cmp
sahf
pop
adc
aaa
fwait
inc
adc
scas
mov
push
sub
pop
sub
cmp
dec
pop
sub
or
das
pushf
jg
cwtl
cli
iret
out
shrl
cltd
cmp
push
loopne
call
sub
shl
test
pop
xor
in
clc
popf
xor
pusha
cwtl
icebp
pop
dec
jb
clc
daa
fmuls
or
aas
inc
jg
int
and
pop
stos
lock
cmp
add
xchg
out
add
in
sbb
lea
jno
cmp
cltd
pop
aam
sub
xchg
adc
pushf
jecxz
cmp
jle
aaa
es
iret
out
outsl
mov
jp
cmpb
mov
dec
cli
arpl
fcmove
adc
cli
pushf
and
outsb
pop
mov
fdivp
jns
adc
aam
loop
pop
aam
dec
sbb
inc
mov
out
loope
jg
mov
testb
xor
push
jmp
insl
adc
aad
push
push
cmp
testb
xor
popa
in
cli
cmp
cmc
mov
pop
inc
jb
pop
and
mov
aam
js
and
fisttps
out
cltd
fsub
data16
out
jmp
sbb
cli
or
pop
pop
adc
mov
cmp
inc
add
das
sbbb
adc
push
imul
dec
es
mov
hlt
lds
xlat
xchg
loopne
add
mov
call
push
lds
and
sbb
push
pushf
insb
shlb
or
sar
lea
dec
sbb
jmp
sub
mov
mov
cmpsb
jmp
scas
iret
hlt
pop
fistpll
mov
and
push
and
jmp
pop
adc
mov
or
pop
iret
or
sarl
jecxz
int3
xchg
ret
mov
jle
and
jmp
aad
sub
aam
loop
push
add
jge
mov
cli
aas
dec
cli
outsb
es
gs
add
ds
popf
rorb
inc
dec
pop
je
add
js
xchg
sbb
out
pop
pushf
lods
call
cltd
jle
mov
iret
bound
jge
cmc
aad
or
pop
dec
sbb
mov
fsub
mov
push
pop
hlt
pop
push
jl
or
cli
ret
adc
dec
push
aas
jge
jmp
jmp
icebp
fsubs
dec
cmp
pop
fs
xlat
pop
or
ror
ficoms
xor
cli
jl
mov
jmp
lock
aam
jmp
mov
add
pop
dec
or
loopne
clc
sub
incl
push
in
enter
cmp
lret
mov
dec
xor
incb
xlat
call
xor
fbstp
xchg
aam
pop
iret
in
pop
and
out
push
dec
insb
push
push
push
inc
imul
add
push
inc
mov
incl
xchg
push
test
mov
in
std
in
pop
lret
sub
push
or
int
sbb
or
mov
enter
mov
pop
loope
int3
sbb
lcall
xchg
rdtsc
or
loopne
out
dec
pop
sub
test
or
mov
cmpsb
mov
lock
call
ret
jg
rolb
adc
or
lods
hlt
fcmovb
dec
fcmovbe
jle
das
out
mov
clc
inc
sub
pop
dec
mov
push
mov
call
icebp
xchg
hlt
and
ljmp
aas
pushf
dec
jg
jg
lret
call
movb
and
lret
lcall
cmc
int
in
xchg
inc
sub
pop
add
jg
testl
enter
adc
jle
cmpsl
or
pop
sub
cli
and
andb
out
fistps
jmp
pop
enter
pop
lods
cmp
mov
push
popf
jl
out
lret
std
inc
pop
fstpl
loopne
mov
dec
cmc
filds
std
push
mov
push
jecxz,pn
in
rorb
loop
xchg
xor
dec
inc
es
push
sub
mov
imul
mov
icebp
pusha
jns
mov
dec
scas
fidivs
push
adc
sub
jno
mov
leave
jb,pt
jmp
cmp
and
std
into
repnz
movsb
mov
xor
push
or
push
lods
xor
sbb
xor
or
mov
jg
js
mov
xor
clc
push
add
test
clc
xchg
out
out
mov
into
inc
gs
xchg
lock
ds
mov
mov
dec
repz
adcb
sub
mov
scas
rolb
xor
addb
or
cmpsb
ljmp
incl
fucomi
inc
call
inc
into
imull
inc
add
fucomip
gs
jo
shrl
ret
and
out
push
inc
incl
int3
idivl
mov
popa
or
dec
iret
call
cld
aaa
inc
int3
xor
jecxz
jae
test
fbstp
aaa
cli
shl
imul
and
sub
xchg
arpl
pop
inc
loope
sbb
test
aaa
sar
incl
test
xchg
jmp
dec
sub
arpl
or
enter
dec
or
ss
or
ja
pushl
roll
adc
sub
cmc
cmp
in
testl
fidivrs
notb
mov
repz
xlat
imul
or
sarl
jle
aaa
lahf
stc
adc
sub
mov
fidivs
cmc
jns
lret
dec
ficompl
sub
ret
ljmp
enter
jmp
xorl
fisubrl
psubw
in
xor
out
scas
cmp
mov
gs
roll
rcl
ljmp
and
imull
mov
lret
inc
or
xor
repz
mov
dec
or
scas
bound
push
lock
call
push
stc
mov
dec
leave
add
cmp
add
xor
jg
dec
data16
popa
fcmovnbe
and
xor
loopne
mov
push
sub
repz
hlt
decl
mov
or
popf
repz
int
xlat
jg
pop
dec
mov
sbb
push
xor
push
jmp
add
lds
mov
mov
lret
dec
iret
cmp
jo
sub
movsb
sti
daa
add
shlb
jno
sahf
mov
outsb
mov
mov
das
adc
popf
jae
inc
xchg
mov
ljmp
xor
adc
aad
out
add
filds
sahf
xchg
push
and
ja
dec
popf
sbbl
jp
xor
pop
mov
dec
xchg
jo
daa
leave
nop
out
scas
iret
ds
les
cmp
inc
jmp
dec
xchg
repnz
aas
pop
shlb
fbld
sub
test
xor
icebp
lods
inc
fwait
clc
fisubl
movsb
cmpsl
inc
xchg
call
add
clc
data16
or
pop
cmp
jg
pop
jp
mov
pop
push
mov
cmp
call
adc
in
dec
mov
inc
xlat
bound
fnclex
bound
fisttpl
movsl
cmp
jb
repz
push
das
lcall
xor
sar
loope
mov
xor
daa
xor
and
flds
mov
lock
out
fbld
pop
mov
cmp
aaa
sbb
fiadds
sahf
cli
add
icebp
dec
fdivrs
adc
cltd
and
mov
add
sub
shrb
inc
ret
lock
test
cmpb
cmp
lcall
inc
cli
or
push
adc
sub
into
and
clc
cli
outsl
mov
std
jmp
add
ljmp
add
pop
leave
xchg
push
rol
push
negb
fildll
ljmp
iret
pop
inc
add
fnsave
test
ljmp
and
daa
and
iret
shrb
add
sbb
aaa
or
lds
cmpsb
in
pop
gs
scas
ret
fmull
jmp
sub
and
fidivrs
dec
add
push
add
rolb
sbb
test
xchg
or
aam
dec
mov
adc
pushf
rcll
pusha
mov
int3
jg
lcall
mov
mov
xor
pop
andl
cmp
or
sub
enter
mov
call
adc
push
and
cmpb
popa
idiv
pop
jecxz
sub
add
pop
insl
sub
pop
bound
ror
js
sub
dec
add
pop
fisubrl
dec
jmp
iret
mov
and
sub
pushf
inc
inc
iret
ljmp
aaa
add
jmp
mov
jge
push
and
lret
divb
ret
leave
outsl
cmp
in
add
sbb
xor
je
bound
mov
rcl
inc
mov
and
dec
das
adc
repnz
or
or
notb
lds
push
adc
adc
xchg
push
mov
cmc
push
push
js
jg
pop
movsl
nop
int3
das
repz
jb
ret
add
jno
mov
lret
push
xchg
sub
mov
sub
aam
push
sar
dec
mov
xchg
rorb
pop
or
lcall
mov
or
jmp
mov
push
idiv
je
adc
lcall
and
push
or
add
mov
insl
repz
fldenv
lods
pop
lret
sub
incl
nop
inc
ficomps
sbb
and
arpl
loop
ret
pushl
clc
into
popa
xlat
outsb
clc
sub
addb
sbb
mov
jge
aas
mov
cmp
sub
mov
xchg
sub
and
fmuls
or
aas
int3
sbb
jg
int
into
cmp
jp
std
sub
aaa
cmp
mov
stc
rclb
dec
lea
and
aas
cmp
jns
nop
pushf
jmp
lcall
imul
test
mov
in
xchg
lcall
xchg
ret
pop
sub
aaa
stc
lods
sbbb
add
dec
lock
stos
rcll
inc
fldt
test
xchg
dec
jle
je
in
adc
mov
push
outsb
push
xor
mov
movsl
xor
mov
into
or
pushl
hlt
push
and
clc
in
ret
mov
loope
stc
shrb
js
mov
jmp
aas
jp
call
push
inc
fs
or
jecxz
les
loope
rorl
lea
pushf
fmul
inc
fistpl
cli
lock
jle
dec
inc
or
dec
jae
movsb
std
cmp
add
jo
ds
xchg
inc
xor
add
ljmp
cmp
repz
sbb
dec
add
cmpsl
adc
lock
insl
ljmp
sar
scas
and
cmp
ds
push
iret
and
in
mov
loopne
fnstcw
adc
lock
mov
popf
mov
sub
or
push
push
xor
into
sbb
call
add
sbb
jmp
push
jecxz
xchg
fsubr
jge
incl
mov
in
jno
inc
ret
cmp
lcall
addr16
lahf
out
mov
sti
or
sbb
mov
adc
loope
in
push
in
inc
sbb
adc
pop
ljmp
dec
lea
mulb
jmp
and
xor
jle
cmpb
sbb
scas
xchg
jno
aam
push
cld
jmp
in
xchg
fucomip
mov
into
imul
xchg
adcl
loop
xor
daa
and
fcom
or
scas
out
xchg
jg
test
push
iret
call
iret
or
jecxz
enter
lahf
int
jp
mov
clc
cmp
std
add
pop
cld
lea
pushf
fwait
lea
sub
and
shr
and
mov
add
mov
cmc
psubusb
enter
push
fwait
pop
in
sbb
data16
addl
and
xlat
aad
xor
mov
enter
neg
in
xlat
lret
jle
lcall
lods
fisttps
xchg
pop
rcl
ss
aad
ds
sbb
stc
jp
cwtl
push
dec
fwait
aam
fs
js
ss
das
mov
jmp
fisubs
shl
fdivrl
jmp
sub
mov
jmp
cmp
pop
aaa
pusha
fiaddl
rcrb
jmp
sbb
out
aam
pop
sub
adc
leave
cs
addr16
cmpsl
das
nop
jmp
movsb
pop
push
je,pn
shlb
stos
mov
decl
mov
loop
sub
out
nop
lahf
testb
insb
sub
adc
stc
sub
sar
andl
xchg
out
les
push
jge
cmpl
fmul
sbb
call
lahf
xlat
bswap
dec
pop
or
push
cmp
jp
lahf
out
xchg
rcrb
clc
jg
mov
jg
leave
lcall
testl
cli
mov
mov
adc
mov
or
mov
ljmp
mov
js
jecxz,pn
adc
or
mov
fisttps
jmp
adc
xor
call
push
bound
rclb
mov
add
jb
ret
pop
adc
lret
shlb
jno
aaa
dec
clc
and
iret
scas
mul
aas
dec
daa
outsb
add
jg
jmp
out
shll
notl
sar
and
hlt
mov
jmp
jge
xlat
push
out
or
pop
js
mov
fbstp
lods
mov
jbe
jg
andl
insl
xlat
int3
call
cmp
pop
or
rcr
ljmp
shlb
loopne
sbb
pusha
cmp
add
dec
add
hlt
push
or
mov
in
jnp
fbstp
fisubrs
les
ljmp
xor
es
popf
aad
call
mov
inc
outsb
test
fcmovnu
push
aas
loopne
push
sub
or
adc
outsb
inc
pop
into
mov
int3
pop
pop
decl
adc
sub
xchg
dec
fmul
inc
add
mov
mov
pop
jmp
push
js
cmp
lcall
syscall
pushl
hlt
mov
sbb
xchg
pop
add
pushl
in
inc
xor
push
aam
insb
pusha
xor
sbb
incl
incl
push
daa
cli
cwtl
xchg
lods
pusha
les
or
out
dec
sub
xchg
loope
icebp
shll
xabort
loopne
pusha
xor
cmpsl
mov
mov
pop
shl
lock
inc
mov
test
mov
pop
push
xor
jge
stos
fsubr
iret
pop
adc
clc
ja
push
pop
adc
mov
inc
in
cmpsl
fmull
inc
add
mov
loop
repz
pop
cmc
mov
insl
adc
or
add
mov
mov
dec
ficompl
ljmp
push
cld
jmp
pushf
idiv
add
lock
jg
movsl
jg
imul
insb
push
jmp
cli
mov
pusha
fadds
inc
pusha
cmpsb
adc
push
jle
xchg
into
data16
int
loopne
lds
pusha
dec
sub
fdivrs
enter
das
xor
push
and
dec
fdivp
out
push
add
cmpsb
push
pop
adc
fisttps
dec
sbb
cli
aam
iret
fdivp
aaa
pop
mov
repz
adc
cmpsb
fwait
and
fwait
nop
cmc
sub
dec
or
insb
mov
andl
stc
cld
mov
adc
mov
xor
cld
xlat
sub
cwtl
sub
mov
jg
or
push
mov
movsl
call
call
jb
pop
mov
sub
and
mov
add
cmp
adc
xor
fs
dec
add
icebp
push
mov
adc
sub
pop
sub
sub
aad
xor
cmpsl
dec
fldl2t
loope
sar
lock
in
add
addb
or
aam
popa
std
mov
cmp
adc
adc
add
push
mov
or
mov
cltd
leave
jp
inc
roll
lret
mov
push
dec
test
mov
adc
lcall
and
outsl
insb
dec
xlat
cs
mov
add
jecxz
sar
xchg
in
and
sahf
push
cmc
and
arpl
jp
fistps
adc
scas
pop
adcb
out
sti
adcl
sub
enter
inc
aad
data16
sti
mov
inc
adc
mov
dec
loopne
mulb
iret
bound
sbb
bound
mov
in
aaa
aas
adc
ljmp
cmpb
outsl
data16
inc
ret
lock
pop
jmp
or
sub
outsl
sub
and
stos
inc
sbb
ret
outsl
jmp
jb
loope
adc
sbb
lret
mov
pop
jg
leave
pop
out
ret
jmp
cli
lds
fdivrl
iret
test
lahf
cmp
and
mov
in
pushl
jg
pop
in
jmp
and
leave
jb
add
lcall
jmp
inc
push
xchg
cs
aad
sub
sti
mov
or
ror
clc
out
jg
in
and
cmp
nop
mov
pop
mov
mov
cmpsl
out
push
ljmp
setle
lds
decb
ljmp
aam
cmpsl
sbbb
inc
cmpsl
xor
or
loop
lods
lcall
jle
jge
fisubs
mov
pop
out
jecxz
test
pusha
jmp
aam
lods
push
cmp
add
outsl
inc
mov
jmp
in
xor
push
pop
cld
pushl
adc
jmp
inc
pop
mov
out
inc
clc
clc
mov
dec
mov
test
lods
adc
dec
ror
sub
xor
stos
sub
clc
xorb
add
in
je
lcall
push
pop
fcompl
shll
mov
dec
add
aaa
mov
aad
inc
fisubrs
pop
xchg
or
push
in
out
hlt
adc
jns
ljmp
bound
dec
out
jb
adc
lock
xor
movsl
fs
fsubl
dec
andl
xor
lcall
mov
adc
cld
and
and
sbb
sub
pop
dec
cld
ljmp
popa
out
mov
jg
xor
xchg
cmc
repz
aam
xor
mov
clc
std
add
adc
sbb
adc
jg
out
in
and
pop
push
test
outsl
sub
iret
scas
ret
push
jmp
mov
testb
aad
std
aam
sbb
or
shl
leave
stos
jne
loopne
int
loop
jge
je
stos
aaa
sbb
lock
and
outsb
inc
aaa
rcrl
push
dec
jo
mov
cld
fnstsw
enter
xchg
xor
mov
call
fldenv
aad
mov
jmp
sbb
stos
sbb
mov
mov
je
inc
aaa
out
std
lods
into
xor
stos
out
scas
xor
mov
inc
mov
push
fmul
bnd
in
push
out
aam
push
aam
pop
aam
call
test
dec
pop
fwait
mov
cli
movsl
fcmovne
js
adc
inc
mov
fcom
popf
les
sub
iret
decl
test
adc
hlt
jle
push
dec
mov
push
out
fiadds
mov
incl
mov
div
pop
arpl
lea
or
jg
xchg
fs
and
notb
fidivrl
xchg
push
xor
pop
or
sbb
inc
push
adc
mov
aas
cltd
push
lea
clc
stos
mov
pusha
imulb
idiv
fwait
in
jg
adc
xlat
push
push
nop
js
mov
jmp
jo
ficomps
dec
iret
pop
push
jecxz
aam
jno
jns
dec
lds
or
mov
push
push
mov
in
cmc
arpl
bound
cli
pushl
and
ret
sub
js
pop
sub
push
lret
or
int
fadds
push
jmp
scas
leave
leave
cmp
es
push
jg
loopne
push
xchg
int3
rolb
mov
mov
aam
cs
fs
fldenv
xor
mov
and
lods
les
cmp
and
fwait
enter
incl
dec
mov
dec
xchg
cmp
xor
or
push
mov
dec
xor
sarl
cmp
lock
pop
adc
fwait
sub
cmpsb
js
cs
inc
jae
cwtl
loope
sarb
ja
push
mov
repnz
mov
push
cmp
or
dec
sbb
push
xlat
popa
loope
shlb
pushf
lahf
and
sbb
test
sub
lock
jmp
xorb
or
imul
es
xchg
inc
clc
scas
xor
dec
fstpt
andb
loope
or
loop
pop
repnz
push
add
fadds
push
leave
xor
je
call
xor
mov
inc
or
jg
pop
cmpsl
sar
fisttps
mov
pop
insb
clc
sbb
jle
mov
ret
lock
jbe
fs
inc
mov
sbb
outsb
imul
jp
xor
stos
call
rorb
cli
iret
push
xchg
inc
xor
mov
rolb
outsl
mov
sub
sub
or
mov
pop
fwait
and
int
push
imul
mov
xchg
pushf
cli
mov
dec
lds
fbstp
sbb
inc
jle
xor
dec
adc
sub
cwtl
jns
xchg
dec
cld
ja
or
push
popf
cmc
cmp
fwait
pushl
xor
es
scas
clc
lcall
xchg
cmp
insl
fbstp
mov
sarl
push
pop
lahf
cs
xchg
subb
lcall
mov
clc
in
adc
and
int
enter
dec
rolb
add
loopne
scas
loopne
leave
jp
mov
xchg
inc
daa
cld
testl
test
lock
enter
mov
movsb
sbb
mov
das
lds
fs
aaa
or
iret
cmpsl
or
out
loopne
add
xor
dec
push
sub
clc
call
int
add
and
adc
push
cwtl
jge
cmp
call
cwtl
adc
lds
jnp
fdivrl
mov
pushf
mov
sub
in
outsl
cmp
sbb
out
xor
inc
out
iret
sub
test
ret
adc
mov
enter
shr
push
es
test
mov
jg
and
xor
aaa
bound
lret
in
push
decb
add
push
inc
fnstcw
sbb
in
and
dec
dec
add
sbb
stos
movsb
decl
xor
mov
add
ljmp
mov
sub
cmp
lret
xor
out
and
or
and
sub
xor
sti
pop
mov
cmp
enter
rorb
jge
lahf
daa
xchg
int3
adc
or
pop
adc
mov
push
frstor
les
mov
inc
adc
dec
or
loopne
mov
pop
bound
sub
mov
and
daa
mov
push
add
inc
mov
pop
push
repnz
adc
jbe
sub
cmpb
ds
decl
popf
notl
gs
xor
mov
popa
and
add
cmp
and
dec
or
decb
out
ret
dec
dec
cmp
adc
jmp
mov
lds
push
cmpl
jmp
inc
les
xchg
xorb
ljmp
mov
mov
ret
cmpsb
shr
sbb
aad
push
insl
pop
push
cs
hlt
xlat
aas
out
mov
subb
rclb
adc
jle
pop
mov
mov
in
mov
jo
lods
inc
and
add
push
lods
pop
loopne
xor
ret
and
jg
sar
mov
pop
cmc
inc
xchg
cmp
cmc
ds
jnp
jmp
jne
nopl
mov
outsb
in
lret
add
lock
es
mov
xor
push
ds
aas
mov
pop
add
imul
call
cs
out
sbb
dec
fnstcw
or
cmp
in
inc
in
xor
inc
or
sbb
inc
xchg
add
mov
add
cmp
jbe
incl
add
xor
mov
fdiv
lret
aam
pop
ret
les
jb
cltd
mov
adc
or
and
adc
scas
sbb
mov
and
pop
dec
iret
out
mov
aad
mov
push
xchg
jmp
aas
aas
loop
iret
addl
inc
or
subb
mov
prefetch
pop
adc
add
stos
cmc
inc
mov
js
xlat
pushf
and
and
sbb
mov
lock
fidivs
call
pushl
and
push
cwtl
xchg
xor
add
addl
push
stos
mov
les
ss
adc
sti
and
icebp
loopne
aam
cmp
stos
addb
mov
adc
sbb
pop
cwtl
out
mov
jecxz
shlb
or
jg
push
arpl
sbb
push
loopne
daa
and
nop
add
paddw
cs
adc
lock
xor
pop
bound
ja
rcll
jle
xchg
mov
or
xchg
adc
and
loope
je
mov
dec
cmp
fdivrs
icebp
ja
movsl
xor
stos
jmp
outsb
push
cmc
faddl
aaa
sbb
cmp
push
or
stos
and
in
adc
mov
dec
loopne
pushf
mov
mov
xorl
sub
insl
stc
sbb
pushf
mov
or
or
loop
cmp
shl
into
test
or
pop
mov
cld
mov
jg
call
push
or
adc
stos
push
dec
pop
or
shll
xchg
scas
sub
sbb
es
sub
fldcw
aaa
add
mov
and
loopne
jb
hlt
mov
orl
or
cmpsb
mov
pop
stc
adc
adc
mov
inc
mov
jb
mov
or
and
iret
movsbl
pusha
scas
add
in
sbbl
lea
cmpsb
jge
sbb
sbb
add
lcall
ffreep
jnp
iret
pop
add
or
mov
xlat
adc
jb
jbe
int3
test
push
repnz
in
dec
addr16
and
cli
lods
cmp
cmp
cli
jg
push
movsb
lods
pop
mov
and
nop
and
and
data16
sti
aam
insb
cld
push
loop
xchg
or
cmp
inc
add
mov
xchg
sbb
clc
incl
mov
iret
cmpsl
sub
add
sub
pop
hlt
pop
repnz
loop
es
pop
mov
and
xor
data16
and
outsl
out
mov
or
push
lock
or
mov
mul
imul
cmpsb
fsubs
test
cld
clc
filds
cmp
ficoms
mov
fstpt
or
andl
and
hlt
pop
add
out
cmp
loopne
mov
int3
fcoml
iret
mov
scas
ret
sub
adc
xor
sbb
movsl
inc
je
mov
jns
sbb
cmpb
mov
adc
mov
enter
stc
xor
movsb
pop
loop
movsb
xor
cmc
ljmp
or
ss
sti
mov
test
or
dec
xor
add
xor
sub
out
aas
mov
out
imul
sub
enter
or
ffree
fisubs
adc
inc
fsubrs
or
lock
fwait
and
sahf
dec
filds
lods
xor
movsb
xor
jmp
in
data16
pop
and
iret
pop
mov
jl
icebp
lock
popf
loope
sbb
incl
or
movntps
adc
xor
popf
shl
test
add
xor
fisubs
movsl
push
je
incl
sbb
mov
add
mov
ljmp
push
cld
pop
aad
aam
out
or
dec
dec
inc
add
ficoms
stos
or
adc
or
stc
dec
aam
cli
jl
xor
xlat
jg
cld
and
pop
jecxz
mov
ficompl
xor
push
movsb
cmpsb
cmp
loope
mov
dec
fnstcw
inc
outsb
movsb
fdivr
lahf
push
dec
adc
loope
and
sub
jecxz
xchg
mov
inc
stc
pop
push
mov
leave
and
mov
out
pusha
cli
inc
in
sti
iret
stc
rorb
sar
js
mov
sbb
scas
add
mov
push
aaa
pop
sarb
bound
xchg
arpl
fimull
test
inc
jp
adc
xor
andl
pop
or
sbb
pop
cld
push
adc
popa
aas
shl
mov
xchg
cmp
js
into
add
sti
xchg
test
dec
ljmp
mov
fsubrs
repnz
adc
fcmovne
inc
ds
xor
xor
testb
jle
enter
dec
aam
jg
fwait
mov
cmp
add
movsl
call
decl
xlat
pop
out
inc
sti
add
or
mov
call
jecxz
out
mov
jno
cmp
in
daa
hlt
pusha
xor
adc
jmp
adc
add
psubd
fisttps
loope
jg
daa
jl
insb
cmpb
and
outsb
iret
clc
pop
adc
mov
sbb
push
aaa
outsb
jmp
aad
dec
enter
jnp
in
into
shrl
xlat
dec
xor
loopne
fbld
fisttpl
inc
std
push
daa
stos
jecxz
je
test
push
rolb
lret
inc
iret
push
pop
das
vshufps
jmp
lret
mov
data16
jg
pop
lock
push
and
cmpb
push
and
push
fistpll
adc
clc
adc
sub
mov
sbbl
cli
or
dec
fnclex
inc
aas
mov
outsb
out
repz
mov
cmc
js
or
lret
int3
mov
ljmp
xor
hlt
setae
int3
rol
insb
dec
fsubl
lret
or
loopne
fstl
add
mov
loop
ret
ljmp
jge
jmp
lods
and
inc
add
fucom
enter
pop
insb
dec
mov
sub
pusha
shll
test
call
bound
dec
push
or
sarb
rol
jmp
sti
int3
push
inc
add
mov
filds
in
aam
mov
mov
push
pushl
mov
out
fcmovb
in
jl
or
das
sub
out
lds
iret
iret
sti
push
jecxz
xlat
xor
addb
adc
fwait
es
jmp
loope
mov
push
movsb
add
jae
and
lret
add
jmp
ret
dec
lret
lock
cli
dec
push
aaa
or
fimull
or
loopne
inc
sti
lret
xlat
dec
sbb
popa
inc
push
aaa
jmp
xchg
push
test
add
or
sub
dec
mov
xor
in
jle
and
push
mov
push
negl
xor
cli
xor
outsl
pop
or
push
loopne
ret
dec
mov
cwtl
lods
jl
add
push
out
pop
icebp
sbb
add
aaa
ss
test
divb
popl
scas
gs
fucomp
xlat
es
push
sub
adc
add
push
cmp
lock
mov
fs
fdivrl
lcall
fwait
add
or
mov
in
xor
jg
ss
loope
sub
mov
mov
xlat
fmul
hlt
cs
jae
shlb
stc
sbb
inc
stos
jbe
push
sti
sub
movsb
mov
mov
insl
mov
cmp
push
sub
lods
jl
out
pop
fwait
pop
decl
out
mov
sbb
scas
pop
aam
test
cmp
or
and
lock
insl
sbb
pop
lock
icebp
in
jecxz
loopne
mov
push
out
fnstcw
lret
pop
std
add
movsb
rol
add
sub
stos
jbe
pop
dec
jb
nop
pop
cmp
mov
add
je
nop
test
lds
push
fsubp
enter
xchg
xchg
push
or
incb
addl
dec
and
xor
test
xlat
outsb
stos
fmuls
imul
out
imul
pop
inc
into
fbstp
or
out
mov
lock
lret
call
or
repz
int
pop
mov
pop
cmp
int3
mov
nop
ret
cli
mov
cld
lods
dec
lock
out
mov
or
cmpsb
cmpsb
idiv
into
pop
dec
mov
xor
push
call
aaa
push
lea
pop
cli
ljmp
loope
dec
clc
jmp
xchg
xchg
jnp
rcrb
pusha
mov
and
in
ds
xlat
shr
push
je
incb
mov
fcoml
or
sub
mov
loope
insb
stos
push
outsl
push
inc
arpl
rcpps
xorb
daa
pop
jg
lock
or
xchg
ss
pop
xor
pushl
je
stos
cmc
ficomps
add
ljmp
or
or
mov
adc
dec
jecxz
adc
test
cmc
out
pop
push
cld
adcl
inc
and
push
push
cmpsl
bound
mov
mov
leave
dec
fcoml
in
pop
sbb
sbb
sbb
lea
push
or
arpl
push
adc
adc
int
mov
xor
add
push
pop
hlt
push
or
or
imul
ss
or
cmpl
out
lcall
jbe
pop
je
and
filds
jo
mov
push
xor
out
aam
loop
pop
push
dec
stos
subl
jno
cmp
loop
xor
test
pop
sbb
insl
ficompl
add
addb
add
mov
jae
or
repnz
sub
in
or
lret
xor
adc
adc
push
lock
mov
push
loopne
imull
add
enter
pop
xchg
dec
sub
dec
inc
imul
aam
pop
ret
bnd
sbb
or
fsubp
and
mov
sti
inc
adc
jge
inc
les
stos
mov
fimuls
push
sbb
xor
sar
pop
iret
cli
loope
pop
adc
mov
icebp
dec
add
clc
xchg
inc
sub
clc
imul
out
sahf
inc
adc
lahf
ljmp
in
lds
or
imulb
pop
add
jmp
movsl
pop
inc
roll
sahf
fcomp
arpl
jmp
loopne
lods
cli
xlat
push
jb
aas
jge
cli
jo
jl
and
inc
mov
mov
pop
adc
into
imull
int
aas
push
push
inc
mov
push
psubd
mov
and
cli
cmpsb
or
add
cmp
xor
loop
add
or
imul
stc
jle
lret
push
sbb
fcmove
scas
jae
or
incl
sbb
adc
loopne
sub
jecxz
cmpsl
or
xor
addb
lods
push
rorl
mov
lret
cltd
sti
test
push
fadd
std
sub
cmc
mov
in
test
pop
in
dec
mov
sahf
mov
rcrb
sub
rolb
pop
daa
pop
pop
adc
push
push
mov
sub
das
cli
mov
add
jo
stc
addl
ret
stc
cltd
cli
jae
or
lods
divb
sub
mov
mov
mov
sub
iret
in
pop
and
cmp
in
insb
arpl
xchg
out
inc
sbb
lods
jg
sahf
add
mov
pop
and
sti
enter
dec
xor
cmp
cmp
loope
mov
and
or
clc
dec
fmulp
cltd
mov
xor
clc
in
adc
fsubrs
mov
mov
loop
push
sub
loop
pop
aaa
fptan
mov
jmp
in
lret
add
scas
mov
cmp
neg
sbbl
sarb
mov
les
add
push
or
mov
ret
into
jg
add
mov
sbb
jl
sahf
jp
sbb
cld
sub
in
les
sub
iret
cwtl
cmp
stc
mov
dec
xchg
js
sbb
push
jne
ret
cwtl
test
loopne
adc
cmp
dec
es
sub
mov
inc
xor
sti
and
and
cmpsl
pop
mov
dec
fisubs
or
or
push
xorl
cmpb
xor
shll
fsubl
add
adc
fildll
sub
imul
fisubrl
lcall
cmpsb
sub
lahf
cmc
testb
cmpsb
push
loop
add
push
sbb
cmp
add
jg
ja
dec
and
and
mov
cli
mov
icebp
aaa
dec
inc
cld
pop
or
xor
ret
cmpsl
inc
call
push
pop
cli
test
add
sub
xor
into
jns
xor
dec
inc
xor
lcall
adc
adc
loope
std
aas
sbb
std
aaa
sub
std
mov
lods
add
mov
xor
mov
mov
testl
lock
movsl
loopne
sub
cmp
outsl
test
fnsave
hlt
hlt
jl
cs
inc
dec
jno
daa
test
sub
lret
or
jg
jae
cli
cmpsl
js
xor
mov
addr16
in
dec
repz
movsl
jb
or
test
shl
and
shrl
push
loop
push
scas
pop
or
jno
sbb
movl
das
and
xchg
adc
aaa
je,pt
ljmp
lcall
hlt
dec
aad
shll
call
ficoml
sub
push
cld
mov
xor
pop
rclb
dec
mov
fdivrp
pop
imulb
jge
hlt
movsl
pop
das
mov
fwait
rorl
cld
rcrl
push
mov
mov
xchg
push
sub
or
cmpsb
icebp
mov
mov
clc
aad
aam
insl
loopne
clc
shr
fsubr
insl
std
fs
out
jp
cli
adc
push
bound
push
pop
lock
fldenv
cld
pop
xchg
add
mov
cmp
into
xchg
and
cmp
dec
cmp
adc
pop
sub
loop
sbb
repnz
sub
xor
cmp
inc
sub
dec
ret
push
fildll
pusha
es
mov
hlt
jg
lock
ret
add
fwait
cmp
mov
lahf
add
les
das
xlat
sar
pop
mov
stc
fisubrl
mov
nop
cs
add
jb
mov
popa
out
shrb
cli
in
lock
test
adcl
sub
loope
aas
jbe
pop
sbb
ret
out
aaa
pop
clc
mov
in
cmc
push
fs
adc
sub
mov
out
loope
mov
or
xor
mov
iret
fmuls
pop
ret
or
out
cld
jg
stc
adc
ds
xor
cmp
dec
fidivrl
pop
xor
jns
jb
xor
or
leave
insl
mov
xor
pusha
dec
push
fdivrl
or
and
dec
iret
jb
inc
xor
mov
xor
jle
xchg
pop
cmc
sub
dec
or
sub
cmpsb
jg
in
cmpsl
ss
ss
or
xchg
scas
push
or
shlb
pop
adc
xor
fdivrs
mov
aad
in
pusha
inc
and
push
testl
jecxz
push
clc
push
inc
push
repz
into
arpl
mov
setg
bound
call
hlt
int3
insb
movsb
aad
dec
dec
cltd
fcomps
decl
clc
mov
inc
push
sbb
cld
push
ret
push
or
ljmp
jecxz
les
aaa
sbb
sub
cld
ja
inc
inc
popa
mov
pop
std
inc
push
dec
pop
imul
hlt
outsl
test
dec
push
in
shrl
push
jnp
das
push
incb
fldenv
orb
rcr
or
decl
pop
in
dec
aas
mov
fldt
in
ret
imul
clc
lcall
jg
in
push
ret
add
dec
push
adc
stc
sbbb
pusha
push
lar
jno
inc
inc
lahf
scas
xor
addr16
jmp
pop
dec
sar
or
xor
stc
ljmp
and
ret
hlt
ljmp
push
cltd
jmp
pop
adc
ljmp
adc
jb
fld
mov
jnp
pop
lret
les
loopne
and
inc
jge
fdivrs
incl
in
outsb
add
xor
inc
lret
push
jae
shlb
movsb
jmp
fiaddl
inc
ffree
sub
ret
ljmp
aam
loopne
gs
cmp
jns
adc
dec
loop
stc
bound
fdivl
inc
mov
add
xchg
push
fdivrp
pusha
adc
or
mov
pop
test
inc
fimull
sbb
fidivl
fldl
dec
loopne
jno
fstpt
push
out
dec
arpl
jb
pop
pop
pop
xchg
mov
mov
das
sar
fbstp
push
inc
stc
jmp
jns
add
aad
inc
push
movsb
mov
add
mov
jmp
stc
fisubrl
loope
in
ljmp
sbb
fdivr
pop
cld
nop
cwtl
fwait
or
loop
pop
idiv
ljmp
cmp
data16
cmp
jge
shlb
jmp
jnp
js
das
cli
in
pop
sbb
adc
pop
fucomi
mov
stc
inc
pop
in
out
jnp
or
loope
jnp
call
outsb
pop
je
inc
cld
pop
xchg
leave
adc
dec
sub
add
jp
pop
cmpsb
jecxz
in
sub
jg
sub
or
lds
out
clc
jle
adc
aaa
inc
cmp
jnp
inc
and
pop
xchg
in
loope
pop
ret
push
clc
imul
xchg
sbb
arpl
push
repz
pop
dec
ds
scas
add
sbb
out
dec
enter
mov
dec
outsl
xor
orl
adc
call
inc
lcall
ljmp
xchg
int
jp
inc
jns
adc
stc
push
mov
cmp
adc
dec
dec
sbbb
cld
jo
xor
outsb
pop
les
sbb
or
sahf
dec
or
pushl
xchg
jg
pop
cmp
testl
xchg
icebp
decl
mov
sub
loopne
jns
rolb
jl
subb
bound
cwtl
imulb
mov
outsb
loop
sub
out
inc
es
ja
inc
lcall
or
and
shrb
xor
loopne
xor
idiv
jmp
inc
sub
loopne
fdivl
ss
sub
stos
fimuls
or
clc
fcom
jge
push
stc
xchg
fisttps
pop
cld
jg
test
adc
imul
fists
repnz
shrl
mov
ljmp
jl
or
lcall
push
jle
arpl
filds
add
mov
inc
add
jecxz
je
jb
stc
out
mov
mov
lods
int
gs
adc
hlt
cli
outsl
add
fmuls
jecxz
pushf
test
incl
jno
or
jecxz
jmp
pop
popa
inc
loopne,pt
or
adc
insl
pop
pop
sub
movl
mov
dec
xor
jg
les
jecxz
jns
inc
mov
ljmp
test
inc
fstl
roll
pusha
or
xor
and
pop
fcoml
inc
js
xlat
mov
les
mov
mov
sbb
ljmp
add
or
sub
arpl
mulb
subb
dec
das
fildl
xor
sbb
aas
inc
push
popa
dec
and
stos
cli
inc
sbb
pop
jge
adc
pushl
movsb
cltd
adc
jbe
rcll
cld
lcall
sbb
mov
call
enter
adc
jp
inc
xor
fld1
int
or
mov
mov
lea
rorl
stos
jg
clc
sbb
dec
pop
adc
std
mov
lods
pop
out
out
pop
push
sbb
mov
lcall
cwtl
ja
xor
fimuls
out
xlat
shlb
js
xlat
cmc
jmp
dec
movsl
test
xor
iret
cmp
inc
jmp
mov
aas
sbb
jl
inc
cmp
xlat
cmpsl
cmp
sbb
jl
lock
xor
mov
add
in
cmp
aas
sub
and
lds
adc
push
cltd
and
aaa
inc
mov
lret
xchg
int3
fyl2xp1
inc
pop
lcall
ss
adc
clc
add
ljmp
lock
dec
sbb
sbb
jbe
sub
nop
or
mov
in
fadds
and
cmp
jmp
mov
faddl
cmp
lcall
decl
cwtl
xor
int3
and
repz
popa
pop
xor
cmpsb
xor
outsb
mov
outsl
icebp
or
mov
arpl
mov
mov
mov
call
test
add
sahf
add
xorl
in
shl
loopne
or
xor
sub
jmp
loopne
jb
push
add
sbb
xor
cli
mov
loop
aaa
mov
popa
testl
pop
pop
mov
and
cmpsl
xchg
loopne
xrelease
stc
and
and
xor
andl
into
cs
test
push
idiv
mov
enter
out
xor
mov
ret
ss
ja
cltd
ror
stos
sub
outsl
cmpb
nop
mov
add
mov
scas
or
hlt
xchg
sbb
cmp
popf
sbb
daa
jge
inc
fsubrs
repz
pop
xchg
aam
mov
lds
mov
xor
jne
popa
push
decb
inc
ds
loopne
jmp
jb
lods
ds
lock
bound
testb
jp
jl
inc
xor
pushl
cmpsb
cmp
test
imul
loop
adc
sbb
arpl
adc
sar
ljmp
xchg
sub
cmp
jp
pop
imul
dec
popa
mov
mov
sti
aas
cwtl
cmp
or
gs
notl
mov
cld
cld
mov
cmp
cmp
jecxz,pn
or
adc
or
dec
adc
out
adc
pop
sbb
pop
inc
rorb
mov
xchg
inc
sub
adc
ds
or
mov
xor
xchg
cmp
aaa
inc
outsb
cld
fcmovnbe
leave
xchg
cmp
dec
mov
ljmp
sbb
enter
cmp
inc
arpl
sbb
add
call
adc
pushl
mov
imul
enter
lret
adc
sub
mov
pusha
mov
pop
aas
push
push
push
scas
and
add
outsb
ret
mov
sub
incl
push
std
js
push
leave
fadd
add
and
cmpsl
sti
testl
mov
dec
adc
mov
push
aas
or
push
out
pushl
or
popa
jg
sub
sbb
fadds
js
pop
or
int3
loop
loopne
or
pop
fists
mov
cld
movsl
push
adc
pop
add
and
jmp
iret
xor
andl
dec
clc
inc
shr
lds
jns
aaa
or
aam
push
loop
dec
or
mov
cmp
out
pop
int3
mov
add
ljmp
inc
dec
sbb
push
inc
xor
outsl
xchg
lock
add
aad
out
cli
dec
pusha
sub
jle
notb
outsl
data16
mov
mov
pop
sbb
clc
sub
push
lock
cld
pop
mov
jl
or
and
call
cmpb
dec
ficoms
call
loop,pn
xlat
xor
inc
lock
push
adc
outsl
mov
mov
out
out
sub
insl
pop
sbb
pop
outsb
mov
or
jnp
jl
cli
decl
sub
push
fninit
fstl
pusha
jp
ficoml
icebp
outsl
cmpb
fwait
jecxz
bound
es
pop
out
lock
jns
jmp
adc
shrb
pushf
movsb
inc
loope
pop
cmp
movsl
sub
dec
push
dec
sti
cld
sbb
mov
pop
mulb
divl
aam
push
ret
sub
fsubl
iret
or
in
xchg
push
xchg
je
sbb
inc
insb
adc
or
les
inc
imul
pop
and
jns
sub
inc
loope
fsubl
sbb
inc
push
pop
aaa
call
aas
nop
pop
mov
leave
aaa
lret
xchg
ret
testl
lods
pushl
xor
es
inc
test
or
adc
push
mov
fucomip
aad
call
cltd
jecxz
lcall
mov
cmc
ljmp
into
stc
push
aam
adc
push
lcall
pop
dec
cli
sar
pop
cli
pop
decb
out
push
shrl
push
inc
fists
in
inc
fwait
push
xchg
sahf
call
repnz
int
adc
and
sub
dec
mov
add
push
lahf
mov
mov
stos
mov
dec
and
push
mov
movsb
push
lds
or
xor
xor
aaa
jne
aaa
push
fwait
std
lcall
lea
sub
mov
scas
sbb
xor
jl
pop
push
or
adc
stos
ljmp
push
ds
dec
test
rclb
test
inc
insb
pop
ret
lcall
ficomps
outsl
in
and
sub
popa
xor
hlt
dec
into
or
fucomip
inc
push
adc
stc
pop
in
clc
aas
inc
jmp
ljmp
adc
dec
scas
stos
mov
leave
cli
cltd
popf
les
push
cmp
cltd
cli
inc
adc
pop
lret
insw
aaa
add
mov
mov
dec
jno
mov
clc
push
or
pop
fsubr
xorb
pushl
pop
sarb
jnp
cmp
outsl
inc
pop
fsubp
cmc
clc
dec
scas
mov
movb
fadd
lea
pop
push
jae
pop
cld
inc
push
adc
or
mov
stos
xchg
push
xor
xchg
xor
mov
insb
jmp
cmp
cmp
xchg
push
pop
push
aad
or
out
roll
add
inc
mov
jg
int3
jnp
pop
and
and
repz
and
cmp
dec
pop
sti
push
outsb
stos
xor
sbb
push
mov
pop
frstor
lods
decl
roll
inc
les
sbb
out
adc
rorb
jle
inc
clc
ljmp
or
cmp
fs
push
dec
arpl
sar
sbb
sbb
inc
in
jl
mov
call
jg
xor
xor
jg
xchg
dec
ja
sbb
sbb
out
push
out
inc
loop
orb
enter
and
jp
pop
imul
test
sub
ljmp
pop
sub
adc
or
insl
out
inc
rcrl
sub
cmp
lds
sti
popa
jp
fidivrs
int3
push
fwait
jno
pop
ret
sbb
rolb
push
rolb
rolb
pusha
shll
loop
cmp
cmp
lret
idiv
call
jecxz
repnz
fldcw
mov
sub
jle
xor
fildll
inc
mov
dec
test
pop
add
push
loopne
rcl
popa
sub
dec
mov
sub
test
jg
jnp
mov
sbb
lahf
lahf
cmp
aaa
add
clc
or
pusha
out
aam
xchg
add
in
xor
sub
stc
addl
test
imul
arpl
loope
lods
jmp
add
jae
divb
pop
jnp
and
aas
ja
sub
and
add
ret
sti
popf
inc
mov
mov
push
loop
xor
and
sbb
dec
shlb
and
and
add
test
xchg
mov
sti
xor
push
mov
dec
clc
pop
jl
pop
xor
sub
push
mov
mov
pop
dec
xor
sub
inc
and
xor
sub
adc
inc
sub
inc
in
pop
daa
push
js
aam
xchg
inc
loop
pop
push
pop
ljmp
push
or
jecxz
gs
sarb
fists
push
ljmp
or
das
insb
jno
jo
or
or
cmp
pop
mov
ss
xchg
pop
lahf
push
xchg
and
aaa
push
mulb
pop
push
sbb
adc
call
or
jl
jae
mov
dec
bound
arpl
call
push
dec
cwtl
sub
jg
xor
dec
or
adc
mov
push
push
sbb
cmc
sub
mov
cmp
and
cmp
xchg
mov
ret
or
mov
clc
insb
mov
jno
das
stos
and
lock
lods
sub
xchg
pop
insl
inc
adc
inc
adc
sbb
repnz
dec
call
stc
shrb
mov
mov
or
rolb
sbb
dec
inc
lods
cli
pop
sub
stos
call
mov
dec
adc
outsb
or
pop
dec
lret
adc
lcall
cmpl
sbb
sti
movb
pop
lcall
cmc
xor
or
dec
ds
stc
jne
add
andl
sbb
jmp
jne
sbb
and
int3
stos
inc
jle
loop
push
pop
clc
inc
outsb
mov
test
add
das
sbb
push
add
cmp
mov
or
xor
bound
mov
sub
dec
inc
dec
mov
xor
inc
data16
outsl
out
push
or
xor
std
filds
out
adc
sbb
xor
jg
jo
jmp
push
add
addr16
xor
ds
jp
pop
in
adc
ds
push
aam
mov
dec
ja
lock
sbb
jns
lret
inc
js
fisubrl
add
outsw
sub
add
scas
scas
push
lock
lret
jo
and
ljmp
ret
dec
xor
pop
mov
sbb
inc
gs
xchg
es
dec
ljmp
jmp
fwait
dec
aas
aaa
push
fidivrl
and
cmp
lret
inc
dec
push
xchg
mov
int
outsb
adc
sbb
jbe
xor
repz
cmp
xor
jge
fildl
loop
sbb
xor
or
inc
cmp
push
mov
push
js
js
jo
lds
aas
xor
push
inc
jp
loope
or
lock
xchg
test
adc
stc
mov
dec
jg
in
adc
dec
or
in
insb
jb
ss
adc
icebp
ja
mov
out
push
popf
fidivrs
push
lea
jle
je
push
cmp
test
dec
std
sarb
sub
jno,pn
lock
push
mov
notb
or
mov
pop
xchg
jle
cmp
jmp
add
inc
jbe
xor
adc
sub
sbb
or
mov
and
sbb
sbb
pop
into
push
cwtl
js
xor
fwait
clc
adc
mov
sub
pop
test
dec
adc
add
and
outsb
xchg
push
les
test
xorb
and
inc
sub
sbb
xor
sub
xor
xor
adc
sbb
jmp
sbb
lcall
adcb
add
das
xor
or
aad
jno
lock
or
dec
test
mov
fldcw
inc
push
mov
xor
push
sti
and
dec
incl
push
lock
dec
add
or
fimuls
sbb
pop
dec
sarb
dec
or
mov
js
dec
les
imul
or
or
faddl
jge
arpl
mov
loop
js
hlt
lcall
adc
xchg
ret
loop
jmp
add
ljmp
decb
dec
into
out
movb
roll
leave
shlb
dec
decl
jo
push
or
adc
sub
data16
in
into
aas
ret
clc
das
in
mov
imull
sbb
in
or
incl
sarl
push
test
or
shll
jns
ljmp
loopne
cld
or
jbe
fstl
stos
jnp
decl
cs
mov
rorb
orb
lcall
clc
push
jle
sahf
mov
shlb
cmp
fmuls
adc
cmc
mov
sub
sbbl
xor
int3
pop
mov
ss
js
adc
dec
fistl
mov
mov
orl
dec
lcall
cld
xor
push
xor
jle
lahf
popa
js
cmp
push
mov
cmp
repnz
dec
in
dec
mov
lret
lea
xchg
mov
es
fdivrl
ljmp
pop
addb
mov
cmp
lods
dec
sub
inc
loop
out
sbb
out
pop
mov
mov
and
les
orl
lcall
aaa
aad
or
mov
mov
add
cld
sbb
cld
stos
out
or
jno
lret
xlat
xor
fs
test
mov
mov
les
cltd
jnp
mov
sti
xchg
sub
push
mov
cmpsb
int3
push
xchg
and
add
cmp
sbb
mov
sub
push
cmp
call
xchg
inc
in
or
out
adc
call
fidivrl
xchg
cmp
dec
jmp
test
mov
mov
mov
pop
pop
aam
lret
lods
dec
aam
cmp
add
cmp
push
push
add
add
or
iret
sti
nop
icebp
orb
pop
sbb
negb
cli
decl
jle
sub
sbb
test
inc
add
sti
lret
cwtl
push
cltd
sub
adc
push
hlt
jecxz
call
pop
push
sbb
lods
or
pop
cli
push
push
pop
add
test
and
dec
or
mov
jne
mov
in
xor
lahf
mov
popa
and
xor
scas
add
mov
push
push
mov
or
xor
outsb
shrb
scas
icebp
or
aaa
outsb
mov
mov
test
mov
mov
or
adc
mov
xchg
sub
test
fidivrs
adc
sbb
cmp
pop
dec
fsubl
cwtl
adc
xor
xchg
jecxz
push
js
or
xor
or
mov
enter
pop
aad
arpl
pop
aaa
movsl
cmp
stos
and
lods
sbb
sbb
dec
pop
xor
sahf
imul
fnstsw
addr16
les
in
imul
es
or
cmc
imul
pop
or
outsl
inc
sub
mov
cld
scas
icebp
adc
or
enter
pop
lock
pop
sbb
sahf
jnp
cmp
in
xlat
les
fisttps
loop
adc
aas
sbb
sub
dec
push
fisttps
cmc
pushl
add
sub
ds
adc
push
sbb
jmp
out
fistps
pop
pop
or
lcall
subl
je
mov
xor
test
incl
add
call
sub
xlat
and
pop
sub
icebp
jg
call
cmp
stos
call
xorb
iret
add
out
in
lret
add
mul
out
add
push
gs
jmp
pop
fisttps
repz
jge
stos
xchg
or
outsl
mov
cmp
aaa
invd
adc
jnp
inc
fs
lock
inc
shrl
inc
out
or
pop
insb
loopne
shrb
icebp
inc
loop
out
je
fdivl
out
sbb
cmp
call
add
clc
dec
jns
jp
int
pusha
jmp
mov
mov
sar
fyl2xp1
in
jmp
pop
gs
movaps
and
mov
xor
out
test
std
inc
push
xor
cld
fisubrs
cmpsb
lret
mov
ljmp
lods
sub
xor
sti
push
in
inc
jnp
xchg
sub
jmp
mov
fdivs
and
inc
push
repnz
jg
cmp
loope
enter
pop
adc
clc
stc
data16
xchg
adc
push
outsb
lahf
mov
cs
shlb
or
rorl
add
clc
push
push
jp
filds
test
sub
insb
jno
cmpsb
mov
inc
in
cmpsl
decb
push
sarb
jbe
gs
push
outsl
jge
inc
std
int
or
sbb
sbb
sbbb
filds
int3
inc
shlb
and
aam
mov
decb
dec
arpl
lods
jbe
lock
push
outsb
xor
popa
sti
sub
call
inc
jmp
out
push
sub
and
push
es
clc
or
int
js
bound
stos
adc
jnp
sub
push
push
ror
xchg
sbb
je
sbb
loop
xchg
mov
mov
mov
lds
add
aaa
movsb
sbb
adc
jnp
es
or
icebp
outsl
pop
decl
push
loope
jns
mov
sbb
and
fadds
sbb
jg
add
inc
rcll
fidivrs
leave
push
hlt
pop
pop
sbb
iret
pusha
dec
sub
dec
rorb
sbb
test
pop
mov
push
sarl
std
sub
call
add
inc
jno
sbb
aas
subl
inc
sbb
cmp
and
dec
jae
test
das
mov
jp
sbb
imul
xor
decb
sbb
in
push
pop
pop
out
arpl
js
mov
xor
enter
xchg
lsl
ja
inc
push
jb
push
jecxz
pop
push
adc
clc
inc
in
les
rorb
addb
in
pushl
jmp
cmp
push
movsl
loop
push
pop
imul
out
sbb
pusha
adc
aaa
out
fldt
dec
cmp
or
dec
mov
and
aam
xor
pushl
adc
imul
pop
dec
or
sub
mov
inc
scas
mov
push
cmp
je
pusha
inc
loopne
fs
and
inc
test
loope
xor
enter
mov
cli
xor
push
jmp
add
cmpsb
add
lcall
mov
jb
cmp
push
sbb
mov
in
push
fiadds
sub
pop
ret
push
mov
add
xchg
cmpsl
fnsave
cmp
fsubrl
sub
dec
jl
dec
or
add
jg
stos
stos
mov
cmpsl
inc
sub
insl
pop
cmp
inc
sbb
cs
fsubrs
inc
inc
push
je
jno
cmpl
adc
mov
jl
adc
loope
dec
call
push
test
jp
cli
add
add
mov
inc
add
sbb
adc
jmp
and
lret
dec
add
add
dec
std
test
add
inc
out
loopne
pop
and
cmp
and
sub
push
xor
ret
lock
enter
mov
and
mov
dec
push
sbb
or
push
pop
test
fwait
mov
jo
mov
daa
js
mov
filds
adc
inc
sbb
incb
pop
mov
xor
movb
pop
cld
sub
mov
scas
adc
cs
ja
js
sub
jg
and
dec
jg
fmuls
jl
sbbl
fistpll
mov
mov
sub
cmp
sbb
call
dec
cs
sbb
sbb
xchg
movsl
popa
and
ret
lods
mov
loop
adc
xor
dec
sbb
xor
clc
cmpsl
aaa
push
cwtl
pushl
xor
dec
and
das
mov
push
mov
add
xor
imul
lcall
or
jns
sbb
or
push
xor
xlat
mov
sbb
cmp
mov
jg
lock
fadds
das
lock
sub
or
addr16
stc
mov
testb
adc
call
pop
adc
hlt
aaa
or
mov
daa
inc
dec
ss
loop
or
mov
adc
adc
adc
and
cmp
adc
adc
lds
out
es
lahf
and
dec
cld
mov
xlat
cwtl
adc
ss
push
adc
mov
aad
pushl
aaa
push
fbld
pop
sbb
jmp
sti
xchg
fsubs
decb
push
mov
push
dec
push
and
inc
call
repz
adc
sbb
cmp
cmp
push
push
xchg
dec
mov
loop
push
mov
push
arpl
mov
addb
push
xchg
loopne
cs
incl
out
pop
and
sbb
cli
out
pusha
and
xlat
push
mov
and
frstor
inc
cmpl
sbb
xor
lds
sbb
stc
jno
push
jl
inc
adc
sahf
call
xor
sub
pop
dec
jg
push
xor
add
push
mov
lea
call
mov
fwait
xchg
xchg
faddl
in
ljmp
jmp
adc
in
xor
arpl
xchg
sub
adc
or
adc
xchg
bound
push
into
adc
fwait
inc
mov
adc
call
cltd
andb
add
jo
push
ljmp
adc
push
mov
cld
outsl
sub
jae
jbe
fs
push
mov
jb
xchg
dec
cmp
clc
clc
xchg
sub
mov
dec
scas
ljmp
clc
xor
mov
and
cld
fs
cmp
shlb
jg
lock
ds
fsubl
push
xor
nop
push
into
cmpsb
push
mov
jo
clc
int
dec
js
add
je
cmpsb
rol
call
lea
aam
inc
lods
and
push
ljmp
pop
stc
jg
lock
scas
mov
mov
push
iret
out
aaa
cmovg
dec
iret
mov
inc
dec
arpl
cmpsl
xchg
cmpsb
adc
aam
outsb
jb
pop
sub
pop
mov
stos
sahf
sbb
jg
mov
repz
leave
ret
idiv
push
jns
aas
jns
sbb
xor
mov
orl
hlt
pop
adc
nop
leave
insb
mov
cmpsb
sub
add
lahf
cmpsb
adc
sub
lcall
push
cmp
sbb
mov
dec
push
enter
mov
cmovne
cs
sub
cld
jg
add
std
add
out
cmpsb
xor
mov
js
jg
ret
pushf
lods
fnstsw
je
push
and
enter
push
push
mov
aaa
or
inc
jge
mov
dec
jb
js
repz
or
imul
jae
fwait
das
xchg
jo
jecxz
jle
fmuls
leave
or
and
xor
mov
call
in
pop
popf
sbb
xor
fdivs
xchg
testl
movsb
and
sbb
outsb
sbb
xor
adc
xchg
adc
jo
pop
mov
loopne
mov
push
and
data16
add
push
xor
les
adc
fldl
pop
jbe
mov
mov
mov
rclb
sub
jmp
insb
inc
lock
or
dec
or
call
sbb
sbb
jnp
cmp
ja
aas
fmuls
push
in
mov
call
out
mov
test
decl
jnp
inc
mov
out
xchg
sbb
inc
mov
in
sbb
out
jecxz
mov
adc
jle
addb
jns
dec
mov
xor
movsb
jg
push
cltd
bound
stos
popa
ss
rorl
lcall
gs
push
sarl
lret
pop
and
mov
push
pop
lret
scas
les
push
icebp
out
push
sub
jle,pt
lock
sbb
lds
add
clc
mov
fmuls
mov
mov
mulb
pop
xor
ret
inc
cmp
clc
or
sub
fdivs
xor
aas
jb
sbb
jbe
sahf
out
sub
pop
cmp
roll
xor
rorl
shl
add
flds
push
pusha
xlat
es
cs
fimull
mov
outsl
xlat
loopne
orb
sub
jne
mov
fstpl
jbe
fisttps
or
in
sub
jnp
das
pop
subl
repz
sub
sbb
pop
les
leave
cmp
ror
inc
out
jno
xchg
push
adc
sub
push
bound
loope
sbb
mov
inc
mov
mov
push
testb
incl
jbe
aas
push
flds
adc
scas
and
xor
mov
sub
lcall
sbb
punpckhwd
push
ja
mov
dec
add
aaa
aam
clc
cs
jae
inc
bound
fiadds
syscall
out
in
sbb
add
decb
jmp
push
das
subb
lcall
inc
fs
sub
or
add
sub
call
mov
repz
or
pop
push
lret
and
fists
and
jbe
outsb
arpl
cs
sahf
imul
mov
mov
push
add
push
push
add
or
and
test
mov
nop
cmp
and
lock
loopne
cmp
leave
lea
dec
cmp
and
sbb
lods
loop
or
jmp
cmp
add
jp,pn
sbb
pop
hlt
fsubrs
or
inc
sub
loope
add
mov
cwtl
add
mov
inc
sub
insl
clc
outsl
add
sub
fisubl
jb
add
or
dec
test
bound
xor
hlt
push
iret
sar
arpl
sahf
xlat
adc
sub
inc
inc
imul
aaa
outsl
mov
jns
mov
jnp
mov
hlt
pop
push
pop
or
jns
push
andb
repz
imul
movsl
inc
mov
jb
pop
shrb
aam
mov
pop
mov
ret
movsb
insl
pop
mov
ret
subb
cli
mov
into
mov
in
dec
xchg
add
ds
mov
test
push
dec
and
mov
scas
and
push
jmp
sbb
xchg
lods
xchg
sub
notb
scas
inc
xor
aas
int3
jmp
jecxz
cld
pushl
into
push
sbb
data16
lds
stos
sub
push
cs
filds
jle
stos
jno
or
sbb
sub
push
dec
aas
sbb
cld
call
jb
cmp
loopne
push
and
cli
shll
push
aam
rorl
lea
jmp
add
popa
loope
es
push
mov
js,pt
cmp
cmc
cmpsb
push
adc
mov
add
or
or
add
bound
sub
mov
int
inc
js
nop
xlat
and
sub
fistps
xor
pop
out
add
sub
pop
pop
mov
bound
sub
mov
inc
adc
inc
inc
call
push
mov
dec
fildll
ja
fdivrl
inc
jo
aam
or
push
cmpl
jle
pop
imul
jle
cld
pop
rcl
iret
js
mov
push
push
enter
das
mov
aad
pop
sub
movsb
lret
sub
fcompl
rclb
stos
xor
cmp
mov
adc
inc
fucomp
movsb
ljmp
sbb
sub
mov
sar
lahf
jbe
sbbl
or
mov
iret
or
push
and
sti
cmp
stos
add
aas
and
sbb
clc
repz
fstp
or
dec
movsl
jb
mov
mov
xor
push
and
jae
out
addl
add
loopne
out
pop
je
dec
in
sub
adc
lock
aaa
or
test
std
cmp
mov
mov
cmp
ficomps
xlat
mov
lds
insb
js
cltd
and
decl
in
adc
add
push
push
push
cmp
pop
add
sub
push
cld
divl
push
outsb
dec
push
imul
lods
aas
mov
push
cld
mov
pop
cli
pop
xor
jge
sti
ds
lods
ds
and
test
aaa
cli
ljmp
mov
mov
push
loopne
and
push
sbb
jnp
cmp
fmuls
clc
out
push
adc
bound
test
movsl
mov
movsb
or
cltd
sbb
repz
push
test
clc
mov
sub
xor
ret
idivb
pop
or
fidivl
in
scas
mov
out
push
or
ret
push
adc
add
lret
or
mov
xchg
mov
and
lahf
sub
jge
jecxz
pop
fsts
mov
adc
xor
xor
stc
or
popl
sbb
rol
stos
add
push
ficoml
mov
and
adc
ret
test
lcall
mov
loop
call
out
and
ret
fnsave
popa
cmp
inc
sub
pop
bound
das
das
test
jl
push
mov
push
rcr
cld
jmp
push
jae
lret
das
jmp
or
mov
incb
adc
sti
cwtl
pop
push
push
js
mov
loopne
pushl
xchg
js
jo
jnp
or
sbb
shrb
xor
icebp
mov
mov
jle
and
sub
sub
pop
cltd
mov
rclb
jmp
jg
and
push
jnp
loopne
sub
das
push
xor
mov
fdivs
xor
fwait
add
mov
call
loope
scas
cwtl
cmpsb
and
sub
mov
cmp
test
push
and
in
jl
pop
ret
mov
mov
sub
or
mov
and
addr16
lret
pop
push
fmull
and
stos
adc
jnp
orb
or
nop
sub
add
int
cmp
dec
test
jo
push
inc
shrb
mov
cli
shll
xor
orb
mov
aas
adc
and
lds
adc
dec
movsb
push
sbb
push
lods
jecxz
aaa
push
sub
pop
adc
dec
lods
push
mov
or
aaa
mov
aad
or
cwtl
dec
sub
mov
fadd
dec
insl
jb
std
out
cmp
and
push
scas
sbb
ja
xor
je
push
mov
insl
sbb
fwait
adc
mov
daa
out
ret
orb
push
adc
call
push
insl
xchg
movsb
add
jmp
add
and
lcall
lcall
add
mov
iret
jl
lahf
sbb
mov
aam
inc
xchg
inc
hlt
andb
jnp
ss
test
in
cmp
add
dec
loopne
mov
cmp
hlt
sbb
movsl
push
aas
adc
jbe
sbb
int3
mov
pop
aad
jp
cmp
cs
mul
sahf
adc
mov
and
repnz
aaa
sbb
or
push
lods
jle
sub
adc
sbb
fadd
xlat
das
mov
shl
js
mov
mov
push
cmpsl
or
int
adc
test
jb
cmp
adc
sub
int
test
loopne
cli
pop
ljmp
adc
or
xor
ss
jg
call
fwait
push
cltd
fcom
pop
outsl
add
xchg
push
mov
xchg
repz
mov
fmuls
sbb
mov
lods
cmc
js
out
sbb
jo
mov
inc
cmpsb
loop
jae
dec
jecxz
ja
cltd
scas
cs
dec
sarb
add
xchg
stos
shlb
push
xlat
cwtl
cmpsl
sub
jge
add
cmpsl
add
out
lods
cmpsl
leave
dec
pop
loop
scas
sbbl
cmpsb
out
mov
jge
lods
jbe
cmp
std
lcall
cltd
sub
ss
pop
in
xor
lods
stos
stos
mov
cmp
xor
mov
ret
fcompl
daa
pop
sbb
sub
daa
cli
sar
out
ret
repnz
push
fwait
mov
push
adc
leave
out
xor
int3
test
cwtl
icebp
jmp
pop
popa
loop
fnstcw
mov
or
cmp
in
jge
outsl
add
test
call
xchg
daa
or
enter
fwait
outsl
mov
mov
jno
fistl
pop
and
insb
pop
xor
mov
xchg
lods
lods
sbb
pop
xor
or
add
rorb
inc
adc
repz
aaa
pushf
xor
int3
call
add
adc
inc
xor
jmp
mov
jbe
dec
cld
imul
and
push
decb
movsl
es
jb
add
ret
in
fwait
pop
test
mov
aas
or
out
adc
sbb
cmp
das
jo
jae
xor
mov
shrb
sbbb
call
xchg
test
dec
pop
mov
inc
aas
aas
shlb
add
xor
incb
or
sub
out
and
test
mov
sbb
lahf
add
cs
cli
mov
and
jmp
adc
cmpb
enter
loop
lock
mov
dec
adcl
inc
or
in
or
add
sub
ret
pop
sub
mov
lcall
push
jne
push
or
daa
push
and
push
imul
icebp
cld
out
xchg
push
sub
mov
in
lret
loopne
loop
cmp
loop
add
nop
out
sar
fistpl
inc
jge
xchg
push
ljmp
dec
mov
ret
mov
push
lahf
push
jecxz
lret
jl,pt
push
push
sbb
lea
cltd
xchg
jmp
mov
int3
cmp
in
sbb
rorl
int3
repnz
cltd
sub
mov
or
les
scas
adcl
pop
out
push
faddl
push
adc
pop
add
cmc
or
push
outsb
dec
adc
cld
cmpsl
sub
mov
mov
rclb
pop
add
or
mov
sub
lds
or
mov
sbb
inc
out
xor
hlt
mov
stc
cmpsl
add
adc
adc
jg
int3
pop
dec
or
mov
cmpl
push
clc
ja
shlb
loopne
pop
adc
sbb
or
sub
xor
xchg
push
decb
adc
mov
push
xor
pop
mov
or
sbb
xchg
ljmp
push
push
mov
dec
sbb
loopne
leave
sub
push
inc
data16
xor
pushf
ret
in
jb
adc
sarb
lea
sub
icebp
popf
sub
xor
das
sbbb
jmp
pusha
es
mov
cmp
repz
ret
or
xor
add
js
test
sub
inc
or
mov
iret
lret
and
cmp
xor
mov
push
xchg
add
sbb
jg
mov
rolb
lahf
push
lcall
mov
leave
ret
xorl
add
cmp
movsl
sarl
sbb
enter
jo
call
add
pushf
pop
xor
cmp
lcall
shll
or
or
sbb
test
adc
je
pop
cli
cmp
jg
fcmove
add
fistps
dec
push
xor
stc
cmp
fwait
aas
ret
cltd
jnp
ficomps
xor
scas
pop
and
outsb
add
cs
jns
jg
adc
dec
cmp
fistpl
negl
mov
and
mov
hlt
cmp
loop
mov
fld
mov
cld
pop
and
and
fisttps
into
jp
imul
add
repz
test
inc
xor
loope
sub
jmp
fadds
cmpsb
or
std
in
cld
clc
data16
sub
lahf
jle
sar
mul
and
pop
xchg
and
aas
xor
mov
lcall
ss
cmp
add
test
out
outsl
add
mov
sub
popa
fdivrs
sub
or
aaa
and
mov
pop
cmp
pusha
mov
xchg
push
xor
ret
or
xor
xor
cmc
in
mov
adc
push
or
jns
and
pop
lods
rol
js
push
or
lcall
jg
add
push
outsl
jns
xlat
rclb
jmp
mov
cmp
dec
pop
dec
xchg
addl
push
inc
lock
fstps
inc
pop
mov
xor
jns
das
cmp
dec
add
push
dec
dec
pop
test
int3
ret
ds
adc
jbe
cs
mov
loopne
xor
lret
xchg
sbb
movsl
cmp
out
roll
fwait
jge
sub
jg
or
clc
hlt
sbb
add
lret
sub
call
out
daa
hlt
incl
add
fadd
xchg
cmp
push
pop
jge
notl
dec
movsb
loop
sub
scas
imul
jg
sub
fwait
inc
jp
push
inc
sub
aam
adc
sub
incl
sub
out
pop
mov
adc
jmp
orb
int
shll
or
xchg
ret
jae
add
lcall
cmc
loope
mov
or
push
lret
outsl
adc
push
cmovno
adc
rcrl
mov
mov
jp
hlt
ret
mov
or
inc
mov
xor
adc
clc
insb
cmpsb
adc
add
fwait
enter
push
rcll
fwait
pushf
rcrl
and
cld
call
mov
test
cmpl
push
daa
or
in
cmp
xor
or
pop
pop
xor
sub
in
push
mov
loopne
inc
ljmp
lds
sahf
leave
lret
jns
insl
or
xor
bound
cltd
leave
inc
std
cmp
sub
ljmp
adc
movsl
pop
mov
pop
popa
arpl
xchg
push
mov
and
inc
incb
aaa
pop
pop
xor
and
jp
mov
lcall
insb
out
aam
xor
adc
xchg
pop
dec
pop
xchg
in
mov
adc
insl
cmp
scas
add
out
es
or
fcoms
ffreep
ss
sub
mov
cmc
decl
das
les
or
cltd
dec
jg
mov
push
inc
lret
cmp
loopne
lcall
movsb
push
adc
fwait
or
sub
mov
pop
adc
loop
pop
aam
sbb
pop
mov
int
xchg
fsubr
scas
rorb
adc
fs
mov
push
add
inc
hlt
lea
jp
jg
jg
mov
jge
xchg
mov
nop
sbb
and
adc
xor
aam
mov
cli
xor
sbb
adc
mov
int3
xchg
ja
icebp
mov
dec
pop
add
loopne
mov
pop
adc
pop
or
jmp
add
aas
lods
mov
je
leave
lds
mov
ljmp
ljmp
cmp
mov
push
cmp
js
xchg
imul
push
loopne
mov
dec
mov
mov
pop
jo
xchg
cmpsb
and
in
mov
push
sub
sarb
or
dec
mov
fcmovnu
shll
ss
inc
inc
enter
dec
ja
xor
inc
inc
adc
push
or
sti
pop
ljmp
xor
cs
fsub
imul
cmc
fstpl
inc
lret
or
pop
in
or
mov
push
jg
inc
add
dec
dec
add
mov
add
test
dec
sub
jg
sub
add
in
ljmp
adc
lds
mov
or
sub
fisubrs
mov
aaa
and
cmp
sub
cmpsl
xlat
mov
jle
xchg
int3
test
rol
std
ja
fcoml
add
movsl
pop
xchg
sub
dec
test
enter
xlat
push
cli
mov
adc
jno
add
arpl
fsubr
jl
lret
cmp
std
fwait
sbb
ret
lcall
loope
mov
and
mov
add
sarb
cmp
loope
pop
xor
cltd
sti
lret
into
popf
jno
popf
les
adc
orl
xchg
bound
push
movsb
nop
mov
push
das
ret
mov
push
cmp
jg
scas
lret
fildll
xlat
add
movsb
and
scas
call
mov
sti
dec
fstpt
js,pn
xor
mov
cltd
call
and
sub
push
je
mov
aas
adc
xlat
mov
sbb
je
pop
mov
xchg
sub
inc
pop
push
aad
sub
jnp
stos
mov
das
sbb
out
or
mov
rcr
outsl
incb
cmpsl
pop
xchg
sub
orb
test
les
shrb
inc
bsr
sub
pop
sub
pop
cs
bound
std
incl
sub
popf
movsb
fs
jb
push
or
mov
adc
inc
lea
jecxz
xchg
xor
sub
cmpsl
xor
push
or
ffreep
iret
mul
pop
push
or
dec
or
mov
nop
mov
inc
es
repnz
xor
push
popf
lods
aam
jg
xchg
cld
iret
add
neg
cmpb
inc
adc
mov
pushl
repnz
push
or
jbe
arpl
mov
xchg
scas
mov
mov
adc
lcall
les
out
sti
dec
loope
test
cmp
enter
jge
add
or
dec
jp
rolb
cmpsl
pop
or
xor
shrl
jmp
jecxz
dec
loop
cmp
add
lret
cli
xor
outsl
out
add
aad
sti
lock
xor
dec
mov
mov
aam
jecxz
or
xor
repz
pushf
leave
rolb
ret
js
loope
call
xchg
enter
adc
insb
loopne
int
push
dec
sbb
scas
push
inc
push
leave
sbb
xor
adc
dec
out
into
sub
push
sbb
or
pop
and
sbb
xorb
nop
pop
xchg
pop
xchg
or
inc
loop
adc
push
inc
repz
js
sub
fistps
and
aas
push
push
sbb
jb
mov
sub
rol
sub
out
ljmp
xor
iret
jl
aaa
add
outsb
push
scas
xchg
adc
mov
mov
jnp
xor
inc
sub
xchg
leave
jne
clc
incl
daa
mov
xchg
fisubrl
sbb
jnp
aas
add
dec
and
or
pop
sub
xor
fnstcw
inc
cwtl
shrb
xor
popa
addb
out
lcall
sbbb
dec
xor
sub
aam
push
scas
ret
es
fisubrl
imull
add
or
pushf
add
and
mov
rcr
mov
and
sub
decl
int3
mov
xor
xor
push
cmp
add
pop
push
xchg
sbb
xor
movsl
sbb
jg
out
arpl
repnz
test
nop
fmul
js
mov
mov
lock
jmp
or
or
cmpsb
insb
cmp
add
mov
add
pop
outsl
xchg
dec
add
xchg
stc
mov
jmp
test
sti
in
add
sbb
adc
cmpsl
push
sbb
loope
push
mov
aam
sub
or
out
push
cmp
inc
int
test
xchg
and
pop
roll
bound
xor
add
mov
lock
and
decb
pop
cs
aad
jg
sub
iret
ja
sti
outsb
add
pop
mov
cwtl
mov
pop
add
mov
mov
scas
ret
sub
mov
xor
aaa
scas
xchg
adc
sbb
js
jecxz
add
cmp
jmp
adc
cld
pop
aaa
or
clc
cwtl
je
xchg
lcall
adc
xor
and
std
dec
cwtl
les
sbb
add
hlt
pop
sbb
repnz
insl
lcall
nop
rcr
leave
cmp
and
sub
dec
mov
inc
adc
mov
pop
fsubs
cli
outsl
mov
sub
data16
adc
sbb
cwtl
stos
int
fisubrs
sbb
sub
loop
sub
aam
sub
mov
mov
cld
mov
and
movsl
mov
mov
mov
xor
ret
and
ret
lahf
fbld
fidivrs
mov
aas
mov
pop
fldenv
sbb
jno
fiadds
dec
call
clc
mov
in
imul
jmp
ret
mov
mov
mov
adc
fwait
rcrb
pop
or
cli
cld
xor
xchg
push
and
rorb
push
iret
fwait
adc
dec
cli
mov
pusha
sbb
pushf
mov
mov
sub
loope
mov
mov
test
pop
add
ds
hlt
jg
pop
sbb
es
jb
repnz
fwait
xlat
xor
add
out
popf
inc
shll
sbb
mov
imulb
fidivrl
rcll
lods
shll
xchg
movsb
or
mov
pushl
sub
fcompl
popf
push
mov
lods
xchg
popf
mov
ja
add
movsl
sbb
ljmp
scas
mov
out
mov
iret
stos
loope
lock
pop
icebp
and
pop
cmp
fwait
je
aas
xor
xchg
xor
scas
sbb
test
lock
mov
push
or
pop
jg
scas
dec
or
icebp
push
mov
cmpsl
shlb
add
bound
jo
cld
das
out
xchg
pop
lods
ja
sbb
sbb
add
xor
xchg
pop
sub
aam
mov
add
sbbl
hlt
or
add
jecxz
daa
jbe
pushf
and
or
jae
repnz
js
add
loopw
jp
sub
mov
xlat
mov
sub
ret
or
push
fisubrs
mov
mov
pop
lock
dec
mov
adc
push
lcall
lcall
mov
and
outsl
addb
loopne
lods
aam
lock
hlt
xchg
fstps
xor
hlt
std
loop
add
pop
fbstp
cwtl
fdivr
fcoms
mov
and
test
test
jecxz
aam
mov
leave
and
das
mov
cld
loopne
cli
add
xchg
mov
adc
mov
das
and
push
pop
jmp
lods
out
pop
lea
sti
pop
lea
and
das
scas
push
pop
mov
fstpt
aaa
pop
xchg
adc
cmpsl
jnp
outsb
inc
dec
cld
leave
imul
aam
mov
adc
add
sub
add
xor
dec
sbb
pop
sbb
loope
cmp
adc
mov
push
mov
pop
mov
lds
lcall
test
jp
imul
js
adc
adc
movsb
sub
leave
cmp
pop
sub
mov
pusha
mov
jg
out
in
insl
and
bound
jns
adc
lods
adc
mov
lods
xchg
decb
jle
in
sbb
adc
sub
pop
pop
jmp
insb
cwtl
je
in
mov
icebp
clc
movsb
iret
negb
inc
and
rcrb
scas
aam
push
dec
cmc
repnz
cwtl
sub
sub
sub
aaa
add
mov
rcll
inc
add
rcrl
loopne
or
arpl
outsl
lcall
cld
cli
andb
add
mov
dec
inc
jge
pop
dec
lds
pop
jbe
out
dec
les
rcll
push
push
pop
test
jg
mov
loope
bound
add
mov
jb
adc
dec
cmp
ja
lahf
jae,pn
adc
fld
and
orb
adc
jbe
mov
push
jae
out
cld
or
add
daa
xor
xor
test
push
push
inc
jge
pusha
adc
adc
inc
fs
loopne
jg
sub
dec
mov
jp
ficoml
and
mov
aad
daa
loopne
or
stos
and
sub
outsb
out
add
icebp
aaa
lret
cs
or
pop
fs
push
divb
cli
jnp
pop
ja
sar
int
imul
or
push
call
cmp
icebp
xchg
xchg
xchg
inc
sbb
xor
sti
ficomps
pop
loopne
nop
or
push
outsb
icebp
sub
sbb
push
add
and
decl
insl
pop
sub
or
xor
sub
pop
xlat
call
call
das
je
cmp
adc
sbb
sub
subb
cmp
pop
jo
test
gs
push
dec
imul
adc
pop
pusha
sbb
nop
jecxz
addr16
test
cmpsb
icebp
decl
mul
aad
clc
lret
pop
pop
xor
and
aaa
pop
lds
sub
sub
test
mov
out
sub
add
and
mov
stos
xchg
adc
aas
mov
push
xor
das
outsl
pop
ficomps
sbb
and
dec
shll
or
mov
in
bound
xor
sbb
add
pop
les
jb
leave
mov
xchg
mov
or
push
xor
ret
pop
adc
xor
aaa
cmpl
and
scas
mov
lahf
icebp
mov
push
aaa
mov
icebp
push
mov
xor
jle
mov
fwait
or
add
pop
add
lock
hlt
push
mov
fmull
or
inc
iret
mov
dec
mov
rorl
loope
jl
clc
mov
loop
cltd
ficoml
mov
add
cmpsl
add
jl
jl
mov
fs
addl
fcmovnb
lods
sub
mov
or
leave
push
or
pop
inc
xor
aaa
call
call
sub
xor
and
xor
mov
pop
mov
scas
lret
in
mov
inc
stc
or
mov
sub
ljmp
push
add
lods
xlat
pushl
call
ds
test
push
jmp
add
inc
ror
out
enter
pop
push
decl
addb
in
movsl
popf
adc
mov
lea
add
jmp
xchg
ss
loope
daa
fcoml
lock
push
sbb
decl
leave
leave
dec
in
loop
ret
xchg
aad
mov
and
scas
add
cs
xor
mov
mov
daa
in
mov
call
sub
adc
adc
pop
rcrb
pushl
adc
cltd
int3
das
enter
mov
fwait
and
inc
repnz
fbld
push
in
pop
sbb
fidivl
cmp
pop
call
incl
push
jp
jle
jmp
scas
cmc
sub
jle
mov
sub
mov
sbb
es
dec
sub
fcomip
dec
adc
jecxz
insl
in
sar
jge
cmp
xchg
lock
inc
into
cltd
push
mov
lods
clc
lds
test
mov
loope
jae
jnp
push
lock
push
ficompl
jge
xor
incl
push
insb
fsubp
add
pop
lret
cmp
add
mov
sub
dec
outsb
sub
cld
and
sub
and
cmpsb
cmp
jnp
call
sub
in
pusha
inc
lcall
adc
add
scas
push
jle
cli
xor
movsb
std
xchg
nop
sbb
xor
fdivl
mov
pop
test
mov
dec
sub
adc
nop
or
mov
int3
pop
cli
out
stc
or
push
and
leave
push
insl
adc
push
sbb
stc
popf
cmp
push
inc
inc
insb
pusha
xor
cmp
inc
lcall
fs
and
and
in
int3
js
fcomps
scas
xor
and
and
roll
int
int
inc
in
sbb
stos
and
push
cmp
call
sub
mov
into
or
jmp
push
xor
daa
adc
fdivrl
cli
repnz
out
gs
and
xchg
adc
pop
inc
lds
jl
lretw
xor
or
sbb
rcl
loop
mov
xchg
mov
rorl
shlb
cmp
add
add
stc
inc
ss
test
pop
mov
jl
sbb
daa
sbb
push
mov
arpl
sbb
push
clc
adc
mov
das
insb
dec
hlt
aas
es
mov
fldenv
xor
vpunpckldq
ss
or
or
movsl
outsb
sub
pushw
jp
cmp
cmpsl
arpl
lcall
adc
fsts
mov
sti
sub
rcrl
cld
push
ret
inc
or
mov
push
adc
cwtl
out
hlt
ja
fisttps
dec
testl
addr16
lret
test
ret
dec
ret
add
adc
fisubrl
ja
xchg
mov
mov
ljmp
aaa
push
xchg
cmp
fidivs
dec
sbb
dec
loopne
cli
loopne
or
loope
fsubl
jp
iret
shr
lods
add
lret
fadd
push
lock
push
jmp
pop
push
dec
movsl
or
xchg
cmp
xor
loopne
test
cwtl
jge
in
hlt
cmpsb
icebp
movl
imul
xor
pop
sub
jns
sbb
ss
scas
iret
jle
js
xchg
mov
pop
push
pushf
sub
or
cmp
std
jno
xchg
sbb
push
sub
jb
add
leave
call
pop
ss
dec
std
or
xor
fisubl
xchg
shrl
pusha
xor
psubw
adc
or
ss
dec
lcall
imul
daa
test
jns
mov
sbb
outsl
clc
incl
add
test
shlb
push
bound
add
or
int3
jb,pt
call
jae
add
out
sbb
cmc
std
cmp
xor
gs
aaa
push
shrb
loop
adc
es
enter
or
jmp
dec
int3
nop
pop
lcall
dec
xor
sub
loop
push
iret
testb
mov
pop
or
add
or
shll
daa
pop
outsl
hlt
adc
sbb
mov
pop
lock
rol
incl
or
lret
mov
inc
clc
fistpll
lea
pop
pop
mov
cmpsl
inc
int3
ja
dec
dec
decl
mov
add
call
xor
sub
inc
daa
cmp
addr16
cwtl
cmp
xor
add
jg
push
sub
push
repz
pop
xchg
sbb
jb
xor
clc
xchg
arpl
sub
fidivs
das
and
fucomip
sahf
inc
ret
jne
mov
fstp
andl
les
call
fbstp
stos
xchg
or
std
dec
push
jno
aas
or
test
movsl
test
pop
mov
or
je
jecxz
insb
inc
aas
incl
stc
inc
js
and
clc
pop
pop
sub
call
jecxz
adc
push
add
cmpb
mov
into
cmp
js
mov
repz
ds
inc
jno
movsbl
rclb
xchg
into
addr16
mov
push
inc
inc
std
int
jle
inc
sbb
popf
insl
les
sbb
add
pop
pop
jae
lret
dec
sbb
scas
fstl
es
lock
cwtl
loopne
cli
scas
jno
scas
lods
pop
jb
pop
jge
loopne
mov
ss
imul
xchg
xchg
inc
or
push
jge
push
sti
cmp
fwait
ror
sbb
addl
and
daa
cmp
or
clc
imul
dec
pop
push
inc
dec
add
sbb
jnp
ljmp
add
sub
inc
cmp
call
cmp
sti
ljmp
xor
add
in
out
adc
cli
adc
push
lock
jmp
shrl
enter
jno
jb
inc
insl
mov
adc
or
int3
jae
mov
jns
push
daa
test
rcr
adc
aad
dec
ljmp
nop
pop
adc
mov
in
loop
popa
out
xchg
dec
push
mov
lods
push
sahf
outsl
stos
cmpl
fdivp
scas
loop
mov
hlt
aam
lods
hlt
clc
test
loop
inc
mov
mov
fstpt
inc
pop
cmp
xor
ss
cmpsl
sar
fcompl
fistl
push
mov
xor
xchg
and
mov
cmpl
inc
loopne
ds
clc
cmpsl
dec
cld
pushl
cwtl
out
or
movl
sti
xor
add
out
adc
xor
xor
sbb
cmp
fcomip
arpl
add
int3
outsb
mov
in
push
pop
ljmp
dec
mov
dec
gs
mov
pop
fbstp
inc
iret
je
inc
test
and
ljmp
and
adc
lret
inc
adc
incl
push
jp
sbb
mov
aad
aad
dec
addl
shlb
roll
ljmp
call
ljmp
loopne
and
ljmp
imul
xchg
dec
adc
scas
out
fstps
cmp
mov
jae
jns,pt
test
xchg
jo
scas
and
dec
or
daa
push
pop
dec
aad
dec
leave
enter
clc
call
arpl
inc
and
pop
lret
imul
cmp
roll
and
and
pop
aas
mov
loope
cmp
insl
sbb
in
jg
test
adcb
or
fmul
arpl
cwtl
sub
adc
fbstp
xor
sub
pop
dec
jecxz
das
jmp
add
cmp
lcall
hlt
pop
sub
mov
push
insb
in
or
and
add
pop
das
fcmovne
cld
scas
add
push
cs
call
jns
roll
sbb
sub
aas
push
sub
loopne
adc
out
mov
pop
in
jl
out
jp
xlat
pop
cmp
clc
sbb
or
sbb
pushf
jb
ljmp
or
data16
push
and
cmp
aaa
push
or
xor
mov
shll
or
int
sub
shrb
mov
stos
jle
adc
jecxz
jns
jbe
cmp
rcrl
mov
inc
mov
add
push
stc
push
nop
mov
mov
cmp
js
inc
into
sub
lds
pushl
and
pop
fs
add
adc
cld
jg
pop
ljmp
xor
cmp
adc
fldl
sub
pushf
push
push
mov
add
or
push
fs
mov
lds
mov
sub
test
shll
lock
outsb
sbb
inc
push
or
repz
adc
jo
lods
lods
sti
mov
jg
aam
push
and
or
enter
divb
sbb
mov
lock
into
or
cmp
pop
pop
adc
cmp
call
mov
dec
mov
mov
mov
pop
outsl
test
ljmp
daa
push
cmpsb
clc
aaa
fwait
or
jae
cmp
and
push
push
inc
sub
insb
int
shll
xchg
not
push
cmp
pop
aam
adc
dec
sbb
push
mov
lock
loop
adc
in
cmp
xor
fildll
cmp
sbb
cmp
sbb
pop
in
or
sbb
inc
daa
pop
adc
sub
pop
mov
dec
xor
sbb
orb
insl
or
pop
in
cmp
lret
cmp
xor
sar
xor
ret
push
inc
cmp
and
ficompl
fwait
ljmp
push
cmpsb
and
cmp
shrb
arpl
sub
xor
mov
xchg
leave
shlb
inc
loope
push
and
sub
scas
add
push
call
stos
adc
add
test
mov
and
mov
insb
scas
bound
push
call
or
mov
add
pop
das
clc
fnstsw
mov
xchg
or
js
add
adc
pop
fs
cld
sbb
fstpt
sub
and
ret
xchg
ret
test
nop
push
mov
mov
sahf
xchg
enter
je
aaa
sbb
mov
jo
lcall
adc
js
rcrb
mov
testb
fwait
cmp
dec
mov
insb
lret
cs
shlb
adc
fdivrs
decl
loop
stos
icebp
adc
jmp
js
xchg
sub
pop
cmp
fwait
lods
jo
sarb
mov
inc
sub
mul
push
iret
adc
lea
repnz
add
cld
add
cwtl
rcrb
sbb
cmp
outsb
dec
addr16
jg
decl
out
xchg
dec
arpl
push
cmp
test
sbb
outsl
push
xchg
inc
xor
incl
imul
push
and
lea
out
xor
decl
cli
aas
fadd
int3
lea
int3
jne
fucomip
sub
fisttps
mov
push
js
stc
aaa
push
pop
hlt
or
stos
fs
mov
imul
jl
shll
in
mov
mov
adc
cmp
mov
je
pop
out
pop
and
dec
into
inc
cmp
in
cmp
jp
mov
shl
cmp
cli
mov
dec
fbld
call
cmp
sub
xlat
sbb
repnz
add
ret
fmull
loop
enter
inc
cmp
popa
fst
gs
call
pop
mov
push
aad
jmp
pop
pop
inc
pop
sbb
fnstenv
in
iret
out
push
lods
push
push
sbb
ds
or
jl
mov
xlat
cli
sub
push
pushf
ficoms
or
roll
mov
sub
mov
int3
mov
pop
adc
pop
sub
and
xor
adc
leave
ret
rolb
rolb
inc
xor
cmpb
cld
or
fstl
jbe
std
xchg
cmp
cmpsb
pushf
ljmp
pop
or
push
lock
adc
xor
pushl
adc
fs
xchg
or
xchg
sub
mov
int
mov
push
outsb
jbe
push
rolb
jb
xorl
sahf
jmp
add
cmp
cmp
mov
and
push
inc
cmc
sbb
and
lcall
shlb
enter
lods
pop
add
aam
mov
jg
or
or
data16
mov
loopne
bound
mov
mov
sbb
jo
adc
pop
pop
add
sbb
and
mov
xor
gs
xor
jo
pop
lea
mov
arpl
adc
xchg
movsb
mov
add
aas
sbb
iret
jle
sbb
mov
mov
mov
mov
mov
cmp
clc
fs
ja
js
pop
pop
dec
add
subl
mov
adc
fcmovu
pop
xor
call
int3
mov
or
or
cmpsb
mov
adc
add
out
call
test
sti
cmp
cld
fwait
or
test
stc
in
out
cmp
add
fstps
pop
fadds
incl
add
pushf
pop
adc
in
loope,pn
loopne
ljmp
ds
push
jecxz
das
or
bound
and
mov
and
ss
push
jp
jecxz
adc
mov
xor
int
dec
les
int
fimuls
or
lahf
inc
inc
popa
loop
adc
adc
and
je
sbb
and
jle
push
mov
fcompl
sbb
adc
out
clc
call
add
leave
or
cmp
outsl
std
roll
outsb
sub
scas
std
sub
push
mov
fisubrl
adc
aam
dec
dec
inc
push
sahf
out
cwtl
data16
jae
lods
and
fisttpl
cld
loopne
or
pop
xor
rclb
jae
dec
jl
lahf
push
cmp
rorb
add
aam
std
mov
mov
pop
jno
repz
js
mov
pop
ret
mov
mov
gs
sbb
push
and
bound
in
js,pn
push
aam
push
add
in
imul
cmpsl
test
inc
jge
xchg
ljmp
mov
aam
int
popa
mov
clc
pop
call
mov
mov
sub
loop
cld
stos
subl
cli
xchg
cmc
xchg
gs
or
xchg
sti
sahf
sbb
mov
sbb
rclb
mov
mov
cmpsb
stc
insb
cwtl
aaa
mov
outsl
mov
lahf
out
imul
pop
flds
or
push
pop
mov
adc
dec
sahf
jbe
cmpsl
sti
add
jno
test
cld
call
idivl
sub
xchg
lock
and
sbb
jp
pusha
xor
mov
push
mov
or
mov
je
fadd
outsl
xor
jecxz
movsb
lret
test
loop
mov
dec
ret
inc
or
dec
fnstcw
cld
lods
aad
xchg
testl
xchg
lods
mov
pop
insb
jl
sbb
js
ja
inc
incl
frstor
fld1
stos
cmp
mov
mov
cmp
push
int
pushf
push
aaa
sbb
rorb
daa
inc
mov
adc
dec
jecxz
pushl
fs
add
rclb
stos
jns
jo
mov
add
sbb
xchg
pusha
mov
out
mov
sub
and
cmp
scas
movsl
ljmp
pop
daa
mov
negl
scas
jo
mov
cli
decl
inc
push
jno
fwait
adc
icebp
into
or
dec
and
pop
pop
push
or
decl
jmp
jge
inc
hlt
mov
or
inc
ficoml
stos
pop
mov
add
sub
test
out
mov
bound
cmp
aam
jg
sbb
and
push
xchg
dec
in
xchg
das
test
inc
push
test
mov
pop
mov
aaa
cmp
push
ljmp
add
movsl
xchg
jge
jmp
push
into
sbb
in
mov
cwtl
mov
mov
jne
lcall
bswap
shld
pop
or
push
loope
stos
mov
cmpb
nop
push
inc
incl
cli
push
nop
jns
addl
lcall
int3
repnz
cmp
adc
adc
cli
repnz
jmp
sbb
mov
fisubl
xchg
pop
jns
ret
sub
aaa
std
inc
daa
and
inc
in
xorb
jbe
xor
dec
stos
dec
jns
incl
test
ss
mov
inc
sub
mov
iret
ds
xchg
pop
lods
outsl
dec
cmp
push
iret
push
sbbb
pop
adc
ja
ljmp
or
loope
mov
or
fdivl
cmpsb
inc
xor
test
sub
push
cmp
xchg
sbb
shlb
dec
arpl
mov
std
and
push
cmp
lcall
and
test
scas
push
mov
jmp
scas
nop
adc
imul
lcall
xchg
mov
push
test
pop
xor
jmp
mov
adc
add
test
sub
and
jbe,pt
test
mov
fcomip
cmpxchg
xor
out
pop
mov
inc
mov
jmp
dec
cltd
jne
movsb
pop
jns
lock
or
push
repnz
mov
int
lods
iret
jl
lods
dec
fs
std
psubq
cmp
push
jo
ficompl
inc
loope
mov
mov
out
std
in
fwait
aas
decl
xchg
dec
or
mov
mov
push
nop
adc
out
adc
pop
lods
gs
mov
daa
sub
dec
xlat
dec
mov
pmullw
mov
sub
pop
inc
sub
mov
cltd
outsb
cmp
cmp
in
lahf
gs
sar
lcall
jb
push
xchg
xchg
out
mov
mov
popa
nop
lea
mov
idivb
fwait
pop
fdivr
mov
push
xor
adc
repnz
pop
push
sbb
in
xlat
xchg
arpl
aas
cli
pop
fdiv
jnp
sub
cmp
nop
and
les
gs
xchg
fisttpl
call
out
daa
mov
dec
movsl
add
test
inc
sbb
adc
rorb
sbb
popf
xlat
lods
sub
mov
jae
cmp
stos
dec
xchg
jns
cmp
jmp
cld
enter
es
pop
push
pop
push
xchg
and
push
fisttps
or
fisttpll
sbb
in
or
int
ljmp
in
imul
push
iret
fisubl
sub
lcall
adc
inc
aas
adc
popf
and
or
hlt
xchg
pop
dec
gs
decl
xor
xchg
fs
jp
in
je
inc
mov
adc
subl
inc
inc
fsts
inc
xchg
aam
cwtl
sub
and
mov
xor
xor
enter
xor
rol
add
aaa
decb
jmp
push
leave
mov
push
jo
mov
mov
leave
arpl
stos
push
sbb
fdivrp
ljmp
and
test
mov
jl
es
fucomip
fidivrs
addb
xor
aam
jmp
mov
jbe
sahf
xchg
mov
push
jo
enter
inc
call
push
pop
outsl
dec
sahf
push
add
ficoms
pusha
frstors
cs
sbb
into
pop
lret
jns
pusha
aaa
call
cmp
adc
cld
xor
and
pop
ret
int
xchg
icebp
pop
pop
dec
test
and
popa
inc
outsb
sbb
pop
or
pop
dec
cld
pushf
xchg
sarb
insb
inc
add
daa
testl
jmp
es
pop
or
es
decl
fildl
je
add
adc
rorb
call
sbb
lret
lcall
add
cmp
jg
je
xor
adc
ljmp
aaa
xorb
pop
aad
cmpsl
insl
icebp
mov
sbb
dec
inc
mov
cmpb
aad
shrb
jg
das
or
jmp
jmp
sbb
push
hlt
adc
aaa
fisttps
inc
enter
das
add
jno
pushf
mov
loope
add
mov
jp
or
xor
sbb
pop
hlt
jmp
cs
fdivl
scas
adc
enter
dec
push
mov
bswap
in
addl
push
xor
pushl
xchg
ret
std
mov
shll
push
incl
mov
and
inc
cli
dec
mov
mov
je
bound
and
stos
sub
pop
fmuls
outsb
jge
mov
pop
or
arpl
jg
push
cld
xchg
dec
sahf
sub
and
mov
call
fs
inc
fistpl
mov
fnstsw
ret
mov
inc
scas
call
xor
out
jle
pop
in
das
enter
call
std
push
in
lods
sub
int3
lock
dec
test
mov
cmp
in
add
adc
lcall
inc
test
out
mov
addl
cld
jg
aaa
jmp
ficomps
je
stos
clc
orl
leave
testl
incl
ret
xchg
mov
jl
xor
scas
sbb
cmp
dec
inc
mov
mov
hlt
push
call
ljmp
push
xlat
mov
ja
sbb
dec
je
int
dec
cmp
pop
inc
jp
addr16
sbb
sub
cmpsb
out
jp
pop
and
scas
xor
mov
xor
shll
mov
add
loopne
jbe
ljmp
insb
and
cmp
insl
add
mov
ficompl
xchg
pop
aad
ffree
dec
and
loopne
xchg
xor
push
cmpsb
lds
shlb
mov
dec
pop
ljmp
scas
lock
xor
xchg
outsl
movsl
and
push
lcall
add
cs
or
insb
testl
xchg
dec
push
loopne
jl
xor
mov
mov
call
enter
outsb
loop
jae
mov
jecxz
xchg
mov
sbb
mov
rol
mov
jle
push
cmpsl
je
add
add
cmp
int3
fdivrs
movsb
mov
sarl
mov
ljmp
mov
jg
jg
sub
dec
jmp
push
inc
or
cmp
ror
cs
std
out
mov
mov
lret
xchg
loop
movsl
or
ja
roll
adc
lock
je
sbb
imul
push
and
incl
cmp
jne
cwtl
loop
jbe
jg
jle
iret
fxch
test
data16
test
ljmp
mov
cmpsl
jmp
call
loope,pn
std
cmp
push
cli
mov
adc
jmp
mov
leave
lret
dec
rorl
ljmp
mov
mov
test
pop
adc
test
sbb
dec
xor
lods
push
psubb
cs
push
pop
enter
out
rcll
mov
mov
adc
mov
push
inc
sbb
add
stc
sub
incb
push
ret
lcall
xor
pop
or
cmc
or
sub
es
push
mov
idiv
aaa
mov
idiv
mov
mov
cmp
out
js
jb
and
adc
sub
mov
ja
cmp
mull
mov
subl
push
sub
dec
cmp
or
ret
mov
jg
jmp
mov
mov
adc
icebp
adc
std
out
xlat
mov
push
dec
daa
adc
pop
insb
ljmp
andb
mov
cltd
mov
mov
jp
mov
dec
pop
dec
jl
in
mov
leave
mov
or
movsl
xor
das
movsb
incb
fnstsw
mov
in
mov
arpl
adc
ds
js
mov
shrl
call
sar
mov
cmp
pop
push
sbb
push
fisubrs
movsb
dec
faddl
cs
mov
aaa
mov
or
icebp
leave
fisttps
xor
fdivs
mov
pop
sub
das
cltd
push
cli
outsl
cmpsb
mov
xor
mov
fbld
loopne
movsb
fs
icebp
xchg
sub
add
fildll
je
xor
fistpl
lea
pop
jbe
push
sub
adc
inc
sbb
cld
pop
mov
cli
les
or
dec
bound
mov
bound
dec
jecxz
cs
fstl
add
mov
cmp
mov
insb
movsl
call
pop
fs
nop
fwait
test
sbb
jg
pop
add
pop
cld
mov
out
int3
int
pusha
and
in
icebp
dec
xor
loopne
cld
pushl
push
imul
add
push
sbb
lahf
in
sub
xor
sub
int3
pop
or
push
adc
pop
mov
push
add
aaa
sarb
lret
push
test
push
cli
push
movsl
icebp
xchg
stos
sbb
orb
dec
ret
mov
cmpsl
push
mov
push
sbb
cltd
stos
cmpsl
add
aaa
adc
push
add
jmp
or
repz
movsb
inc
cmpsb
xor
aam
pushf
xchg
call
nop
test
cmp
cmp
lods
cmp
lock
sub
xor
and
xlat
ljmp
movsb
out
pop
mov
jbe
sbb
jp
insl
js
push
incl
jl
fdivrs
scas
testb
or
add
ds
push
cmpsl
push
in
push
pop
ret
inc
mov
fwait
add
and
add
jg
push
and
sti
dec
fsubrl
inc
push
ljmp
mov
cmp
movsl
imul
and
imul
ljmp
call
cmp
push
sub
cli
mov
cmpsb
adc
or
and
push
xor
in
and
or
loop
mov
inc
rolb
enter
rorb
pushl
ss
call
push
pusha
jecxz
adc
int3
push
and
imul
scas
mov
push
mov
lods
xchg
cmp
or
and
outsl
add
mov
pop
jmp
mov
or
jl
lcall
and
and
add
cmp
popa
sti
jb
jbe
adc
xlat
test
jbe
pop
shlb
lahf
pop
repnz
mov
and
jno
and
sbbl
jmp
ljmp
pop
mov
jmp
add
dec
jae
aam
pushl
andl
call
insb
and
xchg
test
scas
out
loop
sub
call
cmpsb
dec
flds
sbb
lcall
mov
xor
sub
add
pop
push
call
leave
dec
cld
je
inc
fsubs
iret
lea
cmc
mov
mov
mov
movsb
pop
outsb
add
aas
into
sub
sar
js
es
cwtl
popf
pusha
push
std
movsb
jmp
insb
and
xchg
cmpsb
add
outsl
pop
enter
addl
repz
cli
xchg
cmc
xchg
insb
incl
jg
test
add
rcrb
das
pop
fdivl
mov
sahf
inc
ds
repnz
jmp
movsl
filds
inc
fbld
fnstenv
jp
ljmp
cltd
add
push
mov
dec
cld
sbb
dec
decl
add
mov
xchg
and
push
sti
add
push
mov
fstl
sar
out
xchg
lock
xchg
jbe
or
fidivs
or
lock
mov
fisubs
dec
or
pushf
lock
fimull
add
jg
lea
cmp
and
xor
ds
jmp
xchg
mov
pop
test
xchg
jae
and
sub
das
movsb
jle
or
ljmp
xchg
mov
lods
sbb
jne
ss
insl
lret
loope
stos
or
mov
hlt
out
movl
and
aam
sub
and
sub
xor
call
push
andb
cmp
std
adc
ficomps
push
mov
aad
mov
testb
fisubs
stc
es
and
call
fisubs
xchg
out
add
outsl
inc
sbb
or
cmp
jmp
adc
pusha
xorb
es
push
jbe
ret
and
pop
sub
rcll
add
popf
into
js
pop
std
lea
gs
add
adc
jmp
add
ret
pushf
insb
sbbl
jp
adc
xor
or
shl
xchg
xlat
cmp
jbe
sbb
sbb
inc
cmp
mov
push
xor
aaa
push
or
lret
cmp
dec
cmp
fcomip
call
scas
xor
sub
add
xchg
sbbl
leave
inc
push
insb
outsb
pop
add
xor
fdivr
ja
jb
enter
push
cwtl
mov
fwait
dec
dec
mov
add
sbb
mov
imul
push
mov
sahf
stc
or
inc
hlt
pop
loopne
xor
jle
and
adc
mov
js
pop
cmp
stos
inc
mov
pop
clc
ljmp
scas
jno
push
shll
lea
mov
jns
jbe
mov
inc
insb
xor
adc
pop
cli
sbb
imul
xor
pop
xor
lds
ds
imul
xor
mov
in
cmp
out
add
nop
jle
or
or
adc
pop
cld
ljmp
sbb
inc
shll
xchg
push
sbb
movsl
jge
jle
inc
out
pop
inc
xlat
dec
popf
test
xor
mov
cmp
mov
cmp
sbb
dec
fidivl
lahf
add
push
cmp
adc
lcall
pop
insb
divb
push
mov
sub
pusha
ljmp
aam
imul
out
adc
and
jge
sbb
cmpsb
sbb
dec
sbb
incl
or
ds
in
xor
out
mov
add
sub
jle
add
ljmp
fdivrs
pop
fisubrs
movsb
shrb
decl
shll
sahf
clc
daa
and
push
xchg
push
jecxz
pushl
mov
scas
dec
jno
ret
sub
sbb
test
lcall
dec
mov
sbb
call
mov
scas
xchg
rcrb
xor
inc
popa
jne
fcomps
loopne
push
addl
push
loopne
mov
faddl
scas
js
add
nop
xor
dec
jge
push
or
add
aaa
dec
andl
cmp
jb
cmp
scas
jge
sbb
leave
insb
add
incl
data16
imulb
addr16
ds
ss
aaa
clc
out
mov
int3
mov
daa
adc
cmpsb
push
mov
rorb
sub
jp
xchg
out
xor
out
fdivr
fst
subl
dec
and
fistpl
xchg
mov
push
scas
and
cmc
or
cmp
nop
jp
cmp
push
stos
sub
incl
pop
xchg
movsl
mov
test
cmc
adc
mov
js
add
hlt
pop
xor
or
int3
sbb
xor
incl
decl
dec
cmovg
jnp
test
mov
add
pop
inc
sbb
ret
scas
inc
movsl
pusha
dec
clc
jecxz,pt
mov
jo
in
jge
adc
leave
insl
test
scas
sbb
fs
push
jnp
add
mov
shrb
pushf
inc
popf
fcompl
xor
or
or
add
mov
movsl
cmp
scas
lret
fwait
leave
in
dec
call
inc
xor
dec
cli
mov
push
stos
xor
add
int3
out
jae
loop
pushf
jae
sub
call
sarb
mov
xchg
nop
subb
shlb
fisubs
xor
cmp
fmuls
ds
jb
aaa
xor
add
stos
in
mov
and
cmc
mov
rol
mov
ljmp
sbb
xor
rcrl
mov
ljmp
jg
scas
sbb
addr16
shrb
out
gs
test
xchg
je
xor
gs
daa
push
out
clc
incl
sbb
pop
invd
sub
movsb
sub
xor
xor
or
test
add
lret
ss
popa
rorl
adc
jg
pushl
bswap
test
ret
divl
jle
ja
mov
ret
insb
loopne
lahf
jno
xchg
adc
jae
or
clc
xchg
and
push
in
mov
nop
push
and
pushl
dec
out
mov
mov
iret
arpl
out
es
decb
ret
push
call
or
hlt
sbb
clc
loope
mov
idiv
inc
loope
push
imul
and
lock
ljmp
cld
jo
mov
setg
fdivl
sub
and
out
das
or
ljmp
jmp
pop
test
dec
outsl
mov
and
lds
imul
sub
add
sub
lcall
sbb
and
and
imul
lcall
push
divb
xor
mov
and
adc
sarl
inc
in
cmp
push
xchg
outsl
pop
test
int3
out
push
out
sbb
pop
xchg
add
mov
and
inc
and
inc
push
mov
jb
cmp
inc
pushl
xchg
dec
xchg
cltd
xchg
fdivrl
in
pop
xchg
adc
push
sub
addr16
xor
mov
mov
and
dec
adc
cltd
sti
sbb
and
les
jmp
pop
mov
in
jp
dec
loope
in
enter
pop
call
in
and
aad
mov
sbb
repnz
mov
push
lds
bnd
addl
pop
inc
sbb
dec
cmp
fcmovnbe
les
inc
loopne
adcb
fdivl
adc
jecxz
shrb
loop
lock
jmp
inc
jno
push
jne
loop
cmp
adc
sbb
and
cld
test
enter
pop
mov
pop
add
fildll
iret
les
ret
mov
fisttps
aas
pop
sub
pop
mov
fdivrl
cmp
aad
cli
jg
ja
inc
jp
push
jl
push
movsb
mov
push
mov
ljmp
addr16
push
or
xor
xor
adc
je
and
dec
mov
scas
mov
cli
out
add
push
cmp
mov
lods
push
repz
adc
dec
jmp
psubb
mov
adcb
daa
ret
dec
call
mov
sub
and
xor
jbe
adc
int
or
xor
sub
rcrb
ss
xchg
mov
outsl
jo
sub
push
fs
cmp
pop
pop
inc
cli
cmp
cmp
add
cmp
ljmp
std
popf
add
mov
cmp
adc
shlb
aam
sub
cmp
sbb
in
in
fimuls
iret
sub
incl
adc
xor
push
xor
push
xchg
cmp
adc
es
cld
push
xor
loope
or
pop
fsubrl
push
sub
mov
sub
pop
mov
aas
pop
fcomip
decl
sub
ret
mov
dec
cmp
ret
or
mov
or
pusha
ss
loope
sbb
fs
mov
sub
inc
sbb
cmp
jnp
sub
popf
cmp
xlat
cmpsb
nop
clc
mov
jb
sub
pop
or
orb
jg
xchg
or
scas
ss
ds
pop
add
les
scas
xor
out
loopne
lods
add
lcall
mov
xor
fimuls
pop
in
fsubs
loopne
mov
fcomps
sar
jge
and
or
or
das
fstpt
js
pop
or
and
nop
insb
out
mov
mov
hlt
cmp
sbb
incl
adc
or
mov
int3
lods
push
cltd
outsb
mov
jg
js
dec
add
aas
push
outsb
xor
jmp
in
mov
icebp
adc
std
xor
adc
std
cmp
addb
cmpsb
jge
sub
dec
stos
cld
pop
mov
or
repnz
push
pop
sahf
sbb
and
add
js
imul
cmpsl
xchg
or
or
rcrb
les
lahf
cltd
jae
and
push
gs
imul
into
cmc
cmp
jae
xor
xor
dec
loopne
and
popa
and
fwait
movsl
mov
mov
test
pop
add
sub
test
cmc
ret
add
cmpsb
icebp
xor
push
jbe
mov
iret
adc
jg
stos
mov
adc
add
or
dec
pushf
push
cmpsb
test
pop
call
cmp
add
mov
les
mov
std
aaa
or
cmp
add
jge
dec
andl
mov
shrb
rorl
adc
cli
jg
stos
sub
cmp
cmp
arpl
jno
push
mov
pop
icebp
jnp
push
and
sbb
rorb
add
adc
mov
push
lods
xor
mov
arpl
add
aaa
idivl
mov
and
jo
add
and
mov
popa
ljmp
ss
cltd
dec
fiadds
es
and
dec
cld
cmp
shll
nop
add
add
test
xchg
push
add
inc
icebp
out
rcr
dec
pop
movsl
stos
inc
les
cs
pop
fisubl
call
fdivp
or
jecxz
and
mov
xor
daa
mov
and
sbb
imul
aad
shl
dec
scas
lds
sbb
lock
mov
push
sbb
insl
mov
andl
cmp
adc
cmp
jg
pop
mov
aad
cmp
add
cmp
aaa
sub
push
inc
xor
not
ret
and
sbb
add
sbb
cmpsl
into
cmp
enter
in
and
cmp
das
jne
cmp
jl
jno
fidivl
in
decl
jne
or
mov
adc
adcl
or
shll
cmc
and
pop
dec
xchg
test
add
shlb
pop
test
pop
repnz
fbld
insb
push
pop
bound
iret
mov
ds
dec
insb
mov
sbb
aas
xchg
lock
pusha
xor
sbb
inc
nop
inc
add
mov
mov
imul
or
xchg
xor
pop
sub
sbb
push
xor
mov
outsb
loop
add
mov
stos
sahf
pop
adc
or
call
cwtl
or
inc
xor
lahf
cmp
inc
cmp
mov
add
xchg
inc
xchg
mov
pop
mov
outsb
xchg
sbb
inc
adc
mov
adc
or
call
jle
cmpsl
movsl
ss
jg
test
and
xor
dec
popa
add
sbb
ret
ja
and
test
leave
dec
cmp
outsb
add
clc
outsl
and
cmp
push
adc
mov
jns
push
into
pusha
sbb
push
push
pop
adc
jb
es
imul
xchg
push
cmp
cmp
popa
pop
add
pop
adc
jno
sbb
and
aaa
lcall
gs
sbb
inc
xor
pop
adc
mov
or
int
fists
sbb
js
push
insb
adc
arpl
arpl
xor
jmp
add
arpl
iret
test
cmpsb
push
or
push
adc
ja
pop
xor
mov
add
ja
ja
es
xor
pusha
cmp
mov
jne
mov
es
push
adc
into
jle
lods
push
aaa
sub
add
jp
cs
sub
lock
add
inc
xchg
es
data16
clc
pushl
dec
or
test
pop
push
sbb
xchg
gs
ljmp
push
cmpl
push
jle
outsl
push
sbb
mov
outsl
xchg
test
inc
adc
jmp
enter
xor
pop
in
push
adc
pusha
mov
sub
pop
inc
dec
repnz
ja
scas
fiaddl
xor
push
dec
pop
das
sub
adc
out
sbb
scas
add
inc
sub
clc
cs
bound
dec
add
jo
shrl
fdiv
ja
aad
sub
shrl
xor
cmp
or
int
jns
insl
negb
or
push
loopne
mov
jno
adc
cmp
je
lcall
inc
ss
test
or
shll
mov
add
adc
push
decl
push
pop
sub
or
aas
sub
pop
jmp
xchg
addb
adc
sbb
cli
lods
add
mov
push
cmpsl
sub
fwait
mov
mov
inc
jge
scas
and
or
cltd
xlat
notb
lods
dec
or
adc
sub
mov
xor
or
mov
or
cpuid
call
ljmp
adc
xor
sub
inc
std
xchg
stos
rcrb
xor
push
sub
das
stos
sahf
mov
dec
cmp
mov
pop
aaa
pusha
pop
or
or
jg
fsubrl
jle
pop
and
lock
mov
or
lods
mov
xor
pop
mov
icebp
out
cli
lods
or
jmp
push
sbb
xor
sub
push
or
jecxz
adc
pushw
cmp
fwait
jbe
movsb
das
rolb
lods
std
lcall
or
cs
cmp
mov
pop
or
mov
sbb
call
dec
mov
loope
xor
inc
cli
lahf
jbe
cmpsl
xor
pop
imul
push
daa
pop
lods
sub
mov
jle
cli
xlat
adc
cmp
pop
mov
sub
repnz
jle
cs
pop
incl
pop
sub
sub
scas
test
std
mov
das
fwait
inc
cmp
add
in
fldt
js
push
and
test
rcll
and
mov
sub
dec
push
sbbb
stos
lods
push
mov
fcmovnbe
cmp
push
data16
cmp
mov
lods
inc
decl
mov
push
xor
adc
dec
cmpb
sahf
cli
jb
sbb
int3
int3
inc
adc
int
mov
pop
fincstp
cmp
adc
pop
push
mov
adc
icebp
incl
add
jo
out
or
mov
es
mov
in
add
jae
fwait
and
ucomiss
in
mov
add
dec
xchg
out
popf
dec
sarb
jmp
mov
test
push
insb
cmp
out
movsb
hlt
fcmovu
pop
push
push
jmp
aas
inc
in
rorl
add
or
jg
mov
jnp
ljmp
outsb
lcall
sub
imul
cltd
stos
jge
sub
mov
outsl
sub
and
stos
lock
mov
ljmp
add
mov
pop
or
xchg
mov
adc
leave
mov
pop
xor
inc
out
stos
jg,pt
push
dec
mov
aam
adc
push
xchg
icebp
pop
popa
add
cld
ffreep
and
adc
cmp
imul
jg
popa
pusha
inc
sub
push
cmp
cmp
loop
cltd
cmpsb
bound
pusha
or
add
xor
mov
dec
xor
or
mov
inc
pop
mov
jo
push
push
lcall
mov
push
or
xchg
xchg
sub
popf
pop
cmp
into
popa
test
js
pusha
or
cmp
shrb
scas
cli
jbe
cli
sub
loop
call
and
sar
and
push
add
mov
out
cli
lea
jne
mov
scas
jae
decl
in
mov
ss
adc
ds
xchg
adc
std
jp
aaa
fstl
mov
xchg
sub
jbe
mov
or
mov
cmpsb
mov
and
adc
outsb
es
jno
sahf
push
add
lods
dec
mov
test
dec
pop
jb
std
jmp
and
sub
mov
adc
add
xor
stc
jg
mov
or
mov
mov
scas
xchg
je
mov
pop
add
cmpl
call
adc
mov
and
nop
xchg
dec
adc
mov
add
fwait
push
sub
adc
cmp
mov
and
popl
js
adc
aas
clc
out
sahf
mov
mov
mov
jno
sbb
test
xchg
mov
cmpsl
and
ss
xchg
int
test
dec
pushf
fistps
adc
pushl
sbb
fadd
sbb
sbb
push
mov
fimuls
ljmp
pop
and
lcall
mov
mov
ljmp
adc
insl
sub
or
push
es
xor
movsl
sub
xor
std
and
adc
pushf
imul
cs
mov
fcmove
rcr
push
add
hlt
out
clc
mov
mov
insb
test
add
leave
lret
pushl
mov
mov
jecxz
sbb
sti
inc
jmp
inc
dec
adc
fmull
cld
fs
cmp
ficoml
sub
push
aam
and
pop
mov
jmp
and
in
mov
mov
mov
inc
xor
sbbb
in
mov
sub
inc
add
bound
add
jge
test
movaps
jp
cmpsb
fwait
xchg
and
jno
adc
adc
and
push
dec
lods
lcall
lahf
outsb
or
pop
iret
mov
daa
mov
inc
out
pop
pop
jns
out
xor
xchg
pop
arpl
test
jmp
xor
loop
mov
sarb
xchg
mov
add
sub
dec
push
daa
mov
and
cmpsb
sbbb
jle
fidivrs
xchg
add
por
sub
mov
dec
nop
movsl
dec
push
add
sub
scas
xchg
pop
mov
cmp
incl
adcl
mov
int3
cmpl
pop
das
rol
mov
inc
or
adc
dec
sbb
cmp
test
sbb
adc
add
mov
movsb
xlat
dec
lods
pop
in
lock
call
mov
leave
mov
or
sub
push
xor
inc
decl
out
jle
sub
mov
shll
mov
or
fstpt
test
mov
sub
cmp
add
sub
sub
sub
add
cmp
sbb
inc
popf
das
cli
jg
xchg
mov
pop
sbb
imul
mov
sub
xor
addr16
in
xor
jl
or
fcmovnb
or
sahf
arpl
shr
mov
or
out
lock
lcall
fwait
sub
scas
aas
aam
add
es
mov
addr16
adc
icebp
sub
or
cmp
adc
push
xchg
fdivp
decl
sub
adc
popf
or
js
xchg
sub
je
icebp
add
mov
pop
lock
sbb
insl
adc
and
ljmp
or
iret
lea
insl
push
or
xor
mov
mov
bound
push
hlt
cmp
stos
arpl
test
fmull
pushf
jns
push
mov
xor
dec
jecxz
pushf
mov
ljmp
stos
ljmp
sub
lods
orb
cld
mov
jbe
lret
jmp
adc
les
mov
cld
decl
insl
int3
std
add
cmp
aad
sub
adc
or
enter
jg
mov
push
push
gs
and
or
mov
fcompp
mov
jmp
movsl
outsl
ss
lea
and
add
push
sbb
lret
sahf
jecxz
dec
fcmovb
xchg
mov
jmp
jge
leave
imul
or
fld
pushf
stc
mov
and
mov
jl
arpl
ljmp
test
fs
xor
mov
out
inc
xor
jmp
int
mov
xorl
inc
mov
push
or
pop
movsb
ret
inc
jb
xor
scas
mov
adc
sub
add
stos
sub
and
enter
inc
fldenv
test
xchg
jo
or
sub
nop
stos
jo
hlt
mov
test
inc
pop
arpl
pop
icebp
xchg
inc
enter
adc
sbb
imul
mov
add
das
mov
inc
js
sub
or
cmpsl
ljmp
fstpl
push
adc
cmp
push
jmp
fcomps
bound
mov
addr16
in
or
mov
push
jno
mov
push
fwait
aaa
sub
push
add
lods
ret
cmp
xchg
jmp
push
incl
cmc
decl
cmp
imul
std
mov
mov
mov
mov
jg
adc
inc
push
fstpt
mov
adc
sar
mov
sbb
xor
pushl
pushf
sub
cmp
xor
insl
loopw
mov
mov
add
insb
push
ss
pop
sub
in
push
pushf
and
cmp
mov
sub
pop
mov
leave
mov
lret
sub
pop
incl
incl
cld
adc
cmpb
outsl
sbb
mov
call
loop
out
adc
cs
push
xchg
xor
repnz
push
out
mov
jmp
mov
popf
sti
and
jg
lock
in
cltd
stc
fildll
sub
je
jg
cld
pushl
stc
fisttpl
mov
insb
aas
add
adc
push
aad
fsubrs
cs
cmp
incl
add
cmp
mov
xlat
mov
test
pop
repnz
add
cltd
sub
inc
sbb
push
dec
push
jg
push
mov
cmp
xor
jle
jmp
jecxz
jb
out
cmp
fsts
bswap
xor
ret
icebp
fcomip
cmp
xchg
fs
into
cltd
and
mov
cli
pushl
insl
pop
inc
lods
loope
scas
inc
inc
push
cmpsl
mov
aaa
cmp
lods
adc
das
ljmp
dec
das
pushf
jno
outsb
jae
adc
ljmp
sub
jne
jbe
mov
lods
inc
test
xchg
inc
imul
or
pop
push
sub
sub
or
clc
decl
cmc
insl
aas
popa
daa
push
enter
mov
ja
mov
ljmp
std
pop
xorb
push
cwtl
mov
iret
out
bound
lahf
iret
xor
idivl
idiv
mov
jmp
sbb
jecxz
cltd
and
lahf
out
shr
and
out
add
clc
push
adc
mov
movsb
cld
adc
and
cmp
movsb
fidivrl
xchg
inc
cld
jle
in
sub
xor
jmp
fwait
ds
mulb
sub
cltd
insl
mov
sub
pushw
push
push
push
add
sub
push
jecxz
mov
xor
aas
ljmp
jo
add
lock
subb
jo
push
cli
fildl
and
mov
movsb
push
xorb
es
ret
data16
cmp
std
int
adc
mov
test
mov
leave
jg
into
sub
sub
fs
lock
dec
movsb
repnz
or
jg
cs
loop
imul
lods
sub
jno
fwait
mov
rdpmc
push
shll
adc
ret
xlat
mov
mov
push
call
aas
cmp
insl
xchg
pop
or
cmp
shl
mov
and
imul
decl
mov
push
aaa
sahf
subl
loopne,pn
pop
or
es
inc
lret
cmp
scas
xchg
fcompl
jecxz
xlat
sub
rolb
pop
sar
push
push
cmp
sub
outsl
cwtl
and
lods
sub
pusha
std
sbb
scas
ss
inc
mov
filds
mov
lret
sub
add
nop
cmp
decl
sbb
or
lock
inc
jno
lcall
shll
adc
idivl
sbb
mov
dec
sub
and
adc
adc
xor
mov
sbb
push
loope
or
ds
dec
movsl
inc
inc
rcrl
sbb
adc
add
stc
les
bound
aaa
xor
xchg
das
pop
ljmp
pop
add
hlt
adc
push
in
sbb
xchg
shlb
popa
std
pop
push
and
out
fcompl
test
mov
mov
fwait
pop
gs
icebp
mov
je
jle
push
and
leave
fwait
lods
call
jecxz
sub
rol
push
or
insl
jg
jmp
sub
sbb
dec
lods
or
ds
sub
push
icebp
jle
pop
xchg
bound
mov
mov
jbe
cli
incl
cmp
lea
mov
int3
inc
mov
movsl
cwtl
bnd
int3
lret
cs
jl
pop
sub
mov
loope
andl
out
xor
loope
lock
push
loope
fwait
push
sbb
cmp
add
cmp
iret
out
adc
adc
lock
cmp
xchg
enter
fdivp
sbb
mov
repnz
mov
inc
jbe
nop
xchg
xor
hlt
daa
fsincos
xchg
sub
pop
push
inc
add
notl
or
int3
mov
sub
rcrb
or
xor
xchg
and
cmp
cmp
ljmp
push
jmp
adc
bound
push
or
inc
shl
in
out
push
cmc
ret
jae
stos
loopne
mov
mov
xor
jge
xlat
xor
or
cmpl
cltd
push
dec
pop
inc
loop
fidivl
jp
add
cmp
mov
pushl
lcall
rorl
ja
loopne
xchg
cmp
jg
xor
ret
bound
lea
mov
lock
push
out
sbb
cli
cli
adc
fidivl
mov
mov
sbb
cli
inc
xchg
adc
addr16
sub
fcomps
xchg
int3
dec
sbb
sbb
jg
clc
loop
sarb
xor
ficoml
push
fsubl
jmp
out
adc
adc
xor
adc
ror
clc
mov
idivb
or
push
std
adc
pop
mov
shl
or
stos
jecxz
jg
lock
scas
into
movb
jl
scas
int3
hlt
xor
sbb
dec
ja
cli
lcall
int
popf
frstor
mov
fabs
decl
inc
shll
inc
cmp
mov
push
or
inc
cmp
rclb
or
xchg
jmp
int3
dec
arpl
cmp
movb
lret
fdivrp
call
sub
mov
out
sbb
pop
sbb
ja
add
jbe
hlt
out
xchg
mov
pop
cli
int3
adc
dec
push
jle
add
movl
dec
mov
decl
xchg
push
pusha
dec
shrb
les
and
call
insl
mov
cmp
fdiv
pop
or
mov
decl
arpl
jns
ss
mov
ret
rcr
aas
mov
sub
cld
aaa
push
adcb
aam
cmp
xor
ljmp
out
imul
mov
cmpsl
in
loop
loop
or
or
out
insb
in
iret
ret
add
fdivrs
push
filds
xlat
pop
out
pop
das
mov
sub
incl
stos
adc
xlat
call
fcmovnbe
repnz
test
jg
test
and
in
mov
pop
xor
add
repz
cs
mov
rcrl
sub
sub
movb
mov
push
sub
pop
jecxz
or
pop
iret
jmp
adc
xor
pop
adc
jg
dec
mov
sbb
pop
cmp
or
pop
pop
sbb
lcall
ds
adc
sbb
add
mov
cld
outsl
lock
mov
or
dec
mov
lahf
ss
leave
inc
jge
aas
adc
jg
mov
adc
stos
mov
sub
incl
mov
mov
repnz
movsl
outsl
cmp
sub
sbb
mov
lahf
addb
gs
lret
adc
adc
xor
loop
pop
outsl
test
jbe
sub
daa
sbb
or
aas
sbb
cmp
sub
and
call
or
jecxz
sub
fidivs
sbb
stos
dec
std
ja
pop
mov
xor
test
xor
mov
xor
rcrb
mov
or
pushf
call
and
pop
and
mov
lcall
jg
mov
insb
pop
out
sub
das
and
mov
imul
push
cltd
ret
mov
fwait
pop
fs
repz
xor
push
pop
xor
xor
sub
xorl
sub
loop
sar
dec
jl
xor
mov
push
adc
test
inc
jecxz
int3
cli
sub
sbb
pop
fdivr
loope
jg
repnz
sti
jp
xchg
cmp
dec
lahf
or
movsl
out
mov
lods
std
push
sarl
int
jo
rcl
ljmp
mov
mov
mov
pop
or
push
fcompl
fdivs
mov
call
or
sub
push
arpl
lods
or
fcoml
pop
cli
jg
clc
inc
cmp
sbb
xor
xor
mov
lods
rorb
push
test
out
add
xor
aaa
sub
test
or
enter
xor
add
push
negl
in
decl
xor
sub
mov
out
sbb
xlat
pushl
add
pop
cmp
fs
or
sub
in
dec
xor
sbb
scas
jle
lret
aaa
add
bound
out
add
scas
jo
cli
add
mov
cmp
pop
sbb
fst
or
sub
xchg
test
incb
xchg
insb
jle
mov
out
fs
cmc
sub
ss
lret
cmp
add
test
push
sbb
cmp
adc
aaa
js
stos
add
jg
scas
sbb
xlat
mov
push
sub
xchg
outsl
bound
aam
sbb
iret
jb
or
fildll
inc
sbb
jo
notl
adc
and
loope,pn
sar
pop
add
pop
cmp
add
fildll
jle
cmp
shll
ficompl
lret
pop
pusha
aam
pop
loope
test
jmp
inc
test
clc
dec
fwait
mov
push
jecxz
push
mov
les
add
das
clc
data16
adc
cmpsb
pop
mov
xchg
xchg
cli
pushl
push
mov
or
je
xchg
dec
sub
js
lahf
out
mov
movsb
mov
push
xor
xor
pop
outsb
mov
repnz
incl
stos
inc
jle,pt
movsl
outsb
test
mov
mov
je
mov
push
adc
xchg
jg
test
insb
movb
adc
data16
in
rol
leave
mov
pop
cmp
xchg
mov
aas
cltd
fsubr
push
or
pop
aaa
mov
pop
cmpsb
dec
sbb
pusha
jo
push
cld
fcomip
loope
mov
ja
sbb
fsubp
jge
sbb
sub
icebp
or
movsb
decl
jmp
sub
arpl
adc
mov
xor
jecxz
sbb
int3
xorl
and
mov
aaa
shl
mov
cmc
ss
scas
pop
mov
arpl
dec
jge
movsb
loope
dec
or
filds
jl
lods
call
pusha
adc
sbbl
add
push
hlt
das
push
push
add
cmp
adc
mov
subl
cwtl
cmp
dec
leave
clc
aaa
xor
out
fbld
out
xor
sub
bswap
cmp
xchg
and
out
lods
repnz
aad
adc
ret
xor
sbb
sbb
lods
ret
in
insl
pop
fwait
cli
cmc
ds
adc
mov
adc
js
icebp
ljmp
cmp
and
cmp
push
jbe
cltd
lahf
divb
add
insb
jmp
mov
sbb
mov
sub
mov
mov
cwtl
push
lods
pop
dec
or
cmp
orl
push
xor
mov
fs
ret
sub
popf
push
addr16
shrl
cltd
push
fsubrs
insb
pop
mov
icebp
pop
loopne
jbe
add
push
lock
push
or
xor
fs
mov
cs
mov
push
enter
popl
clc
push
xchg
or
lahf
adc
and
lahf
cmp
vorpd
aad
sti
add
lcall
adc
xlat
fsubp
cmp
push
pop
jmp
cmp
bound
pop
jle
in
add
dec
stc
bound
aas
sbb
xchg
dec
pop
cmp
decb
add
push
fistpll
lcall
stos
shr
push
dec
and
dec
fiadds
pop
shll
popa
loope
pop
hlt
jmp
dec
gs
into
pop
xchg
test
push
adc
out
fcomip
decl
inc
fdivrp
ss
inc
mov
pop
repnz
cld
inc
and
cmpsb
loopne
lea
cwtl
xor
aas
daa
test
iret
inc
jecxz
xchg
mov
and
push
push
in
out
add
pop
bound
decb
fs
clc
mov
ds
inc
lcall
cltd
jns
or
or
aaa
inc
insb
mov
ljmp
es
push
pop
mov
sub
adcl
sub
incl
sbb
cmpsb
lock
mov
sub
repz
out
mov
fmuls
cld
in
aad
or
add
push
std
and
in
xor
insb
or
sub
push
sub
xor
add
pop
loopne
push
adc
dec
push
aad
pop
call
mov
in
inc
push
fisttpl
hlt
mov
fsubl
pop
rcr
fs
adc
sarb
js
jp
ds
jns
loop
sar
out
sub
adc
jp
enter
hlt
jns
pop
shlb
out
aaa
inc
cli
push
xlat
clc
out
hlt
sti
sbb
jg
les
das
xchg
jbe
push
shr
cld
cmp
mov
and
loope
cmpsl
pop
mov
loop
test
or
add
and
xor
push
xor
push
jge
and
popf
cmpsl
mov
shll
jmp
inc
ficomps
add
inc
mov
mov
push
pushf
mov
das
inc
push
jmp
and
jmp
or
pushl
or
fistpll
test
es
sbb
and
iret
and
in
aas
push
push
mov
lcall
push
loopne
jne
mov
int3
in
push
push
stos
aad
inc
pop
and
testl
cmp
mov
adc
mov
or
popa
nop
icebp
mov
pop
lods
cmp
and
stos
out
adc
dec
movsl
shll
cli
int3
jb
adc
jg
and
jmp
sti
pushf
fwait
xchg
cs
lret
xchg
sub
mov
in
call
adc
icebp
call
sbb
movsb
adc
lret
movsb
imul
daa
movsb
jmp
lds
test
sbb
jl
scas
popa
shrb
cmp
push
lret
call
dec
jg
sub
mov
cltd
xchg
in
adc
dec
cld
push
jmp
pop
dec
shll
mov
mov
les
movsl
jg
mov
sbb
fcmove
xchg
xor
js
adc
jb
out
push
test
ret
lahf
sub
es
rolb
add
mov
pop
inc
add
lock
cwtl
push
aad
ljmp
test
and
fdivrs
and
mov
jns
mov
aam
lods
sbb
out
pop
test
rolb
mov
or
inc
pushf
stos
add
hlt
pop
push
in
mov
mov
xlat
sub
mov
fdivr
jbe
addr16
add
cmp
cmp
jo
cmp
adc
rclb
notl
lahf
inc
bnd
mov
adc
adc
cli
sbb
in
fsubrl
push
mov
mov
pop
add
pusha
insb
fisubs
jp
hlt
dec
movb
jo
test
cli
addr16
fldt
cmp
es
pop
add
push
or
pop
jecxz
rolb
cmp
cs
out
and
mov
sbb
sbb
mov
dec
pop
stc
lcall
lea
std
je
out
movsl
sub
mov
fidivrs
jns
call
sar
lock
sub
dec
or
push
scas
scas
out
out
jmp
hlt
cmpsl
push
js
pop
int3
mov
in
mov
xor
ret
sub
aaa
pop
out
dec
jl
ljmp
adc
lcall
cmp
in
or
or
je
rcrl
mov
sbbb
or
lock
pop
test
jg
mov
add
in
lods
cmc
jg
jge
mov
loopne
mov
lret
and
popa
das
sarb
or
push
les
add
test
mov
fstpt
mov
jg
jno
cltd
inc
xor
push
adc
mov
mov
pop
sbb
es
add
push
mov
sub
adc
and
insb
mov
xor
lods
xlat
inc
int3
ljmp
xor
jg
aaa
stos
into
sub
idivb
add
bound
sub
cwtl
pop
aaa
cwtl
inc
sub
mov
adc
fnstsw
mov
hlt
cs
xchg
add
and
incl
push
pop
sub
or
stos
filds
sbb
push
cmp
cmpsl
mov
push
adc
or
mov
call
or
sub
or
or
je
das
sub
loopne
mov
xor
lods
or
sbb
cmp
or
and
mov
mov
mov
mov
js
xorb
mov
mov
mov
sti
lahf
mov
sub
adc
ss
daa
cmp
and
nop
jnp
call
cld
outsl
push
xorl
jae
jl
dec
les
mov
add
add
ja
ljmp
movl
xor
mov
lret
xchg
pop
out
or
sbbb
sbb
fwait
inc
scas
or
loope
push
subl
jmp
mov
xor
clc
incl
inc
aaa
xor
jbe
cmp
cmp
xchg
lods
adc
jmp
push
and
sub
jmp
das
mov
mov
sbb
or
xor
jg
jmp
jle
pop
push
sub
aaa
gs
mov
cmp
pop
or
or
mov
aas
aaa
push
fwait
sbb
sub
xchg
ret
adc
incl
push
lock
and
mov
sbb
mov
movsb
out
xor
cmp
out
adc
aaa
ss
aaa
add
add
push
inc
sbb
jbe
mov
ljmp
xrelease
lods
adc
lods
or
mov
mov
lcall
cli
stos
fnsave
dec
filds
jns
dec
cmp
mov
sar
jo
pop
mov
pop
idiv
pop
loopne
adc
cmp
sbb
mov
sar
mov
xor
cmp
sbbl
mov
lcall
jecxz
lods
mov
jecxz
mov
daa
lods
mov
int
mov
icebp
std
lahf
mov
jg
icebp
pushl
mov
jo
xchg
mov
mov
call
inc
adc
mov
xor
movsl
test
call
pop
aaa
fdivrp
pop
mov
fmul
sbbl
jg
sbb
shrl
dec
lock
ss
add
xor
cmp
lret
cmp
aad
decl
orl
or
sbb
xchg
aaa
loop
je
cwtl
inc
xor
ljmp
fisttps
pop
mov
cs
repz
sub
mov
cmp
pop
std
sub
jg
inc
mov
and
lret
lcall
pushl
inc
inc
jge
leave
lret
into
inc
scas
xchg
in
adcl
clc
pop
push
mov
sbb
out
xchg
jmp
scas
pushl
lock
sub
add
sub
cmp
add
or
or
xor
sub
mov
mov
or
sub
and
or
jmp
sub
leave
add
cwtl
or
jl
lods
dec
sub
inc
cmpsb
mov
fs
xchg
jmp
aaa
enter
mov
xchg
mov
in
stc
or
mov
sub
sar
das
rorb
or
inc
fmuls
mov
int3
inc
or
subb
popf
pushf
leave
sbb
and
mov
inc
and
sub
push
lock
adc
sbb
call
inc
cmp
decl
cmc
add
xchg
or
fdivs
inc
mov
add
mov
and
push
dec
add
mov
push
aaa
adc
lret
ss
cmp
std
adc
push
push
mov
loop
mov
jmp
dec
mov
leave
adc
out
inc
clc
outsl
stc
or
rorb
mov
ds
in
push
mov
add
add
bound
jg
xor
xchg
push
test
adc
pop
mov
push
mov
adc
decl
mov
mov
xor
adc
cld
or
or
pop
mov
adc
faddl
mov
ds
inc
dec
push
xchg
xor
flds
lret
push
subb
jmp
adc
sbb
jno
insb
xor
xor
es
test
jle
mov
jmp
stos
das
dec
dec
cltd
into
sbb
push
divb
jg
or
fsubs
inc
cmc
loopne
sub
and
lea
or
jo
xchg
jnp
test
cmc
mov
out
repz
sti
and
aas
lret
arpl
fstps
adc
and
pop
jo
add
cs
mov
mov
push
add
stos
inc
rcrl
loop
dec
mov
rcr
add
mov
aad
sbb
sub
out
clc
orb
out
adc
pop
inc
jp
idivb
jge
push
inc
sar
stc
or
inc
out
sbb
ljmp
incl
mov
mov
mov
je
add
xchg
sbb
add
mov
loop
mov
add
scas
roll
addr16
cli
jl
mov
inc
cmp
add
inc
mov
scas
adc
out
ret
inc
pop
and
mov
mov
xchg
cmp
mov
test
fidivs
pusha
std
sub
pusha
xchg
data16
enter
mov
scas
and
cltd
in
or
cmpsb
push
jg
push
lock
cwtl
cld
dec
pop
outsl
loopne
mov
sub
cmp
sbb
jmp
out
andl
mov
mov
mov
push
lods
push
mov
adc
aas
xchg
icebp
inc
mov
pop
jo
aas
std
ljmp
ljmp
pop
data16
mov
xchg
inc
cs
js
and
ljmp
jne
lods
or
decl
adc
inc
lods
pop
pusha
dec
pop
insb
and
sbb
push
fs
cli
add
enter
add
or
int
inc
clc
das
adc
pop
leave
mov
lcall
movsb
sahf
rcr
xorl
dec
mov
decl
sub
fsubs
lahf
jmp
xlat
mov
xchg
imulb
stos
inc
cld
or
insl
int
jmp
ds
cmpsl
bswap
pushf
dec
push
push
cmp
std
pop
negb
add
call
add
pop
lret
sub
jmp
cmp
push
jp
mov
mov
pop
ret
je
jne
sub
call
leave
test
mov
aaa
pop
aad
jle
incl
sbb
pop
sub
or
fwait
cmp
ds
shlb
loope
lea
incl
xor
int3
popa
push
int3
and
adc
and
fsubrl
or
insl
cmp
and
push
out
imul
push
dec
ss
lock
inc
pusha
lds
scas
cmpl
mov
inc
std
ljmp
popf
ds
or
das
add
push
out
mov
dec
shl
lahf
mov
or
sub
cld
iret
adc
xorb
call
sahf
bound
cmpsb
and
fs
repz
jns
outsl
and
bound
lcall
lods
sub
lcall
jecxz
lcall
pop
inc
enter
pop
clc
sub
iret
ret
decl
js
cld
add
inc
lods
std
xorl
ljmp
sbb
int3
iret
push
inc
add
dec
jo
js
pop
fisubs
mov
lcall
iret
pop
dec
cmp
decl
sub
icebp
lcall
divb
ljmp
cwtl
cmp
push
sbb
out
in
pop
and
mov
xchg
popf
dec
hlt
ljmp
pop
jo
push
cmpsl
jnp
inc
mov
inc
sub
hlt
push
lahf
pop
jae
cmp
mov
mov
in
sahf
pop
sub
dec
mov
mov
sub
add
lcall
jo
xchg
or
xor
mov
cmp
in
ja
adc
sbb
loope
pushl
imul
js
sub
sub
fcoml
push
xchg
and
pop
or
push
push
fmul
pop
imul
sarb
xlat
or
xchg
push
ja
sbb
pushl
jg
pop
movsl
or
add
mov
sbb
cmp
dec
ljmp
mov
inc
pop
mov
mov
sbb
jbe
test
bound
pop
xor
pop
in
pushl
enter
sbb
or
adc
aas
fucom
sbb
clc
or
enter
sti
cmpsl
pop
js
ljmp
movsl
lcall
and
pop
scas
jmp
sub
cmp
xchg
or
int
ljmp
xchg
or
test
repnz
and
icebp
gs
imul
das
cli
jecxz
insl
cmp
mov
in
or
shll
dec
adc
sub
fs
sti
xchg
mov
cli
sub
or
sub
pop
fs
out
fscale
mov
pop
sbb
pop
fdivrs
dec
dec
imul
cmp
xchg
faddp
movsb
mov
or
mov
shrb
mov
fmuls
es
pop
fwait
mov
mov
lcall
lcall
xorl
fdivl
mov
pusha
cmpsl
push
sbb
das
sbb
pop
cmc
xor
popa
push
sqrtps
lret
adc
addb
sub
ret
mov
push
pop
inc
dec
sti
xor
fbstp
rcll
js
xchg
push
je
icebp
or
rolb
ljmp
arpl
cmovl
xchg
in
in
jo
fcomip
outsl
jle
xor
clc
cmp
movsb
fnstcw
push
hlt
jl
jp
out
add
lret
je
fsub
push
jl,pn
mov
jg
mov
pop
imul
pop
fwait
in
loop
and
data16
adc
mov
cmp
inc
push
sbb
lcall
lcall
sbb
or
jecxz
push
rcll
popf
jmp
mov
inc
adc
adc
xlat
sub
sbb
scas
xor
std
ljmp
in
decb
ja
clc
sbb
jnp
or
lods
inc
push
frstor
call
mov
aas
cmpsl
sbb
repnz
mov
dec
and
xor
inc
xchg
in
in
push
and
and
lcall
mov
push
out
out
imul
aas
aas
notb
add
inc
pusha
push
sar
mov
imul
int3
in
out
mov
cmpl
insb
push
daa
mov
mov
inc
and
xor
push
sbb
add
push
jbe
sbb
push
jge
mov
xchg
stos
xor
mov
mov
or
cmp
push
pusha
lea
icebp
add
jmp
into
sti
outsb
jne
sub
scas
and
pop
movsb
push
fimuls
cli
adc
lcall
outsb
pop
ds
sbb
sbb
jo
jge
inc
push
push
stos
mov
push
pop
imulb
fwait
push
xchg
call
popa
xchg
rorl
cli
out
jo
out
call
pusha
add
xchg
sub
cmp
dec
inc
push
xchg
sbb
inc
loopne
loopne
outsb
jnp
pop
mov
ljmp
or
repz
jp
xor
dec
lds
or
pop
mov
lea
mov
and
jno
in
imul
shrb
jne
push
mov
push
and
push
mov
inc
dec
stc
adc
icebp
mov
nop
inc
push
and
sbb
leave
call
popf
ret
jb
pop
cld
out
clc
decl
das
sub
ret
scas
outsb
mov
pop
test
sarb
lock
fisttps
fcmovu
mov
cmp
inc
dec
cs
test
addb
imul
xchg
fildl
jbe
sahf
adc
and
dec
push
js
cli
mov
mov
fisttpl
push
sti
fucomip
add
sbb
push
lret
pop
mov
int3
int
fistpll
incl
fwait
rcrb
and
jb
pushf
cltd
add
or
dec
ss
int3
aam
adc
pop
dec
fdivs
ljmp
mov
jo
sbb
mov
add
out
mov
pop
push
mov
cmpsb
loope
jns
lock
ss
cmp
and
xchg
in
add
fistpll
cld
in
movsb
xor
sti
mov
out
xor
sarl
aaa
xor
pop
fdivs
insl
mov
inc
xchg
loope
adc
call
popf
jo
push
pushf
int
jnp
cmp
mov
repnz
movsb
add
cmp
xor
ss
dec
sub
enter
loope
stc
mov
in
cmp
dec
xchg
pop
mov
push
mov
or
or
dec
adc
roll
cmp
flds
cli
add
push
xlat
push
or
enter
mov
push
mov
jno
jmp
test
scas
mov
cld
inc
ds
cmp
cmp
push
loopne
adc
lock
out
jle
scas
rclb
cs
xchg
jmp
out
cmp
fisttps
sahf
mov
xor
lret
lock
mov
stos
pop
cli
aaa
cmp
sub
orb
fadds
enter
and
cmp
movsb
in
xlat
xor
loop
mov
sub
mov
cmc
into
inc
fdivr
fsubs
mov
xlat
dec
xor
push
xchg
cli
ljmp
gs
mov
popa
cld
mov
adc
pusha
clc
aad
aam
inc
or
dec
dec
mov
lock
negb
add
pop
cld
add
push
or
mov
leave
incl
adc
out
xor
loopne
loopne
stos
push
jecxz
mov
repnz
jle
mov
ljmp
mov
iret
mov
iret
insb
jae
sbb
aas
daa
push
outsl
xorb
mov
jg
push
sti
lahf
xchg
sub
and
cmp
jmp
xlat
sbb
cmp
inc
inc
push
in
ret
repnz
mov
aas
adc
mov
inc
xor
lcall
dec
mov
pop
mov
das
data16
mov
loop
jecxz
jg
insb
fmulp
pop
popf
xchg
ret
mov
add
xlat
sbb
clc
decl
fsubl
dec
iret
and
mov
ljmp
mov
sub
sbb
xor
or
jns
lock
and
xchg
mov
dec
sbb
lea
pop
jbe
lahf
dec
lods
shrl
xchg
jle
scas
sub
push
push
jmp
rcrl
and
loop
mov
clc
mov
push
mov
xor
cmpsb
push
ret
push
ljmp
mov
push
es
mov
dec
xor
cltd
cli
jg
push
orw
roll
imul
loopne
ljmp
push
add
lea
or
and
js
test
or
push
lahf
mov
pop
repz
xor
cmp
cmpsl
sub
ds
push
imul
cmpsb
push
dec
jge
test
push
loop
jle
fwait
mov
xchg
andl
clc
jmp
push
sbb
and
pushl
or
jp
aad
aas
pop
mov
push
repnz
jl
or
inc
loopne
mov
imul
xor
shrl
mov
mov
fidivs
out
enter
jmp
jmp
jecxz
or
sub
xor
xor
jne
mov
loopne
mov
cmp
imul
mov
add
mov
outsb
mov
popa
mov
outsl
add
inc
insb
mov
imul
jge
xchg
jmp
sbb
bound
dec
test
in
add
sbb
std
lock
clc
bound
rclb
cmc
cmp
out
ret
shrb
inc
xor
dec
lret
in
cmp
fstpl
mov
sub
jns
sub
mov
cwtl
pop
mov
push
imul
stos
pop
lods
test
int
rclb
sbb
cld
cli
jmp
stos
dec
mov
pop
xchg
or
mov
pop
call
inc
sbb
ret
outsl
into
dec
mov
sti
jne
cli
ljmp
test
pop
rclb
and
jl
jae
lahf
xor
hlt
scas
loopne
call
mov
cmp
inc
pushf
daa
push
fiadds
movsl
inc
nop
xchg
inc
clc
test
movsl
push
add
cwtl
rclb
xchg
clc
enter
xchg
imul
jmp
insb
sbb
insl
stos
lret
push
pop
lcall
leave
addr16
pop
lds
or
hlt
popl
leave
fdivs
or
outsl
nop
and
js
push
and
cmp
push
shl
mov
loop
push
xchg
jle
ds
iret
sbb
xlat
pop
sub
add
out
jnp
fcos
mov
mov
fimuls
adc
outsl
add
cli
push
lahf
or
jno
das
lock
gs
jb
adc
cmp
lods
decl
adc
dec
cmp
js
pop
jg
les
mov
sbb
mov
xor
push
std
fnstcw
add
inc
or
scas
mov
adc
jnp
dec
add
cs
push
loopne
dec
loop
sar
cmp
ljmp
daa
movsl
or
sub
repnz
cld
rcr
cmpsb
fidivs
inc
sub
call
pushl
jns
test
sub
stos
lock
pop
call
mov
and
inc
sub
pushl
dec
mov
movsb
fwait
jmp
in
bound
cld
call
lret
mov
cmp
loopne
call
stc
jae
mov
mov
int
cmc
pop
adc
adc
jmp
pop
mov
add
pusha
xor
incl
aad
xchg
loope
mov
adc
mov
dec
out
cld
adc
mov
int3
dec
sbb
jmp
into
insb
mov
jnp
xchg
arpl
fadds
push
das
cmpsb
lret
lods
sub
movsl
outsl
nop
lock
mov
jb
inc
and
adc
and
push
fwait
out
cwtl
bound
or
fs
pushf
fisttps
or
xchg
test
jno
jb
adc
mov
dec
mov
pop
sahf
add
adcb
shlb
pop
call
mov
jle
mov
sbb
aam
mov
sti
cli
pop
gs
sti
pop
pop
pop
aas
add
ljmp
addl
sbb
xor
imul
mov
lea
xorl
adc
or
or
das
rorb
outsl
movsl
subb
jo
xchg
jae
call
clc
push
sbb
mov
sahf
jge
ljmp
mov
sti
xor
test
jnp
test
mov
addr16
mov
dec
or
enter
push
movsl
sbb
pushl
in
mov
cmp
xchg
mov
fs
add
pmullw
jg
pushl
adc
loopne
sub
cld
jns
sub
push
xchg
lods
inc
adc
fcmovb
jg
imull
loope
push
ret
jle
sub
sub
inc
loope
lcall
cmp
jecxz
xor
lods
aam
sti
and
add
outsl
aas
or
jl
hlt
dec
repnz
mov
cmc
or
mov
ret
mov
dec
ljmp
cli
leave
mov
aaa
and
ljmp
xchg
and
jmp
sahf
adc
mov
xor
je
in
movsl
inc
sar
subb
daa
and
jne
into
xor
jae
mov
add
fnstenv
scas
mov
cs
push
push
int
cmpsl
ror
add
jmp
adc
pop
xchg
push
out
sbb
orb
nop
cmp
sar
out
adc
dec
jne
pushf
or
cmpsl
push
or
push
test
adc
push
inc
std
jg
dec
or
cwtl
jns
pop
adc
fdivrl
shr
ja
lcall
and
lret
sub
pop
inc
in
add
jmp
push
out
ljmp
cmp
pop
add
fbld
clc
mov
adc
jle
xor
roll
es
sbb
mov
subb
sbb
jp
movl
pop
ds
mov
out
lahf
daa
leave
icebp
cmp
pop
mov
xchg
pushl
sbb
xlat
ljmp
pop
in
pop
sbb
sahf
jo
pop
fs
scas
push
push
adc
cmp
jl
leave
div
mov
dec
mov
jae
cmp
movsb
je
xchg
mov
rolb
aaa
jno
adc
ljmp
add
dec
xor
push
cmp
out
movsl
movsl
mov
mov
jl
inc
cld
jmp
sbb
sbb
adc
sbb
dec
sbb
cwtl
jg
cmc
ljmp
int
adc
cs
push
jo
jl
jae
push
xchg
hlt
call
hlt
xor
ficomps
xor
add
sbbb
and
bound
lret
sbb
cmp
call
shr
push
sar
push
pop
ss
and
adc
sbb
push
mov
push
pusha
sub
lcall
pop
xchg
mov
xor
inc
push
jo
sahf
adc
lcall
xor
inc
adc
pop
and
xor
mov
ljmp
cmp
sbb
push
push
sbb
fbld
cmp
dec
push
or
lcall
in
dec
push
xlat
xor
cmpsb
inc
loopne
jg
cmp
addr16
add
cmpb
mov
fiaddl
incl
and
add
aad
sti
cmp
decl
mov
gs
xchg
loope
fdivl
push
fists
negb
jno
or
push
call
imul
in
fsts
dec
imul
xor
pop
aam
pop
or
push
iret
test
test
fsubp
mov
and
pop
aam
sar
decl
lret
loopne
mov
in
rorb
sbb
push
xor
cmpsl
cmpsb
dec
rorl
cwtl
push
lock
mov
enter
inc
pop
sub
movsl
testl
shlb
nop
cmp
incl
pushl
dec
mov
push
fmull
pop
clc
ljmp
mov
ret
inc
fisttps
mov
incl
push
std
sbb
mov
dec
mov
lret
in
and
push
popa
ljmp
push
leave
sbb
in
imul
inc
decl
addb
mov
sbb
mov
add
sbb
mov
aaa
or
stos
and
nopl
ds
cmc
sub
push
cld
fwait
lock
dec
int
jecxz
xor
xor
push
divb
or
xchg
push
sbb
lock
test
lcall
cmp
test
sarb
mov
inc
jge
sub
pop
mov
shrb
pop
mov
add
xchg
jb
in
dec
inc
and
loopne
and
cmp
ds
push
dec
and
cmp
inc
cmp
add
sbb
leave
cmp
or
call
xor
fnsave
and
loop
out
enter
ljmp
movsl
insb
mov
adcl
insb
bound
aaa
sbb
and
jno
jg
adcb
aad
xlat
lret
mov
test
jae
jne
fisubrs
out
aam
cmpsl
fsub
push
pop
popa
popf
or
cmp
lcall
push
inc
adc
cmpsb
mov
xor
add
sbbb
or
mov
ljmp
movsb
xchg
sarl
lret
or
mov
inc
lahf
std
push
ds
mov
and
inc
int3
or
mov
incl
cmp
ret
xor
xacquire
jg
pop
lods
enter
mov
je
test
inc
loope
mov
mov
je
push
or
fidivrs
scas
xchg
nop
mov
insb
sahf
iret
aad
arpl
insl
adc
inc
jmp
sbb
fwait
dec
leave
aaa
lock
std
lss
fdivl
jmp
data16
adc
mov
xor
repnz
fiadds
mov
sbb
push
ljmp
in
push
jb
adc
rcrl
sbb
fistl
mov
incl
mov
and
adc
call
add
out
sub
call
jmp
std
sbb
adc
mov
inc
pop
xchg
ss
into
ss
cli
fildll
pop
push
lods
adc
add
addr16
mov
mov
fbld
mov
or
or
sti
push
es
enter
sar
adc
jg
pushf
sahf
and
mov
aad
rorb
rcrb
jmp
push
in
insw
sbb
mov
test
addr16
out
add
and
dec
cmp
cli
pushl
cwtl
das
aad
mov
in
dec
inc
popf
dec
mov
dec
cmp
aaa
mov
pop
inc
pop
dec
jg
scas
mov
xor
jb
movsl
xorl
clc
aaa
stos
out
pop
or
cmp
jecxz,pn
pop
test
movsb
jbe
dec
loope
dec
or
sub
mov
enter
aam
mov
mov
stos
call
es
or
enter
pushl
sbb
cmp
repz
sub
jae
mov
inc
out
and
and
in
jecxz
out
std
xchg
sbb
add
push
fsubr
out
mov
lds
push
outsb
add
rorb
sbb
cmp
decl
dec
incl
enter
ljmp
add
icebp
sub
andl
decl
js
xor
jo
adc
sti
and
and
jmp
gs
jmp
insb
jecxz
enter
adc
jmp
add
je
and
pop
ljmp
lret
int3
mov
and
lret
pop
lock
jmp
and
sbb
sub
movsl
fiadds
stc
sbb
cmc
or
pushl
int3
xchg
testl
shrb
xchg
popa
pop
push
insb
inc
test
and
aam
call
nop
iret
sbbb
dec
in
mov
push
jo
sbb
adc
mov
decl
or
push
fwait
sbb
aaa
sbb
cmp
xor
sub
mov
jno
test
nop
fdivr
mov
lret
movsl
cmp
cmpl
call
sub
sbb
jg
mov
and
jnp
jne
mov
sbb
sarb
mov
decl
xor
jmp
mov
sarb
mov
jp
cmc
lods
rcrb
jmp
lock
sub
jl
cmc
jae
sub
xchg
xlat
fistpll
adc
into
mov
sub
scas
xlat
sbb
pcmpeqw
mov
out
add
movsb
std
decl
ret
shlb
jo
clc
out
leave
pushf
pushf
gs
mov
jp
cli
imul
ljmp
out
imul
mov
sub
fucom
or
jg
pop
mov
xchg
clc
dec
nop
mov
push
inc
xor
xor
mov
dec
fcoms
mov
in
in
or
jo
cli
pushl
mov
xor
add
or
ss
decl
mov
nop
fmulp
xchg
cmp
lcall
sub
stos
add
incl
inc
or
scas
popf
xor
pop
scas
mov
xor
call
decl
or
scas
inc
and
pop
decl
insb
leave
push
cld
stos
and
cmp
add
and
test
and
inc
cmp
sbb
xor
jmp
add
hlt
push
sbb
pop
dec
insb
test
lds
lcall
icebp
jns
leave
ret
mov
sub
fdivrs
xor
xor
shll
xor
and
std
and
out
or
lcall
call
dec
jg
push
adc
xor
test
add
loope
rorb
mov
jle
adc
scas
mov
shrd
lahf
lock
testb
sbb
fistpll
or
outsl
ss
js
in
sbb
adc
xor
inc
adc
ja
call
je
out
pop
and
insb
test
jae
sub
stc
outsl
imul
fldt
cwtl
inc
fsts
or
inc
mov
xor
incl
iret
adc
cmp
into
insb
je
popa
and
jmp
dec
ljmp
aaa
xor
aam
mov
sti
lcall
push
mov
outsb
push
or
adc
inc
test
incb
das
sub
add
ljmp
xor
cmp
adc
call
loopne
inc
cmp
pop
into
dec
inc
add
jg
jecxz
jle
das
nop
loopne
mov
loop
push
fstl
xchg
stos
dec
test
scas
repz
pop
jnp
pop
jo
loopne
out
mov
push
popa
mov
sbb
xor
pop
pop
add
or
ret
pop
adc
decl
cmp
les
lahf
adc
xor
or
cmpsl
push
adc
andl
sbb
pop
rep
push
call
je
push
mov
dec
and
pop
into
in
cwtl
jnp
push
jmp
add
dec
push
sti
sub
popf
shll
stos
mov
add
jae
adc
or
ret
dec
ficompl
scas
pusha
std
pushl
push
inc
lods
and
lock
sbb
push
aam
mov
cld
push
dec
mov
sub
pop
sub
test
out
movsl
test
fistpll
jo
jns,pn
andb
and
cmp
out
add
adc
push
sub
dec
movsl
sbb
jmp
outsl
call
fnstsw
sbb
ret
add
and
add
aaa
scas
cmp
mov
push
push
xor
inc
lcall
sbb
push
dec
xchg
push
mov
adc
jg
loope
bswap
repnz
inc
adc
dec
xchg
mov
cmpsb
andb
sub
pop
cmpsl
fstps
push
mov
popa
faddl
cli
push
scas
mov
push
adc
out
or
cmpsb
pop
hlt
xor
jb
lock
lcall
mov
adc
push
push
push
aaa
out
mov
aaa
dec
nop
popf
push
test
cmp
cmp
inc
push
pop
adc
and
iret
jp
outsl
lea
jns
in
adc
mov
xchg
and
sub
sbb
or
sti
fwait
or
cs
out
loope
dec
call
mov
sub
sbb
and
loopne
call
sub
cli
adc
lea
xor
sub
cld
decl
xchg
dec
pop
and
add
decl
push
rolb
pop
pop
loope
lcall
pop
xchg
mov
std
das
push
lret
leave
xlat
inc
sahf
or
bound
mov
dec
dec
adc
incl
or
jmp
arpl
in
push
sub
mov
mov
loopne
incl
jae
dec
lahf
push
bound
mov
push
and
mov
mov
bound
nop
add
das
test
mov
mov
adc
dec
lret
mov
fisttps
pushf
movsb
or
mov
lret
lock
jg
aad
sbb
xor
sbb
call
cld
lea
cmpsw
jmp
mov
jl
sbb
ror
jg
add
push
js
and
es
dec
fstps
daa
pop
mov
cld
lods
incl
insb
inc
daa
push
mov
jmp
sbb
lods
pushl
cld
push
cld
xor
out
push
mov
lahf
xor
iret
jns
mov
dec
insb
xchg
ret
cmp
xchg
shl
jbe
test
mov
jno
aad
scas
clc
movsb
xorb
nop
inc
and
jb
xor
loope
incb
lcall
lret
jmp
inc
or
mov
adc
pop
and
inc
cli
or
sahf
int
sub
ret
ds
and
xor
iret
sbb
call
xchg
adc
push
repz
push
cld
mov
add
add
cmpsl
jmp
cld
jno
push
or
cmp
clc
fcomip
pop
lea
jbe
daa
mov
mov
cmp
das
cmp
sub
mov
data16
scas
xlat
push
ljmp
repnz
loopne
ds
stos
jno
xor
inc
loope
dec
and
pop
outsb
sub
popa
mov
push
les
and
loopne
mov
jmp
and
ret
scas
sbb
sti
pop
jne
jl
sbb
adc
adc
pop
pusha
into
xor
mov
inc
sub
dec
inc
in
dec
nop
movsl
insl
inc
lcall
dec
adc
out
adc
das
push
and
add
aas
aas
mov
mov
inc
bound
mov
icebp
in
xor
dec
and
sbb
adc
adc
aad
subl
sbb
addr16
jg
stc
push
xchg
shlb
pop
out
ficoml
decb
dec
iret
ds
dec
fmulp
mov
mov
sbb
fimuls
mov
mov
fsubrs
in
xor
or
pop
ret
or
out
movsb
cmc
mov
shrl
jbe
icebp
mov
stc
in
push
push
jle
add
xchg
test
cs
ja
cs
xchg
cmp
jb
in
pop
adc
dec
push
outsb
xor
push
adc
enter
mov
sub
mov
cmp
xchg
push
mov
lds
mov
push
sbb
pop
out
ret
xchg
ret
sbb
imul
lcall
dec
loopne
jl
xor
inc
in
outsb
sub
shlb
and
test
stos
jg
cmc
out
fsub
into
lock
add
call
aam
movb
int
in
nop
out
cmpsb
jo
orl
ljmp
enter
shll
aas
repnz
js
lods
ss
dec
sub
sbb
mov
loop
adc
fisubrs
aaa
add
or
fdivrs
mov
cmp
push
hlt
jmp
insl
inc
mov
stc
mov
ljmp
cltd
xchg
inc
add
jmp
xchg
test
sbb
cli
mov
mov
popa
dec
inc
lahf
cs
pop
cli
dec
test
and
sbb
push
push
leave
sub
nop
ja
fst
dec
cmp
sbb
rorb
ss
mov
or
filds
insb
addb
movsl
mov
ljmp
fadd
daa
cltd
add
pusha
cld
sahf
pop
adc
mov
sbb
lods
lahf
sub
cld
push
loope
pop
jb
mov
lods
sti
push
movsl
pop
and
mov
inc
cmp
jns
cld
pop
enter
incl
adc
cs
add
xor
andb
decl
incl
mov
dec
movsl
fcompl
sahf
daa
pop
cmpxchg
cs
sbb
gs
ret
es
push
jp
mov
int3
xchg
dec
mov
outsb
mov
pushf
sub
cmp
dec
sbb
add
arpl
sbb
hlt
cmp
xor
cs
cmpsb
jle
test
jmp
repnz
mov
or
pop
dec
cmp
popf
cmpsb
decb
mov
idivl
sbb
hlt
jns
out
xchg
cmc
decl
inc
in
das
and
jns
cltd
shll
jne
add
fwait
je
int
and
adc
add
ljmp
data16
and
push
sub
sbb
pop
add
mov
or
fildll
lods
push
popf
push
scas
xchg
sbb
clc
or
push
cmc
jle
mov
je
icebp
pop
aaa
jle
pop
test
loopne
sbb
mov
xchg
ror
or
and
out
jg
dec
and
into
or
fcoml
repz
sub
add
das
xchg
pushl
icebp
or
or
mov
adc
lods
loop
ljmp
pop
push
shlb
jecxz,pn
or
add
dec
int
es
and
mov
cmp
bound
xchg
pop
cmp
es
call
jb
mov
sub
add
in
jb
insl
loopne
add
loop
dec
or
jl
xchg
mov
cmp
push
fstl
ds
in
jg
arpl
xlat
dec
push
loop
cmp
clc
outsb
sti
gs
xchg
push
add
add
fadds
sbb
sub
xor
inc
adc
sarb
push
mov
xor
mov
cmpsl
aad
push
repnz
popf
pushf
mov
lret
fimull
insb
or
lret
pop
fwait
push
and
pop
adc
sub
mov
popa
loope
pop
jg
sbb
fsubrl
arpl
xchg
popa
fcmovnu
inc
and
jnp
push
mov
fnsave
leave
push
add
pop
pop
sub
sub
pop
pop
push
and
nop
mov
mov
movsl
mov
sub
test
push
push
sub
fisttps
test
ret
lcall
icebp
add
in
jge
jmp
dec
dec
gs
ds
fsubrl
mov
sub
mov
jp
push
bound
mov
cli
jmp
mov
loopne
xchg
ds
or
sbb
xor
ds
nop
pop
sarb
faddl
push
dec
or
clc
inc
push
dec
imul
cmp
or
aam
fisubs
add
add
pop
mov
adc
cmc
mov
sub
and
dec
or
sarl
bound
mov
mov
mov
imul
push
jns
sbb
es
cmp
adc
fbld
ja
aam
xchg
cmpsb
loopne
pop
sbb
or
outsb
xchg
xchg
ret
adc
in
push
dec
and
orl
push
fwait
cmovne
pop
xor
jns
mov
push
inc
add
call
ret
or
cmp
rolb
sti
cmp
lahf
xorb
mov
mov
pop
sbb
sbb
push
xchg
out
or
gs
push
or
or
xchg
push
adc
dec
insb
push
xor
pop
mov
push
inc
in
cmpsl
loope,pt
cmp
leave
shl
lcall
mov
js
xchg
pop
outsb
cs
or
jg
cltd
jle
decl
lcall
and
fcomip
daa
push
ljmp
sub
in
pop
or
sbb
cld
fildll
pop
or
sbb
jg
pop
scas
mov
mov
add
add
pop
cmp
outsl
mov
adc
jg
and
xor
jo
or
test
mov
sar
insb
repz
mov
mov
sbb
mov
les
xchg
ficompl
lds
jp
add
mov
in
pop
addl
stc
bound
dec
bound
mov
add
pop
dec
xchg
mov
fsubp
fnstenv
and
stc
or
lods
mov
cli
jle
xor
push
clc
outsl
pop
sub
into
and
mov
sahf
and
ret
imul
popl
dec
loopne
mov
jg
xchg
adc
add
test
fidivrs
jg
fwait
sbb
xor
mov
mov
mov
inc
scas
xchg
mov
cli
jmp
sub
cltd
sub
ljmp
push
cmc
jg
arpl
call
adc
inc
mov
stc
call
in
jne
mov
gs
sub
clc
or
adc
dec
int3
enter
loope
scas
inc
pop
xchg
mov
jg
lods
jmp
arpl
fs
and
cli
mov
ljmp
aas
pop
std
sub
ja
mov
out
push
jmp
fisubrl
add
rcrb
scas
sbb
int
push
movsl
sub
mov
sbb
out
imul
sbb
clc
sub
jmp
inc
adc
ljmp
pop
inc
mov
or
inc
mov
mov
xchg
cmp
sbb
inc
or
outsb
add
sbb
ficompl
jle
ffree
sub
movb
pop
jle
add
fs
inc
and
pop
addr16
lods
negb
ds
call
sub
xor
mov
shll
ss
cmp
add
decl
add
les
mov
icebp
jne
mov
dec
xlat
push
xchg
or
pop
call
daa
adcl
add
mov
mov
mov
sbb
aam
push
push
cld
scas
incl
pop
cwtl
int3
aas
testl
pop
sbb
and
mov
jge
test
cli
dec
cld
fs
push
int3
stos
push
push
jns
das
cmp
mov
fwait
lret
adc
push
xor
jmp
push
in
push
mov
jp
add
sbb
fmull
pop
jle
and
icebp
pop
loop
jg
insb
es
loop
xchg
sbb
cli
addb
repnz
inc
and
xchg
cmpsl
push
fimull
mov
xchg
int
ds
jp
je
test
pop
cmp
mov
cmp
mov
push
sub
mov
jae
aas
jge
lods
sub
cmpsb
rorb
mov
inc
push
add
sbb
adc
int3
sub
call
mov
mov
mov
testl
test
repnz
jae
mov
fidivrs
aad
add
add
es
mov
push
arpl
les
mov
es
clc
js
mov
sarb
sbb
or
cmpsb
filds
dec
and
sti
sbb
sbb
cli
pop
add
jp
dec
test
jno
fcoml
idivb
dec
iret
cmp
lds
subb
in
outsb
outsl
jg
das
push
test
cmp
mov
cs
xor
data16
add
adc
pop
mov
pop
gs
adc
cwtl
add
movb
adc
outsl
jb
int3
movb
mov
jg
cmc
inc
mov
dec
andb
je
lea
mov
or
cmp
out
loope
shl
sub
inc
mov
ljmp
hlt
add
xchg
or
dec
clc
xor
sub
dec
in
add
jb
dec
pop
dec
xchg
lcall
mov
jnp
push
inc
and
sub
mov
decl
cmc
lds
cmpsl
mov
fisubrs
in
out
push
dec
push
jns
cli
mov
rcrl
mov
iret
sbb
mov
js
sub
jmp
nop
out
cmpb
dec
xor
fildl
lods
sbb
mov
mov
repz
in
fidivrs
adc
sub
sub
fs
sub
jne
in
or
ja
cli
pop
faddl
lods
shr
jp
loopne
dec
popf
push
ret
or
and
inc
ljmp
nop
repz
mov
dec
addr16
icebp
mov
out
push
ss
gs
out
test
enter
hlt
pop
jne
adc
jecxz
cmp
pop
mov
mov
or
ret
xchg
jo
aas
mov
jb
aas
clc
movsl
adc
or
inc
pop
xchg
inc
ret
xor
mov
mov
dec
push
movsb
lea
or
and
lods
push
sti
pop
sub
and
aas
js
jno
test
dec
das
into
stos
lahf
lahf
test
aad
and
push
adc
clc
add
adc
scas
fnsave
and
dec
jmp
je
pop
dec
and
pop
pop
sub
stc
xor
pop
pop
fldt
fs
ss
loope
inc
jecxz
adc
xor
push
les
push
push
das
xor
lods
mov
mov
addb
mov
out
incl
mov
cmp
add
pushf
outsl
adc
imul
cmpsb
and
ds
pop
and
sbb
dec
mov
push
data16
pop
aas
or
bound
sbb
bound
xor
xor
cltd
mov
dec
dec
fisttpll
in
iret
jl
mov
lods
or
cmp
inc
jno
ljmp
pop
pop
loope
push
pop
mov
repz
aaa
ja
pop
push
shrb
repnz
and
and
add
cltd
or
push
in
xor
imul
repz
ds
mov
sbb
dec
add
cmp
repnz
and
dec
add
cmpsl
add
fsubrs
sahf
push
ret
movsb
xchg
pop
cld
aaa
sub
and
inc
sub
inc
rcll
sar
jecxz
mov
mov
ja
clc
ss
push
adc
outsl
adc
or
pop
in
adc
adc
ret
mov
cmpsb
jmp
daa
adc
jmp
jb
xor
pop
iret
adc
jmp
push
dec
js
pop
pop
pop
mov
outsl
adc
cmp
and
and
jg
pop
rdpmc
xor
rol
incl
jo
pop
les
sti
jns
and
xor
popf
and
scas
scas
repnz
leave
jmp
in
push
iret
popa
pushf
adc
cmp
lods
push
mov
int3
push
adc
jg
jne
lock
xorb
sbb
jge
lods
insl
test
rolb
lods
stos
popf
andl
xchg
jg
decb
andl
adc
jg
adc
mov
inc
cmc
pop
dec
shlb
push
inc
cli
pop
xor
dec
mov
enter
mov
inc
repnz
mov
sub
inc
dec
pop
lahf
flds
push
clc
fildll
in
imul
push
xor
push
sub
and
cmpsl
jno
stos
jb
rcrl
pusha
mov
sub
outsb
clc
fists
mov
cs
adc
clc
inc
inc
es
sbb
jbe
jge
dec
and
jbe
out
xchg
push
in
in
and
ljmp
lods
enter
pop
ret
pop
xchg
rorl
out
push
loop
outsl
ljmp
sub
out
sar
xor
jbe
mov
or
pop
sub
sarb
sub
pop
pop
sarb
sbb
push
push
in
test
les
mov
lcall
ja
lcall
rcrb
push
cmp
pop
push
icebp
incl
jp
mov
mov
cmpsb
adc
adc
xchg
fdivrl
jg
pop
pop
test
jp
es
pop
adc
lods
cltd
iret
sub
add
pop
add
rcr
mov
std
or
sahf
push
push
xlat
mov
std
jg
cld
pop
xchg
aaa
xorl
subb
push
add
pop
inc
or
hlt
sbb
mov
add
mov
jbe
jmp
mov
mov
sbb
lods
jno
das
ljmp
js
cltd
movsb
mov
loope,pn
xor
cmp
decb
imul
jne
testb
lds
loopne
xchg
sub
adcb
test
sbb
and
cmpl
xchg
sbb
pop
fs
mov
das
push
jo
lcall
mov
arpl
pmaxub
ror
or
lret
insb
sbb
mov
sub
std
or
lock
out
dec
sub
and
xor
mov
sub
xchg
outsl
pusha
jge
add
mov
pop
mov
imul
cld
xor
fwait
cltd
div
sub
inc
and
cmp
lods
rcrl
inc
xchg
repnz
sub
gs
xor
mov
clc
cmp
inc
xchg
je
xchg
inc
push
or
jecxz
fcoml
aad
enter
js
stos
push
mov
aad
mov
loop
adc
sub
xor
xlat
mov
adc
and
lret
jg
test
mov
in
push
lret
pop
aam
loop
adc
insl
add
adc
loope
in
mov
mov
pop
cmp
jge
incl
int3
aas
push
cltd
sub
cmp
sbb
mov
xor
cmc
inc
fildll
add
jbe
adc
or
dec
and
mov
jp
push
add
pushl
xor
pop
add
sub
and
inc
cli
sbb
pop
sbb
adc
mov
push
mov
sub
sub
xor
icebp
jb
aaa
and
jg
add
xor
andb
repnz
orb
sub
mov
addb
es
lock
repz
xor
jle
loopne
incl
lret
or
lret
inc
xor
inc
sub
repnz
mov
dec
clc
mov
xor
insb
cli
mov
fwait
popf
sti
scas
aam
xchg
outsb
dec
dec
pushf
adc
cld
sbb
fxch
out
adc
sbb
mov
outsb
push
add
pop
adc
xchg
or
push
cmp
cmp
jnp
or
lock
inc
lcall
sub
aas
sub
xchg
fwait
cs
addb
call
aas
jmp
xchg
push
add
int
mov
cmpsl
call
sti
mov
jg
xor
clc
neg
push
pusha
in
je
push
mov
mov
cltd
stos
sub
in
orb
inc
test
aas
outsl
ret
add
jns
jae
cmpsl
and
fdivl
orb
dec
jb,pt
aad
push
in
jg
das
inc
jo
mov
bound
sbb
adc
leave
adc
ja
xchg
ficoms
jecxz
adc
add
jecxz,pn
mov
test
dec
aas
out
scas
test
dec
cli
les
insl
push
sbb
stc
cmp
add
sub
sub
mov
add
push
xlat
out
in
add
iret
jae
sub
aaa
je
enter
scas
mov
dec
clc
and
sub
outsl
pop
dec
cs
sti
dec
adc
addr16
test
mov
dec
jmp
xchg
push
shl
pushl
ffree
xor
cmc
or
repnz
lret
push
pop
and
inc
aaa
push
js
adc
fcmove
leave
rclb
lcall
xchg
push
mov
sub
aas
js
mov
inc
add
test
pop
lods
push
dec
xor
ds
xor
xor
jmp
les
sub
push
mov
insl
add
or
sbb
mov
add
dec
mov
add
xor
cmp
insl
cld
push
std
sub
gs
jecxz
push
jle
xchg
inc
pop
ljmp
test
popf
mov
dec
ret
inc
cmpsl
xchg
sahf
nop
adc
test
lcall
sub
dec
inc
cs
cmp
xlat
shlb
fs
push
inc
inc
push
cli
mov
or
and
push
inc
pop
add
sbb
enter
fidivrs
xor
or
clc
xor
in
addr16
cld
jmp
cmp
sub
jg
xadd
lea
mov
jecxz
shl
sahf
cld
imul
outsb
pop
movsl
aas
push
and
jb
out
cmc
pusha
pop
add
sbb
push
or
xchg
or
add
std
filds
xchg
push
jg
cmp
mov
lock
movsl
sar
lcall
jbe
push
sti
mull
cs
es
and
xor
fst
jmp
mov
das
mov
adc
jns
add
mov
jb
clc
jmp
es
vmovapd
and
xlat
mov
lock
dec
xchg
loope
scas
ss
sub
cwtl
push
incl
int3
call
cmp
outsb
fcomi
and
add
jns
push
shrl
push
mov
mov
dec
inc
xor
add
adc
adc
cmp
add
xchg
iret
ret
pop
cld
add
daa
lea
jne
cmp
inc
push
stos
cmpsb
fimuls
and
into
rolb
repnz
adc
xchg
out
mov
and
push
jmp
or
sub
xor
push
pop
pop
inc
loope
add
cs
fisttps
adc
adc
sbb
cmc
xor
inc
cltd
clc
cmp
aas
jb
lods
jae
ljmp
push
xchg
pop
jns
cmpsl
and
es
dec
inc
int
or
mov
or
push
dec
dec
shll
inc
ljmp
adc
xor
fbld
es
push
adc
xor
sub
ficoml
ljmp
fdivrl
sbb
jno
in
jne
cmpsb
scas
fildll
in
outsb
div
mov
mov
ljmp
sbb
xchg
dec
sbb
xchg
mov
es
pop
xor
jg
mov
gs
sbbb
lea
jmp
mov
sbb
int3
aaa
pop
das
es
xor
lcall
clc
ljmp
jno
or
push
mov
das
cli
sbb
mov
jnp
xor
lcall
repnz
fdivs
sbb
loopne
loope
push
sbb
mov
xor
arpl
clc
test
aam
cli
pop
add
inc
rorb
or
adc
decl
or
imul
add
or
fldcw
and
jg
sbbb
sbb
or
pop
sub
aaa
sub
out
ljmp
or
cmp
jp
mov
outsb
dec
test
subl
gs
leave
jl
jp
mov
and
mov
shlb
js
arpl
ljmp
add
sub
pop
jmp
loopne
jae
mov
push
fistps
mov
cli
lcall
fs
jno
jecxz
ljmp
mov
movq
push
stos
xor
ja
sti
enter
push
add
sbb
mov
fs
sbb
bound
mov
lahf
pusha
sub
mov
icebp
jnp
dec
jns
push
cmpsb
out
ljmp
add
mov
pop
inc
add
sti
loopw
ffree
ret
sbb
adc
push
icebp
insl
pop
xor
and
and
jo
add
push
shrl
in
inc
fstl
fdivrs
jmp
jg
xchg
xor
cmpsl
adc
jecxz
mov
call
adc
push
dec
in
or
sub
idivl
sti
inc
push
push
jb
push
stos
imul
mov
in
bound
incb
rclb
and
aaa
cld
decl
loop
mov
pop
xor
inc
adc
and
outsl
pushl
call
loope
jno
or
or
fistpl
mov
or
in
fs
push
out
cmp
out
add
addb
adc
dec
jne
sub
mov
mov
cld
pushl
mov
repz
cltd
xchg
sbb
mov
rcr
mov
push
loop
jmp
jmp
adc
add
add
out
das
fwait
mov
lcall
add
insb
inc
mov
shlb
sbb
es
ljmp
dec
cwtl
jmp
imul
mov
sbb
xchg
cmp
lods
sbb
inc
add
pop
cmpl
sbb
mov
xor
sbbb
jl
sti
jb
out
fcom
out
insb
sbb
and
mov
and
lock
pusha
or
popf
cmpsb
cmp
and
and
cli
add
fadd
aam
out
jo
adc
rcll
imul
sub
mov
lret
push
add
or
fisttpl
call
std
cld
outsl
cli
pop
xor
pusha
mov
aaa
jp
xchg
repnz
mov
sub
dec
sub
mov
test
shr
push
cmp
jns
mov
ljmp
test
loope
jp
mov
or
jg
icebp
sbb
sbb
scas
mov
adc
int3
jns
push
sub
iret
xchg
movsl
jns
or
ljmp
dec
std
pop
xchg
inc
jecxz
cltd
lret
pop
imul
mov
lds
sub
mov
popa
push
loop
lock
adc
mov
cmp
sub
xchg
cltd
xlat
adc
icebp
shl
adc
push
clc
add
ss
inc
jb
hlt
push
hlt
and
push
xor
in
jg
cs
call
std
fucom
fcmovb
aam
std
push
aad
js
and
cltd
std
mov
push
push
gs
dec
loope
insb
cld
adc
mov
scas
imul
fisubrl
mov
and
cmp
mov
push
jbe
mov
rolb
sub
loopne
mov
jle
xor
loopne
pop
in
lods
or
inc
test
mov
and
out
xchg
jne
test
dec
ret
enter
stc
sti
push
push
shrb
decl
or
int
jae
leave
fsubrl
cmp
mov
cmp
test
ja
lret
adc
test
pushf
out
insl
std
cmp
jmp
mov
cmp
leave
xlat
dec
in
or
in
push
aas
jmp
inc
mov
xchg
push
jl
fdivr
push
mov
scas
or
rol
sbb
push
push
out
sub
add
or
jl
fsubl
mov
fsubl
test
andl
leave
lea
pop
mov
filds
mov
sbb
and
sub
outsb
mov
add
orl
ljmp
lods
lds
or
ret
mov
ret
cmp
pop
mov
adc
pushf
je
xor
incl
push
cmp
lea
std
mov
lret
femms
andb
add
sub
xor
jg
lcall
pop
ja
adcb
jecxz
add
or
lock
arpl
je
xchg
inc
mov
sar
xchg
lret
xor
es
cmp
pop
mov
push
ljmp
jmp
cmp
mov
in
add
add
push
cmc
jb
inc
cmpsb
fists
mov
xor
fcoml
xchg
pop
cmp
addb
xchg
data16
call
push
xchg
iret
push
pop
push
sahf
mov
cld
sbb
aaa
or
out
mov
adcl
rcrb
sub
ss
push
and
add
call
xchg
sbb
pushf
dec
sbb
test
incl
stos
adc
xchg
push
jl
sbb
cmpsb
outsb
xchg
xor
mov
ljmp
add
sbb
cmp
adc
int3
push
sbb
rol
lock
jecxz
inc
pop
jnp
mov
ret
xor
fadd
sub
jp
das
mov
fisubrl
add
jns
loope
add
aaa
inc
sub
cld
nop
push
std
decl
cld
xor
pop
popa
sbb
and
jge
sti
mov
or
decl
mov
cmp
xchg
outsl
lods
xor
int3
jecxz
sti
pop
sub
dec
jb
nop
and
addr16
and
dec
jbe
dec
das
push
fmulp
loopne
std
jmp
ret
sub
sub
aad
ficompl
and
notb
adc
pop
or
int
mov
fnsave
stos
inc
mov
fildll
les
js
arpl
adc
rol
mov
or
or
jle
xchg
mov
negb
jbe
aaa
jbe
add
repnz
lods
fisttps
fidivrl
push
or
test
cltd
mov
imul
dec
roll
pop
inc
fs
mov
insl
jle
adc
mov
inc
pop
or
add
loope
jg
bound
clc
fadds
cwtl
shrl
or
xor
scas
ret
inc
add
or
cmp
lds
ljmp
les
sub
adc
and
push
call
dec
dec
pop
inc
mov
fs
jg
hlt
aaa
aam
sbb
push
int3
mov
push
cmpsl
mov
ds
sbb
inc
xor
fisubl
fs
mov
fisubs
arpl
fcmovne
fstl
das
mov
or
jo
or
fimuls
xor
shl
or
ss
sbb
in
ds
mov
call
data16
or
add
lahf
aad
inc
addl
adc
imul
or
das
stos
sarb
cmc
inc
add
mov
shl
iret
sbb
or
add
fcmovnbe
cmp
push
lds
aam
xor
pop
call
inc
js
adc
out
cmpsb
mov
sub
add
pop
incl
das
push
sbb
cmc
fsubs
sub
add
add
test
push
movsb
out
or
push
cmp
in
pop
cmp
add
into
inc
loopne
sub
pop
and
call
xchg
xor
es
cmp
and
jl
xchg
inc
or
scas
in
xchg
jmp
fucomip
inc
pop
shll
xor
je
pop
out
adc
out
rolb
or
mov
sbb
push
jp
addl
shlb
ret
decl
les
es
add
jg
hlt
or
sub
inc
and
ud0
lock
mov
mov
sub
lea
ljmp
ljmp
lcall
fbld
pop
out
and
cmpsb
sbb
fs
inc
or
pop
inc
subb
fmuls
test
cmpsl
aad
mov
mov
push
or
xchg
push
and
sub
jb
sbb
lcall
cmp
adc
mov
and
or
pop
or
mov
jg
mov
xchg
pop
or
xchg
xor
ja
and
xchg
add
jmp
daa
sub
mov
xor
sahf
mov
call
outsb
scas
mov
clc
mov
mov
shll
sub
mov
andb
icebp
dec
mov
adc
sbbl
jmp
xchg
mov
in
ds
cmp
les
std
dec
mov
jnp
sbb
cmp
lahf
xor
dec
dec
mov
int
aam
cld
jno
adc
lcallw
and
xchg
movsl
mov
enter
jbe
or
push
mov
lahf
or
xlat
or
and
cmp
mov
adc
out
add
cmp
cltd
cs
popf
pop
xchg
ret
sub
jns
xor
sub
aaa
pop
in
outsb
enter
fdivrs
sbb
jg
mov
adc
aas
sbb
clc
push
aad
push
and
pop
cmp
xchg
cmpsb
outsl
adc
jg
push
sbb
cmpsl
sub
mov
add
aas
sbb
sahf
mov
fbld
add
mov
rcll
and
inc
ss
add
icebp
mov
add
sbb
mov
adc
sbb
mov
sub
hlt
or
arpl
fstpt
pop
lcall
push
adc
sbb
push
mov
lahf
adc
push
and
or
xchg
lods
cld
pop
or
in
sbb
mov
add
jnp
stos
or
mov
bsr
jg
adc
pushf
sub
mov
lods
and
jns
push
cmp
icebp
adc
shrb
mov
fisttpl
xchg
adc
mov
cmpsb
xor
mov
or
out
or
cld
fildll
cmpsl
inc
les
jb
pop
sub
adc
ds
sub
xchg
incl
xor
mov
lahf
xor
dec
pop
inc
jmp
out
xchg
jl
add
rclb
mov
sbb
fdiv
cltd
and
push
fdivl
lock
and
ljmp
pop
xorl
sbbl
xor
or
fidivrl
popa
test
and
dec
popa
adc
xchg
jmp
add
or
mov
fldt
jecxz
mov
test
and
adc
test
mov
mov
xchg
adc
mov
fisttps
xchg
jne
sub
jg
inc
cld
inc
inc
jno
pop
popl
mov
dec
jl
jmp
sub
es
lock
cmp
pushl
adc
add
pop
pop
popa
xor
sbb
pop
outsb
xor
sti
scas
pop
popa
cld
mov
out
mov
mov
rorl
sub
incl
movsb
lea
xchg
xor
cmp
call
sbb
cmp
and
push
pusha
ret
inc
sub
shl
xchg
jle
sbb
xor
xor
sbb
ja
clc
adc
test
xor
cmp
out
call
jo
cld
cmp
or
insl
int
aas
lock
or
int
daa
imul
enter
pop
out
in
xchg
movsl
jl
pop
in
pop
shrb
sarb
outsl
test
jle
push
pushf
add
into
outsl
xchg
adc
and
nop
je
fsub
loope
call
sbb
dec
xchg
flds
or
pop
pop
jb
add
pop
in
sbb
les
les
mov
mov
mov
subb
cmc
ljmp
aam
cld
leave
das
enterw
push
aaa
jg
jg
ljmp
clc
call
imull
or
cmp
idiv
dec
ret
lods
repnz
inc
js
js
sbb
sbb
in
and
adc
dec
push
or
or
push
dec
cld
loope
mov
push
fcomip
push
push
jle
push
and
jae
cmp
lcall
or
rcr
movsb
hlt
clc
mov
xchg
popl
repnz
mov
xchg
pop
ljmp
decl
jp
or
add
sbb
cmp
js
mov
jbe
sub
mov
adc
scas
push
mov
or
mov
cld
fadds
cmc
jp
push
lock
add
lock
pusha
sub
and
adc
jg
pop
dec
and
aaa
mov
leave
loopne
xchg
lret
sub
fs
fmull
cmp
sub
imul
aaa
cld
lcall
ficoms
cmp
bswap
sbb
add
cmp
xchg
push
sbb
aam
les
shrl
fs
loop
das
fcomi
jg
jne
dec
imul
in
cmp
xchg
imul
mov
mov
adc
ds
loopne
mov
xchg
fiaddl
test
ds
dec
xor
sub
iret
adc
jmp
sbb
lcall
rcrl
mov
xchg
jg
iret
std
xchg
or
cwtl
lcall
or
push
xchg
pop
icebp
out
push
sub
scas
inc
ror
cmpl
hlt
loopne
adc
cld
sbbl
and
stc
jae
dec
jmp
imul
cli
pushl
cmc
xor
sub
and
or
jg
xchg
adc
jns
sub
mov
lods
mov
sbb
and
mov
and
cmpsb
mov
inc
push
mov
pop
and
lock
sub
sub
aaa
cmp
mov
or
pop
or
jae
dec
ret
ljmp
repnz
rorb
push
pop
add
or
cmp
ror
or
and
and
incl
pop
fiaddl
ja
es
xorl
pop
sub
inc
std
sbb
cli
inc
mov
mov
adc
sub
sbb
and
lcall
adc
or
pop
push
enter
sbb
push
pushl
stos
shrl
dec
sbb
push
or
mov
xor
xor
mov
aad
jae
int
ret
clc
mov
arpl
cmc
hlt
xor
stc
mov
adc
fwait
or
in
adc
fbld
and
dec
aaa
dec
jb
bound
dec
and
daa
insl
cld
call
pop
fiadds
xor
cmp
jg
es
lods
xchg
sbb
sub
cmp
lret
adc
aad
xchg
incl
enter
and
das
add
jg
stc
dec
sbbl
dec
and
or
sar
enter
arpl
mov
jno
and
inc
xchg
mov
call
push
adc
add
xchg
cmp
loopne
aam
cmp
fwait
push
sbb
scas
fisttps
aas
in
cmp
lea
cmpb
std
cs
sbbb
jmp
cmc
mov
test
mov
jp
adc
inc
push
dec
jl
mov
sti
jge
out
mov
rcrl
lret
sbb
cli
mov
sub
es
rorb
mov
ja
adc
cmpsb
xor
decl
cli
sbbb
pop
pushf
mov
loope
mov
pop
or
jmp
jg
push
pushl
lret
mov
or
cwtl
jecxz
pop
and
fisttps
jmp
inc
rcrl
out
pop
rcrb
and
adc
popf
shll
adc
icebp
stos
jl
test
cmpsl
aaa
or
dec
xlat
jmp
test
sahf
pop
sbb
inc
mov
incl
push
sub
xchg
cltd
loop
sti
sbb
push
pop
pop
xor
dec
sahf
cld
mov
ljmp
pop
jb
cmp
inc
inc
jae
stos
jl
jp
lret
add
xor
jmp
mov
cld
jg
cmp
sbb
push
pop
sbb
lcall
fsubs
roll
inc
or
dec
push
in
cmp
std
push
or
pushf
xlat
fldt
and
or
cmp
das
mov
or
sub
add
jmp
jb
rolb
xor
mov
mov
mov
or
nop
pop
pop
andl
outsl
jbe
add
iret
and
sub
mov
aaa
rcl
inc
mov
add
popa
cwtl
fwait
xlat
dec
test
jp
fs
test
push
cwtl
cld
add
cmp
push
mov
insl
aas
dec
bound
popa
into
test
add
fwait
add
movsl
stos
hlt
push
fimull
inc
aam
dec
fwait
sbb
and
sbb
repnz
jbe
mov
outsl
mov
lahf
outsl
shll
call
and
lret
aaa
fs
sub
stos
inc
xchg
mov
pop
inc
jg
imul
pop
jo
sbb
and
adc
es
push
gs
lahf
xchg
popa
and
hlt
orl
outsb
loope
adc
dec
sbb
call
in
jg
inc
test
mov
adc
aam
fildll
lahf
ror
or
cmp
mov
push
out
ljmp
lea
data16
fidivrs
in
aaa
and
and
jecxz
bound
pop
add
sub
or
jle
push
add
addl
data16
idivb
loopne
test
add
push
sub
xor
fwait
mov
add
adc
mov
ljmp
mov
sbb
pushf
iret
inc
mov
dec
ficompl
sbb
sbb
xor
or
dec
stc
sbb
dec
lds
xchg
or
incl
loopne
cmp
rcrl
and
inc
loop
or
inc
jno
shll
jp
mov
or
add
push
clc
in
and
out
lcall
add
jno
lock
jmp
rcrb
incb
jge
mov
out
xor
cmp
adc
les
testb
jg
sub
cld
outsl
cmpb
jle
ds
nop
dec
mov
or
cmp
out
adc
jle
fidivrs
cli
test
sbb
decb
es
shrl
lcall
and
mov
mov
subb
push
leave
xchg
sbb
sbb
cmp
sub
jns
push
fsubs
cmp
pusha
loopne
jmp
cmp
push
mov
dec
bnd
xor
lcall
add
mov
js
add
lock
cmpb
lcall
xchg
sub
or
sbb
ja
lret
fs
cmpsb
lret
mov
leave
add
cmp
fs
enter
xor
js
outsb
push
jecxz
fildl
or
ljmp
add
pop
popf
xor
mov
adc
add
les
add
sbb
push
sbb
mov
or
test
dec
mov
enter
outsb
push
int
call
adc
mov
fwait
mov
push
and
das
adc
mov
mov
loop
sarl
inc
out
jmp
pop
and
mov
mov
lcall
cld
pop
das
sbb
data16
lods
and
and
or
jns,pn
ja
clc
decl
sub
sbb
fsubrs
mov
adc
stc
add
sbb
jp
push
push
les
jg
stc
stc
or
push
ljmp
sub
dec
scas
sub
mov
mov
inc
fisubrs
ljmp
cmp
fcos
pop
mov
test
mov
pop
in
xchg
loope
subb
jg
test
sbb
int
jp
adc
daa
fmul
loopne
dec
scas
cs
cmpsb
sub
mov
mov
aaa
pop
loop
incl
loop
sub
push
outsl
jbe
pop
add
inc
adc
out
dec
cmp
enter
movsb
cwtl
lcall
decl
sbb
or
fists
pushf
jo
call
loopne
fwait
mov
fimull
pop
jp
mov
push
test
mov
mov
fdivl
inc
daa
pushl
push
jmp
sub
xchg
nop
fcmovnu
or
inc
mov
or
in
outsb
orl
mov
or
lock
or
insb
and
xchg
insb
sbb
loopne
or
adc
sbb
ljmp
data16
xchg
rcll
inc
bound
out
stos
inc
cld
decl
pusha
sbb
movb
xchg
xor
je
ret
orl
or
push
jnp
xor
loop
or
or
inc
cltd
hlt
repnz
xchg
jl
dec
decl
sbb
dec
lret
xor
inc
add
imul
pushl
hlt
push
scas
adc
in
pop
and
les
mov
push
jmp
adc
fdivrp
jb
cwtl
inc
pop
jmp
jns
cmpb
jmp
ja
fmuls
hlt
dec
mov
jne
and
nop
cmpb
ljmp
jl
aas
jle
call
cmp
inc
aas
or
jg
cmc
push
mov
iret
ds
cmp
test
mov
daa
push
fs
cltd
mov
lods
subb
dec
lret
or
cmp
lock
xchg
xchg
popa
or
jb
mov
verw
xchg
out
aaa
fstpt
or
je
push
add
rorb
jge
cmp
cmpsb
lcall
xor
in
adc
sarb
xor
and
rolb
mov
and
insl
aaa
jecxz
push
jae
xor
pop
adc
mov
jg
lock
xchg
pop
push
loope
inc
call
xor
fdivr
jp
and
fisttpl
icebp
insb
cmp
mov
je
shll
xchg
icebp
call
ret
je
dec
sbb
bsr
aaa
mov
push
mov
insb
addl
xlat
inc
daa
push
sub
add
push
subb
call
repnz
rorb
decl
data16
lods
inc
daa
leave
lods
loop
pop
push
movsl
sub
dec
cli
push
inc
lcall
mov
scas
pop
mov
jno
out
jb
xor
xor
sti
cmp
jle
int
push
rorb
in
jbe
add
inc
or
sub
cmpl
in
fisubrl
fsubr
sbb
js
dec
insb
pop
stos
lea
mov
xor
pop
jmp
outsb
call
sbb
divl
lret
fidivs
mov
mov
mov
jg
icebp
rcrb
fists
movl
dec
call
lcall
pop
movsl
mov
adc
push
pop
jecxz
push
hlt
or
arpl
aaa
iret
pop
js
mov
pop
test
push
and
add
sbb
pushl
mov
lret
enter
push
xchg
jnp
out
jl
xor
mov
cld
lcall
sub
jbe
aas
aas
sub
addr16
out
divb
ret
sbb
xor
filds
dec
shrl
cmp
jg
dec
subl
lods
movsl
dec
sub
and
xchg
or
call
sbb
jo
lret
or
or
inc
and
mov
xchg
sbb
arpl
es
mov
cmp
fcomps
repz
adc
ja
push
push
lock
mov
aad
add
daa
hlt
clc
hlt
add
sbb
icebp
das
xchg
sub
adc
inc
or
mov
out
ljmp
idivl
mov
incl
and
mov
repnz
ja
aas
add
mov
xchg
mov
mov
les
push
jmp
jae
ds
sub
pop
sub
insb
dec
xchg
or
out
les
movsb
outsl
push
icebp
insl
jnp
les
cmp
rorb
clc
cmp
dec
jecxz
adc
or
test
lods
mov
xlat
decl
sarl
daa
pop
jmp
mov
aam
js
inc
out
es
fwait
icebp
mov
out
sub
sub
mov
call
aam
cli
xor
xor
mov
iret
jp
xchg
mov
shrl
test
pop
in
notl
or
push
lock
mov
lcall
out
mov
add
stos
mov
out
jp
dec
dec
inc
fildll
lahf
add
cmp
pushl
jne
cvtpi2ps
push
add
scas
xchg
jge
das
rol
mov
outsl
and
jmp
xchg
loopne
outsb
adc
sbb
cli
adc
lret
jl
jns
stos
in
jb
mov
pop
shlb
jl
cmpsl
dec
jecxz
pop
iret
cltd
pop
push
add
pop
mov
fwait
pop
roll
js
jecxz
cwtl
and
std
jmp
xorb
cs
mov
movsb
fsubr
testl
out
or
lock
ljmp
cltd
push
iret
ret
xchg
or
int3
mov
movsl
pop
pop
mov
ret
jg
sti
jl
int3
js
scas
push
sub
sbb
cwtl
xor
add
pop
inc
popa
adc
imul
ljmp
xor
jns
enter
or
adc
addr16
sbb
and
incl
loopne
push
mov
mov
fcmovbe
mov
jge
jbe
sub
mov
mov
mov
xor
mov
out
in
cmp
out
sub
incl
loopne
nop
sbb
xor
jecxz
fwait
jp
imulb
outsl
mov
mov
call
sbb
push
enter
mov
pop
lret
cmp
mov
or
xlat
adc
fnstcw
mov
mov
mov
jl
sub
mov
mov
inc
popa
jns
movsl
xor
sub
xor
js
loopne
clc
cli
call
movl
mov
sub
bnd
test
test
jne
xor
pop
sahf
mov
pushl
sbb
out
outsb
jmp
pop
stc
shl
push
pop
leave
int
cs
pushl
mov
fnstenv
fs
loop
incl
lcall
out
lods
cmpsb
mov
dec
fists
push
xlat
cmp
xor
jp
or
jmp
dec
lds
pop
dec
push
je
fisubl
testl
sub
adc
jg
cmp
dec
in
cs
jns
loop
ljmp
lods
or
mov
adc
loope
cmp
leave
sub
cmpl
pop
xor
cli
mov
es
sbb
cmp
pop
inc
jecxz
push
ja
pop
push
and
adc
sub
ficomps
sub
cmpsb
loope
repnz
pop
cli
daa
mov
call
ficompl
jmp
push
mov
and
jg
sbb
add
sbb
sbb
pop
sub
inc
les
push
iret
pop
jle,pn
cmpsl
sbb
sub
mov
mov
push
xor
push
fildl
ja
mov
fcoms
cmp
outsl
mov
push
ljmp
dec
iret
sub
je
jnp
into
clc
lods
adc
dec
push
popa
fbstp
pop
popa
lods
sahf
xor
ljmp
iret
xchg
imul
push
jo
push
mov
lret
std
ljmp
adcb
orl
fldcw
mov
lcall
inc
sbb
adc
sub
mov
pop
sbb
cwtl
out
clc
jg
ret
imul
movsl
fcoml
sbb
mov
jmp
dec
cld
shrb
pop
fdivrl
or
scas
push
xchg
add
scas
loope
adc
aaa
orps
inc
xor
dec
inc
mov
push
mov
inc
lcall
mov
dec
adc
mov
iret
dec
inc
out
push
fistl
lds
mov
push
push
sub
inc
mov
dec
jns
int
add
dec
test
or
lods
incl
xor
pop
pop
add
cmp
sub
fcoml
out
xor
stos
sbb
rcll
push
sti
or
test
std
aaa
adc
pushl
call
adc
aam
test
cli
call
sahf
or
mov
cmp
xchg
std
add
and
jecxz
data16
shll
rolb
lcall
aaa
mov
clc
jg
add
sub
iret
pop
adc
lcall
call
sbb
jns
pop
dec
cmp
aas
and
dec
add
jecxz
adc
or
add
out
and
aaa
dec
cmp
ror
dec
xor
or
in
sub
das
popa
std
fisubrs
add
add
sbb
inc
or
jmp
imul
jle
std
push
out
data16
push
les
pop
push
add
xchg
dec
test
icebp
ljmp
or
lods
ret
jno
mov
lahf
mov
inc
aam
push
enter
iret
rcrb
adc
mov
xorl
sub
fwait
sub
daa
inc
jg
pop
inc
push
ljmp
pushf
push
push
js
cs
inc
aas
dec
mov
testl
out
cmp
fimuls
hlt
jmp
fistl
mov
stos
fadd
in
dec
pop
roll
jno
dec
cld
or
mov
orb
inc
sub
hlt
push
mov
das
dec
add
xor
pop
imul
add
dec
push
data16
or
pop
ret
pop
jge
fidivl
sub
inc
cmp
xor
jg
hlt
dec
cmpsb
mov
out
cmp
jle
mov
cs
outsl
or
mov
dec
xchg
add
cmp
or
cld
in
call
xor
decl
mov
andb
leave
icebp
adc
cmc
jmp
xor
xor
sub
cmp
lcall
add
xchg
js
mov
mov
or
or
cmp
mov
xchg
call
inc
jmp
repz
incb
sbb
jb
sbb
aad
adc
push
sti
mov
push
pop
insb
loop
jecxz
mov
mov
mov
inc
mov
mov
adc
bound
insb
push
shrl
call
and
sbbb
xor
sbb
add
idiv
aam
adc
xor
cmp
aaa
imul
out
xor
inc
inc
adc
xor
scas
add
in
cmp
jg
outsb
adc
mov
sub
test
add
sub
hlt
mov
cmp
sbb
fmul
mov
mov
popfw
inc
sar
lods
dec
jmp
nop
sub
lret
leave
call
decb
inc
add
lock
int
xor
mov
sub
adc
out
fstps
cmpsb
arpl
lods
dec
stos
xor
inc
lret
mov
mov
mov
cmp
imul
xor
sub
jne
cld
out
cmp
push
inc
fildll
cld
das
pop
jp
clc
out
pusha
dec
cwtl
into
dec
sbb
cli
sbb
jg
mov
popf
sub
mov
sbb
fldenv
adc
std
cmp
lea
andb
add
test
xor
jns
or
std
jecxz
add
out
mov
jle,pt
jmp
clc
or
add
cmp
hlt
mov
ljmp
mov
fcoml
mov
dec
daa
add
lock
rorb
pushf
sub
cmp
ss
inc
aam
xor
xchg
push
daa
int
bound
orl
jl
adc
cmp
and
add
cwtl
test
jl
fs
jl
in
repz
cli
das
sbb
fbld
mov
sub
pop
pop
or
es
jle
pushl
dec
add
and
xor
sub
xor
ja
loop
jbe
sub
mov
mov
adc
testb
decl
or
adc
sahf
sub
fstps
cld
decl
popf
in
and
enter
fildl
outsb
loop
outsl
or
test
push
add
dec
pop
shrb
add
mov
or
jmp
fimuls
lds
xchg
in
cmpsb
pop
xor
daa
xchg
cmp
arpl
lret
push
out
inc
pop
cld
jmp
jb
mov
push
adc
pop
cmp
je
testb
dec
ljmp
dec
mov
pop
sub
pop
lret
or
jo
mov
add
icebp
fldl
call
cld
fstpl
mov
jns
add
xor
mov
and
mov
call
or
rcrl
testl
rcll
fdivr
sbb
cmc
pusha
adc
iret
adc
cwtl
out
outsl
cli
aam
out
xchg
push
mov
xchg
test
jg
mov
inc
cmpsl
push
nop
addb
push
lret
leave
stos
in
sub
or
mov
pop
jecxz
sbbl
test
push
repz
hlt
incl
rcll
sub
jge
aaa
popf
mov
decl
push
pop
xchg
mov
lahf
es
sbb
dec
mov
pop
adc
incl
lock
jmp
push
repz
inc
mul
out
mov
xor
cmp
cltd
mov
or
lahf
ljmp
xchg
pop
sti
rcr
cli
cmp
push
sub
test
sbb
pop
iret
sbb
jecxz
mov
nop
ret
push
inc
stc
adc
shlb
pop
jbe
mov
cmpsb
rep
ljmp
cmp
data16
jmp
cmp
inc
cmc
xchg
lahf
dec
clc
or
jg
out
popf
mov
insl
lods
xchg
lods
sarl
stc
push
pushl
cmc
into
add
insl
sbb
push
out
ljmp
cmp
lea
push
cmp
add
fbld
loope
cli
mov
and
adc
mov
xchg
gs
dec
mov
lds
xor
jb
movsl
or
mov
lahf
adc
push
popf
test
and
jb
jns
mov
loop
out
js
pop
fsubrl
outsl
inc
jecxz
xchg
and
inc
push
sub
jae
sbb
cmp
add
sub
add
dec
out
addb
das
mov
jmp
or
cli
nop
divl
add
shrb
outsb
pop
fs
sub
push
mov
or
dec
ljmp
cmp
xor
lahf
or
std
insl
lock
add
cmp
xor
arpl
or
xor
add
xchg
sub
push
nop
adc
lcall
je
sub
mov
aam
clc
das
aam
or
mov
push
out
andb
andl
or
filds
das
mov
gs
adc
jle
mov
cmp
adc
mov
daa
scas
or
nop
cltd
int3
clc
add
aas
jnp
test
push
or
ret
add
xchg
push
fstpl
lock
arpl
pop
adc
insb
or
aaa
jge
sahf
roll
add
testl
int
pop
push
push
sub
incl
mov
lock
js
lods
cwtl
jnp
xor
out
inc
icebp
pushl
jae
into
inc
aas
leave
cmp
sbb
movl
aaa
sbb
in
add
ja
pop
bound
and
push
xchg
jecxz
mov
cwtl
xchg
dec
cmc
jnp
push
jmp
jmp
push
mov
add
and
lcall
mov
mov
andl
in
sbb
or
cmp
aam
ja
cmp
fildll
inc
sbb
or
fnstcw
mov
in
or
ja
push
les
ljmp
push
ret
in
jmp
cmp
scas
jl
leave
and
ljmp
lea
fidivl
inc
or
push
mov
jbe
adc
mov
lds
fisttps
jp
and
xorl
loopne
mov
or
dec
jnp
and
jecxz
std
incl
fwait
pmullw
sbb
mov
out
or
and
sar
push
daa
sub
in
or
inc
ja
clc
movl
sub
mov
std
xor
and
das
in
scas
sub
out
adc
lods
mov
addr16
into
js
push
outsb
decl
sbb
pop
pop
gs
pop
jmp
cmp
outsb
in
das
mov
cmp
andb
or
sbb
das
mov
sub
adc
or
bound
mov
adc
stos
or
or
or
jbe
fildll
lock
movsl
push
std
cli
pop
mov
sub
inc
out
imul
lret
ret
mov
daa
in
pop
leave
pop
leave
fwait
push
lahf
xchg
mov
icebp
out
clc
insl
shl
fcompl
jmp
pop
mov
cmp
lcall
adc
sub
xchg
mov
dec
cmp
aas
mov
jl
or
movsl
inc
mov
into
scas
stos
imul
out
lcall
ljmp
repnz
jl
sbb
icebp
pop
cltd
dec
add
aad
pop
pop
adc
jmp
cli
mov
cmp
aad
adc
jo
lods
jmp
aas
or
sbb
rolb
sar
ljmp
cmp
inc
push
aam
and
cmp
push
inc
ret
sbb
jle
lds
aas
push
ds
filds
fs
ret
or
add
scas
jp
or
into
lcall
std
jge
xor
pop
bound
add
fldenv
fwait
cmp
cmpsl
or
int3
adc
add
xchg
cmc
mov
int
cltd
xor
or
loop
leave
jg
sub
pop
ret
sbb
cmp
incl
jle
addr16
in
fs
or
jmp
and
pop
test
mov
sbb
rcrl
adc
dec
cmp
scas
mov
dec
loopne
mov
outsl
rorl
shr
xchg
icebp
cmp
sub
pop
sub
sbb
jno
cli
stos
hlt
ljmp
or
cmp
pop
jecxz
pop
jl
inc
or
add
scas
js
push
adc
out
daa
shlb
outsb
std
lcall
mov
pop
cli
add
fcomip
and
jl
or
sbb
xor
xor
das
scas
adc
repnz
adc
cmpsl
jbe
xor
dec
add
jmp
mov
adc
enter
bound
push
call
pop
sub
rorl
mov
movsl
pop
adc
icebp
outsl
clc
inc
repz
pop
cltd
jp
sub
aaa
getsec
lock
js
add
push
dec
adc
ljmp
fdivs
rcll
cld
fdivs
adc
inc
out
cmp
cmp
imull
lods
bound
popa
ss
and
cmpb
incl
in
loope
xor
jecxz
inc
jbe
adc
xor
out
fisubl
out
test
jo
orb
mov
es
std
lcall
cmpsb
jno
mov
dec
das
xor
test
xor
dec
in
bound
xor
movsl
xchg
push
mov
lcall
xor
rcll
cmc
jns
inc
outsb
out
or
xor
sbb
ss
push
jecxz
call
fs
xor
adc
sub
arpl
xchg
lahf
sbb
dec
movb
test
cmp
repz
mov
movsl
mov
das
shr
pop
sar
decl
pop
gs
insl
out
push
push
and
pop
add
pop
roll
out
ds
or
cli
push
gs
add
mov
push
cmp
fucompp
cmp
call
pop
mov
lahf
add
sar
cmp
loop
aam
pushl
fsts
mov
xor
pop
or
inc
mov
xor
mov
lcall
rclb
ljmp
push
xchg
ror
sbb
push
mov
push
in
sahf
mov
add
js
jbe
pop
pop
jge
stos
div
jbe
es
add
aam
aaa
sbb
add
mov
sbb
and
cli
call
cmp
repnz
aad
pop
cmp
decl
add
dec
push
jp
iret
push
add
enter
jle
arpl
out
jns
or
and
pop
sub
stos
mov
ret
fbstp
lcall
mov
or
xlat
push
fildl
int
loopne
or
sub
and
add
js
add
fiaddl
dec
ljmp
or
mov
dec
cwtl
adc
mov
cmp
xchg
cli
jno
inc
jmp
jnp
jecxz
or
adc
cwtl
cwtl
pop
sbb
das
add
fcmovb
xchg
xorl
mov
scas
fistps
sbb
scas
jge
test
dec
mov
push
out
mov
lds
push
inc
push
sub
lock
jge
push
mov
jmp
das
mov
jmp
nop
cmp
popf
jae
mov
ljmp
xlat
je
repnz
push
adc
dec
inc
sbb
ds
jg
orl
add
inc
rorl
cltd
out
inc
dec
out
push
jo
sub
mov
mov
cld
inc
iret
lret
iret
sub
adc
mov
in
lret
cmc
xor
adc
incl
je
jno
repz
mov
mov
add
pop
adc
sahf
push
mov
jl
das
inc
lock
jb
and
movsl
push
mov
xor
ljmp
pop
or
mov
movsl
xchg
in
pop
mov
and
cmpsb
jg
adc
and
pop
dec
sub
cmp
dec
pop
test
cmp
in
xchg
lock
ja
das
decl
ficoms
mov
push
cmpsb
dec
xor
mov
jmp
out
pop
shlb
aam
in
dec
aas
xchg
push
push
outsl
lret
movb
cwtl
mov
scas
loope
in
js
xchg
and
imulb
ljmp
divb
xchg
pusha
pop
push
push
and
iret
ds
decl
dec
jp
mov
dec
test
mov
cltd
or
adc
fnstcw
mov
xchg
push
lahf
in
push
dec
lcall
and
inc
sbb
inc
cmc
and
and
cmp
aam
iret
adc
aaa
imul
mull
or
lret
push
faddl
hlt
jmp
int
test
mov
insl
loopne
sbbb
lret
jae
mov
ret
fisubl
dec
ret
repnz
sub
xchg
adc
mov
int3
or
inc
aad
cltd
or
mov
lcall
push
xlat
sti
xor
pop
sub
sbb
sbb
jg
lea
fistps
push
idivb
mov
dec
loopne
stc
add
push
data16
mov
loop
lea
out
ret
les
pop
rcrl
rcrb
push
loop
iret
add
int
jg
mov
pop
dec
mov
repz
les
jg
dec
sbb
add
es
rcrb
adc
jmp
js
andl
fimull
add
or
sbb
mov
mov
jmp
scas
stos
jns
mov
mov
cmp
outsb
mov
popa
mov
jae
mov
sub
jno
dec
or
cmp
jge
mov
cli
aas
sbbb
add
int
jo
xor
jo
pop
cmpsl
ljmp
incl
xor
mov
sbb
jmp
jecxz
scas
dec
sbb
cmp
cmp
jg
mull
repnz
xchg
sub
sbb
ret
dec
push
mov
mov
jns
int
pop
in
hlt
aad
and
add
jo
or
popf
mov
inc
adc
pusha
gs
mov
nop
inc
mov
insb
cli
scas
mov
pop
sbb
push
mov
xor
mov
dec
outsb
sbb
icebp
jp
call
or
stc
scas
xor
pop
xchg
int
and
ljmp
pop
push
dec
ss
inc
nop
ljmp
or
movsb
mov
mov
push
inc
add
push
pop
or
dec
add
pushf
push
xor
mov
mov
imul
shrl
mov
add
sbb
je
outsl
add
icebp
jmp
in
pop
pushf
je
test
cld
das
add
mov
loope
rcrl
pop
psubsb
pop
sub
sarb
dec
movsb
repz
cld
sbb
ret
mov
xor
mov
add
mov
pop
mov
dec
adc
iret
jge
out
or
andl
or
clc
ljmp
lock
cltd
mov
mov
inc
mov
bound
icebp
mov
cmp
leave
xchg
out
adc
xor
icebp
or
or
testl
mov
inc
xor
addr16
out
jae
les
ret
add
lods
in
cmpsl
insl
cmp
aas
sub
push
cmp
push
insb
mov
shrl
iret
mov
pop
icebp
push
sub
clc
scas
xor
dec
lea
lret
ja
lods
popf
cli
loopne
adc
arpl
and
jno
clc
and
mov
cmp
std
xor
push
lods
aas
repnz
or
xor
adcb
push
cmp
in
js
movsl
xchg
mov
add
lods
cmpsb
xor
pushf
lret
jl
add
clc
jb
fisubs
add
adc
jge
decb
sar
stc
pop
stos
xchg
inc
mov
call
mov
xor
dec
ja
sarb
push
inc
mov
jb
iret
stos
inc
loop
or
sti
pop
xor
lds
pop
imul
ljmp
xor
push
outsl
outsl
mov
push
add
mov
decb
mov
in
fwait
adc
pop
xchg
hlt
pop
popf
nop
aaa
mov
mov
dec
mov
push
call
cmpl
mov
bound
clc
out
and
and
flds
and
jo
lods
pushl
ds
out
dec
push
jle
cwtl
test
out
mov
incl
jecxz
outsb
fdivrl
push
jbe
xor
stos
cld
dec
sarb
lea
test
push
test
sbb
jb
mov
and
pop
xchg
and
xor
scas
jmp
xchg
add
ljmp
popf
adc
xor
xor
fdivrs
mov
push
and
lock
xor
adc
lods
ljmp
scas
add
push
clc
jge
mov
mov
clc
incl
outsl
or
cmpsb
dec
ret
and
jno
hlt
cmp
jle
arpl
lret
sub
lea
test
mov
cld
pop
outsl
mov
daa
cmpsl
jae
cmp
jle
lock
sbb
mov
cmp
jg
in
push
mov
cmp
sbb
add
cld
mov
call
loope
mov
aaa
int3
inc
or
or
or
adc
in
mov
add
push
adcb
fstp
and
enter
pop
or
cmp
stos
push
mov
incl
mov
std
jno
int3
mov
inc
mov
aaa
and
dec
add
fmull
push
call
push
cmp
xor
push
je
xchg
inc
stc
bound
push
jg,pn
pop
jg
inc
xchg
imul
lock
push
shld
test
mov
or
data16
sub
cmpb
xchg
movsl
pop
xchg
adc
push
enter
push
xor
aam
notl
pop
sbb
or
mov
jp
cwtl
xorb
pop
incl
push
iret
bound
mov
js
aaa
add
mov
insb
nop
cld
xchg
call
mov
xlat
in
bound
sbb
or
sbbl
out
mov
or
cmpsb
mov
mov
adc
ljmp
pusha
les
adc
lret
mov
lock
adc
mov
dec
xchg
and
xor
imul
mov
addr16
adc
pop
sbb
std
pop
jg
mov
xor
cltd
imull
sub
test
movsl
push
or
cld
jns
cmpsb
xchg
cmp
lcall
xchg
aad
cwtl
jecxz
mov
sti
rolb
ret
pushf
jl
mull
test
aam
call
testl
test
fldt
insl
jae
xlat
decb
ja
jo
inc
outsl
push
add
fdivp
flds
add
gs
jns
jl
lret
rorl
pop
sub
mov
jb
es
shrl
pop
adc
test
es
shlb
xlat
imul
cmc
cmp
and
ja
icebp
ljmp
sbb
pop
fstpl
aad
sti
and
push
mov
cmp
push
add
jno
mov
sub
pop
or
mov
push
sti
mov
out
add
lea
repz
and
add
out
cmp
test
push
xchg
cmp
andb
cmp
dec
in
jge
pop
jge
leave
aaa
scas
xor
xchg
or
sbb
outsl
mov
cmpl
lea
js
adc
add
dec
das
cs
xor
rcrb
icebp
call
pop
inc
and
nop
pop
jbe
cs
push
loopne
sbb
mov
mov
sbb
shl
jmp
cmp
int
xor
sti
jg
cmp
mov
jmp
inc
mov
push
aam
shrl
in
push
out
push
add
jg
adc
in
das
jmp
push
sti
mov
inc
mov
call
xor
mov
push
js
movsbl
or
imul
mov
push
std
ljmp
imul
ss
fs
mov
repnz
cwtl
adc
mov
subb
push
gs
pushl
sarl
add
pusha
or
push
xor
into
or
shlb
arpl
adc
xor
or
loopne
jg
sbb
push
fs
jbe
repz
into
loopne
pop
pop
sarl
push
ret
add
cmp
ljmp
fcmovnb
or
and
ljmp
loop
xchg
push
data16
sub
adc
sbb
lods
dec
cli
incl
push
dec
sbb
subb
xchg
cmp
inc
loop
div
mov
adc
pop
jp
pop
rclb
andb
mov
xor
out
aaa
sbb
int
popa
inc
filds
sahf
orb
repz
or
ret
mov
jle
subb
mov
push
inc
les
or
aam
cmp
arpl
test
inc
cli
pop
hlt
lea
push
xor
call
sbb
std
int3
xchg
pop
pop
add
pop
loop
repz
in
or
and
cmpsl
lea
loope
mov
cmc
xor
jecxz
fstpl
mov
dec
cli
out
mov
lcall
decl
daa
gs
push
stc
jb
mov
push
sub
mov
jmp
push
dec
sar
lret
imul
and
ljmp
shll
or
negl
std
leave
repz
gs
xor
ljmp
push
mov
hlt
adc
dec
ret
sbb
loop
aaa
mov
xchg
rcll
cmp
sub
or
mov
aas
jge
in
pop
push
cwtl
xor
and
dec
push
fs
out
repnz
rcr
cmp
dec
jmp
jbe
fildll
bound
mov
mov
je
cld
jmp
dec
jo
cltd
cmpb
inc
mov
out
dec
ljmp
popa
inc
lahf
pop
or
inc
adc
daa
ror
push
fbld
add
outsl
popa
mov
movsl
mov
fsubs
loop
xchg
nop
mov
pop
repnz
fisttpll
sub
sar
push
jbe
sbb
jne
int3
jecxz
mov
pop
xor
lock
pusha
push
int
nop
rol
out
mov
clc
mov
in
ljmp
pop
pushl
xor
sub
sbb
cmp
test
jne
sar
push
adc
rdpmc
mov
or
push
cmc
sub
sahf
push
xor
dec
aam
insb
andl
fcmovb
dec
pop
cmp
outsl
mov
xchg
shll
mov
out
xlat
sub
add
mov
inc
fsubrl
jg
ss
mov
jnp
inc
xor
cmp
inc
sub
dec
ret
shll
pop
add
out
pushl
incl
ret
add
into
dec
cmpsl
jae
fimull
mov
loop
add
jo
fs
dec
jecxz
or
lcall
lcall
adc
mov
es
xor
cmc
lcall
iret
lea
sbb
sub
es
pop
cmp
in
inc
cld
adc
lcall
movsl
not
sti
icebp
sub
cmc
aam
or
xchg
int3
mov
out
mov
jbe
mov
mov
cmpsb
call
push
lcall
adc
movsl
jns
push
fnstsw
lods
pushl
popf
iret
sub
stos
loope
popf
xor
and
push
adc
inc
imul
and
loop
cmp
decl
hlt
push
sbb
jecxz
and
sbb
in
daa
push
or
add
xor
loope
mov
pop
sbb
and
push
sarl
adc
daa
sub
sarb
jl
mov
in
out
int3
sar
orb
dec
aam
pop
inc
mov
loop
jg
cmp
push
loop
cmp
stc
xor
repz
push
sub
mov
cmp
imull
out
arpl
pop
fldt
pusha
add
mov
sbb
pop
loope
sub
fwait
mov
jl
or
adc
jo
ret
das
and
loope
mov
jo
lea
add
and
mov
movsl
mov
push
fmull
jmp
cmp
push
scas
ret
and
xor
in
popf
ljmp
test
inc
mov
jg
jno
jnp,pt
scas
popf
cmp
or
in
cmp
cmp
test
out
lods
dec
loopne
mov
sbb
subb
call
inc
adc
jae
sub
fsubrl
popw
outsb
pop
xor
das
mov
sub
add
call
cwtl
sub
or
or
push
sub
jle
sbb
add
push
outsl
sbb
or
cmp
iret
subb
ret
sbb
cld
lcall
push
adc
and
movsl
packuswb
fsubr
mov
pop
xchg
dec
xchg
sbb
sub
jge
lods
add
clc
clc
mov
xor
add
lahf
fdivrl
push
and
rorb
gs
hlt
mov
inc
repnz
pop
lods
scas
and
mov
iret
push
push
stos
push
mov
in
push
adc
rcll
pop
pushf
lahf
mov
movsl
call
dec
rorb
mov
aas
inc
int3
stos
int
sahf
sbb
pop
mov
ljmp
xchg
dec
mov
push
mov
mov
cli
adc
sub
scas
or
push
invd
and
jmp
push
sbb
out
or
cmc
cwtl
xchg
shrb
sbb
ljmp
xchg
js
sbb
cli
mov
jno
mov
sahf
aaa
jmp
sbb
int3
int3
mov
jnp
pop
testb
jge
jg
sub
lods
dec
insb
movsl
xchg
pop
or
pop
add
movsb
mov
insl
push
int
xor
pusha
cmp
icebp
push
inc
push
call
and
mov
mov
push
add
outsb
lock
jnp
mov
inc
aad
xchg
jns
or
aas
jl
add
mov
inc
adc
mov
xor
cvtpi2ps
jmp
fnstsw
pop
mov
pop
mov
pushl
xchg
out
xor
xchg
jecxz
or
sysexit
imul
repz
mov
jge
lock
shlb
cld
pop
pusha
push
pop
iret
xchg
je
adc
ja
ret
push
xor
xor
add
in
sbb
into
pop
popa
cmpl
icebp
mov
pop
rcrb
cmp
out
out
clc
out
sbb
repz
adc
and
sub
push
sahf
push
pop
mov
ret
xor
repz
add
mov
add
leave
mov
fwait
or
mov
xor
add
cmp
fstl
call
sbb
add
ljmp
mov
mov
xlat
mov
es
mov
loope
mov
hlt
add
lods
jle
push
mov
loopne,pn
sub
jge
sub
sbb
rorl
sub
stos
es
dec
aam
test
mov
inc
and
bound
dec
cltd
and
jle
aad
adc
and
call
shl
mov
lock
test
fs
leave
ret
jb
mov
and
cmp
in
pop
pop
enter
push
mov
sbb
jle
xchg
xchg
scas
mov
cmp
in
add
ljmp
pop
push
add
push
xchg
repz
push
cmc
xchg
cmc
mov
sub
loopne
jmp
int
testl
pop
cmp
xor
jno
test
scas
loopne
mov
ds
stc
cmp
dec
in
xchg
push
sbb
inc
in
pop
mov
ss
fisttpl
mov
fidivrs
pop
sub
fimuls
adc
call
cmp
adc
xchg
push
std
cwtl
out
mov
xor
mov
mov
rclb
jmp
out
and
movsb
cmpb
jo
cs
mov
add
xchg
loopne
or
mov
scas
and
dec
xor
popa
daa
mov
aas
or
cmp
jno
and
xor
jl
mov
push
cmp
jns
loope
sbb
xchg
mov
push
pop
lock
mov
adc
cwtl
rolb
rolb
pop
add
jl
sub
jg
add
mov
mov
mov
stc
shrb
cmp
outsl
aaa
push
retw
or
ljmp
jg
call
sbb
adc
xchg
test
xor
outsl
es
stc
add
mov
adc
hlt
push
xchg
cmp
pop
adc
int
and
xlat
loopne
popa
call
add
xor
mov
sbb
loope
jp
nop
mov
pop
cld
mov
dec
dec
movsl
sbb
fists
jge
or
jnp
jns
inc
xchg
aad
push
test
xchg
mov
sahf
xor
pop
inc
loopne
sub
sub
pushf
sbb
popf
jo
ret
lds
sub
mov
fistl
jno
aas
push
xor
aam
jmp
cwtl
clc
push
les
push
fbld
popf
shl
pushw
adc
or
push
dec
add
ss
call
call
lods
or
fsubp
adc
jmp
cld
iret
icebp
push
iret
dec
inc
test
adc
sub
adc
decl
ljmp
and
pop
cld
sbb
xorb
aaa
js
movsl
and
adc
add
add
add
call
hlt
add
and
lds
cmp
shr
push
jbe
mov
out
jbe
in
movsb
addl
pop
fcmovne
daa
xchg
imul
cmc
sub
sahf
sub
pop
stos
sbb
cmp
mov
mov
lcall
mov
or
mov
sub
adc
stos
push
pop
shl
push
adc
sbb
es
idivb
and
or
and
sub
jae
out
pop
pop
mov
pop
cmc
cmp
pop
lds
or
sbb
jge
add
int3
adc
in
pop
inc
jecxz
enter
jbe
sbb
rclb
loopne
mov
aad
inc
in
loope,pn
lcall
outsb
and
sub
lcall
and
cmpsb
fwait
add
xchg
daa
ret
loop
mov
ljmp
test
std
mov
cmp
fmull
xor
ss
ja
fiaddl
das
mov
mov
cmpsl
icebp
out
or
stos
push
sub
xchg
jmp
pop
jp
cmp
xor
sub
sti
dec
ljmp
sbb
mov
sub
xchg
push
clc
jmp
cmp
movsb
das
leavew
movsl
push
jg
pop
jo
aaa
int
add
and
jecxz
cmpsb
fwait
mov
pop
pop
and
dec
into
addb
mov
sub
inc
mov
xchg
shr
add
push
stos
xor
sub
pushl
fmul
popa
cmp
daa
mov
adc
mov
dec
xchg
mov
sbb
subw
xchg
add
mov
mov
repnz
sub
mov
lret
jle
pop
or
and
pop
fs
in
cmp
daa
mov
mov
mov
jb
incb
nop
outsb
rolb
pop
daa
lods
out
dec
popf
sbb
shrl
sub
push
test
decl
jecxz
cmc
repz
sbb
add
popa
dec
jno
mov
push
mov
push
lods
fcom
sbb
int3
out
rorb
mov
dec
push
add
cmc
xor
mov
bound
jl
and
outsb
push
loopne
out
mov
sub
daa
loopne
mov
mov
std
sbb
xor
inc
push
mov
adc
dec
push
clc
fists
sub
or
xchg
sbb
inc
call
sbb
cld
fsubr
pusha
dec
lea
jg
daa
sub
mov
jmp
mov
and
aas
pop
jae
es
xchg
mov
pop
in
jns
fs
incl
inc
add
fisubrs
pushf
lds
adc
jmp
movsl
ja
pop
push
pushf
das
nop
adc
fbstp
sub
mov
sahf
jno
jg
inc
js
xchg
arpl
push
or
sub
and
mov
loope
hlt
cmp
or
pop
stos
icebp
in
xor
mov
inc
hlt
lcall
ds
shl
sti
fcomp
daa
mov
sbb
fs
movsl
shr
sub
add
out
xchg
add
outsl
mov
ffree
or
xor
push
pop
push
int3
xor
idivb
aad
sub
sub
push
jo
cli
in
mov
xor
fcmovbe
loopne
or
xchg
push
mov
push
js
insb
add
int3
lret
mov
icebp
es
mov
out
or
sub
repz
xor
cmp
popf
pusha
cld
es
cmc
icebp
add
jmp
stos
loopne
mov
out
mov
xor
js
xor
scas
stos
hlt
incl
sahf
push
jae
jle
aas
and
fildll
pop
mov
imul
ljmp
lock
push
and
orb
hlt
ljmp
adcl
scas
mov
ret
push
lock
pop
adc
adc
aas
dec
out
addr16
mov
xor
ljmp
insb
ss
sub
cs
pop
lret
idivb
pusha
pop
xor
sbb
fildll
xchg
gs
jno
or
out
add
jp
jg
orl
aad
fiaddl
xchg
xadd
pop
adc
insb
xchg
std
jne
mov
adc
fwait
leave
lret
cltd
mov
jp
pop
mov
xchg
pusha
addl
mov
es
sub
xchg
int3
in
arpl
pushl
jl
jnp
ljmp
mov
pushl
or
dec
cmp
mov
ja
adc
outsl
les
shrb
push
pop
push
or
pusha
movsl
pushf
fdivrl
adc
push
arpl
inc
movsl
dec
cli
pop
lret
lret
std
pop
mov
cwtl
loopne
jg
cmp
cmpsl
sub
jmp
ret
shr
mov
adc
enter
mov
in
ja
lods
xchg
jbe
cld
sahf
rcrb
sbb
add
xchg
leave
loope
sbb
add
fldl
clc
add
mov
or
insb
cld
test
add
sti
mov
add
idiv
cmp
movsb
test
mov
js
mov
lcall
sbb
popa
push
sub
pop
dec
fwait
or
mov
and
push
lock
xor
rclb
add
add
outsl
sub
inc
cld
nop
mov
add
xor
ljmp
add
mov
adc
push
dec
sahf
imul
icebp
mov
out
sar
adc
movl
and
int
call
mov
mov
mov
aaa
mov
movsl
jns
bnd
mov
add
icebp
sar
add
push
fwait
cld
lret
call
aas
dec
idiv
ljmp
cmpsb
mov
or
mov
not
push
xor
mov
cmp
addr16
iret
jno
lea
jl
mov
jmp
push
mov
mov
into
sbb
ficompl
mov
mov
loopne
rorb
fstpt
cmp
xchg
and
and
mov
in
push
or
das
cmp
dec
out
xchg
pop
push
or
or
jbe
sub
repz
clc
js
cwtl
std
mov
adc
inc
or
fimull
dec
dec
ss
lcall
mov
stos
or
sbb
adc
test
and
pop
pop
mov
insb
cmpsb
add
dec
aad
xor
pop
or
call
or
mov
xor
lock
out
mov
pushl
stc
iret
fistl
xor
push
mov
aad
mov
ljmp
xchg
inc
lods
lret
jecxz
fldcw
push
xchg
gs
xchg
mov
cmp
lcall
push
push
add
cmp
fsubl
test
pushl
jle
pop
jbe
cli
movsl
aam
push
and
or
cmp
rorb
test
inc
les
cmp
out
lret
pop
sub
mov
sbb
cmpsl
add
stc
mov
call
in
out
stos
cmp
out
sub
and
roll
jle
adc
xor
nop
ret
sar
decl
in
mov
sbb
cmpsl
sahf
mov
int3
repnz
lret
ss
sbbl
aas
adc
icebp
aam
inc
sub
repz
popa
mov
lcall
jb
adc
push
jno
mov
rclb
jo
imul
xchg
inc
in
mov
cli
cmc
mov
bound
ja
mov
das
jmp
test
adc
fdivrs
test
mov
add
clc
sbb
sbb
and
mov
adcb
ja
incl
xor
data16
push
mov
out
stos
pushf
outsb
xchg
incl
and
push
sahf
xchg
movsl
mov
xchg
sbb
lock
insb
jl
je
in
cmpsb
xor
sub
out
cld
int
outsb
mov
jle
int3
cmp
clc
inc
or
push
mov
shrl
ds
jg
sbb
pop
mov
mov
shrb
in
repz
or
push
dec
aas
fisubl
gs
out
xchg
cmp
iret
or
jne
test
cli
lcall
pusha
dec
cmp
outsb
lods
in
jecxz
cmp
cmpb
mov
outsb
xchg
mov
dec
lods
es
add
push
push
xchg
repz
jg
cmp
and
mov
std
call
cmp
ret
pop
sbb
repnz
dec
pop
xor
mov
mov
push
pop
iret
dec
xlat
movsl
push
decl
and
dec
call
or
jae
sbb
pop
mov
and
mov
push
neg
decl
adc
sbb
sub
push
mov
pusha
jno
cld
jmp
cmp
call
testb
jmp
sbb
pop
sbb
imul
or
sub
sbb
xchg
cwtl
repnz
cmpl
scas
jp
jbe
jmp
dec
or
ljmp
sbb
mov
ljmp
pop
or
out
nop
hlt
push
or
mov
xchg
xchg
cs
adc
aaa
and
push
dec
mov
fs
fiaddl
ja
in
mov
int
lods
adc
jg
icebp
mov
sti
pop
pop
jecxz
daa
imul
adc
outsl
xlat
enter
lcall
in
scas
sti
fisttps
dec
cmp
out
cli
jg
adcb
addr16
cli
aas
pop
orl
mov
cmp
add
lock
scas
fistps
and
aad
pusha
pop
jmp
and
movsl
adc
mov
jp
jb
aas
xchg
mov
push
incl
aam
lcall
adc
roll
jl
add
ja
cli
ss
xor
mov
adc
imul
ljmp
sub
and
pop
imul
xchg
and
or
sub
out
cmp
fildll
xor
sbb
sub
jno
jns
outsb
loopne
xor
lahf
adc
cmpsl
or
or
inc
movsb
sbb
idivb
sbb
mov
aas
scas
dec
rorb
mov
and
sar
stos
dec
mov
sbb
jo
sub
shl
jmp
push
or
cmovae
cmp
dec
cmp
xor
or
push
xor
mov
testb
push
sub
xor
inc
and
add
rcr
mov
aam
xor
pop
dec
scas
mov
mov
jb
xchg
add
les
aaa
xorl
popf
cmpsb
mov
mov
test
sub
jg
sbb
xor
adc
pop
or
inc
and
xchg
cmp
jl
mov
pusha
sub
pop
popa
repnz
pop
adc
xchg
fs
popa
cld
ljmp
sbb
ljmp
cmp
clc
sub
test
mov
and
jecxz
aaa
sbb
add
inc
out
insb
in
in
push
jnp
js
jo
dec
and
add
je
mov
lea
fiaddl
outsb
imul
or
push
js
cmp
cmp
cwtl
fdivrs
push
and
sbb
or
dec
push
mov
and
adcb
dec
cli
rcrl
adc
icebp
and
jnp
in
sub
movsb
das
push
rorb
dec
lods
mov
or
je
loop
or
arpl
fs
mov
jle
enter
or
je
jg
jle
sub
in
sub
rorl
aam
mov
mov
jl
nop
inc
add
movsb
aaa
adc
jb
inc
lods
addl
pop
inc
add
movsb
and
cmc
incl
cwtl
pop
negb
cmp
fstpl
pop
sbb
sub
push
push
lock
xchg
fistpl
lock
sbb
aam
push
lret
sub
ret
insb
ret
jp
pop
pop
add
shrl
loop
daa
rorb
shlb
cmc
sub
popl
and
sub
iret
adc
xchg
aam
xor
call
fistpll
mov
xchg
push
arpl
loop
incl
xlat
sbb
adc
ret
add
mov
push
cmp
mov
sti
adc
sbb
cmpb
adcb
inc
sahf
sub
das
push
jl
sub
movsb
aas
sub
fidivs
icebp
xor
cmp
roll
enter
pop
movsl
dec
mov
das
xchg
xchg
add
adcb
lcall
mul
or
lcall
cmpsl
loopne
adc
xor
cs
cs
out
pop
divb
mov
loopne
sub
outsl
test
add
inc
dec
add
out
cmp
pop
jge
adc
mov
add
decl
cmp
jecxz
cmp
inc
insl
and
lods
adc
or
adc
or
fisttpll
fisttpl
pop
bound
fnstsw
scas
push
adc
xor
cltd
adc
add
aas
mov
sarb
or
adc
pop
pop
loopne
rclb
mov
inc
push
cmp
inc
loopne
mov
mov
adc
andl
idivb
sub
mov
cmpsb
popa
icebp
xor
aaa
or
xor
and
gs
sbb
mov
pusha
xor
xor
push
add
sbb
pop
es
or
scas
jl
inc
repnz
js
mov
sub
ljmp
das
or
addb
pop
dec
es
mov
pop
dec
daa
inc
adc
or
dec
adc
or
sub
aam
mov
add
cmpsb
dec
data16
or
sbb
push
xchg
ljmp
lods
xchg
sub
mov
movsb
shlb
icebp
call
xor
cmp
cmp
test
add
sub
nop
xorl
mov
aad
mov
lret
lods
fs
repz
call
or
jle
dec
jns
adc
lret
pusha
out
jle
cmpsl
add
xor
movsl
add
dec
xor
fs
push
in
push
cli
insl
adc
xchg
inc
inc
fists
pop
mov
adc
inc
adc
or
cmp
fwait
push
push
jo
mov
iret
xor
rorb
adc
add
decl
shll
sbb
orl
sbb
jle
cmp
sbb
xor
leave
sbb
test
sahf
mov
adc
frstor
sbb
stos
sbb
shll
faddl
in
call
mov
std
lret
rol
repz
fsubp
loopne
cmc
fld
inc
inc
mov
ficoml
xor
call
shl
mov
in
fsubr
xlat
cld
fwait
push
cli
sti
jmp
mov
je
jl
dec
or
scas
mov
aas
sbb
sbb
pop
xchg
in
incl
pop
push
or
in
adc
sbb
incl
mov
xchg
inc
mov
pop
enter
jp
mov
jno
outsb
pop
adc
ljmp
pushf
jno
cltd
dec
adc
mov
or
jno
imul
mov
mov
jmp
xor
adc
pop
sub
cmp
adc
rolb
push
cmp
mov
lcall
cmp
daa
sbb
mov
sbb
pop
prefetch
or
lcall
ljmp
xor
lret
sbb
and
adc
lods
hlt
notb
xor
ljmp
pop
or
test
sub
lret
mov
jb
adc
out
stc
in
cs
jo
arpl
sub
fucompp
add
repnz
lock
and
lds
aam
pop
jbe
call
jg
sub
mov
cmp
test
cmp
stc
call
xchg
out
mov
mov
mov
xchg
call
in
xchg
pop
xor
adc
push
stos
push
add
mov
mov
push
jbe
cs
out
cltd
xchg
pop
divb
pop
mov
cs
sub
inc
mov
rcr
mov
aad
jecxz
mov
dec
loop
mov
add
call
cmp
xchg
push
mov
test
out
les
pop
cmp
call
lds
xchg
adcb
cmc
mov
pop
sub
lcall
lock
scas
mov
mov
mov
popf
push
jl
test
repz
lea
jb
and
outsb
mov
ja
mov
scas
sarb
xchg
jge
xor
data16
jo
dec
dec
push
inc
pop
jge
enter
insl
jno
jp
push
mov
mov
ja
aas
jmp
pop
jb
mov
pop
dec
jb
pop
aaa
dec
subl
clc
sbb
dec
adc
rorl
fcoml
adc
or
test
cli
aaa
ljmp
fdivs
push
mov
mov
aas
adc
xor
in
push
das
sub
out
sub
dec
clc
lahf
adc
and
cld
out
lods
sub
xchg
add
jg
xchg
adc
mov
or
or
lock
or
mov
or
ds
sbb
mov
cmp
xor
xchg
push
sub
add
ds
aas
push
or
add
mov
ss
lahf
aas
aas
mov
adc
testl
mov
push
cmp
pop
movsb
test
jg
and
sub
enterw
rclb
ret
xchg
repnz
bound
cld
cmp
xchg
bound
xchg
jb
xor
lahf
ljmp
fcoms
lods
loope
lods
loopne
mov
xlat
pop
nop
mov
push
add
push
or
adc
flds
mov
sahf
aas
aas
cmp
cld
mov
mov
mov
popf
mov
sbb
push
lcall
or
cmp
mov
cmp
xchg
xor
push
cld
cmpsb
jg
jbe
leave
andb
cmp
test
in
push
sub
xchg
cmp
or
daa
and
pushl
or
push
adc
adc
jmp
call
test
mov
and
or
sub
mov
xor
push
cmp
mov
jmp
xor
cmp
pop
and
repz
dec
ss
decl
mul
pop
mov
fs
rorl
dec
shrl
jmp
pop
jg
mov
repnz
das
pop
mov
loope
lods
popf
lcall
shlb
xor
hlt
xchg
sbb
dec
xchg
and
xor
or
mov
xor
mov
jnp
loop
cmp
scas
aaa
ret
shlb
into
and
call
movsb
or
sbb
mov
daa
mov
lds
loop
add
aas
jmp
lahf
cmc
sbb
stos
cmpsl
stos
or
stc
cmp
mov
jb
decl
add
xchg
add
add
add
or
dec
decb
mov
bound
dec
push
pop
and
cmp
xor
mov
fiaddl
or
pop
imulb
jmp
xor
xor
jg
xor
clc
pop
cld
inc
cmp
sti
mov
nop
out
or
jg
sbb
ss
std
xchg
xchg
sub
jle
mov
inc
add
das
add
bound
fimull
jg
and
or
add
sub
movaps
add
or
mov
push
jg
lcall
push
sbb
or
cs
xor
sbb
lar
stos
pop
mov
xor
mov
lcall
push
sbb
adc
or
aaa
incl
or
mov
daa
dec
cmp
sbb
cmpsl
lds
daa
aas
inc
sub
repnz
int
clc
mov
mov
xor
jo
and
sub
aaa
add
inc
jmp
push
repz
xchg
mov
outsb
add
ds
add
arpl
jo
xchg
cwtl
sbbl
orl
pop
mov
sbb
sbb
adc
add
aas
and
dec
decl
mov
pop
adc
ds
inc
or
mov
bound
ja
add
jle
and
pushf
add
test
jmp
mov
adc
scas
mov
dec
pop
mov
sbb
cmp
mov
xor
pop
dec
mov
sbb
mov
repz
sub
sbb
push
shl
in
sbb
adc
jg
push
sbb
add
sbb
stos
sbb
hlt
lahf
ficomps
mov
push
mov
xor
add
and
sub
xor
scas
adc
scas
jo
push
pop
cld
call
ljmp
sbb
jge
jno
mov
push
ss
or
or
mov
es
jb
scas
cld
mov
adc
mov
pop
mov
daa
sub
mov
out
sub
xlat
adc
sbb
sbb
insb
add
adc
lcall
pop
roll
or
and
andl
mov
push
cmp
cmp
incl
bound
aaa
add
pop
fst
repnz
out
add
jmp
scas
femms
and
jno
call
pop
movb
pop
mov
repnz
call
xor
push
ja
or
add
mov
movsb
or
jmp
loop
lcall
icebp
lahf
daa
add
ficomps
inc
adc
std
lcall
cld
in
and
adc
js
pop
cmpsl
adc
or
jns
shll
mov
push
inc
outsl
pushl
movb
mov
decb
dec
add
pop
and
insl
sbb
sbb
call
push
rorb
mov
or
cmpb
fwait
cmpsl
das
syscall
out
clc
pushl
sub
or
or
sbb
stos
hlt
and
dec
icebp
push
bound
es
add
adc
aaa
std
out
xor
pop
out
xor
and
arpl
push
and
incl
or
aam
pop
add
cmp
push
add
or
jne
aaa
adc
push
cld
incl
add
rcrl
dec
xor
mov
add
pushl
std
repnz
pop
push
pop
sbb
add
push
test
cmp
cmpsl
sub
jns
xchg
mov
mov
movsl
stos
adc
push
cld
push
ss
push
xchg
shrb
and
pushl
add
cltd
pushf
es
mov
inc
jmp
mov
mov
sarl
mov
cmp
jns
out
xchg
fists
call
sti
shlb
movsl
ljmp
xchg
mov
dec
hlt
aas
aad
xor
cmpsl
adc
arpl
cmp
icebp
or
xchg
push
je
sahf
inc
push
pop
add
push
ja
bound
sysenter
xor
dec
xchg
out
push
and
xchg
xchg
jle
xor
pop
loopne
ljmp
je
nop
or
cmp
mov
push
sub
movb
cmp
mov
ret
sbb
sbb
xor
in
ret
mov
sbb
mov
or
xchg
mov
inc
in
xchg
test
jmp
push
push
xor
addr16
addr16
jmp
dec
sbb
push
pop
mov
or
adc
or
xor
das
movsb
sub
incb
out
and
lds
and
sub
xor
repnz
sub
push
test
movsl
outsl
xchg
test
sbb
mov
jo
sub
pop
cmc
push
xor
xchg
sbb
add
jno
cmpsb
or
inc
xor
dec
test
sbb
sti
push
sub
ja
xor
push
cmpb
fildll
sbb
pop
punpckhbw
loopne
mov
es
adc
lret
out
and
shrl
push
adc
mov
inc
clc
daa
sbb
mov
sbb
filds
jg
xchg
es
imul
movsl
xchg
sub
out
loopne
decl
xlat
pop
popf
jg
leave
cld
or
and
or
test
fbstp
pusha
jmp
popf
in
adc
outsl
cmp
pusha
ja
xchg
aaa
cmp
xchg
mov
ret
ss
cmp
push
and
xlat
call
scas
inc
dec
xor
das
jo
jge
mov
jnp
jnp
cmp
sbbb
pop
sub
enter
adc
inc
js
pop
xor
pop
and
push
add
pop
or
sbb
cltd
and
ret
fwait
push
bound
jne
fimull
and
lahf
adc
push
and
mov
out
hlt
and
adc
mov
call
mov
lcall
push
sub
and
mov
sub
lcall
jb
aas
cmp
sahf
mov
test
mov
cmp
xchg
ds
push
and
and
cld
ljmp
je
fwait
mov
cmpsl
repnz
rcrb
adc
outsb
mov
xor
pop
repnz
fistpll
xor
dec
test
jo
dec
sbb
and
clc
sub
cmp
into
pop
mov
fnsave
jmp
xor
enter
adc
cld
or
jmp
sub
mov
mov
adc
lock
jge
push
fcomip
sub
adc
mov
insb
out
test
adc
sub
cli
popf
mov
out
adc
push
inc
jmp
jmp
push
xlat
xor
mov
or
mov
add
aas
fcompl
mov
and
mov
popf
call
sbb
sub
mov
incl
cwtl
fwait
add
or
mov
pop
mov
mov
sub
ds
xchg
inc
adc
ljmp
or
and
test
jg
or
mov
or
test
aaa
or
mov
ja
mov
adc
mov
sub
ljmp
ret
cmp
sbb
mov
sub
adc
add
cltd
cltd
es
xor
enter
popa
mov
pop
clc
or
sbb
add
cmp
inc
sbb
imul
cmpsb
pop
sahf
pusha
cmp
inc
cmp
filds
pop
sbb
stos
dec
mov
das
cmp
in
xor
and
mov
lret
sahf
or
rcrb
add
or
lea
std
xchg
sbb
push
or
or
hlt
and
sbb
mov
sahf
into
or
mov
sub
push
mov
xor
inc
cmp
test
add
xor
ret
push
cld
lcall
cld
pop
and
cmpsl
sahf
and
add
adc
or
jg
fs
call
test
cmovne
bound
dec
sub
adc
xchg
stc
mov
push
ret
rcl
pusha
xchg
adc
add
mov
ss
insl
clc
mov
or
push
sub
sbb
mov
cmp
pushf
das
sbb
mov
cmp
cmp
adc
mov
sbb
and
inc
inc
sbb
xor
sbb
incl
add
sbb
imul
and
ret
push
mov
out
sub
add
add
inc
inc
mov
clc
andb
pop
and
aas
or
and
cmp
sbb
mov
outsb
icebp
and
shll
sbb
adc
and
pop
icebp
lds
xor
daa
dec
cmp
xchg
cltd
mov
mov
mov
sbb
in
andb
sbb
pushf
jmp
adc
aas
push
sbb
fimuls
icebp
sub
mov
adc
xchg
push
std
mov
mov
outsb
adc
jae
pushl
sbb
sub
dec
lahf
xor
add
cmp
test
mov
adc
lcall
inc
bound
sub
cmpsb
scas
cmp
sbb
outsl
ljmp
jns
sbb
fiaddl
pop
ja
push
add
movups
or
pop
das
push
or
ljmp
mov
sub
lea
arpl
jb
add
sbb
mov
or
aas
inc
cld
pop
movsb
fcoms
sbb
sub
cmp
jmp
adc
xor
push
sbb
imul
cmp
xchg
icebp
xor
sub
jo
or
xor
cmp
cmp
pop
lret
ret
dec
sub
and
sbb
inc
je
jo
add
adc
mov
setp
mov
xchg
js
cmp
dec
push
xor
adc
adc
mov
and
sbb
sbb
cmp
inc
or
mov
adc
or
push
nop
cmp
add
incl
and
add
or
mov
or
xchg
lods
xor
or
and
cmp
adc
fistpll
ret
xor
sub
cmp
add
push
xor
out
add
cmp
fwait
lods
dec
push
stos
and
jmp
add
push
push
sub
decl
cmpsb
xor
aaa
jl
push
sbb
out
xor
and
push
sbb
push
sub
cmc
ljmp
cmp
adc
sub
adc
or
mov
lcall
xor
push
cmpsl
and
adc
pop
cmc
decl
xchg
sbb
cmp
push
sub
adc
xor
push
xor
scas
sahf
sbb
adc
xor
xchg
pop
mov
addb
lock
mov
mov
or
mov
scas
xchg
cli
mov
xchg
movsl
mov
nop
lcall
sub
mov
adc
sub
mov
sbb
xor
cmpb
add
lcall
adc
lea
nop
sub
sbb
and
mov
cmc
cmp
push
pop
adc
pop
sbb
or
sub
das
cmp
pop
and
cs
push
sub
mov
xor
adc
adc
mov
push
jp
dec
push
stos
add
push
mov
aas
lea
mov
ja
sbb
sub
or
mov
mov
mov
mov
pop
xorb
clc
xchg
xor
or
ljmp
mov
mov
mov
pushf
mov
orb
mov
xchg
cs
xchg
sub
incl
mov
movsb
mov
xchg
mov
sub
push
mov
add
xor
es
sub
or
push
movsb
mov
aaa
xor
mov
mov
hlt
subb
xchg
xor
mov
ds
and
jle
stos
aam
xor
call
jp
mov
push
and
loopne
adc
aas
pushf
mov
mov
cli
int
add
lret
sbb
fmull
mov
pushf
leave
mov
cmp
push
test
pop
and
data16
jle
add
mov
pop
sbb
mov
imul
insl
jle
das
push
sub
insb
dec
push
dec
bound
outsb
xorl
or
mov
inc
push
fstps
dec
jge
sub
pop
adc
out
push
sub
pop
lock
shll
int
add
mov
add
pop
iret
dec
mov
adc
fidivl
cmp
mov
in
add
test
push
and
lea
pushl
cmp
scas
or
pushl
mov
lcall
dec
cmp
mov
push
sbb
test
mov
xlat
jne
cltd
nop
add
and
dec
push
pop
adc
push
inc
cmp
mov
lcall
sub
sbb
pop
sub
xor
pop
sbb
inc
out
adc
adc
mov
and
icebp
lcall
mov
aaa
xor
adc
xor
call
clc
lret
or
or
andl
cmp
sbb
loopne
mov
jne
sub
and
aaa
add
mov
nop
mov
mov
rcrb
cs
scas
and
sar
add
sbb
sbb
stos
cs
dec
dec
adc
mov
jg
or
mov
lahf
scas
push
add
hlt
dec
adc
mov
add
sti
dec
pop
cld
or
push
fstpl
fldl
and
cmp
mov
and
or
and
xchg
and
or
adc
xchg
or
adc
incl
sahf
arpl
xor
cwtl
fmull
out
aaa
sbb
cmc
pop
jle
mov
sbb
and
inc
cwtl
int3
cmpsl
filds
rcrl
adc
das
lcall
push
sub
xchg
adc
ds
stc
and
jge
mov
xor
nop
pop
push
push
xchg
add
push
sbb
pop
inc
pop
jge
mov
fdivrp
cmpsb
mov
cmpsb
cs
pop
pop
insb
push
pushf
mov
cs
fwait
mov
sbb
fwait
jmp
fwait
and
adc
xor
cmp
pop
sub
out
push
or
adc
inc
xorb
out
outsl
mov
sahf
xor
cmp
out
stc
mov
pop
sbb
fstpt
and
and
leave
jecxz
and
sarb
sub
int3
inc
mov
pop
cmpsb
xchg
mov
xchg
cwtl
adcl
add
adc
fwait
outsl
pop
sub
and
pushf
or
cmp
hlt
sbb
sub
mov
push
dec
push
data16
pop
std
out
outsl
mov
sbbl
sbb
mov
lret
mov
push
cmc
stos
xchg
mov
in
xor
int
or
bnd
and
ja
aaa
fistpll
or
mov
imul
sub
stc
sbb
clc
sub
cmp
iret
pusha
jle
adc
jle
inc
js
out
adc
or
mov
cmpb
or
push
adc
xchg
fwait
mov
fistps
repnz
push
lahf
cmp
add
fld
pop
popf
nop
inc
jb
jns
sbb
fistpll
or
xor
xchg
pop
mov
dec
aaa
gs
nop
cmp
sub
fdivr
es
xor
test
and
pop
inc
jb
fwait
xor
repnz
test
sub
scas
fisttpll
test
fildll
sahf
or
pusha
sub
inc
pop
popa
push
lods
sbb
lock
cmp
adc
cmp
lock
sbb
orb
mov
xor
add
or
mov
add
xchg
adc
sbb
les
adc
ficomps
lock
xchg
cli
push
jle
add
adc
es
cmpsl
cld
inc
jb
sbb
nop
shrb
push
push
adc
scas
repz
sbb
add
fnstcw
push
mov
test
sbb
es
jmp
outsb
pusha
and
rorb
insl
scas
adc
adc
mov
rclb
ss
adc
sub
enter
add
cmp
xorb
jg
or
adc
and
bt
fistpll
xor
sub
sbb
cli
leave
dec
mov
cli
push
stos
cld
inc
jno
insb
mov
and
hlt
iret
pop
xor
mov
xor
and
and
repnz
sbb
lahf
aas
adc
lret
mov
aam
int
add
inc
dec
sbb
sub
push
adc
fcoms
xor
jmp
loop
in
cmpsb
add
mov
aas
orb
xchg
adc
mov
lcall
adc
pop
je
add
xor
xor
lods
in
std
ret
jg
sarl
scas
push
icebp
mov
jg
add
mov
mov
xor
or
mov
pop
fsubrs
mov
arpl
xchg
or
mov
mov
aaa
aas
enter
inc
stc
cmp
cmp
add
rolb
aas
jp
lds
enter
lea
push
mov
jg
mov
pop
and
adc
mov
and
outsl
push
es
sub
pushl
mov
push
adc
sub
inc
bound
add
inc
cli
rcll
dec
cmp
repnz
cwtl
ljmp
sub
popa
xlat
cmp
mov
shll
mov
add
outsl
std
add
add
bound
xor
lds
sbb
jp
incl
aaa
das
pop
cmp
pop
imul
xor
dec
or
rclb
rorl
pop
jo
or
add
xor
mov
xchg
je
xor
jno
cmp
pop
jle,pn
ljmp
adc
xchg
adcl
or
sbbb
sarb
add
decl
cmp
nop
test
or
cmpsl
mov
decl
sbb
xor
xor
aad
and
ss
jno
aas
andb
add
sbb
dec
mov
add
les
sbb
cmp
push
jecxz
or
int
clc
pop
je
xchg
rcr
enter
in
adc
int
mov
fimull
cmp
adc
incl
je
and
sbb
call
call
imul
rcrl
pop
xchg
test
inc
inc
or
arpl
xor
pop
icebp
fistpl
imul
dec
sub
imul
shll
daa
sar
pop
xchg
push
add
adc
pop
sub
push
cmpsl
das
or
inc
sub
in
cli
jg
sbb
adc
das
sub
add
adc
cld
das
lds
xor
and
into
ds
xor
out
lcall
bndldx
inc
mov
adc
mov
sub
sub
pop
or
int3
and
cmp
jmp
jmp
adc
stos
out
das
in
cmc
cmpsb
push
ljmp
pop
bound
lcall
mov
fcomip
push
cld
xchg
push
xor
aaa
aaa
pop
dec
push
js
sbb
notl
or
xchg
sub
sbb
cmp
dec
xchg
push
cmp
or
imul
sub
push
in
adc
pushl
jae
das
jns
je
jne
outsb
jo
add
add
or
jecxz
fbstp
or
or
scas
mov
daa
adc
sbb
ret
in
add
lret
sbbb
push
add
mov
outsb
cmpsb
mov
add
sbb
xchg
jo
scas
sbb
inc
cmpsb
test
jmp
xor
sahf
lcall
mov
fs
out
scas
clc
xchg
adc
subl
mov
and
mov
sahf
jecxz
sbb
call
cmpsl
sbb
daa
cmp
cld
mov
or
mov
xor
pop
lock
and
sbb
outsl
cmp
or
aas
es
lret
sbb
mov
and
imul
lcall
add
xchg
mov
aam
jmp
mov
ret
test
fwait
cwtl
jl
add
lock
jbe
pushf
loop
pop
xorl
mov
stos
lcall
ds
sbb
xor
push
clc
call
sbb
pop
subb
or
cmpsb
lock
or
ret
rorb
lcall
xchg
xchg
hlt
or
push
pop
and
lcall
stos
into
sbb
jb
out
cli
adcb
sbb
xchg
mov
adc
jg
aas
and
xchg
and
pop
and
sbb
and
push
sbb
xor
jmp
or
xor
lcall
pop
daa
inc
cwtl
scas
xchg
xchg
and
adc
mov
sbb
jno
cmp
add
scas
xchg
popa
xchg
shrl
cmp
jg
lahf
adc
and
pop
mov
ds
sbb
jno
das
or
xchg
inc
scas
xlat
or
xorb
ja
mov
rcrb
aaa
dec
scas
cs
and
pop
push
cld
pop
je
and
mov
xor
into
xor
pop
pusha
xlat
call
jge
cmpsb
push
cmp
adc
dec
sub
movsb
xor
clc
jmp
cld
ja
cmp
insl
fmull
out
js
xor
mov
push
push
add
jns
orl
dec
pop
push
add
or
faddl
xchg
add
fdivrl
sbb
add
ljmp
lea
sbb
dec
mov
mov
and
mov
push
cmp
test
push
pop
xor
jno
aaa
mov
push
mov
pop
insl
cmp
enter
es
adc
adc
sub
xor
push
dec
or
and
or
int
mov
adc
mov
sub
pop
andb
or
adc
jecxz
pop
inc
cld
pushl
std
or
sub
enter
cmp
inc
ds
fistps
xor
hlt
push
add
lock
je
push
add
xor
bound
pop
lcall
jnp
xchg
punpckldq
xor
push
adc
sbb
aaa
jae
xor
and
push
adc
mov
sub
sbb
int
sbb
or
inc
and
adc
cltd
mov
out
cli
and
out
push
sub
enter
adc
cmp
add
popf
mov
ucomiss
es
inc
add
fdivr
mov
xor
incl
popa
sbb
xor
pop
adc
pop
clc
mov
cmpb
ss
sub
mov
add
pop
mov
stos
outsl
or
ds
xor
lea
and
ljmp
aaa
lret
xor
mov
mov
xchg
fdivrs
scas
in
mov
movsl
or
push
sub
push
jg
out
jp
add
test
pop
sub
xor
femms
in
adc
or
mov
sti
ljmp
pop
popa
sub
inc
jmp
fsubr
xchg
cmp
mov
mov
imulb
xor
push
push
mov
pop
jg
push
and
decl
rcl
fildll
xor
adc
jecxz
cmp
cwtl
test
jmp
mov
add
sub
das
lea
test
aam
hlt
push
shrb
xor
call
movb
sub
test
adc
adc
inc
xor
mov
inc
nop
pop
jo
mov
sbb
jbe
adc
add
cs
and
and
add
and
adc
sbb
mov
xor
decl
cs
mov
adc
adc
push
mov
and
jmp
add
or
adcl
push
cmp
in
cwtl
adc
or
and
push
stc
xchg
mov
fisttps
pop
xchg
pop
ja
test
lret
ja
ljmp
je
sub
add
pop
leave
sbb
ds
and
sub
outsl
inc
mov
sub
sub
cs
or
sub
pop
pop
mov
mov
sbb
add
and
sbb
aaa
push
or
cmp
add
enter
jbe
jp
and
into
and
push
sbb
das
sbb
cmp
cs
call
pop
xchg
xchg
das
or
adc
maskmovq
negl
aaa
xor
cmp
sbb
ss
xor
adc
es
test
incb
insb
ljmp
jg
mov
push
xchg
inc
jns
jne
add
and
sbb
push
cmp
stos
add
or
insl
aad
pushl
lods
mov
mov
testb
adc
or
jge
sahf
and
mov
mov
sub
clc
lret
sbb
mov
inc
test
jbe
repnz
call
leave
inc
xchg
popa
das
push
mov
push
inc
pcmpeqb
lcall
fadd
ljmp
sbb
sub
das
add
cmp
xor
sahf
or
shll
sub
cs
mov
sbb
xchg
sub
and
cmp
jmp
mov
mov
push
jnp
enter
mov
lcall
inc
sbb
invd
push
int3
pop
or
add
cmp
daa
popf
into
mov
aas
loopne
add
sub
cmp
adc
lea
bound
add
sub
into
push
xor
push
mov
repnz
ja
sub
jae
or
mov
ret
push
packsswb
xor
and
mov
sbb
daa
mov
pop
inc
adc
fistpll
lahf
shrl
xor
movsb
scas
mov
add
jb
adc
incl
stos
or
push
dec
sbb
mov
lcall
inc
and
mov
mov
cwtl
call
cs
mov
add
sar
jmp
mov
mov
cmp
cs
cmpsl
loop
sbb
das
push
stos
and
jg
and
mov
lods
xor
xor
mov
xchg
add
jg
mov
add
pop
aaa
dec
mov
push
daa
stc
lcall
incl
or
subb
repz
adc
inc
or
fwait
mov
pushl
mov
xchg
int
adc
dec
and
int3
xchg
sub
sub
xorl
pop
lret
mov
orb
scas
and
enter
loop
sar
lret
mov
adc
push
jbe
ss
mov
add
cwtl
outsl
aam
inc
incl
filds
jmp
xor
or
pushl
xor
pop
cmp
das
and
fiadds
negb
syscall
sbb
daa
js
lock
lcall
je
push
xchg
sub
mov
arpl
std
decl
sbb
mov
sbb
sub
sar
cmp
push
incl
cli
or
sub
mov
sbb
jmp
or
or
fnstenv
cld
push
shrl
cli
aas
or
xchg
mov
test
data16
scas
and
ss
call
jg
xchg
xor
xchg
or
push
aam
xchg
mov
xor
jmp
add
das
into
sbb
fidivrs
mov
adc
mov
push
push
and
sbb
adc
pop
sub
sbbl
movsl
repnz
sbb
lods
or
lea
jle
in
sbb
mov
decl
xor
das
push
fmull
or
cs
mov
sub
sbbb
shlb
outsb
sbb
pop
sbb
outsl
clc
sbb
adc
scas
jo
mov
adcl
das
repnz
rorl
loope
aaa
pop
arpl
and
adc
inc
imul
cmc
and
cwtl
push
xor
in
mov
push
ds
fcoml
cld
daa
call
sub
sub
lahf
cmp
mov
xchg
cmp
fwait
pop
test
loopne
mov
mov
push
dec
or
loope
add
lret
push
rolb
fimull
cmp
push
pop
arpl
jmp
sbb
and
fs
mov
cld
mov
aaa
sbb
xor
cmp
xor
incl
adc
push
ret
adc
mov
popa
cmpsl
jbe
in
in
incl
fdivrs
lock
stos
xor
fldt
add
cmp
jge
mov
movsb
sbb
dec
mov
lea
pop
jno
jmp
hlt
or
mov
pop
mov
ss
loopne
mov
mov
add
call
jmp
mov
xchg
sbb
rorb
mov
cmp
or
add
lcall
jle
and
xchg
fcompl
mov
int3
mov
mov
xchg
mov
icebp
lcall
xchg
cmpsl
jno
and
push
push
mov
xor
std
loopne
xchg
fisubrs
xorl
mov
mov
push
cmp
or
test
and
hlt
call
dec
xor
popf
pop
push
pop
bound
adc
addb
movsb
scas
pop
adc
and
pushl
cld
xchg
mov
cs
cwtl
mov
cmp
mov
cwtl
xchg
mov
xchg
stos
incl
cmp
lret
sbb
mov
jbe
ret
bound
das
cli
lcall
outsb
arpl
sbb
cmp
adc
decb
adc
mov
add
in
jg
xchg
movsl
add
mov
adc
mov
and
jle
cmpsb
cltd
sti
loope
call
enter
xor
pop
and
and
jb
in
push
mov
aas
repnz
faddl
subps
mov
shlb
mov
push
stos
pop
add
jns
xor
daa
pushf
mov
lcall
jnp
into
enter
sbb
mov
mov
mov
jbe
fcomps
mul
jmp
and
pushl
out
push
ror
test
movsl
in
rol
mov
inc
mov
pop
movl
incl
xor
and
test
xchg
jo
pop
jb
xor
dec
adc
decl
inc
fistl
cmp
pop
imul
rorb
pushl
fimuls
out
sbb
mov
cli
roll
sti
sub
pushf
push
int3
cmp
stos
jg
jg
xor
mov
daa
push
fwait
mov
ss
push
adc
mov
sub
and
cmp
cmp
mov
popl
leave
ret
cmpsb
add
mov
fistps
out
mov
inc
pop
dec
and
fadd
add
in
roll
ljmp
fists
int3
add
fisttpl
pop
insl
cmp
mov
cli
adc
adc
pushf
sahf
icebp
xor
xchg
fisubl
xchg
cltd
xchg
lcall
mov
stos
mov
sbb
or
xchg
fwait
lods
sbb
in
cmp
stc
xchg
and
add
dec
jo
add
into
out
orl
xchg
push
xacquire
mov
negb
mov
ss
scas
add
mov
jg
xchg
cmp
aaa
stc
sbb
mov
and
mov
or
jno
sbb
jmp
fcmovu
add
add
jmp
jb
add
mov
jg
fsub
fwait
mov
or
fcoml
bound
sahf
add
lcall
and
mov
repnz
mov
insl
or
pop
push
in
mov
sub
inc
and
test
ja
add
cmp
add
lret
cmp
inc
rcrl
sarl
sbb
ret
jbe
mov
out
clc
outsl
xchg
xchg
test
repz
mov
mov
jmp
int
xchg
cmpsl
bound
cltd
sbb
xor
dec
mov
mov
jbe
push
cs
pushf
out
aaa
repz
pushf
mov
jnp
and
mov
les
pop
push
inc
aaa
xchg
mov
adc
loop
jmp
mov
cs
or
cmp
std
sub
adc
or
sbb
mov
das
mov
push
outsl
xor
or
pop
mov
cltd
xor
pop
jle
cmpsb
jno
fiadds
popa
call
pop
inc
mov
mov
sbb
ljmp
sahf
ror
fs
loope
loopne
or
jbe
push
out
and
jnp
insl
cld
adc
pop
cmpsb
sub
or
scas
jg
movsl
adc
xor
in
xchg
mov
decl
pop
adc
scas
sub
sbb
sbb
cmp
sbb
jne
adc
jecxz
mov
add
push
mov
insl
xor
add
std
inc
jecxz
imul
test
cmpsb
and
subb
inc
pushl
lea
mov
dec
add
add
pop
pushl
pop
dec
mov
ds
mov
mov
xor
and
clc
cmp
adc
test
or
xor
pop
fmul
lods
les
cs
popf
and
pop
mov
sub
sbb
nop
cmp
mov
push
daa
and
mov
sub
mov
sub
in
or
xor
jb
cmp
push
je
inc
aaa
mov
mov
mov
outsb
outsb
cmp
sbb
fidivs
cs
roll
or
sbb
mov
popf
add
cmp
sbb
fmull
sub
ljmp
jno
mov
clc
adc
adc
scas
cmc
mov
sbb
popf
mov
sub
insb
stos
cmpsl
das
ljmp
cs
sbb
fdivrs
push
lods
es
test
sub
mov
xor
sahf
cmp
adc
out
and
xchg
movl
mov
fimuls
jno
cld
xor
movsl
mov
decl
aas
cmp
aas
and
mov
or
xor
and
xchg
or
mov
pop
cmp
es
ret
lcall
pop
fwait
aam
fsub
lahf
xchg
pop
xchg
fnsave
cld
lret
sub
ds
clc
dec
adcb
lret
lret
ficomps
add
mov
mov
pop
push
icebp
push
cmp
pop
fdivl
add
shrl
adc
jp
and
push
dec
push
adc
sti
cmp
lcall
pop
xor
jbe
adc
mov
cmp
scas
pop
xor
inc
js
pop
jbe
or
and
mov
adc
popa
or
or
insl
insl
jmp
pop
push
xor
je
bnd
aam
ljmp
or
xor
add
adc
or
icebp
insb
cmp
aas
fcomps
ret
lcall
imul
mov
or
inc
pop
iret
sahf
add
mov
aaa
enter
inc
lds
mov
add
bswap
dec
clc
mov
and
or
mov
cmp
dec
movsb
jo
outsb
xor
pop
icebp
pop
decl
xchg
push
xor
sub
xorb
and
and
lcall
mov
or
or
es
and
popa
pop
add
ds
jae
loop
and
mov
sbb
mov
sbb
or
jmp
stc
mov
and
jmp
es
dec
xor
cs
pop
mov
cmp
or
sub
fwait
out
xor
mov
and
addb
jge
xchg
inc
ss
xor
lret
out
ss
sub
imul
sub
stos
leave
or
sbb
mov
les
dec
inc
mov
test
pop
or
cmpsb
faddl
lock
add
je
cmp
xor
lret
andl
lcall
dec
jne
push
sub
sbb
push
movsb
and
out
test
xor
cmp
mov
sub
cli
xor
jne
dec
and
jae
inc
and
syscall
push
xor
or
cmp
jg
hlt
xchg
or
adc
xor
pop
shlb
push
lods
loope
bound
mov
ss
repnz
adc
test
out
scas
and
repnz
lods
test
divb
xchg
add
push
pop
test
lret
icebp
loopne
test
in
jno
mov
sti
adc
stc
call
aas
pop
popf
lret
xor
es
adc
aad
aam
pushl
rolb
add
pop
xchg
scas
stos
sub
in
notb
icebp
loop
pushl
mov
push
in
aad
xor
xor
pop
lret
xor
aaa
mov
jno
incl
xchg
sbb
aad
mov
adc
adc
mov
add
aas
and
push
hlt
and
push
cmp
mov
cs
adc
cmp
and
pop
add
and
incl
mov
or
pmaddwd
cmp
stos
sub
aas
ds
decl
call
add
sbb
xchg
xor
sbb
or
decl
xchg
inc
and
cld
jl
sbb
mov
mov
xor
nop
ja
fdivl
sbb
push
das
xor
add
cmpsb
adc
lock
mov
pop
test
rclb
lcall
adc
sub
sub
push
sahf
push
jle
scas
outsl
inc
jno
test
pop
stc
aas
cmp
push
mov
mov
add
jg
std
mov
dec
jb
pop
incl
stc
decl
test
jmp
xor
nop
pushl
leave
sbbl
push
mov
test
add
add
pushl
divb
call
adc
pop
lea
push
push
fidivrs
xchg
sahf
stos
and
stos
pop
lcall
xchg
lcall
add
test
daa
ja
add
push
lret
or
lahf
mov
incl
adc
add
sub
xor
xchg
pop
and
popf
mov
dec
adc
cli
jg
mov
mov
mov
push
pop
cmpsl
bound
incl
adc
jnp
xchg
jno
call
xor
out
mov
inc
incl
lock
test
addr16
leave
ret
xchg
aaa
xor
xchg
cmp
or
ja
adc
dec
aas
push
mov
incl
xchg
cmpps
cmp
sbb
iret
in
push
mov
xor
lcall
test
scas
mov
shlb
and
popa
add
incl
pop
xor
aas
or
jl
adc
cmpl
and
mov
hlt
ljmp
push
xchg
sub
negb
sub
mov
cmc
incl
cmp
sbb
or
das
or
cmp
xor
js
jae
mov
popf
and
xor
call
addr16
test
jno
mov
lahf
dec
adc
mov
nop
sub
cmp
stc
inc
mov
sub
imul
scas
jmp
sbb
pushl
jae
pop
jns
outsb
fidivl
scas
lock
jg
fcompl
add
xchg
scas
icebp
mov
sbb
xor
mov
mov
es
cmp
mov
pop
sbb
insb
sbb
sbbb
ss
les
mov
out
outsl
xor
cmp
out
jo
mov
fs
pushl
std
xor
cmpb
add
lock
adc
pushf
icebp
and
decl
pop
push
arpl
lea
sub
bound
ss
fists
xor
sub
cld
iret
cpuid
aad
jb
add
in
adc
mov
daa
add
cmp
add
cs
cmp
test
xor
inc
sbb
add
mov
add
dec
jle
fcoml
cs
cld
sbb
cmp
and
add
iret
jg
adc
js
out
xor
cld
repz
pop
adc
lcall
adc
cld
repz
xor
cld
push
cmp
or
or
jb
int3
out
aas
ljmp
sub
add
dec
sub
cmp
fsubl
add
mov
push
testl
cmp
pushf
jg
stc
nop
in
add
cmp
xor
popa
add
lods
mov
ss
fwait
xchg
mov
orl
outsb
fstps
test
cmp
sbb
rcrl
inc
and
mov
sub
push
sahf
out
xor
cmpl
dec
cmpsb
inc
les
cli
inc
push
jmp
jns
xchg
mov
mov
or
adc
int
inc
les
pop
cli
jo
adc
sbb
repz
adc
inc
imul
cmp
mov
pop
push
cmp
sbb
or
repz
shrl
repnz
adc
addb
lods
ja
aas
or
jns
adc
jno
cmp
pop
and
sbb
mov
jp
in
adc
xor
jns
xchg
cmp
cmp
stos
fisubrl
stc
adc
insl
int
xchg
pushl
dec
xorl
dec
sbb
cmp
dec
in
pop
daa
andb
repz
adc
iret
repz
cmp
jecxz
shl
cmp
repz
out
mov
iret
repz
popf
pop
stc
sbb
repz
or
fnsave
addb
lods
mov
loopne
cmp
repz
xor
repz
cmp
or
sbb
repz
bswap
pop
mov
cmp
repz
fs
cmp
repz
sbb
repz
jns
je
repz
repz
sub
repz
jns
jbe
enter
repz
mov
and
cmp
repz
xor
test
nop
out
cmc
aad
cs
inc
ds
or
sahf
gs
push
lret
jl
fcompp
xor
notb
inc
jle
imul
rcll
cmp
inc
xorl
pushl
loope
pop
push
imul
push
mov
fs
jno
mov
je
sub
incl
aam
cmp
rorl
dec
or
jge
cmpsb
xor
stos
mov
mov
incl
outsl
or
cltd
jnp
dec
add
rorl
insb
int3
sbb
repnz
ss
std
ja
in
lcall
add
repz
mov
andb
fisttps
mov
cli
mov
sahf
int
das
pop
mov
sarl
inc
sub
mov
jmp
push
les
push
sahf
pop
inc
cmp
and
dec
mov
mov
mov
in
out
pusha
mov
lock
decl
lea
adc
out
fidivrs
popf
inc
lds
jl
sub
daa
sar
jmp
movsl
iret
pusha
xor
xor
nop
mov
fdivs
jnp
mov
and
jmp
aaa
scas
jns
push
or
jmp
mov
fcomip
cs
insb
lret
es
xchg
outsb
inc
hlt
pop
sub
ret
adc
pop
decl
pop
fistps
mov
inc
jecxz
les
std
scas
jg
or
cwtl
outsl
xor
push
repnz
jge
sbb
inc
movsl
push
pop
inc
out
xor
inc
out
insl
jae
subl
jno
out
mov
out
xchg
nop
lahf
xchg
inc
push
push
test
push
scas
mov
ds
and
jb
jmp
adc
out
mov
divb
setno
dec
popf
jae
dec
cmp
imul
sar
push
pop
mov
mov
xchg
mov
and
lods
and
sub
ljmp
mov
inc
jbe
es
lods
ret
or
push
xchg
nop
pop
movl
mov
decl
jbe
push
mov
pushf
pop
inc
mov
sbb
clc
lock
xlat
nop
jnp
js
mov
incl
cmpsb
mov
shrb
and
xchg
jg
xor
mov
mov
add
cmp
push
push
adc
lcall
test
lahf
insb
dec
dec
mulb
add
mov
insb
or
mov
rorb
mov
std
in
std
lock
add
inc
cmc
jg
jmp
cli
jne
inc
push
mov
push
cmp
pusha
outsl
xor
inc
popa
sbb
imul
xchg
sub
in
push
cld
jmp
xchg
in
inc
jle
mov
inc
repz
jbe
push
jecxz
rorb
xchg
lahf
push
cmp
je
inc
rorl
xchg
push
in
scas
cld
fisubrl
dec
out
inc
lcall
inc
push
out
inc
popa
les
sub
jg
mov
addr16
roll
inc
mov
xchg
popa
ror
pop
stc
push
push
fs
data16
mov
pop
push
dec
dec
cmp
push
push
call
out
inc
gs
jo
sub
jge
mov
xchg
insl
lock
outsl
xor
cmp
inc
mov
lcall
push
cmp
push
push
mov
mov
add
inc
js
cmc
insl
sbb
and
inc
sub
sbb
and
xor
and
xor
or
push
inc
les
ret
push
inc
sbb
add
aam
xor
and
aas
pop
add
adc
sub
bndstx
sub
inc
sub
adcb
and
xor
push
xor
inc
inc
lock
xor
push
mov
lods
or
pop
stc
decl
sbb
sub
sub
or
add
push
pop
pop
sub
inc
add
bound
adc
loop
push
decl
pop
sub
sub
xor
inc
jg
incl
adc
mov
and
or
cld
lsl
cmp
sbb
aam
sbb
inc
bound
sub
fists
es
ljmp
adc
or
sbb
xor
and
add
cs
nopl
aas
adc
and
cld
push
jp
and
push
adc
or
mov
jl
or
inc
jo
xor
sbb
adc
add
pusha
std
jg
outsl
xor
xor
cmp
push
push
rorb
jb
adc
mov
lock
popf
push
cmp
jecxz
add
push
jge
and
loope
clc
dec
test
push
div
xchg
lods
pop
imul
sbb
dec
shll
fcom
dec
shlb
in
push
ljmp
adc
xor
jle
dec
sti
adc
out
decl
leave
add
out
call
insl
imul
test
rorb
cmp
inc
orl
call
push
xchg
sbb
ja
je
add
insb
scas
es
subl
popf
xor
mov
or
lds
jg
inc
pushf
into
push
mov
divb
and
push
xchg
jp
adc
pop
dec
push
incl
ficomps
inc
in
jl
or
lods
and
pop
mov
cmp
mov
push
xchg
dec
data16
mov
aaa
je
pop
shrb
orl
dec
clc
ljmp
sarb
js
push
stos
push
sbb
es
ljmp
xchg
dec
es
dec
mov
xor
fwait
imul
dec
movsl
lret
scas
xor
inc
xor
pushl
mov
xchg
jno
and
jne
loop
inc
xchg
push
jbe
mov
pop
sti
mov
scas
lcall
jne
or
jb
jl
cmpsl
xor
cld
incl
cmp
dec
pop
sbb
je
cmp
push
mov
pop
inc
insl
pushl
dec
dec
sbb
and
cmc
imul
pop
jp
add
dec
push
mov
ljmp
std
jge
add
loopne
stc
fldl
je
ret
incl
mov
js
insl
lods
cmp
inc
stos
push
jge
je
pop
jge
gs
dec
inc
dec
push
push
and
imul
incl
mov
inc
push
mov
ja
dec
jnp
push
lcall
js
inc
fistl
inc
fwait
xlat
inc
push
outsl
push
jp
inc
aam
call
js
cmp
sbb
push
enter
inc
pop
sub
push
inc
xchg
or
shll
clc
lcall
dec
dec
and
inc
dec
insb
xor
fnsetpm(287
ja
or
sub
add
push
imul
pop
cmp
cs
nop
incl
cmp
popa
push
lock
or
mov
jge
sub
ljmp
clc
sub
ljmp
in
xchg
sahf
or
jnp
sbb
jmp
ss
pop
sbb
jb
sbb
sbb
mov
in
or
dec
inc
popa
adc
in
fmull
loop
pop
push
das
stos
adc
add
pop
iret
shlb
add
dec
mov
call
fldl
adc
push
and
push
or
push
sub
sbb
aas
cld
cli
lret
jge
sbb
sbb
cmp
fistpll
fldl
add
sub
lcall
pusha
in
pop
push
push
loop
add
movsl
dec
add
lret
mov
sub
ret
sub
call
out
leave
push
add
scas
fs
or
imul
rolb
jnp
out
dec
enter
lock
ljmp
inc
ret
jne,pt
pop
in
push
pusha
je,pt
std
popa
data16
jmp
rorb
pop
pop
xchg
mov
popa
cld
out
push
imul
push
lret
fistpl
fisubl
xchg
outsl
int
inc
aad
push
adc
cmp
js
fnstenv
addr16
push
sti
sbbl
insl
call
jno
sub
or
mov
imulb
dec
ret
aam
loope
inc
shrl
mov
pop
ret
xchg
mov
push
lds
les
stos
movsb
int
pop
pop
xor
mov
mov
cmp
push
adc
dec
icebp
jbe
jecxz
mov
decl
inc
cs
rorl
loop
push
add
dec
jae
mov
push
inc
daa
jo
jmp
add
or
or
sub
xor
add
iret
sbb
dec
das
bound
mov
xor
cmp
test
jae
popf
inc
sar
decl
and
xchg
xor
dec
cmp
adc
adc
jb
push
sub
add
add
outsl
pusha
xor
sub
xchg
push
cmp
lret
pop
test
jo
cmp
and
das
adc
mov
jp
incl
xchg
or
in
fcoml
repz
jae
std
cmp
jp
pushl
cld
cmp
in
insl
rorl
xlat
mov
iret
pop
bound
out
fcomps
or
mov
dec
lods
adc
cmp
sbb
jmp
pop
xchg
add
sbb
sub
mov
stos
sub
mov
mov
iret
mov
std
bound
mov
push
dec
mov
adc
jg
add
clc
lahf
jmp
loop
and
jno
xlat
ljmp
jnp
adcl
dec
push
dec
rclb
pushl
jg
imul
add
bound
outsb
xchg
call
in
fnsave
pushl
aaa
xor
and
dec
pop
push
xchg
inc
aas
shlb
push
out
std
stos
cmp
push
push
xchg
and
pop
xor
sub
xor
mov
cld
in
icebp
push
jno,pt
dec
xor
sub
push
mov
mov
popa
test
add
test
push
xchg
lds
insl
add
cmp
add
ret
add
jb
sbb
xchg
sbb
sbb
clc
and
pop
imul
iret
sub
imul
outsl
das
shll
and
ljmp
push
pop
ret
rorb
jno
lret
decl
aad
push
mov
xor
ret
fmull
sar
pop
sub
js
jmp
xchg
rorb
repnz
incl
std
and
out
dec
dec
test
pop
inc
lret
mov
imul
repnz
add
stos
cmpsl
fldl
stos
dec
call
ljmp
or
cmp
gs
push
push
loope
push
push
jno
mov
ljmp
fs
js
mov
pop
iret
jmp
mov
jnp
jge
dec
push
inc
push
insb
add
jmp
push
mov
filds
insl
push
sub
ja
adc
mov
dec
inc
js
xchg
inc
incl
inc
or
pop
test
add
add
sbb
sbb
mov
scas
push
sub
lcall
jns
call
out
iret
adc
ljmp
stos
mov
fwait
add
dec
cltd
shrl
xlat
scas
cli
inc
mul
jnp,pn
jg
and
push
xor
daa
int
test
mov
stc
xchg
mov
testb
or
decl
push
imul
push
cmc
mov
and
call
clc
inc
push
cmp
imul
pop
xor
movsb
xchg
inc
popf
pusha
filds
sbb
popf
lahf
cmp
xor
pop
dec
jnp
mov
pop
jmp
test
jne
roll
cmc
bnd
in
std
adc
add
and
pop
sub
pop
inc
lret
mov
xor
sbb
dec
loopne
sbb
andb
or
pop
enter
inc
imul
cmc
ljmp
ret
add
shrl
add
xor
xchg
pusha
dec
enter
or
lock
decl
lods
inc
dec
push
mov
test
jb
jg
sub
dec
jb
sbb
mov
stos
loopne
jno
jmp
stc
js
insb
shl
cmp
scas
gs
fcmove
jmp
int
fld
dec
ja
les
shlb
push
jmp
pushl
or
xorl
test
jp
dec
cmpsl
add
movsl
xor
cmp
out
push
add
data16
scas
iret
push
xor
dec
xlat
lea
cld
call
add
sub
js
insb
lods
mov
stos
std
gs
aaa
mov
lahf
and
ret
dec
fldt
pushl
and
fbld
push
jbe
mov
cltd
out
pushf
lea
call
mov
xor
inc
or
outsb
lods
mov
push
decl
and
jae
pusha
loope
xor
addr16
fiadds
xor
xlat
jecxz
or
incl
movb
icebp
call
push
arpl
fwait
jae
adc
inc
pop
jne
lret
push
ljmp
xchg
imul
mov
enter
jne
jnp
shrb
mov
test
scas
addr16
aam
jbe
test
ss
dec
push
pop
ljmp
push
jae
inc
fcoms
fwait
arpl
push
addr16
lcall
inc
xchg
js
cmp
imul
and
lcall
mov
xor
jo
xor
dec
ss
pop
mov
or
inc
adc
scas
mov
dec
out
xchg
cwtl
jo
call
xlat
jns
sbb
pop
enter
xchg
addr16
loopne
cld
dec
repnz
mov
jle
lcall
pushl
xchg
call
sbb
outsl
inc
mov
out
decl
clc
sub
jnp
add
aam
jecxz
dec
imul
mov
stc
lret
jmp
filds
mov
rcpps
mul
xor
push
adc
mov
in
adcb
imul
aaa
in
loop
mov
rorb
inc
mov
andb
pushl
rcl
mov
imul
flds
clc
call
mov
jg
push
jbe
sahf
jns
scas
or
mov
enter
call
cwtl
ss
dec
xchg
sarl
out
push
test
sbb
adc
add
ss
mov
std
xor
sbb
dec
out
sbb
fimuls
sbb
cld
jmp
dec
pop
das
inc
es
or
or
sarl
decl
add
in
sub
pop
insb
das
outsl
leave
incb
repz
stos
lahf
pop
sub
jl
pop
inc
cld
jmp
adc
push
jecxz
je
jecxz
mov
lahf
sub
scas
movsl
add
xor
xor
pushl
push
or
test
dec
ss
sub
or
ljmp
jg
mulb
test
sbb
mov
xor
loope
jg
dec
sub
adc
push
addl
sbb
test
aas
xchg
jne
add
mov
das
add
sub
jle
imul
dec
xor
mov
int3
push
sti
sub
test
ljmp
shrb
jle
and
xchg
test
inc
push
mov
and
sub
gs
push
ficoms
inc
jmp
push
inc
jge
xlat
subb
mov
xor
sub
add
mov
jmp
pop
jmp
stc
shlb
dec
and
lds
xchg
sub
cmc
push
adc
bound
jg
outsb
mov
in
and
push
dec
add
push
adc
xchg
jnp
sub
xor
loopne
ljmp
mov
dec
push
mov
push
cmp
cltd
jle
scas
add
imulb
faddl
push
ljmp
adc
sbb
insb
cwtl
adc
cmp
add
sub
dec
mov
bound
push
xlat
js
push
add
mov
mov
lcall
mov
inc
adc
add
dec
add
or
or
rolb
push
nop
adc
std
sbb
xor
mov
scas
cmc
das
nop
decl
xchg
cmp
daa
lds
out
jp
or
sbb
mov
jmp
push
lret
cmc
cmp
adc
mov
cmp
push
std
adc
mov
or
push
ljmp
inc
movsb
fnstsw
jns
out
cmc
popa
movl
hlt
jne
out
cmp
arpl
pop
pop
imul
push
pop
adc
insl
mov
je
out
xorl
or
add
jg
push
outsl
dec
jle
push
out
sub
popf
add
jb
cmp
mov
outsl
ljmp
jns
mov
cmp
push
mov
inc
stc
pushf
pusha
dec
push
cmp
mov
call
pop
leave
lcall
bound
std
in
test
jns
xchg
pushl
es
dec
mov
add
xchg
inc
mov
fistps
jge
scas
mov
test
cmp
push
pop
call
ret
sub
xlat
inc
push
mov
inc
arpl
repz
jbe
push
rolb
inc
jmp
int
inc
gs
jge
fiaddl
fcmovnu
jmp
gs
icebp
push
imul
gs
daa
gs
jo
in
xchg
jb
scas
out
mov
push
cld
xor
sti
popa
aad
jl
cmp
cmp
aam
sbb
inc
rcll
pusha
or
xorb
sar
cmp
pop
mov
push
ds
jno
lcall
fwait
call
test
pop
fdivrs
sub
mov
pop
int
push
flds
push
push
xchg
popa
decl
lock
sub
fbld
jp
xlat
sub
xchg
jmp
push
es
sbb
lcall
and
mov
inc
ljmp
lock
test
loop
inc
pop
loopne
lret
aaa
mov
int
decl
mov
push
push
test
roll
adc
jo
es
das
sbb
decl
jns
and
push
dec
sarb
daa
add
push
adc
out
repz
pusha
jle
push
add
and
add
cmp
pusha
jmp
adc
insl
inc
jle
cmpsb
xchg
xchg
outsl
scas
mov
rcll
std
pop
mov
outsl
jl
int
pop
in
inc
mov
fistpl
mov
mov
or
sbb
xor
mov
add
or
leave
and
pop
push
aaa
xor
sbb
jp
aas
add
add
jmp
mov
jno
ret
lods
sbb
mov
into
repnz
inc
leave
loop
adc
sub
loopne
in
add
and
inc
push
push
add
cmp
mov
je
push
jp
pop
arpl
stc
shll
pusha
jbe
cmp
dec
add
inc
pop
jae
pop
imul
dec
dec
data16
add
dec
movsl
pop
push
jns
dec
pop
aas
adc
test
add
adc
jns
jbe
jne
jmp
add
sahf
imul
shrl
xchg
push
adc
xor
pusha
push
push
repz
push
xor
test
add
mov
inc
es
aas
inc
push
dec
push
xchg
xchg
dec
mov
inc
aaa
mov
daa
aaa
add
sbb
jmp
or
xor
add
jl
or
popa
add
sbb
add
bound
xor
decl
xchg
mov
inc
pop
pusha
js
es
or
out
dec
push
or
sub
add
iret
decl
push
add
das
xor
imul
sub
clc
decl
sub
or
push
cmp
pop
pop
xor
sub
jg
ljmp
xor
ds
push
or
or
or
add
pushf
adc
sbb
pop
add
sbb
psubb
cmp
cmp
or
js
pop
sbb
pop
add
pop
push
and
pop
fsubrs
push
jbe,pn
add
push
push
sbb
adc
add
das
cmp
into
and
dec
xchg
mov
cmp
mov
sbb
add
sbb
outsb
or
js
and
add
sub
mov
jbe
sbb
and
adc
or
ja
or
dec
pop
add
add
nop
add
aas
xor
cmp
mov
les
adc
cmp
adc
pop
sub
das
aaa
dec
add
or
ljmp
decl
or
adc
sub
or
sbb
fists
and
mov
nop
cld
lcall
sbb
add
cmp
push
adc
and
or
es
push
decl
dec
jnp
adc
add
and
sub
into
sbb
lcall
push
repnz
or
sub
sbb
data16
out
decb
and
push
or
bndldx
adc
sbb
test
imull
loop
imul
dec
ljmp
lcall
jp
ja
outsb
push
dec
jb
inc
push
push
insl
cli
fbld
mov
outsb
jne
ja
pop
jo
push
mov
push
fcmovnb
inc
inc
mov
push
fs
arpl
jle
incb
jp
inc
or
inc
je
pop
mov
pop
arpl
outsb
inc
outsl
gs
bound
push
pushl
ja
dec
inc
push
gs
js
inc
jae
imul
push
inc
push
dec
push
push
jno
dec
or
std
imul
lods
je
inc
insb
add
sti
aaa
add
jb
push
dec
inc
dec
inc
dec
dec
push
or
mov
inc
push
inc
jns
pop
ja
pushl
add
outsb
imul
bound
inc
dec
imul
xchg
idivb
pop
pop
jl
dec
push
clc
push
rcl
push
dec
out
jbe
dec
jbe
dec
dec
in
mov
aas
mov
jne
ja
imul
push
dec
dec
insl
push
pop
jbe
push
inc
fisubrs
shr
dec
bound
js
mov
je
gs
add
and
add
or
adc
or
out
sahf
adc
sbb
sbb
jns
out
pop
and
and
out
sahf
out
sub
out
sahf
xor
ds
pop
jns
out
inc
inc
push
push
push
rcrb
je
je
repz
add
repz
pop
fs
push
repz
je
jl
repz
repz
repz
cwtl
pushf
mov
sahf
out
mov
mov
sahf
out
int3
rcl
fsub
loope
add
dec
adcb
xlat
ret
sub
xchg
sub
insb
mov
cmpsl
jo
or
inc
outsb
outsl
in
pop
mov
arpl
das
push
imul
jb
outsb
inc
jo
loopne,pn
aaa
add
add
cmp
xor
pop
push
add
repnz
add
lods
adc
push
cld
sub
mov
pop
out
imul
pop
dec
shll
out
lahf
xorl
push
pushw
ja
jb
add
andb
jae
pop
jecxz
negl
add
inc
arpl
jo
insl
mov
aaa
dec
subb
je
js
repz
outsl
aaa
push
imul
negl
dec
insb
mull
push
bound
mov
push
jb
push
gs
push
mov
jbe
into
jne
das
inc
mov
mov
push
mov
data16
mov
mov
inc
xchg
daa
cmp
add
jnp
mov
inc
inc
inc
inc
insl
insb
fiadds
push
subb
push
jp
pmaxsw
push
aaa
sarl
push
push
imul
mov
inc
push
sub
mov
jo
addl
xchg
inc
fsubrp
loopne
pop
arpl
out
cli
dec
sbb
fcomi
push
popa
xchg
daa
push
adc
sub
dec
ja
rcll
insl
jo
das
inc
pcmpeqb
jecxz
testb
aaa
dec
xchg
pop
das
stos
loopne
cmp
imul
arpl
adc
jmp
cmp
dec
push
arpl
mov
xchg
fs
adc
dec
es
leave
leave
xor
out
push
pop
push
adc
sub
add
sub
push
and
js
sub
and
inc
or
inc
aaa
jns
jb
jo
and
xlat
jne
das
push
push
xchg
sbb
outsl
push
mov
push
push
push
push
inc
arpl
outsb
in
inc
xor
pop
pop
fidivl
arpl
fs
pop
add
cmp
jnp
mov
fimull
sub
out
fdivrs
push
inc
dec
out
pop
outsb
pop
dec
inc
xorps
add
add
repnz
add
pop
test
leave
movsl
aam
mov
mov
aam
jp
js
dec
scas
ds
mov
mov
mov
aam
push
daa
incl
gs
test
lahf
push
inc
mov
mov
insb
dec
sbb
repz
or
leave
leave
repz
or
aaa
fucomi
pop
xchg
or
mov
daa
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
out
xchg
fildl
xchg
fmull
sahf
sub
sbb
pushf
mov
into
aas
xlat
pop
push
mov
lret
sbb
add
inc
enter
add
adc
dec
mov
movsb
test
dec
xor
stos
xor
enter
pop
adc
or
pop
dec
adc
or
jl
in
leave
andb
fisttps
mov
cld
push
std
pop
scas
inc
jle
test
shll
int3
push
cmp
repnz
cmp
mov
in
call
out
adc
mov
ficompl
mov
fisttpl
fidivl
rcr
fsubp
stc
jb
jle
inc
std
subb
enter
orb
cmpsl
mov
inc
and
mov
push
sub
js
jle
aas
and
pusha
sub
jbe
xorb
icebp
daa
push
jo
movsb
add
mov
push
jo
inc
data16
push
cs
fistps
sub
xchg
push
or
dec
repz
shlb
cmp
repz
push
adc
jns
iret
sbb
mov
les
sahf
out
sahf
mov
push
sbb
push
cmp
out
or
test
and
lahf
out
and
and
mov
iret
cmp
mov
adc
repz
call
outsl
pop
or
orb
sub
sub
xchg
insb
and
das
aas
pop
add
xchg
addl
mov
or
sahf
cmpsl
stc
cld
shl
loopne
out
sahf
out
sarb
mov
test
movsb
mov
repz
xchg
nop
mov
daa
iret
je
fs
pop
push
sahf
out
sahf
dec
inc
xor
and
jo
loopne
adc
xadd
rolb
or
ss
jg
daa
xchg
fbld
sahf
out
xchg
push
mov
repz
shll
add
push
iret
repz
pop
ja
mov
repnz
push
dec
insb
pop
mov
jg
arpl
mov
outsl
imul
sbb
daa
mov
aas
outsb
addr16
inc
aas
sub
add
je
outsl
pop
jb
dec
gs
cmp
add
ud2
nop
lods
addb
xchg
adc
and
mov
dec
add
xor
or
dec
push
push
add
cmp
jg
inc
sbb
int3
aad
xchg
add
add
rolb
into
add
and
add
inc
into
add
sbb
mov
or
idivl
add
ja
cmp
mov
addb
pop
popa
mov
in
testb
out
pusha
pusha
or
int3
mov
jbe
mov
insl
ret
pop
out
aas
add
subl
sbbl
mov
mov
scas
mov
push
add
mov
pop
and
sbbl
mov
loopne
out
sbbl
add
sbbl
add
out
outsb
add
and
adc
data16
clc
pop
test
add
lock
jmp
dec
leave
in
push
rolb
lret
in
in
shl
clc
sbb
in
cld
incl
into
rcr
xchg
dec
cmc
iret
adc
test
inc
aam
push
jno
psadbw
ja
jo
pop
push
xlat
pop
jle
lods
mov
aas
jg
cmp
push
out
xor
mov
pop
push
inc
jle
loopne
sahf
lods
mov
xor
xchg
shl
out
add
mov
add
jne
sbb
mov
outsl
add
push
jno
xor
add
jno
sub
pop
push
loopne
push
pop
or
in
das
pushl
das
push
push
mov
pop
insb
and
insb
jg
ja
scas
mov
fiaddl
das
cmp
out
xchg
pop
imul
pusha
pop
subb
aas
movsl
icebp
insb
mov
pop
outsl
add
pop
nop
xchg
repnz
andl
faddp
das
pop
mov
mov
das
add
mov
mov
pop
rorl
gs
mov
rcrl
shr
notb
sarl
pop
sarl
jns
mov
das
rorl
pop
add
shlb
insb
sbb
shl
rol
aad
das
roll
or
fcoml
shrl
das
dec
add
sbb
or
rorl
mov
das
sarl
data16
out
ss
fsubrs
or
add
jmp
mulb
mov
jo
lds
shll
js
sldt
mov
rcrl
xadd
add
nop
or
mov
nop
or
xchg
incl
mov
dec
sahf
or
add
aas
insb
imul
scas
adc
pop
push
dec
out
or
fsave
cmpsb
je
add
mov
insb
add
adc
push
add
fwait
int
add
add
add
dec
add
add
jle
or
push
xchg
add
repz
add
out
adc
test
fidivs
push
cwtd
int3
sbb
pop
in
xor
incl
xor
int3
insb
incl
xor
iret
repz
int3
xchg
incl
xor
repz
cltd
int3
sub
mov
dec
aad
pushw
cltd
out
enter
std
push
xor
sahf
out
sahf
xor
xor
xor
jns
out
xor
xor
xor
jns
out
xor
xor
addr16
sahf
xor
xor
xchg
movsb
loopne
pop
push
xor
mov
inc
adc
push
data16
repz
data16
repz
data16
out
loope
push
data16
fnstsw
xor
xor
int3
jae
sahf
out
incl
data16
lock
dec
test
add
inc
ja
or
pop
call
out
popf
aaa
es
push
xor
out
negb
iret
mov
cltd
cltd
xor
jns
mov
pushl
pop
jno
adc
add
xchg
xor
push
jns
and
push
pushw
cs
out
mov
push
int3
and
out
int3
int3
add
int3
jns
out
mov
int3
int3
int3
push
sbb
out
call
int3
int3
cmp
es
jmp
jns
out
lcall
int3
dec
popf
out
fimuls
out
sahf
out
int3
int3
int3
int3
int3
mov
fstps
incl
mov
ss
push
and
insb
ss
in
movsl
add
add
xchg
xchg
add
int
mov
add
add
add
ss
ljmp
jbe
adc
movsb
mov
mov
or
cmp
pusha
xchg
in
cmp
icebp
lock
sub
aas
xor
mov
popf
lock
add
and
push
add
pop
icebp
out
out
mov
jg
mov
push
fidivrl
insl
fistpl
xor
loope
mov
mov
lods
inc
add
aas
mov
repnz
mov
ret
icebp
jg
or
sarl
aas
pop
ss
mov
imul
inc
inc
js
jae
or
jo
mov
loope
call
imul
add
inc
sbb
or
push
mov
shl
test
repz
adc
jg
enter
sbb
or
cmp
rcrl
sbb
rcl
out
mov
test
or
jbe
ja
xor
add
data16
roll
add
xor
rcll
sarl
mov
dec
hlt
inc
hlt
test
xorl
orl
aas
pop
inc
divb
push
cmpl
mov
inc
loop
aas
cmpsl
popf
out
inc
add
fnstsw
sub
mov
inc
jb,pn
push
pop
push
cmp
push
add
mov
add
subb
add
adc
or
push
adc
xchg
scas
mov
adc
iret
pop
hlt
add
nop
or
es
hlt
orb
nop
add
inc
add
icebp
add
sub
jo
es
add
and
mov
sbb
fidivrl
sbb
or
movsl
and
jnp
loope
pop
loope
adc
sahf
pop
push
sbb
adc
jnp
cmpl
xlat
pushf
outsb
add
pusha
or
or
cmpl
loopne
fs
cmp
inc
dec
xor
xchg
xor
mov
mov
mov
addr16
fcmovnbe
int
popf
cmp
jecxz
scas
fnstsw
or
insl
adc
pop
lsl
frstor
pop
popa
sub
bound
fcoml
shll
xor
jle
mov
pop
cmpl
fs
outsb
loope
fisubrl
in
and
pop
cmp
or
dec
fdivrl
das
mov
mov
ror
or
jl
mov
sarl
lock
in
or
call
rcrb
pop
push
addr16
scas
sbb
js
test
shl
insb
rcrl
daa
shl
mov
jne
pusha
out
and
out
imul
shrl
insl
push
sub
add
loopne
dec
and
fisubrl
pop
pushf
ret
fstp
ffree
rol
pop
or
roll
imul
nop
and
push
mov
pop
and
clc
ja
icebp
or
mov
popa
sbb
cmp
addb
icebp
sbbl
inc
sub
subw
and
add
add
ret
mov
xchg
sbb
pop
loop
push
je
mov
outsb
adc
iret
rol
mov
add
xor
sbb
pusha
data16
pop
repz
pop
imul
pop
add
pop
int
pop
mov
mov
push
bound
pop
pop
lds
imul
add
add
int3
loop
xorl
push
clc
or
xor
pop
pop
sbb
push
and
push
lods
out
in
mov
insb
stos
add
push
adc
lahf
add
inc
cmp
dec
inc
in
pop
add
lock
pop
les
or
pop
into
pushf
mov
mov
and
testl
loopne
push
pop
aas
out
mov
push
mov
inc
jbe
or
pop
mov
loopne
pop
xor
mov
fucomip
add
mov
loop
dec
sbb
xor
cmc
mov
pop
pop
mov
xlat
xchg
das
and
jae
add
out
mov
out
inc
outsl
push
inc
mov
clc
add
addb
cmc
outsb
pop
mov
push
in
aas
in
push
nop
nop
lock
fsts
add
loope
and
cmp
add
fsubrp
mov
adc
sbb
or
xor
sbb
add
push
pop
test
ss
sbb
in
mov
outsb
pop
sbb
sub
mov
daa
sub
add
add
jnp
pop
or
ja
inc
lock
dec
xor
and
or
jnp
xor
outsb
add
add
insl
xor
add
scas
mov
and
inc
xorb
popl
pusha
sub
and
and
out
dec
push
rcll
and
or
xchg
sbb
inc
pop
aad
push
mov
inc
fmuls
ja
push
xlat
outsl
sbb
or
pop
fwait
add
jne
decb
testb
pop
aaa
add
es
push
jbe
bound
inc
add
xlat
loopne
jae
gs
push
je
ret
sti
add
inc
cs
pop
insb
xchg
or
aaa
add
fs
pop
mov
mov
js
sub
aas
sub
dec
insl
adc
fists
repz
sub
mov
pop
lods
pop
cwtl
inc
fnstenv
rcr
cmpsl
mov
insb
pop
sub
out
lds
or
imul
das
inc
add
xor
and
fidivl
popa
sub
stos
or
ficoms
cmpsb
push
shrb
jl
and
xor
pop
insl
pusha
xorb
sub
mov
sub
pop
bound
jne
push
push
xor
mov
inc
adc
inc
sub
xlat
xchg
add
mov
add
pop
add
dec
jnp
imul
adc
sbb
ds
jno
rolb
sahf
push
push
add
pop
jo
jb
add
sbb
inc
pcmpeqw
jb
mov
pop
add
and
loop
or
dec
sahf
pop
outsl
or
scas
push
mov
out
pop
cmp
jne
jae
xor
mov
arpl
jb
and
fstp
pop
mov
jae
mov
or
push
sti
out
xchg
fildll
and
fcmovnu
in
daa
sarw
aaa
lahf
mov
arpl
add
cs
jb
sub
jle
insb
inc
jo
punpcklwd
inc
mov
fs
xchg
add
negb
insl
mov
inc
lds
mov
cmpsb
xor
jle
xchg
mov
jle
testb
in
add
shrb
ja
xlat
fstpt
ret
into
and
add
xor
cmp
bound
jae
in
sbb
ret
mov
divl
or
mov
jne
cmpsb
jns
mov
sub
add
push
das
jmp
dec
pop
test
adc
cmp
repnz
jae
adc
in
push
lds
push
scas
fs
mov
out
or
ja
pusha
jnp
push
jmp
je
ret
mov
sti
fldt
pop
fildl
adc
sbb
stos
push
mov
mov
mov
lds
scas
sub
mov
xchg
and
inc
add
or
sub
xchg
ret
jae
dec
jae
imul
fmull
popa
ret
jae
out
mov
inc
sahf
outsb
ret
ret
fnsave
dec
jle
arpl
ret
sub
loopne
sub
jg
fcomps
add
cmc
push
lods
pop
fwait
das
adc
lods
mov
sti
push
cmp
arpl
sbb
jne
sub
adc
stc
js
add
jb
jb
mov
imul
je
andl
mov
mov
mov
add
adc
mov
cmp
loop
mov
pop
scas
or
inc
mov
fcomp
rcll
ja
xchg
stos
push
jg
push
insl
inc
sub
je
jbe
and
push
mov
dec
jo
pop
hlt
mov
jg
ja
jge
ja
aas
push
outsl
and
push
mov
jae
sub
out
mov
cmpl
dec
fildll
jmp
pop
insb
push
mov
jmp
mov
gs
jae
daa
add
pop
xchg
pop
lret
inc
inc
out
mov
out
jbe
dec
mov
inc
adc
addb
ret
pop
shl
mov
inc
sti
movsb
or
xchg
pop
adcb
jmp
cltd
adcl
rolb
push
pop
pop
mov
fs
sub
popa
rcrl
xchg
jge
mov
dec
insb
xlat
or
xchg
pop
lods
and
jns,pn
push
mov
adc
addr16
stos
jo
or
ljmp
shlb
pop
inc
or
mov
cmpsl
fs
ret
dec
or
pop
pop
dec
mov
pop
pop
push
out
stos
push
inc
mov
cmp
push
aaa
push
mov
or
rorl
repz
sub
scas
fistpll
jne
inc
test
ret
cmp
add
loop
dec
or
adc
adc
je
push
and
cli
fs
addb
mov
jmp
and
movsl
test
mov
xchg
ret
dec
push
xchg
or
and
test
add
inc
mov
arpl
jae
mov
cmp
or
mov
sarb
insl
subl
push
imul
addr16
nopl
mov
pop
mov
data16
cmp
mov
insl
ja
sti
push
test
pop
bound
add
add
rcll
sbb
push
jae
mov
out
adc
imul
out
fstl
mov
xor
cmpsb
sbb
or
xor
xor
sub
fs
xchg
sbb
push
push
orb
pop
xchg
inc
mov
stos
aad
jae
jg
stos
sahf
sbb
sbb
cmp
and
out
cs
sti
jnp
aas
xchg
scas
bound
lea
loope
or
cmpsl
sub
stos
jbe
fwait
imul
or
mov
dec
jmp
scas
cmp
push
aas
pop
sbb
popa
xor
push
out
and
outsb
gs
xor
xor
ret
xor
sub
add
xchg
subl
sbb
pop
mov
shrl
push
dec
addl
jno
je
ficoml
pop
xchg
pop
jno
push
cmpsl
bound
sbb
push
add
cmp
shrb
adc
sub
xchg
and
nop
jle
inc
pop
adc
gs
pop
mov
jmp
fs
push
lret
and
sbb
inc
cld
pop
add
inc
es
imul
outsl
dec
pop
xchg
cmc
imul
jmp
inc
pop
sub
dec
inc
imul
push
mov
push
adcl
push
sbb
mov
in
ret
fildll
arpl
xor
gs
lret
sbb
add
and
mov
dec
xor
xchg
xchg
rcrb
pusha
rolb
push
mov
pop
lock
push
imul
insl
mov
fadds
sub
cmp
sub
outsl
dec
pop
dec
jae
pusha
dec
dec
jo
or
adc
jo
adc
xchg
imul
inc
xchg
outsl
lret
add
sbb
fmull
adc
add
adc
push
lock
push
popa
insl
rcrb
jle
fldl
sub
jnp
test
popw
lds
pop
xor
push
sbb
nop
lds
sbb
adc
inc
pop
insb
add
rcl
jbe
insb
fs
pop
jbe
lods
andl
xchg
add
mov
add
jns
push
xor
sahf
inc
sub
adc
in
pop
mov
mov
cmpsl
shrd
add
scas
push
jae
subb
sbb
xchg
pop
inc
dec
outsl
fs
mov
aas
cmp
fs
push
xchg
adc
xchg
pop
mov
aas
pop
das
jp
push
jne
enter
fsubrp
or
inc
push
cmp
push
mov
shlb
jb
cmp
add
or
push
clc
cmc
fs
add
inc
inc
mov
pop
aaa
enter
mov
dec
add
pop
pop
pop
xor
dec
outsb
mov
cmpsb
inc
push
dec
test
movsl
adc
sbb
xchg
inc
xchg
jae
sahf
push
hlt
outsb
sub
jo
and
xchg
lock
push
aad
push
mov
fsubrl
push
stos
aaa
add
popa
imul
stos
loop
mov
push
fwait
cmpsb
stos
push
ret
jns
push
lods
pop
lods
fidivl
sub
fwait
xor
jp
inc
fs
dec
fst
outsb
inc
fcomi
push
jb
push
pop
inc
data16
adc
ret
mov
and
jo
sbb
xor
mov
sub
pusha
aad
stos
jbe
jle,pn
jne
pushf
sub
mov
test
int
fisubrs
popa
lret
jbe
out
leave
nop
sub
js
cmc
outsb
mov
xchg
xchg
jne
data16
stc
push
loop
popa
or
cmp
xor
inc
sbb
xchg
xchg
sbb
pop
cs
add
cmp
xor
xorb
lret
push
or
cmp
sbb
adc
inc
je
jmp
pop
jnp
lahf
add
inc
adc
push
mov
jo
pop
inc
pop
xchg
push
inc
mov
xlat
mov
dec
gs
inc
jae
push
test
fmuls
outsb
out
and
dec
push
and
lods
std
dec
fsubrl
mov
lret
pop
dec
aaa
lods
cmp
xor
das
je
shll
test
add
xchg
push
cmp
fstpt
fcoms
insb
dec
jo
dec
sub
xor
sbb
lret
inc
lods
scas
inc
push
shrl
je
adc
dec
jns
lods
cltd
adc
sbb
or
orb
popl
or
add
lock
dec
xor
in
and
fimuls
aas
push
rolb
fchs
xorl
jge
pop
inc
jo
and
lock
ljmp
lea
movsl
je
xor
lds
dec
inc
or
push
and
jnp
add
push
mov
xor
cmp
fs
push
inc
adc
adc
das
and
lahf
xorl
andl
aas
or
add
add
push
in
push
mov
jae
xchg
jno
cmp
push
push
test
pushf
pusha
inc
sbb
inc
imul
mov
and
pop
cli
outsl
add
scas
pop
mov
imul
dec
outsb
out
fimull
das
out
cmp
lret
jae
and
jbe
mov
subl
outsl
test
pop
push
jno
inc
push
push
js
pop
popa
xor
imul
mov
cmp
push
or
into
jo
imul
fwait
mov
fs
pop
insb
mov
shl
jae
cmc
inc
sarl
or
outsl
cli
push
arpl
pop
sbb
mov
mov
dec
sbb
add
jb
test
fcmovbe
jbe
add
jo
inc
jae
inc
cmpsl
or
jae
push
and
and
and
dec
mov
push
and
inc
add
jo
mov
add
push
cmp
std
inc
jbe
sub
push
into
pop
xchg
push
xchg
in
xchg
in
jbe
repz
aaa
pop
add
ljmp
lock
push
jo
arpl
dec
scas
adc
pop
dec
pop
cwtl
sbb
dec
arpl
adc
je
mov
pop
push
and
pusha
test
xor
inc
push
test
idivb
jne
ja
push
or
jl
mov
cwtl
shrl
or
xchg
lods
cwtl
push
lret
xchg
sbbl
jne
xor
xchg
repz
sub
shrl
out
push
cltd
mov
sub
in
inc
jge
cmp
cmp
adc
lods
pop
pop
push
nop
or
and
sbb
mov
cmp
nop
imul
push
insl
or
outsb
jbe
cmp
movsl
inc
sub
jae
xchg
cs
roll
popa
inc
sub
push
or
inc
cmpsb
xchg
push
inc
or
adc
xchg
push
cs
inc
push
cwtl
jne
aad
add
push
sbb
cmpsb
nop
adc
cmp
or
mov
scas
jbe
add
sub
sbb
push
inc
addb
add
jmp
dec
add
add
or
cmc
mull
mov
add
mov
loop
lret
mov
pop
cmpsb
xor
add
push
out
mov
fnstcw
mov
aaa
test
inc
and
add
jo
add
lods
mov
mov
dec
clc
add
setle
mov
inc
loope
jb,pn
adc
pop
inc
popa
push
inc
testl
out
inc
cs
and
testl
dec
pop
add
mov
out
jbe
sahf
jae
arpl
ja
and
sub
add
sbb
xchg
test
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
