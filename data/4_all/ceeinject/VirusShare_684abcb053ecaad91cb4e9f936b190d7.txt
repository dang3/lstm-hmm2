call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int3
scas
faddl
jno
loope
fsubr
pusha
leave
jne
and
shrl
or
sbb
sub
cmp
int3
push
faddl
jno
popa
mov
pushf
lea
pop
loope
icebp
jl
or
sbb
sub
cmp
int3
ret
faddl
frndint
arpl
mov
mov
fs
jg
lds
test
das
lahf
add
xor
es
mov
sub
xchg
xor
mov
mov
fisubl
sbb
jno
cmpsb
adc
std
cmpsl
jno
arpl
cltd
stc
icebp
pause
or
mov
sub
push
push
inc
and
je
rolb
cmp
xchg
push
stos
dec
pop
ss
xchg
jl
insb
lods
mov
orl
fstl
popa
jge
mov
mov
lret
dec
cs
xchg
loope
pop
sbb
sub
repnz
xchg
in
xor
mov
sarl
loope
ret
int3
mov
in
stos
pusha
sbb
je
pop
adcb
fstpl
ss
xor
push
and
in
cmc
cld
imul
mov
insb
loope
test
sub
cmp
mov
mov
mov
cltd
dec
loopne
aad
leave
pop
std
inc
or
test
mov
jne
push
adc
add
lock
pop
xchg
sub
rorl
sarb
movsl
pop
mov
add
mov
shrl
or
sbb
sub
cmp
int3
push
faddl
jno
popa
mov
pushf
add
pop
shrl
or
sbb
sub
cmp
int3
push
jns
push
rcr
dec
push
mov
and
adc
test
test
lods
xchg
in
and
push
hlt
mov
test
mov
cmp
clc
dec
rcl
aas
adc
sub
push
jb
test
outsl
xchg
pop
lahf
sbb
decb
cmp
lcall
mov
testl
les
ss
lock
dec
mov
and
fsubl
xor
ss
mov
jno
pop
scas
sub
xor
shl
out
movsl
mov
and
roll
sahf
cmpsl
adcl
jp
pop
xor
mov
pop
stc
mov
mov
push
or
push
lret
jno
push
lret
jnp
loopne
or
lret
lcall
lods
jmp
mov
dec
cmpsb
mov
push
cmc
xor
mov
mov
or
or
push
push
or
cwtl
jae
loopne
sub
or
rcrb
add
call
gs
xor
pandn
sub
stos
adc
imul
cs
std
ja
insb
jmp
add
push
cld
fiadds
mov
stos
cmp
movsl
adc
insb
mov
fadd
es
fcmovnu
pop
dec
inc
aaa
push
sub
jb
lcall
adc
push
loop
sub
or
lcall
loope
dec
stc
das
rclb
lcall
pop
sub
sub
in
pop
lcall
cmp
out
mov
iret
aad
push
cmp
sbbb
mov
fisubrl
inc
dec
gs
insb
orl
or
stos
cmp
rorl
push
pop
inc
out
or
xchg
push
dec
push
inc
sub
cmp
jnp
push
scas
jb
hlt
dec
mov
push
add
mov
loope
add
sahf
cmpsl
or
ffreep
mov
sbb
mov
and
rcr
push
xchg
mov
and
inc
sbb
dec
jnp
in
and
push
push
jl
js
test
outsl
xchg
pop
test
jg
cvtdq2ps
test
sbb
lcall
mov
cmp
jb
shll
xchg
xchg
or
in
mov
lea
mov
push
push
add
cmp
incl
mov
sbb
sub
movsb
in
sbb
fwait
xchg
test
push
sbb
imul
pop
and
dec
xor
popf
insb
movsl
lcall
mov
inc
repz
cmpsl
add
cmp
test
jl
dec
dec
dec
inc
into
addr16
out
jg
mov
sti
pop
int3
xchg
mov
xchg
pop
push
lret
mov
std
gs
mov
mov
out
aam
lea
jb
push
pop
sub
sarb
pop
sbb
and
or
aad
shr
or
repz
out
jmp
inc
mov
aad
push
int
jo
pop
sbb
dec
ror
popa
pop
push
rclb
pop
xor
enter
cli
sbb
push
push
cmc
addr16
pop
gs
aas
push
jne
inc
popf
cltd
add
inc
stos
jp
out
ja
sub
push
xchg
mov
pop
xor
lret
mov
add
repnz
pop
pop
xor
jb
outsl
mov
inc
push
jb
dec
or
push
aaa
add
lret
sahf
popf
inc
imul
cmp
movsl
pop
xchg
loopne
es
add
jno
sahf
testb
sbb
xor
movsb
movsl
lret
pop
popa
repz
jecxz
aam
lcall
loopne
xor
xchg
pop
fwait
sub
fs
sahf
aad
adc
jle
cli
int
int
dec
stc
andl
cmp
mov
test
call
push
pop
inc
fsubs
adc
aad
mov
fiadds
mov
mov
push
sbb
sbb
dec
pop
jecxz
repz
mov
xchg
jne
imul
dec
jecxz
popf
lcall
pop
out
jge
pop
jne
xor
test
mov
jb
aad
lods
adc
ja
out
rcll
jge
pop
daa
lcall
out
fildl
xchg
jmp
cmpsl
lds
leave
cli
sub
rol
int3
xchg
adc
or
dec
pop
sub
int3
imul
inc
jmp
push
fimuls
scas
andw
jnp
cmp
pop
inc
or
stos
loop
repz
iret
xchg
xchg
cld
push
outsb
pop
mov
cmp
jae
sub
std
pop
stos
sbb
orl
sub
mov
arpl
cmp
mov
xor
stos
mov
out
pushf
in
inc
pop
sub
push
bound
xor
jl
jp
cld
sbb
mov
aad
lret
push
mov
push
dec
movsb
and
cmpsb
fwait
repnz
add
or
push
fmuls
xchg
stos
xchg
out
cld
mov
cmp
int3
push
jecxz
ret
pop
sbb
cltd
lea
shrb
push
inc
jecxz
sbb
dec
fwait
or
mov
fisttpll
in
stos
sarl
xlat
lahf
cmpsb
sub
ret
mov
repz
insb
stos
pop
popf
jnp
lock
clc
mov
clc
inc
in
ds
fisttpll
mov
aas
cmpb
or
sub
push
into
add
push
mov
aad
pop
into
xchg
or
cltd
bound
std
test
mov
pop
iret
mov
dec
push
loopne
adc
insl
and
pop
mov
xor
mov
push
aas
cltd
sub
cs
mov
and
pop
int3
add
push
push
cmp
lcall
shlb
out
flds
les
dec
jns
fimuls
push
repnz
shrb
rcl
inc
push
inc
mov
orb
adc
push
xor
jmp
xor
cmp
jmp
fmull
xchg
mov
mov
addb
inc
scas
and
dec
arpl
jp
fwait
adc
add
movsl
rcr
in
cltd
pop
test
cli
popa
adc
mov
jnp
jnp
and
mov
fdivs
add
stos
cmp
fcomps
xor
xor
pop
adc
shrb
test
les
std
jg
sub
pop
and
mov
mov
test
mov
jbe
ret
enter
push
testb
xchg
sbb
inc
dec
repz
dec
daa
gs
xchg
inc
dec
cli
pop
in
cli
mov
adc
push
jle
sbb
mov
push
adc
add
cmpsl
dec
or
cmp
iret
push
lret
mov
aas
mov
fs
mov
xlat
pop
add
aam
mov
pop
and
data16
pop
adc
or
fwait
icebp
pop
jmp
mov
sub
or
faddp
dec
test
mov
adc
mov
lahf
inc
pop
cmpl
in
pop
jne
into
lcall
sbb
pushf
xor
lret
jl
add
dec
add
les
arpl
adc
repz
das
and
adc
int3
jmp
xchg
imul
int
imul
mov
scas
xchg
sbb
cmpl
or
or
mov
mov
push
and
cld
pop
lea
add
or
dec
jle
jmp
lret
xor
stc
lea
js
xchg
fnstenv
insl
jmp
lret
jb
ficomps
add
jmp
jle
jae
adc
pusha
push
into
jb
out
cmpsb
fs
inc
mov
data16
mov
pop
xchg
inc
push
cld
and
loop
out
xchg
std
sbb
inc
cmp
xchg
xor
and
xor
outsb
or
and
xchg
mov
sub
xchg
xor
idivb
andl
jl
rol
mov
xor
iret
jne
adc
lret
stos
dec
subl
lret
int3
pop
inc
mov
mov
inc
dec
adc
sbb
jmp
push
fidivrs
insb
cmp
into
add
enter
ret
push
lahf
xchg
adc
jmp
pop
xor
jne
pop
dec
sbb
mov
push
and
es
addr16
xor
insl
stos
and
fsts
dec
ret
add
mov
jne
push
clc
dec
int3
sar
xchg
or
cmp
mov
push
inc
jmp
jnp
sbb
les
into
xchg
or
push
js
inc
adc
mov
int
and
mov
push
daa
das
pop
cmpsl
cmpb
lea
aam
adc
add
mov
pop
cmp
cs
sbb
cmp
lahf
fcmovb
sbb
les
mov
ds
clc
test
lods
pop
leave
xor
aad
or
aam
fs
fs
lods
jl
push
ss
and
nop
jbe
cmp
xchg
fcmovnu
mov
lcall
lods
sbb
xchg
dec
mov
aad
ret
jmp
cmp
aad
ja
ss
and
pushf
inc
lret
add
lock
push
in
xor
sar
leave
mov
int
dec
bound
outsl
test
gs
dec
nop
add
dec
adc
fcmovbe
jg
insl
sti
imul
push
iret
lret
daa
pop
xor
fstps
lret
je
add
imul
mov
inc
xor
test
outsb
pop
aam
sub
mov
outsb
jae
push
and
push
xchg
jns
adc
loope
scas
pop
mov
sar
and
or
pusha
fwait
mov
cmp
lret
push
cld
aad
jg
mov
xor
jl
sbb
movsb
lea
sbb
out
add
lds
int
sarb
mov
jno
sub
mov
gs
inc
push
ds
mov
or
mov
mov
xor
sbb
ja
jbe
or
inc
pop
or
movsl
cli
push
loop
cmp
scas
or
sub
mov
gs
mov
in
pop
gs
mov
repnz
push
mov
jle
incl
popl
imul
sub
cmp
push
out
jns
sbb
or
mov
sub
inc
pusha
decl
adcl
xchg
adc
out
mov
fst
je
aas
pop
fs
pop
sub
xor
leave
xchg
test
out
insl
xchg
push
in
aam
xchg
mov
mov
adc
or
jp
push
jle
sbb
jle
push
aaa
mov
pop
adc
sub
mov
mov
fcmovb
dec
lret
loop
test
mov
jns
xor
movsl
insb
pop
ljmp
mov
sahf
in
call
xor
out
sbb
bound
clc
pusha
das
inc
mov
push
and
std
jl
jne
xor
mov
dec
shlb
repz
shll
add
mov
add
and
sahf
out
adc
inc
fldl
jp
repnz
aad
xchg
push
and
mov
imul
xor
pusha
xchg
xchg
mov
scas
test
testl
and
mov
repnz
sub
dec
pop
leave
pop
push
inc
cld
fcmovnb
jge
push
ret
inc
pop
mov
or
dec
mov
int
repz
mov
mov
and
push
push
scas
sbb
xchg
int3
fisttpl
sub
cmp
mov
mov
adc
scas
shrb
sub
dec
xor
add
mov
inc
lods
andb
or
and
loopne
fucomi
sub
lret
cmp
shrl
lods
pop
dec
or
ror
or
iret
popa
mov
inc
inc
cs
enter
lret
pop
imul
nop
xchg
xchg
vdivps
testl
mov
jno
jo
xchg
sub
mov
inc
and
push
loope
fnstsw
pop
mov
mov
mov
sarb
stos
in
add
sbb
push
adcl
dec
popa
pop
push
jle
loop
rorl
into
fisubrs
cmp
je
stc
stos
roll
in
sub
subb
push
dec
insb
mov
stos
adc
or
xor
repz
pop
cmp
dec
adc
jnp
or
mov
cmp
popl
lea
ljmp
push
divl
push
adc
sub
btc
xchg
les
push
mov
sbb
or
rorb
pop
mov
outsb
xor
sbb
and
mov
cs
jno
and
xchg
test
icebp
test
xchg
mov
pusha
pop
gs
test
aaa
sub
push
in
test
jp
xchg
or
mov
add
xchg
jmp
in
sbbb
and
lds
bound
sbbl
jle
fsubrl
rcll
fs
mov
dec
adcb
inc
test
aaa
nop
ror
js
incl
rcl
stos
lret
xchg
xchg
jns
rcl
out
out
push
xchg
ret
bound
adc
add
scas
add
dec
lret
leave
dec
sbb
inc
sub
movl
mov
pop
xchg
aad
and
xchg
fstps
filds
inc
into
lahf
cmpsl
push
xor
pop
imul
jns
fcompl
jmp
popf
mov
test
xchg
or
inc
sarl
xlat
xlat
and
pushf
jmp
push
xor
inc
cmp
pushf
aaa
movsb
ja
nop
xor
add
mov
in
movsb
sarl
fs
nop
arpl
jns
sub
in
sbb
insb
push
ret
lcall
mov
dec
sub
cltd
mov
faddl
stos
mov
or
ljmp
sbb
insb
pop
jns
outsb
daa
cmpsl
mov
push
ret
outsl
and
insl
pusha
lods
aam
mov
push
adc
lock
arpl
popf
test
and
dec
cs
xchg
jb
and
sbb
push
jae
ficoms
xor
push
divb
inc
movsl
mov
xlat
enter
mov
inc
jae
ja
and
fsub
hlt
sub
cmp
jnp
pop
jbe
hlt
imul
and
fcomip
xlat
jge
mov
jns
mov
gs
jp
inc
sbb
loopne
ja
jb
iret
cli
pop
dec
xor
dec
fisubl
popa
adc
adc
mov
dec
or
fwait
xlat
pop
dec
hlt
add
divl
es
inc
xchg
and
lret
fisttps
pop
pop
dec
add
cmpsb
pop
out
arpl
pop
ret
ret
incl
mov
das
test
imul
sbb
cltd
js
std
lds
push
cwtl
in
dec
aad
jne
mov
add
xchg
js
mov
dec
das
imul
mov
push
and
sbb
push
in
popa
std
loop
jne
adc
sbb
dec
leave
mov
mov
push
ljmp
rorl
pop
lods
frstpm(287
mov
or
in
aam
mov
clc
mov
xchg
fcompl
pop
push
mov
imul
rcrl
fiaddl
sahf
bound
ret
in
dec
out
push
divl
xor
pop
add
data16
cmp
insb
xchg
sub
pop
pop
mov
mov
sbb
xchg
sbb
sbb
pop
add
mov
fistl
xorb
sahf
shr
jge
jo
dec
pusha
test
insl
xor
or
mov
inc
mov
dec
xchg
stos
outsl
fistpll
pop
das
pop
nop
lods
push
jbe
sub
out
xchg
in
aam
adc
pop
xlat
xor
cwtl
inc
movsl
aad
xor
push
mov
jo
out
ficoml
mov
or
jb
int
mov
mov
enter
lcall
jns
inc
daa
loopne
xchg
cmp
addr16
jae
imul
je
fsub
out
fadds
outsl
test
psubb
fists
lds
test
into
adc
mov
gs
add
jecxz
stos
push
adc
jne
lea
lock
dec
loope
or
sbb
lods
sub
sbb
push
mov
jne
or
push
clc
cltd
push
push
xor
cld
mov
push
int
ds
rcrb
fdiv
or
and
movsl
ds
mov
mov
int3
push
imull
aas
or
jle
cmp
jae
jbe
stos
shll
add
ror
adc
pop
cli
and
pushw
jle
adc
or
cs
lods
and
ljmp
xchg
ss
arpl
shl
mov
pop
iret
popf
push
mov
cmpsl
sub
data16
pushf
push
out
mov
aas
inc
into
pop
mov
rclb
mov
pusha
and
arpl
cmp
push
pusha
cmpsl
negl
xchg
xchg
psubusw
inc
fists
inc
in
int
sbb
pop
aas
dec
mov
sbb
mov
xchg
sub
push
scas
mov
dec
cmpsb
and
mov
inc
test
bound
inc
aad
mov
cmpsl
inc
loop
fwait
ds
cmc
xchg
jne
ja
jbe
int
ds
iret
iret
pop
dec
pop
out
push
stos
test
jns
gs
xlat
cli
leave
popa
cmp
shlb
xor
mov
mov
ret
cmpsb
mov
push
insb
jmp
inc
lds
sarb
out
stos
out
lods
mov
js
fsubrl
sbb
movsl
or
sbb
std
lea
in
imulb
in
adc
inc
mov
jno
inc
fcomps
sub
sbb
adc
xor
push
push
stc
adc
jge
rcll
push
mov
push
xor
mov
push
mov
sub
or
xchg
push
int3
hlt
or
mov
fs
and
cmpsl
stos
sbb
mov
mov
inc
xlat
jg
out
xor
fldt
mov
cmp
ds
test
xchg
xchg
mov
add
add
gs
and
xor
movsb
mov
out
loope
stos
xchg
movsl
faddl
test
out
cmp
xchg
inc
or
loopne
call
dec
cmpsb
cmp
inc
push
cmp
int
add
push
jp
aas
enter
loopne
pop
dec
cmpsb
in
das
ljmp
adc
cld
out
mov
jno
adc
cmp
imul
notl
add
xor
jnp
dec
fwait
movsl
mov
adc
das
xchg
xor
loop,pn
push
pop
xchg
inc
mov
push
loop
aas
dec
jb
mov
fdivrl
sub
call
sbb
sub
in
adc
cmpsb
ret
lret
sti
cmp
icebp
pop
lret
push
xchg
addr16
cwtl
add
mov
sub
jae
xor
pop
sub
pop
xor
mov
xor
add
push
std
daa
cltd
test
addl
stos
shlb
push
cli
cmp
jne
dec
inc
mov
mov
dec
pop
fdivl
sbb
enter
stos
inc
sub
fs
mov
dec
rolb
mov
shrl
ret
xchg
sbb
or
add
sti
xchg
aaa
lret
xchg
ret
and
pop
aaa
cmp
lock
pop
leave
jl
ret
mov
leave
or
pop
jmp
sti
cmp
jns
and
push
add
or
insl
outsl
insl
inc
pop
scas
pop
sbb
cmp
outsb
sbb
scas
dec
sbb
out
pushf
insb
add
ss
add
aad
das
mov
les
mov
adc
iret
stc
cs
xorl
cmp
mov
xorb
xor
ret
adc
mov
shrb
sbb
mov
mov
sbb
mov
pop
mov
inc
pushf
out
aas
mov
fwait
inc
daa
dec
rcrb
sbb
icebp
out
popa
scas
mov
imul
ss
push
out
ds
adc
ss
and
ss
mov
fidivrs
push
xor
push
xorb
sbb
push
mov
mov
sbb
add
sub
mov
mov
jg
sbb
sahf
sub
mov
mov
js
inc
push
mov
lds
lea
scas
cmp
mov
lods
or
jl
aaa
cmp
popa
cltd
and
sbb
inc
shl
pushf
pop
repnz
fs
mov
dec
jmp
sub
aaa
rclb
push
jnp
ljmp
xchg
mov
addr16
push
add
sarb
mov
in
xchg
clc
mov
rclb
push
pushf
mov
popf
sub
aad
shll
stos
out
je
cltd
pop
les
dec
sbb
jbe
mov
push
sbb
in
push
cmp
and
lret
pop
inc
lods
sbb
hlt
cmpsl
push
and
popa
jmp
push
xchg
jb
in
stos
sbb
pushf
add
pop
shrl
or
sbb
sub
cmp
int3
push
faddl
jno
popa
mov
pushf
add
pop
shrl
or
sbb
sub
cmp
int3
push
fmull
in
or
popa
mov
pushf
test
dec
or
icebp
jl
or
sbb
sub
cmp
int3
push
faddl
jno
pusha
mov
pushf
add
pop
imul
jl
jnp
xchg
jle
dec
ret
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
jle
outsb
rcrl
dec
mov
mov
jb
arpl
push
fiadds
xor
add
rcrl
dec
mov
mov
jbe
popa
out
push
fiadds
xor
and
icebp
jle
outsb
rcrl
dec
mov
mov
push
jno
inc
int
lods
and
xor
push
stc
push
lock
daa
shll
test
mov
xchg
or
pop
pop
inc
mov
sti
stos
mov
sbb
add
mov
mov
add
mov
adc
mov
push
fisttps
jle
arpl
ss
pop
in
ficomps
test
arpl
les
xchg
sbb
ss
cmp
dec
adc
sbb
popf
pop
das
enter
addl
mov
push
jmp
or
push
cmp
dec
mov
cmpsl
insl
je
jo,pn
imul
out
sahf
add
sti
sbb
jmp
ds
lcall
dec
ss
and
mov
mov
add
rcrl
dec
mov
mov
push
jno
popa
out
push
fiadds
xor
add
xchg
jp
das
xchg
pop
xchg
pop
into
inc
pop
add
out
and
pusha
lret
je
jno
xchg
xchg
or
push
ljmp
mov
xchg
sub
inc
stos
rolb
enter
cmp
es
sub
sub
adc
push
jno
popa
out
push
fiadds
xor
add
rcrl
dec
mov
mov
push
jno
popa
out
push
fiadds
xor
add
dec
mov
mov
push
rol
push
dec
ret
jne
sahf
sub
sbb
sub
and
rorb
pop
mov
fsubl
mov
aas
push
adc
cli
mov
rcll
jno
adc
xchg
pop
scas
out
push
pop
je
cwtl
push
in
jmp
or
pop
fwait
sbb
pop
rclb
xchg
add
arpl
in
dec
adc
lock
and
es
jnp
cwtl
jnp
mov
mov
mov
sbb
pop
and
stos
les
inc
lods
insl
adc
jg
bound
or
rclb
inc
lea
jbe
imul
add
test
lahf
movsb
pop
cmp
pop
push
jb
ret
sbb
push
mov
cltd
mov
xchg
xor
hlt
cwtl
cld
outsb
popa
cmc
imul
sti
movsl
daa
daa
or
fnstcw
pop
sub
cmpsb
adc
daa
mov
insb
hlt
cwtl
add
enter
and
inc
lea
lahf
push
mov
xor
loope
pop
inc
and
or
adc
call
fiaddl
fsubl
sub
pop
dec
cmpsl
lds
add
jnp
cltd
and
subl
mov
leave
js
jg
mov
loopne
cli
stos
pop
dec
pop
loopne
shr
out
sub
xchg
pop
pop
xor
add
jg
bound
testb
fs
or
cld
xchg
call
fs
ret
test
jmp
pop
into
scas
jg
mov
and
fwait
mov
jo
sub
jae
je
mov
cmp
sbb
arpl
jno
sbb
mov
adc
cmp
mov
ficoms
xchg
xor
scas
test
cltd
out
cmp
sarb
push
xor
gs
xchg
dec
sbbb
and
mov
call
mov
lds
adc
aaa
mov
add
push
or
std
xchg
inc
inc
test
push
push
push
mov
and
mov
cwtl
ds
add
pusha
leave
mov
in
orl
or
mov
mov
inc
jns
incl
dec
push
add
mov
xor
push
fs
or
sub
push
and
jp
ljmp
and
ss
push
pop
jmp
sub
test
lret
push
int
test
jmp
inc
int
into
and
adc
test
fdivr
sbb
push
out
outsb
inc
pop
cli
pusha
rcl
ret
cltd
xchg
scas
sbb
ss
jnp
in
fnstcw
and
sub
mov
jne
jg
pop
leave
inc
jo,pt
outsb
aam
stc
dec
push
popf
mov
into
or
push
sbb
je
fnstsw
orb
mov
and
add
sub
ret
in
jmp
inc
subb
sar
outsb
adc
mov
in
fidivl
mov
add
inc
dec
in
roll
push
movsbl
sub
pusha
inc
imul
adc
xlat
jb
stos
ljmp
stos
pop
fs
out
or
jl
mov
rcr
dec
test
notb
mov
xchg
mov
and
pop
jle
mov
mov
rorl
inc
dec
fsub
outsl
testb
jg
dec
xor
mov
cmp
jg
fcompl
jb
cli
scas
ljmp
pop
jle
js
test
mov
adc
lock
pop
jno
int
cmp
aaa
mov
mov
std
lcall
adc
rclb
xchg
cs
lret
sbb
jnp
add
lods
push
std
cmp
mul
xchg
push
inc
adc
sbb
dec
pusha
bound
test
xchg
sub
cwtl
mov
repnz
push
dec
or
lcall
lcall
fidivrs
es
out
or
sub
inc
push
out
xor
cmpsl
bound
push
test
jnp
call
dec
lea
add
insb
in
dec
mov
lods
and
test
stos
mov
ljmp
sub
adc
sbb
cmp
rcrb
int3
xor
int3
inc
addb
rcll
je
inc
add
gs
cmp
adc
mov
sbb
or
fsts
repz
ja
xorl
sub
mov
dec
inc
cmp
aad
divb
xor
repnz
push
sub
add
jo
imul
fwait
les
daa
mov
xchg
iret
cmp
jmp
mov
jae
arpl
cmpsl
jo
cld
pop
mov
outsl
loopne
test
ret
dec
fsubs
ror
cmp
xchg
lock
cmp
lret
test
pop
repz
xor
push
push
std
cmp
addss
inc
adc
xor
frstor
cltd
scas
nop
jbe
xchg
lcall
pop
loop
popf
push
mov
inc
jecxz
je
sahf
add
das
mov
test
leave
mov
adc
mov
dec
scas
or
fnstsw
xor
mov
outsl
sub
lret
dec
mov
jp
test
xchg
or
ret
cmpsb
leave
jo
ret
or
popl
push
cs
sbb
fcomps
test
jnp
lods
sti
adc
stos
and
mov
inc
adc
into
pop
push
pop
sub
in
dec
dec
or
dec
popf
shlb
add
inc
bswap
les
insb
and
popa
jge
mov
mov
pop
popa
imul
int3
pop
jg
loopne
jecxz
es
adc
mov
fcomps
jbe
mov
sbbb
inc
lods
xor
inc
jmp
sbb
pop
xchg
push
cmp
jge
jmp
xlat
fst
cmp
ljmp
aad
sub
jmp
sub
fwait
add
jno
in
rol
lds
shr
pusha
push
cmp
and
or
movsl
in
mov
aaa
sbb
loop
cwtl
xchg
ja
adc
movsl
idivb
cmp
call
call
pop
inc
jp
sar
pop
adc
movsb
cmp
pop
lock
je
imulb
jmp
jns
pusha
sbb
sbb
sbb
orl
fstpt
dec
inc
push
shl
jge
inc
nop
mov
adc
imul
or
pop
sub
faddl
push
dec
gs
lock
bound
cmp
in
out
movsb
cmpsl
pop
mov
repnz
cltd
jle
loop
mov
add
loop
cmova
and
jge
fdiv
mov
incb
pop
repz
dec
push
addb
pop
lcall
cmp
cmpsb
mov
adcb
fs
jo
imul
data16
ljmp
mov
pusha
inc
imul
mov
push
gs
hlt
shlb
ret
mov
xchg
xchg
mov
lods
lds
cmp
loope
mov
idivb
push
mov
je
adcb
xchg
leave
std
mov
jno
push
stc
sub
sbb
andl
aam
and
jae
movsl
pmaddwd
icebp
jp
mov
dec
mov
aaa
sbb
jns
cmpl
lods
dec
test
push
jne
inc
dec
out
sarl
stos
mov
out
aad
push
inc
lahf
mov
jge
jno
cmp
adc
jns
sub
mov
and
jg
ret
mov
arpl
xlat
bound
outsb
iret
nop
leave
mov
ja
shlb
fwait
das
mov
mov
xchg
std
mov
out
insl
or
mov
jmp
sbb
inc
clc
leave
ret
jp
mov
jne
cmp
insb
hlt
push
dec
pop
stc
std
dec
mov
xchg
dec
sarb
rorl
fcom
lock
xchg
data16
mov
pop
pop
and
push
dec
dec
pop
fcompl
leave
jle
dec
mov
add
jl
add
shr
xchg
arpl
jbe
rcrb
js
xor
mov
cmp
jae
pop
ret
sbbl
xchg
adc
shrb
cltd
outsl
sahf
push
cld
push
aaa
or
mov
scas
incb
dec
call
scas
adc
xchg
das
jmp
sub
push
pusha
sub
mov
mov
jg
cltd
inc
mov
cmp
test
mov
sbb
ret
mov
add
inc
movsb
push
rcrb
mov
xorb
xlat
mov
test
cld
lock
sub
aaa
lret
cmpsl
inc
cld
pusha
movsl
and
jns
movsb
out
imul
adc
into
sti
xchg
test
inc
jb
or
cmpl
sbb
and
add
gs
mov
adc
mov
pop
outsl
lods
test
pop
mov
nop
daa
mov
sub
mov
cmp
shll
push
pop
or
jb
mov
aam
stos
sarl
hlt
cmpsl
xor
pop
out
call
enter
push
cld
lods
jecxz
in
pop
cli
push
push
imul
mov
mov
cli
adc
sbb
add
sti
movsb
sub
loop
stos
stos
subl
arpl
pop
stos
adc
imul
jl
and
xor
mov
jnp
xor
cmp
mov
lret
test
dec
outsb
dec
push
sbb
popa
hlt
push
and
and
inc
mov
push
cltd
fldl
jae
sub
pop
push
pop
mov
cltd
iret
xor
insb
and
pop
pushf
sarl
outsb
mov
xchg
or
inc
adc
lock
dec
cmpl
push
mov
out
mov
inc
out
scas
into
dec
inc
scas
xorl
nop
stc
mov
lods
out
jecxz
sbb
sub
adc
rorb
mov
ds
sahf
dec
lahf
add
xchg
and
mov
scas
orb
popl
fs
inc
dec
stc
imul
push
pop
xchg
dec
cmp
daa
jae
push
test
insb
push
sub
cli
aas
jae
das
cmp
ret
mov
fidivl
xchg
ret
pop
xchg
push
ja
push
xchg
into
jns
jne
add
popa
push
adc
cli
movb
jge
nop
cmc
dec
cli
sti
aaa
mov
adc
xlat
push
dec
lock
jge
and
into
je,pt
jo
xor
pop
mov
or
mov
sbb
std
sbb
pusha
mov
pop
jno
fiaddl
std
xor
add
pusha
pop
or
mov
xchg
ja
cmc
sbb
pop
pop
xchg
fwait
out
dec
hlt
push
dec
cmp
xlat
fcmovnu
outsb
out
jecxz
and
stc
inc
sub
test
mov
sbb
es
add
rclb
add
out
lock
inc
mov
js
lods
and
sbb
sub
xchg
and
cmp
cmpl
stos
inc
sahf
outsl
or
scas
popf
addr16
sub
fsub
aaa
int
movsb
ss
ret
lods
and
ljmp
mov
rcrl
and
nop
imul
in
sbb
xchg
xchg
stos
push
sub
es
rol
enter
xacquire
push
rorb
add
jle
arpl
pop
sbb
test
mov
xchg
out
and
movsb
xchg
ja
dec
xchg
push
andb
bound
push
cmp
in
xchg
xor
xor
movsl
inc
or
repz
dec
test
sub
rcrl
dec
mov
fwait
xchg
imul
mov
hlt
push
and
mov
aam
push
push
pushf
xor
sbb
lret
mov
imul
or
adc
ret
scas
movsl
push
mov
mov
pop
call
insb
movsb
sub
insb
pop
adc
push
push
orl
cmp
inc
xchg
xchg
sbb
jnp
in
fisubl
push
lret
mov
xchg
dec
inc
inc
lea
mulb
jmp
lret
mov
imul
jae
int3
mov
sbb
insl
xchg
dec
mov
xor
inc
data16
sbb
or
dec
pop
dec
stc
imul
adc
or
mov
and
push
loope
movsl
and
sbb
pop
pop
and
push
xchg
out
fwait
push
call
cmp
or
jmp
repz
test
sti
xor
or
jle
insl
rcrb
xchg
in
mov
jno
push
ja
shll
jbe
add
ficoml
sbb
mov
hlt
shlb
mov
mov
ja
adc
stc
fisttps
cmc
loopne
scas
adc
xchg
in
outsl
mov
fxch
dec
les
pop
int
cwtl
xor
cmp
sub
shll
out
dec
dec
fimull
push
cmp
mov
icebp
mov
adc
adcb
add
aaa
jl
adc
mov
mov
push
xchg
push
xlat
push
jmp
cmp
adc
push
out
arpl
mov
jge
fiadds
movsl
xchg
das
sarb
dec
insb
pop
lea
xor
push
inc
add
shlb
pop
dec
mov
orl
cltd
push
in
mov
mov
sub
lret
mov
adc
pop
mov
rorb
jecxz
xor
lods
das
notb
int3
sub
add
add
mov
mov
inc
and
sbb
jmp
mov
roll
adc
out
shlb
xchg
pusha
and
insb
push
scas
shrb
ret
cmpl
test
stc
pop
add
dec
lock
or
mov
lock
inc
testl
iret
inc
jb
pop
jae
push
rcrl
lds
xchg
lock
sub
sar
mov
cmpsl
andl
test
or
push
pop
and
add
jl
jle
out
ja
dec
hlt
jecxz
test
cmp
ljmp
idivb
mov
cmp
ljmp
xchg
dec
inc
out
insl
jge
mov
aad
je
xchg
aam
pushf
repz
inc
add
jp
lea
cmpsb
pop
pop
push
pop
jle
push
ret
push
cmc
scas
xchg
ljmp
scas
data16
mov
sbb
jnp
ret
or
dec
outsb
pushf
jp
in
add
mov
lret
push
push
addb
shll
xchg
inc
push
js
add
and
or
cmpsl
test
jns
jl
xchg
sbb
and
mov
in
icebp
sahf
lds
inc
test
mov
nop
pop
gs
mov
add
xchg
fsubs
lock
int3
dec
push
inc
add
adc
cmp
mov
jg
or
dec
outsb
and
cmp
cmp
and
lods
jle
or
push
cmp
sub
xchg
cmpsb
push
push
fimull
popa
or
add
cmp
pop
cmpsb
out
adc
in
sti
mov
rcrb
imul
repz
sbb
xchg
mov
addr16
sub
adc
mull
dec
jp
adc
cmp
daa
push
and
xchg
cmp
jle
lcall
jl
mov
in
imul
into
aad
mov
dec
repz
mov
scas
sti
pop
mov
push
int
push
sbb
xlat
fsubs
pop
rcr
mov
mov
mov
daa
loop
clc
dec
out
out
sub
fwait
xchg
js
xchg
cli
push
test
dec
cmp
push
std
je
popf
stos
push
and
imul
add
fldt
or
pop
sub
lcall
jmp
stc
stos
adc
lcall
jnp
or
shr
notl
movsb
pop
fisttpll
insb
imul
mov
insl
xchg
pop
insl
cwtl
arpl
loopne
sbb
inc
inc
lcall
add
dec
xchg
in
xor
jbe
fldt
mov
into
xchg
adc
adc
add
push
cs
lret
mov
jl
aas
in
xor
jmp
push
leave
mov
jo
sbb
imulb
mov
shll
sbb
dec
xor
enter
je
clc
popf
dec
test
add
cld
dec
adc
lods
inc
pop
popa
lods
or
sbb
jg
cwtl
sub
push
cmpl
rcl
insb
push
les
dec
repz
outsb
mov
inc
or
or
lds
cltd
adc
cmpsb
pop
jbe
addr16
js
xor
ret
fstpt
xor
daa
cmp
push
inc
fdivp
mov
mov
stc
dec
jo
push
testl
stc
adc
push
xor
out
inc
aaa
jl
shlb
aad
sbb
cmp
mov
cmp
cmc
fwait
cmc
popf
bound
fisttpll
sbb
bound
arpl
jae
out
iret
jge
pop
push
mov
push
sub
jge
int
les
xor
push
jp
xor
pushf
out
out
jnp
jnp
in
cmp
stos
adc
test
in
roll
mov
inc
test
outsl
scas
jo
inc
cmpsb
sub
lock
pop
rcrb
jle
adc
ret
cld
add
push
iret
sbb
cmpsl
jb
mov
mov
inc
mov
mov
and
xchg
fidivrl
xor
add
xchg
and
inc
jg
sti
xchg
test
in
cs
mov
popa
into
pop
test
clc
xor
sbb
cmp
adc
inc
sub
lret
push
imul
jecxz
xor
lea
xchg
jnp
ret
cmc
mov
xchg
shll
in
cwtl
aaa
and
cld
mov
clc
mov
mov
mov
dec
pop
or
cmp
mov
jge
sbb
bound
jo
jl
iret
mov
add
xchg
aam
pushf
fistpll
and
outsl
lods
pop
lahf
int
aad
sub
xchg
pop
in
xor
cmp
jle
and
and
inc
mov
lcall
sbb
lret
push
aad
insl
mov
cmp
pop
lods
addl
push
rcr
cmp
lret
jecxz
push
cmp
add
rcrl
rcl
hlt
mov
inc
outsl
mov
add
sbb
mov
lds
adc
out
js
loope
ret
jmp
repnz
cwtl
xor
xchg
pop
mov
sarl
mov
and
pop
dec
sbb
xor
xor
mov
mov
or
movsb
dec
rolb
dec
out
iret
add
push
cmovb
iret
pop
adc
push
dec
ds
ffreep
out
or
mov
mov
mov
xchg
mov
pop
and
loopne
mov
cli
es
int
cmp
pushf
call
cmp
sub
fs
stc
or
sbb
mov
adcb
cmc
test
ret
popf
xchg
rcl
or
pop
sbb
ficoms
pusha
lcall
sahf
mov
push
pop
dec
cmp
pop
mov
pop
dec
dec
mov
sarl
add
ret
ret
jb
jl
stc
movsl
pusha
jb
das
test
mov
clc
test
adc
or
or
scas
gs
pop
pop
cmp
pushf
mov
sub
call
ljmp
adc
test
stos
add
mov
mov
subb
xchg
jno
push
repz
lods
enter
scas
xlat
out
inc
adc
cld
add
lods
daa
es
sbb
lcall
push
inc
aad
addr16
shlb
adc
sahf
or
out
mov
mov
jl
cs
push
inc
adc
xchg
aaa
jl
pop
push
add
cwtl
loopne
stos
pop
and
jnp
outsl
mov
cmp
mov
clc
testb
mov
sbb
cmp
jns
arpl
call
ja
cmp
test
in
arpl
in
jnp
outsl
cmp
push
mov
jp,pn
and
sbb
cld
pop
ret
lods
rcrl
popf
xchg
mov
push
xor
mov
mov
lea
inc
lcall
arpl
insb
inc
out
out
push
arpl
pop
dec
xchg
sbb
sub
cmp
shrb
sbb
cwtl
ss
fsqrt
test
xchg
enter
and
and
lea
rcrl
les
int3
in
in
mov
sahf
dec
add
lcall
xor
mov
cli
pop
fidivl
jno
out
out
mov
jle
movsb
dec
loop
lock
pushf
inc
out
imul
jbe
out
dec
insb
mov
sarb
bound
push
xor
cltd
mov
imul
dec
adc
push
and
xor
push
into
rcrb
ds
push
mov
lock
xchg
adc
or
and
cli
mov
mov
push
add
std
int3
adc
and
push
adc
call
aad
push
cmp
dec
movl
xchg
jp
jns
cmp
and
mov
dec
lret
jne
out
add
rolb
std
mov
push
and
out
sub
xor
fsubp
jb
add
out
daa
or
out
pop
rorl
mov
push
jno
popa
out
push
fiadds
xor
add
rcrl
dec
mov
mov
push
jno
popa
out
push
fiadds
xor
add
rcrl
dec
mov
mov
push
jo
popa
out
push
fiadds
xor
add
rcrl
dec
mov
mov
push
mov
sahf
inc
sti
fiadds
inc
ss
jno
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
int
std
into
in
fiadds
loopne
sahf
sbb
dec
je
dec
dec
pop
sbb
push
sub
dec
into
in
ficomps
mov
jle
dec
scas
pop
sbb
push
sub
in
cmc
fiadds
mov
pop
adc
sbb
xor
bound
inc
imul
adc
push
mov
mov
mov
adcl
fucomp
inc
out
std
movsb
std
push
pop
mov
fs
jle
addl
mov
dec
push
dec
ds
das
sbb
jecxz
jo
push
mov
pop
outsb
mov
sub
rorl
xchg
sub
or
mov
xchg
cmpl
pop
fidivrs
les
cmp
xor
push
lods
fistpll
imul
pop
mov
or
mov
aad
cmp
jo
and
push
xor
mov
cmp
aas
sbb
loope
out
int
std
into
cli
fimuls
mov
gs
je
add
push
xor
scas
out
test
cwtl
jmp
shr
push
dec
nopl
jno,pn
imul
or
cwtl
xchg
mov
rcr
call
or
sub
or
dec
jle
dec
imul
cwtl
stos
in
cmpsb
in
lea
pop
outsb
dec
jle
dec
insl
pop
sbb
push
sub
std
into
in
ficomps
mov
jle
dec
insl
pop
sbb
push
sub
movsb
mov
mov
jp
jle
pusha
cmpl
mov
mov
adcl
js
or
or
imul
xchg
push
test
push
ss
add
pop
or
aad
pop
outsb
fcmove
fstps
lahf
jae
sbb
ffreep
push
dec
pop
xor
mov
fiaddl
ja
sarl
das
dec
or
and
mov
roll
imul
ds
pop
int
repnz
jp
in
mov
mov
jmp
fwait
mov
sub
inc
push
loope
mov
mov
mov
push
jo
sbb
pop
hlt
cld
fists
scas
testb
in
and
frstor
jo
mov
std
push
mov
lret
xor
and
sub
mov
movsb
sbb
loop
pop
out
popf
sub
push
rclb
sub
add
adc
sub
call
daa
cmpsl
repnz
pop
fdivrl
mov
outsb
lock
std
cmp
push
push
lcall
sbb
mov
les
xlat
ja
dec
dec
popf
mov
and
xor
cwtl
mov
sti
pushf
decb
mov
insb
daa
lcall
sahf
adc
rclb
xchg
push
sti
mov
mov
xor
ror
inc
roll
push
inc
mov
push
push
mov
adc
mov
rorl
test
aad
pop
cwtl
popa
inc
fmulp
bound
sbb
jle
adcl
jbe
scas
in
fwait
cmp
xchg
stc
fmull
jb
inc
test
mov
adc
scas
pop
pushf
and
pop
sti
pop
or
ja
clc
mov
dec
jae
cmp
mov
in
adc
addb
cmc
add
mov
fnstcw
lahf
xchg
lea
push
jns
mov
cld
incb
sub
outsb
mov
dec
sub
gs
clc
cmp
dec
cmp
add
adc
mov
in
scas
ljmp
arpl
sbb
insb
repz
lret
adc
cmp
sbb
lea
xlat
push
in
out
into
ja
fs
adc
insb
sub
jns
dec
insl
insb
insl
sbb
xchg
js
xor
add
ficoms
mov
insl
not
xchg
pop
out
dec
aas
push
xor
out
jno
jecxz
dec
sti
dec
adc
out
loop
test
cmc
dec
xchg
push
cmp
sub
or
ja
or
xchg
sbb
pushf
repz
adc
test
negl
les
jmp
mov
add
les
mov
mov
lods
loop
int
inc
fwait
cmp
and
subb
mov
imull
sub
cmp
int3
mov
cmpb
hlt
inc
cmp
or
cwtl
imul
cmp
and
cmp
and
sbb
jle
mov
mov
filds
or
popa
cmp
jbe
incb
mov
mov
adc
sbbl
push
mov
popa
jmp
dec
adc
jo
adc
push
mov
lret
push
idivl
xor
add
cld
cmpl
dec
mov
add
inc
dec
push
and
and
addr16
andb
cli
fcomps
jne
ss
mov
std
cmp
icebp
inc
xchg
mov
push
jne
bound
add
sub
stc
jmp
mov
out
in
imul
xchg
rcll
sub
xchg
test
push
jg
jne
fdivrl
test
mov
push
call
pop
push
add
shlb
or
inc
call
mov
push
jg
sub
int3
cs
shrb
pop
cmp
sub
mov
xlat
pop
cmp
or
ret
pop
jl
pop
xchg
push
lret
dec
sbb
ss
ds
dec
bound
dec
repz
sbb
pop
mov
lods
stos
mov
aam
fistpll
hlt
xorb
sbb
mov
in
and
jne
scas
cltd
xor
pushf
xchg
test
fldl
jg
inc
shlb
loope
loop
push
loope
loopne
enter
fistps
mov
pushf
and
push
adc
mov
mov
mov
bound
popa
loope
push
lcall
push
into
mov
sbbl
les
lret
xor
pop
jmp
mov
adc
lcall
sub
outsl
mov
pushf
ficomps
cmova
int3
mov
ror
mov
dec
xchg
xor
call
ljmp
adc
int
ret
cmp
gs
mov
cvtps2pi
xchg
inc
insl
test
insb
lret
popa
cmpsl
or
dec
cmp
mov
je
cmp
dec
repnz
aam
stc
jo
xchg
mov
mov
xlat
fs
mov
rorb
leave
push
jns
ljmp
loopne
dec
jo
pop
mov
fstpt
adc
mov
cs
lret
leave
inc
mov
movsb
sub
cmpsl
add
and
push
mov
jg
pop
daa
inc
movsl
andb
cs
add
jno
cli
mov
or
add
imul
cwtl
rcr
lret
adc
inc
lret
push
lcall
fistpll
lret
scas
stos
jl
pop
icebp
inc
sub
pop
out
sub
jne
cmpb
push
ljmp
sub
xchg
cld
adc
pop
pop
cwtl
sbb
xchg
pop
inc
adc
and
pop
jne
psubq
or
cs
fcoml
push
push
sahf
stos
mov
adc
sbb
and
daa
pop
inc
orl
movsb
pop
arpl
cmp
xchg
adc
shl
je
xchg
movsl
dec
mov
xor
jae
ljmp
mov
or
insl
rolb
hlt
add
gs
or
test
lods
xchg
movsl
lock
scas
push
dec
repnz
stos
adc
imull
addl
clc
outsb
insl
or
test
out
enter
movsb
add
jbe
jmp
mov
pop
add
sbb
in
ret
inc
mov
enter
mov
mov
pop
dec
jle
scas
ljmp
call
dec
push
outsl
add
in
scas
push
add
cmp
jb
cwtl
sub
daa
xor
pop
xchg
jl
or
in
ljmp
pop
xor
cmpsb
cmc
pop
insl
movsl
cmp
cs
and
pop
subb
cmp
push
adcb
orl
mov
xor
sbb
pop
inc
mov
push
enter
sarl
cmc
out
pop
push
jmp
mov
addr16
scas
mov
add
and
add
repnz
ret
mov
jb
loope
les
inc
rorl
test
mov
push
fidivrs
stos
int
mov
lcall
dec
mov
pop
mov
ljmp
jbe
ret
xorl
pop
inc
cmp
dec
addl
movsb
jb
xchg
les
xchg
mov
mov
sub
stc
push
mov
add
or
test
mov
daa
dec
stc
stos
rorb
jle
jns
shll
add
out
dec
or
add
outsb
arpl
jecxz
cmp
xor
jnp
fistps
cmpsb
mov
inc
mov
in
add
push
dec
xchg
out
arpl
push
xchg
jg
sub
out
cs
bound
mov
loop
and
shl
add
dec
pop
daa
xlat
push
fs
inc
shrb
mov
pop
cmp
dec
imul
aas
jp
push
enter
add
aam
es
fldcw
outsb
imul
in
insl
pop
or
inc
jl
xor
cli
stos
stc
fdivs
cwtl
sbb
insb
ret
mov
cltd
mov
jle
xlat
or
scas
inc
push
mov
mov
test
cmp
jp
jmp
mull
and
adc
xor
in
push
aaa
gs
mov
jmp
in
test
nop
cmp
inc
mov
sbb
jmp
inc
ljmp
gs
les
and
bound
cmp
aas
jmp
fcomip
add
out
xor
orl
jg
insb
pop
cmp
lahf
push
mov
int3
add
and
xor
in
sti
fimull
push
cmpsl
ret
shrl
in
cmpsl
cmpsl
lret
popa
xor
sar
out
jno
fldcw
pusha
dec
xor
dec
dec
cmp
jmp
movsb
js
movsb
push
sbb
repnz
subb
cmpsb
scas
xchg
and
call
into
push
lods
push
call
jb
or
lods
sub
aam
dec
pusha
mov
cltd
mov
sbbb
mov
jle
xchg
xor
cmc
es
andb
lods
xchg
mov
fstp
popa
std
dec
sbb
xorb
lods
jns
push
lock
sbb
jne
lret
mov
xor
push
xor
jnp
icebp
fcomip
adc
jmp
or
imulb
jmp
jbe
lea
cmp
scas
stos
bound
push
push
mov
sti
nop
mov
mov
jns
push
mov
xlat
adc
xchg
in
xorb
mov
dec
dec
xchg
fidivl
mov
pop
xchg
add
aaa
xor
js
xorb
push
call
lods
adc
sahf
mov
adc
add
je
lret
add
bound
mov
xor
cmpsl
sbb
mull
leave
inc
insb
or
out
inc
in
mov
xchg
dec
inc
jb
fwait
inc
insl
dec
std
dec
test
add
ret
int
or
data16
dec
test
decl
cmp
mov
xchg
push
popa
add
fwait
cmpsl
pop
cmp
pushf
mov
push
or
xchg
in
pop
xor
icebp
pop
inc
stos
mov
add
cmp
pusha
xchg
je
repnz
and
addl
cmpsl
mov
insl
fstpl
jno
xor
xchg
push
dec
test
fwait
comiss
push
stos
insl
aad
rcll
xor
xchg
add
mov
nop
add
inc
and
xchg
sub
test
adc
call
cltd
cmp
ds
out
add
stos
imul
sbb
sbb
movsb
scas
mov
lcall
shl
es
hlt
cld
xor
mov
mov
cld
je
repz
and
sbb
mov
jge
outsl
mov
mov
loopne
xor
inc
icebp
push
xor
or
int3
jne
mov
movsb
insb
test
adc
add
loop
dec
or
jle
lock
xchg
pop
and
mov
pushf
push
orb
int3
fwait
sub
adc
jbe
mov
in
decl
stc
push
jno
lods
sbb
xchg
aad
push
test
in
xchg
jne
popf
lods
push
or
mov
stos
cmp
mov
out
xor
mov
xchg
negl
mov
iret
imul
jno
jge
adc
mov
andb
iret
dec
test
fsubl
cltd
jb
push
sbb
jl
clc
add
xchg
ret
push
push
jbe
add
adc
jb
pop
push
in
mov
jo
and
paddusb
bound
inc
ljmp
dec
dec
repz
xchg
sbb
push
add
push
push
sub
or
movsb
popf
pop
scas
xor
inc
jge
push
mov
data16
lahf
cmp
fdivs
adc
dec
les
sbb
clc
or
inc
shlb
xchg
mov
dec
loope
fisubl
mov
inc
arpl
loopne
add
dec
push
sbb
push
ficoms
add
cltd
je
sub
inc
push
adc
xor
fadd
push
add
pop
bound
mov
jl
sub
jbe
loopne
mov
in
cmp
xor
jb
xlat
aam
fstpl
fidivs
xor
call
lfs
sar
jmp
cmpsl
or
insl
mov
ror
rorb
pop
jno
mov
dec
add
inc
call
mov
shrl
fdivrl
jne
fsubr
rol
or
inc
pop
inc
xor
cmpsb
mov
daa
aad
pop
pop
ret
sbb
push
cmp
fs
or
xchg
out
jge
inc
cmp
push
push
stc
pop
lcall
cmp
push
sub
into
iret
pop
jl
cmpsl
repz
inc
lret
cmp
negb
push
fsubs
mov
jle
lcall
mov
jbe
bnd
sub
jmp
dec
inc
hlt
add
dec
pushf
rorb
sbb
stos
lret
sbb
scas
cmc
xchg
and
dec
xchg
or
insl
test
sbb
push
adcl
xchg
xchg
movsl
xor
mov
add
bound
mov
cltd
push
xchg
repz
mov
jecxz
bound
adc
in
cmpsb
or
sub
cwtl
pop
and
lock
adc
cmpsb
jo
mov
leave
pop
adc
pop
loope
cmp
sub
dec
push
cmp
insl
cmp
mov
ret
or
dec
loop
xor
jne
aam
mov
das
sahf
mov
out
push
imul
dec
jle
iret
jae
shlb
push
xchg
fwait
push
jno
aaa
and
cmp
pop
dec
sbb
xor
mov
test
iret
pusha
popa
xor
xor
add
mov
sub
cmc
or
jge
ds
lea
sub
xor
movsb
push
pop
call
push
call
lods
outsb
idivl
sbb
outsl
call
call
outsl
pop
pop
or
fcoms
lret
sarb
scas
add
inc
es
lock
enter
xchg
inc
imul
sub
sub
dec
add
and
adc
leave
jmp
fnstcw
movsb
add
and
inc
push
loopne
lea
jb
xchg
aas
jecxz
sti
aam
loopne
push
mov
pop
xchg
pop
xchg
lock
xchg
jbe
cli
rcrl
stos
leave
js
data16
fdivr
stc
rcr
ret
and
jp
cltd
fcompl
cmp
mov
in
mov
movsb
int
cwtl
sub
jp
cmpsl
lcall
repz
outsl
mov
fisttpll
sti
cmpsb
ret
dec
inc
sahf
cmp
dec
incb
push
enter
mov
loop
xor
mov
cltd
ret
out
loop
ret
sbb
fs
push
iret
xchg
inc
mov
inc
push
xchg
sar
in
xor
inc
sahf
cmp
xchg
aaa
loope
jno
leave
xchg
mov
xor
add
inc
sbb
or
ret
mov
mov
test
and
ret
fmull
xor
mov
outsb
scas
shr
add
rolb
and
mov
mov
aaa
lcall
lcall
inc
cmp
or
ja
sub
xchg
out
dec
movb
push
cltd
push
and
ja
andb
cmpsl
fwait
sub
pop
shll
mov
sbb
arpl
adc
push
xor
ficomps
test
and
mov
inc
fnstenv
scas
inc
add
cwtl
push
mov
mov
lds
adc
or
ret
cwtl
cltd
popf
push
jo
jnp
mov
jnp
lret
clc
pop
cmp
add
insb
add
in
ret
sub
in
sub
rorb
sbb
dec
jb
arpl
jno
imul
and
addr16
cli
jmp
fcmovb
sub
xchg
cmp
mov
xchg
sub
movsb
notb
xor
and
test
aaa
add
mov
cmpsb
pop
test
mov
mov
sub
jmp
das
pop
push
das
popf
inc
pop
data16
add
pop
adc
xchg
jp
sbb
jb
cli
idivl
lods
mov
arpl
mov
sub
loopne
push
pushl
add
push
loope
test
test
jne
push
push
call
out
test
xchg
int3
mov
rcrb
pop
fs
rcll
enter
loop
mov
dec
movsl
mov
mov
mov
fnstsw
inc
push
scas
mov
inc
and
lock
pop
or
pop
push
mov
jle
lds
or
mov
mov
imul
mov
jl
nop
adc
hlt
push
test
dec
jns
sti
add
inc
jle
jno
push
push
insl
push
test
mov
movsl
divl
mov
fwait
lcall
jne
sbb
add
or
mov
enter
mov
xchg
mov
sub
sbb
dec
test
cmp
fdivrp
aad
sbb
mov
ljmp
xchg
jnp
mov
and
cmp
mov
hlt
mov
or
and
jne
pushw
aaa
mov
out
into
pop
fdivrs
arpl
dec
mov
mov
xchg
mov
fisubs
cli
dec
leave
or
pop
out
push
push
jbe
dec
xor
dec
jbe
in
pop
inc
in
dec
in
jb
fmul
test
adc
xor
dec
test
shll
bound
inc
fdivs
cmp
ret
xchg
fwait
int3
inc
lea
in
hlt
xor
ror
loop
mov
fisubrs
ljmp
cmpsb
int
xor
cmp
out
iret
popl
arpl
mov
xor
or
bnd
push
jl
sbb
xchg
aas
sbb
pop
stos
shrb
std
pop
loopne
push
sub
sub
aad
movsb
jno
je
ljmp
pushf
mov
adc
cli
xadd
orb
dec
cld
sahf
push
pushf
lea
lcall
xchg
xchg
add
mov
cmp
xchg
and
sub
xchg
ret
cs
cmc
outsl
and
bound
adc
mov
into
xor
shrl
sbbl
notl
mov
icebp
daa
lahf
push
jns,pn
insb
xor
mov
mov
ret
outsl
mov
inc
fcompl
adc
aam
setae
mov
add
pop
ret
cli
or
mov
jl
lods
cld
daa
xor
push
outsl
mov
popa
jp
or
dec
adc
aad
push
shll
pop
fisubl
mov
loop
ss
jmp
mov
mov
inc
movsb
jl
subl
cmc
pop
xchg
mov
pop
adc
icebp
push
pop
enter
push
mov
js
shlb
orb
fsubrl
int
subb
mov
les
inc
fsubs
out
arpl
add
lahf
movsl
pop
call
sub
lret
xchg
shll
mov
dec
xchg
enter
je
imul
sbb
hlt
psubq
and
call
dec
pop
notb
lock
cmpxchg
inc
jnp
into
ret
pop
iret
enter
insb
mov
data16
cmp
xchg
adc
outsb
ret
or
push
lds
xchg
xchg
aas
xor
sub
dec
fidivrs
in
icebp
andb
jg
sbb
jno
xchg
jp
out
adc
pop
xchg
leave
into
sub
mov
test
jo
add
cmp
ret
enter
imul
movsl
insl
adc
jne
and
std
xor
stc
movsb
popa
cmpsb
xchg
pop
jbe
add
stc
adc
pop
mov
pop
mov
adc
pop
insl
hlt
cld
stos
push
ror
outsl
pushf
dec
aad
and
test
mov
in
mov
inc
pusha
movsb
sub
incl
daa
pop
and
je
dec
push
arpl
les
add
ljmp
xor
scas
mov
adc
aad
sti
jmp
adc
lret
std
jnp
mov
mov
fisubrl
add
mov
hlt
jb
dec
into
mov
fldenv
push
aam
incb
ja
xchg
or
imul
push
pop
movsl
addr16
leave
xchg
dec
cmp
xor
mov
pop
sahf
popl
push
in
stos
cmpsl
inc
ja
in
adc
xchg
cmc
mov
stc
fstpl
gs
ret
aas
jle
in
je
sbb
sub
inc
cmp
movsl
scas
test
adc
jecxz
rorl
cmc
aad
lock
push
insl
imul
jge
fbld
fdivrl
scas
jbe
outsl
fiadds
xchg
pusha
mov
mov
into
or
data16
sub
push
dec
out
ret
das
jecxz
cmc
cld
sub
dec
adc
sbb
mov
out
jp
popf
xlat
sub
or
dec
cmpsl
add
mov
push
movsb
pushf
pop
ret
pop
repnz
cmp
xchg
sbb
loope
addr16
jno
sbb
aam
push
les
insl
out
mov
mov
mov
pop
mov
cmp
out
ret
xchg
mov
cli
ss
movzbl
das
mov
fidivrs
push
in
jns
in
rcr
lret
or
test
stos
test
data16
sub
mov
xchg
or
orb
jecxz
int3
or
and
cltd
repnz
pushf
jmp
movsl
into
in
ficomps
mov
jle
dec
insl
pop
sbb
push
sub
std
into
in
ficomps
mov
jle
dec
insl
pop
sbb
push
sub
std
into
in
ficomps
mov
jle
dec
insl
pop
sbb
push
sbb
jmp
into
in
ficomps
mov
aam
dec
insl
sub
test
ret
loope
adc
add
pop
and
sbb
mov
cmpsb
mov
fwait
loop
adc
dec
xor
sub
push
or
push
mov
mov
mov
mov
fwait
loop
or
sbb
sub
pop
daa
push
js
xchg
xchg
mov
mov
call
jb
push
sub
mov
xchg
sbb
les
decb
or
sub
jae
shlb
and
mov
lea
jl
loop
pop
cs
pushf
or
push
sbb
mov
dec
add
jge
jg
and
stos
xchg
add
xor
and
jnp
repnz
ss
jno
push
les
push
sbb
jb
jl
dec
and
es
mov
repnz
xchg
xchg
mov
fwait
push
aam
mov
or
outsb
stos
jge
dec
fcomps
pop
sarb
addr16
in
jnp
mov
test
fadd
out
jae
xor
cli
add
lret
pop
cs
mov
in
add
aaa
and
push
jg
or
jnp
xchg
imul
mov
jmp
sbb
or
inc
inc
push
dec
and
push
jp
mov
mov
mov
popf
fmull
or
nop
dec
inc
push
pop
or
push
push
out
xlat
mov
fsubs
ficoml
cmp
outsb
popa
cmp
jb
jmp
sti
or
mov
fwait
loop
adc
dec
xor
sub
inc
or
jmp
sti
or
mov
fwait
loop
adc
and
push
fsubrl
jg
test
dec
jle
stos
add
aas
and
add
mov
cltd
adc
enter
xchg
push
and
push
xchg
cmpsl
mov
data16
push
mov
xchg
gs
or
xchg
mov
sbb
daa
std
cmp
bound
or
sti
inc
mov
mov
add
adc
jo
lock
mulb
loop
fiadds
mov
loop
xor
sub
xor
sub
add
ja,pn
movsl
popf
cmp
adc
cmp
repnz
outsb
xor
rorl
push
mov
pop
sbb
dec
adc
jb
sbb
movsl
insb
in
in
mov
div
cli
cwtl
dec
sbb
xchg
lcall
test
dec
dec
jmp
push
sub
xlat
int
jae
ss
cmp
in
adc
mov
xchg
lcall
add
pushf
repnz
xor
mov
ffreep
repz
pop
cmp
arpl
mov
add
pop
pop
repz
mov
mov
clc
dec
arpl
sbb
jbe
rcr
nop
fwait
orb
xor
jle
bound
scas
cmp
pop
aad
int3
xchg
arpl
punpckhwd
sbb
cmp
push
xchg
and
ljmp
xor
mov
ljmp
nop
cld
loopne
cltd
sub
sub
nop
mov
and
jg
enter
mov
mov
dec
out
pop
int
insl
inc
cmp
in
cmp
rolb
xlat
xchg
cmp
mov
sti
pop
dec
imul
pop
insb
pop
xor
and
inc
test
cmpsl
iret
sbb
insl
fstpt
push
hlt
adc
je
lcall
ret
lret
hlt
jg
lods
fcoms
push
fisubrl
xor
inc
out
dec
outsl
cmp
addr16
mov
sbb
fsubs
push
dec
cli
lds
jae
sbb
movsb
decl
adc
and
sub
push
push
sbb
daa
ljmp
imul
sub
push
xchg
std
rclb
xor
loop
mov
rorl
push
std
sbb
out
insb
mov
clc
flds
repz
pop
pushf
add
decl
lcall
push
lahf
cltd
add
leave
xor
ficoml
adc
imul
pop
insl
movsl
out
jmp
or
sub
lcall
push
jns
pusha
int3
jmp
dec
xor
outsl
push
push
outsb
das
js
out
mov
jns
lret
jmp
xchg
ss
stc
mov
push
add
jmp
cmpsl
sub
sbb
xchg
add
push
or
add
add
pop
xchg
xor
add
nop
pop
push
xchg
lods
push
insl
jae
mov
pop
roll
pop
sahf
mov
mov
xchg
xchg
adc
or
sti
leave
lret
js
iret
push
sbb
mov
mov
lods
fwait
adcb
pop
adc
or
arpl
imul
test
ss
jge
add
xor
adcl
mov
icebp
jecxz
add
aam
movsl
fisttpl
mov
cwtl
daa
push
mov
jne
movsb
mov
movsl
daa
inc
add
outsl
push
faddl
pop
cmpsb
test
dec
mov
loope
bound
or
das
in
xchg
outsb
xchg
into
in
test
js
nop
adc
xor
test
nop
xchg
popf
adc
xchg
sbb
mov
pop
fwait
mov
fmull
pusha
push
xor
sub
std
inc
fs
push
mov
stos
jne
or
shll
add
outsl
pop
mov
push
inc
int3
fildl
int
push
xor
adc
jnp
xor
enter
adc
push
loope
xor
in
aam
aad
test
and
fstpt
inc
or
cmp
and
cmp
push
mov
sub
xlat
lret
cmp
mov
mov
or
push
rcrl
pop
mov
fisttpll
out
aam
mov
jp
out
adc
int3
int
mov
push
and
mov
mov
jo
in
add
adc
sub
push
test
pusha
pop
andb
xchg
daa
cwtl
sbb
cmp
xchg
cwtl
insb
cmovge
jb
in
cs
sahf
adc
fwait
xchg
mov
insl
xchg
lret
cmp
lret
mov
add
xor
and
insl
mov
jle
icebp
mov
mov
pop
pop
sub
mov
and
mov
inc
sub
cmp
stos
mov
test
movsl
aad
and
outsb
stos
gs
fildll
cli
notl
sub
ss
pop
push
rclb
mov
mov
cltd
fisubrs
int3
subl
call
js
mov
shl
and
in
lds
cmp
cs
rorb
daa
inc
test
aad
in
lods
pushf
cmp
push
fdivrl
cmp
repnz
mov
jbe
mov
in
ljmp
repnz
cmpl
dec
fldcw
fmull
pop
orl
mov
mov
sub
inc
cs
xchg
call
push
adc
inc
jne
fildll
jg
mov
lret
andl
jl
jg
imul
fsubl
dec
xchg
dec
mov
arpl
jbe
jge
and
stos
mov
push
bound
xchg
lea
xchg
mov
aad
xchg
mov
stos
sbb
stos
cwtl
shlb
sub
sbb
sbb
or
mov
mov
stos
lods
sub
push
inc
daa
cmp
cmp
in
and
test
das
js
pop
xchg
adc
testb
sub
enter
into
pusha
rolb
bswap
sarl
popf
test
inc
mov
jo
cwtl
push
jb
mov
xchg
test
adc
fs
jns
mov
and
subl
jg
pushf
lahf
popa
jne
int3
dec
cmp
mov
mov
das
mov
js
mov
decb
mov
mov
or
int3
adc
fs
sub
xchg
daa
add
lcall
xor
xchg
inc
psrlq
repnz
std
mov
inc
push
scas
rolb
jg
sub
fldt
jno
in
repz
pop
mov
mov
shlb
lret
sbb
rcr
dec
incl
push
add
mov
sub
or
push
andb
xor
inc
out
test
or
addl
jae
push
fcoml
push
jbe
ja,pn
jno
hlt
fs
andb
inc
add
shrb
add
mov
lret
inc
scas
ljmp
lds
mov
pop
xchg
rcl
mov
jp
pop
xor
mov
fldl
test
sub
imul
add
dec
and
jbe
ds
jp
fsub
cltd
bound
notl
ret
and
fisubl
divl
les
ds
sub
jl
incb
adc
inc
fisubl
mov
dec
sbb
bound
cmp
lea
and
sbb
jge
xor
pop
test
mov
jae,pt
cmp
shlb
mov
aad
dec
lcall
daa
mov
xlat
sbb
jne
stos
fs
ljmp
xor
cld
jne
sbb
aaa
out
xchg
pop
gs
into
movntps
add
xchg
test
dec
pop
jle
aad
xchg
ss
xchg
adc
hlt
dec
cmp
fsts
sbb
push
push
aad
stos
loope
cwtl
pusha
adc
test
mov
push
pop
dec
imull
rcll
mov
jge
mov
xchg
push
out
jecxz
jmp
negl
inc
aaa
insb
addr16
and
mov
mov
movaps
cltd
outsb
xlat
inc
shrb
lds
daa
and
arpl
pop
cmp
ljmp
inc
jbe
pop
inc
mov
loop
fdivl
add
xor
xchg
les
movsb
outsl
call
aad
dec
jmp
jo
fwait
cmp
gs
sub
inc
or
mov
push
cmpsl
mov
sub
inc
imul
jo
mov
jl
ficoml
hlt
fistpl
hlt
push
mov
xor
es
inc
cld
add
insl
mov
sahf
sub
xor
dec
xchg
mov
fcom
cwtl
xchg
sbb
xorb
ds
mov
ret
jl
dec
add
add
or
out
mov
lahf
push
ds
mov
out
imul
sbb
mov
mov
dec
pusha
add
push
jb
mov
fs
addb
adc
shlb
dec
daa
shlb
bound
stos
jl
movl
aas
mov
lods
sbb
test
xchg
lods
mov
shl
xchg
inc
jo
sbb
rcrl
fwait
mov
icebp
out
pop
ret
fildll
lock
jp
out
inc
add
ret
push
push
icebp
add
xor
mov
jno
xor
push
jp
ja
imul
inc
cmp
pop
or
or
mov
stos
and
lret
cmp
and
and
mov
jns
sub
adc
dec
cli
es
movsl
sbb
ret
ss
add
movl
test
sub
inc
lret
adcb
rcr
dec
mov
orb
cmp
jmp
aas
dec
mov
out
adc
mov
sahf
xchg
xchg
rclb
inc
cmp
daa
pop
mov
jg
clc
cmp
data16
sti
lds
or
rorb
mov
shrl
int
les
cli
cld
cmpsb
in
adc
repnz
xchg
jbe
jp
and
pop
mov
adc
nop
inc
xor
call
fcomps
mov
push
pop
test
mov
sbb
mov
dec
mov
stos
adc
cwtl
sub
in
aad
sti
lea
dec
in
insb
fiaddl
inc
mov
cli
out
sub
imul
jmp
push
mov
and
and
cltd
gs
test
arpl
dec
xchg
mov
mov
and
daa
aas
xchg
jae
fnstsw
mov
xchg
dec
and
loope
je
xor
jno
push
jl
fnsave
call
or
ljmp
imul
jno
stos
clc
cmp
mov
rorb
and
xor
dec
sub
sti
jecxz
iret
addl
daa
fdivrl
dec
loope
pusha
cs
out
leave
xchg
fldl2t
fadds
loope
dec
outsb
mov
jae
lret
int
ljmp
mov
inc
and
push
adc
sbb
and
stos
enter
adc
call
shlb
enter
inc
sub
mov
test
jns
fcmovb
call
rolb
cli
loopne
movb
or
pop
push
xor
les
xchg
bound
ss
mov
mov
cmp
sbb
inc
jo
aaa
xor
inc
nop
xchg
out
adc
xor
xchg
das
mov
or
fwait
or
and
mov
pop
test
add
or
dec
mov
xor
mov
xor
mov
adc
or
insl
pop
xor
out
cld
fiaddl
das
cs
mov
inc
jo
stos
or
pop
ret
inc
sbb
mov
in
stc
fwait
dec
outsl
ror
or
or
and
scas
sbbb
fisubl
adc
xlat
popa
jl
dec
sub
fstpl
mov
pushf
push
xchg
outsl
push
std
mov
jp
out
inc
mov
push
mov
mov
aaa
push
inc
lds
call
insl
mov
js
fcmove
mov
mov
int
insl
test
scas
mov
xchg
or
das
mov
push
call
ret
jg
pop
subb
ds
test
jne
sbb
lods
xchg
lahf
daa
jle
mov
xor
dec
adc
shlb
inc
in
sbb
jmp
scas
adc
vpunpcklwd
adc
push
adc
or
movsl
and
fidivl
iret
dec
push
dec
aaa
les
xor
orl
pop
or
ss
adc
mov
imul
sbb
fs
fisttpll
cli
insb
idivb
cmpsl
xor
int3
adc
adc
test
push
xchg
nop
leave
push
xor
inc
fmulp
xchg
ds
push
xchg
push
push
enter
pop
mov
push
jns
push
or
mov
cmpsl
mov
xchg
push
xor
out
ja
ljmp
outsl
add
stos
jl
sbb
popf
adc
sub
lods
xchg
jne
mov
xor
loop
les
into
mov
xchg
stos
fwait
clc
data16
inc
push
xchg
xchg
shl
mov
xor
stos
inc
jle
jle
inc
ss
gs
mov
movsb
mov
add
xchg
insb
jae
dec
mov
sub
je
sbb
sbb
dec
inc
inc
test
jnp
xchg
ret
sbb
in
jecxz
push
scas
loope
hlt
jno
fchs
push
aas
cmpsb
push
sbb
bound
sbb
dec
pop
and
movsb
fwait
pop
shll
inc
xor
insb
outsb
in
or
jge
sti
mov
into
push
shl
cmp
sti
inc
in
sbb
loopne
in
aas
adc
sbb
lods
les
inc
mov
fwait
in
dec
mov
cwtl
sbb
aad
aaa
cmp
cmp
sahf
ret
dec
stos
mov
cmpsl
push
ret
outsb
jmp
adc
scas
enter
dec
inc
cmp
mov
mov
sbb
jecxz
dec
in
and
lods
call
xchg
sbb
cmpsb
stc
jo
inc
adc
xlat
in
and
out
popa
fildll
leave
push
fmul
jne
rcll
loopne
shll
ja
inc
add
leave
inc
inc
pop
dec
mov
push
sub
imul
cmpsl
inc
or
cs
dec
xchg
jno
xchg
pop
sub
mov
mov
sub
cmc
int
adc
cmp
inc
dec
cmp
or
pop
mov
jle
mov
mov
sub
ja
xorb
or
jle
cmp
adc
and
mov
orb
jbe
jne
pop
leave
std
dec
xchg
aas
orl
sahf
and
pop
idivl
cltd
fs
test
call
xchg
mov
jbe
jecxz
lds
adc
data16
cmp
loope
pop
jge
data16
jae
popa
in
cmp
push
loope
xchg
cmc
ret
inc
pushl
std
cltd
jge
lock
sbb
mov
cli
sub
ret
ljmp
daa
xor
daa
adc
fucomip
enter
jecxz
repnz
ss
add
pop
out
lret
jle
lods
pop
adc
jns
aad
cmp
fwait
mov
loop
xchg
aas
iret
xor
xchg
lods
push
jmp
adc
mull
push
sbb
loope
mov
sub
and
test
jmp
aas
int
addb
cmp
mov
cmp
or
fadds
jno
xchg
dec
inc
inc
jns
mov
int
inc
stos
test
mov
add
ljmp
cmp
fwait
test
mov
fwait
cmp
int
jne
push
mov
loopw
xchg
lcall
push
sub
cmpb
push
push
or
push
ret
xchg
in
imul
out
repz
pop
push
sub
lds
int
aad
test
icebp
push
adc
push
xchg
or
scas
shlb
cli
dec
cmp
test
icebp
push
insb
iret
pop
sbb
mov
ljmp
xchg
sbb
icebp
add
rorb
cld
ss
mov
cmp
cmp
dec
stos
lcall
or
andb
cwtl
mov
mov
sahf
sub
bnd
push
fwait
stos
enter
xor
sti
add
adc
lcall
and
cmc
push
mov
int
jbe
xor
mov
scas
sub
shr
adc
repz
xchg
pop
pusha
adc
cmp
mov
adc
jmp
and
mov
ljmp
je
mov
xor
enter
mov
adc
cmpl
mov
xchg
and
pop
push
data16
push
mov
shrb
not
push
ds
fistpl
jae,pt
and
in
jns
cltd
fiaddl
dec
cmp
pop
cmp
lcall
sahf
test
aad
ljmp
ds
or
ja
mov
push
and
jae
xor
mov
test
fwait
movsb
sub
pop
in
push
lcall
stos
jae
imul
push
xchg
jle
iret
sub
and
test
outsl
enter
xlat
jmp
jle
test
pop
push
mov
mov
std
add
dec
mov
push
shr
lods
inc
insl
lret
sub
jbe
mov
ss
out
lret
dec
cmp
mov
ja
jg
pusha
mov
mov
mov
or
add
scas
lea
test
push
lahf
sub
adc
jg
push
inc
cmpsb
cli
adc
lds
fisubrs
data16
int
aad
or
pop
into
xchg
mov
fistpl
mov
sbb
rcrb
insb
lods
mov
adc
cli
insl
lahf
je
mov
mov
ficomps
push
jle
daa
pop
iret
push
sub
cltd
int
lret
dec
lods
std
fisubs
pop
and
add
or
pusha
and
stc
cltd
push
mov
xchg
insl
scas
pop
push
mov
pop
push
subb
jae
mov
jnp
mov
pop
inc
shlb
cwtl
lahf
loopne
lcall
testl
pop
xchg
std
pop
mov
inc
out
jmp
xor
xor
jnp
cwtl
lcall
lods
push
adc
sar
stc
mov
inc
ja
jbe
sahf
call
stc
idivl
movsb
sub
test
mov
xchg
pusha
mov
jae
scas
add
bound
jbe
aaa
scas
inc
mov
sub
jb
fbld
mov
inc
rorl
xchg
pop
and
add
add
jmp
dec
loopne
les
mov
lock
cmp
sbb
mov
ret
gs
test
push
pop
cltd
testl
rclb
nop
xchg
mov
sub
inc
cmpsl
push
js
std
into
scas
cmp
fbstp
rcrl
data16
mov
jl
sbb
es
sbb
flds
insb
pop
adc
outsb
xchg
aas
jmp
pop
xlat
mov
jge
and
mov
xchg
push
leave
jnp
xor
andl
xor
dec
lret
pushf
xchg
jg
pop
cmp
lahf
and
push
adc
inc
int3
pop
cmp
xchg
cmp
adc
imul
repnz
sarb
jne
mov
cwtl
fwait
test
stos
adc
insb
clc
inc
shll
or
sub
cmpsl
mov
xchg
rcll
push
pop
or
gs
dec
cmp
or
pop
sub
inc
xor
aam
out
shll
sub
adc
out
sti
out
and
aam
test
out
mov
clc
mov
packssdw
inc
ret
or
lods
subb
lock
mov
cs
into
loop
mov
xor
stos
fistl
dec
xchg
and
mov
push
jge
jl,pn
scas
pop
das
out
add
mov
cmpsl
sub
add
sub
rcr
cmpsb
push
mov
stos
in
cwtl
cmc
or
add
adc
cmp
push
mov
mov
repz
mov
inc
mov
shr
xor
outsl
push
jae
cmp
xor
imulb
pusha
lds
int3
cmp
mov
into
xor
insl
orb
jmp
adc
add
addr16
or
sub
notb
in
inc
popf
gs
xchg
pop
or
daa
insb
sahf
mov
lods
or
shl
mov
leave
jns
xchg
dec
test
int3
stos
pop
xor
lds
call
out
sub
outsb
lcall
fnstcw
mov
ds
mov
mov
lret
bound
cmp
add
into
mov
push
cwtl
mov
sub
scas
insb
in
outsl
adc
add
aam
jne
inc
push
cmp
pop
xor
sub
inc
or
jmp
sti
or
mov
fwait
loop
adc
dec
xor
sub
inc
or
jmp
sti
or
mov
fwait
loop
adc
pop
xor
sub
inc
or
out
xchg
sti
add
fbld
imulb
push
ret
ss
sub
inc
or
mov
popa
mov
aad
pop
xor
add
adc
and
xor
mov
and
pavgw
adcl
pusha
rcll
inc
loope
icebp
and
rclb
shlb
xor
inc
nop
push
andb
mov
mov
adc
add
xor
and
rclb
shlb
xor
inc
nop
push
andb
mov
int
mov
roll
xchg
push
lahf
and
jne
and
inc
push
mov
dec
pop
adc
test
xchg
fdivs
fcomps
pop
mov
mov
adc
pop
jo
popa
ds
mov
lds
push
es
inc
mov
and
ljmp
mov
xchg
adc
add
adc
dec
icebp
xor
xchg
inc
nop
in
jno
or
adc
pop
mov
lahf
ds
xchg
push
into
les
decb
cmp
es
sbb
loop
xor
imul
cs
mov
lock
push
out
cmp
icebp
mov
sub
jno
scas
popa
push
pop
je
pusha
xchg
out
pop
hlt
movsb
and
adc
and
xor
inc
nop
push
andb
mov
mov
adc
add
xor
inc
mov
pop
cmpsb
inc
jmp
roll
hlt
sub
jge
jns
mov
inc
fs
je
inc
lock
mov
cmc
adc
sbb
and
mov
jg
outsl
lea
dec
adcb
dec
test
or
mov
mov
mov
adc
add
xor
and
rclb
shlb
xor
inc
nop
push
andb
mov
mov
adc
add
xor
and
shlb
mov
out
fdivp
dec
mov
es
mov
push
int3
lret
cmpl
pushf
dec
push
pop
dec
je
lods
dec
sbbb
ficoms
add
mov
dec
jns
insb
inc
cltd
xchg
pop
cmp
dec
fcmovne
js
cmpsb
cld
lods
add
and
mov
push
xor
mov
push
jno
jecxz
rcl
and
jb
popa
out
mov
xor
repnz
jb
jb
push
mov
push
sbb
xor
inc
cmpsb
lods
jne
push
sbb
ret
adc
xchg
inc
cmp
out
pop
movsb
or
xchg
lea
int
adc
xchg
imul
jo
cld
xchg
stc
xlat
jmp
movsb
pop
jo
bound
jnp
xor
cmpxchg
xor
xor
hlt
mov
fimuls
xorb
mov
adc
pop
into
inc
pop
push
gs
sbb
sbb
mov
inc
insb
aaa
fstpt
js
jb
int
mov
jmp
inc
fisubs
or
in
push
sti
sub
cltd
pop
adc
cmp
inc
inc
repnz
imul
pop
psubusb
sbb
adc
addl
add
stos
push
out
mov
fmul
sahf
pop
mov
lods
popf
sahf
testb
js
cmp
or
mov
and
sahf
push
in
adc
xor
mov
mov
pushf
sub
shrl
push
adc
arpl
ja
add
fildl
sbb
aas
push
push
testb
jno
jmp
xchg
pop
cmc
loopne
into
push
jb
in
xchg
pop
aas
push
adc
test
jecxz
jb
je
in
cmp
cmp
xor
scas
outsb
push
sti
cmpsb
stc
add
incl
addr16
push
push
clc
movsb
mov
in
cs
or
pop
inc
mov
sahf
adc
sahf
and
jge
enter
out
xchg
inc
arpl
andb
pusha
xchg
scas
pop
or
xchg
xchg
subb
addr16
pusha
jmp
outsb
fimull
pop
push
lcall
scas
xchg
shll
enter
gs
aam
popf
out
mov
adc
mov
fildll
sarl
lock
lea
adc
xor
pop
sub
imul
ret
stos
nop
rcll
das
inc
out
inc
clc
out
loope
and
test
or
jmpw
jne
jae
sub
xor
mov
cmp
jp
or
aam
outsl
or
das
sub
inc
push
push
mov
lock
nop
outsl
repz
and
lock
pop
mov
fstps
idivl
jp
outsb
pop
fwait
and
jge
ret
mov
mov
mov
fisubrl
repnz
push
xchg
push
les
push
sbb
roll
rclb
add
sbb
mov
sbb
aad
xor
jbe
push
and
fsubr
mov
leave
sbb
aad
lahf
xor
pop
xchg
jecxz
arpl
das
stos
mov
lret
sub
test
jbe
sarl
and
adc
fcompl
nop
push
lea
mov
push
incl
scas
jae
neg
sub
hlt
fdivrl
rcr
in
xlat
fnstenv
adc
jecxz
je
ret
es
subb
int3
shlb
movsl
gs
movsb
mov
out
das
and
xor
lea
add
imul
cli
mov
sti
mov
arpl
test
mov
xchg
mov
xchg
xchg
and
or
mov
stos
lret
mov
adc
jp
and
pop
stos
push
int
idivb
incl
hlt
or
lret
out
xor
test
insb
aaa
in
push
cmc
movsb
jae
scas
out
push
and
xchg
fcoms
mov
iret
movb
jbe
call
icebp
inc
and
ljmp
and
xchg
jnp
sbbl
inc
xor
aas
mul
arpl
pop
push
in
or
cmp
mov
sub
jg
decb
cmc
cmpb
outsb
shll
jbe
jno
sbb
sti
mov
popl
rcl
negb
lods
jmp
test
int
pushf
fadds
mov
aam
addr16
mov
cmp
enter
mov
push
add
aas
inc
cltd
jo
sub
loop
jmp
js
sbb
movsl
mov
inc
std
push
aam
xchg
sub
in
popa
rcll
rcr
cli
mov
lahf
jbe
neg
xor
ds
adc
cmp
in
inc
aad
jl
sub
into
ficompl
cmp
cwtl
xor
xchg
cmc
push
inc
mov
add
mov
jno
push
rcrl
xor
push
ss
xor
enter
cs
cmpsl
bound
xorl
cmp
sub
and
dec
jns
enter
xchg
jmp
jne
pop
mov
scas
cmp
inc
push
push
insl
test
scas
push
fstpl
jmp
cmp
jno
adc
pop
lock
pop
pop
jne
repnz
js
outsl
xchg
adc
sub
push
sbb
xchg
cld
xchg
les
jg
mov
xchg
out
sbb
jle
lock
fs
pop
sbb
call
daa
pop
adc
aaa
and
lret
jns
add
fcmove
shrl
inc
sti
pop
lret
shl
or
aam
jns
cmp
add
dec
bound
push
jno
inc
pushf
pop
xchg
mov
inc
testb
cmp
sub
adc
mov
xchg
bound
int
or
mov
push
push
ljmp
pop
jbe
sub
imul
fbstp
inc
and
push
pop
xchg
sbb
fimuls
inc
sub
xchg
loope
jl
xchg
sub
repz
imul
lods
int3
xor
or
ljmp
lea
push
lahf
xchg
and
fwait
mov
lea
push
in
jge
dec
jae
mov
loop
daa
cmpsl
xchg
gs
dec
lret
jae
cwtl
or
sbb
and
mov
mov
mov
mov
mov
rcl
jns
lret
add
jns
jle
out
jge
mov
pop
or
mov
mov
xor
push
into
cmp
or
loop
insb
test
sub
mov
jl
hlt
bound
sub
je
and
enter
sbb
xchg
mov
mov
jge
das
fdivrp
jl
scas
cltd
clc
mov
sbb
jmp
jecxz
into
dec
mov
adc
idivb
jb
cli
leave
dec
in
dec
fstpl
enter
lcall
mov
in
cs
pop
lret
jb
adc
stos
mov
movsl
jnp
add
gs
cmpl
int3
push
sub
into
cs
push
outsb
inc
adc
mov
sub
jae
sbb
sub
sub
lcall
jp
sub
mov
pop
mov
or
int3
push
in
out
lcall
add
jae
mov
mov
pusha
xchg
outsl
movsl
stc
push
pop
test
sbb
add
add
sbb
jmp
xchg
pusha
push
jl
xor
ljmp
test
dec
pushf
mov
fldt
add
je
xor
cld
bswap
push
mov
iret
adc
sub
push
inc
sub
cli
xchg
inc
cmp
sbb
mov
mov
or
lods
in
inc
mov
clc
pushf
rorb
mov
stos
jmp
inc
adc
jnp
xor
sbb
mov
call
jl
mov
sahf
push
inc
mov
xchg
push
arpl
push
mov
ljmp
mov
mov
daa
cmp
mov
dec
xor
out
cwtl
mov
lds
js
sahf
mov
inc
test
in
or
fsubrl
ja
and
das
xchg
into
cmpsb
sahf
aaa
cmp
mov
mov
lds
int
outsb
jg
decl
ret
jb
jmp
inc
push
jno
adc
mov
inc
pop
in
xchg
sbb
loope
jns
mov
cltd
mov
ror
ret
jo
sub
jl
or
imul
repnz
cwtl
xchg
cltd
or
cmpsb
stos
add
ds
add
mov
pop
mov
mov
sub
push
add
cmp
movb
sbb
incl
fwait
jg
xlat
cmp
sbb
push
hlt
sub
sbb
shrb
xchg
out
sbb
out
lds
dec
out
inc
sbb
and
mov
push
pop
cmp
fwait
push
insl
mov
cwtl
movsl
xor
inc
mov
andb
adc
test
aas
pusha
enter
fdivl
fldl
mov
iret
cmp
mov
adc
push
jg
dec
flds
test
sbb
data16
sub
shl
pop
fidivrs
andl
inc
mov
in
sbb
scas
repz
mov
mov
jge
add
and
xchg
jb
in
fnstcw
clc
adc
push
fwait
pop
xor
push
aam
sahf
es
inc
mov
pop
mov
insb
in
repnz
xor
add
cwtl
insb
clc
adc
xchg
add
fldl
pushl
fdivrs
add
and
mov
aas
push
lret
test
daa
scas
sub
icebp
dec
cmp
cld
bnd
jmp
xor
dec
testl
jl
fwait
push
jnp
stc
mov
mov
cs
cwtl
mov
sub
mov
xchg
fcoms
cmp
pop
insb
lods
fmuls
lods
jl
ret
fsubl
hlt
test
mov
and
pop
fidivrs
mov
fsubs
fwait
jno
mov
dec
cli
testl
ds
or
mov
xchg
in
inc
jecxz
sub
push
adc
notl
stc
inc
aam
mov
into
movsl
insb
dec
cmp
das
adc
fs
cmpsl
and
pop
mov
loop
or
jmp
sub
addl
cmpsl
jp
sahf
or
jle
xchg
out
lock
jg
sub
xchg
repnz
bswap
cwtl
aam
out
jnp
pop
add
jno
pushf
push
push
pop
dec
mov
jo
and
arpl
stos
aaa
cmp
adc
pop
aad
insb
stc
xorb
jg
andl
insb
imul
push
push
or
xor
and
dec
bswap
push
std
mov
push
or
fisttpll
jp
jb
pop
lret
xor
adc
loope
and
into
xchg
sbb
aad
roll
fildl
movsl
sub
inc
ds
inc
mov
jecxz
jle
stos
xchg
ret
and
lds
mov
mov
pop
out
aaa
dec
into
fnstenv
out
cmp
fsubr
shll
cmpb
insb
jb
and
imul
add
pop
mov
loopne
or
inc
or
inc
dec
inc
mov
inc
push
mov
cli
aas
ds
divb
mov
cli
xchg
jnp
test
gs
mov
push
fmul
ret
cmp
cmp
mov
ficompl
sbb
pop
sbb
cmp
aas
mov
xchg
push
adc
cmp
fcom
nop
and
inc
sub
mov
fldl
pop
outsl
sbb
xchg
cld
lahf
push
fmul
xchg
jl
adc
int
inc
cmp
dec
lds
jge
xor
out
mov
pop
mov
nop
outsb
call
daa
bound
xchg
push
fidivl
add
std
add
cmpsl
sbb
jne
insl
insl
aam
ret
or
mov
mov
mov
js
push
lds
pop
sbb
or
call
adc
pop
test
insl
hlt
mov
insl
ja
xor
mov
rorl
aam
sub
push
pusha
stc
std
out
imul
xchg
jbe
popa
int3
test
out
repz
push
xor
xchg
shld
xor
or
sub
sbb
dec
sub
rcrb
or
frstor
test
aad
sub
fwait
adc
xchg
xor
imul
jmp
nop
mov
cmp
jno
stos
mov
jae
dec
sbb
add
or
das
mov
outsb
out
xchg
pop
fs
inc
jns
cltd
aaa
popf
xor
push
stc
xor
jecxz
popa
sub
clc
xor
mov
jl
ljmp
and
test
in
jecxz
aad
adc
sahf
mov
fldl
imul
push
rorl
adc
subl
std
lret
sbb
mov
popa
sbb
aas
sti
xchg
xchg
nop
xlat
lock
push
mov
inc
fmulp
shr
or
sahf
add
mov
add
outsl
jmp
call
jae
aaa
pop
lods
add
push
mov
sub
dec
int
add
je
imul
movsl
dec
xor
movsb
push
gs
ljmp
cmpsl
stc
test
lcall
or
rclb
ret
add
mov
hlt
pop
xchg
ds
push
inc
imul
aad
mov
repnz
je
lea
push
add
inc
arpl
in
movsl
xchg
fs
jne
xor
cltd
arpl
dec
insb
sub
out
dec
mov
fsubrs
jg
pop
das
pop
xchg
xchg
shlb
push
mov
jno
adc
adc
inc
leave
dec
and
sbb
pop
insb
xor
insb
xor
test
call
in
jb
dec
jmp
adc
mov
pop
testl
sbb
enter
insl
jae
cltd
lea
dec
adc
add
sub
sub
inc
call
aad
je
inc
jmp
adc
movsb
dec
mov
adc
mov
mov
cmp
movsb
loop
data16
rcr
push
popf
sub
addr16
shrb
inc
push
movsb
inc
test
mov
inc
data16
ljmp
dec
out
dec
push
aad
mov
push
jo
push
je
xor
xor
fsubr
xlat
loopne
shrl
jnp
aam
push
scas
popa
in
jp
into
xchg
inc
mov
add
add
aad
or
add
cs
xchg
xchg
add
cmpsl
sti
sub
mov
inc
ljmp
mov
cmpsb
hlt
scas
pop
xchg
pop
sahf
push
mov
mov
push
pop
js
xchg
xchg
xchg
mov
shl
es
iret
rclb
stos
ficoms
pop
out
xchg
lods
xchg
inc
dec
dec
lret
test
push
idivb
loopne
int
dec
xor
and
pop
ret
cmp
inc
int3
push
fistl
cmpsl
sti
mov
in
fldl
fisttpll
and
xchg
push
inc
rolb
add
lret
in
aam
outsl
repnz
imul
xor
bnd
dec
jno
arpl
xor
mov
cmp
dec
insl
je
pop
lock
inc
jge
cwtl
mov
jmp
sbb
dec
fstl
pop
mov
repz
nop
sarl
cmp
cmp
rcrb
add
addr16
fmull
xchg
cmp
cmpsl
repz
loopne
pop
xchg
adc
pop
push
mov
fidivs
jmp
pop
add
daa
imul
repnz
xchg
add
pop
sbb
lcall
je
lahf
sbb
adc
leave
pop
orl
jg
pop
lods
test
jmp
add
jae
js
sahf
cmp
shl
scas
mov
insb
adcb
push
ret
sbb
pop
outsl
or
ss
push
stos
or
mov
cmpsl
dec
pop
rcrl
adc
adc
xchg
rolb
mov
and
repz
mov
sar
roll
inc
pop
push
inc
stc
mov
sbb
test
shr
sti
jmp
movsb
stos
aaa
iret
xor
mov
pop
addr16
pop
cld
imul
fsincos
push
mov
shlb
clc
aaa
push
dec
arpl
cmc
inc
xor
stc
fnstenv
insl
cmp
orb
int3
dec
mov
fwait
sbb
xchg
jl
and
and
ja
push
fwait
jno
insb
insb
into
fnsetpm(287
insb
rcr
push
jbe
std
ficompl
aam
in
leave
dec
sbb
js
outsl
jo
out
mov
push
jns
xchg
adc
mov
sarl
jnp
leave
test
repz
pop
xchg
insb
jg
divl
lods
and
adc
and
cmp
add
fucomip
insl
shr
jg
pop
movsl
es
aad
test
sub
jp
xchg
xor
iret
push
push
lock
mov
push
int3
dec
mov
enter
imul
ret
pop
subb
sbb
pop
leave
mov
scas
aam
xorb
sbb
inc
mov
sub
stos
je
jl
popf
les
xchg
ret
jne
dec
mov
push
out
cmp
xchg
mov
rsqrtps
dec
movsb
out
dec
xor
pop
lods
ljmpw
imul
inc
jl
push
and
mov
rolb
push
xor
clc
imulb
imul
add
call
dec
cwtl
lods
testb
inc
out
cld
repz
insb
add
pop
iret
xchg
fcompl
mov
pop
jp
scas
xchg
mov
movzwl
test
mov
sbbl
std
insl
sub
ret
add
inc
push
xchg
xor
shll
inc
add
dec
out
jmp
lock
sbb
cs
mov
outsb
cs
sub
adc
bound
xchg
jo
aad
imul
add
pusha
mov
or
mov
xchg
cmp
das
mov
roll
sbb
mov
aam
out
cmp
loopne
cmpsl
lock
lret
es
in
out
push
push
jmp
test
push
sbbl
mov
xor
mov
loop
xchg
push
sahf
aam
ret
dec
jbe
adc
lock
xchg
jp
inc
cld
das
jg
jecxz
in
incb
xchg
in
and
mov
jno
mov
push
push
pop
adc
sub
push
xor
sub
aaa
imul
add
addr16
movsl
dec
cmp
divb
negl
sub
outsl
sub
jecxz
aas
mov
add
dec
inc
push
or
popf
push
mov
lret
push
adc
adc
cs
and
cmc
mov
or
mov
sbb
mov
fwait
pop
sub
inc
fidivrs
cmpb
mov
dec
fimull
mov
xor
xor
adc
int3
shlb
pushf
push
cld
and
inc
jl
stc
jbe
xchg
xchg
push
dec
ja
popa
dec
ret
inc
sub
call
mov
jbe
sahf
cmp
sub
mov
or
mov
in
cli
push
xchg
movsb
sbb
outsb
ja
cmc
xchg
fiaddl
or
mov
sahf
mov
cmp
out
cmp
cmp
push
int3
ja
insb
lret
add
pop
outsl
test
lret
add
lret
outsl
mov
push
roll
pop
ret
xchg
fcompl
sahf
ljmp
sbb
mov
cmp
les
movsb
adc
jmp
sbb
imull
pop
sbb
xchg
push
rcll
lcall
subb
and
fdivs
push
outsb
popa
rcrb
lea
dec
sahf
or
mov
movsb
xor
xlat
dec
sub
pushf
insl
pop
incb
add
aam
lret
jo
mov
inc
xor
push
mov
or
aaa
lds
enter
test
cmp
jne
sub
sahf
fsubs
mov
xchg
nop
fldt
cmp
pop
mov
cmc
cmpsl
fs
imul
out
stc
scas
test
sub
or
cmpsl
out
adc
add
and
mov
push
add
cmp
jmp
insl
mov
gs
xlat
jae
out
mov
sbb
adc
out
sub
mov
push
aaa
dec
aaa
sub
pop
es
ds
push
cmc
enter
test
sbb
orb
pushf
sbb
popa
mov
push
cli
sub
iret
int3
inc
aas
lret
js
or
jge
das
mov
orb
pop
sbb
sub
inc
mov
mov
iret
sbb
sarb
in
cmp
lahf
sub
int3
rorb
ret
push
mov
leave
pop
xchg
iret
xor
dec
jl
sti
out
or
repz
icebp
xor
inc
nop
push
andb
mov
mov
adc
add
xor
and
rclb
shlb
xor
inc
nop
push
andb
mov
mov
adc
add
xor
and
aam
shlb
push
andb
mov
mov
adc
add
xor
and
rclb
shlb
xor
inc
nop
push
add
jno
subl
mov
fisttps
rcrl
cmp
or
sbb
dec
aaa
adc
add
mov
sahf
enter
clc
fdivr
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
js
cwtl
scas
cwtl
mov
enter
call
xor
and
jo
js
xchg
dec
mov
pushf
enter
mov
scas
fsubl
ja
sub
xchg
sbb
mov
aaa
and
fld
xor
leave
xchg
test
in
in
aam
sub
push
push
pushf
inc
pushf
cwtl
imul
xchg
not
in
fistl
js
cmp
jl
cmp
jl
xor
cld
call
jl
cmp
or
sub
dec
pop
mov
add
cltd
inc
popf
insb
inc
arpl
mov
clc
mov
adc
frstor
dec
inc
andb
pop
mov
xor
and
and
fsubrl
xlat
mov
pop
popf
fwait
jbe
shll
adc
mov
xor
int3
shrl
sub
push
pop
insb
dec
jl
push
popa
inc
xchg
mov
movsb
mov
mov
jmp
int3
clc
mov
dec
or
adc
fcmovnu
fdiv
enter
lcall
cmp
jl
sbb
pop
dec
push
aad
sahf
mov
sahf
mov
je
inc
insl
push
imul
dec
js
mov
pushf
enter
call
sub
cmp
or
sbb
insb
pop
jl
dec
js
mov
pushf
enter
call
sub
mov
and
cmp
push
mov
xlat
inc
push
movsl
nop
xor
xchg
shlb
mov
mov
pop
insl
jecxz
and
jbe
pop
enter
and
out
pop
sbb
bound
lods
xchg
bound
mov
insb
pushf
sub
imul
test
push
lea
stos
jae
movsb
imul
jo
xchg
mov
adc
rorl
mov
cmp
xor
std
fidivrl
inc
adc
bound
mov
pop
push
lret
dec
out
xor
sub
pop
fidivs
mov
ljmp
ret
cmp
inc
out
xchg
sub
xchg
inc
mov
stos
call
stc
pop
test
aas
in
push
movsb
fidivrl
adc
movsl
out
mov
push
insl
loope
test
mov
adc
dec
int3
add
pop
into
mov
mov
xor
jo
mov
loop
push
dec
jae
in
xor
nop
sub
sbbl
es
push
sbb
lods
sahf
xor
fistps
or
scas
shlb
mov
popf
inc
daa
filds
adc
outsl
pop
mov
adc
fdivr
loopne
cmp
movsb
mov
mov
call
mov
mov
jns
sub
pop
dec
xchg
mov
mov
inc
mov
mov
les
fs
int3
inc
jns
dec
push
icebp
addr16
popl
pop
mov
adc
pop
lds
lahf
mov
call
imul
outsb
lods
or
aam
pop
sub
daa
je
xor
movsl
push
lret
mov
mov
mov
and
dec
or
popf
addr16
popa
mov
arpl
adc
movsb
mov
inc
mov
inc
test
cmpsl
shrb
mov
sub
sbb
xlat
and
or
sahf
mov
shrb
je
pop
loopne
add
push
filds
cmc
inc
dec
mov
mov
mov
mov
ljmp
push
dec
enter
xor
rol
lock
mov
iret
shlb
lods
add
in
out
cmp
inc
push
stos
xor
pop
sub
mov
push
icebp
ficoml
loopne
out
dec
sub
shll
sub
adc
dec
test
sub
mov
xor
push
add
icebp
push
dec
insb
xlat
clc
lods
push
mov
sub
xorl
daa
jno
add
lock
mov
pop
xchg
jl
stos
jmp
fsts
test
inc
mov
mov
pop
and
out
movsb
cld
pop
data16
push
mov
je
push
inc
test
cmp
cmpb
xor
cs
dec
loopne
jmp
jecxz
jno
or
std
test
addr16
cwtl
adc
enter
adc
imulb
negl
loope
fst
or
fildll
xchg
xchg
dec
inc
xchg
xor
les
adc
sub
mov
cmp
sub
cmp
push
mov
push
inc
add
jge
aam
out
xchg
ror
leave
push
in
repz
sbb
pop
sarb
leave
call
mov
mov
notl
pop
call
out
insb
add
cmp
lret
sub
vpcmpgtb
int
fnstsw
jl
mov
mov
pop
shrb
jbe
jbe
dec
fisttpl
ss
stos
mov
out
ficompl
jge
add
inc
adc
out
cmp
outsl
push
lods
fnsetpm(287
test
ret
lret
popa
hlt
lock
mov
lea
fst
and
dec
in
mov
mov
sarb
push
and
adc
inc
cmp
jo
mov
xchg
mov
mov
insb
jl
aad
imul
lds
or
jg
adc
push
sub
push
sahf
dec
fsubl
lret
adc
jle
mov
jnp
inc
int
arpl
inc
jle
mov
int
sbb
pop
mov
cmpb
push
cmp
and
cwtl
aas
sub
sub
adc
push
jg
jnp
add
xchg
movsb
ret
jge
pop
jmp
dec
xor
jge
mov
pop
mov
clc
fwait
adc
repz
subb
and
aad
lods
jno
inc
jo
inc
jns
aas
jecxz
push
cmp
scas
in
rol
insl
xor
orl
lock
in
adc
mov
mov
mov
push
mov
push
add
push
pop
jg
loopne
push
or
or
mov
sub
std
divb
lock
sbb
jo
xor
mov
pop
jg
fcmove
cwtl
xchg
into
push
fs
loopew
iret
lods
push
pop
mov
js
out
stos
imul
les
icebp
mov
in
push
fstpl
mov
aad
rol
mov
push
fsubrs
adc
mov
loop
lret
mov
jge
mov
dec
jo
adc
pop
mov
int3
push
xchg
and
loopne
loop
push
inc
add
cmc
stos
fiaddl
xlat
adc
pop
repnz
pop
pop
test
test
repnz
ret
push
dec
sti
sbb
imul
mov
mov
inc
imul
les
pop
je
dec
mov
divl
ljmp
andb
ljmp
in
scas
jae
pop
xor
mov
aad
mov
mov
jmp
mov
or
lahf
mov
dec
stc
mov
push
adc
aam
cmp
data16
jne
stos
push
xor
or
pop
sahf
adc
fucomi
roll
pop
test
adc
add
jno
jmp
add
lahf
insl
cli
cltd
ret
nop
pop
mov
sbb
lds
ljmp
loop
sub
jnp
movsb
clc
lock
in
bound
cmpsl
sbb
mov
mov
inc
sub
and
lock
les
aam
rcr
cmpsb
mov
dec
shlb
pop
test
adc
test
ds
in
pop
ficomps
in
sbb
jnp
pop
orl
and
sub
fs
sahf
shl
dec
out
jo
jo
xchg
imul
sub
cli
mov
cltd
mov
dec
aam
add
sbb
jmp
xor
stos
lahf
mov
test
mov
xchg
push
movsl
pop
pop
inc
sbb
jg
sbb
lock
inc
test
dec
stos
pop
push
loope
add
in
or
xchg
repz
xor
imul
out
mov
fld
scas
js
push
jno
cmp
fldl
ja
mov
mov
sub
aam
mov
paddq
mov
lock
sbb
mov
popf
in
push
inc
add
outsb
cs
out
or
ds
mulps
pop
jmp
sub
les
mov
shrb
out
add
mov
pop
dec
mov
pop
pop
imul
pushf
aas
mov
pop
pushf
pop
mov
mov
test
pop
push
mov
sahf
popa
mov
sahf
lea
pop
popf
mov
pop
push
and
int3
cmc
add
and
std
mov
in
dec
pusha
aam
lods
cli
and
call
test
xor
inc
cmp
ret
int
loop
push
adc
xor
mov
mov
insb
dec
imul
cmp
frstor
pop
cli
inc
lret
push
sub
or
mov
xlat
dec
stos
stos
jp
jg
popa
daa
gs
xor
xor
cmpsl
push
insl
mov
fdivrl
test
mov
sti
or
xchg
mov
push
nop
outsb
sbb
jnp
sub
mov
negl
mov
mov
mov
mov
sbb
cld
fimull
ds
gs
sub
mov
clc
fists
and
mov
clc
and
call
mov
sbbl
pop
popa
jp
and
std
pop
jo
mov
sahf
enter
enter
fdivrs
stos
cs
sbb
sbb
jge
push
daa
inc
dec
fistps
jl
sub
je
cmc
sub
in
push
cli
mov
xchg
add
mov
mov
and
and
nop
push
pusha
sub
cs
jb
mov
mov
arpl
stos
add
ss
sub
movsl
jg
fistpl
and
pusha
adc
imul
loopne
jnp
pop
out
jmp
outsb
mov
call
push
int
scas
pop
mov
scas
adc
stos
cmp
pop
out
xchg
jl
cmpsb
int
or
xor
mov
out
mov
data16
xchg
mov
shl
sub
jns
xlat
scas
xchg
and
mov
lods
adcb
div
xor
xor
mov
inc
sbb
stc
xor
lahf
sbb
lock
sub
xorb
lea
aad
mov
incb
hlt
push
lea
dec
mov
insl
ljmp
or
outsb
fistps
sbb
push
sahf
push
push
xor
stos
jp
dec
sub
mov
jne
loop
and
into
std
fldl
xchg
adc
out
aaa
push
cmp
mov
xor
add
and
and
push
adc
aaa
inc
xor
shll
sub
inc
ljmp
dec
inc
iret
jp
leave
aas
hlt
push
mov
push
xor
lods
lret
sbb
outsb
mov
fs
inc
sub
add
mov
add
sub
ja
cmp
mov
dec
inc
xor
fldt
outsl
inc
cs
js
mov
clc
cmp
shrl
stos
xor
sbb
push
sbb
insl
arpl
fstpl
test
add
pop
inc
stos
inc
sti
xchg
push
testl
gs
dec
aas
std
scas
testb
mov
addr16
leave
xor
rcrb
sbb
mov
adc
filds
pop
shrl
dec
int3
inc
or
xchg
loope
enter
lret
cmp
lcall
dec
orl
and
sbb
fsubs
xchg
pusha
pushf
ret
les
or
out
les
cmpsb
inc
rcll
push
pop
push
sar
push
cs
shr
ss
lock
jb
std
inc
xchg
push
out
std
addr16
push
mov
pop
xor
rcrb
xorl
jb
jmp
scas
jg
adc
mov
rcll
loop
xor
fisubs
or
sbb
push
jae
and
sub
or
sub
ret
add
ja
dec
test
je
stos
and
out
push
not
mov
adc
cltd
or
imul
nop
jmp
mov
repnz
cmp
int3
outsl
fldenv
xchg
pop
xlat
sbb
je
lcall
sbbb
je
sahf
pop
lret
sub
jl
movsb
xchg
push
das
mov
sub
nop
in
adc
test
sub
xchg
arpl
hlt
iret
dec
test
loop
cmp
fidivrl
mov
rclb
push
mov
out
bnd
mov
jne
imul
add
imul
inc
dec
lods
sub
push
cmp
pop
iret
jl
xor
mov
lods
fimuls
mov
and
mov
or
les
fs
cmp
out
xor
push
or
and
xchg
jmp
mov
cmp
xor
in
mov
out
cmpsl
cmpsl
sbb
rorb
xchg
in
testl
addb
call
scas
mov
inc
outsb
in
sub
scas
push
fimull
dec
jmp
sbb
mov
xor
fcmove
jl
loopne
cmp
mov
inc
cs
cmpsb
sub
bound
mov
popa
xor
kmovw
sti
stc
cltd
loop
rorb
mov
lcall
ds
stos
xor
jecxz
stos
lret
and
fiadds
fcomps
adc
push
sti
cli
sbb
push
jp
cmpsl
adc
xchg
dec
fs
testb
call
ja
jmp
jl
mov
xchg
les
jl
inc
push
xchg
mov
in
fistpll
and
and
push
call
xor
rclb
mov
cmc
xor
rol
loopne
gs
xchg
dec
addb
shr
inc
je
mov
push
pop
pop
ja
sbb
in
jne
outsb
push
ret
mov
cmp
mov
stos
aad
sbb
jae
rep
daa
or
loope
mov
in
sbb
lret
mov
or
inc
add
in
imul
repnz
fwait
inc
mov
rolb
scas
dec
jns
popa
inc
add
fcomi
add
scas
cmp
mov
adc
popf
mov
push
stc
dec
adc
push
sbb
or
sti
jge
jbe
sub
scas
pop
adc
out
test
call
dec
mov
xchg
arpl
inc
ja
mov
test
push
jbe
lods
mov
sub
mov
dec
das
popf
popf
in
int3
cmc
nop
faddl
addl
int
daa
pop
scas
mov
cld
loop
add
jle
mov
mov
stc
or
gs
repz
fdivrl
mov
xchg
jg
xchg
cli
test
dec
es
scas
ss
loope
sbb
and
enter
cmp
leave
ljmp
clc
adc
mov
ret
nop
xor
cmp
xchg
movsl
jmp
xor
push
dec
sbb
push
xor
mov
imul
pop
es
and
es
pop
xor
pop
pop
out
mov
xor
aam
shr
pop
inc
dec
cli
pop
xchg
cmp
jbe
adc
or
sbb
xchg
mov
mov
addl
mov
stos
dec
push
cmp
cmp
imul
andb
push
xchg
inc
fldt
inc
xchg
fwait
pop
mov
adc
sbb
in
pop
mov
jp
int3
or
mov
mov
aad
inc
leave
pop
dec
jno
dec
mov
pop
out
push
test
rcrl
push
rcr
pop
add
xorb
loope
jno
or
stc
arpl
push
and
push
xlat
pusha
cmpsl
mov
ljmp
clc
mov
push
sbb
pushf
jmp
roll
jnp
jecxz
insb
pop
dec
ret
ret
push
inc
ret
pop
pop
inc
inc
dec
cwtl
mov
cmp
rcll
xor
sbb
inc
xchg
jno
or
sarl
jg
fucom
aam
mov
mov
add
stos
fs
push
xlat
xor
jle
cmp
push
cld
cmp
aad
add
cltd
aaa
mov
movsl
or
add
movsl
push
or
test
popa
sahf
orl
into
pop
hlt
and
imul
cld
mov
pop
jns
push
adc
int
mov
inc
push
inc
jp
les
jae
pop
fwait
dec
icebp
mov
leave
imul
xchg
mov
xorl
inc
adc
cld
cltd
pop
add
add
xchg
cli
or
jecxz
mov
dec
push
daa
jae
pop
pop
mov
add
push
jo
icebp
pop
fsts
push
out
push
mov
jae
stos
fwait
arpl
inc
stos
xchg
cmp
cltd
test
xchg
hlt
xlat
dec
sbb
mov
push
pop
xchg
jg
inc
popf
inc
adc
jg
std
add
dec
sub
jmp
mov
mov
ja
inc
jnp
imul
xchg
test
cld
jle
push
inc
mov
pop
sub
pop
lcall
in
xchg
add
les
add
icebp
out
inc
and
test
or
cmpsb
cmc
jl
hlt
arpl
or
add
mov
xchg
mov
vmovups
mov
dec
outsb
sbb
out
mov
pop
scas
rolb
sub
adc
mov
or
jns
stos
enter
enter
or
jmp
jo
dec
sub
mov
es
ds
cli
in
jmp
scas
dec
out
arpl
lock
je
xchg
mov
pop
and
movsl
cwtl
sub
dec
and
mov
mov
lods
and
mov
push
aas
das
ljmp
inc
pmullw
into
jp
xchg
imul
data16
mov
stos
mov
insb
mov
pop
or
aam
cld
push
hlt
pop
adc
insb
jg
adc
cmp
or
les
insl
gs
mov
jmp
jle
jne
xchg
fsubl
in
or
jne
je
xchg
push
push
test
cmp
iret
outsl
or
adc
iret
and
xlat
jbe
scas
lahf
out
pusha
in
add
xchg
lcall
xlat
dec
lret
subb
lret
jno
das
push
lock
xor
into
shl
jmp
leave
fld
push
out
and
or
sbb
push
jle
add
jl
cmp
pusha
rclb
daa
mov
dec
pop
mov
aam
test
jns
mov
add
pop
jmp
adc
idiv
jo
cmp
inc
enter
pusha
mov
xchg
enter
je
xchg
inc
or
or
and
cmpsb
dec
adc
push
jne
jmp
xchg
mov
mov
call
les
pop
out
xchg
mov
mov
or
cwtl
sbb
push
outsb
or
pop
test
mov
int
mov
mov
and
xchg
in
fimull
push
sbb
fidivrs
ret
data16
mov
shlb
inc
cli
xor
fwait
and
push
xchg
mov
pop
bound
daa
pop
inc
sub
and
push
push
xor
sbb
pop
rclb
mov
cltd
xchg
add
lock
mov
stos
dec
mov
mov
cs
into
ljmp
mov
xchg
push
mov
or
inc
add
or
leave
sbb
scas
dec
loopne
cwtl
sbb
lods
loop
cmp
lcall
or
jg
push
dec
mov
sahf
jg
jmp
adc
aaa
stos
dec
mov
lcall
andl
lret
test
cltd
cltd
int
cs
fs
rcrb
jp
scas
and
inc
aas
dec
cmpsb
dec
cltd
xor
push
mov
inc
mov
sbb
je
sub
aaa
sub
repz
xchg
xchg
xchg
add
push
mov
lret
leave
sub
adc
adcb
and
iret
rclb
sarb
pop
enter
sub
mov
cmp
test
xor
pop
leave
mov
js
cmp
push
push
lcall
xor
das
sub
lret
addb
dec
test
scas
push
jbe
dec
mov
push
jmp
loopne
pop
mov
stos
jno
push
pusha
das
adc
add
fldcw
cmpsb
mov
or
pop
lock
inc
inc
sub
sbb
add
test
xor
sarl
outsb
aad
mov
lret
mov
pushf
push
ret
inc
push
in
push
add
popa
lock
lahf
jo
test
nop
sbb
mov
pop
test
xor
aas
ss
mov
push
std
cmp
call
fsubrl
inc
icebp
or
mov
inc
jmp
xor
xchg
sub
sub
daa
cmp
movsb
cmp
jb
xchg
sbb
sti
aaa
push
cmpsl
and
jb
and
popf
or
xchg
lock
std
jle
cltd
stos
jle
jl
jbe
cltd
mov
jle
xor
mov
and
jle
ds
icebp
iret
lcall
fimuls
test
dec
mov
icebp
cs
popf
cmp
fwait
and
es
int
and
mov
loope
mov
pop
dec
mov
pop
cmp
pop
stos
dec
int
nop
push
mov
fisubrl
pop
xchg
inc
aad
mov
sbb
fld
fidivrl
icebp
mov
mov
insb
push
add
mov
sahf
lcall
and
adc
aam
jmp
dec
out
imul
xchg
ret
adc
jb
arpl
inc
jo
fsubr
sub
iret
mov
push
lea
jb
fs
xchg
sar
mov
rcrb
mov
mov
cld
test
jle
xor
inc
xor
push
fadd
inc
mov
in
pushf
out
cld
jae
sbb
pop
out
iret
pop
mov
rcrl
jge
std
arpl
lcall
add
iret
xchg
sub
and
push
and
std
call
into
inc
inc
push
ja
mov
fsubs
xlat
jnp
das
push
dec
adc
stc
leave
dec
je
test
mov
nop
lods
and
cmp
mov
xchg
sub
jb
cmp
mov
fcmovnu
out
int
or
pop
iret
aaa
cmc
int
lahf
cmp
enter
lea
and
cmp
insb
pop
jl
dec
js
mov
pushf
enter
call
sub
cmp
or
sbb
insb
pop
jl
dec
js
mov
pushf
enter
call
sub
cmp
or
sbb
insb
pop
jl
dec
js
mov
popf
enter
call
sub
cmp
or
sbb
insb
pop
jl
dec
clc
pop
ja
addr16
add
add
xor
and
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsb
jge
dec
scas
pop
mov
sub
nopl
int
fnstsw
lods
dec
mov
jg
jge
and
cmp
in
paddw
das
fnstsw
in
dec
mov
jg
lahf
fildll
pop
fists
out
sbb
pop
movsl
dec
mov
xor
sbb
xor
dec
shlb
or
sti
stos
xchg
into
pop
xchg
jp
mov
mov
mov
int
fadds
dec
mov
mov
dec
and
lea
bound
xchg
xlat
cmp
in
jl
add
repnz
loopne
out
ffree
mov
nop
mov
sbb
arpl
fcomip
pusha
sbb
jae
shlb
outsl
push
and
popf
repnz
outsl
jo
insl
sub
inc
ror
mov
xchg
xchg
jl
repz
int
cwtl
call
nop
xchg
repnz
sbb
pusha
dec
leave
mov
push
repnz
inc
aas
sub
and
cwtl
lea
jle
sub
leave
iret
inc
fisttps
packuswb
mov
dec
mov
mov
loopne
lahf
cmp
and
fistpll
sbb
imul
shrl
insl
clc
and
cmp
inc
xchg
clc
cwtl
dec
decl
dec
movsl
push
aam
shlb
or
das
add
adc
sub
push
fidivrl
cmp
in
paddw
int
fnstsw
lods
dec
mov
jg
jge
dec
scas
pop
mov
or
paddw
int
fnstsw
lods
dec
mov
jg
fcmovnbe
sbb
aad
arpl
push
inc
scas
mov
cli
xor
inc
and
fstpt
dec
rcll
xlat
add
out
imul
cli
jo
shll
lret
cmp
dec
ret
jnp
dec
lock
aad
shl
mov
fs
or
orl
inc
dec
stos
and
jg
sub
adcl
xor
icebp
repnz
sub
push
rorb
sbb
fimull
lds
sub
mov
fisubl
adc
pop
sahf
add
jb
xchg
push
jmp
addr16
scas
push
shrb
xorl
jae
push
sbb
xor
cld
jo
push
and
inc
jae
mov
or
lcall
cmp
sahf
rolb
ret
std
icebp
add
je
pop
mov
mov
jle
aas
pop
or
pop
cmpsb
mov
and
adc
int3
adc
ss
or
lock
cmpsb
pop
push
jge
xor
inc
ja
sub
mov
les
pop
pop
mov
popa
mov
xchg
pop
cmp
or
loop
lods
xchg
add
xor
mov
int
sub
push
add
sbb
inc
ljmp
mov
std
sbb
mov
or
xorl
filds
xchg
mov
arpl
jge
dec
fisttpll
pop
adc
push
leave
jecxz
adc
jge
jle
aaa
movups
adc
stos
sbb
sbb
or
and
add
call
sbb
out
and
push
dec
inc
sub
push
pop
jecxz
iret
push
or
nop
enter
std
iret
dec
loope
xor
mov
mov
sub
or
insl
inc
cmp
lret
jae
push
loop
or
xlat
or
or
pushf
lret
jno
call
cmc
adc
aaa
adc
xchg
inc
stos
icebp
and
mov
sub
test
das
repnz
push
dec
aam
and
lret
adcl
add
cs
xor
cmp
sub
out
stos
jmp
hlt
rorb
andl
cmpsl
idivl
or
jno
add
jmp
jl
add
lret
mov
rol
fcomps
ja
in
rcrb
mov
js
outsl
fisubs
push
dec
cltd
xchg
dec
pusha
add
sbb
and
jg
leave
pop
std
in
mov
data16
lret
push
jg
call
sub
xchg
push
lds
arpl
orb
mov
loop
shlb
es
movsb
lods
popa
and
mov
pop
inc
or
mov
sbb
gs
add
movsb
scas
cld
arpl
aad
inc
lds
sbb
in
push
adc
cmp
sub
call
stos
insb
mov
xchg
cvtdq2ps
mov
cmp
mov
cmp
rcr
flds
adc
pop
cmp
mov
or
lock
dec
hlt
loop
jae
xor
loopne
cli
xlat
push
ret
mov
sub
rcrl
outsb
outsl
pop
fimull
fcmove
inc
dec
out
fwait
push
jns
repnz
test
je
xor
xor
cmp
addr16
rcll
and
inc
addr16
xchg
je
pop
pop
xchg
dec
xchg
cltd
push
imul
insl
dec
jnp
pop
sub
std
pop
orb
sbb
pushf
sarb
push
dec
mov
mov
out
out
or
dec
sub
fcomi
or
pusha
ja
ret
add
scas
fldenv
mov
out
cmp
dec
mov
ja
mul
mov
inc
popa
and
lea
mov
mov
lods
loope
sub
test
shll
in
and
out
pop
cmpsb
ja
fwait
adc
lahf
insl
scas
fs
mov
xor
cmpsb
out
call
inc
xor
ret
out
scas
xor
jecxz
aaa
mov
sbb
push
mov
push
jnp
js
ror
stos
fnstsw
inc
hlt
add
and
mov
push
lods
aas
adc
inc
jmp
and
push
std
loop
cs
test
cmp
and
divb
mov
sbb
cmc
sub
pop
nop
clc
jl
push
aaa
jg
pop
repz
cmp
xchg
testb
je
insl
and
inc
shlb
sub
loop
xor
addr16
jo
dec
loopne
mov
out
loop
repnz
daa
sbb
ror
adc
arpl
gs
arpl
scas
xchg
movsl
stos
insb
adc
jb
aad
mov
sbb
mov
xor
jo
outsb
enter
leave
adc
lret
imul
or
sahf
fmul
and
outsl
inc
int
out
sub
lret
mov
push
xor
test
adc
mov
std
filds
jns
hlt
pop
mov
stos
mov
rol
cltd
mov
pop
daa
sarb
inc
mov
fxch
jge
fs
mov
inc
flds
int
push
mov
add
push
shr
test
adc
pop
push
insl
call
adc
ds
rcl
out
inc
mov
jae
jbe,pt
mov
jno
xchg
push
and
lea
mov
popa
sbb
xorl
xchg
int3
jle
xchg
jns
ljmp
mov
cmp
jno
or
dec
xchg
addr16
jae
mov
leave
out
add
pushf
ret
insb
jmp
ficoms
mov
ja
out
aas
fmulp
adc
lret
cmp
mov
jge
sarl
push
movsl
pusha
cmpb
or
add
cmp
movsb
lret
pop
mov
cmp
jns
imul
cmpsl
movsb
aaa
test
mov
sub
push
mov
das
call
add
mov
mov
ret
ds
jg
add
push
cmp
xchg
fcmovnb
sub
jo
mov
dec
test
pop
std
xor
adc
ret
pop
and
and
jns
mov
fidivrs
imul
pop
mov
mov
pop
fisttpl
jns
repz
push
sub
xchg
xchg
xchg
sub
adc
cli
leave
mov
out
inc
jge
fstps
xchg
jno
xor
and
movsl
push
xor
mov
pop
fstpt
test
outsb
inc
cmp
loop
jmp
adc
and
adc
filds
adc
sbb
js
or
movsl
mov
mov
rorl
hlt
mov
mov
in
mov
rolb
push
lret
xchg
pop
stc
xlat
xlat
mov
mov
sti
xchg
push
rcll
sbb
add
ficoml
bound
xor
lea
cmp
insb
jecxz
mov
add
aas
push
dec
mov
or
test
hlt
repnz
cmp
push
jno
and
aam
cmp
cld
xor
jo
jne
jl
jnp
in
jno
test
push
xor
cmpsl
mov
push
jae
scas
mov
into
sub
loope
or
loop
mov
ret
add
loopne
rcrb
test
jae
cld
sub
or
fsub
loope
in
or
lea
ret
add
and
das
ss
mov
inc
fsubs
nop
int
jbe
inc
xor
bound
push
sarb
outsl
jg
and
roll
pop
jne
jne
push
adc
cmp
mov
je
jbe
gs
push
xchg
lods
sub
sub
dec
xor
mov
rcl
ljmp
xchg
mov
adc
dec
mov
out
daa
loope
cli
out
cmc
aaa
std
insb
inc
imul
inc
cmc
inc
mov
and
or
jbe
lds
dec
pop
rorb
cmp
incb
mov
dec
fs
push
std
xlat
push
jae
xor
push
jl
jg
and
call
sbb
pushf
lds
fildl
into
mov
and
push
mov
push
xchg
popa
sbb
pop
out
fldcw
shr
sbb
and
rcl
jmp
inc
sahf
push
sub
ret
dec
cld
pop
loop
shlb
jecxz
int3
pop
subb
stos
addl
xchg
jbe
lahf
xchg
push
lds
shl
in
mov
int
cld
xchg
push
arpl
sbb
loope
push
adc
xchg
mov
jo
iret
test
sahf
pop
int3
inc
xchg
les
into
cmp
decl
flds
sub
lret
dec
popf
push
mov
in
jno
dec
push
xor
test
pop
mov
xor
cmpsl
arpl
push
mov
ds
jns
hlt
cmp
xchg
pop
pop
jae
jb
into
subl
push
push
xchg
xlat
jnp
inc
sahf
mov
mov
xchg
rcl
movsb
cmpsl
xchg
sbb
addr16
out
jo
and
in
pop
jne
lds
cli
pop
xchg
dec
inc
imul
adc
jne
jmp
adc
add
daa
dec
jae
fstp
fwait
vmovmskps
jmp
out
inc
pusha
and
lcall
sbb
push
pop
fisubl
insl
in
xchg
push
jb
inc
mov
mov
fdiv
shll
push
outsl
cmp
jl
cmp
cmp
cli
dec
mov
and
mov
in
ret
rolb
adc
jg
leave
andl
stos
iret
push
dec
lock
mov
adc
sub
xor
int3
gs
arpl
xchg
mov
fisubrl
inc
cli
adc
gs
rolb
cwtl
dec
jbe
mov
ja
imulb
cmp
sub
sbb
cmp
cmp
xchg
mov
jge
shl
push
out
jg
inc
arpl
daa
loopne
or
ret
sub
hlt
fwait
push
mov
jg
mov
jle
mov
push
pop
sbb
add
or
cmp
je
stc
mov
sub
out
cltd
dec
stc
jae
in
jae
incb
sbb
ficomps
in
addb
or
dec
add
push
pop
sahf
mov
fcoms
out
mov
addr16
cmp
in
xchg
cld
push
mov
outsl
xchg
mov
fiaddl
leave
out
out
lods
lock
stos
ja
fisttpll
dec
stos
fwait
inc
mov
out
adc
movsb
push
outsb
scas
cmpsb
jne
inc
sbb
adc
and
sbb
movsb
fcompl
stos
test
mov
add
add
pop
out
mov
jbe
adc
jo
scas
lock
lods
push
mul
sub
cld
aam
dec
int
iret
aas
es
jo
sbb
jl
fptan
sub
or
ljmp
mov
jle
rcrb
inc
out
mov
inc
or
dec
icebp
inc
push
and
aad
test
xor
add
popf
dec
cli
imul
sbb
je
test
xchg
push
push
stos
mov
loopne
add
sbb
stos
mov
xor
int
inc
repz
and
lea
inc
sbb
and
xchg
mov
add
jnp
popa
orl
xchg
push
movsl
adc
scas
mov
rcrl
pop
daa
adc
pop
in
xor
in
movsl
jo
pop
mov
jecxz
mov
outsb
mov
mov
lahf
movsl
testb
out
cli
repnz
push
jle
mov
pusha
cltd
movsb
ret
call
je
cmc
out
cwtl
mul
fnsave
insl
clc
xchg
clc
popa
mov
pop
pusha
inc
cmp
jg
cld
sub
pop
xor
negb
popa
push
nop
xchg
xchg
push
mov
int
cwtl
sub
sahf
mov
jmp
outsl
mov
or
sbb
outsb
test
std
out
mov
nop
cmp
cs
sbb
nop
jecxz
fwait
cmp
mov
dec
pop
push
outsl
xchg
das
mov
push
imul
mov
mov
xor
inc
fucom
pop
addb
add
inc
pusha
mov
mov
pop
icebp
ss
dec
psubw
aas
ret
ret
xor
inc
scas
add
and
sub
negb
push
jnp
loopne
movsb
pop
add
stc
xor
pop
inc
and
jbe
cs
movsb
dec
cs
mov
lods
push
mov
mov
pop
test
xchg
movsb
mov
nop
shlb
mov
cmpsl
shlb
out
clc
inc
or
mov
inc
mov
xor
pop
call
mov
dec
cmc
jnp
sbb
xor
dec
aam
or
iret
aas
shlb
dec
sub
sub
rol
lods
sahf
sbb
lcall
sub
out
imul
pusha
add
loope
sub
jle
sub
mov
outsl
and
cli
adc
icebp
sti
or
add
inc
jnp
jne
dec
adc
shlb
dec
or
cltd
fld
mov
xor
pop
xor
imul
cli
stos
xchg
sub
add
out
shll
and
lret
shrl
adc
call
stos
xor
jnp
lcall
xor
dec
dec
dec
mov
sub
xlat
xor
inc
mov
sub
xchg
mov
push
pop
push
and
jb
ret
jbe
mov
mov
stos
pop
pop
cmp
or
rcrl
adc
jo
mov
mov
add
mov
subb
or
mov
xchg
in
jp
mov
rol
sahf
lods
jno
and
push
mov
jb
mov
pop
mov
push
in
cmp
test
xor
movsl
jne
loope
jmp
pop
sub
jecxz
inc
jecxz
icebp
add
pop
aas
ljmp
xor
sub
shrb
repnz
mov
mov
pop
push
push
fsubrl
push
aam
int
sbbl
lea
popa
jb
adc
mov
cmp
daa
lcall
jbe
cmp
jno
xor
add
out
mov
sbb
or
sbb
xchg
jns
lcall
xchg
jge
xchg
jns
push
mov
cmp
aam
aad
scas
pusha
add
lret
jp
shll
dec
cmpsb
push
sbb
fwait
jmp
andl
pop
jno
push
mov
xor
lea
mov
loopne
dec
movsb
loop
movsl
and
add
inc
scas
icebp
sbb
mull
leave
jb
sbb
mov
icebp
push
jnp
jg
push
aad
stos
addr16
pop
iret
jno
xchg
pop
sub
mov
jne
and
loopne
stos
mov
inc
enter
mov
pop
pop
scas
xchg
fisttpl
push
xchg
mov
mov
sub
mov
jg
push
mov
int
inc
test
es
pusha
xchg
aad
mov
pushf
inc
dec
cmp
aam
dec
cmp
sbbl
push
subb
mov
adc
mulb
jbe
out
push
ret
insl
jae
mov
std
add
loop
push
or
cmp
outsb
or
or
or
jnp
hlt
xchg
test
and
mov
int3
pushf
mov
cli
inc
cld
sahf
fisttpl
mov
sbb
pop
add
add
sti
xchg
loop
xor
jl
add
je
fcompl
jnp
jne
and
sbb
in
sahf
shlb
notb
orl
or
mov
xchg
int
cmp
roll
sub
inc
jmp
pop
das
or
push
xor
out
pop
xor
insl
test
mov
insb
iret
cmp
inc
out
filds
scas
int3
xchg
icebp
divl
xor
jno
xchg
and
cmc
xlat
fadd
mov
jne
outsl
sub
dec
push
dec
sub
inc
mov
out
mov
xchg
xor
mov
sub
push
pushf
popf
xchg
arpl
stos
sub
test
sub
nop
cli
inc
iret
push
pop
jno
dec
sub
mov
or
stc
movsb
cwtl
jne
insb
mov
mov
or
pcmpgtb
icebp
in
xor
out
cmp
cmp
xchg
scas
mov
ljmp
push
pop
addl
arpl
cmpsl
jg
mov
dec
pushl
mov
shll
and
push
bound
sarl
adc
sub
push
inc
push
lock
nop
pop
or
sub
adc
ret
lods
lds
lods
roll
lahf
inc
or
add
ret
jge
jg
cmpsl
jp
mov
push
or
dec
pushf
push
in
pop
pop
cmp
movsb
cmp
lea
jl
jbe
jae
lcall
cli
rolb
and
jb
pop
sbb
xchg
mov
mov
aam
test
xrelease
jl
fsubrs
or
lods
repnz
mov
into
dec
or
or
push
es
lds
cmc
jmp
cmpsl
inc
inc
test
jb
cwtl
xor
das
orb
shll
call
cmpsl
sub
push
mov
nop
xchg
push
inc
pop
popa
fstl
mov
int
cwtl
fsubl
xorl
leave
push
cmp
mov
fwait
hlt
fnsave
sbb
ret
push
mov
stos
cmp
sub
fnstcw
jge
jecxz
sar
inc
inc
lods
mov
mov
iret
cmc
cs
popf
mov
push
imul
or
roll
push
sub
imul
or
mov
push
mov
in
mov
mov
in
out
pop
out
sub
popl
push
and
sti
sbb
std
pop
shll
pusha
ret
lods
jo
pop
xchg
sub
mov
loopne
les
push
ss
sbb
fidivs
cmpsl
jne
xlat
xor
jmp
scas
sub
in
jns
fsubrs
sub
sbb
sbb
call
adc
jnp
push
stos
rcrb
jmp
dec
sub
pop
in
pop
lods
fistl
push
xchg
mov
popf
mov
sbb
cmpsl
fadds
notl
mov
cmp
mov
mov
ljmp
bound
xchg
das
adc
insb
stos
cmp
or
fs
push
mov
movsl
pop
movsl
out
das
cltd
mov
test
xchg
and
and
pusha
addb
iret
int3
dec
mov
mov
or
ss
outsb
pop
add
inc
cltd
sbb
inc
ja
pop
ljmp
jne
pop
jb
jns
xchg
lds
imul
cmp
fisubs
test
aad
pusha
cld
ret
sub
mov
or
outsb
pop
mov
repz
pop
stc
repz
test
loopne
cmpl
call
data16
jmp
movsb
or
push
sarl
add
call
pop
rcr
and
fs
cmc
and
mov
sbb
arpl
in
je
and
mov
loope
outsb
jo
mov
lods
clc
mov
adc
jb
push
jle
push
or
xchg
pop
nop
jno
iret
and
sub
inc
enter
orl
pop
or
mov
insb
pop
iret
and
pop
lods
xchg
aam
dec
adc
sub
in
clc
aad
push
cs
add
arpl
cmp
jb
add
add
mov
adc
adc
mov
in
pop
or
jmp
and
or
rcrl
dec
inc
out
sbb
clc
sahf
test
add
repnz
lahf
fcompl
pop
and
fdivl
mov
lret
pop
rcll
sub
in
jge
cmpl
outsl
lret
lods
mov
cltd
push
jmp
xor
shrl
jb
cmp
sbb
adcb
rcll
fisttpl
shrb
pop
jecxz
movsl
clc
and
out
inc
or
rcll
fistps
jp
repnz
mov
scas
imul
pop
ficomps
adc
push
xchg
scas
insb
and
adc
fldt
ret
hlt
mov
fcmovb
add
std
xor
sahf
xchg
repz
hlt
inc
jl
adc
or
cs
clc
rcll
adc
std
xchg
in
push
shrl
add
incl
in
jno
xchg
and
aam
in
xchg
jb
mov
orb
and
repz
mov
cmpsb
loope
xor
mul
test
in
loopne
xchg
rsqrtps
je
mov
pop
lds
loop
lock
iret
repnz
add
int3
jns
int
inc
cmp
std
xchg
dec
int
addr16
inc
iret
jmp
movsl
xchg
push
mov
sub
lds
push
sbb
push
mov
mov
cmpsl
push
mov
data16
mov
inc
adc
mov
je
in
xchg
sbb
loope
int3
or
or
inc
ljmp
inc
rolb
in
mov
fistl
xchg
pop
ret
xor
or
cli
push
test
in
stos
int3
js
and
out
pop
test
mov
out
mov
sub
cmp
fstpl
lods
cmc
or
and
in
shll
rcl
popa
nop
in
jno
inc
mov
lds
adc
scas
xor
adc
push
addb
int3
xor
int
lahf
or
cmp
in
paddw
int
fnstsw
lods
dec
mov
jg
jge
dec
scas
pop
mov
or
paddw
int
fnstsw
lods
dec
mov
jg
dec
pop
sub
iret
cmp
in
std
pop
cmp
dec
lods
pop
lea
jg
and
sub
out
popf
in
lar
fcmovb
xor
xorb
adc
nop
daa
loope
cmc
movsl
in
cmp
hlt
pushf
aad
aad
and
adcl
jmp
or
jno
inc
aad
and
sbb
mov
movsl
and
arpl
xor
lock
rolb
out
out
push
or
stos
mov
mov
cli
jmp
mov
mov
outsb
fs
jp
iret
and
rcr
dec
int
sbb
je
cs
sub
call
popa
or
and
roll
push
pop
xchg
xor
xchg
loop
xor
xchg
gs
pop
shll
jae
test
jge
add
mov
lret
jl
outsb
sarb
inc
add
int
shlb
xchg
loope
or
pop
xor
inc
test
xchg
rcrb
arpl
xlat
sbb
or
xor
lods
aam
jp
xor
xchg
gs
icebp
inc
rcll
and
sub
lds
arpl
jno
imul
adc
bound
inc
ljmp
push
test
mov
divl
pop
std
add
sub
inc
std
push
lock
and
and
sbb
in
xor
icebp
inc
rcll
and
adc
popa
cmc
jno
inc
aad
and
adcl
shll
add
jno
inc
aad
and
cld
inc
jg
xchg
aaa
push
in
dec
push
nop
enter
mov
nop
mov
dec
pushf
fcomip
cmp
pushl
and
scas
sub
sub
fisttpl
jle
icebp
sqrtps
lahf
call
xlat
xchg
popf
in
mov
add
push
movsb
sub
dec
xor
pop
adc
fistpl
mov
jae
mov
in
insb
xor
imul
xor
sbb
shll
cmpsl
mov
push
outsb
lds
mov
cmp
aas
mov
fwait
push
pop
movsl
jno
loopne
inc
adc
adc
jl
pop
jl
jecxz
push
mov
or
mov
xor
jl
rorb
add
adc
sub
aas
mov
fnstcw
xchg
or
jno
cs
daa
push
add
push
lods
inc
mov
mov
jmp
cld
xor
inc
ror
shlb
xor
adcl
popf
popa
in
adc
out
dec
or
repnz
enter
dec
fidivs
add
pop
mov
and
stc
lret
daa
outsl
mov
push
sbb
in
add
mov
jp
or
lret
sub
ret
dec
adc
push
push
push
jl
xor
mov
push
dec
mov
sbb
cs
std
in
push
cli
leave
push
xchg
sub
and
popa
pop
inc
ret
jg
int
mov
mov
mov
mov
cmp
mov
in
inc
or
mull
jnp
call
es
stos
sub
lcall
lret
push
mov
mov
test
jae
out
jg
nop
add
inc
jp
xlat
dec
shlb
or
movsl
lret
popa
cwtl
jns
cmc
jp
inc
repz
and
and
and
mov
pop
cli
and
lea
leave
out
cmpl
jo
cmp
ds
in
hlt
xor
testb
cmpsl
fwait
and
outsl
ss
pusha
and
pop
lret
add
pop
scas
jecxz
lds
fstl
stos
lock
fistl
mov
mov
daa
dec
cs
pop
test
mov
inc
push
enter
jg,pn
xor
or
sbb
ret
sarb
outsl
jl
fs
cld
sbb
dec
cli
js
data16
aam
jne
cmp
popf
popa
push
jae
ss
subb
idiv
jnp
out
and
push
ss
notl
inc
ss
jo
data16
mov
ret
incb
pusha
icebp
and
aaa
add
loop
std
scas
cmpl
outsb
adc
jl
add
std
jnp
or
in
xchg
sbb
lds
stos
lret
jb
fisttps
or
cwtl
dec
pop
out
pop
push
xchg
and
enter
inc
push
inc
addl
test
dec
and
push
enter
pop
cmp
test
repnz
mov
pop
js
fistps
jne
push
lcall
in
das
mov
mov
dec
lea
subb
pop
add
faddl
fld
rcll
cmpsl
mull
lds
cwtl
fidivl
xor
popf
out
mov
movsl
jl
fsts
or
push
ja
sub
sets
scas
sub
jae
popf
shlb
xchg
and
ret
ds
into
xchg
and
cmp
jbe
enter
dec
clc
dec
test
mov
in
cld
sub
inc
sbb
mov
orb
sahf
dec
pop
out
ja
fwait
sbb
mov
mov
std
iret
in
jp
out
dec
or
loopne
mov
inc
imul
push
lods
ret
dec
mov
jnp
inc
mov
addb
test
xchg
pop
push
fldenv
add
popa
dec
daa
popf
mov
addr16
sbb
ds
neg
mov
adc
mov
insl
loope
aam
cli
cmp
pop
repz
imul
sahf
je
mov
sbb
adc
pusha
xchg
jae
jns
lahf
mov
andl
mov
mov
inc
adc
mov
dec
cmp
push
or
inc
insb
dec
push
pusha
cli
in
insb
xchg
sbb
add
sub
ss
cli
push
cli
js
pop
jb
xchg
sbb
jl
pop
xor
fisttpll
push
repz
push
or
out
ljmp
mov
aad
iret
cli
add
leave
adc
and
js
into
sbbl
and
inc
out
stos
and
scas
add
pop
repnz
sub
jbe
pushf
gs
sbb
aaa
mov
push
and
pop
stc
or
jl
jge
pushf
mov
add
aam
xchg
push
rol
inc
jl
dec
test
out
pop
inc
mov
outsl
adc
and
leave
inc
mov
adc
sbb
and
mov
aas
jns
mov
aas
fs
sti
in
add
frstor
jge
mov
add
fcomp
out
cmp
data16
or
sbb
shlb
mov
call
data16
jno
jbe
sti
mov
pop
shlb
xchg
inc
xor
movsb
js
xor
inc
lods
or
jb
outsb
adc
jno
sarl
sarb
sbb
dec
movsb
scas
xrelease
mov
ret
adc
inc
add
paddb
mov
jecxz
repnz
mov
rep
mov
stos
fwait
ret
mov
xchg
and
movsl
gs
or
or
stc
pop
out
and
mov
mov
scas
pop
scas
pop
jmp
and
add
sti
adc
inc
cmpsl
loope
adc
leave
xor
and
xor
sahf
ja
xchg
sarb
leave
out
call
arpl
fmull
and
in
mov
pop
jp
inc
xlat
cmp
pushf
pop
and
mov
xor
xchg
jg
fnstcw
mov
psubsw
jl
lea
sub
cmp
sub
mov
aad
pop
aam
into
cmc
push
or
shlb
pop
xor
xchg
insb
sbb
lahf
cmp
hlt
xor
mov
lret
sub
outsb
ds
in
scas
mov
xlat
scas
loope
sahf
aam
imulb
and
imul
pop
rcrb
icebp
jae
xchg
and
lcall
adc
in
inc
dec
cs
pusha
ror
out
int
cmp
cli
add
std
adc
mov
jne
ret
outsl
mov
sub
jl
mov
dec
add
lods
jns
or
cwtl
and
pop
inc
outsl
das
cmc
xchg
and
scas
push
mov
inc
xchg
jbe
repnz
add
mov
xorps
cmp
xchg
out
add
mov
mov
mov
push
mov
ret
adc
and
imul
and
push
dec
xor
ret
inc
mov
fcoms
jl
add
mov
movnti
dec
mov
lock
jo
xchg
adc
jp
daa
fmul
fstps
loopne
cmp
add
scas
mov
fbstp
cmpsb
add
pop
jns
push
outsb
pop
inc
das
mov
xchg
fiadds
push
xor
push
adc
adc
sub
mov
mov
aam
rclb
fnstcw
in
negl
pop
aam
lret
xchg
cmp
fiaddl
incb
fs
mov
leave
sbb
mov
aam
rcr
mov
sbb
imul
cmc
fcoml
pop
and
addl
push
mov
push
pop
jmp
push
stos
xor
jle
ret
sarb
mov
xchg
mov
xchg
cmpsl
mov
and
add
je
mov
in
and
insl
addl
sbb
cmp
fildl
es
sbb
cmp
adc
sbb
xchg
mov
mov
aam
mov
push
sbb
imul
js
sub
inc
xlat
not
jl
cmp
pushf
fimull
out
out
fldcw
fsts
aad
xor
pop
sub
push
js
push
pop
jle
dec
cld
push
mov
jnp
mov
xor
jb
mov
dec
sub
stos
xchg
dec
orb
imul
add
dec
push
je
adc
xor
mov
inc
jbe
or
loop
orl
and
bound
sbb
cmp
inc
aam
ficoml
cmp
in
ret
push
mov
push
lock
jle
addr16
js
inc
mov
mov
xor
popa
insl
fisubrs
add
sbb
lock
loopne
insb
mov
outsb
inc
sti
arpl
push
sahf
int
push
imul
iret
outsb
inc
push
pusha
add
jle
add
add
mov
push
mov
sarb
jmp
pushf
push
cmp
inc
and
movsb
popl
insl
ds
xchg
in
xchg
call
sub
dec
push
outsb
dec
pushf
popf
inc
jne
outsb
pop
push
int
mov
je
jb,pt
lret
icebp
inc
and
stc
aaa
dec
sbb
iret
insb
push
pushf
xchg
push
push
ja
inc
cmp
or
repz
pop
mov
ljmp
ja
mov
pop
into
test
dec
sub
fiaddl
cmp
xor
in
xchg
in
out
cs
filds
mov
shrb
js
clc
stos
mov
jmp
out
add
mov
ret
pop
nop
adc
mov
mov
adc
outsl
test
cmp
mov
les
add
sahf
fwait
push
inc
loope
push
jl
loop
movsl
movsb
je
and
xchg
cltd
iret
xchg
and
cs
and
jb
mov
xchg
ret
mov
cld
mov
rol
jg
mov
nop
push
test
gs
cmpsb
mov
out
dec
nop
nop
lock
ja
rorb
push
rcll
inc
das
mov
sbb
nop
bound
mov
rclb
pop
sti
or
int3
xchg
in
pop
cmp
add
mov
cld
fstps
mov
cmpsl
lock
sub
fstl
aad
repz
out
ret
mov
mov
lea
fidivrl
cmpsb
aam
jecxz
adc
xchg
cmp
cmp
xchg
and
ret
rol
xchg
push
pop
sahf
jp
push
sarb
push
lds
sbb
xchg
imul
mov
ror
aaa
cmp
popl
ret
pop
lods
sbb
into
and
andb
fucomip
popa
pop
rclb
ljmp
imul
xor
mov
adc
fs
in
xor
in
scas
or
mov
add
mov
dec
stc
jge
or
push
lret
fucomi
jbe
leave
imul
sbb
fmull
dec
jge,pn
push
out
leave
adc
mov
xchg
xchg
xlat
lods
iret
and
sub
lods
test
loop
dec
clc
lock
sbbl
testl
movsb
fsubl
inc
loopne
inc
dec
nop
ljmp
xor
icebp
cmpsl
inc
stos
dec
pop
ljmp
scas
outsb
das
mov
into
pop
inc
pop
push
dec
dec
or
pushf
or
xor
test
fidivl
and
enter
pop
jno
dec
add
jmp
and
mov
jno
cmp
outsl
fmuls
rorl
pop
ds
mov
push
xchg
dec
xchg
pop
push
arpl
mov
cwtl
jg
jb
lods
jg
fnstcw
xlat
aaa
jb
or
inc
mov
or
in
cmp
mov
push
mov
adc
add
adc
outsb
xor
mov
test
lret
aam
pop
out
adc
stc
cmp
or
sbb
mov
mov
cmc
shl
sub
mov
ja
notl
in
mov
cmp
push
add
movlps
or
jecxz
mov
mov
in
test
std
mov
in
jno
int3
nop
fnstcw
in
dec
cs
idivb
lods
push
dec
pushf
push
ja
adc
pop
or
push
mov
push
mov
arpl
pop
mov
andb
repnz
cs
aaa
out
lds
mov
dec
cmpsl
shll
pop
or
mov
pushf
aam
fdivs
mov
stc
subl
adc
dec
xor
xchg
or
orl
mov
inc
psrlw
in
push
stc
and
pusha
lret
test
or
ja
test
int
fsts
dec
inc
jp
sbb
inc
repnz
leave
xchg
addr16
fcmove
cmp
mov
scas
xor
jbe
arpl
push
ljmp
in
aas
dec
push
dec
pop
adc
or
arpl
fstpl
es
out
repnz
icebp
and
shlb
imul
and
popf
adc
sub
pop
adc
cltd
dec
gs
xchg
or
push
mov
cmpsb
clc
jle
adc
mov
repz
andl
lea
xchg
ja
icebp
leave
push
xchg
pop
fildll
xor
push
cmpsb
xchg
shrl
inc
ss
std
repnz
fs
mov
push
mov
push
in
cwtl
pop
fimuls
xchg
push
pop
and
loopne
fisttpll
insl
aam
adc
leave
mov
jb
xlat
or
mov
mov
mov
jle
lret
les
pop
aad
insl
rol
stc
xchg
daa
enter
lock
xor
and
popa
sub
push
cwtl
shl
pusha
fwait
mov
cwtl
mov
test
dec
gs
xor
loopne
inc
push
cmp
test
dec
loop
mov
psadbw
jl
clc
pop
pop
and
pop
mov
movsl
vmovntpd
jle
push
mov
shlb
push
jmp
mov
cmp
cmpl
stos
and
arpl
inc
jle
push
dec
xchg
sub
mov
cmpsb
outsl
mov
inc
shl
push
aas
sub
shr
int3
xor
lods
mov
push
and
insl
cmc
in
lods
lock
xor
cmpsl
int
in
adc
mov
mov
xchg
pop
push
cmp
fildl
mov
aas
pop
idivb
outsb
test
fs
mov
sub
pop
pop
movsb
push
jne
popa
test
int3
ds
and
ffreep
cmp
idivl
fcomi
or
aas
dec
cmc
lret
or
ljmp
loope
ds
stc
dec
das
cmpsb
mov
jle
or
cmpsl
and
aaa
lcall
sub
dec
sub
cmp
fdivl
inc
xlat
dec
data16
mov
leave
pop
lods
addb
addr16
and
das
int3
dec
and
dec
xchg
insb
ret
sub
aam
xchg
xchg
cmp
icebp
push
xor
xchg
fidivrl
mov
mov
xchg
aas
les
dec
lahf
cmc
out
lods
mov
pusha
adc
cld
inc
pop
sub
adc
mov
jne
mov
and
xchg
ret
xor
ljmp
cmpsb
xchg
std
or
leave
push
mov
sub
jo
int
pop
and
icebp
hlt
fs
frstor
adc
mov
inc
mov
push
aad
rsqrtps
mov
push
imul
fists
or
dec
xlat
outsl
addr16
cmp
pop
lods
mov
push
pop
nop
xor
in
pop
add
sbb
rorl
xchg
test
push
sti
mov
inc
pop
pop
or
jno
mov
pop
dec
es
push
inc
test
jno
fcmovbe
push
loop
mov
adc
outsb
adcb
subb
mov
adc
jecxz
add
xor
imulb
bound
mov
sub
mov
pop
pushf
dec
pmaxub
xlat
std
fwait
inc
xchg
jmp
xor
add
pusha
cmp
mov
into
lock
jbe
push
cli
cmpsb
scas
mov
mov
mov
test
stc
dec
sahf
mov
loop
shll
popf
and
pop
push
cmp
jo
fildl
push
cmp
push
daa
sbb
add
xor
sti
cmpl
xchg
xor
pop
loop
lea
int
scas
roll
cmpsb
je
mov
pop
dec
lock
add
int
into
adc
jb
lret
rcrb
jnp
mov
iret
xchg
adc
aaa
sub
fs
mov
mov
test
pushf
dec
in
push
push
pop
and
jo
fcomi
push
xor
xchg
lods
mov
fiaddl
dec
inc
push
out
add
mov
ljmp
sbb
xchg
ja
push
jno
sbb
out
popa
add
rorb
lods
jmp
pop
scas
rorl
cltd
iret
clc
in
iret
rcr
test
add
cmc
and
sarl
stc
movsl
mov
shrl
inc
jbe
loop
loope
adc
push
notl
inc
sbb
pop
cmc
cwtl
fnstsw
loope
or
push
pop
gs
xchg
dec
mov
lret
out
fdivp
xor
xor
pop
jecxz
mov
lds
mov
xchg
rol
xchg
inc
adc
cmpsl
imul
jne
sbb
sub
and
cmp
mov
dec
scas
mov
clc
push
jb
outsl
daa
pop
iret
test
push
pop
fstl
mov
or
cs
push
sbbb
adc
push
xor
xchg
data16
int
push
dec
jns
rcll
mov
adc
pop
xchg
jo
outsl
ffreep
enter
and
xchg
add
mov
gs
repnz
insl
in
adc
push
xchg
push
or
push
ja
mov
push
sub
pop
inc
xchg
test
stos
cmpsl
and
inc
aad
push
in
inc
sub
ret
popf
jo
std
or
mov
sbb
jg
xchg
lcall
sbb
jg
ret
arpl
lock
adc
cld
pusha
les
sbbl
push
dec
add
icebp
ds
mov
push
jge
jnp
mov
lea
sbb
cmp
mov
imul
adcb
pop
jl
sbb
data16
mov
aad
lds
scas
push
dec
pop
shrb
pop
sub
enter
cmp
rclb
nop
pop
insb
sub
inc
add
shl
jecxz
imul
jb
iret
mov
jne
jo
inc
out
adc
int
movb
xor
cmpsb
mov
cmp
adc
lods
lods
es
mov
xchg
test
stc
popa
jg
ss
and
fdiv
cmp
and
icebp
jl
out
push
inc
das
jb
mov
dec
mov
mov
add
jge
sub
mov
sub
xchg
xor
cmpsb
or
stc
dec
dec
add
pop
jo
fwait
lcall
icebp
cltd
push
aam
sarl
lods
adcb
sbb
sbb
pop
fs
or
mov
mov
fcoms
push
jmp
and
sub
sub
aad
rcrb
repz
es
inc
sbbl
and
sti
iret
cli
shrb
jo
cmp
or
movsl
cvtpi2ps
or
sub
xchg
push
push
out
shl
and
add
pusha
xchg
dec
lods
mov
test
and
aad
sub
inc
push
push
es
sbb
popf
adc
test
adc
or
fsubs
or
sbb
pop
push
in
pushf
fstp
in
lock
sbb
imul
lahf
inc
sbb
cmp
jbe
push
cmp
aad
mov
jo
dec
ja
adc
aad
push
mov
mov
nop
push
data16
incb
xchg
pop
cmp
cli
rcll
insb
dec
movsb
dec
adc
icebp
ret
cmp
out
movsb
jle
in
test
inc
ja
lock
inc
inc
lods
mov
inc
gs
xor
mov
jp
dec
fwait
sub
in
repnz
ja
and
inc
cmp
loop
addr16
and
inc
gs
dec
aas
lock
jno
inc
push
dec
fsubrs
push
jge
mov
jne
and
sub
in
jnp
lret
push
popa
aas
int3
les
mov
aas
and
pop
xchg
syscall
xor
push
outsb
movsl
sub
fucomi
inc
add
mov
sbb
cwtl
fmul
or
push
std
stos
pop
loopne
aam
out
les
aas
scas
and
dec
dec
xlat
insl
or
xchg
inc
movsb
nop
ret
fidivl
sbb
sub
cmp
lods
mov
add
and
iret
out
cmp
xchg
cmp
pop
ljmp
or
test
push
cmp
shr
sub
icebp
test
std
fstpt
shlb
lret
mov
xchg
pop
aad
scas
jecxz
imul
jbe
dec
inc
popa
mov
mov
pop
cmp
push
mov
mov
aaa
cli
enter
inc
imul
jmp
daa
pop
pushf
addr16
std
jge
sti
cld
negl
jnp
je
and
pop
pop
xchg
lret
pop
pop
and
mov
out
mov
dec
inc
das
call
pop
pop
cmp
imul
mov
shll
imul
fistl
push
mov
adc
cmc
xchg
pop
lock
add
push
jbe
mov
test
icebp
inc
rcll
and
adc
popa
cmc
jno
inc
aad
and
adcl
shll
add
jno
inc
aad
and
cltd
adc
lcall
mov
test
xchg
sbb
gs
jno
dec
aam
and
xor
add
adc
icebp
inc
inc
push
adc
add
or
cmp
sub
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
imul
iret
imul
fiadds
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
in
pop
add
and
pop
add
add
add
add
add
add
cmp
pop
add
adc
push
add
add
lods
add
add
add
add
add
add
data16
lods
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
inc
add
push
add
add
add
add
add
add
xchg
add
add
add
add
and
and
cmp
adc
add
mov
add
or
inc
add
add
jg
aad
add
in
add
xor
test
pop
add
add
add
add
add
add
jg
xor
add
add
out
add
add
mov
push
add
add
jno
ret
add
ja
inc
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
aas
add
add
add
add
pop
add
add
add
add
add
add
jg
push
add
add
add
push
add
add
add
add
add
inc
add
lods
add
add
add
movsl
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
xor
rolb
add
add
mov
add
add
add
test
inc
add
add
add
pop
add
add
add
or
add
dec
add
add
add
sbb
inc
add
mov
leave
add
add
sub
cltd
add
add
inc
add
test
lods
add
add
sbb
nop
add
add
add
add
add
add
add
add
add
jne
mov
pop
add
xor
sub
pop
add
add
add
add
pop
add
test
mov
add
or
int3
add
add
add
add
inc
add
sub
and
add
and
sub
pop
add
add
add
lods
add
add
add
loopne
pop
add
add
add
add
add
add
add
or
add
add
add
add
mov
pop
add
mov
add
add
cmp
add
add
add
in
pop
add
add
add
add
mov
add
add
add
cmp
or
add
xchg
add
add
add
add
add
addb
add
add
sahf
add
add
add
lea
pusha
add
xchg
add
pop
add
add
add
or
lods
add
add
xor
push
add
add
add
add
pop
add
add
and
xchg
add
and
addr16
add
add
add
add
push
add
add
jg
push
add
add
add
sbb
add
ds
leave
dec
subl
fs
imul
jns
adc
jle
mov
mov
insl
sub
sub
jbe
ja
mov
pop
std
inc
jne
enter
sti
int3
dec
jno
imul
lret
pop
mov
mov
jmp
out
mov
gs
mov
inc
scas
daa
iret
repz
ds
lcall
sti
and
mov
add
cmp
and
xlat
aad
adcl
and
insl
out
and
mov
jno
in
addl
push
fcomip
rclb
dec
cmp
push
dec
add
addr16
cmp
jns
push
pop
sbb
cmpsl
fwait
dec
js
aaa
aas
push
repz
xor
pop
mov
mov
hlt
xchg
mov
stos
fnstsw
jae
hlt
in
adc
movsl
push
rcll
cmp
testb
out
das
out
scas
sub
mov
and
loopne
sbb
add
mov
ljmp
or
jmp
ljmp
dec
mov
test
stos
jbe
test
mov
cld
scas
pop
push
jae
and
roll
xchg
shr
mov
in
shll
lcall
lea
cmp
movzbl
add
ret
cmpsb
or
xchg
ljmp
popa
gs
test
cmp
int
add
pop
adc
add
mov
sbb
pop
jge
popa
sti
xor
cmpl
mov
pop
lds
call
stos
inc
jb
xchg
push
xor
std
dec
movsb
daa
jge
sti
mov
push
dec
mov
mov
push
xor
aas
scas
xorl
in
ret
les
js
cmp
in
push
icebp
mov
push
mov
daa
or
add
js
andl
jae
pop
jmp
xchg
add
stc
fiaddl
mov
and
or
test
sub
popf
cmpsl
push
cmp
pop
and
aam
test
fs
fstpt
clc
push
sub
dec
xor
pop
lret
leave
push
or
jge
loope
dec
mov
adc
adc
jle
mov
jmp
test
mov
fstl
cli
push
jmp
add
adc
test
mov
push
sub
push
or
scas
shrb
out
cmp
push
test
shlb
mov
std
je
js
test
inc
fstl
js
jo
stos
inc
mov
mov
in
imul
xor
lea
dec
cmpsb
dec
popf
mov
insb
loope
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
