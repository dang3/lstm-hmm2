call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loop
repnz
lods
add
ds
idivl
ret
jb
inc
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
add
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
jge
lea
xor
jl
dec
cltd
push
mov
mov
inc
mov
pop
or
imul
mov
test
push
mov
aaa
jno
mov
mov
ja
stc
pop
iret
mov
daa
adc
in
in
lods
sbb
pop
cmp
inc
mov
sub
sbb
mov
fdivrs
inc
cmpsl
dec
repz
mov
andl
iret
sub
int
and
out
cld
sbb
jge
mov
lds
pop
jb
mov
push
push
fstpt
loop
pop
add
cmp
jae
jge
sbb
xor
test
int
mov
in
jp
mov
sub
mov
subb
bound
push
mov
add
adc
sub
sti
xor
sub
sub
hlt
jbe
and
ds
inc
mov
inc
xchg
inc
mov
push
mov
in
ficoms
addb
pop
jo
add
pop
fadds
data16
adc
stos
pop
rcrl
arpl
jge
lea
inc
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
jge
lea
inc
lods
push
mov
add
adc
loop
push
jne
shl
js
push
mov
loop
aas
or
shr
add
stos
adc
out
xor
scas
and
ffree
out
stos
loopne
xor
xlat
push
lahf
lret
mov
sub
push
mov
ja
movl
and
mov
rol
and
fidivl
leave
rcrb
adc
or
lret
data16
xor
mov
pop
dec
inc
inc
ficoml
into
pop
dec
ss
jg
push
neg
mov
xchg
inc
xor
sub
cmpsb
mov
jp
nop
fwait
cmp
sbb
dec
cs
xchg
add
adc
xor
pop
aaa
mov
sub
sbb
bound
push
stos
adc
push
push
mov
cmpsl
add
mov
mov
hlt
imul
push
mov
pop
movsb
aad
test
sub
or
data16
data16
pop
pop
cmp
xchg
inc
pop
push
xor
push
and
fstpl
ds
push
mov
sub
mov
sbbb
mov
insb
pop
lds
insb
outsb
loop
and
xchg
mov
sub
ss
pop
jle
test
fldt
andl
or
outsl
push
stc
gs
mov
int3
cmp
sub
int
loop
mov
xor
inc
sbb
in
daa
das
imul
mov
hlt
mov
mov
xor
leave
insb
mov
cli
pop
dec
or
adc
pop
xorl
and
dec
pop
bnd
xchg
out
aad
jl
fldt
lods
xchg
ds
xchg
xchg
ds
jno
ja
mov
mov
lahf
cmpsl
jne
test
sbb
out
xor
js
pop
and
push
pop
push
js
and
dec
xor
jp
mov
shl
sbb
stos
or
sbb
dec
pop
dec
and
push
movsl
fstp
ja
pop
or
jl
cmp
fmuls
sub
add
push
and
icebp
fwait
push
nop
icebp
ja
cmp
iret
sbb
pushl
data16
je
xchg
loopne
into
test
inc
pop
dec
gs
mov
fwait
sub
outsl
test
dec
aaa
fsubp
sti
subl
movsl
jo
push
pushf
jb
cmp
mov
ja
outsb
outsb
mov
dec
jae
and
inc
adc
lods
inc
or
pop
mov
test
fs
bound
paddq
jecxz
mov
and
repz
sbb
movsb
daa
leave
sub
cltd
mov
jo
lods
mov
std
inc
push
call
mov
into
or
imul
or
push
dec
jmp
call
mov
mov
add
and
cmp
dec
loope
mov
das
fcompl
dec
jne
dec
movsb
or
push
cltd
stos
mov
stc
imul
out
js
hlt
mov
sbb
adc
cmp
stos
cmp
hlt
inc
add
add
pop
push
fmuls
shll
pop
mov
in
and
lret
mov
test
js
icebp
push
sbb
mov
divl
sti
dec
cld
xor
dec
pop
pusha
addr16
push
in
mov
lret
into
leave
cmp
scas
imul
sbb
test
ja
lods
rclb
aad
push
jge
std
imul
inc
inc
xorb
dec
jo
jmp
mov
cltd
jl
int
ret
inc
and
jne
push
inc
sbb
ljmp
test
loop
ret
sub
sub
imul
xor
repz
jne
xor
mov
lods
ljmp
in
xor
push
cmpsl
cmp
push
clc
in
data16
jbe
jecxz
push
shll
es
test
and
dec
test
daa
jns
jge
repnz
lcall
in
add
push
mov
cmpsb
enter
shlb
cld
jb
stos
inc
cld
xor
sub
pop
es
jp
or
cmpsl
dec
repz
cs
cmpsl
fwait
ja
frstor
sub
adc
insl
jg
jne
adc
inc
es
dec
adc
lret
into
cmp
mov
aaa
push
xchg
push
in
mov
jns
clc
jns
pusha
lret
pop
icebp
jnp
and
insl
repz
outsl
mov
aaa
jne
or
cmp
mov
mov
ljmp
punpckhdq
xor
sub
outsl
cli
mov
cmpsl
sahf
mov
clc
fistpll
iret
mov
push
mov
sub
mov
adc
test
push
sbb
enter
gs
insb
movsb
push
ja
and
jne
sbb
pusha
pop
mov
les
fidivrs
dec
or
push
sbb
int3
xchg
jo
ljmp
clc
push
clc
pop
ja
fnstcw
pop
pusha
in
and
xor
repz
cmp
out
insl
push
ja
repz
movsb
fwait
add
mov
mov
lret
cmpb
pop
frstor
dec
inc
pop
in
mov
push
add
dec
inc
leave
movsb
inc
jns
add
jmp
arpl
fidivrl
int
jg
outsb
sub
ja
aam
mov
aaa
inc
movsb
sub
adcb
aaa
inc
insl
push
and
jle
in
pushf
and
daa
cltd
fdivrs
addr16
add
xchg
rcl
xlat
inc
repnz
sub
inc
repnz
xor
ja
ret
jmp
cmp
add
push
mov
adc
notb
mov
int3
dec
iret
or
and
aad
out
aam
jne
adc
loopne
clc
shlb
mov
call
push
add
sarl
cmp
negl
and
add
lods
jg
sub
ret
fiaddl
mov
cli
out
bound
dec
repz
sarl
lcall
movsb
loop
xor
mov
test
inc
dec
test
scas
iret
jno
leave
sub
ljmp
xchg
hlt
scas
or
sbb
xchg
les
sub
cmp
dec
mov
cmp
push
xorl
inc
lret
pop
mov
bound
in
mov
pop
or
sub
repnz
addl
and
shll
mull
hlt
fistpl
stos
repnz
xchg
xor
pop
dec
xchg
clc
movsl
std
repnz
cmp
xchg
jae
or
sbb
cld
mov
aaa
arpl
pop
mov
or
hlt
xchg
scas
lret
sbb
add
ret
cmp
jle
or
fs
in
daa
push
aaa
xchg
je
inc
dec
mov
mov
scas
insl
sbb
mov
sub
pop
out
incl
fisubrs
mov
fsubrl
jecxz
scas
decb
adc
xchg
and
popf
inc
hlt
push
lcall
xor
dec
mov
cmpsb
mov
idivl
mov
jmp
jae
lahf
fwait
out
addb
movsb
leave
and
icebp
sub
push
popa
ds
adc
pop
push
lock
jbe
ret
int3
lahf
subl
lods
sti
mov
enter
movsb
mov
outsl
fcmovu
bound
add
add
dec
cmpb
repz
jmp
je
and
or
push
popf
xchg
jmp
cs
test
lahf
adc
jmp
or
xchg
sub
push
out
sbb
xor
test
shl
andl
js
add
fs
xchg
xchg
ret
xchg
repz
and
inc
ss
out
sbb
aaa
scas
sub
or
dec
mov
jnp
nop
cmp
dec
pop
inc
hlt
jae
or
lahf
outsb
jne,pn
xchg
pop
jge
bound
and
popa
xchg
pop
movsl
sub
inc
cli
int
cmp
test
mov
sbb
cmc
pop
dec
jnp
cmp
xor
sbb
pushl
icebp
jp
xchg
loop
xchg
and
mov
push
inc
mov
lret
pop
popf
frstor
mov
inc
nop
inc
das
dec
cmp
mov
inc
pop
or
lcall
stos
std
sub
out
mov
scas
ja
and
mov
pop
push
cmp
sub
pushf
cmc
shrb
pop
inc
sbb
xor
push
je
clc
fistps
lods
scas
sub
sbb
stos
push
adc
xor
xchg
mov
xor
mov
jno
repnz
orl
xchg
int3
jnp
push
test
sub
adc
in
sub
test
cmp
loope
xchg
test
sahf
shlb
test
push
mov
and
xor
pop
jb
pop
mov
jp
daa
cs
icebp
cmp
ljmp
cmp
dec
cld
mov
push
fmull
adc
popa
sahf
push
push
mov
inc
and
imul
shr
fcoml
scas
testl
leave
sbb
lea
pop
shl
cmp
testb
mov
sarb
loope
sahf
adc
mov
dec
sbb
xor
jbe
adc
adc
aas
push
xchg
test
xchg
lret
xchg
xchg
cltd
sti
sub
push
gs
mov
std
cmp
les
cli
fs
lret
scas
fldpi
jne
dec
mov
and
fldpi
js
mov
pop
push
test
dec
xchg
xchg
ds
inc
std
fisttpll
add
cmp
add
mov
scas
inc
std
fidivrs
cmpsl
jae
push
sti
sub
lcall
dec
dec
or
je
adc
imul
mov
inc
push
call
xchg
jne
fwait
or
stc
jno
insb
dec
les
out
jl
xchg
aam
xor
fiaddl
sahf
dec
mov
mov
out
push
mov
jle
call
lods
out
or
lock
sbb
cwtl
jle
int3
dec
mov
and
pop
pop
pop
mov
xchg
inc
xor
js
leave
addr16
dec
xor
add
add
and
outsl
in
xchg
lret
sbb
mov
mov
jno
icebp
fcoms
out
into
dec
test
and
je
cmp
mov
lahf
and
out
lods
mov
mov
add
popf
inc
cmp
push
filds
xor
lahf
loopne
mov
dec
adc
arpl
popf
fnstcw
jl
sbb
mov
adc
ss
shl
inc
adc
fs
data16
cwtl
je
pop
xor
mov
adc
mov
and
test
nop
mov
pusha
xchg
cmpsb
cmc
out
clc
xor
pushf
bound
push
movlps
mov
shrb
or
lods
inc
scas
pop
cs
or
add
loop
in
and
fbld
loope
xor
xchg
pop
aas
test
cmp
hlt
jge
xchg
xchg
pop
dec
or
or
je
fwait
inc
mov
in
sub
cmp
sub
loopne
xchg
insl
pop
ret
adc
adc
add
sub
push
mov
pop
out
and
jne
cmpl
movsl
mov
inc
stc
pop
sbb
and
and
ret
rclb
cmp
jp
mov
jb
mov
and
test
cld
std
int3
mov
ret
cmp
clc
sbb
add
mov
adc
push
lds
pop
dec
cmpsl
xchg
sub
mov
inc
mov
push
jno
pop
stos
outsl
mov
adc
xchg
adc
aas
fidivrl
jecxz
movsb
aaa
loop
test
pop
jnp
jmp
jno
imull
xchg
jb
rcrl
orl
mov
fs
sbb
mov
movsb
lret
in
aad
ret
shrb
xchg
stos
sbb
push
xor
loope
lds
add
fs
and
jno
pop
xchg
jle
ficomps
cmpsl
pop
lret
cmpsl
shlb
add
sub
or
mov
mov
mov
cltd
cli
cld
js
in
call
scas
jo
add
jbe
mov
jecxz
or
mov
sub
loopne
inc
nop
outsb
lret
sub
jmp
add
push
imul
movsl
mov
jno
mov
push
ret
mov
outsl
aaa
inc
cltd
jne
sarl
stos
jns
mov
popa
inc
push
lahf
mov
roll
cmp
dec
jns
jge
push
jne
andl
mov
scas
adcl
dec
dec
in
in
fstp
fwait
jecxz
imul
jns
add
sbb
fiaddl
sbb
mov
xchg
dec
sti
lods
pop
cmpsl
jp
sahf
inc
outsb
sub
cmc
mov
sub
xor
mov
inc
sub
and
cmp
push
mov
insl
inc
shl
negb
shlb
out
pusha
pop
cmpsb
sub
mov
inc
xchg
mov
sub
andb
imul
inc
je
inc
orb
sub
int
movsb
pop
rclb
jo
add
push
push
sahf
dec
mov
leave
mov
subb
add
insb
insb
mov
xchg
btc
inc
pop
mov
rol
ret
add
cmpb
and
xor
sub
stc
xchg
or
std
sbb
out
mov
xchg
mov
jmp
pushf
xor
push
idivl
xor
push
ss
sar
mov
js
xchg
inc
in
cld
repz
push
stos
jmp
xchg
xchg
dec
repnz
je
fldt
add
cmp
out
fwait
enter
cmp
fwait
clc
xchg
fwait
xchg
adc
push
hlt
xchg
lret
nop
js
add
mov
adc
push
mov
push
std
mov
scas
push
cs
inc
xlat
push
inc
testl
sahf
mov
mov
arpl
rorl
lods
or
jnp
fmuls
push
in
outsl
movsl
pop
sub
ljmp
addb
ret
lods
bound
aas
mov
xchg
shl
add
lahf
jb
dec
stos
sub
mov
scas
push
ds
pop
rcll
pop
aaa
pop
xchg
push
inc
jb
in
pop
sbb
push
xor
mov
add
or
xlat
cmc
mov
ljmp
inc
mov
jecxz
add
or
sub
pop
push
xchg
mov
ss
pop
cwtl
mov
pop
and
out
mov
pop
fcmove
fs
mov
pop
pushf
adc
mov
popf
push
push
enter
jle
mov
xchg
jmp
mov
clc
nop
push
out
mov
loopne
in
mov
mov
rcl
sbb
pushf
inc
add
jns
push
sub
jg
ljmp
out
dec
mov
das
pop
mov
jae
xchg
fistpl
repz
ja
ds
and
out
imul
add
cmpsl
and
add
sahf
sub
popa
cmpsl
enter
mov
mov
adc
test
mov
ljmp
sub
test
xor
lahf
mov
sub
lahf
mov
mov
and
daa
shl
pop
or
xchg
mov
cmpsb
mov
jp
ret
stc
xchg
or
pushf
dec
mov
mov
jne
iret
adcl
inc
sub
jnp
or
and
jnp
outsb
movsb
int3
jne
scas
mov
push
or
push
ficoms
jnp
sub
test
xlat
js
test
and
mov
sbb
call
fcompl
push
enter
jmp
rorl
mov
cltd
add
call
pop
sbbb
cltd
sbb
stc
dec
jno
mov
imul
insl
int
mov
int
cmp
sub
cmp
mov
pushf
mov
mov
xor
std
add
add
stos
cmc
sbbb
je
pop
sbb
mov
iret
lret
dec
xor
sysret
or
ljmp
dec
mov
inc
addl
xor
lcall
fcomip
aaa
leave
pop
ljmp
sbb
repz
pushf
sub
cmp
xchg
mov
lock
aad
in
add
cmc
adc
pop
outsl
push
dec
imul
in
sub
xchg
fcoms
movsl
push
add
in
mov
lds
adc
cmp
push
stos
add
cmc
shr
out
das
push
inc
call
pop
stos
xchg
loope
jb
push
mov
dec
push
push
sbb
jnp
cmc
inc
add
and
jnp
xchg
lea
clc
xchg
dec
mov
jl
add
lret
imul
pushf
add
fisttpll
jns
fs
sti
call
xchg
jge
gs
fsubs
and
inc
imul
lods
add
test
add
loopne
push
pop
sub
lcall
xchg
dec
rcr
subl
and
push
xchg
adc
pop
push
cmp
loopne
jae
sahf
pop
pop
mov
mov
dec
das
divl
mov
sti
pop
insb
cmpsl
mov
sub
xor
pop
mov
pop
push
stc
mov
mov
mov
dec
mov
push
inc
push
jmp
or
imul
adc
sub
inc
pop
out
les
pop
mov
popa
dec
xor
jno
lock
insl
pop
push
in
fldcw
out
or
and
sbb
mov
scas
icebp
mov
jl
dec
mov
xchg
icebp
icebp
mov
mov
dec
dec
xchg
push
leave
sub
jl
mov
jo
sub
stc
sahf
rol
fiadds
mov
push
sbb
lcall
dec
mov
loopne
cmp
jne
in
pop
cmc
inc
inc
popf
inc
aas
outsl
mov
or
bound
js
jg
cmp
inc
repz
pop
add
in
sbb
xor
loope
test
inc
cmp
adc
sbb
into
mov
add
lret
shl
add
sub
cmp
dec
lods
sbb
jbe
xchg
mov
imul
loope
push
jb
arpl
push
fildll
and
or
sub
and
hlt
mov
outsl
test
andl
jb
movsb
jge
add
in
push
mov
mov
mov
rorb
ret
jl
mov
and
ja
fmuls
into
out
movsl
sbb
dec
pop
sub
push
pop
fmull
mov
lock
mov
dec
test
sbb
mov
loop
jne
xchg
cltd
bound
movsb
and
jno
sbb
leave
dec
xchg
jle
popf
add
mov
nop
xchg
sbb
adc
mov
pushf
jmp
cs
mov
aam
imul
gs
push
in
fstl
aam
mov
ret
test
popf
cltd
and
sbbb
xchg
push
int
xor
les
iret
pusha
inc
mov
enter
and
push
aaa
cmp
mov
lcall
aam
sub
xor
push
sahf
setne
fistl
aam
dec
mov
in
mov
mov
lods
mov
test
jae
aaa
mov
mov
rolb
nop
lcall
ds
lods
xorl
icebp
push
lret
dec
inc
pop
cmp
in
in
cli
mov
push
cmpsb
jno
xchg
push
inc
mov
imul
jo
pop
ja
mov
bound
push
int3
push
sbb
shlb
jp
fsubp
xor
and
jne
jecxz
test
bound
ss
mov
nop
mov
cltd
es
mov
rolb
scas
aas
or
std
sub
adc
mov
cwtl
fisubrs
xchg
std
xlat
sbb
dec
shrl
adc
out
pop
and
sarb
and
test
jp
add
pushf
inc
xchg
add
jge
add
aaa
sub
hlt
jle
pshufw
xor
les
inc
roll
inc
dec
mov
mov
loopne
dec
mov
mov
jo
insb
mov
jne
nop
push
fcomps
adc
adc
outsl
push
mov
add
or
mov
jp
fwait
and
inc
jne
pop
daa
jecxz
jne
sbb
outsl
lahf
xchg
pushf
mov
pop
jnp
inc
jbe
imulb
add
data16
add
mov
lea
mov
andb
xor
sub
int3
pop
movsl
jge
push
sbb
fadd
and
sarb
pop
sub
mull
fcomip
fidivl
test
mov
repnz
stos
stc
out
mov
movsl
dec
inc
movsl
mov
dec
and
pop
inc
jnp
cs
iret
ds
sub
test
rol
inc
xor
ja
mull
pop
push
std
nop
cli
xor
mov
and
gs
cmp
adc
pop
das
leave
sbb
mov
dec
jo
daa
xor
sub
jmp
cwtl
xchg
imul
hlt
mov
clc
test
mov
push
in
jle
sub
dec
fadds
jb
aas
push
or
fidivrl
ret
lock
mov
fwait
repnz
movsb
sub
test
dec
outsl
std
add
imul
xor
in
lret
mov
mov
inc
into
mov
cmp
aaa
fstp
and
and
call
clc
dec
mov
xor
xchg
insl
xor
inc
hlt
pop
xor
lock
gs
lahf
xlat
cmp
into
rclb
mov
and
push
xchg
pop
adc
fcomps
sbb
pop
lock
addr16
sbb
mov
insl
xchg
jge
lea
inc
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
jge
lea
inc
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
jge
lea
inc
lods
push
mov
add
adc
loop
repnz
mov
insl
xchg
jge
lea
call
inc
mov
add
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
push
lret
jbe
jnp
cmp
js
dec
call
cmp
or
stc
pop
leave
push
mov
cmp
jns
dec
call
cmp
jmp
push
mov
cmp
pop
test
ficoml
jl
ja
mov
popf
sub
or
xchg
pusha
into
xor
subb
fisttpl
aam
shr
scas
insl
jl
pop
and
sbb
lock
xor
cmpsb
stc
dec
cmp
pop
test
inc
mov
lahf
lods
adc
pop
int3
xchg
add
mov
dec
in
cltd
cmp
inc
stos
insb
push
sbb
mov
or
in
cld
int
push
xor
fstpt
mov
cltd
push
aad
movsb
sub
mov
outsb
orl
fstpl
sbb
adc
push
mov
imul
sbb
cltd
mov
mov
jno
jns
mov
dec
mov
stc
pop
leave
push
mov
cmp
jns
dec
call
cmp
test
lea
test
dec
fwait
dec
imul
loope
sub
mov
pushf
adc
cld
ss
inc
lret
cmp
pop
xchg
sub
push
mull
insb
mov
stc
sub
sbb
or
fs
cmp
jns
dec
call
cmp
jmp
push
mov
cmp
jns
dec
call
cmp
jmp
lcall
bound
inc
push
rorl
dec
mov
mov
fstps
cs
pop
insl
shl
xchg
sbb
pop
push
and
imul
sbb
add
inc
adc
std
xor
xor
xchg
pop
lahf
mov
dec
aaa
cmpsl
in
dec
ja
mov
aam
jecxz
arpl
inc
in
or
push
in
mov
cltd
cmp
add
leave
ja
pusha
push
imul
sbb
sub
push
jne
push
mov
fldcw
inc
cmpsb
std
push
pushf
std
add
mov
mov
cli
roll
mov
js
lods
lret
enter
xchg
cmp
test
mov
in
in
push
mov
inc
xor
mov
adc
mov
xchg
scas
test
inc
daa
cmp
dec
and
jmp
lock
pop
movsb
in
or
fisubl
sbb
sbb
pushl
stos
sbb
flds
mov
clc
into
jg
ljmp
jnp
and
jp
sub
dec
push
hlt
lods
xchg
imul
outsb
out
jecxz
pop
enter
divb
call
pop
sbb
pop
push
sbb
into
jns
xchg
mov
cltd
std
cs
les
jg
enter
test
mov
cmp
jl
cli
loope
pop
mov
push
jmp
inc
push
ljmp
jno
xchg
sbb
icebp
mov
sub
and
pop
in
hlt
cmp
leave
xlat
imul
or
cli
jmp
cli
out
push
inc
mov
push
push
lea
mov
xchg
dec
lods
mov
mov
xor
mov
adc
jns
mov
ret
and
mov
pop
or
popf
in
push
bound
insb
mov
or
jecxz
into
daa
int
outsb
jo
dec
leave
mov
aas
test
aad
movsb
xchg
xchg
mov
cmp
aaa
les
push
add
daa
add
and
sbb
hlt
scas
pushf
mov
mov
testb
cwtl
push
mov
adc
movsb
stos
adc
mov
sbb
cmp
push
not
rorb
pop
cmp
jo
xor
pop
jnp
mov
divb
subb
enter
insb
jo
pusha
in
mov
inc
aaa
pop
outsb
jmp
int
cmpsb
push
sti
and
push
sub
pop
mov
fwait
int
push
in
ljmp
arpl
cmpsl
mov
test
dec
out
neg
and
cmpsb
aaa
sbb
int
inc
pushl
in
test
mov
sbb
das
add
or
mov
sub
xor
fisttpl
xchg
push
dec
cmp
lret
sbb
xchg
cmp
mov
pusha
mov
js
popf
fwait
jns
add
leave
mov
int
filds
ljmp
pop
pusha
in
bound
iret
cmp
jle
cmp
lret
add
pop
cmpsl
jo
ss
xor
ljmp
or
in
in
pop
mov
sub
pusha
adc
sarb
sbb
pushf
and
pop
jl
jp
jp
sub
mov
sub
fiadds
in
adc
pop
jne
stc
cmpsl
push
adc
jp
sub
push
divb
fisttps
in
sbb
push
mov
test
int3
movsb
push
push
inc
lock
les
or
push
shrb
sbb
out
and
ja
insl
clc
dec
xchg
sub
inc
dec
out
dec
cld
add
xor
xor
popa
inc
push
cltd
jge
add
flds
sahf
and
dec
cmp
cmp
and
add
ret
add
sub
ficomps
in
pop
fnstsw
jge
aad
dec
add
fsubp
cmc
sbb
cwtl
sahf
xchg
aaa
xor
test
mov
fs
push
dec
sub
notb
ret
mov
sqrtps
aaa
add
mov
sbbb
int
testb
out
xchg
shlb
jmp
sub
jnp
gs
lods
nop
xchg
mov
inc
insl
sbb
mov
mov
shll
leave
or
in
mov
jg
adcb
bound
sub
sti
popf
jae
jl
mov
std
jmp
js
jg
xor
pop
adc
mov
popa
xor
hlt
mov
add
xlat
les
dec
mov
ss
mov
xchg
cmp
popa
popf
push
push
mov
loop
xchg
jmp
rcrl
sbb
sub
mov
enter
js
mov
push
es
lret
je
lds
xchg
fistpl
es
in
nop
pop
cmp
das
push
aad
xor
out
cmp
out
xor
mov
adc
rol
dec
cltd
es
mov
xchg
mov
mov
dec
push
popf
sbb
sbb
dec
cmc
leave
testb
loope
ja
leave
cwtl
jne
fwait
pop
sar
add
lock
fidivrl
push
pop
loop
lods
notl
outsl
or
mulb
sub
xchg
lea
push
movl
pop
push
icebp
stos
scas
mov
mov
mov
or
jge
loop
roll
cmp
arpl
movsl
sub
cmc
rorb
inc
imul
rorl
jp
jnp
cs
insb
fstpt
repz
stc
hlt
mov
insb
cmpsl
xchg
pop
add
push
in
ja
loopne
mov
pop
jne
orl
mov
cmp
int3
loope
xor
dec
add
nop
pusha
test
sub
jl,pn
pop
xor
jp
daa
sti
lock
or
loop
sub
insl
cmp
xor
xor
dec
mov
dec
and
aas
sbb
test
sbb
lret
ret
imull
pop
das
jmp
mov
pop
pop
sbb
pushf
sub
sahf
or
dec
ds
rorb
pop
pop
and
test
mov
mov
outsl
jno
fdivl
iret
xchg
out
xor
xchg
inc
shl
enter
in
push
pop
int3
out
push
shrl
xchg
mov
outsb
and
adc
xchg
popa
loope
xor
mov
cmp
mov
shll
push
leave
jecxz
jno
add
test
mov
fsubrs
mov
push
pop
call
push
mov
repnz
shl
cmp
add
jmp
adc
and
push
push
popa
mov
imul
adc
cwtl
pop
rclb
xor
add
pushf
mov
leave
or
jnp
sar
inc
push
shl
push
sbb
repnz
fbld
push
pop
or
jbe
lret
and
add
lea
lods
add
mov
jae
mov
and
lret
inc
out
mov
mov
jae
stos
roll
jnp
in
repnz
out
ret
pop
es
in
mov
pop
adc
dec
dec
cmp
loop
mov
sub
out
add
inc
jmp
jg
or
dec
mov
dec
sub
lret
xchg
nop
cmp
fcompl
sbb
das
icebp
in
adc
loopne
inc
cs
xchg
xchg
mov
pop
test
jo
xchg
push
sbb
and
sar
mov
iret
hlt
fimull
dec
sub
mov
pop
cwtl
call
xchg
inc
cmpsl
gs
negb
shlb
pop
jo
imul
dec
out
hlt
sub
outsl
cli
addb
mov
jns
mov
arpl
dec
mov
jb
rcll
dec
inc
mov
mov
in
and
push
sub
pusha
xchg
rol
dec
test
sbb
mov
stos
out
sub
cmp
jmp
ljmp
aad
cmp
mull
push
add
fcmove
xor
mov
sbb
or
and
rcr
and
or
loopne
xor
test
add
mov
flds
push
daa
inc
inc
addl
mov
push
pop
insb
fstpt
and
cltd
repz
adc
xorl
inc
push
in
pop
push
or
cmp
pop
pop
and
daa
aad
int
into
ja
pop
inc
add
sbb
int
jl
add
loope
loop
and
xchg
pop
mov
mov
cmp
add
mov
shrb
aaa
pop
daa
xchg
repz
ljmp
adc
fsubl
repz
leave
cmp
adc
pusha
dec
test
mov
xchg
in
dec
cli
xchg
imul
add
hlt
aam
inc
aas
cli
xchg
data16
add
ja
xchg
sbb
lret
arpl
xchg
mov
repz
test
add
cmpsl
stos
bound
mov
mov
arpl
clc
stos
cwtl
sbb
push
jne
adc
cli
mov
fistpll
mov
das
roll
sub
out
push
pop
test
or
mov
insb
pop
ror
fistl
jle
push
or
jge
mov
and
sbb
int3
es
mov
in
scas
lcall
test
cmp
cld
rorb
fwait
and
dec
add
jmp
nop
out
shlb
cmp
mov
cs
aas
xor
mov
bound
pop
pop
dec
std
pop
je
popa
mov
mov
movsb
ret
adc
daa
adc
lock
iret
iret
sub
jg
mov
mov
cmovo
lods
insl
mov
test
cmp
lods
testb
push
mov
push
sub
fstl
fsts
dec
mov
mov
pop
sahf
mov
pop
mov
test
pop
mov
xlat
imul
into
jmp
loopne
xor
cld
std
xchg
les
push
mov
fistpll
pop
test
es
mov
imul
adc
xchg
jmp
incl
popa
ficompl
mov
sub
jae
push
cld
das
fs
jb
addb
das
ss
lahf
inc
sbb
jge
pop
push
ss
push
das
mov
sub
clc
xchg
movb
jecxz
pop
cmp
into
stos
push
rorl
adc
cmp
dec
repnz
jns
xchg
int3
stos
lds
scas
dec
test
jle
imul
push
and
push
push
push
dec
dec
sbb
and
xor
dec
lret
stos
rcpps
jae
push
add
xchg
fs
cmova
andl
mov
inc
gs
outsb
sbb
pushl
xor
int3
cmpsl
jns
mov
test
arpl
test
repz
dec
or
outsl
mov
fwait
mov
jo
cwtl
push
loope
cmp
jne
sub
pop
xchg
jbe
dec
ret
popf
add
pop
xchg
or
xchg
push
fldl
jecxz
lcall
mov
jge
test
popf
push
lret
mov
rolb
lea
or
and
sub
xor
push
push
dec
or
fcomi
sbb
dec
sbb
mov
fstps
mov
ja
jmp
cld
mov
insl
les
push
mov
pop
sbb
out
shlb
jmp
inc
adc
pop
faddl
or
ds
inc
push
ja
test
movsl
pop
and
or
sbb
cmp
push
imul
or
pusha
pusha
ljmp
dec
sbb
xchg
subl
rcll
jb
cmp
lahf
xchg
lock
inc
mov
pop
jp
mov
shlb
sub
pop
push
push
cmp
xlat
in
aad
inc
hlt
stos
std
lods
fwait
push
cltd
fmull
fdivs
mov
mov
push
adc
sarb
mov
sahf
jae
mov
inc
xor
out
push
dec
in
rcll
xchg
cmpsb
les
mov
stc
into
or
pop
pop
mov
fsubp
ror
pushf
cmp
pop
lock
mov
shlb
pop
je
or
test
push
out
push
dec
iret
sub
jle
js
xor
push
add
sbb
mov
push
jno
hlt
sub
mov
sub
cmp
inc
dec
sbbl
sbb
mov
jp,pt
std
cmp
arpl
xchg
enter
iret
in
dec
jecxz
push
pop
cwtl
adc
mov
xor
aaa
outsb
cmp
pop
std
add
pop
or
jle
jno
jge
call
lods
push
fucomi
mov
sbb
movsl
xor
or
ds
fldt
xchg
cmp
sbb
dec
stos
xor
idivl
mov
nop
cs
ret
sti
outsl
lcall
sub
clc
fdivl
hlt
xor
xor
sbb
adc
lds
shrb
in
ret
outsl
xor
icebp
mov
mov
out
dec
icebp
lock
pop
leave
cmp
xchg
arpl
push
js
add
sub
dec
push
pop
ror
adc
add
movsb
int
cld
clc
mov
sub
mov
push
fistl
cmpl
inc
mov
cld
xchg
movsb
fcomp
inc
sub
icebp
in
cli
pop
add
xchg
push
cmp
xchg
xor
mov
xchg
lahf
sbb
push
inc
push
mov
add
xchg
mov
add
int
sbb
insb
test
rorb
data16
dec
xchg
repz
push
xor
add
insl
push
xor
pop
push
or
inc
mov
bound
jp
aaa
add
dec
out
cmp
inc
or
movsl
inc
dec
fists
push
and
int
cmp
es
inc
mov
cmpsl
inc
and
jbe
and
jg
scas
or
sahf
int
ret
pop
sbb
xchg
loop
fwait
dec
out
fwait
insl
loop
xchg
and
pushf
inc
sti
and
ss
testb
iret
mov
notb
repz
mov
into
sahf
cli
ja
push
inc
sbb
jge
subb
loopne
in
mov
inc
mov
mov
mov
loope
xor
pop
shrb
mov
jecxz
mov
fadds
xchg
in
out
imul
lahf
scas
pop
repz
rcrb
push
cmp
mov
and
mov
inc
fdiv
shll
aas
outsb
push
call
mov
add
or
pop
fmuls
lret
push
pop
pop
xchg
xor
test
jp
jae
add
mov
enter
jb
push
ljmp
mov
imul
cltd
mov
ljmp
jne
sub
mov
shlb
repz
addb
and
and
ret
and
push
cli
sbb
paddd
cmc
rclb
cld
lcall
sbb
xor
push
sbb
mov
in
and
stc
dec
sbb
mov
jmp
cmp
jo
mov
or
mov
test
xchg
xlat
lea
pop
push
mov
leave
adc
insl
inc
jmp
mov
in
xchg
mov
cltd
mov
jmp
cltd
daa
or
popa
cwtl
or
push
dec
mov
xchg
cmp
test
fs
stc
pop
pop
popa
pop
jmp
and
dec
mov
loop
mov
xlat
push
dec
push
loope
mov
mov
mov
pop
adc
xchg
movsb
loopne
or
insl
popf
dec
jb
adc
imul
add
jl
mov
and
imul
mov
orl
leave
dec
cld
mov
call
lcall
add
mov
int3
push
xor
or
inc
push
or
dec
popf
cmc
jecxz
fsubrs
mov
stos
stos
loop
and
xor
call
jbe
inc
adc
adc
gs
jae
and
daa
xchg
fs
das
xchg
xchg
pop
ljmp
mov
pop
dec
sti
scas
das
je
stos
adc
xchg
dec
xor
std
gs
rclb
or
or
xchg
ficompl
fildl
jl
lret
push
mov
cmpl
repz
cld
mov
loopne
mov
dec
call
test
dec
notl
sbb
test
outsb
adc
pop
orb
mov
add
jmp
push
push
xor
lds
scas
subb
add
out
jl
fldt
repnz
ret
jmp
mov
xor
adc
vmwrite
fldenv
push
jae
cmc
pop
inc
pop
insl
ret
je
nop
int3
or
imul
push
dec
lock
cmp
scas
ja
aad
pop
mov
mov
cli
jge
sbb
push
mov
out
ret
outsb
add
dec
mov
sbb
sbb
dec
js
mov
test
pop
mov
hlt
sub
clc
int3
fsubrl
push
rcrl
sbb
rorb
cli
mov
in
xchg
mov
popa
in
xchg
cmc
popa
insb
xor
movsb
mov
mov
ss
call
jne
pop
icebp
inc
out
aad
cltd
mov
sar
xchg
repz
insl
pop
in
fcomps
inc
popa
pop
inc
mov
mov
fs
mov
mov
add
add
sbb
dec
inc
test
cmp
fnsave
lea
adc
rcrb
mov
adc
mov
xor
mov
sub
aam
mov
int3
cltd
cmc
leave
daa
push
aad
xchg
repz
mov
jecxz
sbbl
stos
and
push
test
repz
xchg
add
fwait
sub
cmp
mov
shl
mov
mov
dec
cli
movsl
sarb
sub
pop
dec
xlat
pop
push
in
outsb
int3
xor
xchg
add
push
jg
pop
sbb
cmp
stc
lret
cltd
push
and
adc
push
mov
mov
sub
dec
outsb
xchg
mov
bnd
mov
cltd
aad
inc
shll
pop
dec
sub
pusha
cwtl
xor
cmp
int
out
push
fsubl
xor
mov
call
ss
xor
sub
fdivl
lret
inc
test
pop
xchg
mov
std
sbb
repz
cmp
mov
or
loopne
ds
stc
sub
js
lea
mov
addb
and
mov
je
sub
scas
cmp
lahf
test
inc
je
wbinvd
xor
xchg
scas
int3
addb
cmp
ljmp
in
leave
adcb
rcrb
shrl
xchg
jecxz
mov
in
jne
cmp
push
push
lret
lret
or
sbb
push
mov
jbe
inc
dec
mov
adc
repz
ret
cmp
into
xchg
mov
mov
push
bound
cmp
xor
xchg
xor
sbb
pop
int3
movsl
mov
sbb
adc
scas
dec
xchg
test
pop
jo
xlat
div
in
lret
mov
test
xlat
jbe
lock
pop
sub
inc
clc
push
xor
fists
or
push
mov
dec
lret
and
std
adc
sub
jp
sbb
loop
addr16
lock
cmc
cmpsl
push
dec
fcoml
mov
loope
push
mov
xorb
cmpb
stc
and
fucom
lods
popf
stos
fsubrp
fnstcw
mov
lahf
sarb
push
insb
ret
sbb
sub
repnz
mov
pop
loope
lret
arpl
outsl
mov
dec
int3
adc
stos
insl
leave
imul
sbb
dec
sub
add
xchg
je
dec
jge
sbb
xor
push
push
ss
int3
mov
rorb
cmpsb
mov
adcl
popf
shlb
hlt
mov
std
fimuls
in
xchg
and
sbb
imul
fmulp
call
mov
stos
push
in
add
lret
adc
xchg
loopne
fsts
fisttps
nop
ret
idiv
lea
push
sbb
pushf
sarb
inc
or
test
js
jns
gs
gs
repz
pop
xor
addr16
dec
add
stos
jns
and
pop
mov
xchg
imul
loopne
or
sub
out
mov
pop
xor
frstor
mov
jg
push
les
in
jmp
shlb
add
or
mov
ret
sbb
mov
and
rclb
addl
js
lock
jo
out
std
push
ret
lock
adc
je
pop
ljmp
mov
pop
inc
inc
roll
and
rcrb
and
rcrl
mov
addl
jo
xchg
add
cmc
add
lret
in
mov
push
xchg
or
sbb
adc
jle
fdivrs
gs
out
sbb
pop
leave
or
pop
scas
inc
aad
mov
lock
aam
sub
mov
push
or
cmp
or
data16
mov
jnp
iret
and
inc
out
in
pop
inc
xlat
repnz
cmpxchg8b
es
mov
pop
adc
jnp
cmpsb
test
nop
jb
enter
test
sub
fmuls
pop
clc
sub
sbb
leave
push
mov
cmp
jns
dec
call
cmp
jmp
push
mov
cmp
jns
dec
call
cmp
jmp
push
mov
imul
pop
pop
add
jns
imul
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
call
sbb
mov
test
xor
pop
adc
pusha
cmp
inc
sbb
mov
fcoms
mov
cwtl
movsb
push
add
sub
cmp
add
push
call
sub
xchg
test
mov
enter
push
cmp
arpl
aaa
dec
sbb
jno
pushf
mov
mov
cmpsl
xlat
out
jnp
fcoml
or
ret
movsl
pushf
mov
loopne
pop
push
add
pop
mov
test
mov
xchg
aam
cmc
pusha
mov
cmpsl
add
cmp
pop
mov
xchg
mov
inc
data16
pop
lods
insl
mov
fstpl
mov
fbld
shl
cwtl
sarl
cwtl
das
cwtl
fcomip
pusha
test
popa
cmp
mov
shll
mov
enter
jae
and
rcll
js
mov
scas
aam
add
andl
sub
and
or
popa
imul
mov
fcomps
mov
cwtl
push
push
adc
sub
or
ds
repnz
mov
ret
sahf
mov
out
sbb
sbb
jne
je
jns
vmwrite
in
icebp
stos
loope
mov
repz
int
fnstsw
gs
ja
xor
popa
and
idiv
testl
rcrb
dec
add
sub
jo
inc
sbb
mov
fcoms
mov
cwtl
shrb
js
dec
add
sub
jo
inc
sbb
mov
cmpsl
mov
fcomps
stos
pop
ja
xor
pusha
xor
test
fcomps
jns
jns
call
push
ljmp
loop
xor
cwtl
pop
add
out
aas
inc
insb
push
add
in
mov
sub
xor
sbb
pop
xchg
cmp
out
pop
jae
popf
pop
add
movsl
jle
cmp
dec
push
fs
popf
loope
fdivrl
insb
sahf
iret
add
sub
loopne
shr
adc
jae
cmp
push
push
mov
jb
sahf
imul
xchg
and
pop
sbb
in
pop
push
pop
stc
rcll
lret
mov
cmp
sub
inc
adc
sub
and
xchg
idivl
add
and
mov
mov
hlt
rorl
xchg
add
cmp
inc
xchg
mov
movsb
call
jns
dec
and
rcll
in
add
inc
sbbb
outsl
mov
sbb
push
aas
jecxz
xor
mov
sub
and
fisttpll
lods
push
sahf
repnz
out
or
push
outsb
push
adc
outsb
mov
mov
imul
repnz
es
jns
xor
xlat
inc
push
cmp
mov
std
xchg
in
jmp
sub
in
adc
dec
add
fcmovnb
test
cmc
cmpsb
push
cmp
push
imul
pop
andb
inc
xchg
cmp
arpl
xchg
mov
fiadds
pop
jae
js
enter
mov
cld
je
or
dec
outsb
xchg
clc
pushf
or
cmp
mov
test
iret
sbb
dec
test
in
mov
mov
xor
outsl
jp
je
pop
int
imulb
inc
xor
mov
jge
dec
inc
mov
ljmp
mov
addr16
sbb
jns
push
bnd
or
jecxz
aam
xlat
pop
inc
mov
dec
clc
mov
xor
push
outsb
shlb
push
lcall
sbb
roll
outsb
mov
adc
popa
pushf
and
aam
sbb
sub
test
pop
shrl
inc
dec
jl
shr
adc
loop
test
dec
outsl
aaa
or
shrl
lds
sbb
clc
incl
arpl
cmp
and
out
sar
mov
sbb
das
cmp
aad
ret
scas
lods
shl
imul
push
test
inc
add
sarb
push
add
pop
adc
jmp
push
mov
push
arpl
xor
jecxz
leave
mov
ds
push
mov
inc
popa
arpl
cld
imul
dec
loope
mov
test
scas
aas
pop
jne
ret
adc
xchg
push
insl
mov
clc
mov
sub
aad
daa
lods
push
test
fsub
inc
fstpl
dec
test
xorl
test
add
cmp
and
sbb
in
add
imull
cs
mov
mov
adc
xchg
or
nop
push
dec
out
pop
add
enter
or
mov
loope
push
movsb
lds
add
pop
push
jl
push
xor
push
divl
test
mov
lret
out
mov
and
pop
lret
mov
jl
fildll
into
add
adc
lret
mov
cs
mov
in
jne
mov
xor
sbb
or
cs
int
xchg
je
cmpsl
int
jp
stos
icebp
pop
jbe
jl
mov
pop
shlb
inc
mov
pop
adc
xchg
xchg
xchg
xchg
das
cltd
xchg
inc
arpl
cmp
movsb
iret
lret
push
xchg
cli
xor
std
jg
rcll
repz
cmp
xchg
add
ret
and
cld
les
dec
lcall
push
mov
mov
std
lds
cs
jne,pt
sub
loopne
fadds
insl
jns
add
mov
lret
adc
jae
adc
or
pusha
movsb
mov
jno
jo
lcall
adc
jl
lods
andb
xchg
push
jp
repz
jp
fs
push
test
inc
pop
sbb
sub
pop
dec
adc
out
sbb
sti
lcall
leave
in
adc
mov
adc
dec
sti
push
fstps
aam
dec
lret
mov
sbbl
sub
dec
push
pop
inc
adc
mov
ret
lock
jmp
fwait
mov
adc
loope
fadd
sahf
rcr
xor
mov
mov
or
aad
and
mov
shll
jae
lret
push
xchg
les
in
add
adc
mov
cmp
in
fildl
mov
ret
jg
arpl
inc
lea
lods
fsubrl
dec
xlat
mov
xor
lret
out
mov
adcl
leave
mov
mov
es
enter
or
aam
adc
xchg
and
pop
imul
sahf
cli
xchg
push
mov
shll
test
jnp
push
cld
push
jecxz
cmp
pop
leave
xor
std
mov
push
cmp
push
add
pop
int
sbb
pop
sub
jo
test
jmp
mov
or
push
leave
lock
jecxz
mov
bound
rorb
mov
aas
ja
out
sbb
pop
aaa
rorl
push
cmp
insb
lahf
mov
fdivs
or
rol
fcomi
mov
pushf
add
mov
xchg
mov
adc
stos
inc
fsubrs
xlat
lahf
sbb
pop
pop
in
jge
ss
pop
ljmp
add
push
jmp
mov
push
fxch
outsb
aam
test
push
fimuls
cmp
insl
cmpsb
jg
jae
jno
xchg
jne
in
mov
lods
pushf
mov
iret
fcompl
xchg
and
pop
and
insb
aam
push
insl
cmpb
jnp
hlt
shrl
jo
scas
xor
testl
push
mov
mov
sbb
in
adc
lea
push
push
pop
jo
push
out
add
pop
scas
lret
inc
ljmp
mov
adc
shrl
outsb
cld
mov
push
cs
arpl
mov
dec
push
cmc
pop
mov
jno
pop
inc
mov
xor
pop
push
repz
xlat
and
rolb
ds
pop
mov
mov
or
xorb
inc
add
ret
adc
mov
fwait
leave
jmp
sub
pop
mov
cli
pop
js
fiadds
lret
lret
pop
or
movsl
xchg
in
inc
push
mov
subb
imul
sti
fwait
pushf
mov
xchg
sbb
sarl
inc
fcmovu
adc
xchg
push
icebp
outsl
cmp
mov
call
icebp
lock
jmp
xchg
mov
fidivrl
mov
sub
into
pop
leave
adc
xchg
jp
bnd
add
mov
and
add
push
or
fs
pushf
mov
push
aam
xchg
push
loope
mov
lret
adc
movsb
mov
inc
adcl
dec
inc
mov
aam
pop
stos
out
ja
lods
out
lcall
cmp
movsl
subl
mov
pop
xchg
mov
cmp
or
mov
insl
jns
mov
jecxz
pop
cld
mov
lods
add
insb
imull
jo
sub
inc
adc
fisttpl
fsts
sub
in
pop
daa
jp
mov
mov
daa
dec
pop
bound
ror
in
enter
and
xor
push
or
cmpsb
test
in
shrb
xlat
ret
lret
fldl
aam
insl
pusha
mov
mov
movsl
incl
push
mov
mov
mov
push
push
les
cmp
and
and
push
mov
shl
out
shll
mov
nop
stos
cwtl
adc
xor
popf
aam
adc
dec
enter
sti
xchg
inc
mov
scas
outsl
and
inc
mov
mov
xor
out
das
scas
imul
cwtl
js
cmpsb
fistps
adc
int3
fwait
xchg
push
mov
jae
ds
mov
sub
add
ret
xor
xchg
nop
orb
push
popf
push
sub
sti
fs
push
pop
push
lock
vunpcklps
adc
inc
sub
and
not
xchg
lahf
scas
test
mov
xchg
outsl
mov
fdivrs
cmpsb
jb
push
rcrb
andb
fiaddl
mov
mov
flds
and
ret
fcmove
fcomip
in
pop
push
dec
mov
mov
sbb
xor
pop
leave
ds
sarl
setb
and
test
push
fstpt
scas
lods
jge
cmp
adc
idivl
push
jb
mov
pushf
ret
mov
lahf
inc
mov
ret
outsl
movl
dec
add
mov
shlb
lods
aad
insl
adc
mov
clc
dec
xchg
faddl
mov
mov
lea
pshufw
test
imul
test
pushf
fxch
or
stc
mov
stos
push
inc
inc
pop
repz
or
lcall
pop
ret
inc
and
mov
mov
pusha
ret
jno
lea
and
sbb
xor
movsl
imul
pop
sub
call
mov
insb
inc
pop
les
xchg
pushf
out
pusha
mov
push
add
bound
push
sub
inc
mov
dec
add
xor
or
test
repz
pop
bound
in
or
cmp
lock
int3
mov
test
pop
mov
dec
jmp
insl
jbe
jo
inc
push
cmp
mov
fwait
inc
adc
sub
stc
push
mov
mov
adc
fisttpl
sbb
add
loop
and
sub
inc
mov
ljmp
imul
mov
cmc
stos
shll
add
test
jmp
adc
shll
and
xchg
fs
mov
xchg
xor
fbld
xor
xchg
subl
std
sub
mov
ret
push
enter
movsb
adc
test
and
outsb
pop
lods
arpl
and
jp
xchg
pop
fildl
addb
jge
mov
test
cmp
sbb
inc
inc
adc
test
mov
add
mov
popf
or
mov
push
orb
inc
mov
in
cmp
les
sbb
or
adc
sbb
sbb
icebp
loope
cmp
mov
lea
dec
cmp
test
inc
sbb
jp
mov
pop
stos
fsubl
push
pushf
lods
ficomps
push
lods
rclb
out
in
rclb
lcall
push
inc
addb
sbb
or
sti
push
clc
in
icebp
lea
and
repz
inc
jnp
in
js
add
aad
add
gs
adc
xor
fcom
inc
xor
aad
stc
inc
test
and
dec
cs
fisubrl
jne
jge
jl
ds
and
fcmove
add
fstpt
dec
sbb
dec
jns
out
enter
dec
test
pop
test
cwtl
dec
and
mov
inc
mov
in
hlt
add
mov
add
lcall
fildll
fwait
sbb
leave
addr16
cld
mov
daa
mov
mov
sbb
test
add
mov
add
js
xchg
jl
jmp
test
sub
cli
or
cli
or
fbstp
das
stc
push
dec
test
dec
inc
test
fldl
lret
adc
mov
inc
or
add
and
js
aaa
sbb
fdivrl
mov
sub
fsubl
pop
sbb
inc
sub
popa
lea
insb
leave
adc
sbb
aas
jns
imul
mov
jecxz
inc
pop
xchg
xor
xor
dec
ror
sub
icebp
mov
enter
stos
push
lea
jns
lret
mov
jo
jle
pop
je
cmpsb
adc
out
jno
idiv
inc
into
xchg
jns
and
pop
pop
shll
pop
aas
add
mov
and
push
mov
shrb
jmp
cmp
not
pusha
jmp
push
adcb
pop
int3
mov
hlt
inc
dec
jg
cld
push
add
ret
notb
adc
cmp
aas
and
push
dec
test
lret
lret
mov
push
daa
dec
repz
aam
adc
clc
dec
pop
dec
xrelease
cmp
adc
jb
adc
int
pusha
xchg
aaa
sbb
popf
mov
nopl
out
mov
and
add
cmp
mov
mov
icebp
jns
dec
jne
sbb
sbb
test
mov
lret
into
sbb
mov
mov
lcall
mov
movsb
arpl
cmc
in
test
mov
std
cwtl
jne
xor
or
mov
xchg
cmpsb
popa
jne
insb
dec
enter
or
and
fs
add
not
sbb
insb
or
stos
addr16
loope
adc
shrb
push
inc
jne
and
mov
andb
out
pop
aaa
imul
mov
dec
cli
into
and
inc
mov
jnp
push
and
and
pop
jle
daa
or
aaa
xchg
icebp
add
cmpsb
fs
cmp
les
ds
push
test
mov
push
rol
cmp
fiaddl
sbb
mov
mov
enter
les
xchg
repnz
shl
pop
sub
enter
xchg
int3
jnp
inc
pop
pop
xlat
into
jnp
loopne
mov
pusha
xchg
pop
pushf
push
pop
mov
push
pop
das
nop
mov
adc
imul
cmp
sub
je
push
pop
in
sti
cmpsl
push
rorb
aas
add
mov
jmp
stos
xchg
mov
mov
ljmp
test
fsubl
aad
ljmp
push
push
push
inc
pop
cmp
lds
daa
movsl
jmp
or
push
enter
aaa
pop
sbb
push
dec
mov
pop
xchg
shl
pop
out
lcall
mov
cmp
fisubl
add
lds
xor
xchg
loope
stc
jns
test
cmp
in
pop
ret
jle
rolb
inc
cmp
nop
movb
mov
fwait
out
or
jmp
or
xor
stc
std
inc
and
pop
scas
lods
sbb
xor
mov
ljmp
push
cmp
sbb
sbb
mov
sbb
xchg
stos
jmp
cmp
enter
aaa
loop
lods
pop
stos
mov
jecxz
sbb
push
scas
jecxz
inc
leavew
mov
mov
scas
mov
fs
outsb
pop
push
loopne
xchg
and
pop
aam
jno
mov
xchg
mov
jecxz
in
enter
cmp
es
jb
js
and
cmpsb
dec
push
aam
rcrl
aad
jecxz
add
mov
mov
sub
mov
xlat
xchg
push
xor
jmp
arpl
pop
ss
leave
sahf
inc
push
xor
mov
clc
stos
ljmp
ret
ficomps
imul
xchg
test
push
xchg
je
mov
cmp
jmp
sbb
dec
out
mov
repnz
push
clc
bound
cmp
frstor
push
clc
vpor
push
cli
fldt
dec
push
sarb
ss
aam
xchg
sbb
push
or
in
jbe
lods
pop
jb
loopne
jle
xor
test
mov
mov
rolb
adc
sbb
or
xor
xchg
fnsave
js
aad
movsb
or
rorb
cmp
mov
xchg
push
repnz
jecxz
pop
fidivl
scas
repz
fs
sub
mov
inc
sti
pop
lock
jp
dec
dec
xchg
pushf
fsubr
adc
cmpsl
lods
inc
jl
in
mov
mov
mov
xchg
mov
repz
loop
adc
sti
add
jge
push
inc
enter
push
cmpsl
mov
adc
jmp
repnz
fcompl
test
jmp
mov
mov
aas
inc
in
xchg
push
pop
or
mov
xchg
scas
jb
mov
add
or
sbb
es
pop
idivl
loop
aad
sbb
pop
in
andb
adc
xor
out
mov
imulb
pop
sbb
ret
call
inc
out
jle
int3
mov
stos
loop
xchg
xor
out
xor
clc
push
nop
adcl
aad
inc
call
stc
push
push
push
mov
push
sahf
add
dec
add
sub
mov
mov
xor
cmp
cmp
dec
jl
cli
pop
pop
inc
lcall
adc
mov
or
lahf
mov
pushf
mov
jno
mov
mov
sbb
sbb
ret
dec
push
or
add
mov
xlat
push
mov
add
movsb
dec
push
pop
loop
faddl
outsl
sbb
xor
inc
dec
jns
sbb
add
movq
cmp
push
lcall
in
lcall
pop
pop
sbb
adc
jg
test
push
lcall
roll
xlat
mov
jg
call
push
out
out
cmp
mov
add
push
cmp
fdivrp
mov
add
xchg
mov
testl
arpl
mov
add
les
inc
aad
pop
arpl
icebp
stos
sbb
inc
outsl
lret
cmc
arpl
sub
aaa
jno
gs
adc
sbb
push
fstp
ror
add
jbe
add
add
cwtl
mov
lock
inc
or
and
mov
cmp
scas
mov
mov
xor
inc
fsubrs
fdivr
jmp
lock
stos
negb
sahf
xor
cmp
cmp
jl
add
jmp
mov
jmp
sbb
fwait
jp
scas
mov
ja
or
cmp
sbb
sbb
lret
mov
or
fildl
test
xor
sub
aaa
repz
or
aas
dec
arpl
shll
push
popf
rcrb
mov
inc
in
icebp
and
shl
filds
sahf
out
test
ss
sbb
lcall
movsw
repz
sahf
hlt
xchg
jno
push
xchg
out
push
es
xor
mov
mov
jecxz
scas
mov
fxtract
stos
pop
sbb
nop
dec
sub
mov
mov
cld
lahf
add
pop
pop
mov
pop
ljmp
xchg
mov
push
mov
and
insb
sbb
imul
jmp
xchg
push
mov
bnd
sbb
dec
daa
popa
addr16
adc
jg
mov
pop
jle
and
inc
scas
mov
inc
rcll
lret
test
shl
fdivr
pop
insb
loop
push
in
test
xchg
dec
add
add
rolb
and
loop
jg
or
xchg
inc
xor
aas
lahf
divb
mov
nop
int3
cs
cmpsb
outsb
xchg
xor
mov
test
mov
out
and
in
fldl
xor
and
add
faddl
aas
jns
imull
cmp
mov
mov
int
ja
imul
sti
jg
xchg
lret
cmp
cmpsl
insb
xchg
lcall
push
cmp
push
cmpsb
sub
jb
inc
inc
and
shl
fs
inc
sub
movsb
clc
add
sub
fs
or
mov
cmpb
and
and
xchg
insb
movsl
pop
add
pop
and
rcrb
daa
je
pushf
pop
jge
outsl
inc
jae
out
sbb
push
cmp
push
dec
mov
mov
cmp
xlat
call
xor
and
fwait
push
insl
sub
cmp
mov
cmc
jb
sub
inc
popa
inc
xor
imul
cli
mov
and
pop
adc
stos
ret
jns
fimull
inc
ret
or
test
jo
inc
sbbl
repz
xor
mov
cmpsl
test
xchg
push
std
out
int
mov
test
in
sbb
in
outsl
sar
and
sub
imul
pushl
mov
xchg
push
cmp
sbb
pop
loop
cmp
xor
aam
inc
mov
test
push
icebp
and
loopne
cld
lahf
ret
adc
mov
cld
mov
mov
sti
cld
jb
cmpsb
jmp
out
int
xchg
ret
fsubrl
into
rolb
jnp
fwait
shll
loop
mov
pop
inc
sbbl
sbb
or
icebp
jmp
mov
roll
fldenv
and
pop
jb
flds
jne
movsl
aas
gs
les
sbb
lret
lock
in
out
int3
dec
test
arpl
jnp
daa
inc
adc
mov
in
fcoms
mov
cwtl
shrb
js
dec
add
sub
jo
inc
sbb
mov
fcoms
mov
cwtl
shrb
js
dec
add
sub
jo
inc
sbb
mov
fcoms
mov
cwtl
shrb
js
dec
add
sub
jo
pusha
sbb
mov
fcoms
or
rclb
add
pop
call
loopne
mov
push
pop
mov
inc
iret
jae
or
jmp
into
aas
fimull
pop
and
jmp
lahf
push
pop
mov
cmp
sbb
jle
negb
ljmp
pop
test
lcall
cmp
and
adc
cmp
inc
mov
sub
in
rcrl
scas
aas
sub
xor
and
jo
mov
or
and
jnp
arpl
loopne
push
cmp
loope
pop
fldenv
jb
stc
add
ret
xor
outsl
push
jb
out
add
imul
push
pop
cli
pop
ljmp
sbb
cmpsl
lcall
dec
movsl
push
sbb
cmp
cmp
outsb
decl
stos
and
pop
das
outsb
gs
jo
xchg
xchg
movsl
and
xor
push
pop
adc
push
pushf
adc
or
jae
jo
add
scas
mov
ss
adc
lret
xchg
sbb
ret
dec
outsl
cwtl
jl
aam
leave
jp
inc
mov
sub
sbb
leave
cli
test
pop
ret
psrlq
mov
jg
out
in
sbb
aas
das
mov
jbe
outsl
setne
ficomps
cmp
cmc
sbb
ret
add
sub
and
sbb
cmp
dec
das
mov
xor
jecxz
repz
ds
setl
fildll
out
sbb
or
cli
pop
ljmp
pop
stos
outsl
lcall
scas
pop
mov
sub
sbb
or
cli
pop
ljmp
pop
stos
outsl
lcall
insl
fnstsw
add
pop
adc
dec
ret
rorb
imul
sbb
or
fisubs
jl
loope
popa
cmpl
add
clc
in
in
pop
in
push
and
mov
rcr
ret
fidivrs
mov
push
std
imul
outsb
xchg
js
cwtl
and
or
xchg
lret
mov
xor
jnp
mov
pop
sbb
adc
outsl
insb
imul
add
cmc
imul
ror
push
xchg
das
insl
add
movsb
jbe
movsb
and
dec
mov
bound
mov
sbb
xchg
sahf
icebp
sub
out
push
xor
sub
xor
push
ljmp
scas
lret
scas
popf
push
mov
icebp
cmp
dec
add
ljmp
mov
and
movsl
mov
lds
in
repz
xor
cmp
push
in
fwait
mov
sub
mov
mov
addr16
popl
dec
add
andl
jbe
xchg
movsb
sub
int
sub
aad
test
cmp
sti
sub
cmpsl
push
rorl
pop
add
dec
iret
push
xchg
push
in
out
and
fs
fs
and
mov
gs
pop
insl
mov
popa
sarb
sub
xor
xchg
mov
loopne
test
test
push
loope
test
fnstcw
xor
and
sarb
add
std
into
icebp
jp
cmpsl
pop
mov
cs
dec
test
or
push
pop
push
ret
lahf
sbb
jg
add
and
flds
mov
xchg
outsl
mov
rolb
je
rcrl
movsl
cmp
hlt
loopne
scas
sub
cmc
cmp
adc
sub
lods
or
add
and
fsubl
or
inc
push
popa
add
repnz
jecxz
inc
jb
adc
and
js
into
inc
sbb
xor
sbb
cmpsl
jge
jne
and
xchg
daa
hlt
sub
and
ja,pn
add
mov
adc
push
jne
push
pop
das
dec
test
inc
pop
addr16
mov
jne
test
repz
lods
aad
jae
mov
dec
mov
xor
mov
sbb
mov
cmpsb
loopne
push
jno
add
xor
pop
push
cmp
in
mov
pusha
cltd
test
lods
negl
out
in
cmp
mov
lock
dec
pop
aad
jne
cmp
pop
inc
scas
int
popl
inc
mov
push
out
imul
pop
mov
cld
ss
fs
mov
jns
cmp
mov
shll
repz
dec
jnp
xor
hlt
imul
dec
inc
inc
shr
add
push
xchg
dec
out
lods
aad
inc
jle
leave
push
jmp
bswap
sub
inc
mov
clc
dec
dec
mov
enter
mov
pop
push
fcmovnbe
cmp
cmpsl
jmp
pop
push
adc
iret
cltd
cmpl
jbe
xor
leave
jg
jb
sub
data16
and
add
or
sahf
push
pop
das
or
mov
cmpsl
sub
in
add
xchg
mov
xchg
int3
std
cmp
fistps
jne
unpckhps
dec
adc
pop
ja
shrb
xchg
xor
xchg
cld
add
ss
pop
test
pop
push
sar
fisubrs
mov
pusha
and
lret
stc
mov
pop
pand
nop
inc
insl
popf
dec
movsb
sahf
mov
add
mov
cmp
push
fwait
lret
pop
cmpsl
negb
sbb
push
inc
pop
repz
test
push
or
mov
or
add
in
addr16
or
roll
or
jge
inc
jp
xlat
push
jns
dec
popf
mov
mov
ret
push
mov
in
dec
bound
clc
sub
in
mov
mov
push
nop
inc
inc
adc
std
pop
xchg
add
xchg
xor
dec
sub
hlt
sbb
mov
int
adc
lahf
jl
sbb
fwait
jbe
mov
in
cmp
pusha
aaa
sti
roll
mov
aad
mov
mov
repnz
or
pop
mov
inc
out
pop
aas
mov
into
xor
and
cmpl
xlat
mov
loope
lahf
mov
cltd
cmp
movsb
sbb
aaa
in
test
cmp
jno
push
or
cmpsl
mov
mov
in
jp
std
pushf
cmpsb
mov
aam
push
in
pop
js
outsl
xlat
jge
jg
clc
xchg
mov
xor
nop
or
shll
add
mov
pop
cmpsl
jb
mov
fs
lds
adc
ret
lods
inc
or
mov
jae
leave
sub
mov
jo
ficompl
push
sub
jnp
cltd
sbb
mov
jae
mov
movsl
jge
jmp
mov
sub
imul
xchg
mov
ljmp
push
stc
test
sub
sub
psubb
orb
sbb
mov
mov
ljmp
dec
xor
xor
inc
sub
mov
or
add
fcoml
mov
jp
mov
jle
mov
dec
dec
imul
test
pop
xchg
jnp
mov
or
xor
scas
jns
cli
xlat
and
xor
sarl
add
dec
mov
mov
dec
inc
test
and
sbb
mov
pop
xor
lods
adc
mov
cmp
std
inc
das
clc
mov
out
xchg
adc
push
push
mov
jno
add
imul
out
dec
enter
std
and
icebp
loop
mov
out
mov
mov
cmp
fs
inc
popa
mov
push
fwait
push
pop
test
data16
sbb
js
jno
adc
repnz
and
and
std
leave
mov
or
push
lds
xchg
or
jg
xor
sbb
repz
into
out
and
out
stos
aad
jp
mov
icebp
and
inc
stos
cltd
jae
inc
movsl
aam
es
in
pop
add
add
cmpsl
xchg
push
repnz
or
jecxz
dec
jp
clc
repz
pop
jge
and
inc
dec
pop
sub
sbb
bound
lret
out
or
lahf
call
cltd
push
loop
mov
fdivr
fcomi
lcall
pop
push
sbbl
cli
jo
xor
fs
sub
and
mov
jb
les
dec
mov
add
add
imul
adc
incl
outsb
test
jbe
out
cmp
ja
pop
push
gs
mov
jns
insl
lods
jmp
rorb
mov
fcomps
adcb
das
cmp
das
push
or
data16
addr16
pop
outsl
mov
xchg
icebp
shlb
xor
or
xor
mov
jnp
aaa
inc
int3
lock
cmp
mov
in
mov
aaa
fstpt
cmpsb
mov
pop
jecxz
es
adc
sub
push
xchg
add
pop
rolb
dec
test
xor
mov
cmc
aad
jo
rclb
push
shrb
in
adc
ret
mov
xlat
popa
fsubrp
into
inc
call
sti
ss
mov
xor
mov
and
daa
nop
test
push
lret
mov
iret
bound
aad
and
leave
pop
sub
aam
js
jne
mov
fldl
push
dec
adc
inc
mov
xchg
aad
lret
xchg
xor
mov
cwtl
hlt
out
es
add
rcrb
pop
push
out
rolb
lods
mov
pop
jno
and
test
pop
sbb
push
popa
adc
rorb
addr16
aas
xchg
adc
repz
sbb
insl
lods
sbb
shll
mov
jno
adc
jl
cmp
dec
out
fisttpll
mov
les
cmp
sarl
test
hlt
fisttpll
jmp
sub
pop
mov
hlt
sahf
dec
xchg
jle
out
out
or
push
bound
aaa
ja
push
pop
jne
xchg
ficoml
lock
movsb
xor
sub
insb
inc
mov
dec
cmp
ds
test
mov
lods
outsb
xor
daa
mov
cmp
inc
jl
std
decl
daa
jns
add
jns
add
sbb
mov
test
imul
mov
addr16
inc
and
sbb
sahf
aaa
dec
sbb
fistl
jg
mov
fstpl
fstps
fdivrs
sub
jmp
xchg
lods
cmp
loop
stos
mov
xor
lcall
push
inc
push
jp
iret
popf
les
in
mov
push
ds
repnz
or
int3
fadds
enter
push
jge
push
int
cmp
add
out
imul
jle
and
or
dec
arpl
cwtl
lods
je
cmp
addl
xchg
cmp
out
mov
push
mov
jae
subl
cmp
sub
lahf
xchg
popf
sbb
cltd
and
int
scas
das
roll
shll
push
sub
dec
dec
mov
push
fisttps
mov
mov
inc
fsubr
push
pop
inc
cmp
jne
push
pop
sub
shl
aaa
lods
ja
cmp
sub
outsl
rclb
testb
popa
repnz
sub
lods
cmp
mov
sarb
or
mov
rcrl
push
loop
mov
lock
outsl
es
push
cmp
shll
jo
std
pop
and
ss
movsb
add
xchg
or
jg
jecxz
std
pop
test
push
call
aam
jb
cmpl
sqrtps
pop
das
ss
lcall
dec
pusha
xchg
pop
and
ljmp
ret
sub
or
jne
clc
paddusw
xor
mov
daa
test
sub
cs
sbb
mov
mov
mov
insb
ficompl
and
fsts
pop
sbb
or
ret
mov
int
jg
inc
cltd
scas
out
mov
fs
in
fdivs
dec
ja
push
adc
gs
push
icebp
fldt
mov
or
ficomps
xchg
inc
cli
push
push
dec
popf
push
cmpsb
pop
push
inc
repnz
push
cmpsb
shll
and
xor
mov
xchg
xchg
inc
xor
rorl
ja
sbb
pusha
adc
mov
adc
fildl
jns
mov
int
jge
sub
adc
aam
jecxz
xor
cmp
addr16
xchg
dec
push
pop
jle
es
mov
sbb
lret
sub
ljmp
jle
xor
push
popf
in
fcmove
sub
and
dec
aas
testb
test
movsl
jg
push
aam
fwait
mov
jmp
xchg
sbb
arpl
xchg
mov
push
push
lds
xchg
insb
cwtl
negl
fs
mov
push
push
xor
out
jecxz
mov
mov
mov
mov
jbe
mov
fdivrs
sbbb
or
adc
push
lcall
lcall
xchg
dec
movsb
jae
adc
arpl
outsl
call
xchg
mov
mov
shll
lds
test
imul
mov
scas
xor
mov
aas
sbb
xchg
mov
je
subb
dec
jne
dec
repz
inc
insb
sub
dec
in
jge
mull
and
out
das
dec
mov
sbb
pop
icebp
or
fnstsw
fs
pop
ljmp
js
into
into
mov
imul
dec
lret
sbb
xlat
or
sti
adc
movsb
daa
fwait
jg
out
sbbl
shrl
mov
shlb
lret
repnz
inc
call
adc
mov
pop
fdivrs
scas
mov
ret
mov
jle
mov
push
cmp
shrb
movl
ret
into
je
sbb
add
inc
adc
and
cmc
dec
xor
rcll
in
out
pop
adc
adc
jp
lcall
inc
push
cmpsl
ss
jg
loopne
dec
not
jge
lods
enter
xor
leave
lds
lcall
sti
inc
hlt
and
pop
or
add
mov
sub
jo
add
orl
xchg
lds
pop
jge
repnz
das
out
into
mov
pop
push
in
pop
dec
adc
out
xchg
sbb
sub
and
das
and
adc
adc
fs
repz
mul
lds
lretw
jnp
or
dec
push
jo
hlt
sub
jbe
je
jg
cli
pop
dec
inc
popa
sub
jge
xchg
cmpsl
shll
lods
notl
out
xchg
loop
or
xchg
jbe
push
fnstcw
leave
repz
inc
sub
jne
popa
test
inc
xlat
cmp
mov
push
popf
mov
pop
addr16
xchg
sbb
fstpt
lods
out
outsl
in
into
call
push
pop
or
repnz
test
dec
xor
loop
pop
push
je
mov
fsubp
enter
movl
lcall
or
sub
test
pop
push
and
leave
sub
inc
pusha
xchg
cmp
fwait
jns
imul
repnz
push
jb
cmc
push
scas
mov
and
in
inc
data16
repnz
bound
jb
sbb
jle
pushf
cmp
aaa
inc
ss
dec
xor
or
ret
xchg
fisttps
cmpsl
mov
xchg
xchg
jmp
cld
pop
push
mov
cmpsb
sub
repnz
inc
lret
pop
push
adcl
addb
fs
ja
mov
adc
mov
mov
mov
or
in
lea
inc
cld
or
ss
mov
and
inc
mov
and
cmp
stos
jb
into
xor
jl
repnz
push
popa
sti
test
cmpl
adc
out
jmp
or
sbb
or
lods
mov
in
mov
jecxz
inc
mov
aas
lret
add
sbb
cld
dec
mov
adcl
push
and
xorl
or
mov
adc
and
scas
jno
inc
add
and
add
imul
jle
push
loop
movsl
shrl
test
in
pop
adc
pop
popa
stos
mov
stos
jg
push
test
jge
inc
dec
pop
test
jns
out
mov
decl
mov
addr16
movsl
bound
mov
xchg
test
pop
add
rcrl
xchg
pop
mov
xchg
lret
loope
xlat
outsb
jno
shl
mov
jb
hlt
jae
js
test
mov
sbb
ds
mov
cmp
mov
or
mov
push
pop
push
jp
in
popa
cmp
sub
push
out
cmp
insb
pop
xchg
aad
lds
stos
dec
jl
cmp
aad
pop
mov
sbb
and
pop
mov
jo
push
js
inc
push
mov
aam
insb
stos
popa
push
das
lret
pop
loope
arpl
cmpb
dec
hlt
stc
and
aaa
pop
xor
mov
in
mov
jb
pop
mov
loopne
mov
scas
add
xchg
hlt
dec
add
sbb
jge
inc
out
les
adc
pushf
int
arpl
or
es
or
addr16
test
push
pop
mov
add
adcl
loop
push
and
cmpl
push
pop
into
hlt
call
out
rcr
mov
in
jg
or
stos
rolb
out
cwtl
arpl
loope
xor
pushf
hlt
lret
dec
pop
stc
out
scas
shl
cld
out
xchg
adc
sub
add
push
push
icebp
shrb
lahf
push
and
lock
add
push
fsubs
or
ja
mov
leave
inc
pop
push
xchg
outsl
scas
sub
jg
xchg
mov
and
push
adc
iret
out
out
mov
pop
out
cmpsb
xor
fistpl
and
lock
jle
mov
xchg
push
scas
xchg
jg
cmp
imul
lret
mov
out
xor
cli
iret
mov
and
stc
ljmp
mov
outsl
jp
lea
pop
jp
jecxz
inc
test
scas
test
scas
into
jp
mov
jns
mov
jg
pop
dec
inc
xchg
into
aas
shlb
cld
pmaxub
sbbl
clc
mov
and
imul
sahf
loopne
in
in
movsl
or
push
in
xchg
test
cmp
scas
push
cmp
enter
xor
add
ret
inc
add
hlt
xchg
scas
push
jg
push
mov
iret
mov
push
cmp
xor
push
pop
sbb
sub
in
inc
out
ficoml
test
push
dec
xchg
js
jae
js
sub
mov
dec
jg
sub
mov
push
aaa
push
mov
cmp
adc
clc
cmp
sub
xchg
fcomip
insb
jb
shr
int3
popa
xchg
pop
lds
sarl
daa
xchg
pushf
mov
cwtl
sub
mov
push
mov
or
xchg
sbb
test
mov
ret
cltd
aas
cmp
ret
and
sbb
cld
dec
add
pop
cmp
pinsrw
iret
xchg
pushl
and
sbb
stos
jg
adc
pop
mov
es
rcl
inc
jmp
fs
xchg
push
xor
mov
add
and
movsb
mov
jae
jmp
add
dec
test
lret
dec
js
adc
ret
sbb
jns
rclb
mov
or
fcomps
mov
and
loopne
cmp
push
mov
jecxz
mov
insl
out
jg
stos
cltd
nop
test
adc
bound
push
fnstcw
xchg
pop
push
adc
and
movsb
aam
outsb
jecxz
xchg
push
xchg
sub
xchg
fildl
push
mov
cmp
mov
and
xor
pusha
pop
or
push
cs
in
add
push
movsb
push
fwait
pop
mov
jb
cli
repz
xchg
mov
xlat
pop
adc
mov
movsl
mov
adc
add
jnp
addb
test
pop
das
imul
cmp
lcall
mov
sbb
sarb
std
lock
push
mov
ret
adc
push
inc
cwtl
jae
movsb
lods
rorl
stos
add
aaa
test
decl
out
mov
test
jle
mov
cltd
test
adc
inc
es
je
push
lahf
mov
movsb
ficomps
test
icebp
stos
fsubs
shlb
add
arpl
daa
and
imul
xchg
jecxz
cmp
sub
test
insb
jns
sub
xor
scas
sahf
xchg
or
cmp
jne
push
int
rcrl
sub
inc
arpl
mov
sub
sub
mov
mov
pop
sbb
push
adc
ja
in
sub
scas
fistpl
add
pop
pop
out
testl
int3
bound
out
in
in
sbb
inc
mov
aaa
pop
xor
mov
gs
adc
fildl
or
jecxz
in
mov
mov
popf
push
cmp
push
test
pop
call
dec
ret
les
les
xchg
and
jp
mov
lahf
fistpll
jge
mov
lock
bound
pop
hlt
xor
sub
pop
or
mov
imulb
fcmovu
push
xchg
mov
mov
jmp
popl
adc
add
dec
inc
jmp
dec
out
adc
pop
testl
mov
adc
fwait
add
pop
and
in
or
imul
xchg
js
shl
cmp
push
fcom
lcall
push
mov
mov
mov
enter
lods
or
cmp
xlat
in
jl
push
cmp
rcrb
pop
popf
mov
pop
jmp
mov
or
push
movsb
pop
out
jg
mov
popa
pop
mov
repnz
test
mov
aaa
inc
mov
sti
je
sbb
fdivrl
int3
mov
and
inc
loopne
cmp
xchg
sarb
iret
adc
and
lret
jae
inc
push
je
dec
repnz
sub
push
xchg
pop
pushf
mov
mov
pop
iret
pusha
xchg
push
sar
aaa
dec
push
push
jge
loopne
lret
movsb
subl
das
jge
setge
std
ds
mov
rol
inc
hlt
mov
mov
test
jo
mov
pushf
loope
daa
jae
imul
daa
iret
fwait
test
das
in
test
sbbb
rol
xor
push
mov
cmp
jecxz
and
insb
loopne
or
das
dec
stc
push
sub
push
sub
sub
jae
insl
popf
jl
cmp
push
inc
lea
xchg
test
push
dec
jle
cmpsb
dec
out
sbb
in
dec
bound
adc
sti
push
pop
mov
sub
sbb
or
cli
pop
ljmp
pop
stos
outsl
lcall
scas
pop
mov
sub
sbb
or
cli
pop
ljmp
pop
stos
outsl
lcall
iret
pop
mov
sub
sbb
or
cli
pop
ljmp
dec
stos
outsl
sahf
xchg
mov
pop
lahf
dec
iret
cmp
sub
sbb
psubd
inc
test
aas
mov
nop
in
cmc
daa
inc
cmpsl
scas
xchg
lahf
xchg
mov
mov
and
sysret
or
inc
dec
inc
dec
mov
cmpsl
scas
xchg
lahf
xchg
xlat
ffreep
iret
aaa
cmp
pop
emms
sbb
mov
mov
cmpsl
scas
xchg
xchg
not
mov
adc
adc
push
add
sub
mov
xlat
add
adc
ss
hlt
push
mov
and
sbb
push
pop
jnp
repz
add
sub
loop
jae
je
adc
mov
inc
mov
mov
mov
cwtl
cmp
mov
sub
test
mov
aaa
mov
clc
mov
outsl
cmpsl
outsl
aam
add
out
cmpsl
scas
mov
imul
xchg
xor
outsl
loope
push
out
lock
sub
nop
inc
aad
and
les
outsl
pop
fucomip
adc
pop
into
pop
mov
das
inc
pop
pop
pop
psrad
pop
mov
dec
sbb
lds
push
das
in
inc
enter
bound
mov
add
sbb
inc
pop
call
popl
out
xlat
mov
aaa
daa
daa
aaa
pop
push
pop
push
ja
addr16
pop
inc
sub
scas
sti
sahf
leave
mov
mov
push
js
arpl
adc
cmp
pop
xor
call
out
iret
mov
mov
dec
dec
outsl
imul
or
pop
sub
decb
cli
mov
out
xlat
ffreep
iret
aaa
aas
daa
das
pop
pop
pop
emms
jg
outsl
push
pop
inc
dec
mov
cmpsl
scas
xchg
lahf
xchg
xlat
ffreep
iret
aaa
aas
daa
das
pop
pop
pop
emms
jg
outsl
push
pop
inc
dec
mov
mov
pushf
test
in
mov
test
pop
add
xor
jb
fnstenv
aaa
cmp
mov
enter
icebp
mov
add
sti
lcall
sub
out
adc
mov
cs
aas
add
test
and
or
rclb
lret
mov
fimuls
adc
rcr
xchg
inc
pop
test
jp
jge
pop
sbb
or
dec
add
push
pop
xchg
icebp
xchg
scas
push
popa
inc
in
js
push
stc
mov
jmp
push
jl
addr16
pop
mov
inc
das
sbb
push
test
lahf
push
cmp
cmpsb
imul
push
sub
iret
push
dec
ret
mov
lret
loop
xchg
jge
jbe
jb
pop
cmp
pop
in
xlat
sbbl
xchg
arpl
push
adc
test
jecxz
out
mov
jo
mov
xchg
dec
mov
or
jae
cwtl
inc
sub
psrlq
leave
out
pop
push
inc
cld
or
out
push
xor
cmp
or
int
test
mov
jnp
cmpsl
data16
pop
add
sbb
rolb
xorl
jnp
dec
pop
dec
clc
push
adc
fdivrl
aaa
pushf
jae
push
xor
jle
int3
jno
adc
out
inc
enter
jbe
or
mov
sbb
adc
push
rolb
sbb
out
push
or
jle
adc
jl
sbb
pop
lcall
je
out
xor
std
jecxz
jb
dec
shl
cmp
sti
rorb
fs
sub
adcb
ljmp
arpl
add
movsl
jmp
xchg
jmp
ds
mov
roll
aad
pop
dec
inc
loope
lret
lock
int3
mov
xchg
lea
shl
jecxz
and
fistpl
dec
lods
shlb
adc
add
add
or
and
ja
movsb
sbb
dec
cmpsb
ss
daa
dec
inc
push
decb
cmp
dec
lea
jmp
sbb
push
in
or
xadd
inc
sbbl
mov
fstpt
mov
cmp
sbb
xchg
jnp
mov
stc
loopne
mov
sub
lcall
gs
lahf
mov
fildl
stos
push
mov
cmp
jge
rcll
mov
das
sub
adc
mov
pop
cwtl
push
call
scas
fdivs
inc
cli
dec
fcomi
int
shll
movsl
jle
lea
test
lret
popa
into
arpl
and
stos
mov
adc
rcll
push
mov
data16
popa
dec
push
xor
adc
insb
shrb
popa
mov
jne
jbe
xor
push
jecxz
subb
xor
daa
xlat
test
mov
negb
test
mov
clc
scas
mov
inc
mov
jp
jle
pmaddwd
dec
jp
cmp
movsb
xchg
mov
push
adc
leave
mov
mov
mov
cmp
push
xor
int3
outsl
sbb
xchg
mov
loop
cmp
lcall
or
movsb
cmp
mov
shr
pop
jne
cmpsb
sub
dec
in
xchg
jbe
xchg
xchg
push
call
sbb
cwtl
dec
mov
gs
inc
sbb
or
pusha
movsl
insl
and
inc
lods
ss
adc
or
cltd
mov
lods
iret
pop
xchg
cltd
movsl
icebp
xorb
ja
sbb
pusha
icebp
dec
das
mov
orl
ljmp
push
adc
lods
stc
jbe
imul
aas
cmp
jae
mov
mov
cli
xor
sbb
mov
jae
scas
rcrl
mov
jbe
inc
jbe
lahf
and
xchg
fstps
lea
or
scas
pop
imul
and
ja
mov
jbe
mov
mov
pop
ljmp
mov
cmpb
jno
popa
sbbl
adc
cltd
or
mov
pop
mov
cmp
pop
sbb
stos
mov
jp
push
stc
out
into
in
xor
loop
mov
in
mov
cmpsb
add
xor
adc
xchg
cltd
sbb
inc
fcomps
xchg
aas
in
inc
ret
mov
xchg
sti
add
xchg
popa
lods
fistpll
jle
and
xchg
iret
mov
cmp
scas
add
jle
ja
cltd
cli
jecxz
or
add
jl
xchg
fnstenv
sbb
lock
aaa
insb
mov
adc
cmp
fs
cmp
out
fiaddl
mov
pusha
out
mov
stos
jno
outsl
addb
mov
push
ss
xor
shll
xchg
xchg
or
enter
popf
je
sahf
outsl
scas
push
in
cmpb
loope
push
push
imul
out
and
out
xchg
jns
mulb
insb
jno
leave
ss
popw
and
test
int
pop
and
sbb
lods
xchg
xor
int3
fwait
in
ljmp
mov
pop
inc
pop
outsl
sbbl
inc
mov
mov
pusha
mov
aas
ljmp
inc
pop
in
iret
insb
sbb
xchg
lret
mov
or
mov
and
cmpsb
dec
xchg
mov
inc
in
iret
out
add
mov
pop
jns
sub
ficoms
ss
mov
sbb
or
imul
cmp
xchg
jge
dec
sub
mov
sbb
pop
push
push
mov
cmp
outsl
frstor
ret
popa
insl
jp
jmp
test
aaa
pop
cwtl
push
jb
je
dec
pop
out
fdivl
inc
push
cmc
iret
shlb
jnp
mov
jge
xor
mov
or
inc
xor
jbe
je
dec
repz
fwait
dec
je
stc
mov
cmp
enter
dec
jmp
adc
insb
adc
outsl
cmp
push
ljmp
pop
and
xlat
shrb
jb
outsl
hlt
inc
add
in
out
mov
js
repz
push
repz
mov
dec
mull
mov
lahf
sub
cmp
and
jecxz
lea
inc
ja
mov
xchg
xchg
push
push
mov
sub
sub
xchg
pop
cli
mov
mov
test
sbb
xchg
and
ljmp
cmp
adc
pop
xor
mov
test
and
lock
bound
out
add
jbe
jo
push
lcall
jp
adcl
aaa
mov
in
push
filds
stc
mov
sbb
cmpl
pop
adc
out
mov
mov
lods
inc
inc
popf
fldln2
adc
mov
fnstcw
loop
xor
pushf
inc
push
xchg
in
inc
cmp
insl
sbb
enter
jb
popf
mov
or
cmp
jne
in
xchg
shlb
or
or
xor
out
and
sub
add
leave
fstl
sbb
push
cs
jne
sub
sahf
stc
jae
pop
rol
sbb
jno
sub
insl
xor
clc
jb
dec
bound
mov
bound
xchg
jge
test
repnz
push
sub
mov
les
lods
and
cmp
push
mov
roll
or
adc
lods
cld
push
int3
lds
ljmp
pop
pop
inc
pop
in
and
clc
or
addr16
out
jle
je
pop
aad
shll
push
int3
mov
lret
or
fcoml
in
imul
movsb
xor
outsb
frstor
insl
xchg
adc
add
xor
jae
popl
loope
out
add
inc
xor
movsb
lods
aam
sti
push
test
out
out
into
or
cwtd
lcall
repz
mov
lret
enter
push
aaa
mov
sub
mov
aaa
sti
int3
cmpsb
in
jo
ret
rclb
cmpsl
xor
pushf
mov
out
sbb
dec
pmulhuw
and
mov
in
aas
push
add
ret
dec
aas
je
lcall
and
xchg
stos
lret
xor
mov
cli
and
mov
in
jb
cmpsb
into
fdivrp
jle
adcb
sbb
leave
roll
jp
movsl
lahf
movsb
push
pusha
or
sbb
test
cld
mov
mov
mov
data16
cld
test
scas
push
dec
icebp
cmp
adc
push
pushf
mov
sbb
pop
and
add
jp
and
add
fcompl
adc
xchg
mov
cwtl
dec
xchg
pop
in
xchg
push
ficoms
aam
push
sahf
jbe
daa
fcompl
lahf
mov
pop
and
or
icebp
imul
je
xor
loope
jno
mov
mov
xchg
or
mov
push
into
gs
adc
negb
jecxz
mov
cs
push
call
push
cmp
mov
dec
push
xchg
das
push
pop
lds
addr16
mov
lcall
mov
and
lahf
pop
mov
in
jle
push
add
aas
nop
xchg
push
dec
fidivs
ret
sub
dec
outsl
add
or
int
inc
scas
jl
outsl
hlt
aad
popf
push
push
into
xorl
mov
xchg
and
repnz
jmp
test
test
enter
pop
mov
imul
sub
fldl
mov
jge
cmp
ret
jno
fwait
adc
add
fs
je
push
gs
in
mov
push
ret
sub
cmp
lret
popa
fcompl
dec
sub
imul
aam
push
das
ret
insb
daa
xor
test
mov
and
hlt
mov
icebp
jp
dec
ret
into
mov
outsb
rsm
adc
mov
sub
jl
mov
cmc
lea
mov
in
ja
pop
and
mov
jle
movsl
and
inc
stc
fs
xchg
dec
xchg
loope
sbb
jp
pushl
int
stos
mov
aad
movsb
push
sahf
xor
ret
inc
loopne
adc
pop
jecxz
es
pop
push
mov
sub
or
js
sub
or
daa
and
loop
cmc
sub
lds
pop
in
in
lods
unpckhps
insl
xchg
pop
stos
or
shll
aas
push
clc
mov
adc
mov
pop
popa
dec
loopne
enter
mov
jp
leave
dec
into
lcall
mov
movsl
mov
mov
sub
cltd
add
aam
inc
cmp
jbe
in
popa
jle
xor
push
or
fstpl
or
icebp
sbb
ret
mov
fwait
aad
iret
stos
icebp
mov
sahf
outsl
adc
outsb
ja
in
add
leave
adc
xor
mov
aam
add
xor
bound
fisubrl
pop
mov
shlb
xchg
add
ret
cwtl
xchg
jg
jns
sti
or
sbb
xor
lahf
gs
xchg
out
popf
mov
jmp
lcall
pop
stos
inc
rcrb
rorl
aaa
out
pop
xchg
add
and
rclb
dec
push
int
mov
in
push
scas
xchg
pop
cld
test
mov
test
in
add
shrb
dec
sub
sub
jle
dec
movsl
ja
insb
stos
outsl
leave
in
cwtl
adc
cmp
jne
mov
sbb
inc
push
cmp
out
add
jmp
into
sub
movsl
out
pushf
in
or
aaa
test
fwait
push
pusha
mov
test
push
imul
loope
jecxz
lock
std
fildl
and
mov
xor
dec
in
mov
ret
sub
leave
js
fisubrl
pop
frstor
mov
sbb
add
ljmp
dec
aaa
jge
aaa
adcl
dec
stos
add
out
push
or
or
or
pushf
jnp
fstpt
xor
jne
pop
dec
adc
push
repnz
xchg
mov
add
jecxz
int3
pusha
and
cwtl
rcrb
in
xchg
movhlps
pushf
adc
movsb
movsb
in
pop
pusha
xchg
loop
xchg
mov
mov
push
add
inc
xor
fisubrl
iret
xor
lcall
lods
shll
ja
adc
imul
cmpsb
push
aas
jmp
subl
mov
mov
jae
mov
jae
jle
mov
xchg
out
test
lods
adc
int3
lock
jo
mov
xlat
sub
mov
xor
jl
loope
mov
push
orb
loop
xchg
pop
pusha
test
sub
add
out
mov
mov
adc
int3
lcall
es
sub
jge
push
repnz
into
fadds
ss
adc
fbstp
lods
pop
dec
nop
rclb
sub
sub
add
and
fdivl
or
lods
and
push
inc
sub
jo
fwait
add
out
popa
mov
iret
xchg
pop
inc
aad
roll
shll
push
jmp
push
mov
mov
push
lret
outsl
mov
dec
movsb
jg
lahf
and
movsb
fcompl
mov
cmp
scas
xchg
lret
or
jl
cmp
jo
mov
jmp
clc
fstps
xchg
pop
xchg
lods
xchg
pop
xor
sbb
movsl
in
adc
leave
jno
lods
mov
popa
dec
aad
decl
inc
cli
or
loop
jo
xor
movsl
arpl
out
repz
mov
sbb
dec
into
sbb
lret
mov
xchg
jecxz
xchg
push
je
xchg
addr16
iret
testb
pop
bsr
dec
mov
mov
fmuls
addr16
mov
mov
push
push
pop
mov
xorl
or
push
fistpll
bound
sbb
repz
adc
cmp
aas
lahf
and
jne
sub
ljmp
jae
xchg
xor
into
or
mov
cld
xor
xchg
imul
push
jp
sbb
call
pop
push
jge
iret
adc
adc
aas
add
ljmp
add
dec
sbb
adcl
repz
scas
xor
inc
insb
add
lcall
add
mov
jp
push
cmp
xor
push
mov
mov
imul
sub
mov
mov
ret
fstps
movsl
loop
imul
pop
jg
nop
push
add
arpl
lcall
add
aas
mov
scas
repz
xor
inc
rorb
and
mov
mov
push
mov
andl
imul
lods
test
xchg
adc
popf
push
push
dec
inc
mov
aas
dec
inc
stos
pop
cmp
int3
lret
mov
sbb
outsl
out
pop
lret
shl
repz
push
mov
leave
xor
inc
mov
pop
push
lahf
mov
loope
in
fcoml
aad
cmpsl
jmp
lahf
cmp
push
xor
repz
pop
push
or
std
cmpsl
outsl
cmp
mov
add
sbb
mov
rorb
mov
leave
jl
or
mov
push
je
xchg
push
mov
jmp
push
inc
gs
sub
aas
fcmovu
out
imul
aas
xor
std
cmp
push
aas
adc
sahf
icebp
mov
cwtl
xchg
fs
shll
loopne
add
mov
or
cmpsl
sub
push
fistpll
into
in
scas
repnz
mov
leave
in
sbb
stos
dec
cltd
loop
add
pop
xchg
pop
fdiv
sti
sub
pop
adc
in
leave
pop
data16
stos
in
inc
cmc
icebp
cmc
incb
in
dec
imul
sub
lret
mov
or
in
and
jo
xchg
js
test
pusha
les
std
add
xchg
mov
or
jns
xlat
cwtl
and
in
arpl
push
pop
fimull
cmc
push
cmc
sbb
repz
xor
loope
daa
lds
das
shlb
pop
in
in
inc
cs
pop
sbb
xchg
lods
cmc
hlt
dec
sbb
inc
mov
cmp
adc
dec
int
mov
sahf
das
xor
inc
shr
dec
pop
scas
out
icebp
inc
cmp
push
sbb
int
jo
jbe
ror
mov
xor
adc
mov
xor
and
mov
iret
and
push
sahf
aas
out
shll
fisubrs
xor
ret
cmp
in
lcall
adc
or
mov
testb
fstl
shrb
int
or
lret
bound
or
pop
sbb
jnp
lahf
and
cmc
movsl
in
cmpsb
scas
int3
dec
pop
leave
mov
test
pop
iret
inc
pop
ds
mov
test
fcompl
les
and
sub
xor
add
mov
jbe
push
shrl
out
enter
inc
cltd
sbbl
insb
fstpt
mov
pusha
imul
xchg
lcall
aas
popf
out
andb
dec
and
fnstcw
cmp
sub
roll
sub
mov
xor
popa
insb
jmp
jne
mov
jg
mov
and
pop
stos
cld
cli
xchg
call
rclb
mov
jl
xchg
dec
mov
ficomps
in
dec
mov
cs
iret
int
mov
aam
es
fucomip
mov
insl
cmpsb
cli
push
dec
pop
jge
fimuls
jne,pt
inc
lods
clc
cmp
push
mov
loop
jl
lcall
shrb
cmp
mov
fidivrl
nop
and
sar
in
cmc
add
rcll
inc
jb
sbb
scas
out
mov
test
mov
cmpsl
mov
pop
insl
mov
jmp
stos
push
jo
jg
mov
jns
and
test
mov
fcomip
loop
pushf
push
push
jns
sub
daa
mov
push
add
loope
lock
jnp
lahf
xchg
test
cmp
jg
inc
adc
mov
mov
into
clc
sub
hlt
sbb
scas
inc
loope,pn
sub
insb
push
jbe
xchg
mov
cmpsb
sub
mov
je
mov
mov
push
shrb
mov
jb
mov
jns
and
sbb
cmp
ret
nop
inc
lods
pop
iret
jecxz
sbb
rcll
stc
jns
loop
or
xchg
aas
mov
cmpb
loope
out
pop
pop
push
les
scas
push
or
xor
adc
mov
mov
subb
add
mov
in
clc
testb
adc
sbb
sbb
icebp
int3
lds
popf
sti
sub
std
mov
dec
sbb
cmp
mov
scas
test
jl
sbb
test
scas
xchg
lods
lods
shrb
cmp
mov
pushf
jge
scas
rcl
mov
into
popf
jmp
pop
aaa
das
mov
xor
push
jb,pn
sti
rcr
dec
sub
jle
je
rol
add
movsb
mov
sbb
pop
dec
add
pop
push
fdivrl
aaa
inc
outsl
mov
dec
and
adc
jmp
stos
dec
xchg
test
test
loope
xorb
pusha
xchg
fimull
pop
jae
jno
dec
imul
mov
aam
aam
push
mov
in
mov
push
gs
testl
mov
ret
pop
inc
stc
insl
mov
and
scas
cmp
xchg
test
cmp
bnd
jg
xlat
jne
aaa
ret
mov
pop
mov
mov
cmp
push
je
bound
mov
and
push
jmp
mov
mov
xlat
xor
or
inc
xchg
cli
test
pop
int
push
inc
xchg
test
aas
addl
adc
mov
pop
xchg
dec
jb
lret
sub
repnz
lahf
and
inc
cmp
or
sbb
sub
or
adc
dec
in
jne
mov
push
xchg
test
js
bnd
fdiv
dec
pop
inc
test
mov
clc
ds
jae
pop
push
pop
mov
js
and
mov
mov
pusha
cmp
ret
add
popa
rclb
pop
lock
pop
lods
cmp
sbb
je
cld
sub
and
inc
add
jge
cltd
cmp
ds
mov
repnz
push
jp
lret
mov
pop
and
mov
aaa
sbb
or
pop
data16
out
jb
bnd
popf
pop
inc
sub
and
fcmovnbe
add
iret
mov
mov
test
or
cmpsl
mov
mov
and
mov
insb
mov
mov
loope
mov
leave
loopne
cmp
adc
sub
aas
sub
sarl
sub
idiv
out
xlat
ffreep
iret
aaa
aas
daa
das
pop
pop
pop
emms
jg
outsl
push
pop
inc
dec
mov
cmpsl
scas
xchg
lahf
xchg
xlat
ffreep
iret
aaa
aas
daa
das
pop
pop
pop
emms
jg
outsl
push
pop
inc
dec
mov
cmpsl
scas
xchg
lahf
xchg
xlat
ffreep
iret
aaa
aas
daa
das
pop
pop
pop
push
ja
outsl
push
pop
inc
dec
mov
cmpsb
scas
xchg
lahf
xchg
xlat
ffreep
iret
aaa
aas
daa
test
imul
nop
test
mov
add
xor
and
cmp
sub
push
pusha
fs
xchg
lea
aam
inc
in
hlt
in
in
adc
add
xor
and
push
dec
inc
jge
insl
lea
movsb
fst
std
std
mov
in
adc
add
xor
and
push
push
inc
gs
test
test
rcl
movsb
fstl
mov
pop
cmp
xchg
dec
cmpsl
mov
or
xor
cmc
and
adc
dec
and
inc
repnz
xchg
dec
mov
sbb
inc
mov
sub
movsb
adc
into
ret
imul
leave
xchg
divb
jnp
je
pop
fst
xor
add
and
push
dec
inc
cmp
fwait
push
dec
mov
mov
hlt
and
in
imul
int
mov
popa
popf
out
push
pop
fs
or
imul
push
rcr
mov
add
add
rcrl
aam
adc
cmp
push
pop
inc
jge
je
test
movsb
out
in
lea
push
dec
cmp
inc
xor
insl
xor
icebp
loope
into
fmul
loop
mov
mov
testb
push
xor
push
xor
fs
call
lret
fnsave
mov
pop
inc
inc
adc
je
fs
xchg
lea
aam
std
hlt
in
in
adc
add
xor
and
push
dec
inc
jge
insl
fs
xchg
lea
aam
std
hlt
in
in
adc
dec
addb
clc
jg
test
mov
sub
cltd
shll
or
mov
dec
lods
lahf
sub
sub
jge
rolb
push
sub
jmp
xchg
negl
mov
fldcw
inc
dec
outsl
push
lods
xor
sahf
jge
je
and
mov
xchg
dec
popf
mov
push
incl
test
sub
inc
int
adc
mov
dec
cmp
sbb
push
in
mov
mov
mov
mov
popf
movl
ret
icebp
or
movsl
test
pop
incb
sub
mov
in
shrl
negb
xor
test
mov
aaa
cmp
xor
das
jbe
sbb
pop
test
into
sbb
je
imul
mov
adc
xchg
jno
mov
idivb
outsb
cld
pop
add
rcrl
dec
fsubp
xor
pop
imul
cmp
dec
outsb
or
cmp
xlat
adc
mov
xchg
lds
stc
or
aam
xor
addr16
stos
mov
cmpsb
dec
mov
mov
enter
mov
adc
in
fcom
dec
mov
inc
and
sub
mov
sbb
mov
sub
sbb
inc
pop
popa
in
insl
aas
mov
jge
ss
cmp
xchg
xor
dec
xchg
push
in
pop
mov
nop
ds
xchg
aaa
movsb
cmp
pop
lret
push
pop
divb
movb
cmp
repz
movsl
mov
ret
jne
aaa
data16
inc
push
push
dec
fdivl
dec
dec
mov
jl
push
push
cwtl
and
add
mov
and
adc
or
decb
xchg
idivb
adc
push
pop
or
notl
fcomip
xchg
and
lods
addl
stos
stos
iret
mov
pop
inc
lds
test
shl
sub
mov
xor
movsl
add
into
loop
addr16
in
mov
push
loopne
insb
sbb
cmpsl
ljmp
xor
push
lret
frstor
les
inc
decl
in
and
cmp
js
adc
push
xchg
cld
jns
add
mov
scas
lods
pop
decb
sbb
sbb
dec
pop
repz
xor
js
inc
sbb
jge
jnp
arpl
leave
xchg
iret
xchg
popa
or
fistpl
pop
jne
inc
shll
pop
mov
pop
stc
jp
inc
adc
adc
pop
movsb
aam
pop
pop
in
imul
das
mov
loopne
aas
cmp
test
mov
mov
push
cld
mov
cmc
subl
dec
mov
cld
shlb
sbb
ret
pop
jb
in
adc
push
push
fwait
xchg
repnz
push
dec
aas
cmp
push
xor
jg
sub
xchg
hlt
jbe
mov
insb
add
pop
mov
sahf
sbb
icebp
push
push
cmpsl
jno
xchg
inc
sar
sbb
push
jb
pop
enter
imul
ret
sti
push
sub
dec
sbb
addb
cmp
out
cli
mov
aad
cmp
daa
ja
lea
pop
pusha
xchg
or
sbb
seto
lods
pop
mov
imul
mov
mov
cltd
js
push
mov
xlat
test
testl
adc
les
sub
std
out
inc
sbb
or
cmp
xchg
inc
add
pop
aad
fmul
mov
and
pop
leave
loop
std
lods
out
and
sbb
sub
and
push
inc
imul
imul
clc
repz
or
fisttps
sbb
cli
push
idiv
or
jmp
jae
test
out
js
mov
cmp
pop
rcrl
push
stc
les
imul
sbb
fnstcw
popf
divb
fcomip
in
test
movsb
sub
lcall
xchg
push
or
mov
faddl
jecxz
insb
nop
sti
mov
add
mov
movsb
inc
adc
pop
mov
and
adc
lods
cwtl
mov
frstor
sub
adc
enter
push
in
cld
iret
mov
in
xchg
sub
into
shlb
or
and
inc
popf
and
jns
data16
icebp
push
jecxz
outsb
pop
mov
insb
loopne
nop
or
popa
jne
imul
xchg
jnp
xor
sub
dec
mov
int
xchg
sbb
jne
iret
jo
mov
xchg
or
jo
push
jne
add
mov
addr16
jns
inc
dec
add
aad
lret
mov
mov
loopne
scas
push
fstp
nop
jmp
push
std
sti
dec
hlt
push
out
fstpl
test
movb
nop
xchg
pusha
xor
jle
imul
pop
lea
or
dec
mov
pop
cmpsb
enter
jo
out
lret
push
mov
adc
dec
negb
xor
test
call
and
sbb
cmpsb
jl
ds
dec
mov
loop
rorl
cmp
xchg
dec
xchg
jmp
xchg
nop
inc
pop
mov
add
test
inc
inc
pop
cmp
xorl
mov
jg
js
jbe
push
jae
loop
movsl
push
add
shlb
les
cmpsl
mov
ljmp
fdivrs
xor
push
fiadds
xchg
xor
pop
or
shlb
jg
int
and
cld
mov
push
sub
jae
mov
mulb
mov
imul
cmp
xor
lods
xchg
sbb
rcrl
mov
out
or
sub
cli
hlt
fisubrl
in
das
std
scas
movsl
xor
jae
or
push
movsl
bound
pop
shlb
test
int
mov
jl
pop
mov
mov
fsubrl
cli
sbbl
adc
incl
xchg
scas
imul
rol
sbb
rcrb
xor
stos
jae
aam
dec
cmp
adc
sub
xchg
je
je
int3
mov
sub
popa
or
nop
test
sbb
xchg
mov
xor
gs
inc
xchg
das
daa
push
mov
cwtl
das
push
jge
cmp
scas
fbld
out
fst
inc
fdivs
sbb
fiadds
ja
sub
imul
mov
notb
pop
popf
sub
jb
adc
fistl
lahf
test
push
pop
ss
add
in
xor
mov
pop
pop
sub
pusha
jl
pop
jb
and
sub
xor
mov
add
fstpl
dec
push
inc
add
cmp
pop
add
xchg
mov
pushf
mov
adc
bound
adc
dec
scas
cld
push
scas
je
sahf
sub
jno
mov
fsubs
xor
adc
ss
popa
std
std
xor
xchg
mov
mov
sbb
push
dec
adc
sub
mov
pop
xchg
xor
lods
cmp
fmulp
sub
xor
popa
lret
pop
test
scas
add
iret
xchg
movsb
xor
fadd
mov
xchg
das
mov
les
enter
cmp
mov
aaa
adc
bound
jecxz
insl
mov
mov
mov
out
adc
ds
inc
icebp
das
push
out
mov
call
lcall
ret
fisttpll
sbb
dec
dec
and
jecxz
jbe
out
sub
xchg
xor
outsl
lods
aaa
add
repnz
add
scas
mov
cmovp
scas
add
inc
add
push
sbb
fs
push
scas
mov
or
pop
std
xor
insl
cmp
lahf
bnd
sarb
mov
mov
popf
push
jbe
adcb
jb
add
mov
mov
lcall
in
mov
xor
sbb
push
or
test
fsubr
bound
imul
mov
add
insl
dec
popa
jge
scas
mov
into
push
fcoms
mov
add
mov
or
outsl
out
icebp
icebp
jb
stc
rorb
lods
icebp
bound
sub
inc
leave
mov
mov
sbb
aaa
adc
pop
pop
dec
mulb
push
pop
dec
outsb
lcall
das
popa
push
jmp
jecxz
mov
add
dec
jl
adc
jb
push
into
outsb
stos
jbe
adc
push
shl
ljmp
jge
pop
rcl
aad
test
shll
dec
mov
dec
cmp
sbb
enter
hlt
cwtl
push
arpl
and
nop
pop
and
movsl
inc
stos
xchg
loope
mov
das
xchg
cmpsb
rcl
xor
push
xor
jb
sbb
mov
jbe
mov
in
xchg
cmpsb
stc
jbe
dec
cmp
push
inc
mov
adc
je
rclb
cmc
sbb
sbb
inc
mov
lock
adc
adc
pop
shrl
push
leave
outsb
inc
xchg
dec
shr
popf
in
jg
cmp
xchg
aaa
mov
xchg
mov
push
pop
xor
int
jnp
and
lcall
jne
mov
imul
sub
cmp
jl
pop
cld
jecxz
insl
mov
add
clc
push
sub
lret
out
imul
mov
sbb
mov
add
test
lahf
lahf
inc
and
imul
or
sbb
push
enter
or
jmp
into
push
test
or
mov
nop
out
jp
outsb
pop
or
movsl
sarb
or
mov
lods
xor
sbb
or
adc
and
ds
negl
in
add
cld
xchg
fidivrl
insb
pop
jle
mov
push
aam
inc
push
jl
add
xor
out
inc
sarl
mov
and
sahf
add
mov
mov
mov
xlat
fld1
sbb
adc
imul
add
fmul
hlt
cli
ljmp
pushf
fistl
mov
mov
dec
xchg
mov
mov
add
add
dec
icebp
rolb
loope
lock
dec
loopne
lahf
mov
dec
cmc
aad
sub
push
notl
adcl
out
mov
les
int3
mov
mov
cmpsl
mov
lcall
cmpsl
pop
mov
sub
dec
adcb
xchg
cld
sub
cmp
and
out
cmp
mov
push
lcall
and
lret
lea
dec
mov
jle
movsl
orl
pop
cmpsl
cmpsb
daa
cmp
lahf
rolb
sub
xorb
add
inc
dec
nop
inc
and
int
mov
cld
xchg
mov
push
sbb
lret
mov
lahf
jbe
xchg
mov
push
testb
test
mov
out
jnp
adc
fcmovnb
sub
decb
or
insb
xor
ja
fnsetpm(287
in
sbb
and
fiadds
sbb
jp
fidivrl
jno
mov
loope
sub
push
in
lcall
mov
out
hlt
les
cmp
xchg
enter
xor
adc
cmpsb
aaa
shll
push
add
add
lcall
insb
add
or
leave
enter
push
cmp
sbb
fwait
in
mov
movsl
mov
push
stc
das
fcmovbe
add
lock
iret
jmp
mov
sbb
std
mov
jno
sub
mov
xchg
pop
sahf
jge
sub
mov
cmp
hlt
mov
rclb
clc
xlat
imul
out
push
sub
imul
push
or
xchg
mov
sub
or
push
dec
hlt
cmc
vpmacssdd
test
iret
push
mov
xlat
xor
daa
lods
imul
mov
jbe
cltd
cltd
gs
inc
mov
adc
pusha
popa
test
push
push
pop
xchg
xchg
push
xor
mov
out
adc
iret
test
and
xor
dec
jbe
jp
adc
mov
push
pop
pushf
push
push
sbb
push
xchg
loopne
les
jne
xchg
fcompl
cmp
enter
dec
fs
cld
pusha
pop
add
mov
lea
mov
cli
fsubrs
adc
jo
pushl
repz
scas
pop
inc
rcrb
inc
jns
adc
test
inc
xchg
cmpsl
mov
shr
popf
cmp
nop
xchg
push
movsl
adc
xor
dec
ret
cmpl
imul
or
lcall
shl
xor
xor
or
add
int
shll
dec
jo
inc
adc
add
stos
test
mov
rol
aaa
jne
pop
and
add
sbb
loop
jg
dec
mov
pop
das
test
push
xchg
xchg
enter
out
mov
mov
subl
lret
popf
je
adc
loopne
loope
inc
sub
dec
aas
cmpsb
ret
popf
sar
add
mov
adc
dec
jne
pop
or
imul
fldcw
pop
cmp
and
nop
enter
mov
mov
pop
cs
loop
pop
lahf
dec
adc
fstps
stos
stc
stos
idiv
sahf
xor
jns
or
add
pushf
lods
lret
jne
mov
bound
jl
arpl
pusha
test
loopne
clc
adc
dec
adc
gs
dec
std
pop
and
pop
das
aas
push
xchg
sbb
push
inc
mov
test
and
jno
scas
ds
xchg
jmp
movsb
cmp
sbb
andl
lods
lahf
hlt
sub
push
js
in
test
movsl
stos
mov
ja
lods
leave
or
cmpsl
xchg
push
inc
adc
cwtl
aas
push
xchg
shll
or
dec
mov
sbb
stos
fs
or
into
or
push
scas
fidivs
outsb
rcl
sbb
dec
mov
cltd
adc
inc
push
or
and
add
push
mov
stos
jae
ret
xchg
sarb
xchg
test
test
or
jb
inc
ficoml
xlat
movsl
and
jmp
mov
or
loope
hlt
dec
lods
in
sqrtps
pop
mov
arpl
addl
sti
dec
mov
xlat
bnd
or
mov
pusha
xchg
pop
or
or
jl
mov
pop
pop
jp
mov
movsl
jns
and
dec
in
fnsave
leave
and
xchg
jge
int
call
and
repnz
dec
adc
sbbb
iret
std
outsb
pop
int
push
xchg
jb
fcmovne
and
lods
pop
dec
cmp
nop
mov
add
rorl
imul
and
fs
sub
ss
mov
nop
jbe
cmp
popa
test
sbb
cwtl
leave
imul
mov
mov
inc
jae
xor
xchg
fildl
nop
lahf
bnd
sbb
mov
jg
jbe
add
mov
fcmovne
jnp
cltd
dec
cmpsl
add
bound
shl
add
loopne
jp
movl
mov
adc
pop
mov
sysexit
inc
cmp
aaa
pop
sbb
xchg
es
pop
in
ffreep
dec
nop
pop
mov
fldcw
sahf
lret
pop
sub
cs
push
xchg
or
ffree
mov
xor
mov
pop
popfw
xor
fs
jae
jge
int3
pusha
push
in
add
push
cld
xor
jge
scas
pop
mov
jecxz
fisttpll
stos
xchg
popa
lods
mov
or
mov
cmp
or
sbb
lock
pusha
mov
int3
jg
lock
add
daa
cmpl
scas
lcall
jge
jne
lea
das
cmp
stos
jp
repnz
jae
and
inc
mov
mulb
insb
xor
xchg
cmp
sub
pop
loop
andl
mov
and
push
inc
and
jbe
adc
aad
inc
clc
lea
mov
ljmp
pop
shll
scas
or
movsb
mov
jp
mov
adc
pop
sub
jno
and
and
xchg
sbb
mov
aas
push
idivb
pop
shlb
sub
icebp
sub
imull
mov
addb
sbb
jnp
dec
pop
mov
iret
lods
jmp
lcall
inc
jns
or
aad
and
mov
repnz
jmp
jmp
sbb
movsl
es
push
popf
fistl
and
enter
loope
adc
lea
sti
push
ljmp
mov
push
adc
jp
inc
test
and
pop
insb
nop
push
and
shll
xchg
jmp
push
dec
in
or
testb
and
insl
inc
mov
add
lret
pusha
inc
test
rolb
pop
arpl
fisttpll
jns
outsl
cwtl
mov
push
lods
arpl
shr
xor
int
cmpsl
daa
js
data16
cld
adc
mov
lea
xor
cmp
sbb
lods
push
stc
pop
sub
push
dec
lret
mov
outsl
je
ret
xchg
jl
pop
and
shlb
ss
ret
jb
clc
fisttps
and
ret
add
repz
outsl
sahf
andb
daa
push
nop
mov
mov
mov
gs
lahf
mov
cs
xchg
mov
mov
movsb
adc
outsl
mov
pop
subl
cmc
inc
neg
loop
xor
adc
jne
daa
adcl
test
mov
pop
jle
shlb
rolb
xor
and
or
or
add
mov
shl
push
mov
mov
cmc
iret
negl
and
aad
adc
aas
testl
pop
rolb
data16
fisubrs
shll
xchg
add
rolb
les
lret
sti
ds
jbe
cmp
sub
and
das
jge
jl
fs
inc
dec
and
leave
insl
and
test
pop
jg
ret
jnp
mov
jae
rcrb
dec
out
mov
xorb
cmc
mov
inc
push
cmp
pop
jge
and
mov
push
jge
xchg
jns
aad
pushf
jns
ret
jb
sbb
push
adc
mov
mov
pop
je
aaa
push
inc
popa
jno
popf
add
jnp
arpl
cmp
rcll
shl
outsl
xor
aaa
in
mov
daa
jne
cs
cli
xchg
aad
xor
push
outsb
sbb
dec
mov
enter
out
int
je
pop
dec
mov
push
negl
add
outsb
push
shlb
cmpsl
lcall
xchg
xchg
jno
inc
fs
and
mov
stos
pop
push
addl
and
movsl
fldl
mov
lret
push
push
jge
cmp
into
loop
mov
scas
jl
int
ficoml
cld
push
pop
scas
jns
out
jge
mov
cmp
mov
arpl
loopne
test
test
jnp
sub
xchg
mov
xor
ficomps
pop
das
adc
mov
sbb
lret
inc
bound
cmp
adc
jmp
cld
sbb
movl
bound
cwtl
mov
sbb
or
cmpsb
ret
and
pop
dec
icebp
and
or
xchg
shr
cltd
in
loope
push
insl
cmpsl
mov
mov
adcl
and
out
jo
mov
dec
divb
sti
out
rclb
fs
sbb
dec
popf
add
mov
pop
mov
and
mov
pop
cwtl
lds
sbb
andl
mov
rcll
sub
icebp
enter
cs
std
inc
adc
sbb
sub
mov
std
cmp
xlat
cmp
lods
adc
jb
lret
and
lods
sbb
sbb
pop
in
xor
xor
cmc
adc
cli
gs
dec
icebp
sub
int
cld
into
ljmp
and
mov
ljmp
xor
mov
add
mov
push
sbb
ss
leave
dec
xchg
xchg
and
xor
jecxz
loope
cmp
cs
push
sub
lds
jae
sbb
sub
stc
out
movsl
fwait
lods
call
test
stc
mov
fnstsw
add
xchg
mov
xchg
aad
push
out
push
loopne
xchg
sbb
repnz
sub
push
push
xchg
push
gs
arpl
mov
inc
aad
pop
pop
push
adc
cmpsb
mov
mov
and
int
cmp
inc
out
outsb
aaa
sub
insb
xorb
test
xlat
inc
pop
jae
push
cmp
arpl
out
jecxz
sub
jo
pop
stos
scas
dec
shr
pop
testl
pop
fs
sub
jne
je
xchg
mov
dec
push
mov
xchg
push
aam
rcrl
and
aad
sub
mov
sahf
sub
xchg
movsb
mov
add
xor
and
push
dec
inc
jge
insl
fs
xchg
lea
aam
std
hlt
in
in
adc
add
xor
and
push
dec
inc
jge
insl
fs
xchg
lea
aam
std
hlt
in
in
adc
test
push
dec
les
insl
fs
adc
test
aam
std
hlt
out
in
adc
add
xor
and
push
dec
inc
std
je
bound
shrl
or
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
inc
bound
inc
or
jne
push
jl
add
rol
ret
mov
inc
jb
bound
inc
push
xor
and
adc
addr16
loop
shll
xchg
xlat
xchg
dec
jb
bound
jle
rdmsr
pop
and
adc
add
repnz
lcall
inc
test
adc
add
daa
push
mov
int
adc
pop
sub
mov
mov
cmp
mov
jb
jb
cmp
shll
stc
scas
lcall
or
sar
pop
sub
rcr
bound
aas
andb
leave
ds
cmp
cmpsb
aam
cmp
sbb
popa
dec
xchg
push
ja
inc
in
adc
xor
and
sbb
loop
push
scas
sbb
adc
dec
xorb
adc
mov
ss
or
out
cmp
xchg
mov
inc
je
in
jmp
stos
jge
test
sub
cmp
or
xchg
repnz
xchg
cmpsb
jge
jb
bound
jno
push
xor
adc
add
repnz
out
sar
ret
sahf
mov
and
adc
add
imul
dec
jbe
add
test
loop
shl
ret
out
push
inc
push
adc
and
push
sub
xchg
nop
mov
xchg
nop
repz
cmc
xor
mull
xor
aaa
data16
push
and
adc
add
repnz
loop
shl
ret
xchg
push
jb
bound
inc
push
xor
and
adc
add
repnz
loop
shl
ret
xchg
push
jb
dec
das
cmp
sub
clc
loop
cld
or
ss
mov
imul
cmp
test
jo
aas
shlb
xor
or
cmp
mov
and
mov
dec
jmp
push
inc
stc
pop
inc
lods
das
inc
aad
je
mov
test
and
in
mov
or
mov
fs
lcall
rcrb
stos
test
adc
testb
imul
notb
shr
mov
jecxz
cwtl
sub
mov
fincstp
inc
fcoml
push
popa
xor
cltd
jne
pop
and
mov
sub
imul
push
inc
jno
inc
or
iret
inc
shll
mov
movsb
add
pop
mov
nop
mov
sahf
and
div
lahf
push
aas
test
xchg
rcrb
or
stos
repnz
xor
cmp
jno
out
arpl
push
lods
js
clc
jbe
jle
jae
pop
out
ja
sbb
mov
jmp
sub
push
sbb
gs
shlb
rcr
rcl
jno
addr16
sub
das
sub
mov
adc
and
sub
lret
cwtl
incb
outsl
icebp
fwait
fwait
dec
adc
pop
fnstsw
repz
xchg
sub
pop
fisttpl
idiv
and
mov
cwtl
dec
and
adc
mov
add
adc
mov
sar
test
js
movsb
cmp
sbb
movsb
pop
add
mov
insb
imulb
xchg
data16
push
int
sti
stc
cld
sbb
dec
add
clc
cmpl
jl
and
es
out
fwait
shll
xchg
std
pop
cli
or
ss
pop
or
inc
lea
imul
adc
scas
sbb
stos
mov
cmp
shr
pop
jmp
repz
pop
aam
aas
loope
rclb
aam
mov
into
pop
aam
mov
not
ret
adc
and
hlt
inc
dec
js
dec
out
add
aad
jo
outsl
sbb
fiadds
int
xchg
sub
adc
clc
xchg
pop
loop
sarl
xor
lock
test
stos
je
ds
xor
shrl
fwait
xchg
int
icebp
call
iret
pop
imull
mov
shll
jbe
add
ja
jb
and
iret
mov
scas
aam
lods
and
gs
and
cmc
pop
adc
out
iret
xlat
xor
sub
sbb
cmp
or
iret
cwtl
divb
xchg
das
sub
jp
pop
nop
dec
mov
pop
adc
dec
lods
int3
dec
hlt
inc
data16
iret
mov
add
jns
mov
scas
ljmp
xor
inc
mov
adc
or
cmpsb
add
ficompl
int
sbb
ss
enter
scas
clc
xchg
aaa
pop
mov
xchg
repz
rorl
movl
movsl
outsl
xchg
xor
out
pop
cwtl
xchg
lcall
xchg
fldcw
sub
and
ret
repz
adc
ljmp
push
je
or
fs
sbb
add
add
iret
adc
adc
mov
push
out
or
mov
adc
pop
fldt
xchg
mov
dec
cwtl
xor
and
xor
add
adc
sti
shrl
sbb
ds
mov
cs
cmp
mov
int3
add
repnz
push
std
dec
ljmp
js
les
neg
or
gs
fcoms
mov
or
or
and
mov
mov
jmp
dec
xchg
cmpsb
mov
adc
xor
sbb
lods
mov
adc
arpl
mov
dec
jb
pop
loope
hlt
xor
xchg
mov
pusha
inc
cmp
clc
test
or
jle
add
jmp
mov
sbb
dec
inc
jo
fwait
in
jo
es
addl
out
cmpsl
pop
stos
jecxz
jecxz
adcb
jecxz
bound
cmc
addr16
or
sbb
cmp
dec
mov
repnz
out
rcrb
rorl
adc
push
mov
jge
popf
pop
scas
sbb
sub
jnp
jne
hlt
sbbb
jle
ja
divb
lods
insb
add
sub
jne
ficoms
popa
icebp
push
ret
inc
xacquire
push
xlat
mov
push
adc
jp
xorl
mov
inc
ds
cwtl
imul
sbb
andl
enter
mov
mov
jae
adc
xorl
jle
in
and
xchg
adc
jo
hlt
mov
in
sub
jns
mov
mov
sbb
xor
in
cmpsl
gs
es
sbb
mov
pushf
push
jg
call
pop
jle
repnz
fwait
int3
jae
pop
daa
sub
cmpsb
movsb
push
dec
jnp
shlb
pop
data16
add
das
jns
mov
pop
sti
and
daa
scas
ss
dec
jg
aaa
jb
pop
cmp
insl
lcall
push
xchg
mov
or
cmpsb
xchg
mov
push
pop
adc
in
or
js
xchg
add
insb
ja
jmp
ds
dec
push
and
cmpsl
icebp
fisttpl
sbbb
push
out
daa
call
orb
icebp
into
pop
jecxz
data16
cmp
aad
mov
fiadds
mov
pushf
testb
xchg
sbbb
cmp
inc
fnstenv
out
mov
mov
andb
nop
out
dec
add
adc
cli
in
and
cmp
sub
cwtl
test
les
lock
mov
inc
stos
push
sbb
into
aad
cmpsl
clc
or
jnp
pop
mov
pop
int
lret
jbe
cmp
ss
jb
jno
pop
xchg
lea
or
icebp
jae
sbb
bound
daa
sub
adc
sub
inc
sub
in
jb
and
fdivrl
dec
push
push
pop
inc
aam
cltd
fisubrl
adc
xchg
adc
mov
mov
mov
sub
outsl
or
fs
mov
inc
mov
jp
sbb
jns
xchg
push
lods
push
and
pop
shl
call
xor
aam
add
sub
outsb
xchg
jne
sbb
dec
shl
into
lods
out
push
jae
data16
xlat
jnp
push
inc
sets
adc
mov
or
movsb
leave
or
and
sahf
sub
mov
mov
dec
mov
lcall
pop
bound
test
cmp
xchg
add
in
sub
jge
mov
in
fsubrs
lahf
cmpsb
sub
push
je
in
sub
or
pop
add
fcompl
or
outsb
mov
lods
jo
outsl
sub
jne
lret
inc
shrb
mov
mov
sarb
inc
jmp
pop
mov
mov
sub
xchg
sub
ficoms
jb
rcrb
xchg
or
xchg
rcr
or
pop
xchg
inc
add
and
sbb
add
std
pop
mov
fdivl
xor
ret
jp
adc
mov
fcmovb
mov
mov
es
push
mov
jno
int
xchg
clc
and
xor
movsl
jne
or
xchg
aam
nop
cltd
sub
fwait
add
clc
jo
imul
jne
inc
loope
ret
push
push
sbb
fwait
xchg
jno
add
repz
bound
jl
sti
sbbb
pop
cs
and
imul
cmc
push
popa
out
js
or
push
gs
pusha
mov
fimuls
mov
mov
dec
lret
add
mov
pop
mov
pop
in
mov
lock
mov
repz
ds
mov
fwait
inc
xchg
xchg
jbe
das
sub
mov
pop
add
and
xlat
mov
mov
out
adc
push
fwait
ret
outsb
push
movsb
inc
pop
inc
fcomps
push
faddl
int
xor
xlat
fcomps
mov
push
jg
ror
lahf
and
mov
lods
mov
int
mov
pop
pop
insl
mov
rolb
aaa
out
jge
int3
movl
sbb
mov
leave
dec
xchg
sbb
mov
jns
inc
jne
push
cmc
add
sub
scas
mov
mov
pop
sbb
mov
mov
fildll
or
cmp
in
add
or
push
mov
roll
sbb
ja
rcrl
xor
inc
and
pop
mov
jo
sbb
sbb
cld
test
notl
mov
mov
imul
cmc
add
jno
mov
hlt
xchg
shrl
add
out
add
xor
imul
pop
out
enter
imul
mov
mov
repnz
xchg
push
call
fmull
outsb
test
add
pop
insb
jno
jmp
dec
loop
pop
sbb
adc
pop
movsb
fiadds
xchg
in
xor
jb
fcoms
pop
sub
cld
xchg
fldl
inc
es
in
in
add
into
mov
out
imull
shr
ficompl
sbb
inc
add
mov
sub
cmp
cli
xchg
cltd
mov
enter
sti
push
dec
popf
xchg
in
imul
pop
in
cmp
dec
scas
jg
imul
lods
inc
adc
lahf
sbb
aaa
lock
adc
mov
and
fcompl
mov
into
push
in
push
hlt
adc
out
xor
xor
or
cmpsl
icebp
inc
push
aam
mov
mov
mov
inc
divl
cmc
jg
fcomp
arpl
jnp
or
shlb
dec
icebp
ss
mov
mov
pop
shrl
clc
test
clc
inc
mov
aas
mov
sbb
into
insl
xchg
in
lcall
and
sub
pop
xor
adc
cld
insb
insb
pop
in
xchg
mov
xorl
lcall
cmp
sub
pop
push
xrelease
std
and
jmp
xor
je
inc
cmp
fbld
fimull
iret
jnp
movsb
call
arpl
mov
je
jp
in
out
aam
xlat
inc
mov
sti
and
jp
pop
ret
push
test
ds
sti
adc
pop
sbb
and
popa
mov
enter
adc
xor
mull
inc
scas
jne
hlt
out
je
data16
lds
xor
inc
xchg
ffree
mov
mov
push
mov
sub
dec
and
stos
dec
stos
es
cmpb
mov
lods
popa
inc
pusha
dec
repz
dec
cmp
outsb
add
testb
mov
shl
pop
cwtl
dec
and
stos
cmpb
jl
daa
sti
mov
icebp
xor
sub
imul
mov
dec
aad
mov
cmp
iret
dec
dec
fwait
xlat
divb
ret
sbb
sbb
dec
aad
lods
jne
loope
lea
add
adc
aam
dec
mov
pop
xchg
inc
lahf
js
rcll
enter
mov
xor
add
adc
and
popf
repz
arpl
mov
gs
xchg
jmp
mov
xchg
pusha
cld
out
push
pusha
daa
cwtl
xor
out
jle
push
push
sahf
lods
je
inc
cmp
jno
mov
inc
lret
and
test
mov
lods
cltd
cwtl
mov
jae
addr16
push
cmp
ss
icebp
pop
fistpl
arpl
push
fdivp
out
rolb
clc
mov
jb
aaa
add
push
jbe
ss
outsb
loop
mov
outsb
test
rcrb
fs
mov
mov
jns
xor
cmc
and
mov
int
cwtl
sub
xchg
mov
xchg
test
mov
jecxz
inc
jg
test
lret
popf
add
mov
mov
or
mov
add
add
addr16
pop
aas
xchg
xchg
or
ret
popa
loope
pusha
rcll
popa
xchg
inc
and
xchg
sub
and
cmp
imul
arpl
dec
pop
lea
mov
mov
pslld
push
fmull
clc
popf
out
out
mov
pop
and
insb
mov
adc
movsb
cmp
mov
pop
xchg
repz
inc
pop
xchg
test
xorb
jmp
leave
rcll
sbb
dec
xchg
stc
push
pop
xor
arpl
pop
lret
xlat
rorl
arpl
in
mov
scas
stos
mov
in
mov
sbb
enter
out
sub
ret
add
pop
cmp
add
and
mov
in
lds
les
adc
or
mov
cmp
fdivs
sbb
ret
stos
inc
pop
cmpsl
lock
fildl
cli
mov
push
fcmovnbe
adc
shll
pop
push
sbb
rorb
sub
xor
into
push
sarb
repnz
sub
ss
aad
push
rol
gs
push
loop
ret
out
out
sbb
lods
sub
or
xchg
testb
add
and
inc
inc
xchg
pop
lods
adc
jae
not
adc
mov
pop
xchg
icebp
sahf
jp
xchg
cwtl
fnstenv
lret
in
push
fmull
lret
or
inc
pop
std
mov
mov
fwait
push
das
or
test
out
mov
xor
pop
lds
sti
ret
rcll
or
cmovbe
mov
repz
mov
aam
leave
sbb
ja
jp
push
pop
xor
test
dec
sbbb
shrb
xor
push
gs
out
mov
aad
test
mov
lcall
adc
fcmovnu
jb
push
int
mov
sbb
mov
icebp
inc
lods
push
inc
pop
popf
sbb
or
mov
pop
jmp
inc
push
push
fwait
loop
jg
pop
xor
pop
xor
adc
and
xor
mov
inc
sub
xchg
and
ret
pop
rcrl
lds
sbb
aam
div
in
xchg
jo
imul
push
loop
inc
sbb
xchg
pop
pop
mov
bound
les
aam
into
jns
adcl
or
loope
sbb
xchg
add
dec
es
jbe
adc
shlb
ds
pop
add
sbb
pop
push
jns
jnp
data16
pushf
repnz
lods
divl
jnp
xorl
outsb
push
jo
jg
cli
xchg
dec
mov
pop
push
in
lret
inc
xorl
sbb
sbb
in
pop
out
fidivrs
dec
jge
fsub
inc
pusha
mov
cli
adc
pop
or
cmp
pop
mov
mov
mov
inc
pop
sub
push
enter
fwait
xchg
sub
mov
nop
orb
les
stos
sub
shr
adc
fcoml
ret
push
mov
lret
add
cltd
sbb
push
and
stos
loop
loop
mov
mov
loop
cltd
cmp
mov
out
xchg
pop
push
pop
push
push
js
mov
shrb
popf
out
sbb
enter
add
xor
xor
inc
lds
loope
and
sbb
dec
bound
clc
adc
sbb
out
into
stos
aam
int3
imul
mov
lahf
fwait
xchg
mov
nop
fxch
sub
xchg
pop
push
sbb
outsb
cmp
pop
jl
out
imul
jb
sahf
jl
fwait
xor
and
add
jae
mov
movsb
lods
xorl
jns
jb
push
out
call
jne
jae
xor
jb
cmp
adc
js
pop
push
mov
and
inc
shrl
or
fstp
jae
sarl
aad
push
into
inc
inc
int3
mov
pop
xor
xchg
fcmove
lods
cmpsl
inc
sub
out
fldenv
movsb
mov
push
repnz
inc
test
in
jno
in
arpl
test
outsb
push
scas
and
and
js
sbb
mov
sahf
push
cmpl
push
enter
push
xchg
and
push
xor
mov
cmp
dec
cmp
inc
in
xchg
lahf
sbb
loope
lret
sub
xor
repnz
fs
or
aam
enter
adc
psrad
int3
xchg
or
push
inc
in
jno
add
loopne
cmp
mov
ret
fcmovb
dec
push
out
out
lea
add
in
pusha
imul
pop
jns
rcll
or
nopl
xor
daa
f2xm1
jne
jns
inc
cmpsb
nop
jnp
sbb
inc
xchg
pop
aas
jge
sbb
mov
cld
xchg
jecxz
dec
mov
insl
pop
pushf
xchg
sbb
jnp
sahf
aaa
fstl
testb
add
test
enter
addr16
inc
push
loopne
mov
in
sub
cmpsl
outsl
mov
outsb
cmp
pop
or
mov
xchg
and
sahf
pop
out
les
adc
xor
or
mov
jg
popa
pop
cmpsb
inc
jns
pop
sub
pop
inc
aaa
push
shll
mov
mov
cmp
pop
pushf
adc
adc
in
mov
push
cmpsl
fsubs
stos
ror
call
ret
les
cwtl
jle
xchg
or
fidivs
in
sub
push
push
inc
mov
imul
jmp
insl
out
movsl
xchg
orb
add
mov
xchg
lret
das
inc
loop
fimull
pop
fs
scas
sbb
pop
daa
lds
aaa
jb
dec
or
inc
sbb
adc
ja,pn
lock
sahf
stos
adc
sub
sub
dec
paddw
popf
inc
cmp
xchg
pusha
into
dec
mov
xor
xchg
jae
movsb
xchg
mov
xchg
aas
xchg
shlb
insl
ss
pop
dec
scas
add
dec
mov
xchg
and
cli
mov
xor
mov
stos
push
es
jge
sbb
cmpsl
mov
mov
mov
jbe
lock
mov
jmp
or
push
xlat
inc
xchg
fs
loope
test
jg
inc
lock
aas
hlt
lods
push
cmp
adc
and
lods
out
push
xor
jns
out
sahf
adc
mov
lods
mov
mov
inc
xor
xor
xor
cmp
fstl
movsb
lods
adc
xchg
jl
jae
dec
jge
les
and
pop
shll
mov
stos
cmp
sbb
fisttpl
loopne
jmp
call
jns
mov
cmp
push
ja
repz
inc
add
js
clc
inc
push
mov
mov
mov
mov
nop
jae
bound
add
cli
nop
add
mov
and
gs
fsts
sbb
subb
mov
xchg
clc
xchg
push
or
mov
in
cld
movsl
shlb
xor
scas
and
addr16
mov
and
inc
cmp
popf
inc
ret
cmp
pusha
vpslld
daa
stos
xchg
mov
leave
out
xchg
rcrl
add
and
pusha
loope
sub
xor
outsb
pop
cmp
cltd
into
xchg
daa
inc
xchg
int
jp
sbbl
xorb
mov
cmp
xchg
or
xor
jmp
movsb
lock
lods
nop
dec
addl
jge
xor
adc
jle
js
pop
mov
mov
push
push
movsb
cmpsb
adc
fdivrl
leave
loopne
mov
insl
xor
push
mov
inc
dec
subl
sahf
imul
lret
lds
outsl
inc
in
ljmp
mov
mov
mov
add
int3
shl
je
add
sbb
sbb
test
dec
je
cmp
add
aam
ljmp
and
inc
ljmp
mov
cltd
sub
or
rolb
test
push
lods
and
and
pop
jns
pop
inc
pop
jmp
pop
inc
neg
xchg
sahf
test
mov
js
out
pop
jo
repz
lahf
push
mov
pop
mov
dec
jne
push
popf
icebp
das
mov
icebp
imul
fstl
jno
cmp
push
or
gs
aad
in
dec
cmp
xchg
pop
out
push
cmp
pop
pop
add
adc
mov
mov
mov
jl
add
and
inc
das
lds
mov
hlt
inc
pop
adc
mov
adc
sbb
fwait
call
push
sub
mov
or
sbb
nop
mov
lahf
test
fwait
into
in
adc
jo
push
ljmp
or
dec
pop
ficoml
cld
fsubl
stos
sbb
lods
dec
inc
les
lret
xchg
sbb
jle
iret
adc
insl
stos
jo
adc
cmp
jb
fsubp
pop
pop
bound
push
inc
push
xor
and
adc
add
repnz
loop
shl
ret
xchg
push
jb
bound
inc
push
xor
and
adc
add
repnz
loop
shl
ret
xchg
push
jb
bound
inc
push
xor
and
adc
add
repnz
loop
shl
ret
andb
jb
bound
inc
push
xor
and
repnz
shl
mov
cmp
pop
dec
insl
pop
jge
int3
nop
cwtl
sbb
or
jbe
add
sub
and
push
cwtl
pop
mov
or
enter
sub
sbb
or
js
push
xchg
call
pusha
mov
mov
fsubrs
enter
test
sahf
jb
mov
and
je
mov
mov
or
or
pop
mov
scas
pop
mov
cltd
pop
mov
sub
jns
ret
stos
cmpsl
xchg
sub
xchg
and
lods
adc
xlat
stc
jae
lret
jg
and
adc
int3
inc
cmp
push
movsb
addr16
arpl
jge
jns
pop
mov
cmp
lock
pop
jo
clc
dec
push
dec
imul
sub
xchg
jge
push
fsubs
pop
clc
jns
xchg
test
push
sti
mov
jne
ljmp
push
aad
out
enter
jmp
sbb
add
clc
packuswb
call
mov
aaa
sub
out
lods
sub
nop
imul
mov
inc
sbb
cltd
mov
call
push
or
sbb
cwtl
pop
test
sub
cmp
inc
push
inc
cwtl
xor
neg
xor
pop
test
push
sub
sub
jmp
sbb
pop
push
cmp
ret
xchg
adc
or
xor
cmp
std
cmp
dec
mov
sbb
mov
dec
xchg
cmp
test
mov
cwtl
push
call
cmp
enter
call
push
mov
cwtl
push
call
cmp
enter
xchg
push
push
xor
pop
xchg
cmp
sub
sti
pop
sbb
mov
out
jnp
mov
jnp
jg
sub
lods
sbb
pop
push
jo
les
lods
faddl
and
push
aas
fidivs
jo
imul
stos
dec
fsubr
fcmovb
enter
cmp
rep
out
jns
dec
ret
insb
cmp
and
jl
jecxz
jbe
sub
insb
xor
push
movsb
mov
adc
push
xchg
imul
xchg
stc
sub
sbbb
insl
shrl
dec
xorb
aam
and
pop
idivb
loope
int3
mov
ret
inc
inc
bound
sub
xor
sbb
sbb
mov
adc
xchg
inc
mov
pop
dec
fnstenv
jo
mov
mov
jmp
stos
add
push
fwait
data16
out
lock
shlb
inc
stos
push
jle
insb
fwait
cmp
aaa
bound
stc
sub
pop
scas
sahf
jo
sub
fidivrs
loopne
and
rclb
hlt
mov
popl
into
xor
jle
lea
fwait
imul
lds
roll
sub
pop
cmp
mov
and
pop
adcl
mov
add
adc
test
inc
aad
xor
mov
xchg
inc
aam
call
movsl
arpl
inc
mov
pushf
dec
mov
insl
hlt
mov
jg
push
adc
inc
adc
pop
rorb
xchg
add
icebp
mov
push
dec
dec
pushf
pop
das
pop
jl
mov
mov
dec
jecxz
int
adc
loop
and
lods
inc
test
lods
call
jbe
fwait
adc
lahf
loopne
stos
adc
mov
fadd
sbb
stos
lahf
leave
mov
shll
fildll
pop
lret
shrl
xchg
pusha
xchg
fs
lea
and
inc
adc
inc
mov
out
pop
imul
scas
adc
lcall
mov
ret
xlat
jb
dec
mov
arpl
cli
pop
andl
sub
jae
sti
mov
outsb
pop
lret
lret
rcrb
adc
and
int
mov
adc
pop
xor
mov
inc
and
jp
imul
jnp
sahf
sub
call
std
iret
movsb
jecxz
ret
mov
dec
xor
dec
xor
fwait
jnp
out
pop
dec
add
push
xor
jl
pop
adc
lea
imul
sub
and
mov
pusha
les
lock
ret
stc
inc
dec
movq
add
mov
popa
sbb
clc
inc
aas
in
lcall
mov
test
xor
out
cli
inc
cmp
or
jp
jl
xchg
jecxz
int
in
jp
add
jno
push
push
loope
cmpl
fwait
das
mov
cmp
mov
lods
int3
stc
xor
cs
mov
ds
mov
mov
pop
lods
shll
push
hlt
movsb
int3
clc
inc
pushf
push
xor
dec
loope
and
shrl
leave
lds
ljmp
jb
mov
repnz
xor
addr16
adc
jl
xchg
in
lret
jns
push
mov
imul
out
clc
mov
cmp
sbb
pushl
push
xor
inc
popf
les
repnz
fbstp
jg
mov
and
das
repz
out
stc
dec
mov
lods
or
movsl
mov
dec
fcomip
pop
pop
push
sub
add
shl
cmp
ss
dec
int
dec
sub
mov
jmp
test
pop
xor
xchg
lock
loope
and
and
ljmp
xor
pop
xor
jne
gs
rorb
inc
mov
sub
add
call
pusha
das
negl
pop
push
std
inc
icebp
cltd
and
pop
mov
push
add
popf
mov
and
mov
lds
ljmp
xlat
ret
mov
push
arpl
jne
adc
adc
xchg
inc
mov
js
iret
mov
jb
adc
insb
addr16
xlat
popl
scas
out
ror
and
icebp
mov
outsl
cmp
or
cmp
jb
lret
test
xor
fs
dec
cmp
mov
hlt
les
ds
mov
sbb
jbe
xor
sub
push
mov
rol
out
fistpll
sub
pop
mov
in
outsb
mov
dec
ret
leave
add
inc
push
and
test
cmp
jae
push
mov
mov
lods
les
dec
sbb
data16
push
fincstp
jmp
mov
pusha
mov
mov
xchg
shrb
aam
sub
xor
rcrb
out
call
orl
mul
jo
push
movsl
push
and
je
je
inc
ja
arpl
mov
sub
sub
iret
push
xlat
xor
cli
in
sbb
cmp
out
test
iret
adc
sub
mov
push
sbb
std
fstps
cmp
addr16
jo
push
arpl
scas
push
sub
in
pop
dec
ljmp
rcrl
push
cmpsb
out
inc
ret
loop
or
pop
mov
mov
mov
and
out
mov
mov
lahf
inc
inc
inc
insb
jecxz
sub
ss
scas
popf
movsl
fcomip
jmp
jecxz
dec
xlat
cmp
test
cmc
inc
pop
jge
cmpsb
loopne
lcall
leave
add
sub
stos
aas
movsl
sahf
inc
ret
int
popf
insb
shl
mov
push
pop
sahf
sub
pop
std
pushf
cltd
scas
call
into
xchg
std
bound
mov
mov
jecxz
mov
ret
or
sub
jo
cmpsl
ret
inc
add
jbe
add
sub
andl
lahf
cmp
push
movsl
inc
das
lock
mov
add
ljmp
in
xor
and
dec
es
mov
shrb
lds
les
pop
inc
mov
fcmovnbe
addr16
mov
xor
bound
pop
mov
inc
shr
ja
cmp
and
add
jp
jp
push
adc
lahf
in
push
pop
sbb
xchg
cmpl
mov
push
dec
push
mov
push
mov
jns
xor
jmp
mov
addb
and
in
pop
xor
pop
mov
jecxz
sarb
xor
lret
popf
mov
movsl
mov
pushf
inc
aaa
sub
xor
and
js
pop
stos
add
pushf
ret
pop
jae
push
sub
lods
xchg
mov
aam
mov
int
scas
hlt
push
leave
xchg
aaa
shrl
add
call
filds
mov
adc
andl
lahf
hlt
lret
ret
insl
arpl
mov
and
dec
xchg
std
xchg
bound
jns
in
or
fsubs
lea
jne
sub
xchg
cmp
xchg
rorb
aaa
js
push
fwait
outsl
and
or
sub
and
dec
pop
or
pop
clc
mov
inc
int
fimull
ficomps
test
sub
lock
cli
nop
jge
xor
pop
lahf
xor
test
sub
fcomps
jns
jno
cmp
xchg
jo
lsl
adc
pushf
mov
je
call
push
rol
sub
jp
adc
push
cmpsl
scas
and
adc
xchg
popa
loopne
push
sarl
dec
sub
test
imul
or
pop
lahf
jne
mov
ficompl
aaa
pop
add
leave
ss
icebp
sub
add
cs
sub
push
ret
or
nop
mov
dec
bound
mov
or
mov
mov
subb
ret
jl
push
sbb
push
add
std
mov
int3
out
jl
mov
fisubs
pop
push
dec
leave
negb
and
lea
ljmp
sbb
lcall
cli
aas
and
inc
notb
xchg
push
clc
ja
scas
inc
mov
pop
adc
mov
addr16
lahf
jge
outsb
cmp
std
dec
scas
stc
xchg
movsl
mov
hlt
aam
fnstcw
lods
aad
test
into
jns
adc
lahf
jp
push
sbb
dec
pop
mov
lock
mov
ds
int
sahf
int
mov
adc
jb
ljmp
mov
ret
call
test
daa
inc
lfs
pop
out
fldt
mov
cmp
cmp
scas
xor
xor
out
adc
in
pop
stc
mov
mov
lds
ljmp
int3
sub
mov
jle
js
sti
scas
mov
cmp
insl
push
fcomps
sti
pop
push
loopne
sub
dec
iret
cmpsl
mov
dec
push
sarl
mov
sub
pop
aam
mov
add
jl
jge
mov
jmp
aas
or
adc
test
cmp
mov
lods
or
bound
add
pop
add
push
test
xchg
xchg
lret
xchg
jne
cld
cs
stos
or
inc
roll
push
rcr
shll
mov
movsl
fistps
or
dec
in
ja
mov
mov
xor
iret
std
movsl
mov
stos
pop
mov
shrl
adc
push
inc
push
inc
sub
mov
aam
dec
xchg
dec
push
dec
adc
icebp
and
or
je
dec
pop
pop
into
fdecstp
out
cmp
cmpsl
popa
lds
orb
jae
int
xchg
jb
rorl
cmp
cmpl
inc
xchg
xchg
lock
push
loop
xor
mov
push
fs
pop
ficomps
das
push
cwtl
insb
fsubrs
mov
add
adc
pusha
in
add
adc
cltd
mov
add
dec
push
sahf
pop
sahf
arpl
xchg
and
aam
and
popa
aaa
vphsubbw
sti
fisttpl
mov
out
cli
jmp
mov
enter
cmpsl
xorb
data16
fwait
adc
xchg
rol
and
sub
fistl
xor
shll
and
dec
add
xchg
daa
lods
jno
mov
std
push
add
insl
insl
mov
int
subl
push
jnp
in
es
pop
jnp
pop
and
sahf
scas
jns
cmpsb
stos
xor
jge
mov
add
push
sbb
les
pop
pop
pop
mov
jne
ret
enter
adc
jne
imull
shll
or
cmpsl
incb
fs
and
test
mov
cli
clc
iret
mov
sub
addr16
dec
movsb
lret
in
test
dec
mov
scas
dec
enter
cmp
sahf
mov
and
fdivp
test
pop
xchg
xchg
sub
push
inc
mov
mov
add
rorl
adc
pop
mov
push
call
dec
mov
and
aam
rolb
imul
mov
das
inc
rcrb
fwait
add
xchg
lods
ret
mov
roll
jg
std
arpl
testb
enter
mov
mov
or
nop
jnp,pn
insb
dec
lock
bound
mov
or
jb
push
loop
fs
lcall
dec
icebp
pop
xor
das
cld
rcr
mov
dec
icebp
and
mov
loopne
ljmp
push
jmp
bswap
jne
or
push
in
fldenv
mov
lcall
add
xorb
cmp
mov
cmp
add
mov
xor
pop
out
outsb
shl
addl
lods
pop
aad
inc
nop
lahf
mov
inc
or
xchg
bound
cmc
ljmp
xchg
out
adc
lods
push
jl
fdivl
fwait
jbe
jbe
mov
push
mov
out
adc
sub
xor
rcrb
rorl
movsb
test
testl
movsl
pop
push
out
jle
and
mov
mov
mov
out
dec
lret
addl
ret
cmp
cmp
jecxz
cmp
jmp
fidivs
inc
mov
fcmovu
fdivrl
idivl
jb
popa
xchg
inc
dec
cmp
mov
lcall
cli
pop
mov
aas
stc
pop
and
test
adc
cmpsb
xor
dec
stos
add
jl
mov
lret
push
cli
jp
jno
pop
push
clc
out
dec
test
inc
xor
lcall
xchg
sti
aas
xor
mov
subb
insb
push
jmp
xor
inc
roll
les
clc
xchg
sbb
xchg
jb
out
mov
in
push
xchg
repz
les
mov
mov
hlt
mov
test
arpl
mov
add
pop
add
adc
ja
cmp
das
out
mov
jae
xor
cmp
hlt
into
sbb
ret
insl
push
mov
and
inc
mov
aad
les
adc
dec
int3
cmpsb
xchg
jnp
dec
test
jbe
out
lret
xchg
imul
arpl
in
dec
adc
into
sti
inc
scas
jae
loope
push
call
test
xor
and
dec
clc
orl
lret
cmp
cli
cmpsb
cmp
mov
pop
jp
adc
lcall
repz
addr16
out
mov
data16
daa
addl
cli
rorb
inc
pop
add
test
sub
xlat
insl
adc
mov
mov
dec
aam
mov
sahf
mov
push
ret
xchg
das
jb
shll
mov
mov
mov
xchg
inc
lds
test
cmp
ficoms
fnstsw
mov
cmc
roll
jnp
into
pop
in
mov
jp
leave
mov
hlt
lcall
ret
test
flds
aam
psllw
lahf
cwtl
cld
pushw
inc
mov
and
mov
cmpsb
es
ret
outsb
les
mov
push
lds
xor
xor
int3
mov
and
scas
add
pop
xor
pop
inc
push
popa
int3
xchg
mov
out
add
loope
push
loop
adc
stos
enter
mov
xchg
mov
xchg
aam
sub
mov
fildll
enter
cltd
je
enter
xchg
mov
in
pop
add
mov
gs
orl
push
and
xchg
aam
mov
jecxz
popa
sub
dec
sub
repnz
sbb
lret
dec
sahf
xlat
scas
lds
cmp
hlt
xor
lcall
sbb
aaa
ret
cmp
sbb
fiadds
push
icebp
dec
fnsave
push
and
sbb
adc
popa
imul
repz
les
test
dec
jp
out
xchg
shrl
push
addr16
mov
std
movsb
and
out
andl
pop
mov
xchg
in
or
fcompl
es
adc
loopne
inc
fwait
or
shll
pop
cmpsl
arpl
xlat
rorb
insl
iret
daa
jae
cli
cs
xchg
nop
xor
and
das
scas
mov
out
ljmp
jmp
lret
add
movsl
test
jns
inc
ret
loop
fwait
rclb
mov
mov
and
stos
sbb
jl
xor
push
push
jle
sbb
dec
fisubs
xor
adc
inc
push
andb
ret
sbb
dec
cmp
in
pusha
mov
nop
pop
nop
lret
pop
ds
sub
fs
cmpsl
daa
sbb
xor
test
mov
cwtl
ljmp
ret
sbb
mov
lcall
bound
xor
pop
shll
popa
ds
lret
icebp
mov
add
inc
inc
int3
lods
mov
lods
mov
cmp
and
mov
cs
mov
addr16
mov
lahf
inc
adc
nop
clc
dec
stos
xchg
inc
loop
les
pop
subb
aas
movb
pavgw
push
ljmp
shll
jo
aaa
jnp
jle
test
scas
hlt
push
cmp
mov
adcb
das
scas
mov
push
mov
mov
mov
add
mov
std
inc
shl
ja
loope
xlat
insl
aam
mov
test
pop
mov
stc
mov
repz
dec
test
jae
popa
stos
les
rcrl
out
pushf
jmp
negl
inc
addr16
lds
out
xchg
insb
sub
aam
dec
ss
cmpsl
sbb
sbb
xorl
xchg
push
and
mov
mov
xchg
data16
jmp
not
jle
ja
sbb
rdpmc
and
sub
pop
mov
dec
mov
fchs
andl
popl
lcall
xchg
ljmp
or
rclb
lds
lahf
mov
aad
cmp
test
cmp
and
mov
aad
je
fdivrl
stc
jp
call
xor
cmp
or
cmp
pushf
ret
shlb
mov
in
adc
outsb
add
rcl
mov
push
jmp
jge
add
dec
cmpsb
push
sti
jbe
jne
jge
push
test
lea
ljmp
inc
test
inc
and
jle
cltd
fists
lret
pop
jle
inc
push
cwtl
add
ss
test
add
inc
inc
loopne
movsb
add
pop
xchg
add
out
mov
in
mov
neg
insb
add
mov
dec
dec
xlat
loope
xchg
stos
fldl
xchg
xor
adc
mov
cld
xchg
add
std
in
add
pop
add
jno
xor
loopne
jp
push
jl
aaa
mov
sbb
xor
add
jp
leave
jmp
fidivrs
xlat
popf
andb
aaa
es
push
les
fnstenv
cmp
and
movsl
sti
fs
imul
xchg
aad
andl
pop
lcall
nop
jns
jmp
fbstp
lock
inc
xor
adcl
out
cmp
cmp
insl
xchg
mov
push
dec
sarl
pop
fldcw
imul
mov
cmc
mov
push
cwtl
add
cmp
xorb
imul
push
mov
push
insb
fs
mov
jp
cmc
negb
out
mov
arpl
js
xor
cmpsl
jns
outsl
add
mov
fs
imul
adc
pop
in
movsl
xor
mov
or
scas
pop
jmp
mov
and
mov
jle,pn
push
cmpsb
ss
xor
push
mov
or
jno
mov
lods
shl
fs
xor
add
mov
sahf
jp
cli
imul
dec
icebp
cmp
mov
lods
shll
cltd
mov
mov
push
scas
push
mov
or
xchg
sub
loope
push
mov
pop
mov
stos
jp
aad
test
sbb
and
fwait
jmp
jbe
sbbb
sub
mov
outsb
cwtl
pop
test
pop
xchg
lahf
push
lods
fldl
repz
jmp
in
push
fidivs
jge
jp
lcall
sbb
aad
add
scas
aam
imul
mov
or
or
mov
loop
mov
jg
xchg
cmpsb
add
cmpb
sub
divl
sbb
mov
mov
dec
mov
mov
fildl
xor
test
cmpsb
jmp
test
inc
fcoms
repz
pop
insl
pop
lret
call
jnp
bound
outsl
pop
ficoml
mov
std
shl
sarb
jne
add
sub
in
fisttpl
mov
stos
clc
push
xchg
test
xchg
xchg
push
mov
fiadds
mov
dec
movsb
jmp
dec
dec
dec
mov
fisubrl
inc
shrb
inc
das
cmp
sub
or
cs
stos
jp
iret
mov
test
mov
xor
push
aad
sbb
in
xor
inc
xchg
fidivl
pop
push
xchg
mov
mov
xchg
out
stos
out
pop
mov
and
add
jo
loop
mov
mov
leave
or
fiadds
into
mov
add
push
arpl
daa
push
aas
xchg
jg
popf
jbe
das
and
jnp
lret
jb
movb
mov
adc
pusha
xchg
insl
add
mov
jmp
repnz
movsl
aad
xchg
inc
mov
addr16
adc
call
mov
adc
fdivrs
xchg
fmul
push
cmp
data16
push
mov
es
loop
sbb
lea
cmp
imul
add
and
sub
jnp
aaa
pop
out
dec
cli
mov
mov
xlat
mov
bound
stc
sti
in
ficoml
sahf
jbe
repz
cltd
pop
pusha
mov
adc
loop
mov
lahf
add
pop
stos
frstor
movsb
fdivrs
mov
pop
test
mov
cwtl
push
call
cmp
enter
call
push
mov
cwtl
push
call
cmp
int3
sub
or
or
jns
insb
repz
lods
dec
mov
xchg
push
icebp
sbb
and
fsubl
sub
cmp
or
mov
pop
sub
js
mov
repnz
jg
push
aaa
inc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
loope
sbb
out
shlb
lods
mov
sbb
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
movsb
add
jnp
jl
fiadds
push
add
add
stc
add
add
add
push
add
add
or
inc
add
add
add
pop
add
add
movl
pop
add
jle
push
add
add
roll
in
adc
add
imul
pop
add
dec
add
filds
je
insb
add
add
add
in
cmp
add
movsb
add
add
bound
push
add
jns
push
add
dec
add
jmp
add
stc
add
add
dec
add
xor
or
sbb
xchg
add
mov
jno
data16
pushf
add
add
add
pop
add
dec
add
add
add
add
add
push
add
add
add
lock
push
add
add
add
movb
add
add
xchg
add
addb
add
jl
loop
push
add
add
add
and
xchg
add
mov
add
add
add
add
add
or
aas
add
mov
roll
add
add
jno
or
insb
add
add
dec
add
add
pop
add
add
add
add
add
add
mov
adc
push
add
dec
add
add
jbe
dec
add
add
add
add
add
in
filds
jne
data16
out
add
add
add
xchg
add
push
add
add
cmp
add
mov
addl
or
push
add
add
xlat
add
add
add
xor
add
add
out
add
add
push
add
xor
add
add
xor
add
adc
lea
mov
add
dec
add
add
add
add
add
push
add
xchg
add
add
add
push
add
insb
add
add
xchg
add
add
xlat
add
stc
add
add
add
add
movb
add
add
push
add
or
add
dec
add
jnp
pop
add
scas
add
adc
jbe
add
add
addb
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
jno
jae
adc
adc
testl
add
mov
outsl
add
add
stc
add
sbb
out
movsb
add
adc
mov
add
add
add
add
add
add
add
filds
xor
dec
add
add
pop
add
add
add
lock
add
add
out
add
pop
add
and
jne
insb
add
add
add
add
js
xor
add
popf
add
dec
add
add
or
add
add
aas
add
add
add
add
add
and
testb
add
add
insb
add
add
ja
push
add
add
add
pop
popa
arpl
lods
les
and
xchg
mov
sbb
stos
cmp
xchg
imul
adc
mov
fcomps
push
mull
pop
cli
frstor
seto
icebp
popa
nop
jmp
test
fbstp
pusha
mov
push
or
cmpsl
outsl
mov
aad
test
mov
dec
fwait
sub
and
and
scas
xchg
iret
insl
cwtl
lret
std
sub
inc
dec
insb
rcr
outsb
out
jb
fwait
int3
jnp
jnp
aam
pop
sbb
pushf
lock
out
popa
clc
int3
das
push
leave
mov
mov
and
and
adc
mov
test
xor
sub
repnz
jmp
je
imul
lds
rolb
cmp
or
jge
mov
in
movsb
je
dec
aas
nop
pop
iret
jle
or
push
mov
adc
bound
sbb
pop
push
sub
adc
roll
push
jle
loop
mov
fwait
test
and
add
fs
xchg
loope
shrl
scas
mov
xor
js
jle
cmpsl
sub
dec
push
daa
in
or
mov
fbstp
sub
icebp
jge
cmp
out
jge
add
push
cltd
xor
stc
pop
cmp
xchg
sub
xchg
lret
mov
sets
loope
xchg
insb
ljmp
test
lahf
lea
pop
mov
popf
js
pushf
push
mov
cmp
xchg
mov
orb
lcall
lods
das
scas
or
cmp
shll
stos
out
xchg
jge
mov
jo
push
mov
cmp
lods
push
in
lret
adc
ret
xchg
adc
dec
je
xchg
rcr
repnz
jb
nop
inc
sbb
hlt
sbb
lock
pop
lods
dec
loop
mov
sub
mov
test
xor
dec
push
sahf
hlt
iret
orb
mov
sub
cli
inc
dec
imul
mov
frstor
test
rcrl
mov
fcoml
sub
push
imul
orl
call
enter
jns
mov
push
lods
das
out
mov
fistpl
sub
or
and
and
inc
mov
dec
mov
and
cmp
jne
mov
mov
pushf
repz
pop
sbb
int
adc
icebp
cmpsb
stos
xlat
and
insb
pop
lret
and
int3
nop
mov
test
jo
xchg
xor
lret
xchg
cmp
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
