call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
jnp
jmp
dec
push
jg
sub
sti
mov
clc
fwait
call
stos
cmp
dec
sbb
imul
xchg
dec
pop
mov
sti
mov
stc
hlt
jmp
stos
cmp
sub
rorl
imul
dec
xor
movsb
in
cwtl
lcall
stos
dec
pop
sub
repnz
andb
stos
jno
cmp
stos
cmc
addr16
mov
inc
cmc
insb
shlb
js
not
jnp
imul
xchg
add
add
push
dec
sarl
sub
popa
push
xor
popf
cmp
mov
jbe
inc
mov
mov
cmp
sarl
inc
arpl
and
fwait
cwtl
into
popa
pop
sbb
ret
clc
les
mov
xchg
aas
popa
dec
pop
xor
rorl
mov
stos
enter
stos
ss
rcrl
push
cltd
pop
mov
xlat
inc
fstpt
in
add
repz
enter
sub
jns
imul
mov
jmp
mov
fnstcw
insl
dec
jne
inc
inc
cmp
fs
push
sub
rcrl
in
orb
mov
or
inc
dec
sbb
or
inc
jmp
les
mov
lcall
or
sub
cmp
or
dec
sub
sti
mov
stc
fwait
jmp
stos
cmp
dec
sbb
imul
or
dec
sub
sti
mov
stc
fwait
jmp
stos
cmp
pushf
xchg
fcomps
or
mov
mov
clc
stc
mov
xor
mov
orb
sar
fldenv
je
push
xor
cmp
test
add
xor
bound
in
cmp
push
xchg
or
addl
fs
lds
sub
and
sbb
in
test
dec
ret
outsb
sarb
cli
popa
std
mov
outsb
in
je
loope
dec
inc
pause
mov
mov
fidivrl
add
mov
leave
push
mov
addl
scas
adc
sub
out
das
out
hlt
dec
mov
push
mov
sbb
or
fwait
stos
push
mov
jno
inc
cwtl
cli
ss
sub
ja
jo
bound
inc
pop
nop
xor
and
jb
mov
fucom
push
outsl
adc
pushf
rolb
int
push
out
cmpsb
xchg
mov
inc
mov
pop
test
xlat
int
dec
pop
repz
jbe
inc
adc
xor
fisttpll
fcmovne
out
in
int3
sbb
mov
mov
hlt
and
hlt
mov
lea
xor
cmp
cmp
push
imul
or
mov
pushf
pop
mov
and
dec
inc
jp
xchg
sahf
dec
loope
clc
stos
push
xor
xchg
push
mov
or
cmp
jp
pop
je
notrack
in
jle
ljmp
scas
ss
data16
mov
jns
lret
fdivl
loop
mov
imul
cmp
inc
jnp
push
pop
push
js
bnd
push
lea
mov
push
mov
or
dec
push
jae
inc
inc
fdiv
sahf
push
mov
fcmovbe
repz
gs
sbb
push
sub
les
fnstcw
sbb
jo
mov
stos
test
jo
std
sub
pop
js
sti
jg
ds
jbe
out
xchg
or
jp
leave
nop
mov
das
inc
push
or
xor
fstps
pusha
in
xchg
lret
xor
mov
aaa
adc
test
ret
hlt
pop
je
rcrb
mov
je
fbstp
inc
push
sbb
cltd
repnz
hlt
js
pop
mov
inc
or
jmp
repnz
ds
int3
pop
add
out
jmp
jo
cld
fwait
rorb
mov
jns
pushf
cs
inc
in
push
xor
pop
fidivs
dec
imul
les
out
jl
mov
pop
mov
push
add
loop
aas
cmp
imul
and
ret
shl
imul
adc
xrelease
fnstsw
mov
mov
lods
or
stos
cmp
std
and
push
pop
mov
adc
inc
mov
xor
aam
movsl
pop
ljmp
sti
lret
adc
or
push
scas
and
xor
cmc
sahf
in
push
call
add
sub
in
xchg
xor
mov
mov
sbb
and
cli
xchg
sub
ds
inc
ja
stos
inc
mov
shll
mov
into
mov
ffreep
xor
cmp
fbld
scas
ret
push
jb
sbb
cmp
mov
xchg
add
in
pop
xor
cltd
and
jae
jns
jg
fwait
adc
mov
daa
xchg
adc
mov
decb
jge
ss
lods
fmul
dec
adc
sahf
xchg
shlb
adc
std
cmp
jp
cmp
cmpsl
shl
icebp
mov
repnz
nop
xchg
and
xchg
call
add
jo
add
xor
enter
loop
add
dec
nop
push
fimull
ja
pop
xor
inc
add
stos
adc
ficompl
loopne
xor
push
sub
jae
jb
cwtl
pop
or
dec
orl
jbe
fcmovu
scas
mov
inc
add
xchg
xchg
das
jb
lods
xchg
lret
sbb
pop
push
mov
and
or
inc
test
loop
adc
dec
loop
jns
dec
jl
std
xor
cmp
push
fstps
push
jg
and
out
add
push
or
cmp
mov
hlt
xchg
push
dec
es
cmpsl
xor
outsl
xchg
or
inc
test
or
mov
test
loopne
popa
jmp
jns
insl
jl
sbb
push
adc
outsl
xor
pop
adc
cmp
lcall
ss
mov
jo
jbe
shll
loopne
pop
push
lret
shrl
xor
js
ret
push
cmpsb
inc
faddp
in
cmc
push
popf
aas
stos
push
in
add
in
int3
and
aam
mov
jo
inc
push
scas
sbb
mov
into
cs
xchg
and
into
jecxz
cmc
mov
dec
das
xor
xor
ret
cmp
imul
fidivl
add
shlb
les
subb
shr
mov
repz
lds
movsb
idivb
sbb
or
sub
sbb
sub
sti
mov
notb
mov
daa
lahf
push
sbb
push
out
out
xor
lds
sbb
pop
aas
pop
lahf
lea
sbb
cmp
push
inc
addr16
in
push
sbb
lods
and
push
out
xchg
je
lea
mov
loopne
pop
sahf
test
cmp
call
push
movsl
sarb
cmc
adc
dec
loope
xor
xchg
ds
sub
cmpsb
and
sub
or
sbb
push
xor
jge
add
cli
scas
int
mov
fisubs
mov
or
mov
fisubl
dec
adc
sbb
pop
in
hlt
adc
jp
jge
push
push
lea
sarb
imul
int3
out
fs
aaa
push
mov
std
and
push
lods
loop
popf
ja
insb
adc
push
inc
pop
test
ret
fs
xchg
ror
mov
shrl
or
addr16
mov
mov
adc
mov
andl
outsl
rcrl
xchg
push
movsb
pop
stc
lea
inc
add
fwait
repnz
nop
jmp
inc
inc
cwtl
dec
mov
mov
push
inc
or
cwtl
inc
cmp
jg
sbb
mov
jae
std
push
iret
decl
cmc
jnp
call
fs
fsubr
mov
sub
es
outsl
inc
cwtl
imul
push
pop
push
mov
dec
cltd
mov
cwtl
mov
and
jae
addl
mov
cmovle
lock
mov
aad
inc
jmp
xlat
jbe
and
sbb
fstpl
xor
adc
push
cmp
adc
xorl
jg
mov
add
xor
jmp
or
xor
rcr
sti
sbb
sahf
aaa
daa
xchg
mov
popf
lea
nop
push
dec
ds
popa
xchg
in
pop
add
idivb
sbb
sarb
nop
jns
or
xchg
inc
mov
add
lret
mov
sbb
out
xor
rclb
cmpsb
mov
dec
adc
popf
or
ja
je
addr16
cmp
xchg
cmp
or
sahf
or
pop
cwtl
xor
jl
stos
lahf
movsb
stc
addr16
test
mov
pop
jae
pop
mov
mov
fdivl
insb
lea
sub
sub
mov
mov
or
sbb
roll
pop
cltd
mov
adc
add
xchg
outsl
loop
lret
push
f2xm1
inc
xlat
jae
daa
insl
pop
hlt
fstpl
fwait
inc
mov
lock
out
add
or
loope
dec
stos
roll
dec
cmp
mov
mov
mov
sti
adc
xchg
xchg
mov
or
hlt
ja
dec
push
mov
leave
add
sbb
mov
cltd
lret
inc
repz
cs
sub
jne
cmp
jbe
jne
dec
dec
dec
out
cmp
clc
nop
std
mov
les
adc
clc
pop
add
in
pop
fcoml
aaa
shl
or
sti
loop
ljmp
enter
jne
jp
xchg
inc
test
sarb
mov
addb
jns
repz
dec
xchg
mov
mov
cmp
data16
test
add
push
jne
add
push
cmp
pop
inc
jecxz
ret
data16
inc
mov
cmpsb
bound
mov
lods
mov
lahf
xor
mov
inc
mov
jmp
pushf
xchg
ror
lcall
and
repz
xchg
lods
mov
ljmp
int
in
push
je
lock
js
mov
outsb
jp
sbb
or
enter
int3
shlb
pop
mov
fisubs
jbe
pop
jp
inc
xchg
mov
xchg
aas
cmp
dec
and
bound
mov
imul
in
xchg
mov
in
stos
pushf
stos
mov
out
insl
fwait
outsl
call
popa
loop
sub
xchg
cmc
mov
fcomps
sahf
add
sbb
lea
fcoml
inc
jle
shrl
mov
nop
shl
xchg
js
js
add
mov
lahf
lret
xchg
pop
enter
repnz
sti
int
movsl
sub
scas
insb
jns
rcl
loopne
or
fistps
adc
imul
and
adc
lret
cld
push
push
out
mov
call
cmpsb
or
inc
sarb
inc
es
daa
mov
push
lret
scas
shrb
test
ret
jl
mov
daa
test
mov
push
pop
sbb
in
stos
inc
mov
imul
mov
test
lret
into
fadd
mov
jno
mull
aam
inc
jne
sub
or
rcrl
jo
fidivrl
sbb
xchg
add
mov
icebp
xor
and
lcall
aam
push
mov
js
mov
sbb
loopne
xchg
and
xorl
ss
sub
cld
mov
inc
lret
adc
stc
jno
dec
cmpsb
mov
mov
stc
and
int3
mov
mov
ljmp
fdivrl
shll
mov
xchg
imul
mov
subb
or
fmull
xor
scas
pushw
fisttpl
dec
push
dec
cmp
push
cmpl
xor
or
rorl
push
mov
imul
outsl
rol
lahf
in
dec
iret
sub
push
out
cmp
lret
add
daa
cmp
cmp
movsl
push
dec
pop
dec
jbe
orl
push
aas
lcall
xchg
jl
hlt
or
dec
lods
jmp
pop
xchg
jnp
pop
fsubs
sarb
sti
jmp
ljmp
scas
cmp
push
dec
pop
jno
ljmp
mov
lods
sahf
arpl
xor
scas
sbb
aaa
mov
dec
arpl
mov
and
cld
imul
sbb
jnp
pop
xorl
ljmp
pop
cmp
cmp
inc
adc
xchg
push
jle
leave
jl
adc
xchg
mov
pop
fldcw
mov
pushf
sbbb
insl
jmp
scas
sbb
fcompl
mov
dec
in
push
hlt
mov
pop
and
repnz
out
js
xchg
mov
cmpsl
addr16
in
repnz
mov
cmp
cltd
scas
push
test
xor
jnp
or
mov
sub
push
mov
gs
test
inc
or
out
fwait
stos
mov
shl
xor
aam
mov
shrl
cli
mov
les
outsb
mov
pop
cli
push
leave
inc
dec
lret
or
addr16
data16
dec
scas
lret
mov
adc
cmp
insb
into
movsl
fwait
or
pop
stos
ds
adc
testl
push
pop
in
jmp
movl
push
dec
div
les
fisubs
fdivs
sub
xchg
fst
mov
test
xchg
in
adc
inc
repnz
leave
loopne
mov
inc
aam
cli
mov
rcll
pop
jns
and
int
jns
lea
xchg
hlt
shl
aaa
push
aas
jo
sub
xchg
adc
roll
lret
push
fistpll
sub
xor
lea
jo
and
fstps
enter
lret
addb
fs
testl
mov
pusha
xlat
adc
cmp
sbb
jae
adc
lret
mov
lods
or
add
dec
test
test
jbe
mov
dec
push
movsl
adc
inc
jmp
cltd
sub
iret
lret
in
mov
cmc
add
adc
shll
pop
jns
loopne
sbbb
subl
jns
pop
test
sbb
mov
mov
in
pop
cs
dec
movsb
imul
negb
pusha
dec
cmp
mov
pushf
mov
sti
das
gs
call
scas
aad
cmc
out
sub
sti
xor
lret
mov
mov
xor
push
mov
sub
je
mov
mov
cwtl
mov
push
lods
ficoml
and
add
jbe
call
pop
shrb
xor
lods
jno
inc
xchg
out
pop
or
jns
mov
push
and
sbb
ret
or
xchg
mov
setnp
sub
int3
cmp
in
adc
add
and
in
inc
dec
mov
lret
test
or
ljmp
mov
jg
je
fwait
js
dec
and
sbb
loopne
shrl
push
scas
arpl
loope
stc
jmp
pop
pop
jecxz
jo
fistpll
insb
mov
jge
stos
ret
je
adc
mov
cmc
repz
xchg
pusha
popa
ljmp
stos
xchg
iret
mov
mov
sub
jo
nop
lahf
xor
jg
push
pop
test
int3
addr16
unpckhps
in
sub
mov
mov
mov
jb
mov
jne
jge
aam
xor
and
push
out
mov
pop
adc
mov
stc
jg
cmpsb
pop
inc
test
adc
lret
push
adc
mov
inc
push
fxch
push
sbb
xchg
inc
out
or
fs
gs
inc
addr16
test
pop
add
nop
xor
into
push
mov
fcoms
mov
add
roll
into
push
and
pop
mov
mov
lea
pushl
push
mov
popa
xchg
inc
test
scas
dec
and
sub
push
imul
sbb
lcall
and
add
call
pop
adc
pop
xchg
sarb
movsb
push
adc
jp
pop
clc
mov
adc
inc
xor
sub
mov
pop
and
xor
push
cmp
add
cwtl
push
jle
es
icebp
dec
sbb
xor
jg
js
aas
out
xor
push
xor
mov
push
jecxz
mov
pop
loope
jnp
xor
fsubp
addr16
or
and
fs
in
negl
pushw
inc
pop
push
or
xchg
cmp
and
fmull
dec
jns
push
mov
pop
push
jbe
jmp
dec
add
sbb
in
pushf
stos
push
aad
repz
dec
mov
test
jne
dec
pop
lock
sbb
ret
jmp
ret
stc
xchg
fistpl
dec
jge
lret
cmc
push
mov
jmp
sbb
mov
ja
int3
js
popa
shl
inc
rcrb
and
cwtl
stc
in
cld
lret
jle
gs
mov
push
cld
call
pop
jns
icebp
dec
insl
adc
mov
test
sub
sub
push
pop
jl
pop
sarl
das
repnz
xchg
dec
in
call
mov
outsb
into
ret
push
test
testl
outsl
bound
shlb
mov
push
test
pop
xor
outsl
stc
bound
mov
pop
sbbb
movsb
mov
popf
mov
movsb
xor
and
int3
negl
mov
sbb
lcall
push
cmp
movsl
stos
push
inc
mov
adc
and
lret
jmp
jns
pop
mov
pop
inc
mov
sbbb
adc
test
or
aam
adc
incb
ficompl
add
and
call
mov
cmp
and
push
mov
adc
aaa
loopne
mov
push
rcll
bound
lods
sti
movsl
popf
pop
xchg
adc
xor
cmp
popa
nop
and
xchg
scas
push
daa
push
adc
inc
adc
fisttpll
sbb
and
scas
negl
mov
adc
addr16
popf
jle
rcrb
sub
and
cmpsl
into
push
xchg
inc
add
test
repnz
arpl
leave
mov
pop
pop
mov
xor
fs
fldz
pop
popf
inc
js
in
mov
cmp
insb
data16
xchg
mov
out
xlat
addb
rcl
and
lds
ret
add
mov
aam
fimull
int
mov
sub
andl
pop
jp
lods
fs
test
mov
mov
movsl
push
ret
inc
mov
xorb
cmp
jbe
or
arpl
lret
cld
test
cmp
add
pop
in
lea
imull
loop
inc
jl
or
loopne
adc
fisttps
es
andl
shll
xchg
lock
lahf
dec
jecxz
push
sahf
popa
cmpsl
mov
jecxz
xor
insl
cld
int
or
imul
out
xchg
mov
xchg
mov
sbb
xor
in
daa
mov
fiaddl
imul
sbb
lods
or
inc
std
call
or
jmp
dec
inc
mov
aaa
adc
stc
pop
aas
cltd
mov
filds
mov
cmp
cmp
add
negb
js
scas
stc
push
xchg
cmc
jmp
adc
icebp
into
pushf
popf
shll
gs
movsb
or
dec
jno
mov
subb
jae
pop
test
xchg
lcall
aas
cld
mov
jmp
test
add
movsl
mov
xor
das
sub
loop
lret
out
xchg
dec
adc
xor
test
sbb
mov
stos
out
js
inc
cmp
in
mov
dec
sbb
xchg
push
jle
sbb
enter
and
cmp
addr16
push
aam
cmp
jno
push
add
push
loop
mov
pop
sbbl
fdivrl
mov
inc
loopne
adc
icebp
out
xchg
xor
mov
lcall
ja
jl
and
xchg
stc
jge
xchg
or
loope
mov
mov
jge
mov
je
sub
add
mov
scas
cmp
inc
lahf
data16
xor
jge
xor
lods
sub
jmp
int
rcrl
arpl
pop
adc
arpl
pop
fwait
sbb
jl
cli
popf
das
pop
popa
inc
in
inc
xchg
loope
xchg
dec
les
mov
imul
imul
into
leave
insb
arpl
rcl
jb
mov
pop
call
add
aaa
test
pushf
jnp
dec
jns
clc
mov
jmp
mov
sbbl
imul
xor
mov
fadds
jecxz
cmp
mov
push
lret
gs
sub
stos
outsb
pop
pop
mov
cmpl
adc
dec
mov
mov
mov
repnz
pop
adc
and
jp
data16
mov
pusha
push
test
dec
jmp
jo
in
add
cmp
aam
repnz
ds
xorl
dec
adc
cmp
and
jmp
dec
xor
cmp
add
or
jl
in
ljmp
sahf
jb
cli
mul
test
movsb
inc
out
cmp
lds
pop
xor
add
mov
sbb
or
clc
repnz
and
lahf
pushf
je
lock
test
jae
cmp
out
pop
aad
or
pop
arpl
cmc
pop
nop
mov
loopne
insb
adc
inc
inc
fsubr
xor
add
or
adc
xorl
or
pop
mov
xchg
out
mov
sub
jnp
push
xor
xchg
loope
jge
xchg
cld
inc
fcmove
popa
orb
xchg
cmpsb
inc
or
push
ss
fstp
inc
sub
ret
je
xchg
mov
mov
arpl
fnstenv
mov
mov
add
xor
divb
sub
push
fisubs
lock
push
into
inc
cmp
aaa
test
sub
adc
jbe
and
incb
mov
push
sbb
dec
cs
repz
sub
or
dec
pop
fyl2x
push
mov
sahf
fldt
rclb
imul
or
sbb
pop
cmp
mov
sti
mov
stc
fwait
jmp
stos
cmp
dec
sbb
imul
or
dec
sub
sti
mov
stc
fwait
jmp
stos
cmp
add
add
imul
mov
mov
sti
mov
stc
fwait
jmp
stos
cmp
dec
sbb
push
sbb
pop
mov
test
pushf
mov
popa
je
inc
ss
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsl
adc
adc
ss
gs
mov
xorb
test
cmc
shl
sub
adc
inc
jne
gs
mov
lods
mov
movsl
loop
xchg
shl
clc
adc
aam
jb
cmp
jne
mov
ret
mov
arpl
gs
jmp
jbe
xchg
mov
repnz
mov
xchg
sub
sbb
fidivl
lods
lea
sub
jge
jns
addr16
pop
sbb
and
add
xchg
dec
ljmp
in
push
dec
jnp
mov
gs
or
add
xor
xor
lea
pushf
push
xor
xchg
dec
insl
pop
outsl
xchg
xchg
xlat
or
stc
std
jecxz
fcomps
mov
xor
loop
jge
xchg
xchg
adc
cmpsl
mov
nop
xor
std
xor
push
out
sahf
mov
mov
dec
xchg
xorl
xor
adc
jle
bound
inc
inc
jne
gs
xchg
and
adc
mov
push
js
inc
jae
arpl
pop
add
adc
adc
rcr
repz
mov
xchg
andb
mov
jb
xor
imul
and
shl
jmp
xchg
mov
xchg
mov
add
inc
push
push
daa
cmp
inc
jne
mov
mov
movsl
loop
repnz
shl
and
adc
inc
jne
mov
mov
movsl
loop
repnz
shl
and
dec
hlt
cs
sbb
sbb
mov
inc
movsl
out
dec
jecxz
sti
popa
xchg
lods
add
rorb
dec
pop
loope
sub
shll
and
out
rolb
push
das
lds
dec
filds
dec
in
inc
inc
test
ds
inc
rcr
sub
or
lock
ja
push
xor
clc
pop
cmp
xor
pop
jg
shrl
mov
stos
mov
cs
xchg
pop
ret
outsb
test
stos
push
rcr
push
mov
data16
int3
push
fs
mov
in
xchg
fimuls
leave
gs
jmp
dec
adc
dec
mov
push
sub
ja
pop
orb
enter
add
out
fcmovne
inc
cmp
mov
mov
add
mov
rclb
mov
add
sbb
push
test
pusha
fisttpl
repnz
xchg
ror
push
cmp
inc
xchg
sbb
adc
pop
mov
stc
sub
lahf
adc
dec
daa
ret
outsb
mov
push
add
sub
fsubrp
cmp
dec
xchg
pop
icebp
pop
stos
xor
add
daa
lods
addr16
sbb
push
mov
test
cmp
and
ja
xchg
scas
lods
pusha
xor
dec
sbb
xlat
dec
lock
fwait
bound
fcoms
and
gs
mov
cmpsl
enter
or
clc
cmp
cmp
cmpsl
and
mov
adc
aaa
push
cmpsb
or
dec
test
jne
aaa
sub
stc
lds
fcoms
imul
mov
mov
jno
insl
cmp
movsl
aad
xchg
sub
xchg
jnp
movsl
nop
mov
cmp
insl
pop
mov
cmp
sub
mov
inc
cs
add
data16
mov
or
jle
inc
loop
mov
aad
mov
clc
sbb
cli
mov
sbb
cli
fsubl
dec
lahf
test
push
push
add
xor
push
insb
push
fstp
sbb
popa
xchg
jbe
loop
xor
push
push
jne
dec
test
lds
imull
rolb
cld
lock
aas
cmpsl
outsl
arpl
mov
psrad
push
insb
or
out
pop
mov
lods
cmpsl
out
popa
hlt
mov
jae
stos
mov
mov
daa
bound
lret
imul
ljmp
fimuls
testl
inc
sbb
sub
movsl
jp
and
and
push
and
icebp
xlat
outsb
icebp
inc
xlat
ret
in
cmp
xchg
fdivs
popf
loope
jecxz
xchg
add
dec
adc
rorb
and
jecxz
out
push
addr16
sbb
mov
fsts
and
jno
mov
into
mov
notb
clc
insl
push
and
cmp
mov
fucomp
jae
sbb
cmpl
mov
push
nop
popa
mov
mov
int3
in
xchg
imul
inc
int3
lcall
movsb
fwait
push
cmp
call
lds
xchg
sbb
xor
xlat
scas
into
lcall
imul
dec
xchg
lret
scas
inc
dec
movsb
and
lret
mov
adc
push
push
add
xlat
daa
pop
leave
cwtl
mov
and
xchg
cli
ds
loope
push
lea
push
in
notl
add
icebp
loope
ret
in
test
xor
aad
dec
pop
sub
fsubs
out
iret
xor
inc
jle
fwait
inc
push
lahf
and
insb
insl
pop
aas
out
mov
mov
ja
das
cmpsb
xchg
pop
cli
and
clc
fstpt
add
push
xor
imulb
loop
daa
mov
push
push
pop
mov
aaa
les
in
inc
pop
pop
loopne
inc
outsb
sub
popf
fistpll
or
shll
scas
ja
js
jmp
sub
adc
sbb
aad
rcl
push
sbb
xchg
mov
ss
pop
pop
sub
clc
daa
or
sti
movsl
sub
mov
shr
mov
xchg
imul
jecxz
arpl
mov
jecxz
sbb
pop
xlat
subl
adc
inc
dec
mov
jmp
stc
xor
arpl
inc
loopne
addr16
rorb
loope
das
addr16
ficompl
sub
lcall
cmpsl
mov
pop
shrb
movups
cs
or
movsl
das
shrb
xchg
stos
adc
adc
jmp
jge
or
xor
inc
xor
sbb
xor
or
stc
sub
inc
and
adc
aas
movsb
mov
add
cmp
icebp
aas
loope
out
js
xor
arpl
xor
int
pop
add
dec
iret
mov
xchg
ds
fucomi
xchg
and
sub
pop
lods
bnd
dec
stos
jne
je
pushf
sub
test
ljmp
loope
lods
cld
and
jmp
mov
loopne
int3
mov
mov
bound
fsin
xchg
lds
out
nop
loopne
add
addl
sahf
inc
and
mov
cmp
cld
mov
rorl
or
pop
mov
sub
push
xor
imul
sarb
mov
cltd
add
mov
outsb
xlat
test
in
and
mov
mov
mov
lret
les
ss
mov
arpl
mov
int
pop
lret
pop
scas
cmp
test
insl
mov
pop
xor
into
outsb
push
xchg
adc
and
std
scas
out
and
jno
jecxz
addr16
mov
push
cmpsb
xchg
cmp
lea
cmp
pushf
imul
push
push
bound
int
or
sbb
adc
inc
in
adc
sahf
jmp
fs
adc
out
mov
aas
xor
cmp
lea
xchg
jle
loop
add
jp
outsl
bound
inc
addl
ljmp
push
mulb
mov
and
cli
jns
out
cwtl
push
mov
cmp
mov
adc
int3
jmp
pop
push
aad
repz
pop
push
mov
cmp
popf
jae
sub
cmp
stc
xor
ds
sbb
sbb
movsb
adc
sbb
scas
xor
mov
mov
mov
cld
jecxz
subl
rclb
aaa
inc
push
mov
stos
add
roll
adc
mov
sbb
jmp
adc
adc
mov
add
jne
arpl
pop
and
pusha
in
ds
repz
daa
shlb
inc
mov
test
inc
xchg
inc
cmp
shlb
test
or
add
inc
adc
xchg
shll
movsl
xchg
ficoms
xor
fcompl
int
stos
leave
dec
jmp
into
cmpsb
in
lret
stos
pop
fisubs
add
imul
test
cld
and
and
cmp
xor
push
incb
push
popl
jge
enter
xchg
scas
lret
rcrb
or
mov
add
push
pop
scas
mov
dec
push
xlat
cld
jnp
test
cmpsl
loope
dec
mov
inc
inc
notl
and
in
sub
adcb
mov
xchg
nop
adc
pop
and
aas
mov
outsl
sar
ss
inc
int3
sbb
std
inc
insl
fs
call
and
int3
cltd
ja
mov
roll
add
decb
out
fisubrl
cld
sub
mov
shrb
fwait
mov
xchg
js
ss
daa
aad
icebp
mov
les
mov
cmc
or
paddb
inc
enter
inc
ds
sub
test
push
es
dec
jo
push
insl
cmp
bound
sbb
nop
and
inc
sbb
pop
pop
mov
push
aas
ret
popf
jg
outsl
sbb
out
sbb
push
nop
stc
push
bound
or
decl
or
cmp
test
stos
cmp
dec
out
dec
jecxz
ret
mov
and
sbb
sub
adc
test
jge
jle
rcll
xlat
daa
or
pushl
mov
jecxz
sbb
or
popf
loope
nop
xchg
lods
jmp
mov
xchg
mov
jp
cmp
call
or
lret
jno
pop
mov
xchg
mov
pushf
pop
jp
nop
cmp
outsl
push
inc
mov
sbb
dec
inc
mov
shl
and
dec
rorl
lock
data16
sbb
add
test
sub
jmp
cmp
adc
pushf
mov
insl
push
arpl
pop
sti
push
xor
aad
das
mov
shl
inc
push
jno
lds
sub
cmp
jp
sub
or
mov
scas
pop
test
test
jl
loop
jge
dec
nop
fwait
mov
iret
or
lods
test
add
cld
test
inc
xor
call
adc
sbb
inc
ret
hlt
and
mov
lods
hlt
cmc
cld
jae
hlt
mov
jb
stc
push
lds
pop
jmp
xchg
pop
cld
add
popa
jbe
movsb
ret
jnp
jb
ss
or
arpl
mov
inc
outsb
sbb
xor
inc
jbe
add
ret
popl
push
fnstenv
into
or
fsts
jge
and
add
lods
dec
push
cmp
in
push
lods
popf
std
push
or
pop
jmp
pop
fsts
xor
jge
and
daa
cmp
out
outsb
mov
mov
in
push
xlat
mov
ret
adc
add
xor
jbe
dec
test
sub
cltd
pop
sbb
push
ret
push
mov
out
loopne
ret
mov
adc
pop
enter
int3
out
out
cltd
es
int
stc
nop
addr16
jo
fists
add
jmp
lds
mov
pop
outsb
sbb
pop
inc
mov
xor
mov
sbbl
cmpsl
test
js
push
std
cmpsl
in
arpl
push
int
sti
aaa
jecxz
xchg
inc
fimuls
rcrb
aam
xlat
jnp
mov
enter
adc
sti
mov
scas
lea
mov
imul
imul
out
sbb
mov
mov
das
mov
push
sahf
aad
jecxz
xchg
push
sbb
mov
cmp
mov
daa
xchg
mov
in
jmp
stos
es
stos
call
jmp
push
lret
add
jg
push
inc
leave
cmp
inc
push
push
call
xlat
xchg
xchg
sbb
push
sub
stc
aad
fs
pop
loop
or
mov
sbb
push
inc
push
adc
sbb
in
subl
cmp
int
pusha
sbb
cmpsb
movl
pop
int
smsw
push
lea
loop
das
pop
out
adc
mov
sbb
dec
mov
out
dec
jle
mov
fisubs
std
push
dec
outsb
jge
push
pop
int
cmp
inc
fstp
push
fidivs
adc
cmp
jmp
lock
loopne
les
or
mov
xchg
push
pop
test
pop
pop
pushf
xor
lahf
push
in
xor
mov
sbb
xchg
idivb
out
sbb
lcall
popf
push
fwait
and
in
outsl
adc
dec
addb
jl
cmp
aad
iret
add
jmp
cmp
repz
jnp
cli
or
jne
loope
test
push
or
sub
scas
sbb
bound
and
out
inc
push
arpl
cmpsl
iret
es
test
pop
mov
sbb
mov
aas
into
lahf
and
jbe
jge
dec
sub
movsb
jl
mov
cwtl
sub
lds
mov
adc
and
ucomiss
xor
inc
ficompl
test
push
hlt
xchg
cmp
cld
mov
cmpsb
popa
in
roll
inc
jp
cld
sbb
jp
fmul
mov
add
add
sub
mov
push
mov
arpl
rorb
jae
fwait
enter
insb
pop
cs
adc
mov
or
jmp
jo
pop
pop
roll
popf
lock
and
ret
stc
loopne
dec
and
fstpt
negl
arpl
jb
fcomps
jg
pop
clc
test
ret
adc
pop
hlt
mov
jns
dec
ds
adc
jne
xchg
push
add
xchg
or
push
dec
cltd
fcmovnbe
test
loope
mov
movsl
pop
xor
sbb
outsl
cmpsl
shlw
ficompl
mov
jae
cmp
and
loopne
insb
fdivr
xchg
sub
lahf
imul
lock
das
incb
mov
mov
mov
pop
push
fwait
cmp
shr
jns
xor
xchg
and
mov
lret
fnstsw
pop
outsb
and
pusha
cs
xor
mov
sbb
adc
push
inc
pushf
test
jmp
xchg
stc
rcr
shr
dec
cli
scas
and
lcall
out
or
mov
add
inc
mov
int3
pop
sbb
cmpsl
enter
mov
jle
lea
ja
dec
leave
bound
fwait
fwait
mov
or
mov
ds
and
adc
xor
jnp
nop
sub
sub
cltd
orb
pop
ret
scas
xor
in
fstps
leave
dec
push
pop
fcoml
dec
push
scas
scas
add
hlt
inc
cwtl
pusha
hlt
sub
or
mov
sbb
xchg
jmp
mov
or
pop
mov
icebp
fwait
cmp
addr16
and
jne
mov
push
incb
jns
jo
mov
divb
mov
insl
add
sbb
lods
or
ds
jecxz
out
push
mov
mov
xor
fwait
addl
je
mov
jo
lock
into
jmp
movsb
pusha
jg
adc
inc
push
sub
push
aad
inc
jno
pop
icebp
int3
pop
shll
sub
cltd
pop
sub
add
push
nop
aad
sub
lret
jle
xorb
or
ficoms
ss
pushf
jbe
das
je
nop
xor
mov
inc
jge
hlt
ds
mov
mov
fs
cmp
outsl
inc
mov
and
xor
aas
loopne
mov
cmp
rcrl
cmpsb
addr16
bound
dec
cli
adc
pop
dec
ret
pop
jno
xchg
adc
iret
clc
push
pop
pop
shrl
loopne
inc
mov
fiadds
test
iret
sbb
cmpsb
bound
ror
push
dec
dec
xor
xchg
int3
lds
mov
adc
push
mov
dec
push
inc
add
or
lret
and
mov
cmp
incl
jmp
mov
and
subl
cli
mov
mov
ret
mov
test
out
mov
js
dec
mov
cld
mov
pop
sbb
iret
enter
lcall
mov
out
and
out
or
mov
lcall
data16
inc
mov
jge
or
sti
js
enter
js
push
jo
rorb
insb
lret
push
inc
mov
out
rolb
xchg
or
flds
int3
push
mov
loope
and
mov
subb
push
mov
mov
and
rcrl
inc
xor
inc
push
dec
xchg
add
lcall
out
fidivrs
decl
jno
call
push
cmp
xchg
inc
jp
scas
pop
cwtl
addr16
sbb
mov
orl
pop
sahf
mov
mov
add
cwtl
or
push
cwtl
cmc
push
out
into
and
dec
std
lock
hlt
cmp
push
pop
sub
aaa
cwtl
rorl
xor
fistl
push
push
and
mov
mov
in
inc
js
ss
sbb
add
setae
push
addr16
dec
and
inc
ss
inc
dec
push
cmp
sahf
inc
inc
sbb
sub
in
mov
pop
clc
sub
jle
xchg
inc
stos
pusha
jg
lea
mov
pop
mov
add
sar
and
jmp
addr16
pop
fcom
xchg
rolb
popf
leave
icebp
dec
mov
fimuls
int3
push
push
jle
mov
cli
inc
dec
scas
arpl
nop
addb
adc
mov
push
and
lock
cwtl
xchg
out
inc
ret
mov
mov
push
inc
xchg
nop
dec
or
adcl
call
sbb
sbb
lret
andb
js
jno
mov
mov
jg
xchg
mov
int3
mov
mov
jecxz
rorb
dec
pop
and
fistpl
push
sub
lds
mov
inc
cmp
push
cmc
and
repnz
mov
cld
xchg
or
lret
stc
xchg
popf
in
leave
push
fsubp
les
test
dec
cmp
in
in
aad
adc
and
das
fwait
out
daa
dec
add
aam
inc
xchg
cmp
lahf
mov
outsl
popa
xor
pop
mov
mov
test
jnp
pop
mov
mov
cmc
pushf
push
add
int3
sbb
xor
pushf
and
in
and
adc
lret
fs
adc
sbb
loop
pop
repnz
mov
notl
cmc
inc
mov
fnop
mov
inc
je
mov
mov
lock
cmpsl
xor
lret
dec
fld
add
cmp
inc
mov
shrb
xchg
mov
pop
out
adc
sub
insb
pop
xor
xlat
mov
xchg
loop
outsb
dec
outsl
divb
push
push
sahf
cs
cmp
mov
les
adc
sub
jl
gs
out
jne
cs
ficoms
ja
or
cmp
loopne
push
in
rclb
jb
mov
dec
adcb
or
push
mov
xor
mov
addr16
push
push
pop
cmc
call
push
stos
loopne
cltd
pop
decl
movsl
fmull
add
xor
lods
jbe
lret
inc
mov
orb
mov
xchg
dec
test
call
repz
scas
dec
lret
shlb
push
sbb
repz
lahf
scas
cld
scas
adc
adc
mov
jne
or
mov
xchg
shrb
mov
add
mov
int3
xchg
fstpt
icebp
sahf
cmpsb
adc
cli
ds
call
sbb
lds
add
sub
out
push
jo
clc
sub
lock
adc
js
push
cmc
aad
sti
mov
xchg
push
cmpl
and
mov
jb
bound
dec
dec
mov
ret
repz
cmc
push
sub
lret
insb
test
xor
out
push
xlat
or
mov
mov
scas
jae
fsubs
in
call
enter
push
cmpl
repz
repz
push
mov
pop
imul
or
sub
popa
jo
add
out
stc
dec
clc
or
insb
lret
nop
sub
mov
iret
inc
das
mov
xchg
jecxz
push
jmp
and
jae
ret
outsb
loopne
xchg
or
mov
gs
push
in
inc
out
add
lea
mov
leave
mov
jbe
movd
or
mov
mov
jmp
mov
lret
lock
out
cltd
bound
js
xor
je
fnsave
push
ds
cmp
sbb
or
es
fwait
xchg
mov
push
adc
push
sbb
sbb
mov
dec
call
or
jo
jae
xor
jg
lods
loopne
fstpt
dec
pushf
adc
repz
push
lahf
or
push
mov
sub
push
shrb
adc
xchg
or
popa
mov
rorl
add
in
and
js
sbb
inc
leave
mov
jae
jbe
decl
cmp
int
xchg
cwtl
mov
andl
into
fildll
cld
lret
lret
push
aas
inc
ror
sbb
xlat
mov
pop
sti
sub
int
xchg
scas
clc
push
pop
mov
push
adcb
std
cmpsl
mov
push
add
shrl
ficompl
out
fwait
add
sub
pop
lcall
jnp
fsts
mov
fnstenv
mov
push
add
sbb
int3
scas
sbb
dec
insb
arpl
inc
xchg
jecxz
scas
or
faddl
loop
insb
and
mov
lods
push
sbb
xor
and
inc
jne
mov
mov
movsl
loop
repnz
shl
and
adc
inc
jne
mov
mov
movsl
loop
repnz
shl
and
xor
arpl
inc
inc
je
cmpsb
xchg
mov
mov
jmp
cmc
loop
cmp
cmp
bound
lds
rcrb
sub
jp
cmp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
arpl
dec
inc
jnp
imul
inc
and
sub
shr
mov
mov
jo
sub
push
imul
xor
add
adc
loopne
lock
mov
fwait
mov
cmp
stos
fcomps
dec
sarb
imul
push
or
cmp
sub
mov
lret
faddp
in
leave
int3
stos
push
pop
cmp
inc
adc
cmp
xor
cmp
cmpsl
inc
ret
ret
lahf
scas
pop
outsb
in
mov
test
mov
rcrb
hlt
lea
test
out
in
addr16
cli
sahf
add
pop
jmp
jnp
mov
lock
cmp
push
mov
cmc
dec
dec
inc
lods
and
mov
or
mov
aam
add
cmpsl
inc
add
mov
addl
pusha
dec
xchg
fcompl
mov
test
daa
jae
rolb
js
pushf
es
int
mov
sbb
flds
shrl
and
sub
scas
xchg
stos
cmp
dec
inc
jnp
imul
dec
or
cmp
lret
mov
loopne
call
mov
add
adc
add
pop
or
jnp
mov
mov
sar
fdivrp
jmp
pop
adc
sbb
push
outsl
cmc
dec
inc
sub
lcall
jmp
adc
and
add
jae
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
dec
inc
jnp
imul
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
add
xlat
fdivs
mov
add
cmp
int
sahf
roll
lret
dec
xchg
add
fwait
xor
inc
mov
mov
jge
or
pop
mov
jmp
mov
mov
lock
outsb
outsb
outsb
mov
popa
push
jecxz
test
add
xchg
into
xor
cmpb
cmp
ja
xlat
ljmp
js
movsl
ss
aam
inc
imul
cmp
or
lret
gs
shll
mov
rolb
cltd
fldl
popa
sub
add
js
lcall
pop
int
addb
std
jne
lds
cwtl
jo
pop
imul
inc
fadds
dec
mov
dec
scas
xor
cltd
inc
in
iret
jbe
lret
sbb
cmp
pop
movsb
mov
aas
jbe
shrl
xor
insb
sub
jns
xchg
lock
fidivrl
hlt
daa
test
cwtl
in
push
int
dec
in
mov
sahf
stos
paddusw
mov
cltd
out
aad
stos
insl
pop
nop
popa
and
mov
sub
and
mov
cwtl
cmp
jl
lods
and
aaa
das
xchg
jb
xchg
dec
mov
daa
aam
mov
lock
and
add
sub
insl
gs
in
out
in
lea
sbb
lock
xchg
mov
mov
sbb
pop
cwtl
dec
loop
sbb
sub
adc
ss
and
sub
mov
daa
push
or
mov
pop
mov
outsb
test
aam
and
aam
sbb
xor
xchg
hlt
mov
ss
adc
cli
mov
inc
aam
sbb
inc
test
xchg
cmpsl
addr16
sub
sbb
orb
fcmovu
adc
pop
jae
fpatan
ret
pop
inc
push
cld
repnz
out
mov
adc
pop
stos
xchg
xor
test
cmpl
and
jle
inc
mov
test
jp
lcall
jne
jbe
lret
cli
jp
jne
test
ret
sahf
movl
push
call
dec
ret
lock
cmp
jbe
cmp
and
push
or
popa
xchg
popa
sub
cmp
roll
jp
xor
mov
mov
add
pop
pop
adc
mov
orl
mov
je
mov
sbb
aas
shrb
sbb
jo
or
and
add
imul
ret
push
dec
test
int
pop
pop
lahf
sbbl
xchg
and
test
xchg
pop
scas
adc
push
inc
xor
xor
jle
jnp
pop
mov
mov
jge
sahf
test
cmp
adc
pop
in
add
stc
cmpsb
add
sub
addl
mov
xchg
and
sub
jne
data16
stos
lret
je
jns
lret
add
out
fwait
stos
pop
or
dec
jg
xchg
in
stc
push
xchg
stos
cmp
movsb
leave
mov
sbb
outsb
test
test
dec
and
xchg
xor
mov
dec
dec
cmp
add
inc
movsb
or
shl
mov
pusha
popa
out
aam
fistps
add
movsl
in
out
xor
outsl
out
push
jbe
jbe
xor
pop
lcall
mov
fildl
mov
pop
mov
outsb
fcomp
hlt
leave
fwait
stos
imul
fmull
stc
out
xchg
mov
adc
shlb
cmc
xchg
fs
mov
sti
add
inc
ljmp
jmp
out
popf
cmp
nop
daa
push
cltd
inc
dec
or
mov
push
int3
adc
sahf
mov
add
test
notb
push
in
rorl
int
pop
out
dec
jb
adc
and
int3
pop
xchg
sbb
dec
loopne
popa
aam
and
lcall
fsubs
dec
outsb
or
in
mov
inc
stc
or
decb
mov
loope
adc
jb
mov
xor
insb
es
pop
and
outsl
test
aam
sub
iret
int
sar
push
inc
fildl
mov
pop
pop
mov
out
sub
bound
leave
cmp
dec
inc
test
jbe
ficompl
lcall
shlb
jbe
mov
mov
add
lret
lret
out
aam
loopne
or
lea
and
jmp
scas
daa
icebp
fstps
mov
sbb
dec
mov
lock
mov
mov
jbe
loopne
push
xor
andl
jmp
jecxz
dec
cmpsl
jl
fldenv
lret
push
or
std
cmpsl
leave
mov
gs
loop
cld
pop
jns
stc
dec
cmpsb
loope
mov
inc
movsb
fsubs
test
clc
jle
xchg
leave
sub
xchg
adc
xor
mov
jns
shll
into
cmpsl
popf
leave
cmc
in
lret
and
loope
pop
leave
lods
pop
popf
push
test
or
js
lret
aaa
daa
push
mov
roll
sarl
dec
push
sbb
and
pop
std
sub
fisubs
adc
push
jb
pop
sti
mov
inc
push
dec
addr16
pop
sti
out
and
mov
test
or
inc
mov
xchg
xlat
pop
orl
test
xchg
jl
dec
gs
and
sub
test
aas
call
fimull
lcall
sbb
xchg
lret
popf
mov
ret
es
in
es
test
loope
sub
pop
imul
mov
ret
aad
lahf
cmp
lcall
aas
jb
cltd
outsb
jo
and
les
adc
fisubs
xchg
les
imulb
inc
addb
aam
shlb
and
inc
sbb
ljmp
xchg
int
mov
pop
add
jl
sbb
sbb
out
ret
add
subb
and
ret
sbb
cwtl
jne
arpl
pop
fstp
cli
mov
cli
and
mov
adc
cltd
adc
and
inc
daa
add
pop
popf
mov
fadds
push
pop
ds
cmp
xor
dec
mov
add
gs
cli
imul
pop
lret
rcl
icebp
adc
in
fdivp
sub
dec
adc
push
add
movsb
cmp
lea
mov
push
fs
std
pusha
jge
sbb
test
sbb
dec
aas
popf
sbb
scas
mov
cmp
cmp
loopne
cmc
xchg
les
gs
jp
xchg
sti
sbb
sbb
test
jns
mov
popa
adc
mov
jg
lods
jmp
out
fildl
mov
jl
pop
scas
aaa
call
fsqrt
xchg
out
xchg
jp
push
xchg
cmp
jne
cmpsl
or
scas
fcmovnb
sahf
adc
pop
setne
xor
out
ret
cltd
movsl
or
xor
adcb
fwait
or
mov
inc
dec
arpl
mov
cmpsl
insl
divl
mov
mov
stc
pop
push
cmp
lea
inc
sbb
sbb
ret
add
lcall
sub
mov
add
push
ret
call
push
or
mov
pop
popa
pop
adc
xor
sbb
dec
mov
cmp
mov
stos
es
jbe
pop
pop
push
incb
and
adc
xchg
mov
shll
cld
fadd
out
sub
sub
pop
daa
jp
movsl
lret
dec
jg
jmp
clc
ret
mov
push
pusha
idivl
cmp
out
add
popa
push
repz
lods
fs
add
inc
mov
psubb
fstpt
stos
es
aaa
push
jmp
pop
fists
iret
in
int3
pop
jl
jb
int
mov
add
jecxz
jns
push
xor
inc
pop
arpl
or
pop
mov
and
jl
movsb
pop
add
popf
mov
xchg
daa
test
scas
test
xchg
push
aam
pop
ret
lock
sbb
inc
jne
push
mov
pop
mull
cwtl
xchg
repnz
fwait
or
jmp
popf
or
dec
int3
push
jbe
dec
xor
std
adc
pushf
or
mov
cmpsb
dec
mov
fcoml
cmc
out
push
and
arpl
and
es
jb
and
outsl
cs
or
loope
mov
cmp
xor
xorl
mov
mov
push
mov
inc
sub
xchg
push
jmp
ja
mov
mov
jno
push
imull
push
test
sarl
inc
mov
jae
sbbb
xchg
loopne
push
sub
sub
xor
inc
insl
fcmovu
cmovb
xchg
repz
dec
loope
mov
adc
outsl
rcrl
jge
sbb
cld
into
cmp
and
shll
into
lds
mov
mov
and
ret
mov
call
ret
add
sub
push
xchg
pop
enter
adc
mov
inc
mov
aam
jp
fstpl
cmp
xor
insl
dec
mov
xor
mov
nopl
testl
shlb
inc
lds
cltd
pop
iret
lea
je
out
xor
loope
cmp
and
inc
pop
imul
sub
cmp
cltd
jnp
fwait
adc
shlb
imul
sub
sbb
pop
fnstcw
xchg
daa
pop
int3
or
loop
push
aas
cld
or
xchg
enter
sahf
pushf
insl
push
sar
neg
aaa
jne
cmp
popf
xchg
int3
and
xor
movsb
push
pop
xchg
jle
lods
fists
pop
cmp
jno
jle
cmp
lcall
inc
jbe
mov
std
insl
push
xor
inc
icebp
fldl
stos
fimuls
cmp
daa
sbb
daa
xor
loope
xchg
repz
decb
push
pop
pop
inc
call
into
xchg
movsb
xor
jp
loope
ds
jg
fnstsw
es
lcall
inc
xor
test
pop
lock
xor
adc
xchg
pusha
sbb
cmp
pop
push
out
xchg
test
jmp
aas
push
cmpsl
push
pop
sbb
arpl
cli
mov
jg
shll
fimuls
test
xchg
jl
incl
stc
stos
lret
dec
push
pop
inc
adc
pop
fdivp
push
inc
cmpsb
imul
mov
push
mov
push
out
or
mov
cld
add
mov
or
sbb
sub
pop
in
xlat
and
test
inc
das
adc
iret
xor
insl
sub
add
push
inc
scas
mov
loop
inc
push
imul
or
dec
daa
mov
lds
jno
dec
adc
push
es
mov
mov
lea
out
dec
ret
push
mov
lods
push
push
or
dec
test
lcall
dec
add
lods
ds
or
pop
fisttps
add
fildl
ss
sbbb
jge
pushf
xor
dec
jmp
loopne
jnp
pop
xlat
xchg
jbe
mov
or
loop
mov
shrl
mov
iret
mov
push
roll
jbe
cwtl
lea
pop
rorb
pop
jg
push
mov
jecxz
fsubs
bound
out
dec
dec
ret
sub
shrl
or
jecxz
fistps
mov
mov
shr
in
jecxz
repnz
push
pop
push
lds
std
test
sbb
imul
xorl
push
mov
fstps
add
jl
imul
push
xlat
mov
pop
mov
outsb
addb
in
fwait
sub
icebp
sbb
enter
test
mov
mov
fldt
hlt
mov
or
pop
repnz
lea
sub
loopne
mov
jbe
fsts
and
mov
popf
jae
cmp
xor
icebp
fdivr
xor
arpl
in
cli
jl
xlat
pusha
xor
or
add
aas
movsb
lock
pop
ja
mov
push
aas
cmp
sub
cmp
ror
cwtl
fwait
mov
push
sub
xor
pop
pop
loope
mov
sbb
int
push
ja
notb
fiaddl
into
test
flds
ret
lret
mov
aad
mov
lds
dec
test
into
and
dec
loop
ret
sub
cmp
mov
in
je
push
jl
jb
dec
js
and
xchg
test
movsl
and
mov
fs
inc
int3
mov
ret
fcomps
hlt
push
inc
mov
push
stc
insb
add
cwtl
cmc
push
idiv
xchg
mov
jne
rep
arpl
sbb
ss
fstp
inc
ret
mov
adc
add
pop
insb
mov
push
or
sbb
das
fucom
fwait
sar
ds
add
rolb
test
jo
je
add
jge
ljmp
mov
pop
mov
xchg
sahf
xchg
or
add
push
scas
push
dec
sub
pop
ret
cmp
arpl
fnsave
mov
cs
cmpsb
xor
outsb
mov
mov
cmpb
mov
ljmp
mov
push
jge
pop
adc
testl
repnz
dec
je
lea
push
push
int
xchg
jbe
or
rorb
std
adc
in
pop
lock
sub
cwtl
dec
jge
pop
or
and
ss
fldl
add
insb
push
xor
xchg
cmp
push
lahf
cmp
cld
sbb
aam
pop
addl
inc
insb
jmp
fldenv
hlt
rsqrtps
push
push
xor
or
cs
sub
shlb
insl
testb
push
loope
push
cmp
fwait
add
ss
and
or
push
cwtl
fdivl
add
dec
pop
sarb
cld
divl
push
pop
dec
mov
test
pop
xchg
mov
mov
mov
add
gs
lods
in
or
addr16
xor
shl
into
and
push
out
lds
enter
mov
lret
aam
xor
jmp
mov
adc
jae
test
mov
cmp
pop
pop
xlat
mov
mov
in
jle,pt
fsts
push
sar
paddsb
loope
dec
xchg
adc
es
jne
movsb
cmp
jp
mov
in
or
data16
jp
jg
addr16
push
stos
fidivl
pop
xor
insb
jle
loop
shl
test
int
jle
sarl
lret
sbb
aad
fmul
addb
xchg
mov
andl
push
or
pop
sti
pusha
js
lock
mov
pop
cmp
aas
sahf
push
xor
mov
jno
mov
adc
popa
ljmp
sub
dec
aad
rcrl
iret
xlat
adc
sar
pop
sub
xor
push
cmp
mov
sub
or
push
jl
cmp
into
sbb
push
jb
push
pop
xor
inc
mov
push
dec
xchg
and
dec
jge
xchg
add
notb
pop
shl
xchg
push
jl
jb
jo
xor
ret
and
ret
xchg
in
shlb
ljmp
stos
shrb
inc
mov
mov
mov
pop
adc
lret
push
inc
popf
int
sbb
sbb
pop
and
jg
jnp
add
jge
cmpsb
xchg
rol
xchg
xor
stos
es
mov
sahf
inc
loop,pt
jecxz
cmp
out
loopne
shlb
lods
stos
leave
loope
cmp
xchg
push
lea
jne
fidivrl
pop
pop
mov
adc
mov
pop
mov
push
dec
mov
fbld
add
das
mov
rorl
cmp
cmp
xor
or
ret
mov
orl
mov
lods
mov
jb
subb
cs
dec
push
pop
mov
pop
jno
hlt
icebp
sbb
lahf
adc
mov
ds
dec
ljmp
inc
pop
mov
lods
out
pop
jno
and
xor
push
inc
mov
jb
sbb
das
add
sbb
add
jno
pop
idivb
xchg
mul
sbb
push
push
dec
or
mov
cmp
test
xchg
mov
push
nop
les
aas
xor
or
sub
xor
inc
or
or
ja
jle
jbe
pop
aaa
mov
ljmp
popf
push
or
cmp
test
leave
sti
icebp
xchg
notb
pusha
bound
sbb
lods
inc
dec
jge
add
mov
inc
daa
arpl
jl
push
sahf
mov
pop
dec
cld
push
ret
sbb
adc
mov
pop
scas
dec
jae
scas
xor
ret
mov
out
mov
and
lea
mov
pushf
adc
pop
enter
jbe
adc
mov
out
cwtl
dec
and
enter
lods
dec
ficoml
hlt
mov
fbld
sub
fs
es
pusha
mov
lock
gs
outsl
xchg
xlat
dec
iret
cmpsb
xorb
cmp
pop
xor
mov
or
divl
sub
out
mov
push
jp
insl
stos
sub
mov
jbe
xor
mov
enter
push
and
in
pop
lahf
push
fidivrl
je
iret
addl
and
or
add
mov
nopl
or
mov
xchg
inc
imul
ficompl
test
and
std
inc
jl
mov
pop
xchg
dec
and
je
out
pop
push
jg
roll
or
out
sbbl
cli
notl
add
xchg
ret
pop
pop
pop
aaa
adc
jmp
aaa
pop
inc
aas
cs
ret
cmpsb
mov
aad
daa
and
pop
push
js
mov
cmc
stos
cltd
in
mov
enter
dec
dec
lds
mov
mov
in
xor
stc
and
shl
push
cmp
mov
pop
pop
ret
sarb
add
movsb
enter
arpl
ljmp
loopne
mov
sub
jns
sti
stc
pop
nop
aad
outsb
sub
or
loopne
push
ret
jns
adc
and
cli
push
ret
dec
mov
lcall
out
outsb
cmpsb
dec
shl
and
fdiv
inc
outsl
shl
aaa
addr16
sbb
loopne
sbb
or
in
mov
fwait
jmp
shl
inc
rcll
add
movsb
adc
xor
sbb
jnp
xchg
ror
repz
xchg
cmp
adc
inc
push
sbb
mov
dec
cmpl
inc
and
les
jns
mov
jecxz
cmp
lock
shlb
cli
mov
in
cs
cmp
jmp
adc
subb
bswap
out
push
fidivl
pop
push
dec
or
loop
addl
cwtl
mov
add
andb
or
lret
or
cmp
mov
cmp
mov
out
cmp
add
lret
int
sbb
jns
push
cli
cmp
cmpsb
xor
pop
loopne
or
aaa
sbb
es
aaa
pop
in
mov
out
jg
in
test
xor
inc
dec
mov
insl
lret
push
pop
adc
pop
lock
pop
dec
cmpsl
cmp
ljmp
xchg
outsl
div
aas
push
jecxz
jae
jns
mov
xchg
push
mov
mov
adc
mov
fidivl
jle
jg
jo
loope
in
cmp
cltd
xchg
inc
movsb
test
xor
xor
outsl
loop
xor
aaa
adcl
cmc
jae
stos
cmp
inc
push
mov
subl
jb
sbb
mov
lret
aam
pop
mov
inc
fwait
mov
fidivrl
jecxz
mov
jp
lcall
or
out
call
into
das
subl
inc
mov
in
pop
mov
inc
cmpsb
pop
adc
fs
sub
inc
xchg
jmp
adc
add
stos
into
xor
push
les
ja
outsb
das
lock
pusha
aad
mov
sub
enter
mov
inc
and
add
inc
add
and
aas
and
cli
sub
fistl
pop
sbb
aas
jno
mov
or
push
adc
stos
pop
mov
xor
stos
xor
xchg
out
jg
in
int
out
pop
pop
sbb
jg
push
mov
push
push
repz
cmp
push
std
xor
jle
in
push
insb
adc
cs
cmp
setb
sub
icebp
pop
fs
std
imul
sub
xor
repnz
sbb
std
scas
mov
adc
or
sbb
adc
sbb
and
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
dec
inc
jnp
imul
xor
add
adc
loopne
lock
sar
jmp
fwait
mov
cmpb
lret
and
push
imul
shrb
loopne
lock
xor
shr
mov
mov
sub
sbb
imul
and
add
nop
sub
fisttpl
popa
push
rcrb
inc
outsl
push
mov
mov
cmpb
aaa
xor
add
adc
bound
fldl
push
jb
xorb
loop
bnd
rolb
add
adc
mov
bound
mov
mov
repnz
shr
and
adc
outsb
pop
adc
or
cmp
std
into
loop
aad
or
leave
add
sbb
mov
shll
es
push
or
cmpb
fisubrs
repnz
mov
std
jb
int
and
adc
push
mov
in
imul
scas
and
data16
dec
ror
xor
por
bound
mov
pop
xchg
loope
ret
inc
xchg
shlb
loop
in
cld
fnstsw
popf
jle
xlat
rcrl
insl
bound
mov
ljmp
xchg
outsl
mov
inc
lea
xor
pop
jge
out
pop
sbb
and
ja
jecxz
mov
std
fnstsw
int
push
mov
pusha
shlb
mov
cmpb
rol
loop
jmp
add
or
cmp
sub
jb
inc
js
jae
add
jmp
sti
xlat
loop
xorb
insl
push
adc
es
arpl
jb
and
xlat
sti
out
fucom
ret
mov
jbe
ja
inc
adc
arpl
sbb
cs
mov
in
imull
loop
repnz
xor
add
adc
bound
push
inc
bound
mov
mov
repnz
loop
repnz
xor
add
adc
bound
push
inc
bound
mov
and
lock
sub
out
add
sub
mov
xchg
xchg
das
pop
cmp
les
pop
inc
out
and
adc
clc
lods
mov
xchg
imul
loop
xor
ret
mov
inc
lods
sub
mov
dec
mov
ret
and
fdivs
dec
dec
test
sub
mov
xchg
push
and
mov
mov
add
pop
add
cli
call
gs
out
jae
and
xchg
stos
pop
jae
pushf
dec
push
ja
pop
cld
pop
or
push
cwtl
mov
adcl
dec
stos
and
jae
mov
lret
sub
stos
movsb
lds
out
rcll
pop
adc
inc
shrl
mov
push
mov
stos
mov
xlat
push
cmp
inc
jge
and
sbb
daa
imul
fucomi
int
add
mov
hlt
out
cs
pusha
adc
xor
out
ja
sub
leave
int3
mov
mov
cmp
jl
and
bound
daa
mov
mov
or
xchg
lret
dec
sbb
popa
mov
test
xor
xor
icebp
dec
or
inc
test
loope
xor
outsl
mov
sahf
inc
adc
stos
mov
jmp
aas
dec
mov
pop
cmp
cli
cmc
mov
shr
cmp
push
into
jp
push
es
cmp
mov
stos
pop
cmpsl
xorb
push
jp
in
mov
or
dec
xchg
mov
adcl
mov
in
shlb
mov
sbb
mov
inc
xchg
sti
ret
mov
sub
fdivr
in
pop
bound
jo
cmp
imul
shr
sbb
adc
lret
nop
rdpmc
adc
in
push
aad
jmp
inc
daa
cmc
jg
pushf
mov
jne
movsb
jg
lock
jno
dec
dec
test
imul
jecxz
xor
lods
aas
add
out
lock
enter
push
bound
mov
inc
dec
adc
mov
xor
fdiv
incb
icebp
call
mov
cmc
cmp
xchg
pop
idiv
push
mov
pop
lds
fistpl
out
cld
ljmp
fidivrs
jecxz
je
sbb
add
shrb
int3
and
pop
jno
adc
stos
cs
xchg
pop
cmpsb
add
jb
add
inc
jns,pn
mov
mov
push
in
sbb
movsb
xlat
aam
shl
out
xchg
xor
sbb
popf
test
sub
lret
mov
fsub
inc
dec
fimuls
sbb
iret
lret
je
jl
xchg
test
into
nop
and
je
xor
jge,pn
jnp
out
sbb
push
test
pop
fcmovb
test
mov
inc
cmpsl
sti
gs
dec
adc
test
cmp
lret
mov
jns
ss
add
outsb
sbb
stc
add
cmp
inc
bound
xchg
fldcw
mov
pop
aas
sbb
pop
jbe
add
insb
push
or
mov
xchg
das
mov
xor
sub
adc
lods
xchg
ficoms
pushf
inc
icebp
outsb
pop
jb
mov
dec
mov
pop
arpl
pop
push
inc
sbb
repz
testb
or
insl
fidivs
inc
jbe
sbb
or
repnz
test
out
mov
xchg
dec
lret
fxch
dec
and
aam
lock
adc
es
lods
push
jnp
aas
insb
pop
je
aas
js
fmuls
iret
mov
insl
mov
mov
lea
xchg
dec
xchg
lods
adc
fimuls
jne
dec
add
je
or
add
adc
faddp
mov
mov
pop
test
and
insl
scas
dec
loop
divl
inc
jae
push
mov
lea
in
sub
mov
repz
adc
ljmp
into
outsb
pusha
in
pushf
popf
mov
addr16
cs
ret
mov
std
lods
dec
into
push
fs
adc
mov
loope
insb
xor
inc
aam
out
add
mov
or
fmull
mov
nop
pop
in
inc
xchg
nop
cmp
call
push
pop
add
xor
aaa
data16
pop
sbb
adc
mov
jge
insl
fsubs
mov
popa
sbb
cmpb
dec
dec
test
les
mov
or
push
mov
aad
je
lcall
mov
push
sub
data16
and
lret
ja
stos
jle
xchg
neg
stc
fdiv
ret
test
add
cmp
mov
xorb
mov
lahf
xorb
hlt
imul
lods
adc
adc
jl
xchg
iret
int3
jp
add
aas
inc
pushl
mov
in
icebp
xchg
pop
pop
insw
ja
pop
mov
pusha
jge
jp
pusha
stos
sub
xchg
sub
jns
popf
lcall
xchg
cli
fimull
imul
repnz
xchg
sub
outsb
mov
loopne
cmc
xor
add
add
and
in
in
insb
aas
movsl
rolb
xchg
sbb
mov
mov
lods
sbb
jecxz
mov
jmp
pop
mov
leave
pop
repz
iret
cs
std
cmpl
mov
adc
andl
mov
in
push
loope
pop
sbb
sbb
repnz
and
in
mov
sub
xlat
shr
stos
sub
adc
lret
lock
in
dec
dec
xchg
adc
les
jbe
fmull
inc
pop
insb
push
insb
push
out
cmp
fs
jg
sbb
and
inc
mov
cld
in
nop
out
jmp
inc
ljmp
adc
jle
sarb
xor
mov
mov
push
jno
cmpsl
and
pop
inc
sahf
mov
sbb
xor
mov
shlb
call
imul
daa
jbe
or
js
cmp
out
test
sbb
icebp
aam
mov
cmp
int3
mov
and
push
inc
shll
cmp
mov
inc
mov
and
lret
mov
cmp
pop
movsb
test
enter
cmp
inc
lret
jne
mov
stos
xor
mov
scas
or
and
int
decl
loope
dec
jns
hlt
jnp
and
mov
bound
cmp
ljmp
or
dec
jns
shll
pusha
push
adc
xchg
shrb
lret
mov
mov
and
sbb
cmp
push
adc
repz
xor
pop
and
fimuls
pop
jle
and
dec
fstl
jbe
movsb
div
sar
fnsave
mov
cmp
jo
cmp
insl
movsl
sbb
imulb
jmp
aam
add
jb
pop
jbe
ret
cli
sbb
xchg
xor
xchg
les
jg
or
arpl
add
mov
push
jg
inc
jns
iret
lds
sub
lcall
mov
gs
data16
jbe
sub
je
out
sahf
pop
xchg
popa
lods
je
std
aaa
into
mov
dec
sub
into
mov
push
jmp
stos
lahf
dec
mov
lahf
into
mov
sbb
fstl
fs
push
push
mov
sub
ljmp
and
cmpsl
inc
cmp
sbb
xor
cmpsl
addr16
xorl
aad
test
adc
mov
xchg
mov
loope
std
movsl
sbbl
movsl
or
push
pop
out
dec
loope
inc
aaa
inc
adc
inc
clc
ds
inc
jmp
mov
sub
scas
or
nop
add
negb
lods
sbb
mov
xor
into
dec
dec
xchg
mov
push
pop
mov
cmp
and
mov
enter
cmpsb
xchg
icebp
jbe
loope
dec
test
ljmp
mov
je
xor
inc
sub
aad
icebp
jbe
jnp
std
shlb
aas
dec
sub
push
pop
js
sahf
mov
movsb
sti
lds
enter
cwtl
xor
xchg
sub
daa
imul
xor
jno
cli
in
enter
mov
andl
in
inc
pop
scas
sbb
adc
movsb
cmp
es
xor
aad
dec
lock
sub
inc
dec
fmull
mov
xor
in
mov
loopne
test
mov
and
stos
pop
test
xor
pop
xchg
mov
mov
inc
cltd
or
loop
ljmp
mov
testb
xor
xor
lods
sub
or
push
lods
xchg
add
movsl
arpl
pop
jge,pn
in
jp
xchg
rcl
fldcw
push
xor
push
leave
ja
push
lret
sti
add
out
pop
sbb
jge
sub
in
or
push
aam
pop
dec
pop
in
negb
xlat
aad
and
pop
cli
sub
les
xchg
jge
jle
pop
popa
add
stos
jle
out
inc
sub
js
fisubrl
test
mov
xor
test
sub
mov
sub
or
cmpsl
fmuls
stc
and
xchg
push
and
sti
pop
std
xchg
adc
popf
gs
into
incl
aam
fisttpl
xor
hlt
dec
movl
inc
mov
adc
xorb
scas
je
in
mov
mov
xchg
and
mov
xchg
js
out
orb
or
sti
cmp
jp
sbb
push
cmp
pop
shlb
cwtl
adc
roll
add
push
push
addb
aaa
mov
push
push
loopne
fsubl
test
adc
jno
mov
cs
hlt
jmp
jmp
add
jne
in
bound
sbb
nop
cmp
xchg
lcall
xchg
mov
cmpsl
in
outsb
inc
rclb
aas
push
fs
loope
jp,pn
mov
pop
mov
jl
mov
lcall
cli
mov
sbb
aam
cli
pop
test
leave
popa
cmpsl
add
bnd
sbb
xlat
cmpsb
xchg
jnp
leave
or
out
pop
lcall
lds
dec
cli
cmp
jb
outsb
fistpll
lock
push
pop
test
sbb
mov
enter
adc
add
gs
sub
fs
and
pop
fnstenv
and
sahf
xor
cs
ret
scas
je
sub
fidivs
movsb
add
and
jmp
int
loop
cmp
incl
mov
out
xchg
vpsrad
icebp
jno
enter
es
inc
cmp
ss
unpckhps
jle
push
mov
lds
lahf
push
out
or
fwait
ret
push
leave
sub
cmp
lret
jle
cmp
fisubrl
mov
lcall
push
jo
ret
sbbl
sbb
addr16
sub
andl
push
fbstp
out
popa
add
pop
mov
jecxz
xor
and
call
add
pushf
outsl
fsubrl
fbld
pop
push
das
fdivs
fimuls
mov
mov
fdivs
mov
sub
lds
push
imul
mov
jbe,pn
mov
out
cltd
fsubp
fsin
add
es
sarl
jo
leave
cs
mov
cmp
ds
rorb
sbb
cmp
cmp
cmp
divl
dec
jnp
push
pop
cmp
ss
mov
insb
leave
and
ljmp
andl
ss
mov
clc
inc
popf
mov
push
xor
sbb
mov
ret
mov
je
and
pop
stos
imul
xchg
push
or
push
xor
movsl
out
dec
mov
cmpb
std
sbb
add
repnz
dec
cmpsb
outsb
cmp
ret
nop
sub
mov
push
std
mov
scas
push
mov
push
loopne
mov
out
push
mov
out
pop
imul
push
adc
clc
sub
push
int
jno
std
rcrb
xchg
rclb
adc
out
stos
inc
mov
inc
fwait
jns
das
jb
call
adc
cmp
adc
inc
daa
in
sub
mov
fadds
jecxz
arpl
cmp
loopne
iret
fwait
addr16
jmp
jae
mov
call
mov
movsb
add
or
xor
cmp
cwtl
outsb
mov
rcl
dec
fisubrl
test
xchg
dec
adcl
sbbl
sarl
pusha
fwait
mov
sub
sub
cmp
subl
xor
push
mov
mov
testl
push
ja
stos
dec
jns
insl
cmp
sub
jnp
hlt
sarl
pop
bound
pop
test
fldenv
mov
mov
int3
lret
repz
cmpsw
xchg
mov
rcl
xchg
fistl
sbb
sbb
hlt
cmp
andl
mov
jno
adc
xor
fwait
icebp
push
in
push
mov
sub
sbb
aam
movsb
and
mov
sub
in
mov
sub
sti
jmp
shlb
cmp
je
sahf
xor
daa
fisubrl
clc
fidivrl
loope
dec
fsub
xlat
dec
xchg
or
divl
lea
jbe
pop
sbb
add
add
out
xor
inc
pop
int3
hlt
push
aas
lret
dec
cmp
jmp
adc
cmp
fwait
scas
dec
push
ljmp
sbb
dec
out
add
std
xchg
inc
jb
shlb
mov
and
fsts
dec
lret
loop
xchg
mov
lcall
xchg
xchg
test
mov
inc
sarl
xor
cmp
xlat
inc
in
sub
loop
add
jbe
jne
stc
lds
push
xor
cmp
cltd
add
xorl
fldl
lds
movb
inc
lea
mov
hlt
fwait
daa
mov
rorl
cltd
mov
cmp
adc
inc
mov
jnp
inc
jo
hlt
js
add
hlt
ja
movsb
inc
andl
je
push
fstp
inc
into
stos
loope
cltd
mov
push
lds
adc
mov
cmp
repz
push
mov
and
test
cmpsb
mov
mov
push
and
add
mov
lods
ljmp
call
xor
pop
ds
aaa
mov
jnp
mov
gs
fidivrs
mov
dec
pop
push
out
mov
mov
inc
cmpsl
fwait
ss
mov
sbbl
negl
jmp
xorl
cmp
mov
add
out
in
dec
and
jnp
mov
ficompl
mov
jns
imul
ja
sub
inc
stos
test
div
and
cmc
inc
mov
int3
jmp
push
jmp
push
mov
pop
call
imul
push
xor
idivl
divl
repz
cmpsb
dec
adc
lock
aam
rcrb
or
mov
mov
inc
xor
sbb
cmp
aam
inc
xchg
in
daa
xchg
inc
push
daa
and
addr16
icebp
xor
outsl
inc
adc
push
xchg
pop
mov
inc
repnz
lahf
popf
ficomps
out
lret
jns
data16
lods
and
mov
and
sub
mov
ret
lret
jmp
mov
lods
adc
in
inc
cs
mov
cmp
xchg
xor
push
add
fisubrl
push
nop
das
iret
mov
lret
mov
les
lret
push
xor
push
sahf
adc
pop
jbe
sub
scas
aam
xchg
pop
push
out
xchg
jle
mov
inc
fstpl
mov
aam
jbe
xchg
pop
push
xchg
mov
mov
dec
add
gs
cld
jle
aaa
dec
nop
add
lods
sub
push
test
or
dec
popa
jns
push
in
adc
inc
int
popl
xor
jmp
mov
pop
xchg
xchg
js
push
inc
test
fs
test
cs
pusha
xchg
pop
sbb
and
add
rcll
push
or
jle
test
inc
and
pushf
cltd
adcb
cs
enter
or
sti
adc
mov
sbb
lea
xchg
lret
popa
push
adc
testl
add
and
or
sbb
and
std
dec
sub
in
sbb
lods
hlt
repnz
stos
idiv
xchg
mov
movq
pop
stos
std
outsb
out
mov
pusha
movsl
push
jns
shll
sbb
pop
aad
mov
mov
xchg
cmpsb
and
adc
ffreep
push
in
sbb
test
push
and
stos
jne
sub
add
lock
frstor
loopne
movsb
adc
xchg
scas
mov
pop
pop
out
fisubrs
xchg
jecxz
stos
mov
aam
jmp
insl
inc
scas
clc
daa
iret
mov
movsb
sarb
or
push
in
aam
sarb
mov
shlb
xlat
sub
xor
and
jae
push
sub
fimull
and
add
mov
mov
jmp
scas
pop
xchg
pop
mov
cli
mov
jbe
xchg
push
add
nop
mov
fistpll
mov
mov
sub
es
mov
push
pop
les
mov
or
pop
inc
cmp
out
test
mov
cmp
xchg
cmpsl
cmp
mov
loopne
xor
popf
push
jno
data16
dec
push
mov
dec
push
leave
mov
roll
adc
mov
cltd
and
cmp
repz
and
xor
pop
mov
pop
data16
xor
sbb
stc
sahf
adc
dec
cmp
jb
push
fs
lret
sub
push
xor
push
popf
in
dec
xchg
push
cmp
mov
cmp
or
jg
jns
or
xor
add
insl
mov
or
sub
sub
lahf
xchg
push
jge
jp
sbbb
sbb
pop
jmp
arpl
cld
or
add
and
mov
xor
jge
jmp
push
mov
nop
fsubl
outsb
adc
jge
add
mov
and
ss
inc
pop
sub
aam
push
mov
jp
in
push
loop
into
xor
lock
and
inc
jo
cmp
jnp
and
cmc
mov
arpl
icebp
mov
jns
dec
fwait
lret
je
lock
sub
inc
xor
imul
inc
pop
lods
or
push
adc
test
cmp
dec
stos
sbb
scas
inc
insb
test
addr16
scas
lcall
mov
dec
incb
test
pop
addb
dec
push
dec
fcompl
push
xchg
pop
mov
rolb
data16
jg
jnp
stc
mov
or
sbb
xchg
xchg
loope
cltd
inc
pop
and
xor
iret
mov
dec
movsl
fs
iret
in
xlat
addr16
xlat
movsb
dec
push
popf
aas
es
add
inc
das
mov
cmc
loope
jne
fucomip
vorps
ja
call
dec
sub
mov
mov
xor
and
or
mov
jb
hlt
jge
push
adc
fildll
inc
shll
fnsave
mov
and
js
jns
pop
jp
popf
push
cmpl
add
cmc
xchg
cmp
outsb
xchg
loopne
mov
add
add
jg
les
mov
or
and
pop
cli
cli
xchg
loop
clc
ss
cmp
sub
push
rorl
outsb
or
aam
xchg
push
sbb
shl
xchg
xor
push
arpl
daa
cmp
pop
mulb
or
sub
dec
add
cmpl
repz
fnsave
aas
stc
cmp
out
xor
addl
popa
fcomps
and
lods
rcrb
or
or
sub
inc
leave
mov
push
or
loopne
mov
xor
dec
push
ss
std
add
sarb
nop
leave
mov
xchg
push
leave
hlt
sub
mov
xor
shll
mov
lea
shll
or
addr16
sbb
cltd
popw
sbb
pusha
int3
xchg
popf
lea
rorb
dec
cmp
and
mov
icebp
lcall
lods
out
sbb
mov
push
mov
add
sub
add
fstl
test
xor
shlb
add
xor
mov
pushf
mov
push
nop
jnp
pop
pop
and
mov
pop
fs
jb
and
mov
sbb
mov
ja
pop
sbb
scas
ja
popa
imul
js
lds
das
push
mov
xorl
bnd
out
xchg
andl
rol
loop
repnz
xor
add
adc
bound
push
inc
bound
mov
mov
repnz
loop
repnz
xor
add
adc
bound
push
inc
bound
mov
mov
repnz
loop
repnz
xor
add
adc
bound
push
inc
push
jbe
xchg
mov
ret
ret
xor
add
mov
adc
add
jecxz
repz
and
xor
inc
fdivl
push
sahf
jo
jae,pt
inc
mov
xor
adc
adc
jecxz
repz
and
xor
pusha
xchg
adc
inc
mov
add
add
adc
cli
add
adc
and
xor
pusha
xchg
jo
adcb
lds
fisubs
xchg
test
dec
pushf
pusha
ret
jae
push
lock
mov
inc
arpl
add
sti
sub
movsl
fistpl
and
add
mov
push
mov
push
call
pop
outsl
mov
shlb
mov
pop
in
mov
xor
xchg
mull
aaa
sahf
or
mov
and
iret
in
add
cmp
jecxz
or
mov
jl
xchg
nop
call
data16
xor
mov
jle
dec
fbstp
cmp
into
xor
arpl
test
mov
sar
add
or
push
test
mov
jo
fwait
stc
pushf
cmp
ds
dec
shlw
add
adc
sub
ljmp
inc
mov
jo
subb
mov
sub
sbb
adc
cmpsb
popa
cmpsl
jno
pop
aad
into
add
pop
mov
repz
shlb
push
xchg
jno
jle
mov
lods
push
mov
xorl
pop
and
push
loop
adc
and
ja
xchg
inc
scas
inc
mov
push
andl
arpl
push
mov
shlb
add
adc
jecxz
repz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
jecxz
fdivrl
jl
mov
roll
nop
xor
fsubs
jge
and
dec
jbe
notb
test
and
icebp
sub
cmp
pushf
jnp
and
inc
push
xor
scas
xor
sub
sbb
sbb
roll
mov
push
sub
mov
add
push
int
xor
jecxz
jbe
xchg
mov
scas
add
sub
dec
dec
cli
shlb
test
xchg
mov
fisttpl
aam
xchg
mov
jle
or
int
in
fcomip
pusha
jle
jl
sub
nop
sti
mov
fisttps
cmp
xor
sub
mov
mov
mov
pop
cmc
xor
inc
xor
movsb
and
data16
mov
xor
xchg
insb
cs
shll
fimull
cmpsl
lcall
cmp
pop
push
clc
movsb
jecxz
push
xor
shl
cmp
or
and
jl
call
pop
cmp
pop
jae
es
jecxz
cmpsb
leave
stos
imul
cltd
jae
or
mov
mov
xchg
les
cld
and
adc
mov
stos
fimull
jnp
inc
xor
js
test
ja
jle
push
das
fmulp
ret
dec
mov
daa
jne
jl
mov
mov
aad
lea
sub
cmp
jo
addr16
jno
out
hlt
lea
pop
adc
aam
das
and
mov
ja
inc
out
test
mov
mov
clc
or
xor
push
mov
into
xor
sbb
adc
mov
mov
adc
arpl
mov
cli
cmp
push
inc
arpl
cmp
xor
stos
nop
mov
pop
adc
sar
cmpsl
aad
gs
lock
es
inc
mov
mov
push
test
xchg
daa
out
shlb
addr16
idivl
mov
lea
cmp
push
scas
push
les
orl
ljmp
mov
xchg
das
scas
mov
hlt
or
test
pop
dec
xor
mov
cmp
cs
das
push
mov
xor
out
adc
scas
mov
cmc
pop
sub
jp
les
pop
dec
pop
mov
daa
adcl
stos
push
dec
jg
inc
pop
and
mov
jecxz
pusha
stos
ret
icebp
sub
push
test
lahf
out
mov
movsl
or
pop
lcall
je
les
sub
out
mov
fnstcw
lret
mov
inc
in
inc
mov
jno
fsubl
mov
fwait
adc
mov
or
fwait
lock
push
shlb
xchg
inc
push
in
cs
icebp
sbb
dec
push
add
adc
pop
sub
filds
faddl
inc
popf
sub
push
add
in
sbb
imul
jp
fdivrs
fsubs
stc
xor
jecxz
cmp
or
and
push
cmp
push
and
aam
jns
dec
loope
cli
adc
push
mov
cld
cmpsb
js
jge
dec
cmp
fwait
in
pop
nopl
inc
in
pop
lea
dec
cltd
loop
push
mov
stos
sub
hlt
mov
sti
xchg
enter
mov
insl
pop
sub
in
test
fimuls
subl
test
in
stos
test
or
xor
sbb
into
dec
ret
rcrl
cltd
dec
mov
cwtl
push
jl
inc
rcrb
sbb
cmp
push
aas
faddl
push
and
sub
push
xchg
sbb
dec
mov
ret
lds
jmp
shll
outsl
push
cmpsl
or
or
fwait
js
xchg
fs
xor
jl
sub
pop
cmc
mov
sbb
push
or
in
inc
adc
rclb
adc
insl
or
or
sub
cmpsl
ror
test
das
pop
hlt
jbe
inc
dec
outsb
lahf
mov
dec
stos
cmpsl
mov
mov
in
cmp
sbb
jo
push
aam
mov
push
jg
sbb
add
fcos
rorl
sbb
or
movsb
js
jmp
fstpl
ret
and
addr16
pop
mov
sbb
or
ds
adc
jb
mov
jae
popf
jg
mov
cltd
sbb
lcall
xor
mov
jle
stos
rorb
cmp
xor
dec
mov
notb
cmp
mov
pop
dec
mov
push
cmp
test
inc
jp
sub
dec
mov
mov
mov
xchg
dec
loopne
stc
jno
dec
test
adcl
loop
dec
mov
int3
and
cmovge
cmpb
mov
cmp
int
dec
ret
inc
jo
test
bound
push
adc
loop
in
cltd
stc
and
mov
pop
ja
pusha
add
xchg
or
mov
or
adc
mov
cmpsl
pop
les
imul
jmp
popf
call
pop
dec
hlt
aas
inc
scas
and
and
scas
test
sub
cmp
push
mov
adc
lea
ljmp
mov
cmpsb
mov
inc
cmp
fildll
mov
inc
div
loope
jb
psubq
xor
mov
cld
push
dec
push
inc
lods
cmp
jg
jo
lds
lods
push
lea
loop
mov
push
dec
push
mov
or
dec
xchg
jp
aam
sbb
dec
push
xchg
out
insl
pop
xchg
pop
xchg
push
stos
push
andb
les
adc
iret
xor
sub
cmpsl
or
sbb
adc
mov
insl
push
into
xchg
inc
dec
addr16
cltd
mov
inc
or
pushf
incb
cmp
ds
mov
into
dec
lock
dec
jecxz
sbbl
pushf
addr16
iret
adc
mov
pushf
mov
sbb
movl
fsts
push
mov
popf
push
cld
add
fistps
mov
insl
push
add
movl
sub
aam
inc
test
mov
mov
push
xor
loop
fsubrl
pop
test
push
cmpsb
xor
aas
and
rclb
push
push
mov
pop
fsubrs
or
jne
cmpb
push
js
cmp
pop
jbe
xchg
arpl
imul
loop
xor
addr16
enter
pop
in
lret
sub
mov
test
xor
sbb
inc
pusha
pushf
repz
test
xchg
cld
push
out
cli
xlat
cltd
or
rcr
xchg
cltd
insl
bound
mov
sarb
push
mov
add
outsb
inc
jae
insl
repz
jecxz
or
ljmp
aad
popa
lahf
sbb
and
jp
movsl
jl
mov
cmc
or
jns
mov
mov
pop
mov
mov
sbbb
pop
or
sub
lahf
js
scas
and
xor
pop
push
mov
int3
xchg
nop
in
inc
roll
std
cmp
or
jg
sub
lret
xlat
pop
dec
iret
test
cmpsb
jecxz
pop
add
mov
jp
aam
pusha
or
stos
in
jmp
or
clc
arpl
mov
xchg
ljmp
addb
enter
out
inc
push
and
mov
cmpsb
hlt
pop
push
rcll
cmp
sbbl
sbb
shrb
outsb
repz
popf
in
inc
out
scas
fisttps
xchg
mov
fwait
sahf
call
push
mov
mov
lahf
fldt
jbe
btsl
outsb
cmp
push
push
pop
xchg
mov
pop
roll
mov
lret
add
mov
lea
cmp
pop
ret
sub
leave
jmp
stos
stos
inc
ret
lea
xchg
out
cld
adc
sub
and
aad
inc
inc
lret
test
insb
pop
mov
push
test
daa
nop
lret
insl
cmp
mov
aad
jnp
popa
cmp
xor
fstps
test
add
inc
mov
popa
insb
or
mov
jno
adc
fldenv
inc
push
imul
pop
jle
movsl
mov
sbb
jmp
jge
mov
and
lret
nop
adc
insl
std
pop
or
lds
add
js
xchg
and
sbb
jno
mov
mov
mov
push
or
xchg
jne
xorb
arpl
addr16
xor
data16
insl
xor
add
sub
js
inc
cmp
mov
in
data16
inc
aaa
filds
pop
pusha
loopne
test
cs
test
jg
add
xchg
shlb
test
es
dec
enter
sarb
lock
add
inc
pusha
cltd
movsb
and
push
push
mov
out
push
mov
lods
cmc
aas
jle
aam
pop
add
cmp
fstp
and
xor
lods
cmp
icebp
add
and
xor
cmpl
jp
xor
mov
aas
stc
and
adc
mov
loop
imul
lds
loope
sbb
or
jns
insb
mov
inc
push
mov
mov
ljmp
mov
lea
mov
xlat
inc
aad
add
cltd
xchg
loopne
pop
fwait
push
sbb
jl
xor
movsl
gs
or
roll
mov
lock
jp
pop
xchg
iret
test
xchg
aam
mov
in
dec
arpl
and
cltd
shll
imulb
repz
outsl
filds
lods
ja
fsubr
mov
pop
cmp
mov
dec
inc
mov
loopne
arpl
mov
xchg
cmp
lods
sub
adc
jae
mov
or
sbb
xor
pop
fnstcw
ret
cld
dec
xchg
pop
push
das
pop
push
hlt
xor
push
arpl
lea
pop
push
xor
cmc
outsl
ljmp
clc
loopne
add
inc
fimuls
cmp
popa
push
push
lret
and
mov
inc
adc
filds
sub
lret
sub
fld
xor
cmc
cltd
fxch
mov
xor
push
sbb
jecxz
cmp
pop
fdivl
add
out
sub
add
mov
push
sbb
pop
and
fisttpll
cmp
xchg
lcall
push
mov
mov
pop
dec
inc
xchg
jp
popa
test
dec
popf
int
test
xor
ja
adc
jno
sbb
jb
xchg
or
sar
int3
aaa
aas
lret
das
mov
add
fwait
repnz
loope
aas
pusha
cwtl
lds
push
fsubl
cmp
movl
jnp
ds
ss
cmp
lea
or
out
xchg
dec
jno
mov
dec
or
mov
shrl
movsb
jbe
dec
gs
mov
jbe
dec
lods
adc
enter
lods
shll
cmp
jg
imul
mov
adc
inc
das
cs
or
xchg
xchg
inc
rol
xchg
push
jmp
icebp
push
mov
push
jle
fwait
icebp
mov
xorb
mull
iret
rclb
into
sbb
cmc
imul
daa
call
fistps
add
mov
clc
and
jnp
xor
xchg
es
cs
stos
push
xor
pop
int
das
jg
cmc
ja
fabs
mov
int
mov
test
xchg
popf
xor
stos
push
gs
ljmp
scas
pop
dec
test
jle
mov
or
daa
lret
iret
sarl
adc
rolb
inc
sahf
fisubs
mov
jmp
sbb
jmp
hlt
mov
fdivrs
mov
cmp
xor
not
cmp
or
add
daa
mov
je
xor
adc
in
inc
xchg
pop
pushf
sbb
inc
push
sbb
mov
iret
jle
mull
xchg
inc
inc
mov
push
clc
cmpsl
sbb
dec
mov
sub
jmp
in
add
int
idivl
xchg
data16
xorl
arpl
inc
pop
repnz
dec
jae
aad
orb
push
mov
xchg
mov
jge
or
dec
adc
lret
stos
popa
dec
pop
push
pop
mov
out
push
ss
bound
mov
repz
inc
push
xor
jbe
pop
xor
cmp
xor
mov
pop
js
adc
rorb
sub
aaa
or
fs
mov
cltd
push
dec
mov
inc
push
mov
ret
mov
das
fidivl
test
sub
loopne
add
adc
mov
icebp
mov
mov
xchg
or
mov
pop
nop
inc
fisttpll
lret
lret
shlb
and
xor
and
pop
pop
bound
insl
push
cmp
test
dec
cmc
or
sbb
or
and
clc
mov
push
and
aaa
test
cmp
scas
movsb
mov
push
bound
lea
sbb
xchg
pop
loop
add
push
enter
cwtl
mull
add
xor
stc
mov
jl
or
sahf
cmpsb
pop
mov
imul
pop
test
cmpsb
iret
test
cmp
xor
int
and
push
and
insl
inc
or
mov
idivb
xchg
loopne
lds
mov
dec
insl
mov
dec
std
mov
pop
xor
gs
sbb
mov
movsb
sub
mov
cmpl
xor
repz
adcb
je
icebp
add
mov
das
in
adc
test
pop
jb
or
add
jnp
lods
lock
jns
adc
jno
inc
scas
daa
lret
pop
ret
int3
jge
stos
inc
add
popf
lret
and
add
and
lea
mov
imul
mov
shll
push
sbb
jne
repnz
sahf
out
dec
je
xchg
test
dec
in
bound
adc
and
lret
jbe
insl
test
in
pop
inc
xor
loopne
mov
sub
lds
xchg
shr
push
pop
xchg
xchg
mov
enter
jecxz
push
jmp
into
jl
fmul
in
nop
out
add
and
lock
scas
xchg
adc
mov
sbb
js
outsl
hlt
push
add
push
fldenv
jp
rcrl
test
cmp
mov
add
data16
add
jns
cmpsl
and
pop
sub
aaa
mov
in
dec
and
pop
inc
or
jp
adc
xchg
fisttpll
into
mov
xchg
out
or
aad
jecxz
pushw
popa
jns
adc
mov
iret
jg
adc
dec
jge
cs
pop
add
cmp
mov
out
test
xchg
adc
shrb
cmp
push
push
dec
nop
in
fstps
cwtl
mov
xchg
and
insl
inc
xor
dec
dec
cmp
jae
aaa
lock
jo
sbb
das
std
outsl
stc
adc
adc
in
adc
arpl
pop
mov
in
in
ficoml
dec
pop
rol
idivl
mov
adc
imul
pushf
icebp
sub
stos
andb
add
sbb
cwtl
xlat
sub
popa
push
loop
xor
push
icebp
xor
outsb
xchg
lea
aad
ficoms
mov
lcall
lds
movups
aad
insl
negb
dec
sub
jle
xchg
cmc
adc
fnsave
push
filds
aam
negb
sub
xlat
nop
adc
push
icebp
loopne
rorl
pop
lea
pop
stc
jnp
fdiv
push
dec
sbb
in
cmpb
cmpsl
gs
and
inc
dec
aam
out
std
lea
adc
dec
or
stos
mov
movsl
sbb
adc
lock
rorl
lret
dec
push
out
outsl
and
jae
pop
dec
mov
out
jp
xchg
loope
inc
push
int3
rolb
sahf
cmp
mov
pop
lret
loopne
inc
dec
test
mov
negl
inc
inc
adc
push
fnsave
rcrb
jae
ret
clc
pop
jb
push
int
jl
push
shll
jb
push
addb
fsubl
add
mov
cmp
adcl
adc
adc
enter
filds
and
sbb
dec
xchg
xor
push
pop
dec
lret
in
mov
push
push
jbe
ret
pop
mov
call
das
sub
jge
mov
inc
push
out
adc
nop
ret
mov
mov
into
inc
dec
dec
xor
sahf
dec
in
push
xlat
cmp
mov
xchg
insb
call
fucom
xor
mov
mov
xchg
pop
sbb
lahf
orl
pop
movl
sbb
jo
jg
sarl
stos
jge
adc
mov
cmp
lods
xorb
imul
push
mov
add
jecxz
fwait
jne
sub
loope
jno
je
das
out
bound
mov
fwait
push
xor
cmpsl
mov
pop
in
into
mov
jns
adc
cmp
shlb
sub
ljmp
stc
cmpsb
ret
sti
xchg
push
hlt
sub
cld
cmp
pop
dec
mov
movsl
add
cmpsb
mov
xchg
inc
in
jns
outsb
stos
xchg
push
xor
sub
addb
xor
int3
in
pop
mov
cmc
popa
jecxz
out
stos
enter
les
in
and
andb
push
sahf
sub
aad
imul
imul
lds
xchg
ljmp
std
xor
adc
incb
ds
xor
mov
cmovp
fbld
pop
jmp
pop
popl
push
ficomps
push
push
outsl
push
adc
faddl
repz
mov
rcll
mov
mov
fs
push
mov
jno
sbb
jne
xchg
push
sbb
xor
faddl
lea
test
mov
xor
inc
lods
mov
es
dec
jecxz
pop
jb
ja
cmp
and
out
sbb
pop
popf
jne
mov
push
outsb
cmc
jne
xchg
mov
xchg
mov
popa
in
fistps
or
sub
push
addb
mov
cmp
unpckhps
addr16
in
push
aad
mov
mov
sbb
arpl
sub
add
cmp
fcompl
dec
vmaxps
cli
pushf
push
push
adc
xchg
repz
pop
pusha
push
es
je
mov
pushl
popf
and
in
xchg
rcl
or
pusha
sbb
pop
mov
xchg
call
and
or
jp
sbb
jmp
pop
int3
or
cli
shlb
enter
ljmp
insb
and
pushf
mov
lods
movsb
decb
lods
cmpl
test
pop
add
aam
fimuls
mov
mov
ljmp
shlb
into
xor
bound
xor
mov
scas
pop
nop
lcall
lcall
xor
xchg
adc
fcoml
lea
mov
cmp
sbb
add
jns
and
mov
xor
jnp
add
fcoml
aam
gs
mov
mov
and
cli
cmp
xor
adc
lock
pop
out
mov
push
repz
xor
sar
push
push
cmpsl
cs
not
push
mov
xor
cltd
mov
dec
sub
xor
lods
mov
out
test
fdivrl
mov
or
xor
adc
inc
les
and
lods
in
mov
xor
mov
lahf
lcall
aam
mov
xchg
dec
dec
js
fld
pop
iret
fwait
xor
scas
add
shl
cltd
iret
rcrb
adc
in
loop
mov
out
ret
jne
jle
jb
add
aad
aad
popf
in
sbb
lcall
mov
pushf
ljmp
mov
pop
push
in
nop
es
hlt
and
cltd
mov
mov
call
fsubrs
out
cmp
jecxz,pt
test
cmp
xchg
mov
inc
sub
outsb
jg
push
add
loope
das
daa
mov
ffree
mov
jmp
lods
mov
xchg
add
xchg
xchg
addl
mov
in
fildll
xchg
mov
daa
sar
jp
ds
lods
stos
sbb
scas
sbb
pop
sbb
rorb
xor
cmpsb
jnp
cwtl
xchg
sti
jg
outsb
xor
inc
int
out
jnp
mov
aam
lea
into
test
sbb
sbbb
cmpsl
sub
lock
xor
js
test
sbb
shlb
inc
sbb
out
je
in
adc
push
imul
sar
mov
mov
imul
inc
dec
inc
xchg
or
dec
xchg
adc
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
jecxz
repz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
jecxz
repz
and
xor
pusha
xchg
jo
xorb
mov
xor
add
adc
jecxz
icebp
adc
and
xor
pusha
adc
jmp
dec
mov
cpuid
jmp
mov
in
mov
mov
add
pop
bound
jb
inc
rsqrtps
mov
iret
xchg
scas
repnz
and
jg
inc
adc
add
inc
rsqrtps
mov
push
xchg
test
ret
lods
and
pop
jno
cmp
or
or
cmp
jmp
mov
icebp
pushf
loopne
mov
or
pop
loopne
call
mov
mull
iret
lock
push
cmp
mov
jbe
leave
jo
pusha
aam
sbb
mov
setge
addr16
inc
test
dec
xchg
sbb
mov
jg
les
outsb
pop
outsl
std
dec
js
ret
ret
daa
fistl
push
lret
adc
loop
loop
cmp
mov
lahf
mov
pop
pushf
cmp
mov
lock
arpl
movb
xor
mov
xor
adc
jo
mov
adc
nop
xor
pop
sahf
jb
pop
das
cli
cltd
push
xor
inc
jecxz
jne
arpl
scas
repnz
and
xlat
add
arpl
jb
inc
pop
push
sub
out
divl
cmpsl
cli
xchg
fsubs
ss
jle
pop
push
push
jbe
test
divl
ret
lods
inc
push
xor
inc
sbb
es
xor
insb
lret
pushf
pop
jmp
xchg
mov
jecxz
mov
and
jg
dec
adc
das
jb
inc
rsqrtps
mov
iret
xchg
scas
repnz
and
jg
dec
adc
das
jb
inc
rsqrtps
mov
mov
xor
enter
es
dec
and
nop
fiadds
jmp
ret
test
adc
roll
pop
movsb
xor
xor
lcall
pushl
add
inc
rorb
dec
sbb
ljmp
xor
sti
jae
sub
stos
or
ret
jg
insb
mov
adc
mov
pop
mov
les
and
out
lahf
popl
in
adc
xchg
sbb
stc
adcl
xor
push
sbb
shlb
pop
xchg
shrb
int
insl
push
jnp
or
sub
xchg
push
or
imull
push
stc
dec
jno
adc
test
int3
cld
jb
push
adc
cwtl
sbb
adc
xor
pop
xchg
sti
adc
stos
xchg
daa
nop
mov
lahf
loop
in
jns
jl
cs
daa
xchg
cwtl
inc
repnz
cld
cmp
or
mul
mov
test
shll
sub
lcall
test
inc
lods
xor
pop
add
std
add
loope
insl
pop
mov
jb
sub
cvttps2pi
js
inc
push
xchg
xor
cs
adc
pop
inc
mov
int3
dec
cltd
out
outsb
lret
iret
push
aas
or
insl
lahf
stc
dec
inc
mov
add
inc
mov
fmull
lods
rolb
fstpl
adc
enter
or
loopne
push
aad
in
pop
sbbl
stos
or
mov
loopne
imul
jnp
lcall
mov
popa
stos
adc
outsb
insl
xor
lock
mov
pusha
push
sbb
mov
or
pop
nop
lret
in
xchg
adc
repz
cmp
fucompp
jp
add
mov
sub
leave
mov
aam
mov
pop
comiss
test
push
add
add
sub
pop
inc
or
mov
outsl
mov
enter
mov
jg
popf
fsubr
fiaddl
pop
icebp
mov
cs
push
mov
mov
xchg
fadd
in
daa
out
cld
push
jo
cmp
mov
cltd
sbb
or
dec
sbb
lods
mov
or
cmc
jbe
and
sbb
mov
nop
dec
push
jmp
sbb
xchg
dec
bound
lea
insb
jnp
test
call
xchg
jbe
pop
idivb
sbbb
mov
cwtl
pusha
int
popf
push
inc
jbe
pop
jb
inc
int
pushf
icebp
jnp
push
orl
xchg
in
outsb
sbb
ljmp
cli
mov
movsb
pavgw
cld
mov
negl
jae
mov
mov
imul
and
mov
mov
xchg
scas
mov
in
lock
inc
add
adc
mov
pop
push
cmp
adc
out
sub
fmuls
dec
adc
lret
or
and
sub
scas
inc
xchg
mov
ffree
pop
jle
sbb
mov
and
add
lods
or
adc
lods
data16
mov
push
cmpsl
cld
arpl
hlt
sub
shrb
adc
rorb
out
testb
insb
or
lret
lret
jne
pop
cmp
push
xchg
push
jns
lcall
mov
pop
sbb
out
movsb
cmp
aaa
in
bound
inc
cmpb
int3
xor
arpl
loope
roll
in
xor
adc
sbb
pop
dec
dec
or
imul
inc
call
push
and
push
int3
ret
popa
dec
push
mov
js
outsb
pop
in
hlt
pop
lods
ds
les
xchg
adc
mov
jnp
adc
dec
lcall
int3
mov
jmp
cld
aam
xchg
shl
inc
xchg
in
cwtl
int
add
mov
dec
sbb
cmp
loop
sbb
sub
loopne
xlat
push
inc
mov
outsb
push
into
mov
daa
dec
adc
aam
int3
jge
add
push
rcrb
and
sub
pop
scas
sub
adc
add
loop
mov
dec
daa
jbe
xchg
mov
or
inc
or
mov
jno
push
jno
cmpb
rorl
jo
pusha
out
jno
push
mov
cli
rcrl
push
sbb
sbb
xchg
mov
jbe
enter
popa
int3
insb
scas
xchg
push
mov
clc
arpl
subb
pop
popfw
dec
scas
cmp
mov
hlt
adc
and
push
repnz
dec
mov
jb
push
pop
mov
sti
cwtl
cltd
aad
les
mov
or
in
adc
cmc
je
adc
addr16
gs
lods
fistps
je
ret
aam
xor
js
daa
cli
aas
decl
icebp
fistl
and
shr
mov
loop
inc
xchg
test
sti
sti
or
das
push
ss
test
mov
ret
mov
sbb
movl
stos
or
lcall
or
aam
clc
push
fsubrl
test
test
dec
push
out
sbb
dec
push
jg
dec
inc
or
dec
movsl
movsl
push
xor
fsts
dec
insb
into
push
lods
imul
xchg
shl
add
mov
ja
popa
ja
lret
inc
enter
outsb
int
add
push
sbb
sti
lahf
adc
repnz
xchg
ja
push
sar
cmp
xchg
push
xchg
sbb
hlt
and
jo
imul
out
adc
and
pop
loopne
adc
add
data16
mov
sub
test
rclb
adc
mov
imul
push
dec
mov
adc
sub
sbb
hlt
shrb
push
sbbb
aad
sub
or
pusha
jnp
inc
pop
setbe
jbe
push
jo
mov
push
xor
jae
push
push
shlb
and
jge
pusha
data16
fistps
push
and
push
jne
xor
pusha
repz
adc
inc
out
jno
nop
out
cli
stc
fwait
adc
fsub
loopne
pop
popa
ss
mov
shlb
sub
nop
cmp
cmp
ljmp
cld
cmp
adc
inc
push
mov
das
dec
imul
inc
mov
cmpsl
pop
pushf
sbb
inc
push
int
mov
mov
dec
and
dec
out
push
mov
adc
into
lret
test
jge
add
out
icebp
sbb
xor
in
hlt
aaa
lret
int
repz
and
mov
mov
inc
movb
cmc
pop
stos
jne
aam
js
out
enter
xchg
fimuls
insl
bnd
jb
stos
jae
fisubl
stc
shll
mov
jmp
pop
mov
push
sub
mov
jl
int3
jecxz
adc
xor
adc
cmp
imul
ror
inc
ja
mov
sbb
stos
cmpsl
adc
jecxz
ret
insl
push
mov
xchg
push
dec
dec
lret
outsl
mov
test
in
mov
push
and
xchg
mov
push
adc
sahf
adc
mov
sbb
fnstcw
out
bound
mov
in
and
movb
xchg
mov
je
out
or
pop
xor
and
loop
loope
push
xchg
mov
movsb
or
fisubl
imul
mov
jb
or
sarb
rep
ror
sbb
sub
mov
push
mov
sbb
pop
out
push
in
sbb
aam
or
adc
mov
lret
enter
stos
mov
or
lcall
sbb
inc
xchg
faddp
adc
or
mov
stos
add
scas
mov
jae
pushl
sti
xchg
cmp
push
cli
fwait
xchg
cmp
jb
cmp
adc
push
cmp
icebp
popf
sti
repz
mov
daa
xchg
mov
xchg
push
pop
adc
out
mov
scas
xchg
insl
sub
in
add
cmp
lds
jl
sub
sub
pavgb
pop
in
stc
lret
insl
sub
cs
out
mov
dec
mov
xor
loope
outsl
out
mov
movsl
pop
data16
xchg
idiv
or
int3
es
ret
popl
out
sbb
fnstsw
ljmp
push
movsl
jge
pop
je
inc
daa
aad
pusha
inc
cmp
push
stos
jge
mov
cmpb
push
aaa
movsl
out
test
and
and
and
aas
loop
and
jb,pn
test
clc
cmp
pop
push
mov
xchg
andl
mov
clc
int3
inc
jge
or
jno
aas
dec
movsb
aas
jle
mov
push
add
add
repnz
pop
hlt
aas
cmp
xorb
fsqrt
jecxz
or
loop
fimuls
jo
mov
rcrl
pop
sahf
sti
dec
dec
sbb
stc
mov
xchg
dec
jae
xor
jl
hlt
sbb
xor
sbb
sahf
fistpll
ljmp
push
insb
out
add
je
orl
mov
addr16
sub
pop
hlt
cwtl
cmpxchg
ret
and
imul
stos
mov
fwait
jno
cmp
jge
mov
mov
add
lcall
lret
jne
cmp
fistl
je
mov
ss
dec
add
int
mov
mov
mov
xlat
adc
ret
mov
sar
mov
add
fisubrl
push
xchg
adc
mov
call
mov
int3
aas
jle
loope
in
cmc
pop
sbb
lcall
out
sub
sub
mov
jae
mov
adc
aad
sub
sbb
lds
jmp
lods
push
aas
or
adc
repz
push
xchg
push
adc
dec
mov
in
dec
xor
cmp
mov
sbb
stc
loope
and
int3
pop
mov
sub
std
jnp
xor
mov
inc
into
shlb
or
mov
jmp
nop
or
jl
shrb
nop
jle
jl
mov
js
int
push
dec
push
mov
bound
or
fs
insb
dec
lds
add
pop
mov
arpl
cmovs
jb
inc
and
push
ret
gs
loopne
in
mov
ss
mov
sti
cmc
adc
inc
push
stc
jle
aad
and
cmp
daa
inc
add
sub
mov
aam
push
aaa
pop
adc
dec
out
blcs
fxch
lods
insl
clc
pop
enter
aam
mov
pusha
arpl
mov
iret
jns
pusha
bound
fs
out
ds
ljmp
or
push
cmp
jmp
dec
fstpt
push
mov
jbe
pop
push
mov
mov
dec
cltd
xchg
cmp
ds
bound
xor
out
ret
jns
push
xor
mov
pop
pop
repnz
and
and
mov
addr16
xchg
or
sub
mov
dec
sbb
mov
lret
and
into
fs
xchg
inc
or
mov
loope
inc
xchg
mov
cmc
cmp
out
push
icebp
loopne
fistpl
mov
mov
xchg
mov
and
mov
xor
mov
sbb
mov
cmc
jecxz
jmp
mov
sbb
lret
mov
cmc
sub
testl
or
fsubrs
sahf
xchg
lret
jge
mov
xchg
dec
lcall
scas
add
mov
push
lods
push
mov
inc
sbb
cwtl
mov
inc
or
xchg
out
mov
fs
jns
sub
fs
std
mov
rorl
lods
fldpi
int
adc
jnp
xor
sub
pop
pop
iret
mov
dec
movsb
test
mov
loop
movsl
insl
clc
scas
sbb
pop
addr16
inc
je
fidivl
push
sbb
mov
pushaw
or
push
bound
lret
sti
dec
pop
xchg
push
cltd
imul
adc
imul
jl
sbb
fnstsw
dec
jbe
shl
icebp
lock
push
mov
mov
in
push
dec
mov
dec
mov
test
pop
dec
aaa
mov
mov
insb
pop
jae
out
and
and
mov
jb
imul
pop
mov
jmp
lret
mov
hlt
test
and
outsb
or
jmp
add
push
adc
mov
xor
mov
lods
imul
repnz
cmp
jle
pop
xchg
repz
aaa
and
push
cld
xchg
or
jmp
aad
adc
out
out
rclb
xor
pop
hlt
sub
cmpsl
data16
xchg
push
pop
xor
jnp
sub
jb
fidivs
pusha
jp
in
sub
js
std
pop
mov
jmp
popl
jne
cmpl
adc
lods
push
ja
fwait
cltd
mov
adc
xor
xchg
setg
cmp
call
or
or
inc
adc
pusha
jns
mov
sub
mov
inc
fsubrl
mov
icebp
in
cmp
inc
cmp
loop
lock
inc
das
loope
ss
ljmp
ret
jo
cwtl
xchg
clc
jo
xchg
push
mov
lcall
popl
mov
adc
push
lea
idivb
xchg
push
int3
int
fld
shlb
and
cld
adc
jne
adc
dec
movsb
lds
nop
push
mov
outsb
movsb
fcompl
out
pop
cmpsl
push
out
jp
push
fnstenv
or
mov
jge
sub
repz
icebp
iret
imul
jg
outsb
jge
pop
lea
dec
xor
push
pop
jne
filds
sti
stos
outsb
cmp
sub
sbb
jne
adc
cmpsl
leave
jg
shrb
movsb
cmpsl
rolb
repnz
pop
pop
pop
sti
sub
add
jae
mov
sub
sti
and
lock
mov
adc
repz
xor
jecxz
es
mov
adc
mov
and
stos
aad
nop
movsl
mov
ror
daa
push
inc
push
pop
cmp
jno
dec
cmp
jns
add
sbb
outsb
xlat
fists
pop
repnz
and
jp
fstps
and
cli
iret
cli
mov
push
cli
mov
out
lds
or
push
push
lret
fsub
jno
push
add
outsl
fs
outsl
adc
cmp
insl
outsl
mov
fisubrl
and
dec
mov
add
xor
mov
out
cmc
xchg
cmc
pop
dec
mov
cmp
lret
inc
adc
xchg
jle
push
loopne
and
fidivrs
in
aam
outsb
cmpsl
push
add
dec
jns
int3
push
shrl
sub
sbb
mov
dec
mov
shlb
lods
out
cld
pusha
lds
adc
and
in
cmpsl
push
aaa
sub
mov
aam
dec
push
and
cwtl
lret
dec
int3
ret
lret
xchg
lcall
das
fdiv
push
ss
dec
adc
cmpsb
bound
nop
adc
fidivl
mov
arpl
push
dec
leave
ficoml
or
pop
cmp
jge
inc
xchg
push
inc
jne
repz
in
loope
ret
adc
xchg
pop
mov
sbb
pop
sbb
ja
xchg
sub
icebp
popf
sti
or
fs
lock
mov
loop
ds
gs
and
push
cmp
mov
gs
sbb
adcl
andb
adc
inc
add
addr16
repnz
jno
out
cmp
mov
add
ficoms
movsb
xchg
and
cmc
fadd
popa
test
cld
repz
mov
inc
mov
inc
push
xor
fbstp
push
cmc
in
xchg
cltd
dec
loop
mov
aas
fs
shlb
pop
daa
outsl
mov
add
pop
nop
shrb
mov
stos
daa
pop
sbb
and
subb
jecxz
mov
sub
pop
scas
push
out
fwait
mov
dec
arpl
add
sbb
aad
jb
fidivrs
into
cld
cmp
adc
pusha
mov
lods
xor
jp
outsb
es
jge
inc
cmp
movsb
push
sahf
movsl
push
add
push
pusha
pushf
ljmp
xchg
jl
cmp
lods
push
jmp
lret
mov
stos
popl
test
insl
nop
pop
mov
xor
xchg
sbb
sbb
or
mov
push
sub
or
and
inc
mov
in
sub
ret
ds
outsl
dec
add
or
aaa
and
mov
and
dec
pop
adc
mov
lods
cmp
cmp
inc
xchg
xchg
dec
rcrb
adc
or
inc
pop
xor
or
inc
push
mov
test
mov
int
rclb
adc
lret
pop
shll
mov
out
cmpsb
test
pop
push
fwait
dec
daa
or
push
pop
inc
data16
iret
cwtl
pop
mov
ftst
mov
test
sbb
jae
shlb
pushf
push
js
inc
hlt
in
and
and
xchg
fdivrs
xchg
fs
mov
mov
mov
push
cwtl
test
and
xchg
sub
mov
pop
lods
pop
out
mov
add
sbb
and
mov
xchg
sti
mov
mov
mov
and
push
mov
mov
lea
sbb
iret
add
dec
lahf
out
ss
jo
mov
mov
popa
sbb
dec
add
daa
popf
mov
lahf
inc
insl
fcomps
data16
lret
inc
outsl
lret
xchg
pusha
inc
idivb
fstp
cld
ds
sub
push
test
in
stc
in
insl
add
ja
push
mov
leave
imul
shlb
jle
leave
addr16
mov
push
xchg
adc
and
adcb
fwait
xchg
lods
roll
mov
aas
test
in
jp
xor
mov
popa
push
push
subb
push
test
mov
adc
xchg
dec
inc
iret
push
dec
fldcw
scas
das
ret
sbb
in
addl
std
adc
je
ss
in
mov
and
test
mov
stc
aad
les
xchg
je
push
mov
dec
xchg
sbb
dec
mov
xor
or
enter
std
aaa
adc
jg
mov
lds
jl
cmp
inc
cwtl
int
je
xor
inc
popa
mov
pop
xchg
shll
stc
ds
out
out
xor
adc
push
sbbb
fwait
cmpsw
subb
fwait
push
les
adc
addl
enter
pop
pop
lods
ret
ror
jg
mov
les
popf
mov
fsubr
push
sub
inc
cmp
popa
leave
adc
ret
cmp
jns
sbb
mov
mov
int3
dec
jmp
enter
push
push
inc
fs
mov
adc
loope
cmpsb
push
ja
mov
es
lret
xchg
xchg
mov
jle
fnsetpm(287
scas
adc
cmpsl
shll
pop
das
ret
mov
in
lahf
add
fimull
jp
loopne
dec
into
push
inc
js
jmp
or
rclb
push
sub
test
add
fnstcw
xorl
in
out
cmpsb
cmp
jbe
lahf
sbb
iret
sbb
icebp
pusha
mov
jle
stos
test
xchg
push
jp
popf
out
repnz
jbe
pop
loope
outsb
pop
fstpl
fldl
lcall
jnp
cmp
adc
fdivl
dec
push
fdivr
fadd
nop
sub
dec
pop
add
xor
mov
cmpsl
int3
and
mov
imul
xchg
mov
inc
inc
and
call
lret
lock
pop
pop
inc
leave
shl
pop
pop
pop
xor
push
adc
inc
ss
stc
sti
scas
add
fwait
or
aad
xchg
xchg
cld
push
test
aad
sub
fmull
in
scas
jl
icebp
sub
sbb
jp
aas
push
lcall
mov
stos
adc
add
mov
push
inc
dec
mov
lret
decl
imul
mov
out
popf
out
sti
sbb
movl
aaa
add
rcrl
ljmp
xchg
les
xor
faddl
dec
xor
movl
xorl
push
lods
jl
clc
sub
aam
and
jbe
add
clc
xor
lahf
call
dec
roll
outsl
popa
inc
pop
mov
or
pop
sbb
cmp
bound
pop
adc
or
inc
pop
mov
ja
jb
mov
aad
ja
and
repz
push
xchg
or
jge
in
repz
imul
adc
out
fnstenv
push
push
xor
ret
and
xchg
mov
ljmp
rcll
xchg
scas
repnz
and
jg
dec
adc
das
jb
inc
rsqrtps
mov
iret
xchg
scas
repnz
and
jg
dec
adc
das
jb
inc
rsqrtps
mov
xlat
xchg
fnclex
scas
repnz
mov
lahf
and
jnp
dec
adc
sub
inc
push
push
sti
mov
sub
mov
and
adc
adc
ja
addr16
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
cmpsb
mov
addb
mov
outsb
and
push
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addb
rol
and
xor
add
adc
addr16
inc
inc
push
mov
cmpsb
mov
addb
rol
and
jno
xor
daa
adc
rol
stc
xchg
call
mov
cmp
ret
or
push
mov
repz
cmp
jnp
mul
out
sub
fimull
adc
mov
pop
add
int3
mov
mov
xor
mov
ja
in
jo
lds
mov
adcl
stos
cs
fildll
lock
data16
aam
loopne
sarb
or
jns
stos
dec
lock
fildll
jl
decl
jo
inc
inc
scas
mov
jns
fucom
insl
cmp
xchg
jno
arpl
clc
insb
add
xchg
inc
inc
inc
jne
cmpsb
mov
addb
rol
and
xor
add
adc
data16
inc
inc
cmp
movsb
vaddsubpd
mov
inc
pop
inc
xor
inc
lock
adc
rol
aad
in
nop
xchg
mov
mov
imul
push
push
jne
push
add
push
sub
shl
cmpsb
clc
shl
jecxz
mov
out
rol
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addb
rol
and
xor
add
adc
data16
inc
inc
push
mov
fmuls
insl
stc
push
es
adc
xchg
xchg
test
cmc
stos
sub
jne
mov
not
jle
or
nop
adc
dec
sub
mov
mul
pusha
jae
dec
sbb
push
add
jecxz
lods
sbb
cmp
outsl
loope
or
pop
add
jle
adc
mov
movsb
jmp
pop
jl
xlat
mov
into
pmaddwd
mov
mov
mov
push
and
inc
xchg
xchg
mov
jae
pop
cmp
jno
push
addr16
ret
ss
adc
aas
bound
rcll
test
fidivrs
incb
push
jl
ljmp
repnz
call
add
and
loop
push
imul
cmp
popf
sbb
add
popa
shl
arpl
fwait
mov
push
inc
or
mov
jle
rolb
test
add
insb
jbe
cli
xchg
sbb
hlt
test
jno
test
repnz
mov
jo
jns
mov
cmc
dec
mov
pop
fidivrl
pop
in
out
daa
mov
cmpsl
stos
xor
aas
or
and
push
lods
lret
and
leave
xor
repz
loop
dec
jge
jne
arpl
or
imul
test
dec
push
stos
lret
imul
add
aaa
push
push
jge
add
pop
xor
pop
mov
mov
sbb
dec
lods
rorb
pop
inc
jnp
xchg
sahf
pop
iret
or
cli
jmp
adc
popa
dec
mov
push
hlt
fcmovb
in
orb
insl
jg
adc
pop
mov
jmp
outsl
push
repnz
lods
repz
inc
mov
and
add
lret
es
lods
dec
roll
inc
push
nop
or
jo
pop
push
mov
stos
sbbl
incl
adc
dec
mov
jl
imul
ret
dec
rcll
push
rcrl
jg
imul
in
imul
movsb
aad
xor
daa
push
mov
fwait
fs
fiaddl
lea
push
outsl
or
add
rcr
jl
inc
mov
jae
inc
jb
outsb
mov
inc
in
dec
mov
xor
outsl
adc
aad
mov
lods
mov
pop
add
ljmp
sub
js
popf
imul
pop
xchg
ss
sub
ret
mov
rcrl
mov
cs
dec
jl
cmp
std
je
ret
pop
rcrl
mov
roll
lods
pop
cmp
test
mov
aaa
fsubs
popa
jge
ficomps
aas
aam
arpl
mov
mov
lock
test
mov
divl
cmpsl
jle
add
call
push
add
xor
stos
mov
cmpsl
and
xor
outsl
cmovae
adc
daa
int
and
dec
stos
loope
push
dec
xor
mov
mov
push
ficoml
pop
inc
pop
add
xor
mov
loop
add
mov
ret
lret
xchg
jmp
dec
mov
out
test
fstpl
push
mov
outsl
adc
insb
add
dec
push
push
jae
or
sbb
jbe
es
cmp
les
cwtl
push
add
pop
mov
push
xor
lret
test
in
xchg
add
loope
push
cmp
add
popa
dec
es
outsb
lret
mov
aaa
sub
icebp
icebp
sbb
add
inc
repz
mov
push
out
inc
mov
push
mov
adc
jp
pusha
lock
dec
das
mov
sbb
loop
iret
jne
out
daa
or
mov
jne
jle
sub
inc
enter
inc
leave
loop
int3
lock
cmp
fidivrs
pop
inc
xor
and
push
cs
fs
sti
mov
aaa
clc
std
and
loop
sbb
cwtl
inc
ljmp
arpl
mov
insl
das
adc
js
mov
push
sti
mov
and
in
cld
out
lret
xchg
rorl
sbb
dec
pushf
or
inc
fsubrp
add
or
mov
sahf
je
add
cmp
push
or
mov
sarl
pop
inc
mov
ljmp
ss
cmpsb
rcr
stc
dec
xor
mov
mov
outsb
sbb
push
push
sti
pushl
test
fistpl
fs
xor
mov
rol
sub
pop
jae
jp
push
fcomi
xchg
out
inc
or
adc
xchg
push
push
fidivrs
pusha
jle
loop
les
mov
lahf
add
push
repnz
cmpl
jmp
ftst
cmp
jbe
mov
pop
mov
fwait
repz
call
sub
add
out
pop
xor
xor
add
je
in
loop
std
je
dec
jno
mov
push
sub
shll
repnz
pop
imul
or
xor
lea
cli
leave
cmp
xor
adc
fisttps
xlat
or
mov
add
pop
aad
out
movsb
push
fisubl
cmp
pop
mov
mov
jge
mov
push
bound
push
inc
mov
adc
jp
stos
addr16
imul
pop
sbb
pop
xor
inc
xor
xchg
nop
mov
popf
arpl
push
pop
aad
cs
lret
xor
in
neg
call
icebp
fists
jae,pt
pop
push
and
dec
dec
xor
xor
imul
sahf
arpl
inc
and
lods
cmp
add
fs
stos
int
push
sbb
dec
sbb
ljmp
adc
cmp
jae
bound
jp
dec
ss
popf
jl
xchg
push
or
xor
push
out
push
push
jne
outsl
or
adc
mov
int3
mov
sub
js
loop
sbb
leave
fsubrl
mov
inc
iret
gs
cld
sub
xlat
sub
mov
mov
add
mov
mov
mov
cwtl
cmp
gs
mov
idivl
pop
mov
mov
std
sbb
push
fldl
inc
cmp
data16
or
pushf
mov
push
je
int
mov
out
stos
lret
push
inc
sub
sub
loop
ffree
out
in
cmpsl
ds
mov
scas
gs
jbe
xchg
call
sti
xchg
inc
adc
mov
ret
pusha
cwtl
notl
jb
push
dec
cmc
add
inc
cld
add
leave
mov
or
jg
scas
iret
pop
cmc
data16
ret
pop
sub
cmp
push
sub
inc
shrb
dec
and
hlt
mov
sbb
mov
push
shl
fiaddl
stc
cs
pop
lea
es
aad
lahf
xchg
imul
rep
lret
sbb
sbb
jb
ljmp
lcall
nop
lds
mov
outsb
rcr
stos
mov
les
sahf
pop
nop
je
imul
mov
jae
jbe
aas
pop
rsm
dec
adc
and
and
lcall
repz
fmull
aas
push
dec
dec
jno
cmp
aad
pop
call
mov
stos
cwtl
loope
leave
jae
and
inc
inc
insl
scas
add
out
lret
stos
test
sub
cltd
mov
aad
in
and
jbe
cltd
ret
and
out
fnsave
add
inc
data16
cli
scas
cltd
inc
das
lock
jbe
sahf
xchg
movsl
cmp
aaa
test
inc
jl
pushf
fwait
ret
cmc
lea
arpl
add
iret
outsl
sbb
mov
cmp
jle
push
negb
lcall
lret
sbb
jmp
loop
or
outsb
and
imul
js
inc
xor
cmpsl
mov
jecxz
push
and
lds
test
out
mov
cmp
or
movsl
dec
in
lods
add
lea
cmpsb
movsl
mov
add
push
dec
pop
enter
push
pop
in
xchg
sub
stos
rclb
xchg
mov
sbb
into
push
pop
mov
cmp
iret
sub
lds
aaa
lock
fyl2xp1
sub
sti
mov
adc
pop
push
cld
out
mov
and
xchg
sub
or
dec
xchg
test
xchg
push
aaa
mov
cmp
sub
out
push
cmp
push
nop
fmuls
leave
jecxz
mov
pusha
loope
sbb
es
add
andb
mov
sub
lds
mov
in
shrl
lock
mov
jns
mov
pop
mov
add
aaa
imul
cmpsl
fldcw
dec
loope
cmp
into
xor
cmpsl
mov
pop
or
jg
fidivs
popa
bound
mov
jge
mov
push
pop
xchg
push
pop
dec
lods
jo
xchg
pop
pop
sub
shll
popa
cmp
jo
xchg
push
ja
jg
jbe
fiaddl
addr16
mov
fidivs
aas
fbstp
lds
into
jo
std
popf
out
fwait
dec
jg
rol
leave
scas
inc
push
jae
inc
cmp
into
sahf
mov
sbb
cmp
mov
mov
cmpsl
adc
add
jmp
out
mov
jecxz
clc
jnp
xor
cmpsl
test
ljmp
mov
cmp
mov
daa
inc
xchg
popf
fsub
imul
and
jmp
test
fisttpl
dec
ljmp
loope
xlat
cmpb
cmp
lahf
out
jae
inc
dec
pop
cmpsl
or
int3
mov
inc
pop
pop
cmpsl
mov
mov
cmp
outsl
xor
push
cmp
icebp
cli
cmp
push
sub
xor
es
ficompl
mov
and
je
pop
lods
dec
jno
add
gs
push
fcmovnu
push
hlt
outsb
in
insl
adcl
jo
aaa
repnz
shrl
mov
cmpsl
inc
movsb
mov
or
jecxz
fld
les
std
fnstsw
cmp
jle
decb
or
fisttps
fcoms
xor
test
sbb
sub
add
cmpsb
push
xlat
xchg
or
mov
outsl
xor
add
fildl
dec
lret
mov
mov
sub
pop
sbb
stos
pop
jle
jns
ss
inc
sbb
add
cmpsb
lods
lods
iret
sub
mov
cmp
scas
insl
mov
add
inc
sahf
into
inc
jl
push
in
and
ret
leave
cmpsl
icebp
gs
jmp
mov
jnp
les
lds
in
sbb
int
shlb
lret
add
call
mov
pop
repz
rol
push
and
lods
inc
sti
and
das
xor
imulb
ss
addl
mov
fiaddl
mov
mov
scas
pop
sub
shll
add
out
cmc
mov
jae
and
push
dec
add
into
lcall
and
dec
and
enter
mov
enter
cli
mov
pop
stos
mov
in
or
lret
mov
mov
shll
insl
aam
cmpsb
cli
popa
bound
scas
pop
jmp
xorb
roll
sarl
je
push
out
cli
and
fimull
in
testb
test
pushf
mov
mov
push
iret
inc
jb
lret
xchg
call
xor
adc
idivb
enter
xchg
ss
lahf
lods
cmp
clc
cmp
sbb
rorl
xchg
push
aaa
sahf
xchg
push
roll
cltd
imul
cmpl
repnz
or
int
sub
pop
sbbb
addb
mov
or
sahf
into
xorb
idivb
mov
push
adc
dec
adc
call
push
or
popa
js
arpl
cmp
adc
sbb
test
dec
push
pop
xchg
and
inc
roll
shll
cmp
mov
mov
dec
cmp
lret
xlat
sub
jno
stos
std
je
or
loop
stc
or
stos
stc
es
fdivrl
xor
loope
jns
mov
xor
jnp
dec
xchg
cmp
dec
mov
mov
rclb
pop
pop
lahf
subb
and
into
mov
inc
push
div
mov
enter
cmp
push
lock
icebp
inc
push
repnz
arpl
pop
and
stos
test
test
jecxz
negl
sbbl
out
mov
fsubs
push
mov
push
mov
loopne
lods
nopl
and
inc
lods
in
mov
add
dec
xchg
fs
sbb
mov
xor
addr16
mov
call
push
xchg
sbb
sti
sub
jp
dec
mov
xor
cmpsl
out
inc
xor
rcrl
mov
out
or
xchg
cs
mov
or
cld
cmp
mov
sbb
repnz
push
jne
je
rcrb
xchg
push
repz
add
cmp
jne
mov
push
push
imul
fdiv
fisttpll
fiaddl
fldt
cmpsl
mov
in
sahf
decb
in
es
jo,pn
and
or
sub
mov
cltd
cmp
mov
lahf
adc
mov
push
mov
cmpsb
in
sbb
fdivrs
inc
loope
mov
xlat
leave
cmpb
inc
push
or
gs
mov
sbb
unpcklps
call
add
int3
push
xor
out
pop
jo
aam
adc
mov
ja
aam
aam
imul
mov
mov
jg
ret
jae
mov
pop
iret
or
or
stos
lods
les
and
cmpsb
sbb
outsb
mov
mov
push
xchg
jmp
pop
jno
stc
cmc
and
mov
fcomps
rcll
mov
and
inc
aas
push
pslld
int3
icebp
mov
push
adc
cs
pop
mov
sub
and
xchg
push
js
xor
jl
sti
shrb
adc
or
jno
push
jae
iret
repnz
pop
inc
mov
int
fistl
adc
pop
mov
mov
xchg
jecxz
lcall
adcb
mov
decb
test
ret
push
lds
push
imul
push
xlat
incl
push
dec
ljmp
xchg
gs
aas
adc
in
mov
stos
icebp
les
scas
pop
jo
add
lret
paddusw
fsts
and
xor
dec
sub
inc
adc
daa
mov
and
mov
mov
mov
sbb
mov
or
add
jmp
cld
sub
push
in
pop
movsb
push
repz
push
lock
push
cmp
mov
mov
push
dec
sub
mov
jge
adc
addb
xchg
mov
cmp
imul
sbb
inc
pop
ret
mov
stos
adc
jb
sarb
mov
and
dec
fidivs
std
sub
jle
lahf
sbb
addr16
or
pop
add
push
jbe
push
sub
mov
je
sub
pop
or
imul
sbb
daa
enter
popf
lock
dec
sub
push
mov
xor
lret
add
cmp
xchg
int
rorl
or
xor
in
insb
xor
mov
and
fnstenv
jl
mov
insb
xor
or
adc
mov
pop
pop
dec
stc
mov
pop
das
clc
dec
lds
xor
push
add
and
pop
pop
fisttpl
cmpsb
sti
lcall
ljmp
jp
adcb
xor
xchg
leave
jnp
lret
cmp
fistl
jo
sbb
sarl
inc
dec
sti
mov
icebp
or
lcall
mov
adc
add
cwtl
jne
cmpsb
or
ret
xchg
jmp
inc
fdivrs
enter
les
cs
xor
insl
sub
xor
lret
mull
gs
imul
ret
sbb
into
pop
mov
loope
fisubs
lock
ret
add
orb
int
dec
sub
xchg
jae
mov
jge
iret
cmp
xor
jae
sub
dec
or
adc
jbe
cmp
addr16
movsl
out
cmp
aas
dec
notl
dec
inc
xchg
shl
push
shll
sbb
jns
sbb
mov
jmp
rorb
into
pop
das
lea
mov
clc
popf
out
inc
mov
fildl
es
push
sbb
xchg
mov
into
xchg
pop
pop
int3
mov
in
das
repz
and
mov
inc
add
outsl
jno
daa
aam
mov
push
xchg
dec
gs
xchg
sub
fdivs
mov
mov
pop
push
push
pop
pushf
cmp
push
mov
addr16
ss
lds
pushf
fdivs
test
testl
xchg
push
xlat
push
popf
icebp
mov
inc
push
lcall
loope
mov
mov
dec
cmp
pop
cli
inc
inc
hlt
push
outsb
and
xchg
add
movsb
mov
das
fmull
mov
push
dec
stos
mov
mov
jl
fimull
jns
insb
lock
cltd
fwait
popa
imul
stos
pop
jg
push
sub
sarb
cli
adc
xor
add
nop
dec
sub
cmp
cmp
mov
arpl
sub
les
push
outsl
ret
psubusw
add
pop
flds
xchg
nop
xchg
adc
or
push
xchg
rorb
xlat
mov
test
jbe
dec
jne
xchg
cmp
sbb
lcall
cmp
jbe
xchg
jmp
sbb
dec
test
and
push
sub
pop
push
je
sti
popf
jmp
mov
movsl
xlat
cmc
mov
pusha
cmp
es
jmp
mov
emms
mov
negb
sub
repz
mov
adc
mov
jnp
push
icebp
orb
jnp
jne
mov
stos
sub
add
mov
push
repz
mov
scas
fisubs
and
in
mov
push
jno,pn
push
pop
xchg
int3
adcb
stc
sub
lods
mov
fbstp
xor
icebp
pop
jno
in
scas
outsl
fildl
xchg
leave
je
jle
ljmp
js
pop
frstor
int
movsb
and
rcr
out
xorb
cmp
adc
mov
fildl
xor
movsl
jae
xchg
js
push
outsb
xchg
push
xor
movsb
add
subb
notb
lcall
lcall
fisubrl
cs
cmpsb
jo
xchg
and
ficompl
xor
mov
jecxz
cmp
cli
pop
aaa
pop
mov
inc
jecxz
xor
add
imul
hlt
mov
iret
lcall
mov
shlb
pop
mov
mov
jl
pop
mov
int
jmp
xchg
pop
push
push
das
mov
ss
jle
pop
shlb
scas
mov
and
clc
push
dec
hlt
jae
pusha
hlt
add
repnz
cmc
push
clc
adc
sti
or
mov
jge
adcb
push
adc
mov
lret
daa
inc
xor
scas
leave
lods
sub
xor
and
das
push
cmc
or
das
or
add
adc
inc
and
or
jns
in
jl
push
pop
dec
std
dec
lahf
daa
js
add
test
sub
loop
add
inc
lret
mov
outsb
mov
dec
inc
xchg
jb
out
cmp
stos
shlb
pop
pop
int
into
imul
xchg
arpl
popa
ds
in
cmc
inc
aam
mov
fdivp
rorb
ret
leave
adc
add
ret
pop
mov
lock
push
push
inc
fbld
mov
pop
cmpsl
lret
pop
loopne
dec
insl
mov
mov
dec
mov
pop
mov
cmc
call
and
inc
lahf
es
aad
push
cmpsb
loopne
insl
and
mov
aam
inc
imul
imul
pop
xlat
pushf
mov
shrb
sbb
jle
xor
int3
pop
movsl
xchg
adc
mov
test
mov
cmp
jp
ljmp
and
sarl
mov
mov
addr16
out
pop
gs
pop
fstpl
call
icebp
pusha
fcompl
push
les
xchg
sti
cld
sti
movaps
add
in
dec
cld
pop
adc
jb
mov
pop
sub
inc
out
out
sahf
mov
gs
pop
push
mov
bound
cld
mov
sub
push
jle
push
pop
ret
hlt
or
cmp
stc
into
mov
cmp
ret
imul
scas
fs
aas
and
xchg
cld
push
shll
mov
pop
pop
mov
test
xchg
sub
dec
movsb
and
lret
iret
and
add
mov
pop
addr16
pop
jp
es
xchg
cmpsb
mov
in
mov
and
sbb
pop
ret
loop
push
lock
sbb
jp
inc
lea
daa
add
imul
dec
int3
inc
push
into
add
jne
jns
xchg
xchg
cmp
insb
test
sub
scas
dec
sbb
data16
jg
cmpsl
fwait
xor
mov
xchg
xor
dec
dec
cmp
mov
and
ljmp
xor
push
int
mov
nop
adc
xchg
rol
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addb
rol
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addb
rol
aaa
and
xor
add
adc
data16
inc
inc
push
mov
cmpsb
mov
addb
push
rolb
and
lcall
out
scas
mov
arpl
sub
push
test
mov
jecxz
shll
jecxz
mov
jecxz
xchg
andw
arpl
xor
and
adc
add
stc
adc
push
mov
add
mov
mov
pushw
jp
dec
scas
pop
mov
or
adc
repz
call
es
pop
out
sub
and
add
sub
pop
and
daa
or
das
jo
mov
mov
push
ds
pop
hlt
pop
fdivrl
jecxz
lret
xchg
sbb
sub
into
es
adc
push
sub
imul
jge
and
add
sbb
orl
inc
cmp
jae
mov
enter
ss
sti
scas
add
movl
fnstenv
add
push
xchg
scas
pushf
or
inc
arpl
jecxz
add
sbb
jae
sbb
mov
cltd
xchg
cltd
arpl
mov
insl
mov
test
repz
sub
pop
sbb
sub
ret
add
xorl
arpl
and
cmp
adc
sbb
ljmp
aas
stos
dec
mov
add
repz
xchg
mov
cmpsl
push
orb
lcall
mov
cmp
adc
jae
arpl
inc
movsl
dec
hlt
jg
inc
mov
outsl
jecxz
xchg
inc
mov
and
sub
sbb
jecxz
xlat
inc
rorl
and
adc
add
repz
jecxz
shll
ret
es
mov
data16
arpl
xor
and
adc
add
repz
jecxz
shll
ret
es
mov
data16
mov
mov
jmp
mov
fldl
hlt
sub
sub
outsl
sahf
pop
cs
pop
movsl
ficomps
ds
lods
mov
fildl
jmp
lret
lret
lea
mov
or
mov
sbb
pop
test
stos
sub
inc
sbb
push
repz
push
pop
jmp
sbb
mov
lahf
mov
pop
pop
cmp
mov
and
inc
lret
aaa
in
sbb
mov
sub
into
cmp
es
inc
add
cmc
pop
jl
cmp
fildll
jecxz
rclb
andl
cmc
dec
stos
daa
arpl
lods
adc
cli
rcrb
cmp
pop
imul
pop
pop
sub
jecxz
mov
sub
dec
xor
pusha
jbe
stos
mov
fwait
adc
and
arpl
aas
xchg
pop
iret
addr16
or
cmc
stos
aas
sbb
insb
lds
test
dec
out
movsb
movsl
andl
and
or
push
enter
fnsave
add
loopne
sub
add
test
or
push
mov
stc
js
or
mov
aam
bound
xchg
movnti
xlat
fwait
test
insb
xor
jbe
jl
int
xchg
imul
fmul
jp
loopne
in
ljmp
sbbb
shll
sub
loopne
push
in
addb
add
lods
scas
mov
loopne
insl
ror
testb
push
adc
sbb
iret
js
jne
sub
jno
cs
test
mov
clc
sbb
adc
xor
push
inc
dec
xor
and
xchg
adc
xchg
mov
adc
aad
shr
dec
fcompl
stos
movsb
fs
xor
push
jg
cld
inc
addl
add
xchg
sarl
xchg
rcrl
push
mov
es
jecxz
loopne
pop
shr
add
pop
xlat
pop
push
push
jns
and
cmp
cmp
mov
or
pop
cmp
add
mov
sbb
inc
les
test
aam
lret
cltd
lcall
icebp
ds
cmpsb
inc
sarb
add
mov
adc
jo
jecxz
jg
or
popl
lock
mov
or
or
mov
add
or
ficoml
mov
jecxz
cmp
adcl
stos
mov
sub
pop
cmp
xchg
fists
orb
movl
dec
xchg
pusha
jle
daa
and
cwtl
lcall
jae
cltd
sbb
daa
fnstenv
or
pop
inc
loope
repnz
fcomps
pop
sbb
dec
movsb
sub
cwtl
cltd
fiadds
pop
push
movsb
xor
lock
std
mov
std
js
cwtl
mov
adc
and
cli
cwtl
out
inc
mov
push
popa
movsl
dec
scas
mov
loope
orl
clc
pop
fs
rcrb
mov
mov
movsl
add
and
push
mov
popf
sbb
pusha
test
stos
out
enter
ljmp
cmp
scas
dec
xchg
or
sbb
orb
adc
pop
sbb
lds
jle
js
mov
dec
mov
pop
mov
imul
mov
xorl
xor
mov
pop
lret
daa
aad
push
aaa
cltd
outsl
dec
loop
sub
push
jne
mov
sbb
sub
int
shll
jae
fnstsw
mov
mov
xchg
scas
out
jge
sub
movsb
mov
ret
mov
cmp
repz
out
jmp
out
cltd
ja
jnp
add
aas
mov
mov
jp
adc
mov
pop
lock
push
lret
rolb
inc
adc
pop
mov
lock
jns
loopne
enter
push
mov
cmp
in
cmc
sbb
popl
mov
scas
pop
inc
push
sub
cltd
xor
lods
cmpsl
add
int3
xor
in
push
clc
mov
fsub
sub
call
cli
in
adc
and
inc
ss
adc
stos
dec
ret
aaa
js
xchg
jp
in
dec
rcl
jp
test
aaa
aas
push
sub
cmp
sub
adc
push
das
inc
fs
dec
jp
lods
mov
xchg
ficompl
pop
push
in
scas
les
pop
cmc
dec
or
test
outsl
add
stos
or
pop
sahf
cmp
test
lea
scas
xor
aas
lods
add
or
jge
pop
lods
sub
or
add
outsb
arpl
lods
dec
push
je
fisttpl
or
xor
mov
push
pop
sahf
ret
dec
push
push
cli
hlt
std
xor
rdmsr
mov
sub
cld
push
sbb
or
in
inc
and
dec
inc
ja
lods
inc
pushf
lds
mov
jg
fld
cmp
imul
push
lret
arpl
mov
aas
mov
cli
push
loop
push
sub
lods
jbe
push
xchg
sahf
inc
jnp
outsl
xchg
mov
loope
sbb
and
xor
cmp
jae
push
imul
cmp
or
push
mov
gs
jmp
xchg
cmp
rolb
xchg
mov
fistps
and
or
cmpsl
frstor
mul
mov
ss
ja
pop
and
dec
ret
aaa
and
pop
xchg
push
adc
mov
xor
xor
jnp
sub
fs
cmc
les
fildl
mov
outsb
mov
iret
jle
ljmp
jmp
pop
into
xor
dec
cmpsb
mov
cmc
mov
pop
ret
imul
int3
jno
test
jl
lock
push
cmp
loop
loopne
es
mov
filds
shl
stc
pop
and
shl
sub
je
inc
movsb
dec
xchg
push
adc
mov
and
lret
fadds
insl
add
movsb
inc
scas
add
leave
push
dec
xorl
pop
pop
mov
add
inc
pop
fsubrp
cli
cmc
or
sarb
jo
jg
sub
inc
rorl
inc
fwait
push
jns
inc
lds
or
jmp
mov
sub
inc
out
mov
popl
mov
in
sub
add
sub
inc
popa
test
pop
jns
push
add
fnstenv
ss
fstl
xchg
push
adc
adc
mov
adc
cmp
adc
fldcw
pop
sbb
jle
inc
cmp
ds
mov
and
jge
adc
sarb
sahf
push
dec
xor
cli
push
add
add
popa
mov
decb
jb
pop
dec
cmp
rcrl
pop
xor
mov
and
or
dec
jae
mov
not
sub
insb
call
imul
pusha
dec
jg
and
jmp
jmp
sbb
insl
cmpsb
pusha
dec
mov
out
test
and
into
dec
outsb
int
mov
adc
push
sbb
pusha
adc
gs
cli
dec
ret
pop
mov
dec
push
sub
jle
add
jne
fisubl
pop
and
fistpl
cmc
mov
loop
loope
testl
push
call
ja
sbb
and
js
rolb
xlat
dec
data16
out
push
cmp
adc
ljmp
imul
push
jg
pusha
cmpsb
jmp
push
addb
out
loopne
and
pop
mov
fs
push
ficompl
fmuls
push
nop
sub
jmp
out
mov
pop
ficoms
call
stos
jmp
sbb
cmc
jb
sub
sub
filds
mov
and
test
fldt
out
inc
into
cwtl
stos
dec
fisubrl
inc
mov
or
mov
push
cmp
and
lods
cmp
ror
fcmove
mov
iret
rcl
pop
and
lds
adc
push
je
ret
out
es
xchg
paddq
stc
imul
add
rorb
mov
and
mov
rorb
jge
movsb
jnp
repnz
xor
fwait
add
sbb
aad
idivl
sahf
insl
push
push
movsb
rclb
testb
xlat
lret
outsl
sarl
cmpsl
and
jmp
ret
adc
das
sbb
pop
jg
mov
call
or
cld
imul
push
cmp
or
pop
faddl
mov
lret
insl
jp
icebp
adc
push
add
mov
into
outsl
stos
cmp
inc
or
jmp
sbb
pop
mov
out
jl
nop
repnz
mov
fisttps
test
sbb
out
lahf
lock
mov
imul
mov
sbb
jb
adc
insl
imul
add
insb
dec
lahf
addr16
pop
dec
dec
xor
adc
inc
inc
cmp
cmpsl
push
fisttpl
inc
mov
and
push
sub
lcall
sbb
ljmp
mov
pusha
sbb
or
cmp
mov
shlb
fs
mov
iret
in
daa
mov
pause
sub
mov
shlb
mov
add
inc
es
scas
inc
sub
push
in
pop
and
stc
and
je
lods
cmp
inc
ret
mov
and
sbbl
push
insl
pop
test
fidivl
repnz
fs
popa
fwait
sub
aaa
scas
pop
js
stos
cmp
cmpsl
add
es
or
push
cmc
dec
pop
mov
in
mov
popf
shl
movsb
out
inc
outsb
jg
lock
pop
arpl
xchg
lock
mov
sti
sub
outsb
push
leave
cmp
scas
test
shlb
int
cmc
icebp
adc
call
in
push
push
cs
cmp
add
pop
fisttpl
sti
or
mov
repnz
xor
data16
aaa
cmpl
outsb
movsb
push
add
punpckhwd
jp
mov
mov
not
repnz
jne
dec
push
xchg
dec
imul
adc
ds
add
jns
dec
outsl
in
xor
xchg
inc
pop
pop
cmp
scas
inc
pusha
mov
rcll
lods
mov
sbb
mov
xor
jbe
mov
cmpsl
rcll
mov
adc
mov
jecxz
push
mov
and
adc
sbb
adc
mov
das
xor
outsb
jl
sbb
or
pop
pop
in
das
sub
mov
test
pop
rorb
sub
push
test
loop
mov
movsl
mov
cmc
push
std
in
adc
shrl
test
rcl
iret
testb
dec
mov
stos
std
lcall
and
fdivl
dec
out
mov
pop
sub
jns
cli
aaa
xor
mov
sub
test
fmull
xchg
inc
cmp
dec
add
mov
movsb
bound
or
xchg
mov
das
sub
adc
dec
into
mov
ss
mov
call
ret
mov
add
sbb
test
push
fnstsw
fwait
in
ret
jge
cmp
sti
and
bound
clc
mov
or
lea
sub
adc
test
andb
cltd
mov
ss
mov
xchg
enter
insb
aam
push
ffreep
out
xor
out
test
movsl
jecxz
jae
or
nop
dec
jp
push
or
push
movl
test
in
jge
mov
adc
sahf
iret
data16
popa
push
add
adc
push
in
add
cmp
mov
adc
shrl
push
ret
jb
int
mov
shl
sbb
ficompl
pushf
imull
jg
es
stc
push
jnp
movsb
dec
xchg
shlb
dec
and
adc
mov
cmp
xchg
pushf
inc
mov
sub
pusha
cwtl
daa
es
add
sarl
pop
andl
ljmp
shl
mov
stos
js
frstor
push
fsubrl
dec
es
in
fs
cmp
and
xor
and
pop
mov
out
das
cli
sub
and
mov
ja
xchg
cmp
adc
mov
inc
pop
pop
lock
inc
cmpsl
mov
bswap
or
call
jnp
mov
jb
push
into
jbe
jb
test
subb
lcall
dec
ds
and
testl
jo
fidivrs
in
inc
xchg
xor
leave
popf
rcrb
lods
and
adc
and
je
imul
mov
cmp
jg
dec
mov
popa
scas
loop
pop
or
jecxz
cwtl
fldl
insl
cs
xor
inc
sub
push
jno
add
jns
mov
pop
insl
mov
inc
arpl
xor
arpl
pop
adc
xchg
nop
pop
lret
cmpsb
adc
in
xor
aas
pop
sub
cmp
mov
das
bnd
jl
insb
jge
cmp
adc
cmp
enter
jbe
adc
test
inc
jge
repz
fimuls
enter
jcxz
cwtl
pushf
fisubs
notl
jle
pop
jmp
xchg
pushf
pop
mov
mov
cmp
pop
pushf
cmp
pop
mov
out
push
adc
adc
popa
cmpsb
sub
add
mov
fimull
scas
dec
cs
lea
lret
imul
cmp
mov
sub
nop
add
imul
dec
pop
mov
into
sub
scas
dec
cmpsl
pop
rcrb
aaa
out
iret
dec
jnp
jnp
je
pop
bound
pop
ret
xchg
in
inc
jno
pop
inc
add
adc
xor
push
popf
xchg
lret
or
aas
push
iret
jg
pop
dec
dec
dec
daa
imul
loope
lahf
popa
push
int
test
jp
xchg
das
adc
fstl
add
aaa
lret
mov
aas
je
add
add
mov
popa
test
fcmovnu
repz
add
pop
outsb
lods
add
out
adc
lret
arpl
movd
shr
mov
rol
cwtl
push
sbb
inc
dec
cmp
cld
xchg
dec
push
roll
lods
mov
mov
xor
icebp
insl
cmp
jg
aam
inc
sbbb
ret
xlat
or
hlt
cld
push
mov
ljmp
mov
ljmp
ja
cltd
addr16
xchg
jb
dec
push
xchg
stos
subb
jns
add
ret
xchg
inc
ss
pop
inc
inc
and
movsl
out
fs
xor
cmp
aad
jp
sbb
shlb
cli
movb
jge
xor
in
ficompl
gs
add
aas
imul
push
out
xor
pushf
or
das
loop
inc
mov
jmp
ja
std
sub
cs
scas
not
fs
dec
cmpl
in
or
test
dec
jb
xchg
decl
and
std
shll
jne
push
scas
mov
push
lcall
pop
pop
sbb
sti
lea
cmc
mov
int
pop
popf
mov
lods
lods
mov
push
xor
pop
cmp
sbb
stos
sbb
mov
jge
cmpsb
call
ss
jo
sbb
mov
std
add
sbb
enter
cwtl
pop
jns
rorl
sahf
stos
iret
mov
repnz
sbb
xchg
leave
stos
fwait
lcall
aas
cmp
fcomp
into
out
jb
mov
cmc
or
addps
pushf
scas
out
mov
out
jmp
loope
xlat
test
stc
pop
xchg
sbb
pushf
repz
or
xchg
aas
mov
insb
adcb
xchg
iret
xor
aad
push
iret
fdivl
and
push
loopne
gs
sti
xor
xchg
or
fisttpl
clc
add
mov
cmp
jno
adc
mov
stc
sub
pop
jns
push
pop
jae
dec
fstpt
sbb
add
test
sbb
lret
cld
es
fidivs
sahf
xor
inc
jl
test
std
push
lcall
test
push
subl
mov
stc
ss
jecxz
mov
es
shll
nop
cmp
pusha
stc
clc
push
in
mov
adc
setp
mov
mov
inc
cmpsl
add
ljmp
shlb
in
xor
out
movsl
xchg
cltd
lret
mov
insl
xchg
cli
and
out
sub
inc
and
pop
loopne
mov
loopne
push
jg
add
insl
jp
popf
jb
xlat
rcrl
push
popl
and
call
inc
sarb
imul
shrl
xorb
and
aam
imul
bound
aaa
repnz
push
jo
imul
in
mov
ja
sbb
inc
rol
fcmovnb
ljmp
adc
cmc
test
leave
xor
stos
pop
scas
or
testl
sarb
sub
jbe
lods
icebp
cld
mov
into
fnstenv
js
nop
leave
dec
mov
mov
xor
pop
addr16
adc
cltd
adc
cwtl
adc
pop
call
dec
inc
inc
stc
cmp
adc
cld
rcrl
xchg
pop
loop
push
and
sbb
mov
push
outsl
scas
inc
out
jb
jbe
add
sub
dec
mov
jg
mov
aad
mov
test
sub
das
xor
stc
aas
mov
rorb
jns
aam
dec
test
adc
or
fldcw
stos
das
insb
lret
pop
adc
loopne
cmpsb
or
pop
lods
push
and
adc
daa
adc
sahf
aad
shrl
sub
outsb
inc
cmpsl
stc
mov
sbb
aas
pop
icebp
inc
pop
hlt
and
cmp
ljmp
shll
scas
jl
pushl
lds
pushf
test
adc
pop
adc
imul
push
adcb
or
xchg
out
add
je
inc
ljmp
pop
gs
pop
sub
push
dec
scas
push
inc
lcall
push
vmovaps
bswap
mov
mov
leave
cwtl
dec
movsb
in
jne
jne
mov
pushl
push
lret
cmpsl
out
add
imul
lea
push
dec
fldcw
jb
add
push
fsubl
hlt
or
fidivs
aad
adc
outsl
mov
mov
pusha
loope
shr
sbb
ret
mov
dec
pusha
popf
outsl
sub
gs
sbb
sbb
rclb
sbb
or
es
jmp
out
nop
xchg
pop
dec
dec
dec
pop
sub
lcall
mov
aad
cmpsb
sbb
lcall
incl
sarb
push
sbb
pop
or
jge
imul
inc
mov
sub
dec
pop
xor
bound
mov
jnp
stos
and
iret
js
dec
fs
sbb
clc
pop
outsb
push
sub
scas
jb
sub
sub
lods
pop
in
mov
lret
adc
je
mov
and
add
xchg
shrb
adc
push
add
stc
push
add
mov
clc
test
inc
popa
mov
sarl
dec
daa
cmpsl
mov
pop
or
popf
in
or
pop
mov
jmp
bnd
mov
aas
mov
call
jbe
adc
or
cmp
clc
scas
or
mov
loope
fildl
and
nop
movsb
adc
adc
insl
mov
ror
xchg
leave
push
cmc
dec
fs
sbb
mov
js
fsts
mov
shll
stos
inc
lret
xchg
pop
scas
test
xor
xchg
cmp
sbb
data16
mov
xchg
sub
out
xchg
and
sbbl
and
push
es
and
jno
ret
xor
fsubrl
add
in
push
mov
into
addl
mov
cld
jle
bound
test
and
lahf
daa
inc
in
orl
ret
js
mov
adcl
mov
scas
xlat
test
sarl
gs
enter
jmp
dec
cmp
mov
xor
push
scas
iret
ja
pop
push
lahf
es
ss
dec
jns
cmc
sub
das
mov
cmp
out
leave
arpl
movsb
icebp
movl
and
xchg
sbb
fsubs
mov
js
mov
lock
js
sub
sbb
and
aas
fimuls
pop
pop
mov
mov
int3
cs
jl
inc
jnp
aas
cmp
rcl
ret
fiadds
inc
fs
cwtl
push
sahf
test
sub
pop
sbb
in
nop
iret
test
jae
out
xor
or
mov
mov
syscall
pop
and
jo
mov
ficoml
sbb
xchg
lods
push
pop
dec
push
fst
cmp
xor
lods
movsl
and
adc
xor
and
adc
add
repz
jecxz
shll
ret
es
mov
data16
arpl
xor
and
adc
add
repz
jecxz
shll
ret
es
mov
data16
arpl
xor
and
adc
add
repz
jecxz
xlat
ss
daa
mov
cmpsl
inc
xchg
ja
inc
xchg
push
xchg
inc
cmpsb
xor
and
xchg
testb
jns
ret
push
fisubrs
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
mov
out
or
add
add
add
add
add
or
movsb
add
add
add
push
add
add
lret
add
add
add
add
popf
add
add
pop
add
add
add
scas
add
add
add
add
add
add
add
jge
dec
add
add
add
add
pop
add
add
sbb
xor
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
lds
inc
add
add
and
js
mov
add
add
add
add
or
jbe
pop
add
add
add
add
add
or
push
add
add
add
rolb
xor
lcall
add
add
dec
add
pop
add
add
add
add
cmp
push
add
add
add
add
add
add
add
add
loopne
sub
cmp
adc
and
outsl
add
xor
ljmp
add
add
inc
add
imul
jnp
mov
xor
jle
js
mov
add
add
add
add
fadds
mov
push
add
add
int3
add
add
add
add
add
jnp
pop
add
or
movsb
add
add
xor
mov
add
add
dec
add
add
rolb
push
add
add
jb
pop
add
add
jge
add
dec
add
mov
push
add
add
add
add
or
add
add
add
add
jle
ja
add
add
mov
xor
and
js
sub
push
add
add
add
aas
add
push
add
xor
push
add
add
add
int
pop
add
add
insb
add
add
add
xchg
add
add
call
add
pop
add
lods
add
add
add
rolb
popa
add
jo
pop
add
add
add
ljmp
add
inc
add
add
cmp
js
inc
add
add
add
add
add
add
add
add
add
add
rolb
outsb
add
add
add
add
add
cmp
or
js
fldl
je
dec
add
push
add
lret
add
add
add
add
add
imul
and
lea
pop
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
push
add
add
add
add
add
add
add
add
jo
sub
rolb
dec
add
add
fiadds
add
dec
add
add
add
js
lea
or
data16
js
lret
add
add
sub
add
je
dec
add
cmp
movsb
add
add
add
roll
add
sahf
add
add
add
xor
movsb
add
je
adc
push
add
xchg
add
add
add
call
add
add
js
mov
add
add
add
add
jnp
mov
add
add
ja
aad
mov
push
sub
push
pop
and
xchg
xchg
fimull
adc
std
test
push
ret
xchg
inc
out
jg
fdivrp
imul
and
mov
and
mov
scas
mov
mov
repnz
dec
add
out
pusha
and
mov
pop
sbb
pop
iret
nop
or
fdivl
and
cmp
and
and
popl
enter
popf
ffreep
xchg
gs
sub
fistps
jae
fisubl
or
adc
push
push
xchg
cmc
sbb
push
test
stc
jbe
dec
lahf
push
pop
inc
ds
sbb
negl
xor
lods
jmp
mov
sub
jno
call
jle
ficompl
rcrb
int
or
jo
sahf
rorb
cmpsl
cmp
pop
loopne
or
negb
add
sub
out
inc
pop
inc
je
dec
sti
add
dec
push
mov
les
ret
sub
clc
sarl
jnp
mov
adc
aad
in
aas
jge
out
sub
scas
sub
stc
addr16
mov
mov
cmp
xor
pop
jns
cmc
mov
dec
sbb
enter
dec
fsub
jmp
iret
cmc
movsb
mov
sbb
sbb
std
fucomp
pop
sti
adc
mov
xor
xlat
das
fcom
rclb
jo
es
jg
outsl
and
fscale
mov
inc
std
sbb
sub
mov
mov
rcr
push
mov
pusha
mov
mov
adc
shll
hlt
mov
cli
incl
iret
addb
sub
mov
std
xor
sbb
pop
push
xor
mov
loop
leave
clc
jl
or
mov
imul
cmp
mov
mov
push
cmp
mov
push
and
iret
mov
inc
jge
cmp
xchg
and
or
in
movsl
out
popf
cwtd
imul
in
add
sbb
out
push
jnp
mov
dec
inc
mov
adc
sti
in
inc
aas
divb
pop
mov
stc
xchg
cmp
cmpsb
mov
int3
sub
shrb
pop
push
cltd
fistps
and
lock
xchg
sbbl
jecxz
inc
inc
fists
inc
int3
mov
cmc
fsubl
loopne
movsb
es
inc
fbld
shr
mov
mov
aad
sbb
inc
cs
add
mov
testb
aas
push
mov
jmp
roll
daa
jnp
xchg
das
fdivs
xchg
fbld
push
cmp
cmpb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
