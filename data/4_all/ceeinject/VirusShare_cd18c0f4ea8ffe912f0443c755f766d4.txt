call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ljmp
jne
dec
xchg
jbe
add
and
adc
and
jo
and
cmpsl
inc
mov
jne
add
rorb
and
je
ret
jmp
inc
mov
inc
mov
jne
add
xlat
xor
jl
je
pop
shrl
mov
mov
jne
and
cmp
fldcw
lea
pushf
test
dec
ljmp
nop
lock
add
or
stc
mov
sub
lock
pop
mov
inc
mov
jae
or
fsubs
xchg
fistps
mov
and
or
jo
or
aad
cmc
adc
dec
ror
cmp
adc
adc
adc
pop
add
mov
dec
rclb
add
popa
xchg
frstor
mov
xor
xor
filds
mov
jo
mov
inc
mov
nop
gs
jne
add
fnstenv
or
sbb
push
movsl
pop
fadd
inc
lds
pusha
lea
lods
popa
inc
mov
outsb
sbbl
and
xor
add
pop
mov
mov
lods
push
mov
nop
adc
repz
fcmovu
add
adc
and
and
adc
add
jo
pusha
xchg
push
movsl
inc
mov
inc
mov
jne
add
shlb
in
cmc
jo
pusha
xchg
push
movsl
inc
mov
inc
arpl
fbstp
cli
outsl
stos
cwtl
ja
sub
dec
out
movsl
aaa
nop
int3
pop
rclb
pop
pop
in
jecxz
jae
xor
insb
daa
push
aam
xchg
idiv
test
and
sbb
mov
out
add
sahf
int3
lcall
stos
mov
scas
push
sub
fsts
shufps
or
leave
or
int
dec
out
sbb
les
fistpl
pushf
cmp
mov
or
shll
jno
hlt
out
js
pop
enter
cwtl
add
xchg
push
cmpsb
xchg
sub
nop
fsubrs
xorl
sbb
cmpsb
add
lock
add
cld
xlat
push
pop
xchg
pop
dec
xor
sahf
jae
bound
ljmp
popf
xchg
iret
mov
ljmp
jle
xlat
xor
xor
add
add
sbb
jns
add
cs
lret
stos
arpl
xchg
add
dec
fildll
sub
push
adc
cs
mov
movsb
shl
xchg
cmp
jne
int
sub
cmp
leave
lock
pushf
and
pop
lret
call
cmp
and
mov
inc
dec
adc
sbb
es
and
punpckhdq
mov
pop
adcb
addr16
repz
xchg
push
enter
pop
test
in
jno
addr16
mov
pushf
test
jp
popa
lret
xchg
setns
jne
dec
outsl
into
cmpsl
jb
xchg
out
add
cltd
xor
mov
pop
mov
sub
add
mov
mov
iret
adc
adc
mov
loop
sahf
jmp
int3
mov
cli
jns
xchg
icebp
fmuls
mov
adcb
insb
adc
enter
xorl
sub
adc
sub
fistl
push
lret
jo
outsl
das
sbb
pushf
popa
mov
stc
mov
sbb
divb
pop
mov
xchg
aas
into
jno
pop
dec
mov
sbb
mov
enter
xlat
mov
add
xor
mov
out
stos
rol
subl
or
pop
inc
fmuls
fwait
into
adc
sbb
dec
mov
push
in
mov
dec
ret
and
jmp
rcrb
adc
inc
xchg
sbb
repz
jmp
test
fisttpl
mov
pop
xchg
jmp
icebp
das
shlb
jg
inc
jnp
ds
into
fadds
cmpsb
and
sbb
out
dec
sub
ss
mov
gs
fsubrp
adc
sbb
pop
xor
mov
sub
leave
and
mov
pop
popa
jmp
into
sub
xorb
push
mov
loope
xlat
lret
push
outsl
cmp
adc
pop
pop
jp
and
hlt
loop
movsl
imul
mov
dec
out
and
sub
xor
or
xlat
aad
pop
sbb
xor
sbb
ret
and
ret
ds
jae
int
and
push
xchg
cmp
jo
and
mov
lock
pop
add
leave
mov
cmpsl
mov
mov
fldl
xchg
xchg
mov
sub
lock
xor
and
xchg
pop
push
lcall
popf
mov
lret
jecxz
sub
mov
adc
std
sub
jno
jb
sbbb
aam
test
sbb
daa
jmp
ljmp
jge
daa
div
sbbb
loopne
pop
push
das
dec
in
lcall
cltd
aas
popf
es
nop
in
bnd
mov
jne
add
push
and
jl
sti
mov
xchg
out
adc
jmp
scas
adc
fidivs
jg
das
push
mov
negl
adc
inc
xchg
xchg
jge
push
movsl
movsb
push
ljmp
jno
cmp
push
cmp
cmpsb
sti
inc
pop
rorb
in
push
sub
pop
pop
add
xor
mov
mov
cltd
mov
lods
mov
xchg
jle
cmp
pop
fsubrp
push
push
fimuls
icebp
push
mov
xchg
dec
insb
fs
jae
or
cmc
push
icebp
xorb
sub
dec
pop
mov
stos
mov
addr16
mov
add
test
inc
sti
push
push
cld
shl
mov
cmpsb
pop
insl
add
xor
in
in
mov
push
aaa
test
xchg
sbb
jge
testb
repz
or
daa
fwait
add
outsl
gs
add
lcall
lahf
movsb
imul
adc
das
mov
cltd
mov
jae
sbbb
test
mov
push
xchg
adc
flds
add
cmp
lods
dec
pop
xor
sub
mov
in
imul
push
sbb
cmp
push
out
nop
mov
ljmp
jne
cmc
loop
mov
fcoml
pop
push
pop
xchg
mov
lods
decl
clc
lods
repnz
sub
sbb
sbb
ja
xor
pop
mov
lahf
jecxz
push
and
cld
push
orl
mov
xchg
cmp
adc
leave
addr16
data16
cmpsl
fmull
icebp
xlat
nop
mov
scas
cmp
bound
imul
sarb
mov
std
stos
loop
cmp
add
mov
add
jne
fcomip
mov
add
dec
cmp
mov
xchg
mov
mov
and
add
shrl
mov
int3
mov
adc
push
shrl
cwtl
pushf
movsb
sub
cmp
ret
mov
add
pop
xor
hlt
push
mov
sbb
jo
bound
jbe
xor
test
or
sti
popa
aaa
cmc
xor
loope
in
push
hlt
dec
pushf
mov
popa
bound
in
lahf
mov
ror
sub
pop
or
xor
cmpsl
xor
mov
push
and
pop
lahf
xlat
xchg
inc
int3
pop
xchg
and
jmp
add
add
sub
fidivs
mov
out
imul
push
sub
lret
jo
dec
pop
xchg
cmp
das
ljmp
pushf
into
lcall
jbe
js
jno
movsb
xor
test
cmp
cmp
test
cmp
inc
lcall
sbb
or
shll
rdmsr
sbb
inc
cmp
ficomps
sar
mov
sbb
je
sbb
dec
sub
jns
bound
imul
test
mov
or
sbb
ja
push
or
mov
pop
jle
mov
add
fsubrl
xchg
adc
ret
loop
sbb
out
add
dec
xchg
pop
loopne
mov
fisttpll
daa
push
cmp
xor
std
xor
pop
sub
jge
das
cltd
outsl
das
leave
or
loopne
mov
lcall
sbb
repz
cmpsb
arpl
xor
test
ret
iret
pop
sbb
je
insb
in
mov
insl
cvttps2pi
pop
hlt
jl
sub
mov
test
adc
cmpl
and
add
xor
add
push
xor
js
xor
dec
and
xor
sbb
sbb
inc
jl
jmp
or
dec
lret
inc
cmp
pop
lea
aad
add
sarl
mov
data16
mov
pop
jecxz
inc
pop
pop
loopne
repz
sahf
xor
xor
gs
cmp
push
ror
jno
in
lahf
push
xor
xchg
push
out
mov
lret
imul
je
cmp
inc
add
mov
add
mov
and
pop
hlt
aaa
icebp
push
push
stc
test
mov
and
shll
sbb
mov
sbb
scas
adcb
fisubs
scas
mov
lods
stos
arpl
ret
insl
or
enter
jge
mov
adc
pusha
rcrl
ds
and
hlt
jp
add
sub
xchg
add
aas
sbb
mov
idiv
daa
adc
lahf
push
jp
imul
or
dec
mov
out
dec
enter
fadds
jne
repnz
adc
fistps
movhlps
or
inc
mov
std
insl
cwtl
dec
mov
imul
push
insb
test
add
jb
xchg
rcll
dec
pop
jp
dec
sub
and
incb
inc
fwait
lock
dec
add
push
test
mov
mov
xchg
mov
outsl
out
cmp
adc
fistl
xchg
fcmovu
xor
pop
dec
inc
mov
mov
xchg
loope
ret
dec
rcr
mov
leave
inc
fs
enter
mov
fisubs
dec
outsl
inc
imul
pop
cld
jmp
mov
sbbl
out
push
or
sahf
sbb
sti
push
inc
hlt
cld
gs
adc
pop
ja
sub
lods
inc
dec
cli
test
rorl
cmp
jnp
mov
out
aaa
aaa
sub
jmp
xor
mov
or
mov
xor
mov
fwait
bound
jle
jle
aaa
xchg
out
xchg
je
jecxz
push
and
loopne,pt
pop
mov
pop
lahf
outsb
and
test
and
cmp
popf
ja
addr16
push
dec
outsl
adc
ja
mov
inc
jo
push
xor
test
fwait
pushf
mov
pop
sbb
sub
and
addr16
pop
sar
sub
jl
out
mov
in
loop
in
cmp
inc
repnz
in
ds
mov
out
jne
fcomi
cmp
mov
test
cmp
repnz
out
ljmp
icebp
iret
adc
jmp
enter
pop
pop
popf
cmp
ljmp
add
aam
inc
jp
and
push
mov
jbe
xor
jmp
sub
xor
pusha
adc
fldenv
or
inc
push
fstl
inc
fstps
or
lret
loope
push
dec
sbb
push
stos
dec
sahf
in
cmp
xor
mov
iret
inc
mov
fisubrl
inc
ficoms
mov
adc
mov
rcrb
inc
les
sqrtps
dec
call
xor
fstl
js
xchg
pop
xor
push
pop
sbb
rcrl
inc
xchg
jbe
mov
cli
sub
shll
add
fdivrp
xor
ljmp
jecxz
sarb
out
nop
sub
sub
mov
mov
les
ficoml
xchg
dec
mov
cmp
pop
aaa
add
pop
cmp
addr16
mov
stos
dec
adc
dec
mov
xor
fsubs
xchg
movsb
jb
xlat
aad
dec
imul
iret
xchg
movsb
push
jnp
test
test
cmp
pusha
iret
inc
pop
inc
jmp
jne
nop
lea
xor
in
mov
sbb
jmp
test
jecxz
hlt
xchg
daa
fistpl
ret
pop
jo
repz
stos
cmpsl
loopne,pn
mov
add
test
lods
in
adc
cwtl
jns
inc
vpsubd
aad
push
mov
loopne
hlt
xchg
push
push
movsb
lcall
fistl
insl
jge
lds
rol
cmp
sbb
dec
mov
mov
out
mov
iret
cli
movsl
mov
fwait
jo
icebp
rcrb
icebp
mov
push
repnz
push
fmuls
or
test
dec
and
mov
jp
lret
sbb
dec
mov
inc
sub
dec
stos
jecxz
pop
test
repnz
loop
jns
outsl
dec
out
scas
sbb
ja
cmp
inc
fdivp
jo
mov
scas
shrl
inc
inc
and
mov
loopne
xchg
inc
sbb
test
out
xor
out
cmpsb
fs
fldenv
jl
add
inc
ror
mov
xor
cmc
inc
mov
push
inc
clc
xor
in
jecxz
jge
inc
fistl
loope
ret
xor
ss
mov
insb
mov
xor
inc
mov
aad
mov
mov
clc
adc
fstpl
negl
ds
inc
mov
lock
or
bound
mov
gs
cmpsl
repnz
pop
fcmovb
mov
in
sub
xor
and
dec
and
push
jb
dec
xchg
insl
push
mov
fidivs
stc
push
push
push
xor
add
jns
mov
add
xchg
mov
mov
and
xchg
dec
xor
sub
mov
pushf
test
push
or
mov
mov
or
icebp
ja
jo
nop
sub
push
lret
repz
popa
mov
pop
or
or
jp
push
fcomps
in
test
je
mov
inc
cmp
sub
gs
adc
aas
dec
lock
inc
mov
cli
jbe
mov
and
aad
mov
cmp
nop
or
pop
cli
mov
lds
cmp
aam
movsl
sbb
mov
or
mov
mov
test
fisubrl
pop
test
les
jbe
rorb
ret
cmpsb
mov
adc
push
push
js
ficompl
dec
adc
or
sub
dec
data16
sbb
enter
pop
adc
mov
mov
push
repz
negb
jno
mov
mov
lea
rcrb
or
bound
loope
fisubrl
xor
mov
cmpl
ss
sbb
gs
xor
outsb
inc
pop
xor
xchg
sbb
aaa
filds
es
jge
add
addr16
inc
lea
popa
xlat
push
das
inc
jle
add
cmpsl
jb
sub
dec
push
gs
pop
pop
hlt
sub
iret
das
sub
jp
jno
je
stos
push
push
xchg
mov
push
sbb
dec
fisubrs
xchg
out
inc
push
pop
test
aaa
hlt
lcall
ds
adc
popa
pop
shlb
adc
cmpsl
jo
or
movsl
imul
cs
das
pushf
mov
cmc
movsl
xchg
out
les
shl
push
aas
int
or
lods
push
std
cwtl
mov
inc
stos
xchg
and
sub
cmpb
mov
hlt
aaa
mov
push
adc
add
arpl
movsb
sahf
sbb
cs
pop
mov
scas
into
dec
sub
xor
cmp
mov
xchg
fs
popa
shrb
dec
out
xchg
jne
into
inc
inc
mov
cmc
icebp
test
ljmp
pop
inc
icebp
outsl
cmp
mov
cmpsb
std
xor
pop
insl
negb
sub
mov
loopne
mov
and
inc
rclb
in
fadd
outsb
scas
and
les
jmp
cmp
ljmp
xchg
out
add
xchg
inc
lods
mov
dec
sahf
jl
push
dec
mov
cmpsb
cmp
mov
pushf
xor
js
into
clc
jle
push
arpl
cmp
push
jno
ret
ljmp
adc
mov
popf
outsl
imulb
jo
push
into
shll
adc
push
test
ss
xor
loop
sub
lods
cmp
pop
repz
lret
movsb
inc
mov
icebp
add
xor
mov
jno
ja
fldcw
dec
push
jns
idivb
pop
jne
lahf
cmc
lret
imul
sub
js
or
dec
xlat
or
mov
nop
fnsave
add
pop
dec
inc
into
lahf
les
cmpsb
xor
jecxz
loope
adcb
adc
cmp
dec
shlb
dec
pop
inc
int
cli
insb
ljmp
mov
add
push
jbe
xchg
pop
push
dec
ja
mov
cmp
inc
mov
push
push
pop
lcall
mov
mov
aas
push
in
scas
mov
das
lcall
mov
pop
test
mov
shrw
push
fwait
adc
hlt
je
mov
push
imul
in
mov
sub
stos
mov
push
movsl
mov
mov
xchg
fcmovbe
imul
stos
sub
lret
aas
lret
or
enter
pusha
fidivl
sbb
cmp
jle
pop
outsb
je
lods
into
lahf
ret
pop
bound
fcompl
test
xor
pushf
xchg
jle
test
out
pop
ret
jg
out
inc
stc
fs
or
in
jg
in
cmpsl
add
add
mov
jns
mov
push
jl
lds
enter
insb
in
and
nop
lcall
sarl
imul
mov
mov
in
lahf
dec
daa
or
jg
dec
imul
ret
jle
daa
mov
jnp
jge
cmp
mov
imull
xor
sub
movsb
dec
iret
rolb
sub
push
add
and
fstpt
cld
pop
icebp
lahf
insb
dec
xor
sbb
xchg
and
scas
add
cld
shll
mov
adc
lret
out
test
inc
rcll
jp
outsl
out
imull
lock
inc
lahf
push
sti
sub
repnz
mov
push
daa
out
cmp
sahf
js
mov
divl
push
outsb
dec
or
rol
pop
mov
in
mov
in
adc
addl
jle
pop
sbb
jmp
and
insl
dec
and
lcall
test
out
je
push
aas
push
cmpsl
dec
in
icebp
data16
push
adc
mov
pop
daa
lods
icebp
lcall
cltd
hlt
lea
testb
inc
mov
sub
std
fldcw
jecxz
fstpt
addr16
mov
notl
mov
or
jnp
repnz
gs
scas
hlt
movb
pop
push
fidivrl
jno
addr16
jns
jle
adc
loopne
inc
jae
ret
ficoms
inc
loop
add
fsubl
push
sbb
xor
imul
orb
or
stc
cmp
push
adc
and
and
in
xlat
inc
je
jno
das
mov
push
aas
push
stc
scas
inc
mov
lret
sub
inc
push
fstpt
jg
push
push
cmp
mov
mov
pop
je
inc
pop
lds
lds
push
lods
xchg
imul
pop
mov
or
or
sbbb
pushf
iret
xchg
or
pop
push
or
mov
adc
loope
pop
insb
cmpl
pop
cmp
or
imul
pushf
jno
adc
into
pop
and
add
test
xchg
outsb
cmpsb
aad
xchg
or
imul
sbb
dec
mov
pop
lea
bound
sbb
push
cmp
imul
mov
in
sbb
scas
xchg
sub
pop
clc
xor
out
adc
mov
and
adc
xchg
addl
call
test
jnp
adc
xor
and
sub
leave
push
negb
xchg
ret
inc
xlat
notl
sarb
mov
cmp
mov
repnz
call
les
push
lret
jns
adc
push
xor
ficoms
clc
jmp
jno
icebp
lock
fistpll
lods
sbbb
add
push
push
mov
mov
pop
or
mov
sahf
sbb
xor
xor
mov
cmpsl
aam
or
je
rol
jge
fs
jmp
dec
sbb
jmp
iret
aam
or
mov
cwtl
jnp
lods
dec
or
dec
push
or
and
loop
imul
mov
mov
inc
push
ficomps
push
cmp
mov
jl
ja
jo
push
push
mov
aad
sbb
das
or
out
iret
adc
xchg
mov
ds
inc
pop
idivl
and
mov
lods
pop
mov
leave
outsl
xor
movsl
test
sbb
push
jno
lods
mov
pop
sub
jne
sub
inc
inc
xor
ja
jp
adcl
or
cmc
inc
cmc
fisubrs
sub
xchg
cmc
imul
xchg
sub
add
arpl
add
and
fiaddl
xchg
push
cmpsb
or
push
push
cmc
shll
out
sub
jecxz
and
mov
mov
dec
mov
stos
aas
mov
shlb
push
adc
lea
cmpb
fisubrs
mov
inc
jae
movsl
call
jl
ds
fidivrs
nop
mov
xor
adc
jmp
aaa
mov
add
pop
xor
pop
cmp
inc
jb
lods
sub
in
in
bound
insb
add
cmpl
sbb
mov
push
xchg
mov
sub
mov
xchg
orl
sbb
and
push
outsb
push
adc
lcall
leave
sahf
mov
sub
fmuls
js
hlt
sub
or
rorb
arpl
mov
fdivs
ds
mov
push
pop
mov
sbb
out
cmpsl
std
mov
stos
int
ds
sbb
decl
mov
test
xor
les
mov
icebp
xlat
push
lcall
pop
ja
mov
mov
mov
sarb
xchg
mov
jb
rclb
mul
xchg
mov
cmp
xorb
loopne
shlb
and
adc
add
jo
pusha
xchg
push
movsl
inc
mov
inc
mov
jne
add
shlb
in
cmc
jo
pusha
xchg
push
movsl
inc
mov
inc
mov
jne
add
shlb
in
cmc
jo
fs
push
movsl
jno
test
push
cmpsb
xorb
loopne
push
and
fistpll
in
addb
call
dec
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
cmp
or
sbb
aam
adc
cltd
pop
mov
dec
in
pop
jae
int3
jg
sub
cmp
or
sbb
insb
fildll
ljmp
push
pop
mov
dec
sahf
pop
outsl
int3
jg
xor
mov
fs
push
incl
lods
pop
lahf
pop
cmc
adc
daa
mov
adc
fsubrl
jnp
movsb
fistpll
int
vmovntdq
dec
ja
xor
movsl
add
and
in
pop
in
or
mov
mov
outsb
cmp
and
mov
push
addr16
aaa
inc
xchg
out
push
xchg
jg
add
lods
jne
shl
push
arpl
dec
inc
or
mov
ret
fpatan
ds
iret
insb
iret
insb
adc
xchg
dec
cmovb
shlb
jns
xor
jo
jmp
push
out
inc
xor
push
jecxz
aas
je
and
lahf
push
jo
cmpsl
dec
call
out
fsts
dec
je
pop
les
xlat
jae
arpl
pop
sbb
into
pop
fcmovbe
cmp
sbb
insb
fistpll
incl
lods
pop
movsb
das
xchg
aas
test
pop
in
jg
leave
sub
dec
lret
jns
outsb
xchg
sbb
dec
ret
sbb
mov
sub
in
push
jg
jae
insb
mov
out
cmp
outsb
push
sbb
sahf
sub
test
sub
cmp
push
fistpll
lcall
pop
mov
dec
in
pop
cld
outsl
int3
jg
sub
cmp
or
sbb
insb
fistpll
lcall
pop
mov
dec
in
pop
cld
outsl
int3
jg
sub
das
adc
fwait
push
adc
and
xor
mov
sbb
out
inc
je
outsb
inc
loop
sub
sahf
subl
push
mov
xlat
andb
stos
sbb
mov
inc
sbb
add
xchg
mov
push
fsubp
divb
dec
test
cmp
outsl
pop
rcll
js
push
outsb
xchg
xor
fdivrs
loopne
sub
or
or
je
xor
sbb
imul
loop
das
rcll
loopne
mov
dec
or
cmpsb
scas
imul
fsincos
adc
inc
les
xor
push
push
mull
loope
mov
movsb
andb
dec
dec
dec
adc
pop
test
jne
call
mov
add
fldl
cmpl
ds
and
or
inc
aaa
jmp
sti
mov
sub
outsl
and
push
pop
and
push
sbb
adc
lahf
cmp
cmp
jbe
and
mov
jo
xchg
add
cmp
daa
shlb
xchg
loopne
lret
cmp
and
mov
mov
xor
jne
pushf
mov
xchg
les
jbe
or
sbbb
and
lcall
mov
jge
ljmp
xchg
je
xor
add
mov
sub
in
ficoml
movsb
scas
cs
and
loope
dec
push
call
xor
sbbl
vmwrite
sahf
push
or
push
fcoms
ss
cmc
fs
adc
jl
enter
lret
inc
xchg
fisubrs
clc
into
inc
inc
sahf
into
mov
ret
and
out
test
add
pop
inc
lods
mov
dec
insb
das
jns
sahf
lret
insl
xchg
cmp
xor
cmp
insb
or
adc
sub
xchg
loope
lcall
test
test
mov
loop
int3
fisubrs
mov
ret
or
sbb
and
pushf
jae
fcmovu
add
aam
pop
in
cmp
cld
outsl
dec
push
outsl
ret
adc
cmp
push
sahf
pop
mov
mov
movsl
std
cmpsl
insl
mov
mov
push
jg
mov
repnz
sbb
jno
stos
fdivr
xor
and
lds
repnz
xor
jge
mov
add
jmp
jbe
xchg
dec
es
ficoml
mov
loopne
imull
cs
mov
mov
adc
scas
lods
push
movl
cmp
int3
cld
and
into
xchg
or
push
pop
sub
mov
daa
call
in
paddusw
cmp
les
jns
and
pop
outsl
enter
sbb
lcall
xlat
push
imul
lret
les
sub
rorl
mov
mov
xor
inc
loope,pn
mov
and
jns
jp
test
push
pushf
int
jl
mov
stos
push
jb
pushf
testl
push
das
adc
loopne
xchg
outsb
loopne
add
cs
movsb
cmp
rclb
and
xchg
pop
jmp
sbb
mov
inc
and
push
test
shrl
ja
ret
jnp
test
shl
jo
adc
in
push
fisubrs
push
mov
rol
mov
lods
fdivrl
mov
xchg
scas
sti
fs
repz
jno
pop
loope
jmp
cs
out
pop
inc
imul
adc
mov
clc
loopne
clc
int3
call
les
jle
xchg
push
pop
mov
in
mov
sub
cld
mov
adc
mov
rorb
push
sti
add
mov
push
testl
or
dec
inc
mov
movsl
imul
subl
cs
shl
inc
mov
aad
cld
mov
add
std
mov
adc
xchg
filds
pop
mov
ds
into
roll
mov
cmpsb
pop
aam
imul
shlb
fneni(8087
int
jg
shlb
fdivrp
xchg
xorl
out
loopne
shll
rcrl
ljmp
insl
mov
mov
lea
retw
clc
and
mov
rcrl
xchg
cmpsl
cld
nop
mov
adc
add
mov
jns
and
push
loopne
xor
jns
rcll
jp
sbb
es
ja
test
xchg
sbb
subb
mov
jo
add
sbb
sub
in
mov
int3
aam
insl
aad
fwait
xor
aaa
mov
dec
sti
in
sahf
dec
sarl
inc
pop
fimull
or
cmp
leave
pop
aaa
sti
rorl
or
add
cmp
les
add
mov
nop
xlat
les
movsl
mov
mov
addr16
jge
pop
lret
std
add
in
js
ja
subb
inc
aad
jnp
in
pusha
aas
cmpsb
pop
add
inc
jg
mov
inc
push
idiv
clc
adc
push
xchg
add
out
sub
jge
pushf
jno
cmp
lods
fsubs
test
or
mov
push
xchg
pop
cwtl
mov
lea
xchg
jmp
inc
xchg
bound
stos
ficoms
popa
mov
mov
add
jecxz
xchg
pop
sahf
dec
lods
sub
dec
xchg
pop
dec
scas
imul
mov
pop
mov
cmpsl
into
ret
in
cs
fistpll
xlat
xchg
pop
xchg
mov
loopne
xchg
xchg
in
adc
and
test
out
jp
fwait
test
push
aad
lret
mov
inc
xchg
mov
mov
mov
mov
ret
repnz
push
popa
adc
xchg
mov
xor
leave
mov
pop
mov
sti
inc
sub
sbb
loope
push
sbb
inc
cmpsb
xchg
out
pop
sub
xchg
dec
jns
push
loop
incb
in
and
jle
leave
sbbb
mov
pop
test
aad
xlat
adc
inc
mov
mov
fldenv
testl
inc
or
stos
pop
dec
cmovle
add
decl
add
push
addb
adc
sbb
adc
inc
push
dec
test
or
mov
mov
leave
xchg
lret
cmp
xlat
fsts
push
jns
dec
mov
and
mov
ljmp
pop
lret
jbe
fnsave
lret
arpl
aad
shll
fnstcw
stc
stos
and
sub
jns
mov
popa
punpckhbw
sbb
push
jns
cmpsl
dec
push
lret
inc
xchg
xchg
xchg
fsubp
xor
mov
shlb
mov
mov
ss
push
clc
adc
dec
repnz
xchg
cmpsb
sbb
and
mov
out
pop
jp
jae
rclb
jle
arpl
nop
cmpb
lods
adc
xchg
sbb
adc
stos
ret
pop
jg,pn
sub
or
test
ret
and
je
pusha
fcoml
imul
out
cmp
adc
aad
iret
mov
out
jo
ds
pop
mov
jne
mov
subl
in
mul
repz
into
dec
cmp
pop
adc
fsts
movsl
dec
xchg
daa
pop
jae
inc
and
sub
cmp
push
lcall
fnstcw
outsl
or
xchg
fcoml
mulb
cmpsl
inc
mov
push
mov
mov
add
mov
jae
test
mov
xchg
fsts
sbb
push
sti
and
and
mov
jo
in
mov
cmp
mov
loop
ficoml
xor
fs
dec
sbb
and
std
xchg
out
dec
pop
mov
rorb
jno
cmc
leave
jp
inc
cs
fstpl
sbbl
sub
enter
sahf
dec
sub
std
es
sbb
cmc
orl
inc
shl
mov
lret
div
ds
jl
and
jb
addr16
std
jb
cmp
xchg
movsl
loop
test
push
gs
ret
mov
aas
jb
loope
or
cmp
sbb
aad
xchg
sub
jmp
mov
xor
xchg
repnz
movsl
cs
xor
adc
inc
sub
xor
xor
js
xchg
xor
in
mov
je
sbb
cmpsl
adc
cmp
mov
mov
shll
sub
ss
mov
loope
push
inc
jle
mov
sti
stc
xchg
and
clc
test
adc
out
popf
nop
cmp
mov
sbb
rcll
adcb
pop
mov
stc
adcl
vpmullw
fisubs
lret
insl
int3
adc
push
nop
mov
add
roll
xchg
rcrl
sub
cltd
inc
cmpps
in
mov
repz
mov
repz
lret
jge
and
xchg
addr16
cmpsb
enter
or
mov
sbb
stc
outsl
mov
jl
mov
jne
or
push
push
cmp
inc
rorl
mov
aaa
cs
aaa
mov
adc
dec
dec
out
mov
pusha
jno
or
and
sub
xor
add
mov
mov
xor
loop
adc
push
mov
adc
pop
push
sti
movsl
mov
filds
fistps
xor
mov
ret
mov
sahf
or
mov
mov
mov
cltd
add
in
xchg
movsb
or
aam
push
int3
push
sbb
mov
mov
shll
dec
adc
mov
pop
and
pop
mov
hlt
test
lret
outsl
rcl
scas
fwait
dec
pop
xchg
test
leave
mov
dec
iret
pop
xchg
jo
outsl
jl
mov
xchg
mov
and
mov
adc
inc
ljmp
sbb
xor
jl
pusha
ds
notb
nop
add
js
lock
push
scas
mov
add
adc
xchg
jno
shl
jmp
das
mov
lcall
and
test
lods
shlb
xor
ss
ret
xchg
rorl
and
adc
and
jae
sub
mov
inc
shll
push
sarb
ljmp
jb
ja
pop
movsl
adc
addr16
insb
aaa
cwtl
test
cmp
push
jbe
pop
or
dec
fcoml
lock
pop
xchg
ficoms
xchg
mov
mov
dec
push
fiadds
roll
jnp
xor
outsb
aas
push
jo
mov
push
xchg
cs
rol
push
and
pop
inc
cld
das
pop
out
inc
xchg
aad
stos
loop
imul
out
mov
mov
adcb
jg
or
jmp
jge
mov
mov
call
sbb
dec
cs
cwtl
mov
divb
fisubs
sahf
icebp
dec
mov
sahf
lahf
sbb
in
roll
data16
ljmp
and
or
popa
jmp
cmp
pop
xor
cwtl
stos
out
lahf
jb
adc
sbb
sahf
sub
xchg
cmp
push
xchg
bound
repz
das
fldenv
adc
add
push
xchg
lods
jl
sub
mov
sahf
push
push
ja
leave
stos
add
lds
jae
jg
sub
inc
add
jne
push
pop
in
cld
push
jl
jecxz
push
ja
aas
ret
movsl
stc
lods
fnstsw
iret
hlt
iret
mov
gs
or
call
push
out
notb
inc
push
dec
enter
add
jmp
jno
jle
mov
add
lret
cmp
stos
test
xchg
stc
mov
mov
pop
or
mov
mov
aam
cli
adc
lods
aad
cmpsl
push
xor
mov
xlat
xchg
and
push
lret
lock
mov
movsl
jo
std
jne
sti
pop
dec
xchg
notb
sub
cld
mov
cmc
rorl
cmc
mov
arpl
pop
mov
adcl
cli
inc
inc
or
mov
test
mov
cmc
sub
mov
cmp
inc
ror
in
inc
bound
mov
js
mov
inc
cwtl
sbb
mov
cld
testl
xchg
mov
jp
cmp
stos
inc
sbb
jecxz
ja
mov
pop
lcall
movmskps
push
xchg
std
mov
int3
lods
xor
cmp
es
addb
call
into
jne
aad
repz
out
jae
xchg
sub
into
in
mov
push
jecxz
xchg
pop
mov
xchg
ljmp
xor
pusha
inc
jb
jge
into
aam
insb
lods
cmp
dec
add
cmpb
sub
jno
clc
pushf
push
pop
sbb
pop
lahf
rolb
nop
xchg
add
cmp
xchg
add
add
inc
xchg
sar
xchg
pop
pop
fwait
xor
sub
add
sbb
rorl
rcl
fdivs
out
push
ljmp
leave
scas
int3
fnsave
loopne
cli
insl
fmul
add
in
rcr
sahf
sbb
xchg
lods
repz
dec
call
out
out
jecxz,pt
pop
and
inc
pop
out
inc
stos
les
pop
test
pop
mov
fcompl
jns
loop
lret
push
cmpsl
lret
mov
scas
sbb
test
mov
movsb
icebp
sbb
sahf
lods
lds
call
jo
push
fnstenv
pop
xchg
fdivl
clc
mov
sarl
stos
jbe
and
pusha
out
adc
and
and
and
std
lods
adc
jo
dec
and
inc
fsubs
mov
or
inc
cmp
jns
push
xor
cltd
ss
cmp
pop
push
jae
add
mov
jecxz
dec
bound
mov
jle
fsubs
xor
inc
stos
push
inc
fsts
lret
lcall
xchg
push
ds
jo
adc
sbb
pop
mov
outsl
repz
rclb
test
xchg
lahf
jmp
mov
ror
sub
jnp
outsb
movsb
jbe
push
sub
or
lcall
movsb
in
pop
sbbl
popf
jno
rcll
int3
add
xchg
jo
call
jo
popa
enter
add
xchg
repnz
rolb
imul
inc
loopne
mov
test
insl
xor
mov
data16
mov
shll
xchg
add
xchg
jae
outsb
loopne
test
js
push
stos
cmc
mov
xchg
xchg
pusha
roll
ss
jecxz
jge
cmp
pusha
pop
mov
aaa
pop
push
dec
ss
inc
jb
filds
mov
int
sbb
xor
mov
mov
xor
or
lds
adc
in
decl
mov
sar
sub
or
push
js
dec
setle
mov
cmp
jb
jg
xchg
std
xchg
stos
xor
jp
cmp
mov
out
sbb
jge
push
int3
loopne
fs
gs
mov
ds
cmpsb
mov
mov
sub
jge
mov
jmp
sti
clc
dec
and
inc
aaa
push
mov
fwait
sbb
push
fwait
mov
scas
movsb
aam
out
enter
and
loopne
sbb
jle
addb
dec
xchg
jl
movsl
push
pop
in
lods
push
ss
js
push
push
aam
inc
mov
push
dec
sahf
jnp
rolb
jae
sahf
aas
dec
cmp
addb
jno
mov
push
jae
push
and
nop
lock
sub
sub
add
faddl
andl
and
jbe
pop
cwtl
jns
in
repnz
cltd
rcrl
int3
sbb
sbb
shrb
mov
and
cmp
sbb
movsb
dec
loop
ret
dec
lock
icebp
jecxz
ret
jg
or
inc
and
inc
ljmp
data16
in
fists
pusha
fsubl
adc
pushf
xchg
push
dec
cmpsl
test
and
mov
shl
mov
fwait
test
push
in
andb
mov
xchg
xor
outsl
cmpl
leave
xchg
inc
gs
and
pminub
dec
dec
jne
lret
rcll
bound
stos
ljmp
rolb
or
lret
pop
cli
add
mov
mov
outsb
mov
xchg
mov
jo
scas
sbb
outsb
pop
and
mov
xlat
outsb
aas
cmp
jbe
lods
lcall
dec
pop
mov
ffreep
jg
in
dec
cs
push
mov
sti
arpl
lds
or
imul
test
or
in
mov
addr16
mov
add
ret
cmp
popf
dec
or
push
and
inc
out
xchg
push
out
addr16
das
shlb
mov
and
imul
push
addb
jp
shll
jnp
push
negl
mov
fsts
out
and
outsb
cltd
mov
mov
xor
popa
insb
dec
hlt
mov
sub
pop
pop
pop
and
xchg
ror
and
and
fcoms
iret
push
inc
pop
mov
movsb
outsl
sar
out
js
clc
cmp
jae
cmpsl
jns
subb
sub
stc
pop
cmp
adc
pop
pop
dec
mov
jecxz
mov
stos
xchg
pop
cld
xor
dec
cmc
rcrl
aas
xor
adc
loop
stos
xor
leave
cli
sub
out
rcrl
lret
jmp
fmulp
sbb
push
or
imul
dec
aaa
or
mov
aaa
pop
leave
scas
insl
pop
aaa
sbb
xchg
icebp
cmpsl
out
sub
dec
jae
inc
dec
xchg
rsm
mov
out
negb
jp
push
loopne
fwait
ret
push
sbb
les
sub
pop
sbb
sbb
inc
scas
inc
fadds
mov
mov
bound
jmp
test
pop
dec
add
in
rcr
es
icebp
sarb
inc
aad
cmp
inc
sbb
mov
pop
ljmp
test
mov
jo
inc
fidivs
pop
adcl
mov
addr16
imul
call
mov
lret
push
iret
pop
outsl
or
pop
hlt
mov
pusha
pop
lock
insb
aaa
pop
add
xchg
dec
xor
pop
sbb
sbb
imull
mov
push
sbb
movsb
jmp
mov
mov
pushf
insb
cwtl
add
jmp
cld
test
sub
and
into
pcmpgtd
inc
cmp
mov
push
lret
jb
loop
push
xor
into
andb
fmuls
mov
sub
bound
mov
mov
test
jnp
mov
std
sbb
jno
mov
dec
into
cmpsb
test
sahf
add
add
aad
stos
movsb
pusha
jae
fwait
mov
in
jmp
pop
fcmovb
xor
out
out
dec
insb
std
pop
xchg
enter
inc
sub
gs
mov
dec
mov
test
es
sbb
in
dec
dec
inc
mulb
stc
insb
aam
cmp
aad
jns
pop
into
enter
sti
dec
adc
and
xor
or
mov
sahf
sbb
jmp
cmp
jo
scas
loope
sub
neg
in
lods
push
inc
lret
dec
addl
xchg
pop
pop
push
clc
mov
int3
repz
dec
loopne
jnp
jge
mov
test
rol
daa
mull
sub
shll
push
sbbl
mov
fiaddl
adc
jge
test
cmp
push
roll
add
pop
cmp
jbe
insb
lods
fstpl
popf
lret
mov
or
ret
or
sbbb
call
mov
je
in
enter
scas
push
jmp
std
loopne
push
aaa
incb
mov
clc
dec
sbb
jl
push
lahf
jg
ret
cmp
rcrl
ficompl
fisttps
test
jnp
test
jbe
jge
jmp
stc
data16
ret
lcall
cmpb
pop
incb
shl
push
clc
fmull
push
subb
scas
aam
xchg
scas
pop
xor
and
insl
mov
das
sbb
jmp
loopne
popa
sarb
pop
icebp
into
push
mov
enter
lods
cwtl
mov
sbb
test
fimull
pusha
pushl
addr16
test
inc
addr16
aaa
arpl
jbe
aam
inc
cmp
sub
push
fwait
jp
nopl
mov
and
mov
and
mov
movsl
cmp
add
js
lahf
sbb
in
clc
dec
xchg
jg
add
inc
dec
in
jl
sahf
sub
inc
fs
pop
fnstenv
mov
and
lahf
into
and
pusha
pop
test
sub
mov
push
scas
push
jge
sbb
cs
call
frstor
pop
movaps
cmp
jo
fldenv
int
push
outsl
neg
adc
jno
enter
call
push
out
jmp
inc
ror
orb
outsb
addr16
mov
jae
push
mov
xchg
push
cld
and
stc
ljmp
push
or
sbb
insb
fistpll
lcall
pop
mov
dec
in
pop
cld
outsl
int3
jg
sub
cmp
or
sbb
insb
fistpll
lcall
pop
mov
dec
in
pop
cld
outsl
int3
jg
sub
cmp
or
sbb
insb
fistpll
lcall
pop
mov
dec
in
pop
cld
outsl
enter
sub
sbb
insb
fistpll
lcall
mov
jmp
xlat
adcl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
mov
outsb
xchg
jg
and
rolb
int3
xor
and
push
nop
inc
andb
mov
mov
mov
add
xor
and
rolb
rclb
loopne
repz
push
jno
popa
mov
mov
mov
sbb
sub
cmp
xor
cli
push
test
shrl
out
push
out
mov
std
add
jmp
jmp
scas
shl
nop
pop
add
hlt
jo
pop
jnp
mov
les
loopne
rcrb
xchg
test
push
sub
lods
loopne
adc
cltd
in
adc
add
das
rolb
xchg
int3
adc
add
fisubs
addb
push
add
push
shll
in
rclb
loope
add
leave
pop
mov
adc
cmp
insb
push
mov
cmp
leave
cld
icebp
pusha
loope
jns
je
popa
mov
loopne
clc
sub
imul
stos
xor
or
or
daa
lods
out
rcl
aam
in
lock
dec
pusha
mov
push
adcl
adc
add
sub
cmp
enter
jmp
inc
xchg
jno
popa
in
lds
jno
popa
xchg
inc
movsb
outsb
mov
test
mov
inc
and
mov
int
sub
inc
lds
jmp
xor
push
cltd
dec
inc
test
inc
mov
and
jle
out
scas
and
nop
jl
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
cmp
repz
sub
adc
stos
mov
jl
push
ljmp
rcl
insb
adc
cli
dec
xorb
and
and
jmp
repz
les
sahf
stc
adc
fimuls
hlt
outsb
test
xchg
popa
jne
gs
call
bound
imul
push
push
mov
xor
push
inc
movsb
insl
mov
jle
pop
mov
adc
insl
mov
dec
sub
in
add
push
jns
enter
lahf
pop
xchg
por
adc
push
sbb
in
sbb
xchg
adcl
pop
xor
xchg
mov
pop
inc
add
mov
gs
jo
lret
dec
lahf
movsl
and
pop
xor
cmp
add
add
xor
test
enter
pop
adcl
sub
bound
mov
xchg
cmp
inc
inc
inc
fnsave
add
cmp
ljmpw
push
cs
add
bound
sahf
cmp
jp
jnp
sbb
jl
or
daa
cmp
mov
jmp
push
mov
loop
cli
inc
pushf
inc
xchg
gs
push
mov
push
sub
fdiv
mov
sub
ret
rcll
scas
sbb
sbb
stc
mov
jcxz
orl
into
popf
out
jg
add
repnz
call
ret
push
dec
mov
lea
shlb
jg
push
jmp
out
ja
dec
mov
jns
test
mov
or
pop
and
rclb
inc
push
sub
push
mov
aad
out
lods
adc
cmp
stos
mov
add
insb
pop
lcall
pop
mov
daa
loope
mov
gs
dec
push
pop
iret
adc
xor
aaa
xchg
jg
push
lock
lret
les
pop
xor
cmp
or
scas
add
dec
adc
add
je
fstps
jge
mov
push
dec
xor
movsb
and
push
outsb
add
mov
mov
jne
mov
xor
outsb
mov
sub
je
in
das
ljmp
dec
in
push
lods
lret
jg
hlt
mov
add
mov
leave
ja
xlat
jmp
les
jbe
je
fisttps
sarb
sub
fsubl
mov
ss
rorl
pop
dec
scas
imul
xorl
or
pushf
cld
test
mov
push
xchg
mov
cmc
fwait
lret
jno
mul
fs
rcr
popa
testl
jle
inc
push
inc
xchg
fdivr
rcrb
xchg
pop
decl
xchg
mov
dec
iret
scas
das
dec
or
xchg
dec
or
aad
nop
push
pusha
scas
fs
pop
dec
xchg
popf
mov
jbe
out
cmp
jbe
jnp
cs
xchg
out
mov
test
push
jns
lock
arpl
push
xchg
inc
adc
imul
inc
sbb
and
daa
push
xchg
movsb
jnp
ret
cmp
repnz
xchg
pushf
les
rcl
inc
iret
and
mov
mov
and
mov
push
and
dec
xor
xchg
loope
pop
insb
loope
mov
aaa
cmp
fsts
dec
test
xchg
mov
shl
lahf
pop
repz
jnp
ljmp
fildl
inc
test
shrb
lods
fmuls
aaa
rol
jecxz
sbb
test
pop
bound
pop
fs
cltd
sbb
cmp
dec
sbb
lahf
xchg
cmp
mov
lret
cli
pop
push
or
movsb
mov
iret
push
shr
jecxz
in
push
mov
mov
hlt
and
popa
jno
addb
mov
dec
or
sbb
xchg
les
mov
adcl
push
ss
clc
lcall
pusha
xchg
leave
xchg
add
jnp
stos
call
ss
pop
pushf
inc
lret
push
scas
pop
jp
fistl
add
loop
and
pop
rclb
seto
xchg
rorl
xchg
sbb
or
cmp
popa
sbb
fnsave
cli
jae
or
repz
iret
mov
add
jle
testb
mov
mov
daa
cmpsb
imul
mov
xor
sti
loop
fwait
das
adc
fidivs
fnsave
mov
addr16
les
enter
or
xlat
sarl
ficoml
xchg
xchg
mov
enter
aaa
fiadds
je
mov
movsl
sti
add
push
test
and
pop
mov
push
cmpsb
add
cwtl
test
stos
dec
cmp
xchg
mov
outsb
inc
push
popl
adc
mull
and
xor
sub
sub
fld
cmp
sub
fwait
adc
jo
negb
ljmp
cmp
outsl
mov
sti
stos
outsl
std
adc
xor
or
mov
lods
mov
mov
push
push
xchg
mov
ret
push
cmpsb
ja
ljmp
cwtl
push
lds
popf
and
xchg
mov
adc
test
shlb
ja
add
xor
gs
je
xlat
testl
shr
sbb
or
xor
pushf
fnstcw
adc
cmpsl
out
and
mov
mov
loope
push
fildll
sti
stc
and
cmp
cmp
adc
pop
and
les
fisubs
ret
push
adc
fadds
std
jg
test
xlat
ljmp
popf
sbb
sbb
lods
fsubrs
add
clc
cltd
jae
sub
mov
inc
in
ja
add
push
pushf
pop
xchg
std
fcoms
cwtl
sub
xor
pop
add
aaa
adc
xchg
shll
xor
imul
push
mov
idiv
or
push
nop
icebp
jne
xchg
in
movsl
add
mov
and
rorb
gs
bound
mov
add
mov
lock
and
fldenv
repz
dec
imul
out
std
stos
or
lods
faddl
mov
xor
cld
mov
hlt
push
int
mov
jmp
xor
fcmove
sub
xchg
test
pop
shl
popa
sub
ficompl
add
inc
sahf
icebp
xlat
insl
mov
jno
cmp
inc
and
insl
cld
jp
cmpsb
les
cmpsl
mov
mov
iret
stc
ds
jns
inc
mov
sahf
enter
int
imul
repnz
jbe
push
sbb
mov
inc
enter
clc
add
cld
rol
mov
stc
nop
ds
jbe
sbb
and
test
addr16
and
fldl
fs
icebp
stc
psrld
lods
imul
dec
jge
shlb
jno
add
nop
ret
jge
adc
out
nop
mov
sar
cmp
pop
and
add
mov
sbb
aas
mov
or
je
lahf
pop
lret
into
jo
mov
jg
add
scas
cmp
inc
push
repnz
xchg
lahf
mov
adc
jo
mov
lods
out
sbb
sub
cli
mov
fs
lock
sbb
insl
xor
xor
adc
jnp
jne
out
cmp
or
jecxz
bound
out
push
inc
fsubrl
lods
inc
mov
pop
jo
div
lea
xchg
in
lret
push
bound
jmp
xor
cld
dec
nop
je
gs
push
jno
pop
pusha
inc
mov
xchg
pop
dec
sub
xchg
mov
shrl
ja
jl
mov
orl
add
pop
pop
cmp
test
mov
cld
cld
cmp
leave
mov
dec
cmpsb
pop
xchg
push
mov
push
aaa
sub
and
dec
xor
fistpll
xchg
sub
nop
ret
movsl
dec
inc
jge
pop
movsl
test
outsl
jo
add
cwtl
mov
pop
popa
jno
mov
mov
ss
lods
pushf
insb
mov
cli
sub
jmp
test
fcoms
int
pop
mov
or
xchg
push
mov
push
push
inc
cmpsb
mov
and
mov
fcmovb
shlb
outsl
mov
push
cwtl
mov
hlt
mov
mov
xor
adc
sbbl
jge
lret
xchg
mov
fs
js
repnz
push
inc
loop
or
clc
std
cltd
jge
pop
push
cmpb
adc
push
mov
cwtl
mov
or
mov
pusha
pop
movsl
out
add
stc
inc
adc
mov
int
pop
scas
sbb
jnp
sub
loope
mov
loope
add
push
repz
cmpl
fs
lcall
fidivs
xor
icebp
dec
notl
aas
mov
les
xchg
mov
mov
insl
pop
ret
fisubs
repnz
lds
aam
add
fcmovne
call
dec
or
out
jl
in
out
pop
decl
fwait
jno
cmp
stos
add
inc
cmpsl
cmp
test
out
mov
pusha
in
clc
mov
jnp
cmp
mov
roll
inc
std
pop
push
lods
mov
cmc
fs
arpl
loope
popa
xchg
xchg
inc
test
dec
mov
mov
jle
lcall
pop
push
push
jl
outsl
jmp
das
or
pop
std
insl
and
cli
nop
inc
imul
adc
xlat
arpl
rcrl
pop
stc
leave
dec
pop
xchg
lods
inc
jle
add
cmp
iret
enter
jp
add
pushf
sbb
mov
rcl
test
cmp
inc
push
leave
lods
out
xchg
sbb
jb
xchg
jmp
lahf
jne
cmpsl
jbe
push
mov
cmpsb
mov
xchg
test
es
cmp
sti
hlt
pop
ljmp
ds
sub
das
dec
leave
mov
pop
mov
stc
mov
pop
or
stos
xor
pop
inc
sbb
mov
push
mov
add
adc
push
dec
cmp
mov
add
in
jmp
orl
cmpl
mov
pop
das
adc
and
push
or
outsb
adc
fucom
in
int3
and
cmp
les
lock
repnz
push
xchg
xor
jmp
test
inc
add
fldt
pop
call
int3
xor
mov
push
fst
les
dec
and
sbb
mov
xor
out
dec
pop
lods
sti
ljmp
aam
test
cmp
push
mov
insb
into
out
pop
sbb
dec
xchg
jmp
mov
add
aas
scas
ljmp
imul
xor
lea
inc
sarb
or
out
adc
jo
imul
or
fdivp
ficoml
push
pop
xchg
xor
aad
gs
mov
cmc
das
mov
mov
stos
ja
jecxz
cmp
loopne
fdivrl
mov
mov
add
xchg
shrb
fmull
lds
xchg
fisubrl
enter
mov
sbb
int
cmc
mov
xchg
lods
in
insb
push
xor
push
das
aaa
stc
dec
jne
pop
stc
fmulp
daa
cwtl
std
int
push
mov
adc
ret
adc
cmp
lahf
push
test
insb
mov
xor
inc
in
inc
adc
cmpsb
pop
mov
xor
or
in
dec
pushf
gs
jle
pop
jne
ffreep
push
push
inc
cmc
inc
xchg
mov
bound
test
test
sarb
test
mov
xchg
xor
test
mov
insl
cmp
cmp
mov
push
mov
mov
xor
out
nop
rcrl
insl
je
fmuls
inc
push
dec
jle
inc
push
fwait
aam
arpl
push
jmp
ret
cmp
fmuls
addr16
jmp
cs
mov
aad
bound
mov
mov
add
sahf
mov
cmp
popa
into
cli
lds
inc
pop
ret
dec
das
and
inc
lds
mov
stos
fadd
arpl
xlat
dec
nop
pop
add
stc
xlat
cmp
fs
sub
pop
cmp
scas
loope
hlt
jae
dec
shrl
call
gs
nop
sbb
in
jae
js
xorb
loopne
push
pop
notb
mov
test
xor
pop
orb
pop
scas
test
pop
and
xchg
or
es
cmp
xchg
and
xchg
inc
paddusw
loope
cmp
jb
pop
sub
inc
in
ljmp
stos
sar
cmp
sbb
rcrl
jo
das
icebp
cmpsb
pusha
and
test
bound
pop
int3
push
sbbl
ja
jge
fst
test
mov
dec
test
jle
push
outsl
dec
pop
arpl
jp
add
jp
mov
push
addl
ret
je
jns
sbb
adc
icebp
xchg
cmp
jne
jbe
inc
popf
push
in
sub
pop
sbb
fldenv
mov
and
aad
or
dec
mov
adc
aaa
pop
call
inc
jne
sbb
loope
and
cld
loop
inc
push
push
hlt
push
push
lret
sbb
pop
mov
in
and
stos
jmp
inc
cs
mov
nop
cs
adc
pop
mov
xchg
int
popa
shr
cli
or
push
and
aas
cmp
jg
mov
xchg
or
adcl
inc
sbb
loope
stos
in
popf
inc
dec
mov
aam
fdivl
stos
in
popl
mov
xchg
jmp
sub
and
cmp
sbb
je
in
dec
cmp
in
pop
das
std
int
ljmp
dec
xchg
mov
jbe
cmp
pop
mov
dec
in
popa
test
or
pusha
fildll
fdivrs
cmp
rcrb
xor
inc
shr
sub
add
push
jg
ss
push
mov
and
mov
int3
or
xchg
aad
lcall
cmpsb
xchg
fstpl
inc
shr
fldenv
jp
xor
dec
out
fsts
jecxz
mov
ja
mov
sub
in
insb
fs
inc
fsubl
scas
pushf
inc
das
mov
inc
in
insl
jl
ss
cmp
add
repz
je
add
xchg
cs
mov
loope
shl
loopne
lds
sbb
sbb
mov
cld
testb
jmp
insl
lea
xor
inc
xlat
faddl
gs
inc
pop
mov
jp
inc
lods
jmp
cmp
aaa
stc
jo
fstps
lret
xchg
xor
xchg
aad
push
inc
xchg
push
clc
sbb
mov
sti
sub
lretw
adc
imul
daa
sbbl
lret
add
out
addl
inc
fs
mov
xchg
clc
dec
lea
test
cs
adcl
popf
in
add
lods
out
lods
pop
cltd
loop
cmc
dec
jmp
inc
pusha
mov
fstps
hlt
call
mov
xchg
mov
add
adc
ret
loopne
mov
pop
pop
scas
pop
daa
dec
mov
orl
cmp
mov
jp
add
pop
popa
addr16
sub
add
adc
jmp
aaa
mov
mov
js
xor
mov
cmp
xchg
jb
js
jne
setno
int
sbb
scas
scas
out
pushf
fs
int3
or
scas
push
mov
jle
sub
mov
rorl
sbb
xor
bound
lret
push
xchg
cmp
aad
insb
push
pop
mov
out
dec
mov
push
or
xchg
jo
inc
sub
pusha
cmpsl
pushf
outsl
or
in
mov
cmp
mov
andb
aam
js
sarl
xor
sbb
xchg
imul
mov
repnz
jnp
leave
jmp
xchg
adc
cs
adc
cwtl
push
pop
dec
cmp
cmpsb
jne
jge
jecxz
jns
mov
jp
sbb
test
ja
adc
mov
insb
ret
fsubp
sar
cmp
mov
sbb
in
scas
movsl
sbb
shll
pop
push
or
lods
movsl
arpl
std
sbb
idivb
mov
leave
adc
sbb
push
pop
mov
sub
es
pop
test
pop
push
dec
jno
test
pop
out
lods
je
repnz
repz
mov
jno
clc
inc
imul
mov
jnp
test
es
inc
dec
bnd
incl
mov
mov
add
dec
mov
arpl
lcall
push
xor
in
mov
addr16
jnp
mov
sbb
push
xor
mov
sbb
pop
mov
pop
adc
int
pop
and
mov
sub
sbb
push
rol
in
leave
xchg
insl
loope
dec
xchg
mov
pop
test
cmc
cmp
mov
icebp
push
push
mov
sbb
sbb
pop
xor
sub
enter
or
or
inc
push
mov
std
or
andb
das
xlat
pop
and
insb
xor
loope
int3
mov
stos
ficoml
xor
inc
and
cmp
jmp
jne
jns
jo
mov
aas
inc
xor
push
inc
lock
pop
mov
out
add
dec
and
jno
pop
jmp
imul
push
imul
jmp
ret
sbb
lcall
rorl
adc
mov
pop
mov
and
fwait
shll
ror
inc
in
mov
or
xchg
dec
imul
loop
add
shlb
inc
mov
out
subl
mov
and
sub
lret
ds
lahf
mov
cltd
cltd
inc
mov
popa
inc
xor
mov
gs
lret
jbe
sbb
mulb
pop
in
aam
push
in
sub
xor
hlt
dec
xorl
jae
adc
sbb
xchg
jle
std
mov
lea
lret
cwtl
arpl
stos
inc
dec
scas
add
push
xor
sbb
and
mov
mull
xchg
xor
test
or
lcall
dec
pop
jne
jo
adc
orl
jo
pop
insb
or
pusha
push
cmp
cs
lcall
push
mov
pushf
stos
xchg
cli
cmp
sub
xchg
jnp
pusha
pop
test
insl
ljmp
jp
lea
mov
pop
cwtl
sti
inc
inc
lock
xchg
mov
aad
xor
dec
mov
xor
mov
js
fsubrs
in
or
mov
jle
pusha
dec
xchg
dec
sub
test
nop
mov
int3
fdivs
int3
inc
mov
mov
cld
pop
gs
jnp
jmp
enter
shl
sub
adc
js
mov
jnp
mov
jbe
sub
imul
xchg
fcmovu
pop
sub
mov
aad
cld
out
or
xor
jmp
cs
jne
data16
xchg
repz
scas
pop
ljmp
int3
mov
xchg
mov
sti
xchg
cli
fstps
mov
mov
leave
aam
addr16
popf
or
movsb
push
pause
subl
or
mov
ret
aad
stos
call
push
mov
cli
or
cs
sbb
pop
or
fisubrl
jl
icebp
call
sar
xchg
fsubs
ljmp
lea
xchg
mov
inc
je
push
push
imul
movsl
xchg
mov
in
aam
push
inc
sbb
jbe
add
bound
popf
test
test
ds
mov
int
adc
add
dec
inc
push
push
sbb
movsb
ficoms
mov
cwtl
pop
jg
xchg
mov
orb
jp
out
and
fadd
out
and
fwait
sub
inc
sbb
mov
jnp
aam
add
xchg
jl
hlt
test
leave
out
test
cmp
repnz
push
in
adc
and
ljmp
jge
xor
shrb
push
inc
je
pop
sub
sti
push
add
cmp
gs
pop
pop
xor
not
jmp
addr16
aas
jnp
fdivl
or
shlb
dec
add
hlt
scas
ret
mov
push
test
xchg
into
fisubl
fildll
loope
loop
mov
adc
or
add
int3
ret
popf
fistps
pop
dec
pop
sbb
scas
cmpsb
pop
sub
xor
push
pop
movb
push
mov
arpl
adc
mov
cli
sbb
dec
jge
neg
outsl
sub
out
mov
jle
dec
repnz
sbb
dec
mov
and
out
mov
scas
test
inc
inc
out
xor
or
add
pop
cmpsb
and
cmp
cmp
dec
psrld
lret
pop
sub
inc
sub
pop
iret
mov
dec
out
flds
lahf
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
push
lock
mov
pop
sbb
or
cmp
sub
xchg
mov
pusha
xchg
lcall
push
fisubl
lret
adc
adc
loope
icebp
cmp
sub
pop
mov
push
lcall
push
sbb
cli
add
adc
loope
icebp
cmp
sub
pop
mov
push
lcall
aas
fisubl
insl
test
lods
outsb
cmpl
sbb
pop
jno
xchg
xchg
sti
loop
lea
sbb
sahf
test
inc
stos
out
aad
loope
loope
stos
aad
movsl
mov
cmp
or
mov
push
inc
and
mov
add
cmp
in
aas
jg
pop
xor
lcall
scas
mov
mov
lahf
mov
fstpl
insb
or
push
aam
xchg
pop
mov
mov
pop
popf
jle
and
je
adc
and
push
fidivrl
aad
add
dec
pop
stc
shrb
xchg
jb
fsubl
xlat
push
mov
and
mov
mov
cmp
or
int
jp
inc
xor
scas
mov
inc
popa
mov
loope
icebp
cmp
sub
pop
mov
push
lcall
push
fisubl
lret
add
push
pop
loope
mov
inc
nop
pop
out
lds
in
in
adc
push
fistl
jbe
jae
je
lea
pop
mov
pop
loop
hlt
add
cmp
mov
inc
movsb
cmpsl
xchg
fs
inc
jg
or
push
xchg
dec
mov
subl
mov
and
xor
add
adc
loope
icebp
cmp
sub
pop
mov
push
lcall
push
fisubl
lret
add
adc
loope
fldenv
push
dec
xor
jno
outsl
mov
inc
mov
ret
jl
inc
push
xor
popf
rorb
hlt
mov
test
mov
inc
mov
dec
cmpsb
shll
aad
mov
fs
lock
out
imul
xlat
or
je
cmc
mov
loop
test
mov
mov
jb
sbbl
push
repz
imul
xchg
ret
mov
or
push
add
xor
lret
jne
imul
jecxz
mov
out
mov
mov
push
test
or
pop
jne
aas
scas
stos
inc
iret
cmp
jmp
loop
pusha
fidivs
lret
lock
pop
add
sub
scas
pop
loopne
xor
xchg
je
stc
movsl
ret
mov
pop
insl
fisttpll
cli
and
lahf
mov
lock
pop
mov
mov
push
out
dec
enter
or
sbb
cs
inc
clc
adc
mov
push
test
je
lahf
shlb
push
lcall
push
mov
or
fildl
jp
leave
sahf
xchg
dec
scas
mov
mov
adc
jmp
mov
movsb
in
fistpll
pushf
xorl
xchg
mov
dec
push
push
mov
addb
movsb
xor
cmp
cmp
das
pop
cmpsl
dec
ja
loopne
pop
ret
clc
push
jno
call
xor
dec
ret
xor
leave
cmp
push
fmull
repnz
lock
xorl
call
in
stos
sahf
mov
sbb
es
push
stos
in
mov
mov
lea
bound
pop
imul
clc
lea
jbe
cs
in
les
cs
inc
fdivp
pop
nop
aam
jge
sub
cmp
add
sti
popa
pop
mov
and
fidivs
ds
adc
jecxz
pop
in
lea
mov
notl
xor
fcmovne
call
dec
mov
or
imul
movsl
in
popa
push
jge
movsl
mov
ja
push
rcll
push
xchg
jne
adc
push
pop
push
orl
lds
and
imul
add
jecxz
out
push
inc
mov
mov
xchg
pop
jle
mov
movsb
std
int
dec
sbb
add
or
adc
xchg
jmp
cmp
shlb
adc
ret
aas
in
sbb
movb
out
notl
es
push
xchg
xchg
or
jmp
xchg
mov
xchg
orb
sbbb
push
or
test
in
xorb
mov
inc
add
out
xchg
dec
mov
call
jnp
insb
push
jg
fwait
mov
addl
outsb
inc
mov
jnp
lea
cmp
sub
ja
inc
adc
dec
ss
or
dec
stc
push
xchg
out
sarl
mov
pop
loope
inc
sahf
notl
jge
mov
cld
jns
xchg
scas
clc
dec
imul
add
rcr
in
icebp
mov
aaa
pop
les
loopne
nop
fsts
mov
stos
fst
mov
cmp
nop
inc
or
xor
sti
adc
repnz
add
mov
ja
push
dec
test
mov
pop
ja
imul
push
adc
jp
dec
and
jmp
imul
imul
mov
mov
or
xlat
pop
mov
xchg
sti
jle
mov
xor
xchg
shlb
inc
cld
loopne
test
cmpsb
jbe
inc
jmp
inc
adc
mov
inc
and
dec
jge
fists
cltd
mov
outsb
bound
js
dec
mov
inc
jmp
dec
fidivs
into
jb
cmpsb
addr16
iret
jmp
and
lret
mov
cltd
adcl
fdivrs
mov
push
outsl
dec
call
cmpsl
sbb
and
inc
jmp
subl
arpl
or
jne
cmp
mov
mov
decl
push
movsb
mov
repz
push
roll
push
or
dec
pop
inc
mov
mov
jns
movsl
enter
dec
dec
add
sarb
cld
cmpsl
lds
cwtl
out
push
insb
sarl
ljmp
xchg
dec
in
mov
rcll
adc
push
cmc
and
mov
sub
add
push
pop
cs
mov
cs
adc
pop
dec
je
int3
inc
pop
fistps
xor
aad
mov
aas
test
addr16
fs
push
test
mov
inc
mov
inc
rcrl
fbld
sub
mov
std
sub
xchg
cmp
inc
push
lea
icebp
jg
xchg
mov
pop
inc
je
popf
fcmovu
jb
jne
inc
cltd
loop
lock
jbe
test
cli
inc
add
push
ja
callw
mov
mov
mov
popa
add
xchg
test
pop
jmp
pop
icebp
sti
test
js
jae
add
scas
mov
mov
xchg
lret
dec
lds
shlb
jg
mov
inc
lea
or
in
or
xlat
push
out
cmpsl
mov
test
push
leave
push
sti
push
inc
adc
or
test
out
jbe
std
mov
inc
mov
daa
sbb
ljmp
arpl
enter
lret
push
addr16
cmc
pop
sub
pop
jg
fidivrl
je
cmp
fwait
mov
in
push
faddl
fstpt
scas
outsl
add
outsb
xor
pop
aaa
cmp
push
inc
jo
xor
repnz
nop
or
int3
lret
jl
xor
sbb
dec
jge
pop
dec
sbb
dec
or
mov
ljmp
call
mov
mov
xchg
and
xorl
out
add
push
lea
and
repnz
push
mov
and
sbb
fwait
pop
sbb
xchg
add
mov
sub
xchg
addr16
jo
sub
sbb
push
ret
or
movsb
jae
mov
jne
xor
mov
imul
es
mov
xlat
pop
pop
lret
and
sub
xlat
scas
test
stos
imull
nop
mov
pusha
pop
push
fwait
jne
pop
mov
imul
icebp
sbb
sub
movsb
ss
mov
fistl
icebp
and
psllw
sbb
dec
push
cmp
dec
dec
jg
test
stos
and
adc
cmpsb
pop
es
out
xchg
inc
movsb
jne
cltd
pop
lret
inc
xor
and
repnz
fdivp
dec
pushf
daa
out
cmp
je
das
stos
dec
inc
shl
scas
out
mov
lcall
test
inc
jb
movl
pop
insb
stc
xor
ficompl
fsubr
sub
insl
mov
inc
mov
adc
mov
adc
sbb
push
cltd
mov
push
repnz
mov
push
adc
cmpsb
notl
test
adc
fimuls
in
push
jmp
pusha
ja
ret
mov
xorl
or
dec
and
mov
cmpsl
addr16
inc
push
jle
sub
pop
xor
and
movsl
mov
test
movsl
jne
pop
jbe
dec
gs
sbb
add
out
out
iret
dec
sarl
jo
sub
xchg
lret
lods
nop
lods
xor
jno
out
push
jno
pop
or
out
icebp
mov
subb
sub
jbe
fdivr
mov
cmc
aam
test
push
movq
inc
es
repnz
xor
xor
push
test
pop
cs
stos
js
sub
or
jno
xor
adc
pop
adc
jae
pushf
lahf
mov
pop
sahf
adc
out
push
out
js
movsl
inc
or
cmc
push
insl
adc
or
arpl
lods
mov
mov
fidivrl
cmc
maskmovq
mull
data16
dec
add
inc
cwtl
mov
and
lahf
les
mov
data16
cmp
bound
lcall
mov
cmp
fst
jbe
int
jmp
loop
pop
mov
sbb
jge
or
xor
cmp
xchg
test
and
adc
out
push
mov
mov
add
pop
lea
or
mov
push
repz
in
or
lods
mov
add
or
sbb
int3
subb
jecxz
sub
movsl
cwtl
repnz
cmpsb
jp
or
nop
lods
inc
jne
idivb
inc
adc
out
mov
outsl
sub
fisubl
imul
sub
popl
inc
sub
nop
sahf
fwait
arpl
adcl
lods
mov
pop
jo
push
xchg
lds
stc
mov
std
add
push
add
sar
dec
clc
push
pop
pop
clc
xchg
fwait
jnp
in
mov
mov
das
push
divl
pop
daa
or
in
adc
lods
xchg
and
mov
dec
xor
incb
das
xchg
push
adc
in
sub
xlat
push
movsb
mov
push
mov
jl
push
mov
push
mov
cmp
mov
or
mov
or
inc
jne
dec
and
and
outsb
or
cld
js
push
pushf
insb
iret
mov
addb
rol
jl
inc
jns
data16
cmpsl
repz
mov
mov
addr16
fwait
into
xor
sti
push
sub
cltd
orb
out
sub
sbb
mov
mov
mov
je
jge
into
inc
xchg
in
and
repnz
out
rcrl
leave
mov
stos
push
subb
iret
enter
adc
add
js
xchg
lock
shrl
xchg
sbb
shr
aam
lds
popa
data16
adc
pop
mov
xchg
mov
mov
jnp
adc
or
pop
sbb
orl
push
test
pop
add
loopne
lcall
imul
jne
cmp
mov
or
lods
jo
and
push
jns
mov
jo
mov
cld
xchg
clc
pcmpeqb
sbb
xor
or
mov
adc
cmp
xchg
xor
clc
jno
subb
adc
addl
in
push
mov
in
cli
das
popa
rcrb
mov
nop
lock
mov
repnz
adcl
fidivrs
dec
arpl
xchg
and
push
mov
insl
jl
pop
fsubl
lret
sbb
int
mov
inc
dec
mov
pop
mov
ds
xor
jp
nop
inc
xchg
popa
ret
cli
mov
fsubs
and
rolb
out
xor
sbb
cld
ss
sub
dec
cmc
outsb
sub
inc
stos
pusha
inc
in
xchg
mov
iret
ficoml
dec
pushf
xchg
clc
cmpb
mov
ss
mov
lods
sti
lret
fisttpl
arpl
lods
pusha
dec
jl
pop
jl
in
mov
push
pop
dec
jl
inc
clc
lods
test
sbb
cmp
loop
adcl
sub
push
imul
mov
inc
in
push
insb
pop
scas
xchg
in
arpl
mul
int3
sub
mov
mov
ret
xorb
fistps
orb
cli
pop
or
enter
or
mov
fnstsw
mov
mov
das
inc
addr16
rclb
fists
and
or
rcr
jmp
outsl
rol
jae
dec
or
loopne
out
jae
inc
xchg
xor
fstps
rcl
sahf
xchg
push
gs
or
inc
mov
mov
sahf
inc
cmp
dec
mov
bound
xchg
outsl
stos
lods
lahf
sbb
fldenv
xchg
ja
in
orl
movsl
mov
orl
pop
push
es
adc
mov
bound
in
leave
xlat
fisttpll
mull
pop
mov
xchg
jg
sub
push
jle
pop
aaa
mov
daa
cmp
mov
xor
inc
xchg
ret
adc
mov
xor
sub
add
sub
xchg
mov
xchg
pushf
push
jmp
out
shr
sbbl
mul
or
lock
scas
mov
imul
push
lea
sbb
shrl
push
and
mov
sbb
fwait
jecxz
cli
cmp
ljmp
push
mov
lcall
dec
push
dec
jmp
or
popf
ret
lods
cmc
dec
fistpll
mov
pop
jle
lret
and
cmpb
dec
mov
fnstcw
faddl
dec
sbb
or
clc
cmp
push
aam
iret
mov
scas
mov
cmp
jle
jb
das
repnz
packuswb
fdivs
inc
daa
add
adc
jmp
push
adc
fadds
cmpsl
mov
insb
inc
mov
stc
and
mov
out
lock
mov
xchg
shll
div
ret
sub
mov
cmp
mov
incl
pop
mov
pushf
push
xchg
popf
mov
das
xchg
scas
shrb
inc
lret
mov
adc
sbb
sub
xchg
addr16
and
sti
add
pop
jb
cmpsb
sar
adc
fbld
aam
xor
mov
mov
ss
inc
lret
pusha
int
test
dec
rorb
sub
insl
fsubrs
adc
cmp
xor
jnp
jnp
cld
xchg
sbb
adc
ss
stos
sbbb
rclb
mov
dec
push
mov
imul
in
imul
in
popa
mov
lcall
adc
jno
sub
mov
or
push
sub
daa
scas
mov
xor
jge
repz
in
dec
in
jecxz
mov
cmp
xor
xor
xchg
leave
test
scas
out
stc
mov
std
fiaddl
cwtl
cwtl
and
int
jl
or
pop
or
out
mov
repz
push
stos
inc
mov
dec
stos
ret
outsb
bound
sub
ja
mov
ss
imul
inc
dec
add
ret
add
daa
add
ret
popf
mov
mov
scas
nop
mov
jbe
push
dec
pusha
ds
lea
adc
inc
jp
aad
mov
enter
sub
sahf
adc
mov
adc
and
cmpsl
stc
or
push
add
cs
addl
ret
dec
jmp
repz
sbb
xor
add
mov
loopne
mov
xor
sub
mov
or
in
push
sbb
shrb
push
cs
pop
jbe
mov
leave
jmp
fchs
outsb
rorl
mov
jp
cwtl
ljmp
into
fdivl
repnz
scas
fs
ret
in
adc
xor
lret
sub
icebp
inc
push
adc
test
mov
cmp
fldcw
push
pop
dec
in
mov
mov
fidivl
and
inc
inc
sub
push
loopne
scas
inc
rcr
out
mov
push
shrl
loopne
mov
mov
cmovne
sub
dec
sub
xchg
sbb
scas
sub
mov
push
shld
inc
mov
sbb
nop
fcompl
cltd
repz
push
mov
add
shrl
divl
mov
jae
jecxz
out
jecxz
xchg
and
push
mov
and
sar
fcoms
imulb
idivl
jle
pop
movsb
sub
cli
mov
xchg
movsb
xchg
and
adc
les
and
imul
xor
imul
mov
cwtl
fcmovnb
aaa
ret
add
loope
push
or
jnp
mov
faddl
jg
insb
or
mov
nop
sar
arpl
xchg
icebp
addb
mov
jmp
loope
xlat
scas
loopne
pop
dec
mov
int3
inc
repz
and
mov
and
stos
push
add
repnz
xor
mov
jecxz
int
push
fadds
sub
cld
movsl
cmpsb
mov
pop
shll
or
push
push
fwait
gs
and
aam
jae
push
iret
xchg
inc
data16
xlat
lcall
loop
or
adc
imul
loop
push
je
add
inc
rorl
mov
jecxz
dec
shll
andb
fnstenv
cs
and
jmp
outsb
mov
fsubrs
leave
scas
push
or
jge
dec
in
stos
clc
insb
in
cmc
or
jle
int3
push
sbb
add
or
movsl
xor
pop
jmp
in
jge
fmull
xchg
icebp
and
xor
or
testl
imul
enter
pop
into
mov
pop
add
imul
or
jns
test
leave
fistpl
out
mov
test
fucomi
lret
daa
add
pop
sbb
dec
mov
inc
ja
inc
filds
pop
pop
stos
stos
dec
xchg
ss
mov
xor
lock
movsb
repz
loopne
cmpsl
mov
jge
mov
testl
cwtl
hlt
fwait
adc
push
xor
xchg
pop
xchg
cld
pop
std
test
addl
add
xor
jp
add
push
test
mov
loope
cmpsb
mov
mov
je
xchg
jns
cltd
xorl
xchg
leave
call
int
pop
mov
and
in
outsl
jae
jnp
rorl
inc
jp
adc
xlat
jmp
ret
and
mov
sbb
push
jp
leave
icebp
scas
or
mov
test
mov
lds
jmp
dec
xchg
mov
daa
jbe
mov
sbb
jnp
in
mov
jmp
cmp
mov
push
cltd
mov
push
inc
cmp
adc
into
xchg
sbb
lcall
cmp
std
imull
inc
jecxz
pop
dec
mov
leave
jne
mov
inc
xor
adc
sbb
push
in
or
sub
inc
lret
ficompl
lahf
sbb
movsb
jb
lcall
test
sahf
lds
and
push
arpl
dec
lcall
outsl
and
push
imul
data16
inc
sahf
in
movsb
push
lock
pop
pop
sbb
push
out
adc
nop
sbbb
mov
sub
mov
pushf
or
pusha
leave
jae
scas
push
int3
outsl
cmpb
jp
js
ds
es
enter
pushf
repz
sub
test
shrb
or
mov
xchg
sub
enter
popa
lret
adc
fld
test
xchg
fwait
cmpsb
add
out
sub
clc
inc
insl
push
insb
cmp
andl
cli
xchg
jne
sti
mov
lret
test
lret
js
add
in
cmpsb
enter
fcomp
add
or
cwtl
decb
leave
mov
dec
push
fs
shrb
cmp
mov
jge
jecxz
icebp
cli
rcll
popf
mov
jle
rcrl
jl
xchg
lret
fwait
sbb
and
js
and
push
jl
std
sbb
xor
xor
ficompl
ljmp
push
xor
jnp
rclb
aad
sub
lret
xchg
arpl
cmpsb
pushf
cmp
push
mov
clc
es
andl
fiadds
test
push
mov
nop
and
xchg
sbb
pop
jo
mov
lods
xor
je
dec
cmpsl
mov
cmpb
rcrl
jge
sbb
ja
jmp
push
pop
pop
insb
inc
or
mov
jmp
cmpsb
cltd
and
jnp
subb
lock
das
aaa
std
jmp
es
mov
cmp
inc
cmp
mov
fwait
mov
gs
cmpl
and
push
jg
iret
dec
aam
mov
xor
stos
insl
sub
aad
mov
mov
popf
pop
xchg
or
test
in
scas
mov
andb
pop
ficompl
add
mov
nop
into
xchg
adc
lds
insl
inc
pop
cmp
cwtl
out
add
ss
dec
pop
adc
dec
imul
adc
mov
js
aam
inc
aad
adc
data16
repnz
inc
dec
fsubl
cmp
cld
lret
movl
sub
aas
mov
aam
push
push
loop
pop
icebp
out
mov
inc
adc
cli
xchg
fadds
xchg
sbb
scas
xchg
imul
xchg
sub
daa
inc
pop
enter
shrb
fcompl
out
or
mov
cs
in
and
sbb
mov
inc
add
loop
out
je
cmpsb
aam
cmp
sub
pop
mov
push
lcall
push
fisubl
lret
add
adc
loope
icebp
cmp
sub
pop
mov
push
lcall
push
fisubl
lret
add
adc
loope
icebp
mov
mov
ljmp
inc
stos
push
fisubl
lret
add
adc
loope
icebp
cmp
sub
pop
mov
push
lcall
es
test
lcall
push
add
cmp
call
loop
shrb
and
push
bound
push
sub
mov
mov
clc
repnz
cwtl
shr
ret
dec
and
push
bound
push
sub
mov
sbb
repnz
notl
dec
inc
pop
adc
imul
iret
xor
cmp
push
mov
cwtl
mov
imul
ficomps
fstp
in
push
incl
scas
cs
js
and
daa
insb
jmp
loop
test
xchg
jmp
js
dec
adc
test
aam
xor
pop
add
push
push
ret
pop
add
js
or
movl
jge
mov
push
dec
xor
xchg
in
incl
scas
cmp
stos
pop
pop
or
mov
push
ret
cmpsl
sub
std
sbbl
push
fdiv
mov
call
pop
adc
dec
and
push
bound
push
sub
mov
mov
clc
repnz
cwtl
shrb
inc
pop
push
add
fs
push
loope
mov
mov
mov
inc
dec
push
pop
jno
inc
or
inc
sub
pop
cmp
mov
lods
out
mov
repz
add
or
sbb
push
sub
mov
mov
clc
repnz
cwtl
shrb
and
push
bound
push
sub
mov
mov
clc
repnz
cwtl
shrb
inc
adc
les
incb
sub
lods
jno
cmp
out
fidivs
imul
mov
mov
lcall
pop
adc
btr
repz
rcll
fldt
mov
lcall
cmpsb
xchg
out
into
dec
jbe
imul
ja
imul
cmp
mov
rorl
xchg
stc
fldcw
mov
pop
mov
xor
mov
iret
in
clc
stos
pop
sbb
mov
movsb
push
mov
mov
jge
cmpb
mov
das
sbb
rolb
sti
stos
fwait
mov
inc
in
dec
adc
jp
jmp
jns
aaa
daa
lock
fstpl
jg
jle
aad
stos
iret
dec
or
cmpsb
xchg
mov
pusha
out
mov
loope
mov
add
push
sahf
inc
mov
fistpll
cld
pop
test
cmp
lcall
iret
ficomps
fstpt
pop
jmp
lcall
push
mov
imul
aaa
popf
in
in
hlt
cltd
andb
out
xchg
mov
push
je
cmpb
adc
jl
add
inc
cmp
mov
jae
stc
lods
mov
repz
push
mov
pushl
xchg
hlt
test
cmp
scas
mov
lret
int3
jnp
outsl
out
jne
ljmp
mov
int3
jl
push
mov
xor
ds
fistl
in
mov
int
stc
sub
out
sub
pop
in
clc
cmp
mov
es
loopne
dec
repnz
cli
mov
movsl
ja
bound
sub
cmp
inc
hlt
jecxz
lret
dec
adc
pop
or
mov
outsb
fs
out
dec
jmp
lds
les
cld
in
xchg
arpl
sbb
push
or
inc
jg
mov
test
sahf
push
xor
fildl
mov
out
pop
jbe
mov
pop
jl
mov
popa
inc
enter
pop
rclb
mov
cwtl
inc
xlat
push
mov
lret
inc
push
cmp
mov
hlt
sbb
call
aaa
mov
fimuls
test
cmp
js
inc
push
inc
mov
add
popf
pushf
adc
push
push
aas
push
test
add
push
fs
adc
dec
xor
push
rcrl
inc
mov
adc
mov
popa
ss
loop
adc
push
jle
push
int
mov
int
cmpsl
jno
cmc
sbb
inc
repz
sub
repz
jae
rorl
loope
std
mov
add
mov
aam
icebp
pop
cmpsb
mov
mov
xchg
rcl
pop
cmp
into
hlt
lods
push
mov
or
lret
mov
xor
dec
and
out
mov
and
push
jge
cmpsb
test
ror
dec
fstps
int
ss
cwtl
cmp
add
outsl
ja
or
mov
mov
dec
and
dec
xor
ja
xor
ret
insl
adc
inc
lret
cmp
in
xchg
sbb
push
push
jg
xchg
das
lea
cs
jnp
pop
sbb
xor
shll
xchg
divb
lret
cli
mov
pop
cmp
clc
adc
cmp
and
sti
repz
cmp
sti
and
sbb
roll
roll
sahf
add
loope
adcb
pusha
xlat
stc
inc
lcall
pop
pushf
hlt
pop
adc
loope
dec
mov
pop
stc
sbb
xchg
xor
outsb
jge
push
push
mov
cmp
rorb
fimuls
lahf
aam
inc
in
js
pop
xchg
repnz
out
icebp
out
addr16
push
or
pusha
cmpl
xchg
push
ljmp
bound
shl
imul
cmp
fcmovnbe
repnz
iretw
jecxz
jb
fwait
push
add
lods
out
das
adc
pusha
mov
mov
adc
data16
lods
lret
in
lret
lcall
pop
jno
and
jno
lret
int3
ljmp
aad
cwtl
lea
dec
gs
push
xor
xchg
in
dec
push
fistpll
jo
push
pop
lahf
pushf
movsb
push
mov
lahf
shlb
adc
jno
leave
jp
cmc
mov
cmc
push
psubd
sti
out
dec
movsb
xor
pop
addr16
in
adc
and
and
iret
mov
test
out
cli
or
clc
popa
pop
shll
pop
jno
outsl
fists
mov
lods
stos
stc
pusha
bound
icebp
pop
int3
mov
loopne
xor
repz
or
ret
pop
hlt
add
lahf
repz
sbbl
mov
test
mov
loop
mov
hlt
cs
int
and
pop
mov
dec
cmpsb
xchg
test
je
mov
inc
jle
jl
outsl
les
loop
adc
arpl
jno
ljmp
mov
sub
xlat
out
jbe
fldenv
or
push
xchg
loope
hlt
aas
jge
fwait
ror
xchg
leave
mov
mov
lahf
mov
jp
lock
xor
push
lahf
addr16
int3
int
rolb
or
sbb
push
pop
divb
mov
stos
int
les
xchg
pop
and
shl
test
cs
idiv
and
enter
jno
pushl
or
cld
mov
movntq
out
xor
idivl
arpl
test
cmpsl
sbb
xchg
bound
lret
jne
mov
in
sarl
lea
and
lret
flds
jg
outsb
or
mov
push
add
push
mov
sti
repz
push
mov
imul
loopne
pop
rol
aam
fistl
xrelease
mov
nop
mov
jecxz
test
and
push
outsl
fisubrl
bnd
mov
xchg
jne
les
out
jg
jo
into
xchg
fs
pop
fildll
divl
cs
jge
jne
aad
jnp
xchg
incb
inc
lret
push
test
mov
fstp
sbb
push
push
sbb
dec
testb
xor
pop
nop
pop
js
and
cmp
dec
mov
add
popf
mov
out
outsb
cmp
int
scas
repnz
or
or
fistpll
sub
aas
cmp
mov
shlb
jg
iret
sbb
stc
int
ds
jb
test
icebp
adc
fldl2e
les
jecxz
pop
jb
adc
fldl
mov
repnz
cmp
dec
icebp
push
ret
pop
cmpsl
lods
insl
outsb
shlb
push
and
jp
xor
cltd
sahf
xchg
mov
add
das
mull
push
mov
stos
fisubrs
adc
mov
nop
rorb
pusha
insl
cwtl
sbb
bound
dec
fildl
in
push
in
stc
cld
sbb
imulb
jmp
and
out
or
xor
add
gs
adc
cltd
inc
pop
adc
popa
enter
cmpsb
mov
xchg
mov
test
push
and
sub
or
bound
daa
xchg
mov
outsl
jno
stos
insb
and
xchg
insl
xor
imul
push
or
jns
movsl
sbb
cmp
push
rcr
js
adc
test
xor
jg
aaa
push
lock
arpl
pop
out
pop
jbe
sti
jb
cmp
test
adc
mov
cwtl
adc
popa
icebp
xchg
push
clc
data16
lret
ljmp
movaps
je
adc
repz
ljmp
jns
jnp
incb
xor
jle
lds
fwait
jmp
arpl
pop
cmpsb
pop
addl
or
add
je
nop
jp
jbe
xor
add
jo
cmp
mov
and
xor
xchg
ret
decb
push
sbb
jne
clc
xor
insb
loopne
into
jecxz
inc
pop
into
incl
cmp
int3
ljmp
adcl
push
ds
scas
dec
pop
or
push
iret
mov
enter
push
mov
or
in
in
jg
jge
and
repnz
clc
loopne
gs
dec
sbb
rol
loop
xor
add
test
ficoml
jmp
data16
sub
scas
lcall
jo
sub
fdivrs
daa
dec
cmc
pop
xor
cmp
cld
rcll
push
cmp
out
arpl
rcrl
xlat
mov
outsb
fimuls
cli
cli
cmc
andb
mov
pushf
inc
jne
cwtl
pop
push
xchg
sbb
mov
and
rolb
cmp
js
outsl
xchg
add
sarb
into
lret
mov
test
jecxz
jo
std
and
dec
cld
sbb
inc
and
xor
ljmp
mov
mov
ja
add
push
iret
cmp
insl
into
jae
and
sub
cmpl
mov
cwtl
adc
les
xorl
cmp
aas
fisubrs
shll
das
mov
dec
jbe
out
mov
mov
push
fbstp
hlt
push
adc
and
shl
into
mov
imul
ss
fnstenv
sub
jns
in
push
ret
push
ficoms
inc
popf
sbb
jge
lods
mov
cmp
mov
mov
mov
xchg
gs
fsubrl
leave
lret
pop
xchg
lret
sbb
adc
cwtl
ja
push
ret
je
or
and
rolb
cs
loope
ret
xlat
cmp
lret
mov
bound
int
xchg
jecxz
lods
jecxz,pn
cli
test
xchg
aaa
icebp
ljmp
xchg
in
mov
ja
and
mov
xor
and
mov
jbe
jecxz
pop
cld
ljmp
out
dec
shr
into
les
test
cmpsl
xchg
push
fdivr
push
xor
mov
cli
test
stos
jge
jb
out
inc
test
mov
pop
sub
lock
push
ja
int
jne
lahf
push
ss
xchg
jbe
jno
rcrb
mov
std
in
and
addl
jne
stos
cmp
fadds
inc
mov
or
mov
inc
push
mov
push
arpl
nop
in
xchg
pop
sub
dec
push
dec
mov
mov
add
mov
iret
mov
fldl
push
mov
mov
hlt
mov
in
add
repnz
lods
sub
xchg
sahf
dec
push
jne
sarl
nop
jbe
hlt
sub
push
adc
inc
lds
pop
repnz
repnz
lods
sub
push
jmp
push
fsub
sbb
movsl
xchg
pop
cmp
push
fs
pop
jl
loop
cmp
adc
rclb
sahf
repz
and
adc
cmpsl
xlat
call
imul
xchg
dec
jbe
xor
rcll
push
jb
and
pop
sarl
lret
aam
shrl
rclb
pop
jns
ret
mov
test
or
or
push
sub
xchg
shrb
push
cs
dec
add
adc
stc
nop
pop
dec
mov
mov
shl
rcr
out
push
cmp
jns
add
inc
lods
and
aam
mov
std
mov
push
sbb
or
movsb
sub
sub
xchg
sbb
in
sbb
mov
mov
les
das
fs
pop
push
mov
and
add
mov
stos
outsl
add
sti
and
cmp
mov
out
movsl
out
ss
mov
repnz
sahf
imul
insl
cld
adc
out
add
popa
fdiv
cmpsb
push
div
test
inc
jl
adc
clc
mov
mov
out
xor
sti
dec
dec
repnz
fmuls
dec
mov
testl
mov
jns
int3
sbb
sbb
add
mov
cmp
jnp
out
ds
out
mov
mov
or
cmpsb
cmc
push
mov
mov
daa
mov
mov
pop
cli
std
movl
xlat
sub
and
inc
jne
test
clc
and
mov
pusha
push
and
sub
ret
test
sbb
and
lret
sbb
mov
adc
xchg
jle
pop
dec
mov
pop
stos
inc
pop
xor
dec
xchg
sbb
pop
mov
xor
xor
pop
push
fists
mov
push
mov
jne
mov
adcl
lahf
pop
push
arpl
xor
mov
rorl
ljmp
incl
lret
sub
lea
jne
inc
push
repnz
out
xor
add
imul
shl
repz
pop
icebp
dec
mov
adc
pop
sbb
in
push
inc
xor
jmp
xchg
mov
mov
jp
das
or
inc
andb
dec
outsl
test
xchg
addr16
sbb
xor
int
movsb
mov
sbb
popa
jo
aam
pop
sbb
inc
bound
and
lret
pop
push
ret
mov
and
outsl
cwtl
mov
in
hlt
mov
out
stos
fsubrs
imul
jge
pop
fs
lds
ficoms
aad
inc
or
movb
mov
cmp
xor
or
mov
jnp
sbb
jmp
inc
xchg
imul
hlt
fbld
pop
adc
mov
sti
mov
xor
clc
push
xchg
dec
into
mov
adc
add
dec
lcall
pop
jb
adc
push
fisubs
mov
aas
stos
arpl
push
xor
out
outsl
rorb
ret
jb
cmp
repz
scas
mov
push
mov
xchg
cmp
xchg
movsl
testb
sbb
sti
and
push
mov
pop
int
or
rcll
popf
fisttpl
sbb
aad
movl
cmpsb
sbb
add
or
pop
jl
mov
dec
stc
pop
sub
stos
lea
mov
add
sbb
jp
pushf
pop
fsubr
and
lcall
jp
inc
aad
xchg
mov
in
popf
fldenv
jns
cmp
pop
adc
xor
jo
dec
cmp
push
inc
mov
add
js
sbb
and
sbb
pop
xor
lods
or
sub
mov
inc
addl
pop
pusha
ret
or
mov
dec
jmp
sbb
push
inc
mov
cmc
jo
rolb
xchg
cmp
call
xor
in
rol
or
aas
cwtl
repz
xor
inc
dec
push
mov
aam
loopne
mov
int3
xor
push
mov
or
aad
jg
mov
xor
je
bswap
lret
fcmovnb
push
fiaddl
inc
addr16
jbe
jns
clc
int3
xor
les
mov
pop
out
test
push
repz
xchg
sub
pop
pop
flds
add
lods
dec
add
jl
je
aad
movsl
or
std
and
lods
or
sbb
xor
dec
mov
xor
aas
shll
std
stos
xchg
repz
les
outsl
mov
mov
jo
sub
rolb
and
movsb
fwait
in
loopne
popa
cmp
stc
or
ljmp
pop
xchg
jmp
out
iret
movsl
mov
in
jb
shrl
test
adc
mov
test
push
aaa
xchg
movsb
fstpt
enter
adc
xor
mov
fwait
push
frstor
je
mov
cmp
sub
xchg
xor
inc
or
pop
fcmovnbe
call
jge
mov
lds
fbld
enter
push
push
pushf
mov
in
push
inc
xor
cmc
sub
dec
mov
pusha
xor
fadd
pop
popf
mov
xchg
call
and
jae
loop
mov
jp
fs
push
sub
dec
mov
shlb
lock
push
loop
fs
mov
outsb
xchg
xchg
xor
ss
lahf
lods
je
or
cmp
fs
out
dec
repz
dec
sbb
push
xchg
dec
or
cli
ja
out
call
xchg
xor
inc
or
jmp
xor
ret
or
jbe
popl
xor
ds
shlb
outsl
cmp
cmp
pop
push
pop
jnp
mov
in
mov
add
mov
pop
mov
les
sub
cmpsl
pop
or
sahf
stos
lock
xor
fisubs
hlt
mov
adc
cli
test
sub
mov
xor
repz
pushf
jbe
cli
inc
mov
ficomps
data16
push
inc
jb
loop
out
dec
add
int
sub
movsb
mov
rorl
clc
push
mov
xor
mov
mov
lcall
incl
mov
sbb
pop
xchg
or
mov
ds
mov
cld
inc
out
cmp
dec
push
pop
sbb
test
daa
mov
les
orl
jecxz
mov
push
aaa
mov
ss
mov
jo
mov
pop
inc
add
jne
and
mov
movsb
std
leave
mov
mov
es
iret
scas
in
inc
jbe
loope
push
mov
mov
push
out
dec
jle
inc
dec
xor
iret
movsb
xor
enter
repnz
push
insl
xchg
mov
push
sub
push
test
in
dec
mov
adc
clc
mov
leave
adc
or
pop
scas
xor
push
jg
mov
sbb
lock
shrl
xor
xchg
mov
stc
clc
adc
addl
mov
lock
cmc
decl
test
dec
shrb
cltd
inc
stc
and
mov
inc
loope
jmp
fs
cmpb
mov
or
mov
pop
xchg
push
pop
nopl
sbbb
jg
orb
inc
mov
inc
push
or
xor
jo
stc
xchg
jb
sbb
jb
call
sahf
subb
insb
jb
pusha
repnz
jl
mov
mov
cmp
rorl
jge
cmpsl
leave
pop
jge
inc
pop
add
xor
fldcw
xor
in
jp
dec
dec
mov
adc
jbe
mov
adc
js
sbb
cld
lahf
lcall
ficomps
sahf
bound
mov
inc
and
aam
aad
mov
fs
in
xor
jmp
mov
in
cwtl
push
movsb
sahf
mov
das
lcall
call
xchg
fidivrl
es
cmpb
xlat
and
mov
xor
jecxz
outsb
imul
scas
ret
sub
sub
icebp
jg
aad
adcl
loope
add
sub
out
lea
add
cld
test
add
xchg
loopne
pop
cmp
mov
roll
or
testb
ss
mov
data16
xchg
adc
aaa
idivb
xor
and
mov
inc
xor
push
mov
cltd
insb
movsl
jmp
mov
pushf
mov
jns
mov
dec
cmp
out
jecxz
cltd
aaa
rorb
scas
cmp
lock
lahf
popa
outsl
mov
movsl
pop
mov
out
pop
lea
hlt
mov
mov
push
jmp
movsl
test
push
std
jo
and
aam
sbb
push
roll
jo
lcall
jp
adc
or
jp
fcomp
test
test
test
or
ret
nop
das
pop
dec
cmp
xchg
dec
or
cmp
xor
sbb
cwtl
lods
mov
adc
sbb
jmp
jne
adc
sahf
mov
adc
stos
sub
icebp
inc
adc
ss
sub
rcll
xchg
inc
inc
xor
jmp
xor
in
loopne
pop
inc
xchg
repz
shlb
in
stc
sub
jge
pop
sahf
push
dec
xor
das
push
pusha
pop
jnp
arpl
mov
aaa
ret
inc
jmp
nop
xchg
mov
popa
xchg
mov
mov
pop
and
mov
cld
adc
push
xchg
lods
jecxz
xor
xchg
icebp
xchg
mov
cmpl
cmpsl
push
sbb
mov
mov
insb
mov
fists
enter
loop
pop
nop
or
movsl
push
add
push
pop
mov
sub
pop
out
popl
pushf
dec
adc
out
mov
jmp
out
mov
ret
std
cltd
lds
cwtl
mov
push
shlb
cmp
jp
repz
pop
inc
fwait
lea
and
out
stc
inc
xchg
fdivrs
jnp
idiv
pushw
insb
and
inc
pop
lds
rorl
ja
cmc
adc
pushf
pop
es
mov
jge
mov
lea
cmp
pop
test
shl
mov
bound
out
dec
mov
sub
or
push
sub
mov
mov
clc
repnz
cwtl
shrb
and
push
bound
push
sub
mov
mov
clc
repnz
cwtl
shrb
and
adc
add
or
push
sub
mov
mov
clc
repnz
cwtl
shrl
and
push
bound
shrb
ret
enter
call
push
sub
inc
add
adc
and
xor
lock
test
xchg
jns
test
mov
les
addr16
push
hlt
inc
add
adc
and
xor
inc
cmc
push
imul
add
les
in
in
hlt
inc
sbb
cmp
dec
fnstcw
fstpl
dec
int3
jbe
and
inc
insl
mov
lret
and
inc
rclb
ret
movsl
leave
mov
add
outsl
lahf
sub
mov
call
test
jmp
pop
iret
mov
outsb
hlt
push
sbb
xchg
loope
add
mov
adc
in
or
sti
mov
mov
xchg
mov
sarl
cmp
in
hlt
push
add
test
cmp
fwait
jne,pn
bswap
xchg
jne
and
cmp
outsl
mov
cltd
dec
test
rorl
fldl
movsl
rolb
es
sbb
in
jne
sbb
lret
mov
xchg
xchg
jl
jnp
sbb
ljmp
in
hlt
ror
or
push
cmc
inc
in
inc
popf
mov
jecxz
add
int3
popf
push
hlt
sub
jno
inc
inc
stos
aaa
xorl
mov
xlat
popa
shrb
mov
xchg
adc
and
lock
dec
hlt
inc
mov
fs
icebp
jae
jo
les
nop
cs
jecxz
loop
lds
xchg
push
in
aad
lds
mov
les
gs
hlt
inc
add
adc
and
xor
inc
cmc
push
in
aad
lds
mov
les
gs
hlt
inc
add
cmp
ss
test
mov
dec
dec
jae
scas
aas
pop
xorb
lcall
ret
pop
mov
cmc
jo
pop
adcl
pop
lcall
lods
mov
scas
push
lret
out
shlb
adc
stos
add
nop
push
mov
mov
xor
sbbb
loop
outsl
mov
ss
sub
cmpsl
jle
ja
jmp
xchg
mov
push
cmpsl
test
lock
inc
aad
shrb
xchg
jnp
push
test
xor
sub
repnz
and
ds
jg
mov
int3
xlat
sahf
and
push
neg
adc
and
bound
xor
popa
push
sbb
mov
loopne
outsb
mov
fwait
out
stc
mov
mov
aaa
inc
stos
push
out
inc
xchg
sub
xchg
xor
or
cmc
fs
and
xchg
ja
push
and
pop
mov
xlat
xchg
mov
sub
pusha
roll
ret
fstpt
cltd
xor
mov
xchg
push
jae
call
jmp
lock
push
pop
xchg
aas
or
cmpsl
sbb
mov
scas
loope
shll
mov
jo
daa
adc
sti
pop
inc
scas
or
push
mov
icebp
push
outsb
jns
cmc
sbbb
push
loop
outsl
jecxz
jmp
inc
mov
pop
xor
mov
sub
mov
mov
push
aaa
fbld
mov
ss
adcb
sbb
xor
outsb
mov
xchg
mov
cmp
sbb
fdivrs
fs
sbb
mov
inc
ficoml
sub
mov
xchg
push
lock
std
fwait
mov
aam
pop
loope
xor
int
mov
pusha
xor
es
sub
and
fiadds
cmpsl
lret
push
out
adc
orl
cs
js
cmpsb
movsb
dec
outsl
add
push
jmp
mov
sbb
jnp
fnstcw
push
dec
outsb
mov
loop
pusha
scas
push
add
mov
mov
mov
cmp
mov
pop
ds
test
dec
fwait
jmp
div
out
popa
push
in
push
mov
popa
push
xchg
lahf
scas
fistps
mov
sub
clc
out
cmp
icebp
enter
dec
hlt
decb
jne
je
sub
xchg
ret
adcb
gs
mov
push
pop
aaa
jg
lret
sbb
rorb
mov
in
dec
ret
mov
lock
es
into
call
inc
adc
movsb
stc
iret
ds
dec
or
dec
and
push
movsl
loopne
mov
jne
xchg
add
cmpsb
push
pusha
lds
xchg
pushf
std
add
xor
in
stc
es
pop
mov
ficomps
sub
mov
dec
fldcw
mov
push
inc
rolb
push
xchg
outsb
mov
out
popf
jbe
fdivs
or
popf
sbb
fcoml
xchg
inc
mov
push
test
xchg
imul
loopne
jmp
jo
mov
in
aam
mov
stos
stc
pop
or
fwait
jns
cmp
lea
mov
int
xchg
jnp
sarb
sub
xor
or
lods
push
ret
in
mov
test
stos
pusha
into
insl
in
inc
vmulsd
dec
nop
test
sbb
mov
mov
dec
out
repz
in
mov
jae
cs
jmp
pop
mov
mov
outsl
add
mov
sti
push
cwtl
push
jmp
scas
mov
sub
out
xchg
in
add
gs
stc
jg
mov
popf
push
xchg
mov
shll
mov
ja
ror
stc
int
adc
ror
loop
inc
icebp
dec
inc
pop
sub
xchg
cmc
stos
pushl
mov
sbb
gs
mov
pop
and
add
imul
data16
xor
xor
xchg
stos
ja
mov
push
mov
call
add
xchg
div
cmp
pop
idivl
push
mov
cs
ja
lret
ljmp
addl
mov
dec
stc
mov
imul
or
aas
scas
loop
orl
cwtl
cmp
sub
data16
xor
clc
pop
jno
cmp
xor
out
push
stc
cmpsl
scas
inc
mov
das
out
shll
stos
inc
jae
mov
xor
xor
sti
jle
mov
movsb
enter
inc
sub
test
cmp
jmp
lret
test
lds
cltd
cmpsb
xor
jl
add
cmp
xor
gs
dec
hlt
cmp
xorb
aas
adc
push
rcrb
add
cwtl
mov
and
mov
leave
les
shl
sub
lret
in
lods
and
cs
stos
cmp
adc
fiadds
mov
lock
xchg
xchg
lret
add
inc
imul
add
mov
jp
loop
mov
cwtl
daa
adc
cmp
add
mov
and
fisubl
movsl
movsb
aam
mov
lea
aad
push
cmp
pop
push
outsb
ret
loopne
pushf
lea
adc
mov
push
sub
pop
dec
cli
lcall
sub
sbb
insb
cmp
aas
jmp
stos
faddl
outsb
push
xor
daa
js
dec
dec
xchg
xchg
lock
inc
lret
or
or
popf
bound
test
pushf
in
or
loop
frstor
xchg
fists
addr16
in
idiv
mov
pusha
nop
jle
std
pop
mov
add
xor
test
ret
sbb
mov
xchg
jmp
sarl
pop
pop
mov
pop
push
push
pusha
fcomps
in
fisubrs
mov
rorl
in
push
int
or
sub
sub
fpatan
lock
aam
mov
xchg
cld
into
fsubrl
xchg
rclb
test
cmp
outsb
jnp
movsb
add
mov
sbb
dec
loop
addr16
out
fdivs
cmp
adc
jnp
jmp
ja
pop
mov
jnp
cli
lahf
sbb
int
in
jge
adc
mov
mov
rcl
dec
popa
incb
mov
fidivl
jle
sbb
cmpsl
push
lea
std
push
cmpsb
int
dec
or
in
fisubl
cmovs
test
bound
mov
dec
xor
ja
inc
mov
stc
inc
adc
sbb
js
shlb
ss
test
inc
push
mov
mov
bound
ret
vprotq
ja
adc
xor
sbb
cmp
notb
jge
js
xchg
aas
cs
push
xchg
add
push
ljmp
hlt
sbb
inc
push
popa
jmp
in
test
xor
push
dec
insb
repnz
mov
mull
fwait
cwtl
out
lcall
aas
adc
ds
dec
cwtl
or
sbb
ficoml
xor
sbb
enter
aas
mov
addb
dec
adcb
xor
repz
or
scas
in
aad
es
scas
test
imul
lds
inc
test
outsb
filds
and
mov
add
scas
clc
jb
incb
push
xor
xor
mov
xchg
mov
neg
cld
mov
xchg
movsb
sarl
flds
mov
push
cmp
or
jp
push
and
pop
push
cltd
aas
mov
jmp
das
scas
pop
xorl
fnstcw
adc
popf
into
cmpsl
mov
std
mov
mov
ret
stc
pop
andb
push
or
cmp
adc
jno
xor
mov
shlb
pop
pop
xchg
roll
out
outsl
fidivs
xchg
ja
das
dec
mov
jp
jb
push
es
cmp
jb
ror
push
fwait
ss
xchg
dec
data16
or
int3
add
fidivl
decb
cmp
sub
fldt
or
sbbl
fdivl
loopne
sbb
ja
sub
clc
mov
test
sub
or
adc
mov
inc
js
dec
pop
dec
or
in
adc
arpl
je
int
dec
outsl
int
mov
out
nop
xor
arpl
inc
or
mov
push
fbld
lock
jmp
sub
sbb
adc
mov
mov
cmp
cli
jne
mov
lret
mov
outsb
add
sub
sbb
loop
and
or
adc
and
std
loopne
mov
ja
xchg
stc
mov
cmp
or
pushf
flds
clc
sub
mov
jb
popa
out
add
and
push
push
inc
pop
mov
aas
adc
jmp
or
push
inc
mov
pop
stc
pop
or
call
and
jnp
popa
mov
movsl
dec
into
lods
cmpsl
inc
mov
xchg
push
sbb
dec
sub
outsl
adc
mov
xchg
imul
jge
sysenter
or
inc
sbb
cmp
sar
mov
loop
mov
mov
dec
cmp
subb
imulb
nop
mov
fisubrs
insl
scas
sahf
mov
dec
sbb
inc
notb
dec
fidivs
pop
adc
or
jne
movsb
mov
push
test
enter
dec
add
or
int
pop
pop
sbb
ja
push
stos
push
and
and
cwtl
and
dec
pop
xor
mov
mov
adc
jp
mov
or
mov
adc
push
into
sbb
add
or
jle
sub
mov
repnz
inc
jmp
xor
or
shll
push
xlat
stos
call
mov
lahf
mov
cli
ljmp
stos
out
pop
xchg
and
loope
mov
ja
pop
xchg
inc
add
std
out
mov
sbb
and
sub
jo
sbb
ret
push
cmp
and
sub
stos
push
mov
fidivl
or
dec
sti
jg
outsb
lgs
fnstcw
outsl
arpl
in
lret
leave
mov
sub
dec
jl
cmpsl
pop
xor
mov
shrb
adc
and
movl
out
shll
into
mov
xchg
jae
xchg
sbb
mov
push
xor
or
subl
enter
mov
jle
pop
pop
pop
hlt
xchg
pushf
pop
jne
xor
out
lock
push
in
cmpsb
dec
repz
push
dec
fisttps
loopne
gs
fistps
push
mov
jle
cs
mov
xor
xchg
cmp
js
subl
jns
cmpb
rcrb
sub
add
test
repz
shrl
in
aam
scas
cmp
pop
sbb
jbe
ficompl
push
and
loope
mov
fiaddl
push
cmp
nop
inc
data16
mov
jp
mov
push
mov
xchg
fcmovnb
out
or
test
repz
lret
pop
and
das
push
add
ss
mov
dec
mov
xor
dec
mov
imul
cmp
push
pop
jmp
inc
scas
lods
jno
xchg
lea
cmp
mov
mov
sub
xor
cmp
mov
test
push
push
push
bswap
adc
push
or
mov
icebp
hlt
into
insb
add
push
add
scas
in
notl
jo
cmpl
cwtl
sub
sarl
and
dec
xchg
clc
ss
jno
mov
addr16
ss
mul
mov
ja
mov
push
sti
push
sub
sub
cmpsl
jne
or
xor
mov
out
push
push
cs
fdivs
lock
lock
imul
jns
test
faddl
ja
jae
xchg
andl
jo
xor
gs
loope
and
repz
imul
cmp
or
iret
xor
fisubrl
push
test
scas
aam
sahf
js
dec
mov
pop
sbb
repnz
leave
sahf
mov
dec
xchg
aaa
mov
std
mov
pop
dec
loop
leave
mov
and
add
ds
xchg
hlt
xor
aas
mov
jb,pt
adc
stos
mov
outsl
incl
dec
push
test
push
cmp
jge
fwait
in
adc
insl
not
mov
add
or
or
mov
std
test
jmp
jle
xor
push
nop
mov
into
push
scas
cwtl
jo
lods
mov
std
jl
test
in
pop
or
sarl
mov
jmp
xchg
sub
inc
arpl
and
lret
in
jnp
inc
stos
cli
jne
cld
xchg
popf
cmp
xor
inc
and
movb
sarl
pushf
mov
or
mov
or
cli
mov
adc
loopne
in
scas
mov
in
jecxz
ret
xchg
and
aad
daa
jbe
xor
and
les
mov
popa
pop
clc
adc
or
testb
xor
idivl
inc
xor
std
lods
xchg
in
dec
sub
dec
sarb
loope
mov
out
cmpb
fstl
js
aam
sub
shrl
lcall
pop
fmuls
icebp
fldt
xor
ret
or
add
sub
lods
shrb
iret
test
in
cmpsl
in
and
jne
inc
js
jg
xor
test
mov
or
cmp
rcll
adcl
test
cmpsl
scas
cmp
movsl
push
xchg
popa
mov
mov
dec
jo
xchg
fimull
or
jo
outsb
bnd
sbb
dec
pop
pop
mov
jns
xor
leave
mov
push
stc
in
test
test
cmp
cli
sahf
xor
je
dec
sbb
aad
sarb
out
out
jle
scas
adc
div
mov
cltd
mov
jns
dec
stos
sar
jo
lock
xchg
add
stc
fsubrl
push
aad
andb
cmp
outsl
jg
mov
pop
dec
ficompl
xor
push
push
jg
or
inc
dec
mov
xchg
aam
sub
mov
and
xchg
push
lods
push
jmp
jo
lea
mov
insl
adc
push
pop
xor
inc
or
jne
xchg
pusha
inc
gs
fs
cmpl
adc
add
or
test
cmp
jb
fidivl
mov
mov
call
daa
jbe
les
jp
dec
cmp
cmp
int
or
ret
sub
mov
or
xorl
xor
movsl
subl
mov
cmp
mov
inc
test
xlat
or
add
add
out
fisubs
mov
pop
pop
inc
mov
push
lds
mov
outsb
pop
stos
je
pop
jbe
dec
xor
movl
push
aad
jg
pop
sbb
in
ficoml
lcall
or
or
dec
fsubrp
and
cmc
out
mov
rcr
in
push
mov
mov
cld
fcmove
dec
popa
test
push
pop
testb
xor
das
aam
rorb
imul
xor
sti
push
xor
xor
pushf
mov
bound
xor
cli
mov
rorl
fisubl
filds
push
aad
jmp
popf
outsl
mov
dec
mov
cld
jl
jnp
std
mov
icebp
pop
fimuls
pop
xor
mov
and
test
pusha
decb
dec
push
enter
movsb
test
adc
mov
sbb
cld
enter
xor
popa
shll
push
rcl
cmc
inc
rolb
test
adc
lahf
adc
cwtl
aam
ljmp
into
xor
mov
pushf
push
jnp
sbb
imul
xor
in
pop
es
in
mov
cs
ss
ljmp
adc
mov
sti
push
jns
fdivl
sub
mov
dec
arpl
dec
pop
jb
sub
pop
push
xchg
out
mov
sub
mov
clc
adc
out
adc
cmp
jo
mov
adcl
mov
add
popf
xor
ja
pop
add
push
add
lret
aad
cmc
shrl
lahf
sbb
dec
xchg
in
cltd
push
sbb
xor
cmp
js
adc
xchg
xchg
pop
popf
out
mov
sub
out
sub
adcb
mov
mov
pusha
add
sub
add
mov
sub
add
ret
nop
pushf
outsl
inc
push
push
cmp
push
adc
cmp
xchg
shll
jbe
adc
cmp
jecxz
cwtl
sbb
inc
lods
fnsave
sahf
imul
adc
scas
pop
push
mov
int3
sbb
scas
insb
lock
pop
xchg
jmp
mov
int
addb
sbb
pop
imul
shll
ret
addr16
neg
into
cmc
xor
jl
mov
jg
je
arpl
std
pop
jnp
mov
mov
addl
ret
cmp
push
cmp
in
orl
cmp
lds
sbb
inc
sub
jnp
jecxz
adc
scas
cmc
outsb
sub
xchg
sbb
lret
pop
loop
ljmp
sub
push
outsl
cmp
push
mov
mov
cltd
push
leave
push
aad
sub
call
mov
jle
leave
aad
js
add
xchg
rcrl
pop
dec
pop
cmpsl
std
jo
mov
pop
gs
cmp
mov
push
adc
cmp
pushf
fistpll
jg
lods
gs
mov
sub
aam
or
loop
call
enter
test
in
inc
mov
lds
fildl
or
movsb
mov
jg
inc
enter
sub
aaa
scas
cmp
and
sub
mov
negl
sbb
insl
subb
push
push
jb
sub
push
xchg
cmp
sbb
add
jl
fdecstp
push
cwtl
out
arpl
dec
nop
add
es
lahf
movsb
sub
push
dec
cmp
ret
out
xor
aad
aad
add
scas
pop
xor
xchg
les
and
pop
outsb
mov
add
leave
leave
pop
xchg
test
ret
mov
aas
cltd
stos
out
pop
les
fdivl
loop
les
hlt
mov
int
adc
dec
and
ret
cmp
mov
jbe
mov
push
jo
out
pop
ljmp
pop
cmp
cmc
pop
xor
adc
outsb
sbb
out
bound
pop
add
fs
jae
iret
ror
push
push
adc
outsb
dec
fistps
jle
mov
mov
xor
dec
cmp
mov
mov
jl
xchg
push
sar
stos
jmp
jge
sbb
mov
push
dec
xchg
lock
sub
insb
fdivs
jmp
pop
int3
adc
mov
cmp
xor
dec
add
push
out
cmpb
test
sbb
out
cltd
std
mov
jge
sub
cld
sbb
mov
cltd
jae
pop
mov
es
scas
push
push
mov
or
mov
mov
dec
dec
jmp
jns
mov
dec
roll
push
sbb
mov
xchg
or
sub
daa
xor
pop
sahf
cmpsl
pop
outsb
test
mov
push
cmp
pop
pop
pop
mov
jo
dec
dec
ret
and
outsb
adc
lods
sbb
sub
imul
test
pop
xchg
sub
inc
dec
gs
mov
mov
outsl
nop
add
ss
movsb
add
xchg
jp
addr16
jg
add
icebp
rcl
push
mov
pop
call
mov
add
insl
push
push
out
jno
out
lds
or
scas
cmpl
sub
mov
hlt
pop
push
dec
mov
mov
sar
js
jns
xor
addr16
nop
cld
lret
lret
mov
adc
stos
mov
pop
mov
aad
lea
and
arpl
jle
push
add
push
or
push
nop
sbb
test
add
cld
fcmovb
push
cmp
in
test
cmpsl
xor
and
mov
ret
mov
sbb
jno
out
and
mov
xor
xchg
fwait
cld
test
icebp
fnsave
fildl
jns
subb
add
ds
sub
pop
mov
loope
fwait
adc
jge
roll
mov
mov
repnz
cmp
dec
test
sbb
cmp
adc
dec
dec
inc
cmp
lret
loopne
lret
in
lea
call
aad
xchg
xchg
pop
add
jo
test
and
sub
xchg
inc
jle
cmp
faddl
sbb
pop
out
pop
sub
clc
dec
add
movsl
cs
xor
inc
cmc
push
in
aad
lds
mov
les
gs
hlt
inc
add
adc
and
xor
inc
cmc
push
in
aad
lds
mov
les
gs
hlt
inc
add
adc
and
xor
inc
cmc
push
dec
fs
lds
mov
les
gs
testb
push
movsl
and
cmc
push
in
push
hlt
lds
imul
std
pop
lcall
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lret
pop
cs
cmpsb
jg
outsl
enter
xchg
insb
fwait
das
push
fists
iret
pushl
out
inc
lahf
push
iret
mov
mov
dec
cmpsb
jg
outsl
pop
aas
imulb
push
fists
iret
or
ss
inc
lahf
xor
pop
pop
push
dec
and
outsl
pop
sahf
bswap
aas
push
das
push
loope
xchg
inc
push
out
data16
jmp
fiaddl
cmp
sbb
orl
into
loop
cmc
int3
xor
mov
push
and
data16
setle
nop
xchg
out
lock
jb
andb
fcos
fucomp
ret
pop
movl
dec
xchg
dec
dec
cmpsl
test
pop
jmp
das
mov
inc
sub
fstpt
jnp
push
sub
out
hlt
jg
in
inc
fidivl
add
adc
int3
push
fbstp
mov
pop
test
push
lock
lcall
mov
push
lret
add
add
xchg
mov
jle
sbb
cs
hlt
rsm
and
fisubs
sti
ss
ret
pusha
push
jnp
stos
scas
mov
xchg
dec
cmpsb
jg
outsl
pop
xchg
aas
dec
das
hlt
filds
es
dec
mov
hlt
xor
pushf
loop
fsubrs
test
mov
pop
addr16
cmpsb
jbe
push
subl
cmp
push
add
scas
jp
and
lcall
xor
lret
hlt
shld
or
sbb
aas
imulb
push
fists
iret
pushl
out
inc
lahf
push
mov
xchg
dec
cmpsb
jg
outsl
pop
aas
imulb
push
fists
iret
pushl
out
inc
lahf
push
mov
xchg
pop
push
jmp
sbb
cmpsl
or
movsb
jmp
fisttpll
dec
lds
inc
fsubl
idiv
pusha
mov
push
pop
test
jp
xor
popf
mov
mov
sahf
sub
push
pop
jge
or
in
cmp
shll
aam
inc
pop
out
sub
sub
fmul
test
nop
ja
or
cs
and
sahf
subl
inc
mov
mov
pop
sbb
adc
add
and
je
sbb
xor
mov
push
pop
cmp
jl
xor
fwait
mov
lods
loope
iret
cs
fcmovne
pop
cld
xor
pushl
scas
sbb
add
lods
repz
out
or
xchg
mov
dec
repnz
lods
repz
leave
add
arpl
mov
aaa
inc
mov
dec
cmp
cld
dec
sub
xchg
das
and
lea
aad
ss
ret
mov
std
in
test
lcall
popf
mov
and
cmp
hlt
adc
cmp
daa
iret
fcmovb
rcrb
adc
aas
add
out
mov
jmp
std
pushf
sub
xchg
mov
push
mov
shlb
mov
clc
push
std
adcb
push
mov
jns
mov
addr16
arpl
sbb
cli
rcll
into
in
lds
dec
mov
pop
adcl
push
xchg
lret
sbb
idivb
popf
in
mov
and
popf
adc
cltd
insl
rcll
shlb
insl
das
fnstcw
mov
mov
push
shr
ljmp
pop
hlt
call
nop
xchg
out
fs
mov
jmp
mov
ret
mov
add
shrl
push
inc
sub
arpl
out
lahf
pop
sub
mov
inc
leave
cwtl
movsb
jl
sarl
in
xlat
addb
pop
loop
es
lods
pushw
movsl
jmp
mov
mov
fs
add
sub
mov
cmp
xor
movsl
jg
jbe
daa
dec
int3
cld
inc
push
inc
or
cld
add
dec
xchg
bound
cmp
lret
mov
mov
add
sub
ret
mov
out
inc
mov
fadd
decl
cmpsb
xor
addl
xchg
ds
add
sarl
aad
mov
arpl
jae
mov
adc
sub
sub
jl
test
push
mov
mov
in
jge
mov
xor
mov
cmpsl
kxnorb
sarl
hlt
cmp
mov
adc
sti
aad
sub
lds
jecxz
and
xchg
mov
sub
popa
mov
or
out
mov
sbb
fs
in
push
add
subl
jmp
rcrl
pop
or
fistpl
inc
sbb
jmp
je
ljmp
cwtl
pop
push
dec
sbb
xor
xlat
cltd
bound
xchg
jns
cmp
gs
ficompl
gs
xor
xchg
and
xor
add
xor
ja
data16
shrb
and
add
push
pop
les
xchg
cmpsb
pop
ss
cwtl
dec
or
adc
sahf
outsl
cmp
lahf
dec
cld
ret
sub
hlt
push
dec
jge
inc
mov
ficomps
push
add
int3
adc
adc
xor
outsl
roll
pop
and
push
jne
mov
xor
bound
nop
jns
mov
aaa
or
cmp
divb
sub
xchg
inc
dec
fsubl
popl
int
add
hlt
aas
jne
scas
inc
insl
call
pop
pop
mov
pop
out
addb
shll
je
mov
xor
pop
fidivrl
out
jbe
cmp
cmpsl
sub
or
punpckhbw
adc
into
int
ss
sub
push
ficomps
adc
and
pushf
mov
or
and
rcl
gs
ss
add
cmp
test
testl
out
dec
lea
mov
insb
mov
stos
in
cmp
dec
mov
test
xchg
aam
mov
pop
xchg
xchg
add
jae
xchg
or
mov
test
mov
jbe
insb
leave
add
aam
daa
cs
pushf
adc
je
jecxz
xchg
ss
outsb
mov
mov
or
mov
jno
pop
pop
test
cmc
aas
inc
lods
das
aad
sbb
test
mov
ret
or
mov
pop
xchg
jmp
lret
call
into
lahf
popa
inc
movsb
push
cwtl
fcmovb
in
mov
push
fsts
lea
hlt
and
mov
push
jne
jg
aam
lds
sub
jns
jbe
loop
rcl
sub
xor
xorb
jge
dec
ret
mov
rcrl
rcl
and
ss
ror
out
add
xchg
xchg
cmpsl
add
add
stos
cli
push
cli
fcomip
and
pminub
ss
jmp
dec
or
adc
mov
push
pop
pop
xor
loop
das
sbb
test
shlb
sub
add
jecxz
inc
inc
je
adc
out
aam
mov
jno
aas
inc
push
dec
inc
cmpl
pop
mov
mov
loope
fsubs
aaa
jmp
mov
rorl
roll
or
adc
pop
scas
ret
or
shlb
mov
ret
in
xchg
leave
jno
sti
push
insb
sub
faddp
sub
cmp
sbb
clc
mov
popl
fsub
push
push
test
pop
cmpl
nop
add
inc
loopne
out
into
decl
subb
add
or
add
enter
cmp
pop
pop
inc
mov
fwait
test
fistpll
insb
movsl
pop
std
sub
sbb
iret
mov
aad
popa
xor
aaa
or
in
fnsave
nop
push
aas
jecxz
dec
sbb
lods
xchg
sub
or
dec
add
mov
inc
add
ja,pt
fimuls
dec
push
push
xchg
in
imul
imul
add
dec
jg
in
int3
sub
cmp
fnstenv
jae
xor
test
stos
fdivl
call
bound
pop
adc
xor
dec
call
xor
scas
pop
into
jno
ds
mov
fmull
aaa
dec
aad
stos
into
hlt
cmp
and
dec
sbb
cs
cmp
jmp
fdivr
insb
inc
jmp
add
std
pushf
xchg
fst
jno
clc
xlat
jns
xchg
mov
mov
popa
iret
fcos
jg
divb
fstpl
sbb
push
jno
mov
adc
mov
hlt
jg
mov
mov
sbb
sub
enter
popf
jl
mov
movsl
in
stc
jnp
cmp
ret
push
or
pop
fsubrs
cmpsl
push
fwait
mov
ljmp
adc
pusha
push
movsl
push
adc
rorl
addr16
out
mov
adc
jmp
pop
enter
sarl
ret
push
mov
shlb
xchg
push
or
icebp
push
fdivrl
fists
or
xchg
mov
in
enter
xor
adc
push
hlt
push
int3
push
mov
test
mov
and
fcmovbe
inc
call
sarl
adc
inc
push
lret
dec
loop
std
mov
push
das
jg
pop
xchg
mov
das
cmp
add
test
cmp
mov
loop
xor
movsl
xor
flds
mov
and
jle
and
adc
mov
int
icebp
jae
out
lock
scas
and
stos
stc
loope
dec
rcrl
pop
out
pusha
addr16
add
int3
push
mov
bound
push
pop
lea
pop
adc
and
popa
or
sub
sbb
pop
adc
testb
or
adc
lods
cmp
imul
and
mov
xorl
test
fcoml
rcl
cmpb
fbstp
inc
movsl
cs
lds
imul
in
sar
xor
lret
push
push
inc
and
lahf
subl
adc
push
gs
pop
or
mulb
lret
enter
sub
dec
sub
ret
aas
outsb
fadds
lgs
lds
pop
push
add
in
adc
pushf
mov
and
adc
push
je
cli
adc
and
cmc
jns
adc
test
mulb
jecxz
sbbl
fnstenv
adc
adc
and
imul
xchg
shlb
mov
xor
outsl
jo
adc
lds
and
es
test
fsubrl
jmp
repz
lahf
arpl
dec
fucomp
orb
xchg
insb
xor
out
out
je
out
cmp
mov
lcall
mov
scas
repnz
jno
mov
loopne
ror
leave
ja
andb
xor
add
sbb
inc
insl
arpl
sahf
nop
push
out
repnz
outsl
sub
cmp
push
inc
adc
or
jae
cli
push
pop
and
add
imul
inc
andb
aad
outsl
add
and
xor
nop
push
lock
rol
sti
movsb
cmpsl
cmpl
mov
pop
lcall
mov
mov
cwtl
mov
sub
inc
repz
aaa
add
jae
jo
jmp
inc
rol
aad
lret
sub
jb
int3
xchg
enter
dec
jae
cmp
xchg
dec
sub
cs
mov
ja
sub
or
je
inc
je
push
push
pop
xor
frstor
dec
aam
jns
pop
mov
les
lcall
std
cmpb
ja
mov
fldl
inc
addr16
gs
sub
mov
xor
aaa
ret
push
popf
es
sub
add
mov
mov
mov
and
cmpsb
cltd
mov
popf
fsubl
out
inc
push
push
leave
movsl
movsb
and
xor
pop
mov
sub
inc
ficoml
int
daa
mov
xchg
iret
push
movsb
cmp
cwtd
pop
ljmp
addr16
adc
mov
gs
dec
fistl
add
jp
and
jg
xchg
movsl
inc
scas
out
mov
lock
cmpsl
cmp
sub
arpl
xor
fucom
or
push
roll
lock
int
xor
xchg
jne
test
xor
mov
mov
mov
jge
pop
mov
or
jnp
inc
xchg
mov
xchg
inc
ss
das
cld
dec
mov
push
lahf
xchg
fisubs
int
test
movsb
bound
jnp
and
bound
iret
imul
mov
test
lea
xchg
dec
sub
cmovo
out
jp
shrb
pusha
out
cmp
pop
les
scas
out
stos
xchg
xchg
mov
xchg
daa
cmpl
iret
iret
repnz
inc
rol
adc
movsl
sti
push
ljmp
orl
lock
push
nop
push
mov
pop
inc
cmc
cmpsb
out
mov
aas
popa
sub
pop
mov
xor
cwtl
icebp
lea
loope
add
sub
or
pop
movsb
lret
js
lods
into
pop
stos
pop
inc
sar
xor
xor
cli
add
cli
aam
aas
mov
push
nopl
daa
mov
pop
dec
sub
std
xchg
imul
sbb
dec
imul
addr16
sub
int3
xor
xor
aas
das
lret
stos
pop
add
mov
mov
stc
pop
imul
and
pop
or
adc
and
pop
sbb
and
mov
add
outsb
sbb
popa
push
mov
pushf
in
enter
or
sti
cli
jmp
and
sarl
repz
aaa
dec
je
push
push
pop
scas
push
fmul
push
mov
or
mov
or
scas
and
loop
repnz
sub
cmpsl
je
jge
sahf
mov
cs
dec
mov
xor
scas
ret
scas
push
cli
rorl
cmpsb
fdiv
jmp
sbb
jge
dec
or
testb
inc
or
push
pushf
mov
int3
ficoms
adc
xchg
cli
pusha
jnp
add
push
sti
xchg
fimuls
lock
xor
push
jns
stos
xchg
mov
and
lods
push
push
xchg
lds
insb
and
xchg
hlt
sub
in
out
nop
mov
fwait
or
mov
cwtl
cmp
test
push
mov
inc
jmp
mov
lret
add
pop
cltd
stc
std
push
inc
mov
gs
xchg
lret
jmp
mov
aad
fsub
xchg
mov
pop
xchg
jne
fwait
adc
sub
aaa
pop
push
call
arpl
push
xchg
push
or
stos
push
push
es
fldcw
cmc
cmp
mov
lret
push
push
push
sub
lret
imul
pop
lods
mov
adc
sti
mov
dec
fistl
icebp
push
imul
or
pop
data16
int
and
arpl
xchg
stc
test
loopne
push
enter
andb
bound
jbe
and
rorb
dec
mov
dec
xchg
aam
pushl
dec
inc
lcall
sub
push
add
jb
iret
or
and
sti
jmp
inc
or
outsl
les
xchg
jmp
lock
xchg
dec
mov
mull
pop
xchg
sub
pop
sub
repz
stos
subl
or
mov
inc
aas
movsb
cmc
mov
cld
or
pop
jecxz
loop
mov
mov
mov
lds
jmp
and
xchg
fdivrs
xor
inc
mov
or
sbb
out
addb
adc
jnp
sub
iret
icebp
out
pop
scas
adc
dec
mov
shll
cmc
sbb
fstps
xor
sub
adc
xor
xchg
sahf
sbb
adc
fs
and
clc
mov
fadds
xchg
aam
in
gs
mov
and
or
cmp
popl
int
push
out
adc
roll
push
adc
rcrb
mov
xchg
jb
lods
cmp
cmp
int
jbe
addb
jmp
aaa
xchg
iret
cmpsl
push
cld
ret
sbb
mov
cmp
fwait
sub
sbb
repnz
dec
add
mov
in
cmp
inc
jb
xchg
mov
dec
jb
cmp
inc
fists
lahf
jae
sbb
fstp
xor
sti
repnz
adc
adc
sub
sbb
insl
cmpsl
push
lcall
xor
dec
jbe
cli
xor
mov
and
rorl
or
es
into
cltd
lea
std
mov
jecxz
dec
fsubp
mov
addr16
push
ret
test
cmpsb
movsb
popa
xchg
jae
mov
push
fsubs
cs
mov
xchg
and
mov
mov
loop
in
jp
fstpt
pushf
int
mov
pop
and
lds
cmp
pop
cmpsb
dec
dec
or
aad
mov
insb
lock
dec
dec
test
jge
jge
scas
cmp
popa
ds
hlt
test
adc
insl
loop
es
jmp
xchg
sbb
gs
mov
fldcw
push
cld
jg
fisubl
shl
xchg
fucomi
decl
pop
cmp
pop
xorl
sbb
xchg
pop
iret
addb
pop
jmp
lcall
cwtl
cmp
jl
inc
mov
mov
push
mov
or
mov
or
and
enter
push
pop
mov
pushf
fimull
je
xor
pop
lods
or
sarl
movsb
call
push
xor
adc
inc
mov
out
sbb
jg
sahf
mov
pop
sub
xchg
shlb
pusha
or
gs
mov
sub
dec
jno
xchg
mov
mul
dec
push
xchg
mov
push
scas
iret
mov
pop
xchg
fldenv
xchg
lds
and
xchg
cmp
pushf
xchg
mov
repnz
sub
push
inc
daa
fistps
test
sbb
insb
andl
in
lret
add
push
cmpsb
add
pop
cmp
xchg
pop
adc
bound
rcll
pop
push
inc
fdivrp
and
fldcw
fidivl
mov
add
inc
adc
addr16
pushf
sti
and
jp
adc
cmovge
in
mov
mov
leave
lahf
add
out
aaa
xchg
inc
cmp
lea
or
xor
shll
fsub
cmp
ja
adc
scas
pop
imul
adc
jecxz
iret
jle
lods
subl
scas
mov
push
inc
lahf
sarl
les
nop
and
fistpl
fs
into
stc
or
out
sbb
xor
in
xchg
mov
pop
daa
adc
ja
push
das
ljmp
icebp
inc
mov
mov
push
jbe
xchg
imul
cmp
mov
out
dec
mov
pop
dec
dec
mov
addb
sahf
out
aad
fisubs
xchg
test
clc
sub
stos
and
int3
ss
imull
outsl
cwtl
fsubrp
daa
mov
push
mov
mov
icebp
mov
jne
sub
subb
aad
movsl
leave
iret
add
push
ss
mov
and
inc
jnp
mov
inc
pop
pop
or
mov
shlb
dec
cmp
pop
imul
push
push
cmp
inc
sbb
int
dec
test
mov
cmovns
inc
mov
cmpsl
jmp
or
mov
scas
lods
xchg
xchg
sbb
push
popa
mov
inc
mov
pop
mov
idiv
popa
jmp
imul
jp
dec
adc
aam
stc
test
popf
inc
xchg
iret
or
push
or
mov
inc
and
and
and
inc
scas
dec
pop
addr16
mov
cmpsl
mov
jecxz
push
pop
push
add
sbb
dec
mov
lods
sbb
jmp
lcall
jno
pusha
test
cmpl
dec
push
jmp
fbld
xor
ficoms
xor
ret
pop
pop
push
mov
mov
loop
pop
int
ret
scas
dec
cwtl
sbb
pop
inc
rorb
movsl
or
mov
jmp
or
mov
push
rcl
mov
dec
repz
cmp
mov
and
sbb
leave
and
push
and
mov
push
push
dec
stc
fcoml
jno
movsl
mov
leave
jp
gs
mov
lock
xor
mov
mov
cmpsl
add
pop
cli
sub
adc
into
and
pop
jne
idivb
inc
mov
sbb
pop
xchg
out
popa
icebp
add
data16
dec
scas
push
or
test
andb
xchg
jl
mov
hlt
jae
xchg
push
and
addr16
push
sub
lcall
xor
movsl
adc
lret
adc
jb
enter
sbb
aas
dec
dec
and
pop
jbe
sbb
pop
sub
add
aad
sarl
lds
push
xor
xchg
cmpsb
sarb
pop
aam
mov
in
mov
pushf
mov
mov
test
sbbl
inc
push
mov
adc
popf
lret
loop
popa
inc
jno
cmp
subb
sbb
mov
sub
inc
aas
mov
test
adc
adc
push
pushf
mov
lds
mov
inc
jg
sbb
sub
adc
js
add
dec
in
pop
int
dec
xor
and
mov
outsl
and
jnp
loopne
push
dec
outsb
sub
sbb
ja
movsb
inc
dec
imull
lahf
negl
mov
stos
xchg
ljmp
cmp
div
lahf
lret
out
and
test
shrl
cmpsl
ss
cmp
rol
shlb
cmp
and
inc
ret
aad
xor
mov
mov
insl
aad
mov
rcll
dec
js
inc
xchg
push
push
mov
leave
pslld
int
xchg
test
cmpsb
call
add
jne
data16
or
xor
mov
fsubr
dec
out
je
stos
xchg
fwait
sarl
xchg
sub
xor
loope
jmp
sub
outsb
out
sub
adc
push
test
cmp
loopne
dec
test
cwtl
cmp
lds
sbb
sbb
mov
mov
xchg
dec
js
fwait
or
ds
repnz
pop
and
setl
test
push
mov
fdivrs
dec
sti
push
lret
dec
jmp
stc
jge
xchg
add
jne
mov
or
push
sbb
mov
or
enter
xchg
not
adc
inc
lret
jb
xor
and
in
jae
lea
aaa
or
xor
aad
lret
in
ds
out
ret
popa
inc
lret
into
stc
cmp
inc
adc
adc
jnp
gs
outsl
pop
aas
imulb
push
fists
iret
pushl
out
inc
lahf
push
mov
xchg
dec
cmpsb
jg
outsl
pop
aas
imulb
push
fists
iret
pushl
out
inc
lahf
push
mov
xchg
dec
mov
mov
pop
rorb
out
imull
add
push
into
das
pushl
out
inc
sahf
dec
bound
mov
imul
out
jbe
push
and
gs
ss
xor
fidivs
inc
mov
lods
mov
test
xchg
imul
adc
xchg
inc
dec
inc
pop
shrl
cwtl
in
cmc
clc
mulb
add
js
dec
push
pop
sbb
adc
sti
fcoms
ljmp
jo
push
cmp
push
adc
or
in
stc
stc
test
cld
std
loope
cmc
add
dec
sbb
push
pop
dec
cwtl
repz
push
adc
dec
jnp
cld
adc
std
jne
dec
aaa
pop
daa
rcl
inc
les
jge
daa
inc
ret
stos
adc
lock
add
cmp
xorl
sub
or
test
test
mov
sbb
cmc
enter
push
and
xor
sbb
mov
and
jle
inc
movsl
jne
addr16
jge
dec
or
add
call
jne
mov
push
sub
std
imul
sbb
cmp
xor
fsubp
jb
add
cmp
and
cwtl
test
xchg
cwtl
add
clc
dec
jecxz
scas
nop
jae
and
xchg
ja
push
push
test
xlat
icebp
in
hlt
mov
xchg
mov
aad
and
lods
jo
pop
das
sbb
sub
xor
call
sti
hlt
hlt
mov
sub
dec
addr16
add
daa
sbb
sub
fstps
in
hlt
mov
cmc
clc
fsubs
or
js
dec
push
pop
movsl
test
mov
in
cmc
clc
fsubs
or
js
dec
push
pop
movsl
test
out
inc
cmc
push
jbe
sbb
out
movb
ds
mov
das
ret
ror
push
and
stc
xchg
inc
adc
mov
push
mov
mov
adc
inc
and
cmpsb
cwtl
aaa
rorb
rorl
jg
emms
and
bound
pop
and
or
pop
fwait
mov
mov
mov
shlb
or
pop
sbb
les
rcrl
cwtl
popa
andb
sub
stos
sbb
loop
push
pop
push
inc
into
sub
lret
je
cmp
lock
jns
xor
and
pop
mov
jge
data16
in
push
sbb
imulb
inc
clc
pop
into
pop
xor
loopne
inc
shll
dec
aaa
lahf
pop
or
cmp
in
mov
ret
jg
ja
clc
ja
jno
adc
std
clc
inc
movsb
dec
loope
add
stos
fs
jecxz
je
lahf
push
cs
mov
add
in
pxor
cmp
mov
lcall
add
dec
sarl
imul
mov
inc
cmp
xor
lods
rcrl
sub
inc
sub
test
into
pop
xchg
movsb
fildll
imul
mov
daa
push
pop
data16
xor
pop
sbb
lret
lods
push
adc
xchg
jmp
fs
pop
xor
and
cmp
stc
fwait
jo
push
mov
inc
out
or
or
adc
cmp
enter
pusha
scas
xchg
mov
leave
add
outsl
xchg
shrl
or
sbb
repz
dec
push
push
pop
inc
rolb
xor
outsb
sbbl
test
and
test
es
je
cmp
fnstenv
xchg
adcb
idivl
jg
mov
cld
sbb
fstps
incb
filds
data16
cmp
fdiv
outsb
daa
insb
sbb
xchg
cmp
push
inc
aam
seto
mov
push
sub
dec
or
or
mov
or
add
push
stos
jno
ds
clc
inc
mov
stos
push
xlat
mov
jmp
daa
leave
jb
inc
cli
hlt
fsubr
sbb
pusha
add
cmp
push
adc
movsl
xchg
xor
or
pop
and
sbbl
xor
sbb
div
arpl
sub
jns
aad
push
pop
jns
int
cmp
ds
out
mov
enter
notb
pushf
jecxz
stos
add
inc
out
jns
in
sarl
out
mov
adc
dec
cmp
int3
sbb
inc
xchg
sub
aad
push
sub
mov
test
dec
inc
and
mulb
inc
cwtl
cmpsl
sahf
or
je
test
in
sbb
dec
out
push
jno
loope
push
aam
data16
add
dec
add
fists
ljmp
sbb
push
shll
or
dec
or
repz
xchg
fwait
decl
lods
divb
jb
xor
ja
int3
pop
inc
ds
sbb
push
rolb
aaa
adc
mov
sarl
mov
fistps
pop
xor
pop
push
ljmp
push
xchg
cwtl
push
mov
sbb
pop
adc
fnstcw
fiaddl
push
mov
pop
ja
loope
pusha
bound
or
inc
ret
insl
test
and
shrl
fisttpl
mov
sub
pop
leave
adc
mov
push
xor
xchg
out
xlat
xor
lcall
adc
js
or
or
nop
push
repz
jg
mov
xor
shl
sub
cmpsl
add
or
out
sti
xor
imul
pop
in
adc
cmp
xchg
adc
mov
out
lret
addr16
imul
std
fbld
arpl
lea
ffreep
fists
jecxz
push
add
mov
addr16
mov
or
je
notl
push
add
gs
sahf
or
repnz
jnp
rol
shll
or
inc
or
ds
fcomps
add
loopne
dec
fistl
ds
mov
ror
pop
xor
insl
adc
lcall
jp
aas
dec
mov
ret
cli
xor
bound
mov
lock
dec
adcb
push
or
addr16
out
dec
mov
movsl
mov
loop
add
or
xchg
lret
aaa
sbb
cmc
mov
mov
repz
pop
insb
subb
js
dec
jle
sub
or
repz
cmpsb
mov
lahf
push
lcall
dec
xchg
call
imul
repz
adc
dec
imul
sub
inc
iret
out
adc
mov
stos
ficompl
push
jg
mov
mov
rolb
and
stos
std
iret
call
out
incl
addl
dec
lods
imul
push
shr
sti
loop
or
arpl
test
stos
inc
sbb
ljmp
adc
pusha
sub
daa
sahf
push
inc
addr16
sub
or
cmp
add
cmp
imul
mov
faddl
push
and
jnp
push
lds
mov
inc
jno
jl
mov
testl
jne
and
out
xchg
xchg
ficoml
out
adc
dec
int3
mov
pushf
add
cli
adc
pop
mov
jg
fs
cmp
pop
popa
sbb
jne
sub
mov
mov
dec
jmp
andl
lock
movsl
pushf
sbb
pop
pop
mov
jle
sti
insb
mov
inc
fcompl
sub
xor
add
xor
or
xchg
mov
div
in
stos
xlat
cmpsl
jns
jecxz
push
arpl
add
pop
fwait
imul
ljmp
cs
inc
sub
sub
mov
xor
dec
ret
outsb
ret
adc
ds
mov
hlt
mov
push
sti
cmp
sbb
adc
mov
aaa
out
dec
add
pop
and
rorb
test
xor
mov
jb
push
cmc
push
xchg
adc
inc
sub
clc
pop
sbb
adcl
push
xchg
clc
fsts
or
inc
push
lods
repz
fidivs
add
stos
das
imul
negl
aas
lea
add
jge
test
xchg
dec
push
into
loope
jb
scas
cmpsb
sbb
mov
pop
xchg
pop
jb
xor
sbb
daa
movsb
out
sbb
jmp
jbe
je
mov
das
mov
lock
cmp
loopne
add
sbb
dec
in
xchg
add
test
ljmp
sbb
aas
lahf
int3
mov
aas
loope
dec
addr16
movsb
dec
cs
fdivrl
jbe
dec
data16
test
aaa
or
daa
push
mov
cmp
jnp
jnp
xor
sbb
add
fildl
cmp
jae
xor
popf
fldcw
mov
add
mov
and
test
inc
adc
mov
ret
adc
push
fimull
sarb
dec
sub
pop
aam
push
add
or
mov
cs
divl
add
sub
cli
rol
arpl
pop
inc
mov
leave
fisubrl
jl
out
pop
push
test
lods
popf
mov
imul
inc
loop
gs
rcrl
stos
and
pop
add
pop
dec
daa
mov
out
stc
push
add
jmp
xchg
inc
popa
and
and
adc
jp
ja
mov
and
adcb
inc
jo
fdivl
push
add
lret
add
add
dec
xor
rolb
jae
pop
mov
xchg
inc
sbb
loope
fadd
into
cld
sbb
sbb
addb
or
out
hlt
cs
jle
lcall
lret
stc
xor
scas
into
imul
adc
mov
add
shlb
in
mov
loop
or
jns
sub
out
roll
fstp
mov
or
loopne
pop
ljmp
icebp
push
or
mov
mov
inc
cmp
jecxz
dec
sahf
clc
es
loope
jbe
xchg
push
icebp
pop
pop
leave
insl
scas
sub
sbb
arpl
out
outsl
loop
icebp
je
sub
out
ss
cld
sbb
inc
jl
movsl
mov
sbb
adc
repnz
adc
pop
andb
jb
dec
jle
pop
xchg
mov
xor
mov
movsb
sbb
sub
sahf
outsl
fisttps
xchg
sbb
fdivr
call
movsb
pop
sahf
test
inc
pop
jns
or
rorl
dec
lret
push
or
mov
push
cwtl
mov
clc
xor
jae
hlt
addr16
out
jnp
test
mov
aam
pushf
mov
sub
dec
in
and
sub
in
push
adc
cmp
xsaveopt
ja
fidivl
lds
mov
mov
je
or
jnp
push
add
jnp
outsl
fdiv
mov
mov
movsl
add
mov
cmp
dec
test
push
repnz
pop
xchg
xchg
mov
into
cwtl
lods
jnp
jecxz
std
or
push
clc
jo
cmp
das
mov
fld
xlat
xchg
loopne
jl
jnp
data16
dec
sbb
add
push
aad
and
popa
mov
pop
dec
ret
in
jbe
or
mov
data16
and
lea
push
pusha
out
bound
adc
aas
cmp
lret
cmc
dec
popa
cmp
cltd
iret
jnp
repnz
scas
div
clc
push
arpl
xor
xor
mov
hlt
mov
das
jbe
scas
in
add
cmpsl
bound
sbb
jmp
push
sbb
out
cwtl
fldcw
and
adc
add
mov
filds
daa
rcrl
je
nop
loope
xor
jge
xor
nop
daa
sbb
mov
shl
push
xchg
test
xchg
ja
push
cltd
xor
dec
test
imul
ret
cmc
shr
ss
xchg
loopne
rclb
ret
pop
sbb
stos
sbb
fucom
cltd
in
rol
add
xchg
std
pop
sub
out
hlt
xchg
mov
cmp
mov
jb
ficompl
dec
popf
mov
and
inc
and
sbb
movsb
jmp
daa
inc
mov
pop
ds
mov
add
xchg
iret
stos
lods
ret
push
jne
jle
in
fistpl
fs
cs
inc
mov
test
cmp
push
fcmovne
mov
stos
dec
xor
call
and
xchg
icebp
mov
cmc
loop
inc
int
xchg
cmp
pop
jbe
mov
popf
mov
xor
popf
rol
sahf
rcrl
xchg
subl
push
or
cmp
push
arpl
jbe
jle
clc
xlat
jnp
push
fsubr
loopne
and
divl
pop
cmpsb
cmpsl
mov
dec
or
sub
stos
in
mov
lret
cwtl
or
push
mov
inc
mov
es
inc
adc
lods
add
js
and
lcall
bound
push
loopne
aam
dec
sub
mov
fmuls
rclb
add
jnp
mov
fnstenv
clc
test
dec
adc
loopne
xor
pop
jne
adc
addr16
push
dec
and
sarl
add
mov
xchg
sub
pop
into
fwait
push
xchg
mov
push
dec
iret
aaa
xor
and
cmp
aam
xor
push
xor
test
mov
jne
push
jle
add
xchg
rcrl
clc
outsb
mov
or
int
xchg
pop
mov
jecxz
das
mov
inc
test
sbb
lds
mov
mov
pop
scas
mov
lods
or
lock
mov
mov
mov
sub
cmc
sbb
add
jno
or
jno
xchg
xor
pop
mov
dec
fs
mov
mov
mov
aad
add
jle
dec
adc
inc
test
ljmp
sahf
push
dec
or
cld
inc
fiaddl
aam
lods
adc
jo
sbb
and
stos
es
ja
mov
and
sub
scas
mov
inc
je
push
fstl
xchg
outsl
cmpsb
dec
test
dec
or
gs
sbbb
xlat
xchg
or
test
cmp
mov
and
dec
mov
pop
fs
pop
in
xor
aaa
dec
out
lret
outsl
jno
inc
in
movsb
dec
lcall
pop
push
out
pop
mov
rol
dec
sub
fbld
pushf
hlt
xorb
push
lahf
inc
mov
jecxz
fadds
rorb
gs
imul
je
mov
sahf
adc
cwtl
aam
and
clc
xchg
stc
leave
ja
aas
roll
or
sub
rcr
imul
shlb
into
adc
aaa
test
adc
stos
jae
pop
in
pop
iret
sub
sahf
jns
pop
fstl
dec
pushf
movsb
adcl
push
sbb
mov
fdivrs
dec
jb
fsubrp
pop
push
ljmp
mov
mov
sbbb
out
sub
fstl
jecxz
xor
dec
int
imul
es
jle
cmpsl
xchg
xor
and
mov
repnz
int
adc
outsb
lock
sarb
js
jns
push
in
ja
addr16
std
push
sarb
jmp
inc
fildll
lcall
jno
push
adc
lahf
adc
dec
mov
lahf
iret
dec
rolb
les
sub
adc
sbb
cmp
jns
lret
dec
pusha
lcall
repz
jl
mov
pop
xor
arpl
dec
cmp
push
iret
dec
fildl
arpl
jge
cltd
add
dec
data16
dec
popf
subl
stc
cwtl
mov
sbb
rclb
xchg
adcl
cwtl
mov
popa
out
sub
arpl
rcrl
in
mov
inc
js
sbb
xor
ja
in
insb
lret
jae
inc
inc
movsl
loope
aaa
sub
int3
popa
add
pop
adc
jp
bsf
int3
cs
jle
add
jo
mov
movsb
adc
cmp
mov
lret
test
in
dec
dec
mov
adc
cmp
add
hlt
inc
mov
jmp
out
mov
pop
mov
je
aad
xor
jl
nop
pushf
push
xlat
sbb
xchg
sbbl
imul
xchg
sub
int3
adc
sub
in
mov
hlt
addr16
in
aaa
cmpsl
adc
mov
rcr
jl
ret
xor
hlt
inc
movsb
push
pop
and
add
sub
sahf
arpl
ss
adc
lret
push
fcomp
cmp
adc
add
cwtl
sbb
mov
push
inc
das
cmp
jbe
les
jnp
push
push
and
or
xor
or
dec
mov
push
adc
pop
jae
loop
dec
enter
cltd
cmp
cmpb
adc
push
xchg
clc
lods
dec
inc
cli
mov
mov
lods
dec
lods
dec
lods
lock
jp
lahf
test
iret
adc
dec
sbb
mov
xor
mov
stos
aas
xchg
test
rcrl
lods
clc
push
mov
in
adc
dec
lahf
mov
mov
cmp
lret
add
idiv
dec
shrl
mov
ret
xchg
orb
cli
insb
addr16
jmp
push
add
fildll
cwtl
inc
xchg
xchg
pop
jne
adc
push
lcall
cmp
cmp
aam
and
sub
stos
cmp
ss
pop
shrb
scas
pop
adc
adcb
and
sbb
sub
out
movsbl
callw
adc
movsb
sub
rol
push
pop
test
and
sub
cli
pop
push
loope
fiadds
outsb
add
jnp
ficoml
outsl
xlat
daa
and
pop
pop
pop
sub
jp
std
cs
movsb
adc
xor
push
es
not
pop
add
call
jp
dec
fdivrl
faddl
cwtl
ja
icebp
rclb
sbb
flds
push
rorb
mov
addr16
xorl
int
xor
inc
in
sbb
pushf
fadds
mov
pusha
cld
pop
pusha
in
xor
adc
outsb
add
gs
fnstenv
jp
mov
xor
shrl
outsl
sahf
adc
mov
pushf
outsl
mov
jns
int
lds
insb
xchg
notl
or
adc
and
std
cmpb
cmp
fucomi
dec
add
loop
test
addb
lret
jecxz
loopne
jnp
pop
fs
inc
insb
sbb
movsb
ljmp
push
inc
add
pop
add
jae
popf
sub
aam
push
cs
push
xchg
insl
or
rcll
and
xor
and
fisttpl
in
aam
jg
jge
or
cmp
jp
mov
cmp
push
push
fists
cmp
pop
sub
lods
jle
jge
pop
or
mov
dec
fdivs
movsb
pop
jg
lea
ret
int
and
ljmp
pop
adcb
lods
add
movsb
mov
cltd
enter
cmp
bound
pop
es
dec
sbb
xchg
neg
lahf
int
enter
stos
inc
mov
fs
pop
mov
into
cld
dec
mov
adc
mov
xorl
sbb
loopne
inc
es
stos
std
sbb
fcmovnb
insb
inc
aad
cli
cmp
mov
insb
pop
dec
fmuls
dec
scas
les
add
loope
shl
add
jb
ret
cmp
in
jne
packsswb
and
popa
fwait
not
cld
mov
push
sbb
aad
aad
icebp
inc
dec
rclb
stos
in
or
or
xchg
lcall
cmpsb
push
fildl
jg
and
stc
out
xchg
jge
mov
addr16
adc
fcmovbe
add
dec
insl
adc
adc
dec
addl
sbb
push
les
call
dec
adc
lods
nop
into
shll
es
cmp
lods
xchg
jno
mov
sahf
push
lahf
xchg
or
mov
loope
shr
js
push
push
mov
aas
pop
inc
in
in
jmp
hlt
pop
pop
shll
cmpl
adc
xchg
pop
sahf
mov
pop
push
jno
mov
mov
or
fcmove
lods
xor
adc
sub
push
call
add
push
in
cmc
jns
cld
cmp
mov
addr16
sbb
cmp
dec
xchg
cmp
rorb
ja
rcll
pushf
adc
test
sub
and
test
xor
sub
jnp
ljmp
push
sbbl
mov
adc
push
clc
in
push
sbb
aam
cmp
scas
sbb
lds
movb
pop
nop
call
pushf
adc
mov
popa
sub
out
ds
fmull
mov
xchg
repz
jecxz
das
sub
ret
mov
cmp
into
cltd
dec
cmp
or
sahf
add
sub
sbb
pop
or
mov
mov
or
pop
inc
inc
std
add
mov
push
adc
jp
dec
dec
test
call
sbb
jno
mov
sarb
out
int
aas
in
movb
sbb
cwtl
bound
mov
cmp
cwtl
aaa
mov
inc
movsb
andl
jae
mov
cmpsb
out
or
int3
push
push
lea
push
punpckhwd
or
dec
aaa
ljmp
xor
and
scas
pop
gs
scas
insb
ja
imul
call
xchg
aas
scas
sbbl
jle
dec
es
f2xm1
addl
icebp
inc
and
clc
inc
jno
lret
mov
lret
and
fcompl
jb
inc
ljmp
dec
mov
mov
in
cltd
push
pop
das
mov
mov
jecxz
mov
neg
cmp
cmp
inc
dec
vmwrite
fnsave
adc
stos
mov
fcmovne
xchg
stos
bswap
fmul
jg
repnz
std
ret
testl
mov
jl
dec
in
pop
out
or
fistl
xchg
hlt
xor
xor
xchg
leave
sbb
mov
or
mov
test
mov
mov
push
xchg
sub
lret
inc
and
sbb
scas
sbb
mov
sti
add
cld
push
lds
test
pop
stos
loope
adc
popf
imul
je
inc
sar
jge
cmp
xchg
fwait
push
add
xor
or
out
add
das
pushf
jae
sub
in
cmc
clc
fsubs
or
js
dec
push
pop
movsl
test
mov
in
cmc
clc
fsubs
or
js
dec
push
pop
movsl
lods
test
jne
cmc
xchg
vunpckhps
and
or
js
inc
mov
pop
fildll
in
in
lds
sbb
or
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
xor
mov
pop
push
inc
pop
add
add
push
add
add
add
add
jno
flds
flds
lahf
add
push
add
add
add
add
add
push
add
add
and
arpl
inc
add
add
add
inc
add
jle
mov
add
sbb
push
add
add
mov
add
add
dec
add
add
add
add
add
js
imul
cmp
pop
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
mov
add
add
add
add
adc
filds
push
add
add
add
add
jnp
and
inc
add
jno
pop
add
add
add
daa
add
add
dec
add
dec
add
xchg
add
je
jl
daa
add
add
add
add
scas
add
add
and
push
add
add
add
push
add
add
add
dec
add
add
mov
arpl
add
add
add
pop
add
adc
add
data16
add
add
add
lea
mov
sub
sub
aad
mov
out
and
incl
xor
inc
add
add
add
inc
add
mov
add
imul
mov
add
add
add
jnp
add
sub
pop
add
add
add
add
or
mov
add
out
add
roll
xchg
add
add
add
jnp
add
add
cwtl
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
out
cmp
sub
cmc
add
add
add
add
add
add
add
add
add
add
and
cwtl
add
add
add
add
add
mov
add
add
add
adc
mov
mov
add
sbb
and
pop
add
add
lcall
add
add
add
cmp
cmp
outsl
add
arpl
inc
add
add
mov
add
adc
cmp
add
add
add
add
inc
add
mov
arpl
into
add
add
mov
rolb
add
leave
add
add
and
adc
add
add
add
add
dec
add
and
and
js
aad
add
lahf
add
add
add
sahf
add
add
sbb
cmp
outsb
add
xchg
add
add
add
mov
cmpsl
add
add
xchg
add
add
add
add
cmp
push
add
add
add
add
add
xchg
add
add
add
add
add
dec
add
add
add
add
add
add
add
and
aad
leave
add
add
loope
and
add
add
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
scas
add
add
add
cmp
dec
pusha
mov
into
adcb
xchg
ds
andb
bound
cs
inc
repnz
dec
pop
inc
fldcw
and
insl
add
lcall
divb
rol
std
cld
lock
xchg
aaa
out
cs
cmpsl
add
dec
mov
ja
loopne
mov
mov
icebp
cld
jmp
imul
xchg
aaa
cmp
fwait
sbb
pusha
sub
les
cmp
stos
pop
xor
sbbb
aas
sbb
add
add
fdivl
mov
pop
lcall
inc
xchg
xor
sahf
mov
pop
xor
mov
mov
jl
fistl
xchg
inc
cmpl
push
cmp
frstor
aad
inc
rolb
push
lcall
gs
iret
test
xor
xor
add
andb
in
cltd
in
mov
pop
fnsave
lods
or
or
xchg
cmc
aam
lea
sub
dec
loopne
or
out
icebp
xor
stos
loopne
dec
sub
jne
dec
xchg
adc
cmp
xor
pop
rcll
jns
lock
sub
jge
and
xchg
outsl
icebp
js
cmp
loopne
mov
stos
aaa
mov
in
and
fbstp
les
lahf
dec
or
xor
mov
fnsave
sbb
dec
jge
aaa
mov
pop
mov
mov
out
test
les
pop
mov
mov
or
mov
jp
shlb
roll
lret
jnp
mov
popa
cmpsl
subl
cmpsb
mov
fs
cmp
jne
sbb
push
pusha
aaa
adc
xchg
jle
hlt
xor
in
pop
hlt
cmpsb
xor
loope
int
ja
fdivrp
mov
and
out
pushf
cltd
mov
insl
cmp
xchg
add
sbb
scas
or
ss
sub
cmp
fldcw
stos
loop
and
movsb
adc
mov
cmp
stos
jo
outsb
xor
push
mov
cltd
adc
frstor
sub
movsl
xor
dec
stc
pop
insl
lods
aam
jle
ud2
adc
or
push
jmp
movsb
fiadds
fs
cli
mov
xor
ret
stc
dec
movsb
or
mov
int
fs
cmp
fs
fcmovbe
push
adc
das
mov
int3
std
call
gs
shrl
or
arpl
push
pop
inc
shl
jae
cmp
movsb
and
push
dec
dec
popa
shl
dec
out
andl
and
adc
dec
out
idiv
and
xchg
add
out
adc
add
add
xchg
lahf
cmp
jae
ss
fcmovne
add
adc
mov
es
xchg
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
