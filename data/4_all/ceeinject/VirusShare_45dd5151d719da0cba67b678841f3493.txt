call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int3
dec
jbe
inc
insb
push
cmpsb
sahf
sub
pop
outsl
dec
push
int3
idiv
shr
popf
cmpsb
lea
lods
xchg
jge
insb
push
sbb
or
cmp
sub
fsubr
int3
negb
aam
mov
xchg
jl
insb
dec
sbb
or
cmp
sub
fsub
int3
aad
mov
in
pushf
hlt
ret
stc
sub
dec
push
xor
cmp
xchg
out
sub
in
stc
pop
cmp
mov
nop
pop
sbb
or
cld
or
push
sbb
stc
pop
jmp
movsl
xchg
popa
sub
jae
mov
push
outsb
fsqrt
dec
sbb
sbb
pop
dec
fsub
pushf
imulb
add
xchg
rcrl
mov
and
fdivl
xchg
int3
push
or
std
cmp
jl
fbstp
lods
jns
xchg
mov
add
cmp
sub
mov
mov
outsl
iret
movsb
in
cmp
push
adc
jmp
xchg
les
ljmp
cmp
call
test
data16
insb
push
sbb
or
cmp
sub
fsub
int3
out
cld
fucomip
iret
pushf
mov
lods
xchg
sub
add
and
xor
imul
mov
xchg
ret
call
jmp
nopl
xor
push
and
xchg
mov
aam
pushl
sub
jbe
and
adc
sub
fsub
int3
idiv
in
pushf
cmpsb
mov
pop
dec
jbe
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
pushf
cmpsb
mov
pop
dec
gs
sarl
outsl
lods
pop
test
enter
jg
or
mov
popf
push
lret
or
jecxz
stos
test
je
insl
jle
lcall
sub
push
ret
cltd
dec
xchg
jne
add
cli
data16
orb
mov
sti
dec
jmp
and
pusha
insl
pop
bound
sub
addr16
mov
add
push
mov
add
cmp
aaa
in
movsl
inc
lahf
push
push
gs
push
adc
push
mov
in
out
insl
xchg
lahf
les
lcall
push
pop
jge
adc
xor
mov
shll
push
cmp
adc
mov
dec
pop
stos
daa
sub
lds
sahf
dec
movb
testb
fistps
dec
mov
sbbb
adc
add
jl
inc
orl
out
das
xor
inc
pushf
lahf
fs
jmp
daa
rclb
test
mov
sbb
repz
cmp
sar
hlt
pop
ljmp
add
dec
shlb
ss
adc
ja
xor
hlt
jo
adc
mov
add
call
out
fldenv
fsubrs
sbb
push
inc
lock
add
cmpsl
cltd
dec
and
mov
pop
push
aam
cmp
add
sbb
sbb
inc
push
xchg
popa
scas
dec
test
imul
jmp
sub
in
jnp
filds
mov
test
xchg
mov
cli
cmp
mov
add
sub
mov
sub
push
repnz
lret
push
aas
jae
cmp
mov
out
les
cmp
pop
cmpsl
xchg
jp
inc
cmc
xchg
pop
dec
out
add
jo
pop
push
pop
dec
and
fildl
add
mov
pusha
push
int3
fwait
and
popa
js
lods
and
mov
imull
lods
mov
add
ljmp
fcompl
mov
ds
mov
lahf
shrb
aad
in
cmpsb
cmpb
jmp
xchg
icebp
stos
int3
lods
xor
in
fucom
cmp
test
out
mov
enter
jge
sub
mov
pop
sbb
test
push
imul
mov
push
shlb
adc
and
ja
pop
and
xchg
out
bound
lods
addr16
outsl
xchg
in
mov
push
jne
xchg
mov
sbb
jnp
movsl
fldpi
pop
out
stos
lret
adc
sbb
daa
into
iret
out
and
leave
outsl
pushf
inc
jne
lahf
mov
xor
mov
cmp
add
jmp
imul
inc
shll
xchg
in
push
xor
fildl
movsb
xor
cmpsl
sub
xchg
jns
add
or
push
gs
jno
sub
jno
popa
shr
xlat
and
xchg
cmp
push
je
popf
adc
in
and
test
fdiv
insb
jecxz
ds
xor
jnp
incb
arpl
fidivrl
jno
or
jno
dec
ret
movsb
cltd
dec
sti
addb
in
pop
cmp
add
inc
cld
cli
push
insl
mov
in
out
dec
stc
inc
je
adc
ret
stos
ret
sub
pusha
cwtl
mov
loopne
add
sub
bswap
int3
loop
arpl
imul
mov
add
mov
in
push
in
jl
fildl
xor
andl
int3
addr16
jge
scas
out
subl
sbb
inc
scas
ljmp
rorl
pop
and
bound
sbb
xor
icebp
mov
dec
add
mov
ret
cmpsb
aas
xchg
clc
loop
aas
xor
lahf
sbb
xchg
dec
mov
push
push
mov
push
sub
shl
push
aam
jne
lcall
inc
scas
stos
cmc
jle
aad
pop
pop
cmpsb
data16
bound
movsb
push
in
aaa
cmp
add
in
das
cmc
ljmp
cltd
call
pop
inc
pop
movsl
clc
push
test
inc
adc
pusha
jge
rolb
ret
movsb
jge
pop
iret
outsl
push
pop
jle
pop
or
inc
jnp
sahf
adc
mov
cmp
sub
shll
xchg
pop
jnp
pop
inc
pop
xchg
fbld
xchg
pop
ret
push
aam
dec
xor
cs
dec
call
add
loope
popf
jle
push
push
dec
lret
pop
dec
cld
stos
or
and
sbb
pop
sti
test
jg
divl
cmp
add
into
jge
test
hlt
xchg
mov
cltd
pusha
xor
lret
jmp
lock
adc
daa
pop
lea
icebp
cwtl
push
inc
shll
mov
xchg
and
pop
hlt
mov
pusha
jge
lahf
shrb
push
cmp
pop
testb
or
xor
push
shll
fs
nop
cwtl
push
mov
dec
gs
dec
or
aas
ds
js
popf
jg
loopne
dec
xchg
pop
inc
aam
and
pop
xor
push
adc
mov
int
bound
push
sbb
nop
dec
ret
add
xchg
bound
int
sbb
adc
push
je
sti
addr16
mov
cwtl
xchg
jl
rcll
fsubs
jbe
loopne
ret
xchg
sub
lods
dec
lcall
out
dec
leave
sub
enter
std
xor
sbb
jge
or
rorb
orl
jne
popf
idivl
mov
dec
xor
mov
shlb
negb
lds
push
movsl
dec
mull
rcrl
aas
es
mov
mov
les
xchg
scas
sub
mov
push
movsl
addr16
and
out
jbe
push
add
aas
repnz
inc
cltd
in
pop
aad
xchg
mov
cltd
int3
xlat
in
push
mov
dec
xchg
test
les
jp
sub
lds
sahf
push
fisubrs
je
test
int
test
aaa
insb
jnp
aad
inc
cmp
in
shrb
hlt
mov
in
scas
lods
mulb
imul
dec
repz
leave
push
add
sbb
mov
loopne
xchg
or
les
inc
mov
jbe
sub
dec
in
xchg
ret
je
sbb
push
gs
push
mov
pop
sahf
and
repnz
fistps
or
push
pushf
mov
imul
push
push
jg
dec
faddp
daa
testb
inc
popa
jo
push
js
daa
cli
push
lret
cwtl
adc
mov
je
inc
xchg
ja
imul
dec
sahf
sub
outsb
addr16
jl
push
std
dec
inc
imul
pop
add
dec
test
and
pushf
rcrl
out
loopne
jl
push
xchg
push
outsl
mov
insb
xor
push
fndisi(8087
jo
pop
dec
sbb
jne
idiv
in
xchg
jne
cmpsb
data16
mov
mov
cmp
add
in
fs
add
pop
rolb
jg
shlb
pop
push
inc
imulb
sub
sub
fs
adc
jnp
aad
fisubrs
and
jnp
xor
ficoml
sub
xor
das
js
rclb
push
aaa
mov
daa
xlat
into
push
jg
addr16
mov
rcrb
adc
test
call
and
mov
cld
xor
mov
pop
inc
outsb
negl
add
test
cld
shl
loopne
mov
push
add
cltd
dec
adc
test
add
fdivrs
sub
aas
in
sub
xchg
lret
adc
fsubr
xchg
aas
cmp
or
in
mul
cmp
jg
repz
cs
mov
cmpsb
inc
scas
aas
inc
mov
hlt
stos
mov
pop
cmp
jge
mov
xor
sub
hlt
mov
push
xor
imul
pop
or
sub
fwait
in
fsts
lods
mov
stc
enter
fisttpl
mov
test
mov
push
pop
xlat
cmp
shr
outsb
mov
jp
ds
mov
das
leave
movsl
and
xor
mov
push
inc
xor
jl
mov
adc
in
sahf
inc
ret
je
adc
adc
ror
jb
mov
imul
jle
mov
or
push
ret
std
sbb
sti
in
stos
add
into
jp
mov
mov
mov
push
int3
or
ret
or
mov
iret
pop
test
daa
test
lods
inc
in
das
push
adc
jp
adcl
pop
mov
imul
inc
pop
mov
mov
mov
xchg
fsincos
cmp
jnp
jne
mov
lcall
mov
inc
cmp
lret
mov
jg
cmp
mov
cmpl
push
mov
in
rorb
pop
push
jb
mov
add
push
ret
adc
lds
mov
stos
cmc
xor
shll
add
xor
pop
or
fcomip
js
fsts
cmp
dec
icebp
movsb
inc
sub
add
cmp
fnsave
cmpsl
push
sbb
aad
adc
cmp
fwait
adc
pop
fmul
mov
hlt
loopne
rolb
cmc
aam
sbb
insl
leave
adc
sahf
inc
push
bound
add
fsubl
fs
mov
inc
inc
cltd
test
sbb
ret
cmp
arpl
pop
or
add
sahf
clc
lret
add
mov
bound
xchg
jle
fsubr
das
jae
pop
out
movsb
nop
sbb
pop
or
aam
mov
cmp
or
push
jne
push
fucom
adc
sub
adc
call
pop
sub
jnp
push
shlb
push
out
test
in
inc
or
push
aam
lock
dec
push
pop
enter
mov
in
lret
mov
leave
repnz
imul
adc
dec
insl
push
xchg
clc
dec
fcmove
mov
sub
mov
lret
xchg
mov
sti
xor
ret
aad
testl
mov
test
sub
pushf
add
mov
lods
mov
sub
cwtl
ret
rorl
aas
fwait
stc
mov
das
xor
in
or
ret
nop
inc
push
loope
xchg
push
imul
jg
add
mov
jbe
clc
outsb
out
cld
sbb
and
ss
pop
jnp
in
adc
pop
mov
adc
out
dec
dec
and
rorb
push
in
xchg
and
pop
outsw
clc
lcall
addr16
push
cmp
outsb
sbb
jbe
ljmp
mov
sahf
adc
push
sub
es
popf
mov
dec
sbb
xor
cltd
mov
and
hlt
push
xchg
subb
pop
dec
nop
frstor
and
adc
test
dec
cmp
fistl
out
testb
inc
jle
mov
adc
jae
xchg
push
bound
mov
lea
push
or
and
mov
fs
fsub
sbb
inc
out
jb
push
sbb
enter
call
and
mov
clc
cltd
push
lahf
mov
sub
sarb
pop
out
mov
cmp
shrl
orl
sbb
lds
out
jl
test
sub
out
sub
pop
xchg
fistpl
fcomps
clc
sub
jns
xchg
out
mov
test
and
sbb
lcall
and
int3
mov
repz
insl
lods
loopne
rcrb
scas
mov
and
push
cmp
out
cltd
mov
push
es
std
clc
fcoms
push
popa
data16
dec
pop
scas
mov
sti
cmp
testl
mov
and
sub
or
pop
test
mov
sub
jns
sarl
imulb
xchg
mov
out
hlt
cld
emms
jns
fadds
ljmp
stos
push
push
aas
repz
mov
mov
inc
inc
adc
cmp
movsl
jmp
ja
xchg
mov
fisttpll
fiadds
cmp
mov
outsb
aaa
xchg
add
and
pop
jbe
add
cmp
mov
test
inc
jo
or
enter
icebp
fiadds
pop
and
sti
mov
fstl
xchg
insl
insl
adc
imul
push
xchg
add
repnz
xor
es
dec
mov
in
add
adc
dec
imul
in
jle
sbb
cmp
out
fldl
int
mov
repnz
sub
ret
notb
inc
mov
dec
pop
popa
test
mov
xchg
cli
mov
pop
cmc
push
adc
cmp
pushf
adc
pop
insb
test
imulb
mov
in
ss
arpl
adc
movsl
shl
sysenter
push
popa
out
out
pop
shrd
mov
cmp
xor
sarb
cmpsb
pop
dec
test
fmulp
ja
adc
fwait
rcrl
jmp
sub
xor
add
mov
fwait
push
orl
dec
lds
and
xchg
add
xchg
icebp
adc
xor
fwait
cmc
lahf
gs
add
push
or
mov
pop
fcomps
xchg
sub
or
sub
cmc
push
sti
mov
sbb
adc
pop
insb
cltd
adc
pop
bound
add
mov
in
repnz
and
out
nopl
inc
inc
stos
dec
outsb
cmpsb
sub
lock
sti
and
inc
ss
add
fimuls
mov
xor
lods
out
mov
mov
mov
pop
loope
insb
inc
or
out
popa
push
mov
js
cwtl
jge
test
adc
xchg
loopne
fcmovnbe
out
dec
add
in
std
jb
push
test
aas
test
mov
cmc
lahf
cmpsl
and
lcall
mov
imul
pop
jl
addr16
mov
outsb
pop
in
loope
lret
out
fidivrs
arpl
sahf
cmp
xchg
rcrl
fs
les
inc
fnstsw
movaps
jmp
mov
popa
stc
pop
popa
xchg
movsb
movsb
push
ljmp
repz
fstps
es
mov
sbb
mov
shl
dec
scas
inc
loope
dec
or
xor
mov
lods
xor
les
fs
sbb
data16
push
lret
push
jb
rcrb
cwtl
jae
imul
adc
dec
xchg
and
xor
mov
call
pop
add
jo
das
mov
sub
inc
out
xchg
adc
lds
inc
divb
lcall
pop
cmp
jmp
jb
sbb
addr16
xchg
fcmove
add
out
int
insb
js
xor
scas
popf
mov
pop
pop
fisttpl
push
adc
es
dec
pop
xchg
insl
ss
xor
sub
jo
pop
mov
cmpsb
mov
dec
push
push
icebp
mov
outsl
lea
push
jecxz
pop
cmp
stos
stos
out
adc
add
and
daa
or
and
arpl
popf
dec
in
inc
cs
in
push
fwait
ds
mov
std
clc
pop
shll
dec
pop
mov
addr16
pop
push
cltd
push
loop
lods
sub
popa
cwtl
pop
or
sbb
cmpsb
rcrl
sub
sahf
stos
push
outsl
cmc
xchg
or
mov
xor
div
xor
rcrb
sbb
mov
cmpsb
mov
sbb
lods
add
inc
sub
jle
xchg
aam
sbbl
popa
push
pop
adc
aam
fwait
xor
outsb
call
loopne
arpl
ret
jne
xorl
int
mov
cmpsb
mov
sub
mov
and
loope
test
xchg
dec
dec
xor
into
pop
outsl
xorl
push
adc
pop
jns
loope
loop
movsl
adc
inc
jge
mov
cmp
sbb
cs
and
mov
test
xor
push
sub
push
lock
jmp
and
jne
addr16
xor
ss
aad
aaa
lea
roll
sbb
jno
add
gs
xchg
xchg
fcomps
fists
out
adc
fucomip
nop
sbb
jne
in
mov
mov
sar
cmpsb
dec
cmp
sub
mov
or
xchg
sub
loope
adc
test
push
ja
push
das
xchg
or
mov
repz
mov
into
xchg
or
cmp
lods
dec
pop
mov
aam
sbb
jno
pop
subb
inc
es
pop
mov
jae
lock
popa
insb
sbbl
into
sbb
fwait
and
pushf
xor
popa
lret
out
dec
mov
push
xchg
or
jp
jnp
inc
std
lcall
jnp
outsl
aaa
repnz
push
addr16
inc
jl
mov
mov
sbb
dec
pushf
in
test
mov
data16
dec
push
jmp
call
xchg
sub
sub
adc
sbb
shl
ljmp
or
insl
or
push
pop
das
xchg
shlb
ss
lock
out
mov
push
insl
pushf
sahf
xor
inc
adc
and
dec
pop
pop
xor
and
popf
pusha
bound
mov
aas
rcr
or
xorl
lcall
cmpsl
inc
in
mov
mov
cmc
mov
xor
sbb
test
daa
mov
push
nop
mov
mov
lret
sbbl
lods
in
cmc
ss
sbbb
push
dec
jecxz
stos
ret
mov
das
ss
ret
xor
outsb
movsl
jo
ret
xor
insb
js
xor
mov
jmp
jno
dec
xor
add
mov
mov
stos
iret
mov
fidivrs
lret
and
add
out
fstps
gs
adc
push
mov
jmp
ja
mov
into
mov
pusha
mov
imul
negb
lds
mov
cmpsb
lods
xchg
mov
ljmp
cmp
push
xorb
and
mov
dec
cld
mov
and
ficoms
mov
or
cwtl
inc
dec
fcompl
mov
lahf
sub
add
add
ss
int
xchg
xchg
mov
adc
fldt
dec
aas
rolb
sbbl
sub
jae
test
cld
xlat
clc
mov
push
scas
sbb
and
adc
lret
sub
xor
dec
dec
test
pop
jbe
xlat
into
cmpsl
xchg
add
int3
adc
mov
clc
in
adc
stos
push
sahf
jl
inc
dec
cltd
sub
pop
es
mov
adc
pushf
nop
lea
inc
xchg
mov
in
pop
scas
xor
jbe
adc
pop
mov
dec
gs
lods
jg
cmp
add
pusha
loop
sbb
outsb
xchg
jns
pusha
arpl
testl
ljmp
push
popa
test
repnz
or
cmpsl
in
ret
pop
test
mov
mov
rorb
arpl
popa
or
popa
xchg
lods
sbb
into
lods
repz
add
and
nop
cmp
mov
and
bnd
cmp
test
push
mov
adc
dec
push
orb
pop
pop
xor
sbb
adc
jmp
xor
daa
loopnew
xchg
mov
rclb
rorb
inc
add
data16
jle
add
cmp
lcall
inc
lods
and
and
cmp
inc
cmp
fcmove
mov
or
roll
repnz
mov
cmpsl
nopl
lods
cmp
push
jg
sbb
adc
clc
fbld
xor
push
jnp
jle
xorb
lods
popa
in
loope
add
jns
mov
fisubs
pop
je
cld
and
aas
test
jge
fs
push
or
sti
and
lret
sub
add
cmc
les
pop
lret
fdivl
scas
sahf
fidivrl
sub
lcall
sub
add
jb
mov
ljmp
leave
pop
in
inc
xor
sbbl
mov
scas
test
push
xor
sahf
mov
sub
clc
push
adc
jno
setbe
fcomp
push
das
dec
in
inc
or
xchg
jno
mov
outsl
dec
sub
push
cltd
push
pop
xchg
imul
jbe
std
loopne
sbb
int3
loop
pop
and
mov
int3
mov
aas
mov
in
adc
xchg
dec
jl
push
dec
sbb
dec
out
mov
bound
negb
ret
dec
out
mov
push
inc
insb
sub
mov
add
lea
ljmp
dec
dec
pop
xorb
addb
lds
push
add
aas
rcl
mov
arpl
fldcw
push
dec
xchg
mov
sarl
dec
ljmp
cmpsb
inc
xor
xchg
mov
or
ljmp
rcll
ret
cmpsb
jbe
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
pushf
cmpsb
mov
pop
dec
jbe
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
pushf
cmpsb
mov
pop
dec
jbe
inc
insb
push
sbb
or
cmp
sub
fsub
int3
idiv
in
rcrb
lods
xchg
pop
bound
jge
insb
push
sbb
or
cmp
sub
fsub
int3
pop
push
in
mov
inc
stc
push
jmp
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
fadd
enter
loope
call
push
xor
and
or
clc
in
aad
mov
test
jnp
inc
dec
xor
pop
add
call
movsl
mov
jge
jne
or
cmp
dec
adc
push
or
mov
jg,pt
dec
xchg
inc
xchg
or
pusha
mov
stc
scas
mov
in
mov
pop
push
mov
nop
cwtl
xchg
stos
pop
scas
lds
dec
mov
mov
inc
movsb
cmp
fdivrs
xchg
stos
cwtl
mov
call
mov
popf
imul
pop
test
pop
xchg
mov
mov
xlat
add
cli
test
sbb
sub
aaa
dec
mov
int
mov
xor
mov
sub
test
in
sub
pop
and
lea
inc
dec
mov
and
or
clc
in
aad
test
test
cwtl
cmp
push
push
cmp
sub
xchg
xchg
call
fcmovnbe
shrb
adc
and
add
pop
dec
pop
popa
sbb
cmc
clc
insl
ljmp
int3
stc
out
testb
cmp
daa
inc
pop
inc
inc
pusha
jge
pop
xchg
test
xchg
cwtl
test
push
pop
inc
dec
xor
sbb
call
mov
movsl
test
cwtl
test
push
pop
inc
dec
xor
sbb
mov
stc
je
adc
out
dec
ss
mov
outsb
mov
jmp
dec
repnz
pusha
add
push
into
lret
clc
in
xchg
jae
andl
push
in
jle
stc
or
fsubl
test
lods
push
adc
fldcw
mov
pop
or
fwait
push
sbb
psubusb
inc
jb
ds
loop
loop
xor
mov
jo
or
ss
fsubp
mov
jnp
aas
jns
inc
inc
stos
rcl
les
pusha
push
jbe,pt
inc
or
mov
addr16
ret
loopne
cmpsb
xchg
jg
sbb
idivb
pop
and
mov
scas
daa
stos
push
mov
es
ds
out
or
test
sbb
outsl
psllq
xor
in
call
lods
shrb
jo
lret
sub
mov
stos
mov
dec
mov
mov
push
leave
aas
pop
mov
in
adc
test
out
jbe
les
mov
xor
in
and
mov
fs
or
dec
fwait
mov
jno
mov
jno
and
out
je
outsl
imul
mov
adc
lods
mov
fisttpl
adc
jg
or
dec
leave
or
cmpsb
or
enter
lods
cmp
std
gs
sbb
jb
mov
adc
out
lea
inc
and
jg
pop
sub
fwait
xchg
or
xchg
cmp
sub
leave
pop
add
push
xchg
lea
popa
stos
or
push
jle
and
add
pushf
lcall
insl
inc
fmulp
mov
add
sbb
hlt
xchg
adc
ret
adc
pop
adc
cs
jl
sub
outsb
dec
xorb
pop
ret
sti
add
pushf
loopne
sbb
inc
xor
mov
mov
ret
int
lods
jae
mov
dec
push
sarb
shlb
adc
mov
notl
cwtl
xor
mov
xchg
add
movsl
popa
sub
out
lret
or
cmc
inc
jp
rorb
inc
cwtl
and
jmp
loop
fwait
test
inc
pop
mov
cwtl
int3
cltd
cmp
sub
popf
push
repnz
fiadds
pop
lret
jne
mov
notb
test
adc
addl
insl
and
push
subl
mov
enter
notl
xchg
cmp
mov
mov
insl
cmpsb
add
add
testb
jo
adc
icebp
add
mov
insl
idiv
fstps
push
arpl
xchg
ret
int3
sarb
lret
daa
pop
sub
dec
nop
xchg
mov
ljmp
jl
or
cmp
lret
add
std
ss
ficoms
or
push
icebp
dec
bound
sub
xchg
pop
inc
xchg
push
push
mov
movsl
lea
add
xchg
out
repz
cs
mov
js
ss
mov
scas
into
and
dec
push
es
stos
push
loope
pop
sub
mov
adc
add
mov
aad
or
xchg
stos
enter
mov
jns
shl
pop
popf
rolb
inc
jae
es
incl
rorb
cmpsl
mov
cld
and
inc
decb
in
cld
xchg
or
ja
inc
mov
jo
and
xor
mov
rclb
stos
jp
xchg
int3
call
mov
insb
icebp
outsb
push
gs
jne
pop
mov
push
pop
movsb
cmpsl
sub
mov
sub
inc
mov
and
mov
fcmovne
out
mov
iret
in
sbb
pop
aam
pushf
fmuls
push
hlt
push
sub
pop
repnz
mov
iret
fs
stos
jl
call
out
jle
fsubrl
test
or
mov
outsb
lea
or
sub
popa
stos
xlat
in
add
mov
dec
pop
push
xor
cld
xchg
or
fstp
into
jo
pop
pop
imul
jp
sub
adc
or
flds
push
and
fwait
and
add
sbb
nop
sbb
mov
sbb
movsl
stos
dec
push
mov
mov
mov
dec
lock
lods
xlat
in
jl
xchg
into
fistps
or
mov
rcr
push
ret
es
mov
cmp
rolb
inc
sub
std
js
ret
in
mov
xor
add
frstor
aaa
repz
insl
jne
outsb
cltd
lea
push
push
rorb
adc
mov
enter
xlat
mov
icebp
mov
out
pop
aam
pop
xor
inc
xchg
dec
xchg
add
cmpsl
push
rclb
and
test
call
mov
pop
inc
pop
inc
sbb
jp
xor
stos
push
cmp
or
sarl
mov
and
or
mov
and
scas
sub
jl
mov
insl
push
cwtl
clc
mov
shl
push
rcl
xchg
xchg
mov
sbb
mov
pushl
test
dec
inc
jg
jp
add
pop
mov
sub
push
insl
insb
cmp
inc
sbb
arpl
aaa
mulb
mov
test
enter
add
mov
ss
stos
lahf
lahf
int3
out
ror
jno
pusha
outsl
and
or
adcl
sbb
inc
jbe
inc
sahf
hlt
cld
jo
pop
mov
pop
adc
xchg
and
cmp
call
pop
jp
jmpw
sbb
pushf
fcmove
xchg
mov
add
and
popa
xchg
in
inc
jmp
sub
dec
mov
sub
sbb
shl
push
fnstenv
popf
xor
nop
or
xchg
popf
adc
jne
mov
movsl
repnz
out
or
mov
jecxz
fdiv
stos
cld
mov
xchg
jns
xchg
stos
popf
mov
les
inc
movsb
mov
pop
jp
pusha
xchg
aad
adc
enter
push
out
ljmp
jo
aas
and
inc
jo
xchg
ss
xchg
pop
jb
xlat
sarb
test
cmp
xor
lret
or
add
out
lret
int
aam
insl
sahf
sub
and
push
xchg
or
pop
jg
ret
push
add
enter
pop
out
int3
sahf
fidivl
mov
insl
mov
sub
bound
xchg
rclb
popf
loopne
sti
stc
cmp
les
inc
jg
and
sbb
push
mov
xlat
xchg
orb
fisubrl
stc
mov
popf
cld
add
stos
sbb
lret
out
inc
leave
push
call
stos
cltd
inc
jne
sbb
je
cwtl
ja
add
sbbb
dec
push
hlt
pop
lds
pushf
leave
inc
fdivl
push
pop
shl
ljmp
sti
call
rorl
jg
lret
mov
push
mov
in
inc
ljmp
testl
outsb
outsb
outsb
sti
jo
rol
decl
mov
inc
pop
mov
mov
xchg
mov
dec
clc
mov
lods
mul
pop
inc
xchg
gs
mov
das
xlat
ss
dec
aas
and
mov
cmp
lock
gs
std
cmpsb
xor
lcall
mov
jmp
pop
adc
pop
mov
pusha
mov
inc
cwtl
fisttpll
jns
and
inc
loopne
push
popf
or
test
cmpsl
xchg
xor
dec
push
cwtl
loopne
js
arpl
pop
cmpsl
push
pop
outsl
nop
cmp
xchg
mov
cli
sbb
cmp
and
mov
cwtl
fstl
jge
out
out
lock
adc
push
cmpsb
sub
pushf
fld
xlat
es
jb
das
int
pop
mov
popa
lods
pop
xchg
icebp
test
cmp
andps
inc
fistpll
arpl
stc
mov
cmpsb
fiadds
movsl
xor
inc
mov
and
and
cmp
mov
push
loope
jp
mov
adc
orl
stos
xlat
xchg
or
cs
jle
fisttpl
xchg
inc
iret
xlat
dec
push
arpl
sbb
arpl
fwait
jmp
shlb
cwtl
leave
adc
in
and
in
xlat
data16
xor
mov
pusha
fsubrs
jae
and
popa
xchg
loope
lahf
shl
into
mov
sbb
ret
dec
sar
gs
xor
iret
mov
in
sub
xor
or
and
xchg
in
shlb
std
stos
adc
stos
addr16
pop
ficoms
movsb
ret
pop
dec
out
lret
fcmovnb
and
inc
mov
mov
iret
jl
lcall
aas
mov
jmp
pushf
shrb
dec
fidivrs
xor
inc
mov
stos
imulb
das
stc
add
jae
sub
sarl
dec
inc
adcl
mov
mov
xchg
sbb
dec
aaa
test
jle
iret
rorl
cmp
dec
mov
ja
out
in
subb
pop
or
bound
jbe
cmp
sar
cmpsl
aam
and
mov
gs
push
jnp
out
mov
jg
arpl
xchg
mov
mov
jecxz
or
lods
repnz
adc
test
fucomip
loop
inc
adc
xchg
sub
sub
loop
pop
push
sar
dec
mov
jb
mov
mov
cmpsl
loope
gs
xor
inc
or
adc
test
sbb
imul
in
test
lods
leave
adc
mov
outsb
cmp
shll
cwtl
popf
add
std
xor
sbb
insl
jbe
data16
pop
mov
lods
adc
xchg
push
mov
add
xor
in
push
pop
inc
jl
inc
push
mov
and
or
mov
sub
sar
dec
jnp
jecxz
aam
das
add
loop
lds
into
cwtl
cmp
pop
push
roll
inc
mov
mov
lea
mov
cltd
pop
sub
icebp
xor
mov
sub
or
pusha
pop
xor
pop
mov
lcall
xchg
dec
add
stos
sub
mov
js
sub
aad
dec
fs
cld
stos
mov
and
fsts
push
add
sub
leave
inc
xchg
das
insl
sub
xor
push
out
test
jno
adc
pushf
mov
dec
sbb
adc
scas
pusha
push
xchg
pushf
push
sarl
jno
pop
mov
fs
fwait
dec
nop
mull
jecxz
cmp
pusha
lds
inc
jecxz
movsb
jmp
insl
pop
sahf
mov
popf
mov
sbb
shlb
mov
gs
popa
in
sub
daa
adc
aad
js
mov
cmp
imul
sub
enter
outsb
mov
insl
ljmp
nop
jge
popf
subb
push
or
mov
addr16
fbstp
xor
subl
add
lods
pop
inc
xlat
jmp
addr16
jmp
sub
push
sbb
aas
cli
pop
cmp
and
pop
cmc
loopne
fisttps
hlt
cmp
cmp
push
xor
jbe
push
or
push
neg
out
xlat
lcall
test
nop
nop
aas
or
jno
push
push
ficoms
jnp
jns
ds
xor
fsubl
mov
or
sbb
inc
push
xlat
sbb
ljmp
xor
inc
lahf
int3
icebp
into
xchg
mov
add
jo
dec
gs
pop
mov
dec
push
jle
jbe
test
dec
loop
push
mov
cwtl
inc
pop
push
or
jne
dec
popf
inc
mov
sbb
jbe
mov
add
inc
shl
mov
cmc
fdivrs
arpl
popf
or
movsb
or
adc
das
lock
jle
dec
repz
nop
pop
add
movsb
mov
pop
pop
xchg
in
aaa
cld
pusha
shlb
cltd
dec
xchg
mov
dec
fmuls
pushf
push
mov
adc
fwait
mov
adc
hlt
popa
je
test
test
dec
xchg
mov
std
mov
xchg
pusha
push
clc
mov
add
gs
jmp
icebp
imull
xchg
adc
imul
mov
fsubrs
lret
rcrl
clc
arpl
out
mov
push
or
sbb
dec
mov
jb
scas
push
movsl
mov
je
stc
je
dec
divb
int3
out
pop
fs
mov
jns
aam
movsl
dec
mov
xor
cmp
mov
xor
loop
scas
fwait
dec
sbbl
cmp
insb
mov
sbb
movsb
and
lods
fisttps
mov
stos
out
jo
les
pop
pop
pop
mov
in
les
and
sub
sbb
xchg
int
push
and
negl
add
movsl
dec
mov
mov
cmpsl
subl
fwait
jle
pushf
mov
leave
xor
loope
cld
loop
fdivl
adc
in
push
sbb
cmp
push
rorl
rclb
out
lds
and
pushf
add
adc
sub
dec
mov
push
imul
add
mov
inc
push
push
cwtl
xchg
push
sti
xchg
stos
inc
clc
inc
in
cmpsb
add
ljmp
lock
add
es
mov
pop
add
xlat
jecxz
and
cwtl
push
test
dec
and
out
pop
sbbl
mov
movb
aad
int3
xchg
inc
mov
addr16
ja
jg
test
pushfw
mov
cmp
xchg
ret
xchg
mov
sub
dec
jle
rclb
fsubs
dec
imul
mov
push
cmpl
mov
pushf
pushf
jb
mov
mov
int
clc
mov
ljmp
inc
aaa
cmc
sahf
pop
push
mov
stos
popa
testb
and
scas
push
add
cmp
mov
in
pop
cmpsl
movhlps
jbe
inc
dec
aas
sahf
push
xor
push
lock
test
mov
dec
or
push
loope
mov
adc
or
push
sbb
sbb
push
into
mov
cltd
cmp
roll
xchg
sub
inc
xchg
add
call
sbbl
aaa
inc
loope
movsl
and
push
cmpsl
pop
dec
pop
mov
mov
jno
outsb
dec
stos
cmp
xchg
movsb
ret
jbe
xchg
inc
mov
out
jp
test
mov
cmpsb
imul
aas
sub
jle
mov
push
xor
loop
pop
adcb
iret
add
fwait
adc
incl
scas
imul
mov
aam
add
xchg
out
movsl
push
mov
lock
pop
insl
stc
aaa
outsb
xchg
in
xor
adc
rolb
movsl
mull
cs
add
movsb
fbld
mov
rorl
mov
mov
sub
inc
add
popa
js
ljmp
fbld
aas
lods
mov
adc
lret
into
cmpsb
fsts
cmp
mov
movsl
lcall
sub
mov
mov
outsl
out
cmpb
fstp
adc
inc
call
and
inc
std
pushf
dec
adc
stos
imul
cmp
push
dec
lea
popa
dec
mulb
leave
and
xor
lock
outsb
leave
daa
xchg
sahf
push
aad
inc
mov
or
mov
xor
js
repz
dec
into
pop
pop
mov
add
sub
inc
dec
aaa
insb
add
fwait
cwtl
inc
test
or
mov
and
icebp
or
adc
xchg
cmp
stc
fwait
movb
je
xor
jno
adc
test
ds
insl
add
lret
dec
loopne
mov
jle
sub
push
fisubs
or
mov
sbb
dec
loope
adc
lock
je
and
scas
xchg
sbb
mov
sbb
mov
sbb
cwtl
loop
sti
fidivl
fwait
and
insl
xor
or
lea
jmp
sub
dec
mov
lcall
int
mov
inc
sarl
ljmp
dec
mov
jo
in
push
xchg
insb
aaa
jecxz
jmp
inc
out
test
iret
movsl
lea
sarb
mov
sub
ret
cld
cmp
pop
jmp
and
mov
or
dec
fimull
xor
jge
xor
xor
jae
inc
jne
ss
test
mov
lods
cltd
xchg
inc
mov
fdivrl
lds
mov
push
push
cmp
dec
cmpsl
xchg
jmp
je
jge
shl
push
jne
cmp
cmp
cli
xchg
js
xlat
ret
mov
mov
add
mov
xchg
test
addr16
jae
outsb
clc
sbb
and
in
push
push
dec
sub
ljmp
shrb
jae
dec
mov
pop
daa
call
icebp
insb
lock
insl
les
cwtl
mov
cmpsl
rcr
inc
dec
add
inc
cmp
in
push
sub
shlb
lods
cs
testl
jbe
and
xor
jno
or
cltd
cmp
mov
out
dec
mov
xor
test
nop
fisubl
hlt
pop
mov
fsts
das
test
call
dec
and
in
xor
sbb
sti
push
rclb
pop
or
and
inc
xor
sbb
pop
gs
push
cwtl
xlat
xchg
add
int
sub
popa
mov
fstps
bnd
iret
xor
mov
or
and
cmp
stc
fdivrl
push
mov
or
shrb
jge
xor
cs
mov
arpl
sub
lret
in
cwtl
mov
jmp
mov
inc
cmp
sahf
xchg
aad
jle
mov
sarl
fisttps
lahf
loope
mov
cs
shr
jmp
cmp
add
mov
inc
cs
adc
sub
fadds
xchg
sub
out
std
sbb
dec
mov
je
inc
in
in
aad
outsb
adc
out
stc
sbb
sub
fmull
imul
xchg
xchg
xor
out
leave
ss
out
in
add
outsl
xchg
push
jne
mov
imul
push
outsl
addr16
jle
pop
mov
ss
imul
push
cwtl
mov
leave
insb
cwtl
push
jnp
hlt
dec
cwtl
rcrl
inc
rcrl
xchg
mov
sub
mov
add
test
cld
rclb
mov
sub
lcall
ret
cs
mov
mov
xor
ret
leave
roll
jns
sub
and
inc
jbe
pop
mov
sbb
jge
adc
jg
fisubrl
pop
jnp
movsb
outsl
pop
push
mov
push
jmp
mov
push
orb
jle
mov
or
pop
push
xchg
push
push
test
jl
cmc
mov
and
mov
lsl
push
dec
jmp
cmp
adc
mov
in
xchg
call
push
arpl
rclb
adc
mov
pop
jno
xor
jge
into
mov
pop
jge
scas
cld
popa
jns
mov
jnp
loope
fisubs
repnz
pop
jp
and
mov
inc
aaa
addr16
jno
mov
cmpsb
lea
add
cmc
jecxz
sub
into
nop
stos
js
and
jl
inc
dec
je
dec
jbe
leave
mov
bound
jne
inc
add
dec
aam
clc
pop
cmpsl
cltd
adc
mov
mov
ret
movsl
jne
mull
inc
movsb
decl
mov
mov
dec
fmul
fsub
sbb
fmuls
jg
jmp
mov
std
enter
arpl
aam
adc
call
popa
or
inc
jmp
mov
pop
jle
addr16
cli
add
xchg
add
orl
das
add
les
in
mov
xor
xchg
jno
or
mov
out
lds
xchg
cltd
lods
inc
scas
cmp
mov
jl
dec
into
cld
ja
pop
lret
push
mov
pop
lods
pop
lock
inc
fs
xor
scas
mov
mov
incb
fiadds
push
adc
roll
jns
mov
sbb
movsb
jb
xchg
push
shll
je
mov
inc
mov
jns
push
dec
popf
xchg
adc
mov
in
fwait
pop
mov
into
cld
mov
jo
adc
pop
mov
push
cmp
adc
mov
pop
push
xchg
cmpsl
xchg
add
stos
loope
lret
lret
sub
and
divl
mov
lock
rcll
mov
or
mov
loope
mov
jp
jp
jle
in
adc
leave
loopne
adc
sub
iret
arpl
call
mov
movsl
test
cwtl
test
push
pop
inc
dec
xor
sbb
call
mov
movsl
test
cwtl
test
push
pop
inc
dec
xor
sbb
push
mov
mov
mov
gs
xor
sbb
call
mov
mov
xchg
cwtl
add
ret
inc
aas
inc
mov
xlat
ljmp
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
insb
out
testl
xchg
imul
cld
jge
inc
fcoml
es
pop
insb
out
testl
mov
xchg
in
addr16
ja
inc
fcoml
inc
mov
pop
insb
out
testl
mov
xchg
in
addr16
push
mov
popa
fildll
pusha
and
xchg
cs
sbb
out
cs
mov
sbb
scas
lods
inc
add
out
shl
lods
rcrl
mov
cmp
pminsw
inc
mov
test
inc
xchg
div
aaa
test
sub
push
in
addr16
jbe
inc
mov
or
xor
fldt
push
loop
rcr
subl
je
in
fwait
in
mov
cli
rclb
aam
mov
pop
xchg
daa
or
cmp
sub
pop
or
cwtl
add
mov
mov
notl
jns
call
xchg
push
mov
xor
mov
hlt
call
dec
pop
xlat
sub
cmp
or
sbb
in
addr16
ja
inc
fcoml
daa
mov
push
sub
adc
xchg
inc
loopne
ret
imul
clc
outsb
scas
adc
daa
leave
push
aad
enter
outsl
mov
fwait
sbb
cmp
rcrb
mov
incb
leave
inc
call
inc
add
mov
cmp
or
sbb
in
addr16
ja
inc
fcoml
daa
mov
pop
insb
out
testl
mov
xchg
in
addr16
ja
inc
fcoml
daa
mov
pop
insb
out
fcomip
test
adc
push
nop
xor
rolb
jae
ja
imul
or
leave
dec
test
imul
sbb
pop
aad
inc
leave
ret
lock
mov
imul
cmp
jnp
aaa
aad
inc
jp
cmp
and
adc
jae
leave
popf
rclb
lahf
std
arpl
pop
ret
mov
xor
sahf
jno
ret
fsin
inc
push
sub
outsl
not
mov
xor
add
push
scas
mov
sbb
js
mov
mov
jmp
sbb
adc
leave
aam
sbbl
leave
addl
js
pop
inc
adc
sub
fisttps
inc
jmp
call
xchg
pop
loope
jbe
cmp
scas
sarl
mov
jg
mov
inc
test
mov
mov
cli
xchg
lret
cmp
lods
shrl
test
in
jmp
out
mov
in
std
jb
cwtl
test
cmp
mov
mov
mov
leave
push
out
and
cs
repz
cmc
ret
xchg
xchg
inc
mov
js
or
inc
in
bound
insl
insb
xor
lahf
aad
sbb
movsl
loop
fbstp
pop
mov
xchg
icebp
mov
mov
test
and
jmp
add
pushf
jp
scas
popf
cmpsl
and
xor
shll
mov
cmp
les
outsl
inc
sbb
mov
lahf
inc
fcoms
bound
clc
ja
xchg
and
inc
aaa
inc
pop
add
sub
mov
in
jnp
in
outsl
ja
jae
stc
mov
shlb
mov
lods
mov
scas
imul
xchg
in
inc
js
hlt
aam
test
cmp
jle
sbb
test
mov
lcall
xor
xchg
movsb
in
inc
pushf
mov
insb
ret
imul
cmpsb
inc
and
sub
xor
popa
add
xchg
xchg
adc
or
sub
push
sbb
insb
fdivs
jecxz
mov
xchg
mov
insb
sbb
je
les
xchg
rcl
mov
cli
mov
js
fdivs
incb
cmpb
stc
xchg
sub
test
sub
add
lea
insb
neg
mov
or
bound
test
xchg
sbb
cmp
mov
mov
mov
xchg
shl
test
daa
das
ret
push
and
or
pop
loop
add
sub
test
sbb
sbb
jl
jo
sbb
stos
jae
fnstcw
dec
jno
and
add
pop
bound
or
lahf
hlt
sahf
mov
cwtl
test
fmulp
cli
xchg
das
fwait
bound
jg
shll
leave
sbb
ja
pop
lret
ljmp
cmpsb
insl
cmp
cmovae
lods
cmpsb
jne
movsl
ja
in
or
pop
or
sbb
jo
cmpb
test
push
movsl
push
mov
enter
mov
sbb
aas
test
cmp
add
mov
test
enter
imul
pop
jbe
sbb
sbb
push
mov
jo
xchg
adc
mov
gs
into
or
dec
scas
icebp
mov
icebp
xchg
jge
jl
test
xor
push
sub
outsb
push
lds
dec
mov
and
sbb
xorb
mov
cltd
sbb
jmp
sahf
mov
mov
push
or
mov
outsl
insl
inc
nop
lea
xchg
outsb
daa
insl
ljmp
mov
push
jae
sbb
sub
push
shrl
lcall
cmp
pop
push
add
dec
das
push
add
jno
sbb
mov
jp
xor
fiaddl
mov
scas
icebp
add
aaa
cmp
mov
xor
lods
cli
add
dec
clc
fldcw
sbb
xlat
cli
jns
clc
xor
mov
clc
xchg
loop
xor
or
jp
test
xchg
jb
mov
add
mov
arpl
stos
pop
iret
jge
test
ds
aam
into
pop
stc
es
push
lds
fucom
cmpsl
inc
xchg
cmp
nop
mov
das
mov
push
push
in
data16
into
cmp
push
mov
mov
mov
mov
cmp
mov
stc
sahf
mulb
inc
lds
xchg
push
mov
dec
mov
jnp
dec
sub
jne
sbb
or
jg
clc
push
inc
and
add
inc
lcall
mov
aas
sub
and
sbb
movsl
fisttpl
rcr
idivb
push
push
pop
jg
pop
nop
pop
jmp
push
ror
out
xor
xor
lahf
ja
outsl
lds
jae
cmp
addr16
xchg
jg
daa
adc
fstpl
mull
xor
pop
dec
nop
stos
mov
dec
cmp
sbb
dec
inc
dec
xor
lcall
xchg
push
subb
push
mov
mov
sti
repz
outsb
pop
cmp
mov
mov
loop
inc
lret
int3
nop
inc
inc
fdivl
dec
xor
scas
pop
jae
adc
ljmp
jp
mov
imul
repnz
imul
outsb
jb
loope
mov
cmp
adc
sbb
das
lret
fisubs
outsb
mov
clc
aam
push
mov
lahf
stos
jecxz
sub
sub
xchg
sbb
fxam
jmp
xor
lfs
and
daa
inc
iret
pop
pop
dec
adc
jp
loopne
shl
orl
fadds
or
cmp
ret
outsl
mov
add
jno
daa
js
stos
dec
adc
jb
ja
enter
mov
shlb
and
aaa
mov
dec
fnstenv
xchg
sub
sahf
or
mov
test
xchg
mov
sbb
fwait
pslld
pop
fldenv
xorl
pop
iret
mov
xlat
out
int3
sub
xor
mov
cmp
jle
jb
loopne
mov
cmp
mov
daa
out
xrelease
push
and
mov
xor
pop
push
dec
jnp
push
inc
neg
rcl
into
rcrl
xchg
cwtl
fsts
xor
stos
add
push
mov
mov
pop
sub
aaa
cmpsl
push
into
mov
push
inc
int3
fdivr
mov
popf
popf
xlat
push
test
divb
mov
daa
fmul
add
and
std
push
das
fdiv
rorb
jnp
stos
aad
iret
test
inc
mov
aas
aad
jbe
cmp
push
out
fs
call
xor
bsr
inc
data16
dec
and
dec
inc
ja,pt
dec
sbb
and
sbb
mov
dec
scas
lea
xchg
jecxz
inc
lret
gs
cmp
jnp
or
jne
insl
inc
and
xor
or
inc
repz
sbb
sbb
add
out
loop
inc
push
stos
pop
fwait
std
cmpsl
lcall
mov
jg
sbb
es
iret
mov
cmp
lds
push
call
mov
ja
xchg
clc
jns
call
ret
rcr
xor
add
out
dec
lods
out
jbe
gs
xlat
sub
jae
sbb
std
mov
jl
pop
lcall
imul
jnp
shlb
popf
pop
dec
andl
cs
shl
sbb
or
pop
mov
je
mov
push
sub
pusha
imul
shrl
xchg
add
test
stc
andw
or
pop
jo
or
loope
pop
test
movsb
outsl
sbb
inc
rorl
lods
mov
addr16
mov
fs
or
xor
sti
or
and
sub
cmc
lret
pop
xor
adc
insl
cwtl
sahf
add
jne
roll
mov
loop
fiadds
sub
jmp
insb
lock
xchg
pop
repnz
arpl
and
fwait
out
sbb
adc
xchg
jmp
push
es
push
js
pop
lret
or
jne
inc
rcll
jmp
jno
scas
and
and
out
and
mov
popa
ds
jmp
mov
cmp
fstl
adc
fcoms
rcr
ret
push
nop
aad
les
cmp
ja
pop
pop
mov
xchg
syscall
dec
xor
sbb
push
negl
adc
jmp
lds
rcll
mov
out
cmp
xchg
mov
aam
aaa
fsubrl
inc
out
shl
sbb
push
add
into
jmp
int3
fwait
dec
out
insl
mov
cmpsb
test
sub
fcoml
and
rcrb
sub
xchg
mov
lock
ss
pop
jmp
fwait
movb
inc
shrl
iret
push
mov
mov
aam
push
or
cmp
jne
dec
dec
mov
aad
ja
rorl
mov
xchg
aas
out
sub
movsb
xchg
cmp
bound
cmp
jge
mov
inc
aam
push
jnp
mov
test
idivl
mov
xor
daa
inc
outsb
stos
xchg
scas
popf
jo
sub
mov
and
add
stos
icebp
jno
cltd
insb
pop
jle
mov
or
popf
jp
or
pop
in
adc
bound
jle
mov
xchg
dec
xchg
jb
mov
inc
ds
rcrb
fcmovbe
mov
ss
mov
pop
test
push
popa
test
mov
adc
dec
xchg
add
dec
xchg
into
in
inc
test
cltd
cmc
out
popa
xor
movd
rcr
outsl
xlat
xchg
pop
lods
adc
lods
jle
addb
stos
dec
movaps
and
mov
subl
repnz
inc
fnstcw
xor
xor
les
mov
cmp
outsl
lcall
mov
add
pop
sahf
dec
mov
cmp
ret
das
ds
ficompl
add
fstps
test
add
mov
fstpt
mov
fidivs
aas
add
cli
lret
dec
daa
shl
or
in
les
invd
inc
enter
and
mov
dec
mov
cld
daa
or
scas
xchg
aas
std
mov
repz
lock
jno
add
hlt
fsubl
mov
push
mov
cmp
rcrb
inc
bound
test
pop
test
sub
mov
xchg
xchg
cmp
loopne
xchg
cmpsl
int3
mov
cmp
movsl
cmp
nop
jle
int3
sbb
sub
add
pop
inc
sub
aad
ds
mov
adc
inc
pop
stos
hlt
push
add
jo
cmp
loopne
xchg
sbb
mov
pop
mov
stc
outsb
jbe
xchg
jl
inc
movsb
xlat
out
dec
sub
aas
dec
cmp
adc
pop
inc
add
mov
xor
aam
cmc
int3
fidivl
pop
sub
sub
pop
movsb
daa
stc
xchg
lock
cmp
shlb
repz
pusha
mov
lock
mov
setne
mov
inc
decl
pop
in
lds
bound
push
and
sub
stos
fisubrl
in
in
gs
and
jnp
cmp
cmc
xor
cmp
add
cli
sarl
xorl
iret
adc
cmpsl
push
sub
test
xor
xor
or
lds
js
popa
cmp
inc
sarb
or
stos
call
test
imul
outsl
xor
repnz
fidivrl
in
std
int
mov
cmpsb
mov
inc
lods
arpl
add
dec
cld
or
test
fldl
mov
and
cltd
movsl
sub
sbb
add
imul
xchg
inc
mov
push
mov
adc
roll
test
cmpsl
mov
push
push
repz
in
xchg
aad
mov
pushf
repz
out
pop
in
fisttpl
dec
jbe
push
shr
and
inc
push
or
xlat
adc
jge
into
fstps
fcmovnbe
jp
mov
filds
cld
movsl
inc
int3
pop
test
mov
nop
push
jge
pop
inc
jmp
push
shl
cmp
data16
add
out
shlb
fimuls
xor
daa
push
push
push
xchg
pusha
mov
test
negb
lret
xlat
dec
xlat
idivb
std
push
xor
stos
dec
push
inc
add
mov
or
int3
pop
jne
cmpsb
sbb
push
pop
dec
je
in
ret
xlat
cmpl
test
je
movsb
mov
sub
aas
sbb
lret
je
insb
ret
movsb
push
popa
jg
cmp
popa
clc
fwait
loope
call
test
jbe
push
inc
cli
mov
cmpsl
fmulp
mov
loope
add
xchg
jle
mov
int3
dec
popa
jecxz
pop
test
stos
ret
out
insb
sub
movb
cmc
int
das
add
xchg
sbb
dec
outsl
or
inc
fldenv
call
push
shll
jmp
and
lahf
jae
pop
insb
jg
into
xchg
iret
test
jns
into
in
mov
sub
xchg
adc
mov
adc
popa
mov
rorb
mov
in
into
aas
orb
mov
js
cltd
lods
pop
add
add
inc
je
imul
mov
mov
mov
pop
sbb
pop
cli
add
sub
div
cld
loope
call
push
mov
adc
add
lcall
push
out
and
jle
jb
cmp
mov
gs
dec
stos
je
or
jbe
scas
adc
jb
mov
pop
pop
bound
and
jbe,pt
sub
lods
xchg
push
sarb
icebp
sub
iret
insl
adc
dec
dec
lahf
lcall
hlt
inc
aam
pop
mov
ss
andl
pop
inc
aam
mov
ret
out
jg
les
inc
push
inc
into
int
icebp
bound
cmp
and
lock
mov
inc
fs
pusha
xchg
ficoms
rclb
adc
sbb
enter
add
lcall
mov
inc
test
lahf
jecxz
cmp
into
sub
or
leave
push
mov
sub
fiadds
mov
sbb
add
xor
cltd
adc
xchg
sub
mov
in
aas
out
or
jb
fldenv
cwtl
adc
sub
mov
and
push
xchg
inc
push
ss
test
mov
in
pop
out
mov
sahf
lret
test
out
lock
jmp
dec
inc
aaa
into
and
mov
dec
or
lcall
fs
ds
lds
lea
and
and
cmp
mov
es
xor
andps
inc
mov
sub
loop
fstpl
inc
push
dec
cmp
loopne
xchg
in
dec
adc
pop
sbb
jnp
hlt
mov
dec
jnp
cmpsl
and
push
mov
or
ret
rcr
pop
fsubs
pop
jecxz,pn
into
xchg
jge
fidivs
jge
jl
mov
adc
mov
dec
pop
pushf
popf
mov
ja
cmp
jmp
sbb
cmp
mov
adc
jg
push
pushf
jg
jbe
sbb
pusha
mov
dec
gs
dec
push
inc
pop
sbb
and
loope
adc
mov
push
jnp
dec
pop
pop
out
push
divl
push
xor
adc
add
popa
sub
aaa
sub
hlt
xchg
fsubrs
ds
xchg
cwtl
in
test
push
shll
movl
loop
cmp
dec
sbb
xchg
and
jns
std
sbb
jge
pop
mov
sub
pop
dec
xchg
xchg
jecxz
ja
pop
fisubs
sarl
and
sarb
mov
call
xchg
mov
jns
lahf
arpl
push
fdivr
push
dec
mov
mov
int
sub
jl
dec
sub
ret
push
push
pop
dec
push
aas
addr16
adc
movswl
addr16
inc
out
arpl
arpl
or
mov
pop
jmp
and
gs
sub
in
cmp
int3
sub
test
sti
insb
test
pop
xchg
fisubs
jl
inc
shlb
and
jge
mov
out
mov
adc
dec
in
inc
addr16
les
xchg
and
out
aas
jg
xor
shlb
xor
ficompl
lods
and
jg
push
js
fsubs
lock
hlt
inc
dec
add
je
fildll
cmp
inc
jecxz
std
outsl
pop
mov
mov
das
push
cmpsb
xchg
adc
jmp
mov
pop
icebp
negl
in
jns
mov
std
mov
dec
mov
jae
pop
es
mov
mov
xchg
mov
or
mov
mov
or
and
add
push
mov
pop
adc
adc
cwtl
jle
sbb
pop
imul
mov
mov
xor
dec
stos
xlat
das
std
mov
ja
data16
shr
shrb
inc
lods
cmpsl
pop
adc
popf
xor
fimull
movsb
hlt
add
fwait
sbb
cs
mov
dec
xor
std
sti
clc
cmp
loopne
xor
ja
sti
mov
xor
setno
push
sbb
dec
xchg
stc
incl
jl
mov
les
shl
xchg
jmp
and
mov
jae
pop
lcall
lods
mov
dec
add
movsb
lea
pusha
adc
enter
mov
mov
and
xchg
fisubrs
or
mov
insb
out
inc
rcrb
pop
es
adc
xlat
fmuls
sub
mov
jl
dec
mov
and
add
and
pop
dec
pusha
pop
setnp
dec
mov
nop
in
loop
sti
sbb
jb
dec
lods
sub
xchg
push
add
jecxz
cmp
lods
les
add
mov
sub
ss
xor
mov
dec
out
popf
mov
movsl
bound
imulb
xchg
stc
adc
lret
and
lahf
lea
jbe
fistpll
lret
dec
xor
dec
cmp
loop
push
xchg
fst
push
test
outsb
inc
out
sbb
mov
insb
aas
or
lods
fucomip
push
sbb
aaa
inc
pop
jae
sub
and
mov
adc
in
lret
xchg
nop
xchg
js
call
ja
mov
xchg
inc
ljmp
mulb
stos
pop
fbstp
loopne
andl
test
cmp
push
or
jle
aam
push
sahf
fld1
aas
push
push
pop
dec
cmp
push
data16
inc
lcall
mov
into
les
lods
sbb
jo
ror
jl
and
xor
stos
inc
bound
adc
cmp
movsb
rorl
or
xchg
movsb
mov
mov
mov
shlb
mov
xor
mov
dec
inc
loop
adc
xchg
sbb
sbb
into
test
sbb
es
in
inc
lock
sub
sub
cmc
cmp
cmpsl
fldt
out
push
inc
dec
push
test
sub
jo
rcrb
sub
shlb
pop
adc
xchg
xor
sti
cmp
bound
sub
idivl
jno
push
push
icebp
iret
andl
mov
js
xchg
fucom
in
mov
sti
xchg
pop
enter
xchg
lods
push
jp
sahf
lcall
lea
hlt
and
xlat
xor
jecxz
in
test
subl
mov
pop
cmp
ss
cmpsb
sti
adc
mov
ljmp
dec
in
out
mov
pusha
jne
cmpsb
ret
and
push
out
pop
xchg
add
adc
cld
mov
xor
mov
push
xlat
xchg
mov
mov
outsl
sub
or
insl
mov
mov
xor
int3
ds
imul
or
pusha
mov
repnz
xchg
pop
mov
in
push
test
xchg
xchg
jb
push
sbb
jg
pop
pop
popf
pop
dec
push
jae
mov
lock
cmp
lea
stos
xor
enter
addl
cmp
pop
adc
xchg
cmpl
push
lahf
push
cld
sub
inc
jecxz
insl
int3
out
dec
repz
lds
psubusw
imul
adc
mov
fwait
out
adc
mov
xchg
shlb
mov
adc
jbe
popf
aad
xchg
cmpsl
stc
stos
out
push
cmp
and
mov
and
insb
fbld
fistpll
mov
aas
xchg
leave
fsubrs
jmp
into
cmp
enter
inc
in
lret
movsb
int
add
xor
ljmp
clc
ss
mov
dec
push
sahf
xor
subl
xor
push
jmp
jno
stos
fwait
sbb
mov
inc
addr16
jle
hlt
fmul
mov
cmp
mov
inc
inc
xchg
sub
inc
jge
hlt
inc
xor
xchg
xor
rorb
sbb
cmp
mov
mov
xorb
iret
mov
aad
sti
sub
xchg
sub
divl
cmpsl
cmp
or
sbb
in
addr16
ja
inc
fcoml
daa
mov
pop
insb
out
testl
mov
xchg
in
addr16
ja
inc
fcoml
daa
mov
pop
insb
out
testl
mov
xchg
in
addr16
ja
inc
fcoml
daa
mov
pop
insb
out
testl
mov
xchg
in
addr16
frstor
fsubl
fldt
arpl
mov
mov
adc
lret
push
xor
and
jno
popa
icebp
push
roll
and
adc
popa
loope
roll
sub
mov
add
push
roll
and
adc
popa
loope
roll
push
xor
add
jno
push
cmpsb
and
das
mov
xchg
imul
je
lret
push
inc
out
les
movsb
and
add
mov
jb
mov
push
popa
loope
das
dec
cmp
int3
aad
dec
out
xchg
cmc
mov
pusha
cmp
ror
loope
test
pop
jp
xchg
icebp
pop
mov
add
divl
adc
rol
hlt
sbb
xor
inc
imul
ret
push
sub
scas
mov
add
and
ror
je
dec
push
inc
popa
jno
jle
test
loope
push
sub
xchg
jle
xchg
and
inc
das
dec
movsb
pop
mov
xor
mov
data16
loop
jns
test
loope
mov
jge
mov
adc
popa
loope
roll
push
xor
add
push
roll
and
call
sbb
fadds
in
in
mov
pop
lahf
aam
les
in
adc
or
xchg
xor
adc
add
jo
cmp
mov
je
dec
loope
roll
push
xor
add
push
roll
and
adc
popa
loope
roll
push
xor
add
push
roll
and
unpckhps
sahf
cmp
adc
adc
adc
cmp
cmc
aas
adc
jnp
pop
cmpsb
add
lds
jbe
loope
xor
inc
dec
iret
add
add
jle
shrl
testb
xlat
negl
sub
ljmp
dec
in
lea
mov
push
push
iret
popf
mov
das
call
ds
leave
xor
sub
cli
out
enter
test
sbb
ret
mov
pop
mov
ret
ss
jb
cmpb
or
push
push
pop
mov
into
loopne
push
adc
or
dec
icebp
and
pop
fcoms
scas
int
or
jb
sahf
xchg
pop
dec
out
loopne
aas
mov
adc
inc
inc
mov
loopne
and
scas
xchg
pop
xchg
mov
mov
insl
push
adc
out
push
cwtl
shlb
sbb
outsl
or
dec
mov
pop
movsb
idivl
adc
int
lea
pusha
loope
imul
pop
aam
out
mov
sbb
xor
lods
sbbl
imul
mov
lods
orb
push
imul
lds
lock
mov
jne
out
mov
bswap
int
sbb
fistpll
inc
stos
imul
mov
xorl
jl
aas
ja
mov
loopne
clc
pop
pop
add
cs
out
in
dec
mov
enter
sub
in
push
or
into
stc
int3
lds
shll
dec
adc
xor
enter
lods
aam
push
aad
and
or
mov
push
je
xor
xchg
jle
jae
aad
cmp
std
lods
push
jne
mov
inc
mov
dec
decb
fcoml
jmp
divb
jle
mov
sbb
loop
dec
pminsw
test
fimull
cmp
stos
filds
jg
mov
sub
adc
pop
and
jno
fstpt
mov
adc
jb
test
inc
add
cmp
fistps
add
clc
js
xorl
mov
ret
mov
pop
sub
inc
pop
push
out
adc
call
xchg
dec
sbbb
jo
fs
test
inc
pop
push
sub
arpl
cmp
inc
leave
enter
sbb
xor
loope
pusha
or
push
adc
lds
adc
mov
adc
mov
sub
add
pusha
xor
sbb
add
jmp
inc
sarb
movsb
lds
or
rol
and
inc
das
scas
add
fdivs
dec
adcb
addr16
mov
int3
das
sub
push
xor
sbb
in
or
or
inc
sbb
loop
mov
mov
and
imul
push
push
pop
int3
sbb
fdivr
and
popa
push
dec
sub
mov
inc
mov
mov
data16
jecxz
in
enter
and
dec
xchg
fisttps
or
pop
dec
or
loop
fisttps
jns
or
push
aaa
inc
sbb
mov
dec
jne
std
adc
xor
pop
inc
call
xchg
sbb
push
xlat
cmp
pop
movlps
out
and
xchg
or
addr16
and
ficoms
push
inc
fmul
xchg
mov
cwtl
push
and
xchg
xor
xchg
pop
push
mov
clc
mov
sbb
xchg
xor
push
mov
lret
jp
or
in
jecxz
into
pop
cwtl
push
sbb
mov
movsl
rorb
aas
push
jle
push
ret
ja
outsb
ret
fistpl
dec
iret
push
loopne
test
adc
mov
ljmp
loope
pop
arpl
push
xor
pop
sub
repnz
pop
mov
pop
or
loopne
xchg
lcall
fwait
mov
enter
push
mov
pop
sbb
dec
mov
test
or
stos
jnp
int3
mov
pop
pop
pop
idivl
xlat
dec
arpl
jp
jl
dec
and
bound
fs
and
sets
jge
mov
popf
push
negb
shrl
popa
jmp
fidivs
test
data16
lret
mov
jmp
out
out
mov
sbb
ljmp
movsb
ret
aam
int
loope
fsubrs
cmc
adc
xor
push
outsl
and
aaa
dec
insl
dec
or
adc
mov
and
fadds
pop
xchg
test
xchg
mov
cli
pop
and
dec
pop
mov
lret
inc
stos
mov
mov
ret
cmp
and
or
adc
faddl
pop
jns
mov
int3
popf
outsb
dec
and
test
mov
repnz
jge
xchg
std
mov
add
loop
cwtl
push
jne
xor
enter
adc
jl
mov
pop
data16
test
adc
mov
stos
ja
insb
mov
inc
mov
and
rorl
insb
lods
cli
fildll
inc
je
jno
or
mov
mov
adc
fwait
jnp
dec
fisttps
andb
adc
and
pop
rol
dec
inc
jecxz
std
pop
lret
aam
mov
jle
adc
inc
sahf
movsl
lods
out
pop
xchg
push
stos
fiadds
cltd
cmp
lcall
push
aaa
cmc
lods
mov
and
mov
aas
sar
push
popf
xor
cmpl
stos
inc
aam
xchg
jae
inc
xchg
xchg
sub
aaa
cwtl
fcmovbe
dec
lahf
mov
push
aaa
shlb
mov
mov
sbb
cmp
xchg
inc
fcmovnu
inc
das
insl
lods
pop
and
cmc
and
or
lods
or
and
sarl
xchg
xor
xchg
cmp
mov
sbb
iret
clc
aas
shr
jns
fadds
xchg
push
pop
cmp
loopne
lret
out
mov
testb
das
lods
inc
xlat
mov
stos
cli
sbb
push
push
movsl
das
mov
enter
and
into
push
loope
mov
cmp
loope
scas
mov
adc
cld
mov
mov
mov
icebp
icebp
jmp
push
loope
daa
outsl
je
jmp
rclb
pop
mov
xor
xor
imulb
push
mov
sub
sub
call
mov
roll
and
add
out
sbb
dec
cmp
xor
ret
mov
adc
and
jnp
mov
enter
cmp
cmc
xchg
sub
mov
and
movsb
xchg
mov
and
cmpsb
fxch
pop
sub
out
push
push
cmp
icebp
mov
jnp
es
imul
popa
jl
mov
std
repnz
sub
adc
and
lret
xor
mov
out
push
sbb
bound
jecxz
addr16
jne
sub
lock
adc
inc
mov
adc
sbb
or
cmpl
leave
mov
cld
inc
dec
push
xchg
or
loop
jecxz
jmp
add
aad
cmp
push
hlt
jecxz
mov
insb
mov
mov
ljmp
mov
inc
push
movsl
lret
test
adc
movsb
cmp
insb
fisttps
loop
loope,pt
in
push
mov
jae
enter
jge
jg
sbb
mov
cmp
in
fimull
xchg
iret
adc
dec
out
jo
imul
xchg
jb
push
jae
or
dec
lock
cld
out
ret
push
out
sbb
and
dec
adc
das
pop
aad
jge
xor
mov
punpckldq
imull
loop
rcr
movsl
xlat
dec
loope
cmp
fadd
shll
xor
or
clc
push
pop
mov
sub
loope
enter
jne
jb
mov
adc
xor
lcall
mov
in
repz
or
shlb
pop
fdivrs
fstl
aad
cmpsl
scas
aaa
add
in
arpl
fcomip
mov
inc
mov
pushf
cmpb
xchg
xchg
pop
inc
and
or
lret
ds
out
sub
mov
mov
jne
in
inc
mov
ret
stos
data16
jns
outsb
shlb
xor
imul
loop
aam
sahf
hlt
mov
jmp
or
adc
imul
adc
loop
dec
out
pushf
push
jmp
pusha
out
sbb
filds
imul
jl
mov
push
jno
ret
cwtl
daa
xor
push
insl
mov
jne
fcmovb
inc
push
push
sahf
loop
add
pop
inc
fiaddl
xchg
and
je
fwait
data16
dec
lret
jmp
jmp
xchg
and
repz
sub
xchg
xchg
jno
mov
mov
pop
cltd
jno
mov
scas
dec
mov
sub
sbb
fcompl
mov
jmp
rcr
xchg
pop
and
sbb
inc
js
repnz
jo
or
sub
push
rcrb
aaa
cmp
enter
pop
pop
cmc
cmp
insb
je
mov
xchg
es
into
std
and
adc
inc
add
cmp
mov
icebp
in
mov
lea
mov
cs
test
lock
gs
xchg
lods
repz
aam
sbb
cltd
xchg
sub
or
jl
or
xor
je
pop
movsl
lcall
movsb
rolb
in
add
repnz
dec
call
pop
je
into
mov
pop
inc
addr16
rorb
pop
inc
call
mov
lahf
add
push
dec
sbb
or
or
pop
aad
add
mov
ret
arpl
push
div
jmp
ficomps
or
sub
fwait
dec
leave
out
int3
dec
inc
adc
sbb
push
aad
aaa
popf
test
lcall
mov
xchg
aad
ja
out
push
xor
and
scas
cli
bound
mov
mov
push
cmp
adc
test
push
bound
add
test
ret
lcall
cmp
fcmove
insl
inc
inc
js
and
aas
pusha
ljmp
pop
scas
jl
pop
cli
outsb
lcall
and
xchg
mov
decb
cltd
and
mov
inc
ret
fisubrl
sti
xor
fidivrs
icebp
pop
mov
jecxz
push
jne
or
xchg
inc
lahf
inc
lods
xchg
sti
aad
movsb
les
daa
pop
sub
mov
mov
lret
push
cmp
mov
hlt
not
orb
cltd
ja
test
add
inc
repnz
xchg
pop
and
add
or
stos
mov
adc
jmp
aam
sub
js
xor
cmp
sub
push
test
imulb
insl
fildll
js
ja
pop
inc
lcall
jno
repnz
scas
push
in
cwtl
lds
cltd
enter
jmp
inc
jecxz
aas
ja
lret
je
mov
test
or
sahf
loop
ljmp
arpl
fucomi
jns
stos
jno
push
jp
sahf
mov
xchg
iret
pop
adc
xor
jge
xchg
in
mov
test
cmc
fldcw
xchg
sbb
fstpt
mov
int3
lahf
cmp
int
imul
dec
mov
mov
cmpsl
aad
xchg
xchg
or
shr
cmpsl
xchg
xchg
sub
mov
pop
xlat
mov
fs
add
subl
ss
rcr
ljmp
mov
out
mov
jmp
mov
sbb
std
jb
mov
mov
and
iret
mov
mov
cmc
pop
call
icebp
cltd
cmc
mov
add
in
push
push
cmp
push
xor
push
les
mov
mov
pop
scas
fdivl
lcall
xchg
inc
jno
jle
sub
push
push
cmc
mov
mov
movsl
xchg
cmp
mov
enter
sbb
and
rorl
jbe
filds
aas
xor
in
xor
inc
lcall
pop
fs
inc
repz
adc
mov
push
jb
xchg
ret
or
ret
lret
in
cmp
jb
cld
and
add
xchg
in
test
adc
popf
add
pop
push
aad
aas
icebp
dec
sbb
test
cmp
sbb
xchg
sub
pusha
inc
pop
jbe
lock
add
mov
sub
xor
and
pop
push
cmpsl
out
dec
outsb
mov
mov
mov
or
fnstsw
fisttpll
dec
mov
rolb
enter
in
mov
nop
xor
xchg
xchg
fs
cmp
push
and
sbb
cmc
inc
xchg
pusha
add
popa
or
ss
stos
out
lods
push
adc
xor
mov
dec
repz
cmp
in
mov
mov
into
add
sbb
lock
jnp
push
jns
cmp
bound
push
aad
cld
scas
out
repnz
inc
test
push
js
rcrl
add
mov
xor
sub
jp
or
sub
je
test
xchg
mov
mov
lret
rcll
int3
jle
movsb
mov
inc
sub
andb
ss
mov
and
outsb
push
or
jecxz
mov
add
jg
int3
les
sub
cld
push
mov
add
int
pop
sbb
push
leave
xor
stc
rcrl
imul
pop
cmp
js
xlat
xadd
shlb
addr16
data16
xor
insl
sub
push
add
push
mov
mov
cmp
cmp
inc
add
mov
cmpsl
leave
sub
inc
in
or
inc
jo
sbb
pop
add
xchg
in
insb
mov
dec
sbb
scas
gs
and
in
push
sahf
dec
leave
sbb
inc
daa
mov
xchg
cvtps2pd
mov
xchg
ja
sahf
add
dec
test
push
out
jae
xchg
mov
addr16
push
mov
fistpll
into
lock
imul
pop
fs
jne
xor
mov
dec
or
js
xchg
dec
sub
add
pop
in
lcall
push
sbb
cmp
sub
imul
por
mov
dec
xchg
jo
jb
test
loop
shl
leave
or
loop
fistps
cmpsl
push
add
stc
inc
fsubl
add
int
inc
out
and
cmp
enter
int3
pop
adc
out
iret
outsb
sub
pop
pop
mov
rcrl
push
inc
in
cwtl
xor
push
mov
fsubl
jmp
in
dec
mov
push
xchg
gs
pop
or
sbb
xchg
cwtl
cmpsb
xchg
out
and
jmp
push
mov
mov
fs
sbb
int3
mov
lahf
in
jno
std
mov
outsl
cmpsl
aam
movsl
sub
aas
pop
add
jp
pushf
sbb
mov
testb
shll
je
adc
pushf
dec
leave
push
hlt
ret
fstpt
stos
sahf
cmpsb
pop
inc
out
fwait
jo
dec
or
dec
pop
loop
jae
pop
rorl
scas
xor
xchg
adc
adc
jecxz
sub
push
add
dec
mov
nop
mov
xchg
and
and
es
pop
cmpsb
xor
mov
popf
mov
jmp
mov
xchg
in
xor
xchg
jg
xchg
aam
add
sub
and
dec
xchg
and
or
comiss
add
int
cmp
movsl
pop
stos
fbstp
inc
inc
mov
sub
mov
xor
call
push
push
movsl
scas
mov
jg
dec
push
jle
sbbl
ret
inc
xchg
movsb
xchg
sbb
push
shlb
int
iret
in
fsubs
sbb
jp
subb
add
cmp
aad
xchg
cmpsb
stos
scas
mov
aad
into
push
loope
sub
xchg
test
cmp
in
imul
adc
inc
orl
sub
cmp
pop
imul
adc
loope
pop
jmp
test
inc
dec
adc
or
in
push
mov
sub
pop
call
pop
or
lret
test
addr16
cld
dec
movsl
mov
cmpsb
pop
jg
int3
cmpsl
test
lret
into
jae
cli
lods
cmp
cmp
jb
fidivrl
fcmovne
mov
ja
push
in
jl
mov
jno
out
mov
jmp
or
cmp
repz
lea
xchg
lods
or
inc
cmc
pop
in
mov
mov
sbb
xchg
lods
xor
loope
mov
ret
imul
loop
cmp
aaa
push
imul
adc
mov
testb
sbb
sbb
stos
dec
fiadds
xchg
test
cmp
push
lcall
jo
cmp
cld
push
xor
adc
pop
push
test
lock
nop
addl
push
inc
lcall
sub
push
mov
out
sbb
dec
jl
xor
stos
repnz
jmp
gs
ret
sub
pop
sub
inc
jnp
add
pop
lcall
lret
push
fsubrl
xchg
sahf
cmp
push
data16
clc
inc
xchg
lods
dec
xchg
scas
gs
jb
ja
sub
jle
and
dec
push
pop
ss
loopne
adc
fsubl
xlat
lret
not
test
push
popa
hlt
jbe
cmp
mov
cmpsl
mov
xor
xchg
aas
les
mov
repnz
xor
or
fdivrp
test
test
call
and
or
mov
stos
popa
adc
in
dec
cwtl
dec
popf
mov
push
add
sub
ret
fnsave
jmp
pop
mov
cli
mov
push
ja
dec
test
ja
and
iret
fwait
add
add
dec
es
sbb
aas
js
and
imul
icebp
sub
daa
out
leave
cmp
scas
ret
movsb
add
fstl
aaa
ds
negl
test
or
jbe
mov
jb
shrl
jae
fs
mov
mov
inc
pusha
xor
fdivrl
out
rcll
jmp
mov
xchg
fsts
fwait
xchg
cmp
rolb
add
out
adc
mov
sti
rcrb
cmp
lock
inc
push
inc
out
aam
mov
mov
pop
and
pop
cmpsb
mov
insb
out
mov
or
mov
jmp
clc
dec
lret
stos
xchg
icebp
inc
pusha
sbb
into
in
mov
push
pusha
cmp
inc
push
pusha
push
mov
shrd
outsl
cmpsl
les
rorb
imul
cmp
lock
xlat
pop
add
mov
lds
cmp
inc
sbb
sarb
lods
lcall
push
inc
arpl
add
out
in
pusha
xlat
dec
cmp
stc
shrb
rorb
dec
popf
stos
popa
stc
add
sub
push
mov
out
cmp
out
aad
cmp
mov
ret
adc
stc
adc
inc
jae
mov
pop
fisubrs
int3
ljmp
leave
fstpl
pop
jae
sbb
das
pushf
xor
out
pop
adc
inc
cmpsb
xor
push
rcrl
cmc
mov
fcomip
in
pop
dec
mov
mov
rcr
dec
pop
xchg
loope
mov
mov
jb
in
es
dec
mov
pop
add
jno
xchg
xor
fidivl
rol
in
lods
push
jnp
inc
mov
frstor
xchg
pop
pop
sbb
fsubrs
dec
ret
cmp
out
push
mov
mov
mov
and
ret
sbb
adc
jnp
sarb
jbe
daa
test
cld
addl
insl
pop
and
cld
mov
leave
jbe
dec
mov
jae
cmp
lret
lret
sub
stos
xchg
enter
mov
dec
ljmp
xchg
add
scas
push
mov
pop
cmp
jmp
sbb
mov
inc
sbb
mov
xchg
into
enter
xchg
ds
test
aad
ds
mov
aaa
int
sub
pop
jecxz
lcall
addr16
cltd
xor
inc
imul
bound
out
je
aaa
jo
and
aam
and
xchg
sub
sub
shlb
loope
lods
testb
dec
pop
mov
cwtl
enter
cli
out
dec
hlt
imul
insb
out
push
in
scas
sbb
mov
inc
xor
adc
in
cwtl
cmp
leave
imul
into
cltd
xchg
subb
testl
add
or
sbbb
lahf
sub
pop
pushf
inc
dec
xchg
and
jecxz
cmc
xor
inc
dec
mov
fwait
mov
push
repnz
enter
in
adc
sbb
and
rcr
mov
bound
es
jae
les
les
inc
mov
pause
je
xchg
or
call
lods
cmp
add
or
pop
xlat
outsl
lcall
icebp
popa
loope
roll
push
xor
add
push
roll
and
adc
popa
loope
roll
push
xor
add
push
roll
and
xor
add
jno
inc
inc
push
xor
add
push
roll
and
adc
popa
loope
roll
push
xor
add
add
push
and
xor
jle
insl
insl
pop
pop
dec
dec
cmp
dec
and
fstp
int
mov
popf
popf
lea
jge
insl
xor
dec
cmp
sbb
in
in
mov
mov
lea
iret
pop
xchg
dec
and
or
mov
lods
test
out
leave
clc
rorl
pop
cmp
cmp
sub
out
mov
fldl
clc
mov
mov
xchg
sub
adc
lods
rclb
inc
cltd
lea
xor
inc
jge
es
popf
jb
subl
sub
insb
cmpsb
adc
cmp
int
lods
mov
mov
mov
pop
mov
cmp
cld
into
in
clc
pop
and
xor
lods
std
pushf
arpl
xchg
jge
shlb
xchg
loop
pop
fnstsw
mov
clc
jne
call
cmp
xchg
pop
pop
mov
ret
loop,pn
cmp
push
fnstcw
int
inc
pop
popf
mov
insl
pop
pop
dec
dec
fnstcw
stos
or
stos
int
mov
lret
adc
pop
mov
push
push
inc
insb
imul
test
rol
aam
pop
call
daa
das
pop
sub
push
pop
dec
add
jb
or
fisttpll
ret
call
add
cmp
push
cmp
sub
or
fstp
int
mov
popf
lea
pop
pop
dec
dec
cmp
sbb
in
in
fstp
int
mov
popf
lea
lahf
scas
lea
dec
scas
jae
in
sub
xchg
dec
incl
cmp
mov
pusha
and
mov
inc
out
xchg
loop
push
insl
pop
aas
push
mov
mov
adc
jb
xchg
in
xor
mov
mov
mov
popa
cmp
push
repnz
out
cmp
mov
xchg
shrb
inc
adc
sbb
jne
add
scas
rclb
inc
test
jae
dec
mov
int
call
das
add
std
insb
repnz
xor
pop
inc
insb
daa
sub
inc
adc
xor
mov
loopne
loope
jb
mov
and
shll
mov
push
pop
dec
push
inc
mov
aaa
aaa
mov
pop
lds
lret
add
mov
fsts
lcall
rorb
mov
mov
sarb
mov
sbb
pop
fmulp
out
inc
cmpsl
pop
cmc
popf
lds
sub
add
jmp
mov
mov
push
dec
in
fnstsw
imul
cltd
sahf
bound
mov
mov
push
xchg
loop
mov
xchg
lock
movsb
mov
fisubs
push
xor
mov
ffreep
int3
add
gs
add
int
fcmovb
insb
sub
sub
outsl
fmuls
adc
test
fmul
sub
xor
mov
div
dec
movsb
daa
add
mov
subb
je
rclb
pop
fstl
cmc
mov
mov
js
adc
leave
mov
imul
jmp
aas
loop
pop
xor
in
jmp
dec
call
fstps
in
push
enter
mov
lods
ljmp
jbe
rol
test
ret
in
nop
jecxz
xchg
push
sbb
daa
sahf
mov
sub
lret
jmp
lret
sti
daa
jns
loopne
ret
mov
mov
mov
test
aas
inc
xchg
jb
pmulhw
mov
jo
es
movsl
test
les
sub
xchg
sahf
arpl
mov
pop
xor
dec
jns
pop
adc
mov
xlat
xor
stc
or
enter
rorb
sbb
and
push
mov
js
aam
fcomps
or
adc
ds
mov
pusha
fistpl
rcr
inc
adc
jmp
fldcw
mov
xor
xchg
ljmp
into
imul
mov
jge
push
jle
add
xchg
out
mov
outsl
fcmovu
popf
addr16
mov
addb
mov
xchg
rcrl
and
sub
lods
xor
push
inc
cmp
pop
cmc
push
sub
andl
jne
lret
sbb
ljmp
cli
jb
mov
pop
push
and
mov
dec
aaa
ficomps
cmc
inc
and
xor
cltd
pop
push
ss
or
or
jl
jno
dec
jge
dec
rcrl
pusha
fdivrs
push
sub
popa
jb
lods
out
push
xlat
test
into
test
and
mov
pop
out
adc
xorl
mov
inc
out
out
fcmove
fisubrs
cmp
ljmp
xchg
int
xchg
cmp
testb
xor
pop
adc
imul
imul
test
cwtl
lods
and
lcall
test
inc
sar
test
roll
imul
dec
inc
mov
xor
dec
mov
gs
push
pop
mov
cmp
adc
loope
add
jbe
movl
loope
scas
mov
repz
or
mov
dec
jp
inc
inc
repnz
loope
inc
aaa
adc
cmp
lods
nop
mov
andb
loop
lret
lods
stos
mov
dec
jae
and
pop
or
ds
stos
dec
pop
and
mov
loope
push
add
jnp
lahf
lds
scas
push
pop
movsl
cmpsb
into
cltd
shrb
jb
add
push
xor
outsb
or
icebp
add
in
fsubp
test
pusha
pop
push
lods
aam
mov
xchg
push
lahf
popa
bound
and
add
jbe
xchg
sbb
inc
add
call
mov
xlat
loope
addr16
inc
or
dec
call
mov
jnp
add
jno
aad
sarl
mov
cmpsl
in
lods
sub
into
xchg
ss
cmpsb
add
out
cmp
sub
jmp
shrb
adc
cwtl
mov
dec
jle
pop
sti
cmc
add
cmp
loop
fstpl
sbb
cmp
stc
xor
das
std
aam
lret
lret
scas
adc
add
scas
and
mov
fisttpl
test
ja
dec
sbb
inc
xor
inc
test
mov
out
hlt
test
pop
push
je
mov
jae
lcall
dec
dec
rcrb
int3
inc
js
sbb
dec
lock
pusha
loope
cmpl
popa
js
sub
stc
adc
mov
nop
mov
cmp
mov
inc
add
pop
cmp
sbb
mov
xchg
mov
sahf
test
lods
and
gs
in
mov
jno
mov
jae
add
mov
into
push
enter
lock
int3
pop
js
mov
loope
pop
cmp
xchg
sbb
ds
insl
jns
push
pusha
pop
or
mov
mov
notl
mov
pop
fcmovb
ja
in
push
fildll
pop
pop
lea
dec
jae
insb
push
inc
repz
cs
pop
sub
clc
test
daa
dec
mov
xchg
add
fisubs
mov
dec
arpl
mov
mov
sbb
insl
push
fs
pop
mov
mov
ja
nop
scas
notb
and
inc
or
dec
mov
push
jnp
and
out
ja
ds
les
mov
enter
mov
push
pop
cmp
jle
sti
xor
lods
and
jecxz
adc
out
js
mov
jnp
jbe
cmp
adc
jmp
cs
cmp
inc
fdivrs
push
popf
js
int3
push
inc
inc
fiadds
xchg
incb
outsl
dec
xlat
xor
pop
or
mov
add
inc
popf
les
adc
pop
pop
fsubr
mov
adc
jg
lret
push
xchg
push
mov
push
hlt
sub
and
lds
pcmpgtb
data16
sbb
or
or
cmp
cwtl
in
xor
jno
push
add
mov
push
hlt
adc
jbe
fsubp
xor
jae
adc
frstor
fmull
cmpl
adc
popf
dec
fisttpl
fs
mov
sbb
mov
pop
mov
sarl
sahf
jg
mov
loopne
mov
mov
mov
fnsave
jb
inc
in
mov
sbb
push
fdivrs
adc
shl
in
pop
push
das
pop
inc
mov
mov
fldl
jle
lret
ds
lods
add
sub
dec
sbbb
cmp
xchg
pop
mov
jp
ret
in
or
mov
and
popa
cmp
ljmp
lahf
lds
cmpsl
sti
test
jp
push
xorl
xchg
add
test
aam
xchg
enter
lea
or
aaa
lock
ds
cmpsl
scas
dec
dec
lds
and
das
jno
and
repnz
cmp
ja
filds
shll
jecxz
shrb
outsb
xchg
cmpsl
idivb
subb
sub
iret
dec
and
dec
shrb
roll
jecxz
dec
cmp
mov
cmp
popf
jo
enter
fdivrp
inc
scas
test
rorb
mov
add
shll
insb
jo
mov
cwtl
cs
pop
in
popa
jno
or
mov
pusha
mov
orl
mov
jmp
aas
xor
jecxz
xchg
dec
popf
mov
stos
inc
fwait
loope
mov
cmp
pushf
mov
insb
cmp
mov
or
insb
cmc
icebp
scas
push
jecxz
sti
mov
mov
stos
adc
inc
jno
xchg
xorl
xchg
pop
pop
mov
mov
push
aas
lret
and
sti
push
jge
iret
push
pop
inc
test
jmp
xor
adc
outsb
test
adc
incl
aam
sbb
or
stos
ds
fwait
clc
shlb
mov
lret
test
cmp
movsl
sub
loop
lods
push
adc
adc
or
or
mov
jg
jo
mov
push
stc
out
rcl
jbe
jg
sbb
mulb
addr16
ljmp
push
or
ret
push
mov
xor
jne
and
gs
iret
or
dec
out
xorl
adc
cmpsl
test
push
movsb
repz
fistpl
sub
xchg
fdiv
out
ret
ss
push
mov
iret
lahf
dec
fs
in
pop
push
pop
and
push
pop
stc
mov
sbb
int
inc
mov
fstpl
jmp
ss
jnp
cmpsl
mov
adc
fmulp
lahf
fimull
pusha
pop
loopne
repnz
mov
rcrb
sbb
add
mov
cld
inc
loopne
or
jecxz
sub
jp
pop
mov
sub
mov
jns
mov
lea
dec
jnp
jno
fs
in
xchg
push
mov
inc
stos
sbb
pop
xlat
into
sbb
adc
push
je
pop
mov
adc
loopne
in
hlt
jl
inc
jge
push
cmpsb
insl
pushf
inc
mov
fs
push
int3
cwtl
fisubrl
test
mov
sub
and
jbe
push
lret
sbb
test
xor
sbb
mov
testl
cs
jg
sub
adc
push
inc
sahf
aam
into
dec
and
fwait
pop
jg
gs
add
scas
notb
xor
mov
cs
cmp
stos
push
sbb
mov
jno
dec
addl
cli
jge
jbe
lret
aas
jns
mov
xor
jo
repz
xor
dec
adc
int3
or
inc
or
xlat
and
inc
bound
dec
mov
loopne
xor
cs
popf
cmp
mov
mov
sub
pop
sub
movsl
aad
imul
lods
or
mov
xor
mov
xchg
call
das
imul
jecxz
leave
outsl
mov
ret
sub
dec
imulb
ja
cmp
mov
inc
pop
pop
enter
nop
dec
insb
notb
rorb
dec
push
mulb
bnd
add
inc
imul
fdivrs
xchg
shl
or
or
lds
and
and
xor
fsubr
outsl
aam
pand
dec
or
loop
scas
xchg
sub
mov
xchg
ret
jge
int
movsb
mov
sub
out
clc
and
icebp
or
xor
movsb
mov
mov
xchg
push
fs
jmp
pop
xchg
sti
jge
addr16
into
mov
pop
stos
pop
pop
jle
daa
lds
push
mov
out
dec
mov
and
out
sbb
mov
sub
lcall
jnp
sahf
adc
sbb
pop
lahf
push
xor
sbb
data16
ret
push
bnd
ljmp
jl
decb
mov
pop
xchg
lea
adc
into
js
cltd
xchg
mov
cmc
and
lods
sti
nop
ret
cmp
add
fistps
dec
test
adc
divl
dec
xchg
mov
clc
ljmp
jne
movsl
repnz
pop
imul
cmp
inc
aaa
jnp
insl
je
pop
jns
sarl
adc
call
int
orb
lods
ja
shll
mov
jnp
cs
push
push
jb
fnstcw
xchg
mov
fwait
cmpsb
adc
repnz
and
std
push
pop
push
loopne
call
push
pop
sbb
pop
fnstsw
loope
sub
inc
imul
push
adc
dec
mov
xchg
shlb
mov
pushf
mov
sbb
push
pop
or
jbe
or
leave
push
test
aas
call
inc
imul
sbb
lahf
iret
int3
jg
push
or
lahf
xchg
lds
sbb
fisubl
add
cmp
movsl
jb
bound
sar
xor
xchg
jge
pop
lcall
jmp
imul
aad
and
dec
cs
and
cmp
dec
insb
sub
mov
pop
stc
cmpsb
ss
movsl
adc
cmc
xor
sbbb
mov
les
mov
xchg
ret
dec
sbbb
int3
push
inc
jb
dec
mov
xor
lcall
adc
cs
jne
fs
leave
sarb
nop
inc
int3
xor
jl
jae
dec
xchg
adc
mov
ljmp
or
fisubs
ss
and
pop
daa
jle
cld
mov
jns
push
mov
icebp
daa
fsubr
out
or
inc
int
aam
or
aaa
mov
aad
xchg
call
mov
fmuls
xor
xor
in
shll
cmp
inc
cmp
ds
ljmp
jns
test
mov
ret
call
test
cmp
fidivs
jo
subl
jmp
push
loope
pop
lock
sti
stos
aaa
mov
and
fisubl
pop
xor
jle
xor
mov
loop
in
cmp
jle
adc
add
jmp
jmp
fs
test
shll
jmp
test
andb
jo
es
jmp
push
xchg
xchg
pop
rorl
sub
fistpll
movhlps
cmp
pop
repz
pop
inc
cli
jae
lds
mov
cmc
lahf
fidivl
dec
and
dec
adc
push
mov
pop
sbb
jl
fisubl
mov
mov
int
fistpll
jae
jecxz
bound
jp
adc
xor
pop
mov
mov
ds
mov
pop
imul
imul
and
inc
inc
inc
jmp
or
pusha
pop
pop
xchg
mov
xrelease
jae
mov
adcb
arpl
jb
popl
mov
pushf
inc
pop
push
adc
lods
adc
repnz
add
jmp
fdiv
sahf
push
loop
inc
xchg
xchg
push
loop
cld
jno
test
mov
dec
out
jecxz
outsb
inc
repz
fidivl
outsl
rol
das
int3
imul
int
std
cld
pusha
outsb
sbb
xchg
lahf
add
mov
cmp
lret
test
push
rorb
nop
fdivrs
pop
cwtl
xrelease
insb
dec
add
jle
cmp
mov
ljmp
dec
insl
stc
adc
out
xchg
push
push
xchg
jmp
mov
repz
call
mov
loop
add
insl
icebp
jmp
sub
or
imull
ror
sbb
jmp
pop
or
movaps
cld
mov
mull
cltd
lods
repnz
subl
cli
rorl
ror
daa
cmp
movsl
outsl
jmp
pop
pop
add
test
pop
repnz
dec
sub
lcall
sub
repz
adc
sub
shrb
aad
lret
mov
xchg
sub
aam
pop
sub
sub
ja
std
clc
add
mov
push
push
lret
iret
mov
test
xchg
lock
push
mov
adc
jecxz
aad
jecxz
adc
push
fdivrs
pop
or
and
rcrl
xchg
sbb
idivb
push
jmp
sbb
stos
pop
dec
mov
cld
nop
jbe
imul
sbb
mov
push
movsl
sbb
call
mov
in
rcrb
imul
and
mov
or
scas
add
cwtl
jb
add
cltd
lea
and
sbb
aam
movl
sbb
lock
adc
jge
pop
pop
notb
jbe
xchg
pop
je
push
mov
aam
jns
sub
xchg
mov
inc
push
scas
cld
push
pop
mov
add
nop
fists
dec
inc
loopne
lretw
jp
jns
cltd
adc
ret
sub
and
scas
sbb
cs
fldl
je
fimuls
mov
out
adc
mov
into
pop
sarb
and
lods
push
mov
sti
mov
lds
test
jecxz
cmp
ret
cmp
mov
cmpl
push
mov
xchg
lods
jne
arpl
xchg
sbb
rolb
fwait
movsb
jns
divb
lods
in
pop
xchg
sbb
fstp
out
mov
or
lcall
mov
mov
mov
test
pop
and
pop
inc
je
xchg
xchg
sbbl
jbe
jp
fucomip
mov
mov
pop
repnz
test
dec
cli
mov
sbb
je
fld1
jb
adc
adc
orl
inc
sbb
scas
add
mov
rcl
jle
idivl
dec
inc
lahf
and
pop
lods
out
xchg
fwait
jno
pushw
mov
and
mov
jge
jno
cmp
dec
lods
icebp
adc
daa
jp
out
in
dec
fucomi
push
inc
xchg
and
jmp
jge
adc
xchg
gs
sub
and
outsl
jp
cmc
sbb
push
dec
xorb
mov
ficomps
dec
frstor
jmp
pop
lcall
mov
inc
lahf
popf
lods
xlat
mov
scas
leave
adcb
vorpd
cli
and
ficoml
ret
jmp
jp
jl
jo
mov
push
sub
dec
jae
lret
bound
mov
mov
in
pop
aad
add
cli
pop
popa
rorl
aaa
inc
mov
nop
test
rorb
push
adc
mulb
push
pop
xchg
xchg
pop
fnsave
sti
or
std
popa
pop
lds
or
jbe
cmp
enter
adc
xor
cmp
inc
inc
aam
mov
scas
adc
pop
xor
addr16
fwait
je
inc
sbb
lcall
push
pop
out
lock
dec
add
and
popf
mov
sub
lods
xor
addr16
jae
xchg
and
or
push
and
adc
jne
scas
lea
jmp
gs
push
adc
std
fldcw
out
movsb
mov
sbb
inc
or
insl
cmp
ss
js
aas
cmp
and
fmuls
push
loopne
seto
jne
call
adc
loope
xchg
out
mov
dec
sbb
daa
js
jnp
fldenv
cmpsl
jp
push
mov
ss
lcall
xor
inc
outsl
ret
add
lds
lea
jmp
out
push
pusha
push
imulb
in
mov
xadd
pop
ds
enter
js
xchg
daa
or
sub
ss
shrb
js
pop
lret
push
aaa
jne
mov
arpl
jmp
loop
jge
les
mul
cmpsl
popa
sahf
xor
fs
iret
cwtl
dec
cmp
jmp
add
in
push
arpl
jg
in
mov
mul
dec
popa
movsb
xor
inc
imul
jne
add
xchg
mov
xchg
xor
scas
xor
cwtl
aas
int3
imul
popa
push
push
dec
shl
xchg
jmp
adc
jmp
fsubr
lret
or
pop
cltd
fsubl
lea
das
shlb
and
pushw
sbb
test
cs
or
lds
movl
lods
ret
push
add
jge
jmp
imul
sub
shlb
or
xchg
xchg
mov
ljmp
pop
mov
or
hlt
sbb
or
les
inc
mov
insb
fwait
add
shlb
bound
jg
ljmp
adc
jo
and
and
xor
lea
dec
in
out
pop
out
test
sbb
pop
jp
xchg
jmp
rorb
scas
mov
mov
popf
adc
bound
ja
insl
mov
ror
out
mov
stc
push
mov
add
sbb
call
fsubl
cmpsl
sbb
fists
lret
sti
aad
push
mov
xchg
push
popa
jmp
ds
ljmp
cmc
jae
lods
iret
jbe
outsl
mov
dec
inc
cltd
popf
stc
jb
push
mov
and
sub
inc
dec
sub
and
push
add
adc
cmp
sbb
xor
mov
scas
pop
push
ss
aas
subb
dec
dec
cmp
sbb
in
in
fstp
int
mov
popf
lea
pop
pop
dec
dec
cmp
sbb
in
in
fstp
int
mov
popf
lea
cmp
cmp
int
std
std
in
in
sub
mov
lea
xor
pop
insl
dec
cmp
popf
repnz
add
inc
ja
int
lret
push
bound
jb
push
lahf
mov
int
xchg
lcall
xor
sbb
push
dec
insb
pop
jl
pop
jg
lods
lahf
mov
iret
in
out
int3
fmull
cs
cmp
sub
sbb
divps
mov
mov
iret
cmc
out
aam
bswap
cmp
pop
jns
sbb
sub
push
pop
sti
lods
aad
clc
pop
rolb
and
cmpsl
xor
and
xchg
inc
xchg
pusha
std
push
add
pusha
iret
filds
adc
push
mov
xchg
aam
sbb
sbb
jmp
adc
cmc
cmp
shl
clc
lcall
xor
mov
cltd
dec
jl
jl
mov
pop
cld
mov
lods
cmpsl
int3
and
xchg
jmp
jl
ret
into
in
shl
aas
pop
adcl
sbb
jae
jl
int3
incl
adc
cmp
dec
mov
pop
add
icebp
nop
dec
jg
mov
addr16
xchg
mov
in
push
sbb
dec
sub
push
or
aas
or
test
jge
dec
lods
lahf
stos
scas
pushf
mov
cld
out
aad
lds
xor
and
adc
pop
imul
cmp
leave
cld
mov
stos
mov
jnp
jg
jp
pop
pop
jp
leave
add
das
or
stc
aam
mov
stos
lahf
xchg
into
stos
test
mov
push
js
push
js
pop
mov
and
fldl2t
in
fucompp
mov
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
cmp
lods
rorb
jo
xor
mov
push
adc
outsb
push
push
popa
into
cmp
jmp
lods
inc
sbb
dec
mov
push
test
fsubs
fistpll
push
insl
sbb
mov
fcmovbe
loop
or
fwait
adc
xchg
sub
pop
test
inc
arpl
pusha
mov
fnstsw
pop
mov
push
pop
test
mulb
push
push
pusha
dec
iret
add
call
scas
ror
add
test
fists
sbb
mulb
dec
popf
out
mov
lods
or
frstor
add
sbb
and
lds
sub
out
xchg
stos
jae
rcr
andl
xor
outsl
std
out
arpl
repnz
mov
enter
and
idiv
out
lods
enter
int3
es
out
adc
jmp
pusha
dec
js
push
or
or
fidivrl
inc
add
or
std
jnp
sahf
sbb
sbb
or
popa
dec
sub
sbb
inc
and
sub
into
shll
push
and
out
fs
lock
scas
pushf
and
push
adc
cmp
cltd
test
pop
or
insl
popa
push
add
push
scas
sar
push
or
add
jle
sbb
push
hlt
cwtl
xchg
stc
insb
dec
xchg
lods
mov
inc
sahf
lret
jo
movsl
mov
lret
dec
test
xor
shrl
adc
jae
jnp
lods
sbb
stc
sub
push
cmp
pop
cmp
jecxz
xor
inc
rorl
add
xor
dec
xchg
data16
bnd
mov
jo
test
scas
dec
xor
pop
dec
pop
xchg
mov
mov
pusha
and
fucom
daa
jle
jne
mov
sbb
adc
jne
dec
call
cmp
fadds
outsl
stos
jmp
adc
rcrl
dec
push
std
test
sbb
cmp
xchg
xchg
pop
hlt
fstpl
movsl
adc
stc
outsl
je
iret
sub
jns
adc
pop
pop
xchg
stos
cmc
aad
xlat
popf
adc
xor
shll
xor
les
cmp
jo
repz
pusha
jno
fldt
rorl
test
les
sbb
adc
jbe
dec
scas
rclb
mov
cwtl
cmp
mov
xor
add
jne
push
mov
mov
hlt
popa
push
in
or
popa
stos
pop
ss
int
out
or
int
loop
call
outsb
mov
iret
mov
idivb
push
add
pushf
repz
sbb
ds
pop
dec
notl
or
lods
add
data16
cmp
jnp
push
pop
test
cmp
jo
xchg
xchg
add
aam
in
or
mov
add
mov
add
ret
add
xchg
pop
test
and
dec
mov
enter
movsb
mov
arpl
ss
lods
mov
mov
jmp
mov
call
add
std
imull
sar
jmp
jne
jo
cld
or
push
lret
lea
mov
fcmovnbe
xchg
push
cli
test
scas
dec
mov
inc
jae
xchg
gs
ffree
jno
ficompl
mov
and
jb
lahf
outsl
push
mov
xchg
popw
outsb
push
hlt
adc
sbb
mov
nop
jmp
push
data16
lods
clc
pop
fisttps
xchg
fiaddl
fstl
or
jae
jge
lret
ret
push
inc
dec
rcrl
inc
mov
adc
and
inc
lds
in
xchg
repz
push
pushf
jb
test
sub
jmp
add
testl
popf
outsb
aas
fnstsw
mov
daa
mov
mov
or
loope
ffree
lret
fisubl
sbb
sbb
data16
sahf
cmp
jle
inc
cwtl
movsl
out
dec
cld
rorl
js
fstps
lahf
xor
push
pop
divl
punpckhdq
popa
std
or
push
fistps
sbb
fnstcw
lcall
cmpsl
sbb
lret
mov
or
pop
das
sub
fstps
test
stc
sbb
outsl
outsb
jecxz
nop
shlb
lcall
and
jbe
pop
pop
mov
mov
into
out
cmp
out
in
xchg
mov
xchg
cmpsb
xor
rorl
pop
imull
xor
pop
fisttpll
outsl
push
scas
jp
pop
insb
in
lds
jbe
les
shrb
scas
cmp
lods
fmul
adc
notb
nop
pop
inc
dec
fcoms
int3
nop
jmp
dec
xchg
mov
adcl
sbb
push
fs
push
call
mov
mov
es
dec
lods
xor
stos
daa
mov
cmp
or
inc
in
out
repz
dec
out
js
mov
shlb
sarb
xor
add
std
mov
outsl
inc
mov
cmp
ss
cmpsb
jmp
cmp
jns
aas
fbstp
out
cmc
rcl
loope
pop
loope
rcl
push
aam
or
orb
sarb
jmp
mov
mov
fwait
add
adc
xchg
cli
inc
imul
in
mov
sub
sbb
push
nop
push
xchg
mov
je
int
test
je
push
pop
ret
lcall
add
loopne
pushf
jae
jp
data16
pop
sarb
mov
jno
push
or
xor
add
in
or
cmpsl
fnstsw
in
setne
lea
stos
cs
imul
fldcw
lock
mov
mov
in
xor
enter
jl
and
in
gs
bound
and
dec
stc
mov
shll
aad
inc
xchg
lods
lock
dec
std
js
xor
shlb
lret
mov
dec
std
mov
test
sbb
mov
mov
iret
es
lret
push
loop
lds
xchg
jl
aas
xor
out
pop
imul
fildll
or
ret
sub
add
jecxz
test
cmp
add
ret
lret
xor
stos
int
sub
cltd
cmp
jl
add
sub
sub
test
pushf
test
mov
jae
pop
and
or
and
pop
and
addb
std
ret
imul
push
leave
or
xchg
mov
and
fwait
leave
push
xchg
sbb
sbb
inc
mov
add
cwtl
sahf
outsw
add
push
jbe
sub
or
jecxz
outsb
repnz
shrl
or
inc
out
hlt
sbb
push
dec
loop
push
int3
arpl
mov
sbb
inc
sbb
int
pop
insb
mov
lods
sbb
jmp
cltd
inc
inc
push
xchg
cmpb
jl
sub
out
mov
scas
insl
pop
std
xchg
adc
push
mov
and
pusha
dec
mov
xor
cli
sti
jmp
sub
jmp
imul
aas
je
je
cmp
lcall
cli
mov
imul
pop
pushf
dec
arpl
insb
ds
mov
insb
mov
pushf
sub
arpl
cmp
loope
pushf
std
dec
rcr
fs
lret
cmp
in
xchg
faddp
push
pop
std
in
and
xchg
sub
push
mov
ljmp
aaa
and
jg
out
push
inc
test
fst
fsubr
paddusb
sub
cmp
mov
xor
mov
cli
mov
mov
rol
test
jl
adc
inc
jo
xor
mul
cmp
mov
repz
scas
addr16
and
inc
cmp
cwtl
add
push
inc
adc
std
sub
adc
lahf
mov
push
inc
jnp
inc
mov
or
cltd
stos
int3
fucomi
ficompl
mov
lcall
stos
pop
pop
push
insl
dec
movsb
sbbb
call
test
shlb
push
sbb
lcall
push
aaa
jae
ss
inc
addb
lcall
mov
adc
mov
push
or
leave
and
add
rorl
push
dec
xor
arpl
push
jmp
pop
ss
add
test
xchg
and
or
lods
pop
lret
pop
xor
daa
jmp
cmp
nop
pop
mov
cltd
popf
fs
cli
testl
push
in
ret
imul
in
aas
js
in
aas
es
or
int
jb
imul
cmp
mov
xchg
and
pop
jne
adc
cmpsb
xor
ret
js
sub
cwtl
out
mov
loopne
xchg
add
shr
jb
jmp
add
ss
push
cltd
xor
fs
hlt
adc
pushf
int
repz
inc
adc
push
dec
in
insb
cs
ret
rcll
sbb
sbb
push
or
movsb
pop
icebp
popf
add
imul
mov
mov
or
aas
mov
nop
fstpl
shr
push
jmp
and
out
inc
out
repz
outsl
pusha
mov
dec
scas
das
sub
adc
ret
imulb
pop
xor
sub
repz
orl
mov
out
or
push
dec
popf
inc
int3
push
mov
xchg
mov
test
in
jecxz
pushf
inc
in
cmp
mov
addb
push
add
mov
mov
or
cmp
out
mov
xlat
pop
jbe
repz
pop
xor
xor
mov
jge
fincstp
inc
jmp
loope
inc
pop
inc
or
add
iret
jmp
lds
xor
xchg
mov
stc
out
push
xor
cmp
push
out
pop
iret
jge
das
lock
popl
add
mov
jns
ss
arpl
in
rorb
inc
gs
fnstsw
daa
dec
ret
fwait
insb
sub
inc
push
xchg
add
cld
fs
jle
fists
push
sarl
xor
hlt
sbb
in
mov
adc
ljmp
cmp
js
adc
cwtl
sbbb
jb
adc
sub
jbe
in
aad
fdiv
sbb
mov
add
pop
and
push
aam
or
push
lret
sub
add
into
sbb
call
mov
mov
js
push
sti
dec
mov
xorb
aaa
mov
adc
pusha
mov
popa
mov
daa
das
mov
loope
push
pop
and
mov
cli
push
ret
xor
fsubrs
pop
dec
sub
hlt
add
negl
mov
mov
sbb
loop,pt
jg
mov
inc
xor
jno
adc
insl
push
mov
push
xchg
or
ficomps
adc
dec
dec
fstpl
ds
fdivl
sbb
imul
cwtl
jge
cld
arpl
sub
and
adc
nop
mov
outsl
shrl
iret
pop
adc
inc
mov
jae
xchg
sub
mov
xor
in
jnp
cs
pushf
insl
push
movsl
inc
mov
and
outsb
ret
addb
cs
fildl
sti
mov
dec
push
mov
xor
mov
scas
imul
mov
adc
dec
or
loopne
sahf
sbb
lret
add
orl
stos
int
inc
add
xor
scas
enter
pop
pop
ljmp
outsb
les
shlb
sbb
enter
jg
inc
jo
dec
cmpsb
sbb
xchg
nop
jb
push
inc
dec
call
fwait
test
icebp
mov
xchg
mov
push
out
and
sbb
xchg
jp
adc
push
jns
ret
lods
mov
mov
cld
xchg
in
push
cli
and
xchg
push
leave
add
xor
sub
jno
daa
and
rcrl
and
push
adc
mov
popa
or
dec
movsb
js
out
leave
daa
outsb
add
sahf
inc
or
and
sbb
sbb
shlb
in
xchg
xlat
mov
ljmp
jo
jge
cmpl
cmp
out
nop
ss
call
aaa
mov
dec
icebp
loop
cmp
pop
sbb
sub
jmp
imul
adc
pop
daa
cmc
hlt
inc
mull
mov
sub
icebp
and
arpl
or
mov
ret
inc
xorb
aas
mov
hlt
mov
xor
or
test
imul
jnp
xor
jo
daa
movsl
test
fistpl
in
lret
adc
pop
sub
xchg
sbb
testb
mov
inc
pop
ss
mov
sbb
jmp
inc
cmpsl
cld
adcl
shr
jns
aaa
mov
or
mulb
lea
std
or
pop
or
imul
pop
xor
stc
loopne
fs
xchg
mov
mov
and
sub
cld
adc
push
test
adc
ja
loope
mov
inc
repz
mov
sub
ss
and
dec
shlb
pop
lret
imul
sbb
mov
xor
jle
iret
add
add
into
nop
xchg
sahf
aas
sub
xlat
test
stos
xchg
dec
dec
dec
push
mov
or
lahf
adc
xchg
aaa
cwtl
dec
nop
dec
outsl
in
gs
cmp
mov
cmpsl
push
dec
adc
gs
repz
mov
loope
not
ret
imul
mov
mov
jae
adc
test
cmpsb
lea
push
mov
aad
testb
sarb
xchg
push
inc
xchg
sub
sub
jne
out
das
dec
xor
push
mov
xor
xor
lock
imul
sbb
push
fmuls
stos
lret
fisttpl
lea
js
xchg
jns
cmp
fsubl
repnz
inc
rcl
jmp
scas
push
xchg
adc
push
jne
divl
jo
xchg
loop
rcrl
rcrl
adc
pusha
mov
pop
mov
pop
and
mov
daa
pusha
push
cmp
cmpsl
loope
push
and
pop
jmp
cmpsl
addr16
add
or
lods
jns
add
mov
adc
bound
xor
fbstp
sub
xor
jnp
and
dec
mov
sbb
std
loope
jbe
or
loopne
dec
add
mov
inc
aaa
pop
jo
mov
xchg
in
aad
lret
es
dec
push
push
or
jmp
pop
dec
mov
fwait
rorb
mov
pusha
mov
stos
popf
xchg
sti
xchg
adcb
jmp
es
jbe
mov
xchg
mov
fistl
mov
ss
mov
ret
sub
push
sbb
push
je
inc
sti
pop
notl
xor
rcl
cmp
xor
mov
pop
xchg
sbb
lea
test
icebp
aam
leave
pop
mov
push
cld
in
xchg
or
dec
clc
cmp
sbb
push
lret
dec
cmpsb
ljmp
xchg
shrl
jp
xchg
pop
out
push
inc
mov
push
imul
dec
mov
xchg
insl
cmp
shl
sti
pop
mov
enter
mov
fidivs
push
push
mov
inc
pop
mov
insb
loope
xor
pop
jecxz
data16
xlat
add
mov
mov
fsubs
divl
mov
jmp
scas
rorb
nop
scas
xorb
sub
mov
sub
xchg
dec
das
adc
add
rol
lret
and
fstpl
sbb
jne
repnz
les
clc
mov
call
imul
ds
push
dec
in
nop
lret
rclb
dec
test
ds
cmpsl
das
fdivs
notb
xlat
adc
dec
jo
push
out
mov
xchg
sbb
mov
push
ret
fmull
jno
adc
push
xchg
xchg
push
xor
sarb
pop
inc
inc
faddl
mov
outsb
jle
push
cmp
xchg
in
inc
jno
fnstenv
jmp
pop
pop
addr16
out
stc
mov
out
adc
sbb
mov
and
or
push
sbb
jns
nop
xchg
mov
mov
loop
jno
scas
fmuls
mov
push
pop
xchg
mov
xchg
jns
cmp
push
fwait
sbb
mov
add
cmpsl
inc
mov
and
and
jecxz
pop
mov
popa
mov
in
orb
test
mov
pop
adc
loope
push
push
shl
ss
psubsb
push
push
push
daa
in
inc
adc
aaa
mov
movsb
mov
cwtl
jae
adc
imull
jl
in
sub
mov
jno
or
stos
pop
int3
dec
dec
lea
sbbl
push
add
push
lret
xchg
sahf
fildll
out
mov
stos
dec
pop
add
pushf
das
push
fnstcw
xor
xchg
mov
cmpsb
lods
inc
in
lret
push
in
test
dec
mov
outsb
jns
and
test
data16
in
xor
mov
call
mulb
pop
mov
clc
sub
movsl
aaa
xchg
jbe
add
and
and
shl
das
test
jns
lcall
or
adc
rclb
mov
arpl
bound
lock
sahf
adc
inc
dec
inc
or
xchg
addl
xor
scas
jecxz
push
lahf
and
cmp
clc
adc
jmp
or
pop
pushf
sub
mov
jno,pt
lea
pop
add
daa
outsb
jno
jbe
mov
es
aad
scas
sbb
lods
insl
loopne
pushf
jo
jle
jne
icebp
leave
jg
xor
imul
jp
xor
in
aas
and
add
test
push
fnstsw
xor
fs
fistl
icebp
pop
jle
sub
cltd
nop
add
in
mov
dec
dec
mov
mov
insl
insb
shlb
xor
lahf
int3
pop
xor
dec
testb
xchg
lods
add
add
pop
mov
mov
sub
imul
int3
or
add
cmpsl
adc
inc
fmuls
sbb
ja
sbb
push
and
in
jg
popa
xchg
push
and
mov
imul
jmp
cli
loop
push
and
roll
push
inc
push
sbb
loop
into
ret
and
loope
lods
rcll
pop
xor
sbbb
sub
push
into
adc
adc
mov
call
dec
mov
ret
mov
push
mov
mov
push
xor
in
cld
lods
add
xor
xor
aas
and
dec
adc
nop
adc
sbb
outsl
sub
or
fs
fiadds
inc
ret
dec
mov
mov
arpl
inc
push
dec
cmp
mov
sbb
pop
mov
mov
mov
int
mov
and
cmp
sub
cwtl
cmp
sbb
inc
mov
pop
movsl
aas
mov
lahf
lahf
insb
xchg
inc
xor
stos
fs
fstps
cmpsl
sub
cmc
add
mov
aaa
jp
jae
mov
aad
sbb
sarb
dec
ret
add
jmp
push
cmp
fs
stc
int
push
push
imul
andb
cmp
imul
sub
sub
icebp
sub
jmp
add
xchg
add
lock
imul
push
xchg
ret
jb
adc
add
jb
or
jbe
mov
add
jge
les
loopne
loop
rcrl
neg
insb
xchg
sbb
or
ds
mov
lret
sti
lahf
add
lods
cmp
pop
jl
popa
fwait
scas
xor
add
cmp
dec
pop
adc
mov
mov
mov
or
add
scas
dec
lock
nop
mov
scas
testl
pop
test
push
dec
and
cmp
add
push
push
das
push
call
cmp
xor
test
push
jmp
loope
mov
imul
rcrb
repnz
mov
cmc
mov
adc
sbb
scas
shlb
sub
sbb
int3
out
leave
call
je
test
lahf
jge
xchg
mov
sti
add
and
push
push
jo
mov
adc
sarl
xchg
dec
lahf
frstor
std
push
xlat
fs
cmp
cwtl
adc
lret
cmpsl
fimuls
xlat
sahf
clc
pop
bound
adc
mov
mov
js
ds
jmp
push
add
lods
psrad
shll
sahf
add
xchg
jne
lahf
cmp
aad
stos
push
pop
sub
push
mov
jnp
push
sub
fdivrs
mov
lret
cld
or
out
mov
mov
sub
inc
out
and
clc
xchg
ss
push
or
jnp
xor
in
enter
sarl
jne
ds
stos
mov
fdivrl
movsb
dec
cwtl
int
lret
clc
mov
add
je
outsb
sarb
in
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
out
int3
fmull
sub
cmp
or
sbb
insb
pop
jl
dec
jg
lods
lahf
mov
iret
in
fdivrp
out
int3
fmull
sub
cmp
or
sbb
outsb
dec
jg
lods
lahf
mov
iret
in
outsl
int3
jg
lock
xchg
test
imul
xlat
adcl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fimuls
into
pop
sub
loope
int3
dec
mov
xchg
jle
outsb
mov
cs
cs
fimuls
out
cmp
mov
lea
jle
pusha
mov
ds
cs
stos
xlat
mov
dec
xchg
adc
inc
lea
and
push
iret
push
sahf
popa
mov
mov
mov
pop
int
mov
push
mov
imul
ss
push
adc
pop
mov
push
xor
xchg
ret
mov
cmp
addr16
adcb
dec
fcomps
cmpb
shll
or
mov
outsb
or
inc
push
repnz
cmp
cmp
or
lret
pop
insl
inc
lods
scas
lock
dec
jge
push
xchg
mov
mov
orl
jle
pop
rep
pop
sbbl
sahf
dec
out
push
enter
jo
repnz
pop
adc
popa
add
mov
jnp
xlat
pop
movsl
pop
cwtl
add
xchg
pop
adc
cmp
mov
lea
scas
ja
push
icebp
push
xor
stos
jb
inc
lcall
sbb
in
or
mov
dec
cltd
inc
xchg
mov
scas
pop
xchg
pop
sahf
push
repnz
mov
mov
in
sub
jle
das
lea
andb
mov
mov
inc
xchg
add
jge
lea
jle
outsb
mov
ds
cs
fimuls
out
cmp
mov
lea
jle
outsb
mov
ds
cs
fimuls
popf
shl
sub
push
mov
ret
xchg
cmp
sub
sub
jbe
inc
adc
push
mov
bound
xchg
es
insb
es
or
rorb
bound
xchg
stos
inc
adc
xor
sbb
lock
jl
mov
scas
and
xchg
lahf
test
data16
jae
out
pop
adc
cmp
gs
sbb
adc
xor
mov
fdivs
fstp
insl
jg
xchg
cmp
add
popa
xlat
cmp
push
push
lret
sub
std
inc
in
jae
lea
loopne
outsb
ds
and
aas
mov
lret
adc
push
pusha
inc
clc
pop
roll
lret
daa
lea
cmp
mov
dec
xor
out
mov
fdivl
notl
adc
lds
mov
sub
xor
jle
bound
in
sbb
push
inc
into
mov
xor
pusha
sahf
int
mov
or
cltd
out
push
pop
cmp
lds
pop
inc
shll
push
inc
fdivl
push
sbb
adc
push
int3
adc
ret
inc
xchg
rcrl
cli
cmpsb
mov
pop
mov
cld
pop
ja
hlt
cmp
inc
or
cmp
loope
xchg
aad
repnz
lock
or
push
rclb
sub
jge
add
test
push
lock
xchg
dec
fiaddl
inc
jne
aad
xchg
stos
lret
push
int3
ja
cmp
psrlq
pop
push
hlt
fidivrs
test
popf
xchg
inc
mov
mov
sub
mov
pop
negb
adcl
fsubs
xlat
mov
add
sbb
out
xchg
fnsave
mov
jbe
dec
js
aaa
clc
push
mov
shrb
xor
mov
push
stc
or
or
aas
pop
rcll
mov
and
and
xchg
testl
xchg
push
sbb
inc
inc
dec
inc
pop
push
mov
xchg
icebp
mov
and
xchg
test
loope
movsb
xchg
fnsave
insl
inc
les
les
xchg
jnp
daa
hlt
popf
jns
push
dec
jb
push
into
pusha
test
into
fimull
fdivrl
or
xlat
inc
dec
dec
adc
xchg
cmpsb
or
out
std
xchg
adc
sub
repz
sub
mov
pop
data16
lcall
je
stos
jl
rcrl
dec
adcb
or
cli
inc
add
mov
adc
or
pushf
xchg
pop
mov
dec
pushf
inc
les
in
jne
into
mov
cwtl
mov
in
fstps
loop
add
lods
loop
aaa
dec
aad
cmp
aam
xchg
insb
mov
loopne
mov
mov
adc
shlb
push
push
subb
nop
cmp
movsb
bnd
mov
roll
in
push
pop
gs
stc
xchg
pop
cmp
jge
push
mov
mov
xlat
sub
mov
inc
pop
les
push
mov
xchg
out
add
cltd
popf
sub
in
add
inc
loope
mov
inc
aaa
lock
out
mov
or
inc
cld
scas
jne
insb
jg
adc
aam
stos
stc
imul
sub
xor
popa
or
inc
jne
cmp
loopne
pop
mov
jnp
mov
notl
xchg
mov
jnp
adc
sub
rorl
sub
arpl
sbb
pop
add
mov
jmp
or
dec
and
or
push
js
push
mov
add
orl
icebp
mov
inc
push
shrb
xor
inc
mov
xchg
lcall
sbb
adc
mov
xchg
or
jo
lret
fdivl
add
shr
cmp
lock
jecxz
and
mov
mov
divb
inc
leave
dec
jb
jle
inc
sbb
aam
inc
orb
test
sti
sbb
sbb
sub
test
das
ljmp
ror
fisubs
andb
addr16
xchg
pop
pop
lea
scas
test
outsl
cmp
andb
stos
mov
lahf
adcl
mov
adc
jns
lods
sub
dec
and
out
jnp
int3
mov
pusha
sbbb
repz
out
xchg
mov
daa
push
es
imul
jnp
cmp
jne
cli
cmp
fcmovbe
lock
rcl
sbb
mov
mov
cmp
jmp
adc
repz
cmpl
mov
mov
fadd
pop
mov
dec
scas
xchg
lret
ret
outsb
xlat
in
sub
arpl
gs
lahf
push
mov
xchg
dec
sub
sti
dec
push
push
into
nop
jp
inc
and
sbb
sub
pop
add
and
xchg
std
lea
in
shll
dec
mov
jno
xchg
daa
int
ja
fildll
jp
cmp
arpl
mov
add
xor
dec
movsl
test
adc
push
push
sbb
and
movsl
xlat
or
mov
xchg
ljmp
adc
pop
stc
je
pusha
cmpsb
push
popa
push
sbb
sbb
das
stos
xchg
or
or
nop
pextrw
sub
into
xchg
adc
or
lahf
hlt
iret
adc
mov
lahf
jge
xor
adc
cwtl
das
in
jecxz
mov
rol
mov
popf
popf
pop
jge
fistl
pop
pop
popa
xor
fwait
and
cmp
sbb
mov
pop
sub
push
mov
sahf
inc
mov
inc
inc
xor
dec
xchg
shll
repz
mull
imul
or
scas
scas
mulb
fcomi
into
cmp
shr
test
dec
mov
mov
push
pop
xchg
push
cmpsl
sbb
xchg
scas
clts
xchg
cmp
pop
into
mov
outsl
cmc
cmpl
mov
mov
mov
or
sub
ret
ret
sub
sbb
or
js
cmp
mov
pop
mov
mov
xchg
push
out
jnp
cs
xchg
or
mov
xor
xchg
xchg
inc
popf
cmp
js,pt
dec
test
popa
push
adc
icebp
sub
jae
sub
mov
xchg
dec
jne
mov
into
into
push
test
lods
jbe
mov
fldenv
adc
in
mov
mov
xchg
aam
loope
xchg
jnp
sub
loop
cltd
add
xchg
cld
cmp
sub
inc
add
sub
clc
mov
adc
popf
lret
or
outsl
cmp
adc
mov
mov
test
add
fdivr
inc
repnz
mov
cmp
lds
aaa
and
test
rcll
and
mov
inc
mov
fldl
xor
fdivl
pop
leave
data16
xchg
addr16
add
test
mov
sbb
xchg
jno
lahf
and
mov
fs
sti
xor
cmp
pop
adc
fistpll
add
lds
xchg
lret
ror
mov
arpl
outsl
in
nop
cmp
cmp
lods
cmpsl
ljmp
dec
add
pop
fwait
mov
mov
xchg
adc
xchg
loope
adc
inc
pop
mov
add
pop
cmc
je
js
mov
jae
fadds
dec
insb
jmp
leave
stos
or
ffree
xlat
sahf
inc
imul
mov
stos
sti
clc
inc
outsb
push
sub
cwtl
jg
mov
shrb
jns
pop
jno
hlt
xchg
and
inc
add
jo
mov
mov
adc
stos
xchg
push
lahf
pushf
mov
jo
cwtl
push
aam
cltd
dec
cmp
clc
loopne
fwait
dec
std
clc
in
test
int3
jb
in
cmpsl
mov
add
push
xlat
testl
pop
fimull
leave
test
call
mov
lcall
das
jns
adc
lods
lahf
push
popf
jge
pop
xchg
xor
sub
hlt
mov
or
hlt
in
push
mov
iret
scas
or
sahf
int3
nop
sarl
or
xchg
loope
push
adcb
stos
insb
ret
int3
fs
jbe
add
out
icebp
jae
shl
shll
fwait
repnz
xchg
scas
xchg
lret
lods
mov
add
fistpll
cmp
ljmp
dec
and
dec
mov
stos
pushl
inc
sbb
sbb
lock
lock
lea
sahf
sbb
gs
cmp
gs
movsl
jmp
lret
xor
xchg
imul
imul
adc
mov
mov
xchg
adc
into
jbe
jmp
cmp
and
js
sti
add
xor
dec
push
mov
cld
push
enter
xchg
in
jb
xlat
je
add
jno
fcmovnb
lea
lds
and
sbb
mov
jae
sbbl
push
pop
xchg
dec
js,pt
leave
add
shl
outsb
mov
popf
mov
fstps
mov
test
aas
add
xchg
fadds
push
mov
divl
fbld
clc
xchg
cmp
cmp
movsl
add
mov
mov
and
jle
cs
or
bound
cwtl
dec
cmp
sbb
popa
jmp
iret
bound
inc
fidivrl
push
and
mov
sub
pusha
cmpsb
xor
int
pop
push
notb
mov
adcl
inc
cmpsb
fmull
mov
arpl
mov
xlat
fidivs
sub
sarl
cs
sbb
and
mov
inc
push
fdivl
cwtl
mov
aas
pop
inc
pop
aas
xor
cmp
jnp
push
xchg
cmpsl
mov
cmp
push
dec
add
mov
jb
sbb
mov
ds
sbb
and
jmp
xor
or
add
int
call
outsb
push
jne
rol
repnz
leave
lds
test
sti
orb
cs
dec
push
scas
pop
add
clc
dec
push
aas
shl
jae
mov
pusha
push
xor
out
xchg
jno
test
and
inc
sub
mov
punpcklbw
stos
mov
pop
jmp
mov
sub
jmp
rorb
nop
test
movsb
jo
mov
daa
or
pop
out
jb
or
add
jl
lods
cmpsl
outsl
push
test
and
cmp
mov
fistps
cltd
mov
in
call
outsl
in
adc
xchg
movsb
repnz
or
lock
mov
arpl
pop
ds
mov
aaa
clc
adc
xchg
in
std
push
or
test
xor
fcomps
adc
fwait
jbe
mov
mov
and
mov
pop
rcr
test
lahf
mov
pop
pop
rcrl
sbb
ja
aam
mov
loop
xchg
xchg
lds
cmp
adc
jl
add
and
dec
outsl
hlt
xor
loopne
jne
icebp
push
hlt
enter
cmc
test
sub
hlt
subl
add
dec
jmp
cmpsb
rcrb
decb
sub
nop
mov
push
jns
mov
pop
ss
mov
mov
mov
xlat
xlat
mov
pop
mov
cmp
lret
stos
fistpl
fldt
out
dec
and
mov
stos
mov
stc
push
add
data16
mov
cmp
and
ss
movsl
outsb
adc
pushf
dec
adcl
sbb
push
jp
repz
pop
das
inc
cltd
in
pop
sub
pop
push
push
adc
adc
pop
cld
in
mov
dec
outsb
mov
push
xchg
js
sub
fwait
mov
add
iret
mov
adcb
adc
sahf
xor
push
int
push
push
mov
pop
paddusw
sub
ret
jno
xchg
push
repnz
cmp
mov
lea
and
cmp
push
or
mov
loope
mov
fldcw
mov
adc
pop
inc
int3
sub
adc
jle
aas
imul
mov
fmull
sub
cmpsb
std
fwait
bound
imul
movsl
mov
loopne
or
sbb
cli
mov
xor
int3
addr16
loopne
mov
xor
xor
xchg
out
call
xor
cltd
add
lods
pop
cmp
inc
dec
xchg
mov
rcrb
fwait
cltd
jle
mov
lea
roll
into
adc
test
jmp
ljmp
or
and
mov
ror
cmp
jnp
loope
jmp
jecxz
adc
push
in
inc
into
imul
js
and
test
sub
lret
push
sti
mov
mov
push
fs
movsl
jge
pop
and
int
pusha
sti
dec
mov
mov
btr
cmp
aam
subb
sub
int
jnp
inc
xlat
and
out
xchg
xchg
lds
sbb
or
pop
subl
lods
adc
stc
and
pop
and
out
icebp
outsb
int3
test
daa
movsl
inc
mov
mov
add
cltd
push
xchg
sub
arpl
mov
loop
sbb
sub
arpl
mov
fwait
lds
lahf
add
pop
je
fmuls
rclb
inc
push
jmp
add
gs
std
ret
movsb
lahf
xchg
cld
daa
xor
adc
xor
xor
cltd
add
scas
push
js
divb
ljmp
lret
in
in
pop
sub
xchg
inc
pmaddwd
orb
icebp
mov
mov
movb
daa
jb
cmp
movsb
mov
cltd
or
inc
cltd
leave
xchg
xor
dec
decl
adc
ds
dec
add
xchg
aaa
nop
sub
pushf
push
sbb
adc
arpl
and
adc
push
dec
sub
inc
stc
pop
fildll
imul
out
xlat
shr
lret
push
mov
aas
imul
insl
pop
repz
mov
cmpl
insl
dec
sbbl
cltd
fcomip
clc
repz
pusha
jp
fs
cmp
js
add
int3
mov
push
fimull
or
outsl
stc
cmc
and
call
add
pop
sbbl
ret
outsl
jge
idivl
pop
les
dec
xor
jge
mov
stos
stos
add
or
mov
mov
mov
enter
inc
fidivrs
or
int
js
loopne
sbb
inc
jo
cmpsl
mov
or
jmp
xor
pop
mov
les
dec
aad
xchg
dec
push
cltd
pusha
in
fdivs
jo
pop
jo
sub
mov
dec
mov
pop
inc
addl
inc
fs
sub
pop
loop
xchg
lcall
in
nop
or
adc
or
add
add
sub
and
arpl
pushf
lea
frstor
mov
sub
cmpsb
popf
xor
aad
movsb
in
mov
push
addr16
movsb
mov
fsubr
sub
push
cltd
dec
mov
mov
fbld
and
addb
sub
jmp
imul
cmp
xor
push
lcall
inc
sub
inc
xchg
cmc
xchg
cwtl
lods
lods
es
addr16
dec
ds
and
pop
or
rorb
shll
lods
out
scas
repnz
std
push
lods
cltd
push
adc
cmp
call
push
js
push
in
dec
dec
pushf
cli
mov
mov
lcall
and
inc
lods
out
sahf
pop
shr
pop
push
dec
negl
fbstp
lret
push
or
xor
mov
xchg
iret
mov
xor
cmp
dec
mov
out
jecxz
and
clc
aam
rcr
jmp
int
cmpsb
lods
jne
outsl
pop
addr16
jae
sub
mov
xchg
insb
jb
lock
xor
dec
sub
inc
outsl
mov
dec
pusha
pop
pop
in
cmp
imul
cmp
popf
int
add
lea
mov
popa
pop
sbb
xchg
clc
sbb
sbb
loope
cld
and
mov
cmp
pop
subb
rcl
dec
jmp
push
and
mov
test
xchg
pop
xor
dec
movsb
das
mov
cmp
jb
ljmp
mov
mov
stos
adc
sbb
mov
lret
leave
dec
divb
test
test
rorb
dec
enter
cmpsl
daa
cmc
movsl
int3
std
cltd
call
popa
rol
mov
cmc
cmp
or
xchg
cli
lahf
js
jle
in
mov
cmp
scas
in
inc
iret
dec
pop
dec
out
movsl
fsubrs
fdivl
mov
lds
loop
mov
clc
leave
cli
pop
shl
inc
in
pop
push
jo
cmp
dec
mov
push
inc
xor
sbb
je
pushf
mov
mov
lret
fnstenvs
rcl
in
pop
xchg
iret
int
int
adc
in
cmp
inc
rcll
lcall
nop
dec
mov
lahf
outsl
iret
push
out
and
lds
test
lahf
xchg
cmc
imul
dec
call
xorb
sbb
lock
imul
adc
jns
xor
xchg
mov
pusha
pop
dec
imul
je
dec
test
in
sub
xor
dec
xor
aad
and
push
ja
scas
movsl
cmp
push
add
rorl
cmp
pop
popf
inc
test
fimull
mov
sub
adc
shlb
adc
sbb
push
sbb
sbb
jp
outsl
mov
mov
fimull
mov
mov
loopne
mov
adc
inc
notb
cmc
sbb
xchg
movsb
scas
imul
jl
adc
test
and
push
mov
shl
pop
mov
pushf
xchg
aad
sub
xor
xchg
jg
xchg
cmp
pop
sub
sub
mov
mov
inc
rcll
xchg
test
xchg
mov
jne
nop
xchg
or
insl
mov
cld
and
rclb
dec
aaa
inc
xchg
aas
push
jo
jle
in
shlb
inc
jnp
inc
in
out
je
xorb
xchg
push
jp
mov
popa
cltd
jns
sbb
xchg
cltd
out
pop
or
and
add
add
cmpsl
fisttpll
fcmove
inc
imull
mov
sub
cmpsl
jmp
jb
int3
das
or
ret
pop
and
stos
and
and
enter
push
mov
mov
dec
ja
mov
jne
hlt
lahf
xor
sub
rcrl
sub
int
cld
lock
rcll
shll
push
test
loope
dec
faddl
mov
hlt
dec
mov
outsl
jecxz
dec
push
aaa
adc
sbb
cwtl
stos
sbb
in
push
adc
pop
daa
xor
fbstp
imul
jmp
jb
or
xor
cmp
popf
cmp
jne
add
and
cmpsl
mov
repnz
imul
mov
addr16
sbb
shlb
inc
insb
adc
mov
insl
push
mov
mov
loop
orb
dec
loope
inc
sub
jecxz
fcomps
sahf
mov
adc
xchg
pop
fmull
ds
mov
jge
or
mov
add
aad
popa
movsb
cs
and
sub
or
inc
inc
mov
loope
test
mov
cmp
sub
or
fsubrp
je
das
lods
mov
repnz
aad
sub
in
and
and
adc
test
stos
hlt
outsl
rolb
iret
sarb
andb
stc
imul
mov
inc
xchg
push
mov
sub
and
pop
mov
jno
dec
loop
flds
or
rcl
in
jns
sub
mov
stos
xchg
mov
test
mov
jae
stc
mov
adc
sub
push
icebp
hlt
fcoml
fwait
xor
or
or
mov
insb
sbb
imul
cmp
stos
xorl
ja
dec
jecxz
push
pop
jmp
xor
fxtract
or
cwtl
add
in
pop
int3
pop
push
aas
or
icebp
mov
xchg
lods
jp,pn
jp
and
bound
mov
mov
push
adc
cmp
inc
cld
imul
pusha
lret
push
stc
hlt
mov
xor
hlt
xchg
cmp
aas
pop
mov
fnstsw
icebp
das
pop
icebp
int3
movl
mov
mov
xchg
insl
ja
pop
xor
ds
gs
addr16
xor
mov
in
lret
mov
popf
sub
jmp
mov
xchg
lea
add
cmp
shlb
inc
mov
lret
or
popl
ret
push
rcll
jge
incl
test
pop
mov
bnd
inc
nop
das
inc
ficoml
jp
pop
lock
xor
mov
mov
iret
dec
mov
jp
bound
test
adc
sub
enter
jno
jnp
imulb
jecxz
test
sbb
jmp
movsb
sub
fists
dec
mov
jo
mov
push
shr
mov
or
nop
testb
push
lods
xor
jl
jnp
icebp
cmp
fwait
mov
hlt
sub
cmp
mov
lea
jle
outsb
mov
ds
cs
fimuls
out
cmp
mov
lea
jle
outsb
mov
ds
cs
fimuls
into
adc
xor
mov
mov
mov
jle
outsb
mov
leave
paddusw
in
sbb
jmp
out
jge
dec
mov
in
cs
aam
outsb
lret
xchg
nop
fimull
cli
sub
mov
pop
or
pop
sub
pop
pop
dec
sub
push
fidivrl
lcall
sbb
push
cmp
dec
sub
cmp
or
mov
adc
stos
xchg
in
hlt
mov
lods
lock
push
imul
push
pop
and
or
push
cmpsb
int
std
sub
inc
cltd
in
xor
cli
xchg
push
and
push
cltd
ljmp
xor
mov
movsl
pop
xchg
push
ja
mov
dec
mov
jns
in
cltd
fimull
les
mov
lea
mov
movsl
cmc
js
dec
cmpb
cwtl
or
mov
jle
xor
or
dec
mov
nop
sarl
sub
mov
mov
dec
movsl
sbb
jp
mov
imul
xor
aaa
lahf
adc
mov
movsl
pusha
xchg
jnp
lret
mov
js
in
or
in
mov
stos
and
into
jb
arpl
je
mov
js
push
mov
sti
sahf
xchg
lods
mull
ds
pop
dec
sbb
data16
jle
dec
cmp
lret
leave
fprem
mov
sti
xchg
incl
pop
cmovg
imul
into
call
lret
repnz
mov
or
jp
or
dec
sub
push
ljmp
enter
call
push
jp
or
dec
sub
push
mov
xchg
test
cmpsb
loop
fsubrs
pusha
xchg
pop
dec
xorb
xchg
xor
cmp
push
out
insb
ss
outsb
mov
inc
jmp
int
lods
dec
or
rcr
outsb
out
jb
push
xor
dec
popa
xor
add
lret
in
xor
cmp
and
mov
scas
xor
imul
add
ret
rorb
or
stos
gs
outsb
mov
les
hlt
mov
ljmpw
sbb
push
gs
psubd
or
lods
enter
pop
and
leave
pusha
leave
jo
inc
call
xchg
int3
push
xor
rcrl
daa
cmpl
xchg
mov
inc
adcl
call
scas
push
mov
pop
mov
fists
add
jmp
push
movsl
dec
cmp
push
test
jl
jae
dec
mov
add
cli
sbb
inc
jnp
mov
mov
in
in
dec
push
fisubl
out
jne
sub
fisttpl
mov
ljmp
test
mov
pop
jl
pop
sbb
stc
sub
stc
push
pushf
dec
sub
das
pop
sbb
jnp
insl
cld
popf
test
mov
mov
inc
mov
repnz
add
hlt
push
outsl
sahf
xchg
mov
mov
push
add
sub
or
pop
mov
mov
aas
cltd
popf
int
mov
xchg
filds
lock
push
inc
push
movsl
mov
loopne
pop
sub
popf
jo
lahf
jge
pop
inc
xor
rorb
cmp
lcall
or
or
movsb
jle
in
lcall
cmp
test
call
out
imul
jae
leave
into
and
xor
leave
jmp
stos
xchg
scas
push
wrmsr
mov
sub
jecxz
popf
shl
dec
jg
lea
out
mov
pop
push
loope
sub
cmp
jnp
push
push
scas
dec
dec
pop
in
popf
loopne
repnz
test
pusha
dec
jbe
mov
mov
divl
lret
mov
loop
push
jle
fnstsw
inc
popf
xchg
xchg
rcl
adc
xchg
ffree
cmc
jl
pop
stos
bound
int
and
jg
imul
jl
lds
and
cmc
outsl
lea
mov
rolb
xchg
movsb
sub
lahf
adc
xchg
cmp
outsl
jo
ret
ret
xor
mov
push
push
xchg
test
aas
cmpsb
cmpsl
sti
outsl
pop
pushl
inc
sbb
mov
jp
fstpl
movsb
mov
xor
or
inc
movsl
pop
imul
jmp
xchg
lret
mov
cmp
lret
inc
sbb
cwtl
fadds
adc
push
lods
or
xchg
aad
inc
test
mov
xor
lods
push
bound
mov
and
sub
push
mov
pop
cmp
sbb
pop
inc
and
fs
xchg
pushf
test
jnp
aas
xor
sub
add
mov
aas
jno
pop
push
jg
pusha
incl
add
add
lret
insl
dec
outsb
out
and
into
push
mov
pop
push
jns
or
test
mov
sti
jl
stc
fwait
cmpsb
mov
fwait
cli
leave
xchg
cltd
in
push
add
xchg
mov
inc
pop
mov
dec
in
push
in
dec
sub
xchg
xor
mov
and
ret
add
cwtl
into
mov
enter
out
test
sahf
push
jae
xchg
imul
cli
rcrl
xor
push
call
ja
xlat
inc
enter
sti
and
clc
stos
xchg
pop
popa
enter
sbb
mov
or
mov
adc
fcmovne
call
sub
dec
cmpb
jnp
iret
sub
fstps
push
jne
ret
cmc
push
adc
push
outsb
mov
pop
outsb
cmpb
jl
jne
adc
sbb
rcr
pop
stos
outsl
jbe
dec
inc
ja
ret
sbb
shlb
xchg
push
outsl
or
pusha
jns
dec
and
cmpsb
jbe
add
and
sbbb
clc
mov
push
test
jmp
adc
jno
push
dec
cmpsl
test
sub
adc
cmpsb
cs
dec
xor
dec
fcompl
xorl
xchg
and
mov
sub
lods
sub
jle
cmpsl
xor
inc
push
sarl
cmc
cld
pop
scas
xchg
mov
outsb
inc
mov
sbb
lock
addb
mov
iret
push
push
jbe
dec
test
cmp
imul
call
dec
pop
fmuls
lcall
in
aas
dec
mov
mov
add
mov
mov
or
adc
sub
pop
inc
rcll
orb
call
ljmp
add
dec
dec
cwtl
xor
xor
mov
cmc
mov
fidivs
mov
mov
out
push
cmp
les
add
pop
in
jns
ror
imul
rorl
mov
lret
xchg
push
mov
xorb
stos
and
xchg
jg
std
in
loop
add
xchg
cmp
fcoms
pop
test
data16
or
cltd
sub
xor
pop
pop
xor
xor
in
mov
mov
clc
shll
jne
and
roll
xchg
negl
sti
lahf
lods
outsb
add
sahf
xorl
or
add
xor
xor
or
push
jo
fstl
jecxz
mov
inc
push
xor
mov
cmp
mov
cmp
jnp
push
xorl
inc
adc
push
fsubl
pop
xchg
inc
pop
jecxz
pop
daa
insb
and
scas
subb
lods
jns
pop
mov
mov
fwait
push
mull
stos
xchg
jge
ficomps
push
push
out
addr16
test
jecxz
test
push
pop
rcrb
jnp
mov
adc
in
jge
inc
js
dec
xchg
popa
hlt
loopne
xor
addr16
push
shrl
mov
xor
fdivrl
pop
addr16
pop
xor
pusha
adc
inc
daa
mov
jns
iret
jmp
in
cltd
test
clc
jnp
pop
jne
decb
mov
mov
imul
and
mov
jle
test
testl
mov
xchg
mov
push
and
mov
lock
mov
jl
mov
sub
dec
push
pop
push
movsb
and
sahf
mov
push
test
mov
in
cmpsb
jne
test
cs
imul
mov
xchg
xor
fldlg2
dec
icebp
pop
jbe
bound
mov
mov
cmp
and
insb
jno
dec
push
push
js
jp
data16
mov
jge
push
mov
or
test
or
cmpb
aad
adc
cmpb
cld
mov
je
xchg
add
loope
ror
pop
int
or
mov
in
adc
jecxz
mov
or
loopne
dec
fmulp
and
nop
pop
sbb
dec
sbb
cmp
pop
es
sub
mov
sub
sbb
dec
ds
dec
es
lahf
mov
fcompl
stc
fidivl
and
pop
cwtl
jne
or
push
in
ja
pop
sub
in
and
test
bound
ret
push
pop
out
add
jae
cmc
lahf
xor
mov
add
mov
jnp
lret
ret
xor
aam
into
mov
jo
out
bound
fiadds
mov
sbb
inc
push
gs
mov
push
xchg
add
jg
mov
sub
dec
aaa
sbb
mov
pop
mov
pop
jae
movnti
fisubl
sub
orl
xlat
sub
clc
pusha
in
mov
adc
jmp
insb
jae
ss
mov
lret
pop
lea
test
cs
into
mov
arpl
cltd
and
mov
adc
and
xor
test
push
sahf
cmpsl
mov
mov
rclb
jo
and
leave
dec
shll
xchg
jo
jecxz
arpl
imul
push
stos
sahf
mov
loope
aam
cmp
popa
mov
sbb
outsb
test
js
push
mov
and
adc
bound
xchg
lcall
cmp
inc
add
sahf
loopne
lock
sbb
jae
test
sbb
popa
bnd
lea
or
jne
mov
inc
xor
dec
sbb
faddp
les
arpl
dec
sbb
stos
adc
rorl
lret
pop
or
jne
stos
insb
stos
cltd
scas
jb
lock
cs
push
data16
shrb
into
mov
stos
lea
int3
sub
mov
dec
xchg
out
inc
loop
gs
imulb
shlb
sarb
sub
fisubrs
pop
add
sar
call
scas
test
sub
pop
frstor
mov
push
mov
xor
mov
rorl
sbb
rorl
filds
sub
xchg
mov
and
cs
sub
fwait
mov
add
arpl
mov
mov
xchg
mov
inc
adc
clc
mov
pop
js
imul
and
imul
pop
adc
sbb
xchg
test
faddl
sarb
and
hlt
lea
or
sbb
or
es
add
aaa
insb
push
push
je
xchg
mov
imull
pop
jnp
mov
adc
aam
ss
mov
enter
push
icebp
mov
leave
lods
push
xor
add
rcrb
dec
pop
mov
jmp
jge
dec
jo
repnz
dec
push
mov
mov
outsb
js
pop
leave
mov
adc
cld
mov
test
pop
flds
popa
push
adc
mov
jo
mov
fmul
aas
pop
cld
push
popl
cli
inc
dec
mov
jns
dec
gs
inc
int3
in
or
or
add
sbbl
dec
and
mov
outsl
dec
push
xor
xor
mulb
cmp
ret
rol
stc
popf
adc
lods
je
xchg
pushf
shr
js
loopne
arpl
jecxz
pushf
popa
inc
out
out
xchg
lcall
xlat
mov
or
pop
popa
decl
std
push
mov
inc
cmc
xchg
adc
sub
std
outsl
ret
push
cmc
xlat
push
fadds
mov
push
clc
jecxz
cli
mov
repnz
push
cmc
cmpsl
arpl
cmp
aas
out
mov
dec
fisttpl
mov
test
sub
out
js
pop
data16
inc
push
xor
mov
jbe
out
xchg
fdivr
out
cwtl
or
adc
xor
cli
mov
mov
fstpl
add
adc
sub
pop
out
mov
xchg
push
stos
push
sbb
pop
lods
jns
cmp
xchg
cs
mov
sti
aas
addb
mov
and
cmp
xchg
lcall
sub
pop
pushf
das
mov
addb
fwait
xchg
insb
jae
or
sub
mov
mov
pop
popa
pop
jno
je
ret
jns
or
jmp
ljmp
xchg
mov
add
pushf
pop
dec
jb
gs
loope
pop
fldcw
and
mov
adc
ret
adc
add
je
bound
xchg
adc
outsb
movsb
jns
aaa
loope
out
xchg
repz
fs
or
inc
cmp
imul
mull
xchg
xor
jns
repz
roll
pushf
jmp
xchg
xlat
push
xchg
insb
pop
loope
dec
mov
in
ljmp
xor
jo
mov
gs
clc
xchg
mov
call
xchg
pushf
pop
loope
fst
enter
pushf
mov
mov
insb
pop
pop
jae
cmp
add
out
xor
mov
cmpsb
add
or
xchg
pop
mov
in
mov
sub
mov
fwait
jns
dec
jno
out
cmp
xor
push
inc
xorb
iret
mov
dec
adc
xor
aad
xchg
mov
es
in
adc
push
mov
jnp
pusha
fildl
movsb
idiv
or
int3
mov
decl
stc
leave
and
jmp
adc
mov
jae
in
push
xor
jae
cmpsb
andl
popf
mov
fldz
mov
repz
cld
sub
sub
arpl
dec
xchg
pop
jno
stos
int
mov
push
icebp
adc
out
rcll
inc
xchg
fldcw
loope
jnp
inc
jge
lret
mov
cmp
dec
sub
gs
clc
iret
ret
xchg
add
pop
pcmpeqb
out
lods
in
dec
lds
mov
mov
frstor
inc
jbe
sub
sub
rcr
call
rcll
into
leave
ja
ror
adc
cmpsl
negl
outsb
ret
lcall
out
sbb
jecxz
inc
ljmp
insl
or
mov
mov
sbb
bound
xor
pop
push
push
mov
push
push
loop
loope
jecxz
les
lret
test
arpl
xor
mov
icebp
adc
or
sbb
aas
shrb
pusha
pushf
inc
xchg
adc
sub
ds
inc
shr
aas
das
outsl
out
lea
push
aaa
insl
imul
movsl
fadds
mov
in
mov
push
cmp
lcall
daa
push
mov
adc
sbbb
xchg
ja
repnz
mov
loope
sbb
cld
add
push
aad
daa
call
fs
fbstp
movsl
mov
loope
test
mov
popf
or
imul
pop
jle
inc
cmp
jo
enter
xor
sbb
in
into
push
pop
add
jnp
adc
sbbb
int3
lret
mov
xchg
imul
cmpl
into
xor
shl
xor
cmp
jecxz
fbstp
stc
cmp
push
or
aas
movsb
bound
jbe
int
sbb
mov
jne
mov
fsubrl
pop
cmp
pop
mov
popl
jle
inc
xor
pop
addr16
test
and
cmp
dec
stos
xchg
or
das
cmp
sub
enter
xor
or
into
jno
sub
xor
out
test
jnp
add
xor
mov
imul
out
or
xor
push
lock
push
incl
addr16
cld
int3
sbb
stos
sub
cmp
jmp
push
test
lea
cli
ss
push
xor
xchg
push
popa
neg
mov
jb
in
adc
ss
xchg
cmp
jle
mov
jbe
push
leave
xor
jo
xchg
xchg
inc
pop
leave
test
pop
mov
rcl
or
cmp
mov
mov
aaa
mov
repnz
jmp
arpl
bound
std
add
lcall
inc
dec
xor
pushf
sbb
ret
mov
pop
lahf
xchg
add
ret
rorl
aas
lods
push
imul
jp
sub
flds
jno
lods
test
sbb
into
push
mov
ja
pop
inc
test
orl
inc
das
and
xor
jo
dec
ljmp
icebp
mov
push
and
cmpsl
pop
iret
testb
lcall
flds
push
stos
aas
mov
xor
xor
cmp
dec
test
pop
or
xchg
or
and
mov
fstpl
or
push
add
push
jne
fistl
jp
lods
xchg
es
xchg
sbb
in
pop
fists
mov
adc
dec
sub
mov
fnstenv
push
push
mov
cltd
cmpsb
cli
adc
gs
lock
or
orb
sub
in
cmpl
sub
fidivrl
xor
cmp
sub
pop
mov
jge
lret
cli
inc
loope
xchg
lret
std
xchg
add
pop
mov
lds
push
sbb
cmpsl
xchg
sub
in
int3
faddl
or
inc
ljmp
mov
mov
push
in
jb
aad
cmpsl
push
sub
fcomps
xor
lahf
repz
xor
jg
aam
inc
pop
inc
sarb
in
xor
cmc
and
adc
jl
fisubrs
sbb
adc
push
jle
sar
inc
stos
pop
mov
inc
xchg
mov
xor
xchg
fidivrs
adc
xchg
dec
sub
je
mov
cli
aaa
stos
iret
jae
lret
xor
ss
mov
xchg
jae
pop
push
cmp
dec
fcom
mov
addr16
mov
js
pop
dec
or
icebp
stos
push
addr16
arpl
push
ss
jbe
ljmp
cmpb
sub
out
outsl
pop
addr16
and
cld
ja
out
shl
sub
mov
mov
dec
into
aaa
xor
add
cmp
and
popf
ficoml
scas
scas
jbe
in
and
lret
push
adc
mov
int
jo
insl
cli
call
lcall
pop
cmpsl
lret
or
icebp
inc
sahf
fisubrl
push
lods
push
mov
ucomiss
enter
ret
shrb
mov
inc
add
loop
out
es
dec
fildll
sarb
cmc
adc
fnstenv
ss
and
jo
mov
push
iret
push
pop
movsb
leave
sub
ds
es
enter
icebp
stc
stc
pop
jl
out
add
imul
inc
push
int
arpl
mov
and
and
push
add
test
dec
shlb
inc
stc
leave
je
sub
lock
movsb
jmp
pop
mov
xchg
orb
aam
mov
fildll
scas
add
out
aas
ret
js
adc
hlt
andb
fldl
lods
fidivrs
cmp
sbb
xchg
sub
push
mov
movb
insb
sub
adc
es
sbb
cmpsl
aad
mov
in
mov
push
sbb
push
inc
out
mov
and
mov
loop
sub
jnp
mov
add
xor
fsubrp
push
cmc
cmp
inc
inc
fucomip
loope
mov
lods
jo
cli
cmc
sub
inc
sub
mov
inc
std
add
mov
es
cmp
push
test
in
ficoml
jle
xchg
pop
mov
mov
leave
xor
inc
test
cmc
cmpsb
xchg
sbb
insb
inc
cmp
mov
mov
lock
ss
mov
pop
aaa
out
jnp
sbb
cmp
sub
xchg
clc
cmp
das
orl
or
xor
mov
adc
add
sub
imul
sub
imul
adc
xor
in
xchg
cmp
inc
and
stc
arpl
pop
push
fimull
xchg
dec
sub
ret
idivb
orb
popf
adcb
and
imul
outsb
cmc
cmpsl
out
mov
inc
xor
push
mov
add
mov
jbe
test
fs
sbb
sub
pop
mov
mov
in
cltd
mov
add
fadds
pop
cmp
xchg
in
aaa
arpl
pop
in
in
pop
lds
sub
mov
pop
popf
xor
pop
xchg
iret
in
out
jl
cld
mov
or
std
mov
push
popa
or
scas
and
out
xor
aad
add
and
adc
repnz
inc
mov
add
push
sti
pop
xor
xchg
cmp
push
sub
cmp
dec
add
pop
fwait
shrb
sarl
out
ret
out
push
xchg
dec
mov
push
enter
repnz
dec
jg
dec
aaa
std
mov
pushf
push
ret
mov
pop
out
sbb
pop
jge
xchg
sahf
mov
mov
data16
jp
out
xchg
int3
fbstp
pop
les
in
lock
mov
rcl
fsts
dec
stos
or
std
repz
std
scas
scas
push
mov
and
adc
cmp
rcrb
xchg
out
pop
push
dec
aam
icebp
xchg
mov
fsub
push
push
and
das
int
jecxz
aad
xchg
fidivl
adc
popf
outsb
adc
jns
out
inc
es
push
dec
fidivs
push
mov
fcmovnu
mov
push
mov
lret
xor
mov
pusha
jno
arpl
cwtl
add
jbe
cwtl
es
popa
ja
lcall
adc
setne
imull
lods
test
inc
fildl
stos
mov
aam
test
fcomps
call
push
jp
or
dec
sub
push
ljmp
enter
call
push
jp
or
dec
sub
push
ljmp
pusha
stos
clc
mov
or
jp
or
dec
sub
push
fdivrl
lcall
out
mov
jge
xchg
mov
xchg
xchg
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmc
lret
pop
outsl
jns
mov
xchg
mov
add
add
add
add
push
add
add
and
add
add
add
inc
add
add
add
add
add
add
add
jl
push
add
xchg
add
outsb
add
add
add
add
xchg
add
add
or
add
add
cmp
sub
sbb
dec
add
stc
add
add
add
add
dec
add
or
add
mov
addb
add
add
push
add
lods
add
jle
inc
add
add
sub
add
add
add
add
add
add
in
xchg
add
add
add
sahf
add
add
add
leave
add
cmp
cmp
mov
inc
add
sbb
adc
icebp
add
add
add
add
fiadds
xchg
add
add
add
add
add
add
push
add
jbe
lods
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
cmp
lcall
add
add
flds
test
add
add
jbe
pusha
add
add
add
add
add
add
add
add
dec
add
add
sub
sbb
in
add
add
mov
add
xchg
add
add
add
add
adc
add
imul
rolb
add
add
add
add
add
add
add
add
add
add
add
addl
aaa
add
add
add
addb
add
add
add
add
add
add
add
and
add
test
add
fildl
addl
pop
add
add
add
add
add
add
add
add
mov
add
popa
add
add
add
popl
inc
add
push
add
bound
cmpsb
add
add
add
add
add
add
sub
cmp
mov
adc
pop
add
add
addb
add
sbb
popa
add
add
cmp
aad
sub
sbb
lock
add
add
add
nop
add
add
mov
jbe
lcall
add
add
add
add
popl
mov
sbb
mov
add
add
mov
add
mov
pop
add
add
add
mov
add
add
add
inc
add
add
add
or
add
cmpsb
add
add
mov
jno
push
add
add
add
outsb
add
add
add
add
sbb
imul
add
mov
jne
addl
testb
add
add
add
aad
sub
pop
add
inc
add
add
add
add
jo
je
mov
dec
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
mov
sbb
push
fiadds
jbe
dec
add
add
testl
add
mov
mov
mov
lods
lods
cmp
dec
pop
sti
stos
leave
lods
mull
fbstp
xor
mov
mov
outsb
in
lret
cmp
or
inc
push
push
pop
adc
jne
inc
fisttpl
andl
lcall
mov
icebp
stc
sbb
outsl
pop
dec
in
test
add
dec
je
mov
call
sbb
sbbb
test
loop
xchg
mov
pop
and
sbb
jecxz
call
cmp
and
ror
and
in
xor
adcl
clc
sub
sbb
daa
ss
cmp
inc
and
push
aad
and
cmpsb
loopne
xor
jp,pt
cmp
mov
pusha
arpl
iret
bound
jo
lahf
arpl
shr
call
jle
pusha
out
sbb
cmp
in
sbb
sub
xchg
int
test
cmp
ror
mov
pop
mov
sti
jecxz
int
cmp
or
fbstp
call
lcall
mov
je
push
xchg
or
test
push
sub
jnp
clc
leave
iret
in
lcall
pop
cmp
or
or
int3
adc
out
into
psubq
arpl
fisubrl
push
or
adc
mov
pop
jmp
pop
dec
popf
cmpsb
mov
loopne
test
add
jl,pn
clc
sub
insb
xchg
or
jge
ret
pop
xchg
mov
pop
fldl
and
ds
and
cli
repz
in
arpl
call
inc
jmp
pop
xchg
push
add
dec
push
daa
cmc
dec
cld
lahf
fnsave
mov
inc
sbb
cmpxchg
push
sub
ljmp
movsl
sahf
mov
into
int
push
lods
fstps
scas
xchg
sub
mov
fiadds
jl
cmp
pop
gs
mov
js
inc
test
shlb
stos
sub
sub
shll
push
les
sub
sbb
or
jae
xor
in
add
sbbb
mov
or
mov
fwait
imul
mov
jbe
cld
mull
aas
loope,pn
data16
roll
adc
push
xchg
mov
movsb
cmp
dec
jg
dec
arpl
fmul
jg
xor
cmp
dec
push
outsl
in
shr
jl
add
cli
pop
nop
sub
les
dec
into
cmc
fdivrl
sub
jne
sbb
fucomip
lea
sub
cmp
jnp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
