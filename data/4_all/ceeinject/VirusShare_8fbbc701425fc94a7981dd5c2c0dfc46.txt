call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
xor
add
adc
imul
cs
push
pop
popa
mov
mov
mov
ret
loope
adc
add
xor
and
jb
inc
jno
popa
mov
mov
mov
ret
loope
adc
add
xor
and
jb
inc
jno
popa
mov
aad
mov
addl
jnp
insl
xchg
and
gs
cltd
mov
push
jns
sub
xchg
and
inc
int
std
push
out
fisubs
jb
mov
jns
jle
mov
sub
movsb
repnz
fisttpll
adc
pop
dec
aaa
fsubl
lea
cmpsl
jle
jno
pop
jecxz
jns
inc
push
shrb
add
add
adc
inc
sbb
push
sahf
push
dec
aas
in
arpl
icebp
mov
repnz
pop
insb
jno
mov
xchg
push
mov
insl
mov
popa
mov
jb
cmp
xchg
cmp
fmuls
stc
int3
out
inc
and
mov
mov
loopne
adc
add
xor
and
jb
inc
jno
popa
mov
mov
mov
ret
mov
push
add
dec
pop
cmp
xor
hlt
xlat
cmc
icebp
out
mov
mov
repz
add
push
push
pop
sbb
and
shr
aad
call
xchg
into
adc
xchg
mov
push
inc
pop
ja
daa
push
jb
inc
jno
popa
mov
mov
mov
ret
loope
adc
add
xor
and
jb
inc
jno
popa
mov
mov
mov
ret
loope
adc
lahf
subl
popf
cmp
bswap
cmpsl
adc
fistpll
and
incb
ja
sub
daa
movaps
loopne
mov
cmp
movsb
loop
scas
fdivl
fldl
xchg
aas
mov
imulb
push
adc
pop
into
lock
sub
clc
outsb
jp
and
lahf
and
sbb
outsb
adc
add
push
int
je
sub
dec
adc
sub
cmp
push
push
mov
mov
hlt
xchg
mov
addr16
cmpsl
flds
int3
xor
clc
fsubrs
mov
jnp
repnz
enter
dec
push
mov
cmp
jb
loopne
inc
in
sbb
sub
adc
das
push
pop
iret
in
lahf
imul
sahf
leave
divl
adc
ss
loop
inc
cmpsb
fldenv
cltd
sub
xchg
out
ljmp
shll
sub
je
fcomps
fs
xchg
sti
dec
xor
repz
iret
and
pusha
xor
test
pop
sub
sub
mov
sub
mov
in
cmc
push
rcl
or
in
sbb
insb
fdivrs
mov
xchg
mov
loopne
sbb
in
mov
movsl
into
data16
xor
dec
adc
sub
and
dec
cld
push
push
jns
or
cli
or
inc
insl
or
dec
aaa
or
daa
decb
mov
dec
push
insb
xor
lcall
movsl
out
cmp
cmp
orl
popf
xor
sahf
xchg
pop
xchg
into
gs
mov
lcall
jns
or
testl
imul
pushf
and
and
sarl
sbb
cli
fdivrl
cmpsb
xor
push
int3
jmp
scas
fdivrl
inc
test
fcomi
andl
xorb
mov
jo
out
adc
cld
cmp
enter
add
addr16
or
pop
push
xor
scas
mov
ret
vpsubusb
imul
sub
outsl
aam
add
sub
sti
add
inc
fisubl
scas
mov
or
les
jecxz
imul
sub
in
adc
sbb
push
add
xor
mov
into
adc
je
or
xchg
cmpsl
xchg
adc
imul
xchg
pop
les
mov
out
scas
xchg
push
mov
sbb
and
stc
push
test
push
into
mov
cmp
loopne
xchg
psrad
inc
inc
jbe
fisubrl
fcoms
test
mov
pop
and
mov
repnz
pop
data16
popf
dec
int
in
add
fcmove
cs
dec
fmuls
js
das
scas
stc
pop
cmp
test
test
test
add
decl
loope
cmp
movsl
mov
cwtl
es
adc
cmp
adc
fistps
or
les
mov
fdivs
jle
mov
test
in
or
xor
and
fcompl
xor
jle
fwait
mov
pop
lods
sub
shrb
or
and
lret
pop
fmuls
mov
nop
xchg
out
inc
push
push
xchg
push
rcr
fs
add
mov
cs
sbb
push
mov
mov
xchg
sub
lds
in
adc
and
cmp
popa
pop
cmp
ljmp
mov
leave
push
popa
xchg
jmp
jg
push
mov
cmpsb
testb
inc
outsl
push
add
lea
out
xchg
mov
fmull
test
sub
out
sub
lcall
or
roll
int3
and
adcl
jge
xcrypt-ctr
cmpsl
pop
xchg
inc
mov
test
repnz
bnd
adc
call
cmp
inc
stos
xchg
out
pushw
fstpt
ds
clc
fsubl
dec
jno
push
int3
imul
in
sbb
cmpsb
arpl
gs
dec
cli
adc
popa
mov
cwtl
mov
ret
das
bound
or
cmp
jo
jle
mov
bnd
loope
mov
out
out
mov
xor
and
adc
pop
jge
insb
adc
jb
cld
push
mov
or
jmp
imul
int3
insb
and
aad
cmp
scas
xchg
cmp
dec
push
xchg
mov
adc
repnz
xor
es
xchg
ret
movsb
and
lods
add
stos
dec
xor
mov
imull
js
xor
dec
add
and
sub
xor
pop
movsb
js
push
incb
cli
pop
mov
ss
and
mov
xlat
mov
mov
mov
popa
into
cmc
out
repz
cwtl
jle
ja
lods
enter
xchg
aaa
sub
and
pushf
mov
sbb
xchg
and
repnz
mov
cmpsl
sbb
jns
lret
sbb
outsb
push
call
insb
xlat
testb
pop
xchg
xchg
div
xchg
test
pop
aas
push
ret
jl
pop
cs
jne
insb
push
inc
mov
sub
je
push
fwait
xor
daa
movsb
or
inc
daa
gs
jae
fwait
pop
jle
imul
ret
sub
pop
mov
das
mov
pop
pop
test
cmp
loop
pop
ficompl
movsb
aad
push
loopne
das
mov
jae
and
or
pop
pop
sbb
ret
movq
daa
and
mov
int
stos
leave
mov
add
fbstp
ja
insl
cmp
popa
mov
jmp
lods
jl
loope
xchg
scas
dec
loope
mov
or
addl
cs
inc
icebp
lea
inc
and
pop
dec
rcr
lcall
lahf
sarl
repz
mov
xchg
dec
int
icebp
mov
jmp
inc
or
adc
int
rolb
jge
mov
int
mov
test
inc
sub
mov
popf
jecxz
sbb
adc
mov
je
outsl
pop
inc
mov
addl
mov
fstpt
out
adc
mov
sub
add
lahf
mov
sarl
call
pop
sub
addb
mov
mov
lahf
out
lds
imul
icebp
pop
inc
faddp
push
dec
pop
insb
pop
ja
mov
test
or
mov
xor
fsubr
pusha
out
jp
mov
push
or
pop
inc
or
rcr
xor
adc
push
jg
es
pushf
xchg
ret
clc
sahf
stc
sti
push
in
add
push
pop
loop
mov
test
iret
dec
popf
push
mov
sbb
and
ja
loopne
jbe
out
cmp
rorl
popa
mov
lds
adc
loop
mov
arpl
inc
ljmp
mov
fsubl
push
sbb
adc
movsb
lods
or
hlt
push
stos
mov
imul
sarl
aaa
or
adc
lods
sbb
or
add
mov
pop
fs
leave
xor
jg
andb
mov
sbb
cld
mov
push
inc
dec
lcall
dec
frstor
adc
push
xchg
dec
mov
jl
mov
outsl
fbld
fisttpll
pusha
inc
stc
call
dec
test
or
cld
int
inc
cmp
pop
and
aam
sbb
fwait
jmp
sub
lds
enter
or
shlb
xchg
mov
sbb
xor
push
mov
fstps
clc
lods
mov
js
push
aad
insb
xor
sub
xchg
jae
rcrl
int3
loopne
mov
inc
aam
sahf
inc
int3
push
fwait
enter
enter
mov
xchg
adc
test
mov
xchg
xchg
mov
cmpsl
dec
mov
push
add
xchg
aam
push
nop
popf
sbb
dec
mov
outsl
inc
and
lock
dec
fsubl
cmp
add
dec
xchg
out
sti
xchg
pop
out
test
jbe
fdivrl
cmp
sub
and
inc
xor
stc
mov
cmpsb
ja
lock
icebp
fstpl
or
or
imul
pop
test
mov
pushl
shlb
add
out
cmc
rolb
in
mov
mov
and
sbb
hlt
cs
into
loop
jg
add
clc
lods
push
fsubrp
pop
xchg
andl
dec
mov
dec
xlat
jns
bound
jmp
push
cli
push
xchg
hlt
cmpsb
dec
jle
adc
sub
push
dec
add
insb
sbb
cmp
mul
scas
popa
lds
int
xchg
fsubrl
mov
xchg
push
pusha
std
jp
shll
ret
xchg
int3
insb
movq
xchg
sub
xchg
add
test
mov
sbb
nop
sbbb
sbb
cmpsl
out
cmp
out
pop
xacquire
out
mov
add
and
xchg
mov
mov
aas
insb
pop
mov
rorb
cld
fildl
mov
ret
adc
ds
fdivs
pop
add
cmp
and
in
mov
xchg
mov
inc
add
pushf
lret
gs
adc
mov
cmp
test
fucomp
add
scas
jnp
lret
or
shr
mov
mov
sub
clc
loop
sbb
fistl
dec
jmp
mov
int
orl
sbb
fildll
cld
into
fwait
and
pop
cmpsb
or
lods
and
xchg
sub
dec
inc
int
in
mov
xor
js
pop
pusha
loop
or
repz
push
adc
sbb
or
inc
aad
inc
mov
inc
sub
add
mov
scas
sub
lods
lcall
sbb
pushl
insb
inc
sub
rcl
mov
push
mov
add
push
inc
mov
mov
lods
push
dec
push
push
push
rcll
adc
dec
sbb
inc
lcall
push
aad
mov
orl
jge
add
cmp
cwtl
cmp
out
sbb
mov
inc
insl
es
js
dec
inc
out
pop
outsl
loopne
xchg
enter
cmpsl
inc
mov
xchg
jbe
shrb
cmp
inc
adc
jo
pop
in
fldcw
and
lods
xor
jmp
pusha
test
jno
xchg
add
das
add
mov
inc
lea
xchg
xchg
out
cmc
insl
push
xor
push
lret
sbbl
call
stc
scas
cld
into
push
xor
xor
test
inc
scas
or
adc
cmp
cmp
mov
adc
cmp
leave
notl
js
jo
repz
popf
int3
mov
and
sub
sbb
cmp
and
add
lds
sbb
sahf
mov
and
imul
test
popa
jnp
mov
xchg
inc
push
jae
movsb
or
sbb
and
jae
jae
mov
xor
sbb
jmp
adc
fbstp
ljmp
fistpl
inc
movsl
stc
push
pop
pop
mov
cmp
inc
add
gs
and
add
jle
xor
jb
lds
xor
and
xor
ds
adc
mov
aad
pop
enter
stos
inc
mov
fdivrl
ret
data16
sbb
leave
dec
pop
mov
and
and
stc
mull
andb
xor
adc
xor
in
in
mov
in
aas
jl
rorl
adc
sbb
mov
cli
ficompl
bound
icebp
mov
xchg
cmpsl
push
ror
jne
cmpsb
je
xlat
mov
imul
xlat
cmpsl
mov
jbe
mov
adc
lahf
sbb
imul
shrl
lea
sub
notl
scas
xor
js
lods
jbe
or
adc
mov
lret
mov
inc
dec
js
jge
inc
mov
inc
dec
lods
pop
mov
mov
ja
je
mov
mov
sub
negb
mov
push
adc
das
loope
and
ja
and
pop
test
das
add
jbe
mov
and
push
sub
inc
pushf
cmp
mov
dec
fcompl
push
je
cmc
out
call
test
add
fisttpl
xchg
in
add
lret
repz
movsl
mov
shrl
imul
lods
xorb
sub
pop
icebp
sahf
and
sub
jbe
int3
sub
push
xor
pop
jne
and
add
repnz
aas
mov
and
bound
js
hlt
std
or
dec
cltd
jp
popa
push
pop
aam
dec
sub
mov
lret
sub
and
push
xchg
xor
mov
out
outsb
adc
xchg
ret
insl
cs
mov
push
xchg
pop
xor
cmp
addb
loope
inc
or
xchg
cmpb
adc
jo
adc
dec
sbb
es
xor
and
push
jge
loope
mov
test
out
xchg
jae
xchg
mov
mov
inc
out
fwait
xor
popa
test
lahf
mov
or
xchg
jg
xlat
es
fidivrs
div
mov
sbb
out
cmp
pop
sarb
pop
movzwl
out
test
sbb
aam
sub
iret
scas
xor
sbb
js
adc
roll
out
dec
rorl
jecxz
ljmp
xor
push
pushl
pop
shlb
mov
cmp
dec
into
add
leave
cwtl
call
shrl
ljmp
pushf
mov
loope
lods
pushf
push
repnz
adc
movsb
lods
test
imul
mov
xor
push
sbb
pop
xor
mov
sbb
mov
mov
xchg
mov
jns
xor
xor
mov
loopne
mov
push
lods
hlt
or
or
je
faddl
rol
jb
test
arpl
inc
loope
decb
les
or
sub
mov
addl
rcll
xchg
adc
jbe
sbb
fsubrs
add
cs
sub
rclb
mov
cli
pop
adc
cmp
daa
cmp
ja
mov
sbb
scas
push
cmc
add
add
loope
bound
movb
icebp
fisttpll
sti
das
jno
lcall
fidivrs
sbb
test
pop
cwtl
pop
loopne
adc
jns
fcomp
daa
out
jle
data16
or
cltd
adc
sbb
xor
mov
inc
and
push
call
aam
jp
mov
add
rcrb
aam
hlt
sti
in
adc
cmp
mov
inc
mov
and
cmpsl
test
xchg
outsb
or
cltd
ficompl
flds
mov
cli
test
ret
fxch
sbb
addr16
int3
insb
xchg
push
lds
and
mov
rorb
popf
cmp
das
js
fs
cltd
insb
js
mov
adc
mov
jge
push
stos
inc
aaa
xchg
xchg
mov
addr16
or
imul
pop
adc
ret
cli
lret
sub
mov
int3
adc
out
js
mov
xor
dec
mov
addb
in
add
pop
cwtl
mov
mov
popa
xchg
xor
cmp
pop
outsb
cmp
and
xchg
sarl
lret
xchg
aad
push
call
shrl
cmp
add
mov
or
xor
jnp
sbb
lret
jae,pt
ds
add
sbb
cmp
mov
lret
xchg
pop
in
int3
lcall
hlt
mov
pushf
dec
mov
xchg
sbb
or
xlat
clc
add
ret
das
jne
sbb
inc
push
dec
xchg
inc
inc
rcrl
mov
lds
mov
std
fdivrl
lret
lahf
add
shl
pop
push
mov
fwait
rcll
repz
fsubrs
lret
and
pop
inc
sbb
bound
loope
fnstsw
daa
test
shlb
sbb
inc
xor
and
jl
push
movsl
mov
stos
int
sbb
data16
xor
pop
stc
cmpsb
or
inc
cwtl
add
cmp
cld
lock
cmp
push
cld
popa
icebp
jnp
test
ds
mov
cmpsl
fs
jb
jno
data16
shr
jo,pt
cwtl
mov
cmp
push
sbb
mov
mov
mov
lds
or
xchg
out
add
xchg
icebp
fsts
mov
out
imul
cltd
push
inc
jl
shlb
mov
fcmovnbe
loope
mov
mov
jge
adc
inc
push
lods
dec
and
mov
xchg
cld
adc
push
lds
bound
les
sub
add
pop
mov
push
or
in
stc
imul
and
push
or
ret
inc
cmp
xchg
sbb
adc
es
xchg
shrl
daa
dec
mov
cmpsb
mov
insb
xlat
jo
mov
or
mov
repz
aad
ret
mov
in
dec
push
stc
ds
pop
jne
int
push
jge
sti
lods
clc
mov
xchg
sub
leave
mov
negl
add
jge
mov
ss
mov
jo
dec
lret
aam
mov
iret
dec
cmpsl
ret
push
cmpsb
cmp
inc
call
fidivl
mov
fcmovu
push
cmc
daa
bound
mov
and
mov
inc
test
shrb
sbb
mov
mov
sti
std
out
xor
cltd
aaa
cmpsl
cmp
lea
jl
xchg
pop
jne
sub
es
outsb
clc
lods
xchg
xor
rcrb
sarb
xchg
lret
leave
cmp
push
stos
jmp
hlt
jbe
push
arpl
xchg
lds
xor
and
xor
rol
mov
fistpll
ljmp
cli
jecxz
jmp
pop
xor
adc
cs
inc
add
jg
mov
gs
pop
or
ret
fiadds
into
xchg
or
popa
cmp
push
arpl
popf
sbbb
sub
lea
hlt
negl
inc
lds
mov
push
int
sub
mov
aaa
divl
cmc
je
jne
xor
mov
leave
rcl
jl
xchg
jae
xchg
mov
mov
in
xchg
negl
dec
mov
and
jmp
addr16
push
out
mov
sbb
popa
sti
int
push
jno
ret
sub
xchg
pop
push
mov
mov
mov
faddl
xchg
adc
aaa
insb
inc
jb
clc
ds
out
adc
xor
pop
jae
aaa
inc
pop
std
add
mov
ljmp
xor
test
jg
adc
les
out
cmp
sahf
xchg
mov
mov
cmp
das
sbb
xchg
gs
pop
repnz
cld
push
push
insl
leave
cltd
jmp
ss
sahf
mov
pop
insl
push
or
cmc
sub
push
mov
lods
mov
jne
push
sar
cmpsl
sub
pop
push
adc
fs
push
dec
dec
clc
sbb
mov
mov
pop
mov
xlat
mov
rcr
mov
dec
xchg
xchg
rorl
and
lds
adc
jbe
rcl
and
sbb
adc
rolb
xor
mov
lea
rclb
incb
xchg
push
int
jmp
das
cmp
push
sbb
mov
bound
sarb
push
ss
mov
cmp
jmp
bound
incl
hlt
cmpsl
mov
int
inc
ficompl
addl
jmp
or
loope
scas
in
push
xor
and
out
pushf
ds
pop
aaa
fmuls
hlt
js
rorl
or
sbb
testl
gs
ret
aam
jmp
arpl
call
dec
push
out
inc
sub
incl
je
cmp
imul
mov
cmp
subl
mov
mov
push
sbb
xor
test
push
sbb
lret
inc
mov
in
gs
ss
repz
aad
add
fld
cmpsb
add
data16
frstor
stos
add
fstpt
in
push
inc
jae
or
mov
sbb
xchg
mov
sbb
add
cld
aas
je
int
out
shl
mov
cmp
rorb
pop
int
rolb
addb
push
stos
shrb
ret
mov
sti
out
pop
clc
cmp
xchg
call
repnz
and
jl
inc
dec
fistps
divl
jbe
adc
mov
adc
out
adc
shll
pop
popf
xchg
pop
stc
lahf
add
push
jb
inc
jno
popa
mov
mov
mov
ret
loope
adc
add
xor
and
jb
inc
jno
popa
mov
mov
mov
ret
loope
adc
addl
push
jae
inc
jno
popa
mov
mov
mov
ret
icebp
shl
and
xor
add
adc
bound
inc
ret
popa
pop
xchg
dec
sub
mov
xchg
pop
jp
cmp
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
lret
jns
imul
dec
stc
and
fmuls
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
push
fisubl
jno
add
sub
cmpsb
sbb
jle
dec
cmp
lret
jns
pop
push
dec
dec
or
test
xor
jo
mov
xchg
or
cwtl
repz
mov
add
aad
xor
gs
mul
cmp
lret
mov
fbstp
xchg
fcmovu
lea
mov
jmp
movsb
shrl
cltd
or
mov
xor
dec
out
out
or
push
jns
dec
int3
xchg
push
test
mov
aam
sbb
push
les
hlt
cmp
pop
out
adc
push
fldlg2
cvtdq2ps
xchg
sbb
ret
inc
sub
and
jmp
out
or
es
dec
test
jp
cmc
mov
lret
jns
imul
cmp
rcrl
push
jp
or
jl
cmpsl
sub
sbb
sbb
lret
movsl
xor
addr16
arpl
test
pop
mov
nop
push
ljmp
cmp
jp
lcall
push
cltd
gs
iret
pop
int
cmp
and
mov
or
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
iretw
sbb
sub
imul
mov
bound
adc
insb
mov
outsb
xchg
jmp
mov
push
imul
push
and
jp
cmpsl
add
xlat
loope
ret
lds
test
ljmp
cmp
inc
sub
add
int
xor
cs
ucomiss
push
fstpt
fdiv
and
aaa
aaa
fwait
mov
sahf
xchg
repz
in
adc
and
jmp
ds
test
movsl
xor
shll
push
or
shll
cmp
jg
fdivs
loop
sti
push
sub
add
bound
outsb
sub
ficoml
ret
aam
pop
sbb
lds
dec
push
shlb
sbb
bound
or
out
int3
push
stc
push
mov
inc
adc
lock
ljmp
xchg
cmp
std
pop
xor
xchg
xor
push
arpl
or
pop
cmpsl
mov
push
cmp
pop
adc
add
jbe
jb
push
sbb
repz
jbe
mov
sbb
ss
jg
pusha
rorl
lock
in
pop
lock
aas
mov
in
cmp
cmpsb
stos
add
sbb
push
xchg
sub
mov
out
xorl
sti
mov
cmp
hlt
inc
sahf
fs
cmp
icebp
adc
stos
subb
jno
inc
lock
aam
xor
mov
sub
xchg
sub
daa
scas
mov
pusha
xchg
mov
mov
jg
push
gs
aam
sub
dec
push
and
xchg
add
xchg
or
rcrb
and
pop
adc
insb
arpl
mov
cmpb
push
sbb
pushf
adc
inc
dec
push
enter
xchg
add
or
xchg
flds
jge
inc
in
dec
popaw
xchg
xchg
lret
int
int
mov
cs
sbbb
addr16
loopne
xorl
dec
das
shlb
ret
or
mov
orl
mov
gs
push
jl
pop
lds
cmp
sbb
sarl
jecxz
push
jecxz
push
xor
push
push
in
in
sti
sti
adc
lea
in
rorl
inc
loope
or
jb
int3
pop
clc
dec
fistpl
cli
push
mov
addb
scas
sbb
mov
outsb
fucom
mov
and
push
aad
sbb
mov
or
cmp
xchg
setl
push
mov
sbb
fwait
inc
movsl
scas
cltd
dec
insb
xchg
fisttpl
outsl
movsl
xchg
dec
push
dec
add
stc
mov
xor
jl
ret
or
sub
or
outsb
adc
repz
cmp
mov
jmp
aam
loopne
jbe
stos
addb
rcrb
adc
fildll
mov
xlat
int
mov
and
or
add
mov
stos
lock
lret
push
jg
mov
sub
sbb
dec
mov
imul
dec
mov
pop
sbb
cld
mov
adc
or
rcrb
jg
call
stos
or
cmp
push
icebp
and
jno
xor
mov
xchg
sbb
testl
enter
test
imul
and
movsl
shll
les
dec
mov
mov
in
fyl2xp1
loopne
fnstenv
mov
and
stos
call
xorl
jg
or
xor
xorb
filds
out
and
dec
jae
mov
int
shrl
mov
add
pop
xor
test
dec
mov
call
leave
test
mov
popa
jno
aad
inc
inc
push
out
data16
popf
jb
ret
xor
mov
xchg
lret
inc
adc
jns
push
aad
out
lcall
popa
movsb
mov
mov
into
dec
xchg
dec
and
dec
pushf
aam
sbb
push
xchg
stc
dec
and
lahf
push
xchg
sbb
ret
sti
lret
or
lock
loope
loope
test
orb
fstpt
andb
inc
add
movsb
xchg
repz
imul
roll
push
mov
test
sbb
dec
push
lods
aad
shl
mov
fcmovnb
inc
pop
lods
and
adc
daa
fildll
xchg
inc
push
xor
into
cmp
jb
mov
clc
and
adc
stos
mov
addr16
push
stc
jle
or
pop
imul
or
jle
popf
jecxz
bound
lds
cmp
or
fwait
cmp
inc
dec
jb
pop
pop
incb
mov
cmp
roll
adc
xchg
call
dec
xchg
cmp
jae
mov
loope
scas
out
cli
mov
imul
mov
insl
or
lret
xchg
or
xchg
pop
push
test
rol
push
mov
jnp
insb
orb
jp
pop
push
cmp
cmp
iret
into
xchg
js
jp
into
mov
pop
into
mov
cmp
lock
std
fdivrs
mov
jg
out
leave
pop
cmp
pop
push
sub
sarl
subl
lods
fistps
jp
jbe
stos
pop
adc
and
push
dec
xchg
sub
and
adc
sbb
inc
leave
mov
out
dec
clc
lret
ljmp
insl
adc
mov
addr16
mov
mov
xchg
and
pop
dec
adc
dec
pushf
repnz
inc
mov
aas
xor
ret
gs
and
mov
int3
push
sahf
cmp
push
popf
push
mov
inc
pop
add
sub
fisubs
imul
pop
cmpsl
pop
aad
push
lcall
sub
adc
daa
pop
test
outsl
sahf
and
popa
iret
sbb
adc
lret
insl
std
in
mov
and
jb
inc
pop
xchg
mov
in
mov
imul
inc
call
mov
sbb
js
lea
dec
mov
test
xchg
pop
inc
and
lret
icebp
jo
fdivs
or
clc
pop
mov
sub
lret
push
movsb
scas
aaa
stc
pop
les
sahf
sbb
sahf
das
ficoml
xchg
jg
loopne
scas
jnp
outsl
cld
lock
loopne
or
mov
xor
cmpsb
inc
and
imul
imul
cmp
test
push
mov
sub
sub
aad
inc
shl
pusha
loopne
addr16
data16
inc
inc
xchg
sub
adc
idivl
adc
ret
jbe
jnp
mov
jnp
popf
aaa
or
adc
ja
xor
inc
mov
jmp
mov
aas
xchg
movsl
fs
sub
pushf
mov
push
push
mov
mov
pop
mov
cmp
in
scas
mov
jl
mov
sub
xor
mov
xchg
jmp
jp
loope
int
pusha
pop
rorb
sahf
adc
add
pusha
or
push
adc
in
je
testl
adc
cmp
push
xchg
mov
pop
mov
jb
pop
sarb
xchg
push
jns
cltd
push
in
sar
mov
scas
insb
jnp
xor
push
ja
pop
or
sbb
shrl
push
push
das
cmp
push
or
inc
push
ds
jbe
imul
fwait
fisubs
incl
outsl
imul
ret
pop
lods
push
jbe
add
lret
rolb
mov
sbb
arpl
vmovq
and
xchg
shrl
nop
mov
push
testb
mov
pusha
fwait
cmp
iret
repz
fidivrs
cmc
stc
mov
cmpsl
push
push
dec
jne
xor
mov
jg
mov
pop
inc
test
pop
push
pop
scas
mov
push
ret
cmpsl
cmpsl
and
sbb
adc
mov
leave
mov
mov
cs
add
pop
ja
fildl
adc
shlb
and
call
js
fbstp
cmpsb
sbb
or
popa
sub
imul
cltd
xchg
mov
cmp
pop
loope
xor
cmpsb
pop
push
add
inc
jge
ja
sti
negb
mul
ljmp
loopne
mov
mov
or
push
test
leave
sahf
test
and
iret
aas
mov
xchg
jmp
out
cltd
sahf
dec
mov
jecxz
je
and
in
in
shrb
ja
repnz
ficomps
xchg
in
outsl
add
repz
cmp
cmp
sbb
test
mov
push
pop
ret
loopne
pop
mov
mov
shl
jb
push
int
adc
lea
negb
or
and
jp
sar
shll
mov
ret
cli
sbb
xlat
aam
and
pop
movsb
int3
fnstenv
xchg
in
imulb
fcmovb
loope
cmp
mov
xchg
fiadds
cmpsl
hlt
outsl
push
sahf
sbb
sub
pop
add
mov
mov
xchg
sahf
push
call
inc
add
fcomps
push
leave
lods
push
push
iret
fnstenv
mov
out
mov
or
adc
xchg
adc
push
xor
ret
outsb
dec
or
pushf
add
adc
pop
mov
ja
fmull
shrl
sar
pop
idivb
je
sbb
movsl
jmp
mov
int
ror
and
mov
mov
mov
mov
in
or
sub
ljmp
bound
arpl
or
in
inc
outsb
in
xor
ret
cmp
jmp
sarb
data16
adc
mov
mov
and
sahf
fiaddl
xor
jnp
shl
bound
ljmp
and
adc
xor
lret
lahf
inc
add
fsubs
lock
xor
inc
lods
push
pop
testb
lods
mov
jle
inc
mov
push
pop
mov
pop
js
pop
mov
dec
leave
je
inc
inc
sbb
pop
jg
shrl
popa
jmp
pop
push
in
adc
out
lock
mov
jns
bound
int
sub
pop
cmp
mov
popf
push
push
xor
push
arpl
xchg
or
mov
xchg
add
loope
xchg
sbb
ret
pop
push
cwtl
xor
lds
jl
xor
addl
ror
cmp
sahf
mov
sub
daa
add
jle
mov
jae
cmp
lret
inc
aam
mov
pmulhw
iret
daa
fs
jne
jbe
mov
mov
dec
sbb
push
shl
mov
pop
loop
test
mov
sub
pop
fwait
add
data16
shr
xchg
jecxz
lahf
in
mov
mov
xorl
push
adc
push
and
imul
les
imul
mov
popf
movsl
push
in
sarb
adc
sub
lock
movsl
dec
out
clc
test
push
repz
nop
inc
xchg
rclb
movsb
or
inc
ss
es
xchg
scas
inc
clc
pusha
cmc
test
cwtl
faddl
pusha
lret
pusha
xor
sbb
jb
iret
add
or
sbb
cli
and
insl
in
xchg
lret
dec
ret
sub
daa
fwait
hlt
outsl
dec
popf
lock
jmp
dec
xchg
pop
and
mov
lods
call
in
in
mov
dec
mov
add
out
push
jmp
and
add
cwtl
enter
xchg
jecxz
test
stos
sbb
mov
call
dec
xor
fucom
scas
add
xor
inc
pop
xor
out
mov
jp
aaa
lahf
push
shl
pushf
popf
fnsave
out
pop
dec
jns
fmull
dec
mov
sbb
pop
and
fisttps
and
mov
ss
shr
dec
fistpl
adc
pop
inc
fmuls
hlt
jge
pop
jge
xchg
fsub
xchg
and
loope
jl
cmp
inc
pop
das
jo
out
dec
or
and
mov
call
jp
ret
mov
push
cmpl
dec
divb
loop
lods
xchg
pop
dec
push
inc
sbb
mov
mov
lock
mov
outsb
cmc
push
mov
fstpt
popa
inc
fxch
cmp
push
inc
mov
in
mov
jne
ss
lret
mov
mov
mov
scas
jns
cld
mov
mov
call
mov
loopne
add
scas
adc
movsb
lods
pop
cmp
inc
shll
int3
push
sbbb
shlb
mov
xlat
repnz
sbb
xor
mov
jno
ds
jmp
hlt
pop
mov
inc
sub
fwait
or
mov
data16
jmp
faddl
dec
pop
mov
adc
sbb
xchg
fildll
xchg
or
add
sub
push
sbb
lock
lahf
divl
mov
mov
pop
sub
mov
testb
sub
fwait
sub
test
stos
pushf
sub
jle
jne
mov
inc
lods
fsubrs
jae
int3
pushf
lods
ret
xor
in
fstpl
xchg
and
jno
psubsw
xchg
pop
rcrl
sarb
cmp
sti
in
jp
jnp
inc
out
inc
je
pop
movsb
fisttps
cmp
push
cmc
adc
sbb
xchg
or
movsl
sbb
mov
cmpb
mov
add
or
mov
fnstcw
dec
mov
popf
pop
movsl
test
inc
sahf
xchg
push
inc
mov
insb
or
mov
add
mov
aam
xchg
fisubl
sti
popf
mov
jb
adc
fbld
sbb
stc
jge
adc
and
pop
mov
inc
out
sub
mov
addb
ja
rclb
pop
daa
and
sbb
bound
imul
ljmp
xor
push
or
mov
inc
dec
pushf
pop
jns
add
out
add
stos
dec
adc
testl
jo
mov
pop
lcall
out
push
dec
outsb
fs
fiadds
mov
fsubrs
repz
mov
fisubl
ret
imul
out
dec
and
push
jne
mov
lret
adc
gs
cld
test
mov
pop
pop
scas
stos
int
dec
add
inc
push
in
or
leave
mov
fldenv
les
test
xor
loopne
xchg
xlat
insb
clc
mov
out
adc
pushl
and
fwait
ret
clc
movsb
fmulp
shlb
in
inc
mov
jg
mov
int3
jge
push
push
sub
mov
inc
pop
xor
sbbb
in
pop
jp
jp
loopne
mov
shlb
sub
or
test
push
jmp
pop
movsl
loope
xchg
inc
xor
scas
jb
sub
mov
sub
or
mov
imul
call
mov
jle
out
mov
std
out
add
aas
movb
sub
loop
or
repz
add
shl
pop
pop
jle
xor
dec
xor
sub
or
std
addr16
out
mov
int
sbb
test
loop
fdivrl
sahf
jmp
and
lcall
xor
push
in
push
inc
or
mov
sub
ljmp
and
lock
or
ret
mov
test
xchg
dec
jno
shll
imul
int3
stos
pop
pop
stos
xlat
popf
cmpb
sbb
xlat
ja
loopne
push
fstpl
in
inc
icebp
cltd
lcall
les
clc
add
imul
fidivl
call
mov
xchg
call
jno
mov
rol
nopl
add
loope
ljmp
ljmp
mov
jmp
inc
pop
int3
mov
loope
mov
fwait
adcb
push
shl
stos
adc
lret
mov
xchg
jp
iret
jae
xor
int
cmc
sahf
movsl
or
movsb
imul
push
test
jb
lds
in
out
js
sbb
or
or
and
int3
call
mov
ret
insb
jg
out
pop
test
movsb
aam
cwtl
stc
mov
repnz
sub
lahf
add
call
jnp
mov
sub
cmpsl
clc
dec
orb
jle
mov
or
fstpl
cwtl
test
lea
frstor
push
in
push
mull
dec
enter
mov
shll
or
inc
inc
lcall
ss
setle
cli
arpl
mov
mov
xchg
mov
js
stc
cs
mov
push
lods
fimuls
push
add
mov
mov
pop
push
or
jns
sub
test
and
push
aaa
xlat
pop
push
pop
jb
sarb
dec
mov
aad
inc
shl
rclb
mov
inc
push
fistpll
loope
hlt
rolb
xchg
aas
or
add
ljmp
mov
sbb
aam
sbb
mov
or
test
ja
mov
icebp
ret
testb
in
pushf
xchg
dec
aas
xchg
pop
loope
mov
push
sub
addr16
sbb
adc
and
cs
movsl
testl
mov
dec
add
cld
mov
std
cltd
in
orb
sbb
jl
sahf
mov
push
and
ret
jp
xchg
icebp
adc
mov
push
movsl
pop
xchg
cld
pop
inc
cli
cmc
push
cwtl
cwtl
in
idivb
aam
cmpsl
pop
shrl
leave
cmp
sub
outsb
clc
or
shufps
cli
ret
push
movsb
dec
push
bound
cwtl
rolb
loop
pop
sbb
iret
jnp
into
cld
xchg
loopne
js
mov
push
sub
add
scas
cmp
cmpb
push
fisttpll
jae
xor
test
xchg
cltd
mov
cmpsb
nop
cmpsb
out
out
push
cmp
cli
jle
les
pop
addb
nop
das
shl
adc
bnd
std
scas
and
aaa
lea
dec
xchg
test
mov
jg
or
sahf
or
adc
enter
and
mov
incb
addr16
test
sbb
mov
mov
stc
into
in
dec
jnp
adc
out
sub
daa
fsts
mov
inc
or
pop
repnz
inc
out
lahf
pop
mov
test
push
sub
pop
fwait
mov
test
sbb
xchg
call
jo
mov
mov
push
std
mov
je
imul
xor
enter
jbe
mov
call
rorb
or
xchg
stos
jp
jnp
shlb
or
jmp
sub
es
mov
cmp
aas
hlt
lret
push
movsl
dec
mov
lods
nop
mov
sahf
dec
jbe
aas
rorl
cmp
iret
adc
nop
fiadds
stos
sti
push
mov
xchg
push
leave
js
xchg
pop
xchg
mov
in
inc
mov
jno
sti
pop
jno
jge
sub
cmp
cmp
inc
lds
mov
dec
insl
pop
adc
add
adc
inc
jno
rclb
xor
jle
loopne
mov
add
pop
xlat
add
add
jge
adc
sbb
lds
sub
inc
or
adc
jmp
repnz
dec
mov
push
ljmp
sbb
adc
arpl
mov
iret
test
lods
lea
dec
cmp
add
dec
dec
add
push
jnp
xchg
mov
adc
cmp
push
dec
aaa
pop
mov
ret
adc
arpl
test
sub
pop
add
pop
sti
ret
mov
cld
es
hlt
aam
push
aas
in
jo
loope
arpl
aad
bound
nop
inc
inc
movsl
sbb
jl
repnz
sbb
inc
imul
test
or
jbe
pop
outsl
mov
in
add
or
push
xlat
loopne
fisubs
pop
sub
jne
imul
out
mov
mov
mov
cmp
es
movsl
dec
adc
mov
mov
push
fmull
pop
and
imul
inc
adc
mov
and
lcall
outsb
inc
pop
enter
jle
mov
mov
cwtl
sub
fisubrl
cli
pop
add
xchg
xor
mov
pop
pop
enter
pop
xlat
inc
mov
cmp
adc
inc
cmpsl
push
jge
cmp
jns
incl
jle
xor
or
or
push
sub
ret
cmp
test
sbb
mov
xchg
push
call
sbb
int
out
or
xor
icebp
lock
mov
movsl
adc
daa
fidivl
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
mov
mov
lock
push
or
inc
aad
lds
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
add
xor
and
push
and
jo
andb
mov
rcl
loopne
lock
add
pop
and
xor
inc
fdivl
pusha
add
addb
nop
scas
rcl
mov
repnz
jl
insb
outsb
mov
hlt
pop
mov
ret
mov
xchg
mov
jle
push
dec
gs
ja
fldt
xorl
xchg
cmp
pop
hlt
movsl
in
cld
mov
add
inc
shrb
hlt
shlb
pushf
adc
loope
jge
add
inc
cmp
push
cltd
adc
push
or
mov
sarb
and
loopne
shrb
xor
mov
fwait
pusha
xchg
jg
shlb
das
icebp
or
mov
adc
mov
fs
jmp
mov
add
xchg
xchg
rcl
icebp
in
pxor
popf
lods
xor
fimuls
scas
pop
test
mov
pop
push
test
rcll
dec
add
xor
push
jo
lock
push
sbb
mov
clc
cwtl
in
lret
loopne
sahf
jns
jb
inc
arpl
aas
xor
aas
add
pusha
adc
aad
scas
scas
movsb
cltd
mov
gs
inc
inc
inc
adc
test
xor
mov
fcom
test
andl
push
add
push
jo
pusha
jo
addb
rol
rcl
loopne
lock
add
xor
and
push
inc
inc
push
jo
pusha
jo
addb
rol
rcl
loopne
lock
cmpsb
repnz
lahf
fldcw
cmp
inc
jae
rol
mov
dec
mov
inc
inc
cltd
adc
push
ret
mov
pusha
mov
arpl
stos
or
jg
jo
in
fdivl
mov
push
xchg
dec
xchg
es
mov
popf
dec
fwait
sub
mov
repnz
pop
xchg
jge
cwtl
pop
in
mov
idivl
xchg
int3
push
push
lahf
test
bound
shl
movsl
adc
mov
shrl
xlat
and
out
pop
lods
or
test
loopne
push
pop
and
je
add
and
adc
add
inc
fnsave
fnstenv
cmp
stos
in
pandn
popa
ljmp
dec
or
dec
aam
ret
rolb
push
and
aas
lods
out
dec
dec
mov
negl
push
repnz
mov
cwtl
jns
arpl
dec
fbstp
jo
arpl
add
mov
mov
xchg
mov
shll
std
int3
fdivl
inc
push
mov
lcall
jo
pop
repnz
mov
push
add
dec
sbb
and
test
out
or
pop
dec
fst
or
push
pop
adc
cmp
mov
les
fs
cmpsl
mov
cli
repnz
push
mov
inc
xor
jo
add
xor
or
rorb
daa
xlat
adc
or
cltd
sti
dec
cmpsb
mov
pop
sub
shl
insb
pop
pop
bound
xchg
pop
loopne
and
arpl
mov
jnp
jge
aaa
dec
gs
test
ja
out
out
cwtl
xchg
insb
ljmp
mov
fidivrs
mov
fdivs
scas
lea
mov
andl
imul
add
xchg
push
cmp
test
add
jp
fnstsw
icebp
mov
lret
cmove
shl
daa
leave
inc
mov
ljmp
mov
push
xchg
enter
mov
jmp
cmp
jnp
cmp
mov
and
ljmp
icebp
lock
mov
fstps
shlb
and
movsl
push
mov
es
out
icebp
fdiv
mov
insb
imul
push
mov
fcmovu
or
xchg
xchg
push
mov
rcrb
outsb
xchg
and
aam
cmpsl
jo
int
sbb
push
or
movsl
in
fidivs
xor
mov
mov
lahf
dec
loope
cmp
test
xchg
ror
cmpsl
cmp
out
mov
sub
adc
push
mov
sar
cmp
pop
sti
xor
cmc
subb
mov
int
in
or
int3
and
fcom
jbe
test
or
arpl
int
mov
or
out
lods
mov
in
mov
cmp
pop
sub
push
pushf
in
xor
inc
add
fildll
dec
dec
mov
dec
lods
dec
mov
pop
popa
imul
dec
mov
loope
test
outsl
xchg
dec
in
add
movsl
imul
imul
data16
sub
sub
sahf
movsb
push
push
push
cwtl
call
leave
leave
and
dec
xchg
rolb
scas
nop
dec
movsb
roll
ret
mov
sub
or
pop
or
outsb
push
jge
sub
sub
int3
add
inc
aam
arpl
xorb
lods
lret
mov
lret
xchg
mov
jge
push
jg
data16
cld
addr16
bound
pop
xor
cmp
aas
shll
dec
outsb
ljmp
sub
arpl
sub
adc
test
add
arpl
sbb
pop
je
sbb
cmp
dec
push
pop
mov
les
out
fstps
ror
rolb
gs
call
xchg
mov
xchg
dec
out
in
fiadds
xor
mov
xchg
daa
mov
cmpsl
xchg
repnz
cwtl
in
xchg
test
rcll
and
popl
pop
adc
rcrl
stos
sub
fcompl
and
fldl
les
stos
dec
icebp
and
jbe
cmp
mov
or
sti
loope
dec
lea
push
push
dec
fcompl
aas
push
in
data16
out
popf
adc
dec
pop
sub
add
cmp
flds
dec
pop
outsb
sub
push
pop
xor
aad
das
inc
test
decl
mov
pop
test
mov
mov
enter
jmp
lods
mov
aaa
xor
pop
sahf
aaa
jl
sbb
loopne
stos
mov
dec
mov
xchg
mov
loope
adc
jg
dec
push
push
xchg
jae,pn
adc
mov
inc
movsb
stos
mov
stc
xor
mov
bound
jae
lret
inc
jnp
pop
push
addl
outsl
push
out
xchg
insl
inc
push
aad
movsb
xchg
into
clc
jns
sub
rcrl
push
adc
inc
or
dec
or
sub
data16
fisubrl
and
fdivrs
add
out
push
or
das
lods
cmp
cmp
out
sbb
push
cmc
and
push
in
ret
dec
push
aas
adc
mov
andl
pop
fdivrs
fcomip
out
js
jge
add
xor
xchg
ljmp
mov
adc
outsl
and
insl
mov
scas
sub
sub
and
jno
jo
in
jmp
pop
xchg
adc
pop
sub
jge
sti
sub
insb
stos
popf
test
mov
clc
imul
js
dec
cltd
push
out
andb
push
lods
fbld
jnp
mov
add
jnp
inc
inc
add
dec
sbb
jnp
fcomi
test
ret
dec
ret
push
into
jne
cwtl
mov
jae
ret
movsb
jg
lahf
ret
idivb
jae
dec
das
out
imul
testl
fnstsw
mov
test
sbb
aam
xchg
mov
or
lea
ror
outsb
scas
cmpl
popf
push
les
sub
mov
jnp
xor
test
ja
pop
ret
push
push
or
aam
or
test
pusha
lret
xor
mov
ljmp
and
out
push
mov
fwait
mov
lods
rcr
cwtl
jne
xchg
mov
not
fs
repz
clc
sarl
aam
jbe
jecxz
cmove
fisubl
mov
clc
push
cmp
movsb
lret
lods
adc
push
xor
mov
test
cmp
insl
aad
mov
mov
sbb
jns
xlat
mov
push
cli
dec
cmp
lods
push
nopl
xchg
and
cmp
shr
lret
rorb
dec
mov
adc
lcall
out
out
int
add
and
in
test
inc
movsl
add
daa
imul
mov
shr
das
lret
je
addl
jecxz
mov
jmp
call
mov
testl
xchg
push
mov
rolb
or
inc
pop
outsb
adc
test
sbb
mov
jae
test
clc
popa
push
out
xor
add
fisubrl
jp
adc
js
jne
in
pusha
je
xchg
je
add
mov
lret
js
pusha
push
subl
add
add
mov
xor
fdivrl
add
mov
test
dec
mov
xchg
mov
push
jle
jo
lahf
test
pop
je
or
push
pop
js
inc
insb
int
mov
popf
mov
sub
ffreep
mov
popf
int
cli
mov
jp
xchg
mov
pop
cmpsl
out
pop
mov
ret
xor
sti
xor
in
movsl
test
enter
mov
pop
cmp
js
adc
in
jno
mov
cmpsb
repnz
and
dec
sbb
sti
loope
in
push
mov
inc
pop
testb
sub
jp
and
leave
neg
sahf
in
pop
pop
int
fwait
imul
pop
scas
iret
dec
aaa
push
push
push
jns
push
jne
in
jecxz
sbbl
push
cli
cs
out
mov
into
aas
addr16
mov
xchg
jp
cmp
rol
sub
lds
jle
shrb
cs
stc
push
iret
fwait
and
xor
pop
pop
test
rcrl
sub
xor
and
mov
aas
int3
dec
inc
sub
mov
dec
xchg
jl
cmp
pop
shrb
dec
push
sbb
mov
xchg
mov
mov
sub
mov
adc
xor
ljmp
jnp
xlat
lods
mov
inc
mov
cmpsb
test
and
stc
out
les
aas
imul
test
mov
xchg
or
and
loopne
pusha
mov
jge
loope
pop
out
jge
mov
out
in
sub
stos
push
inc
jns
push
sbb
add
inc
in
jb
mov
loopne
movsl
mov
popf
lcall
push
cmp
jle
mov
shrl
les
lock
loop
inc
or
mov
divps
scas
push
mov
adc
adc
sub
push
sbb
fildll
pop
jge
jne
mov
pushf
and
add
pop
mov
ds
lret
jns
sbb
mov
mov
inc
mov
fldcw
inc
mov
sub
aad
mov
test
imul
scas
and
gs
lahf
test
addr16
pop
out
ds
das
mov
sbb
jmp
mov
xchg
mov
out
and
pop
fildll
inc
jg
add
jne
dec
pop
les
and
jge
sarl
out
jnp
jbe
adc
aam
pushf
push
jecxz
inc
fnsave
cmp
xchg
xor
jnp
test
mov
push
in
iret
push
add
push
sub
add
push
popl
sti
xlat
sysexit
nop
daa
sbb
fstpl
aas
cmpsl
lock
pop
pop
shrb
in
inc
pusha
addr16
call
les
dec
xor
ja
mov
push
outsb
ret
cmp
push
mov
push
ja
jne
inc
lret
loopne
adc
pop
xchg
andl
mov
movsl
pop
cli
lea
mov
scas
mov
sub
or
fistpll
sub
and
int3
insl
roll
push
inc
lea
pop
stos
imul
ret
sbbl
test
addb
in
cmp
jl
fwait
jnp
mov
loope
add
or
stos
je
cmp
or
mov
and
mov
in
mov
stos
jmp
shl
loop
in
ret
ss
or
stc
sub
sub
or
fwait
xchg
loope
adc
mov
jbe
or
filds
sub
cmp
adc
jae
push
mov
add
not
mov
mov
test
loop
shl
mov
out
inc
cmc
adc
outsl
shl
fldcw
pushf
stos
cltd
js
fmul
notl
leave
xor
jo
mov
push
pop
lret
dec
addps
add
adc
mov
lcall
push
subl
int3
jp
repnz
pop
mov
xchg
pop
popf
lds
pop
jp
mov
cmpsb
leave
jae
cmp
shll
jno
movsl
scas
fcom
in
dec
lock
adc
out
shll
dec
add
dec
and
or
or
mov
mov
jmp
add
add
xchg
sub
inc
dec
stos
push
jb
dec
mov
pop
dec
psadbw
pop
pushl
fstp
movb
jne
ljmp
xchg
ret
dec
mov
add
push
ret
lods
mov
jae
inc
dec
push
fiaddl
adc
jl
and
addr16
lahf
xor
insb
cmp
fldl
loop
inc
xor
lret
mov
push
loope
pop
add
test
test
lret
cltd
inc
mov
ja
sbb
insb
jecxz
fsts
mov
pop
pop
loop
outsb
jne
ja
mov
pop
ffree
in
mov
jb
jg
test
cmpb
loop
lahf
cmpsb
sub
sbb
mov
fwait
mov
mov
pop
mov
and
cmc
pop
arpl
mov
scas
fmuls
pop
mov
xchg
push
ds
jl
mov
sub
test
jp
xchg
sub
ja
dec
or
mov
mov
ficompl
stc
adc
cmp
in
sarl
and
aaa
and
into
mov
inc
jle
or
in
sub
in
jns
test
push
xchg
mov
pop
mov
and
dec
cmp
inc
nop
push
mov
push
sbb
inc
out
fdivl
xchg
nop
mov
filds
pop
fldl
mov
into
loope
lea
fadds
push
aaa
jnp
hlt
jp
adc
adc
or
jle
mov
ds
lods
inc
xor
js
mov
sub
xor
std
cmpsl
pcmpeqw
stc
mov
dec
dec
add
dec
mov
mov
add
sbb
cwtl
sti
test
push
cli
movsl
mov
push
or
in
xor
les
jb
add
mov
in
adc
xchg
cmp
enter
lret
xchg
daa
clc
mov
and
pop
push
xchg
lods
js
adc
xor
mov
fisttpl
popf
and
inc
or
nop
iret
adc
ficomps
jg
mov
mov
repnz
mov
rclb
push
mov
and
pop
arpl
shl
pop
ja
divl
cmp
xlat
adcb
nop
inc
adc
jne
xchg
out
cli
sbb
imul
out
mov
jge
int3
or
cld
cmp
aam
adc
pop
sub
fimull
pop
in
int3
sbb
ret
out
jle
xor
fnstenv
mov
in
sbb
lcall
jmp
ljmp
inc
insb
and
mov
xor
mov
pop
out
sbb
jle
sbb
call
scas
xor
xor
clc
dec
dec
push
dec
mov
mov
loop
repnz
pushf
sarl
fisttpll
pop
mov
aaa
mov
je
mov
adc
cmp
jp
dec
cmp
clc
clc
fisubl
into
or
lods
and
int3
aam
jae
adc
dec
adc
lcall
cmp
xchg
jl
leave
jge
or
rcrb
xchg
fmul
jbe
and
into
cmp
std
jnp
push
mov
rol
sub
test
mov
cs
sbb
jecxz
or
lahf
pop
iret
xchg
lret
repnz
add
enter
in
inc
cmc
stc
pop
sbb
add
pushf
pop
or
mov
bound
incl
repz
or
sub
xchg
cltd
or
int
popa
in
add
and
fdivl
or
js
insb
test
jno
les
lods
int3
imul
xor
jle
rclb
cld
adc
aad
lock
or
add
cli
ljmp
and
adc
aas
mov
mov
jge
dec
sti
shlb
xor
cmp
and
cwtl
mov
imul
or
leave
pop
xor
fs
adc
xchg
dec
into
sti
cwtl
sbb
loop
sbb
int3
mov
es
fdiv
loopne
loop
js
int
repnz
push
shll
fidivrl
out
mov
imul
loopne
jns
inc
push
out
inc
mov
inc
das
sahf
mov
sti
sbb
mov
inc
sti
dec
addr16
cmp
or
inc
jbe
shlb
hlt
out
pop
addr16
add
xchg
push
mov
mov
stc
and
std
pop
dec
mov
pushl
jl
adc
movb
sbb
sub
inc
jp
jmp
pop
xchg
icebp
xchg
xchg
pusha
mov
pushl
aad
xchg
mov
cmp
in
je
pop
lods
lea
sub
adc
fisubrs
xor
jno
lret
or
int3
test
shlb
pop
pop
fucomp
arpl
fimull
mov
cli
imul
repnz
imul
cltd
mov
gs
or
movsb
xor
movsb
xorl
pusha
movsl
sbb
lret
mov
fbstp
jle
lret
sub
loope
jle
and
xchg
int
ror
dec
pop
adc
pop
aam
pop
lock
hlt
xchg
adc
inc
mov
xor
sub
call
fcomps
roll
dec
in
out
push
cs
and
xor
pop
popa
push
cmpsb
inc
adcl
mov
movb
dec
popf
shll
enter
in
cmp
fwait
push
lahf
cmpl
cld
mov
mov
shlb
or
test
je
int3
out
mov
lock
inc
je
aad
jmp
cld
and
out
sti
mov
gs
movsl
ficoml
pop
xchg
lahf
inc
lods
in
mov
sub
and
cli
pusha
pushf
mov
mov
dec
pop
je
mov
mov
dec
sbb
loope
pop
mov
loope
xor
lret
add
adc
out
inc
push
cmp
hlt
cli
imulb
in
cld
mov
stos
mov
sub
mov
push
aaa
sbbl
xchg
insl
push
and
mov
jp
popa
push
callw
lock
fstl
xlat
sbb
popf
js
mov
add
scas
addb
aas
cmp
in
in
ret
cmp
mov
sti
jne
test
push
jecxz
cmp
jne
fistps
sub
ljmp
xor
aad
lcall
pop
sbbl
std
dec
mov
sub
scas
cmpsl
leave
pop
test
mov
movsl
cmp
jmp
rorl
repz
mov
and
sbb
sub
std
xor
stos
bnd
pop
scas
inc
adc
xchg
cmp
arpl
inc
sbb
mov
subl
xchg
pop
cmpsl
movsb
and
stos
shlb
pavgw
pop
es
addr16
add
pop
or
cmp
cmp
ja
das
mov
daa
xchg
fsubrs
orb
and
jae
xor
mov
push
dec
adc
repnz
movsb
cmp
add
sets
cmp
cltd
incl
inc
daa
stc
mov
add
sbb
or
ljmp
adc
or
movd
cmpsb
daa
sbb
and
pop
ret
in
shlb
push
lahf
mov
sahf
cmp
out
aas
xchg
sbbl
dec
jge
les
lret
xchg
leave
addl
add
in
jmp
add
jcxz
sbb
mov
xor
dec
out
dec
inc
pop
aad
inc
es
enter
xor
pop
fiadds
adc
nop
mov
xchg
inc
out
cltd
cld
stos
insl
inc
arpl
jmp
repnz
or
or
add
push
jecxz
movsl
or
cmp
insl
mov
outsl
aam
cli
mov
daa
push
std
insl
stos
push
fnstsw
push
cmp
lods
inc
mov
jl
cmp
sub
divb
sub
mov
mov
add
and
rolb
shrl
stc
mov
adcb
pop
js
aaa
or
cmpsl
incb
ror
cmp
mov
pusha
mov
push
test
gs
mov
repnz
sbb
pop
push
dec
adc
outsl
pop
pop
in
xor
in
jns
enter
mov
pusha
stos
fcoml
push
inc
jo
lret
addl
inc
and
cmc
pushf
sub
int
loopne
lret
out
cld
xchg
push
and
cltd
js
adc
and
iret
jecxz
aam
ret
push
mov
dec
popf
pop
mov
mov
ds
jg
mov
lea
shlb
aas
dec
jo
out
jle
test
insl
roll
frstor
adc
ljmp
pop
clc
aad
shlb
mov
ret
jp
and
cmc
ret
bnd
fstpt
mov
or
mov
sbb
push
or
ss
xchg
mov
mov
and
test
xchg
pop
lcall
fidivs
xchg
clc
dec
adc
jbe
outsl
fbstp
adc
pop
into
out
and
js
inc
aaa
mov
int
ja
loope
jne
std
loopne
pop
int
add
ds
out
inc
out
push
dec
sub
or
ret
imul
int3
loop
adcb
adc
fisttpl
sub
and
lds
lcall
inc
lret
xchg
movsl
fcomi
and
repnz
and
xlat
std
fisubrl
out
adc
and
push
inc
inc
push
jo
pusha
jo
addb
rol
rcl
loopne
lock
add
xor
and
push
inc
inc
push
jo
pusha
jo
addb
rol
rcl
loopne
lock
xor
pop
and
rolb
jo
mov
nop
inc
mov
rcl
lock
add
pop
adc
add
push
inc
push
push
jo
loopne
nop
jg
cmp
mov
dec
das
nopl
js
push
cltd
je
dec
sarb
ret
mov
call
pop
mov
daa
mov
js
push
xchg
cmp
jo
clc
inc
call
pop
aam
test
cwtl
daa
mov
js
push
xchg
cmp
or
inc
lret
add
dec
test
jns
dec
sti
sahf
or
and
xchg
xchg
sbb
mov
std
pop
mov
pop
sub
add
int
cmp
lods
mov
mov
cli
int
lods
call
cwtl
das
js
gs
xor
leave
xor
pop
push
scas
sub
cwtl
mov
mov
xchg
cmp
popw
xchg
fwait
xchg
sub
iret
notb
push
pop
cli
pop
inc
sub
mov
and
cmp
mov
mov
inc
pop
mov
int3
lcall
jbe
std
jmp
mov
pop
or
inc
loopne
adc
and
mov
dec
popf
mov
push
xchg
cmp
or
inc
call
pop
mov
daa
loope
jl
sub
pop
into
inc
rcrb
pop
push
addl
jb
outsb
int
loope
aam
mov
cmpsl
cmp
jmp
mov
cmpsl
insb
xor
and
inc
into
daa
out
cmp
and
push
xchg
mov
cmpsl
or
inc
call
pop
mov
daa
mov
js
push
xchg
cmp
or
inc
call
pop
mov
daa
mov
js
add
mov
sub
push
xchg
mov
jae
cwtl
xor
sub
and
stos
sbb
dec
icebp
inc
test
and
out
fcmovne
sub
fcoms
popa
ds
jnp
movsb
fildll
shrl
js
les
addl
into
imul
inc
popf
pop
das
and
fwait
mov
leave
test
mov
sbb
jo
lods
ret
cmpb
mov
xlat
add
xor
clc
or
mov
mov
out
dec
and
mov
test
stc
shl
test
add
or
inc
test
sbb
out
pop
les
jno
mov
xchg
mov
clc
out
inc
je
leave
or
jns
in
lods
xchg
into
dec
shll
aam
adc
pushf
sbb
ret
aas
sbb
push
int3
hlt
mov
jge
xchg
pop
inc
dec
xchg
mov
mov
jb
daa
ljmp
xor
enter
sub
sub
mov
xchg
test
sub
pop
jg
add
arpl
stc
add
das
add
addb
jle
aad
xchg
xchg
mov
jbe
jecxz
mov
pusha
sbb
sub
xchg
int
inc
inc
push
jecxz
pop
imul
mov
pop
lea
pop
xchg
in
dec
test
sbb
xchg
adc
dec
mov
fisttpll
int
push
sti
dec
loopne
not
and
out
test
aam
sub
cmc
cmp
push
or
push
push
mov
hlt
pop
daa
lock
in
dec
mov
cs
xchg
xchg
dec
mov
ficoml
xor
mov
or
and
or
test
int
push
xor
leave
scas
push
adc
fsts
xchg
mov
mov
imul
sub
cmp
stos
xchg
add
push
mov
aaa
cwtl
jp
dec
int3
gs
in
jbe
or
fwait
repz
aad
sbb
cmp
or
add
fidivrs
test
xchg
mov
mov
lret
fcoms
xchg
pop
inc
jne
add
or
xchg
jne
rol
dec
roll
test
mov
testb
cltd
mov
cmp
sbb
popf
cmc
sahf
lret
pop
jae
push
in
mov
pop
std
lods
test
jbe
inc
cld
xor
iret
cwtl
adc
cmp
lret
add
mov
mov
jg
mov
mov
adc
and
repnz
cmp
dec
pop
mov
pop
pop
arpl
sti
ja
fisubs
ficoml
arpl
sbb
mov
in
and
les
pop
mov
push
decb
loop
xchg
xchg
fsubl
xchg
or
fxch
icebp
scas
sbb
and
pop
dec
dec
or
jae
ret
inc
lret
sub
push
adc
jmp
push
xchg
test
data16
lock
and
shlb
test
pop
stos
cmp
cmp
lahf
xor
pop
ljmp
loopne
xor
jae
sub
in
xorl
inc
mov
push
popf
or
rcll
imul
mov
add
pop
push
cmpsl
imul
imul
fcomip
sub
and
pop
lret
dec
mov
and
mov
enter
dec
out
pop
and
rorl
sbb
fwait
enter
add
lret
or
push
das
ds
pushl
ss
jo
inc
sbb
cltd
je
rcl
divl
sub
xor
js
lahf
clc
inc
dec
dec
test
xchg
inc
dec
mov
js
iret
mov
arpl
jmp
cld
in
call
rol
call
or
pop
inc
inc
pop
xor
adcb
lret
repnz
scas
bound
stos
cwtl
ljmp
ret
push
push
pop
inc
rcr
rol
push
rclb
mov
jo
pop
enter
mov
aaa
leave
jg
pop
nop
xchg
jge
hlt
lret
data16
es
jbe
test
inc
out
nop
pop
imul
fstl
dec
popa
add
ljmp
dec
cmp
je
or
fwait
in
cltd
xchg
mov
shlb
dec
ljmp
cmp
dec
mov
pshufw
ret
and
jne
dec
rcrb
dec
outsb
shrl
xchg
inc
cmpsl
ljmp
aaa
sub
add
or
jecxz
dec
addb
outsb
mov
movsb
jno
adc
adc
push
roll
ficompl
enter
out
orl
repnz
and
in
lds
push
mov
or
cmp
loop
les
xchg
push
adc
out
and
in
out
xchg
and
jl
addl
mov
aaa
jbe
iret
adc
jo
mov
mov
add
push
xor
cmp
mov
hlt
jle
and
out
jl
xchg
cmp
nop
std
leave
cmpsb
enter
ja
or
dec
sub
add
dec
sbb
jo
lret
ficomps
mov
cmp
or
push
inc
jg
clc
lcall
stos
jmp
es
xchg
arpl
shll
and
out
in
ds
add
cltd
mov
inc
pop
test
mov
insl
ljmp
push
mov
int3
lret
cwtl
shll
push
icebp
cmc
or
sub
xor
emms
and
and
orb
adc
fidivs
fists
push
xor
test
pop
ljmp
add
or
sub
fldt
ret
inc
or
not
lock
sbb
mov
add
aam
insl
jo
pop
je
dec
push
push
jg
sub
jp
xlat
imul
or
fbld
and
movq
negl
in
cli
dec
fcomps
dec
xor
aam
ds
xor
call
addb
adc
and
and
pop
fld
outsb
dec
xor
mov
pusha
arpl
mov
scas
loop
jnp
stos
dec
mov
push
jmp
hlt
or
sbb
cmp
pop
sub
cld
out
fdivl
pop
fnsetpm(287
cmp
sbb
xor
mov
xchg
test
mov
or
add
xor
cmpsl
sbb
xchg
lds
sbb
das
mov
popa
push
dec
notb
inc
and
xchg
and
in
fucomi
sub
inc
xor
les
pop
and
js
out
orl
jg
cmp
sub
sbb
ds
jp
shlb
mov
sahf
daa
or
rolb
add
out
push
cltd
adc
dec
push
xor
test
test
test
jle
dec
ret
shrb
ret
icebp
cli
jbe
pop
jg
aam
loop
xchg
inc
mov
push
mov
push
outsb
out
lret
push
adc
adc
mov
or
fwait
adc
insl
adc
cmpsl
lods
or
int
dec
sub
push
enter
cmp
lods
and
repnz
push
push
outsb
aam
rolb
mov
pop
add
std
and
call
sub
adc
xchg
mov
es
rol
enter
jnp
test
add
or
mov
imul
mov
lds
mov
std
pop
out
nop
mov
sub
push
mov
or
jbe
inc
es
sub
mov
ret
or
sahf
ret
and
out
arpl
xor
int
aas
in
mov
int3
int
sbb
push
mov
lcall
jo
inc
out
pop
xor
and
mov
adc
xchg
jp
mov
andb
fnstcw
lods
jg
dec
fcmovu
pop
lcall
cmpsb
or
dec
popa
test
pop
lret
xchg
jbe
addl
push
test
jp
out
aam
and
mov
mov
or
adc
lahf
jns
cmp
jge
sbb
addr16
xor
mov
in
mov
stos
push
lret
jge
dec
imul
push
pop
push
fisttps
pop
mov
popf
push
fldenv
aad
aas
mov
pop
cmc
jne
and
adcl
mov
ss
jb
mov
aad
in
push
rclb
mov
insl
jge
cmc
call
inc
inc
jecxz
pusha
or
pop
fs
push
adc
imul
xor
cmp
inc
mov
scas
jl
sbb
push
or
std
fistps
mov
popf
dec
ja
fists
pop
inc
pop
ljmp
aas
movl
push
add
fwait
and
inc
sahf
loopne
ljmp
and
mov
arpl
cmp
mov
mov
out
mov
adc
xchg
mov
cmpsb
mov
mov
fidivl
bound
outsl
arpl
cltd
mov
sbbl
das
jmp
in
sbb
sbb
sti
insb
lcall
data16
xchg
mov
pushf
xchg
leave
cmp
sbb
push
push
inc
jbe
addr16
out
movsl
jno
call
bound
clc
sub
test
addr16
jnp
lods
pop
mov
sti
adc
adc
or
scas
cmp
push
addl
stos
mov
push
push
leave
jmp
or
cmp
add
mov
jle
je
push
out
test
scas
inc
and
lea
sub
int3
jle
sbb
xlat
inc
lret
jb
xchg
stos
dec
dec
pop
xor
das
cmc
sarl
mov
sbb
cmp
in
inc
cs
movsb
xor
out
mov
mov
int
or
xchg
out
adc
push
sbb
mov
pop
cli
mov
cmpsb
xor
cmc
jl
mul
push
out
add
mov
adc
or
fisubl
lea
inc
adc
and
push
iret
sub
test
mov
pushf
pop
jne
fidivrl
xor
xchg
test
jne
clc
mov
pop
add
into
shlb
lret
or
xchg
je
scas
fnsave
fildll
jp
xor
push
ja
ret
and
shll
sbb
add
cmc
cmpsb
push
lcall
cmc
push
mov
adc
cmc
data16
addl
lods
mov
sub
mov
out
aas
or
and
jmp
push
out
nop
mov
push
cmc
rclb
mov
insb
aaa
fmul
mov
cli
add
ds
pop
pop
push
sbb
inc
int3
sub
xchg
mov
loopne
imulb
mov
mov
push
dec
inc
in
and
sbb
xchg
jge
or
scas
lock
xorb
jne
test
shr
scas
xchg
pop
jge
pop
pop
subb
mov
es
jnp
cmp
jmp
stos
imul
sub
inc
jl
pop
dec
repnz
aam
into
lods
dec
test
icebp
mov
cmp
fdivr
test
repz
aad
adc
orb
out
mov
xor
sbb
movsb
xor
fisttps
push
dec
jae
adc
jbe
addr16
mov
dec
nop
mov
addr16
scas
xor
inc
sbb
imul
aas
sbb
fsubs
clc
sub
aaa
neg
inc
rcll
mov
xchg
jmp
sbb
pushl
sbb
add
pop
fidivrs
loop
rcrl
mov
daa
fisubrl
pop
adcl
ss
pop
lds
or
scas
gs
mov
in
jne
cltd
xchg
call
fs
mov
adc
mov
shll
loop
cmovge
clc
cld
xor
out
push
ret
cmpsb
mov
stos
bound
lahf
cli
mov
xor
jmp
dec
lret
xchg
in
mov
jb
mov
insl
mov
xchg
out
out
inc
jp
rep
sahf
test
fmull
jmp
imul
and
lahf
and
jle
add
inc
mov
cmp
xchg
push
imul
xor
popa
mov
lahf
mov
pop
sbb
stos
cmpsl
cmp
scas
into
push
stos
cmp
lds
std
push
ret
pop
dec
mov
mov
sbbl
fstl
orl
xor
iret
adc
push
cmc
mov
dec
cli
arpl
fcoml
aaa
sub
jecxz
fs
jmp
or
popa
icebp
ss
push
adc
pusha
cmpsl
mov
lret
xor
mov
std
inc
daa
jge
xchg
mov
and
sbb
jnp
mov
mov
pop
daa
mov
jl
cwtl
in
mov
fsubr
xor
cmp
sub
jg
adc
lea
sti
xlat
xchg
pop
punpcklbw
jnp
or
lods
xor
loop
pop
loope
add
cli
xchg
loopne
add
xchg
aad
or
xor
das
pusha
cmp
cmpsb
scas
mov
or
out
pop
dec
filds
ret
adc
lock
cmp
inc
ljmp
jbe
xor
jmp
add
dec
inc
nop
mov
xor
pop
mov
call
xchg
roll
adc
add
mov
shrl
jae
mov
mov
loopne
test
dec
add
fisubl
out
xchg
test
pop
cld
hlt
clc
mov
pop
sbb
test
jbe
cmpxchg
sub
ja
test
out
cs
fadd
test
sub
mov
dec
cwtl
out
out
dec
dec
ficoml
test
les
cmp
jnp
mov
fmul
jmp
adc
or
cwtl
inc
scas
dec
mov
pop
jnp
jbe
sahf
xlat
hlt
xor
add
sub
adc
shlb
xlat
out
repz
cmpsb
movsl
fistps
cwtl
add
mov
outsl
xchg
test
inc
adc
inc
js
sub
movsl
jnp
sub
decb
adc
icebp
xchg
push
pop
mov
jb
repz
test
mov
mov
ds
xchg
or
loop
jle
loopne
sub
xor
mov
test
add
mov
mov
outsb
dec
push
outsb
out
jge
and
lret
out
dec
mov
in
int
hlt
int
jns
adc
ret
cmp
push
mov
mov
dec
dec
xlat
stos
pop
xchg
lods
push
mov
jnp
xchg
add
outsl
das
lcall
xchg
mov
test
cmp
jb
loop
fwait
mov
and
and
cmp
and
mov
fstpl
mov
hlt
xchg
inc
pop
sbb
cld
out
sub
jo
sub
pop
inc
pop
adc
fwait
addb
popa
ja
aad
jns
insb
aas
xchg
push
dec
xor
add
pop
dec
xchg
xchg
pop
fildll
mov
outsb
dec
inc
mov
cltd
shlb
jmp
int3
mov
dec
loopne
fnstsw
in
xchg
push
adc
pusha
mov
cmpsb
inc
in
nop
mov
pop
ret
push
adc
shr
js
pop
xchg
orb
mov
std
cmp
inc
cmp
add
mov
inc
pop
rclb
or
dec
insb
pop
add
mov
xor
insl
add
jae
adc
cmpsl
pop
push
pushf
jbe
push
inc
or
jnp
push
jmp
sbb
sbb
outsb
fisubs
cs
jg
sub
xchg
xchg
out
pushf
cmp
sub
sbb
mov
mov
pop
sbb
ret
adcb
xlat
ficomps
int
lods
jle
fisubl
pushf
je
jnp
jb
mov
push
leave
mov
add
inc
cs
out
lods
inc
movsl
xlat
mov
xchg
loope
test
cld
push
in
push
and
cmpsb
stc
loop
nop
xchg
adc
sub
sbb
and
hlt
pop
mov
stos
int
add
test
mov
es
adc
bound
mov
popf
jg
mov
adc
int
das
xchg
jae
enter
lret
push
in
push
push
in
sub
add
push
repnz
add
cmp
jle
mov
jb
div
dec
cld
movsb
xor
aam
sub
push
push
rclb
pusha
push
pop
inc
movsl
lock
sbb
scas
jns
fsubrs
aad
sub
inc
test
jnp
sub
mov
jge
dec
insb
jbe
out
or
jge
sarl
mov
sti
pop
packuswb
mov
pop
call
sbb
jo
cmpsb
add
fisttps
mov
sarb
fidivrs
stos
out
imul
and
in
pop
fists
sahf
je
xor
mov
es
add
cmpsl
xor
cmp
mov
adcl
sub
sbb
stos
out
sbb
push
mov
fnsave
in
sub
lret
out
nop
inc
js
cmp
cmp
mov
test
movsb
or
sbbb
xlat
fwait
jo
cmp
mov
mov
ret
scas
aad
orl
jb
ljmp
icebp
mov
cmp
sub
pop
loope
sbb
inc
push
inc
jnp
test
scas
hlt
and
movsb
out
js
and
push
lret
gs
push
mov
enter
dec
pop
mov
ret
sahf
and
in
cmpsl
jl
push
lds
pushf
in
std
cmc
inc
mov
xchg
pop
cmp
xor
inc
mov
inc
jb
add
add
xchg
cmp
pop
fisttpl
add
xchg
xor
mov
addps
and
inc
ljmp
ja
pop
or
enter
jns
movsl
in
push
xchg
push
jns
pop
and
pusha
aad
jb
xor
test
aaa
xor
xor
cmc
repnz
movsb
mov
data16
mov
ja
sbb
or
sub
fsubs
adcl
mov
mov
popf
adc
fdivs
dec
test
aas
fmuls
or
jge
adc
mov
mov
test
pop
cmp
mov
jbe
jo
jno
inc
cmc
pop
popf
mov
decb
pop
jne
and
test
pop
pusha
adc
dec
and
cmp
ljmp
int
xchg
xchg
inc
mov
dec
adc
mov
inc
dec
rclb
or
popf
jae
mov
dec
xchg
fstpt
stc
or
int
fidivl
dec
lods
ror
sbb
mov
push
int
sub
dec
jp
jl
push
jo
dec
lods
iret
out
and
adc
xchg
push
pop
and
push
cmp
js
or
roll
shl
ds
lret
dec
fwait
sbb
sub
fcompl
xchg
cmp
sti
mov
or
pushl
sub
daa
cmp
jne
insb
and
mov
mov
sbb
mov
mov
sub
cmc
xchg
outsb
sub
sub
or
push
inc
dec
or
jnp
xchg
sub
lea
pop
mov
mov
mov
arpl
int
cltd
jbe
int
adc
das
sbbb
push
pop
mov
insb
std
in
jno
neg
jmp
xchg
and
sub
cmp
shrl
cld
pop
lds
sub
push
sbb
nop
inc
xchg
repnz
jge
push
or
ret
add
add
or
xchg
sti
push
mov
mov
mov
pop
xor
addr16
mov
in
imul
jmp
fcoms
push
cli
in
xor
inc
mov
jnp
lahf
call
loop
xor
lret
js
and
scas
sub
iret
je
movd
cmp
sbb
out
push
cltd
cmc
mov
mov
dec
shll
loopne
out
xchg
cltd
mov
pop
or
inc
imul
push
jns
push
cld
std
dec
fs
and
loope
cld
mov
sub
jb
or
leave
lods
sub
dec
dec
dec
in
fsubr
cmp
test
add
insb
dec
scas
adc
loope
cltd
lods
movsb
int
inc
mov
push
iret
mov
mov
stc
aam
inc
sahf
and
aaa
rcll
jecxz
ficoml
jle
popa
sbb
dec
sbb
add
sub
cld
adc
dec
sub
sahf
sarb
ljmp
pop
sahf
or
xchg
xor
aas
pusha
cmp
cwtl
dec
cmc
push
xchg
fwait
imul
fsubrs
mov
mov
outsb
sub
fwait
call
adc
cltd
sti
ss
pusha
fdivs
push
sub
push
or
hlt
jle
mov
stc
push
sbb
xchg
cmp
or
inc
call
pop
mov
daa
mov
js
push
xchg
cmp
or
inc
call
pop
mov
daa
mov
js
push
xchg
cmp
or
inc
call
pop
mov
daa
mov
js
push
xchg
cmp
or
inc
inc
fstp
addr16
enter
inc
pop
push
or
ja
lret
imul
ret
out
imul
xchg
mov
inc
pop
push
dec
addr16
push
daa
cmp
push
fcom
enter
call
cmpsl
mov
push
mov
ja
pop
sub
inc
daa
xor
sbb
fdiv
jmp
cltd
negl
ror
fxch
sbb
or
sbb
sub
iret
jmp
outsb
mov
rolb
pop
fmull
clc
or
lret
daa
push
xor
pop
or
lock
in
xor
pusha
and
cwtl
mov
jae
flds
push
xlat
imul
ret
outsl
inc
pop
push
dec
or
or
cmp
pop
push
sub
pop
popf
jmp
and
adc
mov
xchg
pop
sub
or
sbbl
imul
mov
mov
or
in
stos
dec
aaa
sub
filds
loop
aaa
ret
push
push
pop
sbb
or
cmp
mov
out
not
xchg
lcall
push
add
mov
xor
mov
xchg
xchg
out
int3
icebp
shll
xor
add
sbb
dec
push
pop
pop
push
sbb
stos
neg
xchg
stc
mov
ffree
sub
or
add
push
pop
or
cmp
sub
fcom
enter
call
cmpsl
mov
push
dec
addr16
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
jb
cli
add
adc
pop
mov
out
in
into
jl
jle
xor
mov
pop
gs
push
rclb
mov
mov
adc
fsubrs
push
jge
cmp
mov
adcb
and
mov
sub
cmpsl
or
repz
xlat
fucomp
in
add
push
adc
je
mov
call
notl
cmpsl
sbb
mov
cmpsb
call
xchg
jmp
in
sar
jno
test
aam
test
mov
std
cmp
and
cmpsl
or
sbb
loopne
mov
push
aas
shr
divl
sub
ss
xor
xchg
sub
adc
sub
ret
fs
cmp
cmp
mov
push
jp
jg,pt
xchg
dec
in
sbb
inc
les
sub
push
cli
sub
pop
xorl
ficoms
pop
adc
lock
push
mov
adc
adc
or
ror
inc
mov
adc
pop
clc
fsubrs
xchg
sbb
fnsave
cld
ds
lock
iret
fsubrp
mov
sarl
neg
xchg
je
dec
add
in
je
mov
mov
sub
push
or
jno,pn
jge
mov
add
sub
push
lahf
lret
lret
adc
mov
test
adc
xchg
in
dec
xor
addr16
jle
shrb
lds
and
dec
dec
dec
loop
loopne
adc
jnp
pusha
xchg
jns
fildl
add
add
cld
lret
andb
pop
cs
dec
sub
push
aad
out
mov
mov
in
scas
pop
and
sbb
lret
xor
sbb
mov
movsl
int3
arpl
pop
and
adc
popa
pop
jg
test
cmp
repnz
push
jnp
and
adc
insl
lods
dec
and
ret
jle
pop
or
jb
stos
jecxz
es
test
ret
movsl
mov
sub
rorl
mov
imulb
loope
add
mov
psubusw
mov
mov
or
mov
or
enter
add
xchg
add
icebp
aam
loopne
adc
xor
scas
in
mov
pop
sahf
pop
paddd
dec
push
ja
inc
xor
ret
sbb
pop
repz
int3
imul
xchg
sub
pop
push
jecxz
push
negl
mov
mov
mov
aam
xor
aas
xchg
mov
into
jnp
jecxz
imul
adc
scas
jge
and
fs
pop
add
inc
push
mov
sbb
scas
in
jg
pop
stos
dec
push
dec
outsl
std
movsl
inc
push
dec
dec
pop
inc
loope
das
fnstsw
pop
dec
imul
in
pop
fdivrs
sub
dec
push
jnp
pop
lods
xor
push
lcall
stos
pushf
je
and
lahf
xchg
mov
data16
out
adc
or
aad
nop
pop
cltd
pop
push
fldt
cmpsl
jp
test
and
cli
leave
lds
leave
cmp
movsb
enter
fcomps
cld
mov
icebp
jns
push
adc
fidivs
aaa
cmp
into
clc
loope
nop
imul
insb
in
sahf
loope
pop
mov
pop
out
inc
ja
xchg
in
popa
pop
js
xor
int
insb
add
cmp
pop
pop
lahf
pusha
mov
lock
push
dec
fiadds
sbb
sbb
pop
pop
adc
lahf
stc
das
push
adc
xor
pop
or
inc
test
divb
outsl
lret
or
and
mov
xchg
jb
aam
pushf
movw
dec
fdivrl
imul
mov
fcoms
inc
fiaddl
mov
andl
pushf
xchg
iret
pop
mov
ss
rorl
lcall
dec
push
mov
cmp
nop
push
ss
and
aad
jmp
test
adc
lea
aad
fisttpll
daa
mov
jmp
test
jle
das
or
push
out
add
xor
rorb
sub
fmull
mov
sbb
adc
mov
adc
push
pop
add
je
pop
push
in
lret
push
aad
leave
data16
sub
test
pop
mov
cmp
ficompl
jns
sub
push
dec
in
sub
cld
sub
adc
add
lcall
out
sbb
outsl
cmp
mov
movsb
cld
out
repz
and
xchg
cs
loopne
shlb
enter
cmp
adc
adc
sbb
insb
ret
jo
xchg
pop
push
lock
fwait
push
sub
mov
xchg
std
or
pop
pop
dec
insl
sti
shll
aam
jg
std
cmc
pusha
and
je
push
xor
in
pop
imul
dec
dec
or
or
insl
dec
ret
push
push
dec
mov
and
sbb
clc
xchg
pop
mov
sbb
push
out
dec
shr
repz
stos
mov
aad
gs
ficoms
iret
mov
out
dec
mov
enter
jp
adc
xor
scas
or
imul
sbb
add
lret
mov
test
pushf
inc
mov
or
pop
or
test
testl
mov
sbb
test
rcrb
xor
dec
cmp
or
ror
sub
mov
clc
cs
out
cli
aas
lcall
mov
sub
jne
push
cld
rcrl
inc
mov
xchg
cld
xchg
sbb
femms
sarb
pushf
jmp
sub
xchg
sub
popa
cmpsb
mov
cmp
mov
sbb
jo
lea
sti
lods
cltd
dec
sub
out
or
jle
jecxz
imul
pushf
mov
es
xchg
aam
push
jecxz
cmp
insl
ljmp
or
mov
outsb
mov
mov
rcrl
daa
sbb
aas
std
or
xchg
push
or
popf
mov
add
jl
out
sti
cld
or
fnstcw
fildll
punpcklbw
cmp
sub
call
sbb
jl
sub
rcrl
xor
aad
das
lahf
scas
imul
xor
sahf
xchg
repz
in
popf
orl
mov
adc
cltd
cmpsb
sub
cli
push
lret
das
cmpsb
out
push
cmp
call
cld
sahf
int
mov
pop
sub
lea
enter
jg
test
xchg
add
push
sbbb
push
cli
cltd
and
and
sub
hlt
stos
push
sar
cmp
or
cmp
jg
mov
dec
mov
in
ret
lahf
lret
and
movsb
dec
mov
js
push
add
stos
negb
push
es
or
or
cmpsl
test
int
lret
aam
jg
repnz
test
mov
shrb
iret
push
or
or
insb
cs
ljmp
pushf
xor
divb
out
cmp
sub
adc
cmp
out
push
clc
out
xlat
aam
jmp
push
mov
add
fisubrs
popf
sub
hlt
fcomps
mov
mov
fs
adc
inc
mov
movsl
rcl
mov
sbb
mov
jmp
xchg
les
and
aam
mov
sub
dec
ljmp
negl
mov
out
mov
out
lret
sbb
addl
insl
jb
iret
orl
stc
fsts
adc
mov
int3
test
test
xor
test
stos
jecxz
scas
jmp
sti
inc
or
jae
sbb
mov
cli
mov
aas
add
jne
icebp
mov
dec
push
add
fdivr
daa
outsl
arpl
mov
lahf
mov
test
in
lcall
insb
hlt
dec
out
sti
add
lock
sbb
lods
in
and
clc
xchg
icebp
xchg
and
in
movb
mov
add
inc
rcll
sbbl
mov
push
adc
lahf
sbb
xchg
sub
iretw
or
push
and
popa
xor
pop
lahf
fstps
cltd
xchg
sahf
push
mov
and
dec
cmp
pop
mov
mov
inc
out
fistps
iret
push
scas
add
inc
je
push
sti
lock
sbb
and
mov
xchg
es
fwait
sbb
loope
xor
out
adc
xor
enter
mov
jmp
dec
and
mov
mov
push
and
idivl
cmpsl
jb
mov
fldcw
enter
pop
add
mov
out
lcall
xor
hlt
addr16
jb
add
sbb
pop
cmp
push
dec
lock
and
xor
call
sub
jne
imul
xchg
ret
imul
lea
insb
std
enter
stos
jmp
jb
jo
mov
mov
adc
cmc
insl
adc
or
lock
fidivrl
sbb
fnstcw
mov
adc
faddp
sarl
pop
push
pop
fnstcw
dec
ror
cs
loopne
cmpsl
sbb
adc
stos
lahf
out
or
lods
mov
push
gs
mov
aam
and
jne,pn
cmp
insb
imul
dec
sub
pop
xor
mov
cmpsb
push
xchg
fwait
xor
movsl
movsl
inc
xchg
push
jnp
xchg
jmp
push
ror
dec
lock
jo
jb
aaa
sahf
mov
int
fs
sub
and
mov
es
push
pop
dec
fstp
push
dec
mov
push
push
enter
js
pop
js
sti
mov
je
stc
lds
mov
jno
adc
mov
sbb
adc
xchg
cmp
mov
lahf
jge
loop
lcall
out
jp
cli
or
or
xchg
xor
mov
mov
in
loop
shl
sub
movsl
out
fildl
testb
fwait
inc
mov
add
movsb
stos
add
stc
pop
and
sub
test
lcall
icebp
and
idivb
mov
jns
mov
xor
stc
dec
adc
lods
xchg
adc
cmp
mov
xchg
sahf
sahf
fmull
xor
sub
iret
push
decb
outsb
and
clc
sub
pop
adc
fwait
mov
mov
mov
or
pop
mov
ljmp
dec
lahf
xchg
pop
mov
mov
mov
lea
xchg
jp
insl
sbb
fmul
in
test
repnz
jmp
jg
inc
and
jb
rclb
test
jmp
repz
push
idivl
adc
call
lods
mov
rorb
lahf
int3
mov
sbb
mov
add
ja
arpl
push
push
loop
add
shll
pop
decb
cmpsb
xchg
jp
hlt
or
into
and
mov
cmp
adc
lods
stc
sub
dec
inc
mov
fs
stos
mov
mov
mov
cli
rolb
leave
int
cmpsb
daa
lock
sub
sub
rorl
jle
cltd
jmp
mov
adcl
fstl
iret
cltd
pushf
scas
mov
movsb
mov
js
in
adcb
mov
cmp
and
mov
mov
or
aad
pop
out
inc
rolb
repnz
mov
aad
jno
std
xlat
aam
inc
and
fadd
cmp
mov
and
ds
sub
xchg
imul
leave
mov
dec
fisttps
cld
xlat
mov
xlat
addb
mov
fisttps
jns
stc
mov
pop
xchg
inc
push
inc
pop
fistpl
lods
test
mov
enter
cmp
mov
xchg
cmpsl
inc
mov
sbb
negb
cmp
jbe
inc
mov
cmp
sub
decl
scas
insb
inc
out
sub
push
inc
pop
mov
pop
ret
les
sub
mov
ljmp
subb
shll
incl
stos
push
mov
cld
cli
idiv
mov
mov
lahf
je
out
lahf
out
rcll
cld
frstor
cmpsb
loope
pop
enter
xchg
js
aaa
jnp
stos
pushf
idivb
mov
inc
stc
loopne
jae
jl
mov
mov
xor
into
int3
out
cltd
mov
jae
or
data16
push
push
push
imul
in
and
rcr
mov
or
mov
xor
lds
and
and
xchg
jo
add
leave
ds
out
sbb
xchg
xchg
and
cltd
cmp
xor
iret
or
cltd
push
push
or
add
cmpsl
aad
jge
push
stc
inc
sbbb
in
xchg
xor
xchg
scas
hlt
mov
iret
enter
stos
add
call
add
xor
sub
and
mov
fs
jno
hlt
test
in
scas
xchg
pop
in
aas
lret
mov
idiv
pop
dec
mov
mov
loopne
mov
xchg
in
subl
mov
out
or
mov
pop
adc
add
add
mov
in
adc
enter
enter
jb
xchg
pop
and
movsl
das
imul
mov
pop
and
loope
out
xor
roll
les
pop
and
flds
xor
out
movl
pop
iret
jg
dec
push
cmpl
cmp
outsl
jno
je
cmpsb
rcrb
ret
mov
andb
dec
push
xrelease
lea
lods
in
mov
leave
repnz
add
insb
in
sbb
xor
sub
je
adc
pop
add
mov
std
add
flds
or
mov
lods
shrb
mov
dec
cmc
fldt
and
out
sub
scas
in
mov
xchg
nop
pop
pop
sahf
sbb
adc
push
ret
shlb
in
or
push
rolb
int3
or
pop
inc
xor
xor
je
pop
je
cmp
lret
ja
sub
test
idivl
or
aas
int
and
jns
lret
fdivr
sbb
dec
pop
call
jo
xchg
xor
xchg
clc
ret
fwait
mov
lret
mov
outsl
repz
test
mov
aas
push
xchg
mov
in
xchg
testb
xor
mov
mov
punpckhdq
scas
insl
lock
pop
inc
jo
mov
nop
push
ljmp
mov
jae
lock
jl
push
lock
sahf
and
mov
ja
cmp
leave
cs
push
xor
cwtl
sbb
add
in
mov
lahf
inc
pop
dec
and
out
dec
jg
mov
rclb
and
inc
test
mov
sub
enter
xchg
push
sub
out
xor
dec
push
xor
xor
adc
lret
rorl
xor
jnp
jmp
sbb
push
cmp
imul
mov
pop
mov
xchg
arpl
jle
std
jg
das
mov
movsb
mov
or
mov
cwtl
push
mov
mov
cmp
inc
lds
lea
and
and
push
mov
movsb
pop
ret
push
stos
and
fisubrl
or
jo
or
sbb
dec
outsl
fnstsw
sub
push
lods
sbb
adc
movsl
mov
int
push
stos
cmp
pop
xchg
pushf
jg
jge
xor
stc
add
jnp
push
enter
rcrl
fstps
jle
xchg
jbe
add
fisttpll
ss
and
imul
jge
insl
loopne
xchg
pushf
pop
lcall
jl
test
int3
xor
or
inc
cli
xlat
push
cmp
fisubs
pop
or
sti
jle
popa
lods
in
pop
jl
add
pusha
add
adc
jp
test
and
sub
pop
cmp
inc
inc
imul
out
aad
mov
dec
out
xchg
mov
pop
ljmp
ret
into
bound
dec
mov
push
cmp
aam
mov
push
dec
jnp
or
fstl
adc
pop
test
stos
adc
fdivrp
cmc
into
dec
dec
cmpsb
inc
outsl
sbb
pop
xlat
ljmp
and
push
bswap
add
adc
lahf
add
enter
call
stos
mov
mov
and
and
fdivl
add
out
cmp
jne
loopne
rcll
mov
ret
push
bound
sbb
pop
mul
ljmp
jns
mov
jo
sub
in
dec
mov
fcmovnu
sbb
mov
fdivrl
jl
xchg
ja
xchg
fwait
jbe
into
xor
movsl
adc
or
inc
jo
add
aad
jae
mov
scas
mov
shlb
cwtl
xchg
mov
scas
mov
push
insb
ret
mov
lods
outsb
adc
aaa
lret
das
xchg
pop
fsubs
cs
dec
in
fwait
sbb
inc
daa
data16
sub
sub
jmp
push
add
aaa
xor
mov
ror
mov
pop
lea
repnz
sub
dec
jo
mov
ljmp
adc
add
jae
mov
dec
add
repz
dec
inc
adc
sbb
negl
popl
xor
insb
fldl
pop
enter
xor
movsl
inc
push
xchg
lods
iret
add
fsts
lcall
sbb
mov
movb
in
ss
out
xchg
dec
or
out
add
or
lods
scas
fsubrs
cmp
lret
sbb
xlat
xlat
mov
imul
add
push
in
ret
xor
roll
jbe
test
sbb
fistpll
mov
add
jp
rcl
mov
out
cmp
rcr
add
nop
mov
dec
pushf
pop
pop
jg
dec
or
push
test
insl
ret
xchg
stc
sbb
pusha
xor
push
jg
fimuls
lock
cld
push
loope
notl
in
xor
inc
mov
fimuls
cmp
pop
loopne
aam
cli
sbb
in
cli
icebp
push
pop
push
addr16
pop
in
pop
mov
clc
pop
sbb
iret
adc
sub
clc
insl
adc
or
mov
popa
mov
repnz
xor
dec
mov
aam
out
push
mov
pop
sahf
jl
jle,pn
mov
pusha
sbb
dec
jg
rcrb
jp
mov
pop
inc
xor
stc
and
mov
jno
hlt
adc
sbb
xchg
ds
arpl
sub
in
in
dec
popf
dec
mov
popa
xchg
std
push
insb
xor
es
sarl
push
cmpsl
leave
xor
mov
jge
out
push
shlb
lret
aas
pop
psubw
sti
and
or
popa
xor
add
enter
idivl
icebp
push
or
jge
in
shlb
add
adc
cmc
imul
pop
repnz
mov
dec
and
sub
mov
stc
loop
inc
movsb
inc
imul
fcomps
mov
mov
mov
repnz
xor
mov
push
sub
cld
outsl
leave
inc
cmpsl
sti
stos
jmp
aaa
fs
inc
jbe
push
sbb
push
push
dec
mov
cltd
push
movsl
sub
push
imul
pushf
jg
add
sbb
inc
dec
xor
and
popa
mov
sub
int
inc
dec
inc
movsl
and
clc
push
jg
dec
mov
es
jmp
pop
mov
daa
rcrl
mov
fs
fistpll
outsl
mov
push
imul
das
mov
out
out
cmpsl
jbe
bound
xlat
call
mov
inc
pop
and
imul
lods
popf
inc
int3
pop
xchg
lea
iret
cmc
and
xchg
sbb
mov
sbb
pop
dec
mov
push
repz
mov
cmp
xchg
insl
imul
cmp
outsl
adc
aaa
inc
andl
enter
in
mov
int
jno
movsb
pop
outsb
inc
pop
mov
push
dec
push
pop
mov
mov
xor
enter
add
cld
or
adc
repz
dec
pop
call
dec
pop
push
inc
pop
aam
pushf
dec
push
xlat
ljmp
outsl
pop
mov
sub
push
and
sub
cli
add
jns
repnz
cli
ss
loopne
sbb
add
in
pop
stc
dec
jae
dec
inc
imul
sbb
or
xlat
push
jmp
loope
dec
xor
cmp
cmp
fdiv
mov
inc
sbb
xor
mov
in
pop
imul
push
cmp
pop
icebp
pop
clc
scas
mov
cmpsb
cli
dec
mov
and
ret
push
and
adc
mov
cmpsl
sbb
icebp
dec
mov
scas
adc
and
test
aad
mov
xor
mov
ja
cli
inc
and
cs
test
jge
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
push
dec
addr16
push
daa
cmp
sub
fcom
enter
call
cmpsl
mov
xlat
inc
out
ja
xchg
pop
arpl
cmp
sub
int3
out
mul
xchg
dec
inc
mov
ja
pop
sbb
or
mov
xlat
bound
negl
xlat
rol
dec
test
and
aaa
xor
jns
es
or
out
in
xchg
addl
push
add
jbe
push
push
inc
push
jae
arpl
cltd
aam
xlat
popa
out
cmc
ret
mov
cmpsb
or
inc
sub
jg
cvtps2pd
imul
cmp
xor
xlat
out
xlat
mov
and
cmpsb
arpl
das
jg
dec
in
pop
stc
mov
out
pop
jnp
jp
dec
mov
jge
mov
adc
mov
xor
xor
cmpl
dec
out
out
adc
sahf
test
loope
sbb
inc
jnp
xchg
push
jl
jecxz
pop
arpl
xchg
ret
push
adc
jbe
push
jbe
push
fwait
outsb
arpl
cmpsl
xchg
cmp
lds
int3
rep
cld
cmpsl
push
push
xchg
ss
data16
fwait
pop
jl
cmpsb
mov
out
inc
or
sbb
pop
add
out
sub
out
or
stos
insb
xlat
jl
dec
jecxz
notb
adc
mov
push
add
data16
inc
push
pop
push
jae
jp
mov
fisubrs
mov
xchg
repz
ret
inc
push
ja
addr16
inc
cs
out
cmpl
sti
cmpsl
aad
mov
lret
adc
add
push
and
gs
dec
xchg
scas
andl
in
jmp
jp
xor
push
pop
and
sub
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
shrl
jne
sub
int3
mov
into
mov
jl
ljmp
dec
mov
cmc
add
sub
push
adc
pop
test
aas
sarb
jns
cmp
inc
daa
pop
dec
aas
push
out
jle
ljmp
or
lods
jo
sbb
or
test
xor
or
incb
test
mov
mov
test
ficoml
mov
pop
xor
or
dec
or
aaa
xchg
dec
pop
daa
xor
lret
lret
jecxz
or
sub
stos
pop
mov
or
in
adc
or
mov
sarl
insl
aam
out
xchg
fs
xchg
xchg
jp
das
insb
sbb
cmpsb
add
popa
arpl
push
faddl
ljmp
stos
cmpb
movsl
shrb
push
inc
and
stc
fistpl
lock
fwait
inc
inc
aam
pop
movb
pop
jmp
shl
xchg
sub
aaa
xchg
shrb
ret
icebp
push
inc
imul
sbb
mov
mov
cmp
into
lahf
add
dec
fdivr
test
notb
notl
jge
lea
sub
jae
xchg
pushf
cmp
add
int3
pop
or
xchg
enter
cltd
or
xor
cmp
dec
cmpsl
std
sti
jbe
push
jp
xor
cmpsl
xchg
pop
arpl
dec
frstor
lret
out
ret
pop
cltd
and
mov
jecxz
addb
dec
push
mov
fidivs
xchg
mov
sbb
xchg
push
fsubrl
rcrb
push
and
xor
in
ja
test
aas
inc
jbe
push
cmp
fwait
test
xchg
movsb
cld
scas
movl
cmp
adc
loop
sub
sbb
mov
inc
xchg
push
cmpsb
dec
mov
pushf
out
inc
inc
mov
dec
out
imul
shll
movb
xchg
and
shll
sub
inc
and
subl
mov
pop
sub
in
mov
lcall
das
sbb
xchg
or
cmp
ret
push
pop
xchg
cmp
mov
xor
jecxz
cld
add
mov
jp
mov
jns
mov
and
or
outsb
cld
sbb
xchg
lea
cmpsl
test
jne
ficoml
mov
mov
out
and
xor
rep
rcrl
stc
in
fcoml
jbe
mov
adc
or
addl
mov
push
jno
dec
mov
mov
fildl
rcrl
fwait
push
and
inc
mov
push
subb
cmp
clc
sbb
out
out
into
sub
xchg
add
pop
add
xor
jmp
arpl
mov
push
jl
jle
lds
hlt
mov
add
or
mov
add
push
mov
push
shr
sub
lahf
pushf
pop
and
int3
das
xchg
dec
push
test
mov
or
mov
dec
xlat
int
push
popf
sahf
jecxz
fs
es
out
adc
inc
xchg
inc
xor
mov
rcrb
sarl
jo
out
and
sbb
mov
rdmsr
cmp
push
imul
sbb
out
iret
imul
aam
xchg
sub
adc
in
test
pop
stos
shrb
xchg
adc
pop
sub
pop
out
mov
mov
xchg
sbb
jmp
inc
aam
sbb
int
pop
ret
inc
adc
push
dec
nop
add
sbb
pop
cmp
or
cs
adc
inc
sahf
mov
or
cmc
adc
cmp
aam
jns
or
xchg
in
xorb
sbb
add
sbb
push
xchg
jns
inc
or
and
fcmovnu
lret
pushl
mov
into
stos
cld
ror
fs
outsl
pop
push
bound
mov
cwtl
pop
push
ret
fiaddl
adc
inc
in
adc
mov
rolb
sbb
xlat
xchg
jo
and
mov
xor
dec
sub
addr16
es
cmp
inc
xor
ret
stos
fcmovu
jns
adc
sbb
das
clc
out
jle
or
inc
dec
scas
push
pop
mov
shlb
shlb
iret
add
lcall
lret
dec
ja
jbe
jl
stos
push
push
inc
jp
adc
lea
sub
loop
fsubrs
dec
push
dec
pushf
aas
in
cmpsl
xor
cs
and
sub
pop
dec
and
in
clc
out
mov
jne
push
andl
testl
rcl
pushf
arpl
or
outsb
loop
scas
add
fistpl
push
mov
out
add
inc
sbb
popf
lret
addr16
jb
mov
jg
clc
stos
lods
setp
mov
daa
lret
mov
fmulp
outsb
jecxz
scas
xchg
pop
mov
sub
xchg
mov
cwtd
sti
out
or
repz
scas
inc
insl
imul
fstl
jge
push
and
mov
shrl
xchg
dec
imul
push
in
icebp
and
add
mov
fcmovb
push
scas
fcoms
xor
loop
or
pop
add
or
repz
iret
or
int3
sub
pop
addr16
ret
stos
or
mov
xor
jmp
out
adc
icebp
js
dec
negb
lret
xchg
add
mov
scas
xchg
cmp
mov
mov
jo
and
jle
adc
daa
rorl
rcrb
inc
jg
repz
mov
fistl
inc
mov
sti
jbe
add
loopne
into
out
loop
es
cs
ja
cmp
mov
push
push
lret
lcall
cwtl
in
notb
mov
dec
mov
je
cmp
dec
fmuls
gs
pushf
push
sti
sub
fldcw
aam
adcb
addb
pushf
fs
popa
in
lods
inc
add
aad
cmp
loope
pop
loop
addr16
lret
les
push
jecxz
lret
sbb
pop
jecxz
mov
pop
test
push
add
out
cld
mov
mov
xchg
add
xchg
mov
fs
jmp
jmp
add
hlt
jg
and
pop
addr16
in
fdivl
int3
add
es
int3
dec
imul
nop
jle,pt
sti
enter
dec
adc
pop
mov
adc
scas
inc
out
enter
inc
push
mov
fmuls
mov
pop
mov
sub
mov
xor
pushf
push
int
gs
xchg
lcall
push
sub
mov
out
pop
cmc
pop
into
pop
fiaddl
dec
out
mov
out
mov
call
sub
dec
mov
jno
scas
push
add
mov
add
or
cmpsb
pop
push
movq
fistpl
jmp
jmp
jae
push
push
xchg
jecxz
fnstsw
fbld
xchg
cmc
xchg
loopne
mov
jb
das
xchg
push
ss
sub
cld
aam
pop
mov
aaa
or
adc
push
jmp
or
push
in
mov
or
out
adc
rclb
ret
out
lock
cmp
shlb
inc
je
inc
ss
xor
jg
mov
iret
dec
mov
imul
sahf
outsl
push
mov
sarl
outsl
fistps
mov
test
xchg
sub
js
jle
les
sub
adc
mov
int
roll
mov
outsl
lods
dec
sub
xchg
push
loope
loop
lock
enter
pop
xor
push
idivl
out
mov
imul
cmp
lret
cltd
inc
test
dec
jne
in
push
add
popa
jnp
in
lret
mov
cmp
inc
xor
stos
pusha
mov
jecxz
mov
adc
ret
pop
int
xchg
nop
dec
out
pop
mov
rclb
icebp
push
leave
stos
and
iret
sbb
jge
xor
call
repz
xor
add
jecxz
inc
rorl
sbb
repz
xchg
add
adc
push
sahf
mov
mov
mov
add
inc
inc
push
daa
and
dec
mov
jno
out
mov
fstps
or
mov
adc
xchg
fwait
mov
pop
js
fcmovne
mov
ror
inc
fcomip
sub
inc
es
pop
mov
mov
aam
jge
mov
xchg
push
bound
test
and
cs
add
mov
and
hlt
or
enter
mov
lret
loop
pop
xchg
lret
cld
mov
or
enter
mov
cmc
inc
je
shlb
fcmovnu
ffreep
inc
lods
cltd
movsb
iret
in
or
xchg
xor
in
bound
jb
in
xor
ds
cmp
faddp
or
loop
inc
mov
pop
popf
push
popf
ja
fincstp
add
inc
cltd
or
daa
xchg
scas
sub
addb
mov
jecxz
jp
mov
push
repz
call
mov
xchg
std
push
or
fmull
stc
scas
stc
and
sub
pusha
out
dec
dec
jecxz
jnp
mov
jecxz
pop
mov
xor
push
int
sbb
sub
mov
cld
sub
ja
shrl
push
adc
inc
clc
out
pop
stos
stos
jno
mov
jno
test
pop
stos
test
enter
inc
cmp
mov
pop
int3
inc
data16
add
cmp
xor
cmp
cmp
mov
push
shlb
imul
call
inc
adc
test
aam
inc
inc
ss
xlat
pop
fs
adc
inc
push
movsb
jns
fistl
sbb
jbe
xchg
test
fprem
push
lods
mov
xchg
out
mov
mov
inc
and
and
sahf
out
imul
sbb
xlat
mov
rsm
ljmp
xchg
xchg
idivb
inc
pop
cmp
dec
and
and
cmpsb
outsl
inc
xor
push
gs
jmp
cmc
push
data16
subl
in
dec
push
xchg
and
in
add
jge
outsl
dec
dec
ss
push
out
lea
sbbb
and
mov
fucomip
xor
sub
loope
pop
aad
jno
mov
loopne
lret
aam
xlat
repnz
nop
jmp
adc
sti
and
dec
mov
lret
test
dec
leave
sti
pop
aaa
push
test
sbb
mov
adc
test
adc
rcll
jo
repnz
jb
subl
out
ficoms
jnp
push
dec
fs
stc
xchg
sub
gs
pinsrw
iret
in
or
push
popa
sub
inc
jns
in
lock
outsb
pop
and
jno
mov
or
pusha
lds
mov
lds
adc
int
aad
testl
dec
pusha
lods
clc
and
push
pop
cwtl
cmp
sub
jae
leave
movsl
test
sub
pop
andb
mov
push
fsts
stc
das
fbstp
xor
clc
push
int
pop
cmp
aas
leave
movsb
lcall
or
gs
gs
xchg
divl
gs
out
test
and
shlb
jo
test
cld
and
xchg
stos
in
jg
xchg
jge
icebp
push
jp
fwait
popa
cmp
jb
daa
int3
sub
ror
loop
adc
lds
lret
lret
mov
sub
push
rcrb
pop
or
fstp
imul
stc
sti
jmp
cmp
movsl
add
leave
stos
mov
push
icebp
ds
sub
xchg
loope
push
jecxz
in
xor
add
pop
fldl
rsqrtps
dec
xor
ds
and
cmp
bound
cli
sbb
xor
sub
mov
movsb
or
xchg
xchg
imull
sub
ret
into
fistpl
repz
das
in
adc
adcl
push
push
inc
inc
jnp
in
das
test
adc
and
out
and
xchg
pop
push
bound
scas
xchg
or
ret
pushf
nop
stc
lret
scas
jbe
xor
stos
imul
insb
sub
fidivrl
repnz
shrw
repz
jecxz
dec
ret
clc
push
sahf
data16
ret
fwait
xor
cs
clc
adcb
call
or
mov
push
cmp
clc
pop
push
stos
aam
sbb
and
xchg
dec
leave
lahf
loop
addr16
negl
into
iret
repz
mov
pop
ja
xor
js
xor
cld
xor
rdtsc
insb
stc
hlt
sub
test
inc
je
sar
stos
mov
dec
inc
cmp
and
scas
repnz
cmc
jns
pop
mov
rol
aaa
cmpsl
mov
jne
xchg
lds
xorl
data16
mov
inc
loope
xchg
xor
enter
jl
sbb
out
test
test
cmp
mov
gs
adc
ljmp
lock
adcl
mov
xchg
int
ror
xchg
xchg
in
lds
lahf
push
xlat
xorl
orb
ret
mov
xor
jae
mov
inc
sbbb
lds
inc
lret
lds
adc
inc
sub
icebp
std
add
push
jp
cmp
sbb
mov
icebp
aad
hlt
mulb
jmp
pop
mov
push
imul
jle
int
nop
pop
lea
mov
lahf
sbb
mov
movsl
mov
insb
sbb
sbb
dec
push
data16
jg
adc
out
dec
dec
mov
xor
repnz
xchg
xlat
cmp
cmp
movsb
mov
jno
insl
xchg
xchg
inc
mov
or
loop
insl
cmp
pop
mov
pushf
mov
in
rcr
enter
jl
cmp
jmp
cmc
xchg
dec
push
adc
mov
adc
sub
dec
mov
and
in
pop
mov
push
jnp
pushf
cmp
jge
xlat
push
loop
lea
cmpsb
sub
sbb
xchg
inc
push
xchg
sub
gs
dec
fcoml
dec
rcll
data16
imul
out
scas
mov
mov
jmp
stc
shld
stc
cmc
mov
stc
hlt
and
imul
cmp
cmp
xchg
imul
push
and
mov
movsl
inc
in
mov
int3
mov
inc
or
and
sbb
inc
adcl
mov
mov
arpl
shlb
xchg
iret
ret
nop
ja
mov
sub
add
pop
cli
dec
sti
inc
repnz
cmpsb
sub
mov
lock
cmp
clc
mov
out
aad
cmp
stos
shr
in
rorb
fs
test
fidivrs
pop
movl
push
mov
sti
mov
loope
mov
jle
lahf
je
jns
mov
cltd
je
repnz
fiaddl
add
mov
sbb
ret
cmp
mov
scas
and
mov
shlb
out
insb
in
int3
sahf
icebp
pop
cmp
insb
or
inc
and
pop
lahf
xchg
jns
mov
push
inc
clc
idivl
adc
mov
fs
stc
inc
test
dec
sbb
scas
dec
hlt
fwait
cli
sarb
loopne
mov
cmp
dec
cld
or
push
pop
jno
lcall
shll
inc
adc
add
das
lea
test
inc
mov
dec
imul
test
in
mov
sub
pop
mov
gs
je
filds
ljmp
jge
mov
adc
cmp
int3
and
push
pusha
or
cli
cmpsl
mov
jp
ret
pop
add
cmpsb
outsb
or
outsl
popf
fwait
cmp
insb
sub
popf
cmp
mov
xchg
push
loope
les
inc
int
mov
jl
scas
mov
xchg
js
outsl
cli
mov
arpl
sub
mov
shll
push
jne
xchg
lea
ljmp
xor
out
inc
and
mov
in
xor
aas
jmp
push
and
mov
negl
loop
or
test
mov
pusha
xchg
cmc
dec
lret
jae
dec
push
pop
dec
inc
xchg
dec
bound
cmp
push
test
test
xor
js
mov
scas
insl
sub
dec
pop
addr16
pop
outsl
movsl
sbb
pop
sahf
sbb
xchg
xlat
cs
fs
mov
fdivrp
repz
fs
xor
inc
jb
pop
leave
les
xor
cmp
cwtl
push
xor
shlb
pop
outsl
popf
inc
ja
pop
movsb
cwtl
jb
vcmpps
loop
xorb
out
adc
xor
push
mov
add
aam
cmp
jae
adc
iret
adc
dec
dec
in
push
ffreep
repnz
dec
popa
fsubrl
inc
outsl
inc
inc
sahf
and
shr
push
in
mov
setns
aam
or
jl
adc
fldt
pop
jbe
pop
dec
xchg
push
in
mov
mov
orb
jle
inc
adc
pop
inc
frstor
or
jne
repnz
mov
push
lea
or
int
mov
out
xchg
cmp
mov
shlb
xlat
inc
inc
adc
fwait
xchg
pop
nop
mov
xchg
pop
fdivl
imul
mov
dec
arpl
in
sbb
fdivr
loopne
imul
add
adc
in
das
ds
cltd
pop
and
dec
fldz
jecxz
loopne
adc
xchg
ficoms
test
lods
adc
mov
push
in
sub
daa
mov
xor
sbb
test
rclb
sbb
and
cmpsl
sbb
lret
mov
shll
andb
aad
cmpb
in
fdivrp
out
sub
imul
dec
sub
fmul
push
mov
or
or
dec
mov
es
adc
lret
inc
pusha
mov
or
and
inc
sbb
add
jge
enter
mov
rorl
mov
mov
or
fsubs
ljmp
or
int
in
cltd
cli
popf
mov
dec
aas
and
call
shrl
inc
fwait
xchg
ljmp
fs
pusha
dec
rol
stos
ret
lods
dec
mov
jb
out
mov
ret
shll
hlt
cwtl
loop
insl
leave
xchg
push
cmp
fidivrl
mov
fimuls
pop
xchg
rcl
pop
xlat
xor
jg
scas
pop
push
dec
jns
out
scas
xchg
fimuls
inc
and
and
lock
jae
or
daa
addr16
and
mov
aad
pop
cmp
addb
dec
in
popf
xchg
pushf
xor
sub
shlb
fwait
inc
bound
inc
ss
mov
arpl
das
mov
aas
icebp
fld
jb
insl
jmp
in
sbb
cmp
in
cmc
enter
mov
loopne
jl
and
jp
sbb
mov
shr
cmp
xchg
call
mov
scas
rdmsr
test
das
cmp
cli
push
mov
sub
mov
push
std
dec
cmp
movsb
mov
dec
mov
loope
into
insb
into
insb
or
out
fimull
es
loope
jp
lods
mov
add
fisttpl
nop
jmp
test
jnp
pushf
lds
aad
mov
mov
cli
fnsave
out
stos
xor
lods
andl
aaa
test
xor
mov
jge
jge
mov
ss
or
xor
inc
dec
shll
test
pop
ljmp
mov
add
cmp
jp
mov
or
loop
loop
into
add
scas
and
aam
es
jne
repz
andl
stos
inc
push
popa
cltd
add
jb
push
inc
xchg
add
xor
sarb
jb
add
subb
or
insl
idiv
mov
gs
jo
lds
adcb
in
stos
or
outsl
inc
roll
outsb
movb
cmpsb
popw
mov
sarl
loope
pop
test
and
xchg
push
loop
xor
lock
popf
out
mov
cmp
ljmp
popf
into
sbb
mov
and
out
xchg
xchg
sub
std
jge
mov
mov
mov
mov
js
pop
jmp
push
nop
arpl
jns
ss
stos
in
mov
sti
loopne
loop
leave
fstpt
sti
sti
out
loope
push
adc
stos
test
movb
dec
lds
test
adc
daa
inc
add
pop
das
cmpsl
stos
je
jo
push
push
mov
xchg
push
int3
dec
fs
daa
fisubrl
mov
mov
out
bnd
sub
jno
dec
aad
pop
popa
notl
dec
jl
mov
pop
int3
enter
mov
int
in
stc
mov
out
in
fisubrs
loope
in
fst
sbb
popf
push
jp
jnp
jmp
lahf
or
push
pop
push
std
cmp
jne
xor
xor
and
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
adc
inc
xor
push
push
inc
push
jae
arpl
xchg
add
mulb
xchg
mov
cmpsb
daa
push
aaa
inc
add
push
inc
push
repz
insb
jl
sbb
mov
jns
dec
sbb
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
bound
push
dec
and
adc
insb
pop
adc
pop
xchg
clc
mov
mov
repnz
or
jb
inc
xor
and
bound
jb
shl
xchg
repnz
mov
ret
mov
xor
fsubs
jb
inc
hlt
push
push
and
xor
mov
and
rol
cmpsl
sarl
out
in
xor
adc
leave
cwtl
pop
frstor
jno
mov
xchg
push
lods
cltd
cmp
cmpsl
jge
push
push
bound
sbb
mov
mov
push
repnz
or
inc
mov
jmp
push
jb
mov
nop
mov
lret
cld
push
ret
repz
les
pop
pop
mov
shrd
out
push
pop
push
addr16
and
repnz
push
rorl
mov
push
div
or
fnstsw
rcr
es
cmp
inc
sbb
mov
xor
shlb
xchg
adc
xchg
pop
iret
insl
stos
mov
jp
push
mov
mov
loop
and
xor
jb
inc
pop
push
inc
and
xor
lret
loop
bnd
lods
shlb
adcb
add
gs
inc
jno
adc
xchg
shr
repnz
shll
xchg
lock
add
lcall
popa
xor
push
add
xchg
add
fiadds
xchg
out
jo
and
push
daa
jae
pop
adc
bound
jb
and
repnz
mov
repnz
add
jb
inc
xor
and
bound
jb
and
repnz
mov
repnz
add
pop
mov
cmp
test
and
test
inc
mov
push
imul
sbb
push
mov
movsb
add
test
out
or
sub
testb
and
out
bound
pop
pop
mov
xchg
outsl
xchg
out
imul
das
add
mov
mov
hlt
mov
inc
add
int3
jmp
dec
mov
xchg
sbb
int3
dec
movsb
pop
dec
rclb
xchg
inc
mov
bound
inc
xchg
inc
js
xchg
sub
and
pop
inc
imul
mov
aas
ret
sub
cmp
jmp
mov
jle
shrl
sar
stos
pop
mov
cmp
ljmp
test
jge
pop
cmp
mov
sbb
loopne
in
xchg
fdivrl
pop
xchg
sbb
arpl
sub
jae
cmp
iret
adc
fisttpl
cmp
mov
dec
lods
sar
push
ja
iret
cmpsl
xor
or
pusha
test
test
ja
insl
mov
or
xchg
or
xchg
cs
or
xor
or
sbb
fldcw
daa
adc
adc
mov
adc
stc
call
add
loope
loopne
jae
fimuls
and
pop
fadd
mov
xor
aam
jns
push
les
mov
inc
pmulhuw
shlb
push
push
test
mov
es
sbb
lret
and
push
lods
jmp
lds
fnstcw
popa
enter
inc
loope
pop
scas
lahf
lret
je
cs
je
mov
cs
jne
popa
int
pop
xchg
out
shlb
add
je
cmp
push
adc
lea
cmp
int3
iret
sbb
cmp
mov
sbb
scas
movsb
inc
lods
and
and
adc
mov
or
adc
sub
sub
in
out
dec
cmpsb
xchg
outsb
cmpsl
push
icebp
mov
sub
mov
add
sbb
aad
xlat
les
mov
icebp
out
add
test
aas
mov
mov
inc
push
repz
xchg
outsl
xor
pop
pop
loop
loop
sbb
in
adc
dec
adc
pop
push
in
sub
pop
adc
out
cmc
and
shlb
loope
xchg
loope
and
scas
sbb
in
sar
fcomip
mov
jb
movq
lock
jnp
sahf
mov
push
adc
hlt
add
adc
mov
mov
shr
sar
divb
lds
jb
arpl
loope
jge
mov
icebp
sbb
cmp
stos
mov
into
rcr
sub
inc
cli
dec
stos
icebp
out
ljmp
je
adc
add
daa
sarl
xchg
or
insb
cmp
out
scas
loope
and
addr16
mov
mov
cli
ds
push
lock
scas
mov
cli
bound
test
leave
pop
add
sub
lds
jne
push
fstl
cmpl
jp
imul
and
dec
or
sbb
ja
stos
or
lret
gs
push
test
dec
xor
sbb
inc
pop
pusha
xor
jecxz
mov
and
je
mov
imulb
or
push
push
popf
daa
stos
mov
divl
inc
mov
icebp
cmc
lret
cmp
loope
or
popf
mov
pop
and
rorb
or
xchg
pop
xor
stos
insl
fstpt
jp
pop
les
insb
inc
push
cwtl
push
test
xchg
inc
push
arpl
clc
jb
notl
les
cmp
inc
push
dec
out
xor
cmovnp
int3
pop
and
dec
inc
jge
pushf
outsl
cmpsb
pop
jae
push
xlat
call
inc
adc
or
call
mov
mov
sub
mov
testb
movsb
or
clc
fisubrl
inc
gs
mov
xor
inc
adc
popa
push
test
xor
stos
mov
mov
lock
push
mov
push
lea
ret
jns
jmp
sub
int
xor
xor
or
orl
add
lret
out
rorb
add
mov
aam
cmp
iret
andl
xor
idivb
les
adc
into
lods
cmp
jns
cmp
les
fs
mov
add
aad
mov
push
adcl
cmp
fwait
mov
lret
add
fisubl
cld
xorl
jbe
xchg
inc
xchg
mov
push
out
xchg
mov
scas
inc
sbb
bound
fs
lahf
add
out
out
sbb
push
adc
cmpsl
lcall
adc
aam
cli
dec
out
fistl
test
and
jp
je
imul
outsl
push
pop
pop
and
jmp
fwait
aaa
mov
call
xor
add
push
pop
test
andl
shrb
aaa
iret
sub
mov
push
adc
in
stos
cmpsb
pop
aaa
xor
xchg
inc
icebp
cs
mov
movsb
mov
std
test
xchg
mov
outsb
cmpsb
hlt
jae
and
push
mov
xchg
dec
in
or
xlat
xchg
stos
scas
jmp
shll
andb
lods
jns
arpl
adc
fbstp
imul
lods
popf
push
mov
movsl
outsb
aam
cli
mov
inc
mov
or
mov
push
cmc
xchg
into
jl
leave
add
int
jl
fbld
jge
stos
mov
es
adc
mov
pushf
int
xchg
pop
mov
fcmovnu
mov
mov
push
or
icebp
adc
aad
cmp
sub
sub
xchg
loopne
roll
or
mov
mov
push
mov
cmp
mov
push
and
push
bound
std
lea
fdivrl
or
xorb
insl
mov
dec
lods
xlat
std
jle
in
xchg
mov
enter
jns
pop
lret
lea
orl
push
pop
daa
inc
and
sub
mov
fs
xchg
add
push
arpl
cwtl
loop
inc
jns
adc
stos
inc
push
xchg
nop
in
cmp
rcll
jl
cmp
iret
push
add
inc
rclb
ss
xchg
fnop
outsl
cld
iret
hlt
int3
cmpsb
std
or
popf
inc
rcll
mov
rcrl
mov
nop
xchg
fwait
mov
lahf
add
and
push
popf
out
push
mov
imul
int
inc
mov
in
jb
xchg
cmc
out
or
addl
xchg
lods
sbb
in
push
dec
inc
or
int
das
loopne
rcll
repz
pop
fdivp
jno
fildl
outsl
cwtl
xchg
push
xlat
jmp
add
mov
cmp
sub
add
std
cwtl
dec
mov
mov
add
leave
insb
out
xchg
rcrl
push
mov
mov
int
pop
aaa
inc
add
inc
xlat
dec
lods
mov
dec
add
and
push
imul
mov
ja
dec
and
jle
fildll
cmpsl
lds
mov
push
iret
push
and
jno
adc
and
push
lahf
cld
jo
jno
xchg
dec
mov
fstps
mov
mov
pop
iret
int
fildl
xchg
scas
add
mov
add
icebp
xchg
stc
lret
out
sub
sub
mov
fnsave
xor
push
dec
sub
repz
flds
sub
sbb
cwtl
or
push
pop
out
add
mov
shrb
and
xor
or
dec
inc
inc
pop
push
mov
cmp
roll
pop
int3
stos
jg
or
std
aaa
inc
inc
jae
sarl
pusha
movl
lret
pop
pop
xchg
pop
sarb
gs
mov
movsl
loop
repz
cli
das
xchg
pop
test
xlat
int
sbb
push
pop
adc
jle
mov
xchg
mov
mov
and
arpl
cmp
nop
mov
inc
mov
mov
std
push
mov
or
stos
pop
add
lcall
lcall
cmp
fidivrl
xor
test
aas
adc
iret
or
call
aas
adc
push
mov
add
mov
in
xor
mov
sub
leave
jno
cltd
add
mov
inc
ja
stc
push
subl
and
js
stos
inc
js
add
and
mov
mov
int
xchg
cmp
stos
aaa
jmp
stc
xor
lds
push
xor
mov
addr16
ss
loopne
rcr
rol
mov
adc
insb
aas
dec
push
mov
cmc
mov
or
and
pop
mov
cli
cmp
or
or
mov
sbb
sub
fmul
into
loope
pop
mov
in
call
cmp
mov
rorb
pop
bound
add
dec
loope
push
stos
pop
or
shr
out
lods
pusha
outsl
movsb
add
shll
xor
das
mov
jne
rol
cmp
icebp
mov
iret
test
rclb
pop
in
call
mov
ss
mov
pop
bound
xchg
xor
inc
addr16
out
or
fldt
and
adc
shrb
sbb
mov
xchg
js
jge
ret
xor
lods
xchg
sbb
mov
in
inc
stc
mov
pop
divl
inc
pop
xor
push
jne
nop
fiaddl
in
push
and
mov
mov
inc
popa
dec
mov
xchg
data16
mov
and
into
jb
sbb
xlat
sub
scas
mov
xchg
sbb
xchg
push
data16
jbe
xchg
dec
cmp
imul
bound
outsb
loop
cmpsl
mov
adc
xchg
popf
adc
int
shlb
mov
mov
mov
out
pop
jge
lds
add
shl
mov
call
push
mov
mov
in
push
cld
jg
cmpsl
lret
pop
sbb
shrb
and
repnz
adc
xor
pop
push
push
pop
leave
adc
stc
mov
jmp
dec
fucomip
mov
jecxz
pusha
cmpsb
lcall
xor
insb
dec
mov
xchg
cmpsb
add
aas
pop
mov
ret
int
xor
cwtl
cmpsl
cmp
fcompl
dec
jge
jecxz
cmpl
adc
xchg
sbb
xor
addr16
inc
idivb
movsb
loop
xchg
or
lahf
lahf
jmp
xchg
sub
ds
dec
lods
scas
jb
out
jp
dec
js
repz
sub
jo
jo
es
jle
cmpsb
adc
sub
scas
cmp
fsubl
inc
dec
std
ffreep
and
xchg
jno
sub
xor
aaa
fistl
pushf
ss
mov
std
out
movsb
xor
mov
fcompl
jns
test
stc
cli
je
xchg
insl
mov
adc
adc
stos
sbb
in
push
adc
cmp
push
pusha
or
mov
shlb
jno
dec
add
mov
lock
fstp
movsb
cwtl
out
frstor
in
mov
pop
aaa
pop
addr16
and
rcrl
jge
fmul
push
add
lret
inc
sbb
adc
and
movl
cltd
or
cmpl
sub
scas
sub
dec
es
ret
rcr
scas
daa
sbb
mov
push
test
pop
int3
cmpb
mov
stc
push
daa
or
mov
aad
mov
sbb
ds
in
jge
mul
push
pop
bound
adc
inc
fcomps
or
in
fidivs
xorl
inc
jl
jae
divl
mov
ljmp
rolb
adc
cwtl
fstpl
xchg
mov
das
rcl
arpl
outsl
jae
movsb
out
loop
scas
dec
je
js
mov
insb
xlat
xlat
stos
inc
pop
fbld
je
push
mov
xchg
rolb
cmpsb
mov
sub
cli
cmpsb
idivb
fisubl
mov
sbb
xchg
repz
sbb
xor
and
and
nop
ss
popa
in
mov
mov
adc
out
add
mov
out
sub
les
sbb
sbb
pushf
loop
xchg
rcrb
stos
add
daa
je
push
lahf
scas
loop
insl
sbb
es
je
popa
or
and
das
sub
inc
mov
ljmp
rcll
mov
pop
pop
pop
dec
roll
repnz
jo
clc
jmp
xchg
sarb
repz
stos
rolb
ss
lahf
das
mov
adc
pop
push
mov
adc
push
ret
jle
jo
fwait
cmp
fdivrl
mov
hlt
add
mov
push
icebp
inc
out
xchg
mov
xchg
mov
pop
pusha
insl
pop
pop
pop
pop
test
dec
adc
fs
aad
je
test
jecxz
cmp
scas
mov
push
mov
push
bound
and
xor
mov
and
shll
fnstsw
dec
push
sub
je
ret
push
jl
popa
je
scas
xor
dec
cli
cli
push
ss
or
sub
sbb
mov
cmp
fisttps
xchg
scas
int
xchg
ljmp
push
les
adc
mov
pop
inc
fnstenv
cmpb
popl
inc
push
lahf
adc
movsb
out
xor
push
push
jns
and
or
mov
sub
add
popf
cmp
test
cli
push
adc
ret
hlt
fidivs
mov
popfw
fsubs
nop
and
dec
mov
pop
dec
xchg
fidivs
jmp
or
dec
add
adc
out
adc
inc
adc
in
jne,pt
sub
mov
outsb
mov
fimuls
sti
and
sub
dec
mov
ret
insl
mov
aaa
jo
lods
pop
dec
imul
fstps
jmp
jae
repnz
add
andl
mov
or
int3
cmp
inc
cli
out
sbb
negb
jbe
xor
mov
push
int
leave
stos
mov
pop
push
ja
sub
fistpl
pushf
movaps
sbb
jl
dec
or
or
or
fistl
pop
pop
into
test
jge
test
arpl
test
jmp
adc
lods
sub
pop
popf
lcall
pusha
inc
xlat
jmp
cmp
cmp
lods
sub
push
adc
fsubl
push
in
notb
mov
jecxz
adc
add
cmp
adc
adc
sahf
roll
bound
dec
sub
cwtl
xchg
es
pop
cmp
ss
mov
pop
fisttpll
fnstenv
gs
mov
cld
adc
iret
jo
xor
jp
prefetcht2
push
push
dec
xchg
xor
aad
mov
imul
dec
aam
add
xlat
push
mov
out
dec
jnp
add
push
imul
adc
dec
mov
push
ficompl
mov
mov
loop
fdivs
inc
dec
mov
sbb
xchg
sub
cmp
inc
sbb
arpl
scas
stos
mov
xchg
arpl
pop
xor
jmp
jbe
movsl
ret
sub
loopne
ficoms
push
test
stos
mov
imul
fwait
ret
sbb
call
into
mov
in
fsub
add
sahf
call
xor
and
jge
sub
lds
cmc
movsl
loop
out
sub
popa
lret
push
sub
negl
mov
push
inc
frstor
ror
xor
int3
mov
cltd
mov
cmpsl
mov
pushf
xchg
xor
dec
aas
shll
test
push
adc
fistl
pop
lods
shlb
scas
cmp
or
inc
pop
dec
insl
push
rclb
mov
call
xor
and
pop
dec
shlb
push
push
pusha
xor
addr16
scas
cmc
sbb
push
stos
add
jge
movsl
mov
sub
xor
mov
xchg
mov
test
lcall
adc
mov
ds
push
movb
ljmp
adc
rolb
adc
add
mov
dec
scas
in
inc
das
mov
sti
popa
sbb
aam
pushf
pop
adc
jg
jle
std
in
mov
jae
shrb
or
jno
add
adc
cmp
or
shlb
ret
sbb
aaa
mov
jae
jge
pop
ss
movsb
pop
pop
and
sub
les
sub
cmp
mov
lods
push
cmp
rcll
aam
push
es
fidivl
stc
notl
ss
cmp
xor
cmp
das
out
aaa
xchg
cmpsb
xchg
fdiv
ds
cs
out
inc
mov
sub
inc
enter
fildll
jno
sbb
loope
xor
xlat
cltd
xor
lret
imul
popa
and
inc
mov
lds
lds
push
nop
mov
push
das
cmp
sub
or
pop
jae
push
cmp
and
dec
pop
mov
xor
out
je
pop
xor
cmpsl
rcr
xor
data16
pop
mov
mov
jb
xchg
push
mov
lods
outsl
lahf
sub
add
dec
std
sbb
cmp
jp
movsb
jmp
jle
in
mov
adcl
scas
or
pushf
jne
insb
clc
lea
outsb
jg
xchg
stc
xchg
adc
mov
jbe
aaa
ret
arpl
movsl
aam
adc
mov
jne
repnz
mulb
jne
outsl
lods
mov
loope
aas
jo
out
or
dec
pushf
xlat
je
cmp
mov
adc
addr16
pop
ds
movsb
xchg
cmpsb
pusha
mov
clc
add
mov
add
popf
cmp
mov
cmp
add
sbb
xchg
push
in
testb
sub
xlat
jb
sub
jecxz
xchg
push
fistpll
scas
sub
adc
fdivrs
cli
popa
and
mov
jecxz
enter
fdivrs
fisubs
icebp
jg
mov
popf
fidivl
hlt
cmp
repnz
mov
fimuls
fs
aas
lahf
lret
pop
fs
movsl
xchg
mov
in
jno
xchg
scas
xchg
addl
push
mov
es
dec
cmp
movsl
jp
mov
mov
outsl
ret
inc
mov
filds
pop
pop
into
jo
sbb
ja
mov
inc
imul
mov
xchg
xor
cmpsl
shlb
dec
leave
outsb
pop
lret
into
scas
scas
lods
test
imul
cmpsl
fs
and
fdivrp
mov
test
and
lret
sub
call
roll
cmp
add
add
mov
xor
jle
subb
pushf
fwait
jmp
add
in
and
outsl
adc
dec
bound
xchg
aad
call
cltd
and
popa
movb
popl
push
push
mov
add
lahf
pop
shll
stc
fwait
lods
fsubrs
sahf
or
mov
nop
add
dec
or
mov
sbb
xor
adc
repnz
shlb
fisubl
adc
or
adc
sub
pop
pusha
sarb
mov
loope
or
fwait
out
pop
pop
call
test
cmp
jmp
imul
pop
roll
mov
or
lds
int
xchg
sub
or
jle
sbb
in
xchg
inc
mov
aad
cmp
and
jns
mov
pop
cmp
dec
jbe
and
sub
and
jle
ss
push
push
pop
dec
js
xlat
cmpsl
push
fildl
dec
cmp
sahf
xor
aas
and
leave
mov
sub
mov
mov
mov
and
sahf
dec
ret
adc
shrl
out
dec
pop
sub
addr16
ja
mov
xor
popa
popf
int
sbb
xchg
sub
shlb
shrl
mov
add
or
sub
push
xchg
sub
adc
add
push
cmc
lea
mov
icebp
jbe
jl
loope
sbb
scas
rolb
or
shl
jno
icebp
xchg
adc
out
dec
push
daa
repnz
sti
xor
xor
cli
outsb
gs
andb
std
mov
loopne
push
out
sub
mov
inc
mov
xor
xchg
or
sti
cmpsb
inc
test
and
lahf
sbb
out
popa
sahf
xor
push
mov
mov
mov
inc
push
sub
mov
cmp
jo
inc
ret
enter
add
fwait
ja
inc
inc
fsubrp
push
sti
incl
test
mov
xor
push
push
ret
in
mov
addr16
push
out
pop
inc
shlb
pop
addr16
pop
mov
les
mov
into
cmp
mov
fcoml
jecxz
cmp
cmp
jns
cmp
sbb
movl
fs
loopne
cltd
dec
xchg
fcomps
test
rcl
cmp
mov
sbb
imul
cmp
in
mov
jb
inc
cs
inc
and
bound
jb
and
repnz
mov
repnz
add
jb
inc
xor
and
bound
jb
and
repnz
mov
repnz
add
jb
inc
xor
and
bound
jae
xchg
xchg
repnz
ret
ret
mov
add
sbb
jb
inc
sbb
and
bound
repnz
ret
mov
pop
dec
sbb
shrb
rcrb
or
shrb
in
cmp
mov
fwait
mov
adc
and
shrb
rcrb
or
jp
push
pop
mov
aam
pop
stos
inc
sti
jo
pusha
cli
ljmp
leave
sub
sbb
or
jp
push
pop
test
mov
sti
or
adc
cli
inc
movsl
dec
dec
pushf
sub
icebp
pop
dec
inc
mov
mov
arpl
call
inc
pop
outsl
shlb
mov
loopne
jae
dec
aas
pop
iret
scas
push
mov
pop
jo
pop
rol
xor
mov
ret
imul
cmpl
mov
sbb
inc
mov
mov
std
mov
aas
cmp
out
jp
inc
nop
mov
mov
mov
sbb
test
iret
shlb
push
aad
dec
nopl
mov
fistpll
test
arpl
mov
or
and
inc
cmp
popl
lahf
mov
ljmp
sub
sbb
or
jp
push
pop
mov
mov
lcall
sbb
sub
and
outsb
mov
xchg
inc
test
xchg
psraw
aas
sbb
je
add
mov
mov
test
pop
nop
push
into
pop
les
xchg
call
adc
cltd
add
rolb
jns
sub
pop
mov
mov
lcall
add
xor
and
shrb
rcrb
or
jp
push
pop
mov
mov
lcall
add
xor
and
shrb
rcll
sbb
sub
mov
sbb
aaa
sti
loope
ret
les
add
jno
test
mov
and
jge
cmp
ror
sti
push
call
loop,pt
xchg
clc
lret
fists
pop
pop
cltd
inc
mov
xor
jg
add
repnz
idivb
pop
sbb
addr16
sub
fdivrs
jb
fbstp
adc
loop
push
adc
stos
dec
hlt
xlat
mov
les
test
and
push
dec
int
sbb
shrl
xor
mov
rol
push
xor
pop
mov
out
jbe
dec
inc
jnp
cmpsl
add
mov
jnp
and
outsl
mov
pmulhw
lret
sub
cmpsl
mov
fwait
xchg
mov
and
dec
adc
add
inc
push
clc
sti
out
xor
jecxz
out
cmp
repz
pop
jp
jo
mov
lcall
notl
shll
sub
inc
sub
pop
cs
cmp
lds
mov
lret
dec
mov
ja
shl
jmp
inc
xchg
popa
xchg
pop
xor
cmpsb
xchg
sbb
dec
cmc
sbb
dec
push
dec
jne
lcall
xor
iret
mov
and
loop
adc
aad
clc
sub
mov
add
mov
and
add
mov
cmpsb
xchg
push
mov
movsl
out
in
into
test
addr16
push
imul
daa
mov
stos
mov
pop
mov
inc
adc
mov
xchg
rorl
xchg
cld
pushf
shrl
adc
jbe
xchg
movsb
push
into
jnp
fsubrp
pop
cmpsl
mov
pop
rep
std
sub
inc
sub
shrl
mov
cmpsl
mov
push
adc
jo
ja
outsl
lock
mov
lds
mov
inc
cmp
mov
mov
dec
xchg
cs
enter
sub
xor
fstpt
test
jecxz
xchg
cmp
sub
cmpsb
mov
xor
js
aad
gs
pop
fnsave
es
cmpsb
cmpsb
push
cmp
sub
movsl
loope
jo
repnz
adc
pop
xchg
mov
sub
imul
inc
xor
fadds
divl
mov
pop
or
jne
jno
inc
in
push
inc
mov
xchg
stos
sbbl
push
pop
jo
cmpsl
lret
and
fisubrl
push
rol
inc
sub
mov
mov
movsb
mov
and
cmp
xchg
fsubs
lods
sbb
loop
mov
pop
jns
outsb
stos
sub
mov
push
pop
adc
in
lcall
add
pop
sbb
add
mov
loopne
aam
out
in
outsl
test
jno
aam
mov
rorl
jno
cld
out
cwtl
dec
test
sub
rcrl
mov
add
jb
rolb
int3
out
jp
jb
test
cmp
mov
adc
rclb
gs
mov
mov
aam
xchg
ja
fisubrl
xchg
lock
mov
adc
leave
lret
fildll
jg
imul
sub
xchg
lock
imul
pop
ss
xchg
loop
loop
sub
cmpsl
dec
mov
jnp
push
ljmp
jbe
inc
fdivr
dec
popa
jle
daa
xchg
ret
add
ret
inc
mov
cs
pop
jge
out
cmp
xor
mov
dec
inc
daa
test
push
das
push
mov
clc
dec
xchg
repz
insb
xchg
movsl
rcl
mov
jne
xor
pop
stos
imul
fildl
cld
or
inc
fisubrs
pop
cmovp
out
push
sbbb
movsl
dec
sbb
fidivs
fbstp
jae
xlat
dec
jnp
xor
jmp
dec
sbb
inc
test
mov
jmp
or
ja
pop
fwait
aaa
add
and
push
es
lahf
dec
rcll
popf
cltd
cli
add
or
or
or
mov
xchg
aad
jecxz
fisttpl
adcb
push
mov
in
push
arpl
and
dec
mov
mov
mov
stc
mov
dec
sub
enter
xor
inc
pushf
mov
xor
or
mov
dec
jmp
enter
mov
std
xchg
add
scas
sub
mov
loopne
in
add
test
adc
jno
push
shlb
mov
es
and
sub
enter
or
pop
je
aam
or
sbb
push
lahf
int
ret
mov
stos
mov
cmp
jl
push
xor
inc
sub
rolb
fwait
cmp
mov
xchg
std
sub
sub
cmp
aaa
dec
mov
lret
shll
cmpsl
gs
test
sarb
push
jmp
aas
enter
outsl
mov
aaa
pop
cmpl
popf
aam
iret
or
cltd
and
bound
push
in
ficoml
push
daa
int
movsl
jmp
aam
mov
pushf
push
stos
flds
inc
jmp
push
adc
repnz
inc
push
test
sbb
xchg
cwtl
jp
mov
and
sbb
je
mov
popf
cltd
ss
pop
dec
push
push
mov
pop
icebp
dec
jb
pop
lcall
movsl
or
add
inc
pop
bound
inc
and
rolb
sbb
add
out
in
push
ds
sub
xchg
lock
add
iret
js
insl
mov
aas
jp
add
scas
xchg
mov
inc
mov
imul
jbe
jl
in
push
andb
and
ds
push
or
pop
cmc
lock
into
jo
add
or
fadd
lea
shl
fs
push
rorb
jbe
cmc
or
inc
ret
inc
cwtl
test
hlt
ror
mov
aaa
jmp
aaa
cmp
pop
fwait
jge
popf
jb
ficomps
or
xor
mov
jns
or
in
test
mov
fdivs
movsb
inc
stos
out
xor
shll
jle
mov
test
je
xchg
ljmp
push
sbb
es
mov
jb
xchg
push
icebp
pop
inc
dec
mov
fdivl
jp
jmp
dec
sahf
push
lret
push
dec
inc
mov
cmp
in
gs
mov
dec
and
and
insl
xorb
jg
bound
gs
inc
divb
pop
and
btrl
sbb
mov
cld
rorl
fwait
cmp
lock
aaa
int
mov
mov
push
aas
xor
xchg
jl
into
rorb
xorb
xor
xor
cmp
jbe
aad
dec
addb
repnz
je
adc
sbb
adc
out
jae
pop
push
cmp
sbb
add
rcrb
cmp
inc
jno
and
mov
xchg
int3
xchg
fcoml
sarb
jns
xchg
cmp
arpl
shrl
mov
mov
lods
lret
and
xchg
icebp
jb
rolb
add
out
rol
jne
loopne
add
mov
hlt
shlb
and
push
out
jge
jecxz
pop
adc
mov
xchg
insl
xchg
inc
and
mov
aas
push
call
lea
gs
xchg
sub
pop
pop
divl
fists
enter
xchg
mov
jne
shlb
push
inc
inc
lods
mov
adc
jmp
fistl
sub
lcall
push
add
sub
dec
sub
xor
leave
mov
xchg
sub
std
mov
cld
sub
mov
je
cli
mov
in
xchg
std
sbb
mov
ljmp
push
ds
pop
cmp
mov
test
and
cmp
popf
and
dec
adc
cld
fistl
cmc
push
cli
xchg
mov
aaa
xor
lock
sub
sbb
jecxz
adc
lahf
fisttpl
into
cwtl
pusha
xlat
inc
sahf
mov
into
mov
sub
xchg
xchg
jp
cmp
hlt
es
ljmp
stos
popa
adc
push
cli
cwtl
fs
hlt
or
stc
scas
xchg
xor
in
rclb
mov
add
mov
stos
mov
sbb
into
ret
adc
or
xchg
and
loopne
cmpsb
cs
add
inc
out
popf
sbb
and
push
ficompl
mov
adc
std
orl
pop
out
insb
fwait
cmpsb
aam
imul
dec
scas
xchg
movsl
je
add
mov
xor
popf
push
outsb
cmpsb
clc
and
mov
sbb
push
mov
cmpsl
sti
jno
divb
xchg
int3
inc
mov
and
and
push
push
push
adc
pop
xor
or
mov
xchg
xor
sub
pop
xchg
cmp
in
jle
insl
jle
dec
xchg
or
inc
jmp
in
in
aad
mov
rep
test
cmp
mov
push
sub
sub
and
stc
cmc
aam
push
orb
inc
mov
mov
push
jno
das
jnp,pn
jns
pop
mov
pop
loopne
add
out
sarl
movsb
jmp
mov
jbe
repnz
push
lcall
daa
push
je
mov
or
movsb
movsb
cmp
lret
adc
cwtl
mov
cli
pmaxub
jo
icebp
icebp
out
loope
les
nop
in
shlb
inc
xchg
lea
xchg
sarl
cmp
es
outsl
dec
add
add
and
aaa
jecxz
xchg
inc
test
ss
pop
int
ja
shl
xor
cmp
sbb
stos
push
cmpsw
pop
mov
jp
mov
push
or
push
insl
add
mov
cltd
fildl
rolb
inc
ss
xchg
lds
push
iret
outsb
pop
in
xor
push
outsl
xor
sub
jle
mov
adc
add
pop
repnz
rorb
shll
shll
shrl
adc
je
ret
lret
mov
jl
sbb
cmp
pop
loope
push
dec
adc
lods
movsb
xor
leave
dec
push
out
sbb
ja
addr16
call
mov
xchg
push
sahf
movsb
pop
mov
and
adc
xchg
das
mov
and
mov
xchg
out
mov
cmp
push
dec
dec
inc
cwtl
xchg
pop
cmp
dec
or
or
ret
jbe
dec
push
xor
mov
or
dec
es
xchg
sub
dec
mov
pusha
insb
arpl
ror
sbb
jmp
xchg
scas
jecxz
mov
loop
fsubrs
cld
cmp
je
jp
aas
and
out
and
push
mov
jmp
loope
dec
rcr
loop
mov
divl
clc
jne
sbb
nop
push
xchg
sub
sub
pop
std
pop
out
dec
and
mov
in
imul
cmp
add
sahf
and
xchg
clc
cmpsw
lds
pop
xchg
pop
loop
popf
lds
push
xor
cmp
pop
adc
dec
cmp
dec
sub
jae
mov
ss
adc
bnd
pop
mov
inc
xchg
call
jg
push
stc
push
frstor
call
mull
aam
mov
nop
sub
jae
nop
loop
fdivs
rclb
dec
mov
test
or
pop
inc
lods
scas
mov
lea
sbb
dec
xlat
pop
mov
adc
insb
scas
jmp
clc
movsl
xor
popa
sarl
add
cmp
jno
cmp
enter
stos
int3
dec
nop
pop
lret
mov
sub
js
jp
dec
and
imul
mov
pushf
das
cli
fcomip
repz
mov
mov
lahf
inc
mov
ror
xchg
mull
mov
test
mov
mov
andb
in
mov
mov
test
or
cmp
sub
sbb
push
lret
sti
movsb
sub
outsb
movsl
push
push
and
fisttps
adc
in
jecxz
ds
and
rcr
lret
ret
and
fwait
pop
dec
fsts
test
jae
lret
cmpsb
jge
push
xor
out
out
fucomip
cmp
leave
jg
iret
into
xchg
sti
shrl
popf
push
inc
push
dec
mov
cli
outsl
inc
test
and
pop
std
pop
movsb
out
lret
ja
xchg
cs
sahf
add
add
stos
stos
sbb
frstor
leave
sbb
push
pop
cltd
inc
fdivl
xor
and
adc
jae
dec
push
inc
fs
push
and
mov
mov
movsl
bound
fsub
jno
pop
cmp
out
or
mov
and
xor
xor
pop
mov
add
enter
aaa
ret
sbb
xor
mov
stc
fists
fs
arpl
and
mov
cs
and
cli
sbbb
fimull
pop
test
xchg
xor
ljmp
je
es
adc
adc
popa
and
leave
movsl
cli
jl
in
xchg
mov
ret
add
jecxz
int3
inc
sbb
repz
jmp
xchg
pop
mov
add
mov
or
fwait
or
mov
stc
and
nop
and
sbb
loope
stos
sti
testl
add
into
xchg
test
cwtl
movsl
inc
ss
cwtl
ret
stos
dec
or
and
lock
or
add
ret
sti
lcall
and
mov
dec
call
sbb
cltd
xor
mov
es
mov
sarb
mov
or
jb
or
xor
push
test
in
or
mov
sub
cwtl
xchg
cmp
xchg
jg
ret
inc
lret
pop
icebp
cli
pop
inc
aas
mov
xchg
sub
leave
sub
loope
and
adc
shll
mov
fidivrs
mov
xchg
xchg
xchg
gs
or
call
aaa
jnp
mov
aaa
xor
jnp
in
xchg
test
push
out
mov
int3
fwait
gs
mov
test
aam
std
jns
cmpsl
sbb
sbbb
jp
adc
daa
iret
mov
pop
outsl
pusha
mov
push
jo
xchg
push
pop
mov
jo
mov
imul
insb
pop
dec
push
popf
std
ljmp
add
test
lods
outsb
push
pop
xchg
testl
adc
mov
stc
xlat
ret
lods
repz
imull
stos
push
push
xchg
ret
pop
pop
int
outsl
rorl
jb
push
stc
xor
movsl
jb
scas
mov
mov
aas
mov
dec
addr16
ja
xchg
mov
mov
js
addr16
xchg
movsl
pop
rorb
dec
xchg
mov
arpl
jo
mov
dec
dec
mov
cmpsb
addl
pop
xchg
lds
ds
sbbb
jns
pop
jg
xorb
addl
xchg
xchg
stc
daa
insl
nop
addl
mov
rorb
sub
inc
out
adc
inc
adc
lock
daa
xchg
in
loop
aas
push
shr
inc
xor
mov
mov
pop
cld
jne
sbb
pop
shrb
bound
sbb
xchg
cld
push
repnz
fmull
cmpsb
add
roll
clc
nop
sbb
push
aaa
push
mov
scas
je
popl
xlat
or
adc
or
sbb
inc
push
mov
or
out
push
adc
aam
sub
adc
stos
in
inc
movsb
stos
int
add
jno
ror
sbb
cld
pusha
daa
js
mov
lcall
push
jne
ljmp
or
and
jns
addr16
mov
ret
cmp
js
call
shrb
sub
repz
shr
xchg
cmp
and
lods
ss
mov
xchg
xchg
add
in
inc
xlat
cmp
and
fcoms
jb
pop
sub
mov
dec
jnp
mov
jne
xor
loopne
je
rorl
testl
test
dec
mov
jge
rcrb
xchg
mov
out
cmp
sub
stos
and
inc
inc
js
sub
das
xor
fiadds
or
mov
mov
out
outsl
dec
cmc
and
fwait
das
push
cmp
mov
mov
mov
sbbl
push
adc
xchg
mov
jl
adc
lret
dec
xor
aas
sub
out
hlt
push
xchg
sbb
push
mov
fcmovne
xor
push
rcrl
jp
cwtl
inc
add
mov
inc
cmp
or
xchg
out
daa
push
xchg
sub
adc
mov
out
lret
pop
push
adc
sti
and
cmp
lods
inc
push
mov
lds
mov
sbbl
mov
mov
ss
out
push
adc
lcall
pushf
mulps
pop
cld
ljmp
push
pop
push
fs
test
fidivrl
les
sbb
push
pushf
pop
int3
lods
daa
push
and
mov
lret
cmp
mov
xor
adc
sub
push
mov
sub
incl
pop
into
sub
adc
push
aam
dec
add
in
mov
mov
add
push
pop
adc
jns
aad
pushf
dec
add
cltd
aad
es
ljmp
das
cld
int
xchg
test
jg
cli
add
jle
mov
cltd
jbe
int
push
and
mov
sti
fisubrl
sub
jg
xor
jbe
stc
cmc
insl
pop
or
xor
sbb
hlt
dec
push
test
popa
dec
scas
sub
xchg
cld
shrl
sahf
shrb
jbe
leave
cmp
popf
add
push
add
mov
sub
cmp
mov
leave
or
insl
cmp
or
addb
xchg
dec
xor
shl
jle
add
mov
sti
mov
ljmp
xchg
mov
inc
push
xchg
dec
loop
xlat
pop
cmp
ret
mov
adc
inc
outsl
out
mov
push
mov
test
add
inc
aaa
cmpl
xchg
daa
ret
imul
jle
mov
jo
nop
test
lods
nop
rcr
xchg
xchg
notb
gs
push
cmc
call
or
mov
and
imul
mov
cmpsl
fbstp
cmp
enter
or
inc
sbb
push
jmp
push
divl
fistps
rolb
add
add
pop
js
pop
outsb
cmpsb
mov
xor
cltd
lahf
in
xchg
mov
loopne
pop
adc
cmp
sbb
add
xchg
inc
stos
pop
mov
sahf
mov
sub
mov
and
vpsubsw
stos
mov
in
outsl
xor
mov
inc
addr16
cmpsb
sbb
test
adc
pop
push
or
sbb
movsl
sbb
cmp
pop
popa
xchg
daa
call
sbb
les
pop
and
pop
push
das
out
clc
dec
xchg
adc
mov
cli
dec
sbb
aaa
jg
cltd
push
rolb
jmp
lods
pop
andl
call
cmp
int3
xchg
or
sbb
inc
pushf
dec
push
call
or
sbb
inc
adc
lret
test
or
pop
stos
pop
nopl
das
jmp
adc
test
jne
lods
lea
mov
out
mov
xchg
cmp
and
cmp
int
cmpsl
pop
push
xchg
lock
insl
stos
cli
mov
push
mov
mov
dec
dec
push
in
int3
xor
push
jge
mov
int
mov
pop
or
fmuls
jge
into
lahf
stos
inc
adc
cmp
imul
test
fdivrp
adc
flds
mov
jno
aad
gs
xchg
xlat
push
cmpsl
jae
jne
les
pop
sbb
es
push
add
inc
xchg
jmp
xor
xchg
sub
imul
js
scas
cwtl
sarl
pop
add
add
cli
xor
inc
add
les
aas
cmp
test
sub
bound
ja
push
idivl
xor
pop
int
test
test
lods
les
add
dec
mov
sti
stc
repnz
dec
rcl
das
ret
jo
xor
dec
shlb
pushf
loope
lcall
mov
outsl
or
push
sahf
sbb
and
in
jg
mov
test
das
cld
dec
das
mov
es
ljmp
je
pop
clc
push
mov
lcall
dec
inc
pop
mov
test
jae
cmp
push
jle
jns
sub
jo
pop
xchg
out
clc
push
in
or
sbb
jb
into
fsubrs
loope
loopne
xor
and
or
xchg
xchg
jns
inc
xchg
mov
pop
xchg
pop
scas
ljmp
jp
push
pop
mov
mov
lcall
add
xor
and
shrb
rcrb
or
jp
push
pop
mov
mov
lcall
add
xor
and
shrb
rcrb
or
jp
push
pop
mov
mov
lcall
add
xor
and
aam
les
hlt
or
jp
push
pop
mov
pusha
mov
jo
pop
lea
xor
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
cmp
adc
and
push
fldcw
or
les
pop
push
or
add
add
add
add
add
and
sbb
or
or
test
ds
add
add
add
add
in
sbb
outsb
add
add
add
add
add
movb
mov
je
push
add
push
int
or
popf
add
outsb
add
mov
popa
add
jno
push
add
add
add
add
jno
mov
add
popa
add
inc
add
mov
mov
jne
pushf
add
add
sti
add
add
add
add
pushf
add
add
filds
pop
add
add
add
add
cs
cmpsb
add
flds
mov
xor
lret
add
add
add
add
add
cmpsb
add
add
add
incb
mov
add
add
add
add
add
add
add
add
or
or
bound
add
add
add
add
sub
in
cmp
dec
add
bound
or
add
jae
add
add
add
add
sub
sahf
add
add
repz
add
add
aad
sub
add
or
pop
add
add
les
das
pop
arpl
mov
lret
add
xlat
add
aad
push
add
add
sub
add
clc
add
add
int
outsl
add
or
or
dec
add
add
sbb
lea
pop
add
add
add
add
sub
outsb
add
outsl
add
add
add
add
and
cwtl
add
lods
add
add
add
add
add
cs
cmpsb
add
outsl
add
or
push
push
add
add
dec
add
add
add
add
add
mov
roll
addl
jno
sti
add
add
jno
or
add
add
add
add
add
add
add
add
xchg
or
lea
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
ds
add
add
add
filds
pop
add
add
add
add
sbb
add
je
lret
add
aad
mov
push
add
add
add
add
add
add
sub
adc
add
or
roll
add
add
pop
add
add
nop
add
addl
dec
add
add
add
add
lcall
add
sbb
add
add
add
add
add
add
add
add
das
add
add
add
or
lret
add
add
add
add
add
jno
filds
pop
add
add
add
or
lea
popf
add
add
push
add
add
add
add
push
mov
sub
inc
add
add
cs
dec
add
push
pop
add
add
add
add
add
inc
add
add
push
cld
cmp
xor
xor
push
xchg
repnz
shlb
inc
lret
adcb
in
aaa
and
xor
mov
cmpsl
negb
daa
and
xor
gs
in
mov
and
jae
stos
lods
lods
pushl
sbb
mov
inc
jp
leave
dec
xchg
call
flds
adc
lock
and
addr16
pop
cwtl
leave
lcall
push
sub
inc
mov
iret
imul
gs
jmp
imul
jg
push
mov
mov
ror
mov
iret
mov
sti
mov
sbb
es
sub
lods
pushf
xchg
inc
sbb
sub
mov
aam
dec
fcomi
xchg
push
cmp
mov
cmpl
movsl
sahf
xchg
mov
jns
cmp
int
in
int3
mov
cmpsl
xor
stc
fcom
jnp
mov
lods
pop
dec
sub
jne
and
add
das
sahf
adc
aas
mov
inc
xchg
push
dec
push
pop
test
sub
xchg
jnp
mov
shrb
outsl
adc
xor
aam
fdiv
and
repz
insl
adc
push
push
inc
jle
popa
push
inc
cmp
inc
mulb
out
int
mov
insl
jl
mov
outsl
mov
inc
xchg
xor
ret
push
cltd
lret
sti
jnp
outsb
xor
shll
mov
loopne
ret
leave
mov
enter
js
pop
jge
mov
test
dec
sahf
hlt
jge
loope
push
mov
cli
xchg
xor
inc
fcmove
cmp
mov
cmc
jne
mov
lock
dec
int3
outsb
sbb
or
leave
imul
icebp
addr16
sti
and
pop
leave
imull
pop
mov
ljmp
fistpll
mov
xchg
test
insb
roll
pop
xchg
push
dec
jecxz
cs
cmpsl
jl
stc
add
repz
aaa
mov
sbb
push
or
xchg
cmp
cmp
push
lcall
push
push
cmp
push
lcall
push
mov
pop
lea
push
jo
inc
cmpsl
dec
mov
stos
lcall
lods
enter
lock
bound
pop
outsl
mov
fcmovnbe
and
add
and
js
jne
and
jns
mov
mov
push
lea
xchg
add
test
js
cmc
jecxz
aam
repz
mov
test
mov
movsl
clc
mov
hlt
jl
fcmovnb
shlb
mov
imul
mov
jae
nop
xchg
test
mov
test
int3
pusha
lock
in
stos
jo
out
ret
dec
xchg
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
