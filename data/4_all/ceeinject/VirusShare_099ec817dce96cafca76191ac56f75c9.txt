call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
lock
sbb
sub
cmp
push
lods
js
adcl
leave
and
adc
adc
xchg
or
sbb
dec
mov
sbb
xor
and
adc
add
dec
or
sbb
sbb
lods
dec
ret
pop
lea
js
mov
cmp
es
pop
mov
inc
lea
popf
inc
scas
push
mov
mov
jge
or
or
into
repz
and
pop
or
or
inc
mov
pop
and
push
loopne
repnz
mov
adcl
cld
test
cmpsb
cli
aad
jp
loop
fwait
mov
mov
inc
scas
inc
inc
and
data16
gs
xor
test
outsb
dec
dec
mov
cwtl
jb
arpl
outsb
mov
cmp
popf
add
or
out
out
xlat
pop
xor
sbb
or
ja
lea
push
mov
jmp
prefetcht0
jle
rclb
dec
shrl
icebp
inc
mov
fcmovu
mov
mov
call
mov
shrl
ret
cmp
fistpl
push
stc
cwtl
and
enter
call
xchg
popa
cmpsl
imul
or
clc
xor
inc
mov
popfw
mov
pusha
mov
sbb
adc
xor
push
iret
cmp
dec
lods
dec
dec
jp
inc
lods
lahf
dec
dec
mov
nop
inc
loopne
mov
js
mov
push
test
mov
adc
add
repz
sbb
sub
cmp
push
arpl
xor
and
adc
add
repz
adc
jl
dec
aas
and
fisubrl
scas
stos
mov
push
movsl
insb
jbe
arpl
bound
mov
in
jb
mov
data16
pop
mov
aas
xchg
sub
dec
xchg
ret
shrb
sub
mov
jg
scas
pop
inc
pop
mov
mov
xor
orb
sbb
sbb
jae
cwtl
dec
push
adc
fdivrl
xor
mov
xchg
dec
pop
push
data16
push
mov
inc
mov
sbb
cmp
mov
outsl
jg
xchg
inc
xor
add
sub
insb
in
ja
aaa
adc
rolb
jo
push
cmp
pop
aas
pushl
mov
cli
scas
ss
xor
jne
lods
mov
stc
jns
test
orl
mov
fldenv
fisubs
xor
adc
bound
and
imul
rorl
mov
outsb
and
add
shlb
cwtl
es
rcrl
jge
daa
add
jo
pop
xchg
push
ljmp
inc
or
push
mov
add
stos
push
ds
roll
mov
imul
fs
and
nop
xor
lret
pop
dec
cmp
nop
aaa
pop
ljmp
mov
outsb
int
dec
add
stc
add
int3
inc
rorb
push
dec
adc
xlat
and
repz
sbb
push
or
cwtl
and
fnstsw
jne
or
mov
sbb
xor
push
sbb
fisttpl
mov
pop
dec
adc
xorb
inc
cltd
nop
lcall
ret
cli
addr16
mov
fnstcw
mov
roll
push
stos
loop
xchg
scas
imul
sahf
or
hlt
mov
or
repnz
cmp
xchg
cmpsb
scas
icebp
fwait
repnz
mov
pop
loope
das
inc
hlt
mov
repnz
or
and
sbb
jmp
out
mov
push
push
or
int3
push
outsb
shl
mov
dec
cwtl
xor
jns
dec
and
jne
mov
imul
dec
bnd
pusha
push
outsb
out
shll
aaa
cmp
xor
inc
gs
xlat
jmp
sbb
jb
stc
dec
subl
ficomps
jns
sbb
and
sub
out
fmull
pop
pop
push
andb
jmp
movsb
stos
sub
mov
fidivrs
mov
jns
sub
lahf
fwait
lahf
dec
loope
mov
ljmp
pop
fidivs
frstor
ja
and
test
adc
push
cs
rorl
imul
jo
mov
dec
mov
dec
in
jle
and
test
jb
js
mov
lcall
shrl
pushf
testl
and
ljmp
mov
call
mov
js
mov
lds
mov
sbb
cs
xchg
add
sub
gs
xor
mov
aam
bound
inc
cs
icebp
stos
lcall
fistpll
jae
lret
push
imull
dec
jno
lods
push
imul
in
jb
lods
mov
pop
adc
push
push
mov
xchg
lahf
push
cmc
movsl
mov
jle
sbb
jge
jns
add
or
out
ret
notl
insl
lds
pop
leave
jp
mov
addr16
es
lret
jns
mov
aas
add
add
ret
aas
mov
push
dec
loope
jo
sub
imul
cmp
aaa
cmp
push
add
test
adc
into
rorb
fidivrs
ja
sbb
aam
bnd
jecxz
push
lret
jns,pt
push
adc
out
inc
jbe
addr16
mov
push
xor
fdiv
aam
aas
shrb
negl
jl
mov
mov
xchg
hlt
std
cmp
jo
adc
lahf
pop
lret
in
mov
sub
cli
push
sub
mov
lret
in
mov
xchg
adc
pop
les
mov
or
xchg
mov
mov
cmp
mov
daa
inc
cltd
jne
lds
jmp
ret
rclb
sub
jnp
add
loopne
leave
adc
mov
clc
mov
xchg
or
call
jo
lahf
mov
jns
cwtl
xor
bound
sbb
cld
push
pushf
inc
adc
jne
pop
pop
in
xor
or
mov
daa
cmp
push
clc
inc
pop
add
mov
sub
push
add
adc
inc
jnp
mov
arpl
dec
mov
add
int3
es
movsl
bound
ds
xchg
js
insl
hlt
cmp
mov
jl
xor
dec
xor
ret
or
shlb
inc
dec
inc
push
push
xchg
jle
enter
shrb
inc
jnp
mov
sbb
cmp
sub
daa
jbe
gs
adc
sub
enter
dec
xchg
xchg
inc
pop
lret
addr16
add
je
fidivrl
push
test
fimull
hlt
popa
or
dec
lcall
scas
and
out
loop
sbb
dec
cld
and
lret
cmp
mov
loope
push
dec
mov
cs
cmp
fwait
sti
cmp
ja
in
jl
call
lcall
add
xchg
jmp
jnp
jp
jns
xor
sbb
bound
pusha
popf
mov
push
pop
sbb
lea
ja
out
and
lret
xor
push
lods
xor
outsb
dec
xchg
jno
stc
xlat
addr16
push
xchg
lcall
dec
ljmp
cmpl
movsb
ss
inc
lcall
inc
adcb
rorb
pop
shll
or
mov
xchg
inc
stc
adc
loop
pop
test
fdivrs
mov
cltd
les
pop
mov
push
in
ds
icebp
dec
pop
shlb
pop
in
cmp
mov
dec
das
or
jo
or
and
xchg
mov
inc
or
daa
int3
in
mov
inc
inc
mov
or
pop
in
add
dec
add
jb
int
jnp
cmp
mov
lcall
mov
lods
or
stc
sub
xchg
pop
cs
lret
push
rorb
push
xlat
mov
int
push
movb
push
test
add
idivl
add
loope
pusha
call
repz
stos
std
dec
aas
adc
scas
fisubs
lret
ret
add
stos
pop
das
shll
faddp
pop
inc
pop
aas
dec
daa
lock
or
out
lock
in
mov
dec
adc
jb
push
mov
shrl
cmp
xchg
xchg
imul
sub
jg
enter
sbb
pop
cli
jb
jl
fnstenv
outsl
loope
cs
mov
push
mov
xchg
lret
test
pop
xor
push
mov
ljmp
orl
mov
in
cmp
push
jno
out
lcall
test
pop
fistps
and
mov
aad
fwait
add
rcr
dec
pop
testl
je
ret
xor
jge
std
jmp
rorl
leave
xor
orb
jnp
xchg
in
push
lods
clc
cmp
fcoml
cmpsb
fcomps
and
sbb
mov
call
push
or
cmp
mov
adc
xchg
in
lods
mov
stc
push
test
and
out
out
add
ljmpw
adc
adc
pop
insl
cmp
xchg
cltd
int
outsb
les
mov
inc
pop
xchg
dec
int3
loope
mov
mov
dec
in
push
xchg
popf
or
scas
add
mov
mov
movsb
popf
dec
xor
jp
shl
fstpl
aam
popa
inc
icebp
push
cmp
dec
mov
add
jae
cmp
lods
inc
dec
mov
add
in
jae
xor
mov
add
scas
pop
mov
popf
adcb
sub
mov
mov
xchg
jnp
dec
cli
xchg
adc
out
int
push
mov
test
imul
sbb
dec
xor
pop
xchg
fcomps
repnz
mov
test
lcall
xor
dec
and
les
sub
xor
lock
mov
stos
mov
lock
movsb
imul
cmp
hlt
mov
cmp
shlb
jl
cmp
popa
sub
jae
fcompl
bound
pop
mov
or
movsw
mov
cmp
mov
push
push
mov
push
sub
stos
mov
or
xor
jmp
int
xchg
dec
jle
inc
add
cmpsb
cwtl
test
inc
loope
xlat
mov
pop
fsubrl
add
add
cmp
jbe
inc
mov
mov
pop
fimull
in
hlt
stos
in
jle
js
xchg
or
test
cli
nop
sub
jp
sbb
mov
adcb
sahf
daa
movsl
idivl
out
rcrl
aam
lahf
jmp
and
shrl
cs
mov
and
rcl
pop
or
cmp
pop
ja
bound
jns
pop
pop
stos
test
dec
xchg
fiaddl
outsl
addl
pop
pop
xchg
mov
cmp
add
sub
loope
inc
dec
inc
aas
aas
xor
pop
or
mulb
jl
pushl
adc
jae
lock
cmp
push
fcmovb
sub
gs
aas
jg
cmc
std
je
testl
in
into
add
aas
xchg
call
pop
mov
cmp
and
push
push
das
cmp
subl
stos
bswap
jp
or
jne
gs
and
pcmpgtw
out
jb
jmp
jno
add
xor
fistps
xchg
stos
pop
cld
add
hlt
fistl
and
sub
ds
sbbb
adc
push
stos
cmp
aaa
lcall
jno
repz
cmpsb
jns
dec
mov
shlb
mov
xor
scas
mov
es
rcrb
push
out
daa
jae
sbb
lock
iret
mov
daa
pop
subl
pop
cmpsl
inc
call
jp
aas
and
jns
pop
mov
xor
xchg
das
inc
xchg
sbb
sbb
sub
mov
mov
lret
rolb
rclb
and
xor
push
fsub
insl
sub
lahf
scas
or
pop
les
push
push
jmp
ljmp
rcrb
ret
mov
sub
pop
add
mov
subl
daa
aad
fcoms
loopne
cli
xchg
adc
cmpsl
pop
cmpsb
inc
loop
push
jbe
aam
adc
les
lods
and
jge
pop
ja
xchg
je
jp
sub
jb
push
ljmp
aam
add
sub
leave
fwait
jp
stos
shl
shrl
sub
add
std
pop
aas
mov
and
jbe
dec
adc
mov
pushf
fs
fistps
ret
in
pop
add
mov
bswap
and
rclb
xor
adc
xchg
clts
push
pop
pop
ret
loope
xlat
jge
shlb
and
vrsqrtss
hlt
mov
out
inc
stos
jl
fst
out
jb
imul
jl
mov
mov
add
jle
adc
sub
fildl
or
sub
call
data16
push
mov
fcoms
pop
lea
dec
test
mov
or
data16
pop
stos
or
sbb
xchg
sub
pop
cmp
shlb
dec
jnp
lods
jmp
lcall
inc
ret
dec
shll
pop
lahf
and
mov
push
cmc
jb
sbb
pop
repz
js
cwtl
pop
jae
pop
mov
fadd
jge
sub
mov
call
aas
xchg
pop
jae
daa
inc
imul
xor
add
std
shll
scas
hlt
xchg
xor
jmp
lret
jp
mov
and
incb
push
or
inc
pushf
add
cmp
mov
sub
push
xchg
lret
or
adc
cld
add
push
mov
repnz
addl
cltd
cmp
push
test
loope
xor
fs
fmulp
mov
adc
fsubs
xchg
xor
cmc
imul
rolb
inc
jne
jnp
subb
cltd
lret
jmp
fiadds
cld
arpl
lcall
mov
jge
test
iret
mov
sbb
jno
iret
aaa
jle
xor
or
xchg
insb
sbb
push
addr16
and
cmpsl
adc
push
sbb
enter
jl
pop
in
cld
push
icebp
nop
jno
or
insb
dec
fcomp
xchg
imul
and
jmp
pop
fisttps
inc
dec
test
dec
xchg
sub
jmp
int3
xor
mov
mov
movsl
push
ret
jmp
loopne
or
out
iret
test
cli
int
loope
cmp
arpl
sub
push
pusha
enter
xchg
push
popa
push
dec
cmpsb
mov
xchg
add
fdivp
out
mov
mov
shr
roll
cwtl
mov
dec
inc
or
cli
pushf
lret
push
insl
cmc
dec
stc
xchg
or
gs
mov
sti
push
popf
mov
andb
into
aaa
lret
pushf
es
lret
xor
popa
xlat
out
jecxz
cmp
sub
test
cli
mov
xchg
insl
lock
add
and
or
adc
mov
in
repz
movsb
out
pushw
jmp
loopne
out
xor
inc
xor
js
int
mov
cmp
lods
mov
test
scas
fldt
out
add
pop
push
gs
cmc
jb
dec
ficoml
sbb
pushf
fstpt
mov
sub
pop
pop
xor
clc
mov
sbb
jmp
cld
xchg
xor
mov
clc
cli
int3
xchg
ret
cmpsb
fwait
mov
xor
fldl
stc
sbb
mov
xor
inc
mov
out
cmp
mov
fisttpll
repz
sub
pop
mov
xchg
int3
add
xor
push
mov
in
jge
dec
mov
mov
cwtl
cmc
fildl
or
leave
xchg
nop
dec
stc
and
imul
xlat
xorb
popf
push
mov
ret
jb
imul
sub
rol
jno
adc
stos
pop
lds
add
lods
mov
lcall
xor
inc
adc
fistl
mov
popf
jge
imul
and
xor
xchg
mov
adc
push
in
sub
cmpsl
pop
mov
frstor
dec
cmp
fsqrt
adc
xchg
dec
push
jnp
mov
hlt
mov
mov
push
jae
stos
and
sub
pop
push
mov
hlt
dec
and
add
lock
pop
mov
add
test
pop
or
mov
out
and
stos
scas
push
lcall
rcr
lcall
mov
out
dec
hlt
jne
pop
cmp
and
rclb
jg
adc
lret
cmp
mov
xchg
fisttpll
and
idivl
ds
add
inc
repnz
adc
inc
push
int3
mov
push
sbb
mov
mov
addb
cmpsl
ret
mov
push
in
shr
mov
jno
cmc
mov
fidivl
insb
aam
sub
shlb
call
dec
arpl
enter
roll
xchg
push
push
fwait
addb
cmpsb
adc
xlat
pop
insl
lret
test
sub
and
adc
in
fldt
into
roll
mov
xchg
cmc
call
mov
cld
bound
sub
insb
sbb
xchg
scas
in
xchg
xor
movsb
mov
in
lahf
fstpl
je
xor
and
jmp
cmp
ja
cli
mov
cmp
popa
xchg
jns
cld
mov
mov
adc
add
in
mov
sub
mov
adc
pop
jmp
into
icebp
repnz
mov
clc
imul
pop
shll
dec
scas
sub
data16
sbb
gs
fnstenv
dec
mov
ljmp
mov
mov
push
pop
rorl
pop
sub
adc
sbb
hlt
fcompl
and
filds
jno
adc
ljmp
iret
sub
mov
add
or
pop
add
imul
adc
ret
outsl
stos
pop
in
scas
ds
mov
xchg
das
push
hlt
xchg
cmp
and
loop
inc
fistpll
add
leave
inc
shlb
dec
adc
push
or
sahf
jns
jb
fucom
add
fdivp
test
inc
push
fildl
out
int
dec
xchg
test
inc
push
icebp
jge
add
pop
js
xchg
inc
mov
rclb
pop
lret
bound
lds
out
cmp
cwtl
in
aad
popa
jae
out
sub
mov
call
aas
and
dec
imul
xor
repz
jb
fbld
clc
xacquire
sbb
outsb
sub
into
enter
cmpsl
mov
dec
jge
popf
mov
mov
dec
inc
loope
cs
fs
xor
insb
mov
repnz
loopne
cwtl
mov
push
std
xor
iret
and
add
ss
test
cwtl
jge
inc
xor
mov
into
pop
mov
fidivs
push
cmpsl
stos
rol
sbb
jbe
test
push
push
outsb
cmp
int3
or
lock
dec
lds
ds
test
xor
xor
cmp
push
jb
sub
aad
pop
xchg
lock
aam
xor
or
push
sbb
jae
in
stc
or
xchg
xchg
mov
test
lea
je
lods
cmp
lcall
enter
inc
out
cmpl
gs
xchg
fdivrl
bound
fs
xchg
jmp
ds
loope
cmp
or
mov
and
push
sbbb
ret
push
or
and
xchg
pop
xchg
add
add
shlb
push
lret
decb
push
sub
lds
ficomps
std
js
sbb
cmp
xchg
gs
shr
push
xchg
pop
and
add
es
xor
pop
xor
sub
sbb
stos
mov
outsl
or
into
ja
ret
mov
adc
in
ret
aas
dec
xchg
shlb
ss
test
or
jae
push
fcoml
jl
popf
jl
mov
jnp
push
mov
pop
push
cmpsl
mov
and
stos
lea
mov
pop
adc
ret
jbe
jp
stos
push
pop
sar
notb
ret
and
dec
sub
loop
icebp
mov
fs
inc
sbb
sbb
and
mov
lahf
mov
out
mov
mov
insb
xorl
cli
aas
push
dec
nop
orb
sbb
xchg
inc
pusha
sbb
mov
shl
mov
mov
fisubrl
sbb
in
xchg
push
cmp
outsb
fcmovb
jle
dec
gs
dec
popa
mov
or
push
iret
xlat
mov
push
vrangepd
in
adc
push
imul
cmpsb
repz
push
mov
pop
es
cs
jnp
cmpsl
xor
xchg
pop
jo
or
cwtl
push
es
and
mov
scas
call
loopne
mov
adc
xchg
adc
or
lods
cltd
jns
test
or
push
idivl
pop
mov
fadd
mov
bound
test
loope
mov
and
add
mov
addl
sahf
and
mov
or
pop
enter
outsb
or
roll
clc
mov
ret
pop
leave
scas
xlat
push
lret
adc
stc
xor
in
push
cmc
adc
test
sbb
jp
ds
push
push
xorl
test
push
scas
dec
mov
stos
xchg
push
aam
jle
in
adc
inc
aas
int3
mov
leave
lock
inc
dec
xchg
mov
sub
je
roll
je
rolb
dec
fs
lahf
mov
xchg
outsl
lret
lcall
dec
mov
popa
add
inc
imul
fistps
clc
mov
and
stos
out
std
testb
iret
shr
and
mov
xchg
repnz
mov
mov
or
outsb
out
cmp
je
ficoms
jl
scas
fwait
mov
sbb
mov
or
testl
cmp
xor
outsl
lret
out
sub
data16
mov
ret
cmp
push
arpl
xor
and
adc
add
repz
sbb
sub
cmp
push
arpl
xor
and
adc
add
repz
sbb
dec
mov
js
mov
mov
enter
call
mov
cmp
push
pushf
xor
test
iret
inc
inc
stos
daa
in
pop
cld
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
vpshaw
or
push
mov
popf
cmp
idivl
mov
xchg
xchg
or
jns
imul
xlat
dec
das
mov
pop
mov
ja
inc
fsts
idivl
mov
test
push
xchg
imul
sub
mov
aas
aad
aaa
scas
shll
inc
idivb
cs
add
mov
pusha
fsubr
into
xor
lds
cmp
cmp
mov
sbbb
sub
pusha
mov
aaa
clc
mov
and
jns
jno
sbb
data16
inc
pop
pop
les
daa
lods
pop
adcl
xor
inc
out
dec
lods
js
imul
jns
mov
data16
mov
mov
in
xchg
sub
cmc
push
cmc
xchg
shlb
lret
lret
cwtl
lods
add
pop
leave
addr16
cmp
xchg
or
imull
dec
mov
adc
mov
push
cltd
scas
xor
xchg
xchg
adc
notl
adc
aaa
pop
pop
sbb
xor
inc
add
dec
push
mov
mov
push
jmp
daa
push
jmp
test
or
lods
jg
insb
xlat
insl
mulb
push
cltd
sbb
daa
cld
mov
lods
push
xchg
push
fisubrl
mov
movsl
lahf
pop
idivb
jl
outsb
xchg
sub
and
add
ja
push
ljmp
push
leave
cmpsl
cmp
or
jns
imul
mov
pop
mov
ja
inc
fsts
cmpsl
cmp
or
jns
imul
mov
dec
movsl
sub
lret
xor
mov
sbb
int
push
xchg
mov
xchg
xchg
stos
pop
xchg
shl
outsb
mov
je
mov
xor
rcrb
xor
xor
cltd
push
clc
xchg
push
lods
mov
jl
or
lret
inc
dec
lock
adc
jmp
fsub
lock
pop
movsb
xchg
add
cli
lret
inc
push
push
scas
xchg
mov
jmp
dec
out
ret
iret
pusha
les
sbb
or
xor
mov
imul
sbb
aam
jae
ljmp
and
in
popa
imul
xchg
fnsave
movl
xchg
data16
subl
lret
inc
mov
stc
js
sub
jo
jp
sbb
lods
cmp
xor
loop
mov
and
inc
xchg
test
fcoms
or
cmpsb
mov
in
les
insl
push
jl
jg
movsl
or
mov
adc
and
cli
arpl
sbb
fcompl
xor
rcrb
pop
pop
iret
or
aaa
push
fidivrs
fistpl
and
shlb
notl
jne
jns
xchg
js
jle
sahf
test
mov
adc
lods
in
adc
fucom
inc
les
inc
in
ljmp
lret
mov
leave
lret
jnp
out
mov
inc
lds
push
jb
sub
mov
sub
adc
inc
and
jg
dec
xor
ds
bound
cli
xchg
jns
xchg
cwtl
inc
dec
or
inc
or
dec
xchg
jg
std
mov
mov
mov
and
fcmovu
and
mov
mov
pop
push
adc
mov
mov
xor
lods
rcrb
fbld
imul
dec
int
push
mov
popf
out
popa
pop
adc
leave
push
mov
clc
fadds
inc
scas
icebp
and
pop
mov
sub
or
jle
movsw
xor
loop
decl
or
fnstsw
or
sbb
ret
hlt
push
mov
jmp
cmp
mov
in
add
icebp
or
testl
xchg
pop
and
ficompl
mov
repnz
xchg
leave
xchg
clc
mov
jle
ds
dec
add
fdivrl
or
jecxz
hlt
sbb
jp
dec
pop
jnp
sub
push
shl
aaa
jae
sbb
pop
lcall
sti
add
out
frstor
mov
jle
sbb
sar
or
jmp
jecxz
rolb
xor
cli
bound
lds
je
adc
or
cs
mov
ss
dec
sbb
push
pop
shrb
dec
ds
cwtl
fldenv
gs
lods
rorb
shrb
and
or
jbe
jne
pushl
mov
mov
sub
mov
icebp
jecxz
jp
or
call
in
mov
sub
push
cld
pop
pop
mov
orb
cwtl
jle
and
cltd
push
cmp
testb
daa
add
loope
mov
cmp
mov
jge
mov
cmp
insb
iret
imul
xor
lock
ljmp
mov
into
dec
stos
pop
mov
xor
mov
insw
sbb
add
test
xor
andb
loop
imul
cmc
mov
mov
fdivrp
dec
fcom
and
sbb
mov
add
mov
out
xchg
mov
sbb
jmp
push
and
adc
mov
out
jbe
mov
outsb
and
mov
test
cltd
fisubrs
jecxz
cmp
xor
das
xchg
add
rcrb
add
cmpsl
clc
and
add
aam
call
add
cli
push
adc
testl
mov
push
test
mov
dec
push
dec
mov
cmp
adc
jne
mov
xchg
aam
scas
cmp
mov
adc
sub
insl
and
mov
dec
aaa
mov
inc
mov
or
cs
or
push
jmp
dec
inc
sarb
dec
in
add
push
xor
jo
ss
lods
or
hlt
hlt
and
dec
pop
jmp
jl
clc
add
jns
fisttps
xchg
mov
lods
movsl
repnz
inc
inc
jle
mov
sub
mov
xor
sub
repz
fwait
fwait
out
arpl
shlb
repnz
fmulp
mov
adc
mov
push
test
mov
repnz
imul
mov
out
cmp
xchg
add
fisttpl
pop
xlat
call
or
mov
jg
lock
hlt
insb
mov
jae
jo
mov
fsubrs
roll
das
pop
dec
push
jne
mulb
push
inc
xchg
sub
arpl
dec
jae
or
jnp,pt
sub
jbe
addr16
mov
mov
scas
jb
adc
sti
xchg
inc
test
scas
xchg
pushf
pop
jmp
subl
mov
imulb
inc
sbb
stos
xor
dec
lcall
fldenv
pop
lret
push
mov
dec
add
or
out
mov
pusha
push
xchg
test
push
jmp
aas
mov
bound
insb
out
mov
dec
shl
mov
or
jg
mov
add
sub
lahf
push
xor
movsl
out
popa
ss
hlt
inc
scas
in
pop
psubq
std
lock
addr16
xor
clc
mov
lcall
sub
push
ret
movsl
data16
lcall
mov
andb
inc
xor
sub
xchg
cmc
test
test
dec
movb
scas
ljmp
push
std
loope
push
fnstcw
mov
movsl
mov
pop
jecxz
pop
pop
add
dec
mov
mov
dec
or
push
or
mov
aaa
mov
cmp
leave
dec
filds
fstps
pushf
fnsave
insb
lods
sti
fbstp
aas
or
jl
pop
inc
cs
sub
dec
inc
mov
mov
ds
cmp
xlat
aas
fs
adc
data16
sbb
and
mov
inc
mov
add
fs
cs
cmp
cvtdq2ps
mov
clc
or
enter
xchg
sub
push
push
xor
mov
sarb
sub
and
test
sub
pop
imul
pop
daa
dec
sti
movsl
cmpsl
push
roll
rorl
test
xchg
int
push
and
in
lods
lcall
rcrb
cmp
std
sbbl
clc
pushf
add
aas
loopne
mov
push
jnp
rcr
lahf
mov
test
std
daa
int
mov
mov
pop
push
pop
shrb
lahf
clc
jo
pop
es
movsb
and
pop
mov
enter
jecxz
in
xor
inc
daa
ret
repnz
adc
mov
cs
lcall
lds
pop
hlt
fadd
stos
and
pop
push
jnp
pop
lcall
mov
loop
fstpl
jnp
dec
je
mov
sti
xor
out
loop
les
mov
push
lahf
push
test
mov
decb
dec
adc
pop
cmp
leave
add
jne
fisubrs
scas
pop
mov
ss
cmp
movsb
fwait
cmp
cld
mov
and
mov
fstpl
repnz
mov
inc
xor
sub
outsb
sti
cmp
mov
sti
pop
ss
sub
pop
scas
xor
and
aaa
mov
rolb
scas
dec
hlt
mov
jp
sub
das
mov
dec
imul
rorl
enterw
add
clc
cmpsb
sub
ja
xchg
push
inc
push
pop
sbb
and
xor
add
lret
fimull
ss
cld
push
inc
add
sbb
out
mov
and
notl
fstpl
cld
ret
loop
fcoml
and
les
mov
clc
xchg
push
or
loopne
mov
mov
add
ds
xor
sti
pop
mov
adc
lret
xchg
cli
nop
mov
shll
out
inc
or
dec
push
jmp
lds
loop
push
addr16
or
fldt
imul
jbe
jb
and
mov
aad
ja
mov
cmpsl
bound
ret
push
jp
popa
fists
arpl
mov
bound
in
int3
call
xor
or
loop
push
push
inc
rorb
and
repz
add
mov
in
inc
pop
xchg
mov
jl
sub
adc
fwait
sub
pop
in
lret
jg
rcll
fwait
out
in
out
jae
inc
orl
aad
and
add
add
and
aam
mov
sub
fisubl
xchg
and
out
or
sbb
out
mov
inc
push
lods
ficompl
addb
mov
pop
sub
push
xchg
add
push
ja
add
insl
mov
movsb
lods
jp
stos
pop
in
push
pop
cli
mov
jl
sub
pop
in
inc
xor
cwtl
add
addr16
xchg
sub
int
sbb
mov
push
mov
jge
fildl
jecxz
xor
in
andl
add
lods
lcall
jmp
loopne
sahf
test
xlat
or
ds
lret
jl
mov
cmp
fstp
lds
or
enter
or
ret
dec
add
xchg
mov
out
leave
and
pop
mov
mov
in
mov
jp
pop
mov
push
stos
push
test
cmp
jnp
sbb
int
iret
cmp
pusha
fwait
lds
push
adc
leave
xorb
lock
lret
pop
lret
and
iret
push
xchg
hlt
mov
mov
scas
jmp
or
xchg
fistl
les
sub
enter
push
fcompl
cs
cmp
sbb
mov
jp
jns
mov
ljmp
imull
les
adc
sub
add
mov
and
pop
cmpsb
fwait
pop
movsb
lret
jle
fcoml
push
lods
movl
in
bound
or
push
mov
mov
sub
mov
std
clc
cmc
push
sub
push
enter
ljmp
fcmovnb
push
xchg
rolb
aaa
imul
sbb
cwtl
lret
push
dec
mov
es
pop
xchg
push
jo
xlat
push
lea
xor
movsb
adc
xchg
lea
jne
aam
dec
call
aam
jge
scas
push
push
xor
adc
ret
jge
sbb
data16
inc
push
pop
iret
pop
ret
psubusw
inc
add
adc
cs
shl
aas
mov
ds
jl
loopne
test
cmp
mov
insl
cmp
dec
and
add
rol
sub
imul
mov
mulb
jae
cmpsb
aas
lahf
add
scas
cmp
dec
add
push
pop
push
in
movsb
xchg
dec
loope
cmovbe
jno
mov
fnstenv
ljmp
pop
lods
push
dec
mov
mov
jns
mov
outsl
divb
sbb
mov
nop
mov
fsubs
jnp
hlt
fs
mov
pushf
mov
shlb
xor
rclb
imul
test
mov
leave
repz
mov
push
ja
enter
cmp
mov
mov
sub
jnp
mov
lock
out
out
inc
pop
or
mov
add
mov
repnz
push
dec
mov
mov
ljmp
lods
mov
mov
lret
xchg
inc
cmp
mulb
inc
fnstsw
and
fcoml
js
and
or
testb
call
xchg
lret
vpcmpeqw
das
lods
and
push
in
xor
push
int
arpl
sbb
pop
push
inc
sahf
mov
pusha
mov
dec
je
sbb
sbb
std
test
mov
xlat
fsubrs
fsub
cld
mov
out
rorb
mov
inc
mov
shlb
cli
fldenv
xchg
mov
or
mov
lahf
jmp
add
add
nop
sbb
jbe
dec
push
fistpl
insl
mov
ja
bound
sub
repz
std
lahf
shr
sbb
inc
mov
pop
mov
movsl
push
outsl
fistl
movsl
lds
sub
fwait
mov
mov
dec
cmp
outsb
mov
mov
or
test
push
stos
loopne
test
out
cs
mov
dec
mov
ds
push
mov
imul
add
mov
push
cmp
lock
lds
cwtl
push
ret
pop
add
add
xor
popf
push
rcrb
out
not
repnz
mov
cli
addl
cs
adc
inc
cmp
push
fisubl
mov
das
jns
mov
adc
lahf
pop
mov
insb
aaa
cmpsl
cld
in
mov
testl
leave
loop
add
or
mov
nop
xor
adc
inc
push
fdivrl
mov
xor
scas
dec
inc
fdiv
adc
aam
sub
jno
dec
loopne
mov
les
and
cmp
lds
xor
inc
ffreep
mov
call
sub
fidivrl
aad
test
sub
flds
lea
mov
cmpsl
sbb
ds
into
imull
cs
incl
cmpb
push
xor
mov
insl
mov
mov
push
cmpsb
test
jne
and
lods
add
dec
rcrb
mov
jbe
lock
sub
mull
bswap
int
inc
leavew
orl
out
jno
dec
cmp
push
and
xchg
push
int
addr16
nop
push
ficoml
add
cmpsl
das
adc
sti
std
sahf
or
mov
imul
in
in
in
jle
xchg
and
mov
jmp
scas
add
dec
popf
ljmp
repz
adc
or
or
mov
push
out
fldenv
inc
pop
addb
pop
cs
ficoml
dec
inc
mov
jns
mov
xchg
cmpsb
and
xor
push
and
sub
ljmp
mov
jnp
sti
and
adc
mul
sti
lods
loope
jno
js
in
shll
jge
stos
int3
mov
int3
outsl
aas
mov
rclb
fsubrs
sub
push
sbb
adc
mov
and
sar
and
xchg
mov
sub
cs
sbb
or
lret
arpl
xchg
xor
jp
movsl
adc
or
jb
push
ror
mov
leave
jne
add
sbb
push
cmp
gs
xor
jo
add
xor
mov
shrl
jno
add
inc
popf
outsl
inc
out
cmp
push
sbb
sarl
in
in
aam
ljmp
mov
lods
xlat
mov
push
xlat
xchg
iret
jge
pop
or
mov
mov
je
mov
pop
test
loope
mov
insl
push
or
xchg
xor
sub
inc
pop
xlat
lcall
xchg
adc
dec
and
dec
enter
fwait
cmc
insl
out
mov
jge
xchg
mov
loope
fists
xchg
inc
sub
cmp
sub
lahf
lds
xchg
cmp
mov
call
sbb
jmp
aad
sbb
sub
mov
arpl
xchg
orb
sahf
jbe
pop
jns
mov
daa
mov
mov
arpl
leave
pushf
xchg
or
popf
inc
sub
and
sub
std
ds
inc
ljmp
out
cmp
test
push
fstp
sub
or
mov
jne
dec
jg
or
xchg
xchg
sub
in
scas
push
pop
mov
or
scas
or
jmp
lret
cmp
aaa
jo
pop
fisubrs
mov
fs
inc
mov
fildll
dec
out
xchg
cwtl
or
lea
jp
pop
and
ret
rclb
hlt
inc
mov
add
cwtl
push
mov
enter
inc
pop
xor
mov
dec
xor
cs
shrl
xchg
sbb
add
les
jns
jns
add
mov
jnp
and
lock
je
jbe
movsb
pop
pop
out
jg
jmp
xlat
test
lock
gs
and
xchg
inc
sahf
dec
dec
ds
movsl
adc
stos
push
jle
std
das
mov
lret
les
fistl
mov
push
inc
lds
test
and
imul
push
mov
test
lods
and
insb
insl
icebp
adc
xor
xor
pushf
out
ret
das
into
bswap
sub
test
inc
mov
mov
ret
test
imul
xor
les
testl
push
add
in
add
sarl
mov
aas
mov
push
cs
cli
cwtl
dec
jno
sbb
movsb
sbb
das
xchg
cmpsb
xor
xchg
xor
cmp
mov
dec
repz
or
inc
js
xor
sbb
test
cmp
fwait
mov
cwtl
mov
mov
hlt
jg
adc
and
jns
repnz
add
daa
pop
jae
sub
inc
mov
ja
add
cli
int3
cs
dec
pop
xor
testl
cs
cmp
cmpsl
cmp
add
jns
sub
repz
cmp
lcall
and
rcll
outsb
sbb
mov
inc
jns
aad
es
fsts
lcall
pop
ret
das
pop
int
rdtsc
mov
aas
jecxz
or
or
fld
inc
out
mov
jns
inc
mov
dec
push
out
dec
cmp
add
adc
xchg
push
test
jne
and
ret
fsubs
jp
push
bound
stos
dec
lock
hlt
ds
adcb
or
pop
adc
adc
push
cmpsl
sbb
xchg
add
outsl
cmpsl
push
sbb
insb
or
out
sbb
jle
jne
inc
xor
push
sbb
jo
or
mov
ljmp
lcall
cwtl
push
icebp
jnp
inc
dec
inc
mov
fsubrs
push
scas
push
insb
push
aad
test
fiadds
mov
pop
testb
stc
pop
ror
fnsave
pop
cli
cmovge
mov
or
inc
push
dec
xor
cmpsb
push
mov
xchg
ljmp
hlt
mov
pop
push
mov
mov
lock
in
cmp
aad
outsb
popf
lret
cmp
in
or
leave
jo
cmp
mov
jg
adc
pop
mov
mov
inc
hlt
mov
testb
pop
push
jnp
loopne
mov
fwait
and
inc
daa
dec
test
int3
dec
clc
ja
add
stos
imul
xchg
push
leave
data16
mov
into
mov
add
aas
mov
cmp
popa
xchg
insb
ja,pn
cmp
lret
fists
lret
add
adc
push
pop
aad
cltd
leave
lcall
mov
mov
or
sub
aaa
add
mov
mov
adcb
subl
add
aam
and
fisubs
js
jmp
insb
add
pop
fsts
dec
push
cmc
test
jp
mov
pop
stos
fwait
test
mov
fdivrp
movsb
xor
aad
stos
in
outsb
inc
mov
adc
sub
xor
nop
fwait
inc
push
dec
and
jmp
cmpsl
inc
imul
sub
add
mov
inc
into
pop
dec
arpl
and
jns
lods
lret
jae
test
lea
jg
push
push
mov
ror
lcall
dec
lds
loopne
xor
in
jle
xchg
adcl
lods
fcomp
sub
arpl
mov
cwtl
imulb
mov
roll
gs
push
mov
mov
mov
pusha
insl
push
add
mov
adc
dec
pop
jg
stos
dec
adc
movsb
movb
ss
int
dec
pusha
lret
add
fsubrl
mov
repz
test
sbb
shr
mov
jle
fisubs
xchg
mov
ficompl
push
into
dec
ret
xor
add
sbb
ljmp
rorb
adc
inc
test
fisubl
stos
push
iret
sti
pusha
dec
inc
cmpsb
icebp
iret
mov
mov
jmp
pusha
jmp
inc
es
xchg
jae
loopne
and
or
add
lods
orl
test
addr16
ja
inc
fsts
cmpsl
cmp
or
jns
imul
mov
pop
mov
ja
inc
fsts
cmpsl
cmp
or
jns
imul
mov
pop
mov
jae
inc
fsts
mov
sbb
imul
mov
aas
mov
addr16
cmpsl
dec
subl
jg
cmp
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
xchg
ja
addr16
mov
push
movl
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
ja
addr16
movl
xlat
pop
pop
andl
aaa
xchg
sub
ja
xchg
ja
addr16
movl
not
pop
xor
push
leave
push
call
in
stc
or
add
hlt
inc
fiadds
adc
sarb
sbb
dec
sbb
xchg
inc
cmp
out
sti
pop
cmp
xor
out
sar
and
call
push
addr16
es
xchg
lcall
push
push
dec
adc
mov
or
addr16
push
push
push
shl
addr16
adc
inc
mov
out
pop
fs
leave
lea
xlat
clc
xlat
call
imul
jbe
repz
sbb
dec
or
lea
xlat
xbegin
outsb
xor
adc
push
push
addr16
test
jg
xor
pop
enter
xchg
lods
inc
pandn
add
addr16
bound
xchg
ja
addr16
movl
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
push
adc
add
push
mov
ret
push
xchg
inc
mov
add
xor
push
repz
repnz
ret
push
stos
imul
dec
lds
je
push
repnz
push
lds
cmpsl
sbb
ret
and
push
aad
rclb
jmp
daa
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
ja
addr16
movl
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
dec
dec
inc
jne
mov
cmp
out
mov
gs
push
cltd
ss
fnstsw
push
outsb
mov
inc
out
push
push
movlps
fwait
sbb
aas
cltd
bound
cmpsl
leave
and
xchg
outsb
jl
and
js
jne
jecxz
jb
jmp
adc
stc
mov
cmp
pop
insl
mov
adc
jp
daa
cmp
or
inc
adc
pop
sbb
adc
sub
adc
es
or
scas
jns
daa
jp
add
inc
fwait
out
mov
jle
mov
je
ljmp
xchg
sbb
int3
mov
data16
psadbw
sbb
js
pusha
sti
subl
and
cmp
stos
lret
gs
hlt
lret
push
pop
sbb
shrb
jno
adc
add
xorl
or
enter
lahf
adc
and
enter
push
nop
cmpsl
movsl
cld
push
jo
fwait
jecxz
aad
xchg
mov
ss
pop
jbe
or
sub
leave
stos
lret
fldt
divl
push
jge
ss
mov
mov
mov
mov
insl
ficomps
cmp
xchg
jg
stos
pop
rorb
loope
cmp
hlt
sub
pop
jbe
push
jecxz
enter
mov
scas
xchg
xchg
in
nop
push
fisubrl
lcall
push
xor
stos
jge
comiss
mov
and
xor
ret
sti
dec
push
pusha
cmpsl
mov
dec
xchg
push
pop
dec
stos
jmp
loopne
pop
mov
pop
pop
das
orb
shll
sub
and
adc
cmc
ss
sbbb
js
rcrb
dec
std
fidivs
and
jae
pop
sub
lret
inc
xchg
addr16
cld
mov
pop
pop
dec
ret
adc
dec
jnp
mov
mov
adc
loope
or
les
loop
adc
push
aas
push
subl
or
lret
test
ds
js
mov
xlat
sbb
hlt
rcrb
pop
add
repnz
add
out
out
loope
fimuls
add
out
das
test
stc
mov
popf
xchg
mov
les
andl
xlat
jno
or
out
out
pop
leave
andb
mov
arpl
aam
iret
and
aad
jecxz
xchg
pusha
mov
ds
outsl
call
mov
sub
cmp
imul
xchg
arpl
and
dec
jns
ret
mov
imul
das
std
fs
adc
pop
push
cmpsl
daa
adc
dec
xchg
imul
mov
xchg
popl
jl
icebp
int3
les
jg
sub
push
int3
sub
mov
pop
pop
jno
int
cmp
or
filds
js
fidivrl
movsl
xor
xor
mov
fbld
outsl
xor
xlat
in
fldenv
push
cmpsl
mov
xor
test
lods
cs
push
xchg
pop
addr16
push
loope
idivl
loop
int3
sbb
arpl
dec
and
xor
push
mov
and
lds
call
pop
subl
pop
sub
sbb
out
iret
or
adc
enter
repnz
insl
mov
outsl
dec
pop
movsl
jae
dec
and
in
dec
mov
scas
mov
xchg
ljmp
idivb
push
ss
faddp
jne
mull
mov
stc
mov
jle
jl
test
stc
push
cs
fs
out
pop
push
dec
add
dec
inc
push
sbb
and
in
mov
jo
pusha
adc
and
dec
pop
jnp
ljmp
inc
aam
into
movsl
adc
adcl
call
adc
push
ret
jmp
push
stc
adc
dec
sub
hlt
movsl
mov
test
jns
in
mov
xchg
or
fwait
lea
pusha
out
or
sub
sub
into
mov
sbb
hlt
mov
adc
push
push
divl
mov
mov
mov
xchg
pop
inc
push
mov
mov
enter
pop
call
decb
mov
stc
xchg
daa
jle
or
inc
inc
sbb
and
push
cmp
gs
push
repnz
add
and
and
jb
mov
cs
rcrl
sbb
jb
jne
shll
mov
rcl
sub
out
inc
pop
xchg
mov
mov
pop
sub
lret
xchg
lret
cmp
jo
jnp
ror
into
mov
add
xor
pushf
iret
mov
pushl
fists
mov
adc
fisubrs
adc
pop
xchg
out
jae
daa
fwait
ds
pop
jmp
bound
cmp
xchg
daa
sbb
add
inc
nop
inc
fcomip
mov
in
or
int3
mov
inc
pop
lea
jae
fucomi
sub
dec
stc
lret
jp
cli
stos
cli
popf
pushf
pushf
sbb
push
aaa
js
nop
mov
mov
lret
imulb
cmp
incl
adc
mov
lret
push
cmpsl
sub
dec
sbb
xor
loopne
mov
loop
cmc
add
shlb
rcll
xchg
imulb
repnz
inc
mov
cmp
cmp
fistpl
inc
sub
popa
dec
outsb
hlt
sbb
push
sarb
fmuls
rol
fildll
push
jo
pop
push
bound
aam
out
mov
pushf
mov
ljmp
loop
adc
imul
scas
repz
lods
lcall
xchg
pop
lahf
xor
push
mov
cmp
cli
mov
adc
or
mov
out
xor
loopne
push
movsl
mov
ret
scas
shl
sbb
sub
sbb
dec
std
sbb
je
lods
jp
push
and
xor
add
notb
ds
sarl
lds
inc
addb
push
orb
pop
mov
adc
test
jno
cmp
mov
int
jae
pop
in
imul
fdiv
sub
rcrb
iret
mov
push
stos
lcall
lcall
jbe
and
sub
mov
push
mov
mov
pop
aaa
adc
or
inc
pusha
jns
sub
jbe
or
mov
xorl
ds
fwait
stos
jle
jmp
hlt
mov
push
adc
insl
test
jle
hlt
cmp
fimull
mov
frstor
lret
add
jl
int
leave
in
test
sbb
pushf
aaa
jb
jo
aas
add
and
jge
xchg
pop
idivb
pop
pop
add
stos
ficompl
mov
sub
push
int3
ret
mov
add
in
daa
push
push
xor
outsb
xor
test
insb
cwtl
imul
std
xorb
cltd
fstpl
adc
filds
sbb
xchg
aad
add
xchg
push
fisubrs
sub
dec
sar
and
lret
jae
sub
iret
push
ss
cmp
mov
rcrl
ret
in
jb
jle
cwtl
int
inc
stc
dec
dec
jo
inc
add
arpl
sbb
xlat
jmp
je
icebp
mov
xor
clc
addr16
push
clc
shrl
xor
pop
das
xor
push
dec
notl
mov
sarl
test
push
mov
aad
or
mov
mov
arpl
ljmp
cmp
dec
fwait
das
dec
push
push
es
loope
or
xor
and
aaa
push
mov
fs
pop
sub
xlat
in
aam
jmp
adc
ds
and
imul
or
ss
mov
call
cld
ds
pop
adc
cli
in
arpl
aam
mov
imul
push
jmp
inc
mov
cld
sbb
mov
lods
mov
out
insb
scas
in
sub
cmc
std
dec
xchg
test
loop
popf
mov
xchg
stos
xor
push
mov
xor
outsb
aaa
movsb
mov
add
fisttpll
dec
je
and
push
dec
shrl
lds
cli
movhps
out
xchg
push
pop
shlb
cmc
outsl
pop
scas
stc
sub
das
mov
cmp
std
pop
mov
adc
xchg
cmp
cmp
aas
push
test
push
outsl
sub
enter
and
xor
xchg
xorb
xchg
mov
fdivl
lahf
sar
aam
das
ss
add
stc
dec
pop
cmp
jg
dec
bound
pop
mov
enter
stc
xchg
xchg
inc
add
cmp
jp
clc
arpl
mov
insb
jae
and
imul
ds
in
in
sub
push
pushf
dec
lcall
push
push
fnstenv
btrl
dec
sub
ret
mov
and
mov
nop
arpl
push
stos
adc
push
mov
mov
jne
stos
xchg
xchg
xor
jns
xchg
outsl
pop
pop
lea
sub
xchg
sti
bound
adc
sahf
inc
insb
sub
mov
out
pop
in
mov
jl
push
push
dec
inc
mov
push
push
sub
lcall
pop
pop
jmp
mov
outsl
pop
xor
sub
dec
push
adcb
es
cmp
xor
cmp
inc
fisttpl
add
pusha
add
push
inc
bound
push
xlat
add
mov
es
dec
xor
es
icebp
sub
sar
mov
aaa
sbb
js
fldcw
jp
push
mov
in
lret
inc
out
test
ret
adc
dec
mov
mov
adc
ret
out
jecxz
sbb
faddl
repnz
out
mov
xor
push
out
insl
push
pop
divl
dec
in
test
jp
mov
data16
cmpsl
cmp
adc
daa
adc
push
inc
out
mov
es
xchg
lret
cmp
stc
cli
dec
test
out
sarb
sti
push
test
pop
mov
stc
das
pop
cmp
test
out
sbb
push
push
repz
add
cmp
lret
xor
dec
cmp
xor
out
add
sub
ds
hlt
fidivl
push
sbb
les
ficoms
test
fistl
test
sbb
loopne
inc
out
mov
out
lds
mov
or
add
int3
addr16
test
mov
leave
xchg
hlt
jg
js
je
fcoms
negb
cmp
cmp
adcb
sarb
imul
jp
inc
push
inc
sub
aad
xor
testb
push
clc
fdivs
cmp
in
cs
out
sbb
sbb
data16
insb
sahf
mov
push
lret
in
pop
jg
out
gs
aad
lahf
dec
dec
leave
mov
jg
xorl
cs
shll
pushf
js
mov
and
mov
jg
js
fsubrs
add
outsb
sub
mov
xchg
xchg
push
mov
sub
xor
add
std
sarl
ja
pop
sbb
lret
inc
loope
lock
inc
mov
mov
jl
mov
bound
comiss
out
push
nop
out
mov
pop
adc
fsubl
shlb
inc
push
mov
adc
pop
jmp
arpl
movb
pop
div
jno
pop
orps
pop
test
test
shll
out
js
cmpsl
les
mov
loope
ret
loopne
outsb
inc
xor
push
adc
jae
and
dec
loope
call
mov
es
and
dec
sbb
pop
inc
push
mulb
adc
cmp
rol
insb
inc
adc
aaa
nop
inc
aad
popf
mov
pop
xor
jo
and
cmpsb
test
xchg
cs
leave
in
mov
sub
ja
jns
inc
pop
flds
bound
mov
daa
cmp
or
mov
test
push
imul
pop
fcom
xchg
xor
pusha
jmp
into
ja
sub
add
and
ss
mov
stc
sbbl
pop
xlat
jb
loope
jmp
mov
sbb
mov
dec
push
in
push
jg
pop
sbb
lds
sbb
shll
pop
adcb
cmc
out
dec
pop
out
out
repnz
inc
xchg
dec
mov
outsb
test
xchg
and
shrl
rcrl
rcr
or
dec
push
out
xor
dec
push
stos
push
xchg
std
nop
jb
adcb
orl
scas
push
mov
xor
fiadds
pop
push
in
insl
test
mov
jp
mov
inc
inc
cmc
add
cwtl
xor
lods
adc
aas
push
rolb
adcl
subl
sbb
dec
mov
shlb
mov
ret
pop
xlat
gs
pminub
sarl
dec
xchg
into
xor
sti
xor
rcll
and
xor
jno
pop
bnd
lret
shrl
xorw
or
ljmp
data16
je
mov
jo
add
fwait
nop
test
xlat
sub
or
aas
mov
cmp
aaa
xchg
mov
cltd
cmc
hlt
jp
sarb
sahf
jnp
lret
fildll
fimull
mov
jecxz
add
dec
cmp
cmpsb
jae
std
out
mov
or
or
xor
adc
and
dec
add
mov
mov
xorl
gs
add
or
jb
mov
add
or
lods
sbb
mov
icebp
cmp
es
mov
push
push
stos
out
xchg
xor
sub
addl
aad
adc
xchg
jle
das
testl
lret
push
movsb
lods
lds
or
aad
loopne
and
or
imul
pop
mov
inc
pop
push
dec
mov
sbb
arpl
mov
out
or
imul
push
scas
ret
push
leave
cmp
and
rep
lock
sub
pop
or
clc
or
leave
scas
mov
lods
int3
jae
repnz
sbb
mov
arpl
insl
test
cmp
call
lock
aad
adc
test
pop
adc
lods
iret
mov
ret
in
jne
aas
aaa
stc
orb
and
icebp
in
in
js
and
ret
push
pop
push
sti
lcall
lds
sti
push
inc
mov
out
inc
xchg
sarl
pop
mov
outsb
aam
outsb
jp
out
sub
add
and
push
stos
jmp
aad
xchg
loop
xchg
imul
iret
pushf
dec
xor
cmp
stos
jg
xlat
pop
test
lds
aaa
std
adc
jge
dec
mov
stc
outsl
scas
inc
sbb
js
push
sbb
jnp
out
add
int
sub
loope
and
repz
pop
arpl
pop
sub
fsubl
add
addl
cmp
dec
sub
pop
mov
add
inc
es
and
fsub
push
cmp
push
repz
nop
outsl
scas
dec
xor
jo
insl
insl
xor
pop
inc
pop
or
loope
loope
popf
enter
fistps
mov
mov
inc
push
pop
mov
cmp
jns
pop
xor
int3
fsubs
arpl
inc
jmp
cmp
fcmovnu
dec
sbb
mov
rep
xor
xchg
fmuls
push
inc
sbb
cmp
nop
cmp
cmc
cmp
xchg
lcall
cmpsl
jns
and
adc
cld
shl
sbb
lea
daa
pop
std
jo
mov
xor
mov
lcall
mov
xchg
and
xor
aas
mov
or
and
fidivl
mov
and
jle
repnz
cli
call
call
mov
sub
dec
mov
jl
jmp
jbe
xchg
push
rcrl
bound
mov
insl
cmp
mov
cmp
in
cmp
cmpsl
mov
lcall
out
or
ret
jmp
cmp
jecxz
sbb
clc
jl
jecxz
ljmp
ss
push
or
cmp
and
sub
xchg
mov
fxch
jle
xchg
leave
imul
fistl
scas
push
popa
clc
dec
mov
mov
sub
sub
das
push
imul
jne
push
pop
leave
imul
outsl
scas
stos
outsb
push
mov
mov
loopne
insb
stos
mov
and
rorl
and
enter
fsubrl
loopne
fldenv
xchg
xor
lock
jno
add
out
das
mov
shll
aas
scas
pop
aam
hlt
mov
pop
jne
jno
pop
daa
sbb
pop
push
lahf
jg
push
push
mulb
jle,pn
push
dec
jb
lahf
in
ret
or
and
or
pop
in
xor
cmp
push
ljmp
push
repz
jns
mov
sub
rcrl
cmpsl
and
sub
lret
adc
js
imul
repnz
inc
in
xlat
xlat
jl
push
push
sbb
aaa
add
push
insb
mov
jecxz
cs
mov
and
fildll
ret
pop
insb
gs
pop
jns
adc
repnz
rcll
push
xchg
jns
pop
sahf
pusha
shr
jl
jo
inc
popl
push
and
sub
icebp
clc
mov
sbb
cmp
and
stos
adc
cmp
pop
mov
stos
pop
in
leave
mov
xchg
std
insl
cwtl
mov
pushf
or
leave
stc
fmulp
into
test
jp
sarl
add
pop
fwait
iret
test
mov
icebp
sub
test
loop
mov
cs
sbb
jg
aad
shlb
movsb
nop
call
jno
cmpsl
dec
pop
lods
in
loop
and
jbe
cmpsl
call
dec
popa
je
lahf
push
cmc
or
mov
cmp
push
clc
jo
mov
shlb
dec
adc
jge
repz
nop
xchg
into
sbb
out
in
cmp
dec
addl
dec
push
clc
sub
push
enter
mov
cmpsb
subl
jnp
call
repnz
aam
jae
mov
aaa
shl
adc
stos
bound
mov
inc
cmpsb
stc
pop
clc
jle
cmp
jno
mov
xchg
cmpsb
hlt
adc
call
inc
andl
call
xchg
repnz
adc
mov
mov
lods
cwtl
ljmp
inc
mov
ret
int3
paddusw
jne
jns
sub
into
add
adc
popf
xchg
lods
jne
hlt
xchg
mov
inc
test
push
dec
nop
iret
lods
xlat
and
ret
ss
adcl
lret
pop
sub
add
jle
loope
sub
ja
cmp
pop
sub
repz
fmuls
pop
fldenv
fsubs
push
sahf
int
jnp
movsb
fisttpl
outsb
sub
mov
xchg
dec
pop
ja
fisubs
sub
je
into
sbb
pushf
jmp
mov
adc
add
pop
add
movsb
cmpsl
ret
outsl
add
sub
icebp
mov
or
mov
add
inc
jns
xchg
out
leave
add
cmpsl
aad
data16
in
cmpsl
xchg
jno
mov
sbb
outsb
scas
mov
xchg
mov
rolb
pop
sbb
mov
pop
jl
pop
lret
sar
sahf
fcmovnb
xor
int3
vpmaxsw
inc
sub
into
push
pusha
xlat
fwait
jbe
outsb
imul
inc
or
xor
out
sub
loop
ja
jg
or
lds
lds
int3
xchg
adc
arpl
in
ret
sbb
shrb
jnp
sub
test
push
xchg
xor
lock
lret
popa
rolb
jne
loop
divl
push
out
mov
xor
nop
mov
jl
insl
sub
xor
rcrb
lock
or
push
mov
repz
data16
cmc
dec
aaa
jle
ds
fs
fisttps
or
push
xchg
pop
fs
test
out
sbb
fwait
xor
sub
orb
push
lret
dec
mov
fsubl
jae
pop
add
add
stos
pop
adc
jp
cmpl
mov
sbb
xlat
lods
outsl
gs
stos
shlb
ljmp
int3
leave
sbb
mov
and
repz
int3
push
xchg
dec
ret
lods
mov
fsubrs
and
test
data16
out
inc
mov
push
fdivs
mov
dec
les
push
clc
sbb
mov
jnp
cmpsl
jbe
sbb
or
add
xchg
out
mov
jg
sbbl
xchg
mov
fmul
jne
movsb
or
fwait
add
pop
cltd
les
jbe
cmp
lock
cld
jno
mov
sbbl
fwait
cmc
mov
stc
pop
out
add
fs
add
pop
xlat
aaa
out
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
ja
addr16
movl
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
ja
addr16
movl
not
pop
pop
mull
out
xchg
inc
xchg
cmpsl
ja
xchg
ja
addr16
movl
not
pop
mov
loopne
push
dec
cwtl
pop
mov
fcompl
call
mov
sbb
dec
cmp
sbb
jns
mov
cltd
enter
call
jmp
pop
sbb
jo
push
imul
cltd
push
test
test
shr
stc
lcall
pop
sbb
dec
xor
dec
push
dec
stc
pushf
cltd
mov
stos
jmp
jno
cmp
imul
ror
ds
repnz
fistl
fmull
add
mov
cmpsl
out
jo
mov
mov
cmpsb
push
popa
mov
gs
cwtl
xchg
cmpsb
mov
push
jno
dec
mov
or
pop
jg
xchg
imul
cltd
hlt
ljmp
enter
call
or
and
sub
or
je
xor
lods
pop
and
stc
push
popa
jnp
pop
jns
cmp
in
imul
and
adc
enter
or
sbb
add
aam
inc
push
cltd
call
leave
cwtl
or
loopne
jp
push
dec
and
out
and
std
fcomp
cmpsl
lds
in
int
out
popa
sbb
or
dec
or
mov
mov
test
sbbl
add
or
pop
pop
ljmp
cltd
test
mov
sbb
js
push
imul
cltd
enter
call
jmp
pop
sbb
js
push
imul
pushf
sahf
and
jmp
mov
adc
xor
decb
mov
pusha
fisttpll
dec
je
test
cmp
scas
sbb
rcll
or
dec
push
js
fsts
push
cmpsl
inc
lret
ds
push
dec
mov
sbb
mov
outsb
cltd
push
fiaddl
cmc
jl
je
jb
js
jle
inc
ret
test
in
push
jge
sbb
or
cmp
add
in
es
pusha
jb
loopne
pop
vpminsd
push
and
lcall
pop
cmc
aad
mov
sbb
das
sbb
cmpsl
insb
ret
lret
aas
xor
and
lea
int3
test
shll
sub
cld
and
imul
sbb
sbb
or
outsb
cmp
ret
xchg
jb
test
pop
pushf
inc
jle
jo
out
sub
lods
mov
clc
int
mov
mov
popf
push
into
mov
fdivl
jmp
push
out
insb
push
sahf
popa
and
mov
or
hlt
mov
sarb
or
dec
xchg
push
push
mov
xlat
fistpl
in
mul
or
xor
out
cmp
lcall
push
test
pop
jmp
sbb
xchg
sub
cmpsl
sbb
push
add
adc
xor
pop
in
fucomip
cmp
mov
mov
xchg
insl
pop
stos
mov
add
subb
cltd
rcl
push
lds
orl
ja
xor
mov
fadd
pop
fs
or
inc
pop
fidivl
sti
fiaddl
xor
add
mov
push
push
jmp
std
adc
mov
lea
cld
sarl
pop
loopne
into
fsubrs
inc
push
sbb
mov
pop
mov
and
pslld
je
jbe
cmpsb
push
aad
mov
shlb
icebp
js
xchg
hlt
repnz
dec
inc
sbb
pop
cs
jne
aad
xchg
cwtl
jl
lods
inc
mov
mov
loopne
ds
int
xchg
popf
sbb
adc
enter
shlb
jo
scas
xlat
movsb
jno
loope
adc
xchg
cmc
data16
pop
pop
jnp
xor
pop
inc
mov
and
in
cmp
xchg
mov
pop
jb
adc
xchg
std
push
stc
or
clc
xlat
inc
out
mov
popf
popl
jne
clc
fildll
jmp
lret
test
mov
add
jl
mov
mov
mov
jbe
or
sbb
xchg
sub
clc
push
cmpsl
jnp
and
push
xchg
ljmp
mov
fbstp
inc
fstpl
ret
lods
jl
add
rcrl
jns
xor
inc
sub
ss
sahf
into
sbb
lea
fadd
popa
repnz
fisubs
fbld
lret
dec
mov
dec
daa
mov
mov
sahf
loope
mov
mov
inc
lcall
out
rorl
stos
sbb
sarb
sahf
xrstor
xlat
xchg
int3
stos
out
push
xor
lods
out
shll
mov
fistpll
out
sti
or
shrb
hlt
test
nop
stos
movsl
je
into
scas
cli
pop
push
push
stos
in
ljmp
jne
xor
lret
inc
and
xor
push
movsl
mov
xchg
cli
js
dec
inc
lret
aas
bnd
or
and
adc
mov
or
gs
cs
xchg
orb
xor
push
push
ja
inc
push
inc
je
jmp
inc
clc
push
repz
fcmovnb
fidivs
inc
adc
jl
lds
cltd
or
xor
test
daa
fs
and
mov
lret
mov
cwtl
or
lea
fists
push
and
dec
pop
xor
push
int3
out
mov
cld
repz
movsb
test
pusha
bound
sbb
loopne
xor
fdivr
out
xchg
or
lcall
add
rcrl
arpl
jmp
dec
push
shl
mov
sbb
testb
adc
adc
iret
js
in
aad
scas
lods
test
loop
xor
adc
or
push
ja
xor
mov
cwtl
in
rol
dec
outsl
das
cli
add
and
outsb
scas
mov
imul
mov
shlb
test
test
nop
shrl
pop
cwtl
mov
test
test
pop
cmp
lret
int3
loope
push
ret
mov
xchg
push
test
call
nop
in
adc
jl
mov
test
fsubs
xchg
sbb
cmp
lea
jmp
xchg
fisubl
dec
jle
cs
mov
xchg
lock
pop
cmp
mov
iret
or
sub
inc
mov
test
idivl
in
push
cmp
sarb
inc
pop
push
out
dec
pusha
or
or
and
dec
sbb
inc
and
push
mov
sub
jecxz
fnstenv
testl
outsl
dec
xor
push
iret
scas
mov
xchg
push
pop
movntq
in
in
cmpsb
xchg
in
in
mov
mov
push
js
inc
lods
imul
mov
nop
adc
mov
cmp
fsubp
pop
push
cld
inc
cmpsl
aad
out
mov
outsb
jmp
aam
mov
repz
xchg
pop
mov
call
insl
lcall
movsb
daa
pop
les
rcr
gs
fldcw
dec
push
popa
sbb
push
neg
shlb
mov
jae
and
rorb
and
lea
pop
cwtl
sub
insl
push
push
push
xor
rol
sbb
lcall
push
and
sbb
rclb
std
test
push
cmp
call
jno
jns
int3
dec
mov
push
das
sbb
mov
sti
dec
xchg
ss
cmpsb
subb
add
js
loop
jbe
neg
mov
pushf
in
gs
fsubl
adc
pushf
fisubrl
test
and
push
mov
shrl
cmp
test
mov
xchg
cmp
pop
sbb
adc
sub
sub
xchg
dec
dec
ss
std
adc
push
mov
dec
imul
idivl
jae
mov
ja
stos
es
adc
in
pop
inc
lret
jnp
add
xchg
ds
sbb
dec
popa
push
fiadds
xor
std
add
imul
xchg
xor
push
inc
aad
sbb
hlt
dec
adc
cmp
das
xor
sbb
sub
pop
xor
sub
imul
cli
and
iret
or
push
mov
int3
dec
ret
into
or
add
pop
pop
fnstsw
dec
test
mov
cmp
push
push
sub
testb
sbb
icebp
dec
jp
pop
popa
sti
or
push
int
xchg
jbe
das
jl
addr16
in
push
sub
loopne
sti
jne
xor
cmp
sbb
aas
mov
jl
cmp
adc
push
lahf
in
sbb
push
sub
inc
jg
outsl
jp
inc
outsl
icebp
jbe
lock
jno
and
mov
fsubrs
mov
aad
xchg
mov
inc
jnp
and
mov
lcall
cmp
sti
pop
jge
lods
mov
lret
sub
pop
mov
in
test
pop
ret
push
cmp
repz
xor
jl
jns
push
movsl
push
and
mov
xor
idiv
pusha
jno
or
adc
scas
outsl
jmp
and
cld
sub
cld
stos
sub
mov
and
ret
mov
pusha
or
fiaddl
pop
push
notl
sarb
notrack
mov
mov
pushf
xor
vmaxss
xor
mov
xor
notl
pop
xor
jmp
movsl
pushf
xchg
unpcklps
notb
shlb
ljmp
cmp
loop
enter
adc
or
sbbl
leave
mov
fdivrl
dec
pop
mov
data16
mov
loop
rclb
repnz
mov
sarl
push
in
push
mov
int3
mov
or
imul
pusha
shl
inc
add
cmp
mov
fimull
mov
jmp
inc
jne
test
jae
hlt
inc
add
cmp
out
leave
enter
xor
sub
in
sbb
lahf
ret
icebp
sbb
dec
rclb
xchg
int3
daa
push
push
mov
or
xor
adc
aas
clc
int
dec
dec
dec
and
mov
jne
sti
cltd
xchg
jecxz
pop
cwtl
or
sahf
repnz
push
jns
xchg
cmp
and
xor
ds
stos
pop
inc
add
xor
scas
ret
cmpsl
shlb
xor
pop
decl
xor
cmc
pmulhw
push
cmc
mov
test
pushf
jo
add
outsl
xor
sbb
mov
lock
mov
xchg
jns
in
lock
mov
inc
inc
push
bound
jo
data16
lahf
sbb
and
in
leave
cmp
or
pop
or
mov
xchg
jo
xchg
fwait
andb
icebp
adc
mov
jp
and
jp
in
mov
pop
sarl
insb
sub
jg
push
and
sbb
mov
in
dec
outsb
mov
in
ret
imul
loop
je
stos
sub
icebp
hlt
mov
xor
lds
jnp
cmpsl
and
xchg
mov
sbb
inc
test
mov
lcall
lods
enter
dec
mov
and
sbb
test
test
push
pop
xchg
sub
inc
iret
adc
popa
sahf
js
cmp
loope
std
mov
jnp
jnp
cmp
adc
or
call
push
and
push
mov
mov
mov
xchg
cmp
sbb
out
pop
xor
jmp
jo
dec
roll
enter
and
cmp
ret
xchg
xor
shrb
xlat
fstp
jl
lahf
xor
xor
ficomps
and
xlat
fistpll
sbb
inc
popa
cmp
out
cwtl
cmp
addr16
icebp
cwtl
or
add
fldl
aaa
jl
pcmpeqd
inc
lods
into
aas
push
sbb
jno
and
sub
mov
fidivrl
adc
jecxz
in
test
in
outsl
test
inc
lea
pop
jne
sub
dec
jb
mov
pop
fdivl
insb
push
mov
xor
lods
jp
movsl
dec
sahf
adc
aad
add
das
lods
sub
sub
cs
add
ljmp
imul
cmp
dec
push
mov
jns
decb
jp
mov
or
imul
loop
jg
out
sahf
daa
and
adc
sub
mov
pop
push
imul
sahf
mov
ja
jno
stos
movsb
out
xor
adc
popa
lret
scas
xchg
pop
testl
adc
sub
fisubs
push
or
data16
pop
test
nop
jae
xchg
or
sub
lds
mov
repz
mov
and
push
sbb
mov
aas
push
pop
or
xchg
cltd
add
pop
in
pop
stc
xor
repz
int
popa
push
xor
xlat
mov
mov
lret
stc
cmc
jl
jnp
shlb
sub
xchg
push
aad
inc
xchg
jbe
movsl
push
ror
cmc
jbe
xor
cltd
xchg
mov
stos
lock
imul
sub
cmp
mov
mov
jno
inc
xor
sub
cmpsl
fnstenv
add
push
mov
adc
decl
sub
and
mov
popf
and
bound
mov
pushf
lods
int
std
cli
mov
pop
sub
pop
stc
aad
xor
or
cmp
ret
mov
inc
xchg
clc
int3
xorl
xor
sub
clc
xchg
stos
push
ja
mov
and
sbb
ds
out
aaa
cmpsb
push
xchg
ret
pop
mov
leave
fdivl
push
pop
ret
cmpsl
push
inc
adc
xchg
xor
dec
enter
test
jne
cltd
push
jb
mov
push
lret
cltd
jl
add
jmp
fcompl
scas
cs
hlt
sti
popf
xor
adc
mov
jns
inc
xor
daa
shr
cmp
push
dec
data16
mov
push
addr16
hlt
cli
sub
xchg
out
stos
sbb
in
push
fstps
adc
jmp
push
cmpsl
mov
arpl
insb
sahf
cs
notb
push
ljmp
push
mov
inc
fildl
jno
xchg
std
jo
and
dec
sub
movhps
dec
pop
dec
jae
pop
jmp
mov
jmp
pop
xchg
dec
mov
imul
dec
movsl
stos
sti
xor
pop
jbe
scas
incb
hlt
clc
adc
mulb
mov
fnstcw
lahf
and
cltd
jle
push
push
in
jmp
xchg
mov
call
adc
mov
dec
and
cmp
aam
push
jbe
push
in
aaa
aad
rcrl
xchg
pop
xor
fs
ja
fisttpl
test
int3
call
mov
adc
dec
sub
test
movsl
xchg
shrb
push
out
stos
subl
push
call
and
lret
push
cltd
setno
stc
in
mov
pushf
addr16
repnz
imul
aam
int
sub
mov
inc
mov
pop
inc
jb
and
sar
insl
push
inc
mov
mov
cld
icebp
insb
aam
call
fwait
clc
enter
pop
xor
mov
int3
mov
cwtl
mov
mov
incb
inc
xor
sahf
push
out
adc
pop
mov
ds
fnstcw
cmp
lcall
cli
movsl
add
add
mov
pop
aaa
mov
int3
cmp
xorb
and
arpl
xor
outsl
cltd
fcmove
xlat
test
xchg
jg
insb
in
or
ss
inc
add
stos
in
jp
mov
push
jne
push
jns
sbb
inc
js
cltd
add
xor
push
leave
jl
daa
stc
cmp
lea
stos
xlat
outsb
mov
bound
int3
ljmp
cmp
les
jmp
mov
mov
imul
out
mov
mov
push
inc
or
int
popl
stos
dec
sub
mov
xor
push
adcb
andb
leave
push
pop
dec
xchg
cmpsl
xchg
sbb
or
in
adc
lock
mov
les
popa
jbe
push
cli
cld
enter
jmp
push
adc
fstps
push
cltd
mov
xor
sbb
mov
mov
or
cmpb
cld
sti
bound
loop
pusha
pop
dec
mov
or
ss
push
xor
xchg
aaa
dec
imul
jne
jo
or
and
cltd
in
lahf
std
push
subb
mov
mov
lock
and
test
inc
inc
sub
cltd
dec
jl
cmpsl
mov
call
push
adc
mov
into
in
js
dec
mov
dec
test
jle
daa
mov
cmpsl
in
imul
adc
push
inc
rclb
dec
fs
adc
push
arpl
xchg
pushf
in
out
lret
pop
js
mov
push
jg
jns
out
mov
mov
jno
xlat
pop
loopne
sbbb
xchg
cld
inc
dec
scas
xchg
lahf
add
mov
test
insb
mov
popf
push
sbb
cmpsb
xor
daa
les
mov
mov
enter
gs
mov
cmc
fildl
xchg
iret
mov
fdivrl
mov
jo
adc
mov
inc
int3
adc
xlat
imul
mov
xor
sbb
mov
aaa
xor
addl
jb
sbb
push
jb
test
mov
pop
jb
das
pop
bound
xchg
lea
call
inc
int
pop
pop
ja
stc
sub
call
adc
add
addr16
cld
adc
and
testl
nop
jmp
into
sbbl
sbb
sub
lahf
cmp
xchg
push
push
arpl
sar
xlat
lcall
popa
dec
movsb
xor
aas
mov
xchg
movsb
mov
out
shl
sub
in
fdivr
add
scas
outsl
pushf
out
fs
push
cltd
mov
loope
lret
cmp
mov
jmp
sub
vunpcklps
sub
aad
fisubs
jp
pop
sbb
mov
mov
pop
into
mov
sar
mov
lods
je
jae
cmp
fcomp
xchg
lods
in
mov
push
dec
mov
insb
mov
dec
mov
sbb
push
xchg
add
ljmp
hlt
inc
jmp
push
xchg
add
push
int3
rorl
aam
nop
push
xchg
lcall
xchg
lcall
hlt
adc
jmp
pop
jl
fimull
push
sbb
adc
adc
aas
push
or
outsl
es
jg
lea
cmc
dec
jnp
push
cmp
repz
and
arpl
mov
or
pop
pop
cs
out
dec
leave
hlt
shll
add
inc
repnz
jecxz
sbb
sbb
aam
pop
das
divb
jmp
xorl
pop
pop
cmp
fwait
mov
cs
push
stos
add
movsl
add
jle
sub
sbb
clc
mov
loop
gs
inc
daa
mov
fldcw
and
outsl
cmp
mov
fdivs
pop
xor
pop
ja
shll
mov
stos
call
mov
dec
lods
cmpsb
cmp
in
loop
mov
jle
out
aad
insb
cmp
or
lret
pop
out
fadds
inc
shlb
cmp
lea
or
rol
inc
jmp
mov
sub
aaa
fdivr
xor
sub
test
mov
and
inc
mov
jo
movsb
test
cmc
ds
fucom
insl
add
mov
mov
xchg
cmp
sbb
ljmp
sbb
xor
jb
jg
xchg
bound
lret
aas
leave
in
fcoms
dec
pop
jmp
pop
inc
fdivr
or
stos
test
mov
into
push
push
cld
mov
jle
scas
incl
push
adc
leave
jle
push
inc
inc
fcmove
jge
sub
rcll
hlt
xchg
movsb
fmull
hlt
aad
inc
xor
sub
sub
arpl
ret
int
pop
xchg
mov
ds
and
sbb
jns
lcall
stos
mov
fcoms
jge
xchg
sar
cltd
daa
sahf
pop
cmp
outsl
cmp
nop
outsb
imul
aaa
sub
jl
xchg
and
mov
jle
inc
jmp
ret
cmp
pushf
xchg
mov
cmpsl
stos
cwtl
ret
sub
int
xchg
lcall
xor
mov
mov
out
fwait
and
jl
jbe
inc
mov
fsubrs
scas
int
sbb
xorb
or
popf
add
loop
loop
dec
sbb
mov
sbbl
jle
sbb
push
pop
or
leave
test
jmp
sbb
dec
test
rcl
xor
or
add
jne
mov
in
mov
orl
int3
ja
mov
xor
mov
lret
rcr
pop
clc
xchg
sti
data16
test
rorl
aas
std
xor
mov
mov
dec
sub
add
adc
imul
jecxz
imul
sbb
imul
sti
mov
call
int3
jl
cmp
sbb
or
aas
lock
loope
push
add
jb
add
push
pushf
stos
jae
cmp
clc
mov
test
xlat
sub
mul
je
push
loope
cmc
push
iret
pusha
pop
fldl
cmp
ret
aad
sbb
and
inc
and
cmc
mov
roll
and
popf
mov
push
lea
test
mov
push
xchg
sarb
scas
fyl2xp1
hlt
das
inc
sub
jns
jno
ss
outsl
cmpsl
in
cmp
push
and
data16
neg
aas
daa
cmp
mov
iret
sahf
add
xchg
and
dec
pop
push
xchg
xchg
sahf
repz
mov
or
pop
push
xor
repz
push
xchg
mov
mov
dec
and
pop
xchg
lahf
push
mov
inc
cmpsb
lock
outsb
mov
pop
jb
pop
or
jecxz
mov
or
rorb
test
aaa
add
sbb
push
ds
fimuls
out
push
jae
mulb
ror
inc
into
into
lret
stc
push
mov
subl
push
nop
outsb
pop
dec
jl
lahf
sbb
movsb
push
add
dec
dec
dec
push
cmpl
jne
call
pop
and
mov
fbld
iret
out
clc
movsb
outsl
jbe
push
add
mov
mov
lcall
add
add
push
testl
aas
sub
pop
inc
jno
jge
ret
jb
iret
push
es
push
int
rolb
or
add
push
jp
loopne
into
popa
dec
andl
popl
xchg
rcr
or
mov
mov
mov
sbb
js
push
imul
cltd
enter
call
jmp
pop
sbb
js
push
imul
cltd
test
cwtl
jmp
pop
sbb
cmp
sbb
or
js
mov
sub
sbb
test
cwtl
or
cmp
ds
shll
inc
xchg
and
out
pop
mov
lods
stos
push
pop
inc
inc
jbe
addr16
sub
sub
fcmovb
lret
out
xchg
lcall
push
pop
inc
dec
jbe
pushw
jns
fidivl
cmp
sub
ret
lret
out
xchg
addl
push
mov
pushw
pop
imul
mov
popa
pop
jne
push
mov
rorl
cmp
icebp
inc
ss
and
xchg
stos
jb
push
imul
pop
and
push
push
lahf
pop
pop
popa
cmp
dec
icebp
movsl
xchg
mov
into
clc
inc
push
fists
mov
cmpsb
out
inc
or
push
les
sub
mov
lret
out
mov
xchg
dec
xor
cmpsb
push
fisttpl
ret
mov
lcall
mov
adc
loop
sub
add
xchg
ljmp
repz
sbb
jb
xchg
daa
aad
aad
sub
mov
cmpsb
daa
add
pop
mov
jp
dec
mov
lds
ljmp
mov
cmpsb
mov
inc
inc
push
jbe
data16
add
sbb
xchg
mov
jmp
int3
hlt
in
movsb
push
xor
xor
push
add
push
cmp
mov
mov
out
xchg
jmp
hlt
xor
pop
sub
sub
push
push
dec
mov
scas
cltd
fwait
mov
mov
cmpsb
stos
push
pop
inc
dec
jbe
pushw
sbb
or
cmp
sub
fcmovb
lret
out
xchg
lcall
push
pop
inc
dec
jbe
pushw
sbb
or
cmp
sub
dec
imul
stc
push
push
push
inc
and
ja
jne
pop
xchg
pusha
ja
out
sub
mov
inc
pop
mov
xor
rol
sbb
and
loop
pusha
mov
dec
mov
cmp
pop
dec
test
ss
add
pop
pushf
aaa
jnp
aam
and
nop
hlt
sub
rep
je
mov
push
jle
cmp
push
inc
repz
mov
syscall
dec
fisttpll
jmp
push
cli
clc
cld
push
xchg
sub
cmp
adc
xchg
lods
dec
addl
mov
in
cmp
jnp
mov
ds
adc
clc
dec
push
div
cmc
sti
sub
mov
mov
ret
lods
push
add
cli
out
mov
hlt
adc
xchg
jne
sub
nop
and
int
out
ja
add
mov
ret
dec
mov
pop
ret
dec
xchg
dec
ds
adc
push
lret
test
or
push
fdivr
aas
repz
inc
fs
incl
push
outsl
stos
push
sbb
in
mov
imul
cs
out
push
cmpsl
sti
in
dec
sbb
leave
cli
dec
sbb
js
les
lcall
mov
sub
inc
cs
mov
ds
adc
add
adc
pop
aam
push
pop
or
into
pop
ss
clc
cltd
add
and
dec
add
and
pop
mov
jnp
out
adcl
dec
jl
cmc
mov
push
jb
scas
idivl
fwait
ljmp
adc
bound
cltd
test
cmp
stos
lcall
hlt
ds
xor
fwait
xchg
mov
mov
call
add
cltd
push
mov
int
xor
aas
jne
lahf
mov
mov
stos
cmc
or
out
jl
imull
movsl
data16
cwtl
xor
les
in
push
push
fldcw
in
mov
out
cmp
cmc
daa
adc
xchg
dec
jnp
sarl
push
or
add
mov
data16
fwait
enter
test
jb
or
or
mov
lock
les
add
fwait
or
mov
xchg
push
bound
ds
fcompl
push
out
imul
add
lcall
arpl
push
in
mov
pop
mov
in
arpl
lret
ret
dec
bound
leave
dec
stc
dec
or
mov
loope
sbb
or
leave
cli
add
sbb
test
repz
ret
and
test
inc
push
cmpsb
test
lahf
fs
into
mov
xorb
pop
adc
inc
adc
xchg
push
sbbl
lods
sub
adc
push
inc
mov
and
jecxz
loopne
inc
push
mov
scas
pop
mov
in
inc
movsl
stos
cld
adc
aas
in
call
shll
pop
js
lret
and
or
xchg
lods
mov
sbb
test
nop
data16
push
mov
int
mov
adc
push
inc
sbb
adc
pop
jnp
push
xchg
fbstp
lea
mov
stc
pop
arpl
imul
in
aas
xor
jns
push
adc
aad
pop
dec
icebp
or
clc
or
pop
lds
daa
outsl
adc
popf
js
ljmp
test
push
ss
loop
jb
aas
pop
cmp
mov
or
out
out
inc
dec
sbb
jbe
addb
jl
mov
mov
add
dec
push
inc
inc
or
in
bound
aas
addr16
mov
cmp
aaa
sbb
pushf
lock
imulb
mov
mov
cmpsl
out
insl
sub
mov
popa
push
jnp
jecxz
mov
inc
inc
out
push
movsb
cli
mov
sbb
data16
cld
jl
mov
scas
outsl
mov
lods
enter
dec
flds
mov
scas
mov
data16
mov
mov
in
rclb
xchg
divb
mov
mov
lahf
pop
pop
movsl
dec
cli
int3
mov
push
xchg
cmc
and
imull
mov
or
cli
or
pop
idivl
add
aas
in
xlat
adc
aaa
dec
cmc
or
mov
ds
mov
dec
or
in
and
dec
xchg
jg
push
pop
popf
lcall
dec
stos
out
jae
out
in
mov
mov
sub
xor
xchg
mov
sahf
adc
ja
dec
fimuls
pop
andb
lods
sbb
dec
and
les
xchg
js,pt
pop
imul
test
xor
push
push
loope
sub
push
or
nop
push
dec
js
addr16
lret
in
je
and
aas
or
ret
jecxz
lods
aad
mov
es
jb
and
xor
lds
dec
ja
xor
pop
arpl
mov
sbb
mov
jg
or
xlat
lahf
xor
fnstenv
in
pop
imul
and
into
inc
jae
push
and
xchg
into
icebp
jle
xor
int
pushf
mov
push
xor
pop
leave
scas
mov
cmpsb
or
mov
fnstcw
adc
add
sbb
mov
imul
inc
fwait
adc
xchg
inc
push
and
repnz
mov
sahf
mov
pop
repnz
xor
push
inc
popa
leave
scas
pusha
jae
pop
je
and
pop
es
push
fbld
push
jns
or
xor
movl
jmp
in
shlb
outsl
loopne
test
add
fwait
adc
int
push
call
jae
dec
lret
jns
arpl
jno
ja
and
dec
sub
xor
mov
stc
pop
cs
mov
dec
in
sbb
sub
outsb
mov
lahf
mov
leave
pop
or
push
dec
enter
sarb
push
outsb
mov
bound
mov
adc
inc
mov
sbb
inc
ficomps
or
and
enter
shl
cltd
daa
outsb
pushl
xchg
lahf
xor
mov
xor
sbb
test
xchg
mov
dec
and
push
push
pop
fldt
xchg
test
sbb
fs
mov
jg
push
or
push
pop
inc
push
adc
in
sbb
repz
jnp
loopne
sub
popf
jl
xchg
mov
loopne
out
mov
gs
or
pop
movsb
mov
orl
xchg
jmp
dec
aaa
not
es
ja
push
flds
bswap
sbb
clc
xor
fmuls
arpl
or
out
ret
mov
mov
cmp
popf
mov
mov
dec
insl
sbb
cmc
insl
cmp
iret
dec
fmull
call
ret
xor
inc
xor
fdivs
sub
adcl
xchg
enter
xor
faddp
insl
pop
adc
pushf
and
cmp
inc
cmc
and
imul
ficompl
pop
mov
sbbb
loop
test
outsl
inc
cltd
sub
rcll
push
inc
lcall
pusha
inc
daa
sub
add
jecxz
out
cmp
repnz
repz
repz
jle
daa
mov
mov
rcr
out
jmp
movsl
loopne
in
mov
push
lahf
aam
push
xchg
test
and
or
push
push
pop
push
call
repnz
fnstsw
pop
adc
push
imul
mov
mov
pop
stc
push
inc
icebp
daa
mov
jg
and
cmp
mov
mov
popf
bound
and
inc
leave
mov
out
inc
cli
push
ljmp
cmp
test
lret
aas
mov
cmpl
fistl
adc
fsubs
mov
gs
addr16
movsl
stos
jbe
jl
cmp
pop
cmp
and
sti
into
or
int
jns
test
mov
test
loop
aaa
sub
sub
adc
add
pop
out
loop
mov
mov
mov
ljmp
ficomps
sub
test
cbtw
adc
test
cltd
lods
cmp
popa
dec
je
xchg
xchg
lods
clc
push
pop
pop
jl
inc
ds
cmp
in
loop
lahf
pop
xor
ds
out
xor
dec
add
adc
rolb
jns
pop
repnz
inc
ljmp
jl
jl
popf
ljmp
push
pushf
sub
bound
iret
ds
int3
pop
mov
jnp
int3
jne
daa
nop
pcmpeqw
sbb
push
mov
ret
fdivr
loop
xchg
outsl
cmpsl
add
sarb
xchg
aam
xchg
inc
or
cs
shr
aas
add
js
enter
arpl
rclb
test
int3
aad
popf
mov
add
push
test
cmp
pop
lods
cmp
sbb
jecxz
scas
fdivrs
sti
jns
xchg
mov
push
lret
mov
movsb
inc
out
out
push
ret
add
and
call
dec
cmp
push
pop
gs
scas
xor
out
jb
lcall
icebp
mov
sbb
sub
jp
mov
lahf
sbb
xor
adc
xchg
inc
mov
stc
lret
mov
rolb
outsl
sbb
xchg
filds
push
bound
push
mov
aad
scas
sub
or
js
jne
pusha
ja
mov
idiv
jo
sbbb
lcall
mov
into
push
xor
and
popa
pop
out
or
xchg
dec
xchg
mov
xor
insb
xchg
dec
ljmp
or
cld
sahf
iret
stc
add
and
lea
insl
mov
daa
mov
mov
cmc
push
test
negb
push
dec
mov
mov
mov
repnz
cli
sub
clc
addr16
int3
je
cmp
data16
mov
sbb
jmp
outsb
mov
xchg
mov
sbb
xchg
fisttpll
ds
mov
pop
icebp
or
add
neg
xchg
aas
insl
mov
icebp
dec
inc
stos
cld
movsb
jle
dec
fmull
add
daa
mov
or
lcall
iret
ret
repz
insl
add
ret
add
adc
hlt
pop
inc
mov
addr16
sub
into
xor
push
and
adcl
inc
ljmp
clc
insb
cmc
push
ljmp
movsb
mov
fbld
push
out
sub
sbb
insb
or
xor
mul
and
pop
fdivs
pop
mov
orl
mov
pop
push
push
stos
cmp
mov
mov
lahf
sbb
js
xor
sub
sbb
and
lods
cmpsb
mov
ss
add
xchg
dec
in
xchg
int
sbb
cld
fstsw
hlt
lret
mov
cwtl
sub
rcrl
pop
nop
xor
arpl
pop
adc
mov
mov
add
mov
fcomps
sbb
jbe
jg
test
jg
jb
xchg
arpl
loop
inc
inc
lea
clc
jbe
and
ret
outsb
test
pop
sbbl
mov
or
inc
ret
fstpt
rcrb
inc
pop
aas
cs
cli
sbb
sub
xchg
xchg
aaa
push
clc
mov
pop
pop
loopne
jno
mov
push
shlb
xchg
imul
stos
xor
jb
and
xor
iret
inc
aam
lea
lods
loopne
xor
mov
stc
jb
lea
sub
cs
dec
in
adc
xchg
or
rcll
clc
cmp
xchg
cltd
cmp
jp
adc
aas
scas
cmpsb
insl
cmp
dec
inc
push
lahf
aad
jbe
and
push
enter
in
xchg
mov
repz
push
fcmovb
mov
dec
fwait
pusha
fisttps
sub
mov
cwtl
or
pop
jo
or
test
mov
dec
cmpsl
and
cld
ret
mov
int3
dec
mov
das
mov
xchg
popf
stos
sub
mov
cli
mov
push
movsl
data16
shlb
push
mov
pop
jnp
inc
in
inc
xchg
aaa
push
orb
stos
mov
test
sbb
shlb
xchg
decb
push
sarb
fsubp
jmp
adc
and
xor
shll
test
pop
mov
sbb
hlt
jp
pop
sbb
jge
pushf
popa
test
andl
repnz
xor
jp
mov
cwtl
std
out
push
push
pop
cmc
jne
sub
in
int
sahf
out
mov
mov
test
repz
and
call
std
ljmp
jg
cmp
imul
mov
lods
insl
xlat
pushf
xchg
lods
shrb
pop
cmpsl
pop
dec
push
lods
add
into
repz
aaa
rorb
test
pop
sbb
sub
and
iret
push
in
lods
push
dec
imul
pop
outsl
cltd
outsb
int3
push
addr16
xchg
push
cmp
dec
pushf
ret
es
je
or
pop
pop
sub
popa
mov
xchg
mov
movsb
push
mov
or
ds
xorb
sbb
ret
jns
xchg
sbb
pushf
lods
sub
popf
mov
add
insl
pushf
dec
jae
gs
sbb
dec
cli
dec
push
jg
and
xor
in
mov
mov
mov
cmp
dec
xchg
lds
mov
adcb
cmp
sub
sub
mov
shlb
lods
pop
jbe
jmp
arpl
pop
cmp
xor
mov
dec
fwait
daa
xor
mov
mov
popf
mov
popa
sub
xchg
rcrl
hlt
mov
add
lret
cltd
shl
enter
or
lret
stos
ja
test
popf
sti
add
and
orl
sbb
stos
fcom
jo
dec
xor
imul
sub
xchg
dec
sub
xor
enter
cmc
popa
pop
cld
mov
lret
scas
mov
lahf
cmp
fstl
leave
xor
push
add
jae
gs
mov
in
or
test
xchg
xchg
or
sub
test
mov
dec
and
lcall
add
inc
int3
mov
xchg
fstl
sub
inc
sub
je
and
mov
jbe
jl
or
add
ss
xor
cmp
pmuludq
mov
sarl
mov
ja
outsb
mov
fidivs
push
mov
fistps
in
mov
pushf
inc
adc
and
stos
and
mov
adc
adc
mov
dec
fidivrs
push
lods
xor
pop
in
jg
dec
jnp
jecxz
push
push
push
sbb
mov
or
repnz
jnp
inc
shlb
xor
pop
orl
inc
mov
mul
sahf
mov
pop
mov
sub
aaa
xchg
or
mov
notl
push
xlat
ljmp
xchg
stos
pop
pop
mov
lahf
fnstcw
inc
cmp
push
dec
inc
out
loope
and
inc
or
dec
jno
jno
adc
sbb
cmp
and
dec
sub
adc
xchg
fwait
mov
in
inc
cmp
loope
fisttpl
leave
mov
mov
mov
jl
out
mov
adc
inc
adc
fisubrl
idiv
popa
push
jae
add
das
repz
cld
mov
sub
pop
and
jo
ret
mov
pop
sub
ret
pop
pop
inc
icebp
xor
mov
and
sbb
mov
push
jl
mov
insl
pop
test
ds
sbb
hlt
addr16
lock
pop
stos
dec
ss
pop
loope
out
mov
dec
dec
shll
imul
lods
rcrb
push
pusha
arpl
es
inc
test
in
into
shl
xchg
pop
mov
mov
outsb
push
jns
sub
jns
adc
xchg
mov
push
rclb
ja
adc
xor
daa
iret
sahf
mov
rcr
stos
mov
jne
mov
fsts
popf
in
loop
adc
push
cmp
scas
mov
inc
adc
or
xchg
adc
repnz
ficomps
xchg
hlt
roll
dec
fdivl
mov
and
or
add
lcall
mov
mov
in
iret
cltd
cmpsl
scas
dec
adc
imul
rol
add
sub
popa
int3
fs
mov
jb
cmp
or
scas
pusha
cmpsb
and
push
in
insl
mov
push
mov
push
mov
mov
out
xor
ljmp
adc
test
fstpl
push
in
gs
jl
fwait
push
stos
push
out
jbe
jmp
fstpl
imul
mov
int
dec
jp
in
bound
imul
insb
outsb
fmulp
ret
sub
cmp
arpl
cmp
cmpsl
jns
add
dec
outsb
pop
lcall
into
or
into
das
outsl
lea
push
mov
insl
dec
test
jb
pop
mov
cli
dec
imul
cmp
daa
push
sub
shlb
enter
cmp
cld
xor
shr
aas
add
mov
and
sbb
movsl
add
aam
adc
jg
mov
fnstenv
je
cmc
mov
lret
push
sub
mov
adc
bound
test
cld
ss
xchg
ficomps
pop
std
sub
inc
adc
imul
fistpll
icebp
ja
nop
loop
mov
and
inc
pop
insb
aad
jp
andps
stos
outsl
and
jb
jnp
popf
jbe
fs
inc
mov
bound
xor
xchg
std
ja
lock
dec
xchg
sub
dec
push
sbb
add
sbb
mov
or
push
mov
jb
aam
jmp
push
mov
or
iret
bound
insb
mov
xchg
cmp
out
insl
push
mov
int
adc
test
test
shll
lea
orl
mov
inc
fistl
add
sbb
jnp
shll
dec
ds
mov
into
out
into
imul
xchg
dec
decl
jns
add
loope
insb
push
xchg
inc
xchg
mov
xlat
fwait
out
dec
or
jmp
mov
xor
mov
jge
push
icebp
cmp
sbb
or
out
stc
pushf
add
daa
imul
out
enter
dec
jle
lea
lods
repnz
div
jmp
inc
int3
mov
ljmp
dec
jns
cmp
aam
mov
jmp
mov
daa
xchg
mov
pop
mov
insl
dec
pop
out
mov
imul
lock
push
fs
in
inc
jle
mov
cmpsb
in
cmp
nop
fs
cmp
fwait
shll
mov
cli
gs
ljmp
adc
add
mov
mov
xor
les
adc
xor
stos
popl
pop
in
out
ljmp
or
or
push
shrb
int3
pop
sub
repnz
mov
out
out
mov
push
aaa
dec
jle
std
inc
fimuls
mov
fwait
jne
xchg
popf
fldt
cmp
enter
dec
out
sbb
cmp
and
inc
into
push
xlat
in
mov
xor
inc
or
cmc
in
and
mov
and
xchg
fs
faddl
cmp
sbbb
sub
jae
outsb
pusha
lcall
dec
add
sbb
mov
test
jae
test
fadd
into
dec
pop
orb
mov
rcrl
ljmp
add
lods
lock
pop
push
mov
insl
push
cmp
inc
loope
cmp
test
sbb
lcall
icebp
out
xchg
rorl
sbb
adc
cmp
insl
cmp
or
sbb
notl
inc
leave
sub
stos
xor
test
out
sti
xorl
lret
aas
out
je
sub
test
dec
push
pop
cld
jmp
pop
jl
lcall
dec
xchg
jnp
jecxz
cmp
cmp
movsb
clc
fidivl
scas
lcall
test
cmp
and
mov
xor
sahf
push
fs
mov
mov
imul
xorl
inc
add
inc
clc
mov
mov
dec
pop
subl
ds
gs
fimull
jae
clc
or
add
pop
xchg
out
lcall
jns
in
aad
adcl
mov
repnz
adc
jp
mov
xor
shlb
push
cmpsl
mov
int3
in
out
mov
sbb
leave
mov
push
pop
push
in
inc
clc
cmp
out
pop
or
jecxz
out
inc
or
inc
or
mov
mov
jl
mov
into
jnp
negl
pushf
je
notl
xchg
push
pop
inc
dec
jbe
pushw
sbb
or
cmp
sub
fcmovb
lret
out
xchg
lcall
push
pop
inc
dec
jbe
pushw
sbb
or
cmp
sub
fiaddl
jbe
out
push
lcall
push
pop
inc
dec
jbe
imul
push
or
cmp
sub
fcmovb
lret
out
xchg
lcall
push
pop
inc
loopne
jp
sbb
inc
lds
repnz
mov
mov
orb
push
adc
xor
and
push
add
mov
mov
mov
mov
ret
jb
bound
push
adc
xor
arpl
push
add
mov
mov
mov
mov
ret
jb
inc
jg
arpl
add
and
push
imul
adc
imull
and
or
mov
adc
mov
fadds
push
mov
aas
jl
or
lret
into
mov
inc
lods
adc
call
or
fs
out
jo
pop
aam
inc
int3
repz
inc
push
mov
xchg
lods
add
dec
lds
pop
repz
cmp
ss
mov
xor
lods
mov
cs
push
inc
aas
jle
repz
or
fucomip
leave
xor
mov
adc
sbb
xchg
cmp
loopne
sbb
xor
mov
aad
add
mov
mov
mov
mov
ret
jb
bound
push
adc
xor
arpl
push
add
xchg
aad
int
std
mov
mov
pop
pop
dec
and
insl
mov
arpl
ja
jb
test
xchg
jmp
xlat
xchg
jmp
ret
add
dec
das
inc
inc
outsl
lds
or
es
xlat
xchg
out
div
lahf
mov
ret
jb
bound
push
adc
xor
arpl
push
add
mov
mov
mov
mov
ret
jb
bound
push
adc
xor
arpl
push
add
mov
mov
popa
mov
cmc
ret
mov
insl
dec
das
inc
sbb
xor
mov
lds
add
push
jecxz
jmp
push
sbb
sti
xchg
scas
lock
adc
add
out
sub
or
pop
xchg
into
test
mov
mov
sub
clc
dec
or
or
add
pop
inc
ss
cmpsl
cmpsl
inc
xchg
mov
cmpsb
sbb
xchg
cmpsb
mov
push
xchg
push
push
sbb
out
cmp
mov
and
popf
js
mov
sub
sbb
push
mov
icebp
inc
inc
jmp
adc
pop
enter
aam
xchg
cmpsb
xchg
std
outsl
xchg
ret
or
fs
push
mov
cmpsb
shll
popf
mov
mov
shl
mov
push
subl
mov
xchg
lds
add
cmpsl
mov
aaa
push
cmc
jno
jl
jge
rcrl
popa
leave
movsb
add
sar
xor
test
sti
xor
mov
into
outsb
mov
adc
push
enter
inc
cmp
xchg
lods
xchg
js
idivb
mov
test
leave
out
adc
cmp
lock
xor
mov
jbe
sbb
ljmp
adc
and
outsb
jmp
stc
scas
jne
icebp
xor
xlat
push
and
shrl
popa
mov
dec
popf
ficoms
mov
inc
mov
xlat
cmp
or
shrb
lds
nop
mov
mov
fisubl
test
xor
fwait
mov
lret
xchg
ja
movsl
or
or
xchg
xchg
xchg
cs
jecxz
and
ficoml
lcall
push
ljmp
sbb
shr
jmp
dec
fisubrl
js
adc
call
jmp
in
lcall
mov
pop
fisttpll
ret
mov
mov
pop
cs
sbb
aaa
into
adc
insl
adcl
dec
fwait
mov
pop
jo
mov
inc
enter
int3
xor
jg
clc
mov
sub
xchg
int3
mov
scas
mov
bound
jge
mov
pop
in
mov
aaa
sub
add
pop
scas
sbbb
movsl
sub
jne
dec
in
or
rcll
add
loopne
data16
test
fdivrl
push
mov
jg
jmp
or
and
or
push
pmulhuw
imul
jae
stos
mov
cli
jle
fwait
test
test
testl
lcall
push
test
cld
mov
test
test
sub
sti
sub
cmpsl
ret
adc
stc
lret
mov
xor
sbbb
orl
xchg
adcl
mov
pop
arpl
fnstenv
inc
outsl
popf
repnz
xor
push
mov
push
aas
outsb
je
imul
inc
add
es
lcall
mov
insl
js
cmp
jo
mov
stos
ja
ret
push
pop
cld
loop
enter
loop
cmovae
adc
inc
fstpt
fiadds
xor
xchg
bound
cltd
mov
ficoml
inc
xlat
dec
push
pop
inc
cmc
ret
fstl
and
push
enter
add
les
divb
cwtl
push
rolb
insl
mov
or
pop
mov
fldpi
lcall
pop
sub
push
lea
lahf
cwtl
pop
jmp
jmp
sub
mov
gs
mov
enter
jmp
sbbl
pop
xchg
push
push
sbb
push
mov
cmc
xlat
test
xchg
add
outsb
mov
push
xchg
push
adc
pop
icebp
pop
repz
jg
aad
hlt
and
sbb
cmp
loopne
fidivl
loopne
push
and
loopne
cli
xor
cmp
imul
sbb
dec
fcoml
addb
jp
lret
in
sub
dec
jnp
jnp
adc
mov
iret
mov
push
mov
cld
std
arpl
adc
push
movups
adc
pop
in
andl
and
scas
and
stc
xchg
push
sahf
dec
in
lds
xor
clc
cvtdq2ps
dec
test
adc
std
inc
test
xor
orb
xor
int
lea
in
dec
loopne
ja
lret
enter
adc
insb
push
or
mov
adc
mov
and
stc
xor
push
jae
adc
push
push
std
in
clc
xchg
dec
push
sub
lret
iret
fmuls
pushf
stc
push
and
mov
xchg
sbb
inc
pop
pop
pop
mov
add
mov
in
add
mov
dec
imul
push
pop
call
test
ss
jb
pop
cmp
jo
xor
push
sub
xchg
dec
push
movzbl
loope
inc
mov
stos
cmpsl
sti
xlat
pmaxsw
jg
push
fldl
decb
xchg
int3
push
push
out
outsl
inc
push
mov
inc
push
mov
negl
lds
xor
aaa
daa
push
jmp
adc
cmp
push
jns
jecxz
out
test
imul
mov
int3
mov
sarl
clc
sarl
lds
jl
test
or
cld
inc
cmp
out
mov
out
inc
push
add
add
jno
add
adc
and
mov
jl
and
test
hlt
lahf
out
add
mov
mov
vcvtsi2sdl
movsb
daa
lock
data16
fldcw
adc
in
outsl
xlat
fbstp
jmp
hlt
pop
insb
outsb
push
xchg
test
dec
lods
xchg
inc
popf
fstpt
xor
test
mov
mov
push
xchg
mov
mov
and
jge
xor
xchg
or
cld
add
mov
add
or
stc
pusha
xchg
mov
shlb
xchg
xorb
mov
enter
jmp
adc
xchg
daa
sti
cmpsb
popa
xchg
cmp
mov
mov
jae
ds
mov
jae
pop
fiadds
lea
stos
pop
xor
mov
shlb
and
inc
add
repz
imul
dec
push
mov
outsb
loopne
data16
jmp
leave
and
loope
std
in
sarb
add
mov
test
jb
adc
sub
mov
fneni(8087
lods
adc
mov
data16
in
sbb
mov
popf
or
lods
ja
and
fisttpl
mov
scas
repnz
fadds
ja
adc
nop
adc
insb
popa
fisubrl
xor
mov
jl
mov
dec
movsb
mov
aaa
int
mov
pop
xor
sarl
test
lcall
pusha
stos
leave
jnp
test
dec
aaa
iret
mov
jb
test
push
scas
xchg
mov
icebp
mov
fiaddl
aad
push
lods
orb
sbbb
nop
xor
jnp
int3
adc
cmp
pop
or
lods
outsb
enter
in
xor
or
mov
arpl
cmp
ss
cmp
je
repnz
popa
jge
sbb
in
les
push
ja
in
ljmp
fcompl
xchg
push
pop
xor
push
jb
or
pop
adc
test
sti
adc
dec
test
mov
mov
adc
imul
xlat
mov
ljmp
mov
fld1
and
je
push
fnsave
push
or
fcomps
jecxz
adc
add
push
loopne
test
add
fs
rcl
mov
or
pop
scas
ds
cmc
and
testb
std
push
stos
popa
je
add
xor
dec
mov
push
mov
orl
jne
inc
mov
mov
popa
inc
dec
pop
lock
ss
mov
clc
mov
cmp
cmp
je
mov
jmp
xchg
cmpsl
adc
and
sub
xor
cmp
ds
and
sbbb
pusha
call
sbb
test
dec
int
xlat
cmpsl
xchg
adc
jnp
dec
repnz
das
xchg
test
or
cwtl
ds
sbb
outsl
mov
scas
sub
in
push
jge
inc
xchg
fadds
push
test
mov
rorb
aam
mov
add
fwait
push
add
mov
jle
outsb
arpl
add
lods
jmp
or
cwtl
jg
push
aas
js
jnp
test
lahf
push
and
pop
imul
mov
push
jle
testl
std
in
movsl
inc
cmc
test
mov
in
lds
fstp
xchg
cwtl
xor
lods
jp
loop
or
mov
ret
sbb
mov
into
xchg
psrlw
lret
fs
lods
adc
or
xor
loopne
sbb
cmp
jno
jl
push
mov
jge
hlt
inc
jno
lods
stos
jecxz
sub
ljmp
popf
addr16
stc
hlt
add
or
iret
dec
aad
lods
mov
dec
and
dec
push
int
subb
lea
inc
mov
jecxz
mov
pop
cli
adc
insb
ret
cmp
sbb
hlt
cs
adc
fcoms
pop
out
ja
add
ljmp
pop
mov
test
sbb
and
lret
pop
mov
jl
test
xor
in
add
sub
insl
stos
jmp
inc
fisubs
jmp
test
movsb
push
pop
sahf
cld
stc
mov
sub
rorl
ds
xor
test
fsubl
mov
pusha
pop
aad
sahf
aas
adc
mov
int3
loopne
cmp
sub
ret
sbb
jecxz
dec
xchg
add
nop
test
mov
ss
cmp
call
dec
add
push
nop
shr
xchg
fists
pop
mov
jecxz
sub
xor
imul
int3
insl
dec
mov
push
lcall
popf
popa
adc
sub
sub
out
mov
mov
pop
jge
int
clc
imul
sbb
mov
cwtl
mov
mov
adc
scas
jbe
stos
std
adc
fstpl
adc
adc
lds
and
hlt
xlat
lds
movsb
sbb
jb
or
movsl
sbb
sub
leave
mov
sub
pusha
mov
mov
loopne
cmp
mov
outsb
jmp
inc
sbb
aas
inc
into
iret
push
or
lret
cmp
loop
xorl
data16
into
repz
rcrl
das
pop
das
mov
sahf
into
push
popl
imul
mov
push
loopne
call
flds
test
fistpl
mov
int3
aad
mov
mov
fstpl
scas
sbb
loop
test
sub
xchg
dec
xchg
fadd
sub
and
and
xchg
xchg
fsubl
pop
jp
jge
and
dec
ret
iret
mov
fstpl
in
jp
or
xchg
ud1
cltd
sub
inc
adc
push
dec
stos
leave
push
stos
sub
test
jb
scas
sar
pop
std
call
xchg
int3
xor
pop
mov
call
rol
pop
lahf
ja
pushf
mov
sysexit
pop
mov
xchg
fstps
jne
mov
and
cmp
enter
sbb
jno
shl
arpl
xlat
pusha
jno
adc
xor
inc
and
dec
xor
pop
inc
sub
into
adc
mov
std
imul
inc
sub
dec
cmp
divl
test
std
jo
std
pop
dec
jns
or
je
mov
andl
loopne
xor
sub
mov
out
cmpsb
pushf
mov
cli
ret
decb
sbb
dec
sbb
inc
sbb
jbe
rcrb
addr16
xchg
lds
pop
add
or
daa
jecxz
flds
xchg
and
inc
pop
adc
daa
mov
movsl
or
cmp
mov
sbb
aas
push
pusha
push
mov
lods
fimuls
stc
loopne
dec
popa
xor
adc
subl
nop
gs
cmp
inc
add
and
mov
cltd
cmp
rclb
push
mov
cmc
cmpl
pop
outsl
and
add
adc
lods
popa
es
hlt
lea
sbb
jmp
pop
inc
xorb
cmp
push
jno
jecxz
pop
popa
clc
dec
sub
jl
jb
ficomps
mov
mov
lock
and
mov
sbb
dec
loope
mov
jb
cmp
in
in
and
inc
jns
pop
scas
push
sub
hlt
fistpll
outsb
dec
add
outsb
popa
fldenv
movsl
in
sub
mov
pop
adc
stc
mov
arpl
iret
sbb
and
add
mov
psrld
mov
popf
cmp
push
jge
and
lds
aaa
insb
sbb
nop
mov
pop
add
and
cld
aaa
push
or
jne
mov
sbb
jne
popa
push
ljmp
outsl
push
pushf
xchg
cmpb
arpl
fwait
fwait
std
fsts
add
sub
ficoms
pop
pop
push
xor
push
xchg
pop
fcomip
push
pop
andb
hlt
in
mov
aam
mov
imul
pop
insb
fcom
sbb
daa
aas
pop
push
or
out
jnp
test
mov
std
push
mov
cltd
push
push
xor
stos
movsl
sub
sbb
dec
sub
dec
dec
dec
sbb
cmp
lock
or
mov
mulb
lret
test
shll
repnz
pop
adc
bound
mov
cmp
repz
lea
cld
xchg
cmp
aaa
jecxz
inc
and
icebp
adc
pop
pop
mov
es
jecxz
jecxz
add
movsb
out
xor
jmp
incl
dec
iret
add
sbb
fwait
or
pop
adc
fcompl
test
in
das
xor
pop
scas
adc
fs
ds
mov
mov
sub
cmp
lret
roll
cli
jle
jecxz
test
inc
and
shll
in
adc
jnp
mov
lds
bnd
dec
push
mov
mov
sbb
adc
lods
jmp
pop
das
cmp
xchg
data16
or
in
int3
xchg
inc
xlat
push
in
imul
test
mov
inc
push
ffreep
popa
leave
in
mov
inc
xor
jle
popa
test
sahf
jle
fistl
aam
mov
cwtl
dec
incb
inc
adcl
in
or
jp
sbb
repnz
push
mov
or
ss
loopne
dec
mov
idivl
cmp
mov
cmp
rcl
xchg
push
jle
in
cli
mov
sbb
and
mov
add
fdivs
iret
inc
bound
sub
mov
dec
xorb
sbbb
sub
jbe
cmp
fs
out
jnp
lods
or
jnp
push
mov
cmp
divb
add
xchg
mov
roll
inc
cld
das
xor
sub
cs
mov
insl
or
dec
and
cmp
mov
sbb
js
jne
imul
shlb
sbb
popa
cmp
testb
loopne
push
flds
popa
xor
mov
lret
in
in
inc
stos
push
pop
xor
loop
insb
lahf
mov
sbb
sub
mov
fwait
cmpb
mov
roll
push
outsb
nop
dec
jge
cmpsl
stc
dec
bnd
clc
push
push
cmp
dec
icebp
sbb
scas
ret
jne
roll
mov
jmp
mov
icebp
cmc
xor
jmp
mov
push
jp
movl
inc
fisttpll
adc
jg
lods
hlt
aaa
xor
xor
mov
jmp
nop
mov
pop
sub
mov
cmp
mov
cmp
mov
lods
dec
cmp
jl
rcll
lock
sbb
push
mov
push
push
lea
loope
scas
faddl
cs
inc
fs
lock
jb
std
cmp
mov
push
paddsw
aaa
jmp
cmp
mov
push
data16
mov
decl
adc
add
and
idivb
loopne
ljmp
cmp
js
mov
jecxz
or
cmc
mov
iret
movsb
inc
mov
out
pop
xorl
pop
cmpsb
jp
mov
adc
addr16
negb
clc
sub
push
xchg
imul
cmp
xchg
inc
bound
ror
pop
sbb
sahf
icebp
div
sahf
jge
iret
lret
lcall
mov
std
sbb
xchg
push
or
xchg
xchg
jp
imul
in
add
mov
cmpsb
jmp
bound
daa
inc
and
filds
add
or
mov
jbe
stc
stc
iret
push
aam
loopne
cmp
pop
cmp
fdivrl
and
pusha
into
int3
scas
or
rorl
mov
or
add
sbb
add
xchg
fwait
xchg
subl
cwtl
jg
push
dec
imul
xchg
sbb
pop
iretw
scas
jmp
add
push
or
and
pop
mov
lds
xchg
movsl
mov
ret
mov
cs
lret
mov
pop
cmpsl
fs
ret
aam
in
jno
pop
push
push
xchg
mov
cld
inc
test
xchg
or
or
jmp
clc
insl
xchg
inc
pop
lahf
xor
js
inc
lods
fs
rclb
ja
adc
mov
lahf
xchg
xchg
insb
pop
mov
pop
pop
push
pop
mov
imul
subb
push
push
push
and
pop
pop
pop
sub
fsubrl
test
rorb
lea
inc
outsb
js
mov
js
adc
shl
dec
xor
repnz
pop
mov
or
je
dec
nop
or
and
stos
jecxz
push
push
stos
xor
mov
or
ss
xchg
xchg
jecxz
imul
xor
push
xchg
sbb
pop
mov
in
outsl
addl
inc
or
cwtl
pop
push
xchg
dec
mov
hlt
push
sti
xchg
mov
notl
outsl
push
add
push
scas
push
cli
andl
arpl
loope
push
outsb
mov
punpckhbw
add
pop
aaa
and
stos
cmp
repz
xchg
arpl
stc
sbb
movsb
stc
int
outsl
shr
icebp
scas
insl
stc
jle
repnz
jne
mov
xor
push
mov
add
lcall
arpl
dec
push
ljmp
fcompl
xchg
mov
cmp
popl
dec
js
sti
pop
jp
jno
faddl
and
aam
inc
dec
test
pop
sbb
push
adc
clc
xor
xchg
enter
out
xchg
in
adc
hlt
or
mov
nop
repnz
xchg
out
cwtl
mov
and
xchg
xchg
xor
sbb
mov
fadd
popa
xchg
addr16
test
jge
cmp
bound
jbe
xchg
das
sub
pop
push
shr
sub
jle
jle
jbe
sbb
inc
mov
in
cli
xchg
mov
push
cs
out
test
stc
or
lret
and
xor
or
cmp
pusha
es
adc
in
scas
pop
inc
fisubl
pop
inc
call
jo,pn
mov
lret
scas
jecxz
or
cmp
sub
mov
jne
pop
movaps
dec
jmp
sbb
inc
push
adc
loope
sti
sub
and
es
lea
add
test
or
sub
lea
shr
xchg
push
out
sbb
push
push
aam
push
mov
out
test
orl
push
in
jmp
cmp
xor
mov
dec
rcl
jnp
push
enter
adc
inc
bound
shll
push
xlat
add
xor
pop
rorb
enter
push
int3
jmp
inc
not
mov
jle
adc
lret
scas
outsb
test
jb
sub
cltd
inc
movsb
je
ret
sbb
call
jnp
lcall
repz
inc
xchg
mov
pop
jbe
fidivs
jmp
mov
sbb
mov
pusha
insl
mov
pop
inc
lock
rolb
lahf
mov
adc
lahf
lods
or
push
sti
sub
js
rclb
mov
cld
cvtpi2ps
cmp
fsubr
mov
nop
pop
imul
in
push
fstl
int3
fldcw
cmp
sbb
mov
loope
fmull
scas
je
pop
dec
sbbl
xchg
iret
and
je
loop
mov
mov
mov
ret
jb
bound
push
adc
xor
arpl
push
add
mov
mov
mov
mov
ret
jb
bound
push
adc
xor
arpl
push
add
mov
mov
mov
mov
ret
jae
bound
push
adc
xor
arpl
push
add
mov
mov
mov
mov
cmp
int3
popf
mov
adc
inc
sti
stos
pushf
ljmp
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
jnp
imul
daa
dec
jecxz
sub
push
xchg
sti
xchg
mov
cmpsl
lret
xlat
mov
out
pop
jnp
imul
daa
dec
push
cmp
ja
or
mov
mov
out
push
jnp
imul
aas
dec
dec
cmp
outsl
sbb
mov
jmp
mov
test
stos
jmp
push
sbb
inc
enter
movups
jecxz
mov
dec
fistpll
das
xchg
dec
xchg
sub
fwait
mov
mov
repnz
adc
scas
adc
ficompl
xchg
xlat
inc
test
sti
jns
lods
popa
daa
xchg
mov
cli
cld
pop
cmpsl
out
push
js
sbb
xlat
mov
out
push
outsb
pop
call
test
inc
sub
and
fwait
sub
push
jl
out
inc
fwait
mov
cmp
cmp
xchg
mov
and
or
stos
push
or
in
out
jo
fdivs
test
jmp
mov
jmp
lret
test
testl
daa
dec
inc
cmp
ja
jle
mov
lahf
jmp
fstpt
stos
in
fwait
out
jnp
bound
xor
and
and
cmp
pop
xchg
sahf
jmp
les
mov
lret
imul
cmp
dec
ja
xor
aam
loop
mov
out
xlat
fsubrs
jb
imul
xor
pop
cmp
ja
or
jmp
stos
negl
pop
imul
daa
dec
push
cmp
ja
or
jmp
stos
negl
sub
mov
push
or
mull
int
sbb
mov
inc
mov
scas
mov
add
adcl
cmp
aas
testl
aad
orb
dec
cmp
imul
jle
inc
fcmovnb
cld
cli
xchg
mov
dec
mov
add
scas
iret
test
arpl
cltd
sahf
push
mov
mov
dec
xchg
mov
imul
rcrb
aaa
mov
iret
dec
xchg
xor
mov
ss
in
cmc
mov
clc
orl
ror
std
sbb
mov
jae
xchg
lret
xor
xor
lret
jge
je
or
push
jp
push
loope
aad
or
repz
ljmp
sahf
pop
mov
loope
and
lds
fldcw
jmp
push
sbb
or
fisttps
push
mov
or
inc
inc
gs
add
mov
stos
push
dec
cmpsl
and
lret
leave
add
push
push
mov
stos
pop
xchg
pusha
sub
test
rol
sub
pop
jno
loope
jo
negl
dec
loop
adc
xchg
xchg
pop
daa
shll
cs
mov
fs
xchg
jae
mulb
xchg
sub
jle
sbb
push
jns
push
add
sahf
add
cmpsl
adc
lods
dec
and
sub
mov
test
call
xchg
or
fdivrl
pop
dec
or
bound
mov
ret
movsl
push
mov
sarl
aaa
jmp
jns
lods
ds
es
pop
shll
xor
loopne
or
mov
pusha
enter
dec
pop
push
lret
cmp
mov
clc
jne
mov
les
lds
repz
mov
xchg
addb
mov
and
hlt
iret
mov
sbb
mov
jnp
jbe
je
shll
jne
test
inc
xor
mov
push
pop
xchg
test
mov
or
ret
adc
add
jmp
idivl
loope
stos
fstl
cli
aad
rclb
sbb
and
mov
ficoms
jp
test
leave
pop
mov
adc
mov
insb
add
stos
push
sub
data16
cli
mov
ss
call
lock
add
ficompl
adc
or
scas
jbe
xor
bound
insb
mov
mov
cmp
rcll
enter
jle
test
mov
idivb
sub
cmp
and
inc
jge
cli
orb
ljmp
mov
movsb
fs
imul
dec
jnp
insb
xchg
lds
sti
xchg
fsts
inc
sbb
xchg
sub
mov
xor
in
repz
mov
in
in
cmp
test
sti
jle
jnp
xor
mov
xor
in
jle
dec
cwtl
lret
push
popf
outsb
sarl
and
mov
pop
mov
int3
mov
lock
cmp
or
sbb
push
push
cmp
in
in
xor
inc
test
sbb
xchg
and
mov
mov
inc
in
push
push
and
mov
lahf
scas
ljmp
and
in
push
pop
imul
rorb
mov
repz
xor
lret
imul
mov
mov
push
roll
insb
mov
mov
ds
les
insb
test
jb
mov
les
fistpll
adc
cmp
cmpsb
cmp
jmp
subl
mov
leave
in
cwtl
cltd
pop
mov
sub
fwait
or
ljmp
push
dec
test
fwait
sub
gs
aad
xchg
fidivrl
cltd
xchg
add
mov
cmp
jl
in
out
pop
jae
test
icebp
mov
or
push
les
sub
test
push
sbb
dec
rolb
mov
cmp
nop
or
std
call
mov
mov
push
in
outsb
insb
xlat
sub
std
sub
mov
out
mov
inc
jg
add
sbb
jb
jmp
fdivr
das
lret
stos
sti
int3
add
rol
je
rcl
jo
ds
pushf
add
mov
xor
inc
fidivs
jne
std
add
mov
mov
push
jmp
gs
mov
movb
mov
push
mov
icebp
add
scas
xchg
pushf
sbb
ss
ja
inc
fwait
inc
cwtl
xchg
cld
jo
aad
call
jnp
rclb
sub
loope
mov
ja
es
push
loop
aaa
stos
mov
test
xchg
pop
push
movsb
dec
or
or
aad
lahf
xor
dec
rcrb
mov
pop
jge
hlt
aas
lods
cli
shl
lret
xchg
mov
push
frstor
lea
xchg
inc
mov
dec
jbe
mov
insl
arpl
repnz
xlat
ja
das
jp
andb
mov
xchg
inc
arpl
sub
aas
jnp
lcall
in
lds
cmp
cmp
dec
fdivrs
inc
jne
pushf
jnp
sub
add
movsl
mov
lods
pop
imull
jmp
std
mov
gs
mov
mov
mov
movsb
inc
or
jo
stos
movsl
push
sub
ficoml
mov
pop
popa
jg
push
cmp
testb
fldcw
jns
adc
cld
aam
adc
das
ror
and
adc
dec
xor
push
mov
xor
std
mov
out
xlat
push
and
add
pop
fmuls
call
cmpb
xor
outsl
rorb
add
inc
mov
sti
ret
out
jb
rcrl
xchg
mov
in
and
in
dec
sti
and
aam
fs
adc
divl
mov
mov
push
dec
pusha
mov
in
cmpsb
mov
fs
arpl
lret
xchg
mov
xchg
pop
int3
jnp
rcrl
lahf
fwait
jne
or
inc
into
fwait
push
mov
pop
std
out
add
cmp
pop
mov
in
lods
push
inc
lods
adcl
add
xchg
cmp
lds
ja
mov
sbb
mov
sbb
pop
and
iret
sarb
movb
out
aad
pop
dec
repz
jg
mov
jnp
scas
inc
jb
xor
movsb
adc
mov
setle
orl
ret
mov
push
stos
or
ficomps
iret
out
mov
cmp
xchg
lods
mov
std
mov
iret
mov
adc
pop
std
pop
adc
sub
dec
insb
in
fstpt
pusha
mov
pop
out
iret
and
jl
aas
inc
jmp
mov
pop
inc
cmp
inc
inc
leave
dec
addb
repnz
mov
cmp
push
pop
sbb
dec
push
or
push
sub
mov
outsl
aam
pop
jne
xor
lock
dec
and
lahf
sbb
jns
in
cld
pushf
push
push
jo
lahf
pop
sub
and
test
and
mov
mov
xchg
cmp
bsr
loope
sbb
or
adc
mov
fwait
lds
cmp
fs
movsb
arpl
jns
fcomps
mov
out
das
jle
push
xor
js
dec
xor
mov
mov
jecxz
mov
pop
lret
dec
mov
mov
mov
pop
loope
out
gs
jg
push
test
add
fwait
xor
sub
and
or
or
loope
imul
lret
jg
sub
fucomi
fildll
fucomi
pop
fstpt
cmp
cmpsl
in
xor
xchg
fsubp
imul
aam
lock
lds
dec
pop
es
mov
pusha
hlt
xchg
sbbl
jmp
fdivrp
sub
clc
or
lea
call
adc
subl
sarl
loopne
add
sbb
in
adc
push
mov
in
movsb
pop
pop
mov
xchg
cmp
jb
inc
push
push
xor
xor
test
ficoms
push
inc
pop
pusha
hlt
insb
ds
insb
fisubs
arpl
push
nop
adc
jns
test
jg
push
inc
jnp
mov
les
fs
rclb
test
es
and
or
mov
add
add
or
pop
incl
in
jne
mov
jmp
xchg
mov
mov
dec
fcomps
mov
or
scas
ss
js
pop
pop
mov
nop
imul
push
lret
cmp
bound
aam
ficompl
mov
into
in
lret
ret
jg
dec
lret
jle
in
sbb
jns
cmpsl
divb
add
xchg
add
mov
lods
dec
dec
dec
add
jg
in
test
add
jp
mov
lods
arpl
sbb
js
int3
aaa
push
or
add
jg
mov
xchg
nop
cwtl
insb
popf
mov
fsub
and
push
cltd
sbb
add
push
add
stos
jns
popa
enter
clc
adc
pop
jns
sbb
movsb
and
cli
mov
adc
pop
mov
insl
xchg
fimuls
fsts
adc
dec
xlat
fadd
fdiv
ja
loopne
jl
dec
loop
mov
jle
cmp
pop
aaa
imul
dec
data16
fidivrs
fildll
inc
cmc
pop
dec
add
or
inc
fdivs
daa
inc
shrb
aam
incl
fisttpl
cwtl
mov
cmp
stos
int
mov
packsswb
mov
pop
or
and
adc
cmp
xchg
xor
jne
xchg
cli
clc
sub
ljmp
xchg
pop
aam
jle
inc
push
and
mov
xor
in
dec
cltd
test
xchg
jnp
in
adc
sub
sbb
inc
loop
aam
in
arpl
xor
sub
add
xor
outsb
pop
aas
push
sub
mov
xchg
xchg
inc
adc
out
jne
cmp
push
push
or
pop
sar
pop
xor
sbb
inc
mov
es
lret
or
sub
push
pop
jo
or
cmp
mov
cmc
popf
mov
xchg
push
or
inc
pop
sbb
adc
adc
cld
jecxz
push
inc
imul
in
xchg
mov
mov
addb
push
aad
cmp
inc
sub
in
xor
in
stc
inc
mov
loope
mov
lcall
movsl
dec
pop
sub
adc
jge
cmp
loope
xchg
add
adc
cwtl
repz
clc
gs
cwtl
ljmp
pop
outsb
sub
push
jae
add
push
sarl
or
nop
add
test
hlt
jge
in
xchg
arpl
leave
xchg
pop
fbstp
pop
jl
push
aad
icebp
cmc
stos
mov
lds
std
insl
outsl
insb
adc
gs
pusha
add
cmp
jle
pop
mov
cmp
imul
jle
pushf
cwtl
push
push
lock
sbb
daa
dec
fsubrs
jecxz
mov
inc
pop
pop
sub
hlt
sub
into
cmpsb
push
aaa
repnz
or
cmp
xlat
jo
out
sub
push
add
xchg
fdivs
xchg
xlat
outsb
fidivs
test
lds
into
cmp
xor
leave
xlat
loop
stos
sbb
inc
icebp
cmp
push
sahf
mov
inc
mov
pop
data16
xor
jecxz
arpl
fimull
or
mov
std
call
cmp
mov
inc
fs
xor
mov
add
lods
fsubrl
lock
lahf
fildll
sti
mov
push
popa
push
push
int3
mov
ds
inc
jmp
inc
mov
mov
das
xchg
fidivrl
xor
pusha
pminub
mov
adc
or
cmp
movsl
jp
movsl
cmpsb
dec
dec
xchg
push
in
outsl
dec
and
pop
rcll
es
and
iret
and
rcr
mov
xchg
inc
push
es
mov
outsb
xor
jo
fwait
lret
int3
lods
push
out
sbb
push
mov
fwait
push
push
arpl
cmp
ret
pushf
cs
add
or
adc
xchg
mov
pop
leave
xor
cmc
subl
aam
scas
mov
scas
mov
mov
pop
fisubrs
insl
sbb
push
pop
out
test
mov
jge
xchg
popa
pop
sub
rcl
ret
mov
jmp
adc
testl
mov
aas
aam
insl
pop
daa
xor
shl
dec
ja
fisubrs
adc
mov
in
sub
add
mov
ds
sbb
outsl
dec
pop
push
jb
mov
add
pop
jo
ss
iret
sbb
adc
in
jnp
cmp
xchg
movsl
call
mov
pop
lods
fbstp
and
jns
mov
xor
in
xchg
stc
out
adc
push
and
inc
jle
into
push
js
sarb
sub
out
lods
push
sub
dec
insb
icebp
out
push
mov
mov
jae
icebp
mov
push
daa
pop
inc
cmp
push
divb
sub
xchg
push
adc
cwtl
or
hlt
mov
aam
cs
inc
rolb
jl
add
sahf
mov
sbb
inc
mov
sbb
push
sub
mov
std
jns
enter
inc
jns
add
xor
pop
push
ds
push
test
and
cmp
adc
push
or
lret
adc
push
xorb
repz
pop
repz
clc
lret
fidivrs
push
rclb
lret
lahf
mov
mov
adc
movsl
sub
lds
fcmovnu
mov
jg,pn
xor
int3
fwait
pop
mov
inc
hlt
mulb
push
jo
test
and
add
testb
push
add
cld
sahf
mov
jbe
lock
adc
lahf
nop
pushf
and
loop
sub
dec
scas
xchg
inc
xchg
xlat
loope
xchg
sbb
pop
inc
lret
xchg
cld
repz
mov
adc
es
out
mov
cs
fidivl
test
add
lods
adc
test
jb
mov
mov
pusha
mov
add
and
adc
repnz
imul
jle
cmp
adc
xlat
sub
jecxz
orb
stos
add
iret
cli
dec
clc
pop
scas
mov
mov
mov
test
dec
jmp
mov
cmc
push
mov
mov
cld
ds
ljmp
xlat
or
stos
cmp
rcrl
pop
addr16
add
std
fnstcw
jbe
inc
repnz
push
mov
inc
lret
cmp
push
mov
bound
sti
xlat
xor
xorl
add
add
push
inc
cmp
lcall
jg
adcl
sahf
popf
pop
das
jbe
movsb
jge
mov
pushf
or
arpl
movsb
ja
jmp
addr16
loop
ret
inc
sbb
xor
mov
mov
inc
dec
sub
cmp
sub
fwait
or
xor
lcall
sub
xor
or
ret
ds
jmp
mov
ret
cmc
mov
mov
cs
push
dec
int3
aad
or
je
lret
test
shlb
add
xchg
pop
pop
iret
mov
ret
adc
js
or
add
arpl
push
repnz
xchg
jb
push
andl
sti
dec
inc
pop
dec
sub
daa
pusha
ret
dec
jns
sub
test
cwtl
pop
xchg
and
mov
mov
cmpsb
gs
xlat
les
outsl
jbe
insb
jl
jmp
adc
jp
shrb
mov
mov
inc
leave
sbb
pushf
lds
ljmp
test
std
int
push
push
pushf
inc
push
mov
lock
push
push
mov
inc
mov
imul
push
add
and
or
inc
sbb
xchg
in
jl
clc
jbe
je
fld
pop
add
jno
into
xchg
das
xchg
sbb
add
xchg
cmpsb
pop
sbb
pop
cmp
mull
mov
dec
mov
dec
je
call
or
stc
mov
cs
lret
insb
lret
mov
roll
xchg
clc
xchg
lahf
faddl
lret
jp
out
xchg
fs
mov
cwtl
js
jmp
sbb
fstp
call
nop
stos
mov
lods
dec
adc
in
xlat
dec
cmp
push
popa
push
ds
mov
cmp
jecxz
lret
clc
add
js
mov
outsl
and
sub
sbb
int
jge
lock
sbb
fdivp
add
push
push
inc
shlb
test
push
icebp
cmp
push
jl
aad
sub
daa
adc
cmp
out
cwtl
rorl
and
xchg
cmp
pop
test
pop
mov
scas
ljmp
and
imul
cli
or
jmp
imul
in
ss
push
xchg
jmp
aam
push
popa
inc
leave
loope
lds
lcall
insl
loop
bound
dec
xor
or
adc
sahf
daa
fisubrs
int3
add
insb
dec
lret
dec
sub
sbb
jp
xor
mov
iret
or
imulb
addr16
out
lahf
mov
cmpb
mov
and
xor
test
je
lods
mov
add
mov
cmpsb
and
insb
std
pop
pop
and
push
int3
and
add
or
mov
dec
dec
inc
jb
dec
aas
xchg
push
push
cmp
cs
rcll
cld
mov
push
ss
mov
mov
or
repz
jno
cld
jecxz
loope
or
or
dec
loop
xchg
dec
push
or
loope
mov
adc
mov
sub
aad
in
push
xchg
inc
ficoml
ss
fisubl
mov
in
shll
xor
and
mov
push
loope
stos
ds
pop
jmp
cmp
jnp
mov
xchg
gs
push
adc
push
cli
sub
mov
rorl
cmpsb
lret
and
out
aas
cmpsb
orl
mov
fdivl
fnstsw
cmp
out
dec
ret
rcrb
push
xor
pop
sub
fisubrl
divb
pop
pop
mov
push
les
sbb
imul
adc
mov
arpl
mov
rorb
fbld
xor
jno
int
or
dec
into
rcr
push
and
dec
push
mov
aad
jle
pextrw
mov
adc
sti
xlat
sbbb
xchg
lods
in
roll
enter
push
mov
vfrczsd
fcmovnb
jns
out
arpl
das
mov
cltd
pop
cltd
out
mov
movsl
xchg
push
sbb
dec
mov
loope
xchg
dec
push
and
dec
dec
stc
and
jl
dec
insb
aam
ss
cmp
mov
enter
js
xor
push
cs
mov
xchg
xchg
xor
ficompl
out
mov
mov
mov
fsts
jno
test
shlb
add
add
and
xorb
sarl
cwtl
fsubr
and
mov
fstl
add
xorl
jb
dec
out
mov
add
xor
jmp
stos
mov
dec
mov
pusha
pop
push
push
ret
out
loop
cmp
pop
mov
or
clc
sbb
cs
add
adc
sbb
jns
cmc
arpl
sub
jne
add
inc
lock
cmp
int
cld
adc
shll
ja
fnsave
mov
in
arpl
in
or
and
data16
jno
cmp
xor
inc
xor
data16
and
cmp
xchg
fwait
inc
xchg
ss
dec
insl
outsl
xchg
mov
sbb
mov
push
sarl
adc
cmp
sbb
je
mov
mov
mov
leave
fists
pop
ja
dec
pusha
cwtl
sub
fisubl
xlat
pop
jg
mov
lock
jno
pop
in
cltd
aas
lret
xchg
cwtl
enter
ja
pop
add
fwait
and
mov
mov
pop
push
ss
push
cmpsl
lret
cmp
js
les
adc
aad
fsts
iret
mov
fsubrs
ljmp
inc
ja
das
or
pop
stc
dec
push
dec
mov
push
scas
bound
arpl
pop
push
push
ficoml
pop
call
mov
jl
fsts
mov
ljmp
add
fdivs
mov
sar
stc
sub
add
add
jl
ret
pop
add
or
inc
xchg
ljmp
mov
mov
inc
dec
bound
dec
cli
aas
dec
mov
daa
dec
push
cmp
ja
or
jmp
stos
negl
pop
imul
daa
dec
push
cmp
ja
or
jmp
stos
negl
pop
jmp
dec
push
cmp
ja
or
jmp
stos
negl
add
dec
push
cmp
negl
out
push
push
or
jno
cmp
or
sbb
je
or
imul
mov
mov
jb
adc
and
cmp
cmp
sbb
imul
mov
jb
jmp
cli
add
xor
and
lret
and
adc
add
jb
bound
stos
push
mov
out
out
pop
les
jbe
inc
mov
pop
sahf
cmp
arpl
inc
js
mov
cmovb
popa
lahf
ljmp
sub
mov
or
or
mov
lods
inc
mov
push
jb
pop
daa
ret
cmpsb
dec
cmp
and
addl
fistpl
fs
adc
mov
addr16
mov
cmp
dec
xchg
outsb
xchg
mov
mov
mov
outsb
cs
mov
xor
lret
push
les
cmp
negl
dec
lret
inc
mov
inc
adc
adc
and
inc
or
daa
stos
mov
repnz
cmp
lea
loop
xor
and
lds
rorb
jmp
loop
xchg
popa
orb
mov
xchg
imul
lret
sub
and
pop
mov
xchg
jg
seto
jecxz
fidivs
fistpll
cmc
pop
xchg
add
mov
sbb
daa
push
nop
test
pop
out
pusha
mov
add
rorb
ret
sbb
dec
mov
mov
mov
jmp
sti
add
xor
and
sarb
ret
sbb
imul
mov
mov
jmp
sti
add
xor
and
sar
rcll
jae
inc
sbb
hlt
jl
mov
jne
lods
xor
jg
mov
or
push
fists
lahf
out
push
aad
mov
xor
push
push
rcrl
mov
and
dec
pushf
cld
push
movsl
fnsave
ljmp
insl
andl
pop
pop
xchg
addl
mov
rcrb
adc
xor
jl
add
or
cld
cltd
or
lock
cmc
ret
pop
push
fldt
jb
dec
mov
mov
loope
mov
and
dec
insl
inc
push
repnz
push
movsl
fnstcw
fwait
push
hlt
push
push
hlt
lods
mov
test
add
sbb
out
test
ja
mov
cmp
mov
cmp
in
dec
push
lret
js
repz
jae
inc
or
dec
imul
pop
or
cmp
pop
idivb
xor
arpl
xchg
lock
mov
cmpb
and
js
push
sbb
mov
loope
xchg
pop
call
jg
cmp
mov
dec
pop
inc
ljmp
inc
push
mov
fs
inc
rcrl
mov
subl
in
clc
cld
shl
sar
sbb
movsl
push
xor
gs
push
xchg
test
aam
push
test
push
xor
fsubs
dec
xlat
cmpsl
in
out
mov
mulps
ljmp
cwtl
loopne
sub
mov
arpl
or
cli
mov
loope
ljmp
std
cmp
and
cmp
int
cli
mov
pop
lahf
mov
adcb
push
adc
ret
sbb
add
mov
in
push
xchg
stos
ds
insl
jmp
loopne,pn
mov
das
mov
cmpsb
xchg
and
out
xlat
mov
bound
sbb
cmp
xchg
adc
gs
out
je
sbb
mov
mov
adc
add
adc
push
dec
xchg
mov
dec
cli
mov
mov
test
xor
int
fbstp
push
lds
dec
dec
sub
sbb
pop
push
shr
or
es
xchg
cmpsl
push
or
inc
mov
cmp
cmpsl
lcall
inc
arpl
inc
pop
inc
pop
inc
cli
sar
mov
mov
pop
sub
rolb
jecxz
inc
pop
sub
sbb
or
insb
ret
into
xchg
popa
sub
int
dec
pop
mov
sbb
imul
loope
outsl
pushf
leave
outsb
and
jle
mov
push
das
pusha
negl
jecxz
add
in
or
shr
sbb
inc
cmc
pop
sbb
loope
or
in
in
clc
mov
mov
cmpsb
xchg
cmp
lret
rcrl
sti
test
push
mov
pop
cmp
jnp
dec
dec
xor
pop
and
ss
subb
incb
enter
hlt
shl
jbe
push
fadd
popa
lock
push
fwait
clc
popf
dec
sbb
loope
and
jecxz
fbstp
inc
pushf
in
sar
shlb
jmp
fs
sbb
test
jge
inc
push
andb
pushl
sahf
mov
cmp
inc
pop
clc
cmp
mov
out
and
mov
jnp
or
in
fsts
mov
test
loope
adc
dec
out
popa
out
iret
lret
stos
aaa
outsb
add
mov
negb
insl
lds
in
push
ret
inc
cmp
dec
dec
pop
jmp
cmp
cmp
cwtl
pusha
xchg
das
fdivl
add
jne
or
mov
dec
enter
sub
scas
cmpl
mov
lcall
cli
xorb
mov
aad
and
xor
mov
les
nop
mov
inc
mov
adc
cmp
xchg
jae
ljmp
cmp
push
std
push
or
dec
mov
jbe
jge
ljmp
repnz
sub
out
fidivs
mov
lret
gs
jb
fldcw
ja
rcrb
xor
or
push
imul
sub
and
rcll
addr16
iret
in
mov
movsb
dec
out
fisubrs
in
scas
adc
or
or
jns
out
test
sub
cmpsb
sub
lods
lds
iret
lea
push
sbb
pop
popf
fidivrl
push
pop
mov
mov
out
inc
xchg
inc
mov
sar
imul
lods
mov
inc
sbb
push
aas
mov
scas
mov
icebp
mov
lcall
jb
push
mov
dec
mov
xor
dec
xchg
lock
lods
dec
jecxz
dec
push
movsl
ljmp
and
pop
filds
xchg
cmp
dec
cmp
push
mov
and
es
xor
lahf
add
data16
clc
sahf
push
stos
jb
or
lcall
cltd
xor
xchg
sbb
mov
ds
mov
xor
fwait
add
or
lret
add
add
ljmp
push
fldt
cli
or
roll
push
pusha
enter
cbtw
sti
pop
in
inc
xchg
xor
lods
push
cld
shrb
mov
rcr
mov
fdivr
push
pushf
dec
push
scas
ret
xchg
mov
fucom
out
lret
inc
jnp
xchg
outsb
fmul
imul
jp
pop
sarb
dec
popa
xchg
mov
ret
ror
cmp
ficomps
add
mov
arpl
xor
mov
mov
rep
adc
jp
ja
or
cmp
and
mov
cmp
push
fwait
cmp
dec
clc
dec
scas
insl
adc
add
push
rcrl
adcl
dec
out
add
mov
cmpsl
rclb
out
xor
jmp
jge
daa
cmp
pop
pop
mov
pop
add
and
inc
jne
stos
or
sub
cmp
add
movsb
sti
pop
push
dec
ja
sbb
add
loopne
push
adc
ljmp
ret
loopne
pop
lcall
sub
pop
sub
push
push
les
jecxz
iret
es
insl
add
call
pop
cltd
jl
out
sti
call
mov
arpl
lret
adc
mov
or
pop
sub
dec
push
mov
mov
ljmp
mov
mov
jbe
test
push
stos
push
movsb
jns
movsl
jmp
jno
add
insb
pop
and
sbb
xchg
dec
jmp
ret
and
aad
xor
sbb
roll
cmp
shl
es
sbb
dec
or
add
nop
xchg
jmp
adc
sbb
pop
add
mov
in
call
pop
dec
push
push
pop
cmp
test
mov
mov
xchg
sub
push
or
xor
push
lods
scas
popl
std
loope
cmpsl
scas
ss
adc
fistpl
jno
mov
xchg
xchg
ret
insl
bound
and
mov
je
nop
jo
jb
outsl
pushf
jmp
pushf
xchg
dec
mov
loopne
out
jno
push
add
mov
sahf
cltd
fadd
rorl
add
iret
mov
pop
and
or
leave
xchg
cmc
mov
fisttps
cmp
cli
mov
xchg
push
daa
push
in
pop
jg
adc
loope
mov
das
repz
sysenter
fldl
fdiv
cmp
sbb
aam
xchg
outsl
xchg
ljmp
add
and
sub
jae
arpl
imul
shlb
or
test
mov
into
int3
dec
xchg
ficoms
inc
insl
outsb
rolb
dec
cmp
jle
push
sub
pop
jmp
outsb
adc
mov
xchg
imul
jno
adc
js
ret
cmc
sbb
ljmp
jg
mov
cwtl
mov
xchg
daa
mov
loope
inc
sti
pushf
pop
jp
popa
mov
dec
add
fmul
std
out
or
dec
add
or
repnz
iret
mov
cltd
ljmp
or
imul
inc
shlb
gs
inc
xor
pusha
sub
adc
das
inc
mov
pop
or
dec
mov
mov
leave
pop
push
cs
imul
push
test
out
int3
lcall
add
push
and
dec
cmp
cmp
inc
icebp
add
jo
clc
inc
xchg
in
ret
stos
cmpsl
cmp
lret
insb
xchg
in
xor
jp
jecxz
dec
adc
sti
and
es
xor
movsl
pushf
shrl
dec
lahf
dec
into
mov
xchg
jp
pop
fisttps
fsubl
bound
xlat
push
pop
ficoml
pop
cwtl
mov
jle
adc
in
jl
fiaddl
mov
in
xchg
xor
xorb
add
loop
fsubrl
jo
mull
xor
mov
sbb
and
aad
pushw
add
push
pop
xchg
sub
jne
loop
std
daa
mov
sbb
mov
incl
xchg
mov
jb
mov
push
leave
sub
dec
pop
repnz
stc
or
es
test
push
dec
mov
jmp
test
pop
mov
inc
mov
mov
or
pushl
inc
pop
mov
mov
xor
cmp
dec
leave
sub
dec
aaa
les
imul
jnp
push
aaa
sub
imul
lods
pop
xchg
mov
adc
outsb
sti
notl
sbb
popf
into
push
ljmp
into
idiv
xchg
jmp
xchg
sub
fadds
mov
sub
outsb
xlat
mov
pop
pop
cld
out
in
mov
pop
out
scas
stos
jle
push
push
xchg
out
mov
pop
xchg
push
adc
shll
sub
sub
push
sbb
mov
outsl
rolb
and
addb
into
ficomps
and
in
xlat
pop
je
mov
and
bound
scas
sar
mov
icebp
push
subl
push
inc
dec
sub
pop
xor
aad
or
sbb
mov
stos
dec
and
push
ljmp
jb
xor
outsl
add
mov
pop
data16
jmp
cmpsb
iret
es
loop
js
add
lds
cli
add
aam
xchg
imul
addl
inc
in
aam
ds
adc
fmull
iret
js
jp
lea
repz
mov
insl
xor
mov
ret
jns
out
sahf
push
inc
pusha
insl
aad
mov
ss
adc
xchg
mov
cmp
or
xor
pop
push
fstpl
add
aad
cwtl
mov
cmp
js
lods
sbb
mov
in
mov
add
mov
sub
pushf
push
push
in
int3
and
pop
xorl
ret
inc
adc
sbbl
pop
jg
nop
mov
lock
lock
sarl
push
aas
js
das
jnp
inc
pop
out
sub
xor
jecxz
popf
pop
jge
add
cmpsb
stos
leave
sbb
mov
mov
gs
dec
or
int
stc
lahf
daa
push
xchg
inc
fsubs
sub
test
add
mov
gs
sub
jp
aas
or
ficompl
xchg
frstor
pop
mov
xor
sti
outsl
xchg
mov
inc
ror
enter
cmp
jns
add
lcall
call
xchg
push
xor
mov
and
es
out
mov
test
sbb
push
sub
int3
xchg
jbe
cmp
push
lock
and
and
or
push
xchg
lods
mov
pusha
shlb
cmp
call
push
sbb
into
push
test
pushf
push
pop
mov
sbb
sbb
push
adc
cs
cmpb
stos
shrb
sahf
mov
xor
lds
jo
in
mov
mov
cmc
stos
sbb
jecxz
out
inc
sbb
add
mov
mov
jmp
sbb
fsubrp
xchg
stc
push
lea
aad
jge
outsl
mov
sub
movsb
outsl
push
insl
movsl
mov
push
lock
aaa
add
add
jb
lds
icebp
pop
fdivp
jbe
jb
push
cmp
or
cltd
std
xor
scas
sub
adc
in
sub
jp
sub
fstps
and
mov
jae
pop
movsb
lods
pop
mov
jb
push
mov
int
ret
jle
push
sarl
rcl
dec
add
inc
sbbb
frstor
stos
jmp
ljmp
ljmp
push
sbb
and
movsl
outsb
xor
xor
lea
gs
pusha
sbb
mov
out
fistl
pop
jae
cmp
test
roll
dec
dec
pop
sbbb
aaa
inc
add
push
in
popa
fcoml
jae
icebp
xor
loope
cmpsb
mov
pop
xor
and
fwait
int3
mov
cmp
mov
sbbb
aas
mov
test
mov
loopew
insl
adc
les
dec
movq
push
cmp
es
repz
inc
stc
jbe
outsl
push
mov
pusha
xchg
sub
mov
pop
mov
or
mov
cld
scas
xchg
test
adc
movsl
lods
push
jo
movb
ss
rcl
shlb
or
pop
jns,pn
push
test
pop
mov
jge
or
shll
sti
jb
dec
aaa
push
xlat
dec
loop
push
xor
test
sbb
loop
icebp
mov
sbb
dec
push
outsb
push
sahf
add
js
sub
dec
cmp
lods
rclb
xchg
jo
sub
lcall
push
jle
in
bound
and
cli
add
insl
shr
pop
mov
xchg
mov
arpl
decb
fwait
mov
add
cli
mov
call
not
inc
pop
shll
cld
addr16
mov
mov
jbe
enter
addb
inc
dec
fadds
clc
cltd
ret
sbb
ja
xchg
or
mov
jl
mov
sub
je
pop
das
and
mov
push
rorl
dec
sub
xchg
adc
insl
push
mov
bound
rcrl
or
loopne
pop
jle
cmp
cltd
push
mov
or
rcl
lock
mov
ljmp
sar
sbb
std
andb
shll
mov
sub
int3
inc
pop
cs
punpckhbw
movl
adc
or
sub
in
add
sub
pop
movsb
and
rcrl
pop
outsb
jge
nop
cmpsl
xor
mov
js
divb
subb
xchg
or
adc
lea
dec
xor
sar
repz
inc
stc
pop
ds
iret
leave
mov
scas
jbe
jnp
mov
mov
cmp
cmp
lahf
popa
add
cwtl
pop
inc
stos
aad
aaa
movsl
test
fisubrl
xor
js
cli
outsb
pop
ljmp
sub
insl
sti
stos
mov
call
arpl
jmp
push
jl
lret
hlt
sbb
lahf
das
lods
xlat
ss
popf
imul
inc
push
cmp
xchg
pop
add
outsl
jl
in
sahf
mov
xchg
jg
and
xchg
frstor
jno
fiaddl
push
roll
mov
dec
mov
testb
call
pop
mov
push
das
and
pop
test
repnz
out
xchg
in
mov
icebp
inc
pop
cs
dec
pop
push
dec
outsb
push
dec
lcall
push
add
lret
jno
fsubs
fistl
sub
pop
adc
iret
testl
push
movb
insl
pop
sbb
dec
addb
in
pop
icebp
dec
xchg
std
ljmp
aad
in
inc
mov
xchg
popa
jno
sub
xor
cmp
lahf
lahf
jne
mov
rol
pop
inc
mov
xchg
shlb
popf
pop
loopne
push
jp
sti
sbb
cmc
mov
dec
pop
mov
in
mov
inc
push
stc
xor
call
adc
lods
icebp
or
dec
lods
cltd
mov
or
repnz
and
dec
popf
ss
mov
dec
insb
fisubl
sub
pop
icebp
and
jmp
push
jae
xor
cmpsl
add
inc
xor
add
cltd
xchg
pushf
push
and
out
or
xlat
movq
test
jno
and
jecxz
adc
clc
mov
lea
pop
shlb
add
cmp
cmovno
and
lcall
xor
and
imul
popa
jnp
les
inc
cmp
aam
jp
xor
daa
cmc
xor
cmp
fdivrl
and
out
outsl
cltd
inc
arpl
icebp
jbe
sbb
stos
cltd
xchg
mov
cmp
or
mov
pop
ret
sub
and
add
sub
inc
or
ror
icebp
add
mov
pop
adc
aad
sarl
xchg
jne
adc
push
in
es
mov
mov
add
mov
mov
out
pop
adc
or
fs
sbb
sub
or
sub
out
cmp
aas
jae
fimull
pop
pop
dec
scas
sbb
out
sbb
xor
pop
jg
mov
mov
xor
pop
or
test
dec
jg
jecxz
paddb
sub
loope
ds
pop
xchg
push
adcb
fsubs
and
mov
pop
into
out
fs
mov
stos
dec
cltd
gs
push
popl
out
adc
test
xchg
clc
pusha
mov
mov
jle
jno
js
push
add
repnz
movsl
loope
mov
sbb
push
aam
and
jecxz
shl
add
jge
mov
jle
aad
inc
hlt
pop
mov
cmp
push
imul
jne
out
popf
sbb
leave
xchg
js
jmp
push
push
pop
or
ds
sbb
mov
inc
xor
pop
loop
add
or
and
ljmp
scas
push
dec
out
imul
push
jg
push
das
cwtl
jb
arpl
bound
repnz
shl
sub
push
in
jae
rolb
and
mov
popf
push
mov
pop
daa
test
inc
inc
outsb
dec
jns
dec
jle
mov
cmpl
mov
icebp
cld
test
inc
int3
test
xchg
dec
andl
jo
ret
lods
cld
out
and
stos
ds
insl
ret
insl
pop
push
xchg
or
jge
repnz
push
popf
mov
lcall
sub
das
lds
in
push
xchg
stc
sbbl
xor
hlt
mov
adc
dec
adc
emms
push
pop
lea
jno
cmp
inc
pop
and
push
mov
or
pop
sbb
inc
sti
daa
or
js
arpl
fbstp
inc
fdivl
daa
jge
lods
sahf
nop
pop
repnz
aad
in
dec
bound
adc
sbbl
jno
ljmp
mov
pop
lods
jnp
adc
mulw
mov
pop
sbb
dec
and
pop
mov
into
pop
or
xchg
jl
lcall
repz
inc
cmp
sub
jmp
filds
rol
int3
jnp
cltd
cmpsb
jbe
or
push
pop
dec
or
sub
pop
dec
jmp
aad
inc
imul
test
push
jnp
aad
pop
sbb
push
fwait
data16
lret
dec
addr16
in
insl
sub
call
dec
pop
sub
in
cmp
inc
adc
cli
sub
imul
clc
jmp
mov
adc
pushf
repz
gs
lock
pop
mov
jp,pn
fxch
cmp
push
inc
rolb
or
cmp
and
bound
sbb
ret
lret
xor
mov
mov
inc
aad
popf
arpl
pusha
or
xchg
inc
aad
popl
fsubrl
imul
mov
xor
dec
loop
cmp
ficoml
cmp
mov
dec
push
push
testl
cmp
cltd
mov
adc
inc
out
dec
or
ret
and
mov
fisubs
jno
mov
in
mov
push
cli
jle
jne
ljmp
rcll
jae
lods
inc
insb
daa
insb
loop
xchg
add
mov
inc
mov
jecxz
or
xor
push
adc
movzbl
sbbl
dec
stos
adc
sbb
loopne
add
pop
movsb
dec
pop
movsb
xchg
xchg
mov
clc
pop
gs
pusha
stc
cltd
mov
push
mov
aam
jge
pop
mov
sbb
inc
dec
das
lods
mov
jb
vfnmadd231ss
ret
sbb
imul
mov
mov
jmp
sti
add
xor
and
sarb
ret
sbb
imul
mov
mov
jmp
sti
add
xor
and
sarb
ret
sbb
imul
mov
jb
data16
incl
lret
ss
negb
loop
xchg
jnp
lret
mov
bound
call
pushf
lcall
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
daa
sub
rcl
fildl
mov
or
add
push
add
add
xchg
add
iret
add
add
add
add
add
push
fadds
pop
add
xor
pop
add
add
add
lods
push
cmp
add
inc
add
add
add
add
stos
add
add
pop
add
sbb
xchg
add
add
add
add
cmp
xchg
add
int3
add
add
dec
add
add
push
pop
add
add
pushf
add
push
out
add
xchg
pop
cmp
sbb
mov
pop
add
add
add
sahf
add
add
push
testb
add
add
add
add
imul
adc
pop
add
add
add
icebp
add
add
add
mov
add
add
jo
js
sbb
ret
add
add
dec
add
add
add
jo
and
and
or
push
add
add
add
rolb
xor
rolb
fadds
arpl
jnp
push
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
push
ret
add
add
outsb
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
jno
test
aam
dec
add
add
sbb
dec
add
pop
add
and
sbb
int
pusha
add
add
add
je
aam
dec
add
add
add
add
xor
xor
push
xor
aaa
add
and
and
pusha
add
add
or
add
add
add
add
in
add
add
add
add
add
add
pop
xor
adc
add
xchg
add
add
dec
add
sbb
add
add
add
ds
add
add
add
add
popl
add
dec
add
push
pop
add
push
add
testb
add
js
dec
add
add
mov
add
add
add
add
add
push
pop
add
add
push
xchg
mov
add
addl
xor
add
add
add
add
add
add
and
xchg
add
mov
add
add
add
ret
add
pop
add
add
add
add
cwtl
add
add
add
add
and
imul
mov
xor
add
pop
add
add
dec
add
push
add
pop
add
add
add
dec
add
or
inc
add
add
add
or
push
add
add
pop
add
push
mov
add
add
addl
and
and
or
jo
sbb
sub
pop
add
adc
add
add
sahf
add
add
and
cltd
add
cmp
dec
add
add
add
add
add
add
add
add
push
and
addl
movsl
add
jae
jo
insl
add
add
sub
lods
add
mov
push
cmp
insl
add
mov
add
push
add
add
add
gs
jae
xchg
aam
pop
or
jnp
insb
es
xor
scas
jns
sbb
clc
ffree
mov
aaa
ret
mov
pop
dec
xchg
pop
dec
pop
or
out
xchg
cmp
mov
mov
pop
jg
inc
mov
iret
sbb
into
gs
push
sub
inc
jns
unpckhps
pusha
iret
aas
jp
enter
and
imul
loop
mov
cmp
addr16
mov
mov
int
push
pop
push
sub
inc
int
in
jb
inc
outsl
ljmp
sbb
dec
test
xchg
add
add
xor
fsubrl
sub
das
mov
sub
push
clc
mov
int3
in
call
jae
push
stc
je
pop
or
iret
test
add
call
mov
insl
into
fisubrl
mov
xor
add
adc
xor
arpl
pop
test
or
mov
adc
inc
das
push
mov
xor
data16
lahf
lahf
pop
adc
mov
outsl
jne
add
mov
imul
fdivrl
lods
std
repnz
mov
mov
push
pop
call
inc
outsl
cmp
out
mov
mov
inc
inc
jno
mov
mov
xor
idivl
add
in
push
ss
jbe
lahf
jp
inc
xor
or
jecxz
bound
adc
rol
pop
xlat
loope
or
sahf
and
icebp
inc
mov
inc
movsl
call
sub
inc
mov
or
xchg
lods
dec
jns
lock
enter
mov
andl
dec
in
jle
frstor
idivb
ja
adc
out
mov
sub
jnp
adc
mov
jb
fdivrs
out
cmp
ret
xor
lcall
mov
idiv
icebp
shll
cli
out
xchg
fs
mov
shr
inc
sbb
pop
cmp
jb
jecxz
mov
xchg
mov
mov
xchg
in
jecxz
xchg
sahf
xchg
ja
ss
mov
shl
pop
sarb
push
sub
or
push
jl
mov
xchg
fistps
dec
add
jae
lcall
adc
dec
loopne
ret
mov
dec
sbbb
std
sti
inc
and
adc
xchg
aaa
shlb
or
adc
inc
insb
or
mov
cmp
inc
mov
push
je
cmpsl
and
dec
sbb
orl
arpl
dec
mov
or
stos
sbb
push
notl
dec
bound
jmp
mov
mov
sub
clc
daa
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
