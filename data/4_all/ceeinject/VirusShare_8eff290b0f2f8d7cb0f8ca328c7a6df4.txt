call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fsubl
int3
aaa
cld
pop
in
pop
xchg
fucomip
sbb
mov
mov
xchg
insb
xchg
or
cmp
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
and
mov
xchg
xchg
or
xlat
fdivrl
int3
cs
pop
in
setl
outsl
mov
cmpsl
outsl
xchg
or
or
sbb
jg
jg
inc
mov
cld
bound
mov
movsb
daa
mov
jbe
imul
imul
push
adc
pop
mov
pop
rorl
xchg
push
push
jge
and
movsl
dec
leave
in
pop
pop
jbe
repz
cmpsl
pop
mov
in
jmp
dec
mov
jns
enter
inc
hlt
addr16
in
lods
shrb
xchg
sbb
jb
cmp
enter
arpl
lods
add
daa
aas
pop
pop
inc
dec
icebp
jg
cs
in
out
xchg
sub
loopne
xor
call
popf
mov
pop
rcrb
inc
mov
fisttpll
pop
pop
sti
lds
rcrl
xor
daa
cld
push
in
pop
pushf
mov
inc
lods
dec
pop
cmpsl
dec
scas
jl
insb
mov
or
cmp
sub
mov
bound
push
shrl
sub
sub
sub
lcall
mov
lahf
je
js
addr16
cmp
xor
gs
rolb
loop
xchg
jmp
imul
mov
arpl
ja
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
lods
and
adcb
in
mov
dec
out
ds
dec
inc
lahf
add
xor
mov
adc
int3
std
aaa
in
rclb
nop
test
add
insb
outsl
push
fucomip
mov
loop
cmp
or
shrl
and
jno
cwtl
call
pop
in
and
mov
mov
jne
int3
pop
aaa
mov
pusha
adc
subb
js
sbbl
add
pop
sbbl
xor
loope
ror
xchg
mov
das
jp
mov
hlt
data16
mov
sbbb
dec
enter
out
jo
inc
xor
cli
fwait
push
add
fcoms
fisubrs
mov
xchg
adc
cli
inc
sahf
out
xchg
and
push
in
test
clc
inc
add
xchg
out
add
cmp
dec
dec
sub
aaa
in
out
out
pop
fldl
xor
icebp
push
or
adc
dec
adc
scas
ret
lret
mov
xchg
inc
leave
int
push
cwtl
adc
in
dec
xor
mov
sbb
rcl
fsts
lods
mov
xor
sahf
ret
pop
leave
rcll
out
scas
imulb
sub
pavgb
xor
addr16
mov
push
hlt
push
rolb
loopne
push
pop
mov
cli
loop
adc
fstpt
lods
arpl
cmc
dec
cli
cltd
dec
je
ds
xchg
inc
or
iret
cmpsl
pop
xor
loopne
pushf
jae
ljmp
sbb
loopne
jg
mov
adc
inc
andb
pushf
sbb
sbb
cmp
clc
mov
dec
addr16
add
pop
fisubrl
add
js
js
cli
sbbb
pop
push
xor
out
push
insb
or
jno
loope
mov
pop
adc
sbb
xchg
xchg
gs
nop
mov
out
sub
dec
jp
jo
lock
ret
adc
cld
push
jne
add
jle
lcall
and
push
ja
es
xchg
gs
js
dec
adc
cs
mov
cmp
loope
imul
out
enter
adc
push
xor
imul
cmpsb
inc
and
xchg
mov
add
mov
stos
lret
jno
sbb
enter
in
iret
and
sti
or
repnz
inc
jnp
bound
sub
sbb
lret
jnp
mov
sbb
push
in
repz
js
ja
jns
jg
testl
lret
push
adc
jg
testb
dec
sbb
test
add
daa
ss
loopne
xchg
ds
rcrb
rdpmc
lea
mov
mov
add
pop
push
mov
xchg
lcall
mov
test
mov
dec
pop
icebp
ror
add
divb
dec
test
fisubrs
xor
jle
popa
test
cmp
add
mov
enter
lods
or
imul
nop
sbbb
or
inc
popf
je
mov
subb
les
xlat
mov
cmp
pop
sub
pop
outsl
and
inc
mov
outsb
sub
icebp
sub
enter
lds
pop
push
imul
lods
mov
cmp
add
push
add
scas
sbb
jmp
rep
int
lock
xchg
iret
popa
adc
nop
xchg
adc
push
test
repz
rorb
sub
mov
or
loopne
ljmp
cltd
jmp
movsb
cltd
inc
xor
fs
cmc
in
int
xor
mov
bound
jl
push
iret
or
leave
fisubrl
and
jbe
stc
mov
imul
and
sub
mov
pop
adc
imul
mov
cwtl
jae
icebp
xlat
insb
xchg
mov
stos
cmp
mov
cmpl
ficomps
push
cmp
ljmp
das
daa
popf
shrl
jo
pop
repz
sti
dec
cmp
jl
cld
sub
lcall
sub
ret
dec
daa
pop
pop
xchg
imul
imul
les
mov
mov
pop
dec
lret
inc
adc
aam
pop
mov
jle
shll
cmpsb
bound
push
daa
movsb
movsl
lcall
stos
rcll
pusha
push
andl
mov
and
pop
es
push
enter
xchg
fwait
and
adc
adc
gs
mov
jbe
das
cmp
jle
setae
int
push
xchg
in
xchg
xchg
fs
adc
inc
popf
lods
xor
jle
mov
in
cmc
cmp
fmuls
cmp
sti
sub
jo
push
mov
dec
lock
pop
data16
xor
sub
and
mov
repz
cs
fdivrs
movsl
xchg
sub
xchg
xchg
rcrb
or
lods
mov
cmc
pop
jge
enter
xchg
pop
je
adc
rclb
jns
stos
xchg
pusha
sbb
sahf
adc
enter
sbb
mov
fisttps
mov
mov
xchg
sbb
or
gs
aas
sti
into
or
clc
push
cmp
xchg
cmp
adc
jle
inc
repnz
mov
aaa
out
sbb
push
and
scas
pop
push
cltd
xchg
sub
sub
in
shll
ret
mov
cld
pop
stc
fcmove
aad
enter
mov
jns
fcompl
fstpl
dec
inc
jbe
imul
add
lret
mov
cmp
fldcw
fld
testl
or
filds
push
rcrl
cmp
cmpl
cmp
in
or
cmpsb
xchg
xor
stos
pop
fdivrl
in
lds
arpl
das
pop
xor
xchg
popf
inc
or
sbb
es
repnz
js
cmpsb
cli
dec
mov
add
stc
mov
in
mov
cmp
int
add
outsb
shll
outsl
fs
xchg
cltd
mov
rolb
xor
clc
mov
gs
inc
call
stos
insb
dec
enter
lods
das
fsubl
add
adc
adc
pop
jl
jno
out
test
mov
aam
out
in
mov
cmc
ret
mov
test
les
and
mov
repz
arpl
dec
scas
in
rorb
mov
pop
xchg
in
inc
sarb
pop
sub
subb
add
cmc
lcall
add
jmp
ret
insl
and
ds
inc
cld
pop
add
push
test
sarb
mov
inc
cmp
daa
aad
xchg
xchg
pop
add
dec
add
sbb
cmp
test
mov
les
push
dec
test
sahf
mov
dec
shlb
sub
sbb
mov
jo
pop
int
dec
cmp
mulb
ds
dec
loope
insl
mov
add
ret
dec
loopne
cs
jnp
fldt
outsl
fidivrl
outsl
mov
in
inc
mov
push
sbb
xchg
rcl
pop
jno
add
inc
jp
in
test
xor
add
rorl
dec
or
dec
dec
iret
out
inc
dec
out
icebp
jecxz
push
dec
mov
mov
outsb
jbe
nop
cmp
dec
cmp
jae
ds
ja
xor
adc
jmp
popa
cltd
dec
or
out
mov
pop
xor
fnstcw
in
jp
or
das
and
mov
jne
shrl
aad
mov
cwtl
push
lret
es
sahf
cmp
cmp
xchg
std
loope
pextrw
sbb
sub
stc
mov
fcoms
xchg
into
mov
xor
mov
inc
lcall
stc
sahf
outsl
nop
push
les
inc
jecxz
pop
outsb
test
aas
push
cld
jns
add
into
fdivl
or
out
pop
insb
or
dec
inc
out
ljmp
dec
xchg
test
jmp
hlt
adc
inc
inc
stos
mov
stos
in
pushf
and
push
ljmp
mov
add
dec
jo
ljmp
or
in
jmp
pushf
dec
mov
mov
ss
hlt
aaa
mov
add
add
aam
jno
mov
mov
daa
mov
push
dec
mov
outsb
inc
mov
test
jecxz
xchg
inc
cmp
mov
push
mov
pop
mov
sub
cli
repnz
lods
sbb
add
add
out
js
sub
dec
dec
sub
adc
xor
sbb
push
sbb
sub
inc
pop
enter
lahf
repz
mov
dec
in
inc
insb
pop
add
dec
pop
push
xchg
dec
jnp
insb
sbb
js
in
aad
into
mov
clc
xchg
repnz
dec
hlt
fprem
adc
sub
sub
sub
mov
rcrl
mov
popa
inc
test
loopne
outsl
call
xor
push
into
shl
test
cmp
ret
jo
arpl
repnz
fucomip
push
dec
fisttps
fsubl
cmp
sbb
dec
sub
out
mov
adc
cmpsb
mov
fcmovne
fs
xchg
and
testl
shl
inc
cmpl
xor
jl
cmpsb
in
in
xor
push
cmp
adc
lods
push
clc
ljmp
nop
nop
mov
push
test
push
pop
sub
aaa
cmp
mov
int3
xor
aam
push
imul
repz
arpl
add
adc
pusha
push
pop
or
sub
mov
sbb
xor
dec
icebp
int
mov
dec
sub
std
ror
cmp
mov
inc
jae
push
test
orl
cmp
fistps
mov
jno
adc
cmp
jmp
dec
cmp
orb
add
mov
out
xchg
pop
les
mov
mov
add
jo
jmp
es
and
loope
dec
add
add
mov
mov
or
pop
mov
xchg
cmp
cmp
frstor
pop
mov
ljmp
gs
fidivs
jp
ficomps
outsl
cli
and
lods
fwait
popa
mov
ret
sub
jle
sub
add
mov
and
aam
movsb
iret
mov
pop
jl
lea
adc
frndint
in
mov
or
insl
cmc
scas
push
adc
iret
inc
repnz
inc
sub
xlat
data16
in
xor
jl
rcll
pshufw
mov
sbb
push
push
fucomip
aas
mov
ficompl
cmp
or
or
push
push
add
arpl
dec
fwait
xchg
cmp
push
add
popa
xor
push
jo
daa
push
into
test
xor
popa
and
dec
inc
sahf
aaa
xor
popf
mov
inc
sub
jbe
dec
fs
mov
cmp
inc
daa
mov
sbbb
lods
inc
mov
imul
jecxz
mov
add
xchg
xchg
out
outsb
sbb
push
dec
cwtl
or
sarb
or
pushf
fbld
fstps
inc
mov
out
lods
jl
xchg
and
mov
testl
sub
cmp
pop
insl
cmpsb
jae
out
movsb
inc
mov
dec
test
fsts
or
mov
jge
das
sub
mov
stc
inc
and
enter
or
mov
mov
sbb
mov
subl
sub
leave
fmul
jg
les
mov
sarb
dec
loop
dec
mov
imul
jge,pn
mov
daa
bound
loopne
or
sbb
pop
insl
add
dec
sti
int3
mov
movsl
fcoml
in
mul
lods
inc
leave
jnp
push
inc
addb
adc
adc
call
xlat
mov
int
jo
ds
fwait
push
lret
push
dec
cmc
cmp
mov
lcall
push
lods
imul
jnp
stc
ret
lock
mov
mov
outsl
jge
test
mov
dec
in
and
ret
sbb
add
hlt
test
adc
or
or
lcall
xlat
lret
cmpsl
jbe
repnz
jge
xor
sub
std
pop
cmp
dec
and
xchg
and
jno
test
out
mov
aaa
mov
sbb
mov
dec
inc
sub
xorb
sub
mov
lcall
sub
mov
push
push
iret
mov
sbb
shlb
aad
addr16
dec
lret
mov
push
std
fiaddl
xchg
add
insl
cmp
adc
fadds
dec
fsubr
movsl
dec
nop
test
adc
dec
xchg
dec
inc
cmp
insb
bsf
test
inc
insb
scas
sarl
and
imul
cli
pandn
int
inc
xchg
push
mov
mov
xlat
hlt
pop
popf
orb
call
sarb
jno
loope
adc
jno
popf
test
mov
int
fsubs
inc
lret
and
fistps
lock
mov
xchg
and
add
fstps
sbb
mov
cld
xchg
pop
mov
mov
add
in
popa
mov
sub
ret
hlt
ss
into
xchg
cmp
jle
push
jbe
lods
cmp
jg
inc
repnz
popa
or
xor
cmpsl
addr16
push
jne
add
addr16
push
pop
inc
push
cmpsl
aaa
sub
mov
mov
pop
in
xchg
xchg
ret
mov
test
cmp
mov
mov
push
and
pop
jmp
jns
jmp
add
imul
call
dec
decl
mov
dec
or
ja
setg
enter
xchg
dec
clc
and
jne
imul
or
lcall
shl
cli
ja
rcrl
lock
mov
jb
mov
jle
testb
aas
testb
int3
jmp
inc
idivl
ret
inc
add
mov
adc
xor
sarb
sub
movsl
inc
out
inc
inc
ja
cltd
loope
sub
xchg
out
mov
and
jge
test
fstpl
cltd
dec
sbb
int3
out
add
neg
sub
xchg
adc
in
inc
notl
or
fisttpl
dec
test
cld
js
outsl
std
lret
testl
dec
cmpsl
fs
xor
add
rorb
cmp
sub
xchg
insb
fldl
cltd
stc
sbb
jecxz
jo
pushf
into
out
dec
bound
push
or
xchg
dec
lods
and
fs
inc
sbb
sbb
loope
mov
add
adc
adc
xor
fdivr
pop
pop
scas
xor
mov
pop
pop
scas
stc
adc
push
mov
sub
lock
out
stos
ds
push
ret
add
mov
imul
adc
dec
pop
or
nop
jb
and
clc
jns
push
dec
sub
movl
add
ss
pop
jne
pop
dec
lahf
fldl
repnz
mov
and
icebp
pop
cwtl
xor
xor
sub
imul
and
mov
push
hlt
leave
add
vlddqu
fcoml
loop
cmpsl
add
xchg
jp
jmp
xlat
inc
sbb
decb
jmp
jo
sbb
shll
mov
outsl
xor
outsl
lret
outsb
movsl
push
jecxz
movsl
mov
dec
xchg
mov
jns
dec
loope
scas
jno
loopne
push
out
dec
inc
add
or
mov
adc
std
fcmovb
cmp
xor
popf
mov
mov
adc
int
mov
jne
fidivl
push
jbe
aas
bound
repnz
xchg
js
mov
lcall
lods
or
jge
xor
fwait
xchg
sarb
mov
and
aas
mov
sbb
aaa
jl
test
divl
push
xchg
inc
jbe
jo
and
call
push
jb
lock
imul
aas
bound
testl
je
and
cld
sub
mov
mov
xchg
mov
dec
jg
adc
loope
mov
scas
and
out
mov
cmp
push
imul
nop
iret
je
pop
mov
pop
cmp
push
mov
insb
rorl
jb
mov
in
repnz
iret
cli
test
lds
dec
mov
mov
xor
ja
mov
mov
push
xchg
hlt
push
jp
inc
es
decl
outsb
sub
jg
push
fildll
loop
push
gs
pop
jle
sbb
imul
and
mov
lods
add
dec
mov
repnz
addb
rcr
push
or
fdivs
sarb
cmc
push
jae
mov
mov
jecxz
repz
inc
jge
mov
mov
and
push
fwait
in
mov
lock
out
in
lods
push
fildl
sti
imul
loopne
xchg
mov
pop
lods
loope
sbb
mov
mov
dec
xor
enter
mov
push
mov
das
push
push
clc
stc
les
push
inc
and
push
in
sbb
pop
lret
punpckldq
cmpsb
pop
add
shl
pop
aam
pop
inc
xchg
lcall
and
cmp
mov
subl
mov
sbb
cmp
imul
xor
fdiv
cmp
movsl
jae
aaa
sahf
inc
xchg
pop
inc
sub
mov
adc
xchg
add
pop
imul
addr16
pop
rcll
ljmp
jne
stc
iret
bound
xchg
dec
cmp
insb
lea
rcrb
push
lds
lcall
or
in
mov
xlat
fwait
add
cmp
loopne
push
dec
push
outsl
std
xchg
cmp
sbb
scas
inc
pusha
jo
and
movsb
sbb
jmp
into
add
pop
psubusb
cmp
dec
sub
loopne
stos
push
push
push
fiadds
aam
cmp
ljmp
pop
inc
xor
jne
sbb
sbb
cmc
int
ja
mov
push
stos
pop
clc
cmp
sbb
xchg
int
fcoms
movsl
mov
inc
imul
adc
add
into
addl
arpl
and
popa
aam
ss
repnz
mov
sarb
iret
popf
push
aaa
outsl
mov
pushf
sub
jge
fdivl
adc
stos
shlb
xor
cmc
jae
test
dec
out
enter
jae
mov
jge
inc
adc
subl
rorl
aad
add
inc
push
adcl
sub
addl
adc
in
cwtl
int3
ja
imul
inc
fs
fidivrl
stc
pusha
pop
lret
push
cwtl
test
push
push
jo
xchg
xchg
and
lret
outsb
movsl
sbb
dec
push
in
dec
loop
fnstenv
stos
jmp
mov
xchg
mov
popa
adc
mov
stc
mov
mov
add
clc
insl
mov
cmp
cli
cwtl
test
nop
fldcw
inc
pop
lret
push
popf
inc
push
pusha
add
xor
clc
les
xchg
insb
and
pop
sub
push
lds
pusha
dec
xlat
out
aad
and
test
lret
lods
mov
pop
cmpsl
pop
mov
sbb
test
int
int
sub
adc
push
cwtl
test
int
fnsave
repnz
mov
jp
push
jbe
mov
test
jo
enter
jb
sahf
orl
mov
or
stc
or
pusha
fadds
pop
les
ss
arpl
sub
mov
xor
icebp
mov
mov
adc
push
shrb
sahf
cli
inc
lret
test
arpl
xchg
cmp
or
inc
andl
mov
cmp
add
test
add
pushf
je
sub
and
gs
push
push
add
inc
sub
mov
stos
or
cmp
adc
imul
jmp
xor
cld
es
ss
mov
dec
repz
nop
dec
pop
repnz
sbb
adc
push
mov
add
add
hlt
lcall
jns
icebp
pusha
jge,pt
inc
sbb
in
jecxz
dec
xor
outsb
movsl
xchg
js
sbb
leave
clc
out
or
dec
cmp
adc
clc
repnz
leave
stos
test
xchg
testb
jne
mov
das
out
jl
pop
cmp
ror
movsl
sbb
shl
cmp
lods
xor
adc
inc
cmp
pop
xchg
mov
xchg
xor
arpl
ret
scas
nop
clc
pop
pop
test
sbb
jg
scas
repz
push
inc
xchg
rorb
rcrb
mov
fsubs
pop
jbe
arpl
mov
addl
insl
sub
mov
out
sbb
dec
push
cmp
addb
sbbl
pop
es
aaa
popa
mov
sub
adc
icebp
add
mov
push
pop
es
cmpsl
push
repnz
cmpsl
rorl
mov
push
andl
xor
loope
insb
push
repz
or
xor
scas
jge
push
add
mov
mov
cmp
adc
into
jg
repz
cwtl
in
inc
leave
fisubl
mov
jne
mov
sbb
push
sbb
je
mov
push
mov
lock
xlat
pusha
xchg
adc
and
ret
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
lea
inc
lods
push
pop
cmpsl
dec
mov
xchg
sbb
or
cmp
and
xor
add
pop
pushf
mov
inc
sub
mov
xchg
outsl
test
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
icebp
jecxz
repz
rcl
not
rorb
jae
inc
inc
push
xor
and
add
adc
jecxz
repz
rcl
mov
adcl
icebp
and
xor
add
adc
jecxz
repz
rcl
mov
adcl
xor
push
outsw
adc
cmpsl
lods
aas
js
sub
cmpb
jg
fadds
add
and
jmp
mov
mov
sarb
sub
pop
mov
fwait
mov
in
scas
inc
mov
mov
mov
xor
mov
sbb
lea
adcl
icebp
sbb
repnz
mov
add
scas
mov
popa
arpl
jle
rdtsc
adc
mov
lds
mov
fidivs
add
inc
or
push
or
ret
jae
push
mov
dec
adcl
scas
inc
imul
push
adcl
rol
rcl
mov
adcl
xor
and
adc
add
mov
xchg
mov
shl
cmc
out
jecxz
sbb
cmp
jb
inc
jbe
mov
lods
test
in
rcll
push
adc
dec
pop
jge
je
xchg
mov
xchg
iret
mov
xchg
jno
popa
jae
inc
inc
push
xor
and
adc
add
icebp
jecxz
repz
rcl
mov
adcl
xor
and
adc
add
icebp
jecxz
out
xor
add
mov
in
push
jp
mov
sbb
mov
push
popa
shl
shll
pop
jp
insb
mov
push
imul
imul
mov
dec
sub
lea
xor
add
sahf
mulb
icebp
pusha
and
cmp
lods
inc
adc
fwait
push
sbb
xor
xor
pushf
cld
jns
inc
fiadds
mov
cmpb
sub
mov
pop
out
dec
cwtl
adc
js
cmp
pop
test
lahf
sbbb
jg
cwtl
adc
xor
fcoms
mov
pusha
dec
mov
out
pop
xor
inc
les
jnp
xchg
xchg
pop
or
jg
sbb
lahf
fbld
xchg
les
mov
and
mov
das
adc
dec
stos
fwait
rorl
or
cmp
sub
in
fstl
daa
cmpsl
shll
cmp
mov
call
mov
outsl
fcoml
ret
jnp
sahf
and
dec
push
or
lret
aam
movsl
pop
rorl
test
daa
cmp
push
pop
add
call
push
lcall
ljmp
je
and
std
mov
mov
dec
and
jns
pop
rorb
xchg
xchg
add
cli
push
repz
popa
sub
jg
mov
pusha
push
andb
out
mov
iret
dec
and
cli
data16
xlat
and
inc
imul
fnsave
dec
inc
std
dec
and
outsl
mov
mov
lahf
cmp
frstor
fdivs
loope
shll
mov
lret
jo
aas
add
notl
clc
mov
and
mov
in
enter
into
xchg
daa
orl
pop
shlb
adc
pop
mov
xorl
add
cmp
cmp
sbb
rol
movsb
outsl
aaa
aaa
xlat
mov
xchg
mov
or
ja
mov
mov
int3
cli
sarl
loope
cmpsb
cmp
js
mov
xor
adc
pop
ja
test
sarl
popf
adc
aam
mov
and
pop
insb
and
hlt
mov
ficompl
pop
mov
xor
and
sbb
jecxz
xor
loope
cltd
dec
pop
jns
mov
clc
neg
or
repz
inc
fdiv
jo
in
fistl
scas
or
inc
out
mov
xlat
scas
inc
test
xchg
mov
aas
es
outsl
push
inc
xchg
or
pop
pop
in
sbb
push
das
fndisi(8087
pcmpgtb
adc
ds
pushf
out
clc
xchg
mov
add
leave
loopne
sbb
icebp
enter
out
jbe
sahf
das
sahf
notl
fsts
jbe
aad
inc
int
ss
icebp
scas
and
pop
movsb
mov
outsb
dec
sbb
es
jmp
push
dec
xchg
jmp
and
aad
shr
andb
pop
dec
inc
jmp
sbb
js
and
mov
aam
xchg
in
push
mov
push
out
mov
cltd
std
xchg
stc
pop
xor
cmp
nop
cltd
mov
dec
xor
sub
inc
ret
jno
inc
enter
popf
scas
inc
mul
mov
xchg
fs
popa
fwait
adc
cmp
shl
idivl
mov
ja
call
cmp
in
fimuls
or
mov
inc
sbb
popf
inc
jne
mov
mov
or
sbb
sbb
loope
fldl
pusha
push
mov
jo
lods
enter
cmp
push
out
aad
push
insb
pop
or
bound
cmp
inc
add
jg
sub
in
lcall
pop
pop
int
mov
test
mov
cmp
adcl
negb
fadds
mov
nop
push
out
and
out
aad
push
aaa
sar
repz
rorl
inc
mov
mov
mov
fcomi
pop
sbb
and
mov
cs
fwait
iret
sub
in
lret
cmp
xchg
cmpsb
mov
push
or
mov
insl
movsl
iret
pop
xchg
sahf
cmpsl
ret
sub
push
xor
xor
adc
std
outsl
shlb
repz
inc
sub
in
cmpsl
add
push
xchg
test
dec
leave
shll
cmp
int
push
cmp
pop
jbe
mov
add
lgs
dec
in
mov
aam
inc
jne
sbb
ret
push
in
mov
xor
dec
call
push
jge
sub
jb
cmc
nop
ja
mov
fs
cmp
sti
sub
adc
orb
lret
and
scas
out
mov
cmpb
cmp
mov
and
lea
sub
mov
adc
adc
stos
mov
stos
dec
mov
sub
in
mov
out
fcomip
mov
inc
cwtl
mov
push
fstpl
dec
pop
mov
stos
ficomps
xchg
jb
and
iret
das
push
int
xor
mov
cmp
call
stos
mov
test
cmc
inc
sbb
push
xchg
movsl
add
push
cmpsb
repz
aad
push
pop
in
xlat
std
cmp
inc
mov
aad
ret
cmp
inc
out
add
fucom
into
xlat
add
add
jp
ja
cmpsl
in
xchg
fsubrl
aam
push
mov
js
xor
xor
pop
jl
rolb
filds
subl
xchg
aam
adc
push
sti
mov
cmpsb
push
flds
push
mov
mov
mov
rcl
repnz
dec
mov
aad
gs
leave
scas
cmp
les
fldenv
ljmp
ds
arpl
or
mov
add
out
inc
cmp
cwtl
inc
sbb
imul
ss
dec
pop
xor
xchg
cltd
and
cwtl
pop
mov
ljmp
movsl
insl
mov
bound
pop
insl
inc
sub
jecxz
cmp
ljmp
adc
test
add
aam
repz
fdivr
xchg
sbb
in
sbb
cli
lea
xchg
lret
or
ljmp
scas
mov
in
inc
mov
push
push
ja
add
fimull
mov
sbb
xchg
je,pt
add
enter
sti
mov
sub
mov
jnp
mov
leave
inc
or
sub
jle
jle
lea
fdivr
inc
cmp
xlat
dec
imul
mov
sti
idivl
lret
sbb
mov
or
xchg
xor
xchg
shl
cmpsb
cmp
sbb
mov
dec
lods
lcall
jecxz
pop
bound
sub
out
aaa
aaa
stos
je
or
mov
negb
push
jle
pop
mov
pop
jb
cmpsb
add
fdivp
xor
sti
dec
dec
fiaddl
std
lds
adc
aam
push
dec
adc
add
and
xor
ret
or
jle
scas
xor
inc
call
out
xor
cmc
or
and
dec
std
push
gs
dec
mov
inc
xchg
js
std
pop
popl
cmp
or
addr16
lods
pop
test
scas
mov
inc
mov
cwtl
fstpt
add
pop
cwtl
sbb
aaa
mov
or
fmuls
addr16
aam
and
cld
dec
hlt
andl
dec
fs
xchg
xchg
push
push
or
bound
bound
xchg
cs
xor
lds
in
fcmovnbe
leave
adc
and
stos
shrb
shlb
mov
adc
out
shlb
xor
adc
cmp
pop
lret
sbb
pop
test
mov
push
es
sahf
xor
and
sub
sbb
fs
ret
call
aaa
or
fcoms
mov
or
dec
movsb
pop
iret
dec
xorb
out
push
xchg
rcrl
lds
loop
pushfw
cmp
ljmpw
jle
into
cmp
insl
push
add
arpl
push
push
and
dec
lret
popf
js
test
sub
in
loopne
and
adc
and
lock
push
lock
xor
mov
ret
popa
jl
mov
jp
in
or
in
pop
rolb
int3
or
xchg
pushf
push
in
xchg
lods
mov
out
xor
cmp
stc
pop
fisttpl
enter
xor
sbbl
cmpsl
insl
adc
pop
cmp
inc
out
and
addr16
gs
insb
aam
xor
cmpl
add
xchg
mov
and
push
xchg
sbb
fwait
dec
push
pop
sbb
subb
xor
arpl
repnz
repnz
and
test
sub
fdivrs
mov
mov
stos
jne
dec
fsubrp
rcrb
cmp
negb
and
push
ret
icebp
xchg
je
inc
xchg
lahf
clc
pop
ss
out
sub
mov
add
inc
js
mov
sbb
shll
adc
xlat
icebp
rorb
mov
inc
sarb
mov
mov
in
jge
adc
int
scas
mov
popf
in
sub
cmpsb
xchg
in
add
cmc
and
push
pop
iret
dec
in
orb
enter
xor
xchg
jl
jl
pushf
sub
push
cld
sub
mov
mov
mov
push
movsl
mov
dec
fimull
sbb
pop
mov
add
or
ret
call
and
ljmp
xor
add
sbb
loope
leave
outsl
outsb
mov
ss
mov
sbb
jle
mov
cmpsl
inc
push
xchg
test
jae
das
bound
pop
sbb
call
add
adc
or
pop
cmp
push
pop
dec
inc
sbb
shlb
jp
sbb
ss
pop
shr
mov
ja
popf
push
sub
nop
mov
mov
sahf
faddl
sbb
mov
rorl
dec
sub
scas
push
cmp
mov
call
movsl
outsl
imul
js
pop
rorb
pop
js
push
add
or
shl
movsb
mov
mov
clc
mov
fiadds
fwait
xchg
lret
hlt
cmc
and
icebp
ret
fstps
das
enter
adc
icebp
popl
shll
iret
nop
dec
in
incl
xorl
adc
iret
repnz
mov
adc
pop
lcall
mov
mov
fneni(8087
into
adc
push
xor
aas
mov
and
sub
pop
xor
enter
add
pop
push
push
mov
imul
push
arpl
mov
mov
scas
mov
lahf
out
jbe
fcmovne
mov
mov
loope
dec
or
ss
aaa
mov
mov
lcall
pusha
cmp
inc
push
ss
sub
cmc
sti
sub
sbb
and
mov
outsl
push
punpckhwd
mov
repnz
and
fidivrs
sub
xor
xchg
mov
mov
xor
sub
test
aas
and
jg
imul
mov
repz
mov
jle
stos
fisttpll
dec
aad
pop
push
push
in
das
cmpsb
repz
inc
test
aam
leave
iret
out
sarl
xchg
push
xor
mov
jne
in
fdivs
movsl
xchg
sbb
adc
xchg
dec
lods
sahf
repz
dec
ds
int3
and
cmpsl
cmp
sub
adc
stc
push
ljmp
push
int3
std
xchg
or
movsl
sub
adc
cld
xor
add
sbb
lock
mov
lret
xchg
and
xchg
adc
xchg
pop
push
push
pop
push
push
xchg
subl
out
ret
adc
mov
mov
mov
mov
xor
and
out
mov
movsb
fiaddl
jp
adc
adcb
int
sbb
mov
ljmp
xchg
and
inc
cmp
add
fs
shll
adc
das
outsb
mov
insb
ficoms
dec
cs
js
jl
mov
add
xchg
es
fstpt
mov
rcrb
or
xor
sbb
bound
js
in
inc
or
loope
mov
shll
repnz
pop
mov
add
filds
xor
push
in
mov
cmp
lret
inc
or
xchg
adc
dec
jb
jl
xor
and
mov
push
add
ja
xchg
jmp
and
inc
xchg
jno
dec
arpl
jecxz
pop
popa
inc
xchg
iret
sarl
add
cld
iret
mov
inc
das
sbb
daa
js
fdivs
ljmp
xor
das
adc
cmp
add
aam
and
xchg
fsubrl
and
xchg
sbbl
inc
xchg
add
xor
sbb
call
cmp
sub
mov
push
stc
push
shl
inc
addr16
pop
sahf
clc
or
xlat
xchg
mov
insb
or
into
shl
mov
popf
pop
jo
push
pop
mov
out
test
fs
cwtl
sahf
mov
dec
mov
xchg
xchg
mov
test
js
sbb
std
inc
out
loop
es
dec
push
push
lds
push
jmp
jae
inc
imull
xchg
jne
inc
dec
ja
add
andb
ss
daa
movsb
or
xchg
faddl
stos
nop
lret
sbb
push
sub
mov
sbb
ss
iret
sbb
xor
adc
aad
das
xor
push
flds
add
jmp
push
and
pop
inc
shl
repnz
xchg
fs
mov
xchg
xor
sbb
sbb
cs
inc
xor
push
cltd
mov
sbb
leave
movsb
sti
shll
sub
xor
jb
icebp
cmc
shlb
xor
inc
fwait
or
shll
pop
icebp
loop
jo
lods
xchg
jne
rclb
mov
cmpsb
pusha
mov
arpl
clc
fsubl
xlat
cmpsb
iret
ds
out
adc
fsubl
inc
nop
leave
xor
jg
inc
pop
pop
cmp
inc
sbb
push
mov
mov
mov
or
sbb
xlat
mov
xor
sarl
pmaddwd
jg,pn
mov
cmp
or
jnp
test
pop
jle
les
inc
or
xchg
mov
les
bound
jns
rorl
aam
dec
sbb
dec
testl
xchg
sarl
dec
jmp
cmpsb
sti
push
aad
mov
mov
xchg
sub
mov
fwait
test
sahf
idivb
or
cli
lock
hlt
jns
cltd
fs
or
scas
dec
orl
xchg
xlat
jnp
sbb
push
jl
inc
add
js
mov
dec
inc
push
stos
out
jl
imul
mov
lahf
xor
in
ja
xor
jg
mov
imul
add
pop
sbb
mov
stos
fwait
shlb
enter
or
jne
or
mov
sbb
aaa
pop
xorl
mov
mov
push
addb
cld
leave
shl
in
mov
lcall
adc
sub
leave
cmpsb
dec
mov
jle
or
add
or
pop
cmp
sub
cld
lock
pop
scas
add
sub
dec
movsl
pop
iret
xlat
inc
iret
ljmp
xor
adc
push
out
repz
jno
jmp
mov
out
xor
test
shl
sub
lods
fstpt
xor
shll
call
cmc
mov
sbb
les
or
insb
cwtl
xchg
les
mov
dec
xchg
test
mov
into
and
enter
loopne
add
insl
push
dec
ret
xchg
or
add
fwait
push
xlat
mov
cmp
pop
mov
ja
movsl
cmp
push
lcall
mov
lret
mov
adc
es
jo
adc
sbb
jae
adcb
subb
push
pushf
movsl
mov
insb
pop
push
jno
or
sbb
add
outsl
ss
sbb
ss
lcall
mov
push
and
mov
lods
btl
add
aam
pop
jle
inc
sbb
incl
cmp
pop
xchg
jno
and
es
fldt
mov
mulb
outsl
icebp
fdivrl
cmpsl
mov
add
sbb
sub
jne
aam
and
out
arpl
loop
cmp
push
mov
xor
lret
jae
mov
jp
cvtpi2ps
das
push
enter
rorb
data16
adc
inc
orb
mov
cmp
pushf
push
add
outsb
ds
inc
leave
push
aaa
std
jp
cwtl
mov
dec
xchg
fs
into
push
xchg
sti
rcll
lds
int
ds
or
ret
shrb
dec
cmp
push
jg
pop
mov
dec
mov
out
xor
test
cmc
mov
stc
cmp
mov
pop
push
in
inc
push
mov
xchg
add
scas
push
add
sbb
call
jo
push
sub
xor
loope
js
sarb
sub
sub
lcall
daa
sbb
mov
call
adc
aas
and
add
hlt
and
mov
lret
test
mov
js
movsl
inc
push
xchg
cmpsb
jne
mov
adc
jbe
push
loop
push
adc
popf
sub
into
dec
aam
mov
sbb
jmp
lods
movsb
stos
lock
pop
lods
insb
jbe
mov
data16
jge
sarb
inc
add
mov
rcll
pushf
jae
xchg
inc
pop
dec
mov
adc
les
stc
dec
ret
xchg
loopne
popf
mov
loopne
xor
mov
dec
or
xchg
int3
push
stc
push
es
mov
add
inc
in
rol
pop
iret
les
test
push
inc
popf
push
test
adc
inc
outsb
idivl
outsb
pop
jle
adc
inc
fs
fsubrs
std
add
std
or
lock
in
lcall
loop
std
movsb
add
sbb
dec
sahf
xchg
push
idiv
cwtl
sbb
shrb
xor
gs
mov
push
fistpl
add
es
jg
mov
loop
ret
dec
push
pop
movsb
daa
mov
sbb
push
movsl
cmp
loope
xor
fisubrs
add
mov
mov
dec
sub
insl
mov
xchg
scas
mov
cmpsb
xchg
cltd
push
sbb
cmp
int3
fldcw
ss
mov
aaa
shll
pop
mov
lret
mov
dec
hlt
mov
mov
sub
lds
addb
sahf
mov
or
bound
pop
adc
insb
test
int3
sbb
shrl
adc
out
popa
jecxz
shl
jae
into
and
sub
mov
cld
cmp
and
not
lret
mov
dec
cmp
sub
cmpsl
das
out
xchg
lret
fildll
mov
mov
mov
icebp
shlb
stos
pop
jo
dec
cmp
pushf
test
js
repz
push
daa
movl
cmpsb
roll
dec
insb
cli
in
aas
loopne
data16
lea
ds
clc
mov
jl
ud2
sbb
fimull
inc
sub
xchg
add
std
mov
or
add
sbb
int3
push
sbb
jae
cmp
insb
mov
mov
xchg
gs
jb
jl
inc
dec
pop
dec
lds
pop
leave
and
lret
pop
imul
cs
shrl
xchg
out
push
lods
and
add
mov
cmp
js
and
fwait
into
icebp
push
stc
lea
call
mov
ret
shr
clc
fsubl
pop
aad
ss
popl
into
pop
jno
dec
out
pop
pop
pop
test
dec
sub
nop
lret
jne
mov
mov
mov
les
dec
mov
lahf
inc
push
mov
popf
pop
jne
movl
push
mov
mov
xchg
daa
or
push
es
outsl
xor
fisttpll
and
nop
xchg
test
sbb
out
nop
repnz
lahf
mov
jbe
divl
insl
cwtl
je
lock
dec
cmp
js
sbb
in
push
fistpll
lret
out
jae
sbb
pop
and
repz
es
addb
lock
cs
or
sub
dec
aaa
mov
cld
insl
mov
das
cmpsb
xchg
add
mov
lock
outsl
outsb
cmp
je
xchg
xchg
aad
fwait
lods
lcall
repnz
loopne,pt
fs
push
cmp
imul
repz
rcl
mov
adcl
xor
and
adc
add
icebp
jecxz
repz
rcl
mov
adcl
xor
and
adc
add
icebp
out
repz
ret
rcl
mov
add
push
inc
inc
push
xor
and
adc
add
icebp
jecxz
repz
rcl
mov
subl
inc
and
stos
push
int3
popa
cld
jno
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
jp
dec
lahf
pop
sahf
mov
mov
pop
iret
jmp
cli
das
lret
rsm
jg
outsl
lcall
scas
dec
lahf
pop
out
or
sbb
lret
rsm
adc
dec
jae
arpl
xor
and
adc
sbb
repz
sub
cmp
xor
cmp
int3
adc
jns
cmp
lret
push
fldl
add
xorb
mov
adc
in
test
xor
out
add
cmp
xlat
pop
outsl
dec
rcl
or
cli
jg
cmpsb
mov
push
xchg
mov
sbb
jmp
sub
lcall
push
pop
stos
push
outsl
mov
lcall
mov
fcom
pop
cmp
cmc
mov
xor
sti
sar
fwait
and
xchg
add
dec
cmp
idiv
iret
mov
inc
mov
out
ljmp
or
mov
mov
cmp
iret
aad
cmp
stc
xlat
adc
mov
mov
out
jg
cmp
pop
lcall
lahf
pop
cmp
filds
iret
repz
loop
rcrb
ret
lss
outsl
nop
pop
lcall
lahf
cs
pop
lcall
ljmp
jnp
cmp
or
testl
and
xchg
cmp
test
dec
fwait
push
adc
outsb
cld
or
and
sti
push
out
in
xor
cmp
or
sbb
ljmp
rsm
jg
outsl
mov
dec
push
jp
dec
lahf
pop
out
or
sbb
ljmp
rsm
jg
outsl
mov
dec
push
push
cmc
jb
dec
inc
mov
or
lret
mov
push
mov
hlt
sub
int3
dec
dec
fcmovne
int
out
lods
or
xchg
mov
mov
nop
xorl
mov
ja
push
pop
fistps
repz
rolb
jnp
push
test
add
in
jmp
leave
shlb
ret
cmp
ds
mov
mov
jp
insl
cmove
jg
fidivl
sub
mov
sbb
aas
les
addr16
loopne
sahf
sub
or
sar
fcomps
ja
push
adc
stos
scas
out
lock
outsb
pop
incl
mov
pop
push
lods
jg
or
daa
adc
jno
adc
std
cmpsl
cld
pop
popa
xorl
ljmp
jl
sub
pop
sahf
adc
stc
mov
pop
cs
lea
xchg
cmpsl
negl
inc
lock
push
xchg
lock
dec
and
aam
inc
leave
or
dec
repnz
pop
mov
mov
cli
int3
in
sbb
repnz
xchg
dec
mov
lret
jg
xor
mov
lahf
xor
jg
inc
in
mov
sub
adc
xlat
push
mov
and
jne
jge
dec
cmp
je
ja
je
adcl
loopne
inc
mov
adc
mov
test
xchg
xchg
inc
jo
ljmp
lret
inc
mov
pop
cmp
and
in
test
lds
mov
insb
push
push
stos
test
xor
imul
push
insb
mov
in
fildl
mov
xchg
lods
add
leave
repz
cltd
sub
mov
add
adc
movsb
daa
sub
aad
pop
sub
sub
enter
call
push
pop
stos
sub
dec
or
mov
lahf
sbb
data16
lret
and
xchg
mov
pop
mov
lods
loope
lret
hlt
cwtl
ja
push
in
movsl
int3
popa
jle
adc
movsl
test
ret
adc
inc
jl
sub
fdivs
scas
fnsave
mov
ret
or
std
aaa
and
sub
sbb
add
or
inc
add
pop
lods
out
aas
mov
jge
lods
xor
or
test
ret
xchg
mov
xchg
test
lret
gs
imul
pop
aaa
pop
loop
mov
xchg
or
pop
movsl
cltd
imul
in
into
xor
adc
insb
sbb
sbb
ja
push
shll
or
cmp
fisubs
repz
mov
xlat
lods
jecxz
in
aaa
mov
nop
imul
dec
sub
loopne
lret
js
movsl
in
mov
xchg
test
push
out
daa
std
inc
adc
adc
xchg
pop
popf
xchg
mov
ret
dec
sti
cmp
mov
sbb
mov
in
enter
popf
out
jp
shll
setg
mov
cmp
or
sub
frstor
cmp
out
mov
dec
mov
sub
mov
mov
fidivs
je
push
idiv
cmp
stos
test
and
int
push
push
stos
xchg
lahf
popa
cmc
test
out
das
cmp
iret
add
sub
es
aaa
fimull
ror
hlt
repz
jne
pop
xor
aad
cmc
mov
scas
add
in
in
mov
dec
leave
rcll
lock
rcl
xor
and
lock
mov
pushf
repnz
dec
mov
das
ficompl
push
xor
popf
sbb
fcom
imul
sbb
fwait
or
ja
ja
push
das
cmp
jl
test
sub
or
add
les
aad
add
sbbl
xor
gs
push
cmp
dec
and
push
fwait
stos
mov
or
mov
fistps
xchg
push
lock
cmp
das
aam
out
mov
fnstsw
push
fiadds
pop
das
pop
fnstsw
aas
ret
pop
push
sti
rcrb
jmp
xchg
jo
mov
dec
mov
outsl
rcll
cld
add
jmp
adc
inc
sub
repnz
push
push
push
gs
fcomi
mov
lret
sahf
xchg
push
inc
das
xchg
mov
hlt
loopne
mov
sbb
insl
shlb
ficompl
rcl
icebp
inc
scas
imul
fisttpll
xchg
mov
data16
cmpsb
aaa
iret
adc
clc
mov
jecxz
dec
mov
fsubs
lcall
mov
inc
adc
sub
inc
sahf
and
repnz
mov
iret
push
xchg
nop
push
push
jns
mov
cmp
lods
pop
fs
lret
test
pop
das
dec
sar
pop
stos
inc
lea
nop
nop
pop
not
int
adc
pop
or
ja
bound
pop
sub
xor
xchg
std
loopne
lret
cmpsb
dec
jnp
je
jns
lock
lock
dec
aas
and
mov
xor
ja
mov
or
cli
xor
fdivs
and
and
and
inc
inc
or
mov
bound
xor
int
xlat
mov
mov
enterw
fimuls
mov
pop
mov
daa
inc
pusha
push
pop
mov
xchg
adc
mov
inc
mov
stc
jnp
cmp
push
daa
xchg
mov
cltd
leave
sub
movb
repz
lret
iret
out
inc
arpl
cld
aaa
pop
dec
add
scas
xor
outsb
inc
je
out
inc
enter
stos
hlt
pop
mov
push
jo
decl
jno
cmp
popf
lock
jno
and
xchg
push
inc
inc
sbb
xor
jo
popf
push
or
fldl
dec
xchg
icebp
mov
and
inc
negl
stos
push
cmc
inc
shrb
gs
int
sbb
and
ljmp
repz
add
sbb
sub
cwtl
daa
incl
cmp
loop
imul
gs
xchg
inc
dec
js
repnz
lcall
sti
sti
jns
test
adc
xlat
xchg
add
or
and
daa
rcrb
mov
repnz
sbb
adc
std
or
popf
mov
sub
jno
jnp
pop
insb
js
pop
inc
push
xlat
and
dec
std
sbb
jo
aad
outsb
jne
add
sbb
and
xchg
sub
out
add
push
insl
test
jg
xchg
jmp
aaa
gs
call
or
fistps
cmc
cmp
jae
inc
jne
loope
adc
aad
mov
subb
jp
cmp
das
push
aas
mov
lds
push
pop
mov
loope
pop
mov
aas
mov
xchg
popa
int
push
sbb
out
dec
push
imull
aam
test
dec
cwtl
aam
jge
pusha
xorl
das
icebp
and
test
js
in
js
movsl
icebp
sbb
shlb
adc
sbb
ret
inc
pusha
mov
pop
out
sub
outsb
push
clc
call
mov
fidivrl
mov
sbb
lods
dec
sarl
mov
out
movsl
push
xchg
loop
dec
mov
mov
fcomip
aaa
and
bound
cvttps2pi
lds
fimull
pop
outsb
sbb
addb
aad
outsb
and
out
out
fildll
sub
mov
pop
int
or
sub
mov
movb
inc
mov
xchg
sbb
pop
lds
or
push
test
jb
loopne
mov
push
ja
sbb
lret
push
dec
or
jbe
jecxz
lahf
jnp
push
xchg
or
inc
aas
xchg
negl
xor
fcoms
dec
inc
aas
outsb
pop
rclb
and
cltd
jmp
pop
insb
iret
mov
push
mov
jo
loop
jecxz
ljmp
inc
aas
negb
dec
js
mov
jmp
mov
adc
out
push
add
xchg
in
mov
das
xor
enter
and
lock
and
add
push
mov
das
lret
std
jl
sub
imul
mov
mov
add
mov
movsl
pop
rol
mov
scas
insb
notb
loope
mov
jns
mov
nop
aad
xor
rcr
aaa
inc
scas
and
dec
pop
fstpl
cmp
xchg
jnp
sbb
or
or
jl
addr16
jp
mov
repnz
fiaddl
movsl
sahf
inc
sbb
aas
sub
out
popf
mov
jo
lods
pop
out
arpl
inc
nop
xchg
push
loop
mov
insb
add
icebp
or
jp
mov
sbb
dec
aam
sub
cwtl
sub
out
add
sub
int
mov
pop
lds
addb
fnstenv
cmp
sahf
lret
int
fdivrs
shrb
mov
jmp
ret
notl
out
gs
cmpsl
icebp
xchg
dec
int
push
jo
push
cmpsb
fidivs
rcrb
dec
pop
pop
mov
jo
int3
in
adc
adc
mov
or
cli
mov
push
jno
movsb
enter
rclb
sub
je
iret
push
xchg
cmpsb
sbbl
sbb
cli
ss
pop
sbb
popl
movsl
mov
daa
adc
in
mov
cld
int3
inc
pop
pop
mov
add
cmp
popa
call
cmp
adc
inc
setne
mov
test
push
lahf
stos
sub
mov
popa
mov
xor
xor
lock
mov
mov
jle
lods
sub
rcr
adcl
rolb
sub
dec
lods
popa
mov
in
pop
insb
lock
sub
cmc
sub
testb
mov
or
or
and
dec
sub
fwait
pop
fadds
sbb
clc
fbstp
pop
mov
lret
nop
xorb
cltd
mov
mov
jb
inc
mov
mov
repnz
stc
push
lcall
mov
ljmp
dec
clc
and
insb
inc
and
sbb
mov
cmp
subl
inc
xchg
mov
or
pop
cwtl
xchg
int3
xchg
jo
or
cs
je
sub
push
sub
mov
mov
dec
pop
ficompl
ficomps
test
inc
imul
mov
ljmp
mov
insl
inc
pop
fisubs
repz
lahf
leave
test
push
sahf
inc
add
andw
bound
cwtl
xchg
dec
push
int3
xor
mov
xchg
xor
mov
lock
imul
sbb
imul
and
adc
ss
daa
xchg
lret
dec
xor
scas
out
lret
xchg
or
mov
fwait
sbb
mov
pop
mov
outsl
movsl
pop
cmpsl
test
jno
cwtl
aaa
int3
push
mov
sub
or
cmp
lret
jge
scas
inc
sbb
call
xorl
mov
mov
mov
daa
testl
stc
lock
fisttpl
mov
dec
ret
dec
pop
inc
in
mul
fcompl
push
dec
mov
into
imul
push
ljmp
popa
lret
pop
inc
gs
mov
mov
adc
popf
lahf
test
xlat
or
cli
jp
push
bts
jmp
fucomi
mov
cmp
lods
xor
inc
push
das
pushf
mov
scas
push
lea
jno
cmp
adc
imul
scas
outsl
lahf
pushf
mov
addl
addr16
dec
sbb
test
mov
fistpl
jne
mov
cwtl
jne
jbe
ljmp
or
mov
aam
dec
jg
xor
xor
xor
mov
adc
inc
cmp
jl
xor
in
lds
ds
arpl
sahf
call
sub
mov
mov
jp
test
xchg
mov
mov
push
fsubr
repnz
pop
or
and
mov
enter
stos
in
or
jl
cmp
inc
ja
pop
lods
jns
mov
xchg
push
or
push
fistl
lods
iret
or
xor
jne
xchg
mov
loopne
arpl
jns
push
fwait
pop
xor
xor
add
jmp
push
jge
xchg
push
pop
bndldx
mov
out
jnp
lea
inc
inc
std
mov
jecxz
adc
sub
dec
pop
movsl
gs
inc
mov
jo
add
cmp
stos
and
test
bsf
push
mov
inc
in
or
out
xchg
sub
cmp
cmc
inc
xchg
push
sub
rcr
das
or
hlt
mov
arpl
jne
and
add
into
mov
cld
mov
pop
orl
mov
pop
push
or
aaa
xchg
push
in
adc
mov
adc
cmp
or
fdivs
sbb
jne
lea
call
decl
jb
sub
mov
pop
inc
push
lea
leave
push
push
pop
or
hlt
xchg
nop
jp
push
lahf
xor
jl
mov
loope
out
scas
fwait
or
jmp
addb
mov
jno
adc
lcall
dec
jmp
andl
jl
xchg
pusha
cmp
and
sub
mov
stos
sub
dec
inc
loopne
pop
push
sahf
jg
test
enter
in
in
loop
std
xor
mov
je
lods
mov
xor
jecxz
shrl
push
adc
cmp
into
jne
rorb
jmp
inc
sbb
dec
mov
xchg
or
data16
xorb
and
mov
js
mov
jo
jle
jae
nop
lds
jg
push
inc
les
pop
xchg
icebp
fs
mov
imull
xor
jbe
loop
fwait
mov
sti
sbb
popa
inc
jge
dec
fs
out
popf
adc
jbe
cli
dec
mov
enter
inc
popf
test
push
pushf
sahf
stos
das
pusha
jo
cli
in
dec
mov
xchg
out
inc
mov
sbb
roll
insb
and
fistpll
daa
xchg
pushf
cmp
jp
mov
mov
mov
aad
jbe
das
rcl
test
sbb
lret
pop
js
adcl
push
fs
gs
imul
ret
fwait
push
or
in
cmp
or
mov
enter
cld
jns
push
sub
jmp
lock
pop
das
jnp
test
xchg
xchg
dec
mov
je
sbb
xchg
mov
les
jmp
mov
fs
mov
adc
stos
sub
leave
cmovo
in
icebp
shlb
push
jle
test
xor
rorb
lock
add
xchg
or
xor
mov
xchg
mov
pop
adc
push
negl
adc
cmp
lea
xor
loop
jo
push
sub
repz
jg
xlat
push
stos
sbb
test
std
xlat
mov
jbe
insl
xor
iret
xor
sbb
roll
leave
movsl
rol
fwait
sub
out
adc
daa
imul
aaa
cltd
out
adcl
mov
bound
inc
add
movsb
je
cmp
repnz
arpl
pop
mov
dec
in
cmc
dec
inc
inc
enter
mov
push
roll
sarb
pop
mov
mov
pop
push
mov
ficomps
dec
shll
adc
mov
mov
pop
movsb
pop
dec
mov
dec
in
mov
in
outsb
add
jo
pop
rcll
mov
pop
and
adc
maskmovq
fcom
jge
pop
mov
mov
mov
icebp
cmpsb
mov
sub
jmp
arpl
xor
mov
dec
fucomi
out
sbb
lock
inc
fstpl
mov
pop
in
push
hlt
add
cmp
dec
arpl
push
rcr
bound
outsb
dec
repz
jnp
xchg
rcrb
repz
ljmp
scas
mov
loopne
lock
orl
jmp
xchg
cltd
cmp
cmp
pushf
pop
adc
mov
lret
stc
ljmp
fidivrs
jne
lcall
jns
in
lahf
or
sti
shlb
jb
adc
sbb
in
sub
pop
mov
lds
or
lods
loope
adc
or
arpl
sub
adc
rorl
es
push
mov
pop
pushf
or
xchg
mov
or
loopne
sahf
sub
mov
sbb
je
add
sbb
mov
xchg
mov
mov
enter
lret
push
mov
shll
lock
clc
in
mov
cmp
out
dec
test
mov
rorl
iret
and
push
xlat
mov
xor
mov
cmp
mov
push
arpl
inc
fs
adc
pop
int
jno
cmc
std
cmp
outsb
xchg
cli
stc
mov
pop
push
daa
and
and
mov
dec
sti
or
insl
mov
push
adc
mov
fldln2
icebp
jo
jae
push
sahf
xchg
mulb
inc
push
mov
outsl
jmp
and
jmp
mov
lahf
mov
scas
pop
sub
push
lret
pop
in
pop
hlt
test
shll
shl
pop
add
xchg
mov
les
add
sbb
xor
ja
xchg
or
call
out
call
andl
addr16
loopne
sbb
mov
push
data16
sbb
sub
out
imul
je
xlat
int3
arpl
pop
lea
daa
sub
enter
jl
add
test
sub
push
das
jno
mov
les
idivb
mov
pop
jg
add
xor
movsb
lret
lcall
jne
pop
jl
movsl
fsubl
push
pop
jp
mov
inc
mov
jmp
jp
popa
push
fdivp
inc
in
and
mov
sub
pop
lret
mov
or
inc
test
sbb
das
test
dec
mov
loop,pt
lods
aas
cmpl
push
push
es
mov
cmp
xor
xchg
or
sbb
ds
ret
test
subb
in
dec
xchg
lret
push
pop
pop
stc
add
es
aaa
clc
jo
insb
or
arpl
jno
cmp
cli
into
jnp
jmp
fdivrl
dec
int3
jge
jno
fucom
xor
jnp
out
xor
sbb
push
xor
mov
push
add
leave
cmp
je
xchg
test
add
dec
js
push
pop
lret
test
jecxz
ffreep
jge
int
pop
mov
pop
xchg
and
js
pop
mov
inc
cld
cmp
divl
test
dec
fstp
fsubr
out
orl
movsl
and
in
cmp
add
das
mov
add
sbb
add
push
mov
xchg
or
jecxz
jns
push
out
jmp
mov
jecxz
sub
jg
cld
adc
lock
adc
popa
sbb
cmp
mov
ret
jp
mov
popf
int
pop
aaa
ret
push
and
xor
ret
dec
pop
repz
inc
je
cmp
push
insl
sub
bound
into
sbbl
cltd
aaa
bound
imul
lods
aas
sbb
ljmp
mov
pop
add
xor
xor
mov
and
sub
mov
jg
arpl
sbb
push
orb
cmp
add
std
hlt
jne
cmp
ret
mov
arpl
in
pop
call
rep
adc
dec
gs
jne
imulb
into
test
xchg
inc
mov
or
cmpsl
outsl
fucomip
mov
sbb
daa
daa
ret
xchg
inc
arpl
push
and
seto
and
call
xor
pop
rcrl
loopne
fstpl
cli
mov
xor
jnp
mov
inc
push
popa
adc
je
mov
mov
adc
in
stos
push
mov
lods
mov
jl
dec
push
fwait
imul
jl
jbe
mov
push
push
outsl
fsubrp
aam
ss
xchg
mov
fwait
push
xchg
xor
dec
sub
movsb
mov
dec
xchg
xor
xchg
pop
push
insb
pop
jnp
adc
and
jno
xchg
lock
adc
or
hlt
in
pop
sbb
sbb
inc
shrb
cmp
inc
pop
mov
loope
mov
mov
jg
popl
push
cmp
out
mov
push
jg
pop
pop
xor
inc
loopne
or
in
xor
add
in
sbb
lods
inc
in
add
dec
daa
pop
repz
in
and
adc
movsb
outsl
mov
sbb
stos
sbb
mov
xor
shlb
xchg
imul
dec
pop
mov
ret
popa
cmp
scas
inc
lahf
pop
out
or
sbb
ljmp
rsm
jg
outsl
mov
dec
push
jp
dec
lahf
pop
out
or
sbb
ljmp
rsm
jg
outsl
mov
dec
push
jp
dec
lahf
pop
out
or
sbb
ljmp
rsm
jg
outsl
mov
dec
push
js
dec
lahf
pop
out
mov
lcall
pop
fidivrl
divl
nop
jne
gs
orb
pop
imul
pop
pop
dec
psubusw
leave
out
clc
fucomip
iret
cwtl
mov
test
outsl
js
imul
pop
sub
dec
iret
cwtl
fucomip
iret
cltd
rorb
pop
in
dec
outsl
jns
imul
icebp
sub
fldenv
leave
mov
call
add
or
movsb
ret
xlat
pop
cld
lret
sbb
sbb
rorl
les
add
push
shll
fidivl
mov
fs
push
add
jle
push
inc
or
insb
adcl
mov
cltd
push
push
push
inc
daa
lahf
dec
scas
cmp
lahf
sahf
mov
test
sbb
and
lock
add
mov
jns
ficoml
ja
fsubl
jl
icebp
sbb
push
pop
sub
mov
mov
iret
lret
scas
cmp
push
jo
mov
in
jne
js
lods
rcrl
lcall
xchg
mov
lahf
test
push
jg
lahf
jns
imul
lds
fnstcw
sub
iret
jmp
push
mov
sub
daa
popa
pop
dec
insb
inc
jle
dec
push
mov
lea
aam
fucomp
push
cmp
cs
push
insl
sbb
jno
arpl
mov
cli
jecxz
mov
das
sub
sbb
dec
sub
pop
or
cmp
sub
fcos
leave
out
stc
fucomip
iret
cltd
mov
test
outsl
jns
imul
pop
sub
fcos
leave
out
stc
fucomip
iret
cltd
mov
test
mov
push
add
inc
fldl
nop
xchg
mov
cwtl
fstp
mov
sub
sarl
ljmp
arpl
les
adc
xor
or
dec
loopne
stos
out
pop
jbe
loope
and
test
add
lds
mov
repnz
mov
loop
xor
and
into
or
or
pop
test
test
pop
or
into
inc
sbb
dec
or
add
jno
test
and
inc
dec
sbb
fildl
fs
pop
sub
outsl
xchg
xchg
mov
or
inc
nop
cmp
cmpsb
inc
mov
imul
sbb
jne
and
push
dec
jp
mov
js
mov
dec
jge
std
push
int
popa
insb
jmp
xor
stos
and
fdivrs
mov
push
mov
jl
rdpmc
mov
aad
mov
mov
mov
lods
jge
cmpsl
jecxz
and
insb
inc
insb
push
add
xor
nop
cmp
cmp
mov
lret
add
lock
insl
ror
xor
hlt
add
imul
test
dec
movsb
loope
test
enter
pop
call
cmp
das
mov
fldt
xchg
gs
scas
jl
xchg
mov
out
lcall
dec
mov
jo
pop
dec
clc
loop
lods
inc
and
mov
jecxz
ret
fmul
jnp
dec
xchg
popa
lret
insb
inc
in
ret
shlb
inc
or
cmp
pop
in
add
testl
arpl
adc
sahf
cli
aam
push
iret
stos
ja
jge
push
clc
notl
pop
sbb
xchg
jne
movsb
pop
loopne
and
mov
in
imul
mov
xor
xor
imul
inc
pushf
cwtl
in
lahf
movsl
xor
mov
cmp
sub
xchg
out
jmp
into
inc
leave
loop
lods
frstor
cs
adc
adc
and
das
adc
movsb
jbe
sub
lea
adc
mov
cltd
imul
inc
sbb
dec
jp
rcl
or
lret
cmp
call
repz
andl
imul
sub
outsl
mov
mov
movsl
sub
sub
cmc
into
clc
push
mov
rcll
and
data16
mov
dec
cli
lcall
jmp
xchg
xor
aas
lcall
addl
add
divb
movsb
lret
mov
push
sarb
xor
sti
mov
scas
cmpsl
sub
xor
jge
xchg
ret
lods
aaa
lock
push
mov
bound
pop
cli
push
adc
xor
fbstp
insb
xchg
dec
decl
adc
insb
movsl
je
sub
fisttpl
cmp
enter
dec
loope
divb
pop
out
inc
shlb
mov
or
dec
int
aas
into
mov
mov
fs
rclb
out
jecxz
fs
es
ret
pop
xchg
test
jge
lahf
sbb
mov
mov
sub
xorl
cli
mov
pop
dec
xchg
jbe
push
in
sbb
xchg
add
jle
xchg
xchg
push
jge
sub
out
adc
xor
sbb
and
dec
lods
scas
pop
add
lahf
rcrb
mov
outsb
xor
test
mov
incb
dec
int
mov
pop
sub
ret
or
and
inc
not
rclb
rorl
cwtl
fists
mov
ja
int3
shlb
mov
pop
xchg
sti
outsl
xchg
mov
dec
jnp
insb
in
push
loope
push
aaa
jmp
mov
lods
sysexit
sbb
fsub
inc
jae
sbb
pop
loopne
add
ret
xor
sbb
xchg
add
push
push
ds
sbb
lret
jne
jno
mov
mov
das
arpl
push
sbb
xchg
xor
aam
mov
add
ljmp
out
push
cwtl
sbb
add
or
sub
mov
cmp
pop
imul
xchg
or
outsl
add
xchg
stos
adc
jmp
push
lret
jg
fsubrl
dec
jno
and
xor
jl
dec
rcrl
or
inc
shrb
ds
dec
pop
push
mov
lods
insl
scas
ljmp
mov
shlb
pop
add
loope
pop
ficompl
es
int
jns
js
adc
push
lcall
lock
inc
xlat
dec
movb
and
in
add
dec
jg
iret
adc
bound
xchg
mov
push
pop
in
aaa
jge
xor
jmp
mulb
cmp
test
or
push
xor
xor
mov
insb
jae
mov
aaa
xchg
pop
fcomip
jp
xor
mov
mov
xlat
in
je
arpl
jecxz
xchg
adc
sti
jecxz,pn
shrl
sahf
clc
cwtl
lea
and
mov
mull
repnz
dec
arpl
mov
cmp
add
sbb
rcr
js
pop
xchg
dec
mov
movsb
test
loop
ljmp
decb
adc
sar
shr
das
xlat
dec
loop
jno
out
outsb
rorb
xor
and
and
xchg
pop
push
mov
or
sub
sub
xchg
mov
adc
mov
xchg
xchg
xor
hlt
dec
cmp
roll
mov
jmp
call
mov
push
mov
in
ret
jmp
sub
cmp
in
mov
loop
and
add
aad
mov
ror
lahf
jns
and
addr16
xlat
loope
fdivrl
pop
xlat
mov
outsl
leave
test
xlat
inc
push
sub
cwtl
mov
cli
es
nop
js
adc
inc
cmp
imul
inc
push
sahf
imul
mov
or
inc
das
jne
ja
and
push
arpl
in
cmp
popa
lods
mov
fdivrl
mov
ljmp
stos
xchg
jg,pn
mov
pusha
add
enter
xor
int
into
pop
xor
int
fwait
xlat
jo
fs
mov
cmp
jge
loop
ljmp
aaa
mov
repnz
iret
push
mov
dec
in
push
adc
ja
mov
rcrl
adc
inc
popf
int
mov
cmp
jo
pop
movsl
out
sub
adc
ret
dec
in
dec
jg
out
jg
call
mov
jnp
lock
cli
push
mov
cmp
mov
add
xor
cmpsl
mov
dec
jp
xlat
cmp
pushf
cli
or
mov
mov
mov
push
mov
nop
jge
rcrl
andb
cmp
mov
sub
xor
aas
test
sbb
sub
dec
mov
imul
mov
call
mov
ret
fisttpll
dec
dec
pop
incb
cmpsb
or
stos
inc
pop
jne
cli
cmp
insb
inc
mov
scas
mov
xchg
cmp
mov
xor
mov
test
inc
test
xchg
dec
xor
gs
inc
and
ret
and
ljmp
cli
inc
rolb
jbe
inc
cmpb
xor
mov
movsl
jmp
inc
repz
cld
loop
cmp
repz
sbb
ja
jg
push
add
shll
push
pop
xchg
out
sub
dec
pop
out
inc
rol
int3
adc
mov
pushl
jb
xchg
or
sub
mov
lock
xor
in
fcmovne
push
mov
stc
lret
jb
rolb
mov
and
imul
mov
xor
stos
sbb
repz
jp
inc
insb
pop
sahf
jecxz
not
mov
out
push
cmpsl
subl
cli
rclb
sbb
lret
out
aaa
sbb
push
andl
lods
mov
into
imul
test
mov
mov
jle
pop
in
mov
xor
push
pop
pop
adc
outsl
push
out
loopne
mov
pop
sub
xchg
imul
lods
es
xor
xchg
pop
outsl
mov
mulb
loop
ja,pt
mov
cmpsb
popa
scas
jns
inc
test
cmp
pop
mov
jmp
inc
dec
or
movsl
idivl
dec
push
fs
unpcklps
popa
xor
inc
xchg
dec
into
fists
ljmp
cs
xorl
xchg
in
adc
pop
push
lret
inc
notb
loope
cmpsb
outsb
mull
lahf
and
arpl
and
pop
lea
sub
lods
inc
stc
push
xor
xor
xchg
push
pop
dec
push
aad
pop
sbb
jp
inc
mov
out
mov
scas
xchg
out
lods
insl
in
fdivrl
repnz
push
test
inc
push
fisubrs
ds
loop
js
inc
xchg
loop
mov
mov
clc
inc
ja
add
dec
adc
fnsave
inc
hlt
mov
cmp
inc
and
jns
add
jns
stc
movsb
inc
cltd
movapd
push
pop
subb
cmp
or
shll
mov
in
push
add
outsl
mov
sub
xchg
mov
loop
fnstenv
aas
filds
jbe
mov
clc
mov
fsts
fidivs
std
mov
insl
std
notb
pushf
xor
shrl
mov
push
push
jae
aas
dec
sbb
jg
pop
mov
jae
pushf
mov
cwtl
std
jbe
test
lds
out
pop
inc
push
push
xchg
call
nop
in
push
out
aas
push
addr16
mov
enter
jp
push
sbb
dec
addl
lret
lcall
out
negl
dec
and
cli
fiadds
rcrl
dec
testl
mov
in
xchg
mov
pop
enter
push
jno
subb
cwtl
pop
cmp
cmpsb
xchg
mov
fiaddl
jbe
pushf
adc
stos
hlt
iret
arpl
loop
jb
cmpsl
mov
andb
lods
fcmovne
dec
scas
jge
mov
xlat
ret
add
cwtl
push
mov
fwait
pusha
and
pop
inc
mov
fimuls
test
jge
fs
or
dec
mov
mov
mov
imulb
xchg
cmp
jp
sbb
cs
pop
cmp
sub
or
aad
insb
inc
bound
je
pop
adc
pop
pop
rcl
mov
mov
fmull
mov
cmp
cli
lods
out
cli
sub
mov
cmp
les
aam
jecxz
xor
add
sub
xor
adc
testl
sahf
pop
fs
dec
imul
call
mov
int
push
cmp
add
dec
inc
es
inc
cmp
sbb
sbb
jmp
mov
repz
pop
cmp
xchg
inc
out
fnsave
icebp
pop
pop
cmp
jecxz
fidivrl
push
outsl
or
sub
cltd
fstpl
add
mov
adc
fistpl
sahf
add
fisubl
jnp
fisubrs
xchg
adc
sub
cmpsb
push
sub
sbb
cmp
fsub
jmp
pop
mov
stc
cli
outsl
sub
fnstenv
test
ss
out
jne
push
mov
stc
lock
push
addr16
sub
jle
cwtl
or
jne
popf
in
ret
push
in
inc
inc
jle
out
cld
test
ja
mov
jo
adc
ret
or
mov
or
cld
mov
clc
inc
push
mov
enter
std
sub
leave
loope
pop
mov
mov
mov
or
jmp
enter
test
stos
mov
clc
mov
mov
das
jge
hlt
mov
out
je
repnz
xor
jle
mov
ds
insb
lds
jb
cwtl
jno
mov
test
mov
mov
mov
xor
movsb
lret
out
jbe
sahf
xchg
cmp
aaa
cmp
or
int
push
add
andl
out
xchg
mov
clc
xchg
lods
cmpsb
cmc
jns
fcompl
mov
fimuls
push
sbb
and
addr16
pushf
mov
adc
adc
mov
mov
cli
sub
sbb
xchg
or
jae
mov
dec
jg
lret
das
pop
iret
cmp
push
stos
imul
ret
sub
push
jmp
xchg
cld
or
int
mov
fnstenv
dec
nop
mov
add
xchg
push
mov
push
ret
icebp
push
or
pop
imul
bound
cmc
adc
mov
pop
rcrl
add
adc
mov
aam
and
rolb
int3
enter
push
dec
lods
xchg
fnstsw
imul
ds
in
pushf
mov
adc
adc
sbb
add
dec
dec
xor
pop
arpl
loop
mov
and
mov
push
stc
jge
mov
pop
sub
and
sti
cmpsl
js
jle
ret
insb
insb
cwtl
fsubrl
or
xchg
mov
mov
iret
rcrb
xor
lods
sub
jle
mov
add
fildl
pop
andl
loope
mov
fimull
pop
loopne
clc
cmp
cmp
test
mov
jne
xor
mov
in
inc
fistpl
outsb
sbb
mov
add
inc
mov
adc
test
call
or
mov
jmp
pop
repz
add
xchg
aam
movd
mov
sbb
sub
lods
inc
dec
mov
pop
fs
stos
lock
inc
sbb
sub
stos
test
pop
movsb
cmpsl
inc
scas
imul
jne
insb
out
sahf
sbb
out
popa
sub
incl
aam
mov
ret
aas
ret
xor
pop
icebp
sbb
jbe
mov
adc
clc
sub
imul
jmp
dec
jne
jp
out
or
dec
inc
leave
in
movsb
jle
or
outsb
nop
push
pop
movsl
mov
icebp
pop
jae
push
in
mov
xlat
test
xor
cmpsb
imul
stc
adc
in
or
and
pop
test
add
sub
pop
and
inc
ret
cmp
add
sub
push
das
repz
dec
add
pop
data16
fcompl
dec
arpl
data16
lods
fwait
out
jmp
in
cmc
xchg
bound
stc
xchg
pop
addb
push
bndldx
and
mov
pop
icebp
test
mulb
dec
lahf
nop
sbb
or
mov
push
xor
add
int3
loop
cltd
adc
dec
icebp
enter
xor
data16
jle
jb
fmull
cmp
mov
mov
jg
fstps
cltd
divb
pop
test
in
or
adc
popa
mov
lcall
mov
add
out
inc
mov
sub
out
outsb
scas
jb
inc
sbb
jp
repnz
pop
lea
std
mov
sbb
jae
sub
jbe
imul
scas
jne
data16
jmp
mov
rcrl
movsl
sub
mov
nop
loopne
pop
cs
push
dec
push
jecxz
push
repnz
cmp
jnp
cmpsb
jnp
or
cmp
lods
adc
xchg
rcrl
dec
and
and
imul
jge
ja
lahf
sub
sub
dec
out
push
lret
bound
dec
pop
xchg
cmp
mov
cmp
or
adc
cli
dec
loopne
jp
push
hlt
mov
push
insb
shll
into
bound
lods
pushf
jb
stc
jge
adc
pop
into
lock
das
inc
mov
ja
mov
xchg
and
add
je
in
pop
fistpll
js
mov
jno,pn
aas
seta
mov
adc
testb
pushf
jb
dec
scas
xchg
int3
cmpsb
loop
add
stos
mov
push
mov
mov
int
cmp
push
icebp
pop
popf
lea
xor
add
dec
jecxz
int3
mov
sbbl
sbb
rcr
dec
inc
or
fisttps
cmp
push
sbb
cli
pop
xchg
mov
pop
push
push
adc
call
aad
sub
iret
out
lcall
mov
insb
jbe
and
js
pop
int3
ret
mov
jae
stos
pop
mov
pushf
mov
test
in
das
jmp
sub
test
lcall
xchg
adc
or
sub
or
jno
popf
add
ds
push
dec
inc
enter
rorb
xchg
or
loopne
add
les
es
test
int
das
cmp
push
jb
add
shrl
adcl
test
mov
test
hlt
adc
test
mov
in
int
js
pop
jl
xor
add
shr
and
leave
orb
inc
stos
mov
cmp
jo
mov
test
mov
enter
into
lock
cltd
jge
pause
jno
sbb
cmp
and
fsubl
mov
inc
mov
xor
inc
mov
in
int
mov
cltd
divb
or
in
inc
mov
idivb
test
insb
inc
mov
mov
pushl
jecxz
mov
rcll
lret
ss
sub
das
push
aam
lea
sub
add
gs
sub
jle
in
mov
lcall
roll
push
xchg
cmp
jo
pop
inc
xchg
push
fiadds
push
jb
cli
adc
rorl
mov
imulb
cs
pop
sti
leave
ljmp
es
mov
xor
rcrl
std
inc
sbb
popf
jnp
or
push
adcl
jmp
mov
xchg
dec
popf
and
lret
ret
sbb
pop
lret
pop
jno
les
sahf
add
lds
fldcw
inc
mov
out
mov
repz
push
imul
sbb
cmp
xlat
dec
push
jecxz
ja
mov
js
mov
sar
rcll
cmpsl
movsb
ret
and
cmpsl
push
outsb
mov
insl
fsts
bound
jo
inc
cmp
sbb
sub
xchg
shlb
push
xor
dec
fsub
mov
cli
adc
and
nop
sub
pop
popf
ja
xchg
lea
leave
pop
movsl
cmp
add
push
xchg
addr16
pop
lret
iret
fsubrl
jge
mov
jo
jge
fdiv
and
jnp
fwait
test
sub
inc
jle
or
mov
std
test
cmp
mov
std
fucomip
jns
add
xchg
repnz
cs
or
sub
mov
inc
clc
orb
pop
push
mov
push
jne
sbb
cmp
pop
and
lahf
or
mov
sbb
mov
cli
inc
das
xlat
or
cmp
sbb
stos
xchg
and
cmp
mov
adc
orb
pop
das
cmpsl
adc
or
sub
pop
in
out
xchg
fmuls
jg
add
testb
add
lock
sub
cs
adc
xchg
cmc
inc
xchg
ret
and
push
mov
es
jmp
in
fwait
popa
ror
jecxz
mov
sbbl
mov
xor
notb
outsb
pop
jle
push
jb
fidivl
pop
shll
pushf
adc
aas
inc
sti
xchg
inc
xchg
push
mov
pop
seto
cmp
jae
push
pushf
adc
out
add
adc
inc
add
lods
rcrb
int3
cmp
stc
cmp
ret
mov
mov
add
sbb
fadds
aam
jmp
leave
pop
cs
test
jbe
inc
rolb
fldt
push
lods
cwtl
arpl
jne
dec
sbb
jp
incb
aad
lret
in
stos
addl
call
mov
test
jbe
popf
jbe
ljmp
imul
mov
daa
les
cld
enter
xlat
xor
ret
fmuls
cmpsb
inc
cmp
dec
pusha
js
jae
add
test
add
insb
dec
sbb
push
dec
lcall
ret
or
mov
sbb
inc
shl
arpl
push
xchg
psubsb
sub
in
mov
lcall
dec
cli
iret
jp
scas
cmp
jg
loope
jbe
adcb
jl
sbb
sbb
xchg
scas
push
adc
mov
xor
daa
mov
dec
das
jmp
jae
jno
mov
lret
adc
pop
or
nop
push
pop
fiaddl
cld
and
jbe
push
add
dec
repnz
sub
insb
leave
scas
fs
jae
add
add
cs
mov
ret
xor
push
loopne
movsb
and
in
pop
loopne
cmp
mov
aas
or
cmp
sub
fcos
leave
out
stc
fucomip
iret
cltd
mov
test
outsl
jns
imul
pop
sub
fcos
leave
out
stc
fucomip
iret
cltd
mov
test
daa
jns
imul
pop
sub
fldenv
leave
out
stc
fucomip
iret
cltd
mov
test
pop
jg
outsl
js
imul
lahf
sub
flds
leave
inc
push
fucomip
mov
inc
pusha
push
jo
fnsave
inc
stc
push
jmp
daa
cltd
js
mov
dec
imull
sbb
in
cmp
leave
ja
push
jmp
pop
mov
testl
aaa
mov
xchg
xchg
sub
outsb
maxps
lahf
ds
add
stos
sbb
outsl
hlt
dec
decb
popf
ja
or
lret
jo
cmp
push
push
cmp
adc
dec
add
addr16
or
inc
push
loopne
enter
ficoms
cmpsb
or
sbb
push
imul
nop
push
mov
ss
dec
pslld
pop
or
js
xchg
pop
ljmp
mov
addr16
cmpsl
std
fsubr
add
pop
and
fcompl
push
mov
mov
add
push
ja
testl
rcrb
mov
or
movsb
xchg
ja
or
jp
leave
cmp
sbb
or
cmp
cmpsl
dec
addr16
inc
cmpsl
push
ja
inc
lea
aaa
cltd
sub
cmp
pop
out
loope
jnp
push
mov
and
cmpsb
and
pop
in
int3
jp
xchg
sbb
cmp
pop
shll
dec
repnz
addr16
ja
and
pop
fldt
push
lcall
mov
or
pop
xchg
pop
push
stos
inc
sub
xchg
push
test
aaa
mov
mov
testl
sbb
sub
ja
inc
stc
push
jmp
pop
mov
testl
sbb
sub
mov
push
test
pop
or
sbb
leave
push
test
cmp
loopne
sbb
pop
mov
popa
cmp
push
xchg
stc
cmp
mov
push
loop
sti
test
push
inc
mov
mov
or
add
adc
sbb
aam
xchg
call
push
jle
addr16
cmp
stos
rcll
ss
pop
outsb
insb
stc
movsb
or
test
xchg
add
in
repz
cltd
jne
pop
ds
jo
fwait
aas
lcall
mov
mov
lods
aaa
cltd
adc
xor
pop
fwait
fwait
aam
and
adc
mov
cmp
mov
in
jo
pop
icebp
aaa
push
stc
add
jo
sub
mov
inc
or
xchg
mov
adc
gs
icebp
jl
mov
rcr
xor
xor
xchg
inc
jnp
fsts
imul
lock
inc
xor
jge
jmp
add
sub
les
into
mov
dec
xor
dec
pop
into
dec
mov
rolb
lds
dec
lcall
loop
fwait
lock
xor
loope
cmc
orl
inc
xchg
mov
xchg
pop
in
enter
pop
std
lret
xchg
push
aad
mov
push
xor
ja
sbb
ret
fxch
jbe
or
testl
xchg
in
int
mov
loopne
cs
jge
into
ljmp
leave
add
mov
mov
je
xor
push
and
and
mov
js
lret
mov
js
push
test
leave
jo
jb
stos
or
sarb
mov
push
pusha
pusha
sub
mov
push
mov
sub
or
push
xor
jg,pn
xor
xchg
inc
adc
inc
xchg
mov
daa
outsl
mov
xchg
mov
sbb
xor
or
and
scas
lcall
mov
and
pop
mov
cmp
popa
push
cld
push
aam
stos
sti
repnz
pop
test
outsl
addr16
xchg
fwait
pop
fbld
lcall
je
test
mov
xor
cmc
int
push
xorb
cmpsl
ror
mov
push
mov
and
cmc
push
push
out
xchg
dec
xor
pop
push
cmpsl
and
mov
insl
outsl
push
lods
mov
sub
cmp
push
xchg
addl
or
cld
cmp
in
popf
movsl
out
cmp
fsub
test
ret
mov
and
jnp
bound
js
or
inc
inc
inc
add
adc
test
nop
cmpsl
cmc
xchg
cmp
add
andb
mov
mov
inc
lea
mov
mov
push
adc
call
fsubs
and
push
lret
jae
sub
in
and
mov
ret
in
cli
popf
arpl
push
shlb
lcall
mov
dec
mov
mov
or
lret
dec
scas
push
cmpl
outsl
mov
pop
shll
pusha
out
fiaddl
or
xchg
test
popa
xor
cmpb
add
push
sbb
mov
sub
mov
pop
jge
in
pusha
lock
popa
xor
and
jmp
sub
sarb
xlat
xor
mov
jne
xlat
out
sbb
fstpt
int
xchg
or
or
in
aam
jg
xchg
or
outsl
fwait
pop
fnstsw
dec
enter
push
lods
fwait
jp
inc
cld
ja
and
rclb
jmp
lret
scas
in
pop
adc
or
roll
or
mov
jne
pop
mov
jb
xchg
and
imul
mov
popa
aad
inc
iret
rcrb
shrb
pop
es
and
loope
orl
pop
sub
mov
add
xor
xchg
inc
jae
push
std
mov
stos
sub
mov
out
dec
pop
mov
test
push
adc
pop
mov
mov
frstor
scas
fiadds
xchg
add
xor
dec
jno
rcrl
test
push
fs
out
mov
jmp
mov
scas
outsl
cwtl
fwait
mov
adc
pop
fstpl
es
sub
dec
inc
or
mov
add
push
dec
and
call
insb
inc
shll
add
xor
xchg
nop
mov
and
adc
flds
rorb
mov
mov
adc
mov
sub
ds
into
js
add
push
xchg
push
ds
pop
xchg
sub
pop
jl
popf
jns
jle
fisubs
xchg
xlat
cs
inc
sub
icebp
pop
lahf
shll
inc
fcomps
data16
movsl
movsl
xchg
cld
mov
add
sbb
mov
bound
adc
sbbl
addr16
sbb
jns
push
mov
inc
pop
sub
cmp
mov
push
pop
xor
imul
das
mov
mov
xor
jns
lret
push
aas
push
test
mov
sahf
pop
pop
clc
mov
sub
mov
dec
jbe
into
pop
mov
lock
add
cmpsl
mov
rclb
mov
mov
movsl
cltd
xchg
pop
inc
scas
pushf
orb
sbbb
fwait
add
sub
xlat
xchg
jo
mov
scas
jno
je
dec
push
stc
push
xchg
mov
sub
or
cwtl
push
cltd
jle
ljmp
dec
sbb
fldpi
cmp
shlb
adcl
aaa
stos
cmc
push
jbe
imul
mov
or
jb
mov
pop
ss
mov
popa
loopne
pop
pop
inc
stc
xchg
xchg
or
xchg
loope
mov
inc
shrl
mov
jbe
loop
sub
call
popa
lea
iret
xchg
sub
cmpsl
fldenv
lret
xchg
pop
gs
cmp
cmp
filds
inc
mov
adc
negl
fwait
lock
repnz
je
and
dec
xchg
loopne
in
add
loope
repz
cmp
lods
pop
and
sahf
sbb
aam
dec
mov
cmp
inc
dec
jo
jl
add
mov
and
fsts
sub
inc
mulb
push
mov
sub
ret
sbb
mov
or
sti
dec
out
adc
inc
mov
bound
lds
das
nop
cltd
pop
enter
xchg
jecxz
xchg
lock
mov
inc
mov
mov
push
dec
sub
loope
sub
sub
or
or
clc
inc
inc
xchg
fldl
cli
out
das
push
jmp
xchg
loop
fdivl
adc
leave
xchg
pop
shl
aam
test
mov
push
cli
les
cmp
push
hlt
in
xchg
lods
sub
sub
fisubrs
lret
fstp
test
sbb
mov
lods
shrl
or
fs
addr16
loope,pn
xchg
js
or
rorl
imul
push
fcoml
test
into
xor
lock
ret
idivb
es
mov
into
xchg
pop
cmp
mul
test
scas
in
leavew
and
mov
mov
or
cmp
popf
pop
sub
insl
xor
in
dec
fisubl
inc
movsb
jno
add
stc
xlat
loopne
push
dec
lds
outsl
jecxz
push
mov
mov
adc
and
mov
dec
lods
and
mov
imul
lahf
adc
fisttps
mov
pop
pop
mov
push
das
es
jl
mov
in
scas
mov
in
and
mov
mov
fs
xchg
and
subb
cltd
pop
mov
cs
mov
movsb
dec
test
aam
mov
aas
or
xor
add
dec
daa
inc
mov
aas
pop
mov
je
pop
cmpsl
cltd
and
jle
cmp
cs
add
adc
jl
mov
push
lock
mov
inc
or
out
adc
sahf
xchg
into
ret
mov
mov
xor
mov
aam
mov
iret
xchg
test
dec
jp
xor
mov
aas
inc
stos
dec
mov
push
movl
mov
sub
xchg
aad
mov
stos
out
xor
xor
xor
fadds
in
xor
loop
push
pop
std
xor
aaa
pop
push
jle
cmp
dec
push
fdivr
aam
stos
scas
jb
test
jle
rolb
jne
insb
cmp
fiadds
inc
in
cmp
xor
es
push
or
lods
sbb
icebp
ljmp
and
sbb
and
pop
push
sub
jecxz
lods
jle
pop
sub
xchg
adc
push
mov
mov
add
adc
test
and
and
push
xor
inc
dec
sti
leave
jge
pusha
sbb
loopne
int
push
js
mov
test
dec
jmp
aaa
imul
jp
scas
sub
mov
or
sbb
push
and
popf
orb
fldl
mov
fidivl
sbb
sahf
out
mul
incl
sbb
mov
push
out
mov
xorl
sub
mov
push
lret
in
cmpb
adc
xchg
inc
lret
mov
stos
imul
cmc
loopne
gs
xchg
add
das
insb
aad
decl
adc
push
popa
mov
inc
mov
jnp
cmp
bound
dec
aad
add
sub
inc
aaa
fstps
xor
aad
in
into
pop
and
jns
clc
test
outsb
sbb
sbb
and
insl
xchg
cld
mov
jae
jnp
push
addr16
mov
cmovb
adc
lds
push
rclb
test
mov
rcrl
and
inc
cmpsl
sub
mov
daa
xor
jnp
in
ret
scas
cmp
rorl
mov
jno
sbb
adc
and
mov
and
outsb
xor
lahf
lds
or
sub
aaa
dec
enter
or
subl
nop
rcrb
aad
add
mov
pop
push
pop
sub
cmp
and
dec
sbb
sub
fistpll
fisubrl
fisubrl
mov
js
pop
xchg
ds
cltd
hlt
stos
lcall
or
stc
addl
ret
jnp
inc
mov
or
jg
in
lds
dec
ds
lahf
or
mov
lods
lock
jne
fistpll
pop
fs
fildll
and
dec
jo
cmp
dec
jno
mov
inc
xchg
scas
and
dec
or
fimuls
push
dec
lea
xchg
pop
movsl
out
in
push
pop
imul
add
imul
add
dec
test
sub
xchg
stos
sbb
sar
movsl
leave
jecxz
and
int3
ljmp
outsb
fldcw
pop
cld
cmp
ret
jb
ja
adc
aam
sbbb
mov
pop
in
push
outsl
imul
xchg
cmc
lock
jp
jnp
clc
xchg
decb
inc
fyl2xp1
adcl
add
cmp
dec
and
xchg
outsb
lods
jbe
push
mov
popf
cmpsb
test
lds
push
adcb
cmpsl
notb
xor
mov
jae
fwait
jb
lret
insl
pop
mov
leave
sbb
mov
fcmovu
cmp
sahf
pop
adc
fmuls
cwtl
add
mov
mov
lcall
or
loopne
mov
dec
mov
fwait
popf
push
lea
inc
ja
xchg
shrl
xor
sbb
adc
push
and
es
lcall
in
mov
mov
fs
add
mov
pusha
or
mov
xchg
cwtl
pop
adc
or
or
fldcw
adc
inc
divl
mov
bound
mov
inc
test
gs
scas
mov
fsubl
movsb
ds
xchg
mov
aam
jno
in
sub
xchg
pop
pop
push
or
loope
or
outsl
push
mov
sub
push
xor
mov
push
push
fldl
mov
adc
jmp
dec
jo
lods
pop
lock
mov
mov
mov
push
mov
mov
pop
cltd
int3
dec
sub
out
jne
or
push
and
les
xor
cmp
jecxz
jnp
stc
adc
pop
jo
jg
outsb
inc
jnp
sahf
cmp
lock
lds
sbb
sbb
sbb
movsl
push
nop
data16
subb
and
xor
xor
pop
inc
call
pop
imul
shll
sbb
cmpsb
std
ds
sbbl
adc
and
adc
sbb
sahf
dec
cmp
mov
pop
sbb
push
and
shrb
xchg
pop
loope
mov
dec
push
and
imul
mov
andl
test
mov
mov
xchg
mov
dec
out
aam
addr16
cmp
jmp
in
add
ja
push
or
orb
imul
add
fmuls
rolb
loope
test
xchg
shrb
fdivs
aam
push
pop
jp
push
add
xchg
push
mov
adc
jecxz
mov
push
cs
in
xor
popa
and
jbe
mov
pushf
jecxz
xchg
cmpsb
and
pop
lock
popf
mov
das
jg
das
es
and
cmp
jo
js
daa
xchg
add
rol
adc
aaa
in
test
fs
adc
popf
sbb
cld
lock
lea
popf
sub
shll
imul
mov
lea
leave
ss
cmp
inc
andb
pop
ficoml
loope
and
lcall
dec
vxorpd
or
bound
mov
add
fldt
add
jecxz
in
pop
dec
pop
jecxz
je
ss
cld
shlb
jl
mov
pop
inc
pop
cmp
fdivrl
xorl
enter
lds
addb
push
stos
jnp
sub
cld
aam
cmp
out
enter
les
sub
fadd
rorb
cwtl
dec
sbb
imul
rol
rcl
movsl
ret
ss
ficoml
aam
push
test
sub
aas
lods
push
push
test
fimuls
mov
addr16
orb
xchg
push
and
mov
push
subl
cmp
cmp
sub
shll
shll
sub
inc
fldl
push
or
add
lods
mov
inc
or
or
in
push
sub
cltd
stos
lds
fmuls
adc
imul
pop
cmp
je
and
loopne
mov
stc
ja
lret
cmpsl
cmp
xor
mov
mov
movsb
imulb
cs
sbb
adc
cmp
adc
push
shll
outsl
scas
das
ds
test
push
call
dec
push
add
xor
jno
shll
cmp
or
jb
dec
pop
mov
jns
or
pusha
mov
arpl
cli
mov
pop
arpl
sbb
push
negb
loope
mov
shlb
dec
ret
lret
mov
aaa
push
nop
in
sti
out
cmp
mov
int
xlat
test
fisubs
out
mov
push
adc
bound
out
dec
in
dec
jle
jg
testl
mov
loopne
cmpl
test
cmp
pusha
pusha
les
mov
inc
aam
loop
mov
jbe
in
and
push
jno
cwtl
or
sbb
dec
sub
sbb
jbe
iret
ror
mov
loope
movb
cmpsb
fisubrs
add
repz
stc
fistl
imul
add
test
imul
sbbl
push
pop
cwtl
jno
icebp
add
push
lock
out
jns
les
in
mov
sbb
or
pop
outsb
aas
imul
das
push
setnp
outsl
fbld
inc
das
mov
pop
pop
jle
mov
lods
mov
das
adc
mov
or
sub
enter
testb
mov
arpl
outsl
and
push
pop
inc
lods
and
mov
test
jns
jmp
fcoml
outsl
jnp
stos
lds
nop
mov
test
xchg
mov
stc
fmull
inc
mov
fisttpl
das
adc
imul
iret
and
cli
subl
xor
in
out
adc
stos
sbb
mov
scas
dec
cmpl
pop
leave
test
arpl
dec
mov
jo
sub
test
push
mov
inc
mov
push
pop
orl
mov
mov
push
pop
add
test
lods
leave
jecxz
sti
cmpsl
loopne
in
popa
lods
insl
fs
mov
pop
shl
xchg
mov
fcomp
lods
nop
adc
aaa
or
cmpsl
sub
push
xchg
clc
stos
jp,pn
fistps
jg
push
jo
call
loop
add
add
cld
push
rorl
xchg
imul
fistpll
dec
stos
addl
or
lcall
jmp
clc
repz
das
jno
mov
in
out
adc
jae
jl
cmp
and
mov
add
pavgb
ja
aad
xchg
cmp
jb
mov
sub
scas
sub
stc
aas
add
insl
sub
lock
fidivs
scas
cmp
cmc
aas
pop
dec
cmp
ds
pop
inc
push
mov
lcall
inc
in
test
add
pop
in
imul
std
push
imul
sbb
nop
cmp
xlat
xchg
call
cmp
adc
jb
mov
sub
jmp
or
pushf
std
add
xor
mov
mov
jne
inc
and
add
mov
adc
cmpsb
andb
rcrl
push
jmp
mov
mov
dec
mov
xor
push
scas
mov
orl
lods
jle
lock
test
cmp
shlb
daa
imul
out
mov
pushf
push
pop
add
and
cltd
mov
push
dec
movsb
fnstcw
dec
push
in
cmp
lds
mov
push
sbb
pop
movsl
js
shlb
inc
mov
and
sahf
fnstcw
lods
neg
push
icebp
xor
in
jl
jae
movsl
sub
insl
cmp
lret
js
enter
xor
idivl
and
inc
sub
pop
cmc
or
push
jmp
imul
and
les
aas
cmc
or
or
or
nop
les
jno
pusha
inc
dec
fstpt
fs
daa
lahf
leave
out
negb
dec
in
insl
mov
pop
lea
add
adc
adc
sbb
pop
xchg
stos
popa
xor
inc
dec
pop
inc
enterw
ja
push
cmpsl
or
iret
icebp
cltd
push
inc
mov
out
xor
cmpsb
push
repnz
dec
paddd
dec
lea
push
mov
imull
push
mov
movsl
cmp
test
pop
xchg
orl
mov
jo
out
cltd
add
jne
lods
sbb
jecxz
push
roll
sub
push
icebp
push
push
pop
dec
mov
repnz
mov
outsl
loopne
notl
pop
jnp
sbb
scas
ds
or
cmp
adc
push
mov
pop
jecxz
cs
mov
or
dec
loope
add
imul
inc
das
mov
ljmp
xchg
je
push
xchg
jns
sarb
mov
mov
mov
js
jmp
mov
out
xor
dec
out
xchg
mov
cltd
ret
addr16
push
jge
mov
lea
call
aad
mov
jle
repz
mov
rcr
or
dec
add
shr
nop
push
cwtl
ja
jg
cmp
clc
mov
inc
ljmp
jb
dec
inc
out
xchg
in
add
mov
iret
adc
pop
push
icebp
pop
push
fcompl
rcrl
lcall
jbe
xchg
pop
ret
movl
push
std
in
arpl
push
das
and
adc
adcb
clc
outsb
jl
mov
dec
inc
add
mov
pop
or
popf
mov
sar
cmp
sub
pop
aaa
pop
mov
pop
jecxz
mov
movsb
stos
push
addl
scas
in
gs
mov
cmpb
adc
gs
scas
sub
das
mov
pop
or
lcall
in
loopne
adc
int
enter
jg
xchg
xchg
adc
jle
mov
push
jb
pop
test
int
and
inc
ljmp
hlt
or
jecxz
xor
pop
dec
jo
or
mov
imulb
adc
je
mov
or
loope
adc
inc
jl
pop
sbb
sbb
or
jno
cwtl
mov
fildll
xchg
test
cmpsl
dec
push
xchg
fmul
dec
cld
push
jmp
pop
mov
testl
sbb
sub
ja
inc
stc
push
jmp
pop
mov
testl
sbb
sub
ja
inc
loope
in
daa
cltd
aaa
loop
mov
testl
sbb
cmpsb
int
cmp
push
test
xchg
xchg
imul
jns
push
shlb
jno
inc
push
imul
cs
pop
push
cmp
pop
cmp
sar
outsb
jmp
fldt
cs
fwait
decb
push
pop
cs
pop
cmp
jle
outsb
or
fldt
stos
fldz
mov
pop
testb
sub
outsb
or
push
lods
jmp
mov
mov
mov
inc
xor
xor
sbb
dec
enter
psubusw
jecxz
mov
dec
fwait
jl
and
xchg
ljmp
cmp
into
aam
sbb
cli
adc
ficoml
and
xchg
inc
dec
adc
loopne
dec
jns
lods
cmp
xchg
mov
cli
jbe
pop
out
push
mov
sbb
imul
rolb
ret
call
mov
xchg
outsb
hlt
lahf
and
fwait
and
into
push
jmp
loope
add
cmp
ds
push
in
mov
and
or
fs
loope
xchg
xchg
aas
cmp
cmpsl
cmpsb
subl
jmp
lret
pop
lret
popf
insb
decb
pop
imul
cs
mov
sbb
or
adc
enter
xchg
mov
out
loop
adc
imul
and
push
and
or
pop
sahf
sahf
fstpl
lods
fisubl
lret
imul
dec
cmp
jae
dec
mov
stc
sbb
mov
fsubs
bound
pop
xor
or
sbb
sahf
sti
mov
mov
mov
out
mov
jnp
imul
cs
pop
cmp
jle
outsb
or
fldt
stos
fwait
out
mov
jnp
and
jmp
cmpsb
xchg
adc
int
sbb
fldl
push
inc
dec
sub
loop
jmp
aas
ficomps
mov
stos
push
mov
cmc
and
clc
std
xchg
dec
lcall
add
dec
out
out
cmp
sub
xchg
mov
pop
jo
xor
adc
clc
loop
hlt
push
lahf
or
stos
out
dec
out
lods
sub
inc
imull
xchg
sahf
ss
push
aaa
clc
pop
sbb
hlt
mov
clc
mov
and
push
jg
cld
pop
jo
and
jp
out
mov
out
lret
xor
xchg
rcl
ljmp
je
scas
test
test
cmp
jb
add
or
pop
in
stos
xor
xor
enter
jg
mov
sahf
or
ja
cmp
xor
and
mov
fcmovne
pop
dec
jecxz
mov
in
mov
pop
inc
movsb
lcall
loope
mov
push
push
jno
imul
or
jp
xchg
cwtl
dec
icebp
pop
cld
in
repz
and
out
in
mov
push
cmp
jo
xor
movsb
adc
xchg
mov
sbb
xor
test
fidivrs
adc
in
dec
jecxz
movsb
mov
mov
jp
les
add
jp
and
or
mov
loopne
mov
add
scas
mov
mov
lods
push
in
adc
inc
jo
stc
test
pop
jecxz
iretw
dec
lahf
and
js
ret
rcl
clc
xchg
test
addr16
das
clc
xor
daa
repnz
shrl
xor
push
lods
fsub
adc
aaa
sbb
test
in
movsb
and
ret
aas
test
icebp
sbb
ja
mov
je
int3
jbe
out
pop
addl
adc
dec
lods
xlat
cmpsb
int3
loope
cmp
or
test
ss
loope
adcl
adc
fidivrl
loop
mov
xchg
jo
outsl
inc
cs
adc
dec
clc
adcl
addb
pop
inc
jecxz
add
jns
pusha
stc
mov
outsb
dec
xor
mov
sti
test
lds
fwait
push
inc
in
sub
dec
pop
adc
adc
lock
sahf
or
call
bound
mov
jo
test
cs
clc
adc
fs
fnstcw
pop
inc
out
and
jmp
mov
cltd
mov
mov
xor
add
jg
iret
mov
push
pop
fisubrs
and
adc
sub
inc
sbb
cli
scas
or
xchg
sub
add
jp
lcall
popa
sub
mov
jge
mov
addb
sbb
in
enter
out
idivb
lods
xchg
movsl
lods
sbb
cmp
jmp
lds
pop
pop
aas
bound
das
and
iret
cmc
sti
cmc
aaa
addb
rorb
stc
pop
add
fwait
push
and
push
stos
sub
inc
adc
lods
cmc
mov
int3
lods
jno
imul
les
sub
fstps
sub
sahf
lods
addr16
movsb
test
fistpl
insl
repnz
fadd
inc
push
call
add
lods
pop
and
push
sti
aam
add
pop
dec
push
mov
in
shll
icebp
mov
inc
jecxz
int3
cld
int
mov
pop
mov
pop
dec
scas
adc
aas
cmp
sahf
frstor
add
push
scas
mov
xchg
cmc
aam
shlb
xchg
test
xlat
sub
out
subb
loop
push
outsl
pop
dec
cmc
inc
cmpsl
out
les
pop
out
leave
gs
fdivrs
inc
icebp
and
leave
scas
sub
outsb
and
bound
ljmp
sbb
inc
adc
push
push
cwtl
cmp
inc
xchg
das
in
mov
cwtl
sbb
adc
mov
daa
ds
sbb
aas
lods
loop
add
test
add
jle
enter
jg
dec
cmc
rclb
sbb
mov
adc
dec
out
lea
insl
lods
add
add
test
mov
lds
dec
and
aad
insl
hlt
jmp
es
fildl
loop
ja
or
lcall
adc
mov
mov
mov
or
inc
xor
mov
dec
repz
push
mov
xchg
bound
notb
jp
cmpsl
cmp
jo
push
xchg
sahf
cmp
test
inc
push
popf
orl
pop
pop
cmpb
in
sub
pop
fldenvs
push
add
pushf
push
sub
outsb
fstl
vmovshdup
xchg
mov
icebp
or
or
mov
lret
outsb
xor
or
jne
push
cltd
pop
idivb
sub
pop
scas
sahf
push
ljmp
test
push
jmp
xchg
js
pop
fldenv
xchg
insl
xchg
inc
fs
xchg
cli
sbb
cmp
fldt
adc
sub
pushf
mov
jecxz
or
inc
pop
notl
lock
cli
jnp
cmp
outsb
or
or
xor
cs
in
cmpsb
pusha
add
cmpsb
scas
icebp
mov
sti
adc
mov
mov
xchg
dec
mov
cmc
pop
loope
xchg
mov
popf
inc
mov
aaa
shrb
push
pop
sbb
dec
sub
jl
mov
into
mov
adc
mov
pop
pop
push
aad
cmp
nop
mov
pop
cmp
pop
push
arpl
in
mov
cmp
out
pop
ja
xor
push
inc
arpl
dec
or
cmp
shrl
cli
mov
ficoms
push
ret
mov
pop
xchg
loope
push
mov
mov
mov
or
ret
aam
data16
orb
sbb
in
ljmp
jnp
push
pop
pop
iret
stos
test
call
cs
aam
rolb
imul
pop
out
adcb
rolb
or
repz
fsubrl
lock
ja
cmpsb
rcr
js
cmpb
add
aad
adc
test
adc
cmp
push
mov
mov
adc
je
lock
cmpl
inc
movsb
push
outsb
xchg
xorb
arpl
sbbl
inc
cmp
movsl
int3
test
jne
jno
push
lods
dec
imul
adc
jae
adc
loop
cmp
aas
idiv
js
aas
test
sub
xlat
inc
pop
fdivrs
dec
inc
popa
cwtl
pop
mov
push
testb
cmc
cld
in
shrl
scas
mov
adc
ret
dec
push
and
inc
lds
adc
icebp
dec
jl
ss
rcr
xor
and
or
xor
testb
adc
fwait
cmpsl
push
jno
dec
jmp
imul
inc
out
push
sub
mov
aaa
inc
xlat
sbbl
sub
aaa
sub
out
push
sbb
sub
mov
sbb
test
xchg
inc
cmp
mov
dec
sub
push
scas
test
adc
jne
mov
int3
std
xchg
push
cmp
push
adc
dec
cmp
adc
add
sub
add
imul
mov
aas
add
xor
hlt
mov
out
dec
push
out
jl
std
jl
arpl
sahf
add
cmp
es
rcr
pusha
add
orb
shrb
std
cmp
fldl
clc
mov
lahf
addb
cld
xor
xchg
test
scas
dec
dec
mov
mov
filds
jmp
aaa
xor
cmp
adc
jnp
push
fisttpl
rcrl
daa
loop
cwtl
add
test
jmp
push
jg
mov
mov
aaa
xor
xchg
mov
jecxz
xchg
lahf
xchg
jmp
inc
add
push
dec
test
xor
adc
sub
dec
loope
call
gs
sub
imul
out
cmpsl
call
sub
mov
xchg
jl
mov
adc
pop
dec
je
inc
scas
and
in
push
sbbb
xor
cmc
fiadds
stc
push
movsb
ljmp
push
jge
aam
mov
mov
push
cmp
inc
icebp
sbb
cmc
jecxz
into
clc
cmpsb
sbb
gs
xor
mov
out
xor
mov
adc
jo
mov
popf
pop
inc
jmp
jge
pop
ljmp
popa
xor
push
mov
cmpsl
and
add
in
jp
shlb
and
aaa
dec
fucom
and
adc
ret
insl
mov
or
cmpsl
inc
fisubrl
das
or
dec
and
jbe
inc
push
iret
in
inc
cli
push
add
push
xchg
fs
jg
mov
pop
fwait
mov
push
and
xchg
leave
or
xchg
daa
pop
orl
or
mov
aaa
in
push
or
add
movsl
es
pop
push
mov
movsl
mov
dec
pop
mov
inc
inc
repnz
jecxz
arpl
insb
inc
js
jb
fistpl
ret
and
mov
or
addr16
lahf
stos
cmp
adc
enter
leave
push
inc
push
loope
mov
push
adc
lret
out
mov
and
jmp
or
jge
psubd
sbbb
into
jb
int3
repz
pop
jb
andb
push
nop
dec
shlb
fwait
lods
xlat
jbe
sub
das
and
pusha
jle
mov
adc
sbb
shrb
lock
popf
imul
dec
mov
or
lods
out
sub
lods
imul
mov
add
sti
sub
xor
cs
mov
mov
mov
mov
in
insl
fsubs
xchg
imul
std
filds
inc
adc
pop
repz
in
and
out
rorl
aad
jbe
fsubs
call
inc
jae
aad
sar
xchg
xchg
mov
xchg
lret
pop
jns
jecxz
vpcmov
iret
mov
outsl
push
mov
push
and
ror
lret
fcomi
lea
mov
cli
sub
add
push
jno
popa
jae
outsb
or
lods
push
mov
push
inc
movsl
fsubs
ja
aas
cwtl
rcrb
lret
outsl
inc
lock
cld
ret
pushf
data16
cld
sbb
cmp
jecxz
out
inc
orb
pop
mov
into
lahf
repnz
cmp
test
xor
rclb
scas
test
pop
xchg
and
cs
and
jecxz
mov
push
cmc
inc
pop
jl
jae
lods
mov
dec
jne
add
jb
dec
adc
push
mov
dec
sbb
fistl
or
rcr
pop
and
jo
shll
mov
push
outsb
or
xchg
jg
cld
rcll
sahf
dec
pop
pop
pop
pop
data16
in
and
jp
ret
mov
shll
mull
test
and
hlt
ljmp
in
push
jo
add
fistps
and
pop
jbe
test
shrl
sub
mov
mov
dec
lock
stc
jmp
das
adc
jbe
xlat
mov
cmp
fistps
in
scas
outsb
dec
ficoms
rolb
mov
ljmp
in
out
mov
adc
mov
or
xchg
scas
test
movsb
cmp
dec
or
int
out
mov
and
iret
loope
enter
mov
sub
fwait
xchg
stos
dec
loope
vcvtss2si
gs
mov
xchg
mov
cmc
mov
dec
inc
cwtl
mov
pusha
adc
or
mov
aas
push
and
jge
cmpsl
jle
and
leave
enter
lods
and
test
ret
xchg
xchg
in
sbb
daa
repnz
or
push
push
mov
scas
xchg
sbb
cmpsb
arpl
or
pop
aas
mov
imul
cmp
add
repnz
pop
leave
sbb
adc
sub
in
lret
sbb
stc
fcoms
mov
adc
fsubrl
mov
fisubrs
mov
and
fdivl
iret
stc
mov
xor
pusha
mov
jae
sti
mov
faddl
dec
sub
je
es
lahf
aad
xchg
outsl
js
adc
insl
cmpsb
stc
mov
sbb
stos
jb
sub
rcr
das
clc
gs
adc
xchg
imul
into
hlt
cs
out
xlat
mov
mov
pop
pop
mov
lds
xorb
mov
push
cmc
lahf
xor
fistps
imul
cwtl
loop
das
mov
mov
mov
aas
cmp
dec
sahf
sub
jae
cmp
pop
mov
and
or
sbb
dec
xor
aam
jo
adc
ljmp
ret
pop
xor
jae
or
std
xlat
lds
adc
movaps
nop
loopne
popa
sti
dec
mov
jo
jae
std
aaa
inc
test
inc
inc
mov
jae
sub
mov
xchg
int
sub
jne
lods
lcall
cmpb
popf
mov
mov
iret
aas
ss
xor
test
dec
test
bound
dec
fnstsw
cld
mov
mov
or
lret
lods
dec
jge
leave
mov
push
outsb
jg
add
sbb
into
jl
sbb
cmp
addr16
pop
ljmp
fcoms
mov
and
inc
mov
xor
notl
add
cmp
aaa
in
mov
clc
sub
out
mov
subl
xchg
js
shl
xchg
add
gs
jns
push
mov
pop
pop
adc
dec
aam
pop
jge
std
mov
lret
addr16
sub
jno
add
xchg
sbb
call
or
mov
cmc
inc
cltd
aad
xchg
adc
fisubrs
mov
sbb
jae
jl
sbb
cmp
movsb
sbbl
xor
pop
in
inc
sbb
jne
dec
lods
cmpsl
jmp
jmp
loop
lods
mov
cwtl
out
pusha
and
out
outsl
push
shll
dec
push
inc
ljmp
imul
and
int3
rorl
stos
ja
in
ficomps
push
outsl
cmp
cmc
aaa
pop
mov
mov
int3
push
mov
and
movsb
xor
insl
mov
jle
cmp
aad
stc
or
cmp
mov
cmp
adc
repz
call
scas
inc
cmc
repz
icebp
pop
mov
out
mov
ja
xor
push
mov
mov
es
cmp
aad
push
xchg
inc
sub
aad
inc
jg
or
jbe
clc
lret
pop
dec
pop
push
fisttpl
test
lods
stos
sub
or
add
jnp
cmp
add
mov
xor
cli
adc
repz
push
lock
pop
and
xchg
cmc
xor
jl
sti
sar
fwait
imul
inc
insl
iret
cmpb
xchg
jle
mov
call
dec
sbb
xor
pop
lcall
mov
ss
xor
lcall
add
ret
cli
push
into
lock
xor
lcall
and
push
mov
jo
inc
shlb
test
les
out
jl
or
stos
jno
movsl
dec
xor
ss
fwait
imul
add
and
sub
cmp
mov
fnstcw
mov
stos
cwtl
mov
mov
pop
fldenv
mov
sbb
push
aas
sti
sub
scas
add
insb
mov
inc
js
fistl
int
stos
and
call
add
mov
mov
mov
jbe
mov
push
add
shlb
pop
cmpsb
inc
test
xor
jg
int3
popa
xlat
add
loop
dec
or
sahf
rcl
sbb
inc
jle
jae
xlat
cs
cmpsb
mov
xor
mov
mov
push
subl
push
adc
mov
pop
jns
sbb
lret
ljmp
aaa
enter
sbb
test
sbb
outsl
add
shr
pop
push
ds
add
adc
xchg
data16
cltd
or
insl
int
mov
mov
mov
mov
stc
and
sub
and
push
or
mov
jo
mov
xor
push
mov
add
or
loopne
sub
stc
mov
dec
jae
xchg
push
fdivrp
sbb
vminsd
divb
mov
inc
and
popf
xor
xchg
cmpb
sahf
jae
loopne
cmp
lret
xlat
pop
in
cmp
add
cmpsb
mov
fistl
sbb
and
jns
mov
cs
pop
dec
jo
jl
jle
dec
xor
cmpsl
gs
movsl
data16
repz
mov
mov
cmp
push
daa
mov
cmpl
scas
inc
and
sbb
mov
insl
mov
ret
sbb
or
xchg
shr
leave
xchg
pusha
xchg
pop
movsb
int3
int
xchg
pop
and
lcall
int3
gs
mov
sbb
mov
ficoms
idiv
popa
adc
pop
lcall
mov
cmp
int3
imul
xchg
mov
mov
sbb
iret
push
adc
jbe
mov
movsl
mov
dec
arpl
fbld
loope
mov
cmp
sbb
push
lret
pop
adc
push
fcompl
jp
jnp
scas
add
jp
popa
or
lods
lahf
and
jle
sbb
dec
pusha
in
push
or
cmp
mov
fwait
adc
sbb
fyl2x
pop
push
into
cmpsb
bound
mov
add
subb
pusha
inc
negl
fidivl
rcll
fisubl
add
daa
dec
divl
push
cmp
sub
mov
pop
add
add
fnstsw
sbb
mov
xlat
mov
mov
faddp
out
pop
ja
xorb
add
sub
xor
pop
pusha
and
sub
out
xor
pop
cmp
sub
aas
outsl
popfw
cmp
fstps
push
insb
sbb
jmp
dec
lcall
push
repnz
dec
push
pop
mov
pop
in
xlat
subb
sarl
loope
das
repnz
mov
cld
mov
mov
adc
sbb
test
cld
push
mov
sub
jo
jb
mov
addr16
jb
popl
cli
xchg
imul
lret
imul
pop
push
sub
cltd
mov
sbb
pop
loop
pop
mov
cmp
imul
mov
mov
xor
call
into
cmp
cmp
dec
mov
ja
ret
les
sahf
into
sub
into
out
dec
cmc
add
mov
mov
pop
xor
cmp
cmp
stos
mov
mov
loop
dec
movsl
and
out
jns
jg
ror
std
dec
iret
in
cmp
or
fdivr
std
sbb
jmp
dec
insb
insb
pusha
push
adc
das
sbb
cmp
nop
jmp
aam
outsb
cld
outsb
jge
out
enter
sbb
imul
lods
inc
pop
pop
jae
pop
pop
ficoms
and
popf
lods
stos
mov
mov
ss
pop
stos
repnz
jmp
lods
out
dec
lahf
jno
jno
xor
pop
xchg
shrl
insb
scas
xor
sbb
rclb
sub
outsw
mov
sub
jp
push
xor
mov
js
and
stos
imulb
dec
outsb
pop
xchg
mov
add
cmpsl
fcmovne
arpl
jno
xchg
lcall
lds
rcrb
xor
jmp
inc
jnp
pushf
adc
lock
push
dec
inc
sub
adc
mov
dec
inc
cmpsl
push
sub
add
popf
in
movsl
nop
loop
pop
and
add
mov
ds
roll
cltd
rorb
flds
adc
lret
push
mov
insl
mov
fdivs
push
dec
mov
xor
ret
jmp
pop
inc
mov
lds
loope
pop
test
enter
cmpsb
sbb
test
or
imul
cmp
and
lods
outsb
leave
mov
es
mov
rcll
cld
pop
mov
nop
pop
bound
push
pop
adc
and
testb
jmp
icebp
jmp
lds
aaa
adc
push
das
jns
cli
loop
dec
dec
adc
divb
lds
mov
pop
outsl
pop
imull
les
jnp
sub
cli
out
test
loope
cmp
and
sub
xor
aas
xchg
dec
mov
xchg
cmp
push
bound
sbb
fdivrl
cmp
and
add
sub
jle
sub
xor
pop
test
mov
xor
imul
ret
scas
push
xor
scas
adc
xchg
fsubl
aam
jo
fnstsw
cmp
push
mov
fmulp
ret
lcall
xchg
jne
dec
int3
mov
mov
xchg
jmp
pop
cs
pop
cmp
jle
outsb
or
fldt
stos
fwait
out
mov
jnp
imul
cs
pop
cmp
jle
outsb
or
fldt
stos
fwait
out
mov
jnp
jmp
fldt
dec
into
cmp
jle
scas
or
fldt
stos
fwait
push
mov
jnp
imul
pop
cmp
jle
out
or
fldt
push
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
jb
popf
jnp
imul
mov
lret
adc
cmp
mov
jge
jge
lea
jnp
imul
in
sub
fisttpl
lret
sbb
fwait
mov
pop
xchg
dec
popf
jnp
imul
sub
fucomi
lret
daa
mov
cmp
cmc
cmp
jge
lea
or
sbb
pop
and
add
jae
cmp
xchg
xchg
xor
mov
popa
ss
jmp
rcl
neg
mov
and
fnsave
in
jbe
outsb
cmp
mov
jb
sbb
fwait
sbb
inc
cltd
lds
fisttpl
cmpl
push
fisttpll
or
in
sbb
fistpl
loop
int
ret
jecxz
mov
mov
jl
push
push
pop
mov
mov
aaa
sbb
push
and
mov
jge
lods
mov
test
jo
or
or
cmp
sub
lea
jnp
imul
hlt
sub
fistl
jmp
fwait
push
mov
insl
stos
sbb
lods
push
mov
pop
subl
cwtl
js
push
and
push
ljmp
adc
cmp
pop
mov
sub
mov
aas
fbstp
leave
add
clc
adc
push
sbb
sub
fisttpl
jmp
fwait
dec
mov
insl
stos
jge
lea
jnp
imul
in
sub
fisttpl
jmp
fwait
dec
mov
insl
stos
jge
out
sbb
mov
shl
mov
mov
mov
xor
aaa
cmp
xor
rolb
ds
and
fldt
cmp
xchg
jge
inc
xchg
inc
popa
stos
inc
and
nop
push
or
jmp
enter
mov
loopne
or
lds
jno
das
jnp
or
xor
pop
cwtl
adc
aad
sub
adc
out
iret
dec
sbb
mov
fstp
add
mov
pushf
mov
and
mov
mov
fmull
aad
inc
lods
mov
pop
fistl
mov
push
mov
add
or
fs
out
ds
inc
pop
or
cmc
shr
stos
imul
xor
push
inc
sbb
add
sbbb
movsb
stos
sbb
out
xor
outsl
call
imull
rcrb
sub
sbb
push
into
hlt
mov
mov
add
mov
lret
mov
mov
and
negl
faddp
xlat
cld
loope
or
fs
and
mul
std
jno
xchg
push
mov
fisttps
mov
test
jbe
mov
inc
lea
repnz
push
xor
cmp
add
lods
popa
cmp
js
loop
testb
jecxz
fucomi
jl
mov
cld
add
rol
add
pop
orb
mov
xchg
lods
cmpsb
mov
add
sbb
js
test
jmp
mov
mov
cwtl
sbb
mov
add
jae
negl
dec
in
adc
ja
popa
imul
add
cmc
add
rclb
mov
pop
inc
and
xchg
or
mov
lods
mov
cmp
out
xor
jle
into
push
push
sub
mov
popa
xchg
or
insl
iret
inc
pop
pop
jbe
movsb
sbb
mov
pop
mov
push
mov
pop
sbb
ret
daa
dec
sbb
gs
scas
stos
movsb
sti
movsl
inc
in
fnstcw
test
lcall
adc
dec
jo
cmp
or
lea
sbb
mov
rcrb
push
iret
test
mov
into
and
mov
imul
xchg
scas
pop
add
sahf
movsb
in
mov
xchg
pop
sbb
fstpt
adc
mov
arpl
or
mov
call
adc
filds
mov
scas
ficoml
push
add
sub
inc
xchg
aam
enter
in
in
push
push
xor
scas
jnp
insb
inc
jge
pop
pop
jg
inc
sarb
loop
stos
xchg
xchg
dec
push
insb
cmp
aaa
in
cmp
int
int
and
fdivp
loopne
mov
lds
sbb
mov
cmp
addb
and
arpl
sti
sub
imul
or
test
or
mov
je
dec
fbld
icebp
test
fcoms
data16
stc
lret
inc
in
inc
add
pop
pop
and
gs
and
popa
push
notl
pop
stos
mov
cmpl
xchg
out
dec
out
fisttpll
fadds
adc
mov
leave
jbe
outsb
fcoms
push
jb
in
and
mov
cwtl
test
sub
cmp
dec
mov
dec
dec
mov
dec
imul
cmpsb
jbe
scas
sbb
std
and
add
fwait
mov
adc
lock
jecxz
outsl
mov
cwtl
hlt
sub
sahf
je
dec
leave
mov
loope
pop
adc
jmp
outsb
mov
fwait
pushf
xor
jl
push
loop
push
fsubs
mov
mov
sbb
std
cs
sahf
adc
insb
push
rcrb
xchg
add
jne
adc
mov
fldenv
loop
push
xor
push
xchg
imul
xor
imul
xor
inc
ljmp
mov
and
mov
mov
addr16
ljmpw
outsb
les
jo
sti
or
jle
fidivs
mov
repz
xor
leave
mov
adcb
dec
push
mov
pop
sarl
xchg
mov
add
lret
mov
sub
sbb
test
fldenv
jg
jns
xor
cmovp
lret
fcmovb
push
dec
mov
inc
mov
sub
out
out
cs
mov
ja
pop
push
mov
or
fwait
ret
shrb
fdivp
es
or
push
movsl
movsb
test
insb
movsl
sbbl
inc
or
pusha
sbb
push
gs
sub
loopne
cmp
and
pushf
test
push
pop
jns
aam
xchg
repnz
je
xchg
and
add
ds
or
pop
orl
mov
sarb
enter
sub
pop
xor
xlat
push
xchg
rcl
dec
lods
fs
lods
ret
jbe
mov
popf
sub
dec
and
lret
fstl
ret
or
int3
mov
nop
notb
or
dec
ret
inc
mov
js
push
add
sub
pop
out
mov
and
cmpsl
push
xchg
jns
fisubrl
les
std
dec
aad
les
push
stc
fwait
lea
movsb
pop
lock
adc
out
andl
inc
jbe
or
lods
int3
xchg
cmpsb
adc
popf
call
ret
fsubs
xchg
fmuls
hlt
in
mov
lods
or
sub
sbb
push
xor
xor
test
das
adc
leave
fdiv
das
jl
loop
call
movsb
mov
clc
mov
mov
cmpsb
mov
sbb
sub
jno
outsl
iret
inc
cli
mov
loope
mov
mov
popf
adc
sub
pop
xchg
ljmp
cmc
mov
cwtl
xchg
cmp
pop
pop
inc
sbb
stos
dec
mov
shlb
out
shl
int
sbb
sarl
flds
mov
adc
sbb
andl
les
sbb
xor
jmp
outsb
mov
aas
pop
ficompl
scas
dec
int
push
shrl
xor
jbe
movzwl
pusha
pushf
mov
loop
inc
xorb
shrb
add
ret
xchg
subl
mov
adcb
xchg
mov
mov
dec
mov
jae
dec
inc
repnz
xchg
xor
lods
cwtl
push
add
mov
pop
jno
mull
add
fdivrs
imul
xlat
loop
cmc
test
rcrl
pop
les
dec
ss
hlt
repz
ljmp
push
dec
movsl
mov
sarb
insb
cmp
repnz
add
out
mov
xor
push
dec
insl
mov
sub
push
cmc
adc
pop
xchg
jp
pop
mov
iret
jns
xor
inc
lret
loopne
jmp
icebp
cmp
ret
cli
mov
outsl
out
push
stc
fsubp
insl
dec
pop
xor
sub
sbb
mov
movsl
sub
scas
push
lret
andl
shlb
add
clc
insb
adc
je
movntq
out
cs
les
iret
orb
out
mov
outsb
xor
adc
or
je
xor
jno
mov
mov
in
shl
pop
stos
mov
cmp
jne
mov
inc
push
fwait
or
cmp
out
test
jp
leave
cmpsl
roll
mov
daa
xchg
pop
add
clc
cs
push
add
in
dec
cmp
mov
push
pop
pop
dec
xor
xchg
dec
pop
insl
ret
enter
jl
sbb
inc
andl
int
arpl
mov
outsb
mov
xchg
xchg
or
mov
xchg
in
pop
or
push
lret
mov
movsl
enter
sti
fstl
test
fs
lret
mov
xchg
into
or
gs
mov
out
push
add
out
jecxz
insl
xchg
jae
jp
out
pusha
jge
fidivl
out
xor
ret
mov
dec
test
adc
scas
sbb
jge
addl
sbb
dec
mov
inc
inc
dec
jg
shrb
xor
push
inc
xor
pop
cli
jp
mov
loop
inc
xor
adc
jbe
fimuls
xchg
inc
jbe
sbb
xchg
sub
dec
es
lds
lods
aas
mov
push
sahf
dec
xchg
sbb
insb
mov
pop
xchg
stos
call
mov
gs
sub
jecxz
xchg
mov
adc
fdivrs
adc
and
jecxz
maskmovq
std
lret
sub
cmp
ret
pop
dec
pop
rorl
pop
jle
push
repnz
pop
andb
nop
shll
test
pop
cmp
mov
je
gs
lods
fsubs
bswap
sub
xor
std
shll
pop
aas
jmp
xchg
push
aas
cmpsl
inc
or
repnz
and
sub
mov
sti
add
and
popa
sub
lret
shrl
cltd
and
ljmp
dec
sub
and
sbb
stos
subl
call
stos
mov
ds
xchg
add
stc
data16
pop
mov
ds
insb
and
movsl
iret
imul
arpl
push
lahf
mov
mov
dec
lret
jp
push
fs
cmp
movsl
pop
mov
sub
mov
xchg
pop
dec
or
icebp
xlat
inc
sbb
adc
daa
add
into
std
sbb
xchg
mov
adc
cmp
imul
aas
xchg
mov
adc
fbstp
xor
xchg
mov
jb
sbb
or
fs
fcompl
arpl
push
fwait
sub
sub
out
movsb
lret
dec
cmovo
cmp
cs
sub
enter
add
pushf
aad
sbb
jae
inc
imul
shrl
sar
cld
test
lock
jnp
lds
imul
lds
jno
inc
cmp
pushf
sbb
hlt
push
adc
jnp
popf
cmp
inc
scas
dec
add
and
and
call
clc
daa
sub
jae
enter
fcmovbe
inc
out
and
push
sbb
test
lret
lret
les
rcrb
gs
dec
dec
push
adc
cmp
movsl
cld
cmpsb
call
out
test
into
mov
jo
xchg
xor
sub
repnz
jno
call
mov
mov
push
out
xchg
shll
inc
ss
clc
fwait
sbb
aas
out
dec
cld
fisttps
fdivrp
inc
sbb
fcomi
cmp
xor
sarb
fnstcw
and
jle
sbb
mulb
in
mov
xor
popf
mov
adc
outsb
loop
pop
dec
loop
pop
mov
icebp
lcall
fwait
xchg
cwtl
mov
pop
pop
lcall
aad
enter
and
sbb
xor
adcl
cltd
mov
push
nop
fldcw
mov
add
loopne
test
imul
mov
pushf
shl
loopne
inc
adc
aaa
cmp
mov
pop
lea
lds
mov
iret
push
fiadds
aas
cmpsl
and
add
mov
ljmp
jle
mov
and
push
mov
mov
fcmovne
out
xchg
sbb
xchg
fdivrp
inc
add
jg
push
ret
insl
ss
push
lret
adc
in
or
mov
or
gs
or
outsb
decl
cmpsb
cmp
jb
dec
dec
sahf
insb
or
add
int3
jae
cmpb
or
cli
leave
mov
scas
inc
icebp
int
mov
hlt
test
lcall
insb
aad
dec
dec
adc
sub
imul
inc
jno
cltd
lods
and
cwtl
lods
scas
xchg
repnz
pushf
adc
xor
jbe
dec
insl
pop
pop
adc
aad
pop
cmc
inc
sar
lods
movsb
iret
aam
fiaddl
loop
xchg
push
xchg
mov
mov
adc
or
inc
imul
fbstp
mov
dec
negb
outsb
in
ror
test
xchg
sbb
push
cmpsl
testb
xor
scas
mov
insb
xchg
adc
add
test
rorb
cmp
or
mov
loop
std
pop
push
and
pop
lds
jnp
fs
inc
popf
dec
movsl
inc
lahf
or
pop
in
xor
in
mov
ljmp
in
pop
lret
cmpsb
mov
lds
sub
testb
dec
hlt
cmp
fcoml
sbb
pop
xchg
scas
sub
jbe
mov
scas
test
mov
cli
outsl
pop
sub
mov
loopne
out
jecxz
ljmp
mov
test
jmp
mov
stc
jg
mov
push
movsb
pop
or
mov
sbb
mov
adc
sub
imul
pop
aad
push
ss
xor
iret
jnp
mov
iret
adc
stc
mov
test
repnz
cmp
ja
cmpsb
mov
sub
mov
add
mov
data16
inc
and
xchg
mov
sbb
incl
in
cmp
in
sub
ror
ljmp
dec
push
jb
outsb
neg
sub
adc
pop
lods
pop
test
mov
add
lahf
leave
not
int
fwait
xchg
dec
gs
aaa
aas
in
add
pop
mov
jecxz
push
shl
jnp
xor
cmp
push
ss
dec
adc
test
addb
mov
lds
lahf
pushf
call
fisttps
out
jnp,pt
test
mov
arpl
mov
outsb
ret
add
sti
imul
sbb
fs
out
flds
inc
lahf
sub
or
lock
pop
lret
cmpsl
shl
int3
dec
xchg
xlat
mov
aam
cld
cli
sbb
sub
sub
or
outsl
fistps
push
add
int
adcl
imul
inc
iret
out
or
popa
mov
cs
dec
stos
xlat
adc
jl
xchg
jle
mov
xor
stc
inc
add
sub
stos
stc
ds
sub
addb
push
aas
xchg
and
push
lret
lahf
aad
popa
sub
addr16
xor
ret
mov
movsb
cmc
ficomps
call
push
ja
cmc
mov
mov
xchg
lods
sub
fistps
push
repnz
sub
in
lods
inc
or
movsl
fsubrs
xlat
out
xchg
fucom
cmp
clc
les
sbbl
pop
and
popf
out
out
lods
xchg
push
popa
pop
dec
xlat
and
jge
push
jle
fldenv
pop
mov
xchg
pop
or
mov
jno
sub
or
adc
loop
lods
idiv
lcall
pop
xchg
adc
cmpsl
aad
jnp
push
dec
push
es
cld
fwait
int3
jnp
jl
in
fs
cs
or
and
rcrl
into
cmc
jp
mov
mov
jp
inc
push
stos
in
jmp
rcrl
repnz
jmp
inc
push
addr16
xchg
xchg
dec
enter
mov
sar
add
filds
mov
or
mov
lock
lock
push
lcall
rorl
mov
jne
dec
jg
xchg
popf
xchg
addr16
or
lcall
ja
or
sbb
xchg
pop
dec
jecxz
mov
rorb
push
or
mov
adc
xchg
sub
mov
pop
lahf
lret
dec
ss
push
gs
in
dec
and
cwtl
inc
sub
or
aas
fsubrl
enter
sti
xchg
out
test
xor
jno
sbb
ds
gs
repnz
jns
rorl
xchg
mov
test
pop
inc
rol
sbbl
jg
loope
mov
pop
fxch
push
push
in
in
xor
sbb
mov
lods
nop
inc
addr16
jne
lock
fsubl
je
and
pushf
jecxz
jb
dec
xor
fadds
inc
mov
leave
hlt
rcrb
js
lret
aas
inc
test
fnsave
jecxz
lea
lcall
in
test
dec
pusha
push
mov
fsubrl
push
je
mov
mov
pop
imul
insb
xchg
fs
jecxz
or
dec
repz
into
pushf
xchg
adc
and
pop
lahf
rorb
push
pop
push
or
inc
lcall
in
xchg
cltd
inc
jecxz
xchg
push
ja
adc
pop
movsl
jp
test
and
inc
fistpl
and
icebp
add
jne
cmp
xchg
or
cmp
push
mov
rorb
add
cmpsl
mov
cmp
mov
mov
movsb
pop
mov
aas
insl
rcrb
out
sbb
mov
xchg
mov
or
xchg
pop
je
mov
mov
in
mov
lds
and
add
xchg
imul
cmp
mov
adc
xchg
mov
mov
push
ljmp
stos
pop
or
loopne
jecxz
cmp
enter
mov
les
xlat
sbbl
or
pop
sbb
mov
jbe
addr16
in
push
mov
es
lods
mov
sbb
jle
aaa
pop
adc
and
cltd
xlat
mov
sarl
ret
aas
dec
insb
xor
mov
loopne
xchg
sbb
scas
js
jl
pushl
xchg
or
adc
in
add
pop
aaa
jecxz
shlb
add
inc
sub
sbb
ljmp
bound
lods
cli
repnz
popf
mov
jnp
add
and
aad
jg
pop
push
lahf
push
faddp
add
add
dec
mov
xor
inc
shll
jecxz
mov
mov
mov
mov
cs
ret
fs
push
and
outsl
mov
or
imul
into
inc
add
jb
push
adc
add
inc
cmp
shll
ljmp
sbb
addr16
xchg
stc
jae
and
fucomip
clc
andb
out
xlat
xlat
mov
push
fmul
iret
pop
xlat
or
dec
je
sub
nop
mov
xchg
xchg
cmp
ficoml
call
pop
js
in
jne
cltd
mov
fucomp
mov
popa
js
repz
shl
pop
movsb
movsb
scas
pop
xchg
mov
inc
sbb
ja
push
arpl
out
push
cmpsl
jno
fwait
jmp
pop
jnp
shlb
push
push
inc
in
jns
push
enter
bound
movsb
in
mov
lods
test
sub
adc
sbb
inc
les
xorb
push
hlt
iret
push
adcb
pop
and
cmp
jno
cmp
ss
into
nop
stos
xor
push
mull
lods
jge
ficompl
sub
adc
jg
out
sub
repnz
and
jns
mov
sbb
dec
out
fcmovnu
mov
mov
arpl
cs
and
les
rcrl
movsl
mov
ds
aas
pop
jmp
push
jmp
inc
jo
lds
ja
fsqrt
add
stos
lods
jp
and
xchg
rcrl
push
fstl
arpl
xlat
stc
cmp
fimuls
push
aad
jl
clc
inc
jecxz
add
imul
jo
es
daa
mov
sti
xchg
pop
dec
xchg
cmp
das
hlt
jecxz
sbb
or
jne
sbbb
outsl
sub
mov
pop
out
inc
nop
mov
fisttpl
idivl
add
pop
shrb
ds
ss
das
xchg
aam
icebp
xchg
adc
add
mov
rol
mov
cs
jge
xor
add
int
mov
rolb
aam
cmp
fcoms
dec
dec
insl
pop
cmc
nop
jae
mov
shl
leave
jns
inc
ror
cltd
aaa
pop
xor
aas
push
or
sarb
or
add
mov
loop
xor
inc
push
xchg
adc
popa
insb
fucom
popa
int3
cmpsl
dec
lock
mov
inc
or
xor
lcall
cmp
sub
out
out
dec
andb
mov
rcrb
hlt
out
xor
movsl
xchg
jnp
sub
lcall
mov
insb
cmp
push
into
mov
jp
scas
in
jp
cli
pop
shl
hlt
push
outsl
mov
pop
adc
dec
mov
dec
in
or
sbb
lahf
negl
xor
jmp
insb
lds
xchg
and
cmp
adc
and
adc
std
ret
cmp
sbb
shrb
dec
mov
sbb
or
xchg
push
negb
inc
std
push
popf
fucomi
ljmp
faddl
sbb
jns
jmp
ljmp
mov
xchg
jg
and
fstl
fcomps
add
mov
stos
popf
rolb
mov
cmp
sub
fisttpl
jmp
fwait
dec
mov
insl
stos
jge
lea
jnp
imul
in
sub
fisttpl
jmp
fwait
dec
mov
insl
stos
jge
lea
jnp
imul
in
sub
fisttpl
jmp
fwait
dec
mov
insb
stos
jge
lea
jnp
imul
in
sub
fisttpl
jmp
in
lds
mov
push
jnp
imul
sub
cmp
or
jne
or
inc
mov
mov
mov
jmp
adc
imul
sub
cmp
jnp
imul
mov
xchg
fisubrl
stos
sti
fwait
jmp
sarl
mov
cmp
sub
xchg
or
mov
xchg
testl
pop
rolb
push
pop
mov
and
mov
jnp
jnp
xor
cmpsb
push
xchg
out
sbbl
and
ficomps
pop
lock
data16
sbb
shll
in
rclb
sti
je
inc
fstl
and
inc
xchg
or
mov
pop
divb
inc
dec
jle
pop
cmp
mov
fcoms
sbb
leave
dec
out
out
adc
sahf
mov
jmp
movsb
mov
les
dec
and
pop
add
incb
lret
sub
lret
mov
sahf
and
jge
in
inc
je
mov
arpl
jae
mov
stos
lret
sti
mov
jnp
imul
inc
dec
pop
cmp
sub
rorl
imul
mov
mov
fwait
int
jnp
adc
inc
or
jle
jg
mov
bnd
lret
iret
movsl
in
sbb
addl
adc
sub
js
outsb
pop
dec
sbb
fidivrs
cmp
imul
push
push
or
jnp
imul
sti
mov
mov
mov
jmp
sbb
imul
sub
cmp
jnp
imul
sti
mov
mov
mov
jmp
sbb
inc
xchg
xor
mov
into
and
sbb
fsubr
cmp
pushf
test
pop
rclb
mov
mov
cmpsb
and
inc
lods
jmp
sub
mov
pop
int
push
imul
jno
dec
sub
inc
cld
jbe
sbb
and
jno
mov
dec
shrb
and
and
dec
in
cwtl
lret
xlat
dec
pop
stos
cmp
pop
xchg
test
mov
stc
cmc
jge
push
cmp
push
cmp
add
add
sub
mov
cld
loop
xor
xchg
and
or
jp
push
pop
sbb
jbe
notb
jo
repz
ss
out
sub
or
push
xor
das
and
lods
mov
daa
pop
cmp
dec
xchg
loope
cli
imul
hlt
je
pmulhuw
out
jmp
outsb
rcrb
mov
in
push
sub
scas
adc
jnp
jne
rolb
idivl
pusha
jecxz
imul
add
push
jbe
popf
adc
inc
or
jbe
int3
inc
mov
pop
jno
cltd
sbb
out
mov
lret
and
sbb
jbe
stos
out
cmpsb
fbld
cmp
sahf
lahf
nop
mov
sub
cmpsl
pusha
push
fistps
pop
sbb
mov
jmp
xor
cld
xlat
sbb
jecxz
inc
inc
pop
mov
sar
addr16
aas
icebp
mov
rcrl
jge
and
sub
fldcw
jb
test
dec
movsl
dec
ret
xor
mov
jl
pop
jle
js
nop
cmp
fistpll
inc
cmc
outsb
or
adc
and
ljmp
rol
and
mov
les
jno
popa
inc
and
into
or
lock
les
inc
data16
push
test
dec
jo
push
jl
lods
std
push
pop
pop
call
add
push
outsl
mov
in
jmp
xchg
sbb
je
dec
mov
sub
inc
or
push
pop
inc
movsl
rcl
sub
adc
dec
mov
fidivrs
mov
jg
and
out
mov
jmp
es
clts
imul
pop
mov
es
outsl
pop
fistl
mov
mov
dec
roll
xchg
sbb
lahf
flds
jg
cmp
inc
data16
pop
mov
adc
pop
jmp
mov
test
jno
mull
popf
iret
xor
sub
xchg
gs
out
xchg
and
or
movsb
jle
xlat
mov
mov
jg
dec
add
andb
int3
insb
push
adc
push
fcoml
adc
int3
pop
lds
jbe
outsl
sahf
jnp
fsubl
pop
pop
je
rorl
mov
cmp
xchg
testl
dec
or
bound
xor
sbb
push
icebp
cli
test
shrl
inc
mov
rorl
cmp
ja,pt
or
ficompl
addb
test
movsb
add
sbb
ja
aas
sub
adc
psubsb
inc
mov
iret
clc
cmp
jg
push
rolb
mov
lret
f2xm1
je
sub
in
pop
lret
lea
mov
cld
mov
adc
adc
xlat
xchg
sbb
mov
mov
nop
dec
xchg
xchg
nop
sub
adc
pop
pop
shll
jo
ss
insb
ja
test
cli
jg
cmp
jle
dec
rorl
pop
out
pop
mov
push
dec
mov
insl
xchg
mov
cmp
inc
sub
jg
outsl
xor
fwait
stos
das
add
pop
into
mov
push
and
cmp
mov
add
jo
adc
mov
out
orl
daa
add
dec
xchg
std
fldt
imul
fwait
jae
mov
and
test
imul
push
pop
fwait
in
out
and
xchg
in
imul
cmp
lods
lods
in
and
sub
jge
add
cltd
daa
jecxz
cmp
push
sub
mov
jle,pn
mov
sub
ss
jp
add
xor
mov
iret
inc
test
xchg
xchg
daa
cs
lret
mov
mov
in
movsl
rcrb
test
cwtl
push
add
loope
mov
push
cld
stos
aas
inc
nop
leave
xchg
and
or
push
push
mov
cs
aas
leave
aaa
mov
or
inc
mov
iret
daa
and
pusha
scas
imul
push
int
mov
or
inc
add
cmp
xor
pop
int3
push
nop
adc
call
push
mov
data16
mov
dec
add
sbb
dec
cld
mov
sbb
sbb
fs
lock
mov
add
push
jnp
jp
lahf
in
adc
pop
dec
adcb
in
push
sub
mov
or
push
popa
jnp
or
xor
es
inc
repz
pop
fnstsw
fnstcw
dec
cmp
aam
jnp
push
mov
cmp
cmp
lods
js
push
cmc
cmp
xlat
dec
lods
cltd
xchg
dec
ja
testb
lods
mov
ret
in
out
dec
push
loop
jo
mov
test
pop
mov
dec
aad
fwait
xchg
imul
daa
hlt
mov
rorl
xchg
aad
xlat
fistps
dec
repnz
or
pushf
jmp
lods
sub
ret
sub
gs
xlat
inc
add
adc
test
sbb
pop
sbb
dec
jg
mov
or
mov
push
push
pop
fsubs
cmpsb
pop
inc
adc
dec
rorl
cltd
neg
call
testl
negl
negl
ljmp
test
xchg
adc
mov
mov
fdivrl
outsb
ljmp
mov
aad
and
shl
mov
pop
inc
repz
jb
ja
push
stos
xchg
ret
jnp
pop
loop
sub
mov
fs
test
cmp
dec
mov
xchg
xchg
stc
pop
dec
pop
les
sbb
add
inc
and
and
sbb
xchg
mov
in
popa
and
sahf
lock
fs
pop
cmp
icebp
pop
stos
testl
push
into
adc
gs
ss
pop
mov
mov
push
mov
lret
daa
cmp
push
mov
fs
xor
je
pop
sub
mov
mov
lcall
add
push
movsb
notl
cmp
insl
imul
add
adc
iret
push
cmp
out
mov
dec
pop
mov
shl
cmp
pop
mov
imul
or
lret
xchg
adc
jne
sub
adc
test
in
or
inc
dec
jecxz
mov
cmp
mov
mull
pmulhuw
int
mov
pop
or
std
xor
es
inc
xor
scas
leave
inc
call
xlat
add
mov
out
and
mov
out
in
test
mov
add
push
adc
jns
ret
ljmp
push
mov
ja
roll
testl
xlat
mov
adc
xor
fst
mov
jno
xchg
stos
mov
pushl
push
add
jbe
mov
sti
fldenv
mov
cmp
ljmp
mov
add
in
xor
sub
inc
out
pop
fs
add
stos
scas
fcmove
stc
pop
mov
or
xchg
push
jns
mov
int
add
sbb
xchg
ljmp
pop
and
dec
ljmp
out
je
cli
push
mov
enter
sahf
pop
xlat
popa
jmp
xor
shlb
outsb
mov
fisubrs
jmp
adc
add
xor
inc
pop
jbe
ljmp
je
xlat
sbb
dec
sbb
add
sbb
add
in
pop
mov
fistpll
xchg
aad
shl
leave
fwait
xchg
or
imul
test
jae
lret
dec
sbb
mov
outsl
or
movsl
add
gs
imul
sbb
and
dec
mov
cmpsl
jne
popf
add
lcall
gs
cmp
pop
add
xchg
adc
xchg
ss
shl
xor
adc
out
movsl
xchg
inc
mov
in
push
int
mov
insl
add
push
push
xor
mov
jmp
nop
mov
ds
rol
or
sahf
movsl
cmp
xchg
popa
or
sub
ds
xchg
lret
push
or
pop
jo
repz
add
add
fwait
jmp
shrb
and
cmpsl
push
jns
mov
adc
addr16
int3
test
xor
mov
div
mov
cmp
mov
lock
cmp
decb
pusha
inc
mov
outsb
jo
scas
sub
into
inc
jp
fildll
lret
loope
ljmp
and
imul
int3
jecxz
jmp
fs
jmp
xor
or
jns
fmuls
inc
or
loopne
bound
jge
repz
ret
adc
insb
sub
div
ljmp
cli
mov
sbb
xor
aas
mov
inc
lock
or
cmp
imul
push
sub
sti
mov
xor
adc
sahf
fwait
imul
sbb
adc
test
jl
pop
mov
dec
je
mov
xchg
movl
mov
imul
data16
dec
aas
xchg
insb
jno
scas
pop
cmc
pop
pusha
int
leave
adc
mov
or
movsl
rorl
pop
roll
dec
sub
std
in
int
add
in
std
adc
popf
fcomp
or
cmc
pop
adc
xchg
pusha
adc
faddl
jb
xlat
pop
jp
add
adc
sbb
adc
fdivl
push
imul
mov
or
aas
lcall
and
sbb
shll
push
int3
add
jp
daa
movl
dec
insl
mov
mov
mov
xor
add
add
mov
es
in
test
cld
and
je
push
lret
xorl
test
icebp
xchg
sbb
or
inc
and
xchg
pop
mov
imul
out
dec
notb
cli
dec
push
pusha
add
dec
jp
push
aaa
sub
faddp
jo
and
mov
cs
pop
paddq
dec
mov
jmp
cmpsl
cmp
mov
ss
std
pop
jg
pop
test
rep
xor
mov
and
mov
pop
mov
mov
or
or
sbb
mov
sbb
pop
lret
movsl
sub
cs
jle
inc
jnp
or
push
and
movsl
js
dec
fs
sbb
mov
mov
push
pop
pop
inc
pop
pop
mov
sub
rcl
xchg
or
xor
enter
ja
mov
mov
ud1
mov
in
xlat
popf
mov
fcoms
push
leave
fidivl
jmp
rorb
mov
out
jecxz
sub
add
sub
cltd
mov
out
xchg
mov
xor
jno
ljmp
xor
pop
mov
cmp
stos
test
mov
or
popf
jb
or
andl
in
mov
in
and
and
xchg
pop
in
ds
loope
and
outsb
adc
cmc
js
mov
cmp
xor
adc
inc
dec
clc
movsb
cwtl
jnp
in
mov
xchg
adc
jmp
hlt
ljmp
dec
lcall
dec
out
or
or
movsl
push
int
cli
loopne
rolb
jo
ja
mov
or
xchg
lcall
xlat
les
iret
sbb
fidivrs
push
xchg
push
jns
das
pop
xor
shll
movsl
add
js
dec
or
dec
pushf
pop
fidivl
std
sbb
push
pushl
mov
mov
push
cli
push
icebp
jg
mov
pusha
xchg
dec
cmp
int
add
push
mov
dec
outsb
lds
and
pusha
leave
inc
fcompl
repnz
shll
pop
mov
cmp
mov
pop
inc
icebp
dec
push
jg
mov
inc
xchg
pop
stos
dec
outsb
lds
xor
push
add
addl
out
dec
cmp
push
xor
sbb
das
ret
push
lret
dec
jge
jmp
mov
fcomps
insl
data16
lcall
bound
loop
jbe
mov
mov
mov
add
stos
mov
inc
pop
out
leave
cmc
mov
inc
mov
jbe
fcomip
in
jns
js
cld
inc
sahf
xchg
adc
mov
mov
pop
or
sbb
shrl
fcomps
push
loop
aad
ds
dec
add
inc
add
cmp
mov
inc
addr16
inc
int
rolb
lods
mov
sub
jne
pop
dec
cs
popf
push
mov
push
cltd
stos
pop
insb
xor
int
xor
mov
cmp
inc
lret
fnsave
mov
cmp
push
es
fstps
lods
add
je
sbb
sub
jg
and
cmc
out
mov
cmp
add
sub
push
xchg
adcl
mov
inc
pop
sarb
lahf
ret
into
test
mov
call
test
inc
fimull
icebp
popf
xchg
mov
and
cmp
push
inc
test
adc
mov
adc
xor
leave
pop
mov
xor
xchg
lods
faddl
xchg
add
xchg
add
mov
in
dec
add
mov
pop
xchg
call
movsl
mov
xor
cwtl
mov
scas
cltd
div
sub
pop
pop
lods
outsb
gs
out
adc
mov
dec
pop
jge
sbb
and
test
mov
dec
push
mov
ffree
imul
lahf
inc
jne
xchg
out
mov
loopne
popf
push
data16
mov
in
adc
push
cmp
push
sahf
lock
xor
rol
fcomp
lds
icebp
dec
aas
mov
jp
insb
add
push
test
cli
mov
pop
mov
repz
xor
xchg
mov
imul
out
mov
fwait
jns
int3
push
jne
lahf
push
cmpsb
mov
dec
mov
orb
cmpsl
out
jbe
xor
and
cmp
jge
push
loopne
jle
outsb
icebp
pushf
lahf
sub
scas
jp
mov
push
loope
push
cmp
xlat
add
cmp
cmp
sub
shl
xchg
sbb
sti
mov
addr16
xchg
mov
insb
sub
and
jb
push
jns
arpl
pop
jle
inc
stc
jae
push
lods
stc
adc
pop
push
les
test
jecxz
cld
xchg
testb
ljmp
and
or
xchg
pop
xor
mov
int
push
cmp
pop
outsb
jns
jbe
enter
rorb
push
call
inc
xchg
cmpsb
jae,pt
or
repz
repz
jge
add
stc
xor
adc
push
cmp
cli
imul
dec
push
or
aaa
sub
mov
and
adc
scas
and
sbb
xor
fsubl
notb
cmp
inc
loopne
xor
loopne
or
dec
add
dec
in
sbb
jb
mov
loop
mov
out
scas
mov
cmc
in
lcall
cmpsl
push
dec
fimuls
jns
adc
das
mov
jno
and
sbb
lret
push
fxch
ret
cmp
push
mov
aas
lahf
pop
nop
mov
adc
mov
cmp
test
cmp
lret
jle
loope
xchg
sarl
pop
insb
or
adc
nop
data16
es
pop
or
incl
and
mov
sub
sbb
push
and
inc
int
inc
je
jns
push
adc
je
notl
arpl
inc
mov
cmpsb
scas
outsl
gs
testl
mov
imul
mov
push
dec
sbb
cmp
dec
inc
leave
leave
dec
xor
in
out
bound
xchg
jle
mov
push
es
call
pop
cmp
inc
pop
pop
push
or
cwtl
sub
out
rclb
ja
mov
pop
ss
adc
push
jns
fists
inc
and
push
int
push
lods
jo
adc
decb
xor
inc
lahf
es
icebp
jne
andl
out
mov
and
mov
mov
mov
in
fstpl
dec
mov
xor
push
xchg
es
push
loopne
popa
fstpt
push
cmp
into
int
adcl
out
int
lock
fstps
lret
in
dec
push
xchg
push
iret
and
adc
nop
mov
mov
push
jle
jmp
or
inc
mov
xlat
imul
outsb
rcr
in
xor
cli
xor
ja
repnz
or
inc
pusha
or
stos
mov
movsb
sub
fnstsw
test
and
pop
pop
and
jbe
bound
iret
imul
leave
int3
aaa
xchg
mov
dec
cltd
mov
das
inc
ss
cs
jl
jl
and
push
sbbb
fisubs
push
inc
pusha
lret
cmc
sahf
cwtl
mov
cld
stos
sti
jbe
cs
ljmp
inc
gs
insb
adc
in
or
je
jp
lods
stos
daa
adc
cmp
aas
mov
jg
xchg
mov
sbb
aaa
aaa
adc
dec
and
scas
xor
out
or
pusha
add
push
ja
sub
dec
cmc
incb
mov
xchg
ds
add
sub
adc
enter
lds
movsl
icebp
sbb
clc
nop
lods
out
ffree
cltd
jge
sbb
test
lock
and
dec
aad
in
adc
mov
int
mov
xchg
push
xor
aad
daa
pop
lods
xchg
nop
push
sbb
ret
inc
stos
imul
jg
pusha
mov
lcall
aam
and
push
or
pop
sub
nop
mov
testl
push
pop
sbb
xchg
jmp
xchg
out
in
dec
pop
hlt
loope
inc
adc
in
mov
stos
out
dec
test
in
pushl
sub
jo
popf
daa
mov
aam
mov
fnstsw
int3
bound
ret
adc
das
sub
jge
lods
outsl
add
das
adc
call
bound
out
mov
dec
push
rcrl
sub
sbb
aam
mov
xchg
push
stos
and
insb
sahf
jmp
adc
aad
ljmp
cmpsl
imul
imul
mov
xchg
pop
mov
mov
add
jp
xchg
pop
mov
sahf
rorb
mov
ljmp
sar
pop
stos
mov
jp
ljmp
mov
or
dec
dec
cld
in
sahf
mov
hlt
push
mov
xchg
enter
scas
lock
test
lret
or
add
adc
and
popa
xchg
and
jge
fldl
sbb
add
mov
out
sub
inc
test
icebp
pop
leave
ret
ljmp
push
xchg
add
adc
arpl
xor
and
lods
movsb
add
add
xchg
and
cmp
cs
lahf
out
pop
out
mov
pop
xchg
aad
add
test
scas
sbb
mov
sub
in
sub
cmpsl
adc
push
bound
xor
add
and
fs
mov
xlat
sbb
push
add
cmp
ficoml
sbb
xchg
je
sbb
jle
push
daa
es
and
xchg
fwait
inc
or
push
popa
cmpsb
lods
ja
mov
sub
cmp
jbe
dec
cmovp
rorl
imul
scas
rcll
decl
sub
mov
xor
lds
mov
jbe
mov
aad
gs
push
arpl
stos
cmpsb
shrb
xor
xchg
hlt
in
push
push
pop
jge
dec
sahf
dec
and
andl
das
jge
sbb
mov
cmp
inc
jp
mov
out
push
pop
xor
pop
sarb
mov
stc
arpl
mov
je
push
or
movsl
cmp
or
and
xchg
cs
mov
pusha
adc
inc
repnz
aas
sub
adc
jecxz
iret
xchg
rcll
icebp
xor
scas
out
pop
and
aam
dec
jl
cmc
lret
cmp
daa
xchg
jmp
fidivs
jbe
cltd
insb
dec
addr16
stos
xchg
stos
enter
test
jno
mov
inc
mov
mov
inc
hlt
sbb
rol
inc
fstpl
sub
sbbl
stc
ret
js
lock
xchg
mov
xchg
fistl
sub
cld
ret
mov
dec
pop
cmp
jnp
imul
sti
mov
mov
mov
jmp
sbb
imul
sub
cmp
jnp
imul
sti
mov
mov
mov
jmp
sbb
imul
sub
cmp
jnp
push
lahf
sti
mov
mov
scas
lret
fstpt
fisttpl
mov
add
cmp
jnp
jmp
fwait
sti
je
adc
stos
mov
add
adc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
pop
sbb
not
jno,pn
jae
in
je
add
add
add
pop
add
adc
cmp
add
add
add
sub
add
insl
add
add
js
xchg
add
add
add
add
add
add
in
add
add
sub
push
add
add
test
mov
movsl
add
add
add
add
sub
push
add
add
in
dec
add
xchg
add
pushf
add
popf
add
sbb
xchg
inc
add
add
add
lret
add
add
into
add
add
add
filds
daa
add
add
sub
addl
add
cmp
pushf
add
jge
pop
add
add
add
add
add
add
pop
add
in
add
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
sub
inc
add
add
cmp
adc
bound
or
dec
add
add
pop
add
add
add
add
add
stc
add
lods
add
add
xor
rolb
dec
add
add
add
or
icebp
add
push
add
add
cmp
sahf
add
add
add
xchg
add
cmpsl
add
add
rolb
add
add
add
add
fiadds
push
add
rolb
inc
add
add
add
xor
add
add
add
add
add
sbb
and
testl
inc
add
mov
add
sub
add
mov
lcall
add
add
jge
add
add
add
add
add
or
testl
sub
movsb
add
adc
mov
rolb
jmp
add
add
add
add
add
test
push
add
lret
add
add
rolb
pusha
add
inc
add
add
add
add
and
testl
dec
add
add
addb
add
add
add
add
add
inc
add
dec
add
add
add
mov
add
add
add
inc
add
add
add
add
add
add
add
add
fadds
xor
add
add
add
pushf
add
add
add
add
add
add
xchg
add
add
add
sub
pop
add
add
aad
dec
add
sbb
add
scas
add
add
add
add
add
cmp
add
add
loop
cmpsl
add
out
add
dec
add
push
add
add
add
add
add
movsl
add
add
add
add
add
pop
add
add
add
ret
add
add
movl
lcall
add
add
add
jbe
pop
add
add
add
lds
adc
pop
add
and
faddl
pop
add
add
add
testl
jbe
je
and
aad
cwtl
add
into
add
add
add
xor
sti
add
testl
pop
add
add
add
add
add
sub
push
add
add
mov
repnz
push
mov
je
xor
lea
jle
dec
stc
mov
imul
xchg
adc
jo
mov
mov
push
dec
sub
loop
stos
adc
or
pop
push
mov
iret
jae
cmp
rcrb
into
pop
aaa
sbb
push
adc
test
sub
pop
xchg
lcall
inc
sub
lods
rol
push
hlt
lcall
adcb
scas
aam
pop
jb
or
mov
out
xchg
dec
adc
lods
pop
mov
jo
xor
xchg
arpl
ljmp
sub
mov
or
mov
xor
dec
dec
mov
cli
mov
sub
fiaddl
out
or
xor
insb
cmp
mov
dec
movsb
xchg
ja
rolb
fdivrs
fdivrl
fistpll
cld
hlt
mov
jge
ret
mov
sbb
pop
push
sub
jne
add
mov
mov
sub
mov
lcall
pop
daa
nop
push
push
mov
setne
movsl
mov
popa
dec
vsqrtpd
cmp
data16
jp
je
mov
sbb
inc
nop
sub
push
xchg
jg
mov
mov
mov
imul
fistps
loop
repnz
popl
repz
idiv
inc
mov
or
adc
pop
nop
ss
jmp
mov
scas
sub
push
pop
mov
ret
leave
outsl
sub
ret
cmove
inc
neg
mov
xchg
inc
hlt
fidivs
sub
les
nop
lods
mov
stos
outsl
scas
aam
mov
mov
in
dec
adc
or
mov
xchg
cmpsb
or
xchg
inc
adc
lock
sbb
jbe
pop
icebp
inc
dec
jb
xchg
add
cmovge
lock
push
sub
lock
sar
add
sbb
lods
mov
test
jns
pop
ds
xchg
mov
pop
mov
stc
xchg
sbb
pop
mov
cmpsl
dec
cld
mov
mov
mov
sub
jnp
stos
and
scas
mov
or
loopne
xor
pushf
insb
filds
faddl
cmpb
shll
mov
cmp
jmp
inc
xchg
jbe
mov
es
imul
lret
jb
mov
lods
cmp
jae
adc
sbbb
in
jnp
pop
daa
lret
into
jmp
stos
lret
jo
jne
aam
mov
ret
mov
imul
pop
leave
mov
lret
ret
jnp
dec
xchg
jmp
lcall
fists
xchg
and
sbb
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
