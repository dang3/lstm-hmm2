fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
lcall
sbbl
add
and
adc
jno
out
aaa
push
daa
inc
fbstp
out
xchg
icebp
xchg
mov
cmpsl
mov
cmp
add
add
aaa
push
daa
inc
or
mov
cltd
xchg
iret
stc
fwait
leave
pop
fistl
sub
adc
je
ds
adc
xchg
std
out
mov
nop
out
cmp
and
jmp
insb
js
in
add
mov
jb
push
cmp
mov
sub
cwtl
outsb
rol
cmpl
ror
mov
xchg
adc
mov
mull
test
loop
pushf
pop
xor
call
push
js
xchg
out
mov
rclb
movsl
movsl
inc
inc
rcll
addr16
cwtl
mov
scas
fcoms
xor
pop
or
cmc
push
test
mov
fs
add
push
dec
aad
imul
xor
pop
xchg
scas
pop
mov
xchg
pop
pop
xorl
mov
mov
loope
rcrl
fsubs
or
ja
sbb
dec
inc
inc
movsl
mov
shll
repz
and
adc
imul
fmuls
mov
sub
icebp
out
push
inc
adc
add
inc
ss
hlt
mov
rol
xchg
mov
cmpsl
rcll
and
add
jno
popa
aaa
push
daa
inc
xlat
mov
mov
xchg
icebp
xchg
mov
cmpsl
rcll
and
add
jno
popa
aaa
push
daa
inc
xlat
mov
mov
push
mov
jg
pop
ret
ficoms
neg
push
or
mov
jo
ds
sbb
addl
fs
scas
loopne
imul
mov
xor
xor
jmp
loopne
lods
out
push
flds
or
sbb
jne
pop
pop
jle
xor
add
test
push
mov
icebp
adcb
add
xchg
mov
lock
add
sbbl
scas
fcomps
sarb
addr16
scas
andl
and
out
mov
pop
out
add
scas
push
and
mov
js
or
loopne
jbe
fidivs
lods
or
lcall
fstpl
dec
push
ret
sbb
push
sub
pusha
mov
add
push
jne
repnz
cmpsl
xchg
mov
mov
stos
lods
or
inc
cmpsl
bound
push
fbld
dec
pushf
sub
hlt
inc
xorl
insb
mov
iret
in
pop
add
subb
addr16
rclb
outsb
xchg
mov
jmp
or
outsb
push
add
jne
mov
aad
xchg
sub
imul
jo
or
loopne
mov
ljmpw
adc
push
mov
or
and
mov
inc
inc
test
adc
out
leave
push
mov
aas
arpl
sbb
jg
lret
sub
xorb
push
enter
cld
cmc
mov
inc
ja
mov
mov
push
inc
iret
aas
add
sti
mov
inc
push
mov
pushf
call
jne
cld
adc
pop
lret
in
push
xor
mov
jno
jle
mull
leave
daa
lret
loope
loope
pusha
std
pop
dec
jnp
adc
cmp
jne
popf
mov
or
hlt
mov
jo
push
push
pop
cld
add
mov
pop
in
mov
mov
inc
mov
mov
jmp
outsb
leave
scas
rol
inc
dec
popa
add
ja
fyl2x
push
xchg
jns
pop
loopne
mov
xor
mov
or
test
mov
cltd
stos
push
cmp
ds
test
repz
cmp
inc
clc
mov
popf
stc
xchg
fsub
hlt
test
add
js
roll
popf
mov
pushf
jno
js
into
push
cmp
loope
pop
cmp
insl
shrb
jns
sbb
pop
and
mov
rclb
mov
and
xor
outsb
rclb
sbb
pop
mov
imul
jo
dec
repz
xor
mov
sbb
sbb
jle
sub
mov
mov
jle
out
out
mov
adc
ret
or
inc
xchg
or
or
mov
jbe
push
sarl
cmp
lahf
jnp
insb
test
mov
push
lret
test
mov
cmp
pop
fninit
sbb
push
lods
xchg
add
mov
sub
or
hlt
fistps
imul
and
cmp
aas
lret
mov
mov
inc
sub
xor
xor
adc
cmp
xor
xchg
call
mov
fs
iret
addl
or
cs
and
lcall
jmp
mov
push
lods
iret
add
pop
ljmp
mov
les
lahf
mov
add
xchg
cmp
sub
fisubs
pop
add
imul
jns
add
scas
andb
lds
addl
fists
add
pushf
js
adcb
test
and
aad
jbe
dec
movsl
xchg
filds
outsl
loopne
jp
sbb
imul
jecxz
into
push
and
fucomp
insb
or
mov
jg
cwtl
in
vshufps
loope
rcrb
imul
sbb
mov
xchg
cmp
mov
add
jbe
xchg
sbb
fs
or
push
inc
das
insl
ja
sbb
cltd
jmp
sti
stos
imul
sbb
xchg
or
mov
test
scas
cs
clc
xchg
das
xor
push
jns
into
lret
fildl
iret
xchg
jmp
sbb
or
pop
xor
mov
scas
sbb
popa
repnz
jns
mov
rcrl
inc
fimuls
psadbw
sub
or
icebp
jno
push
fisttpll
addr16
xlat
xchg
pop
inc
out
mov
loop
sbb
and
push
test
jp
clc
xor
cmpsb
cs
xchg
lret
int3
lret
adc
jge
adc
and
stos
inc
add
pop
push
mov
dec
jmp
or
gs
mov
hlt
mov
fidivs
or
ljmp
cwtl
aad
sbb
push
fdivp
mov
xchg
cwtl
xchg
xor
ss
rcrb
sti
loope
xlat
jae
cmp
jg
dec
dec
mov
dec
daa
push
fwait
ret
jp
mov
ljmp
inc
mov
xchg
push
out
jae
cmp
repnz
jl
mov
xchg
jl
xchg
push
inc
call
sbb
cmp
test
sub
push
mov
mov
sbb
inc
cmovnp
aad
jmp
popa
pop
sub
push
stc
sahf
mov
inc
sbb
add
mov
xor
cld
fs
les
scas
push
cld
ror
push
stos
fists
jo
sbb
test
adc
and
pusha
xchg
mov
jb,pn
cld
cmp
sbb
sbb
sbb
imul
aas
insl
je
xchg
jnp
jp
jmp
idivl
xor
rol
mov
jle
sbb
or
push
out
push
dec
fistl
sub
mov
pop
lods
add
and
push
mov
lock
mov
cmpsb
xor
aam
inc
or
cmpsb
cmpsb
fwait
rcll
and
push
sub
pushf
inc
dec
movsl
popf
aad
adc
push
mov
mov
mov
push
in
inc
imul
jecxz
inc
nop
push
push
out
pop
test
sarl
mov
cmp
mov
mov
je
insl
xchg
cmpsl
mov
cmp
mov
out
xchg
sbb
loope
inc
jle
sub
or
sub
add
xchg
mov
into
std
xchg
add
pop
call
je
mov
decl
add
mov
je
cltd
ss
sub
xor
mov
movsb
repnz
sub
push
jg
roll
notb
jnp
push
fcoms
imul
imul
das
cmp
gs
movsb
mov
cmp
dec
mov
dec
xor
test
push
arpl
sub
fidivl
inc
jnp
mov
insb
lods
iret
test
fistl
cmp
sbb
mov
fcomi
jo
add
int
cmp
push
lahf
cmp
xcrypt-ofb
cmpsl
scas
xchg
dec
cmc
xor
push
sbb
mov
xor
or
outsl
icebp
sub
sub
fwait
sbb
or
loopne
sub
pop
sti
fldcw
cltd
mov
add
pop
xchg
pop
fisubs
ds
mov
lret
mov
xor
in
rcl
movl
out
push
notl
gs
insl
sbb
jmp
xlat
jns
data16
push
inc
imul
test
xchg
les
or
xchg
scas
mov
je
push
xchg
and
mov
arpl
or
stos
inc
xchg
sbb
mov
cmp
stc
xor
sahf
cwtl
pop
dec
push
addr16
lahf
jl
imul
mov
push
fimuls
cmpb
lret
cmp
es
mov
aad
mov
and
or
push
cmp
mov
or
sub
test
call
enter
fldenv
add
push
mov
mov
sub
xchg
dec
shl
cwtl
iret
ljmp
shr
repnz
imul
xchg
out
js
jecxz
inc
cmc
inc
sbbl
adc
xchg
sbb
sbb
js
add
adc
call
xor
push
shlb
pushl
pushf
push
ficomps
or
ljmp
sbb
sbb
push
cs
out
and
insl
jns
adc
inc
loopne
jge
adc
cmp
push
dec
ljmp
and
sarl
sbb
mov
test
repnz
test
pushf
gs
add
and
xlat
pop
lret
cmp
hlt
adc
lahf
xchg
dec
pop
icebp
adc
mov
fnstcw
cmpsb
cmpsl
pop
mov
jb
mov
and
imul
jecxz
mov
mov
xchg
pop
xchg
mov
or
daa
mov
pop
inc
mull
lret
std
mov
sbb
xchg
shrb
xlat
inc
xchg
in
aam
aad
or
lcall
icebp
inc
fcoml
pop
enter
cmp
xchg
sti
dec
or
xchg
sbb
pop
or
xor
scas
loopne
and
pop
gs
std
xchg
incb
xchg
scas
mov
movb
fwait
repnz
jbe
push
loopne
and
lahf
jo
aad
cmpsb
sbb
mov
mov
pushf
stos
sahf
sbb
aam
pushf
xor
pop
enter
negb
dec
mov
loopne
lds
into
xor
in
addr16
lahf
sbb
fidivrs
stos
jbe
mov
jne
mov
fsubl
movsb
movsl
sub
shl
sahf
lds
rolb
push
dec
sub
popf
lcall
pop
sbb
dec
ds
xchg
insb
gs
sarb
push
pop
lods
sbb
jns
notb
and
fwait
test
pusha
mov
sti
shlb
adcl
jmp
nop
or
xor
fiaddl
add
mov
xor
rcll
pop
inc
push
or
movsl
lods
xor
and
xor
out
jmp
push
xor
inc
xchg
in
xchg
fldt
test
outsb
push
add
test
inc
pop
in
or
mov
imul
mov
andb
add
inc
psllq
shll
loope
pop
cmp
out
shlb
pop
mov
enter
out
es
dec
idivb
iret
scas
aad
aaa
pop
sbb
mov
jl
cmp
adc
int3
fdivs
test
mov
sbb
and
stc
lahf
mov
aas
out
dec
dec
out
adc
scas
adc
push
loopne
jae
dec
dec
cli
mov
mov
add
cmp
jmp
jne
nop
xchg
dec
shll
mov
call
loopne
mov
jmp
fidivrs
xor
dec
push
fmul
pop
xchg
xor
lods
aad
jmp
sub
or
call
mov
cmp
add
cmp
push
popf
aam
sbbb
push
pop
pop
fiaddl
scas
repz
stos
pop
shlb
jge
mov
loopne
mov
xor
stos
xchg
lret
mov
or
push
insb
adc
dec
pop
clc
fisttpl
mov
xchg
out
ficoml
dec
xchg
jae
jge
mov
outsl
and
cltd
pop
sub
mov
aas
test
hlt
mov
dec
in
stc
pop
push
call
int
mov
mov
jnp
pop
mov
xchg
cmp
xchg
out
dec
xchg
ror
mov
cmp
shl
mov
mov
ret
movsb
in
dec
push
inc
and
push
cmp
push
loope
sub
outsl
stos
sub
jnp
cwtl
popa
or
loop
jns
repz
or
or
les
adc
frstor
test
or
sub
in
mov
push
pop
mov
fs
sti
or
xchg
mov
cmp
icebp
and
dec
sub
ret
mov
add
or
imul
xor
jno
add
rolb
hlt
add
lock
jge
mov
push
fisttpl
mov
loop
ljmp
cmpsb
inc
leave
stc
pop
scas
xchg
js
push
ljmp
cmc
sbb
jmp
xchg
sbb
jb
cmp
outsl
pop
popa
sahf
lds
bound
pop
cmpsb
fsubrl
in
inc
mov
mov
mov
loope
and
mov
pop
dec
mov
xor
push
lret
add
pop
jg
fs
pusha
pop
decl
rcrb
xlat
popf
inc
adc
jmp
scas
or
pop
push
mov
sbb
nop
lcall
inc
push
sbbb
out
lods
shl
adc
adc
jmp
sbbb
sbb
jle
cmpsl
push
stc
mov
jge
shrl
lea
ror
loopne
cmp
jp
cmpb
in
imul
pushf
dec
add
mov
mov
pop
testb
shlb
loopne
push
sub
mov
xchg
cwtl
push
decb
mov
sbb
stos
cmp
add
loope
lahf
loope
cmp
add
outsl
lods
adc
dec
and
xor
inc
in
movl
push
clc
lea
and
pusha
push
push
sbbl
and
cli
jno
add
inc
mov
test
jmp
add
add
pushf
shl
pop
rclb
inc
mov
mov
mov
shlb
out
stos
inc
inc
push
clc
cmp
cmpl
sub
test
adcl
add
test
or
xchg
xchg
sub
les
in
dec
xlat
mov
hlt
fcomps
shll
popf
in
addr16
jmp
aad
in
sbb
jmp
enter
mov
sahf
jp
xchg
mov
pop
cmp
js
inc
shlb
sbb
fwait
outsl
ror
jg
pusha
in
adc
shll
dec
fildl
lret
addr16
dec
not
repz
add
and
loope
inc
scas
arpl
cmpsl
pop
push
lret
xor
dec
or
mov
inc
add
cmpl
int
xrelease
aam
push
fs
lahf
test
jl
cmp
test
inc
lods
clc
sbb
adc
dec
les
xor
or
lcall
je
cwtl
xor
mov
sub
rcr
sub
es
xchg
lds
adc
xor
ret
or
adc
xchg
sarl
in
scas
or
std
jp
dec
cmp
or
mov
mov
mov
lods
sbb
pop
aad
ja
pop
repz
jne
push
filds
movsb
cmpsb
mov
pop
test
sub
call
cli
pop
es
xchg
lods
mov
imul
mov
out
ret
xor
mov
push
adc
jns
fsubr
jae
or
sbb
inc
xor
sbb
data16
push
int
inc
test
in
sbb
daa
pop
mov
sub
push
int
fs
insl
je
mov
cmp
pop
repz
mov
es
iret
cmp
int
addl
dec
lods
dec
inc
mov
mov
mov
fmul
inc
fcomps
cld
ljmp
cld
sub
mov
lret
clc
or
and
fwait
arpl
add
movsl
mov
fsts
in
xchg
cwtl
or
ss
add
xor
jae
xor
cld
jge
push
pop
sbb
popa
iret
sbb
loopne
test
stc
lds
cmpsl
adc
jo
int
je
repnz
adc
rcll
pop
push
xchg
dec
mov
ret
mov
shl
in
das
mov
cmp
cmpsl
lock
add
in
out
imul
fwait
inc
out
out
jne
mov
pop
ret
insb
dec
and
popf
and
ffree
pop
js
mov
jmp
dec
sti
dec
scas
repz
mov
jnp
out
subl
cli
cmp
cmp
pop
mov
mov
out
push
sti
insb
mov
negb
shrb
cmp
xchg
mov
and
fdivs
jl
mov
shlb
dec
mov
sub
add
lds
movsb
or
xchg
test
js
shll
xor
add
push
stc
movsl
and
or
lock
or
es
lods
loope
and
mov
push
and
adc
stos
push
es
dec
sub
sub
mov
popa
outsl
sbb
jecxz
jb
push
or
mov
imul
mov
es
dec
js
push
aaa
enter
sub
mov
or
mov
fists
outsb
xlat
outsb
pop
sub
pop
lahf
add
arpl
fcomip
mov
jge
mov
xchg
xor
movsb
fsubrl
ss
jae
aas
cltd
aam
fimull
and
pop
rcrb
out
lret
aaa
mov
mov
mov
sbb
clc
mov
ret
les
pop
outsl
push
cmpsl
das
adc
stos
push
push
in
out
cmp
loope
adc
ret
jno
mov
mov
xchg
xor
xchg
cmc
jns
xchg
lds
cmp
xchg
mov
cmp
dec
cmp
test
movsl
inc
ficoml
cld
mov
fcoms
xchg
cltd
pop
sub
icebp
lret
sbb
mov
es
fisttpll
xor
fstps
fxch
dec
ss
jno
pushf
or
fsts
dec
mov
fbstp
pop
cmpsl
dec
call
test
xchg
incb
shll
fwait
insl
xchg
jp
mov
xchg
inc
mov
roll
aas
test
xchg
aaa
in
sub
repz
dec
nop
mov
jg
ffreep
push
clc
aas
push
lock
xor
adc
pushf
iret
outsb
dec
stos
sbb
gs
jge
or
cmpl
fwait
mov
lods
in
popf
in
push
subl
dec
jo
mov
call
lret
arpl
and
jecxz
mov
xchg
imul
ret
and
aaa
push
xor
test
jae
cmc
pop
idivl
mov
push
mov
or
cmp
insb
imul
cs
test
je
loope
pop
pop
xchg
int3
xchg
push
fwait
pushf
je
outsb
cwtl
or
out
insb
pop
jp
pop
sub
sub
shll
aaa
enter
loope
xchg
mov
stos
lods
sti
mov
mov
sub
cmpsb
mov
rep
push
or
gs
xor
and
cwtl
jecxz
repnz
mov
add
dec
adc
pop
pushf
mov
mov
popa
dec
outsl
loope
xlat
cmp
ss
out
pop
rclb
dec
cmpsl
push
iret
outsb
repz
pop
in
xchg
mov
cmovns
pop
pushf
daa
xor
xlat
sbb
sbb
adc
mov
in
aaa
ds
nop
fld
xor
outsb
test
push
cmpsl
arpl
fs
divl
mov
jmp
cltd
out
or
cmp
ja
popa
mov
pop
cmp
aam
xchg
aad
push
test
insl
cmp
and
pop
mov
decb
push
loope
mov
stos
scas
dec
dec
into
add
jbe
lods
insl
sub
sti
iret
xchg
lock
aam
aas
mov
adc
out
js
adc
sub
popf
jae
test
add
arpl
xor
adc
flds
push
inc
adc
and
nop
test
mov
orb
test
mov
and
cld
and
test
cmp
pop
sub
inc
jg
pushf
popf
cmp
icebp
loop
push
cmp
jbe
dec
inc
inc
cmp
shll
mov
divb
adc
add
sub
ljmp
jnp
aad
xchg
xchg
jnp
jb
cmp
mov
pop
pop
inc
aad
xor
inc
fisttpl
mov
addr16
test
repnz
inc
jle
adc
cmp
jl
fldlg2
cmc
out
das
add
ja
and
mov
push
call
incl
outsb
in
scas
inc
fsubrl
popf
mov
shll
push
loop
jbe
adc
into
mov
movsb
and
mov
shr
xchg
loop
and
out
insb
xlat
pusha
popf
int3
xlat
clc
jmp
bnd
dec
pusha
scas
pop
int
or
outsl
adc
and
mov
jmp
mov
fwait
fstpl
jl
hlt
xchg
ror
inc
int3
mov
sub
test
fistpl
mov
out
notl
lock
mov
ficoms
cltd
loop
adc
mov
mov
jno
ja
sub
fiadds
mov
inc
dec
mov
mov
fistps
hlt
in
jno
mulb
push
nop
gs
pop
es
aas
sbb
imul
jne
and
mov
inc
or
sub
xchg
cmpsb
pop
or
in
test
lret
jo
add
xchg
pop
sub
sahf
cwtl
jg
xchg
push
xchg
data16
call
jmp
leave
dec
lea
push
sub
mov
xor
lea
xchg
mov
cmpsl
rcll
and
add
jno
popa
aaa
push
daa
inc
xlat
mov
mov
xchg
icebp
xchg
mov
cmpsl
rcll
and
add
jno
popa
aaa
push
daa
inc
xlat
mov
mov
xchg
icebp
and
shll
and
arpl
xor
inc
iret
mov
movsl
jg
iret
adcl
xor
jbe
stc
push
enter
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
movsb
xor
ljmp
inc
and
xor
add
adc
fs
je
inc
rcll
xor
in
hlt
popa
les
inc
and
xor
jo
adc
fs
je
inc
rcll
xor
in
hlt
popa
les
inc
and
xor
ja
cmp
or
push
divl
in
movsb
mov
mov
out
out
hlt
int3
xchg
inc
out
mulb
pop
adc
das
cmp
popa
jno
sbb
into
mov
iret
pop
and
or
rorl
popa
push
shrl
testl
ljmp
pop
pop
sti
xchg
jle
icebp
std
shlb
cs
shl
mov
repnz
jno
mov
and
mov
jle
mov
push
loopne
lods
rcr
lods
cld
pop
jno
sahf
lds
enter
popf
mov
cmp
movsb
rolb
pop
mov
fld
adc
mov
pop
les
mov
xchg
push
sbbl
cmp
cli
xor
in
hlt
popa
les
inc
and
xor
add
adc
fs
je
inc
rcll
pop
loope
icebp
inc
mov
mov
xor
xor
addr16
js
add
movsb
cmpsl
jo
imul
icebp
push
mov
ds
inc
hlt
ss
push
in
add
push
scas
int
rclb
gs
jne
sbb
aam
and
xor
add
adc
fs
je
inc
rcll
xor
in
hlt
popa
les
inc
and
xor
add
adc
fs
je
inc
rcll
xor
xor
jecxz
sarb
mov
ja
push
lret
aas
dec
test
gs
lret
in
ffreep
mov
and
insb
and
sub
pop
ret
mov
add
lock
gs
cli
dec
shlb
add
scas
insb
cmp
sbb
lahf
out
pusha
xchg
hlt
or
inc
imul
decl
repz
cld
or
leave
outsb
hlt
aam
scas
xchg
data16
or
sub
adc
inc
mulb
repz
mov
mov
clc
lods
lods
call
mov
mov
scas
inc
xchg
sbb
dec
mov
std
jle
adc
repz
xor
adc
cmp
jl
dec
out
inc
jo
add
rcrl
xchg
aas
jecxz
sbb
cmovle
in
clc
clc
ljmp
add
ficompl
sub
or
sub
xchg
xchg
jno
das
lret
lcall
mov
cs
inc
outsl
dec
dec
push
inc
pushf
call
test
xchg
pop
jae
call
mov
add
stos
inc
aaa
daa
jmp
ds
popa
mov
mov
sub
dec
mov
push
mov
xchg
xor
inc
mov
pop
movsb
push
push
in
sub
idivb
aad
in
js
movsl
push
mov
cli
or
je
push
aad
addr16
lods
lcall
add
iret
loope
jp
pop
sub
in
cmp
mov
jecxz
js
aam
xchg
push
xchg
or
mov
dec
test
mov
pop
inc
push
mov
inc
lods
jo
fsubs
xchg
out
xor
cli
lcall
insb
jb
mov
scas
test
sub
cld
xchg
cwtl
pop
jae
ret
cmpsl
repnz
sbb
test
inc
imul
adc
cltd
xorb
xor
mov
xchg
mov
sarb
xchg
rol
and
xchg
stos
mov
lahf
push
ret
or
xor
cli
jno
mov
and
inc
mov
leave
andl
fsub
or
fcompl
add
adc
mov
cmp
push
ljmp
rcr
xchg
cmpxchg
sbb
int
push
sub
inc
xchg
cmp
shll
xchg
xor
sbb
and
divb
jns
fs
cmp
and
scas
ja
lock
scas
test
mov
ret
in
add
in
jge
xor
insb
insl
sub
dec
fildl
int3
sub
pop
mov
mov
repnz
sub
test
loop
dec
mov
mov
call
adc
in
ja
int
jne
ret
jne
xchg
sub
aam
aad
out
insl
idivb
sub
movb
gs
popf
sbb
sub
faddl
push
cmp
fcoml
imul
fists
stos
cmp
incl
cmpsb
int3
arpl
imul
lcall
fistl
sbb
dec
inc
pop
inc
cmpsl
xor
push
cmp
fs
pop
push
shrl
cld
rcll
repnz
mov
hlt
sbb
xchg
mov
stos
fwait
jmp
mov
sbb
bswap
iret
cmp
sbb
lock
insb
xor
jns
pop
test
dec
jno
bound
repnz
pop
mov
or
stos
lahf
fmuls
pop
pushf
gs
paddusb
mov
and
push
js
js
adc
cmc
sub
mov
inc
fdivs
out
sti
and
das
sti
dec
push
out
adc
loop
mov
cwtl
jb
outsb
sbb
enter
stos
scas
add
dec
inc
mov
jp
cmc
cmp
push
mov
pop
hlt
icebp
push
or
push
xor
and
fdivr
xor
jmp
jae
mov
pop
cmpsl
lret
mov
ss
fs
jbe
mov
lods
sub
fcoms
inc
popa
push
mov
pop
mov
jb
add
jae
pop
lahf
cltd
les
in
out
imul
inc
cli
push
pop
test
xor
adc
aad
cmpsl
push
arpl
cmc
sahf
cmp
push
mov
mov
test
sub
out
loop
movsb
sub
and
inc
jo
sbb
pop
push
cmp
mov
jo
test
jecxz
in
and
stos
xlat
outsb
xor
xchg
loop
xchg
enter
ds
push
movsl
cmp
mov
mov
xor
insb
mov
and
jne
jo
shlb
xor
stos
xchg
cld
pop
insl
addb
rolb
hlt
ret
jns
inc
insl
rclb
push
adc
pop
push
nop
cmp
scas
test
std
xchg
mov
scas
jbe
push
fnstsw
rcl
mov
pop
data16
dec
jge
adc
imulb
or
mov
ja
pop
in
ljmp
mov
mov
sub
inc
or
es
mov
adc
push
and
xchg
bound
sub
pop
sar
push
pushf
int3
test
rorb
mov
dec
adc
js
shlb
sahf
sub
sbb
jle
add
movsl
stc
sbb
xor
outsb
and
jno
cmpsb
cmp
popf
in
out
sahf
xchg
pop
push
loopne
cltd
sti
xchg
cmp
in
inc
es
sbb
repz
mov
fdivr
push
cmpsl
hlt
es
sbbb
mov
pop
call
std
int
mov
fs
test
push
mov
push
adc
lahf
xchg
dec
dec
push
movsl
jo
callw
lock
nop
daa
ljmp
cmp
push
cmp
jmp
pop
scas
push
xor
scas
mov
inc
sbb
loopne
mov
test
dec
fsubp
ficoms
push
push
out
sti
je
subl
and
cmp
adc
and
mov
cmc
imul
repz
jo
push
ret
rclb
pop
lods
mov
pop
rcrb
or
push
leave
leave
mov
bound
pop
add
shl
decl
in
popa
jmp
ss
pop
cltd
push
cmp
mov
inc
sub
pop
stos
mov
dec
pusha
jnp
xlat
push
mov
jle
inc
jnp
xor
pop
sbb
jmp
cwtl
stc
inc
ss
das
add
popf
dec
sbb
xchg
mov
mov
int3
ss
in
inc
adc
inc
push
rcr
sbb
and
adc
mov
adcb
mov
push
inc
imul
adc
and
mov
inc
shrl
sub
nop
mov
xor
xchg
mov
push
cli
mov
or
out
fcmovnbe
mov
push
and
ja
dec
pop
push
mov
mov
pushf
in
sub
aam
sahf
jg
cmp
mov
xor
adc
mul
popf
mov
or
xchg
jl
mov
xchg
stc
lcall
sahf
cmpsl
mov
pop
dec
and
sbb
or
shr
insb
sub
iret
icebp
sub
push
scas
inc
imul
pushf
ret
mov
std
push
dec
int3
sbb
std
fisubs
mov
mov
adc
jg
sub
adc
xor
jbe
cmp
das
xlat
mov
and
jbe
and
adc
inc
cmp
sti
fists
pop
push
leave
fdivrp
xor
push
cmp
inc
and
insl
int
adc
into
mov
call
sub
cmp
out
and
pusha
out
dec
adc
call
or
les
in
sub
cld
pop
loopne
sbb
pusha
push
out
aam
stos
out
cli
cmp
jl
inc
pusha
cwtl
shrl
scas
ret
push
xor
popa
push
push
ja
test
dec
dec
jle
cwtl
jnp
xor
mov
dec
cmpsl
add
cmpsb
and
push
lock
out
movsl
scas
pusha
dec
aaa
out
inc
out
mov
cld
fnstenv
mov
cli
es
mov
mov
out
push
outsl
in
jmp
sti
movsb
inc
loopne
jne
dec
sub
repz
pop
mov
push
mov
filds
pop
test
lahf
fstps
pop
jb
pop
xchg
adc
ffree
outsb
outsl
scas
insb
or
or
ja
mov
addr16
push
lods
push
fucom
sarl
in
scas
in
xor
loop
dec
mov
cmp
cld
fstpt
pop
int
mov
mov
inc
push
add
mov
pop
jp
mov
mov
add
xchg
cltd
cmpsb
cmpsb
xlat
xlat
cmpl
cmpsl
int3
aad
add
out
std
out
or
movsb
inc
shld
adc
sbb
cmp
and
push
rcr
fbstp
cmpsb
adc
out
mov
push
sbb
ss
rcrb
data16
mov
push
into
ja
sub
cmc
cmp
pop
adcb
ljmp
arpl
pushf
jp
or
push
fcomp
cld
jl
mull
in
xchg
push
sbb
xchg
push
cmpb
inc
inc
mov
or
fidivl
popa
mov
xlat
sub
mov
push
push
repz
sub
or
jnp
fs
inc
nop
inc
sub
adc
push
mov
cmp
aad
ret
jne
push
dec
orl
cwtl
and
add
pop
das
xor
into
xor
pop
push
jl
mov
and
mov
push
rcl
cmp
add
mov
mov
push
int3
outsb
dec
hlt
xlat
inc
inc
int3
out
popa
stc
shll
pushl
push
es
rep
aas
fadds
jmp
xchg
sarl
in
pop
js
mov
ja
ljmp
push
stos
pop
test
fisubrl
adc
sub
loop
fsubrs
jns
stos
decb
inc
sbb
movsb
pusha
roll
jo
adc
cmpsb
cmp
mov
add
add
push
mov
imul
cmp
int3
cmp
mov
ds
pop
fcmovnbe
lods
imull
out
pop
and
rcrl
aaa
xchg
je
ja
mov
jne
insb
je
test
sub
mov
sbb
into
push
fs
dec
adc
jecxz
scas
add
jbe
mov
mov
jne
mov
mov
xchg
push
addr16
je
aaa
in
push
leave
mov
mov
repz
sbb
and
mov
outsb
lods
out
pop
pop
mov
push
out
dec
add
lock
mov
mov
loopne
sub
push
sbb
ljmp
mov
arpl
pop
adc
push
lahf
xchg
push
dec
mov
inc
inc
bound
into
in
dec
mov
mov
mov
mov
fdivrl
cltd
jge
xlat
js
sub
lcall
inc
loop
dec
scas
jbe
jno
inc
inc
xor
sbb
test
loopne
add
js
mov
mov
ror
dec
ret
das
push
leave
scas
repnz
mov
cmp
pop
lods
inc
popf
jp
add
sub
adc
sbb
jp
jp
sbb
cmp
push
mov
push
test
ret
clc
lods
data16
in
mov
mov
cld
repz
mov
jg
call
loop
mov
mov
sub
and
fistps
xchg
mov
test
clc
xchg
das
pop
adc
dec
movsb
push
sbb
mov
aam
fsub
lock
pusha
test
fistpll
enter
ljmp
insl
xchg
pop
adc
sub
xchg
or
clc
ret
pop
mov
pop
inc
call
sub
and
or
inc
push
imul
push
popa
cltd
mov
jb
xchg
iret
add
std
imul
rorb
mov
add
xchg
dec
jmp
lret
call
fistpll
cmc
push
mov
sub
jl
fnsave
cmp
in
ljmp
mul
divb
sub
test
pop
stos
dec
in
and
ss
decb
aaa
cmpsb
dec
dec
jns
cmp
lret
pop
adc
in
js
pop
insb
js
mov
bound
mov
insb
pop
pop
jo
xchg
shll
cmp
push
daa
imul
lods
adcb
stos
mov
add
xchg
std
jo
mull
adc
je
je
popa
out
xchg
repnz
insb
out
orl
inc
pop
ret
iret
cmp
cltd
adc
inc
lret
cmp
flds
sti
arpl
and
pusha
xchg
sub
sub
iret
dec
jbe
jno
scas
dec
out
out
pop
out
push
lods
jae
insb
ljmp
inc
jl
popa
add
cmp
push
sub
adc
pusha
sti
movsl
mov
add
notb
pushf
imul
negl
fisubrl
lods
loope
sbb
in
mov
fdivl
mov
fistpll
and
ficoms
jge
fbstp
ds
gs
jecxz
jae
and
pushf
and
cmp
jns
enter
bound
jnp
je
xchg
int
dec
in
inc
push
clc
or
int
aas
jo
and
mov
clc
mov
cmp
push
or
add
test
cmp
ret
sub
or
js
insl
sub
aam
pop
call
inc
add
stos
jae
sub
in
mov
xor
pop
inc
lahf
pop
and
lret
dec
pop
dec
ja
lds
andl
add
repnz
pop
sbb
repnz
jp
xor
fsqrt
add
rorl
sbb
nop
adc
ja
pop
add
daa
popa
scas
or
cmpsb
lea
mov
mov
pop
sub
rcrb
cmp
popf
test
inc
fs
sub
outsl
dec
cwtl
das
add
and
les
dec
pusha
repz
movsb
adc
mov
ja
jns
mov
in
fbstp
stos
add
enter
je
rcrb
dec
js
mov
lods
cwtl
cli
clc
ds
jne
push
enter
rcll
inc
ss
fwait
sub
xchg
jmp
adc
adc
xchg
jge
fistl
pop
test
pop
dec
sub
mov
test
fldcw
enter
jecxz
mov
idivl
negb
inc
das
xor
or
sbb
inc
or
hlt
mov
mov
xor
mov
icebp
cmp
lods
and
mov
cmpb
je
sti
loop
push
mov
in
push
cmp
xchg
fdiv
inc
movsb
out
pop
fldl
or
pop
cmpl
dec
jo
jae
imul
pop
adc
mov
addr16
xchg
jmp
addl
out
sbbb
cmp
addr16
sub
cmpsl
push
lea
mov
xchg
jecxz
jge
cld
adcl
andb
out
in
jns
cld
roll
mov
nop
and
mov
lcall
jo
mov
pop
sbb
les
shll
inc
mov
ja
loop
stos
fstps
mov
push
or
ficompl
sub
xchg
lock
add
test
mov
adc
or
push
data16
ds
jp
in
jb
test
pop
push
inc
sub
sbb
dec
popa
pop
xchg
mov
lret
adc
add
pop
mov
sub
lcall
jecxz
pop
mov
loop
or
pop
loop
dec
fcomi
out
mov
in
dec
adc
lods
pop
and
inc
push
hlt
xor
adc
dec
dec
dec
xor
aad
push
outsl
dec
sbb
les
mov
es
fwait
or
lock
mov
pop
xchg
sub
add
arpl
mov
lret
lock
sub
loop
inc
adc
aas
sub
test
push
dec
jp
mov
xor
adc
ja
cli
insb
xlat
loop
xchg
lret
inc
ficoms
push
outsb
pop
inc
ss
ss
xor
add
xlat
sbb
shrb
sub
push
data16
lcall
loopne
sarl
push
movsl
mov
addr16
xchg
and
arpl
xor
cmovp
lock
xor
insb
xor
xor
mov
adc
mov
nop
jp
test
jo
aas
mov
pop
adc
cld
and
push
imul
push
mov
xchg
jle
fsubrl
pop
imul
cli
mov
pop
jp
enter
insb
repz
subb
mov
lahf
mov
xchg
pop
jge
dec
adc
adc
scas
pop
stos
push
adc
shrl
not
inc
cltd
sbb
mov
pop
or
in
jl
out
sahf
movsl
fidivrs
sti
pop
pop
mov
push
lret
icebp
lds
pop
dec
outsb
popf
jno
sbb
or
ja
xchg
xchg
addr16
lcall
add
ja
int
test
pop
das
jb
adc
jne
sub
and
pop
cmp
adc
lods
inc
jns
mov
mov
ljmp
cld
imulb
add
stos
mov
int
inc
andb
pop
iret
imulw
inc
mov
loop
out
xor
sbb
xchg
or
pop
jb
xchg
scas
push
add
repnz
and
push
notb
xchg
xchg
lds
and
lock
out
dec
lcall
and
sbb
pop
test
inc
pop
shlb
aas
mov
push
fs
movsl
dec
sbb
sti
push
or
movsb
pop
out
inc
mov
aam
push
xchg
jno
jno
sti
sbb
jp
jnp
outsb
cmp
mov
mov
jle
xor
push
aas
fists
imul
ja
mov
dec
popa
iret
std
mov
push
mov
dec
pop
mov
clc
sbb
lahf
push
xchg
sbb
push
inc
mov
psraw
fcoms
inc
fwait
popa
dec
lds
or
dec
decl
aam
hlt
dec
stc
hlt
jmp
push
daa
fs
xchg
out
fmul
mov
into
push
jno
sbb
adc
cld
sbb
mov
insb
sahf
add
mov
xor
adc
mov
ja
adc
fistl
dec
int3
inc
xlat
xchg
inc
mov
stos
mov
mov
push
daa
inc
imul
jnp
push
loope
jmp
testb
xlat
fmull
sbb
test
dec
in
imul
sub
push
mov
call
adc
sbb
lods
pop
dec
mov
and
mov
jo
mov
cmpsl
mov
js
mov
xor
push
icebp
lods
push
xor
insb
jge
adc
loopne
sub
mov
push
lcall
jg
mov
mov
aad
movsl
bound
mov
fcom
mov
fnstsw
cmp
xor
popf
fmull
jecxz
xchg
lret
push
mov
repnz
mov
imul
loope
lods
mov
stc
xchg
pop
adc
mov
pop
cmp
adc
aad
popf
sub
sub
icebp
imul
test
pop
cmp
lods
jle
pushf
pop
idivb
arpl
sub
shl
daa
xor
sub
nop
icebp
sahf
arpl
mov
lds
addr16
xor
stc
addl
insb
push
or
das
mov
xchg
stos
or
test
data16
sbb
xor
jns
sbb
call
aam
adc
dec
fistl
mov
pop
mov
pushf
mov
push
cmp
xor
dec
push
or
xchg
mov
lcall
jle
aaa
fstpl
hlt
in
scas
aad
jmp
mov
add
lcall
mov
sbb
sarl
outsl
mov
repz
or
out
xor
mov
pop
adc
incl
adc
pop
xor
sbb
out
adc
mov
dec
ljmp
fcoml
fldcw
call
insb
sbb
and
movsb
je
sub
rcrl
test
call
add
test
fstl
test
out
ljmp
ljmp
scas
jno
rorl
icebp
mov
push
or
xlat
add
aaa
hlt
idiv
test
xchg
xchg
mov
cmp
stos
cmp
mov
imul
jno
add
mov
sub
jmp
add
pushf
jnp
in
cmc
push
sbb
mov
dec
lds
mov
arpl
imul
int3
cwtl
xchg
adc
sub
push
or
pushf
shlb
mov
sub
insl
pop
aas
rclb
fdivs
sbb
jmp
jns
inc
add
stos
idivl
scas
inc
cli
mov
push
xor
push
mull
sahf
fisubrl
mov
jbe
enter
pop
stos
das
add
xchg
jge
inc
cmpsb
vxorps
ret
cmp
mov
ret
xchg
dec
jb
in
xchg
xor
test
xchg
push
mov
ret
pushf
repnz
idivb
mov
loope
insl
out
xchg
movsb
and
adc
les
inc
and
xor
add
adc
fs
je
inc
rcll
xor
in
hlt
popa
les
inc
and
xor
add
adc
fs
je
inc
rcll
xor
xchg
add
jno
popa
les
inc
and
xor
add
adc
fs
inc
rcll
xor
in
hlt
loope
rcl
mov
scas
xchg
adc
adc
push
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
testl
sti
jns
push
mov
xchg
cmp
addr16
push
ljmp
pop
stos
pop
pop
testl
sbb
sub
addr16
push
jmp
pop
pop
mov
mov
testl
sbb
sub
xchg
and
in
into
jns
je
test
scas
jnp
pop
rclb
rorl
xchg
add
jb
sub
fbstp
aaa
ljmp
outsl
daa
mov
lds
dec
cwtl
add
adc
fs
mov
in
pop
es
or
inc
ljmp
jle
mov
jne
lahf
ljmp
mulb
ficoms
dec
ret
adc
imul
std
sub
mov
add
aaa
lret
fnstcw
sbb
stos
mov
xchg
mov
mov
inc
enter
jmp
stos
stc
cmpsb
jb
push
loopne
fnstenv
sub
mov
xor
scas
ret
push
lret
aaa
push
je
pop
sub
xchg
testl
sbb
sub
sti
push
jmp
fwait
aaa
mov
mov
repz
cmpsb
adc
add
sbb
jns
pop
shrl
rcr
push
scas
data16
xor
inc
fsubrs
dec
ds
sbbb
pop
sbb
dec
jmp
jns
mov
add
and
inc
fisubrs
mov
scas
adc
pop
mov
cmp
lret
addr16
push
jmp
fwait
aaa
mov
mov
testl
sbb
sub
sti
push
jmp
fwait
aaa
mov
mov
imull
out
inc
add
rcrb
fadd
lods
sahf
cli
cld
clc
pop
shlb
pop
jmp
mov
push
cld
dec
mov
and
xchg
xchg
jecxz
scas
mov
fsubrp
xor
enter
mov
popf
sbb
fwait
push
fadd
je
or
clc
out
and
or
leave
push
outsl
lock
inc
lea
sahf
loop
xchg
insb
jle
mov
inc
nop
in
rolb
add
daa
inc
ljmp
loop
lret
mov
mov
daa
xchg
shl
cld
jmp
imul
xlat
dec
lret
pop
hlt
sub
lret
insl
jmp
or
pop
xchg
sbb
daa
or
dec
clc
ficompl
mov
push
cwtl
and
cld
inc
or
ljmp
or
dec
loop
mov
add
dec
cmp
lcall
or
lret
das
sbb
ret
inc
mov
lods
jbe
test
decb
inc
cmp
jle
and
mov
push
mov
rcrb
mov
loop
jle
mov
cmpsb
into
iret
xchg
push
test
xor
clc
push
lods
dec
push
iret
shrl
dec
loopne
xchg
in
pushf
lcall
mov
inc
int3
mov
jl
sub
fcoml
icebp
inc
jge
sbb
sbb
pushf
and
sub
ljmp
int3
mull
in
mov
adcl
mov
movsl
push
lods
sub
pop
adc
xchg
movsl
lods
arpl
clc
push
push
add
sub
je
inc
mov
cltd
in
mulb
imul
es
mov
and
xor
adc
or
sarl
push
add
pop
sti
mov
cmp
aam
shrl
aad
push
pop
push
adc
jecxz
adc
fstl
scas
jl,pt
pop
dec
shll
test
sub
lret
rcr
sub
sbb
xor
cmp
jl
jmp
lds
icebp
mov
in
sub
sti
jns
leave
adc
jns
ret
push
mov
test
ficomps
xorb
xor
mov
pop
xchg
add
cmp
dec
lock
lret
and
call
jo
dec
popf
cmpl
stos
sub
mov
mov
cld
sub
push
and
xchg
lret
add
out
jle
gs
in
xchg
fidivl
jae
or
loopne
jo
loope
int3
repz
push
mov
adc
dec
adc
sbb
mov
pop
jno
pop
jge
push
or
sbb
in
test
xchg
mov
enter
add
leave
jo
sbb
or
out
stos
adc
cld
xor
mov
xchg
inc
add
jns
and
gs
jge
subl
arpl
seto
test
out
subb
jmp
sub
mov
xor
or
cld
push
jne
cli
movsl
out
mov
pusha
sbb
fwait
mov
and
test
mov
cmp
clc
scas
daa
cmp
lock
sub
jne
sti
inc
ficomps
hlt
outsb
movsl
push
icebp
add
and
add
mov
int
adc
jns
jg
push
jbe
add
mov
es
icebp
daa
inc
xchg
cli
and
jo
icebp
cwtl
ds
jno
in
test
pushf
inc
xchg
into
jecxz
repnz
ljmp
incl
push
adc
jo
test
std
mul
jb
mov
loopne
addr16
lahf
inc
inc
adc
stos
sub
inc
cltd
adc
xchg
mov
push
test
das
mov
je
jns
in
movsb
gs
loope
cmp
jb
movsl
pop
push
xor
add
jmp
jae
imul
jp
mov
or
jo
dec
in
jae
jle
popa
test
xchg
inc
or
pop
shl
out
or
int
xchg
int
mov
cmpsb
push
faddp
xor
cmp
pop
xchg
test
xor
das
xchg
pushf
add
and
xchg
mov
dec
sbb
add
mov
and
xchg
insb
ja
into
fcomp
pop
fdivrs
push
shrb
inc
and
outsl
sbb
xor
jecxz
jge
inc
jb
outsl
loope
inc
sbb
les
shr
mov
inc
dec
sar
pop
dec
stc
cmpsl
add
cmp
pop
je
in
sub
add
mov
xchg
sti
sbb
shrl
sbb
in
pop
or
or
mov
add
jmp
push
pop
mov
test
xlat
in
cmpsl
pop
dec
loop
in
mov
fnsave
pop
add
clc
jmp
hlt
scas
inc
sahf
xor
xor
lock
data16
outsl
push
dec
mul
mov
repnz
sbb
sbb
sbb
andb
push
add
idivl
mov
inc
mov
mov
lahf
push
daa
adc
test
cld
test
pop
int
mov
addr16
jbe
xchg
or
mov
shlb
pop
mov
stos
inc
lods
sbb
mov
sti
dec
lahf
xor
orl
push
xchg
inc
rcr
sti
add
loopne
mov
pop
popa
stos
push
mov
pop
add
xchg
adc
stc
push
push
mov
push
pop
push
adc
rcrb
das
je
cltd
dec
xlat
xchg
inc
subb
xchg
mov
icebp
imul
or
cmp
sub
cltd
mov
xor
push
aas
adc
adc
fwait
xlat
push
outsb
sahf
cmp
inc
imul
call
pop
js,pn
sbb
leave
int
jle
adcb
sbb
sbb
sub
jb
js
test
aaa
and
loopw
lea
iret
hlt
imul
and
rdpmc
ds
xchg
in
jecxz
dec
shr
cld
stos
and
pop
jbe
and
popf
or
sahf
mov
ds
adc
xor
xorl
mov
inc
dec
movsl
mov
inc
aam
aas
sub
rcrl
dec
arpl
cmpsl
movsl
jp
adc
and
flds
notl
subl
js
mov
jnp
or
arpl
mov
in
fmull
mov
ss
mov
sub
adc
insb
or
mov
push
paddq
leave
fwait
outsb
pop
cmp
lock
in
cmp
xor
hlt
mov
mov
clc
push
pop
rep
mov
mov
cmp
inc
pop
call
add
xor
mov
pusha
imul
inc
adc
xchg
xor
aam
sahf
imul
leave
js
sbb
insb
mov
lea
je
loopne
movsb
mov
rclb
call
roll
mov
sbb
cld
push
hlt
push
xor
or
sub
mov
scas
inc
fnsave
adc
je
test
sub
shrl
subl
mov
xor
jne
push
pop
dec
add
jbe
fwait
mov
dec
leave
aas
sbbl
mov
jnp
loopne
fisttpl
les
fbld
jno
push
loopne
out
pop
and
xchg
clc
insl
imul
loope
mov
dec
inc
dec
pop
fmulp
int
sahf
or
push
test
shrb
in
adc
cwtl
and
stos
dec
sub
js
inc
fdivl
movsb
push
push
lret
sbb
lcall
fisttpl
xchg
and
clc
jle
cmpsl
xor
popa
dec
fistpll
cmp
pushf
pushf
dec
dec
lret
adc
out
rcll
faddl
or
jmp
or
jne
pusha
push
adc
sbb
in
xchg
bound
stc
notb
repz
cmpb
lret
jne
and
mov
hlt
cltd
testl
pop
mov
fsubrl
mov
mov
cltd
cmp
cs
jnp
mov
pop
mov
out
xchg
aad
cmp
in
xchg
jp
mov
push
cltd
mov
out
mov
imul
test
loopne
xchg
popa
adc
cmpb
push
xor
shrb
inc
dec
xchg
andb
jns
repnz
cmp
sbb
sbb
adc
mov
mov
outsl
cld
lcall
mov
cld
mov
mov
movsl
lods
add
inc
lock
inc
xchg
pop
insb
ljmp
mov
data16
xchg
ss
test
push
jne
sub
fisubrs
imul
xor
lods
pop
jb
dec
or
in
iret
imull
lods
sub
xor
add
pop
fstps
les
aad
inc
rcrb
xchg
xor
fstl
icebp
jle
pop
or
bound
or
xlat
dec
rorb
add
push
mov
or
std
int
test
mov
lret
lcall
mov
pop
jne
test
movsl
cmpsb
adc
adc
sbb
mov
nop
aaa
dec
into
loope
cmpsb
mov
lods
jno
sahf
mov
jmp
and
push
pop
into
cmpsl
adc
int
int
iret
mov
xor
sub
dec
je
das
jle
ret
jl
jmp
pushf
filds
insl
test
loope
xchg
adc
cmp
adc
adc
pop
hlt
cs
pop
shlb
in
dec
push
cmpsb
aam
pop
addl
jae
sbbb
jmp
mov
pop
les
xorl
or
sub
inc
fcoms
das
insl
test
xchg
fcmovnu
xor
fisttpl
cmp
fsubs
mov
xchg
or
xor
jnp
sub
and
adc
push
dec
out
pop
clc
scas
sub
jae
lock
inc
arpl
mov
mov
daa
sahf
cmp
ss
dec
push
mov
pop
popf
js
xor
jo
iret
adc
mov
out
shlb
imul
jge
test
pushf
ss
cmp
xchg
sbbl
sbb
nop
or
sarb
ret
jns
jne
cmp
pop
jo
and
fnstenv
inc
adc
loope
lods
jbe
into
jmp
push
add
lods
xor
jl
dec
cltd
and
test
jno
dec
pusha
pusha
fwait
icebp
jno
jb
xor
fbstp
out
gs
sti
repnz
cmp
in
jbe
xchg
xlat
sub
mov
arpl
add
pop
pop
lret
dec
mov
add
jns
mov
data16
adc
insb
mov
sub
mov
add
mov
cwtl
out
inc
ret
mov
xor
push
mov
adc
sbb
sbb
jg
int3
enter
icebp
xor
adc
loope
mov
repnz
sbb
inc
aad
inc
ds
sub
sub
pop
repz
and
bound
insl
xlat
xor
mov
cmp
pop
xchg
mov
mov
inc
cli
call
mov
jns
add
mov
ljmp
jno
xor
sub
aaa
imul
ret
mov
ja
sbb
adc
pop
jns
mov
ja
outsb
and
inc
xor
in
inc
stos
ds
arpl
push
mov
push
decl
inc
mov
xchg
dec
scas
xor
xor
popf
push
cmp
adc
imul
mov
push
pop
dec
sbbl
popa
mov
xchg
shrb
inc
xchg
and
aaa
pop
cli
repnz
in
in
push
fmull
rolb
out
add
fdivr
xchg
and
fimuls
push
jmp
test
test
mov
add
or
mov
les
addr16
and
jle
jnp
mov
rorl
or
stos
xchg
movsb
hlt
daa
xchg
jo
push
mov
sub
addr16
sbb
lock
into
dec
mov
jge
stc
fnstenv
data16
jg
gs
scas
mov
sub
xchg
out
mov
push
jae
mov
mov
mov
aam
dec
das
inc
cmp
push
jae
or
push
fnstsw
xchg
mov
or
mov
lret
mov
pop
jae,pt
insl
aas
mov
xor
mov
int
mov
mov
movsl
xor
hlt
cmp
inc
and
lret
pop
rcrl
das
mov
cli
jb
mov
aam
mov
and
mov
pop
les
push
xchg
pop
loop
lds
pop
dec
outsl
jae
adc
or
inc
stc
cmp
js
ds
pop
rcl
adc
cwtl
add
mov
push
dec
pushf
popa
and
and
dec
push
mov
int
or
cld
aam
push
and
ret
les
js,pn
mov
sbb
dec
mov
je
imul
fistpl
nop
loope
shrb
jnp
cmc
cmpsb
jge
add
inc
cmp
jne
mov
mov
cmpsb
into
pop
mov
loope
mov
xchg
sub
test
sub
sti
insl
dec
cmp
add
daa
jp
jg
enter
out
or
movsb
psrld
adc
lret
or
imul
and
sbb
cmp
dec
andb
enter
and
mov
cmpsb
and
pop
adc
inc
inc
adc
sub
lret
lds
rolb
xor
ja
stos
fists
data16
jno
sbbl
imul
push
mulb
data16
dec
shl
or
xor
stos
or
iret
jns
xchg
sti
rorl
dec
mov
jnp
mov
fs
xchg
out
sub
pop
mov
push
popf
push
mov
cmp
xor
aad
or
push
out
lods
jle
add
adc
cmp
cmp
ret
xchg
pop
imul
aam
call
mov
loop
pop
test
fcmovnb
push
ljmp
xchg
xor
push
jle
lds
add
lds
mov
mov
jecxz
push
pop
imul
insl
andb
outsb
or
mov
cli
xchg
dec
stos
push
sub
push
push
sahf
dec
fsubrl
mov
lret
pusha
pop
int3
or
mov
xchg
imul
lods
sub
sbb
in
out
stc
sbb
fs
mov
add
adc
repz
pop
or
mov
outsb
sub
adc
sbb
sub
pop
jnp
mov
aaa
in
adc
push
dec
aam
jp
push
roll
push
scas
cli
pop
jne
inc
xor
sub
fisubl
push
cmp
push
data16
movsl
cmpsb
xchg
dec
pop
pop
das
pushf
daa
and
xchg
mov
stos
and
imul
shlb
adc
or
inc
mov
jo
xor
xlat
pop
daa
xorl
pusha
pop
cmp
shlb
cmpsb
push
mov
inc
cmp
or
or
inc
lcall
mov
lods
push
sbb
nop
inc
movsb
mov
std
and
hlt
faddl
pop
cmp
inc
sub
call
cmpsb
mov
mov
push
adc
or
push
stos
scas
xor
sub
jmp
sahf
pop
cwtl
jg
rcrb
data16
mov
sbb
sbb
cltd
mov
dec
nop
inc
rorl
loope
xchg
sbb
xchg
xchg
inc
and
scas
pop
jns
jle
loope
shr
mov
idivl
mov
cmp
adc
adc
popa
lret
xchg
or
mov
push
pop
xor
mov
rep
bound
jnp
sub
imul
and
gs
ret
push
movsb
xor
jb
inc
cs
enter
in
jns
adc
dec
ret
xchg
mov
sti
repnz
scas
hlt
jg
aaa
sarb
xchg
hlt
jb
aad
mov
and
pop
cli
mov
mov
jg
mov
mov
cmpsl
and
inc
sbb
gs
data16
jne
and
nop
mov
cld
or
sbb
in
inc
test
sub
lret
pop
dec
lock
pop
xchg
push
pop
loopne
mov
and
inc
into
xchg
jle
push
or
cli
scas
cwtl
call
inc
loopne
add
repnz
inc
test
mov
mov
ret
cmp
lock
mov
mov
stc
dec
test
add
addr16
mov
cli
push
add
mov
ja
jno
mov
sbb
dec
in
add
pusha
pop
dec
inc
jl
clc
gs
dec
aaa
jp
cmp
fwait
dec
inc
and
and
xchg
sti
mov
adc
dec
fs
mov
and
lods
shl
lahf
mulb
cmp
dec
adc
in
mov
lret
stos
xchg
sbb
sbb
imul
or
cs
xchg
stos
inc
mov
mov
ret
iret
sbb
in
push
push
mov
loope
xchg
xor
mov
cwtl
jl
xchg
push
divb
cmpsb
dec
test
pop
pop
jl
push
lock
daa
jb
scas
movsl
decb
inc
pop
xchg
js
out
jle
xchg
mov
shrb
cli
sahf
or
cmc
popf
adc
adc
pop
sbbl
mov
popf
es
lods
arpl
fs
idivl
sub
fadd
pop
push
cmpsb
push
test
mov
mov
aaa
leave
movsb
mov
scas
imulb
out
inc
imul
push
mov
dec
xor
jge
pop
pushf
cmovne
mov
mov
jmp
sub
mov
icebp
pop
mov
xorl
xchg
inc
push
push
or
jecxz
inc
cmp
insb
xchg
jb
mov
jecxz
fwait
pop
into
mov
sub
sub
jl
xchg
insl
sbb
test
pusha
stc
jnp
orb
mov
mov
shlb
push
jp
push
in
jmp
push
cmc
cltd
es
es
sbbl
adc
pop
insb
mov
addr16
cmpb
adc
ds
leave
cmp
jmp
sub
sub
testb
add
clc
aam
mov
es
mov
inc
pop
mov
iret
and
mov
dec
imul
enter
adc
dec
dec
mov
adc
push
mov
or
dec
scas
jno
inc
inc
pusha
pop
cmpsl
xchg
gs
lahf
add
dec
daa
scas
pop
jae
aaa
and
xchg
enter
push
loope
pop
inc
push
mov
dec
xlat
lock
repnz
sarb
jp
dec
int
and
ds
push
insb
cwtl
stc
dec
outsb
pop
sahf
jbe
icebp
inc
fsubl
jmp
popl
js
popf
add
mov
adc
push
pop
in
and
mov
lret
dec
lcall
sbb
mull
aaa
incl
aad
cmpsb
push
hlt
push
xor
jl
and
jge
fnstcw
test
or
test
fiadds
or
lcall
push
bound
or
movsl
imul
adc
push
pop
push
adc
adc
stc
dec
sbb
ror
pop
punpckhbw
sbb
add
xor
nop
xchg
mov
inc
ret
test
push
push
cmc
fsubrl
xor
test
cli
xchg
in
mov
xlat
jae
loope
movsb
inc
cwtl
cmpl
push
shr
jge
mov
inc
shl
xor
jge
ret
pop
loopne
and
or
dec
sbb
or
into
negl
add
jmp
and
xor
int3
test
cltd
cs
testb
inc
jg
lock
mov
fsubs
loop
xchg
sahf
jle
les
stc
imul
or
fsubrl
adc
lcall
test
loope
jo
xor
mov
lock
sub
ret
fcmovnbe
icebp
jns
pop
or
mov
cmpsl
lea
push
std
mov
bound
pop
repz
pop
fildll
jns
lock
movsb
and
cmp
mov
xchg
or
or
push
mov
inc
xchg
jns
sub
or
jmp
aas
mov
fdivs
out
inc
dec
cltd
out
xchg
mov
popf
cld
mov
cmp
cmp
jo
add
ja
mov
mov
cmpsl
aad
aas
mov
push
loope
or
lahf
xor
add
mov
cmpsb
cmp
aaa
inc
adc
push
sbb
rolb
mov
ds
and
jecxz
stos
cmp
es
rolb
add
nop
dec
lods
mov
out
mov
cmp
xchg
out
mov
popf
inc
and
test
xchg
mov
xchg
movsl
cmpl
subl
xchg
xor
mov
sub
mov
std
inc
cmp
in
and
lds
sbb
clc
aas
sub
cli
xchg
adc
jae
add
mov
notl
sbb
sub
sti
push
jmp
fwait
aaa
mov
mov
testl
sbb
sub
sti
push
jmp
fwait
aaa
mov
mov
test
fwait
mov
cmpsl
cmp
lret
addr16
push
jmp
fwait
aaa
mov
mov
testl
sbb
sub
push
push
jmp
jmp
sti
fmul
call
mov
test
xchg
pmulhw
add
adc
dec
imul
jne
inc
iret
inc
iret
sarl
das
jmp
jg
outsl
lds
dec
and
mov
jne
inc
fists
sbb
pop
dec
push
sti
xchg
ja
inc
aad
inc
pop
push
xchg
insl
ljmp
adc
stc
inc
test
test
nop
cmc
mov
sar
bound
and
fwait
cwtl
fldenv
adc
roll
push
xchg
dec
bound
add
hlt
jne
dec
aad
sarl
inc
inc
orb
mov
pop
shl
lock
subl
mov
int
out
jae
xor
or
xor
lea
imul
pusha
pop
jns
sbb
scas
cmp
aad
and
xor
jo
lods
jne
inc
push
push
movsl
pop
pop
mov
out
sbb
xchg
dec
divps
xor
and
pop
xor
sub
test
imul
inc
sbb
cmp
ret
xor
call
and
aas
jecxz
test
xchg
adc
lds
push
jecxz
scas
mov
xchg
clc
ja
push
stos
int3
pop
das
icebp
push
in
push
mov
fwait
add
data16
pusha
lret
pop
xchg
sbb
inc
shrb
imull
or
andb
addr16
add
lea
subb
stos
leave
jle
dec
in
jp
adc
outsl
lds
dec
and
lahf
adc
out
inc
fists
movsl
aas
mov
test
xchg
pmulhw
outsl
lds
dec
and
lahf
adc
out
inc
fists
movsl
aas
adc
sub
or
sub
les
ds
xchg
pushf
repnz
xor
cltd
jle
add
lret
mov
idivl
mov
push
sub
inc
or
sbb
das
das
jns
scas
mov
add
push
pop
and
cmp
pop
pop
das
xchg
pop
mov
rorl
sbb
push
pop
cmc
dec
push
stos
ljmp
sarb
sbb
push
inc
lea
mov
aaa
test
add
fsubs
iret
pop
cmpl
ficoml
call
adcb
pop
jo
hlt
jge
in
enter
rorl
add
mov
movsb
mov
push
shr
out
idivl
shr
mov
adc
adc
sub
clc
popa
ja
push
inc
jnp
rcrl
inc
leave
xchg
add
adc
js
lret
push
sbb
ja
stc
pop
rcll
es
add
frstor
xor
mov
xor
into
sbb
pop
push
hlt
sbb
sub
test
scas
leave
mov
jns
fwait
stc
sbb
sbb
add
mov
pusha
jp
imul
cmc
ja
popf
or
cltd
cmp
iret
xlat
mov
aaa
outsl
hlt
incb
sub
stc
dec
push
mov
sbb
and
adc
inc
xchg
jbe
and
inc
inc
dec
inc
lea
adc
sarb
divb
mov
dec
pop
into
add
rcrb
ret
pop
in
jge
or
adc
ret
out
xor
fdivp
dec
xor
adc
xchg
mov
iret
aad
stos
jecxz
adc
sbb
adc
cmp
cmp
lea
add
or
add
popf
movsl
pusha
xlat
insb
xlat
stc
sbbl
and
mov
stc
pop
or
inc
push
call
leave
mov
push
dec
in
add
rcrb
mov
mov
pop
jbe
in
xchg
das
rolb
sbb
jo
jmp
inc
or
push
movsb
jmp
ds
push
pop
sbb
pop
add
xlat
mov
pop
add
inc
add
push
mov
push
ret
fsubs
jmp
mov
xchg
lds
rorl
jmp
or
mov
fsubl
mov
mov
test
adcb
sarb
cs
shll
lea
rorb
test
push
xor
sbb
test
jne
loopne
push
sub
ljmp
mov
cli
pop
pop
mov
push
ja
sti
xchg
sub
xchg
cli
pop
lds
aaa
mov
jne
mov
in
test
popf
sbb
dec
and
icebp
test
add
mov
jno
fistpl
loop
pop
movsb
in
adc
popf
adc
jl
xor
xchg
add
or
mov
xchg
mov
sub
lcall
test
mov
push
pop
movsl
xacquire
mov
sub
mov
shlb
popa
cmpsl
mov
lcall
in
test
inc
stos
adc
mov
xchg
mov
cmp
xchg
mov
jmp
jne
mov
fadds
fs
sub
dec
xchg
fdivrl
mov
ds
xchg
insl
adc
adcl
pop
xchg
sbb
lcall
in
push
outsl
push
out
mov
pushf
mov
enter
orl
cmp
pop
out
scas
stos
push
sbb
and
mov
push
cmpsl
movsl
rorb
jge
mov
sub
orb
repnz
mov
lahf
adc
push
push
clc
fisttps
scas
fisubs
sbb
sbb
jno
sbbl
nop
jbe
dec
shr
mov
jo
jmp
nop
sbb
inc
mov
pushw
daa
xchg
je
jb
repnz
push
test
inc
or
pop
pop
div
loope
add
mov
or
lea
mov
rclb
jmp
pusha
push
push
rclb
int3
std
dec
push
arpl
out
lods
stos
insl
adc
inc
lret
inc
push
mov
stos
push
fwait
sub
or
ret
xor
cmc
xor
xor
fadd
and
and
mov
sub
sub
push
gs
adc
lock
dec
cmp
aam
pop
mulb
add
mov
in
mov
push
sub
in
popa
sub
push
jnp
mov
adc
inc
pop
test
pop
cmp
jl
and
roll
fldl
cmp
mov
cmp
fsubr
into
inc
ja
mov
sbb
out
into
inc
aam
dec
repnz
pop
push
jg
or
insb
int3
mov
test
in
mov
mov
into
testb
xor
adc
sub
sub
dec
stos
arpl
cmpsb
mov
scas
call
mov
mov
mov
cmc
test
mov
lret
addl
nop
mov
cmc
stc
das
inc
mov
cli
mov
dec
jg
roll
stc
movsl
or
fldcw
mov
loop
mov
pop
xchg
iret
scas
push
aas
inc
push
dec
ljmp
pop
inc
cs
push
jmp
push
adc
lods
pop
inc
cmp
push
mov
mov
insl
cmp
enter
lret
sub
xor
or
push
popa
jmp
cmpsl
or
ds
mov
ficoml
out
orl
mov
push
jne
gs
loop
xor
movsl
jnp
out
pop
cmp
cltd
sbb
ds
jp
cmp
mov
mov
sbb
bound
stc
repnz
sbb
data16
mov
add
ret
pop
hlt
repnz
sbbl
daa
jmp
inc
jecxz
inc
mov
inc
ljmp
xchg
inc
arpl
jae
sub
mov
mov
add
out
sarb
test
fdivrs
jne
xor
mov
fcomp
fisttps
jl
dec
pop
enter
ss
lds
cmp
jae
pop
cmp
ljmp
into
lea
movsb
mov
jl
in
xchg
test
cmp
in
fsubl
pop
inc
adc
hlt
cmp
adc
mov
hlt
cmp
and
aas
cmp
and
mov
xchg
dec
leave
or
lea
faddl
add
fsubs
jg
insb
push
jb
mov
add
cld
sbb
mov
test
cmpsb
in
sar
jo
sub
or
addl
ja
xor
je
out
sbb
into
fidivl
in
mov
loop
out
add
popa
jp
mov
sub
mov
lods
dec
popa
mov
pushf
sbb
pop
mov
mov
push
push
mov
sub
in
and
push
jne
les
pushf
shll
notl
mov
das
cmp
subl
push
movsl
sahf
lock
adc
push
adc
sbb
sbb
inc
fisubrs
add
pushf
movsb
lcall
aad
push
sti
mov
orb
scas
sub
push
js
push
inc
cli
addr16
std
imul
cmp
jmp
scas
cltd
push
and
adc
stos
fwait
cmp
push
int
out
fcomp
mul
pop
or
or
push
mov
rcpps
lret
add
scas
mov
mov
lods
lret
sbb
test
jb
cld
sti
lods
notb
shll
mov
sti
jg
mov
in
sub
sub
clc
jecxz
jns
pusha
cmp
daa
mov
mov
in
repnz
jno
ret
movb
das
call
ss
filds
repz
scas
dec
adc
cltd
dec
and
mov
test
loope
xor
cmp
into
mov
pop
dec
xor
xor
mov
jb
sub
pop
push
mov
sub
jne
cmp
std
dec
lods
inc
xchg
push
cmp
dec
pop
mov
jp
jge
push
dec
enter
add
jg
out
insl
inc
pusha
mov
or
orl
add
cmp
dec
shlb
sbb
xor
push
adc
insl
dec
jno
xchg
cmp
xchg
shl
jne
cmp
inc
bound
insl
nop
dec
lret
add
pop
cmpb
popl
cmpl
sahf
gs
testl
dec
sub
cld
jns
adcb
in
test
mov
cwtl
cwtl
ret
jns
cmp
jecxz
rcrl
mov
lock
xchg
fs
test
pop
sbb
lea
xchg
call
push
mov
lret
addr16
lret
cli
outsl
lcall
fs
cwtl
addr16
andb
dec
mov
aas
outsb
fwait
divb
cmp
mov
mov
and
mov
and
adc
sarb
or
cmpsb
stc
imul
mov
sbb
xlat
outsb
pop
dec
push
shl
das
je
pop
test
insb
in
nop
mov
mov
fmull
fnstcw
in
add
mov
cmpsb
push
out
or
add
aam
movl
outsl
jo
dec
adc
fs
insl
push
idivb
xchg
push
jnp
stos
inc
add
mov
pop
push
lcall
xchg
mov
std
iret
mov
and
out
stc
or
enter
xchg
mov
pop
xor
out
sbb
dec
fidivs
jg
inc
into
adc
das
es
cmp
jbe
fadds
repz
mov
int
out
cmpsb
rolb
jp
cmpsb
jle
imul
xchg
cmp
dec
xor
mov
lds
xchg
xor
addl
pop
add
rdpmc
icebp
cli
mov
push
mov
or
movsl
test
mov
push
inc
push
dec
add
xchg
dec
mov
and
jno
jae
dec
cmp
mov
push
stos
call
dec
sbbb
loopw
stos
cmpsl
pop
scas
xchg
adc
leave
fldt
xchg
stos
xchg
das
jp
xor
xchg
negl
jp
sub
test
test
cwtl
call
mov
rcr
stos
xor
addr16
fisubl
mov
popf
out
ffreep
xorl
add
jne
add
mov
jbe
test
outsl
scas
cld
fisubrs
mov
xchg
hlt
adc
jns
rcr
sti
cmpl
jp
bound
imulb
gs
mov
stos
dec
xchg
nop
mov
int3
ret
in
mov
push
jb
xchg
inc
push
imul
imul
xlat
push
out
xchg
add
pop
popf
sbb
add
loopne
data16
dec
inc
dec
fsubrs
outsl
popa
cmpsl
sbb
icebp
js
shlb
and
sbb
push
push
cmp
out
xor
mov
adc
or
in
mov
leave
jl
sub
cmp
mov
dec
insb
scas
push
inc
dec
dec
enter
int3
fs
dec
out
out
cmc
sub
or
mov
jp
mov
cmp
mov
mov
push
pop
cmp
push
sub
pop
insl
sbb
ret
ss
dec
faddp
mov
jmp
fstps
shlb
jo
movsl
fnclex
in
mov
or
hlt
pop
repnz
lock
mov
sbb
dec
gs
add
mov
mov
sub
xchg
xchg
xor
push
mov
jle
mov
cmp
dec
sub
or
test
inc
xor
mov
mov
ja
and
jb
icebp
popa
pop
mov
sbbb
fistpll
les
and
bound
ja
push
jge
push
out
xchg
xchg
stc
fs
lret
sub
repnz
in
jp
mov
adc
stc
cmpb
in
sub
sbb
aaa
xor
loopne
popa
mov
ljmp
pop
fldcw
push
arpl
xchg
push
cld
ja
mov
inc
js
and
push
rorb
jno
jnp
jl
dec
lret
outsb
xchg
add
push
inc
pop
js
fistl
outsb
cmpsl
add
clc
stos
push
dec
push
jmp
mov
pusha
scas
push
adc
icebp
in
in
mov
xchg
mov
push
in
repz
clc
push
rcr
scas
pop
add
fs
push
push
mov
in
dec
mov
dec
xchg
jmp
inc
xor
adc
sbbb
scas
int
fisubl
cli
jne
mov
pop
pop
mov
lods
push
sbb
lret
lret
nop
dec
xor
cmc
sub
mov
das
or
dec
cmp
clc
dec
lcall
xchg
push
sbb
ret
stos
adc
shlb
adc
imul
inc
sub
lods
aad
scas
out
sbb
sarb
mov
clc
mov
mov
scas
xchg
inc
mov
pop
test
fsubs
add
popf
jnp
addb
ret
sbb
cmp
mov
pop
adc
dec
push
mov
push
sbb
fistps
jo
xor
sub
jl
sbb
scas
sbb
fldenv
pop
mov
in
imul
mov
shl
or
xchg
or
mov
push
ret
das
aad
pextrw
stos
dec
nop
ficomps
insl
add
mov
mov
mov
cmp
orb
jo
out
dec
movsb
inc
push
rcl
test
scas
push
jns
mov
rorl
mov
fsts
movlps
dec
mov
aad
xor
pop
movsl
lret
cltd
in
sub
sub
dec
cmp
imul
fiaddl
sti
add
xchg
rcrb
sbb
sarb
mov
push
test
pop
jns
inc
or
cmc
xor
bnd
adc
and
sbb
sub
lcall
aas
lods
jmp
pop
lcall
mov
scas
and
pop
test
push
mov
xor
fistl
lods
jg
in
mov
mov
xor
push
test
fwait
mov
jbe
inc
xchg
cld
and
mov
rolb
or
test
inc
add
insb
shrl
cmp
inc
mov
loope
push
outsl
sahf
and
pop
out
and
jno
out
stos
sbb
push
js
inc
lods
jl
pop
ss
sub
test
push
push
xor
push
lods
inc
adc
jg
push
lock
push
out
jae
jbe
adc
loope
sub
cmpsl
aas
jb
pop
loope
fwait
or
scas
pop
mov
add
add
or
int3
sbb
add
test
cmp
mulb
fwait
mov
pop
and
insb
xchg
lcall
jp
outsb
push
xlat
or
movsl
pop
or
cmc
sbb
cmpb
pop
add
xchg
jmp
stc
xor
mull
out
mov
scas
xlat
sub
fldenv
push
pop
cwtl
jmp
test
sbb
nop
sub
stos
fsubl
pop
dec
cmp
in
loop
out
mov
cmp
aad
mov
inc
xor
int3
mov
jg
cmpsl
sbb
insl
adc
int3
mov
jg
xchg
popf
aam
mov
push
adc
push
push
scas
xchg
push
and
lods
xor
je
loop
cmpsl
out
inc
xchg
pop
dec
outsb
xchg
pop
xchg
mov
jg
push
cmp
sub
dec
mov
mov
notl
into
imul
xchg
int
mov
mov
xor
dec
mov
sub
loopne
adc
inc
mov
ss
and
data16
movsb
xor
xchg
cmp
lcall
je
dec
cmpsl
data16
lods
aas
push
jns
push
push
ret
cld
mov
pop
xchg
inc
adc
arpl
mov
sbb
adc
jp
sub
imul
mov
mov
and
rorb
fldt
fwait
jg
dec
jge
aas
mov
xchg
pop
loope
jmp
xor
sub
pushw
sbb
into
pusha
dec
rclb
lods
inc
sbb
or
into
adc
mov
into
cmc
mov
repnz
lods
jb
std
ret
xor
repz
adc
cmp
xor
push
jmp
jno
rcr
mov
out
mov
push
cltd
add
jle
dec
and
jb
jle
jmp
les
sub
push
stos
pop
adc
mov
jp
mov
xor
pop
xor
enter
jl
or
imul
pop
iret
lock
mov
data16
jecxz
sub
mov
jbe
pop
hlt
mov
insl
cmp
leave
les
lods
cltd
mov
adc
inc
movsl
adcb
add
into
fcoml
mov
push
into
out
jmp
into
xchg
xlat
pop
jno,pn
lret
add
add
pop
daa
push
inc
cmp
pop
dec
cs
aam
es
sbb
imul
lods
push
adc
out
push
xchg
jo
sub
cwtl
add
push
mov
lret
adc
aas
push
rorl
jg
in
std
mov
pop
clc
cmpsl
popa
dec
insl
mov
test
cli
sub
push
push
jl
push
ret
ja
sub
xor
shlb
xchg
loopne
mov
and
clc
sub
punpckhwd
fdivl
xchg
fildll
test
call
dec
imull
pop
add
cltd
and
sahf
add
push
dec
dec
lret
test
jmp
daa
xor
out
sbb
mov
fwait
jmp
and
lock
mov
sahf
jge
and
push
jb
xchg
icebp
aam
pop
or
add
cmp
mov
xchg
std
sbb
push
into
adc
divl
fisubl
sub
lods
push
sub
loopne
in
arpl
cmp
dec
hlt
xlat
out
ret
push
icebp
fsubrs
add
inc
inc
fcomps
push
adc
add
outsb
mov
mov
sbb
mov
sub
lcall
lock
jp
test
mov
int3
cmc
test
xor
and
out
add
mov
jge
mov
push
fnsave
arpl
sub
or
icebp
pop
mov
arpl
lret
mov
sub
std
jecxz
sti
push
sbb
andl
inc
pop
daa
fs
jmp
pop
sub
pop
call
outsl
xlat
fidivrl
add
push
scas
jl
adc
pop
sbbl
arpl
outsb
popa
dec
jbe
xor
aaa
cmp
icebp
jp
push
fsubrp
xchg
out
iret
daa
mov
nop
fcmovb
xor
int
gs
inc
test
add
stc
inc
adc
je
add
dec
mov
fdivrs
test
jno
push
mov
sbb
imul
out
aaa
pushf
shll
out
mov
pop
cmpsb
sarb
adc
pop
jmp
cmp
xchg
cli
cmp
or
adc
je
inc
lahf
fcomps
or
or
mov
ds
jmp
bound
pop
cld
and
xchg
xor
stos
jp
cmp
jecxz
rorb
rcll
or
test
mov
inc
lret
push
push
pop
into
neg
daa
sub
jg
push
mov
adc
mov
and
negb
mov
xchg
cs
repnz
in
mov
js
mov
pop
into
and
dec
sbb
xchg
add
mov
xor
int
out
icebp
fadds
negl
es
jmp
movsb
into
xchg
sarb
sbb
and
xchg
jae
test
push
xchg
cmp
scas
mov
mov
jb
pusha
bound
pop
and
add
leave
dec
mov
cli
add
sbb
lock
dec
mov
les
fldenv
repnz
and
lret
das
ljmp
arpl
arpl
jp
push
jecxz
xor
repnz
loopne
mov
lods
out
xor
push
jb
orl
mov
notl
mov
mov
je
pop
lcall
adc
fsubr
je
sub
push
mov
pop
mov
jge
lods
xchg
loope
dec
or
push
iret
in
fwait
adc
addr16
mov
shrl
ja
and
sbb
lret
shlb
gs
out
icebp
push
inc
fadd
imul
dec
jb
hlt
push
cmp
cs
push
cmp
sub
mov
out
shll
xor
outsl
mov
xchg
jbe
fadds
cmpsl
dec
mov
xor
jl
pop
push
mov
enter
and
mov
loopne
or
mov
push
cmp
mov
lods
cmpsb
cmp
flds
adc
sbb
mov
and
into
ror
pop
pop
xor
xor
in
lods
push
xor
xchg
idivb
and
pusha
mov
push
adc
popa
mov
idivb
pop
imul
testl
mov
aas
cmp
fstl
jmp
lock
pmulhw
outsl
lds
dec
and
lahf
adc
out
inc
fists
movsl
aas
mov
test
xchg
pmulhw
outsl
lds
dec
and
lahf
adc
out
inc
fists
movsl
aas
test
in
xchg
pcmpeqw
outsl
lds
dec
and
lahf
adc
out
inc
fidivrs
das
fistps
mov
in
in
lds
dec
and
lahf
adc
adc
sub
data16
pop
and
addr16
xor
jbe
bound
xor
ss
es
mov
mov
xchg
out
xchg
repnz
mov
shrb
push
xor
jbe
bound
push
inc
jbe
es
pop
mov
sti
stos
jmp
ficompl
mov
outsb
sub
dec
inc
aas
outsl
xor
es
mov
into
cmp
ljmp
jle
push
lret
mov
es
ljmp
mov
lods
sbbb
or
in
jae
push
std
push
pop
jbe
pop
and
stos
das
xlat
mov
lret
in
push
enter
mov
and
int
push
sti
in
jmp
ss
push
call
push
mov
pop
xchg
out
sub
pop
push
test
dec
lcall
mov
xor
sarb
int
pop
mov
enterw
iret
daa
stos
flds
mov
int
pop
fcompl
jns
and
stc
pop
fstl
cs
mov
jle
pop
stc
mov
mov
xorb
repnz
call
es
sub
jp
push
inc
ss
dec
roll
enter
jmp
push
adc
add
jl
push
jns
jb
ja
inc
mov
xchg
nop
ret
xchg
stc
pushf
mov
fcoms
adc
add
inc
add
push
push
dec
lret
addb
lcall
cmpsb
and
inc
add
bound
jb
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
bound
jb
inc
ss
mov
push
cli
lret
fisubs
or
inc
cs
adc
push
dec
mov
fsubs
outsl
fs
xchg
jge
loopne
sbb
jge
or
jne
dec
jg
mov
adc
push
lcall
lahf
jbe
hlt
sub
sub
pushf
add
jge
das
inc
push
lahf
loop
fisubrl
cmp
fsubl
inc
pop
dec
pop
push
lods
or
cs
stos
inc
dec
xchg
ret
push
cmovg
sar
mov
fwait
mov
pop
adc
gs
inc
ja
xchg
dec
cltd
xchg
out
inc
shlb
and
sbb
dec
sbb
mov
out
int
decb
hlt
repnz
push
adc
rorb
aad
xlat
jl
in
inc
inc
mov
addr16
flds
push
stos
imul
scas
ljmp
and
jl
pop
cmp
fsubr
les
ds
nop
push
subl
jno
jl
mov
cmp
int3
inc
inc
jbe
jmp
es
sbb
pop
xchg
mov
lea
add
jns
xchg
iret
test
mov
lods
pushf
fwait
sbb
addr16
and
jo
mov
xchg
pop
mov
in
dec
movsb
ds
sar
dec
dec
dec
mov
movsl
xchg
pop
pop
xchg
cmpsb
dec
pushf
fcmovb
pop
movsl
jmp
cmp
or
dec
sub
pop
add
and
jge
adc
fisttps
sbb
fs
cltd
shlb
shrl
push
in
int3
in
push
dec
call
inc
ret
cs
pop
sbb
mov
dec
repz
pop
mov
aas
mov
cli
enter
add
jnp
mov
cs
arpl
int3
ret
adc
test
negl
jl
mov
cwtl
xchg
inc
out
mov
dec
inc
mov
mov
dec
add
pop
and
pop
push
fisttps
ror
scas
mov
nop
sbb
mov
ja
mov
pop
sbb
outsl
or
addb
or
test
mov
ljmp
loopne
sbb
push
movsl
popa
in
pop
subb
add
sahf
pusha
xor
and
rclb
cld
test
pop
pop
setb
add
xchg
sbb
imul
subb
aas
cmp
mov
rolb
xchg
cmp
shlb
mov
jmp
jmp
fwait
aaa
pushf
pop
arpl
and
mov
mov
pop
aaa
cmpsl
add
outsb
mov
cmpsl
add
dec
mov
inc
test
adc
and
les
bound
sbb
rol
cli
dec
insl
rclb
inc
out
push
push
adc
js
push
pop
dec
mov
rcrb
imul
dec
sbb
popf
aam
repnz
test
adc
js
dec
ret
inc
adc
insb
lret
mov
sub
jnp
mov
popa
dec
idivb
iret
sub
sbb
dec
xor
xchg
adcb
scas
xchg
mov
pop
fldcw
push
sbb
test
cmp
stos
sub
dec
outsb
insb
jne
add
adc
sbb
shlb
adc
ja
push
add
pop
xchg
lods
mov
data16
jbe
pushf
xor
stos
scas
pop
push
movsb
and
and
cmp
jbe
dec
jnp
push
fsubp
sub
into
jo
sbb
add
scas
sub
cmpsl
sub
and
imul
std
push
jns
push
outsl
mov
hlt
sti
mov
shlb
cmp
add
cmp
ds
mov
mov
adc
call
xor
int
nop
jle
dec
xor
aam
mov
dec
ror
pushf
loope
shrl
mov
add
jne
std
xchg
jbe
and
int
shl
std
xor
lret
fiaddl
lcall
leave
push
lret
sbb
jo
pop
fistl
aam
mov
call
jo
push
sub
fisttpll
adc
mov
fdivl
outsb
or
xor
pop
mov
cmp
or
jb
scas
rcrb
aas
jle
and
xchg
pop
inc
pop
testl
mov
pop
movsb
bound
adc
mov
stc
mov
stc
lcall
jno
imul
jle
mov
je
fwait
xchg
fdivp
pop
out
sub
pop
xchg
sbb
imul
imul
mov
push
jno
cmc
out
lods
dec
sbb
xchg
and
das
push
je
push
sbb
lahf
ja
ficomps
mov
je
neg
test
movsl
or
push
dec
fsts
cmpsl
adc
cltd
cld
fldl
xchg
push
cmp
notb
and
cmp
jns
pop
pushw
dec
popf
mov
shrl
xchg
mov
xor
les
pop
mov
and
adc
jne
insl
stc
ljmp
pop
cmp
xlat
mov
mov
pop
call
arpl
in
jo
mov
arpl
icebp
fcompl
mov
sahf
jbe
bound
test
cmp
cmc
test
notb
in
pop
add
xchg
out
out
enter
and
ss
cmp
loop
mov
jmp
cltd
inc
mov
xchg
xor
fwait
test
mov
adc
arpl
sub
dec
mov
push
sub
mov
scas
inc
fwait
sti
or
imul
adc
test
ret
lcall
add
or
ret
mov
fcomps
adc
enter
jle
hlt
hlt
mov
lods
data16
lea
int3
add
cmpb
aam
hlt
pop
or
mov
sub
pop
in
mov
mov
push
int3
sub
xchg
ss
jl
mov
jae
push
or
leave
xchg
and
out
hlt
imul
std
pop
cmpsl
sub
mov
test
aaa
lods
pop
leave
cmpb
dec
inc
sbb
pop
and
outsb
sbb
mov
mov
outsb
loop
in
ret
out
cmpsl
loopne,pn
fs
xor
inc
std
jg
pushf
clc
cmpsl
sub
movsb
insb
pop
pusha
bound
sbb
ja
lcall
xchg
cmp
pop
mov
stos
rclb
or
daa
add
mov
jmp
ljmp
push
sahf
decb
push
pushf
xchg
and
cld
std
outsb
das
jecxz
push
sub
mov
pop
adc
xchg
jg
lret
stos
lret
or
lcall
add
xor
cltd
rcll
jnp
or
and
mov
pop
popa
jb
xchg
cmpsl
mov
mov
mov
jge
push
pop
xor
bound
pop
hlt
aad
xor
aad
sarl
mov
mov
pop
add
ficomps
sbbb
add
leave
mov
sub
mov
mov
and
ja
xor
mov
push
out
inc
add
pop
pop
aas
aad
nop
pop
pop
jp
push
testl
pop
sbb
int
out
lahf
push
add
test
dec
and
cmpsl
xor
pop
push
push
mov
test
xchg
dec
lods
xchg
add
xor
mov
test
loopne
call
sti
nop
jp
or
out
psubusb
sbb
sarl
test
jp
pop
jge
inc
or
add
stos
xchg
mov
mov
mov
and
inc
shlb
cmc
adc
and
inc
int3
ftst
test
mov
ret
repz
scas
adc
cmp
test
or
stos
sahf
or
mov
xor
aad
sarl
xorb
pop
fnsave
into
clc
jns
lods
mov
es
cli
je
sub
popf
aad
and
dec
int
push
sub
les
imul
or
adc
repnz
scas
or
pop
andl
pop
fdivl
mov
lret
push
xchg
pop
adc
mov
sbb
scas
std
ret
sub
es
mov
mov
adc
pop
aaa
out
les
mov
jo
push
jl
dec
sahf
push
inc
mov
pushf
and
cmp
mov
xchg
pop
jp
jo
pusha
lds
cmp
add
das
cmp
or
sti
in
test
in
in
mov
and
xchg
pop
test
cmpsl
neg
inc
pop
and
scas
sti
dec
jge
xchg
divb
insb
lcall
mov
out
inc
fcmovnb
mov
out
imul
fimull
mov
jae
mov
testl
cmpl
sub
cs
add
inc
popa
inc
clc
cmp
sbb
fisttps
mov
popf
pop
add
sbb
pop
int
inc
mov
fisubrl
icebp
icebp
stos
push
stc
xchg
push
std
push
or
andl
jp
hlt
inc
xor
rolb
jae
les
addl
out
add
push
xorl
in
stos
inc
xchg
loop
push
jmp
int
mov
stos
fs
pop
shl
movsb
in
mov
mov
add
pop
mov
je
loopne
sbb
inc
push
or
lret
fcmovnu
sbb
ret
aaa
fstpt
fidivrs
pushf
lcall
jae
aaa
div
in
push
scas
adc
pop
lods
fdivrs
or
sub
adc
xor
push
rolb
and
loope
loop,pt
jbe
or
adc
mov
subb
scas
test
shlb
push
pop
xchg
xor
ds
sub
xor
and
test
aad
inc
jg
sbb
inc
mov
dec
mov
inc
pop
stos
jne
cmpsl
lods
in
repz
adc
jge
adc
lods
clc
pop
push
pop
pop
call
pop
stos
imul
sbbb
mov
dec
mov
stc
in
pop
adc
sahf
mov
or
in
inc
push
cmpl
js
je
ja
insb
or
sbb
mov
or
fistpl
cmpsl
dec
or
push
ja
mov
test
xchg
mov
es
imul
hlt
test
lea
nop
inc
mov
xor
rcl
jmp
popf
loopne
fisubs
out
fisttpl
xorl
add
push
xor
repz
jmp
fisubs
pop
cmpsl
movsw
mov
pop
jae
aas
cmp
jl
stos
iret
sbb
xlat
rcrb
mov
sub
sub
mov
cmp
mov
inc
jl
mov
sbb
xor
push
pop
outsl
mov
push
lret
xchg
movsb
fwait
daa
cs
adc
add
lds
cwtl
fmull
clc
push
push
cli
push
cld
sub
push
dec
fcmovnb
lcall
pop
arpl
mov
out
cmpsb
or
pop
inc
push
adc
imul
xor
movsl
sarl
xorb
lods
and
repnz
sub
jne
xor
xor
aaa
mov
mov
cmp
xchg
jbe
imul
idivb
icebp
out
leave
out
into
and
dec
adc
outsb
mov
sub
cwtl
fisttpl
lea
imulb
dec
imul
sarb
mov
lahf
mov
mov
rcrb
mov
icebp
sarl
daa
outsb
cmp
push
lahf
dec
cmpb
mov
aam
inc
xchg
shlb
scas
sbb
push
loopew
push
add
sti
adc
push
mov
sub
lret
push
in
push
les
push
push
dec
clc
cltd
push
inc
cmp
icebp
std
iret
cmp
xor
inc
push
stos
idiv
ss
call
jle
pop
ret
ljmp
or
push
scas
cmpsb
pop
push
push
mov
ret
inc
dec
stos
pushf
xchg
cmp
aam
and
call
push
xor
mov
mov
push
lods
fwait
das
stos
or
xchg
std
or
loop
enter
pop
xor
loopne
lret
out
sbb
int
cmpsb
mov
push
and
mov
inc
cli
push
rcl
xchg
insl
lret
xchg
dec
or
andb
pop
enter
lcall
fs
cltd
sub
pop
pop
push
push
mov
test
test
pop
out
add
fidivl
pop
add
mov
dec
jb
jo
jl
sahf
mov
int
jle
movsl
mov
inc
add
inc
mov
les
mov
push
iret
mov
adc
and
push
and
fldt
dec
dec
add
pushf
jbe
push
jae
nop
into
inc
mov
test
sbb
dec
outsl
int
push
mov
hlt
divl
dec
xchg
jns
adc
ret
push
shr
ljmp
inc
mov
pop
fst
rorb
push
aaa
jl
add
xchg
jns
pop
scas
adc
mov
loop
sub
lea
push
int3
fcmove
in
jp
push
mov
xor
inc
ss
fistl
ror
mov
xchg
lods
or
push
lret
pop
loope
jge
cmp
mov
add
jae
mov
inc
dec
mov
mov
sti
mov
adc
int
testl
fwait
xor
xchg
mov
fldcw
data16
push
decb
cmp
leave
pop
enter
loopne
jb
mov
or
push
mov
push
mov
lods
mov
or
inc
fimuls
jl
and
mov
jp
or
mov
pusha
or
mov
das
mov
fstpt
decb
ds
and
insl
cltd
pop
sub
jle
lret
jge
sub
sbb
jle
fxch
sbb
lods
das
mov
incb
mov
jge
loopne
xor
mov
pop
shll
push
cltd
pop
cmp
popf
mov
icebp
xchg
xor
js
mov
xchg
aaa
pop
xchg
mov
xor
gs
adc
add
pop
jle
imul
adc
xchg
ljmp
insb
jno
cmp
outsl
stos
xchg
scas
add
hlt
pop
sub
inc
pusha
and
ss
jp
pop
cmp
pusha
dec
jbe
divb
lds
dec
dec
mov
sub
pop
mov
sbb
jmp
pushf
xchg
and
and
clc
lret
ds
aad
cs
sti
das
mov
jbe
aad
adc
dec
fiadds
movsb
dec
test
out
xchg
pop
pop
pop
inc
jge
in
pop
es
scas
arpl
jbe
jge
push
mov
xchg
lcall
xor
and
icebp
out
cmc
test
imul
adc
lock
push
sub
dec
or
in
or
push
into
mov
sbb
xor
packuswb
loope
cld
cmpb
add
xchg
mov
dec
lds
in
dec
mov
insl
out
repz
adc
dec
fsubrl
xor
movsb
jmp
xchg
jae
nop
push
add
out
test
mov
jp
jo
mov
mov
mov
mov
into
and
dec
ds
inc
je
lahf
faddl
popf
fsub
jecxz
lods
mov
dec
movsl
icebp
fbstp
sub
xor
aas
cwtl
pop
lds
push
adc
push
pusha
maskmovq
icebp
jle
add
and
or
add
mov
mov
xor
pop
xlat
pop
mov
lret
sti
pop
dec
mov
mov
stos
outsb
icebp
add
lds
testb
dec
inc
sbb
mov
push
int
mov
xchg
jno
adc
xchg
gs
and
xchg
repnz
insb
mov
repz
sbb
repnz
mov
xchg
jno
sub
inc
daa
incb
icebp
pop
pop
ret
repnz
sbb
mov
push
clc
subl
ja
test
adc
push
xchg
jg
and
leave
mov
push
ret
cld
adc
jne
adc
arpl
nop
and
test
imull
xchg
pop
imul
sbb
lcall
xchg
pop
popf
add
fimuls
sarb
push
cmp
std
jp
stos
or
dec
nop
xor
xchg
repz
ftst
pop
scas
mov
popf
xchg
and
xor
pop
mov
xchg
lea
ja
addl
sbb
xchg
call
cs
inc
pop
popa
das
mov
lcall
movsb
je
bound
adcb
pop
mov
jae
adc
divl
clc
dec
mov
nop
and
push
xchg
pop
test
lret
enter
sub
or
leave
dec
cmp
adc
or
fdivp
mov
mov
push
cmc
sti
mov
jb
sbb
cmp
inc
mov
test
push
movsb
cmp
pop
sbb
mov
cmp
pop
dec
shrl
pop
cli
leave
je
jmp
jae
push
pushf
inc
adc
inc
or
arpl
cmp
mov
cwtl
popa
and
xchg
push
out
mov
mov
das
lea
jno
jo
outsl
dec
repnz
je
mov
pop
mov
xor
in
jmp
inc
dec
fstl
pop
pop
jl
jp
loop
outsb
mov
lods
push
mov
inc
out
je
sbb
out
push
push
enter
push
icebp
and
in
push
jg
call
jl
sbb
sbbb
fdivrs
loopne
cltd
cmp
push
movsl
jbe
stc
push
lcall
insb
and
je
dec
aaa
mov
mov
pushf
scas
add
jge
mov
xor
mov
or
ret
add
inc
push
call
lret
jge
das
out
mull
jo
insb
xchg
mov
std
pop
push
sarb
hlt
andb
je
inc
and
xchg
pop
out
jg
popf
lahf
mov
mov
out
mul
xor
xchg
pop
jae
lea
dec
ret
loop
or
pop
mov
inc
imul
popa
fisubrs
xchg
daa
lcall
cld
popa
cmp
adc
rclb
je
pop
adc
cmp
sub
lods
imul
inc
shll
push
xor
ljmp
outsl
xchg
mov
xchg
dec
xlat
push
jae
sbb
pop
dec
and
jnp
push
adc
enter
mov
cmp
test
stos
xor
inc
mov
shrl
dec
push
in
or
jne
and
mov
in
mov
bound
shrb
xacquire
push
cwtl
sbb
out
push
dec
stc
sub
xorb
mov
xchg
aas
inc
pop
xchg
je
inc
rolb
jne
dec
mov
push
add
gs
rcll
pop
jbe
arpl
adcl
das
fnstsw
iret
aad
ja
lcall
imul
jnp
sub
adc
lcall
inc
cmp
add
pop
test
scas
and
icebp
jns
pop
aam
loope
inc
inc
lea
and
xchg
leave
or
add
ljmp
stc
ds
fnstcw
ja
and
jne
push
cmp
bound
pusha
gs
xchg
cmp
sub
cmp
clc
dec
xor
ss
cmp
jp
xor
xchg
movsl
dec
or
stos
cmp
mov
clc
ret
jge
ret
add
cmp
shl
fstps
xchg
into
clc
outsb
mov
push
push
int
mov
mov
xor
fisttpl
cmp
inc
dec
inc
mov
pop
mov
fcmovu
popa
and
sbb
int3
cmpsl
jbe
cs
test
gs
popf
jmp
adc
jo
xor
rclb
cmp
xorb
popa
push
andb
xchg
adc
out
mov
ret
out
inc
pop
xor
js
pop
ss
lret
push
jno
mov
in
out
shlb
imul
negl
push
sbbl
add
inc
scas
sub
adcb
cltd
cltd
push
cmp
arpl
xchg
push
mov
push
in
pop
scas
call
add
dec
sbb
pop
int3
fadds
std
daa
push
mov
sub
sahf
or
test
ret
sbb
and
adc
sub
add
jle
lret
inc
movsl
addb
je
aaa
cmc
sbb
push
popw
in
cmc
arpl
jp
fsub
cltd
test
pop
push
or
sub
push
push
int3
cs
int
adc
sub
test
sbb
mov
lods
pop
outsb
lock
and
int
jl
mov
icebp
adc
xchg
out
aam
pop
shlb
lcall
push
in
lods
add
test
scas
scas
push
shlb
mov
push
cmp
rolb
loop
repnz
mov
cmpsb
and
inc
add
bound
jb
inc
ss
mov
notb
xchg
mov
cmpsb
and
inc
add
bound
jb
inc
ss
mov
mov
cs
cmpsb
and
adc
push
jbe
inc
push
arpl
xchg
xchg
mov
xchg
out
xchg
xacquire
push
cmpsb
adc
adc
leave
lods
fldcw
cmp
sub
sbb
or
sbb
cmp
dec
lods
mov
lahf
mov
stc
ljmp
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
stc
jmp
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
adc
out
mov
mov
pop
cmp
pcmpeqd
pusha
mov
aam
addr16
xchg
mov
bound
je
daa
rcrl
test
outsl
cli
jg
mov
mov
adc
push
jno
pusha
add
mov
add
shlb
cmp
push
gs
lods
mov
adc
lahf
pop
sbb
je
dec
filds
sub
stos
int3
aad
or
js
imul
bound
lds
pusha
fnstcw
es
inc
jl
mov
notb
dec
aam
scas
inc
mov
add
dec
mov
filds
xor
or
in
sub
test
jg
cmc
mov
in
lods
cs
in
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
stc
jmp
dec
push
pop
sub
pop
pusha
or
fistpl
fcmovu
cld
icebp
fcmove
imul
dec
sub
jnp
xor
ffree
fcomp
repnz
lahf
out
lcall
dec
jo
jp
jno
insb
sub
imul
mov
mov
stc
jmp
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
stc
jmp
das
cmp
xchg
stos
pusha
dec
mov
daa
rorb
add
dec
or
in
repz
outsb
xchg
data16
jmp
rorb
stc
dec
cmp
in
sahf
js
jp
cs
mov
dec
add
sub
mov
adc
xchg
and
xor
add
xor
mov
xor
sub
add
stc
fiadds
test
cmp
adc
loop
xchg
lods
push
push
cmp
scas
inc
xchg
pop
xchg
adc
mov
repnz
jge
cwtl
push
aad
in
repz
adc
mov
mov
mov
sbb
dec
jae
dec
cmp
andb
sub
scas
xchg
sbb
xchg
imull
jae
das
add
cwtl
jecxz
mov
cmp
add
pop
loopne
add
ds
movsb
es
sbb
xor
push
push
jmp
lock
movsb
pop
in
les
das
sbb
push
and
adc
dec
insl
push
and
insb
mov
xor
cmp
xchg
cmp
mov
rorl
popa
repz
xor
and
out
fisubrl
imul
je
and
shlb
sub
clc
stos
sbb
sub
cmp
inc
shrb
dec
outsb
pop
rcrb
repz
and
sub
sti
std
sbb
adc
mov
aas
in
fsubr
push
lea
pop
cmp
jns
movsb
xlat
or
addr16
cltd
pop
xor
ficomps
outsl
adc
mov
outsb
scas
mov
sbb
imul
add
mov
scas
ret
jbe
xchg
or
out
jle
inc
arpl
repz
mov
jp
inc
xchg
insl
mov
movsl
popf
ja
adc
scas
call
les
xor
xor
pop
dec
hlt
sub
insl
xor
mov
repnz
add
fcmovu
dec
dec
jns
arpl
sbb
gs
ret
aam
jge
xor
jp
shr
iret
xchg
test
lods
das
mov
mov
and
cmp
lahf
loope
insb
dec
inc
sbb
dec
or
xor
sbb
addr16
xor
cmpsl
xor
jo
test
inc
adc
das
je
cwtl
out
aaa
jno
call
mov
pop
fstps
lods
sarb
daa
ljmp
sub
mov
push
dec
mov
xor
pop
xchg
enter
jbe
stos
sbb
pop
jge
decb
cmp
loopne
mov
jo
push
fiaddl
fwait
aaa
cmp
imulb
int3
cmpsb
shrl
cmp
adc
dec
mov
xchg
xchg
mov
aas
adc
stos
in
addr16
mov
outsb
call
call
pop
arpl
mov
lods
outsb
pusha
clc
enter
leave
ret
dec
out
repnz
and
das
lock
ret
nop
push
xlat
inc
dec
jecxz
and
mov
jo
fcomps
and
loope
fwait
addb
add
mov
mulb
lcall
add
jno
adc
arpl
jle
inc
mov
mov
call
push
mov
dec
mov
adc
ret
and
dec
aam
sarb
leave
sti
fisttpll
push
orl
mov
mov
repnz
outsl
stos
add
mov
adc
jp
mov
mov
push
pop
cs
push
jbe
mov
aaa
aas
mov
lcall
and
ljmp
addr16
subb
ja
push
sbb
jb
loopne
mov
cltd
mov
push
ret
cmp
test
lods
push
inc
push
add
repnz
out
mov
fiaddl
push
mov
int
push
dec
in
dec
daa
lods
jne
mov
hlt
push
sbb
mov
aam
in
stos
or
sbb
call
push
sbbb
mov
pop
scas
mov
and
or
xchg
aad
ss
xchg
ljmp
push
push
jb
stc
pushf
call
cwtl
stos
adc
call
pop
test
popa
jnp
jecxz
lcall
pop
xchg
xchg
cs
gs
xor
stos
xchg
and
push
add
xchg
into
and
pop
mov
test
cmp
icebp
ja
lahf
pop
enter
mov
mov
mov
int
movsb
pop
aad
fwait
xchg
mov
ja
add
push
daa
in
int
ljmp
nop
push
push
insl
outsl
aad
ret
adc
lret
sub
test
xchg
or
dec
lret
repz
pushf
push
fnstsw
fistpl
ds
popa
nop
cld
inc
and
repz
cld
fstps
or
inc
xchg
in
push
int3
inc
sub
call
jbe
pop
imul
xor
mov
dec
jbe
mov
loop
mov
mov
xor
cs
mov
lcall
movsb
jge
mov
push
clc
jno
insb
ljmp
pop
mov
loopne
clc
stos
xor
cld
repz
in
cs
sub
jmp
fcmove
je
aad
aas
mov
dec
test
call
fisubl
mov
push
adc
filds
aad
pop
inc
dec
cmp
shrl
mov
fsts
dec
jl
adc
fsubrl
inc
inc
fldt
mov
xor
or
cmpsb
insl
push
in
negl
sarb
xchg
dec
ds
je
lea
sub
loop
sarb
nop
test
inc
or
out
gs
pop
sub
call
cltd
jno
mov
dec
shll
or
iret
loopne
daa
lds
cmp
ja
xchg
dec
lea
dec
in
cli
jne
repz
out
add
bnd
and
dec
fs
test
insl
ljmp
xlat
jns
adc
hlt
out
inc
fidivl
out
add
test
ret
cli
jo
mov
pop
jp
pop
xor
push
push
sti
mov
and
sahf
push
outsl
leave
or
add
jp
mov
pop
jmp
adc
sbb
in
dec
mov
insl
ss
fidivl
xor
push
or
in
sbb
xor
mov
xchg
sub
nop
pop
mov
adc
mov
aam
jg
add
scas
inc
sbbl
mov
adc
cmp
inc
dec
movsl
cmp
outsl
imul
dec
pop
sbb
rorl
or
or
xchg
mov
xor
fidivrl
iret
movsb
inc
and
and
cld
mov
xchg
leave
adcb
pushl
mov
jmp
les
repnz
lret
cmp
pop
repz
and
inc
pop
mov
mov
pop
aaa
test
cs
flds
and
in
sti
call
adc
sbb
arpl
fdivr
jmp
or
js
filds
add
inc
mov
ja
je
sbb
or
outsb
aas
movsb
outsl
mov
movsb
call
nop
pop
scas
stos
inc
dec
test
aad
stos
inc
inc
inc
pop
and
test
daa
repnz
sbb
aas
cmp
js
dec
xchg
xor
lods
fisubl
fidivrs
stc
es
fcom
mov
cmp
shl
repz
fwait
xchg
push
mov
insb
cmp
adc
scas
pop
add
jnp
mov
jmp
xor
pop
and
push
stos
add
iret
rolb
repnz
fmull
push
push
push
push
mov
aas
loope
in
or
data16
push
xor
test
idivl
xor
xchg
mov
aad
add
or
xlat
push
cmpsb
jge
mov
aas
push
andb
lods
jmp
and
xchg
jbe
adc
inc
gs
add
daa
mov
loope
inc
daa
test
fsubs
sub
pop
lcall
fisttpl
xchg
movsb
int
adc
dec
inc
daa
mov
fwait
push
out
mov
cmpsl
sub
jno
out
xor
jge
sub
dec
xor
push
mov
xor
adc
jns
sbb
aam
push
fs
jns
mov
pop
mov
adc
pop
push
sub
sub
sub
fdivs
inc
insb
pop
ljmp
lret
dec
cli
mov
jp
cmp
cmp
mov
outsb
scas
and
js
test
mov
mov
push
mull
and
pop
xchg
les
out
or
add
push
sub
pop
stos
rcl
push
imul
fidivrl
pop
push
jo
jg
movsl
pusha
xchg
sub
imul
sub
push
jle
bound
adc
lahf
add
loop
sbbb
imul
push
pop
or
int
rolb
push
repz
jmp
in
or
scas
cmc
lcall
ss
mov
jbe
adc
push
in
fsubrl
pop
mov
sbb
ss
mov
adc
dec
mov
push
arpl
scas
mov
pop
mov
or
ss
shlb
aas
adc
push
popa
out
cmpsl
or
add
lock
rcll
fistpl
loopne
jbe
sbb
iret
adc
and
outsl
or
xor
mov
bound
sti
sub
aam
popa
xlat
mov
daa
ret
sub
in
iret
add
in
jo
cmp
ds
aad
insl
jmp
and
jns
imulb
cs
lods
push
inc
sbb
mov
sbb
shrl
in
add
jno
mov
xchg
fildll
mov
jg
inc
addl
aas
sbb
inc
inc
out
ds
dec
sub
adc
push
or
clc
add
xor
aad
rorl
inc
test
mov
xchg
xlat
aas
pushf
pop
jg
fwait
xor
xchg
int
inc
int
xor
cld
scas
loopne
fisubs
shr
in
jecxz
shll
cltd
cmpsb
xchg
pop
dec
jmp
enter
sbb
and
dec
mov
xchg
cli
and
jecxz
mov
fwait
jle
flds
insb
adc
mov
data16
xor
mov
sbb
pop
fmul
fdivrl
mov
sbb
repnz
pop
add
jge
push
xchg
jl
jg
fnstenv
mov
mov
lods
xor
or
or
mov
cmp
push
in
outsb
in
int3
cmpsl
push
adc
cmp
aad
add
psrlw
cmp
rol
adc
mov
sbb
js
dec
pop
cmp
in
cmp
xor
xor
lret
jl
out
nop
inc
ret
cmpsl
shl
and
es
fildl
inc
rcrb
arpl
gs
sti
push
mov
mov
test
push
mov
scas
test
push
xor
mov
inc
jp
outsb
xchg
mov
mov
pop
mov
push
cltd
add
repz
divb
shlb
js
cmc
mov
add
pop
jg
loop
xchg
fwait
scas
and
ret
je
pushf
enter
push
push
int
adc
sbb
mov
pop
negl
cmp
fdivrp
or
xchg
xor
xchg
fildl
or
sub
jmp
cmp
cmp
mov
mov
xor
xchg
sbb
lcall
dec
mov
and
inc
adc
arpl
out
mov
jbe
sbb
xor
loopne
cmpsb
jno
sub
lcall
fs
cmp
or
mov
and
lods
add
jge
mov
mov
pop
ljmp
arpl
mov
push
rorb
cmp
mov
mov
mov
ret
adc
jns
les
jns
and
inc
push
clc
cmp
adc
movsl
std
adc
pop
mov
shll
mov
xor
cmp
cs
inc
and
call
popf
fidivs
ljmp
pop
xchg
sbb
jno
mov
push
repnz
jmp
test
fistpll
stos
jmp
xor
dec
add
xor
cmp
push
jbe
imul
jno
clc
inc
movsb
fldcw
into
mov
fcoml
cld
inc
pusha
movsb
adcb
cmp
or
lahf
pushf
fstpl
or
mov
les
fcompl
aam
hlt
mov
outsl
mov
fstl
mov
mov
test
das
or
jmp
or
ret
in
and
js
icebp
inc
push
mov
fdivrp
lahf
push
and
loopne
jecxz
or
jae
cmc
xchg
test
lods
sub
clc
call
push
and
pop
cmp
adc
out
inc
into
ja
lret
cmc
out
or
inc
enter
jo
shr
popf
dec
daa
jnp
add
inc
das
cmc
sub
ja
mov
mov
fwait
scas
pop
or
sbb
sub
sbb
scas
leave
fst
pop
shlb
sub
cltd
mov
cpuid
mov
jb
xchg
xchg
push
inc
add
add
push
lcall
sbb
pop
xchg
out
or
sbb
xor
stos
xlat
adc
xchg
xchg
lock
pop
dec
into
push
push
sub
int
push
xchg
jae
outsl
out
dec
pop
pop
mov
out
add
ja
pop
es
jle
std
cli
test
inc
addr16
sub
aas
sub
cmpb
push
popa
cmpb
shl
sbb
cwtl
cs
ljmp
xlat
push
xor
inc
int3
in
je
push
lret
shll
mov
jo
push
decb
test
jae
xlat
jecxz
in
icebp
fnstenv
jp
xchg
ljmp
mov
push
dec
sbb
daa
mov
insl
jns
jecxz
inc
adc
or
dec
shl
and
xchg
cltd
pminub
fsub
cmpsl
push
or
jo
pop
imul
sti
int3
test
xchg
lods
sbb
mov
xchg
outsl
rcll
xor
push
cmp
test
cli
xchg
jmp
cmp
or
loopne
add
adc
push
cmpsl
gs
cmpsb
aaa
mov
je
sbb
and
fidivrl
add
test
xchg
mov
pop
mov
ret
hlt
mov
lahf
add
mov
mov
push
popa
fisubrl
xlat
sbb
mov
sar
call
xor
add
mov
mov
push
pusha
mov
popa
out
bound
out
imul
loopne
stc
ficoml
xor
es
in
clc
ret
pop
lea
aam
aam
inc
in
rolb
and
mov
mov
sbb
inc
xadd
pop
mov
mov
outsl
aad
xor
xchg
ljmp
mov
lock
std
stc
mov
das
xchg
outsl
xor
adc
and
or
jge
pop
mov
scas
dec
aad
es
mov
push
sub
cwtl
divb
sti
cmc
and
sbb
movsb
push
inc
fisttps
stos
rcll
push
jle
into
add
nop
mov
hlt
push
loopne
inc
jmp
pop
dec
lods
iret
inc
dec
mov
push
test
out
mov
mov
or
cwtl
sbb
stc
in
fcoml
popf
push
stc
cmp
or
enter
dec
js
adc
jns
ret
clc
int3
sub
cmp
mov
lds
sbb
movb
add
mov
imul
mov
sti
jns
repz
pop
je
scas
cmp
xor
popf
add
mov
jp
jmp
fdivrs
xchg
ret
cmp
fstps
mov
fnsave
cmp
push
idivb
data16
imul
loop
mov
mov
jge
cmp
adc
pop
adc
movsb
jle
pop
imul
sub
fcom
mov
shl
cwtl
jne
inc
sarl
add
je
stc
popa
fdivrl
inc
imul
stos
push
adc
cmpsl
fsubrs
lods
scas
mov
mov
ret
int3
stos
stos
in
cmp
test
adc
dec
cmp
sub
inc
fs
in
outsb
fisubrl
jbe
das
in
bnd
test
mov
imul
jns,pn
fdivp
pop
sbbl
icebp
pop
pop
imul
adc
dec
and
inc
data16
xor
daa
ret
mov
adc
add
xchg
data16
mov
push
push
out
clc
dec
aad
dec
add
cmp
imull
dec
btc
popa
repz
mov
mov
add
and
add
fidivrs
cs
xor
pop
adc
mov
xor
dec
inc
lds
sub
xchg
pop
imul
dec
repnz
sub
inc
scas
cwtl
push
test
outsb
test
mov
int
insl
mov
mov
out
mov
fistpll
movsl
test
movsl
xchg
cltd
push
pop
int
jne
xor
lahf
movsb
xor
movsb
and
es
mov
jno
xchg
gs
int
aam
cmc
addr16
mov
dec
mov
scas
mov
loope
pop
pop
sub
aad
repz
xchg
inc
shlb
std
push
filds
jle
mov
insb
out
and
or
push
sbb
js
ja
push
push
in
and
adc
pmaddwd
push
and
loope
rcll
insb
daa
mov
cs
int
mov
push
add
xchg
ret
fdivl
fucomi
and
cmp
loopne
insb
in
stos
xchg
cmp
test
fdiv
ja
add
insl
pop
nop
sahf
inc
ja
sub
int
popf
jecxz
adc
cmpsb
jl
std
jp
aam
movsb
xor
mov
push
jne
mov
fsub
call
lahf
or
insb
push
xchg
pop
div
adc
dec
repz
rorb
and
inc
je
cmp
mov
pop
negb
adc
adc
cltd
outsb
mov
or
mov
jg
mov
ss
mov
add
xor
jo
int3
sub
jp
push
jne
out
add
mov
xor
in
adc
xchg
mov
and
fsubl
xchg
xor
and
mov
xchg
and
adc
arpl
setp
xor
inc
xor
or
mov
iret
dec
pop
add
cmpsl
cltd
dec
aas
mov
and
xor
mov
imul
test
jne
popa
pop
mov
ss
loope
push
fists
fabs
push
pusha
dec
and
mov
gs
stos
test
mov
rcrb
ljmp
repnz
pop
add
jle
pusha
insl
stos
out
jg
sbb
lea
mulb
xchg
nop
pop
imul
mov
xchg
cmc
scas
fstl
jmp
aaa
xor
and
xchg
sub
or
jecxz
jp
lahf
cmpsb
mov
jno
in
mov
ror
xchg
aad
or
negl
dec
stc
dec
dec
enter
xorb
mov
inc
sub
std
sbb
fs
shlb
dec
adc
mov
hlt
test
stos
jb
cmp
xchg
fadds
mov
repnz
in
lret
xchg
sbb
jg
sub
jo
mov
mov
mov
adc
cld
daa
adc
subl
loopne
adc
pop
sbb
mov
add
sti
adc
pop
add
aad
sub
enter
push
push
mov
les
xor
dec
adc
add
adc
icebp
leave
push
test
add
dec
jnp
inc
gs
xor
loop
inc
call
loope
sarb
mov
xor
add
mov
iret
mov
xor
and
or
scas
cs
loopne
push
pop
mov
xchg
inc
jb
add
fwait
xchg
pop
add
cmp
ret
push
dec
cmpl
test
aad
mov
sub
and
lcall
ss
jbe
mov
jns
movsl
test
pop
pop
cmp
aam
inc
in
sub
adc
sbb
out
negb
orl
mov
cmp
scas
push
test
xor
push
and
repz
adcb
pusha
and
stc
aad
pop
jb
sbb
out
pop
and
iret
and
in
pop
lods
mov
jae
mov
xlat
shll
addr16
sbb
insl
jne
xor
in
int3
lea
ret
popa
and
mov
inc
pop
push
scas
enter
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
stc
jmp
das
cmp
sub
sbb
or
jg
dec
pop
pop
dec
scas
mov
lahf
mov
stc
jmp
das
cmp
test
outsl
jns
jmp
scas
cmp
mov
stc
jmp
das
cmp
sub
sbb
or
jg
iret
pop
fisttps
mov
lahf
cwtl
jno
push
aaa
es
ss
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
sbb
dec
scas
xor
dec
cmp
sub
mov
outsl
jmp
lret
mov
sbb
push
pop
int
sub
fwait
add
pop
fimull
movsb
cmp
in
cmc
push
pop
int
and
push
mov
jne
jge
add
aam
ret
dec
sti
outsl
scas
shr
sbb
or
cmp
push
xchg
rcll
jae
lahf
test
push
cmp
jo
xchg
push
out
rcrb
mov
gs
sub
bound
ljmp
imul
pushf
xorb
xchg
pop
push
dec
push
mov
pop
pop
add
push
push
int3
stos
mov
sub
sub
sub
or
scas
dec
lret
and
adc
insl
pop
add
cmc
test
inc
jmp
sbb
std
mov
mov
sub
dec
cmp
movsb
jb
add
vcmpsd
jne
jmp
mov
je
mov
popf
sbb
push
pop
aam
and
xor
mov
jne
inc
fimull
sarl
enter
stc
dec
mov
int
cmp
leave
imul
das
test
scas
rclb
inc
repnz
std
imul
fisttps
sbb
lahf
push
jl
mov
sarl
in
mov
in
push
pop
int
cmp
lcall
pop
fimull
mov
sbb
push
pop
int
cmp
lcall
pop
fimull
mov
jne
int
or
icebp
call
cmp
mov
sub
add
aaa
lods
ljmp
mov
push
adc
xlat
pop
adc
mov
clc
sbb
add
push
inc
test
mov
xchg
leave
dec
add
loop
shl
cmp
and
jne
int
stos
and
sbbl
inc
pushf
inc
cmc
pusha
mov
aaa
dec
loope
hlt
push
adc
loop
repz
inc
inc
ds
shrl
push
call
xchg
mov
ret
insl
mov
xchg
and
xchg
cli
and
sbb
andb
sub
ret
dec
ljmp
aad
into
out
mov
leave
jp
pop
jbe
adc
or
pop
adc
adcb
add
mov
mov
pop
add
inc
fsubrp
shrb
cltd
mov
xchg
jne
pop
clc
xchg
test
cmp
dec
lods
push
fmull
sub
rcrb
and
shrb
adc
jns
fs
pop
jmp
ja
hlt
xorl
push
jo
nop
in
inc
xor
pusha
push
inc
icebp
stos
lods
aam
mov
sub
scas
loop
cli
jne
pop
lods
popf
mov
jmp
mov
addl
inc
call
out
mov
aaa
repnz
test
jno
pop
xchg
dec
inc
fisubrs
push
ljmp
add
test
sti
rolb
mov
outsl
std
sub
test
popf
test
popa
cmp
or
mov
adc
lret
leave
cld
aam
movb
pusha
xor
nop
hlt
xchg
mov
test
xlat
pop
adc
popa
leave
mov
bound
xchg
lds
push
movsb
test
mov
adc
in
mov
sti
lcall
in
push
daa
stos
sbb
add
xchg
xchg
fldcw
push
pop
pop
inc
fisttpl
addr16
fcompl
pop
dec
lea
sahf
enter
mov
ljmp
in
loope
hlt
inc
jne
pop
add
xchg
loopne
jo
xchg
stos
dec
test
and
inc
in
mov
xchg
or
lds
inc
or
and
sbb
sarl
clc
pushf
and
movsl
out
fucomp
or
nop
sbb
mov
popa
lock
mov
clc
loop
xchg
addb
scas
shlb
leave
add
pop
and
and
into
cmpsb
data16
sbb
setp
xchg
xor
push
pop
cli
push
andb
and
jmp
inc
inc
hlt
dec
ret
xchg
mov
add
je
movsb
or
pop
cltd
pop
push
jo
sub
ja
adc
pop
andb
dec
xchg
shlb
lods
insl
popa
hlt
sub
or
negb
rorl
jns
out
mov
add
testl
sti
clc
jne
cli
out
push
mov
xor
push
lock
cs
cs
dec
cmp
ljmp
jns
cmp
dec
fisubl
shl
mov
sbb
jne
adcl
jno
and
adc
lcall
jle
imul
test
ljmp
or
mov
bound
popa
mov
mov
fimuls
mov
arpl
lock
push
js
lds
and
push
and
jae
cld
shll
add
jo
xchg
add
lret
repnz
and
xor
lret
push
mov
xchg
out
sub
gs
js
loopne
inc
rolb
xor
test
ret
or
aam
xchg
inc
push
rol
inc
xor
add
push
enter
sub
jo
loopne
mov
xchg
and
test
insb
int3
mov
fwait
lcall
and
xchg
mov
and
enter
out
or
mov
js
cmp
repz
das
idivl
mov
xchg
mov
mov
andb
in
fstpt
cltd
jecxz
jae
sub
fisttpl
fldenv
adc
jb
leave
inc
push
xor
enter
pop
cmovp
fiaddl
enter
pop
xor
sbb
ret
mov
push
ja
push
jns
loope
dec
lods
mov
xchg
in
push
cmpsb
cmpsb
sub
pushf
adc
test
cmpsl
lods
mov
dec
lods
sub
pop
clc
adc
xchg
mov
loopne
dec
outsb
xlat
fdivr
bound
fistpl
mulb
lea
movsb
fcmovnb
jnp
notb
test
push
jb
pushf
dec
lret
mov
jl
and
insl
inc
cmc
and
jb
dec
pop
sti
mov
or
pop
jmp
fidivrl
pop
aas
mov
nop
rcrl
mov
inc
sarb
dec
int3
leave
push
fnstenv
inc
aas
and
pop
orb
loope
or
jp
adc
sarl
dec
mov
out
lock
push
cmc
and
gs
inc
and
fwait
xchg
data16
mov
xlat
mov
inc
xchg
inc
out
inc
sbb
inc
xor
add
fstpt
and
iret
add
mov
cmp
pop
cmp
lock
into
jnp
push
mov
cmc
ja
jmp
pop
shrb
cs
dec
repz
ds
sub
add
ss
mov
jecxz
dec
cmp
fdivr
push
push
push
add
sub
imul
stc
dec
and
mov
mov
mov
addb
xchg
pusha
cmp
dec
mov
clc
mov
adc
aaa
mov
out
sbb
mov
jb
xor
cmpsl
data16
ja
in
sbb
fistps
test
bound
shl
pop
cwtl
add
mov
add
inc
xlat
inc
imul
and
out
push
cmp
sbb
and
loop
stos
cld
aam
cmp
mov
fiadds
les
mov
cld
pop
jb
jne
xor
xchg
shlb
aas
or
jne
inc
adc
push
jno
imul
push
or
xor
sbb
mov
mov
dec
jp
cmc
out
jae
pop
push
xchg
clc
sub
or
xlat
jge
add
sbb
jbe
dec
push
cmp
push
in
sbb
add
lock
je
out
mov
cli
mov
xchg
icebp
mov
aam
notb
mov
sbb
mov
aaa
mov
popa
dec
xchg
call
in
xor
jl
mov
loopne
clc
nop
adc
mov
and
and
lret
std
xor
inc
mov
dec
aaa
popa
cmpsl
rcrb
cmp
jmp
bound
ljmp
pusha
inc
rolb
inc
jno
leave
jae
stos
mov
push
jmp
and
and
push
loop
movl
and
dec
movsl
mov
cs
jae
mov
pop
inc
xlat
push
pop
int3
int
mov
ss
addr16
mov
inc
sbb
aad
mov
pusha
es
xchg
and
push
out
dec
js
inc
leave
das
xlat
nop
stos
mov
rcl
daa
lods
pop
sahf
lret
jb
push
idivl
inc
outsb
fwait
imull
sahf
scas
adc
iret
mov
divl
sub
aas
xchg
lods
sub
icebp
jmp
aad
test
mov
mov
mov
push
push
add
loopne
lods
sub
mov
movsb
into
fistps
xor
cltd
sbb
xchg
mov
sbb
arpl
sar
loope
rorb
idivl
cmpsl
iret
daa
xchg
mov
clc
xchg
inc
cmp
nop
mov
fdivr
pop
repnz
mov
mov
ret
rcrl
lret
lods
sahf
jnp
lcall
mov
imul
push
pop
push
jbe
mov
int3
push
arpl
xchg
das
inc
gs
lcall
push
data16
mov
lcall
jle
and
es
notl
int
push
cmc
cwtl
push
mov
jmp
ss
lahf
data16
das
data16
pop
outsb
loopne
or
mov
shrl
xchg
adc
into
mov
lock
push
dec
lret
mov
insl
sbbb
cmpsb
xor
shlb
dec
xchg
and
sub
inc
cli
mov
sbb
orl
divb
xlat
lahf
nop
fs
jo
add
lods
mov
push
dec
mov
fadd
fldl
dec
rcr
stos
jno
movsl
mov
mov
jne
rorl
cwtl
fildll
aad
cmpsl
ret
je
std
fidivl
sbb
in
imul
or
mov
pop
sahf
stos
aas
pop
les
mov
arpl
pop
or
xchg
iret
jb
ja
adcb
imul
xchg
lock
mov
adc
mov
daa
dec
xchg
mov
les
lahf
inc
jno
mov
inc
enter
jl
adc
dec
adc
mov
push
shll
xchg
push
in
xchg
into
std
loope
push
idivl
pop
mov
cmp
inc
mov
jle
bnd
arpl
lea
shufps
popa
out
sub
clc
mov
nop
mov
mov
add
dec
jge
jge
call
mov
adc
xchg
fwait
mov
stos
mov
into
lods
ljmp
fstpl
cmpsl
pop
sub
pop
pop
loopne
aam
mov
je
js
mov
mov
icebp
ret
into
cmc
push
mov
lahf
sub
jb
mull
pusha
jno
shll
mov
pushl
out
ja
into
lea
push
pop
dec
or
int3
lods
sbb
fwait
out
pop
ljmp
mov
test
xor
faddl
dec
hlt
aas
xchg
imul
mov
jle
enter
sti
call
mov
xchg
pmuludq
mull
lret
jg
pop
fs
push
sahf
sub
leave
sbbl
jg
sahf
xor
adc
mov
or
das
pop
inc
ljmp
and
cmc
sbb
push
out
mov
jns
inc
sub
mov
xor
cli
cmp
sbb
xor
arpl
loope
roll
jb
data16
mov
repz
int
shll
xor
cmp
test
xchg
inc
rcl
sbb
aam
and
andb
lahf
loopne
testl
or
mov
sub
adc
push
movsb
mov
ja
movsb
push
add
sub
into
or
pop
push
sarl
fwait
mov
loop
mov
sar
mov
mov
dec
scas
mov
aaa
mov
mov
mov
jle
or
mov
xchg
int3
push
dec
mov
test
mov
je
cmpsb
clc
aam
scas
add
mov
insb
jbe
xlat
sub
and
mov
add
jecxz
push
xchg
movsl
add
insl
icebp
scas
xchg
xor
js
pop
lds
je
aaa
xor
mov
push
out
inc
jbe
lods
mov
test
sbb
and
mov
xchg
push
pop
cmp
inc
cmpsl
jg
jb
mov
push
jl
test
inc
les
jmp
fsubrp
jae
add
xchg
fwait
call
xor
mov
imul
jnp
lret
push
jp
loope
sbb
outsb
xlat
std
cli
loopne
std
mov
cmc
incb
mov
movsl
and
or
aas
xor
fsubrs
jne
inc
cs
imul
call
xchg
add
or
jge
sbb
cwtl
popf
add
je
fidivrl
mov
mov
les
shl
lret
cmp
outsb
lret
push
mov
loop
jmp
fiadds
fdivl
xchg
scas
cmp
nop
jl
insl
sti
push
lret
lret
cs
mov
inc
push
fbstp
inc
cld
mov
xor
sarb
faddl
popf
xchg
cmc
lods
pop
ret
subb
enter
or
lahf
inc
es
jge
jno
pop
scas
adcl
cmpsb
xchg
cli
xchg
add
pop
testl
jmp
mov
lret
das
and
adc
in
dec
out
data16
xchg
xor
loopne
mov
sti
out
adcl
hlt
cmp
inc
xchg
add
xor
adc
jbe
stos
jne
cmp
sbb
stos
mov
cmp
jo
lret
jb
jno
xchg
sbb
fwait
loope
sbb
push
repz
scas
mov
fcomp
fs
fldt
and
arpl
les
or
iret
sub
imul
lea
out
jo
popf
ficoml
adc
pop
xchg
orl
stos
push
or
leave
mov
push
dec
dec
mov
pop
call
adc
ret
mov
push
mov
ja
cmp
ret
filds
rorb
mov
push
xchg
pop
negl
lods
sbb
mov
jb
xor
rcr
push
adc
in
or
mov
imul
inc
fprem1
push
imul
into
pushl
jbe
sub
sbb
insb
lret
cmp
mov
xor
adc
insl
dec
adc
xchg
imul
mov
push
lods
adc
sub
lods
push
jp
dec
shrb
mov
clc
jle
loope
add
nop
mov
aas
lds
cmpsl
xor
call
mov
cmpsb
dec
dec
dec
pop
leave
aad
jg
mov
cmpsb
dec
sbb
cmc
xchg
fmuls
adc
pusha
sub
addr16
or
sbb
add
add
ret
cmp
hlt
psubq
pop
in
push
mov
das
orl
adc
xchg
test
out
mov
addb
lods
loop
push
aaa
sbb
mov
outsl
pop
xor
int3
mov
pop
daa
insl
les
xchg
andl
inc
mov
daa
sub
flds
inc
andps
dec
je
inc
cld
je
inc
mov
pushf
and
sub
jae
cmpb
sbb
jmp
test
xchg
test
inc
dec
or
icebp
int3
fisubrl
test
xchg
repz
bswap
icebp
sub
fidivrs
mov
call
insl
movsb
test
daa
es
mov
cmpsb
movsl
sub
push
pusha
nop
sub
add
jecxz,pt
std
pop
xorl
mul
or
repz
and
fidivrl
sbbb
inc
add
push
push
addr16
push
xor
into
pop
or
lea
dec
jge
or
stos
and
push
rcll
xchg
push
jmp
hlt
lods
sbb
push
sub
jne
roll
adc
in
jno
movsl
inc
mov
daa
jg
push
push
sbb
mov
daa
loop
jmp
sti
movsl
cs
pusha
sub
jnp
test
imul
adc
lret
adc
sub
push
mov
and
sar
and
daa
pop
or
ja
fldl
mov
cmp
dec
xchg
pop
sub
jne
sub
mov
push
outsb
call
in
pop
stos
sbb
addr16
mov
push
cmp
mov
or
mov
dec
and
testl
jnp
jnp
nop
neg
pop
movsb
adc
inc
clc
sbb
arpl
xchg
in
lock
vpcmpeqd
adc
lods
daa
int3
or
rcr
push
in
mov
lock
sbb
push
push
inc
xor
gs
mov
test
cmp
loopne
sub
stc
mov
nop
mov
mov
fstps
mov
std
sub
lret
adc
jmp
into
fsubl
test
mov
add
jbe
out
pusha
add
mov
pop
push
xchg
addb
out
in
pushf
pusha
jp
test
lea
sub
push
loope
mov
fwait
dec
int3
mov
jbe
icebp
mov
push
lock
lea
sbbl
sub
outsb
mov
cli
cmp
add
xchg
cltd
or
test
das
out
cmp
imulb
push
jns
mov
add
leave
aas
sub
mov
les
mov
xor
push
fcmovnb
fucomi
ja
xchg
inc
sbb
mov
pmulhuw
sub
lea
mov
movsl
lret
cs
and
test
pop
fwait
pop
xchg
in
cmp
inc
fsubs
and
mov
sbb
das
mov
push
popa
mov
push
popf
pop
push
je
cwtl
stos
pop
cmpsl
ja
pop
and
dec
mov
and
sub
mov
cmpb
sub
push
lock
lds
lea
sbb
xchg
xor
mov
sub
nop
insb
lret
and
jge
loop
inc
mov
mov
scas
aas
fstpl
lcall
add
lahf
std
int3
aaa
adcb
xchg
jmp
outsl
or
enter
out
push
xor
stos
mov
scas
ljmp
in
pop
shlb
pop
sbb
adc
push
cld
sbb
bound
push
jbe
mov
adc
push
or
jo
inc
icebp
daa
movsb
rcr
int3
loope
cmp
rcl
cltd
mov
adc
xchg
jns
add
div
sbb
push
mov
and
xor
adc
pop
rolb
cwtl
movsl
pop
aaa
dec
mov
clc
mov
mov
add
dec
jnp
fdivrs
push
or
pop
les
sub
mov
mov
fs
sub
xchg
insb
das
rolb
in
in
jl
sbb
push
loop
out
stos
pop
pop
repnz
leave
pop
xor
leave
jb
sbb
jno
adc
push
xchg
std
push
adc
incb
mov
loop
jecxz
push
les
push
mov
cwtl
jae
sub
adc
test
je
adc
adc
pop
aad
mov
mov
sub
lods
pusha
inc
std
iret
ja
outsb
or
sbb
js
mov
jae
ja
dec
pop
adc
leave
push
shl
rcrb
js
jo
jne
adc
cmp
popf
stos
cmp
adc
sbb
add
sub
jle
pop
mov
jne
popa
repz
pop
leave
imul
sub
fs
shl
mov
andl
jae
push
jg
xor
push
pop
std
loope
or
ret
adc
add
jl
ficomps
sub
sbb
lret
fistps
aaa
jne
fs
imul
push
bound
mov
scas
sbb
mov
pop
inc
ret
mov
cs
mov
cld
out
out
mov
imul
cmp
and
rcrb
cli
repnz
aam
and
jmp
out
sub
pop
push
ds
cli
add
ficomps
out
movsl
mov
pusha
insb
mov
dec
repz
push
and
mov
pop
imul
insl
js
enter
mov
mov
jmp
in
in
add
dec
rcrb
push
xor
repz
xor
xchg
xor
and
int3
mov
inc
jbe
repnz
repz
stos
mov
enter
dec
inc
clc
insl
add
stos
pop
dec
mov
icebp
and
pusha
xlat
stc
jmp
cli
sbb
fidivrs
xor
subb
scas
fs
jns
lcall
dec
add
aas
mov
cs
out
inc
fucomip
stos
cmc
mov
lods
shlb
dec
fldenv
adc
push
ds
or
dec
mov
sbb
mov
adc
jl
jg
in
icebp
inc
cmp
fcomip
sub
jle
push
nop
test
inc
cmovle
xchg
sbb
jae
mov
hlt
push
mov
push
scas
jns
jbe
sahf
push
shll
mov
cwtl
push
repz
xchg
pop
repz
cwtl
dec
mov
incb
cmp
lock
jbe
std
repnz
stc
les
into
cmpsl
pop
sbb
adcl
ljmp
aaa
xor
or
push
mov
inc
js
fildll
cmp
jae
xor
je
mov
dec
clc
xchg
push
pushf
cmp
daa
loop
pop
jl
or
and
xlat
arpl
sbb
inc
sub
frstor
push
jo
mov
test
jb
movsl
push
test
andb
jae
cmc
or
das
scas
pop
fnstsw
jns
jge
les
and
fisttpl
dec
nop
inc
aad
hlt
xor
pop
jae
jecxz
or
add
mov
ret
in
mov
sub
or
popa
or
sahf
mov
std
and
ljmp
inc
test
xor
sbb
in
jmp
in
cmp
popf
inc
xor
dec
iret
and
and
out
sbb
jecxz
push
clc
sub
dec
pop
dec
or
fidivrl
sub
jp
push
pop
int
cmp
lcall
pop
fimull
mov
sbb
push
pop
int
cmp
lcall
pop
fimull
mov
sbb
push
pop
int
cmp
lcall
pop
fimull
mov
sbb
push
pop
dec
mov
mov
or
adc
cmp
mov
pop
push
or
pop
scas
sub
repnz
lods
jge
pop
mov
imul
int3
or
aaa
sub
cmp
insl
rcrl
xchg
mov
iret
mov
das
in
sbb
jno
add
sub
cmp
insl
test
stos
psubd
std
fsubrl
int3
cmp
es
aaa
mov
fsubrs
mov
pusha
jno
mov
jbe
sar
push
mov
in
cmp
mov
imulb
add
xchg
mov
movsb
aam
add
test
inc
stc
test
jmp
rcrb
inc
iret
pop
sbb
imul
sub
fcoml
ss
fmuls
push
in
mov
mov
int3
enter
lret
pop
sub
aas
ret
adc
leave
fisubl
xchg
cmp
mov
xor
xor
sbb
sarl
xchg
mov
sarl
pop
repz
pop
mov
cld
cmp
or
mov
cmp
or
sbb
insb
xchg
jl
dec
xchg
pop
stos
fsubrs
push
loopne
shlb
mov
inc
stos
mov
sbb
xor
and
sub
repz
aas
clc
cmp
xor
int3
pusha
movsb
sub
push
mov
jmp
sbb
inc
ljmp
mov
cmp
or
sbb
cmp
or
sbb
insb
test
pop
cltd
lods
imul
int3
or
sbb
cmp
or
sbb
insb
test
pop
cltd
lods
imul
xor
cmpsb
orl
sub
push
sar
add
xchg
outsl
imul
jg
test
or
movsb
xchg
and
sbb
cmpsl
scas
jb
cmp
mov
pop
xchg
movsl
repz
insb
mov
call
push
cmpb
mov
mov
sarb
out
aad
xchg
push
fistpll
bound
push
movb
lock
cmp
cld
push
sbb
push
jo
sub
jnp
pop
fnstsw
pop
imul
int
mov
add
xchg
loop
xchg
sub
mov
sub
xor
dec
cmpsb
xorl
xlat
cmpsb
jge
push
nop
jle
inc
add
xor
gs
sbb
jo
mov
xorl
fldcw
out
repnz
mov
dec
decb
inc
inc
add
add
mov
andb
cmp
xchg
iret
test
jmp
fildll
sarl
mov
lret
loopne
aad
cltd
cltd
clc
fisubrl
ss
inc
faddp
int3
mov
rep
cmp
mov
or
outsb
jnp
xchg
les
clc
js
jo
out
inc
in
push
dec
or
popf
adc
xorl
popa
push
push
pop
out
mov
das
push
mov
insb
fldcw
mov
shrb
pushf
iret
sbb
outsl
cs
sahf
xchg
repz
dec
not
out
push
aas
addr16
fisttpl
push
clc
or
aad
mov
push
xor
mov
dec
leave
stos
adc
mov
lcall
outsb
addr16
cmpsl
hlt
or
cmp
sub
cmp
loope
cli
push
fwait
lods
rcr
sbb
add
and
cli
jmp
fwait
mov
and
lods
or
push
push
mov
ret
and
out
int
notl
fstpl
fwait
fwait
jl
inc
scas
xorl
pop
mov
les
xchg
insb
loopne
mov
insb
rcll
pop
roll
mov
sarl
pop
xchg
int3
ficompl
push
lret
les
js
ljmp
iret
xor
sub
imul
jle
sub
mov
lods
pop
inc
cmp
mov
xchg
into
imul
insb
fmuls
xchg
dec
sub
fisubl
inc
add
sub
shrb
les
sbb
lods
xchg
jecxz
fsubr
repz
sbb
jb
pushf
int3
jmp
pop
pushf
mov
arpl
rcl
fistpll
fwait
sub
or
jns
pop
mov
cmpb
inc
movsb
shll
das
repz
mov
fldenv
test
push
jns
xchg
adc
pop
nop
push
aam
in
inc
jle
mov
repz
cld
aaa
xlat
xor
jbe
push
stos
add
loop
insl
jae
shrb
sbb
gs
les
cli
mov
pusha
aam
mov
pop
push
lret
mov
xchg
ret
andl
bound
xor
pop
mov
xor
mov
idivl
mov
xchg
mov
add
lods
mov
dec
stos
mov
lds
mov
add
mov
lahf
into
adc
or
push
dec
dec
mov
jecxz
and
lret
stos
or
pop
add
mov
int3
mov
inc
xchg
push
int3
adc
insb
mov
out
mov
push
xchg
lods
lret
lret
inc
push
jmp
loope
cmp
insl
shr
clc
sahf
mov
adc
cwtl
cmp
jnp
push
test
add
test
imul
pop
stc
xchg
cmpb
les
sub
xor
or
shrl
jecxz
push
or
fnsave
test
dec
xchg
jne
arpl
out
jge
dec
and
les
pop
frstor
sbb
or
test
jecxz
cmp
shll
lock
scas
jb
sarb
inc
inc
adcb
sbb
cwtl
icebp
pop
add
cmpsb
cld
orb
aad
mov
int3
outsb
cmp
shlb
gs
adc
cltd
xchg
stos
bound
ja
cmp
out
hlt
cs
ret
roll
in
adc
ja
and
mov
inc
scas
lea
arpl
mov
lret
js
cli
xchg
or
notb
sbb
movsb
scas
hlt
insl
dec
pop
sub
mov
outsl
fnstsw
add
cmpsb
fwait
push
cmpsb
sbb
mov
mov
mov
mov
mov
out
jp
pop
inc
test
pop
fdivl
and
push
sbb
cwtl
sbb
adc
push
push
push
sti
and
popl
add
jno
pushl
les
cwtl
loop
dec
mov
mov
clc
adc
xlat
pop
xor
push
mov
and
and
jmp
push
dec
gs
aaa
inc
repz
loopne
stc
mov
rcrb
dec
sub
gs
clc
loop
xor
cmp
insl
out
pop
cmp
xchg
sbb
adc
js
lcall
jno
adc
add
in
test
and
cmp
cld
and
lret
ret
ljmp
mov
hlt
adc
clc
dec
loope
sti
pushf
jmp
daa
xchg
pusha
inc
fnstenv
imul
cmpsl
fidivl
pop
mov
out
dec
aad
sarl
mov
movsb
xor
scas
jl
xchg
lods
fsubl
pop
addb
test
adc
into
shrl
nop
lods
mov
movsb
mov
ds
dec
pop
pop
lods
inc
dec
popf
jge
sub
push
jae
dec
sbb
addr16
sbb
jecxz
jnp
or
mov
jb
nop
sbbb
pop
shrb
cld
jle
mov
push
xlat
fcomps
fwait
dec
sbbb
ret
fisubs
daa
mov
sbb
ret
jno
add
std
adc
xor
adc
decb
inc
out
sub
dec
mov
fs
and
out
lret
xchg
in
add
or
data16
js
test
push
outsl
and
loope
mov
mov
inc
pop
jno
aaa
nop
jo
xor
cmp
mov
xchg
mov
pop
xchg
jge
adc
daa
ljmp
pop
outsl
xor
pop
lret
adc
aas
fdivs
pop
pop
mov
mov
or
in
and
test
fs
add
test
jb
pop
push
mov
and
pop
mov
push
or
loope
daa
mov
xchg
outsb
mov
in
or
data16
xchg
rcl
imul
mov
jge
ljmp
and
adc
and
and
es
lcall
jae
mov
jae
jno
imul
adc
lret
addr16
out
push
in
adc
pop
dec
fcmovnbe
ja
lock
sub
pop
inc
sbb
leave
pop
sbb
out
jne
stos
xchg
movsb
fwait
add
xchg
mov
jno
or
scas
or
repz
sub
lahf
sbb
mov
add
cmp
push
push
shlb
xchg
lret
clc
lret
imul
mov
pop
jle
sub
push
pushf
add
push
cmp
mov
cmpsl
adc
push
xchg
pmulhuw
sbb
arpl
inc
daa
insl
ret
dec
sbb
out
cmpsl
and
sub
cltd
jl
push
ds
cmp
fidivrl
mov
jle
aaa
xor
lods
adc
or
jns
scas
sti
stos
aad
arpl
ror
or
pop
ljmp
in
popa
xor
dec
jl
lret
into
pusha
adc
cmp
sub
subb
js
ds
mov
sub
pop
sub
or
mov
push
in
mov
or
mov
imul
data16
aam
fistpll
pop
aaa
add
lods
in
fimull
mov
jp
scas
or
test
push
inc
repnz
mov
stos
push
rcrb
push
mov
adcl
rol
ret
cmp
xor
stos
and
aaa
xchg
mov
or
xor
push
mov
push
sub
paddsb
dec
jnp
aas
roll
test
cmp
mov
fildl
xchg
jne
sbb
pushl
cmp
sti
repz
add
cwtl
dec
std
cmp
imul
fnsave
or
xchg
mov
xor
aad
gs
jbe
scas
dec
jae
inc
jb
stos
xchg
adcb
sbb
sub
hlt
xor
xchg
call
pusha
bound
fs
jmp
int
mov
jnp
hlt
ja
sub
mov
shrl
lock
fs
in
pop
lock
arpl
lea
stos
cwtl
sub
xorl
leave
clc
loopne
pop
dec
fisttpl
fistps
popf
ljmp
dec
push
dec
xor
and
jns
jge
adc
and
rorl
jne
movl
les
xchg
pusha
stos
insl
cmpsl
orl
nop
fucomp
jle
adc
lret
fsts
outsl
daa
add
cli
sbb
insb
cmp
xor
in
pop
add
pop
xor
or
in
ret
jecxz
lahf
out
push
inc
push
pop
xchg
stc
outsb
call
mov
or
ljmp
mov
cmpxchg
aaa
test
add
das
sahf
cmp
es
loopne
popf
fsubl
stc
ss
nop
jnp
scas
ss
cmp
dec
mov
xchg
lcall
inc
or
aas
push
mov
ret
and
adc
mov
repz
cs
nop
adcb
push
xor
sti
jnp
cli
mov
scas
loopne
je
cmc
cmp
mov
adc
stc
jbe
outsb
fcomip
stos
call
push
lret
push
scas
adcl
jns,pt
xor
sbb
test
movsb
mull
dec
insb
lcall
push
insb
pop
movsl
mov
xor
pushf
imul
dec
pop
jle
loopne
ret
ss
and
xchg
popf
push
jecxz
mov
lods
popf
cmc
sbb
xchg
sub
cmpsl
or
outsb
bound
adc
adc
daa
aam
sarb
in
push
insl
sub
outsb
xlat
out
sbb
mov
add
and
cmc
xchg
lock
xlat
mov
pop
mov
pop
jp
fld
sub
add
jne
mov
ret
lock
ja
push
mov
mov
jl
cltd
jmp
pop
icebp
adc
scas
in
shlb
xor
jae
and
cmp
enter
mov
mov
ja
js
xchg
lcall
sahf
bound
mov
loop
int3
dec
mov
scas
in
decl
and
inc
mov
arpl
adc
test
fs
imul
or
test
xlat
and
not
xorl
inc
xchg
mov
cmp
mov
addb
movsl
mov
fisttps
cs
jle
mov
add
push
mov
rol
push
xor
dec
adc
lret
xor
push
sti
add
dec
xlat
mov
bound
adc
adc
add
and
loop
scas
lret
loop
insl
mov
push
imul
push
addl
scas
aas
shlb
add
jmp
gs
int
dec
outsb
or
xor
pop
pop
subb
push
aas
inc
decl
lock
popa
repz
push
sub
cwtl
xchg
cmp
push
push
outsb
mov
mov
inc
jp
iret
es
scas
mov
repz
shll
iret
push
lcall
mov
jle
mov
xor
call
int
dec
inc
cld
fwait
and
iret
bound
add
negb
fs
sbb
add
cs
movsb
fwait
out
popf
pop
mov
sub
sahf
sbb
filds
xor
mov
pop
jno
pop
das
pop
cmp
sbb
mov
add
test
mov
xchg
sbb
popf
imul
jmp
push
cwtl
inc
out
imul
dec
cmp
xor
jle
jle
mov
and
aad
mov
inc
sub
pop
inc
jo
loopne
filds
call
fdivr
cld
mov
sbb
mov
ret
jno
adc
pop
dec
xchg
or
push
jge
movb
add
cld
ss
add
dec
popa
flds
dec
dec
cmpb
mov
sub
mov
subb
push
repz
pop
push
inc
adc
out
pusha
pop
cmp
push
fmull
lcall
in
jno
dec
and
or
in
int3
std
mov
xchg
push
mov
je
jns
add
in
jnp
lahf
cld
pop
xchg
jg
xor
cmpsl
das
sarl
icebp
adc
cmc
stc
mull
push
push
insl
divb
cmp
std
loop
dec
in
aas
mov
mov
cmp
out
dec
jp
mov
inc
adc
or
in
leave
enter
cmc
addl
divb
scas
ficoml
int
adc
push
mov
aaa
push
scas
add
mov
mov
mov
or
adc
add
and
push
in
aam
pop
jno
pop
ficompl
or
in
sbb
stc
push
inc
insb
mov
push
dec
dec
pop
sbb
addr16
pop
loope
loopne
outsb
int
je
push
inc
inc
emms
mov
icebp
stc
sbb
sub
in
jge
fildl
addr16
sarl
aam
pop
or
fwait
xorl
jl
in
xor
add
adc
out
add
and
xchg
mov
mov
inc
adc
imul
pop
sub
cmp
pop
pop
dec
mov
filds
pop
lcall
and
ret
dec
cmp
inc
clc
cmp
pop
xor
rorl
dec
xchg
xlat
cwtl
ret
clc
cmp
jp
dec
dec
pusha
fnstenv
dec
pop
inc
add
add
mov
ja
sub
cmovb
ror
std
rorl
sbb
fs
sub
xor
xlat
stos
xor
je
inc
xor
cmp
adc
imul
or
push
imul
cmp
and
cld
jle
jne
add
sub
sti
push
pushf
sub
into
push
mov
mov
sub
xchg
mov
mov
shlb
scas
xchg
movsb
mov
loop
push
and
push
scas
push
adc
fldt
dec
dec
lock
pop
xchg
mov
lahf
inc
xor
mov
or
cmpsl
or
or
pop
xlat
in
mull
lea
inc
fldln2
into
push
and
pop
jl
insl
inc
aam
add
cmp
push
out
dec
lcall
pop
jle
bound
imul
mov
outsl
pushl
shlb
jnp
inc
mov
popf
test
divb
mov
dec
and
lret
mov
adc
mov
dec
mov
nop
cmp
sbb
mov
jno
dec
in
fisubs
mov
push
pop
je
icebp
scas
jmp
xlat
mov
push
jae
mov
or
pop
xchg
insb
and
xlat
pushf
subl
aas
jge
loopne
rorb
dec
scas
bound
fld
cmpsl
ljmp
out
gs
add
outsb
stos
dec
jo
mov
or
jmp
fwait
and
imul
movsl
adcl
jl
icebp
push
ret
clc
dec
lods
xchg
mov
out
mov
cmpsl
movsb
mov
adc
jb
mov
dec
cmc
lret
addr16
mov
jae
pop
das
aaa
or
dec
lea
jmp
js
cmp
add
out
push
cmp
ja
add
call
push
out
int3
sbb
bound
jmp
divb
fstpl
inc
jbe,pn
test
or
stos
pop
jne
sbb
and
mov
push
inc
xchg
cwtl
pop
andb
sbb
movsb
add
int
dec
xor
inc
iret
cmp
insb
loop
add
outsl
btcl
sbb
pop
xchg
sbb
dec
and
test
lret
fsubl
loopne
mov
fwait
mov
jl
dec
or
sub
cld
orb
push
mov
or
rcr
push
push
sub
inc
mov
xor
sahf
cld
jno
mov
pop
les
test
shll
pusha
flds
push
push
jl
mov
sahf
cltd
fsubrs
pusha
out
test
rolb
push
push
out
cwtl
mov
hlt
sub
push
movsl
sub
rcrb
movsl
sbb
adc
cmp
jnp
add
lock
adc
hlt
push
xchg
inc
push
call
fstl
mov
cli
xchg
dec
sbb
jae
adc
jbe
jne
pop
loop
mov
inc
xlat
fsubrs
mov
jmp
sbb
imul
push
imul
adc
cmpb
xchg
orb
pop
adc
sub
cmp
pand
test
xlat
cs
dec
mov
jp
mov
cmp
push
dec
mov
lds
in
outsb
insb
repnz
loope
or
jmp
insb
lock
cwtl
pop
mov
and
lret
cmp
notb
outsl
sbb
in
jbe
ljmp
rcrl
pop
or
test
mov
cmpsl
push
push
inc
mov
mov
push
shrb
imul
pop
jge
or
jb
int
cmc
in
leave
jnp
rorl
ljmp
add
adc
jmp
fcoms
mov
hlt
out
pop
push
fnstenv
sub
push
and
sub
push
push
lea
push
rcrb
pop
xor
mov
add
iret
cli
jmp
pop
mov
scas
cs
push
roll
jecxz
rcrb
test
ss
es
sub
and
add
cmpb
imul
fstps
jle
or
popa
add
mov
cmp
shll
cmp
dec
adc
clc
push
adc
lock
mov
jmp
mov
mov
clc
insl
clc
xchg
mov
or
pop
rcr
lretw
push
cmp
daa
jo
jno
pop
xchg
adcl
frstor
and
aad
mov
ficomps
fwait
xchg
mov
insl
rcrb
lahf
mov
fsqrt
imul
sub
adc
dec
xadd
mov
sahf
andl
pushf
mov
loopne
loope
test
enter
iret
and
ja
mov
jb
pusha
push
loop
lret
out
mov
std
mov
scas
cmp
out
mov
mov
and
xor
pop
loope
out
test
or
xor
mov
das
xchg
mov
xor
scas
aad
dec
sub
pop
or
fldl
inc
aas
stos
mov
or
pushw
jno
rcrl
mov
mov
xchg
repnz
mov
mov
mov
outsl
fdivl
imul
mov
dec
push
insb
pushf
sbb
sub
sub
stos
dec
add
jle
jo
jnp
mov
cs
mov
pop
jle
pusha
push
inc
push
pushf
ret
test
pushf
ret
mov
repnz
mov
sbb
lods
add
add
or
or
scas
mov
aam
lcall
repz
idiv
cwtl
and
or
in
inc
jp
mov
ja
es
loope
in
icebp
mov
out
je
push
pop
xchg
test
clc
xchg
jl
lret
inc
dec
xchg
push
mov
ss
pop
rcrl
hlt
xor
or
xchg
push
ret
cmp
inc
addb
clc
push
mov
sbb
dec
ret
mov
dec
sub
add
sub
fisubrs
inc
adcb
mov
mov
inc
jge
push
jne
mov
lods
or
fsubrl
push
out
scas
xor
pop
cmc
mov
jno
into
stos
xor
mov
xchg
sti
nop
orb
jmp
ja
adcl
lods
in
cmp
push
cmpsl
xor
push
int3
push
sarb
andb
js
rol
pop
or
cmc
dec
sub
movsl
lret
test
out
ja
jle
int
in
jne
push
mov
jl
imul
or
orb
jle
int3
sub
jae
add
sub
push
mov
xchg
and
fistps
cmp
test
repnz
test
push
sbb
sub
mov
mov
test
mov
in
fwait
scas
pop
xchg
loopne
es
repnz
cmp
push
ss
sub
inc
in
sbb
xchg
adc
jo
push
loop
clc
mov
lahf
sub
dec
je
lods
loopne
jnp
add
fdivs
mov
pop
push
mov
out
divps
iret
adc
movsl
sbb
pop
sbb
in
pushf
pop
in
sub
cmp
or
sbb
cmp
or
sbb
insb
test
pop
cltd
lods
imul
int3
or
sbb
cmp
or
sbb
insb
test
pop
cltd
lods
insl
mov
pop
in
sub
push
int3
or
cmp
or
sbb
insb
lods
jl
dec
sbbb
lea
sbb
sub
cmp
mov
fldcw
cmp
cmpsb
leave
sbb
sbb
hlt
shll
scas
cmpsl
mov
mov
aas
add
push
add
add
add
add
add
add
add
add
add
add
mov
lcall
add
add
add
add
insl
add
addl
mov
add
add
add
push
add
add
add
add
xchg
mov
push
add
add
or
add
add
xlat
add
add
add
add
or
add
mov
movb
add
testb
add
adc
pop
add
add
add
add
mov
xchg
add
add
add
add
sub
pop
add
add
add
add
add
add
add
mov
add
js
imul
add
add
add
add
and
mov
int
dec
add
add
add
add
add
add
movb
add
daa
add
add
inc
add
fs
add
add
add
push
imul
add
add
add
add
fadds
add
add
add
add
add
daa
add
add
add
add
push
add
add
add
and
adc
fildl
int
sub
xlat
add
add
stos
add
add
add
add
add
int
out
mov
add
aaa
add
add
add
mov
addl
add
add
or
add
add
xchg
add
add
add
fiaddl
dec
add
add
add
loop
int3
add
add
inc
add
addl
add
add
add
add
add
add
add
add
and
jge
ret
add
add
add
bound
movb
add
mov
add
add
imul
insl
add
add
add
add
add
push
add
add
add
add
add
add
jge
cmp
add
filds
xchg
add
add
lea
ds
add
rolb
adc
aad
jo
add
add
add
mov
add
addl
add
pop
add
add
add
add
add
add
add
add
add
add
and
xlat
add
add
add
add
add
add
and
pop
add
and
pushf
add
add
add
add
add
add
in
iret
push
sbb
dec
add
jo
mov
add
add
inc
add
xor
jns
fiaddl
mov
add
add
add
add
add
add
add
add
lahf
add
add
add
jmp
add
add
cmp
add
add
add
pushf
add
addl
add
add
and
mov
add
add
or
inc
add
lahf
add
aam
dec
add
add
add
add
add
add
jns
cmp
add
mov
add
add
sbb
roll
addb
add
aam
filds
xchg
add
add
dec
add
add
sbb
add
add
leave
add
add
add
adc
movsl
add
add
add
add
incb
push
add
add
xchg
add
add
add
add
add
add
add
fldenv
jecxz
jno
xlat
in
addl
mov
in
xchg
popf
pop
sub
aam
sub
ja
or
or
sarb
mov
negb
dec
jg
cmp
js
push
imul
fwait
hlt
out
insb
daa
pop
cvtpi2ps
xchg
xchg
mov
rorb
add
int
mov
in
pop
js
shll
cmp
sbbl
test
cmp
dec
sbb
and
sub
arpl
xor
lcall
fistpl
cmpsl
adc
std
int
push
mov
sti
les
push
lcall
add
mov
inc
gs
mov
cmpsl
sub
push
daa
enter
adc
mov
lods
call
leave
push
push
outsl
stos
data16
push
movsl
data16
jnp,pt
mov
pop
ljmp
xor
cmp
push
inc
cmp
pop
adc
repz
sbb
xlat
add
int3
pop
or
jp
sbb
popa
cli
pop
jmp
pop
sbb
imul
test
loopne
dec
fstl
repnz
sahf
cmc
adc
sti
mov
bound
xchg
mov
fisttpll
pop
aad
lret
adc
enter
mov
sub
inc
sub
insb
sub
sbb
pop
xchg
mov
adcl
jno
xor
push
faddl
std
adc
and
leave
push
les
pushf
sub
addb
aad
inc
xor
jmp
push
cltd
jb
add
cmp
sub
pop
imul
loope
dec
leave
lea
ja
jnp
cwtl
lods
add
scas
pop
test
inc
push
cmpsl
cwtl
add
cmp
mov
int
scas
pop
imul
fs
add
aaa
dec
cli
data16
andl
insb
sti
lock
cmp
loope
leave
pop
fs
fs
mov
add
mov
or
pop
push
cmc
in
lods
xor
mov
cmp
inc
jns
in
mov
cmpb
mov
popa
in
ja
jecxz
mov
dec
pop
push
mov
pop
cltd
and
mov
jg
or
pop
fstpl
fisubrl
push
ljmp
mov
int
js
adc
bound
xor
xchg
loop
xchg
xor
iret
mov
ror
movsb
inc
jne
popa
js
xchg
in
cmc
mov
push
adc
sbb
fcmovb
sbb
cwtl
mov
sbb
out
mov
mov
ds
std
add
mov
push
or
push
xlat
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
