call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
nop
xor
and
adc
add
jne
inc
sarl
int
pop
or
scas
xor
in
les
divl
and
adc
add
je
fs
jecxz
adc
test
xchg
inc
in
aam
les
xor
and
adc
add
je
fs
push
jecxz
ja
and
cmp
aas
mov
js
push
mov
lret
into
ret
mov
push
enter
xor
iret
scas
iret
push
jge
xchg
ja
add
jg
xor
mov
fs
jmp
in
ja
mov
fists
jae
pushf
xchg
insl
and
in
mov
sbb
subb
mov
movsl
es
and
or
fdivrs
mov
dec
push
sub
ret
fs
jecxz
adc
pop
mov
fldl
lods
in
add
mov
mov
xchg
jmp
or
decl
js
push
mov
imul
cmpsl
inc
hlt
mov
xor
cmp
out
or
int
mov
mov
fsubp
adc
xor
and
adc
add
je
fs
inc
inc
aad
cltd
movsb
inc
xchg
adc
aam
cmp
icebp
pop
push
fildl
xor
xor
les
push
movl
sbb
out
rcrl
aaa
cmpsb
and
add
xor
pop
sub
and
shlb
jl
inc
ret
fs
jecxz
adc
test
inc
in
aam
les
adc
add
je
fs
jecxz
adc
test
inc
in
aam
les
jnp
ret
sbb
sub
popf
add
jp
lock
into
xchg
cmpsl
fstl
push
repnz
repz
nop
subb
pop
hlt
sbb
out
mov
rcr
dec
sub
outsl
lock
je
out
pusha
adc
mov
fnstsw
sub
dec
xorb
cwtl
and
jae
xlat
fiaddl
sub
stos
out
xor
jnp
pop
dec
out
iret
xor
out
rol
rcrl
sbb
out
or
test
xchg
das
popa
mov
out
xchg
mov
cli
mov
pop
dec
jge
pop
xchg
pushf
stos
dec
ja
mov
lock
mov
xor
iret
pop
lea
sub
rcr
decl
ljmp
sbb
inc
sub
cmp
adc
pop
pop
dec
sti
mov
sbb
push
stos
movsb
adc
jmp
mov
hlt
cmp
mov
ucomiss
pop
mov
das
cmp
adcb
fdivs
loope
cmp
sbb
dec
inc
lods
test
add
dec
pop
and
addb
and
pop
jbe
popl
inc
jbe
les
inc
cltd
js
outsl
stc
test
cmp
int3
test
arpl
and
in
loopne
pop
add
mov
adc
xor
loopne
ret
dec
in
jnp
int
push
jge
fisubrs
insb
aad
sbb
xchg
jnp
mov
mov
movsb
loopne
cltd
mov
push
imul
int3
pop
pop
pushl
loopne
jae
jno
adc
push
stos
mov
std
push
xor
sbb
repnz
jnp
mov
sbb
lret
mov
cmp
ret
dec
test
adc
jg
leave
push
in
mov
es
lcall
lock
xchg
stos
ret
push
pop
mov
pop
cmp
sahf
sbb
push
movb
imul
xchg
int3
pop
inc
in
xor
ror
daa
xchg
aam
fidivs
mov
mov
je
test
insl
mov
daa
ret
clc
push
insb
fisttpll
cmp
push
aam
movsb
daa
mov
mov
stos
and
arpl
or
xchg
mov
sub
divb
push
insb
mov
fwait
cwtl
push
andl
sub
fnstenv
ja
push
fimuls
dec
xor
idiv
jg
dec
das
xchg
lds
pusha
jge
in
lea
scas
inc
js
push
dec
fldl
pop
push
mov
push
jle
xor
pop
in
mov
adcl
lcall
in
lea
cmc
jnp
imul
xor
jle
xchg
lahf
andb
push
mull
jp
int3
sub
inc
pop
aad
je
cmp
aas
shl
mov
or
je
icebp
outsb
scas
fcmovbe
mov
mov
cmp
mov
xchg
push
cltd
mov
jae
cmp
pop
add
in
fsts
cli
sbb
sub
push
loope
sbb
jecxz
test
mov
mov
inc
jp,pt
in
es
xchg
mov
jnp
imul
rclb
movb
sysenter
jmp
add
cmp
aam
lea
pop
mov
test
sti
mov
dec
xor
shr
add
fldt
mov
ljmp
push
mov
adc
rcrl
jmp
xchg
enter
lcall
aam
pop
lods
out
dec
mov
daa
mov
fldl
lea
cli
addb
enter
adc
dec
gs
sbb
mov
mov
xor
fcmovb
xchg
enter
test
mov
and
popf
jno
lcall
pop
fdiv
inc
negl
scas
in
sub
jge
popa
loop
test
orb
rorl
les
loopne
or
pusha
loopne
mov
mov
inc
jecxz
not
cmpsl
adc
inc
push
mov
inc
pandn
lods
pop
xlat
and
paddq
das
push
or
push
stos
jae
cltd
jno
cmpsb
xchg
fnsetpm(287
inc
and
jge
jg
cmp
sbb
in
shlb
and
leave
lock
mov
sbb
shlb
daa
adc
push
test
inc
dec
xchg
pop
loopne
test
xchg
out
rcll
sbb
hlt
shl
xchg
nop
push
outsb
cmpsb
aam
outsl
scas
out
shll
adc
push
jp
push
je
stos
or
cmp
test
mov
or
pushf
loopne
push
insb
fistpll
vsqrtsd
scas
mov
subl
cltd
imul
xor
cmpsb
iret
out
cmp
ficoms
decb
lcall
nop
aad
sahf
add
push
jne
mov
aad
repnz
pusha
xor
push
aas
xchg
inc
dec
push
and
dec
or
xor
lods
js
test
mov
insl
inc
xchg
pop
int
mov
jbe
lret
sub
lods
out
jecxz
fidivrl
packssdw
and
out
inc
push
adc
add
jmp
int
mov
xchg
ffree
aad
jg
ficoms
out
repz
jg
pop
cli
fldenv
and
jge
loop
inc
lcall
push
fwait
jne
addr16
lcall
jb
xchg
add
into
rorl
ss
js
mov
insl
ret
push
in
aas
movsl
sub
or
cmpsb
inc
adc
mov
sbb
sahf
into
mov
lea
cmp
jl
add
and
and
xlat
das
aam
cmp
mov
jecxz
andl
pop
les
outsb
jno
sbb
cmc
jnp
in
lret
push
enter
lahf
pop
or
and
fxtract
adc
mov
loopne
jns
push
lahf
pusha
or
ss
test
mov
jno
rorb
jg
pop
or
jecxz
cmp
lret
xor
in
xchg
mov
sbb
aas
leave
loopne
and
test
mov
xlat
sti
pop
loopne
scas
repz
lret
dec
iret
lret
fidivrl
inc
push
push
mov
inc
jp
push
jb
ljmp
mov
gs
jns
test
cld
jg
xor
sub
aam
out
sub
cmpsb
cmc
mov
and
hlt
sub
pop
and
mov
dec
push
cld
push
jmp
fists
lock
lcall
enter
xchg
xor
cmp
andb
imul
jp
xchg
pop
jae
aad
lahf
cmp
dec
pop
pop
jp
xor
sub
notb
mov
fmul
pop
adc
scas
popa
mov
test
out
mov
mov
pop
mov
aam
jb
loop
cmp
or
jecxz
fs
xchg
stc
out
out
aam
lahf
out
test
outsb
arpl
outsb
lods
rolb
sbb
lcall
sub
xchg
jae
test
ret
jg
xchg
mov
ja
mov
loop
push
xchg
out
loopne
jp
mov
inc
test
sub
repz
fildl
xchg
add
jns
sbb
pop
rcrl
jecxz,pt
fsubrl
mov
mov
cmpsb
pop
ret
jmp
lods
mov
mov
xchg
push
pop
sub
das
pop
in
inc
add
mov
jo
out
push
fistl
sbb
test
insb
add
mov
inc
mov
sahf
mov
popa
cmpl
xor
aaa
ss
imul
mov
adc
jbe
stc
iret
push
push
cs
cmp
or
into
jnp
lcall
pushf
cltd
call
int
test
jb
out
push
fwait
and
fdivs
test
sahf
xchg
out
cmp
xchg
int
jb
pop
jns
lods
insb
loope
cwtl
int3
mov
fldenv
loopne
cs
and
add
lea
lods
aaa
mov
into
mov
dec
addr16
sahf
stos
mov
jns
bound
lods
daa
lds
push
icebp
testl
aas
pop
out
cmp
mov
pop
cs
test
sti
seto
xor
jae
add
lods
fs
pop
jle
mov
add
pop
test
xchg
or
ja
jne
les
sub
inc
xchg
xor
arpl
mov
fnstcw
fdivrp
ret
into
outsb
pop
jge
xchg
ja
sub
loop
push
je
ljmp
pop
lea
lcall
or
add
adc
pop
dec
adc
push
test
fsubp
and
movlps
xchg
jb
js
jmp
mov
add
push
cmp
test
mov
mov
pop
xchg
ds
push
jmp
dec
shrb
orl
sub
lods
data16
mov
mov
adc
sbb
loopne
jb
stos
cmp
dec
jbe
inc
clc
sbb
mov
mov
out
orb
leave
nop
orb
xchg
insb
dec
das
push
jb
mov
adc
pop
jnp
lock
xchg
push
push
rcrb
imul
out
xchg
in
add
inc
cmp
ljmp
daa
jle
testl
jmp
imul
pop
int3
push
adc
out
xchg
mov
lds
inc
pop
xchg
lahf
imul
mov
cmp
push
or
into
stos
adc
jle
cmp
jg
imul
ret
dec
push
call
das
push
cmpsb
into
jae
cwtl
xor
aas
jmp
mov
roll
sub
fsubrl
fistps
icebp
mov
ret
ljmp
mov
jnp
mov
sarl
adc
bound
out
or
inc
push
cmpsb
out
fs
xchg
sbb
out
pop
loop
xchg
das
lods
mov
lret
dec
mov
jae
mov
xorl
pop
mov
movlps
xchg
insb
and
cmpsl
fistl
push
sbb
xchg
nop
fs
cmp
into
je
jns
cltd
cmp
jbe
push
add
mov
cmp
sbb
xor
mov
push
out
inc
outsb
sub
cmp
push
int3
cmpsb
mov
cld
push
shll
aam
sub
jb
cmp
and
insb
mov
sbb
sbb
pop
fstps
or
fisttpll
jno
in
ja
sbb
jecxz
shll
xor
fwait
jmp
out
int
xchg
jne
ja
test
jne
pushf
sbb
daa
insb
js
popf
shrb
ret
add
mov
rclb
ja
jmp
nop
inc
sbb
inc
push
out
adc
mov
mov
fisubl
int3
lods
push
movsb
xor
leave
adc
aad
pop
icebp
lret
cmp
lret
iret
mov
jle
stos
es
in
mov
sti
cmp
jnp,pt
xchg
xor
shlb
mov
mov
lcall
insl
addr16
ret
xchg
lods
jbe
aad
inc
mov
je
xchg
aas
dec
mov
mov
jle
sahf
cltd
sub
ja
adc
xchg
jb
aad
dec
pop
or
sbb
push
push
push
and
mov
mov
mov
push
arpl
loope
lds
addr16
mov
jmp
iret
sbb
inc
or
insb
cmc
aaa
inc
mov
push
mov
cmp
das
sbb
repnz
mov
dec
sub
cmp
push
xchg
arpl
pop
das
mov
jbe
stc
xor
sub
cmp
sbb
inc
in
hlt
scas
cmpl
stos
aaa
jbe
jno
ljmp
inc
inc
or
scas
pusha
push
cmp
fiaddl
fisubrs
rcl
sahf
mov
adc
inc
lock
inc
aad
leave
popa
loopne
or
push
pop
cmpb
cwtl
push
adc
pop
pop
sub
jmp
rorb
cld
orl
lds
psubw
push
or
push
inc
push
cmpsb
pop
fcoms
jb
inc
das
lcall
idivb
or
ja
jge
xchg
sbb
in
push
mov
aas
mov
movsb
int
in
jbe
cmpsb
repz
pop
lret
adc
inc
push
enter
mov
fistps
fsts
mov
leave
jl
movb
mulb
idivb
mov
ret
data16
insb
xchg
fisubrs
adc
sahf
cmp
and
arpl
imul
aaa
jmp
js
ret
push
cmpsl
pop
repnz
arpl
or
inc
cmp
out
adc
pop
jb
cld
xlat
mov
out
and
fdivs
psubb
arpl
fsts
mov
icebp
loop
mov
fldl
gs
shrb
shrl
aas
rcrb
ss
xorb
add
lahf
adc
adc
and
inc
pop
lods
mov
loope
test
inc
jl
xlat
iret
xor
jmp
sbb
pop
movsl
jle
punpcklwd
sub
out
xchg
lods
inc
pop
push
xchg
aas
pop
mov
jo
roll
mov
or
cmpl
push
popa
inc
push
scas
or
jg
sbb
pop
mov
sbb
or
in
arpl
jge
mov
inc
movsb
and
xlat
adc
add
cmp
xlat
cwtl
mov
insl
mov
pop
aaa
sub
ljmp
lea
add
cwtl
jp
mov
or
inc
jmp
or
or
xchg
sub
mov
sub
and
pop
daa
mov
inc
in
fldt
outsb
jle
mov
fisttps
fsubr
jl
popf
loope
jg
pop
pop
cmpb
mov
leave
mov
sub
je
and
movsb
mov
popa
add
sbb
push
xor
dec
jne
cmp
push
mov
aam
xchg
add
or
cmpsl
sbb
pop
pusha
outsl
daa
hlt
lret
xchg
push
jbe
dec
jmp
aad
movsb
dec
sbbb
shlb
ss
mov
ret
into
cmp
push
mov
test
call
pushaw
roll
aam
or
les
mov
jns
pusha
sarl
rcrb
or
in
lcall
adc
outsb
lret
dec
popa
xchg
pop
shlb
mov
xlat
add
int3
movsb
and
push
pop
imul
pop
ficoms
push
sbb
jno
push
add
mov
and
pextrw
and
ja
out
push
mov
inc
test
outsl
sahf
int3
mov
fisubrs
xor
cmpb
push
jbe
test
push
pop
dec
adc
jp
push
hlt
dec
sbb
call
loopne
mov
fidivrs
add
in
arpl
outsl
fstpl
dec
push
or
mov
inc
imul
push
jno
or
jle
shrb
hlt
mov
or
dec
lea
mov
lock
addr16
push
jmp
jecxz
out
push
iret
mov
movsl
insl
jo
es
inc
pop
rol
dec
or
sbbb
xor
xchg
dec
jl
in
negb
push
mov
aam
sub
mov
addr16
out
cmp
ja
xor
out
jb
mov
xchg
and
mov
scas
sbb
adc
in
ja
mov
imul
repnz
mov
add
pusha
enter
lret
mov
mov
pop
aam
in
mov
mov
mov
mov
sbb
xchg
das
hlt
mov
sbb
sub
or
in
inc
cmpsw
and
cmp
lret
outsb
inc
cs
adc
imul
daa
mov
aas
dec
loopne
mov
dec
jmp
jp
sarl
adc
push
mov
sahf
sbb
rorb
and
arpl
cwtl
or
and
mov
pop
movsb
mov
mov
adc
insb
xor
ss
xor
xchg
or
inc
sti
leave
pop
daa
cld
dec
jns
pop
es
aam
shlb
inc
orl
popa
sar
fidivrs
xchg
roll
aas
call
inc
cmpsb
add
in
adc
inc
fs
mov
pop
insb
loope
sub
mov
xor
mov
pop
push
sub
jno
adc
xchg
and
nop
mov
sub
or
xchg
stos
jl
aaa
cltd
xchg
mov
push
addr16
add
inc
out
push
stos
xchg
add
insb
pop
sbb
aaa
enter
test
ds
sub
sub
icebp
movsb
cltd
and
test
cmp
adc
adc
dec
into
lret
leave
push
stc
inc
dec
xchg
inc
jmp
gs
in
jae
shlb
into
adc
mov
fcmovb
pop
out
mov
pop
test
stos
sub
lret
xor
leave
or
into
mov
and
xchg
ds
mov
adc
roll
hlt
shr
imul
dec
push
outsl
mov
add
iret
repnz
out
incl
stos
sub
sub
sarl
iret
xor
outsb
out
jno
int3
int
int
mov
cmp
fdivl
movsl
push
jecxz
dec
stc
push
testl
daa
push
sarl
cli
cmp
dec
pushf
ss
add
aam
xchg
jle
push
xchg
jbe
sub
push
lock
or
test
mov
pmaxsw
fbstp
add
lds
pop
je
scas
bound
push
pop
data16
dec
jno
aam
sub
daa
add
cmp
icebp
sbb
add
ja
jbe
jnp
sbb
ljmp
repz
jns
xchg
push
cmc
cmpsl
mov
and
pop
mov
mov
aas
inc
stos
rclb
adc
aad
mov
and
push
mov
sbb
jge
mov
int
xchg
push
fstps
jne
dec
je
mov
daa
xchg
add
cli
mov
bound
cmp
jo
xchg
or
shrb
sbb
mov
fcmovu
test
fwait
adc
dec
pop
es
hlt
es
sub
cmpsl
adc
movsl
lods
push
mov
cmp
loopnew
in
cmp
and
mov
jnp
mov
es
lcall
popa
decl
sub
inc
push
nop
lahf
pusha
fucom
ja
pop
adc
aaa
int
sbb
adc
addr16
xlat
popf
adc
mov
xor
sbbl
data16
sub
adc
mov
cmpsb
mov
dec
push
adc
jno
ret
lods
and
mov
fidivs
mov
sub
pop
fdivrs
xor
lahf
movsl
adc
mov
adc
clc
mov
stos
fisubs
sub
cmp
add
loop
iret
inc
and
popa
stos
sub
push
cmp
iret
cmp
push
fcmovne
cltd
ss
xchg
sbb
ss
jmp
pop
inc
or
dec
push
and
xchg
ffreep
flds
cmc
test
das
sbb
in
xchg
pop
sbb
jle
mov
mov
add
aaa
les
out
sti
test
lret
push
inc
xchg
lcall
jmp
movsl
mov
jecxz
aas
insb
mov
insb
ljmp
std
lods
jae
dec
sub
popa
cmp
and
hlt
rcrb
and
in
adc
dec
push
fdivr
mov
and
lret
fs
pop
push
fs
sbb
outsl
ret
add
daa
mov
imul
ffreep
mov
ss
push
add
lods
dec
movsb
mov
pop
add
push
xor
push
mov
popf
inc
jge
fwait
add
push
xchg
push
push
inc
add
cmpb
shlb
sub
cmpsl
inc
and
ljmp
sti
pop
cvtsi2sdl
mov
pop
repnz
int3
into
xor
push
cli
sub
in
out
addr16
inc
mov
bound
jl
ja
push
fst
imul
jb
pop
inc
insb
xchg
push
xchg
sbb
cmp
ret
addr16
cli
enter
je
lods
imul
out
sub
mov
inc
data16
add
xor
aaa
addb
fadd
jns
jns
icebp
movsb
aad
pop
mov
syscall
adc
xchg
fbstp
movsl
add
xchg
arpl
sub
minps
cmp
inc
sub
sbb
mov
xor
cmp
mov
insb
pop
xlat
pop
es
movsb
cwtl
sub
or
inc
fisubrl
cltd
cmovp
ffreep
inc
out
xchg
out
dec
mov
mov
aad
jns
popa
ss
sub
stos
cmp
mov
stc
sbb
js
into
iret
push
inc
jne
das
stc
repnz
mov
cmp
xor
adcb
test
sbb
adc
outsb
daa
loop
xchg
sub
jne
arpl
fstpl
mov
andb
mov
test
mov
add
test
hlt
fisubs
xchg
adc
adc
add
je
fs
jecxz
adc
test
inc
in
aam
les
adc
add
je
fs
jecxz
adc
test
inc
in
aam
les
adc
add
je
fs
and
add
hlt
push
in
aam
les
adc
add
je
fs
arpl
xchg
and
and
lret
sbb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
fdivs
arpl
push
call
dec
lret
add
dec
jecxz
shrl
sbb
sub
clc
push
call
and
repz
jecxz
shll
sbb
sub
loopne
lock
xorl
test
inc
int
mov
sbb
addr16
idivb
mov
cmpsl
pop
clc
aaa
sahf
scas
lret
cmc
mov
jns
outsl
loopne
out
mov
icebp
shll
xchg
adc
dec
pop
jnp
and
lret
mov
cmp
dec
popa
addl
sub
xchg
xlat
jg
data16
or
test
adc
orb
mov
inc
in
sbb
sub
xor
push
xor
cli
test
testb
cmp
loopne
repz
sub
jne
or
cmc
in
pop
push
pop
mov
loop
das
cwtl
lock
or
xchg
cmp
xor
sub
addr16
mov
dec
fsubs
repnz
dec
pop
push
cmp
shll
push
call
and
repz
jecxz
shll
add
sub
mov
lods
mov
adc
out
cmc
jbe
jae
lahf
and
or
insl
fimull
inc
out
xor
adc
push
mov
sbb
sub
dec
out
in
mov
daa
xorb
pop
mov
mov
repz
jecxz
shrl
sbb
sub
clc
push
call
and
repz
jecxz
shrl
sbb
sub
inc
mov
ljmp
ljmp
jecxz
pop
icebp
jo
inc
test
lret
mov
in
jnp
or
fcompl
out
push
xchg
scas
sti
sahf
sarb
jle
and
sub
shrb
lds
movsb
jne
mov
or
scas
movsl
xchg
es
rorb
repz
loop
and
test
mul
pop
test
scas
mov
int3
inc
fmul
mov
pop
or
dec
movsb
inc
lret
ljmp
mov
add
sbb
sti
dec
inc
mov
cli
jbe
shlb
cmp
xchg
insb
cmp
cltd
or
jge
mov
aas
inc
imul
mov
pop
cmp
pop
fsts
scas
lea
stc
inc
jecxz
jae
add
fldt
lret
pop
pop
cmp
xchg
mov
ret
cmp
cmc
and
sbb
and
pushf
pop
push
cli
push
jbe
add
addl
pop
fiaddl
pop
push
adc
dec
ss
mull
cld
sub
pop
aam
f2xm1
je
ljmp
cwtl
leave
shlb
pusha
clc
mov
stos
sbb
add
sub
in
shrl
xchg
shl
add
adc
sbb
enter
and
adc
je
sar
mov
xor
sbb
mov
lock
cltd
jecxz
sbb
jmp
mov
xor
mov
jp
fisubrl
sbb
jb
aam
cltd
fdivl
jmp
jns
and
loopne
data16
inc
lahf
clc
mov
rcrb
es
add
inc
xchg
mov
inc
fistl
fcoml
mov
mov
mov
mov
faddp
addb
jb
fs
push
pop
jo
loop
inc
fldcw
inc
test
cli
adc
insb
dec
lret
lahf
popf
pushf
xchg
xchg
repz
xchg
cmpb
jmp
jle
in
jmp
xor
cwtl
mov
xchg
stc
sahf
mov
testb
shr
jge
pop
fs
add
pop
lcall
dec
or
lahf
inc
inc
push
push
out
es
xchg
cmp
mov
push
jns
pop
sub
sbb
xchg
outsl
mov
mov
jmp
mov
emms
mov
push
int
pop
or
adc
movsb
pop
push
dec
xor
mov
add
xor
movsb
xchg
pop
in
adc
sbb
insl
pop
sub
pop
addr16
jg
enter
pop
ja
ja
enter
imul
ljmp
dec
pushf
sti
push
cmp
mov
inc
popf
aam
js
test
dec
jo
inc
xchg
and
sbb
outsb
add
in
test
aaa
adc
xor
loopne
sarl
movsb
in
int3
aam
sbbl
add
or
mov
add
dec
inc
inc
pop
std
movsb
xchg
cmp
mov
xlat
arpl
mov
xchg
shll
jle
sbb
mov
jle
xchg
ret
push
movsb
add
jne
or
mov
outsb
jno
test
aaa
jecxz
pop
and
sbb
push
sti
push
stc
sub
add
inc
aad
std
dec
sub
mov
inc
mov
sub
scas
mov
pushf
pusha
jne
mov
xchg
mov
icebp
sbb
mov
jne
jg
ret
sub
add
rolb
inc
popa
bound
xchg
pop
dec
add
int
cmp
adc
lcall
sub
rclb
mov
out
xchg
xchg
rcl
jl
icebp
sub
out
loope
xchg
push
pop
cmp
add
jns
mov
sahf
inc
arpl
mov
in
rolb
inc
jl
mov
jl
in
cmpsl
out
mov
cld
and
fldcw
insb
push
cmp
shl
sbb
sbbl
or
fs
lret
add
jle
or
fistl
jb
mov
xchg
sub
lcall
popf
cwtl
push
dec
enter
jb
sti
loope
ljmp
and
les
sub
adc
repnz
cli
mov
mov
aad
aas
out
movsl
fimull
cmpsl
rorb
cld
mov
in
mov
or
cmp
std
es
rorb
sub
jg
or
xchg
dec
push
daa
sbb
out
and
push
pop
test
lret
mov
mull
es
movsb
imul
xchg
movsl
mov
push
test
mov
arpl
insl
in
lret
sub
stos
lahf
push
aam
clc
sti
cmp
call
and
fsts
dec
pop
mov
adc
xchg
cmp
inc
push
mov
add
cmp
xor
ret
xor
in
test
cltd
jnp
xchg
mov
mov
popa
xchg
pusha
ja
lahf
jo
mov
cmpsb
inc
cmp
hlt
pusha
cmpsb
inc
sbb
push
and
lcall
sbb
cmp
sbb
decl
nop
sub
sbb
rclb
ficompl
dec
hlt
sub
pusha
shlb
das
cmpsb
and
xchg
jecxz
les
mov
mov
mov
not
inc
mov
sub
and
es
xchg
xorb
dec
lcall
dec
or
daa
std
dec
imul
mov
les
les
mov
adc
fimuls
mov
push
mov
sbb
mov
aam
and
or
iret
mov
and
add
imul
aad
rorb
push
xchg
test
sub
fwait
mov
xchg
inc
dec
adc
daa
jo
les
xchg
and
fs
sub
or
mov
jne
mov
and
pop
sub
push
cmp
mov
cmc
adc
call
xorb
adc
scas
push
add
int
je
dec
frstor
nop
sti
sbb
lret
aaa
mov
dec
and
insl
mov
iret
mov
aam
jo
inc
dec
imul
jmp
push
mov
or
lret
test
add
xchg
mov
xchg
cmpsb
push
outsl
mov
pop
mov
leave
mov
push
mov
mov
adc
sbb
jmp
inc
push
aas
cmpsl
pusha
push
sti
ret
adc
mov
fcmovne
sub
mov
arpl
pusha
pop
inc
mov
mov
xor
cli
sbb
sbb
aad
or
out
es
mov
sbb
gs
dec
lret
or
jbe
adc
add
into
adc
pushf
mov
out
scas
es
cwtl
or
dec
dec
cwtl
pop
mov
xlat
add
es
push
ret
add
xchg
mov
jle
movsb
cmc
test
test
sbb
popf
rcrb
mov
gs
cmp
es
mov
out
push
mov
and
dec
pop
sahf
ljmp
push
fisttps
inc
mov
popf
out
inc
pop
int3
mov
iret
data16
add
clc
aas
push
es
inc
push
scas
cmc
sbb
fidivl
pop
pop
push
mov
insb
push
sbb
imul
mov
xchg
std
cmp
cmc
test
ret
mov
ja
cmp
push
and
mov
mov
test
data16
mov
aam
rorl
cmp
incl
les
sti
adc
enter
cmpl
mov
jge
test
popa
adc
push
xchg
pop
rcl
rol
jnp
loopne
imul
inc
daa
loop
pop
sub
icebp
push
cwtl
movsl
fcomps
fbstp
arpl
sub
jecxz
out
flds
inc
add
imul
dec
imul
and
mov
fstpt
pand
inc
jns
and
xor
mov
inc
imul
cmp
outsl
xchg
lea
and
sub
lahf
adc
sbb
ss
jbe
ds
sbb
sbb
idivl
mov
ror
std
jb
sbb
adc
loopne
sbb
cmp
loop
stos
adc
jnp
sbb
lock
stos
sub
xor
cmp
inc
testl
fwait
sub
clc
sbb
sbb
sahf
scas
pop
shrb
shrl
mov
incb
bound
sub
mov
loope
xlat
pop
xchg
sub
in
jmp
mov
push
incl
outsl
inc
adc
out
inc
repnz
insl
leave
mov
mov
jmp
or
orl
cmpsb
addb
popf
enter
lahf
jnp
stos
int3
arpl
data16
stos
push
fisttpl
dec
aam
sarl
pop
xchg
lcall
or
mov
pop
mov
testb
aam
cmpsb
adc
pop
lcall
imul
pop
mov
push
push
mov
mov
pop
rclb
mov
in
out
push
sbb
into
icebp
push
xchg
mov
xor
add
test
es
ret
js
cmp
test
outsl
icebp
jp
daa
pushf
inc
mov
lea
mov
sti
pop
test
test
test
jle
movsl
dec
or
or
lea
adc
movb
or
shl
sub
sub
imul
out
ja
fwait
imul
or
das
dec
push
inc
aaa
inc
loop
fbld
dec
test
jle
dec
cmpsb
ds
mov
jmp
adc
pop
es
pop
add
add
stos
lret
outsl
rcrl
add
inc
cmp
iret
fstp
ljmp
ljmp
lods
lock
insb
push
add
ljmp
hlt
sub
sbb
xchg
push
sti
mov
xor
out
mov
xor
jo
xor
xor
cmp
add
mov
sbb
cmp
shl
out
mov
dec
pop
dec
iret
mov
addr16
push
sarl
mov
mov
daa
sbb
movb
cmpsb
xor
xchg
arpl
pushf
cmp
jns
ficoms
loopne
loop
xor
mulb
in
cmp
mov
mov
idivl
pop
dec
imul
mov
xor
xchg
and
jb
aas
adc
cmp
push
cmp
push
pop
add
and
pop
cmp
mov
mov
movsb
jg
call
sbb
aad
sub
rcr
test
and
in
arpl
inc
jns
xchg
scas
cmp
in
dec
dec
adc
jo
cld
jle
xchg
fwait
in
mov
pop
xchg
and
ret
in
mov
or
loop
aas
push
aaa
ja
mov
ja
decl
je
add
jl
arpl
adc
and
lds
ss
divl
pop
push
out
or
decb
xchg
fisubrl
ficomps
flds
jmp
movsl
adc
ret
pop
outsb
loope
lds
adc
int
push
ja
push
xor
jae
pop
and
movsl
inc
ja
mov
xor
jmp
cwtl
outsb
xorb
pop
cmp
cmp
xchg
and
mov
sub
sbb
movsl
sbb
stos
leave
in
add
fst
sbb
pop
jecxz
icebp
dec
stos
leave
xor
pop
pop
adc
movl
cli
jns
add
clc
jle
push
pop
pop
adcl
add
lock
xor
sub
pop
xchg
mov
ficoml
ret
mov
aam
sbb
jno
in
dec
ss
mov
js
pop
xor
pop
push
ja
xor
mov
mov
jns
test
jb
sbb
adc
aad
mov
ret
jmp
add
leave
and
fwait
xlat
icebp
popa
out
repz
stos
sub
jne
loopne
add
out
mov
out
sbb
mov
test
jecxz
int3
pop
mov
imul
cmpsb
lret
ret
add
mov
inc
cmpsl
and
mov
dec
ficomps
inc
popa
inc
pop
hlt
cmpl
rolb
aad
push
gs
mov
pop
out
daa
clc
bound
lock
test
stos
sub
repnz
add
jnp
xchg
in
pop
cli
mov
cmp
cltd
dec
test
mov
dec
inc
gs
rol
push
lcall
icebp
mov
push
int3
or
mov
in
cmc
in
mov
xchg
mov
nop
movsl
ja
adc
cld
push
mov
outsl
adc
push
ror
xorb
or
pusha
xor
cmp
in
xchg
loope
mov
push
xlat
js
clc
ljmp
or
adc
mov
ss
lods
leave
and
insb
test
fcmovnb
cmpsb
pusha
cwtl
lret
xchg
mov
scas
inc
popa
pop
sbb
pop
jbe
jecxz
push
nop
push
cmc
mov
lret
pop
sub
pusha
sub
enter
inc
popl
mov
in
notb
jnp
add
shl
inc
test
xor
nop
push
dec
rcr
push
roll
jp
cmp
icebp
and
jno
dec
and
fsubr
cmp
mov
cmpsl
lret
popa
stc
into
mov
cmp
clc
stc
push
insl
and
cmp
jg
gs
add
mov
stc
enter
scas
pop
or
iret
xor
sbb
xor
push
jo
jp
and
push
out
adc
fcomps
sahf
pop
jle
xchg
pop
enter
sbb
or
jl
mov
xor
in
and
aad
mov
inc
test
bound
inc
mov
iret
adc
aam
adc
call
push
cmp
cld
mov
sti
mov
dec
je
jns
cmpsl
loop
sbb
lret
and
lret
mov
iret
mov
push
testb
xchg
jns
das
je
inc
arpl
add
ds
std
lret
pusha
loop
xorl
cmp
cmp
test
pop
push
subb
pop
mov
jmp
mov
shrb
popa
add
cmp
clc
mov
lock
xchg
jno
lds
ss
fdivrs
lock
lret
sub
lret
repnz
add
pop
scas
lods
xlat
pop
sbb
out
pop
out
or
loop
xlat
popa
push
ret
in
test
push
fcoml
ror
mov
mov
sbb
loopne
mov
cmp
ret
into
mov
adc
adc
push
cmp
and
xchg
ljmp
fcompl
stos
idivl
jbe
mov
cld
cs
es
push
dec
and
mov
mov
popf
out
sub
lret
mov
or
add
icebp
in
adc
mov
mov
test
pop
notl
cmc
js
fistpll
push
rorl
arpl
push
popf
inc
sbb
lods
call
mov
xchg
scas
lea
and
std
sub
fildll
xor
xchg
test
cmp
jb
fsubrs
xor
es
daa
movsl
xor
daa
mov
mov
or
cmp
xchg
and
inc
out
or
or
sub
sbb
mov
ss
in
aam
push
inc
sbb
pusha
fbstp
pop
xor
test
popf
sub
inc
cmp
bound
das
or
mov
cmp
adc
out
sub
dec
mov
out
cltd
ds
ja
inc
fistpll
lock
xchg
jns
test
ret
imulb
mov
jno
hlt
fwait
mov
cmpsl
pop
outsl
addr16
insl
sbb
pusha
dec
push
cmp
pusha
and
int
cmp
mov
cmp
dec
stos
pop
lret
je
add
cmp
xlat
adc
fs
ljmp
mov
shll
mov
jp
or
push
pop
aaa
out
lret
mov
mov
out
push
jecxz
sbb
ja
gs
push
in
lret
fiadds
mov
lods
loope
dec
ficompl
repnz
mov
sub
sahf
adc
pusha
data16
push
push
add
mov
xchg
gs
inc
shll
push
ja
push
or
stc
dec
imull
pusha
scas
js
dec
mov
cmp
mov
or
out
outsb
mov
loopne
mov
xor
inc
sub
push
lods
cltd
jo
fdivl
inc
pop
add
xchg
dec
add
dec
jp
or
pop
bound
scas
sub
cmp
adc
aad
movsb
inc
cmp
dec
dec
jo
mov
jl
sbb
add
stos
mov
or
repz
aaa
ds
jmp
jp
push
adc
jecxz
ror
out
mov
loop
stos
cmp
test
xor
arpl
shll
shrb
add
aaa
out
xchg
inc
out
sub
inc
fisttps
and
jmp
xor
mov
ljmp
data16
adc
sub
in
cs
jge
mov
push
sub
adc
iret
add
cmp
cltd
add
jg
sti
mov
jno
inc
outsb
push
mov
sub
cmp
jae
subb
ljmp
outsl
leave
andb
push
imul
xor
jns
push
call
mov
pop
jecxz
pushf
sbbb
cltd
and
add
mov
stos
or
push
sti
sub
pop
inc
jp
loop
sti
push
imul
stc
pop
inc
sbb
jmp
push
add
movsb
or
or
jbe
cmc
popf
leave
xchg
xchg
scas
fwait
cmp
sti
cmp
cmp
xchg
lods
repz
sub
adc
call
sti
mov
icebp
sub
xor
scas
imul
mov
scas
xchg
mov
add
sahf
addr16
jb
clc
lret
cwtl
or
push
loopne
in
pushf
adc
sbb
int3
add
sar
cmp
lock
int3
stc
lods
dec
lods
mov
out
adc
std
inc
cltd
out
addr16
xchg
out
enter
stos
dec
insl
cmp
ret
sbb
add
insb
xor
mov
mov
jg
pop
push
cmc
xchg
dec
jge
inc
inc
sbb
shll
cmc
cmp
mov
adc
inc
adc
das
gs
hlt
and
jmp
mov
lahf
int3
cmp
test
dec
call
push
stos
jmp
inc
xchg
jmp
xchg
or
sahf
mov
xchg
outsl
ficompl
imul
sarb
aad
xchg
lods
iret
dec
leave
jmp
dec
push
sbb
rorl
add
dec
push
dec
jl
push
dec
dec
pop
mov
adc
daa
push
mov
fistpll
jns
lock
mov
fsts
xchg
mov
es
or
in
leave
or
cmpsl
in
jp
in
jle
in
test
lret
out
movsl
jno
sti
xchg
cmp
mov
mov
sbb
xor
rcll
iret
push
cmc
push
or
jne
pop
rorl
daa
nop
sbb
jb
mov
divl
stos
mov
in
clc
fidivs
and
scas
or
xor
push
sahf
movsb
outsl
sahf
sbb
into
mov
sbb
mov
addr16
cmp
push
fimull
fidivrl
sbb
push
cwtl
repnz
pop
insb
dec
jg
cld
int3
addr16
xchg
or
dec
mov
repz
pop
inc
sbb
dec
pandn
xor
mov
xchg
aad
cld
adc
das
xor
aaa
scas
pop
incl
iret
gs
mov
shl
xor
inc
imul
or
add
lahf
xchg
fbstp
lret
jecxz
add
inc
lea
adc
popa
jo
daa
rclb
xorb
mov
sti
cli
cmc
sbb
in
negb
test
es
mov
mov
xchg
pop
cmc
fildll
jle
sbb
inc
sahf
int3
fs
sub
xchg
ret
cmp
cwtl
add
adc
cmp
xchg
adc
xchg
ret
add
or
cs
in
push
inc
cmp
aaa
psubb
stc
sbb
insb
sub
cmpsb
cmp
out
out
sbb
insb
std
rcrb
jns
sbb
or
mov
jbe
js
fcoms
divl
enter
pop
pusha
mov
push
aas
and
dec
and
dec
adc
mov
jno
and
cmp
aad
fcomps
ljmp
cmc
repz
dec
xor
negb
mov
test
sarb
out
popl
or
cltd
and
imulb
and
fistpll
filds
xchg
push
adc
mov
mov
sub
or
sbb
fidivs
sub
pop
mov
pop
xchg
das
xchg
into
jbe
fistpl
rorl
stos
iret
notb
xchg
fisubl
mov
out
jnp
and
shrb
or
add
adc
popf
ljmp
add
lds
dec
pop
test
jbe
mov
rorl
cmp
cmc
mov
fdiv
flds
xor
xchg
xchg
out
jmp
mov
mov
sahf
cltd
pop
xor
xor
mov
jno
repnz
call
and
repz
jecxz
shrl
sbb
sub
clc
push
call
and
repz
jecxz
shrl
sbb
sub
clc
push
call
and
repz
loop
shrl
sbb
sub
stc
push
call
mov
cmpsl
or
dec
rcl
push
pop
insb
xlat
jl
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pusha
dec
jo
inc
nop
push
add
cmp
sbb
loopne
icebp
and
adc
add
push
nop
inc
pusha
mov
mov
and
xor
adc
adc
add
mov
adcb
inc
pusha
and
inc
cmp
and
xor
add
adc
loopne
roll
dec
shlb
daa
fisttps
cmc
and
inc
aas
mov
into
inc
in
aad
mov
sbb
rclb
inc
in
cmc
in
rcll
sti
mov
lret
fcomip
xor
nop
in
sbbb
das
adc
mov
xlat
push
sbb
movsl
inc
mov
fmuls
mov
adc
in
nop
push
pusha
jo
mov
adcb
lock
aas
insl
iret
jne
ds
lock
add
nop
dec
mov
aam
movsl
sbb
rorb
cmpsb
xor
lods
add
and
rolb
mov
addl
arpl
xor
dec
aas
out
clc
sbb
jno
lahf
lds
les
push
mov
lock
add
adc
mov
out
add
dec
mov
push
nop
cs
add
sub
cmp
fs
xchg
shlb
pop
mov
jecxz
and
icebp
cmp
and
inc
lods
test
jbe
jne
addr16
sub
xor
sub
sarb
xchg
xor
add
adc
loopne
lock
adc
add
push
nop
inc
pusha
mov
mov
and
xor
add
adc
loopne
lock
adc
add
push
nop
inc
pusha
mov
ja
xor
fisubrs
ret
jmp
out
xchg
lock
jmp
jo
les
fs
adc
jl
hlt
imul
out
push
popf
xchg
sub
inc
mov
sbb
or
pop
out
nop
test
mov
adc
das
iret
and
mov
push
jnp
rcr
cs
in
adc
mov
arpl
push
mov
add
movsb
jne
mov
dec
mov
mov
sbb
xchg
xchg
insl
test
mov
add
in
popa
lock
lock
cmp
pushf
add
xchg
stos
out
enter
shll
imul
or
std
lock
inc
mov
mov
stos
add
inc
jne
sub
test
mov
lds
int
decb
pop
cltd
mov
stc
adc
sub
aam
dec
jg
scas
add
fisubs
ja
rcr
inc
outsl
js
jo
mov
inc
dec
dec
inc
dec
sbb
or
mov
fwait
sarb
sbbl
xor
lock
lcall
pop
in
sbb
out
bound
push
add
insl
in
aam
in
inc
insl
jp
mov
lea
adc
dec
rcl
mov
lods
pop
pusha
pop
add
lds
xchg
jle
push
add
mov
or
xchg
sbb
mov
das
cwtl
xchg
das
in
adc
dec
movsb
arpl
sbb
pusha
fdiv
std
aad
cld
mov
mov
or
and
sub
in
out
int3
add
mov
iret
outsl
pop
in
int3
pop
push
cmpb
std
pop
loope
cmp
cmp
mov
stos
gs
outsl
pop
push
insb
ror
mov
sti
mov
dec
add
cmp
movsb
sbb
mov
dec
pushf
push
jnp
shlb
outsl
adc
sar
mov
add
add
ja
loop
mov
add
adc
inc
nop
arpl
lea
data16
rcrl
das
or
push
adc
cltd
inc
pushf
adc
fabs
or
cltd
or
mov
fisubrs
jle
push
inc
jge
mov
hlt
loope
pop
push
jg
and
push
aas
push
add
lret
popa
loop
scas
xor
dec
add
jmp
out
add
xchg
sbb
xor
cmpsb
aaa
adc
dec
iret
test
add
mov
daa
aas
and
inc
mov
loopne
jbe
mov
xchg
xor
mov
daa
cmp
in
or
xor
sub
js
xchg
fstpl
mov
dec
sbb
sub
dec
mov
jecxz
test
and
pusha
or
mov
testb
push
shlb
sub
jge
fwait
cmp
cwtl
mov
sbbl
test
cmp
fidivrs
out
fs
xor
aam
outsb
fsubr
push
cli
add
adc
pop
sti
jecxz
adc
mov
iret
loopne
popa
jne
std
xor
mov
mov
dec
add
sbb
int3
ds
cmpsb
mov
push
sub
roll
in
mov
in
mov
jmp
mov
push
les
lcall
or
sbb
ret
jns
push
imul
lret
iret
sub
add
add
dec
bound
stos
pop
xor
pop
and
mov
pusha
dec
outsl
mov
push
pusha
icebp
or
mov
inc
jns
pop
loope
add
pushf
xchg
push
add
movsb
out
xlat
lret
add
fiadds
lods
int
dec
movsb
lods
mov
in
stos
jo
push
lret
push
sbb
sbb
add
lods
xor
dec
loop
test
repz
and
mov
and
jb
sub
test
jecxz
or
xchg
add
jbe
jp
aam
or
or
jbe
andb
lods
sti
add
addr16
cli
inc
sbb
sbb
jecxz
push
and
orb
sub
out
add
mov
lea
add
inc
daa
cltd
sub
fisubl
adc
jo
mov
imul
sarb
xchg
pop
aam
mov
jecxz
mov
aaa
clc
add
mov
add
test
mov
xchg
mov
and
mov
loope
stos
pop
pop
lock
or
mov
stc
daa
mov
mov
inc
popf
int3
lods
dec
imul
adc
xor
cmp
dec
adc
jle
pop
stos
icebp
aaa
mov
stos
gs
lret
jbe
fiadds
sub
pop
int
in
cmp
ss
dec
mov
mov
xor
xor
jle
jae
rcrb
sub
jb
lcall
scas
inc
dec
push
and
push
adc
adc
inc
out
push
ret
shr
stc
ss
out
int3
or
insb
or
sub
mov
push
fwait
iret
sub
jo
or
cmp
jecxz
mov
push
adc
addl
sub
xchg
mov
mov
mov
mov
push
mov
test
ret
dec
js
jle
or
pop
rorb
cmpb
pop
and
fwait
lods
fs
dec
mov
outsb
and
js
lcall
fildll
and
sahf
fnstenv
mov
mov
adc
imul
dec
pop
enter
das
daa
mov
femms
es
xchg
mov
jnp
loopne
sbb
jo
xchg
xor
mov
icebp
inc
mov
push
cmp
stos
mov
cmpsb
mov
mov
inc
jecxz
imul
push
fisttps
or
lahf
aas
mov
mov
test
fdivrs
arpl
xor
test
mov
rcr
clc
cmp
dec
push
subb
popf
lret
les
push
fstl
sahf
out
es
and
stos
inc
jmp
mov
xchg
repz
jle
inc
lods
rcl
les
xchg
jb
cwtl
adc
adc
rorb
mov
call
movsb
cmpsl
cmp
cmp
mov
ror
call
inc
cld
xor
sub
push
sbbb
and
stc
fnsave
mov
push
push
fisubrl
lahf
ds
mov
ss
jbe
or
cltd
addr16
sub
or
fcom
iret
push
xor
sbb
push
icebp
jbe
mov
or
movsb
mov
ficoml
test
or
pop
xchg
fcoms
xchg
je,pt
push
into
pop
in
les
orb
in
lahf
lret
icebp
dec
lods
inc
icebp
jg
sarb
mov
xchg
pop
push
push
dec
dec
lea
mov
cld
leave
and
aaa
daa
mov
jo
into
clc
sbb
call
xchg
int
push
je
sub
cltd
scas
pop
sbb
or
sbb
inc
jle
rolb
pop
in
aaa
mov
push
mov
movsb
andl
in
in
movsl
adc
mov
or
popa
jne
xor
inc
lret
sub
addb
insb
movsl
sbb
pop
fmull
mov
int
xchg
imul
pop
scas
mulb
adc
pushf
jae
shlb
inc
imul
leave
adc
es
pop
mov
xor
lock
mov
icebp
xor
lea
repnz
fsubl
sbb
fwait
inc
push
jno
mov
lret
sbb
push
and
fadds
sahf
sub
and
inc
adc
jns
lret
lahf
rcll
loop
pop
les
daa
in
iret
fistpll
fisttpll
dec
dec
and
mov
mov
adc
in
imull
sbb
sub
fyl2x
popf
cmp
std
in
adcl
fwait
inc
jg
or
outsb
mov
or
or
out
arpl
mov
or
and
imull
xchg
and
stc
loope
dec
int3
jg
movsb
loop
adc
mov
pop
mov
mov
mov
fcomi
idivb
inc
cmpb
pop
xchg
dec
sbb
sub
leave
xchg
push
adc
sub
mov
pop
sub
fists
mov
push
inc
leave
push
in
sbb
xchg
shl
fdivl
sbb
popf
mov
ja
idiv
rorl
xchg
scas
mov
add
jnp
and
pop
sub
repnz
pop
dec
js,pt
sahf
sub
ror
daa
out
pop
xor
roll
mov
or
sahf
push
cmp
outsb
loope
int
mov
out
fs
mov
aam
pop
jp
popf
fistpll
push
dec
daa
jecxz
test
push
xor
out
es
cmp
mov
pop
mov
dec
fdecstp
inc
mov
jns
ss
loope
es
mov
sub
push
loopne
mov
push
lret
mov
pop
cmp
inc
adc
cli
or
out
pop
xor
push
sbb
push
dec
sbb
inc
out
das
leave
insl
js
jae
aas
inc
xor
sahf
dec
call
out
push
mov
xchg
int3
outsl
scas
push
jb
cmp
adc
mov
fidivl
cmp
fwait
jl
test
pop
adc
xlat
lret
pop
inc
push
add
call
divb
test
jmp
imul
jo
mov
daa
sbb
aam
and
add
fldl2t
test
and
jmp
push
mov
and
jns
and
xor
idivl
insb
lretw
sub
movsb
mov
jp
jno
or
bnd
and
pusha
push
push
mov
dec
dec
gs
mov
push
rcrb
ret
popf
cs
xor
int3
clc
lret
div
adc
and
xor
jle
std
xlat
jno
sbb
jbe
sbb
xchg
and
add
add
jbe
or
call
scas
stc
jg,pn
adc
fcomp
sahf
cs
xchg
xchg
jp
lahf
call
in
push
mov
mov
lods
scas
in
dec
xchg
js
mov
pop
cmp
adc
icebp
mov
imul
push
jne
mov
outsl
mov
inc
sbb
mov
mov
jne
xchg
inc
jg
icebp
xor
mov
pop
mov
inc
mov
pop
fwait
xor
in
fcoml
sbb
jo
adc
int3
dec
jmp
jle
lcall
aas
daa
xchg
pop
sbb
out
sub
lea
or
in
and
addr16
add
sbbl
out
cli
pop
into
frstor
cmpsl
imul
hlt
repz
xlat
test
add
mov
xchg
loop
call
add
nop
fwait
popf
call
xchg
mov
adc
call
xchg
or
jne
lds
mov
aad
movsl
jnp
out
test
fwait
inc
int
pop
imul
xchg
aam
nop
xlat
dec
pop
repnz
mov
cmpsb
les
mov
add
imul
jnp
xchg
xorl
sbb
cs
xor
dec
dec
in
popa
iret
dec
jmp
ss
cmp
sbb
addr16
xchg
daa
ds
mov
dec
push
test
cmp
xchg
xor
enter
mov
push
jne
xor
std
jl
fimuls
popa
in
pushf
xor
popa
loope
inc
or
fisubl
arpl
push
xchg
mov
dec
and
mov
adc
popl
mov
stos
aaa
aaa
outsl
push
cmp
inc
lea
and
pushf
sub
loope
out
inc
or
cmp
and
imul
pop
mov
sbb
inc
aam
and
sbb
jns
dec
push
add
nop
jnp
xchg
nop
mov
sub
and
scas
xor
jne
movsl
pusha
insb
mov
rolb
das
push
outsl
push
adc
sti
hlt
aas
scas
pop
popf
push
add
and
lcall
sbb
inc
sub
icebp
sti
push
mov
mov
cmp
insb
dec
out
ljmp
pop
mov
or
lds
repnz
sub
ret
imul
inc
in
cmpsb
sbb
mov
aaa
pop
cmc
std
mov
fucom
es
addr16
enter
ja
ret
lret
sub
aad
push
stos
inc
xlat
mov
xor
test
cmp
and
movsb
and
mov
negl
aad
mov
push
mov
sbb
movsb
nop
push
push
add
lcall
jno
xchg
sbb
cmpl
test
inc
dec
adc
mov
rcl
dec
sbb
orb
test
scas
movsl
int3
sbb
mov
iret
mov
inc
shl
mov
sub
jbe
mov
mov
push
dec
sti
mov
pavgb
mov
imul
mov
pop
sbb
jne
into
and
dec
shlb
add
xchg
test
clc
repz
test
fldenv
mov
testl
push
repz
sarl
jo
xchg
or
mov
dec
stos
cmp
dec
xchg
shrl
idiv
push
mov
stos
or
int3
fcomps
push
pop
mov
leave
add
push
pop
jnp
mov
adc
bound
stos
cmp
stc
in
fstps
xchg
pop
test
push
daa
sub
cltd
push
mov
xchg
jl
fcoml
xbegin
sub
lret
sbb
jmp
sbb
sar
icebp
mov
sub
cmp
jo
call
xchg
sbb
mov
les
mov
loop
jnp
std
mov
es
gs
jb
fcomps
shrd
rol
aas
jle
and
and
cmp
add
inc
rorl
or
lds
repz
pop
out
jo
cmpsb
add
ja
test
push
jle
out
pop
sub
imul
add
leave
sbb
jne
pushf
jecxz
sub
mov
mov
lods
pop
pop
iret
xor
dec
pushf
test
dec
jge
test
fimull
jbe
leave
and
mov
cmpsb
dec
mov
sub
in
jl
shrl
cmp
ljmp
pusha
mov
sub
enter
inc
mov
jae
jbe
dec
hlt
pop
or
sbb
jecxz
mov
leave
mov
jp
xchg
pop
stc
test
mov
test
xor
fs
mov
ss
or
dec
pop
clc
cmp
cmp
add
movsb
cld
xchg
inc
mov
sbb
clc
pop
mov
jge
mov
push
sbb
xor
leave
test
push
call
loopne
jl
add
incb
jbe
sub
dec
popf
xor
xchg
int3
xorb
jp
popa
xor
push
adc
in
mov
cmc
xor
insb
cld
out
push
inc
xor
adc
add
or
aam
pop
orl
out
mov
shll
pushf
and
cltd
adc
cmp
and
push
xor
jl
xchg
push
push
fwait
cld
sbb
adc
rorl
mov
mov
mull
xchg
dec
jecxz
aas
mov
xchg
icebp
mov
sahf
fs
sub
nop
int
gs
adc
sbb
insl
xchg
leave
adc
fwait
inc
fs
fs
icebp
xchg
xor
subb
imul
and
mov
cmp
jae
cs
sbb
mov
test
push
push
loope
adc
divl
lret
pop
jmp
pop
dec
jns
inc
add
sbb
les
stc
mov
pusha
lret
lcall
push
adc
test
xchg
sub
dec
out
xor
cmp
xchg
sub
ret
mov
sub
jo
test
or
iret
pusha
les
mov
in
dec
cmpsb
jecxz
xor
add
rcrl
and
jle
in
add
mov
pop
jno
sahf
jbe
cmp
and
mov
rcll
mov
ficoms
jae
cmpsl
jns
jne
aas
lcall
or
mov
cmp
in
flds
rcl
addr16
outsb
jp
fcomps
aam
hlt
mov
push
repnz
or
outsl
mov
int
xchg
or
call
mov
addr16
mov
in
imul
xor
fcompl
mov
mov
xor
test
shl
stos
add
sahf
push
fiaddl
inc
push
rcrb
and
inc
xor
fwait
pusha
cmp
imul
sahf
lock
addr16
xchg
stos
xlat
aaa
lret
mov
inc
add
test
push
jmp
pop
sub
ror
inc
cmp
nop
sub
sahf
loope
mov
repnz
pop
mov
lea
iret
rcrb
out
ds
imul
pop
sub
aaa
mov
mov
call
xchg
sub
push
cmpsl
adc
dec
icebp
jb
mov
ss
not
out
dec
or
adc
cmp
add
mov
and
xlat
mov
subl
loopne
xor
xchg
inc
test
mov
es
jae
ficompl
mov
mov
adcb
inc
std
and
xchg
mov
pusha
jo
pop
and
xchg
or
dec
jnp
mov
addl
shrl
in
lods
push
add
xchg
sub
sbb
out
pop
mov
fs
and
frstor
mov
dec
lret
xor
popf
adc
ss
sbb
lret
std
jle
addr16
in
pop
fs
or
hlt
lret
fstpl
cmp
js
inc
pop
or
shrb
adc
gs
ret
loopne
imul
mov
cmp
movsb
jne
adc
lock
or
xor
ret
jg
dec
loopne
mov
sbb
dec
push
add
cmc
and
or
mov
fnsave
mov
rol
xchg
fists
dec
je
jb
out
pusha
cmc
enter
lea
or
mov
or
outsb
adc
mov
xor
dec
pop
cmp
hlt
pop
xor
cmp
aas
add
xchg
pop
xor
cwtl
insb
ds
jbe
leave
pop
or
iret
jle
fists
mov
jmp
movb
mov
jg
jns
mov
sarl
mov
inc
pop
inc
push
xchg
and
scas
sub
sub
push
int3
loopne
mov
jb
adc
lret
push
lods
addl
dec
push
out
jo
jnp
xorl
repnz
call
test
jmp
mov
js
dec
insl
and
jns
sbb
mov
xchg
xlat
dec
lea
push
les
outsb
fs
icebp
inc
sub
push
into
lahf
dec
incl
mov
dec
xchg
repnz
scas
jmp
shrb
insl
inc
and
mov
sarl
and
rcrb
repnz
push
scas
pop
dec
roll
dec
cmc
add
movsl
sbb
sbb
into
inc
add
cmp
mov
arpl
or
cmp
loopne
imulb
mov
inc
cmp
shll
inc
lahf
scas
jae
inc
rolb
sub
nop
push
jmp
push
repnz
out
lods
clc
cmc
out
pop
cmp
xor
aas
push
gs
dec
adc
loop
push
fsts
rcl
hlt
movsb
push
mov
cmp
incl
mov
shlb
push
dec
or
dec
jle
sub
add
ss
scas
sbb
cmp
inc
int3
jg
cmp
xor
inc
inc
add
pushf
insb
cs
shll
pop
stc
lods
dec
sbb
mov
subb
test
cli
adc
mov
fdivrl
push
inc
mov
pusha
dec
push
inc
daa
pop
xor
loop
call
sbb
mov
ror
ja
shrl
ret
lea
jmp
sbb
push
xchg
cmp
push
mov
push
dec
push
inc
lock
jnp
jecxz
mov
fistpl
or
push
test
arpl
fisubs
lret
add
rcrl
jbe
cmp
or
idivl
cmc
loope
shlb
pop
sahf
dec
push
mov
adc
lea
mov
push
jns
call
in
inc
cli
mov
jmp
pop
nop
stos
ds
push
push
stc
sub
xor
xorb
jmp
cmp
xor
jl
imul
es
mov
or
sahf
test
xor
cmp
push
sbb
add
jge
ljmp
and
aas
sub
not
scas
fnstenv
addr16
inc
cmp
cmp
lea
not
jo
push
jl
pop
adc
xlat
adc
loop
mov
adc
lds
gs
loop
pop
scas
pop
leave
pop
test
jns
sbb
aaa
addb
cmpsb
push
sbb
lock
cli
xchg
pop
mov
fwait
insl
jmp
lods
jle
sub
sbb
scas
mov
sbb
dec
dec
fbstp
lret
xor
lods
sbb
jnp
sbb
push
push
sbb
fbstp
jmp
andb
xor
add
adc
loopne
lock
adc
add
push
nop
inc
pusha
mov
mov
and
xor
add
adc
loopne
lock
adc
add
push
nop
inc
pusha
mov
call
mov
rclb
and
adc
add
jo
inc
pusha
mov
mov
and
xor
add
shl
lock
shlb
clc
rcrb
jecxz
or
cmp
sub
jge
and
insb
leave
pushf
flds
mov
cltd
int3
test
sbb
or
cmp
sub
pop
sbb
cmp
mov
mov
or
and
xor
sub
leave
jg
mov
leave
xlat
lods
loope
cli
mov
add
sbb
cmpsl
dec
mov
xchg
mov
pop
add
and
mov
and
stc
mov
inc
in
pushf
mov
shlb
xlat
popf
mov
test
aas
sbb
fs
jl
jbe
mov
mov
rorb
push
or
dec
push
or
or
mov
push
add
int3
int3
add
or
pop
or
cmp
sbb
jl
mov
and
xchg
leave
int3
leave
jae
pop
fists
icebp
xor
and
in
add
inc
int3
mov
adc
fsts
and
lods
add
fwait
inc
dec
cld
lods
adc
cmp
out
data16
cltd
popf
mov
adc
cwtl
mov
pop
sbb
sbb
jns
or
sub
jne
test
xchg
jmp
les
mov
jns
or
cmp
push
and
add
jmp
lock
in
cld
in
orl
sbb
dec
das
jne
sub
cmp
lods
in
in
test
mov
mov
and
imul
xor
dec
sub
leave
pushf
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fcompl
in
dec
sbb
mov
sbb
mov
nop
shlb
mov
ss
mov
push
movsb
sarl
rcll
sub
daa
int3
jnp,pt
xchg
xor
popf
test
cmpsl
or
addr16
cmp
fs
mov
or
lods
mov
into
jmp
imul
pop
mov
adc
imul
push
push
and
mov
stos
inc
push
fildl
repz
xchg
pop
lcall
pop
xchg
cwtl
int
cmc
pop
push
pop
idiv
pushl
xchg
repz
add
inc
jmp
adc
aam
jnp
xorl
leave
in
mov
es
inc
pusha
lcall
nop
daa
mov
mov
jae
fs
pop
pop
xchg
insl
andb
xlat
mov
xchg
inc
and
test
push
push
mov
les
and
test
fiaddl
test
mov
add
je
cmpsb
adc
adc
and
fadd
jg
jnp
mov
arpl
jl
mov
in
push
push
push
push
aas
loop
rolb
and
xchg
nop
aam
enter
dec
stc
jge
inc
xchg
jmp
call
hlt
cmp
test
les
out
push
ja
aas
jne
icebp
pushl
adc
stos
cmpb
push
jne
in
outsb
clc
inc
ss
lock
cs
sub
push
inc
fsubrs
cmp
inc
add
mov
push
dec
sbb
mov
fstl
add
test
mov
subb
cwtl
stc
sub
mov
push
shrl
mov
call
mov
rorl
mov
lea
in
lock
lods
add
shlb
xchg
inc
dec
imul
cmpsl
lods
dec
jb
mov
cli
push
jp
out
iret
in
out
jae
mov
adc
fdiv
aaa
sub
pop
cmpsl
cmpsb
mov
adc
hlt
es
push
imul
movsb
jg
rclb
stos
repnz
stos
push
test
push
jns
js
les
imul
sub
mov
andl
sub
sub
dec
xchg
inc
sub
mov
sub
out
pop
out
jge
repz
mov
lods
push
mov
icebp
and
add
ds
movsb
push
movsl
or
lahf
cmpsl
mov
pop
xchg
xchg
aam
inc
pop
pop
sub
stos
pop
fwait
gs
jns
xor
fistps
shr
xlat
call
jo
imul
inc
xchg
mov
test
mov
popf
jo
cli
lret
mov
push
sbb
icebp
pop
push
or
xchg
fildl
std
nop
mov
inc
jbe
inc
aad
lahf
push
js
mov
nop
jbe
inc
push
les
addr16
lcall
inc
mov
cmp
pop
fiadds
dec
adc
orb
pop
fimuls
sbb
cltd
cld
xchg
mov
jo
and
repnz
aad
sbb
fs
add
arpl
pop
insb
push
roll
imul
cld
jmp
xor
push
sub
pop
and
or
insl
pop
adc
mov
aam
lods
jnp
testl
outsb
mov
cmp
pop
sti
and
cmpsl
in
aaa
or
sti
cltd
pushf
push
mov
dec
cwtl
jg
xor
push
mov
cmp
pop
adc
or
dec
or
cmc
in
fsubr
mov
cmc
int3
test
push
data16
jns
ljmp
daa
sbb
test
scas
sbb
adc
fwait
int
jecxz
cwtl
mov
push
dec
cmpb
pop
push
push
jne
leave
mov
mov
fimull
mov
lcall
das
dec
dec
js
repz
sub
adc
or
adc
cmp
int3
repz
sbb
nop
fistpll
das
cmp
repnz
dec
test
mov
push
adc
dec
cmp
stos
and
push
rcrb
enter
xor
fnstenv
stos
sbb
in
add
jbe
or
mov
xor
sti
pop
inc
inc
imul
add
adcl
push
pop
adc
jge
ret
inc
jnp
repz
aam
push
jge
adc
sbb
fiaddl
in
jmp
pop
ss
xorb
daa
insb
stos
loop
pop
mov
fisubrs
fdivl
jp
sti
cmp
gs
subb
ret
fwait
lds
mov
dec
cli
inc
inc
jge
addr16
pop
lret
pop
clc
fldcw
ss
popa
dec
mov
sub
cs
jmp
in
pushf
cmp
movsb
in
sbb
or
lret
mov
jns
mov
mov
mov
daa
sbbl
gs
cmp
dec
or
or
daa
sbb
cmp
xor
dec
push
and
sub
and
mov
dec
dec
into
mov
and
pop
jae
add
and
add
lods
fldpi
sub
out
out
xor
add
daa
out
out
mov
adc
push
push
cmpsb
and
call
mov
pop
mov
fsubrl
pop
jge
mov
das
repz
sub
mov
push
push
stos
and
jecxz
arpl
mov
ljmp
flds
das
repz
rorl
aas
mov
cmpb
and
cmpsl
or
or
cmc
mov
aas
in
test
cmp
mov
scas
cld
clc
in
jge
cmp
sub
out
jl
sub
outsb
pop
ss
pusha
jge
or
xor
push
loopne
pop
and
jns
mov
sahf
out
pop
sbb
mov
lret
mov
adc
mov
sub
movsb
sbb
loop
push
and
xlat
mov
stos
movsl
dec
jo
xchg
inc
cmp
icebp
jg
sti
rolb
inc
dec
push
mov
sbbb
xor
sbb
mov
mov
xchg
cmp
insb
sub
cld
mov
sub
test
add
loop
pop
dec
xor
mov
stc
out
xor
loope
ds
push
fisubrs
lods
add
aaa
add
dec
sub
adc
sub
in
mov
in
pop
jmp
ds
pop
push
sub
jns
loop
xchg
addr16
mov
mov
ja
dec
and
lahf
and
mov
jbe
movd
cmp
inc
das
xchg
cmp
int
lods
mov
in
cmp
cmp
xchg
add
lods
mov
mov
test
mov
cli
cltd
sub
stc
jbe
jo
loope
enter
call
movb
clc
dec
lret
adc
clc
xchg
int3
inc
leave
add
sarl
rcrl
lods
aad
cmpsl
jno
push
mov
pop
adc
fs
mov
sbb
jae
push
push
ds
ss
inc
dec
fcoml
mov
add
fnstenv
loope
xchg
mov
jne
lret
shll
sub
mov
scas
push
pusha
das
pushf
push
aam
aam
loop
sti
or
mov
sbb
dec
pop
adc
std
adc
pop
inc
stos
lahf
inc
leave
xor
dec
test
test
lea
dec
and
jge
mov
into
push
data16
jo
clc
jbe
testl
and
add
clc
sub
cmp
pop
aam
xor
adc
iret
imul
sub
mov
loop
roll
mov
nop
xor
lret
cwtl
iret
pop
jns
pop
cmp
add
jae
das
insb
js
xchg
insl
xchg
dec
push
dec
jecxz
ds
sbb
lock
shlb
dec
xor
outsl
pop
lds
out
adc
pusha
fs
mov
les
inc
call
add
adc
or
loop
jne
sub
inc
arpl
std
mov
pop
test
and
cmp
out
mov
repnz
fildl
inc
jnp
aam
mov
xor
lret
sbb
add
sbb
xlat
dec
xchg
push
loopne
adc
pop
in
dec
pop
pop
pop
hlt
fisttpl
movsl
aad
add
stos
gs
fwait
xor
lret
inc
push
lods
jecxz
xchg
cli
inc
into
test
push
into
out
nop
in
add
cld
mov
aaa
and
cmp
cwtl
rorl
cmp
inc
aaa
mov
push
add
add
fcomip
dec
pop
call
pop
pushf
pop
add
sbb
dec
mov
lods
adc
push
adcb
sub
cmp
mov
shl
sti
lahf
fcmovnu
lret
push
testl
pop
sarb
inc
jno
das
inc
addr16
cld
adc
add
test
xor
mov
js
jge
loop
mov
out
lea
pop
adc
out
test
shrl
inc
mov
hlt
add
test
mov
cmp
loopne
jecxz
xchg
lcall
gs
sub
pop
jp
jecxz
rorl
dec
add
add
jl
jle
jo
pop
cmpsl
mov
ljmp
pop
xor
dec
push
imul
nop
and
addr16
inc
and
xchg
call
or
mov
je
dec
mov
nop
mov
in
push
stos
loop
insb
inc
xchg
adcl
lret
in
test
xor
jmp
dec
xor
rorl
cmp
repnz
or
inc
mov
xchg
fprem1
in
or
cmp
out
and
sti
loop
dec
adc
inc
stos
xchg
pop
adc
ja
sub
jo
lods
jae
movl
cmp
cwtl
jns
movsb
movsl
jae
mov
push
push
jo
sub
cld
xor
inc
ss
bound
push
mov
mov
sbb
pop
adc
int
lahf
pop
sarb
mov
dec
pushf
jecxz
inc
cmp
push
xor
shlb
bound
in
sub
xor
sbb
outsb
and
pop
xor
mov
sub
aaa
push
push
or
cli
push
insl
pop
cmp
sub
mov
loope
mov
repz
dec
fcmove
pop
in
out
mov
shrl
sahf
mov
ror
add
aad
mov
ja
fldt
ret
push
mov
rcl
pop
mov
dec
dec
jno
push
leave
in
aam
cmpsl
push
out
sub
aaa
lods
ret
and
sahf
divl
mov
sahf
in
xchg
insb
jle
negb
push
cmpsb
testb
jb
cmp
push
cmp
pop
inc
stos
xchg
mov
call
icebp
jl
adc
xchg
add
mov
repnz
pop
push
insb
mov
test
bnd
iret
add
pop
mov
frstor
pop
adc
sub
std
stc
arpl
fisubrl
cmp
sbb
ja
jae
inc
jg
es
dec
arpl
pop
add
jo
sub
shl
cmpsl
rorl
mov
inc
out
ret
cld
jo
cmp
fs
mov
je
mov
or
mov
cwtl
xlat
das
or
jo
adc
rcl
mov
movsb
add
add
arpl
cmp
dec
mov
mov
scas
and
cmp
mov
or
jecxz
jb
inc
in
mov
addr16
das
jo
jne
jp
mov
push
xchg
loop
mov
in
fimuls
cmp
repz
add
push
sub
xchg
adc
icebp
sbb
xchg
lods
call
scas
mov
mov
fcompp
mov
out
mov
inc
mov
push
adc
out
in
add
push
js
mov
mull
in
sbb
dec
adc
push
mov
dec
fs
mov
inc
jnp
adc
ss
cmc
je
repz
stos
jbe
push
leave
xchg
repz
mov
aad
lds
mov
mov
aas
stos
lret
jbe
or
or
test
xor
out
nop
jge
inc
mov
js
cli
stos
inc
add
push
mov
dec
int
pusha
ret
mov
rcrl
in
add
add
add
std
loope
mov
sbb
js
movsl
xchg
adc
test
fists
ja
ret
xlat
stos
adc
je
sarl
js
push
fmuls
cmp
xlat
add
dec
jae
mov
mov
dec
jns
cmpsl
jns
cmpsb
and
or
push
mov
mov
cltd
sti
testb
xchg
add
addl
rol
cmp
ds
xchg
mov
push
inc
fs
aas
and
xchg
push
leave
push
stc
xor
out
pusha
xchg
xchg
lods
pop
or
mov
les
out
dec
inc
and
je
and
imul
adcb
into
pop
sbbb
jns
subl
push
cmp
mov
jnp
sti
and
out
jb
jmp
and
or
pop
and
pop
and
pop
xchg
or
rcr
sbb
mov
out
ss
das
push
std
push
ret
fcomi
or
idivb
sub
mov
insl
stc
fwait
mov
int
mov
ficompl
xor
mov
adc
mov
outsb
inc
out
cli
fldcw
ds
push
test
cwtl
dec
aam
xor
pop
jmp
push
xor
sbb
imul
sbb
js
jbe
cmp
lret
push
mov
mov
adc
jge
add
or
or
jmp
pop
cmp
jmp
or
fists
les
les
loop
or
out
add
aam
mov
aaa
stos
aaa
sbb
dec
bound
mov
push
inc
pop
cld
sbb
in
cmpsl
in
sub
loope
repz
aam
xor
out
mov
inc
adc
mov
ja
cmc
push
shll
inc
call
adc
subl
loopne
push
in
or
ret
popw
repz
into
lea
push
cmp
aam
lods
xchg
jbe
shr
mov
insb
out
cmpl
je
dec
inc
xor
pop
daa
stos
and
xor
push
out
lods
pusha
ss
negb
sti
dec
in
jno
lahf
pusha
imul
xor
out
scas
add
repnz
jb
pop
pop
insb
int
dec
xor
pusha
fwait
div
xor
aaa
test
je
stos
in
fwait
dec
cmp
jae
popa
loopne
xchg
das
repnz
andl
clc
or
rcr
stos
repz
pop
or
pop
les
aam
push
repnz
and
pop
adc
loopne
out
push
mov
mov
test
adc
movsb
and
fisubs
aad
add
and
test
nop
loope
mov
es
push
andb
pop
cmp
test
jp
into
lahf
aad
lahf
pop
cmp
jg
int3
push
pop
inc
es
stos
ret
enter
cs
lods
js
jp
cmp
push
xchg
add
sbb
pop
xorb
dec
shll
or
pop
hlt
mov
jno
mov
iret
sbb
inc
cmpsb
shl
loopne
insl
popf
sti
leave
inc
inc
fwait
testb
pop
mov
lods
or
inc
out
sbb
sub
or
loope
sub
addr16
fisubrl
pop
cs
lret
test
sarl
movsb
insb
sub
das
cltd
dec
cld
sbb
add
xor
push
outsl
mov
iret
outsl
std
add
cwtl
sub
les
push
sahf
xor
jns
sbb
inc
aas
lods
pop
ds
mov
sti
pop
leave
idivl
lods
and
les
insb
or
cld
in
cmp
xor
cld
rcr
jne
xchg
cld
lret
movsl
sbb
xchg
sti
xlat
lahf
aas
stos
mov
ss
fs
into
push
test
xchg
popf
aas
jge
adc
adc
mov
mov
scas
rcll
loopne
iret
pop
jmp
jb
cmpsl
lret
mov
frstor
or
pop
shlb
mov
int
push
outsl
jae
out
ret
icebp
mov
and
push
xchg
push
pop
xchg
add
gs
jmp
scas
adc
cwtl
lret
push
inc
jle
and
jns
shr
bound
and
pop
mov
xor
sbb
adc
mov
and
test
jne
or
cmp
subb
repnz
mov
shrb
dec
inc
fucomi
sbb
out
mov
dec
nop
rolb
cmp
enter
mov
sarl
xchg
stos
sub
inc
xchg
icebp
jno
mov
lea
loope
and
ljmp
leave
sahf
jbe
rorb
add
lods
popa
fidivl
pop
adc
xor
shlb
out
cld
cmpsb
and
jns
mov
shrl
ss
jne
inc
ret
xchg
dec
icebp
or
add
add
add
nop
pusha
pop
jb
add
add
movsl
nop
or
fwait
ljmp
test
mov
xchg
lods
jae
ljmp
jbe
mov
or
mov
fucompp
mov
daa
or
lret
sub
data16
stos
inc
push
pop
cmp
addr16
cmc
loopne
pop
testb
xor
in
mov
fdivs
stos
dec
jp
int3
mov
mov
dec
mov
cwtl
cld
sub
and
fwait
cmpsb
in
ret
xchg
in
cmpsl
and
in
in
add
fmuls
or
xchg
gs
inc
mov
es
jbe
sub
mov
mov
jge
sti
push
imul
pop
inc
jecxz
stc
popf
xchg
loop
cwtl
and
pop
ja
std
jmp
mov
sti
shrl
add
in
test
js
mov
push
bnd
daa
insl
fstpt
shrl
xor
sti
ss
out
xchg
fisubs
push
in
pop
mov
or
imul
fwait
mov
test
gs
mov
cmp
mov
xchg
pop
sub
cmp
and
loop
std
scas
clc
out
arpl
cld
ss
dec
add
push
std
xchg
sbb
jbe
std
xor
popa
pop
mov
and
mov
in
push
mov
push
into
fsubl
divb
call
jae
add
arpl
movsl
lods
mov
mov
mov
add
pop
dec
and
mov
mov
inc
pop
inc
mov
mov
mov
les
negb
adcb
jbe
xchg
in
loop
lea
jno
sub
mov
je
hlt
out
addb
jmp
dec
push
push
inc
lcall
inc
ss
xlat
in
stos
push
add
mov
or
jns
test
jl
lcall
inc
mov
pop
and
push
mov
int3
stos
mov
out
test
insb
jmp
add
mov
or
mov
jg
cltd
popa
push
dec
xchg
in
mov
push
or
sub
addr16
stos
ss
imul
mov
dec
ror
xchg
or
xchg
cli
sbb
sarl
mov
int
fimuls
or
insl
test
jmp
movsb
outsl
aam
pop
push
rolb
ss
xchg
mov
jp
int3
aas
push
pop
lret
pop
xlat
test
push
mov
cld
es
mov
inc
adc
test
fistps
andl
xchg
xchg
mov
lock
jp
in
aas
inc
mov
or
jle
add
sub
lods
push
and
inc
pop
or
and
rcrb
sub
cmc
mov
std
push
insl
and
lods
movsl
ficompl
pop
sarl
rorb
pop
mov
ret
xor
add
push
cmc
outsb
outsl
add
repnz
ret
adc
icebp
and
xor
loop
mov
icebp
cmp
or
and
add
into
adc
fidivs
mov
jno
arpl
js
in
mov
mov
lret
sbb
or
fists
sub
add
lahf
xor
pop
dec
mov
lods
loopne
rclb
fdivs
int3
outsb
add
xor
sub
pop
icebp
jg
mov
pop
stos
pop
sbbb
clc
pop
subb
sbb
mov
xor
movsb
imul
fwait
xchg
das
les
loop
fiadds
mov
into
mov
es
mov
popa
jmp
sbb
jge
cmp
add
jns
inc
cmp
jno
mov
fstl
nop
or
pop
pop
inc
jo
fwait
mov
adc
lret
pop
lock
push
cmpsb
ret
add
sahf
lretw
int
add
pop
aas
cmp
repnz
jecxz
and
pusha
xchg
push
and
sbb
popa
lahf
xchg
push
add
je
pop
xlat
xor
ret
cmp
or
xor
pop
xor
jnp
inc
xchg
and
js
div
movsb
shll
in
inc
xchg
jno
lcall
dec
fadds
cmpl
sahf
mov
int3
mov
add
out
testb
lds
adc
and
inc
push
in
jae
lahf
sub
outsb
shll
mov
jns
or
sub
leave
pushf
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fcompl
in
dec
sbb
or
cmp
sub
pop
sbb
cmp
fldenv
inc
mov
adc
push
add
insl
rorl
outsb
jmp
cmp
push
andb
in
lock
shlb
xor
shll
add
adc
pusha
xorl
lock
mov
scas
popa
nop
jno
add
cli
shll
jo
cmp
mov
add
lods
jle
push
mov
mov
mov
inc
jnp
mov
fbstp
hlt
cmp
mov
test
loope
sub
addr16
cmp
outsb
imul
scas
jg
jnp
gs
std
inc
jno
pusha
jo
and
add
nop
popf
call
loope
pop
loopne
dec
scas
jg
outsb
mov
add
xor
mov
jge
inc
icebp
popa
orb
mov
jecxz
nop
sahf
outsl
and
repnz
aad
das
mov
jmp
lahf
xor
add
sbb
pusha
mov
xchg
mov
adc
in
nop
fisubs
incl
mov
xor
push
xorl
test
xor
add
jl
pusha
xorl
push
inc
and
popa
mov
add
adc
and
inc
mov
push
in
add
loope
and
and
mov
bound
mov
orl
adc
sub
and
in
cld
push
xchg
bound
popa
push
mov
xorb
xchg
and
mov
mov
andb
loopne
lock
and
xor
shll
add
adc
pusha
xorl
mov
popa
nop
jno
add
adc
and
xor
shl
test
dec
mov
dec
pop
sub
jecxz
add
cmpsl
clc
dec
mov
repnz
push
arpl
adc
stc
popf
push
jecxz
nop
sbb
sbb
push
aam
dec
dec
test
push
jns
stos
dec
sbb
and
cld
je
out
jno
jbe
sub
cmp
jb
mov
out
push
shl
and
mov
les
xor
repnz
gs
inc
je
pusha
mov
nopl
jbe
aam
cld
mov
pushf
mov
cmp
sbb
in
pop
add
out
pusha
dec
jae
cltd
das
jb
or
add
xor
pop
mov
jl
enter
inc
mulb
adc
mov
pop
fists
and
mulb
add
fst
call
ret
sbb
mov
hlt
roll
stos
cmp
xchg
push
pop
nop
repz
out
lods
xchg
push
jle
lret
push
cld
push
js
scas
add
mov
dec
in
sar
cmpsl
or
loopne
add
loop
mov
movsl
push
and
add
sub
in
gs
cltd
out
inc
fstpt
sbb
dec
xchg
and
mov
das
push
ret
lods
xchg
fimuls
lcall
cmpsb
mov
lret
xor
xor
int
add
sub
inc
repz
fbld
jmp
fdivrl
xchg
imul
lods
cmp
dec
mov
jne
xchg
into
pop
sub
jae
rol
fsts
sbb
shr
sub
js
mov
and
sar
test
cmp
push
add
cmpsb
mov
push
arpl
das
loope
cltd
call
cwtl
andl
sarb
in
fisttps
mov
outsb
lret
inc
iret
pop
js
mov
in
cmpsl
movsl
mov
sub
mov
int3
les
add
jmp
loopne
sub
iret
sbb
mov
mov
sbb
xor
sti
popf
subb
adc
jmp
pop
in
out
and
and
jno
mov
mov
pushf
fidivrs
cmp
mov
mov
nop
lcall
jo
aad
lods
sbb
ret
cwtl
pop
push
fcom
push
xor
fwait
loope
pop
xor
cmp
xor
sub
sub
xor
jecxz
clc
jno
rcrb
insl
pop
aam
int
enter
dec
out
mov
pop
insl
xchg
scas
pop
leave
imul
xchg
aad
cmc
fistpl
sub
mov
in
daa
rcrb
cmp
xchg
pop
mov
pop
inc
fucomi
pop
jns
out
add
mov
cmpsl
ret
test
mov
mov
mov
dec
mov
aas
push
mov
dec
add
idivb
aaa
mov
push
and
add
gs
xlat
xor
xchg
lds
int3
shr
jns
inc
stos
dec
xor
mov
ret
mov
inc
lret
add
jns
out
and
movsb
xchg
inc
iret
fdivrs
cwtl
iret
pop
les
push
mov
outsb
dec
push
cwtl
dec
movsb
cld
imul
scas
sub
jge
dec
jne
adc
sbb
mov
lds
insb
dec
push
jle
sbb
clc
loopne
sub
dec
push
mov
xor
nop
ret
mov
push
ficoml
adc
add
add
mov
aaa
dec
mov
lock
jmp
dec
dec
cmp
xchg
xor
adc
int
cmp
lods
xchg
xor
push
sub
push
and
sbb
mov
das
inc
sub
dec
xor
not
dec
xchg
jecxz
inc
je
push
sub
sbb
or
outsl
test
mov
int
aas
adc
mov
mov
or
hlt
test
adc
or
sub
mov
test
inc
push
insb
movsl
lcall
hlt
and
hlt
pop
jne
ret
xchg
rcll
movsb
sbb
sbb
pop
int3
fidivrs
jg
loope
pop
insl
or
xor
inc
aas
jl
int3
lret
dec
jl
dec
rcrb
das
ret
mov
ss
divl
insl
add
lock
in
insl
ret
and
movsb
arpl
mov
lahf
push
sbb
leave
lret
adc
inc
mov
mov
int
imul
inc
movsb
xor
into
arpl
imul
and
inc
cli
jl
dec
mov
adc
add
mov
adc
mov
in
push
mov
js
adc
jl
pusha
cmp
push
mov
std
sbb
jl
and
pop
sub
stos
xchg
aam
and
mov
shlb
push
mov
xchg
loop
jns
cmp
repz
sub
mov
cmp
mov
pop
addr16
dec
push
int
int3
in
inc
dec
mov
jge
popa
mov
mov
add
mov
push
test
inc
mov
lret
sub
test
cmp
inc
repz
sub
pusha
mov
testb
xchg
fldt
out
dec
gs
jnp
mov
je
sub
pop
dec
mov
mov
xor
in
jne
fdivl
into
pop
loope
ljmp
in
push
dec
cmp
lods
or
out
mov
sbb
iret
mov
pusha
adc
fdivl
hlt
mov
fisubrl
mov
dec
dec
xor
cs
pop
sti
cmpsl
push
loop
mov
and
sti
insb
daa
hlt
xchg
mov
sub
icebp
inc
mov
inc
add
clc
rol
lea
jne
sti
push
fisubrs
inc
xchg
dec
scas
dec
sbb
sbb
mov
inc
scas
mov
cmc
fidivl
test
push
inc
sahf
jp
cwtl
jg
sbb
sub
mov
dec
cmpsb
jmp
das
scas
shll
outsl
gs
push
ret
mov
jae
push
scas
xor
cwtl
add
nop
sub
xchg
sbb
push
jno
cmpsb
pop
sbb
cmp
push
hlt
outsb
jge
dec
dec
insl
imul
adc
pop
mov
xor
ja
aaa
std
movsb
or
jp
fldl
aaa
repnz
fisttpl
lahf
push
pop
fldl
cmc
and
lods
setl
and
sub
cmp
out
psllw
outsl
stos
fistpl
cli
jae
dec
or
scas
mov
push
mov
in
sub
dec
and
mov
es
mov
cmp
sbb
push
inc
loopne
adc
fs
jbe
scas
insb
ja
int
cs
jecxz
mov
sub
or
pop
mov
xchg
imull
popf
das
test
jmp
js
loopne
aaa
sub
ficomps
loope
jle
and
test
push
ja
xorl
sbb
adc
mov
lods
inc
daa
jnp
pop
fxch
stos
aas
pop
icebp
and
cmc
iret
mov
mov
leave
ljmp
rcl
dec
je
stos
inc
xchg
insb
icebp
enter
sbb
push
jb
hlt
mov
add
xor
sub
lods
pop
xchg
mov
or
xor
rcrl
or
jg
les
mov
lock
jl
pop
inc
shrl
cmp
cs
xchg
mov
cmp
push
stos
pop
iret
lock
pop
inc
sbb
roll
sar
test
dec
loop
pop
mov
aad
add
sbb
xchg
push
enter
sub
mov
hlt
stc
in
aas
dec
out
inc
sahf
gs
jmp
fimull
enter
inc
xchg
sbb
pop
mov
push
add
ret
jle
rcll
dec
shl
sbb
shlb
popf
es
mov
jbe
or
adc
xlat
outsl
mov
push
outsb
js
push
add
xor
cmpsb
outsb
and
pop
loopne
jp
lock
sbb
popf
mov
fxch
xor
push
add
cwtl
fisubrl
xchg
mov
in
push
movsb
nop
fistpl
iret
lods
cmp
push
sbb
lret
sub
imul
add
scas
int3
push
out
push
xor
xorl
shll
daa
mov
mov
rclb
and
lret
jb
scas
in
jp
into
testl
and
sub
pop
jge
cs
repz
adc
mov
adc
push
cmp
sub
xchg
cltd
sub
mov
sub
clts
scas
add
sbb
gs
mov
mov
pop
mov
icebp
dec
jl
push
cltd
cmc
sub
and
sbb
cld
js
test
je
rcrl
fdivp
out
loop
ds
sub
cmpsb
movsb
add
data16
mov
xchg
push
inc
jecxz
subb
in
mov
jb
pushf
xchg
lret
and
repnz
cmpb
outsb
or
adc
in
cld
enter
jns
test
and
stos
lret
test
mov
jmp
or
cli
out
jns
sub
int3
xor
sub
inc
aam
or
je
scas
adc
dec
arpl
sbb
sub
lock
jp
jnp
rol
add
daa
jne
je
xor
sub
arpl
aaa
jg
scas
and
dec
dec
icebp
ljmp
les
mov
test
insb
out
mov
jno
call
push
das
inc
scas
push
dec
ja
mov
ret
je
mov
push
jle
mov
pop
add
jb
popf
pop
repz
push
add
into
jmp
mov
sbb
in
push
icebp
lds
push
xor
test
inc
pop
xchg
add
out
mov
movsb
cmpsb
xchg
adc
mov
pusha
fiaddl
xchg
and
jae
scas
test
cmp
out
jl
sub
std
test
stos
xor
int
jo
repnz
andb
mov
push
js
rol
inc
imul
testl
clc
aaa
jbe
and
in
imul
nop
inc
cmpsl
dec
xchg
ja
idivb
outsb
xor
cmp
and
add
xchg
cmpsl
fcmovnbe
je
xchg
loop
sbbl
cwtl
push
mov
adc
mov
in
mov
mov
adc
sbbl
pop
pop
cmp
inc
xor
mov
fildll
pop
sbb
push
test
mov
clc
mov
daa
push
int
cmp
sub
pushl
push
jle
iret
movsl
xlat
cmp
fwait
and
or
jle
cmpsb
push
fs
test
mov
popa
sbb
ds
adc
xchg
ss
repz
add
mov
cmc
cwtl
sbb
mov
cmpsb
mov
das
fstpl
lcall
rolb
imul
imul
push
aam
cltd
lock
pop
jb
adc
inc
scas
xchg
dec
stc
cli
das
insl
sbb
mov
iret
add
int
roll
or
jg
sbb
mov
adc
xor
mov
push
fwait
mov
pop
das
push
xor
fisttpll
leave
and
push
dec
ret
stos
jmp
xchg
and
imull
js
adc
xchg
repz
into
int
aam
lret
lods
mov
lret
insl
add
pop
mov
in
or
sbb
test
xchg
aas
je
sub
jl
mov
and
sbb
push
sbb
add
aad
add
sub
inc
mov
fisubs
and
push
adcl
nop
mov
add
jg
lret
jno
jle
mov
out
addb
xorb
and
mov
enter
pushf
les
mov
add
test
lods
inc
ror
adc
lds
fmuls
jg
loop
and
xchg
in
jb
jns
test
lcall
sub
mov
out
int3
jp
and
jmp
addr16
arpl
adcb
sub
es
sub
mov
fistl
mov
aam
mov
bound
jg
loopne
jno
xchg
mov
add
cltd
inc
push
push
jecxz
call
mov
adc
jg
aas
dec
mov
pop
cmp
pop
push
sahf
mov
arpl
imul
inc
sbbl
inc
mov
add
lock
pop
mov
dec
push
adc
sub
daa
rolb
push
fucom
loopne
repnz
xchg
cmp
push
iret
jmp
in
jbe
jns
push
or
jae
add
ss
dec
stos
xor
add
loop
mov
lds
push
iret
ja
add
cltd
stos
adc
push
pop
mov
test
cld
pushf
cmc
imul
xor
inc
pop
movsb
inc
mov
jmp
fnstcw
sbb
sub
inc
mov
jae
enter
push
int
notb
sbb
call
cltd
xor
dec
mov
int
lock
test
push
jl
es
push
sti
cmp
cmp
jecxz
adc
test
cmp
mov
das
mov
lret
imulb
jae
xor
aaa
jo
in
fnsave
pop
lds
sarl
loope
xchg
jl,pt
stc
enter
and
push
loop
inc
push
stc
adc
imul
pop
and
das
jmp
and
sahf
sahf
gs
das
mov
jbe
ror
outsb
in
jp
inc
mov
ljmp
fbstp
push
adc
mov
or
sbb
adc
dec
nop
mov
out
adc
jne
push
dec
dec
jmp
je
cmc
or
and
inc
ss
push
push
xchg
out
adc
and
mov
into
imul
adc
xor
test
xchg
es
in
xchg
cmpl
repnz
xor
lock
push
shl
sahf
fstpt
nop
inc
push
pop
mov
pop
cmp
xor
cmp
adc
mov
inc
add
bound
dec
mov
pop
daa
inc
sub
or
or
jbe
sahf
xchg
cmp
in
int
idivb
in
test
mov
cmpsb
pop
loop
and
orb
add
and
push
data16
mov
push
cmpsb
sbb
jnp
ss
cmp
or
mov
sub
fsubrl
paddb
cmpsb
push
adc
in
and
jb
pop
add
je
dec
add
aam
jge
imul
push
dec
add
roll
pop
mov
xchg
jg
and
into
repz
lea
pop
out
cmc
fdivl
insb
xor
aam
les
call
gs
ret
je
adc
xchg
sub
repz
idivb
insl
add
out
aad
rorb
mov
lahf
outsb
movsl
dec
sahf
out
mov
fsin
sub
pusha
dec
sub
dec
or
sub
call
loopne
cli
mov
mov
lcall
and
loope
add
loopne
hlt
mov
mov
movsl
pop
inc
mov
popa
or
push
push
lret
mov
dec
adc
or
hlt
ss
push
push
push
xor
adc
mov
xor
xchg
jnp
xchg
push
or
pop
mov
jecxz
add
inc
mov
ret
push
push
stos
inc
sbb
cs
jnp
lods
into
and
cmp
dec
mov
cmpsl
outsb
sub
outsb
and
in
out
and
or
stos
and
xchg
stos
cmp
hlt
lahf
inc
sbb
add
test
push
mov
in
ss
xchg
mov
rcrb
push
aad
gs
push
add
ret
fwait
lcall
insb
bound
inc
adc
dec
fnstenv
jl
adc
sbb
sarl
jmp
stc
cs
jl
mov
or
sub
test
inc
mov
sbb
or
xchg
adc
dec
sub
push
aas
ja
psubw
pop
mov
cld
mov
inc
sbb
push
in
jmp
sbb
sbb
into
lock
sub
push
push
push
xor
mov
cmpb
mov
xchg
mov
or
push
fidivrl
out
pop
jns
cmpsb
mov
insb
lret
iret
push
je
aad
cld
fnstsw
sti
mov
faddl
inc
movsb
hlt
inc
push
hlt
imul
push
and
cmpl
fwait
in
call
and
xchg
leave
mov
shll
cld
and
sbb
mov
mov
cld
repnz
push
pop
jl
arpl
das
mov
fcomp
xor
mov
je
scas
mov
mov
jns
fisubrs
mov
sub
dec
xor
mov
jno
shlb
decb
outsl
dec
adc
xchg
dec
push
repnz
in
hlt
add
jno
or
mov
popf
lcall
xchg
in
push
mov
mov
fsts
out
js
ret
cmp
pop
loop
add
xor
movb
in
cltd
in
dec
les
rcrl
sub
cwtl
sbbb
imul
scas
mov
xchg
imul
lcall
cmp
sub
xchg
push
jae
mov
test
std
jmp
jg
cs
enter
addr16
push
mov
movsb
add
cwtl
rcr
mov
hlt
jno
and
cmpsb
leave
out
push
mov
jge
cwtl
out
in
jge
aas
clc
fs
fldt
push
mov
addr16
dec
jmp
jge
cltd
mul
ret
imul
movsb
mov
jmp
cltd
push
jne
cmp
adc
mov
or
shrb
pop
push
insl
std
stc
dec
out
fdivrs
xor
mov
dec
std
inc
cmpsb
repnz
sbb
mov
pusha
sub
lds
dec
push
mov
jmp
nop
aas
jb
mov
xor
jae
addr16
aas
dec
xchg
or
xchg
sub
sub
imul
add
scas
test
lahf
das
ret
xor
push
xchg
ret
js
xchg
mov
outsb
pop
int
sti
fcompl
dec
subb
stos
sbb
or
adc
adc
jmp
addl
sub
int3
dec
jno
shl
inc
insl
ror
sbb
mov
mov
and
cmp
aam
in
imul
popf
xorb
hlt
popl
xor
inc
add
jae
add
xor
aam
inc
xchg
out
flds
mov
inc
pop
icebp
pop
aas
out
test
mov
sbb
inc
xchg
loopne
loop
and
pop
mov
or
into
xor
mov
lret
mov
or
adc
adc
dec
pushf
fidivrs
jns
dec
dec
test
mov
add
mov
jbe
dec
mov
sbb
inc
jb
and
iret
fs
idivl
dec
cld
scas
xor
rcl
pop
sub
jae
or
pop
push
dec
std
mov
xchg
sub
je
mov
scas
add
pop
push
and
xchg
push
xchg
mov
stc
jns
and
mov
inc
subb
lea
mov
std
out
fucomi
outsl
nop
outsl
inc
sub
mov
js
std
and
cld
sub
shlb
loopne
pop
mov
xchg
sbb
and
iret
mov
shrl
fisubl
mov
sbb
mov
jmp
sub
mov
cmp
fisttpll
lds
cmp
mov
ljmp
divb
fwait
xchg
or
ja
cwtl
filds
lahf
jle
les
lahf
call
lcall
push
sub
ret
inc
jae
sub
jl
cmpsl
das
push
mov
in
lods
fwait
sarb
sub
hlt
mov
and
cs
xor
fsubl
in
lret
mov
push
inc
mov
jge
sbb
inc
fdivs
jbe
inc
test
pusha
push
adc
mov
sbb
mov
push
xchg
cmp
out
cli
cwtd
lods
cld
xchg
out
dec
jbe
mov
dec
fsubl
popa
mov
mov
jns
push
inc
arpl
sahf
add
faddp
cmc
jmp
inc
insl
lcall
outsb
cmp
jg
push
leave
outsl
mov
mov
outsb
mov
push
call
mov
nop
daa
aas
call
dec
in
mov
aad
mov
lahf
xor
popa
std
subl
clc
xor
stos
dec
int
dec
pop
or
cmp
dec
push
cltd
ljmp
adc
mov
ljmp
jl
cmp
mov
fsubrl
pop
repnz
mov
sbb
fdivrl
jmp
dec
sbbl
jge
adc
and
jg
js
cs
mov
sarb
inc
ja
rcll
ds
sahf
stos
sbb
inc
add
mov
popl
repnz
std
lds
pop
aaa
cmp
add
dec
mov
and
jbe
cs
jmp
mov
stos
loope
test
scas
mov
cmpsl
mov
loopne
jg
dec
fwait
sbb
or
out
ljmp
xorl
mov
popa
nop
jno
add
adc
and
xor
shll
add
adc
pusha
xorl
mov
popa
nop
jno
add
adc
and
xor
shll
adc
icebp
popa
xorl
shll
loopne
jmp
xor
rcrl
loope
icebp
pusha
andl
mov
popa
nop
push
xchg
mov
aas
fisubrs
into
pop
mov
aaa
xchg
dec
scas
xor
test
cmpsl
add
jb
inc
notl
mov
aaa
xchg
inc
loop
bnd
xchg
xchg
xor
push
jb
inc
notl
mov
aaa
xchg
inc
loop
bnd
xchg
mov
xlat
jo
jae
movsb
and
jae
jbe
daa
ljmp
mov
pop
dec
sarl
daa
pop
bound
leave
mov
jmp
call
pop
inc
loop
ja
lret
cmp
int
pop
dec
jbe
xlat
mov
clc
mov
jle
adc
test
xor
xchg
je
mov
ja
jb
imul
pop
out
xchg
in
xor
das
inc
test
ds
sub
fstpl
int
xchg
xchg
xlat
mov
dec
jl
push
xchg
loop
ror
pop
mov
test
repnz
lahf
jle
std
cmp
xchg
xor
sbb
lods
cmp
out
aas
sbb
jecxz
cmp
lret
shlb
popa
push
cli
fldl
and
and
inc
cmc
inc
les
aaa
xchg
inc
loop
bnd
xchg
xchg
xor
xlat
jb
inc
idivl
bound
jno
and
repz
pop
repnz
addr16
and
sbb
arpl
inc
out
xchg
and
xor
ficoml
ja
or
jae
adc
cmp
popa
lock
testl
ret
xchg
xchg
xor
xlat
jb
inc
notl
mov
aaa
xchg
inc
loop
bnd
xchg
xchg
xor
xlat
jb
inc
notl
mov
dec
push
xchg
xchg
movsl
sbb
xor
inc
test
out
mov
inc
icebp
jae
and
cmpsl
lds
ljmp
loop
push
xor
ds
dec
pushf
insl
fcmovu
mov
mov
sub
mov
push
add
js
outsb
xor
push
es
fildl
insb
ljmp
mov
jecxz
inc
adc
es
or
jno
out
mov
or
xor
fisubrl
or
cld
and
inc
jo
fistps
in
aaa
loopne
daa
xor
sbb
push
cld
lock
cld
aaa
add
inc
push
sub
mov
xor
lret
jl
shrb
xor
mov
je
test
into
stos
or
fwait
test
popa
sbb
int
push
lret
or
je
sub
cmp
add
fs
popf
jp
lock
or
push
mov
sub
inc
lock
sub
jbe
pusha
sub
xlat
aam
mov
mov
sub
jl
test
xchg
mov
xor
sbb
pop
faddl
cmc
test
clc
insl
xchg
push
out
xlat
push
or
test
xchg
insl
in
push
xor
rcrb
add
pop
or
lock
adc
insb
push
push
inc
loopne
push
test
les
test
loopne
xor
mov
rcll
sbb
or
mov
add
mov
mov
into
push
das
xlat
icebp
lods
lock
dec
inc
inc
xorb
jb
out
nop
int3
sbb
sbb
inc
lcall
push
jp
aad
cmp
cmp
std
loopne
mov
int3
xlat
push
outsl
add
inc
stc
cmp
test
xchg
in
pop
inc
cmpsl
repz
mov
out
stc
dec
js
loop
xor
daa
mov
add
cli
and
jo
popa
xchg
and
fidivrs
add
testl
scas
insb
push
out
add
nop
fdivrp
pop
out
mov
in
pop
add
push
jb
add
outsl
add
push
lret
add
pop
mov
xchg
mov
movsb
mov
push
jle
mov
addb
pop
js
xlat
jmp
fldt
sub
rclb
es
adc
mov
adc
mov
jns
inc
add
sub
or
push
repz
cmp
pop
adc
adc
lcall
mov
ljmp
ja
xor
stos
fnstenv
mov
mov
out
inc
test
clc
jb
lea
popl
mov
lret
divb
lea
daa
shl
gs
roll
jo
loope
add
shrl
xchg
mov
dec
fcmovu
popa
adc
jp
xchg
cltd
jg,pt
pop
pop
xor
in
outsb
xchg
dec
aad
test
jbe
sti
out
pop
mov
mov
mov
call
enterw
mov
leave
sahf
mov
popf
xchg
dec
jno
pop
xchg
or
push
pop
sbb
test
sub
jno
sub
movsl
sbb
sbb
popf
jl
sti
jp
icebp
push
jecxz
jnp
sbb
push
mov
cld
inc
pusha
fsubl
mov
subl
mov
test
push
inc
repnz
cmpsl
cmc
xchg
loope
stos
pop
push
xor
aam
aas
dec
dec
mov
cmpsb
or
jno
mov
clc
xor
sub
jg
push
dec
pop
loopne
test
or
mov
mov
subb
stc
dec
add
ds
mov
xchg
jg
add
cmp
scas
jae
icebp
fwait
xchg
jns
out
das
jo
imul
fidivs
stc
and
dec
jge
fisubrs
ds
dec
ja
je
or
movsl
mov
pop
fmull
and
adc
and
inc
and
pop
testb
or
mov
add
lds
inc
lods
jmp
xor
push
sbb
ret
rolb
adc
mov
aad
push
pushf
popa
fs
xchg
repnz
cmp
lret
shll
pop
sbb
add
hlt
fmulp
aas
sbb
pop
add
xchg
rcrb
pop
adc
sub
dec
pop
add
bound
jg
aad
cmp
cmp
fdiv
ljmp
pop
mov
sub
jns
es
jmpw
cmc
fmuls
dec
mov
icebp
mov
add
xchg
xor
test
xchg
push
cmpsb
pop
and
insl
xor
mov
add
inc
xor
fdivr
pop
push
pushf
inc
mov
into
out
jg
test
cli
lds
out
test
insb
sub
mov
push
ds
dec
dec
push
mov
push
rep
inc
test
loope
dec
cwtl
in
stos
inc
cmc
xchg
or
int3
enter
js
int
push
cmp
pop
xor
dec
xchg
movsb
cmpsl
mov
or
mov
cmp
inc
int3
scas
mov
leave
insb
and
jbe
aad
insb
pop
xchg
adc
aas
shlb
dec
aas
test
sbb
mov
fwait
add
adc
mov
fcmovnu
jo
push
bound
and
inc
xchg
loop
test
in
pushf
les
fidivrs
std
inc
fildll
sbb
daa
inc
or
inc
orb
mov
fsubrl
jb
clc
gs
aam
push
lods
and
gs
mov
push
cmp
push
test
cs
mov
push
dec
push
fsubrs
out
inc
icebp
mov
push
pop
int3
aam
repz
push
push
fs
sti
push
xchg
inc
cs
cltd
sub
mov
xor
push
xchg
xor
mov
adc
mov
push
xor
cmp
or
or
iret
pop
fiaddl
addr16
xor
dec
push
mov
test
or
mov
and
ljmp
mov
daa
stos
dec
cmc
sbb
or
ds
sbb
mov
out
pop
sub
ja
fldl
lods
arpl
cmp
mov
jmp
iret
fcomps
push
inc
push
cmp
arpl
iret
ret
add
lcall
add
dec
xchg
cs
and
out
clc
daa
paddsb
fsubrl
dec
call
xor
insl
enter
xor
inc
not
cld
fst
jecxz
in
aad
dec
adc
jne
sahf
andl
mov
xlat
adc
dec
cld
mov
add
mov
notb
orb
mov
in
scas
ficoms
jne
xchg
fisttpl
mov
pop
lcall
sub
and
imul
dec
sbb
aas
insl
push
stc
gs
mov
aaa
data16
adc
pop
rep
sub
pusha
sbb
or
jg
adc
mov
out
stc
call
andb
and
fwait
scas
dec
sbb
xchg
pop
ret
hlt
add
ja
nop
dec
sbb
push
inc
loop
insl
mov
insl
xchg
sub
pop
jmp
andb
pop
inc
es
stc
je
mov
and
aaa
in
fidivl
in
xchg
leave
adc
jg
fldl
mov
sub
sarl
je
lahf
sub
jo
jge
add
in
loope
sbb
adcb
cmc
shrl
int3
lret
pop
mov
out
mov
addl
gs
cmp
rcr
mov
sub
fildl
fmull
push
hlt
fwait
mov
pop
stc
and
inc
test
dec
adc
jo
je
dec
or
scas
dec
inc
mov
push
push
dec
call
popl
pop
dec
xor
cs
mov
mov
test
adc
loope
or
rolb
xchg
xor
ss
fimull
push
mov
aas
inc
sub
call
pop
mov
push
xlat
cli
inc
pop
and
pushf
inc
out
rcrb
xor
stos
arpl
mov
inc
sub
sahf
lret
and
dec
roll
sbb
rclb
jnp
jl
mov
test
iret
xchg
lock
xchg
leave
add
xchg
xchg
inc
jbe
negl
dec
shrb
dec
cmp
repz
in
add
push
and
sub
lret
jbe
jmp
ret
and
sbb
or
push
pop
rclb
or
cltd
xor
xchg
insb
mov
int3
add
mov
or
lds
and
in
neg
and
lods
jge
mov
push
mov
inc
jecxz
mov
xchg
imul
push
sub
xchg
push
xor
mov
fldt
mov
sbb
sub
pusha
arpl
add
adc
bound
pop
mov
cmpsl
fs
daa
mov
leave
mov
sbb
sbb
add
inc
fwait
inc
arpl
hlt
fs
mov
fcmovb
mov
loop
shrb
addr16
mov
or
outsb
fidivrl
xchg
inc
and
in
divl
popf
jne
mov
fucomp
add
and
xor
mov
xchg
sti
add
mov
fdivr
outsl
inc
sbb
jo
data16
mov
fistpll
testb
stc
pop
pusha
xor
xchg
out
insb
push
fcomps
add
xor
rcrb
int3
lcall
loop
loop
xchg
imul
cmp
loopne
mov
int3
sub
sar
mov
sbb
fildl
push
inc
jecxz
xchg
jnp
lods
push
inc
cmc
or
cwtl
daa
rcrl
shll
fimuls
int3
mov
jmp
push
jmp
jmp
andl
xor
push
xor
shrd
popf
xchg
mov
mov
scas
mov
mov
xchg
ss
or
cmp
jp
testb
ret
mov
rolb
push
add
scas
cli
je
adc
sbb
sti
dec
subl
xchg
fcmovnu
mov
pop
cmc
sahf
mov
push
arpl
push
daa
cmp
dec
repnz
mov
outsl
aad
xor
inc
arpl
xor
stc
lret
movsb
sar
test
and
insb
daa
sub
inc
pusha
aaa
les
int3
stos
fwait
or
insb
out
pusha
adc
sub
or
and
ja
cmpsb
jmp
pop
rorb
cld
sub
xchg
lret
push
daa
aas
jg
lret
cltd
cmp
outsb
push
push
jp
cmp
or
nop
out
sbb
stos
lds
xchg
push
mov
adc
mov
jno
jno
ljmp
mov
mov
orl
sbb
bound
call
imul
into
int3
in
aad
rorb
bound
push
stc
sbb
test
jecxz
inc
mov
xchg
mov
mov
jae
and
inc
dec
test
std
or
lods
dec
aaa
negb
lcall
xor
xchg
xchg
call
sysenter
mov
nop
stos
jecxz
and
sarl
scas
jecxz
mov
dec
xchg
cld
ret
dec
aam
scas
push
out
mov
xor
shrb
daa
cs
addb
imul
cmpsl
dec
push
outsb
cmp
sub
movsl
cmp
out
dec
dec
fnstsw
js
inc
jecxz
sbb
daa
mov
inc
negb
imul
adc
popf
or
push
jb
repnz
mov
aam
push
cmp
cmp
push
push
int
lods
jnp
push
fs
mov
scas
bndldx
sti
xchg
pop
xor
mov
pop
pushf
out
push
pop
mov
adc
shlb
mov
push
jbe
xchg
xor
lods
addl
cmp
jbe
push
mov
mov
add
shlb
sub
popa
int3
sti
mov
push
jnp
inc
scas
jg
or
or
repz
and
divb
cmp
mov
push
or
mov
and
in
and
xor
cmc
or
mov
je
inc
lret
std
dec
ss
cmp
xor
jae
in
mov
and
mov
ret
and
mov
mov
cltd
pop
out
imul
mov
les
out
ljmp
hlt
mov
push
add
cmp
movsl
and
subb
sbb
shrl
cmp
addr16
fwait
push
insb
fldcw
push
roll
add
cmp
test
or
jl
sub
or
mov
xorb
xor
fstpt
sahf
push
jl
jmp
data16
xchg
mov
ss
mov
add
dec
push
mov
ss
adc
push
fdiv
push
int
xchg
sbb
stos
dec
add
clc
or
in
cli
inc
jg
in
cwtl
nop
dec
pop
add
adc
xchg
jmp
xchg
cmp
sbb
xchg
dec
dec
sub
je
xor
jbe
inc
js
and
aas
aam
jle
popf
jl
int3
pop
dec
mov
mov
ret
adc
cltd
xchg
mov
sbb
xor
adc
pop
xor
xchg
sbb
rcll
mov
das
pushf
jl
add
push
out
xor
push
sti
push
push
in
jne
fidivrs
fidivs
adc
sbb
add
mov
xor
js
mov
pusha
mov
cltd
cli
mov
pop
popa
jmp
sar
lret
andl
movsl
mov
inc
test
insb
adc
incb
imul
jmp
lods
xchg
insl
loop
cmp
push
aad
movsl
push
je
cwtl
out
ret
clc
cs
xchg
mov
fdivrl
adc
pop
push
dec
cmp
mov
fiaddl
imul
cltd
push
and
js
jp
insb
in
repz
cwtl
inc
mov
fsts
arpl
in
xchg
mov
add
cmp
mov
and
cmpsl
xor
pop
std
arpl
push
pop
inc
pop
adc
cs
push
xchg
bound
mul
neg
sbb
jle
test
cmp
xchg
and
imul
mulb
loop
xorb
lock
xor
clc
adc
insb
pop
cmp
sub
lds
add
movb
pop
out
fisubs
stos
jb
clc
and
jbe
vandpd
or
fisttpll
adc
sbb
push
or
inc
pop
cmp
jp
int3
add
pop
daa
pop
push
jae
cmp
adc
loopne
pop
out
xor
or
adc
jp
or
clc
out
nop
mov
orl
pushl
into
dec
and
add
lret
into
mov
repnz
cmc
imul
sbb
test
cmp
cltd
daa
mov
fidivrl
leave
xchg
cld
or
mov
or
inc
lahf
pop
js
cs
xchg
jbe
lret
das
cmp
shlb
mov
xlat
add
pushf
inc
jnp
stos
out
out
dec
fst
aaa
gs
jmp
jne
rclb
pop
pushf
mov
fs
ja
or
mov
jl,pt
sti
xor
mov
dec
movsb
push
ret
test
imull
vcmpps
test
addr16
xor
rorl
jg
push
pop
jne
stc
jg
push
shll
add
inc
cmc
and
mov
lahf
loope
aam
repnz
fisttpll
rcl
sbb
push
ljmp
pop
push
mov
mov
nop
enter
imul
dec
lods
inc
pop
and
ror
or
pop
jp
mov
lcall
inc
repz
xor
sbb
jecxz
icebp
mov
dec
push
in
iret
xor
std
add
mov
in
repnz
jmp
dec
xor
stos
popa
dec
dec
pop
rcll
fmuls
dec
cmpsl
push
ds
fstpt
inc
inc
cwtl
pop
lea
fwait
inc
sti
pop
jo
scas
stos
std
mov
lea
ja
cmp
xchg
mov
fistl
jmp
sub
sbbb
pop
mov
inc
adc
insb
mov
sarl
lea
mov
loope
imul
shrb
stos
movsl
inc
mov
test
fisttps
loope
mov
add
test
orps
add
out
or
mov
dec
mov
cmp
insl
jae
and
orl
andb
jnp
dec
dec
jbe
mov
je
js
into
jg
adc
sar
arpl
add
sahf
and
pushf
jmp
sub
fcomip
mov
in
push
fidivrs
enter
xlat
addr16
and
rorl
or
sub
imul
pop
dec
sub
fcomip
push
jb
or
jne
add
xchg
mov
out
popa
mov
adc
test
cwtl
pop
fwait
jne
or
call
sahf
test
dec
or
mov
adc
jno
xor
pop
lret
sbb
push
or
jl
push
stos
xchg
inc
xor
hlt
loop
jecxz
mov
jno
je
aaa
or
das
scas
arpl
pop
push
sbb
push
mov
test
mov
cwtl
aad
pop
push
or
pop
mov
pop
int3
cmp
or
adc
inc
mov
pushf
mov
and
dec
fwait
or
mov
push
test
out
sub
in
sbb
and
mov
xorl
leave
imul
adc
jbe
push
ret
ret
fs
rolb
dec
insl
sti
mov
cs
and
push
jl
pop
jge
inc
test
jmp
adc
std
loopne
pop
out
adcb
insl
xor
jmp
dec
push
loope
jns
fimuls
mov
shr
xchg
lds
nop
mov
fstps
cli
lret
enter
movsb
cmp
sbb
mov
sbb
xchg
inc
pop
imul
popf
nop
popf
mov
push
jle
mov
mov
mov
rorb
ja
push
clc
fstpt
lods
mov
pusha
mov
cmp
inc
push
jb
adc
mov
xchg
pop
jo
inc
cwtl
jecxz
fldl
fwait
mov
add
cwtl
mov
mov
in
cmp
loope
and
shl
add
inc
jbe
adc
adc
imul
mov
inc
and
stos
xchg
add
adc
pop
lret
mov
sar
stos
cs
pop
int3
push
lret
cmpsb
rcrb
loopne
adcb
adc
ljmp
jb
pop
imul
jbe
insl
inc
scas
pop
dec
inc
icebp
lret
in
mov
std
cmpl
and
mov
f2xm1
lock
push
mov
dec
sbb
imul
mov
fmull
lods
xor
inc
adc
pop
pop
xor
inc
test
inc
mov
sub
stc
add
cs
stos
inc
stc
enter
rcl
xor
pop
js
inc
faddl
insb
stc
mov
add
xor
add
xor
icebp
pop
jp
test
jb
inc
mov
sub
inc
add
outsw
push
and
ljmp
sub
pop
dec
and
test
push
lret
xchg
loop
jl
inc
outsb
aad
sub
dec
mov
dec
mov
repnz
lods
rcrl
leave
mov
cwtl
dec
inc
mulb
scas
movsl
std
in
push
cmp
mov
decl
adc
sti
scas
cmp
sbb
ja
ljmp
dec
cmp
xchg
add
cli
cmpsl
jae
out
pop
push
cmpsl
sbb
xchg
test
jae
leave
dec
std
iret
shll
popf
push
lods
mov
mov
pusha
xor
cmp
pop
out
lods
adc
and
dec
imul
jp
fcmovb
and
and
frstor
enter
xor
arpl
test
fldt
and
xchg
mov
xchg
outsb
sub
push
dec
cwtl
test
xchg
loope
jne
or
sbbb
cmp
inc
roll
in
int3
push
xor
pop
rcll
outsl
shrl
cmpsb
mov
dec
test
or
jnp
mov
jbe
test
scas
add
jne
es
inc
sub
mov
lods
in
daa
pop
into
int3
inc
add
into
jb
aaa
jmp
xchg
aam
mov
call
pop
xchg
icebp
xchg
imul
jp
sti
icebp
mov
aas
ja
loop
das
sarl
out
out
sahf
sub
push
xor
fcompl
inc
push
mov
xor
test
aas
cmp
fwait
pushf
pop
or
lock
aas
adc
insl
xchg
loopne
test
inc
rcrb
dec
dec
mov
stos
xor
xor
aad
and
pop
and
inc
or
cmp
fs
add
out
add
cmp
mov
repz
fmul
cli
out
fcomi
xchg
sub
in
xchg
xor
cs
adc
mov
xorb
inc
loop
bnd
xchg
xchg
xor
xlat
jb
inc
notl
mov
aaa
xchg
inc
loop
bnd
xchg
xchg
xor
xlat
jb
inc
notl
mov
aaa
xchg
inc
loop
bnd
xchg
xchg
xor
xlat
jb
inc
notl
mov
aaa
xchg
inc
loop
repnz
not
js
push
gs
pop
lea
mov
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jmp
faddl
shl
lods
mov
and
dec
and
and
movsb
cld
mov
int3
repz
ret
clc
cmp
insb
ja
rorl
cs
sbb
or
in
cmc
mov
fwait
aam
movsl
cli
mov
test
xchg
xor
jg
ja
pop
jae
pop
and
arpl
mov
pushf
fistpll
pop
insl
loopne
cmp
cmpsb
ficompl
dec
pop
les
jne
cld
cs
aad
pushf
xor
sbb
and
jae
sbb
in
or
mov
pop
xor
mov
pusha
mov
xchg
mov
scas
fcmovnbe
xor
inc
ss
mov
cltd
es
stc
sbb
dec
arpl
or
cmp
ret
or
pushf
dec
xchg
adc
xor
push
jns
adc
and
mov
ret
xchg
shl
cmp
add
fnstcw
bound
dec
mov
cwtl
fsubl
inc
dec
ss
fmul
adc
push
in
mov
jae
mov
inc
or
mov
int3
jecxz
stc
lods
rcrl
je
inc
sbb
and
xor
push
pop
or
idivb
mov
shl
scas
jmp
popa
pop
insl
sub
pop
pop
cs
pusha
mov
mov
mov
mov
or
or
jbe
push
dec
adc
jnp
js
cld
xchg
in
idivb
jecxz
rcrl
insb
adc
jae
arpl
sbb
or
cld
mov
int3
repz
ret
mov
jl
insb
adc
jae
arpl
sbb
or
cld
pusha
dec
pop
jmp
fdivl
iret
xor
xchg
sbb
inc
xor
iret
int
out
pop
push
out
sub
push
push
pop
or
sbb
push
inc
and
dec
jp
int3
sub
pop
dec
mov
mov
cmp
cmp
and
lahf
add
imul
pusha
out
inc
pop
ret
rorb
jne
dec
cmp
fcmove
lret
inc
ss
outsb
inc
xchg
lods
sub
scas
pop
add
inc
sbb
dec
dec
cmpsb
cmp
pusha
mov
addr16
push
imul
or
stc
rcl
in
cmc
bound
sbb
mov
mov
mov
cmp
imul
mov
dec
inc
sarl
out
jbe
sub
pop
aad
outsl
je
fdivl
in
lret
sub
jecxz
mov
mov
pushf
ljmp
enter
sbbb
aam
pusha
jnp
lods
popf
pushf
and
xor
mov
test
mov
hlt
divb
push
pop
lcall
das
data16
mov
cmp
into
dec
adc
push
dec
cli
inc
push
xor
stc
mov
and
insb
pop
xadd
shlb
fnsave
je
mov
inc
out
test
jns
bound
les
xchg
jge
and
sub
loopne
test
adc
cli
and
aas
cmpsl
mov
pop
sbb
out
mov
or
leave
insb
es
add
xchg
iret
cmpb
cmp
jo
mov
sbb
push
push
add
test
inc
lahf
mov
lds
and
mov
push
sti
mov
add
xor
orb
cltd
sbb
pop
stos
xor
mov
sub
add
outsl
addl
push
add
popa
test
loop
rorb
lock
inc
testb
imul
inc
out
scas
dec
test
daa
pop
sbb
cmovne
and
adc
push
and
cmp
pop
jne
shlb
sub
out
cltd
inc
in
dec
dec
fyl2x
icebp
out
adc
fldcw
sub
jbe
jl
push
mov
xlat
notb
add
add
push
xchg
sbb
adc
dec
movsb
int3
dec
enter
add
mov
in
andl
push
jne
divb
jae
stos
out
dec
mov
mov
or
mov
pop
outsb
bound
inc
mov
mov
out
jns
xor
inc
pop
int
lret
aad
test
movsb
or
dec
xor
xchg
mov
insl
cmc
testl
cmp
and
sub
inc
leave
scas
jae
mov
sbb
js
add
sub
scas
mov
outsl
inc
jge
and
or
pop
cwtl
icebp
fistpl
sub
fwait
push
inc
pop
cmp
mov
push
pop
pop
jge
insl
in
lea
mov
add
jge
pop
adc
mov
test
jge
adc
scas
popf
popa
in
mov
stc
mov
adc
in
jl
repnz
imul
pusha
add
std
mov
imul
xorl
cmc
sarb
inc
jo
pop
arpl
or
stos
pop
popf
and
repnz
xor
push
lds
mov
jne
cmp
pop
insl
stos
jae
and
popf
cltd
jecxz
mov
insb
scas
add
add
jne,pn
lret
inc
jne
and
cmp
add
aaa
int3
or
movsb
bound
pop
mov
js
jp
add
mov
sbb
out
inc
jge
inc
jp
movsb
das
ret
xchg
xor
and
aad
xchg
int3
setb
mov
in
push
push
and
xchg
cmpsl
testl
pop
fldcw
out
dec
pusha
gs
xchg
fisubl
jmp
mov
adc
sti
daa
mov
shll
jo
ja
push
mov
lret
addr16
pusha
cmc
mov
mov
repnz
or
jb
sbb
sbb
scas
out
xchg
pextrw
xchg
out
mov
dec
or
xchg
ss
dec
jge
js
dec
aam
repz
sub
xor
mov
les
adc
outsb
push
imul
pushf
cmpsl
jae
fmuls
pop
push
jp
stos
pop
and
xor
mov
mov
sti
jl
movb
imul
rorl
cmp
inc
enter
mov
loope
out
cmp
adc
lods
lret
sbb
cmp
mov
xor
imul
scas
lea
mov
xchg
xor
push
adc
arpl
dec
dec
out
popf
mov
mov
cltd
push
xchg
lahf
mov
jne
jne,pn
ja
pop
add
jae
mov
xchg
cmp
sahf
sbb
push
subb
nop
icebp
mov
adc
imul
jle
push
data16
clc
mov
in
mov
pop
xor
lret
leave
xchg
lds
fldl
cmp
nop
push
lock
dec
jg
out
or
add
cmp
lahf
loopne
shll
fildl
shrb
inc
or
nop
push
xlat
iret
sbbb
cmp
lahf
push
bound
cmp
jp
dec
arpl
adc
cmp
dec
or
test
jge
add
lea
scas
andl
divl
out
std
sub
mov
mov
jne
pusha
out
sbb
xchg
fnstsw
xor
je
movsb
sub
shl
cs
rcll
xchg
fsubl
mov
inc
push
int3
cmp
push
add
xor
in
scas
popa
hlt
stc
jae
fnstenv
sbb
xor
sub
mov
ror
lret
dec
test
sbb
inc
xor
mov
and
xchg
dec
mov
sub
sub
mov
dec
in
cmp
rcll
in
je
sahf
mov
adc
jmp
inc
pop
das
xchg
sub
pop
test
insb
movsl
fdivs
icebp
fildll
xchg
mov
sub
sar
and
idivl
add
loopne
out
ljmp
pop
push
mov
jne
adc
xor
andb
mov
jbe
imul
pushf
out
aam
mov
mov
out
push
imul
jmp
loop
sub
dec
cmpsb
test
out
cmp
xor
cmp
lds
fst
lret
hlt
aas
lahf
xchg
into
cmp
and
jg
sub
mov
jne
or
sub
mov
jl
xchg
xchg
gs
sti
dec
push
sub
call
rorb
in
stos
add
sub
and
lret
jmp
outsl
dec
cs
insl
and
insb
sbb
mov
fwait
xchg
adc
stos
ds
call
fiaddl
inc
xor
push
and
push
xor
or
xlat
sbb
xor
push
fcmovnb
mov
orb
sub
repz
xor
mov
lock
push
aas
cwtl
jl
mov
rolb
add
push
js
mov
sbb
inc
je
imul
jecxz
add
sub
sub
fucomip
and
or
lahf
fidivl
push
jae
std
es
pop
mov
push
mov
mov
pop
inc
aaa
mov
mov
out
stc
popa
dec
dec
pop
pop
rclb
sti
stos
mov
cmpsl
insl
dec
ret
mov
enter
jecxz
pop
in
mov
js
jge
push
jnp
jmp
iret
sub
sti
pop
imul
repz
jmp
lock
sarl
arpl
ficoms
adc
sbb
shrl
mov
jne
clc
cmc
cld
mov
adc
pop
sbb
loope
xchg
lods
jmp
lock
sub
lods
push
cmp
mov
and
sbb
xchg
xor
mov
lods
jnp
in
out
sub
inc
cwtl
mov
outsb
sahf
push
loopne
mov
xorl
and
ret
mov
hlt
mov
lret
lret
and
xchg
movsl
sarb
adc
lret
call
adc
arpl
je
add
add
pop
inc
dec
repnz
out
outsb
xchg
xor
inc
mov
push
pop
test
inc
xor
imul
jge
push
mov
sahf
bound
adc
push
loope
lods
insb
lahf
mov
icebp
test
xchg
test
adc
and
shlb
mov
pusha
jecxz
cmp
xchg
mov
mov
lret
ds
sbb
xchg
xlat
cmpsb
lret
aad
sbbl
fdivrl
push
fstl
lds
movsb
lock
and
adc
ret
xlat
xor
mov
es
mov
pop
shr
mov
inc
call
lret
push
xchg
and
lods
push
test
scas
ss
adc
mov
mov
sbb
aad
and
insl
mov
mulb
dec
push
outsl
imul
js
js
xor
je
or
outsb
fwait
scas
cmc
mov
add
inc
lea
sbb
push
sar
bound
ret
aad
cmc
jnp
pop
xor
lret
push
mov
addl
jae
push
idivl
dec
jae
orl
sub
xchg
jne
leave
add
sbb
outsl
js
ret
fimuls
in
shr
cmc
sub
ja
lret
leave
add
ffree
in
call
mov
push
lcall
ret
pop
stos
and
push
and
loopne
scas
shlb
jp
and
dec
sub
inc
cmp
xor
or
sbb
xchg
mov
fimull
std
add
add
inc
aaa
sbb
fidivl
addr16
pop
cmpsl
cmp
ss
mov
sub
aam
add
sbb
mov
addr16
rsm
inc
inc
sbb
dec
jecxz
stc
or
stc
and
scas
sahf
loope
in
mov
cmp
mov
pop
or
mov
or
push
jge
adc
rorb
jmp
test
jns
ret
mov
mov
mov
sub
pop
ljmp
es
dec
push
mov
sub
adc
sbb
xor
push
dec
dec
sbb
push
fwait
push
inc
stos
xchg
out
pushf
lods
inc
cmpsl
dec
cmp
add
cltd
loope
adc
push
mov
xchg
sbb
pop
jbe
cmc
rol
shrb
pushf
test
lahf
sbbb
inc
lock
sbb
add
xchg
xchg
adc
sbb
cmpsb
dec
in
in
js
data16
mov
mov
jge
out
insb
movsb
inc
mov
mov
dec
sub
lss
xchg
pop
pop
dec
mov
add
xchg
lods
out
push
movsl
arpl
mov
lahf
pushw
sub
or
push
js
jl
ds
shrl
mov
nop
rolb
fs
push
sbb
and
pushf
cli
dec
icebp
mov
xchg
lahf
cmp
stc
fmuls
inc
inc
jg
pop
mov
inc
or
or
xchg
jbe
inc
ret
dec
imul
aas
xor
pusha
in
cmc
push
jl
jge
inc
faddl
mov
inc
or
cld
inc
hlt
xbegin
push
push
mov
popf
inc
push
cmp
pop
ljmp
mov
xorl
lret
rclb
pop
pop
out
cmp
sbb
ljmp
out
ret
mov
rol
inc
fsubrs
rol
push
aam
rcr
pushf
push
dec
bound
lods
mov
cmpsb
cwtl
cmp
test
mov
jo
clc
pop
xor
into
cs
mov
cmpsl
pusha
pop
xchg
mov
cmpsb
fisubrl
cld
mov
call
add
lahf
shlb
lcall
rcl
cmp
daa
mov
or
inc
mov
mov
push
movb
pop
sub
inc
popa
xchg
or
mov
ficompl
or
je
pop
nop
mov
int
jecxz
mov
or
lret
jae
dec
roll
xchg
je
leave
and
inc
push
les
scas
daa
rcrl
in
mov
mov
and
inc
insb
jb
cmpsl
jl
div
movsl
fnsave
sbb
popf
lods
push
nop
ret
shl
dec
sub
rorb
call
addr16
call
jg
push
cmpsb
adc
mov
add
or
popf
push
inc
push
jl
pop
stos
dec
xorb
cmc
test
in
sbb
sbb
adc
cmp
jp
movsb
das
pop
dec
or
cli
or
call
lret
xor
fnstsw
inc
aas
xchg
and
jp
ja
mov
push
xchg
push
cmp
xor
mov
jb
xor
sbb
loopne
and
mov
pop
cmc
sar
inc
test
jmp
sub
mov
mov
mov
sub
cmp
mov
inc
push
mov
xchg
cmpsl
sub
jecxz
fldt
fidivrl
gs
dec
cwtl
jo
subl
gs
popa
test
xchg
leave
dec
jmp
push
hlt
pop
in
or
adc
scas
add
jo
lahf
sti
jo
movsl
lock
cmp
std
pushl
inc
shrl
out
add
ret
lea
jmp
leave
mov
adc
mov
or
xor
fs
test
lock
sbb
arpl
sub
xchg
pushf
sub
out
decb
rolb
xchg
mull
push
addr16
fisubrl
push
scas
nop
lret
mov
cmp
dec
dec
sbb
scas
sbb
xchg
mov
push
xchg
lock
js
sub
in
cmp
jmp
xor
cwtl
lret
imul
je
loope
int
mov
xchg
lock
subl
fists
mov
sub
mov
pop
push
mov
pop
fbstp
ljmp
shr
jbe
lock
outsb
adc
mov
or
repnz
inc
cmp
cmpl
pop
mov
inc
js
adcl
adc
lock
fisubl
or
dec
and
adc
aam
inc
inc
cld
daa
sbb
pop
xor
push
cmpsl
and
idivb
imul
jle
jno
test
push
pop
lea
sbb
addr16
std
add
repz
stc
outsl
shlb
fmuls
loope
jmp
push
addr16
or
push
daa
xor
or
lcall
dec
adc
or
dec
lock
jl
pop
ja
mov
cmp
sub
dec
mov
not
data16
jmp
sbb
sub
ja
sub
cmp
lahf
jbe
gs
dec
stc
bound
and
in
scas
adc
outsl
arpl
inc
mov
add
cmp
xor
push
pop
or
lock
sarl
dec
jne
lods
add
sahf
stc
jns
add
test
cmp
xor
out
mov
jge
insl
popf
dec
repz
push
sbb
cltd
mov
add
aaa
daa
xchg
push
jns
mov
popa
mov
ljmp
and
and
pop
pop
aas
mov
cltd
xor
pop
ja
das
stc
mov
and
out
or
add
sbb
jno
into
enter
jmp
jecxz
int3
mov
dec
jae
mov
sbbl
lods
push
and
fistps
icebp
mov
mov
loopne
imul
jl
xlat
pusha
clc
outsb
lods
xchg
inc
dec
cmpsb
out
popf
xchg
mov
test
repz
repz
inc
ljmp
punpckhdq
aad
cmp
ret
inc
loopne
xchg
fucompp
sti
insl
das
push
jo
mov
adc
pop
push
cmp
cmp
lret
lcall
adc
cmpsl
cmpsb
je
or
jb
pop
es
jge
add
sbb
call
cmpsl
jge
lds
aas
ss
test
ja
mov
ss
dec
mov
jl
cmp
sbb
stc
call
pop
loopne
ds
inc
lds
loop
add
mov
test
rclb
cmp
test
jg
cwtl
bound
xchg
mov
leave
lock
fs
or
pusha
les
xchg
pop
in
xor
hlt
sbb
sbb
push
push
cmpsb
aas
outsl
mov
ss
xor
pop
mov
and
or
leave
daa
dec
push
pop
jmp
ljmp
pop
std
fists
xlat
sub
jo
cwtl
hlt
aad
jp
stos
xchg
add
ljmp
cmpsl
push
jmp
inc
test
xchg
icebp
dec
dec
outsl
daa
push
out
fs
lock
test
jg
ret
mov
adc
aam
mov
fsubrl
jo
cmc
cmp
ret
jg
outsl
nop
pop
and
testl
mov
rcll
and
inc
sbb
dec
mov
xor
push
xchg
test
shr
sub
lret
cltd
xor
and
inc
insl
mov
push
fcomp
push
movsl
nop
sub
xchg
jl
aas
fwait
sub
xor
or
adc
push
mov
aaa
add
ss
adc
adc
out
repz
fidivrs
add
leave
test
dec
push
lret
outsl
push
push
je
rolb
pop
xor
out
jo
jno
aas
xchg
ret
stos
cmp
xchg
fists
lahf
in
mov
jp
xor
rclb
push
dec
testb
fcoms
mov
cmc
pop
mov
sbb
mov
jmp
iret
mov
jecxz
mov
nop
mov
sahf
pop
cmp
inc
imul
fnstcw
idiv
inc
rcl
cmpsl
fs
jb
lret
fcomps
mov
jl
pushf
sbb
mov
icebp
push
jno
daa
lret
cmpsb
fcomi
out
pop
inc
aad
mov
and
push
cmp
push
sbb
mov
mov
jo
ss
call
jbe
into
movsb
adc
xchg
inc
lret
and
mov
loopne
fisubrl
inc
daa
adc
inc
sbb
sti
fs
icebp
shll
mov
mov
xchg
push
bound
pop
dec
xchg
inc
lahf
aad
jns
sbb
cwtl
std
icebp
xchg
or
or
iret
jbe
mov
mov
lret
inc
or
inc
pop
filds
add
hlt
jl
mov
xchg
xor
mov
xor
inc
cmp
in
mov
cmp
adc
loope
push
mov
mov
cmp
xor
pop
jae
push
mov
jns
dec
fwait
gs
leave
pop
test
add
outsb
out
out
loopne
loop
mov
sarl
cmp
add
dec
shll
in
pop
pop
stos
and
adc
pop
push
js
mov
stos
fmuls
xchg
les
fsubrs
mov
mov
loope
xchg
lret
fdivp
inc
mov
dec
stos
xchg
pop
add
rclb
stc
jmp
dec
pop
mov
sti
mov
mov
in
ficomps
pusha
sbb
mov
insl
fucomip
in
adc
cmp
arpl
sbb
fldl
stc
hlt
ja
mov
push
or
out
xlat
pop
in
ss
test
jno
orl
arpl
pop
cmp
rorl
cmp
out
mov
xchg
dec
pop
popa
add
xchg
cmp
push
das
xor
in
adc
jns
dec
jge
pop
and
jae
pop
loopne
xor
cmp
xor
cmp
dec
cmp
dec
jo
rorl
popl
adc
enter
pop
mov
pop
pop
je
ljmp
call
pop
xor
out
or
in
add
cmp
je
inc
pushf
mov
cmp
enter
imul
fwait
mov
test
lret
sub
mov
mov
mov
and
in
cmp
cmp
or
pusha
imul
loope
loopne
ret
push
sub
sti
shlb
and
outsl
aas
push
cmp
inc
sahf
pop
fdivr
jecxz
jb
mov
andb
ja
das
mov
sbb
in
add
shlb
or
jg
mov
adc
aas
sub
add
sbb
push
sbb
dec
gs
and
push
mov
cmc
mov
mov
notb
mov
push
lret
mov
cmp
push
repz
stc
arpl
imul
js
pop
mov
mov
ja
dec
sbb
subb
mov
xchg
cmp
sub
out
das
lcall
cmp
popa
std
mov
pop
aam
aam
outsl
mov
xchg
cmp
sbb
fisttps
dec
xor
mov
push
mov
pop
pop
orl
mov
movsl
sub
pop
adc
lret
push
push
fstpt
dec
mov
leave
mov
xchg
fdivp
add
aad
inc
push
lods
xlat
inc
fs
movsb
mov
push
leave
clc
inc
jge
lds
repz
les
outsb
jg
and
jle
mov
adc
fisubrl
sub
add
add
xchg
pop
subl
addr16
call
jmp
inc
mov
leave
jbe
sbb
mov
scas
popf
rcr
in
mov
mov
ret
mov
jl
insb
adc
jae
arpl
sbb
or
cld
mov
int3
repz
ret
mov
jl
insb
adc
jae
arpl
sbb
or
cld
mov
int3
repz
ret
mov
jl
insb
pop
pop
add
cmp
sub
sbb
xchg
xchg
call
repz
inc
dec
int3
jl
mov
mov
push
lods
arpl
enter
adc
cld
xchg
js
dec
inc
pop
bound
pop
cmp
sbb
sbb
call
repnz
test
mov
mov
js
sub
bound
cmp
add
xor
and
je
add
push
mov
nop
push
adc
sub
inc
cwtl
xchg
clc
addl
jnp
xor
mov
and
lods
push
pop
int
imul
xchg
pop
sbb
aad
aad
pop
add
stc
fwait
stos
mov
jnp
inc
in
stc
push
jae
pushf
xchg
loope
decb
sar
ret
xor
test
xchg
mov
jb
das
js
mov
arpl
pop
imul
add
aas
fwait
bswap
sbb
mov
pop
add
adc
jnp
push
pop
lea
scas
adc
pop
xor
jo
jo
pop
mov
cmp
jp
inc
or
sbb
pop
clc
loop
xchg
loop
xchg
mov
xor
js
dec
jo
pop
sub
cmp
or
sbb
pushf
sarb
jmp
fucomp
iret
std
in
adc
xor
xlat
cmp
pop
push
je
gs
insb
dec
mov
mov
mov
rcr
mov
loopne
cmp
adc
push
arpl
add
pop
push
sahf
mov
clc
mov
fidivrs
mov
dec
jb
bound
adc
add
xor
and
sar
ret
fsub
test
mov
mov
dec
jb
bound
adc
add
xor
and
sar
xchg
inc
cmc
mov
cli
sbb
sbb
add
mov
xor
adc
movsb
sub
sub
lds
mov
popf
mov
pop
pop
rclb
repnz
testl
ret
ds
xor
aaa
popf
jne
sub
push
lods
loope
and
std
lock
out
add
jns
rclb
pop
shll
or
and
add
jb
sub
xchg
mov
and
cmpsl
pop
inc
aad
idivb
pop
pop
lock
dec
xchg
call
pop
popf
xor
sbb
cmp
in
adc
pop
lock
xor
xlat
pop
add
mov
sub
fsubrs
out
repz
mov
dec
jg
sub
lock
fs
inc
and
mov
lret
ja
hlt
push
or
stc
xchg
lods
fsubl
sub
mov
inc
imul
sbb
pushw
pop
push
pop
inc
xlat
test
test
fimuls
sbb
movsl
sub
loop
push
pop
mov
mov
jb
pop
xor
pop
jnp
arpl
aam
aaa
push
cmp
jne
inc
in
lods
adc
inc
push
jno
lock
dec
test
loop
pop
mov
ljmp
dec
jg
fisttpll
push
cld
cltd
aam
xchg
push
mov
scas
sbb
sti
call
sti
dec
outsl
jno
int
add
gs
sbb
aas
lahf
in
pushf
out
cld
in
ret
push
inc
fimuls
pop
mov
jge
pop
ds
mov
push
popw
cmpsb
xor
dec
filds
push
jne
and
sub
gs
mov
mov
xchg
adc
mov
imull
insl
fildll
cmp
repz
mov
pop
and
xchg
or
movsl
dec
push
leave
cld
jae
inc
adc
fdivr
and
je
and
movsl
xchg
xor
xor
inc
movsb
pop
jle
sbb
mov
fcom
or
push
loope
or
mov
or
fsubrl
outsb
movsb
pop
test
imul
out
dec
fldt
xchg
clc
das
sbb
scas
and
mov
cmp
cmp
out
es
mov
sarl
cld
mov
jl
fistl
imul
fstl
shlb
cmp
lds
dec
iret
fimuls
daa
int3
mov
fisttpll
jg
daa
clc
jg
insl
inc
mov
xor
jecxz
out
lahf
mov
shlb
sahf
outsl
mov
pop
fimuls
xchg
inc
dec
mov
xchg
fcoml
std
je
mov
testb
and
xchg
inc
clc
mov
or
cld
mov
daa
inc
incb
test
leave
das
jbe
repz
in
and
pusha
hlt
cli
mov
dec
or
shlb
ja
cmpsl
stos
ret
out
ljmp
adc
jbe
scas
jle
cmp
push
xchg
repz
rclb
inc
mov
int3
stc
fsubp
or
xorb
mov
sarl
int
adc
jae
cld
lds
nop
or
jge
push
push
adc
jbe
fsts
push
mov
mov
in
lret
pop
int3
mulb
or
rcrl
ds
jge
in
jge
fcomi
int3
je
clc
imul
lret
xchg
lret
mov
aam
sti
push
in
insl
mov
aad
clc
roll
cmpsb
jl
mov
inc
pop
idivl
ret
scas
fs
dec
fisttps
adc
mov
pusha
enter
mov
jb
pop
adc
rcll
xlat
cli
sarb
jg
fxam
cmp
push
test
dec
cli
fcmovu
add
ficoml
fdivrl
sbb
popf
push
push
mov
mov
subb
add
jl
ret
cltd
pop
out
xlat
int3
and
ja
xchg
sub
pop
xchg
xor
in
stos
sub
cmpsl
xchg
test
test
add
sbb
push
mov
test
xchg
dec
xor
cmp
js
sbb
fs
xchg
repnz
inc
xchg
jo
out
dec
lea
jo
shlb
sub
mov
sub
mov
lret
int
jecxz
outsl
and
mov
push
outsb
jbe
or
out
add
lret
fsubr
and
and
inc
test
shrl
mov
ds
jae
ljmp
ljmp
cmpsl
or
and
out
adc
jne
shl
outsb
dec
ret
aas
nop
addl
rcl
imul
ja,pt
cwtl
dec
adc
jmp
stos
ljmp
mov
cmp
rolb
push
jg
hlt
call
test
fildll
pop
inc
in
push
outsb
xchg
out
mov
mov
sub
inc
pop
imul
inc
insl
or
pop
adc
cmp
aaa
stos
inc
popf
es
loop
enter
notb
into
nop
mov
iret
ljmp
mov
shl
pop
cmpsb
rcr
in
or
push
push
leave
aaa
mov
cmc
jb
pop
test
jle
pop
mov
jns
push
stos
push
cmp
push
inc
push
jmp
xchg
stc
and
rorl
rcrb
inc
sbb
xchg
cmp
sub
sti
or
loopne
clc
popf
mov
xor
rcrl
and
pushf
sbb
mov
popa
stos
xlat
or
add
jmp
jo
rcrb
in
jae
cli
jl
add
ret
xchg
inc
ret
scas
or
jnp
mov
mov
ljmp
loop
dec
aam
push
dec
mov
push
andl
pop
jno
call
adc
add
in
mov
shll
and
pop
sbb
dec
pop
fldt
mov
iret
out
outsl
in
iret
lcall
cmpsb
adc
pop
xchg
xor
push
inc
icebp
mov
out
push
pop
stos
cld
mov
andl
fs
xchg
pop
or
push
into
push
test
decb
orl
in
call
mov
sbb
test
mov
and
idivb
xchg
repz
mov
shlb
push
mov
dec
pop
fnstcw
add
add
and
adcl
add
ret
mov
repnz
test
lcall
jmp
lret
ss
cmp
mov
xchg
xchg
mov
repz
insl
mov
xchg
cs
push
movsl
movsb
mov
lock
cmp
mov
xor
cmp
and
icebp
sub
movsb
mov
test
aad
sub
xor
adc
push
sbb
jo
test
cmpsl
lahf
mov
scas
loope
pop
je
and
mov
xchg
sbb
pop
fisubrs
inc
push
mov
ja
es
popa
add
jmp
iret
add
outsl
cmp
negb
lahf
cli
jge
cmp
pusha
nop
pop
loopne
mov
sub
notb
movd
xor
and
cmp
ja
cmp
fucomi
pop
neg
xchg
push
popf
ljmp
add
dec
fwait
addr16
and
and
sarb
sbb
outsl
aam
mov
loope
or
mov
xchg
fs
sbb
loopne
xor
mov
fimull
into
push
shl
cmp
sbb
repz
push
scas
mov
rcrl
inc
loope
rorb
or
jge
xchg
scas
ljmp
je
ds
dec
out
sub
aas
mov
scas
sub
mov
clc
shll
jbe
pop
fldcw
adc
fmul
mov
cwtl
cmpsl
dec
cmp
clc
js
stos
sub
imul
mov
dec
cwtl
out
mov
dec
jae
lret
js
movsl
sbb
in
sbb
insl
jae
sub
shll
push
mov
add
adc
push
or
xchg
clc
dec
sahf
sti
shrl
cmpsb
mov
push
in
xchg
push
xor
lahf
push
push
insb
mov
roll
js
dec
mov
xor
test
les
sub
pushf
lahf
scas
adc
cld
xchg
push
je
cltd
mov
loope
xchg
pop
mov
stos
mov
in
insl
cmp
push
add
js
sbb
cmc
push
fld
pop
pop
jb
int3
cmp
cmpsl
xor
jne
push
rol
xchg
gs
pusha
les
and
mov
in
push
adc
adc
add
lds
xchg
inc
repnz
cmp
leave
add
jbe
mov
in
mov
add
and
jle
rol
mov
inc
or
pushf
mov
and
addb
mov
mov
xchg
adc
xor
push
das
out
in
sub
nop
add
mov
hlt
sbb
test
addr16
or
pop
addr16
xor
mov
mov
lcall
gs
sub
or
scas
xacquire
stos
push
sub
popf
mov
addb
ret
cli
fyl2x
js
shlb
stos
inc
adc
push
aam
pcmpgtd
mov
mov
add
lcall
fadd
push
sub
dec
out
adc
dec
dec
fldt
xchg
std
jmp
loop
test
jg
cmpsl
jg
rcrb
sub
or
jmp
mov
mov
mov
mov
cmpsb
fldt
jmp
dec
add
add
das
int3
mov
xchg
adc
test
subb
pop
test
mov
pop
call
in
jnp
fidivl
shrb
jae
dec
sahf
adc
sub
mov
nop
in
or
add
push
shll
lds
cmpsl
mov
cs
jg
inc
lahf
xor
jo
lods
icebp
jne
sbb
stc
dec
xchg
cwtl
lds
push
sbb
les
sub
scas
dec
lret
lea
dec
js
repz
jne
ror
jnp
lahf
mov
xor
jno
stos
mov
sbb
hlt
test
pop
fwait
mov
call
jle
add
popa
in
jg
test
pop
sbb
pop
popf
cmp
pop
mov
sahf
leave
pushf
push
push
mov
orb
mov
cld
push
xor
push
repz
push
shrl
mull
inc
aam
dec
pop
imulw
fsubs
mov
xorb
or
loopne
inc
leave
or
movsl
cltd
mov
xor
rclb
mov
std
mov
or
out
xlat
cmc
sarl
testl
vmovaps
and
repz
ss
and
das
push
mov
sbb
dec
adc
aam
jns
in
push
pop
lahf
cmp
push
pop
jnp
cmc
iret
enter
pop
lcall
data16
rorl
frstor
push
xchg
nop
repz
adc
in
stos
pop
jl
push
or
ja
sahf
js
dec
test
add
sub
lods
sti
sub
sub
lret
in
scas
test
cmp
adc
fcmovu
hlt
ljmp
dec
cmp
popf
les
inc
nop/reserved
test
add
pop
das
and
clc
mov
aam
inc
cs
hlt
popa
or
fs
adc
arpl
jg
cmpsl
mul
or
int3
cmpsb
vaddsd
add
nop
mov
cmp
stos
outsl
leave
mov
sbb
or
mov
mov
cmpsb
mov
mov
mov
mov
lods
push
dec
shlb
leave
shlb
cli
ret
mov
push
or
jge
lcall
inc
in
cmp
shlb
and
and
loopne
stos
int3
or
add
out
fisubs
mov
test
les
jge
add
fnsave
sub
adc
repz
xor
mov
popf
mov
lock
jecxz
mov
stos
mov
xchg
loope
xchg
and
xorb
das
push
cmp
xlat
add
lret
addl
popa
icebp
push
divps
lret
fs
movsb
lahf
cmp
jecxz
xchg
movsl
call
pusha
push
xchg
inc
out
imul
push
out
test
mov
cmp
xchg
jp
sbb
xchg
adc
out
jne
fdivs
stos
call
sub
mov
sti
jge
aas
cmpsl
aam
adc
mov
out
mov
in
pop
push
out
mov
xchg
int
aas
pop
push
es
push
lds
les
push
rcll
out
mov
fs
inc
fsqrt
hlt
inc
sbb
pushf
mov
lret
in
in
sub
xor
and
lock
jle
and
bswap
gs
dec
inc
inc
cmpsl
mov
lcall
pop
pop
xchg
pop
sbb
repz
jne
xchg
push
dec
enter
or
imul
shrb
mov
jne
jnp
in
or
shr
out
mov
dec
adc
sub
xchg
pop
int
mov
test
rclb
inc
shlb
adc
jmp
xor
mov
sub
mov
in
sbb
jae
or
fucom
push
enter
sub
lock
lahf
lods
sbb
pusha
xor
mov
in
les
dec
insl
adc
mov
add
icebp
push
cmp
daa
mov
dec
cmp
stos
adc
andb
or
sub
push
aas
sub
pushf
lret
int
jmp
cwtl
in
sub
test
xchg
dec
mov
lret
aas
cmp
imul
push
add
aad
sbb
or
and
popf
sub
lahf
int
push
jno
jne
repnz
in
sbbl
rep
sbb
mov
pusha
dec
adc
loope
xchg
rcll
sub
scas
dec
arpl
outsl
lret
icebp
lret
das
lcall
cld
out
out
jp
mov
xchg
das
mov
sub
fildl
mov
clc
mov
lret
dec
sahf
sub
repnz
call
cmp
ja
inc
bound
adc
movsb
inc
adcl
insl
cli
xchg
dec
in
or
lahf
mov
fwait
mov
negb
dec
sbb
dec
or
sub
aas
rclb
stos
stc
in
repz
jo
shl
std
shl
test
push
call
cmp
xchg
sub
in
js
jno
jp
pop
pop
push
jae
or
mov
lds
xor
push
mov
aaa
aaa
sti
pop
inc
and
inc
in
fidivs
rorl
sahf
sarb
out
push
and
jle
mov
sbb
dec
scas
adc
mov
sub
clc
mov
push
pop
jmp
loop
add
aaa
push
push
xchg
sti
xchg
adc
pop
cld
add
popa
mov
aaa
icebp
je
cmp
out
imul
ret
jb
shrl
ret
mov
fs
loope
test
push
inc
lret
jg
popf
mov
sub
lret
xchg
test
adc
add
pop
popf
dec
repz
or
imul
sub
fiadds
mov
inc
push
icebp
pop
subb
xor
mov
jnp
jecxz
push
inc
sbbl
xchg
sub
add
daa
ss
mov
push
sbb
xchg
jecxz
pop
mov
push
push
cmp
jo
or
movsb
movsb
inc
cmp
ds
or
daa
cmpsb
adc
daa
xchg
xor
jp
xchg
xchg
fs
movb
lods
push
add
mov
dec
jb
sbb
les
gs
fildl
int
jmp
call
xor
enter
imul
mov
test
dec
movsb
int3
cmp
enter
push
sbb
and
repz
in
test
test
jmp
mov
test
fisttpll
popf
mov
into
fdiv
mov
jbe
pop
or
imul
jmp
popf
jg
es
out
xor
inc
adc
iret
inc
aam
pop
into
aas
out
sbb
mov
push
stos
sub
ret
and
mov
movsb
jmp
imul
js
dec
cmp
and
mov
xchg
inc
fwait
movsl
cmp
mov
je
inc
lcall
out
ljmp
cmp
test
sub
and
das
jl
dec
mov
sub
xchg
into
and
fisttps
pop
sbb
xor
rcll
data16
lcall
add
fstpt
ljmp
and
add
insb
cmpsb
xor
out
mov
xchg
lret
in
lock
push
jg
mov
fiadds
inc
nop
mov
pop
adc
in
scas
mov
stos
lock
cmp
xchg
cmp
lcall
add
movsl
push
repnz
dec
out
sbb
add
sti
shrl
shrl
xchg
add
xor
inc
ljmp
cld
cltd
clc
dec
cmp
insb
imul
pop
movsl
mov
push
inc
push
fisubl
jns
fimull
lret
scas
inc
push
rcl
outsl
stc
aaa
mov
aaa
or
int
or
inc
add
jnp
dec
out
adc
mov
lret
shlb
xor
out
mov
and
adc
je
loope
aaa
push
pop
cmp
dec
jbe
fisttpll
fbld
pop
je
int
test
shll
rcrb
pop
xchg
jae
lcall
push
packsswb
mov
jecxz
repz
push
or
sahf
bound
xchg
lret
shl
cmp
inc
adc
fidivrl
pop
mov
nop
jle
fcoml
pop
out
test
mov
jp
adc
push
fidivl
shl
xchg
push
call
sbb
out
jle
dec
adc
dec
jecxz
repz
xchg
mov
inc
or
mov
movsb
add
sub
mov
loop
out
int3
stos
xor
sbb
jge
or
lret
mov
test
mov
xor
adc
pop
xorb
mov
mov
movsl
hlt
movsl
and
or
loop
push
push
cmp
pop
ds
push
lods
mov
arpl
xorb
jno
adc
push
dec
stos
test
mov
sub
pop
push
lods
xchg
push
notb
push
xchg
rcrb
aas
in
jno
call
pop
insb
lods
mov
ret
add
cmp
sub
cmp
push
jne
mov
adc
daa
ret
fistpll
sub
jle
xchg
into
sbb
fbld
push
cli
sti
aad
addr16
mov
outsb
or
xchg
clc
rorl
add
fcompl
mov
lds
dec
cld
ja
mov
icebp
push
xchg
dec
push
inc
or
or
xorl
adc
jge
jbe
lock
cmpb
lods
daa
and
data16
push
lods
lods
outsb
xchg
and
add
sub
sub
mov
lods
sbb
ret
in
pause
jbe
movsl
sbb
lcall
add
lret
mov
push
aaa
mov
pop
mov
in
iret
mov
sbb
fstl
cs
push
cmp
add
add
sahf
cmpb
push
cld
ret
lret
and
jno
mov
jno
mov
xchg
movsl
mov
xchg
dec
mov
mov
push
xor
fldt
mov
imul
in
mov
cmpb
dec
dec
xor
inc
out
mov
pop
add
std
movsb
push
lods
scas
int3
cmpsb
adc
pop
sti
inc
sub
mov
mov
push
pop
mov
std
add
dec
cmp
inc
push
and
jno
inc
jno
mov
fdivs
add
mov
cmp
loop
cmp
stos
push
in
cwtl
cmp
repnz
mov
mov
lahf
mov
sahf
mov
jae
pop
movsb
inc
bound
adc
push
rcr
decl
adcl
mov
in
test
jne
jne
jg
fnsave
lods
dec
mov
pop
fsubr
aad
mov
mov
mov
add
shrl
cmp
pop
dec
lea
or
fnstsw
lcall
stos
or
fs
fs
xor
xchg
xor
cli
ja
cmpsl
inc
jle
inc
mov
xchg
nop
std
movsb
jo
dec
lcall
jp
std
jmp
sub
std
dec
cwtl
shr
sti
je
push
push
mov
ja
push
lahf
fisttpl
mov
dec
movb
xchg
sti
xchg
rcrb
mov
jmp
mov
add
jne
int3
cs
loop
ret
dec
xchg
adc
xchg
and
add
jl
movb
pushf
and
mov
jg
repnz
cmpsb
cld
pop
push
movsb
cld
loope
and
xchg
insb
fildl
jb
push
ffreep
pop
dec
xor
cmp
xchg
push
pop
xor
ja
repz
push
mov
in
ret
fsub
test
mov
mov
dec
jb
bound
adc
add
xor
and
sar
ret
fsub
test
mov
mov
dec
jb
bound
adc
add
xor
and
clc
int3
enter
test
mov
mov
dec
jb
imul
cmp
or
sbb
jmp
push
fsubs
mov
cwtl
bound
js
loop
pop
adc
testl
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
add
cmc
ds
add
add
add
pop
add
add
add
jl
pop
add
add
add
add
add
add
rolb
add
add
add
add
jg
stos
add
or
mov
insb
add
lock
add
mov
sub
add
add
add
sub
ret
add
add
add
pop
mov
inc
add
add
add
add
add
add
aam
fadds
dec
add
add
add
xor
rolb
adc
sti
add
add
or
add
jns
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
push
jns
jecxz
and
xor
add
add
push
iret
add
add
add
pop
rolb
add
add
add
push
push
add
add
add
mov
rolb
jecxz
sbb
add
ret
add
and
sub
stos
add
add
inc
add
add
add
sub
es
add
pop
add
add
add
adc
sbb
add
add
push
add
add
add
add
inc
add
or
add
cmp
sbb
insl
add
mov
lahf
add
add
pop
lock
add
add
add
add
insl
add
add
add
add
mov
jge
lahf
add
add
add
add
push
add
mov
add
cmp
add
xchg
add
cmp
sbb
add
add
add
add
cmp
sub
pop
add
jns
jge
sbb
add
and
ret
add
add
add
out
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
aas
add
add
add
add
lea
cmp
add
add
add
add
add
sub
hlt
add
sub
stos
add
addb
add
add
add
add
add
add
insl
add
add
xchg
es
add
add
add
add
filds
add
add
dec
add
add
fadds
ss
add
add
add
add
add
mov
inc
add
and
and
sub
je
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
adc
sub
filds
push
add
mov
ret
add
hlt
add
add
add
add
add
inc
add
push
and
push
add
add
add
add
add
push
add
add
add
add
add
str
add
xor
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
sbb
jae
ret
add
add
add
add
add
insb
add
add
add
add
add
add
pop
lock
popl
add
jne
add
jg
mov
test
shll
inc
insb
mov
and
jae
and
testl
aaa
pop
jnp
clc
jge
push
sahf
repz
enter
push
xchg
nop
jnp
mov
or
popa
xor
xor
pop
je
jecxz
dec
dec
int
iret
push
and
push
imul
fstpt
jmp
inc
loope
fldl
cmp
lock
test
inc
enter
xor
jbe
lret
inc
outsb
in
inc
popa
cmpl
int
push
hlt
xorb
push
fmull
adc
cmp
loopne
lods
xor
mov
daa
mov
fwait
xor
cli
mov
inc
rolb
jae
cmp
add
or
pop
rcr
sbb
stc
jne
mov
loopne
mov
jg
xor
cli
jg
fisttpll
imul
aam
not
pop
jmp
add
push
gs
roll
mov
dec
clc
adc
add
mov
les
mov
addr16
adc
cli
fucomp
aaa
es
xchg
dec
lock
repz
dec
movsl
pop
lret
hlt
xor
mov
jecxz
jae
ja
rorb
insb
jnp
jg
test
fmull
and
mov
fistps
inc
fsts
sub
shlb
adc
sti
mov
push
push
andl
dec
addr16
mov
flds
cmp
addr16
sarb
push
inc
sub
aas
daa
mov
inc
inc
aaa
test
mov
jnp
adc
push
xchg
cli
mov
imul
jo
xor
arpl
into
dec
dec
cmp
pusha
inc
out
dec
pop
lea
adc
inc
mov
mov
stos
xchg
jge
and
pop
xlat
test
cmp
pusha
rclb
sub
adc
pop
add
or
in
pop
xchg
or
jne
or
fucomip
add
cld
enter
mov
out
das
andb
nop
int3
daa
pop
jl
loope
sbb
xorb
scas
mov
in
and
cmpsl
cmpsl
xor
addr16
jno
das
jl
dec
pop
dec
or
or
dec
sub
mov
int3
sbb
imul
incl
jmp
test
lret
push
in
std
das
je
and
lds
ret
lods
aas
xchg
mov
mov
push
sbb
jmp
gs
mov
mov
pop
std
es
loope
push
fwait
add
fidivl
push
pop
cmc
add
pusha
mov
add
lret
xor
xor
mov
sub
mov
insl
stc
push
pop
mov
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
