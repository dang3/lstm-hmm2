call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
imul
sub
sbb
or
pop
push
xor
cmp
mov
xchg
mov
clc
imul
enter
cmp
sub
sbb
or
jbe
inc
pop
push
dec
idivb
xchg
mov
fwait
xchg
cmp
fcom
enter
sub
popa
jo,pt
inc
scas
push
cmpsb
pop
ficoml
mov
movsl
enter
inc
inc
insb
popa
sub
xor
xchg
xor
fidivrs
and
xchg
sub
imul
xrelease
and
dec
inc
jns
jge
arpl
mov
jbe
es
push
inc
xchg
insb
out
cs
push
out
dec
push
sbb
jnp
xor
push
inc
cmp
mov
mov
in
xchg
js
ja
stos
hlt
pop
rcll
mov
stc
out
call
add
push
dec
xor
jns
xchg
mov
fsubs
enter
ret
jmp
mov
pop
mov
xchg
cwtl
arpl
fcoms
or
data16
push
push
mov
mov
fdivs
sub
js
or
add
push
xor
and
int
out
xchg
cwtl
mov
es
mov
or
sub
leave
jecxz
cli
lret
xchg
mov
lods
push
jns
dec
jbe
push
jge
adc
push
cmpsb
mov
xchg
mov
clc
imul
fcom
enter
sub
sbb
or
jbe
inc
pop
push
dec
cmpsb
mov
xchg
mov
clc
imul
fcom
enter
scas
scas
cmp
sub
or
in
pop
ret
mov
andb
cmc
and
pop
push
pop
inc
shlb
push
test
cld
ds
rorb
push
leave
sub
mov
jne
xchg
std
call
cs
sti
push
pop
inc
loop
shl
push
mov
sub
fistpll
stos
xorb
stos
lret
outsl
ud1
jno
dec
iret
push
fnstsw
pop
into
pop
xlat
or
lods
das
mov
adc
jp
sbb
push
stos
fisttps
je
enter
jnp
cmc
sbb
testl
sub
lret
sub
mov
push
ror
xchg
enter
cmp
out
adc
pop
pop
mov
mov
xlat
xchg
push
negb
jmp
sbb
jbe
inc
incb
and
fs
or
insb
aad
inc
jbe
repz
mov
xor
mov
pop
inc
cltd
xor
or
mov
fstpt
push
in
or
push
jg
inc
xor
movsl
cmpsb
sub
push
adc
out
push
pop
stc
xchg
mov
ret
xorl
jl
add
mov
mov
lods
icebp
data16
mov
clc
xchg
push
mov
jbe
xchg
push
push
cli
xor
sarb
push
or
pop
adc
outsb
jne
add
xor
and
scas
inc
push
dec
mov
xor
xchg
fs
in
int
ffreep
mov
inc
xlat
aaa
lods
out
in
xchg
test
fs
add
adc
fstps
and
insl
mov
sub
jns
push
xchg
jae
insl
sbb
adc
or
mov
sub
dec
mov
adc
mov
mov
jns
les
ret
scas
jp
inc
mov
or
out
inc
pop
sarb
fdivs
xchg
cmpsb
dec
mov
inc
mov
test
aad
rcl
out
mov
insl
lock
or
pop
ret
stos
lret
dec
in
or
rorl
out
lock
pushf
incb
int
fistpl
pop
xchg
scas
xchg
cld
cltd
fdivl
push
jmp
inc
jb
movsl
inc
dec
sti
adc
jge
cwtl
mov
test
outsl
mov
mov
dec
das
mov
push
sbb
xchg
scas
std
inc
jmp
jmp
dec
inc
les
fwait
and
adc
push
daa
cli
addb
sbb
xchg
ds
jl
bound
jg
cmpsb
out
sbb
add
dec
mov
jnp
jle
inc
push
pop
int3
leave
out
pop
inc
outsl
idivb
pop
sub
enter
int3
daa
negb
xchg
lcall
nop
cmp
mov
push
cmp
cmpl
mov
int3
sbb
loop
mov
nop
push
loop
mov
ja
dec
jg
mov
xchg
sub
test
adc
inc
sub
mov
daa
jo,pn
jno
inc
pop
aaa
lods
inc
add
dec
xchg
cld
in
or
pop
loope
insl
outsb
inc
pop
pop
xchg
sbb
mov
fistpll
xchg
out
in
cmp
repz
mov
push
jl
push
xchg
aam
or
cmp
movsl
or
arpl
jnp
xchg
je
mov
das
xchg
pop
add
add
clc
das
popa
jg
xor
lock
jp
mov
sbb
out
cltd
popa
sbb
cmpsb
push
stos
cs
std
imul
xchg
bound
xor
es
xchg
or
repnz
ds
push
ss
jmp
imul
and
xchg
or
ret
sbb
or
out
inc
loop
or
sub
adc
mov
lahf
adc
aam
loopne
ret
adc
gs
sbb
shlb
sbb
xlat
push
arpl
cmpsb
aaa
sarb
in
in
es
cmc
movsb
je
pop
cmp
push
inc
repz
dec
push
shlb
cld
sete
loope
inc
xchg
mov
in
inc
mov
inc
test
lret
test
pand
aad
sbb
test
dec
push
rclb
pop
or
push
sub
hlt
or
dec
ljmp
and
cmp
in
xchg
insb
fdivl
fistpll
jecxz
jnp
inc
adc
sbb
add
mov
movsb
or
pop
loope
sbb
mov
pop
je
sub
mov
dec
dec
sbb
sbb
sbb
sbbb
jge
sub
adc
cwtl
fsts
push
cli
sub
lret
xor
clc
mov
push
inc
fistpl
int3
cld
test
jle
bound
mov
jmp
push
jae
push
ficomps
cmc
lahf
movq
aaa
push
dec
pop
mov
negl
xlat
cs
sbb
bound
jecxz
dec
stos
cmpsl
or
js
xor
push
jge
add
iret
mov
sti
and
sti
outsl
mov
inc
add
into
mov
push
arpl
inc
mov
rep
clc
or
or
push
mov
and
jb
fldcw
sbb
data16
push
or
mov
mov
mov
push
pop
jg
fldt
sbb
sbb
pop
shlb
or
adc
xor
mov
or
int
fists
mov
pop
jo
jg
icebp
sahf
xor
mov
inc
aam
push
cmpsl
aam
xchg
enter
and
pop
or
xchg
pop
xor
sub
inc
js
add
aam
shl
mov
rclb
adc
sarl
xchg
mov
out
xchg
push
stc
adc
cmp
fidivrs
shl
xor
sbb
xor
test
stos
test
push
test
call
gs
jecxz
jae
jno
sbb
jge
out
mov
rcrl
repz
jg
push
pushf
xor
add
pop
push
sub
xor
mov
adc
loopne
inc
lcall
clc
cld
xchg
ds
cmp
add
aam
sbb
push
inc
mov
push
xchg
in
jae
outsl
sbb
mov
fdivr
movsb
fcomi
inc
imul
fsub
dec
test
xor
lods
rcr
or
js
xchg
and
push
pop
dec
push
popf
fsubrs
mov
movsl
fsts
out
dec
and
push
xor
ljmp
mov
arpl
stos
cmc
inc
xlat
jnp
and
fimuls
xchg
and
inc
and
mov
sbbb
mov
inc
push
rclb
push
idiv
push
mov
mov
test
adc
sub
mov
cmp
adc
in
aad
popf
dec
lock
cmp
inc
sbb
clc
xchg
in
movsl
sarb
or
mov
les
mov
loopne
jecxz
pop
push
xchg
pushf
out
dec
jb
sub
jecxz
mov
jae
loope
ss
push
test
sub
inc
aam
popf
int
test
dec
adc
jecxz
dec
pop
pop
cmp
pop
in
lods
jne
and
pushf
cli
lea
or
push
mov
imul
test
lods
push
or
arpl
cltd
outsb
aaa
cmc
lds
lock
enter
jmp
push
hlt
cwtl
and
popf
pop
and
adc
lea
mov
xchg
inc
push
xor
sbb
sbb
jmp
fwait
int
add
shlb
cmc
push
push
imul
sub
jge
lret
cwtl
push
jp
movsb
inc
mov
jecxz
xchg
js
and
xchg
sub
out
push
jae
call
repz
and
xchg
call
inc
andl
popa
mov
push
movb
imul
push
subb
fdivrs
js
enter
or
xchg
leave
out
pop
or
iret
mov
fimull
clc
clc
dec
hlt
je
sbbl
mov
inc
adc
js
xchg
sub
push
or
mov
sbb
in
xor
xchg
mov
xchg
fs
or
in
enter
or
xchg
in
test
dec
lahf
pop
cwtl
aas
fwait
xchg
dec
data16
insb
dec
les
cmpsl
dec
pop
push
add
cmpsb
mov
fstpl
scas
adc
sbb
inc
cld
shlb
fimull
outsb
cmp
mov
xchg
incl
mov
sub
in
mov
xchg
js
xchg
imul
sub
out
or
dec
sbbb
lcall
jb
pop
setae
sbb
ds
mov
push
and
mov
mov
testb
cs
roll
mov
dec
xchg
mov
rcrb
call
out
insl
popl
cmp
jp
push
lret
dec
movsl
mov
adc
push
int
mov
stc
sahf
imul
mov
jge
outsl
mov
das
inc
lea
fnstcw
testb
pop
mov
sbb
dec
jg
pusha
das
xor
and
pop
lods
shrl
and
flds
jg
add
pop
push
mov
pop
sub
shrb
and
adc
push
aad
das
mov
mov
pop
divl
jle
dec
mov
push
push
es
cmpsl
xchg
mov
aad
les
mov
cmp
dec
mov
jmp
xor
lds
push
ss
test
outsl
inc
loopne
xor
pop
sub
mov
push
xchg
ja
sti
mov
cli
or
gs
jns
jo
clc
xor
and
sub
loop
add
ficomps
inc
adc
inc
repz
adc
jo
das
pop
lret
xor
call
push
frstor
pop
pop
das
adc
imul
and
mov
mov
push
xchg
movsb
pop
imull
ret
push
testl
add
popf
push
add
push
movsl
and
ret
xchg
add
fsubrs
mov
jnp
push
xor
iret
xor
pop
dec
sub
std
test
arpl
daa
fimuls
sbb
mov
pop
adc
push
mov
pop
and
jnp
icebp
fidivl
lods
movsl
in
mov
out
xchg
push
test
mov
or
fsubr
cmc
aas
jge
dec
popf
mov
in
inc
pop
dec
sbb
dec
fidivrs
sbb
mov
call
sarl
jle
pop
lret
ds
push
dec
jmp
call
jno
adc
xchg
jmp
sub
stos
dec
mov
clc
in
mov
pop
shll
sarl
cli
loopne
xor
imul
out
jno
test
mov
fiaddl
pushf
fs
and
push
and
dec
cmpb
out
cli
fstpl
mov
cltd
inc
in
mov
pushf
xor
into
sti
pop
mov
dec
shll
push
out
sti
xchg
push
pop
and
ljmp
sub
add
sbb
cmp
add
mov
xor
pop
pavgb
xorb
fiaddl
pop
sub
shrl
and
rorl
out
push
push
loop
sbb
divb
push
in
incb
xor
push
inc
cmp
hlt
inc
loopne
xor
and
es
jo
ss
loopne
scas
enter
lret
mov
enter
shrb
jbe
ljmp
outsl
push
add
sahf
mov
fstpl
les
or
inc
xchg
jb
mov
push
mov
jp
xlat
mov
adc
jp
sbb
insb
sub
jnp
insb
sbb
pop
leave
fwait
sub
or
sahf
cwtl
and
mov
imul
stc
push
mov
jo
push
ficoml
adcl
mov
pop
in
shrl
aam
cmp
xchg
aam
push
shlb
xchg
push
test
cs
mov
pop
jae
push
mov
or
fs
add
mov
outsb
inc
mov
rorb
xchg
lea
push
lahf
cmp
xchg
rcl
loope
pop
stos
gs
and
push
xchg
scas
add
push
bswap
push
lret
shl
xchg
add
mov
sub
ret
inc
sarb
fs
fidivs
push
xor
movsl
ffreep
mov
aam
imul
adc
stos
dec
addr16
inc
out
sbb
popf
and
popf
xor
jae
push
daa
mov
sbb
or
dec
rorl
adc
mov
pushf
sbb
mov
mov
adc
and
push
bound
push
mov
mov
stos
xchg
stos
dec
xor
mov
rol
mov
adc
negb
repz
lock
lcall
or
inc
lock
pop
mov
lret
mov
pusha
in
movsbl
test
cld
push
or
adc
int3
xchg
mull
pop
aad
iret
or
into
pxor
jb
outsb
hlt
sub
not
inc
out
push
pop
pop
in
xor
mov
xchg
lds
jle
ja
pop
dec
mov
mov
ja
std
add
xor
arpl
das
mov
pop
jbe
sub
in
insb
out
inc
mov
and
ljmp
sub
add
fmulp
ja
mov
int3
cmc
out
leave
add
sub
in
ljmp
mov
dec
mov
push
mov
xchg
and
cltd
ja
pop
xor
pusha
flds
cld
sub
aaa
dec
test
cli
int
mov
mov
out
push
pushf
test
inc
mov
pop
shll
jmp
in
stc
jnp
push
mov
es
aaa
jb
test
aam
je
mov
dec
fildll
push
xor
inc
rorb
repz
cmpsb
repz
xchg
and
add
jl
imulb
test
mov
mov
jmp
xor
add
das
cmp
test
outsl
jmp
jle
cmp
pusha
push
hlt
fmull
xchg
inc
setne
push
fld
push
adc
pop
jp
xor
xchg
stos
mul
mov
cwtl
push
xchg
repz
xor
xor
xchg
mov
add
js
xchg
pop
mov
ss
aam
jecxz
jnp
dec
dec
rcll
leave
cmpsb
call
adc
mov
sub
clc
mov
ljmp
clc
jne
bound
ds
ret
inc
and
and
dec
nop
pop
stc
repz
dec
pop
in
mov
out
lds
ss
mov
inc
mov
lods
sti
mov
int3
rcr
xor
stos
jnp
push
mov
add
jmp
and
psllq
pop
jp
jb
mov
aam
iret
sbb
or
std
pop
mov
inc
jbe
lea
jne
popa
push
jp
xchg
clc
scas
hlt
push
push
push
dec
incb
nop
lahf
mov
ljmp
and
or
lea
jns
cld
imul
push
jp
xchg
cmc
sub
mov
jne
out
xor
xchg
call
mov
dec
fs
inc
sub
xchg
mov
inc
mov
je
rorb
cmp
jle
push
mov
jmp
movb
pop
jbe
xchg
sbb
das
imul
adc
lods
dec
and
popf
pop
out
lods
aaa
ret
push
dec
mov
mov
push
jge
sbb
xor
add
rorb
repz
or
fmuls
or
scas
popa
mov
sbb
xor
jbe
mov
loop
std
out
hlt
or
push
scas
addl
jle
add
adc
cmpsb
sbb
loope
fildll
repz
mov
sbb
fwait
hlt
dec
insl
jg
xchg
ja
ja
insb
dec
xchg
mov
push
or
shlb
mov
push
sub
pushf
out
mov
mov
test
push
add
inc
ror
xchg
clc
or
stos
sub
jmp
mov
push
jno
mov
push
sbbw
shl
and
rcrb
mov
mov
cltd
sbb
imul
adc
loop
std
jnp
cmp
stos
stos
pusha
push
sub
mov
lahf
es
in
out
jbe
imul
push
sbb
leave
es
insb
enter
test
loope
mov
lea
movsl
inc
das
sub
stos
into
je
mov
adc
mov
aad
mov
pop
insl
cmpl
bound
lea
icebp
sti
push
mov
push
mov
mov
mov
inc
out
cmpsb
arpl
xor
nop
xchg
xchg
dec
mov
inc
leave
cmpsl
data16
push
in
call
add
cltd
lahf
sub
popa
adc
aam
test
jl
lods
jg
add
frstor
jae
mov
out
pushf
aaa
pop
pop
mov
dec
lds
stc
or
fistps
xchg
notb
ss
xlat
xchg
pop
jle
or
lods
scas
inc
and
cld
sub
pop
jns
loopne
or
aaa
out
pushl
push
jne
jo
pop
mov
inc
mov
hlt
xlat
cmp
pop
jo
sbbb
aas
xchg
jecxz
or
and
in
push
or
movsl
imul
test
sbb
mov
test
jecxz
sub
cmp
ret
ficompl
push
add
pushf
or
xor
shrb
mov
jne
mov
jmp
mov
out
cltd
mov
xor
jb
jae
sub
fs
jle
or
adc
jns
pop
jne
mov
imul
es
mov
stos
push
stos
outsb
in
push
add
pop
ss
adc
push
mov
sub
push
inc
add
aam
xchg
jp
jle
mov
xchg
arpl
dec
gs
test
aad
jecxz
jo
nop
fisttps
xchg
cmp
rorb
aam
mov
mov
testb
xchg
adc
stos
lcall
in
inc
lea
lods
mov
jge
jle
movsl
int
pop
cwtl
xchg
pop
mov
jnp
inc
in
xlat
test
xchg
insb
fsubr
shlb
notb
adc
xchg
sbb
mov
cmpsb
add
push
pusha
pop
mov
dec
fcoml
pop
add
in
fwait
push
sub
add
mov
inc
jnp
sub
in
mov
in
inc
out
dec
mov
in
xchg
xchg
cmp
lods
pop
int3
popa
aam
fisttps
sub
pop
fcomps
add
pop
jle
add
mov
add
xchg
jns
stos
adc
cltd
jge
shrb
je
dec
ficompl
push
testl
sbb
push
outsl
inc
mov
and
or
cmp
mov
jecxz
or
inc
mov
fs
dec
mov
pop
lods
xor
push
xchg
xor
je
xchg
pop
movsl
movsb
mov
mov
or
enter
es
jns
xchg
outsl
pop
dec
xor
jne
stos
jnp
ljmp
fisubl
mov
add
pop
cmpsl
sub
inc
aaa
xchg
insl
or
xor
jmp
or
mov
or
mov
ljmp
outsl
stc
pop
jp
or
mov
in
sbb
mov
idivb
jae
mov
cmp
mov
push
mov
xchg
inc
es
cmp
movsl
cmp
enter
dec
push
out
inc
push
test
lret
and
cmpl
pop
adc
dec
daa
cmp
fcomps
bound
addb
xlat
stc
orb
movsl
pop
xor
xchg
sub
mov
imul
mov
push
push
std
rcrl
loopne
inc
pop
xorb
addr16
icebp
push
cli
cmp
xchg
fnstcw
adc
dec
inc
lea
incb
inc
outsb
sbb
mov
cmp
jge
or
out
xor
es
jb
pop
loope
rorb
in
sahf
icebp
mov
popf
daa
movsl
cmp
loop
sti
push
test
sub
xor
jecxz
pusha
xlat
lcall
movsl
push
mov
pop
lcall
mov
inc
and
test
dec
arpl
fwait
dec
and
jb
sub
jns
jbe
mov
loop
xlat
scas
mov
in
lret
sbb
aam
add
and
pop
and
insl
xchg
mov
notl
je
mov
std
xchg
shl
rcrl
push
leave
movsb
jne
mov
cld
repnz
aad
call
clc
icebp
jb
movsb
dec
adc
mov
jecxz
mov
or
movsb
adc
jb
lods
insl
and
pop
imul
mov
lret
out
out
fucom
push
dec
jae
and
sub
sbb
mulb
mov
dec
aam
inc
add
stc
hlt
mov
lods
xchg
sub
sbb
sub
or
data16
push
cmpsb
mov
xchg
mov
clc
imul
fcom
enter
sub
sbb
or
jbe
inc
pop
push
dec
cmpsb
mov
xchg
mov
clc
imul
fcom
enter
sub
sbb
or
jb
inc
pop
push
dec
mov
cwtl
xchg
mov
clc
out
call
cmp
sub
js
push
cmpsb
mov
xchg
call
daa
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
out
outsl
fistpll
mov
aas
dec
icebp
pop
iret
rcr
out
pop
decl
ds
cs
lcall
outsb
fistpll
movswl
scas
das
lahf
aas
ljmp
decl
pop
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
dec
mov
lcall
jp
js
mov
lahf
and
inc
aam
or
dec
cld
fcoml
xorl
lret
sbb
sar
sbb
adc
movsl
pop
dec
add
mov
jb
jb
pusha
je
cmpsl
inc
pop
lret
das
pusha
or
xchg
popa
movsb
inc
dec
dec
iret
jg
outsb
mov
rcrb
xchg
cli
ret
mov
cli
dec
lret
movsbl
scas
iret
xchg
aas
outsl
filds
pop
lret
int3
iret
mov
aas
mov
ret
pop
inc
das
into
aas
cmpsl
subb
fsubrl
sub
out
mov
pop
stc
in
cli
out
lock
and
adc
or
sub
sti
cs
jg
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
xchg
add
jp
push
jbe
or
aas
sti
dec
shrl
insl
lret
push
xchg
sbb
sbb
jnp
das
enter
sbb
sbb
jp
pop
cmp
pop
mov
lea
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
loop
sub
sub
enter
outsl
xchg
sub
enter
sbb
mov
mov
inc
movsb
pop
xorl
mov
dec
insb
inc
xor
jl
cmc
dec
clc
lret
repz
fisttpl
push
stos
xor
aaa
insl
xor
xor
sbb
out
mov
cs
addr16
and
jecxz
scas
lea
int
pop
pop
cmc
daa
jmp
mov
sub
push
scas
mov
das
jbe
aam
push
jle
mov
and
mov
cld
pop
pushf
repz
pusha
mov
sub
mov
add
xchg
dec
mov
and
jge
int3
outsb
inc
ror
fadd
es
lret
popl
into
inc
mov
and
mov
fisttps
xchg
add
mov
pop
clc
ds
hlt
dec
pop
push
and
repnz
add
cwtl
aas
inc
je
addl
std
cmp
out
cmpsl
sbb
hlt
shrl
push
mov
repz
add
aad
fdivl
and
lds
inc
sbb
jnp
mov
pop
dec
leave
xchg
xor
insl
dec
fists
addr16
jecxz
ret
repnz
jecxz
in
in
mov
je
loop
jmp
sbb
sbb
jbe
sub
shrb
ljmp
mov
mov
add
das
cmc
adc
inc
lret
popa
dec
xchg
dec
bound
fs
sbb
push
outsb
lret
adc
cmpsl
xor
and
test
test
loope
and
mov
mov
pop
incl
lret
pop
bound
push
test
aas
jno
jnp
dec
in
fistps
cmp
cmpxchg
fdivr
fbstp
ret
inc
mov
fimull
jle
jle
stc
icebp
inc
ret
mov
fs
test
mov
add
cmpsl
loopne
fisttpl
popl
inc
lret
fwait
popa
ss
inc
pusha
imul
xchg
adc
lret
leave
pop
out
xchg
cmpsl
cmp
adc
mov
ret
mov
lahf
mov
mov
mov
or
push
rcr
cmp
adc
mov
sbb
imulb
ret
sbb
iret
je
jb
sbbl
imul
int3
push
and
out
clc
pop
adc
sbb
fwait
ss
mov
gs
pop
addb
sub
sbb
shlb
add
daa
push
or
pop
mov
xchg
stc
cmp
arpl
or
jae
pop
decb
fs
adc
sbb
adc
mov
mov
movl
cmp
pop
sbb
out
dec
add
fistps
mov
les
pushf
push
push
insl
arpl
das
lahf
loopne
add
adc
inc
push
ja
outsb
ss
xchg
out
and
lahf
aad
cmpsl
adc
pop
push
jmp
mov
xor
xor
adcb
jg
push
sub
int
gs
ljmp
repz
sub
mov
xor
cli
mov
fdivp
jns
dec
ret
ss
xchg
fists
dec
je
adc
dec
push
or
mov
jp
je
adc
xchg
sbb
xchg
or
mov
es
or
and
sbb
mov
in
pop
hlt
stc
sub
mov
clc
addl
mov
mov
inc
sbbb
xchg
mov
ret
mov
push
mov
sbb
cmpsl
xor
aad
mov
icebp
jb
js
jg
xor
ret
jl
jno
fisttpll
aad
and
shll
in
mov
test
pop
sbb
loope
pop
lds
add
dec
adc
mov
clc
add
push
xchg
push
imul
je
int
xor
pop
loopne
loopne
imul
into
mov
pushf
outsl
jle
lret
mov
mov
mov
das
negl
add
in
insl
fldl
insb
rorb
imul
pop
xor
cmp
sbb
pop
scas
movsl
js
loopne
inc
nop
in
andb
fs
adc
call
int
lahf
and
movhps
jp
or
xor
mov
xchg
push
rcll
lods
pop
jbe
aam
aam
lahf
inc
test
in
sbb
test
popf
xor
mov
sub
loop
xchg
sarl
cmp
divb
lock
add
outsb
dec
imul
pop
aad
dec
lock
stc
int3
popf
shr
lret
ss
add
lods
push
fmuls
push
test
sahf
xchg
imul
les
icebp
mov
add
and
data16
and
outsl
fists
sbb
popa
sbb
addr16
ret
cmp
inc
mov
lods
repnz
push
icebp
jns
lods
stos
aas
fnstenv
test
and
adc
mov
cmp
dec
insb
movsb
sub
push
int3
xchg
das
lds
cmpsl
inc
outsl
fldt
inc
xchg
addl
xor
and
mov
xor
cltd
loop
or
push
sbb
ja
js
ja
repnz
cmp
add
daa
xlat
mov
das
bound
adc
xchg
add
mov
pusha
push
icebp
enter
lods
and
and
gs
mov
push
sbb
cmp
jmp
mov
sub
sbbl
jbe
adcb
mov
fdiv
dec
arpl
jge
cmp
mov
sar
enter
add
js
add
leave
mov
add
mov
mov
stc
or
inc
fdivrs
adc
dec
xchg
dec
insb
lds
cmp
mov
mov
dec
mov
out
cmc
stc
add
incl
mov
xchg
fisubs
xchg
jecxz
add
adc
sti
in
cmp
adc
stos
xchg
test
sbb
aas
adc
xchg
pop
mov
es
push
and
loop
scas
push
xor
fimuls
out
and
mull
lods
loop
repz
pushf
dec
mov
dec
or
aam
xorb
jno
loop
inc
add
lcall
mov
sbb
outsb
jae
jb
jbe
popf
cld
sbbb
mov
shlb
out
push
repz
adc
mov
icebp
pop
or
jmp
out
cltd
lahf
lds
mov
mov
pop
out
scas
cmp
push
jp
mov
rcrb
stos
psrlw
hlt
xor
xchg
mov
and
dec
loop
jo
mov
aad
jl
in
and
cmpsb
jle
mov
mov
mov
mov
mov
push
lods
lock
jno
jb
mull
and
mov
fldenv
push
jb
iret
ljmp
in
cmpl
and
es
push
adc
add
xchg
adc
aaa
xchg
sahf
dec
push
add
jecxz
repnz
loopne
pop
std
push
and
outsl
dec
add
addr16
add
in
mov
pushf
inc
fnstenv
lods
xor
push
lea
not
jecxz
bound
inc
or
aas
int3
pop
or
gs
sbb
jle
push
mov
mov
ss
mov
jg
ret
pop
jp
cli
push
insb
push
mov
xchg
mov
or
cmp
dec
ds
add
xor
pop
xor
mov
mov
jno
mov
lods
sub
pop
hlt
add
lcall
jb
fcoms
mov
lret
mov
out
pop
adc
ljmp
negl
out
sbb
iret
push
mov
sbb
and
das
inc
mov
or
scas
fisttpl
mov
lcall
mov
lahf
add
sbb
pop
mov
test
sbb
fdivrs
cmpsl
and
xchg
inc
pop
dec
outsl
pop
cmpsl
inc
test
pusha
fwait
imul
sub
add
test
adc
daa
and
leave
mov
mov
into
pop
negl
cwtl
into
xchg
and
jge
aam
jmp
cmp
test
clc
test
scas
xchg
push
push
lods
and
jge
xchg
adc
aaa
mov
ljmp
add
xchg
les
cmpsl
lods
mov
ret
outsb
dec
add
pop
jle
sahf
lret
xlat
call
dec
and
aad
or
push
add
or
jmp
sbb
enter
add
dec
pop
xorb
add
push
cmpsb
push
cmp
cmp
cli
popa
dec
xchg
dec
or
sarl
sub
cmp
jnp
sbb
cmp
dec
dec
cmc
imull
and
mov
add
mov
fnstsw
mov
dec
mov
loopne
xchg
div
jp
ljmp
xor
std
nop
xchg
pop
fwait
divb
dec
mov
jo
inc
push
test
sub
push
mov
loope
fstpl
ret
mov
jne
mov
sub
xchg
lcall
rol
shr
sbb
stos
bound
xchg
adc
ficoml
and
popf
pop
xchg
fimuls
inc
and
jne
das
push
and
and
sbb
push
push
lret
ss
push
mov
cli
jns
test
lret
lcall
faddl
add
push
cmpsb
ss
loopne
xchg
push
sub
mov
dec
je
mov
in
and
jne
addr16
adc
cmpb
cs
inc
imul
mov
cmp
xor
jle
sahf
es
xchg
out
test
or
add
repz
mov
mov
test
std
sbb
pushf
push
mov
xchg
cmp
and
pop
xchg
cmpsb
fucom
mov
rcrl
mov
pop
iret
out
mov
stos
jp
push
xchg
fidivs
mov
xor
fimuls
sti
and
push
cmp
data16
xchg
call
rolb
mov
push
scas
cltd
lds
bound
xchg
into
cs
ftst
and
mov
jge
nop
aas
cmpsb
mov
mov
jp
mov
xchg
gs
data16
pop
fs
nop
mov
inc
in
sahf
mov
cmp
sub
mov
xorb
push
pop
mov
cwtl
lret
arpl
xchg
xlat
ss
push
fisubrl
dec
sbb
call
jb
ja
repz
lock
inc
mov
push
and
repz
into
out
insb
mov
dec
roll
movsb
mov
sahf
jae
pushf
test
lahf
jb
mov
jns
jnp
sub
sub
icebp
inc
aaa
sti
mov
pop
sub
lahf
and
pop
out
adc
repnz
icebp
pop
add
cli
xchg
imul
xor
dec
add
pushf
xor
or
pushf
xchg
fildl
adc
repz
dec
or
sbb
loope
icebp
push
fsubl
adc
popf
dec
mov
lock
push
scas
inc
push
push
push
inc
xlat
popa
push
test
push
jl
push
xor
add
testb
xchg
inc
pop
mulb
mov
int
xchg
std
int3
push
loop
js
sbb
out
ljmp
inc
or
leave
test
icebp
cmp
mov
xor
adc
out
sarb
mov
lods
addl
int
cmp
lock
gs
cmc
xchg
stc
mov
dec
cltd
lock
lahf
adc
cmp
push
fdivl
test
xchg
lret
in
mov
jno
and
xor
jecxz
fsub
pop
xor
push
aam
xor
sub
and
add
mov
into
outsb
mov
repnz
fbstp
mov
repz
fisttpll
push
xchg
or
aas
ret
xor
sbb
mov
cmp
into
nop
fcompl
pop
push
mov
out
dec
loopne
mov
cmp
adc
inc
je
jp
or
push
clc
loop
mov
mov
and
aas
pop
mov
pop
xchg
xor
ja
repnz
repnz
das
es
loopne
loope
adc
add
jns
movsb
test
repz
xchg
bound
leave
mov
mov
jecxz
in
add
bound
adc
pop
push
xchg
inc
cmc
lods
lods
pop
test
mov
jp
mov
jp
popa
xchg
cmp
insl
push
aas
jae
mov
or
sbb
lret
stc
mov
dec
adc
rcrl
xchg
push
pop
sahf
and
xchg
hlt
repz
fbstp
stc
out
inc
cld
xchg
adc
movsl
sub
inc
pop
pop
fstl
mov
mov
stos
mov
sbb
imul
ja
aad
push
rorl
pusha
aam
mov
add
orb
repz
jge
int
pop
test
dec
pop
sub
dec
insb
pop
mov
stos
ja
mov
pop
aas
push
cli
xchg
aam
test
cmp
cld
mov
call
push
fistpll
and
mov
ja
add
ja
mov
dec
js
insl
push
inc
pop
lods
push
loop
fstps
push
lea
xchg
lds
scas
daa
repnz
pop
lcall
xor
mov
xchg
jb
mov
mulb
or
dec
xor
pop
xor
stos
ss
add
insb
xchg
inc
adc
out
fcoms
clc
fcompl
cltd
dec
pop
test
gs
inc
in
fnsave
mov
testl
icebp
rcrl
aaa
test
arpl
fisttps
xchg
std
or
cmp
cmp
popf
scas
jbe
cmpsl
fmull
adc
push
xor
jle
test
lahf
inc
inc
cmpsb
dec
pop
mov
in
ja
lds
rorl
mov
sbb
xchg
mov
push
lea
negb
out
das
and
incb
roll
shl
outsl
negb
mov
imul
and
sbb
cmp
jecxz
push
sbb
pop
out
jbe
inc
adc
jge
call
test
rolb
inc
and
inc
mov
or
cmp
pop
shrb
mov
adc
lock
sub
shl
cmp
mov
dec
pop
inc
lock
ds
mov
movsb
add
push
mov
fnsave
test
adc
dec
adc
addr16
jns
or
fstpl
pop
add
and
adc
das
movsb
cmp
int
arpl
pusha
repz
jge
test
adc
jb
lahf
insb
push
push
pop
out
add
sub
loopne
push
int3
cmp
inc
jb
dec
sbb
icebp
pop
scas
int3
pop
sub
out
call
adc
dec
and
test
in
arpl
decb
and
mov
add
inc
ljmp
jle
lret
sbb
xor
sub
xchg
aas
in
ficoms
push
cmpl
in
repz
xchg
add
dec
or
jmp
mov
mov
push
inc
adc
jecxz
mov
xchg
sbb
mov
inc
mov
je
out
xchg
xor
xorb
in
mov
pop
cmp
pop
mov
add
lret
in
loope
mov
xor
pop
mov
jl
inc
out
sub
idivb
xchg
adc
mov
rorl
int
sbb
inc
push
mov
jmp
std
xchg
sub
out
les
mov
popa
dec
lds
mov
iret
and
cmpsb
incl
addr16
js
push
lods
sti
cs
loope
cmp
adc
in
adc
ss
jp
inc
add
add
sub
outsl
loope
int3
cmp
inc
mov
jb
repnz
push
mov
fidivrl
imul
ljmp
fdivrs
or
push
and
jo
lgs
int
dec
js
push
cmpsl
jnp
cmp
les
xchg
fstl
xlat
fadds
dec
popl
mov
lods
out
mov
outsl
idivb
mov
sbb
sbb
lahf
std
sti
stos
pop
xchg
insl
adc
sub
es
in
scas
jl
fbstp
test
push
jg
mov
pop
or
movsl
jnp
cld
rcll
jns
mov
cmc
pop
push
scas
movsb
mov
sbb
pop
pop
test
cmpsl
adc
sbb
dec
rcrb
je
int3
or
pop
stos
insb
or
fidivrs
dec
sub
xchg
ss
mov
sub
push
fidivrs
mov
out
insl
inc
xchg
rorb
sbb
cmpsl
cld
subb
orb
jne
push
jge
clc
sub
sahf
mov
sbb
mov
bound
in
inc
test
mov
sub
push
rcrl
sub
fnstsw
push
test
pop
ret
inc
ds
mov
rcl
fstps
dec
insl
mov
lea
call
xchg
das
ja
pop
inc
ror
aas
sti
mov
mov
addb
xchg
call
sbb
int
sub
and
mov
pop
xor
xor
pop
out
shrb
and
jne
dec
aaa
aam
jge
dec
imul
cs
in
pop
sbb
lds
imul
and
movsb
rclb
les
xchg
mov
cli
pushf
lcall
add
mov
repnz
lods
mov
mov
sub
stos
fs
adc
es
add
lret
imul
inc
clc
mov
push
inc
jbe
loop
and
push
sbb
stc
stc
ret
in
pop
dec
push
out
outsl
rcrb
fs
sbb
ja
push
pop
cmp
ljmp
aam
pop
mov
jne
push
sub
mov
inc
mov
lahf
es
mov
into
call
sbb
add
das
dec
movsl
and
not
fildll
pop
xor
ss
in
into
into
jg
jbe
xor
js
mov
push
inc
pop
pop
xchg
in
ja
ficomps
js
fistpl
sub
insb
jmp
pop
aam
mov
dec
arpl
jl
aam
inc
jmp
xor
or
cs
mov
roll
dec
gs
adc
call
xlat
mov
aad
mov
pop
mov
or
mov
stc
lock
mov
jnp
mov
ja
jge
sub
lcall
add
inc
popa
aaa
xor
mov
push
jne
sub
mov
fmul
xor
and
xor
push
out
stos
pop
arpl
mov
inc
pop
data16
mov
out
in
pop
outsl
pop
sub
inc
mov
xchg
lea
jb,pt
jecxz
fs
ror
pop
pop
cmp
dec
cmp
nop
stos
or
outsb
push
and
xor
mov
or
or
sub
and
das
jb
xchg
jae
xchg
inc
ljmp
push
daa
out
cmp
lods
inc
jns
sub
cmp
cwtl
pop
lods
push
xor
or
mov
xchg
icebp
adc
push
leave
hlt
jl
lcall
adc
lret
add
clc
es
sbb
sub
adcl
notb
cmc
cmp
cmp
jl
or
add
bound
pop
lock
or
pop
test
fucomi
mov
clc
push
fstps
and
mov
imul
mov
jnp
cli
cmp
ret
int
inc
add
enter
mov
test
out
int
push
mov
in
fcoms
stc
mov
xor
adc
iret
push
jle
jbe
fcmovnbe
adc
fwait
push
mov
add
pop
xor
sqrtps
das
cli
and
xor
add
je
mov
pusha
cli
repz
fistl
pop
cli
sub
sub
addr16
in
xchg
roll
or
outsb
jge
sub
mov
and
mov
mov
or
out
inc
sbb
push
inc
ret
bound
adc
inc
mov
fsubs
enter
xor
je
jb
loop
inc
and
mov
cmpsb
mov
negb
push
jbe
sbb
fsubrl
adc
fcompl
xchg
ds
dec
xor
loop
js
lea
mov
xchg
xor
xchg
decl
mov
insl
sbb
pop
gs
sbb
mov
pop
push
jnp
add
aad
test
add
stos
push
jg
leave
or
jnp
call
add
shlb
adc
add
addl
cmp
leave
pushf
sub
stos
jge
sbb
sbb
inc
mov
adc
mov
js
jle
popa
stos
mov
and
andb
imul
inc
mov
pop
ja
jge
jg
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsl
fistpll
movswl
scas
das
lahf
aas
iret
jg
outsl
out
pop
decl
aas
lahf
das
scas
pop
mov
out
outsb
fistpll
movswl
scas
das
lahf
aas
dec
iret
jg
lds
cmp
mov
rclb
inc
lock
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
call
or
cltd
mov
or
jp
dec
mov
sub
cmp
or
sbb
call
or
sbb
dec
cwtl
sub
dec
mov
sub
sbb
call
mov
mov
inc
push
cmp
nop
dec
mov
cltd
push
enter
cmpsl
pop
out
repnz
andl
adc
pop
xchg
pop
sub
push
and
test
sbb
mov
jmp
jg
cmp
pop
enter
sub
aaa
std
cmp
inc
out
rcl
and
cmp
add
adc
leave
mov
mov
sbb
call
sbb
mov
shll
cmc
jmp
js
cmp
lock
rorl
and
cmp
inc
adc
cli
jo
lds
cltd
js
mov
es
add
cs
sub
mov
mov
call
sbb
sub
leave
enter
test
mov
fldcw
js
dec
cltd
pop
shrl
lds
add
leave
sbb
mov
aaa
int
xlat
push
out
sbb
sbb
sbb
lock
xchg
insl
mov
sahf
insb
mov
push
repz
int
fnsave
xor
mov
jb
jg
jle
pop
mov
jns
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
or
sbb
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
stos
cmpsl
xor
fcoms
pop
adc
imul
jmp
xor
adc
enter
ret
aad
cmp
push
aas
push
sbb
sub
in
sub
jecxz
les
leave
dec
inc
and
in
ret
jge
dec
xor
xchg
mov
shl
dec
stc
flds
jmp
jmp
sbbb
lods
iret
push
fildll
insb
push
xchg
jle
cwtl
inc
subl
push
jle
add
xor
or
sbb
call
insl
pop
or
xor
jns
jge
dec
iret
sbb
test
es
orl
mov
test
decl
mov
adc
pop
sbb
loopne
rcrl
push
outsl
in
jecxz
cld
dec
push
pop
outsl
adc
out
pop
movb
push
xor
cmp
adc
ds
insb
xchg
mov
idivl
sbb
mov
inc
mov
cmc
jge
stos
aaa
test
jle
cmove
in
cmpl
pop
add
or
insb
fcompl
mov
divb
into
scas
jbe
push
mov
enter
lret
xor
lock
testl
or
in
jbe
jecxz
push
data16
inc
sbb
or
cmp
xchg
inc
nop
popf
mov
mov
xchg
xor
push
sbb
mov
aas
push
scas
add
movsb
scas
push
cmpsb
push
push
push
add
enter
dec
cli
xchg
cmpsl
int
and
out
mov
pop
xchg
nop
fistps
clc
aaa
pop
and
mov
icebp
es
aaa
xlat
je
cmp
fadd
rorb
mov
gs
cmp
cmp
outsl
dec
nop
in
imul
ljmp
push
cltd
mov
add
lods
fucomi
jno,pn
loop
test
sbb
loope
out
push
dec
or
leave
pushl
push
and
sbb
add
movsl
add
jl
push
sar
add
es
in
pop
xchg
pop
xchg
push
jbe
out
rolb
inc
ss
bound
push
mov
cmp
lods
sbb
xor
pop
sbb
pop
cmc
push
jg
adc
or
test
inc
scas
out
jp
sti
mov
dec
push
push
daa
ja
iret
and
sbb
sbb
xchg
clc
xorb
sub
and
fstpl
inc
or
lret
es
repz
sbb
out
and
je
int
repnz
inc
cli
es
push
bound
lret
jns
cltd
pop
mov
jmp
sbb
xchg
inc
mul
inc
std
xchg
hlt
inc
push
jp
movsb
or
or
mov
adc
arpl
fld
dec
or
xchg
sbb
mov
cmp
mov
cmp
or
mov
mov
mov
xchg
xchg
nop
xlat
rorb
scas
dec
insl
push
lock
and
jne
xchg
mov
call
ret
cld
subb
std
push
dec
dec
sbb
cld
jo
xchg
pusha
add
xchg
xor
out
hlt
loopne
fs
mov
and
jle
pmuludq
sbb
dec
ja
and
inc
cmpb
into
in
cmp
daa
mov
cmp
sbbl
pop
lods
aad
jmp
mov
cmp
aaa
sbb
sbb
sub
out
ja
sbb
fcmovne
dec
imul
lds
mov
lock
fcompl
push
sbb
push
out
xor
stc
mov
mov
and
test
add
pop
or
test
test
jmp
div
int
xor
outsb
jns
xor
inc
repz
and
pop
mov
pusha
aam
ljmp
xor
inc
leave
repnz
add
ljmp
movsb
and
mov
mov
xchg
adc
adc
inc
push
sbb
mov
cmpsb
inc
jnp
fdiv
movntq
add
std
mov
xlat
cld
fsubl
jae
out
jae
mov
dec
add
mov
aas
pop
ret
addr16
int
out
movsb
sbb
test
test
dec
scas
pop
mov
dec
mov
test
test
je
insl
dec
mov
push
jno
cmp
dec
fwait
xor
xchg
mov
cmp
insl
sbb
push
push
or
cs
xchg
dec
jae
in
mov
mov
or
clc
cmpsb
sbb
movsb
dec
jg
sub
ret
hlt
rorl
and
xorb
xchg
adc
sbb
mov
divb
ljmp
pusha
dec
pushf
sahf
and
shrb
scas
ljmp
xchg
ljmp
fidivs
push
jae
notl
leave
cs
js
scas
dec
insb
orb
mov
movsl
into
lcall
movsb
adc
mov
pop
jg
gs
jnp
gs
in
test
add
mov
dec
adc
xchg
cmp
shlb
fcomp
pop
cmpsb
mov
rorb
xchg
xchg
mov
fadds
jo
scas
aaa
scas
push
jge
pop
out
orb
movsl
dec
dec
cmp
mov
dec
sub
mov
cmc
adc
pusha
mov
and
push
test
and
stc
repnz
xchg
add
mov
and
xchg
jg
mov
or
adc
nop
mov
rcrb
bound
ret
mov
in
jb
mov
sbb
xchg
pop
inc
adc
jp
cmpb
leave
cmc
and
das
dec
and
mulb
subl
xorb
and
mov
rolb
fisubrl
rorl
push
je
loop
adc
int3
popf
xor
stos
js
ficomps
mov
mov
mov
cltd
imul
push
add
daa
bound
pop
and
inc
xor
addl
inc
mov
adc
push
sbb
and
jecxz
jbe
lret
mov
orl
in
pop
aaa
in
lods
mov
pop
sarb
aas
inc
shll
call
xchg
aaa
outsb
inc
jle
mov
dec
out
inc
sarl
push
rcr
dec
inc
cltd
repnz
cmpsl
loop
sti
fmul
xchg
mov
sbb
mov
inc
les
cmc
fistps
dec
pop
orl
aad
push
in
in
pop
in
mov
or
and
movsb
mov
mov
dec
insb
sti
jo
in
jbe
addb
sbb
decb
cmp
fwait
adc
push
mov
arpl
insb
adc
sbb
nop
aas
movsb
cltd
or
xor
in
rorb
cwtl
fs
or
test
mov
lahf
lods
sub
jmp
cmp
into
mov
inc
hlt
imul
mov
jl
push
inc
std
mov
lahf
push
js
testb
sub
sub
jns
daa
mov
lea
xchg
popf
cmp
mov
scas
stos
lcall
dec
and
or
mov
mov
lods
mov
cmp
sub
call
jne
pop
cmpsl
rcr
cwtl
test
mov
faddl
push
xchg
or
fmull
mov
add
push
arpl
adc
xor
push
adc
addr16
dec
loope
lock
inc
pop
dec
shlb
fcmovnbe
xchg
jne
fidivrs
cmp
and
mov
scas
dec
add
inc
vpsllq
sbb
cwtl
outsb
in
mov
mov
imul
inc
pop
mov
jmp
mov
pop
mov
jo
inc
dec
push
xlat
sbb
mov
sub
push
inc
adc
add
ds
xor
adc
stos
out
xor
push
neg
jb
insb
mov
lock
aaa
sbb
stos
jle
insb
fcmovnb
xchg
jo
cmp
cmp
sub
pop
rcrb
into
rclb
push
jle
pop
mov
hlt
test
les
push
rorl
shrb
dec
and
das
xchg
aam
mov
cmp
sub
push
push
sub
xor
add
aad
and
mov
push
lods
cltd
push
nop
scas
das
addr16
inc
mov
sbb
and
xchg
lret
push
fiadds
sub
dec
adc
out
mov
gs
cmp
sub
and
flds
cld
ficoms
scas
push
lea
pop
add
or
push
jnp
mov
push
addb
push
inc
mov
cmpsb
setbe
jnp
push
imul
leave
jmp
pop
jb
inc
outsb
or
xchg
loopne
xchg
in
xchg
rcll
dec
cwtl
mov
mov
dec
shll
xlat
js
loopne
into
cmp
int
or
clc
loopne
rorl
sbb
adcl
pop
dec
in
ds
adc
pop
jno
mov
cmpb
cmp
pop
sub
mov
mov
push
out
fcmovne
xchg
adc
insl
push
inc
clc
adc
in
ffreep
mov
add
and
pop
sbb
xor
outsl
mov
out
lcall
cld
popf
push
xor
mov
mov
xor
hlt
mov
inc
inc
add
dec
jge
mov
jg
movsb
cmp
sub
sarl
addr16
out
test
or
mov
fmul
daa
or
jmp
lret
pop
pusha
mov
mov
loop
sarb
cmp
inc
cmp
inc
jle
push
adc
xchg
inc
and
sbb
loop
movsl
outsl
inc
add
add
cwtl
aad
inc
push
and
xchg
cld
dec
outsb
repz
imul
insb
hlt
sbb
mov
and
mov
inc
cmp
mov
popa
lods
loope
into
loopne
aas
shlb
ss
cmc
sbb
cld
pop
mov
sub
mov
and
or
jge
cli
in
cli
inc
sarl
cmp
dec
mov
push
push
ret
push
jnp
movl
or
cmp
push
mov
loop
jge
inc
xor
adc
les
call
iret
insl
add
hlt
jae
test
mov
add
rolb
fwait
fwait
push
cmp
icebp
cmp
xlat
xor
mov
xchg
adc
cltd
sbb
push
fidivrs
dec
inc
adc
hlt
cmpsl
xor
insl
stos
orb
int3
sti
pop
loopne
push
jns
es
push
rcll
lods
push
or
jg
enter
push
jge
lret
out
add
je
loope
mov
pop
mov
cld
mov
into
jmp
sbb
lret
mov
jp
jg
das
negb
push
mov
mov
pop
sbb
jle
dec
gs
outsb
scas
std
xchg
dec
xor
and
repz
and
dec
cli
dec
lret
add
mov
cmpsb
subb
mov
das
mov
leave
jno
out
cld
lock
in
pop
sub
dec
rorl
imul
push
loope
push
ret
jl
jge
dec
sub
xchg
jp
sub
xchg
jp
adc
insb
fs
das
mov
xchg
ds
and
jge
in
dec
insl
push
idivl
andl
divb
sub
dec
mov
scas
xchg
jg
xchg
adc
out
mov
out
jle
rcll
xor
loopne
das
mov
push
and
xor
dec
bound
xchg
addr16
jl
add
xor
mov
scas
enter
jle
stc
lea
sti
push
and
mov
iret
lods
mov
push
or
fnstcw
movsb
pop
cmp
pop
pop
pusha
out
subl
pop
and
adc
aam
or
mov
cmp
adc
mov
xor
fiadds
hlt
xor
xor
adc
fisubs
push
push
test
sbb
arpl
out
jp
das
and
lea
int3
mov
les
sbb
test
imul
xchg
pop
out
mov
xchg
dec
mov
xchg
jg
adc
dec
rol
inc
jnp
xor
orb
mov
into
stc
ret
jmp
insl
push
mov
test
mov
aas
pop
call
data16
xchg
test
shll
orl
sar
cmp
std
pop
or
cld
push
mov
inc
bound
add
arpl
fildl
push
mov
cmp
fistpl
xchg
push
adc
fldl
lods
xor
icebp
mov
push
mov
xor
lret
xor
out
cli
or
loope
mov
adc
sbb
cmpsb
hlt
add
dec
je
adc
rcrb
sbb
cwtl
mov
xchg
stos
pop
adc
adc
adc
cltd
js
ss
or
pop
hlt
sbb
into
dec
mov
xor
push
push
addr16
mov
cmc
mov
xor
mov
jns
dec
jmp
sbb
xchg
test
call
imul
jg
insb
dec
and
cmpsl
dec
pop
cli
popa
push
jb
jae
pop
xchg
outsl
inc
pop
cmp
mov
ret
gs
mov
rol
mov
inc
scas
sub
ds
mov
ljmp
cmp
in
or
cmc
xorb
std
jb
push
xchg
push
mov
mov
xchg
sti
ja
add
xchg
test
sbb
sub
cmc
das
test
adc
inc
sub
pop
xchg
sub
jg
adc
pop
pop
jns
add
adcl
dec
imul
scas
mov
addb
and
addr16
mov
test
and
vunpcklps
in
stos
js
or
in
pop
gs
mov
xchg
jae
sarb
jbe
iret
clc
cwtl
xchg
stc
ret
jecxz
les
jle
xchg
les
insl
jnp
lret
inc
mov
push
fsts
add
push
scas
shll
mov
jmp
push
or
sbbb
cmc
andb
pop
push
sbb
outsb
gs
mov
sbb
dec
dec
cli
fsubrp
and
mov
pop
jecxz
mov
xorb
xchg
jnp
jmp
and
sub
or
loopne
das
push
jle
leave
arpl
mov
add
imul
adc
dec
inc
ds
fiadds
push
inc
sub
in
das
cmp
aam
pop
fsub
sbb
leave
xor
rcrl
test
fwait
xor
pop
test
addr16
xor
xor
inc
sub
dec
int3
leave
mov
cs
adc
orl
mov
jbe
out
fildl
inc
or
icebp
fbld
xchg
test
imul
loopne
xor
sahf
lcall
pop
out
inc
dec
jb
push
lcall
cwtl
pop
xchg
or
idivl
lea
adc
stos
dec
movsb
clc
push
inc
jp
sahf
ret
sub
pop
dec
mov
mov
sub
xor
inc
inc
xchg
push
ljmp
mov
mov
mov
adc
mov
cmp
repz
inc
inc
jl
or
repz
mov
xor
insl
imul
sbb
loop
sar
in
inc
push
lcall
mov
ffreep
adc
in
jle
sar
lock
pop
pop
xchg
inc
lret
les
jle
jno
clc
xor
cmp
pop
in
cld
punpcklbw
dec
jno
push
jle
shll
inc
xchg
dec
add
cmp
push
lods
mov
in
loop
inc
adc
and
outsl
xchg
inc
pop
push
icebp
sbb
cmp
mov
mov
mov
inc
fnstsw
push
jo
sbb
sarb
insl
les
test
jl,pt
xchg
cmpsl
fwait
sub
pop
insl
sbb
testl
mov
fwait
pop
cmc
dec
lods
pop
pushf
push
ficomps
add
cmp
push
sbb
inc
das
loopne
aam
push
imul
pop
aaa
xor
adc
dec
imul
pop
cmp
data16
rorb
sbb
ljmp
pop
dec
mov
sbb
std
in
inc
cli
repnz
push
jmp
push
add
aas
fwait
jbe
in
jl
pop
and
adc
or
dec
or
mov
clc
jbe
push
dec
push
pop
mov
cmp
divb
jmp
imulb
call
xor
or
mov
addr16
mov
push
cmp
sbb
and
lahf
push
add
leave
out
cmp
cltd
xor
mov
mov
push
cltd
sbb
xchg
and
stos
ja
test
adc
pop
add
push
push
pop
mov
push
or
or
js
arpl
shlb
cmp
jae
jno
testb
fildl
mov
dec
lahf
cltd
sbb
ret
or
pop
pop
mov
icebp
and
repnz
lahf
clc
orb
push
aas
leave
mov
cmp
mov
or
fidivrs
inc
lods
jecxz
stos
mov
sub
repz
dec
push
dec
std
inc
xor
xchg
addr16
cli
jl
and
add
addr16
in
dec
loopne
test
adc
and
popf
add
mov
push
push
mov
cli
adc
testl
xor
in
loop
in
dec
xchg
adc
stos
les
insl
adc
cmp
inc
mov
pop
jle
subb
and
pop
out
inc
cmp
out
addl
in
sub
mov
or
stos
mov
test
scas
fiaddl
dec
dec
aam
pmulhw
ret
fldl
or
pop
or
cs
lds
faddl
mov
pusha
ret
ljmp
rcll
sub
lock
mov
jae
mov
inc
dec
adcb
bnd
rcll
xchg
sub
pop
decl
shl
inc
lds
mov
sub
mov
sbb
shll
movsb
push
jb
and
xchg
daa
pop
and
lock
sbbb
loope
jno
dec
pop
mov
jb
lds
mov
roll
pop
jp
cmp
cld
push
jno
bound
fcomps
and
add
scas
ret
jp
and
mov
mov
cmp
pop
shll
jo
ljmp
inc
cli
or
xchg
add
jne
nop
sub
mov
mov
hlt
push
or
push
shlb
pop
pop
cmp
add
repz
add
lock
loope
add
pop
mov
jns
stos
aad
dec
mov
push
ds
adc
mov
imul
jnp
sbb
in
sbb
xchg
movsl
pop
ret
mov
mov
subl
mov
inc
xor
inc
or
repnz
pop
ret
xchg
jg
inc
jmp
pop
push
add
fwait
mov
add
xchg
ljmp
insb
lret
test
scas
js
jae
add
mov
xchg
pop
mov
mov
mov
pop
scas
add
adc
cli
inc
stc
mov
push
shrl
push
rcrl
jo
ds
sbb
dec
add
mov
pop
mov
mov
inc
sub
pop
inc
inc
cmp
dec
push
xor
or
mov
test
jno
outsb
xchg
lock
jno
sbb
mov
hlt
mov
dec
xor
xlat
movsl
int
jno
mov
fimull
xor
mov
dec
gs
lods
sub
add
or
cltd
movsb
add
jmp
adc
push
repz
lret
or
cld
or
js
xor
scas
daa
jb
cltd
movsb
jecxz
aas
mov
adc
jno
in
addb
sbb
mov
lods
ret
xor
stc
adc
xor
out
fildll
nop
push
inc
xchg
sbb
cmc
or
sub
jo
scas
add
sub
push
jne
aaa
addr16
pop
in
lds
pop
pop
sbb
fcomp
mov
mov
aam
shl
push
sub
scas
movsb
xchg
cmc
push
mov
iret
sub
inc
cmp
lods
push
pushf
fistpll
and
fsts
mov
sti
in
inc
dec
icebp
and
cmpsb
orb
adc
jl
xchg
movsl
mov
lcall
in
lock
mov
jl
add
mov
mov
ljmp
sbb
mov
xchg
sahf
daa
xor
es
shl
inc
dec
stos
jae
add
push
mov
jae
mov
sub
jbe
and
cmp
dec
aaa
inc
inc
lret
ss
jmp
rcr
push
add
mov
push
es
inc
add
pop
adc
adc
lret
pop
sbb
scas
repz
std
add
pop
scas
sub
pusha
jle
push
mov
jl
sbb
sbb
and
jle
cwtl
adc
ret
dec
pushf
dec
jno
xchg
mov
jae
rorb
mov
mov
dec
push
cmpsl
dec
sbb
les
fildll
cmp
jnp
mov
insb
mov
sbb
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
or
sbb
dec
cwtl
pop
push
mov
sub
cmp
or
sbb
call
jno
sbb
dec
cwtl
pop
imul
cltd
sub
cmp
or
sbb
call
or
sbb
leave
sbb
push
xchg
loop
pop
out
pop
popa
mov
lock
cmp
das
rcrl
psraw
sbb
mov
lahf
jno
popa
call
out
add
xor
and
das
shll
loope
xchg
outsl
sbbl
scas
inc
jno
popa
mov
xor
and
icebp
xlat
loope
xchg
jno
fistl
testl
popf
push
mov
push
push
mov
data16
mov
test
mov
xor
mov
out
adc
mov
rorl
lods
mov
out
add
mov
fstpt
add
mov
fbstp
xor
shrl
push
sbb
mov
add
jl
jmp
sub
add
mov
cltd
jecxz
inc
in
mov
xor
mov
scas
scas
mov
add
out
fidivrs
iret
and
movsl
and
sbbl
or
fcmovnb
sbbl
inc
out
add
xor
ffreep
push
mov
push
loope
mov
mov
inc
stos
adc
mov
jb
mov
xor
sarl
pop
icebp
psraw
mov
mov
jmp
adc
add
xor
dec
push
aad
subb
loope
hlt
add
sub
dec
cmc
mov
adc
adc
mov
stos
outsl
jb
dec
movsb
insl
xchg
outsb
loope
std
or
stos
fcomps
std
cmp
jg
add
xchg
inc
mov
pop
test
outsl
sbbl
scas
inc
lahf
jno
popa
call
out
add
xor
and
shrl
rcrl
psraw
outsl
sbbl
scas
inc
lahf
jno
popa
call
out
add
xor
and
rorl
and
ds
jecxz
mov
movsb
add
iret
or
imulb
imul
jmp
fldt
sub
mov
pop
adc
pop
add
add
dec
je
push
rorb
popf
dec
aas
cld
sbb
sbb
sahf
aaa
mov
fildll
mov
in
insb
adc
mov
int
jecxz
adc
in
or
mov
insb
sbb
mov
sbb
push
inc
inc
cmp
add
and
out
pop
fisubs
jb
push
xor
mov
mov
or
dec
pop
xor
cltd
dec
std
push
xchg
cmp
inc
xchg
xchg
dec
scas
cmp
rcr
lret
adc
out
jp
mov
xlat
jle
cmp
inc
ds
or
jg
or
stos
out
je
push
xor
push
mov
std
out
mov
in
pusha
sbb
pop
popa
mov
push
push
ret
mov
xchg
add
bswap
test
jbe
push
mov
push
hlt
pop
leave
fimull
sbb
in
fs
out
rol
jg
cltd
jne
pop
dec
sub
jg
lods
jne
js
xchg
pop
xchg
scas
es
pop
jge
adc
xor
or
pop
jecxz
mov
ret
data16
in
adc
hlt
adc
out
lret
push
out
fwait
jg
sbb
dec
arpl
js
jp
adc
push
arpl
les
test
and
xchg
inc
push
nop
sbbb
dec
fdivs
or
pop
sti
sub
and
stos
sar
adc
xor
aas
movsb
jge
pusha
jmp
pop
sahf
js
jg
dec
jb
cmp
mov
gs
lret
pop
gs
out
sub
je
call
jmp
lods
inc
aam
stc
mov
jmp
xchg
lcall
xchg
mov
dec
push
mov
sbb
clc
test
xor
ja
pop
push
rclb
lock
jns
outsl
lods
lods
and
dec
adc
cmpsb
pop
or
xlat
sub
rorl
lock
jmp
mov
test
or
out
pushf
inc
xchg
add
jo
loope
push
rcrb
andl
ja
xor
sbb
pop
jp
fsts
pop
inc
sub
pop
das
and
lock
pop
or
popf
test
inc
mov
and
and
push
addr16
pop
inc
lret
push
cmp
cmp
push
sub
xchg
xor
js
test
push
insl
jnp
xor
and
enter
ds
dec
ja,pt
mov
dec
sar
ret
lock
loop
xor
mov
call
inc
daa
mov
xchg
adc
nop
divl
mov
and
imul
insb
roll
aad
sub
and
repnz
push
xchg
sarb
lea
mov
cmp
push
andb
imul
jl
test
mov
jecxz
les
daa
and
hlt
jle
push
loope
sub
xchg
into
mov
xchg
xlat
lods
shr
insl
test
adc
or
add
mov
or
mov
dec
call
xchg
fs
or
fnstsw
icebp
fildl
lret
lcall
test
jmp
cmp
dec
mov
stc
out
sbb
xor
sub
fbld
and
cmp
mov
frstor
stc
push
add
xchg
mov
sub
sti
in
iret
jne
rorl
or
mov
sti
xchg
das
cli
mov
mov
or
out
fmull
xorl
push
inc
or
jl
mov
cmp
imul
push
nop
push
pop
stc
mov
jno
movsb
add
dec
sbb
scas
xchg
repnz
pop
ja
idivb
mov
ret
jno
push
inc
push
popf
or
push
icebp
inc
fildll
les
out
mov
inc
add
push
jecxz
insl
loope
xchg
cmpsb
or
inc
xor
arpl
movsl
mov
pop
cltd
test
pushl
xor
into
push
pop
push
repnz
int
sbb
push
ja
and
push
cmp
lahf
push
lret
lea
ficoml
or
jae
hlt
push
test
mov
pop
jnp
rcll
jecxz
aaa
incb
movsb
hlt
mov
js
xor
stc
in
jb
aad
or
mov
cmp
jle
xor
push
sub
adc
shl
sbb
jge
aad
rorb
scas
jne
or
xor
jae
xchg
lahf
cmpsb
inc
push
mov
dec
dec
dec
orl
ret
mov
cmp
int3
cmpsb
dec
ftst
xor
adc
sub
dec
add
sbbb
or
cmp
jg
lods
sbb
pmulhw
shlb
jp
shrl
faddl
mov
mov
xchg
shlb
sarl
into
sbb
cmp
mov
insb
leave
loopne
ret
sub
pop
lahf
sbb
adc
aaa
push
hlt
in
push
add
xlat
sub
fwait
shrl
sti
xchg
mov
sbb
inc
inc
jns
pxor
pusha
xchg
cli
js
movsb
imul
popf
xchg
imul
mov
push
or
and
sbb
in
ja
or
out
popa
out
pop
movsl
mov
mov
fnsave
popa
not
fs
imul
dec
mov
dec
and
fnstcw
sbbb
xchg
jbe
pop
xor
cld
push
je
fistpl
outsb
aad
dec
push
sbb
int3
ficoms
arpl
push
add
lret
inc
jnp
test
or
or
dec
bound
fstl
jnp
mov
ljmp
add
icebp
fwait
adc
aaa
jl
cmpsb
testl
mov
jb
mov
iret
aas
outsl
sub
pusha
test
leave
ss
cmp
fldenv
or
shlb
pop
ret
xchg
sub
insb
adc
or
aam
repnz
dec
ja
push
inc
push
xchg
fidivl
jmp
cwtl
and
push
xor
or
stos
ja
or
pop
push
pop
xchg
dec
jns
lea
cmc
jmp
cld
or
or
addr16
negb
adc
loop
mov
lea
cwtl
add
dec
xchg
lea
lods
add
test
push
fistpll
gs
inc
jecxz
xchg
lock
mov
cli
adc
push
xor
jp
push
xor
dec
push
inc
lar
outsb
and
sidtl
adc
out
and
mov
test
lea
subb
push
pop
out
stos
rorl
cmp
mov
mov
fildl
imul
fdivp
repnz
loope
add
sbb
insl
sub
and
adcb
or
add
inc
scas
mov
or
push
movsl
and
adc
outsb
push
dec
enter
clc
xor
icebp
mov
adc
jno
pop
loopne
movd
lods
inc
fisttpl
pop
cmp
sti
adc
sbb
xchg
lcall
adc
add
je
xor
dec
cs
lods
iret
popa
push
push
fcmovbe
adc
iret
jmp
movsb
mov
insl
ss
pop
jns
out
dec
xor
notb
in
movsb
mov
out
mov
fidivl
xchg
or
pop
cwtl
out
dec
xor
out
xorb
pop
adc
xchg
mov
les
test
outsl
pop
xor
pop
xor
or
sbb
jmp
fldl
lahf
and
imul
imul
pop
or
mov
fnsave
loope
push
ret
stos
ja
fimull
xchg
push
fimull
fdivrs
enter
cli
lahf
sub
fildll
cmpsb
pop
ljmp
repz
jge
pusha
sub
cmp
daa
ret
stos
push
cmc
mov
cmp
rorl
xor
scas
xor
rcll
pop
add
jmp
aas
mov
jno
test
push
push
nop
test
repnz
cltd
incb
jbe
int
inc
lods
pop
repz
xchg
in
fists
daa
pop
dec
sub
lods
inc
push
stos
ss
sbb
xchg
ljmp
imul
orb
repnz
and
lods
dec
jae
loope
lock
xor
sub
cld
fstl
inc
sar
out
js
les
xor
pop
sbb
jl
icebp
mov
sbb
fldl
dec
test
sub
pop
mov
repz
pop
stos
call
and
out
lahf
cmp
or
icebp
adc
push
adc
scas
ficoml
xor
xor
shl
pop
xchg
sbb
mov
je
jecxz
mov
out
les
int
inc
and
or
jb
daa
stos
sub
mov
shll
ficoml
lods
rep
ljmp
ret
repz
jmp
cltd
gs
sarb
cmp
pop
loop
pop
pushf
mov
iret
imul
xchg
jae
lock
movsl
ret
rcrl
aam
hlt
enter
add
pop
fiaddl
dec
es
cmp
cld
lods
lods
dec
lods
adc
nop
out
das
sub
in
or
out
sub
and
xchg
push
push
fidivrl
mov
xchg
mov
andb
inc
pop
fsts
or
jno
or
push
movsl
or
xchg
mull
add
push
xchg
repnz
test
imul
dec
or
mov
gs
jmp
adc
popa
lock
outsb
jno
mov
mov
lds
out
dec
inc
push
jb
push
jns
sub
in
loop
arpl
shll
push
sar
and
add
rolb
cmp
jnp
dec
sub
xchg
push
cmp
cmpsb
sub
adc
sub
shll
rcll
lret
fdivrp
or
push
std
fwait
add
jb
adc
inc
add
in
stos
sub
mov
xorl
mov
jnp
mov
scas
push
idiv
ss
and
cmp
arpl
dec
xor
sub
hlt
adc
in
sbb
dec
mov
push
jns
mov
sub
and
pop
in
sbb
jae
pop
lock
out
cmpsl
ret
sub
mov
outsl
aad
test
enter
lea
fcmovbe
les
add
int3
xchg
add
push
stc
in
stos
enter
and
mov
fstps
pop
sub
ss
mov
mov
mov
or
cld
mov
pop
xor
out
and
sbb
dec
push
cmp
movsl
sub
cld
add
and
ficoms
aam
andb
leave
push
push
xchg
pop
dec
sbbb
mov
and
mov
sbb
mov
jg
dec
sbb
xor
rcll
mov
int
repnz
out
arpl
leave
inc
test
mov
loopne
jae
imul
in
or
adc
ret
loope
push
repz
or
adc
inc
out
mov
bound
popa
push
or
push
cmc
push
pop
or
jb
scas
std
jecxz
sbbl
add
fs
loop
nop
inc
call
pushf
nop
or
ds
movsl
aaa
mov
pop
sahf
outsb
cmp
imul
lahf
jmp
shl
pop
cmp
int3
pop
xor
add
into
mov
clc
add
or
mov
lea
dec
sbb
ja
pop
pop
push
cmp
cmp
and
dec
int
movsl
adc
in
and
xchg
jno
mov
stc
xor
sbb
push
xchg
rcll
add
dec
into
mov
push
outsl
ficoms
and
ficoms
dec
jecxz
lds
xor
push
cwtl
jnp
rcrb
fsubs
shlb
pop
or
frstor
pop
xor
push
out
pusha
push
xor
das
cltd
add
jle
add
xchg
cmpsb
push
jp
mov
sahf
lock
int3
test
mov
inc
cltd
sarb
sub
adc
in
pop
fnstsw
mov
cltd
dec
lret
add
push
xchg
xor
lods
mov
sbb
add
xchg
inc
movsb
popa
mov
out
jmp
ret
and
push
add
dec
push
test
shl
push
mov
ficomps
fisttpl
lret
ffreep
adc
sub
pop
lock
ret
adc
ja
mov
aas
mov
xchg
xlat
lret
lds
ret
pop
or
mov
sbb
das
mov
push
and
cmp
clc
mov
cmp
in
or
cli
in
mov
push
jecxz
out
jl
loopne
and
rcrl
push
clc
add
popa
add
jbe
jle
jl
pusha
add
push
or
int3
fdivrs
clc
fucomp
dec
push
fcoml
xor
mov
or
sbb
inc
andl
or
push
cmp
ret
imul
mov
fimuls
in
mov
xchg
jecxz
call
xchg
inc
dec
cmpsl
out
shll
movsl
pop
cld
repz
xchg
push
fists
pushf
cli
popf
mov
mov
in
iret
and
int3
int3
and
pop
mov
testl
cmp
push
add
fs
pop
sbb
sbb
xchg
shlb
push
das
loop
mov
pop
push
mov
pop
lret
mov
ljmp
stos
mov
adc
mov
ret
shl
stos
mov
shll
lods
rol
ja
int
jl
add
mov
or
aaa
dec
xor
mov
jp
pop
inc
sub
cmp
fwait
xor
mov
mov
ss
push
pop
push
dec
pop
imul
dec
push
lret
cmp
mov
or
je
mov
loop
ret
or
adc
cmc
or
aam
dec
xor
xlat
sub
xchg
adc
adc
jmp
pop
in
out
outsl
fsubs
sbb
pop
sub
inc
push
inc
and
rorb
mov
add
sahf
sti
inc
loope
dec
sbbb
inc
leave
dec
adc
add
in
out
add
adc
jne
idivb
mov
mov
and
ja
inc
xor
and
xor
mov
pop
insl
jae
mov
cltd
shlb
jne
inc
and
jmp
mov
mov
cs
lock
les
adc
mov
push
bound
cwtl
cli
or
pop
push
mov
cmpsw
sub
pop
in
incl
sti
push
subl
mov
push
pusha
popl
add
outsb
lret
mov
subb
mov
xchg
fadd
xchg
mov
out
fimull
aad
mov
xor
sbb
ret
add
push
imul
sbb
lods
cmp
ja
outsb
mov
dec
or
rcrb
cmp
mov
nop
xchg
sbb
add
push
mov
outsb
gs
stc
mov
shll
inc
jne
ss
les
ret
push
jne
dec
dec
xor
fisubrl
cmpl
fwait
movsl
cli
sub
jb
jecxz
shlb
sahf
fsubl
xor
je
jmp
xchg
call
sbb
outsl
je
cmpsb
inc
adc
aad
dec
add
inc
aas
and
mov
dec
adc
loope
sub
daa
sub
decl
jae
je
sub
int3
push
sbb
call
and
out
dec
icebp
jmp
push
pop
enter
call
mov
and
xchg
cmp
lods
lahf
les
cltd
int3
cli
jbe
enter
mov
mov
call
xor
xchg
push
pusha
sbb
fucomp
mov
jp
dec
xchg
int
mov
add
fistpll
jae
lcall
iret
out
addb
sahf
xor
jno
mov
fwait
dec
ret
sub
or
inc
xor
imul
cmpb
daa
inc
push
sarl
leave
pop
push
or
mov
mov
mov
add
test
mov
scas
jns
mov
push
mov
push
mov
cmpsl
pop
and
mov
inc
les
lcall
sbb
sbb
mov
pop
jo
andl
js
loop
out
lea
inc
mov
dec
push
lret
mov
mov
imul
fs
icebp
adc
xor
pop
mov
push
repnz
sub
aad
insl
mov
push
in
and
push
mov
xor
ss
addr16
imul
fisttpl
imul
mov
enter
test
jne,pn
pop
push
loopne
and
xorb
mov
or
push
pop
loop
shrb
sbb
jecxz
scas
popl
sahf
in
hlt
out
popf
lahf
push
das
fwait
inc
stos
in
popa
jae
jae
out
mov
int3
sub
jb
cltd
imul
int3
jae
aad
pop
dec
or
jg
insl
in
inc
aad
fidivrs
clc
cli
lret
lret
pop
xor
inc
mov
inc
jnp
jge,pt
jl
ss
fdivrs
mov
or
ret
inc
repnz
xor
loop
rcl
pop
ret
jl
push
cmp
inc
add
cmp
add
les
xor
sub
mov
scas
sub
pusha
jmp
inc
test
jge
pop
mov
pop
arpl
jnp
lret
idivb
add
cltd
jmp
adc
pop
das
insb
mov
rcll
add
mov
icebp
js
movsl
aad
andl
cmc
es
mov
pop
jo
icebp
call
xor
push
sahf
lds
out
punpckldq
je
lret
pop
pop
jmp
int3
in
pop
jno
adcl
in
add
adc
aam
jl
mov
stos
in
pop
adc
push
pop
inc
inc
jbe
mov
pusha
loope
sbbb
sub
mov
sarl
dec
mov
outsb
xlat
stc
fidivl
sub
pop
ss
adc
add
adc
in
lds
lds
jo
rcr
mov
std
mov
sub
pop
neg
or
outsb
push
push
lds
and
fmuls
inc
cmp
out
dec
stos
inc
mov
cli
fcomi
dec
jle
sahf
pop
push
mov
ljmp
subl
jge
inc
push
xchg
xor
or
mov
stc
inc
dec
cmp
sub
out
inc
push
scas
xor
rcrl
arpl
icebp
lahf
popa
mov
push
add
cmovne
pop
aaa
insl
cmp
sub
data16
fidivrs
mov
adc
jo
add
sbb
xchg
sahf
mov
sahf
fmul
imul
xor
cwtl
and
stos
push
aam
jae
adc
je
inc
aaa
pushw
xchg
sbb
dec
das
mov
xchg
enter
cs
dec
int
inc
pop
cmp
adc
imul
aaa
pop
lods
mov
xor
inc
mov
scas
call
loope
jo
push
xchg
mov
push
ja
hlt
lea
into
int
std
shlb
xor
xor
cmpsl
ja
idivl
mov
lods
push
lcall
dec
sar
mov
dec
pop
ds
push
lcall
popl
mov
stos
and
add
adcb
xchg
dec
xchg
bound
fwait
mull
daa
stos
xchg
into
test
jp
andb
out
push
and
cmpsl
push
jbe
in
pop
inc
outsl
ret
pop
mov
dec
add
add
sbb
sbb
into
call
pop
loopne
or
sub
jns
cmp
xchg
nop
xor
loopne
in
xor
pop
xor
sub
arpl
dec
xor
xor
jle
cmp
mov
and
cld
and
cmp
and
sahf
jbe
cmp
pop
movsl
mov
popf
or
mov
push
subl
push
dec
xchg
lock
and
fdivl
xor
jmp
xor
mov
jg
add
mov
push
repz
pop
loop
adc
insl
dec
std
push
jle
cmp
push
jne
mov
mov
jne
or
jge
mov
insl
sbb
xor
pop
in
ret
push
and
les
mov
aas
in
push
mov
ficomps
mov
mov
mov
jmp
mov
aam
scas
test
jae
mov
jne
sub
or
fcoml
clc
adc
dec
cmc
push
inc
sbb
pushf
xchg
decl
mov
push
ret
in
jb
sbb
insl
mov
ret
fcmovbe
lcall
mov
lock
test
test
sarb
push
mov
loope
xchg
outsl
sbbl
scas
inc
lahf
jno
popa
call
out
add
xor
and
shrl
rcrl
psraw
outsl
sbbl
scas
inc
lahf
jno
popa
call
out
add
xor
and
rcrl
sarl
loope
xchg
outsl
sbbl
scas
inc
outsl
jno
popa
call
incl
fbstp
daa
and
shll
inc
icebp
das
loope
xchg
jg
pop
mov
mov
xor
cltd
addr16
and
xor
jmp
out
xor
add
adc
fstpl
jg
outsb
mov
xchg
dec
cmpb
das
jg
rorb
jmp
out
xor
add
adc
inc
and
lods
outsl
mov
orb
xchg
das
repnz
rorb
cmp
sub
sbb
or
pop
dec
xchg
xor
dec
in
scas
inc
test
popa
mov
fbld
ja
test
mov
mov
mov
xchg
jnp
push
dec
aas
or
orl
inc
inc
adc
scas
sbbb
mov
subb
dec
xor
pop
fdivs
mov
pop
adc
rorl
pop
ljmp
jp
setne
jle
iret
mov
iret
inc
cwtl
pusha
mov
aad
inc
ljmp
fsubrl
pushf
aas
cmp
add
xor
scas
add
xchg
pop
cmp
js
sub
loopne
xchg
push
push
add
adc
inc
lcall
popl
sub
lahf
fisubl
enter
ret
xor
out
and
sbb
adc
inc
outsl
test
cltd
dec
mov
clc
das
call
mov
cmpsb
jne
fstl
sti
sub
xor
pop
test
cmc
test
bnd
dec
mov
mov
pusha
ljmp
aam
aad
in
xchg
ds
inc
lock
jp
lcall
push
repz
scas
jo
inc
push
jg
outsl
mov
orb
loopne
lock
rorb
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orb
loopne
lock
rorb
jmp
lret
xchg
adc
lods
out
je
js
or
pop
dec
pop
cwtl
jbe
mov
lea
xchg
mov
xchg
lret
dec
in
sub
xor
int
jge
stos
popf
and
addr16
ret
dec
sbb
and
push
cmp
cmp
jo
sub
or
lods
loopne
bound
sarl
jne
jb
das
push
add
jl
push
shlb
push
fnstsw
sub
ja
int
movsl
jnp
fiadds
pop
mov
mov
jge
idivl
sub
call
ss
cmpsb
adc
iret
lret
scas
int
and
sti
aad
dec
sub
mov
inc
aam
jbe
lret
mov
leave
push
adcl
iret
pop
sub
sbb
cmp
stos
push
jmp
jle
mov
je
and
nop
xor
adc
in
add
adc
out
fxch
das
adc
xchg
and
inc
mov
or
imul
pushf
rol
popa
inc
lea
int
push
mov
repz
in
jle
cmpsl
sub
repnz
xor
ljmp
bound
jg
inc
mov
push
push
adc
aam
hlt
rcll
push
lock
jecxz
mov
das
movsl
cmp
lock
xchg
sub
inc
mov
call
xchg
mov
popa
gs
lods
sti
insb
icebp
stos
outsl
or
mov
ret
dec
ljmp
hlt
xchg
push
addr16
cld
xor
scas
xchg
mov
pusha
fcmovnu
lock
lret
out
cmpsb
adc
adc
adc
in
mov
and
ss
lret
xchg
mul
mov
adcl
pop
sub
fstpl
pop
das
cli
and
cld
pop
dec
mov
adc
push
ficoms
xor
ljmp
push
xchg
in
mov
jno
dec
or
and
pop
nop
inc
je
dec
test
and
imulb
outsb
push
je
sbbl
cmp
sbb
or
lods
adc
in
aas
inc
lret
notl
mov
and
cmp
dec
jmp
js
pushf
outsb
push
shrl
sbb
mov
test
fcoms
aad
jb
mov
push
sbb
rcrl
xor
pusha
push
popf
jge
jbe
pop
xchg
scas
rcl
addr16
xchg
mov
test
js
ret
adc
lea
sub
imul
cmc
push
lock
cmp
add
stos
stos
test
jnp
inc
ljmp
decl
mov
sbb
rcr
loopne
addr16
push
imul
add
icebp
mov
jecxz
pop
or
inc
das
or
push
jecxz
lret
jmp
adcl
mov
es
out
clc
pop
jp
lahf
ret
lahf
cwtl
out
call
cmc
inc
or
fldl
ror
out
sub
pop
sub
aad
cmp
clc
lahf
arpl
popa
mov
stc
jae
pop
std
and
xlat
cmp
fs
xor
sub
xchg
int
imul
or
xor
rorl
push
repnz
push
and
retw
sub
sbb
xor
mov
and
pusha
hlt
subl
fisubrs
pop
xor
sbb
jle
js
jb
mov
jne
stc
and
icebp
xor
mov
cmp
cmpsb
adc
xchg
jmp
xor
cmp
insb
nop
mov
mov
icebp
and
ds
iret
addr16
call
cmp
add
mov
sbb
lcall
mov
imul
cmp
gs
and
jns
lods
int3
inc
iret
adc
stc
in
outsb
pop
bound
push
test
arpl
xor
push
mov
inc
xchg
enter
or
insb
andb
add
jbe
xchg
or
xchg
int3
aas
add
xor
aaa
in
hlt
mov
mov
cmp
dec
daa
jp
lock
into
sub
shr
nop
aas
cmpsb
xchg
stc
mov
mov
ja
cmp
sbb
mov
loopne
add
fsubr
mov
fst
inc
les
or
int3
fldt
mov
pushf
add
xor
or
jb
fwait
mov
rcrb
arpl
dec
inc
imul
sbb
shl
aad
mov
adc
cmc
xor
pushf
push
add
jle
mov
fbld
push
dec
sbb
pop
fucomip
add
xchg
and
inc
test
sub
adc
das
orl
pop
testl
push
sahf
mov
sub
sub
rcrl
in
lods
pop
and
in
loope
jle
sbb
pusha
mov
les
idivl
mov
movsb
adc
pop
repz
divl
pop
xchg
push
or
js
push
jns
dec
mov
test
cmc
adc
jmpw
ss
ja
mov
sub
addl
mov
mov
push
ja
xor
push
aad
into
and
stc
call
pop
insl
fistpll
xchg
adc
shr
xchg
insb
sbb
mov
lahf
inc
ja
movsb
mov
xor
cmpl
test
fucomi
cs
fwait
pop
xchg
repnz
js
xchg
popa
mov
cmc
stc
popa
xchg
push
xchg
int3
or
hlt
lock
mov
fstpt
and
or
adc
inc
add
andb
push
clc
sbb
xor
cs
mov
enter
out
push
mov
and
sub
lds
pop
push
arpl
xor
lods
xor
mov
arpl
in
hlt
pop
sub
scas
scas
cmpsl
stos
inc
or
dec
lret
rorb
cltd
xchg
clc
and
mov
lret
subl
inc
xor
movsb
inc
sbb
out
inc
adc
ret
mov
pop
loope
pop
pop
cld
fisubl
aas
cvtps2pd
jl
inc
rcll
rol
lods
pop
sar
jns
jnp
fwait
icebp
mov
sub
jo
mov
inc
xlat
dec
mov
xchg
test
sbb
les
out
dec
or
lahf
out
test
sbb
loopne
aad
sub
mov
subb
aas
icebp
xor
xlat
sahf
and
xchg
xor
pop
fwait
cmp
or
pop
dec
bound
enter
loope
xchg
dec
inc
jne
icebp
aam
fcoms
mov
into
hlt
jg
pop
mov
dec
and
sub
popf
push
insl
insl
push
push
es
xlat
es
pusha
and
push
xchg
jl
push
inc
push
lcall
bound
sub
repz
enter
push
xchg
daa
mov
jno
out
mov
das
iret
mov
and
repz
add
mov
setbe
ss
mov
fsubl
and
push
adc
push
sbb
scas
mov
xlat
cmp
aaa
cmp
xchg
fdivrs
shrl
xchg
xchg
or
xor
pushf
mov
inc
shr
lret
mov
or
sub
push
bound
pop
sub
cmp
xor
inc
notl
sti
push
xorb
fsts
lds
addr16
and
mov
sub
adcb
mov
cld
mov
lods
fmull
cwtl
mov
xchg
aas
cmpl
dec
mov
cld
js
shlb
fdivr
pop
insl
pop
out
add
fsubs
push
leave
push
mov
in
jmp
lods
cmc
jns
xchg
out
xchg
sub
shlb
mov
mov
sbb
cmp
and
out
outsl
sbb
das
sbbl
into
cmpsl
sub
je
lret
xlat
jb
jns
or
lods
dec
fisttpll
arpl
mov
lds
dec
jbe
es
lret
negl
push
mov
inc
ret
push
xor
pop
and
lret
insb
lods
int3
mov
mov
pop
hlt
repnz
fstl
sbb
pop
mov
aas
pusha
lea
mov
inc
mov
cmp
mov
ljmp
into
pop
negl
shll
mov
cmp
mov
addr16
mov
out
adc
imul
sub
loop
xchg
das
fildll
or
rcrl
js
pop
dec
jns
loope
test
add
add
add
push
lods
sub
add
lock
clc
dec
int
push
mov
xor
dec
ss
fwait
mov
aaa
ret
adc
xchg
sub
lods
mov
cmp
test
outsb
clc
cwtl
outsb
xchg
mov
cmpsl
push
stos
and
pop
pop
dec
pop
dec
roll
pop
push
cmpsb
vpcomw
fcmovnbe
movsb
add
and
test
lret
pop
push
push
cmpl
xchg
outsl
ljmp
cmpsl
arpl
push
xor
mov
inc
in
loop
imul
mov
xchg
xchg
lock
leave
dec
icebp
jns
or
adc
stc
push
fwait
ja
sub
cmp
adc
dec
jo
ds
mov
clc
sbb
xchg
jno
fmul
outsb
int
and
fs
aad
sub
andb
out
jo
mov
or
xor
jmp
loope
lock
ret
repnz
or
test
dec
aad
dec
jmp
and
push
loope
mov
inc
sub
pop
and
dec
dec
ret
cmp
daa
call
mov
je
in
addr16
shr
jmp
es
and
push
xchg
mulps
cmp
jnp
pop
test
xor
lcall
adc
lret
adc
sbb
lock
cld
jne
xor
sub
popf
daa
jmp
lahf
dec
testl
mov
int
inc
insb
xchg
out
fbstp
dec
cmp
jmp
push
pop
xchg
xchg
jl
pusha
ret
push
nop
enter
xor
cs
insl
rclb
sub
inc
sbb
sti
popf
inc
jbe
add
dec
or
and
mov
daa
fstl
bound
mov
rcll
jecxz
stc
shll
scas
mov
jp
test
add
scas
jle
insl
jge
into
out
aaa
pop
mov
xor
inc
pop
aam
sub
add
pusha
push
pop
xchg
dec
pop
pop
add
testl
arpl
lds
adc
repnz
lret
and
loopne
loopne
out
loope
out
out
inc
xlat
dec
mov
xor
inc
xlat
or
ror
cld
push
sahf
fsubl
aam
add
mov
out
jns
cwtl
xchg
call
lods
popa
cli
sub
dec
pop
in
sbb
dec
call
clc
ret
je
jl
je
mov
mull
dec
and
dec
xor
sbb
cwtl
pop
xor
push
loop
lahf
inc
mov
xchg
loope
inc
mov
push
pop
test
sub
cld
cmp
aaa
dec
das
xor
or
xchg
xor
sub
add
sbb
mov
inc
fimuls
std
incb
jmp
mov
sbb
test
mov
pop
stos
xchg
insl
imull
mov
addr16
popf
sbb
shl
mov
mov
shlb
xor
dec
cmp
jl
inc
out
ja
insl
imul
fwait
mov
pop
mov
lret
mov
fisubs
jg
fstpl
aad
adc
lahf
xchg
idivl
mov
xchg
cmpsl
inc
push
fstps
mov
test
add
dec
and
push
jecxz
jb
add
dec
xor
loopne
pop
arpl
and
and
iret
test
shr
test
cmpsb
mov
sbb
lea
loopne
inc
inc
pop
mov
stos
lcall
in
lods
mov
push
insl
jg
mov
nop
pop
leave
sub
adc
jge
cs
inc
cmpl
mov
mov
mov
sub
xor
cli
xchg
ret
xor
push
js
push
nop
mov
in
add
inc
cmp
mov
test
icebp
int
inc
ret
popf
add
test
add
add
mov
nop
mov
cs
lahf
pop
add
or
xchg
lods
pop
jae
ljmp
jns
lods
xlat
loopne
inc
arpl
fsubr
xchg
jge
mov
jbe
lret
sub
hlt
pop
push
gs
mov
mov
ret
mov
ds
inc
push
lods
and
xor
and
jl
mov
loop
out
leave
xor
scas
arpl
or
add
sbb
std
and
ljmp
adc
sahf
xchg
subl
fnstcw
aam
pushf
push
stc
cmpsb
les
dec
mov
or
sub
sahf
jns
dec
fidivrs
mov
mov
inc
fidivl
and
pop
ret
adc
mov
cld
xlat
mov
mov
inc
sti
adcb
popa
mov
mov
imul
xchg
bnd
pop
adc
jle
xchg
jl
cld
xor
out
mov
add
mov
fdivrl
fnstenv
mov
cmp
loop
push
mov
push
lcall
jb
test
loope
loope
push
mov
adc
ja
divb
xor
loope
shrb
xchg
sub
inc
test
sbbb
adc
sbb
inc
xchg
push
sub
inc
sub
fstpt
aad
aaa
xchg
dec
jae
or
mov
ja
adc
push
xlat
sub
and
jmp
rolb
add
cltd
adcl
push
daa
xor
int3
scas
sbb
je
aad
int3
ret
xchg
daa
cmc
mov
pop
stos
out
sub
jmp
lock
mov
mov
xor
jo,pn
sbb
push
call
or
push
nop
sub
mov
jb
mov
add
mov
push
ss
out
scas
aas
addb
add
jne
and
push
mov
mov
jb
dec
clc
popa
and
push
sub
adc
and
sbb
popa
mov
cmp
jno
mov
or
dec
movsl
dec
bound
loop
push
orb
dec
dec
lret
mov
je
imul
out
adc
xchg
mov
stos
js,pn
aad
test
xor
sub
pop
adc
push
frstor
ret
or
xor
test
dec
insl
push
mov
ds
mov
icebp
jne
call
sub
push
fwait
inc
popa
in
cmp
push
fucomp
test
pushf
push
jne
fs
jp
jb
jns
xchg
loope
fidivrl
mov
insl
leave
dec
mov
push
paddq
xchg
jge
or
popf
push
jmp
pop
pop
mov
add
popa
ja
xor
shlb
cmp
inc
sbb
clc
movsl
iret
movsl
addr16
mov
inc
ljmp
add
hlt
lret
cmpsb
stc
ret
cmpsl
loopne,pt
pushf
popa
adc
add
add
fnstcw
mov
jb
lea
mov
test
mov
nop
into
mov
xlat
scas
adc
in
cmp
mov
pop
rolb
mov
mov
cmp
fldenv
fdivrs
repnz
inc
push
inc
out
scas
dec
add
mov
and
or
cs
cmp
add
and
call
mov
arpl
cltd
test
lods
or
ret
and
mov
loopne
pop
test
sbb
lahf
jns
dec
mov
fdiv
arpl
sub
mov
ss
mov
movsl
sbb
jo
sub
sbb
out
cmp
ret
jae,pn
add
outsl
inc
sbb
inc
xchg
jg
dec
faddl
and
fs
out
into
jmp
push
jb
xchg
sub
js
fldt
sub
mov
test
stos
jl
out
clc
iret
stos
in
sbb
push
test
outsb
pop
push
or
sub
dec
mov
pop
xchg
inc
test
sbbl
leave
jno
cwtl
add
inc
lods
pusha
in
xlat
int
xor
pop
dec
mov
lods
imul
je
or
movsb
ss
lock
add
insb
jno
icebp
xor
cli
xlat
stos
jg
lea
jp
sub
jbe
cmc
fildll
add
sub
pop
mov
jmp
outsb
leave
dec
pop
or
xchg
mov
and
ljmp
enter
xchg
push
lods
push
sti
arpl
outsb
jle
cmp
fimuls
dec
xor
lds
inc
loope
cld
mov
pop
call
jp
pop
mov
mov
inc
mov
gs
xchg
inc
jns
dec
out
xor
stos
mov
mov
aam
mov
shr
gs
xchg
enter
loop
xchg
mov
xchg
sub
sbb
push
shl
push
sub
ss
dec
inc
and
push
cltd
scas
xchg
jns
xchg
mov
bound
rclb
inc
pop
addps
add
cmp
mov
lahf
jmp
stc
fwait
and
mov
lret
and
pop
fstps
orb
inc
or
push
push
adc
adc
inc
nop
and
test
cltd
in
jge
push
mov
outsl
imul
xchg
jnp
and
shll
and
push
popa
imul
cs
xor
mov
ljmp
cmp
dec
xor
fisubrs
mov
xchg
outsl
jnp
aam
push
sub
cli
xchg
pop
xor
push
cmp
mov
cltd
push
pusha
push
orb
xchg
fwait
in
mov
and
pop
adc
jb
mov
dec
leave
ss
data16
adc
arpl
adc
in
je
rcrl
cltd
xchg
fcomip
aaa
sub
mov
pop
test
cmpsb
pop
sbb
jle
pushf
mov
stc
xor
xchg
pop
mov
dec
xchg
jbe
push
mov
jno
mov
test
adc
mov
add
lret
mov
xor
or
call
out
adc
pushf
sub
or
push
jne
mov
sbb
mov
dec
cmp
imul
pushf
int
jg
loopne,pt
add
pop
and
lret
sbb
imul
inc
dec
in
movsb
and
push
inc
pop
test
cmpsb
leave
and
fimuls
push
xor
sub
call
pop
adc
cmp
daa
ret
stos
or
pop
cld
push
aam
dec
sahf
cwtl
jno
pop
cmp
sbb
subb
jp
leave
cmc
pop
and
je
push
mov
jl
ljmp
inc
fsubrl
inc
mov
outsb
lds
xchg
lods
test
out
mov
xchg
incl
sub
mov
rorb
cmpsl
inc
cld
mov
xor
mov
jle
inc
push
popf
dec
pop
xchg
and
iret
inc
pop
in
cmp
xor
or
in
fwait
int3
call
push
rcrl
in
cmpsb
ljmp
fs
cmp
call
sub
mov
fsubrs
and
es
daa
sbb
and
jo
mov
cwtl
jp
sub
jecxz
dec
and
insl
pop
scas
dec
faddl
enter
cli
mov
add
aaa
adc
add
ja
cmpsl
ret
outsl
sahf
xchg
dec
sub
dec
clc
loopne
adcl
sbb
ljmp
outsl
and
xor
push
sub
fidivl
jns
inc
mov
addr16
sti
sbb
jne
lock
xchg
push
mov
in
mov
fmulp
fisubs
inc
cmp
mov
mov
idiv
xchg
mov
dec
mov
sbb
insl
cmp
lcall
cmpsl
sbb
add
pop
jp
es
jne
jecxz
jge
les
jnp
pop
or
cmp
xchg
lds
or
test
call
fsub
shlb
cmpsb
ret
inc
and
icebp
xchg
jne
xchg
repnz
imul
jo
loope
out
jbe
xchg
dec
int3
mulb
xchg
add
mov
aaa
push
inc
pop
jmp
repz
imul
fldt
movsb
and
lea
popa
dec
mov
orl
dec
fsubl
das
jno
add
mov
stos
fldt
movsb
pop
jbe
stos
add
leave
shlb
jne
imul
outsb
xchg
ja
pushf
mulb
stos
add
in
sub
push
fimuls
repz
mov
add
adc
scas
mov
cmpsb
lods
cwtl
add
or
into
adc
out
xchg
adc
mov
movsl
mov
dec
push
neg
idivb
push
into
test
lahf
mov
xor
inc
sub
mov
xor
stc
mov
cmp
add
rorl
push
mov
ja
test
jl
mov
or
stc
cwtl
dec
leave
mov
mov
jge
xor
add
adc
inc
push
jg
outsl
mov
orb
loopne
lock
rorb
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orb
loopne
lock
rorb
jmp
outsl
xor
iret
adc
pusha
scas
jo
inc
jg
outsl
mov
orb
loopne
lock
les
aam
and
xor
add
adc
inc
nop
jg
outsl
sbb
orb
push
jg
in
cmc
jl
dec
aad
adc
imull
sbb
in
jne
inc
int3
push
fsubl
mov
jl
dec
aad
movsl
sub
cmp
or
sbb
in
jne
inc
int3
pop
fsubl
into
adc
jl
dec
int
mov
or
sbb
inc
push
cld
sbb
pop
rcrl
inc
pushf
mov
lds
mov
filds
sbb
jb
hlt
int3
cltd
or
aaa
fldl
cld
mov
scas
mov
add
add
pop
add
fldenv
int
xor
outsb
ss
xor
push
dec
push
lock
mov
jge
fsubs
and
jae
adc
or
icebp
pop
pop
sub
xchg
jecxz
aaa
je
jo
stos
mov
xor
adc
leave
xor
sub
sbb
adc
sbb
mov
add
addl
mov
jbe
popf
cld
lcall
frstor
data16
cwtl
adc
jl
dec
aad
mov
movsl
cmp
or
sbb
in
insl
cld
pop
int3
dec
fdivrl
mov
jl
and
sarl
inc
xchg
dec
mov
mov
movsb
xor
ja
js
mov
stos
dec
movsl
cs
fs
test
sbb
xchg
adc
and
jmp
cltd
das
test
sub
cmp
or
sbb
in
jne
inc
int3
push
fsubl
mov
jl
dec
aad
movsl
sub
cmp
or
sbb
in
jne
inc
int3
push
fsubl
mov
xor
leave
loopne
addb
xor
sbb
pop
popa
mov
aad
int
mov
cld
jmp
out
mov
pop
repnz
test
pop
mov
adc
jle
xchg
push
add
cld
cmp
pop
cmpb
into
push
sbb
daa
outsb
mov
dec
repnz
mov
mov
nop
dec
cmp
cmc
pop
addr16
adc
jne
loop
cmp
into
sub
sbb
sub
xor
xchg
mov
in
lods
and
and
cmp
pop
das
addb
push
xchg
cmp
fwait
cmpsl
lods
xchg
xchg
jmp
inc
les
repz
adc
insl
inc
inc
push
or
lds
mull
lret
out
out
mov
fsubp
jg
test
add
add
or
sbb
pusha
addl
jmp
cmp
push
sub
sbb
loope
jecxz
jmp
pop
lret
adc
mov
scas
fildl
jle
enter
lock
and
and
jecxz
aad
cmp
rorl
bound
sahf
or
mov
jle
xor
mov
pusha
shrl
into
jno
mov
dec
xor
jo
lea
dec
decb
bndstx
int3
push
inc
jle
mov
cmpsl
inc
lcall
xchg
mov
jp
stos
fld
in
stos
sti
aaa
mov
inc
ja
push
test
fcmovne
jne
fsubrl
inc
jns
inc
mov
cmpsb
xchg
iret
insl
sub
repz
rolb
dec
repnz
sbb
insl
es
or
aas
mov
inc
inc
jmp
sub
orps
and
sub
push
out
ss
outsb
pop
and
xchg
xor
into
in
in
mov
xor
test
jp
pop
mov
lcall
loope
shlb
or
xchg
out
xor
les
movsb
test
stos
push
lret
xor
popf
push
pushl
sbb
scas
rorb
cltd
jg
lret
and
xlat
xchg
in
inc
roll
notl
push
fidivs
imul
and
mov
js
xchg
jecxz
mov
add
les
jnp
adc
icebp
pushf
sbb
jle
sahf
repnz
mov
inc
ljmp
fs
mov
push
pop
or
fstpt
pop
sti
inc
cmc
mov
xchg
xor
mov
xchg
pushl
pop
add
pop
pop
mov
pop
mov
filds
mov
adc
xlat
aaa
and
movnti
jmp
ja
js
jns
vgf2p8affineinvqb
dec
sbb
out
and
rcrb
jns
and
mov
insb
mov
sub
cmpsb
aas
push
add
stos
xchg
add
sti
sub
xchg
xchg
xchg
xchg
fsubs
xchg
mov
pop
mov
aad
stos
pop
xor
inc
cltd
cmp
add
lods
or
xchg
pop
out
xchg
pop
mov
scas
aam
cltd
ss
mov
mov
push
sub
repz
and
xor
push
lock
jle
nop
push
jns
push
insl
fistl
sbb
pusha
mov
pop
xorb
cmp
push
imulb
mov
mov
push
mov
jecxz
push
dec
addr16
mov
inc
pop
mov
lods
mov
pop
into
xchg
cmp
jmp
leave
mov
cmp
fsub
push
test
mov
movsb
inc
lds
inc
mov
jp
lcall
or
mov
iret
imul
push
cmp
data16
stos
jle
xor
leave
inc
mov
imul
push
adc
adc
and
pop
push
inc
mov
shlb
out
les
mov
popa
fsub
sbb
test
fucomp
ss
jbe
imul
ret
loopne
mov
sub
add
ljmp
std
sbb
notl
rorb
sub
jle
push
lret
jb
out
cmp
in
popa
pop
xchg
leave
lahf
fwait
mov
push
cmpsb
pop
adc
add
cmpsl
adc
insl
repz
lret
inc
loope
scas
xchg
fcompl
push
jb
mov
ret
dec
push
imul
and
inc
data16
stc
sbb
push
or
inc
hlt
add
das
mov
and
sbb
jl
mov
loope
pop
ret
out
xor
cltd
xchg
in
or
ret
das
push
xchg
roll
xchg
inc
and
add
sub
pop
nop
push
ja
mov
adc
xor
popa
pop
xchg
outsb
or
jp
push
mov
xchg
mov
pop
lods
repz
pusha
xchg
hlt
sbb
and
popa
cmp
ds
push
orb
dec
sub
adc
push
mov
inc
sahf
push
dec
rcrl
jge
les
xchg
xchg
jecxz
sub
gs
lahf
daa
push
push
ss
jmp
ljmp
addr16
inc
inc
sub
jge
clc
test
and
sbb
aas
xchg
test
push
jl
add
mov
jbe
push
xchg
jae
mov
and
fildl
mov
xrelease
sti
sub
lret
ret
sub
xchg
popf
adc
test
inc
cltd
sub
or
sbb
mov
int3
fsubrl
loopne
sub
sbb
and
pcmpgtd
imul
pop
hlt
out
cmp
pop
mov
lcall
sbb
in
jbe
addb
push
xchg
imul
mov
ja
mov
jmp
enter
test
mov
pop
and
leave
xchg
jo
imul
or
jns
mov
push
xor
gs
orl
data16
pop
xlat
sbb
add
mov
addr16
pop
mov
cmc
pop
test
mov
jo
dec
jns
sub
fwait
imul
fcoml
test
add
dec
cld
test
std
mov
out
adc
jns
inc
dec
sahf
mov
or
mov
mov
outsb
xor
xchg
cmp
sbb
sub
divb
movsl
out
shrl
in
mov
mov
add
xor
arpl
outsb
and
lcall
pop
cmp
cmc
xor
movntps
cmp
enter
pop
xor
lock
shll
sbb
or
int
cmp
pop
cmpsl
xor
cmc
and
std
mov
sahf
mov
int
cmp
pop
mov
hlt
xchg
pop
cmpl
sub
cmpsl
and
ljmp
mov
sahf
lock
aad
mov
aad
sub
dec
shrl
and
xchg
in
imul
or
movsl
adc
inc
loop
mov
das
cmp
divb
pop
pusha
push
dec
lds
sbb
mov
clc
jecxz
std
ja
dec
xor
popf
ljmp
rorb
ljmp
outsl
pop
int3
insb
adc
clc
sbb
adcl
xchg
push
enter
icebp
push
aaa
xor
dec
fwait
pushf
fs
mov
lea
or
mov
cmp
cmc
jnp
test
test
jbe
scas
icebp
jb
sbb
lret
je
mov
mov
pop
cmp
xor
movsl
ret
push
mul
sbb
shrl
ret
pop
pop
inc
mov
lods
fisttpll
jo
dec
ret
xchg
add
mov
in
rorb
mov
mov
adc
jne
mov
outsb
data16
ret
popa
mov
sbb
xchg
cmpsl
pop
dec
lds
inc
inc
add
sbb
xchg
mov
pop
test
jg
aam
jns
or
adc
pop
mov
inc
push
sahf
xchg
scas
jns
lods
xor
lods
adc
out
outsl
mov
xchg
mov
adc
pop
push
jp
mov
ljmp
dec
in
sbbl
ss
popf
outsl
test
cmpsb
imul
insl
jmp
xor
mov
xor
mov
cmp
and
lods
rorb
aas
arpl
fucomi
and
xor
sub
mov
hlt
sbb
push
dec
test
repz
sbb
or
xchg
fcmovne
ljmp
es
out
pop
stos
in
icebp
gs
jbe
sbb
push
jo
or
leave
jo
out
cs
mov
pushf
or
in
sarb
stos
pusha
cmp
in
outsl
push
mov
cltd
mov
sbb
lods
mov
clc
mov
dec
ljmp
jbe
lock
pop
xor
shrb
cmp
clc
sub
in
in
mov
jp
cmp
pop
aaa
cmp
fmul
ret
jbe
sub
and
repnz
jmp
mov
jbe
pop
sub
arpl
lcall
sub
rcr
mov
sub
mov
sbb
aas
inc
xor
mov
test
pushf
and
add
cs
mov
notb
call
pop
sbb
and
push
jb
rcr
outsb
mov
pop
and
imul
insb
leave
dec
jb
mov
out
bound
inc
subl
jae
fwait
sub
fcmovbe
rclb
lahf
fstpl
dec
outsb
repz
inc
mov
js
jns
xchg
mov
arpl
or
cwtl
mov
xor
daa
lret
dec
cwtl
dec
pop
xchg
adc
repz
pop
fs
xor
mov
insb
cmp
mov
lahf
cwtl
and
fucom
aam
test
movsl
cmpb
push
xlat
mov
pop
jecxz
xchg
push
mov
aaa
xor
sbb
adc
pop
mov
mov
add
dec
xor
sbbl
jg
dec
out
mov
push
pop
ret
scas
lds
std
sub
je
add
fcomps
aad
jg
mov
rcr
xchg
leave
jno
add
outsb
or
vmaxpd
aaa
out
lods
pop
loopne
inc
fldcw
mov
sbb
xor
jnp
testb
rorb
iret
dec
pop
call
adc
xchg
inc
or
testl
loope
push
ret
rcr
fsubp
or
cmp
adc
insl
ret
pop
scas
cmp
pushl
and
push
shrl
xchg
imul
inc
push
popf
dec
loopne
push
stc
sbb
jle
add
cwtl
cmp
sahf
out
test
xchg
andl
sbb
jnp
sbb
in
clc
jne
in
mov
mulps
arpl
mov
dec
into
clc
popa
lret
inc
sbb
popa
push
mov
jns
push
sub
test
mov
fisubs
xchg
pop
mov
mov
outsb
daa
cmpsb
cmp
inc
pop
pop
fwait
adc
les
mov
jae
ret
fmuls
pop
jns
subl
fucomp
enter
xor
rorl
or
xchg
enter
shlb
inc
cmc
sub
std
add
push
push
ds
cs
mov
movsl
jecxz
xorl
mov
and
lret
add
jl
nop
pop
lods
dec
das
movsl
inc
stc
dec
and
mov
neg
in
scas
sbb
push
add
orb
push
add
outsb
cmp
dec
mov
stos
inc
cmp
imul
pop
and
imul
pop
in
inc
inc
jmp
inc
mov
xor
or
and
fs
ja
in
lock
pushf
fidivrs
sbb
adc
jnp
pusha
or
ret
pop
insb
mov
push
xchg
xor
daa
hlt
and
push
int
iret
push
fs
aaa
sahf
mov
mov
ror
les
cmp
and
xrelease
das
dec
pop
std
adc
cwtl
adc
and
xchg
ror
stc
outsl
scas
adc
mov
in
mov
pop
std
inc
push
test
push
stc
xchg
pusha
or
dec
mov
lods
ficomps
fcompl
mov
lret
scas
testb
ja
daa
jmp
imul
pop
cwtl
inc
and
sbb
sbb
xlat
cs
outsl
mov
notb
stos
mov
dec
ds
push
xchg
in
mov
fisubrl
mov
sbb
aam
dec
mull
xor
int3
inc
adc
sbb
in
mov
popf
sub
mov
mov
push
jg
aad
adc
testb
lods
mov
pop
rcll
inc
add
dec
push
aas
add
pop
adc
xchg
call
je
out
into
testl
sbbl
movsl
push
mov
and
ljmp
and
je
push
xor
dec
dec
jno
out
aad
mov
jmp
mov
data16
cli
mov
std
jae
jecxz
cmp
movsl
sub
andb
push
adc
hlt
sbb
jo
fucomip
test
ds
lcall
pushf
int
sbb
ljmp
divl
push
in
dec
fistpll
adc
fdivrs
adc
sbb
insl
cmpb
addr16
sbb
dec
dec
or
jge
adc
push
lahf
stc
iret
jne
inc
add
xor
add
sbb
pusha
cltd
mov
inc
mov
ficompl
inc
fadd
mov
data16
lret
aad
cld
jge
dec
mov
push
cmp
pop
mov
jnp
addr16
sbb
es
rorb
cmp
cmp
sbb
xchg
aam
xchg
inc
jns
mov
imul
scas
ss
adc
jp
mov
dec
sub
xor
aam
adc
cltd
pop
jg
mov
jg
pop
incb
movsl
push
jge
inc
scas
push
or
or
cmc
mov
outsl
jmp
mov
mov
lods
inc
sar
into
xor
jns
jecxz
cmp
scas
pusha
lret
or
fwait
rcl
inc
rcll
push
jnp
int3
ret
jp
stos
adc
inc
int3
fwait
jae
cmp
pop
add
and
js
fnstcw
jecxz
lret
inc
pop
shrb
xor
cli
gs
xor
inc
test
pop
adc
inc
push
nop
enter
push
in
mov
into
lret
dec
call
orl
add
mov
jne
ljmp
stos
inc
sbb
inc
adc
je
cltd
fsubp
cmp
stc
cmp
lods
aas
sub
js
add
pop
lahf
inc
jle
xchg
aad
or
mov
jo
or
add
cli
cmpsb
mov
mov
jno
mov
pop
jo
aam
pop
test
stos
stos
ljmp
std
enter
push
xor
add
dec
xor
cmpsl
int3
inc
xlat
pop
ljmp
jns
mov
cltd
cli
jecxz
xchg
lcall
jno
loopne
adcb
sbb
ret
pop
jp
les
jge
adc
rcr
incb
dec
aam
in
scas
sub
ljmp
xchg
adc
push
enter
jl
loop
lret
arpl
add
dec
divb
test
shll
cmp
aad
cmpl
or
or
jp
dec
cmp
stos
mov
movsl
fs
aas
fstl
rorl
push
sbb
push
mov
inc
and
js
sub
xchg
and
or
je
mov
cmp
fsubs
inc
inc
loop
scas
inc
sbb
mov
popa
push
inc
push
sti
sbbl
hlt
sbb
cmc
aam
fists
cmp
fldenv
lods
sar
jne
pop
xor
cs
jecxz
out
fldt
dec
sub
and
lock
loope
rorb
bsf
loopne
mov
sti
cmp
mov
imul
mov
cwtl
stc
fdiv
fadds
je
hlt
cltd
lea
mov
xchg
sbbb
sub
lahf
pusha
cmp
sbb
lahf
sbb
ret
pop
pop
loope
nop
sub
cmpsb
rorb
push
aad
std
xchg
ljmp
lods
pop
cwtl
popa
cmp
leave
jno
rcr
cwtl
lret
movsl
pop
stos
cmc
stc
cmpsl
insb
stos
popf
insl
pop
push
sbb
das
push
dec
popf
data16
or
pushf
cmp
stos
iret
roll
fisttpl
nop
mov
mov
int
pop
cmc
cmpsb
adc
fcoml
push
push
and
imul
xlat
sahf
imul
mov
scas
dec
lret
mulb
aam
shlb
mov
cltd
mov
and
repz
mov
add
stc
cmp
sbb
in
fnstsw
das
call
jge
call
stos
loope
cli
inc
aaa
mov
out
lret
cmpsb
mov
push
fisttpll
pop
insl
xor
pop
cmp
and
xchg
lods
stos
cmpsb
push
outsl
sub
push
push
mov
fstl
xor
mov
sbb
clc
xchg
pop
cmp
xchg
out
sbb
std
rcrl
mov
out
scas
or
cli
ljmp
lods
xor
dec
sbb
mov
lods
and
aad
xchg
mov
add
scas
sbb
jle
es
pusha
mul
jo
pop
lret
lods
sbb
test
xchg
repz
pop
rcll
repnz
xlat
rcr
into
pop
push
ljmp
push
pop
or
push
idivl
xchg
or
mov
cli
retw
lret
addr16
xchg
add
lock
lret
scas
mov
jae
mov
hlt
repz
sar
fisttps
lret
push
adc
or
lods
sbb
adc
aad
notl
fiadds
sbb
xchg
mov
test
aas
pop
and
sbb
jmp
add
test
daa
mov
int3
shll
testb
aad
imul
inc
mov
pop
stos
sub
dec
and
xor
adc
add
mov
sub
pusha
pop
mov
sarb
fwait
xchg
mov
sub
scas
arpl
jge
imul
popa
out
lods
xor
add
lods
xchg
cli
fidivrl
mov
adcl
out
xchg
divb
aam
xchg
dec
and
sub
popf
mov
xchg
inc
aad
outsb
out
jle
pop
mov
lea
testb
mov
sub
jae
push
pusha
cli
and
push
cs
lret
in
mov
push
xchg
inc
loopne
shll
aam
jo
jmp
lret
sub
xor
push
int3
and
jnp
or
pop
movsb
lret
enter
mov
hlt
ljmp
and
out
sbb
fcoms
dec
pop
cmp
pop
xchg
sti
cltd
dec
push
dec
mov
das
lods
mov
fbstp
out
in
sub
lret
push
ss
cltd
pop
push
in
mov
push
adc
lahf
pop
push
cld
mov
inc
jne
push
icebp
sbb
sub
imul
subl
mov
adc
and
imul
stos
add
adc
and
fildll
shl
jl
xchg
cmp
nop
mov
push
jnp
rol
aas
scas
sbb
push
test
dec
cmp
std
mov
add
fwait
pop
stos
movsl
dec
dec
xchg
gs
test
xor
adc
xchg
and
cmp
dec
mov
adc
das
xor
push
js
mov
sub
ds
ficoml
sub
sub
fsub
sbb
insb
lods
outsb
lock
mov
sarb
enter
cwtl
inc
fldl
mov
sti
sub
mov
inc
sub
xor
jmp
add
icebp
shlb
in
imul
lods
pop
or
or
imul
dec
iret
int
mov
mov
dec
xlat
inc
int3
inc
outsb
mov
vpavgb
mov
jno
xor
cli
repz
data16
dec
fwait
int
insl
rolb
ds
outsl
in
cli
and
push
mov
add
mov
in
push
fnsave
dec
mov
leave
sub
sub
add
lds
filds
test
in
push
stc
aad
sub
idivb
cmp
dec
xor
xlat
fldt
xchg
sti
jo
jns
fldt
push
loopne
movsb
faddl
imul
inc
jmp
add
leave
mov
mov
xchg
insl
mov
pop
cli
lods
xor
and
notb
jbe
cmc
enter
mov
lea
insl
jecxz
jle
push
pop
je
stos
out
inc
addr16
sub
fnstcw
dec
lods
inc
mov
jg
adc
mov
insl
pop
popa
mov
addb
lret
out
lretw
lds
adc
es
sbb
mov
fs
inc
enter
test
dec
pop
pop
enter
fcmovu
lods
lods
jp
icebp
pop
ss
jns
and
jmp
adc
xchg
inc
xor
add
stc
into
mov
push
imul
jg
inc
inc
cli
scas
mov
adc
xchg
in
cmp
xor
pcmpgtb
in
pop
movsl
sbb
das
pop
cmp
aam
stc
and
aas
int
mov
cltd
ss
mov
aam
jb
mov
pop
cmp
push
hlt
cld
pusha
push
mov
jbe
cmc
xchg
lock
hlt
add
xor
jmp
jl
dec
aad
movsl
sub
cmp
or
sbb
in
jne
inc
int3
push
fsubl
mov
jl
dec
aad
movsl
sub
cmp
or
sbb
in
jne
inc
int3
push
fsubl
mov
cld
pop
movsl
sub
mov
gs
jne
inc
int3
push
fsubl
mov
pushf
in
idivl
aad
cmpsl
sub
cmp
or
sbb
in
mov
int3
push
stos
push
and
inc
cli
jae
arpl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
arpl
inc
je
fs
addr16
jecxz
repz
in
xchg
mov
xorl
inc
je
and
add
xor
and
aam
les
xchg
mov
xorl
inc
je
and
add
xor
and
ljmp
lret
shl
int
std
movsb
sub
xor
and
mov
call
xchg
or
xorb
aas
shrl
pop
iret
add
ficomps
or
in
adc
hlt
push
in
push
cmpsb
jb
inc
clc
xchg
mov
and
jecxz
cltd
cmp
mov
mov
dec
push
movsl
es
jb
xor
adc
jnp
jecxz
jecxz
dec
or
sbb
fcmovnbe
orl
pushf
leave
pop
mov
cwtl
adc
sti
add
adc
xchg
pextrw
pop
xlat
cs
mov
arpl
dec
mov
fcmovnu
repnz
cld
lcall
aad
lock
in
imul
cmp
je
and
add
xor
and
aam
in
xchg
mov
xorl
xor
and
jp
push
push
push
mov
lcall
ss
adc
gs
sub
pop
adc
xchg
icebp
test
mov
out
icebp
rcll
sub
push
adc
js
add
xor
and
aam
in
xchg
mov
xorl
inc
je
and
add
xor
and
aam
in
xchg
mov
xorl
clc
xchg
stc
rcrl
pop
mov
test
push
scas
andl
push
insl
sahf
pop
xorl
fs
lret
andb
xchg
nop
mov
pop
loopne
pop
rorl
pop
pop
pop
movsb
or
fdivl
xchg
aas
clc
push
sbb
add
outsl
jg
mov
clc
cltd
scas
push
add
lods
mov
or
insl
cmpsb
mov
sti
lcall
lock
jb
aaa
add
sbb
addr16
sbb
adc
add
sub
mov
and
inc
mov
lsl
scas
dec
fcoms
dec
add
loopne
lods
jnp
sti
mov
lods
test
jbe
xchg
mov
aad
es
int
cli
push
sub
mov
lret
mov
rdtsc
jle
pop
push
cli
decb
repz
movsl
pop
sbb
or
or
jne
dec
scas
into
xchg
scas
jno
loope
test
mov
xchg
dec
rcl
je
sbb
sbb
nop
and
mov
jae
stos
je
dec
out
or
jl
mov
addr16
push
aaa
jmp
fimuls
jl
pop
je
adc
icebp
out
pop
fsubp
aas
std
or
mov
add
lahf
cld
std
int3
pop
gs
dec
leave
fdiv
jae
xchg
imul
xchg
loop,pt
scas
lock
lock
and
dec
lea
and
mov
inc
lods
mov
cmpsl
fucomi
imul
add
call
push
push
xchg
push
vpmacssdd
loop
js
jge
dec
testl
adc
outsl
jmp
stc
bound
or
inc
pop
fidivl
sbb
in
loope
mov
in
int3
sub
jno
movsl
jb
cs
and
loop
std
addr16
loope
pop
mov
and
sarl
fidivs
sub
mov
nop
fisubl
sub
std
in
popa
fisttps
nopl
add
add
cmp
jl
push
xchg
addb
cmp
in
test
add
je
jg
push
sbb
loop
pop
cltd
fnsave
lret
jns
scas
push
aaa
inc
leave
rcrl
std
pop
dec
scas
dec
and
cmp
lods
cs
hlt
xor
cmpsl
mov
pop
or
xor
shll
out
jbe
test
iret
scas
push
jg
sbb
xlat
jecxz
sbbl
loop
jns
push
cmp
jae
cmp
mov
ret
in
call
movsl
mov
scas
add
outsl
pop
test
cmp
inc
mov
jns
push
andb
sub
cmp
into
fsubrs
pop
insb
loopne
fwait
mov
cmpsb
fdivrs
test
lret
outsb
jle
lea
sahf
arpl
dec
sbb
mov
les
jecxz
pushf
shll
or
testb
in
fisttpl
dec
es
sbbl
dec
sbbb
pop
fisttpll
scas
adc
push
mov
clc
in
shrb
popf
dec
mov
popa
cwtl
sub
sbbl
mov
sbb
mov
or
sbb
jo
sub
xor
addr16
les
decl
aad
mov
mov
in
je
push
add
shll
and
push
hlt
sub
push
inc
rclb
stos
jnp
cld
cwtl
mov
pop
push
aam
fcoms
mov
ss
and
adc
stos
das
lahf
xor
sub
jmp
mov
dec
inc
loop
das
mov
sbb
add
popa
dec
dec
addb
sbb
jo
pop
mov
jecxz
push
mov
mov
jns
adc
pusha
out
hlt
mov
xchg
pusha
mov
push
fcomip
popf
xchg
jl
test
dec
push
jmp
xlat
jne
pop
dec
jb
imul
push
and
sarb
icebp
xchg
mov
icebp
in
pop
js
je
or
aas
xlat
mov
and
daa
jb
imul
xlat
sub
jns
or
jle
jg
ffreep
cmp
rcrl
idivb
pop
fs
push
test
jae
jle
sbb
or
notb
sbb
inc
inc
pop
cmp
std
mov
arpl
jmp
xchg
mov
insb
xchg
movsl
imul
mov
mov
push
xchg
fs
pop
or
adc
mov
movsb
repz
adc
mov
push
stos
dec
inc
scas
pop
stos
cmc
pop
inc
jmp
push
lods
sbb
or
popa
imul
fdivl
xchg
jnp
mov
or
mov
into
sbb
or
mov
mov
test
pop
inc
test
repz
sub
jp
push
or
mov
popa
dec
mov
adc
add
test
dec
shrl
subb
inc
mov
pushl
mov
pop
cmp
inc
push
or
mov
push
int
ret
leave
leave
dec
call
jge
xchg
repnz
push
stos
cmp
inc
push
inc
fildl
cmp
xchg
mov
xchg
mov
daa
mov
jae
dec
add
sti
jno
iret
fildll
jmp
sub
shlb
inc
lds
add
cmp
aaa
mov
add
mov
or
in
sar
aad
hlt
adc
loopne
xchg
mov
or
int3
movsb
sbb
outsb
jno
sbb
xor
xor
jno
add
int
sub
loopne
lods
bound
and
xchg
adc
sub
into
loope
out
xor
mov
jmp
in
pop
lret
adc
pop
and
insb
push
movsb
xlat
fsubp
sub
in
lret
enter
inc
out
sbb
adc
sahf
xor
stos
aas
mov
ss
mov
fiaddl
push
mov
movsb
mov
push
pop
int3
ret
add
icebp
cmp
inc
dec
aad
or
andb
cmp
cltd
dec
loope
repz
jns
dec
sbb
test
xor
cmp
sbb
test
mov
and
in
es
inc
imul
cld
das
mov
pop
adc
decl
dec
pop
jae
adc
into
test
cmp
das
shlb
jl
mov
jbe
in
xor
xor
sub
cmp
ss
cwtl
dec
mov
loop
xchg
xor
jns
jg
xlat
add
sub
pop
sbb
sub
ret
jp
pop
and
jno
loopne
add
pop
cmp
push
pop
subb
push
cmp
lret
push
lock
and
add
xor
push
out
data16
sub
movsl
popf
sti
pop
je
push
pop
adc
loopne
inc
aad
loopne
inc
inc
mov
dec
jb
xchg
test
pop
mov
mov
add
cmova
fsubrs
dec
int
lcall
mov
xor
mov
sub
cltd
mov
cld
adc
gs
xchg
lret
or
push
dec
push
push
movsb
push
jmp
int3
jbe
stc
pushl
cli
imul
pop
mov
hlt
inc
push
cwtl
cmp
mov
stos
sbb
hlt
cltd
ja
xchg
scas
adc
ret
fsubrl
mov
in
sub
mov
sbb
or
or
imull
xor
mov
addr16
rol
scas
push
rcrl
xor
pop
outsl
lret
gs
mov
and
inc
pop
mov
xor
mov
add
add
mov
mov
idivl
mov
jp
xchg
std
and
mov
int
movsl
mov
add
push
jbe
test
push
jmp
sbb
sub
movsb
jne
pop
xor
mov
adcl
ror
and
and
xlat
pop
pop
fnstsw
inc
aas
pushf
push
clc
out
cwtl
and
xor
jmp
nop
adc
sbb
mov
insl
lock
inc
mov
or
int3
push
andl
jmp
push
jl
pop
ja
push
out
and
sbb
mov
daa
cmp
sub
sahf
or
fisubs
insb
test
mov
adc
je
outsb
sub
push
enter
pop
pop
into
es
and
pusha
mov
sbb
pop
lds
adc
push
scas
mov
sbb
cmp
adc
loop
outsl
add
repnz
cmp
ljmp
sbb
adc
xchg
inc
aas
lods
sub
or
push
inc
or
cmp
sbb
cmovbe
jnp
loopne
cmpsb
xchg
inc
daa
xchg
lods
into
jecxz
sbb
or
push
cli
ret
in
inc
enter
aaa
stc
imul
mov
je
inc
cmp
ret
and
and
movsl
loop
push
push
popf
fsubs
jecxz
pop
and
jns
mov
cmp
inc
xor
jmp
gs
test
or
test
rcrb
jg
pop
aaa
and
icebp
sbb
add
arpl
jns
jecxz
dec
mov
outsb
push
jge,pn
pop
push
fs
mov
shll
lret
popf
push
or
and
mov
inc
fistl
pop
adc
push
mov
jecxz
decb
cwtl
rcr
or
pop
mov
inc
pop
add
js
je
cmc
xchg
pop
sahf
add
lods
jg
inc
sub
adc
and
daa
scas
jge
mov
push
cld
jnp
pop
lret
sub
or
loopne
out
ret
dec
lret
jnp
bound
fcmovb
loope
mov
in
stos
pop
out
or
pushf
or
xchg
jge
lds
push
push
pusha
mov
inc
into
inc
into
xor
roll
add
mov
comiss
test
out
repz
push
ss
sbb
sub
mov
jno
repnz
mov
xor
jmp
xor
or
loope
adc
inc
imulb
movsb
inc
jb
lret
jecxz
clc
push
push
and
das
jb
arpl
mov
int
sbb
in
outsl
adc
cld
adc
nop
and
js
lcall
lock
xchg
or
pop
and
jno
ss
pop
mov
push
pop
adc
push
into
push
pop
test
cmp
sbb
shl
cld
lret
arpl
push
inc
pop
sbb
xchg
sti
push
add
xor
push
and
sub
sarl
pop
pusha
mov
mov
push
adc
test
push
mov
cmp
mov
not
adc
jb
orb
std
in
cmp
adc
lods
add
imul
mov
jae
ljmp
test
insb
xchg
xor
jle
xchg
nop
xchg
test
shlb
sub
popf
dec
lods
sub
scas
inc
sub
sub
lcall
xor
or
shll
loop
fldz
or
jmp
sub
pop
xchg
testb
push
outsl
les
test
fistpll
sbb
cmp
pushf
arpl
repz
xchg
cmp
sub
mov
daa
dec
mov
or
out
xor
fisubl
dec
ss
mov
rolb
stos
popf
das
jb
push
rorl
mov
fcomip
or
movsl
inc
rcrb
test
adc
jbe
or
cmp
ja
call
data16
test
je
roll
mov
add
cmp
pop
sub
add
sbb
xor
es
push
mov
jl
xor
je
or
dec
dec
sub
push
inc
decb
or
mov
aam
jno
xchg
pop
mov
daa
push
repnz
cmp
jns
cmpsl
and
pop
pop
pop
jns
xchg
jns
lret
or
mov
or
rolb
shrl
cmp
gs
loop
and
mov
push
xor
jo
inc
xchg
and
leave
test
out
loop
jb
inc
fsubrs
inc
mov
sbb
pop
daa
dec
fwait
out
mov
sbb
sub
orb
add
pop
lock
and
inc
cmpsb
cmp
cmpsl
push
rcr
arpl
scas
imul
mov
add
xor
mov
pop
cmp
push
popf
lcall
mov
out
test
testb
cmc
add
jl
sbb
mov
jp
shlb
outsb
pop
adc
push
aas
mov
dec
jmp
inc
jle
es
out
add
enter
pusha
jg
xor
int
cmp
push
jb
sbb
aad
loop
andb
out
stc
repnz
aad
pusha
sbb
daa
imul
or
or
daa
fs
fwait
xor
jmp
xchg
sub
pop
cwtl
test
fcmovne
movsb
cmp
sbb
insb
fcoms
mov
and
xchg
test
sbb
sbb
icebp
jecxz
pop
jge
setb
ds
ret
mov
push
stos
inc
ljmpw
shl
sub
dec
cmc
outsl
out
xchg
mov
enter
xor
inc
jne
xor
sub
sub
sbb
shll
jbe
movsb
sbb
pop
xchg
jge
ficompl
jno
pusha
adc
mov
mov
pusha
push
stc
outsl
mov
mov
xchg
sub
sahf
mov
repnz
inc
insb
lcall
pushf
aas
adc
fwait
xchg
push
in
js
test
lods
mov
fildl
hlt
inc
jmp
hlt
and
cmp
sbb
ljmp
daa
fwait
or
jbe
add
in
mov
dec
push
xchg
test
xor
cmp
cs
xor
cmpl
sbb
mov
cmp
jno
xor
mov
mov
nop
adc
repz
mov
sbb
mov
cmp
lret
mov
cld
jb
lahf
mov
idivb
mov
sub
pushf
jmp
jns
imul
in
in
aaa
pop
aad
mov
loope
es
movsb
jbe
fimuls
js
add
xchg
sahf
mov
push
inc
out
or
push
jbe
pop
cltd
sbb
daa
ja
fnstsw
in
sbbl
imulb
orl
jmp
mov
adcl
adc
inc
or
mov
push
adc
into
nop
push
xchg
mov
and
in
sub
mov
arpl
pop
arpl
shrl
sbb
divb
sbb
insb
stos
dec
addb
push
xchg
jecxz
mov
rorb
leave
mov
outsb
repz
ljmp
pop
shl
mov
stos
xchg
data16
mov
mov
or
push
pop
shr
loope
aaa
or
jbe
push
dec
fbstp
mov
loopne
ljmp
add
add
mov
insl
dec
push
iret
das
inc
insl
std
ss
outsb
cmp
pop
imul
jno
sub
jge
mov
enter
rorl
fisttpl
aam
js
iret
mov
push
mov
mov
ss
call
iret
xor
or
and
inc
clc
aas
gs
loopne
cmp
lcall
push
ret
mov
sub
add
pop
or
lahf
cmp
and
ret
dec
mov
xorb
out
and
mov
es
or
add
and
out
pop
loope
roll
int
push
sbb
repnz
fisttps
and
cmp
xchg
in
pop
in
nop
mov
cli
lock
sbb
subl
push
xchg
ss
or
xchg
adc
jne
mov
pop
hlt
int
add
outsl
je
icebp
xor
jae
cmpsb
mov
cmp
sbb
ja
icebp
out
pop
mov
mov
mov
jb
inc
scas
aaa
mov
push
clc
or
aaa
gs
lret
jbe
mov
orl
pop
xor
push
fwait
repz
pop
je
dec
push
movsb
jnp
sub
arpl
mov
add
testl
xchg
orl
push
inc
cmp
jns
lret
dec
jmp
push
pmaddwd
pop
xor
dec
mov
movsl
fiadds
xchg
stos
pop
or
rcll
mov
inc
lret
dec
xchg
jp
xchg
ds
or
int3
cmp
js
mov
fstpl
ficoms
push
push
aam
fbstp
inc
mov
cmp
gs
mov
lahf
pop
jmp
inc
push
jle
in
and
pop
or
mov
in
insl
jge
leave
or
icebp
imul
rolb
test
nop
mov
lods
ret
mov
gs
mull
push
leave
sub
les
cld
sub
lods
inc
inc
mov
jne
xor
scas
daa
test
lea
mov
lods
sti
subb
insl
aaa
in
xor
lock
cmp
faddl
inc
es
les
fwait
cmpl
movsl
or
scas
cmp
adc
pop
adc
insl
insb
jno
fstl
shlb
push
fisubs
shrl
mov
movsl
jb
cmp
add
arpl
gs
repz
sar
pop
inc
xor
adc
xchg
bound
pop
enter
inc
insl
mov
push
mov
fmuls
stos
shll
daa
iret
sti
jmp
leave
pop
negl
nop
jg
pop
push
jns
push
inc
pop
scas
icebp
outsb
jp
inc
js
or
or
cwtl
pop
lcall
loope
xor
mov
push
xor
mov
sbb
insl
scas
stos
pop
lea
inc
popa
mov
lock
orl
pop
xchg
loop
mov
push
push
pop
mov
insb
pop
pop
into
ljmp
jmp
push
push
rcl
dec
rorl
mov
sbb
mov
mov
bound
push
pop
pusha
pop
mov
dec
xor
test
or
jg
in
pop
adc
or
rorl
cmpsb
sbb
movb
and
daa
add
popa
jnp
pop
inc
out
aaa
call
gs
sub
lock
inc
xchg
pop
cmpsb
mov
jbe
or
gs
adc
nop
call
cmp
cmp
mov
stos
enter
add
and
leave
push
insl
lret
push
movsb
push
add
or
mov
in
imul
adc
scas
lods
jmp
or
ja
push
mov
mov
and
arpl
push
mov
and
stos
jns
fldcw
insb
lock
in
dec
xchg
in
jnp
or
pop
out
cwtl
imulb
mov
push
subb
mov
sahf
adc
iret
pop
stc
xchg
sub
dec
adc
xor
mov
add
nop
into
mov
pop
je
add
fnstcw
jb
xor
dec
imul
mov
fstl
test
add
lret
cld
xor
push
cmpsb
add
fbstp
jl
js
sub
aas
mov
mov
imul
test
aam
push
jle
inc
pop
sub
lods
mov
jno
adc
add
loope
lcall
mov
outsl
cmc
icebp
inc
call
lds
call
add
movb
mull
pop
inc
inc
scas
xorb
repz
cwtl
push
dec
inc
fisubl
popa
mov
dec
bound
add
inc
loop
push
pop
add
sub
xchg
cmpsl
push
and
fwait
loopne
mov
insb
xlat
iret
push
aad
push
std
stos
dec
lds
fsubrl
push
ret
mov
and
mov
aad
cmp
mov
sarl
loopne
ds
stc
and
jo
aaa
mov
js
sub
and
sahf
jbe
and
mov
sbb
cmp
stos
jb
fdivs
std
cmpsb
pop
pop
cmc
xor
fstl
fsubrl
outsl
inc
xchg
and
mov
cmp
xorl
xchg
cmp
push
jp
int3
xchg
mov
adc
mov
sub
shll
leave
out
mov
cwtl
cmp
xor
lds
arpl
pop
pop
or
push
push
xchg
ss
xchg
mov
sub
or
jno
jle
adc
and
push
sbb
jp
jnp
loope
movsl
push
add
loop
addr16
scas
push
lods
imul
and
int3
je
lock
jmp
hlt
inc
mov
loopne
adc
shrb
adc
repz
je
xchg
or
jno
mov
loope
xchg
xchg
into
cmp
je
pop
imul
sub
pop
and
sahf
scas
arpl
cmp
jmp
xorb
cmpsl
and
repz
daa
add
stos
xlat
and
insl
mov
mov
lds
in
imul
cmc
cmpsb
mov
push
je
fisubrs
test
and
mov
sub
adc
fnstenv
dec
and
rorb
cmp
inc
jle
or
divl
test
cmp
fmuls
fstpl
sbb
jle
repz
ds
cmc
mov
dec
sbb
scas
add
inc
fbstp
and
add
xor
and
aam
in
xchg
mov
xorl
inc
je
and
add
xor
and
aam
in
xchg
mov
xorl
inc
je
and
add
xor
repz
shl
mov
mov
movsb
arpl
inc
je
pusha
and
test
mov
fninit
sub
outsb
imul
cmp
dec
insb
pop
push
or
pop
cs
cmp
insl
sub
pop
lret
dec
sahf
xchg
lods
pushf
sahf
mov
out
in
cld
sbb
sbb
sub
cmp
dec
pop
pop
outsb
insb
jle
test
mov
out
in
cld
pop
stos
pop
fidivl
mov
dec
push
jl
adc
imul
mov
loope
xchg
mov
jle
push
pop
bound
pop
inc
inc
mov
mov
addr16
push
push
mov
adc
mov
setae
cs
cs
mov
xlat
sahf
xchg
mov
inc
jae
pusha
push
push
mov
jb
mov
andl
jne
int3
add
data16
mov
inc
inc
xor
fwait
and
cmp
or
sbb
sub
insb
xchg
jl
push
loop
dec
sub
loope
ja
dec
ret
push
jg
pop
jle
outsb
addb
mov
leave
arpl
push
jecxz
pop
mov
repz
scas
mov
int3
push
jp
push
movsb
into
cltd
push
add
xchg
into
sbbb
cs
sub
dec
inc
pop
outsb
insb
addr16
xchg
mov
adc
xor
hlt
out
jge
jnp
dec
inc
pop
push
sub
xor
insb
sbb
cmp
iret
sahf
in
fmull
rcr
mov
cwtl
fwait
xchg
push
dec
push
pop
dec
pop
cmp
cmp
xor
add
sahf
jmp
stos
subl
addr16
cld
dec
inc
ds
add
outsb
insb
jle
mov
mov
out
in
cld
push
or
sbb
sub
cmp
dec
pop
pop
outsb
insb
jle
mov
mov
out
in
cld
push
or
dec
ja
push
shlb
jb
rol
es
mov
cmp
outsb
jcxz
push
fs
mov
jbe
cwtl
adc
fnsave
nop
out
out
int3
sub
in
dec
mov
sub
lcall
pop
jne
lret
add
pusha
in
mov
out
stos
ret
sbb
incl
cmp
test
dec
lods
fstps
stos
xor
stos
jne
dec
mov
dec
mov
mov
rol
fcompl
rolb
xchg
xchg
imul
cmp
loopne
adc
aaa
js
loop
into
adc
and
jle,pt
mov
lds
rclb
call
pop
pushaw
out
or
movsb
jo
mov
lret
push
insb
jmp
out
je
dec
adc
mov
icebp
loopne
pop
cli
xor
int
loope
pop
ffree
test
sbb
or
xor
repnz
out
repnz
bound
cmc
pop
nop
aaa
inc
cmp
mov
out
push
scas
xor
mov
lock
and
push
add
xor
mov
mov
int
xchg
je
addl
test
ret
je
lea
mov
cmp
call
jg
repnz
cmp
sbb
inc
ret
xor
jns
cwtl
sub
lea
gs
xchg
stos
enter
push
jb
js
cltd
lcall
shr
rcrb
sub
insl
popf
fiaddl
xor
adc
jecxz
outsb
sbb
cmpsb
add
int
in
pop
and
mov
push
out
andb
push
xor
out
mov
dec
push
fdiv
mov
stos
push
inc
mov
in
pop
scas
add
movsl
cmpsl
dec
pop
mov
pop
cmp
or
call
sub
xor
cld
or
dec
push
jecxz
jnp
imul
mov
xor
pop
jb
jmp
xchg
xchg
and
fdivrs
lret
fildl
call
sbb
xor
ss
fnstsw
arpl
dec
mov
jb
xor
xchg
jp
int3
mov
rcrb
jmp
out
test
adc
push
leave
loopne
cmpsl
push
inc
shll
enter
mov
inc
or
sbb
lahf
dec
mov
dec
adc
jecxz
lret
test
mov
adc
out
imulb
mov
test
or
aad
push
or
sbb
mov
add
mov
frstor
pushl
pop
jge
clc
xor
ja
adc
sahf
imul
jg
jnp
js
test
xchg
stos
and
cmp
jnp
ret
dec
add
jle
ret
loopne
cltd
pop
loope
dec
dec
jb
loopne
rcrl
sbb
dec
pushf
in
out
outsl
fcom
pop
das
fcomp
inc
ljmp
sub
rcrl
push
jmp
mov
or
lods
shlb
jg
push
popl
pop
std
adc
sub
adc
fdivl
add
mov
jo
push
scas
push
neg
daa
mov
jno
inc
mov
ud0
pop
jns
mov
and
sti
rcll
jle
outsl
icebp
dec
dec
add
cmc
aam
xor
dec
outsl
outsb
push
cmp
push
ds
push
xchg
adc
fs
pop
pop
inc
or
xchg
push
sbb
jns
mov
lods
jb
fmull
inc
mov
add
pop
mov
stc
call
scas
push
leave
mov
mov
jno
and
push
cli
mov
xchg
sbb
insl
adc
mov
iret
mov
push
dec
push
dec
rolb
sti
mov
in
outsb
out
andl
fimuls
aaa
testl
inc
outsb
testl
test
stos
push
dec
or
aas
test
stc
in
xchg
pop
subps
xlat
jl
xor
pop
aas
jg
out
stc
imulb
pushf
pusha
or
in
lret
xor
in
xorb
mov
pop
hlt
sbb
inc
sbbl
dec
sbb
out
dec
mov
and
xor
or
and
dec
out
lret
xchg
mov
dec
bswap
lahf
adc
aad
dec
push
xor
mov
inc
pop
dec
jl
xor
fidivl
xchg
test
push
mov
push
lahf
fstps
inc
pop
and
dec
testl
into
dec
dec
sbb
ret
hlt
pop
gs
jne
cwtl
div
outsl
or
adc
inc
jo
lret
jno
jno
repz
push
mov
add
inc
inc
pop
mov
imul
andb
gs
in
test
and
lcall
loopne
jae
cld
lods
inc
xchg
outsl
stos
test
sub
std
das
imul
ja
out
jae
inc
sub
fdivl
jae
mov
jo
mov
enter
pushf
test
shlb
cmpsl
nop
sub
jns
add
jle
hlt
and
or
pop
mov
enter
pop
out
push
sub
push
mov
insb
movsb
push
aad
sub
xchg
mov
insb
xor
and
aam
call
sbb
ljmp
or
out
loope
and
sub
fisttpll
pop
push
inc
jae
nop
adc
loopne
dec
xor
adc
mov
cld
jle
adc
jecxz
movsl
clc
pop
and
int
add
sbb
adc
rcr
adcl
cwtl
enter
xor
pusha
xchg
ss
fsubrs
popf
cmp
scas
ds
addb
arpl
adcb
pop
sbb
ss
xchg
icebp
add
popf
mov
stos
ret
sub
ljmp
loopne
daa
cld
movsb
dec
inc
es
aad
and
sub
pop
xchg
sub
test
lret
clc
sub
ljmp
pop
sub
mov
insl
push
cmpsb
xchg
cmc
push
dec
mov
mov
js
aam
lea
adc
pop
jnp
lds
dec
das
adc
jns
dec
leave
xchg
xchg
mov
lret
pop
fs
sub
mov
mov
imul
sbb
fnstcw
nop
nop
dec
sub
mov
add
mov
sbb
es
test
es
mov
mov
lret
iret
or
imul
nop
fimull
jmp
mov
push
sbb
sub
clc
insb
jmp
in
pop
mov
push
lret
ljmp
in
cmp
fdivrs
arpl
push
mov
pusha
inc
sub
fldl
pop
lds
mov
insl
cld
insl
mov
mov
sbb
add
repz
bnd
push
lahf
mov
imul
push
int3
shll
test
hlt
push
mov
dec
dec
mov
add
mov
adcb
arpl
pop
idivl
loop
jns
push
rcr
mov
and
sbb
jecxz
fwait
adc
push
repz
out
push
adc
lret
dec
and
cmp
dec
jno,pn
jle
jbe
jl
xchg
xchg
outsl
adc
mov
aas
mov
jmp
pop
mov
lods
icebp
jb
push
arpl
call
cmp
lret
testl
adc
adc
addr16
ss
dec
fwait
push
pop
mov
mov
mov
xor
mov
mov
sbb
popa
jmp
add
mov
cli
addr16
andl
sub
test
dec
sbb
scas
pop
pop
fwait
popa
and
jmp
sub
xor
subb
lock
and
sarb
dec
in
stc
int3
rcrl
xchg
sbb
sbb
andb
repnz
ss
lods
jno
or
js
aad
sahf
add
nop
add
adc
sar
adc
scas
lds
dec
andl
add
inc
dec
and
repnz
fwait
add
inc
gs
lds
mov
icebp
jl
xor
jecxz
dec
mov
shrl
dec
sbb
or
lcall
fmuls
push
jae
inc
sbb
adc
adc
sbb
sbb
push
push
and
daa
jbe
push
gs
and
fcmovnu
sub
aas
nop
ljmp
das
jecxz
mov
into
mov
dec
outsl
mov
dec
sbb
aas
test
ljmp
popf
sbb
sbb
out
sbb
jle
adc
mov
mov
push
ss
cmp
jbe
add
dec
inc
and
sarb
mov
pop
clc
daa
imul
pop
or
mov
js
pop
scas
enter
xchg
pop
cltd
adc
pop
mov
in
pop
sub
mov
and
cmp
jle
mov
fstpl
mov
aam
inc
imul
stos
mov
mov
popa
xor
out
mov
push
cmp
ja
dec
int
in
and
add
push
gs
or
xchg
cmpsl
fcoms
in
cmp
pop
stos
mov
mov
cmpsl
stos
cmp
or
mov
or
std
test
lds
cld
movl
in
sar
pushf
daa
stc
pop
or
in
cltd
ret
lea
fidivrl
sub
fsubl
subl
aas
dec
lahf
mov
sbb
dec
cli
dec
xlat
push
in
adc
stos
dec
dec
in
or
aaa
sti
mov
cmp
nop
sub
imul
int
add
cwtl
iret
push
mov
dec
loop
js
and
jae
fiaddl
adc
dec
int
in
cmp
cs
dec
aaa
bound
out
aas
out
shlb
fwait
adc
sbb
ljmp
pop
cs
mov
sub
sti
js
mov
std
lea
movsl
scas
pop
in
nop
pop
push
jae
add
fcmovnb
loope
xlat
adc
mov
inc
dec
pop
xchg
lret
shlb
scas
sbb
in
jnp
push
mov
stos
pushf
leave
jg
mov
adc
fistpl
dec
pushl
test
jg
jg
xchg
add
lock
stos
sub
outsl
fidivs
mov
add
rclb
and
scas
cmp
or
testb
imul
push
inc
out
outsl
popa
jle
add
adc
and
jmp
xchg
pop
out
enter
push
mov
push
xchg
jmp
jne
or
xorl
cmp
dec
fmul
sbb
sub
xor
mov
push
fdivrs
mov
popf
add
cmp
sub
ret
pushf
mov
push
js
cmp
in
cltd
stos
inc
mov
je
xchg
jb
add
daa
push
add
scas
sysret
push
cltd
and
popf
push
or
sub
repz
xor
loope
lds
sub
inc
jle
xchg
out
mov
and
mov
sbb
cmp
out
sub
movsl
and
bound
pop
push
popa
cmpb
test
in
dec
mov
cmp
int
sahf
push
dec
out
cld
ljmp
sbb
aam
sahf
xchg
ds
and
push
mov
push
nop
and
pushf
xor
js
jb
inc
mov
roll
test
dec
mov
inc
push
into
aas
and
fidivs
and
fnsave
insl
xchg
pop
sti
out
fcmovnb
std
mov
imul
movsb
xchg
mov
jecxz
shrb
fldcw
dec
iret
xchg
fistpll
ret
add
pop
stc
fcmovbe
data16
and
mov
ret
xlat
xor
int
mov
add
cld
fs
stos
pushf
icebp
jbe
mov
dec
jl
mov
or
xlat
ficoms
icebp
xor
loop
dec
jbe
icebp
jne
pop
sbb
out
repz
inc
mov
mov
scas
mov
repz
int
sub
mov
nop
jo
addr16
inc
sub
loop
popa
xchg
push
inc
cwtl
cmpsl
in
inc
push
push
popf
add
subl
lods
dec
push
ss
lret
loop
push
ja
pop
pop
sub
and
int3
stos
imul
pop
mov
xchg
in
das
mov
data16
jle
data16
mov
in
xchg
sub
xchg
or
out
ss
mov
sub
and
cmpsb
cmpsl
or
add
fmuls
mov
pop
pop
aad
dec
repz
popf
les
outsb
and
mov
repnz
repnz
fildl
push
jmp
jl
adc
filds
out
pop
mov
es
popf
aaa
mov
xchg
push
data16
loop
push
fs
sti
xor
fisttps
xor
bound
rcl
fists
dec
xor
cmc
or
fadd
inc
or
mov
mov
pop
das
lods
add
push
add
push
or
mov
es
imul
lcall
cmp
jne
cmc
jle
jae
jle
cmpsb
push
push
hlt
adc
mov
cld
shrl
leave
push
or
inc
xor
call
mov
dec
mov
sub
je
and
lods
lahf
add
and
scas
xor
xor
cmpsb
movsl
xchg
push
dec
sub
mov
inc
push
mov
jecxz
addl
movsl
mov
in
int
aas
xchg
movsl
mov
xor
es
das
mov
sarl
lret
arpl
inc
cs
movsb
jg
jae
push
scas
push
pop
mov
xor
xchg
hlt
out
jnp
fists
aas
push
test
data16
sub
jnp
cmpsl
icebp
pop
fists
cmpsl
or
xor
cmp
sub
xchg
xchg
push
jno
or
inc
xchg
inc
movsl
pop
and
ret
pop
sub
sub
fbstp
add
lret
inc
addb
xchg
mov
push
pushf
jecxz
push
icebp
add
cmp
cmp
lahf
mov
cwtl
popf
roll
mov
inc
add
mov
cmp
sarb
fdivrl
cltd
pop
dec
fsub
pop
aam
or
mov
or
cltd
and
mov
fmul
cmp
mov
shlb
jo
inc
sub
pop
or
jp
ss
sbb
insl
push
leave
sub
es
outsl
loop
mov
xchg
outsl
arpl
pop
sti
or
fwait
pop
fmuls
addr16
sub
mov
aaa
pop
loope
es
mov
sub
mov
sub
mov
cs
xor
das
rorl
inc
rolb
sti
ret
xchg
mov
cmp
popa
xchg
lcall
xor
xor
repnz
and
pusha
popa
jge
xchg
inc
inc
sub
leave
icebp
lods
pop
mov
sub
lahf
sub
leave
xor
es
dec
adc
in
dec
pop
sbb
ljmp
mov
test
pop
and
cmpsb
dec
sub
subl
jmp
xchg
jne
push
mov
into
divps
lret
xchg
ffreep
pop
test
mov
orl
fnstcw
push
sub
sbb
push
mov
pop
lods
xor
or
adc
pop
cmp
push
add
push
mul
push
ljmp
sub
aam
pop
lock
xchg
fcompl
fstl
jg
and
repz
ficompl
les
cmp
adc
sub
divb
pop
ljmp
mov
aas
pop
lods
lret
rorb
sete
jae
mov
and
cmp
imul
enter
out
mov
mov
or
outsb
fcmovne
mov
out
test
xchg
ljmp
scas
das
sahf
stos
xchg
cmp
inc
push
cmp
add
cmp
jno
clc
sbbb
pop
pop
dec
roll
push
jge
sbb
pop
lea
add
ret
fcoms
stc
insl
stos
fsubrl
shll
dec
dec
inc
mov
jno
sbb
in
inc
pop
mov
in
jne
data16
icebp
test
push
ss
pop
jbe
add
mov
mov
pop
imul
jge
pop
fstpl
add
adc
xchg
inc
xchg
xchg
mov
lods
dec
mov
loope
cmpsl
sbb
cmp
cmpsb
insb
in
out
in
adc
inc
add
faddl
cmp
xor
pop
cmp
out
push
push
lahf
ret
and
jl
jp
arpl
cmc
cmp
out
fdivs
sub
push
mov
pop
mov
hlt
mov
das
js
sbb
call
add
jle
test
inc
lret
lret
jmp
mov
push
mov
mov
pop
aad
sub
pop
sbb
cmp
test
out
in
lds
cmpsb
jl
inc
mov
pop
jo
fcos
into
imul
and
xchg
out
and
push
arpl
lcall
lea
adc
xchg
jne
xor
comiss
add
icebp
mov
loop
sub
xlat
push
add
cmc
cmp
mov
push
mov
mov
pusha
in
ret
jp
cmpsl
lea
rolb
jmp
adc
jecxz
mov
inc
push
pop
fisubrs
movsl
mov
call
scas
xchg
pushf
cld
ffree
fcom
fcompl
inc
mov
mov
cwtl
or
repz
mov
test
mov
cmp
int
pop
mov
in
add
pop
pusha
out
fcomip
fiadds
jle
lahf
shll
cwtl
out
inc
fnsave
sti
aas
push
cmp
pusha
out
pop
pop
std
xchg
push
sbb
cwtl
adc
ljmp
cmp
jecxz
popa
aas
pop
addb
dec
jge
inc
rcrl
dec
in
into
mov
fsubl
or
xchg
cmp
mov
je
andb
cs
js
mov
mov
outsl
sbb
idivb
test
xor
sbb
outsl
xchg
ret
dec
addr16
mov
or
adc
pop
mov
jo
clc
icebp
push
cmp
jne
sahf
testl
or
fidivrs
in
mov
pop
push
jmp
add
lret
pop
add
pushf
stos
xlat
xchg
xchg
mov
mov
sbb
cmp
push
mov
mov
dec
cmp
xchg
adc
iret
push
xor
sub
pop
or
decb
xlat
adc
jnp
stc
lcall
dec
or
sub
lcall
lods
fimull
mov
inc
data16
mov
jae
jbe
jbe
outsb
aam
lock
lret
leave
shll
dec
pop
cmp
xor
xor
test
mov
jnp
xor
clc
sub
jge
push
mov
jno
cs
pop
jns
pop
adc
pop
fwait
fs
pop
mov
fs
cmp
daa
les
cmp
xchg
sub
cmp
js
test
mov
iret
push
inc
fwait
inc
lea
push
sbb
sbb
jne
xlat
adc
push
popl
add
xchg
sub
mov
enter
sub
dec
pop
push
dec
jle
sbb
fistps
xor
sbb
sbb
or
pop
cmp
vpaddsb
push
add
cwtl
lods
mov
cmp
adc
popf
js
imul
add
jbe
mov
adc
cltd
sti
push
cmp
fsubrl
movsl
add
pop
fadds
jecxz
push
ja
shll
movsb
imul
inc
sub
cs
xor
fidivrl
lods
add
enter
sbb
int
pop
inc
int
cli
test
mov
out
push
inc
jb
xlat
xor
jecxz
das
cwtl
or
inc
cld
jmp
pusha
repnz
jo
mov
out
inc
movsb
and
repz
adc
or
sub
mov
jne
push
popa
cmpsl
insb
mov
push
cmc
rcll
xor
pop
xchg
pushf
ret
jo
xor
jmp
pop
push
pop
es
jmp
pushf
lds
cs
xor
incl
add
push
popf
lahf
inc
ror
jno
or
cmp
adc
hlt
cld
imul
xchg
scas
rolb
push
mov
mov
sbb
xchg
pop
xchg
dec
shr
xchg
cmpsl
xchg
les
jns
andl
sbbl
or
imul
cmp
xchg
out
ds
and
pop
das
dec
imul
dec
inc
cwtl
pop
mov
arpl
rol
cmp
adc
mov
push
aad
addr16
and
xor
inc
jb
adc
xchg
dec
arpl
mov
pop
pop
je
jae
in
addr16
cmp
push
xor
fucomip
xor
insl
mov
pop
rcr
pushf
add
enter
cmpsb
sahf
sub
fstps
cli
je
test
lds
xor
pusha
fdivs
fnstcw
xlat
mov
xchg
sbb
sub
sub
jg
push
and
dec
dec
fldl
fcoms
xchg
xchg
lock
jns
or
and
loope
gs
push
pop
sbb
push
xchg
pushf
mov
and
push
jg
mov
ficomps
icebp
js
xor
dec
sub
je
xchg
cmpsl
scas
jns
popf
sbb
insb
inc
dec
dec
mov
cmp
insl
pop
jnp
and
loopne
cmp
dec
rclb
scas
and
lcall
ds
dec
pop
pop
outsb
insb
jle
mov
mov
out
in
cld
push
or
sbb
sub
cmp
dec
pop
pop
outsb
insb
jle
mov
mov
out
in
cld
push
or
adc
xor
cmp
pop
aaa
outsb
push
sahf
cwtl
stos
lods
mov
fsubr
in
sbb
call
jl,pt
dec
pop
pop
out
in
mov
add
mov
movsb
adc
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmovge
loopne
clc
add
cmc
fisubl
or
pop
add
add
add
pop
push
insb
add
add
add
add
add
add
in
dec
add
add
add
add
and
dec
add
data16
add
mov
mov
add
adc
xor
lret
add
add
add
mov
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
xor
fildl
fildl
mov
sahf
add
add
add
add
add
pop
add
add
data16
mov
inc
add
inc
add
lods
add
add
add
add
add
mov
enter
lods
add
add
add
adc
fwait
add
add
add
add
add
sbb
in
js
add
add
add
add
add
add
add
sub
js
lret
add
inc
add
add
add
in
js
insb
add
add
lods
add
add
int3
add
add
add
inc
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
movsl
add
mov
add
add
lahf
add
add
add
insl
add
mov
mov
add
fildl
fildl
push
add
stos
add
add
add
add
add
add
dec
add
data16
add
add
add
pop
add
push
add
add
js
fildl
cmp
xchg
add
add
mov
add
add
add
icebp
add
add
xchg
add
add
add
add
lods
add
inc
add
add
add
add
add
flds
push
add
add
add
or
lods
add
jbe
pushf
add
add
push
add
pop
add
add
addl
and
xchg
add
add
lods
add
add
add
add
mov
add
add
sbb
add
add
out
add
lcall
add
add
add
add
add
or
in
and
dec
add
add
add
insb
add
add
push
add
add
add
add
mov
add
arpl
add
xor
in
mov
add
add
add
add
lods
add
mov
add
add
lods
add
mov
add
add
add
or
dec
add
add
add
or
sbb
xor
imul
add
add
add
add
add
add
or
ja
or
ret
add
add
inc
add
in
fildl
fildl
jns
inc
add
xor
mov
add
sbb
add
add
add
cltd
add
add
add
add
add
add
add
fwait
add
add
mov
mov
sbb
adc
es
loopne
sbb
int
lods
and
shrl
sbb
stc
clc
pop
orl
xor
fbstp
pop
push
cs
dec
and
fucom
or
sbb
mov
scas
sbb
cli
jno
scas
jl
fs
pcmpgtb
lock
push
mov
loop
lock
jl
or
loop
aas
adc
hlt
mov
popa
loopne
jp
adc
cwtl
fcoml
push
jo
test
xchg
fidivrl
orl
lret
bound
jg
mov
and
test
mov
and
inc
push
in
sub
xor
xor
xchg
pop
inc
pusha
mov
insb
or
test
pop
scas
xor
push
repnz
sbb
and
jne
sahf
fstpt
bound
mov
psllw
fs
sub
mov
pushf
mov
nop
add
xchg
repz
jae
pop
jmp
cld
sbb
or
mov
fdivrs
jl
int3
push
jnp
add
ret
mov
adc
rcr
mov
xchg
mov
pop
dec
xchg
cmpsl
cmp
adc
jbe
dec
pop
outsl
dec
in
pop
xlat
cmp
int
dec
popa
test
adc
inc
adc
mov
fs
inc
aam
orb
add
rclb
leave
pusha
cli
insl
insb
cld
dec
mov
loopne
sub
js
pushf
loopne
adc
and
scas
cmp
adc
aam
fstl
mov
add
inc
pop
mov
inc
popa
adc
mov
mov
into
mov
push
loop
and
sbb
lock
cld
bound
mov
stc
popa
shll
cmp
imul
mov
inc
inc
sbb
add
nop
xchg
int
or
in
decl
ljmp
sbb
add
mov
jmp
test
cmp
pop
ror
mov
add
sbb
dec
xchg
inc
outsl
push
jnp
push
mov
xchg
setne
cmpsl
or
sbb
stos
cmp
lret
aas
add
mov
inc
and
sbb
jne
add
xchg
add
sbb
dec
mov
xor
pop
cmc
jp
cmpsb
xchg
addr16
fcmovnb
pop
aam
sub
divb
jmp
xor
sub
fsubr
pop
push
push
scas
push
idivb
pop
xchg
stos
pop
jne
mov
cwtl
xor
scas
add
sti
and
and
loop
adc
mov
std
xlat
mov
mov
scas
std
fiadds
inc
pop
dec
fdivrl
fidivs
dec
jp
nop
insl
pop
stos
cltd
shr
movsb
fwait
int3
loopne
push
pusha
data16
xlat
out
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
