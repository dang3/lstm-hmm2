xchg
leave
add
add
add
add
mov
push
lods
cwtl
adcl
xor
shlb
xor
stos
out
mov
or
and
out
call
jg
dec
cmpsb
and
ja
loop
mov
movsl
or
push
mov
addr16
outsl
mov
pusha
outsb
mov
popf
in
rcrb
jns
adc
sub
or
xor
sbb
xor
fnstcw
sbb
pusha
adc
jl
sbb
cwtl
dec
roll
inc
push
push
jbe
aas
push
sub
push
mov
mov
je
mov
pop
stc
cli
adc
jae
dec
dec
cwtl
mov
dec
jle
xchg
insb
int3
and
jmp
ja
in
aam
and
or
xor
rcll
and
fnsave
adc
sbb
lcall
pop
movsb
push
ljmp
and
cli
push
mov
mov
sahf
xchg
imul
mov
push
aas
add
int
insb
std
movsl
scas
add
dec
je
das
mov
push
in
xchg
cwtl
mov
lret
imul
mov
inc
mov
inc
dec
sar
xchg
jbe
cld
mov
pop
jnp
fisubl
repnz
arpl
pop
add
mov
dec
xchg
dec
cmp
or
cmpsb
dec
xor
fsubr
add
cld
shrl
jns
cmp
cli
mov
sub
jb
sub
fsubs
mov
jge
shl
inc
int
mov
cmpsb
in
int
inc
aas
adc
stos
fucom
shlb
insb
jmp
dec
push
cmp
ret
jmp
adc
fsubl
lcall
sbb
into
sub
shll
je
aas
pop
xor
movsb
sbb
pop
adcb
cmpb
rcll
cmp
xlat
or
sub
sub
ja
cmp
outsl
aam
jnp
sbb
xchg
xchg
pop
in
aas
push
shll
fidivrs
dec
or
jo
mov
addb
daa
sub
sbb
mov
sub
cmp
sub
xor
cs
add
xor
rorb
pop
cmp
and
imul
adc
adc
fs
jecxz
adc
mov
cs
push
lcall
fdivr
or
push
or
inc
cmp
pop
test
fs
adc
daa
cltd
push
adc
jg
out
mov
mov
adc
sub
push
loope
xchg
mov
ds
sub
imul
inc
jg
lods
in
cmp
cmp
xor
idivb
mov
sub
and
push
mov
fisubrl
and
jns
dec
or
mov
cli
stc
mov
mov
dec
push
sahf
adc
pusha
aad
inc
pop
jne
cmp
rclb
push
dec
and
cmc
pusha
mov
imul
add
push
cmp
xchg
push
pop
inc
and
push
dec
jg
popf
cmp
lock
enter
xor
idivl
jns
or
lods
into
xchg
mov
and
stc
cmp
lods
icebp
add
test
pop
daa
add
test
repnz
imul
push
jno
mov
popa
sbb
test
into
rorb
int3
hlt
mov
stos
js
test
int3
dec
and
sub
cwtl
cld
jl
jmp
in
mov
dec
pop
repnz
outsb
cmpsl
inc
jnp
repnz
cmp
fistps
sub
xor
xor
dec
mov
nop
cmc
repz
and
mov
loop
or
sbb
jns
sbb
decb
mov
mov
dec
loopne
and
jnp
mov
inc
sahf
iret
adc
jl
leave
lret
mov
sub
mov
test
mov
mov
mov
outsb
outsb
dec
call
imul
idivl
cld
fsts
bound
shlb
lcall
fidivrl
adc
mov
shll
into
data16
lods
insl
sahf
jg
test
xchg
push
xor
ret
and
mov
and
jle
outsb
sti
aam
lcall
sub
sbb
adc
dec
mov
std
imul
dec
sub
mov
mov
and
cmp
mov
shrl
adc
subb
sbb
aad
jne
cmp
gs
xor
int3
add
or
sbb
data16
push
pop
sbb
jle
nop
push
ss
icebp
bound
sub
mov
xor
or
sbb
mov
lods
fstl
and
and
mov
or
ret
iret
jns
lds
enter
mov
dec
gs
arpl
sub
jnp
clc
jle
addr16
addl
cmp
add
and
add
ret
sti
jns
xor
sub
ja
lahf
testl
cmp
mov
push
and
jns
dec
pop
int3
aas
decl
bound
dec
and
push
aaa
jb
add
outsb
lock
add
jnp
fwait
in
je,pn
adc
xorb
rclb
pop
aad
and
push
aam
iret
daa
jnp
or
mov
and
fnstsw
pop
sbb
jp
hlt
pop
lret
jnp
std
lods
push
or
adc
add
push
lret
mov
adc
sub
push
push
ds
cmp
out
sub
pop
cmpsb
lret
enter
or
daa
mov
sub
das
ja
xchg
pop
push
mov
pop
mov
pop
pushf
fucom
bound
out
or
jl
adc
xchg
jge
sub
in
inc
jne
jle
stos
mov
or
push
cs
inc
cltd
sbb
hlt
psadbw
push
push
sub
add
jl
inc
stos
dec
mov
add
pop
mov
jecxz
stc
sbb
call
rcrb
push
sub
mov
hlt
ror
mov
sub
sub
inc
push
lea
dec
repz
xor
xor
sub
mov
fdivrp
push
sbb
ljmp
pushl
les
aaa
inc
iret
rclb
mov
pop
cld
mov
pop
ss
out
ja
fwait
mov
mov
lods
cmp
fiadds
loop
insb
adc
mov
inc
aad
rclb
sub
cs
outsl
pop
ja
push
sbb
loope
out
adc
push
shl
mov
mov
add
lods
and
pop
or
mov
and
mov
pop
push
jecxz
leave
imul
cmpb
cmp
and
negl
testl
xchg
cmc
jmp
cwtl
jne
lret
dec
and
pop
dec
dec
xchg
test
or
adc
fs
out
int
push
jb
add
xlat
mov
inc
enter
add
inc
repz
sbb
sbb
fwait
or
xor
in
sub
sub
je
mov
in
sub
subb
enter
cmp
iret
lea
icebp
mov
jo
jo
pop
sub
cmc
jge
xchg
mov
leave
xor
data16
mov
jmp
xchg
xchg
scas
out
lock
xchg
sti
dec
loop
mull
push
xor
and
cmp
adc
aam
push
or
addr16
in
mov
fiadds
daa
ljmp
cs
xchg
pop
movsb
mov
fwait
sub
inc
imul
out
lcall
jle
insl
ficoms
and
push
fbstp
pushl
dec
test
xchg
into
mov
push
cld
push
outsb
push
shlb
jle
mov
pop
push
imul
enter
mov
add
xor
push
xor
push
rorl
test
mov
loop
adc
and
pop
xchg
mov
mov
mov
inc
ja
dec
sub
lret
repnz
sarl
xor
cmp
jecxz
mov
mov
xchg
inc
add
push
ret
pop
aas
fldenv
dec
and
rcrb
cmp
inc
push
into
fidivrl
mov
lcall
xchg
imul
sub
ss
in
sbb
aam
cwtl
je
xor
mov
pop
cli
call
fdivr
sub
aad
sbb
test
push
jbe
outsb
push
test
xor
nop
popa
cmp
iret
imul
mov
bound
in
pop
out
les
jbe
aas
xchg
xor
movsl
mov
imul
push
push
lods
jno
outsl
aad
mov
xor
cmc
nop
adc
arpl
or
setnp
xor
dec
mov
xlat
cmp
mov
cld
or
xchg
fwait
push
fadds
pop
cmp
adc
xor
out
jl
lret
lret
pop
add
fisubs
jmp
aad
outsl
dec
outsb
mov
and
mov
std
lock
sti
pop
jle
test
or
lcall
pushf
and
mov
inc
add
mov
jnp
mov
sub
xchg
stos
rcll
fbstp
jb
js
jge
addr16
lea
inc
sub
ret
test
cmp
outsl
xchg
mov
pop
pop
push
shrl
jg
push
pop
enter
push
xchg
fsubp
int
mov
mov
inc
pop
add
or
stos
add
sbb
jnp
fwait
loop
ror
cmp
mov
idivb
cmp
jns
sbb
out
adc
test
cmpsl
cwtl
out
jo
jg
clc
mov
pop
les
xchg
mov
fmull
adc
jb
adc
gs
add
data16
inc
aad
jge
cmpsb
in
test
cmpsb
sbb
sub
inc
jae,pn
pop
loope
hlt
pop
mov
aam
xchg
inc
mov
in
lret
jne
in
dec
fmulp
sbb
and
and
cmpsb
fnstenv
sub
andb
dec
add
pushf
scas
push
pop
mov
aad
test
add
xchg
sub
aam
jl
cltd
and
fcomip
push
adc
fwait
add
inc
movsl
cmp
or
rcrl
int3
xor
add
add
clc
ja
mov
insl
pop
test
mov
mov
pop
jae
fwait
pop
push
scas
scas
call
mov
or
dec
jbe
aaa
std
mov
sub
out
mov
xorl
in
aas
pop
ljmp
push
lods
add
xchg
jne
mov
loope
jnp
loop
inc
mov
lock
pop
divb
arpl
push
dec
pop
xor
movsb
pop
mov
sbb
add
add
xchg
repz
popa
dec
sub
js
jmp
movsl
or
mov
ss
fld1
inc
movsb
mov
daa
outsb
sbb
pop
pop
fists
dec
mov
xor
mov
sbb
clc
or
mov
sti
lahf
dec
xor
icebp
push
dec
xor
andl
cmc
test
pop
xchg
testl
inc
pop
push
xor
loop
pop
pop
ret
dec
ret
je
pop
repz
or
jno
cmp
data16
dec
stc
repz
and
sbb
sarb
pop
fcoms
inc
adc
je
sbb
es
jge
rorb
ds
js
or
ffree
out
dec
push
xchg
mov
call
adc
xor
adc
out
mov
jp
bound
mov
test
push
push
mov
jno
fnsave
enter
push
stos
or
jo
cltd
icebp
dec
bound
notb
pop
daa
push
add
mov
sub
subb
test
or
hlt
test
fists
out
mov
sbb
fcmove
loope
or
repnz
add
scas
push
mov
add
xchg
insb
out
mov
sub
incb
sarl
call
shrl
addr16
in
cltd
mov
mov
lahf
mov
repz
cmp
fdivr
sbb
add
jecxz
add
sbb
fisubrs
pop
mov
hlt
push
fs
repnz
cmp
mov
cmpsl
mov
mov
add
mov
add
xchg
bound
push
push
sub
pop
xor
shrl
movsb
popl
dec
out
mov
das
jno
popl
or
xor
xchg
mov
lds
xchg
dec
outsl
mov
pusha
dec
push
jg
xadd
fs
addr16
inc
jbe
mov
out
pop
jge
xchg
and
sahf
pop
fisubrs
mov
add
mov
pop
sar
stos
cmpsb
rorb
mov
sub
cld
int
add
lret
and
out
jne
cmp
dec
sub
dec
lcall
xorl
mov
mov
sub
int3
xor
cs
mov
popf
mov
ss
push
cmovns
emms
lock
pop
aaa
sbbl
inc
loope
dec
and
jle
vpsubd
inc
push
or
ds
mov
arpl
sub
sbb
mov
jbe
mov
aad
xor
bound
mov
orb
in
mov
les
cmp
enter
fsub
xchg
mov
xorl
or
repnz
adc
xchg
pusha
fidivs
push
rcll
sbb
cli
fistpl
mov
inc
and
sub
fcomip
xchg
xchg
js
jae
stc
das
ja
repnz
popf
pushl
dec
add
inc
test
mov
mov
push
lcall
test
psubw
pop
fwait
inc
fdivs
js
and
sahf
repz
inc
xor
fdivr
mov
test
mov
sbb
and
inc
xor
daa
pop
fistpl
mov
test
loopne
dec
les
cmc
lahf
dec
mov
sbb
out
jl
pop
mov
push
scas
call
or
stos
repnz
mov
jb
mov
sbbl
insb
sbbl
cmp
and
adcb
sahf
jge
mov
mov
insl
xchg
pop
add
test
pushl
andl
jno
daa
mov
dec
stc
mov
inc
add
lock
push
out
lods
dec
sbb
push
or
je
dec
pushf
mov
or
xchg
jle
cs
jp
out
sbb
inc
push
xchg
jg
cmp
into
adcl
fidivs
adc
pop
jne
fmul
xchg
xchg
inc
test
stos
ljmp
and
inc
ffree
ljmp
incl
outsl
pop
and
leave
jge
add
mov
mov
push
cmp
jp
mov
lods
ljmp
or
data16
fcomps
mov
shll
int
fsubp
cmp
fcompl
loope
stos
test
insb
pop
fsubrl
shlb
sub
sub
sbb
push
or
jns
fldl
dec
in
in
and
stc
or
add
inc
xorl
ret
push
pop
xchg
add
xchg
xor
xor
sahf
add
lock
bound
mov
jo
ljmp
movsl
pop
xchg
mov
je
leave
push
ret
and
js
mov
fwait
in
xchg
pushw
shll
rorl
lret
mov
mov
jb
cltd
loope
push
sahf
xchg
cmpsb
jl
xorb
out
adc
sti
mov
and
inc
inc
mov
push
lds
rorl
xchg
mov
stos
iret
pushf
pop
pop
test
call
jp
xor
outsb
icebp
pusha
sbb
jnp
cmc
mov
or
xchg
adc
inc
popa
fisubl
stos
lcall
subb
push
lock
imul
cmp
stos
ja
and
rcrb
imul
adc
movsb
ret
popa
ucomiss
or
or
cltd
leave
bndstx
push
lahf
lret
xchg
push
inc
jno
out
mov
stc
xor
inc
mov
in
dec
push
sbb
mov
scas
aas
mov
call
fidivrl
outsb
xchg
ret
push
dec
dec
cmpsl
jo
jg
int3
pop
inc
add
inc
push
or
shll
pop
and
stos
rorb
cmpsl
sti
inc
jl
test
pop
mov
icebp
scas
shll
call
inc
inc
dec
jo
and
hlt
movsb
push
inc
js
les
xchg
clc
xorl
movsb
mov
scas
or
popa
mov
add
dec
sbb
popf
stos
shl
fisttpll
sahf
mov
jnp
leave
sti
ficomps
jne
adc
cmpsb
or
arpl
aas
dec
inc
out
mov
sbb
mov
call
lahf
nop
push
pop
adc
lea
pop
repnz
bound
das
rol
iret
pop
or
push
mov
popf
fdivl
movsl
and
outsb
movsb
dec
mov
out
push
xor
xchg
das
cltd
and
adc
call
mov
or
sub
rcrb
lret
int3
das
out
cltd
loopne
test
out
mov
jae
adc
jbe
pushf
icebp
jo
scas
fucomi
fs
sub
call
insl
dec
sub
or
pusha
dec
push
mov
xor
or
push
repnz
cli
mov
sar
call
fistl
ficomps
shlb
stc
mov
push
pop
sbb
and
dec
mov
aaa
dec
insb
das
xchg
iret
pop
aam
pop
mov
jo
lea
out
dec
mov
in
std
mov
in
scas
push
fdivrl
and
cmp
xor
sti
xor
fldcw
repnz
jle
movsb
stos
pushf
adc
lock
in
ret
ss
pop
adc
loopne
xchg
out
repz
xlat
pop
push
xchg
mov
pop
test
and
mov
mov
pop
mov
jb
or
mov
sarb
mov
push
das
cmp
pop
jge,pt
pop
cmpsb
jle
not
inc
mov
js
xor
cmp
sbb
int3
xchg
fmuls
xchg
push
shlb
aaa
dec
mov
pop
sub
push
scas
mov
insl
test
xor
xlat
pop
mov
and
out
out
xlat
adc
dec
enter
repnz
cwtl
sti
pop
xchg
lcall
lock
jo
daa
pop
push
mov
xor
cltd
addl
pop
cmpsb
push
cli
jmp
sbb
loop
mov
jbe
and
pop
lods
andb
inc
sbbl
arpl
pushf
fldenv
fisubrl
dec
jg
ss
lea
xchg
sub
mov
dec
in
loope
dec
xchg
xchg
adc
jmp
jnp
xchg
test
rcll
jo
add
ljmp
mov
xorb
and
scas
jae
and
mov
enter
lahf
pop
insl
add
dec
loop
push
push
pop
jp
orb
insb
pop
sbb
imul
fwait
dec
orb
movsb
mov
hlt
sti
or
imul
xchg
fiaddl
xchg
ret
pop
jno
push
rorl
test
stc
adcb
pop
test
pop
sbb
sbb
xor
adc
imul
sub
mov
and
dec
pop
cmc
pop
push
inc
and
lret
adc
jmp
mov
fmul
insl
lahf
ret
sub
sub
xor
lahf
outsl
pop
and
scas
inc
sbb
push
push
mov
or
sti
jo
xchg
jb
push
loope
sub
aas
push
mov
rcll
sbb
xor
pop
mov
push
sti
out
cmc
outsb
pop
testb
push
arpl
aas
shlb
jge
cmp
jne
push
mov
stos
pop
arpl
call
sub
scas
xor
into
adc
push
add
cld
xor
xchg
or
push
std
sbb
mov
xor
inc
dec
andb
mov
xlat
repnz
cmp
or
cs
cltd
imull
int
enter
jle
xchg
jecxz
jae
dec
jg
mov
out
push
in
mov
popf
mov
pop
mov
add
pop
pop
imul
xchg
mov
adc
mov
cmp
fwait
pop
lret
data16
cmp
aam
sbb
es
outsb
pop
pop
insl
sub
push
and
jb
insl
push
or
int
sub
movl
mov
fs
in
jle
lea
cld
xchg
popa
sbb
ds
inc
lods
jle
andb
fdivr
inc
mov
jnp
cmpsl
mov
mov
mov
mulb
sbb
dec
mov
out
push
and
insl
xor
cld
push
dec
mov
pop
or
xchg
ja
cmp
int
inc
ja
sbb
jle
pop
adc
adc
mov
mov
ret
add
rorl
aad
sarl
inc
sbb
stos
inc
lock
cmpsb
imul
sub
movsl
dec
push
bound
pop
sub
push
add
xor
mov
aad
es
int3
adc
or
cmp
cltd
in
or
jg
cmc
mov
xlat
mov
sub
cwtl
jg
loop
push
and
das
push
aad
aad
in
cmp
pop
cwtl
add
inc
roll
jge
cltd
es
sub
pop
inc
push
xchg
mov
sbb
add
dec
cmp
pop
test
adc
xlat
cmpsl
scas
js
push
jnp
jmp
cwtl
insl
cmp
dec
aaa
frstor
aaa
and
jl
test
push
sahf
shll
pop
or
rorb
aad
lcall
pop
mov
orb
loopne
cs
pop
lods
jge
aaa
les
scas
pushf
sbb
pop
or
pop
movsl
pop
xchg
fnstcw
cmp
hlt
rorb
clc
int3
mov
xchg
icebp
sbb
pop
and
lods
jmp
xlat
push
jmp
ljmp
cld
add
pop
pop
int3
icebp
incl
pop
sarb
fucomp
sbb
insb
in
aam
movsb
lods
popf
cmp
and
gs
les
dec
popf
js
xchg
bound
mov
xchg
pusha
dec
pusha
into
inc
cmp
pop
cltd
mov
das
push
icebp
clc
jp
add
inc
adc
push
idiv
mov
and
or
cmp
push
outsb
sbb
mov
jle
pop
mov
sbb
adcb
addl
jae
shr
pop
fwait
push
fucomp
in
out
notl
xchg
leave
push
jp
jb
flds
das
jne
lahf
sub
push
jns
mov
aaa
xchg
dec
mov
popa
adc
dec
test
call
mov
daa
movsl
je
div
xchg
addr16
dec
sbb
dec
cli
cli
mov
adc
sub
popa
fsubrs
call
add
es
mov
xor
sbb
jge
mov
in
sahf
je
xchg
mov
or
sar
sbb
popf
test
sbb
mov
aad
cmp
insb
cmp
dec
mov
nop
adc
into
lcall
cmpsl
mov
adc
xor
adc
out
sub
icebp
dec
adc
pop
sbb
push
mov
cmp
rclb
icebp
shrb
iret
jge
pop
fisttps
inc
jl
cmp
lds
dec
pop
jns
call
aam
icebp
shl
loopne
cmpsl
repz
out
xchg
outsb
pop
std
mov
cli
aas
rol
jmp
enter
stos
push
sub
mov
push
mov
stos
jne
cs
mov
push
cmp
addb
or
iret
popl
test
dec
add
jo
lret
mov
ret
sti
xchg
cmp
sarl
mov
scas
xchg
cli
leave
cwtl
mov
mov
add
mov
pusha
mov
lcall
mov
cmc
mov
fdivs
test
gs
or
xchg
fsubl
or
sub
enter
dec
mov
sbb
xchg
or
insb
add
imul
aad
pop
mov
inc
bound
sbb
lahf
mov
xchg
mov
mov
or
aam
stc
cmpsl
jns
out
mov
xchg
lret
or
push
or
or
pop
dec
fisubrl
push
mov
pop
lcall
push
cmpsl
aas
mov
sbb
sbb
ss
fcoms
lods
push
sub
or
mov
adc
mov
add
mov
inc
fnstcw
imulb
cli
inc
sarb
fs
mov
mov
jge
cmc
fwait
lds
mov
daa
mov
mov
lods
sub
test
jecxz
into
roll
push
insb
adc
push
and
adcb
loope
and
sub
cltd
pusha
cwtl
adc
outsb
cs
inc
inc
adc
ds
pop
mov
inc
dec
lea
insb
xor
decl
mov
sar
push
xchg
mov
mov
inc
pop
arpl
pop
fwait
cwtl
roll
inc
xchg
ss
xchg
mov
shl
iret
mov
or
cmp
mov
repz
pusha
popa
sbbb
das
push
add
lret
dec
push
pop
jb
out
xor
addb
pop
push
or
sbb
sbb
adc
dec
subb
in
dec
sbb
mov
pop
adc
jne
jo
shr
adcb
xchg
into
aas
cld
and
add
push
sti
cltd
aas
ds
mov
pop
stc
xchg
dec
cmp
jle
mov
xorb
pop
bound
jne
fwait
test
aam
icebp
sub
loop
push
cltd
xor
dec
xchg
inc
cmp
int
jle
sti
fistpll
mov
xchg
inc
mov
out
fwait
stc
movsl
stos
sbb
xchg
xor
cli
in
push
dec
orb
push
mov
test
dec
ds
adc
fldcw
xlat
mov
inc
mov
mov
idivl
ror
cmp
pushf
push
pop
popf
and
iret
pop
in
sbb
int3
popa
push
or
mov
aad
or
mov
pop
pop
inc
xor
pop
sub
push
pop
pusha
pop
lds
mov
lods
sahf
or
or
stos
cmc
ret
or
sub
mov
out
out
mov
jo
aad
and
lock
enter
mov
test
lret
cmc
cmp
orl
icebp
sub
xchg
jle
adc
aad
xchg
jmp
cmp
pop
adc
arpl
leave
or
int3
sub
pop
stos
ja
jae
les
mov
into
push
rcll
mov
cmp
jne
jmp
pop
cmp
adc
test
sub
scas
repz
jb
pop
je
mov
mov
cmp
arpl
aam
cmp
insl
outsb
lcall
popa
mov
cmp
scas
cmp
and
int3
adc
push
lods
xchg
mov
mov
or
pop
pop
sub
rcl
pop
aad
jae
pop
mov
cmp
fwait
mov
sbb
enter
jne
add
lods
idiv
xor
mov
or
xor
scas
jne
arpl
pop
mov
adc
ficoml
imul
add
sub
adc
adc
add
jmp
jo
jecxz
shll
mov
cmpsb
mov
xchg
mov
loop
in
pmaxub
scas
pop
repnz
popa
xor
pop
sub
addr16
dec
cli
icebp
lods
mov
push
xchg
sbb
pop
or
mov
adc
mov
dec
jmp
scas
ja
mov
les
shll
jne
lea
push
lods
ljmp
iret
or
add
sub
or
mov
mov
test
cwtl
mov
cmp
xchg
sub
mov
mov
pop
fisttps
ljmp
inc
or
inc
sbb
sub
fisubl
lret
fdivs
sbb
add
mov
in
mov
adc
sub
add
adc
ja
inc
add
sbb
pop
pop
pop
jns
fdivrs
fstl
add
lret
or
lods
mov
cmp
dec
addr16
mov
xchg
arpl
jmp
cwtl
ret
clc
nop
xor
lods
mov
cmc
scas
push
gs
dec
dec
fwait
sti
repz
mov
sub
mov
jl
mov
lods
dec
pop
jmp
add
dec
out
aas
nop
scas
inc
gs
js
push
pop
rorl
frstor
out
jae
jnp
pop
lahf
add
clc
xor
out
hlt
mov
mov
in
fistl
mov
jle
mov
cmpsb
mov
pop
mov
jnp
pop
xor
jbe
scas
push
add
mov
pop
cwtl
int
xor
add
mov
test
imul
test
mov
iret
cmp
fucomip
outsb
aad
jp,pt
mov
pusha
xchg
mov
and
inc
movsb
sarb
sarb
outsl
sbb
loopne
shll
push
cmpsb
insl
adc
sub
inc
mov
jmp
lock
lods
scas
mov
mov
jb
mov
roll
sbb
mov
xchg
ja
adc
arpl
loopne
mov
shl
cmp
sub
lret
loop
stos
pop
push
pusha
adc
mov
push
inc
test
xchg
out
cs
popf
jecxz
push
in
ljmp
lret
xchg
push
lods
mov
nop
movsb
xchg
adc
or
cmp
lea
push
fsubs
aad
or
jg
aad
andb
fistps
lods
fistps
les
sbb
aam
call
jbe
outsb
or
cmpsl
mov
jmp
out
xor
pop
mov
in
adc
push
and
push
cmpsb
add
nop
nop
daa
call
mov
test
pop
mov
test
jno
sub
insl
cmp
pop
xor
sub
scas
enter
ret
and
lret
adcl
dec
pop
movsl
jo
mov
jl
adc
xchg
pushf
repz
shll
mov
nop
lods
and
mov
mov
or
inc
mov
mov
and
push
rcrl
movsb
outsb
jle
ss
test
addr16
xor
mov
das
mov
push
or
je
lock
inc
loope
xor
xlat
xlat
sbb
test
pushw
xor
pop
mov
jle
xchg
and
scas
jle
mov
fcomps
add
lock
loop
pop
div
inc
inc
or
int
mov
test
mov
repz
and
jae
out
xor
pop
jnp
xchg
mov
mov
imul
xor
mov
ficoml
clc
hlt
mov
push
push
in
jmp
mov
mov
ljmp
adc
js
cmpsl
or
pop
adc
sub
aas
fisubl
jecxz
xchg
xor
andb
xchg
pop
inc
leave
daa
sbb
sar
dec
push
gs
inc
mov
loopne
or
jo
cwtl
pushf
dec
mov
aam
mov
push
push
sbb
pop
push
jmp
les
jnp
cmpsl
rol
arpl
mov
int
lahf
sahf
fidivrs
mov
lods
or
xchg
pop
mov
inc
xchg
pop
mov
imul
jno
lret
ljmp
cmc
push
push
mov
fdivs
ljmp
sbb
adc
mov
pushl
leave
xchg
sub
bound
cs
incl
out
xor
mov
cmp
jl
xchg
movsl
popa
cmpl
xor
jmp
push
sbb
jne
sti
pusha
pop
ds
shll
imul
nop
xchg
jb
xchg
rcrl
xor
xchg
cmp
rol
and
cmp
xchg
jle
push
push
cmpsl
jae
mov
fiadds
mov
push
shlb
imul
call
movsb
cwtl
mov
stc
stc
js
or
jl
aad
push
sub
into
mov
mov
repnz
jg
xchg
push
jge
iret
fwait
jae
push
sub
cmp
push
inc
xor
stos
jo
rcll
sub
popa
jg
adc
sbb
push
and
test
mov
add
shll
sub
pop
mov
and
stos
mov
adc
in
pop
jne
sbb
ja
jmp
pop
and
fmulp
fwait
jmp
mov
faddl
addr16
dec
and
and
fisttps
mov
mov
cmpb
out
and
aas
loope
lods
dec
mov
jae
xchg
movsl
gs
xor
and
rcrb
lock
fiadds
mov
pop
out
adc
dec
or
stc
sbb
call
hlt
jle
dec
pop
imul
gs
imul
push
and
insl
xor
xchg
cwtl
sbb
xchg
pop
loop
push
inc
mov
jecxz
popa
das
xchg
cmpsb
push
daa
into
and
cmp
repnz
push
fsubr
cmpsl
cmpsl
sahf
in
jne
cmp
fcmovu
mov
clc
or
shrb
loop
jbe
cwtl
and
mov
pop
pop
xlat
outsl
lahf
inc
into
addr16
clc
int
xchg
pop
bound
add
inc
lds
nop
cwtl
ss
lcall
cli
sbb
add
fmull
xlat
dec
test
dec
and
lds
mov
and
ja
iret
cwtl
jp
rcll
xor
push
dec
test
ret
add
popf
stos
cmpsl
jb
dec
pop
mov
xor
outsb
fs
sub
loop
sbb
lods
imul
or
subl
ja
adc
or
lcall
adc
push
cmp
gs
cmp
ficomps
sub
movsl
in
push
sub
and
push
pop
pop
jmp
push
push
cltd
sbb
pushf
dec
fcmovu
and
ja
or
sbb
cld
mov
push
push
jae
test
xlat
adc
js
out
adc
bound
pop
pop
in
push
hlt
mov
icebp
jge
insb
pop
lea
push
test
arpl
dec
jne
push
pop
xor
xchg
cmp
insl
jmp
push
out
adc
dec
pusha
fcmovnbe
pop
imul
sub
mov
push
sub
mov
and
inc
imul
mov
jno
out
push
and
and
mov
xchg
popf
call
jae
fsub
repz
sbbl
out
dec
roll
cli
mov
push
and
adc
and
loopne
ss
add
into
adc
outsb
sub
or
ds
out
mov
sbb
out
xchg
ret
outsl
inc
xor
sbbb
mov
loope
insb
sub
aas
lret
add
ljmp
out
test
lcall
test
pop
lret
les
cmpsb
fisubs
push
aaa
test
xor
mov
in
mov
push
xchg
mov
shll
mov
sbb
dec
lahf
mov
ja
xor
pushl
xor
mov
gs
push
andl
mov
stc
pushf
adc
jne
filds
icebp
sbb
lret
gs
xor
or
ds
inc
test
or
repnz
into
pop
daa
jle
call
mov
mov
and
addb
hlt
add
jl
pop
dec
das
test
or
xchg
int
push
lret
adcb
es
rcl
scas
cmp
jnp
mov
adc
pop
lret
test
aas
adc
fnstsw
cmc
inc
imulb
xchg
push
sbb
popf
xor
push
push
add
fisubrl
push
xor
push
popf
test
decb
mov
es
cmpsb
popl
into
mov
adc
inc
fildll
stos
cmp
fsubrs
aam
movsb
push
pop
xchg
popf
out
lods
add
lret
shrl
into
xchg
test
mov
add
sti
adc
mov
jae
fmuls
cltd
add
push
inc
mov
aaa
pop
popa
adc
fstps
sbb
in
test
and
shlb
xchg
pop
mov
clc
cmp
push
jno,pn
pushf
cmp
jb
ficoml
xor
mov
xchg
dec
cwtl
sbb
mov
int
mov
or
lock
mov
jp,pn
jno
inc
push
sbb
xor
lds
cmp
stos
fxch
leave
out
mov
roll
stos
cmp
cmp
out
out
mov
int3
adc
push
imul
dec
jle
testb
add
xlat
aam
das
push
addr16
in
sub
sub
mov
pop
push
xchg
test
fwait
ret
xor
and
rcr
xlat
mov
mov
std
push
pop
pop
jl
adc
shll
neg
adc
inc
jg
out
jb
add
mov
insl
dec
add
xchg
int
sbb
xor
dec
jge
sar
scas
add
jne
sbb
in
mov
or
or
mov
sbb
xchg
inc
test
cmp
insl
loop
adc
dec
cli
xor
lret
pop
sahf
cld
fs
mov
pop
inc
js
popf
jmp
mov
or
lods
xor
pop
push
xchg
inc
sub
loope
sbb
iret
or
mov
xor
arpl
mov
test
int3
mov
mov
aad
shl
sub
test
lret
jne
cmc
dec
shr
adc
xor
daa
mov
and
jl
clc
int3
xor
xchg
sbb
ds
jmp
fisubrs
mov
inc
inc
cmp
cmp
ds
gs
inc
push
inc
push
xchg
sub
push
fldenv
xlat
mov
into
leave
dec
mov
out
xchg
lret
mov
cmpsb
inc
xchg
insb
add
push
adc
cmp
out
jg
repnz
cmp
ljmp
jae
ret
shll
ret
scas
push
xor
cmp
test
lods
mov
inc
in
xchg
mov
fsubs
dec
mov
movsl
sub
out
sub
or
mov
ja
push
xor
add
lcall
cmp
jb
imul
gs
cmpsb
jno
cmc
ret
jno
jge
sbb
inc
or
sahf
jg
aaa
adc
std
cmp
sub
adc
and
mov
ljmp
push
sahf
pop
push
mov
xchg
cld
push
andb
mov
dec
sbb
add
cli
or
adc
xchg
icebp
data16
cmpsl
fbstp
repz
test
mov
ljmp
mov
xchg
cs
xchg
bound
inc
test
mov
adc
mov
in
je
push
cmp
out
add
xor
iret
jo
push
shll
call
repnz
jnp
jecxz
jae
inc
and
cmp
push
data16
loop
adc
dec
inc
add
or
out
jbe
les
or
in
or
movsl
je
pushf
sti
arpl
je
pop
fxam
add
and
movsl
xchg
cli
pop
mov
xchg
in
mov
das
orb
lds
sub
std
sti
lods
arpl
sub
push
dec
sahf
mov
sar
mov
jg
xchg
or
cmpsb
sbb
adc
movsb
insb
lcall
hlt
es
pushf
test
dec
xor
cmpsl
cltd
mov
daa
adc
inc
shrb
pop
pop
pop
shrb
mov
pop
and
decb
popa
mov
push
cmc
or
inc
ret
inc
sbb
xlat
or
aaa
lret
sarl
rorb
pop
mov
mov
je
jo
jge
in
mov
mov
jl
sbb
jl
dec
dec
sbb
inc
cld
fstpt
test
addb
fimull
rcrb
mov
sub
in
pop
sbb
sbb
rclb
dec
pop
pushl
sbb
loopne
out
sub
mov
xchg
mov
mov
lret
je
mov
jmp
adc
add
xchg
fmuls
in
push
test
stos
ljmp
cmp
sbb
data16
out
xchg
pop
pushf
xchg
mov
icebp
ljmp
lds
cli
add
mov
out
mov
cmp
jno
xor
mov
mov
pop
sbb
add
divl
push
inc
mov
xchg
adc
push
aaa
inc
repnz
inc
adc
pop
cmc
cmp
aaa
shll
push
pop
pushf
mov
notb
and
pop
lods
mov
adc
cmpsl
sbb
inc
adc
decb
rcrl
stc
sub
cmp
js
repz
inc
jne
sub
cltd
movsl
fbstp
mov
sahf
fisubl
mov
lea
fistl
or
inc
imul
imul
push
repz
cwtl
rcll
es
sti
cmp
cld
arpl
push
jnp
add
fmul
mov
decb
cs
call
cmp
sbb
inc
in
xor
in
lods
pop
jg
jecxz
fistpll
pop
pop
imulb
cmpl
xchg
inc
jne
in
lcall
std
and
ds
int
jne
movsl
mov
inc
mov
push
fidivs
cld
push
cmpsb
sub
fstl
or
jle
inc
inc
into
call
sbb
cwtl
jge
shlb
loope
cmp
jb
cld
add
jmp
mov
mov
gs
ret
popa
and
js
pop
sub
add
push
fistps
mov
int3
pusha
cmpsb
ja
inc
mov
add
jb
lea
div
sub
lret
ret
add
in
push
pop
pushf
arpl
cmpsb
hlt
xor
test
or
in
push
jne
in
push
jecxz
and
daa
arpl
push
xchg
lret
adc
out
jo
xor
dec
stc
lahf
icebp
xor
test
xor
cld
fnstenv
adc
clc
mov
push
mov
or
pop
push
xor
pushf
xchg
outsb
xor
adc
mov
ja
pop
inc
dec
or
hlt
mov
fs
adc
pop
sbb
sbb
sub
mov
push
sbbb
push
roll
sbb
aaa
pop
and
push
jmp
das
jg
cmpxchg
scas
xchg
cwtl
test
mov
daa
cmp
or
rolb
out
pop
dec
dec
sbb
sbb
mov
jo
je
shrl
mov
js
shrb
popf
push
cltd
xor
mov
or
out
push
and
jbe
xor
mov
sarb
dec
das
pop
pop
lcall
dec
int3
arpl
int3
dec
in
lea
scas
dec
scas
mov
dec
cmp
dec
cmp
sbb
mov
cli
inc
push
or
rorl
aaa
mov
rorl
jbe
outsb
inc
and
fldenv
dec
faddl
mov
fistl
mov
mov
clc
pop
mov
inc
pop
insl
or
or
add
xlat
push
or
into
test
or
out
mov
fmuls
ss
xchg
dec
jle
insl
clc
sbb
ja
jl
daa
add
imul
push
cmp
fmull
jle
lcall
push
daa
mov
pop
aad
lods
mov
xchg
leave
push
divl
and
lahf
rcr
pushf
stc
aaa
sub
add
sti
push
push
mov
sbb
js
into
aad
adc
jl
mov
pop
dec
cwtl
sub
stos
xchg
and
cmc
mov
cli
cmpb
in
mov
scas
jmp
mov
dec
addr16
inc
repnz
imul
lock
cmp
pushf
adc
push
mov
xor
push
ret
sbb
call
aam
jbe
xchg
insb
jo
stc
imul
pusha
in
push
or
xchg
rolb
xchg
mov
jo
push
lcall
mov
pusha
cmpsl
mov
fidivrl
das
push
iret
gs
nop
pop
and
inc
xchg
stos
enter
movsl
outsl
sub
das
dec
jns
jns
fnstsw
fmulp
lret
inc
ffreep
addr16
in
sub
daa
in
xchg
or
popf
xchg
push
mov
jbe
jns
icebp
xchg
cmp
add
movsb
ss
dec
shlb
shll
loop
pop
or
pushf
popf
sarl
dec
fiadds
inc
fsubr
and
sbb
mov
jge
icebp
adc
mov
xor
movb
pop
xchg
push
scas
cmpsl
mov
jbe
xchg
xchg
gs
in
jnp
push
mov
cld
mov
in
je
popa
mov
sarl
data16
jle
pop
mov
fstpl
jne
xchg
mov
mov
push
mov
popf
test
push
pop
fwait
sub
es
inc
arpl
jnp
loop
add
daa
cmp
mov
js
test
inc
scas
fimull
rcrb
and
scas
lret
adc
cltd
inc
int3
xchg
add
sub
sti
enter
sbb
xchg
in
dec
js
fs
lds
test
clc
dec
push
repnz
test
jne
pop
jbe
icebp
xchg
push
add
jecxz
jns
subl
popa
out
dec
jne
mov
jge
test
fsqrt
mov
cmp
sbb
xlat
loop
notl
fstpl
or
out
and
mov
mov
test
mov
fs
xchg
adc
xor
xor
sbb
mov
cmp
pop
fmul
scas
sbb
xchg
mov
mov
int3
lret
data16
mov
push
push
imul
adc
cltd
add
out
cmp
add
xchg
dec
sbb
or
push
movl
lock
in
mov
mov
jle
add
xchg
mov
dec
and
push
loope
dec
xlat
outsb
push
cmpl
dec
adc
jno
cmp
aad
jp
sub
imul
popa
cld
pop
insb
fidivs
movsl
jnp
insl
ret
pop
rdmsr
jmp
aad
xor
mov
cmpl
decb
pop
xor
insb
addb
adc
leave
lock
arpl
popf
outsl
pop
inc
fs
nop
jmp
mov
cmp
in
lods
mov
nop
pop
sub
push
inc
rcrl
fnstcw
adc
jmp
rolb
push
jg
push
sub
outsb
pop
mov
add
mov
adc
push
jp
pavgw
and
inc
pusha
iret
mov
and
imul
dec
out
jae
es
sbb
test
sbb
lret
lods
divb
xor
ret
mov
mov
mov
push
clc
sub
mov
mov
jb
sbb
fmuls
fucomp
scas
inc
and
sub
fisttpl
fadd
push
enter
adc
js
inc
hlt
daa
dec
push
sub
into
mov
jbe
outsb
or
inc
pop
mov
cmp
shlb
jae
fcomp
in
ja
jecxz
or
fwait
inc
jcxz
mov
xor
mov
jns
in
cmp
sub
add
xchg
ret
add
and
mov
loope
mov
sti
inc
xor
fisubrl
dec
mov
lahf
sbb
pusha
shrb
xchg
addr16
outsl
aas
or
sbb
mov
stos
scas
or
mov
lock
sub
or
jp
mov
ret
add
imul
hlt
or
jbe
imulb
sub
iret
push
add
or
test
mov
movsl
jecxz
inc
cmpsb
icebp
sbb
jne
idivl
or
mov
inc
push
ljmp
adc
call
mov
jg
cmp
cmp
inc
test
in
pop
fs
movsb
cltd
xor
std
arpl
push
addr16
popa
sub
pop
mov
shl
fildll
je
or
insb
jmp
int3
mov
mov
ficoms
lock
pop
test
test
pop
inc
push
scas
adc
mov
pop
test
repnz
inc
call
jns
pop
and
xlat
jp
inc
push
lods
mov
xchg
fmul
or
mull
push
dec
testb
xchg
roll
pop
repz
jno
xchg
push
inc
ljmp
imul
daa
push
lock
add
negb
sbb
mov
int
lods
xor
aam
dec
push
inc
dec
add
push
out
fstpl
lea
les
lock
dec
leave
decb
xchg
fchs
mov
pop
jbe
std
cwtl
adc
mov
add
lret
mov
jg
pop
clc
pop
inc
icebp
pop
dec
int
test
and
repnz
xchg
insb
fsubp
fistpl
loop
lock
cmp
sub
jno
pop
pop
pop
sub
inc
ljmp
std
daa
sbb
mov
push
xor
dec
xor
inc
faddl
fmul
test
cmp
loopne
pop
mov
sbb
cli
inc
sbb
sahf
add
adc
cs
es
ja
cmp
jmp
sbb
aas
cwtl
fistpl
out
fidivrs
pop
jl
mov
mov
xchg
inc
sub
cmpl
fiaddl
enter
call
loope
inc
mov
sbb
dec
clc
js
push
add
imul
xor
jo
inc
shl
int3
lods
dec
repnz
mov
or
push
sbbl
fsubs
icebp
sbb
add
je
sbb
stos
add
ss
jno
les
push
pop
bound
addr16
and
out
and
xor
and
out
inc
push
stos
jae
aaa
subl
ror
daa
xor
fstpt
inc
gs
jo
aas
fs
gs
pop
movl
adc
jle
pop
out
sbb
mov
jns
jecxz
lock
pop
pop
rclb
cmp
cs
xchg
filds
pop
cmpsb
insb
cmp
sti
xchg
mov
test
in
mov
cmp
insb
pusha
stc
push
mov
xchg
cltd
sub
loop
cld
out
fists
xlat
imull
adc
jle
mov
xchg
or
cmp
xchg
lods
call
pop
repz
or
fdivr
ret
idivl
repnz
or
in
stos
jne
lds
sbb
cmp
aad
inc
mov
xor
pop
iret
cld
ret
pop
jbe
xlat
lods
adc
inc
cmpsl
xchg
iret
mov
dec
fcoms
cmp
loope
push
lahf
push
xchg
mov
mov
sub
add
jbe
imul
cwtl
jp
lcall
inc
adc
stos
push
dec
xor
xorb
jnp
dec
or
sub
and
sbb
or
or
or
popa
cli
jle
addb
cmpsl
push
pop
inc
cmp
mov
sbb
and
cmc
adc
imul
imul
or
dec
sbb
stc
add
leave
lcall
push
js
daa
pushl
imul
sub
and
lods
cmp
out
pop
mov
xchg
stos
jne
push
js
pop
out
or
rclb
sbb
jno
inc
mov
cli
mov
lea
mov
jg
sub
cmpsb
movsl
into
bound
aaa
scas
add
jno
xor
jne
mov
into
sbb
mov
sbb
push
sub
xor
std
push
pop
xchg
inc
sbb
push
mov
xor
pop
push
ds
mov
push
xchg
out
rcll
aad
pop
pop
xchg
mov
xor
scas
mov
push
or
pop
bound
jnp
ret
dec
push
icebp
push
icebp
xchg
cmpsb
jo
imul
xchg
nop
lret
xor
xchg
lock
sub
lds
lock
aam
push
dec
or
jecxz
adc
pop
sub
ret
or
xchg
int
nop
iret
rcrl
aaa
mov
movsl
sbb
mov
adc
fwait
and
adc
insb
push
push
cmpsb
cli
push
jg
into
inc
inc
cmp
push
dec
xchg
dec
rolb
jecxz
scas
pushf
push
inc
mov
clc
push
pop
dec
xor
dec
mov
jbe
pop
scas
js
push
add
cmp
mov
lods
jb
add
dec
pop
jb
dec
mov
gs
mov
mov
or
mov
inc
pop
push
xchg
pop
icebp
daa
jne
xlat
gs
insb
lret
lcall
leave
dec
cwtl
lcall
inc
hlt
addr16
lcall
jmp
jp
push
xor
inc
add
repnz
mov
test
mov
cwtl
mov
pop
mov
adc
cmp
out
gs
in
in
xor
cmp
cs
leave
lock
decb
push
and
or
testb
pop
and
loop
or
loopne
arpl
mov
mov
jo
sub
aaa
subb
fmuls
add
movsl
decb
sbbb
call
enter
hlt
sub
adc
xor
cmp
push
imull
cmp
ss
pop
out
test
pusha
scas
fwait
cmc
push
js
iret
cmp
inc
cld
ja
xchg
sahf
sub
addr16
adc
sbb
sarl
jecxz
enter
mov
enter
stos
lret
test
mov
push
dec
dec
mov
movsl
popf
pop
cs
jns
scas
push
push
jge
jnp
mov
sub
push
adc
sub
add
mov
mov
sub
fidivrl
cli
dec
repz
rcrb
cli
enter
adc
into
ds
add
ficoml
notl
xor
and
pop
mov
xchg
jno
repz
jns
push
insl
xchg
shll
cmc
loopne
in
mov
inc
cmp
hlt
scas
cmpsb
mov
pop
loop
fidivrs
bound
inc
fistps
mov
gs
mov
inc
shlb
loopne
addb
mov
les
xchg
orb
cs
mov
xor
roll
mov
jbe
xchg
push
xchg
mov
mov
repz
lds
lret
imul
aam
mov
sub
pop
int3
xchg
imull
std
inc
xchg
gs
adc
mov
mov
and
in
lods
aaa
fisubrs
jnp
cmp
clc
jno
cmpsl
shl
cmp
int
lcall
pusha
out
divl
inc
cld
ret
adc
movzwl
insb
pop
jnp
cli
push
push
mov
cwtl
push
mov
and
xchg
rol
out
cmp
inc
xchg
or
movsb
in
add
call
pop
stos
out
jns
shrl
out
push
xchg
fstpl
fdivrl
ret
xchg
sbb
push
pop
mov
insb
psubusw
loop
sti
push
jb
fcomps
and
js
mov
ljmp
cmp
pop
lds
in
fwait
leave
sbb
jae
inc
jg
negb
pop
loope
add
xchg
mov
shr
push
mov
ljmp
sub
pop
jge
sub
xor
pushl
insl
pushf
inc
xlat
inc
cmp
lret
into
mov
and
push
inc
mov
jne
stos
jg
data16
adc
loop
cwtl
loop
mov
push
pop
push
lret
enter
mov
repz
push
dec
dec
test
jne
cmc
cmc
jmp
cmp
mov
dec
xchg
out
adc
push
adc
cli
cmp
xchg
lret
push
push
push
adc
ss
insb
xor
daa
pop
fiaddl
ds
ret
arpl
xchg
push
sahf
fsubs
cmpsl
lret
sub
mov
mov
je
lock
mov
inc
incl
mov
insb
aad
aaa
push
push
pop
into
xchg
jbe
xor
push
xchg
in
lock
jae
xchg
fisubrl
jnp
and
cmp
cwtl
xchg
cli
div
inc
std
adc
jnp
cmp
dec
daa
lret
cmpsb
adc
and
xor
cltd
sbb
hlt
repz
pusha
aad
scas
pop
adc
jge
mov
xchg
or
jg
mov
aad
pop
gs
int
dec
das
xchg
xchg
cwtl
test
mov
cs
stos
imul
ljmp
addl
xor
ja
notl
add
push
int3
xchg
and
mov
and
gs
pop
into
jp
inc
xchg
es
mov
xor
inc
xor
pop
xchg
test
rcl
mov
lret
ds
divl
adc
sub
scas
inc
lea
adc
clc
ret
shll
out
rcrl
dec
out
sbb
inc
jb
loop
inc
mov
lods
pop
sub
push
sti
push
pop
dec
aaa
aam
lea
push
nop
mov
leave
xchg
or
into
mov
jmp
jge
xchg
mov
and
fdiv
or
insb
outsl
add
jno
pusha
rol
jl
jae
dec
aam
and
das
call
pop
mov
cmp
push
push
mov
sub
pop
stos
ljmp
cmpsl
out
cwtl
dec
jns
das
jbe
cli
jno
jl
les
ficoml
jne
outsb
add
jg
push
mov
js
xchg
ja
or
movsl
jno
pop
push
sub
xor
hlt
in
mov
mov
add
and
xor
mov
sbb
les
in
inc
insl
cwtl
inc
mov
movsl
inc
add
jns
jmp
dec
mov
mov
lds
or
add
or
sub
dec
cld
pop
movsl
daa
into
lods
inc
push
cmp
icebp
and
dec
pushf
les
sub
mov
aad
in
cmp
add
mov
outsb
sub
dec
xor
dec
jae
xchg
test
pushf
movsb
lock
xchg
dec
into
adc
push
aas
das
mov
jge
andl
xor
lret
xor
test
cli
push
jl
clc
cli
push
or
xchg
xor
cwtl
gs
in
mov
adc
and
adc
pusha
mov
in
mov
imul
scas
sub
add
or
les
mov
xor
push
lret
push
loopne
push
fmuls
in
cli
add
sbb
adc
ds
adc
mov
xor
inc
push
mov
mov
push
pop
int
std
dec
loop
outsb
in
mov
inc
add
xchg
xorl
imul
rcll
cli
xchg
jbe
aas
fdivrs
inc
inc
mov
cmp
adc
jg
jne
pop
jmp
insb
addb
inc
inc
daa
mov
sbb
mov
cmpl
mov
ss
lods
mov
int3
adc
inc
in
jle
ja
aad
loop
cmpsb
xor
push
jns
arpl
pop
lret
popa
jp
cmpsl
ja
fwait
mov
mov
and
sbb
orl
test
sub
xchg
mov
mov
int
scas
mov
sub
rolb
movsl
cwtl
mov
popa
ds
clc
xor
int3
js
sub
fstps
dec
loop
lret
enter
mov
movsb
sub
push
adc
fidivl
mov
or
adc
sarb
shll
lods
les
cmp
sbb
fcmovb
cld
xchg
and
xor
dec
jo
pop
xchg
sbb
in
push
outsl
sahf
rcl
or
in
movsl
in
push
sub
add
out
xor
xchg
ljmp
push
adc
les
mov
imul
mov
mov
mov
pop
mov
scas
frndint
fs
push
stos
xor
fldcw
xchg
dec
cmpsl
xchg
jbe
jmp
in
sub
scas
imul
daa
mov
xchg
dec
and
in
xchg
sbb
and
mov
outsl
push
pop
je
enter
pop
jbe
or
lods
xor
mov
push
mov
daa
pop
mov
pop
or
data16
popf
stos
mov
add
out
clc
ljmp
mov
dec
stc
xchg
xor
lods
cmpsl
out
stos
clc
mov
lock
jno
sbb
negl
add
test
ljmp
iret
sbb
imul
mov
adc
dec
inc
add
stos
std
imul
pop
inc
pop
mov
roll
mov
into
adc
pop
daa
pushf
out
ficoms
push
adc
add
cli
cmp
gs
pop
aam
out
test
cmpsb
pop
divl
cmp
movsb
out
mov
ja
fadds
cli
sbb
negb
insl
aam
ljmp
and
cwtl
rcr
sbb
movsl
mov
xchg
out
adc
mov
in
or
and
mov
loopne
ja
fdivrs
pop
push
and
dec
add
lret
loope
popa
xchg
hlt
inc
xchg
mov
daa
in
aas
daa
ret
adc
jmp
xor
or
call
mov
add
adc
test
push
mov
pop
and
cmpsl
jg
mov
out
push
inc
jge
cs
loop
mov
push
mov
inc
dec
adc
out
jg
adc
push
aaa
ret
push
xlat
into
xchg
and
sbbl
jne
hlt
lret
pushf
dec
cmp
xchg
in
cmp
sarl
pop
dec
xchg
loop
xchg
mov
cli
jne
jnp
cwtl
mov
negb
push
popf
stos
jbe
push
sub
jp
test
mov
xchg
stos
mov
jmp
xor
fildl
push
cltd
mov
idiv
ret
popf
nop
sbb
aam
fldt
movsb
jl
ljmp
mov
std
push
ss
add
rep
adcb
cmp
aad
insl
sub
push
loop
jp
lods
jecxz
ret
pop
mov
add
mov
cld
jns
mov
sbb
out
sbb
rclb
nop
push
aas
jge
je
pop
and
or
das
cmp
mov
dec
push
inc
mov
and
and
mov
scas
and
pop
push
pushl
out
push
or
pop
inc
mov
sahf
cwtl
enter
push
icebp
pop
test
aam
into
insl
lock
aam
or
cmp
lahf
cmp
sti
pusha
mov
arpl
mov
push
and
dec
das
xchg
and
imul
and
fwait
push
cs
jl
mov
adc
test
mov
or
jge
jb
add
orl
push
cmpsl
test
xlat
cmp
jo
sub
push
pop
and
push
sub
inc
cmpsl
dec
mov
or
xchg
iret
sub
jne
push
mov
repnz
inc
les
pop
xor
pop
enter
mov
aas
mov
mov
cmp
inc
es
lods
cwtl
inc
arpl
jnp
sar
fsubrl
cmp
outsl
push
icebp
inc
clc
pop
mov
cmp
dec
push
sub
movntps
cmp
jmp
jge
mov
aad
push
pusha
xchg
xchg
xchg
adc
out
mov
dec
daa
push
pusha
mov
dec
mov
aad
push
mov
mov
gs
sbb
push
ds
add
out
movsl
arpl
hlt
imul
js
sbb
sbb
pop
fwait
addb
mov
into
pusha
dec
shlb
in
jmp
push
dec
cwtl
icebp
pushl
call
dec
or
pop
or
jle
sub
and
mov
je
adc
cmpsb
or
pop
bnd
xor
add
jnp
xlat
sub
push
jnp
cmp
adc
iret
mov
sbb
pop
out
jnp
jb
repnz
aam
cmp
ret
pop
cmp
test
scas
shll
jne
inc
cmpsb
orb
jnp
mov
outsl
cmp
hlt
xchg
aas
das
lods
fdivs
inc
pop
inc
les
cmp
push
jbe
xlat
pushf
pop
mov
cs
mov
arpl
cmp
subb
dec
sahf
sub
adc
sbb
or
mov
out
test
movsb
je
or
or
mov
icebp
mov
dec
scas
push
jle
lods
mov
test
adc
pop
xlat
pop
mov
stc
mov
or
inc
ljmp
mov
adc
mov
fisttpl
pop
int
lahf
cmc
and
mov
xchg
test
out
push
hlt
mov
js
dec
outsb
mov
addl
lahf
imul
cmp
xchg
and
xchg
icebp
push
sub
xor
push
aam
push
jmp
loope
jne
cmp
push
outsl
out
popa
push
repz
push
in
daa
ret
sti
into
mov
lea
and
mov
jge
loope
mov
rclb
or
enter
push
dec
jecxz
xchg
jge
fwait
mov
mov
arpl
fadds
cmp
mov
aad
add
mov
mov
dec
mov
and
jle
rorl
or
loope
iret
stc
adc
jmp
adc
jb
rcrb
adc
and
out
xchg
adc
add
stos
ror
cmpb
mov
ret
cwtl
clc
dec
repz
andl
cmc
mov
fmul
test
shl
mov
adc
dec
int3
and
clc
xchg
jge
push
sub
push
jne
mov
sub
or
lods
dec
sub
aas
out
cmovg
popf
les
mov
stc
jmp
xor
repnz
xchg
stos
loope
cmp
mov
push
mov
push
cmp
jno
or
imul
lret
mov
add
dec
fiadds
out
inc
jp
add
sub
sub
call
pop
mov
repz
mov
insb
cmp
fcmovbe
jns
mov
jp
shll
fidivs
mov
jno
pop
and
lcall
lea
or
xor
sbb
loop
cs
stos
test
xor
imul
adc
jge
xchg
mov
insl
hlt
movsl
out
lods
adc
out
out
imul
fistl
dec
ss
inc
xchg
xchg
push
fwait
or
mov
mov
mov
outsl
fstl
push
outsb
mov
aam
mov
imul
aam
inc
xor
sbb
add
inc
in
dec
cs
out
loopne
lods
add
adc
push
movsb
xchg
divb
add
js
cmpl
fistpll
fisubl
push
or
and
push
sub
xchg
fadds
sbb
mov
jne
pop
sub
jecxz
push
jno
or
jp
dec
and
subl
cmp
lahf
jp
into
xchg
fstpl
jl
mov
sbbb
fs
in
loope
xor
mov
xchg
and
xchg
imul
les
ss
cmpsl
add
rcrb
pop
dec
cmp
jb
inc
cltd
pop
inc
ljmp
lcall
mov
inc
mov
push
ret
repz
dec
add
sbb
int
repz
sarl
push
nop
mov
mov
jl
cmpsb
ja
lods
adc
je
pop
or
mov
lret
jb
jnp
ficomps
mov
sbb
fnstenv
icebp
push
js
addr16
shll
fildll
push
jl
pop
push
push
aad
pslld
cli
daa
sahf
pop
mov
add
mov
xchg
enter
ja
jne
xor
xor
push
mov
mov
enter
push
sti
hlt
xchg
xor
xor
push
and
mov
dec
mov
shll
pop
repnz
mov
adc
stc
int3
into
cmp
shrl
or
fs
icebp
sub
jg
push
stos
shr
mov
out
xor
mov
jge
or
stos
jns
aad
inc
mov
inc
loope
dec
jno
lock
adc
ret
jno
fdiv
push
dec
loope
push
gs
xchg
jns
aam
mov
mov
int3
cmp
movsl
inc
sbb
inc
adc
xor
xchg
sti
shr
pushf
add
test
mov
hlt
rclb
shl
sbb
cmc
ficoms
aad
arpl
movsl
rol
push
sbb
sub
push
cmp
or
nop
dec
cwtl
lret
cs
loopne
sarl
outsb
cmc
dec
icebp
insl
leave
jbe
adc
repz
mov
out
mov
pshufw
mov
lcall
ds
inc
jle
shrl
mov
or
cmc
inc
xchg
add
pop
cld
lret
mov
icebp
and
fldt
shlb
xor
cli
repnz
negb
inc
xchg
jns
fmul
adcb
jl
lock
xor
into
xchg
xor
je
rol
sub
inc
jae
add
ljmp
je
aad
inc
fbld
ret
aas
lock
ret
jnp
mov
fwait
mov
andb
jbe
outsl
inc
add
pop
sbb
push
jbe
fstps
mov
mov
sbb
xor
pop
fsubrs
add
sub
sbb
sub
cmp
aad
pushf
mov
xchg
outsb
ss
insb
sarb
sub
mov
mov
inc
jmp
lock
lock
push
fs
mov
mov
mov
outsl
jle
jb
jne
pop
jmp
jmp
popa
mov
addr16
pop
shrl
sub
xor
or
fnstenv
push
roll
push
add
inc
std
lock
outsl
test
add
cwtl
push
jmp
cmp
xchg
jae
mov
out
fisttpl
cmpl
sahf
jno
mov
dec
push
mov
notl
mov
mov
fwait
shl
lea
and
jecxz
mov
mov
cmp
clc
fdivrl
xor
adc
xchg
jmp
mov
push
xorl
inc
cs
mov
jg
test
jg
movsb
mov
mov
cmpsb
lock
or
mov
sbb
pop
mov
xchg
pop
mov
fadds
mov
xor
adc
shlb
cltd
push
insl
mov
xorb
jge
mov
loope
add
jae
daa
and
xchg
iret
call
jno
sbb
popa
je
or
pop
mov
dec
add
push
mov
xchg
add
mov
cs
push
adc
jns
scas
data16
jae
enter
jae
cmc
fwait
inc
add
mov
dec
mov
xchg
dec
sti
push
sub
je
out
or
cs
xor
sar
push
pop
mov
push
add
inc
les
jae
xchg
das
in
test
and
scas
dec
imul
pop
pushf
jb
xchg
mov
int
add
cmp
mov
dec
cmc
jo
and
loop
repz
rclb
and
pop
xor
jl
mov
cmp
xchg
or
outsb
mov
std
int
sbb
addr16
inc
testl
mov
xchg
cmpsl
mov
stos
add
insl
ss
daa
cltd
nop
xchg
dec
xchg
pop
int
cmp
and
divl
imul
xchg
sub
mov
cwtl
sbb
jne
mov
inc
repnz
xlat
je
cmc
add
cmp
xchg
push
cmp
aam
jne
or
aas
or
xchg
inc
lret
leave
mov
jl
cmp
dec
lret
popa
pop
sbb
jle
mov
inc
jg
adc
pop
call
movsb
or
mov
out
ljmp
mov
sbb
push
inc
std
sub
test
dec
mov
mov
push
cmp
mov
xchg
xchg
push
enter
sub
push
stos
repnz
add
loop
cmp
dec
mov
in
push
mov
mov
jmp
addr16
mov
jle
gs
sbb
xor
xor
aam
fbstp
ds
mov
cld
shll
mov
and
imul
pop
jne
pop
jmp
js
pop
jecxz
sti
dec
dec
and
ja
jle
dec
ds
dec
adc
jp
sarb
aad
push
and
insb
push
xor
lds
and
call
sub
pop
cmc
sti
or
mov
push
dec
add
sbb
scas
mov
xlat
test
cmc
push
cmp
jl
jge
out
mov
mov
mov
stos
sbb
lds
push
cli
jp
gs
fisttpll
dec
xchg
movsl
mov
es
sti
push
xor
out
not
sbb
push
mov
xchg
int
mov
icebp
cwtl
and
dec
push
in
mov
sub
repz
mov
adc
ss
sbb
stos
mov
test
int
push
adc
dec
mov
rcll
cld
mov
dec
daa
out
lods
ret
fsubl
je
lea
lcall
test
in
push
clc
filds
test
ljmp
dec
stos
pop
enter
pop
cmp
mov
jp
xchg
cmp
mov
jno
xchg
clc
fisubl
jl
ljmp
sbb
into
ljmp
and
inc
fsqrt
lea
inc
add
movups
lds
insb
fprem
aaa
cmp
lea
ss
lret
mov
pop
mov
push
xor
lret
mov
fmull
js
push
fcomps
cmpsb
mov
mov
in
push
inc
cld
cmp
inc
je
je
stc
jbe
xor
inc
add
dec
repz
adc
inc
ror
inc
incb
xchg
and
ds
in
push
or
push
or
jecxz
fstpt
mov
sbb
sub
enter
lahf
xor
dec
mov
test
insb
sub
jl
mov
pop
inc
out
or
dec
sti
adc
pop
lahf
push
sbb
mov
dec
push
xchg
aam
mov
pop
mov
out
and
fldcw
inc
xchg
lds
fmull
imul
test
pop
pop
mov
push
cmp
ja
gs
inc
and
test
mov
and
rolb
jecxz
daa
mov
gs
mov
clc
loope
data16
pushf
fnstenv
lods
sub
cld
sub
mov
outsb
sbb
sbb
push
nop
imul
xchg
loope
xor
dec
pop
in
pop
jne
in
std
stos
xchg
jl
repz
lret
and
scas
arpl
repz
shrb
jb
mov
test
pop
jne
ret
dec
outsb
and
or
loope
int3
pop
rorb
jne
pop
fcompl
aad
dec
test
ss
popa
mov
mov
in
mov
cmp
xor
fldt
inc
sbb
lret
std
push
mov
add
sbb
push
sbb
test
sbb
jae
and
mov
sub
push
jle
xlat
sbb
push
and
fstpt
dec
inc
adc
push
adc
sahf
xchg
lods
cltd
repnz
stos
cli
imul
jns
in
ss
sub
push
in
mov
jge
adc
or
and
dec
in
insl
jl
xchg
xchg
outsl
lcall
jb
push
adc
jle
fisubrs
out
adc
fucomi
cmpb
cmp
int3
pop
mov
sub
nop
xor
mov
nop
ds
notb
sub
aaa
fimuls
and
test
mov
sub
pop
div
mov
push
xor
sbb
xor
mov
dec
inc
or
bound
or
pop
cmpsl
dec
jge
push
add
std
inc
out
leave
cmp
mov
jge
push
mov
push
and
out
mov
mov
mov
mov
ret
lock
xor
ret
or
pop
push
cld
pop
pop
jle
mov
cmpsb
mov
out
sbb
cmc
cwtl
das
dec
lods
mov
fwait
imul
xor
push
stos
nop
dec
cmpb
mov
xor
mov
add
xchg
mov
xchg
jno
or
and
mov
loopne
sub
daa
lcall
sub
push
and
or
mov
fisubrl
test
and
xchg
or
mov
dec
sub
fwait
pop
push
push
das
sbb
lods
dec
mov
xor
push
sbb
dec
aas
jmp
push
insb
mov
sub
mov
pop
cmp
cltd
int
aaa
out
jo
test
ds
xchg
fdivrs
inc
mov
inc
testb
mov
je
lods
xor
stos
push
js
mov
push
mov
repnz
mov
inc
mov
jg
push
dec
jp
rclb
add
mov
dec
in
fidivl
mov
mov
addl
sub
mov
jmp
cltd
scas
test
addr16
dec
leave
xchg
cmp
mov
jp
and
in
mov
cmpsl
stos
enter
mov
inc
mov
ljmp
out
mov
test
xor
cmp
jl
mov
mov
pop
and
rclb
push
cwtl
pusha
scas
outsl
cmpsb
lods
mov
cmp
adc
sub
sbb
and
mov
or
insl
icebp
int3
sub
popa
add
adc
cli
mov
mov
xchg
jo
into
cld
movsb
adc
aad
sub
in
cmp
lret
pop
push
and
in
icebp
ret
cmp
mov
mov
and
push
cmc
aaa
adc
dec
movsb
test
cs
clc
outsb
call
push
aas
adc
insb
sbb
dec
cmc
dec
les
mov
jmp
cmp
mov
mov
pop
mov
add
xchg
xchg
ja
mov
cwtl
mov
int
scas
cmp
rorb
sub
scas
mov
xor
xadd
shrb
pop
jge
mov
push
push
outsb
add
xchg
lret
hlt
sbb
pop
sub
mov
call
adc
sbb
movsb
pusha
iret
out
ljmp
shl
add
lock
loop
jnp
mov
mov
rclb
or
jmp
mov
pop
push
push
pop
sbb
imul
fisttps
loopne
or
lret
divl
mov
in
cs
pop
js
mov
mov
adc
or
insb
scas
cltd
inc
pop
ja
add
ficoms
adc
add
cmpsb
add
icebp
adc
jg
jne
adcl
int
jp
jecxz
adc
fidivrs
int3
sarl
cmp
mov
repz
and
or
mov
jecxz
shlb
loope
sbb
jle
lret
movsl
dec
push
jl
call
cld
push
or
add
in
jg
sub
or
xchg
xor
popf
out
insl
sahf
mov
jb
mov
das
enter
mov
test
shl
jp
pop
xor
fdivrs
or
bound
push
movsl
aaa
data16
jnp
insl
test
repnz
int3
fildl
mov
mov
inc
push
pop
cmp
mov
inc
pop
inc
addr16
mov
icebp
sub
sbb
pop
rcrl
shr
xchg
mov
or
pop
push
data16
pop
cmpsb
loopne
jae
and
ror
and
xlat
lea
iret
nop
fists
add
popl
out
add
dec
mov
inc
lahf
xchg
icebp
jno
xor
adc
inc
xor
fisubs
nop
push
into
pop
fnstenv
mov
push
push
dec
fldt
xor
and
sbb
ds
bound
rorb
jae
pop
cmp
sbb
or
lcall
xchg
push
pop
lahf
xor
xchg
cmpsb
or
add
mov
iret
adcb
xchg
mov
add
in
cmp
dec
out
add
lret
adc
js
mov
adc
loop
sub
xchg
inc
pop
mov
pop
inc
cwtl
xchg
lods
fs
sub
stos
add
rol
jne
inc
and
mov
adc
cmp
push
pusha
jo
cmp
mov
hlt
dec
xchg
addr16
aam
arpl
lods
repz
push
loope,pt
out
jg
jp
cmp
les
ja
ljmp
mov
into
call
sub
push
movsb
cmc
pop
and
jb
sub
mov
mov
in
insb
nop
xor
cmpl
mov
mov
mov
jbe
sbb
outsl
mov
test
sbb
leave
add
incl
mov
push
lock
pop
imull
adc
cmp
pop
les
clc
mov
add
sbb
stos
mov
xchg
xchg
popl
or
xor
jle
daa
dec
dec
mov
xchg
pop
jp
cmp
jae
dec
lock
mov
mov
sar
loope
ficomps
mov
daa
jg
push
and
lea
pop
adc
mov
sbb
push
push
lret
xchg
sub
cmp
addr16
outsl
cmp
xchg
add
add
loopne
es
sti
push
addb
push
mov
inc
daa
hlt
popf
imul
daa
pop
repz
pop
inc
bound
sub
and
leave
fcompl
loopne
mov
imul
add
sbbl
rcr
test
add
cmp
cmp
adc
fs
ljmp
push
xchg
cmp
ret
test
call
dec
in
push
inc
inc
pushf
call
xor
repz
adc
and
pusha
mov
mov
repz
jp
xchg
xlat
xchg
hlt
cmpsl
rolb
sarb
bound
les
js
and
punpckldq
iret
mov
or
popa
mov
lret
jbe
rolb
xor
inc
mov
incl
or
or
dec
addr16
sbb
mov
sti
xchg
int
cmp
into
cmp
icebp
fnstenv
push
xchg
push
cmc
dec
xchg
aaa
jmp
fldl
fildll
repnz
je
cmp
dec
mov
test
ljmp
std
addr16
pop
andb
aas
push
sub
in
call
and
mov
loope
out
add
mov
into
cmp
mov
add
je
add
adcl
cs
int
push
mov
xor
or
or
adc
xchg
call
test
adc
mov
adc
push
hlt
and
add
jge
popa
stos
imul
mov
fs
mov
in
mov
dec
push
push
mov
push
outsb
cmp
ds
fcmove
mov
lret
inc
lret
push
fs
loop
cmp
pushf
out
divb
add
jg
sbb
clc
aas
push
js
add
mov
xor
fs
sbb
leave
sarb
lcall
rolb
pop
jne
cmc
aas
lock
add
push
jl
les
scas
jle
dec
sub
and
cmpsl
sub
test
pushf
inc
jae
push
fstl
jb
negb
sti
jp
sub
aad
xorb
add
sahf
cmc
sbb
xchg
insb
sub
mov
and
cmp
or
testl
icebp
mov
orb
xor
out
pop
mov
or
repnz
mov
enter
push
gs
mov
test
mov
xor
xchg
cld
sbb
mov
xor
jo
sbbb
mov
xorb
mov
cltd
add
mov
int3
jb
ss
rcl
push
add
fsubrl
jmp
or
jl
aam
mov
adc
stos
dec
mov
xchg
sahf
ss
int3
and
mov
sbb
sbb
jns
cld
fistpll
xchg
or
sub
inc
fs
and
pop
leave
inc
pusha
cmp
add
push
ds
xor
pop
in
sbb
jb
and
sbb
adc
outsb
sbb
loop
push
ret
sub
pop
push
test
dec
mov
cmp
cwtl
ja
xor
xor
jns
cli
div
fwait
push
mov
push
daa
subl
outsl
dec
jb
lds
adcb
test
add
shlb
jnp
jmp
sbb
bound
les
sar
mov
xor
jo
rclb
add
jae
cmpsb
inc
inc
in
ljmp
pop
adc
adc
jo
cmp
jo
jl
cli
std
sbb
and
mov
call
stc
cmp
and
int3
sub
jb
add
jge
xchg
mov
in
pushf
mov
scas
mov
mov
test
mov
xor
xor
add
add
pop
pop
test
ja
sbb
pop
jns
sub
stc
pop
mov
dec
pop
xor
xlat
mulb
loope
mov
mov
outsb
movsl
fisubrs
xlat
pop
and
add
cmp
xchg
dec
jg
nop
and
stc
and
lret
fcmovnbe
adc
xor
in
scas
mov
sbb
jp
lods
push
cmp
addl
icebp
adc
pop
adc
pop
mov
mov
add
jge
sub
in
in
jmp
sarl
jns
loop
mov
jns
mov
sbbl
test
adc
and
jno
rorl
mov
sbb
ljmp
stos
mov
xchg
ret
aad
inc
outsb
cmp
push
jne
lods
cltd
or
mov
mov
mov
andb
fidivl
push
xchg
stos
loopne
cmp
test
xchg
outsb
imul
cmp
mov
xor
and
sbb
nop
push
int
xor
fs
mov
lods
data16
imul
in
cmc
mov
out
pop
sbb
mov
lds
jbe
outsb
sahf
lds
xchg
sub
arpl
jo
sub
pop
mov
cmp
xor
test
daa
mov
add
shll
aad
sbb
movsb
cmpsb
lret
or
fwait
imul
pop
push
mov
movsl
push
pop
nop
ljmp
and
xor
cwtl
in
jb
jo
cltd
cmpsl
cmp
push
cltd
cli
lds
mov
pop
ret
and
lock
inc
inc
ret
mov
push
lods
mov
dec
jns
mov
sbb
fcmovb
out
popl
push
push
inc
out
inc
stos
subl
mov
std
aam
js
pop
jae
cli
les
in
push
push
pop
sahf
neg
inc
cwtl
jnp
jg
mov
push
lret
add
mov
lock
mov
in
dec
xchg
mov
dec
lret
sub
insb
pop
or
cmp
mov
xor
enter
ja
cmp
addb
lds
scas
mov
pusha
jb
fimull
push
out
or
aas
inc
orb
or
inc
outsb
inc
jl
cld
jmp
lods
stos
jl
rol
stos
inc
adc
and
mov
sbb
inc
mov
jns
test
pop
stc
xchg
xchg
aas
dec
int
ret
xchg
add
mov
test
or
test
mov
call
out
jno
aad
mov
jp
sbb
movsb
iret
inc
or
jp
out
add
add
sub
mov
leave
lock
push
rolb
push
ficoml
inc
out
pop
pop
adc
dec
add
or
push
and
pusha
pop
out
xor
adc
pop
ret
stos
sarb
mov
js
fisttpll
aas
in
ret
imul
rcrb
or
test
aad
lods
data16
fistps
inc
mov
adc
or
aas
pop
pop
cmp
orl
test
mov
test
and
call
lret
mov
movsl
lcall
jle
sub
scas
cld
push
mov
orl
jg
mov
adc
repz
aad
dec
jo
iret
xchg
fld
mov
pusha
test
test
lods
push
lret
or
jnp
jnp
fstp
je
jecxz
xor
pop
nop
xlat
mov
dec
jb
popf
lods
stos
imul
lods
imulb
inc
add
lea
into
bound
push
es
xor
je
or
stos
push
xchg
pop
mov
aas
loopne
push
push
sub
inc
fsts
dec
sbbl
insb
inc
mov
ficoml
jecxz
daa
push
js
test
push
test
imul
jecxz
dec
sarb
sub
mov
sti
outsl
sbb
push
push
dec
testl
pop
andb
loopne
rorb
mov
mov
pop
test
jge
pop
bnd
lret
jae
mov
xor
sar
lods
inc
mov
xor
or
cmp
add
enter
cmc
fsts
cmp
cmp
imul
add
mov
inc
es
enter
insl
inc
cmpsb
push
lds
xor
jp
scas
adc
mov
add
stos
push
ret
call
fwait
js
fcomps
jle
lahf
push
xchg
shl
rcll
adc
ds
jl
adc
jp
rcrb
loope
sub
loop
in
addr16
int3
jg
sub
sbb
aad
movb
dec
jbe
bound
sti
and
enter
or
fistps
outsb
lods
rclb
movsl
add
xor
movsb
sub
dec
out
fldenv
ds
jb
add
lret
iret
xchg
daa
lret
ud0
xchg
adc
push
mov
mov
popf
das
imul
mov
sbbb
sti
jle
lret
in
iret
push
sub
das
inc
popa
sbbb
push
and
rcrb
push
xor
mov
sbbl
test
adc
mov
mov
test
pop
dec
stc
and
xchg
movsl
sbb
sti
test
stc
adc
mov
add
cmp
push
dec
mov
icebp
dec
xchg
call
xchg
cmp
inc
pop
adc
mov
pushf
icebp
popa
loop
jge
ljmp
mov
dec
pusha
test
sbb
aaa
add
inc
outsb
sub
mov
sub
int
mov
jne
dec
inc
sub
mov
flds
jo
addr16
insb
inc
jne
sub
addr16
mov
xor
mov
out
stc
cld
inc
adc
adc
pop
mov
adc
pushf
aaa
cli
bound
dec
push
inc
scas
pushl
movsl
jns
mov
cmpl
sub
cmp
inc
lds
fstpl
sarb
push
adc
cmpsb
hlt
out
mov
addb
mov
popf
push
and
dec
fs
xchg
imul
inc
iret
arpl
cs
movsl
mov
mov
dec
cs
outsb
push
jle
mov
and
xor
addr16
shll
pop
int
icebp
mov
push
movsl
dec
ljmp
and
insl
xchg
in
js
cli
orl
jbe
and
cli
out
sbb
fiaddl
test
aad
jbe
dec
adc
cmpsb
xor
lods
mov
pop
in
orl
add
cmp
cwtl
and
and
imul
cmp
ds
pop
or
sti
inc
lods
ret
pop
pop
dec
sbb
cmp
mov
imul
inc
sbb
dec
pop
outsl
xor
sbb
and
xchg
into
pop
insb
arpl
pop
loop
dec
cwtl
call
shrl
cmpsl
lea
lods
or
testb
push
shll
cmp
cmp
or
rcrl
fldt
and
dec
or
fdivr
loope
dec
add
andps
add
push
push
mulb
push
xchg
xor
push
xchg
in
jge
cmc
daa
inc
dec
out
inc
pop
push
sbb
leave
mov
xor
push
and
mov
mov
lods
repz
out
lods
jo
mov
pop
addr16
and
js
mov
adc
hlt
sahf
ds
lret
add
enter
ds
inc
das
dec
xchg
jbe
scas
add
dec
sub
mov
scas
sti
mov
sbb
sbb
xchg
lods
js
cmp
adc
inc
loope
in
jno
or
lret
pop
cld
mov
cmp
bound
inc
sub
mov
xlat
xchg
pop
push
ret
xor
out
push
data16
jl
mov
les
or
popf
xchg
or
lahf
push
dec
lods
adc
outsl
add
mov
fcoms
sbb
aam
ds
movsb
cmp
mov
jne
mov
test
and
sti
mov
out
xor
push
and
ja
ret
add
add
out
sub
cmpsb
jecxz
les
in
fwait
xlat
mov
sbb
pop
ds
add
sahf
pusha
mov
inc
test
xor
sub
lea
mov
mov
sub
ss
mov
in
xchg
cmp
dec
repnz
cmp
jae
add
push
lret
dec
popf
inc
in
pop
sti
lret
sarb
in
lcall
popf
ficomps
jle
xchg
outsb
sbb
pushf
rcll
pop
xor
fstpl
cmp
mov
out
lods
inc
das
pop
xchg
cltd
pusha
jae
roll
or
pop
out
out
sbb
lods
xlat
adc
pop
es
push
or
aaa
sub
sub
cmp
mov
int3
enter
outsb
sbb
iret
mov
or
sub
sbb
pop
dec
pop
imulb
mov
mov
cmp
in
sub
scas
pop
mov
cmpsb
jb
movsl
jle
jne
dec
je
repnz
les
cltd
mov
xchg
mov
hlt
sbb
push
dec
dec
dec
cli
xchg
mov
outsl
sub
push
repz
or
stos
fistpll
clc
in
cmp
andb
cltd
sbb
or
pusha
cld
js
dec
mov
aam
fwait
stos
es
ljmp
aad
or
cmp
sub
leave
out
jbe
addl
movsb
mov
sub
sub
aad
mov
mov
lahf
dec
out
mov
mov
je
scas
mov
shlb
sbbl
push
push
or
adc
add
pop
xchg
mov
test
jge
add
shll
mov
outsb
and
push
mov
sub
and
xchg
rcl
lods
mov
ja
out
jmp
lock
decb
cld
jne
sti
xor
inc
push
incb
push
and
jmp
in
daa
sarl
jl
loopne
cmp
and
sub
xchg
shll
jb
pop
inc
aad
inc
sbb
fcomps
push
pop
mov
xchg
pop
add
dec
lock
insb
pop
imul
jno
jbe
adc
insb
xor
call
and
lods
insb
pushf
mov
jbe
dec
sub
mov
or
fcmovnu
pop
notl
cmpb
xchg
insl
mov
lahf
sti
mov
mov
add
roll
test
inc
sahf
jnp
mov
pop
in
pushl
out
jbe
cld
push
inc
adc
jns
inc
andb
pop
inc
lds
stc
push
pop
sti
shl
or
fnstenv
lret
lret
mov
mov
pop
leave
pop
adc
adc
lods
scas
inc
inc
dec
push
aas
jge
in
inc
nop
hlt
inc
aas
pop
out
adc
out
sub
inc
movsl
xchg
call
mov
test
test
push
jg
test
test
inc
jecxz
mov
or
rolb
push
cltd
cld
cwtl
push
test
push
or
xor
adc
fsubrl
sbb
sbb
pop
fstpt
cmc
cmc
stc
push
cmp
jno
in
insl
loop
adc
add
loop
cli
movsl
xchg
aam
stos
aas
sub
lret
dec
mov
imull
cmpsl
ret
push
cmp
fcmovnu
mov
int3
cltd
mov
add
sub
fldl
jp
or
mov
pushf
repnz
dec
movsl
jge
test
mov
or
clc
arpl
lcall
inc
adc
lahf
ret
fidivrl
mov
cwtl
cmp
xor
insl
jnp
sub
fnstcw
loop
push
mov
pop
push
bound
mov
xchg
pop
xchg
adc
loope
adc
add
add
aas
adcl
pop
jp
mov
clc
mov
aam
sub
dec
sbb
out
pop
outsb
push
sub
into
ss
adc
clc
cmc
inc
dec
in
lds
inc
xchg
and
insl
push
shlb
in
jno
jg
mov
jb
imul
inc
mov
into
inc
ljmp
push
daa
cmp
add
add
call
scas
fmulp
mov
mov
jl
nop
aam
add
dec
jno
adc
movsl
adc
fs
insb
imul
cmc
sbb
insl
adc
adc
xor
or
movsb
lea
sub
inc
add
aad
jns
sub
std
testl
jne
jp
adc
ss
jo
xchg
pop
xchg
sbb
cli
xor
sbb
ds
loop
mov
pop
push
mov
and
dec
mov
cmp
aas
faddp
out
cmp
mov
call
and
add
nop
pop
sar
or
out
xor
jl
cwtl
clc
xchg
pop
insb
test
adc
pushl
lret
outsl
sub
mov
leave
lea
or
mov
int
cmp
sahf
mov
push
sub
mov
arpl
imul
mov
stc
stos
mov
jecxz
xchg
xchg
or
test
sbb
mov
hlt
inc
rcll
sarb
mov
mov
lahf
xor
jnp
adc
sub
mov
repz
fistl
fisubl
jge
jecxz
xchg
lcall
cmp
into
and
insl
leave
adc
repz
mov
out
mov
push
push
inc
dec
pop
jno
call
fldcw
shrb
nop
xchg
xchg
loopne
arpl
arpl
out
ret
scas
inc
fistpll
popf
loope
xorl
fstl
pop
sbb
sbb
test
adc
stos
jg
lret
test
xchg
fildll
add
ret
mov
test
mov
bound
sbb
jbe
lcall
xor
jb
cmpsb
push
leave
aam
xor
movsl
insb
mov
scas
scas
dec
dec
test
mov
jl
aad
out
sbb
repnz
adc
push
xchg
and
aad
test
enter
nop
call
sbb
sbb
push
push
scas
arpl
jnp
mov
pusha
jnp
adc
or
nop
sbbl
pop
push
daa
mov
in
xlat
mov
fwait
inc
test
push
aad
scas
sub
lods
xchg
mov
dec
lret
stc
mov
push
mov
imul
test
adc
sbbl
arpl
je
dec
cmpl
lods
adcb
les
stos
cs
and
dec
xor
mov
mov
icebp
mov
mov
les
int3
test
imul
push
pop
pop
rcrl
push
jle
inc
int3
mov
inc
fninit
push
dec
cmp
dec
add
cvttps2pi
rcrl
add
add
dec
mov
aas
mov
pusha
sbb
jne
and
gs
pop
pop
xor
cmp
push
and
pop
lret
dec
push
inc
or
push
xchg
mov
out
xor
aad
fbld
mov
outsb
xchg
mov
mov
jge
xor
mov
lret
lret
inc
mov
pop
fisubl
push
test
pop
push
fs
xor
adc
inc
pop
mov
push
inc
or
sub
or
je
dec
test
adc
jbe
jecxz
in
mov
fisubs
dec
jae
loope
repz
or
pop
xchg
ljmp
lds
xchg
and
jno
out
scas
ds
mov
imulb
dec
dec
or
inc
into
and
into
dec
or
pop
cmc
mov
fidivs
arpl
lock
cmp
or
add
aam
jl
push
cmp
fbld
pop
mov
movsl
mov
pop
int
pop
js
inc
lds
adc
pop
add
cmpsb
jb
pop
sbb
inc
sbb
cmpsl
cltd
jp
and
push
push
test
or
xor
xor
pop
in
in
bound
inc
ss
jo
jne
add
dec
stos
out
test
in
movsl
jae
cli
push
dec
ja
jmp
pop
cmc
jmp
ror
sbb
negb
fs
scas
movsl
test
mov
dec
aaa
mov
fcmovbe
pop
addr16
movb
orb
loop
mov
gs
push
mov
das
cmp
dec
rorb
icebp
in
xchg
xor
cmp
sub
and
mov
lock
jmp
push
mov
add
sbbb
add
movsl
lock
out
mov
dec
in
leave
cmp
out
imul
push
xchg
rol
sbb
sub
or
pop
sub
mov
ds
inc
mov
mov
dec
jnp
mov
dec
insb
pop
jbe
scas
sbb
lcall
test
push
jb
leave
sbb
sarl
rcll
xchg
add
bound
lods
and
and
insb
push
push
lea
pushf
pop
pop
js
loope
push
fucomi
movsl
shlb
insl
addr16
in
repz
jb
dec
push
call
hlt
in
divb
cmp
out
popf
mov
mov
add
pop
mov
mov
add
mov
mov
cld
inc
jmp
xchg
pop
xchg
test
test
xor
loop
xor
inc
ss
xchg
in
ret
dec
add
lret
jge
xlat
loop
jb
pop
popa
xchg
cmp
mov
dec
pop
cmpl
dec
std
xchg
sub
scas
mov
dec
xchg
add
call
popa
mov
dec
sub
cmpsl
mov
in
jl
insb
out
mov
hlt
push
iret
and
addl
inc
in
nop
int3
arpl
sub
jo
pop
or
and
scas
mov
add
bound
sub
stc
mov
and
scas
dec
push
xor
pop
ljmp
mov
pop
sbb
sbb
xchg
scas
mov
in
pusha
insb
adc
dec
fwait
loop
pop
enter
cwtl
cmpsl
lret
push
test
orb
xchg
testb
push
jae
add
xor
push
cmp
cmp
cwtl
imul
test
push
shl
in
inc
pop
mov
pop
sahf
test
xlat
pop
pop
inc
or
push
inc
push
leave
or
mov
jg
xor
stos
ficoms
or
cltd
or
daa
cmpsl
mov
fidivl
mov
in
push
movsl
orb
sbb
in
push
push
xchg
cmp
push
add
add
and
sbb
mov
pop
sahf
sar
out
or
push
mov
cs
inc
or
jg
repz
mov
fchs
mov
cmp
mov
cmp
jno
aaa
and
outsb
shlb
outsb
push
repz
adc
xor
adcl
jg
xchg
iret
push
and
ja
mov
loop
mov
push
repz
mov
cmpsl
jbe
push
int
fistpll
enter
xchg
loop
arpl
cmp
add
bnd
pusha
mov
loope
cmc
jmp
std
dec
sarb
push
sub
stc
push
loopne
ja
fcomps
in
jo
cmp
cmp
mov
ret
adc
fucomp
and
popa
sub
lret
mov
cs
xor
insb
xchg
subl
push
scas
lret
xlat
cmc
adc
cli
in
jns
jl
inc
xchg
cltd
inc
xor
mov
cltd
mov
adc
and
sub
push
in
into
ljmpw
outsb
sub
push
or
or
mov
js
insl
push
push
pop
movl
lret
lahf
jbe
adc
insb
mov
inc
not
mov
out
sysexit
in
xchg
pop
aad
sub
mov
cmp
pop
jl
lods
and
loop
mov
adcb
lods
inc
scas
jl
push
or
shlb
sub
add
xor
cmp
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
imul
push
adc
mov
xchg
js
lahf
mov
xchg
sbb
jl
fs
mull
bound
dec
stos
popa
ljmp
int
xchg
shll
jl
ja
xchg
das
popa
mov
lea
inc
cwtl
mov
or
mov
out
sahf
out
cltd
ljmp
bound
cmp
xorl
pop
inc
add
fcmovnu
sub
in
mov
mov
sub
les
in
scas
mov
jl
adc
fwait
xor
xor
jnp
leave
inc
jnp
mov
lods
dec
pop
das
push
mov
lds
je
out
xor
and
mov
out
and
mov
enter
out
in
cli
mov
cmpsl
ds
fistpll
push
adc
scas
jbe
push
cmp
inc
xchg
or
js
shll
push
jl
cld
xchg
jbe
dec
cli
pop
mov
jae
scas
rclb
neg
push
lcall
mov
or
rcl
decb
insl
psraw
inc
add
fdivrs
xchg
dec
std
and
add
in
lock
rorb
sti
xlat
inc
push
fwait
xor
xchg
mov
or
dec
movsl
rorb
movsb
jp
lret
sbb
test
sub
sti
aas
mov
sub
fcoml
sbb
addr16
mov
pop
add
cmpsl
mov
jmp
out
mov
lret
movsl
sbb
and
stos
mulb
xor
sbb
imul
and
push
pop
add
or
mov
outsl
adc
pop
push
push
inc
iret
mov
ds
lds
dec
test
inc
iret
jnp
mov
inc
imul
jno
in
movsb
stc
pop
push
out
adc
out
sbb
sahf
outsb
fdivrs
lret
mov
push
jl
pop
cmpsb
ja
mov
aas
out
cld
out
xchg
push
add
sbb
push
stos
cs
roll
jmp
dec
pop
mov
movsb
test
inc
inc
ljmp
push
std
push
inc
sbb
sub
leave
scas
ds
push
pop
xchg
mov
int3
bnd
xchg
cmp
dec
inc
in
push
pop
aas
hlt
cmp
cmp
push
shrl
mov
push
pop
fwait
mov
repz
subb
push
mov
push
pop
aaa
lds
mov
inc
sub
dec
les
cmpsl
jg
xor
mov
arpl
sbb
movsb
push
aad
outsl
pushf
add
pop
shll
cmp
cmp
out
aam
jge
lcall
sbb
pop
lret
cwtl
addb
iret
pushf
jg
pop
xchg
cmc
push
mov
or
inc
mov
xor
jns
shrb
cltd
pop
pop
lock
pop
outsb
jp
push
fcmovnbe
pop
imul
cld
sarl
adc
stc
dec
test
push
in
jno
imul
dec
push
jns
sub
sarb
pop
cs
stc
roll
or
adc
lock
cmp
pop
push
std
int3
mov
mov
push
stc
pop
mov
mov
jl
mov
inc
jmp
in
insb
subl
cmp
push
sahf
dec
lds
sbb
and
mov
mov
std
cmpsl
add
sub
mov
adc
test
out
shrl
xchg
call
dec
pop
bound
sbb
lock
push
cld
leave
mov
jl
loopne
add
adc
aaa
mov
lea
fs
popf
arpl
xor
jne
and
dec
int
roll
add
std
jbe
jbe
push
xchg
arpl
imul
aam
push
cmp
dec
mov
xlat
push
cmpsl
scas
jbe
outsb
pop
dec
jbe
inc
scas
xchg
cld
dec
rorb
mov
add
lret
push
dec
adc
mov
movsl
jne
jle
jge
cwtl
push
lds
sbb
addb
xor
xor
adc
sbbw
imul
loop
fisttpll
icebp
sub
pop
fcoms
ja
and
movsl
add
sub
sbb
sarb
fwait
and
shll
into
rcll
jmp
cmp
mov
mov
js
aad
test
push
imul
int
in
lods
fldenv
inc
push
jb
cmp
add
mov
xorb
mov
sub
loope
cmpsb
adcb
ret
and
cltd
xor
inc
inc
mov
decb
sbb
mov
mov
xchg
mov
int
cld
push
cmp
aaa
stc
jo
dec
push
inc
negl
fnstsw
xchg
int
sahf
xor
push
cmp
cmp
xchg
add
loopne
push
and
sbb
movsl
xor
xor
xlat
jle
gs
leave
cs
push
cmp
adc
mov
mov
push
and
mov
iret
xor
popf
into
pop
ret
pop
jb
add
xor
ljmp
jmp
loope
sub
inc
in
xchg
inc
jmp
popf
dec
lret
cmpsb
test
jmp
mov
jg
add
jns
push
adc
push
ret
mov
mov
js
xchg
dec
int3
pop
daa
mov
pop
arpl
jne
sub
xchg
dec
movsb
sub
in
add
cmpsl
mov
lret
movsb
mov
xor
adcb
ja
stc
xchg
xor
rclb
loope
pusha
js
aaa
loopne
mov
sbb
mov
aaa
cmpb
mov
popa
mov
inc
lcall
xchg
cmp
imul
xor
xchg
push
mov
cmpb
cmc
pop
pop
outsl
sbb
rcrl
sub
mov
jne
lea
and
int3
daa
int
loope
es
jo
outsb
fidivrl
pop
pop
shlb
stos
cltd
movl
out
repz
iret
in
testb
add
lret
filds
je
imul
fsubr
movsb
movsb
addl
das
mov
dec
into
adc
and
pop
push
xchg
les
xchg
aas
xchg
mov
cltd
mov
dec
mov
mov
es
jno
repnz
dec
and
xor
imul
leave
test
in
popf
fs
and
cmp
sub
jns
stos
pop
ljmp
les
pushf
push
push
arpl
ja
and
pop
mov
fcoml
mov
scas
in
cmc
ret
mov
xchg
jl
loope
les
lahf
or
mov
sub
cmp
mov
pop
out
add
mov
push
lret
push
jl
and
adc
fwait
stos
cld
rclb
add
js
sbb
inc
fwait
sar
stos
movsb
cmp
cmpsl
sbb
cmp
sub
xchg
cmpsb
pop
adc
push
dec
adc
aam
hlt
mov
mov
pop
aam
fs
int3
ret
pop
inc
sahf
fisttpl
mov
and
decb
cmp
sub
inc
fnstcw
fdivs
adc
movsb
add
jnp
lock
sbb
test
add
xchg
std
mov
cmpsb
jmp
pop
mov
cltd
xor
imul
in
sub
lods
pop
rclb
mov
daa
outsl
sub
xchg
in
fdivl
jge
mov
or
sbb
mov
inc
adc
and
cmpb
sub
inc
mov
pop
out
pushf
pop
fdivl
xchg
jnp
mov
and
cltd
orl
dec
add
mov
lret
push
ficoml
xchg
stos
test
shrl
pop
scas
movsl
aaa
shrl
scas
sbb
in
test
xchg
testl
call
sub
stos
jns
cmc
movsb
mov
sti
inc
push
aas
neg
xor
shlb
pop
and
and
aam
adc
orl
pop
daa
cmp
dec
scas
cwtl
sub
mov
cmp
cmpsl
mov
or
cs
in
stos
aam
pop
push
push
movl
cld
push
mov
inc
rcrb
hlt
xchg
jo
pop
out
xor
imulb
in
push
mov
jne
mov
inc
inc
in
jecxz
jg
cmp
xchg
or
cltd
cld
outsl
jg
les
fdivp
pushf
pop
jne
lods
subb
aad
arpl
add
dec
scas
add
orb
dec
movsl
sti
push
repnz
add
sahf
std
inc
cmp
sub
inc
adc
mov
insb
mov
ror
scas
dec
stos
cmp
out
pop
imul
adc
or
orb
add
adc
adc
xchg
pop
pop
cmpsl
lods
mov
push
dec
pop
nop
pop
ja
loope
das
jge
pop
insl
out
fsubl
xor
sarl
out
stc
or
dec
xor
out
push
mov
and
pop
dec
xor
sahf
xchg
sub
daa
dec
shll
cmp
cwtl
mov
push
sarb
push
lods
sbb
dec
movsl
gs
xchg
mov
cwtl
mov
enter
mov
sahf
aas
cli
outsb
jns
xor
mov
push
mov
push
out
iret
fs
fiadds
fwait
adc
sub
push
adc
fisttpll
cs
outsl
or
pop
dec
neg
dec
mov
xor
scas
loop
cmp
or
shrl
jbe
gs
outsl
leave
mov
popf
pop
dec
push
jne
pop
fbld
jle
outsb
jmp
incl
stos
or
mov
add
dec
xor
pop
push
fldt
aas
mov
scas
loope
call
sub
mov
sbb
es
push
fsubl
pop
mov
add
bound
cwtl
sub
test
and
mov
push
test
popa
cmp
data16
jbe
and
hlt
add
pop
stos
sub
test
sbb
mov
mov
xchg
push
ficoml
ljmp
sbb
cld
pop
fcompl
outsb
and
mov
lock
mov
pop
xor
mov
subb
js
icebp
scas
loop
mov
push
iret
cmp
push
cmp
mov
pop
lods
jo
lea
push
aad
jnp
dec
cmpsl
pop
int3
push
outsl
mov
lret
cmp
loopne
jg
adc
ds
inc
sbb
cmpsb
fbld
js
xor
mov
cmp
lock
popf
push
push
pushf
xchg
int
cltd
push
adc
les
ret
jne
push
mov
orb
hlt
xchg
fwait
lcall
sub
mov
cld
adc
jle
iret
stc
adc
inc
pop
inc
push
cmc
cmp
push
jae
std
and
int
sbb
mov
movsb
jge
jle
cmp
mov
dec
mov
notb
fnsave
jbe
and
cmp
rorb
test
or
pop
fsubs
cmc
das
fcomip
jecxz
sub
imul
xchg
out
lea
or
in
add
in
out
adc
movsl
or
lods
add
and
movsb
cli
pop
aaa
out
push
sbb
mov
xadd
jge
inc
adc
loopne
les
mov
mov
xor
insl
inc
fistl
pusha
mov
xchg
stos
mov
push
in
fcmove
daa
stos
testb
loope
mov
cmp
xchg
insb
loopne
mov
lret
pop
sbb
push
mov
push
test
cmc
scas
aam
dec
scas
pop
mov
mov
xor
out
sti
repz
dec
pop
fwait
xor
mulb
test
xchg
imul
push
orb
jp
lods
xor
lahf
or
push
out
push
incb
daa
add
xlat
repz
jae
icebp
jae
shll
outsl
lret
cmp
test
add
sbb
lods
inc
and
shrb
push
clc
rcr
movsb
add
or
ja
push
or
into
sar
insl
jl
into
loope
push
jns
cmp
sub
std
and
jo
pop
jne,pn
pop
loop
cmpsb
jne
pop
out
icebp
icebp
negb
pop
jmp
std
xchg
int
xchg
out
dec
dec
or
jbe,pn
fcomp
sbb
dec
cmp
jle
mov
cmpsb
sbb
out
xor
mov
push
push
fdivrs
or
outsb
insb
iret
xor
lcall
pop
stc
jp
rcr
push
pop
jb
dec
mov
imul
mov
jb
jmp
fsubrs
loope
mov
sti
fsubp
andl
xchg
push
andl
loop
jne
jmp
inc
jle
push
pop
sbb
mov
popf
stc
inc
sbb
ja
cmp
mov
mov
loop
xchg
pop
addl
les
fwait
cwtl
add
mov
mov
push
cmp
add
icebp
incl
xor
sbb
xor
mov
adc
xor
dec
xor
fldenv
xorl
cld
inc
daa
js
popa
mov
cld
jnp
into
adc
sbb
test
xchg
gs
lret
add
cmp
int
mov
xchg
xchg
inc
jno
push
jns
pop
test
clc
jp
lret
fimuls
jecxz
test
push
mov
or
lret
or
cmpsb
fistl
adc
push
pusha
ss
or
fs
aam
fnstenv
idiv
push
dec
add
mov
enter
xchg
add
shl
test
sub
fstl
mov
jle
xlat
cmp
mov
fstp
stc
ret
xor
mov
ficoms
adc
push
jo,pn
call
mov
or
add
push
xor
enter
sbb
into
lods
jle
mov
xor
pop
lds
sbb
enter
sub
mov
sbb
xlat
pop
pop
ljmp
and
pop
inc
add
cmp
cmpsb
xchg
outsl
mov
xchg
imul
xchg
mov
cmp
jmp
imul
pop
ja
pop
in
aad
pop
std
bswap
pop
outsl
xchg
mov
jns
addr16
cltd
jg
daa
dec
cmpsb
rcll
int3
pop
and
outsb
popf
xorl
xor
incl
mov
rcrl
push
pushf
cltd
mov
stc
sbb
lock
stc
push
mov
or
push
xor
imul
idivl
xchg
ret
scas
ret
outsl
fisubrs
xchg
inc
std
mov
or
scas
fsub
insl
add
xor
ljmp
out
sbb
mov
mov
ret
scas
insb
xor
cmp
pop
dec
xchg
xchg
test
mov
cmc
es
xchg
mov
mov
leave
cmp
cmpsl
jg
mov
adc
sbb
outsb
mov
push
inc
sahf
mulb
jge
add
jbe
jbe
mov
mov
mov
pop
cmp
fdivrl
frstor
jmp
lret
out
or
mov
and
es
pop
iret
test
in
gs
mov
sub
mov
xor
fstpl
in
out
mov
add
aad
add
test
xchg
adc
push
xor
cmp
ret
jb
rcrl
leave
je
and
in
mov
shl
push
pop
push
aaa
inc
xor
fmulp
mov
inc
xlat
mov
sub
out
data16
ja
pop
das
mov
lea
sub
rcr
xchg
dec
and
pop
mov
fcompl
in
sbb
data16
sub
scas
xor
inc
hlt
in
mov
jne
adc
aam
add
test
fcoml
imulb
cmp
lods
or
pop
loop
iret
testl
icebp
mov
mov
or
lahf
loope
lret
inc
cmp
pushf
add
call
aam
push
adc
push
movsl
nop
and
fwait
xchg
or
fiadds
mov
loopne
movsb
and
and
xor
add
pop
mov
pusha
add
xchg
sbbl
jge
pop
and
clc
sbb
jb
into
xchg
sub
mov
pusha
push
dec
jo
or
mov
fistpll
inc
cwtl
sbb
sbb
pushf
xor
fwait
sub
nop
cmpsl
pop
shlb
outsl
mov
test
or
sub
lock
mov
mov
mov
mov
icebp
push
jb
out
aas
mov
loopne
insb
sub
sahf
jae
xchg
fdivrl
xchg
loopne
mov
das
into
int3
cmpsl
push
or
outsb
lret
or
outsb
add
out
mov
nop
leave
or
xor
dec
or
jae
mov
arpl
add
cmpsl
inc
or
xor
clc
test
xchg
add
cmp
mov
addr16
xor
mov
inc
scas
clc
pushf
inc
test
or
xor
inc
pop
addr16
rcr
inc
and
insl
push
mov
aad
lret
jg
push
or
jmp
pop
shl
jne
mov
dec
pmaddwd
pop
std
lods
pop
inc
inc
hlt
mov
outsb
repnz
loop
inc
xlat
shlb
gs
add
inc
lock
out
outsb
fsubs
nop
movsb
pop
ja
aas
add
outsb
jb
xchg
add
or
pop
in
mov
dec
sub
mov
shrb
pop
mov
add
pslld
push
mov
mov
mov
mov
push
data16
cld
xchg
out
sbb
repz
xor
inc
mov
pop
push
sbb
icebp
adc
cmpsb
adc
mov
repz
dec
in
inc
push
dec
repnz
call
or
xchg
inc
sub
and
jb
mov
out
cmc
xorps
fwait
fwait
jno
dec
dec
hlt
dec
cmp
adc
mov
cmp
and
adcb
pop
mov
jmp
cs
scas
scas
mov
mov
lds
push
pop
inc
insl
cli
repz
adc
adc
cmp
int3
in
daa
jne
js
lds
jg
stos
mov
add
push
movsb
jo
and
cmp
sbb
cwtl
or
iret
mov
rolb
xor
aad
xchg
fbld
jb
xlat
inc
sti
xlat
mov
sub
jp
sbbl
dec
dec
pop
stos
lcall
andb
lret
mov
pop
in
in
push
insb
jp
push
sarl
imul
insl
fimuls
sub
out
cmpsl
sbb
push
adc
int3
mov
add
ljmp
fistpll
fdivrp
push
jno
add
test
pop
fisttpll
cmp
int
xchg
jp
adc
and
loopne
pop
jne
rcrl
mov
outsl
hlt
mov
dec
subl
shrb
test
fwait
cmp
call
sub
scas
lock
out
jmp
and
dec
xchg
insb
sub
add
push
inc
xchg
inc
mov
addr16
xor
jo
int3
push
and
adc
mov
movsl
sub
aaa
das
fnsave
adc
push
mov
dec
inc
std
pop
mov
repz
stos
in
cmp
jb
gs
fidivl
outsl
inc
dec
push
xor
lcall
jae
outsb
push
pop
inc
sub
stos
add
mov
in
pop
xchg
adc
adcb
inc
push
int3
repnz
sbbb
xor
rolb
sub
es
add
add
and
je
jbe
test
shl
push
ja
sbb
div
jno
jns
sbb
or
sub
out
mov
mov
cmp
repz
rcrb
imul
mov
ss
pop
sbb
cmpsl
test
xor
scas
cwtl
scas
leave
or
inc
shl
mov
xchg
xor
stc
cmp
cmp
sub
xor
and
pusha
lea
test
dec
loop
xchg
enter
jns
mov
fisubl
inc
push
call
push
xchg
push
or
mov
jno
stos
pop
test
test
fidivrl
push
inc
cld
adc
pop
jmp
push
adc
sbb
xchg
inc
data16
cs
stos
fs
xchg
and
aas
xchg
jne
fnstsw
ljmp
inc
pusha
pop
jo
in
orb
inc
pop
mov
pushf
jae
dec
xorb
mov
mov
pusha
cmp
in
std
sub
add
loop
insb
js
popa
js
sbb
xor
roll
sub
pop
fistl
in
jge
jge
push
sti
xor
stos
xor
pop
or
aam
ds
cmpsl
bound
cwtl
xchg
jns
andl
aaa
jo
mov
int3
rcr
in
adc
adc
dec
popa
test
and
ss
xor
cmpsl
fildll
je
popa
rcl
sub
dec
push
insl
jmp
xchg
pop
mov
jns
add
dec
sar
adc
in
lods
inc
dec
mov
push
repz
fmul
movsl
outsb
roll
pop
dec
lods
mov
xchg
daa
loopne
mov
push
pop
inc
cld
clc
mov
cmp
cld
push
jno
jns
negl
int3
xchg
js
pop
push
dec
es
into
or
sub
fcoms
mov
sbb
dec
xor
in
cmp
lock
push
lcall
xchg
sarb
mov
stos
in
push
push
mov
hlt
inc
sbb
ds
or
jp
mov
sahf
fsubrp
or
mov
pop
cmp
sbb
sub
aad
inc
push
jge
ret
sbb
sbb
in
sub
push
pop
pop
das
push
cwtl
popa
add
leave
mov
inc
mov
jne
xchg
in
pushfw
adc
jb
bound
mov
fs
or
out
jb
movsb
repz
test
adc
and
dec
aam
cli
jne
mov
sarl
shlb
sub
xchg
cld
xchg
leave
mov
sarb
jo
mov
dec
lcall
xchg
xchg
jno
pushf
test
icebp
in
inc
jnp
xor
loop
rorl
call
push
add
xchg
inc
xchg
xchg
sbbl
inc
mov
mov
pop
pop
jle
jp
dec
mov
lock
pop
daa
iret
sti
jbe
pushw
repnz
cmp
dec
cmpb
dec
xchg
push
jbe
lods
inc
out
mov
cmp
mov
loope
fdivrl
aas
mov
cwtl
sub
jecxz
stos
or
xor
pop
inc
push
xchg
inc
xchg
in
rep
aas
pop
ljmp
xor
fidivs
jae
push
test
es
call
mov
outsl
stc
fs
push
add
test
popa
outsb
sub
cld
loope
idivl
mov
and
mov
bound
fsubl
ljmp
sbb
xchg
inc
les
pop
lds
ds
inc
out
loop
xchg
cmp
push
dec
rcr
push
roll
inc
jle
adc
cli
pop
fcomps
pusha
les
rol
sbb
xchg
test
cmp
aam
out
mul
jge
sub
fwait
aaa
push
cli
jmp
ret
and
cli
pop
out
jns
add
fstps
jo
or
loop
rol
push
xlat
cmp
push
fstps
and
call
test
jmp
icebp
xlat
lea
xorb
stos
test
sub
xor
leave
das
add
cmp
cmp
call
pop
jb
test
cmc
mov
fimuls
popf
push
xchg
jmp
push
pop
sbb
mov
sub
mov
int3
je
out
and
js
mov
sub
movsb
sub
or
lret
fstp
mov
add
icebp
mov
cmpsb
mov
push
testb
adc
repz
movsl
adc
or
or
inc
fimuls
jns
test
outsl
jno
cmp
jbe
imul
dec
cmp
add
inc
push
xchg
cmpsl
mov
mov
jae
lock
mov
mov
or
mov
fs
dec
jmp
sbb
rcrb
das
imul
popl
repnz
mov
inc
sti
out
dec
jnp
dec
outsb
xor
inc
je
mov
adc
les
and
into
scas
push
push
imul
pop
cmovae
cmc
fdivr
add
ret
push
xchg
mov
and
rclb
or
adc
xor
jae
inc
inc
xor
jmp
dec
mov
fistl
or
clc
leave
movl
sar
xchg
cmpsl
xchg
mov
xchg
jb
jg
mov
and
push
add
xlat
and
lret
lret
xchg
or
sahf
inc
lcall
mov
sahf
scas
xchg
adc
pop
inc
fnstcw
mov
sti
pusha
mul
stos
fstpt
aad
rcrl
jae
push
xor
push
popl
fcmovnbe
cmpb
xor
imul
stc
and
int
adc
ss
lods
xor
in
cwtl
mov
cmpsl
push
mov
in
ljmp
aam
jo
mov
out
and
and
icebp
or
stc
push
xchg
into
popa
loope
nop
outsl
cmpsl
jne
sbb
fwait
mov
fcmovnu
cmpb
inc
pop
dec
mov
insb
nop
cs
and
xchg
rorb
jno
push
scas
adc
cmc
adc
add
adc
mov
andl
in
insb
add
loope
les
je
sub
dec
mov
jp
jb
sbb
pop
btr
sbb
mov
inc
iret
sbb
lret
popa
and
fucomi
xadd
jne
loop
push
jecxz
add
fwait
test
sub
xlat
pop
dec
add
inc
lret
adc
mov
cmc
data16
je
in
xchg
push
pop
les
xor
or
jns
test
push
mov
sbb
sub
xchg
sbb
cmp
mov
popa
jne
cltd
popa
rclb
mov
pop
pop
rcr
leave
into
mov
das
xchg
ja
xor
cwtl
or
fldt
arpl
push
out
adc
out
inc
lret
and
adc
int3
sbb
mov
adc
dec
orl
test
scas
lahf
push
mov
daa
inc
fcmove
sbb
pop
jg
fstps
lret
hlt
test
dec
pop
mov
fwait
into
or
inc
add
adc
xor
mov
mov
fwait
pop
xchg
dec
cmpsl
cmp
ret
cwtl
pop
imul
daa
lahf
sbb
or
pusha
mov
jmp
add
cvtpi2ps
daa
add
inc
out
ret
mov
pusha
jae
imul
popa
shrb
ror
pushf
mov
sub
jmp
loopne
popa
movsl
lds
outsb
mov
sti
mov
add
popa
and
adc
movsb
sbb
in
xchg
mov
jecxz
into
lret
adc
sbb
dec
pop
inc
cmp
jge
jns
push
ret
or
testl
jmp
ret
push
jmp
mov
jle
loope
popa
int3
sahf
fwait
adc
shl
push
repnz
jno
mov
lcall
sub
push
and
mov
mov
dec
fisubl
sbb
lret
loopne
dec
jle
gs
ret
repnz
loopne
mov
or
shrb
outsb
or
rcl
sti
bound
push
cmpsl
addr16
mov
lods
repnz
repz
scas
fisttpl
jle
addr16
test
ficoms
sbb
leave
sarb
xor
sub
subl
add
aaa
jle
lds
mov
push
push
iret
xor
mov
iret
mov
shl
xor
mov
adc
sbb
inc
xchg
shr
cltd
and
insb
jns
in
xchg
pushf
outsb
leave
sub
or
sbbb
imul
fwait
mov
xchg
rolb
cmpsb
xor
icebp
dec
fstpt
push
dec
sbb
shlb
pop
rcrb
fwait
or
stos
and
xchg
aad
data16
add
sub
mov
js
call
xchg
xor
sbb
arpl
mov
push
push
mov
cmp
inc
dec
cli
outsb
cltd
jge
arpl
jmp
or
xchg
sub
jnp
out
hlt
insl
mov
adc
popa
leave
mov
adc
push
xchg
lods
and
ret
mov
addl
clc
in
xchg
loope
inc
jbe
push
sbb
sbb
and
nop
insl
inc
xchg
decl
pop
into
mov
inc
jae
jbe
ds
jp
inc
and
aas
adc
sub
addr16
and
xlat
outsb
mov
imul
inc
sub
jge
jns
je
push
int
ret
fs
mov
mov
cmovae
jge
sub
loope
dec
lock
stos
hlt
imul
cmp
in
aam
or
pop
push
imul
icebp
push
sub
roll
gs
dec
outsb
cmp
dec
outsl
addb
mov
jae
sbb
ljmp
pusha
lret
gs
mov
stc
dec
add
int3
adc
mov
sti
out
je
and
adc
sbb
cmpl
mov
pop
lods
es
arpl
inc
adc
cltd
adcl
pop
movsb
lret
mov
call
ljmp
in
lods
mov
and
xor
mov
insb
mov
lret
inc
out
fisttpl
mov
sbb
sbb
aaa
mov
loop
and
pop
push
sbb
test
ss
cmc
cwtl
or
xchg
dec
scas
int3
and
test
imul
stos
stos
sbb
jg
mov
pop
enter
add
popf
insl
popf
jno
xchg
in
movsl
test
into
push
adc
mov
je
jnp
mov
mov
int
jmp
sub
jno
lods
outsl
les
fstps
ljmp
fbld
jno
shr
or
daa
stos
movsb
in
loopne
add
jnp
movsb
push
dec
push
or
pop
dec
mov
imul
sub
in
nop
mov
jo
iret
or
lods
push
push
sbb
push
xchg
inc
sarb
mov
and
jno
xor
add
sub
movsb
lock
and
push
adc
xchg
imul
popf
movsl
fiadds
inc
jp
pop
fnstenv
inc
sbb
pavgb
mov
xor
test
mov
cmpsl
scas
bound
adc
push
mov
jb
dec
addr16
cmp
xchg
xor
sbb
ret
push
mov
inc
push
sub
imul
push
aas
jmp
testb
dec
out
jmp
paddusw
jp
mov
js
jecxz
mov
imul
fstpt
push
loope
enter
fcomps
cmpsl
addr16
sbb
mov
fs
sub
popa
pop
sbb
and
push
xchg
push
fimull
xlat
adc
cmp
inc
and
or
out
xchg
fchs
scas
pop
push
add
test
je
outsl
clc
add
push
dec
daa
dec
test
push
lcall
leave
pop
pop
cs
adc
loope
frstor
add
mov
push
xchg
loop
fimull
add
and
jge
mov
lahf
and
insb
add
mov
sti
push
adc
jmp
mov
test
sub
jb
addb
clc
adc
cmpsl
mov
and
in
adc
xor
loopne
cmp
and
lret
cmpsb
sub
sub
fsubrs
dec
mov
jle
fdivl
xchg
cmc
pop
add
add
sub
cmp
inc
jle
popl
jne
dec
sub
xorb
fwait
pop
pop
push
inc
dec
and
jne
mov
xor
adc
test
dec
loope
popa
sbb
mov
adc
loope
leave
lret
fldenv
in
xchg
cmpsb
inc
add
ret
pop
fbstp
xor
push
push
pop
aaa
jl
test
pushf
sbb
es
cli
stc
int
dec
inc
inc
rcl
push
pop
adc
sbb
shr
ljmp
mov
loop
push
fmulp
inc
popa
ret
loop
xor
arpl
mov
loop
mov
ret
push
jmp
mov
jae
mov
nop
lahf
outsl
in
push
int3
hlt
fucomi
stos
ljmp
inc
mov
pop
cmp
jg
xchg
sti
je
stc
inc
rorl
cmp
ja
jns
adc
sbb
xchg
or
push
rol
loopne
hlt
ja
insl
sbb
push
insb
xchg
imul
pop
mov
push
jle
test
sub
mov
jecxz
in
push
and
add
xor
movsb
xor
inc
shll
mov
mov
mov
pop
out
inc
xchg
mov
loopne
ljmp
in
test
lcall
mov
xchg
dec
push
cli
loopne
daa
dec
pop
cmp
and
test
sbb
mov
mov
shrb
dec
imul
jg
rorl
inc
inc
inc
mov
int
stos
xchg
pop
or
add
xchg
loope
xor
cmpsb
loopne
rorb
popf
sbb
arpl
or
mov
inc
dec
daa
out
mov
nop
xor
movsb
pop
and
ja
mov
inc
and
jbe
cmp
sbb
push
push
popa
hlt
arpl
int3
mov
gs
dec
inc
xlat
daa
cmp
gs
push
and
pop
mov
jecxz
sbb
ss
stos
mov
xchg
mov
mov
mov
and
adc
mov
mov
rcrb
repz
ret
jbe
jns
and
and
inc
rorl
subl
pop
and
std
pop
and
fiaddl
test
push
lock
add
icebp
div
cmp
pop
aad
pop
or
cmp
and
pop
pop
mov
mov
bound
mov
movsb
rcll
sti
mov
lahf
xchg
sub
fwait
cmp
inc
aam
pop
mov
push
inc
xor
iret
sbb
in
popa
fimuls
fs
adc
cmp
fsubl
pop
add
jge
std
imul
pop
icebp
jbe
stc
xor
enter
add
add
inc
cwtl
cmp
adcb
dec
sbb
js
pop
inc
iret
add
jp
ret
mov
cli
addr16
mov
cli
mov
mov
das
jmp
shrb
or
imul
subl
sbb
leave
adc
cmp
int3
mov
pop
fs
jno
cmpsb
aam
push
dec
repnz
out
icebp
mov
dec
cmpsb
xchg
jne
jp
and
stos
mov
or
dec
movsb
and
xor
sahf
js
sbb
mov
sub
rcll
cli
mov
xor
jge
shl
in
aas
push
or
xor
mov
push
dec
add
test
mov
and
repz
fwait
jns
mov
sbb
xor
cmpsl
xor
xor
fbstp
inc
aas
not
push
mov
mov
push
repnz
jne
push
pop
xor
mov
insl
jl
dec
jmp
xlat
push
jmp
cmc
sbb
aam
fs
push
mov
movsl
cmp
test
add
adc
fs
jmp
sbb
imul
mov
mov
movsl
testl
sbb
aad
jno
lahf
adc
adcb
inc
jecxz
mov
out
cli
int3
or
incl
and
add
inc
arpl
imul
push
mov
mov
je
jle
pop
and
fs
insb
lahf
pop
sub
out
arpl
adc
test
push
call
scas
sarl
in
jmp
mov
mov
fldt
cmp
lds
fsubrl
jl
les
movsl
out
lock
pop
int3
jg
sarb
pop
addb
mov
mov
scas
mov
das
mov
push
cltd
xchg
pop
mov
lock
cmp
mov
xchg
pop
pushl
push
out
jae
and
es
outsb
mov
xchg
mov
lods
in
nop
jae
fs
xchg
lea
or
sbb
and
sbb
insb
mov
daa
cmp
pop
cltd
mov
je
xor
cmp
or
popa
roll
push
xor
mov
pop
imul
nop
jecxz
mov
mov
aaa
mov
jbe
or
dec
push
push
and
gs
sbb
push
xor
into
mov
lcall
iret
std
push
sbb
mov
dec
loope
std
das
inc
icebp
stos
push
ja
fdivrs
mov
sbb
insl
adc
cld
clc
dec
ss
dec
leave
out
mov
and
mov
int3
stos
or
xor
mov
inc
cli
pop
push
mov
lea
jo
sub
xchg
cmpb
std
sbb
adc
jne
push
mov
mov
cmp
in
dec
lods
cmc
pusha
aad
sbb
dec
sub
shl
mov
js
stc
inc
aas
cmp
and
in
mov
adc
pop
sbb
imul
push
inc
cmpsb
jp
std
inc
inc
mov
ffree
flds
ss
fisttpl
lret
cmp
pusha
pxor
jle
jne
movsl
in
jb
insw
int
js
inc
pop
pushf
js
ds
xor
out
push
iret
add
pop
out
inc
mov
sbb
cwtl
xorb
loopne
add
int3
rcrb
mov
pop
mov
cmp
out
test
ret
cmp
pop
cmp
jmp
push
pop
iret
adc
sbb
mov
push
lret
push
fstpt
pop
xlat
inc
inc
lret
cld
aaa
push
inc
push
inc
mov
and
sub
sub
mov
daa
pop
aam
jo
add
loopne
int
or
add
mov
adc
lahf
and
xlat
sbb
inc
push
mov
xlat
ja
rcll
rorb
ja
adc
add
jnp
jnp
popf
sub
loope
mov
aad
fcmovb
mov
fnstcw
sub
pop
stc
and
push
fsubr
lea
xor
jle
lret
mov
fisttpll
movsbl
jbe
gs
push
popa
mov
incb
sbbb
cmp
and
mov
notb
dec
ljmp
xor
fidivrs
adc
ja
xchg
arpl
std
fidivrs
pop
mov
mov
lahf
mov
cwtl
in
stc
insb
adc
ljmp
cld
cmp
jle
and
dec
repnz
cmp
sbbl
sub
push
cmp
sbb
test
fmulp
sahf
stc
out
push
fstpl
test
xchg
stc
daa
xchg
xor
sbb
dec
cmp
cmc
jne
andb
mov
or
inc
nop
sub
pop
shlb
xlat
cmpsl
repz
sahf
cli
lds
push
mov
ja
pop
psubb
rcrl
mov
pop
sbb
xchg
push
xchg
inc
push
jns
into
outsl
mov
pop
pop
shlb
icebp
pop
pop
pop
sbb
js
sub
mov
mov
test
cmc
das
aad
andl
sbbl
test
jb
xchg
lahf
pop
leave
shll
stos
cmp
mov
fdivs
mov
ss
cwtl
pop
xchg
mov
popl
iret
xchg
js
pop
repz
xchg
cmpsb
xchg
ss
stc
out
push
and
sub
mov
fsubrl
add
jns
in
in
xchg
divl
adc
pushf
imul
movsb
adc
xor
add
call
sub
sbb
add
cmp
movsb
jae
sbb
pop
idivl
hlt
inc
push
dec
jle
add
lock
mov
sub
adc
data16
iret
scas
popa
shlb
mov
fwait
push
test
push
cwtd
push
adc
dec
cmp
xchg
jle
and
loop
sub
mov
aad
fs
ror
pop
push
test
dec
push
xchg
adc
or
mov
or
pusha
push
or
sub
sbb
adc
adc
ja
out
jbe
movsl
dec
icebp
sahf
push
jmp
stc
mov
sbb
adc
jns
clc
lods
jge
testb
mov
cmp
lcall
and
fs
push
and
pop
popf
mov
xorb
rol
sarl
mov
sub
cmp
jae
hlt
lods
and
sbb
adc
sub
pop
lcall
sub
push
xor
push
stos
out
ret
xor
es
shlb
popf
fisubrs
in
pop
xor
mov
push
mulb
into
fidivs
int3
cli
stos
add
cmc
and
jg
xchg
enter
mov
inc
inc
fisubl
inc
scas
ja
jmp
das
mov
adc
pop
mov
mov
cmp
jmp
arpl
ja
shll
scas
or
mov
dec
aad
out
cmp
or
sbb
es
out
mov
les
push
pop
add
jne
icebp
mov
mov
cmp
mov
pop
dec
add
mov
pop
mov
jg
movsb
xlat
lock
jl,pn
push
xor
sbb
pop
mov
lock
popa
dec
cli
inc
pop
jp
push
arpl
repz
aad
aaa
insb
test
cmp
addl
add
push
dec
and
push
fwait
xor
sar
dec
dec
cmp
push
mov
cmc
cmpsb
xchg
or
je
in
pop
jmp
cs
and
push
jo
cmp
in
cwtl
jns
or
idivl
push
aad
pop
inc
xchg
mov
stos
ljmp
lock
mov
cmpsb
jae
out
push
cmpsl
adc
push
or
push
cmp
sub
hlt
lret
fsubr
lods
mov
mov
lea
push
jns
push
loopne
cmpl
cmp
pop
sti
add
xchg
jae
xor
push
mov
sbb
sbb
mov
in
inc
into
mov
pop
sahf
dec
mov
xchg
or
sar
rolb
repz
inc
and
lret
xchg
fcomp
imul
lods
addr16
std
xor
mov
jbe
mov
iret
xor
shrl
mov
notl
mov
sbb
push
mov
mov
repnz
sub
add
jl
adcl
jge
lods
test
mov
add
orl
fwait
in
cmpsb
xor
dec
xor
ret
push
sub
mov
adc
pop
add
dec
pop
ljmp
lret
and
pop
mov
test
popf
mov
mov
fdivrp
cmp
xchg
int
pop
rclb
popf
push
gs
mov
cmpsl
pushf
inc
xor
inc
mov
cmpsl
fistps
int3
inc
dec
je
mov
dec
pop
hlt
stc
inc
or
movsl
mov
push
or
mov
push
mov
pop
push
xor
test
inc
adc
in
data16
dec
or
adc
mov
adc
notb
cmp
cld
adc
and
cmp
adc
and
push
and
jae
ret
jmp
mov
add
es
sbb
cmpsb
inc
std
jne
cmpsb
popa
inc
mov
ds
fisttpll
js
jg
inc
addr16
xor
imul
aam
xor
insl
xor
xchg
in
mov
test
je
push
mov
mov
add
jg
inc
mov
pop
jnp
lods
xor
adc
aam
jle
mov
dec
push
push
jecxz
mov
loopne
movsl
sbb
mov
lea
jecxz
lahf
test
scas
pop
xchg
ljmp
or
out
inc
pop
fwait
enter
cmp
add
pop
dec
lahf
mov
jg
adc
mov
ljmp
adc
into
addr16
fiadds
in
dec
adc
cmp
sub
stos
xor
and
fs
in
mov
xchg
sub
fisttpl
jb
add
int
adc
cmpsl
stc
pop
movsb
push
cmc
movsb
cs
movsb
xor
cmp
mov
or
dec
sub
dec
pop
iret
mov
cmpb
or
cmpsb
pop
daa
mov
mov
push
inc
dec
bnd
adc
loop
jl
sub
stc
insb
je
movsb
add
ss
adc
xlat
js
int
sbb
repz
cli
push
addl
xlat
push
pop
cmp
mov
dec
cs
pop
call
mov
add
cmp
arpl
inc
mov
dec
icebp
jge
leave
mov
cmpsb
adc
sbb
in
icebp
ljmp
imul
das
test
jno
jge
push
xchg
lret
pop
pop
jo
inc
sti
fadd
dec
pop
cld
jl
flds
mov
push
aad
jmp
dec
jecxz
divb
push
mov
fdivrs
pushf
ret
lea
and
lods
jg
bnd
ljmp
lret
inc
xrelease
xor
inc
xor
or
cmpsb
sbb
xchg
pop
loopne
sbb
inc
divb
push
pop
jb
jl
dec
out
mov
insb
xor
in
fsubrs
sbb
inc
mov
rcll
frstor
rcl
jbe
dec
inc
or
mov
push
mov
mov
jb
cli
jecxz
fmull
push
call
rcl
ffreep
arpl
pop
and
mov
enter
push
pushfw
pop
cmp
or
mov
loopne
daa
xlat
xchg
xchg
mov
fs
out
lods
out
rolb
mov
roll
imul
mov
clc
adc
fstpl
jecxz
stc
mov
push
xchg
mov
js
mov
scas
push
inc
add
jle
push
adc
repnz
pop
daa
sbb
pusha
mov
mov
mov
mov
dec
dec
into
lahf
sbb
mov
adc
adc
push
fnsave
into
filds
js
divps
mov
out
pop
fldl
mov
js
sub
into
shufps
mov
jno
fdivs
stos
int3
fidivl
mov
xor
jp
shl
daa
cmpl
mov
jge
jae
jecxz
test
xchg
dec
cmc
sub
pop
pop
or
sahf
ret
outsb
push
jmp
icebp
fsubp
lcall
xor
outsb
jnp
adcl
xor
pop
sub
pop
cmp
xchg
xchg
jno
pusha
add
mov
notb
push
push
jmp
fninit
or
inc
inc
mov
inc
mov
push
stos
fnsave
ficomps
dec
adc
movsl
rcl
mov
inc
inc
addr16
or
adc
sub
pop
add
scas
or
icebp
xchg
mov
mov
inc
jo
add
push
add
dec
jecxz
hlt
or
dec
cmp
gs
daa
mov
push
inc
movsl
addr16
push
push
jns
xchg
fistl
leave
jge
inc
sbb
adc
xor
leave
adcb
dec
xchg
mov
push
aad
or
rorb
push
pop
inc
sti
push
push
stos
push
mov
aaa
es
dec
inc
mov
mov
out
int3
cmp
mov
movsb
cmpsb
jb
mov
lods
xor
out
xchg
in
xchg
adc
ds
push
add
pop
jg
inc
xchg
icebp
cs
fwait
pop
subb
mov
inc
jo
out
cmc
imul
lds
push
mov
fidivrs
add
outsl
stos
jmp
inc
jmp
mov
hlt
mov
loope
and
fucomp
fnstenv
dec
xor
inc
in
in
xchg
dec
push
and
cli
sbb
mov
cli
bound
push
nop
aaa
and
ljmp
sbb
addr16
cmpsl
jg
loope
sbb
faddp
and
incl
mov
roll
cmpb
and
stos
out
movsl
or
jge
test
or
cmp
in
sbb
lea
lods
mov
test
adc
mov
xor
push
lods
push
jg
jl
outsb
rorl
int
mov
sub
jp
mov
aam
mov
cmp
jle
int3
mov
xor
je
stos
jp
jns
jl
inc
xchg
sub
nop
lcall
stos
push
dec
lret
pop
daa
xchg
dec
aad
mov
add
cld
test
adc
push
cmp
cmp
sbb
inc
sub
inc
cli
test
adc
lea
adc
stos
jge
mov
sbb
scas
xchg
jno
push
xor
add
clc
push
pop
jmp
pop
xchg
aam
sbb
call
jg
shll
mov
mov
add
cmp
and
xor
ficoms
fadd
xchg
sub
out
sbb
in
popf
fimull
mov
ret
popf
jbe
cmp
popa
pop
inc
leave
adcb
aas
fnsave
jge
mov
xor
push
in
sub
mov
data16
popa
push
adc
orl
pop
adc
ja
lods
fadds
addr16
out
pop
outsl
add
shrb
and
stos
ja
mov
xchg
dec
shl
scas
jo
aad
dec
add
rep
scas
or
xlat
push
aam
mov
xchg
inc
push
test
imul
in
mov
clc
xchg
sti
xor
mov
mov
lods
aaa
stos
pop
and
ljmp
ja
mov
outsb
imul
xchg
mov
inc
sub
rcrl
aam
ret
xor
mov
ret
push
sahf
dec
movsb
fisubrs
sub
lahf
sub
mov
pop
pop
jle
outsb
lods
or
addb
mov
movsl
test
in
xchg
cmc
out
or
sahf
mov
pop
test
repz
hlt
mov
push
mov
std
sub
cmp
push
sub
cmc
xor
push
push
into
xor
xor
pop
adc
sbbl
dec
mull
xchg
ja
pop
push
in
cmp
sbb
jbe
movl
sbb
push
pop
out
mov
shrl
ljmp
in
pop
in
pop
or
cmp
mov
push
xchg
bnd
inc
mov
mov
rcrb
cmp
sbb
lea
test
push
mov
fiaddl
aas
xchg
cltd
add
mov
cmpsb
cmp
leave
jmp
cmp
pusha
bound
hlt
sub
sbb
loope
fwait
pop
das
xchg
decl
push
repnz
jle
lahf
outsl
sbb
sbbl
jg
mov
xor
cmp
repz
jae
push
in
or
adc
mov
xlat
ja
push
mov
sti
cld
mov
pop
push
inc
aaa
ds
clc
insl
cmp
jmp
lock
mov
cmp
cmpsl
and
iret
mov
mov
fcoml
inc
push
add
bound
test
insl
cwtl
sahf
jmp
jo
xchg
cltd
xor
push
jne
xor
push
sub
xlat
or
mulb
repnz
fld
test
movsl
outsl
pop
movsb
rol
mov
adc
inc
mov
cmp
cmpsb
push
pop
jae
mov
inc
fiadds
and
push
test
mov
rcll
rcr
stc
mov
out
into
push
ret
lcall
ss
mov
fdivr
out
inc
fstl
and
in
stos
stc
sub
mov
mov
lods
inc
ret
mov
insl
xchg
sbb
and
push
in
scas
and
iret
mov
leave
inc
std
mov
push
scas
dec
pusha
popf
jl
dec
lods
scas
ljmp
repz
mov
insl
movsb
fnstenv
mov
insb
test
dec
popa
repnz
inc
mov
jge
mov
xor
ret
xchg
fists
sahf
adc
sub
mov
jne
xor
and
xchg
enter
push
xchg
mov
and
mov
sbb
pop
test
sbb
sahf
push
xlat
shrl
dec
inc
dec
xor
int3
stos
scas
jbe
pop
mov
jge
std
iret
sub
xchg
add
ficomps
cli
push
dec
aad
inc
insl
mov
clc
imul
test
jo
jmp
jnp
xor
std
mov
cmp
add
ret
clc
inc
in
in
mov
lret
add
psubw
add
test
fildll
adc
mov
adcl
mov
or
jl
xor
loop
ret
inc
fsubrl
lea
push
in
mov
and
xlat
out
jb
sbbl
negl
or
in
xchg
lret
jae
dec
xchg
ret
es
mov
xchg
jb
adc
fs
stos
cmpsb
sub
jle
loopne
mov
data16
repnz
sub
sub
test
or
test
xor
or
sub
test
push
jp
out
cli
inc
mov
pop
xchg
mov
dec
sahf
int3
pop
xor
bound
ror
or
and
cmp
and
push
aam
sub
cmp
and
cltd
iret
loop
dec
sub
out
pop
xchg
aam
jo
xchg
sbb
mov
push
stc
andb
test
pop
inc
hlt
and
pop
pop
adc
lods
or
mov
pop
xchg
adc
jns
sub
jmp
and
cli
mov
sti
in
lea
jecxz
jle
fstpt
sbb
flds
mov
test
pop
xchg
in
mov
adc
sbb
xchg
adc
scas
hlt
loope
aam
scas
movsb
andl
cld
mov
jb
inc
push
mov
adc
mov
add
jno
jmp
cwtl
js
ss
in
aas
sar
test
loopne
jns
fldt
fldenv
dec
ret
sbb
xchg
adc
sub
add
movsb
adc
xor
or
xchg
and
js
mov
add
arpl
popa
cmp
movsl
or
lods
mov
pop
push
jle
sub
sub
call
outsl
xor
test
push
adc
rclb
cli
jb
cmpsl
jecxz
ret
arpl
stos
bnd
inc
nop
jne
push
ficomps
sti
dec
dec
sub
jno
lock
fiadds
enter
mov
dec
and
xor
loop
inc
fs
in
pop
hlt
fidivl
adc
rorb
or
loopne
push
sub
mov
jge
fmull
out
ljmp
jg
std
push
movsl
and
fistpll
repnz
arpl
shll
add
rcrl
inc
xorl
cmp
dec
mov
sbb
movsb
lret
sbb
pop
jnp
frstor
or
sbb
mov
inc
mov
stos
cmp
enter
test
int3
fidivrl
fldl
fcmovbe
lods
jno
and
jp
ficoml
hlt
add
add
xor
out
jbe
inc
xlat
cmp
mov
cli
cli
cmp
shrl
inc
xchg
fsubs
sbb
stos
lret
jno
mov
loopne
sub
stos
call
shrl
andb
jle
mov
clc
das
scas
in
cwtl
std
mov
cld
add
aas
bswap
mov
lods
xor
mov
js
mov
dec
mov
adc
cld
jns
int
test
jg
inc
out
dec
or
out
leave
lea
aad
sub
sbb
push
popa
lret
sarb
jg
iret
stc
arpl
xor
xor
addr16
dec
inc
add
pop
cmp
push
mov
xchg
inc
mov
leave
dec
fwait
mov
sub
cmc
add
jo
pop
fwait
sbb
test
and
insl
or
jno
mov
or
fsubp
lret
jne
fdivrl
test
pop
out
daa
fwait
or
aad
push
push
sahf
push
fstl
mov
xchg
xchg
mov
pop
and
ret
cli
je
test
scas
cmp
in
fiaddl
jle
push
sbb
pop
mov
inc
xor
pop
fbstp
push
push
dec
inc
push
aad
les
js
shl
xchg
arpl
movsl
cli
aam
ljmp
pop
mov
loopne
ds
rorl
movsb
and
sbb
sbbb
ja
fs
mov
fcompl
push
or
inc
lcall
in
fists
mov
stc
insb
adc
mulb
pushf
push
pop
gs
cld
jo
lcall
xor
fsubrl
and
jns
sti
fnstcw
dec
jge
ljmp
aas
fsubs
jmp
jnp
cmp
pusha
lahf
mov
inc
call
hlt
shll
mov
xlat
jno
push
xchg
nop
mov
cmp
and
shlb
int3
fldcw
sti
mov
cmp
fwait
popf
add
std
sahf
and
xchg
cmp
push
xchg
inc
int
jno
mov
hlt
scas
rolb
mov
jnp
insl
mov
enter
mov
sub
ret
nop
test
mov
sbb
into
xchg
loopne
ljmp
cmp
dec
and
int3
loopw
jo
sbb
mov
cmp
push
add
pop
roll
not
add
test
out
xor
jo
out
insb
push
scas
icebp
add
mov
popa
jb
mov
ret
and
push
sub
stos
xchg
inc
xchg
pop
mov
scas
inc
cmpsl
je
inc
jp
loope
xchg
xor
push
lret
fst
inc
lret
xchg
lock
clc
ret
push
mov
cmp
mov
lret
sbb
pop
sub
mov
in
mov
lret
sub
lods
popf
pop
cmc
inc
outsl
xchg
mov
ret
pop
inc
push
loop
mov
fiadds
popl
cld
adc
fldt
mov
sub
sbb
xchg
imul
lods
xchg
dec
pop
cmp
inc
addl
mov
xor
cs
mov
inc
pop
or
fcomi
inc
push
sbb
icebp
inc
pop
scas
adc
in
icebp
fwait
cmp
fsubrs
fs
out
repz
push
push
xchg
push
pop
popa
jae
fsub
fcmove
inc
push
inc
or
sbb
insl
mov
add
outsl
mov
push
ljmp
sub
cvtpi2ps
xchg
jns
jne
fsubs
mov
rcrb
sub
mov
lcall
jne
lret
mov
lahf
or
add
jge
xlat
sbb
and
fdivr
inc
shr
add
push
adc
orb
jne
inc
jp
fdivs
stos
leave
scas
fs
and
lret
dec
add
enter
mov
fcomi
mov
and
xor
inc
cmc
mul
add
xor
lret
xchg
movsb
rcl
mov
scas
clc
ja
nop
mov
cwtl
xchg
pop
ljmp
test
xchg
es
cmpsl
ds
mov
data16
jo
daa
sub
cmp
jp
out
out
mov
into
loop
test
ret
nop
mov
stos
adc
imul
in
mov
xchg
lds
and
push
stos
cld
mov
xor
sbb
xchg
test
push
mov
cld
in
mov
cmc
test
mov
insl
pop
xor
xlat
xchg
repz
xchg
sbb
push
fidivs
data16
clc
fwait
test
and
push
andb
cmpb
aas
outsl
cld
adc
fisubrs
fimull
cmpsb
jl
xchg
enter
mov
dec
cmpsb
cmp
stos
fcmovne
cmp
add
mov
sub
cmpsb
xchg
sbb
int3
add
jl
dec
xlat
or
push
mov
aad
push
sbb
mov
sahf
adc
cmp
jg
negl
xchg
punpcklbw
pop
sbb
rcrb
jns
insl
aas
scas
ret
jp
rclb
pop
cmp
sub
data16
rcl
inc
jae
mov
jmp
sbb
add
xorb
jge
pushf
sub
scas
cltd
popf
cli
sbb
sar
cltd
in
cmp
adc
mov
mov
jg
push
or
xor
mov
lea
cli
jnp
adc
movsb
xchg
cld
arpl
xor
jne
or
mov
dec
add
sub
cmpsb
mov
fs
and
xchg
pop
mov
inc
sbb
jb
cmp
scas
pop
pop
jo
mov
add
leave
sbb
mov
inc
pop
pop
sbb
stos
pop
mov
sub
imul
sarb
cmpb
call
xor
jo
stos
mov
mov
mov
sub
mov
mov
cltd
cmp
jbe
sahf
mov
jecxz
xor
sbb
subps
in
shl
sbb
int
or
inc
lds
in
loop
pop
mov
push
sbb
fildl
paddusb
mov
nop
cli
arpl
jae
mov
popf
enter
lret
xor
sbb
push
sub
pushf
cmpsb
mov
mov
cmp
add
add
jbe
and
pop
push
rorb
incl
ret
test
mov
adc
enter
out
adc
mov
sub
mov
pop
cld
push
or
inc
jae
sub
or
lock
xor
cmp
cwtl
mov
sbb
jno
stos
mov
jb
pop
cwtl
ficomps
sub
sbb
sahf
pop
clc
rclb
mov
in
inc
adc
cmp
popf
in
push
add
add
movsl
and
mov
cltd
xor
jae
mov
mov
jge
adc
scas
cmp
mov
or
sbbl
cli
pushf
xor
mov
and
xchg
mov
mov
iret
push
mov
inc
lock
push
mov
mov
scas
test
shlb
or
xchg
mov
inc
pusha
or
push
push
aad
push
sahf
adc
iret
adc
mov
mov
div
cmp
sti
in
jge
in
cmp
jae
sarb
and
jae
loopne
push
add
cld
dec
inc
inc
stc
in
or
push
sub
mov
cmp
nop
pop
push
aas
ss
fs
xchg
dec
xchg
call
in
inc
push
clc
pop
int
movsl
xor
int
jl
outsb
mov
movsb
ror
push
scas
int
in
add
push
or
aas
and
cmc
push
jbe
cmp
in
cmp
pop
jno
movsl
cmp
adc
shlb
jne
lret
and
mov
movsl
mov
ljmp
aam
scas
adc
xchg
push
popa
arpl
or
call
outsb
xchg
scas
insl
les
nop
scas
aad
mov
pusha
out
pop
lods
clc
repz
cld
mov
mov
xchg
push
idivl
add
ret
sub
out
lcall
lahf
cmp
movsb
ljmp
jmp
mov
mov
dec
xchg
push
sarb
sub
in
movsl
sarl
inc
add
fsubr
sub
jbe
mov
lret
add
leave
xchg
in
xor
sbb
mov
ret
xchg
adc
inc
into
adc
jo
xorb
inc
xor
push
in
push
cmp
test
lcall
jg
xchg
and
rcrw
jge
call
inc
ljmp
jecxz
add
pop
xor
pop
inc
popf
mov
dec
in
xor
movsl
push
xor
aad
xchg
nop
arpl
icebp
xchg
push
mov
test
push
push
ja
in
sub
add
les
adc
or
inc
pop
loop
lret
dec
cwtl
or
cltd
dec
fsub
pusha
rcr
mov
add
or
pusha
fidivs
icebp
lcall
pushf
adc
xor
stc
ljmp
cmpsl
fnstsw
arpl
lret
add
jge
jmp
hlt
mov
pusha
sub
pusha
mov
jno
mov
aaa
aas
xchg
cmc
es
xor
and
addr16
add
ds
sub
aam
pushf
mov
and
cmp
mov
mov
cmp
arpl
pushf
sbb
call
xchg
je
jns
stc
jns
stos
int3
and
bound
sbbl
cmp
in
jnp
movsl
mov
xor
shrl
sbb
cmpsl
jb
roll
cmp
xchg
lea
dec
mov
mov
mov
call
and
push
jne
jmp
xchg
lds
dec
test
inc
cltd
mov
mov
jge
adc
popa
ljmp
inc
sbb
addb
push
sti
dec
or
inc
roll
lret
insl
inc
cltd
mov
stc
inc
pop
inc
dec
xchg
and
adc
shrd
sbb
fmuls
push
popa
jno
out
clc
popf
xchg
inc
and
sbb
sbb
xchg
dec
inc
push
popa
pop
out
daa
cmp
xchg
mov
ljmp
cmc
mov
adc
push
xchg
xor
stos
jp
call
int
out
js
or
mov
dec
stos
or
jmp
mov
inc
aas
fucom
cmp
add
leave
pop
jo
jb
and
pusha
movsl
adc
dec
imul
mov
cwtl
out
lds
lds
cld
scas
dec
lahf
movsb
negl
icebp
push
cmp
jb
pop
aam
xor
jnp
cwtl
int3
out
loopne
test
sbb
adc
cmp
adcb
mov
xorl
mov
adc
mov
push
daa
and
stos
int3
pcmpeqd
pop
add
or
int
adc
add
sbb
xchg
pop
insb
mov
nop
shlb
repz
fs
pop
jb
mov
test
cmp
cmp
mov
jmp
adc
xlat
out
es
nop
dec
lods
jb
dec
jmp
arpl
lret
mov
cltd
push
xchg
addr16
push
xchg
xchg
or
push
es
pop
or
cld
pop
lods
lahf
sub
sub
push
mov
mov
cmpb
pop
in
test
pushf
inc
ss
shrb
imul
lret
ja
shlb
sub
adc
xchg
sub
push
aam
icebp
lcall
addr16
dec
cwtl
repz
inc
rorb
xchg
xchg
ljmp
inc
jns
cmp
cmp
mov
sub
mov
and
sub
fstps
xchg
mov
fwait
sbb
push
mov
push
inc
rcrl
adc
sub
xor
fsub
in
push
xor
lods
cmp
jae
jo
adc
movsl
mov
mov
mov
ffree
js
out
or
mov
iret
jecxz
cmp
lcall
out
jno
rol
mov
aas
test
cmp
sahf
xor
mov
pop
pop
jle
cmpsb
lahf
fdivrl
dec
test
icebp
xor
push
xor
push
sbb
es
test
mov
dec
mov
ja
popa
rol
enter
loop
movsb
aad
jecxz
ret
dec
or
push
or
sbb
and
inc
outsl
and
mov
sbb
ja
stos
pop
jb
aas
add
mov
jno
xlat
mov
daa
loop
lock
stos
push
xchg
fwait
enter
mov
dec
mov
aas
and
cmp
jne
push
xchg
dec
jle
dec
adc
cmpsb
out
lahf
pop
jecxz
in
cmp
es
mov
repz
pushf
xchg
mov
es
inc
xchg
add
test
iret
dec
jno
jg
xchg
jbe
roll
mov
and
stos
fbstp
out
xor
sbbl
cmpl
mov
push
dec
pop
fdivrl
shll
xor
and
daa
dec
push
inc
lcall
pop
scas
jo
fnstenv
xor
out
shlb
mov
adc
scas
or
test
sbb
inc
xchg
out
adc
outsl
sub
cmpsb
add
dec
fs
imul
repz
xlat
push
out
jecxz
push
dec
push
cmp
push
popf
push
dec
inc
jb
aam
sbb
cmp
xchg
les
push
or
and
adc
lret
cmpb
mov
int
addl
pop
cmp
fstps
cltd
rcl
mov
or
aaa
fwait
push
mov
es
loopne
cwtl
push
clc
leave
or
mov
xchg
pop
adc
shrl
je
int
lret
jl
xor
movsb
testb
lea
dec
mov
sar
jnp
data16
mov
adc
add
lret
or
cltd
jl
or
pop
lods
and
dec
xchg
sbb
jo
or
lods
aad
or
push
in
ds
pop
jle
sbb
fwait
lret
scas
out
push
test
imul
adc
mov
push
push
sahf
fnstcw
in
lcall
call
nop
mov
mov
xor
sbb
sbbb
push
xor
mov
dec
fadd
inc
loopne,pt
negl
mov
ret
ret
sbb
add
sbb
cmp
out
loop
mov
pop
xchg
xchg
mov
andb
faddl
sub
pushf
mov
mov
mov
rcr
and
std
inc
push
sbbl
scas
jae
xchg
aam
mov
in
stos
nop
sbb
mov
mov
adc
mov
popl
fildl
cmp
or
pop
sub
rclb
sbbl
test
pop
add
push
adc
sbb
repz
xor
popa
jl
push
test
cmpsb
sbb
addb
sub
push
leave
mov
ret
lret
add
adc
mov
sbb
mov
mov
repz
or
fnstenv
and
shrl
jnp
and
jp
sbb
xchg
scas
add
jmp
jle
and
insb
rcl
xor
xor
cmc
adc
popa
jl
mov
mov
popa
sub
je
add
xor
pusha
scas
mov
dec
test
mov
mov
jge
and
sbb
pushf
add
mov
dec
sbb
sub
nop
mov
popf
aam
and
nop
jp
scas
lcall
add
jne
aaa
or
mov
pop
outsb
pusha
sub
aad
push
mov
fwait
pop
bound
cmp
pop
icebp
pop
adc
adc
lcall
pushf
arpl
sub
jo
xlat
inc
jb
adcb
pushf
xchg
pop
push
cwtl
mov
sti
test
repnz
add
enter
xor
daa
push
pop
push
xchg
fldcw
mov
jnp
loop
out
addr16
sub
push
jno
mov
and
jnp
loop
cld
inc
shrb
mov
pop
inc
pop
inc
lret
push
movsl
movsb
push
mov
sub
mov
cmpb
data16
loopne
dec
add
jae
pop
movsb
adc
mov
lret
cs
xchg
adc
pushf
lahf
loopne
loope
enter
mov
imul
cmp
imull
dec
call
ss
cltd
dec
and
fdivrs
lcall
les
inc
push
in
xor
jb
clc
pop
adc
pop
mov
xor
inc
cmp
inc
pop
in
push
je
xchg
ljmp
cmp
add
inc
pop
jo
dec
mov
xchg
in
cmp
push
mov
inc
cmp
xor
push
sti
daa
xchg
dec
adc
rorl
and
xchg
nop
pop
mov
dec
jbe
int3
sti
lret
xchg
imul
mov
fistpll
mov
jmp
mov
push
fcomip
in
jbe
pusha
sbb
mov
mov
js
or
push
arpl
sub
cltd
jl
repnz
sub
mov
rcrb
jl
xor
out
ja
into
into
mov
gs
add
adc
jns
imul
inc
jmp
mulb
subb
dec
rcl
shll
mov
and
leave
mov
repnz
cmp
inc
out
sub
xor
inc
sub
xor
sarb
xor
pop
stc
pop
xor
aaa
call
test
inc
jb
mov
imul
and
mov
sub
ja
ficomps
into
cmp
jo
popa
dec
sbb
jb
inc
mov
sbb
xor
sub
out
fs
mov
pushf
aas
pop
je
mov
pop
pop
and
lcall
int
les
mov
mov
and
lret
mov
push
test
les
aaa
and
push
in
mov
xchg
sub
xor
stc
jecxz
test
bsr
loopne
xchg
lcall
gs
rcl
in
cmp
ljmp
mov
stos
bound
adc
orb
fstpt
mov
xor
or
pop
jb
jbe
pop
sbb
fisttps
movsl
lods
sbb
enter
mov
ret
fwait
out
daa
add
and
clc
mov
pusha
cmp
dec
mov
popa
cmp
loope
mov
imul
lahf
or
test
add
jbe
jo
movl
std
or
test
jg
xchg
mov
aam
push
cmp
into
icebp
push
das
adc
push
loopne
push
int3
mov
pop
loope
push
push
dec
inc
inc
and
clc
or
push
sub
cltd
dec
jo
inc
std
cmp
or
push
loop
sub
lret
in
aam
xor
insb
mov
lock
lcall
imul
xorl
xor
sahf
inc
test
leave
xor
loope
cmpsb
xchg
pusha
mov
mov
lahf
clc
cltd
lds
aas
and
mov
cli
pop
icebp
pop
mov
push
fisttpll
mov
xchg
lock
loop
or
aas
inc
sbbl
pushf
inc
jae
mov
out
je
adc
dec
cmp
dec
shrl
mov
sahf
add
pop
inc
cmc
and
pop
jno
jns
dec
add
sub
fstpt
inc
cmpl
shll
mov
xchg
push
popa
cmpsb
mov
xor
sbb
cmc
sti
xchg
pop
inc
imulb
inc
call
jns
movsl
jno
sbb
add
inc
cmp
pop
xchg
pushf
push
xchg
adc
insb
cmp
or
adc
in
mov
push
stos
movsl
lods
push
data16
mov
dec
lret
movsb
jl
out
cmp
cmpsb
adc
fwait
aad
scas
mov
sarl
pop
dec
push
and
lahf
inc
jbe
cmpsl
cwtl
imul
scas
pop
into
icebp
jp
cs
rcrb
out
jge
sbb
mov
xchg
and
dec
fbstp
and
add
jb
mov
fs
fldcw
push
or
mov
repz
push
sbb
push
in
pop
mov
dec
loopne
pushf
jno
pushf
cmp
sbb
adc
pop
push
jns
xchg
fisubs
mov
sahf
pushf
shl
mov
adc
adc
mov
ss
leave
cmp
dec
mov
cmpsl
les
cmpsl
les
inc
inc
inc
add
cmp
lds
outsb
nop
js
push
frstor
jae
inc
sbb
cltd
loope
ss
rol
xchg
aas
dec
lock
icebp
ja
pop
mov
pop
call
pop
sub
movsl
loope
or
mov
inc
inc
xor
push
cmp
inc
and
cmpsb
int3
out
je
xchg
mov
lret
adc
or
pop
dec
jb
fisubs
dec
push
cwtl
inc
sbb
xorl
fwait
jns
std
lds
xchg
in
sub
loopne
loop
pop
push
iret
into
lods
sahf
xor
sub
mov
out
hlt
inc
pop
mov
or
sbb
mov
sbbl
enter
jge
jmp
pushf
neg
lods
mov
icebp
pop
cltd
jmp
mov
adc
sub
in
add
call
xchg
xlat
jg
ret
adc
xchg
jp
sub
dec
xorb
cmp
or
or
pop
cmpsl
mov
repz
cmpsb
cmpsb
or
dec
push
sub
fisubrl
mov
inc
into
daa
cmp
mov
dec
push
call
je
inc
popf
dec
scas
adc
jno
shlb
dec
shlb
pop
dec
dec
lret
lahf
popf
popa
and
mov
mov
pushl
lods
pusha
xor
loopne
pop
fiaddl
inc
jbe
stos
xor
inc
ss
pop
subl
xchg
cmp
or
stos
cli
or
mov
sbb
xchg
mov
cwtl
fnstsw
inc
sub
stc
or
xchg
sub
stc
lahf
push
fsub
sbb
iret
movsl
jmp
in
and
daa
loop
stos
ds
sub
push
mov
ljmp
dec
les
cli
add
or
push
xor
ja
xchg
sub
adc
xor
mov
out
out
mov
lret
mov
lods
fwait
pop
jo
movsl
mov
jg
std
in
dec
mov
mov
jb
jle
mov
ficompl
mov
cmp
test
inc
popa
push
hlt
insb
ljmp
movsl
fwait
adc
mov
push
ret
inc
ss
loopne
das
jge
push
dec
dec
jne
xor
pop
cmp
mov
xchg
call
sbb
inc
push
dec
sahf
xlat
enter
iret
cmc
adc
hlt
addr16
loopne
add
hlt
stos
jnp
cld
sarb
lods
cli
fdivs
data16
add
sarl
pop
arpl
sub
adc
mov
popf
add
daa
aaa
fcmovnbe
aaa
inc
mov
fdivrs
push
inc
push
dec
rcr
pop
add
inc
ret
pop
cmpsl
jnp
imul
clc
iret
add
test
add
cltd
out
fst
xchg
adc
sahf
aad
cmp
data16
repnz
pusha
xchg
orl
dec
movsl
sub
jo
add
icebp
cltd
sub
add
mov
xchg
add
adc
stc
sbb
bound
repz
pop
push
push
xor
outsb
int
sub
jecxz
or
dec
mov
cmp
dec
xchg
sub
cwtl
andb
popf
pusha
inc
push
mov
je
and
in
sub
sbb
and
jne
xor
imul
imul
fcoml
jmp
gs
aad
jns
sbb
stos
fisttpll
cmp
mov
fdivrl
mov
cld
in
rcrl
cmp
rorb
add
and
dec
rorl
mov
movsb
add
arpl
dec
or
imul
mov
lcall
pop
popf
shlb
jl
movsb
cmp
gs
out
xchg
nop
xchg
popa
dec
cmp
mov
adc
dec
and
sub
xchg
aam
cmp
mov
cmp
and
push
dec
mov
fdivrs
aad
lahf
mov
push
cld
add
rclb
xchg
lret
adc
hlt
sub
arpl
jne
push
sahf
mov
iret
xchg
js
mov
sub
es
test
lret
rorb
xchg
les
jp
xor
ja
fsubrl
mov
scas
stc
stc
pop
xor
jle,pn
ret
les
and
stos
cmp
push
pop
stos
shll
inc
loope
arpl
adc
mov
mov
push
cmpsb
stc
mov
mov
mov
add
xor
aaa
inc
cwtl
shrb
add
push
xchg
xor
or
pop
aas
clc
add
jp
sti
jnp
loope
cmp
sub
xchg
hlt
jae
sub
in
cs
mov
inc
lods
in
call
sub
cmp
sub
loopne
dec
popa
leave
mov
ret
lahf
pop
fbstp
push
out
push
mov
xor
lahf
mov
add
pop
push
xor
repz
fsts
out
and
jb
rcr
iret
mov
inc
sub
xchg
loopne
mov
aad
imul
inc
in
adc
ja
enter
inc
pop
sub
adc
icebp
cmp
push
mov
xor
in
mov
sub
mov
inc
sub
xor
mov
sti
aas
fcoml
xchg
mov
pop
adc
dec
xlat
jo
dec
enter
leave
xor
inc
or
xchg
or
fisttps
mov
xchg
sub
in
les
idivb
les
inc
ret
mov
cs
mov
inc
cmp
addb
jb
add
cmp
pop
sbb
repz
inc
imull
push
jo
icebp
hlt
ds
pushl
inc
cmp
and
sub
imulb
ss
cld
or
fdivrl
mov
mov
ja
sub
or
cmp
popf
lret
mov
sbb
jns
sub
mov
inc
push
jo
push
jbe
mov
pop
pushf
pop
rorl
les
lret
sub
cmpsl
jl
into
or
mov
fsubrl
jg
lds
stos
and
insb
cmc
or
cmp
scas
fistpll
pop
je
fucomp
sbb
in
imul
or
iret
pop
lcall
inc
mov
test
inc
push
movsb
xor
jne
sub
jmp
daa
sub
pop
mov
cmp
aam
cltd
add
pop
mov
pop
pop
dec
mov
or
nop
push
repz
push
test
les
pop
fisubl
cld
pop
push
mov
lods
ljmp
jg
das
sub
shrl
in
sbb
cmpsl
cmc
test
xchg
shr
daa
pop
dec
mov
add
cmc
adc
add
mov
repz
fcmovnb
imul
xchg
inc
repnz
popa
mov
xchg
inc
add
and
sbb
cli
xor
rclb
leave
add
pop
cmp
ficomps
xchg
les
dec
or
dec
adc
rorl
xchg
add
mov
mov
adc
push
mov
insb
push
or
into
fisubs
pop
fs
dec
clc
mov
ret
out
sar
push
out
mov
pop
mov
jae
dec
shll
out
mov
jnp
dec
pop
sub
push
cmp
inc
push
dec
insb
mov
mov
jge
dec
pop
ja
sahf
lock
dec
fisubrs
cmc
in
push
jecxz
in
mov
out
stos
sti
push
cmc
inc
aad
mov
out
xchg
addr16
test
daa
xchg
sub
sub
outsl
jnp
push
mov
or
arpl
mov
or
icebp
sbb
inc
sti
cwtl
mov
out
xchg
pop
jl
dec
pop
and
cs
ret
fadds
cmpsb
mov
popa
bound
daa
arpl
mov
sub
xchg
xor
outsl
inc
mov
lret
in
imul
and
xchg
xchg
mov
and
movsb
ret
enter
and
adc
aas
hlt
dec
lea
xchg
cmp
jmp
test
and
out
xor
mov
mov
adc
lds
arpl
push
jno
insb
cltd
pop
and
adc
mov
stc
jo
cld
push
sbb
es
repz
and
xchg
sbb
jbe
mov
fildl
mov
mov
rcll
stc
or
cmp
mov
nop
pushf
adcb
shl
jno
jl
adc
add
rorb
nop
pushf
or
xchg
call
mov
mov
out
dec
jae
orb
icebp
jp
aad
scas
mov
sbb
cmp
enter
lds
xor
fs
jle
and
clc
dec
mov
push
mull
mov
ret
ret
data16
add
pop
roll
sub
notl
and
popf
gs
pop
movb
add
frstor
mov
loope
mov
dec
ret
or
push
ret
lahf
es
testb
pop
inc
mov
stos
int3
dec
les
sbb
and
movsb
inc
or
dec
sub
xchg
fbld
adc
mov
mov
cs
cld
stos
cld
adc
out
test
xchg
lock
mov
imul
dec
xchg
sub
dec
rorl
fistpll
aam
mov
dec
push
loopne
cli
aad
inc
adc
xchg
jno
adcb
xchg
and
sti
sbb
xchg
mov
aas
xor
jo
icebp
inc
sti
notb
adc
insb
clc
mov
pusha
add
or
in
rorb
mov
sbb
mov
mov
popa
xlat
in
in
dec
or
sub
push
jg
add
loopne
test
fnstsw
sbb
out
push
or
sub
leave
lret
repnz
cmp
cmc
xchg
mov
repnz
mov
mov
fdiv
mov
ljmp
add
and
cmp
add
dec
insb
mov
pop
in
mov
cwtl
lcall
scas
bound
pop
fs
sub
pop
mov
ss
push
pusha
loope
filds
push
inc
pop
lcall
sarb
loope
icebp
lods
jp
jp
int
ret
or
mov
pop
dec
lcall
jecxz
push
and
and
jge
add
sbb
in
push
lods
sub
gs
js
or
sbbl
or
scas
pop
dec
sbb
andl
inc
push
lods
scas
inc
fdivs
mov
adc
test
pop
arpl
and
sbb
adc
pop
jno
xchg
push
ds
mov
cmpsb
pop
sbb
xlat
pusha
xlat
dec
cmp
inc
out
add
mov
mov
pop
mov
add
aas
pop
cmc
das
add
aas
pushf
pop
push
xchg
loop
jl
and
xor
mov
cmc
into
ja
dec
mov
aas
cmpb
loope
pop
adc
or
repz
xchg
fnstcw
inc
std
mov
add
aad
loope
jmp
mov
jle
ja
ljmp
mov
in
push
fsubrs
rcl
sbb
fisubrs
jmp
xor
inc
jb
sbb
js
push
shll
mov
xor
divb
mov
sub
cmp
in
dec
adc
push
pusha
inc
dec
sbb
sub
lahf
and
mov
inc
mov
inc
scas
adc
out
scas
and
cmp
push
fwait
dec
sti
or
mov
into
xor
and
pop
push
add
xor
jge
adc
push
mov
push
das
cmp
dec
pop
movsb
or
fs
lods
sub
dec
data16
or
pop
ja
out
int3
mov
jo
pushl
sub
ret
xchg
cmpb
scas
mov
cs
mov
push
lcall
jecxz
cmc
sarl
pop
andb
sbb
cmp
ja
icebp
mov
or
xchg
stos
adc
and
lods
in
jo
sti
push
ret
gs
xchg
mov
add
clc
xor
ss
and
pop
sub
xchg
rcll
fwait
scas
test
popa
adc
out
mov
xor
inc
jmp
add
xchg
cmp
ret
mov
or
rcll
repz
push
add
or
inc
dec
jmp
cmp
and
lds
repz
xlat
mov
lcall
leave
cld
rcll
mov
clc
rol
lods
ret
adc
mov
xchg
shll
adc
mov
fs
sbb
insl
adc
and
cwtl
dec
jnp
nop
push
jne
dec
shlb
mov
sbb
or
fisubrl
shlb
in
cltd
in
aas
rolb
push
cmpsl
mov
into
dec
std
inc
inc
pop
repz
ja
cmpsl
data16
int
sub
popf
int
fldl
mov
mov
call
push
repnz
das
push
stos
pusha
imul
icebp
inc
test
sahf
push
out
sbb
add
inc
jp
push
xor
in
movsb
addl
mov
inc
mov
jb
pop
inc
adc
adc
jbe
arpl
sbb
fsubrs
pop
add
cmp
jle
stos
inc
cwtl
pop
inc
adc
mov
push
or
mov
mov
out
jl
aaa
fwait
push
add
or
fsts
xor
xchg
xchg
jbe
jle
es
mov
inc
mov
xchg
jno
dec
je
xor
lock
mov
cli
cs
xchg
stos
sbb
push
imul
cmc
inc
cmp
push
movb
xchg
or
sub
and
lea
aad
push
jb
push
jns
sub
jmp
test
fwait
cmp
mov
push
cs
pop
and
lcall
icebp
int3
cmp
mov
stos
enter
icebp
hlt
std
cmp
data16
test
rcll
adc
in
push
loope
test
xor
out
aas
bound
popa
movsb
ret
outsb
mov
jno
rep
sbbb
inc
and
insl
loop
or
mov
xchg
dec
push
dec
adc
aas
rcll
dec
pop
and
add
inc
mov
push
mov
daa
mov
xchg
mov
cli
dec
jo
mov
test
xor
insl
aas
scas
mov
xchg
push
test
pop
jnp
movsb
das
pushf
lcall
dec
cmovno
hlt
ret
mov
jne
cld
leave
push
jmp
test
subb
pop
clc
dec
inc
je
cmc
xor
or
pop
shrb
enter
push
lahf
cli
add
lea
xor
iret
add
mov
xchg
out
gs
cmp
in
sub
cmp
lcall
or
fs
pop
lahf
inc
daa
add
sbb
sbb
pop
lock
xchg
in
fstl
dec
js
inc
fwait
push
ret
jnp
mov
in
fsubrl
and
mov
inc
push
inc
rcrb
inc
mov
mov
and
inc
lcall
lea
fsub
or
mov
pusha
movzwl
sub
mov
adc
adc
push
dec
scas
mov
jae
insl
insb
pop
push
and
rcr
jo
stos
in
dec
test
dec
dec
mov
divb
push
sub
out
xchg
mov
shlb
inc
xlat
add
imul
ds
sub
vmread
mov
loop
xchg
push
mov
stos
xchg
call
test
addr16
inc
dec
sbb
and
bound
xor
sub
out
sbb
inc
dec
fadd
jnp
sbb
not
movsl
popa
mov
mov
bound
nop
insb
push
xchg
shl
icebp
adc
push
test
lds
jmp
adc
out
inc
cmp
loope
adc
push
and
mov
mov
std
pop
loop
sub
xor
push
in
sub
or
xchg
push
adc
jnp
movsb
outsb
in
cmc
and
jb
call
lea
insb
mov
inc
jbe
xor
ret
sub
in
push
add
pop
cmp
inc
mov
loope
scas
shl
xlat
shlb
fs
and
mov
lods
ficompl
push
push
mov
test
add
push
sub
insl
dec
pop
mov
mov
xchg
leave
xchg
cmp
pop
xor
shrb
rolb
lcall
inc
mov
mov
or
push
mov
jns
xor
in
std
sub
jg
add
jp
ret
jae
jge
in
cs
inc
xor
jp
int3
inc
add
or
jnp
jno
push
cli
mov
pushf
inc
and
jae
adc
pop
sbb
inc
movsl
daa
insl
imul
ds
xlat
sub
movsl
cmc
pop
into
mov
int3
fs
int3
into
lcall
int3
imul
int3
push
mov
aam
sbb
cli
testb
add
jae
in
popa
out
xor
bound
das
aaa
shlb
shr
xchg
mov
sub
out
out
or
cmp
dec
push
and
xlat
fwait
mov
shl
scas
dec
insl
sbbl
lds
ret
gs
addl
test
adc
mov
mov
scas
and
push
adc
js
inc
mov
adc
out
and
out
lcall
mov
pop
repz
add
js
fwait
sarl
jb
cs
mov
jmp
popf
mov
xchg
mov
outsl
xor
div
xor
cmc
fnsave
loope
call
aas
clc
insl
stc
jnp
pop
jno
mov
xor
mov
out
int3
pop
popf
xchg
mov
xor
xor
dec
pop
cmove
add
cmpsb
cmp
cli
out
in
pop
xchg
das
push
xchg
cmp
and
mov
inc
xchg
sbb
js
loope
push
dec
jnp
fnstsw
in
sbb
pop
cmp
sub
outsl
js
dec
and
inc
lock
dec
sbb
mov
ja,pn
dec
pop
add
scas
ret
push
pop
mov
cmp
icebp
inc
mov
adc
and
sbb
push
les
scas
xchg
jmp
sbb
aad
lds
mov
ds
or
pop
dec
add
xor
sahf
pop
mov
mov
or
lret
jnp
push
mov
fcompl
in
pop
rclb
mov
cld
xchg
popa
xor
adc
cmp
sahf
inc
xchg
xchg
bound
cmpl
daa
mov
mov
in
shrb
push
xchg
push
loope
push
cwtl
sub
repnz
or
rcl
mov
mov
movsl
sbb
mov
xchg
push
push
shll
push
inc
vpunpckhwd
xchg
or
sub
xlat
adc
or
pop
sub
mov
or
test
cmp
ret
sbb
push
jbe
xor
lea
or
add
push
inc
fisubl
lock
mov
out
mov
les
pop
jp
xor
insb
sub
movsb
inc
mov
xchg
pop
stc
and
adc
jns
adc
and
nop
mov
lret
movsb
push
inc
xor
and
sbb
mov
jno
sub
pop
jo
jmp
cmpsb
cmc
jecxz
sub
testl
mov
sbb
ja
mov
inc
repz
dec
lret
mov
sub
xorb
adc
ret
add
jl
jmp
and
dec
pop
popf
sahf
icebp
idivl
leave
cltd
pusha
xchg
aas
xchg
fdivrl
fcmove
imul
sub
das
mov
adc
pusha
sub
fidivs
mov
dec
loope
xchg
test
in
mov
fwait
popa
push
bound
in
popf
add
dec
push
add
add
movsb
add
sub
and
push
pop
mov
sarl
jo
into
cld
cltd
mov
loop
les
jae
mov
jno
jne
loopne
adc
mov
xchg
jg
outsl
xor
sub
in
sbb
fldenv
jb
xchg
out
lds
xor
sarl
pop
lock
and
fsts
sub
sub
shll
dec
and
dec
fimuls
dec
fdivr
ja
adc
hlt
gs
fwait
jo
popf
jp
imul
movsb
cwtl
pop
aad
and
aam
jl
xor
lret
fcmovne
inc
ljmp
mov
into
mov
xor
hlt
lods
push
inc
push
inc
pop
inc
jbe
push
xchg
test
sahf
adc
cld
lock
xchg
cmp
adcb
imul
je
inc
sub
out
inc
sbb
mov
sbb
hlt
icebp
xlat
and
repnz
icebp
add
in
bound
push
nop
jns
js
mov
rolb
pop
lock
repnz
out
rcll
mov
cmp
dec
add
out
imul
cmp
movsl
mov
jge
and
inc
imul
xchg
out
cmpsb
mov
movsl
adc
jb
mov
push
mov
ffreep
push
or
popa
inc
cmp
xor
test
mov
push
adc
int
sbb
into
push
fs
ljmp
cmp
je
ss
dec
xor
sbb
push
mov
mov
ljmp
sub
in
insl
cmp
push
jne
out
lret
pusha
lret
adc
scas
push
cltd
ljmp
shl
pop
mov
in
pop
jno
faddl
fdiv
repnz
jmp
out
inc
sub
xor
inc
cltd
insb
inc
int3
dec
xor
out
pop
mov
push
mov
push
mov
icebp
jg
int
fldenv
dec
or
xchg
mov
fisubs
push
rcll
mov
ds
sarb
push
jns
lea
imul
xorl
lahf
clc
jo
mov
addr16
cmpsb
mov
lock
jae
pop
and
mov
sti
dec
lods
roll
dec
mov
push
loopne
cltd
insb
mov
cmpsl
js
inc
sti
xor
data16
add
mov
push
push
xchg
pop
loope
sub
or
into
jg
cltd
test
jg
pop
mov
fimull
ja
inc
fcmovbe
push
cmp
cmpsb
cmp
sub
enter
and
pop
insb
mov
sbb
add
stc
dec
xor
sahf
push
mov
popa
or
imul
push
in
sbb
stos
imulb
movsb
lods
and
sbb
lahf
ret
jno
mov
mov
icebp
xor
push
jl
sbb
pop
pop
dec
mul
xchg
lods
xchg
or
lret
clc
lods
xor
cmpsl
mov
imul
or
add
in
movl
add
ficompl
jo
outsb
xchg
lret
xchg
jp
enter
push
mov
data16
push
or
ret
cwtl
add
jmp
xlat
jl
jo
pop
mov
dec
jnp
xchg
xchg
mov
inc
jae
pop
cmp
xor
cmp
pop
int3
fstps
sub
xor
mulb
call
aas
fnsave
pop
xchg
pop
pop
lahf
cmc
jno
adc
mov
scas
outsl
test
cmp
add
pop
dec
lock
es
adc
mov
xlat
adc
mov
fidivrl
lret
stos
lds
das
dec
push
lock
jecxz
inc
jl
popf
fwait
sahf
cli
sarb
cmpsb
jecxz
sub
adc
stos
xor
dec
lahf
xchg
lods
imul
inc
mov
push
cltd
mov
lcall
mov
push
mov
mov
enter
mov
clc
loopne
roll
out
push
rolb
pop
push
ss
js
dec
cld
mov
adc
adc
arpl
pop
cwtl
cmp
and
nopl
lahf
push
popf
add
pop
clc
je
das
cmp
jmp
push
xor
lods
sub
jns
add
sbb
aas
sub
push
inc
out
cmp
dec
pop
stos
or
mov
fisubl
rol
cmp
xor
mov
popl
sbb
jle
nop
stos
cmp
mov
lret
movntq
mov
arpl
push
xchg
pop
pushf
data16
jno
cmp
or
hlt
push
mov
in
ja
inc
dec
xchg
flds
mov
xchg
sbb
sub
adc
dec
ljmp
ljmp
mov
pop
stos
sbb
inc
dec
jle
mul
repz
je
fcmovnu
add
fs
pop
pop
dec
shll
push
sbb
decl
ret
pop
push
push
mov
mov
pop
into
or
ljmp
pop
xor
add
icebp
jp
inc
mov
xor
inc
lds
out
xor
mov
xor
mov
addr16
cmp
jp
mov
push
int3
mov
add
mov
pop
sbb
popf
pushf
pusha
cltd
pop
iret
enter
mov
mov
sub
fcoml
cmp
jmp
jb
in
push
outsb
pop
imul
mov
fdivrl
push
push
mov
enter
loopne
mov
and
out
push
sub
and
pop
push
xchg
imul
ret
sarb
imul
cmp
and
pop
dec
daa
sarb
push
stos
fucomp
fs
pushf
outsl
lds
sbb
add
lods
and
adc
lea
xor
adc
scas
or
xchg
out
mov
cli
add
aaa
in
mov
push
mov
sarb
cmpsl
fdivrs
pop
or
inc
lret
pop
sbb
sti
imul
mov
cmp
mov
das
sbb
cs
and
xchg
add
mov
stc
rorb
sbb
cmp
cmp
mov
stc
pop
xor
mov
adc
outsb
cmp
sub
adc
lret
out
xor
cltd
insl
dec
pushf
dec
les
xor
je
mov
movsb
mov
imul
bound
pop
int3
xchg
loope
imul
loop
push
dec
fisubrs
mov
stc
ljmp
stos
sbb
jne
push
add
inc
push
scas
and
loop
mov
mov
and
out
mov
in
mov
sbb
icebp
ds
push
mov
sub
faddl
leave
pusha
or
mov
bound
scas
dec
sbb
mov
jp
lcall
cmp
jge
ret
mov
cmpsb
jb
mov
sub
cmp
sti
mov
js
xchg
push
pop
mov
dec
mov
out
std
mov
dec
outsl
xor
and
mov
jne
aam
mov
or
dec
fdivrl
or
jle
stos
xor
cltd
out
push
push
or
inc
lds
mov
fildll
mov
mov
test
lea
outsl
fmuls
stos
js
nop
add
ljmp
aad
movsb
xor
cmp
fnstenv
and
inc
inc
push
pop
or
mov
push
fisubl
addb
jnp
fsub
jl
jmp
loopne
loopne
pusha
rorl
das
sub
rorl
dec
or
xor
jno
es
push
cmc
jo
xchg
xchg
ljmp
sub
scas
push
mov
push
push
jp
cmp
cmp
dec
cmp
iret
mov
aas
fs
xchg
xchg
loop
bound
in
xchg
mov
push
dec
dec
sbb
jge
mov
icebp
testb
push
cmpsb
sbb
loope
ret
pop
mov
mov
or
jne
jnp
jecxz
push
mov
jp
jge
les
fildl
jle
or
mov
in
cmpb
clc
adc
pusha
push
and
test
das
dec
push
xor
sub
subl
cld
idivl
pop
mov
pop
out
aad
push
loop
inc
movsb
repnz
xor
ret
icebp
jo
push
sub
cltd
mov
adcb
fcmovbe
inc
andb
xchg
aad
dec
mov
incl
sub
cmp
stos
sbbl
xchg
mov
cmp
sbb
pop
sub
sbb
mull
pop
cld
andb
sub
shlb
rcll
lcall
or
cmp
out
push
jl
sti
les
sarl
test
inc
subl
les
sub
call
divl
or
push
jb
arpl
jle
into
fwait
ljmp
fwait
int
outsl
enter
mov
xor
push
push
mov
or
dec
lret
mov
cmp
xor
jno
into
dec
mov
xorb
xor
stos
mov
or
scas
xchg
fnstenv
or
fnstenv
rcl
shlb
movb
mov
add
dec
sbb
jb
bound
mov
cmp
jg
mov
add
mov
and
dec
scas
into
dec
sub
hlt
add
adc
xlat
enter
cmpsl
pop
mov
xchg
mov
int
add
cmp
leave
cmpsb
in
orb
xchg
jbe
mov
xor
scas
mov
pop
add
icebp
mov
into
cmp
jae
add
data16
repnz
imul
les
pop
leave
sti
rorl
loope
insb
stos
push
ds
es
je
and
adc
loop
sub
jge
test
add
stos
adc
adc
sbb
dec
xor
rcll
icebp
jecxz
cmp
xchg
sbb
fildl
test
mov
repnz
mov
add
sbb
cmp
mov
mov
ficompl
or
xchg
adc
stos
mov
mov
jo
jno
push
fsubrl
jae
or
sbb
mov
ret
test
das
cmc
test
pop
jnp
repz
iret
sub
lds
adc
sbb
outsb
scas
sub
cs
push
ljmp
dec
sub
das
clc
pop
lret
sub
iret
cmp
fwait
cmpsl
out
pop
pop
cmp
pop
ja
cmc
adc
push
lea
out
sub
mov
inc
and
fcompl
outsl
inc
outsl
repnz
adc
movsb
sti
xor
in
jp
lock
mov
das
in
aam
je
inc
ret
adc
pop
dec
cmp
xchg
mov
xchg
pop
fxch
daa
out
pusha
mov
adc
clc
push
inc
add
jecxz
mov
lods
je
fmull
jecxz
scas
inc
mov
inc
pop
in
insb
movsb
or
adc
pop
adc
movsb
and
pushf
out
adc
push
jecxz
adc
out
and
lret
sarl
cmp
pop
or
dec
bound
xor
inc
sub
fsubrp
popa
sbb
pop
insb
bnd
xchg
inc
push
push
mov
cmp
pop
sub
into
fildl
sub
fildll
in
mov
add
je
test
sbb
mov
addr16
out
jmp
xor
mov
xchg
lea
fwait
add
push
mov
lock
imul
mov
xchg
adc
mov
les
push
in
and
lret
dec
hlt
xchg
sahf
push
rcr
lret
mov
cld
xor
jp
mov
cmpsb
sub
fisubl
dec
lea
sti
and
adc
imul
push
mov
out
lcall
dec
jle
out
cld
xchg
xchg
lret
stos
mov
or
nop
xor
iret
mov
xchg
fs
das
decl
sub
daa
repz
dec
in
orl
add
adcl
loope
bound
clc
out
mov
jecxz
arpl
shl
mov
scas
sbb
push
or
or
subl
sbb
pop
dec
sub
adc
bound
js
faddl
jne
sbb
mov
push
add
cwtl
and
inc
cmpsl
lea
lods
cmpsl
out
and
enter
sub
lds
and
jbe
or
fistpl
jae
lret
lock
in
popl
ret
xlat
or
pop
cs
or
jne
fwait
or
lods
adc
inc
aaa
in
movsl
addb
lret
or
jnp
adc
stc
stos
ljmp
repz
push
cmp
mov
push
push
mov
mov
mov
scas
negb
out
pop
add
adc
das
xchg
cmpl
bound
mov
pop
lock
or
mov
xor
ljmp
fadds
push
aaa
xor
int
fildll
test
hlt
cmc
std
jge
aas
push
or
inc
mov
fiadds
pop
inc
aam
xchg
mov
aam
dec
mov
push
adc
inc
sbb
out
arpl
dec
or
daa
in
push
xchg
inc
ret
cmp
movsl
jl,pt
out
cmp
dec
gs
sub
sub
xchg
sbb
dec
push
imul
or
jmp
sub
ds
fwait
aas
iret
and
fbstp
loopne
lret
mov
daa
dec
aad
jbe
jns
movl
ret
and
and
jl
jo
mov
push
out
push
repnz
inc
xchg
pop
pop
in
or
jae
ret
lret
jnp
lahf
push
das
pop
sbb
pop
divb
cmp
movsb
aaa
or
cli
inc
jno
stos
ss
jbe
in
push
mov
sar
test
xchg
inc
int3
pop
subl
ss
mov
rclb
rcrb
outsl
dec
fwait
push
sbb
sbb
mov
or
xchg
jecxz
inc
mov
int3
or
cmc
mov
pop
xor
xor
inc
mov
out
jmp
mov
jl
cmp
ja
sbb
dec
sti
pop
icebp
icebp
es
cmp
add
jmp
adc
jmp
fnstenv
test
push
icebp
ds
mov
out
inc
xchg
fidivl
cmp
std
sahf
pop
mov
sub
and
loop
ficoms
cs
dec
fists
test
stos
or
or
xor
dec
push
loopne
bound
xlat
rolb
insl
js
leave
adc
sub
or
mov
ljmp
sbb
insb
test
mov
mov
flds
sahf
inc
mov
xchg
out
imul
mov
test
push
or
xlat
cmp
sbb
icebp
or
or
or
and
jo
xchg
clc
repz
aad
dec
mov
mov
and
mov
scas
mov
fcoms
fisubs
enter
or
stos
xor
ljmp
imul
js,pt
fwait
repz
int
push
jl
pop
xchg
lcall
fidivs
jl
jle
cmp
int3
shl
stos
sbb
mov
inc
mov
jae
dec
iret
lock
sarl
dec
movsb
int
adc
jns
test
mov
lahf
push
inc
sbb
fadd
push
in
pop
jle
out
mov
jnp
dec
je
in
mov
movsb
sti
sub
cmp
sub
pop
inc
lea
add
movsl
sub
adc
jno
popf
xor
sti
icebp
inc
popa
rol
and
in
pop
mov
cmp
add
cmpsb
fiaddl
fcmove
daa
pusha
insl
xchg
mov
imul
adc
sahf
hlt
mov
pop
in
inc
inc
jmp
or
and
xchg
and
adc
pop
and
insl
cmp
out
lret
pop
ret
jecxz
shll
in
enter
dec
sub
sub
cmp
dec
push
jne
sub
mov
cmc
lcall
int3
clc
fwait
dec
adc
add
adc
cld
jl
jb
data16
enter
in
jo
jp
add
pop
lret
mov
mov
jle
xchg
adc
clc
ds
cmp
cmp
mov
cmp
xlat
xor
jecxz
iret
sbb
out
arpl
and
and
push
jle
das
dec
ret
testb
xor
push
inc
xchg
cs
xchg
mov
adc
repz
loope
fs
mov
add
or
xchg
out
sahf
sub
int
orl
mov
xchg
ffreep
iret
mov
cld
jp
repnz
mov
rol
std
and
pop
loopne
sub
mov
jmp
inc
sbb
cmpsl
pop
jmp
and
inc
mov
dec
pushf
sub
adc
imul
and
and
dec
movsb
les
cmp
jge
jg
cmp
inc
mov
add
pop
or
iret
lahf
push
mov
mov
fstps
xchg
cld
pushf
ljmp
add
scas
andb
cld
mov
subb
pushf
ss
lret
sub
xor
add
aad
jae
xlat
sub
out
xchg
daa
test
ljmp
jo
imulb
lret
fistps
adc
dec
xchg
adc
flds
sbb
andl
push
stc
jne
movsl
ss
jae
setp
mov
dec
mov
pop
jne
lea
xchg
lcall
cltd
ret
mov
ss
scas
jns
jle
pop
push
mov
jno
and
cs
push
ret
xor
push
push
test
aam
and
xchg
cltd
lret
mov
sub
std
jg
mov
xchg
jecxz
jle
cmpsl
pop
lods
jl
rcrl
cs
jb
call
push
out
cmp
inc
mov
aas
and
jae
test
fwait
adc
repnz
ss
loope
icebp
loope
inc
sub
insb
adc
ficompl
pmulhuw
xchg
call
sbbb
shll
in
push
and
popa
dec
push
dec
aas
ss
cmp
xchg
mov
fwait
sbb
inc
pushf
out
adc
adc
mov
xor
xchg
or
jmp
lods
sub
and
dec
pop
mov
mov
lahf
lea
pushf
sub
xor
repnz
push
int3
popa
aad
data16
lds
adc
icebp
push
jae
shlb
lods
imul
lahf
arpl
mov
fsubrp
pop
xchg
adc
and
jecxz
pusha
mov
fdivs
xor
cld
call
mov
xchg
mov
sbb
stos
movsb
push
inc
pushf
mov
cmp
out
les
mov
pusha
inc
sti
mov
mov
and
pop
and
or
add
push
push
pand
mov
inc
dec
jnp
pop
loop
stos
hlt
add
push
in
mov
mov
roll
and
fcoml
pop
fst
xchg
inc
lahf
jp
add
loop
or
stc
xchg
arpl
sbb
decl
ror
inc
loope
ljmp
fisubrs
cmp
and
lret
inc
negl
les
addr16
dec
jmp
int3
and
mov
jae
stos
or
ja
popl
loop
inc
push
loop
jecxz
xor
cmc
adc
vcvttss2si
jo
dec
repnz
pop
or
or
fs
adc
divb
loope
aad
outsb
sbb
mov
xchg
inc
pop
jecxz
mov
aaa
push
xchg
xchg
stos
xchg
scas
xor
jns
mov
and
push
les
mov
push
ss
daa
cli
add
lret
adc
in
xchg
fwait
jmp
pop
shr
sub
mov
stos
sbb
pop
std
stos
pop
sbb
push
test
cmp
fwait
cmp
pop
dec
fimull
fistps
xchg
cld
cs
movsl
fyl2x
mov
lret
sub
imul
out
inc
push
cmp
enter
rol
out
lret
push
insb
lahf
sub
into
pop
int3
fs
inc
out
mov
ret
mov
popa
lods
inc
jbe
fsubl
cmp
dec
cmp
out
inc
xchg
gs
sbb
dec
enter
mov
loop
das
xor
jne
inc
rolb
xchg
sbb
insb
jle
push
jecxz
flds
addl
and
test
clc
cmp
push
scas
scas
cld
in
dec
push
gs
mov
popa
cmpb
xchg
cmp
mov
enter
mov
fwait
in
xchg
ljmp
inc
adc
dec
lods
jnp
fucomip
add
cmp
cmpsl
notl
push
and
jne
and
fs
cmp
fiaddl
push
lcall
cmp
xor
mov
sub
out
gs
fbld
stos
or
sbb
push
movsb
inc
or
push
in
adc
leave
out
out
inc
mov
pop
sub
leave
and
jge
jae
repz
or
push
add
mov
fs
mov
sbb
and
lret
jmp
pop
pushf
loopne
push
shll
rclb
add
sti
nop
mov
xor
xchg
in
cmc
pop
out
jle
inc
popa
and
xor
sbb
sbb
cmp
int
movsl
clc
or
stc
jmp
cmp
lahf
push
mov
cmpsl
xchg
sbb
jnp
lahf
stos
sub
insb
out
loopne
arpl
adcb
push
xor
mov
dec
clc
loopne
dec
sub
xchg
testb
or
jle
in
mov
mov
in
pusha
ror
push
bswap
push
out
imulb
stc
in
and
push
int
leave
cwtl
push
fidivrs
xor
fs
push
lds
arpl
clc
stos
mov
push
mov
fldl
cmpsb
mov
lods
mov
xchg
push
bound
lcall
pop
xchg
scas
insl
xor
jns
pop
inc
cmpsl
incl
nop
insl
jmp
or
int3
imul
pop
jns
or
adc
enter
ret
outsb
ret
jb
jno
mov
cmp
jbe
mov
hlt
mov
enter
mov
push
cli
sbb
stos
aad
pop
jne
push
pop
mov
lahf
jmp
sub
xor
sbb
pop
out
fmul
test
dec
adc
sahf
sahf
mov
and
hlt
xor
pop
int3
mov
sbb
test
adc
pop
ret
jnp
fildll
fwait
fs
and
adc
jp
add
pop
xor
and
jb
sbb
jne
xor
adc
loopne
fwait
int
pop
iret
ds
inc
aas
mov
mov
xchg
adc
leave
xchg
add
jne
inc
push
into
icebp
mov
shll
imul
inc
je
fisubl
cmp
mov
call
and
cmp
dec
push
or
lahf
cmp
add
jb
ficomps
jnp
or
jo
sbb
test
pop
sub
jmp
in
dec
xlat
insl
clc
push
imul
adc
bound
mov
push
cli
iret
loop
dec
test
into
loope
mov
movsl
iret
push
clc
dec
sbb
aas
sub
inc
adc
in
ror
outsb
add
shrl
dec
pop
inc
popf
push
mov
and
jnp
call
jno
scas
lock
inc
addl
mov
lods
add
add
sub
iret
adc
mov
pop
scas
rorl
es
sbb
mov
cld
pop
daa
xor
jbe
and
out
in
and
insb
pop
out
mov
adc
mov
stc
dec
stc
sub
cwtl
sarl
in
and
arpl
sti
mov
icebp
jns
mov
das
stos
sub
adc
adc
out
jnp
jecxz
add
mov
cmp
loope
popf
mov
mov
jns
mov
push
add
leave
cltd
mov
xchg
mov
stos
insb
mov
jbe
shll
mov
out
stc
int
and
xor
bound
ficompl
push
sub
sbb
adcb
mov
mov
mov
push
mov
out
mov
cmp
popa
adc
insl
mov
arpl
jmp
push
add
popf
pushf
mov
xchg
lods
xor
push
adc
mov
xchg
aas
lods
pop
xchg
sbb
mov
xchg
popa
les
push
ss
enter
push
adc
dec
int3
and
lret
jmp
leave
shlb
in
xchg
nop
lahf
xchg
cmpb
lahf
jg
lret
inc
mov
mov
ds
test
jb
shrb
dec
mov
leave
mov
or
sub
outsb
add
test
xor
ficompl
rsqrtps
add
xor
into
push
rcl
das
popa
inc
sbb
mov
sub
xchg
inc
out
sahf
mov
sub
jae
lea
imul
negb
int3
pop
clc
sbb
inc
cld
inc
sbb
jmp
jbe
pop
sub
adc
mov
mov
cmp
cmpsb
cmc
fldcw
arpl
fiaddl
out
aaa
ret
repnz
inc
cmp
xor
add
shrl
sub
sub
jg
or
push
add
push
inc
incb
fxch
movsb
mov
xlat
fsubl
stc
ret
or
push
inc
push
mov
push
icebp
and
lock
sahf
inc
push
aaa
jne
imul
repz
decl
mov
xchg
call
mov
pushf
imul
push
in
lret
xor
sahf
push
mov
incb
inc
addl
jae
add
into
int
fildl
mov
pop
xrelease
lea
sub
add
or
rcrb
test
mov
shr
xor
adc
lds
fs
call
add
jbe
imulb
fcompl
push
shl
cmp
mov
or
in
jge
xor
mov
pop
cmpsb
daa
icebp
mov
dec
rcll
sbb
pop
addr16
push
xchg
movsl
dec
sub
test
cmp
lods
jnp
imul
int3
je
mov
inc
cltd
inc
es
jmp
sti
sahf
ret
push
mov
rcrb
lds
icebp
xchg
aaa
jno
pop
iret
push
pop
enter
add
xchg
sub
add
in
or
dec
mov
xchg
and
enter
test
inc
and
mov
sub
mov
test
xchg
lret
pushf
jns
insb
inc
popa
dec
pop
pushf
ficompl
sub
and
xchg
mov
mov
jge
pop
push
ss
sbb
loope
add
cmp
sub
push
aas
mov
les
xlat
mov
roll
sub
mov
pop
pop
ljmp
lods
cld
movsl
jne
push
sbb
fstpl
xchg
jns
movsb
dec
jo
lret
scas
push
ret
push
and
cmp
in
shll
pop
xchg
add
mov
mov
xor
ret
mov
jne
andb
jno
push
pop
loopne
insb
mov
data16
arpl
push
cmpsb
orb
iret
jns
pop
sub
mov
pop
inc
mov
adc
lret
jbe
test
fdivrs
daa
lea
sub
mov
xor
inc
cmp
test
xor
pop
fcmovnbe
mov
sbb
idiv
shll
pop
xchg
enter
and
popa
repz
andb
sub
dec
pop
and
push
push
cmc
les
add
insb
andb
sti
jecxz
scas
movsl
jbe
mov
mov
inc
ret
cmp
icebp
cmp
adc
jo
je
sub
mov
fwait
and
pusha
nop
xchg
mov
pop
sbb
push
dec
mov
push
outsb
in
inc
jp
xabort
rcll
push
push
or
pop
int
pop
mov
dec
stc
add
xor
ret
adc
inc
mov
mov
shl
cmpsb
mov
subl
in
add
dec
sbb
out
add
jp
push
sub
pop
mov
mov
cld
arpl
xor
dec
cmp
mov
dec
and
imul
cwtl
mov
cmpsl
out
int
dec
adc
jg
sti
shll
adc
pop
repnz
sbb
popf
push
jns
push
ds
adc
pmaddwd
mov
rclb
outsl
iret
in
and
push
sbb
push
jmp
repnz
js
mov
test
jmp
jno
push
sarl
negl
or
xchg
pop
shll
fsts
pop
cmp
shll
into
imul
add
pop
xchg
fisubs
jp
setge
pop
xchg
popf
xchg
out
jl
or
pop
sub
sub
pop
in
fcoml
cmp
cli
dec
stc
std
fsubrl
or
mov
popa
jne
mov
or
and
fistpll
cmpsb
cmpsb
or
cwtl
sbb
fnsave
in
loopne
or
in
jmp
andb
cmp
lea
sub
add
mov
iret
aad
jge
sbb
lret
xor
add
fcmovb
pop
mov
test
scas
mov
fldl
push
xor
int
add
xor
clc
ss
lea
aam
pop
test
rcll
xor
dec
and
and
push
dec
lea
pop
jl
and
rcll
pusha
push
out
inc
jbe
jb
add
inc
rcrb
add
adc
mov
pop
mov
stc
inc
jne
addr16
jae
mov
in
js
pop
in
addr16
in
or
fldenv
gs
pop
out
cmp
add
fdivl
in
add
lods
lret
add
pop
mov
adc
push
pop
mov
subl
out
or
and
out
js
test
mov
jmp
in
mov
mov
in
fstpl
std
and
cli
fmul
push
pop
adc
adc
outsl
xchg
dec
sbbl
fsubrl
shll
jbe
adc
pop
mov
xchg
sbb
icebp
mov
mov
movsl
lcall
mov
repnz
cmpsl
daa
add
test
and
mov
or
stc
or
daa
and
inc
dec
imul
mov
stc
inc
dec
les
adc
aas
aas
stos
in
stc
int
mov
fimuls
aas
aas
jo
fwait
js
imul
mov
pop
bound
adc
stos
fxch
test
ljmp
inc
data16
filds
jbe
push
jne
aaa
xor
or
mov
testb
fwait
push
xchg
mov
scas
or
sbb
mov
jg
sub
or
mov
dec
bound
sub
or
dec
adc
xor
xchg
xchg
or
jbe
fidivs
iret
in
or
jle
cs
xor
imul
xchg
arpl
out
popa
sub
or
xor
lods
ss
cwtl
mov
jne
lds
or
pop
scas
jg
jnp
lret
btr
push
or
sub
inc
ret
lret
int
shr
inc
popa
daa
jmp
out
inc
sqrtps
out
sbb
hlt
mov
pop
shrl
mov
sbb
jo
in
loopne
or
int
scas
inc
aad
cmp
andl
lock
jns
inc
notb
sbb
data16
flds
ljmp
stos
cmp
dec
mov
in
mov
jns
jb,pn
add
stos
shl
jno
jp
leave
pop
pop
jae
mov
inc
push
test
cmp
cmpsb
inc
std
arpl
enter
out
mov
shll
mov
ret
hlt
test
xchg
pusha
xor
lret
ficomps
cmpsb
and
push
inc
arpl
insl
jmp
sub
lret
adc
dec
in
je
pop
jae
mov
or
aam
add
gs
jg
dec
sbb
sub
lretw
xchg
and
jno
pop
insl
btc
lretw
dec
or
inc
bound
fsub
pop
shll
pop
loopne
shlb
xor
sub
repnz
fdivs
push
rolb
push
out
push
inc
addr16
lods
xchg
mov
xchg
adc
sbb
test
fistpll
push
cs
ss
cmp
pop
add
cmp
repnz
addl
mov
repz
inc
outsb
xchg
sbb
mov
sub
jo
xchg
or
cmp
inc
mov
sub
inc
push
jo
mov
or
mov
ja
rcr
or
mov
mov
cs
out
mov
rolb
mov
bnd
or
flds
mov
aas
sub
loopne
out
lahf
test
shll
jmp
test
sbb
testb
pop
jmp
lret
mov
int3
aaa
in
mov
test
popa
outsl
lods
int3
sbb
mov
or
mov
arpl
sub
mov
bound
subb
mov
push
sbb
xchg
das
xor
mov
data16
mov
into
adc
rclb
xchg
cmp
sahf
adc
jae
push
adc
mov
adc
lret
ss
cltd
adc
mov
ss
clc
mov
cs
cmp
cltd
push
jnp
adc
push
leave
push
adc
enter
scas
das
in
pusha
stos
std
xchg
sbb
stc
out
ffreep
push
shl
repz
pop
add
mov
mov
push
cli
repz
js
sbb
loop
jnp
inc
sub
movsb
cmp
subb
cmp
and
sub
insb
movsb
xor
imul
jbe
icebp
ret
fidivrl
stos
adc
dec
xor
mov
mov
mov
fistl
cltd
sbb
clc
and
mov
jae
dec
cmp
jae
sub
jmp
lds
jno
mov
mov
pop
loope
out
xor
lret
jae
push
sbb
push
cmp
jecxz
adc
sbb
dec
test
mov
stc
in
sbb
aaa
mov
cmp
je
mov
insb
mov
lock
aas
ficomps
sub
inc
filds
addr16
notb
popa
pop
lcall
jo
outsb
dec
push
leave
mov
ret
cwtl
mov
loop
test
and
mov
and
stc
or
ja
dec
jae
add
push
mov
lds
xchg
shlb
mov
add
inc
imul
pop
fs
push
xlat
add
mov
sub
ret
clc
les
in
out
xor
sub
mov
ret
lock
mov
pushl
sub
add
sub
dec
dec
insl
mov
imul
xor
out
mov
mov
sub
sub
mov
aas
and
dec
adcb
pushl
adc
inc
xchg
das
aad
mov
addr16
xlat
push
adc
mov
xchg
inc
hlt
mov
popa
mov
sarl
icebp
movsb
sbb
pushf
push
add
xchg
fiaddl
loopne
pop
jne
rcrb
subl
mov
cmc
jns
adc
add
out
adc
lock
inc
pushf
enter
inc
cmp
ret
pop
pop
fsubl
mov
mov
mov
ret
cltd
mov
rcrl
fsubp
xchg
push
orb
jb
scas
sub
cmp
or
fldcw
xor
mov
xor
jbe
xchg
int
jae
and
cmp
sahf
int
inc
sarb
lcall
push
jns
sbb
rorl
clc
mov
outsb
subb
xor
gs
sub
in
adc
xor
sub
mov
cmp
push
test
rcll
insb
lret
jmp
inc
dec
scas
add
mov
fmul
insb
add
jp
lahf
sarb
cwtl
cs
sub
scas
out
jns
sbb
and
xchg
out
add
mov
cmp
mov
call
in
push
aas
inc
push
fsubrp
dec
enter
and
push
je
jne
out
or
outsb
jo
gs
cmp
pop
sub
push
test
adc
aas
push
out
gs
mov
mov
loop
out
lods
jp
sub
push
adc
mov
cmp
push
or
cmpl
sbb
nop
jb
loope
repz
dec
adc
test
mov
fucomip
inc
xchg
stos
jg
aam
jmp
arpl
repnz
push
pusha
shll
imul
out
fistl
push
ret
mov
sub
cmovnp
or
stc
iret
xchg
mov
insb
add
testl
cmp
aaa
xchg
inc
jl
add
cwtl
adc
add
pusha
xor
iret
loop
push
mov
int
cmp
cld
cmp
movsl
or
cmpsb
sbb
int3
or
cmp
call
lock
cmpsl
lea
inc
test
mov
cmp
xor
lods
imul
jne
xor
mov
push
pop
add
test
cmc
decb
mov
ljmp
ret
ret
ss
jl
outsl
adc
in
scas
or
mov
pop
cmp
test
cmp
inc
cs
push
pop
sbb
push
inc
js
in
movsl
push
pop
sub
icebp
inc
cmpsl
xor
and
push
popf
inc
lods
or
cmpsl
adc
jecxz
pop
add
repnz
adc
jmp
pop
and
xor
xchg
adc
pop
cmp
sbb
mov
jne
jp
adc
pop
push
call
in
mov
data16
lods
ret
mov
aas
test
outsb
outsl
mov
mov
cmp
scas
call
insl
aam
pop
enter
pop
inc
sbb
mov
movsl
movsl
mov
ds
insl
jp
sbb
cmpsb
pop
mov
xor
out
call
sbb
pop
mov
cmc
ja
xchg
mov
das
xor
mov
icebp
int3
xor
lret
es
into
and
mov
jge
inc
movsb
repz
inc
enter
testl
jp
mov
fiaddl
mov
inc
push
xchg
mov
pop
mov
sarl
lds
cmp
pusha
rorb
ds
jg
lds
cwtl
adc
xor
lods
cmp
lret
aam
out
cmp
or
fsubrs
rorb
cmc
or
pop
pop
decl
cmpsl
out
popf
cmpsl
mov
fisttpl
lea
add
push
push
cmpsb
stos
cmpsb
call
and
faddl
cmp
jo
cmp
cmpsl
aas
outsb
xor
mov
xchg
sbb
std
mov
xchg
push
ret
dec
popa
mov
shr
and
adc
and
mov
inc
xor
adc
jno
xor
lods
mov
cltd
jb
and
ret
stc
mov
jbe
push
ljmp
sub
pop
cs
push
inc
aam
xlat
jae
in
inc
inc
cmp
loope
xlat
cs
punpckhwd
pop
stc
jp
sbbl
dec
sub
addl
popf
in
adc
jecxz
mov
pop
push
hlt
jno
cmc
leave
jne
cltd
sub
and
or
xlat
mov
push
inc
call
loop
lea
mov
and
loop
mul
xor
mov
lock
arpl
je
clc
test
sbb
mov
or
adc
mov
dec
push
enter
gs
mov
mov
stos
repnz
and
ljmp
pop
dec
and
gs
xchg
ljmp
pop
movsb
pop
in
cltd
jge
insb
mov
loop
jb
and
outsb
test
fcomps
loope
stos
lods
mov
ljmp
mov
call
push
push
or
imul
dec
sub
cld
loop
cmp
xchg
xor
scas
jp
pop
sbb
lea
push
xor
cmc
int3
inc
cmpsl
addr16
in
sbb
adc
ds
jb
mov
xor
fistps
push
cli
xor
stos
xchg
and
xor
and
bound
shl
add
subb
inc
pop
inc
xchg
inc
dec
cmp
es
rorl
jp
test
fwait
pop
data16
idivb
mov
sbb
ret
sub
push
inc
out
xchg
mov
mov
mov
sbb
hlt
pusha
std
lock
out
adc
adc
mov
ljmp
cmpsb
add
cmpsl
inc
int
mov
xor
out
or
jge
jb
int
lahf
ret
jmp
pop
sbb
das
and
outsb
stc
cmpsb
push
mov
fistl
call
cmp
movaps
or
ds
int
and
cmp
fwait
mov
shlb
test
jmp
cmp
cmp
in
pop
dec
mov
pop
jne
adc
cmp
mov
mov
enter
repnz
cld
jae
cmp
adc
pop
bound
scas
jmp
sbb
push
sbb
int
aad
sub
out
filds
or
xor
dec
mov
pop
stos
scas
push
lahf
orb
inc
shlb
mov
fmul
fcoml
outsb
push
pop
popa
mov
in
out
fdivrs
stos
adc
out
fildl
and
scas
fadd
xchg
insb
and
xchg
pop
pop
ss
lret
mov
pop
mov
inc
fucomi
jae
adc
adc
jg
arpl
jb
test
rol
fdivrs
push
pop
clc
cmpsl
es
in
cwtl
pop
faddl
call
or
xchg
jbe
test
sub
pop
into
mov
ds
sbb
xchg
xor
ss
jae
cmpsb
or
xchg
dec
push
xlat
das
addr16
mov
xchg
pushf
fsub
push
dec
mov
sub
loope
mov
mov
push
pusha
jo
mov
in
fisttps
xchg
pop
mov
sub
adc
xor
lea
fists
repnz
cmpsb
in
pop
adc
lea
fisubrl
icebp
xchg
mov
arpl
inc
es
adc
cltd
mov
mov
push
adc
idivb
rcrb
andl
cltd
mov
shll
xlat
pop
lds
std
dec
orb
in
pop
in
mov
xor
aam
add
mov
cwtl
mov
sub
jno
out
mov
xchg
xchg
lret
mov
xor
out
cmp
cmp
in
clc
jmp
adc
idivl
dec
int
jl
xorb
out
pop
inc
mov
mov
push
sbb
dec
pop
cmp
xchg
jno
pop
fldcw
pop
jl
hlt
mov
lcall
andb
dec
sub
dec
loopne
add
repnz
jb
push
jno
ret
push
enterw
xchg
sti
mov
subl
outsl
dec
popf
insb
arpl
inc
call
stc
ljmp
imul
push
or
mov
fsubrp
xchg
sub
outsb
lods
ret
stos
fwait
jecxz
aaa
sub
or
inc
mov
xchg
cltd
mov
pop
push
push
pushf
cmp
insb
aaa
mov
lret
ss
insl
cmp
dec
jl
das
js
mov
testl
and
sbb
sub
dec
movsl
outsb
push
or
clc
ret
rorl
xor
add
or
inc
shll
aad
mov
add
cmp
adc
sub
sub
hlt
adc
int3
loope
sbbb
dec
cmp
xor
addb
pop
push
test
pop
mov
push
rcll
dec
stc
iret
lods
loop
sub
lods
mov
jmp
insb
cmpsb
sbb
lea
inc
mov
dec
or
jb
das
add
into
stos
mov
jns
and
test
fildll
popf
fsts
pop
mov
or
or
in
sbb
out
add
lahf
mov
lahf
mov
jecxz
push
pop
es
sub
mov
sar
stos
add
sbb
xor
pusha
mov
cmp
stos
mov
rclb
js
jg
push
dec
dec
imul
mov
loope
in
dec
sub
in
pop
cwtl
xchg
or
add
ljmp
push
inc
and
imul
cmp
push
cs
in
xchg
and
xor
inc
xchg
icebp
push
cmp
jae
pusha
aaa
pop
mov
out
mov
inc
movsl
pop
cli
push
xor
idiv
cmp
inc
ret
lret
shlb
aam
out
pop
test
inc
mov
push
mov
data16
or
add
stos
cld
cs
fdivrl
mov
push
pop
fdivs
data16
arpl
xchg
mov
push
add
pop
cmp
push
add
sti
jbe
fs
and
outsb
dec
mul
clc
jg
call
sbb
pop
jge
or
pushf
js
testb
cmp
and
cmp
mov
dec
and
into
fsubrl
cmp
test
xchg
dec
test
sub
dec
cs
icebp
divl
xchg
mov
mov
dec
add
mov
dec
stc
jge
jae
arpl
xor
xchg
pop
xor
xor
xchg
inc
das
outsl
mov
cld
lods
mov
ds
andb
xor
mov
sahf
xchg
dec
data16
lods
jmp
xlat
cmp
das
push
mov
or
inc
inc
dec
ja
xchg
push
dec
stc
loope
decb
ds
jmp
jmp
outsb
mov
push
lret
xchg
pop
mov
filds
or
in
movsb
push
dec
sahf
adc
fisubl
std
rcll
insb
cli
gs
adc
sti
mov
jne
pop
sub
dec
pop
pushl
ficoms
ficoms
loopne
gs
sbb
push
adc
idivl
aas
js
or
mov
xchg
or
test
test
into
sub
lret
dec
cmp
inc
mov
and
rorl
xor
dec
inc
out
adc
xor
sub
iret
addr16
mov
or
xchg
bound
stos
xchg
jbe
mov
ds
ds
jle
int3
sti
xor
push
stos
in
fdiv
xchg
mov
mov
popa
sub
or
jbe
sbb
scas
jp
arpl
fs
xlat
or
fcos
adc
les
dec
sbb
testl
xchg
mov
mul
test
test
fbld
mov
pop
mov
pop
fwait
jno
cmpsb
int3
xchg
mov
stos
stos
xorl
sub
rorb
lahf
push
subb
pushf
je
popa
testl
xchg
in
and
and
inc
xchg
test
jge
mov
pop
ljmp
test
ret
ret
pop
imul
popf
adc
adc
and
imul
cmp
or
ds
sarb
or
movsb
jle
dec
cwtl
jae
add
or
test
and
dec
mov
test
js
lcall
orl
pop
out
push
jne
sub
jge
or
and
adc
subl
enter
loope
ja
and
aas
and
sub
adc
les
or
xor
lret
out
cmpsl
fisubl
xchg
xchg
cmp
fucomi
out
stc
dec
sbb
xorl
out
icebp
mov
mov
les
adc
cld
cld
sub
repnz
das
jb
aam
getsec
jae
sbb
rolb
aaa
and
mov
rclb
mov
rolb
sub
roll
push
or
cli
ror
dec
pushf
cmpsb
hlt
out
fucomip
lcall
mov
cmp
or
insl
ret
aaa
leave
aam
sbb
xchg
dec
jns
je
movsl
jecxz
cmpsl
clc
cld
imul
cmp
lahf
inc
sbb
call
fadds
mov
out
movhps
loopne
int
lahf
roll
test
dec
add
and
cld
repz
sub
into
lcall
dec
popa
sub
cmpsb
bound
sub
xchg
mov
inc
sahf
pop
stos
js
aad
sub
mov
sahf
dec
sub
repnz
dec
mov
add
loope
into
mov
stc
cmpsl
jne
ljmp
js
xor
mov
rorb
pushf
adc
mov
stos
pop
inc
pop
add
call
rep
and
dec
sub
mov
in
push
popf
and
mov
xchg
pushl
dec
mov
inc
sahf
repnz
pop
cltd
aam
dec
inc
hlt
stc
pop
xchg
sahf
out
dec
imul
adc
sbb
dec
inc
jmp
lock
or
jge
test
add
jge
sub
fmulp
mov
mov
dec
and
pushf
fnstsw
incl
mov
loopne
dec
icebp
fdivrl
mov
ja
push
mov
mov
sbb
andb
ljmp
xor
xchg
addl
stc
js
pusha
jo
movsl
hlt
inc
xlat
cmp
jl
cwtl
adc
push
aad
fcompl
sbb
xlat
dec
adc
or
pop
xchg
push
imul
mov
xlat
cvttps2pi
xchg
loop
movsl
mov
cmp
xor
cmp
or
movsl
lock
stc
pop
pop
stos
test
mov
cmp
lods
repz
ljmp
movl
sbb
mov
int3
push
and
ret
rorl
adc
call
insl
daa
jo
and
adcb
push
mov
jecxz
cli
iret
adc
mov
mov
push
clc
mov
mov
or
xor
test
sub
shrb
adc
shrl
andl
loope
leave
jp
scas
je
jns
pop
dec
sbb
mov
test
cmpl
and
shrb
fldln2
jno
outsb
repnz
push
sahf
stos
inc
test
inc
mov
roll
and
xor
fadds
dec
arpl
imul
imul
imul
push
mov
jmp
and
mull
loope
mov
lea
mov
mov
xchg
or
data16
loopne
ret
movsb
mov
in
daa
jl
int3
iret
mov
pop
xchg
xor
mov
push
insl
movsb
mov
cltd
inc
aas
inc
xchg
xor
bound
loope
in
mov
xor
dec
add
cwtl
mov
cmc
mov
xlat
xchg
enter
xlat
popa
inc
lahf
sub
xor
mov
scas
into
lcall
std
fwait
and
out
jg
aaa
mov
dec
dec
in
and
aad
xor
sub
clc
popf
loop
dec
mov
nop
add
or
cmp
dec
push
gs
inc
jnp
jle
pop
and
push
out
mov
push
repz
fdivrs
adc
test
mov
out
pop
lahf
push
mov
lds
fnsave
fsubrs
add
dec
inc
push
sti
je
push
jmp
mov
lods
lea
gs
sub
jnp
popa
and
data16
sbb
pop
xchg
test
fcmovne
mov
inc
test
jno
mov
cmp
xchg
mov
add
hlt
dec
and
jl
movsl
sub
scas
pop
dec
mov
lods
xor
pop
fbstp
ds
xchg
push
jb
nop
int3
and
jmp
mov
shlb
adc
insl
cmp
cmpsl
pushf
loop
test
jne
stc
in
mov
jl
call
inc
add
inc
sbb
push
pop
dec
push
and
shlb
outsl
xchg
inc
sbb
jae
add
pop
sub
push
cmpsb
adc
rcrb
xor
fdivs
dec
lahf
adc
mov
ror
and
xchg
adc
or
and
cli
das
mov
adc
jecxz
call
popa
idivl
scas
cmpsb
mov
rcll
mov
fsub
test
and
jo
cmp
sub
add
mov
or
push
and
fcomi
insl
neg
mov
mov
nop
out
push
fadds
inc
jb
ficoms
gs
fcoms
lods
or
cmp
jae
or
push
dec
and
std
adc
outsl
shll
fwait
cmpsl
jmp
jnp
movsb
ficoml
inc
lods
add
call
call
ror
aaa
cmp
add
fisubl
inc
mov
cltd
add
sub
push
loope
pop
add
mov
outsl
cmp
pop
or
or
aaa
mov
repz
push
jp
lock
adc
jmp
mov
std
jmp
add
inc
sbb
aam
es
out
inc
and
cld
mov
mov
test
pop
add
mov
jb
or
mov
mov
xor
dec
cwtl
mov
mov
lock
mov
into
ret
sub
and
cmpsb
push
aaa
test
cs
lret
mov
cmpsb
lock
pop
pop
stc
lods
aaa
mov
aaa
and
and
xchg
jne
daa
sbb
add
adc
scas
jb
jl
dec
int3
lods
mov
mov
mov
mov
les
mov
movsl
push
push
out
sbb
fsubrp
adc
das
movsl
jb
mov
jp
mov
jg
shrb
arpl
push
ds
inc
adc
std
adc
lahf
aaa
pop
xchg
fdivrl
sbb
inc
inc
int
in
popl
push
in
mov
test
cwtl
xchg
mov
fadds
mov
idivb
fbld
sbbb
sub
jne
imul
sbb
fdivrl
divl
lahf
lret
or
adcb
push
or
fwait
cli
xchg
or
daa
orl
xchg
push
inc
jmp
les
lahf
call
push
adc
mov
icebp
inc
cmpsl
mov
xchg
push
adc
lods
movsl
out
arpl
cld
mov
xor
push
add
scas
dec
int
dec
das
lods
xchg
repz
push
hlt
xor
or
pop
cld
fistpl
jb
rolb
or
pop
mov
rol
fldcw
stc
test
xor
les
popa
sbb
hlt
inc
test
cwtl
loope
inc
mov
inc
dec
xor
std
ds
jno
in
rcll
adc
and
fdivr
pop
out
sahf
add
dec
pop
shrl
in
mov
adc
icebp
mov
aad
xchg
jl
sbb
imul
mov
lds
mov
es
inc
nop
mov
adc
mov
sbb
cwtl
daa
push
add
push
cmp
pop
sub
clc
sbb
push
cmpsl
imul
fsubrs
fisttpl
enter
or
andb
out
shll
out
xor
adc
arpl
das
cld
add
pop
inc
movsl
cmp
pop
adc
call
or
inc
loopne
aam
adc
insl
nop
rcr
or
mov
sub
mov
sbb
add
loope
loop
scas
mov
mov
push
sub
xor
and
aaa
dec
or
add
shl
and
jno
js
mov
mov
cmp
out
xchg
lahf
sti
or
sub
ret
lods
jge
sti
ret
mov
outsl
jmp
rcll
or
xchg
jmp
jecxz
push
dec
aad
jg
cs
push
out
inc
and
add
gs
movsl
iret
and
lret
dec
cmp
jne
js
mov
push
subb
cmpsb
sbb
xor
imul
cmp
lret
int
aas
mov
out
sub
test
pop
mov
cli
sbb
rorb
adc
and
rclb
ror
mov
in
inc
add
cs
mov
outsl
mov
or
sub
and
aam
add
ds
pop
sub
std
dec
ja
add
aam
and
pop
sbb
inc
sahf
sbb
mov
pop
test
hlt
in
sub
fs
inc
cmp
dec
dec
inc
fisttps
rorl
outsb
loop
ds
lods
sbb
insl
gs
xchg
in
jae
mov
aaa
into
rol
and
pop
lret
inc
lods
xchg
cmp
mov
bound
push
pop
pop
push
push
or
addr16
mov
shld
push
xchg
xlat
ret
aas
lahf
or
jns
push
scas
and
out
jbe
popa
loopne,pn
and
push
pop
mov
movsl
adc
cmc
mov
fs
lea
or
pop
mov
std
adc
nop
cltd
ja
cs
ret
jle
mov
xchg
in
add
test
outsl
lret
dec
mov
std
insb
pop
sbb
jmp
fdivrl
and
add
push
scas
enter
in
bound
mov
mov
xchg
mov
outsl
add
popf
push
das
push
stc
jno
fdivrs
stos
pop
lods
adc
inc
inc
xchg
sahf
clc
mov
inc
jge
clc
jl
cli
adc
mov
mov
jp
ss
imul
or
sbb
stos
xchg
add
adc
sahf
cltd
outsb
sbb
mov
stos
stos
jbe
sbb
dec
mov
mov
adc
push
jns
push
jmp
cmp
push
jmp
dec
mov
sub
mov
jno
jge
es
fcomps
loopne
xchg
outsb
stos
fcomps
test
loopne
inc
test
cs
cmc
nop
and
lods
fcomps
mov
int3
test
mov
or
mov
jne
outsb
or
sub
aas
sbb
cltd
fldt
dec
xor
add
push
jge,pt
xorl
hlt
aad
loopne
cmp
inc
rolb
adc
push
sub
cmp
pop
sti
mov
js
mov
pop
shl
dec
cmpsb
ss
cmpsl
jno
and
jae
or
lret
hlt
sub
call
roll
movsb
rolb
push
push
repz
imulb
jo
dec
aaa
inc
in
and
mov
test
in
add
aad
mov
test
inc
loop
mov
into
push
enter
int3
movsl
xor
nop
repnz
lea
mov
mov
cli
ret
nop
xchg
fisubl
shl
aad
into
cmp
stos
mov
test
imull
push
mov
dec
icebp
bound
and
dec
xor
arpl
dec
and
popa
lds
push
or
pushf
shrb
mov
mov
js
enter
popf
push
pop
cmp
push
mov
scas
cmovns
jmp
das
loopne
cs
push
push
sti
ja
hlt
add
scas
adc
not
addb
test
add
outsb
add
je
into
xchg
loop
fistl
addb
in
or
pop
cmp
mov
inc
mov
mov
loope
dec
jp
mov
xor
xchg
data16
add
sub
jo
fisubrs
adc
hlt
mov
and
lods
les
pop
movsl
imul
sbb
js
int
sub
subl
and
fnsave
movsb
stos
arpl
ficoms
cmp
fbld
sub
nop
push
pusha
sbb
test
and
mov
adc
bound
stos
mov
sub
and
shl
mov
popa
pop
cmp
dec
scas
jg
andb
shlb
mov
movsb
stc
jmp
xchg
sub
mov
cs
notl
jecxz
jmp
nop
or
test
inc
and
mov
inc
xchg
insb
js
and
into
stc
adc
push
cmp
xchg
or
data16
out
pop
adc
inc
std
leave
jnp
push
dec
mov
repz
loop
add
jmp
mov
and
cmp
sbb
and
addb
test
scas
shlb
cmp
rorl
das
setge
mov
aas
stos
inc
fsub
loop
loop
mov
mov
or
sub
test
push
sub
dec
fdivr
ret
and
dec
inc
addr16
cmpsl
out
add
shlb
add
int
add
cltd
aad
push
xor
dec
fsubrl
or
lds
lcall
pop
mov
xchg
rep
adc
cwtl
mov
mov
sub
dec
int
inc
gs
jge
add
sub
sbb
imul
cltd
outsl
in
jb
inc
inc
std
call
loop
pop
sub
sub
insb
sbb
jns,pt
jp
cmp
aam
sub
mov
std
stc
mov
or
fistl
aas
cs
iret
fwait
inc
arpl
add
pop
lret
setns
addl
lods
xor
mov
jne
mov
pop
mov
xor
jbe
xchg
ret
add
int3
mov
sub
jne
outsb
setae
hlt
mov
mov
mov
aam
sbb
xchg
test
ds
adc
dec
popa
push
fwait
divl
jnp
pop
aas
push
idivl
fadds
sbb
mov
mov
repnz
popa
push
jmp
leave
mov
insb
cmp
jmp
lods
mov
or
loope
ds
mov
mov
imul
jo
mov
mov
add
movsb
rcll
out
jns
in
out
lods
or
lds
mov
aaa
mov
and
int
mov
arpl
cmpb
sub
dec
or
inc
pop
pop
shll
pop
leave
and
out
push
xor
cmp
mov
adc
pushf
mov
sub
sbb
xchg
sub
push
into
rorb
loop
cmp
lahf
fdivs
stos
push
cs
fistpl
mov
jae
mov
mov
je
iret
cmp
cmp
jnp
ja
push
je
ret
push
stc
xor
shrl
lds
cmpsb
test
lret
mov
stos
fxam
adc
cmp
repz
mov
jne
xlat
dec
das
adc
mov
mov
push
outsb
out
mov
ret
imul
pop
sbb
cwtl
add
js
xchg
gs
jns
pop
cmp
divb
and
add
xchg
nop
push
or
negb
jecxz
sub
or
les
scas
xchg
std
pop
inc
jno
push
pop
jecxz
add
push
mov
cmp
fxam
iret
test
rclb
sbb
dec
inc
xchg
push
pop
mov
pop
mov
mov
sahf
push
cmp
std
xor
orl
aas
jnp
icebp
and
cmp
nop
jge
clc
shlb
or
aad
jno
add
sbb
cmp
adcl
test
jne
push
enter
and
sbb
into
stos
bound
iret
faddl
jge
cli
mov
int3
out
dec
ljmp
xchg
sbb
jns
xlat
stos
pusha
mov
pop
xchg
xchg
das
icebp
in
or
pop
into
add
or
out
fwait
xor
mov
xchg
xchg
pop
inc
out
xor
cmc
imul
jle
mov
inc
push
js
or
xor
fs
fnsave
adc
jg
jnp
xchg
cmp
xor
sub
push
cltd
push
cli
mov
inc
into
sub
popf
imul
mov
ljmp
lds
dec
pop
movsb
hlt
sub
dec
loop
div
xor
jmp
sbb
shl
dec
repz
lods
add
cmp
push
push
or
add
push
mov
push
fucom
inc
mov
cltd
adc
in
sahf
xlat
int
mov
cmpsl
jo
std
stos
push
scas
mov
negb
mov
divl
or
xor
xchg
fs
sbb
andl
adc
xchg
xchg
mov
mov
dec
fs
fbstp
mov
inc
test
mov
push
push
cmpsb
mov
pop
xchg
adc
or
ret
mov
lret
mov
jo
dec
fwait
aad
pop
cltd
pop
cmp
mov
adc
stc
xlat
in
cmp
cmp
cli
aam
test
lock
xchg
cwtl
pusha
lds
iret
push
or
pop
jnp
imul
or
sub
jecxz
jne
stos
xchg
fcos
dec
jecxz
sbb
movsl
loop
push
popf
mov
imul
jle
in
mov
cs
adc
push
arpl
inc
sti
ljmp
je
je
push
insl
stos
int3
jne
pop
pushf
sub
les
xor
cmp
lsl
pop
popf
adc
inc
or
xrelease
or
mov
sub
mov
mov
movsl
ret
call
outsl
lret
push
subl
lds
or
leave
fwait
fcomi
bound
jg
cli
dec
pop
push
add
ja
adc
popf
faddp
jmp
es
and
loop
xchg
es
pop
or
sahf
xchg
pop
pop
mov
insb
xor
push
and
xor
pop
es
xchg
outsl
lods
lahf
jmp
popf
jmp
xor
xchg
pop
int
insl
cltd
pop
fmull
shrb
pusha
sbb
sub
cmpsl
dec
push
xor
aaa
incb
dec
lcall
add
xchg
push
sti
inc
jle
cwtl
and
adc
idivb
stc
mov
incb
xchg
ss
xlat
fiadds
add
aam
mov
arpl
cmpb
dec
inc
dec
pusha
xchg
push
xor
sbb
out
add
stos
jl
fists
mov
sbb
sahf
inc
data16
lods
mov
imul
xchg
add
adc
jb
std
xlat
mov
push
cs
mov
call
mov
js
fsubr
adc
ljmp
push
ljmp
sbb
andb
push
add
sub
jo
sub
inc
orb
pop
jmp
fdiv
inc
mov
in
jle
jne
pop
pop
mov
in
adc
mov
jg
fmull
pop
mov
jmp
scas
das
pop
jmp
repnz
aad
call
mov
mov
jmp
add
inc
sub
pusha
pop
mov
cmp
stos
dec
mov
fucomp
push
jns
jle
fisubrs
fsubl
jge
or
mov
ds
leave
push
pusha
fnstsw
mov
out
dec
inc
sbb
sti
xchg
sub
popa
ficompl
loope
lods
mov
stc
mov
loop
outsb
mov
addr16
inc
int
mov
les
mov
sbb
out
test
jp
inc
imul
xchg
xor
xlat
aas
inc
clc
or
mov
in
and
or
mov
push
ret
in
inc
dec
mov
lret
lcall
inc
shl
push
jmp
jg
jg
mov
xchg
jae
aas
xchg
cmp
xorb
ret
cltd
repnz
jp
cld
out
sbb
adc
cltd
imul
je
test
inc
xor
adc
fdiv
daa
jl
xchg
or
push
mov
mov
push
rorl
xchg
rcrb
mov
adc
xor
js
ja
out
jb
cmp
ss
push
cwtl
movsl
cmp
push
xchg
push
hlt
cs
mov
jne
push
ss
rcrl
call
addr16
scas
cli
enter
sbb
repz
mov
call
ja
loopne
inc
add
add
mov
in
or
call
and
add
mov
or
mov
sbb
cli
sbb
mov
call
call
xor
icebp
sbbb
enter
mov
popa
adc
push
adc
cwtl
fcomp
hlt
cmp
cmp
fcomip
pop
pop
fldt
roll
outsl
jecxz
dec
pop
jae
sti
shll
jb
lcall
cmpsb
shlb
cmp
dec
jno
test
dec
sbb
loopne
sbb
xor
and
sahf
bound
mov
pushf
and
pusha
sub
xor
idivb
lcall
mov
xchg
sti
xor
mov
jle
inc
xor
hlt
xor
fdivr
xchg
cmp
inc
pop
dec
lds
aam
mov
and
pop
or
push
dec
sbb
jg
jb
cmc
cmp
repnz
lretw
push
shrb
repz
jno
test
and
das
ret
repz
xchg
std
dec
and
xor
dec
stc
cmpsl
add
subl
outsl
push
rcrb
cmp
and
ret
in
fisubs
lcall
stos
lds
test
js
fistps
insw
dec
sbb
mov
stc
dec
lret
push
clc
call
sti
loope
icebp
mov
aas
insb
jecxz
push
or
xor
fs
or
mov
pop
test
lret
ss
inc
mov
jbe
mov
fcmovb
xchg
pop
dec
insb
xlat
fisubl
cmp
or
ljmp
mov
dec
dec
shrl
loopne
inc
btr
adc
sbbl
mov
inc
inc
jg
cltd
mov
pushf
popa
fdiv
incl
jo
pop
out
add
xor
int3
pop
push
sub
adc
adc
es
adc
rcrb
adcl
add
sub
cmp
out
xchg
dec
lret
jle
lods
adc
mov
jmp
jno
subl
addr16
popa
fsubs
incb
or
mov
jo
in
push
jl
mov
jo
movsl
ljmp
dec
inc
fidivs
adc
mov
fisttps
dec
mul
cmp
sbbb
push
xor
outsb
or
mov
aad
and
add
icebp
add
jmp
cmpsb
icebp
jecxz
aaa
pop
pop
hlt
stos
fucomip
ret
shrl
xor
cmpsb
movsl
testb
cmp
icebp
xor
sbb
les
scas
test
mov
inc
sbb
mov
rol
sub
push
sbb
sub
sub
sbb
pop
cmpsb
mov
pusha
pop
or
and
fwait
mov
mov
or
repnz
in
sahf
push
popa
adcl
in
or
dec
stos
negl
scas
sub
mov
and
adc
nop
std
xchg
mov
and
cld
mov
jne
je
or
add
mov
nop
testl
arpl
lock
mov
rep
addr16
and
push
fcomps
loop
and
repz
mov
je
inc
and
add
pop
xlat
insb
xchg
dec
outsb
insb
add
dec
adc
sti
mov
pusha
pop
pop
xlat
xchg
in
test
xchg
cmpsb
cmp
cld
jecxz
and
inc
mov
xchg
jae
cmp
inc
mov
sbb
jmp
mov
push
test
pop
insb
cmpsb
rolb
and
fstps
repz
cmp
js
xlat
cmpl
pop
jo
pushf
cli
xchg
cltd
in
dec
xor
mov
pop
sub
sub
nop
fbld
adc
ljmp
jl
test
sub
loope
je
push
jno
aad
jo
stos
and
xchg
repnz
out
adc
aaa
cmp
loopne
cwtl
and
insb
pop
in
cmpsb
jb
repz
adc
mov
test
inc
sub
dec
fwait
adc
xchg
xor
pop
stos
lea
or
sbb
ds
push
pusha
jo
push
nop
mov
xchg
roll
inc
test
sub
hlt
cltd
cmp
add
pop
mov
out
pop
dec
mov
xchg
stos
mov
xchg
mov
fstl
flds
sub
inc
cmpsb
scas
jmp
and
das
rclb
or
bound
mov
repnz
aam
sub
je
push
sub
or
test
cmc
popa
test
cmp
cmpsb
test
add
xor
scas
xchg
fsubr
dec
loop
xor
cmp
shld
add
inc
fbstp
sbb
mov
nop
nop
das
lcall
out
pop
mov
lahf
outsl
ss
pushf
stos
stos
inc
and
xor
xor
sarb
lds
out
loopne
cmpsl
push
fldenv
push
out
mov
mov
adc
push
inc
aaa
add
lret
dec
cld
mov
ja
cmp
testl
push
push
cmp
out
sub
mov
pusha
jl
push
scas
fdecstp
push
jnp
ja
mov
fistpll
ja
loop
mov
or
or
jmp
sbb
lcall
xor
in
or
and
xlat
leave
jle
mov
pop
or
inc
lods
cmpsb
addr16
imul
mov
in
or
inc
xchg
dec
xchg
push
std
and
mov
icebp
sub
movsl
sbb
sub
pop
mov
dec
daa
inc
in
add
leave
cmp
mov
sbb
iret
mov
je
dec
arpl
or
add
inc
mov
lret
and
lods
adc
and
clc
sahf
call
push
or
mov
icebp
push
dec
push
mov
in
es
in
pusha
cwtl
push
pop
fcomps
rorb
jmp
jae
pop
lock
mov
sbbb
jns
dec
movsl
shrl
mov
idiv
pop
cmpsl
sub
inc
loope
pop
sbb
sbb
jnp
rcrl
in
cld
push
xor
sbb
test
ret
jo
aaa
dec
fld
lods
pop
or
adc
and
adc
hlt
push
sub
mov
je
or
and
loop
pop
xor
insl
push
scas
cmpl
fucom
repnz
ret
push
ds
fs
mov
xlat
int3
dec
mov
inc
push
jmp
test
arpl
jne
inc
test
cmpsb
dec
jno
rcr
repz
mov
es
das
test
pop
or
sbb
lcall
fidivrs
add
ret
cmc
mov
jge
leave
pop
ret
lock
aas
in
mov
sbb
pushf
mov
fists
and
pop
sub
mov
adc
leave
mov
sbb
or
sub
and
sbb
stos
lods
push
ja
mov
adc
xchg
je
in
add
daa
cmp
jecxz
jle
mov
lods
dec
mov
les
inc
push
jge
push
insb
ret
jno
aad
popf
int3
clc
sahf
jl
test
lock
cmpb
rolb
fisubs
cmpps
and
pop
fldl
insl
repz
into
inc
imul
pushf
jmp
cwtl
xchg
inc
cmc
or
cmpsl
arpl
iret
push
pop
outsb
and
movsb
pop
out
mov
inc
push
dec
pop
add
pop
or
inc
mov
xor
sbb
test
cld
repz
out
xchg
or
and
push
imul
mov
cmp
inc
adc
movsb
mov
sbb
jb
out
ret
pop
sub
pop
insw
and
pop
hlt
or
in
pop
cmpsl
add
mov
in
in
mov
sbb
push
stc
pop
add
mov
or
std
cmp
xor
xchg
data16
cmp
stc
mov
jbe
imul
sub
pop
add
mov
mov
es
test
inc
xor
xor
lods
or
add
jnp
mov
mov
shl
sahf
or
push
pop
movsb
xor
into
pop
shr
cmp
repnz
dec
xchg
fucom
mov
out
mov
sub
cmp
adc
sub
push
jno
cmp
add
mov
sbb
and
shll
adc
mov
jae
sbb
mov
and
xchg
stc
pop
bound
rorb
stc
sbb
cmp
into
xor
dec
push
mov
mov
imul
lods
cld
dec
cmp
cmpsb
and
aas
minps
cs
iret
push
push
and
push
es
jb
add
jecxz
ret
out
leave
adc
iret
test
jmp
loop
testb
ds
jo
shrl
xchg
xor
xor
enter
out
jp
dec
testl
push
cmpsl
out
aas
push
aam
and
ss
loope
sub
or
std
mov
xchg
pop
cmp
jmp
std
ss
outsb
mov
mov
push
test
lods
cmp
loop
sub
push
sbbb
jo
in
cli
push
pop
cltd
sub
aad
inc
mov
and
into
test
or
xor
xchg
std
xchg
stc
sbb
jecxz
pop
cld
jno,pn
outsb
rolb
jo
mov
in
sbb
push
dec
adc
dec
inc
mov
pmullw
mov
sub
pop
push
mov
ljmp
mov
in
mov
jmp
fmuls
imul
push
jbe
lods
movsb
xlat
pop
xor
jmp
and
lcall
adc
mov
mov
es
inc
pop
xchg
fisubs
sub
xchg
push
ret
stos
jg
jo
sbb
mov
push
dec
push
cmpsb
xchg
sub
xor
cmp
jnp
ja
cmp
xorl
ja
je
lcall
arpl
jmp
pop
fdivrs
xor
inc
sub
pop
add
mov
jl
adc
ljmp
mov
stos
mov
cmp
daa
cltd
loop
push
push
sub
xchg
sbb
repnz
movl
stos
movsb
add
out
lds
pop
jns
nop
and
sar
dec
loop
call
cltd
mov
pop
pop
mov
into
stos
ds
imul
call
inc
xor
cmp
dec
mov
xchg
nop
xchg
and
int
hlt
mov
scas
xor
cltd
cmpsl
push
in
push
mov
fistpl
testb
scas
jecxz
inc
adc
adc
aad
je
jae
lods
es
and
ljmp
xor
adc
mov
popf
mov
cmp
lret
mov
int
push
sbb
std
loope
ret
shl
jp
inc
icebp
into
mov
scas
mov
loope
sub
mov
cmpsl
cmpsb
push
in
fs
cmp
inc
mov
negb
test
popa
out
pop
sarl
iret
into
and
adc
cmp
mov
and
jo
icebp
xor
and
clc
dec
out
xchg
xor
movsl
push
stos
jg
popa
into
notb
xchg
jmp
cwtl
loopne
inc
xchg
outsb
into
addr16
cmp
pop
je
inc
bound
pop
shll
imul
jne
add
movsl
movsb
aaa
sti
and
lahf
add
shrb
push
push
push
jge
cmp
cmc
push
pusha
or
imul
dec
icebp
push
nop
mov
sub
xchg
in
iret
sbb
insb
mov
xor
pop
fidivl
scas
std
lret
outsb
arpl
cmp
push
jns
mov
aad
mov
xchg
sbb
sbb
lahf
dec
inc
bound
roll
mov
cltd
mov
lahf
stos
cmp
jbe
dec
sbb
pop
je
mov
xor
setg
mov
pop
lret
lahf
jnp
jmp
leave
lods
fidivrl
cmp
xchg
jg
inc
adc
insb
popa
sub
cmp
inc
fisubrs
stos
sti
aad
adc
fisttpl
jnp
in
fwait
xor
mov
cmp
cmpsb
mov
mov
mov
pop
je
shlb
inc
imul
std
ja
pop
cmp
js
shl
add
mov
pop
add
les
adc
lock
mov
int
pop
add
popa
cwtl
in
mov
aam
add
or
gs
sub
repz
adc
push
pop
or
mov
scas
inc
loope
rcl
pop
jge
cli
cmp
outsb
test
mov
clc
mov
insl
push
adc
sub
mov
add
pop
imul
jno
lods
lea
nop
cs
xchg
dec
sbb
adc
mov
into
or
jbe
jl
rorw
iret
incl
jo
nop
xlat
cmc
ljmp
push
jno
adc
shrl
js
xchg
sbb
ret
or
js
inc
mov
arpl
mov
add
push
out
call
imul
jne
into
scas
lret
add
and
cmpsl
xor
mov
xlat
aam
inc
dec
mov
push
cmpb
jbe
test
dec
inc
inc
pop
adc
xor
imul
sub
clc
imul
pop
inc
rol
sti
lods
mov
and
leave
fstl
pop
ret
inc
outsb
dec
and
and
popa
push
pushf
stos
popa
test
mov
add
cmp
jnp
int
stos
inc
stos
movsl
inc
mov
push
push
lods
outsl
sub
lods
jl
daa
push
outsl
sub
and
in
mov
faddp
jg
int3
inc
adc
sbb
cld
cli
push
dec
in
pop
xor
push
imul
or
aaa
mov
and
ljmp
mov
push
cmp
and
icebp
push
or
je
xlat
xchg
cmpsb
shl
jmp
subl
mov
and
add
lock
push
imull
dec
mov
addb
xchg
or
adc
fistpl
pop
xchg
gs
sub
enter
sbb
dec
or
inc
jne
out
push
cmp
dec
add
push
cmc
xor
sbb
stos
mov
pushf
out
aam
out
add
fsubrl
popa
loopne
popa
cltd
int
fcoms
or
push
pop
xchg
in
addr16
cmp
push
nop
stc
add
mov
inc
loope
call
mov
cmp
xchg
out
in
or
sbb
pop
dec
push
jecxz
mov
test
mov
out
lds
jnp
fwait
add
push
xor
outsb
lods
pusha
or
add
in
dec
or
push
inc
add
sub
push
sub
test
dec
or
xchg
jmp
cmpsl
sub
cs
testl
push
dec
rcr
ds
adc
ljmp
cmp
leave
mov
fldl
or
pop
cmpsl
shl
ret
and
xchg
add
lea
lock
repnz
cli
sti
lahf
aaa
xchg
jae
xchg
pop
popa
jbe
into
les
sbb
cwtl
shrl
stos
sub
out
pop
lods
push
ret
into
stos
pusha
out
cwtl
shlb
pop
push
das
fdivs
xor
lcall
mov
xchg
cwtl
sbb
sub
ja
pusha
fcmovne
das
mov
hlt
inc
popf
xchg
sub
cmp
pop
lds
fmull
xchg
xchg
inc
mov
xchg
xchg
arpl
mov
push
jge
loop
and
dec
sbb
mov
les
stos
pop
jmp
mov
push
mulb
shlb
dec
cltd
mov
enter
daa
push
pop
xor
jl
lcall
js
pushf
clc
pop
movsb
ret
cs
xor
sub
jp
and
int3
cmpb
add
mov
js
aad
xchg
bound
stc
sub
lret
pop
mov
in
hlt
jb
lret
aaa
aad
pop
fiaddl
inc
push
or
xor
push
cmc
imul
cmpb
hlt
ds
mov
ficompl
loope
cmpsl
je
jno
repnz
mov
add
lock
and
mov
pop
jbe
push
sarb
cwtl
push
popf
sbb
decb
push
inc
data16
std
popa
lret
inc
pop
sbb
inc
pop
push
push
pop
call
push
push
lods
xor
aaa
pop
mov
xchg
insl
jne
mov
lds
push
mov
negl
pop
cwtl
xorl
daa
lock
hlt
and
sahf
les
mov
stos
ja
popf
sar
xor
xlat
pop
nop
push
xchg
push
fwait
cmp
and
jmp
out
adc
mov
mov
aas
xor
ret
cli
pop
data16
ljmp
adc
je
lods
mov
push
sbb
enter
fidivl
out
rcll
inc
mov
aad
push
jns
ret
popf
xor
or
add
pop
mov
sub
and
lods
mov
in
fwait
sbb
jno
pop
scas
push
mov
lock
and
dec
mov
or
cmpl
shr
sti
pop
or
roll
push
mov
xchg
xchg
push
xchg
fwait
leave
cmp
mov
ror
xchg
sub
sub
and
rcr
cli
sub
add
xor
sarb
push
adc
xchg
lret
and
mov
or
inc
test
aam
nop
mov
fisttpl
xor
fidivrl
cmpsl
aam
xchg
inc
xlat
cwtl
and
call
cmpsl
mov
leave
rorb
mov
push
mov
test
insb
rclb
jecxz
sbb
ljmp
jnp
add
pop
incb
sub
enter
mov
inc
cmpsb
shrl
insl
mov
repz
sti
rcll
adc
dec
fdivr
adc
aas
pop
dec
pop
xchg
or
xchg
aaa
stos
arpl
pop
push
scas
lret
adc
cmc
adc
mov
push
pop
and
mov
push
inc
or
dec
lods
aam
test
adc
mul
loopne
mov
fdivp
shlb
mov
jmp
mov
inc
scas
add
addl
or
cmp
add
popa
in
je
inc
and
stos
mov
sti
inc
add
stos
clc
out
out
or
iret
and
in
cmc
mov
outsb
jle
fucomi
sahf
scas
sbb
test
dec
sbb
fnstsw
arpl
mov
popf
mov
shlb
pop
dec
loopne
imul
out
push
movsb
popf
sub
and
pop
mov
xchg
stos
out
dec
add
push
sub
mov
sub
add
ss
cld
push
jb
add
xor
mov
shl
ljmp
xchg
cmc
stos
mov
push
xor
mov
mov
xor
clc
jo
xor
lahf
sub
addr16
movsl
test
push
add
jbe
push
inc
dec
add
aaa
mov
mov
mov
mov
repz
hlt
sub
call
stc
pop
pop
aam
in
inc
mov
popf
cmc
pop
mov
push
pop
push
shlb
xchg
lcall
mov
sub
dec
jno
mov
mov
enter
push
aad
loop
cmp
sub
out
in
mov
adc
push
adc
leave
cs
xor
jp
push
pushf
cld
jecxz
inc
lds
ljmp
lret
js
mov
adc
popf
mov
out
adc
push
xchg
in
mov
mov
pop
out
loopne
mov
ficompl
dec
lahf
xor
adc
out
push
aad
icebp
mov
daa
fsub
ret
push
pop
call
mov
mov
shrl
loopne
jae
gs
outsb
cmp
push
ja
call
jle
jno
xchg
adc
rcrb
aad
hlt
js
push
cli
dec
inc
mov
cmp
mov
test
int
or
pop
mov
adc
fwait
imul
sbb
add
out
movsl
mov
and
adc
ja
dec
mov
mov
dec
sub
arpl
loop
pop
cltd
shr
ret
pop
jno
rcll
sbb
or
jge
jae
inc
sti
jp
iret
cltd
xor
or
lods
cmp
scas
push
inc
adc
dec
insl
jb
adc
mov
mull
js
push
jae
int
sub
sub
sbb
mov
movsl
hlt
jg
ds
loopne
push
sub
movsb
out
jb
dec
adc
in
nop
dec
push
test
xor
insl
dec
mov
lds
pop
mov
xchg
movsl
pop
imul
inc
iret
pop
sbb
in
push
jg
nop
dec
les
jmp
push
push
jle
adc
cmpps
je
fwait
leave
and
dec
and
cmp
js
and
cmpb
ljmp
push
adc
movsb
dec
mov
pop
fidivl
mov
outsl
pushf
push
sbb
pop
xor
jnp
pop
adc
jmp
movsl
in
fistpll
cmp
jae
gs
rol
addl
add
subb
or
in
aam
sub
inc
call
pushf
xlat
pop
and
popf
popf
and
loopne
mov
push
ja
testb
jle
out
mov
inc
adc
call
sbb
daa
inc
inc
sbb
cmp
pop
add
sahf
in
cmp
sahf
nop
pop
pop
hlt
sbb
in
cld
mov
jo
add
call
rol
fcompl
or
daa
rep
add
add
ret
mov
sub
cli
fsts
dec
mov
dec
jp
jmp
aam
cmp
or
inc
mov
inc
ror
mov
test
or
popf
and
in
lods
cmpsb
jns
shl
add
pop
hlt
sub
jmp
scas
test
notl
sti
loop
adc
xor
subb
push
adc
int
ja
push
jbe
jge
loope
sahf
jmp
jb
shll
mov
push
mov
insl
rcrb
ja
xchg
das
pop
pop
in
icebp
arpl
test
xchg
repz
mov
dec
int3
leave
sub
and
lcall
sar
ljmp
scas
adc
ds
lret
push
push
aaa
popa
mov
lcall
lods
icebp
lock
ja
repnz
inc
and
repz
xchg
sub
aam
loopne
test
push
xchg
dec
inc
jmp
pushf
push
gs
jge
pop
cld
and
cmpsb
mov
mov
movsl
pop
leave
in
adc
push
fadd
jne
dec
jp
cmp
aaa
mov
jns
imul
push
adc
jne
sbb
lret
lahf
cmp
leave
push
add
aas
sub
jns
add
or
fwait
jb
dec
sahf
sbb
dec
pop
fwait
aad
and
inc
in
test
mov
ja
push
xorl
push
sbb
adc
cltd
jg
push
mov
insb
jne
and
push
cmp
loopne
mov
pop
aad
iret
adc
adc
loop
in
inc
pop
outsl
dec
xor
das
mov
stc
mov
in
or
call
xchg
jmp
cmc
inc
or
test
mov
decl
inc
movsl
push
dec
or
pop
xor
or
lods
movsb
bnd
jp
and
mov
xor
rorb
ljmp
xchg
out
insb
loopne
mov
mov
sub
cmpsb
sub
adc
out
aas
cltd
dec
xor
xor
add
mov
fisubrs
sub
ror
and
pop
sarl
mov
test
and
in
sarl
mov
je
xor
cmp
lcall
dec
outsb
lds
jnp
out
dec
sbb
lods
dec
int
xchg
iret
pusha
arpl
addr16
mov
daa
cli
mov
adc
mov
sub
int3
mov
xchg
out
out
add
add
jge
adc
and
call
adc
es
push
push
mov
push
push
gs
cmpb
fmull
es
fdivrs
mov
scas
imul
stos
jp
fimuls
or
mov
shr
rcl
pop
and
pop
and
jecxz
leave
insb
pop
leave
mov
mov
idivb
mov
dec
inc
nop
into
insl
cmp
inc
and
js
inc
int3
fsubrp
cmp
cli
inc
mov
sub
cwtl
sbb
mov
shrl
mov
int
xchg
jo
xor
or
sbb
and
xchg
mov
loopne
push
or
cmpb
push
mov
sbb
fildll
and
jnp
cmc
call
xchg
dec
xchg
add
rcrl
out
stos
stc
jbe
xor
jne
sub
mov
ljmp
lret
inc
push
push
das
dec
addl
in
push
xchg
sahf
lods
loope
addl
or
hlt
call
pushl
cwtl
rclb
xchg
xor
or
xlat
sub
adcb
int
jmp
or
lock
jmp
icebp
aaa
xor
pop
sub
cmp
dec
imul
repz
xchg
mov
and
lidtl
popf
inc
push
xchg
inc
insl
sahf
inc
int
loopne
insb
or
subb
and
and
cld
pop
inc
mov
test
adc
push
scas
xchg
mov
jae
dec
jmp
jl
lret
cmpsl
imul
nop
sub
xor
test
adc
jp
jnp
loope
jle
rep
popf
fs
mov
xchg
aam
je
hlt
pop
fldt
mov
and
push
inc
fistl
and
fildll
dec
dec
mov
xchg
jle
les
filds
dec
cs
call
mov
sti
mov
dec
xchg
aam
jmp
xchg
mov
imul
cmpsb
mov
pop
xlat
lret
sub
add
xchg
jmp
dec
test
or
ja
fnstenv
imul
adc
push
sbb
stc
jmp
xchg
loope
add
inc
mov
insl
adcl
mov
push
and
loop
jae
and
stos
xlat
jp
lea
dec
xor
js
scas
dec
mov
sbbb
pop
ljmp
test
jb
clc
dec
jg
fdivrl
test
mov
pop
or
fs
cmp
mov
mov
lahf
jecxz
mov
mov
xchg
dec
xor
xchg
adc
jae
jns
je
out
adc
add
and
stos
ret
test
push
xor
jbe
rcrb
mov
outsb
pop
cmc
push
in
insb
andb
int
pushf
ljmp
mov
or
sub
es
lret
push
dec
xchg
out
into
das
mov
inc
xor
jbe
jne
dec
mov
adc
les
int3
sbb
nop
popa
add
mov
add
sub
inc
stos
sbb
jo
shr
lcall
stc
scas
jo
arpl
pusha
push
les
jp
fcmovbe
mov
dec
pop
cmp
cmp
cmp
cmp
jbe
inc
inc
xor
push
pop
push
loop
aaa
adc
ljmp
jnp
bound
cs
mov
sbb
push
xor
lret
inc
daa
xor
iret
pop
pop
and
mov
or
scas
fs
push
or
jg
xchg
push
addr16
scas
pop
mov
dec
jo
mov
ror
pop
fs
cmp
pop
icebp
push
jle
pop
dec
lea
movsb
adc
stc
lret
fsts
push
push
dec
mov
dec
gs
incb
push
cmp
cmp
fdivr
add
mov
fwait
xchg
cwtl
mov
dec
xchg
decl
push
jae
adc
dec
data16
cmpsl
jmp
mov
popa
cmpsl
mov
sub
adc
add
cltd
rcr
or
and
lahf
int
lods
sub
and
test
mov
pusha
inc
jo
adc
ss
push
dec
int
sbb
mov
inc
lock
mov
mov
jnp
lds
int
movsl
xor
fldenv
das
mov
decl
mov
sub
adc
lahf
sub
add
sbb
mov
mov
jb
fsubl
pop
push
push
push
xchg
in
aam
fistl
xlat
and
out
adc
dec
je
xchg
aas
sub
mov
and
adc
bound
xchg
ret
addr16
mov
sbb
jnp
stos
dec
and
test
pop
mov
mov
adc
dec
mov
mov
jne
pop
jl
xor
lods
rorb
fbstp
xchg
ja
imul
pop
jle
fsub
lods
outsb
int
test
lret
jle
sub
popa
stos
test
dec
lods
jb
inc
movsl
in
sub
or
in
pop
sti
loope
scas
lods
int
add
add
repz
repnz
cmc
xchg
add
fmul
and
dec
ffreep
mov
mov
arpl
push
pop
jns
mov
adc
sbb
inc
add
inc
repnz
inc
pop
add
out
jg
imul
mov
or
int
inc
clc
ds
or
jg
push
lods
jp
loop
sbb
push
sbb
pop
sbb
mov
adc
mov
cli
hlt
lcall
ljmp
setp
jo
adc
xchg
push
ret
cmp
cmp
sub
pop
fbstp
add
iret
push
add
daa
pop
and
fimuls
or
mov
push
imul
aad
int
out
inc
js
and
xchg
dec
or
popa
lret
lods
inc
call
outsb
sub
mov
mov
add
outsl
jae
outsb
sub
adc
jne
cli
inc
adc
xchg
inc
xchg
pop
cmp
jmp
ffreep
in
push
adc
lock
lods
out
inc
rcr
pusha
sarb
mov
xor
fsts
frstpm(287
mov
mov
pop
sub
cmc
add
push
ret
jb
mov
mov
mov
bound
sbb
xchg
cwtl
inc
movsl
jno
orb
inc
adc
addb
cli
xchg
sub
xchg
mov
rolb
test
dec
or
sub
push
push
jno
out
movsl
mov
das
clc
ja
inc
ja
add
stos
xlat
mov
or
data16
adc
bswap
stc
repnz
mov
pop
lret
jle
mov
out
xlat
inc
pop
push
pop
sbbl
in
jl
inc
mov
scas
mov
ret
push
sub
cmpsl
add
int
nop
pop
lods
in
subb
sub
adc
pop
sbb
subb
out
jg
mov
call
inc
mov
lock
push
push
inc
adc
sbb
jle
mov
in
xor
xor
outsl
xor
lret
mov
dec
mov
loop
cmc
xor
xor
insl
xchg
jno
xchg
push
jnp
sbb
jg
cmpsb
add
movsb
lahf
stc
xchg
mov
fs
pushf
stos
movsb
mov
sbb
inc
push
orb
clc
lcall
sub
cli
mov
data16
pop
mov
rorl
dec
cmp
popa
or
push
xor
mov
imul
lcall
sbb
sub
xchg
shrb
fbstp
shll
aaa
int
stos
mov
xor
ja
lret
cld
nop
fld
pushf
sarb
lods
out
call
cwtl
cmp
fistps
pop
push
aas
push
sub
push
or
rcl
adc
lret
sbb
rcrb
inc
mov
outsl
adc
jnp
push
push
leave
dec
cmc
mov
mov
arpl
mov
out
mov
dec
mov
mov
cmp
or
imul
test
or
lods
fwait
sbb
push
lods
dec
xchg
jns
ljmp
repz
repnz
rcl
dec
mov
cli
mov
insb
testb
and
jl
adc
or
out
sbb
clc
pop
adc
sbb
jl
leave
pop
and
stc
jo
pop
fcoml
sbb
xchg
mov
cmp
add
das
icebp
imul
int
inc
insl
sub
push
test
jmp
cs
adc
push
or
pop
std
mov
imul
dec
aad
cmp
ret
test
mov
pop
ja
sbb
cmpsl
cmp
or
xchg
fcmovb
push
scas
pop
mov
rcll
rol
lods
jbe
std
fs
addr16
cmp
pop
mov
mov
or
push
cwtl
cmp
clc
leave
jnp
fimuls
sub
dec
stos
insb
ret
jno
push
pushf
cld
add
push
std
mov
jno
loop
and
mov
pop
and
jno
fyl2x
mov
dec
fdivrp
lods
loope
mov
inc
mov
xchg
pop
lret
lods
adcl
lds
aam
ret
shl
add
sarl
or
jp
mov
and
fcmovu
repnz
shl
pop
leave
push
jno
jne
push
sahf
inc
cltd
dec
mov
outsb
mov
jl
shrl
adc
add
inc
ret
ss
pop
inc
fldcw
add
and
jb
xchg
shll
stos
xor
add
mov
mov
cltd
push
mov
xor
sbb
dec
xor
cmp
xchg
adc
dec
lods
jp
dec
fstpt
jle
aad
outsb
data16
mov
jmp
rcll
mov
icebp
popl
bound
cmpsl
outsb
cltd
mov
cld
mov
loop
xchg
outsb
cmp
add
and
and
sti
push
ss
pop
pop
and
sub
jno
inc
add
xor
cwtl
xor
jge
sbb
jnp
mov
outsb
xor
lock
inc
imul
push
inc
push
sub
jb
or
mov
cwtl
daa
ror
das
mov
fcomi
in
imul
dec
mov
jno
outsb
dec
insb
push
gs
mov
cmp
jg
mov
mov
lods
sbb
push
stc
sti
mov
hlt
es
scas
leave
test
adc
pushl
js
jmp
jmp
sub
jl
push
xor
and
rolb
inc
aad
cmp
sbbl
sbb
mov
lea
xchg
arpl
lods
cmp
adc
popf
rorb
cmp
call
imul
jnp
xlat
mov
push
cwtl
lcall
xchg
or
cmp
push
fnstcw
mov
xchg
xchg
in
dec
rcrb
insb
jle
sbb
fistpl
hlt
jo
push
lods
in
test
pop
fiadds
cli
sbb
aas
adcb
sub
and
cltd
mov
aam
mov
mov
or
js
sbb
sbb
hlt
sti
mov
in
dec
xor
jmp
add
mov
ja
xchg
sub
lea
inc
xchg
mov
test
cld
jg
jns
mov
ret
insl
dec
add
mov
bnd
hlt
add
call
mov
push
out
fdecstp
fnsave
fsubr
mov
and
lock
xchg
shrb
dec
popf
jecxz
int
cli
or
and
call
daa
ret
mov
cs
adc
or
and
sbb
test
push
xor
or
ja
fmuls
loope
outsb
int3
or
dec
jb
mov
add
scas
add
mov
shrb
dec
xchg
or
leave
dec
mov
repz
icebp
lods
cmpsl
sbb
mov
cli
jnp
mov
aas
dec
sbb
fwait
jns
fdivl
inc
hlt
in
pop
ja
sbb
fcomps
cmp
and
jae
fistps
and
pushf
push
sub
repz
jle
imul
imul
cli
add
pop
hlt
xchg
arpl
test
imul
push
sub
and
mov
fistl
jge
enter
inc
sbb
cmp
cmpsb
popa
cmp
mov
mov
sub
bound
les
cmc
int3
mov
out
cmp
dec
xor
out
ret
push
je
movaps
cmpsl
cvtpi2ps
push
clc
and
inc
cmp
nop
shll
ret
xchg
cmpsb
icebp
jbe
push
int3
mov
loopne
les
mov
dec
sub
stc
push
fucom
lcall
mov
cltd
cmp
test
adc
mov
push
pop
jle
or
push
mov
iret
inc
jo
jns
cli
test
cltd
push
enter
push
sub
loopne
gs
push
in
push
push
sbb
pop
mov
cwtl
call
mov
add
add
adc
in
mov
inc
subl
loop
cltd
cmc
cmp
imul
jbe
lock
fcoml
mov
into
das
sbb
dec
sbb
mull
mov
rorl
es
fcompl
cmp
mov
out
lcall
dec
pop
or
and
stos
fnstenv
xor
mov
xor
push
mov
loope
out
into
insl
sbb
mov
push
mov
lret
dec
lret
das
and
ficoml
sub
pop
fmull
add
adc
jecxz
pop
adc
push
lods
mov
push
loopne
imul
cmp
or
fimull
aaa
xchg
cmc
dec
icebp
mov
mov
sub
mov
xor
imul
adc
adcb
divb
cmc
push
test
mov
cmp
pop
movsb
jl
mov
sahf
mov
xchg
frstor
lahf
sbb
orb
notl
mov
pop
mov
fldenv
push
pop
imul
inc
out
sub
and
test
imul
cmp
fimull
dec
or
xor
js
adc
mov
jge
xchg
dec
xchg
mov
call
xchg
scas
roll
jle
mov
aam
call
daa
inc
inc
add
pop
into
pop
inc
sub
jg
pop
lock
in
push
cmc
sahf
or
fs
and
jns
shr
and
fwait
daa
push
test
mov
nop
jne
aad
mov
out
dec
mov
mov
lds
jo
stos
jge
lods
test
enter
in
mov
pop
jp
sahf
scas
mov
jbe
lds
mov
shl
ret
mov
data16
pop
dec
cs
aad
jbe
stos
lock
inc
or
jle
or
cmpl
jb
lret
repnz
jp
dec
leave
imul
xchg
mov
xchg
inc
andb
ds
imul
mov
fwait
pop
pop
or
sub
push
dec
or
or
mov
add
ja
nop
xlat
push
clc
mov
into
cmc
mov
test
loop
xchg
int3
jle
add
aas
int
jmp
xchg
sub
or
push
and
fs
xchg
sbb
mov
js
insb
ds
pushf
and
push
adc
aam
pop
rorb
jae
lods
xor
or
cmp
xor
fbstp
sbb
mov
repnz
pop
dec
std
push
ret
xchg
jo
movsl
xor
cltd
xor
pushf
push
lahf
ret
lret
inc
dec
dec
in
ret
cltd
push
iret
test
dec
pop
es
test
pop
mov
push
daa
lods
inc
xchg
mov
cwtl
cmp
dec
xchg
repz
mov
mov
test
pop
mov
jb
loop
dec
jge
and
jne
mov
sub
add
fistpll
dec
fistpll
mov
inc
mov
sbb
in
add
xchg
xchg
inc
hlt
imul
inc
mov
xor
xchg
push
push
into
sbb
sti
cmp
repnz
rcll
sti
sbb
std
sub
cld
mov
inc
fbstp
rolb
cmc
xor
rcrl
mov
inc
jb
mov
leave
cmp
cmp
scas
fstp
xchg
sti
pushf
push
dec
dec
mov
sub
cmc
xchg
addl
stc
fdivs
shll
lods
lods
int
mov
push
cltd
ja
cmp
jnp
loopne
mov
push
dec
icebp
fstpt
sub
movsb
nop
push
xchg
pop
mov
push
daa
stos
imul
sub
dec
rcrb
xlat
mov
inc
push
sub
in
out
xlat
sbb
sbb
lods
sbb
loope
push
xchg
test
and
mov
jnp
loopne
arpl
xchg
call
pop
scas
and
pop
xchg
jne
mov
xchg
xchg
roll
sbb
sub
icebp
xorl
adc
outsl
andl
and
andb
mov
inc
shrl
add
sbb
imul
dec
adc
inc
fs
jnp
fnsave
ss
test
adc
cmp
xor
add
push
mov
mov
jno
shlb
and
push
sub
aaa
lock
push
bound
jl
aas
or
cmp
rorb
fidivrs
cmpsb
sub
mov
aaa
push
sub
js
test
jle
push
push
inc
shlb
push
lock
scas
xchg
negl
imul
cwtl
mov
xor
cmpsl
cmc
mov
pop
jno
push
xchg
cmp
push
cmp
sarl
cltd
lahf
mov
sub
xor
mov
add
int
inc
jl
out
and
ljmp
test
lcall
xor
test
mov
stc
cwtl
cmp
ja
test
add
shlb
xchg
std
in
ss
aaa
scas
je
aad
fistps
jbe
dec
jmp
filds
call
sub
repnz
test
lcall
pop
jb
jno
out
icebp
pop
arpl
mov
jge
nop
fimuls
xchg
sub
inc
jo
stos
inc
ret
inc
aaa
mov
xorl
sti
lock
inc
out
repnz
sbb
push
adc
xor
push
inc
cmpsb
adc
sub
loope
or
stos
mov
dec
mov
fsubp
clc
jbe
mov
mov
fdivs
pop
push
aad
push
and
popa
shrb
xchg
and
leave
in
testb
inc
mov
add
add
fidivrl
data16
loope
sbb
hlt
mov
xchg
sub
or
enter
rclb
sbb
lea
iret
mov
xchg
pop
pop
cmp
roll
inc
rolb
xchg
inc
cmp
rolb
push
jge
adc
push
mov
mov
push
mov
aas
sbb
cmc
push
sub
subb
push
mov
jo
rcll
and
xor
fbld
fcmovnu
mov
loope
cld
adc
test
push
cmc
call
inc
dec
add
mov
repnz
pop
push
push
stos
mov
push
pop
jp
mov
cmp
lret
arpl
lcall
fcmovb
pop
adc
jb
add
insl
inc
inc
mov
jne
in
jge
jo
ret
add
loopne
les
xorl
sub
shr
fwait
xchg
pop
std
dec
mov
add
imul
cmp
dec
mov
out
call
sbb
test
add
mov
cmp
pusha
cld
scas
cmpb
fildll
pop
ds
bound
adc
popf
repz
jnp
push
sti
leave
cltd
push
and
cmp
mov
sti
test
std
xchg
fildl
sarl
arpl
ffree
outsb
and
jno
cs
jns
scas
dec
lret
sub
or
js
idivl
daa
adc
mov
dec
and
mov
sahf
test
mov
dec
add
shlb
sbb
sub
push
sub
and
out
inc
inc
mov
stos
scas
lcall
std
stos
fcmovnbe
clc
xchg
sti
fimuls
inc
cmp
out
test
xchg
flds
dec
mov
sbb
sahf
enter
imul
sub
inc
sub
inc
aam
jo
pop
out
dec
jbe
mov
test
mov
frstor
push
jne
loopne
xchg
pop
pop
mov
nop
imul
lahf
scas
cmp
outsb
in
fisubrs
xchg
enter
mov
outsl
jecxz
sbb
mov
mov
xchg
mov
xor
stos
or
cmpl
cmp
and
insl
cmp
adc
into
inc
xchg
int
imul
sub
push
dec
mov
dec
pop
iret
scas
xchg
mov
sar
mov
jg
pop
adc
es
sbb
xchg
clc
fmul
push
call
dec
add
gs
sahf
pop
shrl
cmc
mull
xorl
paddq
sbb
icebp
ficompl
xchg
sbb
and
inc
xchg
pushfw
std
adc
decb
hlt
cmp
dec
dec
pushw
scas
insb
int
pop
insl
pusha
scas
pop
mov
cmc
cmp
dec
movsb
pushf
out
int3
mov
movsb
cs
out
jg
adc
scas
xor
sbb
bound
mov
sbb
jp
mov
fisttpl
dec
cld
push
mov
movsb
jns
cld
adc
dec
loop,pn
cmp
or
xchg
xchg
mov
fmul
and
pushl
push
fcoml
adc
sbb
das
xchg
sub
push
adc
and
dec
dec
in
or
xlat
in
fdivs
and
xor
nop
xchg
mov
popf
and
fisubl
stc
fisttps
out
rolb
pop
mov
inc
and
adc
pop
push
dec
dec
cmp
mov
shlb
insl
into
mov
les
repnz
test
fs
ret
xor
fidivrs
pop
fwait
imul
test
out
aas
sarb
add
clc
stc
push
gs
shlb
dec
xchg
jno
adc
fwait
rcll
jb
jge
dec
cmp
push
pop
add
xchg
test
pushf
jecxz
push
cmc
pushf
mov
sub
jbe
dec
in
ds
xor
add
mov
jg
jnp
dec
idivb
sub
cli
pusha
mov
xor
mov
jne
push
xor
cmp
outsb
int
or
dec
pop
dec
push
insl
inc
das
sub
mov
cs
lcall
cld
jmp
inc
fdivl
mov
imul
mov
addr16
mov
sbbl
ds
sti
into
lret
cwtl
mov
jns
cmp
or
test
dec
int3
aam
pop
test
pop
cmp
ds
mov
sub
loope
lods
stc
jle
scas
filds
cmp
xchg
mov
pop
and
dec
or
setg
aaa
rclb
xchg
jae
in
jp
jb
sub
cmp
mov
jg
cmp
dec
xchg
in
xor
jb
addr16
add
es
cld
popf
sbb
aam
out
ror
mov
xlat
adc
cli
arpl
das
push
mov
lahf
or
lea
sub
pop
push
fs
xchg
add
arpl
sub
or
roll
xor
push
push
lods
pop
fld
jns
push
scas
mov
stos
jbe
shlb
adc
andl
jne
push
mov
and
fisttpll
into
inc
sbb
cmpsb
incl
negl
jo
push
aad
in
fstpl
and
xchg
ljmp
iret
aad
push
fisubs
shr
repz
xor
test
mov
fistpll
mov
pop
enter
pop
sahf
mov
push
and
jns
mov
adc
push
cmp
jb
adc
stc
data16
cmp
out
dec
xchg
push
push
ficoml
in
xlat
sbb
mov
outsl
push
pop
inc
adc
mov
adc
push
sahf
jl
adc
fwait
push
jl,pn
call
addr16
sub
test
push
adc
push
jmp
inc
dec
ret
push
pop
es
stc
test
add
and
adcl
pop
ds
repz
insl
out
addr16
imul
cmp
fcompl
and
int
and
in
add
ficoml
aaa
mov
shll
out
cwtl
mov
push
mov
sub
push
mov
jne
out
inc
test
push
push
lcall
xlat
sub
stc
js
mov
fcompl
adc
hlt
movsl
sbb
mov
scas
lods
inc
adc
and
outsb
mov
xor
movsl
add
inc
lcall
out
xor
dec
mov
xchg
mull
jmp
lret
outsb
sub
popf
push
pop
push
cmp
push
imul
nop
jb
gs
lds
repz
aad
pop
pop
or
mov
mov
pop
xchg
out
imul
cltd
aam
inc
add
dec
sbbl
mov
cwtl
mov
and
push
scas
push
ror
out
and
cmp
sub
mov
jnp
out
dec
mov
and
mov
lods
inc
lds
ja
or
movsl
or
xor
inc
inc
xlat
test
inc
add
fnsave
sub
mov
or
aaa
add
and
sub
arpl
lds
or
push
mov
lret
fsubp
dec
cltd
push
mov
xor
jg
cmp
scas
jb
mov
shlb
jg
sbb
in
rolb
test
or
lods
icebp
repz
cmp
and
scas
dec
dec
ljmp
sbb
lock
mov
inc
pop
jge
and
lock
into
jne
lods
shll
cmp
and
mov
sub
push
adc
dec
lods
jg
aam
ljmp
sub
mov
popa
out
cmc
cmp
and
dec
cwtl
andb
pop
lods
push
out
push
ja
pop
adcl
add
mov
cltd
cmp
aas
mov
hlt
adc
mov
inc
mov
data16
repnz
sti
lods
sub
scas
popf
or
aam
cwtl
add
ss
sub
cmpl
jmp
imul
xor
and
addr16
cmc
push
xchg
add
incb
aas
insl
mov
sbb
dec
cmpl
stos
ljmp
push
fs
in
dec
dec
or
std
and
ja
jnp
into
mov
sbb
push
out
dec
flds
or
push
inc
xor
jmp
out
xor
outsb
int3
jo
lods
sbb
aaa
lret
lcall
inc
mov
push
sete
pop
loop
sub
subb
mov
pop
cmpsb
push
push
loope
stos
inc
inc
pusha
inc
sti
jle
test
ss
inc
stos
mov
push
mov
mov
cs
mov
nop
in
ficoml
and
pop
fabs
aad
mov
inc
jne
test
aad
leave
and
mov
movsl
jno
xchg
cmp
shl
shrl
in
popa
out
mov
sbb
mov
adc
mov
ret
fsubs
das
dec
jnp
mov
mov
pop
stc
jb
shll
push
lahf
aas
mov
bound
xorb
fwait
ds
cmp
and
outsl
fisttpl
incl
and
clc
and
sub
mov
lock
cmc
cmp
lret
lret
mov
pop
in
sbbb
mov
pop
push
lahf
rcl
mov
sbb
sub
lret
fwait
mov
jbe
in
pusha
int
bound
les
push
js
mov
or
sbb
mov
xchg
js
clc
mov
cwtl
push
push
adc
fcoml
adc
jb
int3
push
divb
push
fildl
iret
mov
add
mov
cli
repnz
daa
testb
fxch
jo
pop
mov
sub
xchg
jae
jne
xor
sub
movsb
gs
movsl
bound
sbb
mov
lret
movsb
ret
out
pop
inc
sbb
adc
aas
xorl
add
ficompl
xchg
insl
shll
scas
jb
jle
movsb
sarl
loopne
gs
jg
lcall
je
dec
cmp
and
pop
mov
cmc
cmp
xorl
xor
mov
mov
scas
lods
add
jno
jmp
push
mov
rorb
push
push
xchg
dec
xchg
cmp
stos
sub
mov
imul
push
inc
ret
push
jnp
in
stc
sti
in
repz
imul
jecxz
cmp
dec
ret
ss
xchg
or
scas
cmp
fcoml
xchg
pop
test
jae
sbb
sbb
mov
inc
js
test
mov
adc
fsubl
addr16
inc
pop
push
sub
xor
in
aaa
sub
fsubl
ficompl
test
cmp
fwait
imul
pop
out
es
fistpl
inc
neg
pop
sub
out
pop
and
add
int3
leave
ret
inc
pop
dec
test
dec
lock
dec
xor
push
test
mov
lds
adc
pop
js
shrb
xchg
dec
xor
sarl
les
mov
jge
loop
fsubr
lods
pop
imul
notl
dec
sbb
insl
push
test
xor
xchg
cmpsb
cld
cli
es
mov
flds
out
xor
pop
fld1
in
stos
sbb
inc
imul
jg
push
popf
aas
aaa
loope
adc
add
sub
fwait
ret
cmc
push
jo
mov
jno
mov
or
iret
or
in
out
js
js
jo
push
mov
les
jne
cltd
lea
fisttpll
rorl
shlb
and
fstl
popa
je
int
sub
das
jg
push
sub
adc
scas
sub
add
push
dec
loopne
fnsave
leave
shrb
testb
mov
stos
daa
inc
and
inc
out
insl
push
out
add
cmp
repz
push
lds
adc
push
adc
cmpb
fdiv
scas
mov
pop
mov
mov
movsl
lret
add
mov
ja
outsb
xchg
sub
pop
ljmp
dec
leave
jb
xchg
push
cmp
daa
dec
scas
push
ret
lahf
or
mov
scas
jbe
fidivl
push
ja
call
sub
and
mov
pop
cmp
dec
xchg
mov
cmp
jmp
test
cs
and
shll
xor
lcall
call
in
lods
int3
int
mov
inc
jge
jp
dec
and
cmp
aaa
inc
repz
jle
mov
xor
cmp
push
mov
or
out
xor
hlt
jno
repz
mov
pushf
out
mov
in
xchg
mov
rcrl
adc
fsts
test
call
jb
out
sahf
ljmp
pusha
cmp
push
lcall
in
sahf
mov
push
or
pop
lcall
jo
imul
push
cmp
int3
cmpsb
mov
mov
mov
mov
sub
cmp
lods
fdivrp
xchg
int3
mov
cmp
aam
jb
and
inc
mov
pop
push
sbb
dec
movsb
adc
jbe
gs
push
xchg
mov
push
in
jp
dec
lahf
push
sub
dec
es
fistl
dec
outsl
es
testb
repz
int
adc
addr16
mov
loop
ljmp
and
lods
lods
lods
subb
pop
and
mov
push
jnp
jle
and
stc
test
rolb
popf
mov
std
adc
bound
fnsave
rcrb
mov
adc
mov
inc
fsubrs
cmpsl
mov
scas
jns
push
jp
mov
xor
mov
dec
fists
or
out
dec
mov
cmp
xor
mov
popf
jno
or
enter
lods
in
pop
out
cmp
icebp
arpl
mov
fimull
ficoml
int
pop
pusha
mov
aaa
and
add
test
mov
int3
test
jmp
addr16
cmpps
test
inc
movsl
xor
test
dec
cmpps
movsb
and
in
mov
aam
outsl
dec
xor
sub
mov
or
jnp
mov
lahf
scas
sarl
jae
push
shlb
mov
divb
push
js
mov
inc
int3
in
xchg
sbb
mov
ror
fwait
dec
cwtl
mov
mov
xchg
insb
push
loopne
add
adc
test
or
xchg
adc
adcb
or
bound
std
jns
pop
jne
in
xchg
fldenv
fstl
mov
or
in
out
push
outsb
insl
repnz
sarl
fstpl
cmp
lcall
mov
xor
push
sbb
rcl
aaa
cmpsl
aaa
cmpsl
fsub
cli
mov
sbb
sti
push
lock
iret
or
and
jmp
sahf
leave
stos
stos
xor
jnp
add
inc
jecxz
add
xchg
mulb
into
es
rcr
shlb
adc
adc
and
out
push
leave
adc
mov
xorb
and
sbb
xor
insl
lcall
pop
lcall
mov
mov
loopne
mov
inc
ja
fistpll
jle
jb
sub
in
dec
test
rcrl
dec
ljmp
sub
add
cmp
pop
or
fs
sbb
andps
imul
inc
xor
scas
repz
sub
or
addr16
loopne
imul
gs
dec
mov
push
mov
jge
sbb
test
mov
call
movsl
loope
cmp
fcomps
pop
inc
dec
jg
mov
pop
mov
sub
insl
mov
jne
pop
push
test
cmp
mov
test
shl
loope
mov
xchg
lret
and
pop
dec
fxsave
pop
aam
stc
push
in
push
push
and
and
xchg
and
fs
adc
loop
push
inc
pop
jl
xchg
out
mov
loopne
shlb
cmp
daa
mov
mov
inc
aad
aaa
pusha
push
mov
iret
or
inc
jge
pop
sahf
or
jge
les
arpl
or
stos
xor
inc
test
nop
mov
mov
sti
xorl
sub
jge
xchg
ja
bound
lahf
lahf
xchg
or
mov
jg
lahf
xlat
cld
mov
loope
adc
insb
or
dec
or
sahf
sub
jge
or
lods
add
insl
sub
repnz
or
mov
repnz
jmp
cwtl
xchg
pop
or
push
es
jle
cli
ss
lds
les
mull
loopne
stc
or
cltd
sub
mov
and
nop
out
out
out
cmpb
popa
popf
incl
inc
clc
ds
sub
xor
repnz
in
sub
push
outsl
xchg
fstpt
mov
das
lret
or
pop
test
add
cmp
clc
cmp
and
mov
push
lret
call
lods
xor
xchg
test
push
stos
sbb
mov
jecxz
gs
andb
or
test
sbb
mov
cmpsl
inc
adc
pop
fwait
mov
push
jge
loop
pop
adc
movsb
sahf
mov
leave
fnstenv
inc
fs
test
lds
fsubs
and
pop
sbb
lret
or
test
scas
loope
hlt
shr
xchg
mov
cltd
dec
jno
sub
popl
in
mov
jmp
adc
mov
aad
adc
dec
adc
test
imul
xor
jl
imul
out
lahf
int
decl
mov
adc
sbb
jb
mov
adc
out
xchg
add
sbb
push
dec
sub
shll
bound
pop
xchg
popf
add
add
mov
stos
cmc
mov
stos
in
push
dec
leave
cs
sbb
dec
dec
xchg
andl
push
and
mov
jae
scas
and
mov
pop
mov
dec
ja
mov
lock
pop
sub
testb
das
movsl
or
jne
stos
jmp
sub
jge
fnstcw
test
add
or
jb
stc
adc
and
pushf
scas
jle
mov
dec
repnz
jp
xchg
test
pop
aas
aas
or
or
popa
cmp
daa
lods
pop
or
data16
in
sub
mov
jb
mull
jae
insb
das
cmpsb
stos
cmp
xchg
ss
test
mov
jne
cmp
repnz
out
cmp
xchg
cmp
jl
jbe
test
pop
mov
lds
jnp
sbb
fsts
inc
dec
jl
dec
data16
out
mov
test
pop
pushf
add
cs
push
xorl
ret
inc
inc
ficomps
jnp
jne
push
das
push
movsb
divb
mov
cmpsb
xlat
mov
pop
insb
and
mov
sahf
cmpsb
push
add
lret
ds
jnp
push
fisubrs
out
mov
mov
mov
mov
pop
movsl
ficompl
jle
mov
jo
cmp
insb
push
scas
or
and
sarb
test
std
lret
push
add
push
pop
sarb
inc
lock
lcall
in
rorl
int
cmpsl
jmp
mov
sti
mov
test
sbb
xor
jno
add
popa
mulb
sbb
cmp
shl
shll
xchg
aam
inc
pop
mov
cmp
mov
nop
push
negl
and
arpl
cmp
lret
std
mov
addb
push
std
mov
cmc
nop
aas
xchg
and
aaa
push
test
outsb
pop
sbb
pop
cli
orb
test
mov
daa
das
notl
sub
dec
pop
mov
xlat
lods
push
js
aaa
sub
or
cmp
cwtl
cmpsl
jne
popf
lcall
cmp
call
aas
mov
dec
jecxz
dec
push
mov
in
ja
loop
std
loope
aam
sub
cli
adc
xchg
test
dec
sub
sbb
mov
sub
add
data16
push
sbb
stc
js
das
enter
in
hlt
push
test
das
into
sub
mov
and
lods
pslld
gs
inc
mov
addr16
xchg
pop
prefetcht2
cmpsl
xchg
mov
and
negl
stc
or
push
pop
movsb
add
fmul
sbb
cmp
mov
nop
lock
stos
lahf
push
scas
lods
cmpsb
pop
push
jb
cmp
adc
popa
cmpsl
and
dec
shl
mov
adc
pop
or
jl
inc
enter
mov
je
pop
cmp
pop
repnz
xor
jecxz
cmpsl
lcall
sub
es
fbld
js
lods
dec
das
mov
cmp
leave
or
ffree
scas
rcll
add
adc
and
jnp
fwait
and
jecxz
rol
lods
pop
and
scas
xchg
imulb
jmp
add
pop
dec
xchg
lret
sbb
mov
das
push
mov
popa
repz
push
sub
jmp
cmp
xchg
adc
sbb
repnz
inc
mov
inc
xor
mov
test
shl
imul
lea
leave
insl
push
sbb
scas
les
out
icebp
push
test
lret
cmp
je
std
stos
sbb
inc
ret
nop
lds
in
sub
test
data16
sbb
pop
mov
lahf
pop
mov
add
out
mov
out
push
cs
mov
std
pop
es
or
rol
outsb
or
mov
jl
popf
xchg
jmp
cmpsl
andl
fs
movsb
mov
mov
orl
mov
iret
in
sub
or
mulb
lods
mov
cmpb
cmp
mov
icebp
lods
jp
xchg
lcall
xchg
sarl
dec
or
loope
xor
cmp
addl
loop
ss
cmpsl
test
jb
stc
ja
lret
fisubrl
test
or
xchg
jle
daa
sub
nop
sub
out
cmp
sub
mov
sti
faddl
sbb
push
and
dec
shll
and
mov
rcrl
dec
in
fistps
sub
mov
dec
sub
mov
jecxz
enter
add
and
add
or
xor
icebp
jo
int
fsubs
add
test
call
scas
cmp
cmp
ss
fwait
gs
lods
lret
out
cmpsb
lock
cmp
pop
or
mov
inc
pop
shrl
xor
sub
xlat
sub
dec
repz
fsubrl
out
int3
es
push
fimull
sbb
addr16
pop
int
data16
call
loopne
out
jo
nop
and
push
cs
jae
inc
xor
into
xchg
mov
popf
dec
xor
jl
sbb
push
in
or
adc
pop
push
cmpsl
sub
fidivrs
push
test
xchg
mov
inc
lds
push
dec
xlat
in
dec
push
push
dec
aaa
dec
les
or
jp
test
outsb
add
sbb
dec
push
cmp
jecxz
cmp
ret
test
inc
push
mov
mov
mov
mov
mov
mov
mov
aaa
push
ja
cmc
cmpl
ds
jle
push
xor
or
lahf
shlb
mov
daa
loopne
xor
cmp
loop
dec
popf
fs
cmp
push
mov
movsb
call
cmp
sbb
push
repnz
sbb
daa
mov
and
push
xchg
mov
sub
and
outsb
js
sbb
sbb
fs
out
lock
pushf
lods
dec
cltd
cli
loope
test
movsl
xor
dec
loopne
test
pop
das
ret
inc
repnz
push
es
in
icebp
outsl
fcmovbe
and
repz
and
imul
xor
and
test
dec
in
cltd
repz
sub
jo
sub
test
adc
fwait
testb
stos
cwtl
movsb
add
movl
fsubrl
int3
test
fucomi
pop
in
lds
adc
out
mov
mov
mov
ljmp
xlat
outsb
test
roll
sbb
jo
rcr
ds
and
movswl
mov
nop
pop
dec
lret
push
xorl
or
lea
aam
enter
test
scas
ljmp
adc
shrl
pop
fcmovnu
add
xchg
scas
lret
xor
pusha
cmpb
daa
add
sbb
sahf
sbbl
xchg
test
push
or
enter
pop
mull
jno
call
inc
sarb
mov
fnstenv
push
leave
or
inc
pusha
adc
sbb
or
xchg
cs
cmp
cmpsl
sbb
inc
xchg
outsl
jae
pop
outsb
notl
pop
sbbl
aas
sub
or
inc
xchg
icebp
les
repnz
leave
test
and
jo
xor
in
fstpt
or
into
inc
sbb
roll
in
adc
pop
divb
inc
add
std
enter
je
sbb
stos
mov
add
repnz
inc
xchg
loopne
xlat
call
aad
fldt
xor
cmp
fcompl
out
fsubs
mov
inc
sti
jae
jp
hlt
push
mov
sub
scas
xlat
fcomip
scas
xchg
mov
int3
outsb
idivl
shll
sbb
or
inc
adc
jp
sbb
dec
sub
or
and
sar
sahf
push
jle
and
cmp
cmp
outsl
pop
into
scas
repnz
les
add
ljmp
and
jnp
pop
shll
adc
fstps
jbe
or
pop
sbb
mov
push
jecxz
push
lock
xchg
jecxz
out
insl
bound
adc
pop
sub
jne
adcb
adc
rolb
jno
ret
mov
fs
xchg
lret
scas
cmp
pop
sbb
cwtl
imul
ss
add
pop
sbb
jb
fadds
stc
cmp
mov
jmp
inc
mov
cli
fwait
sbb
xor
aad
pusha
lods
push
push
mov
int
in
cmp
std
add
sub
inc
pop
std
push
pop
mov
mov
jle
clc
gs
add
flds
popa
in
js
mov
inc
cli
mov
mov
pop
xchg
inc
rol
test
test
data16
mov
dec
std
push
inc
jge
jbe
or
cmp
filds
pushl
out
mov
and
je
shlb
pop
and
fimull
sub
repz
add
movsb
jle
xchg
cmc
in
popa
sub
xor
ljmp
cmp
push
adc
out
cmp
cmp
add
dec
lods
cmpsl
or
mov
test
xor
outsl
out
addr16
pop
inc
jle
call
movsl
sub
xchg
add
ds
daa
xor
cld
scas
sub
pop
das
pop
inc
add
les
xor
movsb
mov
into
cmp
inc
mov
jnp
push
mov
gs
jb
fsub
push
cmpl
insb
mov
sbb
sbb
sub
addr16
icebp
and
xchg
aaa
jno
mov
or
jne
fcmovnu
adc
ja
icebp
cmp
loop
xchg
xchg
jno
dec
fsubl
mov
in
decb
ljmp
sarb
lret
test
mov
pop
sahf
je
mov
push
add
popa
sbb
ret
int3
lds
add
lahf
adc
fs
aaa
sub
sub
and
push
int3
pushf
mov
scas
jg
mov
lods
mov
fisubrl
sahf
adc
icebp
mov
aam
rcrb
push
mov
inc
aad
outsb
je
adcb
lcall
dec
xor
pop
leave
mov
out
gs
stos
dec
add
jg
lret
and
subl
mov
jp
out
flds
mov
sbbb
or
shrl
fisttpll
add
push
imul
inc
nop
mov
and
cmc
push
daa
in
jmp
add
xchg
push
add
mov
iret
add
sub
or
dec
hlt
sbbl
imul
stc
fwait
or
sub
subb
sarb
push
repz
or
cmp
dec
and
loope
mov
mov
dec
cld
insl
xor
fstpt
or
arpl
or
pusha
ret
sub
popf
add
xchg
ljmp
or
rcr
fisttps
aad
mov
push
xchg
cltd
mov
daa
jmp
das
fidivl
inc
dec
push
push
add
sbb
sub
pushf
cmp
mov
shl
push
pusha
inc
mov
ret
clc
push
insb
outsl
inc
test
test
sbb
cmp
aaa
mov
mov
sbb
cwtl
dec
sbb
std
scas
pop
xor
insb
dec
hlt
xchg
push
int3
jb
mov
fildll
sti
shrb
loope
std
or
imul
call
adc
xchg
aam
cmp
push
jl
int
mov
jns
loope
addr16
push
insb
jp
pop
adcb
cmp
pop
add
inc
inc
jnp
decl
push
gs
xor
xor
mov
xor
pop
into
sahf
inc
sub
lods
push
inc
fistpl
fisubrs
out
pop
ficoml
cmp
and
clc
adc
ja
mov
push
and
mov
clc
xchg
adc
lcall
popf
pop
xchg
mov
repnz
cltd
add
xchg
das
xchg
bound
pop
int3
or
cltd
adc
ret
xchg
cs
push
rol
aam
sbb
aam
mov
and
and
or
inc
push
es
ljmp
nop
movsb
sbb
xor
cmc
or
movsl
jb
shlb
adc
inc
mov
out
pop
jb
cmp
stos
jne
adc
sbb
in
pop
inc
mov
aas
sub
ret
mov
dec
into
inc
push
xchg
in
stos
inc
ret
repnz
mov
out
pop
push
cmp
jo
fcompp
cli
xchg
out
addr16
jle
es
inc
pop
daa
fwait
stos
popa
pop
and
mov
inc
mov
sub
hlt
add
mov
pop
rolb
outsl
out
inc
idivl
add
sub
js
shr
int
dec
mov
inc
andb
movsb
call
stos
loope
stos
cwtl
and
scas
std
pop
icebp
cmpsl
xchg
dec
es
pop
inc
loopne
sub
cmp
xchg
arpl
fnstcw
inc
push
lods
sub
sahf
das
ret
cltd
stos
repnz
xor
shrb
loope
push
jne
cld
lcall
jl
imul
sub
lahf
stc
shll
movsl
mov
and
stos
sub
in
mov
sahf
xchg
into
pop
dec
rolb
rcrl
pop
xchg
inc
adc
mov
fiaddl
loope
sub
dec
pop
mov
xor
or
dec
mov
bound
cmp
shlb
int
aas
cli
and
icebp
cmp
add
test
or
mov
bound
mov
loope
mov
dec
cmp
in
lcall
mov
xorb
and
cmp
ret
jecxz
lahf
xchg
sbb
inc
dec
mov
sub
pusha
and
jmpw
mov
and
aaa
or
jl
faddl
pop
ljmp
test
jb
test
pop
push
pop
das
and
xlat
add
cs
sbb
inc
add
adc
or
fadds
out
ret
cmpsl
aam
jecxz
pop
pop
call
add
dec
cli
xchg
xchg
orb
and
sbb
sub
push
xchg
or
jo
out
pop
ss
lods
test
mov
xchg
inc
add
sub
pop
cmp
or
sbb
daa
or
cmpsb
adc
cli
xor
lret
push
dec
nop
push
pop
dec
push
mov
aad
mov
push
call
push
ss
or
push
cmpsb
fildl
adc
push
inc
mov
push
repnz
inc
shlb
or
std
outsb
push
jg
clc
fadd
or
xlat
jb
mov
or
clc
add
cmp
imul
jo
stos
fs
leave
adc
xchg
rclb
nop
push
ss
out
push
xchg
inc
lret
and
dec
mov
cmp
pop
dec
out
sarl
cmpsb
mov
pop
xor
push
out
rclb
popa
scas
mov
test
je
stos
test
jnp
cmp
outsb
pop
out
xchg
push
xor
sbb
add
inc
ret
jbe
cmp
sar
xor
cmpsl
fs
int3
pop
jl
repz
movsl
shlb
mov
lret
and
and
ds
jo
lds
sbb
mov
pop
sbb
insb
add
data16
push
sbb
movl
cmc
pushf
xor
inc
jmp
rcr
sbb
xlat
mov
xor
push
adc
sbbl
or
sbb
and
mov
mov
mov
push
push
mov
pop
mov
aam
jp
adc
add
pop
push
adcb
int3
ficoms
mov
sub
mov
sti
jbe
outsb
or
lods
in
in
or
jb
pop
lahf
mov
loopne
push
mov
stc
xchg
ja
insb
repnz
call
fisttps
das
jl
xlat
imul
aam
inc
pop
mov
jbe
iret
sbb
mov
movsb
dec
jmp
mov
dec
imul
inc
xor
sub
fdivrp
xchg
adc
test
push
fiadds
mov
loop
adc
lea
cmp
cmp
subl
stos
or
push
call
test
mov
jae
push
call
cmp
cmpsb
adc
or
iret
adc
xchg
cmp
outsb
and
mov
into
lods
xlat
mov
xor
mov
pop
pusha
test
adc
sub
mov
jnp
jmp
cltd
out
mov
lret
mov
movsl
cmp
sbb
pop
lods
add
lret
adc
push
movsb
xor
push
dec
lahf
xlat
call
insl
adc
into
add
enter
mov
aad
in
aam
outsl
xlat
in
or
imul
cmpsb
lds
mov
ja
adc
mov
xor
std
push
jl
sbb
neg
inc
in
mov
fstpt
hlt
and
mov
xor
pop
mov
adc
das
in
cmpsb
mov
xchg
xchg
xchg
into
ljmp
daa
loope
adc
mov
add
call
stc
mov
and
push
inc
adc
les
inc
xorl
mov
clc
jbe
call
adc
movsb
lcall
lret
xchg
inc
mov
int3
scas
ljmp
cltd
cmpsl
leave
fidivrs
nop
pop
cmpsl
fdivl
test
loope
jae
inc
pop
jae
mov
int
mov
iret
inc
into
cmp
pushf
xor
xchg
stos
or
pop
ds
andl
pusha
adc
mov
xchg
sahf
xor
aas
and
pop
lret
mov
fmul
hlt
rcll
filds
sub
std
pop
movsb
sub
repnz
mov
sbb
cmpsl
jb
aad
decl
shll
xor
std
xorl
jle
daa
jns
inc
movsb
mov
mov
mov
jecxz
cmp
or
test
adcb
or
pop
or
mov
out
mov
xlat
lods
ja
lods
in
or
aam
in
mov
orl
aaa
stos
rolb
adc
repz
sbb
arpl
push
mov
test
mov
sbb
enter
add
mov
mov
clc
fwait
lea
sub
mov
sbb
pop
pop
lds
pop
add
adc
xchg
xor
adc
into
mov
mov
mov
jno
fildll
das
loope
push
mov
pushf
aad
jl
adc
loopne
mov
mov
in
jns
mov
mov
jb
cmpsb
cmp
xor
repnz
mov
cmc
sub
ja
je
jno
fs
push
mov
lret
sbb
mov
dec
dec
pop
xchg
notl
mov
rcll
mov
repz
add
das
fiaddl
fstp
mov
rcrl
or
sbb
sbb
pop
les
test
bound
cmp
mov
sub
out
add
adc
cmpl
sub
outsb
xor
movl
rol
cmc
js
lahf
or
inc
xchg
jae
call
lcall
divb
xchg
mov
mov
dec
je
hlt
mov
loop
lcall
bnd
or
outsb
or
cmp
mov
bound
sahf
fdivs
fldenv
scas
pushf
dec
lock
lock
or
pop
pop
pop
stc
cs
cmc
jnp
aad
out
xor
xchg
mov
popl
js
test
test
mov
insl
insb
cld
push
xor
ss
ss
jle
lea
mov
jae
xor
add
jmp
mov
push
inc
jp
in
imul
test
outsl
or
inc
daa
rorb
nop
aaa
sub
jle
popl
dec
mov
cmp
rolb
loopne
mov
xor
popf
jg
outsl
aas
lea
and
das
sub
mov
ljmp
in
sahf
adc
or
sbb
push
std
dec
test
scas
addr16
mov
call
mov
sub
rcr
pop
lds
nop
int
lret
jmp
cld
sub
xchg
and
daa
nop
inc
lods
mov
xor
fs
jmp
nop
and
cmpl
fxch
sub
mov
scas
xor
jge
cmp
xor
jbe
mov
sbb
jecxz
fistl
xor
fstpl
lock
and
mov
xchg
sub
icebp
inc
cli
pop
daa
lods
andb
notl
cmp
rol
jae
aam
int
daa
ljmp
xlat
lahf
cmp
popf
adc
dec
add
inc
add
mov
push
add
ja
xchg
jbe
enter
sbb
ds
dec
cmp
add
sar
inc
ss
lods
stos
fs
es
lretw
out
scas
cltd
andl
add
stos
adcb
addr16
rcrb
popa
jo
adc
insl
sub
cld
or
testb
push
push
xor
subl
xchg
ret
mov
dec
sti
push
fcmovnbe
mov
je
inc
nop
add
addl
xor
movsb
out
add
push
frstor
les
push
push
push
sub
or
fmul
xchg
lret
jle
call
adc
ss
adc
push
add
add
fs
jge
dec
fs
imul
outsb
popf
jo
icebp
mov
ds
aam
ret
xchg
test
push
dec
mov
fisubl
cmp
push
sahf
xor
mov
pop
pop
inc
arpl
jecxz
sub
xchg
mov
sub
xchg
xor
ljmp
test
jns
mov
sahf
out
ds
test
mov
sbb
test
cs
and
daa
cmpsb
stos
add
jl
out
xchg
inc
mov
mov
rol
dec
inc
xlat
pusha
push
sarl
stos
mov
dec
imul
outsb
jne
inc
add
push
mov
rolb
add
jo
push
sbb
xor
out
and
inc
lea
sub
mov
jle
std
push
xlat
and
fnstcw
sbb
adc
mov
rcrb
add
mov
jb
mov
pop
dec
test
test
mulb
or
cmp
sbb
add
mov
jnp
sbb
and
test
call
push
in
sbb
cmp
out
pop
stos
in
jb
mov
fiadds
add
mov
adc
xchg
cmp
cltd
fnstenv
dec
push
add
adc
and
xlat
dec
outsl
pop
jmp
lretw
lret
into
sbb
ret
cmp
sahf
adc
cmp
xor
sbb
repz
loopne
into
in
push
cmpsl
outsl
sub
arpl
ret
aad
jl
and
decl
adc
in
imul
lods
int3
or
subb
dec
mov
leave
insb
jo
lcall
rclb
loope
mov
popa
xchg
xlat
mov
mov
int
mov
lcall
adc
es
add
or
ret
dec
lahf
sbb
jae
scas
mov
leave
sbb
adc
and
add
insb
call
sbb
pop
fiaddl
pop
jle
pop
dec
mov
es
or
cmc
cmp
pushf
mov
cmp
fidivs
shlb
xchg
xor
mov
push
ljmp
std
movsb
pop
pop
jb
push
fwait
and
xchg
pop
cmp
xchg
xor
cltd
add
sbb
daa
lahf
bound
sub
add
and
push
jne
loope
test
ficoml
xchg
mov
lods
push
out
dec
int
cmpsb
and
adc
mov
jmp
lcall
shll
icebp
les
jbe
xchg
pop
jno
jo
loopne
lods
subb
xchg
lods
xor
int
les
ja
fdivrl
fisttps
ficompl
mov
dec
mov
mov
addr16
lods
mov
std
aaa
xchg
sbb
fistps
imul
mov
sub
test
push
or
mov
popa
push
dec
mov
lds
aaa
ret
mov
mov
jno
dec
cmc
jle
mov
outsl
push
int3
and
mov
mov
mov
cmp
xchg
push
es
rcrl
repnz
pop
xor
inc
mov
mov
ret
insl
push
mov
cmpsb
aaa
xchg
cmpsb
mov
mov
cmp
stc
cmpsl
test
mov
mov
dec
neg
shl
inc
sti
push
xor
cmp
jl
sbb
cmpsl
jo
andb
mov
outsb
das
jmp
mov
add
jnp
jne
daa
fwait
test
fmulp
xor
add
adc
orl
pushf
gs
sti
lock
push
and
scas
shl
pop
ljmp
sbb
mov
xchg
mov
sti
stos
xlat
cmp
jmp
cld
pusha
imul
jns
outsb
fisttpll
imul
jmp
adc
jmp
imul
bound
xchg
pop
out
mov
inc
or
stos
mov
popa
sub
xchg
sbb
cmc
lds
push
xchg
fimull
cli
push
xor
mov
je
mov
add
pop
cltd
xor
stos
stos
scas
cmc
sahf
xchg
lods
mov
cmp
lock
push
cli
cmp
cltd
aam
push
adc
movsl
pop
push
jmp
adc
cmp
xchg
mov
pop
mov
test
and
js
je
int3
icebp
aad
lds
sarb
inc
movsb
add
push
add
push
fiadds
pop
push
mov
les
inc
movsl
xor
cmp
adc
pop
adc
subb
xlat
sub
mov
and
add
push
push
adc
js
daa
dec
outsb
aaa
jne
test
xchg
jo
adcb
mov
mov
cmp
push
sbb
je
hlt
inc
repnz
pop
inc
sbb
cmp
sub
fs
sub
sub
inc
and
ret
test
sti
mov
cld
mov
xor
subl
mov
push
cmp
and
dec
xchg
push
mov
jno
ljmp
arpl
jne
adc
test
adc
mov
std
jl
mov
pop
xor
xor
lock
mov
fcoms
lock
and
imul
push
outsb
pop
push
pop
cli
call
xchg
rcll
lcall
movsb
inc
dec
fdivr
inc
mov
mov
insl
mov
xor
outsb
jb
jg
mov
lds
cmpsl
popf
push
imul
jnp
xchg
popa
mov
add
nop
sarl
call
xorb
pushf
pop
aaa
mov
pop
mov
mov
xchg
repz
and
and
sub
clc
jecxz
in
fistps
aas
jb
je
dec
cwtl
push
xchg
jnp
daa
das
mov
hlt
sub
xlat
xchg
and
mov
or
test
mov
mov
mov
mov
xchg
pxor
push
dec
gs
mov
pop
fwait
jmp
inc
test
xor
cwtl
int3
xchg
sbb
cmp
popa
add
jle
xchg
sbb
ret
sbb
lods
jbe
cmp
cmc
adc
sbb
xchg
in
adc
ja
xchg
cmp
push
xchg
not
sbb
in
bt
dec
iret
inc
jmp
ja
inc
vpavgb
mov
insl
dec
lock
jecxz
stos
mov
xchg
cltd
add
outsb
mov
and
fstl
add
or
int3
sub
ret
mov
ret
fbstp
or
sbb
ds
jno
scas
lods
jnp
sub
frstor
jo
dec
bound
adc
jg
stos
xlat
mov
stos
rorb
loope
notl
inc
popf
pop
js
fcompl
inc
clc
fs
push
xor
add
adc
pop
or
addr16
push
dec
push
push
fwait
xchg
icebp
and
and
out
stos
xchg
xchg
mov
dec
or
ret
mov
xor
sbb
in
and
data16
rol
dec
mov
inc
cli
fs
sub
mov
cs
pop
jg
cmpsl
sbbb
outsl
xor
in
xchg
std
lea
sbb
das
andb
filds
nop
int3
sbb
ds
es
sti
jg
negl
inc
adc
andb
or
lahf
test
jae
push
xor
jae
int
mov
sahf
lahf
or
push
cwtl
push
ror
pop
popa
stos
mov
push
push
push
xchg
out
push
lds
test
sbb
fwait
jle
int3
push
adc
adc
cmp
fists
dec
sub
and
push
aad
sub
test
in
call
jp
push
lods
jge
push
fstpt
das
pop
push
pop
std
jl
popa
stc
je
add
les
shll
movsl
push
and
jl
mov
fs
daa
pop
jnp
pop
push
pop
adc
fidivrl
loope
pop
cmc
sarb
fwait
cltd
jnp
dec
int
ret
cmpb
xor
sub
out
js
add
stos
adc
shrl
movsb
frstor
adc
jo
sbb
mov
xchg
xor
cld
clc
mov
fisttpll
dec
ds
pop
pusha
xor
cs
jp
addr16
xchg
out
mov
jno
cmp
ljmp
sbb
loopne
fmuls
ds
xchg
pop
xor
jmp
xor
jl
xor
or
dec
inc
mov
and
ja
adc
jo
dec
sbb
sub
jae
punpcklbw
cmp
sub
int3
jle
lcall
push
sti
and
add
bound
imul
sbb
dec
pop
das
cli
lcall
stos
jne
mov
fistpll
xlat
popa
pop
and
filds
mov
cmpsb
sahf
sub
scas
inc
jle
or
mov
push
jge
scas
mov
push
loop
xchg
sti
clc
inc
push
insb
inc
mov
adc
out
xchg
cmp
ret
pop
movsb
push
xchg
add
clc
push
adc
adcb
mov
sub
and
mov
or
in
jmp
dec
push
loopne
pop
lds
call
mov
cmp
aam
cmp
nop
inc
sbb
js
dec
sub
adc
clc
jmp
xor
and
sbbl
jle
cli
arpl
stos
mov
in
in
or
jge
insb
mov
xchg
pushf
push
jp
adc
cmp
pop
fucomi
push
jp
sub
iret
mov
in
adc
pop
jnp
enter
sbb
pop
mov
movsb
xchg
xor
movsb
push
and
test
push
lea
sub
adc
popa
stos
pop
jmp
xorb
mov
push
outsb
clc
in
testb
loopne
sahf
push
rol
inc
fs
xchg
cli
imul
pushf
cmp
push
loopne
or
pop
adc
jb
push
or
cli
es
xor
testl
repz
int
cmp
jno
push
sub
cli
imul
das
xor
and
stc
inc
push
inc
push
scas
mov
inc
mov
and
xchg
jp
lret
flds
dec
bound
cmp
dec
inc
xor
xchg
fcoms
cli
xchg
jns
inc
dec
outsb
popa
mov
es
mov
cmpsl
push
das
into
imul
mov
xorl
fnstcw
das
add
lcall
repz
hlt
pop
loop
imul
test
aas
or
or
js
or
and
mov
and
jns
pushf
and
and
pop
lahf
xchg
outsl
jmp
stc
and
dec
cmp
aad
mov
lahf
xlat
jbe
xor
xchg
xchg
rorl
xor
cmpb
xchg
movsb
lcall
and
call
decl
add
sub
iret
int3
fists
sbb
stc
pop
out
orb
dec
push
push
lods
out
add
and
ficomps
jbe
shl
mov
or
mov
add
cmp
insl
pushf
mov
and
mov
mov
mov
fildll
test
or
clc
xor
aad
loop
inc
sub
sbb
mov
cld
add
pop
icebp
imul
outsl
stos
pushf
add
cmp
push
dec
push
pop
out
and
scas
add
mov
es
outsb
popa
sub
sub
daa
dec
xchg
push
cmp
addr16
shrl
lahf
cmc
cmpl
xor
inc
lret
mov
xor
pop
mov
into
adc
ja
mov
push
ret
aad
lcall
lret
or
xor
test
lret
cmp
fwait
stos
cmp
sti
popf
mov
ret
jmp
ja
lods
cmp
or
xchg
jne
shrl
ret
and
scas
add
mov
lods
adc
sbb
cs
rolb
sbb
pushf
fs
std
lods
icebp
ljmp
or
jne
jns
sub
xchg
jg
sub
scas
ds
jno
js
pop
ret
fs
pop
popa
fwait
mov
push
cmpsl
out
mov
mov
scas
push
sub
xor
aas
xor
subl
sub
fadds
cwtl
or
jno
adc
repnz
pop
ds
push
push
hlt
mov
ss
dec
dec
xchg
fsubrp
push
test
inc
xchg
fdivr
add
rcr
mov
push
outsl
sub
pop
sar
sub
jmp
dec
pusha
xchg
je
push
cmp
sahf
mov
pop
xchg
sbb
orb
jbe
dec
xchg
test
add
pop
or
xor
add
mov
adc
dec
mov
es
push
int
cmpsb
test
mov
sbb
divl
aaa
stos
adc
adcl
add
repnz
lahf
push
jae
xor
pop
test
jmp
adc
fnsave
xorl
clc
mov
fisubrs
aam
add
repz
pop
daa
sti
mov
push
clc
xchg
cmp
cltd
push
push
and
mov
dec
adc
or
sub
pop
ret
loopne
clc
daa
sub
xor
scas
mov
sbb
mov
aaa
ja
int
sub
mov
add
mov
sub
roll
stos
xlat
push
xchg
int
add
popa
sub
aam
push
push
cmp
scas
ss
xchg
adc
push
fs
out
xor
out
adc
jl
push
or
popf
in
sub
ljmp
push
lods
imul
pop
jo
sbb
mov
xchg
jge
xchg
fmuls
sub
sbb
in
push
rcrl
mov
test
in
inc
mov
shlb
pop
sbb
push
add
imulb
push
out
cmpb
mov
and
les
es
movsl
add
out
mov
mov
or
pop
jo
lea
mov
clc
push
in
loopne
aas
cli
xchg
push
dec
mulb
mov
pop
xchg
or
fdivrl
add
mov
cmp
lret
lcall
mov
xor
sub
frstor
insb
in
dec
cmp
dec
dec
dec
repz
in
pop
dec
data16
sub
push
std
sub
adc
xor
jmp
repz
jp
mov
sub
jns
imul
adc
rorl
arpl
sub
dec
iret
sbb
and
pop
and
rclb
aas
aaa
sub
add
minps
rep
movsl
fldt
push
mov
xchg
std
dec
addr16
pop
jmp
shlb
mov
je,pt
ror
xorb
jmp
jp
xor
dec
lahf
setae
mov
mov
insl
mov
pop
add
push
aad
push
and
lret
sbb
movsb
sbb
cld
push
es
ret
inc
out
dec
push
sub
mov
adc
xor
mov
lret
loope
out
pop
loope
mov
jecxz
mov
xchg
les
arpl
shl
out
arpl
ja
mov
imul
jae
inc
mov
into
repnz
adc
shr
adc
mov
adc
fcoml
cmp
paddusw
fwait
mov
mov
fists
sub
ljmp
mov
mul
scas
cmp
ficompl
das
lahf
out
add
insb
add
call
push
cmc
int
xchg
pushf
bnd
sub
or
pop
xlat
cs
and
shrl
add
jno
jmp
in
add
pop
jmp
je
jo
push
mov
les
shr
mov
mov
jns
sbb
sbb
jg
loopne
daa
mov
loop
sbb
notl
and
dec
fcmovnu
cmp
pushf
lea
fs
adc
je
int
shlb
jle
bsr
neg
stos
les
in
mov
aaa
xchg
shl
imul
pop
dec
fs
mov
xor
mov
sbb
ds
hlt
int
xor
mov
repz
fimull
cmp
ss
xchg
mov
cmpb
xchg
ret
mov
adc
push
outsb
xor
lods
outsb
test
aas
jns
rolb
pop
ret
daa
pop
xor
adc
test
sbb
mov
mov
ljmp
pop
in
ds
jae
sbb
nop
inc
inc
mov
dec
rcrl
cmp
lret
xor
mov
bnd
shrl
mov
enter
roll
jne
cmpsl
sbb
mov
xor
jo
enter
orl
hlt
call
inc
and
jl
xchg
addr16
pop
fdivrs
or
dec
cli
xor
mov
dec
lock
fildl
jb
jg
jbe
loopne
sub
sub
fs
pop
pushf
adc
int3
lret
mov
dec
shll
pop
movsb
push
mov
xorps
leave
and
adc
mov
addl
xchg
fs
aad
pop
pop
sbb
mov
jbe
or
inc
in
dec
xchg
or
sub
pop
lea
lret
inc
imul
push
mov
arpl
push
mov
push
add
cld
in
mov
mov
pop
mov
xchg
cmp
inc
cmp
loop
in
xchg
andb
call
aam
sub
pop
notb
add
fiaddl
cmp
mov
pop
mov
pop
sahf
inc
inc
sub
lods
aad
int
sti
xor
icebp
push
int
mov
jo
inc
xchg
fisubrs
jne
pushf
jo
xchg
fs
lahf
xchg
cs
mov
or
xor
loopne
aas
out
pop
mov
sbb
sub
repz
dec
adc
push
or
lret
pop
fsubr
jge
jge
and
lcall
pop
dec
in
dec
mov
test
push
adc
inc
mov
add
adc
mov
into
aad
pusha
xlat
push
mov
insb
adc
and
fdivrs
mov
add
stc
ror
xor
inc
or
mov
nop
pop
shlb
nop
mov
icebp
and
les
cmp
sub
sbbb
jle
gs
outsl
cmp
pop
xor
cmpsl
sub
mov
addb
push
cld
adc
les
and
scas
sbb
into
arpl
inc
in
push
bound
in
pop
cmp
or
pop
out
xchg
sub
popa
js
dec
dec
fisubl
inc
xor
popf
mull
lock
jg
and
aam
ret
inc
sub
arpl
inc
sub
cltd
pop
push
cmp
jmp
jle
test
test
lods
cwtl
xor
pop
lcall
jg
cmpsb
push
pop
pop
jae
sbb
sbb
gs
fisubrs
xchg
cmpsb
mov
or
inc
shl
shll
push
push
cmpsb
jns
ret
jno
loopne
inc
fstl
cli
incl
sbb
mov
dec
pop
inc
stc
adc
inc
scas
mov
andb
les
inc
fbld
cmovle
xor
add
jmp
xor
sub
add
mov
pop
cmp
stos
sahf
xor
and
or
out
pushf
ret
mov
mov
mov
shlb
sbb
mov
sti
add
xchg
cli
sbb
ljmp
add
dec
ret
push
int
fbstp
in
call
pop
addr16
adc
inc
ficomps
dec
mov
lock
mov
je
testb
mov
loopne
jb
xor
mov
mov
adc
cli
test
push
in
adc
js
and
movsb
xchg
jmp
jo
mov
iret
xchg
push
push
in
mov
in
loopne
mov
adc
inc
popa
int3
fstpl
mov
sbb
push
cmpsb
std
mov
mov
push
ja
push
loop
cmpsb
nop
cmp
and
mov
pushf
test
mov
mov
jbe
jb
lea
data16
je
out
mov
fsubs
mov
add
adc
jo
xor
and
pop
mov
mov
rcrb
mov
push
cmp
shl
mov
ds
stc
add
rclb
fsubl
int
mov
shll
cmp
out
xlat
bound
xor
out
dec
es
inc
push
sub
int3
or
mov
movsb
cmp
movsl
insb
mov
and
mov
lods
dec
inc
insl
lahf
add
xor
test
mov
mov
ds
jg
movsb
imul
pop
inc
lds
inc
arpl
inc
cltd
insl
daa
cli
inc
sub
sbb
push
cmp
jp
popf
sti
ja
jl
pop
in
dec
cld
xchg
sub
inc
add
pop
aas
mov
lea
loop
cmpsb
ret
push
shlb
adc
ficoml
xchg
fcmovnb
aaa
push
mov
sub
add
jmp
aaa
xor
mov
xor
ret
sarb
fdivrs
lods
mov
push
mov
xor
jge
mov
xchg
xchg
sarl
adc
cli
mov
mov
xor
out
pop
mov
sbb
xchg
jno
int3
fs
ret
push
orl
jbe
into
ret
xchg
insl
lea
lea
xchg
add
push
out
push
push
bnd
mov
xchg
pop
sub
pop
cmpsl
cmovg
lock
lds
je
shll
js
mov
mov
mov
pop
push
add
lea
out
mov
xchg
aas
imul
das
xor
add
dec
outsb
lret
sub
sub
lds
ret
arpl
adc
movsb
or
dec
scas
fs
push
outsl
xchg
or
outsl
std
xchg
mov
enter
mov
add
sub
test
mov
jo
leave
jno
shl
sub
mov
enter
or
sbb
call
adc
sub
hlt
inc
int
dec
pop
cmp
clc
fadds
mov
xchg
lret
inc
out
imul
mov
scas
jp
jp
insl
icebp
aam
dec
dec
add
and
sub
fbld
xor
int
mov
es
push
stc
cmp
fdivr
sub
adc
or
add
or
pop
xor
inc
std
mov
jl
push
arpl
cmp
and
pusha
xchg
nop
sarl
test
xchg
pusha
roll
pop
pop
pop
and
dec
in
outsb
in
call
push
inc
jno
inc
sbb
add
sbbb
mov
sbb
ret
fistpll
mov
sahf
lods
adc
in
add
adc
xor
cs
push
xchg
leave
push
scas
loope
lock
push
lds
jae
push
repnz
add
bound
test
int
sub
mov
pop
mov
jge
mov
jne
push
imul
mov
mov
jl
icebp
jno
scas
mov
inc
add
adcl
mov
lds
subl
pop
mov
mov
adc
es
ss
cmp
fnclex
and
lock
sub
daa
mov
and
aad
sbb
xor
mov
mov
ja
sub
mov
sbb
jns
fisubs
cmp
rcrl
sub
xor
xchg
sbb
and
dec
jge
pop
mov
rol
jns
cmp
dec
add
dec
nop
loope
mov
mov
ds
clc
sarl
mov
add
jge
jp
pop
dec
xchg
jle
pushf
mov
cld
sbbl
hlt
sarl
xor
push
mov
icebp
push
sbb
xchg
cmpl
aaa
gs
insl
scas
push
push
std
or
push
inc
adc
push
das
inc
push
and
adc
push
xchg
mov
mov
jb
frstor
ret
fidivl
dec
sub
jge
aaa
popf
mov
mov
out
pop
movl
or
sub
xor
inc
push
adc
dec
inc
dec
inc
jp
push
cmp
pushf
cmp
in
outsb
inc
xchg
scas
sbb
mov
ficomps
inc
in
movb
shr
adc
jno
pop
cwtl
jno
nop
rolb
cmp
jmp
jp
ds
add
mov
jno
adc
adc
mov
out
cmc
jle
and
jl
pusha
cltd
mov
cmp
out
repnz
int
sbbl
push
ret
ja
mov
dec
aaa
add
mov
mov
lods
mov
and
adc
aaa
mulb
popa
xchg
gs
dec
loop
in
fcom
inc
pop
mov
mov
inc
and
inc
push
fucomi
pop
mov
xchg
mov
enter
fildl
xchg
xchg
mov
aas
test
int
cmp
test
rolb
push
or
aad
inc
push
ss
sub
jg
test
xor
test
xor
or
lds
cmc
xorb
in
divl
pop
mov
mov
inc
bound
inc
mov
out
sub
mov
lock
cld
lods
repnz
jae
cmp
stos
popa
cmpl
pop
pop
jnp
xchg
push
sbb
pop
mov
int3
inc
call
mov
pop
cli
xchg
dec
add
cmp
fbstp
push
pop
inc
cs
repz
push
mov
fmulp
sbb
int
shlb
adc
cwtl
sub
pop
adc
cmp
cmp
pop
xor
leave
sbb
jno
ja
das
cmpsl
lret
stc
je
pop
and
cltd
jne
rolb
scas
divl
push
ljmp
sbb
iret
jbe
or
sbb
rolb
push
fisttpl
cmp
fldenv
fwait
push
adc
and
cmp
jb
inc
xchg
out
jae
push
pusha
xchg
cmpsl
mov
pop
mov
mov
test
dec
pop
cmpsl
xchg
or
neg
jne
cmp
in
xor
outsb
jge
cmp
repnz
jecxz
addb
cmp
popf
loopne
and
int3
test
lds
jnp
xchg
fisubrs
ds
xchg
lods
inc
loopnew
mov
fcmove
je
iret
bnd
pop
push
pop
filds
in
test
lods
pop
push
jbe
into
out
push
mov
stos
and
jmp
fwait
and
jl
fildl
imul
mov
pop
fbld
push
aam
gs
loop
loopne
xchg
dec
push
inc
insb
sbb
shll
les
stc
pop
test
push
dec
dec
mov
stos
jecxz
and
fiadds
mov
fdivrl
fistpl
cmp
int
inc
ljmp
jge
pop
jbe
or
or
mov
xchg
stos
iret
pop
xchg
inc
push
cmpsl
enter
arpl
lcall
es
cmpsl
add
sbb
xchg
sbb
inc
rorb
jb
inc
lds
push
jbe
or
jb
test
roll
hlt
lret
out
xor
shl
into
hlt
mov
int3
lds
push
dec
dec
daa
stos
mov
movsb
stc
adcl
lea
std
pop
jmp
sbb
stc
cmp
sub
add
std
dec
mov
push
mov
lds
push
cmc
mov
iret
imul
inc
add
inc
pop
xlat
adc
add
sub
xchg
or
dec
lock
mov
mov
ret
loope
or
push
xchg
call
popa
inc
inc
push
fisubs
arpl
daa
incb
adc
cmp
pop
int
mov
cmpb
sub
loop
push
mov
pushw
jmp
into
lcall
and
xchg
mov
cmp
mov
dec
es
enter
into
mov
xchg
mov
push
jb
adc
adc
js
and
je
xor
out
xchg
pop
testb
sub
or
inc
dec
mov
mov
fdivrs
jl
or
push
dec
clc
pop
nop
adc
mov
push
sbb
cmpsl
fcmovnb
scas
aaa
push
cmp
std
pusha
inc
cmc
mov
shlb
aam
or
push
sub
lock
jo
adc
imul
test
mov
sbb
or
jle
ljmp
mov
testl
lret
je
push
push
ss
push
es
mov
pop
pop
and
cld
xor
out
add
inc
lds
xlat
subb
sbb
inc
leave
aad
test
stc
pop
jns
cltd
ret
add
jns
cld
cltd
sbb
xor
repnz
fs
pop
into
jne
out
xor
lods
mov
lret
aam
lret
shrb
mov
aam
popf
sarb
adcl
xchg
jmp
xor
add
fistps
mov
mov
lret
inc
inc
mov
mov
sbbb
inc
jmp
repnz
dec
loope
xlat
ss
ret
insl
xor
pop
imul
and
pop
dec
aad
lahf
push
test
enter
jle
out
lret
in
jp
ret
pop
out
mov
in
int
aam
lahf
insl
jnp
cs
repnz
pop
cmp
jb
ret
sub
mov
addr16
dec
lcall
and
pop
sbb
fdivl
insl
cli
out
cltd
xchg
lock
add
mov
outsl
mov
out
dec
ret
js
je
push
cmp
cmp
inc
cltd
adc
fmulp
daa
inc
mov
cmpsb
nop
jb
notb
mov
push
movsl
insl
aas
jl
outsb
jns
notl
pushf
out
sub
xor
out
testb
aad
arpl
sbb
lds
hlt
push
shrl
jae
jae
or
ljmp
cmp
lret
sbb
fidivrl
das
fistl
popf
push
std
imul
iret
mov
and
int3
mov
into
inc
xchg
adc
cmpb
or
rcrb
and
mov
cli
stos
xchg
inc
imul
aad
inc
dec
mov
pusha
pop
pop
xlat
xchg
mov
popa
mov
cltd
ja
push
add
jecxz
fcomi
sbb
xor
jne
cli
jmp
stos
les
pop
in
mov
or
mov
push
and
test
sub
insb
shl
pop
sbb
ljmp
xchg
pop
ljmp
scas
fs
xchg
jl
adc
xchg
pop
xor
and
cmp
fbld
inc
mov
xor
shll
ret
push
jp
sub
std
cli
mov
sbb
jl
cltd
ds
icebp
and
aad
dec
loope
mov
pop
outsb
push
push
jle
test
divl
das
mov
cmp
sub
clc
in
in
hlt
push
jmp
sahf
in
aam
xchg
add
gs
mov
fisubs
sub
mov
movb
xor
inc
mov
xlat
push
loop
pusha
xor
jnp
cmpl
or
pop
dec
aaa
daa
out
icebp
jbe
push
pop
xchg
inc
jmp
inc
or
popa
pop
dec
stos
dec
std
push
cmp
push
lea
add
push
add
pusha
push
out
int3
push
jl
mov
jmp
xchg
pop
es
or
xor
clc
in
pop
push
imul
in
call
sbb
pop
adc
psubb
push
lods
xor
test
aad
adc
jns
mov
and
sahf
push
sub
pop
push
inc
cltd
lcall
loopne
push
mov
or
pop
mov
sbb
sahf
inc
mov
sbb
sti
jo
adc
repz
adc
cmc
movsb
mov
inc
mov
jge
fwait
xchg
pop
popa
orl
pop
std
lods
jle
es
xchg
and
rcrb
nop
nop
mov
rolb
cmp
popa
loope
addr16
aaa
mov
pop
imull
shll
imul
and
inc
or
mov
inc
xlat
push
inc
dec
mov
push
xor
mov
dec
pop
sarb
mov
je
call
sbb
and
add
inc
out
xchg
and
jmp
clc
sub
test
aam
xor
jne
out
pop
jmp
pop
jno
fnstcw
xor
inc
cmp
mov
or
jns
fwait
stos
fwait
jnp
mov
orps
fldlg2
or
add
test
dec
inc
sub
mov
and
iret
jl
and
mov
test
fsubrl
mov
imul
mov
push
sti
in
dec
jmp
cwtl
pop
dec
loopne
mov
fdivr
xor
pusha
mov
mov
sub
mov
mov
fldenv
fisubs
or
jne
xchg
pop
arpl
sbb
sbb
out
fcoml
dec
xor
xor
lock
scas
fs
pop
inc
rcrb
mov
xchg
xchg
pop
inc
rclb
imul
xor
inc
inc
xchg
repz
push
call
in
outsl
xor
addl
movsb
add
lods
jle
lret
inc
fdivr
iret
mov
dec
ljmp
mov
adc
add
fstps
dec
sbb
call
sub
mov
xchg
mov
inc
or
xlat
mov
mov
std
sub
adc
mov
decl
imulb
push
push
jne
insl
jne
jne
sub
ss
mov
lret
mov
arpl
scas
ljmp
and
mov
repz
das
and
adc
jns
and
notl
jl
xor
repz
imul
push
icebp
push
loope
mov
cwtl
sub
or
scas
mov
xchg
stos
incb
xchg
dec
add
loop,pt
mov
aaa
lret
or
xor
cmc
xchg
sahf
dec
fdivrl
cmp
inc
xor
jmp
or
scas
test
aaa
and
cld
pop
mov
loope
aas
pop
jo
in
xlat
fcom
in
andl
loopne
mov
in
lret
aam
fidivl
pop
pop
test
xchg
pop
push
add
lret
xchg
cmpsb
jnp
cmc
outsl
std
fs
ret
dec
mov
xchg
imul
xor
in
fdivs
ljmp
aas
ret
mov
pushl
cltd
push
fwait
in
rolb
ss
push
xlat
dec
push
loope
mov
xchg
xchg
jg
dec
sti
fwait
jo
js
xor
faddl
jno
mov
mov
dec
jmp
mov
in
loopne
loope
push
sbb
mov
sbb
repz
ljmp
es
enter
enter
bound
jbe
or
xor
rorb
push
rolb
or
movsbl
xor
test
into
inc
ret
mov
sbb
mov
jae
mov
mov
mov
lea
in
dec
xor
xor
mov
mov
icebp
testb
mov
testb
push
sbb
cli
mov
pop
sbb
test
dec
sub
gs
shll
sbb
xchg
out
adc
dec
mov
inc
fs
pop
stc
ss
scas
dec
jno
push
xor
jns
int
sub
mov
rcll
push
aaa
movl
adcl
xchg
cltd
jl
andb
shrb
pop
jmp
jge
push
inc
inc
xchg
fdivrl
data16
cmpsb
les
stos
push
mov
pop
imul
pushf
and
out
add
stc
loop
daa
and
xor
movsl
gs
cmpsb
or
es
icebp
pop
mov
pop
popa
loop
xlat
jecxz
inc
stos
cwtl
sbb
inc
pop
mov
mov
lret
pop
cmp
mov
les
int
sub
xabort
lods
dec
dec
scas
push
xchg
xor
xor
popf
stos
aad
cli
pop
pop
inc
les
data16
inc
icebp
xchg
xchg
cld
out
pop
inc
pop
popf
in
test
or
sub
mov
cmp
sti
dec
call
cmpb
movsl
repz
or
push
inc
cltd
pushf
fistpl
lods
ds
jmp
dec
pop
ja
in
jle
cmp
ljmp
mov
adc
jl
cld
in
lcall
imul
fmull
dec
adcb
leave
mov
sub
push
aaa
addr16
les
testl
ret
rol
loope
cmp
cmc
mov
in
arpl
ret
fwait
jmp
jecxz
push
lods
ror
jae
push
dec
add
mov
pop
cmpb
inc
jns
fisubs
dec
jmp
push
inc
out
cs
lret
jg
scas
ret
push
mov
or
sbb
jmp
in
inc
test
mov
push
lods
or
sub
push
in
xchg
das
jbe
and
and
repz
into
aaa
call
sub
in
mov
xchg
or
outsl
xor
cwtl
dec
in
adc
lock
inc
jge
orb
mov
mov
outsl
sub
pop
inc
lea
mov
jb
jae
sbb
mov
mov
cmp
rcr
mov
or
into
and
rcll
repnz
jecxz
ds
sbb
push
inc
les
call
test
pushf
cwtl
mov
test
add
mov
movsl
mov
add
in
add
dec
sbb
add
icebp
jno
adc
ja
xor
fidivrs
popf
xor
pop
add
inc
rolb
enter
push
jno
jp
ret
mov
and
test
in
pop
xor
cmp
xor
xor
aam
and
lahf
cltd
xchg
ja
aam
clc
dec
les
imul
cld
mov
mov
xorb
and
jl
loop
fmulp
add
push
sub
cmp
loope
adc
in
pop
xlat
loopne
fxam
imul
cld
adc
mov
or
jb
in
sub
add
test
dec
shlb
jne
add
inc
call
mov
in
js
jno
lret
xchg
and
mov
xor
inc
add
sbb
lret
xchg
mov
or
aam
xchg
sub
daa
add
adc
add
xchg
cmp
mov
adc
dec
popf
test
testl
xchg
push
push
fsubr
testl
lret
pop
daa
xor
aam
sahf
sub
xlat
push
scas
add
mov
cltd
sti
xor
inc
sub
cwtl
scas
sbb
push
sti
mov
ja
aam
jecxz
and
popf
adc
xor
add
push
pop
test
mov
xor
jae
jae
jne
mov
leave
in
inc
je
adc
data16
adc
cld
in
add
scas
ja
cltd
es
int
push
enter
dec
jno
stos
jg
call
lahf
cltd
adcb
loope
addb
cwtl
insb
scas
addr16
addb
stos
sahf
sbb
and
loopne
and
mov
call
lods
and
out
mov
jg
shlw
ret
in
mov
dec
cwtl
in
cmp
clc
mov
mov
mov
mov
pushf
aam
jo
jmp
daa
cmp
pop
loopne
and
insb
aad
jmp
xchg
mov
loope
lock
adc
fldl
sbb
mov
push
aam
and
aam
push
push
sahf
jp
addr16
add
push
mov
shl
mov
repnz
shlb
daa
sub
dec
xlat
iret
inc
inc
add
push
lds
loope
or
sub
cmp
fwait
clc
jmp
call
ds
stos
lahf
xor
mov
loope
adc
fcoms
sbb
imul
cld
data16
loop
mov
push
shrb
int3
cmp
ljmpw
test
xchg
jg
jnp,pn
lret
and
aas
insb
mov
test
xlat
mov
mov
sarb
mov
in
sahf
dec
fsubr
pusha
sbb
fcomp
push
ja
cwtl
in
nop
dec
cmc
sub
pop
test
sub
not
jp
ljmp
rcrb
lods
push
jmp
mov
mull
flds
arpl
push
inc
xor
aad
je
push
sub
fnsave
dec
pop
add
and
mov
jno
sub
sbb
or
test
test
mov
frstor
pop
add
add
sub
pop
shl
mov
xchg
jl
mov
inc
insb
add
outsb
cmpsb
in
sub
das
jae
push
pop
xor
mov
or
mov
fisubrl
fiaddl
push
jne
sbb
adc
pop
roll
fsubl
dec
in
push
jb
jmp
xchg
ljmp
xor
pop
mov
fwait
call
push
inc
out
test
xchg
push
mov
aaa
mov
roll
xchg
add
pop
mov
out
leave
loopne
mov
jns
or
inc
mov
sti
imul
sbb
repz
sub
les
std
push
cs
or
enter
pop
popf
jb
std
hlt
mov
in
and
lea
mov
test
cltd
mov
cmp
mov
hlt
sbb
out
sbb
int3
out
arpl
mov
xor
popl
sbb
or
movsb
insb
jge
inc
add
push
xchg
imul
clc
adc
push
xchg
mov
pushf
lahf
popf
outsb
iret
dec
push
out
pop
jne
addr16
int3
cmc
push
xchg
adc
test
fstpl
and
push
fcoml
test
mov
inc
sub
inc
xlat
popf
xor
xchg
sub
fldcw
addr16
dec
fimull
pop
sub
ret
lds
mov
mov
mov
vmovups
push
ds
mov
push
sbb
xchg
mov
inc
into
leave
mov
negl
sub
pop
cmp
mov
in
cmc
push
jmp
lret
loope
pop
fs
pop
xchg
and
fwait
in
cmp
and
stos
pop
inc
ja
pusha
mulb
add
test
push
mov
iret
cmp
sub
int
leave
push
in
push
mov
xor
mov
and
inc
xor
cli
sahf
loope
xchg
push
push
movsl
push
sub
mov
or
mov
bound
adc
in
movsl
push
jmp
and
xchg
lds
mov
xor
jne
arpl
mov
je
iret
inc
inc
pop
jnp
lret
push
inc
ss
stc
inc
and
xor
ja
shlb
jns
jmp
loopne
add
mov
cltd
push
jno
add
js
bound
mov
cmp
int3
inc
popa
ret
lcall
pop
arpl
mov
fmul
push
mov
inc
enter
movsb
in
data16
test
xchg
xor
pop
mov
aam
ret
adc
fldt
inc
dec
std
sbb
xlat
sbb
mov
push
rorl
inc
cld
mov
pusha
sub
pop
xchg
push
mov
inc
daa
sbb
and
mov
ss
adc
jge
out
sar
jb
rclb
and
cmpsl
insl
ja
ds
cmp
push
push
fsubs
sbb
xor
mov
xchg
or
xlat
insl
cmp
stc
add
das
ret
xorb
inc
xchg
mov
test
data16
sub
push
addb
lds
mov
pop
aas
jecxz
jle
push
push
sub
fistpll
popf
fmull
insl
push
lahf
pop
xchg
xchg
cmpsl
jbe
sub
ja
enter
ret
push
mov
pop
mov
push
int
incl
stos
push
gs
stc
push
push
xchg
and
xlat
push
xor
push
faddl
insb
adc
mov
add
sbb
movsl
aaa
cmp
testl
xchg
sbb
xor
cmp
ffree
mov
push
cmp
arpl
dec
and
sbb
cli
or
lods
jae
stc
test
aam
cmpsl
rorb
aas
pusha
repnz
mov
movsl
lret
pop
sti
nop
inc
lock
sbbl
call
nop
jo
fwait
rcrb
add
lret
mov
mov
shrd
add
shll
dec
xchg
out
mov
inc
push
aaa
adc
xchg
push
divb
sbb
outsb
out
aad
or
add
sbb
dec
mov
xor
mov
mov
mov
mov
push
xchg
ljmp
std
cwtl
cltd
cli
fisttpll
push
std
dec
ja
test
incb
cmc
adc
adcl
sahf
cmp
pop
cltd
or
bnd
out
les
sbb
sbb
fsubs
cmp
pop
adc
out
lock
inc
adc
sti
mov
lret
xchg
sub
in
lods
push
inc
lds
xchg
js
jnp
push
jbe
fisubl
fwait
mov
add
in
outsl
std
sub
push
cmp
ja
out
pop
dec
dec
mov
dec
popa
ror
mov
sub
push
sub
sbb
mov
je
aaa
mov
out
mov
sbb
jb
divl
movsb
mov
mov
push
jg
mov
sbb
loopne
lds
cmp
dec
push
minps
inc
sbb
jg
ds
inc
xor
xchg
cmp
fldcw
mov
hlt
sbb
cld
fstpt
cmp
movsl
add
mov
rclb
xchg
push
lea
adc
xorb
scas
dec
add
insl
jmp
xchg
pop
arpl
mov
push
ss
test
icebp
mov
or
imul
sbb
pop
out
add
lcall
mov
clc
mov
in
mov
repnz
sar
xchg
adc
fnstcw
xchg
push
shrb
fsubl
aaa
scas
int3
lahf
mov
sbb
push
mov
pop
pop
pop
out
add
outsl
push
jp
rol
fsubrp
sub
mov
jle
out
js
sahf
leave
cmp
add
pop
imul
shrb
sbb
lret
aaa
mov
sub
and
es
mov
sbb
jae
les
pop
jmp
lahf
test
cs
mov
add
lock
fnstcw
push
ss
rcl
dec
aad
adc
std
gs
mov
cli
daa
ret
add
push
pop
pop
mov
mov
push
pop
sub
mov
jae
stos
xchg
pusha
mov
or
mov
xor
js
pop
mov
test
and
in
mov
pusha
xchg
in
or
xchg
in
sub
mov
dec
notl
ror
test
fcmovnb
pop
pop
xchg
inc
lcall
mov
and
popf
test
pop
loope
std
jge
int3
fmull
pop
push
fldl
pop
test
mov
fsubs
pop
mov
imul
inc
pop
mov
lods
jnp
shr
mov
sbb
mov
fwait
adc
dec
outsb
cwtl
push
xchg
mov
dec
push
pusha
insl
call
mov
lea
xor
in
lods
mov
push
dec
inc
sbbl
or
scas
mov
call
pop
xor
push
and
xchg
xorl
fadd
and
popa
lds
nopl
or
ss
push
add
outsb
mov
sarl
xchg
rol
adc
shl
push
adc
std
ret
loopne
sbb
mov
mov
lods
clc
xlat
push
lea
inc
add
add
in
mov
sub
pop
aam
pop
insl
imul
iret
push
scas
push
lcall
xor
scas
mov
dec
loope
movsl
xchg
pop
test
imul
aam
pop
cmp
lock
aad
test
rcl
push
scas
cmp
stos
stos
xlat
shl
dec
push
cmp
cld
mov
and
pusha
sbbb
dec
sbb
and
mull
xchg
rcll
cwtl
in
rcrb
adc
call
cli
adc
jmp
subb
rcrb
ret
or
fldl
xor
andb
sub
fucomip
lret
adc
fisubrl
sti
gs
outsb
jl
or
xor
xlat
pop
call
inc
mov
jo
dec
push
call
mov
aad
popf
push
mov
mov
lret
jne
rorl
jg
pop
int3
loopne
cmp
jg
mov
inc
mov
pop
ja
stos
aam
sub
pop
ja
push
xor
repz
mulb
adc
pusha
add
aam
stos
adc
add
adc
or
add
roll
and
push
call
test
sbb
lods
mov
lea
out
sub
std
mov
push
arpl
cli
jg
in
dec
stos
sbb
cli
out
xchg
xorb
add
popf
jp
int
fisubrs
add
fidivl
cwtl
inc
xchg
outsb
sub
adc
mov
fsts
cmp
or
test
xchg
imul
adc
mov
inc
dec
ret
jle
or
pop
push
fstpt
mov
cltd
mov
aad
inc
mov
add
sub
ret
fisttpl
and
dec
pop
aas
int
xor
and
lods
mov
movsb
pop
mov
fwait
pop
rolb
jecxz
inc
mov
cmpsl
adc
into
imul
outsb
or
pop
sbb
or
add
xor
shrb
js
mov
xchg
outsb
call
mov
push
inc
mov
sbb
xchg
mov
sbb
mov
js
mov
adc
aaa
test
dec
dec
sbb
fildl
ljmp
mov
adc
fsubrl
lret
mov
pushf
fcmovu
mov
mov
mov
jmp
daa
sub
imul
dec
fsubr
ret
mov
jae
or
adc
mov
jns
xor
mov
and
icebp
sub
mov
fistl
mov
inc
lret
dec
push
adc
cmp
adcb
sub
bound
addr16
dec
out
pop
cli
sbb
xchg
sub
xlat
and
or
pop
xlat
out
sbb
cmpsb
inc
jle
jl
enter
jno
rclb
daa
push
outsb
push
push
in
xor
test
aaa
nop
lret
mov
fcomps
or
lcall
mov
push
das
mov
xchg
into
les
jecxz
cmp
pop
mov
mov
xabort
out
jae
stc
enter
loope
mov
xor
test
jle
dec
loope
mov
js
rcrb
mov
xor
and
pusha
dec
dec
pop
jle
add
arpl
sbbl
sbb
lcall
ljmp
mov
mov
xor
shl
inc
cli
pop
scas
fsts
jne
lret
jg
ficompl
into
and
testl
aas
mov
hlt
push
or
xchg
arpl
rorl
int
jp
inc
inc
cmpsl
lahf
mov
mov
xorl
lods
mov
xor
jne
fistpl
arpl
stos
xchg
jns
push
sbb
pusha
mov
or
gs
lds
rol
lahf
shrl
stc
js
sti
loope
shrb
pop
outsb
movsl
add
dec
sub
in
aad
jb
inc
mov
movsb
popa
lds
pusha
in
sub
in
loope
shr
mov
lcall
pushf
push
sub
sub
bound
lea
mov
and
sbb
data16
sbb
cmpsl
adc
or
and
mov
pop
repz
sub
rolb
add
sub
mov
pop
mov
mov
cmpsl
pop
lods
movsl
loop
inc
aad
dec
testb
int
sbb
outsl
add
sub
xchg
xor
scas
cmp
fstl
jbe
push
sub
sub
cmc
rclb
cwtl
dec
mov
push
das
pop
mov
cmp
dec
mov
fldcw
std
fsubs
mov
inc
mov
or
xor
dec
xchg
movsl
mov
cmp
lcall
mov
inc
jbe
add
sbb
mov
inc
dec
mov
push
and
jle
mov
loopne
mov
xchg
xchg
mov
cmp
popa
mov
jnp
jb
sub
mov
lods
ficompl
js
xchg
mov
adc
das
movsb
jnp
inc
add
cmpsl
fldl
ret
adc
aad
pushf
add
jo
daa
push
andl
fnsave
sti
enter
pop
adc
xchg
sbb
jb
imul
sahf
adc
stos
add
mov
or
mov
jb
mov
pop
cmpsb
insl
mov
push
je
sbb
popf
cwtl
mov
cmp
cwtl
push
ret
arpl
sbb
pop
aam
in
repnz
add
ss
mov
outsb
loop
cmc
pop
ds
insl
sbb
stc
leave
cwtl
testb
jns
ret
mov
loopne
push
in
clc
iret
rorl
icebp
nop
sti
and
clc
push
ret
out
xchg
push
xchg
mov
adc
popf
mov
jne
mov
mov
cld
popa
roll
loope
push
loopne
stos
adc
lcall
iret
repz
addr16
loope
into
lock
xchg
addl
and
sbb
xchg
inc
add
jp
mov
pushf
js
ja
hlt
int3
pop
push
cmp
in
inc
rcll
lods
push
adc
jo
sbb
pop
xchg
xchg
cmpsl
inc
inc
jmp
and
inc
jne
in
lds
inc
sbb
out
mov
sub
jecxz
stc
jae
push
testb
cmp
insb
out
stc
sbb
mov
dec
sub
popf
test
xor
fs
adc
push
jp
cwtl
idivb
ficompl
fs
out
pop
call
push
xchg
add
inc
add
mov
dec
shrl
mov
or
jg
sub
arpl
xor
repnz
out
iret
leave
inc
test
test
dec
push
jno
push
adc
push
sbbl
mov
loop
aam
and
ret
dec
mov
inc
orl
in
clc
js
das
mov
pop
sub
xchg
push
jg
orb
pop
cs
add
push
adc
mov
cltd
xchg
sub
or
inc
jg
sub
fimuls
or
ret
icebp
movsl
pop
xor
lfs
daa
and
popf
cmp
movsl
push
roll
pushf
jge
stos
and
cmp
mov
pop
movb
xor
mov
and
push
and
xchg
add
sub
push
and
mul
sub
das
lods
push
aam
sbb
cmp
roll
js
pop
test
ljmp
cmp
ret
sbb
mov
or
mov
jg
out
pop
lock
lahf
pop
shr
mov
mov
xchg
mov
pop
fnstcw
jne
and
adc
mov
jp
out
mov
push
xor
popf
adc
add
fwait
xor
test
pop
dec
incb
dec
xor
mov
cmp
aam
push
xor
mov
cmp
out
add
xchg
mov
idivb
inc
lret
pop
mov
insl
sub
inc
sti
or
sti
xor
movsb
bound
and
sub
xchg
mov
in
xchg
pop
ret
mov
mov
mov
in
ljmp
stos
cmp
out
xor
mov
push
and
scas
jmp
loopne
iret
and
cltd
enter
cmpb
jns
ds
ret
fsubr
sub
loope
outsb
dec
in
xlat
xchg
sub
dec
inc
xor
cmpsb
icebp
out
pusha
push
pop
lahf
cld
mov
mov
mov
xlat
jmp
mov
fmulp
pop
pop
out
xchg
lcall
cmp
fdivr
pop
sahf
fadds
lods
mov
xor
add
lea
nop
jb
insb
mov
lcall
pop
jmp
add
jns
mov
xor
rcr
pop
inc
dec
add
in
and
sub
cli
idivl
rcl
add
cmp
inc
popf
negl
lret
movsb
push
dec
mov
sahf
mov
mov
repz
leave
jo
bound
mov
out
cmpsl
fsubrs
push
jge
das
outsl
xchg
mov
pop
aad
fmuls
jge
xchg
fcmovnu
cli
rorb
cli
daa
jb
dec
or
in
lret
xchg
pop
loopne
or
add
out
test
xchg
mov
xor
jmp
adc
jmp
mov
cmp
fmul
scas
mov
lret
fwait
mov
xchg
fs
fs
sub
xchg
les
std
scas
stos
push
jle
out
xor
mov
pop
mov
or
loope
fsubs
or
dec
jne
lret
xchg
mov
into
jecxz
pop
je
mov
mov
pop
sbb
mov
ret
lahf
repnz
inc
dec
jg
or
fwait
jge
jg
fwait
hlt
pop
lret
es
iret
pop
rorb
cltd
mov
loope
mov
in
mov
push
test
sar
mov
push
cmp
xchg
push
sbb
xor
mov
fsts
pushf
stc
cmpsl
xchg
or
mov
imul
outsl
mov
mov
out
xchg
push
dec
mov
repnz
aaa
adc
lock
mov
push
adc
cwtl
data16
stos
push
xchg
pop
inc
outsl
mov
mov
jle
adc
out
fcompl
ret
xchg
jnp
xchg
pop
jne
mov
and
push
fdivs
pop
mov
mov
dec
mov
mov
xchg
add
pop
mov
mov
jo
ds
into
and
cwtl
int
fidivrl
popf
icebp
push
jo
adc
movsl
xlat
lret
mov
inc
and
pop
cmp
pop
mov
hlt
push
les
jge
or
movsl
xchg
call
jnp
cltd
mov
loop
shlb
cld
mov
xchg
pop
push
xor
mull
loopne
push
in
push
fs
mov
fnstenv
das
sbb
xchg
push
fs
and
mov
lods
sbbb
daa
icebp
inc
insl
js
sub
add
jbe
dec
and
imul
decl
push
sti
dec
sub
dec
inc
test
lods
stos
or
cs
stc
mov
cmc
das
pop
aaa
or
jp
cwtl
push
jo
cmp
pop
dec
data16
loopne
fwait
jg
int3
cmp
arpl
lret
mov
test
insb
jecxz
and
mov
xor
scas
sub
adc
imulb
movsb
dec
sub
push
popf
dec
sub
pop
out
cwtl
jae
shrb
xchg
fstl
and
outsl
js
adc
enter
xchg
mov
imul
cmpsl
mov
mov
enter
dec
jl
pop
sarl
dec
jne
jnp
inc
lods
std
add
jp
pop
pop
adc
mov
scas
jp
xor
lods
add
pop
scas
jno
push
sub
cli
nop
xor
mov
cmpsl
pop
mov
scas
inc
xor
and
cmp
jge
pop
mov
xchg
pop
leave
call
pop
push
or
in
sub
lock
xchg
sub
lock
add
jle
dec
xchg
xchg
out
test
aaa
push
or
jb
add
mov
ss
jmp
repnz
arpl
add
pop
loope
xor
inc
dec
outsl
int3
ljmp
adc
enter
imul
sti
test
cli
xor
insb
add
pop
call
dec
push
negl
adc
imul
push
sub
daa
loopne
inc
ds
inc
jns
push
fcoml
lock
sahf
imul
test
mov
cmpsb
sahf
mov
fistl
or
stc
and
and
xchg
jne
out
xor
cmc
das
popa
aam
movsl
das
xchg
lcall
jns
push
loope
dec
in
sbb
sahf
loope
sub
or
mov
jge
ss
jl
repz
mov
or
push
cmc
pop
inc
adc
jmp
mov
mov
dec
inc
and
imul
fwait
lods
addr16
mov
scas
add
jnp
ret
testl
or
xchg
and
mov
sub
cmpsl
adc
xorl
inc
xchg
push
mov
lret
push
fs
popl
jmp
pop
movsb
insl
xchg
dec
loopne
cld
or
insb
mov
imul
sub
insl
int3
insb
jne
es
cmpsb
aaa
xchg
hlt
mov
xchg
mov
sub
jb
test
in
aaa
sbb
add
add
lock
adc
and
ret
sub
cmp
cmp
jp
pop
pop
adc
std
lret
xchg
popf
sub
jno
and
push
inc
sub
pop
ret
dec
pop
aam
insl
cmc
adc
shll
inc
xor
call
je
inc
stc
fisttpll
xor
mov
pop
mov
lcall
leave
adc
addr16
loop
sbb
dec
sub
inc
lods
inc
lret
fstpl
jns
in
sti
mov
sbb
jnp
int3
mov
iret
inc
adc
or
mov
adc
adc
mov
dec
cld
or
sbb
outsb
adc
mov
aas
fistpl
push
cmc
hlt
push
clc
rcrl
das
xchg
xchg
or
add
es
xor
js
jg
sub
add
push
push
icebp
out
pop
sub
iret
cmp
std
fidivrl
push
xor
mov
sub
hlt
mov
add
pop
loope
jo
rorl
repnz
push
mov
mov
jecxz
subl
xchg
ja
lock
loop
popa
mov
test
xor
and
dec
jg
mov
ficompl
in
aad
aam
jge
xor
int
ror
loop
push
movsl
cli
jbe
scas
in
xor
leave
mov
ret
les
xchg
or
mov
int
sbb
push
push
push
std
mov
test
xor
xor
out
xchg
jno
jbe
dec
pop
cmp
dec
rolb
in
pop
jle
test
movsb
in
fwait
cmp
lea
pop
push
mov
xchg
jmp
rol
or
fdivl
dec
pop
in
jecxz
shlb
xlat
jbe
jg
pop
pop
repz
cmc
cmp
outsb
add
mov
add
and
ss
lcall
shlb
mov
mov
repnz
adc
mov
mov
mov
aam
into
je
daa
sbbb
fs
cmp
mov
add
fs
xchg
xor
xor
cmp
or
aad
pop
js
cmp
sbb
mov
lods
fs
insb
mov
or
idivb
dec
test
adc
outsb
dec
into
jmp
popa
xor
or
pop
fdivp
or
stc
or
sahf
cltd
jp
sbb
pop
push
shlb
cwtl
leave
cmp
mov
rorb
scas
cmp
ret
mov
lret
test
in
jmp
insb
scas
cmp
inc
xchg
sub
int
jge
int3
mov
dec
mov
pop
jo
pop
cmp
inc
arpl
pop
jp
lret
jbe
mov
mov
xor
out
push
mov
gs
das
inc
ja
fs
inc
in
in
dec
push
shll
stc
add
xchg
add
jnp
sub
ljmp
add
mov
jne
dec
mov
subb
in
popf
imul
push
adc
loop
gs
clc
pushf
jns
jno
inc
ss
jg
gs
fwait
xchg
xor
psubq
orl
scas
pop
enter
push
mov
xchg
pop
xchg
sahf
rep
mov
xor
or
aas
lret
pop
push
into
cmp
jle
in
icebp
adc
jge
aam
push
pop
push
or
jne
xchg
xchg
add
mull
movsb
push
je
xchg
cmp
popf
pop
clc
cwtl
jmp
xor
lds
jno
jl
push
jne
cmp
xor
out
movsb
divl
dec
sub
xor
fimull
cmpsl
jb
cmp
negl
add
adc
loop
and
stc
adc
je
xor
and
fcomps
mov
out
aas
mov
xchg
lods
leave
pop
or
pop
vshufps
aam
lcall
jae
xor
test
mov
clts
jg
xor
add
xor
dec
mov
jle
arpl
stc
imul
mov
mov
ljmp
outsb
inc
fldt
mov
pop
in
dec
xchg
cmp
lret
lods
scas
mov
cmp
cld
int3
push
sub
sub
mov
repz
sbb
xor
mov
adc
sbb
jns
dec
test
jns
pop
loop
mov
pop
dec
cmp
add
dec
xor
push
add
cmp
iret
mov
fistpll
push
cltd
insl
inc
popa
jns
sysenter
xchg
call
insl
or
push
ljmp
ret
xor
or
inc
sbb
pop
test
jg
daa
cmp
mov
add
mov
jp
addr16
xlat
std
dec
lea
mov
lahf
pushf
ja
nop
in
dec
je
clc
cmp
orb
cltd
pusha
mov
pop
push
pop
lods
adc
push
test
loope
or
sbb
dec
nop
int
cmp
daa
xchg
gs
loop
pop
lds
mov
imul
push
add
pushf
mov
mov
jnp
sbb
movl
rcrl
js
mov
push
imul
adc
enter
idiv
jp
out
mov
into
dec
arpl
mov
cmp
arpl
insb
pop
mov
and
rorb
fistpll
push
inc
xor
in
jmp
rcr
mov
aam
lahf
mov
cmpsl
jmp
or
adc
or
cmpsb
jle
fisttpll
push
fists
ss
scas
lock
inc
inc
xor
mov
sbb
mov
mov
pop
sbb
push
sar
je
cld
mov
rcrl
test
dec
loop
push
mov
xorb
notl
inc
inc
xchg
jne
jno
ja
lahf
lods
icebp
lret
cmp
fcomi
pop
jbe
addr16
psadbw
mov
fcos
dec
sbb
pop
idivl
rcl
mov
sub
cmpsl
out
adc
out
and
mov
pop
push
into
adc
sbb
daa
pop
movsb
add
push
xchg
popf
icebp
cmp
icebp
out
jecxz
sahf
xchg
jne
pop
ret
std
std
frstor
or
mov
jle
hlt
lock
mov
fidivrl
mulb
in
scas
test
sbb
inc
jle
out
data16
and
inc
rorl
and
daa
arpl
sarb
lret
mov
jl
sahf
jo
cmc
and
ret
jg
aam
push
jnp
cli
cmc
std
cmp
std
jecxz
repz
sti
movl
push
add
pop
adc
push
sbb
test
fists
loopne
xchg
inc
in
movsb
lcall
mov
enter
lock
lret
mov
imul
shlb
das
test
cmp
sub
adc
ret
push
inc
add
insb
xor
xor
xchg
fs
dec
ret
push
adc
push
mov
dec
push
outsl
notl
xchg
add
stc
dec
enter
inc
out
insb
jle
push
fisubrl
loopne
shl
iret
jne
stos
inc
inc
adc
test
or
fsubl
sub
pop
test
pusha
pusha
sub
sub
test
mov
mov
sub
sub
inc
pop
fmul
icebp
inc
shll
test
movsl
jb
cs
mov
mov
into
or
test
and
sub
fbld
dec
das
jge
sbb
scas
adc
enter
pop
pop
cmp
adc
aaa
pop
inc
ja
jbe
std
xchg
rcll
xor
lds
sub
adc
mov
jnp
sub
hlt
cmp
adc
add
mov
or
movl
mov
adc
fs
lret
cwtl
xor
fwait
jae
cmpsl
data16
cli
leave
movsb
imul
fdivp
add
icebp
pop
pop
shlb
cli
outsl
rcrb
aas
repz
adc
repz
and
jp
push
lret
adc
dec
cmp
inc
or
les
jbe
pop
scas
popa
insb
push
adc
addb
xchg
or
roll
scas
in
outsb
repnz
movsl
pop
js
cmp
hlt
cmp
lret
mov
xlat
popa
sbb
inc
insb
dec
adc
add
and
ja
fisttpl
mov
push
or
fxtract
and
or
fisttpl
or
movaps
repnz
add
pushf
addr16
call
ds
cld
cmp
sub
and
xor
adc
add
cld
pop
iret
sub
jnp
or
dec
movsl
sbb
push
and
stos
sahf
ss
ret
loopne
jecxz
jle
idivb
pop
les
or
test
data16
rcrb
addr16
push
cmp
ja
cltd
jle
jno
loop
mov
ret
adc
adc
stc
sbb
outsb
gs
mov
repnz
adc
ret
and
pop
repnz
out
pop
ret
cli
lock
mov
xor
mov
jge
push
subl
pushf
hlt
lea
lret
add
and
addb
xchg
mov
jmp
xor
imul
mov
lret
mov
push
daa
cmp
add
es
xor
int3
insb
cltd
pop
sbb
test
and
test
pcmpeqw
push
ficomps
xchg
sub
push
fiadds
inc
lods
add
pop
cmp
stos
mov
ds
clc
push
inc
insb
leave
jno
jl
lret
sub
xchg
mov
arpl
xchg
mov
sbb
popf
xchg
and
cld
push
push
lret
dec
pop
cmc
in
icebp
add
in
fs
mov
loopne
mov
push
iret
popl
cmp
testb
fidivl
push
pusha
xor
repz
mov
or
fildl
sub
dec
cld
movsb
fistl
mov
jl
cmp
and
adc
test
dec
push
mov
insb
lods
add
mov
sbb
lods
sub
out
stos
jnp
jne
or
push
aaa
out
or
call
pop
insb
adc
ret
xchg
jae
cmpsl
stos
fisttps
dec
jne
fisubrl
push
dec
mov
lcall
pop
mov
and
ficomps
xor
loop
sub
and
stc
sbb
testl
lods
pusha
cmpsb
fisubrs
and
xchg
mov
out
add
fsubs
in
mov
mov
xchg
aad
xor
mov
call
or
lret
cs
loope
jae
adc
out
push
mov
std
or
xchg
push
jecxz
inc
xor
xor
daa
insb
mov
push
jb
decl
dec
sbb
cld
paddd
dec
adc
cld
ja
imul
scas
pop
add
lret
clc
clc
pop
push
fldt
xchg
sub
adc
mov
stc
mov
pop
scas
jp
xor
push
adc
fst
dec
cmpsl
shlb
outsb
loopne
movsb
pushf
xchg
and
scas
imul
mov
and
popf
je
adc
mov
push
test
pushf
jno
inc
dec
je
inc
jns
or
lods
fsubr
push
cli
insb
push
test
inc
int
dec
test
daa
xchg
fistl
rcrb
xchg
mov
mov
or
in
outsb
or
mov
fdivrs
adc
es
out
cltd
push
std
sahf
int
add
aas
push
mov
int
loop
and
cltd
movsl
sbb
cmp
std
dec
pop
xor
mov
add
jl
gs
push
movsl
pop
adc
cltd
jmp
adcl
push
sub
jnp
mov
push
sub
or
mov
idiv
lock
dec
iret
push
hlt
jge
pop
pop
sbb
sub
mov
dec
dec
pop
cmp
out
cmpsl
mov
cmpsb
jle
shrl
sbb
jp
repz
jmp
mov
and
jns
cmp
in
je
pop
mov
cmp
sar
bound
xor
movsb
jno
repnz
sbb
pcmpeqw
mov
jbe
cvtps2pd
cmp
adc
mov
sub
out
adc
mov
dec
jns
xchg
popf
mov
sahf
cltd
push
clc
xor
adc
mov
ret
push
xchg
jne
ficoml
cmp
push
dec
insl
sar
pop
or
dec
js
jae
fimull
sbb
dec
adc
ja
insl
iret
push
jb
sbb
xor
lret
and
imul
scas
scas
push
sub
in
test
jecxz
or
sub
test
out
mov
inc
and
push
or
rolb
mov
inc
inc
clc
out
mov
out
fmul
sub
mull
mov
add
dec
jb
movsl
push
add
dec
std
jo
lcall
hlt
sbb
jp
mov
pop
int3
pushf
inc
test
or
fdivs
daa
dec
sub
jo
pop
and
cmp
in
mov
out
xchg
add
fmull
xchg
mov
xchg
inc
dec
push
jg
push
cmp
lcall
test
scas
cwtl
pop
mov
imul
loope
mov
inc
imul
pop
adc
mov
rorl
frstor
mov
testl
mov
push
sahf
test
das
sbb
sub
or
inc
pop
jo
shlb
add
sbb
xchg
xchg
int
subl
push
test
cwtl
mov
jecxz
sub
cmp
jb
sbb
fs
add
idivb
out
ss
xchg
adc
lret
stos
push
test
ret
into
aam
mov
loopne
mov
roll
mov
or
mov
out
add
jns
repnz
fsubs
jmp
jno
ss
into
popa
mulss
cmpsl
xor
jmp
sub
popa
sub
and
adc
adc
sbb
ret
inc
cs
xor
pop
sbb
rorl
jmp
ljmp
mov
test
jo
mov
xor
sahf
jno
jno
repnz
cld
mov
sub
or
xor
incb
or
push
push
ja
push
inc
push
mov
xlat
fistl
cwtl
fs
cltd
jmp
cli
insl
jecxz
pop
inc
mov
scas
xor
mov
fstpl
jns
aas
int
pop
and
scas
dec
and
jno
inc
mov
stos
push
mov
push
jmp
jle
and
mov
mov
js
sahf
xchg
arpl
or
fistpl
es
sub
fwait
mov
les
pushf
mov
dec
dec
cmp
jo
pushf
insl
inc
insw
test
sbb
xchg
xchg
out
shrl
xor
adc
mov
jl
ljmp
sti
out
adc
mov
cmp
mov
xor
lods
sbb
mov
int3
inc
xlat
sahf
sbb
ss
and
cmpb
ds
inc
and
xchg
xchg
push
sub
stos
les
addr16
inc
xchg
mov
roll
and
fnstcw
ljmp
jbe
mov
xor
cwtl
xor
dec
dec
sub
pushf
mov
int
xchg
inc
push
mov
popf
out
mov
sbb
flds
out
cmp
mov
call
bound
gs
je
mov
test
pop
rcrb
rorl
loop
xor
gs
push
sbb
sarl
jp
push
jp
mov
adc
cmc
adc
mov
mov
pop
jmp
in
lock
aad
or
sub
mov
stos
fcompl
leave
add
sbb
dec
bound
out
push
and
ja
int3
std
mov
xor
fistpl
add
adc
xchg
out
ja
jg
pop
hlt
imul
cmpsl
out
jp
filds
dec
jle
mov
popf
idivb
xchg
jl
inc
mov
out
mov
mov
xor
lods
lods
lret
mov
or
inc
popf
ja
loop
imulb
sarl
cmp
pop
push
int
and
cmpsb
fs
pushf
and
movsl
aad
test
aam
int3
jmp
lds
sahf
je
cmp
mov
out
and
sti
incl
or
stos
ds
sbbl
in
in
adc
in
or
fdivrs
ja
mov
adc
xor
push
popa
cs
movsb
sub
imul
mov
and
out
push
and
arpl
add
dec
jo
addr16
cmp
mov
push
jbe
scas
arpl
call
inc
imul
sub
jg
xor
jno
mov
mov
mov
dec
out
in
lods
mov
sbb
fs
cli
ret
lcall
inc
xchg
outsb
arpl
adc
popl
cmp
adc
call
xchg
mov
or
jno
jg
mov
dec
rclb
pushl
mov
int3
out
cmp
repz
pop
icebp
mov
or
dec
stos
add
adc
das
jns
test
loope
or
fdivs
cli
sbb
mov
cmp
orb
aas
dec
testl
nop
jl
sarl
adc
xor
ljmp
cmpsb
hlt
xor
pop
xor
enter
jp
in
and
xor
jmp
jle
or
test
not
xchg
clc
ljmp
or
testb
xor
inc
push
scas
xchg
aad
dec
and
lret
mov
mov
mov
pop
mov
out
sub
xor
mov
pop
testb
pop
mov
movsb
mov
lods
sub
fists
jnp
mov
scas
xlat
repnz
sub
xchg
cmp
gs
hlt
push
repnz
pushf
fcoms
out
insl
in
sbb
dec
jge
xor
adc
sub
mov
xchg
xchg
dec
push
inc
inc
sbb
es
push
std
xchg
sti
leave
outsl
mov
dec
fists
xor
push
mov
sbb
add
cmpsb
adc
push
or
and
add
adc
sbb
lds
mov
sbb
jp
pop
loopne
jmp
mov
xor
jae
cmp
mov
xchg
addr16
aas
lods
jbe
mov
lods
icebp
test
sub
pop
in
repnz
outsb
lret
inc
inc
mov
dec
cmp
dec
dec
fstpl
xchg
mov
mov
leave
cld
mov
popa
shll
fisubrs
mov
push
mov
mov
dec
push
lds
mov
loope
shr
push
popf
pop
mov
outsb
in
das
sub
cmp
sub
jnp
and
or
jge
xlat
push
lahf
js
inc
lock
inc
js
in
pop
fwait
push
mov
imul
into
adc
dec
cmpsl
push
pop
or
dec
add
mov
jle
push
lcall
jb
or
insb
or
jb
aaa
in
xchg
mov
and
xchg
mov
mov
std
add
out
cli
push
rclb
gs
cmp
mov
aas
push
and
and
mov
dec
cwtl
mov
add
or
pop
jne
mov
imul
push
mov
test
pop
add
pop
inc
xchg
jmp
in
adc
test
test
decb
xor
pop
cli
inc
cmpsl
cmpsl
jle
inc
or
out
fimull
dec
imul
jecxz
out
inc
dec
std
add
mov
and
adc
aam
mov
pop
push
xchg
push
jl
cmp
mov
mov
cli
mov
jl
dec
sub
push
mov
shrb
nop
in
xchg
adc
cmp
pop
sub
lds
xchg
loope
or
out
mov
push
mov
mov
out
ds
ja
enter
add
xor
xor
fwait
jnp
scas
cld
fstpl
test
mov
fstp
out
in
bound
push
bound
hlt
push
mov
mov
dec
adc
js
or
push
jae
cmpsb
push
xchg
in
mov
loop
subl
cmp
std
es
bnd
call
push
mov
pop
test
and
sbb
cmpsb
cli
jb
xchg
cmpsl
push
into
addl
xor
dec
dec
add
push
mov
shl
xor
addl
sub
lea
mov
leave
data16
mov
mov
or
xorb
sbb
mov
and
xchg
test
push
stos
xor
dec
dec
pop
insb
add
or
sub
je
push
pop
xor
popf
sarl
mov
sbb
pop
pop
in
jbe
or
das
bound
mov
mov
fwait
sbb
sub
push
lods
pop
aas
jl
mov
mov
outsb
les
sbbb
mov
subl
loop
repnz
mov
rorl
xor
rcl
inc
add
xchg
sarl
out
movsl
sub
inc
rcl
addb
lock
out
repz
cmpsl
xchg
sbb
lods
pop
outsb
pop
push
inc
cmp
sub
sub
xor
in
in
sti
ret
mov
sub
push
bound
outsl
mov
push
xor
dec
dec
xchg
pop
mov
push
pushf
add
cmp
jns
mov
pop
and
pop
test
icebp
out
adc
mov
push
fmull
fucomi
leave
jae
mov
fistl
gs
mov
dec
imul
stos
mov
jnp
xchg
cmp
sub
bound
pop
sub
std
jno
mov
and
imul
adc
ds
icebp
push
out
pusha
jl,pt
mov
jg
mov
inc
daa
pop
test
addr16
fs
inc
adc
shlb
jle
push
dec
in
dec
jbe
loop
pop
and
addb
fldl
iret
mov
add
insl
mov
and
pop
ret
test
les
mov
fwait
cmc
rorl
int3
dec
popl
xchg
push
js
lret
or
pop
mov
rcrb
gs
pop
or
push
insl
pop
repnz
adc
lea
imul
subb
dec
cmp
cmp
xchg
shll
mov
adc
sbb
cld
dec
inc
or
cmp
jmp
arpl
das
fisubrs
jno
ds
push
insb
sub
inc
shll
ffreep
div
or
shrb
dec
cmpsl
mov
leave
dec
dec
add
aaa
sbb
mov
aaa
pop
push
call
cmpb
cmpsb
jg
les
push
inc
push
sbb
push
dec
lret
enter
fisubs
je
adc
mov
cwtl
or
mov
test
loopne
or
pop
push
dec
ret
mov
mov
adc
pop
andb
jg
or
adc
xchg
les
xchg
mov
jg
jns
cmpsb
xlat
fcoms
jns
push
test
xchg
orb
test
loopne
test
or
mov
xor
mov
repz
xor
inc
mov
in
push
loope
std
fldl
rcll
faddp
push
mov
bound
dec
cmpsl
sbb
dec
xchg
pop
mov
jg
insb
ljmp
std
je
push
out
and
push
mov
inc
mov
test
inc
roll
pop
sbb
xchg
out
mov
dec
lock
add
add
push
pop
fcoml
jb
shrl
inc
fwait
adc
xchg
movsl
lds
mov
jno
into
inc
cld
and
imul
sub
adc
aaa
std
test
clc
lahf
rclb
push
in
ss
mov
and
dec
and
aaa
les
movsl
ret
jne
mov
mov
out
pop
sub
mov
les
pop
sbb
repnz
icebp
into
and
pop
pop
inc
xchg
ret
sub
push
push
xchg
std
or
das
or
pop
inc
int
mov
lahf
mov
jo
inc
jno
pop
int
into
rol
xchg
sub
sbb
fimull
jp
dec
aad
mov
sub
inc
pop
sbb
enter
call
int
pop
sub
sub
push
cmpl
loope
nop
and
lods
adc
mov
mov
xchg
loop
xchg
stos
xor
lret
adc
sahf
cli
fdivrs
js
push
xchg
cmp
in
loope
or
mov
popw
scas
jo
repz
ror
push
jmp
shll
xchg
mov
icebp
push
je
cltd
jle
fldt
ljmp
or
sbb
mov
sbb
fstps
les
xchg
mov
mov
adc
sbb
loope
xchg
xlat
cmp
cmpsb
cmp
adc
jae
and
ja
int
arpl
xchg
push
push
xor
mov
push
add
sub
scas
mov
popa
mov
cmp
scas
xor
lods
sub
adc
and
out
xchg
sub
jb
fists
sbb
ror
scas
xchg
lret
icebp
fbstp
sahf
iret
pop
out
mov
and
add
ficomps
sub
fwait
xorb
jnp
repnz
sub
lcall
fnstsw
mov
mov
xchg
ja
add
mov
xorb
rcrl
dec
or
movsl
mov
in
int
mov
lock
mov
imul
je
inc
es
mov
jne
cmp
std
push
add
test
push
ret
adc
jnp
jecxz
jbe
imul
nop
repnz
add
outsl
cli
test
dec
cmp
cmp
aam
jno
sub
cli
ret
jnp
hlt
mov
mov
incl
cmp
outsb
add
jmp
add
add
sti
pop
xor
add
mov
mov
cmp
sahf
pop
adc
mov
leave
rcrl
mov
push
cli
mov
cmp
orb
inc
ss
mov
out
mov
push
add
inc
push
fldt
fstpt
ror
in
xchg
jns
sub
shll
insb
aas
xchg
sbb
push
repz
jns
push
jne
sub
js
scas
cwtl
lret
sbb
cmp
jne
je
std
incb
fcoml
pop
aas
pushf
add
and
rorl
pop
mov
ret
shlb
lret
adc
test
add
movsl
mov
loop
dec
push
sub
cmpsb
mov
push
iret
xor
int3
lock
push
jo
out
ja
sub
jg
push
fcomps
or
jnp
jnp
outsl
sbb
mov
movsl
mov
out
add
sub
and
and
cmp
jo
clc
imul
jae
nop
stos
adc
mov
lds
fstpt
push
sub
into
mov
inc
in
xchg
ja
out
outsb
mov
fcoml
cmp
and
insb
das
xchg
and
mov
inc
das
lret
sar
dec
mov
pop
jno
push
dec
test
imul
pop
std
and
jecxz
jb
cmpsl
jne
clc
loope
or
inc
shl
cmc
lds
sbb
das
out
add
sub
mov
scas
cmp
cmp
insb
lods
sti
ds
pop
jne
adc
jne
or
inc
imul
cltd
pop
into
push
adc
gs
xor
mov
adc
mov
cmc
add
popa
mov
sti
xchg
pop
shlb
cmp
lds
dec
add
jge
frstor
ja
xor
mov
pop
lret
dec
clc
dec
popa
sarb
imul
jecxz
cmp
je
push
pop
lea
les
std
add
mov
sub
andb
mov
imul
into
cs
call
cmc
cmc
xchg
pop
scas
and
pop
inc
loopne
mov
loop
aas
mov
ret
cli
jl
or
js
sbb
or
sub
xchg
inc
mov
add
dec
inc
jecxz
dec
push
sbb
cltd
inc
mov
mov
arpl
test
stos
dec
or
mov
leave
xchg
roll
xlat
daa
aaa
in
mov
dec
out
ljmp
aas
movsb
and
shll
xchg
dec
jbe
repz
ret
cmp
push
sbb
cltd
lret
sub
inc
mov
std
inc
and
pushf
bound
or
xchg
jns
adc
cld
jl
inc
mov
imul
out
jg
les
lea
jp
push
movsb
cld
out
mov
cmp
jecxz
in
mov
mov
div
js
shlb
call
xchg
pop
add
pop
icebp
jnp
les
sbb
push
outsl
mov
pop
fstps
lret
pop
sub
fldenv
sbb
cmp
out
adc
jo
fistl
mov
lock
repz
mov
int3
jnp
push
mov
inc
iret
cmp
and
fdivr
aam
pop
jno
outsl
pop
das
lods
dec
dec
int
int
js
mov
mov
out
cmc
xor
push
push
jp
push
mov
imul
outsl
into
leave
add
push
int
stos
sbb
iret
insl
loop
imul
js
fidivrl
adc
rcrb
mov
mov
hlt
mov
insl
dec
jnp
pop
int3
pop
xchg
mov
push
cmp
mov
insl
dec
push
jl
or
dec
test
pop
movsb
test
push
xchg
push
outsb
mov
ret
int3
jo
ja
cmp
int
and
push
inc
aam
test
sbb
push
cmpb
xchg
lock
inc
mov
test
aas
pushf
jne
dec
push
sbb
mov
dec
push
data16
mov
xor
xchg
stos
icebp
cwtl
mov
dec
pop
mov
mov
sub
cld
or
imulb
movsl
int
or
sub
aad
in
inc
stc
jne
adc
das
dec
std
dec
lcall
loopne
and
sbb
inc
outsl
add
push
mov
xchg
data16
cmc
stc
pop
out
adc
fcompl
or
cld
pop
push
lcall
icebp
fsubp
cmpsb
das
xchg
mov
or
and
mov
ljmpw
push
out
and
lret
ret
stos
xchg
pop
scas
dec
mov
repz
or
xchg
fidivs
xchg
push
inc
dec
mov
adc
sub
xchg
es
lods
stc
leave
inc
lods
add
or
cmp
cmp
bound
sub
loope
test
in
mov
stos
xlat
push
orb
adc
pop
int
es
repnz
data16
sbb
lcall
sub
or
push
sarb
xor
stos
cmp
daa
arpl
addr16
push
and
pushf
enter
cltd
lods
pop
xor
inc
lret
mov
mov
enter
push
pop
pop
sbb
add
scas
push
lcall
xor
arpl
pop
push
stos
lods
stos
addr16
insl
or
xchg
ljmp
fildl
neg
cmp
jae
enter
loope
sbb
mov
dec
stos
push
dec
rep
adc
lret
rclb
xchg
cmpb
cmc
add
flds
lret
mov
pop
rclb
cmpb
add
jae
shlb
cwtl
jbe
out
lret
cmp
loopne
mov
in
nop
test
add
mov
test
sbb
mov
dec
and
sbb
or
nop
test
and
out
fadds
add
out
aam
loope
add
lcall
cmp
out
les
arpl
jo
les
jnp
xor
loope
sahf
into
mov
ds
je
pop
cwtl
mov
ljmp
xor
idivl
xor
movsb
sub
dec
cmp
repz
orl
jae
test
out
dec
mov
xor
rolb
push
lret
std
enter
and
inc
loope
add
movsl
into
and
push
adc
and
pop
out
or
xor
roll
pop
into
in
sbb
rcl
or
sub
nop
pop
mov
add
test
xor
mov
xchg
popa
or
in
shlb
xlat
xchg
rol
imul
xchg
test
outsl
dec
jg
dec
push
ljmp
or
repz
xchg
out
aad
xchg
and
test
jp
pop
jb
xor
pop
lcall
cltd
mov
jae
add
rol
lret
cmpsl
sub
mov
xchg
in
xchg
xchg
testl
test
mov
outsb
pop
sub
popl
mov
bnd
push
sbb
sub
xchg
sbb
aas
push
sbb
cld
sbb
mov
fidivrl
push
jb
sub
aaa
daa
dec
pop
and
mov
fidivl
cli
in
test
subl
dec
fimull
dec
mov
pop
pop
mov
inc
inc
inc
or
adc
faddl
out
or
test
mov
cwtl
xor
adc
repnz
mov
hlt
mov
jecxz
insl
dec
xor
sbb
shl
add
sub
stos
flds
insb
adc
test
mov
xchg
test
xlat
jnp
sub
and
sbb
aad
pop
xlat
xlat
and
shrl
jno
mov
cmp
daa
outsl
iret
mov
mov
pushf
fbld
dec
icebp
xchg
stos
add
mov
or
adc
and
dec
sub
inc
mov
in
push
sahf
movntps
push
mov
fimuls
dec
imul
xchg
xor
les
lock
jp
loop
mov
and
pop
les
rol
pop
lods
repnz
addr16
dec
fistps
mov
mov
shrl
adc
and
outsb
lcall
in
sub
dec
aad
sbb
scas
pop
adc
xchg
lock
and
jnp
arpl
xor
adc
mov
and
push
dec
aas
mov
adc
ss
andb
push
idiv
xadd
and
sub
pop
mov
push
iret
imul
adc
pop
lret
movsl
psubsw
popf
mov
adc
ja
dec
mov
and
inc
mov
mov
daa
clc
out
or
cmp
sub
imul
daa
outsl
outsl
cmc
or
jge
add
jns
sbb
sub
jmp
push
lret
push
aam
scas
inc
into
pusha
in
cmp
iret
pop
push
inc
mov
and
xorl
and
scas
mov
jle
inc
jmp
or
pop
push
cs
jmp
in
fstl
ror
rorl
cwtl
leave
rolb
cmpsb
outsl
mov
and
es
adc
dec
inc
push
adc
std
sbb
clc
scas
test
xchg
fld
cmp
cmp
pop
xor
xor
add
pop
andl
in
stos
jb
push
cmpsb
test
cli
push
clc
mov
ja
clc
xorps
mov
dec
sub
xchg
push
and
or
iret
lea
dec
push
bound
fisubrl
pop
mov
or
cmp
push
push
pop
jno
and
subl
dec
dec
test
gs
movsl
andl
mov
movsb
mov
mov
pop
or
pushf
xorb
mov
adc
icebp
lret
addr16
xchg
sub
xor
in
mov
push
mov
dec
pop
xor
adc
cmp
cmpsl
sti
ja
push
xor
xchg
cmp
adc
cmp
imul
repnz
pusha
movsl
push
xchg
inc
jns
lock
or
or
mov
cs
xor
mov
les
push
mov
pop
int3
push
mov
push
pop
dec
js
inc
xor
push
ja
mov
fs
and
mov
repnz
pop
outsb
scas
mov
push
and
test
ret
jo
or
jns
cld
adc
sub
and
sbbb
stos
cmp
and
ret
add
cmpsl
stos
in
push
insl
fwait
pop
adc
inc
sti
in
test
aas
adcb
shlb
mov
mov
mov
cmp
mov
popa
in
ss
and
pushf
and
inc
call
adc
dec
in
in
cmpsl
sbb
shlb
push
sub
in
cmp
mov
xrelease
xchg
ret
add
push
jg
popf
sbb
popa
xor
or
sub
sbb
xchg
jbe
enter
jbe
xchg
sahf
aad
add
or
lcall
out
push
nop
and
push
enter
popa
pop
imul
inc
insl
push
push
inc
push
mov
cltd
aad
dec
add
push
movsb
outsb
pusha
imul
mov
scas
lods
dec
scas
rclb
xchg
jg
lods
and
int
into
pop
adc
mov
daa
mov
repz
jne
fdivl
xchg
icebp
into
shll
enter
popf
lret
cli
call
dec
mov
mov
bound
xchg
mov
and
cmpsl
dec
mov
outsb
lock
cwtl
imulb
in
daa
fs
add
jbe
rclb
lret
js
mov
add
push
neg
stos
cmp
push
or
sub
add
jp
sbb
in
fbstp
aas
insl
ja
ret
repz
popf
ljmp
hlt
movl
xchg
daa
scas
dec
add
push
xchg
push
and
lret
cmp
dec
sub
adc
aas
and
movsl
lods
mov
lock
mov
cld
leave
dec
and
add
add
add
add
pusha
add
xorb
add
jo
add
loopne
add
and
add
add
add
add
add
add
add
mov
add
dec
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
in
add
add
add
add
add
add
add
nop
add
addb
add
mov
add
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
lea
add
clc
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
or
add
add
test
add
pop
add
add
add
add
add
add
add
inc
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
clc
decl
clc
decl
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
xchg
popl
add
xchg
popl
add
mov
jg
clc
div
add
jg
clc
divl
add
ja
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rorb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
mov
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
clc
clc
clc
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
incl
mov
add
add
js
js
js
js
js
clc
add
add
mov
mov
add
add
clc
clc
jg
jo
add
pop
clc
clc
jg
add
add
pop
clc
clc
js
add
add
pop
clc
clc
pushl
add
add
pop
clc
clc
pushl
add
add
pop
ja
ja
ja
ja
ja
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
incl
add
add
add
adc
add
add
sub
add
add
and
adc
add
add
call
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
pop
aaa
add
insb
aaa
add
xorb
add
add
add
aaa
add
add
add
decl
add
aaa
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
dec
daa
or
mov
pop
inc
or
or
mov
mov
xchg
mov
adc
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
dec
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
push
push
jmp
cwtl
sub
je
subl
adc
pusha
cld
adc
js
jmp
and
inc
nop
stos
and
inc
pop
leave
push
and
fwait
fwait
std
fldcw
add
sbb
loope
std
in
or
rclb
imul
test
adc
dec
rcrb
xor
xor
mov
xchg
orl
or
mov
pusha
imulb
push
add
les
cs
jno
sbb
add
jmp
bound
test
or
xchg
inc
adc
pop
mov
sti
fadd
and
add
std
into
loopne
adc
lods
xchg
sbb
inc
mov
push
mov
jmp
repz
cs
push
add
add
xchg
mov
ds
sub
incb
sti
sub
dec
add
lods
outsl
sbb
sbb
sti
fwait
add
add
pop
aas
dec
push
mov
xchg
pushf
cmp
push
add
mov
xchg
xchg
insl
adc
mov
push
mov
mov
add
push
ljmp
or
lret
stc
es
adc
add
stos
packsswb
in
test
add
mov
sub
add
clc
rorl
call
jb
sub
fmuls
lea
sub
je
mov
inc
pushf
mov
aas
test
inc
adc
mov
jmp
dec
add
shrl
data16
or
outsb
lea
add
pushf
inc
mov
adc
loopne
jg
sti
push
jno
add
cmp
ja
test
repz
arpl
dec
hlt
mov
cmp
xchg
push
pushf
adcb
lea
jb
pop
aad
xchg
jb
mov
lock
rclb
enter
in
jne
mov
inc
add
cltd
push
sbb
add
adc
rcrl
inc
xchg
cltd
negl
cmp
loop
mov
push
pop
stc
and
sbb
push
push
call
xchg
push
cmp
cld
clc
cld
push
sti
inc
enter
fldcw
mov
orb
or
pop
mov
loope
jecxz
pop
pop
push
loopne
test
xchg
add
adc
cmp
xchg
fldcw
mov
mov
cmp
enter
xor
lahf
dec
add
add
into
sbb
mov
mov
adc
es
mov
insb
xchg
mov
addr16
xchg
orb
inc
cmp
jo
test
adc
or
adc
adc
sub
outsl
leave
or
xchg
movsb
xor
ljmp
cmp
and
lret
add
adc
mov
rorb
sbb
mov
or
subb
mov
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
into
jnp
test
rep
out
iret
and
cmp
das
aaa
outsl
int3
cmp
mov
mov
push
call
test
das
mov
cmp
or
add
dec
fistpll
cmp
and
call
test
cmpl
enter
mov
cmp
adc
dec
add
call
add
sub
lea
popf
cmp
and
xchg
popa
inc
and
call
mov
cs
setnp
or
add
dec
adc
fmuls
or
and
ror
mov
icebp
int3
mov
rcll
push
push
sub
jg
lea
push
hlt
xor
lods
jmp
sbbb
les
push
nop
aas
and
push
test
sub
xor
lds
mov
xchg
js
jne
inc
mov
dec
add
add
movb
jmp
les
nop
xchg
add
rcrb
push
sbb
sbb
adc
dec
mov
add
pop
pop
pop
pop
ret
bound
push
call
jmp
adc
push
add
push
and
xchg
cld
dec
test
xor
dec
sti
push
xchg
roll
push
push
sti
scas
rol
push
les
xchg
inc
inc
stos
pop
orl
add
in
subl
jo
test
int3
pushf
addr16
sbbb
ret
je
cli
ja
cmp
rsqrtps
repz
sub
loopne
clc
lods
icebp
fninit
fisubrl
sub
or
cs
jmpw
sbb
push
aaa
adc
add
add
sti
inc
test
decb
xchg
cwtl
jle
sbb
call
jne
mov
add
pop
dec
stc
adc
jmp
jbe
adc
data16
adc
ret
or
hlt
and
nop
cld
leave
call
push
test
in
cwtl
pop
push
cmp
or
pop
incb
pop
jmp
pop
mov
movzwl
pop
test
jns
jne
xchg
insb
xor
inc
pop
adc
ss
idiv
cmp
sub
xor
add
mov
add
cld
sub
cmovp
enter
arpl
cmp
mov
dec
pop
or
rclb
xchg
push
mov
add
cli
movb
cwtl
inc
jmp
and
pop
mov
xor
xor
push
dec
pop
mov
pop
jmp
notb
mov
sub
jg
add
push
push
call
mov
push
aad
imul
pop
std
sti
ljmp
inc
repz
jae
push
jge
sub
cmpsl
dec
rcll
add
movsl
mov
ds
push
adc
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
pop
rcrl
push
lock
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
fldcw
mov
hlt
pop
push
dec
or
cmp
in
push
in
mov
inc
je
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loop
add
out
out
sti
test
pushf
pushf
fimull
mov
or
and
nop
popf
add
fwait
push
shl
xchg
orb
mov
push
je
and
or
mov
push
dec
or
ror
jle
test
and
push
push
push
push
dec
call
sbb
mov
test
cltd
aad
or
mov
and
mov
adc
xchg
inc
adc
dec
sbb
shlb
je
enter
mov
jmp
push
inc
adc
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
adc
push
jmp
pusha
pop
add
jns
lock
jno
xchg
cmp
pop
push
dec
sbb
xchg
add
inc
xchg
lods
jmp
inc
popf
push
xlat
sub
mov
sbb
sub
mov
shr
push
add
sbb
dec
or
push
inc
jmp
pop
ss
pop
and
pop
jmp
sbb
loopne
inc
cmp
mov
jl
sbb
iret
shr
push
loope
push
lea
push
je
add
aad
add
add
mov
sbb
dec
mov
dec
decb
imul
and
xchg
or
and
hlt
scas
mov
mov
mov
fidivs
pop
cmpsb
mov
sub
push
push
fsubrs
cmp
jne
inc
jno
pop
insb
imul
and
jb
into
sahf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
shll
xchg
xor
popa
addr16
outsl
js
loopne
divl
fwait
adc
cmp
ss
aas
add
push
es
dec
loopne
fcomps
outsb
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
sbb
bound
lret
and
mov
and
inc
adc
inc
dec
jne
xchg
pop
dec
pop
or
dec
push
lods
dec
sub
xlat
dec
insl
and
jecxz
addr16
or
sub
mov
cmp
movsl
std
xorb
mov
xchg
notl
or
and
cltd
push
inc
or
xor
stos
cltd
mov
je
mov
in
cmc
xor
mov
or
sbb
pop
push
test
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
les
add
pushf
daa
add
mov
add
lods
inc
add
sbb
add
sbb
add
add
inc
add
aaa
add
adc
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
lods
inc
inc
add
add
add
xchg
add
mov
add
fs
add
fdivrp
add
stc
stc
add
jl
add
add
add
dec
out
mov
