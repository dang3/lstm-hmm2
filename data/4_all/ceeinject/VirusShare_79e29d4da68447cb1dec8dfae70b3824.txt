call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
movsl
inc
mov
lret
push
nop
adc
stos
adc
aam
movsb
push
mov
test
test
movsl
inc
mov
lds
insb
add
les
mov
test
test
movsl
inc
mov
lds
adc
in
xlat
push
mov
mov
lock
ljmp
sub
push
test
lahf
movl
data16
into
loope
movsb
call
aaa
sub
push
sbb
shr
and
mov
or
push
pause
cmp
test
mov
mov
test
jns
cs
mov
negl
inc
add
popf
pop
test
mov
mov
add
push
shrl
lds
popf
ljmp
adc
movsb
cmp
xchg
jp
loope
iret
adc
fnstcw
fidivrs
adc
cmp
test
stc
loop
push
adc
and
jle
push
cmc
jg
fnstsw
sarl
out
test
je
inc
mov
lds
adc
in
hlt
and
movsb
push
mov
test
ret
pusha
cld
xor
test
inc
mov
inc
popf
adc
inc
mov
cmp
and
and
xchg
out
cmc
and
push
orl
in
cmc
jo
scas
pop
lea
mov
lret
pop
shlb
in
and
cmp
ss
lds
aad
in
cmc
adc
in
hlt
and
movsb
push
mov
test
test
movsl
inc
mov
lds
adc
in
hlt
and
movsb
push
mov
test
test
push
test
jns
pop
mov
push
insb
or
addr16
jp
movsb
ds
test
pop
ret
mov
orb
cwtl
xlat
and
xor
or
and
lret
mov
xor
xchg
lcall
lods
call
or
or
inc
and
mov
pop
mov
imul
icebp
cmpsl
push
jae
jge
das
cld
adc
out
dec
xchg
dec
loope
mov
xchg
lahf
mov
loopne
dec
xor
mov
inc
ja
jnp
cmp
sti
mov
pop
adc
js
jecxz
test
fcomi
mov
or
rcrl
imul
and
xchg
cmc
dec
mov
loop
xchg
jns
icebp
mov
add
aaa
cltd
outsb
int
mov
jge
sub
inc
inc
sahf
into
xchg
sub
andb
jg
mov
jae
ds
cs
je
push
cmp
cmp
xlat
jno
dec
movsl
rol
mul
xchg
jne
insb
arpl
arpl
stos
pop
ljmp
add
and
xchg
mov
mov
jno
mov
pusha
and
add
mov
mov
push
addr16
mov
xchg
scas
mov
jbe
cmpsb
mov
aas
xstore-rng
cmpsl
xchg
fistpl
jmp
cmove
fsubp
notl
xchg
aas
mov
test
jle
in
mov
pop
pop
pop
dec
xchg
cmp
push
mov
add
xor
jnp
xlat
dec
or
lods
lea
add
pop
jl
in
sub
addr16
imul
fwait
jp
sbb
scas
adc
stc
mov
fmul
jns
pop
movsl
pop
mov
lds
adc
pop
or
test
mov
xchg
add
ret
sarb
gs
cs
and
mov
cmp
pop
dec
mov
lret
xlat
in
popf
push
cltd
jae
inc
jb
pop
fmuls
aad
adc
or
dec
scas
loopne
add
jl
adc
outsb
out
stc
cs
in
flds
popa
push
rclb
lret
mov
pop
insl
fimuls
clc
sub
xchg
js
subl
mov
outsb
add
sbb
cwtl
mov
mov
mov
adc
call
test
rcr
adcb
sbb
mov
cmp
je
adc
filds
adc
popa
xlat
cld
fwait
lret
ds
sarl
pop
sti
sti
scas
test
xor
lahf
mov
imul
mov
es
pop
inc
jle
rorb
mov
sub
inc
mov
cmpl
das
repz
shll
es
inc
sub
push
xor
add
repz
int
movsl
and
lret
mov
mov
aam
pop
inc
pop
dec
ljmp
pop
testl
sub
pop
cmp
pop
xchg
or
jns
test
in
test
icebp
clc
sbb
adc
xchg
bound
mov
add
inc
adc
adc
and
xchg
pop
sbb
push
sbb
sbb
fwait
aad
sbb
in
mov
xor
adc
addr16
inc
jl
in
lret
xchg
lret
add
mov
add
jle
xchg
push
xchg
mov
jns
mov
pop
insl
aad
adc
push
xor
scas
jae
fldt
std
mov
xor
adc
in
push
add
sub
fildl
xor
das
push
stc
cmp
outsl
lahf
push
push
aad
ficompl
push
test
mov
cmpsl
mov
inc
enter
iret
add
leave
mov
fcompl
sub
jae
insb
insl
push
lcall
in
push
hlt
add
cmp
inc
out
or
outsl
addr16
repnz
sbb
aad
fsubrl
mov
popf
pop
cmp
dec
push
mov
inc
sub
enter
shll
adc
jge
clc
mov
imul
test
mov
mov
movsl
or
xor
xchg
out
addr16
sub
jmp
cmp
frstor
hlt
lret
xchg
and
mov
or
ficoml
repz
sub
mov
sahf
daa
and
andl
mov
in
dec
in
int3
dec
dec
xchg
lock
pop
push
mov
pop
lar
mov
add
add
out
sbb
cmp
mov
decb
cmpsb
pop
shrb
adc
out
decl
dec
ret
push
fwait
int
dec
xchg
xor
mov
add
sub
std
jns
imul
fwait
push
imul
add
pushf
pop
mov
push
xchg
ja
outsl
xchg
sbb
sahf
stos
jge
add
loopne
mov
subb
push
pop
test
arpl
cmp
test
rorb
inc
pop
repnz
mov
mov
into
mov
and
or
insl
and
leave
cwtl
inc
xchg
clc
or
lahf
sbb
ret
lea
jecxz
jae
push
cwtl
push
shl
stc
jb
push
jo
jo
sbb
mov
xchg
test
clc
jbe
jle
and
jnp
or
test
adc
movsb
dec
cli
and
mov
cld
mov
rol
mov
movsl
push
out
imul
adc
scas
fistpll
fimuls
rcrl
decb
out
cmpsb
mov
inc
pop
insl
rcrl
fs
outsb
push
dec
lock
stos
aam
pop
cltd
inc
fwait
push
xchg
dec
ljmp
mov
lods
shr
fbld
out
push
out
es
adc
ds
arpl
jns
loop
stos
stc
popa
sbb
mov
xchg
pop
dec
lcall
cmpsl
inc
xor
xor
rol
push
cmc
push
add
add
adc
popa
sti
addl
xor
hlt
mov
adcb
xor
xchg
icebp
repz
push
ljmp
push
lcall
pop
jnp
fildl
sbb
loopne
push
push
mov
xor
je
jl
mov
ret
lret
pop
test
pop
repnz
scas
jno
mov
mov
ret
push
mov
dec
arpl
ljmp
cmpsl
mov
test
mov
je
cs
out
ja
mov
jmp
add
fisubs
repnz
push
sbb
or
jmp
divl
lock
add
sub
ss
in
ja
or
repnz
xchg
jl
mov
cmpsl
outsb
sbb
popf
cwtl
push
cli
gs
push
pop
hlt
mov
xchg
add
push
sbb
lahf
es
jle
sbb
sbb
xlat
push
daa
and
dec
gs
mov
push
repnz
stos
loopne
cmp
xlat
sub
jecxz
ljmp
jb
pop
sbb
scas
mov
stos
mov
fimull
mov
das
cwtl
stos
mov
imul
stos
mov
cmp
rorl
push
jl
xchg
jo
mov
fincstp
loope
fwait
xchg
sti
clc
xor
fwait
lcall
mov
rcrl
adc
and
mov
lock
pop
xchg
adc
pop
push
mov
jmp
cmpsb
addr16
xchg
lcall
mov
inc
insb
and
xchg
mov
dec
mov
fsubrp
testb
mov
xchg
push
lcall
pcmpeqb
inc
popa
mov
pop
imul
adc
fcmovnu
in
mov
shl
push
sahf
imul
jb
outsl
dec
cmp
cwtl
pop
shll
mov
mov
push
sub
mov
sub
push
dec
sarb
sbb
inc
movsl
loop
jns
aad
int3
repnz
sub
icebp
data16
hlt
add
int3
adc
lods
mov
jmp
sbb
push
out
mov
pop
adc
lahf
cmpsl
push
test
dec
pop
add
leave
stos
insl
lcall
sbb
pop
in
pop
jno
arpl
sbb
push
imul
jmp
jmp
andb
popf
in
fisubs
cld
or
sub
movsb
andl
xor
icebp
pop
rclb
fwait
push
xor
fldt
filds
push
push
ja
push
mov
pop
in
fwait
and
jne
aaa
mov
hlt
popa
fists
inc
fstps
and
xor
or
clc
test
fimuls
xor
pop
or
push
dec
adc
imul
sub
sub
inc
jge
mov
xchg
std
push
mov
fsubp
xchg
lret
mov
out
aam
ficompl
fildl
push
rcr
cli
inc
xchg
jl
cmp
inc
cwtl
imul
cmp
dec
imul
pop
sbbb
jg
inc
out
and
cs
fsubr
arpl
rcrb
adc
daa
add
push
sbb
stc
cs
shrd
mov
in
inc
push
in
sub
mov
cmp
jno
or
not
pop
add
or
insl
mov
sub
jbe
dec
add
shl
cs
shlb
lods
sub
mov
pop
adc
das
aas
pushf
mov
jno
sbb
test
xchg
sub
sbbb
aam
scas
xlat
push
mov
xchg
arpl
stos
sbb
inc
repz
xor
inc
mov
mov
mov
clc
xor
mov
dec
xor
sarl
add
mov
inc
add
cmpsl
xlat
jne
push
dec
jge
aam
clc
mov
jmp
cli
aaa
sbb
push
test
cmp
push
insl
or
pop
pop
lods
jbe
sub
lods
jnp
loopne
cld
pop
andl
or
mov
push
popf
mov
lock
pusha
sub
dec
loope
scas
pop
movsb
popa
add
sbb
and
inc
and
add
jb
int
or
out
adc
scas
mov
or
add
xchg
psubd
jmp
bound
int
enter
addb
mov
or
mov
sub
mov
rcrb
repz
dec
shrl
xchg
popf
mov
pop
cli
or
out
or
lods
pop
xchg
cmp
cmp
mov
nop
jns
pop
loopne
and
hlt
cltd
xor
inc
stc
inc
dec
fisttpll
roll
push
in
dec
pop
push
test
mov
test
push
orb
into
loop
lret
xchg
xor
and
loopne
jecxz
add
cmpsb
popa
cs
orl
and
pop
inc
dec
xor
lahf
push
hlt
sarl
mull
xchg
cmpl
cwtl
lock
test
add
cltd
dec
mov
es
dec
imulb
scas
pop
cld
aad
jb
xor
jnp
and
lock
mov
ss
add
loope
ret
sub
sahf
movsl
push
dec
xchg
dec
shl
inc
mov
xchg
mov
add
cmp
test
imul
pop
jns
ja
shlb
xor
dec
xor
mov
adc
push
add
push
roll
mov
pop
inc
dec
sti
lods
stc
aam
and
xor
add
les
pop
jg
jo
mov
xchg
loopne
push
sbb
fdivrp
fmull
jbe
jns
gs
loope
movsl
mov
rcl
sub
call
mov
sbb
adc
outsb
rorb
pop
cmc
cli
cmp
pop
dec
inc
or
mov
adc
decl
pop
fdivrs
sub
dec
fst
mov
mov
shr
dec
or
mov
push
fisttpl
jp
scas
pusha
push
mov
out
mov
adc
outsl
adc
pop
xchg
cli
jae
mov
xchg
mov
or
stos
call
lods
jbe
es
mov
jae
sahf
jo
in
and
lea
mov
outsb
rorl
or
shll
data16
or
repnz
fnsave
xchg
push
mov
lds
out
jns
push
push
inc
adc
lock
lock
int
sub
cld
out
dec
mov
mov
sub
xor
int3
or
test
ss
fwait
iret
xchg
sub
sti
and
lret
pop
arpl
mov
inc
stos
xchg
sub
in
out
faddl
xchg
xchg
pop
ret
mov
sbb
jl
unpckhps
or
mov
add
jp
mov
mov
inc
clc
pop
in
xchg
stc
outsb
inc
lret
icebp
add
sub
iret
js
adc
lock
bound
adc
movsb
out
mov
fldl
pop
xor
movsl
mov
leave
sbbl
xlat
es
and
rcrl
or
arpl
mov
mov
aaa
in
ja
pop
ss
and
sbb
decb
loopne
fidivs
lods
push
loopne
roll
cs
adc
mov
in
push
push
loop
subl
inc
jbe
sub
cmpsb
sbb
dec
cmc
dec
mov
popf
pop
das
push
in
inc
int3
mov
hlt
and
sub
inc
in
sbb
outsl
in
jmp
ja
ljmp
out
adc
lahf
inc
cld
push
popf
pop
add
add
push
push
xchg
mov
add
ljmp
push
adc
push
push
xor
jnp
mov
inc
mov
stos
insb
bound
and
push
iret
mov
push
daa
lods
push
and
test
xchg
adc
inc
xchg
and
cwtl
mov
inc
test
scas
jo
scas
or
sbb
and
stc
fwait
and
loop
imul
mov
dec
leave
inc
adc
test
test
push
cmp
add
sbb
shll
mov
insb
imul
mov
les
add
int
scas
mov
pushf
push
add
sub
das
xor
imul
dec
cmpsl
notl
pop
sbb
sub
jo
pop
decb
negb
jmp
repnz
lods
mov
aas
pop
mov
gs
inc
mov
xor
xchg
add
ljmp
jns
iret
or
xchg
mov
jg
dec
dec
push
xor
mov
movsb
cwtl
push
movsl
mov
ss
out
scas
iret
xchg
adc
push
cmp
int3
adc
xchg
pop
mov
into
push
or
add
loop
out
lds
xchg
sahf
cltd
mov
ljmp
sbb
jp
rcrb
lret
add
mov
jle
jb
and
and
pushf
aas
bound
addr16
fs
add
fldcw
popa
outsl
jmp
add
pop
fcompl
mov
into
pop
or
cwtl
aaa
pop
fsubr
test
incl
push
sbb
sbb
or
in
sahf
push
xchg
rcrl
mov
push
mov
dec
pop
mov
push
and
outsl
adcl
fsubr
sub
jg
js
pop
cmp
mov
test
out
push
push
loope
sbb
fsts
fwait
xchg
scas
filds
push
jae
push
jge
out
mov
sbb
dec
adc
mov
pop
add
xchg
mov
sahf
mov
sub
xor
pop
sub
sbb
mov
insl
adc
sbb
adc
jmp
lret
sub
mov
clc
jle
dec
or
sbb
insl
lea
scas
iret
xchg
dec
push
outsb
aam
jmp
repnz
mov
sub
aad
xor
ljmp
ja
dec
hlt
pop
clc
shl
test
push
push
add
jnp
xor
push
cmc
aaa
and
sub
fisubs
dec
mov
dec
insb
and
sbb
mov
dec
xchg
rorb
cmp
jbe
mov
or
aam
ja
iret
cmpsl
ret
push
jecxz
int
mov
movsl
xchg
jecxz
fwait
ret
xchg
outsb
jl
and
inc
adcl
cmc
jae
dec
mov
popf
ljmp
insb
int
add
mov
jg
xchg
out
jge
cmp
out
cmpsb
in
icebp
jns
in
mov
fldenv
xchg
lret
push
pop
sbb
add
dec
mov
xchg
or
insb
cmp
mov
stos
cmp
or
inc
xchg
mov
cmpsl
mov
inc
in
shlb
sub
cs
dec
pop
lret
test
test
sub
sbb
jnp
rcl
out
or
jno
out
rorb
imulb
push
inc
adc
lret
ljmp
pop
jno
cmp
inc
ficoms
lar
sub
rorb
js
popf
lds
lds
add
loopne
push
jnp
fwait
or
adc
mov
in
sbb
sub
ss
ficoml
in
shll
mov
dec
add
or
adc
push
scas
test
pusha
adc
or
adc
cmpsl
adc
cltd
mov
xchg
mov
fldl
ja
or
ljmp
inc
mov
stos
jmp
es
add
or
mov
push
xchg
cltd
ljmp
push
lret
fisttpll
or
rcrl
aam
fistpl
xlat
cmpsb
push
repz
pop
int3
mov
jmp
mov
cld
xor
leave
repz
dec
xchg
or
inc
push
sarl
test
sub
decb
push
add
jno
or
push
sahf
movsl
js
cld
jae
iret
push
mov
jge
in
fs
mov
add
cmp
sarl
xchg
call
and
jge
mov
pushf
jne
xchg
pop
cmp
jne
loop
push
sbb
push
push
mov
out
pop
jbe
pop
mov
adc
lods
sbbb
lods
cli
jnp
push
mov
cmp
cmp
add
sbb
clc
add
jp
imul
hlt
jecxz
push
stos
cmp
mov
cmp
data16
mov
pusha
sub
ljmp
dec
xchg
jno
inc
pop
mov
dec
jmp
punpcklwd
mov
and
xor
jg
lds
adc
inc
cmp
pop
xchg
fwait
rcr
add
pop
jbe
sub
adc
js
sub
mov
hlt
sub
out
fucomip
mov
pop
inc
sbb
adc
jmp
push
jns
cmp
pop
pop
xchg
dec
mov
cmp
dec
mov
inc
out
jp
pop
scas
inc
outsl
fisubrs
pop
xorl
cmpsb
mov
push
rorb
movsb
mov
dec
xor
and
jg
cmp
jecxz
push
xchg
fwait
and
sub
mov
rcrw
fcompl
fdivrp
js
dec
rorl
mov
out
call
mov
cmp
xor
sbb
push
out
mov
push
push
orl
mov
fcomps
mov
mov
stos
pop
dec
loopne
push
xchg
lcall
dec
clc
sahf
lea
pop
dec
call
sbb
fcmovb
ret
arpl
fmuls
inc
nop
push
xor
and
push
mov
scas
xchg
jl
mov
sub
cmp
sbb
ret
dec
out
xchg
mov
arpl
mov
incl
sbb
adc
pop
bound
cmp
jnp
push
sbb
repz
das
add
dec
scas
popa
lret
cli
sub
repnz
jmp
insb
adc
push
test
dec
mov
dec
sti
dec
add
dec
in
test
adc
and
fs
xor
xchg
mov
ret
movsb
pop
cmp
pop
lcall
leave
scas
or
dec
jae
jp
ljmp
or
mov
rdmsr
hlt
sahf
xchg
pop
jmp
sub
sbb
fimull
mov
pop
add
inc
xchg
adc
addr16
hlt
outsb
jns
push
fwait
cmp
cld
iret
xor
xchg
lods
mov
sbb
jecxz
sub
das
sub
inc
aaa
and
sbb
sti
fimull
rolb
inc
mov
xor
cmp
lock
cmp
jo
stc
dec
mov
lods
mov
cwtl
xlat
push
addl
dec
lock
push
movsb
cld
cltd
lock
icebp
js
lahf
rclb
sbb
xchg
add
int3
roll
cmp
xor
cli
rorl
and
inc
int
fcmovnbe
cld
ss
sbb
adc
popf
pop
and
js
movsb
andl
shll
and
mov
xor
sahf
sbb
pop
sbb
jmp
inc
xchg
push
test
and
into
dec
and
or
test
loop
jmp
cmp
and
xor
pop
xchg
test
inc
clc
sbb
div
dec
iret
pop
orl
adc
movsl
mov
dec
stos
sub
clc
inc
lods
sub
cli
arpl
sar
inc
push
lea
sbb
xor
hlt
fbstp
pusha
insb
ret
insl
in
xor
and
ret
fwait
mov
xor
ret
bound
int3
in
adc
shll
push
lds
adc
in
hlt
and
movsb
push
mov
test
test
movsl
inc
mov
lds
adc
in
hlt
and
movsb
push
mov
test
test
movsl
inc
mov
lds
adc
in
hlt
and
movsb
push
mov
test
test
movsl
inc
mov
lds
adc
in
pop
pop
xor
dec
lcall
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jo
pusha
es
push
inc
push
test
dec
or
or
cmpsb
rclb
mov
jo
pusha
es
push
inc
push
xor
data16
inc
loopne
loopne
rclb
nop
out
xchg
add
ss
dec
push
pop
push
sub
data16
inc
jmp
repnz
mov
movsb
xlat
sbb
vmwrite
ss
arpl
movl
ret
cwtl
add
fidivs
cmpsb
sub
stc
sbb
and
jne
leave
pop
sub
ds
xorl
outsb
pushf
xor
loope
push
sti
movsb
mov
push
shrb
push
dec
jnp
negl
sub
movsl
cltd
fisubl
ja
out
flds
mov
in
aas
dec
pushf
mov
dec
and
in
xchg
mov
jae
inc
lock
es
shrl
inc
dec
out
sbb
nop
dec
cwtl
mov
mov
jmp
and
cmpsb
movnti
lods
xchg
and
ss
push
push
inc
push
daa
jbe
data16
inc
jmp
xchg
flds
mov
subb
jg
outsl
inc
sbb
pop
sbb
push
lock
mov
lds
pop
add
push
xor
and
adc
push
inc
mov
test
shl
sub
out
in
adc
jle
arpl
and
push
add
mov
cmpsb
rclb
mov
jo
pusha
es
push
inc
push
xor
data16
inc
lock
cmpsb
rclb
mov
jo
dec
outsl
out
movsb
xor
mov
lds
cmp
fldl
add
out
mov
outsl
divb
xor
mov
daa
xor
rolb
ljmp
xacquire
popf
pop
js,pn
imul
cmpl
std
sub
dec
mov
outsl
pop
mov
xchg
sbb
out
pop
pop
push
lods
fildll
mov
jg
in
xor
add
fwait
jecxz
cld
sbb
aaa
push
jecxz
out
insl
xchg
dec
test
daa
push
enter
adc
into
daa
fsubs
fwait
mov
sbb
mov
mov
or
xlat
subb
testb
stc
mov
jecxz
ds
cwtl
scas
cmpsl
shrl
pop
fiadds
adc
sub
fwait
push
push
pop
sub
push
sahf
push
lahf
lods
pusha
dec
out
test
stc
into
pop
xor
lock
pop
sbb
xchg
mov
jnp
test
jmp
das
mov
cmp
in
addb
jecxz
add
mul
sub
jnp
out
xor
test
fsubrs
dec
ret
cmp
cmp
dec
dec
fisttps
mov
test
mov
and
or
ret
and
xchg
mov
sub
xchg
sub
in
jbe
jo
sti
mov
subb
dec
fmull
call
pop
dec
xor
dec
dec
test
pusha
jo
dec
dec
xchg
mov
inc
cmpsb
sub
fldenv
pop
lahf
adc
test
adc
xor
jns
jl
and
lcall
pop
or
add
mov
imul
mov
lret
aaa
ja
sbb
repz
mov
mov
shrl
arpl
xchg
repz
inc
add
addr16
lahf
fstps
pop
mov
stc
push
push
cmp
inc
arpl
mov
dec
hlt
mov
ds
sub
std
aaa
movsl
cltd
shrl
insl
mov
sbb
call
inc
push
dec
iret
pop
in
xorl
decb
or
ret
mov
mov
add
inc
xor
mov
subb
imul
mov
or
rolb
mov
addl
std
or
scas
mov
mov
imul
push
inc
adc
popa
clc
test
sbb
sbb
sbb
lods
rol
xchg
mov
xor
loop
push
pop
test
cltd
cmc
add
test
imul
mov
lods
sub
hlt
jns
lods
dec
pushf
xchg
mov
test
jno
into
das
jp
inc
test
push
jo
insb
xchg
daa
add
jb
jl
dec
ss
ret
push
rcll
enter
sub
cs
enter
int
in
ret
dec
roll
js
push
gs
lcall
mov
iret
adc
inc
adc
inc
fdivs
mov
imul
adc
cmp
lods
movl
leave
in
inc
in
test
pop
movsl
inc
fistpll
fs
vfmadd213pd
or
pop
pop
dec
xchg
cwtl
sbb
rolb
push
push
pusha
rcll
sbb
mov
dec
fidivrl
sub
es
inc
jmp
mov
mov
aam
push
xchg
or
push
clc
and
xchg
repnz
cmp
sbb
fsubs
movsl
test
lock
jo
fld
cmp
les
loopne
sbb
out
cmc
sbb
lds
jmp
xor
fcmovnb
and
cmp
fsubs
pop
lret
fwait
xlat
inc
cmp
sbbl
test
push
mov
add
dec
daa
inc
push
lcall
or
mov
cmpsb
cmc
xor
mov
dec
mov
xchg
inc
xor
stos
or
jmp
and
daa
jp
test
add
push
cmovns
clc
ja
xchg
mov
in
pop
lcall
js
les
repz
in
fstps
jb
push
repz
adcb
std
out
js
jb
inc
dec
and
or
inc
sbb
jle
test
jg
popf
add
nop
loopne
and
leave
ja
pop
je
xorl
loopne
mov
loop
nop
in
fbstp
roll
xchg
imul
sbb
loop
lea
aas
in
mov
subb
jo
movsb
mov
lods
push
sar
loop
cmpsl
in
inc
mov
lea
fadds
inc
xor
test
cmp
mov
or
add
sbb
out
in
add
xor
ror
jmp
enter
nop
sub
or
leave
popf
cmp
hlt
or
mov
stos
inc
jno
iret
imul
mov
arpl
bound
ljmp
jmp
pop
cmp
xor
mov
jne
add
pop
sub
out
ds
adc
xor
imul
insl
les
mov
arpl
fdivrs
add
shr
movsb
xor
pop
add
fsubp
and
iret
bound
dec
cmpsb
scas
aas
testb
xor
mov
or
pushf
mov
mov
add
std
dec
stos
push
fdivrl
xor
aaa
sbb
shr
sub
inc
cmp
xchg
sub
inc
jmp
mov
sub
repnz
fildl
lret
xchg
dec
stos
in
je
fcomps
loopne
xchg
loopne
or
xchg
stc
imul
sbb
shlb
lcall
jl
cmovne
shl
xor
xor
mov
aam
push
lea
add
lahf
popf
shll
in
cmp
idivb
cmpsb
cmpsb
add
dec
inc
adc
sti
fcmovne
jb
adc
sti
mov
bound
shlb
pusha
sti
sub
push
insb
aas
sahf
cs
pop
rclb
outsb
or
lock
popl
and
ret
inc
add
cmpsb
jne
xor
xchg
adc
push
mov
jg
cmp
jae
pop
out
or
scas
jmpw
mov
hlt
outsl
sbb
les
push
mov
mov
das
test
inc
push
inc
pop
and
or
jnp
dec
cmp
into
in
enter
ret
and
and
sbbb
test
sbb
and
xor
and
adc
fisubrs
add
loope
fisttpll
mov
fucom
push
les
jle
push
or
test
sbb
lods
mov
and
leave
jns
inc
pop
or
cli
xchg
test
enter
out
cmpsl
insb
and
and
lods
pop
data16
lock
pop
jno
mov
or
mov
lods
mov
push
adc
shlb
out
repz
sbb
sahf
mov
mov
sbb
sub
mov
or
aaa
inc
inc
dec
cmp
mov
inc
cmpsb
mov
js
adc
repnz
mov
pop
test
test
arpl
dec
add
sbb
std
dec
dec
lds
jb
js
cmpb
incb
fnstcw
sti
xor
xchg
das
mov
hlt
sbbl
into
cmpsl
dec
inc
pop
dec
cli
imul
inc
cmp
pop
stos
jg
popf
ljmp
cmp
loop
popf
cltd
sub
fs
and
cltd
pushf
loop
pusha
cmp
cmp
inc
ljmp
cmp
mov
mov
lock
jle
cmc
shlb
out
imul
adc
insb
ds
pop
and
pop
sbbb
fwait
push
je
repz
das
jp
add
lea
add
es
push
xlat
cmpsl
sbb
leave
jge
cmpsl
js
lea
mov
leave
and
xor
sbb
imul
xchg
sbb
dec
xor
cmp
je
xchg
lcall
nop
push
aam
cmp
fldl
pop
js
rcll
push
xchg
test
xchg
mov
mov
add
inc
xor
mov
je
lock
dec
shrb
es
sub
inc
xchg
sbb
out
cwtl
loopne
pusha
in
lock
push
daa
fisubrs
jno
fs
mov
loop
pop
push
outsb
xchg
mov
xorb
or
mov
or
jmp
subl
rcrb
cmc
xchg
dec
stos
sahf
pusha
add
outsl
or
fstps
into
or
xor
pop
in
cmp
inc
daa
xchg
xchg
or
cmpsb
ret
mov
cmpsl
xor
jo
jno
sbb
rolb
inc
sar
dec
notb
popf
jo
adc
dec
ret
inc
cmpb
out
and
rclb
int3
pop
mov
jbe
cmp
push
pop
aam
aam
ljmp
mov
pop
mov
mov
adc
fdivs
rorb
aas
in
imul
icebp
push
sub
addl
cmp
addb
subb
pop
xlat
fidivs
sbb
add
adc
mov
jae
sbb
pop
shll
in
mov
out
mov
imul
mov
fisttps
cmp
push
adc
pop
mov
mov
test
in
cmc
rcr
loop
shll
in
inc
repz
repz
inc
sbb
sub
push
rcrl
jg
hlt
cmp
push
sbb
pop
aad
push
ret
and
aas
ja
sti
pushf
das
dec
push
push
add
jp
push
leave
jge
mov
push
pop
jecxz
test
aaa
sbb
pop
fsubp
les
ror
fcoml
adc
push
dec
ja
cwtl
fimull
mov
fwait
jo
pop
pop
inc
popa
cmp
roll
push
jp
and
addl
pop
fistps
sbb
push
jecxz
call
ret
adc
and
pop
dec
sarb
mov
sarb
les
lret
divb
sahf
mov
cli
fwait
jmp
xchg
rorl
dec
jne
add
mov
sbb
xor
dec
mov
add
inc
pop
dec
dec
into
jbe
jns
outsb
xchg
adc
mov
jae
cmp
xor
jge
test
ja
inc
mov
les
pushf
push
dec
xchg
and
pop
push
mov
push
ja
lods
sub
lahf
jnp
push
in
popa
popa
fwait
add
je
cs
pop
pusha
rcl
leave
cmp
arpl
mov
pop
add
mov
mov
add
adc
jmp
mov
and
int3
les
out
fwait
add
xchg
les
in
fidivs
movnti
test
or
inc
cmp
in
dec
and
cld
pop
sbb
jns
inc
bnd
pshufw
add
sbb
pop
adc
inc
insb
stos
or
popf
sub
mov
cmp
jl
pop
pop
sti
add
xchg
out
lret
sbb
adc
addr16
inc
sbb
out
inc
cmpsb
in
movl
pop
pop
mov
mov
int
cmp
fsincos
into
mov
fmuls
jg
jnp
or
cmp
addr16
jmp
leave
test
push
lret
dec
repz
lret
and
cmpl
xchg
aaa
pusha
shll
sbb
xchg
das
sbb
xchg
addr16
ret
xchg
xchg
xchg
mov
das
mov
inc
xchg
test
sti
andb
adc
mov
cld
mov
out
dec
jne
pop
or
mov
loopne
scas
xchg
push
rolb
call
insl
sbb
lcall
ja
dec
rolb
push
test
popa
jnp
aam
inc
mov
push
enter
sarl
pop
add
dec
mov
orl
rcll
repz
getsec
or
push
outsl
adc
jae
repnz
and
sub
and
mov
adc
test
pop
addr16
jbe
addl
or
or
xlat
jno
push
pop
and
cmpsb
sahf
insl
inc
popf
push
mov
insb
mov
popa
xchg
xchg
hlt
jle
sbb
jle
jecxz
test
xor
mov
sbb
add
ds
mov
or
mov
in
jge
test
outsl
adc
dec
lds
adc
inc
shl
fwait
pop
dec
push
rclb
push
mov
imulb
leave
loopne
mov
sub
mov
jo
idivl
add
jns
pop
xchg
pop
lock
js
push
ds
mov
push
std
test
mov
xor
or
std
repnz
mov
ja
sub
pop
outsb
adc
out
pop
xchg
sbb
jns
and
adc
mov
add
xor
and
in
out
pop
and
test
xchg
xchg
addr16
inc
ret
mov
inc
clc
insl
cld
push
dec
jnp
xorb
sbb
shll
add
aam
mov
cmp
and
neg
xchg
testl
sbb
subb
insb
sub
push
ja
or
dec
fdivrl
sti
nop
pcmpeqd
jne
push
cmp
cs
ljmp
sbb
xor
mov
imul
mov
mov
lds
inc
nop
movsl
fcmove
inc
dec
mov
repz
xchg
aad
rclb
test
aam
jp
pop
push
xchg
aam
inc
je
cmpsb
mov
pop
dec
push
add
cld
out
ljmp
cwtl
or
fwait
jl
mov
pop
cmp
pop
mov
cmpsl
rcrb
and
fldt
push
out
push
sahf
inc
fwait
xor
dec
out
lret
cmp
sarb
imul
pushf
addr16
dec
xchg
sub
and
sbb
cmp
ja
lcall
jbe
add
and
sub
add
aas
push
or
lods
mov
sti
mov
push
pushf
or
pop
lret
dec
mov
std
iret
mov
leave
dec
repz
nop
cmpsb
int
pop
pop
push
scas
push
push
addr16
xor
hlt
fildll
sub
dec
add
outsb
dec
jae
fsubs
and
cmp
movsb
mov
push
sahf
jecxz
jbe
int
insb
test
nop
sbb
push
add
dec
push
mov
jl
add
pop
subb
or
cmp
jp
add
fs
incl
inc
xchg
inc
je
push
idivl
sbb
cmp
push
xor
pushf
lahf
mov
shll
loopne
je
jmp
xlat
fimull
mov
inc
dec
cli
jecxz
cmpsl
int
inc
pop
fisttpl
iret
das
ds
push
ss
xor
sbb
daa
or
and
aas
mov
push
xchg
aaa
test
add
dec
cmp
ffree
lahf
jno
cmp
orl
not
or
cmp
in
aas
lahf
jmp
pop
lcall
clc
nop
roll
or
fbstp
test
mov
popl
mov
push
sahf
sbb
xchg
gs
pop
dec
inc
cmpb
in
ficoms
add
leave
xchg
lret
sti
int3
push
outsb
cld
inc
mov
cmp
rcl
and
in
stos
stos
mov
stc
cwtl
popf
sbb
or
in
push
ljmp
xor
or
mov
adc
in
inc
loop
cmp
sub
rorl
repnz
rclb
pushf
jmp
xchg
jecxz
xchg
or
and
push
lahf
aam
push
je
or
inc
sbb
sarb
mov
movsb
pop
jmp
adc
adc
jl
fisttpll
sub
pop
ficoms
into
cmp
mov
out
adc
inc
stos
leave
in
hlt
or
subl
jne
pop
rcrl
sbb
movsl
xor
dec
adc
aad
inc
sbb
or
pop
stos
pop
push
inc
ret
sub
jns
xchg
cli
lock
ds
adc
sbb
lcall
into
fwait
inc
pushf
pop
sub
and
sbb
pop
imul
cmp
movsb
dec
ret
test
sbb
es
cmp
sbb
shll
je
out
mov
int
push
mov
sahf
mov
ja
outsl
xchg
add
adc
inc
lods
xchg
xchg
scas
gs
les
orb
jmp
lds
cwtl
xchg
xor
push
fscale
subl
xchg
orl
xchg
lds
fwait
cmp
jmp
push
sti
arpl
cltd
sbb
test
add
cmc
mov
stos
push
out
jae
clc
sub
mov
jnp
sti
cli
ljmp
cmc
stos
jno
jmp
aaa
inc
fs
sbb
sbb
jns
pop
and
xor
push
pop
mov
jle
popf
xchg
gs
pop
test
nop
arpl
std
push
or
jns
scas
imul
and
and
outsl
pushf
jle
sar
jmp
push
dec
cld
lods
mov
jge
lods
push
sbb
loopne
jae
sbb
and
outsl
ret
dec
test
sbb
mov
fsubl
mov
imul
pop
fldl
xlat
stc
and
pop
imul
repnz
push
add
inc
jae
lret
mov
shl
ljmp
push
cld
jp
xor
ret
sub
dec
or
sbb
es
sbb
mov
movsl
lahf
vaddsubps
push
lcall
int3
cmp
add
sti
jbe
sbb
xorb
pop
adc
shlb
push
adc
mov
cmp
jge
test
dec
fisubs
sbb
cmp
out
xor
jle
fisttpll
ss
sub
xchg
inc
aad
aad
pop
mov
inc
jg
data16
fistpll
mov
xor
je
daa
stc
adc
leave
jecxz
std
xor
adc
bound
and
jge
mov
daa
sub
loop
inc
mov
insb
push
dec
push
push
xlat
or
jae
lcall
in
fsubp
nop
push
cwtl
subl
out
or
jb
pop
and
clc
jl
mov
pop
adc
test
enter
xor
jmp
incl
insb
push
or
ret
mov
xchg
shrl
flds
adc
jb
sysexit
cld
sub
rcrl
inc
pushf
out
enter
or
aaa
int3
mov
rcl
push
adc
pop
jno
lods
fiadds
mov
lahf
mov
jg
cmp
cmp
jb
ljmp
mov
rclb
xor
out
int3
add
pop
sub
push
xchg
movsl
iret
jbe
aaa
dec
push
add
or
push
aaa
mov
aad
xchg
cld
addl
sub
or
imul
lahf
iret
dec
adc
pop
fwait
aad
cs
cmp
stc
inc
pusha
fildl
cli
xlat
fs
aaa
push
mov
in
cmpsb
xlat
rol
gs
mov
push
xor
stc
push
pop
loop
cmp
xor
xor
pusha
inc
js
lods
das
jo
das
sbb
ljmp
pushf
cmp
mov
imul
xchg
mov
dec
cmp
sub
call
sub
insb
bound
adc
xchg
adcb
addr16
lods
fs
add
sbb
mov
lea
iret
push
dec
or
roll
jg
adc
add
rorl
add
mov
add
cmp
cmp
jae
push
xchg
cltd
pop
scas
sub
pop
mov
lahf
shrb
mov
nop
sbb
ret
pop
pop
adcl
lea
sub
xchg
and
cmpsl
lret
inc
sbb
fiaddl
jg
std
and
or
mov
mov
jp
dec
push
xor
fsubrl
jmp
mov
fsubr
jno
pop
xor
cs
pop
ja
fidivrs
adc
lods
mov
out
das
mov
sbb
jns
flds
pop
mov
cmp
cmp
xor
sub
pop
mov
loope
in
mov
push
mov
and
int3
aad
cmc
xchg
sbb
dec
and
add
test
les
mov
mov
xor
ja
push
test
sub
sub
jp
push
mov
jg
dec
insl
int3
test
pop
push
cmp
jmp
imul
insb
lcall
enter
imul
icebp
mov
mov
scas
adc
pop
aam
xchg
cwtl
fnsave
es
push
inc
push
xor
data16
inc
lock
cmpsb
rclb
mov
jo
pusha
es
push
inc
push
xor
data16
inc
lock
cmpsb
rclb
mov
jo
pusha
cmpsb
push
xchg
inc
push
xor
out
push
add
ss
rclb
mov
jo
bound
push
push
inc
push
xor
xchg
push
addb
pop
or
xchg
shl
jle
sbb
jg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
sbb
or
dec
sbb
jp
fs
inc
dec
push
lcall
adc
and
xor
sub
jbe
or
jp
push
pop
mov
stos
jno
popa
mov
outsb
ljmp
push
fcom
mov
repz
dec
test
repnz
add
push
xchg
xor
mov
jle
push
cmpb
jmp
mov
ljmp
dec
rcrb
ljmp
fiadds
pop
or
add
and
aam
sti
sbb
mov
sub
in
int3
stos
aam
in
mov
ljmp
and
add
push
out
test
dec
dec
mov
push
je
add
leave
lret
aam
cmp
mov
je
movsl
loop
shrl
sub
cmpsb
iret
jno
push
ljmp
add
lret
test
adcl
loope
dec
mov
cmp
sahf
jle
ja
mov
mov
sarl
or
sahf
adcl
xor
xchg
in
jno
cmp
and
pop
push
xchg
pop
shrl
jb
adc
enter
pop
stc
adc
adc
test
pusha
scas
push
ja
dec
nop
push
out
cpuid
scas
iret
pop
fstp
and
pop
lcall
pop
mov
mov
xchg
inc
xchg
jnp
pop
xchg
sub
push
pop
mov
stos
push
lcall
adc
and
xor
shrl
sbb
or
jp
push
pop
mov
stos
push
lcall
adc
and
xor
rorl
sbb
cli
roll
mov
add
mov
xchg
in
call
arpl
aam
adc
adc
pushf
pop
dec
je
daa
dec
scas
cli
cmp
fcos
sbb
sbb
arpl
insl
mov
inc
mov
insb
lds
pop
xor
cld
adc
movsl
push
and
pop
jg
mov
xor
lahf
int
fildl
and
or
movsb
push
adc
repz
mov
cltd
mov
add
xor
inc
mov
add
jne
lods
mov
das
lcall
js
mov
jge
pop
pop
sbb
into
imul
xor
pop
aam
xor
mov
mov
cmp
scas
sub
aam
dec
cmp
test
lods
or
xor
sahf
std
cs
add
xlat
in
outsl
cs
ror
mov
mov
xchg
leave
xchg
mov
xlat
and
dec
dec
pop
mull
clc
test
cmc
cltd
mov
sbb
and
pop
mov
add
std
fldcw
aam
loopne
pop
dec
mov
jae
dec
mov
or
hlt
fidivs
sahf
pop
iret
movsl
adc
push
and
jl
cs
mov
addr16
push
xorb
push
fs
xor
dec
sbb
mov
fucomip
sub
out
jl
sub
dec
lods
sub
jmp
sti
insb
cmc
fsubl
push
data16
dec
mov
int
and
out
adc
neg
addr16
stc
add
xchg
imull
fdivs
inc
push
icebp
sub
add
jge
enter
iret
xlat
xor
fsubrs
or
xor
out
mov
inc
fisubrl
pop
outsb
insb
enter
in
dec
sbb
mov
loopne
mov
in
mov
scas
xor
pop
mov
inc
out
psrld
xlat
mov
pop
scas
jmp
jp
pop
divl
inc
sub
or
xchg
jae
mov
mov
in
xchg
xor
outsb
cli
pop
outsl
or
dec
sbb
mov
js
notb
pop
fdivp
jbe
popf
mov
popf
movsl
push
stc
mov
or
inc
jbe
or
adc
cwtl
sbb
add
popf
sbb
inc
fistpll
dec
and
sub
sub
mov
fucomi
movl
insl
inc
inc
js
jle
pushf
imul
xchg
movsb
cmpsl
notl
push
push
adc
sub
lea
fcomip
gs
mov
cmpb
mov
adc
pop
mov
adc
insl
popf
sbb
mov
xchg
fimull
jne
xchg
mov
ja
or
movsl
xchg
test
inc
dec
pop
xchg
insl
repz
inc
push
cmp
dec
mov
xchg
pop
jmp
ds
scas
add
imull
outsl
mov
cmpsb
test
sub
cld
gs
subl
pop
dec
cmp
lock
mov
and
sti
mov
loope
outsl
and
jbe
sbb
sub
jmp
ss
lcall
sub
or
sub
or
leave
lcall
dec
dec
sbb
int
mov
dec
dec
sbb
mov
or
icebp
fcomps
xlat
into
pop
leave
lea
xorl
in
xchg
sbb
mov
fildl
jae
cmc
daa
push
ret
in
push
iret
adc
lock
cltd
mov
jo
xlat
push
dec
or
mov
jmp
inc
adc
stos
mov
and
xchg
jo
and
pop
mov
cmpsl
lret
adc
push
lcall
clc
or
subl
fnstsw
push
jge
push
ret
mov
and
push
jge
movb
lahf
stc
into
dec
mov
mov
cmp
fldcw
cld
aas
cmp
call
clc
sub
dec
pop
and
mov
cmc
cmp
movb
cld
mov
mov
dec
jp
loopne
out
fldenv
out
pop
test
add
pop
mov
inc
pop
inc
std
ss
leave
pop
push
bound
jmp
stc
std
daa
movsb
adc
and
fiadds
hlt
iret
adc
iret
mov
inc
sub
std
enter
jle
push
mov
aaa
rcr
pushf
in
ljmp
xchg
inc
into
mov
addr16
inc
addr16
aad
xchg
shll
mov
jb
dec
jno
cmpsl
inc
test
call
popf
and
mov
and
scas
lds
push
sub
dec
xchg
pop
inc
ja
pop
push
jo
adc
mov
cmp
xchg
icebp
jne
hlt
push
mov
xor
scas
inc
inc
fs
and
xor
sub
sub
xor
push
pop
mov
push
sub
mov
in
mov
ja
inc
sub
adc
cld
out
mov
leave
xchg
test
pop
sbb
inc
push
cmp
jb
fmuls
dec
jbe
scas
xor
nop
insb
jbe
sbb
or
les
out
cli
sti
sub
lcall
lahf
adc
sbb
mov
ret
orb
jp
frstor
xchg
fdivr
mov
mov
aam
pop
xor
mov
cmp
sbb
inc
and
xchg
das
or
push
cmpsb
mov
and
test
push
rclb
cli
xchg
mov
or
shrl
js
sbb
mov
and
adc
pop
adc
mov
cmp
aad
shlb
mov
mov
mov
adc
and
ja
jp
jne
and
lret
inc
mov
mov
mov
sub
sbb
add
fidivs
fstl
roll
shrb
push
repnz
dec
push
jmp
or
outsb
sub
sub
pop
arpl
mov
cmc
fidivs
cmpsl
push
stos
push
movsl
mov
and
test
and
and
or
xor
stc
rclb
xchg
cmp
pusha
ud1
mov
inc
fbld
adc
pusha
cmpsb
xchg
test
jno
xchg
xor
ds
sbb
mov
call
jb
mov
clc
xchg
mov
add
shll
sbb
fidivrs
nop
sahf
nopl
cmp
xchg
adc
pop
sbb
inc
cmp
jl
mov
or
stos
dec
shlb
ret
pop
push
push
dec
or
in
pop
cltd
in
mov
pop
pop
add
sub
insl
dec
fs
inc
xchg
sbb
call
xchg
mov
xor
fsubr
shrb
adc
fs
mov
icebp
mov
test
sahf
stc
sub
vpsubd
and
lods
pcmpgtd
js
or
cmc
push
popf
pop
imul
je
or
cmp
mov
fmulp
clc
or
out
jp
inc
sbb
frstor
lods
lcall
sub
rcl
fwait
test
subb
mov
pop
cli
jne
dec
cmpsl
sub
jnp
mov
mov
hlt
pop
pop
jnp
pop
adc
hlt
xor
mov
add
mov
int
daa
jb
rclb
pop
cmp
jecxz
and
sub
mov
pop
xchg
bound
xor
add
or
and
jno
cli
cld
out
in
aas
adc
popf
test
cli
shll
mov
clc
add
psubq
cli
push
inc
stos
aaa
cltd
mov
push
ss
or
popa
mov
mov
in
mov
fisttpll
sub
dec
mov
sahf
and
and
fidivrs
ja
je
in
mov
lods
aad
xlat
outsl
mov
mov
mov
dec
in
nop
lcall
insl
and
cld
adc
xor
sbb
test
dec
mov
int3
mov
dec
cmpsb
pushf
xor
imul
test
cmp
xor
lea
mov
cmp
cmp
jl
loop
aas
int
stos
loop
xchg
mov
sub
negb
mov
movntq
out
inc
in
mov
mov
test
popf
adc
pop
nop
adcl
movsb
or
push
popf
mov
jmp
aam
inc
push
or
sbb
int
mov
mov
div
sbb
ret
sbb
jge
pushf
mov
mov
push
arpl
leave
stc
addr16
cmc
pop
jecxz
mov
xchg
pop
fisttpll
and
mov
ret
pusha
aaa
inc
repz
jbe
loop
cmpsb
mov
push
mov
mov
dec
pop
dec
fwait
push
fisttpll
jecxz
jmp
mov
push
mov
mov
pusha
into
idivb
test
or
movsl
xlat
lds
mov
aam
sbb
es
xchg
adc
jmp
or
and
and
fucomp
jo
push
mov
sahf
add
jmp
insb
jl
arpl
fsqrt
fdiv
iret
mov
rcl
popa
fildll
dec
xorl
jnp
push
xchg
jp
cmc
repz
cli
or
repz
data16
imul
ljmp
mov
dec
add
je
cs
mov
pop
pop
lock
insl
sub
ret
adc
xchg
mov
lcall
jne
mov
pop
hlt
sahf
fwait
es
fcoml
xor
dec
cmp
std
ljmp
pushf
mov
or
out
sarl
mov
pop
cs
fldt
push
or
lock
add
cld
in
xor
push
sbb
sbbl
shll
lock
lds
lods
enter
mov
test
in
mov
movsl
aad
xchg
loope
stos
icebp
push
and
sbb
bound
test
or
inc
lock
mov
add
adc
leave
fimull
add
fsts
xor
mov
push
pop
mov
dec
sub
xchg
pop
pop
ss
push
pusha
ficoms
xchg
dec
sbb
sbb
test
bound
pop
xor
xchg
lcall
mov
sahf
adc
and
cli
bound
or
adc
stos
out
outsl
insl
setns
imul
lret
sbb
std
insl
pop
mov
add
mov
icebp
loop
mov
jnp
cmc
inc
cmp
stc
adc
fldt
sbb
jl
mov
mov
cmpsb
lds
cwtl
out
pop
sbb
mov
xor
test
icebp
push
je
cmp
jge
stc
shrb
sub
pop
stos
jmp
jae
jns
addr16
repnz
sti
loop
fdivrl
cltd
daa
movsl
data16
ljmp
cwtl
lods
xchg
test
sub
mov
add
push
xorb
adc
jbe
dec
into
or
test
insl
shlb
iret
call
and
outsb
push
mov
mov
daa
inc
sarl
aas
push
loopne
mov
test
jo
xchg
push
cmp
addr16
aam
ss
fcomps
mov
fidivrl
mov
shlb
in
or
adc
or
lods
pusha
jmp
mov
call
lcall
add
jle
test
aam
sub
mov
xlat
add
insb
or
shrb
icebp
sub
cmc
xor
rcll
jnp
out
aam
popf
mov
ret
xchg
jmp
movb
cli
sub
pop
mov
popl
test
icebp
pop
cwtl
sub
dec
subl
mov
push
xor
je
stos
lods
xchg
sbb
dec
cmp
pop
sbb
xchg
in
inc
fstpt
and
jnp
leave
cmp
push
outsb
push
dec
mov
cmp
jnp
adc
push
jo
inc
cltd
clc
or
sti
fstp
imul
push
mov
popa
dec
aam
mov
jne
inc
xor
mov
les
ja
jb
mov
jne
aaa
add
popf
push
sub
lahf
pushf
pop
or
rcrl
dec
sar
add
xchg
sahf
out
fidivs
and
test
dec
cmp
iret
sub
inc
add
mov
mov
mov
into
and
push
xchg
push
ja
inc
loopne
push
insl
inc
jne
xchg
outsl
lock
mov
inc
out
push
mov
push
data16
out
in
push
sub
ljmp
pop
jne
lea
scas
int3
dec
in
out
cmp
pop
sti
push
lds
lcall
mov
imul
sti
push
bound
mov
or
fldcw
test
add
ss
push
jecxz
mov
pop
test
and
das
sub
mov
sbb
jo
and
push
cltd
mov
les
mov
iret
cmp
pop
imul
pop
aas
pop
mov
mov
push
sub
sub
and
pop
into
stos
nop
push
test
xchg
rolb
pop
movsl
sub
mov
adc
in
xchg
lahf
mov
mov
jmp
adc
or
mov
pop
test
add
add
add
inc
dec
cli
pop
pop
std
cmp
in
add
mov
mov
mov
xchg
scas
mov
out
sbb
es
xor
dec
mov
fisubl
pop
jo
ret
sub
inc
inc
jmp
pushf
test
adcb
out
cmp
in
fwait
scas
add
fs
shlb
std
stc
mov
mov
mov
stos
xchg
mov
mov
cli
es
mov
pop
ret
adc
cli
mov
and
adc
arpl
movsb
std
pop
inc
fsubrs
dec
mov
movsb
movsb
sub
adc
rorb
add
repnz
or
pop
clc
mul
or
aad
dec
sbb
arpl
ret
fs
dec
pop
mov
les
inc
aas
loop
pop
mov
dec
in
sub
mov
cmp
xchg
sub
int3
lock
sub
push
pop
fmuls
adc
test
inc
push
pop
mov
std
xor
xrelease
pusha
in
loop
xlat
fnstenv
gs
and
push
je
div
jb
adc
insb
push
enter
lods
inc
cmp
orl
dec
or
stc
jle
sub
and
ds
das
push
adc
xor
gs
shl
daa
mov
mov
adc
lods
out
loope
ret
mov
sarb
fwait
cmpsl
in
test
add
sub
mov
cwtl
sbb
pusha
lods
popf
idivl
sarl
push
cld
insb
fs
into
inc
jmp
mov
push
pop
outsb
push
mov
jbe
stos
jno
lods
out
cld
jne
push
pop
sbb
insb
jns
mov
mov
test
or
mov
dec
add
mov
fxtract
out
clc
outsb
call
inc
test
into
jno
out
mov
or
filds
sbb
pmaxsw
pushf
in
cld
leave
out
scas
je
addb
popf
in
mov
inc
movl
fstl
pop
push
and
movsl
test
sub
imul
mov
cli
or
mov
push
adc
test
pop
jmp
inc
dec
leave
pop
inc
rorl
xchg
xchg
addr16
xlat
dec
in
insl
jne
push
aas
icebp
cmpsb
mov
cmpsl
mov
mov
mov
fdivl
mov
or
or
mov
adc
out
in
sbb
aas
jno
sub
dec
push
and
pop
fimuls
arpl
and
iret
sbbl
add
jecxz
xor
sub
into
divl
loop
xchg
mov
jo
xlat
sbb
nop
aad
push
and
std
push
pop
add
mov
lods
xchg
test
xchg
mov
popf
push
push
pop
sbb
push
jmp
add
in
lret
inc
adc
test
sbb
popa
aaa
loope
pop
inc
sbb
incl
popf
cs
adc
jg
pop
negl
add
jg
inc
imul
jp
dec
aas
sub
pop
mov
push
mov
sbb
jecxz
mov
xlat
shlb
mov
loope
imul
push
sbb
loope
or
xchg
adc
jns
bound
push
cmp
sbb
rorb
jbe
sbb
movsl
pop
ret
imul
mov
and
jp
cld
ja
lret
ds
sarl
mov
lock
push
inc
jnp
ficoml
dec
and
movsl
daa
rcl
fistl
push
mov
mov
and
jle
mov
sub
add
sbb
inc
fisttpll
push
inc
jecxz
or
inc
das
mov
mov
push
cmc
cs
adcb
repnz
adc
adcl
pop
inc
repz
jg
das
test
outsl
xchg
test
sub
inc
push
aaa
jge
jbe
cmp
push
sbb
and
outsb
addb
mov
mov
mov
je
adc
sub
pop
cmpsb
jg
outsb
jo
jp
shl
adc
sar
xchg
stos
push
sub
inc
pushf
or
inc
popa
and
inc
or
add
lret
xlat
bound
cmpsb
aam
ret
mov
roll
mov
push
addr16
and
add
lret
xor
jae
in
xor
push
dec
mov
push
lock
ret
push
xchg
push
mov
xchg
and
sub
enter
sub
push
js
xor
daa
push
cwtl
and
pop
outsl
outsl
sub
in
ja
fdivl
push
sahf
mov
add
pop
daa
jg
adc
into
sbb
mov
loope
mov
or
test
insb
jle
or
jno
subl
push
insl
pushl
xchg
inc
pop
push
sub
xchg
dec
xor
arpl
ret
pop
pushf
push
push
adc
sub
mov
fnstenv
pop
les
mov
decl
test
mov
cmp
push
inc
push
movsl
into
xor
mov
jle
cmp
sbb
add
shrl
pop
clc
mov
outsb
call
cwtl
stos
fisubl
sbb
fsubrs
sub
mov
pop
cmc
fadd
lret
mov
popa
sbb
mov
push
push
imul
mov
sbb
mov
clc
movsl
shlb
mov
into
in
add
ds
ljmp
sbb
sbb
int3
in
pop
rcrb
fwait
mov
lock
xchg
mov
aaa
or
and
jno
add
inc
loopne
xor
pop
xchg
xor
call
ret
fsubr
pop
testb
sbb
fdivrl
cwtl
test
xchg
clc
and
fistl
and
ja
sahf
cld
movsl
mov
mov
push
int3
jp
or
repnz
jo
out
xchg
out
pop
cs
mov
dec
add
jae
jno
popa
clc
sub
adc
dec
lea
push
sahf
push
inc
lahf
push
cltd
int3
mov
int3
scas
rclb
mov
cwtl
mov
jae
test
add
mov
inc
sbb
xor
mov
mov
in
adc
out
inc
es
cmpsl
xchg
dec
out
inc
pop
movsb
es
inc
cmpsl
cmp
xchg
clc
fildl
addr16
out
mov
mov
mov
test
xor
push
mov
or
cmpl
push
faddp
mov
lea
jle
add
popf
mov
stos
sub
jne
popf
cld
imul
fbld
cli
insl
movsl
adc
dec
out
push
loop
sbb
repnz
cli
pop
fisubs
shl
cmp
and
sbb
cmpsl
dec
adc
insl
inc
xchg
lret
or
dec
test
push
lret
dec
cld
fsub
lcall
jmp
out
je
cmp
cmpl
xor
int3
dec
jbe
insb
pop
mov
push
xchg
test
sbb
cmp
lahf
fstpl
outsb
imul
or
lods
pop
icebp
test
js
pop
ja
sub
sbb
lret
and
insb
mov
xlat
lahf
divb
push
sbbl
push
decb
jmp
lret
inc
mov
mov
cwtl
sub
cld
push
stos
popa
sbb
insb
mov
in
jg
mov
lods
call
xchg
rolb
ffreep
mov
fistl
adc
xchg
loop
jmp
vcmpsd
mov
mov
push
inc
psubsw
push
in
xchg
outsl
jae
cli
fnstsw
in
insb
lods
sub
pop
push
mov
leave
ja
xor
mov
jbe
lcall
fwait
jnp
call
repz
xchg
rcrb
sub
aaa
lock
addr16
cmpsb
int3
pop
lret
dec
sub
repnz
sbb
pop
or
push
sbb
xor
add
inc
add
aam
jnp
fisubl
add
aam
int3
jle
bound
jl
sbb
jecxz
and
pop
lea
icebp
jp
push
pop
mov
stos
push
lcall
adc
and
xor
shrl
sbb
or
jp
push
pop
mov
stos
push
lcall
adc
and
xor
rcrl
jp
or
ljmp
mov
cltd
stos
push
push
mov
add
adc
add
xor
shll
loope
lock
jp
pop
and
mov
mov
mov
lea
xor
popf
mov
cmpsl
mov
cltd
test
std
pop
cmp
sbb
cmp
sub
ja
addr16
lea
mov
imul
out
pop
add
sbb
xchg
aas
inc
pop
ja
addr16
xchg
xchg
aam
out
pop
or
daa
dec
push
add
sub
pop
or
enter
mov
lret
ficompl
add
pop
adc
enter
out
adc
arpl
lea
jmp
pop
in
sub
sbb
ljmp
ret
inc
add
popf
ljmp
sahf
shl
pop
inc
mov
jl
mov
sbb
pop
call
cmp
fstl
out
lock
int
cltd
out
lcall
mov
jno
fdiv
xchg
push
insl
push
push
pop
leave
mov
mov
loop
aad
test
mov
clc
push
js
je
sub
adc
in
out
inc
divl
rorb
ret
lret
outsl
out
pop
lcall
xlat
int
in
out
pop
or
daa
and
push
inc
inc
ja
addr16
repz
fmulp
into
fcom
iret
mov
xchg
and
sbb
push
sub
adc
and
repnz
hlt
rcr
lret
rcl
int
xchg
cltd
mov
jb
push
js
dec
daa
aas
push
cmp
adc
repnz
clc
fwait
inc
in
out
pop
or
daa
cmp
ja
addr16
lea
mov
imul
out
pop
or
daa
cmp
ja
addr16
lea
mov
sbb
adc
pusha
xchg
ss
xor
ss
cmpsl
and
loop
loopne
mov
movsb
pop
jnp
and
or
push
stc
sub
mov
jge
ss
sub
ret
mov
notl
dec
sub
xchg
movsl
dec
and
sarl
sahf
incl
add
add
mov
ret
shll
mov
pop
in
mov
mov
mov
sub
popf
insl
lret
adc
addr16
jle
lret
mov
insb
stos
into
dec
mov
cs
jns
push
scas
outsb
shrl
sahf
cmp
xor
fs
sbb
lcall
daa
mov
push
lahf
mov
or
pop
repnz
sbb
jb
in
dec
aam
pop
sti
jno
adc
push
adc
enter
add
xor
xchg
jbe
adc
jl
in
adc
imul
sahf
aad
sbb
lds
iret
push
pop
lods
adc
out
xchg
sbb
sbb
callw
cmpsb
or
fadd
add
adc
dec
cmpsb
adc
fwait
sbb
pop
jge
mov
leave
sbb
xchg
xchg
push
jmp
inc
pusha
xor
out
inc
dec
xchg
sub
sub
lods
push
pop
enter
pop
inc
inc
mov
dec
dec
test
mov
bound
scas
xchg
aas
push
pop
jmp
pop
cmp
fildll
xchg
sbb
xchg
sbb
add
testb
jecxz
test
or
inc
adc
mov
jno
das
jo
push
jge
sti
daa
leave
push
cltd
jmp
pop
movsb
push
xchg
cmp
push
fisubrs
loop
mov
mov
mov
pusha
neg
push
aad
gs
mov
mov
call
lahf
inc
mov
call
jg
xor
mov
jnp
xchg
jp
sbb
push
jbe
xchg
xchg
mov
mov
ret
push
out
cmp
fisttps
nop
cltd
or
lret
daa
push
testl
out
jns
movsb
add
test
xchg
cmp
in
cmp
rep
dec
pusha
enterw
cmp
call
sub
insl
mov
out
insb
fwait
aaa
push
shll
cmp
jo
add
and
repnz
daa
fsts
mov
dec
pushf
popa
fisubs
or
xor
sub
addr16
sub
cmpsb
shll
push
and
addr16
dec
out
dec
pop
lea
ss
or
push
aaa
and
mov
lock
jecxz
sub
sbb
push
lods
sahf
es
cld
out
or
push
roll
mov
xor
mov
pop
or
inc
inc
dec
sub
insl
fldl
sti
shl
inc
cmp
aaa
dec
inc
mov
sub
lds
cli
jecxz
adc
mov
sub
lret
shrd
and
lcall
notb
stos
xchg
leave
xor
jno
lea
cmp
push
push
das
mov
aas
fmull
jle
mov
adc
push
rorl
cwtl
icebp
lret
xor
ja
mov
adc
movsb
push
inc
jg
sub
ja
das
mov
push
enter
jp
js
mov
xchg
pop
pop
lret
aas
test
jg
lock
pop
mov
loopne
inc
sbb
or
mov
fst
je
fstpl
adc
mov
cs
test
mov
pop
add
jle
mov
cmp
or
mov
mov
scas
jbe
mov
sub
movl
popf
mov
add
test
xchg
pop
jne
inc
cs
sub
sbb
popf
inc
pop
stc
sbb
popa
cmp
idivb
pop
andl
andl
add
push
push
sub
mov
orl
sbbl
jnp
js
fwait
stos
push
lcall
mov
dec
repz
push
xchg
call
popa
cmp
mov
jp
arpl
pushf
jae
pop
adc
jmp
rclb
jge
ss
ret
inc
rclb
or
mov
lea
rcrl
dec
or
int
jmp
idivl
pop
js
xor
xchg
dec
push
pop
xchg
inc
push
xchg
in
test
imul
nop
loopne
cmpsb
pop
int
jl
pop
es
jl
xchg
call
mov
cmp
cmp
push
inc
push
jnp
outsb
mov
sub
psllq
push
iret
push
ret
lods
inc
loope
dec
fidivrl
negb
xchg
aas
into
movsb
add
jl
adc
aam
sbb
hlt
ss
inc
and
ret
mov
sbb
adc
and
add
cmp
dec
mov
adc
pop
mov
adc
loopne
xor
loop
mov
clc
or
push
push
enter
mov
addr16
lcall
and
add
test
fcompl
bound
cmpsb
adc
sub
jne
stos
sub
out
or
popa
pop
cltd
sub
adcb
pushf
ds
cmc
xor
jge
sub
cmp
mov
jns
stc
inc
inc
ret
cmp
lret
push
adc
mov
pop
cmc
and
lods
pop
dec
fdivrs
pusha
test
cld
push
pmulhuw
jmp
add
aam
and
nop
ss
adc
adc
or
lods
xchg
cmp
inc
aam
les
sbb
test
mov
sbb
sbb
or
push
xor
imul
mov
push
and
sub
jmp
stos
call
scas
add
pop
or
stos
movsl
inc
adc
test
fdivrp
inc
shrb
je
ret
push
and
sbb
push
and
jge
clc
scas
leave
or
adc
xchg
cltd
xchg
push
mov
xor
mov
mov
fisubl
cmp
mov
negl
pusha
pop
ja
xchg
jmp
push
popf
movsb
mov
aam
sbb
xchg
shl
sbb
fisttps
bound
pop
inc
inc
or
push
cmc
pop
jo
hlt
inc
int3
ret
pop
cltd
loop
push
cltd
rorb
sbb
cmc
mov
or
test
stos
lea
dec
jecxz
jae
lahf
bound
xchg
lds
jae
js
lods
cld
xchg
and
push
in
gs
mov
mov
aas
int3
lods
rcll
pushf
lock
jbe
adc
orl
push
or
das
sbb
mov
stc
mov
mov
loope
inc
lcall
mov
dec
cmp
mov
push
jle
jge
js
ds
add
into
jmp
jecxz
add
pop
dec
cmp
adc
jge
pop
cmp
mov
add
repnz
mov
jae
adc
cmp
sti
dec
pop
aaa
push
repz
notb
push
fwait
sarb
movsl
adc
ret
lock
or
hlt
jnp
outsb
dec
popa
xchg
fs
lcall
cmc
dec
clc
repz
add
scas
and
cltd
insb
test
test
and
imul
sub
push
jns
mov
add
rcl
xchg
int
mov
jo
andl
scas
cltd
ja
shrl
sbb
js
fyl2xp1
cmp
test
aad
jge
sbb
mov
js
loop
jns
mov
fs
sarl
mov
daa
lahf
int3
xor
pop
push
movsl
pop
call
shrl
out
pusha
pop
inc
in
jp
lahf
leave
cli
dec
push
dec
pop
shrb
jge
jg
fs
push
xchg
pop
push
dec
pop
int3
xchg
push
push
jp
enter
push
bound
fsubs
loope
and
xchg
in
repnz
insb
jg
aam
xchg
mov
aad
or
pop
sub
nop
and
mov
rcrl
adcb
icebp
push
daa
pushf
adc
popf
xchg
push
cmp
movsb
sbb
push
sbb
ljmp
mov
inc
sub
inc
sarl
cli
adc
into
pop
xchg
loop
inc
xor
mov
and
mov
lods
inc
in
push
mov
adc
out
or
dec
dec
and
xor
scas
mov
ret
lods
mov
imul
movb
mov
insl
pop
ret
fistpll
or
inc
pop
mov
gs
popa
mov
mov
cmp
test
mov
jmp
sub
dec
push
mov
push
pop
in
xchg
out
addr16
loop
sbb
stos
repnz
xchg
mov
mov
adc
ret
or
jmp
xchg
dec
stos
jns
jo
mov
into
std
xchg
add
leave
es
clc
test
in
push
push
stos
in
add
cmp
faddl
mov
sbb
mov
lret
mov
add
stc
fcomip
je
cmp
outsl
cmp
hlt
aaa
and
mov
ss
out
stc
xchg
std
pop
rcrb
fldt
xor
dec
call
lods
push
sbb
mov
lret
shl
add
mov
aam
xchg
aad
lea
dec
popf
adc
mov
push
test
adc
push
jmp
sti
mov
mov
nop
flds
repz
hlt
cmp
lea
sub
mov
dec
std
xchg
push
and
xor
fcmovnu
clc
add
adc
ret
sub
inc
lods
decl
and
stos
pop
push
push
mov
cmpsl
in
in
xor
test
inc
push
inc
mov
pop
sub
fcoms
rcrl
cld
sbb
lds
adc
sub
push
fcompl
nop
enter
repz
jl
inc
insl
push
adcb
xchg
mov
xchg
mov
aaa
pop
dec
xor
dec
or
xchg
sub
xor
rcll
xor
lea
dec
lret
pop
adc
sti
pop
fwait
in
gs
xchg
daa
jl
ret
push
mov
sbb
cmp
in
mov
jae
insb
enter
pop
ljmp
in
loopne
sti
inc
std
sbb
inc
out
enter
jbe
mov
fmul
cmp
addr16
jnp
sub
adc
out
pop
and
les
nop
addb
push
lcall
pop
push
mov
mov
lods
scas
sub
cmp
das
add
fiadds
mov
inc
add
dec
popf
dec
cmpsb
shl
nop
jecxz
dec
cmp
mov
adc
pop
adcl
jo
icebp
ljmp
mov
sub
insl
cltd
sub
jecxz
ljmp
push
cmp
inc
mov
call
mov
out
shl
cmp
push
sbb
nop
arpl
dec
sub
mov
cmp
daa
and
mov
mov
jg
cltd
mov
cmp
rcll
xchg
mov
push
sahf
xor
cli
xchg
rorl
mov
xor
sub
mov
mov
inc
pop
shrb
mov
push
inc
push
adc
mov
aas
push
mov
jae
xchg
iret
enter
pop
mov
mov
sbb
pusha
pop
mov
sub
ffreep
mov
push
insb
cmpsl
addr16
fsubrl
faddl
daa
iret
test
int3
cltd
ret
pop
popa
fisubrs
popf
rcr
enter
pop
in
dec
jl
push
cltd
aas
jne
pop
mov
sbb
aad
mov
data16
enter
in
xor
and
adc
mov
xor
xchg
mov
arpl
roll
push
mov
clc
fdivs
fdivs
test
push
rorb
stos
idivl
sbb
popa
leave
xor
pop
sti
sar
or
xchg
pop
push
mov
inc
movl
subl
xlat
loope
and
fwait
sbb
popf
jge
add
pop
inc
push
xor
adc
mov
roll
dec
adc
aaa
stos
xchg
ror
mov
mov
xlat
xor
sbb
or
sbb
fcomp
xor
xor
push
pusha
shlb
cltd
add
pop
pop
enter
gs
out
out
add
or
mov
jmp
or
scas
dec
orl
test
mov
sbb
jo
push
mov
jb
cmp
mov
fdivl
or
sub
les
pop
jnp
popa
int3
mov
add
add
stos
ret
cmp
fistps
fcmovu
jns
fmull
subb
jbe
sub
pop
mov
cmpsl
mov
je
push
inc
cmp
mov
xor
and
push
jns
push
stc
in
andl
sub
push
ja
lea
pop
gs
pushf
addr16
dec
idivl
repz
enter
dec
into
dec
out
sbb
add
jae
gs
call
push
je
mov
dec
int3
add
add
push
push
lock
dec
dec
cmpsl
pop
sarb
inc
mov
das
orb
and
popl
push
sbb
out
or
dec
or
daa
pop
mov
pop
pop
inc
jg
sbb
loop
out
fisttps
cmc
push
hlt
cmp
mov
ja
xchg
pop
jg
xor
sbb
sub
lret
cmc
xlat
inc
mov
add
les
call
scas
push
cmp
movsb
aaa
and
xlat
push
add
repnz
ret
loop
cmp
lcall
faddl
imul
xchg
add
adc
or
sub
pop
jns,pt
mov
add
sahf
orl
xor
xchg
loopne
xchg
xchg
lods
loope
lds
jmp
scas
addr16
pminub
fiaddl
pop
xchg
je
mov
mov
pop
add
mov
cmp
or
outsb
inc
xor
mov
xchg
push
jnp
dec
adc
test
add
loopne
dec
and
insl
aam
inc
dec
mov
adc
jmp
pop
push
and
dec
mov
scas
add
dec
pusha
jno
fdivrl
popf
shl
call
jo
pop
jmp
jp
call
cmpsb
adc
sub
iret
lods
call
cmp
jo
cmpsb
lret
adc
leave
js
lcall
inc
xchg
nop
jp
sub
xor
xor
cmc
leave
xor
mov
dec
dec
push
mov
pushf
cmp
sub
aas
xor
push
or
push
pop
cmc
std
inc
xchg
movsl
stos
mov
pop
push
enter
fadd
sub
mov
out
stos
dec
mov
sbbl
sub
je
jmp
jmp
sbb
pop
push
cltd
jl
lea
lds
aaa
mov
mov
inc
lret
jb
insb
bound
iret
fwait
adc
cwtl
nop
aas
dec
and
loopne
inc
mov
mov
leave
in
or
push
xchg
xor
test
mov
mov
add
fs
test
unpcklps
int
sbb
xchg
scas
push
jo
mov
push
jno
sbb
cwtl
shlb
pop
into
fbstp
out
mov
cli
sub
and
xchg
sahf
sbb
mov
pop
aaa
mul
test
add
fldenv
dec
or
add
fstpt
dec
int
mov
mov
cmpsb
pop
inc
repz
stc
ror
and
shll
xchg
and
or
or
xor
push
stos
cwtl
out
pop
fdivrs
sub
xor
cmpsb
and
out
push
divl
push
imul
cld
pusha
clc
push
push
and
dec
xor
inc
mov
dec
mulb
jle
mov
pushf
jl
xchg
fs
test
inc
in
and
or
divl
insb
js
mov
ret
lahf
mov
sub
jbe
fdivrl
add
insl
and
popf
outsb
data16
insb
lds
in
xor
xchg
xor
inc
sub
stc
call
sub
adc
idivb
std
mov
or
inc
fcomps
inc
cmp
into
dec
inc
sub
fucomp
ret
ljmp
adc
sarb
inc
call
lret
or
pop
adc
int3
jg
gs
cs
fldenv
pushf
aaa
lahf
test
adc
add
or
movsb
out
into
addb
adc
inc
jns
out
aas
aaa
arpl
fadds
fistpl
jb
cmp
sub
enter
or
fisttps
jg
jmp
lret
ret
repnz
jcxz
mov
push
mov
jo
aad
enter
and
mov
int
mov
outsb
jnp
or
lret
lods
enter
idivb
dec
pop
cli
xchg
ret
mov
in
scas
mov
sbb
les
dec
or
fisubrs
adc
push
and
shl
in
movq
insb
addr16
pop
ss
sbb
xchg
lods
inc
cmp
and
icebp
paddusw
rcll
pop
in
out
mov
test
ss
dec
dec
mov
pop
xchg
mov
lret
lcall
test
mov
push
out
sbb
add
cmp
mov
sub
jno
testb
mov
adc
data16
sub
cmpsb
test
lea
mov
xchg
scas
mov
test
add
mov
cmp
xchg
dec
push
cmp
repnz
jno
lcall
and
or
pop
shrb
pop
adcl
lret
pop
sahf
pop
mov
push
rolb
fwait
adc
out
repz
lcall
xchg
pop
inc
insb
push
test
mov
xor
test
loop
rcr
mov
cltd
xchg
ficoml
adc
dec
push
cmp
jge
loope
jg
into
sub
int3
call
xchg
jmp
aam
stc
fucomp
mov
push
xchg
mov
mov
xor
jo
push
jg
jge
or
lahf
mov
in
mov
add
js
jmp
adc
sar
lret
je
xchg
inc
rolb
fdivp
jae
rcrl
or
jnp
mov
lods
aas
mov
add
loop
mov
in
in
jge
add
dec
js
sahf
mov
xchg
inc
xor
std
insl
jle
add
jns
out
sbb
cmp
cmp
clc
or
insb
inc
stos
and
push
jno
dec
hlt
and
test
and
loop
out
xchg
sub
movsb
xchg
jae
sub
mov
inc
test
cmp
cli
int3
dec
jmp
or
sbb
sbb
movsl
mov
mov
arpl
push
inc
jns
xchg
mov
add
dec
outsb
mov
lds
ss
add
loop
cmp
mov
in
push
pop
lock
sub
mov
jno
rorl
or
sub
jns
outsb
insl
sbb
orb
inc
jg
mov
xchg
or
mov
lea
scas
pop
test
inc
sahf
loope
fcmovu
push
rolb
pop
out
jg
mov
and
pop
mov
fwait
out
pmullw
xchg
sub
push
addl
add
hlt
push
lret
cmp
push
xchg
leave
lds
xor
mov
jle
jmp
add
cltd
js
cmp
outsb
cwtl
cmc
jge
cmp
push
imul
mov
dec
jle
enter
jnp
nop
and
lea
or
or
pop
inc
inc
sub
loop
cmp
jb
add
cltd
xchg
popf
and
out
mov
dec
inc
scas
fmul
dec
hlt
in
pop
fwait
int
mov
bound
aam
sbb
xor
xlat
ret
and
imul
push
loopne
mov
jns
mov
inc
ljmp
std
jle
lods
push
push
sbb
ss
cmpsb
ret
loop
lcall
xor
gs
mov
movsl
fidivrs
nop
arpl
add
xchg
cwtl
movsl
add
mov
stc
cs
outsb
loope
les
nop
outsl
pop
test
lock
sahf
add
mov
leave
insl
xchg
in
das
gs
out
xchg
aad
jnp
mov
roll
mov
imul
popf
pusha
jecxz
cmpsl
rcr
movb
fsubrl
scas
inc
add
dec
push
or
enter
je
mov
cmp
into
push
push
push
sbb
cmp
xchg
ret
pop
enter
mov
in
imul
jg
mov
imul
or
pop
mov
mov
mov
or
xchg
xchg
pop
mov
mov
stos
jle
add
imul
lods
or
or
aad
ret
sbb
dec
jecxz
push
push
out
and
test
lods
mov
push
repnz
mov
mov
imul
out
pop
or
daa
cmp
ja
addr16
lea
mov
imul
out
pop
or
daa
cmp
ja
addr16
lea
popf
aaa
lods
cmpsl
mov
imul
addr16
pop
or
daa
cmp
inc
pop
ja
addr16
mov
mov
imul
out
pop
or
daa
dec
daa
lds
and
adc
add
jle
dec
das
pop
aas
daa
dec
pop
jg
add
jg
xor
xchg
into
scas
fidivrs
mov
sahf
ljmp
jle
dec
das
pop
aas
cs
ds
push
outsl
push
sbb
lahf
into
scas
fidivrs
mov
sahf
ljmp
jle
dec
das
pop
aas
cs
ds
push
outsl
push
jg
fnstsw
mov
or
testl
and
imul
hlt
fxtract
and
stos
data16
cmp
inc
mov
shl
out
cmc
push
lahf
jae
xor
stos
stc
fistpll
scas
xchg
pop
adc
and
pop
clc
jnp
in
xchg
les
sahf
fisubrs
xor
xor
pop
or
dec
rcrl
push
lahf
push
jae
pusha
das
imul
aas
jbe
adc
loopne
shlb
mov
ds
jg
jo
mov
push
mov
jno
sahf
pop
push
push
xchg
je
mov
aam
in
imulb
fidivl
dec
out
pushf
add
das
pop
aas
cs
ds
push
outsl
push
jg
lahf
into
scas
fidivrs
mov
sahf
mov
or
jle
or
popa
or
xchg
mov
out
lcall
pop
pop
dec
or
sbb
pop
push
pushf
ljmp
pop
stos
fisttpl
mov
stos
or
dec
or
inc
imul
push
outsl
push
jg
lahf
into
scas
fidivrs
mov
sahf
ljmp
jle
dec
das
pop
aas
cs
ds
push
outsl
push
jg
lahf
into
scas
fidivrs
mov
sahf
ljmp
pop
aaa
roll
clc
mov
sbbl
xchg
cmp
jae
cmpsl
imul
sbb
cmp
int
xor
cs
pop
push
sbb
pusha
mov
jno
mov
stos
push
add
outsb
sub
out
xor
sbb
clc
lea
std
pop
xchg
xchg
fimuls
into
cmpsb
push
push
pop
inc
mov
xor
arpl
push
cld
dec
jnp
imul
mov
xchg
mov
or
bound
out
jp
hlt
flds
cmpsb
imul
sub
fidivl
add
push
cmp
movsl
aam
cwtl
lea
jno
repz
je
dec
sbb
pop
scas
pusha
sub
mov
push
test
popf
and
cmpsb
clc
mov
push
fsub
push
int3
addl
xchg
xor
fmulp
jno
call
repz
xor
lds
lcall
adc
and
inc
lods
mov
or
xchg
ja
jnp
aas
ret
jbe
dec
cmpb
ja
inc
mov
fxtract
jo
push
jecxz
push
ja
push
adc
int
fldl
fldcw
jbe
sub
mov
xchg
ja
repnz
es
jbe
dec
test
aam
xor
jo
popf
mov
fbstp
xchg
pop
cmp
push
sbb
xchg
jg
jno
push
mov
push
cltd
push
imul
sub
lret
xchg
xlat
pop
jnp
imul
mov
dec
mov
lcall
std
jle
insl
test
xchg
mov
lret
push
jmp
shll
and
jo
push
call
fadds
inc
aaa
xchg
jecxz
inc
cmpsl
fs
fstps
out
orb
jl
sbb
cmp
cmp
and
mov
add
dec
and
sbb
test
je
int3
jg
insl
mov
cmp
xchg
mov
sbb
negl
mov
mov
rclb
jb
aam
xchg
jb
cmp
mov
and
or
inc
jge
rorl
push
lahf
push
mov
dec
jae
outsl
fstpl
sbb
js
cli
mov
es
es
loopne
in
pushf
push
out
dec
jle
pop
push
pop
mov
imul
or
je
xor
mov
test
push
call
dec
mov
jne
cmpsl
hlt
movsl
pop
mov
rcrl
adc
hlt
add
cmp
pop
inc
or
push
fbld
aas
cmp
jb
popf
jecxz
ret
jmp
jns
xchg
adc
mul
push
mov
lock
pop
inc
pop
out
xor
das
lahf
orb
js
push
pop
in
out
inc
fstpl
push
mov
mov
and
int3
xchg
mov
lret
pop
movsb
or
frstor
push
inc
shrb
bound
mov
popf
xchg
idiv
scas
jle
sbb
inc
dec
lock
add
xchg
in
jge
pushf
pop
sbb
lock
es
adc
xlat
adc
in
rcll
cld
xchg
lahf
andl
iret
cmp
pop
cltd
fidivrs
iret
aas
popf
jp
and
lock
pop
mov
push
fs
jae
sub
or
jo
and
jmp
lret
notb
mov
incb
icebp
sbb
push
and
adc
pop
cli
add
pop
dec
js,pt
inc
mov
fisubl
into
fisubs
xor
psubsw
push
xor
mov
sub
inc
sub
mov
adc
adc
jno
shlb
or
push
sti
addb
sbb
jmp
sbb
cmp
daa
jnp
sbb
mov
nop
cmp
mov
pop
sbb
psubusw
aad
mov
insb
shrl
adc
jmp
mov
xchg
call
mov
push
sbb
sbb
aaa
repz
les
adcb
mov
push
mov
mov
jb
jo
mov
idivb
inc
ret
xlat
sub
dec
stos
add
xor
or
lret
xor
xchg
lea
push
xchg
stos
ss
std
shr
mov
dec
repz
push
aad
jb
icebp
lea
ja
jecxz
test
clc
sarb
enter
jbe
dec
and
lcall
jo
aaa
mov
pop
arpl
int3
sbb
inc
mov
sbb
repz
inc
cmp
std
lock
xor
dec
xchg
popf
adc
jns
icebp
pop
nop
repnz
mov
je
idivb
xchg
fdivl
cwtl
jbe
or
and
and
std
insl
imul
add
sub
in
ss
in
dec
out
xorl
ss
lods
inc
fs
enter
insl
xchg
mov
insb
push
dec
add
pop
ret
sub
xor
sbb
fstl
out
pop
inc
push
mov
adc
ror
test
fwait
lods
xchg
sub
sub
call
test
fstp
insl
jg
xorb
outsb
pop
shrw
and
es
mov
ds
pop
inc
cmp
xor
jmp
inc
iret
xchg
xor
sub
dec
ljmp
mov
bnd
sbb
push
dec
dec
cmp
inc
inc
mov
xor
outsb
pop
jmp
out
lcall
add
dec
inc
cmp
fs
jle
lcall
insb
pop
sbb
xlat
test
lea
add
nop
sbb
or
loop
nop
pop
push
and
mov
cmp
mov
xor
cld
xchg
jae
pop
lds
pop
sbb
ficoml
and
fiaddl
jl
jo
in
or
add
insl
notl
push
lret
jo
fmul
ret
insb
mov
insl
fnstcw
ret
ror
add
or
dec
pop
daa
add
push
and
fidivrl
loopne
jmp
bound
popf
xchg
adcb
xchg
popa
jae
stos
aaa
xchg
stos
out
imul
popf
pusha
pop
clc
mov
clc
add
or
cmp
not
ljmp
ficompl
cmp
outsl
aas
dec
cmpb
dec
mov
and
and
push
lock
fildll
ljmp
ret
push
mov
or
addb
repnz
and
xor
and
into
or
nop
xor
loopne
subb
sub
std
fildl
gs
adc
xchg
xlat
adc
inc
jmp
cmp
adc
jo
inc
sub
and
shrb
or
repz
fwait
ja
imul
test
mov
ffree
in
nop
and
orl
in
incl
xchg
lods
push
mov
inc
jno
cmp
sbb
lea
jp
pop
mov
outsb
in
out
rorb
sar
int3
or
mov
lret
scas
ds
mov
movsb
in
hlt
dec
imul
sarl
lahf
in
sub
mov
clc
push
enter
call
dec
add
fistpll
arpl
sub
xchg
inc
xchg
and
lods
xor
and
aad
inc
aaa
jecxz
std
add
fsubrl
sbb
adc
imul
mov
mov
dec
ret
or
push
jae
das
inc
mov
ds
jmp
xor
ds
or
dec
dec
xor
lea
inc
jo
mov
pop
add
shrl
inc
cwtl
and
je
clc
mov
or
ret
arpl
push
jo
adc
call
mov
xchg
cmpsl
imul
icebp
loopne
aas
adc
in
dec
orl
xchg
xchg
rcll
push
or
lahf
lods
icebp
inc
xchg
sbb
sbb
add
out
mov
sbb
pop
push
adc
add
cmpsl
js
sbb
sbb
dec
test
cltd
cmc
xor
sqrtps
std
push
mov
cmc
popf
add
addb
mov
enter
sub
nop
data16
push
call
sbb
jle
das
inc
or
insb
xor
stos
dec
loopne
jmp
es
fwait
pop
push
xchg
scas
jno
mov
ljmp
rclb
adc
gs
pop
lahf
jne
and
sbbl
mov
inc
clc
sbb
ljmp
add
push
in
pop
push
lock
cli
call
and
adc
popa
sub
adc
out
lahf
icebp
xor
je
sti
sub
push
jb
subl
mov
aam
in
dec
mov
movsb
xchg
lods
int
mov
inc
push
sub
cmp
pop
cmovp
mov
incb
psrld
js
nop
outsl
sub
out
in
add
xchg
movsb
pop
push
mov
dec
jl
mov
adc
and
xor
aam
pop
jns
xor
add
jl
xor
aas
sub
scas
xor
ficoms
xacquire
pop
cmp
in
lock
mov
cmp
pop
ja
add
lcall
adc
push
inc
nop
gs
rcrb
xlat
mov
insl
cmpsb
cmc
and
in
shlb
or
sti
aam
xor
lret
sbb
xlat
ja
and
xchg
xchg
out
pop
mov
pop
xchg
lods
and
aam
jg
daa
xchg
mov
in
cmc
push
or
adc
ss
pop
fsts
lahf
dec
flds
push
pop
nop
xchg
out
arpl
pop
or
ljmp
push
outsb
push
xchg
sbb
push
xor
inc
mov
sbb
ss
cmp
les
mov
push
sub
inc
jo
test
cmp
cs
mov
push
out
push
cmp
mov
lcall
add
into
aad
or
mov
repz
fmull
les
xchg
push
add
sub
pop
add
xchg
lret
ja
dec
add
nop
inc
dec
test
lods
cmp
jbe
and
push
test
call
or
mov
movsb
lea
int3
jns
jecxz
aam
xlat
lods
sbb
push
fcoms
outsl
push
fadds
cmp
std
mov
xor
xchg
and
xchg
push
xor
jmp
lods
lret
out
mov
adc
cmc
mov
and
scas
mov
dec
cmp
adc
sbb
outsb
jne
xor
push
data16
out
shr
das
mov
loope
inc
ret
jecxz
adc
push
or
out
sub
stos
in
sbb
cmc
dec
popf
add
and
jle
fisttpll
jo
dec
cmp
mov
pop
fwait
mov
mov
cmp
sub
inc
pop
out
pop
pop
dec
hlt
cwtl
jb
or
push
inc
push
movsl
and
jl
mov
stos
test
iret
mov
ljmp
or
add
in
sahf
pop
rcrl
mov
arpl
ret
std
mov
sbb
inc
add
and
stos
xor
inc
fs
test
mov
gs
and
jg
jns
out
jmp
sub
cmp
or
adc
daa
rep
xorb
xchg
inc
imul
fsubs
push
mov
push
in
stos
mov
fwait
push
xchg
push
push
clc
xchg
cmp
outsl
iret
xchg
mov
mov
xor
lds
pop
jne,pn
pop
xchg
test
cmp
popf
fs
mov
xchg
pusha
mov
adc
ljmp
xchg
gs
mov
popf
xchg
jb
aad
shrb
lret
xor
shrl
xchg
and
cmpsb
in
mov
cs
mov
push
mov
mov
iret
repnz
out
inc
jg
addr16
sbb
xchg
add
mov
sbb
or
cmpsl
xlat
sub
loop
test
lods
out
sub
pop
lcall
push
daa
ja
fwait
lock
xchg
addr16
clc
sbb
pop
mov
mov
inc
enter
lods
das
cmp
pop
mov
lea
out
mov
icebp
sub
pop
or
xor
movsl
lods
cmp
out
cwtl
or
je
xchg
sub
in
std
or
popf
sarl
sbb
mov
xchg
jns
movsb
in
pop
fsubs
mov
int3
es
mov
in
rcrl
push
cs
inc
ds
cmc
add
mov
sbb
xor
mov
mov
jle
sbb
bound
in
mov
into
cld
or
ret
jmp
mov
std
dec
lret
js
cmpsl
mov
inc
push
clc
data16
pop
insl
test
pop
ds
dec
fistl
push
push
test
popa
mov
mov
mov
dec
xor
shrb
bound
jb
fistpll
imul
leave
xchg
ljmp
fildll
stc
pop
and
adcb
andl
sti
sti
jg
mov
data16
adc
dec
push
xor
wbinvd
adc
fdivl
scas
ja
pushf
jmp
bound
sub
mov
or
fisubrl
xor
pop
leave
data16
mov
xorb
sbb
pmuludq
fs
mov
rcll
push
mov
mov
push
out
out
gs
mov
jp
cwtl
lock
aas
cltd
mov
into
jns
fucomi
pmulhw
dec
inc
jmp
call
and
adc
jno
xchg
das
mov
cli
es
rcrl
daa
xchg
dec
sub
fwait
arpl
xor
imul
mov
icebp
sub
mov
cmp
pop
or
cli
sbb
or
dec
dec
popf
aam
test
add
ljmp
pop
rcrl
dec
or
or
roll
fistl
jg
pop
inc
push
and
addr16
pop
mov
dec
lock
fwait
inc
iret
jge
add
push
rcl
loopne
mov
sbb
cmp
push
sub
cmp
pop
ret
icebp
ja
outsl
stos
jbe
mov
push
dec
fwait
scas
sbb
fisttpl
lret
pop
pushl
or
insb
stc
mov
add
lret
mov
es
fistpl
notl
and
popa
mov
mov
mov
and
xchg
out
add
sub
fistps
jmp
mov
lds
add
xchg
or
mov
sti
cltd
daa
dec
fwait
mov
add
add
pop
push
mov
and
hlt
mov
imul
xlat
and
pop
inc
push
decb
je
fildl
pop
pop
fwait
and
mov
mov
aad
lock
push
sti
aaa
xchg
xchg
addr16
cmp
mov
xlat
cmp
in
push
mov
push
push
insl
push
xchg
enter
sub
or
xchg
pop
cwtl
jle
cmp
cmp
sarb
addl
xor
cmp
xor
pop
jle
jbe
icebp
mov
testb
adc
dec
adc
in
xor
fs
movsb
mov
into
jp
dec
lahf
add
adc
mov
pop
lahf
into
movsb
pushf
out
pop
cmpsb
rolb
dec
in
jne
add
rcll
pop
push
sbb
sbb
xlat
xor
mov
push
roll
int
jo
xchg
push
jecxz
adcl
adc
sub
movsb
int3
and
xor
dec
in
adc
jg
pop
out
mov
leave
and
outsb
mov
jbe
aaa
xor
sbb
scas
call
cmp
push
std
rcr
mov
pop
mov
enter
inc
cmp
jle
adcb
fmulp
into
movsb
scas
inc
pusha
sahf
int
jno
les
or
push
outsl
test
aam
sub
in
sub
fdiv
sub
xor
push
fcmovbe
pop
sbb
andb
or
jbe
aaa
xchg
clc
fnstcw
mov
dec
mov
push
pop
jno
and
push
dec
mov
or
adc
mov
cmp
pop
dec
mov
pop
adc
lods
cld
and
icebp
cmc
push
jl
int3
inc
xchg
aad
mov
dec
cmpsb
mov
push
dec
test
dec
sbb
imul
stos
fwait
enter
pop
dec
cmc
scas
mov
jno
enter
arpl
mov
lret
sbb
mov
and
scas
cmc
and
pop
ja
dec
add
lret
push
test
inc
fnsave
adc
leave
shl
sbb
xlat
or
fwait
scas
scas
mov
jmp
popf
mov
cld
push
and
movsb
sahf
int
mov
repnz
scas
mov
rcrl
call
jle
int
or
and
add
jl
push
cld
jno
jo
xor
orl
cmpsb
push
jmp
lcall
fs
push
sahf
cmpsl
cmp
int
push
daa
mov
mov
mov
sub
inc
cmp
ds
sub
sbb
test
dec
hlt
inc
sbb
dec
sbb
fimull
dec
aad
or
jns
mov
imul
test
xchg
aam
xchg
mov
out
xor
jecxz
lahf
jecxz
in
hlt
mov
out
jl
lahf
sub
lock
mov
pop
int3
jecxz
dec
cmp
cmp
mov
push
push
sub
cmc
adc
dec
sbb
inc
test
xor
loopne
fnsave
popa
repz
out
xchg
out
xlat
jnp
or
out
mov
jnp
popf
and
fbstp
pusha
mov
cld
push
add
nop
bound
lcall
inc
jl
push
xchg
mov
mov
int
mov
jmp
jae
ret
inc
jmp
iret
cmp
or
aaa
addr16
andl
add
subl
lds
xchg
jns
inc
fists
sbb
jg
out
dec
push
subb
mov
sbb
hlt
jecxz
aad
js
mull
add
jnp
and
ds
outsl
xor
data16
jns
loop
or
data16
out
jae
lods
lods
in
outsb
xchg
push
push
lock
repnz
push
mov
sarb
repz
stos
jbe
andl
jg
cmc
and
pop
cmp
lcall
adc
mov
enter
daa
lods
inc
lds
stos
xor
xchg
rcll
mov
mov
arpl
or
mov
outsl
jle
test
sub
mov
lods
jle
cmpsl
shrl
adc
divl
adc
hlt
adc
xor
imul
mov
adc
arpl
rcl
xorl
jne
cwtl
dec
cli
mov
repnz
clc
push
call
dec
out
jno
push
add
sbb
xchg
shll
loope
subb
mov
fsubs
add
mov
sub
clc
pop
mov
cmpsb
mov
in
repnz
add
xchg
cld
push
dec
cmp
xor
hlt
ror
inc
xchg
jmp
sbb
add
cmp
stc
xchg
cmp
sbb
aad
sbb
xchg
pusha
scas
sbb
leave
aaa
mov
jnp
inc
xchg
nop
xlat
loop
push
fdivs
jecxz
outsl
loopne
stos
inc
or
jnp
push
mov
mov
push
aad
mov
sahf
push
repnz
mov
ljmp
shl
dec
lcall
pop
lods
mov
inc
stos
in
repz
enter
loope
and
adc
adc
mov
jne
in
ja
les
mov
xor
lock
loopne
mov
in
mov
fstps
fstl
sbb
push
xor
cmp
pop
push
mov
nop
pusha
cmc
lret
cmp
pop
sub
mov
jecxz
mulb
aaa
jo
dec
mov
icebp
je
push
cltd
pop
cltd
js
shlb
and
insb
fists
xchg
test
sub
or
adc
inc
sbb
sbb
aam
faddl
mov
fxch
sub
test
inc
jmp
cmp
mov
scas
xchg
jno
mov
fcoms
cltd
lods
jp
gs
jbe
add
pop
test
rclb
wrmsr
pop
sar
enter
mov
mov
pushl
les
or
xchg
adc
mov
cmp
xchg
mov
movsb
out
push
jne
push
insb
imul
adc
pop
lods
repz
imul
inc
mov
hlt
outsb
push
pop
dec
push
cmp
les
sub
dec
scas
or
js
xchg
popf
cmpsb
xor
pop
jmp
xchg
aas
or
push
leave
mov
je
dec
popf
icebp
mov
out
cmp
andl
pushf
sti
xor
negb
mov
fs
sub
mov
push
insb
cmp
mov
xchg
xchg
mov
pop
aas
cs
ds
push
outsl
push
jg
lahf
into
scas
fidivrs
mov
sahf
ljmp
jle
dec
das
pop
aas
cs
ds
push
outsl
push
jg
lahf
into
scas
fidivrs
mov
sahf
ljmp
jle
dec
das
pop
aas
cs
aas
pop
push
outsl
push
jg
lahf
into
scas
fistpll
out
sahf
ljmp
jle
dec
das
pop
aas
cs
ds
mov
mov
fs
fmulp
flds
and
data16
xor
mov
rorb
pop
cmp
adc
or
jo
push
cmp
mov
sti
nop
mov
fwait
lock
sarb
or
jnp
or
sbb
lret
mov
sti
mov
fdivrs
or
jne
adc
jb
or
push
push
mov
hlt
stos
sbb
btc
push
pop
mov
lret
mov
pop
mov
or
or
push
and
pop
mov
notb
mul
in
and
sbb
in
lcall
mov
cmp
movsl
or
cmp
jo
jo
mov
mov
mov
dec
cwtl
mov
iret
push
xchg
out
jmp
dec
cmp
xor
ss
and
mov
rclb
and
jnp
pop
or
scas
inc
les
popa
cmpb
ficoml
push
cli
jge
mov
lea
adc
sbb
xchg
mov
sti
mov
fnstcw
sub
jnp
or
sub
xor
lds
xchg
enter
in
lods
fidivrs
add
pop
jg
or
dec
cmp
lahf
lock
out
xchg
inc
stos
movsb
ret
mov
adc
inc
adc
jnp
and
mov
loope
in
mov
rorb
pop
xor
jnp
or
jo
inc
cmp
mov
sti
nop
mov
fwait
lock
sarb
imul
adc
pusha
sbb
inc
cmp
mov
test
xchg
fnstcw
pop
mov
pop
call
sbb
insl
lahf
fs
sub
pop
scas
add
js
push
push
ret
aam
and
mov
jmp
xchg
mov
lock
or
shrb
xchg
lret
js
lds
in
pop
dec
cmc
and
cltd
es
sub
and
icebp
sub
lods
insb
sub
or
mov
dec
and
and
mov
push
scas
test
adc
dec
gs
addr16
call
push
jne
call
jb
push
stc
mov
cld
lds
dec
adc
sbb
cs
mov
fimull
fucom
incl
aad
jecxz
nop
ljmp
lahf
adc
mov
mov
bound
repnz
push
xlat
push
sub
cmc
pop
test
outsb
test
push
lahf
push
push
cmp
sub
enter
ret
lods
dec
sub
movsl
cmp
roll
enter
fwait
ljmp
or
push
pop
pop
adc
mov
imul
lods
imulb
or
sbb
mov
out
cmp
in
lea
sbb
stc
sbb
cmc
ja
xor
push
adc
sbb
xchg
push
ret
lea
ret
imul
mov
cmp
mov
and
xchg
ja
mov
sub
fcos
pusha
sti
mov
les
sbb
pop
pop
mov
xor
dec
icebp
cwtl
sub
orl
lret
xchg
inc
cmc
loope,pn
loope
bound
leave
rcr
push
shl
fildl
jns
sbb
insl
rcrb
sbb
cltd
stc
shrb
jp,pn
ss
rclb
inc
ret
arpl
xor
inc
scas
or
in
xlat
inc
xor
jl
mov
outsb
jmp
cmpsb
and
shl
sub
daa
les
shl
mov
fidivrl
inc
fiaddl
rcrl
pushf
dec
jb
cmp
push
lds
popf
dec
push
mov
pop
and
push
fucomi
add
sbb
and
lret
push
inc
out
orl
xor
mov
xor
stc
sahf
mov
out
std
dec
xchg
pop
arpl
dec
fldl
mov
add
iret
or
lods
imul
andl
lret
mov
es
dec
mov
add
ja
loope
imul
sub
leave
test
scas
mov
shrl
insb
mov
cli
ret
push
push
inc
je
repz
sbb
imul
mov
jp
aas
cld
jb
addl
fs
int
insb
pop
or
out
stc
fmull
adc
aas
mov
and
in
div
sti
and
sbb
add
iret
and
pop
jg
mov
inc
pop
or
or
je
les
sub
movl
mov
adc
xor
adc
or
xchg
in
outsb
leave
idiv
mov
sub
pop
xchg
test
stos
adc
mov
mov
push
cmpb
cld
into
and
test
dec
push
cmp
ret
stos
ds
scas
jns,pn
cltd
jo
fsts
inc
push
loop
cmp
sbb
insl
xchg
out
popf
lahf
add
sub
mov
jno
mov
pop
ret
sub
mov
fisubrs
dec
xchg
fists
out
or
lret
test
out
adcb
lret
shl
dec
fcmove
ret
mov
push
jecxz
faddl
rolb
and
pop
enter
push
test
leave
stos
lahf
push
in
push
aam
add
int
das
jle
and
xchg
stos
mov
nop
xchg
mov
xchg
xchg
imul
dec
adc
mov
out
inc
pop
push
inc
pop
shll
fmull
mov
fnsave
addr16
roll
cmpsl
push
xor
les
jg
adc
pop
push
fisttpl
push
in
jno
and
cmpsb
cmp
test
movsl
sub
mov
push
cmp
dec
push
jb
aaa
pop
subl
jmp
mov
inc
push
sub
mov
cmp
mov
and
arpl
add
inc
ucomisd
cmpsb
dec
int3
dec
stos
jo
jne
dec
aas
adc
jge
inc
add
lahf
stos
lds
in
bound
push
leave
xchg
push
daa
adc
sarb
rolb
lods
jbe
cltd
push
int3
pop
test
sbb
out
mov
mov
xor
xchg
jne
lds
adc
inc
shll
mov
aad
jno
aam
adcl
jmp
adc
xor
js
pop
rorb
fsubrs
mov
repnz
or
pushf
pop
xchg
es
popf
outsb
aad
mov
inc
xor
loope
and
fistpll
rcrl
outsl
fsts
mov
add
mov
jno
cmp
sahf
xchg
clc
shrb
loop
push
dec
fsubs
stc
jmp
stc
rcr
sbb
call
out
mov
sbb
cmp
sbb
mov
dec
lock
test
leave
sbb
or
xchg
cltd
stc
movsb
lret
addl
pop
cmpsb
cwtl
fst
int3
push
mov
nop
xchg
cmp
or
xchg
adc
or
out
out
push
sbb
push
jno
sbb
fcmovnu
sbb
cmp
sti
sbb
imul
aaa
jl
xchg
sbb
insb
imul
popa
lret
pusha
dec
xchg
dec
sti
xor
push
inc
adc
daa
adc
cwtl
aaa
adc
orl
pop
xor
or
lret
sar
in
inc
or
cmp
jge
push
sub
mov
xchg
inc
mov
cmp
lret
ffree
idivb
shlb
call
or
dec
mov
fisubs
mov
mov
ret
and
push
lahf
cmpsb
shl
push
fcoml
ss
xchg
mov
test
into
mov
adc
andl
jp
cmp
pop
pop
popa
fs
dec
es
or
add
mov
xor
rcr
dec
adc
and
pop
inc
negb
mov
push
xor
lds
popf
cwtl
jle
clc
bound
sbbb
cmpsb
call
add
loopne
fldt
and
jae
sbb
cwtl
leave
mov
sbb
pop
xchg
in
cwtl
pop
jnp
mov
fdivs
mov
pop
test
mov
cmpsl
shll
lods
jb
stos
jo
push
mov
out
cmp
or
xor
inc
adcb
divl
jle
push
mov
mov
test
sub
cs
adc
inc
and
dec
jbe
or
subl
mov
sbb
xchg
adc
dec
lret
out
fdivs
jl
xlat
mov
hlt
mov
mov
or
dec
imul
je
mov
sub
sarl
sbb
mov
inc
or
cltd
adc
push
fistps
icebp
pusha
pop
xchg
jno
adc
add
jmp
jp
inc
fs
adc
pop
ret
test
adc
jo
jge
or
pop
push
loope
popa
mov
mov
sbb
push
or
cld
push
inc
inc
movsb
push
outsb
aaa
jp
in
and
adc
pop
dec
sti
add
pop
jb
imul
cs
fistpll
in
pop
stos
call
bound
dec
outsl
out
pop
loop
xchg
adc
xchg
mov
add
insl
inc
pop
jge
nop
pop
push
test
pop
lods
inc
outsl
dec
cmp
or
and
xchg
sbb
mov
mov
das
popf
and
lock
cmp
xor
loopne
cmp
adcl
test
push
fdivs
xchg
mov
sbb
adc
lea
mov
pop
test
xchg
ds
or
pusha
scas
shll
jecxz
sub
cmp
movl
mov
or
dec
out
cld
in
mov
push
pop
fstp
sarl
jo
jp
test
fdivl
das
or
lods
push
roll
daa
dec
adc
and
fwait
mov
cmp
inc
scas
cmp
repz
leave
loop
sbb
inc
cmpsb
sub
mov
sarb
mov
or
in
mov
rcrb
ds
cmp
xor
cli
gs
dec
fstps
dec
fisubrs
inc
out
lods
add
xor
lock
pop
pushf
rol
push
fwait
add
aas
mov
jne
int
fidivl
mov
mov
movb
inc
mov
arpl
scas
cmp
mov
pop
jmp
pop
push
insl
pop
inc
mov
push
pop
or
dec
sbb
push
stc
jmp
pushf
mov
pop
ljmp
fmulp
mov
xchg
jne
daa
aam
dec
push
loopne
push
xor
popf
push
cmp
lret
movsl
pop
ret
mull
stos
mov
ja
loop
dec
mov
fimull
and
mov
push
mov
shl
xchg
call
sbb
push
dec
stos
fildll
cld
repnz
hlt
rol
jae
mov
dec
inc
in
in
mov
rcrb
sbb
mov
mov
push
xlat
sarb
mov
pop
test
mov
cmp
jl
mov
or
sti
pop
push
push
pop
scas
mov
das
out
mov
arpl
mov
cmp
movsb
loop
pop
sbb
jmp
lds
jl
push
stos
adc
dec
push
xor
push
xchg
or
in
mov
out
cmpl
out
mov
out
or
or
cmp
lret
dec
es
jbe
or
sub
in
testl
leave
jne
fldl2t
jb
call
inc
xchg
adc
cmp
mov
dec
mov
mov
lret
fwait
inc
jl
jle
fmul
in
jge
mov
movsl
hlt
sti
scas
cmc
test
jae
cld
cmpsl
cld
lea
mov
ljmp
pop
mov
or
inc
mov
das
imul
bts
stos
inc
or
lods
dec
aas
jne
push
xlat
shr
jno
imull
mov
mov
ljmp
icebp
pop
test
add
cmc
sub
cld
ja
sub
mov
ljmp
repz
or
sti
jmp
and
aam
xor
mov
xchg
mov
adc
jbe
mov
mov
jl
jns
jns
sbb
movsl
nop
sahf
outsl
loopne
sub
mov
leave
xchg
arpl
inc
cmp
cmp
jno
mov
mov
mov
leave
add
kmovb
dec
jecxz
jae
sbbb
repnz
mov
inc
xchg
push
rcrl
stc
or
jmp
test
push
clc
inc
mov
xor
adc
idivl
outsl
or
inc
aam
ret
aas
inc
mov
jp
dec
mov
les
and
xchg
mov
jl
pmulhuw
stos
xchg
add
and
mov
iret
pop
fdiv
lds
mov
pop
add
notb
push
xorb
inc
cltd
mov
mov
pop
push
xchg
sbb
sbb
sub
adc
fstps
and
mov
push
into
jmp
or
push
push
add
and
push
mov
movsb
ret
xchg
add
hlt
fucomi
frstor
nop
push
push
popf
fcmovnu
pop
dec
or
sbb
sbb
scas
mov
dec
dec
aaa
sub
mov
js
mov
and
daa
fsubr
or
inc
fimull
enterw
outsl
push
add
push
or
fwait
or
sub
sbb
mov
and
mov
in
mov
and
lret
cmp
inc
sbb
xchg
pop
lea
jno
cmpsb
dec
pop
jmp
mov
cmpsl
mov
inc
inc
cmpsl
pop
mov
adc
push
test
hlt
xchg
lret
mov
add
sbb
repz
push
mov
and
dec
mov
sti
cmc
pusha
popa
sub
or
xorl
sti
testl
xor
jmp
jg
arpl
rcrl
inc
sub
pmuludq
sbb
aad
or
ret
repz
jge
add
and
jb
scas
ja
dec
inc
mov
cpuid
loopne
loope
imul
adc
push
adc
or
cwtl
fisttps
jecxz
lods
hlt
movsl
add
and
sbb
xor
xchg
lds
dec
jne
dec
cmp
dec
mov
mov
leave
dec
or
addb
mov
test
ret
xchg
and
sbb
mov
pop
js
clc
cs
mov
jbe
movsl
cmpsb
pop
sbb
cmp
fcmovnb
cmp
in
ljmp
cmpps
pop
test
mov
mov
in
dec
fmul
sub
stos
mov
add
bound
cmp
mov
gs
or
add
pop
pop
xchg
lods
inc
jl
dec
mov
adc
sub
adc
js
cmp
fimull
inc
mov
sbb
popa
pop
addr16
pop
in
cmp
cmp
fmul
iret
sbb
xchg
aaa
sub
ret
fcoms
dec
cmp
mov
das
cmp
inc
or
inc
xchg
or
inc
bound
std
jnp
cmc
pop
mov
popa
adc
pop
xchg
xchg
popf
jmp
fcmovnb
adc
mov
mov
rclb
int
call
push
sti
mov
aam
jmp
orl
inc
int3
data16
adc
dec
cli
sti
jne
cmpsl
outsl
mov
les
enter
or
inc
cmp
shrl
sbb
sub
dec
ds
fwait
shrb
cmp
int
out
pop
inc
movsb
pushf
mov
loope
cld
cs
repz
call
pop
fnstsw
dec
pop
jbe
cmp
sub
in
jo
mov
dec
xor
jp
out
lds
jge
fdiv
inc
sbb
and
stc
jno
xchg
sub
push
pop
push
movsb
int
and
and
out
jecxz
cmpsl
cmp
std
addb
lods
out
push
or
loope
out
adc
pop
pop
or
dec
pop
repz
mov
pop
pop
fsubrl
dec
cwtl
jbe
out
pop
pushf
cwtl
into
inc
shll
ja
cmpsb
in
pop
cmp
sbb
adc
outsb
push
pushf
fs
mov
mov
mov
incb
insb
cmp
sti
xchg
sub
dec
inc
out
pop
mov
pop
inc
stos
fnstsw
lret
mul
and
sub
stos
in
push
push
aam
and
lahf
xchg
rcrl
adcl
imul
repz
arpl
mov
icebp
in
mov
xchg
and
add
xor
cld
mov
movsl
push
lods
mov
rcrl
outsb
out
mov
pop
dec
sti
hlt
pop
pop
xchg
ljmp
cmp
jge
mul
fldt
sbb
movsb
cltd
rolb
sbb
subl
addr16
outsl
stos
aaa
fidivs
sub
sbb
xor
mov
hlt
nop
xor
pop
dec
cwtl
jns
mov
neg
icebp
sbb
mov
lret
fdiv
add
lret
in
lret
jp
push
lretw
jb
dec
mov
adc
int3
mov
cli
cld
xchg
popa
leave
mov
loope
pop
adc
sbb
add
in
popa
adc
fldcw
mov
mov
mov
sahf
pop
scas
hlt
daa
mov
call
cmpsb
iret
nop
fdivp
cmp
dec
mov
fldl
mov
cli
dec
out
lds
push
test
push
negl
aam
or
or
xchg
add
arpl
pop
das
inc
bound
push
jae
adc
cli
xor
fs
fisttps
add
pop
push
adc
cmp
pop
jl
lahf
push
adc
mov
cmp
inc
xor
sbb
cs
xchg
sbb
dec
fstpl
push
test
int3
jp
xor
lea
push
cltd
lcall
xchg
sarb
inc
hlt
dec
dec
repnz
jle
outsl
jecxz
mov
dec
inc
aas
sbb
cwtl
out
adc
cltd
dec
adc
data16
dec
cmp
mov
pushf
cltd
sub
cltd
inc
mov
into
testb
loopne
mov
and
dec
xchg
mov
icebp
or
cmpsb
inc
sub
jmp
test
aaa
mov
pusha
je
lods
fadds
adc
sbb
add
sti
xchg
inc
bnd
cmpsb
mov
inc
xchg
or
sarl
hlt
mov
test
lods
frstor
out
sbb
orb
cmp
sarb
clc
daa
jl
adc
lds
in
inc
pop
jns
or
outsl
nop
test
dec
test
jns
xchg
movsb
int3
push
hlt
je
lcall
arpl
xchg
cmpb
sub
and
mov
inc
adc
stc
and
mov
cli
pop
xchg
inc
pop
lds
mov
cwtl
mov
adc
icebp
jl
int3
sub
imul
sub
inc
addr16
and
lods
dec
adc
ljmp
scas
fstpl
mov
mov
pop
mov
sbbb
mov
shrl
and
cmp
adc
loopne
int3
mov
xor
ficompl
scas
add
jp
out
dec
hlt
dec
scas
dec
stos
mov
ds
push
pop
adc
mov
in
adc
mov
movsl
pusha
inc
adc
imul
outsl
mov
sti
call
out
or
push
fwait
cmp
lods
or
mov
inc
xchg
repz
or
cmp
les
mov
cwtl
fwait
mov
es
popa
sbb
cmpsl
cmp
jp
mov
subl
jnp
ds
out
pop
dec
int
push
test
and
mov
mov
lcall
add
xchg
dec
xor
mov
fldt
int
cmp
insb
xchg
pusha
mov
scas
arpl
test
adc
xchg
adc
sbb
xchg
dec
push
or
cmp
popf
flds
test
shlb
in
std
fidivs
pop
xor
int3
mov
popa
pop
icebp
mov
lods
sub
scas
cli
xorl
outsl
sbb
imul
scas
pusha
dec
cmp
dec
into
roll
out
sub
push
xlat
pop
fimuls
mov
add
xchg
cmp
lret
lcall
pop
jge
ljmp
hlt
jo
into
jge
dec
fldl
insl
inc
imul
inc
mov
out
je
push
cli
cld
jne
rol
mov
popa
shrb
ret
jp
cmp
cmp
mov
add
andb
mov
dec
stos
jnp
repz
and
call
cs
xor
xlat
xor
xchg
ficompl
xorb
mov
test
push
aad
hlt
pushf
inc
dec
lea
dec
pop
pop
dec
mov
clc
andb
sbbb
add
test
cmp
in
outsl
jns
inc
adc
lds
movsb
dec
scas
dec
lods
mov
mov
enter
lds
add
inc
les
cmc
out
iret
lret
int
push
divl
ja
sub
sbb
mov
cwtl
call
mov
push
xlat
mov
fld
sub
sub
mov
mov
loopne
push
pop
pop
cld
pop
sahf
fstpl
in
js
sbb
push
inc
push
lret
lcall
inc
in
xchg
in
mov
aaa
push
imul
jmp
mov
sbb
jns
mov
mov
mov
push
xchg
jb
fdivs
pop
sub
adc
inc
xchg
fs
jnp
les
xor
cmpsl
pop
mov
mov
mov
cmpsb
cmp
out
xchg
pop
fwait
xor
jno
dec
sub
popa
mov
dec
ljmp
in
adc
rorb
cmp
push
mov
pusha
pop
xor
mov
mov
cmp
adc
imul
adc
ss
repz
daa
cmp
push
cmpsb
repz
mov
inc
out
scas
pop
ds
pop
mov
mov
push
out
sbbb
mov
out
mov
leave
nop
lea
movsb
stos
jp
sbb
rcrl
hlt
lahf
lods
push
filds
ja
scas
jmp
and
dec
jno
and
or
sub
sbb
test
pop
int3
cmp
mov
repnz
sti
nop
mov
fwait
lock
sarb
imul
adc
pusha
sbb
inc
cmp
mov
sti
nop
mov
fwait
lock
sarb
imul
adc
pusha
sbb
inc
cmp
mov
sti
nop
mov
fwait
lock
sarb
imul
adc
pusha
sbb
inc
cmp
mov
sti
nop
mov
fwait
lock
sarb
roll
addr16
xchg
aam
les
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
shrl
cltd
aas
test
cmp
pop
dec
scas
sbb
dec
out
sbb
sahf
das
cltd
aas
cltd
ud1
leave
outsl
fnstcw
dec
stc
pop
add
sti
lahf
dec
out
pop
ljmp
jns
nop
das
cmpb
pop
pop
shrb
jg
dec
out
pop
or
dec
lahf
mov
sbb
cltd
dec
in
xlat
repz
mov
loopne
aad
cmp
inc
jbe
mov
adc
test
xchg
sbbb
xor
adc
xor
cmc
das
push
je
iret
hlt
and
cltd
jmp
xchg
fdiv
sti
dec
loope
or
inc
jns
pop
mov
sbb
ret
xor
ds
push
xor
in
outsb
int3
outsl
add
jno
sub
pusha
int3
mov
nop
imul
sbb
add
out
cmp
cmp
into
orl
je
push
jl
test
push
out
mov
lahf
mov
dec
or
das
cltd
aas
test
outsl
ret
jg
dec
loopne
adc
and
imul
cld
in
int3
dec
fstpl
add
jge
sbb
pop
loope
icebp
and
dec
sbb
mov
jne
btc
or
pop
or
sbb
insb
subb
sbb
stos
dec
int3
jnp
imul
stc
pop
or
cmp
imul
cltd
aas
test
outsl
fnstcw
dec
stc
pop
or
cmp
imul
pop
sub
std
ror
out
cmc
imul
push
xlat
aam
fprem1
shr
fs
lock
inc
push
mov
jmp
mov
push
icebp
mov
call
lock
adc
or
sbb
pop
mov
aam
sub
movb
sub
sbb
sbb
repnz
dec
dec
hlt
xor
push
xchg
cmc
jnp
sbb
out
xor
xor
xchg
cmpsl
add
sub
mov
and
shlb
test
pop
push
sar
ds
mov
arpl
arpl
test
ror
xor
pop
and
pop
pushf
mov
loopne
and
scas
rcl
loop
aad
dec
fwait
sbb
sarb
pop
inc
addr16
mov
push
jmp
mov
push
ja
xchg
cltd
xchg
lds
mov
popa
inc
das
sub
lcall
mov
lret
inc
decl
dec
insb
inc
adc
testb
arpl
in
xor
or
shl
jne
fistpl
mov
jp
in
imul
adc
xchg
pop
inc
dec
lods
mov
mov
and
repnz
jge
jg
cld
jl
sahf
scas
dec
mov
xor
sub
rcrb
pop
xchg
sbb
mov
mov
xchg
ss
cmpsb
mov
int3
adc
xchg
sti
inc
and
mov
mov
mov
es
cld
pop
adc
xchg
lret
aaa
add
jne
clc
in
test
jg
lea
rcrb
imul
adc
test
dec
push
pop
or
test
dec
addr16
pop
dec
addr16
cmc
mov
pop
fisttpl
push
fcompl
sub
arpl
jmp
inc
shl
dec
sub
pop
mov
mov
in
leave
test
and
inc
dec
fsubrl
push
or
sub
in
iret
adcl
xchg
jo
stos
jg
inc
outsl
insl
dec
sbb
jns
aam
inc
sub
dec
repnz
fucomp
jl
or
imul
xchg
lahf
and
shl
dec
or
sbb
xchg
xor
rep
xor
cmp
mov
pushf
push
inc
les
cmc
mov
mov
in
cmc
and
mov
call
dec
push
pop
pusha
xchg
test
jle
stc
mov
lock
lock
or
nop
inc
inc
aam
cmp
clc
mov
jae
out
adc
insl
xchg
add
xchg
push
je
and
lds
and
js
pop
jbe
cwtl
stc
rep
mov
icebp
or
js
cmp
mov
fisubl
stos
pop
push
jns
pusha
jmp
and
mov
cld
scas
add
xor
mov
dec
pusha
lods
adc
sbb
or
aam
fstps
sti
fnsave
mov
aam
out
xchg
sbb
mov
scas
loope
push
add
jmp
xchg
mov
or
push
xor
mov
jle
stos
test
pop
wbinvd
sub
call
neg
inc
and
add
xchg
or
xor
jb
arpl
push
ja
scas
bound
add
xchg
sub
cmpb
inc
movsb
jmp
xchg
sbb
cli
adc
add
cmpsl
mov
xor
inc
test
leave
add
das
stc
scas
sbb
lret
fiaddl
mov
dec
int
scas
cmpb
movsb
movsb
leave
addr16
shl
mov
scas
sarb
or
sub
pop
xchg
add
jmp
ret
lcall
push
xor
mov
cld
loope
cmp
sub
xchg
in
adc
ljmp
mov
ret
push
in
addr16
pop
mov
mov
mov
loop
sub
mov
cli
pop
orl
sub
cmp
push
and
and
jge
dec
movsb
jae
sbb
mov
je
mulps
adc
pushf
jl
sbb
pushf
in
into
pop
and
mov
adcb
pop
shlb
sub
sub
divb
bound
add
int
push
popa
outsb
jg
das
sub
ja
inc
or
or
adcl
test
mov
icebp
sub
lcall
bound
mov
test
scas
cmp
rol
out
dec
adc
adc
dec
push
js
test
push
dec
xchg
and
dec
cli
jns
sti
mov
pop
xchg
push
sbb
push
and
lods
lock
imul
mov
mov
ss
push
das
mov
ret
lods
add
in
mov
or
xchg
es
lock
or
adc
or
xchg
out
nop
or
imul
shll
push
fwait
lret
xchg
xchg
rolb
jmp
jo
addb
mov
and
scas
pusha
cmpsl
push
lea
and
cmpsl
int
mov
mov
icebp
lock
pop
xor
rcrl
cmp
and
adcb
aad
xor
mov
std
push
enter
ret
test
push
xchg
or
in
sub
out
and
or
inc
mov
pop
scas
outsl
call
sbb
test
xor
adc
gs
insl
push
popa
adc
loop
std
mov
pop
mov
xorl
js
jne
lds
cmpsb
daa
xor
sub
lds
stc
sub
xchg
shlb
and
outsl
ret
clc
push
add
aas
clc
and
cmp
addr16
mov
jns
das
jle
imulb
lahf
cmpsb
push
ret
popf
jge
sbb
jmp
push
cmp
mov
mov
xor
dec
fnsave
or
cmp
pusha
xchg
pushf
iret
pop
jo
mov
xor
aaa
movsl
sub
loopne
ljmp
xor
sbb
in
mov
mov
fdivr
mov
dec
insl
push
mov
jbe
xorb
add
lcall
sbb
mov
in
pop
es
cltd
xor
jg
mov
popf
xchg
dec
sbb
mov
sub
jmp
pop
xchg
mov
lods
fldenv
rclb
jbe
out
xor
hlt
sbb
pop
mov
fsubs
pop
fs
movsb
into
out
sub
adc
xchg
cmp
fiaddl
fisttpl
out
mov
pop
mov
jp
mov
cltd
mov
jae
ljmp
mov
xchg
mov
xchg
mov
xchg
les
cmp
nop
lret
jl
pop
jp
adc
cmp
pop
lea
mov
arpl
mov
into
sbb
mov
inc
dec
cld
imul
call
rorb
sub
dec
push
xor
stc
xchg
addr16
imul
mov
xchg
mov
outsb
lret
mov
dec
cmp
js
jb
sbb
push
push
and
loope
dec
mov
or
jb
cmp
cmp
add
or
daa
pop
push
loope
fs
cmp
inc
rcrl
test
ficomps
movsl
adc
or
test
sahf
icebp
into
jbe
pop
mov
fildll
jb
xor
cmp
push
or
dec
decb
sbb
mov
inc
jg
and
scas
sbb
jnp
xor
jns
or
sbb
mov
arpl
jmp
mov
pop
sbb
add
xchg
mov
fsubs
mov
or
fildl
ja
movsb
outsl
mov
jmp
mov
xlat
ja
rorl
mov
fsubr
xchg
lahf
sub
sbb
gs
pop
fidivs
sub
gs
pop
mov
lcall
scas
cmpsl
xchg
xlat
push
in
enter
into
pop
push
jno
mov
push
mov
add
push
add
testl
jnp
mov
test
pop
out
inc
shll
pusha
cli
popf
push
pop
in
sbb
or
stc
inc
in
mov
stc
push
lods
mov
dec
js
pushf
jns
fs
imul
jecxz
rclb
push
ja
sbbl
sbb
call
sub
push
mov
out
cmp
cmp
pusha
pop
test
pop
xor
je
sahf
or
clc
pop
sbb
dec
int3
push
inc
push
pop
andl
inc
aas
and
in
pusha
adc
addr16
mov
pusha
cmp
sub
push
jmp
and
gs
cmpsb
movsl
addl
andb
out
lahf
and
dec
push
repnz
mov
stos
data16
add
jecxz
cs
jg
cmp
mov
xchg
and
shll
stos
aam
xor
gs
push
ud1
pop
dec
rolb
or
mov
and
jge
inc
or
into
fisubs
push
xchg
dec
call
in
rcl
sub
int
cmp
aas
popa
and
adc
xor
pop
dec
int
ja
inc
stc
and
xchg
push
imul
and
jg
ja
stos
sbb
and
ja
js
cmpsb
mov
das
repz
sarb
insb
outsl
hlt
cmp
jmp
pop
insl
mov
push
sbb
clc
xchg
in
sub
lock
inc
gs
je
inc
push
lock
mov
push
cwtl
es
xchg
mov
movsl
add
jo
out
in
in
xchg
gs
push
lcall
inc
sbbb
aad
jle
mov
mov
adc
sub
xchg
bound
mov
cli
cmp
dec
dec
dec
lret
mov
or
ret
add
xlat
mov
sbb
in
cmpsl
sub
and
lods
mov
and
sti
loop
mov
push
push
in
pop
cmpsl
xchg
add
loopne
mov
mov
pop
outsb
fstpt
jo
jl
sub
mov
cwtl
ss
adcl
cwtl
popa
pop
hlt
mov
mov
lret
mov
mov
sub
div
push
lods
data16
out
xor
pop
les
xchg
push
xchg
pusha
jg
jecxz
aam
int
mov
cmp
sub
inc
jmp
shrd
dec
xchg
idivb
int3
out
inc
or
inc
lock
jno
repz
pusha
and
add
outsb
pop
fwait
icebp
outsb
mov
inc
popa
ljmp
pop
jp
inc
sub
push
adc
loope
mov
jns
push
ds
inc
fs
jp
pop
enter
pushf
xchg
jg
dec
rcr
dec
or
cmp
lods
push
push
push
fwait
insl
fs
xchg
shl
push
xchg
push
mov
out
pushf
sahf
cli
dec
js
mov
rcr
pop
enter
fisubrl
push
fsubrl
aaa
hlt
in
arpl
xor
push
xchg
jbe
xchg
sbb
sub
cmpb
iret
or
sbb
std
push
xor
lods
push
mov
inc
lahf
fs
imul
fistpl
mov
mov
ret
sbb
shlb
xchg
mov
fadds
xor
push
cmc
les
scas
dec
test
shlb
mov
movsb
insl
sub
inc
and
dec
and
xor
mov
pop
rol
pop
fadds
out
pop
pop
sub
push
xorb
jle
aaa
xchg
das
dec
hlt
lret
lcall
mov
inc
mov
icebp
mov
jno
jg
sbb
icebp
out
mov
cmp
xor
popa
dec
inc
cmc
xor
dec
sahf
imul
xchg
shlb
pop
mov
leave
sbb
or
addr16
inc
loope
inc
and
out
out
mov
loopne
push
lcall
sti
sub
stos
adc
inc
andb
loop
loopne
adcl
pusha
inc
out
adc
lock
cmpsl
cmc
mov
arpl
push
pop
pop
mov
out
in
adc
sub
test
ljmp
into
stc
jg
divps
popa
and
cmp
xor
and
cmp
jmp
std
fldl
fidivrl
mov
mov
pop
cli
gs
adc
xchg
add
mov
movsl
popa
mov
paddusb
add
jne
xor
mov
je
outsb
pop
hlt
add
movsb
pop
or
int3
cmp
fldenvs
pop
cltd
les
fcompl
jns
test
dec
repnz
cmp
fsts
mov
lret
and
mov
fiadds
int
mov
sub
ret
fcoml
mov
dec
ja
or
lahf
mov
sbb
xchg
pop
int
daa
adc
jecxz
or
out
fdivs
es
mov
loop
dec
dec
xor
ror
mov
mov
mov
test
out
aaa
aas
mov
js
mov
adcl
fstp
xor
push
fwait
ja
jl
test
dec
mov
xchg
into
or
das
ficoms
inc
and
xchg
jecxz
cmp
ret
adc
jbe
testl
xor
ret
in
inc
sub
roll
sub
and
cld
int
lods
mov
inc
imul
mov
scas
mov
lcall
push
pusha
mov
insl
push
repz
mov
cmp
pop
fisubs
mov
in
sub
pop
lds
fcoms
cmp
and
xchg
inc
cs
inc
xchg
rcrb
scas
inc
sub
pop
into
sbb
inc
cmpsb
push
xchg
push
aam
test
pop
add
pop
ja
or
add
mov
xor
out
inc
pop
mov
mov
mov
or
mov
mov
aam
xor
mov
incl
fwait
mov
push
dec
jecxz
adc
lock
test
mov
insb
out
push
pop
dec
divb
dec
jmp
dec
andl
jmp
mov
imul
fidivrs
lds
pop
adc
adc
mov
ljmp
faddp
jae
cmc
fistpl
repz
push
arpl
cmp
mov
mov
sbb
outsl
mov
orb
hlt
sub
mov
inc
in
sti
mov
int3
mov
xlat
sub
mov
fwait
inc
lods
int
jmp
and
mov
nop
stc
mov
insb
xor
ljmp
ss
push
jle
in
sbb
xlat
lock
cmc
inc
push
test
mov
xor
pop
mov
push
jnp
mov
mov
fstps
jg
mov
xchg
inc
fsts
push
testl
xchg
cs
cmpsl
jb
xor
stos
pop
data16
jo
push
or
dec
das
jb
cwtl
jno
lret
aaa
lret
jg
xchg
push
add
and
mov
xchg
popf
into
and
data16
inc
lcall
sbb
cs
push
mov
popa
stos
nop
mov
sub
imul
add
test
mov
fcompl
add
push
and
sbb
push
test
aad
stos
rorb
lods
mov
mov
in
ret
add
lret
push
cmp
mov
bswap
ljmp
iret
add
into
push
lahf
sbb
cld
sub
mov
outsl
pop
sub
filds
mov
mov
add
sbbl
bound
jg
push
dec
hlt
jb
aaa
cs
mov
mov
lods
or
lret
mov
mov
mov
test
push
dec
jbe
popa
and
xchg
xchg
dec
and
call
sbb
bound
testl
cltd
mov
inc
cwtl
fcomps
mov
in
adc
mov
mov
xor
mov
jl
scas
arpl
movsb
mov
insl
adc
jo
fists
out
inc
cmp
mov
dec
xchg
xchg
int3
inc
mov
mov
cmp
pop
fnsave
dec
data16
sbb
jnp
mov
shlb
push
icebp
mov
sub
and
test
cmp
push
pop
in
test
shll
sahf
jbe
sub
stos
pop
fs
loopne
dec
mov
outsb
dec
test
inc
rorb
aam
mov
push
push
in
and
push
inc
sub
fnstsw
push
ficoms
aaa
mov
ja
sbb
ljmp
cmpsb
clc
and
add
pop
cld
mov
cld
faddl
or
rcr
sbb
les
test
pop
jns
xor
xchg
jae
and
shlb
add
hlt
inc
repnz
in
xor
jecxz
dec
popf
mov
sbb
ss
adc
in
lods
add
and
incl
rolb
sahf
icebp
sar
dec
inc
dec
loope
pop
cs
xchg
movl
and
fdivs
iret
mov
dec
or
sbb
repnz
lcall
jl
stos
xlat
nop
sbb
in
push
call
ret
ficomps
dec
hlt
cmpsb
pushf
std
clc
arpl
or
cmpb
shll
addr16
pop
imul
xchg
das
arpl
and
cs
pop
mov
pop
sbb
aad
sub
sub
push
leave
push
cmpsl
push
cmpsb
xchg
test
jnp
mov
jmp
mov
outsl
out
dec
loop
ficomps
mov
aas
inc
ds
and
arpl
xor
sbb
jecxz
scas
add
out
jo
push
sub
xchg
imul
fsub
sub
outsl
or
and
dec
daa
pop
xchg
lcall
jb
insl
aad
jle
bound
mov
test
mov
sti
js
pop
dec
jns
mov
push
lcall
bound
fcomp
loope
pop
xor
adc
call
popa
dec
or
xchg
incl
nop
jmp
jo
jle
vandnpd
popa
dec
enter
out
mov
jmp
sahf
and
push
int3
mov
adc
fldcw
jbe
xor
pop
nop
pop
fs
fistps
mov
mov
aaa
std
push
inc
xor
into
sbbl
ret
sbb
pusha
jp
push
fisubrl
mov
pop
incl
test
stc
mov
cmc
cs
negb
int
movsb
je
test
mov
sti
shl
icebp
and
mov
aaa
mov
divb
mov
adc
xlat
test
pop
xor
xchg
out
cs
cs
pop
jno
mov
neg
subl
xor
jnp
rolb
and
nop
sub
push
stos
lahf
nop
mov
xchg
mov
mov
xchg
dec
push
outsl
loope
inc
ret
adcl
scas
inc
mov
ja
sub
sub
or
scas
in
or
lods
bound
orb
out
iret
or
lds
testl
fprem1
pop
in
scas
rolb
in
sbb
push
rcl
pop
mov
rcr
roll
jp
rcr
sub
jne
cmp
pop
imul
jp
scas
rcr
push
dec
sub
pop
aaa
cld
fidivl
sbb
sub
rorb
sbb
push
add
outsb
jmp
xor
cwtl
cld
sub
ret
add
mov
mov
add
dec
or
nop
popa
push
inc
repnz
adc
ja
divps
ret
push
add
mov
lahf
mov
popa
pop
or
lret
mov
cmp
push
mov
mov
push
xlat
xchg
cmc
xor
fcomip
xchg
lret
mov
push
xor
mov
flds
shrb
or
cli
add
xchg
rolb
mov
repz
and
or
lahf
sub
add
movsb
insb
mov
popa
stos
and
ja
repnz
addb
dec
mov
rcrb
mov
sub
push
or
fistps
std
or
std
std
mov
add
pop
inc
push
xchg
adc
xchg
cld
mov
add
xlat
out
mov
xchg
pop
mov
int3
mov
xchg
sbb
daa
sub
xchg
stos
ss
adc
sarb
pop
imul
dec
dec
cli
mov
adc
std
push
mov
dec
mov
adc
inc
sbb
or
and
pop
dec
leave
es
add
repnz
mov
mov
cli
insb
sbbl
lahf
data16
cmp
aad
inc
loopne
mov
inc
dec
jne
add
sti
dec
ds
sub
add
pop
aas
cmpsb
loop
mov
popf
pop
cld
adc
xchg
jbe
aam
dec
or
icebp
outsl
shrb
scas
sub
paddb
inc
and
inc
outsl
mov
jle
sub
scas
xor
xchg
jb
inc
pop
insl
lock
mov
mov
sbb
xchg
fwait
add
mov
cltd
jb
fs
dec
pop
mov
lods
or
xchg
mov
add
out
stos
jne
push
subb
aas
lds
mov
jg
dec
stc
pop
or
cmp
imul
cltd
aas
test
outsl
fnstcw
dec
stc
pop
or
cmp
imul
cltd
aas
test
outsl
fnstcw
dec
stc
pop
or
cmp
imul
lods
aas
lahf
ud1
leave
outsl
fcos
imul
out
orl
add
inc
push
adc
pusha
leave
jo
and
jno
add
adc
add
fistpl
dec
lock
sub
mov
jmp
jo
add
push
sub
imul
cmp
or
pop
cli
clts
test
sub
jns
add
sbbb
jne
outsb
sarb
mov
xor
jmp
dec
dec
push
push
mov
insb
pushf
pop
pop
cmp
cmc
inc
mov
fwait
mov
or
sub
pop
mov
iret
cwtl
sub
fnstcw
dec
xorb
fsubr
in
shlb
shlb
movsb
insb
ljmp
push
movsb
fs
jo
adc
and
inc
cmp
dec
pop
mov
mov
sub
jl
adc
es
or
fucom
ror
jecxz
xchg
ljmp
jl
jmp
mov
sbb
jo
adcl
sub
pop
dec
sbb
lret
jo
adc
jo
add
adc
sar
and
aaa
jle
mov
lahf
aas
popf
or
sbb
movsl
fdivrl
push
call
mov
push
movl
stc
push
popa
push
sahf
adc
sbb
push
enter
cli
add
sub
dec
iret
dec
nop
insb
lds
mov
fidivl
cld
dec
test
xor
imul
cmp
or
fldenv
jo
add
xor
imul
cmp
or
jno
xchg
sahf
cmc
addr16
sbb
mov
fsubrs
lods
mov
clc
mov
and
scas
mov
ss
xchg
inc
fcompl
mov
pop
out
push
xchg
repz
dec
xlat
stc
pop
gs
adc
aas
lock
stc
xor
clc
mov
fidivrl
mov
adc
inc
dec
popa
xor
inc
insl
enter
cmp
mov
jnp
pop
jae
orb
stos
inc
pop
inc
or
pop
movl
xlat
outsb
inc
loopne
adcl
xchg
loop
cltd
out
sbb
push
iret
xchg
cmp
push
rol
imul
jge
fbld
pop
pusha
xor
mov
ds
repz
cmp
outsb
fwait
pop
test
in
adc
lods
sti
loopne
or
loope
bnd
pop
mull
loop
aas
and
push
mov
jle
sbb
sbb
adc
push
mulb
jge
and
jecxz
ds
shrl
push
pop
sahf
cmp
test
jbe
stos
cld
lahf
or
je
repz
test
sub
inc
mov
add
push
lock
ds
mov
popl
push
xchg
aam
outsb
mov
xor
adc
or
fcomi
lds
or
fldl
xchg
lock
out
cwtl
pop
dec
in
mov
xor
push
lret
jae
jmp
popf
sahf
sti
adc
in
sub
stos
mov
arpl
xchg
sub
mov
xlat
lea
int3
mov
icebp
dec
pop
mov
inc
enter
inc
insl
dec
leave
ret
and
mov
xchg
aam
sub
jnp
addr16
cmpsb
enter
jb
sub
jno
push
into
out
dec
hlt
sub
shlb
ljmp
lahf
test
pop
xchg
in
dec
sbb
call
add
popf
imul
in
cmp
add
adc
cmc
aas
les
insl
lcall
push
pop
or
push
pslld
mov
mov
out
pop
insb
push
lock
xchg
jae
fidivs
inc
dec
lock
inc
mov
stc
jg
xchg
add
sub
lret
mov
sub
ds
cmp
sti
enter
sti
or
inc
mulb
mov
jecxz
imul
subl
ret
push
pop
sbb
loop
lods
imul
js
dec
and
lock
mov
fbld
jge
scas
int
cmp
mov
push
adc
test
mov
out
call
insl
add
xor
out
xor
in
ficomps
fiadds
aad
popa
or
xchg
jl
mov
and
inc
icebp
cmp
cmpsb
mov
insl
lret
dec
xor
fisubs
jle
mov
add
adc
mov
std
push
xchg
aam
pop
push
dec
cmp
rcrb
jp
decl
mov
test
and
xchg
and
sti
mov
data16
lock
pushf
add
bound
xor
mov
fisubs
out
ljmp
mov
adc
arpl
mov
fdivrl
or
add
and
test
pop
pop
and
outsb
mov
movsl
dec
std
sbb
repz
popa
adc
out
mov
add
xor
loopne
insl
enter
adc
sbb
jae
sbb
adc
icebp
pushf
sub
sar
test
sbb
push
nop
jmp
and
cmp
mov
adc
andb
xchg
sbb
fwait
int3
arpl
jecxz
sbb
nop
xor
pop
jb
jo
mov
xchg
cmpsb
mov
xchg
and
inc
pop
testl
push
sub
loopne
cmp
in
loop
mov
into
xor
inc
fdivrp
mov
pusha
scas
push
in
nop
repz
cmp
imulb
rol
daa
inc
into
adc
and
push
mov
mov
stc
jmp
xchg
imul
jbe
test
lea
xor
xor
mov
sbb
fs
int3
fiadds
in
xor
stos
lcall
mov
adc
mov
loop
repnz
add
mov
xchg
mov
ret
fs
jg
movsb
dec
mov
push
fs
push
sbb
sbb
in
insl
in
int3
scas
fsubr
js
jp
push
pop
cmp
push
test
xchg
cmp
sti
push
sbb
mov
fcmove
fiadds
cmp
dec
cmp
call
mov
and
fs
sti
xor
in
fistpl
inc
pop
js
pop
decb
loop
push
mov
push
insb
xchg
out
loope
scas
add
lods
or
mov
imul
sbbl
mov
fidivs
xchg
lret
sbb
xor
jb
pop
je
adc
add
xchg
pop
into
in
lret
xchg
test
jbe
arpl
rcrl
into
jp
jne
out
mov
ja
lret
or
mov
jno
ja
lret
jmp
and
aas
inc
xor
cltd
jp
std
mov
sub
push
pusha
out
adc
out
sub
jb
test
repnz
push
sbb
aaa
outsl
or
and
sahf
sub
aad
and
and
movsl
test
add
dec
and
mov
iret
notl
subl
icebp
ja
lea
fisttpll
jns
xor
dec
jl
mov
cs
cld
mov
mov
jecxz
ficoms
sbb
scas
mov
cmp
mov
stos
add
mov
inc
adc
std
mov
xchg
filds
cmpl
mov
sti
imul
sbb
xchg
mov
ds
add
and
leave
test
out
out
mov
pop
sti
daa
imul
push
mov
mov
ss
mov
xchg
mov
je
jl
add
into
mov
rcll
mov
mov
ljmp
jnp
push
movsb
mov
cmc
call
pop
fwait
lock
movsl
jns
ss
or
or
in
pop
mov
popf
stos
xchg
inc
fimuls
mov
cs
pusha
push
push
pop
fwait
adc
dec
loop
adc
cwtl
ret
jmp
lcall
add
ja
xor
inc
adc
int
shlb
mov
rcll
popf
push
ljmp
jp
bound
sbb
fstpt
push
xchg
mov
adc
xchg
cmp
mov
and
in
repnz
mov
ficoms
and
sbb
pop
pop
pop
xchg
out
imul
add
jge
mov
sahf
and
divl
shrl
mov
lahf
xchg
pop
mov
dec
lahf
sbb
xor
lcall
dec
loop
add
dec
in
aam
arpl
and
ja
push
push
jge
rorl
inc
and
pop
push
fsubp
and
mov
iret
lods
aam
fwait
orl
mov
and
adc
push
jecxz
daa
mov
sbb
pop
clc
inc
mov
jmp
loop
jmp
data16
dec
out
in
cvttps2pi
in
sub
mov
in
fs
fsubrl
fninit
sub
cmpsl
mov
cmp
push
int3
in
mov
shlb
in
icebp
lea
dec
lock
mov
sub
fistpll
or
mov
out
aaa
inc
test
gs
popa
push
cld
push
out
and
pop
mov
lea
insl
jg
stos
jmp
out
inc
aad
popf
fnstsw
movsl
in
and
and
xor
xor
mov
insl
push
cmpl
arpl
cwtl
xor
jo
repz
mov
mov
xchg
lds
jecxz
push
enter
xor
rorb
or
hlt
push
sbb
pushf
jne
rolb
mov
or
fwait
pusha
mov
sti
fisubl
test
in
and
mov
add
or
sbb
mov
aam
mov
popf
jl
imul
leave
rcrl
fldt
jns
loopne
push
fstpt
stos
loope
jecxz
scas
push
push
cmp
lods
sub
orl
lret
inc
add
sbb
pop
inc
sbb
mov
sbb
push
stos
jg
pop
jle
hlt
cmp
add
add
xor
adc
and
push
aaa
xlat
push
push
ret
cmp
cmp
ficomps
les
ja
loopne
leave
stos
inc
repnz
movsb
imul
xchg
mov
gs
sub
inc
adc
mov
repnz
jo
sbb
adc
and
push
pop
sub
sbb
pop
or
test
mov
sbb
xchg
mov
xchg
stos
leave
pop
aam
pop
cmp
adc
pushf
arpl
sti
cmp
push
cmp
cmp
rorb
dec
scas
add
push
sbb
mov
sub
sbb
icebp
mov
jno
xor
cltd
mov
cmpsl
cmp
lahf
int3
xchg
cmp
mov
add
add
dec
cmpsb
sbb
fistps
sbb
into
cmpsl
pusha
mov
fcomip
scas
ret
ret
arpl
leave
iret
imul
jge
add
jb
jl
lahf
mov
xchg
lods
sub
sti
mov
test
lret
dec
adc
dec
adc
sub
sahf
mov
mov
lcall
mov
sub
sbb
out
xchg
out
xchg
loope
lods
fstps
lock
jbe
hlt
or
arpl
push
mov
not
xor
jb
insb
jecxz
bound
in
js
jg
inc
sbb
dec
and
inc
jns
lods
or
mov
pop
dec
or
fcomps
jae
cs
cli
test
add
cmpsl
dec
fmull
pusha
in
fs
movsb
incl
jnp
loopne
mov
mov
inc
fcoml
inc
jae
mov
aaa
andb
cwtl
mov
xlat
cld
mov
movsl
and
or
inc
jge
pop
mov
add
sub
dec
dec
mov
dec
sbb
shlb
jno
push
push
fcompl
aas
mov
sbb
push
mov
in
xchg
pop
out
int3
shlb
lods
sbb
and
inc
shll
inc
gs
loop
roll
repz
enter
insb
xchg
mov
outsb
icebp
add
cmpsb
jb
stc
stc
and
enter
popf
dec
jge
hlt
ss
into
xor
lea
lcall
in
mov
test
aad
ret
add
dec
movsl
inc
adc
pushf
mov
add
mul
add
xor
mov
rcrb
add
bswap
pushf
fdivrl
inc
cwtl
add
jb
addl
pop
daa
jnp
push
mov
inc
popa
xchg
or
dec
dec
aam
sub
stos
jae
hlt
sahf
inc
jb
rcrl
jecxz
cmp
mov
js
inc
cwtl
addl
mov
jns
sub
mov
dec
lahf
push
sub
mov
scas
enter
lret
cmpsb
xorb
dec
push
fidivl
xor
sahf
pop
mov
inc
into
decb
xor
inc
mov
das
jb
iretw
cltd
sti
stc
mov
or
aad
sub
js
into
in
stc
fs
fbld
pop
cmp
cmp
jno
or
mov
popa
loope
xchg
mov
scas
nop
mov
xchg
xor
adc
gs
xor
in
call
pop
xor
daa
sbb
aas
aas
sub
arpl
test
ss
int3
rcrl
jae
and
sub
push
les
js
mov
pop
cltd
xor
mov
xchg
je
adc
add
test
stc
mov
ljmp
and
test
aas
cmp
adc
inc
int3
outsb
loop
dec
jge
sbb
mov
hlt
or
fdivl
cmp
inc
cli
call
jbe
xor
jo
and
add
jg
pop
aaa
sub
sub
xor
ret
addl
loope
add
lea
jae
cli
gs
cmc
pop
adc
mov
inc
sbb
jb
jae
jnp
mov
sub
and
pop
inc
lahf
sub
lock
arpl
cltd
sub
leave
lahf
sti
rorb
nop
in
xor
lahf
movsb
mull
cmp
mov
scas
hlt
fisubrs
push
pop
gs
xor
repnz
mov
neg
repz
int3
fcompl
stc
cmpsb
stos
mov
dec
in
je
jb
inc
out
pop
mov
in
pop
sub
subl
jg
mov
adc
loop
shll
pop
add
rcrb
adc
mov
cld
sub
push
cltd
stos
lods
mov
out
jle
adc
cmpsl
push
xor
mov
inc
cmp
rcl
pop
ja
insl
test
leave
mov
inc
test
pop
int
add
test
ljmp
je
out
iret
mov
adc
fcmovbe
cltd
mov
or
mov
mov
iret
mov
adc
jecxz
lret
pop
jae
push
adc
mov
jmp
cmp
xor
lods
adc
cmp
mov
fs
shlb
sub
add
xchg
jbe
push
or
dec
aas
insl
push
lahf
inc
xchg
add
mov
insb
ljmp
pop
mov
js
aaa
shll
xchg
jge
nop
notb
jae
aas
pop
roll
jl
lret
jmp
lcall
mov
jp
mov
dec
adc
add
inc
add
cmp
loopne
cltd
pop
mov
add
les
daa
movsl
cld
stos
push
cli
gs
pop
orl
scas
or
hlt
dec
ret
jns
push
jle
jo
ss
push
jl
xchg
xchg
xchg
mov
int
adc
stos
test
mov
test
mov
jo
jg
and
fiadds
dec
push
div
sub
je
pop
jb
pushf
out
test
pop
sbb
ret
je
xlat
add
xchg
push
fimull
subl
xchg
movsb
pop
xor
and
cmpsl
icebp
ja
add
xorl
stc
cmp
xor
jge
sub
fucom
dec
adc
mov
in
dec
xor
mov
sahf
es
add
and
xchg
test
pop
sub
push
gs
lcall
cmp
or
xor
inc
in
imul
sub
xchg
dec
xor
pushf
inc
push
adc
pop
into
andl
aaa
jp
pop
outsl
shrb
add
cmp
loope
in
and
out
int3
outsl
mov
lods
cmp
loop
jbe
loop
sbb
add
mov
mov
stc
insb
in
lods
lods
sbb
cmp
dec
mov
cmp
imul
pusha
pop
std
cmpsb
xor
sbb
mov
pop
test
inc
fisubs
iret
or
int3
addb
hlt
sub
imul
mov
pushf
xchg
sbb
mov
aam
call
ss
test
jo
pop
test
fwait
or
xor
push
adc
pop
push
mov
stc
dec
xchg
add
loopne
repnz
push
fs
insb
sbb
jno
sbb
shlb
jmp
int3
outsl
pop
jg
mov
insb
ret
pop
repnz
repz
xor
das
test
lahf
fs
jge
mov
adc
cmp
xchg
jns
jae
je
jnp
adc
xchg
test
xchg
aad
rorl
popl
ljmp
lods
mov
mov
push
add
and
ficoms
imul
shrl
gs
jb
les
movsl
in
std
xor
push
lods
enter
in
jne
ret
jae
scas
sub
lock
imul
int
dec
mov
popl
imul
popa
outsb
incb
stos
aad
and
add
rorl
jb
inc
or
dec
mov
stos
pusha
inc
sbb
mov
inc
push
mov
jmp
stc
mov
inc
es
sbb
gs
xor
loope
pop
pop
jecxz
sbb
or
add
xchg
popf
cmp
in
dec
sbb
mov
fdivs
dec
fsubrs
xchg
pop
testl
xorl
ljmp
mov
stos
lcall
xchg
scas
fsubs
aas
int3
imul
das
jbe
mov
das
jecxz
jmp
inc
enter
in
fmul
sti
in
addr16
ret
mov
fimuls
hlt
in
dec
inc
movsb
rolb
push
fcompl
cmp
imul
mov
sub
iret
adc
add
shl
or
and
pop
add
pop
cld
lcall
and
arpl
mov
rclb
sub
insl
loope
ret
pop
jae
push
add
sbb
cmp
sarb
inc
xchg
adc
add
push
push
cltd
std
pop
dec
test
mov
out
insb
addr16
in
mov
aas
dec
pop
movb
incb
lods
insb
mov
jmp
scas
pop
push
movsl
pushf
pop
jl
pop
ret
ss
mov
mov
push
pop
fcmovnb
xlat
stos
inc
cmc
js
jo
lcall
cmpsl
lock
mov
inc
mov
es
inc
add
inc
sbb
out
bound
dec
dec
lds
jns
test
pop
lcall
dec
mov
fcmovnbe
mov
in
stos
inc
out
and
mov
mov
push
sbb
aam
loope
dec
inc
jnp
push
imul
out
sub
icebp
xchg
xchg
out
in
daa
cltd
xchg
sbbb
outsb
xor
out
xchg
flds
and
test
sbb
mov
add
and
iret
dec
pop
imul
cmc
sbb
xor
jg
in
xor
or
cld
leave
sti
mov
mull
mov
mov
scas
fnstenv
push
ficompl
cs
mov
inc
aam
pop
cmp
hlt
lret
push
add
dec
cwtl
das
dec
insb
cld
fistl
add
ret
fwait
mov
jecxz
mov
jl
loopne
push
or
push
stc
rorl
das
andb
fdivs
out
das
jecxz
cmpsl
scas
cmc
fsubl
je
jmp
out
fcmovbe
jb
sub
mov
or
sub
sub
mov
arpl
fcompl
sub
ja
adc
add
aad
addb
sub
mov
dec
aam
jo
or
dec
nop
push
inc
test
js
dec
push
push
js
arpl
push
jb
lods
adc
xchg
jae
push
ja
dec
test
movsb
shl
cmp
imul
icebp
xchg
insb
mov
aaa
add
insb
lret
les
popa
xchg
fdiv
in
mov
enter
stos
xchg
sub
and
je
cmp
inc
decb
popf
outsb
inc
ss
lods
adc
lahf
sub
inc
test
push
addr16
and
cmp
dec
call
cmpsl
xchg
push
mov
sbb
and
cmp
fs
push
or
mov
add
sahf
sub
push
aam
rcll
inc
xlat
inc
push
sbb
rorb
xchg
inc
icebp
adc
rcr
sbb
inc
xor
mov
lds
in
pop
dec
jecxz
lock
packuswb
insb
iret
xor
inc
leave
mov
mov
and
loop
insb
mov
xor
dec
mov
mov
out
aam
fisttps
sub
inc
std
hlt
xchg
and
nop
pushf
pop
adc
dec
lret
sub
sbb
jae
insl
out
mov
mov
dec
push
out
nop
je
dec
lods
leave
rolb
fcoml
mov
mov
insl
aam
lahf
mov
fstpt
test
adc
mov
push
insb
push
mov
dec
adc
es
fldcw
jbe
adc
push
cmc
test
aad
mov
lcall
ret
mov
clc
ret
pop
pushf
out
xor
movsb
imul
and
cwtl
jecxz
fs
xchg
pop
jmp
pop
push
jecxz
aas
xorb
fidivrs
jae
sti
add
mov
ret
ja
jge
es
out
inc
jmp
test
cmpps
or
sub
mov
cli
push
jp
push
stc
adc
jno
sub
push
lods
cmp
clc
inc
shll
imul
sbb
pop
mov
les
fmuls
leave
add
mov
or
jnp
xchg
popl
mov
sbb
pop
in
sbb
lahf
adc
and
lods
popa
enter
and
push
pushf
or
sarl
cld
mov
ljmp
cmp
xchg
push
repz
mov
and
rcrb
dec
lock
or
fldenv
jo
add
xor
imul
cmp
or
leave
js
je
add
xor
imul
cmp
push
loope
lds
add
lock
xchg
jp
loopne
xchg
mov
enter
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
stc
mov
xchg
jne
nop
dec
test
cmp
pop
push
add
add
add
push
pop
add
add
add
add
add
adc
add
add
rolb
or
adc
add
xor
js
mov
es
add
push
add
fadds
jge
xchg
add
add
popf
add
filds
hlt
add
and
jo
ljmp
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
outsl
add
add
push
push
js
stos
add
push
add
pop
add
adc
add
pusha
add
into
add
add
add
add
jo
add
push
add
dec
add
add
ljmp
add
add
add
add
push
add
pop
add
add
add
cmp
inc
add
add
add
add
add
add
mov
js
sub
push
add
roll
add
adc
add
push
ljmp
add
add
jecxz
push
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
sub
dec
add
adc
or
ljmp
add
add
mov
push
and
and
sub
roll
roll
jno
sub
adc
xchg
add
add
add
add
add
add
add
add
add
add
jo
pop
add
add
bound
js
adc
add
jecxz
adc
pusha
add
ljmp
add
add
dec
add
push
sbb
dec
add
add
add
or
filds
and
outsl
add
add
add
add
add
mov
ret
add
add
add
add
add
add
add
add
adc
sub
movsb
add
add
add
pop
add
pop
add
and
faddl
adc
xor
jb
add
add
add
add
add
inc
add
or
pop
add
outsl
add
insb
add
add
add
add
addl
add
mov
data16
into
add
add
add
addl
add
add
jbe
jecxz
jno
add
ljmp
add
sbb
pop
add
inc
add
add
push
add
add
add
adc
jne
cmp
add
add
add
add
add
add
or
addl
inc
add
add
cs
sub
add
jg
hlt
add
add
jo
jg
aam
and
add
add
mov
add
add
mov
add
push
add
pop
add
add
add
push
jl
push
add
pop
add
add
inc
add
fadds
mov
incl
add
add
imul
add
push
and
add
mov
jg
cmp
imul
add
add
or
nop
add
or
push
jl
cmp
sub
imul
add
xor
ljmp
add
mov
add
lods
add
push
adc
rorb
out
hlt
mov
mov
loope
pop
xchg
andl
pop
loopne
call
ret
test
mov
push
loope
xchg
inc
push
ss
lods
pushf
and
push
inc
or
jle
pop
cmpl
fidivrl
push
adc
sbb
clc
mov
inc
fs
mov
sbb
jp
push
mov
std
addb
sub
add
mov
dec
sbb
mov
adc
sub
pop
movsl
sbb
lods
xor
dec
mov
ret
cmpsb
fisttpl
ret
sbb
mov
jae
aam
fdivs
sub
jp
jbe
mov
mov
nop
mov
sbb
fisubrs
xchg
mov
or
aas
push
fldl
dec
retw
xor
jl
or
dec
cmp
lods
insb
lods
lods
or
testl
sbb
fnstcw
lahf
mov
mov
mov
mov
out
and
sbb
es
js
in
push
lret
ss
pop
shrl
xor
jl
pop
pop
mov
mov
jnp
test
lret
fildll
fwait
nop
push
mov
xchg
out
out
pop
adc
jl
jmp
sahf
fcompl
inc
and
xlat
cmp
dec
xchg
clc
ljmp
sbb
mov
sub
insl
rorb
mov
or
sbbb
xor
lock
in
rcr
in
sbb
or
sub
stos
test
push
insb
mov
pop
insl
sbb
and
cs
fidivs
data16
lods
lods
mov
cltd
xchg
stos
or
cmp
mov
ja
sub
mov
add
xchg
inc
out
fwait
icebp
pop
jp
out
popf
xchg
test
pop
aaa
mov
push
movsb
rorb
pusha
scas
aam
fiadds
jmp
jle
aad
jl
jmp
test
pushf
imul
rolb
cmpsl
jg
push
lds
dec
push
rcl
jno
jnp
jecxz
popf
test
push
ja
loop
sti
pop
rorb
jb
add
jbe
in
cmp
push
inc
sub
ds
ret
mov
mov
dec
push
arpl
adc
mov
jns
jl
sbb
loopne
xchg
das
push
pop
sbb
cli
sbb
pop
aam
mov
inc
mov
dec
mov
jae
xchg
jns
rol
push
in
and
test
jp
lods
rcr
and
cmp
test
pop
sbb
nop
leave
adc
cmp
stos
mov
sbb
push
lret
push
les
lods
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
