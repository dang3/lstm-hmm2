call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
cmpsl
fstl
mov
mov
pop
insl
pop
jge
or
sbb
cmp
cmpsl
fstl
out
xlat
lods
fdivs
dec
daa
pop
arpl
ja
addr16
mov
cmpsl
fstl
out
xlat
lods
mov
or
adc
dec
add
sbb
dec
incb
cmc
cwtl
mov
out
pop
scas
cmp
cmc
into
std
mov
cld
test
fcmovbe
pop
stc
cmp
sbb
bound
arpl
fsubl
or
mov
mov
sbb
test
jbe
jle
dec
dec
pop
call
repnz
and
mov
cmpsb
enter
stos
testl
mov
mov
inc
cmp
std
adc
jb
cld
mov
pop
xchg
mov
pop
gs
dec
xchg
lahf
lret
rclb
cmc
cmpps
sub
dec
xor
dec
dec
pop
out
sbb
dec
sbb
dec
push
sub
cmpsl
fstl
out
xlat
lods
mov
pop
insl
pop
jge
or
inc
jnp
int
movsb
repnz
loop
fwait
lret
mov
xchg
jbe
and
imul
pop
adc
mov
loop
mov
mov
xlat
cli
xchg
push
sub
das
adc
mov
mov
mov
mov
popf
xlat
lods
mov
pop
insl
pop
jge
or
inc
cmp
xchg
in
xchg
testl
daa
pop
pop
insl
pop
jge
or
inc
cmp
sub
mov
push
outsb
cli
fcomps
pop
push
inc
test
push
stos
outsb
jbe
xchg
ficomps
insl
adc
sub
fwait
add
inc
icebp
mov
test
push
daa
imul
pusha
in
loop
mov
pop
add
push
cli
cmpsl
or
insl
inc
sarb
scas
add
hlt
in
pushf
mov
out
outsb
push
stc
pop
lret
mov
ret
add
inc
and
mov
mov
cs
mov
pop
pushf
jne
lds
mov
or
pop
mov
pushf
mov
add
shlb
sub
clc
pop
mov
icebp
xchg
rol
add
cwtl
xor
mov
leave
daa
test
enter
sub
push
addr16
and
mov
int
es
bnd
push
aad
pop
mov
rclb
xor
fs
pop
call
movsb
lahf
xor
shlb
sub
jns
push
mov
and
xchg
xchg
aaa
mov
call
je
mov
js
out
inc
arpl
js
jp
jg
out
adc
cltd
insl
out
insl
iret
jp
aad
xor
imul
mov
stc
fwait
jle
inc
inc
add
sbb
jge
jb
lock
enter
out
fcompl
nop
mov
and
xchg
cwtd
xchg
cld
flds
ret
add
xchg
cltd
mov
outsb
adc
cmp
sbb
fidivl
movsb
pop
je
push
cmp
lock
js
cmp
popa
push
dec
movsb
mov
mov
popa
ja
imul
ss
pop
sbb
mov
movsb
mov
xchg
repz
push
pop
sub
jnp
sub
clc
inc
mov
sbb
push
xchg
ljmp
or
cld
mov
push
xchg
jno
push
push
cmp
or
mov
and
call
lret
imul
xorl
jno
movsb
sub
sub
aaa
das
mov
fdivrp
fimull
add
scas
imul
xchg
cs
scas
inc
ss
ret
jecxz
adc
pop
jmp
das
sbb
adc
cltd
ja
into
lret
cmc
fwait
jb
scas
mov
out
push
sub
test
aas
sub
or
sub
sahf
xchg
fsubr
cwtl
popf
popa
push
dec
inc
in
loopne
fsub
sbb
jo
mov
scas
jle
and
xlat
stos
xchg
test
mov
mov
stos
cmc
inc
ljmp
je
rolb
sbb
gs
lret
mov
jecxz
notl
sti
dec
int
hlt
stos
in
stos
je
mov
lret
mov
insb
push
movsb
adc
cmpl
xor
aaa
inc
scas
jmp
ja
push
dec
xchg
jns
mov
xor
xchg
mov
adc
shlb
cltd
sbb
insl
popf
enter
inc
je
sbb
adc
push
ret
lret
pop
push
jmp
cmp
inc
mov
sub
mov
out
and
insl
sub
push
jl
and
fs
sub
ficomps
fnstcw
rcr
test
cmpl
push
cli
addr16
repnz
xchg
push
lret
out
pop
mov
ret
cwtl
cltd
sub
mov
cmp
into
jecxz
xchg
jo
mov
dec
stos
into
dec
xchg
pop
addb
adc
insb
arpl
pop
aad
xchg
clc
xor
loop
push
add
xor
sbb
sub
add
outsb
and
xor
fwait
arpl
mov
cld
int
xchg
sbb
dec
nop
cltd
cmp
pop
nop
test
push
and
movsb
test
xlat
fwait
mov
jb
rclb
inc
and
mov
dec
xor
jb
pop
imul
jnp,pt
cmpsl
in
repz
jecxz
in
or
mov
pop
dec
ljmp
adc
not
lods
fsubl
xor
cld
fstpt
add
je,pt
xor
fidivrl
ret
push
lahf
jb
xchg
dec
mov
fisubrl
sbb
lcall
push
inc
jb
cmp
cmc
or
dec
adc
popf
int
loopne
gs
les
cli
adc
add
add
aad
sub
add
xor
mov
inc
add
mov
cmovnp
aam
jbe
mov
js
ret
faddp
sbb
neg
cmpsl
xchg
mov
lock
mov
jmp
or
cli
lcall
lods
inc
repnz
repz
popa
xchg
arpl
or
outsl
mov
xorl
pop
aas
xor
lcall
stos
xchg
jge
insl
nop
sbb
or
jb
aas
jecxz
sbb
and
xor
inc
test
cld
mov
xchg
popa
cmc
pop
sub
add
inc
pop
arpl
adc
fwait
or
in
push
and
in
cs
push
pushf
push
push
stos
fwait
aas
inc
out
mov
sbb
mov
push
adc
loope
dec
pop
or
push
jno
xchg
mov
xchg
movsb
ret
sbb
in
jmp
das
cmp
or
jae
push
mov
push
test
xchg
ja
loope
aam
sti
push
jp
lret
fs
pop
andl
les
movsl
stos
xchg
mov
xor
inc
jge
and
xchg
js
jno
adc
sti
pusha
push
lds
xor
outsb
adc
pushf
mov
leave
mov
mov
aam
or
mov
sbb
xor
sahf
ret
int
mov
sub
fimull
xchg
cmp
icebp
push
adc
loop
xor
and
or
dec
out
je
pop
mov
sarl
call
mov
inc
xlat
fbstp
dec
stc
cli
push
cld
stc
jbe
mov
jmp
and
pop
orb
push
lods
in
insb
cmp
fstpl
cmc
je
mov
jns
and
sbb
cmp
xchg
pop
or
mov
push
xor
pop
mov
sbb
or
cmp
sub
lahf
stos
cltd
test
or
mov
sahf
data16
mov
cli
lods
out
jmp
out
rcrb
push
inc
push
test
pushf
push
inc
sub
in
mov
sbb
shll
div
inc
lods
dec
sub
pop
scas
fstpt
out
sbbb
mov
loopne
fildl
sbb
and
insl
sbb
pop
mov
adc
enter
sbb
pop
rcrl
jae
cmc
aas
sbb
push
pop
scas
stos
aas
movsl
jg
dec
sahf
data16
daa
mov
mov
mov
push
inc
and
int
testl
and
into
aad
cmp
or
test
xchg
adc
insl
mov
mov
mov
cmp
mov
dec
jp
xchg
loope
or
mov
roll
pop
pop
sti
add
push
lods
sub
jge
xor
xchg
dec
aad
test
fstpt
and
pop
mov
fcmovb
pop
stos
dec
bound
out
dec
xor
sbb
jg
xchg
add
out
and
lret
pop
mov
addr16
push
mov
aad
aaa
or
stos
push
xchg
imul
inc
arpl
xor
repnz
mov
push
loop
jg
arpl
sbb
ljmp
adc
test
popf
cmp
icebp
push
or
pop
mov
xchg
xchg
push
xor
pusha
roll
f2xm1
xorl
sub
jl
pop
fsubr
int3
mov
pop
loop
lcall
pop
pop
pop
mov
fs
mov
ja
or
mov
xor
sbb
add
loopne
push
push
jno
movsb
fwait
lahf
fisttpll
sbb
gs
mov
bound
mov
mov
in
fs
imul
xchg
rorb
mov
fildll
xlat
aad
xchg
pavgw
das
sub
cmpsb
loope
fsubs
pop
or
xchg
jae
cmp
aad
int
cmp
sarb
dec
test
lods
cmp
mov
mov
add
or
loope
mov
fcoml
je
stc
inc
sub
std
lods
pop
push
xor
mov
pop
fwait
out
shlb
dec
hlt
call
movsb
dec
outsb
aas
mov
dec
mov
xor
cli
mov
add
insb
mov
mov
int3
pop
jmp
out
sub
cwtl
xchg
clc
leave
or
int
add
xchg
fstpt
push
xor
jbe
test
arpl
ja
pop
sbb
ds
mov
jmp
sbb
xchg
jl
adc
or
popf
test
ja
mov
test
adc
popa
aaa
xor
or
add
sub
sbb
jle
cmp
lcall
enter
inc
ss
aas
jle
dec
or
das
jmp
mov
xor
mov
clc
sub
adc
sbb
add
jmp
add
sub
mov
inc
in
jmp
dec
jae
or
lods
sti
push
js
cmp
ss
cwtl
js
sub
pop
sahf
je
push
lret
out
add
jnp
out
imul
xor
stos
push
test
mov
inc
and
mov
jnp
mov
mov
flds
jge
leave
pop
cmp
push
lds
stos
mov
loop
dec
push
test
enter
or
int
xor
adc
cmpsb
subb
push
decb
lds
mov
int
rcl
add
mov
mov
adc
mov
or
test
mov
les
shrb
push
dec
in
shrb
dec
pop
mov
sub
dec
ljmp
stos
sbb
jno
jg
fsubrs
and
lea
adc
jle
mov
dec
cmp
inc
push
iret
mov
dec
jb
jbe
ret
xor
in
stc
push
sub
arpl
and
dec
add
lret
add
mov
lods
mov
fs
dec
adc
lcall
fs
fs
pop
xor
sbb
xor
cmp
push
sti
dec
cmp
jb
inc
sbb
and
xor
fldt
xchg
dec
jl
dec
dec
in
sti
mov
orb
jmp
pushf
xchg
arpl
mov
ds
ds
dec
out
fnstcw
xor
cmp
dec
shlb
jg
mov
nop
mov
inc
ficoms
and
mov
jmp
ljmp
ljmp
xor
inc
cmp
ja
xchg
imul
jl
adc
pop
add
adc
push
dec
push
jae
fidivrl
dec
imul
test
jne
loopne
stos
jecxz
in
ja
hlt
jp
pop
push
add
sub
test
shll
xorb
daa
jg
dec
adc
add
lcall
test
pop
adc
cltd
push
push
sbb
jge
xchg
xor
in
and
and
fistl
into
movsb
les
xlat
pushf
cmp
dec
sbb
and
sti
or
mov
aaa
mov
adc
lods
dec
jbe
cmp
cmp
pop
imul
fidivrs
mov
cmp
test
adc
cmpsl
cmp
sarb
dec
dec
jns
test
push
aam
stos
rorl
cmp
subb
outsl
push
call
adc
mov
push
add
icebp
lods
sub
sub
stos
in
shrb
sbb
imul
mov
inc
push
lods
fcmovbe
jbe
repnz
and
leave
push
push
and
pop
pop
pop
xchg
pop
sarb
push
adc
jo
test
mov
cs
jg
inc
lret
push
cmc
inc
xchg
das
fstl
add
mov
adc
lods
adc
aad
test
popf
cwtl
sarl
movsl
mov
dec
lock
or
je
push
mov
ss
xchg
sbb
int3
mov
stos
cld
shl
mov
mov
cmp
bound
cmp
sti
pusha
push
fs
aaa
and
test
in
pop
mov
sub
cli
mov
rep
cmp
sti
xchg
and
sahf
cmp
mov
jge
gs
or
mov
cltd
sbb
adc
mov
into
les
rclb
mov
adc
push
pop
scas
sbb
pop
rcll
insl
jnp
inc
sub
pop
mov
sahf
xlat
imull
jbe
in
jae
mov
xchg
xchg
pusha
fcoml
les
shrl
cmc
pop
icebp
inc
imul
cli
mov
roll
movsb
jp
inc
rcll
push
xchg
and
push
xor
insb
in
or
dec
push
or
xor
in
loop
stos
hlt
mov
dec
fscale
call
aas
mov
cs
or
fs
xchg
and
dec
lock
iret
cwtl
fwait
xchg
push
popf
pop
popf
fadd
aas
inc
xchg
notl
outsl
fldenv
pushf
ret
out
dec
mov
loop
je
call
dec
int
mov
jns
pusha
xchg
jno
dec
hlt
add
out
mov
cwtl
movb
das
sahf
mov
imul
sub
ja
and
fs
lahf
add
ss
rcr
cmpsl
and
aas
mov
push
mov
jo
jae
fistpl
stos
push
call
cmp
mov
adc
inc
pop
movsl
out
sbb
adc
testb
or
lds
xor
das
xor
sub
mov
pop
in
and
xchg
cli
rol
inc
inc
aam
fisubrl
ret
ror
mov
int
mov
shrb
pop
into
lcall
pop
jo
or
lcall
mov
or
push
xlat
push
push
aaa
xchg
out
aaa
decb
lea
mov
push
cmp
cmpsb
inc
sub
ss
adc
or
jg
repnz
adcb
inc
push
fcoml
sarl
push
inc
adc
popl
into
stos
jmp
mov
dec
inc
lods
mov
and
mov
pop
cmpsb
sub
mov
jns
dec
push
and
icebp
sbb
js
cmpsl
mov
dec
fmuls
cld
mov
sub
cmp
fisubrl
jo
sub
fcoms
adc
addb
movsl
push
test
out
es
aam
rolb
data16
lcall
push
loope
or
loope
mov
dec
outsb
pop
aad
mov
ret
xchg
sub
sub
je
lret
pop
inc
call
jmp
xor
and
addr16
nop
pushf
subb
inc
xlat
add
call
ljmp
arpl
test
into
xchg
inc
mov
jb
dec
out
call
lcall
pop
ffree
lret
adcl
push
push
or
xchg
repnz
inc
cmp
test
in
fists
pop
dec
jo
testb
fistps
dec
mov
cmpsb
rorb
aam
jge
mov
inc
mov
fwait
push
sahf
stc
fadds
push
or
adc
stc
adc
mov
xchg
adc
test
or
cmpsb
loope
imul
icebp
stos
or
sbb
pop
aam
rorb
filds
rolb
sbb
mov
xchg
fiaddl
ficoml
adc
mov
xadd
push
push
sahf
data16
xchg
test
xor
icebp
cmp
mov
js
sahf
in
andb
sbb
and
lods
push
cmp
outsb
movsb
xchg
inc
out
mov
jl
xor
fwait
not
in
push
repz
shll
les
es
iret
das
jne
or
rolb
and
lods
ljmp
xchg
lds
mov
stos
pop
data16
sbb
ja
js
repnz
sub
in
pop
and
sbb
inc
test
inc
nop
rorb
xor
xor
subb
test
xor
shll
addr16
pop
mov
jmp
adc
stos
cmp
and
and
inc
ret
or
and
into
add
sbb
les
and
or
call
pop
jl
pusha
addl
pop
pop
mov
lret
xchg
cwtl
dec
xor
sbb
cmp
iret
in
xchg
cmpsb
adc
mov
xor
pop
dec
mov
add
add
xlat
inc
jo
out
mov
cs
push
or
and
mov
fisubl
jmp
adc
lock
icebp
xor
cwtl
and
and
jge
mov
pop
lcall
lret
rcr
mov
cmp
lret
or
adc
jp
lods
pop
out
cmp
mov
mov
xchg
loop
xor
xchg
fcmove
lcall
mov
push
jae
addr16
mulb
les
inc
jo
fnstcw
inc
fists
mov
ret
or
stos
mov
mov
rclb
xchg
jae
sbb
xchg
cmp
pop
sbb
fcmovb
mov
jo
popa
xchg
push
test
ret
mov
push
pop
inc
mov
jbe
nop
or
mov
inc
xchg
mov
xorb
xchg
xchg
aad
clc
and
je
xor
sub
jnp
push
dec
int3
out
ds
mov
jl
sub
pop
subb
and
test
jecxz
shlb
fisubl
jmp
ja
iret
getsec
jp
in
enter
enter
cmp
mov
pop
in
iret
arpl
xor
orb
jns
mov
sbb
roll
test
inc
inc
xchg
cmp
inc
mov
cld
notb
in
mov
pop
push
jnp
and
cmp
push
inc
cmp
mov
push
shrb
xor
adcb
fwait
sub
xchg
mov
fisubrl
cmp
sbb
mov
dec
xor
cmpsb
iret
out
and
sbb
lds
sbbl
bound
enter
arpl
push
or
xor
mov
arpl
mov
xchg
addr16
sets
or
xlat
ljmp
jmp
mov
movsl
add
div
xor
popf
fst
int3
popa
xchg
pop
xchg
lds
xlat
pop
pop
sbb
ret
push
dec
fs
and
out
sub
dec
imul
inc
je
lret
sub
push
js
js
mov
into
cmpsl
pushf
test
loopne
mov
ret
mov
ret
insl
pop
pushf
adc
jbe
cmpsb
mov
jmp
add
jne
js
in
mov
xlat
cmp
out
loope
and
das
hlt
dec
adc
insb
les
ret
push
fsubrl
jge
mov
sbb
loopne
add
push
or
stos
cmp
stos
mov
call
mov
mov
jge
shrl
cltd
mov
scas
addr16
lock
stos
xor
rep
pop
sub
fnstsw
mov
stc
mov
cmp
dec
pop
sbb
pop
mov
andl
adc
out
out
mov
push
ficompl
movsl
lock
lods
mov
xchg
sbbl
mov
lds
jae
je
inc
jle
mov
mov
adc
push
stc
sub
pop
push
je
filds
jg
pop
dec
xchg
mov
pop
add
push
out
scas
cmp
rcr
inc
xor
pop
jnp
adc
es
test
xor
ja
sbb
inc
les
jg
icebp
sub
rcll
gs
out
inc
mov
add
aaa
pushf
mov
and
shll
pop
scas
xor
mov
nop
sar
cltd
xorl
das
push
icebp
fs
add
xchg
enter
sub
pop
sbb
leave
in
inc
lahf
out
imul
into
int3
into
into
mov
into
in
test
mov
das
fmull
sbb
xchg
into
and
inc
ret
stos
repz
dec
cmp
lock
mov
and
mov
or
cmp
cltd
inc
xchg
or
call
mov
jo
clc
push
xchg
cmp
cmp
test
popf
mov
into
cmp
dec
gs
sub
std
ljmp
mov
scas
or
inc
dec
adc
cmp
pop
jno
mov
push
andb
ja
inc
add
fmuls
push
or
dec
rolb
xchg
lahf
sarb
cltd
mov
pop
pusha
mov
out
pop
sbb
cltd
xor
mov
add
mov
or
jle
mov
cli
mov
std
out
mov
xchg
testl
daa
pop
pop
insl
pop
jge
or
inc
cmp
xchg
in
xchg
testl
daa
pop
pop
insl
pop
jge
or
inc
cmp
xchg
in
xchg
testl
daa
pop
pop
insl
pop
jge
or
inc
cmp
xchg
in
xchg
testl
daa
idivl
test
loop
sarb
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jmp
movsb
xorl
lods
hlt
jbe
and
and
xor
inc
and
inc
je
test
mov
in
mov
add
adc
and
xor
sub
push
fs
je
test
mov
cli
aam
in
hlt
xor
aaa
jg
ja
pop
adc
add
or
pop
ret
mull
mov
in
shl
outsl
cmp
out
popa
out
dec
pop
add
sub
clc
xchg
xor
sbb
and
or
cli
jo
jmp
xor
push
iret
inc
xor
mov
test
mov
int3
loop
rcll
mov
inc
jge
mov
push
stc
loope
int3
arpl
mov
jae
or
addr16
cmp
dec
jmp
mov
xor
push
lock
lret
cmp
mov
aam
sti
fcompl
fildl
xor
pop
bound
mov
sbb
mov
hlt
dec
lds
xor
call
inc
in
faddl
and
fs
popa
jae
mov
mov
stc
aam
in
hlt
sub
adc
and
xor
inc
jnp
push
fs
sbb
mulb
mov
inc
jge
adc
pop
pop
pop
xor
sbb
mov
mov
test
cwtl
mov
dec
and
ja
push
push
sub
push
and
inc
sbb
rclb
mov
jecxz
shl
ret
hlt
xor
adc
and
xor
inc
arpl
inc
je
test
mov
in
hlt
xor
adc
and
xor
inc
arpl
inc
je
test
lret
jbe
mov
cmp
mov
in
push
in
fs
iret
lcall
mov
ret
lahf
mov
pop
dec
rclb
enter
inc
add
pushf
cli
es
ljmp
arpl
cli
cli
mov
xchg
leave
cwtl
sub
push
aam
ret
and
jae
mov
pop
lds
lods
cmpsb
fcoms
out
or
ret
push
cmp
sbb
mov
int
sbb
cmpsl
push
dec
xchg
shll
lea
scas
pop
mov
sub
jp
push
imul
inc
mov
push
sbb
ret
push
cmp
popf
stc
mov
lea
mov
fisubrl
mov
js
jg
xchg
pop
icebp
sbb
mov
push
pop
insl
fmul
dec
mov
repz
sbb
adc
call
std
std
fsubl
daa
pop
ja
mov
mov
jg
mov
mov
negl
and
xor
mov
inc
int3
jle
out
lea
mov
cmp
aas
sbb
dec
mov
out
jecxz
fsubrp
xchg
ret
jno
sti
sub
repnz
mov
mov
mov
jb
cmpsb
fisttpll
ja
or
outsb
rcrb
shll
test
pop
or
mov
ret
imulb
outsl
push
xlat
jmp
adc
or
xchg
and
std
mov
into
mov
fdivs
cmp
sbb
sub
repnz
sbb
push
stos
iret
mov
or
adc
insl
inc
inc
pop
mov
je
add
mov
mov
and
js
add
lahf
jno
xchg
sbb
rcrl
ret
enter
shr
test
fbld
lds
out
mov
mov
data16
dec
dec
sbb
test
fildll
cmp
jne
mov
mov
sub
cltd
jge
sbb
mov
xchg
jb
or
xchg
sbb
inc
out
dec
dec
push
out
dec
lret
popa
fisttpll
insb
inc
hlt
sub
inc
aas
ljmp
lahf
cmp
or
push
out
mov
aaa
loope
xchg
dec
pop
shll
xor
dec
jmp
loop
popf
inc
out
mov
fdecstp
test
faddl
xor
jno
dec
aas
bound
mov
scas
xchg
loope
addr16
jae
addl
mov
mov
out
roll
mov
aaa
nop
dec
aaa
andb
and
daa
add
or
pop
or
push
dec
lods
out
gs
cltd
aam
jb
dec
ds
aad
mov
jae
push
arpl
in
lret
or
inc
daa
bound
adc
imul
fisubrl
mov
push
adc
rclb
sar
sub
insl
cmp
out
pop
nop
mov
icebp
test
push
out
mov
ret
add
test
cmpl
scas
fsubrs
repz
mov
test
sbb
and
cmpsl
cli
fidivs
ret
shrb
sbb
inc
mov
add
leave
mov
int3
repz
mov
mov
jmp
dec
add
sub
aaa
mov
dec
cmp
jbe
shrl
gs
and
std
jno
xor
in
jp
popf
cmpsb
xchg
jae
push
in
test
add
lahf
fisubrs
inc
cmpl
jae
gs
movsb
ss
daa
pop
sbb
int
and
cmpsb
xchg
mov
jge
inc
fmul
enter
and
jp
cmpsb
jecxz
loop
mov
fstps
dec
repnz
mov
testl
insb
mov
and
movsb
adc
pop
and
sbbl
and
and
icebp
push
cmc
inc
daa
push
test
or
xchg
stos
jecxz
imul
mov
out
sub
or
mov
sbb
cmp
dec
int3
cltd
popa
push
jg
mov
jle
das
inc
js
push
pop
dec
les
in
xchg
aam
sub
cli
fimull
lea
add
fcomps
sub
in
jg
fwait
es
or
xchg
inc
dec
aaa
xor
cmpsl
pop
sub
xor
mov
loopne
pop
lds
cli
inc
mov
or
std
mov
outsb
jle
scas
pop
orl
pop
cmpsb
bndldx
xor
int
loopw
inc
nop
lea
cmp
jle
pop
cli
lods
sbb
add
ret
inc
push
cmp
loopne
jge
or
cmp
mov
not
cld
and
lds
mov
lds
sub
hlt
in
mov
test
adc
inc
adc
into
sti
sub
cmp
or
sub
pop
add
fsincos
js
nop
xchg
add
out
push
jmp
push
lock
movsb
cmp
ds
xor
mov
mov
dec
cmp
movsl
repnz
insb
adc
sti
cmc
lcall
in
enter
daa
movb
jno
hlt
cltd
sbb
out
test
cmc
mov
pop
scas
pop
adc
loop
addr16
add
fwait
pop
loopne
fs
inc
pop
xchg
test
xchg
add
mov
add
push
ret
in
mov
andl
cwtl
mov
aam
jb
dec
loope
neg
insb
adc
mov
sbb
ret
add
ljmp
or
int
pushf
mov
outsb
mov
out
enter
fs
adc
dec
hlt
lcall
cli
or
mov
andb
sbbl
mov
dec
lods
hlt
xchg
lahf
imul
in
xchg
adc
and
or
push
cmpsl
fisttpl
insb
ja
stos
jle
push
jnp
ret
sbb
mov
out
xorl
add
mov
mov
subb
push
leave
loop
xlat
push
outsl
push
xor
pop
push
mov
and
aad
and
fldt
arpl
jae
mov
sub
jo
gs
jae
sbb
enter
sub
in
cld
inc
add
mov
fs
imul
pop
adc
dec
mov
outsl
xor
jno
les
rol
mov
or
jbe
push
cld
or
ss
inc
pop
jg
mov
xchg
sub
pop
pop
lods
in
arpl
cld
out
push
fisubrs
jb
cltd
sti
lcall
mov
push
push
aaa
data16
fstps
pop
pop
sub
out
call
pop
adc
sub
push
or
ss
out
jb
iret
pop
jbe
sbb
outsl
ret
add
sarb
gs
int
push
in
jae
push
xor
dec
cmp
cld
rcrb
push
mov
sub
cmp
lret
xchg
inc
jmp
cmp
cmpl
push
nop
jle
jp
iret
or
pop
jb
jg
fucom
mov
push
sub
sbb
mov
mov
pusha
aaa
lds
adcl
cli
mov
aad
pop
inc
or
sub
in
mov
jae
mov
and
lret
lcall
adc
adc
xlat
movb
mov
mov
adc
fldcw
jle
fwait
add
or
ljmp
xor
xchg
jbe
rcrb
dec
mov
das
and
leave
insb
xchg
pop
hlt
cwtl
xor
xchg
arpl
or
push
sarl
lods
adc
mov
in
mov
sbb
mov
mov
fcmovnb
ss
pop
cmc
in
jp
repnz
rcrb
pop
test
ljmp
lea
ja
jg
rol
pop
aaa
stos
or
sbb
sub
sub
scas
shrl
lea
stc
or
jns
jge
jp
int3
orb
fs
pop
adc
add
sti
pop
push
xor
das
lahf
int3
push
dec
push
ja
test
push
sub
xchg
xchg
data16
jecxz
ljmp
inc
and
pop
mov
pop
push
out
fidivs
mov
iret
sub
push
mov
or
jp
mov
xor
shl
and
xchg
pop
cwtl
xor
rcrl
cs
testl
mov
or
cs
adc
or
popf
sti
dec
or
dec
jbe
cmp
push
jle
mov
cmpsl
dec
jge
push
adc
ljmp
dec
dec
rcrb
loope
or
pop
sbbb
jo
ret
dec
dec
int
jbe
sar
inc
into
push
pop
pop
pop
mov
sbb
icebp
pop
popa
pop
mov
cmc
pop
rol
js
mov
or
stos
inc
jbe
fxam
jp
movsl
inc
dec
mov
mov
jnp
sti
cmp
fs
sbb
and
lea
cmp
cld
cld
into
jle
fimuls
in
inc
cmpsl
adc
std
adc
adc
cmpsl
loope
loopne
mov
btc
and
inc
mov
inc
push
icebp
aaa
add
rolb
add
adc
jmp
js
fpatan
sbb
xor
into
loop
ds
mov
test
rcll
mulb
test
data16
push
ljmp
mov
sub
xlat
xchg
add
push
mov
jno
push
movsb
xchg
insl
insb
lock
pushf
addr16
mov
push
sub
mov
mov
in
dec
js
sub
scas
jb
and
mov
adc
push
mov
inc
push
stos
sbb
out
into
negl
test
imul
mov
daa
push
faddl
sub
or
xchg
lea
insb
fcompl
das
jbe
mov
inc
inc
ret
loope
push
das
and
movsl
shrl
out
sbb
aaa
xor
dec
cli
mov
jl
add
xor
sbb
jbe
ss
in
inc
pop
int
jg
sub
jp
nop
icebp
out
js
aad
xorl
aad
xlat
push
enter
mov
or
mov
push
cltd
push
repz
mov
jle
adcl
mov
ja
repnz
or
fs
cmp
aas
into
jbe
jle
lock
mov
add
sbb
pop
push
in
fisttps
pop
sub
xchg
outsb
js
mov
int
inc
mov
add
int
xor
sub
bound
shll
dec
jnp
roll
rcl
inc
or
dec
test
incb
out
mov
or
xchg
leave
sarb
mov
inc
mov
or
clc
fmuls
test
adc
dec
test
xor
lods
push
mov
test
inc
jo
pop
sysret
dec
push
dec
les
pop
cmpsb
loopne
pop
xlat
jle
or
jmp
push
adc
cwtl
jo
adc
xchg
jne
leave
mov
scas
inc
add
je
pop
outsb
jbe
in
test
push
xor
sbb
insl
push
push
enter
push
adc
scas
xchg
mov
xchg
cmovb
adc
ss
lahf
mov
fisttpll
lods
jo
div
out
jnp
sub
les
mov
das
mov
fnstsw
jg,pn
dec
sbb
push
mov
ja
outsl
mov
xchg
xchg
or
jb
outsl
cltd
sub
stos
aas
cltd
jnp
jle
fidivrs
es
aas
jo
cmc
fcompl
movsb
fs
das
cvtdq2ps
dec
or
mov
hlt
mov
push
xchg
cmp
cmp
in
out
sbb
addr16
cmc
jb
jl
fcoms
push
mov
xor
inc
jge
jne
adc
leave
pop
es
enter
call
mov
nop
arpl
gs
push
jp
sbb
lds
loop
add
mov
or
and
jae
scas
fildll
xor
das
ds
adc
push
inc
cld
xchg
call
mul
pop
lods
mov
xchg
jnp
out
sub
or
fnstenv
inc
ret
sarb
push
xchg
and
aad
adc
jns
lods
loop
pop
subb
cmp
in
dec
sub
ja
cs
jnp
cmp
push
xchg
mov
cmp
lods
sub
popa
cmp
inc
je
cltd
nop
imul
aam
jle
mov
xchg
jg
adc
and
xchg
idivl
jnp
stos
out
dec
pop
mov
lcall
mov
push
or
decl
xor
xchg
push
fs
subl
push
js
sbb
mov
cltd
or
xchg
and
call
lea
or
mov
mov
sbb
dec
adc
sub
or
scas
dec
xor
and
xchg
fldt
pop
xchg
enter
pop
hlt
inc
aas
inc
or
imul
mov
cmp
and
ret
jo
mov
test
repz
jl
es
mov
pop
sbb
out
mov
dec
and
add
jns
shl
out
mov
arpl
jne
xor
pop
or
xchg
or
dec
push
scas
dec
push
stos
arpl
dec
mov
loopne
pop
mov
and
cld
mov
adc
mov
xor
xor
cmc
outsb
sub
daa
lcall
dec
mov
lret
sub
mov
and
sbb
sub
and
fidivs
bound
mov
scas
cltd
int3
adc
xchg
mov
je
inc
mov
mov
in
cmp
out
inc
dec
mov
and
cmp
ljmp
sub
setae
popf
fbstp
out
rcll
jmp
jae
outsb
cs
adc
jb
cld
and
sbb
lret
mov
inc
lods
ror
push
cmp
sub
jae
cmpsb
xor
sbb
aaa
xchg
mov
fwait
dec
aas
lahf
xchg
or
push
xlat
ficomps
shrb
jmp
jne
nop
xchg
mov
xchg
jmp
mov
sub
pop
or
aad
mov
mov
pop
sub
push
inc
push
push
ds
and
inc
add
mov
das
pop
aaa
fs
das
ret
jge
jbe
push
or
lahf
mov
xchg
pop
imul
cwtl
or
arpl
fdivrl
and
mov
dec
sub
xchg
pop
ret
jp
int3
mov
lret
add
sahf
dec
ljmp
lcall
enter
pop
ret
mov
add
mov
push
cmp
inc
jg
cltd
mov
enter
ja
jae
imul
fiaddl
push
jmp
aaa
stos
sbb
sbb
xchg
adc
and
shll
cltd
int3
xor
call
push
mov
xchg
cmp
mov
cli
in
sti
test
je
lret
in
lock
mov
inc
int
lahf
ficoml
movsl
sbb
cmc
or
sbb
inc
test
pop
outsb
inc
in
scas
js
out
inc
inc
adc
push
add
into
cwtl
fnsave
es
repnz
cmpsb
cs
ljmp
and
xor
pop
inc
stos
std
jns
push
mov
ret
sbb
mov
push
jo
jnp
lret
arpl
jp
xor
arpl
xorl
sbb
or
stos
or
shll
fstl
rol
loopne
xchg
repz
cmpsb
cli
cld
cmc
cmp
fnstcw
cmp
aaa
fs
jno
adc
add
mov
fwait
xchg
stc
and
mov
push
jle
push
dec
inc
jmp
and
xchg
popf
sub
pop
push
aad
and
lock
sub
dec
sti
mov
sti
movsb
popa
mov
fists
jp
jp
xchg
push
arpl
dec
xchg
lock
sub
mov
cmp
cmp
push
movb
fldcw
int
inc
jp
pop
adc
mov
xchg
or
dec
jmp
add
cs
fwait
or
sarb
sub
jno
inc
inc
imull
mov
lcall
sub
int
adc
popf
pusha
and
out
movsb
mov
loope
sub
xchg
ja
add
or
add
add
jnp
dec
imul
stos
mov
sbb
mov
inc
std
inc
inc
push
pop
jb
cld
xchg
cmp
insb
cmovge
sbb
push
adc
or
push
aam
pop
inc
push
lods
jmp
push
out
xor
clc
mov
fists
ffree
inc
add
jb
frstor
mov
loop
and
outsl
xor
imul
cwtl
rclb
stc
fs
jmp
dec
push
cmp
adc
inc
out
mov
ret
ja
mov
shll
sbb
in
add
fsubrs
mov
cmp
cli
out
fs
xlat
mov
mov
push
loope
cmp
dec
sub
sbb
jne
or
int3
lret
add
in
sub
and
cli
lcall
dec
push
adc
and
push
adc
mov
sbb
in
add
dec
mov
imul
or
cld
dec
cltd
xchg
adc
sbb
ret
push
cmpl
adc
mov
dec
movsl
repnz
inc
in
nop
sbb
xor
iret
pop
mov
seto
jg
lret
nop
out
cmp
jmp
add
jmp
add
orl
and
dec
scas
xchg
not
ss
inc
xor
mov
ljmp
push
addb
xor
mov
pop
and
or
lcall
sub
leave
push
negb
add
mov
ja
push
mov
lea
cld
ds
in
dec
nop
fmull
and
mov
mov
jge
out
pop
push
and
pop
mov
sub
xchg
loopne
mov
xor
in
cwtl
mov
js
imul
sti
aam
inc
pop
mov
leave
inc
jge
xlat
hlt
mov
fildll
subl
xlat
ljmp
aad
imul
sbb
jmp
andps
add
mov
mov
add
dec
sbb
lock
push
mov
push
sbb
jo
jne
mov
lds
cmpsl
adc
adc
in
push
and
addl
punpcklwd
lcall
lret
aad
cmp
cmpsb
sahf
lods
inc
outsb
incl
inc
les
dec
fldenv
adc
sbb
jb
jge
lds
rcrl
dec
js
sub
jg
imul
shl
fdivl
movsl
popl
fldenv
mov
fisttps
mov
cmpsb
pop
cli
cmp
psllw
popa
pop
mov
dec
cmp
inc
pop
cld
inc
jae
lahf
jle
xor
das
xchg
outsl
loop
pushf
pop
dec
inc
enter
inc
mov
xor
les
fisttps
sbb
mov
sub
insb
lret
push
cli
adc
push
and
stos
mov
push
fdiv
xchg
cld
xor
cltd
imul
stc
cmpsb
dec
outsb
test
repz
rcll
add
adc
js
push
mov
dec
mov
lret
or
sbb
mov
and
xchg
add
push
xchg
mov
je
pop
scas
cli
jp
add
call
jbe
and
pop
ds
lock
hlt
inc
inc
jb
pop
mov
fwait
mov
sbb
scas
leave
ja
mov
in
shll
dec
clc
rcll
jb
cmp
mov
add
adc
mov
clc
popa
ret
fs
sbb
xchg
pushf
sar
mov
cmpsl
pop
fistpll
xchg
mov
in
xchg
cs
icebp
andb
sub
cwtl
inc
xor
insb
xchg
les
cmp
popf
mov
int
cld
push
inc
gs
shrd
repz
cs
jnp
ljmp
fsubs
repz
xor
mov
dec
mov
adc
lds
sbb
fwait
pop
sbb
out
aad
dec
loope
loop
mov
fistpl
outsl
mov
cmc
dec
jmpw
loop
jecxz
in
sarb
sub
orl
mov
les
xor
cmp
movsb
adc
data16
mov
movsb
rcl
hlt
or
pop
enter
and
cmpsl
js
roll
dec
ljmp
mov
ret
clc
inc
lret
adc
lcall
jne
mov
bound
aaa
pop
popa
or
sbb
mov
insb
sbb
inc
sub
xchg
ret
jno
xor
rcrl
bound
cmp
xchg
xchg
xor
repnz
mov
add
mov
ljmp
cld
into
jl
pop
sahf
shl
loop
mov
cmpsb
mov
leave
test
push
sbb
dec
pop
cmp
stos
arpl
mov
dec
inc
sub
lahf
push
cmpsb
arpl
in
mov
movsl
xor
call
sbb
xorl
ret
hlt
xor
adc
and
xor
inc
arpl
inc
je
test
mov
in
hlt
xor
adc
and
xor
inc
arpl
inc
je
test
mov
in
hlt
xor
adc
and
xor
inc
addr16
push
fs
xchg
mov
in
hlt
int3
add
mov
add
jmp
lods
fwait
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
das
inc
scas
stos
lahf
fwait
mov
iret
test
cmp
daa
push
or
or
outsb
imul
dec
mov
fwait
mov
sti
out
jmp
fcmovne
lret
aas
cmp
sub
ud2
jg
outsl
mov
mov
orl
ffreep
iret
sarl
fsubrs
adc
push
sbb
push
add
iret
mov
filds
je
iret
xor
sub
adc
pop
pop
jae
sti
push
or
and
ljmp
adc
dec
mov
orb
nop
ds
pop
mov
cmp
nop
out
out
sti
lods
gs
scas
mov
jmp
cmpsl
lock
imul
js
scas
stos
mov
fcmovnb
sub
or
das
imul
push
sti
out
lahf
sub
dec
roll
inc
adcl
fs
mov
lret
pop
sub
ud2
sub
pop
out
pop
mov
inc
mov
dec
adc
shll
daa
loope
inc
sarb
aas
push
sbbb
sub
pop
movsb
dec
pop
loopne
scas
mov
sti
out
jmp
ret
aas
and
xor
add
adc
outsl
jl
pop
dec
das
lret
fsubrp
stos
repz
cwtl
mov
cmpsb
push
push
popf
push
jo
imul
cmp
pop
cmp
loopne
in
stos
jmp
mov
mov
inc
dec
outsl
push
xor
sbb
getsec
push
cs
cli
or
mov
fcmovne
lret
aas
cmp
sub
sbb
or
outsl
imul
dec
mov
fwait
mov
sti
out
jmp
fcmovne
lret
aas
cmp
sub
sbb
or
outsl
imul
dec
mov
mov
in
lods
cmp
sub
push
pop
jle
cmp
jbe
aas
dec
movl
clc
and
inc
mov
dec
daa
nop
daa
fisubs
dec
mov
xlat
pop
aad
inc
dec
or
enter
adc
pop
mov
jge
pop
add
mov
jmp
cmc
inc
aam
fistl
inc
push
or
shl
jo
xchg
push
adc
mov
sbb
hlt
and
mov
pop
and
push
add
xchg
cltd
cli
aam
pop
outsl
jae
ret
mov
xchg
dec
test
mov
sarb
cs
and
add
sub
lods
inc
stos
ja
xor
mov
inc
lahf
fs
pushf
mov
outsb
cmp
pop
inc
jae
mov
das
lock
mov
add
mov
jmp
xchg
xor
jle
sti
hlt
lds
dec
and
ja
and
mov
out
fisubrl
mov
je
pop
daa
and
pop
movsl
ljmp
jg
xchg
loop
nop
jne
je,pn
inc
js
cmp
andl
sub
xor
pop
popa
sti
mov
inc
je
in
inc
dec
psubb
dec
scas
sub
out
dec
out
jecxz
mov
into
or
int
jge
into
shrl
inc
adc
cmp
mov
mov
pop
xchg
adc
hlt
fsubs
mov
adc
add
push
int
xchg
mov
push
fs
hlt
loop
mov
cltd
jns
inc
sbb
out
mov
add
fwait
loop
xor
pop
out
mov
mov
rol
test
hlt
aaa
es
aaa
lods
into
push
add
pop
adc
data16
cltd
loope
push
xchg
test
mov
mov
jnp
pop
imul
sbb
add
ss
lock
mov
mov
sbb
rep
cmp
pusha
pop
pop
push
out
add
xlat
add
jp
and
data16
insb
outsb
out
int
lret
mov
xor
adc
aas
enter
inc
in
ss
fisttpll
xchg
cmp
xlat
mov
add
adc
rorl
es
sbbb
dec
lret
dec
xor
or
push
jl
jp
and
xchg
inc
and
les
xor
movsb
cmpsb
and
test
pop
cmpsl
cli
stos
inc
sub
mov
jns
pop
aam
daa
xchg
pop
stc
stos
movsl
xor
lret
dec
inc
adc
lods
jb
xchg
mov
mov
imul
mov
repnz
pop
daa
mov
sub
int
pop
aaa
inc
incl
into
lea
lret
sahf
adcl
add
movsb
push
les
xchg
sti
fisttpl
fidivl
iret
movb
or
adc
out
xrelease
dec
aas
adc
cmpsl
in
imul
push
inc
add
push
bound
insl
idivl
sub
inc
cs
adc
out
filds
mov
sarb
ljmp
add
dec
mov
jecxz
ss
cmp
sbb
and
push
js
jg
push
push
push
pop
repnz
insl
lahf
frstor
pop
int3
adc
cmp
add
pop
addr16
adc
cmc
mov
sub
stos
out
ljmp
inc
stc
jne
inc
mov
outsb
daa
inc
out
sbb
dec
dec
mov
das
jge
hlt
test
out
or
mov
or
lods
pop
lret
stc
fwait
cmpsl
test
cs
xchg
test
xchg
add
mov
xlat
jecxz
pushf
xchg
mov
inc
mov
jle
and
sub
mov
push
arpl
imul
roll
mov
jae
ljmp
cmpsl
js
fisubs
add
cmpsl
and
cltd
push
int3
dec
sbb
sub
push
cmp
mov
cmp
les
pop
mov
and
cwtl
sar
stos
and
mov
pop
pop
stos
add
movsl
les
mov
jp
push
in
jbe
sbb
pop
test
xor
test
inc
inc
ljmp
fcomps
and
and
mov
arpl
mov
mov
jecxz
aad
pop
xchg
dec
jns
push
fidivl
xor
inc
je
or
xchg
adc
popa
xor
push
fsubs
ror
cld
call
mov
xchg
addr16
stos
xchg
jecxz
mov
adc
inc
or
xchg
lahf
inc
lods
aas
push
sbb
insb
mov
dec
insl
mov
fwait
rclb
leave
add
scas
jmp
fwait
or
xor
push
xchg
gs
jmp
mov
add
in
vmulsd
shlb
jne
add
adc
fisubs
bound
divl
xchg
push
and
pushf
jl
xor
repz
xchg
out
push
cmp
sbb
mov
jo
push
dec
mov
adc
xor
out
cs
xor
fadds
subl
das
xor
movsb
push
insl
adc
mov
mov
pop
enter
fidivrs
inc
fcoms
add
xor
rorb
or
inc
mov
movsb
push
inc
mov
shll
clc
subl
push
ret
and
dec
clc
and
mov
mov
sbb
and
and
pop
fdivl
cmp
sarl
lods
leave
fstpl
xchg
das
aaa
aam
inc
nop
lahf
mov
mov
sbb
jne
insb
insl
ljmp
int3
cwtl
inc
stos
mov
xchg
ficoml
jge
push
adc
xchg
and
pop
jae
inc
popa
inc
fsubl
sahf
arpl
data16
fwait
mov
push
mov
jnp
add
push
in
mov
or
adc
lahf
sub
scas
scas
add
loopne
mov
xchg
mov
pop
imul
ja
cmp
push
pop
outsb
inc
cmp
stos
sub
xchg
inc
movsb
pop
ljmp
mov
jg
pop
fstpl
jg
dec
ljmp
cmpsl
je
dec
fsts
les
out
pop
cmc
cmc
insb
push
xchg
cli
nop
pop
enter
loopne
aad
jmp
inc
lret
test
stos
sbb
cmp
outsb
jl
stc
jbe
daa
rcrb
call
out
rorl
mov
push
add
xchg
out
lret
imul
jb
xor
and
sbb
adc
or
xor
stos
xor
and
pop
stc
inc
xchg
xor
inc
ret
addr16
stc
in
mov
xor
shll
mov
scas
aam
push
in
jns
out
fidivs
mov
shlb
repnz
xor
mov
mov
add
out
pop
add
xor
test
inc
dec
adcl
clc
mov
int3
push
lock
pop
test
jno
mov
sub
roll
inc
push
cmpsb
pushf
sbbl
sub
or
push
lret
pop
test
bound
insl
popa
out
xchg
sbb
dec
jno
push
xchg
aas
insl
sub
std
xor
mov
push
arpl
jle
or
mov
scas
out
sbb
pop
adc
lcall
jo
xchg
adc
add
sbb
nop
cmc
pop
into
add
xchg
addl
adc
sbb
mov
adc
sub
add
ret
out
pop
daa
je
imul
notl
fdivrs
and
cmpb
sbb
pop
xchg
xchg
sub
adc
dec
int3
repnz
mov
out
mov
pop
dec
mov
divl
iret
xor
scas
loopne
sbb
mov
jo
pop
sar
push
mov
xchg
mulps
adc
lahf
lahf
push
gs
scas
arpl
xor
and
int3
xlat
push
lahf
mov
pop
xchg
xor
add
push
ja
push
std
icebp
mov
mov
xchg
mov
inc
push
jbe
xchg
stc
xchg
mov
mov
fwait
test
popa
xchg
mov
inc
cli
or
jbe
jnp
pop
fwait
imul
cmp
lock
jg
icebp
jnp
xor
loopne
stos
fscale
test
icebp
xor
gs
aaa
rcrb
xchg
std
stc
xchg
in
into
int
sub
xlat
lea
push
or
inc
hlt
rolb
out
add
roll
sti
loope
push
sub
push
inc
add
movsl
pop
push
adc
iret
pop
stos
mov
idivl
adc
mov
cmp
stc
push
test
and
jne
cmpl
or
mov
in
xor
mov
inc
das
xchg
mov
mov
mov
addr16
shll
loop
jge
sbb
jne
fstpl
test
leave
inc
lods
into
int
xchg
clc
insl
mov
ss
out
push
outsl
int3
xlat
nop
xor
sarb
push
mov
xchg
xchg
push
sub
rorl
adc
icebp
push
mov
ss
sub
dec
movsb
gs
cmp
outsl
jp
call
cmpl
cmp
jo
pop
jbe
lret
adcb
jmp
ret
dec
fiadds
or
push
stc
mov
stc
xchg
xchg
lahf
cmp
or
add
push
and
push
mov
in
cs
xchg
fsubl
mov
sbb
lret
call
test
push
jg
mov
jae
aas
push
int3
cmp
push
daa
das
mov
roll
int3
lods
repz
cmpsb
ss
cmc
daa
inc
and
add
movsb
and
or
dec
jmp
xchg
insl
mov
push
sub
stos
or
or
xchg
in
lods
clc
jb
push
inc
loope
and
inc
andl
fsubrl
xor
ja
icebp
mov
hlt
jg
leave
and
pop
add
mov
xor
mov
mov
cli
call
enter
js
pop
inc
and
dec
ss
outsb
sti
mov
jb
movsb
push
js
movsb
pop
xor
out
inc
fnstenv
ret
xchg
xchg
lahf
int3
test
jnp
xchg
pop
loope
push
jb
xchg
shrl
lret
jl
mov
test
pop
loopne
xchg
cmp
lods
pop
sbb
rorl
jecxz
mov
cli
sbb
fxch
fisubs
pop
xchg
cli
pop
sub
gs
test
sbb
sbb
sarb
mov
in
sbb
sarl
adc
je
je
mov
mov
jnp
cltd
or
or
out
ja
in
fldt
lret
inc
dec
cmp
inc
mov
pop
jae
popf
fs
lcall
push
arpl
push
jmp
jns
add
aas
xchg
inc
in
dec
sub
jmp
xchg
add
test
dec
aad
xlat
lods
ja
sbb
mov
pop
cmp
inc
cltd
cmpl
pop
jg
dec
mov
insb
push
jmp
xchg
nop
sbb
sub
in
in
nop
aad
adc
mov
lahf
pop
jae
mov
in
push
or
sub
xor
and
gs
std
mulb
cld
mov
mov
loop
adc
push
enter
adc
fcomp
push
pop
cmp
subb
add
popa
sub
inc
lcall
ljmp
das
mov
jns
mov
in
sti
pop
jge
aam
call
jmp
mov
insb
imul
fisttpll
jl
sbb
mov
jns
ror
imul
jg
or
or
into
inc
xchg
clc
sbb
mov
int3
arpl
cmp
dec
push
mov
movsb
xchg
fildll
dec
loope
ficoms
loop
ss
ljmp
adc
sub
cwtl
add
mov
insb
sub
push
insb
mov
jo
sbb
std
sbb
xor
orb
dec
cmp
sar
pop
sarb
add
fidivs
xlat
adc
lret
cld
aas
and
jg
in
mov
sar
jg
popa
and
mov
sub
stos
lcall
lea
pop
dec
in
int
inc
movsl
or
sarl
cmpsl
jg
out
pop
add
sub
add
dec
mov
scas
pop
cmp
mull
jnp
icebp
ficoml
sub
mov
faddl
mov
lahf
hlt
push
movsl
pop
mov
cs
loopne
xor
mov
or
xchg
pavgb
fstpt
dec
sbb
inc
repz
adc
pop
inc
push
push
movsl
lret
xlat
xchg
dec
push
jns
push
shlb
ds
pusha
mov
in
sub
xchg
cld
les
lret
and
sbb
mov
inc
inc
jae
adc
ret
scas
and
icebp
jae
andl
lret
cmp
jne
add
shrl
rcll
inc
pop
lods
test
mov
add
movsl
xor
icebp
cmp
lock
into
iret
xchg
sbb
mov
loope
xlat
gs
sahf
lods
repz
cs
std
adc
test
cli
int
jbe
sbb
das
mov
clc
outsb
loopne
repz
out
inc
lods
test
mov
ja
add
orl
sbb
mov
xchg
sti
xchg
test
loope
dec
fisubrs
adc
push
dec
dec
pusha
jmp
sub
mull
add
inc
push
addr16
mov
adc
dec
testl
loope
mov
cmpsb
ret
movsl
inc
sarb
jmp
or
sbb
cmpsb
adc
mov
das
dec
aaa
xchg
fisttpll
cli
iret
sub
mov
sub
jnp
adcl
mov
jns
lret
nop
lahf
sbb
lds
les
movsl
inc
ret
cwtl
pop
mov
sbb
std
push
mov
push
push
push
lods
lret
stc
inc
dec
fisttpll
or
test
and
dec
mov
lock
sub
fiadds
mov
daa
psllq
jl
sbb
stc
mov
dec
dec
push
inc
push
das
jbe
xor
push
notl
int3
paddw
and
lods
jae
cmp
rolb
adc
add
nop
or
pop
int3
sub
ficoml
andl
xor
mov
xchg
pushf
int3
scas
stos
sbb
add
adc
popf
jo
sti
cmp
dec
mov
pop
or
cmpsl
int
push
les
iret
and
mov
or
jg
pop
jmp
int3
inc
or
cmp
fwait
ss
not
dec
mov
and
sti
orl
add
lock
dec
mov
stc
outsl
iret
xchg
imull
faddl
xchg
mov
cwtl
inc
fbstp
int
imul
dec
mov
jno
pusha
pop
push
xor
push
cmp
loope
pop
dec
scas
add
addl
mov
or
jp
adc
enter
add
loopne
leave
cmpsb
cs
mov
xchg
lock
add
inc
sub
add
mov
fstl
sbb
xchg
mov
in
flds
sbb
popa
leave
loop
sub
mov
mov
movsb
or
adc
in
adc
inc
xor
push
stos
ss
push
in
jne
imul
dec
jmp
out
or
cmp
sub
dec
nop
stos
push
cmp
pop
push
sub
std
dec
lods
rclb
add
pop
adc
shlb
mov
outsl
pop
shll
popf
fs
lods
xchg
stos
lock
fmull
jne
mov
lahf
pop
out
std
add
inc
or
sbb
mov
pop
cltd
imul
mov
mov
sub
sub
leave
pop
ficomps
lock
xor
repnz
pusha
mov
push
sbb
sub
push
and
sbb
daa
cmp
add
adc
add
aaa
xor
ljmp
pop
or
lcall
aaa
pop
pop
out
cmp
mov
pop
fdivrs
orb
dec
int
js
ret
arpl
xchg
cmp
notb
je
add
push
mov
push
out
jnp
xor
push
xor
jne
add
jo
push
lds
sahf
pcmpgtb
out
std
cli
into
mov
popf
sbb
das
pop
mov
das
mov
popa
mov
push
pop
shlb
dec
scas
or
imul
mov
cwtl
icebp
repz
and
or
jmp
inc
xor
leave
out
cltd
lahf
mov
les
lods
dec
dec
xor
cmpsb
and
cmp
or
or
dec
out
sub
mov
in
out
dec
or
mov
ljmp
sub
pop
sbb
inc
xchg
stos
repz
pop
outsl
dec
cld
pop
add
je
cmp
cmp
mov
sahf
stc
and
pop
imul
sbb
adc
jg
ret
in
or
push
pop
mov
pop
sbb
mov
mov
cli
jbe
sbb
nop
pop
cli
aas
test
cwtl
cmpsl
ja
data16
loopne
xor
or
inc
stos
je
xorb
jecxz
rcl
adcb
mov
aad
enter
mov
xor
sub
adc
mov
fwait
pusha
xchg
pop
push
subl
add
mov
inc
inc
aas
or
cli
jne
cld
sub
in
roll
inc
sub
or
sub
sub
movsl
mov
mov
xor
mov
clc
aad
or
mov
in
mov
add
fdivl
in
push
mov
jl
fidivrl
and
stos
sub
push
movsl
pop
aaa
gs
daa
jns
sub
adc
bound
icebp
mov
pop
imul
jg
sbb
pusha
mov
insb
lods
mov
sub
xor
add
add
sti
or
and
repnz
iret
int
inc
out
mov
das
in
and
sub
je
addl
jp
pop
cltd
aaa
xchg
andb
stos
mov
mov
dec
adc
xchg
ret
call
je
and
rol
inc
fldenv
lds
mov
clc
jae
out
xor
outsl
jge
jecxz
sub
push
push
push
mov
mov
sahf
pop
xchg
test
sub
popa
out
frstpm(287
xor
sub
cmp
mov
popf
mov
mov
addr16
mov
aad
or
dec
inc
sbb
jmp
and
sbb
mov
notl
or
in
rolb
movsl
pop
in
jmp
sub
and
popa
insl
dec
arpl
dec
dec
dec
pop
data16
push
sti
mov
mov
inc
xchg
adc
in
imul
mov
or
roll
xchg
cltd
mov
dec
ss
mov
dec
cmp
mov
sub
dec
inc
xor
shll
inc
hlt
push
pop
lahf
push
lea
push
xor
xchg
dec
adc
sub
push
out
jge
jnp
test
test
dec
jne
mov
sub
ljmp
js
mov
sub
adc
in
mov
testb
fsub
rcll
mov
shl
push
aaa
lahf
les
cmpsl
addr16
sub
loope
popf
and
stos
cmp
mov
lods
add
cs
fsts
or
test
jae
nop
mov
stos
and
mov
in
das
fs
mov
mov
nop
mov
mov
out
out
sbb
adc
call
ljmp
pop
xchg
push
sub
xor
pushf
pop
mov
cwtl
sti
popf
int
std
fisttpl
fidivrl
das
daa
push
xchg
in
out
cmp
lock
or
xchg
inc
int3
cld
in
adc
inc
pusha
xor
pop
or
pop
pop
out
icebp
lods
pop
adc
inc
mov
mov
xchg
push
aad
lahf
int
dec
loope
bound
cwtl
movsl
ror
out
xchg
pusha
jg
adc
jae
push
insl
push
cmp
jns
repz
scas
ds
xchg
loop
sbb
push
out
ret
stos
stos
dec
cli
xor
repnz
daa
jp
lret
cmp
fisubl
pop
push
mov
cmp
push
xchg
popf
rorl
data16
xchg
in
jg
inc
ss
dec
mov
popf
into
mov
mov
outsb
aas
push
test
andb
jnp
pop
jp
jnp
pop
adc
pop
es
repnz
jb
rorl
add
dec
jecxz
xchg
in
cmp
xlat
inc
dec
mov
push
push
fdivs
sub
test
test
add
out
out
lea
testb
dec
outsb
fisubl
jae
cmp
mov
repnz
mov
mov
jo
and
xchg
out
fisubs
movsb
cmp
filds
pushf
add
mov
jmp
or
lds
mov
xchg
pop
stos
test
ret
xlat
sub
repz
and
sti
out
jmp
fcmovne
lret
aas
cmp
sub
sbb
or
outsl
imul
dec
mov
fwait
mov
sti
out
jmp
fcmovne
lret
aas
cmp
sub
sbb
or
outsl
imul
dec
mov
fwait
mov
sti
out
jmp
fcmovne
lret
aas
cmp
sub
sbb
or
outsl
imul
dec
mov
fwait
mov
sti
out
jmp
fcmovne
lret
aas
cmp
xorl
movsb
mov
pop
adc
aaa
insb
daa
adc
push
and
push
into
mov
xchg
cmpsl
pushf
rorb
pop
pop
dec
pop
jl
insb
daa
sbb
or
cmp
sub
fcoml
in
cmpsl
pushf
stc
mov
mov
sarl
sbb
or
cmp
sub
fcoml
mov
pushf
test
mov
sub
inc
jl
add
mov
adc
out
div
jmp
adc
pop
lret
push
or
lods
mov
mov
addl
sbb
or
rorb
jnp
dec
adc
lret
ret
ljmp
pop
push
outsb
and
mov
bound
imul
and
mov
inc
repz
mov
ljmp
adc
inc
or
fwait
xadd
cli
stc
lret
jecxz
sub
shlb
shlb
addr16
int3
mov
lods
push
call
xchg
divl
sbb
data16
les
int
mov
scas
lea
inc
insb
daa
sbb
or
cmp
sub
fcoml
in
fwait
pushf
jmp
sub
das
push
jns
arpl
push
add
testl
sbb
sub
inc
pop
inc
sub
adc
scas
imulb
xchg
imul
xchg
cmp
cmp
dec
pop
sbb
cmp
sub
fcoml
in
cmpsl
pushf
xlat
mov
mov
pop
dec
pop
jl
insb
daa
sbb
or
cmp
sub
fcoml
in
cmpsl
pushf
xlat
mov
mov
pop
sub
leave
int3
xor
dec
insb
fidivs
std
ret
xorl
subb
dec
jns
adc
mov
stos
aad
dec
jmp
test
nop
push
dec
mov
ss
outsb
cli
cmp
sbb
jae
cmpb
adc
mov
mov
fbld
repnz
mov
mov
xor
insb
mov
imul
jp
or
mov
cmpl
cmp
sub
inc
push
clc
ljmp
cld
repnz
lret
jb
test
inc
jge
cmp
pop
popf
xchg
clc
sbb
xlat
cmp
and
push
or
mov
rcl
jo
mov
arpl
ret
idivb
inc
jle
les
outsl
mov
sbb
add
shl
mov
mov
imul
daa
out
fsub
mov
ret
cmp
pop
mov
xchg
push
push
or
adc
out
mov
push
into
loop
test
das
leave
xchg
std
cld
mov
lahf
mov
jb
push
test
repnz
dec
es
xor
stos
xor
mov
adc
pusha
loopne
in
mov
rcl
stos
add
fcom
sti
push
sti
adc
xchg
mov
sbb
xlat
inc
insb
mov
sub
inc
sbb
lds
and
adc
addr16
lret
shl
int3
shlb
or
shl
adc
cli
adc
repz
popa
jne
ljmp
fstl
repz
xor
imul
leave
test
mov
fcmovne
mov
or
mov
or
aad
cli
push
pusha
nop
sbb
adc
inc
repnz
in
sub
loop
push
push
std
cmpsl
push
jno
test
sbb
adc
loop
jmp
cmc
push
inc
xchg
sahf
ret
js
aas
add
imul
jno
pop
loopne
arpl
dec
adc
out
xchg
jge
xchg
mov
loop
jnp
sub
inc
movsl
xchg
nop
xchg
fstps
dec
jle
or
bswap
lret
shll
std
stc
loope
clc
mov
enter
addb
fnstenv
push
push
pop
dec
call
enter
movsb
pop
jns
in
jo
sbb
fcoms
push
stos
xor
pop
movsb
dec
in
pop
jo
rolb
sub
stos
stc
frstor
outsb
cmp
jnp
stos
jns
push
sbb
mov
sbb
test
pushf
aas
arpl
push
pop
push
push
das
bound
and
aam
lods
jmp
cmp
sbb
arpl
ja
ja
inc
mov
pop
jmp
cmp
inc
xor
push
and
dec
imul
xor
fsub
daa
jle
ds
and
xor
cmp
icebp
adc
jnp
fcmovbe
xlat
into
iret
shll
dec
xor
sbb
lcall
aam
jmp
aaa
out
mov
pushf
loopne
add
push
ljmp
add
sahf
inc
lods
xchg
pop
xchg
incb
iret
push
daa
add
pusha
int3
pop
lcall
mov
mov
ss
adc
xchg
and
fwait
insb
std
imul
fists
mov
aam
fbld
xorl
jmp
hlt
loopne
jne
in
push
mov
scas
and
jo
sub
andl
push
add
dec
dec
mov
add
push
stos
insl
orb
addr16
push
js
dec
inc
fldenv
sahf
cs
mov
or
sarb
je
mov
sbb
inc
xor
pop
orl
cmp
cmp
add
ret
sub
adc
data16
mul
xor
pop
into
es
or
sub
mov
in
loop
pop
pop
repnz
cli
push
push
out
adc
cli
mov
sub
sub
dec
and
push
dec
push
daa
sbb
inc
and
test
cmp
or
cmpsl
iret
lods
mov
cmp
mov
lock
out
ret
sarb
inc
cmpl
mov
adc
xor
pop
jne
mov
mov
imul
mov
movsb
xor
aam
cmp
mov
push
push
mov
dec
aam
enter
xor
repz
mov
in
pop
push
and
fs
pushf
pop
out
icebp
pushf
sti
dec
push
lcall
sbb
sbb
cmpsl
jl
add
xor
int
push
inc
sarb
lret
leave
movsl
xor
fcoml
xchg
sbb
test
pop
cmpsl
xchg
pop
inc
sbb
clc
jle
sbb
aaa
mov
cld
xchg
jb
or
loop
loope
fsts
and
sbb
fwait
push
inc
pop
inc
imul
jne
add
es
int
imul
and
dec
popl
ljmp
lock
subl
ficomps
in
mov
mov
fs
inc
cmp
push
xor
nop
cmp
call
int
repnz
rcrl
push
repz
add
sahf
idivb
and
xchg
sbb
ja
mov
push
pop
push
push
in
adc
jmp
lea
fstps
loope
leave
fnsave
adc
lds
pop
cld
add
pop
loope
daa
leave
pop
adc
pop
mov
inc
in
jnp
push
daa
xlat
gs
imul
cld
push
jge
andl
xchg
jecxz
mov
rorl
adc
imul
inc
pop
mov
and
lahf
inc
jl
mov
dec
xor
fidivrl
shlb
xor
xchg
cmp
movsb
sub
imul
stc
fdivr
sbb
jge
inc
xlat
iret
loope
sarl
mov
les
out
gs
mov
ljmp
rcll
mov
popf
inc
cwtl
cmp
xchg
push
orb
pop
push
dec
out
jg
cli
pop
xchg
xchg
outsl
std
rol
out
lea
rclb
sub
ljmp
pop
push
iret
inc
or
xchg
sbb
arpl
jmp
fcoml
mov
push
gs
movsb
adc
mov
mov
mov
mov
or
pop
lcall
dec
add
mov
sbb
imul
arpl
cmp
cmp
sbb
xlat
mov
push
cmp
jae
pop
mov
cmp
mov
push
loopne
inc
ret
pusha
movsl
rorb
xorb
loopne
sub
dec
dec
pop
gs
mov
dec
lods
push
sbb
and
xchg
insb
xchg
and
pop
rcr
into
fscale
cmc
testl
cmp
test
ja
pop
cld
scas
enter
xorl
sbb
mov
mov
pop
ja
xchg
or
ret
rcr
stos
in
jo
inc
or
add
push
repz
les
jne
enter
mov
andl
mov
add
dec
orl
outsl
cmp
mov
push
dec
jmp
mov
lock
inc
test
xor
cmpsb
mov
dec
add
ds
cmpsl
scas
arpl
xor
push
jb
xor
jne
stos
mov
pop
sbb
scas
jns
bswap
cmc
dec
inc
push
pusha
xor
pop
inc
test
out
mov
jl
cmp
pop
insl
fnsave
rcl
sub
add
jle
cld
adc
mov
mov
cltd
loope
stos
fs
sub
mov
xchg
mov
xchg
fiadds
in
sti
out
int3
sub
inc
out
out
or
je
fsubrl
arpl
dec
inc
mov
ds
fs
jae
push
jp
in
xlat
pop
bound
imul
movsb
lock
inc
cmpl
cwtl
xchg
or
inc
or
repnz
fstl
in
ret
fldt
or
pop
or
fisubs
std
pop
cld
cmpsb
dec
xchg
xchg
inc
sti
mov
mov
cltd
add
scas
lcall
in
pusha
xlat
sarl
lret
or
mov
cmp
jle
pop
inc
push
xor
loop
test
xchg
adc
xchg
xchg
mov
cmp
test
lahf
pop
outsl
pop
ret
and
call
add
xor
push
in
icebp
and
pop
das
je
test
pop
push
push
mov
hlt
jle
cmp
test
outsl
xchg
dec
decb
mov
pop
xchg
xchg
or
pop
xor
jecxz
fmuls
inc
jno
gs
mov
mov
inc
add
inc
add
or
jle
call
out
jns
hlt
dec
outsb
cmp
cltd
sbb
mov
add
loope
insl
push
aas
dec
xor
xorb
popf
push
popa
cmp
push
jg
cmp
adc
mov
adc
pop
pop
or
jne
js
test
ficomps
fwait
adc
aam
mov
push
mov
iret
out
repz
loop
enter
cmp
sbb
and
cltd
jns
popa
and
cmp
xchg
enter
inc
loope
sub
lret
cmp
xchg
jns
push
jmp
mov
and
not
dec
outsb
fnstsw
bound
cmpl
aaa
mov
out
hlt
push
jp
fisubs
fisubs
lods
stos
cwtl
hlt
xor
mov
rcrb
pushf
cmp
mov
enter
ss
xor
test
insb
adc
or
popa
adc
mov
ret
cmp
addr16
mov
lcall
mov
jp
insl
cmp
mov
repz
or
dec
push
data16
enter
xor
inc
jge
and
inc
and
pop
stos
inc
stc
daa
dec
pop
lds
fcmovbe
loope
jp
loopne
and
rcr
pop
js
into
shl
or
fadds
pushf
mov
xor
jae
mov
in
dec
leave
scas
dec
out
lcall
es
movsb
jl
cltd
sub
jns
pop
and
mov
dec
adc
stos
sbb
cmp
insb
or
pop
or
adc
lock
sbb
mov
xorb
and
inc
push
ja
or
xor
add
jae
lock
inc
sub
cmp
dec
mov
mov
adc
inc
popa
fmull
popa
adc
insl
mov
push
sbb
sti
push
pop
aaa
mov
ret
xor
pop
or
enter
fstpl
jns
test
cmp
push
add
add
pop
popf
pusha
cld
icebp
mov
fdiv
dec
cmpsl
call
out
cmp
jg
nop
or
add
xor
jge
mov
fimull
jbe
add
ja
ds
add
adc
sbbl
and
dec
adc
lock
sub
xchg
gs
xchg
cwtl
sub
jae
clc
rcrl
aad
call
add
jno
add
sub
push
int3
out
inc
jl
mov
scas
pop
add
inc
lret
xchg
daa
push
ja
stos
xchg
mov
xchg
jl
aam
dec
shlb
pop
cli
mov
loope
ja
rolb
dec
test
mov
sbb
lea
jl
lods
in
cltd
in
mov
xchg
inc
mov
out
jle
adc
pop
in
dec
imul
push
add
xorb
sub
cmp
lods
daa
inc
in
rcll
das
sub
pop
xor
sub
fsubl
inc
dec
mov
mov
movsl
repnz
loope
mov
or
cs
popf
xor
or
or
xchg
daa
lods
ljmp
adc
xchg
flds
rorb
addr16
shll
jl
mov
dec
negb
mov
cmp
es
pop
out
mov
loope
mov
mov
mov
lods
inc
sbb
mov
and
cmp
sbb
xlat
in
xchg
shl
out
jb
inc
fidivs
dec
rclb
push
jmp
test
jne
out
push
sbb
pop
sbb
xorl
fimull
fs
jecxz,pn
and
push
jge
gs
push
ret
test
inc
xor
jo
hlt
mov
mov
inc
sub
push
dec
push
sbb
jbe
fbstp
jo
jecxz
ja
shll
es
jg
test
stc
adc
js
cmp
sbb
cmp
mov
xor
cli
push
sar
out
js
push
ds
jae
mov
dec
mov
adc
fldt
aad
aas
and
jo
ss
and
std
mov
push
adc
loope
stc
lret
test
push
mov
xchg
inc
iret
jo
data16
setb
sbb
les
sbb
divb
xlat
pop
mov
xchg
mov
and
loop
mov
push
icebp
insb
loop
lret
mov
dec
int3
mov
in
stos
jns
lret
adc
rcll
adc
adc
pop
mov
lds
xchg
ds
leave
dec
xlat
mov
and
dec
jns
clc
jecxz
pmullw
xchg
add
test
repz
daa
cmpsl
cmp
movsl
ret
dec
cmp
dec
ret
shlb
mov
and
pushf
add
adc
jo
xchg
cld
push
add
cmp
stos
fwait
lret
mov
popa
leave
pop
ja
std
pop
andnps
shll
cmp
xor
mov
mov
imul
fdivp
dec
mov
mov
fldcw
mov
inc
idivb
xorl
sub
or
inc
dec
imul
pop
cmpsb
dec
test
fdivr
fmull
out
xchg
arpl
mov
aad
fsubrl
add
or
test
hlt
imulb
inc
lret
out
aaa
xorl
stos
fcmovu
inc
push
in
jno
in
mov
push
pushf
push
fistpl
xor
imul
or
dec
lea
imul
popf
cs
and
jae
sbb
shlb
or
xchg
inc
out
xor
and
nop
scas
sub
clc
and
rclb
mov
pop
adcl
mov
dec
mov
outsb
jnp
cmp
cmp
sub
or
push
jno
push
sub
mov
cmpsb
dec
push
test
cmpsb
and
mov
mov
jns
mov
int3
leave
insl
push
mov
cmp
mov
fldt
arpl
repnz
sbb
adc
cmpsl
mov
les
and
adc
loopne
popf
mov
fstpt
pushf
xchg
loopne
cltd
xor
sub
scas
dec
jmp
cltd
fcmovb
adc
sbb
enter
push
mov
hlt
in
out
mov
push
push
in
popa
pop
popl
push
add
dec
repz
pop
decl
or
test
jnp
sbb
loope
dec
push
aaa
jbe
xchg
es
jns
pop
adc
sbb
loopne
call
pop
and
sub
decb
push
fstpt
sub
in
in
aaa
addl
xchg
test
rcl
mov
lahf
shrb
cmp
repnz
pop
pop
aas
sub
mov
sub
lcall
inc
out
bound
sub
jl
push
and
sbb
testl
pop
sahf
int3
mov
addr16
imul
push
cmp
orb
and
jbe
arpl
and
push
sbbb
mov
jmp
out
cmp
sbb
and
adc
jecxz
inc
xor
shl
xchg
add
into
adc
shrb
les
loop
aad
dec
repnz
xchg
pushf
int3
inc
shrb
lods
cltd
dec
mov
or
fstl
or
insl
cmpsb
adc
or
int3
sbb
inc
or
repnz
inc
mov
pop
mov
cwtl
lret
xor
sbb
fldt
ss
mov
pop
loopne
mov
and
lcall
dec
dec
incb
popf
inc
sub
xchg
add
jno
inc
xchg
sub
out
lcall
push
add
mul
pop
mov
int
lret
dec
jg
mov
xor
dec
movsl
mov
cmp
pop
and
aam
jnp
cmpsb
jmp
shl
and
call
pop
cmp
notb
lods
shrb
lret
lahf
stc
loopne
fstcw
mov
add
and
fwait
pop
insl
push
add
icebp
push
nop
mov
scas
sub
xchg
sbbb
push
sub
adc
mov
jmp
pop
and
out
sbb
mov
mov
or
loopne
jns
jl
and
push
pusha
push
jae
popf
outsl
dec
dec
cltd
pop
xchg
insb
fimull
in
nop
ss
mov
adc
int3
aaa
out
out
test
or
xchg
pushf
jno
xor
vpsubw
mov
ret
out
movsl
sahf
mov
jbe
xor
out
lds
cmp
sbb
jno
lret
bound
inc
cli
xchg
cli
and
aad
or
fildl
popf
cli
insl
lds
shll
popl
iret
popf
push
in
add
adc
sub
and
aas
dec
and
inc
pop
lods
and
cwtl
pop
popf
sub
mov
jp
jmp
inc
test
push
mov
dec
mov
dec
dec
cltd
enter
add
sarb
lods
push
lods
cmc
dec
mov
inc
loop
cli
repnz
or
xchg
pop
lahf
or
fwait
push
cmc
in
out
sub
pop
or
dec
mov
mov
insl
add
int
test
jb
cltd
adc
inc
fists
inc
lret
pushf
sbb
and
mov
lds
shlb
xchg
jno
cmpsl
cltd
lods
loopne
out
cli
mov
fnsave
imul
jl
nop
jl
adc
rcrb
ss
or
mov
outsl
sub
mull
insl
pusha
push
mov
jge
pop
sub
ds
dec
test
daa
adc
loop
divl
cmp
dec
sub
out
jg
pop
xor
push
jbe
lcall
adc
push
inc
mov
inc
dec
daa
cli
dec
sub
aad
ja
aaa
dec
jg
popf
xor
xor
or
decb
jnp
aas
mov
add
mov
test
ja
jl
fstl
nop
bound
lahf
adc
sbb
xchg
jno
out
sub
sbb
mov
xchg
xor
and
xchg
filds
dec
mov
in
dec
nop
jbe
dec
stos
sub
add
cmp
sbb
orb
cld
jb
lea
das
ljmp
test
es
lock
insl
inc
arpl
dec
xchg
adc
lret
pop
stos
in
push
in
das
frstor
mov
cmp
inc
insl
int
adc
jb
and
stos
cmc
int
pop
or
mov
cmp
sub
outsl
int
inc
shl
mov
add
push
add
mov
and
inc
jnp
jg
cld
cltd
popf
int
cld
inc
sub
das
xor
negb
dec
pop
loopne
push
cwtl
inc
add
cld
and
inc
mov
mov
mov
jb
mov
decb
adc
add
sti
insb
insl
push
roll
sbb
mov
cmc
bound
mov
ljmp
push
scas
jmp
xchg
lret
push
jl
xchg
pop
jg
lahf
pop
mov
add
mov
cmp
cli
sub
jnp
fwait
pop
mov
push
arpl
mov
icebp
xor
mov
ljmp
sub
and
sbb
sub
fmulp
cmpsl
jb
inc
xchg
cmp
or
stos
iret
out
or
sbb
fimull
mov
in
sbb
das
sub
stos
leave
mov
dec
add
ret
sbb
dec
out
xchg
cmp
lret
test
sti
adc
in
addr16
out
xchg
cmovne
sbb
xchg
outsb
jno
cmp
or
and
mov
xchg
sub
dec
push
ljmp
lods
mov
cmpsl
bound
mov
popf
sub
imul
test
inc
cltd
out
push
inc
xchg
mov
mov
popf
dec
push
out
adc
aas
lods
push
lahf
inc
cli
pop
mov
lea
andl
loope
mov
ret
cwtl
mov
js
add
dec
es
test
pop
or
push
jb
std
out
fstpl
cmp
shlb
or
dec
fstps
ror
pop
pop
out
arpl
dec
cmp
adc
ror
pop
lea
cmp
mov
pop
fldcw
dec
push
pop
es
and
in
push
push
jmp
xchg
cmc
adcb
je
mov
xchg
mov
icebp
cmp
sub
add
cmpsb
push
sbb
jnp
adc
into
fcomps
fimuls
add
into
test
pop
push
out
test
xor
push
or
cmp
sub
fcoml
in
cmpsl
pushf
xlat
mov
mov
pop
dec
pop
jl
insb
daa
sbb
or
cmp
sub
fcoml
in
cmpsl
pushf
xlat
mov
mov
adc
das
insb
and
or
fstl
cld
mov
scas
pushf
rorl
pop
repz
jecxz
shrl
push
or
mov
push
in
shr
scas
add
inc
push
lahf
mov
xor
movsb
cltd
pushf
and
jb
into
test
mov
movsb
jle
outsb
pop
hlt
pop
in
adc
add
xor
and
push
out
enter
adc
xchg
movsb
jg
push
movsb
ds
dec
in
xchg
pushf
push
es
mov
lcall
jbe
imul
sbbl
adc
push
inc
out
cli
arpl
iret
add
in
jns
sbb
in
sub
pop
mov
mov
push
outsb
or
push
xor
es
fdiv
mov
aad
pop
pop
cmc
mov
inc
adc
cwtl
or
pop
scas
jl
sar
out
push
cmp
sub
sub
xchg
xor
hlt
aam
adc
and
pushf
add
and
cs
xor
cmp
dec
mov
add
mov
push
jl
fs
lods
xchg
push
jae
movsb
cmp
inc
sbb
xor
add
pop
and
cwtl
or
dec
cli
mov
pop
hlt
dec
pusha
in
clc
hlt
sahf
mov
sbb
fisubrs
mov
push
clc
fs
hlt
dec
mov
inc
faddl
ja
or
sbb
jge
jnp
imul
mov
sub
in
push
out
add
sbb
rcrb
shll
pop
test
mov
xchg
jg
jmp
lods
xor
inc
fidivs
ds
test
mov
movsb
jle
outsb
les
dec
in
adc
add
xor
and
push
out
inc
fidivs
ds
test
mov
movsb
jle
outsb
les
dec
in
adc
rcrl
or
int
addr16
insb
das
push
push
fucomp
jge
and
aam
pusha
call
cmpsl
int3
add
aaa
mov
std
cltd
sarl
test
sub
btr
mov
and
es
stos
pop
cmpb
in
ljmp
popa
dec
xchg
push
mov
aad
cli
mov
pop
inc
ljmp
pop
lcall
mull
test
leave
or
jp
cs
mov
pusha
cltd
lods
push
ljmp
push
adcl
pop
lds
rorl
iret
pop
sti
pop
test
sub
gs
int3
fwait
in
xchg
adc
test
mov
out
xchg
std
lret
lret
in
dec
push
pop
xchg
mov
out
xor
pop
lcall
cwtl
shr
sarb
icebp
scas
or
and
insl
stc
cs
jo
xor
push
je
leave
dec
jge
jbe
add
sub
push
sbb
scas
in
pop
dec
jbe
xchg
cmp
cwtl
loopne
mov
test
cli
xchg
or
or
cmp
in
shll
push
adc
jle
data16
jae
or
pushl
push
inc
dec
xchg
fsubs
xor
loope
or
enter
sub
xor
arpl
clc
xor
lea
arpl
and
push
mov
cli
rcl
frstor
sub
mov
add
hlt
xchg
cs
aam
dec
adc
pop
add
subl
les
adc
jle
int
sbb
sub
and
in
cmc
jb
jb
jg
push
lret
fidivrs
xchg
pop
loope
inc
js
dec
pop
lds
faddl
ja
rcrb
enter
movsb
pop
jns
stos
dec
test
sbb
mov
les
mov
cmpsl
dec
sti
das
adc
lret
loop
xchg
jmp
push
mov
lret
jbe
inc
sbb
hlt
mov
mov
cli
sbb
int3
pop
mov
mov
ficompl
adc
sahf
jnp
imul
pop
gs
sub
nop
xor
add
push
lcall
cltd
xorl
add
jns
xrelease
jns
add
jl
mov
in
popa
je
mov
ja
ds
mov
push
push
out
jecxz
adc
adc
pop
xchg
bound
fmuls
add
testb
xor
jl
mov
loopne
movsb
xchg
pop
sahf
and
xchg
add
pop
test
fnstcw
or
in
fdivl
mov
adc
cs
inc
cli
lret
pop
in
into
movsb
sbb
stos
test
sub
jae
cmp
cmp
cmp
pop
cmp
mov
ja
out
jo
repnz
cmp
and
mov
push
insb
loop
ret
or
ret
hlt
jecxz
jecxz
test
movsl
jl
push
and
in
dec
and
rcl
ljmp
dec
mov
imul
test
cwtl
cltd
mov
xchg
sub
scas
xlat
adc
aaa
jl
sbb
sub
adc
loopne
pop
xor
xchg
dec
mov
fdivrp
das
lods
movsb
test
push
loopne
aas
sbb
xbegin
push
xchg
cmpsl
movsl
cltd
and
icebp
xor
mov
adc
jnp
pop
pop
addl
hlt
das
dec
sub
cmpsl
push
add
mov
pop
add
repnz
pop
es
adc
pusha
imul
sbb
cmp
xchg
and
lret
dec
lcall
xlat
loopne
adc
insl
inc
fs
ja
mov
scas
mov
pop
and
dec
xchg
pop
jbe
cmp
jns
stc
mov
popf
ret
leave
and
dec
add
mov
popa
jmp
ja
pop
dec
pop
adc
fcompl
notb
mov
lret
mov
push
pop
stos
outsl
pop
dec
int3
xor
mov
cmp
fldl
xor
call
loopne
mov
inc
mov
pushf
push
pop
xchg
cmpsl
das
jmp
xlat
movsl
in
push
movsb
cwtl
mov
or
jp
cmp
mov
jge
stos
xlat
cli
add
xlat
push
aas
or
std
pop
adc
sbb
sub
jnp
push
inc
into
pop
add
dec
stos
cmpb
pushf
add
adc
leave
jnp
out
sti
add
adc
inc
mov
aaa
es
sbb
test
test
das
push
sti
mov
pushf
mov
adc
push
push
cmp
int
in
xor
dec
mov
jno
sbb
xchg
nop
aaa
sarl
push
and
test
mov
repz
xchg
ret
imul
mov
sbb
aaa
je
dec
mov
inc
jo
enter
pop
push
lahf
ljmp
xchg
lods
stos
cld
dec
aas
adc
pop
out
cli
inc
mov
loop
and
scas
push
loope
repnz
xlat
and
jl
lock
sbb
adc
fwait
subl
jl
scas
pop
aad
in
jns
dec
jmp
xchg
into
mov
cwtl
imul
or
mov
mov
inc
pop
sahf
cmp
sbb
sbb
into
adc
insb
dec
jno
pop
rcrb
dec
inc
xor
lds
add
decl
add
push
mov
shrb
fstpt
arpl
xchg
cmp
dec
ds
mov
cmp
test
xor
iret
push
mov
dec
mov
add
jp
mov
push
lods
sbb
std
mov
mov
icebp
jmp
nop
cmp
in
ficoms
outsl
inc
push
test
mov
je
inc
xchg
inc
out
lret
or
ret
popa
lret
mov
mov
pop
aam
lods
pop
cwtl
fcmovbe
leave
lcall
add
cmp
lods
ret
pop
pushf
or
lds
ss
fiaddl
xchg
sub
incb
pop
jnp
sarb
je
add
inc
neg
inc
jne
push
pushf
pushl
jbe
mov
and
sti
jge
xchg
fcoms
aam
mov
xchg
lret
pop
push
rorb
push
inc
push
add
lcall
sub
call
push
jmp
rcr
icebp
fs
loope
sbb
push
mov
pop
iret
pop
test
inc
cmpsb
pop
ret
aad
mov
xchg
push
movl
inc
stc
xchg
pusha
cwtl
icebp
shl
test
xor
cmp
jge
outsl
sub
pusha
mov
cmpsl
push
mov
lahf
mov
jo
inc
out
sbbl
mov
mov
add
mov
nop
jl
mov
cwtl
dec
aad
inc
int3
inc
pop
adc
shrl
into
loope
shl
sub
mov
dec
sbb
push
sub
xchg
sbb
push
or
xchg
mov
aas
and
lods
pop
xor
jle
dec
jge
inc
add
rcll
jb
scas
std
jmp
xor
mov
xchg
push
cmpb
lods
stc
leave
sbb
xor
jo
add
pop
scas
dec
sbb
nop
dec
cli
add
fcoms
mov
or
and
addr16
inc
adc
lods
repz
out
add
adc
jo
push
add
inc
push
loop
add
out
bound
jge
arpl
jno
out
jg
inc
mov
xor
fistpl
cld
ja
sub
inc
dec
test
lods
jl
mov
mov
xchg
push
ss
sbb
out
sahf
loopne
inc
xchg
das
test
xor
loopne
fsts
shll
popf
fsubrl
imul
sbb
mov
xchg
and
push
negl
das
inc
jge
pop
or
aas
outsb
inc
cmovno
add
pop
jp
sub
in
mov
cwtl
cwtl
jle
imul
push
orb
std
push
and
lds
xchg
lds
rcl
lahf
outsb
inc
lcall
in
lods
inc
jae
xor
xchg
xchg
or
lods
test
nop
dec
cmp
inc
int
lret
fildll
sbb
xchg
sub
cli
mov
jo
clc
cmc
cmp
inc
cmc
cmp
push
imul
pop
push
into
jbe
jg
and
es
add
cmp
shl
cmp
cs
xchg
xchg
mov
lods
or
cmp
test
pop
lods
jae
sahf
imul
push
mov
xor
les
ljmp
adc
inc
inc
or
push
adc
test
das
sub
ja,pn
jne
dec
jnp
inc
inc
in
out
sti
arpl
popa
jnp
inc
mov
scas
pop
xchg
jle
adc
mov
mov
stc
inc
xor
jl
lods
mov
adc
jge
jae
push
pop
into
test
decl
out
je
xchg
jbe
sbb
int3
inc
in
inc
push
dec
ficoml
push
cld
mov
ja
mov
out
mov
jnp
pop
mov
adc
and
mov
pop
pop
cmp
mov
stos
jns
push
ror
adc
shll
sub
in
testl
xlat
xor
or
inc
jae
in
and
cmp
xchg
push
sbb
fs
pop
clc
add
stos
lcall
push
adc
mov
bound
out
add
mov
bound
sbb
add
mov
mov
or
scas
ds
out
fdivr
adc
sub
or
pop
outsb
or
data16
xchg
jmp
arpl
out
out
lock
orl
std
fisttpl
sub
mov
cmc
push
loop
adc
adc
mov
repz
std
sbbl
push
push
js
dec
pop
mov
push
xor
mov
cmpsl
rcll
jp
mov
ljmp
filds
lret
je
mov
ds
flds
mov
into
gs
popf
jp
mov
inc
jnp
push
stc
scas
pop
pushf
pop
sbb
lahf
jmp
bound
mov
imul
imul
jmp
inc
lods
dec
inc
xchg
and
mov
mov
jo
shrl
cltd
inc
sub
sub
lock
mov
mov
pushf
adc
or
or
call
mov
clc
xor
clc
dec
daa
in
add
imul
fisubs
pushf
les
pushl
cmpb
iret
sbb
dec
add
jge
or
mov
fistpll
and
lret
imull
jmp
inc
test
cmc
mov
cmp
cmpsb
aad
lahf
int
stos
and
cmpl
fdivrl
mov
inc
dec
xor
arpl
jne
xchg
adc
mov
or
push
daa
clc
adc
inc
outsb
inc
or
sub
mov
mov
dec
xchg
xor
dec
movsl
mov
loop
addb
mov
xchg
sbb
stos
pusha
test
pop
xchg
sub
lret
sbb
lock
insl
or
in
sbb
add
dec
or
adc
jg
test
aas
call
pop
out
mov
imul
in
push
out
iret
xor
lret
push
inc
in
cmc
loope
insl
sarl
inc
subl
jg
cmpsl
push
xchg
cmc
outsl
adc
pusha
or
cli
jg
insb
imul
repz
out
or
pop
out
adc
test
fsubl
cli
ja
lret
pop
int3
stos
adc
lret
inc
cld
out
add
loope
and
add
mov
sbb
out
pusha
daa
sub
xlat
or
cs
xchg
push
inc
or
dec
add
movd
ds
mov
in
lcall
push
fsubrs
dec
jno
pop
das
pop
adc
xor
mov
cmovns
ret
push
into
mov
cmp
jecxz
sbb
mov
mov
pushf
inc
fsubl
inc
sub
imul
push
push
sub
out
xchg
sub
pop
xor
mov
and
pop
lock
shlb
push
adc
adc
add
ror
into
mov
bound
in
testb
mov
shrb
sti
xchg
fildl
ja
cwtl
enter
jmp
popa
mov
ret
adc
repnz
xchg
fimull
sbb
xchg
xor
stc
xlat
sbb
cld
sbb
pop
fistpl
loopnew
fnstsw
push
mov
adc
xchg
cmp
fdiv
xchg
filds
cmc
cld
xor
jne
das
push
push
xor
xlat
test
out
lock
lret
sub
sbb
mov
or
bound
fwait
adc
aad
in
mov
pop
and
pop
mov
insl
in
push
xor
data16
add
lahf
or
ss
inc
mov
xor
lahf
or
ret
mov
jns
add
pop
inc
addl
mov
cwtl
dec
xor
mov
sub
insb
mov
pop
push
xchg
cltd
pop
pop
adc
shlb
packuswb
loope
aad
sub
push
fwait
lret
adc
idiv
stc
sbb
les
cli
push
loope
pusha
pop
xor
dec
adc
inc
mov
out
roll
push
mov
push
in
mov
inc
cli
in
dec
out
lea
or
dec
push
push
dec
jo
out
pop
mov
adc
out
cwtl
fbstp
cmp
pop
fmulp
jl
mov
xor
fs
push
call
dec
sub
xchg
pop
aam
fstps
popf
addb
nop
xor
rclb
in
subb
repz
movsb
stos
sub
mov
mov
jle
fsubl
sbb
add
sahf
call
sti
adc
nop
ljmp
fisubrs
pusha
xchg
xchg
das
sbb
mov
cmp
mov
in
je
sbb
add
pop
daa
mov
mov
push
andl
jae
cmpsb
mov
ucomiss
push
pop
mov
xchg
xor
stos
popf
add
cmp
in
xorb
dec
dec
xchg
pop
sbb
jnp
mov
and
leave
data16
push
adc
adc
xchg
sbb
stos
push
xchg
xchg
inc
mov
in
push
mov
mov
xlat
mov
out
scas
lock
sbb
enter
add
js
xor
jmp
and
xchg
shl
mov
lret
mov
js
lret
add
out
shrl
cmc
leave
sarl
inc
xor
lahf
add
shll
pop
testb
jl
pop
out
cmp
fcoms
cli
aas
push
mov
loope
int
or
adc
pop
adc
mov
pop
imul
lods
push
movb
xor
mov
fsin
inc
lret
jbe
pop
loopne
sbb
cmp
inc
jb
rclb
inc
call
and
lcall
fldl
jns
xchg
cmc
xor
push
fnsave
push
mov
mov
inc
test
jl
push
dec
lock
sbb
push
repz
cmp
enter
rcrl
stos
ljmp
jg
push
subl
xchg
add
pop
push
fldt
mov
mov
mov
arpl
lea
lret
std
out
xchg
and
addb
popf
and
or
push
lods
mov
andb
clc
cmp
xchg
adc
dec
xor
adc
out
ffreep
imul
push
dec
and
adc
ja
add
div
out
mov
out
cli
loope
pop
mov
movsb
arpl
adcl
mov
aam
cld
adc
in
std
jns
xchg
scas
lds
scas
lods
movsl
loop
cli
rep
pop
sti
mov
cmp
pop
xor
xchg
inc
insb
sub
push
push
xchg
push
in
dec
in
xor
repz
movsl
mov
push
jg
aas
cmp
xchg
daa
loop
or
mov
out
cmp
cmp
cltd
mov
adc
xchg
mov
cli
fcoms
lea
mov
pop
and
adc
shrb
inc
sahf
outsb
jle
xor
cwtl
cld
cltd
popf
pop
in
loop
ja
pushf
xchg
imul
pushf
mov
testl
test
sbb
dec
movzbl
leave
sbb
bound
es
push
sub
aaa
mov
jecxz
mov
shr
clc
sar
xchg
insl
aam
fdivl
push
jae
pop
fidivrl
mov
int
rep
xchg
lods
push
and
cmc
insl
or
push
cmp
dec
mov
ret
jae
movl
rclb
out
push
lods
outsb
pop
jl
imul
jle
rorb
sub
push
mov
arpl
and
lret
and
ljmp
fwait
pop
jmp
mov
sbb
jp
pop
cmpsb
jle
fwait
jmp
sarl
sahf
movsb
insb
sub
push
or
ficoms
subb
jmp
movsl
or
mov
sbb
dec
js
call
xchg
movsb
cld
cmp
mov
jg
dec
inc
cmp
pop
pop
pop
repz
shlb
jle
xor
push
lds
imul
jne
sbb
sbb
pop
jl
xchg
popf
out
ds
adc
es
inc
das
pusha
movsl
andl
vmwrite
jae
push
sub
adc
mov
mov
or
sub
dec
xchg
lret
xchg
sahf
push
xor
mov
sbb
out
icebp
cmpsb
leave
test
xor
and
pop
jl
js
repnz
push
je
test
sub
sbbb
sbb
icebp
sbbb
sub
icebp
jge
lds
rol
test
xlat
mov
pop
or
in
mov
adc
es
test
inc
aaa
leave
das
jle
jl
test
push
pop
sbb
ret
ja
xor
dec
mov
jno
xor
add
pusha
mov
push
sahf
test
mov
dec
xchg
dec
fcomps
ficoms
and
cmp
or
pusha
loop
jle
or
add
cld
scas
or
shl
repnz
imul
arpl
inc
imul
lock
xor
cwtl
push
roll
push
js
andb
xor
sahf
test
shll
stc
pop
sbb
pop
sbb
xchg
lds
or
fcomps
bound
jmp
inc
xchg
and
adc
cmp
clc
lret
inc
flds
cld
jns
in
adc
fildll
in
loop
mov
inc
int3
sbb
insb
cmp
or
sub
scas
arpl
popa
dec
jecxz
mov
pop
push
push
add
mov
cmp
inc
daa
add
xor
mov
loop
inc
adc
les
mov
pop
les
mov
cmp
loopne
sbb
lret
icebp
dec
push
xchg
sub
dec
pop
dec
sti
mov
imul
rcrl
shll
fstpl
aam
sub
adc
fstpt
imull
inc
pushf
ljmp
outsb
jnp
cmc
jmp
mov
mov
movsb
outsb
jg
mov
push
movsl
xlat
xor
popa
add
cmp
dec
dec
hlt
xchg
orb
mov
fcom
push
repz
pop
rcrb
int3
adc
aas
xor
xor
neg
mov
jg
dec
cmpsb
add
frstor
cmp
into
test
shl
add
sahf
pop
mov
cmc
mov
and
xchg
mov
stc
in
pop
ret
fisubrs
dec
cmp
scas
movsb
outsl
cmp
lret
jbe
scas
ds
or
jae
push
xor
pop
pop
lds
push
xchg
add
sub
aaa
sub
mov
add
cmpsl
scas
cmp
add
sbb
inc
mov
in
jnp
mov
dec
shrb
js
addb
push
je
rcl
rorb
test
sbb
xchg
sar
pop
mov
es
jbe
bound
ss
and
mov
aad
mov
inc
add
jg
repz
xlat
dec
jbe
pop
hlt
cmp
aam
adc
push
shll
xchg
repz
fldl
push
add
leave
mov
scas
outsb
inc
cmpsl
fidivl
mov
sbb
sti
mov
fldt
pop
add
adc
jns
cwtl
rorb
jns
push
pop
pusha
cmp
mov
inc
mov
jo
xor
arpl
aaa
push
cmp
mov
repz
mov
xchg
test
sbb
cwtl
push
and
mov
clc
icebp
and
mov
mov
push
out
inc
fidivs
ds
test
mov
movsb
jle
outsb
les
dec
in
adc
add
xor
and
push
out
inc
fidivs
ds
test
mov
movsb
jle
outsb
les
dec
in
adc
dec
decb
outsb
push
out
in
fidivs
ds
cs
mov
movsb
jle
jle
pop
aam
in
adc
add
xor
and
fdivp
dec
fs
mov
push
rorl
pop
out
mov
push
sbb
jb
bound
adc
mov
fwait
ret
mov
pop
ljmp
inc
sub
bound
pop
add
jp
mov
lcall
xchg
fiaddl
or
inc
sub
bound
pop
add
jp
mov
ret
mov
in
lahf
rclb
sbb
shl
popa
call
push
lret
jnp
mov
or
add
ret
lds
xchg
xor
bound
pop
cmp
xor
loop
repz
or
push
sub
lahf
das
shl
jb
into
mov
into
cmp
lcall
sub
inc
sbb
inc
mov
dec
add
mov
pop
scas
push
or
lcall
mov
mov
adc
pop
pop
jmp
cs
xchg
das
or
and
das
test
mov
mov
out
jp
frstor
xchg
jecxz
xchg
scas
cmpsb
jp
push
sbb
jb
bound
pop
add
jp
mov
lcall
xchg
fiaddl
dec
cmp
push
or
sub
push
jl
jb
mov
mov
lcall
mov
jg
dec
jb
adc
pop
data16
and
stos
lret
mov
xchg
mov
jmp
outsl
sbb
adc
push
pop
push
adc
push
jp
mov
lcall
xchg
fiaddl
or
inc
sub
bound
pop
add
jp
mov
lcall
xchg
fiaddl
or
or
ficomps
orl
test
popa
stos
xchg
icebp
fisubrl
repz
test
jle
icebp
fistps
sub
xchg
shrl
pop
cmpb
and
movsl
bound
aas
test
icebp
jbe
xchg
push
and
in
sub
es
mov
add
ss
sbb
xchg
rcr
add
xchg
jle
cmc
and
test
mov
outsb
repnz
roll
out
outsb
cltd
ss
xor
cmp
lret
sahf
push
scas
push
jae
dec
int3
xchg
xor
sub
mov
mov
push
sti
iret
and
mov
sar
add
xor
add
adc
in
loopne
js
or
mov
xchg
push
mov
or
jne
imul
pop
daa
les
movsl
rcl
mov
jg
aaa
stos
out
jns
inc
pop
mov
xor
ret
pop
dec
xchg
pop
in
cmpsl
push
cmpl
lret
loop
and
je
xchg
xcrypt-cbc
cmpsl
adc
arpl
pop
aad
call
add
repz
sub
xchg
jmp
test
mov
jmp
imul
gs
xor
aas
adc
pop
or
mov
cmpsl
fsubl
popl
jns
js
fs
cmp
xchg
arpl
xchg
lcall
sub
arpl
sbb
push
dec
es
adc
inc
repz
sbb
loop
xor
int3
sbb
cs
int
stc
push
mov
sbb
push
add
mov
jle
jns
test
int
push
cltd
cmp
or
xchg
test
insl
fcompl
mov
dec
idivl
cmpsb
xchg
shlb
add
in
jne
jge
mov
mov
int
mov
adc
adc
push
xchg
push
and
fwait
adc
les
sbb
jb
std
imul
mov
sub
mov
xor
adc
sbb
cli
mov
mov
subb
aas
jecxz
fists
cmc
xor
loope
mov
mov
mov
jo
daa
mov
inc
test
xchg
aas
loopne
push
push
arpl
cmp
fs
xchg
mov
dec
push
gs
inc
inc
xchg
leave
mov
and
repz
push
les
ret
cmc
jno
sub
popf
in
pop
cmp
and
xorl
js
test
arpl
dec
mov
add
dec
popf
stos
cmpsl
pusha
mov
or
fimull
xlat
push
movsb
pusha
add
int
xchg
cmpsb
fisttpl
cmp
xor
push
jmp
dec
rcrb
sub
shrb
sub
add
testl
fiadds
pop
in
adc
push
jae
jmp
jo
pop
test
bound
or
sub
pop
push
mov
push
inc
mov
push
adc
lret
fdivrl
or
jnp
jl
cmc
xchg
fmuls
jl
jbe
rep
pusha
jbe
flds
and
mov
push
fisttps
lds
inc
mov
mov
sub
mov
xor
xchg
jge
add
pop
sub
jae
xor
out
testl
and
dec
fsubs
jo
xchg
cmc
dec
bnd
scas
mov
stc
pushf
xor
inc
push
sbbl
lea
ja
sarl
pop
fstl
ret
mov
mov
mov
xchg
xor
fldl
aas
push
mov
imul
sbb
fcoml
mov
xor
push
xchg
fsubrs
ds
push
pop
mov
xchg
mov
sub
mov
pandn
loopne
fstpl
pop
or
sub
add
xchg
inc
cmp
in
incl
imul
outsb
inc
popf
and
mov
or
outsl
mov
mov
mov
cmpsl
cmp
inc
dec
or
dec
add
stc
nop
setne
ja
popa
ljmp
mov
in
adc
std
ss
scas
cmpsb
mov
mov
mov
in
lock
sbbl
push
mov
stc
les
push
insb
ficoml
and
in
out
andl
std
test
test
lods
je
xor
pop
bound
int
cltd
xchg
and
push
push
popf
jmp
imul
mov
push
adc
sub
add
xchg
scas
pop
inc
push
jb
xchg
and
pop
adc
dec
sub
stc
push
adc
andl
jl
add
ja
insb
pop
insl
ljmp
push
jo
das
mov
xor
jae
or
stos
sub
scas
in
sbb
leave
add
imul
jnp
nop
stos
jle
fisubs
sarl
add
outsb
sbb
scas
mov
sub
rcrb
xor
xchg
jne
inc
aam
and
mov
out
clc
add
aad
add
push
add
popa
nop
sub
shll
push
jg
fsub
xor
cmc
mov
cmp
inc
lods
mov
out
lcall
add
fldl
cmp
lods
movsb
mov
push
scas
adc
add
mov
jmp
jno
push
jmp
jecxz
loopne
out
mov
cmc
scas
lret
pusha
ret
sahf
push
xor
sahf
mov
jl
fs
mov
in
fildl
xor
outsl
mov
outsb
and
es
lcall
mov
in
sbb
outsl
into
cmp
adc
jbe
push
fs
dec
push
xchg
pop
xor
xchg
mov
test
pop
divl
xor
dec
cmp
push
fwait
call
les
mov
jmpw
test
enter
mov
pushf
cmpsl
mov
icebp
mov
pop
rcrb
add
es
cmp
xlat
pop
push
adc
jg
gs
pop
mov
mov
icebp
inc
xchg
adc
mul
fstpl
cld
xchg
adc
adc
ss
stos
insl
lret
dec
jbe
das
jmp
pop
add
inc
sub
or
fistl
fstpl
mov
movsl
sub
test
and
jecxz
pop
ja
cmpsb
dec
and
pop
xor
addl
xor
push
or
mov
popa
mov
or
lea
enter
cmp
lea
arpl
cmpl
inc
xor
out
xchg
push
mov
mov
inc
test
lret
lock
out
and
pop
ljmp
dec
and
dec
scas
and
bound
ficoml
aad
xchg
ret
add
repnz
sub
mov
jno
arpl
std
inc
push
in
adc
ljmp
mov
mov
pop
pop
and
adc
stc
aad
bound
add
ret
adc
sbb
cli
ficoms
inc
jno,pn
and
repnz
fwait
mov
add
lret
inc
dec
push
mov
out
leave
ja
xor
repnz
cmpb
cmc
int
test
mov
mov
and
rorl
fwait
dec
push
out
add
xor
xchg
mov
ret
add
mov
jno
xor
sti
movsb
cwtl
rcll
int
lahf
in
test
sub
push
push
loope
repz
iret
cli
fistpll
or
fdiv
imul
int
xor
test
dec
js
fsubs
jns
fcom
ds
stos
dec
push
mov
or
add
fbld
sub
das
pop
pushf
sbb
orl
lahf
int
aam
adc
mov
loopne
mov
lahf
lods
cmp
sub
nop
inc
or
sub
and
outsl
shld
out
mov
jmp
cmpsl
arpl
sbb
or
sub
inc
push
sbb
cli
dec
jo
andb
mov
icebp
cmpsw
test
test
pop
add
iret
mov
and
jno
cmp
jmp
pop
mov
pusha
mov
dec
sti
testl
data16
test
cmp
push
stc
ret
sti
cld
pop
pop
ljmp
repz
sahf
push
aad
loopne
add
iret
filds
adc
daa
stos
fst
or
jmp
and
stos
sbb
pop
mov
push
inc
je
aam
mov
dec
xor
jmp
sbb
hlt
xchg
std
cmp
mov
dec
mov
sarl
xlat
lea
or
jle
test
lock
lahf
mov
fistpll
fst
jmp
mov
and
dec
mov
cmpsb
insb
inc
lahf
add
dec
loopne
xchg
jmp
jae
rorb
push
outsl
mull
mov
xor
push
xor
stc
or
imul
adc
pop
cmp
in
fwait
dec
mov
aaa
jp
gs
add
fisubs
aam
addb
or
mov
xchg
mov
bound
xchg
or
push
insl
mov
cs
sub
mov
dec
dec
inc
mov
or
sub
dec
mov
pop
dec
loop
scas
imul
mov
or
imul
sar
movsl
adc
das
int
lock
popf
leave
xchg
sbb
pop
movb
mov
mov
jmp
imul
mov
dec
jmp
inc
jnp
test
mov
in
jo
dec
jno
xor
sub
pop
leave
scas
lahf
mov
xchg
hlt
ljmp
sub
int
mov
daa
inc
xor
cmp
sub
dec
xor
cmpl
orl
inc
xor
ret
fidivrl
aas
add
loope
mov
addr16
scas
ret
mov
in
jo
and
nop
cmpb
ljmp
jmp
out
sub
mov
adc
jle
and
add
add
mov
movsb
xchg
ficompl
inc
movd
loopne
cwtl
and
and
and
jp
aad
in
test
mov
cmp
mov
in
stc
inc
loope
aad
cli
hlt
mov
fidivl
push
jmp
xor
addr16
mov
pop
and
adc
cltd
add
insl
or
out
inc
outsb
inc
out
stc
in
sbb
std
mov
or
xor
lods
jo
cwtl
push
xor
jecxz
add
movsb
push
aad
or
scas
lds
inc
jg
inc
add
in
ret
cmpsl
xchg
in
xchg
jns
insl
fimull
ds
mov
loop
pop
out
mov
test
pusha
jp
lcall
enter
mov
decb
ja
xor
push
cltd
jo
jns
pusha
adc
shr
xchg
sub
or
sbb
mov
fisttpll
ljmp
test
pop
int3
pop
adc
inc
dec
ret
leave
mov
adc
pop
fistpl
test
outsl
stos
ficoml
orl
push
sub
xlat
inc
loope
sbb
jp
ljmp
imul
push
jbe
sti
scas
repz
ds
push
in
push
cld
push
int
jecxz
pop
nop
addr16
mov
xchg
mov
pop
repz
push
rorl
leave
xchg
je
pop
lock
scas
inc
jle
ret
sbb
dec
jnp
mov
lea
mov
ret
movsb
mov
lret
in
push
iret
popf
pop
mov
adc
mov
mov
jle
cs
mov
inc
jl
sbb
vmwrite
push
cmp
mov
sub
cmp
sti
test
adc
insb
push
jb
pushf
sub
imulb
xor
or
popa
das
dec
fucomp
dec
mov
push
mov
std
iret
aas
dec
stos
vphadduwq
push
ljmp
push
cmp
aaa
push
adc
fiadds
movl
dec
sarb
xor
jp
bound
xor
push
lea
xchg
rolb
ja,pn
pop
repnz
roll
dec
xorb
testb
iret
in
adc
jle
mov
pop
and
test
scas
cltd
sub
push
inc
dec
xchg
or
les
ds
jl
or
pop
hlt
jmp
mov
mov
xchg
shr
bound
out
aad
and
sub
cwtl
insb
jnp
divb
push
lods
rcrl
xchg
jno
pop
adc
mov
and
dec
lds
pop
jg
jnp
stos
into
cld
mov
decl
repz
push
and
xchg
adc
mov
cmp
jge
sahf
mov
fwait
dec
aaa
loop
pop
mulb
orl
sub
pop
in
rcrb
dec
cmpsb
mov
arpl
loope
pop
jno
and
cwtl
mov
sbb
pop
push
mov
adc
xchg
and
and
shll
cmpsl
insl
or
out
cmp
insb
lds
push
jbe
push
cmp
cmp
xor
fbstp
loop
jmp
jp
scas
test
adc
or
mov
mov
push
dec
push
jl
and
dec
pop
or
das
clc
lret
xchg
and
or
pop
stc
mov
test
xor
xor
lcall
cmp
mov
xchg
dec
and
mov
fsts
cs
mov
insl
outsb
xchg
jmp
mov
insl
adc
in
inc
pop
sbb
cmp
or
movsl
and
call
pop
push
inc
xor
scas
rcr
ja
ss
cmp
test
push
les
mov
mov
sub
loopne
mov
sti
fdivs
popa
nop
push
jge
outsl
call
popa
inc
rcll
hlt
ss
rorb
not
aam
dec
jecxz
ret
inc
inc
dec
out
mov
jmp
push
cmp
jae
dec
ljmp
dec
pop
lret
cmp
mov
xchg
jb
or
lds
mov
test
es
aam
mov
lock
cmp
cmp
sbbb
sub
addb
stos
add
ja
imul
add
sar
fiadds
inc
push
push
lods
outsb
aas
xor
sti
decl
insl
movsb
dec
add
nop
add
shl
stos
dec
fsubl
inc
xor
mov
lods
adcb
popf
fs
das
inc
fwait
inc
pushf
in
push
dec
ret
and
subl
jge
fistl
mov
inc
hlt
inc
lods
cs
sahf
pop
push
mov
in
jp
pop
jge
jl
mov
dec
xchg
mov
mov
loop
inc
fldl
mov
mov
xchg
push
iret
pop
test
incb
loopne
movl
cmp
jmp
loopne
insl
cmp
mov
mov
in
mov
faddl
shl
inc
aam
pop
pop
pop
pop
sbb
push
pushf
es
xor
in
stos
lods
sarb
cli
mov
lcall
repz
inc
lock
loope
push
sub
dec
scas
es
fsub
jne
cmpsb
outsb
addb
dec
and
mov
mov
dec
inc
jp
leave
scas
out
rorb
and
sub
sub
push
push
cld
add
bound
aaa
test
pop
xor
or
xchg
or
lock
test
add
jns
sub
jns
scas
out
jb
test
push
xchg
test
imul
jno
mov
xchg
push
mov
sti
cmp
cs
adc
stos
enter
in
and
out
jnp
sbb
fisttps
lock
mov
xor
mov
push
jbe
dec
and
arpl
shrl
push
inc
inc
out
hlt
dec
xchg
shll
dec
xor
cmp
xor
xor
fdivrp
lods
mov
lret
pop
mov
in
and
repz
inc
dec
or
or
push
jp
pop
pusha
mov
mov
and
pop
push
jbe
lods
loopne
icebp
xchg
inc
sub
mov
mov
adc
sub
add
js
sub
jecxz
jns
pop
sub
cwtl
jge
iret
inc
inc
orl
adc
cmpsl
inc
gs
push
js
dec
das
or
loopne
cmpsb
and
push
cmpsl
imul
pop
arpl
mov
jmp
icebp
xchg
mov
rorb
mov
leave
adc
pop
mov
shr
xlat
leave
add
adc
cli
loop
out
sub
aam
mov
pop
mov
adc
sub
xchg
lea
pusha
out
cmc
imul
jp
stos
jmp
mov
cmc
notb
shrb
insb
jle
into
dec
fidivs
lods
or
and
sbb
int
ffree
sub
and
insb
sarl
js
dec
xor
pop
fiaddl
and
sub
inc
xchg
repz
cltd
sti
data16
jmp
fs
and
loopne
mov
loopne
dec
aad
mov
test
xchg
jns
fidivrs
out
repz
push
in
adc
inc
cs
lods
dec
loop
dec
filds
out
mov
int3
sarl
scas
adc
aas
call
aam
orb
push
scas
jns
xor
xchg
inc
sbb
xor
cmp
xlat
mov
test
mov
nop
mov
mov
movd
sub
xor
loop
shlb
push
mov
add
push
push
pop
rclb
pop
test
popa
inc
sub
pop
in
loope
cmpsl
stc
ljmp
int3
xor
cli
and
jnp
nop
fisubs
test
xor
insb
mov
jmp
pop
repnz
jbe
dec
in
cmpsb
xor
into
int
imul
mov
movsl
mov
stc
ret
pop
fbstp
sbb
or
push
int3
stos
push
or
pop
rcr
ja
xor
icebp
test
adc
lret
icebp
sub
sub
jno
shll
scas
pop
mov
xchg
scas
lods
inc
js
mov
cmc
push
lea
or
icebp
jae
mov
test
dec
adc
test
les
sbb
shrb
lahf
xor
fsubp
cmpsb
jae
fistpll
shl
out
mov
daa
push
xor
out
mov
loopne
push
aam
xor
cmpsl
and
jp
enter
pop
xchg
movsb
inc
push
jne,pn
roll
cmp
lods
sbbl
xchg
fstl
pop
in
and
sti
mov
mov
dec
mov
leave
std
jae
enter
fstps
jae
icebp
pop
xlat
xchg
pushf
sub
xor
push
xchg
sahf
shl
in
xor
scas
mov
mov
pop
cltd
xchg
dec
adcb
imul
pusha
xorb
ficompl
scas
cmpsl
ljmp
fwait
stos
clc
out
arpl
mov
test
pushf
leave
push
mov
lcall
iret
sbb
aad
push
arpl
jmp
adc
out
add
push
jns
lds
xchg
sahf
pop
pop
sbb
pop
mov
or
mov
je
add
push
fdivrs
mov
and
xor
or
sub
cld
mov
mov
decb
out
sub
int
push
xchg
pop
cmpsb
pop
push
lret
mov
mov
lock
out
mov
negb
or
into
xor
or
and
cmp
mov
ljmp
xchg
fnstenv
imul
sarb
movsl
mul
sbb
pop
dec
shl
jne
es
sbb
lock
fistpl
jno
stos
mov
pop
rcrb
cmp
aad
add
push
nop
jbe
fcoms
iret
mov
inc
orb
sub
cwtl
cltd
inc
fbld
pop
and
lock
into
xchg
pop
mov
jo
into
fstpl
jnp
mov
das
fsubl
xchg
pop
mov
xor
cmp
xor
test
jg
cmp
test
scas
in
push
roll
hlt
daa
mov
imul
cmpsb
mov
jle
or
js
lcall
nop
mov
das
add
push
mov
jno
clc
mov
inc
xor
cwtl
movsl
and
xor
dec
push
enter
and
jl
and
push
ljmp
sahf
fidivs
in
mov
lahf
or
repz
push
test
xchg
pop
in
jg
pushl
das
rcrl
in
test
daa
lods
test
or
add
loopne
in
or
jl
sbb
lret
fstl
stos
in
mov
jge
dec
adcl
je
and
push
out
lods
in
lcall
leave
sub
pushl
adcb
xor
cmp
fidivl
add
and
mov
testl
sti
or
mov
js
jne
sbb
bound
pop
add
jp
mov
lcall
xchg
fiaddl
or
inc
sub
bound
pop
add
jp
mov
lcall
xchg
fiaddl
or
ret
cmp
adc
push
cli
and
repnz
sub
cli
mov
sub
bound
pop
add
jp
mov
lcall
sbb
pop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jmp
sub
cmp
sbb
xor
aas
xchg
jl
mov
dec
lods
pop
mov
sbb
sbb
jmp
sub
cmp
dec
mov
jl
mov
dec
lods
push
mov
or
sbb
lock
sbb
sub
cmp
dec
mov
jl
mov
rclb
and
mov
orb
leave
dec
scas
sar
mov
lahf
out
nop
or
lods
add
and
cmp
sub
push
cmp
mov
je
xor
mov
cmpsl
mov
or
out
push
sbb
push
push
cmp
std
ds
xchg
test
adc
std
call
sub
mov
sub
mov
cmpsb
inc
lahf
cmp
xchg
je
inc
cli
cmp
push
dec
mov
sub
mov
roll
cltd
imul
or
sub
mov
stc
xchg
jae
lea
or
stc
sbb
and
sbb
sub
cmp
dec
test
jl
mov
push
lods
inc
mov
adc
sbb
lods
push
jp
and
sbb
imul
cmp
movsl
jnp
je
xchg
push
cmpsb
sub
imul
mov
jl
leave
sbb
dec
cli
sbb
sub
jge
mov
movsl
pop
mov
loope
mov
jl
mov
dec
lods
pop
mov
or
sbb
jmp
sub
cmp
dec
mov
jl
mov
dec
lods
pop
mov
or
sbb
jmp
fisubrs
dec
mov
pop
add
cmp
testl
sbb
lods
jmp
push
out
je
or
mov
fcmovbe
xchg
pop
inc
add
cltd
insl
mov
jb
gs
cwtl
outsl
push
fistps
mov
adc
ficoml
jnp
jmp
jnp
inc
push
jl
test
dec
pop
xchg
add
aad
mov
out
fstpl
sub
sahf
dec
cld
out
jo
jne
jno
rcll
mov
pop
pop
dec
xchg
mov
xlat
inc
in
jne
stc
adc
sub
roll
fsubrs
imul
mov
dec
scas
loopne
push
int
fsubrl
mov
fs
fidivrs
inc
fldenv
mov
movsl
leave
dec
ret
sahf
adc
xchg
xor
inc
inc
out
push
pop
andb
daa
jle
jae
cltd
loope
and
add
daa
and
xchg
cmp
je
ret
in
stc
xchg
adc
inc
mov
inc
cmp
movsl
scas
and
sbb
inc
sbb
mov
pop
adc
gs
bound
rcrl
sub
bound
stc
jge
or
clc
mov
mov
mov
adc
sbb
xor
seto
fabs
xchg
int
shll
add
or
and
loope
xchg
pop
fistpll
xor
mov
push
int3
dec
jno
fsubl
test
jge
pusha
shll
in
cltd
mov
scas
add
mov
push
aaa
frstor
xor
push
cmp
push
cmp
insl
add
imul
xor
mov
xchg
rep
out
lret
int3
enter
cld
xor
test
fstps
add
out
mov
pop
lret
pop
xchg
lds
xchg
scas
sti
push
loop
push
cmpl
fwait
mov
nop
je
sbb
scas
push
inc
std
js
push
fcomps
or
int
mov
inc
idiv
insb
mov
sub
daa
popf
icebp
add
mov
in
xchg
push
repnz
fldt
mov
sbb
leave
in
test
lea
push
call
mov
movsb
nop
xchg
loopne
push
mov
jle
dec
mov
jp
fcoms
sbb
sub
mov
and
xchg
lcall
add
mov
xchg
mov
adc
lret
jle
mov
pop
pushf
jmp
rorb
inc
mov
add
shrl
mov
call
jno
push
jnp
jo
std
lock
inc
es
jp
xchg
push
and
pop
mov
add
jg
inc
xchg
lods
jl
test
imul
test
sub
inc
xchg
lcall
xchg
fcom
pop
cmpl
repz
push
mov
xchg
lcall
mov
mov
xor
push
and
fistl
cmc
dec
pop
outsl
daa
loopne
mov
loopne
stos
loop
jae
xor
xchg
arpl
xor
mov
jge
loope
jbe
mov
inc
lock
mov
pop
cld
mov
clc
jmp
shll
xchg
jle
fmull
dec
int
and
dec
dec
add
gs
pop
cld
out
out
or
sbbb
icebp
idivb
test
push
imul
outsl
fnstcw
xchg
mov
cmp
cmp
popf
ret
pop
push
aam
inc
test
subb
mov
mov
scas
mov
arpl
dec
daa
testl
jb
dec
cmc
popf
add
mov
roll
push
cmp
mov
jns
sub
mov
pop
imul
ficompl
or
pushf
xadd
leave
cmpsb
cld
pop
mov
std
mov
xor
add
pop
or
aad
pop
sti
jb
mov
cli
fimull
add
pushf
sub
ffree
test
lods
xor
push
jp
xchg
or
addl
xchg
lods
push
insl
cmpsl
cli
orb
test
lahf
mov
popa
imul
in
js
lods
ss
stc
ss
push
loopne
adc
and
dec
cmp
and
stos
sbb
lcall
fucomi
sub
int3
pop
sbb
xlat
push
addr16
pop
and
jnp
aam
subl
xlat
insb
xchg
out
insl
clc
mov
arpl
push
scas
lods
test
lret
jno
cmpsb
in
push
push
sub
pop
xor
adc
and
stos
mov
daa
pop
je
popa
adc
loope
fst
ret
and
lret
mov
mov
xchg
mov
ret
pop
repnz
push
jmp
repnz
xchg
int3
shl
sbb
popf
xchg
mov
stc
mov
dec
and
xchg
mov
out
or
test
ds
loopne
dec
int
std
pop
cltd
ds
mov
bound
jo
movsb
mov
popa
lcall
pop
icebp
mov
sub
adc
add
and
xchg
add
lret
lods
sbb
inc
cltd
into
pop
sbb
xchg
mov
ret
insl
nop
lods
xchg
inc
lret
lret
add
xor
dec
int
xchg
mov
sbb
movsb
sub
in
xor
xlat
sarb
push
push
cld
lahf
outsl
pop
movsl
sbb
ja
out
lea
adc
loopne
xor
mov
sbb
enter
fsubrl
iret
ja
pop
or
test
int
cmp
or
sarl
push
pop
push
cmpsb
dec
call
pop
cmp
xchg
aaa
sbb
add
sbb
fistpl
cmpsb
movsl
jne
int3
test
and
icebp
and
inc
test
mov
aas
stc
inc
int3
aaa
icebp
sarb
push
mov
cmp
cmpsl
fwait
cmpsl
test
fsub
pop
sub
test
jnp
inc
adc
sti
fwait
adc
push
stos
xlat
or
pusha
xor
or
dec
shlb
flds
imul
inc
pop
sti
push
dec
push
rcll
sbb
rcrb
daa
stc
imulb
mov
punpckhbw
sbb
mov
lods
into
ljmp
or
imul
push
fisubl
mov
xor
jbe
andl
mov
lds
pop
jns
insl
pop
popa
cmp
testl
out
cmc
or
jnp
dec
push
adc
xor
outsb
shlb
ss
add
xchg
rol
insl
dec
lahf
lods
loope
mov
dec
mov
xchg
push
push
daa
sub
in
dec
mov
fisubrs
or
loope
xchg
nop
mov
push
inc
cmp
mov
dec
jge
iret
sbb
sub
fildll
mov
mov
nop
and
js
sbb
divl
jmp
xchg
aad
jecxz
and
jp
mov
pop
inc
sub
mov
pop
adc
scas
cli
lds
sbb
roll
push
loope
test
movsl
mov
mov
jno
lock
ds
push
sbb
negb
jno
push
mov
xor
test
insb
push
addr16
xchg
jmp
mov
lahf
aam
sbb
sbb
frstor
add
mov
or
inc
mov
aad
mov
mov
nop
pop
jg
jmp
loopne
pop
jne
push
or
imul
push
sbbb
popa
cltd
cmp
cmp
std
lret
mov
in
mov
mov
and
xchg
sbb
outsl
add
push
out
fcomi
dec
popa
jnp
movsb
popf
mov
rol
loop
add
and
sub
lock
repz
xchg
jl
daa
jmp
xchg
in
data16
xor
loop
add
jno
int3
ffreep
addl
xchg
in
xor
cmp
or
jmp
sbb
lock
imul
adc
imul
add
push
jg
cmp
jg
cmp
gs
imulb
pusha
jle
rcll
cmc
loopne
cmpsb
lds
rcrl
movsb
lds
pop
mov
mov
loope
clc
jmp
mov
jge
pop
dec
dec
cwtl
inc
mov
mulb
dec
mov
sbb
adc
add
add
pop
mov
inc
mov
push
ficoms
add
ljmp
sbb
test
rolb
dec
fstl
lcall
in
push
lods
arpl
sub
aam
jecxz
mov
jo
rorb
int3
or
push
lcall
jbe
cmpsl
in
push
adc
xlat
fldenv
jne
adc
and
enter
jne
pop
cmp
push
mov
cltd
and
xorb
lods
adc
pop
add
out
hlt
add
call
or
icebp
pop
dec
mov
pushf
aam
cmpl
rcrb
sub
mov
mov
cmp
andb
loop
sahf
mov
push
iret
cmpl
iret
lret
ljmp
call
jle
jp
mov
cs
stos
ret
repz
stos
clc
into
cmc
jmp
pop
test
sbb
inc
and
mov
leave
mov
fcoms
aad
mov
add
push
mov
pop
movsb
cld
jmp
mov
add
int3
pusha
jecxz
dec
sbb
imul
push
dec
dec
xor
add
mov
pop
xchg
lods
lcall
cmc
sbb
outsb
pop
mov
imul
jl
test
rol
mov
sub
mov
rorl
test
ja
inc
mov
push
adc
fdivrs
jecxz
dec
iret
fsubs
or
insb
cs
aas
adc
cli
scas
lea
pop
arpl
mov
cmp
cli
loopne
lock
push
add
xchg
arpl
lret
inc
es
push
fucomp
test
mov
arpl
pop
in
popf
in
bound
stos
addr16
insb
mov
ljmp
and
or
stos
scas
aaa
push
xchg
and
shl
leave
aas
add
out
sti
int3
insb
js
icebp
inc
inc
cld
jmp
sbb
sbb
inc
cld
jns
push
push
lcall
rolb
mov
call
sbb
out
or
in
daa
add
mov
and
sub
cld
mov
in
mov
dec
repnz
inc
mul
jno
mov
gs
push
test
pop
jge
sbbl
aaa
test
xchg
xor
dec
lcall
pop
les
inc
mov
fs
dec
or
test
sarl
mov
xchg
pop
pop
mov
sbb
cmp
loope
inc
cmp
movl
stos
mov
add
lds
loop
sub
lods
sub
sbb
sbb
sar
pop
mov
pop
xor
sti
cmp
add
sahf
jbe
pop
cs
adc
jbe
sub
sub
out
push
sub
popa
push
jnp
jmp
xor
mov
mov
fcomp
jbe
sub
orl
cmp
jecxz
adc
xchg
mov
sub
popa
sub
sahf
lcall
dec
xchg
mov
mov
mov
addl
shl
shrl
int3
and
lock
mov
pop
adc
adc
adc
dec
xor
xchg
daa
cmp
inc
cld
aas
cmp
cmp
mov
xchg
pop
add
dec
cmpsl
outsl
jp
mov
aas
inc
imul
sbb
xor
inc
pop
js
push
mov
and
dec
cmp
add
xchg
nop
and
jno
lret
sub
loope
and
dec
lods
mov
fldcw
adc
sub
test
xchg
adc
sub
lods
int3
inc
xor
je
pop
jmp
pop
stc
ret
scas
popf
jo
pop
popa
cmovp
jo
or
add
lods
mov
inc
or
icebp
jns
xor
mov
lcall
xor
mov
cmp
shlb
cmc
rclb
outsl
sub
in
aas
inc
fdivl
pusha
push
add
xor
sti
lods
insb
lock
and
int
movzbl
lds
xor
sub
xor
insl
adc
xchg
dec
sub
test
stos
mov
lock
xchg
fildl
pop
push
test
subl
pop
sti
inc
fildl
mov
stc
dec
scas
cmpsl
std
dec
mov
mov
cld
cli
adc
xor
xchg
icebp
jmp
in
nop
mov
fidivl
lods
outsb
pop
sahf
or
addb
mov
incb
inc
cmp
or
mov
add
push
dec
xchg
mov
call
pop
jmp
mov
dec
sbb
testb
andl
ja
sahf
sub
fcmovnbe
fidivrl
test
cmp
std
stos
xchg
insb
pop
outsl
jl
jns
sti
nop
es
leave
xchg
cmp
mov
leave
leave
jo
push
ja
sbb
cmp
jnp
out
clc
mov
stc
inc
cmp
les
lret
test
mov
out
and
or
push
rcrb
andl
lock
loop
or
scas
mov
jb
mov
pop
xor
in
dec
add
cmp
xor
les
pusha
lret
jo
and
xlat
dec
xor
lcall
ret
in
jg
xchg
jbe
lods
sarb
and
cmp
fwait
test
mov
push
add
fwait
dec
mull
out
cmp
mov
sti
call
ret
add
cmp
movsb
xchg
jbe
nop
adcl
mov
sahf
dec
shlb
fldl
popf
add
sbb
push
lods
rcrl
adc
shr
popf
xchg
push
outsb
out
scas
decl
nopl
pop
jle
jo
insb
sbb
and
jae
pop
and
push
mov
jp
xor
flds
cmpsl
loope
and
or
mul
add
add
inc
sub
movsb
aaa
cs
dec
push
pop
xor
ret
cmp
mov
inc
xor
mov
mov
add
testl
call
sub
inc
and
pop
inc
test
or
jbe
test
jno
mov
add
mov
pop
mov
cwtl
std
mov
in
in
or
mov
enter
inc
jo,pt
daa
add
les
xor
cmp
stos
adc
dec
scas
xor
dec
data16
js
dec
test
mov
mov
inc
mov
lods
dec
mov
insl
xchg
sub
jecxz
mov
xor
shll
jae
lods
sub
ret
jg
dec
test
lret
je
bound
xor
xlat
mov
pop
std
jbe
adc
mov
scas
cmp
jo
sar
cmp
cmp
popf
int3
add
adc
repz
testb
les
cwtl
std
sub
mov
cmp
adc
pop
mov
adc
mov
cmp
push
lods
add
mov
stos
repnz
sbb
pop
loopne
subl
sbb
mov
shll
pop
test
add
mov
and
cmp
insb
imul
cwtl
scas
fidivrl
xor
sarb
into
jo
mov
and
and
stos
fnstsw
imul
mov
xor
sbb
add
call
loop
and
pop
push
je
push
mov
pop
jae
ds
lock
loopne
sub
stos
fdivrs
insb
mov
cmp
insb
pop
push
sub
or
push
sbb
fildll
std
cmp
out
test
jg
push
inc
push
xlat
inc
fwait
pushf
ret
sub
testb
out
push
jns
fimull
inc
pop
int3
mov
arpl
stos
into
xor
sub
imul
lock
mov
push
mov
adc
mov
test
add
subl
mov
or
lods
cld
or
sbb
cmp
mov
push
dec
jmp
aaa
jnp
sarl
push
dec
test
add
xchg
outsl
data16
lret
scas
ficompl
jl
test
jno
out
mov
push
mull
jmp
imul
not
add
push
ja
loope
pop
dec
cmp
and
xor
icebp
add
sub
out
lods
adc
addl
dec
and
scas
int3
or
or
add
es
or
cmp
push
mov
pop
mov
or
loopne
int3
cli
jnp
sub
ret
mov
mov
jle
pop
jo
js
push
jmp
pop
xchg
les
mov
fistpll
push
jnp
icebp
pop
das
sub
stos
push
dec
in
sbb
sub
and
cmp
movsb
fnsave
xlat
movsb
xorb
outsb
ficoms
xchg
cmp
pushf
xchg
lock
insb
cmpsl
jmp
push
loope
xchg
test
mov
test
mov
pop
lahf
int
mov
in
add
xor
shl
pop
call
mov
stos
jnp
out
adc
ret
fimull
das
cs
loope
repz
cli
xorb
sub
jns
adc
push
repz
push
rcll
loop
lahf
jle
cld
mov
mov
mov
sub
inc
into
mov
cwtl
jg
xchg
mov
repnz
xchg
or
in
pop
inc
inc
push
out
cltd
sti
ja
and
sbb
and
fidivs
pop
jecxz
call
push
or
adc
add
push
sub
push
stc
mulb
cmp
shll
push
mov
scas
popf
pop
push
ljmp
xchg
xchg
mov
enter
mov
and
repz
mov
mov
stos
mov
jb
jb
xor
dec
hlt
scas
jo
mov
mov
xor
mov
sti
or
outsl
pop
pop
pop
cltd
in
fsubr
pusha
and
and
mov
cmc
cld
mov
mov
fnstsw
sbb
mov
cmp
inc
ljmp
fstpl
test
push
inc
jg
push
psubw
sbb
mov
pop
add
out
lods
loope
or
mov
push
xchg
mov
mov
imul
dec
cmpsl
pusha
fbstp
push
movsl
cld
mov
add
jmp
sub
mov
dec
test
cmp
mov
je
or
mov
mov
lods
dec
out
in
pop
ljmp
xor
aam
adc
xlat
push
xchg
cmp
push
and
sub
out
pop
dec
and
inc
aad
cltd
sbb
imul
xchg
xchg
jns
push
or
in
out
mov
in
sbb
cmp
mov
cmp
gs
pop
ficomps
in
push
sbb
int
cwtl
movsl
cld
xchg
mov
outsb
test
push
hlt
push
enter
mov
or
jmp
mov
jb
pushl
sbb
cld
mov
mov
cltd
fwait
or
pusha
shll
ss
sub
xorl
xor
jns
pop
jne
dec
push
jl
ljmp
ljmp
in
push
inc
adc
adc
mov
dec
es
in
cmp
cltd
pushf
dec
inc
adc
outsb
rcrl
xchg
pop
data16
enter
scas
aas
mov
push
mov
into
sbb
xcrypt-ecb
cmpsl
dec
mov
sub
test
mov
lcall
jo
js
mov
enter
popa
dec
xchg
pushf
push
imull
pop
loop
fsubs
inc
cmp
cli
test
jne
shll
pop
add
inc
cmp
xor
neg
out
stc
shrb
movsl
jge
inc
imul
mov
mov
mov
adc
push
push
jp
cmpsl
out
scas
pop
cmpsb
jbe
leave
cwtl
aam
sti
insb
dec
jno
stos
push
aam
sbb
into
pop
xor
pop
popw
inc
roll
test
mov
jne
xor
pop
mov
add
jle
ja
lods
enter
sbb
cmp
pop
mov
hlt
add
aam
in
push
sbb
mov
adc
sbb
inc
lret
enter
int3
andb
or
sbb
imul
mov
add
jb
pavgb
push
fdivl
jg
mov
repz
or
test
fsubrl
inc
pop
pushw
mov
popa
jmp
aaa
push
daa
in
pop
lods
jecxz
add
dec
lcall
mov
or
inc
sahf
pop
inc
test
push
into
data16
out
out
jne
xor
loope
outsb
lds
aam
pop
or
ljmp
pushf
mov
aam
push
xchg
fs
test
popf
subl
adcb
sbb
sahf
cld
sbb
lods
add
push
dec
pop
data16
negb
xchg
push
jmp
push
mov
mov
test
xor
into
jl,pt
xchg
orb
fs
adc
aaa
xchg
mov
data16
sub
mov
jl
mov
dec
lods
pop
mov
or
sbb
jmp
sub
cmp
dec
mov
jl
mov
dec
lods
pop
mov
or
sbb
jmp
sub
cmp
mov
jl
mov
dec
lods
pop
mov
or
sbb
jmp
sub
cmp
in
sbb
jecxz
pop
lret
pop
inc
mov
notb
out
sub
sbb
adc
clc
popf
mov
mov
call
fcomp
and
cmp
or
sbb
push
dec
pop
sub
movsb
mov
cwtl
call
enter
xor
add
xor
push
mov
fwait
out
icebp
stc
in
enter
mov
sbb
insl
outsl
jg
mov
pop
mov
jb
cmc
xchg
jae
aaa
jmp
mov
add
mov
fsubl
ja
jae
insl
mov
dec
cmp
js
sub
cmp
push
cmp
pusha
add
ja
addr16
dec
jne
cmp
xchg
jne
dec
dec
imul
fnstsw
ja
adc
fnsave
daa
enter
div
fsubrs
sti
or
push
jo
and
ljmp
lods
xlat
cmp
mov
dec
mov
rorb
sar
lret
sbb
cmp
or
je
push
dec
loopne
pop
test
mov
mov
out
enter
pop
sub
dec
insl
jbe
push
push
sbb
cmp
fmuls
cli
mov
inc
mov
dec
jnp
ja
push
sub
fdivr
fucomp
in
hlt
lcall
cltd
lods
pop
sub
cmp
pop
pop
sub
dec
pop
pop
test
mov
cwtl
call
enter
sub
cmp
or
sbb
js
dec
dec
pop
pop
test
mov
cwtl
call
enter
sub
sub
jecxz
out
xchg
jmp
or
inc
iret
jl
imul
test
mov
xchg
mov
jge
adc
ljmp
es
inc
pop
shrl
inc
clc
movb
jae
js
fistl
dec
jge
adcb
imul
or
inc
call
test
loope
cmp
xor
and
rorl
mov
xor
lods
mov
push
inc
inc
jmp
mov
test
insb
pushl
out
xor
mov
pop
push
xchg
inc
sub
xchg
jb
cmp
xchg
push
xor
xor
adc
les
jno
mov
test
xor
std
sbb
push
cmp
insb
rcrl
arpl
jnp
outsl
xchg
push
pop
mov
mov
fstp
pop
sarb
mov
mov
ret
fdivl
push
cmp
push
mov
sub
dec
adc
mov
mov
push
push
mov
xchg
stc
inc
imul
jle
xchg
ljmp
dec
push
and
jl
and
call
cmp
stos
mov
pop
ss
cltd
ret
pop
push
ljmp
mov
mov
mov
dec
adc
ljmp
add
xlat
inc
movsb
aam
xlat
enter
jns
cwtl
xchg
xchg
loope
mov
clc
pushf
mov
shl
out
inc
pop
adc
jmp
loop
add
ret
pop
loope
int
out
xor
jmp
out
dec
aaa
das
lret
sub
idivb
cmp
fcmovu
clc
mov
inc
dec
xlat
out
mov
adc
adc
jne
rcr
or
mov
mov
push
subb
loope
mull
outsb
adc
lods
out
call
movsb
adc
add
or
ja
inc
xchg
lea
mov
push
sub
pop
push
addr16
xor
jbe
cmp
xor
mov
sub
sahf
and
mov
rclb
jmp
iret
or
jle
mov
dec
imul
hlt
loop
push
dec
mov
sbbl
rcrb
jl
pop
fadds
daa
cmp
xchg
test
add
ds
js
jb
ljmp
pusha
je
std
sbb
mov
inc
outsl
push
out
shlb
das
fcomps
fcmovnb
add
and
repz
and
cwtl
filds
xor
mov
in
or
repz
fldt
mov
lods
hlt
jmp
ret
jmp
aaa
pop
or
cmp
pop
xor
dec
xchg
dec
xchg
aas
lock
inc
loop
xor
in
cmp
xor
scas
sub
enter
sbb
or
mov
or
test
outsb
out
outsb
call
jnp
sbb
cmp
cmp
mov
mov
stc
shrb
dec
xor
mov
mov
out
fldl
jge
es
mov
mov
cmp
mov
imul
lcall
mov
push
rcr
flds
add
xlat
pusha
xorb
lret
sbb
shlb
adc
hlt
push
add
dec
sub
push
mov
sub
and
and
sub
lcall
test
cmp
repz
negl
inc
jo
popa
mov
xchg
lods
sahf
out
xchg
shlb
int
adc
mov
addr16
push
dec
in
xor
cmp
add
lret
pop
enter
adc
inc
neg
iret
mov
insb
scas
andl
lahf
xchg
pop
or
jnp
cs
das
fimull
jge
jmp
and
mov
xor
aaa
or
add
in
xchg
jp
mov
pop
sahf
aad
std
in
cs
hlt
cld
or
mov
imul
xor
sbb
mov
jb
ret
dec
ret
test
mov
xchg
pushf
sub
cmc
aam
xchg
insl
jns
add
push
lret
clc
mov
clc
xchg
mov
jns
pop
pop
addb
into
push
inc
inc
xchg
cmpsl
inc
js
nop
cwtl
mov
sahf
das
iret
aam
jg
pop
jno
jo
push
cmp
cmpsb
and
imul
cwtl
data16
push
stos
cmp
cltd
dec
sub
shlb
fnstcw
sahf
imul
mov
mov
daa
arpl
mov
xor
ficompl
cmovno
cmp
imul
jge
cmpsl
ret
inc
pushf
fs
jl
adc
or
or
out
clc
jmp
and
jns
aad
push
dec
sub
scas
insl
popa
push
pop
insl
or
mov
shr
jg
call
std
xlat
rol
xchg
xchg
bound
xor
cld
xchg
lods
cli
mov
mov
mov
pop
inc
orl
mov
push
dec
dec
jp
adc
mov
adc
inc
hlt
sti
push
sbb
inc
xchg
add
sub
mov
lret
and
sarl
mov
into
jnp
sarl
and
sti
sarl
shlb
fidivrl
adc
mov
stos
inc
popf
cmp
pop
rcrb
pusha
sub
mov
cmp
xchg
push
cli
es
mov
insl
mov
jb
push
mov
js
scas
iret
mov
sbb
cwtl
test
cld
push
jnp
in
sbb
mov
out
jp
fsubrl
jmp
add
outsl
mov
and
repz
sbb
imul
jns
insb
adc
dec
jnp
sub
je
mov
lcall
adc
xchg
jb
pop
xor
rcrl
arpl
adc
sbb
test
push
int
bound
push
jecxz
mov
sub
pop
pushf
orb
lds
int3
stos
stos
adc
pop
leave
adc
loop
sarl
das
jae
mov
adc
dec
mov
jg
inc
lret
and
test
xor
idivb
rclb
lea
int
push
dec
out
ret
pushf
jle
push
in
gs
int
movsl
fmull
adc
add
das
push
xchg
and
add
mov
sbb
loop
xlat
pop
xchg
sbb
jp
sti
xchg
pop
aaa
mov
fwait
add
inc
push
dec
mov
and
bt
pop
stos
nop
or
or
mov
mov
test
scas
mov
sub
cli
mov
cmp
mov
inc
sub
fs
and
roll
sub
shrb
fadds
xor
sub
mov
jo
out
and
inc
dec
jno
mov
dec
into
jne
lds
in
jmp
pop
push
shl
repnz
rcrl
lret
cmp
into
mov
jae
loopne
push
testl
jp
mov
rol
lods
cmp
mov
hlt
lock
inc
xchg
mov
xchg
jl
outsb
jne
cwtl
out
push
bound
mov
test
jbe
or
cmpsl
sti
mov
das
xor
add
loope
das
push
adc
les
insb
aas
mov
fcoml
and
loopne
push
retw
xor
sub
sarw
push
push
lea
mov
mov
sbb
or
mov
jge
and
arpl
cs
mov
sbb
cwtl
xchg
nop
push
cmp
icebp
cltd
icebp
mov
pop
repz
sbb
insl
gs
jge
mov
pop
lock
mov
icebp
sbb
push
pop
add
xchg
insb
cmp
insl
cli
pop
fcmovne
push
add
push
add
push
dec
call
jp
mov
int
unpcklps
pushf
ret
add
clc
enter
xor
mov
lahf
leave
dec
je
push
lret
cld
mov
sahf
sub
mov
icebp
mov
subb
shll
sub
or
and
pop
jmp
push
cltd
fs
push
xlat
mov
mov
ror
and
xchg
pop
dec
xchg
ljmp
adc
or
inc
popl
movsl
in
xor
int
sti
push
cs
xchg
outsb
stc
aaa
leave
orl
jp
popf
out
addr16
push
ljmp
sbb
test
out
incb
mov
fidivl
in
mov
out
push
and
cld
jnp
sbb
sub
xchg
in
out
js
cld
or
mov
adc
cmpsl
in
sbbb
js
lea
xor
jl
popf
mov
mul
fwait
jmp
stos
push
hlt
or
iret
jmp
ficoml
mov
arpl
aas
lret
les
call
cmp
jg
inc
sbb
js
cmp
mov
ss
mov
lret
lret
jne
adc
nop
jb
dec
in
fisubrs
mov
jle
jno
std
mov
stos
and
xor
or
js
imul
dec
pop
popa
in
mov
je
jns
repnz
in
or
dec
pop
call
cltd
jb
aad
push
hlt
test
pop
inc
cmp
jg
fisubrl
mov
xor
lods
push
mov
aad
lea
push
jo
and
jb
int3
out
mov
lds
inc
loope
push
adc
enter
or
xchg
lock
movsl
push
icebp
cmp
popa
sub
clc
or
and
or
jno
clc
xor
ljmp
push
loopne
jp
push
mov
mov
bound
sub
test
in
mov
jo
inc
jae
or
flds
sub
sbb
pop
iret
inc
or
sub
push
xchg
mov
xlat
sarb
xchg
jbe
and
fstps
add
in
js
leave
jg
in
pop
mov
test
les
movsb
je
test
sub
insb
imul
jg
lret
xchg
pop
negb
leave
jle
and
add
mov
ficoml
jo
mov
cmc
xor
adc
pop
add
add
and
pop
push
stc
jb
incl
shr
cmp
shl
ds
and
mov
add
push
add
add
addr16
mov
movsb
test
shrb
scas
pop
xchg
mov
inc
clc
dec
sbb
scas
push
or
cmp
pop
leave
outsb
inc
in
iret
out
inc
stc
pop
shrl
stos
ds
push
shr
or
loope
mov
cmp
fadd
xor
cmp
lahf
mov
push
mov
movsl
push
adc
xor
lcall
sahf
movsb
cltd
sub
cmpsl
pusha
mov
lods
shlb
xchg
cs
scas
push
repz
loop
icebp
jb
inc
jb
mov
int3
inc
jge
rolb
das
pop
test
pop
add
mov
jge
jb
sbb
sbb
pop
xchg
add
jbe
push
dec
pop
jae
jl
divb
xor
jle
sahf
pop
jns
movsb
adc
push
ss
int3
pop
and
xchg
mov
sbb
push
inc
imul
mov
jmp
inc
push
or
dec
push
imul
cltd
add
mov
jecxz
aad
add
jne
mov
and
fsubs
ret
nop
push
test
adc
iret
jmp
mov
or
lds
push
out
xchg
out
mov
lock
lea
js
cmp
lcall
daa
or
ja
ljmp
pop
loopne
xlat
xchg
inc
jmp
xlat
dec
xor
mov
lock
loop
sub
or
aaa
shl
xor
or
test
ficompl
fldl
mov
lret
cmpsl
sub
dec
mov
fsubr
insl
lock
fst
aad
jp
ret
loope
repnz
pop
ss
sbb
insl
jbe
dec
cmp
jnp
or
push
push
ret
outsl
cmp
push
dec
ret
pusha
dec
mov
jae
or
ljmp
sbb
push
scas
cmpsl
stos
push
xchg
mov
test
test
dec
mov
and
mov
push
add
dec
adc
js
jmp
mov
xchg
hlt
out
cs
mov
push
sbb
hlt
adcl
outsb
repz
xor
mov
aas
in
int
outsl
and
push
stc
outsb
cli
push
in
pop
or
xor
adc
data16
sbb
pop
stos
push
scas
imul
inc
and
adc
cmovne
repz
push
out
inc
in
cli
add
pop
dec
into
inc
dec
and
popa
xchg
aam
inc
popl
test
pop
mov
jb,pt
mov
or
fisttps
addr16
cmp
insl
inc
xor
adc
mov
mov
dec
xchg
add
jbe
xor
add
adc
cmp
sbb
jne
pop
mov
decl
xchg
outsl
sbb
out
lock
movsb
ss
lock
mov
fcomps
xchg
ljmp
jb
shll
cmp
lock
push
and
inc
fildl
cmp
jns
inc
jle
jnp
lods
test
rcrl
cs
rcrb
xor
sbb
lds
nop
out
pop
cmp
and
leave
mov
rcrl
mov
stos
xchg
enter
test
imul
mov
out
sbb
int3
in
sbb
js
mov
push
jl
rcrb
subb
test
jg
aad
pusha
pop
xchg
xchg
dec
inc
hlt
mov
jg
inc
imul
cld
fnstsw
cli
sahf
cltd
add
mov
loope
dec
mov
pop
adc
xchg
repz
jno
push
jnp
int3
call
das
fsts
jle
jp
out
jns
addb
mov
out
fildl
jbe
std
or
and
insb
mov
xor
shl
outsl
les
mov
mov
loope
fucomip
divl
ret
out
hlt
insl
push
std
mov
je
scas
mov
mov
xchg
outsl
lretw
add
mov
add
jo
sub
pop
sub
loop
lods
xor
leave
movsl
enter
out
adc
das
enter
jg
mov
adc
xor
fdivs
jecxz
rcl
sbb
out
jae
lret
int
fbstp
jo
add
popa
mov
cli
stos
ja
dec
xor
mov
adc
enter
stos
orl
xchg
int
mov
int
ljmp
lods
xor
out
or
push
cmp
sub
inc
aaa
xor
jno
dec
dec
mov
dec
mov
movsl
sahf
mov
in
outsb
pop
mov
loop,pn
fsubl
enter
inc
jbe
enter
repz
mov
push
fwait
cld
std
decb
push
into
test
mov
pusha
mov
sbb
push
sbb
add
xlat
pop
mov
leave
test
shl
xchg
mov
sub
adc
pop
ret
jl
xchg
cltd
into
xor
sub
fsubl
and
addr16
lcall
pop
push
ret
inc
fisubs
or
inc
push
out
loopne
repnz
in
xor
mov
xor
out
fs
test
mov
pop
mov
in
mov
mov
mov
pop
mov
xor
outsb
scas
lea
cmp
ret
mov
insb
cwtl
mov
adc
sti
mov
repz
mov
lcall
mov
fistpl
gs
loop
jecxz
cmp
pusha
inc
push
nopl
cwtl
mov
ret
xchg
mov
jle
pop
sbb
std
ss
add
xchg
xchg
jnp
push
clc
ss
fistps
dec
repz
sbbb
jnp
cmp
push
xlat
push
or
bound
cmp
xorb
in
outsb
cltd
pop
scas
add
add
dec
stc
mov
push
inc
js
es
test
and
pop
sahf
and
dec
sub
push
in
js
out
pop
roll
lcall
push
pop
add
pop
xchg
pop
xchg
mov
xor
cmp
sbb
addb
sbb
add
das
popf
scas
imul
push
addr16
inc
mov
dec
movsb
xor
add
pop
mov
add
xchg
mov
jl
sbb
pop
fnstenv
ja
or
mov
shl
mov
rcrl
jecxz
push
lcall
aad
es
pop
dec
sbb
xchg
into
jmp
mov
mov
push
aaa
out
xor
inc
out
movsl
idivb
iret
push
lret
aas
push
mov
mov
mov
icebp
jo
fldcw
jnp
and
pop
call
dec
xchg
test
addr16
lret
arpl
jnp
xchg
xchg
mov
pusha
xor
jmp
mov
cmp
push
stc
pop
pop
insb
inc
scas
mov
movsb
push
add
fwait
xchg
ss
xor
inc
push
push
xchg
idivb
pop
test
int
fnstenv
add
mov
adc
cmp
ss
loop
adcb
std
mov
or
push
sub
icebp
shlb
sub
cmp
sbb
cmc
adc
cli
jnp
mov
xchg
xchg
loop
pop
test
mov
mov
add
xor
mov
push
push
sahf
or
out
mov
cmp
jle
movsl
shll
cmp
mov
cmpsl
shlb
ja
xor
sub
push
inc
fstl
inc
inc
int
and
arpl
sbb
frstor
ret
cmpsb
mov
dec
adc
adc
add
outsb
pushf
cmp
xor
mov
jp
xor
ficomps
xorb
stos
add
push
arpl
mov
sub
and
sub
sar
adc
stos
dec
adc
stos
cmpsl
and
lahf
sub
ret
adc
xchg
mov
cmp
pmullw
dec
jb
adc
lods
xor
jno
lock
add
scas
inc
sbb
lock
lds
sub
jg
mov
movsb
xor
lret
loope
pop
dec
mov
rcr
in
mov
dec
aam
push
pop
inc
dec
pop
iret
mov
sbbl
imul
mov
stos
adcb
call
push
out
lahf
jge
pop
stos
aas
call
sbb
cwtl
push
mov
jge
rclb
xchg
mov
lret
fimuls
divb
push
div
jns
imul
add
testb
push
push
ja
push
lcall
sub
test
leave
addr16
sbb
mov
inc
jnp
add
outsl
cmp
mov
in
jno
das
scas
lds
pop
lcall
mov
lret
arpl
push
mov
add
sub
loopne
mov
inc
mov
ror
sbb
mov
aad
add
pop
dec
jns
sub
push
cmp
push
fidivrl
les
mov
sbb
out
pop
cltd
xor
mov
je
and
js
fcoms
ret
std
or
xchg
sub
loopne
or
push
jbe
subb
mulb
adcb
ret
fisubrl
dec
gs
cs
pop
fisttpl
jmp
mov
int
stc
mov
movsb
scas
add
fs
loop
je
push
shlb
aas
fcoml
sub
sti
jl
hlt
cwtl
mov
sub
mov
les
or
int
xchg
movsl
cmp
xchg
push
lcall
aad
ljmp
pop
aaa
stos
push
lods
mov
fisttpll
mov
jmp
rcrb
xor
xchg
sub
push
orl
jne
xchg
cmp
es
ds
in
rclb
xchg
rcrb
push
mov
ret
jecxz
push
ret
out
add
rcrb
pop
stc
add
mov
inc
loop
mov
scas
mov
or
inc
or
jb
jbe
push
in
inc
jbe
dec
movsb
loope
test
and
or
dec
xchg
aas
jecxz
movsl
lds
sbb
loop
clc
cltd
push
cmp
leave
data16
jp
xor
push
fisttpl
xor
rcl
mov
pmaxsw
mov
jmp
inc
mov
icebp
mov
xor
sti
inc
push
jb
scas
mov
and
mov
test
mov
stc
mov
jbe
add
push
jmp
jl
nop
jecxz
mov
hlt
adc
cmp
or
push
dec
pop
pop
test
mov
cwtl
call
enter
sub
cmp
or
sbb
js
dec
dec
pop
pop
test
mov
cwtl
call
enter
sub
cmp
or
sbb
jl
dec
dec
pop
pop
lods
test
mov
call
int3
call
cmp
or
sbb
push
cwtl
test
inc
adc
mov
xchg
mov
cmpsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
pop
or
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xchg
out
add
add
add
xchg
hlt
add
add
add
test
mov
add
adc
add
add
add
add
cld
add
adc
add
xchg
add
xchg
add
add
push
add
add
push
add
add
add
xchg
add
add
loop
pop
add
add
dec
add
add
add
add
and
add
adc
add
add
add
mov
cmp
hlt
add
add
add
push
add
filds
ret
add
add
add
inc
add
leave
add
add
add
testb
add
add
add
add
sbb
testl
fildl
insb
add
jns
je
verr
add
add
add
add
add
add
xchg
add
in
add
mov
inc
add
cmp
add
push
add
add
add
add
cltd
add
gs
add
add
add
into
add
add
add
dec
add
add
add
mov
dec
add
add
add
js
adc
add
add
add
add
cltd
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
imul
mov
jl
rolb
jno
data16
add
add
movl
movsb
add
add
add
add
pop
add
add
add
add
faddl
fiaddl
gs
add
jo
mov
add
addl
movl
jge
out
add
sub
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
in
or
test
mov
dec
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
push
add
insl
add
push
add
add
sub
inc
add
add
push
add
add
inc
add
add
add
add
add
addb
add
add
add
sbb
movl
mov
add
mov
add
add
add
hlt
add
add
add
add
add
add
add
add
movsb
add
and
add
mov
add
add
add
add
push
add
add
add
add
xchg
add
add
add
pop
add
add
add
adc
inc
add
add
dec
add
stos
add
add
add
add
add
add
add
add
push
xor
xlat
dec
sbb
mov
dec
push
sub
adc
mov
fldl
inc
notl
leave
insb
jge
dec
add
repz
sbb
xchg
in
dec
shr
xor
mov
orb
sbb
enter
and
push
pushl
xchg
cmc
shrb
int
adcb
mov
sbb
mov
fidivs
cmpsl
cltd
sub
or
inc
or
ret
mov
movsb
push
les
add
vmulsd
lods
add
mov
mov
pop
pushf
cwtl
dec
jmp
push
mov
or
sbb
dec
aam
loop
cmp
cmp
inc
adcl
jnp
pop
ss
jnp
outsb
ljmp
push
pop
mov
push
iret
fcomp
dec
pop
aam
mov
mov
fcoms
mov
jge
and
sbb
mov
sti
xorl
pop
orl
pop
push
dec
mov
pop
and
sub
imul
push
add
shll
sbbl
sbb
add
fildll
xchg
mov
test
repz
mulb
adc
sahf
push
mov
and
mov
stos
int3
xor
xchg
cmp
pop
fstp
mov
and
sbb
mov
fcoms
jne
mov
aaa
out
xchg
test
jnp
fmuls
push
xorb
lret
daa
scas
jns
lock
mov
fdivrs
call
loop
out
loopne
cli
mov
jp
out
jns
mov
call
pop
scas
adc
cmp
dec
aam
dec
in
arpl
sub
jl
push
jns
sbb
inc
pop
ficompl
jb
pop
jno
push
in
mov
es
cwtl
mov
jo
rol
cmp
mov
pop
inc
int
and
pop
mov
sub
push
imul
pop
add
and
dec
jl
aaa
or
daa
or
lahf
xchg
mov
cmp
xor
mov
clc
fistpll
imul
in
roll
je
xchg
dec
pusha
pop
xchg
mov
add
sbb
dec
mov
daa
lahf
roll
jmp
int3
dec
aas
sarl
xchg
sub
push
jmp
jp
cli
or
lods
sub
int
xchg
push
adc
cmp
jmp
idivl
pop
push
data16
sub
imul
adc
push
or
mov
sub
push
or
dec
jmp
xor
mov
or
popl
sbb
xor
pop
aam
xchg
mov
xchg
shrl
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
