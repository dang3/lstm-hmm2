xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
xor
ret
push
addl
pop
ret
add
popl
push
mov
push
xchg
add
pop
push
xchg
mov
push
xor
pop
xchg
xor
xchg
push
popl
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
pop
push
xchg
ret
xchg
popl
push
ret
push
xchg
xchg
xchg
pop
push
xchg
mul
add
add
ret
push
pop
ret
pop
push
xchg
ret
add
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
call
push
push
call
push
call
push
call
push
push
push
call
push
call
push
push
call
push
push
call
push
push
push
call
mov
push
push
push
call
push
call
push
push
push
call
push
push
push
call
push
push
push
push
call
push
cmp
jae
ret
add
call
in
jmp
out
and
mov
arpl
pop
and
xchg
mov
adc
adc
rcll
or
dec
aam
lcall
push
lds
dec
mov
nop
sub
enter
gs
scas
cmc
test
sbb
jge
push
push
jecxz
test
fdivrs
push
test
add
jne
int3
mov
mov
fstpl
arpl
gs
mov
mov
scas
push
or
ja
xchg
jnp
and
push
in
sbb
cmp
xchg
and
jo
out
int3
sub
mov
or
push
pop
push
mov
jecxz
jmp
cmpsb
stos
cld
js
pop
out
dec
add
shlb
jl
in
adc
push
cmpsb
inc
pusha
outsl
add
cmc
jbe
push
jle
jae
pop
iret
ljmp
sub
ret
jae
ss
out
int3
cltd
dec
and
lgs
dec
fwait
call
std
lds
cmpsl
dec
lock
mov
adc
pushf
iret
pushf
push
sub
mov
sub
sub
xchg
push
xchg
xor
ds
cmp
xchg
adc
dec
dec
pop
subl
push
mov
hlt
inc
iret
icebp
inc
pusha
mov
rorl
inc
push
lea
mov
pop
pop
cmp
dec
jg
push
push
cli
inc
mov
testl
outsl
pop
or
sti
xchg
shrl
idivl
fists
xorl
out
imul
nop
out
push
xor
mov
sbb
enter
jns
push
fs
popa
sbb
xchg
cmp
imul
fnsave
mov
ds
pop
pop
xchg
xor
fiadds
ja
out
sub
add
inc
jbe
sbb
jmp
jns
das
out
mov
lcall
mov
cwtl
cltd
fdivrs
das
sub
mov
popa
add
xchg
daa
cwtl
pushf
enter
pop
stos
repnz
repnz
inc
imulb
ss
cmpb
jmp
aad
mov
movsb
fcom
loopne
leave
lods
xor
sub
inc
push
repnz
popl
push
test
sub
jb
xor
cli
sbb
or
idivl
inc
jne
jno
or
test
les
js
sub
cli
lds
clc
push
xlat
lods
sub
andl
mov
sbb
out
sbb
lds
sub
jle,pt
mov
jecxz
pop
add
aad
notb
call
mov
add
popf
shrb
dec
ret
in
adc
pop
cltd
pusha
mov
xchg
mov
dec
add
mov
faddl
add
or
push
das
and
insb
fld
lock
pop
ja
add
mov
dec
adc
orl
leave
mov
inc
inc
xchg
pushf
sti
jge
into
dec
cmpsl
adc
out
jmp
insl
push
lods
pop
enter
stos
mov
xchg
divb
push
popa
cwtl
ficoml
popa
or
pusha
frstor
xchg
push
push
int3
cwtl
pop
pusha
ds
inc
cmpb
push
ja
jle
sbb
jmp
jl
push
push
frstor
jmp
sub
and
icebp
cmp
movsl
xor
subl
push
pusha
mov
mov
mov
int
jno
cmp
clc
adc
push
lret
repz
mov
inc
ds
cmp
cmpl
lret
sub
fistpll
xor
xchg
lret
in
cmc
notl
cli
mov
sub
mov
inc
mov
mov
adc
filds
loope
cmp
ljmp
fwait
mov
cmp
sub
xor
popa
mov
aaa
fnsave
jge
cmp
addr16
mov
fdivr
scas
or
insb
mov
pop
je
nop
aam
xor
jl
imulb
sti
mov
add
sub
jns
xchg
push
in
ret
gs
pushf
pop
pop
insb
xor
push
dec
shll
mov
inc
xor
addr16
divl
sub
dec
mov
or
outsl
test
inc
lcall
lds
or
imul
xor
pop
or
int3
mov
dec
stc
adc
add
outsb
int3
mov
cltd
fsubs
aaa
orb
jle
loop
mov
jns
int
cmpsl
adc
inc
jo
adc
xor
mov
sub
sbb
mov
fs
add
mov
cmc
lahf
sti
and
ds
les
divb
add
aaa
jns
cmp
dec
fmuls
daa
test
mov
nop
xlat
rcl
test
nop
out
addr16
mov
rcrl
aam
jmp
jmp
daa
mov
xor
call
xor
lea
repz
mov
je
daa
jne
jnp
mov
sbb
mov
orb
dec
or
into
xchg
adc
push
les
sarl
test
cmpsl
std
call
pop
push
dec
aas
icebp
lods
push
out
loope
cmp
sub
cmp
cmp
sub
mov
loope
sub
cli
add
std
jbe
call
xchg
pop
cmp
andl
mov
push
in
jg
clc
fcomps
add
sbb
mov
pop
dec
cmpsl
inc
ds
xchg
xor
sub
fsubrs
mov
and
push
xor
jmp
fldcw
mov
sbb
pop
js
lret
or
mov
lret
lea
shrl
outsl
inc
call
and
enter
les
ds
outsl
int3
jns
jnp
add
insl
std
das
jbe
and
jnp
roll
xchg
stc
jg
sub
jo
sahf
xor
pop
fnstenv
out
push
pop
push
mov
aad
dec
andl
aas
fldenv
mov
push
sub
sbb
xor
lret
inc
jnp
dec
lahf
jb
xlat
mov
ror
subl
mov
jecxz
cmp
je
das
and
lods
sbb
xor
repnz
cli
ds
mov
mov
lods
mov
int3
xor
xor
mov
sub
in
mov
push
imul
insb
jno
mov
jno
jmp
daa
cmp
cmp
movsl
out
sub
imul
outsl
jns
sub
cmp
repz
jmp
and
stc
add
sti
bound
ljmp
mov
cmc
push
or
in
dec
inc
cmp
js
lcall
cltd
inc
repz
test
mov
ds
or
rcll
mov
sbb
mov
out
stos
fildl
aaa
imul
iret
or
or
adc
fstpl
cmp
xchg
jecxz
into
xor
cmpsb
inc
mov
inc
inc
loop
lcall
cmp
cmc
pop
mov
hlt
repz
cmp
shr
push
sub
rclb
gs
add
cmp
mov
popa
outsl
lock
cmpsb
sub
push
test
lahf
jb
cmpsb
std
cmpsb
adc
xchg
add
adc
mov
das
push
mov
mov
jne
es
enter
dec
jecxz
enter
mov
and
dec
jae
test
cmp
popf
push
mov
shll
push
push
sbb
inc
ret
das
pushl
lahf
lds
fdivrl
cmp
jae
test
pop
xchg
fs
add
xchg
jmp
movsl
popa
xor
fcomps
enter
out
ss
clc
xchg
inc
sub
jle
jae
mov
adc
repnz
ds
adc
into
pop
add
cmp
xor
mov
pop
icebp
sahf
das
or
sti
jl
sbb
xor
outsl
das
pop
cmp
rcr
scas
fs
mov
inc
cmp
sub
movsb
ret
adc
mov
mov
fnstenv
mov
cmpsb
repnz
and
scas
cltd
ret
jg
pop
sbb
scas
mov
scas
stc
adc
fdivr
push
in
xchg
shlb
lds
push
popa
sbb
xor
fists
fimull
into
cmpsl
xor
mov
lret
push
add
inc
and
cmc
adc
jns
and
out
pop
test
xchg
jmp
imul
ds
imul
gs
jmp
push
test
push
les
adc
lret
sub
mov
je
jle
pop
mov
aad
sbb
loop
int3
push
pushf
fisttpl
aas
pop
repz
adc
cmp
sbb
jo
jne
pop
sbb
mov
rorb
xchg
push
fmull
cwtl
mov
sbb
push
fisubrs
lods
lret
mov
xor
mov
movsl
jg
imul
pop
popaw
inc
pop
or
cld
loopne
aad
adc
jno
mov
das
mov
addl
xchg
aas
clc
xor
fadds
cltd
out
push
aaa
cmp
imul
shlb
cli
jbe
mov
insb
mov
pop
pop
mov
and
sbb
fs
out
leave
stc
xchg
or
decb
xor
leave
cmp
sub
jns
into
pushf
popf
inc
ror
pop
ljmp
lahf
mov
xor
jmp
popa
imul
fdivl
mov
jmp
mov
imul
fsubl
push
mov
shll
jmp
sbb
and
divb
repz
dec
outsl
mov
daa
les
mov
cmp
pop
mov
xor
lahf
in
and
fistps
or
sbb
test
adc
fucom
inc
jl
rcl
or
inc
push
mov
int3
or
mov
mov
push
das
or
out
popf
adc
out
jne
popf
cmc
ficoml
adc
aam
or
test
sub
stos
movsb
lret
inc
add
mov
mov
xchg
push
stos
dec
inc
bound
stc
adc
mov
cmp
cld
loope
mov
imul
fs
movsl
pop
push
cld
mov
pop
jmp
call
xor
xchg
repnz
or
mov
cmp
push
test
add
arpl
cmpsb
jo
jg
mov
push
ret
adc
xor
add
stos
sub
push
sub
ljmp
adc
xor
mov
xchg
mov
mov
js
in
std
loop
push
addr16
es
sti
int
movsb
into
mov
dec
push
dec
test
gs
stos
mov
jb
jecxz
add
sbb
pop
xchg
popa
sbb
lahf
sbb
push
xlat
add
fs
xchg
mov
add
lods
enter
sbb
xchg
xchg
xor
mov
jnp
stos
out
rcl
popf
xor
mov
test
xchg
adc
push
mov
jg
movsb
aam
notb
xor
int3
mov
mov
mov
and
jo
lret
daa
inc
fcomps
outsb
cmp
adc
jmp
push
xor
notl
test
mov
sbb
mov
sti
adc
ds
inc
pushf
jns
sub
js
ds
xchg
push
sbb
push
cltd
fs
cli
test
push
cmp
js
xchg
cltd
bound
sub
jae
rolb
movsl
enter
gs
roll
sub
movsb
xchg
lods
pop
push
mov
inc
mov
sbb
sbb
xchg
bound
mov
les
incl
jmp
nop
xlat
or
mov
xchg
data16
ljmpw
add
mov
or
lahf
jle
xchg
add
jmp
sub
mov
cmp
cmp
jge
and
cmpsl
add
push
or
push
fcoms
daa
xchg
push
nop
and
xor
insl
stc
xchg
insl
mov
out
into
push
insb
mov
orb
cwtl
testl
push
sbb
mov
stos
rorl
icebp
loop
xor
jecxz
push
jns
mov
xor
popf
adc
nop
push
enter
imul
in
jns
xsha1
cmpsb
mov
int
in
xor
add
out
and
push
pop
test
js
pop
cmp
dec
mov
cmpsl
cmc
mov
jmp
test
mov
push
jne
mov
jle
les
pop
push
out
addl
ja
or
sbb
aam
pop
scas
cmp
js
inc
imul
pop
push
xlat
sahf
xchg
mov
jmp
cmp
push
loope
pop
or
std
pop
or
dec
ficomps
repz
mov
push
aad
popa
fnsave
jae
rclb
aad
cld
mov
stos
jecxz
pop
cmp
mov
lahf
or
sahf
jnp
cmpsl
jne
cltd
xor
mov
jae
inc
push
leave
push
inc
loopne
lods
and
mov
dec
shll
jbe
mov
sub
mov
iret
test
pop
xorb
pop
push
add
ficomps
jp
mov
sbb
leave
rcr
out
outsb
insb
jbe
dec
jp
popa
out
xchg
movsl
rorl
movsl
subl
xchg
push
fsubl
inc
movsb
js
pop
in
pop
cmc
lret
fcoml
ljmp
mov
sub
les
pop
pop
mov
mov
add
lods
mov
call
out
sti
jmp
adc
lea
fisubl
test
or
xor
fsubr
test
test
jmp
xchg
adc
pop
out
fstpt
and
out
mov
mov
adc
outsb
mov
clc
inc
cmp
insl
imul
add
push
dec
dec
mov
or
xor
repz
pop
xchg
add
adc
lds
dec
icebp
insl
dec
icebp
or
aad
inc
xlat
mov
fwait
mov
mov
insb
nop
xchg
xchg
popf
in
cs
jge
test
xchg
in
outsl
adc
pusha
mov
movsb
add
lods
and
xorl
xchg
aas
jnp
push
push
mov
fcoml
adc
mov
int3
iret
adc
ljmp
cmpsb
ja
mov
and
push
push
cmp
fsubp
jo
test
pop
sub
lods
xchg
dec
or
inc
xor
lret
or
xchg
mov
int3
test
rorl
mov
push
adc
dec
pop
out
idivb
leave
mov
in
xlat
inc
mov
xor
lret
inc
daa
out
cmp
test
dec
fidivl
addl
loopne
fstpl
dec
fs
sub
mov
loope
push
pusha
cld
hlt
data16
aad
mov
imul
stos
or
enter
lock
enter
mov
and
js
roll
dec
test
mov
xlat
jb
add
fldt
pushf
imul
jbe
push
in
arpl
adc
sub
pop
sbb
sar
stc
es
jae
jae
jns
fxch
jne
inc
ja
btr
hlt
xchg
push
jl
rcrb
adc
xor
dec
jb
adc
xchg
in
mov
push
inc
int3
dec
xlat
lret
mov
xchg
or
aaa
or
mov
sub
cmp
int3
add
cmp
loopne
cmp
adc
test
ret
add
pop
or
lahf
fucomi
xor
mov
test
sti
cmp
gs
xchg
cmp
out
mov
fdivr
sbb
xor
insb
and
adc
and
inc
mov
sub
dec
std
push
out
push
sub
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
push
stos
add
jmp
jb
sbbb
jle
push
mov
inc
adc
cmc
movsb
inc
sub
lret
out
sub
add
cmp
xor
fistpl
orl
shrl
mov
cmp
jno
xchg
sbbl
nop
lahf
pop
xor
imul
js
xchg
int3
cwtl
pop
mov
dec
ficompl
pop
xor
rclb
and
dec
dec
lock
ds
mov
lds
std
out
lahf
jno
lods
add
add
rclb
outsb
cmp
loop
xor
mov
stc
cmp
pop
rcrb
test
lods
push
sbb
mov
add
dec
cmp
fcoms
sub
stc
sbb
or
imul
inc
cmp
dec
out
pop
jne
sbb
cmc
inc
jo
stos
hlt
ficompl
jb
xor
and
orb
emms
cs
mov
add
loopne
cmp
fst
mov
imul
popa
test
add
rclb
test
push
sub
call
mov
and
rcl
mov
stos
cmp
cmp
cmovg
inc
push
cmp
hlt
int
xor
jl
dec
or
xchg
lret
pop
adc
pop
outsb
mov
icebp
xor
or
mov
add
loop
aas
lods
cld
dec
inc
ljmp
sub
shrb
sub
inc
imul
pusha
lea
pop
mov
fldcw
add
cltd
pop
les
sub
mov
fnstsw
and
sti
mov
and
out
inc
popf
cltd
nop
negb
mov
shrb
push
mov
divb
lods
mov
sub
mov
pop
out
sbb
fidivs
cmp
xlat
mov
sahf
shlb
jecxz
aaa
subb
and
fwait
cltd
in
ror
ja
push
ja
inc
cld
jbe
rcl
pop
xchg
fiadds
and
jne
fdivrs
pop
push
xchg
sbb
aam
shlb
push
rol
rclb
jmp
xchg
decl
adc
stos
inc
pusha
or
adc
sub
hlt
dec
mov
cmpsl
lret
jb
cld
sub
decl
add
mov
pusha
push
fnsave
test
hlt
sbb
sub
dec
pop
rcll
stos
lret
ss
and
and
mov
push
mov
mov
imulb
add
mov
outsb
aaa
scas
jno
imul
es
ficomps
into
or
aaa
outsl
cmpl
inc
imul
int
movsb
cmp
jl
lods
push
push
dec
jge
fistpl
xor
xor
cmp
add
push
shrb
scas
jae
and
aad
aad
adc
sub
mov
int3
lds
adc
sub
cmp
inc
xor
cwtl
dec
daa
test
insb
inc
push
dec
data16
loop
test
add
fists
in
std
mov
jp
adc
das
cmp
in
int
scas
push
movsl
lea
cltd
shll
jg
scas
je
push
mov
loop
pusha
mov
sbb
lret
negb
mov
push
sub
sahf
add
push
cmpsl
es
inc
leave
mov
in
std
out
inc
mov
in
arpl
mov
mov
out
imul
aaa
xchg
test
cmpsl
add
pop
mov
js
gs
cmpsb
inc
or
ss
imul
aas
ss
push
adc
mov
xchg
out
dec
rorl
jns
loopne
out
push
or
or
clc
adc
or
cltd
mov
lock
lods
outsl
dec
fcomp
jbe
dec
cwtl
and
out
fimuls
imul
inc
sub
into
mov
outsb
jno
add
mov
sbb
and
mov
sub
call
pop
mov
orb
inc
leave
fmull
scas
rcl
aam
push
enter
fsubl
push
jl
cltd
imul
pop
out
jns
jbe
add
or
mov
hlt
sarb
nop
cwtl
jle
pop
pusha
or
movsb
mov
movsb
out
push
ja
jns
mov
fcoms
fstpl
stos
shlb
sbb
fstpl
scas
lret
test
imul
push
mov
jg
xor
in
hlt
jl
je
sbb
loop
aad
sub
mov
popa
lret
test
imul
mov
mov
mov
jl
in
xchg
imul
xchg
call
aas
aas
test
pushf
daa
jne
aas
inc
jns
and
mov
scas
pushf
add
mov
pop
pop
push
adc
dec
mov
xchg
stc
sub
sub
ret
or
push
xchg
mov
mov
int3
sub
rcl
lahf
mov
jecxz
out
xor
xchg
adc
test
imul
xchg
aam
xchg
dec
lock
sbb
ffree
int3
ljmp
mov
movl
push
fcoms
dec
jne
adc
push
lret
jl
das
enter
subl
add
and
mov
js
jl
jecxz
daa
daa
pop
adc
inc
mov
jae
cmp
xor
popa
xor
pop
stc
sbb
fcompl
fcoml
andb
mov
add
imul
popl
movsb
addr16
daa
test
push
out
movsl
xchg
xchg
les
negb
fdivrp
sbb
mov
cmp
pop
in
out
iret
fwait
mov
mov
mov
xchg
mov
sbb
xor
mov
inc
pop
lods
sub
jne
inc
mov
mov
pop
fidivs
pop
lcall
jle
stos
stc
sub
leave
addl
cltd
or
inc
dec
into
mov
lret
xchg
pop
mov
mov
scas
xor
jae
xor
push
inc
pop
cld
mov
lea
cmpsl
push
mov
adc
lds
ret
inc
mov
inc
sbb
shrb
call
mov
adc
push
inc
fs
aad
lds
std
cwtl
jmp
push
cs
enter
scas
jne
test
push
fs
dec
in
dec
sti
fists
fiaddl
lea
cmc
dec
fwait
cmp
xchg
imul
pop
mov
clc
repnz
sub
arpl
imul
and
xor
push
fdivrs
lea
jge
scas
rclb
insb
lret
add
cltd
jnp
mov
cmp
loop
mov
xchg
and
sbb
xchg
fidivrl
int
or
sbb
pop
ja
sbb
test
push
xor
inc
dec
cmp
fdiv
xchg
jnp
xchg
cmp
int
adc
mov
outsl
push
mov
adc
cwtl
cwtl
jnp
jecxz
sbb
push
in
mov
xchg
push
push
rcll
fdivl
cmp
push
mov
outsl
int
jmp
js
adc
stc
inc
ret
jb
mov
bnd
sti
outsl
cmp
cmc
ljmp
roll
cmpsl
fwait
add
fsubr
add
xor
push
sbb
shrb
sub
ret
mov
mov
adc
lea
or
mov
stc
cmp
jecxz
jo
dec
push
sub
dec
pop
jge
rcrb
cmp
jo
mov
jbe
mov
fnstcw
test
sbb
sti
add
push
adc
fcomps
in
popf
test
ss
jbe
in
mov
inc
push
lahf
add
push
mov
leave
aam
andb
mov
inc
push
mov
push
inc
sbb
sbb
movsb
mov
lds
call
popf
xor
or
lods
repz
mov
xor
push
push
inc
cmp
ret
push
cmp
ja
fnop
add
testl
jmp
add
fiadds
fs
mov
mov
adc
lea
pop
cs
push
rcrb
int
jo
sub
stc
dec
jns
fildl
fldcw
mov
or
aaa
cmp
je
cmp
pop
pop
popf
adc
pop
movsl
xchg
int3
cmpsl
cmc
in
dec
add
mov
or
mov
clc
jle
push
int3
mov
dec
cwtl
xchg
dec
sbb
fnstcw
inc
jo
stc
add
lock
cmp
fcmovu
mov
jecxz
jnp
fisubs
inc
sbb
lea
not
stos
jmp
inc
dec
lods
jge
add
jne
push
ret
add
adc
mov
mov
scas
lea
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
jle
cld
mov
sub
lahf
xchg
jecxz
je
in
xchg
pop
and
mov
inc
xchg
mov
lret
scas
cli
nopl
addb
dec
repnz
std
jns
sub
mov
fstl
push
sbb
repnz
mov
inc
adc
add
pop
test
dec
mov
shrb
mov
cld
inc
jno
je
inc
pop
gs
jns
test
dec
or
cwtl
xor
je
es
and
andl
jl
ja
jge
sti
testb
or
lret
jno
fisttpl
jbe
add
pusha
mov
push
out
xchg
outsb
xchg
cmpsb
insl
sub
inc
pop
mov
push
adc
cmp
sub
mov
sub
mov
sub
filds
test
es
std
push
out
adc
sahf
adc
add
out
gs
daa
enter
or
jo
jmp
jb
or
in
jp
or
push
mov
popa
jle
cltd
adc
out
out
aad
testb
jl
aaa
out
adc
push
sar
rorb
mov
sti
inc
sub
imul
inc
jno
and
mov
test
jmp
subb
adc
mov
test
outsb
fisubrs
dec
push
roll
cmpsl
jmp
or
xor
and
imul
mov
arpl
mov
dec
or
pop
mov
sub
cmp
setl
or
inc
cmp
xor
jg
icebp
daa
fdivs
rol
sbb
idivl
cltd
sar
movsl
inc
test
and
out
pop
mov
mov
dec
in
lods
mov
aam
pop
aad
insl
aam
insl
sarb
push
iret
pop
cltd
lret
lret
in
inc
imul
lahf
dec
jecxz
ret
mov
shll
stos
jge
in
adc
dec
push
fstl
and
xlat
roll
sbb
xchg
mov
push
xor
out
arpl
leave
lock
mov
xor
stos
in
jb
dec
cmpsb
dec
sbb
xchg
adc
mov
adcb
call
mov
lds
jo
test
inc
fwait
push
sti
lods
inc
push
clc
and
mov
ja
or
enter
jg
mov
test
mov
test
pop
cmp
jp
sarb
pop
push
dec
lcall
ss
sub
iret
aad
or
push
dec
and
mov
mov
mov
or
test
mov
add
ret
xor
cmp
testb
cmp
dec
mov
push
xor
add
inc
mov
rcrb
cmp
lret
xchg
vcmpgt_oqpd
mov
mov
sti
add
and
sub
mov
or
arpl
lods
mov
cltd
cmpsb
push
mov
push
rcrb
or
loopne
aad
xchg
popf
out
jns
fwait
outsl
sti
scas
popa
lret
je
sub
xchg
mov
sbbb
xlat
mov
mov
cwtl
lds
and
enter
icebp
mov
int
repz
fisttps
xchg
shrl
les
pandn
movsl
mov
pop
cmp
into
jae
xchg
push
xchg
std
sbb
xchg
lret
int
leave
shl
in
xchg
movswl
sub
add
mov
inc
out
cmc
pop
cmpsb
cltd
shl
loop
fucom
cmp
inc
icebp
add
nop
xorb
imull
add
xlat
scas
pop
pop
mov
shl
dec
xor
das
mov
pop
lret
outsb
insb
data16
and
rcrb
xchg
push
je
popf
xor
push
push
dec
outsb
stos
lret
fiadds
sbb
adc
or
jnp
stc
in
scas
stos
imul
pop
es
pusha
dec
loope
jbe
ja
mov
fs
sub
mov
imul
scas
inc
push
incl
xchg
into
dec
lods
icebp
mov
pop
inc
loope
pop
addps
lretw
mov
adc
push
in
jecxz
xor
nop
inc
pop
arpl
sub
or
js
cmp
and
xchg
cmc
and
sub
cmp
push
pop
ja
loopne
mov
cmpsb
pop
jmp
jno
fidivrs
adc
imul
jp
pusha
scas
insb
mov
loopne
lea
lods
icebp
add
sbb
jle
mov
lret
xchg
arpl
sbb
lods
outsb
add
dec
les
fisttpl
mov
inc
shrl
std
mov
mov
xchg
std
sbb
xor
out
stos
lret
fst
jae
mov
lods
jb
enter
test
scas
mov
xchg
mov
ss
add
imulb
insl
push
push
xchg
repnz
lahf
jl
and
pop
push
ja
les
jl
mov
xor
inc
lret
dec
push
jo,pn
repnz
cmp
adc
test
sbb
or
sar
adc
adc
xchg
or
cltd
sub
cmp
sub
sbb
daa
enter
sbb
andb
mov
shlb
stos
loope
xchg
push
xchg
fstpt
cli
aaa
call
cli
lock
gs
bound
adc
adc
mov
aaa
mov
sbb
mov
icebp
mov
enter
cmpsl
jp
int
inc
or
push
pop
shlb
pop
mov
cwtl
pop
or
imul
test
xor
test
pop
jnp
out
loope
std
out
mov
mov
pop
and
cld
and
sub
pop
xchg
in
dec
subb
scas
outsb
sti
jp
push
push
sbb
insb
xorl
mov
aaa
xchg
or
sbb
cmp
jmp
jb
xchg
adc
dec
push
push
jbe
inc
subb
shlb
test
or
insb
add
dec
shl
push
insb
add
out
or
out
orl
xlat
push
addr16
dec
cmp
sbb
ljmp
mov
sub
add
clc
mul
arpl
mov
into
pop
in
pop
dec
add
pop
mov
and
adc
sbb
inc
fstenv
sub
push
sti
lahf
fcomp
outsb
outsl
sub
inc
scas
push
xor
inc
loop
push
mov
cwtl
test
mov
aad
adc
mov
sub
jno
nop
sub
pop
dec
insb
xor
add
inc
mov
aad
jl
cmp
call
add
jmp
repz
push
xchg
inc
jo
lcall
mov
notl
sbb
fs
jl
loopne
xor
movsb
mov
xchg
hlt
adc
test
push
fsubp
bound
rorl
lea
into
in
jo
adc
clc
mov
mov
xchg
push
insb
loope
fldl
rolb
pop
and
mov
xor
inc
inc
dec
lret
mov
jae
icebp
or
unpckhps
ret
imul
rol
stos
call
cmp
push
call
add
push
xor
je
insl
subb
into
stos
dec
push
xchg
pop
mov
add
push
addr16
mov
or
sub
push
jne
sub
push
clc
pop
push
pop
jg
and
enter
mov
inc
inc
inc
insl
dec
lods
mov
push
inc
push
pushf
cmc
out
mov
out
jnp
ret
sahf
or
lea
and
pop
jl
loopne
xor
mov
mov
pop
xchg
sar
imul
rcrl
xchg
loopne
pop
pushf
cmp
mov
jb
stc
xor
mov
mov
xchg
fnstenv
pop
pop
push
push
jp
repnz
lahf
sbb
pop
mov
rcrb
mov
jp
xor
test
int
adc
and
pop
test
jecxz
jmp
call
add
push
xor
or
jl
pop
push
std
js
divb
cmpsb
pusha
sbb
push
mov
push
adc
clc
adc
sub
lcall
jnp
sbb
push
je
sbb
cmpsl
out
insb
fnstenv
pushf
dec
inc
roll
mov
mov
mov
mov
shr
mov
lods
xchg
je
adc
pop
or
add
test
xor
sahf
in
mov
mov
int3
imul
mov
xor
inc
lds
out
pop
jp
pop
fcmovne
das
mov
sub
add
insb
ljmp
nop
push
add
pushf
rcl
pop
mov
sub
pop
outsb
sub
popa
xor
adc
std
xchg
pop
mov
cli
add
mov
int
ror
repz
cwtl
repnz
push
stos
cltd
add
inc
dec
dec
mov
fnstenv
cmp
inc
cmp
inc
sbb
rcl
test
lods
cmp
ret
je
lcall
frstor
push
fidivrs
bound
push
xor
inc
mov
mov
cmpsb
push
popf
push
and
sub
adcl
ret
push
ja
pop
fcoms
lret
lret
and
adc
and
or
repnz
pop
xchg
adc
mov
dec
add
add
push
arpl
xchg
push
jnp
pop
lods
clc
add
daa
popa
dec
cmpsl
add
pop
lds
lret
mov
mov
inc
and
arpl
pusha
mov
inc
loopne
dec
loopne
loope
fwait
cwtl
push
mov
xlat
cwtl
jecxz
loope
xor
lcall
mov
sarl
xchg
fwait
dec
ret
xchg
jno
xchg
insb
cmp
xchg
pop
xor
sbb
adc
loope
add
mov
sbb
enter
jp
lret
pop
scas
mov
mov
inc
adcl
cmc
outsb
pop
xor
xchg
lcall
ret
and
dec
shll
and
push
shll
adc
rcrb
dec
and
cli
sub
gs
iret
jg
lds
sub
iret
fisttpl
orb
inc
add
call
and
push
cmp
jb
mov
sahf
cmp
jg
push
les
jae
ja
cld
mov
cmpsb
push
test
and
dec
and
pop
jno
cmpsl
in
ljmp
jl
mov
leave
pop
fdivrl
mov
mov
dec
aas
pop
mov
mov
sahf
adc
push
xchg
and
repz
negl
mov
xor
cli
orps
mov
lock
ljmp
rcrb
xor
out
lock
ss
movsb
repnz
loope
scas
mov
mov
or
mul
jle
sbb
sub
imul
js
mov
cld
and
cwtl
loopne
negb
pop
fs
dec
popa
loopne
bound
out
enter
lea
out
in
jno
test
ficoms
scas
add
and
xor
xchg
cld
in
test
roll
cmpsl
jp
mov
mov
mov
imul
jns
pusha
jo
out
pop
jb
imul
insb
sbb
push
cwtl
and
xchg
sbb
inc
dec
in
sbbb
test
rolb
add
mov
inc
sahf
cli
or
mov
aas
cmp
push
and
testl
cmp
lret
iret
fsubrl
sub
inc
jbe
mov
in
xor
loop
sbb
dec
ja
stc
adc
sub
test
not
add
fwait
inc
push
mov
sbb
inc
pop
aam
aaa
sub
and
and
lahf
loop
lcall
es
fmull
dec
mov
movsl
int
mov
dec
jmp
inc
imul
pop
sub
xchg
out
xor
pushf
add
or
xor
inc
push
fs
pop
adc
pop
jb
call
icebp
sub
ds
je
adc
mov
jle
dec
or
inc
jecxz
push
lret
and
push
or
stos
push
mov
insl
mov
scas
jne
mov
sub
sbb
fbstp
pop
leave
rcr
push
xchg
rolb
mov
cmpsl
inc
and
pusha
in
inc
fcoml
and
mov
fcomps
push
mov
mov
adc
xor
push
daa
pop
cltd
jb
dec
out
mov
call
push
fidivl
inc
pop
cmp
add
scas
cmp
popa
xchg
adc
sbb
les
mov
lcall
leave
fstpt
mov
call
imul
call
scas
pop
push
cmc
add
clc
inc
and
inc
daa
call
incl
sbb
mov
cmp
hlt
out
cmp
sahf
out
or
rcrl
inc
ret
mov
push
ret
es
stc
cmpsl
mov
xor
js
add
mov
push
divl
int
cltd
cmc
add
pop
jne
pop
hlt
adc
pop
call
daa
fbld
faddp
pop
je
jge
cmp
mov
and
mov
lea
cltd
mov
sbb
inc
sub
push
pop
adc
mov
jbe
and
or
es
push
test
inc
mov
push
push
fidivs
jo
sbb
sbb
pop
jae
sahf
insb
jbe
rorb
rcrl
js
scas
or
fcoml
in
jecxz
mov
mov
add
adc
jg
fistl
xor
mov
dec
fimuls
fidivrl
mulb
cli
push
mov
dec
sarb
popa
mov
and
sub
loopne
add
adc
mov
sbb
pusha
leave
jmp
aad
or
sbb
and
mov
pop
movsl
les
into
ja
gs
out
cmc
jmp
arpl
in
mov
jbe
pop
aaa
inc
and
dec
inc
pop
iret
mov
jle
out
cs
fstpt
repz
in
or
cmp
dec
std
test
shll
push
shl
ss
push
adc
les
dec
dec
xchg
leave
cmp
xchg
and
dec
pop
stos
inc
adcb
lods
repz
ret
push
orb
xchg
pop
mov
fbld
inc
and
test
jecxz
rolb
je
subl
mov
pop
jns
add
pop
jae
hlt
das
ret
sub
xchg
fs
jmp
mov
pop
sub
mov
mov
loope
inc
test
adc
jbe
shrl
fidivs
fistps
loop
divl
pop
sbb
hlt
sbb
mov
add
jle
pand
mov
movsl
jbe
adc
pop
mov
sbb
inc
xor
icebp
xchg
nop
push
pop
cltd
sbb
loop
scas
outsb
mov
fadds
int3
rolb
scas
stc
sbb
sbb
cmpsl
dec
lcall
and
cmp
int
or
or
outsl
repz
adc
xor
sub
call
rolb
or
out
movsb
pop
fldcw
sub
divl
and
mov
mov
cld
in
popf
loopne
pop
mov
push
cmp
call
rol
sbb
mov
xchg
cmp
lods
and
out
fwait
cltd
rcll
stos
mov
fcoml
mov
mov
rorl
lcall
cmp
dec
sti
jbe
jge
loope
loope
xchg
mov
mov
cmc
mov
outsb
movhps
ret
in
dec
cs
dec
dec
jb
mov
pop
push
cmp
jmp
cmp
and
bound
pop
xor
pushf
xor
mov
pop
fdiv
mov
rclb
out
ret
cmp
pop
inc
push
inc
push
movsb
call
int3
xchg
scas
ds
xchg
imul
xlat
dec
cmpsl
hlt
mov
jns
add
adc
add
aas
imul
call
push
shl
testb
push
call
fwait
cld
mov
loopne
das
sub
sarb
shr
testb
enter
in
stc
push
sub
mov
sub
fiaddl
mov
orl
dec
inc
lahf
mov
dec
rcrl
loop
popf
xchg
sbb
repnz
push
pop
dec
adc
jp
fistpll
xlat
sahf
push
rorl
add
mov
jl
lods
push
jecxz
test
pusha
fcmovne
push
lods
leave
adc
imul
mov
popa
sub
pop
jnp
movsb
inc
add
lret
adc
push
xchg
mov
mov
jecxz
xor
cmp
fsubrl
rcrb
inc
dec
sbb
cli
outsb
add
fimull
leave
mov
fwait
jle
lods
repz
adc
push
jo
loopne
aas
sbb
hlt
pop
mov
nop
jge
dec
test
lods
fidivrs
jmp
lock
adc
mov
aad
or
mov
fdivs
icebp
in
in
jns
push
clc
and
or
mov
cwtl
sbb
cmc
enter
cs
jb
jmp
mov
daa
push
dec
pop
andl
jecxz
inc
fadds
sbb
mov
and
cmp
lds
ljmp
xchg
xchg
lret
ja
test
data16
and
cwtl
das
movsl
je
rol
enter
and
inc
mov
sbb
loop
test
lcall
ljmp
pop
mov
pop
mov
or
ret
inc
test
repnz
cmp
insl
push
and
inc
mov
add
push
mov
dec
ljmp
or
push
pop
incb
int3
in
or
add
jbe
sub
in
je
jnp
mov
add
jo
cmpsl
pop
aas
stos
andl
or
add
push
mov
sahf
or
out
rolb
mov
xchg
add
jecxz
sub
ja
js
outsl
mov
jle
movsl
dec
jg
xor
and
jae
and
mov
out
pop
mov
out
jae,pt
pop
sbb
cmp
outsl
pop
pop
fnstsw
imul
cmp
enter
jg
fwait
mov
lods
rcrl
dec
xor
mov
pusha
outsl
js
mov
movsl
mov
push
insb
inc
push
mov
aam
or
test
jecxz,pn
movsl
es
rorl
mov
stc
lock
lock
mov
movsb
push
aad
jne
or
aam
adc
xchg
push
and
mov
out
inc
inc
jno
sub
jge
or
jle
cmp
fisttpl
fisubl
sarl
cmp
inc
lcall
ret
and
ficomps
mov
stc
ret
xlat
inc
pop
cmp
cmove
or
outsl
aam
fdivr
lds
lods
es
leave
scas
mov
fcmove
push
push
xchg
jnp
scas
lcall
icebp
movsl
xchg
fmulp
enter
sahf
or
enter
mov
mov
pusha
int
pop
sbb
popl
cltd
cli
or
test
cwtl
sbb
adc
jnp
cltd
aaa
sbb
sti
std
movsb
and
je
xchg
sub
xchg
sub
shr
push
mov
pop
ds
roll
adc
popl
mov
enter
shl
mov
stos
mov
call
mov
shrb
pop
std
int
jge
pop
or
scas
scas
movsl
lods
pop
and
add
mov
mov
mov
pop
adc
xor
pop
inc
pop
xor
mov
sub
aaa
inc
in
cmp
dec
in
incl
cmp
outsb
mov
pusha
sbb
imulb
in
or
jmp
mov
pop
loope
jge
jnp
sbb
aas
or
adc
int3
incb
sub
or
pop
mov
jae
inc
xchg
sbb
fs
ret
xor
cmp
mov
movsl
fdivrl
das
jmp
pop
iret
cmp
shlb
orl
sbb
in
mov
into
pusha
loope
movsb
aas
iret
mov
popa
das
push
test
addr16
sahf
mov
data16
xchg
pop
mov
xchg
sub
lock
or
lret
push
in
or
js
int3
mov
cmc
nop
rcr
fistl
push
xchg
sahf
pop
xchg
sub
jge
lock
in
mov
sbb
mov
hlt
arpl
dec
lret
sub
mov
stos
xchg
pusha
pop
sarb
fidivl
les
dec
mov
mov
mov
sahf
sahf
xchg
xchg
in
test
sub
movsl
jmp
sbb
test
push
lods
stos
jle
stc
fdivl
rorb
cmpsb
cmp
mov
cmp
cmp
mov
shr
mov
add
nop
xchg
sub
fnstsw
push
insb
mov
std
in
lods
mov
pusha
or
cmp
jb
xor
mov
js
dec
int
lcall
jmp
jno
jae
ret
rolb
ss
inc
or
nop
sub
sub
cmp
dec
mov
pop
loope
xlat
mov
and
stos
inc
dec
mov
xor
pusha
sbb
sub
fsubrl
ret
inc
adc
stos
arpl
or
in
xchg
pop
push
mov
test
jle
adc
jo
inc
mov
pop
mov
movsl
das
inc
mov
inc
dec
stos
scas
sarl
test
call
sub
pop
dec
imul
or
in
add
in
adc
cmp
add
subl
mov
in
in
sbb
mov
aas
aam
out
and
push
adc
int3
mov
movsl
inc
shlb
scas
pop
repz
sti
mov
adc
mov
out
lahf
adc
lock
testb
ret
cli
fnstcw
mov
xchg
cmp
pop
xchg
add
add
test
mov
sbb
in
pop
mov
cltd
sub
jl
out
leave
inc
mov
pop
xchg
leave
repz
mov
out
sahf
clc
push
sbbl
jl
adc
adc
daa
ja
cmpb
mov
or
jmp
xor
mov
out
or
push
decl
jmp
test
mov
push
and
cmc
inc
mov
pop
mov
mov
call
inc
cmp
pop
sbb
lcall
push
mov
and
das
dec
popf
jmp
xchg
idivl
je
test
fdivrs
lds
fsqrt
mov
mov
leave
ror
push
mov
dec
movsl
adc
into
or
cmc
or
mov
jmp
scas
gs
mov
insl
jae
es
xchg
xor
sub
pushf
and
and
imul
lret
imul
loope
int3
sarl
mov
push
dec
or
out
imul
cmc
insb
sti
pop
lods
cmp
lods
jg
subb
ds
movsl
push
add
jno
repz
sbbb
xor
add
mov
and
jbe
out
and
test
sub
mov
mov
enter
xor
sbb
jg
sbb
filds
movzbl
fwait
jno
sub
mov
imul
fs
lret
ljmp
mov
xchg
and
orb
aad
clc
sbb
jecxz
shlb
sub
outsl
pop
gs
nop
fcoml
pop
repnz
push
push
dec
add
push
mov
imull
pop
adc
push
dec
sbb
cmpsb
dec
mov
out
loope
xor
js
pusha
pop
inc
mov
add
sub
mov
dec
arpl
pcmpeqw
sub
xchg
mov
in
dec
pop
dec
shl
test
add
mov
bound
cmpsb
in
sub
xor
aaa
std
xor
fisubs
xor
push
cmpsb
sarb
mov
pusha
lret
pop
cmp
jb
loop
call
mov
cmpsl
out
adc
jne
xlat
pushf
lcall
pop
push
jl
imul
out
cld
mov
call
not
or
je
adc
push
iret
sbb
fcmovne
adc
push
inc
adc
xor
pop
sub
loop
mov
jae
pop
insl
test
jb,pt
mov
adc
repnz
in
sarl
ficoml
adc
xchg
out
pop
inc
jp
push
sub
stos
sar
add
xor
cmp
push
xchg
jg
mov
in
and
xchg
jno
xchg
mov
sbb
mov
cltd
and
lods
mov
jne
mov
or
hlt
sbb
ret
dec
jg
and
push
sub
out
push
mov
push
inc
mov
rcrb
cmp
jle
cld
mov
movsl
pop
cs
enter
jg
push
sub
xlat
jmp
loope
call
xor
les
ja
cs
inc
fdivrl
scas
mov
mov
lcall
cli
inc
pop
xor
and
insb
sub
adc
jns
pop
xchg
jne
push
pop
sti
out
loopne
inc
mov
ret
fwait
pop
ds
sub
push
adc
jo
insl
mov
adc
push
sti
js
fldcw
dec
mov
xchg
out
call
scas
jmp
fdiv
cltd
dec
sbb
lea
jnp
enter
xor
mov
mov
xor
bound
mov
or
sbb
pop
or
dec
fisttps
xchg
movsb
call
sub
mov
mov
fiaddl
outsl
cmp
jecxz
mov
xlat
test
pop
popf
mov
es
outsl
fcmovnbe
sub
mov
push
daa
out
and
cwtl
js
xchg
jns
add
loopne
xor
repnz
pop
mov
ja
int3
xor
test
jecxz
scas
fcoms
test
pop
or
mov
int
pop
mov
rclb
jecxz
sub
mov
imulb
adc
jecxz
push
pop
fistpl
lea
mov
jns
arpl
xchg
xlat
movsl
scas
aam
in
and
dec
xor
sub
popa
jb
xchg
shrl
xor
pushf
ret
shr
lret
mov
adc
inc
loopw
out
sbb
add
mov
or
icebp
mov
push
test
gs
ret
sub
leave
xchg
mov
or
sbb
dec
int
out
in
jno
aaa
push
add
dec
mov
jmp
cmc
mov
stc
lea
fcompl
aam
dec
sub
mov
or
fwait
test
mov
pushf
cmp
fstl
out
mov
orb
jns
add
dec
mov
cmpsl
daa
cld
insl
cmc
push
fnstsw
aas
popa
mov
jl
mov
mov
and
ficomps
dec
adc
rolb
add
jg
jne
xchg
jnp
out
push
popf
jg
mov
into
dec
add
inc
lea
xor
int3
clc
mov
xlat
mov
dec
cmp
push
mov
pop
arpl
fnstcw
pop
sub
out
sbb
xor
sub
enter
push
cmp
inc
add
xlat
sub
inc
cltd
orb
cmp
dec
stc
jp
xchg
or
insl
xchg
pop
out
repz
mov
popf
mov
sbb
aas
scas
or
in
inc
decb
jge
out
cmpsb
push
push
outsl
ret
xchg
jg
test
sub
pop
xor
rorl
xor
fs
out
in
xchg
inc
sbb
fs
mov
xor
jg
sbb
mov
push
add
fistps
xor
adcb
inc
scas
stc
pop
dec
or
out
pop
xor
and
mov
in
jmp
cmp
fistpl
pop
fcmovnb
sbb
mov
lock
mov
mulb
xor
loopne
inc
mov
pop
scas
fcmovnb
adc
dec
jle
rorb
repz
sub
insl
or
pop
mov
outsb
jmp
loope
xor
repz
mov
lds
mov
mov
and
jo
mov
addr16
ret
mov
pop
xchg
pop
insb
add
sub
addl
subl
jb
sub
stos
jb
int3
imul
pop
std
cld
mov
xor
sub
fldenv
cmc
sub
push
bound
loopne
divl
adcl
test
mov
pop
and
cs
jnp
mov
or
xor
fnstsw
or
dec
add
out
push
adcb
cmc
ret
mov
notb
jecxz
inc
xchg
scas
jge
xchg
mov
cmp
aas
pop
dec
lock
lock
mov
xchg
cmp
inc
jb
pop
jg
push
and
orl
add
mov
dec
adc
add
cmpsb
add
jmp
pop
mov
in
scas
mov
jbe
enter
outsb
mov
sub
mov
sub
lock
repz
cmp
add
mov
in
xlat
sub
decb
inc
pop
hlt
and
roll
mov
rcrb
cmp
inc
mov
mov
xor
lock
pop
ljmp
and
shll
pop
push
in
pop
outsb
jns
add
and
sub
xchg
enter
push
jne
xor
and
das
mov
fisubrs
add
mov
popa
popa
push
inc
lret
sbb
adc
insb
push
mov
pop
or
jg
pop
cmc
loop
stc
ret
loop
adc
mov
jmp
scas
dec
cmp
frstor
mov
pop
mov
test
cli
push
inc
sub
shl
iret
mov
adc
fists
jg
dec
jbe
mov
stos
pop
push
xor
mov
cmp
xchg
pop
add
lcall
and
test
pop
insb
and
call
movsb
iret
enter
stc
mov
mov
cltd
pop
cmp
stos
mov
push
lods
jp
pop
push
pop
mov
jae
xlat
test
ss
cmp
hlt
push
xchg
jle
sar
cltd
out
xchg
xor
leave
out
or
out
adc
pushl
push
mov
lds
dec
clc
fadds
xchg
dec
outsb
mov
in
ja
enter
cmp
push
enter
sbb
mov
mov
fisttpll
rclb
inc
sbb
jmp
xchg
or
mov
das
and
lret
pop
inc
xor
cmp
cwtl
leave
out
and
icebp
ret
sub
shrb
adc
adc
out
adc
jl
movsb
jecxz
popf
leave
jecxz
xorb
inc
fnsave
ss
mov
aas
shrl
inc
mov
inc
lock
nop
call
orps
call
fs
dec
mov
ret
lds
jle
jl
xchg
hlt
out
mov
xchg
xchg
repnz
negb
negl
imul
and
add
jns
gs
gs
adc
push
rcl
mov
movsl
xchg
pop
das
cmp
sahf
ja
ljmp
pushf
mov
inc
sarl
xor
jne
aad
add
rolb
push
jmp
lds
mov
push
inc
push
adc
enter
mov
cmp
in
ljmp
icebp
mov
push
pop
mov
inc
out
je
fisttpll
inc
imul
stos
sarl
pushf
add
mov
call
in
orb
in
mov
jne
add
pop
push
adc
push
js
jle
and
stc
filds
mov
int
cld
jb
in
icebp
cmc
test
bound
jnp
inc
inc
jno
fmuls
in
cmp
pop
data16
and
lds
push
cwtl
push
mov
jb
push
xchg
lcall
cmp
divb
jae
and
ljmp
je
xlat
inc
or
push
sti
jo
push
fs
fcmovbe
cltd
jg
call
jp
mov
out
hlt
sub
imul
push
inc
bound
out
push
sub
rorb
add
adc
xchg
movsb
cwtl
stc
iret
cmp
mov
mov
pop
jno
xor
and
bound
enter
stos
adc
mov
dec
aas
vphaddubd
stc
cmpsb
out
add
test
imul
push
adcb
xchg
inc
mov
leave
xlat
sbb
test
fwait
mov
cmp
out
mov
and
jp
andb
lea
pop
stos
cmpsl
push
xor
xchg
fs
adc
mov
cltd
ds
adcb
movb
roll
repnz
pop
adc
loope
pop
push
mov
ja
push
inc
sbbl
push
das
pop
std
out
inc
sbb
mov
sbb
or
scas
push
mov
into
push
jns
xchg
push
and
imul
dec
test
cmp
pop
popa
sub
mov
push
xchg
cmp
bound
xlat
movsb
pushf
pop
xchg
hlt
setne
fwait
xrelease
cld
cs
decb
dec
ja
mov
shlb
pop
fisttps
xchg
jnp
push
sbb
movsl
jg
or
add
pop
gs
cmp
sub
aas
lods
xlat
mov
inc
jp
fwait
cld
stos
ret
sbb
in
imul
jne
inc
add
push
mov
inc
cltd
mov
clc
out
lcall
push
dec
push
iret
push
addb
adcb
inc
roll
pushf
inc
xor
xlat
ds
fs
fstp
enter
xor
mov
pop
xchg
roll
lods
push
xor
push
pop
pop
sbb
mov
mov
cmpsb
jmp
adc
push
jmp
add
dec
mov
in
push
pop
mov
xor
pushf
xchg
mov
lea
divb
cmp
test
add
fs
stos
rolb
cmpsb
jbe
push
es
or
imul
add
imulb
into
pop
pop
into
cmpl
out
or
xchg
mov
subl
out
mov
iret
iret
add
pop
nopl
fs
dec
mov
dec
clc
sub
test
pop
jle
push
pop
rorb
mov
cld
movsb
mov
cmp
or
xchg
lods
and
mov
and
leave
cmp
inc
test
test
adc
aad
out
jne
fists
pop
push
cmp
out
inc
imul
scas
pop
add
ss
nop
les
inc
ljmp
arpl
and
les
fistl
dec
cld
sti
xor
dec
gs
in
or
dec
push
mov
imul
popa
xchg
inc
inc
cltd
pop
ljmp
into
ljmp
in
mov
mov
pop
hlt
rcrb
outsb
lea
hlt
cs
flds
mov
jnp
jge
enter
movsb
decb
or
pop
pop
mov
cltd
inc
sub
push
andl
fidivrs
cmpsb
movsl
add
mov
fists
or
sahf
mov
es
mov
stc
add
cltd
ss
cmp
cmpsl
repnz
sbb
sbb
cmpsl
or
out
jecxz
frstor
mov
xor
mov
in
pop
dec
and
cmp
jp
std
test
jo
repz
cmp
jge
leave
adc
adc
pop
pop
aas
add
pop
orb
adc
test
adc
roll
mov
mov
int
aam
cmpsl
xchg
stos
xchg
pop
jecxz
jge
lods
xchg
scas
and
xchg
les
sub
je
scas
insb
std
and
cmp
jb
push
dec
ror
dec
xor
divl
call
push
call
bound
movsb
push
xor
xor
rcll
es
add
fsts
pop
test
mov
stc
out
test
cmpsb
ss
cltd
int3
add
popa
push
mov
or
push
push
xor
shll
xor
jp
xchg
xchg
ret
push
fistps
push
cmp
pop
fs
adc
add
insb
test
sub
cmp
hlt
arpl
push
loop
pop
inc
repnz
inc
sub
sbb
bound
mov
aaa
pop
pop
inc
repnz
scas
add
inc
ret
into
dec
push
repz
pop
xchg
sbb
lock
rolb
enter
push
ror
pop
lcall
shrl
shll
adc
movsl
mov
cmp
push
fcomi
nop
push
inc
ja
sti
add
leave
jmp
mov
out
data16
sub
xchg
cmp
out
jg
sbb
fdivrs
lcall
push
das
cmp
imul
adc
icebp
shrb
ret
or
lods
je
sub
test
mov
push
js
sbb
lock
loopne
xlat
xchg
push
xor
aam
cmpsl
call
stos
mov
sub
daa
mov
pop
out
or
ds
adc
mov
jmp
mov
cmp
push
and
dec
dec
fcoml
adc
lret
in
enter
pop
dec
push
xchg
mov
sub
and
insb
mov
out
das
dec
cmp
gs
xchg
xchg
sub
push
lock
push
mov
sbb
and
jp
jge
roll
and
add
dec
mov
and
imul
pop
lcall
cmp
xchg
jo
mov
push
jne
and
jecxz
dec
vunpckhps
sbb
inc
ret
xchg
adc
loopne
mov
loope
es
fwait
subb
add
pushf
int3
and
loop
aaa
loop
call
xchg
fists
push
das
mov
es
mov
outsl
nop
sbb
lret
cmovp
xor
mov
testl
inc
dec
sbb
dec
int
cmpsb
xor
push
arpl
in
std
stos
mov
mov
mov
arpl
adc
outsl
sub
pop
bound
ret
sbb
data16
lods
jg
imul
jmp
cmp
pusha
clc
stos
mov
ss
and
sbb
out
sarb
lcall
cmc
push
add
jne
nop
or
sarb
adc
adc
mov
iret
cs
pop
jmp
movsl
leave
stos
jae
mov
repz
add
bound
fcmovb
push
jle
fistpl
inc
repz
icebp
in
push
add
sbb
sarl
sbb
jmp
jle
jmp
adc
popf
and
stos
lds
cli
sbb
int
pop
fmul
pop
andl
mov
aam
nop
movsl
push
xchg
xor
outsb
andl
lods
inc
shlb
call
test
cmp
mov
rcr
mov
sahf
and
popf
test
cmpsl
arpl
adc
inc
testb
pop
popf
mov
jmp
dec
out
pop
inc
jns
xlat
xchg
and
mov
push
pop
in
jns
sahf
sub
mov
dec
pop
int
out
in
and
and
xchg
movsl
ret
or
outsl
mov
testb
int
negb
jg
les
fs
call
and
pop
popa
adc
jne
es
jmp
sahf
jae
xor
xor
pop
icebp
mov
and
lods
loopne,pt
in
or
pop
mov
mov
std
xlat
xor
mov
fisubrl
dec
outsl
sub
or
adc
fdivs
cmc
sbb
hlt
pop
pop
jge
nop
push
outsb
mov
dec
mov
mov
and
dec
push
loopne
sti
jmp
pop
cmpsl
jecxz
jle
or
xchg
mov
mov
fstps
xchg
shl
adc
pop
lods
xor
jbe
sub
xchg
aad
pop
hlt
xchg
pushl
push
nop
mov
jae
dec
pop
nop
fildll
popf
and
or
jae
js
inc
arpl
insb
shrb
mov
sbb
push
mulps
jp
jl
adc
mov
mov
subb
dec
out
negl
lods
pop
sub
jmp
int3
inc
jnp
inc
xlat
mov
jns
adc
jecxz
jne
xchg
addr16
or
jo
lods
mov
clc
sahf
mov
pushf
add
sub
scas
fldl
dec
push
mov
or
xchg
les
push
xchg
cmpsb
lods
xchg
and
sbb
je
cwtl
mov
adc
mov
inc
cwtl
adc
pop
imul
pop
adc
sbb
dec
xlat
leave
jmp
int
mov
or
push
out
pop
icebp
xchg
out
rcll
and
push
stos
jg
stos
dec
mov
push
and
fisubrl
mov
jbe
out
subl
adc
stos
repnz
push
sub
sbb
mov
fmuls
fadds
pop
mov
add
xchg
add
adc
cmpb
sbb
add
mov
jo
xchg
adc
adc
js
ficomps
push
lret
cmc
xor
push
mov
lret
or
sbb
scas
mov
lods
mov
out
sbb
inc
adc
ds
xor
or
mov
dec
sub
dec
aam
fstpt
fcmove
cwtl
mov
xor
ljmp
gs
fnstenv
cmp
fldenv
fstpl
test
outsl
add
xor
test
addl
js
cmp
cltd
inc
and
icebp
daa
inc
les
testl
jg
add
lahf
fwait
dec
int3
sub
mov
and
inc
fisubs
mov
cmp
insb
push
add
add
loopne
add
adc
mov
push
mov
xor
push
add
aad
pop
test
push
jecxz
sbbl
jne
add
mull
sub
idivl
ja
mov
sbb
pop
in
imul
and
bound
adc
test
jge
xorb
adcb
outsl
pop
ljmp
ja
inc
and
adc
repnz
mov
lret
push
rolb
pop
out
lds
sub
push
pop
out
mov
dec
rorb
push
xorb
jp
cmp
hlt
adc
mov
adc
push
or
jmp
jnp
imul
sub
clc
lret
cmc
aas
mov
push
stos
and
mov
mov
rcrb
mov
daa
cmc
ret
arpl
shrl
out
adc
pusha
outsl
inc
mov
or
xor
shr
dec
ss
ficomps
cmp
stos
or
shll
dec
ljmp
ret
out
and
mov
aas
pop
addb
rol
jo
and
outsl
loope
movsb
add
sbb
dec
mov
sub
push
js
add
sub
aad
nop
insl
fwait
adc
aas
lods
mov
sub
sub
or
fistps
cs
fstps
mov
sarl
add
pop
iret
push
stos
fisttpll
and
insl
lsl
mov
jbe
jns
push
test
push
sbb
scas
push
mov
dec
int
push
ljmp
jecxz
and
loopne
sbbb
je
xor
push
push
mov
xor
enter
test
imul
push
jp
mov
mov
pop
daa
fldenv
es
inc
rcl
jae
mov
mov
dec
in
je
lret
repnz
scas
jbe
jmp
jp
popf
mov
sbb
or
sti
or
cmc
pop
fcompl
push
adc
add
imul
mov
jecxz
aad
xchg
pop
fs
adc
mov
and
xor
pop
adc
addr16
mov
adc
sub
jae
and
mov
sbb
cmp
inc
icebp
and
pop
mov
popf
mov
in
mov
repnz
sub
sbb
xlat
or
rcll
test
loope
sbb
cmpsl
rolb
loope
sahf
lds
sbb
mov
test
cmp
jmp
push
lds
lea
jp
scas
jbe
jae
xlat
cmp
in
dec
xchg
mov
orb
jne
inc
or
out
cmp
out
out
dec
stos
fcmovnb
and
cmp
xor
incl
sbb
push
test
mov
mov
inc
mov
or
in
cmp
int
mov
xor
sub
cld
test
xorb
adc
mov
pop
pop
push
mov
adc
inc
aas
cltd
xchg
or
pop
xor
jg
xor
cmp
pop
dec
jmpw
adc
push
adc
sti
xor
popl
into
clc
lods
xchg
mov
test
xlat
xchg
xor
nop
jno
clc
sahf
mov
xor
pop
and
decl
subl
sub
lret
pop
out
mov
gs
pop
gs
sub
fstl
stos
test
pop
mov
or
pop
push
mov
jp
push
fcom
mov
lahf
mov
sbb
mov
pop
jbe
jb
and
nop
cld
cmp
nop
stc
pop
scas
push
or
xchg
pop
test
mov
adc
jecxz
fwait
push
mov
cmc
movsl
and
in
call
lds
xor
lret
ljmp
test
int3
sbb
sub
mov
cmp
ss
sbb
dec
jmp
mov
mov
and
adc
fldenv
int3
xchg
adc
mov
sbb
in
xchg
xchg
mov
fsubl
xor
es
test
cmc
es
or
and
fs
loopne
cmova
call
xchg
dec
cmp
icebp
inc
adc
nop
bound
faddp
inc
lcall
xlat
adc
movsl
fsubs
sub
repnz
and
mov
mov
jnp
lods
xlat
and
xchg
xchg
sub
jnp
fnstsw
dec
in
repz
mov
mov
out
inc
xor
pop
mov
shrb
cmp
in
lcall
nop
sub
mov
sub
mov
push
lea
cmp
push
cmpsl
add
sbb
imul
das
roll
sarb
mov
sbb
les
mov
pop
repnz
xchg
jp
lods
dec
xchg
inc
andl
in
xlat
mov
test
rorb
sub
mov
add
mov
hlt
mov
movsl
stos
or
andl
jp
lret
jg
jl
or
into
mov
loope,pn
fstpt
xorl
xor
xor
jae
scas
adc
jge
mov
inc
push
inc
inc
pop
lcall
lods
cmp
leave
dec
mov
jae
push
into
or
enter
loop
xchg
mov
mov
bound
aam
adc
insl
lret
mov
or
fstps
rolb
sub
push
ret
pusha
jle
sti
xchg
and
addr16
jmp
cmp
xchg
xor
hlt
fsubr
rolb
xchg
adc
arpl
lock
mov
test
push
es
mov
push
in
sub
aas
xchg
jmp
addr16
in
movb
scas
in
add
push
outsb
inc
fwait
hlt
imul
pop
shr
leave
sbb
or
cli
mov
and
dec
pusha
sub
roll
rcrb
insl
sti
les
and
or
out
xchg
aam
rcr
sbb
mov
mov
fsubl
xchg
je
mov
fsubr
nop
mov
loop
adc
xor
sti
mov
or
xlat
push
jmp
loop
aam
pop
mov
sahf
xor
popf
popf
adc
jecxz
lahf
jl
mov
cmp
and
rcl
pop
jnp
loop
add
sbb
dec
popf
or
pop
xor
icebp
sbbl
push
lret
test
bound
xchg
call
leave
repz
and
pop
cmp
xor
mov
fwait
sub
fadd
mov
or
clc
mov
lea
adc
cltd
jge
in
push
push
push
dec
cmp
mov
inc
cmp
push
ja
sti
add
movsl
pop
pop
fstps
jne
imul
shlb
mov
xchg
aas
les
push
stos
mov
cmpsl
imul
and
xorl
cltd
adc
mov
xchg
mov
jae
int
insl
mov
inc
icebp
lea
xor
sbb
scas
xlat
mov
int3
movsl
cmc
cmp
shlb
imul
fcmovu
xchg
mov
out
pusha
daa
mov
shlb
mov
or
jl
push
cltd
xchg
stos
and
mov
int3
insb
cmp
test
andb
jnp
xchg
jb
cltd
ret
mov
mov
jne
sub
xor
sarl
and
mov
leave
jo
or
iret
ret
sarb
pop
pop
inc
dec
xor
push
dec
ja
pop
adc
cmp
jnp
loopne
or
iret
pop
sbb
pop
test
test
jb
mov
loope
jecxz
int3
jb
cmp
inc
popa
sbb
negb
jmp
popf
push
sub
fists
bound
lcall
cmpsl
out
adc
aam
filds
push
dec
xor
push
xchg
daa
dec
and
jns
jle
xor
cmpsl
or
mov
mov
lods
mov
aaa
loope
sub
sub
clc
or
dec
xor
adc
mov
pop
mov
xor
dec
jo
or
out
fcomps
loope
push
inc
jmp
das
addl
les
aam
inc
xor
shrb
sti
adc
nop
jno
xchg
sub
lea
lock
pushf
std
push
aaa
or
or
cmpsl
cltd
shlb
mov
enter
lods
sbb
inc
mov
das
aam
mov
dec
test
cmp
jns
outsb
dec
cmp
add
sub
and
test
add
ret
je
sub
adc
stc
adc
xor
pop
push
xchg
sbb
test
adc
into
ret
fdiv
adc
adc
out
test
xor
loop
out
sti
movsb
popf
popf
add
dec
ret
insl
lcall
fidivl
mov
sub
jle
xor
sbb
mov
mov
or
pop
mov
add
loopne
js
out
aaa
cmpsl
out
xor
into
call
out
cwtl
xor
ret
scas
xchg
int
add
pusha
stos
inc
push
outsl
ficoms
push
mov
push
fwait
push
imul
arpl
pop
fstpt
mov
sbb
dec
aas
inc
jg
pop
loope
or
stos
push
add
lock
out
mov
pop
lret
jmp
pop
xchg
fsubrp
mov
xor
mov
nop
cmp
ljmp
aaa
xlat
sbb
icebp
pop
xchg
or
stos
or
mov
xor
push
jle
cmpl
ds
sahf
push
jge
push
jmp
mov
pop
pop
and
mov
cmc
xchg
gs
sbb
dec
xchg
nop
outsl
add
push
mov
cmp
roll
std
mov
sbb
mov
add
inc
mov
fldl
daa
cmpsl
mov
stos
leave
hlt
imulb
mov
mov
cmpsl
sbb
ficoms
cmpsl
inc
lret
ljmp
cmpl
jae
xorl
call
fsubl
jns
or
int
stc
out
mov
pushl
xor
loop
adc
xor
cmp
sbb
push
repz
cmp
push
or
call
and
popa
fisubl
lods
mov
inc
xor
inc
lcall
jmp
sbb
xchg
xor
jmp
mov
mov
adc
cmp
jecxz
imull
adc
ljmp
xor
sub
loopne
movsl
push
xor
jns
out
in
aam
repz
loopne
scas
aad
inc
fcmovu
repnz
les
xchg
xchg
popa
and
sub
arpl
icebp
arpl
lea
cld
lcall
jo
stos
mov
fsts
pop
ljmp
adc
inc
jge
fsts
push
xor
ljmp
lea
or
push
jbe
mov
adc
out
xchg
and
fwait
mov
xchg
imul
lock
les
loop
or
sub
pop
adc
or
pusha
push
xor
jo
sbb
lods
aas
lds
mov
cmc
js
pop
fisttps
icebp
sub
cmp
pusha
inc
mov
stos
frstor
push
lea
xchg
aam
sbb
lahf
pop
div
out
push
sti
insl
sbb
cltd
jl
dec
popa
inc
xchg
or
fucomip
pop
sahf
jne
sarb
dec
es
test
adc
sub
jp
andl
sub
or
pop
or
ljmp
mov
jp
pop
dec
push
mov
ret
fists
dec
jmp
or
mov
out
jbe
int3
mov
repz
test
inc
cmp
inc
mov
out
jge
test
inc
sti
daa
push
repnz
and
shll
test
mov
mov
ljmp
aaa
dec
shrb
cld
inc
rcrb
out
iret
out
push
mov
jo
add
cld
nop
cmc
cld
fs
outsl
imul
and
jb
inc
in
ret
jo
xchg
xor
aam
sbb
shl
push
fisttpl
inc
pop
movsb
shrb
shlb
mov
jl
xchg
add
jge
cmp
dec
sbb
or
xor
or
inc
sub
incl
push
mov
in
inc
pop
sub
ficoms
push
xor
pop
je
mov
insb
bound
add
sbb
mov
pop
jnp
cwtl
mov
inc
inc
push
sbb
lock
pushf
pop
sti
stos
jne
jo
mov
mov
jg
in
movsb
adc
mov
push
sbb
xchg
cs
inc
xchg
and
dec
cmp
adc
sbb
mov
add
or
loope
dec
cwtl
outsl
sbb
clc
test
jnp
pusha
add
dec
ljmp
cmp
cmp
ljmp
lock
out
dec
push
rsqrtps
push
mov
out
test
push
jae
inc
pushf
mov
jmp
adcl
xlat
mov
or
hlt
popf
cmp
mov
loope
push
sbb
push
cwtl
test
sub
aas
xchg
loopne
loopne
jecxz
rcrb
or
int
add
xor
cmp
inc
scas
cmpsb
xchg
jbe
mov
cs
and
cmpsb
xchg
mov
sbb
rcrb
or
lret
mov
rorb
mov
repz
ss
mov
mov
and
sbb
fsts
ljmp
mov
shll
rorl
or
pop
jae
out
mov
push
retw
ljmp
das
and
int
fisubl
pop
push
lds
xor
xchg
sub
cs
sti
mov
cmp
sub
test
aaa
subb
cmpsb
add
sbb
cmp
xlat
lret
out
mov
push
mov
cwtl
pop
or
call
mov
enter
inc
xor
jno
mov
imul
lret
fcmovb
jo
xchg
rorb
rclb
inc
xlat
imul
subl
mov
repnz
add
xor
popa
bound
sbb
imul
or
ljmp
aam
outsb
mov
cs
ds
das
fs
xchg
in
jno
inc
or
mov
sarb
ds
adc
jmp
xor
mov
orb
push
pop
jp
xchg
or
or
add
fidivs
mov
lahf
test
aam
jb
cmp
ja
pop
stos
pop
add
aas
rcrb
rcl
addb
cmp
lock
out
lods
xchg
mov
hlt
xchg
je
sbb
and
inc
mov
fisubrl
cmp
and
in
iret
cs
ud0
or
lds
mov
sbbl
xor
jne
xchg
mov
cmp
bound
das
cmp
or
ljmp
negb
bound
pop
cvtdq2ps
push
pop
rcrl
pop
into
in
out
aad
iret
test
clc
sub
mov
es
push
rcll
pop
add
inc
movsb
shrb
jb
cmpsl
push
add
jae
js
xchg
and
movzwl
js
je
mov
inc
movsl
lds
push
dec
ds
pop
add
fadd
addr16
jl
leave
xor
push
jl
xor
leave
jp
loopne
mov
loopne
mov
inc
jl
pop
xchg
js
mov
adc
jne
jbe
sbb
lahf
outsb
push
and
mov
push
push
jp
pop
movsb
pop
cmpsl
xor
or
xchg
xor
pop
insl
xor
add
lds
mov
jno
aaa
mov
test
jp
into
fs
dec
popl
ss
and
jne
hlt
inc
mov
mov
lret
cmp
dec
fildl
imul
stos
xorb
pop
repz
jmp
jne
add
xchg
loope
cs
mov
daa
sarl
fadd
icebp
shll
dec
add
in
pop
xor
sbb
and
jg
mov
test
pop
sbb
aad
mov
dec
lret
sbb
push
mov
sbb
and
mov
andps
in
dec
xor
mov
jns
leave
mov
xor
jo
jno
push
xchg
push
xchg
push
push
repz
mov
xchg
ret
mov
jno,pn
mov
ret
rcl
push
int3
ljmp
pop
loope
into
xchg
and
pop
hlt
xchg
xor
dec
clc
mov
ds
sti
cld
and
jo
aam
mov
lahf
mov
scas
lcall
popa
mov
xorl
adc
aaa
push
mov
std
and
lret
rcrl
push
pusha
sub
xor
scas
cmp
mov
inc
fstps
push
shlb
sbb
fs
mov
and
not
pop
fcompl
loop
pop
or
movb
notb
ljmp
mul
jno
lss
aam
addl
dec
incl
push
push
jnp
jbe,pn
push
iret
movsl
dec
arpl
xorl
lock
rcrb
add
popa
sbbb
repz
push
xchg
push
jns
cmp
and
call
xor
sbb
iret
cmpsl
pusha
adc
jnp
mov
bound
mov
adc
push
inc
sbb
scas
pop
notb
int
popa
das
in
mov
mov
mov
dec
insl
adc
daa
mov
lret
clc
push
repz
jmp
push
and
rolb
icebp
jne
sarb
mov
scas
stos
repz
dec
gs
sub
adc
cmp
lods
sbb
shl
pop
push
jle
cmp
jae
std
pop
sub
and
lock
dec
ss
mov
dec
dec
cmp
pop
sti
sar
mov
jae
movsb
lods
xor
dec
mov
jle
loop
push
xchg
mov
pop
call
lods
cmp
cmpl
mov
leave
xor
or
mov
aas
adc
inc
fs
jae
cmp
push
lock
enter
repz
cmpl
lds
ds
sub
mul
lods
jne
mov
pop
mov
repnz
mov
xor
fcomi
movups
sbb
jecxz
pop
outsl
push
repnz
dec
adc
loopne
adc
int
jmp
pop
aam
and
mov
lds
push
push
push
cmpsl
stos
dec
mov
subl
inc
test
inc
lcall
fiadds
sub
ret
fdivrs
push
inc
ja
ret
lret
stos
daa
mov
mov
mov
je
mov
out
push
inc
dec
in
in
mov
xlat
jns
sub
sbbl
and
ja
mov
das
stos
in
xor
mov
ds
jo
xor
mov
mov
repz
sbb
es
adc
popa
mov
repz
sbb
cmpsb
pop
arpl
enter
inc
pushf
mov
xchg
xor
clc
and
sub
inc
shlb
stos
pop
and
xorb
jge
xor
jae
inc
jge
test
add
jo
mov
mov
test
les
jl
aas
insl
cli
bswap
add
test
xchg
add
loopne
or
pop
mov
cwtl
jecxz
pop
push
push
lods
popa
mov
mov
add
and
out
sub
nop
mov
ja
pop
out
gs
jp
std
out
adc
mov
shll
and
push
mov
hlt
mov
or
ret
aas
lds
adc
lret
insl
mov
fisubs
les
and
int
pushl
mov
movsb
jge
and
leave
lcall
mov
mov
xchg
mov
pop
nop
cmp
inc
loop
xor
push
add
pop
test
mov
dec
hlt
stos
dec
gs
or
pop
and
outsb
xchg
pop
or
inc
int3
cltd
sti
xor
cmp
mov
cli
or
mov
vpmaxsw
flds
std
or
bound
icebp
mov
pop
icebp
out
inc
leave
xorl
sahf
jb
mov
or
sbb
cltd
pop
lds
or
lahf
lds
lcall
call
sub
out
add
fisttpll
xchg
lret
push
push
adc
or
xchg
je
mov
bound
cmp
in
rorl
lds
leave
out
lahf
xchg
xor
add
cli
shl
cmp
movsl
scas
sub
adc
fsubrs
mov
dec
lds
fwait
add
sar
fs
aas
pop
inc
push
lock
pop
enter
pop
in
imul
jnp
pushf
push
icebp
jg
ss
fwait
stos
or
jg
push
xchg
xchg
loope
push
pop
adc
pop
pop
loopne
mov
inc
sahf
dec
fwait
ret
das
inc
push
push
mov
xchg
mov
icebp
sub
mov
cwtl
mov
pop
cmp
push
fwait
movsl
sbb
jle
or
xchg
jmp
push
xchg
dec
mov
push
aam
pop
sbb
imul
insb
sbb
test
add
mov
jle
insb
repnz
mov
sub
xchg
sbb
xor
lea
xor
push
popa
mov
lods
mov
jl
mov
loop
hlt
mov
testb
sub
clc
sbbl
and
into
aaa
shrl
cs
lret
sbb
inc
jae
and
adc
xor
push
adcl
subb
mov
sbb
or
mov
bound
out
into
xchg
faddp
aaa
xchg
aad
adc
pop
adc
push
cmp
insl
mov
mov
arpl
inc
lret
fidivl
inc
jb
xor
mov
dec
pop
cmp
scas
xchg
mov
xchg
pushf
dec
mov
or
idivb
daa
mov
outsb
inc
ret
idivl
jne
lock
loope
sub
sub
int
scas
push
jno
mov
ss
adc
jbe
mov
mov
xchg
add
add
dec
out
cmp
ret
and
add
mov
jno
clc
xor
test
shl
sbb
sti
or
popf
dec
cmp
lret
repnz
je,pn
fisubrs
popa
or
pop
leave
popl
add
iret
loop
ja
cmp
scas
sbb
jo
adc
cwtl
ljmp
inc
xchg
xchg
test
test
stos
add
cmpsb
xchg
xchg
sub
push
pushf
mov
es
cld
fildll
aad
cltd
popl
sbb
add
ret
dec
sub
aam
push
jp
pop
or
addr16
and
pop
dec
push
dec
call
mov
popf
data16
cmp
cwtl
scas
pop
scas
pop
ljmp
jnp
mov
or
rol
mov
or
cltd
lret
fiadds
and
cmp
dec
out
repnz
sbb
rep
add
jg
add
pop
enter
movsb
adc
jns
and
mov
pop
mov
pop
mov
or
xchg
repz
addr16
jb
jg
insl
addr16
push
add
mov
xor
in
sub
call
jp
dec
ret
fildl
sub
pop
jne
es
add
dec
and
cmc
push
add
outsl
lret
add
icebp
insl
call
jle
push
xlat
push
popa
adc
insl
ss
xor
adcb
sbb
jp
jl
icebp
sarl
push
fcos
imul
jne
jns
adc
ret
lahf
push
rcll
adc
hlt
jp
mov
ljmp
hlt
hlt
jecxz
stos
push
ja
adc
popf
cli
push
pop
jge
jp
cmc
mov
xchg
sub
fsubl
push
hlt
idivl
das
movsb
shlb
inc
scas
lret
leave
stos
lea
adc
stc
mov
and
scas
into
sar
popa
sbb
cs
fildll
jp
add
pop
cmp
lods
cmp
out
mov
adc
push
mov
fs
adc
dec
in
fwait
les
les
ds
xchg
pop
xchg
cmp
pop
pushf
mov
stos
repz
sbb
insb
arpl
xor
cmp
icebp
xor
shrl
inc
xchg
pushf
mov
inc
dec
adc
mov
jg
xchg
stos
add
sub
inc
or
aas
lds
xchg
jns
push
push
or
xchg
add
cld
jmp
adc
popa
xchg
repnz
and
pop
in
ret
xchg
dec
fwait
loope
sbb
insb
sub
fadds
pop
es
popa
adc
lret
inc
pop
sub
iret
jns
pmovmskb
imul
sbb
faddp
jmp
sbb
inc
fists
or
in
mov
add
mov
inc
jecxz
pop
mov
sub
cli
bound
and
inc
adc
call
ret
or
sti
js
add
xchg
mov
pop
mul
and
mov
dec
fs
in
add
inc
stc
push
jb
ret
mov
xchg
repz
xor
stc
or
pop
ret
dec
push
push
sbbl
push
dec
or
shlb
add
test
cld
hlt
outsb
inc
xchg
jle
clc
lret
call
mov
movsl
pop
xlat
xor
add
cwtl
shrb
xchg
and
imull
in
std
ficomps
jp
in
fcmovb
xchg
push
out
mov
jns
mov
mov
aaa
sbb
out
pop
pushf
dec
or
inc
push
outsl
mov
cmpsb
in
mov
fs
fidivrs
in
mov
call
imul
cld
into
xor
mov
inc
lret
rcrb
lret
out
lock
sub
dec
xchg
mov
and
jle
mov
into
add
lret
inc
xor
icebp
adc
push
mov
push
jb
push
add
test
stos
lock
inc
jg
movsl
test
adc
int
and
inc
and
mov
jae
outsb
in
add
or
and
into
jg
fwait
jl
popa
inc
aam
xchg
adc
test
sbb
or
outsb
insl
fstps
jne
cmp
repnz
jb
out
jge
add
inc
stos
mov
je
bound
push
add
xor
fcomip
aad
push
pusha
push
outsl
cmpsl
sub
adc
push
inc
out
gs
jl
cmc
sbb
sub
lock
dec
sub
and
call
fadds
je
jmp
shrb
and
mov
jecxz
jae
push
aas
fdivl
push
ret
call
push
jae
inc
stc
pop
ds
inc
ljmp
std
movsl
mov
xchg
sub
aam
incb
mov
dec
jmp
outsl
fisubrs
push
arpl
push
ret
into
adc
inc
dec
dec
cmp
insl
sbb
mov
outsl
sub
xlat
out
xor
push
cmp
mov
leave
scas
mov
add
gs
dec
mov
xchg
rcrb
inc
mov
adc
mov
cmp
xchg
ret
int
fbstp
mov
push
test
incl
es
aaa
iret
add
xchg
add
jnp
pop
add
testl
clc
xor
cmp
int3
subl
sub
or
sti
adc
xchg
jmp
xchg
mov
inc
out
xor
pop
stc
xor
mov
rcll
adc
inc
xor
aas
fisubrs
fstl
and
cmc
cmp
lahf
mov
mov
mov
xchg
test
push
mov
outsl
inc
test
push
mov
sub
jl
leave
lock
dec
jns
jmp
add
xchg
imul
xchg
or
cli
mov
adc
and
int
jo
arpl
dec
cmp
scas
shr
mov
xchg
add
sbb
jno
jecxz
fsub
mov
pushf
js
rclb
xchg
pop
fld
negl
push
or
add
push
lcall
pop
ror
or
xor
testb
inc
lock
push
mov
pop
lret
mov
cmp
scas
js
out
push
push
add
inc
sub
xor
mov
lock
aam
testb
pusha
jb
lods
insl
pop
mov
mov
sahf
loop
leave
test
jne
dec
mov
push
sbb
mov
jp
mov
scas
add
rcrb
mov
xchg
sbb
incb
jp
or
add
ret
jge
pushf
lcall
fidivrs
inc
cmc
scas
xor
sub
cmpsb
out
push
sarb
loop
cmp
arpl
out
loop
out
fwait
pop
xchg
mov
stc
xchg
repz
cmpsl
mov
adc
and
mulb
inc
repnz
adc
sti
call
mov
dec
lock
inc
std
sbb
xchg
insb
ret
test
mov
sbb
shrl
popa
mov
pop
insl
and
cltd
imul
push
or
lods
mov
xchg
push
pop
sahf
and
addb
xchg
outsb
jns
and
lret
jp
cmp
hlt
jge
mov
hlt
and
cmp
icebp
xchg
fldenv
cmc
push
mov
dec
push
jp
pop
lret
xlat
clc
and
cmpsb
and
dec
sub
leave
fs
mov
mov
daa
jle
and
jns
sbb
mov
add
cmp
push
lock
ficomps
fs
add
out
test
cmp
sbb
pop
les
mov
sub
sub
lods
sbb
jns
mov
sbb
mov
dec
xchg
in
cmc
xor
cld
lret
sub
je
repnz
cwtl
rorb
or
dec
subl
shll
leave
mov
lods
mov
cmpsl
sbb
pop
imul
push
sub
pop
popf
push
push
stos
or
and
xor
jl
inc
mov
jns
jnp
test
pop
cmp
inc
mov
mov
push
mov
test
pop
ja
fidivrs
adc
fxam
mov
cmpb
pop
jo
in
test
jmp
jbe
cld
xchg
jl
test
aaa
or
add
lret
mov
xor
hlt
sbb
mov
mov
icebp
pop
mov
or
mov
popa
rorl
inc
dec
cmc
in
cmpsb
ds
jmp
jg
and
fdiv
pop
adc
jnp
inc
lods
aaa
mov
fwait
lret
pushf
xchg
cmp
popf
mov
fwait
push
adc
xchg
add
mov
cltd
sar
cmp
out
cmpsl
cli
lods
jno
pop
cmp
sbb
aaa
mov
lods
call
movsl
test
adc
in
push
pop
add
clc
xchg
fadd
bnd
xor
ds
clc
jae
mov
je
lcall
popa
and
sbb
xchg
xor
out
stc
sar
xor
cmp
je
pushf
mov
xchg
and
shll
es
popa
cmpsb
jl
inc
mov
sub
inc
cs
cmp
inc
dec
jbe
push
pop
sub
fwait
cltd
pop
mov
add
in
mov
inc
push
inc
push
xchg
dec
pop
data16
jne
stos
fisubrl
xchg
add
mov
lret
mov
adcl
jmp
leave
xchg
and
repz
ja
negl
bound
lock
cmp
xorl
dec
negb
test
xchg
shlb
or
out
test
mov
stos
ja
mov
adc
jne,pn
add
xor
mov
push
fwait
jmp
scas
repnz
cmp
adc
and
bound
inc
jmp
scas
pop
je
addb
out
jae
into
int3
xor
test
shlb
in
pop
popf
inc
stos
pop
xchg
add
or
xor
test
lea
mov
scas
ljmp
jmp
lahf
sub
sub
mov
mov
inc
in
and
divl
mov
rol
jle
lock
in
fnstcw
jmp
xchg
jnp
adcl
iret
cld
jne
outsb
gs
push
push
push
xchg
popa
clc
mov
out
das
insw
or
imul
mov
bnd
sbb
dec
push
lds
imull
fwait
cmpsl
mull
stc
xor
cltd
rclb
and
and
and
movl
jbe
push
cmp
and
popa
sub
int3
jns
and
push
mov
xorl
sub
outsb
mov
sarb
out
roll
xlat
mov
pop
pop
sub
es
cmpsb
xor
test
ss
pop
push
pop
sbb
jecxz
test
jnp
jle
sbb
ret
mov
jle
cmp
mov
jp
cmpw
or
push
and
sbb
in
hlt
mov
subl
cmc
cltd
pop
pop
xor
sti
mov
mov
in
shlb
mov
andb
cmp
pop
lret
jne
orl
scas
cmc
push
sbb
adcl
sbb
aaa
dec
mov
lock
nop
in
sub
and
cli
loopne
dec
xlat
leave
insl
sarb
xlat
out
cmp
pop
mov
jg
mov
fsub
movsb
dec
jnp
jg
push
add
outsb
adc
insl
mov
repnz
inc
xor
pop
adc
lea
push
sbb
or
gs
lock
dec
xor
dec
mov
lods
xchg
bound
rcl
push
jbe
mov
xchg
mov
repz
pop
cmp
pop
adc
outsb
pop
dec
push
fisubs
rcrb
sub
xchg
movsl
in
es
popa
jno
xchg
cwtl
lahf
mov
xor
mov
rcl
dec
pop
rcl
or
je
lcall
fnstenv
mov
out
repz
out
xorb
xor
and
jb
mov
sub
outsb
lretw
sbb
scas
lcall
jne
pop
or
cmp
push
or
lret
cmc
jbe
arpl
adc
insl
push
pop
cmp
lahf
mov
in
mov
sub
or
push
fisubl
lods
inc
sub
je
add
cs
dec
adc
push
adc
lds
fidivrl
add
sub
pop
dec
lods
cld
fisubrl
pop
mov
push
push
andl
call
rolb
jle
lock
dec
pushf
or
mov
insl
or
in
xlat
popa
jns
push
das
adc
in
aaa
pop
pop
xlat
cltd
add
iret
pop
jecxz
jp
xor
or
pusha
and
inc
shrb
stos
jns
insb
mov
cmp
sbb
push
cmpsl
dec
ja
push
jno
pusha
push
cmpsl
push
sarb
sbb
inc
jnp
push
js
movsl
jge
push
cmpsl
mov
xchg
push
inc
fsubl
sub
stos
ss
inc
sub
ljmp
mov
leave
sub
mov
sub
ljmp
je
jp
add
mov
cmp
sub
in
daa
ret
scas
negl
inc
lret
sbb
ficompl
out
leave
adc
bnd
insl
scas
add
push
mov
sbbb
push
sbb
dec
ret
in
cltd
insb
imul
jno
pop
and
push
sub
negl
jg
movsl
lret
lock
fucomip
xor
push
and
jns
sub
sbb
jne
jmp
and
push
xchg
leave
das
hlt
adcb
ja
outsl
pop
push
cmp
pop
xchg
fs
pusha
pop
popf
adc
jnp
dec
iret
mov
add
hlt
add
sbb
ljmp
daa
xor
ja
pop
out
dec
data16
iret
cmp
aas
pop
xchg
xchg
push
out
in
mov
movsl
jmp
out
mov
mov
and
adc
ret
inc
mov
fistpl
and
push
jnp
or
out
push
or
xor
and
xchg
mulb
sub
jne
outsl
xor
mov
xor
orl
jnp
notb
add
push
rcl
pop
sub
int3
inc
or
fimull
rorb
lahf
cs
aam
jb
mov
push
sbb
daa
loopne
jp,pn
sbb
pop
pop
pop
add
jl
sbb
aam
pop
xor
mov
mov
mov
cmp
std
sbb
lret
push
xchg
popf
out
adc
stc
xor
push
xlat
or
aas
stos
inc
aam
pop
cmp
cmp
sbb
clc
and
lret
dec
mov
mov
call
inc
je,pt
sub
out
subb
icebp
int3
bound
and
xchg
mov
or
nop
adc
movsl
mov
pop
test
jae,pt
cli
fadd
out
ljmp
movsb
sbb
lock
inc
jbe
inc
in
fs
inc
jle
aas
roll
movsb
cmpl
mov
sbb
add
mov
lods
xlat
add
das
push
inc
xor
xor
loopne
scas
adc
or
imul
xor
jle
jg
mov
mov
addl
incl
or
and
in
jbe
or
mov
jmp
cmp
mov
mov
sbb
push
xchg
fs
dec
pop
inc
or
add
push
outsb
and
push
shr
lock
clc
fxch
sbb
out
fsubrl
push
mov
into
imul
loopne
movups
in
test
sbb
pop
mov
ret
out
jecxz
add
ret
xor
sbb
nop
add
in
inc
mov
push
mov
xor
sub
into
insb
inc
push
push
clc
jne
repnz
xlat
xchg
rcrl
test
in
jl
or
std
cltd
mov
lea
xor
aam
fdivl
movsl
adc
ficomps
popf
jecxz
notb
je
jle
clc
enter
pop
push
jo
cld
shlb
cmp
gs
insl
leave
inc
sub
cmp
mov
lret
mov
sub
sbb
jae
out
js
mov
es
sub
popa
fnsave
inc
mov
mov
out
js
cmp
sub
lret
xchg
std
dec
leave
sbb
sub
or
addr16
sbb
ljmp
adc
lret
sti
sub
mov
aaa
dec
icebp
fistpl
push
stos
cmp
mov
in
adc
sub
shrl
inc
jo
inc
xorb
sbb
mov
ret
jno
sub
mov
and
xchg
push
inc
stc
mov
shlb
repnz
jecxz
inc
outsl
loope
adc
dec
inc
add
xor
mov
fs
and
mov
jns
mov
test
decw
fwait
pop
inc
mov
xor
fstps
mov
dec
fsubp
push
or
xchg
in
sbb
lret
sti
pop
movsl
in
test
or
xchg
dec
inc
lret
pop
and
es
xchg
shrl
fdivrl
stos
movsl
cmp
sbb
sbb
mul
int
cltd
jl
dec
cltd
cmp
les
inc
fldl
cmpsl
call
pop
in
aam
jno
xor
ret
cmc
fcoms
sub
and
lods
aas
or
pop
popa
lea
xchg
pop
sar
out
add
or
sub
in
outsb
jne
imul
push
ja
int3
das
stc
lcall
filds
vpshufd
sbb
adc
ficompl
pop
loop
xchg
cmpsl
mull
fnstsw
push
inc
pop
das
push
leave
inc
dec
loopne
sar
and
pop
dec
movsl
test
adc
jge
lods
aas
je
insb
pushf
xor
std
and
call
lods
movsl
sbb
icebp
cmpsl
and
pop
or
in
lea
inc
sub
xor
inc
mov
pop
sbb
inc
jne
lods
mov
pop
dec
xor
pop
repz
adc
aas
pusha
mov
xchg
in
xchg
sub
jno
out
jne
jnp
lods
xchg
out
cltd
cmp
pop
daa
sub
and
adc
paddd
jp
icebp
sbb
aam
mov
adc
and
cli
add
repnz
and
mov
fsubrp
mov
sub
lock
imul
push
js
mov
add
or
orb
lock
insb
mov
insl
push
cwtl
ja
cmp
repnz
call
sahf
cmp
aad
cmp
fcomps
mov
push
in
or
das
mov
mov
loopne
dec
test
pop
movb
sbb
mov
add
pushl
pop
loopne
mov
mov
cmp
pushf
jbe
fldt
jge
cmc
movsl
enter
dec
arpl
loope
adc
fcoms
xchg
je
adc
and
out
lock
repnz
ret
adc
inc
mov
push
xchg
sub
mov
sbb
lret
and
jo
xchg
pushf
pushf
in
leave
xchg
jmp
testb
loopne
sub
out
ss
xchg
mov
int3
in
jae
pop
xor
stos
mov
sbb
movsl
subps
xlat
mov
nop
xor
repz
push
adc
mov
cmpsb
and
call
and
test
sub
sarl
xor
sti
smsw
sbb
lock
shlb
and
lods
inc
cmp
add
push
movsb
insl
scas
rorb
adc
pop
jmp
push
sub
subl
cmc
movsb
frstor
int3
mov
mov
push
mov
mov
push
std
aas
stos
cmp
or
les
cmp
int3
punpckhwd
add
test
mov
push
les
sbb
push
fwait
lds
inc
mov
paddusw
sbb
cmpsl
loop
testb
sub
jbe
repz
push
fwait
cmp
jne
cmpsb
xchg
aas
dec
cmp
cmp
rcll
dec
in
jmp
and
lahf
jle
stos
lret
dec
out
mov
lcall
pop
rcrb
jb
inc
jne
xlat
cli
xor
out
pop
rcl
lock
jle
sbb
loopne
sub
add
pop
ljmp
adc
push
pop
out
test
shlb
loopne
test
push
lods
in
push
mov
push
inc
leave
xchg
stos
mov
scas
ja
shl
cs
ja
mov
mov
or
jbe
and
dec
mov
testl
dec
fsubr
imul
adc
in
leave
xchg
sub
test
add
ret
and
push
xor
aas
fwait
pop
jmp
js
push
idiv
rcrl
xchg
jecxz
mov
sbb
add
and
pop
popa
test
lods
xor
jmp
jmp
ds
sub
shl
mov
mov
mov
enter
arpl
lods
pop
push
mov
inc
pop
cmp
xchg
packuswb
xor
in
cmp
pop
fwait
test
dec
ret
mov
cmpsl
xor
nop
adc
imul
idiv
ljmp
add
call
jnp
mov
xchg
jne
arpl
faddl
nop
pop
inc
mov
imul
rcr
sbb
and
out
or
subb
aas
fbld
sti
nop
xchg
mov
add
les
jno
iret
jbe
lock
adc
push
mov
hlt
or
in
adc
pop
leave
inc
cmp
mov
sbb
shll
idiv
js
int
xchg
flds
push
and
pop
out
and
arpl
push
or
jecxz
out
jae
or
mov
js
adcl
lret
cmp
add
jae
addr16
mov
cld
and
cli
xchg
sub
orb
push
stc
xchg
sbb
rcrl
and
aam
ljmp
pop
mov
inc
adc
cld
das
fs
mov
or
arpl
xchg
xchg
stc
ret
jno
mov
cmp
mov
jge
jge
push
loope
bts
cld
ds
sub
or
cmp
shll
push
das
out
stc
cmp
imul
outsb
mov
sub
inc
fwait
xlat
mov
xor
pop
shll
or
push
inc
dec
mov
movsl
inc
lea
fsubrl
cmpb
lock
icebp
sub
push
sbb
mov
lcall
fs
add
cli
cmp
jne
out
cmc
data16
setne
mov
add
mov
adc
jle
sbb
xor
test
dec
insl
insl
sub
loope
je
int
push
pop
in
and
mov
mov
push
sbb
mov
jne
lea
out
xchg
in
loopne
push
adc
fsubr
es
int
mov
xchg
jno
jne
dec
icebp
sub
xchg
aam
mov
sub
or
push
iret
add
adc
xchg
pop
pop
sbb
popa
push
inc
pushf
xchg
imul
scas
std
push
mov
loop
push
add
mov
push
add
adc
out
inc
jle
xor
lret
lcall
inc
sbb
sub
inc
jne
inc
and
mov
lcall
pop
adc
inc
jo
rcrb
mov
cwtl
cmpsb
adc
icebp
add
movsl
fsubrl
sub
push
aas
sti
and
fs
add
aad
fstl
roll
cmp
pop
push
xchg
xchg
in
mov
fnsave
test
loope
fs
jl
mov
adc
test
cwtl
pop
imul
scas
add
and
rorl
lahf
sub
and
leave
je
dec
xchg
in
cmp
mov
adc
sbb
mov
bound
stc
ja
mov
clc
lods
pop
rclb
mov
mov
stos
xchg
bound
lds
jo
xor
jb
xchg
cmc
dec
mov
adc
int3
mov
push
mov
push
pop
rol
mov
xor
pop
dec
jge
pop
lods
sti
fcmovbe
xchg
loop
sar
mov
into
ret
inc
dec
jmp
mov
stos
add
push
adc
mov
pusha
rorl
lods
and
ldmxcsr
xchg
data16
mov
jae
inc
and
mov
mov
or
xchg
sbb
std
icebp
jp
cwtl
jge
cmp
push
adcl
xor
dec
outsb
pop
sub
xlat
rorb
xor
and
les
out
xlat
mov
dec
jnp
adc
gs
xor
incl
repz
xchg
cmp
sar
sub
xchg
iret
jmp
jp
movsb
sub
pusha
push
stc
and
cmp
add
and
nop
jb
dec
in
in
xchg
and
mov
rorb
sub
lock
lcall
xor
fnstenv
subb
sbb
jecxz
loopne
rorl
adc
dec
push
fcoms
push
je
jnp
jns
xor
in
cmp
call
in
mov
jge
rcrl
sbb
push
mov
inc
ja
and
jle
cltd
lea
dec
mov
cmp
push
mov
mov
pusha
rcr
movsl
loop
xor
and
mov
pop
daa
push
mov
jle
and
jge
cmp
inc
inc
jecxz
xchg
mov
popf
fnop
movsl
stos
call
mov
jne
in
cmp
pop
out
movsb
outsb
cltd
push
fsubr
sbb
cs
cmp
jns
aaa
in
push
dec
das
ficoml
jo
subl
mov
or
sbb
sti
sbb
cmc
shrb
call
xchg
in
gs
int3
push
addr16
rclb
aam
cli
xchg
cltd
int
or
mov
sar
adc
scas
pop
fadds
addr16
mov
push
loop
out
dec
jge
push
pop
nop
pushf
and
jne
fsubrs
popa
pop
stc
rclb
fisubrs
mov
pop
daa
fbstp
inc
in
and
mov
sub
inc
dec
jne
mov
sbb
pop
out
mov
inc
data16
push
sub
inc
sbb
cld
jmp
mov
std
pop
js
cmp
and
repnz
out
stc
and
test
fwait
pop
popa
mov
sbb
jnp
dec
in
adc
outsb
repnz
jge
adc
push
roll
repz
int
out
pop
popf
pop
add
cmc
xchg
adc
push
inc
xchg
xchg
dec
lret
pop
and
mov
in
cmp
mov
dec
jge
ja
jns
bound
cld
clc
and
inc
inc
add
mov
mov
adc
sbb
out
fadds
loopne
repnz
sub
or
pop
or
sub
adc
int
xor
mov
dec
pop
fstp
inc
sbb
test
pop
adc
mov
inc
push
cltd
push
imul
mov
faddl
add
je
xor
mov
aad
das
stos
out
repnz
mov
inc
add
lret
pop
pushf
pop
cmp
lret
push
mov
sub
ljmp
xor
jl
and
pop
in
jge
xchg
mov
ret
xlat
jno
insb
cmp
iret
test
movsb
mov
call
push
lods
jmp
shrl
add
cmpb
mov
fldcw
jae
mov
mov
out
add
mov
push
push
in
mov
push
or
and
das
or
sbb
div
sub
cli
push
fldl
andl
loop
test
sbb
mov
loopne
inc
xor
repz
fisubrl
popf
test
push
fwait
jb
inc
fnstcw
jbe
fs
dec
cmp
pmovmskb
cwtl
jp
mov
adc
lret
aam
inc
mov
cmc
add
cmc
nop
xchg
jne
cmp
jne
ret
orb
call
inc
loopne
popa
push
and
mov
hlt
test
enter
jmp
mov
mov
repnz
pop
inc
mov
cmp
dec
stc
lcall
jns
or
xchg
xor
test
mov
inc
mov
xor
fimuls
sub
jne
jmp
xchg
mov
ja
fildl
cmpsb
out
and
repnz
dec
and
mov
push
in
je
out
or
xchg
inc
lret
pop
fdivrs
inc
fdiv
mov
fwait
in
cltd
pop
out
int3
adc
arpl
cli
jge
push
sbb
adc
push
add
jecxz
add
xchg
or
ret
ljmp
ljmp
xor
mov
lret
fs
xchg
ficoms
push
mov
mov
pop
add
je
ret
mov
xlat
clc
ficoml
lcall
adc
rorb
test
ds
xchg
fnsave
dec
xchg
jno
ljmp
sbb
adc
cmp
sub
sbb
jmp
shrl
and
leave
loopne
sbb
aam
mov
daa
lods
fs
dec
pusha
pop
ret
aad
fidivrs
mov
mov
pop
push
js
jge
mov
int3
scas
and
outsl
fstps
fnstsw
push
jmp
mov
cmp
or
mov
cmp
xchg
pop
xchg
stos
pop
jb
push
aad
inc
add
stos
mov
cmpl
fdivrl
pop
enter
jmp
ficompl
fimuls
xlat
sbb
fildl
movsl
cmpb
decb
subl
add
lret
sub
jb
pop
mov
scas
xor
xchg
ja
sub
cmp
repz
xchg
sub
les
jns
pop
and
mov
mov
mov
cmc
test
mov
cmpsb
sbb
mov
jecxz
sbb
mov
cmp
push
inc
lcall
xlat
or
aas
rclb
mov
push
test
pop
out
and
push
mov
dec
pop
push
add
stc
cmp
inc
cli
stos
sub
das
notl
pop
movl
test
ret
inc
daa
nop
mov
jno
xor
sub
into
adc
xchg
cld
mov
sub
mov
cmpsl
fisubrs
fists
test
lock
out
pop
clc
clc
jne
aaa
cmp
cli
xchg
clc
ret
ret
xchg
mov
push
inc
cmpsl
push
ret
jp
ja
xlat
xor
leave
jo
hlt
cmc
cmp
dec
lods
stc
lcall
insl
arpl
jne
add
push
lcall
sahf
pop
repnz
repz
sub
sub
cltd
push
notb
xor
pop
iret
mov
push
cmp
sub
emms
sub
inc
or
stos
sbb
stos
push
mov
sub
enter
cli
and
mov
arpl
aaa
lods
pop
add
xor
shrl
repz
add
adc
scas
adc
and
mov
pop
gs
pop
scas
incl
cltd
test
std
mov
pop
rclb
pop
arpl
adc
jmp
sarb
repnz
and
cmp
sub
test
mov
lods
xor
xchg
pop
and
scas
std
dec
add
jg
pop
lods
mov
out
test
mov
dec
les
pcmpgtw
adc
loope
sbb
cmp
push
cmpsl
hlt
js
push
mov
popf
cs
xor
bound
sahf
adc
jg
sarl
sub
std
add
stos
cmp
jg
add
arpl
cmp
loopne
cmp
xchg
arpl
clc
rep
mov
repz
idivl
inc
or
xor
add
mov
xchg
pop
xor
stc
cld
outsl
push
fst
sub
js
xchg
movsl
shl
addr16
stos
fldt
mov
mov
test
dec
movsl
rorl
push
aas
es
arpl
inc
lods
dec
ss
fstl
push
sbb
adc
stc
lds
popa
mov
and
and
mov
mov
push
stc
loope
dec
cmp
fidivs
xor
pop
stos
adc
inc
out
push
sub
dec
pop
or
inc
lahf
add
jmp
sbb
lds
jo
arpl
in
xchg
test
xorl
sbb
fsts
dec
mov
push
and
sahf
lret
xchg
outsb
xchg
aam
inc
push
lock
mov
mov
loopne
dec
mov
jl
push
mov
out
sbb
je
insl
movsl
fildll
in
and
jp
es
int3
xchg
xchg
test
adc
pop
and
xor
andb
clc
push
jb
dec
push
mov
xchg
in
xchg
add
outsb
jne
in
stc
jae
aaa
fstpt
mov
jmp
fimuls
cli
mov
fisubl
subl
or
jmp
cmpsl
movzwl
dec
clc
mov
sub
mov
popf
test
xlat
pop
jnp
repnz
mov
ret
in
lahf
scas
inc
mov
inc
inc
lds
and
xchg
and
sbb
insl
subb
dec
out
movsb
dec
push
nop
mov
adc
sub
je
inc
popf
push
xchg
sbb
push
aam
addl
push
ja
shrb
sbb
mov
aaa
in
es
testb
fs
pop
jg
stc
aad
loopne
ss
ja
aaa
loopne
ds
out
pop
lret
int3
sub
dec
daa
mov
outsb
inc
daa
cld
xchg
sbb
cltd
daa
push
insb
cmpsl
test
outsl
aam
cwtl
insb
sbb
push
adc
mov
or
fidivs
mov
jp
push
xchg
cltd
imul
and
out
sub
sub
push
fnstcw
and
and
adc
xchg
pop
inc
in
cmp
xchg
loopne
das
xlat
xor
fstl
lcall
filds
movsl
and
cmpsl
jne
mov
repnz
repnz
into
lea
push
cli
popa
int
or
jge
and
js
push
bound
ss
inc
pop
pop
in
dec
rcrb
dec
into
jno
mov
pop
cmpl
mov
mov
adc
iret
loope
add
loope
or
jle
cmpb
js
cmpsb
scas
ds
pop
mov
out
dec
cmc
inc
mov
or
rcrl
adc
mov
xlat
sub
ret
out
xor
fcoms
cmp
fnstsw
xchg
xor
inc
jle
out
and
js
pop
sbb
xchg
adcb
mov
adc
in
mov
cld
das
xor
sarl
xchg
inc
sahf
inc
in
mulb
push
xchg
popf
lock
shl
aam
push
pop
xchg
jns
movsl
out
push
ret
adc
adc
bound
cmp
adc
and
scas
xchg
add
xchg
mov
xchg
xor
rorl
aam
mov
pop
xchg
js
ss
adc
dec
jg
push
or
jae
push
ja
adc
mov
jns
cmp
and
je
push
xchg
add
addr16
jo
xchg
stos
jbe
xchg
rcll
or
sbb
push
imul
jns
mov
mov
mov
dec
call
pop
lcall
sub
fucomip
mov
iret
lret
push
dec
lret
sbbb
in
orl
sbb
push
mov
shl
pushf
jl
mov
push
or
xor
push
shlb
jg
test
dec
punpckldq
fwait
rolb
cld
jnp
imul
ror
gs
push
sub
and
scas
inc
xchg
aaa
insl
fbstp
pop
les
fmul
inc
xchg
rorb
fstpl
push
jecxz
fs
mov
out
cmp
je
inc
sbb
and
mov
pop
adc
jns
pop
in
pop
push
fbld
mov
dec
pop
sbb
je
js
xchg
ds
and
loop
int
ret
cmp
clc
pop
test
mov
std
adc
xchg
pop
sbb
xor
mov
and
fidivl
xchg
jg
lcall
sub
test
inc
loop
pop
mov
push
push
enter
mov
dec
adc
iret
sub
dec
sub
mov
pop
out
pop
xchg
push
and
cmc
repnz
xchg
ret
loopne
xlat
push
xlat
sbb
and
add
xchg
jno
je
push
and
or
mov
out
ret
sti
ret
and
outsl
bound
mov
cmp
clc
or
add
mull
ja
xchg
cwtl
push
mov
sub
mov
cmp
jg
adc
ss
ficoms
pop
mov
dec
sbb
vminss
imulb
lock
and
repz
roll
iret
iret
mov
in
add
lods
loopne
or
fcoml
add
sub
in
cmpl
addb
fldenv
xchg
cltd
rcl
or
pop
mov
iret
sbb
leave
sbb
xlat
pop
arpl
fidivrl
mov
and
xchg
out
mov
inc
mov
adc
xchg
sub
ret
leave
push
cli
inc
aas
sub
pop
xchg
mov
fldt
jo
xchg
mov
and
push
inc
pop
mov
push
push
lcall
pop
push
scas
daa
dec
mov
and
lods
aam
cmc
js
scas
jecxz
mov
adc
les
pusha
mov
enter
fadd
dec
negb
add
addb
clc
out
adcb
setb
loopne
out
movsl
xchg
je
popa
insl
inc
cmp
xchg
push
cmp
fildl
inc
mov
push
jge
jno
cmpl
pop
mov
dec
sub
sub
dec
testl
mov
push
scas
or
jns
add
out
pusha
mov
and
lret
or
adc
xchg
sbb
push
sub
cli
out
mov
push
ja
iret
sub
cmpsb
push
scas
pop
loopne
dec
xchg
dec
jle
imul
dec
and
jne
adc
lods
cmpsl
or
add
divb
xchg
pop
aad
jecxz
movsb
mov
mov
jle
and
cld
jne
sbb
pop
movl
inc
pusha
pop
add
sbb
sub
les
sub
sbb
shlb
aas
mov
push
inc
jne
xchg
pop
push
inc
and
push
addr16
jno
lcall
into
mov
repz
push
imul
loop
pop
and
mov
push
inc
sbb
dec
or
shrl
adc
jae
push
js
and
add
out
lcall
mov
popa
in
mov
mov
jno
iret
push
loopne
cmp
mov
push
sbb
and
cmp
popf
inc
lea
lock
pop
ja
scas
repz
xchg
stc
lcall
mov
jmp
decb
push
dec
fcmovu
decb
fcoml
mov
mov
test
mov
andl
xor
push
rclb
dec
mov
mov
mov
push
push
jae
mov
sub
xor
pop
adc
and
sbb
cltd
rol
test
sub
ret
movsb
xchg
cmp
in
fyl2xp1
imul
ds
test
mov
mov
filds
add
jp
cwtl
adc
je
cmpsl
jae
dec
pop
sahf
and
lret
and
es
gs
adc
mov
out
mov
sub
ret
stc
es
push
mov
adc
in
insl
mov
mov
or
jae
sbb
push
pop
pop
lock
jno
or
mov
sbb
cmp
pop
and
imul
pop
sub
mov
data16
mov
jb
jbe
xchg
cmp
sub
and
jno
gs
dec
fwait
test
lret
inc
adc
cmc
or
rcrb
sbb
mov
test
dec
adc
jns
loope
dec
in
mov
jmp
inc
stos
rcrb
and
int
punpckldq
xor
jns
jns
insb
sub
lret
mov
push
outsb
icebp
out
rolb
jg
or
adc
mov
jmp
and
cmpsl
push
pop
imul
in
loop
jno
mov
lret
sbb
add
xor
or
pop
test
js
mov
shlb
push
pop
xchg
out
mov
orl
mov
inc
xchg
icebp
dec
cmp
mov
push
jecxz
neg
mov
sbb
pop
mov
jle
push
dec
jne
push
call
cmp
pop
insb
pop
daa
xor
cwtl
mov
cmc
push
push
adc
sub
stc
mov
mov
mov
pop
insb
mov
xor
notb
jmp
aas
ret
cmp
push
ljmp
or
cld
mov
and
cld
dec
nop
xor
ja
fcom
js
push
xchg
sbb
dec
mov
xchg
add
mov
push
cmp
xorl
push
or
or
sbb
lods
lea
dec
sbb
pop
cwtl
sti
ljmp
fdivl
adc
mov
hlt
jo
ficoms
sub
sub
lds
xchg
mov
and
push
test
lds
cmp
dec
mov
add
addr16
add
pop
or
inc
push
jne
mov
leave
xorb
iret
daa
and
aas
into
inc
xor
and
jg
ret
cmc
stos
addr16
dec
adc
daa
mov
dec
jmp
xchg
or
push
andl
sub
inc
imul
out
jge
jno
lret
sub
incl
cmpsl
inc
fisttps
and
outsl
push
ret
out
inc
inc
inc
int3
pop
dec
les
test
and
lret
imul
daa
adc
cltd
test
and
test
iret
adc
ret
pop
or
sar
mov
imul
lods
fxam
iret
lea
and
mov
xor
push
gs
cli
shll
inc
cltd
mov
sub
pushl
adc
xchg
push
adc
scas
inc
add
icebp
aas
or
cmp
cltd
rcll
or
xchg
sbb
jg
adc
sub
dec
cs
and
in
shlb
fs
or
add
out
pushf
std
outsb
sarb
and
sbb
push
or
aad
add
xlat
push
sbb
sahf
iret
and
push
push
callw
inc
mov
inc
mov
jnp
inc
dec
pop
scas
mov
test
in
addb
in
add
sub
dec
jl
imul
arpl
add
add
dec
xor
jb
icebp
jns
je
sarb
jae
inc
dec
movsb
stos
fwait
cltd
xchg
dec
inc
fcomps
dec
mov
aaa
aad
dec
sbb
in
les
cs
je
arpl
frstor
inc
pop
cmc
je
mov
lret
inc
outsl
xchg
dec
xchg
leave
mov
dec
mov
jns
repnz
cmc
cs
mov
add
mov
stc
mov
outsl
push
stos
jo
divb
push
sbb
mov
mov
and
xchg
sub
enter
sbb
dec
pushf
or
sbb
jmp
pop
dec
dec
add
mov
das
dec
call
mov
xor
inc
sbb
andl
neg
dec
in
enter
popa
clc
jge
xor
adc
jnp
arpl
movsl
fdivl
fmul
xchg
js
std
dec
or
outsl
repnz
dec
jl
out
in
inc
or
or
dec
sbb
sarb
push
cmp
mov
test
jecxz
push
pushf
and
dec
cmp
in
mov
not
or
cli
pop
fsts
xchg
mov
mov
cmp
inc
cld
cmp
push
iret
rcl
fdecstp
scas
xrelease
fildl
inc
cmp
imul
bswap
jns
push
mov
xchg
icebp
insb
xor
orb
outsl
pop
cli
dec
or
jnp
jl
mov
add
sub
push
and
out
int3
faddl
mov
sti
cmpsb
movsb
js
faddp
pop
in
adc
mov
mov
push
test
loop
fmull
repz
mov
mov
hlt
add
xchg
sbb
or
pusha
sub
fisubs
hlt
ja
pushf
and
stos
mov
les
jo
repz
frstor
jno
sub
popf
lods
leave
scas
xor
cld
cmpsb
nop
adc
enter
sbb
or
cmpsl
pop
loope
or
xor
mov
xor
in
mov
pop
push
cmp
xor
outsb
pusha
ret
sub
scas
mov
dec
shl
sub
jae
pop
pop
push
movsl
mov
xchg
mov
mov
jno
enter
xor
add
add
xchg
test
movsl
fmull
sbb
xchg
or
adc
mov
or
aaa
xor
mov
fmuls
pop
test
inc
pushf
xchg
xchg
ds
mov
jg
pop
push
mov
bound
idivb
lret
pop
xchg
xchg
mov
or
adc
ds
vandnps
lds
rep
add
inc
jns
xchg
nop
js
mov
inc
aas
push
daa
rolb
jno
outsb
xor
js
nop
add
jecxz
js
pop
jl
out
pop
push
into
cltd
mov
stos
out
push
cmc
or
mov
pusha
add
jnp
xchg
movsl
and
jbe
ja
iret
mov
out
not
ret
mov
fistps
mov
xorl
loop
and
stos
sbb
test
lods
pop
insb
cmp
jecxz
je
pushl
outsb
sbb
cmp
ds
jecxz
stos
add
and
push
pop
jne
rcr
sti
or
loopne
dec
testl
int3
setbe
out
cmp
sbb
xchg
jb
call
inc
ja
pop
add
loopne
stc
push
dec
scas
fwait
cmpsb
xchg
repnz
out
push
mov
ss
repz
loop
push
wbinvd
inc
inc
mov
adc
icebp
jge
repz
test
sub
into
xchg
out
jecxz
push
je
sub
test
jnp
inc
or
fs
mov
mov
nop
pop
popa
adc
jno
ja
cmp
jle
xchg
mov
movsl
jo
popf
sbb
jmp
pop
arpl
gs
arpl
xor
repnz
xchg
jmp
sub
cmp
fnsave
mov
cmc
push
mov
pop
or
sub
xchg
cmp
sti
sub
frstpm(287
or
or
dec
scas
cld
xchg
arpl
pop
fmuls
mov
jmp
add
sbb
nop
xor
cmp
jnp
mov
xor
cwtl
push
adc
lods
loop
add
and
cmp
test
rorb
sub
test
shl
popa
movsl
sub
or
int3
and
sub
sub
dec
or
and
in
iret
out
loop
int
xchg
mov
cwtl
shlb
fbld
sarl
xchg
xor
push
fildll
push
inc
in
outsb
fistpl
mov
fidivl
test
jo
popf
dec
in
cmp
hlt
add
dec
mov
int3
add
inc
or
add
adc
mov
clc
jns
or
dec
cs
das
pop
cmp
cmp
jns
lea
stc
bound
insb
xchg
pushf
in
in
sbb
jge,pn
lds
dec
or
xor
pop
mov
push
push
adc
add
pop
aas
mov
mov
aaa
fadd
leave
push
jns
pop
orb
lds
mov
sahf
lret
inc
or
fdivs
stos
enter
xchg
divl
xor
pop
xchg
insl
push
cli
xchg
xchg
xchg
xlat
js
jmp
sbb
movb
ja
ror
ss
cltd
sub
push
sahf
icebp
lret
push
out
push
and
mov
cmp
lahf
cmp
mov
imul
dec
jl
cmp
sti
sbb
jecxz
sbb
mov
mov
into
lahf
xchg
xor
sub
inc
imul
cltd
repnz
jnp
lret
rolb
leave
xor
sub
fsubl
nop
sbb
inc
unpckhps
rorb
push
mov
adc
and
cmpl
cmc
cmpsb
ds
lcall
shr
xchg
pop
or
addb
cmp
je
lahf
pop
mov
test
pop
pop
jmp
test
pop
shll
dec
fisubs
or
pop
cmpsl
mov
jne
mov
xchg
repz
lret
sub
adc
lds
push
xchg
jmp
imul
ljmp
insb
xor
add
xor
test
setl
xchg
call
jle
stos
lret
pusha
stos
sbb
push
add
subb
lahf
stc
lods
ret
adc
sbb
sub
inc
dec
subb
and
lods
sub
mov
fidivl
cmc
js,pn
bnd
addl
mov
fiaddl
mov
dec
rorl
mov
jo
iret
outsl
popa
xchg
mov
cs
dec
mov
mov
sub
sbb
push
adc
sub
les
lahf
cmpsl
and
xor
dec
dec
subb
jno
pop
sub
sbb
enter
xchg
sub
shrl
mov
mov
cwtl
addr16
cmp
pop
xor
and
or
ljmp
sbb
push
icebp
out
imul
pop
gs
test
push
icebp
push
xchg
adc
jp
xchg
cli
loope
div
popa
sbb
or
cmp
out
flds
jae
mov
out
xor
loope
or
inc
insl
out
dec
and
pushl
push
push
adc
mov
xor
ljmp
jae
adc
pop
mov
jle
rorb
dec
dec
adc
xchg
and
jne
push
pop
fidivs
sahf
or
pop
sahf
fdivrl
and
loop
ds
add
inc
orb
mov
pop
mov
shlb
subb
mov
push
xlat
ljmp
mov
addr16
push
adc
mov
xor
mov
fdivs
mov
and
es
add
divb
cmpsb
fildll
and
leave
dec
pop
or
shl
lods
arpl
add
cmp
adc
mov
jnp
sub
ret
shrb
xchg
push
sub
xor
inc
pop
push
movsl
in
mov
mov
scas
pop
pop
mov
inc
ret
int
mov
and
fbstp
adc
lds
mov
push
fisubrs
fs
jg
pop
jb
loop
dec
sub
scas
xchg
sbb
inc
cmovae
sarb
cmc
lahf
negl
sbb
xchg
into
xlat
inc
aad
ljmp
and
add
xor
or
das
and
sub
sub
xchg
mov
or
sete
xchg
xchg
sub
sbb
sbb
inc
das
insl
adc
xchg
dec
scas
movsw
scas
and
arpl
or
jl
mov
pop
mov
andl
in
icebp
mov
notl
test
add
jae
pop
xchg
mov
das
jns
xchg
mov
jbe
push
andb
xchg
push
push
push
out
in
out
bound
cli
outsb
lret
ja
add
xor
sbb
fldl
push
test
pop
and
sbb
push
leave
push
rcl
lcall
sbb
push
xor
in
mov
hlt
loop
fwait
mov
ret
xchg
in
push
or
sbb
add
pop
mov
popa
andb
xchg
sti
stos
jecxz
repnz
int
outsb
mov
filds
mov
ret
pop
fstpt
cmpl
addr16
xor
ret
lahf
pushf
and
inc
dec
inc
repz
mov
or
stos
xor
jmp
mov
sbb
pop
shr
cmpsl
mov
inc
lcall
out
pop
sahf
mov
xor
inc
mov
xchg
jns
scas
jbe
cli
fistps
icebp
mov
lret
test
pushf
add
idivb
adc
or
pop
push
pop
ror
dec
bound
sbb
push
push
pop
xlat
nop
ficomps
push
scas
inc
push
mov
mov
adc
jmp
mov
jns
sarl
cld
enter
or
push
dec
adc
ja
mov
mov
mov
test
xlat
in
mov
js
jns
shlb
addr16
jae
hlt
int3
sbb
or
repz
sti
mov
mov
insl
mov
xchg
imul
test
stc
pop
sub
and
xchg
aas
xor
and
ret
cmp
adc
or
inc
ljmp
push
xor
ljmp
mov
and
out
xchg
xchg
mov
or
inc
xor
leave
add
push
jecxz
sub
dec
cli
add
fs
push
inc
push
cmp
movsb
lret
into
push
loop
cmp
sbb
inc
add
sub
dec
xorps
out
push
or
or
lahf
hlt
arpl
jae
call
out
leave
aam
adc
xchg
andl
inc
imul
xchg
outsb
jle
mov
push
aam
and
pop
in
inc
sbb
mov
sbb
aaa
ds
inc
orb
and
mov
jno
sbb
imull
mov
mov
push
add
mov
in
sti
jne
mov
adc
mov
ss
or
dec
sub
jns
aad
and
les
ret
pop
sbb
cmp
fisubrl
stc
scas
cmovl
stos
or
pop
sub
int
pop
push
sub
pop
sti
fisubs
xchg
scas
scas
rclb
imul
pop
lret
add
mov
jne
pushf
fdiv
xor
sbb
inc
and
imul
test
pop
pop
ja
push
mov
cmc
xchg
or
sbb
adc
movsb
inc
rcr
out
push
xor
add
test
fildl
daa
ljmp
int3
scas
das
or
pop
mov
mov
push
jl
mov
xor
add
fisubs
les
out
fnstcw
daa
loop
pop
fs
lea
push
and
or
and
mov
dec
gs
xor
mov
jg
mov
jne
in
cmpsl
fstpl
add
aad
shll
fdivrs
test
stc
mov
dec
fwait
mov
adc
mov
ret
daa
test
es
sub
mov
idivb
lock
cs
xor
push
sub
and
jns
push
lcall
pop
xlat
fcmovne
and
pop
mov
mov
jg
lods
sbb
imul
and
adc
mov
or
and
sti
sub
shrb
nop
mov
mov
push
jmp
jmp
push
and
cmp
cmp
scas
sahf
adc
lcall
pop
mov
and
pop
cwtl
out
daa
bound
mov
cmp
nop
push
mov
mov
add
mov
add
and
xor
cli
loop
sub
jnp
hlt
shll
pop
std
mov
dec
stc
adc
roll
aaa
daa
aad
cld
xchg
or
flds
jp
test
push
xchg
insb
mov
sub
in
arpl
push
das
cmp
imul
xor
orb
or
ret
pushf
mov
push
cmovo
stos
daa
adc
fs
add
dec
mov
cmp
jo
cmp
pop
mov
jne,pn
aaa
hlt
pop
pop
sahf
jmp
mulb
and
xor
mov
popa
sbb
jg
xchg
xor
bound
ds
dec
iret
ficoms
je
xchg
xchg
add
pushf
add
rol
or
adc
test
ljmp
pop
ljmp
dec
int3
cmp
cmpsl
mov
gs
cmovns
leave
sub
stos
fdiv
sub
mov
pop
data16
add
lods
int3
mov
inc
imul
repz
ljmp
mov
xchg
or
cmp
xchg
movsl
jge
mov
pushf
lahf
xor
lret
pushf
jbe
ficompl
ljmp
test
out
xchg
cmpsb
and
xor
xchg
push
or
inc
xor
icebp
push
icebp
cmp
add
mov
fwait
sbb
and
arpl
and
lods
int
imull
inc
push
ja
mov
and
sub
xorb
push
jle
mov
add
dec
pusha
mov
sbb
dec
jmp
xchg
daa
mov
xor
nop
jl
fs
xchg
mov
mov
sbb
cmp
xor
mov
mov
mov
push
pop
mov
xlat
daa
mov
es
mov
or
sarl
jne
mov
bnd
scas
imulb
ret
aad
outsb
mov
jp
sub
add
mov
scas
sbb
and
loopne
push
lods
mov
rorb
fisubrl
sub
push
or
fnsave
js
inc
pushf
or
pop
push
adc
mov
mov
cmp
xlat
mov
mov
sti
movsbl
mov
fxch
xchg
aas
scas
bound
jnp
mov
test
subl
test
in
dec
jnp
rorl
mov
mov
les
lret
aas
sub
jmp
mov
dec
js
lcall
mov
mov
mov
push
leave
ds
jnp
dec
fisubs
push
cmp
cmc
xor
cmp
sub
popf
in
push
ljmp
and
jns
stos
ljmp
xor
hlt
ja
mov
dec
sbb
xchg
adc
push
int
xchg
xchg
int
jbe
or
jmp
dec
es
cmpsb
mov
xor
setae
mov
mov
jb
mov
mov
fcomi
mov
loopne
jecxz
mov
fistl
imul
outsb
add
jl
push
pop
in
adc
bound
or
scas
push
sbb
loopne
pop
jne
jb
xchg
mov
adc
pop
gs
icebp
hlt
pop
or
jo
push
push
jns
mov
into
iret
xchg
xchg
test
and
data16
sub
jp
dec
xor
stos
std
or
mov
xor
ja
sbb
inc
add
pop
mov
mov
js
fisubl
lods
cmpsl
addl
ret
adc
sub
cmp
sbb
and
in
and
ret
test
inc
repz
hlt
decl
xor
and
iret
jae
push
and
fisttpll
sbb
aam
repz
xchg
enter
fcmovb
jmp
sub
sub
daa
xchg
adc
fcoml
fldt
cmp
pop
lcall
andb
mov
inc
mov
adc
inc
jns
rorb
jle
or
dec
divb
scas
xchg
shrl
in
test
sti
push
adcl
fnstenv
fdivrl
stc
std
scas
xchg
xor
stc
cmpsb
jnp
test
push
popa
jl
push
in
fisttps
lds
loop
nop
je
inc
sub
cmc
sub
mov
pop
clc
fisttps
lret
out
iret
jnp
adc
xlat
mov
push
and
sbb
pusha
cltd
mov
or
mov
or
and
insl
mov
fwait
pop
sub
sahf
imulb
add
or
xchg
cmp
sub
xchg
and
and
call
mov
fnstcw
jmp
and
adc
sub
daa
mov
arpl
sub
mov
sub
adc
push
jg
dec
adc
jnp
push
ss
adc
mov
ja
ja
ficomps
push
dec
test
stos
cwtl
enter
stos
xchg
adc
or
int
mov
jnp
push
push
adc
pop
loope
mov
scas
lock
jp
pop
arpl
in
xchg
nop
mov
mov
and
jp
lahf
add
stos
icebp
inc
and
das
dec
sub
leave
and
pop
loope
fwait
int
jecxz
cmp
mov
pop
ror
xor
movsl
cmpl
movsb
in
sarb
xchg
jno
test
repnz
pusha
adc
pop
js
int
jne
test
push
shll
cmp
jl
xchg
das
leave
fidivrl
cwtl
aaa
xor
inc
shrl
data16
cs
ljmp
outsl
mov
fnstenv
xorl
popl
pop
fcompl
popa
xor
stc
inc
movsb
stos
filds
daa
fcompp
mov
movsl
out
cmp
or
push
sub
jge
and
in
sti
inc
push
into
mov
in
lock
dec
xor
xchg
das
pushf
xchg
or
and
xchg
push
iret
cmpsb
mov
outsl
sbb
inc
insl
test
xor
cmp
notl
into
dec
mov
aas
jp
cld
fstps
or
mov
ret
push
pop
les
dec
inc
out
mov
mov
sub
fiadds
push
stos
jae
cld
loopne
inc
cltd
dec
lea
in
in
jp
adc
int3
inc
data16
in
pop
idivl
lret
inc
leave
or
ret
dec
dec
mov
inc
scas
mov
lds
test
push
les
fs
in
mov
xchg
cmpsb
outsb
shlb
push
jb
jns
clc
aam
ss
loope
scas
xchg
mov
adc
jg
inc
cmp
pop
test
pop
test
jecxz
iret
test
es
sbb
dec
jge
loop
lret
push
test
sti
push
cli
mov
dec
aam
cmp
jmp
mov
sti
push
je
cmpsb
cltd
jge
pop
mov
xor
inc
popf
movsb
cld
sbb
push
out
cmp
stos
daa
addr16
jmp
int3
sub
in
iret
test
adc
out
cmp
lea
loop
pop
mov
push
mov
mov
lret
loop
dec
fisubl
mov
xor
cmc
mov
outsb
lahf
push
and
pop
iret
in
les
pop
pop
adc
and
std
int3
ss
mov
sub
push
jno
pop
mov
fisttpll
in
mov
aam
mov
dec
mov
lahf
jns
add
pop
mov
aas
das
xor
xor
push
cmp
les
cmp
aaa
pop
and
out
fldenv
jo
jo
cmp
ret
sub
push
jl
fsts
inc
aam
inc
outsb
xor
repnz
ficompl
mov
and
or
xchg
jmp
jl
cmpsb
sbb
stc
stos
mov
test
mov
xor
pusha
rcll
in
inc
or
in
xchg
cli
ret
imul
pop
add
sub
push
into
dec
xchg
out
out
test
in
pop
fistl
popa
jb
and
xchg
mov
pop
jg
mov
mov
mov
xor
sti
sbb
ss
jl
je
sub
cwtl
push
jmp
scas
gs
dec
sbb
sbb
jns
fsts
xchg
js
add
outsl
loope
and
and
cmpsl
sub
xchg
xor
ss
loope
add
jns
pop
popa
or
xor
add
fwait
das
xchg
das
cmp
sub
out
gs
sbb
mov
lea
in
jbe
jnp
mov
sbbl
inc
lcall
inc
sbb
outsb
mov
pop
push
cmpsl
lock
rcrb
xor
or
dec
dec
dec
push
bound
les
addr16
sbb
xchg
inc
data16
mov
cmp
and
jb
ret
add
mov
movsl
fnsetpm(287
sbb
jb
push
mov
mov
arpl
paddusw
lret
out
cmp
or
outsl
cmp
xor
fcomps
movsb
out
fwait
imul
js
jne
addl
loope
or
outsb
fwait
fwait
lods
sbb
add
mov
xor
push
adc
cmpsb
test
aam
mov
and
into
push
xor
jne
cmpsb
les
sbb
dec
daa
or
or
push
inc
and
xor
adc
add
scas
xor
nop
into
cmp
cld
in
nop
dec
sub
xor
int3
aaa
sahf
push
dec
leave
lods
xchg
add
or
pop
cmp
jae
ret
mov
xchg
fsts
xor
cmp
lret
pushf
mov
mov
and
push
jg
hlt
mov
scas
or
jg
test
sub
pop
pop
popf
pop
pop
sti
cmp
and
push
in
and
inc
push
mov
lret
out
insl
cmp
daa
inc
inc
jge
push
fcmovnb
push
movsb
sbb
add
add
jno
int3
push
int3
repz
pop
or
mov
fninit
jl
fcmovnu
or
jmp
dec
jecxz
dec
push
sbb
mov
fcomi
add
push
cltd
cs
int3
inc
xadd
adc
aad
xchg
outsl
je
jg
mov
jbe
mov
dec
inc
lods
sub
mov
lcall
sub
fdiv
out
gs
sbb
sub
or
fwait
out
test
repz
stc
jle
cmp
mov
scas
movsl
pusha
adc
mov
leave
pop
sub
ljmp
xor
and
mov
xchg
xor
test
cld
xor
adc
mov
jecxz
cs
push
xchg
ret
xchg
outsl
arpl
xchg
lods
xchg
fildll
or
push
je
popa
jp
push
mov
mov
xorb
arpl
repz
sbb
mov
sti
movsl
or
aaa
sbb
mov
leave
jmp
xchg
xchg
cmpl
mov
dec
or
aad
sub
fsts
lret
adc
cmpsb
aas
mov
out
sbb
bound
ficompl
cmp
push
iret
aas
pop
mov
mov
stos
subl
mov
aam
std
xchg
out
mov
jne
xor
mov
and
jle
test
ljmp
jbe
cmp
test
sub
dec
inc
xor
roll
loop
xchg
imul
call
call
mov
mov
js
sbb
test
pop
dec
cmp
test
mov
add
push
movsl
sti
mov
mov
insl
mov
sub
ja
pop
push
adc
pushf
test
ss
add
xorl
jae
cmpsl
popa
cld
mov
push
dec
addr16
enter
xchg
sar
sub
push
stos
xchg
push
in
mov
push
scas
push
clc
movsl
cmp
jae
mov
clc
or
aaa
pop
aad
popa
scas
movsb
mov
jnp
jmp
arpl
add
mov
pop
push
jbe
sysenter
fimuls
add
or
sub
sbb
test
sbb
aas
int3
scas
or
sbb
jae
sub
xchg
icebp
mov
or
hlt
aad
sbb
cmp
mov
ds
xchg
mov
or
mov
inc
inc
xlat
mov
jle
pop
jmp
lods
jecxz
and
and
adc
fcoms
test
leave
das
jbe
popa
nop
es
push
mov
dec
pop
adc
jnp
in
push
add
in
lret
xchg
jle
sbb
jmp
movsb
add
orl
stc
popa
mov
jl
jne
data16
dec
popf
sbbl
in
jbe
cmp
movsb
push
or
add
mov
pop
movlpd
aaa
xchg
and
mov
std
push
popa
jnp
jb
and
lock
aas
data16
mov
pop
ds
ret
xchg
shl
xor
outsb
push
pop
outsl
repz
jne
fdiv
in
add
stos
jecxz
xchg
dec
shrb
or
add
cltd
pop
dec
lea
fstpt
negb
add
lock
xchg
or
and
pop
je
into
lahf
fidivrl
add
adc
adc
scas
sub
push
daa
lcall
scas
fwait
rol
push
mov
ret
dec
or
sub
adc
loop
mull
mov
cltd
push
sbb
outsl
int3
int3
pop
xor
jge
insl
fucom
dec
push
inc
inc
jbe
movb
pop
addl
inc
cmc
adc
ficoms
push
imul
add
mov
pop
outsb
pop
pop
xchg
cmp
aam
into
pop
cmp
sub
mov
mov
fs
clc
stos
or
push
test
mov
jle
mov
movsl
pop
sbb
lock
xchg
push
shll
repnz
dec
fnstsw
imul
dec
mov
adc
dec
pop
xchg
cld
test
cmp
aad
cmp
mov
nop
sbb
jecxz
test
cs
and
adc
mov
cmpsl
mov
fcmove
and
cmpsl
xor
out
mov
stc
inc
mov
sbb
mov
leave
or
sub
sbb
inc
mov
mov
xlat
push
dec
sbb
lcall
hlt
push
test
shll
es
jne
xchg
cli
jno
pxor
mov
das
std
lods
out
imul
int3
std
push
stos
xchg
pop
xlat
push
jne
cwtl
fdiv
into
pop
lret
adc
cmp
push
lahf
in
jl
push
rorl
fnstcw
push
into
mov
xor
stos
dec
cli
pop
and
sar
sub
test
stos
mov
jb
addb
mov
jbe
jle
ret
test
fcmovbe
mov
jle
xchg
pop
sub
jecxz
fwait
sub
cmpl
mov
pop
fxam
daa
and
cmp
jl
xchg
pop
mov
std
and
dec
mov
imul
hlt
inc
jg
push
jb
dec
int
dec
jno
mov
leave
jo
popf
dec
nop
outsl
stos
mov
subb
imul
xor
shlb
mov
xorb
pop
mov
pop
rcrl
xchg
cmp
inc
xor
add
cli
stos
add
dec
test
iret
jg
jne
mov
loop
pop
push
xchg
xorl
fstpt
dec
inc
mov
loope
pusha
dec
repz
jecxz
jp
stc
je
xchg
fnsave
addr16
sarb
pop
inc
sbb
xchg
mov
mov
rorl
int
sahf
xchg
pop
cmp
cld
and
mov
jae
or
xchg
xorl
ja
scas
push
xchg
mov
sbb
aas
sub
adc
lds
xor
ss
cltd
aad
stos
sbb
stos
jbe
dec
sub
and
sub
pop
jecxz
cmp
mov
je
into
mov
sahf
popf
mov
addl
dec
hlt
pusha
sbb
and
adc
inc
dec
pop
sbb
dec
leave
neg
mov
mov
fists
mov
rcll
shlb
xor
das
in
clc
icebp
cmp
cmp
dec
incb
inc
cli
pop
fldl
pop
sarl
sarb
popa
outsb
jne
fsubrl
jg
sub
fistps
xor
in
cmp
jg
jae
aaa
adc
in
mov
and
and
cmp
pop
imul
movsl
pushf
mov
jmp
pop
test
add
lcall
incb
mov
xor
mov
je
jp
add
sti
int
add
aad
dec
loope
adc
adc
jmp
mov
emms
cwtl
testb
cltd
xchg
xor
mov
pushf
mov
jp
push
mov
mov
mov
sbb
inc
sahf
mov
push
dec
adc
jge
cltd
shl
add
jns
ffreep
jbe
dec
out
mov
insb
adc
push
loop
fidivrl
mov
ret
mov
orb
out
xor
sbb
adc
pushf
xlat
testl
into
push
cli
inc
dec
cmc
dec
scas
das
dec
lods
or
and
je
add
xchg
xor
xor
call
dec
inc
ljmp
or
rclb
daa
xor
and
daa
les
mov
push
dec
mov
or
inc
das
push
dec
adc
or
pushf
or
cmp
adc
icebp
in
in
push
loope
fadds
add
aad
add
jge
lret
inc
out
jmp
mov
mov
push
pop
xchg
iret
clc
into
or
mov
jne
loope
or
rcrl
mov
aad
outsl
xchg
leave
cmp
repnz
das
pushf
push
ja
or
mov
fdivrp
lods
pop
xchg
loope
mov
xor
ljmp
pop
test
int
into
jge
jae
mov
add
adc
popf
mov
cmp
adc
out
and
mov
popa
cmp
cmpsb
sti
in
push
cmpsl
jl
movsl
into
fildl
shl
pushf
mov
inc
cmp
shrb
bound
iret
add
dec
xchg
push
nop
push
divb
stc
xchg
dec
push
xor
and
jbe
and
out
jnp
ret
sti
add
fcmove
inc
mov
into
test
movsb
and
mov
nop
into
cmpsb
lahf
inc
movsb
cmpb
fimuls
mov
mov
pushf
mov
mov
cwtl
mov
test
cmp
out
xor
xor
push
jl
out
pop
push
into
cltd
mov
add
std
pop
outsl
fsubp
xchg
jle
clc
xor
and
gs
in
jge
cmp
adc
test
xchg
mov
or
fisubrl
xor
jo
inc
test
xchg
add
js
testl
inc
mov
mov
popw
or
out
mov
inc
push
or
jno
mov
inc
jge
adc
orb
dec
mov
cmpsl
lcall
adc
mov
push
mov
out
xchg
adc
dec
arpl
inc
sarb
adc
mov
out
cwtl
sbb
into
and
jecxz
pop
jp
jae
outsb
cwtl
xchg
jae
sbb
movsb
xchg
scas
mov
lds
xor
rcrb
cmc
adc
outsl
cmp
cmp
mov
je
testb
mov
outsl
call
fnstcw
mov
jecxz
pop
shrl
ret
xor
dec
sub
in
fsubl
mov
imulb
lahf
push
cld
into
add
sub
sub
jne
pop
or
int
mov
mov
add
in
push
ss
xor
data16
cmc
mov
inc
mov
addr16
out
aam
stos
popf
push
das
ljmp
loopne
mulb
mov
cwtl
nopl
mov
ja
jp
push
lcall
xlat
aad
lds
cwtl
xchg
loope
hlt
stos
adc
sbb
adc
pop
inc
test
insb
sahf
movsl
aad
loop
sub
or
mov
jnp
aam
fldt
or
int
jno
stos
clc
pop
shlb
lods
push
or
lret
and
test
adcl
sub
inc
or
jo,pt
sbbb
sub
adc
jns
mov
loopne
push
pusha
push
add
pop
int
data16
outsb
push
jmp
stos
cmp
loop
inc
adc
jl
cltd
mov
add
imull
pop
and
rcll
es
std
adc
jnp
sahf
mov
gs
adc
test
incb
cmp
xchg
push
repz
rclb
jmp
jmp
cmpsl
push
cmp
dec
cltd
cmp
inc
or
push
out
sarb
and
and
fucomi
call
pusha
aam
pop
push
cld
xchg
subl
push
fwait
fiaddl
jo
jg
outsl
push
cvtps2pd
add
testb
push
and
jmp
mov
loope
jo
cs
icebp
stos
dec
imul
xor
mov
inc
add
xchg
dec
out
jmp
sub
enter
xor
jno
jle
out
bound
loop
dec
icebp
aaa
ljmp
dec
jns
mov
test
cmp
pop
cmpsb
jmp
enter
hlt
imul
leave
sbb
adc
pusha
xor
mov
dec
jge
inc
pushf
push
mov
adc
push
cmpsl
ret
out
fistl
jmp
jno
inc
cmpsb
loope
jae
test
inc
dec
pop
gs
insl
pop
fistpll
bound
popa
jmp
dec
js
mov
or
jmp
mov
test
fwait
fwait
add
push
mov
cmp
loop
mov
adc
out
pop
test
je
fs
int3
jnp
inc
xchg
xor
loope
movsl
rolb
pop
sahf
jp
jmp
in
or
cwtl
mov
add
in
and
test
out
jmp
push
hlt
jns
xor
jl
or
mov
xlat
mov
in
xchg
and
fnstcw
arpl
push
dec
inc
sarl
sbb
cmc
ss
xor
fstl
adc
loop
test
testl
scas
pop
lods
pop
xchg
shlb
sbb
lods
or
sub
xor
std
out
mov
jo
cmc
xor
push
push
fldenv
daa
cwtl
jns
push
mov
repz
mov
xchg
push
pop
jmp
fs
pop
mov
xor
aad
jmp
push
or
loope
shrb
xor
xchg
mov
and
popa
jns
jb
adc
out
testl
insb
xchg
adc
xchg
out
xchg
dec
ss
xchg
xchg
jne
aaa
fistpl
mov
fildl
lret
adc
dec
or
xchg
nop
int3
iret
add
lahf
adc
push
cwtl
jae
push
iret
into
mov
lods
es
xor
popf
lret
push
push
lret
xchg
adc
dec
stos
test
mov
in
ds
adc
pop
dec
push
xor
xchg
add
or
aam
lds
movsl
xchg
test
xchg
jp
push
xor
fldenv
movsl
inc
pop
je
in
dec
cli
xchg
mov
dec
insb
and
hlt
add
sbb
xorl
es
es
mov
inc
jne
push
lock
das
scas
aam
je
leave
mov
mov
add
lock
adc
mov
inc
jg
cmp
daa
fldt
adc
inc
xchg
mov
out
jmp
nop
andl
add
popa
cmp
popf
mov
lods
xor
pusha
clc
cmp
gs
clc
test
or
sbb
cmp
dec
test
pop
mov
mov
lahf
xchg
mov
fwait
xchg
sbb
add
cli
inc
sbb
or
insb
cld
xor
test
cmp
outsb
out
popf
cmc
int3
push
fdivrs
fidivrs
lds
stos
divl
mov
add
mov
mov
adc
repz
rcll
lea
out
sub
add
cltd
xor
movsl
out
sub
jmp
lods
in
fwait
sbb
ret
inc
sbb
aaa
lret
popf
pop
inc
into
nop
imul
inc
xchg
sti
jno
mov
mov
mov
or
inc
pop
jno
xor
lret
or
mov
xchg
adc
dec
or
popf
shrb
mov
and
pop
mov
mov
lcall
idivl
ja
loopne
inc
and
sub
push
jbe
jecxz
adc
ret
cmp
fiadds
add
test
cmp
gs
or
insl
clc
pop
mov
sbb
mov
aaa
push
and
cmp
mov
adc
imul
dec
push
mov
jbe
xchg
mov
rol
cmp
sub
inc
cmpsl
jne
xchg
hlt
jbe
sti
inc
orb
mov
repz
test
sbb
lods
int
pop
pop
out
das
and
lea
add
mov
push
sti
jge
imul
ljmp
aas
xchg
xor
rcl
xor
test
xlat
xchg
cli
add
xor
lcall
in
dec
push
in
pop
cmp
mov
pop
idivl
out
xchg
jno
cmp
inc
pushf
fidivs
in
pop
jbe
gs
icebp
insb
divb
pop
adc
aaa
mov
movb
add
and
test
adc
xor
movsl
pop
int3
arpl
xor
clc
scas
fsubl
or
int
mov
mov
test
cmp
and
xorb
xchg
push
das
lret
cmc
addb
std
bound
in
xchg
sbb
shrb
mov
sub
mov
mov
les
mov
mov
push
inc
in
jne
and
sub
mov
jp
inc
jne
aas
pop
push
jle
jo
call
dec
mov
pop
es
das
mov
in
mov
adc
in
adc
lods
push
ss
or
sub
das
inc
lock
pop
nop
xchg
ljmp
mov
sahf
cmp
push
push
daa
pop
mov
mov
xchg
mov
ds
mov
add
aaa
es
shlb
sub
cmp
shll
mov
in
adc
mov
push
in
xorl
and
negb
pop
cltd
in
lret
and
shr
fwait
pop
icebp
xchg
mov
add
sbb
mov
and
fxch
jo
lret
std
dec
dec
dec
lret
lret
push
fwait
in
cmp
mov
fucom
leave
jge
aas
out
pop
sub
ja
jae
outsl
repnz
sbb
out
jno
arpl
add
dec
imul
add
fs
mov
icebp
ja
mov
pushf
mov
xor
fsts
movsl
test
and
dec
mov
divl
pop
arpl
and
movsb
popl
jne
call
mov
mov
scas
inc
dec
cltd
xchg
fwait
cmp
or
cmpsl
cmp
pop
xchg
icebp
jmp
idivl
xor
mov
jb
xchg
ljmp
mov
mov
dec
push
out
mov
mov
add
arpl
decl
lock
test
insb
add
out
inc
pop
pushf
push
mov
xor
inc
sub
icebp
add
dec
mov
cmc
mov
fisubrl
sub
adc
enter
test
mov
inc
lods
xchg
or
dec
fisttpl
pushf
mov
jg
mov
in
popf
movsb
neg
mov
jnp
cmpsl
hlt
cmp
sahf
fcoml
jnp
mov
adc
mov
sub
imul
push
adcl
incb
sbbb
dec
pop
jnp
ss
in
fnstsw
fnsave
test
aaa
add
mov
jns
jg
cmp
pop
cmp
mov
push
hlt
fcoml
xor
imul
gs
xlat
push
mov
push
adc
daa
out
mov
mov
scas
jae
jmp
mov
mov
lcall
cld
push
je
leave
cmp
xchg
int3
popf
loop
cmp
outsl
mov
cmp
dec
cmp
rcl
push
mov
inc
mov
fadds
mov
mov
push
mov
push
sub
fsubs
je
pop
imul
mov
and
pop
fistps
cmp
jb
or
leave
sub
pop
xchg
push
inc
popf
xor
leave
or
es
fwait
mov
mov
fs
sub
call
xchg
inc
dec
pop
aas
inc
mov
dec
mov
mov
mov
enter
inc
mov
fdivrs
jnp
mov
aad
cmp
movsb
sub
and
push
mov
outsb
shrl
sub
xchg
push
shr
mov
mov
subb
cmp
pop
sub
scas
push
add
adcl
mov
jno
adc
sub
lea
stos
addb
jle
push
out
xchg
imul
outsb
dec
sbb
add
mov
jl
or
inc
adc
dec
sbb
repnz
sbb
push
and
push
xlat
inc
lods
xchg
add
dec
cmp
loopne
jge
iret
pop
pop
in
mov
jp
mov
push
jns
clc
sub
data16
stos
inc
test
push
jl
xor
in
mov
add
std
ret
iret
fs
sub
cltd
outsb
push
mov
and
mov
xchg
xor
inc
sbb
aam
stos
jge
imul
add
pop
shrb
sbb
cmp
lret
push
pop
push
ljmp
mov
adc
arpl
movsb
call
mov
cwtl
arpl
sbb
xchg
ja
and
jle
jns
mov
mov
aam
pop
mov
fists
iret
scas
mov
bound
and
loope
arpl
hlt
mov
or
nop
out
mov
mov
sbb
sub
loop
adc
mov
cmp
cwtl
aas
out
mov
jo
dec
cwtl
inc
ret
lcall
adc
or
or
cmp
jg
lcall
std
add
repz
and
add
ror
in
adc
xchg
sbb
cmp
dec
loop
lret
jg
mov
mov
adc
cs
inc
mov
movsb
sbb
add
in
jns
inc
mov
mov
dec
jne
inc
push
out
inc
xchg
int3
dec
mov
push
jnp
lods
lods
jecxz
mov
cli
inc
add
push
inc
mov
pop
fadds
adc
mov
pop
sbb
and
pusha
out
cmp
sub
cmpsl
or
push
shll
icebp
push
pop
push
cmpsb
dec
or
fdivl
sbb
sti
mov
pop
xchg
xor
stc
adc
dec
sub
pop
in
lcall
xchg
pop
xchg
jl
adc
sub
jnp
xor
pop
jo
xor
sbb
jo
mov
movsb
gs
sti
fsubr
xchg
into
das
mov
cli
cs
sbb
loope
dec
adc
out
dec
mov
and
loopne
mov
xor
lock
pusha
mov
jecxz
dec
ss
ss
sbbb
in
push
and
push
iret
pushf
cmp
fdivrl
movsb
mov
rcrb
loope
jg
jge
or
shll
test
lcall
cwtl
cmpb
add
push
cltd
xchg
scas
ret
fnstcw
je
xlat
lahf
lods
call
cmpsl
pop
aas
sti
jbe
cwtl
xchg
arpl
jge
mov
sbb
movsb
les
nop
in
dec
lcall
int3
xchg
xchg
jo
test
loopne
mov
xchg
cwtl
add
inc
pop
xchg
mov
mov
push
dec
js
mov
inc
cmpsl
movsb
push
fwait
add
push
into
xchg
inc
insl
icebp
mov
and
sub
icebp
add
xor
aaa
mov
andl
test
mov
inc
and
aas
leave
xlat
pop
in
mov
aad
jg,pt
outsl
insl
fcompp
mov
and
jb
imul
mov
cs
sub
mov
scas
aas
xor
lods
dec
dec
bound
test
push
mov
mov
jl
jg
xchg
test
outsl
cmpsb
sbb
repnz
pusha
mov
sti
je
fsub
test
sbb
pop
mov
add
imul
loopne
std
std
xor
push
insb
inc
scas
mov
sub
frstor
cwtl
lods
imul
andb
pop
bound
mov
pusha
test
outsb
or
dec
cmpsl
or
enter
lds
test
sub
add
loop
dec
insl
std
inc
push
jb
stos
cli
mov
mov
jno
das
mov
mov
lea
push
adc
pop
mov
pop
ja
clc
out
xor
pusha
push
hlt
push
mov
push
out
rorl
and
vmptrst
mov
pop
fidivl
lods
inc
mov
movsb
sub
mov
subb
and
mov
daa
fildl
std
int3
push
jb
cmp
cltd
stos
jae
mov
les
test
pop
dec
xchg
cmc
sub
adc
pop
in
into
adc
pop
shll
repnz
sub
out
fwait
xchg
jae
jo
mov
mov
mov
cli
idivl
inc
push
mov
nop
popf
sbb
stc
mov
add
into
xchg
adc
test
inc
in
sbb
enter
repz
and
mov
sbb
inc
mov
pop
in
xchg
testl
scas
lret
pushf
xchg
je
cmpsb
rcl
adcl
mov
sarb
es
in
cli
xchg
dec
sbb
inc
pop
pop
inc
call
jo
add
test
jbe
stos
adc
jmp
into
inc
cmpsl
jge
pop
push
scas
push
int
xor
gs
xchg
and
pop
add
xchg
insl
in
pusha
iret
mov
mov
inc
mov
roll
jne
ljmp
cmpsb
jo
hlt
or
cli
in
dec
and
dec
adc
sbb
test
iret
lea
sub
xor
inc
outsl
jl
fdivp
jns
push
in
lea
adc
push
repnz
aad
insb
mov
pop
xor
sbb
popa
add
sti
and
mov
inc
mov
dec
cmc
dec
insl
out
xor
adc
inc
inc
call
jle
inc
push
inc
mov
outsl
or
push
pop
dec
jno
std
cli
add
mov
or
pop
inc
and
call
mov
jl
sub
or
mov
and
pop
imul
push
scas
adc
lods
aaa
push
xchg
pop
push
cmp
jno
cmp
mov
pushf
out
inc
lahf
xlat
push
std
sub
test
inc
jns
inc
int
fisubrs
adc
and
shrb
xchg
in
enter
cmp
rorl
mov
and
enter
jge
dec
test
pop
mov
dec
adc
arpl
fwait
push
jnp
inc
jns
ss
push
sub
inc
xor
sahf
ljmp
fisubrs
loopne
fsubrs
or
fcompl
add
pop
ljmp
or
or
mov
out
daa
and
pop
pop
out
lock
imul
xor
inc
dec
hlt
xchg
push
test
pop
scas
ds
push
stc
xchg
xchg
js
add
or
cmc
scas
sbb
sbb
int3
cmp
jno
cmpsl
mov
ret
xchg
test
xor
cmpl
cmp
push
and
repz
mov
push
es
fnstcw
rolb
mov
es
dec
int3
leave
xchg
nop
push
scas
loop
mov
sbb
imul
movsb
jle
fbld
push
jecxz
pushf
out
fwait
or
lock
repz
cwtl
pushf
movsb
xchg
cmp
bound
cmpsl
mov
cltd
adc
shrl
aam
adc
scas
inc
dec
rcrb
addr16
rorl
jo
sbb
add
mov
fdivl
fidivs
loop
repz
mull
sbb
ds
lock
shlb
adc
ds
sbb
jg
mov
and
push
xor
xchg
lahf
scas
dec
lods
pop
mov
dec
rcr
js
sbb
int
out
leave
jl
addr16
xor
inc
pop
dec
push
mov
and
add
stos
mov
push
dec
mov
lock
pop
push
inc
je
xchg
xchg
cli
xor
sbb
jnp
scas
mov
push
subl
inc
test
mov
cmp
sbb
test
sbb
mov
in
movb
out
xchg
lods
ret
xchg
push
push
iret
pop
xchg
mov
or
out
add
int
sub
leave
lret
jnp
pop
insl
out
add
fdivl
pop
sbb
fldl
xchg
in
insl
dec
pop
nop
scas
and
mov
mov
push
es
cli
aad
dec
inc
cmp
lock
fnsetpm(287
push
mov
movsb
cs
and
dec
shll
sar
add
pop
dec
xacquire
mov
outsb
rcrb
lcall
adc
or
add
int
lret
sbb
mov
mov
jp
pop
xchg
jge
push
xchg
adc
pop
mov
mov
test
sub
dec
je
call
inc
mov
dec
cmpsl
scas
sahf
mov
pop
push
bound
sarl
mov
mov
insl
ja
pop
aaa
bswap
cmc
cmp
js
insb
xchg
pop
fst
cmpsb
and
fdivs
mov
sbb
imul
push
push
mov
mov
xchg
dec
push
xor
sub
jp
pop
insl
and
mov
js
enter
dec
jp
push
dec
mov
cld
in
mov
testl
sub
and
jl
xor
gs
notb
jecxz
inc
fsts
add
std
or
lods
mov
daa
movsl
mov
dec
out
mov
jmp
mov
or
pop
and
or
in
jge
or
mov
test
lret
inc
sub
push
xchg
cmc
repnz
push
int
jmp
mov
fs
mov
into
test
popa
and
clc
ficoml
outsl
xchg
jg
xor
inc
stc
in
ret
jns
das
pop
adc
dec
leave
cmp
push
gs
daa
shr
out
adc
cmpb
and
adc
or
xchg
push
sahf
int3
into
gs
or
push
stos
arpl
cmp
or
xor
int3
add
out
flds
fidivl
cli
cmp
push
adc
sbb
jo
bound
mov
jnp,pt
sbb
sahf
pop
add
adc
inc
inc
push
xor
mov
jg
sbb
xor
push
sub
outsb
lret
daa
js
and
pusha
xchg
xchg
xchg
xchg
mov
xor
ficoms
inc
icebp
mov
and
inc
in
sbb
mov
pop
or
fimuls
pop
mov
shl
add
and
pop
mov
mov
ret
ss
test
cmp
repz
inc
dec
popa
imull
outsl
adc
add
test
lahf
rcrl
loopne
push
jge
add
data16
pop
and
push
fcmovnb
sub
add
dec
adc
mov
add
lahf
orb
xchg
fldcw
loopne
ds
mov
xchg
add
sbb
aad
push
fmull
jle
in
dec
mov
cld
cmpsb
mov
push
push
cld
cmc
push
idiv
cmp
mov
outsl
cmp
out
cltd
add
fs
int3
push
xchg
fldcw
testb
sbbl
cmp
push
adc
inc
fimull
add
cmp
popf
inc
cli
fsubs
out
xor
xchg
xor
aas
xchg
ss
sbb
sarb
mov
xor
pop
bound
lods
shl
push
das
jnp
pop
rcl
push
push
mov
ds
in
negl
xchg
rcrl
push
les
xor
fs
add
mov
mov
jns
das
mov
cmc
js
sub
es
in
jecxz
pop
aad
pop
cmp
xchg
jne
lock
adc
jns
jge
inc
pop
lods
fwait
loop
dec
xchg
adcb
pusha
call
je
mov
lahf
mov
jl
frndint
cltd
dec
cwtl
int
and
xchg
test
or
dec
fwait
test
cmpsl
fmuls
rorl
fistps
add
or
pop
xchg
xlat
pop
cmp
push
lock
mov
ljmp
push
dec
mov
insb
test
adc
push
add
pop
or
ret
out
ss
and
jmp
repnz
add
or
frstor
or
cmpsb
ss
xchg
jg
xor
loop
dec
push
push
fsubs
mov
mov
xor
ds
pop
push
ret
lret
mov
stc
push
xor
pop
lret
mov
mov
add
loope
or
adc
or
mov
aad
pop
out
jb
cmp
mov
jge
mov
icebp
push
mov
xchg
sti
inc
push
imul
fwait
sub
out
popa
rcll
in
movsl
cmc
push
lret
push
sub
jae
mov
lods
pop
mov
xchg
xor
push
test
or
ret
mov
dec
jecxz
popa
aam
mov
pop
aaa
xor
sbb
inc
cmpl
nop
push
fwait
pop
inc
subb
nop
es
adc
add
mov
sub
and
inc
daa
mov
inc
mov
sbb
mov
mov
push
lret
xor
mov
xchg
cmpb
mov
push
in
pusha
pop
and
pop
pop
movd
add
ss
mov
cmp
push
cmc
xor
lahf
push
push
mov
out
les
adc
pop
add
dec
jo
dec
mov
dec
mov
xlat
lods
mov
sbb
mov
dec
call
cmpl
pop
mov
orb
xchg
imul
pop
push
pop
loop
sbb
lea
add
lods
ljmp
sbb
movsb
xchg
mov
xchg
je
sub
mov
lods
in
jae
fwait
repz
dec
add
mov
insb
and
daa
adc
lcall
andl
jmp
jg
pop
and
adc
cmp
pop
jmp
aad
test
lret
or
ficompl
popa
jmp
add
inc
adc
sub
dec
test
insl
or
xchg
inc
das
test
sbb
outsb
dec
mov
addr16
repnz
mov
dec
fisubs
aaa
cmp
dec
mov
dec
sub
xor
movsl
fstpt
outsl
adc
add
out
sbb
gs
lods
xlat
push
and
and
mov
push
clc
test
xor
ss
adc
add
inc
fs
das
pop
std
ljmp
idiv
mov
test
les
int
loopne
sahf
fdivr
in
movsb
test
cmpsl
shr
sbb
jl
lods
aad
inc
movd
rcrb
pop
es
sub
or
into
negb
stos
dec
add
sbb
fs
sub
jo
xlat
jmp
mov
and
jne
cmp
mov
testl
sbb
push
clc
push
adc
jmp
mov
scas
pop
adc
ret
mov
dec
sarb
shrb
mov
mov
arpl
pop
or
add
pop
idivl
jne
push
in
shrb
push
test
cli
and
ds
fldenv
cmp
xor
cmp
in
stos
fisubrl
std
icebp
mov
jle
daa
cs
int3
ret
xchg
arpl
jg
adc
sub
pmaddwd
clc
outsb
roll
jne
and
shrb
adc
lahf
loopne
inc
hlt
andl
add
repz
mov
xchg
enter
ds
aaa
sbb
loop
add
shrb
sub
xchg
sbb
mov
push
test
shr
adcb
add
and
daa
sub
int3
cmp
and
insb
sbb
int3
or
mov
outsb
scas
repz
sbb
hlt
loopne
pop
testb
js
mov
inc
call
out
adc
rorl
mov
xlat
outsl
sbbl
std
cmp
lret
pop
push
add
xlat
pop
dec
stos
xchg
dec
xchg
mov
lods
pop
cmpsb
mov
xor
in
jb
ficomps
push
dec
push
dec
aas
push
mov
push
movsb
jae
mov
stc
xchg
mov
fsub
cli
inc
rcll
iret
mov
mov
loopne
std
repz
clc
add
ret
jl
rcrb
mov
es
jge
or
cmpsl
cmpsb
cli
add
enter
int3
loopne
cmp
bound
fwait
pop
std
lahf
repnz
movsb
icebp
dec
insb
sub
dec
ror
mov
mov
aaa
clc
xor
clc
mov
js
repnz
pop
push
or
test
repz
movsl
fst
lcall
mov
icebp
pop
out
dec
dec
or
or
enter
mov
aaa
inc
inc
push
loop
and
jl
ret
mov
jnp
ljmp
and
xor
mov
jbe
push
js
jne
sub
or
int
stos
lock
out
pop
imul
shl
pusha
mov
push
cmp
mov
out
adc
clc
pop
fbstp
inc
inc
movsb
push
mov
cltd
xor
stos
xor
pop
pop
outsl
xchg
scas
and
or
jnp
xchg
lea
paddw
clc
fdivl
mov
xchg
cmp
repnz
push
in
mov
nop
mov
dec
sub
insb
imul
ljmp
mov
sub
xor
std
sub
sbb
xor
out
jb
das
xchg
stos
mov
dec
inc
fcmovnu
pop
roll
fstpt
cmp
subl
jb
cmp
push
ret
imul
in
shr
ss
dec
loope
sahf
mov
ds
faddl
xchg
ficoms
stos
fs
fcomps
loope
xor
push
xor
arpl
cwtl
adc
jmp
fwait
gs
mov
push
ror
pop
xor
inc
push
int
loop
incb
gs
frstor
test
cmp
or
pop
mov
mov
pop
xchg
sysexit
and
mov
pop
dec
xchg
lahf
mov
stc
cmpsl
push
rcrl
mov
dec
jo
xchg
mov
cmp
xchg
sbb
sbb
mov
xor
rcrb
popa
add
push
push
lret
dec
ds
adc
icebp
not
mov
lea
stos
xchg
and
xchg
xor
mov
mov
pop
push
push
clc
insb
pop
mov
fldt
enter
xor
imul
xchg
or
inc
add
je
and
mov
adc
pushf
call
roll
mov
xchg
adc
sti
out
and
icebp
lods
cwtl
out
cmovbe
mov
fwait
push
jbe
stos
aam
pop
popl
xchg
xchg
test
pop
pushf
cmpsb
cmp
xor
inc
mov
cmp
cltd
fcmovbe
cltd
inc
aas
inc
ds
mov
mov
fsubs
dec
subl
mov
push
push
cmp
test
lahf
mov
test
dec
in
xor
and
out
xlat
mov
enter
mov
scas
mov
lods
lea
outsl
decb
int3
scas
lods
or
sub
dec
xor
dec
nop
in
add
outsb
mov
pushf
fimuls
mov
andb
push
jmp
popf
pop
and
cs
pop
dec
push
mov
and
mov
lea
pop
mov
dec
cli
rol
fisttpl
pop
fidivs
pop
sbb
aas
stos
and
adc
xchg
jecxz
and
dec
repz
insb
adc
sbb
xor
adc
adc
inc
outsb
dec
mov
aam
ret
aad
andb
sti
dec
fs
gs
sub
ja
pop
mov
jmp
out
pop
push
push
xchg
in
scas
outsl
push
jg
or
pop
call
lahf
mov
cmp
pop
pop
fadds
pop
aaa
mov
out
cld
mov
cmpsl
and
push
sbb
lret
add
jge
jmp
je
add
mov
popa
push
adc
insl
dec
xor
jg
add
sub
dec
addl
pop
cmc
mov
scas
arpl
ja
mov
jnp
push
ret
shl
inc
sahf
faddl
icebp
add
mov
test
fsts
cwtl
dec
out
je
test
into
and
repnz
aaa
inc
sub
scas
pop
test
mov
rorl
push
ss
sub
mov
aam
mov
sub
mov
popf
xchg
aad
and
icebp
and
test
jge
or
sub
fucompp
mov
loope
sub
add
mov
xchg
leave
bound
lods
fwait
sub
movsb
sub
jae
pop
lahf
pop
outsb
cmp
call
lcall
pop
popa
push
mov
mov
je
mov
adc
or
pop
lea
jg
push
lcall
shlb
mov
dec
push
int3
pushf
xor
lea
jb
push
xor
add
mov
xchg
jb
out
gs
add
adc
xor
in
push
and
rcrl
mov
test
sbb
mov
mov
cmc
lahf
bound
and
imul
aam
xor
ljmp
cmp
push
aad
shll
jno
andb
xor
push
push
rcl
cmpsb
fucom
sahf
scas
push
push
inc
sbb
loopne
mov
dec
adc
lods
call
inc
leave
test
ficoml
dec
lea
pop
dec
into
sarb
insl
imulb
test
and
adc
repz
vcvtpd2dq
int3
loope
xchg
pop
pop
fsubs
int
push
cmp
mov
adc
cld
adc
popf
xor
leave
ljmp
gs
fcmove
sub
arpl
push
testl
repz
fs
adcb
sub
xor
out
imul
jl
sub
adc
xor
repnz
xor
neg
ret
outsb
ss
push
or
lcall
andb
add
test
push
mov
dec
xor
xchg
xor
pop
loope
loop
mov
sbb
dec
add
xchg
adc
outsb
jle
fwait
clc
pop
xchg
sbb
mov
jg
loope
outsl
mov
lods
pushf
enter
xlat
sub
mov
test
lods
call
stc
push
xor
ficoml
mov
test
push
cld
in
dec
dec
add
sarl
stos
stos
mov
pushf
add
addl
lahf
aad
xor
stos
out
in
and
in
and
and
or
cmp
xor
psllw
lea
sub
and
fdivs
lods
or
shl
mov
or
lret
mov
das
flds
xchg
add
scas
dec
xor
inc
lods
dec
add
pushf
xchg
pop
add
out
iret
in
int3
and
xchg
and
rcrb
mov
sti
push
adc
pop
dec
cmpsl
xor
xchg
and
add
jmp
lcall
adc
xchg
or
mov
ja
movsb
sub
rcrb
shlb
mov
push
outsb
mov
xor
call
cli
insl
ljmp
frstor
dec
cmp
sarl
mov
shlb
rol
test
sub
call
lcall
xchg
mov
dec
ret
aaa
mov
mov
ja
popfw
leave
pushf
and
sbb
xor
fistpll
cmp
fistpll
cmp
sbb
rcll
cmp
mov
mov
xor
xor
push
or
adcl
cmpsl
scas
ret
scas
jne
push
and
jns
cwtl
sub
test
test
repnz
and
and
popf
push
imul
xchg
mul
cltd
pop
in
cmp
or
shlb
fst
or
mov
lret
push
cmpsb
xchg
mov
cmp
jo
mov
adc
popf
and
seto
rolb
push
xor
std
gs
roll
iret
mov
cmpl
sub
pop
fucomip
jnp
xchg
dec
mov
inc
dec
mov
rolb
shlb
adc
dec
pushf
cmpsb
ret
fnsave
repnz
sti
stos
inc
sti
in
jne
enter
cmp
fcoms
ret
mov
push
dec
sbb
mov
aas
xchg
shr
gs
ljmp
pop
ds
xor
out
fs
pushf
ljmp
xchg
mov
data16
iret
xor
outsl
or
mov
negl
psubsb
pop
loope
xor
daa
mov
movsl
fs
movsl
push
movsl
ja
adc
testb
push
es
jl
mov
mov
inc
mov
or
pusha
subb
out
mov
xbegin
out
lahf
cmp
ss
out
pop
push
push
sub
and
cwtl
and
les
fdivrl
mov
or
inc
ficoms
and
inc
movsb
jp
xchg
mov
or
out
mov
cmp
or
add
push
jmp
inc
jo
daa
dec
xchg
sub
add
dec
sbb
and
dec
addb
mov
iret
xor
sbb
cmpsb
imul
rolb
negl
jnp
cwtl
jns
leave
fwait
pushf
mov
jl
jbe
inc
testb
mov
test
mov
dec
out
es
in
pop
adc
add
roll
leave
ds
mov
dec
cmove
jns
and
stos
ret
es
pusha
psubsw
inc
push
push
xor
mov
xor
mov
rcll
mov
in
mov
jbe
cmp
fnstenv
insb
ret
jns
sub
inc
jp
mov
test
das
jle
jle
lahf
test
bound
scas
pop
clc
mov
pop
pop
jmp
fnstcw
push
in
outsl
pop
jno
je
and
cmp
mov
push
jno
adc
sub
outsl
xorb
fbstp
in
adc
scas
lret
fs
adc
jl
mov
pop
mov
mov
ficomps
cs
sti
mov
mov
cmpsb
clc
inc
inc
mov
fs
mov
lcall
pop
inc
add
aam
adc
pusha
clc
lcall
cld
add
int
mov
pop
clc
mov
les
insl
xchg
test
ja
outsl
in
call
sbb
clc
xlat
inc
scas
stos
lret
sub
cmp
sarl
aad
sbb
cmpsb
jmp
repz
mov
mov
adc
inc
in
mov
xor
jge
enter
add
loopne
clc
cmp
add
clc
sub
sub
fnsave
loopne
inc
push
dec
hlt
sbb
out
popf
pushf
in
xlat
xchg
xchg
dec
das
lcall
scas
xchg
xchg
push
aad
fwait
and
insb
mov
addr16
sbb
sub
lahf
mov
inc
sti
cld
call
scas
out
std
add
fisttpll
inc
fsts
sbb
pusha
jg
jbe
xlat
mov
pop
hlt
lods
adc
cmp
clc
addr16
cmpsl
and
enter
shl
ret
push
fisubrl
jb
add
idivl
lock
xchg
popa
lods
push
int3
fsubrs
lea
mov
es
sbb
inc
mov
push
call
lahf
sub
cmp
push
mov
mov
je
mov
sub
mov
sub
mov
stos
mov
nop
jmp
mov
push
lret
pop
jl
repz
into
fcmovbe
sub
add
jne
popa
mov
cld
xchg
sub
imul
ret
sbb
and
arpl
xor
clc
pop
jle
jmp
xor
aad
inc
std
insb
in
in
popa
mov
int
das
or
sbb
in
lahf
cmp
in
jmp
mov
jmp
into
aaa
mov
dec
std
pop
int
xchg
or
jo
sahf
rcll
adc
jbe
lods
sub
push
sbb
scas
push
sbb
jle
xor
lock
mov
pop
inc
cmpb
bound
cmc
mov
push
mov
inc
je
popf
lahf
add
sbb
lahf
in
adc
stos
or
pop
hlt
jp
sub
xchg
or
pushf
xchg
sbb
lds
and
nop
popf
jl
xchg
lcall
cmp
and
xlat
jmp
dec
enter
mov
mov
into
cmp
shl
repnz
xchg
rclb
scas
mov
gs
lock
push
xchg
jp
in
loopne
fidivrs
dec
mov
call
adc
inc
sbb
cmp
lcall
push
mov
jbe
xchg
stos
mov
enter
enter
sahf
push
js
dec
fdivl
add
jns
arpl
stos
adc
xor
cmp
jb
frstor
pop
sub
stos
das
test
nop
inc
insl
lahf
push
pop
testb
jg
into
xor
sbb
pop
pop
int3
addb
out
cmc
mov
popf
xchg
push
sbb
repnz
pop
push
adc
lret
push
popw
xchg
fadd
movsb
inc
fwait
cmp
sub
jne
gs
mov
shlb
data16
lods
aam
pop
xchg
ret
pop
xor
test
dec
rorb
dec
adc
bound
iret
fwait
adc
ret
adc
sbbb
add
int3
cmp
pop
filds
cmp
fst
inc
sub
sub
push
cld
mov
adc
nop
lea
cltd
dec
xlat
pop
int3
hlt
mov
popf
push
pop
sbb
and
cld
fidivl
inc
add
jb
and
and
dec
dec
sub
inc
ljmp
cli
test
sbb
adc
inc
xor
adc
lret
inc
bound
ss
xchg
mov
pop
xor
es
jbe
or
int
add
repz
test
test
sahf
sub
sub
and
inc
lods
daa
jge
or
int
push
xchg
loope,pt
lcall
fisubl
mov
mov
add
inc
test
pusha
imul
out
repnz
xor
jecxz
add
cli
xchg
adc
jg
cmpsb
in
fldenv
mov
dec
sub
into
cmp
add
daa
cmp
pop
ljmp
gs
arpl
scas
dec
shll
xor
mov
fs
mov
or
jo
mov
popa
adc
jmp
movsb
cmp
divb
xlat
adc
pop
imul
mov
mov
incb
test
arpl
aas
std
imul
in
push
and
pop
adc
xchg
fsubr
lahf
test
les
stc
mov
fidivl
in
jge
popf
xor
cmp
or
jbe
neg
aad
lods
imul
push
scas
push
test
cld
add
xchg
clc
pusha
pop
xchg
iret
pusha
cmc
scas
out
lcall
aam
inc
jl
dec
test
xchg
lea
mov
push
popl
test
cmpsb
sbb
imul
jns
push
mov
arpl
iret
popf
les
jne
outsb
aas
push
mov
cmc
adc
das
fimuls
mov
sbb
adc
lret
mov
mov
loop
mov
add
inc
divb
cmp
xchg
mov
pop
cmp
cmp
pop
and
jp
push
dec
pop
mov
or
jne
push
aam
push
mov
mov
xor
dec
xor
iret
jmp
add
add
rorl
aam
lcall
mov
sbb
and
call
or
jbe
push
cs
cmpsb
mov
loope
sbb
cmp
test
test
xorl
mov
in
sti
popf
in
aad
mov
jecxz
cmp
mov
push
push
sbb
out
repnz
push
test
aad
movsl
les
aaa
cs
cmp
mov
mov
mov
popa
fsubrs
or
mov
lock
xlat
push
mov
imul
add
dec
add
out
iret
adc
pop
roll
clc
push
mov
mov
push
push
scas
addr16
addr16
pop
les
jge
adc
dec
jnp
add
dec
in
leave
jl
inc
sahf
or
loopne
cld
icebp
aaa
int
fsts
sbb
xchg
dec
call
stos
scas
stc
sub
mov
add
mov
cltd
movsl
sbb
flds
adc
testb
movb
dec
jns
sub
dec
inc
cwtl
adc
rolb
lods
mov
pop
jmp
xor
pop
mov
mov
fidivrs
test
jecxz
adc
pop
loop
out
inc
sbb
sub
push
imul
cld
inc
or
sahf
cmp
adc
out
lods
jno
int
lea
dec
aam
jnp
jne
pop
sbb
push
fisubrl
repnz
push
xor
jecxz
daa
adc
pop
pop
add
jno
fistps
shll
xor
loopne
shrb
add
testb
hlt
dec
pop
pusha
pushf
and
in
mov
mov
inc
jl
xor
mov
fwait
dec
cmp
test
or
push
int
fucomp
mov
cwtl
sbbb
out
push
sbb
dec
test
loop
jmp
pushf
inc
scas
xchg
inc
or
out
push
fdivp
jmp
inc
sahf
sahf
test
xlat
out
mov
jp
sub
gs
andnps
cltd
and
mov
std
das
sbb
pop
sub
out
mov
fcmove
fcomip
insb
lods
and
hlt
jp
xor
mov
ucomiss
cmp
xor
stos
lods
xor
jecxz
cmp
mov
dec
push
push
xor
ljmp
and
js
scas
pop
repz
mov
xchg
adc
jns
and
inc
jnp
add
sub
je
jge
jecxz
or
xchg
shrb
out
push
jne
mov
loopne
ret
leave
adc
aam
loopne
inc
jnp
sub
push
cmpsl
inc
dec
adc
cltd
xor
lcall
mov
hlt
fbstp
nop
push
jle
jmp
test
jbe
enter
test
jno
pushf
std
jns
add
jno
fcmovb
test
mov
and
das
xchg
pushf
jbe
roll
sbb
inc
shlb
and
fdivrl
imul
pop
adc
sub
mov
jl
add
shll
mov
aaa
pop
ret
mov
out
mov
pop
mov
std
movsl
stc
sbb
mov
mov
mov
jae
fsubrl
push
jnp
push
add
cmc
jno
dec
mov
mov
out
aad
in
rclb
loopne
data16
ret
cmp
daa
imul
xchg
jb
add
add
dec
leave
inc
xchg
lahf
cmp
sarb
and
fcomps
adc
mov
and
push
lahf
jle
das
cmpsb
ljmp
test
or
pop
nop
outsl
mov
jbe
mov
cmp
xchg
mov
loope
xor
ss
out
xor
int3
in
aas
dec
mov
mov
sub
test
loope
in
les
iret
xor
inc
pop
sub
mov
jmp
lret
mov
mov
shlb
and
aad
mov
and
cmp
imulb
aaa
fs
sbbl
pop
push
jb
fcoml
bound
shrb
xor
int
nop
aam
or
xchg
xchg
sub
movsb
push
jg
add
mov
out
loopne
and
fucomi
sbbb
jns
insl
push
cmc
or
sub
mov
or
pushf
lret
loop
stc
xor
pop
push
mov
pop
stc
xchg
inc
filds
int3
imul
mov
fcoml
je
add
jl
negl
aas
into
iret
les
lahf
leave
mov
or
scas
andl
mov
cli
mov
push
addr16
or
xor
pop
iret
iret
xchg
xchg
sub
add
sub
xor
in
add
xchg
pop
orl
xchg
ret
int
lods
stc
mov
jnp
add
and
mov
inc
sahf
leave
cmp
mov
jno
xchg
lret
in
xchg
repnz
sbb
mov
idivb
les
push
jnp
loop
dec
or
nop
adc
sub
leave
pop
call
cmp
sub
sub
faddl
jl
es
and
adc
mov
mov
clc
sub
add
xchg
aas
jo
dec
xlat
pop
in
cmp
js
aad
mov
repz
jne
lret
adc
in
add
das
bound
in
jo
ds
out
and
mov
fidivl
int
jne
adc
add
test
mov
lahf
clc
lcall
xor
out
mov
fsubr
fcoml
jnp
jno
dec
shrb
xor
iret
mov
fstl
inc
xchg
xor
sub
inc
mov
dec
pop
xor
int
aaa
cmpl
ljmp
or
rcr
xchg
pop
lods
cmpsb
scas
in
and
mov
sahf
or
fnstsw
inc
push
mov
lcall
adcl
notl
push
sbb
cwtl
jge
push
int3
test
push
cmp
lods
push
mov
mov
pop
out
dec
dec
pop
xor
mov
push
test
mov
mov
aad
inc
cld
mov
sbb
shr
or
lret
shrb
movsl
in
lock
cmp
into
lods
repnz
push
ja
test
xor
data16
inc
js
imul
test
pop
mov
pop
mov
int
mov
ficoms
loopne
cmp
stos
sarb
fnstsw
orb
lods
mov
ret
xchg
jne
lret
movsb
into
sbb
mov
out
aaa
movsl
cs
jne
xchg
aas
scas
mov
mov
dec
and
mov
pop
imul
fisubl
out
xchg
cmc
sbb
out
adc
add
sbb
or
jmp
jns
cmpsl
hlt
leave
and
js
adc
into
gs
and
fists
cmp
test
test
xor
mov
cs
cltd
addr16
daa
mov
cld
repnz
aam
cmp
pusha
out
pushf
or
mov
sbb
xchg
push
cld
or
popa
stc
xchg
fstpt
mov
mov
cwtl
xor
xor
cli
lret
push
pop
mov
mov
mov
incl
xor
rcrl
incl
mov
mov
ret
mov
mov
repz
pop
mov
mov
cli
xor
adc
stos
lret
test
sbb
dec
nop
push
push
stc
lock
ret
pop
fwait
in
cli
xchg
mov
xor
inc
or
sbbl
sbb
je
repnz
pop
cwtl
loope
jne
cmpxchg
inc
je
bound
adc
lret
adc
enter
mov
cld
arpl
and
jecxz
ret
cmp
jmp
adc
lods
mov
inc
repz
xor
and
into
inc
jmp
jae
icebp
popf
pusha
adc
jl
lock
mov
rcl
in
push
dec
pusha
testb
inc
push
nop
repnz
flds
mov
scas
cmc
int
lahf
mov
mov
pop
jmp
adc
out
leave
mov
cwtl
popf
jge
pusha
sub
cmp
movsl
test
lahf
aad
xor
fists
push
repz
pop
dec
scas
inc
ror
xor
cmp
xchg
dec
cmpsl
popf
int3
es
jecxz
js
mov
insb
push
push
lods
sub
push
jo
arpl
lods
and
movsl
xchg
in
and
and
mov
mov
add
mov
aaa
cmp
cmp
or
add
int
fwait
jl
jecxz
popf
mov
push
enter
mov
push
aas
push
sbb
icebp
mov
inc
fstpl
jecxz
dec
std
aaa
sub
fnsave
fdivl
mov
xor
xchg
dec
lock
jnp
sbb
les
fnstsw
inc
push
adc
add
and
sahf
lds
mov
bound
enter
test
mov
inc
sbb
cmpsb
lea
addr16
lret
popf
lock
or
push
sub
push
jp
jg
jne
cmp
xchg
ret
data16
pop
imul
mov
cli
push
stos
sub
push
out
stos
inc
pop
push
inc
in
addb
icebp
xor
pop
sbb
pop
add
push
push
fsts
sbb
movsl
mov
lea
and
jo
cmpsb
data16
mov
cmc
lds
popf
lret
lods
or
mov
ss
xchg
or
jo
pop
add
or
push
shll
lea
out
fildl
insl
xor
cmc
insl
xchg
js
dec
mov
mov
dec
daa
cmp
sbb
dec
bswap
inc
mov
fldenv
push
gs
loop
jmp
lds
out
ret
inc
scas
idiv
pushf
lcall
sbb
mov
inc
cmp
xor
jle
mov
ds
or
jle
jo
clc
daa
dec
push
sub
xchg
push
scas
addr16
mov
test
cltd
inc
and
cli
in
stos
repz
lea
pushf
jae
shlb
int3
cld
outsl
ljmp
ja
push
out
or
cmp
adc
nop
popf
mov
cmp
frstpm(287
inc
push
mov
mov
inc
inc
xchg
add
adc
and
cmpsb
sahf
jmp
lds
sbb
adc
out
sub
cmp
inc
xor
pop
pushf
movsb
pop
jo
or
loope
inc
je
sub
test
add
mov
inc
add
int
repz
dec
in
cld
neg
mov
test
sub
rorb
and
dec
pop
sub
adcb
lcall
mov
push
aaa
sti
add
sahf
lods
xlat
sti
sbb
push
rcr
mov
dec
dec
aas
mov
ljmp
out
push
ljmp
sbb
adc
jle
add
xchg
push
fiadds
jae
mov
ds
lret
sub
mov
leave
pop
xchg
jle
xchg
xor
scas
pop
fwait
and
sbb
arpl
pushf
stc
sbb
jge
outsl
pop
push
pop
mov
xchg
xlat
bound
pop
sub
add
fiadds
push
push
inc
mov
mov
inc
cmpsb
push
push
jle
pop
divb
push
std
mov
xchg
fs
lret
lret
dec
addr16
lahf
dec
add
mov
loope
fwait
sub
jl
iret
jns
xchg
popa
lahf
shll
or
aas
lret
nop
cltd
js
pop
xchg
ss
fchs
or
mov
outsl
sub
push
out
sbb
mov
lods
lret
jae
xchg
mov
inc
xchg
inc
in
out
aas
or
xor
or
popa
popa
lea
push
pop
daa
js
sbb
cmp
scas
inc
mov
dec
jo
shll
fidivrl
std
xor
pop
jbe
roll
push
faddl
shrb
mov
pushf
adc
pop
gs
les
cmp
sti
adc
dec
imul
daa
fnstsw
enter
or
out
out
cmp
addr16
cltd
jp
adc
movb
mov
in
daa
fnstcw
add
lret
push
and
fistps
adc
pop
jle
sahf
jo
sub
mov
fldl
std
mov
shrl
rorl
mov
mov
sub
stos
xchg
or
loope
mov
adc
out
cltd
mov
sarl
xor
sbb
push
add
insb
sarb
pop
pop
cmpl
sub
and
movl
test
data16
xchg
addl
pushf
fnstsw
out
mov
xor
test
daa
cmp
out
test
hlt
inc
pop
dec
nop
xchg
shrb
mov
inc
push
fcmovnb
bound
testb
lret
not
nop
andl
mov
hlt
imul
mov
xor
cwtl
push
pop
scas
lds
shl
fwait
push
push
sbb
xor
rol
lea
mov
cltd
fiaddl
push
cmp
mov
fcomp
outsl
add
lret
sub
hlt
sub
pop
arpl
mov
xor
mov
jp
sub
addl
sub
add
test
xor
in
rcrb
xor
fistpl
push
gs
jnp
lods
sbb
loope
mov
adc
ja
mov
dec
pop
push
loop
and
mov
jnp
sbb
mov
mov
sub
cltd
or
mov
imul
ljmp
rcrb
lcall
decl
jbe
pop
add
cmpsb
add
add
mov
jle
iret
imul
cmp
pop
jmp
xor
xchg
scas
and
lds
aam
notb
and
sub
sar
aad
sbb
out
add
mov
push
xchg
cmp
fs
adc
out
ja
inc
outsl
xor
lods
push
cmp
jo
cmp
movsl
cmp
add
popf
push
lds
mov
pop
mov
pop
ror
cmpsb
or
sbb
xlat
mov
leave
mov
int3
js
dec
adcl
insb
jnp
or
or
inc
inc
jb
outsb
into
xchg
fadds
pushl
in
mov
push
je
add
sub
mov
les
inc
xor
push
mov
adc
cmp
loope
sahf
es
sahf
add
xchg
inc
add
jae
push
or
add
outsb
rcl
test
dec
inc
jp
iret
inc
pop
jbe
enter
test
mov
das
rcr
mov
mov
inc
test
shrl
jmp
sahf
mov
jmp
pop
adc
loope
or
cmp
push
xor
adc
imul
test
loop
sti
pop
stc
or
mov
es
and
out
pop
out
or
mov
pop
mov
push
shll
aas
iret
scas
cli
sub
or
ja
int
test
mov
cld
stos
jmp
movl
fidivs
cwtl
xchg
mov
ds
int3
xor
daa
adc
xchg
fidivs
fdivrs
outsl
arpl
lods
add
add
dec
adc
jmp
push
adc
pushf
iret
and
jae
adc
adc
push
f2xm1
ret
dec
mov
fwait
mov
adc
sbb
fadds
cmp
rcrl
mov
js
sub
popf
out
paddd
pop
lahf
sahf
push
cmp
push
mov
fisubl
mov
mov
mov
push
cmp
sahf
mov
rorb
repnz
call
push
push
jecxz
rcll
mov
cltd
popf
sbb
mov
fcoml
fwait
movsl
lret
sub
cmp
push
dec
adc
lcall
in
outsb
ret
xchg
rorl
and
out
add
cmc
dec
pop
cwtl
lahf
cmpsl
pop
add
les
mov
loope
add
aas
jp
add
gs
mov
lret
fildl
fwait
das
jb
data16
jmp
or
and
dec
sub
adc
cmp
int
cmp
fldl2t
ss
xor
shr
mov
mov
fstps
sbb
movsl
adc
test
leave
clc
test
pushf
cmp
sti
push
push
inc
cmp
pop
aaa
push
int3
aas
push
inc
and
getsec
shr
push
add
in
lods
in
xchg
mov
sub
mov
ficompl
cmp
sarl
mov
xchg
adc
adc
daa
adc
in
jg
mov
insb
in
and
push
pop
ficompl
inc
or
mov
push
pop
mov
enter
xchg
nop
and
adc
cs
and
add
outsl
addr16
notb
jns
sub
mov
push
jecxz
arpl
loop
adc
dec
sahf
or
mov
dec
jae
int
adc
inc
or
addl
sub
mov
jae
xchg
insl
js
jns
jbe
in
out
push
xchg
das
push
fidivs
aam
adc
dec
push
out
xor
stos
mov
inc
sbb
jl
dec
pop
ret
imul
jb
in
lods
jecxz
fmuls
inc
mov
ret
dec
mov
sub
sahf
mov
outsl
jbe
cmp
fstpt
pushw
inc
fisubrl
mov
stc
in
pop
sub
add
xor
xor
xor
fs
and
xchg
pop
push
mov
das
mov
into
jl
xlat
push
xchg
sub
mov
mov
in
jecxz
daa
in
inc
jmp
std
pushf
cmc
sbb
lea
mov
push
pop
and
clc
test
daa
pop
fs
dec
push
stos
cmp
dec
insb
ss
push
lds
inc
sar
jp
popf
hlt
jno
add
jns
in
cmp
adc
lock
out
leave
inc
and
xchg
inc
cmp
mov
shrl
andb
icebp
outsl
jae
lcall
clc
inc
jb
fidivs
push
add
bound
test
in
lods
pop
into
aaa
or
mov
sti
int3
jo
and
into
into
jg
jae
insb
cmp
cmpsl
faddl
aam
lret
sub
lock
sbb
cwtl
sbb
test
cmp
pop
jbe
mov
mov
add
or
and
mov
xor
jge
clc
rcl
inc
loope
dec
mov
test
sbb
cmp
test
mov
ret
insl
fwait
mov
xchg
insb
sbb
pop
push
shl
mov
mov
lahf
cmp
inc
jmp
jb
outsl
call
jb
add
push
or
stos
lods
loope
outsl
mov
or
roll
scas
lods
inc
pushf
rcr
adc
ret
clc
push
mov
mov
sub
jno
mov
inc
inc
mov
stos
hlt
mov
jns
xchg
jae
mov
xor
mov
insb
sti
cwtl
das
adc
call
notb
mov
in
push
or
popf
dec
adc
push
stos
mov
mov
lahf
cmpsb
mov
pusha
push
or
mov
movsl
mov
and
lock
mull
mov
xor
fwait
cmpb
es
lahf
add
addr16
sbb
xchg
lea
pop
sbb
test
jne
sbb
outsb
inc
mov
jnp
test
push
cltd
mov
mov
pop
mov
jae
int
repz
int
insl
adc
loope
sub
inc
cmp
ror
inc
aas
sarl
loop
mov
outsl
or
push
pusha
cmpb
lods
pop
stos
mov
adc
pop
mov
mov
dec
incb
xchg
fistps
je
rcr
gs
mov
xor
jno
ret
mov
in
sub
xchg
xchg
push
pop
lods
or
mov
mov
inc
jge
inc
adc
mov
cmp
dec
ljmp
lcall
daa
insl
cmp
and
gs
sub
pop
and
repnz
lahf
cli
aas
inc
loope
iret
push
mov
das
xor
mov
add
or
dec
add
add
mov
cmp
daa
fldl
filds
movsl
clc
jne
scas
xchg
pop
lods
insl
jmp
add
fisubl
js
fsubrl
xlat
arpl
sbb
clc
pop
in
and
ljmp
js
test
adc
mov
in
adcb
dec
mov
lods
div
repz
clc
dec
pop
cld
jne
cs
xor
pop
xchg
rorl
inc
add
test
js
or
fiaddl
add
cmpsl
icebp
push
cwtl
shrb
mov
push
jne
mov
lret
xorb
insl
fisttpl
add
scas
inc
jge
and
sbb
rclb
out
pop
lock
in
inc
insl
add
add
xlat
push
pop
test
add
mov
dec
pop
sbb
and
add
ss
scas
mov
mov
ffree
push
mov
pushf
inc
mov
mov
orl
mov
insb
xor
pop
test
hlt
add
lahf
pop
dec
and
cmp
push
push
xlat
jp
xchg
adc
cmp
mov
jbe
cmpb
lds
mov
sahf
sbb
mov
loope
sbb
mov
lcall
mov
lds
mov
out
je
jno
lods
adc
in
inc
fsubr
push
and
subl
repnz
push
inc
ret
aam
mov
add
jl
lods
inc
lcall
push
push
push
adc
sahf
sub
out
jmp
mov
insb
push
test
jns
mov
inc
cmc
fnstsw
add
and
mov
in
sbb
mov
push
inc
sbb
inc
idivb
sub
xchg
adc
mov
add
pushf
mov
xchg
inc
outsb
fiaddl
inc
test
push
cmp
clc
clc
rep
popa
adc
add
pop
jmp
bound
ljmp
stc
mov
nop
adc
fistpl
pusha
cmp
cmp
cltd
mov
jle
mov
pop
xchg
dec
cltd
add
jecxz
adc
push
push
push
js
dec
adcb
shlb
dec
sub
gs
repnz
push
fimuls
dec
sbb
or
xchg
mov
sub
test
ja
movsb
push
jno
loopne
and
clc
mov
adc
jp
ret
jp
es
sbb
int3
pushf
cmp
or
lods
mov
and
mov
sbb
jb
mov
outsb
pop
cmc
mov
ja
out
jmp
das
andl
mov
repnz
lock
subb
xchg
xchg
mov
lcall
xlat
dec
ljmp
repz
or
lock
or
xlat
mov
loopne
pop
cli
mov
dec
movsl
jo
dec
and
scas
adc
xor
jb
and
sub
xchg
in
inc
xor
in
mov
sbb
stos
lods
adc
jno
fs
scas
dec
es
mov
in
out
test
inc
je
int
sub
push
jmp
mov
lods
and
adc
mov
xchg
es
out
iret
fwait
int
sbb
add
inc
stos
mov
push
sbb
jmp
aad
push
mov
int
lret
push
int3
subl
pop
icebp
pusha
aad
add
fdivrl
cmp
add
pusha
es
mov
pop
jle
mov
or
dec
out
add
loope
push
xchg
cmp
addr16
inc
push
das
leave
xor
aas
pop
je
mov
out
aaa
enter
jecxz
xor
test
sub
out
pop
into
fldenv
push
pushf
daa
movsb
out
cld
in
div
and
cmpsb
dec
xor
or
jge
pop
add
pop
mov
jb
dec
dec
out
pop
shl
mov
cmp
mov
sbb
insl
imul
cmp
mov
pop
sub
test
push
call
dec
jae
clc
xchg
sub
jns
sub
lcall
lret
or
imul
mov
mov
adc
mov
inc
das
inc
ja
cwtl
lods
jmp
adc
rorl
shr
lahf
mov
adc
jne
or
mov
repnz
jecxz
adc
les
rclb
pop
and
add
xrelease
into
orl
inc
lds
adc
outsb
shl
add
sarb
push
pop
mov
rcrb
out
aam
enter
ret
mov
das
jae
jne
jno
push
push
mov
pop
and
iret
dec
es
adcl
pop
sahf
aaa
pop
stos
sbb
jle
mov
outsl
push
mov
pop
or
outsb
fidivl
ret
cmp
and
xor
ljmp
xchg
pop
cmp
cmp
ret
xchg
xchg
test
xor
xchg
push
cs
xor
adc
ljmp
cmp
cmp
xor
ja
add
or
sub
mov
popa
fadds
ja
xor
out
movsl
dec
fsub
daa
aas
andl
or
add
daa
xor
movsl
sahf
xor
jl
xchg
adcl
stos
div
shlb
mov
push
lods
adc
aad
or
in
into
jge
test
movb
loope
xchg
push
stc
fcomp
popf
pushf
inc
mov
lret
pushf
shll
aam
imul
out
cmpps
movsb
push
mov
mov
lcall
in
data16
popf
or
imul
icebp
jno
cmp
push
jge
or
dec
push
push
inc
add
pop
mov
pop
addr16
dec
cs
or
call
int
lea
sub
sub
jnp
dec
pop
or
pop
repnz
and
mov
imul
loopne
movsb
push
mov
jecxz
jp
lret
xor
mov
mov
xchg
push
cmpsb
shll
push
jmp
daa
test
call
cltd
out
dec
mov
jne
jecxz
xchg
inc
cmp
cmpsb
mov
xorb
stos
faddp
cwtl
pop
lahf
inc
push
cmc
out
cmp
mov
movsb
mov
and
mov
popf
mov
les
into
xor
daa
or
clc
adc
faddl
loopne
push
sbb
mov
sbb
cmp
int
pop
jae
lcall
in
sub
xor
imul
dec
arpl
mov
fisttps
cmp
rorl
scas
xor
fldl
int3
sahf
out
mov
inc
jb
add
sarb
mov
gs
fdivs
add
sbb
imulb
test
lods
pushf
sahf
add
mov
xchg
push
out
add
adc
popf
jmp
cld
mov
call
dec
sub
out
ss
mov
mov
or
sbbl
in
test
hlt
xchg
push
cmp
and
inc
mov
pop
popa
movsb
fcoms
fisubs
add
mov
dec
jmp
push
add
xor
add
sub
sti
adc
adc
dec
push
cmpb
pop
imul
fiadds
cld
mov
gs
dec
loope
adc
and
data16
int3
sahf
enter
mov
out
cmp
shrb
and
jne
fmuls
aas
push
pushf
es
outsl
xchg
mov
xchg
aad
stos
movsl
fisubrs
mov
imul
call
mov
sbb
int
and
lods
sahf
test
fs
scas
jecxz
imul
cli
dec
pushf
add
in
adc
call
ljmp
adc
jnp
sahf
sub
or
ret
or
js
outsl
icebp
shll
inc
xchg
cmpb
movsb
popa
xchg
mov
popf
out
mov
jmp
sbb
stos
iret
insb
push
mov
xor
mov
pop
in
les
dec
lock
out
inc
inc
cmp
mov
mov
outsl
cwtl
jecxz
mov
cwtl
mov
xlat
push
adc
cmp
xor
dec
xchg
pushf
add
pop
cmc
sbb
xlat
mov
int3
cmp
ds
cmp
hlt
sbb
xor
gs
cli
cwtl
pop
out
mov
sbb
jmp
inc
mov
cmp
imul
nop
lret
dec
or
addr16
movsb
or
mov
jecxz
hlt
and
pop
dec
add
shr
mov
jle
les
cmp
fwait
aad
pop
adc
fcomps
mov
scas
pop
or
sti
cwtl
adc
test
or
adc
loop
aad
cmp
dec
xchg
pop
jmp
outsb
inc
aaa
fdivs
sub
add
mov
dec
fimuls
push
ja
adc
mov
dec
pusha
outsl
sbb
out
mov
push
dec
insl
add
lds
mov
stos
cmp
aam
js
xor
movsb
inc
push
fs
jle
xchg
adc
mov
outsb
aaa
xchg
push
in
mov
imul
sahf
cmp
inc
aam
pop
dec
shrb
add
adc
jo
and
test
pop
add
xor
je
and
inc
push
jns
lret
mov
jnp
push
sub
and
jle
clc
pop
aad
out
jg
mov
pop
cmp
imul
lret
and
subb
insb
or
icebp
push
mov
mov
jnp
add
bound
test
pop
lods
outsb
add
cmpsb
inc
mov
fbld
dec
lods
pop
and
xchg
jp
sub
push
leave
pop
popf
in
xor
pop
fwait
cmpb
push
fs
xchg
fwait
xchg
jmp
mov
and
xchg
dec
into
ljmp
sub
mov
inc
movsb
sbb
pop
pop
sahf
pop
jne
or
cld
cmc
out
ja
call
lds
dec
sbb
scas
dec
or
xor
lea
pop
or
mov
js
test
lock
inc
outsb
jnp
es
xor
jmp
popf
pop
jo
out
or
xor
push
imul
or
rcrb
dec
add
mov
dec
cmp
mov
mov
jns
lea
fmul
sbb
jge
test
and
movsb
imul
push
cmp
int3
fwait
add
jge
mov
pop
add
ss
repz
movsb
xor
insl
pop
adc
push
xor
stc
jne
sub
xchg
gs
repnz
jnp
ds
shl
test
mov
jns
aas
dec
sahf
cmp
dec
fdivrs
aad
lmsw
mov
xor
fnsave
scas
mov
mov
cmp
jnp
cmp
push
iret
repz
jno
mov
aam
lock
insl
out
lds
nop
movsl
sbb
pop
adc
lret
cwtl
lahf
subl
xorb
inc
jecxz
jmp
popa
pop
js
cmp
mov
repnz
repz
mov
lock
pushf
sbbl
pop
sbb
insb
jno
int
xchg
push
dec
ror
andb
enter
add
jae
clc
fstl
dec
lock
adc
incb
mov
lret
jle
dec
push
xchg
repnz
push
fadd
jnp
rclb
dec
push
mov
testb
imul
lcall
leave
cmp
mov
int3
test
sub
cmp
pop
add
inc
push
xchg
jne
outsb
mov
sbb
and
xchg
push
jg
test
jmp
dec
jae
fimull
iret
add
and
xor
iret
cltd
ds
mov
sub
mov
mov
sub
sti
in
negl
repnz
mov
sahf
jnp
jecxz
mov
inc
mov
and
pop
add
pop
dec
adc
dec
mov
jne
int3
int
js
lock
lret
inc
push
mov
xor
movsb
stos
in
into
shll
scas
iret
dec
and
pushf
ret
nop
stc
in
sbb
cmp
sub
mulb
cmp
mov
jno
xor
in
push
or
adc
stos
aaa
xchg
cld
test
outsb
movsl
xchg
loope
xchg
repnz
pop
lret
mov
and
cmp
insb
inc
jle
les
dec
fmull
jb
js
inc
mov
jae
fldcw
lahf
out
jl
in
push
or
hlt
mulb
jg
aaa
int3
int3
push
repnz
jle
pop
daa
out
push
sub
bndldx
movsl
xor
jbe
imull
repz
andl
mov
sahf
mov
xor
arpl
cmp
add
stc
jne
pop
js
jle
xor
leave
inc
out
iret
push
movsl
inc
jnp
enter
out
test
xlat
or
cld
cs
push
addr16
push
outsl
out
and
mov
cmp
mov
aad
fmull
inc
mov
pop
mov
lock
mov
test
xor
pusha
pop
jns
jmp
sub
push
sbbl
mov
xchg
fildl
or
mov
aas
pop
gs
fnstsw
adc
stos
loope
xorps
popa
fldenv
popf
lea
and
sub
data16
jb
outsl
out
stos
ficompl
orl
mov
ret
arpl
aam
mov
sub
pusha
add
dec
enter
fbld
mov
imull
test
fnstcw
jne
or
jne
or
movsl
pusha
dec
notb
adc
stc
dec
je
xchg
lock
xor
stos
jae
mov
jns
dec
cmp
js
incb
inc
dec
xchg
push
sbb
aam
mov
add
xchg
mov
adc
out
shll
push
stos
and
sti
and
mov
cmp
out
int3
ret
outsb
xor
sub
dec
scas
stos
or
call
sbb
jge
iret
mov
fsubr
bound
scas
jne
daa
popf
pusha
loop
mov
ret
mov
add
pop
sahf
mov
repnz
adcl
ds
dec
test
mov
dec
inc
ficomps
mov
mull
das
mov
pop
imul
pop
add
repnz
loop
dec
sbb
jecxz
adc
popa
add
jbe
add
fwait
loopne
out
mov
insb
out
lds
loopne
test
jbe
or
arpl
mov
push
insb
arpl
aas
call
inc
xchg
lea
pop
testb
into
and
pop
idivb
dec
xor
sub
pop
arpl
call
jge
sbb
das
pushf
iret
mov
or
jb
inc
paddd
push
shlb
sub
lock
push
jg
cld
pop
inc
loopne
adc
idivb
xor
dec
add
std
push
int3
ret
jb
btc
mov
and
cmp
fs
cld
and
pop
lock
cmpl
ds
or
clc
ret
mov
cs
addr16
mov
add
lret
xchg
mov
jecxz
jmp
inc
in
pop
hlt
or
or
mov
jbe
adc
out
cmp
loop
lahf
push
mov
cmpsb
mov
jmp
repz
imul
test
dec
in
orb
cmp
pop
push
add
jae
inc
sbb
fcoms
popf
or
cmp
faddp
repz
cmp
or
pushf
xchg
sti
int
jno
mov
pop
xor
mov
xlat
test
add
std
cwtl
mov
loope
data16
mov
adc
push
push
mov
imul
cs
sbb
bound
cld
push
mov
mov
ss
xor
cmp
sbb
push
cmp
das
hlt
xor
xchg
movsb
inc
xchg
out
add
inc
and
xor
roll
insl
lds
sti
xor
cwtl
mov
jns
jge
sub
lods
frndint
cmp
adc
cmp
jecxz
xchg
fcomps
out
mov
iret
pusha
cmpsb
hlt
xchg
popa
hlt
insl
pop
cmp
and
pop
flds
fmull
xor
in
scas
sbb
shll
pop
stc
dec
mov
aaa
dec
cmp
ret
push
sti
push
rorl
pop
sahf
adcl
xchg
shr
movsl
cmp
gs
cwtl
in
push
jae
mov
mov
fdivrl
adc
dec
xor
insl
or
inc
or
cmp
cli
outsl
es
jmp
cli
mov
dec
or
cmp
adc
fsubp
out
pusha
jno
add
sbb
rolb
adc
leave
hlt
cmp
inc
stc
jb
xchg
mov
int3
mov
call
les
pushf
nop
jl
mov
xchg
pusha
test
scas
push
pop
lods
mov
insb
and
out
scas
sub
or
push
inc
add
cmp
aas
jns
sbb
psadbw
testl
push
sbb
int3
aas
add
xchg
clc
popf
test
pop
jae
inc
cmp
lahf
dec
in
xor
std
jb
add
data16
dec
sub
pop
bound
dec
jae
das
push
imul
adc
hlt
dec
adc
in
ret
fisttpll
in
jle
lcall
xor
mov
mov
dec
jo
mov
cwtl
lods
lret
movsb
add
mov
test
hlt
dec
stc
jle
mov
dec
jl
sbb
inc
ja
push
lahf
pop
lods
pop
jo
pop
cmpsl
jmp
mov
dec
aam
push
xchg
inc
outsb
das
in
cmp
movb
mov
mov
pop
dec
stos
scas
jno
orl
mov
push
out
jge
sbbl
and
pop
test
inc
cmp
movsl
cmp
push
fwait
in
sub
ljmp
mov
insl
mov
xor
bound
mov
out
fwait
pusha
aaa
cmp
aas
jnp
dec
jno
fwait
outsl
mov
lret
dec
xor
stc
rcll
imul
mov
data16
inc
rcll
jmp
fisttpl
mov
arpl
dec
xlat
cmpsb
mov
push
lock
cmc
cmpsb
xchg
fists
sbb
in
mov
or
repnz
ljmp
dec
dec
lock
xchg
imul
cltd
cmp
stos
fisubrs
adc
adc
dec
push
ss
ret
leave
and
imul
pop
mov
xchg
idivl
sbb
mov
shrl
dec
adc
sbb
cltd
mov
and
pop
or
jmp
sahf
add
sub
push
and
or
push
push
cmpl
push
push
lock
mov
sbb
cmc
rorl
fstpl
adc
loopne
adc
push
ret
int3
and
cmpsb
push
mov
cmpsb
cmpsb
dec
jnp
dec
imul
out
repz
loop
frstor
or
sahf
cmc
and
test
divl
xchg
les
rorb
ljmp
shl
out
movsl
xchg
push
stos
inc
and
ret
pop
sub
mov
mull
pop
cmpsl
mov
adc
and
jbe
in
popa
or
push
lcall
dec
inc
insl
xor
test
mov
mov
mov
fprem1
jmp
testl
mov
add
dec
mov
adc
xchg
das
mov
cs
cmpsb
jne
lods
aad
out
sub
fcomps
adc
ds
lret
add
sahf
mov
xlat
sub
sbb
ret
rorl
rcll
dec
jecxz
je
mov
cmp
pop
pop
insb
adc
pop
ljmp
mov
adc
sbb
xchg
mov
jp
movsb
jge
pop
sbb
aam
mov
add
dec
jl
mov
loop
cltd
cli
mov
cmp
jmp
cmpsl
jb
int3
out
mov
sbb
cld
pop
mov
out
dec
push
pop
dec
sub
ret
lcall
outsl
sub
test
outsl
imul
sub
decb
loop
cs
jle
in
ficomps
in
sub
jae
mov
mov
mov
lcall
daa
add
pop
imul
dec
or
or
das
insb
xor
cmpsb
mov
lcall
inc
orb
stos
mov
or
mov
es
imul
sbb
fisubl
loope
fs
jnp
xor
pop
dec
int
mov
push
and
jno
popf
les
nop
loop
inc
cltd
stc
scas
xor
push
cmpsl
sar
mov
push
push
jns
cmp
cmp
mov
mov
lahf
sub
mov
outsb
mov
pop
aad
mov
push
pop
push
lods
add
add
cmc
lock
cwtl
mov
inc
pop
rclb
fiadds
mov
nop
mov
pop
push
jmp
lea
data16
imul
inc
movsl
jnp
add
pop
movsl
je
jge
mov
int
test
cld
push
mov
mov
into
incl
jecxz
push
cld
pusha
jo
ja
push
mov
testl
out
mov
outsl
fstp
dec
and
lahf
lret
pop
add
addl
mov
lock
cwtl
mov
xchg
and
push
pop
sti
es
xchg
add
insl
mov
popf
jne
pop
mov
and
scas
mov
or
rcrl
scas
pop
rcl
jae
push
ds
loopne
jns
fcoml
mov
dec
fisubrl
data16
fsubp
in
cwtl
mul
out
pop
cmp
jmp
rorl
push
std
inc
mov
adc
mov
fcmovb
arpl
cs
and
mov
sub
mov
popa
imul
xchg
cmp
adc
xchg
sbb
aas
jg
xor
mov
mov
lcall
mov
xchg
xchg
cmp
push
lds
xor
mov
inc
in
movsb
or
sbb
pop
jae
jg
sub
fbld
jge
fildll
pop
cmp
or
fsubs
shll
xor
jp
nop
fwait
pop
sub
bound
jmp
aas
jmp
ret
out
in
or
jns
jp
iret
test
scas
cmpsb
mov
gs
outsb
xlat
repz
data16
xlat
jbe
xlat
cmpb
and
pop
cld
jmp
rorb
out
push
loop
mov
sbb
push
sbb
arpl
jno
sti
aas
pop
dec
inc
stos
adc
adc
xchg
jne
jg
adc
push
inc
mov
sub
lahf
ret
fsts
nop
data16
into
add
lahf
fucomp
add
hlt
popf
xchg
jno
addr16
sbb
inc
cwtl
stos
pop
sbb
cld
ja
inc
subl
loope
adc
inc
testb
mov
inc
scas
jno
lret
mov
out
sbb
adc
add
push
out
ja
inc
in
rcrb
scas
js
lcall
mov
int3
mov
push
mov
imul
adc
mov
ds
lcall
mov
mov
aad
cmp
dec
cmc
add
sub
clc
stos
outsl
xchg
or
pushf
fwait
xchg
and
mov
push
and
cmp
adc
mov
cmp
mov
arpl
scas
out
xlat
jo
sub
sub
push
mov
xor
push
cmp
imul
out
dec
adc
gs
pop
mov
pop
jne
and
push
divl
push
mov
add
stc
notb
xor
cmpsb
lcall
cli
int3
insb
xchg
stos
xchg
inc
push
cmpsl
dec
sahf
js
xorb
ljmp
mov
or
repnz
lret
dec
xchg
jp
stc
xor
int3
mov
jmp
xor
das
push
and
lods
mov
xchg
push
or
mov
add
sub
outsl
stos
outsl
shr
es
adc
sbb
add
mov
test
ss
xchg
fcoml
push
mull
jge
add
jne
cmc
cmp
popa
or
pop
pop
aas
in
push
insl
shll
sbb
iret
jmp
dec
sub
sbb
and
jl
loope
sbb
sbb
cmp
jmp
xorb
pop
pop
cwtl
popf
mov
cmpsb
mov
in
lock
cmpsb
inc
int3
in
jno
jno
add
cwtl
add
and
cmp
lret
fistl
jmp
xchg
or
or
imul
out
or
sub
pop
arpl
je
hlt
jg
bound
fisubl
in
sub
filds
mov
cld
jge
push
cmp
jge
aam
xacquire
inc
mov
or
mov
lret
flds
inc
jne
push
pop
xchg
cs
lret
ss
lds
mov
enter
sbb
mov
icebp
mov
scas
xchg
push
jbe
xor
cmp
ret
ljmp
fiadds
jg
cmp
sbb
mov
or
rcl
jle
fcmovnb
inc
inc
mov
out
imul
addr16
imul
loope
push
and
lret
sbb
in
cmp
stc
loope
mov
xchg
sub
cwtl
jp
cmp
rorb
push
cmpb
inc
gs
sub
sbb
sub
mov
repnz
popa
movsl
mov
jp
mov
rcr
popf
push
sbb
hlt
or
imul
mov
xchg
fstps
outsb
or
imul
mov
iret
out
mov
jnp
sbb
test
test
inc
mov
jb
sti
jge
mov
pusha
cltd
push
sbb
or
lds
jo
xchg
fstpt
cmp
inc
push
bound
test
pop
cmpsb
or
test
lahf
sub
adc
ja
mov
adc
mov
inc
ud2
sub
out
or
stos
outsb
add
dec
ljmp
xor
mov
or
add
sbb
jle
inc
fs
call
xchg
xchg
bound
mov
dec
arpl
inc
test
mov
movsb
pop
stc
shll
mov
push
loop
inc
push
jecxz
loop
std
adc
mov
xchg
imulb
jne
cmp
loopne
outsl
push
mov
mov
in
jge
add
mov
lahf
jmp
mov
or
ret
and
adc
xor
xor
mov
mov
sub
aaa
aaa
data16
fdivrl
jae
pop
scas
mov
addb
mov
adc
scas
lock
or
pop
je
dec
hlt
dec
mov
shr
jle
mov
insl
mov
xlat
mov
ljmp
inc
jle
pop
push
dec
out
sub
lcall
lcall
mov
ja
or
popf
es
mov
testl
mov
je
clc
fs
and
sbb
ja
pop
sub
ficompl
aad
mov
arpl
push
sbb
adc
int3
outsb
mov
jb
cmpsl
lret
fldenv
mov
xchg
sub
jnp
fwait
dec
inc
dec
aas
shlb
decb
mov
in
in
lods
aas
and
jns
cmp
ffree
xchg
fldpi
call
dec
hlt
lahf
inc
xor
sbb
data16
std
movb
push
sarb
sti
or
shrl
push
stos
inc
jne
lea
and
loope
add
loop
push
add
mov
push
sub
jno
push
pushf
clc
jmp
sbb
xor
arpl
push
test
adc
lods
xlat
xor
dec
addb
cmp
xchg
mov
mov
cmp
nop
data16
xor
mov
mov
mov
push
jb
pop
add
mov
push
icebp
arpl
fistl
xor
iret
mov
push
sbb
xchg
pop
mov
push
and
scas
pusha
fnstsw
cmp
mov
repnz
and
inc
dec
sbb
notb
xchg
or
cmp
ret
orl
pop
inc
aad
xor
clc
in
mov
es
push
add
in
push
jno
push
pop
pop
scas
bound
inc
xchg
addr16
ds
ljmp
dec
fisttpll
adc
stos
sub
sahf
mov
daa
sub
sbb
cmpb
mov
sub
test
xchg
and
mov
and
nop
cmp
clc
aaa
sbb
andl
inc
fstps
movsl
decl
cmp
int3
rcrl
das
imulb
aam
mov
pop
sub
or
xor
xchg
and
xor
mov
int3
cmpsb
adc
pop
and
xchg
pop
adc
movsl
pop
add
dec
jbe
inc
outsb
mov
jae
xor
lods
test
aaa
mov
sbb
add
bound
cmp
lcall
repz
iret
xchg
push
xchg
xor
insb
out
pusha
mov
mov
rcr
adc
xchg
shl
adc
lods
fnstenv
pop
jne
enter
inc
adc
iret
pop
dec
cmpl
xchg
inc
jno
addr16
push
and
daa
ficompl
lahf
nop
scas
dec
rclb
push
jne
push
cmp
sbbb
rep
fmull
hlt
or
mov
repz
fldcw
xchg
inc
lds
inc
pop
test
mov
fsubl
in
std
cld
mov
aam
popa
loop
mov
loope
pusha
lds
icebp
mov
sub
lcall
movsl
pop
cmpsb
adc
xchg
xor
outsl
sbb
ja
mov
push
xor
cmp
or
sbb
sbb
push
test
div
jle
rcl
and
inc
es
js
lds
adc
mov
adc
push
in
jbe
int
xlat
and
dec
shrb
sbb
mov
sbb
add
add
adc
adc
pop
push
iret
xchg
or
movsb
fnsave
pop
mov
xchg
loop
ja
xchg
aam
sbb
inc
push
pop
int
xor
adc
sbb
arpl
into
mov
dec
adcl
mov
pop
aad
lcall
negl
test
stos
jmp
mov
scas
xor
std
xchg
add
lods
jae
int3
in
clc
aam
mov
push
pop
cmp
mov
aam
scas
dec
jno
in
js
xchg
rcll
lock
inc
lret
lcall
test
mov
jle
dec
shll
cmpsl
cmc
es
inc
addr16
arpl
adc
test
pop
lea
sbb
cmp
mov
mov
fstpt
out
xchg
or
adc
push
push
mov
or
mov
sub
cmp
dec
adc
push
adc
scas
mov
inc
adc
test
push
lcall
daa
or
stos
out
test
pushf
pop
pusha
and
sbb
cmp
cmp
jbe
cmp
mov
pusha
add
popa
cmpsb
add
jle
fdiv
xor
es
stos
lret
out
push
xor
cmp
add
cld
xorl
mov
push
leave
ficoms
mov
mov
cmpsl
mov
xchg
pushf
outsl
pop
adc
out
mov
sbb
in
lds
xor
pop
pop
or
pop
lock
outsb
dec
std
dec
jl
je
xor
add
xor
push
mov
sbbl
scas
aaa
and
sub
pushf
pop
push
test
push
fidivrl
in
sbb
rorb
jg
xor
lret
mov
xchg
jnp
jecxz
loope
test
mov
imulb
int3
sub
roll
leave
jbe
cmp
pushf
sbb
pop
cmp
int
cmc
scas
outsb
xchg
hlt
add
push
push
mov
jg
outsl
xchg
mov
and
pop
mov
dec
jle
and
add
jns
fldenv
aad
mov
or
or
or
pop
mov
push
mov
dec
lret
xchg
lock
data16
inc
or
cld
daa
in
shrl
lea
aaa
sub
enter
das
jnp
cmp
dec
faddl
vunpcklpd
scas
scas
xchg
jbe
rol
out
dec
xor
jns
in
or
and
jns
lods
outsl
and
in
mov
in
incb
repnz
rcrb
jbe
sbb
pop
jle
mov
pop
push
pop
leave
mov
inc
test
mov
stos
mov
dec
xchg
mov
inc
pushl
sub
fidivrs
scas
lea
inc
xor
xchg
incl
push
jns
mov
pcmpeqw
add
mov
jne
sbb
je
or
pop
pop
mov
imul
lods
and
xchg
and
bound
mov
mov
daa
pop
push
mov
shrl
rcll
cmp
sbb
aas
sub
jmp
aaa
pushf
insb
shlb
add
adc
jne
shll
and
xchg
push
jne
mov
jge
add
jo
adc
mov
fiaddl
pop
dec
cmp
stos
jg
enter
xchg
test
mov
mov
adc
jbe
and
add
push
xchg
pop
xor
aas
popf
xor
jecxz
mov
popf
inc
insb
test
outsb
push
adc
bound
loope
daa
jle
mov
or
cmp
sub
and
push
sub
inc
rolb
fstpl
repz
sub
aaa
popf
pushf
adc
clc
mov
popf
loopne
inc
mov
ja
pushf
xchg
mov
lea
imul
pop
push
data16
sub
pushf
cmpl
xchg
cli
sub
inc
outsb
push
sbb
dec
addr16
push
setne
lret
arpl
pop
or
mov
ljmp
jge
pop
mov
mov
aad
and
out
cmp
popa
inc
and
movsl
sbb
fisttps
imul
loope
scas
into
loope
pop
fwait
jecxz
cli
test
ss
cmp
mov
pop
push
mov
lret
ficompl
jbe
mov
pop
pusha
push
xchg
inc
sub
add
repnz
pushf
add
int3
je
xor
leave
sbb
push
test
insl
shll
jle
and
jae
data16
inc
cli
and
adc
pop
mov
mov
and
inc
push
cmp
das
or
int
push
iret
push
push
cmp
into
sub
and
imul
or
sub
out
sbb
int
test
fisubrs
insb
nop
jno
gs
push
sbb
mov
ret
add
cmp
sbb
jg
jno
ret
sub
into
aad
jmp
orb
stos
push
and
lea
filds
lret
xchg
push
sub
sarl
xor
push
aam
xchg
jmp
insl
stos
pop
outsb
stos
fimull
in
rcrl
das
dec
jmp
stc
cmp
jecxz
adc
jne
jne
xlat
push
sub
pop
xor
mov
lcall
das
sub
pop
sbb
cmp
dec
mov
test
es
xchg
jns
loope
lret
sbb
insl
push
inc
imul
adc
pusha
mov
dec
xor
xlat
fsubs
sbb
out
pop
xor
and
rclb
xchg
cmp
add
mov
pusha
mov
in
mov
push
arpl
lret
cli
pop
push
cmp
adc
push
mov
out
jecxz
in
sarl
or
test
mov
dec
xor
xor
sti
pop
jp
lret
mov
push
nop
jnp
fiaddl
lods
out
add
sub
or
cmc
inc
ret
cli
mov
fdiv
jne
xor
cmp
stos
insb
mov
lds
push
pop
stos
shlb
arpl
in
pushf
lret
inc
ds
lret
aaa
sub
mov
mov
sub
outsl
mov
inc
lds
jo
sbb
and
jg
pmulhw
pushf
jecxz
inc
jecxz
dec
dec
aad
mov
lret
adc
cld
rol
flds
sti
mov
jae
outsl
in
pop
loop
push
sub
adcb
mov
das
push
bound
gs
popf
push
pop
push
cmp
mov
pop
pop
push
pop
or
push
cmp
repnz
sub
dec
mov
aaa
loopne
int3
push
adc
ror
lock
cmp
fsubl
mov
pushl
pop
imul
addr16
push
pop
out
rclb
jle
mov
inc
jbe
adc
in
and
dec
into
mov
fstpl
add
sbb
es
test
or
lea
xor
pushl
ss
xchg
jl
int3
or
mov
add
es
js
mov
fsubrs
jge
adc
mov
enter
repz
loopne
mov
int3
lret
sti
or
pushf
sbb
fstl
inc
test
aas
pusha
push
insl
cltd
dec
test
xchg
push
xchg
pusha
adc
ds
fcomp
sbb
and
repnz
adc
sbb
pushf
xlat
outsb
jl
and
pop
lock
sbb
jbe
stc
scas
cld
shll
in
push
das
pop
rclb
mov
inc
adc
insl
sub
xor
jp
test
out
mov
push
jp
fldenv
fdivrl
pop
jmp
push
sub
mov
movsl
js
daa
adc
sti
sub
out
sbb
mov
lcall
push
daa
sub
psllq
mov
insb
ljmp
fsubrl
pusha
pop
out
push
xchg
scas
add
dec
inc
out
xchg
mov
cmp
adc
and
pushf
push
push
pop
or
stos
icebp
lds
frstor
mov
call
popf
mov
lret
arpl
inc
xchg
xor
inc
dec
mov
pop
cli
imul
stos
addb
push
xchg
mov
shl
mov
add
fwait
xchg
rorl
imul
loope
ja
loop
pop
sti
sbb
xor
xchg
push
sub
js
dec
mov
lcall
enter
test
mov
iret
xchg
sbb
bound
add
leave
inc
fisttpll
xchg
mov
add
lds
xchg
sub
cmp
bound
je
cmp
call
inc
ret
stos
xchg
sbb
icebp
xchg
mov
call
lods
subl
sbb
mov
push
dec
pop
fs
pushf
xchg
cmc
xor
sbb
sub
ret
scas
andb
insb
adc
ud0
adc
fistpl
in
mov
xchg
les
xchg
shll
loope
jecxz
push
rcrb
dec
jge
xchg
lock
xchg
ljmp
xchg
sbb
shlb
mov
leave
lcall
fldcw
jne
lret
inc
add
ret
in
lahf
mull
dec
mov
pop
pushf
push
lods
push
in
push
push
xor
xchg
cmp
aas
repnz
push
repz
lcall
mov
jb
cmp
pop
arpl
shlb
decl
mov
xchg
add
decl
imul
xchg
popa
xor
movl
repz
pop
sbb
ret
insb
stc
ljmp
xor
cli
inc
mov
insl
mov
push
cs
mov
push
push
pop
inc
adc
in
iret
test
and
adc
sub
jnp
stc
add
bound
les
mov
test
pop
scas
pop
xchg
push
sbb
cmc
mov
shlb
loop
mov
jae
stc
aam
cmp
pushf
mov
pop
fimull
and
mov
jo
sbb
sub
jns
test
dec
push
out
mov
movsb
mov
sub
adcb
addr16
cmpsb
cmp
pusha
push
mov
test
xchg
mov
sbb
repz
nop
mov
xor
cmpsb
ss
push
pop
vcvtdq2ps
and
mov
aaa
xor
adc
popf
xchg
xlat
lret
jae
adc
sbb
inc
and
push
sub
or
cmpsl
or
cmp
jl
jno
mov
push
push
cmp
dec
jl
repz
enter
in
jmp
hlt
dec
hlt
jl
push
push
rcrl
pop
add
std
repnz
push
push
or
sbb
mov
ja
xchg
clc
sbb
je
or
insb
inc
in
sbb
test
cmp
push
mov
lds
mov
add
js
stc
daa
dec
jb
jge
orl
mov
nop
push
xor
sub
ss
mov
inc
push
push
and
fdivp
cmp
xlat
imul
andl
repnz
inc
mov
lret
mov
and
es
leave
inc
mov
outsb
xchg
imul
sub
imul
inc
adc
mov
sbb
add
xor
sub
jmp
adc
movsb
or
jne
mov
jno
subb
mov
sub
ret
ja
in
sbb
pop
gs
sub
vpsllq
jg
dec
push
in
mov
enter
icebp
jp
push
data16
repz
cld
pop
mov
sub
jbe
cmpb
mov
js
lock
push
std
or
xor
xor
ss
in
mov
iret
mov
lret
test
cmp
insl
pop
dec
add
mov
cltd
mov
loop
call
push
push
dec
bound
in
rcr
inc
ss
jbe
push
jae
adcl
fsub
cmp
push
sbb
arpl
pop
gs
mov
ret
pop
mov
pop
repnz
dec
adc
pop
iret
jl
adc
xchg
sbb
call
mov
adc
pop
lret
or
ja
stos
outsb
mov
jg
nop
add
add
lods
scas
sahf
ds
and
rclb
cmp
call
xor
cmp
mov
ja
xchg
shr
movsl
adc
js
mov
pusha
in
adc
jle
dec
adc
or
clc
inc
jb
mov
push
xor
xchg
sub
pop
mov
or
sub
mov
fildl
cmp
xchg
daa
hlt
sbb
mov
arpl
mov
or
sahf
jge
call
sub
mov
xchg
mov
test
cmpl
fisubrl
icebp
repz
or
pop
adc
imulb
xchg
mov
fimull
or
push
ja
adc
mov
and
push
xchg
inc
and
cmc
dec
lcall
or
rcrl
imul
mov
mov
lcall
inc
jo
ret
push
int
jecxz
sahf
cs
jl
mov
inc
ret
push
out
fnstenv
inc
mov
add
mov
das
lock
outsl
and
ss
xchg
stos
mov
mov
pop
push
stos
rcrb
enter
mov
inc
and
xor
in
sbb
dec
xchg
dec
push
mov
jnp
mov
in
out
inc
inc
mov
dec
jecxz
aam
test
leave
and
imul
test
adc
xchg
adc
ror
mov
cld
fisubs
sarl
dec
cmp
je
sbb
loopne
and
lcall
arpl
and
mov
aad
inc
mov
out
jno
fisubrs
sbb
mov
popf
addr16
out
test
addr16
or
divl
mov
pop
add
ret
or
fldl
mov
mov
test
push
pop
cmpsl
mov
in
add
loop
sub
std
mov
out
jae
loopne
mov
pop
mov
iret
jne
lcall
psrlw
cmpsb
fwait
cmp
push
clc
lds
inc
mov
inc
incl
insb
pop
stos
push
imul
aad
cmp
stos
imul
xor
mov
or
movl
sub
add
dec
push
add
fadd
rcll
iret
ss
rcl
add
dec
cmpsb
push
pop
add
sub
pop
inc
leave
mov
mov
popa
lret
sbb
cmp
push
gs
pop
dec
adc
sub
aaa
inc
push
in
xchg
push
or
popa
xor
daa
add
jg
lods
loop
mov
fldl
sub
loope
inc
cmovno
or
mov
inc
addr16
cli
call
cmp
mov
xchg
cmp
xchg
mov
xchg
ffree
aaa
sbb
insl
jbe
xor
aad
call
jecxz
pop
pop
sbb
jge
inc
sub
fldenv
lods
popa
dec
outsb
aaa
ror
loopne
dec
jbe
std
icebp
cmp
add
and
mov
ret
mov
addr16
dec
push
es
sub
jb
pop
loope
outsl
inc
inc
push
sub
lods
add
mov
iret
into
add
push
xchg
arpl
mov
or
or
mov
xchg
fmul
ss
sbb
enter
mov
fstp
or
sub
jbe
das
xchg
cltd
movsl
fldenv
cmpsb
xchg
xchg
jae
dec
mov
je
push
lea
andl
nop
and
stos
daa
fsubrs
xchg
pushf
subl
mov
jo
int
scas
xchg
mov
jg
xlat
ret
insb
sub
mov
inc
daa
push
dec
push
adc
popf
xchg
mov
inc
inc
scas
rcpps
aad
push
and
lret
push
xor
xor
addr16
aas
insl
sub
jns
pop
sbb
add
sahf
push
lods
jp
xor
pop
in
adc
lods
xor
inc
bound
push
dec
jnp
adc
cmpb
mov
adc
mov
dec
add
add
dec
outsb
fisttps
push
mov
jb
nop
lock
out
xor
std
xor
mov
dec
out
dec
lods
xchg
mov
cs
outsl
mov
adc
mov
scas
mov
lcall
xor
cmpsl
cmp
xor
and
mov
in
mov
nopl
cli
decl
lcall
cmc
arpl
cld
sub
clc
rcll
dec
aad
pop
into
inc
lock
mov
std
or
into
pushf
mov
jns
cmpsb
data16
in
push
imul
fisttpll
dec
or
mov
popf
imul
lea
cmp
iret
mov
or
insb
fwait
or
imul
cld
cmpsl
push
adc
dec
and
jo
mov
jb
clc
push
cmp
jge
pop
xor
xor
mov
inc
cmpb
in
mov
mov
test
scas
jnp
adc
xor
ret
jle
adcl
daa
pop
jo
dec
add
rcr
outsb
iret
jp
nop
ja
add
jp
jp
push
mov
or
outsb
ret
push
add
and
mov
cmp
add
mov
inc
xchg
shrb
rol
and
mov
lods
pop
pop
fistl
or
mov
lret
aas
dec
mov
sub
daa
and
mov
or
repz
orb
aas
cwtl
jle
push
xchg
xchg
mov
pop
dec
fcompl
cmpsl
xchg
push
call
add
dec
jecxz
mov
pop
pop
mov
pop
or
xchg
clc
cmc
push
loope
sbb
mov
jmp
adc
leave
mov
dec
mov
jne
mov
mov
sbb
aad
gs
push
sbb
bound
cli
cmp
icebp
and
jle
sbb
push
push
jb
add
lahf
xchg
arpl
push
fsubr
pop
mov
pop
xorb
pop
mov
rclb
xchg
add
dec
fcoms
fidivs
push
or
adc
les
not
fstpt
aam
mov
std
dec
adc
mul
add
in
aad
xchg
and
dec
pop
lock
add
in
jb
add
xor
cwtl
xor
das
jnp
loop
cld
xlat
std
fdivrs
lret
stos
ucomiss
pop
xor
dec
stc
inc
add
lahf
lret
ja
out
push
adc
cwtl
das
in
xor
aaa
inc
aaa
in
mov
mov
fwait
daa
cmpsb
mov
sbb
dec
je
lahf
mov
cs
daa
hlt
repz
dec
pop
xor
shll
or
adc
adc
lahf
mov
scas
inc
iret
lock
aas
xchg
xchg
xchg
sbb
pop
jbe
jb
pop
dec
sub
xlat
inc
out
clc
call
jnp
popa
ds
mov
stos
xor
add
mov
lea
test
out
test
xchg
push
mov
aam
sti
mov
mov
outsl
sub
add
inc
loope
shl
mov
and
add
outsb
nop
ds
mov
pop
vcvtss2sd
cmp
rolb
push
pop
cmpl
shrl
mov
pop
dec
out
sbb
sbb
jmp
fwait
insb
sbb
daa
jno
clc
scas
fsubrs
cmp
mov
or
or
and
push
ds
inc
and
xchg
gs
in
mov
push
fcmovnb
or
pop
pop
rcrb
scas
test
daa
jle
in
cmpsb
lret
stc
push
push
mov
cmc
and
test
pusha
dec
cmp
clc
aas
add
xor
and
in
mov
nop
mov
jne
arpl
xchg
inc
pusha
mov
dec
outsl
ja
sbb
testb
loopne
into
in
aam
testl
out
sub
test
jmp
imul
scas
sahf
push
stc
popa
loopne
xchg
out
out
jmp
dec
dec
imul
mov
out
mov
mov
dec
insb
test
adc
push
xlat
roll
add
sub
dec
dec
outsb
push
scas
movsb
negl
cmp
imul
xchg
cld
sahf
loope
or
dec
outsl
fisubs
lahf
imul
sub
sub
and
sbb
jecxz
fisttpl
adc
or
scas
inc
adc
popa
fmul
nop
mov
fimuls
add
shrb
xchg
jle
gs
jb
mov
insl
pop
jbe
mov
or
adc
xchg
adc
out
fwait
subb
pop
mov
les
and
ss
push
push
dec
cltd
jnp
js
cmc
inc
js
jne
jecxz
fdivl
jb
repnz
js
fcoms
push
cmp
es
mov
cmp
mov
cs
mov
xchg
mov
mov
test
push
push
in
add
insb
pop
pop
mov
test
leave
js
jg
xchg
aad
and
lcall
mov
call
cs
in
mov
pop
inc
dec
shrb
xchg
fcompl
dec
adc
sub
ja
dec
test
fwait
or
mov
jne
in
inc
and
inc
fildll
sahf
scas
cmp
cmc
inc
test
aas
adc
aad
or
add
dec
push
pop
shl
mov
test
lcall
lret
fstpt
pop
xor
hlt
inc
loopw
push
in
pusha
out
jmp
out
mov
imul
lret
mov
jge
insb
pop
xchg
mov
mov
bound
sbb
xchg
ds
add
loope
ljmp
sbb
fucomp
inc
xchg
les
mov
lret
push
jmp
jb
jae
mov
adc
jecxz
cmp
shr
shll
das
inc
xor
adc
scas
mov
fwait
sub
lea
lds
dec
add
scas
call
sbb
sbb
mov
xor
push
outsb
ret
lods
mov
mov
bound
and
push
leave
mov
testb
sbbb
sbb
mov
fcoms
scas
nop
inc
int3
divb
adc
es
shl
mov
insl
lock
es
dec
and
inc
test
sbb
mov
mov
outsl
movsb
roll
movl
sbb
lret
jae,pt
sbb
test
mov
dec
les
roll
std
ss
andl
cmp
popf
add
push
popa
xor
insl
mov
repz
mov
and
xor
inc
ficoms
les
mov
fildl
sbb
stos
xchg
dec
aad
push
or
sbb
cltd
pop
cmp
xchg
popf
fs
inc
cmp
mov
xchg
inc
out
imul
mov
or
lahf
add
subl
test
or
data16
or
loop
push
push
arpl
lods
jnp
movl
icebp
cmpb
loop
or
mov
fnstcw
in
outsl
rolb
ds
and
add
outsb
in
and
mov
sub
shlb
mov
mov
enter
inc
sti
xchg
mov
mov
and
rcr
mov
movsb
hlt
xchg
cmp
ret
stos
push
clc
sbb
cmp
je
cli
lods
int3
xchg
shll
outsb
mov
sti
adc
fsubrs
push
mov
or
cmp
mov
hlt
and
dec
fsub
leave
fisubrs
inc
int
cmp
rcll
xchg
lret
pop
inc
and
mov
mov
lds
and
add
imul
roll
push
jne
jp
movsb
adc
int
addr16
lret
cli
sub
or
cmp
mov
mov
sub
pop
lods
mov
pop
enter
je
ljmp
add
in
sbb
xchg
dec
pop
sub
jae
mov
inc
scas
rorb
inc
pusha
ljmp
pop
mov
incl
inc
cmpsl
mov
mov
scas
xchg
enter
mov
cmp
lds
or
dec
mov
jne
sub
xor
fwait
mov
inc
shll
xor
pop
outsb
mov
inc
repnz
or
mov
addr16
sub
dec
cmpsl
push
iret
dec
inc
fldcw
push
or
xchg
inc
mov
fwait
sub
movsb
pop
inc
push
xchg
test
movsb
or
add
lcall
xor
lret
mov
cli
dec
mov
mov
cmc
cwtl
int
in
sbb
loop
xor
repnz
mov
roll
addl
cmpl
sub
mov
cmp
lods
icebp
movsl
sub
inc
add
mov
das
mov
fistpl
push
jmp
pop
cmpb
mov
xor
fldcw
push
mov
inc
mov
imul
xchg
repz
and
or
jecxz
pop
fwait
repz
les
shlb
sti
sbb
push
xor
inc
jge
int
mov
int
mov
mov
shl
xchg
mov
mov
mov
idiv
bound
sub
dec
inc
mov
mov
add
sti
jne
cmp
adc
data16
js
inc
cmp
in
ss
out
insl
shll
rolb
lahf
scas
rorl
cmp
insl
or
clc
xchg
jecxz
bound
xchg
iret
mov
add
inc
test
icebp
test
sbb
add
xor
and
loop
js
jae
push
xchg
icebp
sub
fisttps
ljmp
adc
jg
cmpl
mov
jae
add
ss
and
fdivl
fabs
cmp
pop
jnp
mov
cmpsl
or
jno
push
jle
insl
push
cmpsl
cli
loopne
push
jns
push
or
push
movsb
or
aad
dec
shrb
mov
stos
lock
daa
add
cmp
dec
push
or
push
test
cs
mov
sub
jns
js,pt
movsb
xorb
stos
sub
xchg
push
imul
cltd
mov
test
jge
pop
and
in
sbb
mov
icebp
test
dec
cmp
xchg
mov
push
popa
mov
xchg
xchg
daa
sbb
jnp
jno
ljmp
adc
fcmovnu
leave
jns
scas
push
fucomi
lea
out
inc
popa
adc
loopne
or
sbb
daa
sysret
into
std
das
mov
or
push
std
and
or
inc
jne
sub
xchg
mov
movsl
shll
ss
ror
fisubl
push
adc
cmp
bound
push
fildl
mov
mov
shr
sbb
stos
cli
jae
lret
ret
cmp
push
aaa
int
and
adc
add
mov
adc
cmp
fcoms
mov
inc
pop
and
xchg
rclb
arpl
imul
sbb
or
daa
pop
outsb
lret
int3
dec
enter
std
adc
loope
into
adcb
dec
add
add
ds
jl
cmp
sub
fidivs
mov
and
adc
in
sub
xor
sbb
adc
jo
adc
jl
add
mov
shlb
mov
mov
lea
data16
sub
cmpsl
mov
hlt
pop
addr16
dec
repnz
test
mov
mov
adc
sbb
jp
loop
push
xor
push
out
jno
or
xchg
push
imul
jp
adc
mov
mov
nop
nop
lea
dec
dec
in
push
scas
repnz
fsubl
lea
cmpsb
bound
and
scas
xor
ret
pop
xchg
push
repz
dec
movsl
cmpsl
ret
rorl
dec
push
push
or
jg,pn
pushf
and
sub
xchg
cmpsl
sub
sub
movsl
les
rclb
inc
cmp
jmp
push
ror
out
sub
div
jbe
popa
dec
inc
cmp
jo
les
dec
add
sub
push
rcrl
mov
sbb
xorl
loopne
jb
adc
in
subb
mov
cmpsb
push
jne
mov
cmc
pusha
pop
jnp
adc
mov
pop
lcallw
and
xor
sbb
out
orw
ret
sub
inc
dec
icebp
test
push
dec
je
sbb
jns
sbb
push
sbb
loopne
xchg
fxch
lods
cmp
imul
mov
or
sbb
shrl
sbb
scas
dec
ja
cmpb
xor
std
bound
stc
inc
add
arpl
add
cmp
loop
adc
imul
or
out
lahf
enter
cmp
and
loop
xchg
out
mov
sbb
icebp
nop
adc
scas
out
dec
popa
mov
inc
cmpsl
ljmp
ja
jge
sub
mov
pop
ljmp
outsl
xor
push
outsb
xchg
xchg
mov
jnp
test
and
or
sub
push
sti
test
int
fisubl
mov
loope
sbb
sub
push
ja
adc
xchg
sbb
adc
in
pop
pop
les
or
test
sahf
pop
cmpsw
pop
jmp
push
gs
inc
fsubrs
mov
repnz
inc
fxtract
pop
scas
jge
cwtl
jb
jae
bound
pop
lea
frstor
sub
fidivl
and
fstpt
push
out
aaa
imulb
dec
shrl
jb
iret
stc
sub
cmp
test
adc
sbb
pushf
clc
ret
mov
jge
fdivrp
mov
or
add
inc
mov
dec
inc
jle
div
int3
mov
rclb
add
lret
sub
inc
out
add
pop
imul
repz
loop
xchg
je
or
cld
sbb
mov
das
sti
pop
sub
arpl
pop
ja
pop
ret
pop
xor
or
popa
out
inc
jle
jle
or
popf
lock
enter
nop
inc
addr16
adc
mov
xchg
mov
xchg
call
or
inc
mov
mov
xor
jle
aam
aam
into
inc
scas
adc
cwtl
das
mov
push
mov
pop
fimuls
push
jle
iret
xor
and
jmp
sub
insl
push
xchg
or
lcall
out
ret
mov
push
repnz
movsl
cmp
cmc
pop
dec
sbb
dec
lea
testb
xor
leave
ss
jecxz
shlb
cmp
xchg
cltd
xchg
dec
lret
cmp
sub
mov
js
sahf
push
mov
push
cmc
cwtl
xchg
push
outsl
cwtl
add
pop
lret
int3
subl
sub
jg
dec
xchg
adc
sbb
xor
int3
neg
in
mov
pop
cmpsb
mov
mov
arpl
pop
daa
cmp
in
adc
fsubs
push
mov
jno
mov
pop
bound
ja
or
scas
jp
and
test
dec
sub
sub
lahf
outsl
fisttps
adc
xchg
imul
xor
sub
mov
xor
mov
and
push
scas
loopne
iret
aad
add
inc
mov
out
pop
push
rol
cwtl
cli
fcmovb
cltd
push
jmp
out
jne
or
test
pop
shlb
inc
push
dec
add
xor
cmpsl
pop
in
inc
pushf
mov
test
mov
xchg
movsl
dec
ja
inc
clc
add
push
cs
pmaxub
or
test
jp
mov
std
int3
icebp
mov
push
sbb
out
fucom
jo
xchg
inc
lret
fs
stos
sar
cmp
popa
sarl
data16
inc
stos
xor
incl
xchg
nop
das
xchg
push
scas
sub
mov
aad
std
dec
add
mov
pusha
pop
mov
lea
pop
scas
jnp
cld
outsl
dec
in
mov
mov
adc
cwtl
inc
lret
mov
dec
or
sbb
xchg
aas
inc
dec
cmpsb
push
cmpsb
mov
push
mov
jns
pop
lds
dec
sub
inc
out
add
daa
jle
subb
jp
mov
or
xchg
sub
sub
lcall
add
push
xor
mov
mov
popa
andb
mov
push
adc
push
rol
es
fsubl
add
into
cmpsb
cmpsl
dec
push
add
cmp
sbb
push
and
aas
bound
lods
in
cs
mov
adc
xchg
insl
pusha
ret
or
iret
adc
mov
and
ret
loopne
sub
fistpl
je
out
cmp
call
adc
fwait
jle
jg
inc
adcb
pop
pop
dec
data16
movsl
mov
and
in
leave
mov
xchg
fnsave
call
scas
jmp
jns
xchg
fwait
fs
int
pop
mov
sbb
lcall
dec
jae
mov
mov
pop
jne
adc
mov
push
sbb
lods
sbb
adc
push
jae
dec
fmull
icebp
test
imul
sbbb
lods
pushl
jge
sub
add
pop
dec
stos
cmp
or
jae
pop
dec
dec
arpl
das
and
mov
roll
mov
addl
sbb
bound
xor
es
rcll
xor
lods
lock
sub
in
mov
in
js
jle
push
push
inc
rolb
stc
sub
jle
xchg
cmp
hlt
cmp
iret
gs
sahf
inc
inc
fmulp
flds
adc
and
jge
mov
repz
mov
ficompl
or
iret
cmpsb
popa
test
fsts
push
lcall
and
and
insb
cltd
hlt
xchg
adc
arpl
xchg
pop
lock
in
fs
fs
stos
pop
lods
fiaddl
cmpsl
outsl
sbb
repz
xlat
xorl
faddl
push
sub
adc
mov
enter
mov
pop
sub
jle
mov
jo
pop
movsl
add
dec
and
mov
test
adc
mov
idivl
dec
movsl
pusha
inc
jne
inc
cmp
jo
lret
add
xor
dec
xor
pop
subl
sbb
cmp
push
call
imul
popa
xchg
sub
mov
jmp
es
adc
jl
inc
loopne
sub
popa
mov
xchg
loop
lods
add
je
cmpsl
es
or
hlt
push
xchg
into
jp
mov
sub
test
int
fimuls
ds
mov
mov
cmpsb
xchg
ljmp
adc
jns
mov
sub
test
shrl
add
lea
xor
loop
testl
das
sub
dec
popl
or
filds
or
insl
or
loope
sbb
dec
fistpl
out
in
add
lret
cmp
add
rcrb
pop
mov
mov
inc
orb
push
mov
xor
repz
cmpsl
push
pushf
cwtl
popa
loopne
adc
cmp
aas
fwait
dec
mov
stos
push
xchg
mulb
xor
lea
andb
in
gs
gs
sbb
mov
es
leave
fwait
test
arpl
repz
sub
jge
in
pop
ljmp
mov
in
scas
imul
cmp
sbb
mov
xchg
imul
stos
shll
shll
jno
lret
hlt
cmp
mov
nop
out
push
sahf
sub
cs
jl
adc
movsb
lret
cmp
mov
xchg
pop
adc
scas
mov
or
sub
dec
jecxz
mov
mov
adc
cli
xchg
jg
arpl
push
outsb
sbb
push
popf
inc
jns
sub
cmc
out
aam
sub
adc
cmpsb
nop
movsl
gs
or
dec
jle
shlb
xor
fwait
imul
out
sub
insl
jo
push
cmpsb
in
mov
push
jo
pop
mov
cmp
dec
mov
mov
out
mov
xchg
std
pop
add
pushf
mov
shll
inc
push
adc
xor
mov
mov
sub
aas
insb
pop
sbb
pop
add
in
shlb
fdivp
sti
or
rclb
aas
jo
stos
add
jbe
ja
pushf
xchg
cld
jge
lret
jns
fwait
or
push
gs
lock
mov
mov
sbb
xor
inc
mov
arpl
in
scas
clc
jns
xchg
push
jbe
idivb
and
sub
lock
xor
int3
mov
cmp
jg
xchg
in
jno
fmull
leave
mov
jbe
inc
jne
cld
leave
mov
rcr
hlt
push
or
sbb
xor
add
sti
cmp
loop
mov
mov
popf
lds
mov
fs
add
es
aaa
das
out
xchg
in
idiv
and
pop
data16
mov
leave
xor
adcl
jno,pt
jmp
mov
mov
mov
mov
jp
or
xor
pop
cmp
test
incb
cmpsb
pop
icebp
pushf
cmp
stos
sub
jmp
call
lds
xor
dec
cmp
imul
lcall
es
dec
sub
mov
dec
jnp
sub
ljmp
fisttpll
ret
fdivrs
pop
cmp
bound
leave
out
imul
inc
push
and
out
mov
iret
movsl
xchg
mov
shll
xchg
in
int3
mov
outsl
mov
pop
dec
js
xor
orb
ja
popf
pop
sub
test
cli
pop
out
repnz
ljmp
pop
jne
push
test
mov
sti
aas
cmpsb
incl
outsl
aam
pop
add
jl
mov
fldenv
es
sbb
out
inc
dec
rorb
xchg
test
jnp
data16
and
jle
jo
pop
pop
or
add
xor
push
mov
clc
lret
dec
jg
dec
dec
sti
cmp
js
icebp
sub
imul
movsl
iret
mov
xorb
mov
cs
cmp
push
cwtl
mov
jle
stc
sub
push
pop
sub
jbe
in
xchg
std
cmpsl
xor
in
mov
roll
ljmp
ds
call
mov
jp
ss
dec
cmc
hlt
xchg
hlt
sahf
insl
ljmp
jne
imul
clc
ja
push
add
fiaddl
test
adc
mov
pop
pushf
cmp
inc
add
push
jle
xor
lcall
idivl
lods
and
push
addr16
aas
mov
ficoml
mov
das
stos
cmp
jmp
xchg
pushf
cmp
jp
jl
imul
mov
loopne
repz
aaa
jbe
mov
add
subb
hlt
mov
cld
shlb
xchg
ffreep
and
push
mov
and
adc
rcll
inc
cli
cmovnp
stos
imul
in
and
add
xchg
addr16
mov
sahf
push
scas
jmp
add
fidivrs
fimuls
roll
test
push
gs
xchg
ret
mov
out
sbb
push
test
and
mov
pop
xchg
jg
das
ds
movsb
insl
and
jl
int3
popa
adc
das
mov
cld
mov
fdivl
cmp
xor
adc
lahf
scas
inc
push
mov
jnp
leave
add
test
push
sbb
pop
push
iret
and
mov
cmp
or
xor
mov
stc
test
adc
lahf
loopne
sub
lahf
mov
inc
ss
push
insb
loope
hlt
sbb
sbb
cmpsl
push
lcall
mov
jg
push
cld
mov
push
fs
mov
xchg
inc
mov
and
cmc
dec
mov
inc
test
dec
push
sub
popa
imul
fmulp
cwtl
rclb
dec
pop
fstpt
out
mov
jnp
mov
dec
adc
dec
fidivs
fsin
dec
movsb
push
rorl
test
xchg
arpl
clc
inc
int3
sti
das
cli
clc
sbb
mov
shll
int
sarb
rclb
loope
push
mov
cmpsb
fmul
pop
add
xchg
stos
shll
std
jno
mov
mov
test
sbb
inc
sti
int3
push
cltd
out
les
jle
lods
popa
dec
repnz
cmpb
mov
xchg
xlat
dec
pop
inc
fs
push
and
movsl
cmp
stos
pop
ljmp
pop
pop
repnz
lock
add
inc
scas
push
nop
jb
leave
dec
pop
fnstcw
subb
call
mov
pop
aas
test
popf
test
push
shrl
push
testb
sub
xchg
push
cli
ret
jae
push
js
jae
ficoml
sub
jmp
sbb
inc
pop
pop
sub
pop
imul
mov
sub
or
mov
in
xorb
cli
jo
xchg
lds
cmpsb
addb
clc
sub
aaa
lret
push
xor
dec
call
ljmp
xor
adc
dec
add
incl
mov
sub
movsb
ror
mov
sbbl
dec
or
sbb
cmpsl
flds
ss
je
cs
fsubrl
mov
or
sbb
jecxz
cmp
cmc
mov
push
cltd
push
xorb
adc
arpl
fwait
inc
xor
dec
imull
scas
ds
pushf
cmp
push
mov
sbb
jno
sub
shrb
fldlg2
cmp
cltd
adc
lcall
jg
test
jb
sbb
out
xor
das
cmp
xchg
cmpsl
xchg
fbld
adc
mov
xor
shll
jg
repnz
lods
pop
fimuls
pop
or
lea
push
cmc
xor
fiadds
mov
mov
push
or
aaa
test
movsb
mov
repnz
inc
adc
mov
sbb
fildl
out
icebp
push
das
scas
pop
dec
arpl
out
pushf
cmpb
and
int
fisubrl
js
adc
xchg
pop
jge
cmc
fnstsw
arpl
add
inc
or
clc
jnp
adc
mov
xor
iret
sbb
test
mov
js
xor
push
mov
push
sub
lds
scas
ja
sbb
stc
sub
cmp
cmpsb
jo
fwait
cld
cmpsl
sbb
popf
shrl
jb
cmp
and
push
popa
dec
mov
pop
cli
ret
subb
push
pop
dec
add
and
dec
adc
add
cmpsb
lea
jb
xchg
repz
mov
dec
divl
mov
lods
dec
inc
cmp
and
jne
test
push
add
in
shrb
pop
lcall
mov
fsts
shrb
xchg
push
pop
in
into
hlt
mov
je
cmova
sbbb
imul
imul
fidivrl
sbb
out
jmp
mov
cld
and
ret
stos
adc
push
out
ljmp
es
inc
adc
mov
jmp
xor
pop
inc
mov
cmp
cwtl
popf
push
fcmovne
jb
pop
aas
sub
stc
test
push
andl
xlat
ja
out
or
and
lock
mov
adc
mov
xor
pop
pop
adc
int
mov
enter
pusha
ret
test
je,pt
mov
fidivrs
adc
jbe
push
dec
mov
ficompl
pusha
dec
daa
push
pmaxsw
xchg
sbb
sarb
movsb
dec
sbb
lahf
shr
insb
jl
pop
inc
andl
fld
and
xorl
pop
jne
mov
pushl
xor
mov
in
inc
mov
jnp
aas
jns
hlt
cmpsb
leave
lret
sahf
push
sub
int3
mov
mov
mov
mov
fsub
bound
pop
and
cmp
dec
fsubrs
push
scas
mov
push
dec
inc
loop
jns
mov
mov
mov
dec
rcl
adc
push
cmp
mov
pop
lds
es
cltd
cmc
mov
dec
in
dec
adc
sbb
sbb
pushf
clc
xchg
sbbb
add
inc
sub
push
push
push
stos
inc
jl
scas
test
mov
mov
adc
repnz
pop
sub
les
add
je
jbe
cmpsb
out
pop
lds
in
ljmp
dec
sbb
fnstenv
add
xor
call
xor
nop
mov
push
mov
aas
inc
push
sti
adc
jo
repnz
movsb
lock
xor
jno
inc
ljmp
rcr
add
es
out
lea
or
fstps
xor
pop
jmp
push
xor
sbb
adc
loop
and
pop
push
jno
or
adc
adc
mov
adcb
movsb
jg
mov
and
jns
jg
mov
mov
mov
dec
xchg
mov
cmpl
int3
scas
push
nop
mov
add
mov
jmp
cmp
mov
lods
cmp
xlat
push
insb
mov
xchg
icebp
pop
xor
jg
xor
out
push
sarb
jnp
cmc
cmc
push
lods
cs
shlb
bound
cmp
stos
int3
mov
inc
sub
lahf
jae
fsub
mov
test
daa
push
stos
mov
add
testl
dec
scas
daa
push
fwait
jno
scas
jl
sbb
or
imul
lcall
lret
out
sub
mov
and
and
icebp
inc
pusha
mov
and
inc
sti
and
pop
jo
push
jle
sarb
test
sarl
fwait
js
push
jecxz
lret
xor
mov
xchg
jo
das
aad
pop
test
in
sub
pop
pop
pop
scas
ljmp
pushf
push
gs
aam
cmpsl
out
mov
addl
jne
ja
into
mov
sbb
dec
sarl
mov
add
sub
and
sub
jp
or
pop
mov
xchg
pop
pop
fdiv
xchg
addr16
jge
cld
in
ds
and
jb
xchg
fildl
jmp
jno
push
add
mov
and
jp
pop
enter
aam
or
fsubrl
xchg
cmp
mov
mov
mov
xor
and
xchg
and
popa
sbb
jp
sbb
cmp
into
xchg
jecxz
xchg
mov
into
xor
or
push
ret
dec
inc
cmp
adc
mov
jge
pop
jp
jmp
les
cmpsl
gs
mov
push
jno
and
and
or
and
movsl
out
push
lock
adc
mov
loopne
rcr
aam
imul
loopew
mov
inc
mov
nop
or
push
dec
adcl
mov
jp
rcr
and
or
sbb
push
jae
repz
jnp
dec
add
les
std
push
shl
cmp
imul
mov
add
jbe
mov
in
dec
js
jns
mov
iret
cmp
call
add
cwtl
xchg
cmp
xchg
stc
xchg
jne
test
xor
arpl
push
int3
mov
xorb
pusha
jb
cmpsl
adc
cmpl
cmpsl
push
and
adc
pop
mov
dec
pop
push
pop
iret
imulb
in
mov
mov
add
lea
loopne
out
into
add
movsb
ja
call
arpl
std
repnz
mov
int
mov
sub
sub
fiaddl
and
jg
aam
jb
pop
arpl
fwait
js
and
ret
dec
stc
ja
sbb
mov
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
jmp
lds
lahf
movsb
loop
jge
cltd
mov
and
mov
sbb
pusha
stos
test
addr16
dec
dec
ss
dec
cmpsb
or
cmp
leave
mov
loopne
xorb
and
pop
jg
out
das
pusha
into
mov
lret
icebp
jo
mov
es
inc
lock
push
mov
cmpsl
popa
rclb
test
push
loopne
int
fistpl
xchg
or
push
outsb
imul
int3
jge
jae
test
call
push
lcall
or
dec
test
jmp
and
xor
cmc
xlat
lds
stos
das
or
js
popa
adc
bound
xchg
rorb
pop
xchg
ss
cmp
int3
mov
fwait
movsl
hlt
sub
cld
test
jo
gs
push
ja
sub
and
jo
sub
js
test
fxch
in
mov
jl
jl
fidivrs
fcoml
push
call
mov
push
or
cmpsl
movsl
cltd
and
test
mov
outsl
mov
push
sbb
sub
add
jne
or
dec
inc
or
add
xchg
push
int3
iret
or
add
mov
xorb
dec
xor
sahf
mov
sbb
hlt
daa
ret
nop
popf
adc
insl
jp
fisttpl
mov
decb
mov
jmp
movsb
pop
and
gs
add
test
repnz
testl
inc
xlat
cmc
lret
add
repz
movsl
das
and
es
sbb
adc
arpl
xor
push
mov
adc
scas
and
fs
sub
fisttpl
sbb
mov
fistl
arpl
dec
shr
mov
jbe
movsb
int3
test
mov
sub
and
pop
mov
adc
clc
or
jp
fsubrp
daa
shrl
xchg
into
inc
dec
shll
jmp
add
pushf
jle
and
ss
aad
aad
dec
sbb
pop
pushf
lcall
lods
inc
lret
sti
loopne
push
imul
mov
test
push
test
inc
dec
xlat
movsb
movsb
ret
mov
jno
fisubrl
adc
mov
mov
subb
repnz
jg
mov
bound
nop
mov
addr16
and
out
pop
jns
andl
xchg
mov
loopne
add
insl
inc
cld
test
testb
dec
mov
mov
iret
int3
add
and
and
loope
adc
cltd
xchg
mov
imul
imul
inc
movsl
mov
pusha
mov
cld
cmp
fsubrs
jne
cmp
cmp
adc
mov
cmc
fwait
xchg
into
lea
in
xchg
into
fwait
into
mov
mov
dec
sbb
and
cmpsl
ds
repnz
add
xchg
pop
rcl
xor
test
std
jmp
stos
sti
xchg
or
xchg
dec
sbb
jp,pt
jnp
cmp
daa
ds
scas
aad
and
in
sub
ja
sbb
addl
dec
scas
stc
mov
push
dec
jle
int3
mov
lods
dec
add
inc
lock
and
mull
stos
mov
mov
jge
pop
clc
dec
xchg
cli
xchg
aam
pop
and
push
lods
aam
in
jg,pn
pop
pop
add
dec
mov
les
or
gs
test
dec
imul
lret
adc
xor
je
jp
cmc
test
sbb
jle
insb
test
mov
js
pushf
pop
pop
jbe
push
rcrb
fwait
cmp
orb
xchg
mov
dec
pop
jmp
fstpt
cmp
xchg
jno
data16
ljmp
ljmp
mov
cs
sbb
fdivrl
not
sahf
adc
fnstenv
lret
rorb
stc
fimuls
cwtl
push
ja
data16
xchg
xchg
and
pop
xchg
inc
fs
arpl
dec
sbbl
loopne
std
movsb
shlb
adc
xchg
fwait
mov
divl
mov
adc
paddw
and
inc
mov
xor
or
mov
push
out
mov
xor
cmpsl
mov
frstor
push
fisttpl
cltd
xor
and
mov
sbb
inc
jp
insb
push
xchg
mov
pop
add
out
or
sbb
pop
int3
pop
adc
sbb
addr16
lret
and
xor
jl
mov
inc
mov
add
inc
sbb
daa
or
adc
cmp
push
jl
sarl
dec
icebp
hlt
cmp
mov
mov
mov
mov
std
and
adc
pop
in
jl
loope
test
mov
jae
je
out
sub
pcmpeqb
fstl
pop
lret
sahf
jb
aas
or
jno
shrl
xor
test
push
pop
adc
dec
imulb
das
ljmp
out
mov
and
push
popa
cmpl
cmp
fsub
pop
je
jnp
xor
push
jg
scas
lahf
minps
das
mov
loopne
mov
ja
imul
dec
cli
js
call
call
push
dec
sbb
pop
arpl
sbb
out
push
fnsave
cmp
mov
sub
lods
dec
scas
gs
pushf
sbb
cmc
in
xchg
std
rcrb
lret
mov
and
push
or
mov
push
repz
test
jae
lcall
push
lahf
add
mov
mov
inc
sub
jg
in
icebp
inc
scas
sub
pop
mov
cli
pop
pop
lret
or
mov
mov
dec
lods
lret
adc
mov
xor
or
xchg
orl
sub
popw
sub
mov
adc
nop
mov
pushl
fsts
xor
mov
lods
pop
xchg
stc
int3
fnstenv
std
or
test
jg
imul
clc
fidivl
cmp
inc
js
sbb
or
ds
fsubs
inc
lret
sub
std
je
xchg
and
cmc
test
in
shrl
stos
sub
pop
or
cld
inc
mov
sbb
popa
mov
xchg
addr16
shlb
cld
lock
jle
cld
nop
leave
repnz
xor
out
jno
test
pop
addl
outsl
or
scas
or
add
sahf
in
xor
lds
inc
out
sub
in
mov
movsl
lock
sbb
mov
sbb
test
push
movsl
shl
push
dec
dec
mov
insb
popf
ja
sub
mov
pop
call
jnp
sbb
jmp
ret
loop
add
enter
pop
gs
repnz
test
xchg
test
dec
call
pop
sbb
outsb
nop
mov
xchg
cmpsl
fisttpll
fdivrs
push
and
or
shll
cmp
aas
aam
fidivrs
cs
iret
xchg
les
cmc
jle
cmp
mov
out
sbb
ds
iret
loope
push
pop
jnp
inc
sbb
jle
cltd
cmp
mov
aad
mov
mov
jecxz
jne
in
insb
movsl
sub
and
inc
pop
dec
les
xchg
inc
xor
out
mov
gs
insb
loop
ret
jmp
push
hlt
cmpsl
aad
mov
stc
cmpsl
dec
jo
adc
adc
and
add
adc
add
dec
lret
dec
mov
das
mov
jnp
int
cmp
dec
add
imul
mov
popl
test
idivb
dec
xor
loop
pop
ss
mov
inc
lret
mov
popa
enter
pop
les
pop
stos
insb
out
aaa
sub
sbbb
fdivs
or
jnp
mov
cmp
gs
adc
cmp
push
push
scas
in
mov
aad
push
jge
push
push
ret
xchg
addr16
jge
mov
cmp
dec
jb
xor
icebp
mov
dec
pop
and
mov
je
loope
out
lcall
enter
in
gs
pop
out
enter
in
je
mov
mov
xor
shlb
push
testb
push
add
dec
pop
add
jns
mov
ss
mov
push
inc
dec
cmp
dec
in
add
mov
jbe
sbbb
cmp
jge
xchg
scas
orl
fstpt
dec
lret
movsb
mov
gs
int
mov
test
jbe
jno
addr16
cmp
cmp
ficomps
mov
sbb
lock
cwtl
pushf
std
insb
loope
adcl
pop
out
rclb
push
andl
in
inc
sub
xor
daa
sbb
adc
mov
or
push
sbb
inc
gs
or
loope
outsl
lret
mov
sub
repz
adc
test
fwait
pusha
pop
aaa
loopne
sbb
fstl
pop
mov
pop
sub
push
xchg
in
inc
xor
sub
test
lret
or
imul
push
sti
das
stos
jmp
cmpsl
xor
push
xor
sbb
adc
aas
push
daa
inc
push
je
mov
push
sub
inc
lods
xchg
popa
sbb
dec
push
lds
xor
push
sbb
and
cmp
lods
lods
add
sti
jmp
scas
insb
and
mov
adc
jnp
cmp
pop
sbb
xor
insl
or
xchg
sti
push
mov
and
pushf
adc
rcl
dec
pop
insb
div
data16
loope
dec
loop
xchg
pop
add
repz
mov
and
int3
mull
inc
adc
js
pop
dec
jg
xchg
push
call
push
push
sub
aam
adc
pop
pop
loop
mov
and
mov
jno
mov
mov
mov
sub
pop
add
cmc
mov
inc
lcall
pop
push
lock
mov
test
int
sub
sarl
add
cmp
push
sbb
lret
jp
fcmovne
out
pop
mov
loop
inc
clc
gs
scas
mov
rorl
mov
fwait
pushf
sub
sub
jmp
cmpxchg
test
inc
inc
out
repz
cmpsb
sub
ljmp
push
cmp
sbb
sbb
bnd
dec
lcall
cmpsl
jns
fcoms
pop
cmp
fs
popa
sbb
sbb
ficomps
xchg
pop
jmp
mov
mov
push
sub
out
mov
out
mov
cmp
xchg
test
add
jg
cmp
adc
inc
jb
movsl
lcall
jae
lcall
repnz
push
subb
in
push
mov
in
dec
shll
mov
imul
sub
sub
push
jg
sub
and
xchg
jnp
xor
and
dec
xchg
scas
pop
cmp
add
out
imul
mov
jl
pop
sbbl
xor
push
lahf
pop
fimull
out
jb
xor
and
out
sti
das
inc
push
in
mulb
inc
sti
cmc
mov
mov
stos
mov
mov
cs
loop
or
and
adc
mov
fmull
mull
addl
lods
sub
inc
xchg
cmp
sub
xchg
adc
and
jecxz
stc
add
adc
int3
inc
sbb
test
mov
inc
xor
outsl
cmp
mov
xor
xor
flds
mov
pop
dec
pop
jae
arpl
dec
mov
clc
and
das
sub
bound
pop
ror
add
ficomps
mov
inc
cwtl
cmp
or
ret
mov
jmp
notb
ficoms
jb
pop
test
ret
dec
jmp
mov
addl
lods
push
ret
ds
movsb
sub
fisttps
scas
push
lds
jp
xchg
test
call
mov
fildll
popa
inc
dec
sbb
cmp
dec
push
iret
cmp
sbb
pop
ds
pop
popf
push
scas
push
mov
jle
sub
mov
push
inc
sub
adc
or
xchg
shlb
mov
out
mov
movsl
and
and
aaa
cmp
notl
repnz
inc
fsts
loop
jne
adcb
lret
or
leave
mov
and
pop
jo
loope
adc
mov
pop
and
andl
xchg
fcmove
sub
iret
mov
fdivrp
jle
push
adc
loope
add
mull
and
mov
xor
xor
or
xlat
push
or
xchg
shl
dec
fs
lds
push
add
leave
fsubl
std
jno
andl
test
xchg
push
mov
movl
push
outsb
cmp
cmp
adc
call
rcrb
lret
shl
lock
inc
into
int3
and
mov
pop
sarl
and
sti
loop
fldenv
rclb
test
sub
inc
inc
push
dec
mov
xchg
out
xor
xchg
mov
pop
sub
cmp
repz
icebp
and
je
pop
mov
xchg
rorb
fistpl
sub
jb
sub
sti
pop
mov
sbb
pop
xorb
clc
mov
in
sub
sbb
or
xor
sub
insl
inc
test
add
test
lcall
mov
inc
mov
add
xchg
push
pop
lret
cmp
into
in
mov
cld
mov
roll
mov
popa
fnstcw
mov
js
sbb
pop
insl
mov
enter
pop
mov
dec
mov
mov
sbbl
pop
pop
ror
jno
pop
pop
ret
pop
pop
insl
test
lods
inc
jno
pop
call
mov
clc
sbb
pop
fisubl
in
inc
popa
aam
dec
mov
in
inc
or
imul
mov
push
call
int
push
shlb
cwtl
mov
std
push
push
mov
repz
dec
cli
cmc
sbb
insl
enter
pop
cmpsl
gs
lock
sub
mov
out
lods
pop
addb
inc
mov
mov
iret
into
cmp
enter
mov
fs
jo
imul
jno
and
fbld
insb
or
sub
mov
mov
push
and
les
pusha
mov
inc
adc
daa
push
jns
lods
xchg
dec
loope
enter
loop
push
stos
movsb
sub
jne
mov
fsubrl
movb
fwait
dec
inc
dec
aaa
sarb
pop
and
movsl
xor
push
lds
cltd
not
lret
pop
mov
dec
push
std
adc
mov
push
js
scas
mov
clc
mov
adc
ret
fs
dec
shlb
int3
mov
mov
mov
bndstx
js
dec
outsb
enter
dec
movsl
pop
mov
dec
push
arpl
jl
xchg
insl
ret
cmp
roll
push
xor
loopne
sbb
xlat
lock
adc
adc
mov
push
sub
lods
push
or
iret
imul
lret
or
pop
cmp
int
pop
add
loopne
cmp
arpl
fldln2
pusha
dec
movsl
jmp
cmpsb
rorb
and
jmp
enter
cmp
fsub
stos
mov
push
fisubrs
mov
fcmovnbe
mov
cli
mov
adc
xchg
jo
and
stos
test
call
js
inc
mov
cmp
sarl
fcomps
sub
add
sub
fcmovu
loope
and
pop
mov
sti
jg
pop
into
adc
das
test
aam
cmp
popa
cs
or
lods
add
xchg
in
dec
fcmovu
out
inc
push
ret
push
pop
mov
fcmovbe
push
aad
sub
rorl
ds
rcrl
subb
jnp
xchg
sub
out
or
xor
mov
in
int
or
out
pop
push
mov
add
and
cmpl
push
mov
jb
fnstenv
gs
xchg
inc
sbb
adc
pop
and
lret
or
dec
lahf
scas
js
jmp
dec
es
dec
pop
xchg
jmp
and
push
mov
jne
stos
mov
lock
inc
mov
pop
es
icebp
dec
cmp
rcl
mov
pop
pop
in
je
pop
inc
cmc
xor
sbbl
pop
mov
stos
cli
jmp
clc
int3
in
jmp
mov
loop
jne
subl
shll
and
inc
popf
pop
xchg
scas
xchg
mov
push
shrb
inc
ds
sub
inc
cmp
in
push
lds
and
xchg
jns
sub
lret
hlt
ficomps
and
cmp
mov
mov
xchg
push
cmp
shrb
data16
push
cmp
or
leave
or
mov
fidivl
adc
jbe
pop
sub
or
cli
add
jge,pn
mov
mov
ss
dec
jp
test
shlb
push
sbb
and
jg
push
test
inc
lret
pusha
nop
xchg
inc
stc
roll
inc
sbb
mov
adc
pop
mov
fisttps
cmp
fisttps
std
aaa
cmp
dec
jne
in
adc
or
fsubl
adcb
adc
and
adc
pop
xchg
mov
inc
xchg
sub
cmp
sarb
aas
pusha
popl
fwait
mov
mov
stc
nop
mov
xchg
in
jne
push
push
add
aas
adc
push
jge
pop
xchg
xor
aad
inc
mov
dec
add
call
cmp
sbb
or
mov
xchg
out
dec
rorl
jae
cld
negb
adc
jle
cmp
xor
sub
lcall
lcall
addr16
imul
mov
ljmp
aas
call
xlat
es
dec
stos
sub
mov
mov
mov
cmp
mov
xchg
sbb
or
add
mov
inc
xchg
mov
add
sub
push
xlat
pop
and
add
into
pop
add
push
sbb
shlb
andb
fs
jo
loopne
sub
mov
out
mov
sti
icebp
jecxz
inc
push
mov
cwtl
jbe
pop
adc
add
mov
rolb
mov
movsl
sub
mov
xchg
xchg
movsl
push
mov
dec
and
addr16
push
adc
inc
cli
outsl
sub
sub
int3
hlt
and
push
dec
mov
mov
sub
xchg
cmp
fsubrl
dec
jns
dec
imul
pop
adc
jns
lret
icebp
out
mov
xor
call
dec
je
sub
subl
inc
lcall
test
inc
cmp
fisubl
bound
lock
andb
add
cli
add
mov
mov
test
jle
movsb
sahf
dec
add
neg
mov
jbe
bound
sbb
sub
lds
xor
sbb
scas
sbb
lds
cmp
in
punpckhbw
fsubl
enter
into
jge
lret
cmc
popa
pop
out
fs
inc
inc
mov
adc
or
mov
out
call
inc
mov
mov
sbb
call
dec
cmp
sti
decl
out
adc
hlt
aad
pop
test
pop
xchg
into
jne
lods
fwait
cmpsl
mov
in
scas
faddl
mov
insb
outsb
dec
testb
roll
jmp
jle
movsb
or
test
fstl
sbb
leave
andl
pop
cli
mov
loope
mov
or
push
orb
dec
inc
or
cs
mov
enter
pop
int3
imul
in
or
cli
insl
or
push
test
pushf
cmp
insl
cmp
xchg
out
cmp
es
xor
dec
in
sub
lods
out
fwait
test
test
fs
mov
sbb
mov
ds
cmpsl
xchg
cli
xchg
mov
shl
and
popa
and
popf
mov
adcb
or
jno
cli
or
inc
test
fcom
sub
fdiv
jne
mov
jmp
fcomp
push
xorl
lods
sbbl
add
and
jmp
push
adc
test
inc
fldenv
cmc
add
pop
push
nop
ret
xchg
int
adc
stos
add
stos
xchg
pop
les
gs
fstpl
fdivrl
inc
repz
out
cmp
mov
or
add
inc
mov
icebp
or
jge
ja
sahf
aaa
add
xchg
jle
mov
adc
aas
xlat
sbb
mov
out
repz
mov
scas
adc
out
jg
loopne,pn
and
cmp
jmp
cmpl
nop
fildll
fsubrl
daa
xchg
sbb
dec
mov
sbb
inc
fcmovne
adcl
and
or
dec
jp
scas
mov
xchg
inc
inc
sti
push
loopne
in
mov
das
sub
xchg
pop
out
push
dec
add
xchg
aad
add
insb
inc
mov
sub
es
stc
pop
mov
mov
jmp
lret
rcl
mov
mov
mov
mov
mov
mov
jno
mov
lret
ljmp
push
ss
push
jmp
lods
push
xchg
fs
ret
mov
decb
daa
lods
outsb
clc
std
mov
dec
mov
jb
shrb
jns
das
es
jle
int3
outsb
roll
fidivs
cli
rcrl
xchg
mov
jb
stos
jno
lds
sti
sarl
xchg
imul
pop
mov
idivb
dec
sbb
hlt
pushf
fnstsw
sbb
add
in
lods
dec
les
or
sbb
jp
lret
inc
stos
je
push
test
lret
cmp
adc
fcompl
jle
jg
mov
clc
jne
adc
mov
insl
popa
mov
or
mov
aaa
mov
div
jg
test
mov
incl
inc
out
outsl
ror
dec
popa
mov
mov
pop
mov
stos
cmp
mov
mov
xor
test
je
adcb
js
adc
or
push
pushw
sub
dec
dec
add
in
xlat
xor
popf
inc
mov
jmp
cmp
not
dec
ret
sbb
pop
push
and
mov
push
or
popf
call
data16
or
and
imulb
loope
std
push
mov
ret
dec
daa
mov
mov
xchg
loopne
sub
pop
mull
shll
jmp
test
mov
lret
push
iret
cmc
movsl
add
mov
adc
dec
rcll
adc
jo
cmp
nop
ds
into
sub
arpl
pop
sbb
mov
inc
out
pop
adc
popa
sub
jmp
lahf
xor
lret
shlb
push
sub
pop
imulb
add
xor
sbb
int3
mov
jge
addb
sub
insl
outsb
xchg
in
mov
sub
ljmp
ret
sub
sbb
xor
loope
orb
ret
decb
mov
cwtl
dec
les
adc
imul
scas
adc
std
mov
add
fs
in
xchg
fcmovu
in
xor
sbb
rcl
dec
inc
iret
pop
ss
mov
jmp
gs
pop
rorb
test
xchg
aam
adc
xchg
mov
js
cmp
ret
adc
fsubs
loope
push
sahf
loop
push
jecxz
cmpsl
xchg
xchg
sub
cmp
push
cwtl
mov
mov
cmp
mov
xchg
dec
popa
pushf
mov
vsubss
fldl
icebp
in
repnz
scas
mov
jle
push
sbb
pop
cmpsl
push
mov
insb
or
faddp
or
mov
ljmp
das
mov
lret
orb
add
ds
and
pop
jmp
or
in
and
mov
mov
inc
push
test
mov
jmp
arpl
adc
inc
add
cltd
push
pop
xchg
in
mov
inc
aam
loop
xchg
sahf
jp
pop
stc
push
in
repnz
cmp
push
lods
icebp
ret
inc
ja
pop
push
push
xor
cmp
ljmp
cmp
or
add
fists
test
sbb
sub
lds
jns
je
lods
push
dec
loope
add
in
pushf
cmp
mov
enter
xor
fadd
xchg
add
mov
add
jo
or
or
sub
mov
mov
cld
push
cmp
into
mov
mov
test
sub
cmp
jmp
fucomip
scas
adc
and
testl
fiadds
ss
les
jne
icebp
fsubrs
stc
or
adc
incb
adc
mov
jle
jg
pinsrw
mov
in
mov
cmc
mov
mov
jae
sarb
movsb
pop
popa
xlat
push
stos
xchg
and
push
fisttpll
dec
repz
lods
mov
push
shll
sbb
or
int3
jmp
xchg
mov
pusha
xchg
sbb
add
outsl
add
loope
mov
push
in
pusha
nop
daa
out
out
cmpsl
xchg
mov
or
jnp
insl
stc
pusha
xchg
imul
jo
bound
dec
fwait
and
jno
andb
push
lods
mov
repnz
cmpsl
dec
jb
mov
lock
adc
add
cli
jge
dec
addl
lcall
int3
movsl
fstl
adc
rorl
arpl
mov
push
xor
lock
or
repz
gs
cmpsl
fnsave
sub
mov
jno
xchg
jb
xchg
push
ffree
mov
stos
loop
or
ja
repnz
into
sub
cmp
int3
popf
in
sub
dec
aas
jmp
fcmovnbe
cmp
scas
dec
addb
lret
mov
ss
outsb
dec
mov
lds
lods
pop
mov
xchg
inc
lret
cmc
repnz
add
mov
sbb
sbb
cmp
adc
rorl
jl
mov
push
in
aam
leave
pop
adc
mov
inc
jne
popf
test
vmaskmovdqu
shl
sub
in
out
aaa
xor
notb
idiv
sahf
repnz
adc
push
jbe
push
lret
stos
inc
mov
imull
bnd
xchg
push
inc
cmc
insl
lock
pop
hlt
aas
jae
pop
gs
jo
aad
add
or
notl
sub
test
orl
or
push
adc
adc
add
push
cmp
xchg
mov
cmp
pop
das
js
adc
mov
rep
mov
add
mov
mov
cmp
mov
xor
cmp
ljmp
dec
fadds
xchg
cmp
inc
inc
aas
ficoml
sti
int3
mov
mov
out
sbb
mov
pop
das
xchg
loop
add
pushf
mov
cmp
xor
mov
xchg
xchg
test
repz
imul
popa
faddl
or
insb
dec
pop
mov
sarb
jnp
adc
adc
xor
lret
test
xor
jne,pt
cmp
movl
pop
stos
cmp
mov
pusha
push
cmp
add
xor
push
inc
and
cmc
addr16
cmp
es
push
imul
jl
pop
out
mov
sub
adc
mov
rcrb
push
aad
pushf
inc
test
mov
sub
mov
push
hlt
fldl
aas
ja
xor
add
outsl
jo
in
jns
aaa
push
lcall
subb
aaa
addr16
scas
in
lcall
repz
subb
loopne
push
ficompl
mov
or
mov
lds
out
jg
lahf
fldl
jmp
je
stc
sbb
pop
test
mov
cvtps2pi
push
icebp
fldl
out
mov
jb
mov
mov
aaa
mov
addr16
mov
out
or
shlb
hlt
add
scas
xor
stos
aam
cmp
aas
adc
push
in
mov
loop
push
stc
jp
sahf
scas
sbbl
or
mov
push
jns
scas
mov
mov
push
mov
int
nop
push
dec
bound
outsl
push
ja
daa
scas
xor
xor
dec
shr
mov
inc
push
jp
pop
push
add
shr
lock
adc
and
clc
xchg
jo
xchg
test
cld
cld
rcrl
mov
repz
xor
sub
xchg
push
mov
jg
jnp
push
lods
mov
in
xchg
sbb
mov
leave
mov
fdivrs
jbe
loope
sub
push
pusha
icebp
ljmp
jno
je
imul
aad
shl
out
nop
mov
jmp
loop
xchg
aas
loop
xchg
mov
push
mov
pushf
fs
or
mov
jne
out
scas
add
cmpsl
mov
pop
fwait
and
jle
push
sbb
sub
cmpsb
cmp
cmpsb
xchg
test
xchg
jge
and
mov
repnz
xchg
add
ds
fwait
or
into
mov
adcb
mov
into
insb
cmp
mov
sbb
sti
sub
push
jl
pop
rclb
out
repz
aad
daa
jns
arpl
and
sub
ret
out
pop
jne
gs
test
ret
push
aad
in
push
movsb
call
add
inc
mov
fwait
dec
dec
popf
imul
and
cmp
pop
push
xchg
and
mov
rclb
bound
scas
push
push
cmp
xchg
fidivl
out
jo
gs
push
inc
or
insl
fstpl
pop
fildl
and
pop
sub
mov
pushf
fsubl
sub
imul
push
push
cs
mov
inc
daa
dec
das
bound
faddp
mov
lcall
scas
mov
xchg
jo
adc
push
fs
xor
test
js
lret
sbb
mov
scas
mov
fwait
cli
and
loope
mov
inc
xchg
inc
lret
pop
jo
jecxz
cltd
jb
lods
inc
push
cmc
les
jo
jmp
mov
in
shrb
dec
and
mov
out
sub
sub
popf
sbb
sbb
mov
scas
sub
leave
cld
mov
and
jnp
lea
mov
pcmpeqb
cwtl
out
fisubl
jge
into
not
and
mov
sbb
mov
in
sub
ret
lods
sahf
xchg
popf
sar
cmpsl
or
aad
xchg
mov
fs
daa
mov
xor
mov
rorl
pop
xchg
mov
out
mov
ja
sub
loopne
jge
ss
in
add
fists
lods
push
adc
and
cmp
jbe
and
inc
lock
push
fildll
scas
push
out
rorb
lods
xchg
jp
and
pop
movsl
arpl
sub
push
bound
pop
sbb
repz
push
and
aas
push
mov
add
sahf
jg
mov
pop
add
ret
sub
fcoml
rorl
mov
stc
mov
repz
loop
inc
mov
aas
add
push
xlat
xchg
repnz
into
repz
stos
sub
fs
aad
jne
pop
lods
jp
mov
lea
fwait
inc
repz
and
pop
cs
movsl
inc
mov
inc
mov
mov
xor
sbb
dec
add
lea
mov
push
addr16
lret
jo
flds
xchg
leave
sub
jge
loope
aaa
add
xor
adc
mov
insb
lds
dec
add
push
fstpl
cmp
subb
xor
push
aaa
imul
sub
je
dec
jecxz
cmp
js
push
dec
dec
mov
jmp
data16
inc
pop
mov
push
xor
fdivp
lret
loop
cmc
imul
jns
das
and
cs
sbb
insl
mov
loope
gs
scas
inc
enter
xor
aad
jg
inc
rcrb
mov
inc
add
push
mov
adc
mov
test
mov
add
loop
mov
fstpt
inc
icebp
lret
pop
mov
out
je
jmp
cld
fists
inc
scas
enter
mov
scas
cld
jg
mov
pop
inc
stos
or
loop
or
push
dec
dec
push
imul
mov
pop
gs
sbbl
in
add
ret
cmp
test
dec
xor
dec
rolb
jb
pushl
xor
out
lods
push
ss
lcall
pop
push
mov
jne
jno
movd
pop
and
push
and
aaa
mov
adc
add
fisttps
mov
pusha
mov
mov
cltd
in
dec
xor
repz
jecxz
mov
lret
ds
jp
rclb
pop
pop
mov
fmuls
push
xchg
mov
adc
lahf
into
mov
add
jecxz
movsb
loop
call
jbe
int3
lds
orl
lock
int
or
jl
push
insb
incl
xchg
jo
mov
jnp
jge
jbe
mov
cmp
decb
sbb
mov
xchg
movsl
sahf
pop
mov
stc
dec
cltd
mov
push
xor
sarb
dec
sysret
inc
stos
in
repnz
adc
insb
jg
xor
cld
jno
mov
cmp
mov
cmp
ljmp
pop
xor
fcmovu
or
js
jns
dec
mov
or
mov
sahf
popa
sbb
sti
lea
movsl
cmpsb
ljmp
je
addl
mov
sbb
mov
mov
ret
xchg
pusha
xorl
loope
hlt
mov
loopne
or
add
inc
mov
push
inc
cltd
rcrb
das
fnstcw
mov
pop
or
in
or
xor
inc
dec
rcrl
pop
mov
push
or
sbb
js
ss
inc
and
push
dec
mov
in
ficompl
pop
mov
loope
mov
loopne
dec
clc
scas
cmpsl
mov
movsl
adcb
outsb
inc
mov
and
dec
test
mov
lahf
add
arpl
mov
jb
mov
popa
das
cmc
cmc
mov
rdmsr
rolb
jns
jle
sbb
pop
sahf
lods
pop
mov
mov
xlat
mov
ss
sahf
arpl
push
inc
loopne
xchg
xchg
clc
cmpsl
les
or
inc
insl
jmp
hlt
xor
imul
rcrl
scas
mov
sbb
pop
fs
jae
ret
inc
enter
cmp
adc
mov
pop
push
popa
jne
loopne
push
js
mov
adc
testb
or
loope
mov
dec
mov
add
dec
js
iret
lret
addr16
mov
mov
ja
add
push
or
aas
popf
push
jl
outsb
fsubrs
mov
bndldx
mov
lcall
or
add
xor
xor
fistpl
mov
push
data16
mov
sub
fsubs
pop
out
or
push
jnp
fcoms
cmpsl
xchg
jb
rorb
in
push
out
and
mov
mov
pushf
addl
xor
xor
lock
popa
add
adc
jb
imul
cmpsl
mov
add
fldt
xchg
dec
in
daa
mov
xchg
sti
fsts
sbb
ss
push
xchg
mov
jae
push
dec
out
mov
cltd
into
mov
loop
jno
bound
fwait
add
push
sub
mov
push
xor
adc
lahf
je
add
and
and
lcall
sarb
cs
out
mov
inc
shll
jmp
aam
push
dec
arpl
adc
mov
sbb
imul
dec
stos
jne
cltd
out
jmp
add
cli
push
std
sub
mov
mov
ja
or
pop
mov
arpl
jg
inc
xor
loop
test
test
call
xchg
jmp
push
inc
lret
pop
xorl
inc
push
movsb
lods
inc
nop
loopne
cli
xorb
ss
mov
adc
shrl
xrelease
frstor
jle
cmp
mov
mov
mov
and
sub
pop
in
cld
push
dec
jecxz
popf
sbb
jbe
psadbw
cmpsl
cmp
lahf
rorl
dec
xlat
adc
dec
xchg
mov
decb
testb
sbb
sub
xchg
js
cmp
rorb
adc
and
sub
push
in
scas
iret
mov
std
add
jle
mov
sub
inc
in
test
cmpsl
mov
iret
addl
sahf
jmp
mov
lods
test
jne
sahf
cmp
shrb
ror
pop
outsb
rorl
movsl
push
out
mov
int3
xchg
repz
popf
jmp
icebp
int
dec
stos
rcrl
insl
lock
rcr
mov
and
clc
xlat
xchg
clc
and
hlt
dec
lret
lods
aaa
mov
sbb
in
out
adc
push
xor
or
xor
aaa
mov
xchg
cmp
fistpl
lods
imul
nop
mov
cmc
push
or
mov
xor
xchg
ror
push
jne
fxch
xchg
inc
pop
mov
ja
sub
xor
cmpsl
leave
fbld
pop
or
leave
xchg
lds
or
mov
sub
out
cltd
rclb
pop
jg
loope
in
outsl
sbb
mov
ret
xor
dec
nop
sbb
jp
dec
mov
and
and
ret
ss
js
sti
scas
fidivrl
das
dec
out
jmp
jp
inc
cmp
jmp
repnz
shr
test
xor
push
clc
pop
loop
mov
push
dec
mov
jno
js
inc
pop
xor
mov
adc
dec
pop
pop
sub
xor
dec
or
mov
jnp
cld
or
repz
js
rclb
mov
mov
mov
rol
jmp
sbb
mov
call
xlat
lcall
cmp
cmp
lock
negb
scas
jecxz
lahf
xchg
xchg
pop
add
faddl
mov
jne
movsl
shll
xor
jb
xor
mov
inc
inc
test
into
or
xor
jno
add
pop
shll
ss
and
or
pop
popf
fdivp
int3
jge
cmp
je
mov
and
shll
test
or
sbb
add
in
dec
xchg
cmpsb
jle
cmp
dec
scas
mov
mov
lahf
jnp
push
mov
and
stos
push
jo
std
push
shlb
or
xor
xor
lcall
cmp
inc
loopne
cmpsl
mov
sarl
push
mov
mov
add
dec
sub
sub
mov
mov
clc
lret
push
aad
cmp
imul
fistps
mov
adcb
push
movsl
add
stos
cmp
inc
fcmove
xchg
xchg
arpl
push
push
aad
out
push
inc
imul
fdivrl
outsl
cmpsb
adc
jbe
push
push
mov
fldcw
mov
xor
cmp
mov
xchg
mov
xor
jno
ret
sbb
sub
popf
xlat
in
lcall
out
inc
aam
jo
test
std
adc
stc
sbb
xchg
mov
sub
jl
dec
cwtl
out
cs
cmp
cmp
mov
pushf
or
cld
push
mov
mov
test
push
imul
sbb
fistpll
dec
xlat
mov
rcrl
xchg
lods
add
jge,pt
add
mov
sub
movsb
sbb
jg
xchg
sarb
xchg
and
sbb
test
popf
fwait
cmpb
pusha
jge
test
and
icebp
mov
push
insl
rcrl
mov
cmpsb
sti
sub
cmp
add
add
xor
inc
push
lea
enter
cmpsl
scas
fisttpl
mov
leave
int
and
mov
icebp
xor
xlat
aam
pop
movsl
pop
push
add
pop
push
daa
lcall
outsb
pop
mov
pushw
fisttpll
and
movsb
lcall
hlt
imul
scas
movsbl
mov
mov
xlat
movsl
mov
cli
ljmp
popf
jl
lea
stos
jne
int3
push
pop
sub
aaa
cmp
iret
xchg
sbb
cmp
and
test
jl
fsubrl
sbb
fsubr
popa
mov
jmp
fwait
mov
push
fs
aaa
sbb
sbb
push
enter
ja
iret
dec
xchg
cld
movsl
rorb
xchg
pusha
cmpl
mov
add
movsb
sahf
push
jae
lcall
mov
push
arpl
jmp
pushf
loop
scas
sarl
push
in
pusha
fcomp
out
cmp
jecxz
dec
fnstsw
cld
repz
and
ja
jne
mov
mov
movsb
andl
ljmp
xchg
sahf
xor
aaa
lea
add
ss
cmp
inc
pop
mov
popf
sbb
xor
jge
shrl
mov
cwtl
dec
orl
mov
out
or
add
push
and
xor
inc
and
pop
pop
repnz
xchg
pop
and
insb
cmp
dec
dec
sti
jno
xchg
sbb
shll
shr
loop
incl
cmp
dec
jb
dec
loop
aas
or
test
push
int3
ljmp
sbb
lods
stos
fucomp
cld
imul
pop
fisttpl
dec
jno
ja
mov
outsl
lods
jae
or
or
push
leave
xchg
out
jl
mov
mov
pop
xchg
shll
dec
jg
sub
push
dec
test
push
fs
mov
mov
xchg
test
pop
movsb
sahf
pop
js
es
dec
lahf
fistpl
fisubl
outsb
add
pop
repnz
and
or
xchg
sbb
dec
lcall
push
loop
ja
loope
mov
fmull
vmovdqu
enter
pop
mov
lcall
xlat
std
insb
sti
sbb
push
push
rcrb
je
es
cmpsb
pop
push
sahf
mov
pusha
imul
pop
inc
dec
jae
dec
sbb
xchg
insl
fs
adc
mov
jnp
nop
cli
mov
adcl
pop
dec
jle
cltd
cmpsl
and
or
cmp
cmp
dec
mov
pop
rcrl
pusha
sbb
int3
mov
cmc
or
insb
aad
mov
mov
lds
insb
outsb
leave
and
fnstsw
pushf
out
cmp
subb
int
aaa
out
cmp
jecxz
xor
aaa
push
in
xchg
xchg
cmp
sub
sbb
fcoms
loop
icebp
leave
xchg
mov
enter
nop
jge
pop
cmp
in
push
cltd
shlb
push
mov
ret
lahf
xchg
dec
inc
lds
in
lret
cmc
mov
mov
xchg
and
sub
repz
xor
mov
inc
xchg
fisubs
mov
cmp
jnp
sub
xchg
mov
pop
movsl
imull
cld
jge
add
shll
cmp
xchg
mov
leave
idivl
int3
rcr
mov
shlb
inc
outsl
lods
push
scas
xor
fs
pop
loop
or
sahf
test
scas
inc
lock
enter
mov
xchg
fdivrs
add
dec
xor
test
and
testl
test
push
lea
repz
cwtl
or
js
inc
or
pop
and
xor
dec
cmp
daa
rcrl
fs
popa
inc
push
sub
dec
cmp
or
mov
push
lret
cmp
xchg
fwait
xchg
sub
int
ds
xor
rol
in
shll
call
mov
mov
xlat
out
ljmp
sub
push
adc
sub
dec
pop
jae
sbb
dec
in
mov
int
push
cmp
gs
les
sub
inc
leave
out
lods
xchg
ficomps
pop
into
incl
adc
dec
jbe
jl
sub
sub
jnp
mov
jl
pop
mov
je
lea
lcall
fcoms
cld
cmp
or
cld
jne
pop
test
scas
es
mov
rep
mov
sbb
js
dec
xlat
xor
std
insb
cmp
sub
jmp
mov
idiv
adc
out
xchg
clc
aaa
pop
cmp
dec
insb
adc
xor
jp
ret
nop
xchg
fucom
mov
shl
pusha
add
icebp
push
mov
mov
ljmp
mov
les
adc
or
or
sub
stos
in
cmp
arpl
imul
cli
and
sbb
dec
scas
shl
jo
inc
shr
jno
jb
fadd
mov
dec
sbb
jmp
push
inc
and
dec
loop
sub
add
xlat
out
jae
xchg
movsl
pop
cmp
lret
jecxz
push
test
mov
repz
push
sub
inc
add
xor
outsb
xlat
xor
ja
outsb
xor
ds
push
cli
loopne
and
pushf
test
dec
cmpsb
stos
mov
fsts
mov
dec
mov
ror
add
movups
ss
inc
and
out
sub
xchg
inc
incb
imul
xor
or
adcl
std
cld
mov
mov
mov
xor
mov
sbb
adc
in
test
mov
pop
mov
sub
jb
inc
mov
mov
outsb
insb
es
inc
out
mov
repz
fmuls
dec
repnz
test
xchg
out
adc
scas
call
push
or
ss
dec
loop
push
shlb
stc
push
mov
fbld
stos
mov
pop
pop
jae
mov
icebp
or
lods
call
iret
sub
xor
mov
xor
outsl
fbld
cli
pop
xchg
jmp
xor
jo
mov
test
daa
jns
sbb
and
cmp
mov
mov
loop
mov
dec
push
adc
lods
or
cld
in
nop
cmpsb
insl
add
test
aaa
sahf
fisubs
mov
dec
push
addl
jg
mov
sti
add
push
inc
adc
xor
xor
test
or
test
adcl
push
push
adc
ror
loopne
jle
jg
xchg
and
xor
sub
push
rcl
rol
pop
loopnew
mov
push
int3
leave
in
ljmp
in
aad
xor
inc
adc
push
sahf
ds
jg
aam
in
or
push
mov
lret
fdivs
mov
mov
enter
dec
jge
cwtl
xor
jo
sbb
loop
fwait
mov
pop
xchg
sub
mov
xchg
test
mov
push
lret
dec
sbb
jecxz
jge
inc
loopne
push
in
adc
xchg
ja
test
adc
rorb
outsb
andb
and
push
mov
xlat
or
add
and
jo
add
lods
and
enter
fdivl
dec
scas
xchg
inc
sbb
sub
push
and
xor
movsl
and
fiaddl
pusha
call
lcall
mov
or
and
sub
enter
das
cs
push
lcall
loop
sub
dec
mov
mov
xchg
lahf
pop
lods
cli
fistl
mov
cmc
cmp
mov
ss
xor
out
mov
jle
or
xor
cld
sti
push
fdivr
addr16
mov
add
lcall
sbb
sub
test
ret
dec
jp
popa
shlb
cltd
out
aam
lods
xor
mov
mov
adc
std
daa
jmp
repnz
fisubrs
jmp
ss
pop
adc
cmp
imul
outsl
adc
aad
mov
sbb
or
test
jae
repz
out
mov
movsl
in
stc
in
xchg
cmp
and
mov
sbb
cmp
mov
jecxz
jp
cmp
fstpt
repnz
je
and
insb
es
inc
or
loop
jne
cltd
out
rcll
sbb
mov
jo
adc
push
mov
adc
stc
push
or
sar
xlat
int
js
mov
jb
popa
lock
or
addr16
dec
bound
cmc
mov
lods
mov
mov
or
movsl
test
pop
cmp
inc
dec
mov
divb
or
cmpsb
std
insl
cmp
bound
mov
and
or
sub
jecxz
repnz
decb
fcmovbe
add
xchg
int
inc
mulb
xor
mov
push
lret
inc
sbb
adc
inc
lahf
iret
inc
test
xor
xchg
adc
aas
loop
and
mov
mov
jb
jecxz
fcomps
lret
lods
push
mov
or
fsubl
out
comiss
sub
push
lret
in
arpl
pop
dec
sub
inc
imul
test
xorb
inc
fcoms
inc
out
jl
js
leave
mov
pop
mov
cli
cmp
ljmp
test
xlat
outsb
add
ja
inc
loopne
cmp
mov
adc
lock
scas
mov
mov
aam
shlb
fidivs
mull
ja
push
push
adc
mov
jnp
popf
jno
pushf
shll
insb
sbb
mov
call
inc
xchg
outsb
sub
std
movsb
out
push
test
jbe
addr16
aas
mov
jno
imul
loopne
rcll
or
data16
xor
or
xor
cld
mov
test
mov
xchg
add
jb
in
call
sbb
jecxz
arpl
push
jae
ret
adc
jge
or
loop
lret
or
adc
in
outsb
scas
and
out
push
and
inc
mov
or
rorb
pop
aas
loop
out
xchg
in
mov
xchg
incl
in
iret
les
repz
mov
jno
insb
insl
in
push
sbb
loopne
adc
xchg
test
insb
outsb
sub
adc
pop
dec
push
imul
in
das
pop
jbe
leave
leave
sbb
icebp
sbb
or
xor
pop
in
add
jbe
add
push
fsubrl
jle
sbb
jle
jbe
jecxz
mov
push
mov
arpl
scas
aas
outsl
in
int3
or
ljmp
mov
mov
inc
mov
dec
lret
sar
test
mov
push
out
mov
fcmovu
std
cltd
mov
in
nop
mov
adc
dec
add
je
dec
mov
mov
sbb
das
jne
int
push
xor
xchg
adc
nop
imul
jb
sub
jo
xor
mov
add
dec
imul
pusha
test
pop
jge
dec
loop
mov
push
sub
test
adc
jbe
add
push
cmp
subb
movsl
movsb
testl
lret
sbb
fstpl
imul
in
andb
mov
rcrb
push
pop
mov
cmp
push
xchg
out
mov
test
pop
push
dec
test
sbb
imul
jl
pushf
lock
arpl
pop
or
mov
dec
out
test
testb
or
int
faddp
fcmovbe
addr16
mov
iret
mov
and
or
pop
roll
and
xor
sub
mov
das
ret
dec
or
outsl
into
es
mov
add
mov
pop
xchg
dec
jne
aad
mov
fdivr
jnp
imul
jne
pop
test
test
pop
es
pop
xor
in
jg
sub
adc
lods
imul
pusha
js
fsubs
aas
cmc
lret
popf
jo
mov
fs
jno
sub
xor
int3
lret
dec
pop
jmp
stos
mov
or
pop
or
lods
pop
xor
add
add
mov
pop
hlt
scas
cmp
xchg
sub
ret
pop
outsb
add
rorl
repnz
adc
dec
std
xor
aam
mov
fsubr
mov
jg,pn
adc
aaa
sbb
subl
ret
fistpll
dec
jmp
lret
sbbb
xchg
mov
sbb
push
dec
add
jmp
push
and
clc
jnp
inc
push
inc
nop
imul
aad
mov
in
lret
push
mov
jno
stos
mov
cmp
shrb
dec
cld
add
cmp
fisttpll
rorb
sbb
mov
fsubrl
pop
sbb
jle
loope
and
dec
sub
fcomi
sbb
xchg
or
mov
mov
sbb
xchg
push
mov
sbb
mov
shl
mov
dec
pop
push
xorps
push
and
adc
lret
out
mov
cmpsb
jbe
lods
fs
clc
sbb
xor
lea
lahf
add
inc
sbb
ret
movsb
pop
add
sub
lods
push
xor
push
js
test
cltd
addr16
sbbl
dec
stos
leave
loopne
push
mov
test
test
push
pmulhuw
jnp
stc
mov
inc
xlat
outsl
push
pop
mov
jae
lods
jge
imul
sbb
lretw
fadds
dec
repz
pop
and
push
sbb
jle
sbb
mov
mov
adc
mov
sbb
sbb
mov
and
pop
mov
popf
jg
scas
adc
sub
arpl
add
and
or
jmp
cmpsb
mov
subb
rcll
pusha
iret
roll
xor
rcll
jae
sti
int3
stc
aad
mov
adc
ja
push
sub
push
push
xchg
andl
insb
and
cmp
shl
cmp
gs
aaa
cli
xor
mov
jbe
jne
adc
iret
jmp
mov
in
cmp
adc
dec
cmc
lea
sub
lahf
call
mov
ss
jecxz
movsl
cmp
adc
repnz
fidivl
subb
pandn
dec
loop
fildl
hlt
outsb
out
lcall
and
xchg
adc
std
addb
movsl
xor
cli
jb
lock
imul
pop
and
or
push
xor
popa
xchg
das
divb
daa
pusha
cmp
mov
sti
cmpl
mov
xor
pop
mov
jno
call
mov
cmpsl
dec
out
mov
fists
push
ljmp
lds
shr
and
cmpb
lds
xchg
inc
mov
lds
cmp
xor
dec
pop
lahf
pusha
enter
pop
rclb
jbe
cmc
aam
out
inc
icebp
pop
pushf
pop
sbb
cmp
insb
pop
cmpsb
pop
or
mov
int3
call
in
ret
mov
scas
aad
cmp
call
add
mov
jmp
testb
je
in
lods
insl
jnp
stc
sub
int3
push
mov
sahf
movsl
sbb
mov
movsl
hlt
dec
sahf
push
imul
hlt
std
sub
stc
pop
mov
cs
mov
xor
stos
mov
pusha
fnsave
loopne
test
mov
fstps
lods
xchg
mov
xor
arpl
cmp
mov
fsubs
jp
mov
movsb
mov
jge
mov
fcoms
out
test
es
xor
or
mov
js
out
movb
call
test
jno
fucom
stos
movsl
lcall
pop
xchg
cli
fimuls
daa
push
packuswb
mov
push
sahf
inc
js
xor
jecxz
or
les
pop
es
repnz
rcl
inc
arpl
aam
sbb
dec
push
mov
mov
and
inc
pop
out
fsts
add
call
js
or
pop
rorl
push
cli
jg
notl
xor
popf
sbb
jae
xor
adc
push
fsubs
pop
pop
xchg
cld
jo
dec
test
sub
xchg
mov
sbb
cmp
sahf
mov
sbb
xor
add
inc
popf
pusha
and
fs
dec
cmp
test
loope
and
scas
and
xchg
and
out
pop
je
ja
pop
inc
hlt
xchg
and
sahf
aam
fimuls
shll
cltd
push
sbb
pop
pop
fmull
int
scas
jo
scas
mov
repnz
jmp
push
mov
push
mov
lret
mov
imul
jmp
push
fs
sub
mov
and
into
inc
lcall
cwtl
test
adc
call
mov
sub
and
cmp
push
jnp
inc
xor
sbb
mov
and
cmp
jge
cmp
das
jp
gs
cli
cli
mov
in
jmp
js
cmp
fsts
sahf
cmp
addb
repz
xor
pop
icebp
fcompl
testl
jae
insl
dec
movsl
push
jmp
cltd
add
push
pusha
inc
fsubs
shll
idivb
test
stos
repnz
adc
ja
and
cli
mov
std
cs
add
pop
stos
call
test
popa
loopne
sbb
mov
sub
adc
sub
popf
mov
jae
pop
rcrl
in
push
out
ror
jg
sbb
fcmovnu
ret
cmc
insb
clc
push
or
sub
faddl
mov
add
mov
das
aad
mov
gs
sub
cmp
outsb
fsubp
loopne
mov
pop
or
mov
mov
push
or
stc
push
push
pop
and
sub
int
maskmovq
negl
add
int
add
scas
cltd
subb
lds
leave
jno
lret
inc
stos
ss
cltd
fildl
jo
test
cmp
sti
fwait
pop
and
add
imul
pop
xchg
push
push
xorb
sahf
or
out
mov
add
ficompl
cli
xchg
das
out
mov
mov
mov
scas
loop
movsl
pop
fs
mov
iret
add
das
out
sub
shll
mov
pop
popa
jbe
lahf
dec
push
jle
mov
das
push
pop
push
int
rol
pop
jns
movsl
mov
in
or
cwtl
fdivs
and
mov
sbb
ljmp
mov
jmp
pop
inc
lds
push
adc
push
jnp
mov
loope
pushf
out
dec
dec
mov
jmp
mov
enter
mov
push
xchg
fsubrl
xchg
jp
xor
pop
and
push
repnz
push
mov
push
inc
mov
jl
push
lcall
pop
inc
push
sbb
inc
push
icebp
sbb
dec
mov
xchg
in
push
and
pop
lcall
dec
sti
xor
adc
shl
cmc
std
jp
jnp
xchg
push
adc
cmp
mov
fstps
movsl
cmpsb
mov
or
fstpl
cmp
or
and
inc
dec
fwait
push
stos
pusha
mov
movsb
aam
jne
pusha
or
sbb
pop
xor
lcall
insl
scas
es
dec
cmp
inc
mov
dec
pop
int3
sub
mov
xor
sbb
jo
lahf
mov
pop
mov
cmp
iret
inc
jmp
in
cmovs
aam
jl
fldt
sub
mov
push
pop
outsb
or
jo
addr16
add
jb
mov
movsl
stc
mov
or
loopne
or
lcall
outsb
out
or
dec
sbb
repnz
push
outsl
std
pop
sub
mov
push
sbb
fwait
jmp
mov
jne
mov
sbb
std
and
out
jbe
subl
pop
push
sbb
fists
push
push
popf
add
out
dec
pop
int3
ficompl
lock
mov
movsb
mov
int
in
and
adcb
xchg
add
leave
addr16
and
rcll
ret
in
mov
in
pop
or
pop
jnp
and
push
push
jno
mov
jno
dec
jmp
lods
adc
imul
xchg
adc
sbb
out
fs
sti
mov
mov
cltd
shr
in
test
inc
cmp
rcl
push
cmc
bswap
mov
pop
mov
fadds
mov
xchg
add
outsb
das
andl
std
xchg
aaa
inc
iret
rorb
aam
xchg
adc
mov
fsubrl
arpl
jge
outsb
psubsw
dec
ljmp
das
mov
into
ret
and
and
adc
xlat
aaa
add
jo
jbe
scas
mov
movsl
dec
dec
adc
in
movsb
pop
mov
icebp
xor
imulb
pop
jb
jp
inc
pop
dec
out
xchg
lea
repnz
xchg
loopne
rcll
xchg
inc
or
mov
jne
push
ljmp
sbb
std
xchg
stos
pop
add
jb
push
cs
jmp
push
sub
fistpl
jae
nop
sub
add
je
xor
ja
in
out
and
loope
cmp
inc
scas
loop
xor
in
dec
lods
lret
les
add
ret
lret
sub
or
sbb
notl
cmp
push
jge
add
mov
jl
jnp
adc
lahf
mov
push
imul
push
shlb
xor
jle
shll
adc
ja
sub
stc
fiadds
movsb
mov
ret
fmulp
mov
shr
sbb
mov
cmp
ret
push
in
lods
inc
push
std
call
sbb
mov
jns
xchg
inc
lock
mov
cmp
int3
repnz
orl
xlat
add
rcrb
mov
into
es
iret
mov
loop
dec
sub
adc
jecxz
scas
out
dec
lcall
pop
int
gs
cli
sbbb
jno
es
fisubrs
scas
ljmp
xchg
xor
inc
add
arpl
mov
repz
pop
sub
imul
and
stos
mov
mov
arpl
jae
pop
mov
cmp
and
sti
mov
push
repz
xchg
pop
sbb
inc
pop
xlat
sahf
lret
cli
cmp
jmp
pop
cmpsl
ret
mov
fdivrl
jecxz
inc
lahf
jae
xor
xchg
push
cmp
adc
or
sbb
movb
aam
pop
mov
inc
in
pop
pop
dec
stc
stos
ss
xchg
cmpl
mul
cltd
or
sbb
popf
lahf
cmp
dec
mov
mov
sbb
sbb
andb
push
push
decb
and
ficomps
sbb
lea
inc
mov
jbe
out
subb
sarb
push
int
lods
outsl
xor
fsubs
cwtl
jecxz
push
push
jmp
jnp
sub
dec
mov
inc
movsb
sub
out
mov
cmp
sbb
fmuls
dec
push
faddl
rcr
xor
sbb
loopne
loopne
scas
aaa
jmp
xlat
aaa
ss
xchg
mov
or
enter
jle
movsb
sbb
iret
test
movsb
fs
call
call
or
cmp
sub
jno
sti
scas
mov
jle
mov
xlat
testb
bound
adc
cmp
outsl
fsub
mov
loope
mov
xchg
jns
into
sub
clc
jle
das
cmp
ret
iret
jnp
mov
into
and
cmp
es
fldt
in
sahf
mov
hlt
jg
mov
rorb
mov
mov
xor
add
pusha
scas
pop
jnp
add
mov
jae
mov
lds
test
lahf
gs
fldt
hlt
repnz
arpl
mov
sti
leave
push
das
outsb
pop
insl
mov
aas
out
mov
mov
push
pop
js
loop
cmp
xor
push
popf
mov
cmp
mov
cwtl
pop
lcall
sub
cmp
jg
xchg
xor
pcmpgtd
xor
cld
xchg
aam
xchg
ljmp
cmp
shrl
jbe
xor
or
movsl
mov
addr16
mov
dec
add
fisttps
test
int3
notl
and
inc
add
mov
popf
aad
out
fs
movsl
xchg
inc
pop
mov
push
icebp
daa
cs
lret
imul
std
push
jbe
and
inc
jb
lods
push
dec
mov
pushf
cli
ficompl
out
fdivrl
sarb
pop
jg
loopne
adc
mov
addr16
ret
popa
sahf
sbb
add
int
push
or
jno
nopl
sti
add
mov
add
pop
into
cld
movsl
push
mov
pop
jae
sub
jb
pop
popa
cwtl
jle
push
push
ret
jmp
dec
xor
jae
mov
inc
jge
sub
gs
int3
imul
ret
jle
xchg
insl
mov
test
dec
pop
ljmp
int
es
push
sti
mov
shrl
loopne
int
xchg
adc
nop
xchg
pop
cmp
insb
inc
mov
addl
cld
push
shrb
dec
sub
psrlw
jb
cmp
pop
adc
ror
jae
jle
imul
xchg
pop
popf
sti
outsb
sbb
sbb
sbb
or
xchg
mov
gs
mov
fwait
movsbl
pop
cmp
jno
push
cmpsl
jns
cmp
repnz
adc
arpl
cmp
or
add
mov
cs
mov
mov
add
dec
inc
dec
xor
mov
adc
js
nop
mov
leave
mov
sbb
mov
adc
ds
mov
xor
arpl
pop
push
adc
iret
xor
xchg
daa
shl
cmp
jns
aas
pop
btr
push
xchg
stc
popa
incb
xlat
xor
popf
imul
cmp
push
pop
add
es
and
mov
push
add
jmp
sti
out
sub
add
adc
sbb
inc
mov
sahf
xor
fcom
aaa
mov
xor
xchg
loope
xlat
cmp
movsl
and
leave
cmpsl
je
jl
add
mov
pop
mov
xor
adc
xchg
sahf
cli
pop
repz
and
ja
push
push
out
push
mov
xchg
addr16
in
lds
mov
mov
add
cmp
insl
and
ret
push
loopne
cmp
testb
daa
adc
ret
stos
std
scas
fcmovne
repz
push
add
push
insl
jae
bound
dec
aaa
jg
mov
mov
cmovns
fstl
punpckhdq
mov
mov
add
pop
adc
std
mov
inc
push
sub
daa
out
cmp
mov
repnz
xor
loopne
push
cmp
jge
das
movsl
ficoms
push
push
jb
fwait
call
outsl
mov
sbbb
xor
lods
cmpsb
xchg
sub
mov
sub
inc
ret
inc
sbb
sub
mov
dec
dec
add
mov
or
ljmp
aad
gs
repz
inc
in
aaa
daa
xorl
out
or
bnd
stos
aad
loope
jo
sub
jl
cmc
mov
repnz
insb
mov
es
and
xlat
pusha
scas
jbe
mov
push
jl
mov
cmpsl
sub
leave
mov
or
ficompl
je
add
inc
shrl
data16
insb
cmp
mov
jecxz
shlb
addr16
cmp
pop
int
mov
subl
dec
shl
mov
mov
sbb
adc
mov
or
mov
fcompl
cwtl
xchg
push
mov
dec
xor
sub
std
orb
rorl
mov
and
ss
jne
jns
xlat
arpl
push
mov
add
mov
imul
adc
dec
adc
push
iret
subb
ret
dec
subl
xor
das
cmpb
js
pop
push
inc
sub
fidivl
or
adc
add
int
push
loopne
and
or
and
cmp
in
jmp
ret
push
fldcw
push
jo
and
aad
sub
test
mov
cs
mov
sub
adc
dec
andb
add
jo
in
add
imul
dec
lods
icebp
inc
sbb
sub
mov
xchg
negb
mov
and
sbb
mov
add
jp
xchg
ret
and
or
fwait
int
out
jnp
daa
adc
sub
fcmovbe
lea
pop
popa
mov
shl
les
mov
sti
pop
mov
sbb
arpl
int3
je
stos
push
add
popf
mov
cmp
add
and
and
imul
inc
in
mov
repz
mov
push
dec
fmull
cltd
jp
aas
scas
into
mov
dec
cld
clc
xor
jnp
ret
imul
push
lret
sub
cmp
sub
mov
loope
lods
fs
imul
dec
fisttpl
pop
ror
lods
mov
divl
fucomp
sub
mov
lahf
imul
xchg
lahf
adc
lds
push
iret
out
int3
cld
add
mov
xor
xor
inc
insb
xor
inc
adcb
hlt
leave
mov
mov
fsubrl
push
jne
les
dec
mov
sbb
jp
lods
xchg
lahf
fmuls
dec
insb
dec
and
std
xor
cmpl
out
add
inc
cli
repnz
xchg
mov
test
int3
fisubs
adc
jge
mov
mov
mov
sub
sbb
sub
xor
jl
xchg
mov
inc
adc
cwtl
ret
lds
inc
test
outsb
mov
sahf
stos
jg
xchg
jle
shl
data16
pop
sbb
data16
ffreep
lret
dec
out
xchg
js
xchg
cmc
das
movsb
adc
les
imul
gs
ljmp
pushf
cmp
xor
mull
dec
add
pop
sub
pop
test
popa
ljmp
insb
mov
sti
fcomps
mov
lahf
push
les
fistl
idivb
lret
dec
sbb
jae
in
xor
xor
push
mov
and
cmp
push
loop
and
mov
out
xor
out
adc
adc
inc
idivb
mov
xchg
jecxz
fstp
rorl
daa
ss
icebp
cld
push
cmpsb
out
cltd
in
pop
pop
mov
cmpsb
repnz
out
mov
mov
inc
js
adc
xchg
xor
lock
cmp
divl
shlb
mov
xor
clc
mov
or
jnp
ficomps
sahf
xchg
lods
or
andb
pop
adc
mov
nop
pop
inc
jmp
mov
jbe
push
test
push
adc
cld
jae
pop
mov
fisubrl
je
sub
sahf
bound
add
call
cli
mov
stc
icebp
dec
pop
iret
mov
sub
dec
xchg
shrl
push
ss
repnz
nop
ss
je
fwait
cmp
imul
out
pop
xchg
mov
add
push
cmpsl
lea
jb
std
decb
sbb
add
xor
loopne
jnp
ret
jecxz
pop
loop
ret
pushf
and
jle
sbb
adc
mov
fwait
jb
in
fidivl
dec
mov
mov
clc
sbb
push
sbb
xor
out
or
push
outsl
sbb
cmpl
xor
mov
jo
je
jbe
mov
jge
out
dec
fs
rcrb
loope
ret
and
jge
in
out
aas
mov
or
inc
jle
inc
cmp
mov
mov
sbb
jae
or
xchg
dec
stos
mov
or
imul
out
inc
in
dec
cmpl
pop
pop
clc
insl
aas
out
inc
mov
adc
sbb
xor
mov
mov
jmp
mov
mov
loop
cltd
pop
mov
jge
cmpsb
pop
insb
aaa
mov
mov
mov
ljmp
stos
notl
cmp
mov
es
cmp
xchg
inc
fstp
lcall
cmpsb
jae
stos
xchg
test
sti
mov
mov
xchg
rorb
addr16
cltd
aaa
adc
mov
mov
pop
sbb
outsb
or
mov
mov
out
in
cmp
popa
jo
xchg
push
pop
out
mov
mov
ljmp
sbb
cmpsl
sub
xchg
sbb
popf
pop
jp
xor
sarb
test
pop
lods
lret
cltd
in
fadds
daa
test
add
fcmovne
addl
add
add
addb
fwait
xchg
xor
mov
loop
enter
jo
pop
sub
lahf
loopne
stos
cltd
xchg
cld
mov
push
rorb
fildll
out
jp
adc
popa
out
es
sub
aas
movsl
in
cld
xchg
inc
fildll
ret
mov
addb
fcompl
fisttps
add
xchg
lods
adc
xchg
shl
mov
movsl
sbb
push
pop
sbb
sub
rol
cwtl
sub
mov
movsb
sbb
ljmp
sub
in
call
loopne
int
jmp
pop
jg
xchg
cmpsb
dec
fadd
lahf
dec
pushw
and
mov
jp
or
jmp
dec
outsb
mov
push
cmpsl
fdivl
pop
insl
mov
fs
sbb
mov
jp
fwait
fwait
aaa
mov
fadd
leave
cmpsb
jl
dec
shl
dec
ret
out
adc
xchg
mov
out
negb
fldcw
fwait
popa
lock
adc
push
sbb
adc
popf
mov
stos
repnz
pop
imull
subl
mov
xchg
arpl
mov
inc
cltd
enter
test
fidivrl
mov
push
clc
mov
out
push
mov
mov
out
imul
lods
jle
sbb
sub
pop
sbb
fsubrs
fsubrs
mov
or
andb
mov
mov
jge
dec
imul
sub
test
ret
stos
cmp
mov
hlt
or
sarb
jecxz
sbb
push
je
add
and
imul
jne
pop
add
sbb
sbb
mov
xlat
daa
pop
rcll
inc
xchg
xchg
nop
fisubrl
pop
int
iret
xlat
inc
iret
or
stos
push
dec
jecxz
xor
push
imul
movsl
sti
sbb
shlb
xor
mov
mov
cmp
xor
xorb
fbstp
sbb
in
jp
ja
xlat
add
cmpsb
sub
jnp
fidivrs
data16
rclb
pop
pop
mov
push
xor
push
enter
icebp
stc
lods
mov
and
mov
push
test
in
push
addr16
out
cli
out
incb
inc
ret
iret
out
mov
fimull
push
inc
pop
lret
mov
sti
aas
mov
sbb
dec
dec
dec
adc
lret
dec
cs
out
dec
outsl
or
loopne
clc
lea
mov
sub
sbb
dec
mov
push
subb
sahf
cltd
and
mov
dec
subb
shll
mov
xchg
add
cmp
or
mov
mov
push
imul
cltd
sbbb
subl
pop
pop
or
lds
mov
jl
in
adc
sbb
sub
mov
xchg
shlb
dec
out
aas
call
and
and
loopne
pop
dec
ljmp
xchg
jns
js
and
sbb
decl
aaa
push
jl
lcall
lods
negb
pusha
sub
xchg
scas
es
xor
jg
push
mov
add
add
mov
inc
cmp
les
lods
fucomip
xchg
mov
mov
jb
jge
and
and
jno
push
jbe
es
add
and
imul
pop
rcll
hlt
mov
xchg
sub
in
xor
dec
sub
sbbb
add
pop
out
stos
pusha
sbb
sub
daa
xchg
cmp
ja
add
insb
and
mov
dec
aam
cmpsb
jg
mov
mov
ret
adc
xchg
scas
mov
push
jne
movsl
mov
jmp
lea
outsb
in
inc
rorl
daa
ljmp
inc
cmpsb
jg
scas
bound
test
cmc
mov
pop
ds
jne
in
xor
inc
dec
xchg
in
cmp
add
xchg
pop
pusha
sbb
pop
rcrb
jo
adc
pop
into
repz
cmp
mov
addr16
cmpsl
in
ret
mov
xor
inc
adc
mov
xor
mov
nop
in
out
outsb
shl
inc
scas
sti
lock
adc
sbb
hlt
jns
out
imul
stc
cmpsb
fdivrs
out
cmp
subb
sbb
push
mov
jmp
jnp
adcl
in
imul
inc
jno
cmpsl
cmpsl
cltd
add
pop
mov
popf
sbb
xor
out
add
dec
adc
add
mov
adc
mov
dec
pop
inc
cltd
imul
iret
shll
pop
repz
push
push
push
xchg
out
loope
pop
int3
jle
fcomps
andl
hlt
dec
jo
outsl
adc
in
and
jp
incb
idivb
test
out
stc
rep
outsl
outsl
sub
add
test
inc
mov
and
cmpsl
in
push
dec
out
pop
repz
lods
inc
jbe
jnp
scas
lea
xor
add
stc
ret
fwait
pop
int
pop
push
xor
jno
in
ficompl
filds
pop
subl
push
or
pop
stos
jmp
xlat
jae
push
enter
loope
dec
and
push
xor
cmp
call
shl
lret
or
sbb
fidivrl
aad
sub
jb
fcomp
jle
gs
lret
les
cltd
sub
sbb
xor
dec
in
pop
sbb
pop
scas
je
adc
subl
and
jp
dec
rcrl
and
jb
loope
xchg
xchg
je
call
xor
or
cltd
push
xchg
ficomps
fcompl
jl
jo
jns
add
pusha
dec
push
jge
adc
push
or
fidivrl
cmc
hlt
mov
in
push
test
xchg
ss
iret
xorl
in
dec
add
movsb
mov
jno
lret
pop
dec
push
fsubrl
lcall
test
fdivl
gs
xor
sahf
push
xchg
out
ds
sbb
cmc
imul
cmp
sub
xor
pop
and
add
pop
aas
inc
imul
cmpsb
mov
cmp
add
cmp
mov
int3
movsl
inc
fsubrs
xorb
sbb
pop
daa
out
xor
sarl
stos
cmp
add
mov
add
mov
mov
insb
iret
dec
scas
inc
cmpsl
or
mov
arpl
loope
in
imul
or
jecxz
pushf
dec
xchg
cmp
cwtl
jmp
sub
fsubrs
sub
in
xor
dec
xorl
or
lds
nop
fistpll
jl
xchg
xchg
xor
pop
outsl
lcall
roll
mov
dec
into
pop
pop
inc
dec
sub
aad
lods
inc
pop
lahf
ret
or
daa
mov
int3
inc
ljmp
or
iret
sbb
aas
jge
jmp
or
sbb
add
mov
int
lock
xlat
mov
cmp
ja
dec
imul
into
in
shll
mov
pop
test
sbb
ljmp
fistps
dec
adcb
sub
test
sbb
xor
add
sub
lods
sub
or
xchg
icebp
arpl
js
cltd
lods
adc
push
dec
push
sub
mov
xor
cltd
ret
or
lahf
jno
dec
xchg
mov
popf
mov
cmpsb
jp
jbe
xor
cmp
pop
jl
sti
mov
stc
sbb
and
xchg
std
in
push
lahf
adc
lret
fs
jl
push
mov
sarl
add
mov
and
cmp
inc
xchg
into
mov
pop
push
mov
push
cld
into
cli
xchg
and
mov
mov
imul
xchg
mov
out
mov
les
dec
push
hlt
lock
fwait
or
mov
stos
xlat
dec
prefetch
or
jle
mov
and
lock
jle
sahf
ds
mov
fmull
cld
or
and
jmp
addr16
call
xchg
loopne
or
and
mov
pop
adc
jmp
cmp
jmp
mov
divb
frstor
das
dec
stos
pusha
cmp
lods
icebp
jb
mov
mov
xchg
mov
push
pusha
adc
add
push
lahf
leave
mov
jnp
push
mov
fnstsw
jmp
aam
inc
int
sub
call
xchg
mov
jne
aad
push
jg
push
test
mov
jp
ret
jg
lods
and
and
xchg
sbb
pop
cmp
rcrb
jnp
aam
mov
cs
loopne
sub
movsl
xor
loop
sbb
out
cmp
push
jmp
lret
and
aam
fstps
ret
mov
mov
dec
leave
mov
sti
lods
and
orb
push
pop
leave
sbb
sub
je
mov
pushf
mulb
mov
int
imull
inc
imul
push
imul
lds
cmp
shl
sub
nop
mov
loop
mov
incb
jne
jne
fdivl
xchg
sbb
jae
les
add
jg
insb
adc
cmp
lods
inc
insl
and
es
loopne
xchg
fwait
mov
pop
sqrtps
out
pop
push
push
push
pop
je
pushf
nop
and
and
and
mov
call
popa
mov
cmp
adc
mov
outsl
lahf
xchg
jl
outsl
pavgw
push
or
mov
or
jl
shrb
jns
adc
shrd
xchg
dec
outsl
lcall
mov
mov
cmpsb
sbb
or
iret
repnz
cmp
adc
mov
stos
inc
add
addl
push
dec
mov
sbb
sti
cmp
insl
mov
ret
xlat
iret
or
mov
sbb
jmp
dec
adc
imul
cmc
xchg
repz
sbb
jns
loope
fs
xor
cltd
sub
cmp
shrl
or
repnz
inc
je
or
adc
pop
icebp
jns
cmp
aam
loopne
sbb
icebp
adc
dec
xlat
pop
pop
push
pop
push
in
adc
dec
mov
sbb
sub
jo
pop
sub
push
test
xor
in
jp
cmpsl
call
loop
pop
push
jle
in
mov
ficomps
push
sub
sahf
inc
dec
add
cmp
pop
movsb
mov
jp
negb
or
bnd
lea
movsl
out
jne
cmp
mov
inc
scas
cmp
adc
jno
sub
mov
or
xor
sbb
outsl
sub
lret
and
cmpsl
repnz
bound
xchg
mov
cld
inc
lods
stos
push
inc
out
adc
inc
lods
sbb
cmpsl
rorl
cli
rorl
shll
jae
sub
mov
adc
add
dec
xor
add
ss
jae
mov
sbbl
fimull
push
aam
mov
out
adc
lock
cmpsb
mov
push
mov
imul
mov
xor
mov
sbb
insb
insb
push
ret
push
scas
mov
xchg
push
inc
push
ret
inc
mov
ljmp
aas
aas
js
jb
adc
in
xchg
outsl
jne
lea
adc
mov
xor
ret
hlt
dec
imul
out
push
imul
in
fcmove
sarb
sbb
fnstenv
jns
scas
mov
repnz
and
inc
ss
loop
movsl
stos
jmp
aas
outsb
mov
mov
add
cmp
cmp
mov
mov
and
xor
mov
stos
add
mov
sbb
jae
jae
push
pop
das
dec
aam
jno
sti
lahf
push
mov
out
or
pop
jno
add
xor
jb
jne
cmp
add
aas
loop
inc
cmp
popf
daa
cwtl
pusha
test
popf
adc
dec
out
fsubs
jmp
rorl
add
mov
in
pop
cwtl
inc
jg
cmp
inc
sub
mov
adcl
mov
sti
xchg
scas
insb
fistps
or
adc
mov
popf
push
aam
out
add
add
cmpsl
insb
jl
mov
cmp
and
mov
sbb
arpl
das
cmp
xor
cmp
loop
aad
cld
jl
mov
add
mov
and
mov
movsb
xor
popa
push
shrl
imul
dec
sub
mov
aad
mov
push
jb
imul
and
pop
cmp
ds
stos
test
sarl
mull
ss
mov
fdivl
mov
dec
movsb
fildll
push
sbb
lods
push
ljmp
jg
test
jae
in
mov
mov
rcl
into
xlat
mov
jecxz
subl
insl
arpl
scas
testl
and
xor
adc
cmc
push
push
sub
sbb
dec
xchg
rcl
fisubrl
push
insl
push
lds
es
pop
fdiv
int3
add
out
mov
sbb
movsb
arpl
dec
push
outsb
inc
xor
push
test
sbb
pop
jg
pusha
and
xchg
push
xchg
sub
insl
dec
imull
stos
les
fwait
repnz
mov
leave
dec
mov
xor
js
mov
or
arpl
arpl
adc
xlat
jae
in
dec
fnstcw
ss
mov
andl
jns
xchg
out
sub
push
xor
pcmpeqd
dec
jbe
in
cltd
jl
inc
cmc
mov
test
cwtl
lods
adc
push
pushf
sub
outsl
pop
pusha
mov
clc
push
into
sub
pop
je
cmp
pop
mov
mov
mov
sbb
mov
or
jmp
lcall
xor
push
xchg
add
dec
xchg
sub
inc
lcall
mov
in
add
fnop
test
sbb
daa
sahf
in
shrl
adc
xor
cmp
imul
jg
add
aad
mov
addr16
mov
jne
outsb
loope
adc
sbbl
mov
aam
cmc
sbb
js
lods
inc
cmp
cmc
arpl
mov
dec
test
sub
pop
add
shrb
test
sarl
xor
cmp
data16
push
mov
and
shlb
xchg
xchg
cmpsb
xlat
cmpsb
mov
mov
cmp
push
cltd
and
outsl
push
and
loop
sbb
sbb
lret
iret
cmp
inc
inc
dec
iret
xchg
sub
xchg
mov
lahf
adc
mov
add
inc
push
adc
xchg
lahf
rclb
lahf
push
inc
fisttpl
test
popa
sbb
xor
cs
stos
cld
mov
push
mov
mov
clc
mov
xchg
les
mov
lret
fdivl
xor
adc
gs
or
cmpsl
enter
stos
std
sbb
pushf
dec
rorl
ret
xor
mov
dec
inc
xlat
mov
inc
adc
push
pop
xchg
negl
mov
rolb
mov
daa
iret
push
dec
loopne
adc
aas
loop
cmp
dec
cmc
aam
sbb
sub
mov
out
pop
mov
mov
bound
sub
es
mov
jno
cmp
imul
imul
aam
jbe
sub
out
pop
notl
out
sub
cmp
rorl
outsl
cmp
push
jecxz
stos
pminsw
lock
dec
xchg
int3
dec
sub
outsb
xchg
or
adcb
jmp
sub
pop
fwait
mov
leave
rorb
addl
mov
aam
xchg
sbb
imul
jg
imul
or
jo
pusha
sbb
mov
and
loopne
cmp
loop
push
pop
mov
ret
pop
lahf
out
xor
or
rcrl
fsub
hlt
xlat
and
jno
lods
int3
loope
xchg
mov
mov
outsb
rcrb
xbegin
fsub
loop
sahf
popf
icebp
dec
sub
push
cmp
push
jb
cmpsl
js
fbstp
xorl
add
lds
adc
cmpsb
xchg
imul
daa
jnp
bound
sub
xchg
adc
cltd
incl
mov
mov
add
int3
scas
pop
out
ja
cmpsb
mov
push
fs
add
fwait
and
add
add
push
sti
push
and
xchg
mov
pop
cld
cmc
sbb
in
arpl
scas
cmc
jmp
xor
rorl
cmpsb
mov
mov
dec
dec
push
jo
mov
lret
add
out
ds
sti
ud0
jp
cmp
dec
sbb
xchg
out
rcll
inc
dec
repz
add
sbb
mov
imul
push
sarl
pop
dec
jmp
sub
daa
push
dec
mov
shr
cmpsb
cli
out
adc
and
sub
pushf
xlat
les
sub
inc
cwtl
sub
or
jbe
pop
cmp
fldcw
sub
aam
mov
nop
dec
add
push
push
hlt
xchg
dec
rcrb
das
not
xchg
adc
lret
out
mov
fdivrs
push
inc
mov
fbld
sahf
lods
call
jge
cmp
insb
fucom
xor
aam
daa
bswap
dec
lahf
mov
cmp
lret
int3
jecxz
add
ret
test
lods
or
pusha
inc
cli
mov
or
or
mov
sub
das
lret
loop
xor
or
and
insl
push
dec
lds
stos
out
mov
data16
pop
adc
jge
fstpl
cli
psllw
and
push
movsl
icebp
addr16
pop
int
sub
jne
push
popa
add
lds
mov
in
inc
enter
push
insb
push
aas
cwtl
repz
fistps
aaa
xor
ret
jl
aas
hlt
dec
imul
jns
inc
dec
cli
jge
lods
jp
push
mov
cld
scas
lret
adc
subb
inc
push
pop
and
in
sbb
iret
pop
mov
push
mov
stos
mov
scas
or
addr16
sbb
or
negb
in
in
sub
mov
dec
popa
mov
lds
mov
inc
adc
mov
cmpsl
xlat
adc
pop
inc
push
push
insb
pop
out
inc
adc
hlt
iret
cmpsb
mov
mov
aas
push
pop
stc
adc
outsb
imul
cmpsb
pop
or
lret
es
lcall
fisttps
add
add
cld
xor
das
sbb
jge
mov
bound
out
mov
xchg
push
mov
push
loop
add
ds
sub
add
inc
outsb
adc
nop
aas
dec
xchg
jmp
pop
in
bound
lcall
sbb
ss
jg
mov
mov
jb
sbb
shll
xchg
fldl
scas
pop
std
mov
loope
lahf
mov
cmc
movsl
cmpsl
imul
inc
fstpt
jle
sahf
add
xor
sub
pop
mov
enter
daa
mov
pop
cwtl
add
rclb
mov
xor
jmp
jno
pusha
jb
cmpsl
pop
push
mov
addr16
shl
mov
lock
ja
scas
popf
sahf
jo
in
sbb
scas
push
out
scas
jmp
xor
lahf
jno
push
lahf
or
mov
les
xchg
xor
push
cmpsb
xchg
in
dec
or
incb
mov
jns
or
jp
xchg
out
aad
mov
lahf
adc
pop
fwait
sub
mov
cmp
push
add
subl
clc
sub
ds
lock
xor
lret
push
imul
movsl
push
scas
fucom
repnz
dec
dec
aas
cmp
add
jecxz
sub
xor
in
stc
adc
pop
cmpl
out
loop
dec
pusha
or
stc
mov
xchg
mov
push
xchg
adc
jle
inc
dec
mov
xlat
test
scas
xchg
testb
add
add
add
add
add
adc
add
movsl
es
std
push
out
dec
rcr
mov
sahf
or
mov
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sbb
adc
ss
sub
out
sub
out
sub
out
insb
fwait
and
pop
jl
and
add
add
add
add
add
add
test
add
and
add
and
movsb
insb
fwait
and
pop
jl
inc
add
rolb
add
and
add
add
add
adc
add
out
add
add
add
add
jl
inc
add
rolb
add
mov
add
add
add
add
add
pop
popa
das
test
dec
cld
mov
or
add
loopne
jo
add
addl
add
add
add
mov
add
jl
and
add
add
add
add
add
insl
stos
add
cmp
add
ficomps
cmpsl
fildl
add
add
jl
and
add
add
add
add
add
add
add
add
mov
mov
popa
mov
mov
mov
and
fs
insl
push
pop
mov
adc
hlt
xchg
ds
mov
scas
jmp
adcb
je
sub
mov
mov
cmpsl
mov
sti
ja
cmpsl
dec
aaa
pop
ja
insl
push
into
jle
stos
stos
xor
stos
sbb
inc
shufps
cmpsb
repnz
push
shl
xchg
push
jae
test
loope
call
cmp
xchg
test
xor
adc
sbb
rol
insl
jg
mov
je
mov
push
lcall
add
fcomps
sub
les
int
ja
push
xlat
sbb
cmp
jle
lcall
aam
jle
lret
outsl
inc
movsl
jnp
aam
mov
pop
std
mov
cmp
jp,pn
mov
jo
push
lea
adc
lods
sbb
test
mov
fdivl
inc
mov
or
add
mov
mov
arpl
mov
es
pop
xchg
adc
sbb
jno
std
xor
push
xor
dec
add
push
mov
jl
popa
xor
jnp
lock
xchg
fmulp
push
jle
dec
xor
call
push
add
jmp
out
lock
ja
fimull
lods
stc
popf
mov
pop
outsl
insl
inc
xor
mov
mov
cmc
testb
fildl
stc
push
push
and
mov
sbb
repz
stos
cmp
add
add
push
push
dec
xchg
adc
pushf
xchg
hlt
and
in
cwtl
adc
dec
xchg
inc
ja
jbe
xor
mov
into
mov
or
jg
jb
loop
sub
xor
adc
sti
pop
addb
inc
lds
xor
fwait
add
fldl
into
mov
dec
stc
sub
dec
add
std
mov
or
pop
adc
dec
mov
push
xchg
out
leave
movsl
out
xor
test
or
out
cltd
idiv
adc
push
mov
xchg
sbb
mov
insl
lods
pop
pop
fsubrs
scas
roll
fcmovnbe
pushf
cmpsl
call
pop
div
repnz
inc
mov
inc
idivb
jbe
inc
loope
or
adc
mov
mov
cmc
xchg
into
mov
sbb
int
dec
rorl
push
cwtl
frstor
repnz
xor
mov
leave
ja
xchg
add
ljmp
xchg
cs
lea
add
mov
cld
into
shl
and
ss
xchg
out
inc
cmpsb
mov
adc
jmp
incb
xor
mov
pop
mov
leave
icebp
arpl
adc
jle
test
scas
xor
stc
cld
add
push
aad
mov
cmp
mov
add
enter
sahf
ret
int3
gs
stos
xchg
sahf
inc
or
mov
out
rcrb
mov
jns
sub
add
lahf
rolb
sbb
jp
jne
frstor
mov
lock
sbb
pop
xor
divps
mov
cltd
pop
pusha
fistps
mov
and
hlt
xor
xchg
bound
cmp
sti
sub
push
lock
ret
fwait
cmpsl
mov
xchg
push
xlat
push
mov
stos
pop
into
and
xor
movsb
sbbl
loop
loopne
or
pop
mov
rclb
dec
in
orl
add
sub
ficomps
adc
fisubs
mov
and
andb
int3
sbb
cmp
cmp
xchg
paddb
mov
jb
jg
gs
sub
adc
imul
add
pop
push
sbb
push
push
pop
dec
test
icebp
stc
mull
inc
adc
cli
out
inc
sub
sbb
or
stos
pop
sbb
sbb
imul
cmp
xor
adc
das
inc
stos
ficompl
mov
fld
test
sti
or
rorb
xchg
inc
add
mov
dec
decb
push
sub
shlb
mov
push
lahf
in
push
push
scas
dec
sbb
sarb
hlt
jmp
flds
decb
outsb
xchg
mov
lret
cmp
lret
cli
sbbl
and
filds
cmpsl
scas
adc
sbbl
add
dec
mov
clc
idivb
outsb
adc
int3
cli
sahf
mov
mov
arpl
mov
add
cmp
push
cmpsl
aam
xchg
and
popf
push
xchg
cmp
xchg
je
movl
xchg
adc
mov
and
movsl
test
movsl
mov
push
push
mov
sbb
mov
imul
cmpsl
mov
xor
xor
sbbl
sub
push
inc
pop
in
xchg
add
into
jecxz
nop
popf
jnp
xchg
inc
jbe
dec
mov
sbb
cs
push
sub
xlat
je
js
dec
xchg
or
in
pop
subb
clc
aas
lret
stc
in
addr16
out
flds
insl
mov
fbstp
out
xchg
fldl
xchg
mov
cs
mov
fcmovnu
aam
cmp
ljmp
testb
pop
lret
fistl
leave
xchg
mov
cmp
std
mov
pusha
sbb
mov
mov
fwait
sbb
imul
push
push
cmp
pop
pop
jmp
pusha
mov
mov
imul
pop
push
mov
mov
ljmp
pusha
cmpsl
inc
xor
sub
adc
aas
mov
or
mov
arpl
mov
gs
mov
movsb
mov
movsb
sahf
fisubrs
test
push
xchg
push
mov
pop
aas
aas
mov
sub
push
or
and
xor
mov
jecxz
in
sub
scas
push
push
adc
xor
add
or
jecxz
jno
cld
out
and
movsl
movl
bound
fisubl
add
jne
cmc
outsb
push
xor
ds
push
punpckldq
pop
sbb
mov
or
je
dec
mov
pop
cld
lcall
xchg
push
mov
sbb
test
je
fwait
arpl
aas
jg
test
mov
push
gs
outsl
pop
jecxz
dec
mov
testb
xchg
or
ret
lods
lods
mov
cmc
push
sub
inc
dec
xor
aas
into
mov
jecxz
push
test
push
mov
sub
scas
or
aad
test
jbe
adc
push
data16
xor
icebp
enter
xlat
fwait
jl
and
and
roll
out
aaa
xor
sbb
inc
lods
lret
repz
iret
sti
dec
aam
inc
xor
loopne
pop
adc
or
shlb
jmp
xchg
ja
test
into
adc
cmp
out
pop
push
stos
sbb
loop
cmp
jne
mov
add
or
add
mov
mov
sbb
mov
negb
test
dec
mov
push
push
cs
dec
sub
jmp
xchg
mov
and
xor
mov
jmp
push
shr
adcl
pusha
subb
or
aaa
pop
jnp
cmp
cmp
cmp
and
xchg
adc
xor
mov
xor
mov
sub
test
flds
jbe
dec
lock
or
test
xor
negb
pop
es
out
push
imul
push
movsb
mov
ret
or
inc
orb
idivl
lahf
js
mov
mov
aaa
int3
notb
cwtl
push
inc
sbb
add
call
or
mov
imull
loope
scas
cmp
movsl
dec
push
push
xor
lcall
push
dec
sub
es
sbb
out
ljmp
mov
mov
out
dec
ja
cli
add
cltd
mov
jge
int
push
push
int
or
pop
fstpt
jecxz
hlt
int3
lahf
int
int3
mov
xchg
cltd
call
mov
pop
das
addr16
sbb
xchg
lock
ljmp
jl
cld
movsb
pop
popf
inc
stos
mov
mov
insl
push
daa
pop
cmp
icebp
cs
loop
mov
push
xchg
jmp
notl
scas
jbe
jb
test
ds
cwtl
sub
movsl
jnp
cmp
push
or
mov
leave
ret
mov
jecxz
sbb
insl
outsl
inc
call
shrb
cmp
pop
inc
into
js
inc
cmpsb
and
in
jle
cmpsl
or
or
jg
sti
test
test
dec
fbld
adc
mull
or
add
xchg
add
and
jns
jl
ss
cmp
es
jmp
jno
negl
pusha
mov
xchg
sub
sub
ret
sti
jl
lds
data16
lea
aaa
cmp
cld
inc
in
fidivrl
mov
pusha
out
or
rcr
imul
sub
xchg
mov
pushf
js
sbb
testb
test
pop
add
pushf
lcall
testb
mov
mov
iret
inc
sti
mov
xchg
call
mov
call
sub
ret
xchg
xchg
aas
sbb
sbb
mov
jmp
aam
mov
xor
inc
cmp
nop
mov
inc
dec
or
mov
jo
aad
gs
mov
push
mov
mov
je
in
dec
xor
jmp
pop
cmp
xchg
xchg
dec
sub
jecxz
mov
lret
fisttps
xor
or
das
mov
int3
lahf
lods
add
pop
cmpsl
js
sub
add
sbb
jb
sub
shlb
cmp
pushf
sbb
inc
test
adc
jbe
push
fdivl
fsubrs
jg
xchg
sbb
inc
ds
sarb
push
cmp
scas
and
or
add
les
cmp
pushf
insb
cmp
push
daa
test
xchg
icebp
inc
sub
lds
test
mov
jnp
cmc
sub
jecxz
in
pop
add
sbb
cld
mov
push
enter
push
dec
arpl
push
fsubl
mov
arpl
out
btr
and
in
push
adc
dec
stos
rorb
or
loope
sahf
je
dec
icebp
sbb
cmp
sbb
sbb
xbegin
daa
cmp
adc
jne
xor
xor
mov
les
fsubr
aaa
xor
sub
ljmp
sub
jle
cmpsb
in
lcall
xchg
rcll
push
aam
cmp
mov
cmp
dec
fnstcw
fadds
xlat
sub
or
cmp
add
sub
mov
call
ja
pusha
mov
mov
pop
jno
jmp
scas
insb
test
pop
pop
jle
xchg
mov
scas
add
sub
scas
dec
push
loope
inc
jo
je
decb
xorb
xor
lcall
or
and
push
jl
je
out
inc
jmp
lret
jg
cmp
pop
sub
mov
ljmp
sbb
mov
call
movsb
in
xor
popf
adc
xchg
pop
ret
test
jp
adc
orl
jns
push
ds
or
mov
lret
or
cld
jl
mov
pop
jns
mov
ffreep
cli
xchg
insb
in
pop
cmpsl
lahf
bnd
loope
repnz
mov
cwtl
in
mov
dec
cmpsb
cmp
fs
or
dec
or
fst
xor
pusha
int3
xor
xchg
push
stc
loopne
pop
sbb
xor
ret
sub
jl
jne
dec
or
mov
sbb
movsb
dec
mov
inc
aam
jno
xchg
lds
or
mov
mov
dec
or
jle
jge
xor
icebp
fcmovne
inc
pop
sbb
or
xchg
aas
jnp
ljmp
test
inc
push
adc
jne
and
test
repz
xor
mov
sub
dec
and
inc
mov
sub
mov
jle
inc
icebp
xlat
mov
ljmp
loopne
or
aad
stos
and
std
outsb
or
sub
lea
popa
fcmovnu
mov
adc
ss
mov
push
lds
fdivrl
xchg
int
adc
mov
xchg
pushf
push
mov
xor
mov
addb
sub
sub
and
inc
xorb
frstor
in
stos
fs
fsts
dec
mov
inc
aas
mov
mov
fimuls
dec
sub
inc
fisubrs
cmp
xchg
adc
test
imul
pop
jns
and
test
gs
sti
and
in
xchg
mov
jecxz
aaa
out
mov
fs
push
dec
aas
data16
ds
imul
js
pop
xchg
xlat
lret
and
xor
cli
outsb
add
in
xor
adc
ret
cmp
ret
or
mov
push
cld
mov
xor
stc
dec
out
sub
fwait
dec
push
pop
pop
fcoml
mov
cmpsb
fidivs
ds
sub
test
jns
icebp
loop
dec
sub
shrb
inc
dec
rcrb
cld
cmc
lcall
scas
ret
or
fidivl
pushf
xor
inc
out
mov
push
adc
dec
mov
pushf
sarb
loope
adc
inc
push
inc
mov
push
or
ficoms
mov
push
lods
or
pop
add
shll
out
jns
cmp
jne
es
adc
lret
pushf
neg
mov
mov
or
jae
xchg
pop
mov
mov
je
test
cmp
push
rcrl
xor
cmp
stos
push
faddl
sbb
pushl
in
mov
fisttpl
jle
insl
jbe
xchg
ljmp
les
pop
or
lods
mov
ss
loope
scas
ds
jo
call
enter
idivb
insb
dec
xor
add
shrb
add
or
dec
dec
addr16
cwtl
notl
dec
jns
lcall
sub
mov
jl
cmc
adc
clc
cmpsb
jne
out
or
mov
xchg
jmp
shll
adc
je
cmc
mov
mov
movsl
pusha
jle
mov
mov
in
cmp
adc
fistpll
test
pop
jno
push
jmp
or
jb
stos
jmp
rep
idiv
das
vpcmpeqd
and
rcll
rcl
add
stos
mov
dec
cmp
push
mov
mull
stos
pop
mov
test
mov
lds
or
adc
out
inc
mov
lahf
pop
adc
pop
out
xor
dec
enter
iret
lock
out
outsl
dec
or
dec
and
adcb
stos
int3
jl
decl
mov
unpckhps
mov
xchg
inc
loop
insl
iret
and
jmp
and
in
pop
into
xchg
pop
cmp
jp
daa
add
jns
fnstenv
das
adc
jnp
icebp
cli
push
stos
js
jmp
imul
inc
pop
mov
and
inc
sub
xor
cltd
or
test
sub
iret
clc
sub
stos
lret
pop
test
mov
dec
nop
aad
shrl
pop
push
pop
or
add
mov
cmp
int3
test
sbb
inc
pop
and
iret
jge
or
cmp
dec
stos
and
jmp
sub
ljmp
inc
sub
mov
fistps
dec
fs
fdivp
dec
lods
cmp
push
and
xorb
cmpsb
cmp
push
out
js
push
xlat
sbb
pop
jb
scas
xchg
adc
out
scas
pop
mov
mov
sbb
sbb
xor
repz
mov
fs
lret
pop
fsub
aas
in
inc
ds
jge
ficoml
or
int
repnz
inc
jae
cmpsl
inc
insl
repnz
cmpsb
pop
repz
adc
jmp
mov
inc
xor
mov
in
cmc
inc
mov
pop
pop
lea
shlb
push
scas
fdiv
std
dec
nop
mov
or
or
lds
mov
and
fwait
mov
jp
adc
xchg
rep
cmp
out
sub
push
fisubrl
sub
push
dec
add
repz
inc
mov
fiaddl
or
in
imul
inc
jmp
insl
les
cmpsl
xlat
mov
sbb
cwtl
pop
sub
dec
jp
test
or
mov
das
xchg
xchg
jmp
ficompl
sbb
addr16
popf
mov
ret
and
int
cmpsb
ja
loopne
popf
leave
ret
cmp
or
add
dec
mov
adc
dec
movsl
pop
aad
cltd
lahf
cmp
mov
dec
mov
mov
xchg
sbb
add
aam
lcall
mov
js
sub
pop
out
ds
shrb
dec
pusha
fcom
aas
icebp
call
dec
shr
jbe
pop
lock
aad
ljmp
lock
lods
mov
push
jnp
insb
cld
mov
or
stos
or
pop
test
lret
inc
aad
xor
cmp
jnp
cli
sub
add
je
mov
add
shll
bound
test
test
testl
es
fucom
fadds
adc
mov
sbb
aam
je
sbb
ret
mov
cmc
cwtl
outsb
outsl
lcall
sti
and
pop
cs
push
int
dec
int3
dec
jg
mov
or
cmp
push
lock
in
pop
dec
lret
cmp
movsl
nop
outsb
pop
jle
mov
add
pop
sub
lds
pop
sbb
mov
pop
lock
pop
aam
inc
dec
call
fmuls
movsb
adc
loope
fmull
add
or
call
xchg
push
test
or
mov
iret
sub
add
xchg
lahf
nop
dec
ss
test
jae
cmc
insl
mov
outsl
jb
cltd
icebp
xchg
call
es
inc
dec
flds
js
push
push
cmp
xor
adc
insl
hlt
aas
or
sub
ss
push
and
aad
dec
xchg
sub
jns
leave
lds
jno
loop
loop
dec
addl
sarb
jg
nop
mov
add
or
jno
popa
stos
call
cwtl
push
mov
jne
mov
icebp
dec
dec
jb
push
in
mov
outsb
fwait
cmp
gs
dec
fildll
icebp
testl
nop
jns
sub
out
and
mov
xchg
sahf
stos
cmpsb
fs
movl
jae
dec
subb
pop
in
imul
cmp
out
idivb
insl
mov
rol
cmc
nop
jle
aas
mov
jmp
addr16
add
jbe
add
mov
test
jmp
inc
loopne
jno
dec
in
popa
ffree
shr
mov
in
hlt
sub
or
pop
into
fsub
mov
inc
push
je
fs
aaa
out
push
aaa
xchg
aad
mov
adc
mov
fcomps
scas
jbe
push
mov
mov
test
mov
add
mov
xor
jge
add
hlt
adc
xchg
subl
pop
addl
repz
mov
test
out
les
out
lds
or
data16
sarl
and
push
add
pop
push
dec
outsl
xchg
push
lret
jb
popf
or
jp
mov
test
dec
push
sbb
aam
pop
popf
out
pop
ds
mov
lret
pop
mov
loope
data16
push
into
aad
gs
jo
mov
mov
mov
push
clc
adcb
adc
dec
sahf
dec
add
fistps
mov
cltd
sub
bound
jmp
xchg
jmp
cltd
subps
inc
mov
test
cmpsb
push
push
lods
xchg
lock
je
mov
dec
mull
mov
jo
test
popf
adc
push
xchg
icebp
mov
sub
cmpsb
sarb
pop
push
sar
data16
movsl
jmp
jnp
roll
jmp
fwait
mov
jge
test
fdivrp
cmpsb
lock
xlat
movsl
loop
aad
mov
mov
mov
imul
test
and
adc
xor
pop
adc
and
pop
aaa
movsb
cwtl
mov
xchg
mov
mov
out
jle
xchg
cltd
mov
push
sahf
int3
mov
xchg
std
icebp
test
cli
jne
stc
and
out
adcl
inc
aaa
pusha
mov
scas
ljmp
imul
not
movsb
push
adc
jecxz
adc
fidivl
fiadds
cmp
xor
xor
nop
inc
es
lahf
push
aad
movsb
cmpsb
jp
ret
jns
das
sbbl
mov
repnz
aam
aad
stc
enter
mov
sti
push
xchg
popf
xchg
mov
std
push
mov
ss
add
popa
sub
dec
loope
cmp
jb
sbbl
int3
push
mov
or
push
sub
f2xm1
test
xchg
jno
dec
xor
cmc
cmpsl
jmp
push
xchg
dec
icebp
xor
js
int3
sbb
les
in
maskmovq
notl
mov
pop
add
adc
adc
in
and
jbe
inc
xor
sbb
sbb
jmp
push
lds
ja
jmp
xchg
fcoml
cmp
mov
pop
push
scas
imul
int3
mov
sbb
in
in
sbb
jp
push
and
shrl
mov
sub
jb
push
lods
sub
xchg
xor
jl
std
lcall
cwtl
add
lock
sbb
fwait
and
popf
dec
cmpsb
fsub
pop
push
fisttps
test
sub
out
mov
stc
dec
repz
dec
es
jmp
add
mov
dec
mov
sub
je
in
xchg
je
adc
and
xchg
sti
adc
xor
iret
ds
add
adc
push
inc
mov
ljmp
mov
setno
ja
fldenv
pop
mov
dec
cmp
push
imul
iret
insl
gs
jl
das
test
dec
pop
pcmpeqd
adc
xchg
jg
push
aas
aam
pop
mov
push
in
jne
push
fs
pop
fwait
and
xchg
add
inc
imul
jl
sub
lea
rcll
or
bound
cmp
xor
lret
imul
jb
sub
into
test
ja
and
into
aaa
add
mov
xchg
jae
test
or
and
inc
out
popa
xchg
cmc
xor
cs
ja
cmp
and
pushf
inc
test
sahf
sbb
add
adc
dec
inc
stc
nop
sub
cmp
add
mov
push
adc
aaa
push
or
or
mov
hlt
loopne
dec
adc
test
lea
and
jbe
mov
xchg
jb
add
shll
inc
add
jae
arpl
mov
ljmp
dec
insb
xor
mov
pop
push
outsl
sub
insb
xchg
inc
dec
cmp
in
xorb
sub
ror
mov
mov
aaa
mov
mov
or
mov
jge
sub
pop
jns
push
dec
into
sahf
add
jo
js
stos
stos
mov
fwait
imulb
mov
dec
out
cmpb
or
mov
lea
dec
xor
ret
out
mov
icebp
arpl
xor
add
pop
mov
ret
scas
pop
add
jecxz
sub
sbb
mov
inc
lret
cmpsb
inc
cli
mov
outsb
push
mov
and
insl
sahf
lret
jle
sbb
std
nop
mov
add
je
je
pop
sub
jmp
and
ret
add
ror
pop
mov
out
push
dec
sub
or
sub
dec
cmp
mov
jl
add
cmp
mov
jns
notb
jp
aam
jecxz
push
mov
mov
dec
dec
xchg
or
add
add
and
add
push
inc
inc
push
add
push
hlt
iret
mov
inc
xchg
stc
push
mov
xor
add
es
mov
push
jbe
dec
jno
inc
ja
jecxz
rcrb
mov
add
inc
leave
pop
arpl
push
xchg
lcall
call
xor
mov
daa
pusha
decb
sbb
ret
xchg
icebp
fnsave
shld
add
pop
jmp
cmpsl
and
push
adc
les
mov
dec
addr16
in
lock
mov
xchg
xchg
shll
mov
std
or
dec
enter
xchg
stos
out
aam
push
add
cltd
bound
addr16
popf
sub
mov
mov
shlb
mov
out
cmp
loop
and
xor
xchg
dec
sub
mov
jl
mov
lods
leave
mov
in
dec
lea
or
cmpsb
lcall
enter
movsb
mov
pop
xor
repz
xor
inc
dec
mov
aas
jle
lods
dec
lcall
shll
pop
imul
add
push
lahf
jge
jp
movsl
sbb
outsb
pushf
aam
cltd
cmp
mov
divb
pop
cmpl
and
fistps
pop
cmp
sub
xchg
dec
outsb
jb
mov
sub
mov
daa
nop
fsts
push
adc
mov
pusha
dec
ret
inc
sub
mov
xor
xor
sbb
jp
add
adc
cmpsl
test
clc
mov
jle
andb
pop
xchg
or
insb
in
arpl
out
imul
pop
imul
jnp
dec
fs
push
stos
or
mov
jnp
adc
je
add
repz
xor
sbb
pop
pusha
xor
add
test
sub
insb
out
shrl
pop
jp
loopne
icebp
xorb
pop
sbb
in
in
mov
jae
add
cld
cmp
mov
mov
sar
adc
fwait
fldt
push
push
sbb
fyl2x
mov
xchg
popa
movsb
pusha
add
or
stos
out
jl
adc
mov
sub
mov
stos
aad
repnz
sbb
ljmp
imul
nop
fs
cmp
xlat
mov
push
jp
sti
sub
loope
stos
sub
pop
lods
pop
int
mov
pop
std
enter
dec
inc
and
cmp
insl
into
aam
or
or
lret
sbb
add
mov
adc
fistpll
scas
jge
js
shlb
scas
jg
cwtl
jecxz
loopne
push
lods
pusha
jb
enter
cwtl
push
cmpsl
into
out
sbb
sbb
push
inc
mov
cmpsb
adc
xchg
mov
ret
xchg
xchg
fists
and
and
jbe
fwait
ret
sub
xchg
jmp
icebp
sahf
xor
mov
jb
test
dec
jnp
in
popf
mov
enter
jl
mov
fmull
or
pop
aam
nop
xchg
inc
xlat
insl
sbb
es
arpl
popa
ljmp
stos
add
insb
or
testl
es
jne
inc
repnz
loop
xchg
lods
fidivrl
or
out
sub
int
cld
lds
inc
sarl
jmp
insb
and
jg
jp
jo
in
call
stos
test
insb
inc
insb
add
sahf
scas
sub
mov
or
and
divb
andb
cmpsl
movsb
fbld
cmp
pop
cmpsb
pop
fcomps
lret
rcrb
pop
dec
stos
pusha
pushf
rol
pop
sahf
push
test
mov
dec
xor
add
cmp
add
mov
nop
sub
xor
repnz
mov
inc
sbb
hlt
mov
leave
popa
int3
repz
or
arpl
pusha
lea
icebp
ret
insl
pop
mov
test
std
outsb
dec
fsub
cmp
mov
call
and
imul
jbe
mov
daa
addr16
or
daa
add
mov
jnp
imul
mov
mov
cmp
xor
xchg
pop
in
push
xor
int
imul
scas
add
mov
xchg
pop
sbb
sub
and
lock
mov
sbb
lret
cwtl
jbe
jno
lock
dec
xor
aam
xchg
dec
mov
loop
leave
cmp
pop
nop
jmp
repnz
push
adc
scas
push
sub
ret
aam
loope
les
testl
arpl
orl
push
data16
int
lret
fiaddl
push
mov
xchg
push
pop
add
inc
insb
xor
mov
lock
pmulhuw
mov
cld
mov
lret
mov
js
inc
in
test
iret
dec
daa
xlat
insb
repnz
and
jns
enter
repz
dec
mov
mov
repz
pop
inc
pop
jl
std
xchg
imul
inc
in
aaa
xor
cli
loopne
ror
gs
sbb
dec
inc
cwtl
ficoms
jnp
movlps
dec
jmp
stos
bts
sbb
mov
xlat
mov
or
stc
mov
mov
mov
pop
pop
mov
cs
mov
mov
jg
xor
popf
mov
jg
xchg
pushf
shlb
imul
lret
jge
cs
mov
int
adc
insl
flds
insb
or
mov
sub
inc
push
aad
sbb
xor
clc
xor
and
xchg
jbe
repnz
push
ja
or
push
ja
adcb
lea
inc
ret
int
popf
imul
jne
xor
xor
stc
pushf
dec
incb
cmp
xor
sbb
out
pop
jnp
xlat
imul
scas
pop
cmp
push
shll
mov
fs
cld
fwait
pop
and
mov
mov
cwtl
pop
mov
lcall
lcall
enter
das
cmp
push
xchg
inc
das
rclb
sub
stos
mov
fimull
jg
jno
insl
movsl
add
pop
lea
scas
insb
mov
gs
icebp
mov
mov
xchg
add
jle
bound
js
add
movsl
aaa
xchg
out
lds
push
std
mov
fdivrl
in
fwait
add
addr16
lret
mov
int
test
scas
xor
inc
fucomip
adc
out
jbe
push
inc
fildl
je
int
sbb
stc
sub
or
sub
xor
pop
repnz
push
cmp
iret
add
sub
adc
jecxz
sub
push
pop
lods
les
pop
popf
mov
sub
pop
and
push
push
push
loopne
outsl
mov
or
pop
xorl
mov
pusha
bound
in
repz
jg
or
dec
out
icebp
shl
add
movsb
and
repz
divl
push
cmp
pop
pop
mov
pop
cli
lahf
popf
and
push
dec
mov
mov
cmpsl
pop
push
dec
dec
test
scas
in
movsl
imul
sub
xor
adc
pop
outsl
decl
sahf
mov
cltd
push
loope
add
jg
or
sub
inc
mov
cltd
mov
ss
mov
popf
dec
mov
leave
adc
mov
outsb
jo
add
jo
and
inc
mov
sub
outsb
pop
nop
shl
pop
fs
test
mov
lds
std
push
enter
xor
test
xor
clc
xchg
scas
push
out
mov
push
mov
mov
inc
int3
cmpsb
pop
repz
mov
sarl
sub
fdiv
pop
repnz
cli
ret
push
scas
shr
add
ret
cmpsl
adc
pop
lds
bound
out
mov
cmp
jb
rorb
dec
mov
fbld
stc
mov
mov
mov
test
inc
mov
sbb
inc
xor
movsb
and
push
push
inc
sub
xor
adc
adc
xchg
or
mov
out
mov
pop
pop
mov
lahf
add
dec
push
ss
andb
pop
ljmp
xchg
ss
sub
dec
ret
xorl
iret
jb
sbb
sbb
hlt
push
jmp
cmp
popa
adc
out
adc
cli
or
pop
xchg
rcr
aaa
data16
aas
aad
cwtl
pop
shl
negb
loopne
jecxz
movups
cmc
out
sbbb
pop
js
push
movsl
xchg
popf
adc
lods
mov
pop
shl
mov
xor
mov
xchg
popf
add
adc
les
mov
inc
mov
das
mov
mov
aad
js
fstl
dec
jo
imul
cmp
rorb
inc
xor
and
test
add
or
and
adcb
mov
sbb
adc
push
push
sub
inc
lahf
out
jnp
popl
out
and
fsubs
cltd
xlat
nop
jecxz
mov
mov
mov
xor
or
daa
jnp
sub
movsl
push
in
mov
lcall
jmp
lock
stos
imul
stos
push
pop
fcomi
ffreep
loopne
pop
stos
sbb
outsl
pop
pop
push
test
test
cltd
mov
xchg
lret
rcr
jo
ds
into
push
mov
adc
nop
nop
dec
test
aas
lcall
cld
mov
data16
divl
xor
push
mov
xchg
jmp
or
and
mov
test
test
or
inc
jle
cmp
ljmp
sarb
inc
inc
sbb
das
jne
push
pop
fadd
notb
sub
mov
jae
dec
push
push
lret
xor
mov
mov
sub
jb
and
loop
mov
dec
add
and
mov
sti
xchg
loope
divl
enter
int
lret
leave
imul
push
ja
push
mov
cmp
pusha
cmp
inc
fldl
sbb
in
sub
ds
lret
adc
ror
rorl
add
xorb
add
and
sbb
icebp
cli
or
fdivp
sbb
jo
shrl
push
aam
or
adc
pop
pop
or
imul
pop
push
insb
rclb
push
les
push
xor
shrb
cmp
mov
inc
jno
mov
sbb
stos
or
dec
imul
loope
jecxz
das
fadd
cmp
cmp
scas
jle
shl
cmc
dec
sub
xlat
lods
ds
cmp
mov
lea
bound
ret
mov
test
add
cmc
pop
mov
xchg
cmp
or
sub
cwtl
mov
mov
scas
xor
add
adc
push
fidivs
pusha
mov
les
mov
js
insl
loop
or
cmpsb
mov
aad
pop
lahf
mov
fidivs
adcb
mov
cmpsb
aaa
rcl
sarb
dec
dec
cmp
jp
lret
inc
ja
lret
scas
imulb
in
sbb
test
notl
mov
add
insl
add
mov
mov
sub
fbstp
fsqrt
sbb
addr16
in
rcl
mov
sbbb
in
fsubs
shl
mov
cmp
pop
sarb
lods
inc
outsl
jg
cli
enter
fadds
mov
jne
mov
faddl
mov
inc
aad
repnz
fisubrl
je
pop
imulb
outsl
adcb
es
les
push
mov
push
jbe
mov
fstps
mov
inc
add
cld
movl
fimull
lcall
fmull
test
inc
aas
sub
xor
cmpb
arpl
lods
cmp
add
ror
xchg
and
mov
pop
fstps
daa
inc
out
mov
sbb
xchg
ret
inc
mov
dec
dec
xor
mov
push
int
mov
pop
jb
div
adc
pop
push
rorb
xchg
adc
and
or
mov
inc
mov
call
ret
data16
mov
ljmp
push
pop
idivb
test
inc
adc
pop
ret
out
pop
mull
ja
mov
mov
cld
fadd
in
int
das
pop
in
mov
dec
push
or
sub
cmpsl
add
sar
frstor
bound
outsl
jmp
mov
dec
xchg
fidivl
pop
nop
std
pop
mov
push
or
inc
push
aaa
adc
pop
xor
ror
cmpsl
in
sbb
bound
sbb
stos
rcrb
arpl
les
sbb
fsubl
inc
adc
scas
mov
leave
ss
mov
sbb
sub
cmp
repnz
inc
push
pop
test
xlat
mov
ds
fsubr
lock
fcomip
pop
dec
inc
and
mov
lcall
mov
push
mov
jp
jle
movsb
xchg
lahf
pop
cmp
push
jle
xchg
fcoml
or
cld
sub
js
add
mov
imul
inc
repz
inc
mov
or
out
jp
cld
push
jp
sub
stos
mov
push
xor
push
cmc
or
out
out
rorl
call
shll
add
in
ja
stos
dec
outsb
xchg
cld
sahf
dec
xchg
push
and
test
mov
and
ret
inc
iret
lea
rorb
mov
mov
and
ljmp
insl
enter
xchg
cs
mov
cmp
mov
dec
inc
inc
lods
in
out
pop
les
pop
mov
fisubs
cmp
in
jmp
cmc
test
lods
mov
inc
or
mov
sub
jns
push
ss
or
mov
mov
sbb
mov
dec
test
in
dec
and
imul
sarb
aam
cld
jge
daa
or
cmp
movsl
test
sub
inc
adc
lret
aam
mov
mov
dec
mov
hlt
xor
mov
daa
xlat
cmpl
inc
pusha
cmp
xlat
clc
inc
jecxz
test
lods
add
mov
push
jne
sahf
mov
mov
mov
mov
or
scas
xor
jnp
cmp
lcall
sub
dec
mov
cmpb
out
loop
mov
leave
mul
ljmp
cltd
sarl
push
fstpt
cmp
push
lock
outsl
aaa
inc
xchg
in
mov
repz
add
leave
sub
lods
push
ficoms
imul
lea
shll
insl
les
lcall
imul
nop
loop
sbb
fldcw
aad
sub
pop
adc
aam
mov
call
mov
pop
mov
add
and
sti
sbb
out
push
sub
cwtl
call
int
xor
cmpsl
dec
lock
push
leavew
xchg
out
lods
bound
jl
add
jno
aam
adc
roll
call
jno
mov
pushf
cmpl
dec
push
xor
or
pusha
test
jb
sbb
ret
adc
add
popf
mov
ror
dec
mov
mov
dec
cmc
add
pop
lods
push
inc
sub
pop
mov
mov
xchg
out
mov
call
and
insl
jl
hlt
and
popa
xor
shl
mov
lret
and
xor
addr16
mov
jp
dec
cmp
inc
mov
dec
fdivrl
enter
jl
and
gs
aam
out
xor
push
fstps
sahf
push
lods
roll
in
mov
call
push
dec
xchg
aas
jbe
dec
int
mov
data16
push
jecxz
sbb
jo
pop
not
push
ja
and
sub
hlt
mov
sub
jo
lret
fdivl
cwtl
fnsave
fisubl
push
ja
lock
divb
outsl
add
into
adc
lahf
add
mov
loopne
pop
xchg
ret
dec
in
test
mov
cmpsl
jmp
idivl
enter
or
sub
repz
test
push
or
sbb
outsl
lods
pop
cmpsl
int
cmpl
std
cmp
std
stos
ljmp
cmp
sub
fstps
rclb
pop
mov
sub
push
sub
clc
sbb
lea
pop
cmpb
cmpb
mov
call
insb
aaa
cltd
mov
add
aas
daa
subb
sub
fildll
and
or
clc
fcompl
int
mov
imul
cmpsl
imul
fisttpll
mov
loopne
mov
mov
scas
test
mov
mov
ret
mov
aas
sub
add
aas
sbb
cltd
adc
das
xor
out
lret
notl
xor
nopl
dec
pop
and
add
lret
mov
cs
pop
mov
xchg
out
movsl
jae
sarl
rol
sub
loop
lock
arpl
mov
sbb
mov
fcmovnb
fs
lea
mov
pop
addr16
sub
lret
and
mov
ret
fiadds
negb
sub
pop
insb
jmp
in
icebp
rcrl
dec
mov
adc
mov
add
fldcw
lcall
adc
gs
mull
aas
xchg
jp
loop
outsl
rcrb
popf
push
mov
sbb
inc
jmp
push
pusha
or
add
xor
xchg
aaa
in
adc
shr
add
mov
roll
cmp
dec
mov
cmp
cltd
cmp
mov
test
inc
mov
mov
mov
pop
xchg
cmpsl
lahf
test
aas
push
and
push
push
mov
or
jmp
cli
leave
inc
shr
dec
jp
outsb
subl
arpl
aad
mov
wbinvd
jmp
test
push
test
dec
inc
in
addr16
notw
lret
imul
inc
push
mov
cli
push
dec
int
out
roll
mov
xchg
arpl
sbb
mov
add
outsl
push
lcall
xor
lock
gs
scas
pusha
add
pop
andb
adc
pop
jmp
loop
dec
mov
mov
mov
adc
test
sti
into
push
mov
pop
mov
mov
adc
sub
push
xchg
adc
dec
loopne
lahf
xchg
int3
sbb
mov
and
mov
hlt
lods
sub
mov
push
jge
sbb
loopne
xor
data16
jp
gs
cmp
adc
std
add
rolb
sbb
mov
sub
or
gs
cmp
inc
arpl
inc
and
mov
jae
pop
aas
jmp
jg
mov
rolb
pop
push
loopne
pop
mov
mov
dec
test
xchg
push
fld
or
adc
insb
pop
push
lods
inc
mov
push
mov
sbbl
add
insl
loop
test
loop
fistps
dec
pop
leave
jl
and
inc
pop
test
stos
cmpb
push
dec
jle
ret
pop
pop
and
int
lret
add
mov
fdivl
insb
imul
cs
xchg
jl
lods
push
test
clc
jg
xor
mov
jg
cmp
inc
js
int
push
ja
fsub
lret
mov
mov
cmp
test
xchg
xor
lock
dec
mov
and
add
sub
sub
xchg
mov
scas
jnp
xchg
int
jle
or
push
fs
dec
fisttpll
dec
xchg
xchg
mov
jb
xchg
and
fisubl
cwtl
jne
mov
xchg
outsl
adc
andl
pop
loop
adc
mov
mov
jno
pop
das
push
loop
imul
shrl
mov
ja
mov
cmp
sar
outsl
fst
ss
mov
nop
in
fdivrs
xlat
mov
aam
jne
mov
push
mull
jecxz
fcoms
lods
test
mov
xchg
and
lret
ja
rcl
scas
leave
test
add
test
imul
lods
jle
sub
shll
movsb
notl
in
pop
xchg
imul
jecxz
sub
push
cmp
bound
sahf
fcoms
outsl
loope
xor
and
mov
dec
pop
jmp
cmp
loopne
js
int
insb
mov
mov
fistl
call
rcrb
repnz
sbbl
push
mov
rcl
jge
lea
jb
jnp
mov
fldt
mov
xor
decl
lcall
mov
and
aas
int
pop
iret
push
and
dec
dec
mov
in
movsb
rol
nop
jmp
insl
jle
adc
mov
inc
popa
mov
mov
int
testb
pop
add
or
jle
pushf
jbe
mov
aaa
add
popf
in
sub
ja
and
mov
push
popa
fistps
push
std
shll
cli
shl
lahf
inc
xlat
xor
addr16
sub
js
testb
fs
xlat
int
cwtl
xchg
sahf
push
dec
lock
sub
xor
xchg
jp
aam
push
adc
movsb
lods
xchg
hlt
pop
fnstcw
sub
fbstp
xor
rclb
cmpsb
cli
sti
lret
stos
or
ret
sbb
sarl
or
push
push
sarl
std
sahf
or
xor
pop
mov
leave
mov
jmp
dec
leave
or
push
sahf
mov
cmp
pop
repnz
sbb
push
call
mov
xchg
push
mov
sti
cli
push
xor
and
mov
add
cmp
shr
pop
sub
iret
addr16
mov
jmp
jb
pop
mov
xchg
lahf
loopne
mov
scas
inc
ret
daa
cld
shll
jbe
addb
push
xchg
inc
jb
xchg
lahf
hlt
into
xchg
dec
mov
loope
and
sub
xchg
pop
jbe
push
adc
push
mov
iret
loopne
mov
cmpsb
sub
add
xchg
aam
inc
inc
clc
les
cmc
insl
jnp
out
out
or
mov
xchg
js
add
mov
fisubs
scas
pop
dec
rclb
xchg
xor
xor
cmp
gs
xlat
test
cli
bound
and
lcall
sbbb
stos
sub
aam
xchg
outsl
xor
enter
pop
mov
cmp
leave
fcomi
iret
adc
push
int
push
fidivrs
mov
mov
loopne
pop
dec
mov
in
fwait
pop
jge
movsb
inc
jns
sbb
or
dec
pushf
sub
or
mov
sub
push
loope
sub
fstl
push
ss
mov
inc
popa
data16
cmpsl
rol
cld
enter
loope
cmp
mov
test
adc
pop
insb
lahf
xor
cmp
insl
cld
daa
lret
mov
scas
inc
sbb
in
inc
xchg
mov
js
pop
or
arpl
xchg
jo
jb
mov
subb
in
mov
insl
xorb
ss
sub
mov
lcall
mov
push
add
sti
jns
xor
ret
ja
loope
arpl
pop
adc
orl
test
mov
sbb
adc
out
enter
lods
inc
jo
adc
and
xchg
das
cmp
test
fwait
xchg
int3
jl
dec
arpl
sub
test
inc
rorb
push
jle
or
sub
jmp
xchg
stc
push
xor
std
fidivs
inc
jo,pt
adc
out
into
push
in
cmp
or
repz
cmp
adc
fcompp
mov
sub
sbb
push
jno
dec
fmuls
adcb
cmpsl
jmp
or
pop
in
lcall
les
js
push
jne
lods
or
mov
popf
mov
addr16
jno
fs
mov
sub
xchg
cmp
lods
mov
cmp
inc
jnp
stos
out
jnp
xchg
loop
lods
mov
mov
movsb
das
ret
jae
aas
ljmp
mov
xor
out
popa
push
dec
ss
push
mov
mov
pop
fmuls
arpl
sahf
xlat
xchg
iret
push
adc
outsb
imul
mov
je
push
xchg
ficomps
loopne
inc
sub
pushf
xlat
lds
stos
or
arpl
mov
push
dec
cs
rcr
mov
dec
push
addb
les
aas
mov
ljmp
inc
in
sahf
cmc
cltd
add
insl
pushf
call
xor
xchg
cmpb
ss
mov
iret
xor
jae
ss
call
sub
out
rcll
cmp
iret
sbb
push
sti
repz
xor
xor
rorb
mov
xchg
and
push
mov
mov
sub
mov
inc
lods
inc
adcb
sbb
in
pusha
push
adc
nop
mov
loope
jb
mov
mov
jne
push
xchg
inc
fs
sub
push
push
xor
or
lret
ja
dec
pop
pop
dec
insl
lahf
sbb
pop
push
sub
adc
pop
sbb
jmp
mov
aaa
pop
pop
gs
movsb
sub
popf
jno
cmpsb
push
call
mov
loopne
cmp
cmpsb
cmpsl
in
int
dec
loop
movsb
mov
and
ret
sbb
repz
or
in
int
lret
shlb
pop
cltd
mov
dec
add
xchg
cmc
dec
scas
arpl
mov
sbb
adc
andb
rorl
push
pop
lret
jmp
nop
adc
je
mov
call
pop
and
add
subb
addl
fists
test
sub
shl
mov
aaa
push
rcrl
testb
loopne
push
mov
mov
mov
inc
enter
push
jns
das
sbb
add
pop
mov
popa
es
and
sub
mov
clc
adc
ret
pop
adc
popf
lock
mov
inc
test
cltd
scas
ss
fists
int3
inc
lahf
insb
lahf
cltd
dec
jbe
stos
dec
push
push
add
cld
adc
mov
cltd
ds
mov
jno
sbb
mov
mov
std
or
cwtl
movsl
into
aad
xchg
repz
sub
pop
and
fcomps
or
hlt
addl
mov
add
addl
mov
or
sub
and
fwait
ret
fcomip
jbe
inc
jecxz
movsl
lods
aas
xlat
test
loope
inc
xchg
loop
pop
xchg
cmp
pop
in
lret
movsb
jle
hlt
jae
inc
xchg
add
scas
test
pop
movl
mov
pop
xchg
sbbb
mov
sub
and
lods
pop
sub
roll
and
movswl
mov
andl
mov
dec
lahf
sti
sahf
adc
or
inc
push
xor
xor
mov
xchg
push
test
pop
push
lock
in
xchg
xchg
sub
jmp
fwait
stc
push
adc
sbb
repz
push
add
inc
in
jns
jns
addr16
clc
cmp
int3
jp
pusha
movb
out
xorb
aas
adc
adc
or
std
sbb
dec
in
jns
sub
pushf
sbb
icebp
mov
cmpxchg
int3
jns
mov
fs
xchg
lods
cs
pop
mov
cmc
jecxz
jecxz
dec
pusha
stos
je
stc
arpl
daa
nop
ja
test
in
pusha
imul
hlt
and
lcall
imul
xchg
cmp
jnp
sub
popf
popa
scas
mov
dec
int3
es
lods
sub
xchg
call
lahf
stos
xchg
icebp
aas
cmp
mov
cltd
stc
jno
sbb
pop
lods
sbb
mov
insb
or
outsb
mov
test
les
or
sbb
inc
sbb
decl
sbb
out
push
xchg
jno
mov
hlt
out
std
adc
lahf
stc
inc
loopne
mov
push
fs
inc
add
iret
and
shlb
mov
mulb
gs
mov
inc
and
inc
std
jecxz
inc
jg
pop
test
std
icebp
jb
stc
sub
pop
aad
inc
jae
jl
outsl
adcl
pop
cmp
aad
adc
jns
jp
inc
adc
test
es
mov
jmp
repz
scas
inc
mov
or
jno
lret
inc
out
or
dec
mov
mov
popa
cltd
in
adc
dec
daa
dec
xchg
lds
push
mov
cmp
mov
sbb
dec
cmpsl
mov
dec
pop
pushf
ret
mov
dec
enter
pusha
jg
push
mov
push
push
push
jge
push
adc
mov
fcomps
pop
jb
dec
divb
xor
test
adc
loop
push
xor
mov
shl
cmpsl
out
test
aam
out
fldcw
leave
fidivrl
pop
movsb
push
dec
in
in
out
aad
and
dec
mov
pusha
pushf
mov
jae
loopne
and
andl
rclb
loopne
or
mov
sbb
outsb
scas
cmc
inc
and
sub
mov
ret
sti
sbb
popf
and
lahf
fwait
xor
mov
xchg
and
shl
inc
xor
daa
loop
call
stos
pop
mov
cmp
dec
and
test
sub
dec
movsl
fidivl
in
ror
js
dec
inc
sub
adc
pop
adc
jne
adc
lahf
icebp
cli
sub
dec
jnp
adc
or
es
iret
sbb
int3
sbb
inc
pushf
rorl
lret
mov
add
xchg
lods
adc
sbb
sub
fsts
adc
lcall
mov
mov
xor
setae
fistps
mov
adc
cmpsb
adc
inc
lahf
loope
inc
mov
jns
xchg
push
popf
dec
sbb
pop
and
xchg
xchg
es
or
xor
cmc
push
popa
mov
push
test
xorl
mov
pop
subb
mov
sahf
sbb
jg
out
les
xchg
cli
shrb
hlt
test
cmp
stos
mov
scas
jns
aaa
aas
stc
rorb
push
mov
rorb
fcomps
ret
shrb
outsl
cmp
adcl
jne
cmp
xor
sub
shlb
jmp
stc
je
mov
mov
mov
loope
pop
jae
int3
aas
into
cltd
incl
xchg
cmp
mov
pop
or
repz
jle
hlt
add
outsl
xor
pop
pushl
sub
push
das
xor
jecxz
xchg
and
or
push
inc
pop
lock
int3
sub
mov
mov
xchg
or
sbb
pop
enter
sub
xchg
xchg
in
cmp
cmp
outsb
nop
fstl
movsl
mov
lret
je
sbb
fucomp
pushf
mov
pushf
mov
mov
sbb
jecxz
inc
sub
aaa
sub
aaa
mov
stos
adc
mov
hlt
push
js
mov
cmc
add
jge
les
add
js
xchg
or
loopne
dec
sbb
jne
popa
loopne
dec
add
aam
addr16
mov
js
cmc
imul
or
mov
int3
xchg
fcmovbe
aad
inc
int
in
jp
and
loop
pop
cwtl
or
pushf
clc
push
or
cmc
icebp
loopne
imul
or
mov
fsubs
mov
into
mov
pop
fldl
das
jae
jle
shlb
aas
sbb
add
insb
lods
in
fidivl
in
aam
mov
jge
jae
pop
dec
add
push
sbb
inc
push
jno
adc
sbb
int
sahf
cld
roll
jmp
xchg
arpl
mov
inc
test
ja
sahf
lret
insl
sub
repz
imul
sbb
lds
push
sbb
cmpsl
ljmp
pop
stc
mov
pushf
and
insl
les
add
fists
jmp
xor
dec
push
xchg
out
push
cs
push
push
xor
dec
pop
cmp
dec
in
cmp
push
int
mov
lret
add
stos
test
shlb
inc
iret
clc
mov
sub
pop
push
sahf
pop
in
jecxz
mov
jecxz
pusha
mov
add
cmp
fcomi
jno
add
mov
sarb
mov
mov
sub
or
fadds
add
mov
addr16
mov
and
inc
pop
jno
adc
mov
inc
and
enter
fldt
sub
dec
push
adc
sahf
mov
lretw
stos
lods
loop
xchg
pop
addr16
sbb
mov
ret
fnstenv
or
jnp
add
inc
add
int3
insb
lret
jp
pushf
xor
mov
repz
cmp
aad
ffree
mov
lea
adc
popf
clc
icebp
push
lahf
jmp
jo
pop
adc
add
shr
fstps
movsb
add
inc
imul
cmc
enter
mov
mov
push
subb
pop
enter
and
inc
xchg
dec
pop
repz
leave
repz
cmp
jne
loopne
dec
mov
test
inc
les
jne
jo
inc
andb
cld
aam
cltd
sbb
and
mov
inc
loope
popa
std
clc
adc
jnp
movsl
mov
pop
jp
rcrb
ret
cmp
test
das
test
cmp
int3
idiv
xor
fmull
int3
movsl
shlb
lods
adc
push
fmuls
shrl
test
rcrl
cli
shlb
mov
mov
lds
pop
mov
imul
insl
and
push
jae
flds
jb
dec
call
sub
jp
or
flds
mov
mov
aam
inc
ss
add
or
inc
negb
out
loopne
jo
add
in
push
push
dec
sti
aas
push
xchg
xchg
movsb
adc
iret
pop
push
pop
mov
clc
mov
xor
loope
mov
cs
adc
pop
sub
xchg
call
cli
xor
loope
mov
and
fnstsw
aad
shl
loopne
xor
xlat
out
lret
scas
incl
xlat
xchg
ja
ficoml
mov
pusha
mov
cwtl
ret
movsb
pop
push
addr16
stos
cmp
sbb
mov
aam
dec
adc
mov
pop
push
jg
iret
or
dec
push
push
sbb
shll
data16
inc
je
add
mov
xchg
adc
hlt
push
push
jbe
jmp
lea
fwait
add
addr16
or
push
jle
outsb
mov
mov
out
mov
insl
ja
and
scas
ja
les
sub
out
jno
cwtl
dec
push
pop
cmc
jae
aaa
ljmp
sub
repnz
sbb
mov
loopne
repz
inc
pop
arpl
add
xor
shll
fdivp
push
pop
sbb
adc
sbb
xchg
mov
bound
sub
dec
orl
fsts
inc
ljmp
sarl
cltd
rcrl
add
pop
mov
ds
pop
inc
ss
push
into
sbb
incb
mov
mov
movl
mov
repz
outsl
inc
aas
data16
or
into
mov
call
out
pop
insb
rcll
jle
or
add
xchg
mov
test
adc
push
fstps
lods
repnz
or
cmp
jo
sbb
inc
repz
jno
adc
xor
jmp
jmp
sub
sbb
ljmp
or
add
divb
cmp
jne
test
jne
test
sub
add
cmp
into
cwtl
push
mov
out
addr16
fwait
lcall
insl
lret
pop
jbe
cmp
popf
dec
mov
add
xor
gs
push
jnp
je
fdivrl
mov
nop
xchg
pop
lds
and
cltd
cmpb
xchg
push
arpl
orl
push
jle
test
scas
call
shrl
jns
subl
jl
xor
sub
test
jg
mov
test
push
subb
jo
add
jne
fldenvs
add
mov
out
imul
out
stos
loop
bound
mov
dec
int
stc
sub
xchg
stos
lahf
outsb
adc
loopne
or
popa
pop
ret
mov
shrl
mov
jne
push
and
xor
sbb
push
dec
fisttpll
inc
inc
notb
or
xchg
push
sbb
test
orb
cmpsl
mov
ds
ss
jo
nop
and
push
in
lods
mov
daa
cmp
movb
mov
push
mov
sub
xchg
mov
imul
mov
iret
add
fidivs
arpl
jo
enter
and
cli
clc
out
push
fstpt
pop
adc
adc
ja
aad
add
adc
ret
arpl
jae
and
jle
call
rcl
add
fwait
jbe
push
movsb
dec
mov
jnp
pop
jecxz
mul
cmp
add
ljmp
arpl
orl
inc
divb
ret
fwait
insb
dec
outsl
pop
cmp
test
icebp
sbb
test
cmp
insb
mov
int
xchg
stos
aam
bound
and
or
lods
or
leave
cmp
mov
jae
cmp
cmp
inc
jl
add
setae
ja
mov
jno
mov
mov
sar
pop
xlat
push
cmp
add
arpl
cmp
loop
inc
out
mov
subb
dec
fidivs
mov
cmp
leave
add
std
jb
jne
ja
mov
loop
sub
fwait
lds
pop
popf
cmp
mov
stos
and
mov
pop
xor
js
add
lret
push
pop
sub
aam
mov
in
cmpsb
rcll
subb
stos
or
popa
inc
jmp
ret
add
mulb
inc
nop
push
out
mov
jl
adc
push
ret
fildll
inc
stc
xchg
mov
iret
fstps
sub
inc
mov
fmulp
mov
jnp
jl
inc
or
jecxz
sub
rcrl
stos
fimuls
or
push
cmc
jnp
jmp
mov
pop
adc
repnz
in
in
xchg
lahf
clc
push
add
or
clc
mov
mov
push
xchg
xchg
in
jnp
jno
scas
daa
lcall
dec
jg
mov
sub
pop
fstpl
sub
repnz
jb
lret
sub
cld
push
mov
lds
dec
addb
imul
pop
xlat
cmp
cmc
aam
movsb
and
mov
enter
sbb
outsl
fsts
pop
mov
xchg
jns
js
cmp
xchg
and
cs
pop
jg
mov
js,pn
pushf
sbb
out
movb
out
inc
mov
aas
mov
shll
int
pop
lcall
add
xorb
and
mov
push
pop
fdivl
mov
loope
int
mov
mov
inc
rorl
push
ficoms
out
add
filds
popa
js
test
jg
jle
add
jecxz
cmpsb
fdivrl
nop
stos
push
rcrb
movsl
push
andps
add
jnp
lods
jne
sbb
sub
in
inc
and
lret
sbb
addr16
sbb
lock
fisttpll
jne
cmp
out
inc
movsb
adcl
and
aas
mov
cmp
test
mov
addr16
push
std
into
fsts
cmp
lahf
imul
xor
clts
js
xchg
loope
frstor
mov
cmp
xchg
mov
push
fucomi
or
jns
push
mov
test
pop
hlt
xor
mov
dec
stos
dec
inc
shrb
mov
jge
fadd
cld
cwtl
shl
xor
jg,pt
or
leave
jae
xor
and
outsb
lret
push
orl
fdiv
push
dec
mov
mov
fs
out
lock
repnz
cltd
xor
pop
jae
sbbb
fs
imulb
pusha
std
shrb
pushf
xor
adc
cmp
adcl
jne
dec
cld
roll
sbb
and
enter
gs
and
mov
movsl
out
mov
push
cmp
mov
addl
lock
lea
imul
enter
mov
mov
add
xchg
aas
lcall
in
inc
push
ds
dec
lret
dec
push
mov
std
mov
lds
add
shlb
dec
mov
loop
flds
mov
sbb
fcmovnu
int3
das
cmp
xor
xor
mov
cmp
cltd
lock
movsl
filds
cmp
sahf
mov
repz
addl
cmpb
dec
cmp
mov
les
adc
repz
inc
jp
fst
or
out
or
xor
ficompl
mov
adc
stos
mov
insl
imul
out
call
sahf
pop
lahf
iret
fwait
ss
or
and
lcall
cs
jp
pop
movsb
out
sbb
sub
popa
leave
push
out
popf
xchg
lods
aas
rclb
popa
ret
fidivl
movb
leave
mov
push
test
daa
rclb
enter
or
pop
lret
pop
faddl
ss
call
and
aas
pop
cwtl
cli
mov
mov
jnp
loopne
pop
inc
pop
mov
or
loope
ret
mov
pop
mov
or
mov
stos
xchg
and
sti
bound
dec
pop
lods
das
ds
clc
inc
and
push
inc
in
sti
jge
cli
pushl
jg
mov
cmpsb
orb
outsb
rcll
sbb
jle
sbb
movsl
int
sub
inc
shrl
test
stos
dec
cs
mov
jmp
stc
xor
adc
adc
push
cmp
aas
cli
ret
flds
fsubrl
mov
mov
or
mov
cltd
shrb
cmp
insl
xchg
xor
mov
push
xchg
mov
adc
in
sbb
gs
aaa
jmp
arpl
imul
ss
sar
fnstcw
pop
jle
scas
jg
test
movq
jmp
cmpsl
imul
inc
ret
jnp
pop
lcall
mov
jns
outsb
mov
rol
pushf
jmp
and
pop
arpl
dec
divl
push
push
add
jbe
mov
and
popf
ret
sub
mov
inc
cmpsl
icebp
xchg
orb
lahf
jl
dec
or
loope
cmp
mov
sbb
mov
notl
push
inc
movl
js
fiaddl
adc
and
pop
ret
jo
pop
add
sbb
sahf
and
movsl
sbb
dec
inc
jnp
pop
jge
sbb
jbe
dec
and
cmp
je
stos
sarb
push
arpl
jle
imul
push
xchg
mov
loope
mov
xchg
or
sbbb
ds
jge
imul
inc
test
mov
xor
pop
push
mov
add
xchg
call
add
mov
movups
les
hlt
cmpsb
pushf
out
ja
repnz
pop
sbbl
cmpsl
lods
and
dec
mov
pop
push
mov
mov
cmp
fisttpl
sub
mov
dec
inc
mov
mull
imul
sub
scas
iret
add
xor
sbb
mov
dec
out
pusha
dec
data16
dec
add
int
pop
inc
jl
loop
mov
les
jmp
mov
pusha
sbb
lret
testl
pop
pop
gs
scas
xorl
sbb
jb
hlt
sbb
mov
push
add
movsb
adc
push
lods
into
lods
mov
push
repz
mov
test
dec
into
push
mov
das
shl
cltd
scas
test
mov
maxps
mov
rcrl
test
add
das
repnz
push
loopne
or
test
out
sub
cmpsl
int3
dec
mov
lcall
shll
ljmp
loop
inc
cmpsl
adc
out
jle
xchg
or
add
add
mov
pop
cmovns
lods
ljmp
fdivl
in
out
xor
pop
push
pop
sbb
and
jne
jl
sbb
fimuls
dec
sahf
push
mov
subl
pop
push
pusha
int3
jle
dec
sub
jmp
insl
or
pop
das
push
dec
add
or
addl
cmp
dec
sub
addr16
adc
xchg
out
shlb
pop
jg
push
int
out
mov
adc
sar
cmp
pop
aaa
lcall
and
out
imul
adc
inc
aad
aas
into
ficoms
jae
mov
int
fsub
mov
mov
arpl
icebp
xor
push
in
jle
mov
adc
inc
sarl
mov
sbb
push
inc
jbe
jno
mov
or
mov
xchg
xorb
lret
sub
or
outsl
dec
pop
mov
cs
fnstenv
roll
repz
or
out
dec
mov
lcall
sub
std
cmp
mov
in
or
xchg
scas
add
pop
sub
loop
mov
jne
pop
jmp
lcall
lock
call
leave
inc
and
sbbl
pop
das
clc
or
inc
dec
pop
rcrl
mov
notb
lds
push
shll
dec
mov
iret
hlt
mov
lock
pop
or
xchg
stos
sbb
shlb
pop
fcoml
addr16
in
aad
sbb
inc
inc
pop
inc
add
sbb
jle
adc
or
jle
jp
iret
mov
pop
mov
pop
in
add
stos
xlat
pop
xorl
or
add
xchg
stos
xor
in
or
fstpt
jbe
arpl
jge
mov
and
stos
pop
xchg
sbb
movb
cmpl
jnp
adc
loopne
popa
jno
mov
mov
lahf
mov
loope
out
mov
inc
sbbb
push
in
sub
stc
outsl
inc
cwtl
loopne
xor
xchg
xchg
lahf
fldenv
pop
jns
mov
pop
pop
scas
xchg
xchg
fistpl
cmp
fdivrl
and
lret
or
dec
jmp
sbb
iret
frstor
dec
mov
sbb
pushf
cs
xor
insl
mov
fwait
mov
mov
pushf
test
loope
and
addr16
mov
sbb
xor
nop
aaa
adc
mov
mov
lcall
xor
dec
xchg
shr
mov
stc
mov
mov
sbb
cmc
mov
xor
xchg
xchg
repz
cmp
dec
test
lock
repz
decl
lahf
add
imul
sbb
sub
jecxz
xchg
loopne
outsl
pop
cwtl
inc
add
push
dec
cmp
add
push
inc
ds
addr16
data16
jge
popl
adc
std
ficoms
dec
lds
mulb
sub
aad
mov
cs
and
mov
fnstenv
add
mov
push
pop
das
lea
lods
pop
and
jnp
push
divl
push
stc
push
xchg
ret
jnp
jns
jae
jbe
mov
lds
jp
jg
cld
sbb
inc
jae
cmp
rorl
movsb
jge
fidivl
out
sbb
jg
fcoms
mov
xorl
or
cmc
pop
push
lds
xchg
sub
mov
mov
lret
loope
adc
xchg
mov
push
imul
sub
xchg
add
adcl
sbb
sahf
dec
push
arpl
jns
mov
adc
mov
jp
call
cmp
xor
seta
rcrb
aam
mov
push
pop
or
insb
sub
inc
loopne
dec
out
das
in
imul
mov
xor
pop
pcmpeqw
push
add
dec
xchg
sbb
pusha
mov
loope
sub
pop
arpl
fsub
frstor
loope
out
fwait
xorl
stc
outsl
pop
inc
mov
bound
cmp
test
imul
push
jb
sub
loopne
adc
shl
inc
loope
xchg
int
pop
push
addr16
jmp
jne
jle
xor
insl
or
cwtl
in
sbb
sbb
cmpsb
xchg
ljmp
fcompl
push
pop
pop
es
jl
test
lock
lret
rcrb
mov
cmp
dec
loopne
sahf
add
sub
cmp
int3
xchg
lock
sbb
jle
popa
cld
pop
js
cmp
lods
lods
push
mov
aaa
repnz
mov
rcrl
insb
fcoml
andl
dec
iret
dec
bound
mov
mov
mov
icebp
mov
sub
jo
xor
add
mov
repnz
daa
fdivrs
ret
je
mov
push
dec
ja
in
mov
imul
xchg
in
fnsave
sbb
push
mov
mov
mov
jg
fdivrl
jp
insl
xchg
in
movb
mov
mov
and
mov
shlb
pusha
inc
pop
and
inc
mov
or
and
mov
sbb
cltd
pusha
ja
or
and
inc
mov
ds
int
imul
pop
lods
fbstp
cmp
clc
push
aad
pop
lods
sbb
aam
mov
adc
or
aam
adc
rclb
or
repz
adc
mov
push
pop
cltd
lret
xchg
out
imul
sti
mov
jle
dec
or
jnp
sti
xchg
mov
sahf
adc
sbb
and
jg
mov
lahf
xchg
sbb
imul
sub
loopne
notb
lds
pushl
insl
fwait
cltd
cmp
adc
out
cmc
mov
dec
dec
cmp
xor
jp
hlt
aaa
test
pop
test
out
jecxz
movsl
lds
sarl
rolb
mov
lock
jb
leave
mov
lret
xchg
push
out
adc
lds
out
mov
xor
and
xchg
adc
loopne
pop
or
cmp
cltd
and
lret
mov
xor
xchg
icebp
je
scas
jge
or
mov
mov
cmpl
ficoms
test
cmp
add
cmc
push
inc
push
cmpl
add
jns
mov
ret
or
mov
add
dec
bound
arpl
jnp
popw
sahf
and
jns
mov
mov
mov
in
pop
sub
pop
aad
xchg
or
pop
ficompl
mov
dec
push
push
cmp
add
push
mov
fldcw
data16
jb
mov
insb
jbe
pop
add
nop
and
mov
outsb
cmp
aaa
insl
sub
add
loop
out
xchg
sub
mov
arpl
fdecstp
xor
vucomiss
idiv
shr
or
scas
jo
mov
pop
sbb
mov
push
add
orl
xchg
movsb
iret
adc
sbb
in
dec
jb
sub
jg
jp
ss
insb
and
lods
sub
cwtl
lds
mov
lahf
mov
cs
pop
cmp
xchg
fnsave
or
sbb
ja
jae
pop
aas
add
mov
pop
jmp
inc
je
push
scas
es
jp
aam
mov
add
jo
inc
es
mov
jb
dec
sub
fisubs
aad
pop
cmp
add
nop
mov
and
in
stc
mov
mov
aam
inc
mov
jnp
adcl
mov
lret
push
mov
pop
xchg
push
jne
inc
inc
in
and
mov
or
push
adc
jns
bndstx
ret
pop
test
or
pop
and
jns
ret
in
sbb
leave
lods
scas
inc
les
addb
in
sbb
add
lret
pusha
repnz
mov
jnp
lea
outsb
dec
mov
stc
push
push
cmpsb
adc
scas
mov
dec
push
cmp
nop
insb
xchg
fstps
and
xchg
mov
sbb
repz
scas
or
rolb
dec
mov
fidivs
gs
add
xor
repz
fdivrs
pop
loope
or
ret
jno
js
mov
inc
dec
push
adc
sbb
push
and
lcall
and
mov
loop
scas
loop
not
mov
jp
xchg
inc
or
aaa
pop
inc
push
mov
cltd
stos
mov
mov
mov
adc
lods
fwait
mov
cmp
xchg
enter
jns
das
mov
xchg
mov
hlt
mov
cmp
incb
ret
pop
mov
mov
out
cmp
sbb
jl
daa
sub
jns
cmpsl
es
jl
push
and
lcall
adc
jae
loop
outsl
test
pop
inc
out
ret
shlb
in
add
sub
loope
rcl
lods
inc
sarl
dec
mov
inc
imul
xlat
daa
mov
mov
mulb
cmp
in
mov
mov
ljmp
outsb
pop
cmc
inc
out
adc
cltd
enter
and
aam
inc
push
aad
xchg
daa
mov
lods
cltd
das
adc
bound
data16
mov
adcb
inc
movsb
ljmp
sbb
repz
jae
push
push
imul
repnz
cmc
mov
mov
push
repz
imull
cmp
lahf
ret
outsb
mov
shr
mov
cs
xor
cmp
test
sbbl
add
adc
in
test
popa
dec
imul
les
decb
enter
popa
xchg
jne,pn
mov
dec
addl
xchg
mov
data16
aas
or
mov
xor
nop
ja
or
cltd
sti
ja
add
mov
adc
jne
adc
arpl
adc
shl
aas
testb
inc
inc
mov
femms
mov
add
sub
iret
sub
js
add
add
xchg
jge
es
or
stos
push
pop
dec
sbb
lahf
data16
or
popf
gs
bsf
pop
mov
push
in
aam
icebp
sbb
mov
pushf
cs
lret
xor
mov
sub
lret
adc
cld
enter
repnz
and
jle
rcrb
push
mov
lods
inc
pop
mov
pop
loop
pusha
in
adc
adc
push
aam
cmp
movl
nop
rorl
xor
mov
xchg
ret
int
call
xorb
push
sub
and
scas
cwtl
jb
jp
cmp
cmp
scas
fimuls
or
rclb
fwait
sbb
loopne
and
sahf
adc
xorb
je
mov
push
pop
andl
inc
adc
mov
divl
mov
into
ret
stc
fsubs
cs
in
fidivl
xchg
sbb
insb
mov
adc
dec
inc
out
mov
lods
pop
pop
rorl
xchg
aaa
xchg
ss
add
test
mov
daa
sbb
lea
and
cmpsb
cmp
fmull
cwtl
mov
jne
mov
pushf
inc
pop
aam
test
fistl
js
cmp
daa
xchg
je
scas
stos
icebp
xchg
ret
aaa
inc
out
icebp
sub
xor
popa
fwait
or
ret
hlt
rcr
pop
lock
das
jmp
jno
jecxz
jle
ret
test
add
cmpsl
cmpl
loope
pop
add
xchg
cmp
and
cmpsb
cli
or
hlt
scas
mov
jne
mov
lret
sbb
jns
repz
lret
cmc
mov
ret
and
jecxz
and
push
lcall
jg
jmp
out
out
mov
je
out
insl
insl
nop
and
addr16
mov
jo
cmpsl
xor
sbb
push
cli
inc
iret
jecxz
int3
pop
jmp
pop
pop
fadd
dec
idivb
mov
test
sbb
mov
mov
pop
je
xor
mov
rcrb
inc
lods
mov
push
imul
mov
inc
enter
inc
xchg
movsb
bound
in
jp
daa
jp
xchg
jmp
pop
arpl
adc
movaps
and
lahf
xor
sbb
jmp
jle
gs
mov
push
stc
loope
bound
scas
outsb
xchg
adc
mov
xchg
lea
mov
negl
dec
fimuls
je
outsl
pop
sti
mov
das
mov
pop
sbb
lock
scas
xor
filds
cmpsl
xchg
ja
jo
lds
or
add
push
mov
xchg
jnp,pn
mov
xchg
jmp
ljmp
aaa
inc
xor
enter
arpl
rcr
mov
pop
cld
xor
and
and
cmc
in
fisttpll
dec
inc
pop
repnz
mov
std
sub
xor
pop
sbb
outsb
mov
pop
xchg
and
sbb
out
leave
and
pop
pop
jae
mov
pop
lcall
sbb
sub
lea
lods
aas
adc
insb
fwait
sub
jmp
ds
push
aaa
jle
orl
sti
sub
outsb
mov
cwtl
sbb
mov
jmp
sbb
adc
insl
lods
sub
gs
mov
add
inc
xchg
xor
adc
sbb
bound
xchg
push
jl
negl
popa
and
push
mov
push
inc
dec
adc
pop
test
test
gs
mov
fucomp
repz
xchg
push
testb
rcll
lock
dec
push
xchg
es
subb
fcmovnbe
add
testb
int3
fidivrl
push
mov
dec
and
movsl
add
call
scas
pop
icebp
aad
sahf
fstl
loop
jne
shlb
in
xchg
xor
call
xor
mov
xor
pop
or
add
cld
inc
aaa
push
xor
adc
sbb
in
test
addr16
jns
pmaxub
lret
pop
add
movntq
out
xchg
mov
xor
jbe
cli
stos
jne
xor
orl
mov
cld
cmpsb
movsb
and
psllw
lcall
ja
sub
pop
imul
mov
cmp
mov
inc
mov
shrb
cmpsb
xchg
ret
cs
sub
mov
mov
xchg
inc
cmp
adc
mov
repnz
es
lock
stos
mov
jg
xchg
push
mov
or
mov
inc
mov
xchg
cmp
les
test
mov
inc
mov
adc
pop
cmc
push
dec
out
mov
mov
fimull
shlb
pop
lahf
push
mov
inc
push
xor
mov
dec
push
mov
shr
lret
ret
insb
fidivrs
call
cmpsb
idiv
dec
mov
mov
imul
pop
mov
push
inc
xor
jns
xor
and
xor
test
sbb
test
add
cmp
frstor
pop
lods
ljmp
ret
xchg
mov
bound
inc
mov
xor
xchg
stos
xchg
movsb
pop
loopne
loopne
inc
xchg
fldl
sti
cmpsb
push
push
adc
or
fbstp
cmp
mov
lock
or
sub
sahf
mov
sbb
mov
inc
loope
jg
sbb
inc
push
xor
ljmp
pusha
int3
push
mov
enter
in
icebp
lea
cmp
mov
pop
cmp
test
or
pop
pushf
cmp
loopne
cmpb
add
stos
jno
clc
pop
rcll
adc
mov
add
das
pusha
cmp
push
mov
xor
loopne
mov
mov
movsl
mov
je
ret
scas
pusha
jp
inc
cmc
sti
icebp
les
dec
sub
adc
dec
add
xchg
fstpl
or
cmp
ret
xchg
pop
cmp
loope
lahf
fistpll
push
mov
mov
mov
or
jne
wrmsr
pop
call
faddp
mov
sbb
ud1
jecxz
jbe
lahf
jmp
xchg
jge
std
cmp
out
cmpsl
in
mov
jne
arpl
pop
and
outsl
mov
inc
push
push
test
and
outsb
movsl
dec
xor
lcall
lods
scas
mov
daa
filds
filds
push
in
jne
push
push
fs
or
inc
push
arpl
sub
ljmp
lea
push
or
add
xor
mov
lock
ret
inc
inc
test
push
add
movl
dec
ljmp
in
fisttpll
cmpb
in
sti
cli
xlat
aas
ret
lea
mov
ss
movsb
sysenter
adc
stos
imul
cmp
ds
and
xchg
inc
add
pop
or
cmp
sub
aam
jns
faddl
jae
pusha
xor
push
lods
ficoml
dec
and
jp
push
hlt
test
cld
aam
xor
scas
pop
mov
and
dec
jle
pop
imul
lods
ret
lret
push
sub
jno
in
ret
test
sbb
jl
mov
lods
lcall
dec
jne
imul
inc
xchg
add
loope
push
sti
test
mov
sahf
cmc
add
shrl
mov
mov
daa
outsl
inc
lcall
aad
movsl
xchg
imul
sbb
mov
test
push
fwait
push
enter
push
mov
stos
stc
stc
mov
jle
jno
in
xor
xor
push
and
clc
loope
dec
sti
pop
pop
pop
mov
xchg
pop
cmp
mov
lods
mov
movsb
cmp
sbb
inc
loop
lods
push
pop
mov
cmp
add
nop
loop
push
mov
push
loopne
sbb
sbb
xchg
mov
shufps
sub
push
icebp
push
mov
insl
les
add
mov
and
and
in
xchg
push
movsb
xor
nop
rorb
jmp
or
test
loopne
sub
adc
cmp
bound
xchg
pushf
xchg
xlat
das
subb
push
mov
sbb
inc
mov
out
lret
popw
pop
popf
pushf
pushf
push
arpl
jle
dec
sti
lods
out
lahf
dec
repz
sarl
idivl
and
and
faddl
push
fucom
lret
ja
and
in
ljmp
call
test
cmp
cs
roll
push
out
inc
sub
jae
pop
push
sbb
inc
lods
jle
adc
mov
negl
adc
sub
roll
leave
clc
xchg
std
shll
xor
mov
sbb
push
jl
adc
ret
xchg
xor
idiv
cld
je
movsb
movsl
push
adc
xchg
jns
in
call
int3
mov
lcall
push
iret
dec
neg
loopne
hlt
mov
aad
mov
rep
xchg
je
cmpsl
push
shl
cmc
pop
mov
lock
push
or
pop
fcmovb
jg
jmp
fistpll
in
jns
xor
jns
mov
pop
das
nop
ficomps
fsubrl
dec
lcall
rcrb
iret
dec
pusha
pop
push
mov
je
stc
out
roll
imul
push
outsb
pop
push
adc
add
inc
xor
and
shlb
loope
repnz
cmpsl
or
in
mov
shll
lods
ret
inc
out
nop
lds
sbb
push
inc
adc
or
xchg
out
lock
xchg
imul
pop
adc
sub
fisttpll
adcl
push
cmp
or
scas
insb
xor
cs
dec
cmc
lods
dec
je
ja
mov
mov
pushl
cmp
mov
dec
dec
and
mov
mov
cmpsl
jae
movsb
push
shll
dec
push
lods
stc
and
dec
cmp
in
adc
jle
jns
shrl
cwtl
mov
xor
adc
or
or
mov
mov
cltd
outsl
fdiv
cs
arpl
sbb
testb
pop
mov
mov
add
les
xchg
out
call
xchg
or
gs
jno
popa
ds
outsb
xor
pcmpeqb
mov
adc
inc
das
fwait
lock
outsl
scas
addb
bound
mov
cltd
lahf
mov
mov
imul
xchg
idiv
xchg
mov
mov
dec
sub
std
jno
scas
add
fsub
or
adc
dec
fcomps
sub
dec
mov
sbb
loopne
jns
xchg
xchg
outsb
xchg
inc
mov
lahf
ss
aas
lods
jmp
ja
xchg
mov
lock
pop
xchg
movsl
ret
sahf
add
inc
push
mov
rcll
rorb
add
test
loopne,pn
sub
lods
inc
cli
shlb
inc
mov
inc
rol
pop
sahf
mov
dec
ret
jo
cmp
add
or
out
mov
popf
push
mov
inc
xchg
gs
sbb
and
sar
xorb
mov
out
jg
cltd
add
mov
fwait
xchg
int
ljmp
jmp
sub
lock
cmc
popa
data16
pop
jge
mov
jp
xchg
lahf
and
dec
cmp
and
bound
dec
pop
pushf
jne
mov
aaa
mov
jno
xchg
out
pop
in
sar
jnp
sbb
cmpsb
dec
and
adc
arpl
dec
stos
sub
sub
ja
in
sub
mov
add
and
sbb
sub
sub
fisttps
sub
insb
inc
insb
adc
test
pop
outsb
arpl
movsl
lahf
insb
adc
out
int3
icebp
or
pop
and
sub
add
mov
mov
mov
push
lds
add
add
shll
and
cmp
popf
mov
or
rorb
movsl
inc
cmp
cmp
inc
push
cltd
mov
adc
pop
gs
mov
enter
out
mov
imul
xor
lahf
adc
jbe
repz
int3
mov
std
lock
in
sti
bound
pop
mov
repnz
cli
pop
gs
and
inc
popf
js
pop
cmp
xor
arpl
sbb
jecxz
fisttpll
mov
std
js
xorb
and
shl
out
lods
xor
mov
pushf
dec
push
aas
js
test
bound
lods
pop
inc
das
add
fisttpl
pushf
jne
jae
mov
iret
cwtl
call
sub
sub
in
outsl
adc
push
xlat
in
ret
mov
adc
lods
negl
fdivl
add
add
cs
fs
fstpt
lcall
adc
int
inc
roll
pusha
cld
negb
mov
fbstp
ficoms
sbbb
inc
test
push
push
cmp
mov
repz
add
mov
adc
adc
cs
dec
adc
and
jne
xlat
shll
lods
loop
push
rcrl
sbb
lods
jb
sbb
mov
push
xchg
jno
popf
movsb
xorl
add
lcall
cld
sbb
data16
fxch
xor
dec
mov
mov
or
push
shl
outsl
mov
pop
adcb
or
add
ret
cmp
rorb
sti
loopne
test
pop
adc
ja
mov
inc
jle
xor
add
xor
lds
mov
lahf
dec
jmp
cmpsl
push
cli
fcomp
jg
pop
jb
xlat
xor
fdivl
cld
stc
jp
ficomps
scas
jns
push
mov
jno
inc
mov
adc
out
enter
mov
sbb
inc
ds
test
mov
pop
add
push
fistpl
mov
aam
insl
pop
imul
jge
sti
mov
or
sbb
orb
mov
lock
cmpl
outsb
push
addr16
xchg
mov
push
fs
jecxz
pop
popa
push
dec
push
mov
mov
add
push
xor
inc
dec
ret
mov
add
or
idivl
repnz
out
stc
xor
dec
jno
hlt
jne
mov
push
ljmp
mov
mov
push
or
scas
inc
mov
xchg
lods
ret
test
pushf
lea
bound
das
pusha
mov
push
cmp
js
pop
in
icebp
push
cmpsl
add
jo
adc
test
int
in
daa
enter
aam
xor
sub
adc
xchg
mov
jae
js
sbb
jno
cmp
dec
cmpsb
mov
arpl
mov
jp
xchg
jp
int3
loope
repz
jnp
jmp
aad
hlt
mov
add
ss
dec
mov
xor
cmpl
xchg
dec
dec
xchg
sbb
sbb
hlt
lea
mov
repz
sarb
clc
ds
mov
test
mov
xchg
push
call
inc
mov
mov
cmpsb
call
sbb
sub
aam
adc
cwtl
dec
popf
push
cmpsl
sbb
or
add
stos
xchg
fdiv
imul
insl
imul
push
mov
cltd
add
movsl
pushf
jecxz
leave
lea
lods
or
push
push
lods
testl
or
mov
xor
and
shll
jmp
cmp
fs
pop
and
xchg
cmp
stos
adc
jl
cmpsl
jmp
or
or
xor
xchg
mov
jae
loope
sbb
icebp
mov
jp
outsb
mov
aam
dec
arpl
dec
lea
mov
mov
and
xor
fsubrp
add
nop
add
into
jmp
xor
clc
lods
jp
negl
outsb
js
and
lods
lock
sub
sbb
leave
mov
sbb
arpl
outsb
in
mov
pop
out
test
pmaxsw
les
dec
or
add
pusha
arpl
mov
sbb
fiadds
jp
fstpl
dec
push
out
insl
push
popa
dec
nop
xchg
inc
jns
lods
inc
or
inc
sti
stos
into
insl
add
mov
jmp
inc
aaa
mov
std
sbb
or
sub
sub
push
outsl
aam
dec
mov
jecxz
repnz
fucomip
ja
sbb
aad
fldt
sti
imul
mov
pop
daa
jecxz
add
and
js
push
es
mov
sub
mov
inc
mov
mov
inc
mov
pop
sti
jmp
push
push
into
clc
adc
xchg
xchg
pop
or
insl
pop
fmul
jae
lcall
xlat
mov
mov
mov
js
cmp
ja
sbb
pop
xor
jl
mov
clc
xchg
or
or
loope
pop
int3
int3
xor
and
or
ret
inc
mov
sbb
pop
pushw
or
jne
and
fnsave
test
mov
push
test
jno
pushf
insl
cli
in
add
mov
jmp
mov
fisubrl
pop
dec
outsl
pop
pop
jae
sarb
ss
dec
dec
fwait
push
dec
xor
inc
fwait
cmp
push
push
jno
push
and
adc
xchg
and
std
in
sub
adcl
sbb
fs
icebp
mov
add
xor
pop
cltd
mov
push
push
int
rcll
test
inc
andl
sahf
add
mov
shll
imul
and
loop
rolb
aam
shl
cmp
fs
les
clc
daa
lods
xchg
mov
and
or
fwait
xor
popf
sti
pop
or
mov
cwtl
popa
sbb
outsb
js
sti
adc
out
dec
notl
orl
in
hlt
pop
icebp
xchg
mov
jcxz
mov
and
mov
sahf
out
push
jmp
scas
xchg
cli
ja
cmp
xor
add
adc
jecxz
add
mov
iret
xchg
inc
fsubs
push
dec
loope
mov
xor
jns
and
mov
pop
mov
jecxz
cmp
int3
adc
add
sbb
fdivl
lds
adc
sbb
push
ret
cmc
and
hlt
mov
lock
sub
xchg
jns
jae
push
into
sbb
and
fs
bound
les
jmp
ret
xor
jg
mov
cmp
sub
fldcw
push
and
sbb
mov
lret
pop
lods
enter
dec
xchg
fmul
and
add
insl
adc
test
inc
out
bound
lock
push
xchg
ljmp
mov
lea
xchg
xchg
shr
sub
mov
leave
or
mov
cmc
idivb
int
ja
jno
arpl
cmpl
jae
in
into
ljmp
push
aaa
popa
loopne
jo
xor
pushf
mov
lods
jge
xor
scas
mov
lcall
cli
shll
test
shrb
dec
inc
pop
jb
push
push
cmpsb
jno
xorl
iret
mov
testb
jne
mov
pop
repnz
sub
mov
in
fiaddl
fcomps
fistpl
out
test
imul
cmp
push
inc
fcmove
sub
and
pop
jbe
leave
neg
cmpsb
out
in
insl
dec
sbb
jmp
sbb
sti
add
test
pop
jo
int
sarl
loopne
add
inc
imul
repnz
push
addr16
call
cwtl
in
pop
add
sahf
mov
sub
mov
ficoml
leave
mov
xlat
loopne
push
push
loopne
ljmp
cs
xlat
xchg
inc
pop
mov
and
adc
push
iret
mov
mov
loopne
push
inc
fldenv
les
test
xor
xlat
jecxz
aam
dec
push
aaa
jo
insl
in
adc
pop
mov
and
sbb
imul
addr16
int3
pop
mov
loop
pop
dec
adc
inc
add
je
nop
mov
pop
les
or
lods
add
cmc
mov
and
mov
jecxz
cld
sbb
push
and
push
mov
lods
iret
mov
in
arpl
stos
pushf
push
xchg
sub
sub
aaa
pop
cmp
push
push
addr16
aam
xor
push
mov
rcr
adc
call
or
push
ret
add
xor
loope
stc
data16
loop
test
nop
jle
push
lret
clc
mov
fistps
shrl
mov
in
in
repz
xor
sbb
sub
jmp
aam
sarb
mov
lods
sbb
sti
mov
imul
imul
push
mov
mov
and
insl
test
lea
dec
shlb
test
push
xchg
aaa
rcll
mov
in
lods
jbe
add
sub
sub
jmp
mov
mov
sahf
adc
xlat
jecxz
fcompl
lret
loop
dec
inc
adc
rclb
or
add
pop
insb
mov
orl
push
stos
add
int
mov
cli
shlb
bound
lock
mov
mov
sahf
push
sub
rcll
es
fcomps
pop
sub
in
sub
xchg
inc
mov
adc
and
leave
xchg
or
mov
mov
mov
jb
xor
popa
inc
adc
mov
sbb
mov
push
in
pop
inc
fidivrs
mov
xchg
data16
mov
sti
dec
sub
inc
jnp
imul
sbb
outsl
repnz
sahf
cltd
lock
out
xlat
xor
inc
das
and
shll
ja
pop
rorb
sub
push
xchg
dec
jbe
add
dec
or
mov
rolb
rcrl
sahf
add
dec
dec
dec
rolb
ret
jg
pop
pop
addb
jmp
stos
jae
out
lret
popf
pcmpgtd
pop
mov
enter
fmuls
sub
jno
cmpl
insl
and
imul
scas
and
and
mov
mov
stc
sub
scas
xchg
dec
sbb
or
sbb
shlb
xor
movsb
push
in
shll
subl
out
lods
mov
rcr
in
jb
out
pop
add
icebp
pushf
xor
xor
nop
out
out
add
push
hlt
xchg
int3
lds
les
jp
out
lock
in
std
popa
and
cltd
sbb
and
test
scas
mov
fidivl
jmp
ds
mov
bound
jmp
xchg
jg
and
xor
sbb
or
dec
arpl
dec
inc
shlb
das
neg
ljmp
push
xchg
rcll
sbb
push
add
mov
cmp
pusha
jl
pusha
push
repz
pop
aas
cmp
dec
mov
mov
cmp
inc
cmp
sarb
enter
inc
insl
jp
or
in
jmp
adc
out
imul
push
stos
js
xabort
je
push
push
fstpt
sbb
clc
adc
jl
mov
and
mov
out
jge
sub
and
rclb
inc
test
popa
cs
aas
add
scas
mov
pop
add
adc
les
adc
mov
fmul
aas
mov
mov
mov
jge
les
idivl
aaa
mov
xchg
mov
inc
dec
leave
fs
ljmp
scas
outsl
inc
xchg
cld
repz
pusha
or
lods
jle
adc
das
imul
scas
inc
outsl
cwtl
fisttpl
sub
es
jbe
xchg
xor
inc
jmp
mov
pop
popa
dec
mov
and
icebp
pop
insb
adc
jge
into
out
paddd
popa
adc
xor
xchg
test
ja
mov
loope
dec
xlat
dec
dec
xchg
fwait
add
arpl
callw
cmc
xchg
imul
mov
sbb
mov
dec
cmp
cli
stos
mov
out
imul
mov
jecxz
stos
fs
adc
sub
movsb
out
imul
mov
repz
testb
test
jbe
or
daa
push
adc
pop
imulb
mov
pop
cli
fs
and
mov
xor
mov
xor
enter
push
mov
or
inc
movsb
popa
nop
repnz
mull
mov
adc
popf
cmpsl
ss
push
rclb
mov
mov
lret
rorb
mov
inc
cmc
mov
int3
shl
cmp
jmp
add
and
iret
push
test
loop
outsb
aad
pop
int
cmp
in
sbb
inc
mov
andb
cmp
jmp
lods
xchg
add
rcpps
sub
push
faddp
shlb
std
lock
ljmp
push
mov
jae
or
xchg
je
push
sahf
fisttpll
fadd
pushf
sbb
inc
iret
ds
lds
iret
dec
loop
rcrl
pop
jl
push
pop
dec
cmp
call
jbe
push
and
dec
subl
fld
inc
or
inc
shll
rcrl
cmp
test
data16
xor
dec
movb
mov
daa
push
or
and
mov
jge
add
outsb
sbb
lcall
mov
rclb
xchg
xor
jnp
sbb
repz
out
pop
out
add
in
int3
std
shl
decb
or
pop
mov
fstps
add
fwait
test
call
imul
out
inc
lock
xchg
jbe
pop
pop
imul
mov
insl
movsb
dec
cmp
inc
popf
sub
nop
fwait
aam
mov
movsl
lods
or
mov
sub
xchg
sub
add
push
in
push
pop
out
push
lret
lods
mov
fildl
inc
bound
fnsave
xchg
xchg
in
adc
shrb
mov
pop
das
add
outsl
xchg
cmp
inc
enter
shlb
pop
scas
dec
orb
je
push
addr16
pop
mov
movb
lcall
jge
cmp
pop
sub
ss
rcr
in
pop
fildll
mov
pop
jb
rcr
test
lods
loop
cld
icebp
fdivrl
imul
shrl
aas
cli
add
dec
pop
int
sbb
scas
cld
leave
out
push
lcall
xchg
mov
je
arpl
cmp
enter
jae
fcomp
mov
pop
out
push
lods
jb
dec
repnz
lret
lock
cmp
push
xor
mov
sbb
decb
stc
mov
xor
mov
and
fdivrp
xchg
jae
or
mov
loopne
das
addr16
mov
arpl
and
scas
pop
or
stc
in
adcl
out
add
outsb
sub
mov
enter
popa
popf
push
in
sbb
imul
cmp
in
arpl
stos
add
push
fcoms
dec
insb
pop
out
add
sbb
mov
lods
cmc
inc
jae
mov
ret
pop
dec
fistl
stos
bound
inc
test
jmp
fldl
adc
fwait
lds
sbb
cmp
add
pop
in
stos
add
push
jge
in
push
sbb
jl
into
outsl
shl
push
jecxz
cmpsl
das
pop
pop
fldenv
fnstsw
int3
xor
imull
iret
scas
jl
subl
fs
jmp
sbb
lret
out
repz
pop
inc
movsb
jb
xor
mov
ss
jns
or
adc
lock
shlb
js
inc
pop
psubsw
out
cmp
sahf
mov
pop
std
dec
das
leave
mov
loope
cmp
add
fidivl
sbb
pop
pop
jg
inc
jp
lods
gs
sbb
adc
sub
xor
mov
sbb
mov
mov
xor
xor
into
mov
int
inc
xor
mov
out
push
shrl
cld
or
mov
jg
push
lods
ss
or
je
rcrl
adc
and
cltd
jns
pop
jle
out
dec
sub
or
repz
addb
lock
addr16
xchg
dec
jb
pusha
jne
mov
loop
je
sbb
lret
pop
push
test
xor
xor
fcoms
pop
mov
in
pop
jae
sbb
mov
pusha
push
push
mov
cmp
push
aas
repnz
inc
das
jo
sbb
pop
fsub
mov
imulb
lret
test
ds
lcall
cli
outsl
outsl
xor
add
sbb
dec
jno
xchg
mov
inc
xor
scas
mov
cmp
ljmp
imulb
test
sub
ljmp
inc
test
push
notb
outsl
mov
mov
ja
xchg
mov
aaa
xchg
or
dec
in
or
mov
fwait
ss
sbb
mov
test
mov
orb
aad
or
repnz
mov
jne
inc
mov
incb
cwtl
ljmp
dec
add
inc
sbb
mov
xlat
push
inc
mov
ret
aam
mov
push
mov
imul
xchg
rol
mov
jne
lret
mov
xchg
mov
mov
cmp
jns
lret
adc
lcall
jecxz
rol
test
hlt
push
pop
ja
pop
pop
das
aam
mov
fbstp
cmp
push
mov
inc
adc
out
push
jne
filds
scas
ret
ret
cmp
cmp
xchg
bound
aaa
mov
stos
xor
jmp
cwtl
inc
insb
test
lret
and
and
lfs
pushf
pop
fwait
int3
mov
mov
add
pop
sbb
outsb
pop
lret
adc
imul
xor
aas
repnz
lods
and
cmp
and
idivb
or
fldenv
aaa
lods
or
test
push
stos
ja
loop
add
mov
inc
push
lret
repz
push
gs
lea
sub
jge
push
scas
stos
add
sub
std
lea
push
lock
mov
xor
lods
mov
lss
xor
sahf
shll
jmp
mov
rorl
gs
add
add
add
jb
fnstsw
cmp
inc
push
outsl
sahf
push
push
mov
in
js
jo
das
mov
mov
bound
mov
ljmp
popa
jae
sbb
pavgw
jecxz
jg
in
das
inc
pop
daa
inc
neg
into
xchg
mov
mov
in
mov
adc
lcall
adc
push
add
mov
gs
aaa
cs
mov
mov
repnz
popa
pop
popf
fcmovb
and
loopne
pop
aam
xchg
loop
incb
cmp
xchg
add
push
jnp
push
inc
adc
mov
dec
aaa
fadds
and
push
jecxz
std
in
cmp
adc
pushf
jl
cs
das
and
xor
dec
adc
sbb
js
outsl
xchg
cmova
cmp
push
out
jg
jge
or
mov
push
or
pop
adc
mov
jo
loope
push
mov
sub
sub
push
jb
inc
adc
sar
fmuls
xor
orl
xor
std
mul
push
cs
xchg
into
dec
push
cmp
jmp
scas
pusha
pop
and
and
das
fsub
pusha
dec
adc
or
mov
std
addl
push
cmp
mov
iret
jns
lahf
pop
mov
scas
and
and
and
aam
add
and
and
lock
dec
hlt
mov
movsb
fidivrl
push
jp
cmp
fiadds
fs
notb
mov
and
jnp
pop
xchg
pop
bnd
lcall
pusha
dec
lock
add
xchg
scas
dec
fistps
mov
cmp
pop
and
in
cmp
mov
sub
arpl
data16
pop
imul
mov
mov
pop
sbb
cs
cs
es
mov
insl
andb
loope
lcall
sub
adcb
sub
test
pop
int
mov
stos
mov
push
lea
pop
neg
pop
mov
jge
pop
push
cmc
jns
push
stos
and
gs
dec
xchg
and
cltd
nop
xor
and
xchg
or
bound
pop
mov
lahf
dec
push
dec
lods
push
outsl
das
aad
cmpsb
or
aad
mov
loop
push
insb
inc
pop
mov
ficoml
in
inc
popa
inc
aad
adc
dec
je
inc
hlt
inc
sahf
jge
insl
addl
mov
test
ficompl
repz
jns
or
or
fs
stos
fidivrs
xchg
xchg
nop
inc
add
dec
int3
out
sbb
pusha
xor
imul
add
inc
fbld
das
ffree
dec
inc
into
out
pop
lods
idivl
imul
inc
xor
sbb
dec
jae
cmp
inc
jle
xchg
add
push
and
popf
sub
mov
xchg
cmp
jg
xor
jne
pop
out
xchg
movsl
cltd
jl
mov
std
sub
sarb
and
mov
test
xor
dec
inc
xchg
adc
jmp
stos
cmpsb
bound
andl
mov
mov
dec
test
inc
mov
push
xor
xchg
push
ss
jecxz
xchg
cmp
xchg
xchg
retw
in
sub
cmp
cmpsb
dec
fdivrl
xor
out
dec
jmp
lea
cmp
and
fidivrs
sbb
jne
js
roll
add
enter
lahf
mov
lcall
push
popa
mov
fidivl
mov
cmp
dec
icebp
sub
fisttpl
mov
push
cld
lahf
std
jmp
ds
sbb
cmp
pop
sbb
or
aas
outsl
xor
xlat
pusha
adc
push
jp
cmp
push
jno
movsl
ss
gs
sub
sbb
mov
scas
push
outsl
fidivrl
js
jne
cmp
sub
or
pop
jl
and
sahf
cmp
insl
cwtl
sbb
das
pop
add
sbb
mov
cmp
lds
inc
mov
or
insl
loopne
add
jbe
test
sti
lret
add
mov
mov
fs
jmp
jl
testl
push
pop
push
clc
vmread
mov
gs
test
cmp
or
shl
pop
adc
mov
insb
mov
sub
mov
sbb
mov
jo
cmpsb
cmp
test
and
cmp
ljmp
xor
jae
lcall
adc
stos
aas
jg
stc
xor
imul
lahf
jle
push
js
jo
add
imul
stos
ficoml
aas
fdivl
pop
das
fisubl
xchg
movsl
xchg
aaa
pop
jmp
or
adcl
test
inc
sub
cmp
jae
cmp
fistpll
push
je
or
mov
sub
lds
test
jg
addr16
or
push
adc
add
les
test
sub
fs
outsb
cli
js
call
xor
cmp
decl
outsl
cmpsb
pop
lds
ret
cmp
pop
lcall
xchg
mov
xor
push
es
repnz
and
mov
lahf
in
sbbb
cmc
negb
mov
xchg
and
pop
int3
std
or
push
imul
mov
adc
jo
sub
in
sbb
scas
add
data16
inc
lea
scas
push
mov
xchg
pop
out
bound
mov
shrb
mov
aaa
scas
in
push
repnz
jp
in
mov
mov
into
fisubrs
imul
nop
or
outsb
xchg
ljmp
nop
mov
add
jae
add
mov
mov
pop
mov
cmp
push
and
repnz
jae
push
mov
jl
ret
sub
sbb
add
pop
xor
dec
ret
mov
in
int3
inc
sbb
mov
jns
mov
mov
xchg
sub
push
cmpl
sbb
jnp
mov
js
cmp
and
or
and
int
into
imul
pop
dec
or
or
bound
lret
xor
addr16
dec
loopne
mov
loop
or
jo
popf
push
xorb
pop
pop
xor
enter
pop
cmp
cltd
fisubl
push
lds
push
pop
dec
cs
shll
dec
sarb
dec
cwtl
mov
insb
xchg
jno
cltd
adcb
mov
mov
out
or
add
xlat
out
imul
loopnew
cmp
xlat
outsl
or
pusha
lret
scas
pop
loope
lcall
cmp
cs
or
xchg
lret
int3
jle
shrl
imul
inc
jb
pop
stos
add
jmp
adc
lods
jmp
out
mov
mov
les
mov
sahf
fs
ret
bnd
jns
lcall
fadds
or
ja
cmp
mov
mov
mov
push
and
rcrl
push
mov
outsb
outsb
insl
das
sbb
xchg
sti
push
popa
mov
cwtl
iret
cmpsl
cwtl
enter
cmp
leave
or
or
push
cmpsl
icebp
inc
or
in
and
xchg
push
dec
cld
popa
je
mov
adc
mov
js
ss
das
dec
sub
adcb
repz
arpl
test
push
or
mov
or
call
jge
js
sub
mov
clc
and
aad
dec
and
or
adc
lcall
repz
rorb
stos
jo
mov
and
daa
stc
jl
subl
xchg
inc
push
out
bound
mov
xchg
cmpsl
dec
add
incl
and
jecxz
fbstp
test
mov
std
pop
rorb
adc
std
jg
insb
imulb
nop
lods
inc
mov
add
cmp
insl
xchg
xor
mov
enter
adc
push
jo
sub
add
sarb
cmp
push
iret
cmc
pop
lock
mov
stc
loop
sub
int
mov
pop
subb
das
inc
jb
inc
xor
lret
adcl
jb
scas
bound
sub
aam
scas
outsl
pop
movsb
popa
mov
jl
push
push
xchg
mov
rolb
push
lret
dec
pop
dec
bts
cmpsl
mov
lds
mov
mov
xor
mov
push
aas
add
bound
inc
cltd
and
fs
add
jae
and
push
jae
pop
adc
sbb
dec
xchg
sahf
adc
mov
push
push
movsl
stos
int3
xor
add
xor
das
xchg
mov
pop
push
mov
sbb
rcrb
cmc
push
std
int3
stos
mov
fdivr
jl
mov
mov
mov
imul
mov
sbb
loopne
mov
test
pop
scas
or
inc
mov
mov
test
push
cld
flds
subb
cwtl
push
daa
das
gs
add
outsb
mov
sub
cwtl
inc
mov
jmp
jge
test
sarb
test
xchg
add
cmpsb
sbb
cmp
cld
mov
test
int3
popf
mov
divl
jecxz
adc
sub
lds
cmp
add
lea
xchg
lsl
lcall
pop
xchg
andb
dec
test
loopne
gs
push
out
mov
icebp
inc
sub
sahf
test
mov
pop
dec
mov
xchg
test
nop
sbb
scas
pop
pop
aad
mov
cmp
into
push
nop
and
pop
inc
push
inc
xchg
push
jmp
enter
or
inc
xor
mov
adc
arpl
jo
pop
pop
aas
idivb
cmp
insl
inc
pop
out
mov
es
cltd
and
data16
dec
mov
mov
movsl
push
outsl
cmpsb
push
dec
cli
and
jns
xor
fs
jmp
mov
sahf
cmp
xor
loop
and
aam
sub
call
push
pop
sbb
jmp
into
sub
push
fucomip
lcall
popa
jg
rcr
and
pop
lea
push
jns
nop
data16
sbb
outsb
pop
arpl
enter
push
inc
push
jb
or
push
push
jp
lock
add
xor
iret
inc
push
xchg
lea
repnz
imull
scas
lret
outsb
ds
lock
out
aad
add
and
das
pop
jns
outsl
or
lock
sbbl
mov
aam
mov
in
dec
dec
xchg
mov
jl
mov
int3
and
pusha
push
data16
xchg
popf
ss
mov
adc
push
xor
mov
mov
lea
mov
scas
arpl
add
aam
mov
rcrb
arpl
lock
mov
enter
pop
lods
fdivs
inc
and
jg
add
js
xor
or
mov
jae
lea
stc
adc
xrelease
movsl
aad
mov
mov
dec
fnsave
cmp
xor
adc
inc
xchg
sub
ja
shrb
inc
fwait
cmpl
int3
rolb
adc
jp
inc
push
push
imul
inc
mov
mov
insb
xor
push
lcall
pop
movl
jb
xchg
mov
mov
and
xchg
jnp
ja
mov
push
imul
jg
outsb
outsb
push
mov
loopne
out
xor
outsb
out
adc
mov
mov
lret
arpl
xchg
pop
test
mov
icebp
stos
pop
mov
jne
push
lcall
inc
cmp
roll
pop
mov
fldenv
icebp
and
cld
out
movsb
inc
das
mov
mov
mov
and
cli
xorl
cmp
clc
scas
mov
adc
cmp
int
xlat
mov
inc
jne
aas
cltd
xchg
repnz
movl
daa
mov
or
mov
xor
cmpsb
adc
shll
in
imul
lods
arpl
mov
nop
pop
dec
aad
fs
insl
cmc
mov
cmc
xchg
movsb
sbbb
and
push
xchg
sbb
mov
inc
fdiv
sub
insb
test
dec
dec
mov
inc
dec
dec
loop
mov
sbb
cs
outsb
dec
jo
ljmp
pop
dec
cmp
insb
sbb
scas
mov
cli
push
pop
lea
xchg
lret
xor
arpl
je
ret
push
or
fs
addr16
xchg
push
clc
daa
popf
xor
lahf
mov
push
xchg
mov
push
xlat
out
fstps
sub
pop
mov
mov
mov
mov
xchg
add
es
sti
cmp
std
test
and
incb
xor
cmp
sub
mov
pop
cmc
or
mov
out
insb
in
fucomi
mov
addl
outsb
cmpsl
or
jecxz
repnz
dec
and
add
xor
pop
inc
arpl
sbb
jl
pop
movsb
xchg
push
fistpll
push
or
out
cmp
add
jecxz
adc
jnp
xlat
sub
cmpb
dec
fcmovbe
daa
push
popf
stc
ds
sahf
insl
dec
fsubl
dec
test
into
dec
mov
hlt
lods
push
mov
leave
pop
or
in
push
adc
cs
xchg
push
rolb
cmp
subl
rcll
jo
or
pop
or
test
mov
adc
mov
add
inc
pop
jns
push
mov
sbb
int
mov
pop
mov
inc
repz
push
jg
sub
xchg
mov
pop
mov
xchg
xchg
aam
xor
push
jns
push
fmull
roll
push
dec
fst
adc
imul
pop
jl
and
repnz
aad
es
push
xlat
add
mov
lock
xor
mov
jl
loopne
clc
or
inc
push
shrb
and
lock
movsb
pop
mov
icebp
inc
stc
lock
mov
shl
outsl
push
imul
loope
jb
sbb
lahf
xlat
jbe
aas
out
ss
loopne
push
adc
push
mov
sbb
lods
sub
push
pop
xor
lods
dec
dec
adc
pop
arpl
push
out
aad
cmp
mov
xchg
mov
jnp
adc
int
stos
mov
shl
jo
repz
mov
lret
daa
mov
sub
fsubl
aad
sahf
mov
fs
sub
jmp
dec
arpl
dec
out
sahf
je
std
pusha
mov
fcoml
jbe
leave
dec
out
cltd
and
mov
mov
and
xor
aam
pop
mov
push
out
pop
cmp
xchg
fisubrl
popf
rorl
pop
loope,pt
js
xlat
mov
pop
pop
push
push
or
sbb
cmp
jp
jae
sub
out
jne,pt
xor
push
or
cmc
push
add
xor
movsl
js
repz
or
pop
cmpsl
mov
sti
mov
es
es
and
or
sbb
test
inc
imul
adc
xchg
sub
out
mov
sub
sub
hlt
cmp
add
xor
cwtl
add
xor
test
xchg
fsubrl
test
cmp
test
mov
nop
jp
pushf
sbbl
sbb
or
dec
sbb
dec
jl
shrl
lret
lret
mov
sub
ret
mov
cwtl
lret
dec
push
push
addr16
leave
or
pop
dec
insl
in
and
jne
and
movsl
push
dec
shlb
xchg
lods
gs
xchg
fs
xor
loopne
jmp
push
pop
adc
or
lock
enter
loope
outsl
dec
stos
lahf
xchg
insb
test
std
and
insb
pop
pop
test
pop
mov
fsincos
adc
sub
call
shrb
icebp
dec
or
inc
fcmovnbe
int3
xchg
jmp
push
jae
outsb
into
dec
sub
notl
in
repnz
aad
lret
inc
xchg
shrb
es
xor
or
jno
xor
add
xchg
mov
repnz
test
cmp
or
or
adc
sti
pop
shlb
loopne
in
xor
mov
sub
bound
mov
popf
mov
mov
gs
out
leave
xor
mov
out
shl
dec
xchg
ret
in
lret
dec
xchg
lea
cmpw
repz
pop
ret
iret
sub
insl
dec
jns
cld
mov
sub
lea
out
fwait
lods
push
movsl
icebp
push
outsb
nop
fistpll
aas
dec
jns
mov
jmp
gs
mov
pushf
jb
cmp
xor
in
sbb
and
adc
ret
or
divl
mov
movsb
lret
andb
jb
pushf
mov
fisttpl
push
push
mov
gs
mov
outsb
icebp
pop
arpl
cmpsb
push
push
push
call
pop
insl
fidivrl
out
mov
dec
add
fcoms
pop
pop
sti
add
jnp
xchg
pop
mov
in
inc
sti
insb
mov
inc
add
xor
jbe
aad
sbb
mov
shld
loopne
inc
adc
or
mov
push
push
sub
xchg
pusha
mov
xor
mov
aad
scas
mov
mov
pop
loope
mov
jbe
jbe
mov
fistpl
clc
dec
push
dec
add
adc
mov
cwtl
rcll
repnz
jg
rcll
ja
jmp
pop
xchg
imull
scas
lea
mov
inc
or
mov
mov
sbb
fidivrl
es
and
push
mov
mov
xchg
and
ja
mov
ljmp
xchg
test
xchg
testw
lods
jmp
push
fdivl
mov
je
cmp
adc
pop
dec
cmpsl
mov
orps
or
push
repnz
hlt
adc
or
sbb
inc
and
jae
loop
outsb
in
xor
ja
mov
push
mov
repz
mov
decl
adc
xor
jg
loopne
and
cltd
or
inc
pop
dec
push
dec
dec
adc
popf
std
cmp
adc
lock
stos
and
fistpl
sarl
movsl
rcrl
mov
rcrb
incl
aaa
aaa
fsts
stc
and
add
pop
lret
test
in
hlt
adc
add
loope
div
popa
into
gs
shlb
sbb
xor
push
xchg
fs
adc
movsb
jb
ss
ljmp
jmp
mov
dec
incl
loope
icebp
sbb
xchg
add
popl
fcomi
insl
mov
xchg
jne
in
xor
in
outsl
aaa
xchg
scas
pop
fwait
fwait
cld
push
test
push
lds
sub
xor
mov
and
cmp
mov
mov
imul
pop
in
sbb
sub
adc
into
or
aaa
xor
pusha
mov
mov
mov
xor
mov
repnz
cmp
jp
data16
incb
inc
popf
insb
push
jo
jns
cmp
cmp
xchg
test
rolb
leave
je
lcall
jns
pop
mov
sub
sub
insb
dec
outsb
cli
or
sti
sarb
xchg
dec
sub
ret
jno
or
jg
xchg
push
jmp
stos
aad
rorb
outsl
jno
pop
ficompl
adc
push
lock
pop
xchg
push
test
add
pop
sti
push
lods
cmovbe
push
scas
lds
sub
xchg
add
rcll
add
aad
out
aad
sub
shlb
es
xor
and
add
jecxz
mov
sbbb
cmp
adc
sbb
and
test
aas
jns
push
ljmp
mov
movsl
or
cli
sub
mov
push
popf
sub
cmp
dec
and
dec
adc
dec
or
adc
and
fsubs
xor
and
je
mov
sbb
lods
dec
jne
adc
loop
sbb
mov
xlat
lods
inc
push
add
mov
or
lock
xchg
mov
pop
lret
xor
movsl
xchg
cmpsb
popl
adc
add
add
push
cmc
xor
mov
dec
sbb
mov
ja
inc
arpl
adc
and
pop
and
aaa
xchg
popf
xor
lret
arpl
xor
and
rcrl
sbb
loop
mov
mov
push
jmp
fsubs
es
lods
imul
lock
mov
scas
sub
jns
push
in
std
cwtl
ljmp
xor
fistl
fisubrl
sbb
mov
mov
and
cltd
js
xchg
faddl
nop
lret
xor
sub
mov
orb
popf
jns
scas
test
notb
mov
ds
pop
or
sub
cmpsl
shl
in
out
popf
sbb
ss
aaa
lret
dec
dec
inc
in
jae
in
push
mov
jns
hlt
mov
cwtl
std
cwtl
mov
jae
pop
in
add
mov
jne
leave
dec
insb
imul
imul
xchg
mov
pop
out
push
in
sbb
sbb
pop
popa
pop
jae
mov
xchg
push
mov
xor
aas
int3
mov
push
fldl
push
movd
cmp
xchg
call
jl
mov
les
repz
adcb
out
repnz
push
mov
jle
scas
fcompl
cltd
int
push
jp
mov
pop
add
dec
push
shrl
or
or
adc
mov
test
mov
shrl
or
cmp
mov
mov
test
add
sbb
pop
ljmp
xor
jg
mov
pushl
popf
cmpsb
loop
jnp
test
fimuls
mov
jnp
inc
aaa
in
cld
outsl
adcb
clc
jns
mov
scas
mov
adc
jo
cltd
adc
out
dec
cltd
cwtl
sbb
cwtl
fisttpl
and
jmp
ror
movsb
dec
push
push
pop
test
out
insl
loop
xchg
cmp
fnstsw
push
push
cmp
iret
cmpsl
fmul
adc
shll
pop
mov
mov
cmp
pop
jmp
pop
cld
bound
movsb
pop
inc
or
stos
and
mov
xor
pop
add
iret
xor
and
scas
mov
stc
cmp
subb
mov
repnz
insb
pop
inc
loope
xchg
xor
mov
inc
arpl
in
mov
xor
sub
nop
out
das
mov
sub
sub
fadds
sub
js
and
push
in
dec
adc
dec
push
fidivrs
pusha
xor
add
dec
insb
rcrb
sbb
add
xchg
stos
sub
stc
stc
aad
loope
out
sub
xor
iret
lcall
in
gs
jle
push
mov
pop
cmp
cmp
movsb
push
push
xlat
pop
and
xor
xor
test
pop
dec
inc
loopne
arpl
dec
jno
inc
mov
aad
jb
int
mov
sahf
arpl
push
push
mov
mov
inc
ljmp
lea
popf
loopne
lret
loopne
das
cmp
scas
stos
cmp
and
sub
inc
inc
fcoms
movsl
aas
popf
es
ret
xor
lea
or
push
loop
jl
cmpsb
mov
dec
xchg
mov
mov
shll
mov
mov
push
stc
cmp
pop
xchg
sub
and
sbb
and
sub
fildll
cmpsb
adc
jmp
fcoml
or
cmpsl
push
rorb
xchg
xchg
or
cwtl
adc
stc
mov
xor
orl
pusha
out
adc
sbb
adc
cmpsb
jge
out
pop
sbb
add
adc
dec
imul
dec
xchg
notb
xchg
cli
mov
adc
pop
sub
pop
sbb
fwait
scas
imul
aaa
aas
sti
imul
inc
mov
push
mov
das
add
sbb
push
bound
sbb
jb
movsb
pop
dec
dec
scas
jno
dec
lahf
or
lret
test
loop
fstpl
incb
scas
add
and
cli
ret
in
stc
mov
mov
pop
ss
out
xchg
adc
xchg
pop
jmp
mov
jo,pn
sahf
mov
or
repnz
vmovd
xchg
jp
clc
bound
hlt
pop
cmp
scas
ja
sub
leave
pop
sbb
outsb
sbb
xchg
push
add
mov
jmp
out
mov
mov
je
imul
push
insb
test
mov
cmpsb
in
xor
ficoml
jmp
jle
or
outsl
les
lahf
mov
pop
sbb
adc
mov
mov
mov
lahf
stc
xchg
lcall
mov
movsl
loope
push
push
leave
or
jmp
sbb
out
out
push
cli
sub
aaa
xor
mov
mov
mov
mov
rcl
dec
add
icebp
mov
add
fdivr
and
inc
testb
mov
cmp
adc
insb
xlat
rorb
popa
outsl
insb
loope
int
xchg
push
jmp
aaa
jo
xchg
sub
sub
stc
stos
fistps
test
push
sub
mov
jmp
ror
xor
pop
rcll
ficoms
xchg
inc
in
xchg
ja
out
inc
out
addr16
icebp
push
in
mov
mov
sbbl
call
xchg
nop
cmp
lea
ret
xchg
mov
xchg
js
outsl
xor
pop
push
push
add
xlat
or
inc
and
insb
lods
sbb
cmovne
jb
inc
jbe
jbe
fbstp
stc
and
mov
push
sbb
push
sbb
daa
xchg
out
lea
mov
mov
out
call
mov
jns
push
push
or
ds
gs
mov
and
mov
and
inc
and
xchg
sub
pop
insb
add
dec
push
adc
pop
dec
jmp
in
neg
loopne
pop
vmptrst
subl
inc
sbb
in
faddp
xchg
ret
loope
mov
and
cmpsl
repz
sahf
mov
test
sti
stc
js
mov
inc
adc
push
fmuls
pusha
push
mov
fucomip
mov
orb
test
ja
rorl
fildll
mov
sbb
mov
sbb
paddq
in
es
pop
in
mov
xor
ret
call
mov
pop
xchg
mov
xchg
sahf
sbb
push
cmp
movsl
pop
mov
js
xor
pushf
sbb
jbe
sub
hlt
xor
imul
push
int
faddl
bound
out
ret
mov
test
xchg
or
jnp
jo
das
lea
xchg
push
dec
sbb
sbb
mov
pop
test
cmp
push
jge
pop
xlat
jge
xor
mov
ret
call
jmp
les
push
cmc
outsb
adc
mov
into
fists
cwtl
push
mov
xchg
pop
and
mulb
mov
sti
pop
outsb
mov
mov
into
mov
mov
pop
add
data16
jmp
add
cmpsl
sbb
insl
xlat
rcrl
push
pushf
jne
pusha
into
dec
out
mov
fwait
or
ja
ja
jae
xor
lock
sub
movsb
mov
sbb
xchg
mov
ds
xor
enter
fstps
jg
sub
stos
add
movsb
cmp
inc
adc
dec
mov
jge
aaa
out
pop
or
rcll
mov
inc
jp
insb
dec
outsl
mov
ftst
fildll
movsb
pushf
fwait
push
xchg
jnp
mov
frstor
icebp
int
shrl
das
in
aam
add
xchg
repz
xor
inc
lret
clc
inc
dec
jns
jno
lods
add
cltd
sbb
xor
cs
in
mov
mov
loope
cmpsb
pop
shrb
xchg
cwtl
or
stos
xor
js
js
idiv
xchg
cmc
adc
lds
sub
std
xorl
sub
mov
mov
jnp
xchg
imul
sbb
inc
xchg
repz
out
scas
repz
or
or
mov
and
call
scas
cmc
xchg
xchg
cmpsb
or
sbb
cltd
out
call
mov
lahf
inc
and
ret
push
mov
fcmovu
adc
xor
pushf
jg
push
aas
push
adc
jmp
hlt
lret
into
xchg
mov
movsl
rep
mov
push
stos
inc
jb
idivb
stos
mov
in
push
into
cmpsl
into
mov
xlat
je
xor
dec
jne,pn
adc
jno
mov
dec
sub
and
mov
add
mov
xor
push
fstpt
setne
mov
mov
addr16
push
or
std
jge
pop
or
rcrl
adc
fcomps
mov
pop
addr16
fisttps
sub
mov
and
aas
cld
dec
fsts
incb
imul
mov
xchg
mov
into
daa
jg
popw
mov
jo
xor
out
cmpsl
push
lods
xor
gs
leave
arpl
dec
add
shld
sbb
add
add
test
cmc
retw
ja
ficomps
nop
enter
nop
sbb
mov
add
nop
imul
cmp
and
testl
repz
movsl
frstor
int3
push
bound
fwait
jnp
lods
lods
ret
in
pop
paddw
sahf
js
fstl
push
movsl
or
mov
push
cmp
inc
sub
jno
xor
or
test
xor
cmp
movsb
je
jmp
cmp
and
jmp
pop
jg
leave
hlt
jp
out
insb
mov
mov
mov
adc
mov
xlat
ds
stos
jno
xor
jg
out
push
xchg
sbb
add
repnz
popf
pop
bound
nop
or
out
ror
dec
sub
push
into
lea
xchg
arpl
in
cmp
cmc
aaa
adc
cmpl
decl
iret
mov
inc
popa
dec
and
mov
jp
add
push
lahf
lahf
push
sbb
jb
lea
cmc
and
rclb
pop
inc
fisttps
jg
sarl
sbb
dec
xchg
mov
insb
lea
je
push
jmp
jg
pop
xlat
xrelease
popf
jle
dec
mov
pusha
mov
mov
inc
popf
push
repnz
mov
pop
pusha
imul
ret
movsb
call
push
lods
ds
push
rclb
push
scas
repnz
sar
loope
outsb
mov
pop
inc
and
cwtl
jmp
dec
xor
cmc
mov
push
sbb
mov
testb
lds
iret
pop
jg
sti
popa
imul
test
adc
mov
sub
test
imul
pop
xchg
cmpsl
xchg
push
add
mov
adc
mov
adc
insb
testl
sub
xchg
aam
hlt
mov
test
dec
clc
sbb
dec
push
or
jmp
ljmp
inc
push
or
test
imul
sbb
sti
or
mov
fldl
xor
lret
fists
sub
pop
dec
stos
jg
adc
enter
sub
xchg
dec
not
cmp
loop
pushf
push
add
cltd
shrb
jle
push
sbb
inc
push
mov
lea
xchg
mov
fdivrs
mov
push
xor
data16
imul
sub
jl
and
cmp
mov
inc
cwtl
popa
and
pop
add
or
cmp
inc
dec
mov
xor
pop
sub
adc
loopne
sub
cmpsl
fsts
mov
imul
repnz
adc
cmp
icebp
jle
sbb
std
into
shl
cmp
inc
sub
adc
mov
cltd
inc
pop
add
lret
fbstp
push
push
fbld
loop
iret
and
cmp
jmp
repz
add
and
inc
sbb
jno
test
jae
xor
mov
sub
cli
fcmovbe
sar
lret
push
sbb
xchg
sub
dec
dec
mov
in
xchg
ss
or
test
dec
fcmovb
sahf
icebp
jmp
mov
jb
pop
lret
aas
aas
pop
jmp
xor
nop
cmpl
in
jl
xor
stos
mov
xchg
mov
sub
iret
and
adc
xor
hlt
in
jne
aas
jecxz
cld
fwait
test
jle
mov
insb
pop
inc
push
aam
rcl
pop
add
out
push
cli
mov
ret
xor
push
push
fnstsw
or
iret
aam
mov
iret
sub
or
clc
fsts
icebp
ret
adc
pop
insb
cs
ss
dec
xchg
jmp
or
jb
cmpsb
mov
adc
scas
bound
in
jo
mov
es
xchg
jnp
jb
icebp
pop
push
leave
sti
outsl
sub
dec
outsb
dec
test
and
dec
inc
or
sub
dec
push
fcomi
std
outsl
into
lds
scas
repnz
lods
clc
jno
int
dec
mov
test
ds
pop
mov
jg
cli
add
outsl
push
jge
xor
push
add
cmp
and
cmpsb
cmp
or
cmp
mov
pop
lea
push
dec
dec
sbb
push
or
shrb
mov
jo
insl
mov
mov
pushf
mov
sbb
inc
loopne
jne
sbb
dec
jl
call
push
fmull
jbe
mov
jae
and
mov
aaa
shrl
fwait
add
imul
inc
mov
int3
adc
mov
loopne
notl
pop
mov
jle
dec
pop
scas
adc
or
mov
test
mov
jns
pop
js
fwait
test
fwait
ss
dec
jne
jp
and
pop
adc
mov
rcr
xchg
xchg
cmp
add
dec
and
add
inc
add
and
lods
inc
stos
pop
cmp
jo
xor
fidivrs
add
mov
jns
and
and
lods
mov
std
push
adc
leave
push
mov
iret
clc
add
mov
add
enter
dec
pop
decl
ss
pop
cmp
lret
lret
loop
pop
lahf
pop
fstpt
xchg
movsl
movsb
adc
subb
pop
fistl
sti
push
jl
cmc
ds
stos
or
bound
mov
gs
sub
bound
mov
sbb
data16
imul
xor
xchg
sub
mov
add
icebp
int
xchg
aam
imull
lcall
sti
aas
mov
mov
mov
clc
or
inc
and
shlb
nop
xor
adc
push
xchg
push
xlat
sbb
sbb
pop
inc
aad
leave
mov
pop
cmc
sbb
arpl
cmp
lcall
rcr
repnz
adc
xorb
fistps
hlt
push
insl
dec
dec
push
out
inc
sarl
rorl
mov
push
dec
sub
pop
jp
nop
xlat
sbb
xchg
pop
xor
pushf
cmp
cmpsb
cmp
cmp
lods
pop
xor
cwtl
stc
lcall
int
jp
pusha
add
jae
inc
mov
daa
xchg
scas
repz
pop
xchg
mov
jg
sbb
fsubl
jns
clc
daa
sbb
add
xor
leave
push
clc
mov
addr16
pushf
clc
stos
pop
in
inc
inc
mov
loop
in
add
mov
dec
xchg
subb
mov
sub
lea
mov
xorl
pop
inc
loop
mov
mov
stos
xor
xlat
mov
pushf
sbb
cmp
cmp
fisubs
test
popa
mov
arpl
push
mov
loope
mov
sbbb
sti
out
pushf
push
mov
mov
andl
loopne
orb
pop
dec
loop
or
dec
pushf
xchg
jno
dec
mov
movsl
sarl
outsl
xor
mov
idivb
push
rorl
lcall
jle
and
jae
pop
inc
ds
sarb
js
jp
notl
jae
cltd
aam
sub
dec
call
adc
int3
jge
jg
mov
push
scas
jmp
dec
clc
jo
add
sbbb
int
adc
lds
push
es
and
push
cli
mov
jo
xchg
and
push
lea
mov
mov
xchg
inc
mov
mov
in
inc
jns
adc
cld
xchg
lahf
add
sbbb
mov
rclb
xor
ss
push
sub
mov
or
fcompl
mov
clc
dec
pop
push
mov
imul
filds
mov
adc
incb
or
imul
adc
scas
test
lods
and
cmpsl
stc
test
movl
dec
sti
ds
lock
cmpsl
fistpl
inc
in
xor
into
cli
pop
and
ret
cltd
insb
js
sub
loope
jbe
sti
mov
lods
pushf
jl
lret
daa
push
imulb
push
jo
sbb
sahf
add
rorb
je
mov
stos
das
popf
data16
ss
in
xor
xchg
mov
movsl
xchg
arpl
jnp
aas
loopne
insb
imul
pop
out
cmp
call
sub
or
leave
mov
dec
jp
lock
movsl
cmp
lock
mov
mov
pop
mov
out
push
shrb
lret
fdivp
pop
mov
mov
inc
dec
fildl
pusha
mov
int
fimuls
pushf
or
and
xchg
notl
hlt
out
lret
stc
mov
mov
pop
xchg
xor
pusha
push
add
cmp
dec
mov
lahf
mov
add
inc
repz
sub
lds
repnz
fsubrl
daa
add
xor
divb
lods
mov
mulb
cwtl
jmp
out
call
dec
cs
mov
mov
sbb
test
push
pop
insl
mov
shlb
mov
roll
adc
push
lds
cs
out
test
aas
ficoms
pop
bound
mov
aad
cli
arpl
sub
ds
inc
popf
xor
mov
pusha
lret
push
mov
jnp
imul
cmp
out
sbb
js
cmp
lret
insl
loopne
mov
add
adc
push
or
lock
orl
mov
push
mov
pop
cmp
dec
rolb
dec
mov
ret
inc
lahf
lsl
and
or
and
mov
cmpsl
in
cmp
or
or
and
cmp
and
scas
leave
dec
mov
test
sub
xor
lcall
outsl
pusha
loope
xor
cmp
inc
mov
negl
inc
test
mov
and
dec
test
imul
pusha
mov
xchg
andl
mov
jb
mov
jl
repz
push
in
xchg
icebp
or
xor
insb
outsb
call
fcoms
pop
push
and
pop
int
adc
mov
imul
es
fdivs
lea
push
sbb
push
ret
adc
or
sbb
xor
cmp
jbe
enter
cmp
push
mul
cwtl
xchg
outsl
je
push
test
sbb
or
adc
arpl
or
movsb
insb
aaa
mov
incl
in
jne
pop
cmp
lret
xor
sbb
and
and
pop
outsb
mov
es
xchg
in
jb,pn
ds
inc
or
cmpps
or
xor
pop
gs
stc
sub
ljmp
mov
data16
xchg
dec
out
pop
push
test
pop
sti
mov
jg
cmp
mov
jnp
sbb
dec
mov
jbe
addr16
sub
push
psubd
lret
push
and
mov
pop
sarb
cli
out
cmp
adc
out
jge
jge
and
cltd
mov
pop
imul
or
mov
push
cmp
clc
aad
rcrb
scas
push
xchg
loopne
and
push
nop
cli
dec
sub
mov
jmp
dec
lds
addl
dec
aaa
iret
test
xchg
xchg
mov
mov
or
xlat
pop
push
mov
je
xor
add
scas
test
sub
cmp
dec
push
mov
loop
dec
popf
cmp
dec
fadd
je
sub
addr16
add
mov
push
scas
fwait
mov
inc
jg
out
jno
and
ret
cmp
mov
sbb
ljmp
and
jo
jo
in
inc
xor
xchg
push
cld
jb
sbb
stos
mov
dec
inc
inc
jo
shld
pusha
jno
xor
push
mov
popa
or
cmp
or
insl
pop
sahf
outsb
sbb
mov
sub
sub
adc
mov
sub
aad
ljmp
jb
int3
add
shll
jge
cwtl
insl
jbe
or
push
ljmp
cmc
testb
out
add
call
in
pop
lea
jo
mov
in
inc
sub
mov
pop
sub
mov
xlat
mov
cli
rcr
aad
dec
sub
adc
sbb
cmc
or
mov
jmp
orb
mov
dec
clc
testb
daa
cmp
push
mov
adc
insl
push
inc
addr16
sub
aas
xlat
repz
push
lds
pop
dec
or
sbb
sbb
push
inc
sbb
lods
xlat
xchg
test
lahf
cmp
jmp
incl
jmp
scas
stos
sbb
jnp
jp
gs
cmp
inc
sub
je
push
pcmpeqd
jge
lds
ret
das
pushf
in
inc
hlt
mov
sahf
adc
pop
xchg
push
bound
loop
inc
pop
mov
push
inc
xor
insl
xlat
sub
xchg
loopne
xor
xor
and
add
fdivl
movsb
inc
lock
add
std
lock
movsl
lret
imulb
cmp
stos
cwtl
adc
sbb
xchg
cmc
fdivs
sbb
repz
adc
stos
fnclex
mov
lret
sub
out
xchg
lret
fists
cmp
lods
sub
add
mov
pop
xchg
push
and
mov
mov
mov
cmpsb
sti
insb
rorl
cmpsb
ret
sub
fmull
sahf
jae
mov
rorb
mov
inc
lcall
sbb
test
or
addb
sbb
push
xor
jnp
loop
addb
gs
sub
xchg
pop
negl
pusha
jge
xor
mov
or
daa
mov
xchg
mov
icebp
cmp
mov
lcall
sub
lock
or
jnp
add
out
push
fdivl
scas
dec
cwtl
out
xchg
pushf
jno,pn
cmc
int3
lahf
jle
cmpsb
add
test
sbb
repz
fwait
xor
aas
xchg
jle
mov
adc
jnp
enter
out
pop
jmp
xor
add
fcoms
rorb
adc
popa
pushf
daa
add
sub
mov
push
int
xchg
call
fildl
adc
sub
shr
inc
push
pop
dec
stos
or
and
dec
pop
cmc
and
int3
cmp
and
scas
cmc
cs
aad
gs
pop
arpl
inc
jno
push
mov
push
push
adc
cli
movsb
and
mov
adc
mov
cmp
xchg
adc
cmp
pop
testb
pusha
out
ret
hlt
rol
xor
ret
pop
nop
popa
mov
mov
mov
cmp
add
xor
out
ret
adc
mov
xor
aad
aas
and
push
jns
enter
jmp
repz
sbb
mov
lock
and
fmull
cmp
out
test
and
mov
push
xchg
movsb
loopne
push
pop
jmp
mov
push
mov
pop
lahf
iret
push
lret
insb
xor
ds
out
adc
jae
lcall
mov
xchg
aaa
lods
imul
mov
xor
jmp
fcoms
and
and
ret
mov
stos
mov
ret
cmp
xor
mov
fwait
sbb
inc
aas
sti
sub
arpl
out
xchg
dec
cld
sahf
outsb
xchg
loope
add
frstor
shrl
push
or
lods
repnz
rcrb
add
loopne
sub
test
push
jl
xor
cmp
lods
pop
push
push
test
std
mov
sub
push
stos
pop
aaa
outsl
shrl
jae
fsubrs
xchg
adc
insl
mov
pusha
jmp
sbb
int3
mov
mov
arpl
push
mov
inc
mov
rcrl
push
cmp
outsl
and
ss
inc
xor
enter
ret
notb
fnstenv
int3
adc
or
fmulp
pop
push
xchg
xchg
xor
stos
lods
xor
jecxz
dec
dec
hlt
stos
jnp
xchg
pop
jbe
mov
jo
mov
adc
outsb
dec
xchg
imul
arpl
cmp
test
mov
cli
movb
cld
mov
lcall
pushf
mov
out
xor
dec
adc
mov
push
ds
outsb
hlt
push
scas
push
push
stos
mov
push
xchg
imul
aam
sbb
jl
xor
pop
or
pop
xlat
je
jg
jl
rorl
or
jecxz
adc
add
xlat
aas
sbb
mov
jl
cmp
clc
mov
xor
fadd
insl
pop
call
push
inc
mov
cmpsl
sbbb
and
aaa
test
pop
or
jne
inc
adcl
aaa
mov
mov
andl
xor
and
and
das
push
cmp
sub
xchg
jmp
outsl
mov
fwait
cmp
xchg
and
cmp
cld
inc
jle
fyl2xp1
test
in
in
sub
mov
sub
ja
cmp
cli
insb
sub
xor
pop
pop
dec
fs
out
lcall
lods
clc
cmp
adc
cwtl
push
and
xchg
pusha
lods
add
popa
mov
ja
xor
fwait
mov
xchg
test
aad
clc
jmp
push
mov
popa
dec
aam
movsb
loop
adc
fcoml
xor
push
je
mov
inc
fs
sub
mov
ret
dec
mov
rcrl
sub
jmp
cltd
ljmp
mov
into
sub
or
dec
mov
mov
in
mov
mov
and
cmp
icebp
sub
xor
movsl
pop
pop
mov
sub
mov
stos
rolb
mov
mov
mov
in
js
sarb
pop
out
mov
rorl
pusha
pop
push
dec
sbb
ljmp
sbb
loope
shlb
je
push
fsubl
pushf
gs
adc
stc
mov
icebp
sub
xor
lds
xadd
dec
jbe
ljmp
stc
std
adcl
fisttpll
fucomp
inc
pop
push
rcrb
push
ljmp
insb
mov
das
call
push
or
loope
jge
repnz
dec
pop
int3
ret
jg
add
js
push
in
pop
dec
out
or
icebp
arpl
or
rorl
push
loopne
popa
je
xchg
idivl
sub
cmc
xlat
adc
sbb
clc
mov
mov
inc
push
int
jg
dec
in
add
scas
mov
ds
dec
sub
jbe
idiv
test
test
vmovlps
cmp
xchg
sar
aad
lods
pop
sahf
or
popa
pop
xlat
pop
xor
pop
orl
scas
sub
xchg
jo
fisubrs
mov
sti
imul
test
and
inc
cltd
add
mov
lock
xchg
push
enter
sub
add
xor
repnz
test
adc
pop
int3
sarl
xlat
pop
sbb
in
xor
add
inc
inc
jecxz
xchg
rcl
and
js
test
rcl
push
dec
adc
or
adc
jge
jg
rcrl
dec
lcall
es
daa
mov
mov
int3
out
xor
jns
fsubl
mov
add
jl
jle
xchg
pushw
repnz
adc
sub
push
push
push
out
adc
loopne
daa
inc
jo
dec
adc
dec
mov
addr16
loope
test
icebp
jmp
adc
mov
mov
rclb
sub
and
mov
cwtl
push
add
pop
jno
sbb
cmpsb
sbb
decl
js
rorb
movsb
das
mov
popl
ficomps
pop
jae
or
dec
fldlg2
push
cmp
jne
std
iret
lock
arpl
sbb
push
inc
mov
sti
ja
xchg
jo
aas
addl
cmp
push
loopne
mov
inc
cwtl
jb
scas
not
fwait
and
push
jnp
imul
mov
sub
or
out
testb
lods
loope
imul
es
add
xor
divb
xchg
sbb
lahf
repnz
mov
pop
sbb
out
xchg
xor
lods
test
xchg
dec
lods
aad
xor
mov
adcl
das
dec
inc
ret
ss
gs
aad
les
sbb
xchg
jecxz
mov
popf
lret
filds
cmpsb
pop
mov
fidivrl
dec
or
mov
xchg
loop
push
xchg
jnp
cmp
or
jp
push
inc
repnz
xor
repz
iret
mov
adc
mov
pop
sbb
jnp
xchg
mov
std
pop
xchg
insl
hlt
pop
out
push
xor
sahf
mov
mov
out
iret
rcrl
popl
adc
clc
add
cmp
jp
int
adc
ja
xor
dec
push
fsts
les
mov
test
hlt
negl
repnz
inc
adc
cmpxchg
pop
sbb
cwtl
lret
incl
push
mov
adc
mov
add
cmp
dec
insl
les
in
je
flds
dec
pop
lods
or
mov
aam
lahf
mov
jmp
scas
sahf
lods
pusha
add
clc
mov
pop
scas
mov
dec
dec
sub
stos
pushf
ds
icebp
test
ds
ljmp
push
popf
push
ja
push
in
dec
xor
movsl
pushl
fildll
xlat
inc
addl
or
std
movsb
call
clc
mov
imull
inc
and
xchg
cltd
add
aas
mov
ljmp
jle
push
sarb
movsb
or
sub
sbb
out
aas
call
gs
fsubl
fwait
mov
jnp
imul
or
je
add
push
pop
imul
adc
inc
in
sbb
and
repnz
repz
into
pop
clc
test
add
mov
mov
mov
in
fcoms
mov
dec
data16
jmp
pop
sub
sub
adc
fs
push
repz
inc
cmp
xor
movsl
incb
into
pop
xor
dec
push
xchg
xchg
pusha
shlb
jne
adc
cmp
push
xchg
mov
lea
and
mov
inc
dec
jecxz
push
jle
mov
xchg
cmp
pop
cmpsl
stos
fwait
pop
sub
inc
jae
cmp
mov
mov
pop
sbb
and
push
mov
cmp
nop
pushf
pop
or
sbb
lock
dec
jle
repz
jbe
mov
inc
cmp
push
test
inc
nop
cmp
sub
call
or
loop
test
nop
dec
mov
rcrb
inc
mov
stos
and
ss
cwtl
sti
jmp
lds
test
pop
cs
clc
into
jg
cli
sbb
mov
xchg
cmp
jno
sbb
mov
push
push
cmp
popf
lret
push
lahf
icebp
in
sub
inc
iret
jle
clc
test
icebp
push
mov
add
repnz
mov
cmp
int
jo
scas
call
cmc
mov
iret
movsl
fiaddl
xchg
outsb
mov
leave
loop
scas
add
push
inc
int3
or
in
cmpsb
lock
rcl
mov
pushf
movsb
jmp
ljmp
sbb
cmp
mov
adcl
adcl
push
push
adc
pop
or
call
adc
dec
cmp
aad
mov
das
jae
jl
test
dec
cmp
mov
jae
bound
adc
hlt
sbb
out
ds
push
adc
jecxz
mov
push
mov
xor
stos
mov
popa
push
fcmovnbe
out
lds
es
out
cmp
int
dec
inc
mov
dec
mov
mov
ja
out
int3
lods
filds
pop
xchg
xor
shl
leave
in
dec
mov
daa
addr16
and
enter
int3
sti
dec
and
mov
ja,pn
inc
mov
pop
mov
mov
das
sbb
dec
rol
cld
mov
sub
popf
insl
lock
ds
icebp
movl
add
jb
jno
out
ljmp
aaa
mov
imul
jmp
mov
orb
loop
pop
fwait
sti
lret
cmp
scas
mov
add
dec
imul
insb
mov
out
inc
mov
and
sbb
jg
sbb
and
rcrl
sarl
adc
insl
sub
xorb
test
sbb
addr16
int3
dec
cld
mov
ds
and
jle
or
test
iret
jnp
testl
or
test
test
push
mov
loop
mov
adc
repnz
jno
testl
ret
mov
ja
jp
jmp
adc
xchg
scas
lods
inc
xlat
sbb
cmp
std
mov
xchg
add
push
push
sbb
push
cltd
repz
addb
jle
mov
aam
mov
outsb
sub
or
inc
int3
xor
sahf
das
jns
push
xchg
int3
filds
addr16
push
mov
or
cmp
add
popf
jns
sub
mov
cmp
dec
aaa
mov
xchg
push
mov
mov
mov
incl
decl
es
mov
fadd
jnp
insl
in
mov
cmp
sub
mov
mov
jnp
add
std
xchg
loop
aas
mov
ror
leave
push
test
ja
dec
adc
test
pop
sub
gs
add
and
nop
push
leave
mov
push
clc
sbb
lock
inc
lods
inc
xor
fcompl
jnp
push
mov
and
out
std
push
fsubs
dec
jp
mov
cmpsl
repz
imul
lahf
pushf
sbb
jmp
sbb
cmp
xlat
test
leave
in
mov
lds
xchg
dec
jb
and
dec
in
imul
dec
lahf
and
imulb
sahf
xor
sbb
rcrb
in
mov
xor
push
sub
fistps
adc
jns
bound
in
adc
or
xor
sub
add
cmc
lods
data16
ret
inc
sbb
loopne
push
mov
insb
add
cmp
xor
adc
stos
jo
mov
psubsw
jae
lods
or
addl
aas
scas
ljmp
enter
inc
jo
xchg
dec
cmp
xor
fnsetpm(287
adc
repz
out
mov
add
add
dec
sar
test
iret
sub
lret
cmp
lods
jecxz
sbb
mov
cmpl
adc
jmp
mov
hlt
xor
inc
adc
dec
and
mov
sbb
jns
push
ret
popf
test
out
daa
and
loopne
sbb
and
or
sahf
or
adc
into
adc
cli
inc
int
lret
test
jmp
cmp
dec
push
decb
fwait
shrb
inc
dec
dec
dec
sbb
cmpsb
in
lret
leave
loop
adc
adcl
push
out
sub
out
add
fdivl
jg
icebp
aad
pop
insl
mov
sti
out
test
jns
push
sub
out
sub
out
sub
out
sub
out
sub
cmp
dec
cmc
xor
fsubl
xchg
fcoms
aaa
jno
jnp
repz
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
out
sub
dec
.byte
.byte
