call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
jge
dec
sub
popa
cmp
sub
imul
int
fstp
lods
lret
mov
jg
or
dec
sub
sub
imul
mov
fcmove
stos
fstpl
jmp
mov
dec
repz
inc
sub
imul
mov
mov
out
jne
inc
xor
and
dec
cmp
push
mov
movsl
sahf
call
out
ret
div
mov
sub
out
insl
cltd
incl
fcoms
and
xchg
je
lea
in
dec
jo
daa
cmp
mov
int
mov
xchg
stos
lret
mov
xlat
and
fisubs
or
imul
adc
cmp
cli
xchg
pushf
in
push
sub
cmpsl
movsl
ret
mov
loopnew
mov
xor
fstps
out
in
xchg
lock
sbb
test
scas
xor
cwtl
out
sti
call
jge
dec
sub
sub
int
pop
in
adc
int
fstl
jmp
jb
jns
dec
dec
push
pop
xor
and
dec
fwait
xchg
fdivr
fisubrs
movsl
fcoms
or
dec
sub
xor
jno
fs
cmpsb
flds
ret
movsb
mov
ja
addr16
or
dec
cmp
fwait
in
mov
mov
lods
lret
mov
sbb
jge
dec
sub
sub
imul
int
fstp
lods
lret
mov
sbb
adc
xchg
pop
mov
pop
repnz
data16
das
aas
and
dec
inc
jle
push
ret
test
jns
inc
fs
int3
dec
test
cmp
jge
icebp
pop
jb
cmp
cmpsb
inc
fwait
lea
or
xor
mov
jle
inc
enter
cmpb
lahf
mov
aaa
sbb
jne
adc
xor
iret
loope
xor
sbb
daa
xchg
fisubrl
out
faddl
xchg
ss
sub
or
add
jbe
pop
test
test
adc
push
stos
xchg
sbb
inc
dec
xor
clc
stos
sbb
xor
incb
cwtl
leave
inc
jg
inc
addr16
fidivrs
je
stc
jl
push
inc
clc
pop
gs
xor
leave
out
push
cmp
fidivs
dec
fstpt
lcall
out
getsec
or
jo
xor
dec
roll
nop
in
sub
mov
lods
jb
push
in
movsl
push
xor
xor
sahf
xchg
jae
outsb
add
sub
pop
fwait
iret
add
xor
dec
or
data16
mov
xchg
mov
sbb
add
pop
addb
mov
loopne
into
jle
sbb
or
cmpsl
fsubr
sub
std
fs
and
sub
jae
pop
xor
loopw
xchg
mov
push
imul
push
mov
fwait
sbb
or
stos
mov
lock
push
leave
daa
divl
push
xchg
fsubrl
sub
mov
push
call
jmp
adc
or
lcall
in
mov
mov
enter
jl
push
pop
test
ljmp
outsl
repnz
add
or
fisttps
xor
stc
fadd
jle
pop
jmp
pop
pushf
jmp
or
call
dec
add
sbb
and
cmp
jnp
nop
arpl
sarb
mov
and
jp
pop
repnz
fwait
lock
mov
insb
jne
outsl
dec
in
fmuls
and
mov
adc
xchg
mov
jne
mov
inc
shl
pop
or
jg
adc
mov
mov
loop
imul
je
fs
ds
jne
mov
lahf
xchg
add
mov
fsub
xchg
push
pop
jno
fstpt
ja
rol
popf
fwait
push
push
jb
push
jb
cmp
and
push
mov
adc
cld
sarb
add
add
std
pop
push
jecxz
xchg
sbb
add
jge
dec
pop
dec
and
push
push
dec
jmp
push
and
bound
outsb
rcrw
mov
sarb
sbb
jbe
adc
fmull
xchg
sahf
mov
xor
decl
pop
mov
xchg
and
scas
in
or
jge
mov
mov
scas
jl
lea
mov
movsl
notb
push
mov
xlat
lods
inc
pop
push
imul
and
cmp
insb
cs
jb
and
xchg
fdivrl
add
adc
jg
jo
jmp
pop
arpl
xchg
sub
or
push
data16
adc
jl
pusha
lea
mov
out
xchg
xor
sub
aam
xchg
mov
xor
shrb
mov
or
add
cmp
pop
ret
xor
xchg
and
mov
dec
and
jmp
jbe
xlat
or
test
fwait
pop
jb
in
dec
jmp
dec
add
mov
loope
jmp
dec
sbb
outsb
cld
leave
push
lds
lahf
mov
inc
pop
pop
inc
hlt
mov
or
test
cmp
roll
pusha
loopne
push
xorb
dec
add
mov
add
or
lcall
in
push
dec
adc
push
push
popf
jg
or
xlat
sub
pop
and
mov
and
movsb
pop
adc
stos
andl
pop
cli
add
push
sahf
leave
pop
mov
in
sahf
jo
jnp
dec
negb
ds
jge
repnz
insb
dec
movsl
push
cltd
mov
hlt
das
mov
cltd
fiadds
pop
sub
daa
push
mov
addl
jg
ljmp
mov
push
adc
sub
add
pop
inc
imul
lods
mov
loop
xor
xlat
nop
mov
subb
mov
inc
lret
ret
sbb
test
nop
lahf
into
fwait
inc
xlat
dec
outsl
lcall
add
mov
testb
jno
pop
pop
xchg
stos
mov
jnp
push
out
xor
insb
in
xor
cltd
lret
out
xchg
lahf
cmp
or
movl
pushf
scas
ja
shll
fisttpl
in
push
jmp
inc
dec
push
test
or
inc
ret
pop
pop
push
daa
mov
jne
push
mov
aam
push
cmp
jg
push
inc
loopne
movsl
push
iret
pop
das
rcr
loop
into
inc
mov
shrl
shll
ss
dec
sub
cmp
iret
dec
jns
mov
daa
dec
jg
sti
fs
pushf
inc
mov
dec
pop
and
adc
in
mov
stc
cmp
les
mov
sbb
xor
fimuls
push
ret
out
outsb
inc
cmp
jle
cltd
or
mov
daa
adc
loope
dec
cmpsl
pop
cltd
clc
pop
cli
adc
out
dec
rorl
and
pop
add
insl
pop
jae
xchg
mov
insl
jae
jecxz
daa
lea
pop
sbb
repnz
mov
cwtl
iret
or
rorb
dec
jo
in
scas
addr16
hlt
shl
pop
insb
and
xchg
jp
popa
dec
int3
add
mov
sbb
mov
dec
clc
out
ficomps
cmpsb
or
test
add
or
idivb
sbb
ja
inc
jg
mov
movsb
ds
popf
xchg
dec
pop
push
add
arpl
xchg
sbb
sbb
outsl
mov
lods
pop
scas
pop
jno
ret
es
shrb
daa
aaa
xor
push
out
iret
jbe
mov
or
xchg
push
push
int3
ds
sti
mov
shlb
pop
dec
je
cmova
int3
or
enter
sbb
scas
inc
xor
loop
xchg
inc
mov
jp
pop
cs
and
idivl
add
push
adc
push
jle
push
enter
xchg
inc
xchg
xchg
lds
xchg
ror
dec
popf
jl
push
push
or
mov
pop
and
push
sbb
dec
sub
das
fcomip
pushf
adc
leave
inc
adc
outsl
out
fadds
pop
mov
ss
mov
sub
in
mov
sbb
movsl
jns
loopne
test
dec
test
mov
inc
call
loope
fs
jnp
or
add
cmp
fisttpll
cmp
fdivrl
mov
std
adc
xor
sbb
sub
aaa
shl
daa
jecxz
daa
mov
fmull
jle
and
cmc
movsb
ljmp
outsl
pop
lock
cmp
aas
and
and
sub
add
mov
or
pop
arpl
sub
cmpsl
je
adcl
push
sahf
xor
cmp
lcall
pop
cli
testl
and
sarb
in
ja
add
rcll
mov
dec
cltd
js
mov
mov
int3
sbb
jp
mov
sub
clc
ficoml
sbb
push
push
inc
icebp
inc
xchg
pop
neg
insb
movsb
pop
or
mov
pop
call
or
push
aad
pop
cmp
testb
xor
int
sub
mov
mov
ret
xchg
adc
ret
push
pop
xchg
in
jl
push
adc
lods
and
scas
das
cwtl
lret
inc
or
outsb
pop
xchg
add
mov
cmp
leave
dec
pop
rorb
xchg
fistpll
repz
aaa
mov
push
and
xlat
roll
mov
out
je
pop
sbb
dec
sti
popf
mov
push
xor
mov
sbb
stos
out
push
cltd
cmp
add
in
jo
add
out
cmp
sbb
add
inc
cmp
enter
jne
imul
nop
testl
lcall
nop
clc
xchg
add
pop
mov
stc
mov
int3
mov
pop
and
lock
ret
dec
cli
sbbl
jno
rorl
push
stos
roll
scas
adc
push
aam
lahf
nop
loope
mov
nop
test
shl
aas
sbb
repnz
fsts
xchg
dec
jmp
add
cs
out
mov
in
mov
and
movsl
outsb
adc
in
inc
and
jo
movsb
jns
sbbl
add
mov
je
inc
lds
add
sub
daa
mov
sbb
in
add
xor
xchg
cmpsb
jae
das
orl
sbb
dec
sbb
dec
arpl
in
imul
push
push
jo
xchg
push
das
ret
es
xchg
and
sbb
sub
and
cli
ret
jae
fisttpl
pop
inc
test
adc
inc
lds
icebp
mov
adc
inc
pop
sub
adc
es
loop
repnz
mov
push
ja
xor
push
dec
inc
mov
out
xchg
out
jae
pop
xor
inc
stc
popa
cltd
jae
cmp
inc
mov
in
cli
mov
and
add
test
bnd
iret
test
mov
inc
test
jbe
fdivrl
clc
xchg
pop
repnz
xrelease
sbb
scas
loope
pop
pop
push
xor
xor
sub
cld
repz
cmp
jecxz
xlat
popf
cmpsb
jecxz
jne
xorb
fidivs
ds
or
cltd
out
repz
stos
test
sbb
aad
add
or
jae
cltd
pop
pop
jne
pop
pushf
mov
iret
arpl
addr16
mov
push
sbb
push
adc
pushfw
repnz
sbb
xor
fcoml
out
cli
iret
dec
or
shl
add
push
loopne
js
add
cmp
nop
mov
sahf
les
mov
xchg
push
push
ja
out
jb
inc
call
loope
xchg
pop
push
test
xor
mov
mov
fcompl
and
call
jb
out
lea
xchg
dec
or
inc
jno
outsb
and
mov
and
inc
push
idivb
dec
out
mov
fmul
jp
out
mov
test
nop
jmp
sbb
mov
sbb
dec
sbb
outsl
in
or
push
out
int3
stos
jbe
test
cmc
or
cmp
fsubrs
xor
pusha
sub
mov
or
mov
pop
dec
xlat
push
leave
cmp
mov
iret
and
adc
imul
cmp
sbb
mov
outsb
test
add
pop
inc
jmp
mov
or
mov
sub
fmul
cmpsb
xorl
shl
rorl
addr16
dec
xchg
adc
popa
mov
cmp
aaa
in
adc
or
sbb
lds
cmp
int3
test
push
fwait
cmp
jnp
push
dec
mov
cli
addr16
sub
aam
mov
and
adc
sbb
sbb
outsb
dec
xchg
mov
bound
ja
mov
and
cmp
xchg
dec
insb
inc
cmp
mov
push
adc
pop
notb
bound
mov
roll
jbe
inc
test
jl
je
in
jp
mov
mov
mov
dec
adc
iret
iret
xchg
arpl
insb
lcall
lahf
pop
fs
dec
call
dec
lods
adc
add
std
sti
sub
cwtl
jl
mov
cwtl
orl
add
js
loop
scas
dec
push
sbb
fmuls
outsl
leave
mov
test
pop
aam
and
mov
jg
cmp
hlt
shrb
int3
push
int3
xchg
and
scas
push
xchg
movsl
mov
mov
mov
xlat
ret
and
dec
sub
xchg
adc
mov
aam
out
sbb
inc
and
mov
sbb
gs
js
inc
movsl
fs
dec
mov
push
lahf
mov
addr16
out
inc
mov
sbb
lock
ja
xchg
popf
add
ljmp
aam
lret
cmp
and
jmp
and
inc
xor
jno
add
ret
xchg
pop
inc
nop
sarl
sbb
subb
lock
dec
pop
mov
mov
inc
loope
mov
adc
idiv
adc
push
subl
cmp
pop
mov
lds
out
pushf
mov
call
pop
inc
mov
sbb
pop
mov
add
test
test
sub
repz
fildll
mov
lcall
iret
sub
imul
push
add
add
or
and
add
hlt
lret
mov
mov
dec
or
add
and
mov
int3
or
sub
push
pop
cltd
add
adc
mov
repz
push
xchg
hlt
xchg
mov
jmp
mov
out
sub
push
mov
sub
xchg
mov
and
fcomps
cmp
adc
jae
fcomps
mov
pop
sub
mov
ja
fildll
mov
adc
shrb
neg
mov
cltd
cltd
sarb
adc
add
test
mov
jb
mov
clc
and
mov
and
out
mov
inc
stos
sbb
psubsb
jbe
loop
out
sbb
jmp
jnp
out
mov
test
pop
nop
adc
scas
dec
xchg
inc
idivb
out
rcll
xor
add
cmpsl
sbb
add
es
sub
cmp
mov
outsb
or
pop
lods
loopne
pop
push
jle
std
addb
adc
cli
xchg
stc
lea
xchg
pop
add
mov
mov
fadds
ret
mov
cmp
pop
stos
mov
add
fcoms
sub
rclb
jbe
icebp
mov
mov
dec
or
push
fdivrs
sub
xor
jo
xorl
lret
shrl
dec
jnp
xchg
call
scas
pop
in
fldenv
mov
push
jge
xchg
jne
movsl
jb
loope
shlb
xchg
fmull
xchg
repz
pop
pushf
mov
or
cmpb
jl
repnz
jecxz
mov
xor
call
inc
push
mov
mov
or
stos
nop
mov
aad
hlt
divb
mov
fildll
out
xlat
or
cmp
cmpsl
sarl
adc
or
dec
push
add
cltd
mov
movsb
leave
cmp
push
push
inc
sarl
shlb
pop
mov
adc
inc
outsb
inc
sarb
push
or
push
add
in
lods
xchg
fidivl
sbb
stc
pop
xchg
and
sbb
xor
xor
push
mov
hlt
daa
mov
sbb
mov
sub
andb
sbb
andl
lret
add
orb
adc
incb
pop
push
sti
sbb
pop
push
daa
lods
sub
add
aaa
stos
in
jp
test
fwait
xchg
inc
lea
xchg
pop
sub
scas
sub
or
add
test
outsl
roll
ljmp
test
mov
fldt
popf
cmpsl
lahf
jnp
jge
dec
mov
mov
adc
out
popf
je
xor
pop
gs
dec
push
sbb
notl
lods
clc
or
popa
xor
in
sub
sub
sbbb
add
movsl
push
sahf
pop
insb
sbb
jbe
fnstenv
adc
movsl
sbb
outsb
cli
sbb
leave
mov
fldl
pushf
pop
adc
and
cmpsl
push
dec
xchg
xor
jl
pop
adc
mov
jns
sbb
fwait
cmp
sbb
pop
out
movsb
cmp
stos
jb
cmpsl
xchg
xor
or
and
mov
lock
stc
add
xchg
push
scas
daa
add
fidivrl
xchg
mov
pop
jne
arpl
loope
jae
dec
pop
push
sub
je
popl
add
stc
cwtl
dec
stc
subl
cmp
fisubrl
rorl
dec
lds
into
mov
cmp
les
out
cmpb
jl
jno
ljmp
xchg
das
jp,pn
sti
enter
nop
int
in
cs
jmp
pop
fadds
jmp
sbb
xchg
scas
int
test
xchg
cmp
pop
xchg
add
mov
cli
test
cs
xor
inc
pushl
cmp
dec
repnz
or
cmpsb
mov
imul
mov
lods
lods
and
mov
push
mov
jnp
push
imul
shlb
and
pop
jns
push
lahf
out
ja
pop
cmpsl
addl
push
adc
test
sub
out
cmp
jge
sbb
push
or
xor
mov
ret
push
fdivl
xor
jmp
cltd
fwait
sub
pop
bnd
lds
sbb
int
cmc
or
add
sub
out
mov
push
int3
jmp
jmp
lret
cmpl
add
or
fcmovu
sbb
adc
push
mov
inc
fstpt
inc
cltd
jge
pop
mov
mov
enter
push
cmp
xorl
fadd
mov
xor
ljmp
lds
dec
iret
or
fisttps
mov
mov
add
pop
mov
cmpsb
cmp
rolb
xchg
adc
push
test
push
pop
lcall
aaa
pop
push
xchg
data16
bound
jg
xchg
jno
adc
xchg
push
mov
pop
push
add
sbb
incl
int
aad
shlb
and
vpmullw
jmp
mov
idivb
and
and
jl
repnz
mov
cmp
into
les
or
mov
mov
jbe
xlat
or
xchg
repz
fmull
nop
insl
xchg
jne
mov
dec
pop
shll
sub
mov
mull
mov
xorl
cli
cmp
lods
jb
mov
jo
imul
add
mov
cmp
and
adc
rclb
xchg
frstor
push
ljmp
adc
mov
add
mov
int3
int
cmp
fwait
sbb
fdivl
pop
pop
rclb
lods
int3
push
sbb
xchg
xor
jl
push
cs
mov
jbe
aam
jl
stc
movsl
mov
enter
jne
dec
dec
xor
aam
bound
in
or
pop
jo
or
aad
adc
add
shll
sti
pop
pop
push
negl
aad
xor
mov
mov
jbe
pop
jns
stos
xchg
xor
mov
js
mov
pop
ds
sub
pop
dec
fnstenv
sub
or
xchg
lahf
inc
incb
xchg
sbb
xor
fbld
mov
jmp
jmp
mov
push
addr16
dec
je
adcb
mov
into
mov
arpl
repz
fadds
mov
adc
lea
add
cmpsl
push
ficoms
mov
iret
adc
subl
cwtl
pop
dec
jno
jmp
jno
jb
loopne
sbb
out
pop
clc
push
mov
lods
xchg
lret
mov
inc
dec
mov
in
fmull
iret
aad
jb,pn
andb
push
mov
or
pop
or
loope
push
adc
movsl
gs
repz
jg
inc
mov
mov
adc
cltd
lret
stc
mov
xchg
mov
ja
inc
lret
cmp
rcrl
sub
mov
pusha
mov
ss
dec
sbb
lds
dec
push
outsb
sbb
jp
inc
outsl
sbbl
inc
orl
push
dec
clc
js
xchg
movsb
roll
mov
pop
or
mov
mov
sbb
jnp
pop
icebp
sub
ret
mov
add
and
imul
push
in
les
add
and
or
std
pop
adc
adc
mov
jg
lock
and
aam
std
push
daa
test
dec
rorb
dec
adc
lret
imul
cmp
stc
jne
mov
test
shl
lret
jge
mov
es
jbe
mov
and
sbb
push
cmp
xlat
fstps
scas
push
mov
fistpl
out
lret
sbb
mov
aam
cmpsb
nop
aas
mov
push
mov
dec
pop
pop
cmp
ret
xchg
in
xorl
adc
leave
mov
jl
pop
adc
cmp
sti
nop
sub
jp
nop
inc
xor
xchg
xor
popa
pop
orb
jp
add
sti
adc
xchg
sbb
add
popa
jmp
data16
adc
inc
fstpt
cmp
sbb
jmp
sub
dec
sub
sub
imul
int
fstp
lods
lret
mov
sbb
jge
dec
sub
sub
imul
int
fstp
lods
lret
mov
sbb
jge
dec
sub
sub
stos
sbb
dec
int
fstp
lods
fstpt
push
jge
dec
or
sub
jmp
fwait
in
je
adc
stos
stos
lods
and
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
addr16
fs
ds
aaa
lcall
lcall
or
sbb
ljmp
push
jp
dec
mov
cli
push
sbb
sahf
cmp
dec
ficompl
lock
jp
xor
stos
ret
in
cs
pop
lret
push
mov
ljmp
loope
aas
pop
dec
push
pop
sahf
cltd
hlt
mov
fbstp
in
mov
fsubs
mov
xchg
and
popa
mov
fisubrl
addb
dec
jno
outsl
pop
imul
pop
push
dec
jp
sub
or
or
lret
ljmp
cmpsl
adc
cmc
test
ja
dec
fisubrl
test
mov
mov
or
clc
and
add
xchg
stos
stc
scas
push
lahf
adc
push
ljmp
cmp
lcall
add
out
xorb
jmp
jp
pop
lcall
push
lret
ljmp
push
ds
pop
push
jp
dec
test
sub
cmp
or
cli
dec
mov
pop
les
lret
sti
push
fisubl
sti
sbb
dec
xchg
dec
mov
ljmp
add
sbb
es
sub
out
sub
xor
mov
mov
pop
mov
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
es
hlt
ds
jmp
roll
jle
imul
mov
and
adc
and
inc
mov
sbb
pop
pop
insl
loopne
test
addr16
lcall
mov
ficompl
pop
movsl
mov
inc
int3
cmpb
inc
rep
int3
cwtl
repz
sahf
push
jp
sub
orl
xchg
clc
in
add
addr16
aaa
jns
sbbb
mov
stc
outsb
sbb
lcall
ljmp
and
or
sahf
das
js
xorb
insb
xchg
int
jae
in
add
adc
jo
xlat
ds
pop
shlb
lahf
xor
mov
pushf
cwtl
adc
pop
cmc
negl
jp
popf
cmc
cmc
inc
mov
jo
or
mov
movsb
mov
shrb
outsl
lret
cltd
inc
push
daa
pop
mov
inc
femms
push
ljmp
int
fists
roll
pop
fstpt
iret
stc
icebp
pop
inc
fistps
dec
mov
adc
mull
push
aad
loope
mov
stos
ss
pop
stc
fisttpll
mov
sbb
jne
xor
jecxz
int3
inc
popf
dec
add
push
pop
lahf
xchg
add
daa
cmpsl
mov
call
insb
sub
mov
and
push
cmc
int3
sub
jge
int3
cltd
lea
jne
inc
in
loop
jno
dec
xchg
imul
movsl
movsb
test
pop
and
fmuls
pop
jns
daa
pop
push
jle
mov
mov
mov
sub
inc
push
orb
out
xchg
sbb
out
in
outsl
ret
cmpsl
pop
fcompl
enter
adc
sarb
sub
leave
mov
mov
adc
sti
sub
hlt
jmp
cld
adc
sub
xchg
mov
mov
mov
mov
scas
fiaddl
sahf
add
xor
lcall
xchg
mov
ljmp
mov
in
aaa
jo
imul
pusha
dec
aas
lcallw
pop
xchg
xchg
inc
sbb
ja
sarb
sti
popf
aas
stos
fwait
or
mov
das
push
cmp
mov
test
push
cmpsl
cmpsb
in
rcr
stos
sub
loop
mov
out
stos
mov
enter
movsb
aaa
xor
mov
aas
ja
mov
mov
or
leave
inc
xor
pop
or
cmpsb
cmp
push
jge
stc
jle
lods
loopne
cmp
outsb
and
sbb
sbb
add
icebp
jle
decl
das
push
icebp
mov
xor
jmp
arpl
jne
mov
imul
cmp
mov
xor
out
ret
xchg
adc
or
ret
rcr
push
xchg
xlat
pusha
push
loope
sub
pop
xchg
inc
sub
adc
push
mov
es
in
sub
insb
inc
loopne
mov
inc
push
xor
xor
xor
mov
push
add
pop
imul
pop
inc
add
cmp
lcall
popa
inc
out
aas
mov
or
adc
dec
push
dec
shl
add
mov
dec
sbb
mov
push
aaa
lea
out
notl
fisttps
sahf
mov
sub
or
pusha
sub
push
jne
push
mov
loop
pop
in
je
outsl
stos
pop
ss
adc
scas
inc
imul
pop
fmuls
cmp
and
mov
jne
inc
loop
fs
jle
jl
imul
scas
adc
mov
fsubrs
or
adc
mov
and
add
enter
rorl
fldt
in
loopne
pop
clc
dec
imul
arpl
fsubr
mov
arpl
jl
pop
lret
test
push
mov
mov
jno
rolb
cmp
pop
fdivl
sets
mov
popa
je
call
fwait
cmpsb
push
mov
scas
icebp
cmp
mov
xchg
dec
mov
jne
int3
ja
mov
iret
mov
mov
pop
mov
mov
loopne
jp
int
and
add
aas
iret
ljmp
xchg
push
inc
bnd
icebp
mov
sbb
cmpb
dec
add
inc
push
ja
pushf
mov
rcll
fldl
pushf
ss
pusha
mov
mov
pop
in
add
xor
push
bound
xor
xchg
and
ja
mov
or
xchg
add
fmul
pusha
cmp
ret
lock
pop
mov
in
push
repz
push
xchg
mov
or
jnp
ret
mul
mov
repz
outsl
mov
cld
adc
push
lret
mov
add
insb
fidivrl
push
insl
sub
push
repz
daa
add
pop
leave
dec
je
push
inc
xlat
mov
clc
mov
pusha
aaa
int3
push
sbb
jo
inc
or
pop
adc
cs
ror
mov
rcr
xchg
pop
insl
xlat
pusha
test
pop
call
arpl
cmp
cmp
fistpl
xchg
pop
rclb
sub
cmp
leave
sbb
pop
jbe
fistl
jl
mov
ficomps
out
out
mov
lds
loop
mov
cs
div
stos
leave
mov
or
lahf
mov
repz
data16
xchg
add
jo
pop
dec
das
movsl
pusha
leave
cld
push
fmulp
cli
or
ret
pop
xchg
dec
mov
fcmovbe
movsb
shr
inc
cmc
jle
icebp
and
push
xchg
imul
adc
jne
sbbl
xchg
or
adc
xchg
lock
xor
in
sub
inc
push
cld
cmpsb
mov
add
negb
icebp
scas
inc
outsl
xchg
inc
imul
or
jno
sub
push
xorl
ds
mov
fidivs
and
and
jo
bound
add
push
idiv
xchg
je
popl
sub
scas
push
add
xor
fists
pusha
xchg
pop
jp
insl
xor
nop
xchg
int3
mov
pop
pop
sbb
inc
pop
ljmp
push
pop
mov
xor
adc
mov
test
pusha
negb
jge
movsl
sahf
in
mov
dec
lea
and
inc
sub
in
in
mov
int3
dec
sub
pop
sti
in
jge
fidivrs
cmp
movl
int3
add
loope
jge
inc
pusha
repz
push
push
insb
mov
mov
add
lahf
adc
dec
or
pop
and
jne
mov
mov
push
fsubs
jge
or
pop
fnstcw
in
add
gs
push
push
jb
imul
dec
xlat
mov
rorl
cli
adc
or
test
fmul
add
mov
imul
lods
lods
mov
and
cmc
mov
loop
push
sub
cmp
pop
and
adc
test
sub
adc
or
push
leave
add
out
push
and
cmp
loopne
stos
xchg
sti
pusha
movsl
push
lods
sub
dec
repnz
xchg
push
mov
inc
stos
call
stc
into
popa
shl
stos
and
and
cmp
insl
xchg
cwtl
mov
popf
add
sub
shrb
or
jb
adc
aam
mov
xchg
mov
enter
sti
addr16
jo
push
lods
xor
inc
jnp
jl
or
and
ret
stos
xor
and
cwtl
fwait
inc
add
jmp
imul
fmulp
xor
icebp
orw
fcomi
lret
xor
mov
mov
inc
sub
jmp
cmpsb
cmp
jge
adc
fnstsw
inc
sub
pop
push
out
jg
mov
mov
sub
arpl
sbb
jo
jge
or
arpl
lea
lahf
mov
pop
dec
cmp
sbb
aad
in
dec
mov
sub
push
shll
aad
jns
mov
fisttpl
daa
jno
sbb
bound
out
sub
icebp
push
das
movsb
cmp
pop
push
push
std
adc
xor
fsubrs
mov
cmpsb
fistpll
je
fwait
fwait
shlb
mov
adc
sbb
inc
or
loope
pop
xor
movsb
mov
ss
inc
mov
int
testb
aam
cmpsb
add
in
ds
stos
outsb
cli
add
xor
popf
mov
xor
sti
xchg
inc
sub
pop
xchg
lcall
dec
mov
nopl
into
add
fadd
adcl
xchg
movl
push
add
icebp
push
pop
ja
or
dec
jmp
adc
int
cld
inc
xor
mov
les
mov
jb
mov
jmp
out
inc
xor
jecxz
xchg
xchg
call
lcall
test
jns
test
call
or
bound
loopne
xchg
mov
inc
push
bnd
out
test
lea
mov
jns
adc
mov
xchg
fnsave
rorb
jle
cmp
incl
xchg
mov
outsl
fsts
xor
push
add
icebp
frstor
and
cmp
mov
cmp
int3
mov
or
repz
dec
fisubs
push
jbe
and
xor
mov
cwtl
imul
std
leave
aam
dec
lcall
mov
into
loop
jg
mov
stos
setp
push
orb
pusha
cmpsl
add
or
xorl
scas
aad
push
loop
inc
mov
and
sub
cmp
dec
lea
sahf
jg
xchg
outsl
mov
jne
pop
lcall
jno
jg
in
stos
idivb
lds
pop
pushf
sub
inc
loope
in
cmp
xchg
push
add
movsl
call
sarb
mov
sub
jp
pop
lock
cmp
mov
add
pop
fdivp
xlat
dec
push
call
in
lock
scas
cmpsl
jecxz
test
pop
jmp
fisttpl
xor
sbb
and
pop
jle
dec
shll
test
cmp
fisubl
bound
lahf
insl
mov
dec
addl
stos
popf
push
push
mov
loope
mov
ret
xorl
mov
fsubrl
xchg
repz
or
mov
mov
xchg
mov
mov
scas
or
pushf
fcoms
push
popf
jns
xor
aam
inc
push
fwait
jg
mov
add
es
pop
lcall
xchg
xor
xchg
xchg
aad
adc
adc
push
iret
mov
xchg
js
jle
jp
stos
daa
daa
jp
movsl
or
or
lcall
sub
or
not
pop
push
arpl
mov
lret
flds
cmpsl
sahf
pop
push
push
shrl
adc
dec
push
pop
dec
cmp
adc
xor
sub
mov
lea
mov
into
fistpll
fisubs
push
xor
orb
ja
outsb
mov
mov
mov
imul
fsubrl
push
lods
push
daa
cmp
xor
cmpb
ss
cld
cmp
or
out
arpl
mov
mov
in
repz
mov
and
insl
push
jnp
or
aad
jge
ds
push
sub
xchg
imulb
or
in
jg
gs
mov
int3
je
cmpsb
outsb
adc
mov
pop
mov
pop
test
ja
mov
push
int3
cmc
adc
pop
pop
dec
repnz
pop
cld
fwait
inc
flds
pop
pusha
xchg
cli
or
mov
jb
cli
loopne
jge
stc
mov
loopne
sub
mov
je
into
scas
inc
mov
inc
fistpl
jnp
push
cld
in
pop
jno
sub
or
addr16
cmpsl
lahf
push
or
orl
insb
push
dec
sbb
and
lock
mov
cmp
cwtl
imul
xchg
sub
jecxz
movsb
cmp
out
push
pop
fmull
imul
xor
and
stc
mov
loopne
lods
inc
lds
adc
rcrl
push
mov
inc
push
mov
insb
rclb
stos
fwait
bound
dec
jne
sub
scas
jnp
mov
pop
mov
mov
test
jae
hlt
sbb
movsb
andl
adc
shrl
aaa
sarl
pop
fwait
ret
fidivs
mov
mov
add
movsl
pop
fsubs
xchg
popl
lods
jno
sbb
jmp
push
pop
shll
into
cmp
inc
ret
add
push
mov
lock
lock
out
add
mov
add
faddl
in
fidivs
cmpsl
fstl
push
cmpsl
popf
jns
pop
lods
aad
pop
or
or
pop
mov
sub
push
test
lret
push
xchg
sbb
rcrl
pop
loopne
mov
inc
or
xlat
cltd
jp
loope
jbe
push
mov
mov
lcall
je
push
jmp
xchg
inc
mov
das
jno
jae
es
fsubrs
pop
scas
aad
xlat
aam
or
jle
xchg
mov
or
test
push
and
fildll
shr
or
les
dec
push
lock
pop
adc
into
js
aad
and
mov
push
pop
fwait
dec
js
push
imul
ret
inc
lea
add
and
jl
inc
xchg
xchg
xchg
in
movsl
mov
mov
insl
testl
ret
popf
xor
dec
fildll
xorb
int
bound
decl
cli
lret
fistps
imul
fcmovnbe
daa
scas
cmc
sbb
add
jg
test
lods
cmp
push
es
es
push
hlt
ljmp
jns
in
test
xchg
in
or
add
lcall
xchg
adc
jg
jns
ljmp
adcb
jae
adc
iret
shl
or
fimuls
cli
xor
lret
pushf
stos
lea
je
jo
stos
dec
leave
or
rolb
jne
adc
xchg
pop
es
gs
push
pop
mov
scas
pop
cmp
mov
add
dec
inc
subb
mov
push
mov
imul
xchg
loopne
sbb
and
cmpsb
andl
inc
flds
push
leave
fdivrs
popf
mov
ret
adc
test
fiadds
int3
out
fstpl
aas
xor
into
lcall
or
mov
lahf
and
cmp
cltd
roll
andb
dec
std
and
pop
rorb
jns
adcw
jo
das
lahf
out
xor
inc
add
cmpb
cli
adcl
imul
arpl
push
fwait
ljmp
jo
jecxz
ret
cmc
sti
lret
cwtl
out
iret
and
xor
imul
xchg
adc
in
jns
mov
push
mov
in
or
xor
orb
dec
add
out
sub
jno,pn
push
and
push
pop
sbb
std
fisubs
jecxz
jl
notl
mov
jg
frstor
lock
xchg
vphsubbw
cmp
dec
hlt
xchg
pushf
ret
ds
ret
repnz
dec
out
pop
push
cmp
sbb
outsl
test
aas
sub
or
jp
mulb
gs
test
repz
pop
adc
fsubrl
movl
dec
inc
ss
sbb
lea
sbb
mov
xchg
repnz
call
imul
das
out
in
jno
inc
push
gs
pop
add
ljmp
mov
add
js
inc
fsubp
and
dec
out
jecxz
push
jo
sub
push
lods
fbld
mov
xchg
and
ss
xorb
jmp
sbb
or
push
mov
or
jecxz
jge
sbb
and
fwait
xchg
mov
mov
fisttpl
enter
xchg
push
or
inc
subb
cmpsl
pop
imul
enter
jmp
pop
test
outsl
in
sbbl
lret
mov
dec
xchg
xor
movsb
pop
jmp
mov
push
xor
icebp
push
and
jne
jg
inc
out
test
repz
adc
push
shrb
dec
lds
push
lds
in
rcrl
lret
mov
xlat
adc
ret
movsb
call
inc
cmc
pop
pusha
pop
vcvtpd2psx
dec
push
pop
testb
push
inc
xchg
pop
testb
int3
loop
or
adc
and
or
adc
fdivl
daa
pusha
pop
mov
xlat
clc
shlb
rcrb
inc
nop
cwtl
hlt
subb
jmp
aam
movsb
outsb
add
adc
aad
loopne
imul
mov
push
mov
add
pop
loopne,pt
cli
cmp
scas
cmpsb
shll
xchg
mov
movb
sbb
mov
sub
imul
pop
push
push
fmuls
mov
mov
enter
das
mov
cltd
daa
push
ljmp
test
adc
adc
sub
mov
add
icebp
pop
fcmovne
mov
add
pushf
sbbb
and
lahf
movsl
data16
pushl
or
repnz
jns
scas
ja
es
ds
enter
push
aad
lret
add
xor
js
imul
adc
andb
jo
or
mov
and
shrl
pop
mov
pop
inc
xchg
pop
and
or
insl
out
mov
pusha
fwait
adc
movsb
push
arpl
fst
pop
mov
and
inc
mov
sbb
loope
andb
xor
stc
shrl
sub
dec
insb
mov
mov
lret
mov
xor
jge
movsb
cmpsl
mov
cwtl
mov
mov
push
repz
ljmp
int3
sar
mov
jg
sub
xchg
xor
cmp
pop
lock
test
cmpsl
xor
pop
pop
fsubrs
xor
sbb
fwait
adc
pop
lods
add
mov
push
mov
push
push
lods
or
jg
mov
adc
cld
jbe
add
xchg
lods
mov
rcrl
aaa
mov
lret
xchg
insb
pusha
jl
pop
and
loopne
pusha
xchg
fmul
das
xchg
mov
ja
mov
sbb
sti
xor
mov
scas
sub
push
sbb
cmpsb
mov
fcomp
sbbl
push
out
mov
mov
add
mov
mov
mov
mov
xchg
jno
push
dec
fcomip
and
call
jne
cmp
push
fildl
dec
push
out
fdivrs
sub
add
sarb
cmp
stc
lahf
inc
cltd
pop
dec
mov
xchg
movsb
jb
dec
icebp
xor
cmp
pop
pop
adc
repz
les
mov
jbe
pop
dec
ljmp
orb
xor
sub
frstor
or
orb
lock
jge
in
mov
sbb
stos
lahf
inc
push
iret
cmc
fs
clc
call
mov
mov
or
in
ljmp
enter
je
sti
repz
mov
mov
mov
scas
repz
jecxz
rorb
in
sub
add
jmp
jge
fstpt
jnp
pop
stos
aas
mov
cwtl
sub
jg
sbb
xchg
jl
sete
sub
cmp
pop
aas
adc
jne
or
add
shl
ds
cmp
js
mov
mov
sbb
mov
cwtl
inc
inc
loope
cmc
pop
in
sub
or
xchg
sbb
sbb
leave
push
add
add
loope
daa
jl
and
xchg
data16
imul
xchg
popa
xor
popf
push
insb
dec
out
xchg
adc
fldenv
in
mov
pop
mov
faddl
popa
push
cmpsl
jle
and
xor
pop
pop
jns
push
int3
insb
cmp
out
shll
fsubs
adc
sbb
aam
fs
and
in
pop
outsb
sbb
shll
and
not
xchg
jl
cmpsl
inc
jno
mov
pop
lahf
das
sub
cld
clc
push
mov
lods
lcall
add
cmpsb
jbe
jg
mov
push
mov
js
xor
xchg
and
js
out
das
sub
jnp
mov
or
push
jp
push
mov
cli
fwait
pop
jmp
jp
jbe
and
jne
stc
push
ss
lret
daa
pop
aam
sub
pop
sub
je
pop
mov
sub
insb
mov
sbb
lahf
xchg
lcall
cmp
jmp
or
xor
pop
fsub
xor
psraw
push
imull
lcall
cltd
xchg
shlb
and
repz
hlt
xor
mov
sbb
xchg
dec
test
or
mov
add
push
addr16
repnz
cwtd
sbb
lret
ret
lcall
cmp
sbb
sub
xchg
push
rolb
cmp
inc
rclb
ret
mov
pop
cmpsb
stos
test
mov
or
dec
dec
add
mov
dec
xlat
cmpsl
addb
insb
push
mov
dec
int
pop
lret
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
push
jp
dec
mov
stos
push
jp
dec
lcall
or
sbb
ljmp
imul
lcall
sahf
pop
ljmp
sbb
ljmp
push
push
dec
mov
lcall
lcall
cmc
and
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
dec
sbb
outsb
into
pop
add
cs
decb
scas
cmp
dec
sbb
outsb
jp
push
pop
ds
dec
stos
fisubrs
out
cli
sti
fimull
and
dec
add
outsb
arpl
jb
inc
ds
mov
fwait
repnz
test
xchg
popf
fsts
inc
sbb
push
fwait
cmp
push
xor
movsl
shlb
add
push
pop
aad
bound
jecxz
push
push
fbstp
xorl
add
mov
aad
push
xor
mov
lods
dec
test
shl
mov
in
ficoms
mov
popa
push
mov
xor
bound
sarl
pop
shrl
cmp
ss
into
xor
stos
xor
mov
outsb
push
lret
lret
sahf
cmpsl
mov
sub
loope
outsl
mov
fistpl
int
sahf
and
pop
lret
shl
test
test
fisubs
lret
ficoml
mov
mov
xor
jle
outsb
insl
push
jp
pop
ds
mov
xchg
out
loop
repnz
mov
dec
aaa
jg
jle
or
jp
pop
dec
pop
mov
lods
out
sahf
cli
ljmp
push
xor
jne
jp
push
pop
push
pop
imul
mov
cli
sti
sbbl
pop
pop
inc
sbb
xor
push
pop
ds
cs
decb
mov
mov
sub
jle
outsb
jp
push
pop
ds
cs
decb
mov
mov
add
test
pop
imul
cmp
std
mov
and
call
jge
fnstsw
lahf
pop
repz
jl
and
aaa
mov
mov
outsb
sub
out
dec
adc
daa
inc
popf
fwait
stos
or
xchg
imul
pop
gs
int
mov
popl
push
arpl
icebp
cmp
sarl
add
daa
and
add
incl
insb
adc
jg
or
mov
xchg
mov
scas
shr
mov
decb
inc
sub
std
jnp
mov
jp
inc
repz
js
push
add
sysenter
notl
inc
inc
lods
xchg
les
mov
mov
je
incl
xchg
repnz
in
pop
adc
push
aaa
rclb
test
ds
jno
gs
in
out
push
enter
adc
inc
loopne
shl
imul
ja
dec
fnstcw
cmp
js
pop
push
or
aaa
scas
in
call
out
mov
in
out
sbb
pop
pop
ret
cmp
ss
add
mov
lods
aam
mov
out
int
and
rcll
adc
stos
xchg
loope
mov
cmp
sub
aad
pop
inc
mov
add
jge
inc
cli
mov
pop
add
sbb
nop
add
jae
push
shll
or
cmpsl
aad
push
dec
mov
sub
add
aas
std
pop
mov
stc
mov
sbb
push
bound
shll
idiv
into
xor
mov
fldl
jns
sbb
jp
roll
lods
sahf
push
clc
pop
mov
cmp
call
jmp
ljmp
test
fildll
mov
pslld
outsb
cld
jb
fcmovnb
jg
insl
sub
add
out
push
sbb
dec
stos
mov
cmp
fcompl
inc
mov
or
sbb
xor
xchg
pop
pop
jge
sti
jl
imul
push
arpl
sahf
fildll
mov
push
pop
pop
shlb
mov
decb
dec
mov
jno
pop
push
mov
inc
adc
dec
or
adc
jecxz
or
in
cmp
jb
jbe
jbe
sahf
cwtl
imul
add
lods
stos
insl
pop
data16
sub
loop
or
imul
ret
int3
in
ljmp
and
int3
insl
notb
jb
add
dec
jno
pop
mov
lret
push
hlt
sub
mov
xchg
lret
out
xchg
mov
movsb
mov
ljmp
or
sub
pushf
add
shl
jne
dec
mov
cmp
cmp
dec
pop
push
imul
repnz
jne
aad
hlt
push
rcrl
cmp
push
popf
mov
jne
jg
push
adc
dec
pop
xchg
jo
cmpsb
cld
push
andl
ret
inc
aas
movsl
jmp
cs
lahf
test
insb
nop
push
adc
cmp
xor
mov
clc
sbb
add
rcr
and
out
lahf
dec
shll
and
xchg
xchg
xchg
data16
lock
pop
in
popa
pop
xorb
or
xchg
and
xchg
lods
and
sbbb
cmc
ret
cmpsb
lret
in
xchg
movsb
lret
popf
popa
outsl
cld
in
xor
js
imul
push
cmp
jae
iret
jae
inc
ret
scas
inc
out
cltd
push
push
leave
setle
dec
faddp
addb
in
mov
pusha
movsl
repnz
lahf
dec
add
mull
mov
leave
mov
jne
and
mov
jp
xor
mov
aas
enter
stos
addb
xchg
hlt
hlt
mov
xchg
cmp
dec
jnp
cmp
adc
fcompl
cltd
xchg
arpl
out
imul
sbb
int
jo
dec
ja
sbb
lcall
rolb
lock
cmp
or
sbb
mov
sahf
jo
rcrl
mov
lret
aas
outsl
pop
jne
pop
data16
imul
xor
mov
xchg
cmp
xor
nop
mov
orb
cmp
ss
mov
cmp
xor
jno
movsb
cmpsl
jo
pop
fwait
jp
out
cli
and
and
aad
addr16
fstps
es
loopne
rorl
fs
fimull
out
add
mov
orb
cmp
pusha
leave
xorl
imul
pop
into
push
lcall
mov
data16
int3
pop
iret
sbb
ficoml
aad
cmp
daa
xchg
adc
sub
pop
add
int3
xor
cltd
scas
mov
sbb
jg
mov
pushf
xchg
loopne
dec
mov
in
inc
add
jmp
push
sub
mov
sbb
cld
cmc
js
std
jg
or
lods
out
loopne
jle
out
mov
dec
lods
dec
push
fistpl
lret
cmp
pop
mov
mov
addr16
repnz
ss
pop
dec
lcall
mov
add
movsl
mov
mov
mov
pop
lea
inc
cli
xor
and
cltd
cmpsl
rorb
pop
push
jp
jnp
subb
test
je
sub
mov
sbbl
daa
dec
sub
inc
push
inc
cmp
imul
pop
jae
outsb
jb
int
dec
fbstp
jg
pop
jns
and
leave
mov
insb
dec
bound
xchg
push
push
int
jp
int
add
cmp
or
mov
fistps
cmp
sub
mov
xor
nop
ja
push
sub
mov
repnz
mov
cs
mov
cmpsl
or
cli
sub
in
sub
movsb
mov
mov
jmp
pushf
gs
cmpsb
test
mov
test
mov
shrb
push
jle
in
out
call
jo
leave
add
xor
adc
dec
movsb
sbb
mov
rcrb
rcll
js
cmp
popf
push
jno
inc
xor
push
mov
sub
xor
mov
mov
jle
subb
inc
ljmp
dec
inc
mov
mov
mov
pop
lahf
cmp
pop
ljmp
mov
in
js
pop
mov
mov
pushf
sub
adc
adc
popa
mov
jo,pn
sub
js
pop
and
movsl
insb
inc
cmp
outsb
xlat
cld
pop
inc
ret
sti
sub
or
pushf
scas
inc
mov
sarl
xchg
push
jnp
cli
xchg
xor
sbb
add
shll
mov
scas
roll
dec
adc
ds
mov
imul
popa
mov
ja
push
stc
jns
xchg
rcl
js
cld
adc
cs
loopne
cli
mov
test
lret
adc
inc
clts
cmc
sbb
mov
mov
sbb
test
pop
icebp
add
test
sbb
test
lods
add
xchg
inc
mov
bound
jae
and
or
push
xchg
sub
sub
cmp
push
mov
mov
jnp
scas
stos
mov
jbe
out
xchg
test
sub
jg
xchg
andl
gs
jl
pop
and
out
aad
inc
int
xor
roll
gs
adc
sub
mov
mov
ret
xlat
cmpsb
cmpsb
jle
cmpsb
lds
fsubr
les
ret
push
scas
nop
ret
outsb
idivb
sti
or
mov
popa
testb
aas
test
mov
push
ja
adc
inc
inc
jb
fsubp
cmp
push
mov
or
lods
repz
push
hlt
rolb
fmull
pop
mov
inc
mov
pusha
out
adc
std
stos
rcrb
and
lods
in
and
or
xchg
scas
jae
scas
xchg
jnp
push
pop
inc
out
je
cmp
adc
mov
xor
pop
outsb
cmp
enter
push
lods
out
cwtl
sbb
jle
ret
fsubl
test
das
pop
sbb
cltd
dec
stos
in
int
push
inc
sub
pop
insl
pop
ss
pushf
and
inc
std
and
jmp
arpl
mov
add
xor
sbb
dec
push
pop
inc
movsb
xor
inc
adc
jecxz
mov
mov
daa
aam
aad
mov
sub
loop
cmc
mov
cmp
or
inc
lahf
push
loop
ret
mov
daa
stos
pop
imul
ds
andb
xchg
xor
adc
xor
pushf
and
std
sub
ljmp
ds
popa
dec
imulb
mov
in
inc
fidivl
mov
lcall
adc
adc
cmp
pushw
jno
xchg
popf
pop
cmp
sub
mov
push
xor
inc
sub
sahf
fadds
jg
scas
pop
pop
adc
mov
loop
fs
sarl
aaa
add
cmp
add
popa
in
movsb
hlt
mov
stc
loope
data16
adc
addr16
pop
adc
sub
xchg
icebp
or
mov
cmp
mov
js
mov
sub
pop
shl
cmp
xor
or
xchg
add
pop
cmp
sub
add
in
test
push
jp
mov
out
cmp
mov
int
sbb
mov
shlb
adc
arpl
xor
test
jge
dec
cmc
jno
mov
movsl
push
sub
fsubrs
pop
test
sub
int3
dec
sub
in
imul
mov
out
fmull
das
ret
outsb
jno
in
add
pop
mov
mov
stos
in
fwait
push
orl
adc
add
dec
mov
and
cmpsl
cld
mov
xor
fidivrl
pop
out
divl
repnz
loopne
mov
lods
jo
mov
adc
in
jg
imul
push
lcall
dec
mov
ror
test
test
std
pop
add
mov
std
popa
sahf
rcrb
hlt
pop
mov
arpl
lret
in
movsb
xchg
fadds
ficoml
cld
jecxz
xchg
dec
mov
std
imul
mov
jb
xlat
jb
js
out
out
mov
xchg
fidivrs
mov
das
mov
ljmp
stc
call
mov
pushf
shll
scas
aas
mov
out
scas
xchg
cmp
dec
inc
push
aam
fiaddl
cs
pop
lds
pop
insb
das
ret
and
mov
data16
or
ds
and
outsl
push
lret
xchg
pushf
dec
shrb
xchg
push
loop
cmp
in
mov
jbe
inc
test
mov
dec
repnz
fldt
or
call
arpl
divb
pop
mov
out
push
push
jno
sbb
xor
sbb
testb
xchg
ret
push
mov
add
clc
lahf
in
test
outsl
and
repz
or
jle
push
int
outsl
aad
and
push
imul
cmp
fdivs
mov
pop
xchg
sbb
test
mull
or
mov
ja
fs
sub
sbb
jbe
mov
push
mov
adc
sbb
mov
mov
adc
daa
add
faddp
sub
mov
loop
or
scas
dec
pushf
and
pop
scas
mov
aad
cmp
cmpsl
shrl
pop
add
inc
mov
sbb
popa
jne
xor
hlt
lea
outsb
out
cld
xorl
xor
cmpsl
stos
movsl
jmp
sbb
and
pop
or
stos
inc
sti
cmp
xor
xchg
or
fidivrs
fsts
xlat
paddusb
mov
icebp
fmull
or
dec
mov
lahf
mov
mov
mov
inc
aas
pop
inc
push
pop
dec
cwtl
stos
xchg
sar
sub
jg
fs
rcrb
into
ja
pop
bound
int
les
xor
push
sbb
mov
ja
mov
das
mov
imul
iret
dec
fisttpll
sbb
adc
outsl
call
mov
test
lods
push
mov
dec
xlat
fsubl
gs
sbb
jae
inc
aaa
adc
and
lea
out
jae
faddp
push
pop
sub
popl
enter
loop
ds
pop
xchg
aad
sbb
enter
fisubl
cmc
insb
add
ret
jo
insl
fistpl
push
out
push
cmp
sbb
outsl
icebp
loope
jmp
sbb
pop
cmc
pusha
nop
sbb
jge
mov
cmc
dec
xor
push
mov
in
jmp
xlat
push
pop
aaa
out
setbe
jle
or
jnp
add
jno
push
scas
mov
sub
into
cmpsl
sbb
in
push
out
push
inc
fwait
scas
movsb
sbb
sub
jb
int3
loopne
cmc
mov
jge
jb,pn
pushf
pop
stos
push
jae
movsl
dec
mov
lea
lds
scas
imul
imul
or
pop
popf
jge
jbe
inc
rcrl
lods
cmp
pop
adc
push
fbstp
orb
and
sbb
fisubrs
call
insb
gs
add
fsubrp
sbb
test
subb
cmp
lock
mov
sbb
arpl
pushf
cmpsl
pop
pop
and
mov
xchg
icebp
or
call
jg
push
mov
inc
cmp
rcrl
rorb
mov
hlt
dec
xchg
test
xlat
test
sbb
cmpsl
sahf
ss
xchg
pop
push
cwtl
daa
mov
out
and
dec
leave
or
mov
mov
je
icebp
mov
int
adc
in
jg
int
mov
lods
or
jbe
in
std
aad
pop
xor
xor
mov
jbe
sbb
lock
mov
add
repnz
out
xor
xor
ja
daa
divb
sti
jp
stos
xchg
scas
arpl
mov
nop
jbe
les
cmp
or
insl
or
xor
shrb
jp
mov
cmp
add
dec
and
push
mov
or
mov
mov
xchg
repz
and
scas
push
mov
lcall
push
jg
arpl
mov
in
orb
addr16
cmpsl
jecxz
dec
jmp
fldenv
ds
jb
lret
push
mov
imul
mov
shll
stos
cmp
rcrb
xor
mov
les
in
fwait
xchg
xchg
call
xor
mov
stos
xchg
mov
pop
int3
jae
std
pushf
xor
fucom
das
popf
stos
jns
dec
dec
imul
mov
pusha
jge
jl
popf
imul
xor
lret
jl
lods
addr16
push
aam
or
fimuls
xchg
and
imul
outsb
mov
jl
and
dec
add
mov
inc
mov
bound
repnz
hlt
sbb
sbb
lds
stos
lcall
int3
mov
outsl
xor
sub
mov
shll
loopne
rcl
in
xchg
daa
add
xchg
data16
scas
push
ds
adc
test
popf
mov
cmpb
pop
sub
arpl
mov
das
rcrl
orb
test
mul
mov
adc
push
adc
cwtl
out
cmp
inc
xchg
ss
lds
fisttpl
push
push
and
or
enter
pop
cmp
rorb
sbb
inc
adc
push
cmpsb
push
test
adc
mov
bound
insl
hlt
add
incl
xor
and
nop
mov
das
scas
dec
aaa
insb
cmp
dec
or
sahf
add
push
popa
push
int3
hlt
ljmp
jp
lret
out
jnp
shrb
xor
jg
stos
add
dec
push
xchg
ret
fisubs
testb
gs
fwait
or
push
js
cmpsb
shll
mov
pop
fldcw
sahf
jmp
call
lock
pop
jbe
in
js
clc
jge
loop
jnp
aad
in
popa
xor
xor
mov
lea
dec
mov
add
jle
mov
jecxz
push
inc
rorb
dec
jge
push
mov
mov
fisubrl
in
fidivl
jb
push
xchg
xlat
fwait
adc
in
sub
jge
cmp
fidivs
js
in
mov
jbe
dec
fcmovne
cmovns
mov
aaa
gs
and
test
push
mov
add
cmp
jecxz
mov
fcoms
pop
dec
mov
push
cmp
jg
enter
aam
test
pop
stc
jnp
inc
add
dec
jno
sub
mov
loopne
pusha
jmp
cmovl
inc
fildl
pop
cmp
xchg
icebp
add
jns
clc
push
data16
push
add
mov
or
push
cmp
mul
add
push
jle
inc
movsb
in
jg
lock
mov
and
stos
pop
or
and
mov
or
fdivr
iret
push
sbb
movsl
nop
iret
std
dec
or
popf
jnp
jmp
out
pop
jb
lcall
mov
dec
sbb
push
jnp
rorl
cmp
inc
lahf
mov
repz
insb
and
outsl
sbb
or
movsl
rclb
mov
shll
mov
or
inc
sbb
mov
je
mov
cmp
movb
inc
repz
lahf
aas
inc
adc
hlt
hlt
jle
jno
testb
mov
rorb
shr
movsb
les
ja,pn
repz
insl
inc
mov
dec
mov
mov
cmp
clc
mov
lcall
cmp
dec
mov
outsb
call
cmp
lock
jo
std
pop
push
pop
pushf
insl
fs
xchg
sbb
lret
mov
pop
or
or
daa
adc
popa
add
push
mov
cld
and
insb
cmp
inc
mov
imul
bound
sti
hlt
or
repz
inc
adcb
push
mov
leave
adc
adc
lds
shl
xchg
jnp
test
dec
aas
sbb
jmp
inc
dec
dec
movsb
xor
mov
cltd
imul
lcall
call
mov
inc
popa
add
loope
stos
ret
sbb
mov
adc
jge
int3
push
out
xchg
dec
vcvtdq2ps
in
int3
mov
adc
test
sarl
sub
mov
sbb
lret
add
outsb
aad
xchg
insb
int3
imul
sub
cltd
cli
xor
into
shrd
mov
int
bswap
fdivs
cmp
in
add
jge
scas
nop
aad
add
add
leave
mov
mov
sti
jmp
outsl
xor
jge
aas
in
daa
cmpsb
pop
adc
movsl
idivl
loope
leave
xor
data16
or
push
mov
mov
cld
lds
xlat
push
ja
pop
in
sub
xchg
sbb
pop
insb
inc
cli
xor
add
xor
xlat
loop
pop
out
dec
jno
adc
dec
stc
pminub
insl
xchg
pop
push
pop
or
decl
and
inc
push
in
inc
inc
test
mov
in
jae
dec
mov
mov
xchg
cmp
adc
cmp
mov
mov
test
add
jle
xchg
jl
incb
int3
test
int3
dec
lahf
mov
push
sub
aaa
pop
xchg
test
sub
mov
mov
inc
std
insl
sub
sub
fstpl
sub
sub
lret
sbb
scas
or
rep
mov
mov
jnp
pop
pop
pushf
push
sub
add
sbb
xchg
iret
push
jg
jmp
rclb
shlb
std
popf
inc
sti
scas
das
pop
mull
adc
adc
add
jnp
or
bound
jne
test
xchg
das
push
bound
lds
loopne
or
mov
mov
xchg
xchg
pop
xor
pop
xchg
int
cld
decb
mov
sti
mov
mov
add
mov
mov
pop
in
add
mov
mov
adc
repz
inc
lea
ljmp
mov
push
inc
je
adc
popl
mov
arpl
mov
fstps
cmp
mov
mov
dec
fwait
push
dec
inc
int3
repz
sahf
inc
push
aad
inc
push
aad
jg
sub
test
insl
xadd
jbe
loopne
mov
pop
push
push
lds
pop
cmp
sub
jnp
into
divb
push
movsb
and
push
dec
push
add
xor
nop
mov
out
mov
jl
mov
leave
shl
sub
lock
outsb
in
and
dec
adc
outsb
jp
push
pop
ds
cs
decb
mov
mov
sub
jle
outsb
jp
push
pop
ds
cs
decb
mov
mov
sub
jle
outsb
jp
push
pop
ds
cs
decb
mov
mov
sub
jle
outsb
js
push
fidivrl
lret
ficoms
xor
mov
and
sub
sbb
or
jo
push
stc
sub
inc
mov
inc
stos
push
cltd
mov
pop
jmp
aaa
cmp
sub
sbb
or
jns
imul
cltd
mov
pop
call
aaa
cmp
sub
sbb
or
jns
imul
jmp
push
lcall
dec
mov
jbe
ds
mov
ret
pop
addb
mov
je
iret
xor
xchg
out
hlt
or
imul
cli
and
addr16
scas
jmp
lret
rolb
jae
inc
fwait
sub
mov
ss
xchg
clc
pop
bound
fmul
cmp
push
push
jecxz
xchg
out
je
inc
js
jbe
test
flds
push
lods
sub
dec
push
mov
fwait
add
imul
inc
shrl
and
testb
insb
pop
xor
mov
jecxz
sbb
xor
aaa
cli
sub
sbb
or
jns
imul
cltd
mov
pop
jmp
jno
stos
dec
add
mov
push
ss
leave
sub
ds
outsb
mov
xchg
jp
dec
mov
sbb
or
lret
add
cmp
xor
js
push
mov
mov
cmp
imul
cltd
mov
pop
jmp
aaa
cmp
sub
sbb
or
jns
imul
cltd
mov
pop
jmp
aaa
cmp
dec
ret
jbe
test
lock
leave
or
xchg
cmpsb
cmp
xor
sub
inc
in
js
dec
ret
pop
fidivl
shll
insb
das
out
xor
jo
add
popf
jno
mov
push
cltd
mov
xor
insl
xchg
daa
inc
mov
dec
push
cmpsl
jmp
repz
mov
push
xchg
and
adc
cld
subb
enter
adc
mov
cs
jge
shrb
pushf
out
pop
insb
mov
fnstcw
add
jno
ss
xchg
jge
mov
push
xor
add
in
xlat
xchg
xchg
sbb
leave
imul
xchg
pop
or
xlat
add
and
leave
inc
movsb
into
gs
int3
mov
dec
and
idiv
imul
sbb
shlb
jae
minps
sbb
idivb
dec
sub
mov
mov
pop
sub
fistl
mov
mov
mov
aaa
or
ds
and
incl
imul
pop
out
mov
aad
outsb
pop
roll
sub
mov
and
pop
add
and
sbbl
dec
push
lcall
xchg
inc
mov
fdivp
loope
xor
cmp
and
add
popf
sub
popa
ret
pop
mov
pop
es
dec
cmpsb
xchg
dec
lods
push
inc
jecxz
mov
subl
mov
mov
adc
shl
les
andl
frstor
inc
aad
cmpsb
dec
cld
fwait
rorb
xchg
add
mov
in
and
imul
push
add
mov
push
mov
mov
mov
add
cltd
mov
fucom
dec
jmp
mov
ja
add
stos
test
aad
sti
addl
mov
xor
mov
sub
imul
adc
sub
pop
imul
xor
jecxz
pushf
mov
sti
sub
adc
and
test
xor
jge
and
mov
rol
pop
xor
dec
xor
popa
xor
adc
arpl
fdivl
or
cmp
xchg
jno
lods
dec
adc
xlat
cmpsb
and
es
or
shlb
push
lea
pop
scas
rcrb
ja
cli
sub
or
fimuls
sti
cmc
loop
stos
notb
les
sub
cmp
repz
sar
lcall
xor
hlt
and
mov
xor
out
popa
mov
rcr
cltd
mov
jge
cmc
mov
pop
imul
enter
lcall
mov
add
xor
stc
into
jo
daa
jecxz
neg
mov
data16
xchg
jnp
inc
add
inc
mov
fucom
push
out
and
add
pushfw
lea
mov
movl
fildl
mov
pop
es
enter
je
adc
mov
sub
into
xchg
add
outsl
jg
pop
inc
mov
inc
sub
outsb
mov
or
sbb
and
popa
mov
jmp
mov
push
sbb
je
int3
xchg
sbb
inc
shrl
aas
push
std
xor
cwtl
mov
aam
or
sub
or
imul
adc
jl
out
and
imul
test
movsb
mov
cs
mov
jge
or
and
sub
stos
jbe
repnz
sub
fsubrl
fsubs
out
roll
cltd
jo
call
or
sbb
test
mov
outsl
xchg
fisubs
js
jns
jne
aam
loop
daa
inc
xor
jne
aaa
inc
inc
sub
mov
outsl
or
xchg
loop
arpl
xor
in
or
jae
js
loop
xlat
ss
popf
sub
repz
xchg
nop
push
sbb
push
sbb
fsubl
rclb
rorb
and
mov
cmp
dec
pusha
cwtl
jp
pop
xor
lock
pop
or
pop
out
out
pop
lahf
xchg
xor
dec
lods
rcll
sbb
fisubrs
ret
iret
dec
or
mov
sar
rclb
repz
push
cmp
add
jle
cmp
pop
cmpsl
ror
test
xchg
push
mov
lcall
jl
clc
aaa
mov
rcl
subb
scas
andb
int3
jmp
jbe
or
sbb
shr
push
mov
cld
cmp
fs
insl
push
sbb
sbb
fistpll
sti
mov
cltd
push
and
in
data16
leave
dec
lods
xchg
test
cs
push
dec
call
lret
mov
nop
in
mov
stos
xchg
lock
push
dec
sar
test
sbb
sbb
in
scas
sub
fsubrl
call
sub
loop
adc
xchg
stos
and
mov
incb
jecxz
mov
add
repz
cmp
cmp
mov
sub
mov
cmpl
mov
mov
out
inc
cld
add
jge
ficomps
xor
mov
xchg
ljmp
in
dec
dec
ret
into
pop
push
stos
loope
popf
andl
jbe
dec
mov
mov
shll
jbe
loopne
dec
fnsave
out
dec
pop
and
jno
repz
jp
jae
sub
lea
and
test
or
sbb
sti
add
sbb
mov
push
test
clc
mov
shll
fsubs
fadds
mov
orb
stos
or
adc
dec
pop
inc
pusha
fwait
movsl
stos
jne
or
sub
pop
stos
imul
jo
popl
xchg
push
pop
push
sbb
scas
into
adc
push
lcall
jg
mov
nop
arpl
push
sti
dec
aam
push
inc
movsb
push
dec
outsl
loope
mov
xor
test
pusha
cli
cmp
mov
popa
push
jmp
push
loop
xchg
pop
stc
mov
movsb
sti
mov
mov
enter
sbb
and
sbb
dec
ret
push
pop
jo
mov
push
addr16
dec
xor
add
sub
cmp
xchg
xor
ds
mov
popf
push
in
jecxz
mov
adc
sar
jl
ss
pop
daa
inc
sub
dec
pop
adc
jp
lret
jnp
clc
or
addr16
sarl
arpl
cs
fs
sub
nop
jae
subl
lret
push
sub
mov
repz
cmp
inc
pop
inc
ja
mov
fldl
cmp
lods
lea
pop
mov
aam
into
bound
stos
dec
mov
dec
xchg
bound
call
fistl
scas
pop
adc
popf
data16
loop
add
mov
mov
lods
pop
sti
popf
test
push
push
dec
push
in
mov
dec
jmp
stos
mov
fmuls
aaa
lcall
lea
sub
adcb
jbe
stos
ljmp
adc
cwtl
mov
jp
in
aaa
xchg
or
dec
cmp
jecxz
xor
lods
xor
aad
mov
mov
mov
and
in
push
push
add
dec
jne
fsub
out
and
xlat
imul
int3
dec
jl
shrb
mov
enter
imul
sub
push
imul
aam
aaa
dec
add
push
mov
mov
and
loope
cmp
stos
dec
and
movsl
popa
pop
popf
cli
add
mov
xor
add
cmp
mov
lea
pop
dec
or
xor
fucomp
sbb
test
and
inc
mov
lret
inc
add
push
xchg
sbbb
or
inc
push
movsl
nop
jbe
mov
push
pop
fwait
dec
mov
stos
xor
lret
jo
es
cmp
pop
inc
enter
cmpsl
mov
inc
cmp
jns
inc
cmpsb
nopl
loopne
jns
test
out
push
inc
shlb
jg
cmp
mov
ret
nop
outsl
lds
adc
xchg
xor
dec
mov
and
shll
aam
cld
in
rcr
sub
mov
ret
lgs
insl
or
adc
fisubrs
out
sub
imul
int3
or
fwait
loop
out
test
mov
pop
sub
and
lods
ss
xchg
add
leave
push
lret
enter
cwtl
ljmp
and
sbb
aas
xchg
neg
fsubl
cmc
pop
cltd
and
adc
and
leave
jmp
push
jae
cmpsb
jg
adc
cmp
mov
push
pop
push
mov
jmp
jbe
stos
and
loop
pop
mov
mov
cmp
xor
dec
and
addr16
add
jnp
int
scas
jne
rep
jmp
cmp
or
inc
push
into
stos
movsl
or
inc
inc
mov
int3
or
adc
adc
jp
add
xor
or
pop
arpl
cmp
inc
stos
iret
lahf
mov
movsl
push
shlb
lea
sahf
pushf
sub
fsubrl
mov
stos
and
xchg
xlat
adc
mov
pushf
outsb
lods
stos
enter
outsb
in
test
mov
sub
sbb
mov
sub
insb
aad
cmp
xor
sub
xor
rcl
inc
mov
mov
fcom
aas
cltd
mov
das
sbb
or
jne
repz
stc
js
and
mov
push
sbb
mov
fisttps
pop
mov
aaa
jns
sub
inc
popf
sub
fidivs
cmp
mov
loop
rolb
aam
cltd
jne
fwait
dec
loop
sti
xor
out
and
pop
xor
cli
dec
push
and
ret
test
mov
jp
dec
dec
mov
fwait
add
lret
push
dec
push
das
in
dec
shr
mov
cmp
mov
mov
fistpl
adc
adc
cmp
movsl
pushf
not
es
cmp
sub
push
in
cwtl
cmpsl
dec
sub
add
mov
pop
loopne
movsl
fists
lret
mov
sub
mov
xchg
cmp
lods
pop
mov
pop
or
cltd
shll
mov
mov
loope
shl
and
repz
sub
scas
sahf
imul
mov
xchg
sbb
paddb
jae
sbb
inc
inc
sbb
cltd
pop
mov
shlb
sub
divl
cmp
sbb
leave
rol
dec
adc
fs
push
and
fldt
jnp
xor
push
ret
je
cli
mov
arpl
xor
xchg
and
dec
xchg
xor
sbb
jl
in
sbb
shll
jno
cmp
add
push
ss
cmp
popa
xor
hlt
mov
push
shll
dec
arpl
in
fimuls
xchg
test
scas
cmpsb
popf
aaa
mov
out
jmp
fdivp
pop
push
mov
sub
sub
jbe
add
shll
ret
aam
stos
mov
xor
cld
push
repz
add
adcl
pop
dec
adc
adc
das
pushf
sub
jbe
or
rorb
dec
data16
xchg
aaa
pop
rcr
lcall
sub
sub
sbb
scas
mov
inc
adc
imul
imul
xor
xchg
pop
mov
pop
xchg
fsubr
or
sbb
test
adc
sbb
inc
xchg
sti
xchg
int
popa
lcall
push
jecxz
out
mov
iret
adc
xchg
jle
xchg
mov
loop
adc
mov
daa
lea
cmc
or
mov
adc
test
adc
ds
push
outsb
mov
cmp
jbe
aas
pop
testl
add
loopne
or
jge
and
in
stos
mov
and
push
sbb
fwait
int3
aam
roll
fs
mov
push
xor
jge
sub
in
or
int3
outsb
jo
mov
push
test
movaps
mov
dec
test
shr
fprem1
cltd
lods
loop
push
mov
mov
xlat
clc
or
or
cmp
or
cmpsb
cmc
stos
popa
arpl
pushf
outsl
mov
roll
cwtl
mov
push
mov
xchg
cmp
mov
fnsave
popf
pop
ja
ret
push
lahf
dec
lea
mov
jns
sbb
rsqrtps
sti
hlt
stc
sbb
orl
xchg
pop
xchg
es
idiv
jne
mov
shlb
dec
orb
insb
inc
xor
data16
or
mov
and
or
add
iret
js
xor
sub
push
mov
paddw
mov
lret
in
inc
xchg
outsl
stos
out
movb
mov
fldcw
dec
and
in
add
xor
lret
cwtl
or
ds
in
stos
push
or
pop
addr16
pop
test
imull
mov
icebp
mov
incl
jns
adc
sub
test
loopne
fwait
dec
decb
jle
inc
or
add
dec
mov
dec
repnz
or
xor
arpl
out
pop
outsl
adc
shlb
sub
out
in
mov
hlt
mov
nop
test
frndint
cmpsb
add
sti
stc
inc
stos
in
mov
xchg
daa
sbb
adc
fcmove
jl
test
insl
mov
out
xor
sub
mov
mov
notl
xchg
mov
aam
enter
dec
popf
jb
adc
dec
mov
fucom
lods
adc
mov
mov
into
fistpll
js
pop
std
sti
cmp
jne
rorb
lahf
insl
loop
jl
dec
push
or
insl
sti
sbb
push
js
dec
aad
lret
xchg
fsub
mov
jecxz
testb
mov
fldt
aaa
rcrl
mov
sub
loop
inc
inc
mov
decb
not
mov
test
pusha
mov
daa
add
addr16
pop
lcall
ss
jmp
aad
inc
adc
sbb
lock
push
mov
mov
or
aad
push
cmp
lret
pop
dec
or
int3
mov
jle
pushf
mov
les
stos
shrl
das
scas
push
sbb
stc
mov
inc
hlt
mov
push
call
pop
je
call
push
pop
sub
dec
jo
out
jmp
movb
xor
push
sbb
sub
xor
fs
fnsave
fldt
and
jnp
inc
xchg
loop
outsl
les
pop
ror
das
fidivrs
jecxz
cmp
mov
fimuls
or
inc
xchg
xor
lock
sub
push
mov
add
add
pop
aaa
push
dec
jp
lcall
jnp
inc
mov
ds
jno
xchg
inc
mov
sub
xor
imul
xor
lret
dec
inc
push
lcall
xchg
pop
push
adc
lahf
test
fwait
mov
jb
rclb
inc
jmp
scas
das
lret
inc
sti
lods
mov
ja
lahf
push
inc
xchg
dec
adc
lods
jb
dec
mov
xor
inc
sbb
dec
imul
popa
lods
xchg
rol
push
adc
pusha
cld
scas
ret
cmpl
xor
fstpl
in
adc
cmp
xchg
or
push
out
xchg
aaa
xchg
leave
popa
cmpsb
adcb
push
mov
or
into
outsl
sbb
pop
rolb
push
cs
inc
xchg
test
in
mov
adc
out
scas
call
lods
xchg
insb
je
dec
jae
ds
test
insb
mov
push
sub
lock
cltd
dec
push
adc
lahf
pushf
enter
mov
mov
pop
xchg
mov
mov
and
in
xchg
add
subb
dec
mov
roll
sbb
test
shl
jge
mov
mov
push
push
cmp
jns
sub
add
addr16
std
pop
pop
sbb
mov
sub
mov
lds
iret
pushf
sub
xchg
xchg
enter
outsb
inc
pop
sub
pop
adc
adc
stos
mov
adc
shll
push
orl
sub
repz
add
inc
adc
sbb
sbb
inc
sbb
dec
imulb
lret
repnz
sbb
popf
and
inc
in
popf
inc
incb
pop
inc
popa
imul
xor
sub
out
mov
inc
ljmp
shll
inc
movsb
inc
fs
fsts
mull
dec
popf
adcb
xlat
or
xchg
aad
mov
testl
fidivs
or
shrb
in
aad
adc
test
stos
rorl
add
mov
insl
lods
or
push
sub
lock
loop
pushf
in
int3
jae
push
push
inc
sub
adc
jne
fldcw
subb
lea
inc
aas
lret
sbb
xor
xchg
cmpsl
and
xor
lret
add
les
jb
stc
jle
mov
inc
iret
jb
fldenv
xor
popf
popf
sub
mov
sub
lds
loop
jno
mov
add
loop
cltd
pop
lock
enter
dec
ds
jecxz
insl
repz
and
add
jns
jo
or
mov
pop
je
repz
xchg
inc
mov
adc
out
lcall
subl
push
xor
lcall
into
addb
idivl
mov
xchg
inc
xchg
push
ja
cld
jge
xor
xchg
ret
icebp
test
or
lret
jno
pushf
jge
dec
aaa
mov
cli
pop
mov
adc
dec
xor
xchg
push
sub
lock
inc
inc
xchg
scas
push
sbb
sbb
push
inc
js
sub
sti
pop
cli
xchg
shll
mov
mov
lcall
pop
lods
xor
inc
mov
cmpsl
mov
push
mov
jb
and
fcoml
into
inc
daa
ss
stos
das
out
call
fisubrl
sub
data16
out
loop
test
xchg
aam
xchg
outsl
call
outsb
clc
mov
dec
mov
rorl
xchg
repnz
sub
cmp
add
push
sarb
jb
cmc
outsb
xchg
pop
scas
xchg
cwtl
mov
xor
cmpsl
jg
or
sub
aam
imulb
adc
cmp
mov
mov
shll
jae
xchg
lods
or
movsb
addr16
pop
lods
pop
leave
cwtl
inc
add
push
in
jmp
add
sbb
into
or
dec
cli
cmpsb
test
adc
sub
mov
lret
cmp
mov
push
add
jp
sub
add
push
pop
nop
dec
mov
aam
mov
lock
pop
mov
sub
sti
sbb
xor
jb
xor
push
xor
mov
or
nop
jge
arpl
in
adc
lods
jnp
xchg
cmp
popf
mov
cs
pop
sub
hlt
mov
mov
pop
in
gs
pop
sub
xor
clc
cmp
aas
bound
shlb
dec
test
lods
mov
or
xor
mov
cmpsl
xor
pop
out
push
int3
xor
int3
mov
in
inc
dec
cmp
iret
adc
call
pop
mov
hlt
or
cmp
jbe
mov
roll
mov
jl
pop
and
cmp
pop
insb
mov
fwait
test
add
mov
xor
dec
pop
in
xlat
jl
and
insl
jb
cmp
fwait
icebp
mov
cld
enter
cmp
das
je
imul
fucomi
push
into
sub
aas
arpl
push
and
add
fstpl
repnz
xor
add
popa
fnstcw
mov
and
fisubrs
mov
mov
dec
jge
push
daa
movsb
push
aas
icebp
mov
out
adc
jl
testl
mov
dec
and
jecxz
sbb
jle
xlat
xchg
cmp
loope
mov
mov
dec
jp
jno
aam
out
mov
test
inc
sub
mov
cmp
and
xor
pop
jl
xchg
or
jmp
pop
mov
mov
rclb
call
loope
and
scas
sub
jle
add
mov
cmp
fs
ss
pusha
fwait
test
jle
arpl
dec
jae
aas
inc
js
jp
out
lods
mov
mov
mov
sbb
mov
gs
add
les
mov
or
xchg
xor
repnz
add
jne
ret
xor
jnp
orl
xor
or
cltd
into
into
test
lret
inc
je,pt
repz
dec
xor
xchg
mov
mov
loopne
jno
aas
xchg
mov
nop
push
ret
fdivr
call
daa
or
arpl
out
mov
fs
and
or
adc
or
jns
imul
cltd
mov
pop
jmp
aaa
cmp
sub
sbb
or
jns
imul
cltd
mov
pop
jmp
aaa
cmp
sub
sbb
or
jns
push
mov
inc
test
ja
push
jmp
aaa
cmp
sub
sbb
or
jns
imul
inc
mov
mov
mov
xor
dec
jmp
jns
pop
fwait
imul
leave
xchg
flds
mov
cltd
les
push
pop
push
imul
sbb
sub
adc
xchg
fldenv
mov
mov
push
imul
cmp
dec
fxam
lcall
scas
out
xlat
out
push
pop
push
dec
popa
sbb
mov
xchg
add
je
out
sub
mov
pushf
insb
hlt
lcall
iret
and
mov
fidivrs
xlat
mov
mov
rolb
mov
add
xlat
in
leave
sbb
sub
notb
int3
ss
or
pop
push
pop
es
sahf
or
xlat
lea
leave
imul
pop
ja
icebp
cmp
add
mov
sub
data16
and
cmpsb
add
fwait
dec
out
sbb
daa
cltd
sbb
adc
mov
cltd
xchg
mov
adc
mov
test
push
pop
imulb
jns
or
inc
sub
inc
jmp
cli
cltd
ds
inc
xor
or
sbb
and
dec
pop
js
mov
ffree
mov
xchg
iret
in
mov
in
xchg
sub
push
sbb
dec
cmp
sub
cmp
lods
repz
test
mov
mov
xchg
mov
inc
add
inc
or
sbb
jbe
leavew
xchg
flds
mov
cltd
test
push
pop
push
imul
sbb
jbe
leavew
xchg
flds
mov
cltd
test
push
cld
rcl
xchg
pop
or
iret
mov
nop
sub
sub
jnp
stos
or
mov
push
mov
add
imul
icebp
adc
pop
daa
cmp
xchg
ret
sub
and
jmp
sub
sti
push
ds
cmp
xor
lea
sbbb
test
loopne
out
inc
clc
jb
insb
jle
frstor
int
or
call
in
ljmp
fwait
outsl
es
mov
sarl
adc
movsb
imul
aam
mulb
or
xchg
lock
dec
aaa
xchg
ret
mov
neg
cmp
lcall
xchg
in
add
scas
adc
out
sub
test
insb
mov
jle
sub
nop
or
jp
gs
pop
jns
cltd
rcll
fwait
jo
and
mov
inc
std
lret
frstor
jle
push
sbb
adc
dec
mov
sub
aas
inc
mov
jp
inc
lahf
jle
sub
mov
add
push
pop
pusha
or
dec
inc
cmp
lock
cmp
fildl
pop
inc
adc
adc
ss
aaa
pop
decb
and
jnp
cmc
sbb
mov
ja
ret
xor
sahf
dec
dec
sbb
shl
and
sbb
cld
ss
aam
mov
addl
jns
mov
jg
mov
sub
arpl
out
outsl
jmp
pop
mov
dec
lcall
mov
icebp
xor
inc
sbb
push
mov
xor
sarb
ficompl
jne
jg
xor
and
loopne,pt
sbb
fwait
push
movsl
sarb
or
mov
jb
inc
jb
push
nop
jb
aaa
aas
xchg
cmp
std
xchg
and
js
in
ss
sub
jae
cmp
int
outsl
jl
xchg
ljmp
cwtl
jo
aas
push
movsl
adc
pop
pop
sub
mulb
adc
push
repz
inc
rcrb
ret
iret
jle
popl
enter
addb
jne
dec
sub
mov
popf
test
nop
sub
cmp
orb
shlb
mov
lahf
inc
cmp
inc
push
popf
ja
pop
addr16
xchg
insl
xor
test
inc
jo
mov
and
rcr
ss
imul
inc
rorl
dec
or
gs
jne
popf
pop
cld
rcrb
mov
cmp
mov
iret
fwait
add
adc
dec
bound
mov
xlat
push
mov
testb
hlt
lds
mov
cmp
lea
mov
fisttps
xor
dec
in
dec
dec
mov
gs
xlat
cmp
leave
dec
test
and
nop
out
pushf
xor
in
or
mov
or
mov
pop
inc
scas
fsubrl
xchg
add
inc
add
test
jbe
mov
xorl
pop
lret
lds
pop
cld
ja
pushf
iret
push
sbb
lahf
inc
scas
fdivl
jle
dec
shrb
pop
enter
sbb
and
das
or
pop
mov
dec
sub
dec
jb
jge
icebp
or
jae
adc
mov
enter
pop
imul
xchg
mov
fcmovbe
sub
jecxz
enter
stc
push
andl
sbb
xchg
jle
dec
push
insb
cli
jo
mov
cld
pop
push
push
test
rolb
sbb
xchg
add
sti
sub
test
xchg
clc
sbb
dec
pop
push
and
and
aam
ss
dec
mov
nop
dec
lds
jecxz
mov
sbb
dec
aaa
fidivrs
out
xor
sbb
sbb
add
pop
xchg
sbb
cwtl
dec
enter
and
pop
add
outsb
int
push
shrl
xchg
lds
adc
dec
inc
inc
mov
sbb
test
insb
push
sarb
lret
pushf
ror
imul
ds
dec
ret
lcall
mov
cltd
push
xor
jle
jl
push
pop
popa
leave
inc
or
mov
sub
mov
cwtl
cmp
sbb
aas
stos
cmc
sbb
faddp
dec
jecxz
jnp
sahf
push
in
scas
es
mov
xlat
filds
jne
cmpsl
sbb
mov
fidivl
inc
int
mov
inc
repnz
jg
ja
dec
mov
outsl
jns
lods
out
xor
mov
daa
or
mov
sbb
pop
inc
mov
sub
dec
add
inc
cmpl
outsb
push
push
test
stc
pop
add
mov
ror
sbb
or
sti
mov
or
faddl
xchg
cmp
jno
xor
enter
adc
pop
out
imul
imul
pop
mov
xor
out
arpl
movsl
mov
mov
sbb
fcompl
out
fistps
mov
mov
cmp
xchg
add
push
dec
jg
test
jae
mov
mov
mov
dec
pusha
sbb
mov
dec
xchg
inc
mov
mov
rolb
adc
inc
mov
sbb
xchg
pop
pop
cs
out
cmp
dec
xchg
mov
sub
push
inc
std
aas
jbe
and
in
mov
push
inc
loop
push
mov
mov
daa
cmp
out
mov
mov
sbb
dec
adc
gs
lods
sbb
and
pop
cmp
popf
mov
ja
adc
loope
mov
or
jo
lds
or
testb
add
jns
test
aaa
cmp
movsb
mov
into
xor
dec
stos
dec
pop
cmp
jns
shlb
arpl
imul
mov
xchg
insb
ss
mov
cwtl
in
loopne
stc
js
notl
mov
in
lret
std
cmp
cwtl
pop
mull
insl
ljmp
int
mov
jae
pop
fisubs
jg
mov
xchg
pop
mov
mov
inc
jp
xchg
shl
or
cmp
xor
call
jns
mov
inc
inc
inc
xchg
sbb
pop
mov
push
out
jb
push
cmp
pushf
pop
testl
pop
or
sbb
fbstp
xor
sub
in
mov
cmp
test
mov
lea
decl
aaa
add
jl
ja
jne
xor
inc
add
cmp
or
and
jb
mov
jmp
enter
dec
pop
and
jae
sbb
inc
push
or
mov
fidivrs
jnp
aaa
push
out
testb
arpl
cld
cltd
lock
imul
mov
mov
sbb
and
mov
cwtl
ss
xchg
jae
xor
or
jmp
mov
testl
dec
cmp
inc
out
pop
xchg
add
xchg
lods
movsl
cmp
imulb
xorl
xchg
mov
outsb
ja
xchg
add
test
sbb
lret
fnstenv
mov
movsb
mov
mov
ret
sub
sbb
repz
imul
ror
aam
inc
adc
int3
mull
mov
or
sbb
jnp
inc
cmp
test
insl
mov
cli
out
push
sub
mov
pop
dec
loop
and
outsb
sbb
and
std
adc
enter
jge
inc
or
adc
out
jmp
loope
stos
mov
rcll
push
repnz
jno
cmc
sub
xchg
dec
xchg
insb
dec
adcb
lret
sub
adc
xchg
movsl
mov
dec
cmp
pop
push
inc
test
lock
sbb
dec
clc
dec
add
inc
sub
js
shlb
pop
int3
jbe
push
xchg
int
imul
add
jnp
inc
mov
in
sbbb
sbb
xor
mov
jnp
jg
aas
jle
sub
push
mov
lods
xchg
scas
shrl
ljmp
sti
jnp
lods
int3
xor
xor
inc
mov
out
push
stos
out
shll
filds
or
adc
je
imull
jno
sub
mov
pusha
mov
fbld
mov
dec
xor
pop
mov
jecxz
mov
xor
pusha
dec
fisttpl
lcall
dec
inc
pop
lea
fsubrl
ret
pop
std
cmp
dec
pop
xchg
idivb
aas
sbb
push
cld
test
xchg
and
ds
lea
xchg
or
xchg
mov
sub
xchg
stc
mov
jb
jmp
pop
mov
pop
daa
data16
into
jae
mov
fwait
test
repz
add
aam
out
mov
ss
jl
idiv
daa
push
jne
cmp
data16
jb
xchg
jbe
aas
mov
add
jnp
xchg
je
cmp
mov
mov
sbb
in
loopne
mov
stos
and
mov
cmp
push
xchg
xlat
sub
adc
jno
ret
fisubs
sbb
xchg
cmp
or
scas
dec
and
or
call
jg
cmp
dec
cmp
xchg
mov
cmpsl
push
add
mov
inc
sub
and
pop
add
jg
ret
mov
lret
fdivrs
imul
or
lret
dec
pop
lods
imul
pop
cmp
dec
xchg
inc
cltd
adc
sub
dec
pop
push
mov
push
dec
into
popa
inc
cmp
loop
leave
push
mov
xor
cmp
nopl
arpl
sbb
xchg
cmp
add
jo
dec
jae
bnd
cmp
and
ret
je
lret
cmp
jl
xor
lea
clc
dec
aam
push
scas
or
dec
jl
test
cltd
adc
psubusw
imul
clc
or
addw
dec
cs
jae
adc
stos
xchg
mov
mov
pop
inc
xor
jge
cmp
loopne
cmp
arpl
lahf
push
adc
enter
imull
mov
fcmove
inc
add
xchg
addr16
inc
ret
aaa
xchg
scas
fwait
call
or
cmp
aad
mov
fdivrs
shll
mov
aam
not
or
fwait
dec
or
aas
ret
jbe
pop
mov
pop
fsubl
pop
pop
negb
sub
pop
lods
pop
pop
data16
ret
inc
scas
and
jle
jp
push
jno
mov
test
fldt
dec
push
outsb
lods
js
sahf
jns
pop
sub
inc
enter
in
mov
enter
inc
loopne
xchg
add
mov
ret
fs
pop
sbb
mov
insb
mov
and
mov
sbb
pop
push
mov
js
movsb
lret
adc
xor
pop
and
jg
cs
inc
aam
popf
leave
inc
or
cmc
lcall
out
mov
dec
cli
push
mov
mov
pop
pop
pushf
cmp
jno
pop
es
cwtl
inc
cmp
out
scas
mov
pop
push
pop
roll
pop
insb
fnstcw
shrb
inc
inc
jb
fldenv
sahf
xchg
out
sub
cmp
or
push
ljmp
das
cli
push
xor
stos
cmp
cmp
inc
imul
jns
pop
sub
popa
push
test
jle
inc
cmpsl
mov
mov
out
js
push
push
mov
adc
cmp
faddl
mov
pop
frndint
lret
jge
mov
fbstp
das
aaa
mov
jb
add
sub
jl
scas
aad
mov
loope
add
divl
js
mov
dec
or
fcmovu
push
popf
cmp
mov
dec
cmpl
in
test
iret
push
pop
aad
mov
lcall
mov
aam
mov
ret
sbb
push
insb
jae
cmp
out
cmp
xchg
fadds
mov
jmp
mov
or
or
xlat
icebp
inc
cmc
dec
push
xlat
fnstcw
ret
jle
enter
mov
stos
xchg
mov
jbe
lcall
mov
movsb
out
arpl
dec
lock
push
jno
rorb
ja
or
fisttps
xor
mov
push
pushf
stos
sbb
imul
repnz
dec
pop
rclb
lcall
and
cmpsl
mov
clc
fists
push
int
jl
cmc
ljmp
jp
pop
sarb
add
mov
jge
xor
inc
int3
push
adc
jg
out
mov
push
idivb
stos
into
jae
sub
cmp
ret
mov
xchg
sbb
hlt
popa
push
mov
fwait
mov
les
test
inc
iret
sbb
dec
mov
mov
push
out
cmp
rolb
icebp
sbb
sbb
les
adc
data16
adc
dec
jle
dec
pushf
int3
or
push
jne
in
stos
push
outsb
jnp
pop
lods
loope
mov
xchg
push
out
push
icebp
xlat
cwtl
pop
dec
or
dec
push
cmp
aam
xor
jle
mov
pop
adc
add
mov
pop
out
cs
dec
cli
or
in
mov
and
inc
inc
jge
mov
lock
jbe
pop
pusha
cs
mov
jl
rorl
mov
mov
gs
dec
add
push
jo
gs
insl
cmp
dec
rorl
cmp
and
aaa
pop
inc
pop
fbstp
jno
xor
int
push
push
cmp
or
mov
or
push
xchg
ret
mov
sub
sub
push
pop
pusha
cs
sti
in
negl
inc
das
mov
out
aam
inc
andl
mov
xchg
pop
jmp
lahf
adc
sub
test
xor
int
mov
push
es
sub
sub
dec
aaa
fs
hlt
fdivl
cmp
push
pop
adc
lahf
int
lcall
clc
rorb
addb
pop
ficompl
fbstp
out
mov
mov
dec
mov
stos
enter
inc
inc
movsb
std
push
sub
fisttpl
push
dec
popa
loop
cli
fdivs
fwait
movl
into
dec
aad
rcrb
mov
ja
nop
lret
mov
mov
or
push
test
or
inc
mov
and
sub
idivl
dec
xchg
push
sbb
jne
and
sub
add
out
lret
push
pop
inc
hlt
push
clc
jg
pop
dec
aam
ljmp
jp
jge
sub
insb
jmp
jg
aaa
cli
push
inc
and
dec
ljmp
push
push
mov
pop
adc
bound
mov
xor
rolb
pop
jns
mov
out
push
test
adc
fistpll
mov
xor
shll
mov
or
stos
sbb
inc
push
sbb
jns
fdiv
shll
ret
xchg
xchg
or
mov
jge
dec
push
cmp
adcw
ljmp
sub
sbb
int3
mov
xchg
xchg
pushf
movsl
orl
xchg
mov
and
push
sub
mov
notb
add
lcall
rcrl
arpl
scas
jno
nop
lods
test
repz
sbb
mov
scas
lret
std
insl
aas
sbb
fmulp
imul
pusha
out
add
adc
test
dec
mov
fstps
outsb
inc
sub
js
mov
jns
shrl
in
cwtl
cwtl
fdivl
aaa
mov
into
repz
adc
sub
sub
pop
into
inc
inc
shll
les
std
or
mov
jl
jne
cs
xor
mov
sahf
js
sub
test
inc
pop
xor
xor
push
js
push
cmpsl
pop
mov
iret
mov
mov
mov
xchg
call
inc
mov
and
in
rolb
xor
adc
mov
jne
or
xlat
rcr
sti
add
xchg
je
notl
rolb
push
jmp
outsb
xor
and
push
cmp
repz
xor
into
sbb
dec
call
push
cmp
aaa
add
mov
bound
lods
ret
daa
loop
pop
xor
push
pop
dec
push
xor
and
push
cmp
push
pushf
loop
sahf
aas
js
xchg
xchg
xor
stc
out
insb
insb
mov
sub
cmpl
stos
stos
addr16
mov
into
shl
int
xlat
push
mov
cltd
sbb
adc
pop
and
sub
push
pop
cmp
aas
clc
add
ss
icebp
js
and
movsl
mov
ss
or
push
lods
jecxz
dec
or
xchg
mov
stos
add
pop
mov
xchg
mov
sti
popf
jl
xor
aam
ljmp
fimull
jnp
add
mov
enter
into
clc
or
repnz
mov
sar
subb
jmp
dec
push
mov
dec
mov
sti
sti
call
jmp
inc
test
fwait
or
xchg
jmp
fs
ds
iret
or
ret
xchg
data16
push
add
push
add
pop
sub
and
notb
psubsb
in
ret
mov
ja
sbb
add
sub
mov
fnstsw
mov
shrl
mov
cmpb
push
mov
push
int3
pop
arpl
dec
popa
in
lea
dec
adc
sub
mov
fidivrs
push
lds
jnp
push
std
sub
xchg
das
enter
add
das
or
xchg
idiv
or
jle
ret
sub
jne
inc
push
inc
nop
inc
in
sbb
cmp
sahf
cmp
push
aaa
in
mov
xchg
lock
dec
push
push
aad
ret
jecxz
sbb
sub
sbb
jp
cld
adc
xor
push
and
sti
dec
push
gs
cwtl
push
xchg
xor
sub
cmp
mov
in
repz
popf
sub
out
stos
pop
cmp
jge
cmpsl
arpl
adc
mov
dec
cmc
hlt
loope
inc
pop
loope
adc
imul
push
jns
fsubs
aas
imul
les
inc
add
sahf
push
scas
ja
mov
in
dec
cmp
mov
dec
and
sbb
cli
es
mov
pop
ret
and
std
push
fsubs
sahf
sbb
jmp
cmp
cmc
sbb
leave
stc
and
pop
sbb
int
adc
xor
mov
movsl
les
mov
add
sbb
mov
cmpsb
add
in
mov
jne
testb
push
shll
push
shll
pop
imul
pushf
mov
dec
cmp
fisubs
jno
int3
nop
and
or
out
ficompl
call
push
adc
ss
dec
je
or
xlat
dec
sub
jmp
js
nop
xchg
dec
adc
aam
pushf
xchg
lods
or
call
icebp
jle
push
mov
cltd
add
push
xchg
mov
nop
cmp
stos
pop
cmp
mov
and
fcmovnb
pop
inc
pop
movsl
cmpsl
inc
xchg
inc
add
ret
pop
faddl
add
cld
ret
shll
pop
mov
aas
fisttps
scas
lea
jae
xchg
insl
notl
leave
pushf
mov
cltd
mov
jbe
fwait
pushf
imul
out
xlat
xor
stos
dec
inc
xor
xchg
mov
lcall
or
in
ja
cmpsb
repnz
test
popa
sub
sbb
dec
adc
icebp
push
cmp
add
fsubrl
sbb
and
adc
jnp
pop
jno
mov
jo
xchg
test
push
jb
inc
leave
ret
cltd
lcall
int3
out
mov
adc
fucom
and
sbb
cmpb
ja
jno
and
dec
push
imul
xor
shll
fdivs
jg
jne
push
sub
mov
adc
fnsave
std
mov
inc
xchg
ficoms
mov
and
adc
inc
mov
fidivrs
xchg
xor
jmp
push
fucom
xchg
icebp
aam
mov
fstl
mov
adc
add
fisubrs
pop
jno
decb
imul
enter
or
loop
and
push
out
mov
nop
in
repnz
mov
pop
inc
stos
inc
out
push
xchg
fwait
sbbl
fcom
xor
jge
cmpl
aad
fstpt
out
mov
push
mov
jle
test
sub
jmp
je
jl
lock
cmp
push
pushf
stc
jg
xchg
mov
mov
mov
aam
push
stc
std
push
inc
or
inc
fisubs
fistpl
jbe
or
push
dec
sti
scas
dec
xor
xor
sub
xchg
popf
mov
cltd
sub
ud1
push
or
pusha
pop
cmpsl
cmp
lret
fldt
or
mov
inc
mov
lds
iret
adc
lock
cmpsb
outsl
cmc
je
xchg
outsw
add
push
or
add
push
int
pop
push
mov
xor
pop
and
in
xchg
add
clc
das
or
jns
cmp
stos
xor
mov
cli
mov
iret
ret
mov
pushf
jge
int
out
inc
xchg
cmp
call
pop
jns
or
inc
sub
leavew
xchg
flds
mov
cltd
test
push
pop
push
imul
sbb
jbe
leavew
xchg
flds
mov
cltd
test
push
pop
dec
imul
out
sub
leavew
dec
flds
mov
cltd
test
push
pop
push
imul
sbb
idivb
leavew
imul
sar
pop
adc
push
or
jl
cld
in
xchg
faddl
out
cmc
clc
loope
icebp
jl
dec
and
cmp
inc
in
mov
movsl
int
faddl
mov
pushf
jmp
xor
pop
add
or
sbb
in
adc
arpl
paddusb
lods
lds
insb
xor
cmp
es
add
jae
pushf
icebp
cld
in
mov
daa
cli
pushf
sbb
push
scas
add
mov
or
imul
jno
mov
loopne
outsb
push
sub
cmp
lret
adc
pusha
ret
cmp
in
imul
mov
sbb
and
sub
sbb
sti
xchg
xchg
cltd
popl
cld
movsl
in
xchg
xor
insb
adc
mov
add
pusha
outsl
call
adc
pop
lahf
push
mov
mov
cmp
or
cmc
pop
cmc
jg
push
jo
push
jecxz
adc
cld
pop
inc
loopne
push
dec
mov
pop
les
ret
shrl
sbb
sbb
test
loope
test
pushf
push
insb
xor
pop
cmp
cmp
or
sbb
cwtl
mov
lret
xchg
jmp
lret
mov
into
push
and
jo
popa
and
mov
mov
jmp
mov
push
xor
cmp
pop
xor
ss
jmp
mov
pushf
lds
and
sub
cmp
or
sbb
in
mov
movsl
int3
xchg
faddl
mov
pushf
lds
and
sub
cmp
or
sbb
in
mov
repz
call
mov
jl
cli
jnp
and
xchg
sub
or
lcall
shrl
fildl
inc
mov
fwait
cltd
add
stos
sbb
fsubrp
sbb
out
dec
dec
jg
aas
addr16
clc
sub
nop
orl
lahf
aam
mov
mov
dec
stc
aam
sbb
movsb
xor
mov
subb
lcall
fcomps
imul
jno
xor
mov
iret
pop
inc
les
out
xchg
fistps
adc
or
hlt
cmc
dec
sub
in
int
inc
enter
out
aaa
out
push
adc
jb
daa
mov
sbb
mov
jnp
fsubrl
lock
jmp
in
sti
cld
insl
int
sbb
push
cmc
ds
add
dec
cli
shl
lods
inc
sub
sbb
out
cmp
into
xchg
and
push
xorw
iret
int3
dec
push
ljmp
scas
or
dec
mov
cli
shufps
cs
rol
int3
jp
push
hlt
xchg
xor
lcall
mov
push
and
or
xor
xchg
insl
das
sub
dec
arpl
jae
pusha
dec
lret
dec
bound
mov
fsubl
sarl
or
fucomip
mov
faddl
inc
mov
pop
or
outsl
xchg
nop
xchg
inc
pop
subl
adcl
pop
inc
jecxz
push
cmp
add
shlb
test
fidivl
cmp
push
arpl
jo
ds
mov
arpl
cmp
lcall
jo
add
cmpsl
rcrb
ja
add
cmp
mov
lock
int3
adc
dec
cmp
mov
cmp
scas
out
and
int3
jg
mov
pop
mov
pop
mov
repnz
pop
xchg
mov
mov
adc
cmpsb
sub
fldl
sub
cmpb
mov
push
stos
dec
mov
sbb
mov
insb
je
pop
imul
les
inc
sbb
pop
repz
xchg
adc
jae
adc
stos
rcrb
in
hlt
rclb
inc
add
ficomps
imul
cmp
adc
les
loop
test
test
notb
xchg
pop
push
lahf
fcomp
sbb
push
cli
shlb
xchg
mov
cltd
stos
mov
sub
adcl
or
lcall
dec
shrl
pop
js
pop
fs
sub
xor
xchg
push
scas
add
pop
mov
sbb
pop
inc
mov
ss
shr
mov
sub
fnop
inc
cld
mov
ret
outsl
add
inc
hlt
or
inc
ss
cmp
push
out
icebp
add
adc
xchg
fwait
add
push
inc
jo
ljmp
andl
jae
repnz
call
mov
sbb
popf
adc
ds
xlat
xor
js
imul
fwait
shll
push
shr
sti
movsb
dec
int
cmc
sub
insb
mov
xchg
pop
mov
jecxz
xlat
ds
add
sti
jl
cmpl
push
cmpsb
pop
scas
mov
out
inc
inc
dec
sahf
cwtl
mov
lcall
mov
push
rolb
or
pop
stc
xor
adc
idiv
clc
xchg
cmp
inc
idivb
push
add
test
leave
sarb
jmp
aam
cmp
pop
dec
imul
xchg
aad
jge
and
pusha
and
inc
inc
or
pushf
jg
fsubr
rolb
out
fs
cmpsb
xchg
jecxz
inc
mov
cwtl
ret
pop
pop
fs
dec
movsl
jns
test
cmp
scas
adc
sti
add
in
mov
xchg
jg
xchg
cmp
rorb
out
fwait
je
fcomp
insl
jb
mov
adcl
jge
in
pop
lret
sub
aas
sub
adc
xor
into
addr16
jl
mov
cmp
roll
fsub
jl
xchg
mov
scas
or
sub
aaa
fwait
pop
push
or
xlat
push
cli
mov
fisttpl
lahf
aaa
enter
out
out
push
or
mov
pop
adc
push
sub
mov
jp
sbb
adc
push
fsubs
stos
adc
jae
mov
inc
cmpsb
dec
test
add
fiadds
test
outsl
and
scas
lock
or
push
in
mov
rorl
add
mov
enter
dec
lret
rcl
mov
fistpll
xchg
inc
icebp
es
test
shrl
rcrb
clc
mov
pop
fs
xor
mov
mov
push
adc
call
cwtl
sti
test
inc
arpl
inc
xor
mov
sbb
shlb
mov
inc
scas
in
mov
cmp
rolb
jecxz
aam
or
xor
adc
pop
push
push
mov
aaa
mov
mov
inc
cmpl
mov
nop
aas
repnz
popf
sub
ret
dec
jmp
dec
xchg
jge
xchg
push
out
dec
push
mov
cmp
xor
sub
xlat
outsl
dec
outsb
test
sti
ja
insl
pop
movsl
xchg
xor
orb
test
enter
pop
ret
jle
jo
and
into
test
mov
into
dec
or
jle
pushf
lds
andb
adcl
jl
loop
inc
aam
std
jo
or
dec
pop
jo
or
add
inc
popf
aaa
inc
cmc
ja
or
mov
or
cmp
shlb
addl
mov
cld
fs
les
inc
mov
cmp
addr16
mov
outsl
sti
mov
mov
xor
push
push
xchg
pop
test
jno
add
mov
cmpsl
adc
push
push
pop
jbe
loope
sbb
test
dec
loope
inc
pop
aas
rorb
xchg
into
daa
push
out
popf
inc
mov
pop
ficoml
popa
mov
lret
xchg
idivl
ss
in
jmp
aam
jge
or
mov
pop
sbb
mov
repz
cmpsl
and
fildl
sbb
pop
jae
dec
ljmp
leave
int3
sbb
or
into
jae
xchg
pop
xor
lret
in
jne
pop
jecxz
fisttps
inc
loopne
stc
inc
js
xor
clc
mov
mov
cli
sbb
mov
insb
jnp
bound
loopne
push
jnp
cli
xchg
stos
std
mov
ljmp
cmpsl
xchg
lahf
mov
sarb
sub
push
mov
mov
cmp
stos
push
cs
and
xlat
mov
adc
jmp
insl
cld
ret
outsb
xor
xchg
lods
mov
rorl
cmp
mov
les
hlt
dec
hlt
mov
sbb
pop
cmp
xchg
divb
sub
jp
xchg
cmp
and
aas
jno
addb
add
adc
insl
lcall
jnp
hlt
jmp
jno
xchg
mov
mov
mov
pop
jecxz
mov
repz
test
shl
dec
shr
adcb
stc
ljmp
std
negb
or
dec
xchg
repz
jecxz
sbb
and
inc
push
mov
repnz
xor
popa
push
adc
dec
je
cmp
jmp
mov
xchg
mov
insl
hlt
and
mov
gs
cmp
js
mov
or
jp
outsb
xor
mov
xor
int
add
pop
xor
inc
cmp
mov
pushw
scas
lods
je
xchg
adc
lret
cmp
pop
and
cmpsl
addr16
mov
add
xor
out
aam
xchg
out
call
dec
jae
nop
cli
mov
mov
int3
notb
mov
iret
xchg
js
ret
xor
cmc
push
add
lds
cmc
test
dec
sub
mov
ret
lock
pop
push
or
mov
mov
sbb
dec
lods
and
dec
sbb
pop
and
jp
aaa
in
in
jno
pop
mov
cmp
je
push
pop
mov
addl
out
roll
adc
dec
sbb
test
decb
in
xor
push
dec
push
hlt
cmpsl
loope
mov
jbe
loopne
lock
pop
sub
out
cmp
mov
pop
jno
addl
lea
fidivs
test
aas
mov
sub
cmp
mov
cltd
repnz
or
pop
lods
jno
notb
mov
pop
into
cmp
test
sbb
sub
xor
mov
cmp
repnz
dec
loopne
jp
inc
jecxz
std
xchg
cmp
xlat
cld
push
mov
int
pop
das
mov
mov
sub
or
mov
mov
sbb
add
nop
stc
mov
add
cmc
out
mov
arpl
ja
movsl
jne
mov
pop
push
movsb
andb
mov
adc
pop
shll
mov
into
lea
pop
repnz
dec
xor
stc
push
mov
mov
dec
loop
sub
aad
mov
inc
insl
mov
dec
jecxz
cmc
loopne
aas
call
addb
push
push
imul
frstor
mov
aaa
push
sbb
rcrl
pop
cmp
pop
jo
mov
jns
jmp
fiadds
add
ja
iret
xchg
mov
dec
inc
jns
pop
fsubrs
dec
cmpsl
das
movsb
pop
add
rcrb
mov
fstl
xchg
and
lret
fs
out
icebp
jge
inc
int
aaa
mov
jg
jo
push
insl
fstl
aaa
mov
out
scas
mov
lret
sub
lcall
call
out
jp
adc
sbb
fdivrs
arpl
insl
push
sbb
jl
dec
adc
inc
ljmp
jg
cmpsl
rorl
pop
lods
sub
out
test
mov
lcall
icebp
stos
lds
cmpl
sahf
xor
push
ss
add
push
cld
jns
das
xorl
mov
cmp
rcr
sub
dec
sub
repz
fcmove
push
pop
mov
addb
add
xchg
in
test
xor
pop
push
push
aaa
cmpl
adc
cli
jne
cmp
test
dec
jnp
sub
cmp
dec
sbb
xchg
pop
jno
jge
jp
inc
jle
sti
mov
mov
sbb
sahf
cmpsl
mov
clc
pop
push
cmpb
pop
mov
mov
icebp
dec
int3
push
decb
mov
shlb
pop
fst
cld
jb
sahf
rcrb
push
push
push
sti
inc
adc
inc
repz
mov
sbb
sub
lret
pop
sbb
inc
adc
or
xchg
push
fisubrs
out
clc
and
cmp
call
ds
sub
lock
rcll
xchg
pusha
push
mov
or
push
adc
jecxz
add
sbb
loopne
push
aam
cmp
pop
rolb
push
sub
mov
scas
jp
cmp
in
jecxz
jg
inc
dec
rorl
mov
adc
or
mov
sbb
mov
fisttpl
jae
testl
int3
and
lret
popf
add
mov
sub
mov
imull
xor
xchg
outsb
popf
lahf
jo
cmc
sbb
outsl
outsb
les
sbb
push
cmpsb
repz
fldcw
cmp
or
scas
xor
les
roll
or
mov
test
flds
inc
xchg
jg
add
push
les
mov
mov
mov
hlt
jle
push
sbb
mov
test
popl
adc
xchg
outsb
cmpsl
stos
push
inc
shl
jnp
fs
cmp
enter
jne
or
or
rclb
and
stos
inc
sub
inc
js
fcoms
jmp
lods
sarl
mov
movnti
mov
xchg
loopnew
adc
lret
gs
in
fs
inc
lret
or
xchg
dec
hlt
mov
inc
jmp
add
lcall
fisttps
xabort
adc
xor
loope
mov
lock
sbb
mov
les
decb
test
fisubl
jecxz
mov
xor
cmp
loopne
mov
mov
fcoms
mov
imul
test
adcl
cmc
imul
clc
das
stc
adc
in
stos
push
lods
cmpsb
pop
enter
mov
out
lds
sbbl
shll
mov
cld
mov
pop
rcll
loope
push
in
pop
xchg
aam
add
adcl
hlt
out
add
lea
push
and
cs
add
inc
cmp
xor
jno
ja
adc
ljmp
sub
mov
cmp
adc
movsl
add
pushf
pop
or
orb
mov
fimull
mov
notl
mov
arpl
push
jbe
inc
arpl
out
mov
lret
popa
sahf
push
mov
movsb
push
imul
in
out
cmpsb
sbb
jbe
or
and
push
ret
out
sub
sahf
xchg
repz
cmpsb
adc
sub
dec
mov
push
jl
or
repz
jle
fwait
cld
loop
lds
sbb
scas
ds
pop
mov
add
je
inc
mov
out
pop
dec
inc
jecxz
cmp
movsl
mov
and
inc
nop
jne
fs
fbstp
imul
jg
in
inc
add
in
mov
std
push
daa
sub
test
and
or
adc
adc
sbb
push
mov
rorl
adc
arpl
fs
loopne
out
mov
sbbb
sarb
mov
loope
sbbl
int
jmp
sub
mov
adc
mov
or
xor
out
test
add
jge
rcrl
aad
lret
inc
xlat
jge
jmp
test
dec
cmp
ljmp
movsl
mov
lahf
inc
lahf
jmp
and
aam
xchg
inc
push
divb
gs
jecxz
mov
push
xchg
ds
je
das
jmp
stc
jecxz
cmp
cwtl
sbb
inc
fdivrl
ds
or
adc
sbb
fs
aad
jg
insl
or
imul
push
cmp
lock
mov
sarb
lock
mov
rcrb
fstps
pop
scas
mov
icebp
xchg
fisubrl
adc
test
jle
jnp
jp
sbbb
imul
fwait
daa
mov
inc
jmp
lret
aaa
ror
fistpll
das
inc
rorl
or
jo
dec
cmp
repz
ret
mov
fcomps
xor
cs
cmp
and
dec
idiv
data16
lods
xlat
pop
jo
add
push
xchg
sbb
xor
and
andl
push
sub
inc
push
add
and
jle
mov
inc
push
std
mov
and
pop
ljmp
jl
mov
inc
lret
mov
ficompl
sbb
lods
pop
pushf
cld
test
push
setl
aas
push
mov
push
test
pop
push
hlt
push
dec
adc
push
sub
inc
aas
xchg
mov
and
incb
pushf
cmp
rorb
xchg
jecxz
and
adc
mov
push
xchg
jg
inc
popf
imul
add
xchg
mov
xor
mov
dec
cmp
pop
movsl
or
stc
aam
call
jmp
add
orl
fstpt
rorb
jge
lahf
push
jp
loope
dec
lcall
xchg
push
in
stc
mov
sbb
cmc
adc
push
push
sbb
push
mov
outsl
movsb
pop
imul
or
sbb
out
and
sar
mov
cmc
arpl
sbb
xor
movsb
sub
pop
xchg
push
lahf
xor
xor
cmp
jecxz
lds
cmp
mov
lcall
mov
or
bound
mov
fstl
popa
lods
pop
cwtl
loopne
in
mov
hlt
dec
mov
out
loop
icebp
lcall
stos
aad
in
pop
push
and
out
or
stc
lcall
cmpsl
in
push
ljmp
mov
add
cmp
js
pusha
es
sbb
hlt
stos
fisttps
es
push
and
mov
cli
daa
int3
stos
data16
adc
pop
hlt
adc
mov
xchg
pop
xor
int
test
sbb
sarl
sbb
adc
hlt
cmpsb
aas
xchg
mov
fwait
mov
xlat
aad
ret
mov
sahf
add
addb
int
lcall
jb
cwtl
xchg
jns
test
cwtl
or
mov
popa
les
out
sub
jne
dec
jno
scas
mov
and
inc
ljmp
mov
call
push
out
xchg
push
ljmp
outsl
inc
pop
push
push
dec
inc
test
jo
fsubl
jbe
out
loope
in
mov
in
lods
ljmp
sti
adc
pop
jle
sbb
push
jle
fcompl
dec
repnz
sub
add
dec
cs
sbb
xchg
mov
ret
or
rorb
ret
jl
fwait
or
pop
fstl
in
lcall
xchg
cmpl
mov
mov
js
mov
arpl
pop
add
inc
bound
push
shlb
mov
mov
ds
mov
jnp
cltd
sbb
es
gs
es
enter
aam
mov
lret
dec
push
add
push
das
and
xor
test
bnd
mov
scas
movsb
in
mov
xchg
sbb
mov
mov
mov
xor
cmpl
dec
imul
pusha
add
imul
pop
dec
fs
mov
loopne
or
lods
jg
fistps
divl
jo
mov
sarl
pop
ljmp
add
dec
add
outsb
iret
lahf
ret
ja
fnstsw
in
rcr
mov
sti
lahf
cmpsl
add
insb
ljmp
rorb
sub
inc
enter
add
xchg
std
out
imul
xchg
dec
loopne
rclb
adc
cwtl
out
fildll
inc
pusha
mov
mov
stos
mov
pop
in
push
aaa
mov
sti
sub
aad
add
in
ja
jl
mov
in
int3
sbb
jle
ret
cltd
xor
pop
or
and
push
xor
push
pusha
cmp
mov
mov
repz
cmp
sbb
mov
push
ljmp
lods
rcr
sti
sbb
mov
xchg
dec
movsl
lahf
aaa
dec
ljmp
xchg
inc
xor
adc
mov
int
add
aam
adc
xchg
mov
add
int
shr
ror
adc
or
push
push
jmp
aas
fbld
jbe
mov
out
sub
cs
stos
jno
lret
sbb
jne
rcrb
lcall
icebp
fcomi
mov
or
sbbl
fnstenv
data16
jne
and
lods
cwtl
xchg
jl
cmp
movsl
cltd
enter
xor
pop
adc
or
popf
jg
fmuls
and
test
popa
or
bound
pop
dec
jbe
ljmp
xchg
fsub
fs
or
cmp
sub
xchg
jle
jbe
sub
cld
movsb
add
add
sbb
flds
loop
jmp
cmpsl
push
daa
and
cmp
outsb
stc
aam
mov
adc
mov
sahf
shll
push
gs
sub
icebp
in
sub
jae
outsl
xlat
cmp
test
ret
mov
lret
xchg
hlt
adc
popf
mov
mov
shll
in
and
sub
std
outsl
push
sbb
sahf
iret
sbb
sub
adc
into
inc
and
adc
mov
jns
adc
or
pop
int
jmp
inc
jecxz
fwait
inc
xchg
pop
fwait
jmp
cmp
icebp
inc
mov
aam
add
nop
or
push
mov
lea
aam
mov
test
stos
xor
clc
xchg
and
cli
sub
inc
rcrb
mov
xchg
jg
or
or
pop
sub
je
push
ljmp
or
xchg
shrl
inc
dec
cli
mov
popa
jae
sbb
shll
or
cmpsb
popf
mov
cli
pop
mov
neg
or
ja
push
stos
les
in
mov
dec
xchg
pop
cmpsb
mov
push
out
ja
sarl
push
stos
addl
ds
ljmp
lret
adc
add
shll
rolb
sarb
je
adc
mov
cmp
fs
pop
mov
sbb
je
add
nop
faddl
mov
pushf
lds
and
sub
cmp
or
sbb
in
mov
movsl
int3
xchg
faddl
mov
pushf
lds
and
sub
cmp
or
sbb
in
mov
stos
int3
faddl
mov
pushf
lds
and
or
jno
gs
sbb
inc
int
fadd
lods
cmc
mov
add
out
pop
jb
or
jecxz
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
cmp
adc
add
push
or
and
mov
test
test
in
fcmovnb
sub
and
adc
add
je
fs
push
pop
inc
stos
mov
movsb
mov
xor
aam
les
sub
sbb
dec
dec
pop
pop
stos
push
cwtl
sahf
out
fwait
test
mov
mov
xor
dec
or
mov
lret
lret
das
add
mov
lahf
arpl
gs
pushf
in
xchg
jnp
mov
cmpsb
int3
push
xor
dec
je
test
cli
mov
aam
mov
xor
loopne
push
shlb
test
xor
mov
pop
add
sub
les
cmp
adc
xor
push
outsb
movsb
into
or
mov
jne
icebp
jnp
cmpsl
mov
scas
aam
fcmovnb
jmp
in
xor
enter
inc
cmp
movsb
push
shl
test
aam
cmp
cmp
enter
test
outsb
pop
leave
cld
mov
mov
xorl
aam
xor
xor
add
push
imul
dec
pop
pop
stos
lods
mov
popf
jmp
sti
repz
aam
mov
bound
or
das
cmp
stos
fstp
fmull
cltd
sti
mov
aam
test
outsb
fs
imul
push
xor
or
into
int
lds
xchg
mov
fs
jno
sbb
dec
push
pop
inc
stos
mov
movsb
mov
in
aam
les
xor
and
adc
add
je
fs
push
pop
inc
stos
mov
movsb
mov
in
aam
les
xor
mov
xchg
dec
jns
mov
and
mov
mov
sbb
ror
adc
adc
jecxz
ss
add
movsb
mov
call
test
pop
and
fcoms
rorb
in
or
xchg
jle
push
in
mov
repz
jl
addl
xchg
xchg
int3
inc
sbb
inc
in
hlt
lret
enter
dec
and
or
push
xor
pmaxsw
insb
mov
icebp
sbb
test
sar
repz
jg
adc
sysenter
mov
xor
add
and
repz
stos
xchg
or
jns
sbb
push
dec
jns
mov
arpl
mov
cmc
sub
fbld
aam
mov
dec
imul
jb
dec
in
add
mov
inc
inc
sub
fldt
into
mov
push
or
inc
push
sub
andb
pop
faddl
mov
mov
mov
xchg
jne
sbb
sub
addb
adc
pop
fisubs
adc
cmp
and
mov
sub
cs
mov
pop
clc
inc
xor
sub
inc
sahf
push
mov
mov
add
shll
test
lds
js
mov
dec
jo
cmp
adc
or
call
es
mov
fs
push
dec
movsb
cli
xchg
add
adcl
add
insb
mov
int3
mov
sbb
int
inc
mov
test
and
jg
mov
aad
push
pop
sub
pop
sbb
sbb
fstp
inc
sub
adc
sub
and
cmpsl
xor
lods
popf
repz
cmp
std
mov
mov
adc
dec
fidivs
adcb
cmp
dec
ja
cltd
xchg
mov
js
insb
icebp
pop
int
mov
addr16
in
lea
mov
nop
inc
fldcw
js
stc
out
sbb
xor
stos
imul
xor
lock
xchg
shl
add
cmp
mov
sbb
sbb
int
xlat
loopew
mov
sub
shrl
in
mov
dec
mov
sub
pop
ficomps
js
pop
dec
loop
hlt
hlt
xor
leave
repz
cmp
loope
jecxz
push
mov
lcall
je
push
pusha
sub
mov
push
cmp
mov
push
es
add
mov
sub
push
fsubl
mov
add
xchg
dec
adc
mov
pushf
jb
pop
and
mov
call
test
push
arpl
sti
stos
inc
push
cmpsb
ftst
jge
nop
movl
frstor
test
inc
cli
cli
dec
xchg
outsb
adc
addr16
dec
xor
imul
pop
adc
sub
push
push
cltd
and
mov
out
pop
pushf
insl
xchg
imul
ret
pop
rolb
hlt
test
out
pushf
stc
mov
fucomp
lods
aam
and
mov
xor
outsl
mov
loop
cmp
or
pushf
mov
and
sbb
loope
int3
cmpl
push
cmp
jae
cmpl
push
adc
aas
les
jno
adc
push
mov
lcall
fs
test
inc
xlat
pop
sub
add
adc
pop
sub
lret
out
jge
pop
out
sub
mov
sbb
bound
dec
into
push
xchg
addl
pop
xor
add
mov
cltd
je
fnstcw
psrlq
subl
sub
aaa
ficoms
adc
jno
lds
mov
push
arpl
loopne
pushf
sar
jmp
stos
mov
add
push
cmp
push
mov
cmp
jae
popf
inc
aaa
jb
rcr
call
adc
mov
imul
add
xor
shll
or
xchg
fneni(8087
fwait
jbe
mov
out
cmp
adc
pusha
ss
or
inc
add
dec
jb
sbbl
push
and
cmpsb
push
jbe
pop
push
mov
imul
popa
mov
je
lret
jp
sbb
push
mov
or
lods
fstpl
int
and
imul
aam
orb
mov
xchg
fcompl
xlat
mov
ss
repnz
xchg
test
into
xchg
dec
arpl
mov
arpl
jne
mov
movsb
xor
jmp
in
mov
outsl
ss
mov
cltd
imul
sub
sbb
cli
sbb
fs
movsb
insl
orb
fstpl
mov
stos
xchg
mov
sbb
xchg
mov
fs
orb
sub
pop
mov
nop
icebp
sarb
je
jge
or
add
outsb
outsb
dec
icebp
mov
push
scas
in
push
jnp
jmp
nop
sbb
insl
mov
jp
lahf
arpl
mov
cs
sbb
les
cmp
nop
stc
iret
xchg
lcall
lds
divl
add
scas
roll
flds
lods
fsubrs
mov
adc
push
push
outsb
mov
aaa
into
pop
or
xor
divb
add
insl
add
pop
inc
fwait
jb
mov
mov
inc
out
mov
xchg
mov
pop
dec
shrb
dec
addl
bound
jbe
sbbl
push
push
sub
ljmp
or
xlat
bound
adcl
inc
cmpl
movsb
int3
sub
add
mov
or
cmp
pop
fwait
lcall
aas
cmc
sbb
leave
cmp
mov
ljmp
and
out
mov
push
inc
imul
adc
std
and
lret
stc
mov
cmp
ret
fiadds
fnsave
sub
sbb
mov
jl
je
dec
pop
adc
aad
iret
lods
std
test
mov
rcrb
pop
fstpt
or
sbb
les
call
lods
pop
jno
push
ja
out
adc
push
mov
xor
daa
push
xchg
movsl
xorb
mov
sbb
repnz
cmpsl
adc
or
push
adc
pop
mov
loop
aaa
cmp
dec
add
in
jbe
mov
dec
insb
fisttpll
int3
sbb
xor
mov
test
mov
xchg
lods
mov
nop
loop
jbe
push
and
mov
orb
test
arpl
jl
outsl
lret
dec
add
cltd
mov
or
push
sub
sbb
in
test
xor
mov
mov
pxor
clc
and
adc
mov
and
push
cmpsl
xor
cmp
hlt
sub
mov
adc
pop
aas
iret
sbb
sbb
mov
pushf
inc
mov
cld
xor
bnd
gs
push
xor
cwtl
stos
cmpsl
dec
cmp
xor
mov
shll
enter
sbb
mul
jle
sbb
jp
sub
or
sbb
xchg
dec
xchg
add
mov
adc
pop
insl
fldl
inc
sbbl
imul
fsubs
in
dec
out
das
dec
inc
and
cmp
out
xcrypt-cfb
cmpsl
mov
xchg
xchg
dec
mov
cmpsl
pusha
jmp
fcoms
xor
lds
jae
mov
sub
pop
scas
sub
out
mov
xchg
mov
not
stos
cwtl
mov
insl
push
test
nop
outsb
popa
in
mov
jl
xchg
cmp
push
fildl
repnz
fldt
dec
pop
jno
sbb
lock
lods
dec
lds
adc
insb
fsubl
add
push
out
sub
or
adc
cmpsb
inc
xor
pop
push
sbb
insb
arpl
xchg
cmpsb
js
cwtl
xchg
jnp
roll
shlb
mov
sbb
leave
sub
cmpsl
movl
loopne
test
iret
and
ret
scas
xorl
jae
or
pushf
lret
adc
mov
pop
push
push
dec
sbb
ds
cli
push
fisubrl
and
imul
pop
testb
sbb
out
fisttpll
cmpsb
and
into
cli
push
imul
pop
out
lcall
cmpsl
int3
imul
adc
outsl
mov
ds
rcll
pop
outsb
aam
test
ret
mov
adc
sub
mov
shll
pushf
popf
jb
push
ucomiss
pop
push
outsb
insb
ja
mov
cwtl
xchg
push
rcrb
push
ret
mov
xchg
iret
outsb
cmpps
sub
fmul
sbb
push
loopne
push
into
xor
cmpsl
jg
adc
decb
mov
xchg
mov
sub
pop
push
outsl
outsl
push
cmp
addl
adc
inc
push
mov
cmpsb
call
test
rcrb
sub
ret
xchg
movsl
iret
fcmovbe
fidivs
shrb
mov
inc
mov
cltd
adc
das
pop
int
mov
xor
ljmp
jecxz
testb
in
push
mov
call
jp
add
sub
inc
mov
pusha
cs
push
lcall
ret
mov
dec
xchg
sub
cmpsb
adc
cmpsb
xor
cli
mov
mov
add
fistpl
xchg
ror
sbb
adc
inc
push
mov
mov
inc
pop
jp
lcall
call
xchg
xchg
inc
mov
insl
lret
pop
and
add
ja
fdivr
mov
jge
push
inc
cmp
idivb
cltd
call
sbb
test
iret
shlb
add
pop
cld
loope
pop
pop
in
or
es
cs
icebp
add
insl
push
div
fstl
imul
arpl
std
mov
add
movsb
add
pop
mov
je
lods
aam
fdivs
or
out
or
fistpll
nop
and
test
sub
push
dec
push
cmp
mov
inc
cmp
dec
shrb
dec
mov
jp
les
repnz
push
mov
aaa
push
xchg
sbb
add
bound
shlb
mov
loopne
stos
cmc
xor
cltd
dec
add
call
out
cmpsl
cmpsl
js
cmp
loope
push
es
lock
test
mov
xchg
test
mov
mov
add
cmp
imulb
lret
xchg
fnstcw
mov
mov
cmpsl
inc
into
mov
es
sbb
fsubrp
ret
dec
or
jnp
insl
sbb
daa
fwait
ljmp
rcrb
mov
icebp
std
xor
adc
and
push
mov
test
sbb
shrl
loop
xor
test
mov
fistpl
push
xor
scas
jne
jp
cli
test
out
push
sub
jne
ja
adc
insl
push
sbb
xor
aam
fldl
mov
jnp
imull
xchg
mov
jb
dec
int3
std
inc
cmpsb
stos
jno
loop
jb
popf
leave
dec
add
clc
mov
adc
or
sub
sbb
fwait
xchg
mov
mov
gs
push
pop
push
imul
fstpl
fildl
pop
shl
mulb
loopne
std
leave
pop
and
mov
xorl
cmp
int3
push
movsb
adc
lock
jle
or
cli
cmp
and
sub
inc
push
jae
sbb
cmpsl
cltd
xchg
or
jp
and
adc
inc
xchg
jmp
pop
mov
lret
stos
xor
jp
icebp
fnstenv
dec
in
lcall
retw
repnz
movnti
xor
cmpsb
add
sbb
std
mov
push
mov
lea
pop
and
sarl
sbbb
hlt
mov
pop
and
lds
push
sub
dec
jae
pop
lea
inc
xchg
shlb
push
dec
push
aam
cwtl
jg
and
fidivl
enter
rcrl
jb
fcomps
sbb
enter
pop
inc
jo
jecxz
jno
xor
xchg
pushf
cwtl
push
or
inc
stos
mov
jnp
sub
pop
pop
or
insb
add
dec
mov
mov
shrl
enter
and
cmc
dec
and
push
sub
out
icebp
movb
mov
fistps
fs
int
fdivrp
sbb
icebp
mov
xchg
dec
popf
insb
call
mov
andb
aam
shlb
jns
fwait
int3
jg
movsl
jg
or
jecxz
out
sahf
jp
cmpsb
ja
mul
or
aaa
icebp
adc
es
xor
dec
xchg
adc
fs
inc
sbb
dec
pop
sub
out
in
pop
popa
adc
out
sarb
mov
pminub
out
lcall
push
sbb
xor
pop
pop
xchg
jae
sahf
pop
mov
sbb
in
add
pop
adc
and
and
mov
mov
popf
adc
sbb
mov
or
add
orl
cltd
xchg
lods
jl
lods
jns
sbb
cmp
stos
jae
fisubrl
or
fnsave
fdivrs
inc
dec
xchg
jecxz
add
xor
imul
popf
xor
or
adc
lcall
adc
or
jno
xchg
mov
icebp
add
iret
test
lea
neg
adc
push
cld
mov
push
push
in
mov
lcall
adc
nop
icebp
ss
jae
mov
jb
movsb
sbb
xor
add
sub
ja
xor
cmp
jge
adc
sbb
push
sbb
jnp
add
or
pop
leave
in
mov
push
push
sbb
push
aaa
sub
push
dec
idivb
jb
sbb
mov
jg
mov
or
pop
cmp
inc
push
outsb
mov
cmc
mov
xor
push
push
das
loope
mov
bts
out
pop
mov
mov
hlt
aam
mov
mov
sbb
cmpsl
aam
rep
pop
push
les
jo
rcll
pop
push
ljmp
pop
mov
in
or
jbe
cld
sarl
mulb
pop
lret
inc
test
movsb
int3
mov
das
movsb
aad
xchg
loop
lahf
cld
mov
lds
mov
push
push
push
mov
rcrl
dec
jl
ror
inc
stc
xor
das
mov
mov
shrb
mov
mov
mov
addr16
lea
gs
add
shll
out
mov
in
xchg
in
imul
pop
cmp
mov
mov
or
adc
inc
dec
cli
inc
fstpt
dec
xlat
incl
inc
fldl
mov
icebp
inc
push
sub
pop
mov
inc
push
pushf
imul
js
pop
into
inc
xchg
sahf
movsb
pop
mov
jge
mov
imul
bound
je
into
mov
pop
push
bound
rorb
lret
aam
pushl
call
pop
mov
push
repz
push
in
mov
inc
insl
xchg
cmpsb
dec
jmp
in
xchg
xor
lcall
pop
cmp
lock
mov
call
jb
sub
int3
cmp
fimuls
pop
scas
pop
js
jae
dec
outsb
andb
ja
add
jmp
out
popf
lret
push
stc
sub
lock
call
pusha
sbb
jl
rolb
xchg
insl
mov
inc
fiadds
and
pop
stos
add
jns
clc
lea
or
dec
mov
sub
dec
xchg
addr16
aam
fucom
les
inc
repz
push
iret
movsl
cmp
mov
shlb
das
mov
ljmp
icebp
mov
dec
mov
sbb
js
rol
clc
neg
pop
push
ljmp
sbb
jmp
test
push
pop
adc
lcall
shlb
pop
fildll
sbb
mov
stc
outsb
jae
adc
sbb
pushf
xor
cmpsb
int3
xor
sub
pop
dec
xchg
lea
jmp
enter
mov
int
pop
sub
xor
bound
outsb
outsl
je
push
sbb
les
sub
jle
in
clc
adc
jp
bound
jecxz
out
ret
imul
dec
sti
imul
imul
popf
dec
sbb
xor
fidivrl
pop
pushf
adc
call
lds
leave
xchg
andl
inc
push
movsl
movsl
xchg
sbb
xor
sub
stos
std
inc
adc
les
jnp
faddl
mov
loop
pop
jp
stos
xchg
sti
xor
fldt
or
call
sbb
arpl
mov
cwtl
push
arpl
cmpsl
inc
inc
mov
ja
jno
mov
mov
pmuludq
fcom
jo
mov
fcmove
out
les
mov
fcoml
in
xor
fstps
repnz
movsw
xchg
ret
pop
por
aad
cltd
fcmovb
or
push
popa
mov
out
lcall
push
push
test
roll
pop
in
addr16
fsts
add
fsubp
sbb
flds
jnp
fidivs
cld
mov
sub
inc
cwtl
xchg
inc
repnz
jmp
lea
pop
js
mov
jl
lock
seta
add
shll
mov
adc
fmull
jno
idivl
xchg
sahf
cli
mov
sarb
sub
aas
sub
pop
xchg
sbb
jl
lods
add
cwtl
xchg
push
push
xchg
mov
stos
pop
call
lock
test
jp
arpl
gs
and
pop
pop
testl
stos
movsl
adc
add
jmp
jg
popf
xchg
pop
or
mov
sahf
or
push
fildll
sti
xor
mov
adc
aad
xlat
cwtl
test
clc
int3
and
push
pop
rol
sub
mov
subb
cmp
jo
sbb
mov
mov
sahf
cmpsl
aam
cmp
or
dec
mov
sbb
aam
sub
jmp
cmp
pop
in
fsubrs
jb
cmpsb
cmp
lea
pop
jmp
mov
in
and
ja
call
inc
mov
ss
scas
cmp
fidivrl
int
cmp
mov
mov
pop
mov
mov
xchg
ljmp
mov
rcr
dec
push
mov
addb
xor
xchg
adc
fildl
cmp
push
and
pop
aaa
into
fst
pop
loope
es
adc
adc
push
or
bound
test
fmulp
mov
dec
cmpsl
sbb
fs
push
add
jbe
and
xor
lret
push
repnz
pop
dec
cld
cmpsb
jge
sti
imul
xorl
lds
cmp
cwtl
mov
add
ficoml
arpl
pop
js
scas
mov
xchg
cltd
into
js
repz
and
push
push
push
xchg
lret
nop
jmp
in
mov
js
in
or
addr16
pop
fcmovb
or
mov
inc
fstl
outsb
imul
outsl
scas
push
adc
jecxz
outsl
jl
loop
subl
fiadds
into
xor
mov
scas
push
arpl
cld
inc
fdivs
xor
sbb
idivb
push
shrb
int
adc
lods
imul
sub
test
pop
xor
jo
mov
loope
mov
xchg
dec
pop
sbbl
cmp
lock
js
inc
aad
insb
je
mov
test
xor
and
roll
ss
cwtl
fidivrl
adc
daa
add
push
push
sbb
int3
mov
arpl
lock
push
and
jo
jg
mov
js
std
ljmp
enter
mov
jnp
add
inc
xchg
and
and
cmp
cli
cld
rol
or
push
push
out
out
test
cmp
std
jbe
into
loope
cltd
lret
lahf
fsub
das
lock
outsb
mov
and
xchg
cmp
sbb
pop
jmp
popf
add
jge
cs
lds
inc
jbe
daa
jne
and
icebp
int
inc
test
jae
lods
call
icebp
mov
insl
pusha
adc
in
outsb
and
or
xor
push
adc
orb
into
in
mov
icebp
inc
adc
pop
mov
arpl
out
pop
xor
jo
xor
int
mov
mov
xor
sub
les
jmp
imulb
filds
pop
cli
movsb
and
ja
popf
xchg
cld
fwait
inc
fildll
push
jp
sbb
out
and
sti
sbb
je
fs
push
pop
inc
stos
mov
movsb
mov
in
aam
les
xor
and
adc
add
je
fs
push
pop
inc
stos
mov
movsb
mov
in
aam
les
xor
and
adc
add
je
fs
push
fildl
mov
test
hlt
sti
in
aad
les
xor
and
adc
add
je
fs
push
pop
inc
stos
mov
push
and
sbb
js
push
incb
mov
jmp
popa
mov
push
mov
pop
xchg
dec
loope
icebp
cmp
sbb
jl
hlt
xor
gs
enter
stos
inc
cwtl
push
mov
inc
mov
and
xor
add
adc
clc
cmp
insl
mov
cmp
xor
cmp
shll
sbb
cmp
or
out
and
movsl
enter
adc
addr16
icebp
mov
push
sbbl
xor
sbb
call
mov
fstp
imulb
in
add
imul
mov
add
sub
push
and
into
call
sahf
sbb
xchg
int
mov
sbb
cmp
cmp
insb
rorl
add
dec
inc
in
and
inc
std
dec
xchg
fsubs
xor
adc
pusha
sub
pop
adc
adc
mov
test
sbb
mov
jp
and
cli
pop
ficoms
adc
mov
lcall
addl
sub
sbb
adc
clc
sub
sbb
or
jns
imul
in
cmc
sub
ret
je
insl
push
xchg
xor
jae
jg
or
divl
mov
sub
lods
insb
xchg
cmp
mov
lea
lret
add
enter
in
xchg
or
rcrl
or
clc
xor
add
adc
popa
mov
push
mov
pop
xchg
dec
loope
icebp
sub
sbb
or
clc
xor
add
adc
popa
mov
push
mov
dec
into
mov
mov
mov
punpcklwd
inc
es
fisttpll
imul
and
mov
imul
scas
mov
test
dec
cmpsb
jns
jo
mov
cmp
movsl
lods
xor
pushf
aas
inc
pop
push
xchg
jmp
push
lret
add
xor
push
mov
outsb
cmp
pop
jg
push
scas
and
adc
pop
push
dec
pop
inc
dec
std
out
jmp
or
adc
ds
jno
xor
xor
pop
xor
push
lret
pop
xchg
dec
jg
push
shl
inc
aad
sti
lea
les
es
fdivs
sahf
lcall
dec
sahf
ss
inc
mov
jno
insb
cmp
adc
sub
inc
test
iret
shrb
rcl
fistpl
mov
aas
lcall
mov
cltd
dec
pop
lock
push
inc
insb
cmp
cmp
arpl
dec
mov
xchg
xchg
xchg
stc
arpl
push
arpl
ss
imul
int3
outsb
adc
jl
xor
jb
push
xor
sbb
fadds
adc
lds
pop
inc
inc
les
jne
ja
cs
fwait
loopne
lods
out
stos
ds
cmp
jns
mov
in
imul
push
mov
lock
pop
incl
pop
imul
xchg
out
mov
outsl
in
add
in
mov
sbb
jmp
cld
push
lcall
aaa
outsl
xorl
shlb
int3
shll
mov
and
adc
mov
add
or
pop
pop
sahf
enter
or
dec
ror
jb
icebp
inc
xchg
sub
popa
int
and
push
push
inc
dec
mov
into
inc
xchg
pop
mov
cmp
scas
js
push
sbb
jno
adc
das
xor
or
cltd
and
mov
call
cld
dec
rcl
out
popa
cmp
inc
aad
and
fildl
jp
out
sahf
pop
and
popa
cmpsl
mov
jns
jns
mov
outsb
cmp
xor
cmpsb
les
cld
and
mov
leave
sbbb
cwtl
fwait
jnp
push
mov
and
pop
mov
sbb
inc
push
mov
lret
popa
mov
lock
sbb
and
fisubs
sub
scas
subl
les
mov
jge
outsl
pop
dec
loop
xchg
pushf
cmp
out
or
or
mov
add
pop
out
andb
cmp
repz
pop
jmp
in
or
outsb
xchg
inc
sub
hlt
lea
xchg
cmp
mov
pop
insl
or
xchg
xorl
sbb
mov
jae
cmp
mov
and
test
lods
mov
sub
mov
inc
push
imul
mov
push
test
add
adc
std
data16
add
or
aam
sahf
or
and
fidivrl
xchg
hlt
scas
or
insb
add
test
leave
in
fbstp
nop
xlat
jge
icebp
daa
or
insl
cltd
leave
push
jge
scas
in
shl
xor
pop
fwait
into
js
pop
mov
push
jecxz
cmpsl
pop
push
shll
sti
bound
mov
push
push
inc
dec
fsubl
fdivrs
dec
pop
jp
lds
xchg
loop
adc
xor
xor
jecxz
mov
test
cmpsl
bound
pop
ljmp
jno
loopne
or
lods
adc
mov
pushl
lock
insl
cmp
in
inc
pop
cmp
mulb
xlat
lock
add
mov
jnp
adc
repz
dec
xchg
scas
push
popa
mov
jnp
xor
loope
lahf
mov
adc
jnp
push
jb
enter
cmc
cs
mov
repz
xor
arpl
cs
stc
xchg
fstl
sub
je
jo
lret
out
ret
loop
mov
push
cmc
lods
int3
fchs
popf
mov
mov
or
mov
dec
outsl
mov
cmp
push
call
fdiv
es
cmp
clc
adc
sbb
adc
xchg
cmpl
out
cmp
sbb
mov
aad
lds
xor
and
jns
lret
in
dec
cmpsb
cwtl
hlt
mov
arpl
fnstsw
pop
pop
mov
fildll
out
shrl
or
cltd
sbb
mov
mov
mov
outsl
mov
mov
mov
xchg
jne
cmp
pop
cmp
inc
scas
and
jo
xchg
frstor
out
xchg
pop
inc
and
cmp
fcomip
adc
push
xchg
cli
test
jno
inc
xor
cmp
push
lds
mov
mov
cmc
cmp
sub
jne
dec
bound
sub
stos
sbb
fimull
cs
push
out
sti
mov
mov
inc
pop
jb
or
sbb
movsb
xchg
test
int
cmc
popa
mov
pop
push
inc
adcb
xchg
leave
sub
popa
call
or
cltd
out
mov
jg
fnstcw
addr16
rorl
cmpsl
test
add
xchg
cld
cld
loopne
jg
mov
mov
and
mov
mov
sbb
cmp
jns
out
pop
js
or
sbbl
mov
and
inc
out
lods
mov
xchg
jns
push
or
and
sub
or
in
xchg
repz
lods
push
push
xor
stos
mov
adc
ljmp
cli
and
dec
xor
jmp
stos
jmp
xor
pop
push
pop
xchg
daa
jne
inc
repz
out
js
pop
xchg
stos
movsl
clc
shr
pop
xchg
ret
sbbb
jo
inc
and
add
addr16
in
mov
test
mov
mov
andl
and
ds
scas
es
mov
ficompl
mov
adc
push
sti
or
scas
scas
packuswb
fnsave
and
cmp
sub
and
dec
insb
and
xchg
loope
push
push
jne
and
push
jecxz
inc
mov
mov
ret
jg
push
mov
push
stc
inc
in
aam
cmp
jns
int3
push
and
mov
pop
out
leave
xchg
loopne
das
loopne
movsl
jmp
pop
mov
clc
mov
inc
sahf
mov
mov
stc
cmp
dec
jae
sub
ljmp
xchg
push
jb
scas
scas
sbb
movsl
mov
xchg
sbb
pop
mov
add
cltd
sbb
push
mov
rclb
leave
push
in
xchg
lds
rorl
sub
dec
xchg
bnd
ficoms
testb
inc
or
xchg
imul
xchg
pop
xlat
jne
mov
sub
pop
les
ljmp
cmpsl
rclb
stc
sti
nop
sub
sbb
repnz
test
fistl
insl
fdivrs
and
in
shlb
inc
xchg
dec
cmp
xchg
les
xor
fdivl
fcoms
sbb
sbb
je
mov
test
dec
add
lret
adcb
sarl
repz
or
mov
test
pop
cmc
mov
arpl
cs
xor
pop
jmp
les
out
ss
aad
jge
fwait
pop
pop
or
mov
adc
pop
call
sarb
lock
jge
dec
or
xor
in
fsubl
xchg
fwait
pop
xchg
pop
icebp
cld
adc
mov
ret
test
arpl
out
mov
es
popf
xchg
outsb
dec
sbb
jnp
pop
icebp
int3
imul
scas
sbb
insl
inc
lock
add
jae
stc
into
repz
pop
mov
dec
mov
aaa
cmpsl
cmp
lea
pop
pop
xchg
out
imul
sub
in
adc
lret
out
add
aaa
mov
cwtl
xchg
gs
jmp
or
cwtl
in
pop
fldcw
mov
push
sub
push
mov
scas
std
pop
push
cmp
fdivrl
inc
sbb
inc
nop
cmp
outsl
lods
out
fimuls
orl
rcrb
popf
mull
enter
xchg
xchg
daa
xor
xchg
icebp
add
and
inc
dec
adc
test
rcrl
sbb
movsb
inc
lret
imul
xor
sti
out
pop
pop
stos
test
and
mov
je
fbstp
rcl
inc
dec
std
add
push
pop
in
and
mov
sbb
lods
repnz
movsb
inc
jge
js
int
loope
pop
jne
or
lahf
push
push
xchg
cmp
int
add
cmp
mov
push
dec
sbb
pop
repz
fsts
outsb
lahf
sbb
mov
cmpsb
add
test
fwait
push
sbb
rorl
add
fildl
mov
outsb
xor
dec
sub
pop
inc
sub
cmp
mov
lods
push
andl
int
add
nop
in
lods
sbb
loopw
inc
inc
xor
leave
mov
mov
mov
mov
filds
int3
xchg
push
pop
jecxz
flds
or
jecxz
push
mov
das
sahf
fldl
or
and
fs
or
sarb
sbb
push
repnz
mov
imul
mov
cmpsb
stos
fisttps
xchg
insl
add
mov
push
ja
mov
das
test
ds
jnp
incl
imul
in
into
push
in
inc
push
pop
std
cltd
sbb
sarb
jne
pop
xor
jge
or
sub
xor
lea
fcomps
push
pushf
xchg
mov
icebp
and
sub
mov
sbbb
mov
xlat
xlat
lods
push
cmp
mov
mov
mov
in
mov
pop
scas
repz
cs
adc
xorb
cmpsl
sub
in
pushf
mov
test
stos
aam
mov
sub
je
mov
out
sub
fldcw
call
sbb
xchg
lods
cli
sub
enter
mov
jmp
cmc
push
sbb
int3
fnsetpm(287
lret
xchg
lock
inc
push
idivl
push
shll
dec
or
or
vmptrld
nop
push
dec
mov
push
cvtps2pi
sub
loop
cmp
ljmp
scas
mov
out
push
and
fldenv
imul
cwtl
cmp
popa
cli
movsb
stos
hlt
fs
std
adc
and
sbb
rcl
jae
dec
pop
out
xchg
xchg
or
in
loop
int3
jecxz
in
inc
cli
xchg
aaa
inc
hlt
in
xchg
insb
je
sbbb
mov
push
pop
test
loope
pop
lret
shlb
adc
adc
mov
mov
cwtl
ret
pop
pop
outsl
cmpsb
lahf
sbb
call
movsb
jb
sbb
test
stc
mov
and
cmp
into
gs
add
loopne
mov
pop
fs
sub
or
push
dec
push
nop
or
leave
ss
mov
negb
mov
jp
in
push
adc
push
lods
stos
push
fs
push
jg
mov
push
push
push
xor
inc
hlt
xor
jecxz
add
rorb
ljmp
mov
fmul
lods
mov
pop
pop
aaa
sbb
lcall
sub
stos
push
fistl
ljmp
lock
test
in
das
xchg
fiaddl
inc
xchg
iret
add
in
loope
sbb
idivb
push
adc
int
adc
inc
sub
mov
mov
sub
aad
mov
or
mov
dec
mov
or
xor
out
sub
mov
shr
jecxz
inc
jmp
push
sub
pop
cmc
pop
cmp
es
push
xchg
xchg
std
test
arpl
push
sbb
jae
sbb
gs
xchg
icebp
jl
int
rep
adc
and
xlat
in
push
dec
dec
add
sbb
mov
xor
push
xchg
inc
or
inc
adc
xor
inc
ret
jo
sub
and
adc
adc
je
je
or
ljmp
xchg
mov
or
insl
in
or
jg
xor
lock
sahf
hlt
inc
fs
scas
cs
loopne
mov
out
add
pushf
lahf
sub
lods
mov
aas
push
iret
icebp
cmpsb
into
jno
fidivl
jnp
pop
push
shll
mov
push
test
aam
push
enter
int3
mov
or
jo
lds
xor
pusha
loopne
push
jnp
adc
sub
and
aad
fs
repz
ret
nop
rcrb
clc
dec
ucomiss
aaa
mov
js
in
out
lea
lds
rorb
push
mov
out
push
mov
inc
mov
sub
decl
pop
xor
dec
inc
addr16
xchg
dec
fdivl
xlat
sbb
hlt
dec
das
mov
xor
xor
stc
dec
icebp
ljmp
orl
mov
jge
xor
adc
xchg
mov
fwait
gs
stos
pop
outsb
mov
jle
pop
add
repz
mov
mov
mov
dec
addl
in
fisubl
mov
into
notl
dec
es
es
inc
adc
xchg
xchg
push
aas
pusha
and
in
int
push
jae
pop
shl
ja
jge
movsl
not
pop
add
inc
mov
shlb
adc
mov
mov
int
add
out
and
mov
or
iret
mov
icebp
fstpt
or
movsl
pop
dec
push
loope
lods
outsb
push
jl
test
dec
jo
rcl
add
fistpll
enter
jmp
sbb
mov
fistpl
lahf
lock
adc
cmp
sub
clc
mov
cmp
imul
out
fldenv
jecxz
adc
aas
dec
mov
stos
popf
into
xor
aam
pop
xor
iret
push
scas
and
es
xor
fnsave
inc
jnp
sub
mov
add
sbb
push
sbb
loopw
addl
dec
rcl
mov
sbb
inc
add
xor
push
or
fcmovnu
push
cwtl
cmp
aad
pop
mov
cmpsl
sti
sahf
jnp
int
cmp
xchg
inc
in
cmp
jno
ss
mov
mov
js
sbb
mov
cmp
icebp
sbb
stc
inc
mov
mov
mov
test
adc
push
adc
mov
cmp
dec
fcoml
dec
arpl
icebp
in
inc
adc
mov
xor
pusha
add
js
popf
and
scas
cmp
cli
leave
push
xor
pop
ret
push
loope
js
insb
inc
rcrl
dec
lods
mov
and
movsb
popa
gs
cmpsl
cld
orl
jo
dec
ret
and
and
loopne
hlt
lods
xor
repnz
out
mov
daa
adc
dec
dec
push
sbb
cmp
mov
rcrl
insb
mov
dec
mov
bound
stos
xchg
push
mov
cmpsl
lcall
cmp
ss
cld
stc
shll
jle
leave
dec
sub
add
imul
hlt
sbb
push
inc
mov
mov
jno
sbb
es
clc
mov
jo
sbb
xchg
pop
andb
std
mov
mov
jmp
lods
cs
movb
das
adc
aam
ja
fs
sub
jp
mov
jge
int3
mov
cwtl
int3
pop
mov
fcmovnb
cmp
xchg
push
fsubr
jae
pop
pop
dec
jl
dec
add
pop
jle
int
mov
lahf
pushf
push
dec
movsb
cmp
movsb
cmp
xchg
dec
iret
sti
aas
push
or
in
cld
sbb
jo
dec
adcl
es
add
mov
adc
jnp
sbb
fsubr
inc
sbb
xor
mull
repnz
inc
or
shr
test
jae
dec
push
jecxz
pop
cmpsl
pop
cmp
in
xchg
mov
cmp
lock
add
cmp
mov
sar
ja
dec
xchg
popf
xchg
dec
fcomps
pop
lret
sahf
mov
cmpsl
into
or
xor
push
xchg
xor
fisubs
out
and
jo
jle
dec
mov
loope
inc
adc
sti
and
into
int3
shll
cld
xor
push
push
ret
jbe
cmpsl
rcll
pop
movsb
insl
sbb
mulb
popf
into
adc
xlat
in
outsb
call
inc
sbb
mov
movsb
subb
jne
repz
cmpsl
mov
push
add
fisubl
jl
ljmp
test
xchg
or
or
cmp
pushl
jne
ds
out
insl
sub
jle
jb
jns
mov
in
adc
lcall
bound
xor
fistps
repnz
repnz
into
push
scas
cmpsl
addr16
jmp
mov
stos
and
push
xchg
adc
mov
mov
orb
and
iret
fmull
adc
bound
gs
adc
mov
dec
or
aad
jno
cwtl
or
mov
pop
xchg
jmp
lea
stos
or
and
cmc
and
cld
mov
aaa
and
or
and
adc
mov
pxor
adc
out
xchg
and
xchg
xchg
lods
push
cmp
cmp
pop
add
xor
dec
daa
enter
adc
sub
jl
loop
test
stc
jl
cs
jbe
mov
cmpb
stc
xchg
xchg
mov
fstpt
and
push
lahf
cwtl
adc
adc
aaa
lcall
into
xlat
mov
iret
mov
mov
loop
jge
data16
loopne
inc
loope
xor
in
mov
or
in
je
add
mov
add
repz
cltd
or
imul
rcrb
fcmovu
add
mov
cmc
xor
cmpl
or
cmp
popf
push
daa
mov
movb
sarl
jo
test
xchg
inc
rcrl
je
jo
and
ja
dec
lods
in
lret
ljmp
lcall
dec
sbb
jne
lea
frstor
fwait
adc
push
push
xchg
daa
and
out
out
pop
ds
fwait
mov
sub
je
jle
pusha
addr16
xchg
je
popa
out
push
or
fnstenv
lahf
repnz
jecxz
mov
mov
test
insb
sbb
outsb
pop
xlat
inc
clc
mov
mul
cwtl
orb
sbb
mov
mov
and
cmc
add
cmp
sarl
ds
loop
mov
xchg
push
xor
lahf
push
pop
push
dec
add
or
push
mov
jge
jl
iret
xchg
cmp
iret
and
mov
xchg
mov
fildl
sub
jg
jbe
rorb
mov
insb
movsb
lods
int
je
mov
cmp
cmp
mov
scas
mov
inc
inc
mov
mov
mov
jle
lret
jnp
pusha
add
stos
adc
sbbl
xchg
inc
push
shrl
pop
cmpl
les
pop
xlat
jg
and
jle
out
lea
imul
inc
int
cmp
and
call
mov
mov
pop
fsub
inc
clc
dec
mov
fcmovu
adc
lret
and
lcall
and
les
sub
inc
pop
negb
mov
cmc
inc
mov
xchg
mov
and
xchg
mov
xchg
lcall
out
loop
adc
dec
mov
mov
jb
push
or
je
xchg
mov
mov
dec
movsl
mov
jp
cmp
sub
int3
shlb
or
ja
fdivrl
scas
xor
jl
adc
xor
loopne
adc
psadbw
sub
pop
int
add
mov
push
add
arpl
sarb
inc
scas
sub
inc
gs
imul
jecxz
inc
adc
bound
int3
aad
xchg
aas
pop
lock
rcr
pop
lret
fstl
cli
fucomi
jecxz
xor
mov
xchg
cmc
fwait
mov
jmp
ret
rorb
jbe
push
mov
push
repz
xor
cmp
clc
lock
adc
push
add
stc
mov
das
mov
mov
add
fidivs
leave
vmovss
adc
in
xor
add
adc
movsl
pop
jecxz
adc
lret
gs
add
ja
xchg
lret
insl
and
and
fisubl
insb
mov
cli
jno
mov
push
loope
icebp
sub
sbb
or
clc
xor
add
adc
popa
mov
push
mov
pop
xchg
dec
loope
icebp
sub
sbb
or
clc
xor
add
adc
popa
mov
push
mov
pop
xchg
dec
loope
icebp
sub
sbb
or
clc
xor
add
mov
pusha
mov
pop
xchg
dec
loope
icebp
sub
push
enter
inc
stos
fcoms
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
aas
sub
jno
data16
leave
in
or
add
push
or
add
add
add
mov
add
or
cmpsl
add
add
add
pop
add
add
add
add
add
add
add
int3
add
add
sbb
dec
add
pop
add
add
add
add
add
add
stos
add
add
add
xor
roll
add
add
rolb
add
add
add
add
imul
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
jecxz
dec
add
push
add
push
add
mov
add
add
add
add
add
add
add
add
sahf
add
add
test
lea
fiaddl
or
leave
add
add
stos
add
add
add
add
add
add
add
add
stos
add
mov
add
testb
add
fadds
and
add
add
add
pop
add
add
adc
aad
mov
add
pop
add
add
add
repz
add
add
add
add
add
add
adc
mov
xchg
sub
add
addb
add
add
add
add
add
and
pop
add
add
int3
add
add
sbb
fadds
push
add
add
add
fadds
add
sub
fiaddl
add
loop
adc
insb
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
or
add
add
add
add
inc
add
add
add
add
fwait
add
pop
add
add
add
add
add
bound
or
or
add
push
add
insb
add
add
add
add
pusha
add
add
add
add
or
jnp
pop
add
add
add
add
add
jns
cmpsl
add
sub
add
add
les
push
add
imul
add
add
add
jnp
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
or
add
add
stos
add
add
or
add
add
add
cmpsb
add
add
add
add
add
add
add
add
xor
addl
add
dec
add
add
stos
add
add
pop
add
cmp
int3
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
stos
add
add
popa
add
add
add
push
add
add
negl
outsb
mov
xor
ljmp
sbb
adc
dec
insl
push
test
movsb
test
sbb
xchg
mov
jl
fcomps
orl
pop
ss
jle
sbbb
popa
mov
mov
int
mov
lods
dec
ret
test
movsl
inc
ror
dec
jmp
inc
fistpll
or
or
stos
repnz
hlt
cmp
dec
or
iret
ret
sub
push
push
pop
push
test
cwtl
jecxz
int
hlt
or
push
stos
push
in
dec
cwtl
jp
fdivl
sahf
mov
adc
pop
push
mov
sbb
es
dec
mov
inc
xor
push
xchg
mov
mov
and
pop
mov
cmp
imull
ret
mov
cld
pushf
ja
lret
sbb
add
mov
fcomps
scas
push
das
inc
fcomps
inc
aad
int
movsb
mov
jmp
cmp
xchg
dec
xchg
ljmp
add
das
jl
addb
in
adc
dec
jns
rorl
lret
mov
insl
fadd
and
stos
mov
and
out
cmp
sub
sbb
lcall
cmp
outsb
gs
mov
push
pop
addl
and
pop
rolb
jbe
dec
lret
adc
arpl
jb
mov
movsl
fsubrp
sbb
sbb
mov
sub
shlb
test
lea
enterw
or
xor
fisubrl
push
int
lret
xor
mov
pop
xor
test
cltd
mov
in
out
sub
xor
or
xor
xchg
test
dec
inc
scas
jne
push
xor
mov
lock
cltd
das
orl
enter
pushl
push
jae
mov
xchg
es
xchg
add
outsl
and
es
data16
mov
test
test
or
int3
cltd
out
int3
jns
outsb
sbbb
sub
xor
xchg
mov
sbbb
repnz
jo
imul
xor
or
xchg
repnz
out
xchg
aas
mov
pop
lret
mov
push
cmpsl
popa
push
pop
fxch
orb
andl
add
shll
ss
jmp
push
stc
testl
cmpsl
xchg
repz
or
dec
loope
daa
stos
adc
lret
pop
inc
xor
notl
subl
scas
fwait
xchg
stos
sbb
icebp
into
mov
pop
cmc
lea
loope
mov
and
mov
enter
xchg
inc
outsb
test
outsl
lret
mov
xor
fdiv
test
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
