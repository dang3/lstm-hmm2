call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jo
cmp
or
sbb
jne
or
push
xor
test
fdivrs
call
cmp
sbb
push
jp
dec
js
push
out
cwtl
pop
test
mov
xor
and
adc
add
jae
arpl
pusha
dec
jb
jnp
mov
int
test
cltd
mov
mov
sbb
popa
inc
dec
je
bound
mov
add
jbe
sahf
xor
hlt
ret
mov
inc
mov
or
test
arpl
inc
pusha
jne
xchg
test
pop
lods
popf
es
push
movsl
cmpsl
out
popl
fmuls
jnp
pop
or
test
add
sub
pusha
push
sbb
or
cmp
mov
enter
pop
push
outsl
mov
or
outsb
enter
mov
sub
mov
std
lcall
clc
and
lret
call
xlat
test
push
cltd
inc
pushf
jne
fwait
mov
sub
ljmp
xor
pusha
dec
dec
popa
inc
jno
andb
repnz
lret
mov
pop
or
jle
push
push
pop
es
adc
add
clc
in
hlt
movl
pusha
cmp
outsl
dec
sbb
es
add
loope
jmp
mov
pop
or
pop
sbb
xor
dec
dec
js
push
mov
cli
enter
call
or
sbb
push
jp
dec
js
push
mov
cli
enter
call
push
sbb
inc
gs
sub
test
leave
jecxz
xor
loope
aad
and
inc
les
mov
bound
test
popa
inc
cli
mov
jnp
aam
stos
sbb
xor
leave
fcmovb
pop
repnz
cmp
pop
or
xchg
mov
push
arpl
test
and
mov
xchg
or
stos
inc
inc
cmp
outsb
fwait
mov
out
mov
cltd
xchg
shll
les
pop
imul
or
xchg
mov
movsl
lea
mov
out
rcr
cmc
xchg
sbb
out
nop
jl
scas
sti
xchg
test
adc
testb
mov
jge
lods
mov
cmp
js
inc
push
dec
hlt
mov
pop
xchg
sbb
dec
decl
mov
decl
mov
inc
mov
shll
fbld
ss
ret
xor
or
loopne
dec
sub
cmp
mov
mov
lahf
fstpl
sbb
push
push
ljmp
jmp
dec
inc
fdivrs
dec
insl
sbb
mov
shlb
mov
mov
push
mov
imul
or
pop
adc
xchg
inc
jnp
sbb
icebp
jb
lret
adc
dec
xchg
xor
push
std
pop
jo
outsb
xor
sbb
sub
movswl
loope
push
std
push
push
dec
test
pop
adc
dec
xchg
push
pop
sbb
sub
lret
leave
enter
leave
ja
jne
imul
fcmovnu
sub
ret
jno
cmp
mov
lret
fistpl
scas
shrb
mov
scas
std
inc
test
xor
cmpsl
shl
aad
fwait
ret
adc
rclb
rcrb
adc
das
cmp
mov
es
mov
loop
pop
pop
sbb
fwait
mov
pop
inc
add
mov
and
lods
cli
sub
repz
xor
cmpsb
jle
xchg
pop
cmp
jge
aad
mov
test
rcrl
or
rcl
push
xchg
push
leave
sub
ret
je
fs
sbb
inc
outsl
stc
add
dec
ljmp
icebp
std
sbb
bound
mov
fs
sbb
inc
aam
aam
aas
sub
mov
pushf
gs
mov
or
shr
and
mov
lret
push
leave
pop
or
dec
cmp
sbb
sbb
sbb
adc
scas
or
jbe
jl
adc
outsl
int3
dec
pusha
xor
pop
sbb
mov
les
stos
xor
loop
jle
mov
cmp
inc
add
addl
dec
daa
aaa
test
dec
aad
les
out
jae
pushf
mov
leave
sbb
mov
subl
sub
subb
insb
sarb
in
in
stc
jl
sbb
stos
cmp
insb
jno
inc
xor
inc
and
sbb
movsb
das
iret
mov
pop
fadds
nop
add
mov
sub
arpl
and
cwtl
mov
out
add
mov
movsb
push
inc
pop
enter
mov
arpl
pop
add
icebp
gs
jb
nop
push
xchg
int
mov
xor
aas
sub
jge
xchg
mov
jg
dec
fildll
inc
and
inc
xchg
ret
test
cmc
add
xor
pop
and
negl
cmp
pop
and
cwtl
mov
imul
mov
and
xchg
jmp
sub
inc
rolb
add
mov
adc
sub
ljmp
add
mov
frstor
sub
xor
js
sub
cmp
push
out
movsl
dec
xchg
mov
adc
or
lock
data16
mov
out
pop
push
lcall
cmpsb
in
and
cs
aad
lods
std
xchg
xlat
xchg
xorl
push
jle
dec
insb
push
dec
push
mul
inc
mov
mov
sahf
xchg
lret
movsb
xchg
ficomps
mov
repz
lea
adc
loop
dec
sbb
decb
fwait
xchg
add
jb
inc
and
cwtl
mov
jne
fdivr
and
and
push
xor
out
arpl
icebp
mov
jle
adcb
jb
loop
lds
pop
nop
bound
lods
stos
sahf
mov
hlt
and
pop
in
sub
or
dec
out
sahf
cltd
roll
inc
test
call
lods
imul
or
sbb
cmpsl
jns
inc
sub
cmpsl
in
add
into
mov
lods
clc
cli
mov
lcall
leave
push
adc
push
imul
xchg
dec
mov
in
cmp
cmpsb
inc
repnz
xor
popf
ret
fwait
in
loop
mov
sarl
andl
rcrb
or
xor
push
dec
pop
aam
out
pop
jae
aad
sbb
or
popa
rcr
shlb
jne
nop
mov
push
sbb
push
stos
cmp
movsb
fldl
inc
mov
imul
pop
movsb
push
mov
mov
push
enter
ret
xor
pop
xchg
and
iret
jg
cmpsb
push
add
xchg
push
adc
push
popa
jmp
shll
loope
lds
jg
mov
add
push
loop
into
ss
xor
xchg
lods
in
sahf
outsl
jae
ds
cmp
adc
iret
xor
dec
ficompl
mulb
mov
das
mov
nop
repnz
mov
fwait
add
mov
jno
out
push
mov
lock
aaa
dec
fists
mov
push
or
inc
xchg
addr16
push
xchg
jle
and
rorl
out
int3
pop
xor
outsl
or
cmp
or
xchg
and
icebp
ss
push
or
push
adc
mov
mov
push
movsl
dec
or
xchg
push
clc
pusha
sub
and
sbb
or
jl
mov
sub
mov
pop
mov
sub
test
and
scas
in
out
pop
std
in
pop
out
push
mov
pop
adc
rcr
mov
js
push
jb
dec
scas
out
inc
or
aad
test
push
mov
adc
xchg
mov
adc
xchg
inc
cld
stc
stc
les
rol
jns
dec
inc
jmp
adc
xor
pop
sub
sub
cmp
jg
jle
mov
or
adc
xor
iret
hlt
dec
icebp
or
sti
cmp
sbb
adc
jge
mov
nop
fldcw
sbb
mov
add
loop
mov
pusha
inc
jbe
sbbl
pop
out
sub
mov
push
and
testb
xchg
cld
sub
inc
shrb
cmp
push
aaa
insb
ds
push
jno
popa
fadd
add
loopne
stc
xorb
push
outsl
into
pop
mov
mov
cmpsb
ss
test
xchg
mov
lret
sbb
in
adc
aaa
das
mov
aad
jbe
cmp
inc
jns
js
or
sub
sbb
imul
jp
fistl
mov
pop
sbb
mov
push
test
shl
ljmp
xlat
pop
cmpsb
mov
jge
push
push
mov
movb
jne
les
jle
loop
rolb
repz
sub
rclb
out
cmpsb
in
cmp
ficoml
stos
sbb
xor
roll
xlat
jecxz
pop
out
imul
data16
mull
lock
push
pop
mov
mov
stos
push
insb
inc
loope
stos
mov
lahf
and
sub
testl
xchg
pushf
rclb
and
clc
jns
mov
cltd
cwtl
push
pop
add
pushf
movsb
aas
cmp
test
xchg
push
push
arpl
imul
push
mov
mov
cmpsb
sbb
mov
mov
cltd
cmp
arpl
cmpsl
push
test
push
mov
xchg
sbb
or
jb
lcall
sbb
xor
push
push
inc
test
cmp
xchg
aaa
insb
ss
push
loop
daa
pushf
test
add
lods
andb
dec
jge
inc
inc
stos
lods
test
or
aam
fsub
and
aas
cmpsb
lea
push
je
adc
jb
loopne,pn
inc
popa
test
loopne
daa
or
adc
cmpsl
das
hlt
dec
xchg
jnp
mov
cmp
pop
bound
pop
jns
xchg
ret
pop
test
loope
inc
pop
dec
dec
push
enter
sub
in
shll
xor
jbe
movl
testb
stc
ss
addr16
sti
in
fdivrp
lock
mov
jb
outsb
pusha
sbb
jle
mov
ljmp
mov
sbb
dec
iret
outsb
jae
dec
pop
xchg
loopne
out
mov
lret
mov
scas
addr16
fwait
ds
lea
aam
repnz
rcr
xchg
and
dec
xchg
cmp
adc
pop
lds
sub
gs
rorl
bound
push
add
lret
rcll
xor
inc
andl
or
jno
lahf
repz
clc
fbld
mov
int
sahf
push
in
sbb
mov
push
jle
mov
pop
into
xchg
mov
add
loop
mov
lcall
fisttps
pushf
insb
xor
xchg
cmp
xchg
pop
and
jmp
les
sahf
sti
mov
mov
and
inc
add
cmpsb
xor
mov
add
movsl
mov
mov
out
idivb
inc
js
xchg
inc
loope
int
testb
sub
add
mov
lea
movsb
arpl
je
loop
adc
arpl
or
dec
mov
addr16
stc
mov
mov
and
ret
pop
ret
xor
clc
mov
ljmp
mov
sub
add
jge
lods
icebp
pop
pop
cmc
into
xor
leave
dec
data16
sub
or
adc
sbb
pop
push
pusha
out
pop
and
xchg
push
aas
repnz
fcmovnb
and
sbb
xor
mov
xorl
fdivl
jo
and
pop
fisubl
loop
jb
loopne
mov
xor
adc
sbb
lea
addr16
test
dec
jmp
dec
bound
fs
cmp
sub
aam
cmc
adcl
into
sub
sbb
ss
xor
pushf
std
xor
push
imulb
fs
pushf
bound
ret
mov
jg
cwtl
jmp
sbb
push
fwait
dec
or
stos
or
jb
repz
ret
dec
cli
and
and
std
subb
xchg
or
jno
lods
mov
jmp
sub
test
mov
cmp
mov
pop
cltd
gs
lret
cmc
or
or
jo
pop
cltd
test
fstpl
mov
mov
mov
insl
iret
gs
and
push
outsl
xchg
repnz
test
lea
jns
inc
test
xchg
mov
leave
xor
cmp
je
sub
adc
sub
in
pop
in
and
comiss
push
inc
out
shl
inc
pop
xchg
xor
addr16
pop
sub
add
and
pop
pushf
pop
fistl
out
adc
nop
inc
jno
cmp
sbb
jge
jp
in
fistl
mov
scas
stos
pusha
fsubr
jmp
insl
inc
or
adc
dec
lock
cld
and
push
cmpsl
pop
aaa
loopne
lds
aas
out
add
push
jnp
jge
cld
push
lret
and
ljmpw
cli
jo
inc
cltd
pop
test
jnp
jl
adc
pop
arpl
loope
sbb
lock
sarl
dec
clc
cmp
stc
in
into
leave
and
in
pop
orl
bound
daa
rcll
mov
test
nop
mov
or
and
sub
sub
and
aaa
xchg
fdivrl
lds
mov
popf
add
ja
cltd
hlt
sbb
inc
xorb
pushf
ds
sub
jnp
jne
jl
sbb
fcmovbe
outsb
mov
sbb
or
inc
push
test
push
ret
pop
dec
sbb
and
out
rorl
popa
cli
add
out
jl
in
sub
push
add
outsb
les
add
jnp
jns
shrl
dec
sub
push
sub
ficompl
and
les
xchg
test
dec
ds
add
mov
imul
addr16
fsubr
cmc
xlat
scas
out
iret
movsb
leave
ficoml
jbe
xchg
dec
das
rorb
pop
aaa
add
lds
mov
jg
add
push
or
stc
mov
mov
add
xchg
lods
jp
mov
jbe
scas
jecxz
add
mov
loopne
cltd
mov
inc
adc
insl
sub
pusha
mov
mov
sub
rcrb
add
lods
dec
adc
mov
adc
je
shr
and
add
mov
leave
inc
mov
das
fdivl
and
sub
cmpsl
inc
sub
movsb
jp
mov
hlt
xchg
in
cmc
push
jne
lock
sbb
hlt
mov
adc
pop
data16
clc
xchg
inc
movsl
xchg
addl
mov
repz
and
and
lret
cmp
shll
stos
lahf
xchg
push
xchg
hlt
aas
ret
push
bound
mov
pop
mov
push
movsb
inc
jle
and
fisttpl
sbb
les
jg
sti
inc
pop
inc
popf
in
lcall
sub
xlat
and
iret
push
aam
sbbl
xchg
push
jg
add
insb
loope
adc
jb
das
jno
add
fiaddl
and
rorb
out
cmp
mov
pop
scas
xchg
fistpll
pop
popf
cwtl
das
dec
lret
xchg
adc
enter
out
lret
cmp
lods
lods
hlt
imul
mov
add
dec
xchg
fwait
add
js
in
insl
enter
xlat
adc
xchg
imul
fwait
push
pop
pop
fimull
enter
push
sub
push
pop
push
adc
mov
call
mov
sbb
push
jnp
dec
popa
or
lahf
cmp
mov
hlt
popf
pop
xchg
loopne
xor
jb
cmp
jge
out
stc
daa
xor
repnz
inc
push
cmp
inc
inc
dec
adc
cwtl
fsub
xlat
xor
pop
inc
mov
popa
push
push
icebp
or
test
stos
shr
pop
repz
scas
divb
lret
repnz
lea
pop
mov
dec
mov
mov
out
fadds
out
cmpsb
sbb
xchg
divl
mov
fldl
cld
dec
mov
out
push
fcompl
mov
add
mov
cmpb
xchg
gs
sub
jne
rol
imul
cmp
jne
hlt
idivl
insl
in
ds
add
pop
adcl
lret
xorl
fmulp
popf
lret
push
cmpsl
xchg
jmp
out
or
xlat
dec
adc
pusha
or
lods
sbb
jecxz
jb
pop
data16
les
pop
lods
add
in
add
dec
test
mov
push
lods
ljmp
add
out
cmc
push
hlt
xor
sbb
push
xchg
mov
jmp
rorb
and
xchg
stos
mov
lret
sub
int3
adc
push
dec
cmp
jecxz
and
ljmp
push
out
ljmp
sub
mov
add
jecxz
mov
and
imul
pushf
mov
adc
lcall
xorb
daa
push
push
insb
loope
daa
and
fimull
and
sub
sub
in
and
aaa
es
je
pop
cli
ds
pop
xor
mov
testb
movl
mov
mov
dec
sarl
je
stos
jo
cmp
pop
lea
clc
call
pop
adc
mov
dec
sub
cs
adc
mov
push
jle
sbb
dec
sub
loopne
movsb
sub
call
dec
jbe
aaa
mov
sbb
outsb
decl
test
cmp
std
int
sahf
adc
daa
jmp
rcrl
and
mov
inc
push
outsb
out
jb
pushf
icebp
mov
mov
mov
cwtl
and
pop
jg
fwait
mov
shl
outsb
cmpb
adc
popa
inc
call
rcl
sub
arpl
nop
imull
shlb
pop
mov
cmp
jmp
aam
ss
enter
xor
cs
jl
hlt
call
test
lods
ljmp
dec
clc
ja
or
push
mov
out
loop
addr16
cltd
adc
mov
out
adc
push
mov
repnz
aaa
int3
pmulhw
or
test
adc
inc
mov
in
and
or
rorl
into
ret
lret
pusha
outsb
aaa
add
dec
add
insl
jmp
jns
push
je
and
sub
scas
mov
mov
stos
mov
stos
test
int
adc
xchg
pop
sbb
or
dec
mov
movsb
sbb
test
test
mov
push
jge
ja
jbe
pop
dec
or
in
mov
push
lret
or
enter
xor
mov
pop
mov
fistps
loopne
movsl
hlt
ljmp
fbstp
push
pop
insl
mov
jg
fistl
pushf
push
bound
mov
shrl
mov
test
adc
xlat
push
adc
xor
sarb
rolb
or
inc
pushf
adc
imul
stos
dec
inc
push
mov
lcall
mov
xlat
sub
push
daa
mov
jns
xchg
xor
hlt
out
int
hlt
pop
or
jb
iret
or
neg
es
jmp
sbb
in
mov
xchg
test
push
loope
lea
hlt
daa
stos
insb
and
rorl
je
sub
jne
xchg
int
mov
adc
and
jae
xchg
sbb
jge
xchg
arpl
out
subl
mov
jp
push
cmp
and
jno
adc
imul
lds
jmp
es
or
jne
xor
aad
incl
lret
mov
repz
or
repz
call
and
ja
mov
out
rolb
ja
sti
push
mov
push
frstor
mov
arpl
jg
sbb
xchg
leave
pop
push
sti
mov
xchg
loope
lret
ret
inc
sub
test
jae
sbb
mov
and
add
xor
adc
push
mov
dec
xor
shrb
fnsave
scas
ljmp
ret
dec
nop
jle
or
stc
xor
pushf
ss
rorl
add
push
and
insl
leave
push
xor
mov
sbb
inc
xor
fnstcw
clc
ljmp
inc
decb
arpl
xor
pop
push
adc
jno
dec
aam
or
rclb
mov
sbb
inc
imulb
call
sub
out
pop
shlb
inc
mov
ret
dec
lods
out
xchg
sarl
hlt
lods
cli
movsb
mov
aad
xor
ljmp
scas
push
loope
gs
mov
add
es
sub
in
in
into
jl
and
popf
push
mov
sbb
fcompl
and
push
xor
jmp
enter
jle
xor
into
dec
dec
int
jbe
dec
sub
push
and
cs
test
std
adc
repz
sti
mov
jle
and
int3
fisubrl
add
or
mov
sbb
xor
sbb
jbe
add
jmp
push
dec
int3
mov
mov
xchg
push
sub
add
in
pop
loope
iret
int3
xchg
mov
mov
into
mov
imul
int
mov
pop
in
scas
mov
sub
cmp
cmc
add
mov
xchg
cmpsl
xor
aam
stos
repz
and
fldenv
jae
fmull
sbb
dec
adc
test
imul
push
call
add
sbb
cld
std
mov
xlat
jne
jnp
nop
test
pushf
add
xchg
adc
add
in
pop
sub
addl
test
daa
lret
sub
scas
xchg
xor
inc
hlt
lods
lret
sbb
and
mov
jne
fs
and
out
xor
sub
push
sub
out
jae
pop
xchg
cmp
push
dec
jp
jb
clc
xchg
ljmp
dec
cld
outsl
lahf
pusha
pop
xchg
or
jp
dec
js
push
mov
cli
enter
call
or
sbb
push
jp
dec
js
push
mov
cli
enter
call
or
sbb
push
jp
dec
js
push
mov
dec
lret
call
cmp
sbb
push
jp
lret
push
and
jb
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
pushf
inc
in
lret
mov
sub
sbb
sbb
insl
imul
dec
pop
mov
mov
cld
fcmove
lret
sub
cmp
or
push
pop
dec
dec
pop
mov
mov
cld
fcmove
lret
sub
pop
jnp
outsl
jb
sub
and
and
int3
stc
jno
lret
iret
stc
fnstcw
push
pop
push
jbe
decb
or
lods
daa
lods
out
out
adc
cld
in
push
inc
mov
ret
inc
xrelease
xchg
push
hlt
mov
aas
mov
jmp
mov
mov
cmp
les
seto
stos
test
cli
in
cld
cmp
lret
shr
ret
sbb
loop
lcall
pop
inc
insb
push
inc
leave
jae
xchg
adc
adc
popf
lret
rcrl
dec
repz
aas
add
mov
inc
cmc
stos
stos
adc
sete
mov
or
lds
cmp
xchg
push
jge
sub
dec
dec
mov
lcall
cld
fcmove
lret
sub
cmp
or
sbb
insb
push
pop
dec
dec
sbb
lods
out
fnstsw
test
cwtl
and
push
sbb
cmp
ds
shr
out
scas
mov
push
imul
or
ljmp
test
stc
jmp
ljmp
sub
cmp
or
sbb
insb
push
pop
dec
dec
pop
mov
mov
cld
fcmove
lret
sub
cmp
or
sbb
insb
push
pop
dec
dec
pop
mov
jecxz
pop
mov
loope
test
cmp
jle
lret
jnp
cmp
imul
and
push
daa
lock
mov
sbb
aad
mov
imul
out
jns
into
push
mov
fidivs
push
xchg
adc
xor
add
sub
push
add
push
rcr
daa
sahf
cli
fmull
pushf
incl
stos
insl
lds
out
cmc
or
mov
sbb
jae
mov
sub
loop
jnp
test
insl
js
call
movsb
xlat
xchg
sub
test
dec
pop
push
sub
icebp
repz
int3
xchg
jmp
inc
dec
jecxz
jle
movaps
xchg
pop
fwait
push
xchg
xchg
sbb
jmp
leave
ljmp
test
mov
std
xchg
roll
shrb
jecxz
cmp
dec
sbb
std
pop
push
stos
push
fs
pop
jns
cmp
daa
adc
mov
repnz
leave
inc
pop
mov
insl
lock
push
mov
fildl
loop
mov
push
movsb
arpl
cmp
inc
test
xor
pop
xor
push
dec
ljmp
or
gs
cltd
mov
and
push
sbb
es
inc
sbb
pop
inc
xor
stos
xor
sbb
mov
and
jns
xchg
outsb
addr16
mov
pop
dec
cmp
push
xor
add
add
or
push
sbb
pop
inc
icebp
shlb
testb
push
loop
sahf
mov
jbe
add
jmp
push
lret
xchg
mov
mov
mov
loope
jmp
dec
cmp
ds
push
and
mov
jo
mov
in
mov
pop
pop
and
rclb
mov
adc
shrd
pop
xchg
jb
mov
ljmp
adcb
or
jo
sub
sub
xchg
pop
xchg
lahf
or
clc
pop
out
inc
cld
in
add
inc
in
lahf
sbb
mov
cmp
call
addr16
ljmp
xchg
cmp
sbb
jnp
inc
test
mov
arpl
cmc
into
notb
push
shrl
pop
push
mov
or
lds
iret
into
jge
fsubl
push
sub
fldl
in
xlat
fistl
mov
popf
pop
leave
jb
cmp
aam
stos
mov
sbb
cs
xor
push
lret
mov
jb
cli
jge
mov
inc
push
insb
outsl
xchg
jo
fnstcw
stos
cmp
sub
jbe
sarl
loopne
lahf
movsl
dec
iret
repnz
mov
cmp
push
adc
outsl
push
aas
adc
pop
inc
mov
sub
xchg
das
pop
or
mov
fwait
sub
jle
int
es
outsb
pop
mov
jns
mov
mov
sub
pop
push
cmc
jno
pop
inc
outsl
pop
test
pop
cmpsb
mov
cmc
cmp
ficoms
xchg
push
jbe
ficomps
sub
jb
adc
popa
add
xchg
or
xor
rorl
jecxz
loope,pn
and
push
and
in
jmp
mov
jo
mov
andl
fmull
and
mov
ss
mov
or
nop
dec
shll
out
mov
mov
loopne
mov
mov
push
jl
sub
xchg
subb
xchg
daa
dec
sbb
adc
push
xchg
and
sub
in
pop
xor
push
xor
test
xor
inc
pop
and
xor
push
pop
cld
dec
sub
bound
loope
in
sub
sbb
sub
lcall
popa
ret
ret
sub
rcrl
test
adc
test
adcl
imul
sahf
add
or
inc
mov
inc
xchg
sub
xchg
jecxz,pn
lahf
movsl
pop
sub
mov
loop
shrl
adc
pop
jnp
rolb
nop
sbb
and
cmpsb
jae
push
xchg
mov
mov
icebp
daa
mov
lahf
mov
dec
ja
fsubr
hlt
dec
shl
shl
sub
or
xchg
iret
aad
int
fdivrl
jb
dec
bound
jbe
sbb
dec
dec
inc
pop
cld
mov
push
mov
add
jl
sub
xlat
cmp
rorl
loope
jns
sbb
jo
push
push
ss
jge
mov
mov
popa
or
mov
xchg
push
jecxz
push
mov
imull
mov
out
adc
int
call
adc
test
ds
hlt
imul
js
fbstp
outsl
push
push
lock
jno
jge
sarb
push
ja
jae
cmpl
dec
icebp
sbb
adc
xchg
call
loope
push
lods
into
fsubrl
add
test
inc
popf
or
dec
sbb
push
add
je
sub
xor
das
andl
inc
lods
imul
add
cmc
les
adc
mov
and
cld
mov
push
and
outsb
std
test
test
cmp
sbb
insl
push
rcl
ficompl
sarb
cmp
roll
jg
aam
pop
cmpsb
movb
les
pop
sti
pop
xchg
aaa
inc
mov
pop
add
jae
jl
adc
jb
inc
xchg
mov
mov
push
dec
sub
in
fstps
rorl
push
dec
cwtl
jg
or
xchg
push
jle
xor
xchg
lods
rclb
daa
jbe
into
sbb
test
cmc
mov
or
ja
inc
dec
sar
fists
sarb
mov
push
mov
shl
das
cmp
inc
pop
sub
adc
inc
and
cltd
data16
sbb
cmp
fidivrl
or
mov
test
cmpsb
mov
in
popf
outsl
lcall
pusha
xor
xor
pop
outsl
cmp
test
scas
pop
fisubl
outsb
into
stos
cs
leave
mov
bound
add
lret
pushf
mov
nop
movsb
ljmp
jg
jmp
sbb
inc
jmp
cmp
sbb
jnp
cmc
iret
icebp
jne
and
mov
outsb
mov
mov
adc
xlat
movsb
pop
cmp
push
mov
sbb
test
add
inc
call
dec
xchg
sbb
push
jns
and
mov
xchg
dec
jl
lcall
sarl
insl
outsb
cwtl
jae
insl
sbb
iret
pop
aam
sub
pop
lret
loop
mov
dec
push
jmp
mov
les
fs
pushf
aad
int
xor
lret
mov
test
jmp
or
and
jo
cmp
insb
push
ret
fsubrs
lock
mov
loope
cwtd
push
mov
imul
int
pop
pop
test
mov
cli
insl
push
sub
sbb
push
sbb
push
sub
orl
add
into
xor
mov
dec
rorb
and
dec
adc
or
mov
mov
sbb
add
int3
xchg
rcll
sbb
or
lret
imul
std
cld
and
inc
outsl
int
jmp
xor
jmp
fdivl
jns
mov
rorb
jbe
mov
mov
sahf
dec
mov
dec
mov
dec
push
adc
pop
add
aas
pop
in
jnp
jno
push
mulb
jecxz
sub
shl
cmp
sub
es
into
add
cmp
enter
out
jb
xor
int
scas
dec
push
pop
jp
mov
vpacksswb
aam
dec
pop
xor
add
rcrl
mov
repz
cld
jecxz
out
mov
js
mov
xchg
popf
popf
fadd
arpl
xor
xor
sbb
rolb
mov
into
jne
push
adc
push
ds
cmpsl
pop
xor
xchg
jle
jmp
mov
push
enter
mov
adc
rcl
jp
push
add
repnz
mov
push
out
inc
sbb
adc
shl
imul
and
lock
or
cwtl
inc
icebp
inc
add
mov
rcrl
dec
popf
loop
adc
adc
rep
adc
punpckhdq
sbb
imul
data16
in
and
mov
push
sub
dec
or
out
pop
xchg
jmp
adc
dec
das
xchg
rcl
mov
fsubrs
xchg
inc
add
sbb
ja
cmc
mov
stc
aad
xchg
sbbl
and
cltd
in
jp
bound
add
inc
mov
pop
in
loop
stos
jbe
cmp
scas
inc
xor
lods
hlt
rolb
scas
std
sbbl
add
inc
cli
sub
add
inc
cli
pop
lds
dec
or
bound
rclb
outsl
mov
mov
jmp
push
xor
jmp
add
out
mov
push
cmp
adc
xor
insl
pop
dec
ja
repnz
cmc
add
add
mov
xchg
push
jbe
cltd
sub
nop
call
mov
mov
ss
and
outsb
dec
push
in
insl
dec
jae
aaa
push
lcall
xchg
ljmp
subl
and
es
xchg
fildl
and
mov
mov
flds
testl
pop
insl
dec
repz
mov
stos
in
jmp
fsubrp
jmp
neg
data16
loopne
ds
lcall
add
cmp
push
lcall
sahf
sbb
daa
adc
int3
mull
cmp
lock
push
sub
bound
add
js
xchg
les
or
movb
cld
cwtl
pop
aad
movsb
adc
pop
pop
daa
inc
dec
mov
xlat
jnp
pop
sbb
sbb
gs
test
mov
mov
and
dec
leave
movsb
mov
bound
pop
and
jb
cld
pop
stos
adc
shrl
stos
mov
cs
add
das
sub
or
pop
sub
mov
add
pop
cli
lret
mov
mov
cwtl
sbb
dec
fnstcw
push
cld
sbb
xchg
test
out
cld
mov
cmpl
addb
cltd
dec
test
stc
mov
addb
xchg
ja
in
pop
pop
rclb
mov
mov
inc
lods
divl
fucomip
in
icebp
pop
sti
dec
iret
daa
jecxz
or
mov
push
adc
cld
push
ror
push
fs
je
mov
nop
cmp
cltd
fnstsw
cltd
ficoms
jle
xor
out
paddw
fwait
inc
dec
clc
mov
cmpsl
testb
into
in
mov
add
sbb
cmpsb
add
aaa
pop
push
pusha
xorl
mov
xchg
mov
mov
and
sbb
inc
jle
into
std
lret
sbb
xchg
es
mov
in
mov
stos
sub
jne
fldl
dec
stos
lahf
sub
aaa
jmp
pop
xchg
cs
mov
fisttpll
and
pop
cmp
add
fwait
lds
adc
jecxz
jecxz
lock
push
stos
or
and
lret
jecxz
fcmove
das
mov
push
sbbl
lret
dec
outsb
aaa
or
jge
pop
nop
out
or
aas
dec
cmp
sbbl
inc
sbb
test
mul
out
dec
psraw
mov
test
mov
stc
stos
test
push
adc
or
add
sub
jne
jbe
cmp
xor
mov
int3
decl
enter
into
popa
outsl
push
std
mov
rorl
adc
loop
rorb
shr
nop
js
pop
daa
dec
add
push
mulb
add
mov
test
pop
shlb
xchg
lcall
dec
scas
sbb
mov
or
mulb
out
cwtl
lds
adc
scas
or
xor
mov
jle
push
pop
adc
and
xchg
flds
dec
jge
mov
hlt
ds
out
pop
pop
xor
enter
xor
mov
sbb
nop
popa
cmp
lret
jp
push
lcall
outsl
mov
in
gs
inc
or
pushf
frstor
mov
adc
scas
mov
inc
addb
dec
mov
gs
sub
xchg
add
push
gs
sbb
mov
mov
aam
movsl
rcrb
adc
dec
cmpsl
movsb
jo
inc
xchg
or
jae
jmp
out
cwtl
icebp
mov
jno
xchg
jns
outsl
pmulhw
mov
sub
lds
add
lock
dec
movsb
add
cmp
dec
lods
aaa
ja
mov
dec
and
ret
and
xchg
out
jmp
jle
jnp
in
rcrb
jecxz
add
and
sub
shrl
imul
xor
jno
cli
iret
dec
daa
insb
icebp
add
sbb
addb
pop
xchg
pop
and
xor
pop
add
push
adc
xchg
xchg
jmp
mov
movsb
mov
sub
xchg
es
rcll
jp
into
imul
out
pusha
rorb
pop
orl
cld
fmuls
adc
jl
gs
lahf
repnz
pop
movsb
fistpll
daa
icebp
push
sbb
ss
push
cmp
fs
add
roll
push
mov
loopne
mov
enter
mov
out
sbb
lods
movsb
loope
xchg
xor
cmp
or
pop
out
jg
and
cmp
mov
pop
mov
cld
lcall
in
movsb
jb
ret
in
out
xchg
addl
xchg
sbb
fs
fmulp
and
jecxz
daa
mov
pop
fsub
cld
out
movsb
push
aad
movsl
xchg
lahf
mov
loopne
mov
fsubl
test
jnp
pop
cmp
mov
dec
push
and
test
in
ret
adc
mov
cmpsl
rcrl
mov
push
dec
ficoms
push
int
fisubl
xlat
mov
loope
sbb
mov
adc
fdivl
jne
adc
adc
lea
pop
adc
insl
xor
xor
xchg
call
add
js
repnz
leave
fisubrl
stc
xor
std
fimull
aaa
scas
mov
mov
and
sbb
add
xorl
or
pop
add
repnz
mov
cmp
add
sbb
aam
and
dec
pop
mov
inc
pushf
jae
int3
cmp
mul
sub
pop
xchg
aaa
stc
add
test
pop
fstps
add
lahf
sub
dec
jns
sbb
xlat
movsb
imull
hlt
push
shlb
cs
push
push
xlat
les
mov
sbb
xor
jge
outsb
leave
jns
sbb
in
add
mov
mov
out
jl
or
mov
movsb
sbb
enter
cwtl
out
test
decl
push
mov
jb
inc
push
cwtl
mov
add
ljmp
fwait
and
pusha
pop
mov
mov
mov
out
test
dec
loope
shrl
lea
fsts
inc
es
pop
mov
xchg
adc
pop
lods
sbb
jmp
in
sub
mov
or
scas
cmpsl
cmp
daa
xchg
ror
in
nop
push
sub
sub
or
test
lea
pop
inc
pop
jnp
xlat
mov
sub
out
pop
movsl
xor
fst
mov
inc
int3
test
and
out
mov
sub
jecxz
wbinvd
sbb
cmp
jnp
jge
push
pop
call
cmp
shr
fs
push
cmp
fadd
orb
pop
and
mov
test
les
xorb
xchg
dec
xchg
dec
fbld
int3
fwait
std
rorb
out
arpl
inc
test
call
mov
jg
ret
and
es
lods
dec
nop
div
lock
mov
xchg
add
adc
push
rol
dec
dec
std
js
stc
jo
cmp
in
enter
daa
mov
push
pop
cmpsl
push
mov
mov
imul
sar
xchg
cmp
pop
and
pusha
movsl
mov
cmp
sti
int3
popa
loop
dec
push
lods
lods
jecxz
sub
test
cmpsl
sub
cmpb
or
out
imul
mov
insl
loope
cmpsb
mov
mov
xor
repnz
aad
push
sbb
pop
fwait
loope
repz
jle
jae
push
shll
data16
sbb
nop
xor
js
sub
and
mov
mov
cwtl
add
lds
decl
sub
xor
out
cmc
xchg
mov
or
jnp
xlat
leave
repz
les
popf
mov
xchg
ret
pop
jnp
lea
addb
mov
push
sub
dec
push
dec
aas
xchg
int3
arpl
sahf
aam
jae
cmpsb
xor
adc
imul
xor
xchg
imul
add
jns
imul
pop
push
int3
inc
aas
cltd
nop
mov
lea
fidivl
mov
repnz
dec
ds
scas
dec
push
push
testl
pop
pop
cli
iret
cmc
or
push
test
out
adc
ficoms
mov
out
adc
repnz
in
js
push
pop
inc
xchg
sbb
mov
test
lcall
mov
xlat
ret
add
xchg
xorl
xor
add
stos
mov
ljmp
add
lcall
inc
insb
fsubr
rcl
push
or
mov
subb
jge
xor
ljmp
nop
xchg
xor
mov
xchg
adc
inc
and
xor
negb
test
dec
lods
cmp
imul
sti
mov
imul
jmp
int3
das
adcb
and
dec
ret
daa
dec
aad
lock
inc
popf
aam
and
out
aad
sbb
adc
adc
adc
cltd
dec
inc
add
xorb
inc
or
inc
outsl
xor
sbb
pop
cwtl
mov
push
dec
out
je
andb
in
insb
scas
in
call
ds
push
xchg
jb
jle
mov
iret
scas
in
fucomip
mov
imul
cwtl
in
loope
push
push
mov
add
push
cs
in
inc
rol
add
lcall
lahf
stos
fsts
mov
jge
xchg
pop
xor
test
and
cmp
mov
testl
loope
dec
pop
repnz
xor
mov
hlt
lcall
sbb
into
shlb
jbe
loope
mov
dec
lret
orb
das
les
add
movsb
mov
sbb
rcll
sub
lods
xchg
arpl
enter
pop
icebp
jne
mov
inc
lret
jb
stc
or
ss
push
jp
push
out
in
test
mov
pop
cmp
sar
xchg
inc
mov
or
or
pop
ret
mov
jge
out
push
test
int
jnp
scas
inc
out
pmullw
mov
adc
outsb
je
fs
dec
int3
fists
mov
fsubs
pminsw
adcl
xor
shlb
popa
push
leave
popl
mov
mov
or
mov
xor
fstpl
inc
mov
push
repz
cld
adc
inc
in
mov
loope
xchg
jg
xor
mov
and
in
lahf
mov
jg
scas
iret
fisttpll
xchg
sbb
mov
or
fcomps
mov
mov
mov
pop
pop
and
mov
xor
fisubrs
out
insl
test
mov
sub
in
adcl
loope
leave
mov
cltd
iret
ret
or
and
ljmp
xchg
adc
divb
inc
sub
jns
sub
leave
dec
jne
and
popa
xchg
es
mov
popa
mov
dec
icebp
mov
dec
fcom
sbb
fbld
imul
test
mov
cltd
push
add
sub
rorl
aas
jb
pop
pop
cmpsb
xor
lcallw
insl
dec
mov
xchg
scas
inc
imul
inc
loopne
dec
pop
leave
adc
push
push
push
push
xchg
int
cmp
dec
into
insb
aas
je
adc
repz
ss
sub
lret
subl
xchg
lret
inc
cmpsl
stc
inc
xchg
daa
xchg
loope
call
mov
or
flds
sub
lret
push
dec
xchg
bound
ja
les
das
mov
popa
stos
sbb
daa
pop
sbb
insl
cmc
and
imul
hlt
push
rcr
movsb
push
dec
hlt
fs
mov
cli
in
ljmp
sub
cmp
or
sbb
insb
push
pop
dec
dec
pop
mov
mov
cld
fcmove
lret
sub
cmp
or
sbb
insb
push
pop
dec
dec
pop
mov
mov
cld
fcmove
lret
sub
cmp
or
sbb
insb
push
pop
dec
dec
pop
mov
mov
cld
fcmove
lret
sub
xchg
mov
or
in
andl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
enter
in
daa
cld
pop
lods
aaa
std
adc
push
mov
cmpsl
jl
or
icebp
imull
cmp
int3
pop
fdivl
in
daa
cld
push
mov
ja
addr16
xchg
dec
xchg
cmpsl
jl
and
sbb
sub
cmp
push
sbb
jbe
mov
inc
aam
cmpsb
mov
jg
or
movsb
jp
pop
mov
mov
popf
inc
mov
inc
gs
das
pushf
jge
pop
mov
pop
aam
adc
cmpsl
ja
iret
mov
add
ret
pop
jl
xchg
inc
popa
mov
mov
sub
rolb
cmpsl
sbb
movsb
mov
or
or
xchg
dec
in
dec
dec
insl
int
ja
dec
loopne
clc
daa
sti
push
int3
push
faddl
cmpsb
cld
push
cwtl
push
lods
mov
xchg
leave
xchg
mov
sub
scas
xchg
not
in
call
adc
add
mov
inc
xchg
or
lds
pop
jg
mov
xor
and
sub
ret
xchg
fsubr
mov
dec
mov
pop
test
pop
cld
aaa
cwtl
daa
cld
push
mov
ja
addr16
dec
xchg
mov
cmpsl
inc
xlat
xor
repnz
push
push
int3
outsb
mov
addb
sub
icebp
adc
es
jae
pop
mov
scas
jae
pop
mov
adc
jne
addr16
inc
nop
adc
sub
ja
addr16
repnz
loop
mov
xchg
sbb
dec
out
jle
arpl
andb
push
rolb
lods
addr16
mov
cmpsl
jl
or
sbb
sub
cmp
int3
pop
fdivl
in
daa
cld
push
mov
ja
addr16
mov
cmpsl
jl
or
sbb
sub
cmp
int3
mov
adc
add
lock
ljmp
int
and
in
pop
add
shll
sti
cmpsb
daa
in
out
sbb
and
jge
lret
das
xchg
xor
nop
fisubs
lret
popf
and
push
xchg
sbb
mov
xchg
jmp
pop
or
mov
sub
pop
faddl
jno
jp
pop
push
pop
add
dec
imul
sbb
popa
or
jg
sub
lods
push
xchg
lods
mov
mov
add
mov
ljmp
ret
xchg
cmp
js
es
mov
popf
or
mov
je
movsb
fbstp
sub
jle
inc
mov
popf
xlat
movsl
pop
pop
jg
mov
fcomi
cmpsl
cli
cmp
or
das
les
in
xchg
int
dec
ja
ret
lods
cmp
push
gs
popf
sbb
jb
popf
mov
inc
xchg
xor
add
or
mov
dec
fimull
mov
rcll
sahf
js
mov
pop
cmp
shll
push
clc
hlt
out
int
aaa
sub
fs
outsl
iret
fistpl
xor
mov
stos
xchg
mov
int
adc
mov
lock
jg
or
xor
hlt
rclb
xchg
stos
or
sub
mov
bound
loope
adc
scas
jns
fcompl
les
sub
mov
push
pusha
or
lret
repnz
push
bound
sub
cltd
idivl
xlat
xchg
xchg
aam
pop
xchg
sub
roll
cld
sbb
loope
pop
sbb
daa
test
and
jg
leave
dec
hlt
xchg
daa
inc
es
into
sahf
fisttpl
add
stos
dec
stos
jge
pop
jbe
mov
pushf
cltd
mov
addr16
pop
or
pop
add
fs
dec
ds
push
jb
dec
cli
push
fisubrl
filds
cld
roll
imul
cltd
lods
dec
jbe
sbb
or
pop
mov
in
and
add
popa
mov
aaa
jl
cli
ds
mov
fisubrl
shll
or
rorb
sbb
in
add
lret
incb
imul
clc
jge
push
popf
jb
cmp
xchg
mov
roll
mov
push
jns
mov
xchg
roll
jns
in
mov
clc
mov
lods
enter
xchg
daa
and
inc
andl
lds
scas
out
mov
xchg
and
jmp
mov
mov
push
loope
das
and
and
stos
cmc
cmp
xchg
mov
cld
fisubs
fmuls
jmp
cmpsl
dec
sub
pop
aad
in
mov
and
out
lahf
jecxz
rolb
arpl
jmp
cmp
hlt
xchg
jne
js
jle
xchg
test
arpl
out
in
adc
add
pushf
mov
movsb
cwtl
aas
sub
lods
jno
repnz
mov
sub
lret
mov
push
mov
mov
daa
add
mov
cli
repnz
mov
ret
ficoms
cli
decb
add
test
sarl
data16
pusha
and
loopne
xor
sbb
negb
pop
dec
movsl
xlat
and
pop
dec
push
inc
sub
lahf
mov
sub
add
pop
mov
mov
xor
or
add
jmp
or
sub
sbb
or
push
xlat
push
sbb
jae
dec
cmp
inc
push
movb
rcll
jno
stos
xor
pop
daa
push
and
inc
mov
cmp
loop
cli
daa
add
push
insl
and
push
enter
into
xchg
adc
sbb
pop
push
clc
outsl
inc
and
jp
push
pop
andl
out
push
cmp
inc
shl
adc
outsl
inc
addr16
nop
stos
lea
xchg
je
dec
inc
pop
mov
mov
lahf
pusha
push
and
repz
out
cmp
xor
movsl
fcompl
xor
xor
xchg
dec
adc
data16
sub
sub
mov
shll
scas
test
enter
inc
mov
in
fs
insb
gs
das
mov
in
movsl
mov
push
dec
into
mov
and
repz
push
sbb
fwait
sub
jg
mov
out
cmpsb
sub
push
and
pop
daa
mov
jno
stos
xor
sbb
and
inc
xchg
mov
rorb
or
jno
mov
dec
negl
ja
sbb
mov
sub
push
cwtl
jne
mov
and
xchg
movsb
inc
sub
fiaddl
and
pop
lret
add
shrl
int
pop
cmc
adc
push
test
lea
mov
push
jl
leave
repz
nop
mov
sarb
or
jle
ljmp
sahf
sub
push
dec
cwtl
cmp
ret
cmp
cmp
ds
jle
xchg
add
sub
dec
pop
data16
popa
xchg
dec
mov
xor
into
xchg
lret
fs
cld
or
dec
sub
popa
aas
popf
jge
sub
clc
mov
jl
jno
movsl
mov
push
and
fidivs
int3
push
daa
dec
in
je
cmpsb
popf
mov
jae
push
inc
fmull
lds
scas
adc
xchg
shll
cmpsb
jo
lock
xor
mov
xor
aad
stos
cmc
and
mov
xchg
movnti
and
nop
mov
movb
xor
fs
int
ret
imulb
roll
negl
lea
pop
test
mov
stos
sub
push
mov
jecxz
or
jl
push
jbe
shrl
jo
lahf
fs
jmp
sbb
mov
mov
sbb
lea
mov
mov
mov
dec
jecxz
daa
inc
in
xor
push
fs
popf
cld
hlt
sub
cmp
cmpsl
iret
cmc
sub
mov
mov
andb
push
cmp
loopne
mov
loop
lcall
xor
or
jmp
dec
loopne
mov
push
scas
js
cmp
adc
cmp
fdivs
mov
fs
jnp
loope
sbb
fcmovbe
adc
rcll
inc
adc
in
imul
imul
add
imul
divl
add
or
shlb
and
fadds
repz
xlat
inc
mov
add
ss
pop
xor
push
ret
push
cmpsb
call
call
mov
xor
lods
and
push
cld
rcll
xor
enter
pop
sbb
and
test
mov
xchg
lock
dec
in
ret
cltd
and
jo
call
pop
cmp
sbb
test
inc
pop
sbb
div
aaa
mov
xchg
mov
leave
push
fwait
dec
out
mov
add
out
out
lods
jp
lea
lret
jnp
je
adc
inc
sahf
mov
ds
mov
test
adc
and
sub
or
push
cs
sub
mov
repnz
dec
mov
mov
test
jge
nop
in
mov
adc
cwtl
or
cmp
adc
repnz
lret
scas
adc
test
bound
push
hlt
cmp
push
or
ffree
aaa
cmp
pop
nop
mov
fucomip
aaa
dec
xchg
mov
ja
pop
mov
ja
enterw
rorl
add
cmpsb
test
aaa
jne
xor
into
dec
dec
xor
inc
mov
mov
push
aad
push
cmp
jp
out
cltd
dec
adc
adc
or
sarb
jbe
lds
mov
adc
mov
ljmp
aaa
mov
and
and
icebp
pusha
inc
fcmovnu
enter
sbb
stos
mov
dec
out
xchg
test
add
push
jne
scas
je
idivb
cmpsl
dec
mov
js
incl
cmc
jmp
fsts
or
jp
aas
pop
jl
or
xchg
and
pop
icebp
fstpl
ja
stc
mov
hlt
ljmp
or
mov
imul
leave
add
dec
sub
xchg
jne
pop
leave
loop
mov
pop
test
enter
loope
loop
pop
push
stc
push
push
xchg
nop
outsb
mov
or
cmp
mov
xchg
dec
popf
pop
aas
movsl
rcrl
add
les
jo
mov
push
sub
sbb
fbld
sbb
cmpsb
fistps
repnz
mov
mov
fnstcw
pop
or
dec
pop
push
addr16
std
stos
fdiv
inc
call
add
inc
hlt
lods
ljmp
pop
add
and
mov
sbb
sbb
dec
sbb
out
into
inc
jne
es
sbb
mov
cmovle
and
adc
clc
push
cmp
ret
cmp
repnz
adc
xlat
pushf
enter
and
push
in
das
rorb
scas
pop
cmp
sub
fcom
cs
mov
add
cmp
sub
gs
mov
dec
cmpsl
xor
cmpsb
mov
mov
mov
xchg
sbb
mov
aad
add
push
xchg
pop
cmp
inc
pop
xchg
lock
mov
inc
in
loop
int3
mov
xrelease
xabort
dec
push
sub
cmp
add
add
jbe
push
mov
test
addr16
mov
mov
sbb
loopne
mov
or
enter
push
sbb
cwtl
in
aad
jb
and
and
leave
sbb
mov
aad
test
bound
dec
and
mov
les
aaa
sub
add
dec
out
pop
cli
dec
pop
push
mov
in
or
cmpsl
cmp
cmp
lods
stos
jecxz
jl
rcr
mov
and
in
adc
xchg
fisttpl
pop
repnz
pusha
bound
pop
js
fidivs
dec
cmp
inc
mov
orb
mov
jne
mov
lret
jb
mov
push
xchg
xchg
mov
enter
ss
mov
adc
in
jno
fidivs
push
or
iret
cmp
shll
xor
popa
mov
push
shl
iret
daa
add
inc
cmpsb
mov
in
mov
loop
dec
push
fimull
push
pop
into
movsb
mov
push
push
or
fwait
add
iret
jmp
or
rorl
das
push
loopne
adc
sbb
pushf
adc
xchg
addr16
sbbb
filds
dec
in
popa
cmp
mov
and
aam
stos
movsl
cmp
filds
mov
mov
test
mov
sub
mov
mov
mov
xor
notb
mov
cmp
scas
xchg
or
and
aas
add
je
mov
jg
pop
adc
aas
repnz
jbe
jge
push
cli
xchg
pop
mov
mov
lcall
leave
push
std
addr16
stos
mov
add
js
popf
jl
ljmp
lcall
je
cmc
loop
out
cmpsl
mov
push
add
ss
sub
insl
hlt
adc
mov
divl
xchg
xchg
lret
push
mov
push
mov
mov
add
imul
sub
pop
mov
mov
xchg
pushf
dec
jae
dec
aad
mov
xor
mov
rcll
xor
push
pop
pop
jno
xchg
jb
adcb
lods
pop
shld
push
fdivs
jp
sbb
int
cli
xchg
mov
or
push
or
adc
je
mov
ret
push
mov
mov
jae
daa
push
add
adc
xor
xchg
xor
es
lock
cwtl
pop
inc
pop
scas
ret
and
push
into
inc
movsb
adc
xchg
stos
scas
cmp
mov
inc
lods
sub
hlt
and
add
sbb
test
mulb
lea
es
fadd
adc
xchg
imul
push
pop
cmpb
mov
mov
and
stos
sbb
dec
test
inc
mov
cmp
mov
idivl
mov
imul
or
ja
xor
ss
jne
mov
and
mov
hlt
loope
add
cmp
dec
add
mov
mov
push
lahf
and
mov
xor
push
mov
dec
mov
mov
mov
sbb
add
push
cmp
rolb
popf
stos
push
add
imul
sub
pop
push
sub
mov
dec
pushf
aad
add
lahf
mov
std
bound
mov
push
jmp
fistps
xor
pop
jb
dec
pop
mov
orb
mov
popf
push
in
jecxz
push
out
out
pop
jge
popf
push
cmp
outsl
frstor
adc
sub
adc
cmc
hlt
in
jne
cltd
lret
aam
inc
repnz
aas
inc
shll
addl
je
push
jmp
mov
rcrb
ljmp
push
scas
push
push
imul
adc
pop
jbe
test
cmp
dec
pop
cmovns
xchg
iret
pop
xor
insb
cmpl
dec
or
shlb
mov
and
test
mov
push
push
xor
sub
ja
mov
xchg
adc
fs
pop
lret
andb
pop
lret
aad
jno
imul
jae
icebp
jecxz
std
stos
or
mov
int3
add
adc
shlb
mov
in
in
scas
loop
lahf
lret
loopne
xorb
mov
push
cld
xchg
add
adc
pusha
pop
push
iret
pushf
mov
push
insl
xchg
or
andb
gs
mov
scas
push
cmp
jp
leave
push
fisttpl
bound
leave
jbe
push
push
int3
push
scas
arpl
lock
test
cmpsl
or
xor
cmpsl
mov
pop
jnp
jno
push
ja
jne
mov
das
fists
jns
stos
cld
fdivr
sub
sbbl
outsb
fcmovnu
ret
push
enter
scas
or
jmp
add
and
stos
lds
lcall
les
mov
pushf
movsb
aaa
fbld
push
mov
pop
cli
ja
push
jno
xchg
testb
addr16
pop
push
movsb
dec
nop
imul
sbb
jae
jge
sub
xchg
aad
sbb
cmp
loopne
xchg
in
and
daa
jbe
xchg
cmp
cmp
inc
push
sub
outsl
sbb
imul
xor
sarl
in
popw
add
push
js
jmp
data16
fs
pop
cmpb
add
sti
out
push
add
and
sbb
lock
lret
push
mov
cmp
cmp
jns
mov
pushf
mov
rolb
out
lock
mov
nop
xchg
insl
inc
xor
sub
cmp
add
out
pop
popa
rorb
inc
ja
mov
mov
jp
insb
loop
ds
imul
lret
inc
inc
repz
dec
cmp
push
popf
fcompl
lret
sbb
mov
cli
pusha
cmpsl
push
lret
mov
pusha
xor
arpl
dec
jecxz
pop
cmpsb
int3
pushf
xor
int
inc
orb
fs
mov
mov
ss
in
js
xor
sbb
gs
sub
fstps
fwait
les
loopne
scas
jp
dec
ja
ss
dec
jecxz
xchg
fidivrs
xchg
and
sti
out
lret
cmpsl
mov
ljmp
pop
jmp
roll
hlt
sti
sbb
rcr
loop
sub
shrl
and
mov
and
cmpsb
mov
xchg
jmp
inc
into
pop
icebp
xchg
lahf
mov
cmp
cld
pop
xchg
xchg
adc
pushl
cmpsl
xchg
ja
shr
lret
cmp
or
inc
xor
cld
xchg
jbe
sbb
dec
outsb
in
insb
cmc
push
or
orl
out
push
xor
js
arpl
mov
insb
dec
scas
mov
cmp
in
adc
lds
gs
or
daa
jge
lcall
and
mov
xchg
popa
addr16
sti
aas
mov
xchg
out
pop
cmp
and
movsl
mov
je
xchg
jp
add
jmp
sarl
scas
in
mov
or
dec
orl
les
mov
aaa
add
dec
push
ljmp
movsl
push
movsb
or
lea
andl
xor
jecxz
pop
lahf
mov
mov
mov
jb
in
jnp
push
aam
xlat
jle
jg
inc
inc
xor
repnz
sbb
xor
push
inc
pop
vcvtpd2psy
xor
sub
mov
int
cmp
push
jmp
lods
popf
jl
xor
xor
movsl
cmpsl
dec
in
inc
in
or
jno
pop
jns
leave
fadds
aas
aaa
fldcw
mov
mov
inc
inc
push
xor
jl
js
cli
inc
arpl
inc
std
mov
lcall
pusha
cmp
clts
fbstp
cmp
push
jp
adc
inc
lcall
and
xchg
gs
sbb
test
icebp
push
movsb
movsb
divb
popf
mov
in
aad
pop
and
in
inc
sbb
push
mov
les
gs
adc
adc
aaa
adc
lret
int
jae
scas
push
dec
fidivl
fnstenv
or
sbb
mov
sub
mov
loop
out
dec
shl
cmp
mov
stos
and
mov
insl
ds
cli
pop
call
les
icebp
cmp
in
insl
call
xchg
bnd
cltd
inc
sbb
push
test
sbb
mov
dec
pushf
imul
ja
ss
scas
js
mov
ja
mov
stc
fs
pop
fisubrs
fsubrl
sbb
jb
lret
push
jmp
push
out
inc
mov
or
mov
icebp
push
xor
xor
sub
sbb
fldl
cmp
test
scas
loop
mov
push
lret
loop
imul
pop
mov
loope
inc
jne
mov
mov
es
push
mov
rolb
xchg
std
inc
aad
rolb
cmp
pusha
addb
cmpl
xor
call
pushf
dec
jecxz
ljmp
inc
inc
pop
pop
mov
je
ljmp
jge
ja
cmc
xchg
push
es
data16
popf
lahf
jle
pop
pusha
and
xchg
cmc
pop
xor
repnz
inc
mov
jo
mov
xor
hlt
sub
cmp
andl
mov
mov
mov
lock
mov
push
imull
lahf
leave
mov
xchg
add
stc
or
inc
imul
jb
and
adc
inc
scas
mov
cwtl
flds
imul
sbbb
daa
push
cwtl
pop
pop
mov
mov
or
shll
jns
test
xchg
pusha
mov
popf
xor
mov
cmpsb
xchg
lret
add
or
test
movsl
fiaddl
jb
or
xor
movb
lock
lods
loope
mov
lahf
imul
mov
sub
leave
xchg
or
jb
jb
sbb
and
sbb
pushw
xchg
sub
mov
in
mov
add
dec
push
movl
rcl
pop
xchg
and
cli
sbb
xor
dec
sub
pop
dec
insb
adc
inc
fnstsw
dec
mov
divb
sub
push
pushf
jge
mov
mov
push
mov
adc
inc
xchg
sahf
enter
jae
sub
dec
push
mov
mov
or
loope
inc
fs
scas
mov
rclb
inc
jl
add
jb
mov
mov
hlt
test
in
incb
stos
pop
jns
fcoml
xchg
icebp
jge
insl
lods
aad
xchg
fsts
aam
inc
and
add
sub
in
pop
fistps
cmp
jl
ret
jns
and
push
push
sub
mov
adc
push
scas
ret
lock
dec
fisttpl
daa
fistpl
mov
popf
sbb
movsb
stos
arpl
hlt
pop
cmp
pop
cs
pop
fisubs
outsl
mov
jmp
inc
inc
mov
and
sbb
mov
mov
lea
outsb
loop
imul
mov
out
stos
pusha
dec
add
gs
out
jmp
mov
jo
mov
cmp
les
mov
adc
add
sbb
cmpsb
mov
cld
cs
push
fnstsw
mov
inc
out
xor
popa
loope
data16
cmpsl
pop
dec
xchg
pop
enter
cmp
inc
mov
pop
adc
dec
cmpsb
out
mov
bound
adc
fisttpl
aam
inc
adc
repnz
jbe
inc
push
cmc
jnp
and
fdivl
inc
pushf
ja
addr16
mov
cmpsl
jl
or
sbb
sub
cmp
int3
pop
fdivl
in
daa
cld
push
mov
ja
addr16
mov
cmpsl
jl
or
sbb
sub
cmp
enter
hlt
daa
clc
push
mov
ja
addr16
mov
cmpsl
jne
or
sbb
and
pop
cmp
or
mov
ja
addr16
mov
negb
je
or
mov
mov
popa
inc
jns
outsb
mov
shll
rcll
add
jb
pusha
add
mov
mov
xchg
jno
popa
repnz
add
xor
and
shll
mov
jb
push
adcl
mov
popa
jmp
cli
add
xor
and
jns
rorl
loope
aam
out
push
ret
adc
push
xchg
push
hlt
xor
jmp
and
fwait
movsb
pop
fs
arpl
mov
pop
shr
ds
fcoms
push
popa
mov
or
out
lock
insb
and
jb
push
loope
lock
or
popa
xchg
or
pop
jno
int
sub
sub
sbb
nop
sahf
inc
push
dec
inc
sub
mov
jecxz
sub
or
lods
daa
push
std
mov
sti
bound
dec
inc
sub
mov
mov
or
and
mov
adc
repnz
dec
push
sub
movl
or
inc
lret
movsb
scas
shrl
loopne
test
inc
push
movsl
inc
mov
xchg
jno
popa
in
repnz
xor
and
sarl
rorl
sbb
push
jp
dec
mov
enter
inc
negl
testb
jge
add
mov
mov
cltd
cmpsw
jb
pop
repnz
ret
inc
std
jno
adc
inc
xchg
and
inc
mov
nop
inc
mov
or
and
es
xlat
sbb
adc
sbb
add
adc
add
xor
and
shll
rcll
add
jb
bound
mov
mov
popa
repnz
add
xor
and
shll
rcll
add
jb
bound
mov
lea
sub
fldl
out
xor
push
test
sub
scas
xor
cmp
imul
imul
and
xchg
xor
sub
std
movsb
std
pop
and
icebp
popa
sub
mov
std
out
testb
xor
dec
adc
inc
jl
popa
fwait
inc
mov
stc
pushf
dec
int3
cmpb
push
pusha
push
mov
je
movsl
and
rclb
shrb
jo
sub
dec
xchg
test
inc
mov
jo
push
loop
push
movsl
jmp
fistps
mov
repz
sbbb
xchg
rcrl
enter
sub
push
sub
in
loop
outsl
icebp
adc
cmpl
ret
lea
jmp
aad
test
pop
sub
notl
fidivrl
fisubrl
arpl
mov
loope
insb
ret
pop
roll
lock
adc
push
mov
xor
mov
cmpsb
pop
lods
jnp
xchg
pop
push
fnstsw
das
push
insb
sbb
mov
push
adc
ja
push
and
xchg
pushf
sbb
dec
lret
mov
adc
jp
call
loop
mov
inc
test
jle
pop
scas
es
clc
sbb
cmp
fisttpl
cmpsb
mov
out
in
dec
mov
lea
cmp
std
adc
push
imulb
adc
xchg
adc
mov
mov
je
bound
pop
xor
mov
das
push
outsl
dec
jbe
inc
adc
push
jno
pop
jnp
xchg
pushf
lock
mov
sub
fldenv
dec
pushf
mov
arpl
xchg
fimull
into
dec
mov
iret
pusha
hlt
push
popa
jg
push
xchg
nop
sarb
or
mov
pop
cmp
andl
pop
lock
xor
mov
push
iret
adc
fidivrs
and
xchg
mov
xor
clc
lods
movsb
sub
out
or
mov
stos
adc
pop
mov
inc
fstpt
add
loope
aas
cmp
sub
adc
cmp
pop
mov
out
push
sbb
mov
ret
adc
sub
sbb
fisubl
wbinvd
mov
arpl
test
notl
push
stos
mov
sub
loop
jno
push
enter
test
jb
push
test
shrl
dec
dec
fs
adc
aas
xchg
push
mov
addl
stc
cld
sbb
les
scas
pop
cltd
aad
mov
jo
pop
xchg
push
js
pop
add
adc
mov
fucomi
jp
and
jno
cmpsb
inc
xchg
sti
test
add
bound
insb
cs
repnz
nop
xchg
mov
mov
aam
adc
ss
pushf
incb
lock
xlat
loop
cmp
inc
mov
push
jl
jns
nop
imul
sbb
mov
adc
xor
jo
push
inc
dec
mov
subl
sbb
mov
inc
gs
and
xor
add
jp
ror
rorb
out
enter
dec
xor
imul
xlat
mov
add
xchg
in
testl
xor
int
xor
leave
jno
inc
mov
cmp
and
dec
sarl
pop
mov
xchg
adc
fldt
adc
jae
les
mov
je
mov
aam
add
pop
sbb
sbb
xlat
xor
xchg
add
dec
push
repnz
inc
mov
cwtl
xor
jecxz
sub
cmpsl
jbe
pop
pushf
pop
cmp
sub
pop
mov
ljmp
adc
sub
pop
ds
jo
sub
cmp
jo
cmc
xchg
into
sub
cmpsl
in
xlat
orl
or
pop
rorl
or
lret
dec
xor
jnp
jle
cmpsb
sbb
rorb
mov
and
and
testb
imul
les
inc
sub
mov
sub
leave
test
or
je
les
adc
addr16
jge
adc
jmp
loope
jl
stos
ror
pop
loope
cmp
jmp
pusha
and
fwait
adc
sub
jae
rorl
iret
mov
daa
pop
in
mov
bound
stc
clc
push
inc
push
seta
or
arpl
daa
mov
mov
mov
cs
and
orl
cltd
ds
movsb
adc
mov
in
popa
insb
rclb
mov
leave
jl
into
jno
sbb
sub
aaa
out
inc
fcomp
mov
push
xor
insl
xor
cld
loop
mov
push
push
movsb
xlat
mov
aaa
mov
pop
pop
jle
mov
das
push
push
cld
scas
adc
sub
or
adc
or
push
fldenv
pop
aad
test
jns
or
cs
fimuls
jae
out
js
pop
mov
je
inc
mov
adc
scas
cmpsl
fdivs
mov
mov
repnz
jae
push
xchg
cmc
hlt
jl
sbb
pop
add
mov
adc
or
xor
pop
push
popl
lahf
xor
pop
jbe
jo
mov
fists
movsl
mov
vhsubps
mov
mov
sub
cmp
push
pop
adc
std
xor
sbb
add
or
xchg
or
enter
shrl
adc
test
add
pop
pop
jne
jg
mov
xor
push
lods
inc
aad
das
enter
jno
mov
popf
mov
push
imul
add
mov
inc
add
sub
and
pop
movl
in
mov
add
push
push
cmp
cmpsb
jle
call
pop
dec
inc
sub
add
out
daa
mov
shrl
inc
shrb
pop
or
pusha
pop
pushf
cmpsb
mov
addl
sub
outsb
dec
lods
add
dec
stos
xchg
mov
jb,pt
out
std
into
sub
and
insb
cmp
mov
clc
mov
mov
push
inc
push
pop
xchg
jb
or
inc
mov
mov
pop
fcomip
insl
out
lods
or
inc
pop
sti
stos
data16
mov
test
rcrb
imul
mov
outsl
aaa
aad
adc
or
push
nop
dec
scas
je
and
je
add
push
pop
mov
insb
jle
mov
sbb
mov
push
cs
jp
or
dec
xchg
mov
scas
outsb
in
mov
jne
sub
inc
mov
dec
mov
test
test
shrl
inc
fimull
mov
lcall
and
mov
in
adc
stc
inc
outsb
lods
xlat
pop
lock
cmp
insb
stc
sbb
repz
test
push
in
and
test
cmc
pop
rep
or
cmp
lea
adc
out
jbe
and
push
inc
pop
adc
mov
xor
jns
or
js
xor
mov
xor
imul
mov
sub
stos
sub
mov
and
jmp
xchg
mov
mov
dec
mov
data16
in
xchg
inc
xchg
loop
or
xor
dec
pop
sub
bound
insl
aad
xchg
pop
fbstp
push
push
sahf
ret
dec
das
fistl
add
sub
mov
mov
sahf
into
sub
stc
js
mov
add
xchg
lret
sahf
push
jae
sub
and
orb
loopne,pt
xchg
test
lea
xorb
ljmp
ficoml
cmp
push
stos
mov
push
in
mov
test
mov
xlat
lret
mov
jno
inc
sbb
xchg
das
sbb
adc
xor
mov
lahf
jge
mov
jo
mov
cmp
js
mov
leave
adc
jge
data16
mov
jg
xor
dec
xor
in
inc
dec
jo
xchg
mov
sub
test
out
inc
dec
pop
pop
mov
pop
adc
or
shlb
mull
or
mov
xchg
movsb
sarb
mov
int
ficompl
dec
das
jmp
aad
jge
cmpsb
out
jl
mov
out
ds
push
int3
repz
movsl
adc
inc
aam
iret
inc
fs
push
cmpl
jb
enter
jbe
mov
test
and
sbb
and
ljmp
ret
fists
shrb
inc
sub
cmp
out
jns
pusha
jb
out
xchg
lods
call
js
or
repz
je
lea
cmp
cwtl
lcall
jne
in
jge
mov
push
mov
add
pop
mov
cmp
cmc
or
sbb
stos
pop
mov
std
out
loope
shll
mov
sarb
jmp
cmp
add
or
push
inc
xor
xchg
mov
orl
cmc
in
jns
xlat
js
push
jnp
lcall
cmp
push
mov
jbe
das
ja
out
pusha
adc
dec
fucomi
ljmp
fsts
adc
arpl
mov
jecxz
enter
inc
and
lods
adc
mov
pusha
int3
fiaddl
pop
leave
jg
jp
mov
cltd
xchg
je
jns
insl
and
hlt
aad
scas
mov
cmc
cmp
push
adcl
loop
popa
sub
into
scas
aas
loop
aas
push
int3
inc
imul
push
cmp
lea
add
mov
out
xchg
adc
add
jne
js
out
and
dec
ja
xorl
mov
std
cli
mov
scas
sub
add
cmp
fdivs
mov
daa
pop
test
mov
ret
sbb
jne
mov
add
mov
rcrl
lret
daa
lcall
arpl
add
js
mov
pushf
and
dec
fisubrl
pop
push
rolb
cmp
lds
in
insb
dec
pop
or
push
ret
push
cmpsb
aam
scas
mov
iret
xor
into
xlat
lahf
xchg
sbb
cmc
cmc
insl
xor
dec
adc
jl
xchg
in
mov
cmp
fdivs
iret
inc
xlat
mov
gs
xchg
adc
push
mov
push
mov
test
jg
call
rolb
mov
mov
icebp
xchg
add
xor
scas
push
cmp
sub
inc
enter
mov
xor
mov
add
pop
push
push
loop
jo
out
sbb
repnz
fisttps
fsts
ret
lahf
jne
fsubrs
xchg
ffreep
scas
xchg
pop
mov
jle
test
ds
ret
mov
mov
fwait
push
lea
std
push
push
inc
jbe
cmc
sub
cld
std
push
inc
cltd
and
sbb
sub
out
cmp
aad
cmpsb
lock
add
lret
cmp
fistpl
into
pop
gs
idivb
inc
xchg
jp
jnp
mov
cmp
pop
dec
mov
adc
lock
arpl
cli
mov
shrb
add
jbe
mov
mov
jmp
pushf
pop
xchg
xchg
addb
ss
sub
loope
cmp
pop
je
and
jno
adc
addr16
inc
imulb
enter
outsb
inc
or
insl
inc
xor
into
in
jle
mov
pop
xchg
scas
push
ljmp
stc
int
xchg
add
mov
insb
pusha
xor
cmc
add
sbb
out
test
rcrb
inc
pop
leave
push
ja
shrl
or
jp
mov
hlt
sub
add
cmp
mov
ret
sub
inc
fsts
or
subb
inc
mov
push
bound
fsub
pop
mov
sub
icebp
lahf
jmp
pop
pusha
imul
cmp
outsb
mov
jge
pop
repz
fdivr
lret
dec
mov
out
das
shlb
mov
test
mov
fwait
int
into
inc
jle
xchg
or
dec
and
sarl
fsts
stc
push
aam
lret
fbstp
sbb
and
mov
sti
lock
cmp
out
ror
xchg
rorl
lods
push
pushf
das
add
add
and
stc
mov
in
xchg
mov
cmp
daa
jge
mov
arpl
movsl
mov
icebp
ljmp
cmp
nop
or
ja
std
inc
bound
test
insb
lret
xor
pop
jnp
jne
mov
or
out
mov
mov
repnz
dec
lret
mov
adc
and
stc
cmp
push
sub
sub
jecxz
sahf
mov
in
out
mov
movsb
mov
mov
inc
sub
adc
jmp
sbb
rolb
mov
and
mov
mov
stos
setnp
repz
push
mov
pushf
fstpt
pop
add
pop
and
jl
jp
cld
shll
add
icebp
cmp
mov
jae
imul
cmp
cwtl
mov
adc
jae
je
lret
fisttpll
mov
out
insb
push
lds
notl
jmp
mov
push
es
lret
roll
les
mov
popf
push
fistps
test
mov
rcl
orl
mov
xlat
sub
sbb
fidivrl
cld
shll
outsl
popf
dec
mov
fcmovnbe
jmp
mov
xor
lock
movsb
xchg
pushf
filds
adc
lret
and
and
push
fldl
outsb
fisubrl
fadds
rcl
scas
leave
pop
fistps
dec
mov
adc
mov
pop
mov
push
push
lds
pushf
daa
inc
pop
sbb
add
xchg
xchg
fsts
insb
loopne
aas
aam
push
jp
pop
xor
ja
mov
fptan
xor
push
addb
jo
mov
mov
outsl
aas
xchg
cmp
pop
sar
push
mov
and
pop
popa
in
adc
test
test
push
pop
pusha
and
andl
push
xor
clc
pusha
rclb
fxch
shlb
push
inc
jae
xchg
adc
pushf
mov
lock
nop
xchg
and
lea
xlat
les
push
jp
movq
aam
pop
mov
cwtl
add
into
shlb
inc
pop
inc
outsb
mov
loope
push
xor
inc
adc
mov
pop
push
or
test
mov
rcll
lods
jb
mull
and
repnz
inc
push
jae
lea
rcr
int
lds
fstpt
add
jb
scas
scas
enter
pop
xchg
ret
or
or
jbe
mov
push
inc
ret
jno
adc
adc
add
das
fisttpl
sahf
sub
aad
mov
fbld
xchg
inc
inc
adc
cmp
icebp
lea
repz
and
push
loop,pn
inc
xor
ret
out
stos
test
pop
push
mov
mov
dec
shl
insb
loopne
xor
imul
ret
or
enter
push
mov
mov
sbb
xor
push
mov
jecxz
cmpb
adc
int
and
or
stc
mov
popf
mov
int
in
cld
aaa
and
stos
xchg
sar
lcall
push
testl
lock
adc
es
inc
test
jge
das
ja
popa
mov
iret
out
test
idivl
cli
out
fldt
jb
sub
cmp
dec
cs
dec
fs
gs
jnp
mov
push
xor
das
cwtl
push
ljmp
fdivl
inc
jg
icebp
dec
arpl
and
fstl
fidivrs
cmp
les
adc
movl
ja
dec
or
les
jg
idivb
sub
test
sti
outsb
mov
mov
aaa
push
push
jbe
pop
jp
adc
push
pop
in
mov
stos
rcrl
pusha
adc
xor
aaa
test
or
sysexit
imul
in
dec
add
sub
mov
imul
adc
cmpsl
jb
imul
shl
daa
pop
shl
hlt
xchg
xchg
ss
cmc
dec
cmpsb
jl
ljmp
mov
out
mov
bound
xor
pop
fildll
inc
push
mov
out
jno
dec
mov
ds
outsb
pusha
sbb
lea
data16
xor
add
call
in
cmp
cli
cmp
jecxz
or
cmp
mov
leave
mov
mov
nop
out
in
js
les
add
jno
push
pop
mov
mov
sub
xor
sub
movsl
pushf
mov
dec
loopne
insl
std
add
test
and
or
ss
mov
push
out
ds
xorb
out
add
cmp
pop
popa
icebp
jle
push
xchg
jge
je
outsl
sub
dec
rclb
mov
lods
fists
in
add
out
or
out
add
mov
into
dec
sub
pop
fmuls
sub
movsl
shrb
ss
add
les
jbe
ret
jle
bound
inc
jmp
adc
shll
fdivrs
sbb
ja
adc
jmp
loope
push
inc
xchg
or
js
dec
xchg
cmpsb
and
mov
popf
nop
stos
mov
stc
mov
int3
inc
sub
ret
das
lea
stos
inc
mov
xchg
cmp
dec
cld
mov
fistpl
mov
lock
jecxz
bound
lock
outsl
inc
fstl
cmpsb
dec
mov
ret
push
das
sub
pop
cmp
sti
inc
jecxz
mov
push
or
dec
or
push
faddl
mov
test
dec
sti
xchg
xorl
in
and
lret
in
jno
in
ret
cltd
bound
xlat
xchg
js
lock
adc
mov
inc
imulb
ja
andl
and
jae
rcrl
imul
test
mov
jb
push
jbe
xor
jecxz
enter
dec
iret
push
int3
xor
xchg
dec
fildll
sbb
mov
iret
popa
pop
sub
xor
repz
pop
pop
fsubrl
add
into
add
or
adc
cltd
cwtl
xor
hlt
pand
jbe
call
out
dec
xchg
jp
adc
addr16
dec
sbb
rorl
ret
sub
ret
subb
sarb
mov
ds
lea
sbb
repnz
rorb
pop
sub
push
push
mov
cmpsl
mov
rcl
aad
ds
dec
in
pop
inc
into
inc
fiadds
std
pop
cld
xor
lods
ret
lods
cmp
scas
enter
cmp
jge
loop
mov
rclb
or
inc
pop
jo
data16
fistpl
inc
roll
xchg
jge
inc
test
lock
cs
popa
or
xchg
aaa
cli
push
ljmp
and
jo
into
sub
int
hlt
loop
push
mov
mov
xor
call
pop
mov
js
and
ss
pop
dec
jns
repnz
sahf
test
pop
xor
lock
pop
pop
pop
mov
sbb
pop
fistl
mov
in
out
iret
mov
mov
hlt
ja
mov
std
sahf
vorps
mov
pop
add
inc
and
stos
inc
push
pop
mov
dec
mov
sub
ret
add
sarb
pop
outsl
mov
test
pushf
aam
test
scas
rorb
jge
mov
mov
divb
sub
mov
add
xchg
dec
lcall
mov
push
pusha
loope
dec
aad
push
lea
mov
stos
xchg
stc
addr16
addr16
cli
je
test
adc
iret
inc
les
out
repz
xor
hlt
stos
sbb
lods
andl
mov
repz
mov
arpl
adc
mov
adc
test
cli
or
dec
shlb
mov
enter
scas
and
push
int3
lahf
call
loopne
pop
cmp
test
mov
fmulp
je
push
mov
imul
mov
sub
out
jp
inc
xor
inc
repz
push
testb
push
inc
jbe
into
scas
dec
jae
pop
xchg
insb
aam
jle
insl
mov
leave
in
jmp
mov
je
sub
test
mov
bound
sbb
outsb
dec
pop
ljmp
outsl
out
inc
sub
xor
adc
mov
pop
movsb
mov
jp
push
lock
and
or
mov
mov
mov
inc
jp
aam
sbb
mov
into
and
iret
pop
lret
insl
inc
addr16
mov
enter
cmp
shll
sub
lret
add
sub
sbb
push
cmpsb
call
pop
lcall
jmp
jmp
inc
jecxz
outsl
jg
cwtl
jno
popa
repnz
add
xor
and
shll
rcll
add
jb
bound
mov
mov
popa
repnz
add
xor
and
shll
rcll
add
jb
bound
mov
mov
popa
repnz
adc
push
and
adc
add
jb
arpl
mov
mov
popa
lock
add
inc
and
rcr
imul
ljmp
dec
inc
pop
jbe
data16
pop
je
push
jnp
cmp
call
xchg
mov
mov
xor
pop
sbb
js
or
sbb
sub
cmp
enter
call
xchg
out
dec
mov
in
mov
sbb
sub
cmp
cwtl
cmp
cld
loop
cli
mov
jbe
sete
into
push
fldlg2
sub
lea
popl
jno
inc
mov
xchg
lock
mov
jne
mov
imul
inc
test
add
fistps
xchg
ds
adc
es
out
xchg
lcall
imul
push
jb
sbb
imul
cmpsb
cltd
test
mov
mov
mov
lea
notb
lret
roll
fisttpll
stos
call
ja
cwtl
or
leave
jecxz
mov
jg
adc
sbb
insb
mov
movsl
mov
jbe
data16
or
sub
fadds
mov
aas
and
push
jns,pt
push
dec
movsb
xchg
mov
xchg
loope
sub
fstpl
or
adc
pop
das
jg
arpl
ret
inc
jae
mov
xchg
mov
mov
jmp
cmp
sub
sbb
or
fs
sbb
sub
cmp
enter
call
xchg
push
dec
inc
pop
jbe
data16
or
sbb
sub
cmp
enter
call
xchg
push
dec
loopne
mov
cmpsb
test
pop
jg
inc
mov
mov
mov
outsl
pop
add
push
xor
cmp
and
aaa
push
ret
and
jae
or
inc
xor
fadd
outsb
inc
in
xor
xchg
aaa
data16
mov
adc
push
lahf
test
mov
xor
imul
es
sbb
popf
stos
sarl
movsb
out
scas
push
xor
pop
rorb
hlt
fdivrs
pop
repnz
mov
xor
jbe
push
and
test
push
imul
and
rolb
fimuls
in
mov
mov
push
xlat
and
call
call
sbb
cmp
push
lods
push
mov
push
mov
fisubrs
xchg
out
add
fs
iret
addr16
cwtl
dec
mov
or
mov
lret
jnp
int3
stos
lock
lcall
sbb
push
ret
cltd
ss
xchg
mov
mov
jb
enter
jae
rcrl
nop
outsb
mov
mov
mov
ja
fcmovnb
loopne
les
jno
add
pop
jo
mov
pop
and
inc
ja
mov
cs
mov
sub
jnp
ret
imul
inc
xchg
fcomps
outsb
dec
mov
addl
pop
or
xchg
jle
movsb
jbe
or
cmp
movb
mov
scas
cwtl
mov
ja
rclb
lcall
insl
cmp
add
cld
pop
xchg
popa
jmp
xor
insb
xor
mov
cs
scas
inc
arpl
fnstcw
lret
in
xor
mov
fistpl
xchg
cmp
and
cmpsb
dec
lods
inc
outsb
sub
nop
mov
xchg
popa
ljmp
push
xor
xchg
adc
mov
cmp
dec
sbb
mov
xor
shll
ja
cmp
pop
sub
inc
xor
roll
lock
addl
sbb
jl
mov
inc
push
in
enter
sbb
mov
dec
mov
adc
pushl
push
imul
pushf
test
call
jns
lret
repz
or
mov
insb
rorl
mov
sahf
or
inc
outsl
mov
jg
imul
mov
ja
sahf
stos
inc
aam
sti
xchg
shl
ficompl
sub
pop
mov
iret
sbb
pop
mov
neg
xchg
daa
mov
ds
sub
mov
xchg
adc
dec
lock
cmp
dec
and
scas
dec
andb
push
push
scas
xor
cmp
push
pop
cmp
pop
mov
or
mov
mov
imul
cmp
jo
inc
jmp
jmp
or
cld
sub
shlb
sbb
test
cwtl
cmp
mov
insl
xchg
sarb
das
enter
cmpsl
add
and
and
push
fmull
and
pop
imul
xchg
enter
ds
lods
or
xor
pop
jp
outsl
cld
decl
stos
jo
idivl
sahf
repz
xor
dec
jecxz
adc
lods
jbe
movb
cmp
dec
add
cli
pop
repnz
xchg
push
jl
mov
xor
rclb
ja
jl
xchg
movsl
sub
cmp
imul
inc
insl
sub
addr16
xor
push
sbb
jne
lock
inc
std
and
adc
test
repz
data16
je
push
mov
sbb
insb
int3
lcall
roll
mov
int
shr
sbb
fiaddl
jnp
pop
xchg
mov
adc
adc
sbb
adc
in
sbb
adc
or
mov
scas
dec
cld
and
pop
rol
push
out
dec
mov
or
xchg
call
fisttps
fcmovnb
add
stc
lahf
push
push
sarb
fimuls
arpl
insb
popf
fbstp
inc
and
jb
and
sbb
sbb
aaa
jae
jb
sub
dec
inc
add
mov
dec
jb
fadds
lock
jae
push
pop
dec
out
scas
mov
jne
and
xchg
push
sub
add
stos
shll
notl
pop
popf
stos
dec
and
mov
cmp
insb
aad
push
test
sub
imul
mov
jl
add
or
mov
xchg
fwait
push
pop
pop
jnp
mov
or
insb
outsl
add
outsl
add
jmp
lods
xor
sbb
pop
sahf
xor
enter
push
dec
andl
dec
inc
cmp
das
and
ret
pop
out
push
add
lods
pop
mov
xchg
and
insb
xor
je
sahf
add
testb
pop
push
lock
lds
xlat
repz
inc
ds
test
gs
mov
enter
or
add
jge
push
add
mov
clc
movsl
imul
mov
fwait
movsl
ret
xchg
mov
sbb
dec
xchg
or
dec
js
repz
aam
mov
jo
mov
add
adc
jmp
mov
idiv
xchg
fidivs
std
inc
cmp
pop
jno
pop
and
jne
out
loope
rcrb
das
mov
xor
and
jge
pop
mov
cwtl
sbb
sub
jg
mov
and
dec
movsl
mov
sbb
out
jnp
aam
insl
or
dec
aam
push
and
or
fstpt
jnp
inc
jo
pop
insl
mov
fsubrl
outsb
loopne
dec
es
cmp
pop
push
xchg
add
hlt
inc
jl
or
popf
fdivr
arpl
add
pop
xchg
shl
hlt
xchg
les
pop
sub
mov
add
and
jl
pop
cmp
imul
jmp
jbe
push
mov
inc
jge
test
push
adc
jb
add
sub
es
fcomp
or
out
rcrl
mov
out
repz
mulb
jg
sbb
popf
mov
cmc
inc
testl
repz
and
out
inc
xchg
cmpsb
ss
lock
repz
insb
imul
add
lods
push
fstpl
pop
jns,pn
enter
ficompl
hlt
mov
lahf
lret
pop
cmp
clc
or
cmpsb
je
sub
push
shll
fisubs
xor
cmp
popa
out
js
shl
mov
sbb
push
jbe
out
scas
sbb
add
xchg
jmp
jp
xchg
mov
in
adc
cmp
fmuls
inc
cmc
out
cmp
cwtl
xchg
clc
fsubp
je
jle
xlat
mov
inc
adc
out
fimuls
leave
xor
mov
rorl
mov
mov
sbb
jle
xchg
and
push
ret
xlat
mov
jns
dec
cld
ja
data16
mov
pop
loope
add
daa
out
push
sbb
cmp
ret
add
ja
dec
mov
arpl
mov
xor
mulb
push
xor
cmp
dec
ret
shrl
xor
loop
movsl
inc
dec
loop
out
inc
sbb
mov
or
rcr
mov
ds
out
cwtl
je
jmp
int3
pop
lods
inc
fidivl
xchg
mov
gs
daa
scas
js
lret
enter
or
std
xchg
dec
pop
mov
outsl
les
mov
std
pop
ja
arpl
mov
in
aaa
nop
dec
sbb
ja
andb
add
cmp
daa
dec
push
xchg
jmp
xlat
in
imul
and
pop
or
add
pop
dec
sbb
int
call
sbb
call
adc
sbb
in
mov
xlat
lret
ja
fcmovnb
mov
lret
mov
fs
fs
fwait
popf
test
add
xor
aaa
mov
orb
aaa
mov
mov
mov
push
jbe
jb
mov
xchg
cld
je
mov
and
push
jmp
subb
and
inc
and
xor
imul
fs
push
negb
jae
aam
cmp
fcmovu
cmpsl
dec
push
fs
insl
cld
pop
js
add
ljmp
pop
sahf
insl
sarb
int
cmpsb
aaa
cld
mov
ss
lods
mov
ficoms
rcl
add
sbb
cld
ss
repnz
negb
pop
rcll
add
mov
inc
imul
xchg
mov
sub
pop
add
pusha
test
faddp
icebp
sub
cmp
cmc
rclb
lods
test
fisttpl
adc
push
pop
lahf
sbb
addr16
jne
mov
aam
push
or
in
xlat
lock
mov
outsb
pop
pop
nop
cmpb
dec
jo
jb
out
mov
sub
push
dec
adc
add
add
and
mov
cmovo
out
sarb
mov
or
pop
sti
popa
push
or
cmc
leave
inc
lahf
push
cmpsb
lcall
stc
and
xor
popf
enter
ja
popf
mov
jmp
push
sub
inc
pusha
jbe
fs
push
adc
sbb
shl
in
jne
lahf
pusha
inc
jl
mov
fcomp
repnz
lahf
das
mov
inc
pop
cld
ret
xchg
inc
mov
test
loope
insb
xor
jle
rorl
rol
or
ror
clc
xor
popa
dec
or
xor
callw
dec
jge
testb
fdivrl
std
jne
imul
inc
mov
inc
stos
cmpsb
cltd
shr
in
xchg
dec
push
or
pop
rcrb
or
inc
std
or
fcmovu
mov
cld
jnp
adc
sub
aam
cmp
out
jb
mov
sbb
and
push
sti
stos
pusha
mov
inc
pop
clc
scas
mov
sbb
add
cmp
pusha
outsb
dec
mov
sahf
mov
inc
adc
dec
fisubs
jne
adc
and
enter
hlt
ja
cmp
and
cmpb
fs
dec
les
enter
mov
mov
sti
push
outsb
ss
cmp
mov
pushf
gs
push
fiaddl
mov
jecxz
cmpsl
cmpb
arpl
leave
sahf
pop
or
aas
mov
pop
cli
cli
cmc
sub
xor
jns
popa
xchg
lahf
sti
faddp
outsb
test
push
push
pop
fiaddl
mov
push
out
cmp
mov
sub
mov
sbb
mov
mov
lds
rol
push
fadd
jl
xchg
incb
jp
mov
cld
mov
mov
push
lret
in
pop
dec
xor
out
insl
iret
pop
mov
ja
jle
negl
sbb
pop
ds
fsubrl
xlat
and
icebp
je
loope
mov
jecxz
sbb
outsl
loope
mov
add
dec
lods
pop
stos
test
cmpl
sahf
fbstp
and
dec
or
dec
lret
popl
jge
insl
pushf
xlat
jmp
mov
movsb
jb
push
sub
das
repnz
xchg
inc
scas
aam
jmp
inc
shl
mov
mov
imulb
and
stc
loopne
sti
je
mov
xor
loop
imul
lret
xchg
bound
loopne
in
es
mov
stos
add
sahf
cmp
adc
jb
addb
loop
fwait
rcrl
lret
rorl
fisttps
sub
sub
jl
mov
mov
jne
or
sub
fsubp
arpl
adc
aaa
or
sbb
sarl
outsl
jmp
dec
mov
inc
loope
xchg
into
xor
and
sbb
mov
xchg
xchg
stc
sub
mov
and
jbe,pn
jae
shlb
lds
fadds
lds
incl
in
add
cs
mov
aas
xor
pop
scas
dec
repnz
lods
loop
push
repz
psrlw
rep
xchg
insb
jo
arpl
push
cmpsb
lret
or
fisubl
mov
jns
clc
movsb
int
iret
xchg
ret
stos
test
imul
sbb
add
test
jle
dec
lods
adc
sub
jnp
js
mov
popf
lock
pushf
xor
aad
jae
mov
test
mov
or
fdivrs
in
jmp
stc
mov
leave
or
dec
sub
hlt
jne
arpl
add
xchg
xchg
xor
sub
jecxz
inc
loope
mov
jmp
in
arpl
rorl
jle
mov
mov
jg,pn
jnp
fstpt
insl
push
movsb
stos
addr16
cmpsb
push
pop
outsl
ret
cmp
push
negb
outsb
sub
enter
jmp
cmp
outsb
ss
sahf
pop
jbe
push
xchg
nop
imul
cmp
jns
sub
int
fidivrs
pop
loopne
out
jns
mov
or
mov
addl
pop
scas
mov
movsb
mov
add
leave
shlb
adc
jno
mov
adc
pop
cmp
rcl
aas
adc
and
aaa
pop
ss
mov
fcoml
mov
dec
mov
fistpl
push
negb
call
leave
pop
push
in
mov
jb
mov
push
jno
into
in
cmp
fisubrs
fstps
xchg
sub
mov
ss
lods
fldl
aad
or
js
divb
into
pusha
leave
hlt
inc
out
sbb
mov
sbb
stos
push
popa
loopne
sbb
sub
xor
mov
arpl
sbb
push
sub
in
test
adc
jae
jnp
cmp
filds
adc
lods
jo
jmp
mov
mov
push
inc
pop
jnp
lock
cmp
cmp
pop
push
nop
mov
mov
mov
cs
hlt
mov
xchg
lret
pop
bound
int
mov
in
sub
mov
lea
outsl
mov
int
outsb
sub
lcall
pop
push
ds
add
or
mov
and
mov
cmc
iret
mov
and
sarl
push
mov
mov
pop
push
loope
push
pushfw
pop
inc
cmp
pop
pop
jne
ret
test
xchg
ss
jmp
leave
bound
add
test
pop
sbb
sbb
xor
adc
inc
xchg
add
popa
pop
jnp
cmp
push
insb
cmp
repnz
pop
xchg
mov
xor
in
insl
test
scas
rcrl
mov
xor
mov
jp
cmp
aam
int
cs
pop
cli
stos
std
or
dec
sbb
sbb
test
fucomi
pop
insb
jmp
mov
dec
jmp
out
ret
fs
imul
lret
cmp
mov
ret
cwtl
sbb
aam
mov
loope
cs
xchg
jmp
outsl
inc
frstor
jbe
pop
xchg
out
arpl
mov
sbb
into
test
or
jb
xor
mov
xchg
adc
mov
push
mov
movsb
and
dec
scas
cwtl
fistpl
mov
cld
mov
mul
test
or
sub
sub
in
test
nop
rcrl
into
pop
pop
shl
push
fwait
adc
std
loopne
dec
xor
cmpsb
cltd
andl
data16
pop
ret
adc
sbb
scas
or
add
mov
pop
jno
xor
sub
rclb
or
lahf
sbb
push
insb
mov
sub
bound
pop
and
jno
enter
std
mov
mov
pop
adc
loopne
std
leave
fldt
fcomip
jmp
mov
insb
xor
mov
mov
jne
mov
je
push
push
ret
mov
push
sbb
sbbb
in
int
pushf
sti
mov
mov
ja
dec
xor
filds
add
iret
sbb
jge
data16
add
dec
shlb
data16
push
inc
pop
imul
sub
mov
xor
push
stos
in
test
add
adc
or
jo
scas
sti
cld
or
xor
xchg
gs
mov
mov
dec
loop
jp
sub
xchg
test
sub
xor
stc
inc
mov
loop
mov
stos
fimuls
arpl
sub
xor
sbb
or
inc
sahf
imul
jecxz
xchg
fwait
in
ret
clc
or
sub
sbb
test
ljmp
lods
pop
out
enter
dec
mov
loop
xor
sbb
inc
sbb
cmp
imulb
les
imul
pop
push
dec
xchg
scas
popa
ljmp
addr16
inc
push
es
push
cs
jmp
fisubrl
outsb
loopne
dec
jmp
mov
and
dec
dec
mov
imul
sub
test
or
jnp
sbb
mov
loope,pt
shll
bound
je
jge
mov
fdivl
xchg
jge
xlat
mov
out
sbb
xor
xchg
cld
or
fsubrl
repnz
lock
sbb
pop
mov
dec
stc
cmpsw
fst
jns
sarl
int
push
ret
push
ljmp
rcrb
inc
xchg
sbb
pushw
lcall
dec
repz
incb
sbb
cli
imul
fwait
das
jecxz
add
sub
push
and
and
mov
sub
adc
mov
or
fimull
dec
add
scas
ja
mov
stos
in
mov
sub
sti
cmpsl
aam
pusha
pop
adc
cld
adc
outsl
clc
adc
jns
shl
fstps
jno
in
popf
jmp
mov
roll
xor
xor
hlt
out
sbb
push
mov
sub
or
sbb
sbb
pop
mov
dec
inc
aam
xchg
jnp
xor
mov
sbb
int3
or
ljmp
fdivs
jl
pop
outsl
mov
mov
pop
xor
xchg
sub
cs
sbb
push
push
cmpsb
adc
aad
mov
or
inc
js
xor
aam
aad
call
pop
test
arpl
daa
mov
xor
dec
outsb
mov
add
or
gs
pop
sti
rcl
imul
cmp
fstps
mov
xor
push
fwait
xor
xor
fucomip
add
aam
sub
punpckhwd
inc
xchg
arpl
pop
xor
lods
fsts
sub
xor
add
lea
les
jg
jae
mov
dec
cmp
cmpsb
lret
repnz
fs
cmp
mov
jo
fs
cli
push
xchg
dec
imul
cmp
movsb
sub
cltd
adc
jmp
pop
out
cmp
rorb
mov
mov
scas
dec
out
adc
repz
test
insl
mov
mov
pusha
lret
xchg
and
mov
clc
pushf
xor
xchg
cltd
dec
mov
mov
repz
jle
repz
test
xor
sub
pusha
mov
push
mov
cwtl
sub
js
scas
dec
std
or
pop
add
scas
push
jne
loop
jg
scas
hlt
ljmp
cld
xor
or
mov
push
int
jecxz
push
or
add
shlb
shrb
in
lret
adc
jle
enter
inc
imul
pop
outsl
stc
cmp
mov
xchg
xchg
scas
jp
and
stc
addl
mov
mov
sub
sbb
jnp
cli
adc
or
or
fiaddl
dec
xchg
ja
adc
cmc
and
mov
pop
jns
dec
dec
push
arpl
ljmp
jmp
in
mov
sti
insl
add
jno
int3
inc
rclb
inc
and
dec
fdivr
sti
mov
or
js
roll
cwtl
test
in
insl
movsb
dec
fstpl
lea
xchg
es
js
leave
inc
insb
stos
int
push
adc
fildl
sub
and
dec
add
and
sbb
mov
xor
setno
lret
xor
icebp
inc
mov
cmp
out
daa
fcmovne
divb
and
test
popa
fldl
inc
inc
jl
fnsave
mull
outsl
daa
or
daa
out
fbstp
push
hlt
dec
cmp
cmp
mov
mov
scas
sbb
pop
outsl
jmp
test
lahf
imul
pushf
or
fninit
xorb
lea
out
fmulp
sub
stc
arpl
jecxz
aam
int3
loopne
aad
mov
mov
stos
or
rolb
repnz
mov
mov
cmp
xor
lret
ja
daa
mov
sub
add
sbb
scas
pop
inc
cli
ret
xor
js
or
sbb
sub
cmp
enter
call
xchg
push
dec
inc
pop
jbe
data16
or
sbb
sub
cmp
enter
call
xchg
push
dec
jbe
push
push
push
sbb
sub
cmp
enter
call
xchg
cwtl
mov
dec
mov
sub
inc
jl
or
cwtl
ss
aaa
cmp
call
push
addr16
push
pop
inc
push
mov
data16
fcmovne
je
pop
pusha
sub
aam
in
hlt
xchg
test
mov
inc
inc
push
jbe
data16
add
cwtl
ss
inc
hlt
mul
out
push
jmp
xchg
mov
cmpsb
mov
inc
push
jbe
data16
cmp
sub
lret
sbb
mov
mov
jmp
mov
inc
and
jbe
or
fbstp
lea
mov
or
es
mov
js
sbb
loope
ljmp
cltd
enter
call
sub
inc
test
mov
in
test
cmp
inc
dec
push
jno
adc
push
jae
mov
dec
xchg
push
imulb
jns
movsb
sti
xchg
shll
push
test
sbb
data16
xor
jl
fbld
lret
pop
cmp
or
mov
imul
cmpsb
mov
dec
and
push
mov
arpl
xchg
nop
les
fwait
hlt
xchg
out
cmpsl
dec
stos
test
dec
aam
hlt
xchg
mov
les
mov
movb
xor
loopne
jle
add
adc
es
inc
adc
hlt
out
xchg
test
insb
mov
cmpsb
ficoml
push
xor
cvtps2pd
jo
jnp
dec
and
andb
xchg
jmp
loopne
in
aad
add
adc
push
imul
dec
je
mov
xchg
xor
out
xchg
aam
fcomp
xor
inc
adc
xor
pop
pop
pusha
push
adc
and
xor
aam
in
hlt
xchg
test
mov
inc
inc
push
jbe
data16
add
adc
and
xor
aam
in
hlt
xchg
test
mov
inc
arpl
call
jp
jg
add
mov
adc
testl
or
movsb
loop
inc
daa
xorl
xchg
test
iret
pusha
inc
push
pop
rcrb
push
inc
push
fisttpl
mov
cmp
fsubl
sub
arpl
mov
mov
inc
mov
fs
add
xor
movsb
mov
lods
mov
sub
stc
cmp
rcl
andl
xor
je
push
sub
or
fldcw
mov
dec
subl
push
cmpsb
sar
jecxz
dec
xchg
xchg
sbb
sbb
dec
pop
mov
or
add
test
ret
push
or
test
out
loopne
loopne
cmc
fldenv
cmp
sub
cmp
dec
mov
pop
push
fcmovne
sahf
pop
in
cmpsl
mov
daa
neg
push
adc
insl
insb
cmc
inc
mov
jo
repz
xchg
jne
ss
cmp
decb
pop
jp
mov
inc
fs
or
sub
shlb
stos
in
incl
ret
and
add
fwait
outsb
sti
icebp
sub
mov
rolb
sbbl
shl
mov
ljmp
pop
mov
pusha
push
mov
aad
ds
mov
jl
cmp
out
stos
js
dec
dec
sahf
and
movsl
jo
ljmp
jb
cmp
scas
xchg
push
xchg
push
cmp
sahf
push
out
jmp
cmp
sbb
imul
cmp
jae
xchg
or
dec
xchg
push
pop
stos
pusha
dec
clc
shll
ja
pusha
lret
ljmp
mov
dec
dec
nop
mov
inc
or
ret
loop
fsubrs
out
lds
movsb
sar
fidivs
sub
adc
movsl
shl
mov
sbb
inc
sti
ja
cmc
jmp
mov
push
xchg
push
pop
ds
xchg
push
popa
mov
dec
mov
sub
or
or
dec
pop
or
mulb
jle
mov
sbb
repnz
xlat
xor
add
into
test
sbb
inc
movsb
push
cmp
jle
arpl
in
mov
cmc
mov
outsb
icebp
pop
mov
and
pop
sub
lret
jo
leave
sti
inc
cltd
mov
icebp
pop
fstl
in
jns
sti
ret
mov
sbb
mov
jnp
adc
push
repz
lock
jp
add
shl
js
mov
mov
mov
cmp
enter
pop
int3
imul
sub
xor
xor
inc
push
mov
adc
xchg
inc
movsl
fcomps
movsl
inc
sub
aas
scas
sbb
frstor
mov
aad
inc
in
dec
adc
lret
sbb
push
mov
lahf
mov
mov
loop
and
jne
loop
jno
mov
xor
or
xrstor
add
pop
sub
pushf
sbb
dec
mov
sbb
push
addr16
push
jbe
xchg
sahf
jp
subl
sbb
mov
push
mov
stos
sbb
dec
out
mov
int
rcl
aad
jle
jnp
mov
mov
and
inc
js
ja
stc
sbbl
mov
mov
jnp
mov
lods
pusha
xchg
mov
or
fistpll
test
xchg
stos
pop
scas
pusha
mov
jge
data16
stos
out
mov
sbb
sub
mov
xchg
pop
aam
in
daa
add
sub
cli
add
addr16
push
fsub
sbb
stos
jo
or
rorb
out
stc
sbb
push
and
hlt
cmpsl
push
inc
lods
xchg
inc
xchg
fwait
push
mov
and
pop
popf
rcrl
inc
lret
mov
jmp
in
clc
push
loopne
pusha
pop
lds
mov
aad
ljmp
sbb
jno
icebp
or
jne
inc
lods
lret
in
mov
rcrb
dec
je
and
sub
repz
popf
fisubs
jp
inc
in
nop
pop
pop
mov
fwait
or
cmp
daa
xchg
add
in
and
dec
mov
pop
jb
call
pusha
fnclex
adc
jg
out
mov
enter
dec
leave
inc
pop
or
test
mov
pop
jb
push
jno
fiadds
xchg
pop
and
pushf
enter
lret
cld
fwait
aaa
or
int
adc
sbb
push
jb
fldenv
lahf
cmp
adc
test
inc
push
and
sarl
insb
adc
push
xchg
mov
xor
mov
dec
pop
ss
xchg
sbb
and
jmp
pminsw
cmp
mov
cmp
inc
loop
jmp
sahf
sbbb
fsubp
or
jmp
in
out
jp
pop
jb
lods
or
mov
mov
fstl
jb
fwait
mov
pop
pushf
leave
dec
icebp
aam
jmp
xchg
loope
xor
push
in
movsl
loopne
jbe
inc
mov
ja
and
xchg
and
inc
cs
mov
pop
cld
or
fsubl
ret
outsb
scas
clc
add
lods
xor
dec
test
mov
pop
push
aam
inc
cmp
inc
push
adc
jp
cmp
cmp
testb
shl
roll
ficompl
adc
pop
adc
or
adc
cwtl
jb
cmp
inc
add
adc
rcll
mov
dec
imul
outsb
cmp
xlat
stos
sbb
out
jl
ficomps
jmp
arpl
and
sub
repz
sub
push
ja
cmpsb
pop
push
xor
bound
dec
push
lret
aad
jge
jbe
shll
out
dec
ja
fdivl
add
mov
inc
das
dec
ret
das
and
sbb
lods
inc
decb
iret
imulb
sbb
pop
subl
xor
mov
dec
mov
loopne
mov
jae
adc
scas
cltd
add
pop
fwait
jge
add
pop
and
ss
cmp
xchg
or
xchg
call
sub
push
and
sbb
aaa
das
movsl
xchg
rorl
lcall
lret
arpl
das
into
insl
hlt
or
shlb
push
xchg
imul
sub
mov
jbe
jl
push
fadds
adc
icebp
cmp
inc
pop
sub
xor
dec
cmp
out
addr16
arpl
les
fiaddl
and
mov
out
scas
movsb
fiaddl
inc
pop
ljmp
jmp
test
enter
push
cmpsb
popa
in
mov
xchg
sub
mov
scas
xchg
xchg
xor
adc
cmpsl
imul
jg
in
xabort
and
lahf
jb
subb
in
xchg
push
cltd
and
fwait
push
cmp
or
xor
addr16
call
adc
mov
lcall
dec
add
mov
push
movsl
jne
mov
cmp
mov
test
sahf
and
ret
xor
push
lcall
dec
inc
out
aam
sarb
hlt
pop
out
mov
cmp
fadd
cmp
stos
inc
push
xorl
fdivr
xlat
xor
cmp
fisttps
enter
sarl
xchg
ss
pop
dec
les
adc
leave
sbb
fwait
ss
jnp
jb
inc
es
push
and
mov
jb
xor
mov
cmp
add
add
lahf
dec
mov
jb
test
adc
je
mov
xchg
pop
in
pushf
jmp
or
in
incl
insb
aaa
cld
or
or
das
sub
ljmp
add
mov
int
cmp
dec
sbb
dec
faddp
movsb
xor
cli
sbb
mov
inc
jbe
out
pop
jp
cmpsb
add
and
test
shrl
sbb
inc
repnz
push
push
cmp
pushf
and
sub
dec
lock
sub
gs
mov
out
xchg
inc
jb
pop
outsb
scas
xlat
xor
aam
arpl
lahf
xchg
pop
sub
loopne
iret
loopne
popa
aam
mov
xor
xchg
mov
push
mov
das
pop
in
orb
out
testb
dec
jmp
js
mov
push
mov
pop
insb
pop
push
or
jmp
lds
sub
xchg
cmp
inc
imul
inc
mov
mov
test
inc
jb
mov
or
cld
outsl
inc
jp
mov
test
in
inc
sub
scas
xor
aad
in
push
add
sub
mov
inc
es
pop
into
jo
sbb
push
push
insb
sbb
xor
fimull
testb
inc
fists
mov
sub
xor
inc
add
sbb
in
or
mov
xchg
xor
push
xor
mov
mov
rcll
add
or
mov
and
fwait
xlat
cs
or
daa
gs
push
jns
ret
sbb
int
aas
cli
jecxz
testl
push
dec
pop
adc
fildll
cmp
and
loope
rcl
ljmp
nop
mov
sahf
jb
cmp
notl
dec
inc
sti
xchg
cmp
daa
out
loop
in
cmc
ret
cmp
and
fisttpll
xchg
sub
cmp
mov
call
xor
movsb
int
repnz
into
daa
xor
aam
sub
mov
xchg
push
push
lods
dec
inc
js
ficoml
ss
push
jbe
leave
mov
inc
nop
rorl
cmp
ds
lea
shl
cmp
jg
push
pop
dec
icebp
push
aas
mov
add
xchg
sti
and
jl
imul
cwtl
push
scas
jge
cmp
inc
jne
push
add
pushf
es
pop
sbb
rcrl
jl
add
mov
xor
scas
xchg
cmp
jl
sbb
jg
or
aas
xchg
xchg
jle
bound
int
mov
outsl
in
jge
inc
adc
pop
add
or
fsubl
imul
cwtl
sub
notl
mov
bound
fcomip
and
imulb
out
fstl
dec
cmp
push
dec
es
jmp
jns
fmuls
xlat
jg
sub
jb
adc
or
add
cltd
sbb
xor
shll
inc
xor
mov
jge
mov
push
in
inc
or
lret
push
inc
fsubr
add
sahf
aad
out
scas
ret
mov
cmc
cli
repz
movb
idivb
jmp
lds
sarb
xorl
mov
and
scas
in
push
sub
rolb
pushf
mov
dec
pop
dec
sub
std
bound
sub
fldcw
push
mov
sbb
push
dec
fdivrs
inc
inc
mov
fdivl
cltd
sub
fadds
xchg
cmp
add
std
push
std
test
mov
pop
stc
cs
and
push
inc
je
cmpsb
arpl
negl
loopne
subl
sub
popf
popf
lods
xchg
movsl
jl,pn
lret
jne
cmc
add
or
pop
sbb
sbb
lret
or
mov
jp
outsb
mov
sbb
orl
notb
xchg
sbbl
sub
addb
pop
push
push
sub
and
sub
movsb
mov
sahf
fistpl
sbb
aad
mov
and
lods
les
cwtl
push
mov
xor
jmp
xchg
hlt
pushf
sub
fsubs
mulb
sbb
fwait
aad
fldenv
fstpl
insb
in
xor
or
push
jg
rcr
loop
ss
jge
loopne
push
xchg
mov
xchg
repz
xchg
sub
push
push
je
or
jmp
push
adc
hlt
call
adc
lock
sti
enter
sub
cmp
mov
jmp
test
pop
lea
adc
cmp
cs
rcrl
test
loope
test
pop
fstpl
push
pop
das
xlat
push
mov
mov
xchg
aam
mov
fldl
sub
call
pop
ds
push
mov
loop
stc
pushf
leave
call
jmp
cmc
mov
push
add
sbbb
jg
imul
sub
push
jnp
pop
mov
pop
or
decb
icebp
mov
push
ljmp
lret
push
cmp
enter
int3
and
inc
fs
or
nop
mov
iret
dec
jno
shlb
mov
pusha
sub
push
addb
mov
es
enter
xor
xchg
xchg
sub
sbb
sub
insb
push
orl
mov
fdivrs
pop
iret
int3
inc
popa
jae
icebp
jg
pxor
adc
data16
xchg
enter
hlt
mov
arpl
xchg
aaa
ret
inc
jno
mov
jmp
push
mov
ret
sar
push
imul
push
scas
push
mov
and
sbb
negb
popa
mov
shll
mov
in
lock
jecxz
in
loope
inc
sub
loopne
xchg
in
push
inc
ret
xchg
insl
add
mov
jle
mov
cmp
jmp
push
jno
push
insb
xchg
scas
add
or
pop
mov
pop
mov
nop
sbb
test
jl
inc
es
outsb
cmp
cli
xlat
jnp
xor
aas
mov
je
push
icebp
ret
fistps
dec
mov
inc
lahf
bound
aam
insl
popw
daa
addr16
mov
xor
sbb
cmpsb
lods
cltd
pop
repz
and
sub
cmp
jg
jle
pusha
mov
fildll
push
das
bnd
pop
shlb
push
xor
pop
lcall
cmp
jl
mov
and
mov
xchg
das
pop
sub
std
lock
rcrl
inc
popa
cmpsb
pop
dec
inc
mov
int3
icebp
sub
lock
mov
mov
mov
mov
in
add
sbb
mov
dec
add
repz
jbe
dec
adc
sbb
out
push
and
push
fidivrs
cltd
jl
sub
leave
mov
dec
xchg
inc
dec
je
sub
bswap
jb
hlt
cmp
xchg
sahf
jp
bound
clc
jg
test
jb
mov
daa
cmpl
mov
loop
loop
fildl
shll
mov
adc
mov
jo
mov
push
shll
or
imul
lahf
push
fwait
lcall
ficoms
gs
and
in
ljmp
inc
mov
cmpsb
mov
xchg
and
inc
fsubrp
cmp
dec
cmp
add
jg
scas
add
jmp
repnz
or
lcall
repz
repnz
sub
pop
sti
xchg
out
jne
sbb
arpl
rcll
ja
ds
mov
adc
jl
jno
addr16
das
dec
int3
sbb
stos
jl
test
jmp
pop
lret
inc
in
pop
aaa
jnp
xor
pop
movsl
aas
rolb
je
push
xchg
or
stos
stos
imul
js
sbb
push
loopne
mov
div
fildl
push
lea
fmul
pop
aad
sti
mov
rcr
add
popf
lea
inc
dec
dec
xorb
iret
inc
jp
pop
bound
sub
push
shll
je
sub
push
clc
lds
mov
movl
aad
push
aad
jl
dec
push
es
ret
xchg
idivb
stos
mov
movsl
outsl
mov
pop
mov
inc
cwtl
xor
sub
fwait
int3
inc
mov
sub
xlat
lods
insl
adc
in
xchg
inc
sbb
iret
cmpsb
ret
xchg
pop
cs
fadds
cmp
gs
sbb
addr16
out
and
xchg
mov
xchg
in
sahf
lock
frstor
pop
push
adc
push
mov
movsl
xchg
stos
cmp
mov
std
es
pop
aad
inc
add
and
aaa
test
aas
pop
in
out
test
or
mov
lods
iret
lahf
jne
jmp
scas
mov
xor
xchg
mov
pop
pop
les
mov
sbb
dec
bnd
add
cmp
sub
fisttpl
es
inc
mov
xchg
mov
xor
inc
fstpt
pop
ficomps
popf
cli
enter
push
fistl
dec
dec
cltd
js,pt
negl
xchg
imul
inc
das
movsl
cmp
nop
push
jmp
cmc
sub
or
cmp
cmpsb
sub
sbbb
in
nop
js
xchg
mov
or
xchg
out
int
sub
mov
shll
or
push
adc
out
test
movsb
leave
pop
cli
outsb
scas
cmc
mov
clc
out
ds
shrl
add
jg
add
jle
popf
mov
mov
sbb
pop
lds
or
enter
cwtl
cmpsl
rcrl
mov
aam
jle
aaa
sub
adcl
mov
mov
jg
test
pop
in
mov
dec
std
xchg
mov
test
jae
out
in
fsts
test
push
fwait
into
insb
sub
pop
push
pop
loope
inc
sbb
cmp
test
or
adc
int
ret
jecxz
dec
and
ret
cmpsb
mov
lcall
addr16
je,pn
cmp
nop
inc
cld
add
fadds
cmp
pop
push
enter
push
pop
movsl
and
call
insl
cmp
push
hlt
lods
dec
fstp
adc
outsb
test
pusha
mov
sub
clc
mov
or
pop
inc
pop
shlb
xchg
lock
cmpsb
add
add
mov
fcomip
ss
rorb
xchg
push
push
fldt
lahf
insb
xchg
jo
pushf
add
sti
daa
faddl
out
iret
fldl
push
imul
repz
daa
push
aaa
notl
inc
fsubr
cmp
xchg
mov
and
dec
cmp
cmpsl
adc
ret
mov
adcl
insl
popf
lds
fstpl
inc
add
and
and
jecxz
cmp
mov
in
adc
inc
jae
stos
mov
dec
mov
and
out
xchg
mov
xchg
test
hlt
inc
cwtl
xchg
inc
outsb
cmp
mov
cmp
repnz
xchg
or
fwait
mov
jl
enter
sub
cmp
shr
adc
jns
adc
es
popf
xchg
lods
push
fidivs
adc
mov
push
dec
jnp
inc
sahf
ffree
push
stos
bound
mov
xlat
and
loope
xor
jns
adc
jecxz
cmp
sub
add
mov
sub
mov
and
rcrb
mov
cwtl
jecxz
adc
inc
mov
lahf
repnz
pushf
mov
rcr
fsubrl
xchg
xchg
push
add
dec
ret
aaa
inc
mov
jge
adc
pop
cwtl
enter
jl
inc
clc
leave
mov
dec
push
nop
xchg
repnz
or
jmp
mov
ds
push
enter
sbb
jo
push
add
shll
mov
inc
jnp
add
sahf
xchg
add
mov
adcb
lahf
ljmp
jl
out
jmp
xchg
xchg
jbe
scas
sbb
push
xor
pop
andl
xchg
adc
loope
add
cmp
dec
push
jae
out
hlt
std
xor
jl
in
and
xchg
add
or
cmp
cs
fs
test
jae
xchg
data16
ret
negl
xchg
and
jns
loope
pop
dec
sbb
rol
mov
inc
fsubrl
mov
imul
ret
repz
mov
add
push
ret
outsl
in
mov
movsl
adc
push
shrl
ja
mov
out
mov
and
mov
sti
sbb
mov
sub
outsb
imul
mov
cmpsl
adcl
pop
pop
inc
mov
xchg
pop
jne
in
jmp
lods
push
jae
jecxz
aad
mov
imul
jb
xor
mov
mov
dec
jb
rcrb
mov
xchg
sbb
lret
dec
cmpsb
loop
incl
stos
outsb
mov
outsl
or
sub
push
cmpsb
and
add
jge
inc
lock
rol
xchg
rorl
cli
dec
lds
xchg
movsl
popf
add
cwtl
pop
add
fcomi
test
push
ficomps
aam
push
xchg
sbb
jmp
jns
in
scas
outsl
xor
mov
xchg
sbb
xchg
mov
pop
les
mov
mov
sbb
mov
movsl
loop
add
or
mov
imul
data16
sub
jo
pop
addr16
mov
push
mov
in
sbb
insl
ja
mov
mov
movsb
dec
cmp
xchg
nop
jmp
mov
scas
orb
insb
mov
out
mov
pop
leave
stos
shr
mov
rcl
mull
mov
jns
cmp
jbe
imul
fistl
data16
add
adc
and
xor
aam
in
hlt
xchg
test
mov
inc
inc
push
jbe
data16
add
adc
and
xor
aam
in
hlt
xchg
test
mov
inc
sbb
sbb
je
add
mov
sbb
aam
in
hlt
xchg
test
mov
inc
inc
push
jbe
data16
add
adc
movsb
es
cmp
jle
in
and
imulb
pop
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
mov
ss
dec
scas
xor
test
xor
arpl
jae
inc
notb
mov
ss
inc
jecxz
repz
jbe
xchg
xchg
xor
jae
inc
notb
mov
ss
inc
jecxz
repz
jbe
xchg
mov
jno
jb
aaa
movsl
and
sub
ja
es
xchg
dec
ret
add
lea
pop
dec
sarb
dec
es
arpl
enter
lock
push
inc
jecxz
jbe
lret
sahf
fnstcw
push
sbb
pop
push
dec
ja
arpl
mov
stc
mov
jg
adc
test
xor
xchg
jne
mov
jbe
jae
imul
push
out
xchg
in
xor
cs
test
sub
inc
xchg
xchg
arpl
lea
dec
jge
push
xlat
xchg
jecxz
ror
push
mov
test
sahf
jg
cld
cmp
jae
inc
imulb
sbb
leave
shrl
fnstsw
ret
xchg
shll
pusha
push
sti
faddl
and
and
inc
hlt
inc
lds
ss
inc
jecxz
repz
jbe
xchg
xchg
xor
arpl
jae
inc
idivb
arpl
jo
and
repnz
pop
repz
repz
and
sbb
inc
out
xchg
and
xor
fistl
jbe
or
pushf
cmp
out
sti
pusha
icebp
push
testb
push
repz
jbe
xchg
xchg
xor
arpl
jae
inc
notb
mov
ss
inc
jecxz
repz
jbe
xchg
xchg
xor
arpl
jae
inc
notb
mov
dec
push
xchg
xchg
movsb
sbb
dec
jmp
test
inc
mov
inc
lahf
and
test
in
fistl
xor
inc
lret
movsl
push
fnstenv
lahf
sahf
sbb
inc
jns
lods
fwait
mov
lret
mov
jnp
mov
push
clc
shlb
inc
xchg
mov
push
repz
sub
xchg
repz
stos
pop
pop
pop
mov
and
aaa
jp
add
cmp
cmc
les
std
cs
jo
jg
push
push
ficompl
or
pop
mov
es
ja
imul
pop
aas
jl
les
lret
in
and
aam
inc
or
das
pop
sub
fcomps
cmpsl
movsl
es
fidivrl
and
cmpsb
push
add
mov
into
jmp
cmp
mov
outsb
sbb
cs
cmpsl
mov
movsl
popa
mov
shrb
pop
inc
dec
jge
and
orl
inc
or
push
lahf
fldt
loopne
cli
xor
jae
xchg
dec
lret
inc
sub
test
and
leave
int3
popf
dec
mov
mov
sub
adcb
mov
and
sbb
sarl
push
mov
or
lea
mov
mov
std
jae
in
iret
push
ret
dec
es
push
aam
dec
into
mov
addr16
or
xor
lret
sub
jg
cs
sarl
loop
mov
mov
mov
push
aam
pusha
gs
or
mov
push
test
mov
push
fsubl
mov
loop
leave
mov
mov
jl
inc
mov
es
aaa
sub
int3
sbb
add
mov
xchg
mov
rol
or
int
int
int
sbb
push
xchg
jge
insl
dec
jbe
pop
cmp
shlb
xor
cmpl
jle
nop
iret
pop
inc
adc
add
jb
push
sbb
xorl
bound
daa
xchg
testl
fwait
pusha
cmp
fdivl
repz
cwtl
cld
sbb
sbb
pusha
lock
jae
leave
shll
mov
daa
pop
jg
in
mov
out
and
les
dec
mov
aaa
loope
cmp
ret
mov
inc
das
ss
imul
jb
jg
sub
xor
or
dec
dec
fdivp
add
cmp
sub
xor
xchg
fmuls
fidivrs
roll
or
in
imull
nop
jno
push
add
popa
shlb
inc
mov
add
insl
inc
adc
jae
test
inc
and
dec
jae
dec
sbb
cmp
lock
inc
js
cmp
and
and
mov
inc
jmp
in
inc
lcall
sub
enter
es
loopne
dec
lahf
fsubs
cmpsl
adc
inc
outsl
xchg
cmp
ret
mov
pop
outsl
xchg
movsb
imul
inc
push
pop
rolb
fwait
mov
out
xchg
pop
inc
pop
into
sbb
shll
mov
mov
out
insb
xchg
push
aam
test
popf
notb
pop
mov
mov
lea
in
iret
ss
jle
adc
xor
pop
sbbl
jno
gs
popf
push
shrb
imul
dec
ret
jecxz
sbb
jg
or
bound
repz
xor
jb
sub
imul
pop
out
fistl
jns
sub
pop
ja
sub
lds
movd
or
xor
xchg
lret
inc
cmpsb
mov
test
jnp
daa
ljmp
movsl
adc
jmp
lea
stos
in
pop
mov
cmp
sub
dec
xor
out
xor
cmp
inc
push
aas
cmpsb
jmp
shrb
fwait
mov
jp
xadd
out
aad
pop
lret
subb
stos
idiv
mov
stos
jl
pop
jmp
fdivrl
xchg
mov
jmp
xor
ljmp
jnp
push
bound
dec
xor
pop
fs
xor
push
ficomps
sbb
jnp
stos
rcll
call
int
xchg
cmp
sub
insb
lods
mov
enter
jb
jbe,pn
pop
daa
rcl
pop
loopne
mov
ljmp
cmp
lret
push
aam
or
xchg
int3
in
cmp
inc
cmp
jge
loopne
pop
mov
movsl
xor
enter
add
dec
hlt
sub
or
adc
xchg
jno
add
xlat
ret
nop
fmull
jb
in
mov
push
nop
xchg
add
sbb
or
jno
test
add
loopne
mov
push
notl
push
cld
jg
sbb
mov
push
xor
adc
inc
mov
xchg
or
or
add
cmp
mov
ds
adc
jecxz
shll
or
and
sub
mov
pop
repnz
in
mov
jb
mov
negl
cltd
mov
movsl
test
mov
notl
insl
inc
repnz
and
jnp
movsb
cwtl
jbe
mov
sbb
adc
sub
lock
xchg
mov
jmp
dec
pushf
push
sub
shll
lret
xchg
sub
das
movsl
lds
fwait
lret
andb
repnz
cmp
rorl
mov
pushf
jl
mov
cmp
mov
push
inc
or
icebp
in
sbbb
lea
sahf
fcomip
inc
scas
leave
fldt
aaa
inc
testb
and
stos
ret
lods
mov
mov
pusha
pop
test
sub
aad
mov
aad
in
pusha
jns
mov
adc
ds
into
and
or
xchg
inc
pop
adc
incl
pushf
xchg
pop
cmp
test
fwait
movsl
cmp
mov
sub
test
mov
xchg
inc
jle
jecxz
push
sbb
pusha
push
jle
mov
push
and
das
popf
test
lret
pop
add
sbb
mov
scas
push
xchg
jl
push
push
scas
shr
xchg
push
stc
xlat
push
pop
and
les
cli
nop
mov
mov
jl
lods
sub
stos
stc
and
pop
in
inc
scas
test
jle
imul
lahf
sbb
fsubrs
and
inc
add
gs
incb
mov
fisubrl
daa
jns
dec
stos
pushf
fldt
push
mov
and
in
push
test
jl
xchg
jnp
fisubl
push
jnp
and
pushf
xadd
sbb
mov
dec
lcall
dec
dec
jns
fsts
pop
inc
in
jne
lods
jge
sub
loope
aas
cmp
ret
outsl
fucomi
mov
jg
int
add
jbe
imul
in
xchg
mov
sub
xor
cmp
scas
or
sahf
adcb
loop
mov
pusha
mov
ficomps
sti
mov
and
pop
push
lods
pop
jne
inc
out
sbb
mov
xchg
popa
js
xorb
jbe
mov
lds
xchg
xor
xchg
add
inc
or
jnp
test
shlb
add
stos
jg
popf
dec
xchg
daa
inc
insb
adc
pop
or
jns
ds
push
clc
movsl
cwtl
mov
mov
pop
push
or
aam
push
out
dec
lock
int
rcll
ja
push
jp
xor
int
test
jmp
xchg
mov
outsb
dec
xlat
fcom
das
jmp
and
in
ja
lock
scas
and
frstor
mov
or
icebp
sti
cli
inc
dec
cmc
rcr
adc
pop
das
xor
jno
or
xchg
rcl
out
pop
lcall
ret
and
or
outsl
das
xor
ja
pop
aam
mov
andb
sub
scas
adc
or
inc
add
lds
frstor
pop
repz
nop
jle
orl
jmp
outsl
inc
mov
es
mov
inc
ja
test
ja
rcll
es
mov
lret
js
lock
xor
clc
movsb
push
roll
ljmp
divl
test
mov
jae
cmp
mov
xor
mov
into
in
jne
loop
inc
icebp
es
lret
testl
outsl
fnstenv
inc
movl
aas
or
out
or
ret
ss
add
xlat
movsb
push
shrl
dec
and
arpl
push
ror
insl
inc
xchg
add
pop
ret
jle
sub
and
fwait
cmp
js
push
movsb
pop
dec
stos
repnz
enter
sbb
scas
dec
je
or
cmpsl
outsb
mov
inc
add
pop
push
and
aad
icebp
dec
push
mov
jp
bound
lods
xor
pop
cmp
mov
movsl
push
lock
jae
jl
pop
data16
jbe
jne
cmp
cmp
mov
adc
push
in
sub
mov
fs
fs
mov
mov
inc
cld
pushf
adc
adc
sbb
pop
stc
dec
addr16
adc
inc
flds
call
test
lret
pop
lds
mov
cmp
inc
jmp
notl
and
jl
inc
sti
pop
inc
sub
movsb
xlat
fldcw
in
cmpl
idivb
je
nop
mov
stos
jmp
xlat
cmp
mov
xchg
into
and
rol
add
ss
shrb
mov
es
mov
test
jnp
lock
mov
jb
imul
stc
sbbb
inc
in
repnz
les
sbb
pop
mov
decl
mul
cmp
sub
aaa
pushf
fcoms
xchg
setl
or
add
addl
aam
cs
dec
les
fnsave
int3
bnd
and
or
dec
call
aam
jns
cld
cmp
loop
test
mov
mov
sub
dec
xchg
in
les
mov
in
hlt
lods
jno
mov
decb
push
cmpsb
add
cld
fwait
stc
and
cld
inc
cmp
stos
xchg
cmpsb
dec
and
js
mov
mov
cmp
sbb
sbb
cmp
mov
jae
stc
mov
mov
call
fiaddl
loopne
scas
xor
mov
insb
mov
sarl
jle
call
mov
sbb
cmpsb
mov
stos
jbe
out
ljmp
movsb
test
mov
shl
insb
xchg
addr16
xchg
fidivrs
fcomi
push
stc
out
lock
sub
inc
loop
jno
cmp
cld
out
addb
push
frstor
in
pop
outsb
fimull
scas
jp
pop
lret
sub
push
jae
xor
mov
pop
lahf
fdivl
out
xchg
int3
adc
icebp
rcrl
xor
ljmp
add
xchg
orb
push
and
lret
loopne
and
les
cmc
test
jae
imul
mov
cltd
mov
stos
fistps
mov
cmp
stc
jecxz
mov
xor
jnp
call
inc
cld
test
sbb
push
push
mov
pushw
inc
data16
mov
stos
push
dec
imul
mov
inc
push
mov
cmp
mov
jecxz
push
dec
push
jns
inc
lret
cli
mov
dec
push
rcl
cs
pop
adc
pop
mov
mov
shlb
ljmp
loop
mov
lock
sbb
push
mov
lahf
ret
mov
push
ljmp
sbb
dec
push
xor
pop
mov
mov
test
push
loopne
sub
addr16
jge
insb
push
sub
sbb
repz
push
add
cmp
out
fwait
sti
mov
loope
mov
adcl
out
cmp
lods
pop
ljmp
jns
mov
js
add
cmpsb
sbb
xchg
pop
adc
sbb
out
das
mov
adc
pop
call
mov
popf
lock
mov
mov
in
repz
jp
jne
sbb
mov
test
xlat
cmp
mov
mov
dec
aad
lods
cmp
xlat
fbld
lods
xchg
es
mov
fcmove
xor
push
fidivs
push
cmpsb
cmp
aas
psrld
xchg
inc
sub
ret
shrb
scas
ss
cld
mov
cmp
std
mov
mov
xor
push
test
fs
mov
dec
sti
mov
repnz
pop
cli
scas
loope
mov
loop
push
or
addl
out
jns
mov
mov
cmp
pop
pop
test
sub
xchg
push
data16
jg
mov
movsl
adc
xchg
jmp
insb
add
nop
test
fidivl
lret
test
mov
mov
in
fwait
xchg
mov
lock
mov
daa
pop
fstp
adc
mov
mov
data16
or
ja
lods
mov
push
mov
push
mov
sahf
int3
xchg
xor
roll
ficoml
sbb
ja
cli
cmc
sahf
in
jmp
adc
rolb
xorl
adc
mov
in
int3
out
sbb
xchg
leave
jg
enter
pop
aaa
sbb
cld
test
push
sbb
shrl
gs
mov
add
rcrl
jbe
sbb
lret
inc
cli
dec
adc
pmullw
push
cmp
jmp
hlt
mov
ret
xchg
out
xchg
outsb
lret
jp
xchg
xor
mov
dec
inc
xchg
je
int3
mov
or
push
pop
jno
insb
dec
pop
daa
fldt
jbe
dec
jg
mov
pop
dec
mov
mov
test
adc
xchg
push
jle
mov
std
push
ror
inc
cs
lods
int
inc
mov
rolb
jbe
push
dec
sub
and
cs
adc
add
insb
in
dec
cmp
imul
push
lcall
jmp
stos
mov
inc
add
inc
mull
mov
repnz
lods
add
fdivl
idivl
imul
jecxz
cmp
jmp
loope
sbbb
in
mov
add
mov
mov
cmc
filds
lcall
in
int
inc
out
pop
inc
pop
push
sub
mov
jle
negb
jo
inc
fcmovnbe
gs
push
fwait
lods
dec
pop
xlat
mov
lods
lea
mov
pop
aam
shll
es
aam
cmpl
dec
push
or
inc
mov
and
xlat
cmpsb
pop
jne
imul
xor
jno
mov
or
data16
es
mov
mov
xlat
popf
scas
xor
sub
and
jae
or
pop
test
mov
sub
add
jg
and
ret
int
addr16
aas
pusha
repnz
ds
popf
jge
pop
dec
xor
sbb
or
gs
inc
xor
mov
out
mov
idivb
mov
adc
dec
hlt
pop
div
dec
mov
scas
and
mov
and
inc
je
and
sbb
sbb
xchg
out
daa
add
lock
sbb
add
sbb
bnd
cmp
mov
or
arpl
xor
push
sub
jno
pop
std
jns
pop
mov
push
add
sub
xchg
ja
dec
inc
lods
fldl
int
orl
ror
fs
add
xor
aad
mov
leave
mov
cltd
adc
mov
add
aam
mov
imul
in
or
mov
cmc
in
inc
sub
out
sub
out
testl
jns
mov
jl
add
shr
das
push
sahf
dec
xor
xor
xor
loop
fisubrl
xor
push
mov
mov
lock
mov
inc
jb
cld
cmp
rolb
inc
xchg
sub
repz
sub
and
data16
icebp
lret
sub
scas
xor
mov
mov
scas
sub
and
mov
xchg
out
mov
data16
inc
push
cmp
mov
fwait
jp
sub
pop
or
or
fidivs
mov
inc
mov
jmp
pop
push
pop
jns
int
or
sub
andl
inc
pop
add
push
hlt
addr16
aas
or
inc
sbb
fwait
or
push
mov
icebp
fldenv
js
cmp
lds
in
mov
fldcw
pop
icebp
les
adc
xchg
push
mov
jg
fidivs
jle
jne
pop
jnp
imul
jp
sbb
mov
mov
cmp
test
les
mov
cs
jae
inc
ja
lock
ja
and
sbb
loope
insl
lds
cmpsl
out
pop
cwtl
pop
nop
jo
xchg
jo
popa
popa
inc
les
out
ret
jne
push
lock
arpl
fistpll
mov
add
xchg
xchg
aam
mov
sbb
add
push
inc
push
xchg
repz
mov
inc
bound
shl
outsb
ja
cmpsb
cld
popf
mov
daa
cs
in
jbe
mov
gs
mov
movsl
pop
icebp
mov
jmp
gs
lods
scas
dec
notl
adc
hlt
push
sti
mov
popf
jns
fstps
cmp
cmp
mov
addl
jae
ljmp
mov
sti
es
js
ja
lock
adc
es
popa
or
jns
dec
mov
movsb
push
inc
mov
mov
xor
arpl
mov
gs
fsubrs
add
bound
inc
dec
mov
ja
xchg
fwait
sbb
push
mov
xor
test
jns
pop
push
sbb
xor
jne
sub
push
add
enter
mov
das
dec
inc
push
xchg
out
aas
scas
ja
jb
or
inc
jle
into
insl
icebp
cs
add
dec
jmp
xlat
push
ja
pop
jbe
and
add
test
arpl
mov
lret
inc
sbb
sahf
es
push
mov
adc
xor
or
mov
rcl
pop
pushf
pop
mov
mov
test
cltd
sub
dec
or
cmp
dec
insb
adc
xor
or
xor
nop
into
adc
lods
in
lret
aaa
andb
daa
add
movsl
mov
inc
jmp
stc
ljmp
jo
icebp
arpl
lea
lret
or
sbb
inc
fsubs
imul
cmpsb
mov
mov
mov
mov
test
pop
popa
jge
int3
mov
xchg
pop
decb
shlb
and
and
in
lea
hlt
insb
aas
mov
dec
shrl
pop
test
add
xor
dec
ret
or
mov
lret
repnz
jns
mov
mov
xor
xchg
push
push
testl
les
cli
repnz
lea
lea
inc
pop
pop
cmc
je
mov
icebp
in
lds
pop
dec
inc
xchg
js
outsb
dec
jecxz
push
bound
mov
jns
add
mov
inc
dec
mov
adc
inc
popf
sub
ss
jecxz
popa
lret
ret
cmp
pop
jmp
or
data16
rclb
dec
outsb
push
lea
cmp
in
or
mov
push
or
dec
leave
xchg
xlat
ss
add
icebp
mov
dec
in
push
fldenv
stos
push
lcall
cmp
push
lcall
mov
inc
xchg
test
es
insl
push
mov
cmp
outsb
or
outsl
push
mov
es
adc
out
cmp
add
adc
jae
xor
or
inc
mov
jo
leave
rcrb
cmpsb
int3
sbbl
unpckhps
decl
out
xorb
and
push
fwait
xchg
scas
lret
test
fildll
enter
cmp
mov
fs
shll
pusha
jae
sub
pop
call
mov
xchg
dec
mov
add
jmp
push
aad
jne
das
pop
js
cmp
cwtl
cmpsl
shl
mov
cs
rclb
and
jl
jb
xor
mov
jo
inc
pop
jne
lock
or
inc
xchg
inc
sub
and
sbb
shll
mov
lcall
lcall
jmp
hlt
rcll
lcall
lock
addl
xchg
cltd
pop
push
xchg
fldl
leave
pop
pop
cli
rcl
in
clc
mov
pusha
mov
mov
lcall
int3
cmp
mov
xlat
bnd
adc
xor
and
lcall
bound
push
cmpsb
stc
mov
fistpl
outsb
pop
jg
mov
xorl
inc
jecxz
repz
jbe
xchg
xchg
xor
arpl
jae
inc
notb
mov
ss
inc
jecxz
repz
jbe
xchg
xchg
xor
arpl
jae
inc
notb
mov
ss
inc
jecxz
repz
jbe
xchg
xchg
xor
arpl
jae
inc
notb
mov
ss
inc
jecxz
repz
not
jns
imul
push
mov
mov
xchg
pop
pop
sub
ret
xor
xlat
fs
inc
loop
sbb
xchg
push
in
in
les
ret
xor
add
adc
push
cmpsb
jbe
inc
loop
enter
mov
in
inc
std
or
pop
fcompl
pop
aam
ret
popa
repnz
cmp
and
jbe
push
repz
xor
mov
add
pop
or
sub
or
mov
sub
fstpt
dec
push
dec
jmp
add
sub
outsl
lods
inc
cmp
fbstp
mov
lret
fisubrl
filds
negl
shlb
jmp
rorl
inc
mov
dec
dec
jnp
push
in
in
mov
push
xchg
ror
mov
pop
shl
mov
decl
jnp
loopne
and
xorl
fcom
lret
dec
cld
mov
mov
pop
add
int
xchg
fildll
push
test
jp
mov
mov
xchg
mov
repnz
and
dec
xchg
push
in
hlt
jb
fcmove
pusha
and
sub
sbb
fsubrl
xchg
movsb
je
jbe
dec
icebp
cmp
aaa
xchg
popa
test
mov
dec
ret
xor
add
jno
add
adc
mov
jne
jmp
mov
stos
push
ret
push
xlat
popa
into
push
mov
and
mov
loopne
rcll
xlat
inc
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
outsl
sub
lret
sarl
jge
inc
xchg
push
mov
or
and
dec
lds
test
mov
lds
hlt
movsb
shll
out
cmpsl
sub
cmpsl
fsubrs
gs
jb
mov
sub
mov
mov
sbb
adc
repz
jp
mov
lea
xchg
xchg
xchg
sub
push
clc
je
out
push
out
add
shlb
jmp
fiadds
dec
mov
pop
xchg
push
jg
mov
ret
inc
pop
repz
test
fiaddl
push
pop
inc
xorb
lret
adc
stos
das
lcall
push
hlt
loope
dec
sbb
lret
testb
stc
out
jns
mov
hlt
cltd
jns
sub
xlat
push
or
bound
mov
das
and
into
mov
xor
push
fisttps
sbb
pcmpgtd
xor
or
call
call
and
std
pushf
les
inc
mov
cmpb
sub
es
fsubs
aaa
pop
pop
jae
std
inc
xchg
btr
xchg
mov
in
inc
xchg
inc
jb
cmpsb
mov
outsb
fmull
sahf
clc
enter
xchg
xchg
add
inc
xor
pop
fldenv
shrb
cmpsb
popa
pop
and
mov
cmp
push
lock
cmc
push
ret
add
fucomp
ret
lock
ds
cmp
jg
push
sbb
adc
shll
mov
or
xor
or
test
aaa
rcr
je
and
int3
mov
pop
gs
mov
rorl
mov
mov
js
push
mov
dec
in
pusha
fnstenv
popa
and
imul
dec
jns
dec
fisubrs
mov
jnp
fsub
cmp
xchg
fwait
push
enter
jns
test
addr16
in
cmp
hlt
popf
insl
enter
add
and
dec
stc
xchg
adc
hlt
adc
inc
push
lret
es
pop
ret
mov
je
orl
adc
cmpsl
add
fst
repz
pop
pop
je
cli
icebp
outsl
rcrl
out
pop
stos
sub
mov
sbb
fldl
fbstp
loope
in
aaa
adc
je
jecxz
std
lret
negb
mov
daa
dec
mov
xor
sbb
into
pop
int3
in
mov
aam
shrl
fsubrp
xchg
icebp
cmpsb
inc
hlt
jge
inc
ljmp
push
lock
in
je
out
jno
xor
dec
enter
in
pop
fiadds
int
and
imul
fisubl
shlb
adc
aas
mov
or
ret
popa
lcall
cmp
xchg
jb
pop
mov
jae
mov
out
inc
dec
mov
cmp
adcb
inc
xchg
outsl
xor
xor
xor
sbb
cmp
inc
xchg
enter
adc
ret
push
adc
jne
xor
daa
xor
adc
xchg
cmc
or
cli
ret
cmp
add
mov
adc
js
mov
xchg
and
cmp
jge
push
loopne
mov
push
and
test
ficompl
inc
xor
outsl
ja
pop
mov
dec
std
xchg
jae
int
fnstenv
sub
loope
push
xchg
jae
xor
xor
mov
xor
push
or
inc
ja
out
jmp
sub
lods
cmp
mov
and
sbb
stos
lret
hlt
sub
loop
add
xlat
aad
pop
sbb
jmp
lret
cs
ret
out
or
or
dec
hlt
mov
mov
jg
xchg
adc
in
popl
and
sub
sbb
stc
repz
repz
popa
push
sbb
or
adc
lods
push
out
and
mov
push
jbe
push
icebp
push
into
mov
pop
shl
and
xchg
dec
aaa
pusha
mov
add
pop
push
sahf
push
xchg
jle
adc
adc
push
je
pop
sub
sti
adc
ljmp
repnz
test
sub
xchg
imul
std
fs
fnstsw
push
cs
stc
cmpsl
pop
test
push
arpl
jecxz
push
imul
mov
mov
mov
jle
nop
aam
mov
sti
xchg
loopne
inc
cld
cmp
je
xlat
inc
sbb
mov
push
call
dec
stos
sbb
dec
jl
stos
lea
xor
cltd
dec
sub
std
mov
xor
or
repnz
cmpsb
movsb
ja
push
push
cmp
std
push
iret
mov
pop
push
pushf
inc
inc
mov
fs
dec
cwtl
mov
inc
cmp
imul
cmp
sarl
pop
inc
dec
imul
push
mov
push
mov
sarl
mov
xor
repnz
mov
or
jp
push
out
push
rcrl
out
adc
sbbb
dec
and
push
pop
enter
cmp
mov
jmp
out
loope
sub
sub
xchg
sbb
push
fidivs
hlt
jmp
adc
jle
or
rcrl
cwtl
stos
out
mov
sub
ret
in
test
imul
xor
addr16
jo
insb
call
sbb
push
je
inc
je
in
ja
pop
rolb
aad
movsl
push
and
inc
push
mov
xchg
jbe
push
mov
icebp
call
dec
dec
nop
inc
sbb
ret
sbbb
cmp
cmp
aam
movsb
xchg
test
push
or
push
mov
nop
add
inc
dec
mov
jb
ja
pop
push
add
ds
aaa
aas
xor
mov
add
aam
test
scas
sbb
sti
addr16
jmp
into
insl
call
cmp
loopne
pop
adc
enter
outsl
xlat
pushf
out
pop
fsts
or
call
mov
jge
adc
ljmp
fs
push
adc
lahf
das
jge
mov
pusha
out
add
push
es
cli
sbb
pushf
fsts
dec
lea
dec
arpl
mov
and
test
loop
lds
cmp
dec
or
mov
add
xchg
inc
xchg
or
pop
ficomps
inc
sbb
mov
xorl
xchg
mov
sub
scas
jns
sub
icebp
inc
into
loop
and
fsubrp
fnsave
cmc
xchg
or
idiv
inc
cmp
je
dec
ret
mov
mov
popa
in
jp
sarl
mov
mov
dec
sub
xchg
and
xor
sbb
pop
scas
gs
fisubl
cmp
sub
cli
fsub
rcr
mov
rcrb
mov
bound
fmull
dec
ds
jl
pop
dec
imull
add
xchg
adc
push
mov
jno
imul
xchg
or
xlat
orb
out
xchg
mov
mov
int
js
add
cmp
pop
pop
xchg
lds
roll
pmaxsw
xor
shll
sbb
loopne
pop
cmp
xchg
js
mov
mov
and
lods
cmp
push
xor
push
mov
js
mov
notl
scas
or
sarb
push
mov
xchg
fcom
xchg
data16
mov
iret
aad
icebp
dec
jmp
cwtl
cld
jg
jecxz
imul
orb
adc
or
jno
xor
pop
int3
cmp
or
pop
je
addl
rol
sub
sbb
dec
jge
push
mov
mov
cmp
or
cwtl
popf
or
and
jge
lret
pop
outsb
mov
pop
cs
jmp
sbb
xchg
sahf
inc
and
xor
xorl
icebp
test
std
mov
sub
subb
mov
aad
jl
ja
xchg
jmp
add
into
neg
mov
push
pop
mov
mov
lods
push
aaa
movsb
mov
dec
pop
pop
aam
sbb
pop
and
jmp
fsub
and
adc
xchg
pop
aas
and
pop
lods
xor
es
inc
mov
adc
and
xchg
xchg
cmpb
ret
popa
sub
add
int
test
jle
mov
gs
sti
mov
out
out
lea
ds
aas
adc
and
pop
sub
dec
xchg
bound
jmp
in
mov
out
fstl
lret
xlat
inc
mov
xor
jns
out
cmp
stos
xchg
dec
cmpsl
and
add
sti
icebp
call
xchg
push
gs
leave
xchg
push
int
add
mov
push
xor
cmp
xchg
cmpsb
xlat
scas
dec
sbb
inc
dec
ret
push
inc
lds
mov
sti
sbbb
mov
clc
jl
pop
cmp
cmp
repz
pop
js
jbe
mov
push
pop
pop
or
push
cs
push
and
dec
pop
adc
icebp
call
test
add
jnp
mov
mov
xchg
outsb
aam
mov
imul
pop
pop
mov
pop
mov
inc
lahf
xchg
hlt
pop
jo
cmp
daa
xlat
dec
xchg
and
push
or
add
cli
dec
int3
sub
cmp
xor
imul
sbb
push
jb
lods
cld
hlt
push
mov
inc
xchg
and
mov
fsubp
je
fsubl
cmp
xor
sub
dec
lods
xchg
js
pop
dec
push
jl
cmc
setae
fidivrl
and
repz
ds
mov
jae
out
xchg
xchg
call
mov
cmpsb
push
sub
and
pushf
cmpsl
jl
stc
sbb
inc
xor
xchg
imul
xor
pop
push
insb
cmp
inc
test
out
xor
sbb
aaa
shlb
icebp
and
pmuludq
mov
dec
sbb
mov
mull
mov
scas
aam
and
mov
sbb
cmp
inc
mov
push
jp
leave
xchg
cs
daa
stc
incl
jmp
add
fucomi
push
ret
enter
pushf
sbb
dec
adc
cltd
dec
lcall
pop
push
pop
jp
inc
push
cltd
dec
push
jecxz
into
pusha
repz
bound
mov
mov
scas
adc
fisttpll
punpckhbw
testl
in
and
jnp
mov
pop
inc
cltd
cmpsb
mov
movsb
mov
popf
fmuls
mov
pop
repnz
ds
insb
push
out
push
repnz
jae
addr16
cld
or
aam
sub
in
mov
jecxz
xchg
mov
mov
mov
loop
ds
or
sub
sbb
dec
je
jo
pop
sub
mov
or
xchg
adc
mov
arpl
fsubrl
test
and
pop
push
add
mov
inc
jle
movsl
xor
insb
adc
out
add
sbb
scas
jae
lea
fidivl
mov
pushf
mov
sbb
lods
dec
lds
pop
add
jnp
mov
sub
call
cltd
push
hlt
mov
adc
jl
in
scas
roll
aaa
scas
imul
mov
arpl
sub
fistps
jbe
sbb
mov
aas
jnp
rorb
push
ds
clc
fbstp
lock
cmp
daa
mov
mov
fdivl
dec
add
cmp
stos
adc
and
stc
lret
sub
jge
dec
mov
and
add
push
test
cmp
push
xor
lahf
pop
adcb
lds
or
orps
cmp
ds
inc
jmp
mov
pop
and
dec
dec
fistps
push
imul
jle
out
mov
lret
in
pop
xor
loope
repz
cmc
cmp
je
scas
jecxz
and
shufps
and
lea
mov
subb
aam
xchg
loopne
mov
loope
sbb
int3
aas
push
push
sahf
loope
jmp
addr16
jb
into
pusha
and
insb
mov
xchg
fcomi
scas
fwait
ss
jbe
lods
stc
jmp
sbb
in
daa
pop
jns
loopne,pn
leave
mov
pop
jg
stos
push
cmp
sub
int
inc
or
pop
mov
shl
and
incl
insb
lret
add
data16
xor
loope
loop
insl
mov
pop
sub
mov
and
loop
adc
hlt
and
cltd
jle
cmp
rcl
inc
out
or
jo
movsl
mov
lret
push
cmp
mov
mov
adcl
mov
xchg
or
lods
mov
adc
in
addr16
mov
push
arpl
loop
mov
xchg
jne
cmpl
aam
std
je
test
xchg
ret
dec
sbb
adc
popa
out
jg
rcll
filds
lret
jo
inc
and
scas
push
xlat
pop
ljmp
cmc
pop
jg
sar
push
call
addr16
in
add
push
in
push
in
dec
jns
daa
sub
ficomps
xor
adcl
not
pop
or
inc
filds
in
gs
rcll
clc
ret
push
mov
repz
xor
jbe
repnz
adc
fucom
cwtl
iret
dec
xor
push
adc
mov
or
dec
cmpsb
cmp
imul
aaa
mov
sbb
xor
push
adc
lret
stc
sub
call
into
imul
mov
shr
add
cmc
push
jne
test
loop
cmp
lock
dec
int
clc
lea
push
test
dec
sti
mov
cmp
lcall
frstor
aam
dec
and
daa
push
sub
dec
aaa
rclb
loopne
clc
movsb
pop
adc
xor
mov
icebp
in
sahf
and
push
add
dec
xchg
shll
inc
lods
testb
loope
xchg
roll
ds
enter
iret
adc
push
push
imull
sub
dec
sub
rolb
xlat
sbb
fstps
inc
and
mov
fs
in
scas
or
sub
inc
sarl
js
jmp
push
pop
inc
sub
imul
push
insl
leave
sbb
dec
lods
insb
jne
or
mov
shlb
icebp
mov
sahf
enter
je
sub
mov
cld
mov
in
add
inc
loope
inc
imul
es
push
dec
adc
jne,pt
sbb
pop
daa
outsl
pop
dec
and
std
cmc
sbb
lods
insb
shll
clc
sbb
mov
inc
dec
jno
rolb
jge
dec
push
sbb
lcall
repnz
cmpsb
mulb
cld
dec
clc
push
and
adc
xor
iret
pop
lods
lods
mov
push
dec
push
pop
rcr
add
aad
bound
mov
sarl
pop
adc
xchg
sbb
pop
mov
stc
pop
vpaddb
cmpsl
mov
jmp
roll
inc
jle
mov
stos
adc
inc
push
fldcw
cmc
jns
cmp
out
icebp
or
arpl
adc
xor
mov
xchg
addr16
int
movsb
cld
pusha
mov
cmp
call
xchg
xchg
fs
mov
xor
mov
dec
andl
push
callw
mov
mov
stos
cmp
xor
hlt
lret
push
pop
mov
in
movsl
into
xchg
test
add
inc
jge
sbbl
fimull
out
rcrb
pop
xorl
lds
mov
outsl
xchg
sbb
rorb
and
in
dec
outsl
in
xor
aas
gs
ret
pop
shll
adc
jl
pop
xor
leave
das
push
cmp
jae
mov
mov
outsb
loop
sub
lods
dec
shlb
jge
sbb
jnp
arpl
ret
jle
in
xlat
adc
pop
and
push
mov
outsb
xchg
mov
lahf
into
sub
jnp
mov
shll
push
repz
and
std
lods
shr
dec
and
arpl
adc
dec
dec
mov
les
ljmp
cmp
enter
jbe
xchg
popa
jae
sbb
inc
and
fst
insl
rcr
mov
bound
dec
push
push
jnp
mov
dec
mov
jge
insb
int3
add
in
insl
mov
fs
and
out
mov
repnz
insl
divb
dec
lods
shll
cld
int
xor
xor
mov
fisttpl
jmp
outsb
push
or
addb
xchg
add
out
int
ret
sub
jbe
mov
inc
imul
cld
and
aaa
xor
rcll
pop
push
scas
popf
mov
and
mov
mov
out
pop
pop
enter
or
idiv
in
mov
gs
sbb
aas
mov
cld
aaa
inc
lcall
xor
andl
ret
jp
lods
mov
sahf
data16
outsl
and
push
out
push
or
stc
scas
mov
test
or
movsb
int
mov
in
test
sub
int
insb
xor
sbb
cmp
pop
movsb
push
or
std
or
push
jp
dec
ficoml
add
fcmovu
lock
sbb
repz
mov
adc
mov
outsb
call
add
std
movsb
xor
flds
or
shl
dec
sahf
and
sub
inc
fdivr
std
sbbl
enter
outsl
into
and
dec
mov
or
push
loope
aad
scas
mov
jecxz
jp
push
movsl
repz
adc
out
pop
cmp
icebp
dec
mov
push
dec
add
xchg
inc
inc
cmpsb
push
aad
mov
test
cmpsl
divl
cmp
hlt
and
jle
mov
outsl
adc
loopne
or
add
mov
sbb
pushf
jbe
mov
out
inc
push
mov
sbb
cs
int
pop
pop
jp
inc
cmp
mov
mov
adc
sub
mov
cli
int3
in
jb
lods
cld
or
jnp
cmpsb
pop
out
mov
out
pop
lcall
mov
cld
into
sarb
lock
xor
rcrl
push
sbb
ljmp
in
lea
movsb
fnstenv
scas
adc
xchg
fadds
out
mov
xor
dec
mov
shll
pop
jns
sbbl
push
xchg
scas
xchg
mov
jbe
jl
pop
cmpsl
inc
cld
jnp
in
pusha
shlb
adc
lret
mov
add
mov
pop
fs
imul
popa
lds
into
shr
insl
jne
dec
mov
mov
xchg
or
pop
mov
in
jb
mov
inc
cmp
jnp
pop
pop
bound
dec
jge
jg
adc
icebp
xor
push
movsl
js
push
rcll
sbb
in
aad
ret
lcall
push
inc
jmp
sub
arpl
cmpsl
dec
sub
or
lock
std
sti
jl
loop
sbb
shrb
or
xchg
ljmp
jecxz
fwait
in
jmp
push
mov
inc
and
and
and
adc
dec
cmp
aas
dec
mov
mov
inc
dec
out
and
icebp
call
mov
hlt
int3
lahf
mov
or
xor
lods
bound
aad
cwtl
mov
iret
pop
fmull
or
imul
pop
mov
push
emms
mov
pop
stos
push
dec
insl
dec
dec
cmc
push
clc
pop
leave
mov
push
add
rclb
fsub
pop
push
pop
inc
fcom
movsl
ret
or
mov
inc
jp
pop
jecxz
rorl
je
mov
pop
push
out
and
sub
enter
push
cli
sbb
sub
jp
jo
int
adc
xchg
aad
or
fmul
jnp
lods
into
gs
fstl
mov
sbb
cwtl
jmp
mov
pusha
mov
leave
dec
sbb
les
push
fistpll
std
shl
test
jns
mov
mov
add
test
push
subb
jl
sub
movsb
repz
loopne
add
mov
sub
dec
insl
push
loope
cwtl
pop
pusha
bound
cvtps2pi
push
pushl
ds
jg
testl
fs
mov
outsb
addr16
add
dec
loop
out
sbb
lret
ret
mov
hlt
mov
pop
scas
imul
push
xchg
ror
out
xchg
jecxz
daa
les
lods
test
sub
cmp
mov
mov
sub
inc
imull
out
shrb
das
adc
jns
inc
lods
pusha
or
cmp
out
lret
test
push
iret
and
ja
mov
and
adc
jecxz
fwait
push
push
adc
in
repnz
sbb
push
lmsw
call
sbb
pop
adc
mov
idivl
les
or
test
loop
lahf
adc
iret
sbb
ret
sub
jne
sub
cld
cs
or
sbb
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
arpl
xchg
and
xor
add
adc
rclb
mov
or
and
sahf
sbb
arpl
cmp
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
mov
push
les
inc
pop
or
add
add
or
pop
push
add
add
add
add
add
add
add
xchg
add
add
insb
add
pop
add
add
add
add
add
add
sbb
add
add
add
cmp
clc
add
add
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
outsl
add
add
and
jmp
add
add
add
and
dec
add
sub
fildl
mov
mov
add
jae
mov
popl
mov
test
lea
xor
add
add
add
add
mov
xor
add
add
flds
scas
add
and
dec
add
add
add
add
add
pop
add
add
add
add
sbb
aas
add
add
add
cmp
sub
add
add
add
add
add
mov
add
add
stos
add
add
add
add
flds
rolb
push
push
add
in
add
add
sbb
gs
add
ret
add
add
add
add
jno
xlat
add
add
add
add
add
add
add
add
inc
add
mov
jno
pop
add
add
jo
mov
add
cmp
dec
add
add
add
add
add
add
imul
add
add
mov
jno
pop
add
test
scas
add
add
add
add
xor
add
add
add
add
pop
add
add
add
jg
filds
xor
pop
add
add
add
add
add
add
pop
add
mov
mov
cwtl
add
add
add
add
add
incl
sbb
jno
movb
add
add
or
jno
pop
add
add
add
jae
xor
add
add
add
add
sub
mov
pusha
add
mov
add
add
add
push
add
mov
xchg
add
sbb
mov
add
jne
cmp
add
sub
addl
sbb
add
add
add
add
cmp
xchg
pop
add
add
push
xor
lods
add
add
add
push
jmp
mov
add
add
inc
add
add
ret
add
lea
and
add
add
add
stos
add
sti
add
push
pop
add
add
add
push
add
push
add
add
pop
add
add
add
add
pop
add
add
add
push
add
mov
add
or
lahf
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
pop
add
incl
inc
add
add
add
add
insb
add
movb
add
jo
stos
add
sbb
add
add
add
add
add
add
add
add
sub
pop
add
add
push
xchg
mov
idiv
sub
or
insl
adc
cs
cmpsb
mov
push
int
repnz
and
pusha
jl
push
movsl
arpl
or
scas
and
mov
dec
mov
mov
loopne
push
fldt
add
mov
push
jp
adc
jns
setge
mov
xchg
inc
xchg
xchg
or
addr16
ret
aam
xchg
jecxz
sub
mov
jne
jg
movsl
data16
pop
stos
inc
pop
push
sub
mov
mov
movsb
stos
cld
and
xor
sbb
outsb
push
mov
cmp
pop
lcall
test
imul
push
setne
add
mov
pop
mov
xor
adc
loop
dec
clc
cmp
jmp
mov
jnp
mov
xchg
nop
jle
ret
adc
insl
cltd
bound
fstl
popa
sbb
je
and
int
cmp
dec
adc
push
mov
ret
jb
add
mov
and
in
movsb
sbb
psubw
jae
push
jns
xchg
inc
xchg
fmuls
inc
jp
sub
pop
mov
sarl
jge
pop
jge
shlb
sti
rolb
jnp
mov
orl
cmp
mov
in
adc
cmp
enterw
lock
inc
and
data16
popf
cmp
addb
cmp
xchg
xor
ja
adc
adc
lods
push
mov
or
loope
or
mov
sbb
or
dec
or
inc
fisttpll
sarb
test
mov
cmp
dec
jl
cmp
sarl
pop
ds
push
int3
into
lods
pop
je
sbb
add
out
inc
pop
jae
dec
adc
add
js
mov
in
xchg
pop
cmp
daa
adc
mov
out
sub
ficoms
int
or
loopne
pop
sbb
xor
scas
fprem
ja
sbb
sbb
shlb
fmul
jmp
fisubrl
xchg
iret
les
sub
push
dec
lahf
sub
pop
dec
cmpsl
out
daa
inc
ffree
aad
jb
fidivrl
mov
mov
cld
mov
dec
testl
pop
fistpll
int3
arpl
xchg
ja
mov
jae
xchg
lret
mov
test
stos
xlat
pusha
or
add
or
sbb
adc
lock
jecxz
stos
sub
pop
adc
sub
mov
cmp
add
cmp
lret
rclb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
