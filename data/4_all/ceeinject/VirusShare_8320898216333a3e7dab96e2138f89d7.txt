call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
cmp
or
sbb
bound
or
sub
cmp
mov
inc
in
and
mov
sub
cmp
or
sbb
insb
mov
pop
out
outsl
mov
push
in
push
cld
xor
add
adc
cmp
or
sbb
insb
mov
pop
mov
mov
test
xorb
gs
cmp
jg
outsb
mov
imul
cmpsl
jl
mov
iret
push
addr16
mov
cmpsl
jecxz
jns
lret
inc
sar
inc
inc
jl
insb
pop
pushf
xchg
lea
adc
lods
adc
insl
int
and
aam
mov
lock
mov
sub
xor
jae
sub
lods
dec
xchg
test
mov
popf
subb
mov
xor
lods
subl
pop
xchg
mov
cld
fiadds
shll
or
cmp
cmpsl
xlat
arpl
dec
mov
mov
mov
and
leave
xchg
rcrl
xchg
cld
pop
xchg
sub
ret
cld
or
sbb
lods
rorb
std
ror
add
or
sbb
insb
mov
pop
mov
pushf
dec
in
cmp
sub
sbb
adc
push
subl
xor
imul
or
jae
inc
lock
xor
mov
pop
mov
mov
dec
negl
pop
mov
push
mov
xor
jecxz
repz
sbb
mov
sbbl
mov
push
in
and
xor
add
adc
cmp
or
sbb
insb
mov
pop
xchg
lods
arpl
in
and
xor
add
adc
cltd
loopne
inc
cmp
mov
shrb
push
pop
into
add
rorb
or
sbb
lret
add
pop
into
inc
in
mov
jmp
xchg
enter
sbb
mov
xchg
out
mull
push
addl
icebp
test
js
ds
xchg
and
ss
push
push
test
loopne
inc
sub
stos
pop
stos
sbb
xchg
je
test
sbb
xchg
loopne
or
cmp
or
test
sarb
ja
mov
and
push
dec
mov
nop
popa
jb
outsl
and
inc
dec
sub
into
push
xchg
fildll
push
dec
or
lock
into
in
sub
cwtl
mov
orl
or
xor
jnp
cltd
inc
ja
je
mov
clc
add
xchg
and
aaa
test
xchg
test
subl
mov
sbb
imul
mov
arpl
cmc
out
push
inc
adc
add
mov
int3
or
aaa
sahf
bound
rolb
sti
xor
jp
fwait
push
and
mov
inc
xchg
mov
fidivl
pusha
lea
loopne
and
push
push
sub
push
es
aaa
notl
xor
sbb
jmp
add
cwtl
repz
jo
add
mov
pop
shlb
nop
aas
aam
mov
push
or
bound
jb
shll
sti
jle
xor
scas
inc
pop
pop
jno
xchg
stos
sbb
rolb
lods
addl
ret
out
mov
mov
mov
stc
in
and
mov
adc
loop
jno
scas
jg
inc
popf
add
sahf
in
dec
scas
pushf
or
mov
je
mov
lods
lock
xorl
arpl
sbb
loope
cmpsl
add
ret
or
mov
sub
push
xchg
gs
and
push
scas
sbb
movsb
push
or
fstp
movsb
rcrb
jmp
cmp
sub
xchg
fistpll
adcl
loopne
xchg
xchg
jo
mov
arpl
pop
mov
mov
lahf
out
push
jns
cmp
call
jne
sbb
mov
xor
js
out
mov
and
inc
ret
and
mov
int
es
pop
jecxz
mov
add
inc
mov
pop
aad
pop
addr16
int
jle
sub
cs
insb
daa
repz
mov
rcrb
test
xor
fadd
mov
flds
xchg
lcall
mov
jl
mov
fdivp
pop
pop
mov
xor
mov
in
bound
and
shlb
xor
lods
jno
pop
into
pop
push
jno
mov
int
push
iret
lret
xchg
cmp
push
rcl
jae
dec
lods
cltd
xor
dec
inc
aaa
jnp
ss
push
mov
pop
xor
xor
mov
mov
jbe
stos
add
xchg
insb
add
je
dec
mov
and
push
add
adc
push
lods
popa
jmp
mov
jmp
cmp
pop
int
mov
es
mov
xor
es
dec
push
xor
sub
in
mov
mov
sub
ficoml
in
mov
pop
movsl
in
stc
jbe
inc
pop
fiadds
jge
jmp
jb
cwtl
shrb
in
jo
inc
xor
inc
ljmp
adc
or
cs
jg
jle
gs
sub
or
cmp
cmp
add
out
mov
add
lods
int3
xchg
icebp
sbb
rorb
cltd
in
nop
mov
pusha
std
aaa
lods
cmpsb
mov
push
sbb
push
sarb
inc
push
pop
enter
sub
or
cmp
jle
or
cli
and
and
stos
or
aam
pop
shrl
mov
fildll
push
add
movsl
test
mov
punpckldq
sub
or
push
mov
gs
fldt
in
dec
std
fmull
fmuls
pop
sbb
dec
movsb
call
pop
jno
mov
mov
jle
and
sbb
fcomp
es
jbe
rorb
mov
repnz
mov
xlat
out
outsl
lret
mov
in
and
cwtl
pushf
fdivrl
xchg
add
mov
ret
fucomp
cmc
xchg
dec
sbbb
insb
dec
pop
push
dec
test
mov
pop
das
jb
lahf
sbbb
jbe
test
or
outsl
and
lahf
pop
sub
dec
add
aas
hlt
pop
loope
in
jb
add
pop
shlb
ret
cwtl
push
stos
mov
mov
repz
or
push
push
jmp
sub
arpl
inc
ret
push
and
gs
xchg
lea
leave
push
xchg
les
mov
outsb
ficoms
nop
int
adc
adc
push
movsb
inc
pop
data16
jge
cmp
inc
xor
les
fs
or
sub
push
push
cli
cmp
jnp
mov
inc
jle
jle
jmp
inc
mov
mov
push
sub
pop
sarl
xchg
pushf
das
sub
mov
and
iret
daa
cmp
adc
daa
aad
sar
jg
push
jl
sub
into
arpl
ljmp
sbb
and
sub
lcall
inc
adcb
into
leave
js
mov
inc
outsb
and
das
icebp
push
and
in
push
inc
and
lock
lods
dec
or
cli
es
cwtl
jb
iret
jmp
lret
pushf
enter
mov
jge
iret
sub
lods
int
lcall
cmp
mov
cmpsl
xlat
arpl
cmp
adc
idivl
inc
pop
inc
leave
lods
adc
xchg
xchg
aas
or
xchg
jg
inc
lea
mov
mov
ds
mov
out
ss
sbb
mov
les
jg
or
mov
insb
mov
arpl
and
lret
jnp
mov
dec
xchg
js
inc
add
in
xchg
or
inc
jb
sub
add
push
int3
sub
loope
js
aad
push
mov
outsb
aam
xchg
sti
popa
mov
ljmp
sub
xor
and
jle
in
lret
and
add
mov
adc
adcb
add
jnp
in
punpcklbw
cs
icebp
pop
loope
test
push
add
sar
fwait
js
int3
add
sbb
loop
cmp
nop
xor
dec
ss
mov
cli
adc
sub
push
pop
addr16
ljmp
dec
cwtl
stos
loop
mov
cmp
divb
ss
mov
mov
loopne
pop
repz
in
rorb
adc
add
xchg
je
push
mov
shr
insb
xchg
add
pop
jmp
mov
push
push
mov
es
sub
imul
mov
add
xor
mov
sbbl
fisttpl
sbb
sbb
jne
dec
mov
sub
sbb
cmc
jl
sub
ja
js
add
jp
gs
div
shrb
and
aas
out
jbe
rorl
add
imul
inc
bound
cmpb
and
sbb
cmp
or
data16
jb
sti
lcall
fabs
mov
arpl
inc
jbe
cmpsl
add
mov
add
scas
clc
mov
mov
and
cltd
daa
push
jecxz
mov
xchg
pusha
aad
lds
lods
lds
sbb
mov
test
jmp
es
aas
add
jo
mov
in
xor
insl
xchg
std
out
adc
inc
xchg
hlt
lea
es
pusha
pushl
pushf
pop
fisttpl
inc
adc
jp
or
xor
into
mov
int3
xor
and
pop
add
roll
ret
pusha
std
mov
jg
adc
scas
mov
in
mov
mov
or
leave
in
fiadds
insl
into
add
mov
addr16
test
test
cwtl
lock
cld
out
rol
hlt
lret
fdivs
add
push
adc
es
lods
jg
or
xchg
adc
xchg
movsl
fmul
xor
mov
cmp
or
outsb
xchg
pop
loopne
or
jl
add
cld
cmpsl
dec
inc
sbb
and
fisttpll
ficomps
or
jnp
xchg
stos
mov
adc
aad
adc
dec
push
lcall
jg
je
mov
push
js
jb
stos
add
negb
xchg
pop
add
out
aad
jae
pop
stos
mov
inc
mov
jne
xor
lahf
push
fistpll
xor
lahf
mov
xor
scas
dec
in
test
fcmove
adc
insl
cmp
add
push
divb
mov
pop
sub
or
sub
dec
adc
dec
mov
cmpsb
inc
mov
mov
fmuls
loopne
test
leave
repnz
mov
fcomp
js
je
and
and
shll
mov
jbe
insl
push
dec
xor
mov
push
insl
pop
xchg
mov
ret
lods
dec
sub
mov
lods
adc
add
fs
xchg
mov
cmpsb
pop
cs
in
pop
adc
jg
out
cmpsb
pop
mov
jb
lret
rcr
push
vcvtps2dq
jp
pop
mov
sbb
sbb
push
mov
push
cmp
notb
and
fistl
cltd
cld
lods
mov
xor
push
inc
cwtl
ja
push
sqrtps
push
call
cmp
and
xchg
pop
insl
mov
inc
in
pop
sub
push
jl
and
dec
mov
jl
mov
mov
adc
test
adc
repz
sbb
imul
sbb
jno
addr16
ret
jl
gs
dec
nop
jae
add
push
out
xor
sahf
repz
in
and
and
pop
cli
les
jo
or
lods
sbb
ret
loop
jp
test
pop
scas
leave
mov
cmp
dec
jb
inc
sbb
ret
jge
push
cltd
leave
or
ja
mov
fcoml
mov
pusha
hlt
dec
out
fcmove
dec
shrl
xlat
xchg
repz
sub
xlat
lcall
jno
mov
insl
outsl
lret
push
fsubr
fs
push
jg
xor
ja
movb
xchg
clc
inc
lret
andl
xchg
mov
dec
cmp
fsubrl
rclb
loopne
cmp
lods
pusha
sbb
add
aas
jge
fbld
inc
sub
frstor
ja
cmp
or
push
adc
or
mov
pop
cmp
or
lods
cwtl
or
xchg
lret
loop
pushf
cs
int
ds
aam
pop
jb
or
jbe
xor
data16
and
add
pusha
pop
sbb
sbb
jnp
and
int
inc
fldcw
pop
dec
fwait
rolb
fbstp
enter
ret
dec
push
jg
dec
or
mov
xchg
lcall
std
lahf
pop
xor
std
or
ficompl
outsb
xchg
decb
inc
mov
dec
adc
xchg
cmp
out
xchg
mov
mov
push
js
gs
out
fidivrl
mov
loop
jno
push
mov
sahf
adc
mov
sub
push
adc
cmc
daa
mov
pop
aam
xor
sub
cmc
in
mov
divl
nop
xchg
xchg
movsb
inc
dec
fwait
iret
dec
addr16
dec
fildl
xor
mov
mov
mov
xor
daa
inc
mov
movl
pop
dec
mov
jg
push
dec
imul
cli
push
pop
ret
call
sbb
ljmp
data16
out
ljmp
call
hlt
sbb
fdivr
mov
testb
pop
dec
idivb
loop
push
cltd
mov
mov
sbb
mov
outsl
push
out
adc
jg
insb
insl
push
mov
dec
lahf
pop
int3
mov
mov
loope
les
imul
notb
nop
mov
insb
out
dec
ss
add
mov
and
jae
push
xchg
jecxz
rol
insb
push
mov
jmp
mov
jo
mov
pop
push
jl
mov
in
fstpl
jmp
mov
fldl
lods
xchg
mov
gs
push
mov
ljmp
iret
test
jge
hlt
fidivl
imul
fbld
imul
mov
xchg
and
cld
inc
jecxz
xchg
mov
into
sub
dec
rorb
ret
inc
mov
cmp
shrb
and
cwtl
repnz
adcl
aad
or
inc
xchg
xor
movsb
mov
mov
daa
adc
nop
jae
in
scas
sub
adc
ret
aaa
fcoml
subl
push
xchg
push
lcall
and
pop
shrl
xchg
stos
mov
mov
jnp
js
adc
or
dec
test
jge
sahf
xor
jb
cmpsl
adc
push
lret
xchg
sub
dec
lcall
jb
testl
pop
lods
mov
scas
fnstenv
in
icebp
dec
jne
mov
shll
cltd
and
jnp
cli
xor
mov
cmp
pop
add
fsubl
aas
ret
movsl
rcl
xor
mov
mov
cmp
fildll
int
ja
stc
insl
cmp
sub
scas
pop
fwait
or
mov
mov
xor
fs
add
testb
mov
lods
mov
testb
movsl
je
int3
xchg
outsb
mov
jmp
js
xor
out
aas
push
xchg
mov
jno
fildll
movsl
shrl
ss
ds
push
mov
dec
cmp
hlt
ljmp
lret
out
cli
loop
inc
sti
loopne
fmul
js
push
cmc
andl
fisubs
lea
cmpsb
sub
pop
xchg
std
lods
xor
popf
shrb
insb
stos
out
shlb
cwtl
enter
sub
into
andl
das
pop
cmpb
add
mov
std
or
cmp
cld
sbb
dec
sbb
pop
adc
push
movsl
inc
rclb
fidivrs
mov
push
mov
jne
pop
in
jae
and
dec
cltd
sub
mov
mov
bound
sbb
out
stos
jl
movsb
fildll
mov
xchg
jnp
repnz
sub
jg
sbb
cmp
scas
mov
or
mov
or
sbb
scas
mov
dec
test
roll
sbb
xor
ffree
inc
lcall
sti
jo
ficomps
xchg
movsl
clc
enter
cmpsl
insb
inc
jbe
cwtl
add
shrb
fs
lds
pop
lret
nop
in
rclb
push
rcll
pop
sbb
test
cli
subb
cmc
hlt
mov
cli
cmp
loop
jo
pop
adc
add
test
loope
push
faddl
sbb
stos
daa
insb
sub
sub
or
int
xor
int3
push
xchg
mov
lcall
lret
outsb
ret
insb
loopne
icebp
add
cwtl
xor
lods
nop
cmp
sbb
aaa
sub
mov
lret
xchg
outsb
pop
cmp
pop
xchg
or
dec
pop
lods
test
push
jmp
daa
mov
and
jmp
pop
outsb
jns
call
xchg
out
or
fimull
mov
or
mov
and
testb
pop
mov
mov
out
or
and
sbb
push
test
or
xor
pop
jno
sbb
hlt
push
in
sub
mov
aas
dec
mov
dec
dec
and
loop
mov
stc
cmpsl
mov
jo
in
push
push
adc
dec
pop
inc
sbb
mov
movsl
inc
push
jp
xor
dec
xchg
dec
inc
mov
push
stc
add
dec
jl
mov
sub
and
push
in
and
mov
sarl
loope
cld
aaa
mov
fsubrs
data16
jae
jmp
fsub
out
add
mov
push
movsl
xor
mov
jmp
stos
push
xor
sub
adc
sbb
popa
cmpsb
movsb
ret
mov
sbb
mov
scas
out
daa
loopne
js
mov
imul
movsb
loop
xchg
jmp
hlt
pop
dec
leave
scas
shlb
ljmp
fdiv
popa
mov
outsb
mov
in
xchg
jo
xchg
arpl
in
mov
aas
test
mov
outsb
scas
push
push
aaa
in
cli
inc
insl
shl
lods
inc
xchg
cmpsb
push
jge
sub
adc
push
push
pop
mov
outsl
mull
into
les
out
outsb
xor
jmp
push
push
cmp
loope
into
call
push
cmp
nop
test
jl
mov
xchg
pop
dec
std
cmp
loope
mov
pop
lret
cltd
cmp
out
out
fistps
cs
sar
fsubrl
sbb
add
sub
add
jge
loope
sbb
ret
adc
push
data16
nop
mov
mov
xchg
and
ljmp
inc
insl
cwtl
push
mov
sahf
fsubrl
clc
test
idiv
push
lcall
push
fistl
jo
add
mov
sub
lock
adc
mov
jl
sbb
int
pop
js
xchg
gs
jge
adc
adc
imul
mov
pop
popf
pop
cmp
in
shr
aas
sub
inc
or
adc
push
push
dec
push
mov
roll
int3
push
push
mov
adc
mov
xor
jge
call
push
fwait
xchg
add
and
test
cmpb
or
icebp
repnz
cli
adc
push
ret
pop
lods
mov
popf
lcall
jmp
cltd
sbb
popw
jg
and
int3
sub
jne
jne
ljmp
jo
pushf
icebp
loop
mov
data16
xchg
adc
lods
or
pop
test
adc
push
nop
in
notl
int3
sbb
add
les
push
icebp
and
push
sarl
loope
mov
and
nop
mov
adc
mov
push
jo
fdivl
mov
imul
sti
xor
imul
jge
push
mov
or
mov
xor
lret
dec
mov
push
into
xchg
pop
andb
xchg
orb
rcrb
push
xchg
cltd
loope
inc
ds
mov
mov
arpl
mov
imul
out
hlt
in
ret
pusha
sub
push
fstpt
gs
lcall
mov
ds
int
add
aaa
clc
lock
or
jmp
popa
lock
sbbl
mov
sub
sub
jnp
cmp
dec
pushf
fs
cmp
fcompl
imul
mov
and
pop
in
pushf
jno
inc
rep
loop
lcall
inc
stc
negb
xchg
std
loope
push
sub
mov
scas
es
jg
xchg
fcmovbe
xchg
push
or
mov
pusha
pop
push
leave
sti
push
leave
and
hlt
das
dec
inc
cs
mov
fwait
adc
add
stos
inc
adc
mov
clc
jns
adc
rolb
f2xm1
loopne
inc
nop
mov
xcrypt-ctr
cmpsl
lahf
in
push
lods
jo
xorl
xor
out
xor
or
sar
inc
push
pushf
test
and
sub
push
out
xchg
mov
test
cmp
into
mov
xchg
test
shll
mov
mov
adc
jno
popa
hlt
inc
or
and
cmp
inc
xor
mov
and
stc
out
xor
xchg
or
cmp
xchg
imul
sub
add
jae
xor
mov
lds
cmp
sbb
xor
cmpsl
loop
add
std
sub
pop
mov
jl
mov
fmuls
jle
popa
xor
sbb
std
inc
cmp
lods
outsb
repnz
mov
mov
pushf
dec
out
aam
cmpsb
mov
fcmovnb
call
xchg
cwtl
mov
icebp
inc
scas
add
inc
sub
pusha
mov
lea
jge
xor
and
add
pop
sbb
clc
pop
cmp
xchg
ljmp
pmulhuw
ret
add
adc
ret
push
call
adc
out
adc
dec
mov
pop
mov
xchg
jl
data16
and
test
jo
push
outsb
cltd
scas
icebp
cmp
add
call
mov
pop
xchg
lods
arpl
in
and
xor
add
adc
cmp
or
sbb
insb
mov
pop
xchg
lods
arpl
in
and
xor
add
adc
cmp
or
sbb
insb
mov
pop
xchg
lods
arpl
in
and
xor
pop
fcoml
sub
cmp
or
sbb
insb
mov
pop
push
lods
arpl
fwait
stos
je
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
enter
call
mov
sbb
iret
pop
imul
inc
or
sbb
cmp
cmp
enter
call
mov
mov
pop
jno
popa
push
push
sub
sub
cmp
shl
shl
shl
rcll
mov
inc
aaa
xor
das
or
jge
je
jbe
mov
mov
xchg
jg
into
repnz
or
mov
or
dec
icebp
daa
icebp
nop
mov
cwtl
sub
sbb
sahf
xchg
scas
xchg
or
test
and
sbb
mov
outsl
and
inc
pop
jno
pusha
push
push
cmc
mov
sub
hlt
and
fcoml
push
cltd
mov
sahf
pop
xchg
xchg
mull
sbb
mov
xor
gs
ja
orb
dec
orl
mov
bound
xor
jns
loope
test
imull
lcall
jno
gs
and
sub
cmp
add
shl
sar
rcrl
mov
popa
jo
popa
inc
adc
add
xor
cmp
icebp
mov
cmp
aad
hlt
mov
js
add
or
pop
arpl
cmpsl
popf
mov
mov
test
jmp
or
adc
push
jae
pop
je
push
lods
mov
mov
mov
mov
test
mov
popa
push
xor
and
adc
add
icebp
fsub
call
mov
mov
dec
jno
popa
push
xor
and
adc
add
icebp
test
in
cli
and
popa
sbb
and
repz
dec
dec
pusha
stos
push
pop
fstpt
jae
xchg
add
arpl
adcl
cli
or
insb
dec
dec
add
repnz
pop
scas
outsb
rol
std
and
fwait
inc
mov
or
push
xchg
rolb
stos
cmp
mov
in
sarb
fisubl
int3
sbb
insl
cmpsl
add
stos
outsw
inc
clc
pop
insl
sahf
or
mov
inc
sahf
pop
mov
sarl
pop
mov
adc
enter
cmp
sti
test
out
loop
int3
test
mov
int3
lret
adc
jecxz
fiadds
mov
push
push
iret
dec
cli
repnz
loope
cmc
pop
pop
mov
cwtl
rorb
and
mov
sbb
sbb
inc
in
and
mov
das
or
rcr
xchg
das
testb
inc
push
mov
test
stos
dec
mov
cmpsl
and
stc
xchg
jae
xor
or
xchg
movl
cwtl
mov
in
mov
and
push
ljmp
xchg
mov
adc
push
jns
scas
push
jns
lods
push
adc
and
stos
movsl
in
inc
mov
out
divb
pushf
lret
out
ucomiss
xchg
shl
jle
jno
mov
mov
jb
jle
mov
sbb
inc
sti
mov
xor
sbb
shr
movb
push
fdivr
jmp
fldenv
push
jbe
jg
in
lock
mov
and
imul
pop
mov
ss
push
out
and
popl
mov
jle
stc
cmp
dec
and
xchg
lret
and
inc
out
inc
mov
lret
gs
pop
fisubl
mov
pop
sbb
cmp
inc
and
sarl
mov
sbb
inc
data16
jbe
std
mov
shll
out
sbb
das
ja
mov
out
xchg
and
mov
dec
mov
ljmp
lcall
lcall
mov
xlat
inc
push
sbb
aam
or
push
dec
in
cmp
repnz
pop
mov
push
adc
xchg
iret
daa
add
lea
push
push
popf
icebp
jp
sub
mov
xchg
out
stos
xchg
jne
jle
sbb
cmpsl
xor
push
jmp
inc
sub
fprem1
test
sbb
inc
popa
dec
testb
or
jmp
pushf
and
rorl
int
pop
jecxz
jmp
pop
jne
fisubs
sub
lds
sub
test
jecxz
adc
cmp
sub
add
mov
rclb
jg
pop
roll
ds
inc
dec
inc
test
test
jmp
push
ss
into
imul
loop
std
sbbl
and
sahf
movsb
add
jnp
inc
stos
xor
dec
imull
fldcw
push
mov
xor
push
inc
and
and
popf
xchg
mov
mulb
pop
dec
sub
lcall
loop
pop
xchg
test
enter
rcrl
repz
cmp
pop
pop
lods
stos
jae
adc
fs
aad
mov
ds
dec
mov
out
add
push
mov
out
cmpsl
outsl
leave
jp
lahf
cmp
cli
nop
push
cmpb
jp
cmc
subl
test
arpl
cmp
pop
sub
adc
jp
adc
repz
aad
subb
cs
shlb
ret
mul
push
ret
mov
xor
sub
mov
pop
shl
stos
out
add
loopne
test
jb
mov
xchg
xchg
mov
sahf
lods
leave
xchg
ret
jbe
or
mov
stos
cld
xchg
adc
ficoms
test
pop
vcvtsd2ss
idivb
in
pop
push
and
insb
outsb
fmulp
pop
or
mov
mov
xor
gs
aam
jg
fs
adc
sbb
xchg
xor
std
imul
outsb
sbb
fidivs
sub
repnz
fstl
insl
push
and
add
adc
outsl
cmp
pop
aaa
stos
neg
data16
mov
sub
lea
push
mov
sub
or
jo
sbb
mov
ljmp
mov
pop
sub
daa
aad
repz
outsl
adc
jl
addr16
adc
adc
cwtl
mov
pop
jns
test
xrelease
cli
movl
fistps
les
push
or
cs
cmp
xchg
outsb
dec
dec
mov
pusha
mov
mov
mov
mov
outsl
xchg
outsl
jae
enter
dec
std
jg
cmp
sub
sti
dec
mov
fldenv
adc
xor
adc
mov
sbb
mov
sub
dec
mov
sub
jg
xor
rcll
push
daa
push
pop
add
ljmp
or
jl
sbb
pusha
mov
outsl
or
and
sbb
jge
lahf
mov
es
scas
adc
jno
movsb
dec
ret
rorb
divb
dec
icebp
gs
leave
pushf
and
dec
mov
lret
adc
mov
les
movsb
or
jge
cli
push
add
xchg
dec
dec
pusha
or
push
lahf
adc
mov
mov
dec
pop
inc
cld
hlt
xor
lock
loop
jmp
mov
push
call
flds
inc
hlt
or
das
loopne
jecxz
scas
outsl
mov
sub
nop
adc
out
mov
xor
mov
into
jmp
sub
lds
xchg
cmp
adc
hlt
or
inc
scas
ja
cmc
adc
sbb
fsubs
das
addr16
repnz
or
int3
mov
dec
insl
add
aaa
andps
xchg
jp
bound
xchg
xchg
add
xchg
jmp
add
xchg
cld
mov
subb
pop
or
loop
mov
pop
pop
dec
movsb
sub
jno
scas
stos
fiaddl
addb
mov
push
lahf
and
cmpsb
jge
fcoml
cltd
ret
pop
aam
in
insl
xchg
cmpsl
iret
adc
push
pop
rcr
outsb
push
cmp
dec
jno
xor
jg
push
jbe
pop
push
mov
inc
test
xor
enter
cmc
sti
jge
popf
outsl
lds
mov
xchg
add
push
adc
jb
shrb
arpl
mov
aas
sbb
cmovnp
insb
dec
cmp
and
cwtl
or
arpl
loopne
sahf
xor
repz
xor
cltd
into
das
rcrb
mov
inc
xor
and
sahf
push
xor
daa
pop
ret
jp
shl
jle
xchg
jecxz
cmp
test
mov
test
jmp
mov
mov
push
push
test
push
and
jmp
push
inc
into
out
dec
decl
jmp
inc
lahf
fstps
push
pop
stos
aas
mov
shrb
aam
pop
stos
insl
mov
mov
xchg
orb
cmp
mov
gs
pop
pop
clc
push
enter
mov
pop
pop
mov
int
mov
and
pop
xor
arpl
test
adc
xchg
sarl
bound
popf
mov
std
imul
ss
jp
mov
rcrb
jle
xor
mov
mov
mov
dec
fisttpl
lcall
shll
pop
cmp
jnp
aam
nop
test
cltd
pop
xor
sub
mov
insl
dec
sub
div
sub
je
jmp
add
pop
in
mov
les
bound
sbb
push
test
jmp
in
xchg
fdivrs
inc
rcrb
xchg
call
dec
adc
nop
pop
and
insl
xor
es
inc
shlb
mov
mov
outsb
bound
fisubl
jl
fmuls
ss
xchg
in
inc
jmp
jle
out
mov
sbb
mov
sbb
xchg
dec
push
and
scas
inc
fdivrs
push
bound
mov
cmp
fbld
cmp
sub
ljmp
scas
jb
mov
arpl
daa
imul
sahf
add
push
and
rcr
js
cmp
xor
mov
jnp
rcrb
ljmp
add
cmpb
push
inc
inc
fdiv
aam
fidivl
push
sbb
movsb
sbbl
inc
mov
shrb
cmp
or
lret
sub
mul
stos
loope
pop
sub
pop
in
fnstcw
stos
dec
adc
fsubr
lret
pop
ret
sarb
into
xchg
lret
adc
sbb
xor
xchg
dec
mov
or
outsl
sbb
push
in
sbb
mov
mov
fsubr
mov
pop
stos
mov
adc
xor
inc
dec
pushf
mov
xchg
fists
dec
jne
sub
imul
pop
mov
mov
pop
out
cld
out
or
and
movsl
jl
add
sbb
aaa
mov
stos
inc
pop
fldenv
inc
std
jnp
ja
inc
mov
das
push
push
ds
pop
pusha
mov
adc
mov
rcrl
nop
popa
cmp
inc
xchg
push
dec
dec
jns
mov
hlt
or
scas
inc
and
cmpsl
or
jb
sti
push
xchg
loop
fs
cmc
and
jae
lods
lods
add
loopne
aam
cltd
or
dec
pop
lea
in
dec
sbb
imul
cs
cli
lds
xchg
mov
subl
mov
mov
in
pop
fs
jge
add
movntq
jle
jnp
outsl
mov
inc
shl
cli
mov
mov
push
imul
jne
jg
push
fistps
and
stos
scas
xchg
fidivs
mov
xchg
xlat
cwtl
inc
adc
mov
jmp
pop
fcmovu
adc
cwtl
add
popf
or
and
mov
xchg
mov
xchg
fistpl
mov
sub
lcall
jbe
mov
lods
xchg
es
movsl
jle
hlt
jnp
mov
pushf
xor
cmp
int
sbb
jecxz
pop
adc
mov
inc
xchg
jo
clc
subb
mov
mov
jle
repnz
in
pop
rdtsc
addr16
fwait
cmp
add
and
daa
mov
inc
mov
push
in
mov
dec
dec
pop
fwait
shl
jg
popf
pop
sahf
and
or
pop
jne
sbb
jmp
into
push
xor
pop
rcr
movsb
pop
sbb
int
and
pcmpeqb
lds
cmp
xchg
dec
xor
add
xor
cmp
jp
jecxz
sbb
xchg
push
pusha
sahf
pop
jl
lea
sti
aas
pop
loop,pt
mov
jecxz
cmp
arpl
movsb
popf
sti
jmp
call
dec
or
popa
aaa
jl
adc
out
fsubrs
dec
call
inc
xchg
pop
out
cmpsl
in
cli
outsl
loope
hlt
sbb
xorb
xchg
adc
fsts
jno
and
xor
mov
insl
out
fldt
push
jnp
in
addr16
ss
test
cmpsb
filds
jno
fnsave
pop
mov
popf
add
out
lret
and
adc
xchg
ret
scas
mov
pop
cmpsl
inc
mov
shrb
mov
mov
jmp
fsubl
icebp
cmc
sbb
js
lea
fildll
ds
mov
hlt
les
jne
rcll
cmpb
mov
pop
rorl
add
shrb
aad
push
cltd
aad
testl
fistps
or
cmp
and
fs
iret
xor
and
es
cwtl
insb
ret
ljmp
inc
ret
jns
ficoms
pop
out
mov
test
add
pcmpeqb
mov
pop
adcb
xchg
lret
aaa
mov
in
dec
icebp
fisttpl
jno
adc
fimull
jno
std
cmp
cmpsb
lods
jecxz
push
cltd
jo
iret
xor
inc
ja
add
sub
xlat
int
arpl
test
xlat
icebp
js
ja
jae
mov
fidivs
pop
lock
fucomip
cs
xor
pop
movsb
mov
inc
js
inc
dec
outsb
xorb
adc
lret
addr16
inc
inc
std
imul
arpl
lret
int
jg
out
jne
adc
jge
jno
pop
out
push
mov
xchg
popf
mov
xchg
addr16
icebp
cmpsl
fsubrl
adc
fisttpll
push
call
sbb
inc
cld
and
mov
jno
inc
and
mov
gs
stos
addr16
cmp
mov
ficoml
push
fstpl
and
mov
and
push
mov
cltd
add
sub
mov
adc
sahf
add
xorl
shr
imul
cmpsb
nop
mov
outsl
jle
jns
mov
in
cmp
and
cmp
adc
sbb
mov
dec
out
out
jns
jmp
xor
loop
inc
jo
ss
lcall
sub
pop
cs
jb
mov
rcll
test
ret
mov
or
or
cli
cmpsl
test
mov
and
cli
mov
inc
push
cmpsb
popf
dec
mov
ret
lret
inc
mov
add
les
mov
mov
jmp
mov
or
test
stos
js
pusha
mov
mov
aad
xchg
inc
test
jecxz
xor
cmp
out
sbb
dec
arpl
xlat
lods
xchg
xchg
cmp
pop
jbe
lcall
add
lock
cmp
xor
inc
test
cwtl
lds
stos
in
outsb
out
cmp
pop
loope
add
sub
insb
lds
and
xor
lods
sub
int3
test
ds
mov
insl
fstps
cwtl
popa
int3
sbb
decl
sbb
pop
clc
pop
pop
xor
test
rcrl
xor
fistpl
push
data16
pop
push
loopne
pop
or
mov
shll
xchg
sbb
jo
rcrb
movsb
xor
fsubl
pop
or
les
adc
sbb
lcall
sar
mov
sub
in
or
push
fisttpl
cmc
push
xchg
ret
adc
mov
mov
mov
mov
icebp
inc
movsl
mov
adc
in
or
lcall
jo
in
sbb
cli
or
push
out
jle
adc
jne
push
hlt
inc
mov
pop
ja
cli
in
in
mov
pop
and
jnp
out
test
jno
push
dec
cmp
imul
cmc
sub
xor
and
push
insb
ja
mov
rcrl
pushf
cli
xor
test
push
push
dec
imul
push
jp
or
pop
icebp
popf
in
dec
stos
or
jmp
enter
inc
cltd
sub
mov
cltd
dec
iret
inc
pop
sbb
lret
movsl
pop
xchg
insl
lods
fbld
or
push
sahf
out
xor
sahf
das
iret
cmpxchg
outsb
mov
cmp
pop
inc
sub
shll
and
add
and
jae
inc
lods
push
js
bound
push
and
adc
mov
sbb
dec
dec
out
add
outsb
xor
mov
mov
push
mov
cmp
mov
mov
popf
outsb
xchg
xlat
dec
jmp
rcr
sbb
divl
icebp
test
and
or
xor
lret
push
lret
xchg
add
jmp
int3
ss
add
stc
repnz
or
cmp
inc
iret
cmp
clc
aas
push
xchg
cmpsb
push
decb
push
xchg
lahf
leave
ret
mov
jns
rcl
cs
jge
sbb
mov
cmc
pusha
mov
dec
cli
lret
mov
xor
push
xor
pop
xor
test
xor
push
movsb
sbb
scas
adc
mov
cmp
fs
cmp
xor
pop
ss
xor
pop
sub
xor
pop
mov
bound
fwait
add
jge
adc
nop
pop
and
push
and
aaa
mov
inc
js
xchg
es
xor
aad
rcrl
mov
nop
xlat
fcomp
push
insb
repz
xchg
mov
mov
rcll
popa
fdivrs
fwait
outsl
aas
sub
ss
dec
or
icebp
pop
imull
adc
cmp
roll
mov
fstp
pop
sub
jae
cltd
push
xchg
in
mov
stc
mov
inc
pop
repnz
or
outsl
int
push
out
jmp
cmpsl
lcall
push
mov
jo
les
xor
gs
cli
dec
daa
push
fistpll
fdivrl
je
cltd
jno
mov
mov
ds
ret
ror
jmp
fcomps
lahf
sti
push
mov
cmp
pop
mov
dec
mov
jb
pop
pop
xchg
sbb
out
dec
fwait
cmp
fistpll
inc
js
in
fldl
and
ds
cmp
test
xor
lahf
xor
bound
test
sti
arpl
mov
xchg
mov
and
sub
test
scas
mov
cmp
dec
ss
pop
inc
xorl
xchg
ja
cmpsl
mov
insw
or
or
xchg
aam
mov
shlb
leave
insb
xchg
mov
push
ret
insl
cld
fcmovnb
push
xor
mov
pop
jp
inc
sbb
jbe
clc
fs
or
pop
leave
pop
and
add
inc
push
call
add
frstor
push
out
rcrb
sbb
scas
test
rcrb
mov
out
stos
or
out
jno
cmc
inc
jno
gs
test
and
push
mov
test
jge
clc
daa
pop
xchg
mov
sbb
mov
sub
jb
sbb
cli
pop
sub
mov
jbe
sahf
sub
inc
jecxz
mov
imul
adc
out
pop
jmp
daa
shll
adc
movsl
std
fwait
cmp
push
push
xchg
lahf
jle
cmp
xor
sbb
lcall
or
das
mov
mov
rorb
sbb
andb
dec
xchg
or
jb
rolb
dec
leave
mov
push
add
add
jae
mov
mov
mov
aad
inc
sub
mov
xchg
push
mov
adc
test
inc
out
mov
stos
jno
lret
pmaxub
dec
jne
out
mov
and
mov
shlb
outsb
shl
dec
shll
xor
mov
insb
add
or
mov
mov
adc
cmove
mov
ds
imul
int3
push
dec
adc
roll
xor
add
ret
out
dec
data16
jle
sbb
out
xor
pop
into
sub
sbb
out
cmp
std
push
dec
push
scas
stos
pop
lea
pusha
and
mov
lret
lret
and
xchg
fistps
mov
sub
addr16
pushf
push
ret
lret
outsl
sub
sbb
out
lcall
sub
test
sub
jecxz
jbe
and
jo
inc
pushf
lds
xchg
sbb
popf
imul
add
test
push
xchg
push
push
gs
and
aas
hlt
das
cmp
add
fwait
sub
add
or
mov
sub
lret
xor
fmull
xchg
stc
mov
inc
dec
xchg
cmpsb
fdivr
jl
xor
add
fnstenv
push
and
mov
xchg
js
sbb
dec
mulb
dec
scas
pop
mov
jo
lds
xchg
insb
orl
jecxz
mov
arpl
adc
sti
iret
cltd
inc
add
adc
push
mov
std
and
xor
ret
icebp
dec
test
clc
clc
mov
xor
sbb
inc
xchg
inc
cmpsl
lahf
mov
add
sbb
bound
icebp
sub
mov
fmuls
mov
push
or
lods
fwait
ror
lret
rclb
fisubl
mov
dec
mov
push
sub
pop
xor
lock
sub
in
mov
or
test
add
fistpl
cld
fisubrl
sub
nop
push
push
popf
fcomp
jae
shll
incb
mov
dec
cwtl
xor
decl
inc
rcrb
xor
mov
xor
xchg
xorb
sub
lock
das
adc
jns
scas
mov
and
daa
jae
out
mov
jae
lock
sti
pushl
mov
mov
iret
dec
xor
xchg
in
or
xchg
push
daa
dec
sub
push
cmpsb
and
or
mov
or
or
cmp
mov
pop
cmpsl
clc
int
clc
icebp
cwtl
stos
dec
jmp
dec
sahf
xor
xor
or
jle
mov
lock
mov
aad
sbb
inc
or
cmp
sti
mov
adc
adc
add
add
xlat
or
ljmp
ret
bound
sar
rorl
mov
popa
push
xor
and
adc
add
icebp
fsub
call
mov
mov
dec
jno
popa
push
xor
and
adc
add
icebp
fsub
call
mov
mov
dec
jno
popa
push
xor
and
adc
add
icebp
jmp
mov
mov
mov
cmpsl
lret
ret
ss
nop
out
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
sub
in
dec
aaa
data16
mov
xchg
enter
test
mov
stc
push
sub
sub
pop
or
jns
mov
cltd
enter
push
jmp
js
dec
xor
sub
inc
or
arpl
push
mov
test
xlat
mov
mov
sbb
dec
pop
xor
loope
mov
add
loopne
mov
aaa
adc
sbb
in
and
in
adc
repz
adc
cmpsl
vcmpsd
mul
in
adc
mov
mov
mov
divb
dec
jbe
pop
mov
sbb
lods
pop
enter
clc
fld
fldln2
pop
cwtl
stc
push
sub
punpckhwd
xchg
jge
ss
mov
push
lcall
xchg
xor
fnstenv
cmp
add
cltd
dec
in
movsl
mov
fsubr
cltd
push
xchg
push
xchg
mov
shl
ljmp
hlt
mov
mov
xor
jmp
dec
cmp
sub
pop
or
pusha
call
mov
mov
mov
cwtl
popf
sub
and
xor
sub
dec
aaa
insb
add
popf
loope
cld
mov
mov
jmp
sbb
cmp
cmp
jo
dec
adc
lret
cli
test
test
pushf
or
dec
xor
fs
sbb
mov
cltd
enter
test
mov
stc
push
sub
sub
pop
or
jns
mov
cltd
enter
test
mov
stc
push
or
je
cmp
aad
xchg
lahf
pop
leave
repnz
and
mov
mov
lock
les
and
insb
cmpsl
xor
mov
jo
cwtl
repz
and
xor
negb
dec
into
in
xor
insb
stc
sub
dec
fcmovnbe
pusha
das
pop
enter
and
aam
repnz
add
or
int
shl
loopne
jl
sub
sub
push
jmp
inc
push
arpl
je
outsb
out
ja
gs
xor
popa
mov
pop
add
sti
or
daa
movb
mov
mov
loopne
hlt
fcmovne
fwait
push
adc
lahf
out
mul
and
jmp
sarb
fcomp
fdivrl
xlat
cmp
shrb
inc
rep
scas
stc
add
xor
sbb
mov
pushf
add
int3
leave
push
cmp
or
addr16
out
faddl
cmp
cmc
push
xor
add
pop
mov
popf
inc
push
pop
scas
adc
orl
loope
push
jo
and
int3
and
dec
out
ds
mov
mov
pop
xchg
cld
pop
add
stc
imul
test
popf
fwait
xor
pop
xchg
out
out
loopne
jae
jg
mov
gs
jl
repnz
add
mov
add
hlt
mov
nop
jg
nop
dec
shr
scas
sbb
clc
and
test
inc
rorl
sub
add
xchg
sub
dec
sub
in
in
mov
cmpsl
stos
pop
sub
push
mov
roll
out
mov
jg
push
fs
pop
inc
jae
push
dec
xor
dec
out
enter
add
clc
es
movsl
cmc
sarb
add
push
daa
mov
inc
mov
cmp
mov
out
xor
pop
mov
or
popa
xlat
dec
jg
dec
out
sub
addr16
rcl
mov
dec
mov
iret
scas
jb
inc
add
in
jo
les
sub
push
jge
ds
fsin
data16
loopne
popf
xchg
lds
xchg
jbe
loope
outsb
nop
addr16
int
dec
inc
rorb
outsl
daa
jl
xor
test
jb
adc
sbb
cmp
sub
pop
sbb
dec
pop
pop
jnp
lret
adc
in
fisttpll
je
or
lret
ds
cmp
out
imul
mov
and
xor
aam
mov
jo
int3
gs
sub
jge
andb
aad
mov
push
aam
sub
or
jl
and
popa
in
dec
es
xchg
inc
push
jmp
daa
cmp
popa
push
fcomps
or
push
fdivl
adc
pushf
pop
loope
test
pop
dec
xchg
ficoml
lods
lods
js
sti
mov
iret
mov
pop
jbe
cmpsl
sub
scas
cmp
loopne
inc
int
xor
sub
mov
mov
bound
shll
es
aas
add
ds
test
sbb
push
cs
push
fiadds
xor
fwait
xlat
testb
pop
mov
ja
inc
sahf
sarb
in
cmp
pop
roll
xchg
mov
dec
fimuls
and
call
mov
push
lods
lods
dec
push
ja
mov
xlat
mov
andb
rolb
sbb
inc
sti
and
jecxz
in
inc
stos
stc
test
sub
push
shrb
pop
out
and
xchg
div
adc
fsubr
stc
cmpb
pop
cmp
shll
fadds
jb
shll
xchg
push
cmp
pop
mov
xchg
pop
xor
aaa
mov
cwtl
std
push
es
lds
or
popa
outsb
jb
inc
test
sbb
mov
dec
push
adc
or
icebp
inc
scas
sub
mov
mov
in
xchg
movsb
in
inc
mov
adc
enter
fsubrl
inc
push
sbb
xchg
rorl
xor
sbb
dec
movsl
adc
mov
cmp
stc
lret
dec
mov
pop
jp
js
ljmp
push
push
cmp
cmp
lcall
push
cli
xchg
adc
cmovge
in
add
add
xchg
pop
rcll
mov
inc
and
dec
jns
test
add
mov
into
shl
aas
icebp
lret
mov
jbe
adc
movsb
lea
hlt
mov
mov
jnp
popf
jae
adc
jno
gs
xorl
dec
test
xor
insb
push
xor
push
push
adc
lock
jnp,pt
ss
pop
sub
mov
push
add
or
sbb
sbb
sub
cmp
sbb
aad
dec
pop
fbld
push
adc
xchg
or
insb
int3
cltd
dec
mov
sub
push
daa
push
jb
into
incb
addr16
mov
or
push
mov
mov
jg
jg
jecxz
cmp
xlat
sar
push
jae
stc
pop
push
ret
push
inc
add
hlt
clc
ret
xchg
xor
xchg
cmp
scas
jg
ds
in
or
mov
cmpl
jnp
cmovns
or
enter
push
xchg
dec
test
push
push
loope
and
iret
es
movsl
xlat
fcmovnb
out
out
push
pop
or
pop
pop
test
xchg
adc
loope
dec
sub
in
imul
sbb
aaa
mov
mov
popa
lcall
push
lods
xchg
pop
andl
inc
daa
mov
xchg
dec
inc
xchg
fs
adc
pop
xchg
push
mov
aaa
incl
jb
mov
imulb
and
push
push
jnp
push
into
jle
push
and
jo
cltd
pusha
jmp
dec
loop
pop
pop
mov
call
xor
lahf
shll
in
test
out
fcoml
arpl
cmp
fdivrl
daa
pop
inc
sbb
je
in
test
pop
pop
mov
lret
or
fldl
ds
dec
xchg
popa
movsb
std
dec
push
jae
push
pushf
xor
mov
pop
std
scas
push
mov
mov
enter
push
fstpl
mov
xchg
push
or
dec
shll
push
sbb
or
push
imull
hlt
pop
scas
in
daa
jbe
and
pop
xchg
mov
pop
mov
add
lods
hlt
dec
inc
mov
in
cmc
in
outsb
mov
fistl
inc
jb
and
push
enter
jbe
ret
mov
es
insb
mov
add
push
insb
mov
inc
stc
pop
dec
adc
fsubs
sti
jnp
adc
outsl
cmpl
movsb
sbb
or
mov
mov
sub
pop
mov
scas
int
xchg
loope
adc
stos
pop
mov
mov
sbb
sub
dec
mov
pusha
fmuls
popf
adc
cltd
add
mov
gs
push
mov
push
scas
jg
mov
iret
xchg
add
sbb
test
fdivrl
cld
cmp
xorl
shll
lret
cmp
aam
xor
movsl
xchg
add
movsb
ret
sbb
sub
out
in
sbb
adc
mov
push
pop
scas
mov
stos
lret
in
loop
roll
mov
mov
push
pop
fistl
stos
xor
jmp
xchg
xor
sbbl
cs
mov
vmread
ljmp
adc
stc
lret
shrl
mov
adc
inc
loopne
imul
inc
pop
fcoml
dec
add
shr
lods
mov
xchg
push
mov
mov
jle
fimuls
popa
femms
mov
stc
ljmp
dec
pop
push
cltd
out
cmp
xchg
mov
stc
sbbl
out
fs
xor
sbb
test
push
popf
sbb
bound
aas
iret
arpl
sti
repz
lcall
into
add
sbb
xchg
dec
dec
push
addb
mov
out
pop
adcl
add
cmp
out
dec
cmpsb
xchg
and
add
cli
xchg
adc
outsl
jmp
xchg
repz
fsubrs
mov
addr16
mov
pop
neg
or
inc
dec
or
push
xor
sti
stos
push
jb
rcll
mov
mov
fdivs
popa
mov
or
mov
out
inc
adc
xchg
xor
orb
inc
or
popa
into
mov
lret
fucomip
out
mov
int
xchg
decl
add
sub
sub
or
cmpsl
lea
subb
aam
les
jo
es
xor
sbb
ds
je
add
jbe
mov
push
or
pop
inc
add
popf
int
cmp
pop
cwtl
cmpb
popa
out
adc
je
xor
faddl
sbb
push
loop
test
mov
daa
xchg
mov
rolb
mov
jmp
sbb
dec
sub
aas
fsubl
bound
loope
push
pop
jne
sbb
outsl
xchg
out
repnz
dec
xchg
test
sub
cltd
xlat
out
push
or
insb
push
jecxz
sub
addr16
and
cmp
and
or
je
in
cwtl
in
daa
call
aad
inc
add
cltd
fmuls
xchg
int3
test
pop
jo
fstpt
dec
shlb
repnz
jno
dec
test
insb
mov
push
data16
push
xor
mov
jg
lock
xor
jg
sbb
iret
add
lods
scas
popa
mov
mov
loope
add
and
movsb
negl
iret
lods
orl
ficompl
add
sbb
jns
mov
sub
xchg
xor
sub
jecxz
cltd
std
pop
stos
daa
mov
mov
push
mov
xor
nop
pop
enter
bound
rcr
movb
arpl
in
mov
shlb
fstp
imul
xor
mov
iret
jne
mov
ljmp
mov
mov
mov
aad
push
push
andl
insl
mov
jb
aad
inc
lret
fsubrs
pop
test
push
pop
jle
mov
rolb
in
loop
int
mov
out
pop
pop
mov
jg
sbb
cmpsb
push
aad
mov
mov
dec
inc
addr16
cltd
dec
out
lcall
sub
aaa
add
pop
push
fldcw
xchg
xor
cmp
fistpll
mov
mov
sbb
inc
cmp
subl
loope
movsb
adc
xorb
or
jo
lcall
dec
push
into
add
mov
pop
xchg
stos
call
xchg
shll
xchg
pop
pop
fcomps
test
mov
test
adc
mov
loop
clc
sbb
imul
divb
das
shll
pop
insb
push
cwtl
sub
push
ss
ficomps
das
cwtl
dec
ret
fldcw
scas
xor
into
sbbl
aad
shll
push
rorb
sahf
subb
in
out
rcr
mov
stos
inc
scas
sbb
cmpsb
int
lock
iret
js
mov
incb
mov
adc
test
mov
imul
and
jns
jno
xor
cmp
pop
loop
sbb
out
dec
popa
addr16
fwait
call
or
sbb
inc
adc
cmp
push
js
call
cmp
int3
xor
fmul
cli
repnz
int3
out
pop
xor
xlat
xchg
fidivs
clc
rol
movsl
xor
add
inc
jae
ror
lock
mov
cmp
in
fimuls
mov
mov
push
cmp
pop
push
inc
or
inc
test
push
loop
mov
lret
in
loope
xor
cs
loope,pt
dec
js
add
outsb
std
enter
sub
jo
clc
mov
mov
add
negb
mov
and
mov
add
lret
inc
pop
xchg
cmc
cltd
adc
sbbb
mov
pop
movsl
lods
mov
imul
dec
ljmp
adc
push
cmp
pushf
adc
xor
sbb
iret
add
mov
dec
jge
xor
aad
fs
push
xor
mov
sbb
iret
mov
jb
sbbb
ja
sysenter
fistl
dec
rcrb
test
inc
cmp
cmp
push
faddl
mov
fadd
mov
jle
mov
jbe
or
mov
xchg
mov
sbb
mov
out
pop
andb
movsb
xchg
aam
sbb
inc
push
xor
cmp
bound
adc
lods
inc
jl
hlt
bnd
fwait
xchg
mov
push
jge
mov
xor
cmc
insl
and
in
inc
pop
push
xor
sub
adc
cs
and
mov
inc
shlb
add
mov
shll
test
std
aas
and
mull
dec
mov
inc
xchg
in
and
scas
inc
lea
pop
scas
les
mov
push
add
push
shlb
movsl
das
scas
or
les
xor
bound
loope
dec
adc
xchg
pushf
inc
xchg
daa
gs
push
shll
repnz
jo
adc
je
mov
mov
out
out
sub
mov
fsubrl
push
stos
mov
push
cwtl
sub
xor
xchg
pop
jnp
insl
mov
rep
out
inc
and
pusha
fbld
add
xchg
lods
fbstp
jmp
fsubrs
insb
inc
fisubrs
jle
out
mov
sarl
cmp
std
aaa
das
mov
cltd
ja
pop
es
xchg
pop
or
stos
lods
xorl
add
push
or
sbb
inc
js
jae
mov
mov
lods
sarb
jg
mov
push
and
in
mov
lret
sbb
popf
xchg
cwtl
ljmp
out
jno
ror
or
inc
mov
lret
rcrl
or
stc
mov
shrb
sbb
push
sub
dec
xor
pop
insl
shlb
jp
sahf
dec
dec
ljmp
dec
subb
outsl
mov
mov
loope
mov
fwait
sbb
mov
jae
pop
push
sbb
bound
cmpsb
sbb
test
test
inc
xor
xor
lahf
enter
mov
nop
cld
fucom
sbbl
outsb
inc
push
clc
in
clc
inc
mov
arpl
mov
fs
dec
decb
ds
es
or
inc
test
fdivl
das
js
ds
fs
je
sbb
push
push
into
in
mov
push
pop
inc
push
scas
pop
sbb
cli
addb
lahf
mov
add
into
gs
addr16
popf
adc
mov
loop
and
fwait
loopne
or
pushf
cwtl
cld
shl
inc
cmpsl
add
jnp
es
pop
das
and
test
pop
aaa
into
push
cmp
jbe
xchg
mov
inc
mov
push
cmp
jne
jg
shrb
mov
adc
sbb
dec
lcall
jecxz
mov
mov
sbb
test
hlt
pop
jl
push
scas
inc
cli
mov
jecxz
push
adc
cmp
scas
pop
mov
shll
jp
sub
sti
fcoml
jo
in
mov
jb
cltd
pusha
mov
xchg
mov
cld
das
icebp
test
sarb
lret
lods
pop
add
dec
test
cmc
cmp
ss
adc
enter
xchg
pushf
outsb
in
inc
ljmp
cltd
adc
pop
fwait
xchg
sub
sbb
jo
add
imul
shll
mov
sbb
cmp
adc
mov
ret
sbb
movsb
in
pusha
jbe
xchg
inc
popfw
pop
jbe
xchg
imul
mov
adc
pusha
aad
push
lds
ret
scas
sub
in
push
pop
loopne
mov
pop
lret
imul
sbb
dec
cwtl
sti
jmp
out
or
push
lds
jae
rolb
or
es
mov
mov
andb
inc
test
push
pop
dec
inc
sub
lcall
cmp
mov
jbe
sbb
test
sbb
scas
push
ret
sub
js
adc
data16
pop
xor
push
mov
out
sbb
mov
jb
dec
rorb
enter
pop
mov
paddsw
aaa
movsl
cld
sarl
xchg
dec
fldenv
ss
sub
mov
sbb
roll
js
into
sub
fisttpl
mov
call
mov
mov
and
or
jbe
fsubs
mov
sbb
adc
adc
ds
or
movsb
lock
push
mov
repnz
mov
mov
aaa
mov
repz
inc
mov
add
stc
adcb
sbb
adc
add
lds
cwtl
mov
fisttps
mov
adc
mov
sub
jns
xor
or
pop
xor
add
cmp
repnz
call
inc
aad
loope
daa
notl
aad
or
repz
pop
out
xor
arpl
and
mov
mov
ret
in
mov
shl
ss
dec
mov
cmp
int3
in
int
es
sub
or
nop
popa
inc
rolb
lock
pushf
or
daa
je
das
push
popf
sub
and
adc
adc
fistpl
hlt
push
xor
jg
dec
sub
fsubs
ds
mov
xor
orl
clc
adc
fwait
sbb
fwait
cwtl
xor
insl
hlt
xchg
dec
sbb
xchg
mov
jle
jns
sbb
sbbl
fldt
mov
sbb
add
int
inc
pop
pop
pop
mov
lock
std
ss
je
sbb
dec
xor
cmp
and
jecxz
pop
pop
addl
movsb
hlt
daa
lret
mov
pop
shl
cmpsb
imul
pop
and
ds
fsts
xchg
sub
dec
shll
mov
lea
pop
nop
adcl
and
sbb
adc
pop
cs
cld
pop
jle
jge
add
mov
adc
into
leave
cmpsb
leave
jmp
cmpsl
insb
inc
mov
lret
clc
loop
push
popa
icebp
into
aas
out
test
sti
mov
shrl
lds
inc
mov
xchg
shll
mov
push
jmp
inc
fs
data16
cltd
xchg
pop
das
mov
das
bound
cmpsb
xchg
sbb
sub
nop
pop
hlt
cmp
mov
mov
jae
and
imul
testb
std
pop
or
fbstp
pusha
mov
outsb
xchg
popa
or
or
xchg
mov
jmp
loope
pop
hlt
fwait
ret
fnstenv
add
lock
addr16
cmp
lods
int3
mov
mov
jae
shll
fdivrp
xchg
scas
and
outsb
imul
aas
cmp
sbb
ret
lds
mov
cmp
inc
push
add
popf
push
adc
jg
dec
cld
outsl
xor
mov
or
push
aaa
testb
jnp
dec
sarl
xchg
push
or
xchg
mov
cmp
fwait
mov
fcmovb
jmp
sbb
aad
int3
pop
in
cltd
push
lock
push
xor
dec
push
scas
and
dec
movsb
adc
push
shrl
lds
mov
lea
fisttpl
fwait
sbb
mov
jle
mov
add
mov
addr16
mov
inc
dec
jg
cmp
sbb
into
sbb
lret
in
stc
sbb
lea
arpl
notl
add
jmp
pop
sbbl
into
push
je
mov
das
ljmp
jp
ds
add
adc
inc
and
pusha
push
jno
pop
pop
xor
fisubrs
aaa
lcall
aad
mov
cmp
nop
jne
pop
mov
rep
imul
or
xor
adc
fiaddl
inc
iret
fidivrl
gs
xchg
outsl
lret
inc
mov
mov
push
inc
fcoms
inc
sarb
stos
add
mov
and
xchg
jns
shr
ffreep
mov
mov
mov
sbb
imulb
jb
mov
ss
push
lahf
movsb
or
xorl
jl
shrl
pop
add
jmp
pop
pop
aam
fstl
push
mov
scas
aam
and
into
pop
and
push
pop
lahf
in
stc
notl
test
cmp
xchg
adc
xchg
pop
jae
push
xor
js
mov
mov
adc
popa
mov
loop
cmp
xchg
ds
jo
clc
xchg
and
pop
cmp
jl
sbb
cmpsl
lret
ljmp
movsb
lods
icebp
idivl
mov
cwtl
mov
or
cmp
dec
cmp
imul
cltd
enter
test
mov
stc
push
sub
sub
pop
or
jns
mov
cltd
enter
test
mov
stc
push
sub
test
cmp
imul
mov
mov
cwtl
stc
push
sub
sub
pop
or
jns
mov
xor
fmul
fadds
es
push
call
cmp
or
sbb
sbb
pop
add
mov
adc
add
fcomp
sub
cmp
or
sbb
dec
movsl
pop
add
mov
adc
enter
sub
jae
and
test
js
dec
pop
pop
push
xchg
sub
adc
add
xor
lods
push
fcoms
xchg
hlt
push
scas
sarb
mov
in
jp
out
iret
into
out
inc
and
adc
fldenv
xchg
js
sbb
nop
jp
sahf
inc
and
adc
mov
mov
test
test
gs
aas
hlt
repz
adc
lea
lret
aaa
jp
nop
xlat
mov
or
imul
inc
fwait
push
lods
gs
addr16
mov
push
mov
les
fisubs
xchg
mov
push
xchg
in
adc
stos
out
add
mov
or
sbb
pop
mov
nop
pop
add
fsub
sub
cmp
or
js
dec
sbb
mov
jne
sbb
xor
inc
mov
mov
mov
pop
lock
les
and
test
inc
dec
bound
mov
cs
cld
or
pop
insl
in
add
adc
or
xchg
inc
mov
testb
insb
rolb
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
sub
fldcw
shll
mov
jl
sarl
stos
pop
cmp
and
or
out
mov
xorl
test
pop
xchg
stos
sub
int
mov
and
out
nop
jle
mov
pop
pushf
sahf
inc
jge
sbb
inc
cmpsb
add
and
sub
sub
imul
enter
push
inc
adc
lret
lock
xchg
int
sbb
nop
cwtl
inc
dec
test
jmp
ss
adcl
inc
inc
in
mov
cmp
movl
xchg
hlt
and
adc
pop
dec
out
dec
and
cli
mov
cmp
add
sbb
dec
ss
enter
cld
lret
stos
mov
mov
ljmp
adc
stos
adc
add
cld
in
mov
lods
leave
push
inc
dec
ret
fisttpl
xchg
xchg
in
into
adc
sub
sbb
stos
imul
push
test
jbe
insb
cs
enter
add
movsb
fdivs
mov
inc
daa
add
aad
dec
mov
xchg
add
inc
and
jne
dec
out
test
nop
sub
inc
add
lods
xor
fwait
pop
ss
inc
outsl
sarb
mov
lss
popa
add
out
push
jo
fldt
ffree
add
push
jne
or
stos
add
aaa
shrb
adc
movsl
dec
stos
mov
outsl
leave
rcrb
jae
xchg
push
mov
icebp
enter
xchg
mov
inc
out
lea
and
push
push
cltd
jge
out
jle
incl
nop
fs
loop
xor
mov
pop
add
or
cmpsb
outsl
rcll
mov
mov
dec
mov
mov
repz
mov
jp
js
push
repnz
ficoml
shlb
adc
loop
pop
leave
sub
add
push
sbb
sub
or
cwtl
pusha
cmp
sbb
mov
xchg
xchg
sbb
movsb
loop
mov
and
xchg
jno
jne
addr16
dec
push
cwtl
add
sahf
in
shlb
sub
test
mov
movsbl
popa
xor
mov
imul
ljmp
mov
jne
mov
mov
sbb
add
xchg
mov
shrl
jae
fcomps
repnz
dec
inc
or
cmp
aas
faddl
xchg
mov
popf
sbb
and
cmpb
adc
dec
xchg
lea
repnz
movsl
ljmp
mov
xchg
pop
daa
mov
mov
or
and
and
sbb
dec
pop
hlt
stos
adc
scas
push
pop
sub
sub
push
shrl
pop
inc
mov
and
mov
mov
push
sbb
pop
jns
pop
loopne
or
add
test
loope
repz
loop
push
inc
sti
sar
mov
and
bound
push
xor
popa
cmp
adc
xor
icebp
das
ret
or
in
stos
int3
mov
jb
dec
jae
ret
data16
cmp
sub
shll
mov
pop
mov
aas
pop
add
xchg
out
push
pop
shrb
push
and
iret
pop
or
jne
or
mov
jmp
dec
and
adc
and
add
pop
ret
fwait
in
pop
lods
mov
cs
mov
inc
add
dec
scas
push
pop
imul
push
push
xchg
sub
sar
cmp
or
cmp
enter
xchg
jl
mov
mov
lds
pop
addr16
jmp
lret
jg
pop
xor
inc
sbb
jge
sbb
and
hlt
js
bound
dec
js
push
sub
mov
insb
push
iret
dec
inc
js
pop
lahf
or
iret
mov
or
mov
test
mov
int3
jbe
xor
loopne
pushf
popf
add
mov
sarb
in
pop
push
push
dec
mov
rcr
jnp
dec
jmp
cli
mov
push
xor
ret
pop
cmp
xor
loopne
xchg
inc
in
imul
ja
jg
lods
push
mov
mov
pop
cmp
jle
scas
data16
pop
dec
les
add
lods
aam
mov
in
mov
movsb
push
imul
xchg
cmc
cmp
mov
sub
out
test
fisubs
jne
popf
lahf
and
stos
mov
push
push
adc
jle
out
scas
lods
push
sbb
cltd
enter
xchg
sbb
jbe
jno
aad
push
dec
push
inc
pop
ret
je
lds
stc
into
outsl
repnz
jl
or
add
push
ficoms
out
call
mov
lcall
enter
mov
or
test
mov
cmovg
insb
ds
mov
or
mov
mov
inc
je
ja
push
jge
add
dec
cld
mov
xchg
sub
movb
out
cli
adc
sbb
mov
xchg
scas
mov
adc
cmp
xchg
push
mov
sub
int3
pop
repnz
mov
cmpsl
mov
adc
add
push
aad
repnz
cmp
sbb
dec
incb
stos
cmp
in
lret
xor
in
and
xor
jmp
cmpsb
jo
cmp
xor
sbb
dec
cli
adc
xchg
fmulp
enter
sbb
pop
les
shlb
test
push
xchg
fdivp
paddw
cmp
push
mov
push
and
lea
inc
dec
ds
sbb
testb
rorl
shll
mov
add
ret
xchg
adc
jle
lods
aaa
in
outsb
push
aaa
pop
add
xchg
mov
adc
mov
jp
mov
push
dec
shrl
ret
gs
loop
xchg
fdivs
shr
dec
jmp
xorb
jge
mov
out
outsl
mov
into
test
jmp
dec
sbb
push
pop
push
xor
movsb
scas
aad
push
mov
mov
mov
into
imul
outsb
out
pop
and
fisubl
or
mov
adc
ss
stos
cmp
push
adcl
pop
lret
push
subl
aad
inc
mov
inc
faddp
in
inc
dec
cmp
jns
jo
pop
shrb
xchg
lret
mov
mov
and
sub
jb
xlat
cmc
or
inc
dec
imul
cmpsb
sub
stos
rcrl
imul
and
imul
dec
mov
xor
rcrb
cmp
xchg
pop
ret
mov
inc
shll
adc
repz
sub
mov
dec
sub
inc
stos
push
repz
cmp
cmp
in
daa
dec
rorb
mov
fistpll
xor
insl
std
and
imul
cmpsb
rcl
scas
xchg
lret
loope
mov
scas
imul
push
pop
out
hlt
aam
xchg
dec
popf
das
mov
pop
pop
rcr
test
jo
dec
lret
iret
mov
push
mov
movsl
jl
cltd
in
sbb
lret
sub
cld
imul
adc
jle
pop
ds
and
jno
shll
pusha
push
mov
mov
mov
push
outsb
fidivrs
cli
jge
mov
cwtl
adc
pop
pop
ret
or
out
xchg
xchg
sarb
leave
push
and
cld
jmp
sub
sarl
clc
sbb
bound
daa
mov
cld
mov
in
adc
fwait
push
mov
pop
enter
jae
sub
daa
loop
mov
pushf
scas
bound
cltd
nop
insl
jg
mov
incl
pop
xor
ret
or
adc
in
fwait
jb
push
cmpsl
outsb
mov
pop
xor
inc
push
rorl
jp
dec
inc
test
cmp
push
jnp
add
inc
mov
push
mov
mov
sub
push
pusha
xor
cmp
pushl
fwait
test
ss
dec
jecxz
mov
jbe
addr16
add
pushf
aaa
repz
nop
mov
sub
mul
xchg
push
pop
jnp
mov
adc
addr16
mov
cmpsl
inc
adc
sti
pop
inc
out
push
dec
popf
push
ds
aas
sub
dec
pushf
sbb
out
popa
push
xchg
jp
adc
push
fwait
inc
loopne
push
loop
scas
push
dec
call
stos
ret
sub
adcl
sbb
mov
pop
outsl
ror
ficoms
pop
insl
mulb
andl
pop
add
shll
jae
and
sbb
inc
push
mov
ret
push
faddp
sub
xor
adc
and
add
pop
mul
shl
push
jecxz
or
sbb
xor
hlt
xchg
sarb
mov
loope
and
jb
icebp
imul
rcr
nop
add
xor
ds
adc
push
cltd
jns
xchg
add
out
mov
jecxz
adc
push
xchg
jmp
hlt
cs
adc
in
mov
loop
mov
jecxz
insl
call
and
mov
adc
rorb
push
mov
xor
dec
dec
outsl
out
scas
push
not
sbb
sbb
das
push
loopne
dec
jno
ret
mov
mov
mov
stos
push
std
addl
les
xchg
pop
cmp
dec
insb
pop
and
faddp
adc
outsb
adc
stc
out
decl
pop
repnz
int
mov
mov
cmpsb
pop
push
inc
test
lcall
jecxz
sbb
xchg
or
add
mov
jnp
enter
stc
push
lahf
cmp
jmp
push
xchg
mov
and
jecxz
mov
cmp
lds
lcall
mov
pushf
or
negl
addl
jge
fsin
sub
push
lcall
dec
sbb
and
pop
inc
adcb
test
push
and
pop
repz
xchg
lea
fstps
fndisi(8087
push
mov
cmpsb
int
pop
loopne
or
addl
ss
sbb
sub
loop
in
xchg
das
xchg
mov
mov
sub
jmp
xchg
push
popf
inc
fsubrp
jle
push
fdiv
push
push
andb
push
dec
push
sub
stos
iret
jp
out
and
xlat
mov
pop
repz
ror
nop
push
push
aam
jle
fstl
dec
mov
test
add
mov
mov
add
aad
rolb
inc
shrb
add
mov
loop
lret
decl
pusha
je
out
in
lds
rol
jno
sbb
mov
scas
ficompl
pop
dec
stos
jno
jge
leave
iret
shl
aas
pop
cltd
sbb
pop
repz
xlat
pop
push
sbb
enter
pop
xchg
pop
aad
pop
xor
movsl
ja
inc
bound
xor
or
sub
add
mov
push
nop
cli
pop
ljmp
pop
bound
mov
arpl
out
test
sti
pop
aaa
paddusw
cmp
mov
pop
test
cli
inc
cmpsb
or
inc
test
sub
add
jmp
jo
jg
test
inc
or
stc
lods
cmp
mov
cltd
adc
mov
sub
cltd
cmp
int
push
inc
outsl
movsb
das
cltd
add
outsl
mul
jmp
sbb
pop
or
mov
mov
scas
jns
mov
cmp
mov
lcall
sbb
cld
out
dec
and
push
and
push
xor
outsl
ficoms
lods
icebp
xchg
shrl
rorb
ficompl
sbb
adc
fistps
sahf
inc
fisttpll
stos
daa
imul
repnz
mov
dec
xchg
sub
dec
pop
sub
or
cmp
in
std
xor
pushf
shll
or
adc
aaa
mov
ret
sub
cld
mov
push
out
popf
lcall
fwait
dec
cmp
pop
in
adc
lds
mov
test
pop
adc
loope
jae
or
sbb
js
mov
mov
and
bswap
push
pop
mov
out
push
iret
mov
lcall
or
jmp
lahf
arpl
dec
in
cltd
arpl
imul
ret
jnp
mov
loope
push
jbe
js
movsl
in
das
sahf
cmp
add
xor
nop
mov
stc
outsl
lcall
mov
pop
dec
in
push
push
rcl
mov
subb
subb
cmp
push
mov
mov
loop
in
pop
rorl
xor
adc
movsl
xchg
ja
sub
pop
sub
inc
mov
xor
pop
rclb
pop
into
das
mov
jne
jle
pop
rolb
jae
jo
fcoml
pop
cmpsl
in
push
ljmp
in
adc
imul
sbb
xlat
clc
movsb
xchg
test
rcl
jge
cmpsb
cmp
mov
das
sbb
call
movsb
inc
data16
mov
mov
pop
loopne,pt
iret
lods
dec
or
or
sbb
cld
ret
jp
and
mov
mov
pop
lret
inc
aas
gs
or
xchg
and
sbb
mov
add
pushf
adc
cmp
mov
ret
and
xor
les
xor
mov
aaa
add
jmp
movb
mov
dec
aad
sarl
lret
mov
push
xchg
pop
inc
cmc
mov
pop
shl
mov
xchg
pop
dec
ret
adc
pop
mov
mov
jno
call
xchg
icebp
movsb
cmpsl
add
add
nop
jp
and
cmpsb
dec
subb
jae
jb
filds
fcmove
pop
mov
xor
call
in
mov
or
into
aas
mov
mov
and
push
mov
adc
mov
adc
jno
or
in
decl
lea
and
in
das
push
test
dec
lcall
cwtl
push
sarb
mov
xchg
ja
lcall
jge
jae
out
fwait
rolb
loopne
lds
push
jbe
add
jecxz
mov
sub
jmp
in
push
icebp
lahf
cld
scas
jns
sarl
sbb
fisubrs
clc
jbe
jecxz
outsl
mov
mov
loope
in
mov
test
lret
pop
hlt
clc
fiadds
scas
js
call
sbbb
sbb
sub
ret
inc
push
shl
ds
dec
repz
sub
out
in
xor
mov
lahf
and
aas
sbb
pop
mov
lret
int
mov
pop
dec
cmp
jl
mov
icebp
jne
push
pop
mov
cmp
incb
pop
stos
jbe
aam
fldl
cmp
xor
pop
popf
outsb
addb
aam
push
sbb
iret
sbb
rolb
jne
mov
pop
lret
adc
int3
int
fisubl
pop
sub
ficompl
not
xchg
mov
aam
jo
mov
lea
sbb
stos
cmp
add
mov
cs
stc
xor
sbb
mov
inc
xchg
pop
sbb
mov
imul
rorl
movsl
cs
jmp
mov
sbb
orl
shll
mov
xor
out
and
js
roll
mov
sub
lahf
jmp
test
jno
push
aaa
sbb
stos
rclb
scas
cld
xchg
popf
out
scas
sbb
adc
scas
fcoml
stc
jbe
dec
pusha
iret
sbb
mov
insb
push
add
ret
loope
ja
outsl
popa
lods
pop
mov
push
mov
push
lcall
ret
sub
cs
or
jg
popa
out
insl
mov
out
xor
out
and
xlat
inc
je
or
lcall
mov
fwait
loope
ljmp
int3
insb
aaa
stos
pcmpgtd
mov
cld
negl
lret
mov
aaa
push
sub
xor
sub
dec
or
imul
cmpsb
loopne
push
push
sub
je
push
sub
stc
jmp
sbb
sbb
mov
jecxz
repnz
cs
aas
lock
adc
movsb
sahf
inc
mov
lods
jle
inc
arpl
jnp
add
pop
xchg
nop
stc
mov
insb
imul
cmp
xor
fdivl
cltd
jle
in
jg
mov
in
mov
leave
dec
sub
test
sub
js
cmp
push
jo
add
insl
loopne
js
jbe
cmc
pop
adc
ret
pop
testl
stos
sbb
rcrl
sbb
inc
cltd
imul
mov
push
jo
sbb
test
add
mov
push
push
mov
clc
sub
cmpsl
gs
mov
sub
lods
hlt
mov
push
loop
sub
adc
mov
int3
sbb
sub
pop
pusha
dec
push
add
mov
sub
fisubrl
pop
mov
aam
cld
cltd
hlt
mov
cmp
in
idivb
jae
jl
pop
adc
and
ret
pop
pop
aas
jmp
pop
dec
ss
dec
ret
jo
dec
cmc
aad
jno
nop
jnp
jl
outsb
sbb
mov
jbe
xchg
in
mov
jae
push
pop
inc
loop
imul
ret
icebp
inc
repnz
mov
mov
sahf
into
daa
jbe
xor
fisttpl
push
or
mov
rcr
div
sub
loop
sahf
jno
jge
xchg
icebp
sbb
sub
addps
in
sub
jle
fwait
mov
mov
jbe
imul
test
in
jae
daa
dec
aas
inc
in
mov
lods
clc
and
in
inc
daa
mov
pop
or
xor
xchg
inc
imul
lds
sub
cwtl
mulb
frstor
mov
push
mov
pop
js
or
ljmp
mov
imul
fdivrp
cmp
adc
enter
mov
add
int
xchg
inc
sub
dec
xchg
mov
arpl
push
in
dec
inc
push
aam
popf
rcll
dec
data16
fimuls
sub
mov
ljmp
cmpsb
ljmp
inc
lcall
popa
pop
jp
hlt
xor
out
out
push
lods
pop
aaa
dec
das
mov
inc
stc
jmp
cmp
pop
xchg
pop
cmp
and
into
lret
lods
cmp
fsubs
or
push
mov
mov
mov
xchg
push
popf
jnp
int
push
rcrl
das
in
jg
sub
popa
cmp
es
jl
pusha
jmp
arpl
sbb
out
sub
sbb
sub
xor
mov
pop
sbb
psubusw
cmpsb
fdivl
xchg
push
fiaddl
je
xlat
dec
scas
fbstp
jge
mov
fwait
jge
pushf
hlt
popa
iret
aas
push
push
xchg
pop
add
loope
mov
push
shll
xlat
sub
jbe
not
iret
dec
iret
xorb
and
sub
pop
aaa
je
push
add
adc
dec
cmp
test
mov
repz
js
cmp
inc
adc
sub
popf
stos
jne
out
push
je
sub
cmpb
imul
stc
pop
test
lea
call
push
filds
ljmp
push
dec
iret
rclb
inc
or
mov
test
and
enter
inc
push
xchg
sbb
imul
sub
outsb
jge
sbb
cmp
mov
icebp
je
lahf
jmp
xor
popa
jl
xchg
leave
jne
sub
mov
cmpb
movsb
adc
in
in
out
push
sub
adc
dec
jae
push
faddl
loopne
cwtl
test
cmp
shr
mov
mov
sub
jmp
pop
push
cmp
mov
fistl
loope
mov
jge
mov
xchg
jne
out
dec
jecxz
xlat
addr16
pusha
sbb
jno
sub
jle
test
or
jg
addr16
fsts
movsb
mov
imul
pop
jecxz
scas
jp
xchg
ret
cmp
pop
xchg
nop
push
stos
xlat
mov
mov
inc
fdivs
push
push
dec
mov
daa
arpl
scas
dec
dec
int3
lret
out
iret
popf
roll
mov
jmp
faddp
shlb
pushf
adc
mov
je
js
pusha
mov
mov
ret
mov
adc
fidivl
lock
call
rcrl
xchg
gs
fsubrs
mov
and
adc
add
push
dec
pop
insb
or
fwait
jg
and
notb
add
pop
sub
into
repz
xchg
icebp
lds
movsl
mov
fnstcw
pop
mov
xchg
jns
mov
push
xchg
scas
or
adc
pusha
mov
and
inc
out
cld
arpl
aas
push
rcll
sub
nop
mov
inc
inc
or
in
imul
test
ret
loope
fisttps
jne
movsl
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
movsb
pop
push
test
mov
adc
enter
sub
cmp
int
xchg
push
and
adc
mov
bound
pop
lret
daa
stc
jg
nop
dec
mov
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
mov
cmp
sbb
and
xor
and
nop
dec
or
sub
cmp
or
sbb
jmp
jg
inc
lret
cmp
cmpb
aad
in
negl
pop
repnz
sub
push
loop
jo
mov
adc
cmp
hlt
cmpl
ss
mov
push
inc
nop
dec
push
and
xchg
andl
xchg
inc
mov
mov
addb
jmp
lods
es
or
jns
imul
sbb
stc
aas
inc
enter
dec
inc
ljmp
xchg
xchg
repz
xor
or
sbb
adcl
xor
adc
push
or
data16
xchg
inc
jns
ret
mov
mov
xchg
push
icebp
mov
das
js
fists
inc
mov
hlt
cmpb
and
mov
or
sbb
xchg
leave
xor
js
insb
mov
push
sbb
jecxz
sahf
push
pop
mov
addl
pop
cmc
and
and
adc
lds
sarl
scas
pop
jecxz
mov
mov
inc
mov
sbb
add
xlat
sub
jns
push
loopne
lock
and
xor
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
or
mov
mov
lcall
cmp
bound
inc
sahf
sub
cmpb
lods
sar
sub
push
mov
fwait
adc
mov
mov
xchg
and
dec
xchg
and
cmp
push
xchg
fnstsw
cs
cmp
xchg
jnp
mov
in
ja
jns
lret
jmp
ljmp
in
push
sbb
pop
push
push
js
daa
push
jmp
popf
jge
movsl
fisubs
int
dec
xlat
pop
xlat
jle
jnp
dec
pop
xchg
sub
jo
popa
pop
adc
push
fiaddl
repz
cmpsl
adc
in
push
shrb
inc
mov
ljmp
in
sbb
inc
push
fwait
jmp
sbb
jns
jmp
push
pop
jle
dec
js
sub
sbb
and
pop
mov
inc
icebp
inc
mov
ss
addl
popa
push
lret
out
and
push
das
ja
mov
push
and
or
xor
push
and
sbb
ds
jl
data16
out
mov
mov
push
popa
adc
pop
std
cli
or
or
add
sbb
sub
loopne
inc
add
mov
es
test
mov
stc
lret
repz
lds
ljmp
dec
outsb
sbb
pop
or
push
sbbb
mov
xor
mov
popf
sub
pop
scas
ret
lods
idiv
cmpb
add
imul
sbb
int3
out
data16
aas
dec
test
cmp
out
leave
jo
mov
xchg
sub
sbb
les
add
xor
and
pop
ds
pop
int3
cmp
mov
or
push
sub
dec
push
adc
sti
adc
lods
out
push
test
pop
ljmp
leave
jp
andl
and
mov
mov
mov
and
jae
jnp
xor
popa
jle
pop
fstpl
push
lahf
shrl
insl
jl
cmpsl
dec
repnz
jae
xor
mov
jl
cmp
shlb
mov
jae
jp
sbb
testb
mov
js
lods
inc
push
mov
and
in
popa
sub
cld
or
sbb
pusha
mov
into
mov
sbb
out
xchg
mov
adc
lcall
ds
cmp
sahf
adc
pop
sbb
pop
rcll
add
in
xchg
adc
adc
inc
int
leave
clc
add
mov
loopne
mov
jne
aam
and
out
jmp
mov
xchg
std
int
fcmovbe
jg
push
shl
lock
xchg
mov
mov
jb
xlat
orl
or
aaa
mov
nop
or
cmpsl
loope
fst
leave
popa
aam
dec
ss
into
int
mov
clc
push
add
sbb
cmp
cmp
cld
dec
mov
aas
xchg
into
and
dec
enter
into
cmp
and
add
pop
push
cs
push
addr16
ja
icebp
mov
or
mov
add
pop
ret
push
fldenv
push
sti
push
jne
adc
dec
fs
inc
shrb
repz
rcrl
and
out
cmp
hlt
push
jl
subb
ljmp
mov
push
and
jns
testl
jle
mov
rorl
xchg
xchg
rolb
jno
adc
outsb
stc
push
mov
dec
mov
sub
and
pop
pause
cli
sbb
arpl
cld
ljmp
inc
aam
int3
fs
cmpsb
sbb
divl
jp
repnz
lods
or
xchg
jmp
repz
jbe
cwtl
pop
dec
cmp
mov
bound
mov
fidivs
xor
cmpb
mov
pusha
xor
popf
pop
dec
mov
mov
daa
mov
and
je
push
loopne
stc
arpl
dec
repnz
dec
andb
lret
sub
or
jmp
cltd
ja
inc
mov
gs
out
pop
sbbb
jb
jp
dec
test
sbb
test
jns
addl
arpl
push
sarl
negb
or
xchg
mov
pop
leave
push
cmp
push
cmp
lret
xor
lcall
pop
push
and
cs
inc
dec
loope
xor
sub
dec
rcrb
je
js
pusha
xlat
ss
jmp
loope
cmovbe
push
jmp
ret
shl
pop
sar
mov
add
int
jb
aaa
inc
arpl
mov
and
int
ret
pop
ja
dec
xchg
add
rcrb
mov
dec
mov
ja
sbb
or
rcrl
mov
fucomp
incl
inc
out
mov
dec
mov
dec
cmpsb
mov
mov
adc
or
jl
xchg
gs
mov
or
in
mov
loope
adc
repz
test
sub
xchg
cltd
xorb
test
subb
pop
test
pop
cld
mov
sbb
js
or
sbb
cmc
pop
xchg
popf
dec
fsubp
push
cwtl
aaa
adc
xchg
addr16
imul
mov
or
in
negb
mov
pop
in
and
dec
lods
sub
insb
and
push
push
int3
sbb
inc
inc
out
pop
push
ja
ds
dec
pop
mov
push
shrl
inc
adcb
adc
inc
les
test
call
cmp
xor
insl
call
nop
setne
cmovne
test
mov
es
xchg
lret
mov
mov
pop
xchg
jmp
les
lcall
mov
add
push
sub
mov
cmc
xchg
lods
cwtl
xchg
in
mov
lea
in
mov
inc
sbb
mov
adc
fmuls
ja
push
adcl
iret
and
adc
mov
push
sub
sbb
dec
fidivrl
add
lods
add
stos
mov
clc
sbb
sbb
mov
bound
in
sbb
add
sub
adc
mov
mov
fwait
adcl
jmp
ret
xchg
idivl
cmpsl
or
or
push
cli
cmp
mov
cs
pop
sbb
aad
sbbl
icebp
mov
push
fnstsw
cld
push
fcomps
and
sub
int3
dec
xor
leave
mov
xor
fcmovnb
pushf
loop
test
vsqrtpd
add
out
sarl
xchg
ret
test
cmpsb
or
imul
mov
pop
test
imul
or
inc
xchg
out
int
push
pop
mov
cmc
addb
aaa
into
test
push
lods
mov
pop
mov
mov
mov
in
xchg
sarl
jne
leave
aaa
inc
rol
movb
inc
bound
inc
lahf
imul
imul
mov
adc
add
cmp
mov
sbb
fdivr
shlb
jns
leave
cmp
cmp
sbb
ljmp
mov
mov
pop
sahf
push
in
out
frstor
in
bound
lret
or
mov
je
mov
subl
call
push
cmp
mov
sbb
xor
nop
sbb
scas
mov
inc
ds
push
inc
in
jg
stos
push
fidivrl
ja
xor
sahf
sub
jp
pop
or
cmp
xchg
scas
pop
adc
adc
sbb
push
push
andl
inc
pusha
sub
sbb
cmp
int3
xchg
inc
dec
clc
aam
gs
pop
enter
add
dec
popf
adc
jns
push
cmp
push
loop
mov
cmc
pop
sub
dec
aaa
push
loopne
mov
outsb
push
adc
adc
jp
mov
jne
xchg
arpl
pop
jne
sbb
pushf
adc
lock
fcoml
adc
shll
out
inc
or
and
lea
cwtl
sbb
jns,pn
sbb
je
shrl
adcl
mov
mov
int3
mov
ja
test
aas
push
mov
dec
jae
fcomi
movsl
and
sbb
add
dec
rcrl
aas
int
add
in
cmpl
dec
cmpsl
pop
aas
in
sub
pop
icebp
push
pop
inc
into
jp
ret
imul
aas
mov
aaa
mov
mov
cltd
clc
imul
arpl
inc
add
mov
dec
stos
or
pop
add
cmp
sbb
push
jp
dec
push
imul
incl
aaa
jae
xchg
dec
pop
fisubl
gs
adc
out
and
das
xlat
pushl
adc
cmc
dec
movsl
xchg
jmp
mov
add
xor
xchg
add
ds
mov
sti
and
aad
aaa
push
inc
xchg
call
je
jb
add
stc
lret
add
inc
jmp
and
cmpsb
mov
mov
mov
add
popf
andl
mov
jae
xor
nop
and
je
jge
mov
mov
loop
aam
adc
out
data16
scas
xchg
loopne
scas
adc
sar
loop
pop
loop
int
sbb
out
clc
popf
xor
fnstenv
xlat
bound
jno
xchg
cmp
xchg
sbb
icebp
std
inc
test
imul
jp
je
rolb
mov
loopne
fnstenv
cmp
and
dec
xchg
sbb
dec
fcompl
pop
inc
cld
mov
mov
and
stos
or
cs
jbe
cmp
sbb
js
cmpsb
aam
push
int
fildl
lea
lret
loop
test
push
cmc
movnti
inc
xor
adcb
mov
push
jb
std
pop
fisubrs
mov
out
test
sub
testl
pop
cmc
add
dec
mov
inc
ret
dec
and
mov
xchg
test
shrb
das
aas
push
call
aam
pop
xchg
pop
fcmovnu
jnp
mov
sti
dec
adcl
mov
fcmovnu
mov
mov
push
pop
cmpsl
and
stos
pop
lahf
pop
adc
insb
int3
mov
bnd
push
stos
mov
mov
add
mov
mov
xor
movsb
mov
int
sub
adc
adc
ds
mov
mov
aaa
jnp
or
cmp
icebp
dec
push
xchg
inc
jae
mov
xchg
inc
sarl
add
jecxz
movsl
pop
sarb
xchg
inc
jg
and
add
nop
push
fs
pop
ret
mov
jmp
sub
mov
and
outsl
std
and
call
jnp
adc
js
fidivrs
aaa
mov
stos
add
leave
imul
bound
sbb
dec
addl
pushf
test
mov
leave
adc
cmpl
sub
pushf
or
sbb
adcb
aas
sub
les
loopne
cli
jle
and
clc
rcll
mov
andl
jge
shl
popa
mov
loop
inc
shll
dec
shrl
cmp
adc
lret
adc
shll
dec
dec
fidivs
mov
xlat
xor
cmp
jns
or
cwtl
shrb
cwtl
testb
mov
ret
in
mov
sub
lret
sbb
add
fldenv
pop
xchg
adc
sbb
lcall
enter
rclb
in
out
sub
sub
pusha
mov
out
ret
fmull
or
subl
test
mov
loopne
outsl
imul
add
adc
movsl
aas
and
xchg
aad
cmp
or
mov
adc
mov
lea
push
pop
iret
mov
mov
jae
jno
popf
pop
mov
lret
or
scas
je
cwtl
nop
into
mov
movsl
mov
icebp
int3
gs
xchg
pop
jmp
cs
push
sub
test
pop
push
xchg
andl
stc
stos
pop
cli
mov
sbb
lahf
jnp
xchg
sub
roll
scas
cwtl
and
cli
mov
mov
in
jl
or
daa
test
push
push
lret
cmc
les
test
stos
les
xor
cli
mov
inc
push
fstpl
mov
xchg
loopne,pn
push
mov
dec
sbb
xchg
dec
sub
popf
xchg
xchg
mov
test
xor
or
movsl
pop
sar
sub
or
xorb
scas
push
nop
or
sbb
sbb
push
inc
stos
cmpsl
xchg
mov
cmpsl
xchg
cmpsb
xor
mov
mov
xor
or
cli
mov
cld
cs
divl
mov
iret
push
mov
adc
jg
and
ljmp
cmpsl
or
lods
jmp
mov
sub
mov
test
cmp
dec
daa
into
push
xchg
push
push
mov
jmp
imul
xchg
das
movswl
aas
mov
mov
mov
vlddqu
or
xor
xchg
and
cmpsl
scas
sahf
movsb
inc
pop
pop
sti
fucomi
and
add
dec
adc
or
xchg
sub
std
pop
stc
insb
dec
and
mov
jb
out
mov
or
mov
add
and
mov
jle
shlb
mov
sti
das
data16
rcl
and
inc
push
int
imulb
and
push
arpl
cwtl
xor
push
pop
or
add
lcall
imul
inc
hlt
cltd
cmc
sbb
jb
jbe
arpl
in
push
add
arpl
repz
cwtl
in
dec
leave
test
dec
pop
popa
inc
push
mov
test
insl
sbb
cld
jmp
mov
and
push
add
cmp
and
aam
xchg
add
pop
sub
daa
pop
mov
jg,pn
mov
test
mov
cltd
mov
push
mov
adc
inc
xchg
fwait
shll
fldt
inc
sub
lods
call
stos
xor
loopne
repnz
or
outsl
push
shll
inc
stc
pop
jp
out
or
popa
pop
popa
sbb
cwtl
sbbl
sbbb
cmp
dec
mov
mov
leave
jns
adc
stc
jecxz
xlat
mov
scas
push
cs
inc
nop
stc
lock
in
sbbl
aaa
mov
cli
push
mov
iret
outsl
pushl
xchg
sar
xchg
pop
mov
mov
and
fs
cltd
xchg
shrl
and
gs
ljmp
push
cltd
mov
insb
mov
push
dec
mov
xchg
push
mov
inc
xchg
add
cwtl
fldenv
shrb
fbld
pusha
mov
je
ljmp
dec
out
sarl
int
push
pop
pushf
popf
es
shlb
test
popf
dec
pop
sahf
xor
sarb
mov
leave
flds
or
lds
addps
repz
push
jmp
ljmp
mov
ss
mov
ret
out
test
cli
add
mov
jp
shl
cld
xchg
fildll
pop
leave
add
xchg
test
test
cmp
fmull
cltd
sub
inc
mov
jae
or
mov
jno
insl
ds
mov
mov
clc
adc
sub
xchg
cs
jo
xor
sar
and
and
jmp
sbb
sub
xor
scas
dec
imul
mov
gs
fisttpl
shrl
mov
enter
mov
xchg
or
mov
jbe
cwtl
scas
sub
aaa
int3
add
repnz
mov
sub
std
test
lock
xchg
mov
dec
nop
shl
mov
daa
lock
out
daa
das
add
push
push
rorl
and
sahf
jo
fadd
jecxz
push
sub
sbb
mov
cmp
test
mov
adc
ret
loope
add
hlt
and
jns
jbe
fcomp
scas
stos
js
push
push
aam
jo
mov
jb
mov
mov
mov
clc
xor
pusha
push
cmc
add
and
leave
jo
push
lahf
sub
cmp
cmp
les
sbb
or
aad
rol
ds
les
adc
aad
arpl
mov
xchg
dec
stos
out
add
cs
and
xchg
mov
int
mov
pushf
in
pop
testb
xor
daa
out
xchg
and
sub
adc
mov
iret
mov
xor
mov
xor
loopne
inc
popw
push
cmp
sub
push
push
push
inc
cmpsl
mov
cmp
lcall
push
std
sub
mov
add
xchg
aad
sbb
dec
cmp
mov
movsl
test
xor
jnp
in
mov
xor
aam
repz
cmpsb
or
push
dec
enter
mov
jne
pop
sub
inc
js
mov
sbb
cmpsb
mov
loope
lret
in
enter
jne
push
es
or
jge
insb
sub
dec
stc
int
pop
dec
mov
push
int3
lds
cmp
popl
cwtl
dec
inc
add
sbb
stos
outsb
imul
lds
dec
repnz
cmpsb
das
sbb
pushf
pop
repnz
fwait
or
or
mov
shr
and
gs
les
nop
dec
js
dec
mov
mov
jmp
insb
fildl
fisubrs
inc
sahf
cmp
in
dec
inc
imul
push
imul
rorl
jo
scas
or
mov
ret
cmp
mov
out
sbb
xchg
mov
inc
lea
sub
data16
or
lea
imul
out
hlt
sbb
in
icebp
inc
imul
rep
mov
inc
lds
ficompl
cmc
inc
xor
punpckhwd
cmpsl
stc
inc
mov
jmp
xor
loop
cmp
pop
pop
or
mov
out
ja
push
sti
jmp
test
lods
es
xchg
cld
mov
lods
inc
cmpsb
inc
fldt
sub
aaa
imul
ds
js
xchg
enter
cmp
jnp
or
fists
sbb
popa
popf
mov
add
outsb
jae
mov
or
sbb
dec
test
in
xor
fistpll
or
shlb
adc
imul
xchg
fnstsw
cmp
aaa
or
mov
ret
dec
sar
mov
push
push
les
outsb
add
dec
pop
sbb
stos
xor
rorb
pop
das
jbe
dec
xchg
inc
xchg
mov
mov
cmp
fstp
push
xchg
jp
mov
aas
dec
lods
hlt
mov
inc
int
xchg
imull
in
push
mov
ja
popa
in
int3
lret
adc
sahf
push
test
xor
insb
int
mov
int
xchg
arpl
inc
xchg
add
js
or
dec
pop
push
push
add
xchg
jae
fcmovnb
lock
mov
inc
sub
add
stos
dec
adc
iret
and
addb
testb
mov
lods
in
inc
jne
xchg
mov
insl
out
lea
cld
push
es
push
push
test
rorb
pop
adc
or
sti
mov
pop
mulb
cwtl
test
pop
inc
xor
jnp
jecxz
jecxz
xchg
mov
clc
fwait
test
roll
movsl
ficoml
incb
sti
mov
jno
and
sub
adc
loopne
xchg
cld
outsb
push
xor
js
pushl
pop
aad
stos
cmp
mov
jle
arpl
popa
xchg
mov
cmp
test
xacquire
xchg
pop
mov
movsl
sub
add
sbb
and
loope
mov
add
dec
mov
or
and
xor
pop
add
imul
push
rcll
adc
mov
stc
inc
add
and
or
movsb
lock
ss
or
pop
xchg
push
pop
pop
inc
pusha
movsb
sub
lods
test
mov
daa
jp
pop
bnd
outsl
setns
lods
mov
cwtl
std
mov
in
fstpl
sahf
dec
sarb
push
push
pop
pop
popf
sbb
stc
add
add
sbb
std
mov
push
loope
fdivl
int3
and
jnp
lods
and
xor
mov
sahf
sub
mov
loope
jmp
push
jl
mov
lret
mov
push
jns
and
scas
pop
out
outsb
sbb
sarl
adc
dec
stos
adc
sub
or
pushf
mov
cmp
shlb
mov
or
cmp
cld
mov
jp
sbb
imul
xor
and
mov
add
lret
iret
dec
shrl
push
cltd
mov
imul
out
nop
pop
int3
pop
mov
sarb
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
fcomps
sub
cmp
loopne
lock
and
xor
inc
cwtl
jo
cmpb
mov
cmp
or
lock
and
inc
fmulp
xor
push
push
add
xor
aaa
xor
dec
push
flds
cltd
mov
movsl
mov
mov
bnd
add
xor
inc
push
jne
gs
xchg
addb
xchg
in
loop
repnz
movsb
not
cmpsl
mov
and
inc
icebp
andb
mov
nop
mov
push
xor
dec
inc
stos
scas
loope
mov
or
pop
nop
sbb
fdivp
sbb
stc
shll
push
vpsubb
icebp
outsb
xor
loop
xlat
cltd
cmc
imul
dec
inc
jnp
ret
add
jge
push
sub
addl
lds
subb
fnstenv
shlb
leave
xor
mov
test
pop
pop
mov
xlat
lds
sbb
or
adc
jno
push
mov
push
lds
test
or
std
cwtl
in
xor
fnclex
stos
or
push
jae
roll
fcomps
xchg
xchg
cmc
push
out
dec
mov
xor
inc
cmp
loopne
sbbb
ret
mov
iret
cmp
cli
in
jl
ja
inc
dec
pop
pop
cmp
sub
add
gs
rolb
rcl
test
fwait
pop
inc
pusha
push
inc
push
inc
pop
cmp
and
orb
inc
repnz
out
lock
pushf
xchg
push
dec
jbe
push
push
inc
push
jne
gs
addb
aad
loop
repnz
and
push
jne
gs
addb
aad
loop
repnz
pop
in
lcall
dec
cld
int
call
dec
and
imul
push
cli
mov
cltd
movsl
cmpb
lock
in
popa
jbe
out
inc
push
in
and
sarb
rcrb
pop
repnz
or
xchg
neg
push
cltd
call
lcall
pop
subl
cwtl
roll
cmpsb
or
loope
decb
sbb
popa
pop
ret
ficomps
std
xorl
ljmp
aas
add
aaa
mov
les
mov
test
enter
lods
inc
dec
movsl
mov
sub
insb
rcrl
fisubrs
pop
cmp
rolb
bound
mov
pop
mov
and
adc
outsb
test
dec
sub
jp
addr16
mov
mov
sbb
push
mov
xor
imul
inc
cmpsl
jp
jle
rep
test
mov
mov
xor
andb
pushl
add
bound
add
int
clc
lock
in
fildll
lds
or
test
pop
bswap
clc
or
scas
cmc
adc
into
in
jmp
shr
mov
test
sub
mov
push
add
xchg
loopne
push
pop
js
cli
add
jp
mov
dec
mov
bound
add
xchg
push
movsb
cmp
inc
and
cmp
push
dec
aas
jno
lods
sbb
iret
push
push
pop
jae
test
pop
and
jmp
loop
das
lods
sti
sub
mov
mov
mov
repz
xchg
jne
cmp
sbb
mov
hlt
insb
xchg
or
dec
jmp
fists
rorl
lcall
jnp
bound
cmp
adc
pop
xchg
sub
stc
mov
sbb
sti
stos
ss
mov
lock
movsb
mov
mov
shrb
out
iret
loopne
mov
imul
loope
das
out
enter
sub
add
dec
shll
in
jp
movsl
jp
xchg
xor
add
add
mov
mov
mov
clc
daa
jmp
aad
mov
dec
icebp
push
rorb
pop
rcr
cmp
scas
sbb
imul
stc
xorl
hlt
fwait
and
mov
movsl
js
cs
lret
les
adc
dec
dec
lock
inc
movsb
stos
pushf
ret
imul
aas
inc
mov
pop
outsl
mov
mov
inc
fnstcw
jl
dec
mov
rorl
jne
fs
jecxz
addb
and
xor
fdivrl
aam
std
mov
mov
pop
and
cmp
call
sbb
ds
jecxz
adc
mov
xor
xchg
in
outsl
mov
inc
or
test
jge
jb
pop
sub
and
stos
and
mov
mov
aad
in
inc
sbb
inc
sbb
sbb
jle
and
sub
pop
jecxz
xchg
mov
mov
dec
jg
test
jo
movsb
lcall
dec
jbe
aam
sahf
mov
incb
out
xchg
pop
test
stos
lea
add
loopne
out
jb
testl
shrb
loopne,pn
sbb
jb
test
out
test
inc
lret
xchg
mov
rcll
xchg
das
sbb
xor
and
jg
xor
adc
mov
adc
mov
dec
insb
push
add
mov
adcl
test
lret
mov
pop
scas
mov
leave
in
out
lock
aas
lret
bound
sti
stos
cld
push
mov
mov
ficoms
xchg
aas
aas
into
fs
adc
xchg
jne
repz
inc
div
shlb
daa
js
or
sbb
push
xor
imul
lods
push
je
jg
xchg
ds
insl
push
mov
shll
icebp
mov
fcmovb
ss
jl
push
lahf
jmp
pop
cmp
jnp
in
xchg
pop
and
stc
jge
jmp
and
hlt
xchg
lods
aam
sbb
lret
add
xchg
jae
mov
aad
mov
ja
enter
js
push
or
inc
shll
mov
and
push
ss
stos
pop
stc
in
call
out
xchg
aad
shrb
dec
jne
add
pop
sbb
push
lea
adc
and
pop
add
and
cmc
stos
jmp
sbb
js
adc
cmp
xchg
aaa
cmpb
jg
clc
shr
enter
jle
scas
push
xlat
jns
pushf
imul
std
pushf
mov
in
scas
iret
mov
add
and
inc
inc
jae
lds
scas
lret
sub
xchg
fiaddl
fucomi
sbb
sti
jnp
push
pop
sbbl
mov
aad
repnz
push
scas
aam
daa
add
int
push
sbb
data16
hlt
inc
add
repnz
and
inc
and
xchg
add
andb
mov
xor
jo
pop
dec
ret
sub
cmp
inc
pop
adc
aad
movsl
out
add
sahf
mov
sub
mov
ret
int3
jne
lea
jmp
jge
fwait
scas
sti
cld
mov
mov
mov
adc
mov
loopne
xor
add
jp
cmpsb
mov
int
xor
cmc
jg
sub
loope
jle
cmpl
rorb
add
sbb
pop
out
test
inc
addr16
je
jbe
dec
in
std
mov
in
das
rcrb
sti
imul
ret
sbb
pop
je
mov
cmp
jbe
jl
icebp
xor
add
inc
mov
movsb
std
jns
lods
mov
daa
notb
mov
fwait
ds
xor
fdivrl
out
je
dec
mov
xchg
adc
cs
jle
adc
xor
shlb
xchg
rcr
enter
out
imul
mov
fmull
cmp
sub
outsb
clc
pop
in
adc
cmp
scas
xchg
bound
shl
sbb
jnp
mov
sbb
lods
out
imul
cmp
xlat
xchg
fbstp
mov
inc
mov
mov
xor
shrl
push
addl
pop
mov
arpl
xor
adc
mov
push
stos
xchg
lock
adc
xchg
jmp
mov
cs
or
jle
inc
inc
push
lret
roll
mov
mov
int3
daa
mov
inc
jae
movsl
or
mov
push
jnp
andb
mov
xor
cli
inc
xchg
and
les
cltd
outsb
sbb
test
sub
sub
lea
push
sbb
subb
add
addr16
sub
es
and
popf
mov
cmp
lret
sub
push
lods
or
lcall
xchg
xorb
jbe
ja
fs
pop
sub
or
mov
divb
ficomps
xchg
int3
ret
xchg
test
push
adc
or
mov
add
or
jge
inc
into
neg
lods
mov
fmul
clc
icebp
cmpsl
and
jns
enter
mul
cmc
xchg
adc
jecxz
jb
lods
std
dec
ret
xchg
xchg
rclb
inc
jb
fistps
sbbl
lds
lret
jbe
mov
cltd
ret
sbb
xor
data16
lds
sbb
xchg
repz
lods
push
in
mov
cld
pop
push
loope
mov
outsl
pushf
aas
adc
jl
lds
in
sbb
adc
stc
das
fsubrs
sub
ljmp
sub
iret
push
rorl
lahf
das
movsb
sbb
dec
cmp
jo
int
xor
mov
pushf
jno
xchg
enter
sahf
popa
lea
sub
xor
jbe
je
shr
fistpll
or
mov
mov
push
lods
popf
push
jo
out
mov
stos
jnp
cwtl
clc
jno
inc
loopne
movsl
and
lock
sbb
es
iret
fists
or
or
fldcw
inc
jecxz
pop
xor
movsb
out
mov
lea
push
fiadds
inc
or
cwtl
sahf
cmpsl
sub
dec
out
dec
icebp
rorl
pop
mov
inc
test
mov
cmp
dec
sbb
inc
pop
jp
pop
inc
cmpsl
arpl
jle
les
mov
cmc
lock
or
sub
sub
icebp
add
ljmp
mov
pop
jge
add
jnp
divb
sbb
mov
sub
mov
mov
push
dec
push
pop
inc
repnz
mov
sar
je
test
and
jne
and
arpl
jge
repz
adc
and
scas
push
adc
pop
popa
add
jl
fists
sbb
xor
mov
leave
pop
leave
adcl
xchg
and
sbb
rorl
sbb
pop
mov
mulb
xchg
in
push
ss
ja
icebp
xchg
scas
push
cmp
cmp
rolb
lds
inc
sbb
mov
aas
lock
pop
out
jmp
das
repnz
rcrl
outsb
rorb
mov
jns
out
xlat
test
inc
inc
das
stc
mov
sbbl
xlat
mov
sub
jl
out
leave
jmp
jno
cltd
mov
cwtl
es
jb
cs
lret
pop
setnp
notb
add
jmp
fnsave
push
xor
jae
and
lock
lea
xor
add
sarl
mov
mov
es
imul
rcrb
aad
sbb
cli
dec
in
repnz
add
imul
xor
sbb
mov
inc
es
jmp
movsl
test
push
mov
mov
imul
adcb
out
rorl
out
sti
cltd
cltd
in
mov
addr16
lods
nop
das
fildll
cmp
imul
in
fnstenv
fadd
faddl
fists
push
std
jb
hlt
xor
jge
mov
sub
out
insl
sbb
fisttps
ds
push
sbb
out
int
imul
pop
xchg
xchg
lret
xchg
push
mov
dec
addl
scas
std
jnp
cmp
loopne
popf
out
add
pop
xchg
or
sub
stos
jo
cmc
pop
rolb
dec
std
mov
call
mov
pushf
dec
pushf
fucomip
jne
dec
pop
sarb
adc
outsl
inc
sub
jns
and
xlat
inc
jo
add
jne
sub
mov
out
loopne
push
outsl
cmp
dec
fldl
pusha
mov
lcall
add
in
shll
andb
cmp
mov
out
mov
dec
lahf
stos
dec
xchg
ret
xlat
jg
and
mov
pop
mov
jno
pop
xor
lea
fisubrl
out
xchg
outsl
sub
ljmp
xchg
popf
mov
addr16
jnp
xor
shrb
hlt
in
arpl
cmpsb
dec
inc
subb
dec
leave
addr16
mov
adc
out
mov
fbld
adcl
inc
test
mov
push
cmp
insl
js
popa
adcl
test
and
and
xchg
sub
ret
dec
xor
hlt
iret
imul
mov
add
loope
xchg
loopne
aaa
es
inc
insl
push
cmp
insl
ljmp
faddl
inc
mov
testb
nop
loope
mov
sub
xorb
mov
loop
int
mov
xor
cmp
jae
pop
dec
push
or
pusha
xlat
push
repnz
add
xlat
lds
sub
fs
shr
add
test
popa
lock
add
xor
jo
shrb
push
inc
jl
imul
icebp
mov
inc
or
ret
lret
outsb
pop
pop
ljmp
popf
pop
fadd
pop
push
jno
cwtl
add
jmp
mov
out
xorl
lds
pop
sbb
mov
insl
movsl
add
fnsetpm(287
sti
ljmp
sbb
into
or
es
adc
xor
enter
aas
out
fimuls
cmp
lea
push
adcb
shr
popa
arpl
into
pop
outsl
into
push
pop
add
jo
mov
aam
sbb
cltd
shrb
mov
insl
sbb
fildll
shll
adc
dec
ss
hlt
xchg
pop
rolb
push
scas
les
bound
pop
negb
xchg
test
xchg
mov
pop
xchg
xor
in
testb
dec
out
ficomps
inc
or
sbb
sbb
add
fldt
cmp
test
xchg
aam
clc
cltd
xor
adc
and
cmpsb
les
ret
sub
lea
add
rol
push
push
aam
jno
fistps
or
fsubp
call
adc
enter
imul
dec
scas
fsubrs
xchg
inc
push
repz
mov
adc
jae
and
mov
or
pop
js
pop
adc
sbb
aaa
sub
mov
pusha
js
sarl
dec
out
test
and
jbe
push
cmp
adc
inc
jg
mov
jecxz
stos
adc
cli
pop
int
push
rcrb
pop
subb
cmp
fdivrs
mov
push
ja
mov
mov
lea
test
loop
jmp
jnp
jb
cmp
jo
xor
mov
das
fwait
jae
mov
push
sbb
daa
sub
mov
jne
in
cmp
mov
push
xchg
xor
orl
push
scas
cmp
loope
fisubs
outsb
mov
test
mov
call
inc
mov
mov
lahf
or
out
cmpsl
mov
pop
lock
fcomps
jle
outsb
cmp
jae
adc
xchg
sbb
imul
push
addr16
sbb
das
lods
das
jp
jae
aam
pop
jns
cmp
icebp
and
cmc
xor
fiaddl
dec
dec
mov
sti
js
adc
cs
popf
add
and
xchg
or
xchg
xchg
mov
daa
fsts
pop
fwait
add
hlt
pop
adc
ret
mov
arpl
stc
hlt
imul
in
jbe
sbb
nop
notl
in
xchg
add
add
daa
cmp
sbb
repnz
out
mov
sub
mov
mov
rcrl
xor
js
xor
test
ret
cmpsl
push
cmp
jns
xor
inc
into
or
lea
sub
and
bound
popa
cmp
mov
push
dec
mov
outsb
inc
push
lea
rclb
fcomps
das
test
xchg
sbb
in
mov
jg
push
push
jb
movsb
mov
sbb
jo
jg
mov
bound
xchg
xchg
jge
ss
addl
loop
pop
stos
fisttps
out
push
mov
aas
sbb
hlt
aas
mov
js
mov
leave
aam
xchg
adc
lock
in
adc
push
mov
cmc
or
pop
xchg
shrl
int
xor
loope
mov
repz
jge
push
loop
lcall
mov
sbb
push
mov
jae
push
sub
and
std
mov
sbb
out
das
pop
cmc
dec
flds
push
cmp
xchg
push
fildll
or
dec
nop
incb
rolb
iret
test
dec
data16
cltd
and
pop
lret
popa
aas
add
mov
addr16
imul
aaa
adc
jmp
jle
movsl
xchg
js
stos
xchg
mov
add
addr16
std
ja
movsb
and
into
xchg
xor
je
idiv
sahf
and
mov
imul
push
xor
cmp
mov
inc
mov
das
insb
dec
ret
mov
sbb
xchg
lods
xchg
inc
add
out
addb
call
mov
ror
sbb
les
cwtl
pop
adc
lcall
dec
mov
mov
mov
jb
mov
xchg
sti
je
inc
push
mov
dec
sete
cmp
loop
popa
cmp
mov
mov
shr
das
push
inc
push
sbb
notb
stos
xor
fimuls
jmp
stos
jo
out
mov
mov
mov
pop
scas
sub
adc
jnp
mov
pop
mov
xor
lret
int3
mov
sbb
pop
enter
test
mov
inc
or
negl
stc
and
repnz
aaa
shll
add
repnz
imul
bound
les
loopne
testb
pop
incb
cs
push
movsb
loope
ret
pop
sub
mov
xor
push
pop
cmpl
xchg
call
push
insb
mov
outsl
push
or
xor
mov
mov
xor
test
out
mov
cltd
inc
or
loopne
mov
loopne
repnz
dec
mov
xor
pcmpeqd
shlb
fwait
popa
xor
sub
or
stc
hlt
icebp
sbb
popa
xor
jne
out
bound
out
movsb
into
cmc
adc
inc
dec
mov
mov
loop
push
xchg
jle
hlt
add
push
mov
cmp
xor
pop
dec
andl
stos
pop
dec
icebp
ljmp
mov
mov
cmpsb
push
cmpsb
jno
nop
mulb
mov
aas
inc
mov
xlat
cmpsb
or
enter
add
mov
push
pop
rorb
xchg
gs
push
cld
mov
xor
repnz
lods
xchg
je
adc
pusha
das
push
stos
jbe
sbb
out
mov
idiv
jl
pop
lock
out
jnp
scas
pop
mov
lahf
lds
mov
pop
out
icebp
inc
imul
pop
arpl
sbb
mov
fmull
sbb
lods
adc
pop
out
insb
ss
lret
rol
pusha
out
sti
cmp
cltd
test
repz
addr16
shl
pop
pop
inc
es
mov
loopne
mov
mov
aas
cmp
adc
cmp
mov
in
sub
push
leave
jnp
sub
cmc
int
mov
les
push
sbb
aaa
mov
ja
loop
or
insb
and
sbb
movsl
enter
pop
mov
or
js
mov
iret
dec
sub
or
push
push
xor
test
jae
ret
inc
mov
xchg
dec
sar
mov
jae
pop
lds
pop
xor
pop
adc
cs
jns
mov
fdivrl
sub
sbb
das
rorb
mov
out
jg
cmp
sbb
mov
in
dec
frstor
cwtl
rolb
mov
mov
sti
fwait
mov
fs
gs
test
movsl
lds
pop
adc
inc
inc
out
jge
mov
inc
pushf
push
jbe
neg
adc
fistpll
dec
inc
mov
fdivrp
ss
ret
adc
mov
sti
adc
pop
xor
cmc
push
outsl
sbbb
lods
je
lea
sub
sbb
imul
stc
mov
hlt
sahf
dec
jae
pop
repnz
decl
fisttpll
mov
ss
mov
int
lea
addl
push
js
sbb
cmpsl
push
int3
cmp
ret
mov
push
push
subl
lods
movb
cwtl
dec
in
lock
push
xchg
mov
aam
bound
imul
lret
addr16
or
and
push
mov
and
sbb
test
or
leave
out
mov
in
daa
repnz
pusha
jle
fwait
scas
fcompl
test
adc
scas
pop
and
jp
add
mov
add
jmp
pop
sbb
or
push
dec
xor
jae
push
mov
and
push
popf
fidivrs
adc
shrl
imul
rol
pop
adc
popa
push
ffree
cmp
mov
sbb
push
or
outsb
inc
mov
jns
add
cmp
nop
data16
loop
and
mov
push
lods
xlat
lcall
adc
mov
add
pop
scas
or
mov
pop
sub
fs
push
or
test
lock
lods
imul
and
insb
adc
icebp
cmp
adc
out
std
adc
lret
jg
fcomps
lock
les
add
jl
xorb
orb
push
aaa
lods
scas
mov
cmpsl
pop
mov
pop
icebp
inc
inc
cmpsb
stos
imul
mov
mov
stc
repnz
dec
rol
jmp
std
push
bound
jno
xchg
fnstsw
fisubrs
mov
dec
push
xchg
pushf
dec
xor
and
pop
pushf
xchg
test
add
mov
mov
xchg
xlat
mov
sahf
sbb
daa
and
push
jne
gs
addb
aad
loop
repnz
and
push
jne
gs
addb
aad
loop
repnz
cmp
cmp
movsl
jb
addl
aad
aad
cmc
jmp
push
add
pop
imulb
add
push
jne
in
xchg
jge
cmp
mov
dec
stos
or
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
lods
inc
mov
ja
outsl
fwait
js
pop
shll
das
xlat
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
dec
in
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
pop
xlat
jl
jns
insb
ret
pmullw
or
stos
hlt
daa
std
push
xor
pop
pop
filds
mov
jb
inc
negl
scas
sbb
adc
jae
popa
mov
test
call
nop
das
mov
repnz
jp
bnd
sbb
or
inc
out
aad
mov
addr16
cmp
sub
cltd
or
notl
pop
pop
lods
push
fwait
aam
stos
fwait
ja
push
add
xchg
test
enter
mov
cmp
jl
mov
xlat
cmp
cmpsl
cmp
adc
faddl
xor
push
mov
cmp
sbbl
cld
imul
inc
test
add
jb
lcall
jns
cld
divl
mov
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
fmulp
sub
push
lret
push
mov
pop
mov
mov
pop
mov
out
in
movsl
sub
fiaddl
push
out
fldl
mov
jae
push
cltd
aaa
pop
mov
sbb
fwait
in
cld
and
push
mov
adc
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
fstpl
adc
jecxz
cmp
push
stos
pushf
pop
inc
icebp
lahf
and
jno
inc
je
xchg
jo
in
adc
mov
test
or
cmp
into
out
nop
dec
dec
push
fists
push
insl
jg
stc
out
mov
filds
repz
cwtl
lret
je
sbb
js
hlt
rcll
fsub
fwait
pusha
lret
test
pushf
xchg
dec
loop
scas
mov
jle
dec
cld
scas
daa
in
iret
stc
push
fidivl
push
das
xchg
fstpl
in
daa
or
in
rorb
jg
jbe
jb
jns
xor
xor
lret
loope
or
push
stos
lods
add
pop
lret
lods
int
lret
or
add
movsl
pop
mov
std
sub
push
fcoms
addr16
scas
or
adc
cld
add
ds
inc
sti
pop
fcoms
push
inc
ds
outsl
bound
pop
push
iret
jbe,pt
pop
ds
clc
xor
cmp
jns
inc
dec
cli
out
inc
pop
pop
pop
adc
mov
push
cmpsb
clc
popa
jge
push
jle
inc
popa
jmp
dec
lea
add
xchg
or
mov
enter
cmpsl
mov
les
adcb
push
push
imul
in
cmc
jb
std
repnz
xorl
mov
andl
or
mov
jge
repnz
dec
test
jecxz
imul
fdivr
lret
fwait
lret
mov
sub
xchg
enter
stos
lods
add
and
cld
outsl
sarb
cmp
jg
xchg
ficoms
cmpb
xor
out
adc
mov
lahf
mov
aas
sbb
push
xor
add
inc
pop
push
mov
outsl
out
imul
mov
mov
mov
push
inc
pop
ja
mov
xchg
xabort
mov
xlat
jp
xlat
aam
les
jne
js
cmp
dec
fmul
xchg
into
fwait
out
mov
push
jb
std
mov
cmc
mov
push
repnz
dec
lret
les
jmp
pop
xor
xchg
iret
shll
arpl
and
xor
jmp
mov
adc
cmp
jns
inc
aam
pop
ficomps
addb
push
lods
mov
and
cwtl
xor
divl
and
sbb
push
add
mov
enter
push
loope
xchg
out
repnz
ja
das
xor
adc
adc
jg
popa
ljmp
into
das
sub
dec
lods
xorb
xchg
cmp
sti
mov
loop
stc
lret
jge
mov
xlat
push
fs
add
mov
and
or
loop
cmpsb
out
sub
lret
in
ja
adc
xchg
inc
sbb
mov
int
leave
mov
enter
jg
mov
daa
fsubrs
rcrl
fcoml
mov
mov
imul
pop
inc
testb
mov
jmp
adc
jnp
pop
das
push
mov
sarb
cmovno
aas
cmp
lahf
adc
test
mov
lods
push
sub
adc
mov
pop
push
push
lods
popf
xor
and
lret
and
js
shlb
out
jmp
xor
or
outsb
movsl
pop
mov
je
push
fabs
enter
mov
xor
mov
mov
mov
sub
sbb
sarb
cmp
testl
sbb
call
out
xor
aad
scas
sbb
jno
ja
int3
xor
ja
ret
test
mov
shlb
xchg
xchg
and
mov
outsl
int3
xchg
sbb
cwtl
pop
jecxz
in
lea
jno
jle
daa
pop
ja
fdivr
push
dec
add
xchg
mov
push
add
fisubrs
std
imul
xchg
jae
insb
bswap
lods
lock
and
fstpt
xor
add
jne
insb
xchg
inc
sub
jge
fisubrl
aaa
aam
aam
jne
rcr
mov
sub
bound
mov
add
divb
adc
sbb
jge
sahf
ss
pop
pop
and
pop
sti
mov
xor
sbb
rcll
mov
push
jmp
aam
fdivr
cld
aad
mov
test
xchg
aam
push
sbb
sbb
add
faddl
pop
sarb
in
mov
pop
mov
repnz
adc
fcoms
hlt
clc
and
xchg
sub
and
stc
mov
mov
in
xlat
xor
inc
iret
test
sub
lcall
bound
mov
and
les
lods
adc
dec
fidivl
jl
sub
pop
cli
lea
mov
out
dec
js
mov
push
aas
test
xchg
inc
repnz
jnp
lcall
mov
push
sar
sbb
cmpsl
xchg
pop
xchg
andb
ret
test
xchg
mov
adc
mov
xchg
add
fsubrs
mov
add
mov
dec
xchg
push
sub
jecxz
mov
mov
gs
fstpt
cld
mov
mov
and
mov
ret
sbb
mov
mov
push
aad
in
sub
hlt
into
js
cmp
gs
daa
mov
out
jne
shrl
es
pop
decb
std
test
and
fimull
sub
test
repz
mov
sbb
popf
jl
icebp
dec
jno
inc
fadd
ret
xchg
mov
cmc
mov
push
mov
sub
out
scas
and
shlb
mov
push
jp
add
leave
mov
flds
inc
aas
test
lcall
mov
and
mov
and
jp
ja
push
stc
pop
ljmp
loopne
icebp
js
mov
or
orb
pop
and
jno
je
repnz
adc
rorb
add
cld
lahf
repnz
xchg
inc
sub
sysret
out
stos
in
mov
fadds
pop
dec
pop
push
xchg
adc
shrb
jno
mov
outsb
arpl
mov
sbb
stos
int3
imul
int
mov
clc
lahf
ficoml
scas
es
mov
push
and
data16
sbb
loop
shlb
mov
sub
sbb
addr16
dec
mov
loop
and
in
fldcw
hlt
adc
loopne
dec
push
iret
pop
aad
mov
jg
loop
lods
dec
dec
js
jecxz
mov
add
scas
insb
pop
cld
sub
add
adc
ljmp
cmpsl
enter
sti
push
sub
or
sub
test
add
outsl
mov
jle
jb
push
fldl
cs
fistps
cmp
push
lock
test
pop
arpl
shlb
push
cmp
sub
jbe
lret
popf
test
out
sbbl
xor
sbb
fimuls
movsb
stos
imull
cld
add
repz
loope
xor
add
inc
enter
jno
sahf
push
or
lret
loope
dec
jmp
xor
mov
or
frstor
adc
pop
adcb
xchg
js
adc
popf
outsl
out
push
adc
dec
sub
sbb
jns
push
dec
es
mov
cmp
std
gs
daa
pop
sbb
imul
scas
lcall
std
mov
fsts
stos
in
int3
jg
inc
sub
fmuls
mov
xor
sub
int3
leave
jmp
xchg
in
scas
jp
insb
xchg
mov
leave
loop
xchg
jl
push
stc
or
fwait
leave
mov
das
mov
sub
rolb
call
scas
push
sbb
into
dec
dec
add
adc
or
jmp
xor
hlt
into
and
idiv
inc
ds
push
in
or
gs
pop
adc
xchg
ret
pop
mov
mull
fdivs
jno
out
dec
fsts
sub
xchg
mov
cmp
xlat
insl
test
inc
into
repnz
pop
and
push
aaa
test
push
fs
sub
xor
push
je
ja
add
add
inc
incl
dec
je
fwait
mov
stos
ret
pop
pop
mov
jns
add
ret
push
mov
cmp
aad
loop
in
xchg
add
pushf
xor
and
lds
movsb
sub
add
sbb
add
sbb
jmp
and
xchg
test
cmc
ss
test
mov
pop
or
imul
out
push
cli
cmp
gs
or
and
cmp
idivb
push
xor
cld
fistl
es
sub
mov
out
sbb
or
mov
sbb
leave
in
ret
cmp
std
imul
mov
ss
xor
xchg
add
lahf
sub
icebp
cmpsl
lcall
mov
mov
push
mov
pop
mov
cmp
sub
lods
push
add
xchg
xor
pop
mov
lods
sub
mov
test
cmpb
ss
test
jnp
pop
rcrl
mov
movsl
sbb
out
cmpsb
or
pop
cmp
shl
or
leave
adc
fcoml
fnsave
mov
xchg
loop
fiadds
lahf
cmpsl
icebp
sbb
add
nop
mov
pop
mov
addb
pop
jmp
and
push
xor
das
aam
jg
js
inc
push
push
inc
inc
jns
int3
ror
sub
push
iret
mov
sbb
pop
repz
aam
lahf
xorl
push
je
push
lods
lods
repz
aad
push
jbe
mov
jo
lds
mov
adc
iret
int
xchg
jecxz
push
aaa
and
fdivs
and
shlb
dec
mov
adc
add
sbb
pop
sar
mov
add
out
xchg
fsubp
add
in
add
rcll
iret
int3
add
ret
xlat
test
out
xor
xor
mov
xor
fistps
leave
imul
call
mov
lcall
pop
dec
adcb
test
and
cmp
mov
xchg
fadds
pushl
addl
shlb
mov
filds
push
shll
push
mov
sub
int
jb
in
jg
popf
aas
sub
lods
pop
outsb
adc
and
pop
mov
pop
sbb
mov
pop
int3
bound
mov
aam
mov
gs
sub
dec
out
shll
mov
xor
out
imul
out
cmp
ljmp
pop
mov
pushf
jl
test
mov
lods
hlt
or
int3
fldenv
mulb
inc
les
push
and
in
xor
jmp
sub
hlt
jnp
in
ljmp
in
test
fwait
std
mov
and
xchg
mov
sarb
jne
fcompl
lret
jnp
adc
rcrl
cmpl
int3
inc
jl
mov
inc
aaa
push
aam
mov
aam
in
jnp
insl
aad
xor
arpl
sbb
pop
call
adc
push
ret
and
loope
les
xchg
adc
or
movl
pusha
or
mov
jp
orb
sub
cld
add
mov
pop
ror
lods
or
lds
or
scas
jg
out
in
std
aas
into
push
sub
mov
cmp
push
jo
mov
jp
cmpsl
mov
inc
jg
dec
mov
push
sar
pop
xchg
sbb
pusha
mov
loopne
mov
iret
cwtl
push
mov
adcl
outsl
popf
sbb
and
mov
jno
int3
push
inc
insb
aam
in
daa
aam
les
or
xor
cmp
subl
stos
es
popf
pop
std
adc
fldcw
add
lds
les
aam
jecxz
es
movsb
movsl
imul
scas
xchg
sbbb
das
je
inc
and
in
mov
ret
jmp
cltd
hlt
and
push
cltd
cli
aam
pop
ret
or
pop
cmc
mov
push
pop
out
mov
fwait
dec
or
out
mov
push
fists
pop
push
xchg
repnz
xchg
hlt
scas
push
adc
lret
mov
fcmove
or
jno
jle
sbb
pusha
rolb
outsl
lock
addr16
jmp
sarb
pop
sahf
adc
cli
fwait
cmc
jb
scas
leave
sub
stos
xor
pop
out
or
ja
cwtl
adcl
ficompl
xlat
adc
bound
sbb
dec
add
mov
stos
mov
std
fidivrs
push
add
ljmp
xchg
lea
ss
xchg
xchg
pop
lahf
data16
push
dec
leave
sbb
sahf
sub
cmp
lods
cltd
int
movsl
pop
xchg
mov
push
ja
out
in
incl
or
lock
fcmovne
xchg
adc
hlt
adc
gs
idivl
xchg
mov
jge
loop
shlb
cli
scas
jae
sbb
and
push
cmpb
pop
or
inc
mov
loope
adc
lods
jbe
mov
adc
xchg
mov
and
inc
fwait
push
icebp
addl
fwait
ret
fs
into
andb
fwait
icebp
roll
rorb
enter
cmp
mov
movsb
in
mov
test
repnz
push
fnstsw
pop
xchg
push
mov
jecxz
mov
cmp
stc
sti
xchg
fidivs
int
add
mov
cmp
add
xor
or
test
xchg
dec
mov
jecxz
sub
sub
imul
into
adc
negl
dec
into
sub
pop
xchg
faddl
mov
adc
rcll
mov
mov
dec
pop
pushf
pop
shrl
rorl
cmpsl
mov
rol
add
sbb
push
push
push
cmp
sbb
mov
mov
sub
cmp
adc
lahf
nop
andl
ret
and
and
jl
mov
arpl
pop
add
insl
pop
mov
jle
adc
cwtl
popa
push
adc
adc
std
les
mov
mov
lcall
cmp
sbb
test
jb
fbld
mov
push
adc
fcompl
push
leave
insl
cltd
mov
xlat
xchg
sahf
push
aaa
mov
inc
mov
mov
or
ret
pop
shrb
int
cmp
jecxz
cmp
stos
inc
insb
inc
add
cmc
pop
and
loope
subl
sub
shr
xor
rolb
iret
or
popf
and
fdivs
in
mov
dec
push
jge
xchg
mov
ds
jmp
mov
and
pop
andb
cs
adc
sbb
dec
xchg
rorb
loopne
xchg
sub
fmul
lds
adc
addr16
jb
xchg
dec
loope
in
push
pop
mov
sbb
ret
jo
push
inc
jns
dec
movsl
and
shr
adc
push
sbb
roll
in
and
jae
cmp
pushf
pop
jg
rorb
out
test
pop
cmp
adc
daa
sub
in
std
das
imul
adc
mov
or
jo
aam
cmp
dec
sbb
imul
push
fisttps
xchg
push
fsubp
adc
cmpsb
dec
out
add
jae
int
sbb
mov
fsub
jne
add
mov
mov
aad
sbb
aad
cmp
add
dec
adc
mov
sub
xchg
cld
or
test
push
mov
imul
lds
data16
mov
pop
outsl
out
dec
sub
insl
add
lcall
out
xor
lods
xlat
mov
and
mov
xor
sbb
popa
cmp
mov
into
or
mov
pusha
mov
mov
loope,pt
or
pop
add
popf
xchg
movsl
xor
out
mov
rcll
popf
cmc
jg
int3
out
repz
je
mov
mov
jbe
cmp
pop
jp
iret
add
inc
lock
movsb
mov
add
sub
cwtl
mov
and
cld
sahf
sbb
push
out
ret
sub
pop
js
shrb
das
pop
sub
mov
jnp
jle
xchg
mov
jmp
loop
int3
mov
ror
int
push
adc
call
xchg
fwait
repz
cmpsl
cmp
pop
rcll
push
imul
dec
xchg
fistpl
sbb
jb
xchg
fldcw
xchg
enter
stos
pop
add
fnstenv
shr
mov
push
repz
test
fdivr
fs
cld
je
rol
mov
arpl
mov
push
cmc
push
jmp
aaa
jl
ret
fdivs
adc
imul
scas
cltd
or
mov
dec
xchg
scas
scas
cmp
mov
clc
lods
dec
es
xor
aaa
pop
mov
adc
js
xchg
insl
cmc
or
xchg
daa
inc
sub
sub
jne
shlb
ja
scas
sbb
bnd
rclb
fsubrl
xlat
inc
js
lcall
pushl
adc
daa
mov
dec
xor
inc
jo
pop
pusha
test
lret
sahf
dec
test
pop
pop
xor
scas
xor
fwait
xchg
xor
test
mov
addr16
stos
arpl
sub
mov
adcb
push
mov
iret
pop
inc
loope
in
imul
ljmp
adc
arpl
jno
dec
sbb
hlt
xor
pop
adc
fistl
cwtl
mov
hlt
outsl
mov
mov
push
adc
and
in
dec
ja
cli
jecxz
repz
inc
lcall
icebp
jmp
mov
mov
stc
cmp
aaa
mov
sbb
jo
sub
or
mov
test
xor
fsubr
imul
inc
pop
push
imul
sbb
push
xchg
enter
in
fs
adc
cld
scas
aas
imul
sbb
mov
mov
mov
fisubs
lret
repz
popa
adc
cmp
sub
mov
mov
ss
out
aam
call
mov
jge
in
pop
jp
pop
jo
fildll
fistpl
nop
dec
ss
xchg
fisubrs
pushf
leave
add
add
add
pop
movsb
and
adc
add
dec
pusha
loope
popf
ja
shr
pop
xchg
cld
add
ds
push
je
bound
scas
or
test
loopne
sbb
or
mov
out
pop
stc
mov
push
lds
sahf
out
xchg
movsb
sbb
jns
pop
insl
fsubp
sbb
aad
mov
enter
addl
xchg
ret
mov
call
scas
test
lods
xor
gs
mov
arpl
mov
icebp
fildll
xchg
sub
out
push
jne
inc
or
cwtl
dec
mov
fildl
cltd
jbe
iret
in
cmpsb
cmp
pop
mov
pop
sub
pop
lock
xchg
fdiv
std
cld
stc
in
inc
lods
out
adc
insb
stc
mov
xchg
push
fidivrl
es
das
and
sub
imul
sub
jmp
and
aam
xor
push
icebp
mov
repz
xchg
pushfw
cmc
xchg
rcll
imul
sahf
cli
or
sub
inc
and
inc
adc
sub
jmp
mov
push
mov
inc
add
mov
shl
in
cwtl
icebp
fldcw
sbb
stos
nop
mov
push
adc
aaa
fildl
add
fwait
pop
addl
sub
test
sub
aaa
or
jle
jnp
mov
nop
out
je
jle
lret
xor
xor
insl
inc
pop
cmp
jns
in
sbb
sbb
out
daa
outsb
cmp
cmp
jnp
jo
pop
mov
fisubl
jmp
jecxz
sbb
pop
int3
jp
mov
iret
sbb
push
divl
ljmp
movsb
sbb
dec
leave
pop
cmp
aad
je
and
leave
sbb
out
nop
and
jo
jl
push
out
cltd
movsl
lcall
iret
add
fcmovu
push
shll
cmp
sub
push
loope
movsl
sub
mov
loopne
pop
adc
and
test
in
ret
inc
mov
dec
filds
xorb
enter
xor
pop
int3
inc
adc
mov
fnstenv
or
pop
pushf
jg
xor
mov
sti
mov
cmp
or
or
nopl
cmp
xor
cs
arpl
pop
jbe
sti
xor
ja
mov
hlt
sahf
ffree
nop
out
or
push
fcomps
icebp
popf
lret
das
push
lea
inc
test
cmp
movsb
cmpb
das
xchg
arpl
sbb
lods
rorb
stc
mov
negl
mov
add
jae
iret
mov
dec
movsl
and
pop
test
mov
pushf
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
int3
daa
fdivl
sub
cmp
or
sbb
insb
xchg
cmpsl
pop
mov
inc
mov
ja
pop
std
xchg
int3
daa
fdivl
sub
out
imull
xchg
dec
cmpsl
pop
mov
inc
mov
ja
pop
cld
pop
dec
daa
pop
aaa
rol
ret
jge
out
sbbb
hlt
push
and
push
pop
dec
dec
es
dec
cmp
data16
jmp
stos
cltd
lcall
imul
sub
sbb
jb
cli
jmp
lret
test
cltd
lcall
inc
pop
push
dec
and
xor
add
push
or
cli
loop
mov
mov
std
ljmp
and
sbb
das
sub
adc
int
push
mov
jns
in
pop
push
pop
iret
cmp
scas
jmp
mov
adc
add
lcall
adc
mov
sub
sti
lods
push
mov
inc
scas
in
stos
xor
dec
xor
jb
sbb
icebp
jo
hlt
int
adcl
fsts
xchg
cmp
or
mov
icebp
add
leave
into
adc
test
adc
jno
cltd
ljmp
push
dec
les
test
mov
dec
push
jmp
mov
jns
mov
lahf
mov
pop
pop
dec
sub
xor
sbb
adc
loopne
icebp
ljmp
mov
cltd
lcall
cmp
sub
inc
sbb
lea
cmpsl
mov
cld
jecxz
les
imul
dec
push
inc
data16
dec
outsb
sti
mov
xchg
pushf
mov
jmp
ds
and
dec
das
inc
adc
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
stos
add
mov
mov
dec
add
dec
xlat
adc
scas
add
and
stos
mov
fmul
push
pop
or
out
es
mov
dec
loope
aam
into
aam
lods
hlt
sub
cmp
inc
cwtl
fbstp
sub
outsb
jmp
jns
sbb
cmp
jg
mov
fildl
mov
mov
out
push
icebp
xor
jl
movsb
ret
dec
lcall
inc
mov
mov
jb
xchg
and
sysexit
xor
xor
cmp
mov
movsl
pop
or
jle
ds
xchg
repz
sub
pop
loope
js
and
xor
push
push
ja
jle
or
lea
gs
push
and
sbb
fdivp
outsb
push
sub
stos
fsts
int3
mov
lret
repnz
cltd
fimull
repnz
mov
mov
pop
adcl
movsb
sbb
jmp
inc
mov
adc
ja
mov
lea
aam
fistl
cmp
aam
les
inc
add
push
cmp
fstl
lods
sets
or
dec
adc
mov
xchg
movsl
andb
std
and
ret
gs
aam
lcall
sub
cmp
xchg
inc
test
fsubp
rcrl
adc
jbe
mov
jbe
aaa
jbe
shll
aas
inc
mov
sub
sbb
sbb
lahf
arpl
or
out
sbbl
add
add
jno
cltd
lahf
add
jg
movsb
stos
xchg
test
xor
fcoml
mov
xchg
in
xchg
jecxz
jg
pop
push
pop
and
mov
mov
mov
xor
arpl
imul
repnz
sahf
xchg
dec
xor
repnz
sahf
or
dec
cli
dec
filds
sbb
mov
jmp
sub
or
lock
dec
jno
mov
in
pop
cmpl
hlt
sub
push
imul
add
sarl
pop
call
add
shlb
pop
fcmovnu
mov
andb
das
lea
inc
shl
mov
mov
and
mov
inc
psrlw
mov
cwtl
mov
mov
test
imul
ret
ret
push
and
icebp
insb
pop
out
loop
stos
lret
xor
mov
test
mov
jmp
insl
out
pop
sbb
sbb
mov
je
dec
dec
mov
cmp
or
pop
dec
insl
insl
es
adc
dec
pop
cmpsb
nop
adc
sbb
aam
cmp
inc
std
sub
dec
sbb
push
mov
lods
inc
pushf
std
adc
cmpb
pop
xchg
cmc
out
xchg
or
inc
addl
or
ljmp
xchg
mov
push
adc
push
xor
add
in
shld
idivl
loop
iret
fst
movsl
xlat
cld
mov
xchg
stos
inc
sbb
cmp
std
aam
popf
ljmp
adc
pop
xchg
push
jne
and
lcall
xchg
in
iret
lret
pop
enter
sbb
out
jp
xor
lea
and
push
enter
cmpsl
outsl
daa
daa
jnp
xor
cmp
cmpsb
jmp
xchg
out
inc
jne
lret
pop
xchg
jge
pop
mov
pop
std
inc
push
mov
movsl
ret
pop
movsl
sarl
fldenv
add
xchg
pop
mov
add
stc
rolb
inc
fiaddl
sub
pushf
dec
test
add
lds
fwait
sbb
outsb
push
icebp
movsl
or
jb
sbb
xor
je
xchg
add
stos
push
js
popf
mov
iret
sbb
cmpsb
outsl
jecxz
fnop
adc
fwait
out
jbe
sub
jg
in
mov
fsubs
and
sahf
fbstp
jge
lahf
pop
fmull
ja
jge
mov
mov
lahf
jo
push
inc
adc
adc
loope
in
fisttps
js
mov
mov
lret
lahf
and
js
mov
xor
fwait
xchg
push
inc
push
mov
adc
dec
fldt
and
or
stos
cli
test
fbstp
jnp
jo
xor
in
mov
add
loop
or
std
ret
fbld
stos
aad
nop
xchg
and
test
shl
fidivrl
jnp
dec
popa
cmp
std
rcrl
fstp
push
dec
lret
or
fs
cmpsb
or
inc
loope
lahf
jg
mov
jns
mov
idivb
dec
mov
pusha
adc
mov
mov
repnz
lret
pop
push
cmpps
popa
lock
ljmp
aas
and
sub
lret
aad
lods
or
scas
clc
testl
dec
adc
cltd
sub
sub
sub
fistl
je,pt
pusha
stc
push
pop
mov
xor
mov
pop
pop
aad
sti
mov
fsubrs
cmp
cs
sub
inc
mov
push
mov
push
mov
out
jnp
pop
das
or
mov
popf
cmp
int
hlt
arpl
mov
iret
stos
data16
stc
call
dec
add
sub
adc
sub
ror
push
cs
mov
xchg
mov
lds
inc
sbb
addr16
adc
sbb
mov
jp
fstps
shl
push
dec
out
imul
rcrl
rolb
xchg
xchg
push
mov
ds
xchg
xor
shlb
mov
pop
or
pop
stos
imul
mov
mov
pushf
cmc
inc
add
out
mov
xor
mov
aad
in
imul
xor
jb
add
lret
mov
jb
bound
fwait
push
xchg
adc
test
or
das
jg
lock
mov
scas
add
shl
cmp
dec
push
push
xor
int3
sbb
xlat
mov
es
dec
pop
lea
push
fs
push
mov
sub
gs
push
and
test
mov
xchg
mov
cld
aaa
and
sbb
jmp
sbb
sbb
in
mov
fidivrl
pop
and
push
popf
lahf
pop
ss
orl
xor
and
jo
sarl
ss
in
popa
jb
or
outsb
mov
dec
lret
add
adc
jl
sub
adc
dec
aas
mov
or
mov
rcrb
or
ja
mov
mov
sar
xor
dec
push
push
jno
or
insl
cmp
sbb
mov
test
nop
nop
jge
ljmp
enter
xchg
ss
aaa
aad
adc
lea
xchg
push
mov
pop
cltd
ds
or
stos
in
cmp
out
pop
jne
inc
nop
dec
xchg
sar
dec
sarl
cmp
movd
stc
jl
movsb
sub
adc
enter
sbb
jg
xchg
daa
sbb
and
jp
lret
ffreep
sbb
dec
jo
ficomps
mov
inc
mov
lock
pushf
jno
push
movsl
jmp
jo
pop
out
and
daa
negb
jne
aas
adc
cld
das
adc
push
outsb
int3
cmpsl
test
ss
pop
mov
ljmp
cmp
push
and
shll
out
mov
jge
aaa
loop
or
bound
scas
push
fcmovbe
rcrl
add
sub
mulb
gs
adc
bound
jo
push
xor
dec
mov
test
pushf
insb
xor
sbb
jle
jl
adc
cmp
loope
pop
push
and
inc
add
add
call
push
add
mov
pop
cld
ret
mov
aas
inc
xor
jmp
jb
and
ret
jnp
cmp
pop
xchg
dec
pop
dec
dec
popa
push
mov
dec
imul
movsb
scas
or
xchg
popf
mov
xlat
mov
out
mov
xchg
jnp
in
lcall
das
cmpsl
cmpsl
pop
xchg
jno
mov
fstps
enter
sbb
rcll
dec
adc
add
add
hlt
pop
fnsetpm(287
mov
cmc
loopne
push
jge
sub
adc
ret
in
dec
jp
movsl
jno
cmp
sub
es
out
cltd
fcoms
popf
imull
sbb
fcompl
mov
inc
jge
or
pop
mov
stos
clc
pop
jg
notb
neg
mov
or
scas
pop
cmpl
sub
sub
or
dec
cmpl
sub
xchg
add
nop
jno
repz
movsl
mov
mov
mov
pop
mov
ret
cs
test
shlb
xchg
mov
pop
call
or
xor
dec
mov
rclb
dec
cltd
aad
jge
mov
pop
jle
scas
fsubrs
mov
out
in
dec
stc
and
pop
cwtl
rcll
jp
sbb
hlt
jl
repnz
mov
inc
push
inc
cmp
xlat
decl
jmp
js
push
or
imulb
outsb
or
dec
xor
mov
ss
mov
inc
sbb
mov
inc
push
pop
mov
dec
mov
cltd
pop
lods
gs
jbe
fisttps
iret
add
leave
dec
cmc
popa
or
push
fwait
cs
lock
call
or
push
jne
cwtl
add
test
sbb
xorl
orl
popa
popa
sub
outsb
test
aam
dec
push
pop
sub
sub
loop
add
pop
ret
sub
add
push
fwait
cmp
arpl
dec
sbb
rcrb
push
call
gs
aad
pop
lcall
aam
inc
pop
ret
mov
jno
sub
add
mov
pop
push
or
xlat
js
jl
jbe
mull
data16
dec
test
cmp
sub
xchg
cwtl
es
adc
out
mov
mov
jge
imulb
insl
addr16
cld
or
aam
stos
pop
ret
dec
mov
push
arpl
sarb
outsl
inc
aaa
mov
and
fucomip
mov
pushf
mov
cmp
loope
mov
mov
lahf
or
sub
jmp
push
xchg
cmpsb
insb
jecxz
or
mov
xor
subb
sub
mov
dec
mov
pusha
or
pcmpgtw
movsl
scas
xor
imul
out
mov
dec
inc
ds
pop
mov
fnstsw
xchg
mov
mov
push
mov
cwtl
jle
in
push
xchg
dec
jns
mulb
rcll
jp
jmp
sbbb
ss
filds
das
and
imul
mov
dec
or
inc
bound
xor
das
pushfw
lahf
push
mov
cs
cmc
insl
jns
std
mov
outsb
outsb
les
pop
sub
ljmp
add
jl
data16
adc
jge
cmc
xchg
lret
call
mov
fdivl
mov
loope
dec
cltd
addl
push
sbb
pop
repnz
add
dec
pop
dec
jae
pop
jae
cmovne
loopne
xchg
gs
int3
insb
xchg
subb
inc
jne
and
ficomps
cmpsb
xchg
shlb
pop
cmp
addl
lret
push
and
fdivs
xlat
mov
pop
aaa
sbb
mov
lods
xor
cmp
es
mov
jae
popf
cmp
push
jecxz
outsb
scas
jle
jle
dec
fstpl
ret
out
lods
add
mov
arpl
mov
out
sub
cmc
mov
bound
cmpsl
std
addb
jns
or
in
mov
test
or
or
pop
loope
or
jno
mov
movsl
out
or
shll
lea
adc
sbb
sbb
pop
cs
or
call
pop
out
scas
jb
push
xchg
insl
repnz
das
aam
and
shrb
xchg
in
rcl
pop
or
stc
ljmp
mov
in
insl
scas
pusha
stc
test
ja
sti
mov
in
in
sub
fsubs
setnp
push
pop
inc
and
sub
jo
cwtl
adc
xchg
arpl
iret
adc
pop
pop
outsl
call
subl
cli
popa
arpl
xor
nop
imul
push
fsubrl
ret
andb
cmc
fdiv
xchg
cmp
je
movsl
push
mov
xchg
mov
subb
push
popa
pop
test
sbb
mov
mov
add
mov
sbb
daa
push
xlat
out
dec
adc
mov
mov
mov
out
js
mov
cmpsl
add
mov
jle
xor
jmp
inc
pop
adc
xchg
push
push
imul
jnp
gs
lods
std
cltd
in
jno
xlat
cltd
sbb
push
mov
js
aam
mov
push
sbbl
adc
out
imul
into
adc
xchg
stc
fcoml
sub
cmp
and
out
add
scas
pop
out
dec
daa
cmp
aam
shrl
cmp
push
fsubs
das
cmp
mov
stc
fadd
jg
std
fidivrs
movsl
add
call
cmp
push
jne
adc
shlb
cmp
je
sub
push
sarb
test
sarl
dec
out
jb
arpl
leave
insb
add
xor
faddl
add
repnz
pop
inc
push
enter
das
stos
xor
movsb
ficomps
cmp
cmp
push
pop
pop
push
xor
add
xor
fldt
adc
lods
fildll
pop
sub
pop
fildl
arpl
xlat
repnz
sarl
dec
xor
and
lahf
xchg
je
movsb
sbb
adc
adc
inc
imul
sbb
daa
daa
dec
xor
ja
inc
fsts
mov
outsb
pop
fiaddl
dec
pop
aaa
dec
xchg
mov
inc
int
out
push
push
mov
push
out
xchg
push
jmp
adc
and
and
mov
mov
pop
xor
cmp
or
xchg
cmp
or
xor
fstpl
xchg
mov
fs
add
mov
push
fisubs
inc
mov
loop
add
lret
out
pop
adc
jbe
sub
or
pop
push
sbb
repnz
int3
negl
enter
cmp
push
sti
mov
push
adc
mov
lret
cltd
add
ror
shrl
int3
jbe
pushf
sbb
in
arpl
cli
and
inc
mov
inc
into
fstpl
mov
sahf
stc
movsb
dec
cld
and
js
mov
jo
jbe
mov
jg
xor
mov
cmp
xor
adc
out
test
pop
adc
jp
movsl
test
xchg
pusha
fnop
loope
xor
or
sub
in
mov
jge
scas
push
test
dec
sbb
push
and
sub
xchg
inc
xchg
or
xchg
mov
cli
pop
pop
rcrb
lock
gs
nop
inc
outsb
test
sbb
clc
in
das
push
jl
cld
jmp
inc
nop
inc
arpl
fildl
popf
sub
xor
jge
mov
mov
push
add
outsb
push
adc
dec
hlt
jge
jbe
arpl
lods
inc
inc
xor
jge
popf
push
mov
push
nop
jmp
push
xor
jns
or
mov
rcrb
adc
loope
rorb
inc
mov
sub
push
add
pop
movsb
mov
fs
cwtl
add
xor
jae
dec
and
js
sti
lods
fisubrl
jge
cmp
aad
je
xor
or
out
fiadds
xchg
scas
insl
add
lahf
rcrl
cmc
ljmp
mov
xor
rorb
push
mov
jle
cmpl
jp
test
add
imul
xchg
fadd
pop
out
pminsw
fimuls
aad
movsl
and
push
jns
xor
std
andb
cmpsb
daa
int
push
inc
sub
shl
push
lock
aam
sub
aas
or
inc
adc
test
addl
in
fdiv
sbb
xchg
mov
jle
jg
bound
xor
ljmp
jle
push
lods
pop
dec
test
into
push
push
idiv
add
push
push
xor
loop
in
or
popl
push
push
inc
insb
xchg
xor
in
insl
decl
and
or
je
movsl
rcrb
lods
shl
xlat
and
and
sbb
dec
mov
mov
adc
adc
insb
or
mull
cmp
sub
pop
xchg
lds
jne
ret
out
dec
mov
mov
loope
sub
leave
sbb
inc
les
icebp
pop
xchg
rorb
stos
ja
les
ss
or
fwait
jns
cmpl
dec
mov
and
repnz
cmp
xchg
fincstp
xor
lret
mov
cld
mov
es
and
xchg
loopne
lret
push
add
xchg
mov
loopne
lahf
std
pop
xor
repz
subl
jmp
cs
xor
les
sahf
and
sub
aad
nop
jnp
inc
jge
and
call
aas
mov
xchg
or
sub
test
cltd
data16
pop
add
popa
stos
push
fs
mov
push
arpl
jl
out
pop
add
imul
cs
cmp
outsb
jmp
mov
enter
imul
push
push
jae
and
jge
mov
xlat
xchg
cmp
pop
or
mov
dec
lods
out
mov
jo
mov
pop
aaa
cmpsl
add
pop
mov
xchg
xchg
dec
or
mov
call
leave
push
mov
test
inc
cmpsl
test
pop
push
xor
ret
imul
push
sbb
rolb
xor
inc
or
mov
mov
arpl
icebp
pop
mov
cmp
inc
inc
pop
and
filds
lds
popa
adc
test
jmp
xor
xchg
inc
dec
loop
cltd
pusha
xor
cld
add
clc
in
popf
lds
dec
sbb
inc
ja
sbb
enter
dec
pop
gs
inc
sub
cmp
icebp
aas
aad
xchg
push
shrb
sbb
ja
das
jae
insb
pop
in
int
and
std
add
test
or
push
sbb
jecxz
js
addr16
or
jp
inc
rolb
lahf
or
popf
imul
cs
in
lock
in
mov
mov
lret
inc
mov
mov
jbe
fistpll
test
cmp
fwait
add
or
mov
loopne
push
xor
sub
mov
dec
jae
pop
add
dec
stos
ja
cmc
out
jns
mov
mov
push
push
or
sub
mov
lea
pop
sbb
push
pusha
cmp
add
mov
pop
clc
les
sub
popf
fidivs
inc
repz
arpl
jmp
loop
or
mov
test
jb
mov
push
arpl
aaa
jg
pop
push
xor
stos
push
mov
dec
ret
stc
mov
lods
in
push
fdiv
push
sbb
xchg
sbb
cmp
cmp
lds
jns
mov
push
dec
roll
pop
in
xor
fstps
xor
fs
std
xor
push
js
dec
das
test
jecxz
and
das
in
mov
jmp
sbb
jg
aam
jb
push
dec
jmp
xchg
and
int
mov
sub
cmp
and
loopne
mov
mov
mov
and
les
fmull
xorb
jbe
pop
cmp
out
maskmovq
adc
push
and
push
pop
iret
sbb
fdiv
sti
fcmovb
or
cmp
inc
movsb
inc
movsb
imul
insl
data16
sahf
dec
mov
ds
lahf
xor
aad
orl
pushf
mov
dec
or
jbe
ss
pop
cmc
jo
ja,pn
lock
sub
outsb
mov
mov
push
stc
mov
lret
shrb
enter
mov
mov
sub
dec
popf
repz
add
shlb
add
cltd
cmp
adc
lods
push
pop
jne
out
lahf
stos
sbb
pop
out
sti
and
or
jo
imul
push
inc
fwait
adcl
test
cmpsb
push
nop
push
jecxz
xchg
xchg
loope
loop
dec
dec
cmp
sub
sbb
or
stc
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
test
mov
imul
cmp
sub
sbb
or
cli
jmp
lret
lods
stos
cltd
lcall
outsl
pop
dec
dec
cmp
sub
cltd
sbb
inc
jae
leave
mov
data16
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
aad
imul
int
outsl
or
sti
jno
add
dec
add
add
add
add
or
add
add
sbb
adc
add
lea
in
add
add
add
add
js
in
add
add
add
or
sti
add
xchg
add
add
add
add
add
add
add
add
add
add
push
add
or
add
add
add
add
add
add
add
add
add
dec
add
add
sbb
add
add
add
add
add
add
add
add
add
pop
mov
add
movsb
add
lahf
add
add
or
add
add
add
and
add
add
add
add
ljmp
add
push
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
data16
lea
xchg
add
add
add
add
add
add
add
add
add
rolb
pop
add
add
dec
add
ljmp
add
add
add
add
stos
add
add
add
rolb
pop
push
sub
sbb
or
data16
add
add
popf
add
aam
and
lea
call
add
add
add
add
es
add
xor
push
lea
scas
add
add
fiaddl
pop
add
ljmp
add
add
add
add
scas
add
add
add
mov
add
popf
add
add
add
add
or
add
scas
add
add
add
mov
add
and
ljmp
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
lea
xor
ret
add
add
add
push
add
sti
add
add
add
add
add
add
add
add
xor
push
lea
sti
add
mov
add
add
add
cmp
mov
add
add
add
add
and
test
sbb
sbb
sbb
add
add
add
add
mov
xor
or
add
add
add
add
add
add
add
lret
add
add
ljmp
add
add
add
mov
add
int3
add
add
int
push
add
add
add
add
add
add
lret
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
pop
add
sbb
incb
add
add
rolb
jnp
cwtl
add
xor
scas
stc
lods
daa
sub
mov
push
or
in
mov
mov
xchg
pusha
inc
or
pushf
pop
stos
xchg
jne
pop
push
xchg
pusha
or
pop
or
dec
mov
incl
lcall
aas
lahf
add
xchg
sub
sub
fstpl
movl
pop
pop
es
cmpsb
dec
xor
sbb
xchg
sbb
pop
push
mov
jle
add
sub
and
hlt
fisttps
pushf
clc
mov
cmp
shr
ja
in
cltd
xor
mov
enter
and
push
inc
iret
fisubrl
scas
push
inc
add
jnp
sub
mov
xchg
filds
lret
test
icebp
adc
mov
mov
jae
and
gs
mov
daa
push
mov
mov
xchg
or
add
push
scas
jo
lods
jecxz
sbb
mov
jo
inc
mov
repnz
out
xchg
aad
mov
jle
inc
dec
push
mov
mov
addr16
aas
lahf
pop
pushf
imul
cmp
cmp
lods
mov
test
and
test
push
enter
mov
mov
test
xorl
cltd
lods
mov
xchg
dec
insl
stc
out
add
leave
jnp
mov
das
rolb
imul
mov
aaa
pop
xchg
mov
xchg
and
sub
cmp
imull
fidivs
shrl
sbb
ja
lret
int3
jl
jmp
cmpsb
fisubrl
mov
imul
test
loopne
insb
cmp
stos
push
push
mov
add
addr16
jmp
shrb
lcall
push
mov
ds
jge
sub
add
jge
lret
cmp
xor
xchg
aad
add
stc
sub
xchg
shrb
lahf
sub
ss
sbb
pushf
pop
pop
ds
add
call
insb
leave
in
andb
arpl
cmp
js
inc
mov
add
pop
mov
js
jne
es
test
mov
mov
stos
sbbb
and
lea
int3
bnd
push
xor
push
enter
mov
or
ret
scas
and
jge
sti
in
jns
ljmp
aad
leave
mov
mov
shrl
cmpsb
lahf
mov
rorl
cs
inc
rcr
cwtl
mov
dec
pop
flds
xor
subl
sarb
lret
xor
xchg
cmc
inc
clc
sti
mov
sub
in
xchg
push
arpl
add
ljmp
inc
jae
adc
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
