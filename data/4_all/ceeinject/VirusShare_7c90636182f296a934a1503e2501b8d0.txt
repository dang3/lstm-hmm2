fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
adc
je
fs
adc
add
hlt
movsl
in
xchg
lds
adc
je
fs
adc
add
xor
inc
xchg
aam
in
icebp
lds
push
add
fs
adc
add
xor
and
aam
out
xchg
mov
mov
sbb
add
aaa
sahf
and
pop
cmp
imulb
js
movsl
pusha
sahf
push
mov
jmp
jle
xchg
scas
arpl
stos
cmp
or
icebp
sub
cmc
in
inc
mov
pop
push
lret
mov
xchg
aam
lds
iret
sbb
dec
mov
push
flds
inc
popa
movsb
xor
push
add
cmp
les
xor
fs
shl
ljmp
imul
gs
sub
movsl
or
pop
mov
inc
ljmp
insb
lods
pop
test
rorb
sbb
test
aam
mov
pop
dec
push
add
fs
adc
add
xor
and
aam
les
xchg
lds
push
insb
cmp
cmp
jo
push
and
aam
sbb
mov
lods
ret
mov
mov
push
cmp
gs
pop
adc
inc
jne
gs
mov
mov
xchg
loopne
mov
xchg
adc
adc
and
push
es
add
xor
and
aam
les
xchg
lds
push
add
fs
adc
add
xor
and
aam
les
xchg
lds
push
mov
mov
int3
arpl
cld
repnz
xchg
xor
out
xor
jl
xchg
cmpl
add
mov
add
mov
dec
je
rcll
test
cmp
xchg
mov
pushf
push
sub
adc
mov
sub
pop
xor
popf
push
xor
pop
in
daa
outsl
fsubrs
push
insb
mov
popf
fs
shrb
out
fdivl
mov
sbb
mov
mov
lods
mov
and
pop
cltd
das
nopl
movsb
jb
add
jmp
aad
imul
repnz
lret
xchg
int3
repz
jbe
cmp
pop
sub
movsb
popa
mov
cld
sbb
xor
pop
fildll
ds
xor
iret
fnstsw
inc
lock
xchg
xchg
and
mov
pusha
mov
mov
mov
cld
or
dec
pop
aad
into
mov
push
push
hlt
out
xchg
cs
lods
or
jb
stos
pop
inc
xor
cld
fcoml
mov
and
nop
mov
insb
jae
dec
pop
mov
inc
push
dec
fwait
inc
xchg
mov
fisttps
stos
sbb
int
adc
dec
cmp
mov
add
mov
test
rcrb
add
push
push
fmuls
sbb
in
data16
jecxz
lret
fsub
mov
jno
xchg
jmp
inc
loope
shrl
jge
dec
inc
add
andl
cs
loop
or
inc
xor
sub
jge
pop
bound
dec
push
pop
jl
in
ret
cmc
dec
cmp
or
popf
xchg
sub
mov
mov
pushf
sahf
test
out
adc
push
mov
inc
outsb
scas
loop
and
int
jno
xlat
mov
add
mov
call
es
or
pop
dec
xchg
push
nop
faddl
es
call
jge
and
hlt
stos
mov
ficoml
std
or
mov
fidivrl
lret
test
into
fsubrs
pop
in
sbb
dec
pop
pop
adc
shll
cwtl
jne
sub
outsl
fdivrl
adc
in
push
das
pop
imul
sub
sub
and
addr16
mov
dec
mov
sbb
movl
push
push
mov
or
pop
leave
xchg
xchg
out
popa
inc
or
or
and
mov
ljmp
xchg
in
pop
popf
fidivs
test
or
or
imul
jecxz
movsb
push
cmc
mov
inc
ficompl
rcr
jmp
pop
sub
mov
push
sub
clc
xor
roll
cmpsl
aaa
iret
stc
pop
xorl
add
jnp
cmc
nop
jmp
dec
push
push
dec
outsl
adc
push
inc
mov
mov
sub
std
nop
movsl
lea
stc
cmpsl
inc
and
sbb
jp
pop
push
daa
jle
cwtl
sbb
test
jecxz
inc
add
sub
movsl
notl
and
mov
mov
pop
mov
push
movsb
mov
scas
cs
out
sbbb
xor
hlt
add
insb
lret
std
pop
stc
pop
sbb
aam
xor
xchg
test
push
pop
sub
sub
xor
push
xlat
sub
dec
fiadds
cmp
cltd
lcall
jno
aas
test
out
or
std
xor
inc
das
adc
add
pop
push
std
pop
outsb
jecxz
loope
dec
in
pop
push
in
push
test
fldt
addl
jl
inc
jnp
xchg
jne
je
fdivrs
push
aam
push
inc
div
and
xor
inc
imul
inc
adc
inc
ljmp
jno
sahf
lret
jmp
fidivs
outsl
mov
sbb
inc
int
jl
mov
sub
loop
dec
push
pusha
fimuls
dec
add
daa
push
and
and
sub
xchg
mov
pop
int
repnz
xlat
stos
pop
push
pop
push
push
mov
movl
rcl
xor
cmp
cld
jl
shrb
andb
lahf
icebp
dec
imul
das
sbb
jo
push
sub
jmp
dec
pop
push
fsubrs
leave
and
jne
mov
xor
lods
hlt
lcall
movsb
or
movq
jl
sbbl
enter
push
fimull
pop
fsubr
shl
sub
insl
imul
movsl
and
arpl
jle
add
enter
cmc
flds
mov
into
in
imul
aad
sub
mov
xchg
and
inc
mov
mov
ljmp
push
add
test
adc
insl
mov
gs
cld
pop
outsl
js
orl
mov
xor
in
mov
pushf
cmp
pop
mov
push
testl
addr16
inc
mov
loope
outsl
movsb
repnz
xchg
pop
xor
shl
test
or
sbb
sbb
push
cwtl
mov
jno
das
addr16
or
jp
das
cmp
iret
addr16
hlt
and
xchg
in
fs
inc
daa
dec
loopne
adc
test
insl
adc
jecxz
lods
jae
sbb
sarl
adc
pshufw
fcoml
or
jnp
xchg
shlb
pushf
out
fiaddl
les
mov
fs
adc
repz
hlt
sbb
xchg
add
push
outsl
and
cwtl
inc
insb
jecxz
mov
lods
dec
push
mov
cmpb
jle
mov
aad
repz
dec
push
sub
insl
mov
pop
dec
dec
mov
add
in
fsubp
and
xchg
xor
sbb
lock
mov
ret
icebp
jae
std
mov
sbb
and
pushf
and
xchg
jl
push
lret
bound
insb
cli
std
loop
nop
imul
adc
je
fnstcw
lret
les
inc
push
sub
stc
add
inc
adc
mov
adc
fimuls
inc
int
scas
ds
adc
rolb
cwtl
jns
xchg
push
mov
jb
jns
xchg
gs
out
pop
pop
push
cmp
pop
subl
mov
pop
mov
inc
fimull
repnz
leave
fimuls
outsl
and
out
pop
and
and
mov
adc
add
test
adc
lds
in
cmp
lcall
inc
insl
aad
shlb
lahf
pusha
addl
sahf
arpl
test
pop
mov
adc
stos
je
scas
sbb
inc
mov
in
pop
push
mov
fcoml
sti
inc
ret
ja
mov
sub
push
inc
mov
mov
ja
push
cli
mov
ret
and
aaa
int
loop
stc
paddusw
insb
sbb
sub
or
or
scas
jmp
and
jne
fwait
gs
or
xchg
lret
xchg
loope,pt
cmp
xchg
aad
mov
or
jbe
inc
frstor
loope
push
pop
das
roll
pop
lock
ficompl
or
sbb
movsl
inc
cwtl
sub
gs
arpl
jp
mov
mov
cmpsl
mov
pop
negb
add
popf
outsb
mov
fwait
cmp
cmc
cwtl
push
lcall
mov
mov
scas
popf
call
fdivrs
in
lahf
sbb
fcom
dec
sahf
add
sbbb
mov
mov
mov
lods
fstl
sub
push
movsl
inc
mov
mov
lds
xchg
cmp
push
sbb
imul
aad
or
dec
imul
pop
fcmovb
xchg
lea
test
inc
lret
push
xor
mov
rorl
push
cmp
sbb
notl
cmp
dec
jge
in
lret
ljmp
in
cmpsb
dec
inc
inc
leave
jbe
jp
pushl
push
xor
inc
push
xchg
push
lock
xchg
fsubs
pop
scas
daa
pop
mov
gs
jbe
incb
test
inc
nop
lret
call
sti
dec
push
minps
or
aas
call
test
add
mov
mov
inc
leave
sub
sub
pop
mov
and
xor
leave
push
repz
mov
adc
xchg
xor
aaa
mov
leave
leave
daa
outsb
addb
inc
jg
leave
inc
sub
push
mov
out
sbb
inc
jno
call
sar
out
jg
xchg
int
fadds
aam
lahf
adc
test
aad
test
xchg
jnp
add
repz
cwtl
dec
sub
push
scas
cmc
dec
push
lods
jb
int3
adc
repnz
lcall
cmpl
add
jle
bnd
xchg
xor
xor
dec
xlat
mov
in
enter
stos
sbb
mov
and
dec
xlat
jns
cli
loope
icebp
out
jge
lods
dec
fistpl
lods
mov
scas
sub
pushf
cli
sub
add
mov
inc
fmul
sar
js
lds
shlb
pop
repnz
jno
xchg
mov
sub
mov
adc
jmp
out
loope
cmp
push
cmc
mov
outsl
push
xchg
loop
add
adc
cmc
loop
jge
cli
dec
jge
pop
cmp
in
mov
scas
sbb
shrb
mov
lods
das
loop
push
mov
cmc
xchg
mov
dec
sub
outsb
mov
mov
das
xlat
arpl
xor
sbb
shlb
jbe
cltd
das
nop
nop
insl
fwait
or
lds
adc
or
bound
push
inc
int
jl
jb
xchg
sub
in
add
subb
cmpsb
sbb
out
or
mov
adc
or
mov
repnz
or
sarl
rol
cmp
lods
pop
aaa
pop
cmc
cmp
sbb
add
jnp
in
xor
pop
lcall
sbb
mov
add
or
sbb
xorb
lock
inc
jl
jecxz
cwtl
shlb
dec
les
push
sbb
in
popf
stos
add
rcl
sbb
leave
inc
hlt
and
mov
jle
sarl
sti
pmuludq
xchg
and
add
pop
inc
dec
int
pop
mov
cmp
repnz
mov
adc
dec
lds
shll
mov
and
xchg
mov
jns
insl
ret
cltd
sub
adc
pop
call
ror
push
add
aam
mov
sbb
push
sbb
clc
sbbl
addb
sti
lcall
inc
push
aaa
sbbl
lods
fs
xchg
adc
and
int
lods
imull
shlb
cmp
pop
in
out
cmc
lds
cmp
sbb
movsl
push
cmc
pop
mov
loop
stos
and
xor
ja
xor
jl
sub
jle
jns
xlat
fidivl
pop
ja
push
out
xchg
sbb
addb
cmp
lahf
jge
repnz
mov
in
jl
mov
mov
jmp
test
push
movsl
inc
call
add
or
scas
je
and
push
and
or
das
repnz
loop
push
in
adc
shrl
mov
sbb
sbb
mov
cs
xchg
int3
loope
push
push
sub
lret
lds
cltd
pop
inc
add
ret
das
adc
mov
into
sub
decb
inc
fs
mov
inc
inc
adc
adc
inc
mov
sbb
and
out
repz
cmp
shl
cmpsl
lcall
or
leave
xor
dec
push
stos
imul
and
xchg
xorl
mov
push
loop
je
lcall
arpl
ret
jnp
jnp
add
or
cmp
lds
xchg
iret
fstpt
cmpsb
jp
push
mov
dec
cli
mov
xchg
jb
sbb
and
mov
call
mov
adc
imul
push
in
adc
mov
popa
jl
loope
inc
push
mov
fstpt
or
enter
sbb
mov
mov
push
jle
je
sahf
xor
mov
xor
lock
push
loop
lods
xor
mov
in
push
jb
pop
add
cld
inc
mov
inc
les
idivl
insl
inc
mov
stos
xor
push
inc
cmp
mov
enter
dec
and
dec
jmp
sahf
add
sbb
add
inc
add
push
sbb
and
shlb
add
subb
iret
mov
sbb
inc
lahf
and
mov
cmpsb
pusha
insl
push
and
outsb
jecxz
sub
cltd
fdivl
xor
add
lcall
push
cmpsl
orb
sbb
gs
cmp
nop
push
mov
lods
push
push
push
and
negb
xchg
push
addl
add
insb
jle
idiv
cmp
out
into
mov
mov
scas
out
xlat
dec
dec
push
cmp
hlt
sub
xchg
mov
xor
stos
jp
pop
lret
popf
out
push
jecxz
jle
pop
and
or
aaa
movsb
mov
mov
outsl
inc
and
sub
aaa
push
lods
dec
and
xchg
dec
xchg
pop
ss
sub
insb
mov
xlat
cld
lea
stos
aam
pop
mov
pusha
xor
jmp
push
push
sub
push
sub
dec
or
pop
aam
xchg
subb
dec
insb
pushf
inc
lret
or
adc
or
sti
imul
adc
into
xchg
jae
fwait
popf
mov
lcall
leave
testb
jbe
xchg
cmpsl
xorl
jno
pop
push
insl
call
pop
adc
jnp
mov
sbb
and
bound
sbb
loope
sub
mov
cld
in
mov
fstps
mov
mov
daa
pop
scas
mov
or
push
movsl
and
mov
aas
add
sbb
sub
jg
jecxz
in
lcall
sbb
push
cmp
push
xchg
std
or
mov
xchg
outsl
sbb
js
jbe
in
push
clc
cs
pushf
outsl
push
popl
jno
xchg
cmc
jnp,pn
ljmp
lods
cld
movsl
and
fimuls
gs
mov
insb
adc
push
sbb
adc
imul
dec
idivl
xor
shrl
out
adc
mov
sbb
adc
iret
push
mov
and
mov
inc
in
lock
popf
and
bound
or
sbb
out
mov
xchg
ja
sbb
mov
sub
hlt
loopne
int
sbb
les
repz
fwait
sbb
popa
adc
das
sub
in
movsb
add
push
pop
adc
stos
push
push
ret
andl
lods
iret
fs
ja
lods
aad
mov
out
cltd
imul
aam
push
ret
push
in
cwtl
out
mov
xlat
test
ficoml
jo
push
imul
das
scas
ss
mov
mov
sub
sbb
cmc
imul
push
and
sbb
dec
sub
clc
mov
ret
aaa
in
pop
fs
movsl
mov
mov
cmp
mov
aam
xor
popa
pop
jge
mov
sub
out
xor
popf
xchg
pop
fimull
xor
add
and
ret
push
and
push
or
dec
insl
mov
xor
dec
and
xor
add
xor
arpl
jecxz
jmp
jmp
mov
cltd
adc
mov
insb
fstpl
xchg
es
out
mov
out
ret
aas
and
jno
dec
mov
cmp
adc
gs
adc
cmp
add
mov
jns
jno
pop
scas
aam
scas
test
mov
jmp
adcb
popa
mov
clc
dec
ljmp
in
pop
stos
fimull
pushf
fwait
sbb
cltd
das
scas
push
lds
push
cli
loopne
call
push
pop
out
fmuls
leave
mov
xlat
cmp
into
mov
sbb
loop
pushf
arpl
inc
mov
xor
xchg
jp
adc
cmp
cltd
hlt
inc
jno
sub
pop
pop
sub
cs
pop
sbb
pop
pop
jp
jge
jecxz
adc
or
push
mov
xchg
ds
jp
iret
sbb
fstpt
scas
daa
pop
cmpsl
or
jle
xor
xchg
cwtl
sub
mov
arpl
fabs
add
pushf
into
mov
lock
sbb
cld
aam
sub
sbb
aam
mov
pop
add
sub
inc
leave
add
mov
adc
leave
js
fildll
mov
push
xchg
cmp
xchg
mov
xor
mov
mov
xchg
bsf
pushaw
cmp
ss
xchg
cld
push
push
faddl
cmpsb
movsb
les
hlt
insb
dec
cld
lcall
sub
push
pavgw
cld
inc
dec
mov
jne
push
gs
mov
adc
jecxz
rcrl
mov
cmp
dec
in
jp
sub
pop
mov
mov
add
jg
push
fiadds
and
pop
fcoms
adc
dec
insl
das
into
lcall
or
out
lahf
cltd
mov
sahf
test
xchg
add
shrb
or
fbstp
icebp
popa
ja
iret
mov
pop
and
xor
xor
test
adc
cmp
orb
mov
gs
pop
sub
mov
mov
ja
loop
les
add
gs
pusha
adcb
stc
and
stos
dec
jp
add
lahf
decb
iret
adc
in
or
and
pushf
mov
les
cmpsl
push
gs
ljmp
clc
sub
mov
aad
ss
imulb
test
cmp
sbb
cwtl
ja,pt
clc
cmpsb
or
inc
clc
mov
clc
les
xchg
pop
inc
inc
push
cmp
iret
int3
fildl
aaa
push
cld
adc
sub
sub
push
add
jecxz
jne
test
or
jge
inc
nop
add
js
inc
and
xor
jg,pn
std
scas
sbb
sub
scas
adcl
int
loope
pop
lds
cld
push
and
mov
fiadds
or
pop
or
sub
pop
lret
dec
or
mov
jae
dec
add
inc
dec
inc
mov
mov
sbb
mov
dec
popa
lock
mov
loop
jmp
ja
cli
push
movsl
xlat
divl
sub
mov
adc
mov
sti
pop
out
and
xchg
std
and
aad
mov
fstl
je
inc
xor
out
pop
test
cmpsl
filds
adc
fimull
sahf
ja
loopne
sbb
pop
pop
out
fldl
shll
rep
mov
je
jbe
cmp
les
loop
sbb
stos
jge
ffreep
xchg
gs
dec
fbld
cmp
add
and
sbb
int
or
push
sbb
ret
lcall
push
mov
pop
popf
jmp
jp
fisubs
push
sbb
movsl
jl
cmc
mov
fsubrp
xchg
sub
clc
arpl
adc
and
ret
lret
push
add
std
cmp
adc
adc
jbe
add
mov
cs
mov
ds
adc
popf
mov
jns
loope
bound
incb
sahf
dec
std
lret
pop
stos
dec
in
and
test
pushf
mov
movsb
cmpsb
pop
mov
mov
adc
mov
xchg
xchg
jmp
jbe
aaa
add
dec
jns
out
incb
push
imul
je
cmp
jo
fstpt
and
nop
daa
push
notb
xchg
xor
pop
sbb
pop
jb
pusha
out
xor
inc
enter
mov
cltd
adc
daa
xchg
dec
cmp
jmp
mov
pop
mov
pop
push
or
mov
xchg
adc
sub
dec
imul
xlat
sbb
pusha
sbb
aas
enter
xor
and
insl
je
aad
cmpsb
ss
rcrl
aam
lar
or
add
sar
pop
out
insb
or
clc
iret
mov
lret
xchg
pop
subl
add
aad
ret
loopne
cmp
inc
in
inc
dec
cmp
push
lea
stc
dec
and
xchg
rcrl
dec
mov
adcl
rorb
and
fwait
jns
stos
xlat
sub
add
scas
jle
add
sub
ret
mov
mov
pop
aaa
add
stc
jbe
push
ja
loope
mov
mov
fs
rcll
aad
jle
push
sub
sti
mov
or
aad
sbb
dec
xchg
ljmp
push
push
dec
xlat
jae
out
bound
and
ss
cltd
and
leave
in
sbb
lods
aad
cwtl
and
or
lods
pop
arpl
xor
out
ljmp
jbe
xchg
inc
movsl
je
fs
adc
add
xor
and
aam
les
xchg
lds
push
add
fs
adc
add
xor
and
aam
les
xchg
lds
push
add
fs
adc
add
xor
and
aam
les
xchg
lds
push
add
fs
adc
add
xor
in
aam
outsb
pop
hlt
movsl
xchg
mov
dec
sbb
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
cmp
or
sbb
imul
xlat
imul
mov
jmp
sti
xor
add
adc
in
hlt
les
aam
movsb
jnp
dec
test
stos
fs
push
stos
dec
sti
xor
add
adc
in
hlt
cltd
movsb
sbb
fs
push
jecxz
xor
lahf
push
addr16
xchg
ja
or
mov
pshufw
xchg
sub
popa
sti
and
fisttps
mov
jl
cwtl
sahf
push
inc
movsb
sti
xor
mov
sahf
pop
adc
mov
push
xor
and
std
lret
add
inc
aad
jle
jle
or
xor
ja
sar
mov
add
xor
lods
mull
testl
stos
fwait
mov
mov
and
lret
fistl
sub
cmp
mov
ficoms
ja
xor
add
ljmp
in
xchg
movsl
xchg
jl
mov
cwtl
jne
daa
add
addr16
add
add
insl
hlt
or
sbb
movsb
add
and
stos
push
mov
add
jge
loopne
mov
les
add
adc
shrb
and
jge
pop
sbbw
jp
add
push
clc
mov
das
jmp
xor
push
lcall
mov
mov
mov
dec
test
stos
fs
push
jmp
sti
xor
add
adc
in
hlt
or
sbb
imul
stos
fs
push
jmp
sti
xor
add
adc
in
pushf
leave
sub
push
movsb
rclb
ret
out
call
cli
pop
mov
mov
pop
xchg
mov
jl
mov
sbb
rorb
aam
aad
icebp
popa
xchg
or
test
xor
add
and
xor
pop
subb
loopne
outsl
push
or
mov
add
xchg
push
sub
mov
in
sbb
shrl
or
cmc
and
xchg
mov
shrb
or
scas
lods
movsb
add
pop
sub
push
movsb
xor
mov
mov
clc
and
sub
das
mov
add
sbb
out
outsl
imul
cmpb
cltd
mov
outsb
inc
jge
movsb
jmp
and
jnp
push
rcll
iret
or
jnp
pop
sbb
lods
insl
xchg
pop
roll
repnz
insb
or
sub
mov
lret
or
add
pop
xchg
sub
bnd
aas
push
xlat
addb
idivl
iret
adc
pop
nop
insl
sub
aam
jne
daa
add
repz
pushf
jne
or
nop
jno
xchg
xchg
sti
shlb
hlt
leave
imul
push
push
push
enter
fidivrs
dec
test
mov
mov
dec
iret
xchg
stos
divl
cmp
pop
or
fistl
jge
loope
sub
ds
sbb
out
jns
dec
jb
pop
scas
in
jmp
dec
cli
add
inc
jb
mov
fadd
imull
cmc
nop
jnp
dec
mov
or
xor
adc
xorb
pop
repz
xlat
add
sbb
mov
jge
mov
sbb
jbe
gs
or
insb
sub
ds
fwait
mov
inc
loopne
cld
aaa
fnstsw
repnz
mov
sub
inc
cltd
sub
xchg
mov
popa
fcmovb
inc
mov
jne
shrl
mov
mov
cmc
das
sbb
sub
shrb
mov
sbb
icebp
mov
and
movsl
inc
loop
jo
sub
cmp
mov
mov
xor
jmp
imul
push
cs
cmp
dec
xor
jbe
mov
and
es
addr16
xchg
add
mov
sti
lret
lcall
and
sub
iret
pop
bound
dec
negl
jecxz
movsb
fiadds
pop
add
in
mov
rorl
mov
xchg
bound
out
jbe,pn
dec
jns
cwtl
icebp
out
enter
or
test
jge
in
and
xor
hlt
sub
xchg
shlb
lods
ret
addl
ss
push
add
inc
push
dec
xchg
and
loopne
push
mov
xchg
lea
mov
cmp
int
dec
scas
popa
inc
xchg
das
add
push
decl
xchg
repnz
or
mov
divl
xchg
cltd
xor
iret
mov
push
pop
push
ljmp
dec
lret
aas
inc
ss
cli
pop
mov
cmp
jl
scas
jbe
out
mov
inc
fadds
fimuls
mov
andl
sbb
adc
sub
in
lret
xchg
scas
pop
pop
xchg
inc
lods
mov
mov
push
out
pop
sbb
xor
repnz
push
into
mov
or
shll
cmpsb
sbb
lret
sub
bound
jle
push
testb
lret
push
xor
jo
push
jle
mov
fwait
jno
scas
mov
scas
jecxz
mov
xor
ja
scas
jecxz
inc
cmp
xor
popa
ljmp
push
adc
push
andb
push
les
out
pusha
and
mov
outsb
aaa
dec
fidivs
repz
movsb
mov
cmp
arpl
xchg
pop
xor
xor
mov
jge
mov
xchg
insb
ss
cli
or
dec
std
and
insb
fidivrs
adc
ss
sub
xchg
jns
mov
xchg
pushf
adc
out
outsl
xorl
jmp
xor
mov
push
push
std
andl
lds
pushf
xor
jns
loope
or
xor
lods
mov
jge
leave
ss
pop
leave
rclb
jecxz
dec
rcr
shlb
dec
sub
and
cmp
xchg
loope
push
mov
cmp
mov
cmpsb
enter
inc
pop
jbe
mov
dec
rcl
push
insb
sbb
xor
out
dec
lret
lds
adc
cmpb
xor
lret
dec
sub
xchg
push
test
xchg
and
popa
in
adc
andl
add
mov
jmp
arpl
add
leave
rolb
add
stc
or
jg
shrl
sti
mov
fsubs
fisubrl
lea
add
aaa
movsb
cmp
insl
xchg
sti
push
popf
adc
repnz
or
xchg
gs
mov
fiaddl
push
clc
gs
push
loopne
nop
dec
mov
lods
jmp
jl
pminub
adc
adc
scas
or
addb
xchg
mov
jg
lret
mov
sub
xchg
push
xacquire
or
cmp
mov
dec
add
pop
jae
divb
pop
scas
cmp
pop
inc
inc
loopw
stos
orb
mov
cmp
loope
mov
mov
and
pop
jmp
inc
mov
pop
fdivs
jmp
into
pop
or
mov
lods
test
call
dec
fistpl
mov
scas
sarb
push
int3
fisubrl
mov
in
jbe
fildl
xchg
js,pt
stc
test
lods
mov
adc
clc
xor
sahf
dec
insb
out
arpl
mov
and
mov
cmpsb
lock
call
stos
and
sub
addb
xchg
ljmp
test
sub
scas
lods
mov
out
xor
dec
dec
into
adc
push
mov
or
xor
jns
into
xor
xor
fcomp
xor
outsl
sbb
and
adc
xchg
addr16
inc
sar
jmp
and
insb
mov
out
mov
inc
add
shlb
cmp
fs
add
jecxz
fsub
jge
inc
cli
adc
xor
test
in
cmpsb
xchg
add
fnsave
leave
jbe
divb
xor
loope
jmp
lret
jl
int3
fbld
fidivs
aad
mov
je
push
lcall
push
jae
rolb
stos
ja
mov
add
sbb
mov
aad
movhps
push
cmp
test
cmp
add
dec
popw
das
fstpl
shrl
jp
outsb
sbb
push
popf
push
jge
pop
dec
adc
xchg
outsb
sub
cmp
lods
dec
aas
fstl
in
sbb
mov
jle
push
fwait
or
dec
mov
mov
fwait
push
adc
lahf
and
aaa
xchg
cmp
lea
pop
psllq
cmc
fs
inc
add
cs
clc
imulb
popa
mov
dec
jo
push
mov
push
shr
mov
inc
std
stos
or
aad
js
adc
xor
jge
lock
xor
clc
jns
sbb
inc
int3
nop
add
loop
lds
lahf
js
fcomi
mov
sti
lea
stc
shll
jle
decl
into
add
movsl
pop
cmc
pop
addr16
icebp
sub
mov
push
inc
mov
mov
ljmp
xchg
cmp
ljmp
lds
fsubrs
nop
sbb
mov
imul
lods
test
stc
and
ljmp
pop
rclb
and
cltd
add
xor
xchg
shrb
cli
mov
adc
loope
cmp
jbe
stos
add
push
sub
outsl
test
xlat
dec
pushf
mov
cmpsl
xchg
sub
mov
inc
jo
outsb
scas
or
pop
pop
or
sbb
lea
in
movsb
ret
fnstcw
pop
mov
bound
test
mov
enter
out
mov
in
ret
fs
push
sti
cs
mov
sub
addr16
je
ds
mov
scas
mov
push
dec
or
bound
mov
arpl
dec
and
aas
cmp
pop
push
outsl
shll
frstor
mov
mov
dec
mov
scas
xchg
add
fidivs
cmp
aas
dec
bound
call
gs
cli
mov
lock
rol
out
cli
pop
fs
jge
add
mov
movsl
fcompl
sbb
pop
inc
test
fucomip
mov
dec
xchg
inc
loop
dec
stos
imul
popa
movsb
jg
lcall
inc
ffreep
loopne
cmp
mov
out
xchg
push
sar
pop
fiadds
mov
lcall
jp
sbb
pushf
or
jecxz
push
bound
es
xchg
int3
pop
cld
repz
xor
pop
sub
lods
cmpb
sahf
push
push
call
mov
jbe
sub
xchg
aas
and
mov
popa
shll
lahf
pop
insb
sahf
icebp
push
fldenv
xor
cmpl
dec
or
fucomip
dec
adc
xor
insb
jmp
xchg
jae
aam
into
sti
xorl
ret
or
sub
imul
shl
cmp
inc
and
push
lods
mov
enter
cmp
push
add
mov
mov
xor
stc
push
sbb
jno
dec
idivb
dec
aad
xor
xor
cmpsb
movsl
sub
lret
jne
and
add
add
jp
sbb
cmpb
es
loopne
push
test
xor
negb
inc
mov
popf
xchg
jmp
sbb
xchg
cmpsb
scas
push
sub
lahf
negl
or
call
and
setne
es
jmp
rolb
mov
jl
and
das
xor
mov
sub
or
cmp
sbb
xchg
pop
sub
repz
xchg
add
bound
mov
sbb
push
dec
test
mov
sub
fistps
push
push
enter
mov
mov
movsb
daa
sub
ljmp
call
mov
cltd
pusha
xchg
mov
popa
mov
cmpsl
in
movsl
stos
pop
mov
in
jl
cmc
jo
xor
cltd
xchg
cmp
sub
and
gs
lods
cmp
loop
add
fnstsw
repz
cmpsl
aaa
mov
and
mov
dec
aas
movsb
pop
lret
inc
dec
mov
andb
lret
mov
insb
dec
les
mov
cmc
sub
sbb
testb
in
xor
dec
icebp
ljmp
mov
rorb
pop
cmp
std
pop
das
sub
jle
lods
enter
insb
add
jp
test
sbb
dec
jnp
jp
or
cmc
push
xchg
inc
xor
sbb
aam
jnp
push
std
repz
adc
cli
mov
or
lods
jo
xchg
or
jns
jbe
stos
cs
mov
cs
push
pop
out
cld
push
movsl
fucomp
lods
insl
lcall
in
inc
insb
mov
pop
ret
arpl
xchg
push
push
pushf
xor
or
push
dec
call
sbb
push
and
adc
xchg
hlt
inc
test
sbb
ss
mov
sub
outsb
in
test
pop
cmp
jmp
sub
push
push
jae
or
mov
xor
fcmovnb
mov
sub
pop
xlat
bound
call
push
jo
outsl
and
xchg
sahf
jl
sbb
mov
mov
dec
daa
xchg
in
repz
in
adc
push
mov
push
dec
inc
fs
imul
push
movlps
push
repnz
pmaddwd
outsl
shl
cs
and
loope
push
jns
leave
xchg
mov
lea
pushf
jmp
sub
popa
jl
clc
jl
or
xchg
jo
fidivs
out
es
dec
aad
adc
gs
loopne
and
push
inc
jp
ret
or
push
push
scas
mov
nop
rclb
mov
jno
bnd
sbb
ds
mov
push
orb
xor
int
xchg
arpl
cld
jecxz
mov
add
mov
sbb
popa
mov
pop
movsw
popa
jb
jle
rclb
jp
mov
lahf
ret
jp
sub
in
pusha
pop
loope
mov
xchg
adc
sub
notb
mov
jge
inc
lods
push
or
xchg
mov
insl
cli
in
add
insl
ret
jecxz
dec
mov
push
rolb
push
cltd
mov
mov
cld
add
les
sbb
les
loopne
scas
ror
arpl
stos
pop
test
xor
pop
arpl
mov
xchg
repz
bound
fsubp
fnstenv
lret
xor
mov
lods
insl
mov
xor
popf
jle
cwtl
inc
mov
lods
imul
xor
popa
jle
adcl
lea
jle
xor
lret
and
aaa
dec
pop
insl
xchg
sub
xor
inc
push
and
movsb
roll
jo
in
mov
insl
xor
jge
pop
inc
nop
and
mov
stc
leave
mov
sub
push
add
adc
lcall
divl
movsb
xlat
push
test
mov
and
and
mov
pop
lcall
shlb
dec
fbld
in
or
jne
imul
and
adc
dec
movsl
jbe
sbb
pop
sub
test
stos
xchg
mov
int
pop
inc
hlt
push
sbb
mov
imul
mov
xchg
push
out
in
enter
add
ret
cwtl
test
cwtl
push
mov
orb
sbb
sbb
clc
pushf
in
movsb
cltd
cs
cmp
std
pushl
pop
out
pop
push
lret
sub
jp
in
lret
shrb
insl
cli
mov
and
pop
rcrl
push
push
mov
mov
int3
jecxz
inc
imul
and
dec
je
adc
mov
enter
xor
jmp
inc
dec
test
cmp
push
movsb
sbbl
push
cmp
xchg
xorb
shll
imul
comiss
push
jecxz
pop
or
lea
fimuls
xor
lsl
mov
inc
jbe
daa
xlat
pop
lret
fcomi
cs
mov
aam
xchg
inc
xor
cli
iret
inc
cmp
jb
xor
mov
or
std
mov
sub
pop
cmp
mov
jle
popa
shl
jo
imul
mov
rcrb
mov
cmp
bound
xor
ret
dec
inc
je
mov
mov
out
arpl
fildll
lea
out
push
mov
test
scas
test
out
repz
fwait
pushf
cli
mov
or
scas
in
sahf
jns
push
int3
shlw
dec
jbe
dec
jmp
ljmp
int3
loopne
mov
loope
inc
xlat
jmp
jl
pop
or
sti
popa
cli
jb
bt
push
les
inc
in
leave
mov
sub
mov
xor
jle
ljmp
and
inc
subl
mov
scas
js
add
sub
out
cmp
add
rorb
je
or
pop
cmp
xor
out
inc
test
pop
mov
jbe
push
out
dec
pushf
stos
sub
or
mov
jp
sbb
dec
add
fs
xchg
pop
lea
push
mov
into
push
pusha
pop
xor
inc
les
int3
xor
lahf
fmuls
insb
or
sub
inc
adc
dec
push
xor
cmp
ficoml
orl
mov
lret
inc
movsb
dec
inc
dec
xchg
add
iret
cmp
inc
movsb
pushf
mov
ficoms
dec
inc
adc
mov
sbb
mov
int
push
and
or
into
leave
enter
cmp
mov
pop
aas
loop
cmp
mov
push
nop
lds
cmp
pop
mov
inc
mov
mov
js
jmp
cmp
loop
sbb
pushf
fwait
sbb
jg
sbb
insl
fcmovbe
adc
dec
lea
jg
cmp
jne
inc
cwtl
mov
mov
repz
xor
jnp
daa
mov
ja
jge
xchg
comiss
jp
and
hlt
insb
int3
cmp
pop
mov
test
jecxz
movsb
ds
jne
test
sahf
stos
test
popf
out
push
aam
sbb
sub
filds
xchg
jmp
or
cmpsb
adc
mov
mov
pop
scas
jns
outsb
or
mov
enter
mov
mov
inc
fildl
sbb
push
mov
adc
mov
xor
adc
or
es
movsl
shll
add
int
xor
fisubrs
mov
mov
repz
jg
pop
cwtl
loop
jl
and
into
stos
jb
add
push
lds
xorb
push
mov
dec
imul
mov
loopne
mov
dec
adc
cld
jle
rolb
int
in
or
nop
xchg
movsl
shll
mov
cmpsl
call
loopne
fisubs
add
ljmp
in
push
xchg
and
sub
add
pushf
xor
nop
xchg
negb
bound
call
pop
mov
mov
push
pusha
pop
mov
ficomps
cmp
outsb
lcall
fsubrl
add
imul
jmp
xor
xlat
xor
sub
ficompl
int3
add
jno
cmp
jno
test
pop
or
pop
aam
and
aas
xchg
xchg
mov
pop
in
mov
out
xchg
adc
xchg
and
jge
push
sbb
add
daa
in
mov
std
out
js
decl
add
fcomi
nop
mov
icebp
jp
fnstcw
cwtl
xor
aaa
fsubrs
div
jge
out
call
jns
jg
mov
add
sbb
aam
insb
sub
push
sub
cmp
ljmp
push
filds
js
hlt
jnp
jmp
cltd
sbb
and
notl
mov
rcrb
inc
mov
test
scas
dec
mov
es
pop
stc
mov
mov
cmc
add
jle
jns
and
jne
dec
adc
aad
das
loop
inc
push
xor
adc
idivl
fnstenv
sub
xchg
dec
lcall
mulb
data16
outsb
mov
dec
mov
popf
inc
adc
mov
xchg
fwait
mov
lcall
enter
fcoml
sti
dec
leave
movsb
popf
sbb
in
es
adc
push
subl
outsb
jl
dec
sub
ret
clc
arpl
or
dec
cltd
pop
xor
int
aad
adc
in
xchg
xchg
xchg
stos
jp
aas
outsl
jbe
mov
mov
xor
cltd
int3
or
test
std
lods
jp
loope
repnz
movsl
dec
nop
inc
push
rorl
rorb
pusha
inc
pop
test
dec
addr16
add
dec
dec
sub
push
aam
push
pop
add
movsl
cltd
arpl
jae
add
xor
iret
jecxz
and
daa
fidivl
add
push
sahf
ret
cltd
jb
jnp
fstpl
outsl
out
cmp
and
mov
call
pop
dec
repz
mov
inc
gs
inc
push
push
int
mov
jo
clc
pop
push
push
and
int3
mov
mov
pop
aaa
mov
xor
or
hlt
int3
push
flds
jmp
add
cmpb
dec
arpl
sub
sub
and
xchg
lock
mov
xor
push
sbb
gs
dec
pslld
addb
jmp
lods
inc
xor
mov
cmpsb
cmp
add
jo
jb
pop
cli
or
mov
mov
dec
pushf
add
dec
stc
cs
or
aas
fsubs
fsubp
into
dec
movsb
arpl
pop
notl
outsb
cld
lds
jae
mov
mov
sbb
cwtl
push
inc
ss
pop
stc
ror
jne
imul
fs
sbb
pop
lahf
ds
or
xchg
lock
push
sbb
divl
xchg
pop
inc
sub
repnz
mov
push
fdivr
and
or
aas
mov
pushf
pop
pop
inc
int3
in
std
pop
mov
lcall
aaa
jmp
or
mov
int3
lcall
mov
pop
push
xchg
out
imul
cmp
jne
aaa
cmp
push
aaa
cmc
jb
dec
push
mov
lcall
insl
int3
js
push
in
mov
ror
pop
das
std
or
jecxz
daa
popf
fwait
mov
push
cmpsl
mov
insl
push
int3
inc
mov
jne
popf
andl
xchg
xor
hlt
dec
les
aam
movsb
jnp
dec
test
stos
fs
push
jmp
sti
xor
add
adc
in
hlt
or
sbb
imul
stos
fs
push
jmp
sti
xor
add
adc
in
hlt
imul
aam
movsb
jnp
dec
test
je
inc
fwait
push
jmp
jmp
lret
add
adc
in
hlt
push
les
aam
movsb
imul
inc
fisubs
inc
fwait
and
and
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
lcall
ss
cwtl
adc
push
or
cmp
jp
jp
mov
lcall
fidivl
inc
cli
push
sbb
xor
dec
loop
repnz
jp
xchg
and
adc
jb
inc
cli
push
adc
xchg
dec
mov
xchg
cmpsl
sub
inc
stos
data16
cltd
movsb
fidivl
mov
lds
pop
sub
sub
rclb
push
in
loopne
fimull
pop
xor
add
sbb
dec
jns
ret
jne
data16
cmc
cld
jle
xor
cmp
pop
in
adc
cmpsb
shrl
rorl
add
bound
xchg
sbb
mov
pop
mov
fidivrl
pop
out
xor
mov
fdivl
mov
pop
mov
ret
push
bound
inc
addr16
mov
xlat
cmc
pop
xchg
mov
nopl
push
push
jp
inc
and
adc
lret
inc
jecxz
adc
and
jo
jp
out
jmp
iret
inc
into
push
mov
daa
cli
and
into
jbe
pop
in
pop
cld
dec
aas
mov
inc
pop
mov
arpl
js
add
inc
cmpsb
pop
ficompl
test
fisubrs
aam
decb
xor
out
jb
inc
jbe
data16
jb
inc
cli
push
or
cmp
push
jp
mov
lcall
fidivl
inc
cli
push
or
cmp
push
jp
mov
mov
adc
cmpsl
mov
sub
mov
daa
aam
int3
push
mov
lea
cmc
jg
xchg
repnz
cmpsl
dec
cmpl
enter
push
add
popa
ficoms
shll
test
sbb
inc
fwait
dec
fnstenv
fidivl
push
jmp
dec
popf
mov
into
sbb
and
push
lds
mov
int3
push
cltd
or
mov
dec
xchg
cmp
mov
mov
in
pop
pop
and
shlb
fnstcw
ret
addr16
stos
test
sub
cmp
pop
fcoml
sub
mov
fistpl
fnstenv
sbb
xor
ljmp
cmp
nop
bswap
inc
xor
jle
std
inc
lods
pop
frstor
lret
dec
js
adc
mov
jle
inc
or
in
test
inc
xlat
lods
jbe
test
or
cld
xchg
cmp
sbb
in
adc
sbbb
push
add
addl
mov
or
test
mov
les
movq
and
adc
test
and
daa
shll
push
cld
adc
xchg
dec
mov
sbbb
xor
sbb
unpcklps
sti
stc
ss
mov
loop
sbb
js
dec
test
dec
push
mov
sub
lret
cmp
dec
xchg
testl
fs
std
inc
ljmp
adc
les
xor
fidivrl
mov
push
cmc
mov
xor
push
mov
shr
xor
negl
loopne
push
jo
dec
sub
adc
dec
jo
pop
dec
inc
bound
inc
cmpsl
push
ret
xor
test
das
pushf
ds
inc
pushf
sbb
mov
jg
sbb
lahf
andb
jne
jne
les
add
ja
pop
fnstsw
mov
inc
roll
pop
push
sbb
andb
in
mov
xorl
jecxz
popf
jmp
ja
xchg
popa
inc
mov
adc
les
mov
test
cmp
inc
xlat
jle
mov
divl
xor
xchg
out
aaa
ret
fs
mov
mov
push
xchg
pop
xor
mov
jns
int3
cmpsl
stos
and
adc
jne
cld
mov
enter
dec
test
loopne
push
push
daa
arpl
jge
outsb
aam
les
or
inc
inc
adc
pop
sub
insb
dec
les
dec
arpl
outsb
xchg
push
jae
std
sbb
jne
insb
jno
xor
dec
mov
jns
in
stc
sub
mov
adc
ret
lds
into
dec
popf
je
sub
mov
xor
ds
inc
inc
inc
adc
int
add
mov
and
push
insb
mov
cmp
stc
mov
rorb
popf
not
dec
cmp
fistps
lods
and
push
test
pop
mov
cltd
aad
xchg
jg
nop
int3
push
fstps
mov
dec
and
or
pop
cltd
icebp
rcll
movsb
sbb
xor
mov
outsl
int3
leave
sub
push
es
xchg
push
jmp
sub
outsl
movsl
ds
and
jg
dec
and
jne
xchg
imul
xchg
aad
imul
sbb
xchg
sbb
arpl
mov
add
bnd
xor
mov
nop
jmp
loopne
xchg
or
out
add
dec
aad
mov
mov
mov
cltd
nop
cmpsl
in
imul
divl
push
faddl
mov
mov
sbb
incb
jne
xor
pop
data16
stc
aas
xorl
xor
lret
pmulhrsw
mov
fnsave
lds
subl
insb
mov
xchg
cmp
jmp
rolb
std
sbb
pop
loopne
lret
cli
xor
bound
and
sub
hlt
push
arpl
out
mov
or
and
jns
es
push
test
jle
lea
jnp
and
cli
insl
loope
cwtl
and
push
mov
pop
push
stc
dec
lock
repz
popf
or
pop
fcomi
je
addb
daa
arpl
push
push
mov
add
ret
les
and
insb
sub
hlt
adc
mov
xchg
or
repz
imul
add
test
bound
leave
jecxz
test
xor
arpl
pop
xchg
push
icebp
or
push
cs
jns
push
pop
jno
cmp
inc
pusha
jle
mov
pop
clc
in
pusha
and
ss
aad
mov
mov
fs
sbb
sbb
or
aad
mov
sbb
mov
mov
movsl
cmp
jbe
mov
mov
andl
cmp
mov
mov
lods
sbb
jmp
sti
jae
push
popf
scas
in
lods
xchg
push
adc
cmp
jno
mov
mov
shl
jl
mov
imulb
into
aam
mov
and
int
xor
push
fcmovb
bound
popa
adc
mov
subb
pop
fistpl
sbb
cli
outsb
push
fmuls
inc
pop
daa
pushf
jge
outsb
and
mov
mov
fsubrs
jl
scas
jae
adcb
pop
inc
rorb
out
addr16
xlat
fidivrs
xchg
ljmp
xchg
jmp
out
rcrb
bound
imul
adc
push
add
jae
mov
notb
das
movsl
ljmp
jno
dec
mov
lcall
pop
jle
addr16
shlb
mov
xorl
cld
xchg
filds
scas
mov
icebp
clc
mov
sbb
maxps
andl
sub
sbb
sub
lret
stos
jbe
loop
fldenv
lcall
add
dec
add
jl
addr16
xchg
push
dec
ljmp
fimull
ret
in
sub
testl
dec
andb
sarb
push
mov
push
repnz
xor
pop
pop
pusha
imul
adc
dec
loop
xchg
jbe
push
mov
out
cld
sub
adc
inc
adc
and
push
jge
dec
lods
cs
mov
push
out
movb
or
fcompl
hlt
shrl
mov
enter
mov
dec
ficomps
imul
pop
bound
repz
add
adc
xor
lcall
add
inc
inc
imul
jns
aas
add
and
dec
inc
push
dec
xchg
aaa
pop
cmp
out
pop
cmp
loop
pop
clc
mov
xchg
out
loop
mov
popa
add
scas
inc
mov
add
outsl
push
fimuls
mov
inc
repz
fs
test
test
xor
loopne
fwait
scas
cwtl
addr16
testl
push
hlt
insl
dec
sbb
fidivl
push
out
add
jno
mov
mov
icebp
jno
and
pop
push
push
mov
pushf
dec
pop
pop
mov
cmpsb
loop
popa
loopne
repnz
push
shrl
xor
loope
stos
cmp
xorl
push
sbb
icebp
xor
iret
push
mov
push
rcrb
in
sub
jle
sub
mov
cmp
mov
mov
jb
mov
dec
pop
pop
and
push
lcall
aaa
lds
loope
mov
lahf
and
or
mov
cld
mov
xchg
cmpl
cmp
sbb
and
outsb
sub
cld
fwait
dec
and
xchg
fistl
aaa
fdivrs
or
xor
out
imul
and
das
decl
jl,pt
ss
popf
test
jbe
inc
iret
insl
pop
adc
push
push
push
hlt
mov
stos
sti
sahf
dec
mov
mov
xchg
cmpsb
pop
xor
scas
ret
push
or
jb
fs
ret
pop
popf
xor
rorb
shrl
xlat
incl
cltd
adc
and
dec
das
dec
enter
mov
aad
xor
push
inc
sbb
inc
fisubrl
xchg
popf
xor
cld
push
adc
lret
fistps
mov
out
test
fwait
push
pop
lods
push
mov
adc
iret
cmpl
xchg
xchg
xchg
inc
shr
stc
add
repz
stos
andb
loopne
or
cmpsb
sub
filds
jge
push
jnp
jo
sub
mov
data16
hlt
sbb
in
call
mov
inc
add
nop
jns
mov
aad
iret
push
cmc
and
int
ficompl
jnp
das
sub
ljmp
and
cmpsl
stc
or
enter
nop
cs
cmp
out
in
ja
cmp
mov
jns
sub
insl
pop
xchg
ret
cmpl
inc
jmp
xor
rcrb
sbb
pop
pop
shll
mov
arpl
xor
jno
or
add
add
adc
in
pop
mov
jmp
xor
outsb
or
insl
fcmovb
mov
cmp
lods
ss
cmpsl
mov
test
dec
scas
and
mov
sub
push
outsb
stc
mov
mov
add
testb
mov
or
jmp
cwtl
mov
push
jl
cmp
bound
jmp
sti
adc
sub
sbb
add
adc
movsb
add
pop
mov
cltd
mov
xor
out
or
lret
aam
movsb
cmpsb
ds
testl
push
ss
leave
xor
inc
jno
rcr
or
hlt
fisubs
xchg
inc
pop
xchg
xor
das
sbb
call
in
push
and
inc
inc
jo
nop
mov
sahf
add
sub
add
adc
inc
mov
xorl
data16
imul
in
scas
clc
xchg
xor
or
and
or
inc
divl
movsl
mov
sub
mov
aas
data16
mov
daa
fisubs
xchg
inc
mulb
loopne
clc
fstpt
addb
call
sbb
mov
in
imul
and
jne
cmp
jnp
fcmove
cmp
adc
xchg
jmp
rolb
fwait
and
jmp
ficomps
fs
aad
mov
sahf
and
jecxz
mov
jecxz
mov
daa
sub
jne
dec
rorb
fcoml
mov
popf
int
adc
jb
jb
xor
je
outsl
mov
test
mov
stc
jmp
jg
rol
out
fdivs
sbb
mov
or
out
in
sti
mov
add
pop
xor
stos
pop
add
into
sub
sahf
or
push
and
fcompl
dec
lahf
cmpb
fisubrs
mov
lret
aam
pop
mov
icebp
fdivrs
xchg
daa
in
rorb
sbb
xor
add
insb
jns
cmp
int3
dec
in
outsb
imul
xor
mov
jl
pop
push
adcl
or
xor
mov
mov
inc
addb
stos
push
test
and
inc
mov
insb
daa
lods
jbe
pop
mov
test
in
push
mov
cmpsb
sahf
and
mov
mov
lret
xchg
ret
adc
mov
out
push
xchg
xchg
cmp
hlt
adc
sbb
ds
repnz
int
outsl
or
jne
loopne
mov
add
pop
xor
shll
repnz
xor
enter
adc
jb
insb
adc
movsb
sahf
jne
movsl
cmc
jnp
xchg
xchg
mov
add
sbb
fs
mov
xchg
inc
cltd
add
pop
fiaddl
mov
pushf
aad
xchg
clc
inc
ret
push
and
ficompl
jmp
xchg
and
subl
sub
pop
pop
or
mov
inc
out
push
cmp
adc
shrl
pop
cmp
pop
xor
dec
cltd
cmpsb
sub
inc
js
fistl
xor
sub
jmp
add
pushf
std
push
aas
adc
mov
xchg
lods
push
sub
pop
cmp
imulb
out
add
sbb
and
sub
and
xlat
aam
sub
mov
cmp
scas
loopne
ret
push
ret
mov
leave
in
sub
cvtdq2ps
inc
mov
add
adc
adc
aas
mov
lods
mov
and
fistpll
and
pop
stc
mov
cmp
add
mov
or
xchg
mov
add
push
test
inc
push
test
jl
push
popf
jbe
and
sub
fstpl
xchg
ret
push
rcll
ret
add
fistl
shlb
and
or
out
and
pop
pop
xor
mov
xchg
fbstp
mov
std
dec
cmpsb
cmp
mov
mov
mov
fadd
pop
pop
mov
inc
gs
inc
or
mov
xor
popf
sbb
xchg
rcrb
mov
loopne
push
nop
sub
mov
popf
push
xorb
std
push
and
aaa
addr16
mov
fcmovne
inc
ret
and
loopne
dec
push
cvttps2pi
sbb
jmp
hlt
mov
mov
pop
jp
lahf
push
dec
push
adc
mov
aad
push
mov
hlt
push
test
cmp
or
pop
inc
in
dec
mov
and
cmp
test
jl
les
adc
dec
mov
imul
mov
pop
mov
xor
pop
hlt
sub
adc
popa
repz
mov
gs
dec
in
rcrb
out
mov
xor
jge
repnz
jecxz
orl
fnstcw
bound
jne
call
pop
push
jns
insl
adc
loop
nop
addl
push
mov
inc
or
mov
xor
dec
mov
pop
push
push
dec
outsl
fwait
sar
adc
inc
and
pop
stos
loopne
jmp
xchg
pop
mov
movsb
push
cmp
andl
movsb
inc
loope
sbb
in
mov
fsubs
int3
mov
sub
mov
jge
sti
push
sbb
jge
adc
repz
cmpsb
fidivs
xchg
arpl
test
push
clc
or
cmp
adc
push
movsb
or
popa
ss
push
mov
sub
mov
jle
jb
sbb
xchg
test
loop
sti
add
cmp
outsl
push
cmpsl
sbb
icebp
insb
push
movsl
adc
lahf
or
ss
mov
test
dec
lock
ficompl
pushf
addr16
sti
jp
daa
xchg
sarl
cmp
mov
xor
stos
mov
cmp
bound
lea
insl
pop
sbb
jae
xor
in
popf
pop
push
fldt
lret
sbb
push
jb
ret
add
jecxz
or
mov
mov
inc
cmpsb
dec
jp
dec
repz
sub
pop
mov
mov
aas
ficoms
mov
xcrypt-ctr
cmpsl
fisttps
idivb
out
dec
add
or
fldt
xchg
push
sub
mov
pop
shrb
sub
sarl
xor
pop
int
cld
inc
adc
mov
pop
sahf
nop
popa
rcrb
dec
repz
shll
inc
dec
add
lods
pop
cli
mov
out
adc
mov
mov
or
mov
lret
rclb
dec
xchg
fildl
jge
mov
jle
inc
dec
push
leave
mov
sbb
vphadduwq
dec
pop
push
add
fildl
mov
adc
xchg
push
push
xor
out
jl
mov
cmp
cmp
push
outsb
sub
fdiv
jns
repz
fdivs
pop
repz
and
mov
fldt
cmp
std
and
xor
and
jmp
in
cltd
inc
inc
dec
sub
or
sbb
test
fsubrs
dec
mov
pop
testb
dec
mov
jns
push
mov
imull
mov
mov
insb
mov
dec
sti
divl
and
dec
push
jo
ds
nop
and
out
leave
inc
dec
inc
dec
dec
jp
fcmovne
xor
mov
dec
xchg
fwait
inc
andl
cmpsl
pop
inc
jnp
insb
jge
jl
sarl
or
stos
pop
push
xor
xchg
xchg
loop
out
sbb
out
xor
and
popf
outsl
pop
sub
cs
in
cmc
in
es
add
jbe
lahf
push
nop
cmp
arpl
test
sub
es
pop
xor
call
addr16
or
add
sbb
or
fstpl
std
xor
data16
movsb
sub
movsl
lods
xchg
add
ss
shlb
lret
sub
stos
nop
addl
popf
andl
adc
les
push
pusha
jle
ret
insl
sbb
push
jae
lret
and
lds
mov
stos
push
sub
xchg
pop
inc
push
decl
insb
or
xchg
in
jmp
outsb
pop
mov
std
pop
out
cmp
lahf
jne
je
fs
cmpsb
scas
dec
jle
and
add
das
repz
adcl
bound
inc
add
jge
mov
fisttps
shll
xchg
jge
xchg
mov
adc
pusha
add
xor
cwtl
int
cs
loop
xor
xchg
xor
dec
mov
mov
inc
add
mov
out
jle
inc
mov
mov
int3
std
pusha
cmp
xor
xchg
into
rclb
roll
cmc
mov
fcmovnb
sarb
and
es
push
inc
les
mov
dec
push
adc
or
pop
inc
jbe
cli
xor
mov
dec
sbb
push
fwait
test
movsl
xor
jnp
and
jne
pop
rcll
mov
dec
pop
push
clc
xchg
pop
clc
and
cmp
mov
push
lds
pop
out
in
adc
mov
stos
leave
adc
or
outsl
sysexit
mov
adcl
cmp
dec
dec
in
out
dec
xlat
jo
cmp
pop
cld
lret
les
pop
xor
mov
cmp
jno
sbb
sub
xchg
icebp
cmp
sub
out
mov
orl
dec
xchg
adc
jecxz
push
xor
and
xor
xchg
pop
cmpb
loopne
outsl
lods
cld
cmpsb
xchg
xchg
adc
lret
stos
jg
sbb
cmc
mov
mov
repnz
es
pop
rcl
xchg
adc
lods
inc
adc
jns
sbb
adc
imul
add
xor
mov
sarl
leave
out
jmp
and
dec
jae
xchg
outsb
aad
fists
inc
pop
in
xchg
rorb
lahf
xchg
out
js
push
in
stos
insb
inc
sub
xor
sub
das
lahf
loope
stos
mov
pop
xchg
test
orb
xor
scas
push
pop
mull
xor
dec
pop
push
fdivrs
pushf
jge
out
adcl
or
lods
stos
mov
outsl
jl
sub
sbb
cli
inc
and
dec
sub
mov
xchg
pop
dec
mov
ret
ja
jp
inc
out
inc
fistpl
xor
lock
jo
push
add
hlt
sarb
lcall
leave
popa
jnp
pusha
jmp
push
xor
fbstp
faddp
and
aas
sub
addr16
jnp
das
fwait
cmp
dec
int
cmp
sbb
jl
shlb
xchg
jge
sub
mov
inc
movsb
cmpl
lahf
xchg
xchg
scas
sbb
add
sti
jmp
loope
xor
cmpsb
push
push
cld
sti
incb
jbe
movsb
mov
or
jl
repz
push
das
jo
ret
mov
dec
xlat
dec
push
faddl
loope
outsl
cmp
mov
bound
pusha
sub
and
sub
aam
ss
test
idivl
and
mov
and
or
lahf
into
sub
jmp
adc
lock
out
inc
or
jb
aaa
incb
repnz
sbbl
cmc
or
lods
ljmp
adc
pop
out
sub
movsl
daa
icebp
mov
dec
jo
and
pop
pop
test
mov
and
xlat
mov
pop
mov
lret
stc
pushf
fidivl
je
stc
iret
es
ret
cwtl
lods
dec
in
xchg
test
popl
fdivrp
pop
push
sbb
cmc
jle
cmp
inc
push
lcall
cmp
fwait
sbb
lahf
xor
fidivl
inc
cli
push
or
cmp
push
jp
mov
lcall
fidivl
inc
cli
push
or
cmp
push
jp
mov
lcall
fidivl
inc
cli
push
or
cmp
push
js
mov
cwtl
xor
push
jp
cmc
pop
in
addb
or
dec
repz
sbb
sub
cmp
insl
push
jl
mov
nop
ljmp
fsubrl
or
sbb
sub
cmp
dec
sbb
cmp
ficompl
scas
lcall
adc
jp
or
inc
sub
lret
cmpsb
xchg
cli
mov
fistpll
jne,pt
pop
push
mov
mov
ret
pop
adc
ljmp
mov
pop
movsb
test
cmc
sbb
aaa
or
je
mov
fwait
mov
in
aaa
mov
repz
fwait
insl
jae
pop
sbbl
fs
lret
pop
ljmp
fmul
adc
sbb
sub
or
insb
setl
fcompl
adc
nop
inc
jne
fisubl
sub
xchg
mov
mov
fcoml
sbb
and
mov
movsb
gs
cli
in
mov
cld
test
jbe
mov
popf
lea
mov
lahf
pop
test
xchg
or
jp
or
sub
gs
test
mov
movsl
mov
lcall
imul
cmp
dec
add
adc
in
in
stc
adc
mov
cld
xchg
das
je
sbb
pop
push
cmp
aas
pop
outsb
push
or
scas
cmc
mov
call
mov
iret
cltd
das
dec
pop
jns
dec
push
dec
inc
and
pop
sub
lret
pushf
ljmp
fsubrl
or
sbb
sub
cmp
dec
sbb
cmp
ficompl
int3
lcall
or
fwait
testl
int
mov
es
mov
mov
cmc
jp
mov
sbb
icebp
out
aas
dec
xor
xchg
jb
xchg
push
adc
insb
nop
mov
pop
adc
add
add
psubd
pop
stos
sbb
mov
push
or
sub
or
sbb
xlat
pop
ds
pop
or
xchg
clc
add
in
cs
sub
cwtl
ljmpw
daa
cmp
mov
cmp
shrl
mov
push
add
xchg
repz
std
roll
xchg
push
mov
pop
popa
ljmp
pop
int3
inc
aad
imul
push
cwtl
cmp
mov
pop
push
movsl
in
shrl
xor
jecxz
or
sub
pop
xchg
xor
loope
xchg
in
dec
addr16
push
loop
loope
mov
xchg
iret
jmp
pop
in
mov
insl
ret
pop
xchg
fidivs
mov
leave
loope
push
cmp
add
mov
test
sbb
or
mov
stos
rorb
lods
nop
push
sbb
and
int3
inc
push
outsl
lods
ret
les
int3
cmp
mov
pop
inc
pxor
lods
sub
ds
stc
push
movsl
in
dec
popa
outsb
inc
nop
lods
xchg
fs
dec
mov
repnz
and
xchg
adc
aas
push
sbb
aam
cmp
in
dec
adc
aaa
repz
es
jo
ffree
insb
out
mull
inc
lock
adc
or
push
jle
push
pop
sarb
inc
imul
es
adc
mov
punpcklwd
pop
jle
sub
inc
push
fisubs
sub
es
dec
fimuls
xchg
mov
jl
std
dec
push
sti
aaa
xor
jno
push
insl
leave
dec
pop
js
repnz
hlt
xchg
cld
xchg
mov
lret
dec
add
push
imulb
or
in
pop
xchg
mov
mov
lret
sub
or
jns
and
repnz
daa
out
pusha
shr
jnp
cmp
mov
push
or
gs
mov
scas
stos
sbb
out
out
add
mov
fnstcw
scas
push
cmp
iret
jmp
xchg
mov
mov
sbb
int
pop
adc
cmp
jo
add
xlat
fisubl
jle
scas
shll
inc
call
xor
icebp
aam
hlt
scas
les
pop
rcll
push
movsl
adc
lock
xchg
sub
cmp
pop
mov
addb
insl
lock
lcall
clc
clc
rorl
les
sbb
sbb
or
xchg
jbe
idivb
adc
adc
sahf
push
addr16
enter
and
adc
mov
sti
pop
push
xlat
das
pop
cmp
mov
mov
jno
dec
jnp
xchg
les
xchg
fisttpll
aaa
inc
arpl
push
jnp
stos
xchg
sti
pop
pushl
pop
or
arpl
sub
loopne
push
iret
ss
mov
imul
stos
sub
mov
hlt
shrb
cmp
outsb
jge
mov
insl
cmp
test
push
jne
xchg
push
inc
xor
loopne
loope
clc
sti
jne
cmp
jecxz
jp
out
or
or
mov
add
popf
inc
xor
mov
mov
xchg
cmpl
add
aaa
imul
ret
add
add
push
hlt
in
xchg
jo
and
mov
and
inc
push
mov
rcrl
cltd
cmpsb
dec
push
cmp
fbstp
xlat
mov
enter
jb
fucom
inc
mov
arpl
mov
cmc
call
ja
dec
add
mov
sahf
dec
sbb
test
mov
je
pop
lock
pop
pop
hlt
imulb
mov
xchg
stos
and
inc
jno
jbe
push
xor
xor
mov
jae
movsl
sub
imul
adc
pop
sbb
cwtl
cmpsl
pop
out
and
das
test
mov
push
lahf
mov
aas
xor
test
cmc
sub
mov
movsb
mov
hlt
sbb
or
inc
loope
out
sub
ljmp
jb
push
mov
inc
xor
rcrl
in
push
cmp
in
jne
dec
ret
loop
adcl
add
xor
pop
outsl
in
jle
lahf
xor
push
imul
push
pop
inc
fstpl
data16
sbb
sarb
jl
and
out
enter
push
insl
adc
scas
repz
pop
pop
jg
inc
sub
mov
xchg
in
xchg
aam
jle
arpl
or
cmp
clc
mov
addb
xor
orl
and
jl
mov
push
cld
faddl
add
dec
cli
out
mov
cmp
movsb
lds
jge
mov
or
xor
incb
pop
push
pop
cmp
test
test
push
xchg
aad
xchg
push
sahf
rcrb
jp
push
add
push
pop
incl
cmc
outsb
pop
xchg
xchg
jbe
mov
movsl
dec
nop
or
adc
mov
and
push
inc
xor
pop
inc
ljmp
inc
fstps
inc
xchg
pusha
add
cld
in
xchg
mov
mov
sbb
or
mov
cwtl
pop
jge
pop
shl
mov
stc
cmpsb
dec
test
outsl
or
fiaddl
push
mov
insb
out
lahf
sbb
inc
ret
or
sub
jb
and
push
stc
lea
mov
xor
imul
clc
mov
into
and
push
adc
jmp
sub
adc
cltd
mov
mov
sbb
jmp
stc
cmp
add
jbe
push
add
add
dec
lcall
or
mov
sub
shll
subb
lods
push
jnp
mov
push
mov
repz
and
aad
ss
aaa
lods
shll
add
je
dec
imul
dec
pop
xor
popf
xlat
sbb
sbb
sbb
mov
roll
rcrl
popa
xor
or
sbb
cli
inc
cltd
or
jge
pop
fwait
and
inc
aas
cmp
sahf
sbb
out
pop
ss
sbb
stos
iret
pop
aas
out
nop
stos
pop
adc
sbb
jne
cmp
scas
jnp
adcb
iret
fs
cmp
daa
dec
add
in
sbb
out
pop
cmpsb
dec
push
loopne
inc
jo
es
add
or
xchg
call
nop
cmc
mov
push
jno
jle
and
mov
inc
mov
in
das
mov
pop
fwait
cmp
push
xor
mov
leave
mov
jl
or
outsl
push
lret
add
addr16
sbb
adc
insb
mov
test
mov
or
call
inc
sub
sbb
sarb
cmc
rcrb
cmp
mov
cwtl
inc
aam
cmp
jp
test
scas
aaa
std
jmp
cmp
pop
jmp
rcrl
bound
loop
pop
roll
fbld
and
shl
inc
pop
fldt
jno
fisttps
xchg
mov
filds
fidivrs
fisubl
imul
or
mov
pop
adc
adc
or
leave
addb
mov
sub
out
pop
mov
xchg
in
fwait
sbbb
adc
iret
psadbw
mov
test
data16
imul
and
sub
scas
scas
aaa
aad
sub
mov
push
test
xor
fcmove
jbe
sahf
or
add
xchg
das
xor
movsb
mov
pop
xchg
jmp
inc
pop
lods
mov
inc
or
out
das
push
std
notl
cmpsl
mov
dec
push
jb
fwait
or
xchg
sbbl
icebp
xchg
fs
into
sar
notb
add
fs
cmp
repnz
sub
xchg
mov
rolb
mov
int3
inc
add
xlat
xchg
es
add
stc
imul
in
pop
insb
je
lret
pushf
ret
pop
lret
js
pop
or
mov
test
daa
cmp
iret
outsb
cmpsl
dec
cmp
mov
int
scas
pop
ja
mov
test
xchg
adc
xlat
sub
inc
adc
pop
adc
sub
icebp
outsl
jl
shrb
pop
push
fwait
out
pop
pop
xchg
lods
adc
outsl
pop
test
mov
insb
ja
xchg
jbe
cmp
inc
mov
mov
push
cltd
call
mov
mov
in
sub
sbb
ljmp
int
jge
jp
inc
rcpps
mov
out
jno
fs
and
test
ficompl
jae
mov
jmp
sub
cmp
pop
aaa
int3
jbe
enter
pop
frstor
int3
addr16
lods
or
dec
sbb
pop
pop
nop
sbb
frstor
cmp
xchg
push
inc
adc
pop
push
rclb
dec
dec
movsb
outsb
xchg
mov
ja
fs
cmp
push
mov
movhps
inc
mov
dec
inc
xor
xchg
lea
test
mov
and
enter
xchg
xchg
repz
imul
cli
xchg
addr16
dec
cmpsb
dec
addr16
sbb
repz
pop
mov
sti
in
test
mov
adc
dec
enter
fdiv
mov
shll
push
xchg
sbb
shl
fistps
ljmp
aad
insb
dec
mov
aaa
subb
scas
mov
scas
pop
repnz
shlb
mov
incb
std
mov
fwait
pop
cmp
popa
jo
lcall
imul
xor
divb
outsl
aad
sbb
lcall
dec
out
cmp
pop
mov
shl
arpl
inc
ret
mov
sbb
rorl
sbb
test
jbe
push
dec
fptan
pop
mov
push
xchg
test
mov
stos
add
xchg
in
mov
xchg
mov
pushf
push
gs
lret
ja
push
rcrb
and
xor
xor
push
adc
adc
test
test
inc
jb
adc
xor
fcmove
xchg
push
push
sbb
mov
add
iret
xor
jns
mov
cwtl
xchg
std
sbb
or
rcrb
xor
xchg
cmpb
into
lods
mov
mov
sti
iret
cwtl
cmp
sbb
cmc
fisttps
push
imul
or
push
lret
jl
adc
sbb
inc
pop
sbb
arpl
ficompl
stos
scas
loopne
cmp
sahf
sub
xchg
push
xor
and
pop
cmp
cwtl
loopne
add
inc
lahf
xlat
insb
fcoms
fs
cltd
add
lock
repnz
mov
nop
clc
roll
out
jle
jle
in
or
dec
loop
add
cmp
mov
or
mov
fldenv
int
jnp
xchg
pop
or
mov
add
dec
movsl
lahf
outsl
add
rcrb
adc
pop
xchg
out
daa
imul
fstl
dec
sbb
mov
test
icebp
hlt
rcll
fisubl
adc
mov
rorl
pop
roll
ss
mov
xor
pop
cltd
sub
cmp
and
sub
xchg
and
sbb
xchg
jae
rorb
xor
pusha
cmp
adc
add
outsb
pop
cmp
test
xor
mov
ss
jle
jg
shrb
and
test
dec
adc
jg
xchg
adc
mov
insb
inc
popf
push
cmp
add
ss
clc
shl
adcb
dec
cmp
shl
aaa
repnz
or
jge
test
scas
or
mov
mov
sbb
cmovb
and
xchg
dec
push
push
xchg
jecxz
nop
jnp
daa
and
push
jge
inc
push
xlat
loopne
xchg
push
adc
xor
jb
icebp
push
outsb
dec
mov
nop
cmp
nop
pushf
std
push
and
cmp
push
push
cld
jp
mov
je
rcll
or
mov
inc
pop
jae
ret
xchg
pop
cld
push
dec
mov
mov
push
inc
adc
mov
push
in
mov
sbb
adc
into
pushl
xchg
stos
jmp
cmc
clc
js
push
insb
adc
cmc
out
sub
fdivrl
jnp
cmp
test
mov
lods
mov
jae
out
pop
xchg
or
xchg
out
lcall
mov
xchg
push
and
stos
add
cmpsb
imul
lret
dec
lea
xchg
inc
and
das
pop
jnp
adc
lret
fisttpll
test
insl
icebp
cmp
inc
mov
mov
leave
sub
jno
xor
dec
cmpsb
push
dec
repz
into
psrad
add
mov
sub
and
add
push
mov
mov
mull
ss
imul
jbe
lea
test
push
pop
sbb
inc
in
cli
mov
fs
sub
pop
fs
and
lahf
clc
jne
push
xchg
movsl
data16
ss
lods
iret
mov
inc
loop
push
push
decl
lods
test
loopne
andl
icebp
int
fldt
inc
cmp
mov
mov
mov
fs
mov
mov
sbb
jnp
add
cmp
stc
xchg
out
pop
fwait
daa
xchg
scas
faddl
mov
sbb
inc
mov
nop
add
or
lret
rclb
pop
push
fxch
dec
lret
outsl
aaa
sbb
out
xchg
sti
sub
and
cmpsl
jmp
xor
cmp
sahf
sub
dec
add
mov
pop
inc
les
adc
aas
mov
jmp
call
lcall
mov
or
aad
dec
daa
sbb
sbbl
movsb
fildll
adc
or
sbb
inc
mov
mov
scas
cltd
inc
jno
int
rcl
add
mov
clc
xor
sbb
gs
sti
xchg
inc
in
stos
push
cld
daa
jmp
mov
mov
cmpsb
je
std
lods
enter
jnp
es
lods
enter
and
push
cmp
push
sahf
les
xchg
dec
add
push
xchg
test
inc
mov
adc
lock
enter
imul
cs
stos
pop
sbb
cmpsl
jnp
lret
lahf
sub
xor
inc
lret
pop
shlb
mov
and
adc
ja
mov
shl
pop
fistl
ja
jge
ret
mov
xlat
dec
mov
fidivrs
mov
xorb
sbb
lcall
outsb
and
das
repz
push
push
dec
mov
idivl
dec
addr16
and
pusha
mov
icebp
shll
imul
jo
scas
add
ret
je
mov
dec
cld
pop
sbb
arpl
add
js
push
outsb
xchg
pop
dec
stos
pop
xchg
cmp
inc
dec
mov
sar
push
push
cld
clc
scas
dec
cli
adc
xchg
sub
leave
imull
sub
shlb
inc
aad
and
adc
pop
fidivrl
sub
add
jbe
mov
pop
xchg
add
lods
push
mov
push
pop
roll
dec
xchg
cmp
cmpsb
insb
dec
adc
pop
ljmp
aad
imul
mov
stc
imul
addr16
and
in
mov
pop
mov
add
and
lock
popa
xor
push
add
clc
push
or
push
push
shll
jnp
xor
cmova
stos
cld
in
fdivrs
mov
leave
push
rcrl
sub
idivl
sub
enter
mov
adc
sbbl
jnp
pop
js
scas
test
test
test
enter
fwait
mov
cs
inc
sub
test
aaa
imul
imull
fiaddl
sbb
insb
rclb
clc
outsl
xlat
mov
jecxz
test
sub
mov
adc
int3
lgs
mov
cmpsb
adc
andb
mov
data16
bound
push
cmc
popl
or
cli
dec
fs
nop
call
aam
mov
mov
outsl
push
sti
mov
xchg
aaa
jnp
inc
in
imul
mov
ret
inc
pop
pop
mov
js
xchg
addr16
jae,pt
cmc
in
daa
jmp
std
mov
insl
inc
pop
ja
out
sub
or
aad
shll
cmpsb
cmp
ss
xchg
ficoml
out
cmp
mov
xchg
out
xchg
insl
adc
jecxz
mov
dec
test
inc
mov
xor
out
hlt
jecxz
mov
idivb
cli
and
sbb
push
ds
inc
data16
xor
lock
pop
enter
dec
xchg
int3
orl
in
or
test
xor
outsl
xchg
xchg
xchg
xor
mov
cmp
loopne
jg
mov
sub
dec
aas
pop
loope
jb
sbb
aaa
cmc
pop
repz
rcl
insl
mov
pop
popf
notb
xchg
sub
in
shll
push
or
mov
xor
sub
nop
aad
fisubrs
bound
pushf
push
leave
sbb
jnp
inc
xchg
cmpsl
inc
out
lock
mov
int
cltd
jecxz
fidivl
es
popa
aas
outsl
xlat
pop
push
sub
pop
jg
prefetcht1
dec
xor
pop
lods
cwtl
and
cmpsl
clc
xlat
cmpsl
ret
add
jo
decl
sbb
push
shlb
out
lea
mov
jb
fidivs
inc
int
push
ja
out
iret
ret
inc
xorb
ret
ret
aam
dec
fdivrs
movsl
xor
mov
fwait
arpl
mov
mov
lahf
insl
sbb
sub
mov
lea
inc
mov
daa
ret
mov
jbe
jo
and
sub
xlat
xor
leave
lea
xor
lods
loopne
push
in
test
fwait
jne
and
lods
fwait
imul
dec
and
jbe
es
xchg
and
frstor
aas
sub
jo
inc
sub
sub
add
repnz
or
loope
dec
mov
jae
dec
cmp
fs
sbb
imul
mov
jne
clc
lret
je
cmp
imulb
mov
adc
lock
inc
in
rclb
mov
sub
dec
add
cltd
xor
pop
fld
fadd
fmuls
mov
mov
jbe
orl
push
arpl
sahf
inc
cmc
leave
clc
jo
xor
rcl
cmpsb
inc
mov
sahf
cltd
divl
shl
std
and
xchg
mov
pop
subl
mov
xchg
out
js
inc
cmpsb
add
xchg
imul
fs
jmp
mov
popf
sub
xchg
idivb
cmp
inc
in
dec
dec
pusha
gs
jne
mov
movsb
cli
mov
ret
fsqrt
lods
imul
adc
out
fs
jne
push
in
int
mov
pop
rcrb
leave
sbb
cs
mov
std
sub
mov
add
xor
push
aam
inc
movsl
pop
push
cmp
fbstp
nop
mov
mov
jb
shl
pop
dec
mov
mov
inc
fldenv
dec
sub
add
fidivl
loope
push
mov
jmp
cmp
push
dec
xchg
pusha
fwait
mov
and
pop
rol
inc
dec
cs
in
push
aam
push
mov
sbb
jl
lahf
cmpsl
xor
sahf
jle
cmc
das
xor
loop
fistps
mov
sub
lret
std
aad
movsl
jp
icebp
xor
cli
inc
add
add
psrlq
lock
shrl
sarl
add
jo
sub
jo
pop
popa
dec
fstps
jns
add
loope
adc
or
jae
out
adc
test
pop
dec
ret
xchg
sub
std
pop
sub
loope
out
testl
loopne
mov
shlb
cwtl
xchg
push
out
xchg
jne
insl
or
jbe
mov
jmp
and
iret
pop
pop
pusha
rdmsr
fwait
xor
pop
imul
mov
scas
jmp
mov
fcmovbe
cmpsl
and
xor
gs
int3
pop
int
pusha
xchg
dec
out
or
repz
test
sbb
ljmp
lcall
jmp
dec
mov
out
cmc
jo
mov
sub
cld
push
adc
sbb
jb
push
lea
shll
in
ss
cltd
in
lahf
cmp
ja
lock
mov
mov
mov
iret
scas
adc
dec
test
xchg
push
jle
pop
dec
std
adc
stos
out
or
or
sub
cmpsb
fs
loopne
sbbl
test
or
mov
ds
pop
out
push
pop
flds
fs
xor
sbb
mov
sbb
push
mov
add
pushf
in
push
pop
repnz
pop
push
stc
and
xor
adc
add
ret
jp
or
sub
lret
pushf
ljmp
fsubrl
or
sbb
sub
cmp
dec
sbb
cmp
ficompl
int3
lcall
or
sbb
sub
cmp
dec
sbb
mov
pushf
ljmp
fsubrl
or
sbb
sub
cmp
dec
sbb
cmp
fidivl
inc
lods
cli
lret
cli
inc
ljmp
inc
push
push
data16
jno
push
add
aam
out
div
xchg
mov
inc
inc
push
push
data16
push
add
ss
out
div
xchg
mov
inc
inc
push
push
data16
push
add
ss
xchg
adcl
mov
inc
aaa
or
pop
and
ret
int
mov
fucomp
mov
jo
inc
sbb
ja
adc
mov
xchg
ljmp
pop
sub
in
js
lock
jns
cmc
out
mov
xchg
aas
sbb
in
gs
mulb
sbb
cmp
push
jno
movsl
test
jmp
lret
pop
mov
out
xchg
push
pop
cmp
stos
jecxz
mov
fidivl
mov
subb
xor
pop
pop
mov
jp
scas
stos
pop
add
cwtl
adcb
xorl
lds
mov
mov
inc
push
push
data16
push
add
ss
out
div
xchg
mov
and
xor
sbb
imul
mov
mov
xchg
lea
out
cmpsl
hlt
xor
push
add
dec
pop
jno
push
jae
mov
mov
fwait
test
lcall
fsub
and
push
and
push
adc
mov
aad
in
cmc
xchg
mov
inc
inc
push
push
data16
push
add
ss
out
div
xchg
mov
inc
inc
aaa
sbb
xlat
or
leave
in
jbe
test
mov
jl
xor
roll
or
test
mov
add
xor
lods
cli
ja
mov
mov
mov
in
mov
insb
in
sub
nop
mov
in
add
outsl
setne
test
loop
cmp
idivb
mov
inc
inc
out
mov
push
mov
dec
int3
movsl
mov
lds
sub
add
test
push
xlat
sahf
dec
bound
inc
fnsave
and
rcrb
fsubrs
pop
or
rorl
repnz
push
mov
div
push
xor
add
push
cmp
outsl
and
xlat
jo
adc
in
ficompl
sub
push
mov
mov
into
aam
inc
in
adc
mov
inc
push
cmp
xchg
into
data16
mov
inc
or
push
push
inc
daa
inc
push
data16
sti
imul
nop
xor
add
ljmp
and
je
imul
inc
test
or
pop
push
dec
ljmp
sbb
imulb
in
jne
rclb
or
out
and
push
jns
dec
jecxz
dec
lods
inc
adc
jo
fs
cmpl
adc
mov
in
mov
sub
in
mov
into
and
mov
xor
xchg
pop
add
jl
push
scas
xor
lcall
xchg
cltd
pop
mov
je
mulb
xlat
jne
lret
mov
scas
adc
jl
xor
or
je
lret
pop
sub
mov
data16
inc
stos
loopne
add
adc
cmp
inc
fsubs
fcom
mov
ret
std
pusha
dec
icebp
jmp
xchg
pushf
adc
push
inc
push
xchg
adc
sbb
push
adc
cmp
jno
pop
hlt
cmp
jge
sub
dec
jno
xor
cmp
inc
movsb
mov
add
mov
sbb
mov
lock
sarl
js
vandnps
adc
loop
inc
les
cwtl
icebp
lcall
cmpsl
inc
lret
xchg
mov
icebp
push
insb
jle
nop
test
cwtl
mov
pop
xor
jl
jge
lret
cmp
mov
dec
push
jg
aam
jne
fisubrs
xchg
out
aam
jle
xor
mov
pop
mov
adc
dec
mov
mov
xchg
ret
adc
xchg
mov
test
push
mov
out
fadd
fs
fidivrs
fistpll
in
inc
or
sahf
stos
ss
adc
jl
mov
sbb
outsl
divb
frstor
pop
fisttpll
mov
repz
mov
adc
lret
push
ret
dec
mov
adcl
pushf
notb
mov
cmp
into
jno
cltd
lea
and
xor
jg
or
in
mov
sub
test
pushf
jp
or
fwait
loop
push
faddl
jno
outsl
xor
adc
inc
cmp
int
jnp
pop
push
xchg
inc
inc
fidivl
push
shll
or
mov
testb
das
push
leave
inc
cmc
sbb
and
mov
mov
push
xor
repz
inc
add
mov
sahf
jnp
mov
leave
xor
xor
cmp
mov
subb
outsb
mov
sub
mov
cmp
mov
add
roll
stc
jge
sahf
ficoml
fsubl
imul
arpl
jecxz
push
xchg
cmp
loopne
repnz
xorl
push
lea
fsubp
add
pop
int3
dec
sbb
das
leave
push
xchg
and
add
bound
and
dec
and
and
je
lret
lock
or
daa
fxch
mov
ljmp
subl
ljmp
xorb
shll
or
test
pop
push
movsl
ret
sbb
mov
pminsw
test
data16
pop
daa
scas
out
sbb
repnz
xchg
push
sub
push
add
dec
push
jo
cmp
push
mov
dec
ljmp
call
insb
jne
mov
std
adc
jmpw
mov
dec
push
int3
stc
pop
push
sub
mov
imul
cmp
js
dec
clc
sub
popa
ds
shll
jle
push
sarl
sub
in
test
lret
mov
dec
das
nop
cmp
lods
or
in
mov
cmp
mov
ja
sbb
aas
test
jne
lcall
popa
jo
fsubr
addr16
aaa
fstpt
outsb
popa
xor
imul
imul
mov
jl
lret
or
addb
int
mov
push
xchg
mov
scas
clc
flds
cmpsl
cmp
adc
loopne
mov
movsl
pop
loop
push
jg
mov
and
mov
test
mov
cmpsl
mov
dec
mov
in
das
jle
cmp
mov
out
out
cs
std
mov
cmpb
rolb
call
sahf
sbb
push
xor
orl
cltd
dec
les
push
icebp
dec
fsubs
jno,pn
icebp
aam
inc
cmc
test
daa
inc
inc
xchg
cmpsl
stos
popa
cmc
pop
mov
pop
in
out
sub
add
shll
sub
mov
mov
pop
vxorps
mov
or
rcrb
mov
fmull
push
shrb
mov
lea
or
mov
or
xchg
cli
mov
aaa
adc
subb
int3
xor
gs
and
loop
adc
mov
test
inc
xchg
pop
mov
push
pop
test
add
pop
rcl
sub
idivb
jmp
push
inc
popf
cltd
out
xor
rcl
stos
in
pushf
xlat
ficompl
stos
call
clc
mov
push
xor
movsl
push
push
dec
lods
dec
shl
dec
xchg
push
jne
mov
jne
lds
jb
push
repz
fsub
pop
xchg
xor
es
in
pop
cmp
inc
int
mov
clc
adc
push
or
inc
in
xor
mov
cwtl
adc
repz
lahf
adc
jb
adcb
pop
jae
sub
and
bound
and
xor
xor
add
xchg
mov
xchg
outsl
dec
dec
sub
test
xchg
rcll
ljmpw
jecxz
sti
addr16
jne
inc
push
mov
aas
sbb
xor
aaa
push
jns
jecxz
xchg
fcomps
pop
pop
lret
outsl
or
movsl
lret
imul
push
nop
mov
mov
cld
xchg
cs
pop
mov
es
mov
mov
je
ljmp
xor
push
inc
stos
std
lock
jl
idivl
xchg
inc
pushf
gs
lock
scas
push
push
iret
fistpl
out
push
stos
sub
addb
cmp
cltd
adcb
cmp
hlt
or
add
jae
test
mov
inc
jae
fsubrs
negb
cmp
push
mov
inc
push
jns
pop
mov
jecxz
outsl
aad
in
jl
das
push
scas
xlat
push
lret
mov
repz
adc
mov
or
push
out
cld
and
sub
inc
ljmp
xchg
or
pop
sahf
inc
sahf
adc
test
loopne
cld
mov
xchg
out
push
mov
fs
pop
sub
push
cmp
push
adc
xor
ss
inc
js
mov
dec
mov
cwtl
popf
mov
mov
mov
mov
bsf
add
mov
add
jmp
and
mov
nopl
pop
mov
cmp
dec
fs
sub
mov
pop
pop
insl
or
enter
push
aaa
or
inc
mov
push
lods
stc
sbb
iret
addr16
lret
stc
shrb
sbbl
aas
mov
and
fstpl
jo
in
pop
outsl
inc
jge
push
xchg
jle
jmp
les
fistpll
adc
and
xchg
push
adcl
xor
sbb
mov
mov
or
mov
jbe
lods
xchg
or
mov
mov
mov
jae
cmp
je
loop
scas
cmp
ret
adc
jmp
jb
ss
lods
out
add
les
sbb
mov
inc
jbe
fldcw
xchg
xor
jne
pop
pushl
pushw
push
push
sbb
sbb
mov
clc
pop
mov
mov
push
xor
mov
and
cmp
adc
loopne
repz
cmpsb
aaa
fists
les
push
out
mov
cmp
aad
stc
imul
inc
xchg
cmp
ljmp
in
cmp
inc
div
into
dec
pop
push
icebp
mov
mov
pop
pop
sub
rol
lds
int3
sbb
add
jbe
pop
mov
mov
aad
scas
sbb
inc
divl
and
imul
pop
out
push
push
adc
iret
lods
in
sarb
add
or
test
xor
jp
das
mov
lret
sub
ds
mov
das
enter
add
or
ljmp
scas
add
push
sub
inc
jmp
fldz
mov
in
aas
jbe
jg
stos
dec
pop
lds
xchg
adc
adc
cmp
mov
add
iret
push
inc
fcomps
xor
mov
mov
inc
inc
mov
mov
imul
sahf
xor
std
scas
mov
cwtl
insb
mov
std
and
jne
ljmp
rcl
fmuls
sub
cmpsb
mov
stc
jmp
mov
cmpsl
push
int
pop
aam
or
test
cmpsb
and
subb
or
rcll
in
dec
std
inc
test
sub
sub
and
outsb
ljmp
or
add
inc
movsl
fstl
mov
rcrb
pop
dec
push
fnstsw
popa
loope
ljmp
cmpsl
jle
popa
movsb
movl
mov
jecxz
add
popf
dec
pop
pop
xlat
cmp
je
add
adc
fptan
mov
xor
in
xor
push
stc
aaa
loop
loop
in
xchg
xor
aas
outsb
push
cmp
call
mov
addl
repz
ret
mov
xor
daa
jnp
or
insl
inc
aas
adc
sti
mov
and
mov
mov
add
lods
sbb
cmc
jae
pusha
mov
and
xchg
add
and
ljmp
fstpl
inc
cmp
movsb
sub
push
mov
push
and
dec
xor
mov
dec
push
lcall
inc
out
mov
mov
in
mov
adc
imul
insl
jb
notl
aaa
inc
push
inc
or
js
nop
inc
xor
lret
fnstsw
movsb
insl
inc
mov
mov
jb
adc
enter
in
mov
andl
clc
movsl
mov
or
nop
loopne
out
jo
sub
dec
clc
mov
xor
stc
xor
cmp
or
dec
jle
xlat
mov
pop
xor
mov
dec
fbld
inc
mov
mov
rorl
jb
int3
mov
jecxz
push
shl
xor
dec
xchg
xchg
xchg
adc
jo
outsb
popa
insl
je
adc
jno
popf
cmp
fiadds
jb
xor
xor
cmp
add
stc
sbb
and
sub
popa
push
pushf
mov
pushf
sbb
fisubrl
xchg
mov
inc
push
out
fsts
sbb
mov
jmp
or
popa
mov
pop
lods
cmp
repnz
icebp
pusha
and
cmp
cwtl
mov
xor
xchg
ret
rolb
dec
clc
add
cmp
mov
dec
test
mov
enter
rcl
in
pop
std
test
fidivrl
testl
inc
push
sub
cltd
jle
nop
sub
in
test
add
xor
faddl
jnp
test
adc
lds
mov
dec
push
addps
sbb
inc
roll
mov
ja
jmp
popf
add
test
adc
fcompl
push
call
inc
popa
mov
jg
and
stc
call
les
cld
xchg
sub
jp
jge
inc
sub
mov
cltd
lock
daa
xor
push
dec
sahf
andl
ja,pt
mov
clc
pop
adc
adc
push
and
repz
fs
in
imulb
inc
sbb
cmc
mov
add
and
push
cmp
cs
ret
mov
mov
outsl
out
mov
xchg
dec
jl
inc
dec
ret
adc
sub
insb
rol
lods
lock
int
mov
xchg
jg
fnstsw
dec
jnp
cmp
inc
xor
jmp
mov
ret
inc
cmpsb
cmc
cwtl
mov
sub
push
test
mov
testl
mov
sahf
sub
pop
dec
mov
fldl
and
or
into
cwtl
stos
insb
enter
mov
or
cmpsl
sbb
mov
push
dec
cmp
shlb
cmp
rclb
fstl
loopne
sub
and
das
repz
pop
setae
lods
iret
lea
popf
out
push
push
mov
dec
mov
xorb
pusha
lahf
sahf
pop
xlat
cmpsb
mov
jae
pop
xlat
mov
and
scas
xor
jne
xchg
mov
inc
cmp
aam
sub
xchg
repz
lock
fcompl
sbb
cmp
push
dec
movsb
repz
xchg
cmc
adc
xchg
movsl
shll
in
push
or
mov
xchg
sbb
pop
nop
sar
xor
xchg
xchg
sbb
pop
clc
inc
cwtl
jo
pushf
pop
mov
mov
fs
cmp
inc
push
sbb
mov
nop
aas
lret
popf
adc
lahf
int3
pop
faddp
and
push
push
les
ds
cld
cltd
xchg
dec
stos
pop
enter
push
scas
inc
add
scas
aaa
jnp,pt
mov
pop
cld
jo
stos
enter
nop
js
mov
jmp
pop
repz
push
jns
cmc
call
cli
sbb
ret
add
jb
mov
out
or
andl
out
dec
mov
int3
xchg
pop
mov
mov
jl
mov
jg
push
cwtl
subl
cmp
mov
pop
pop
adc
push
xchg
xchg
mov
adc
mov
je
xchg
mov
insl
leave
pusha
int
lcall
add
push
adc
popf
xchg
pop
and
sbb
inc
adc
push
lods
jl
aas
rorb
sbb
xchg
idivl
inc
cmp
jo
popf
sbb
jmp
pop
sbb
or
in
dec
inc
mov
gs
xor
mov
push
cmp
inc
jmp
cmc
add
push
ss
sub
out
push
insb
testb
or
xlat
in
mov
mov
fstps
in
arpl
daa
fldcw
movzwl
xor
dec
or
ret
popa
jnp
cmc
mov
int3
ljmp
push
outsb
jbe
push
jmp
adc
mov
data16
jne
cmp
ds
jecxz
xor
gs
ficomps
outsb
jle
dec
mov
sbb
adc
rcrl
aad
xor
int
inc
insl
mov
adc
push
mov
std
mov
mov
js
ds
push
xchg
les
mov
xor
mov
and
cmp
push
dec
clc
dec
pop
push
daa
nop
sbb
shlb
mov
mov
jo
int
sub
xor
stos
xchg
cmpb
cmp
scas
scas
shl
jle
in
aam
cmpxchg8b
iret
js
pop
lret
lret
rcll
sbb
mov
das
push
iret
xchg
xchg
cmp
sub
push
sarb
sub
fistl
aam
test
das
dec
test
leave
aaa
inc
idivb
pushf
xchg
enter
mov
lods
fwait
push
dec
out
out
add
sub
loop
dec
mov
test
repz
mov
cmp
dec
xchg
inc
dec
xor
pusha
inc
cmpsl
mov
mov
inc
orb
rorl
arpl
lret
lods
loopne
cmp
mul
jp
stos
ja
std
sbb
jns
inc
sbb
stos
push
jl
xchg
in
std
mov
adc
lret
in
rcrl
and
fsubp
xor
nop
mov
cmp
lods
xor
sbb
int
sbb
pop
loopne
jle
xlat
sbb
cmc
movsb
or
sbb
daa
add
mov
mov
sub
inc
mov
rorb
xchg
popa
scas
fisubl
and
notb
jmp
xchg
and
ret
xchg
dec
cmpl
sub
lock
insb
inc
int
divl
xor
sub
sbb
adc
pop
mov
movsl
mov
test
fwait
pop
push
adc
push
jl
sub
shrb
cmp
dec
ss
lea
data16
out
mov
xor
mov
enter
cmp
rorl
mov
and
gs
sti
add
push
rcrl
mov
jle
sub
add
imul
cltd
hlt
cmpsl
mov
xlat
cli
push
push
cmp
push
push
in
or
jae
lret
jo
push
aaa
mov
testl
in
addr16
andb
out
aas
mov
imul
sub
push
daa
enter
jg
insb
icebp
jo
mov
testb
mov
dec
sub
neg
in
adc
lods
out
xlat
add
gs
fxam
sbb
lds
je
and
inc
dec
lds
out
adc
mov
cmpsl
lock
sub
mov
loopne
jmp
loope
pop
sub
xchg
dec
and
jne
pop
add
or
idiv
xchg
in
push
sub
outsl
push
aaa
call
inc
fistpll
out
lahf
aad
loop
cwtl
jle
jns
movsl
outsl
cmp
dec
int3
fwait
lock
mov
xor
xchg
out
movsl
fdivp
je
stc
lahf
dec
inc
xchg
gs
lret
xchg
fsub
dec
ss
jle
inc
js
jbe
adc
adc
jb
inc
or
adc
adc
push
rorb
lods
jbe
push
xchg
xlat
jns
cmp
lret
test
inc
pop
in
fistpll
lds
fsubs
inc
stc
scas
jnp
loop
add
mov
mov
iret
xchg
pop
push
mov
and
xchg
add
xchg
push
cmpsb
fdivl
mov
cmp
push
mov
mov
pop
lret
rorl
fsubrl
mov
jp
insb
imul
xchg
xor
je
insb
fildll
idiv
jo
cld
push
fidivrs
cmc
jge
mov
inc
inc
mov
sub
push
xorl
test
stos
loope
fs
js
inc
push
mulb
inc
inc
lods
mov
ljmp
notl
ljmp
fcmove
fmuls
mov
fnstenv
mov
cmp
shll
push
add
push
pop
daa
push
add
cmp
add
and
ret
call
jo
cmc
xchg
les
sahf
jecxz
mov
outsl
adc
out
daa
out
dec
adc
mov
nop
call
pop
out
pop
and
test
and
dec
das
inc
xor
ret
fst
pop
jns
mov
adc
fadds
mov
or
pusha
pminub
xchg
addl
pop
ja
lock
mov
mov
mov
push
push
adc
leave
pcmpeqw
scas
xchg
dec
bound
aas
popf
fsubs
push
in
out
test
inc
fdivrl
leave
jecxz
subb
andl
mov
or
add
jge
dec
push
adc
jo
dec
les
cmp
mov
movsb
cs
mov
rcl
push
nop
pop
pop
popf
or
addb
mov
sahf
es
push
jnp
shrb
xor
sub
jg
jg
lea
and
pop
fimuls
mov
xchg
inc
loope
cld
pop
test
add
push
add
int3
mov
xor
pushf
inc
xchg
and
out
jno
clc
mov
jnp
cmc
idivb
and
sbb
fwait
mov
repz
pop
nop
push
pop
gs
push
add
ss
out
div
xchg
mov
inc
inc
push
push
data16
push
add
ss
out
div
xchg
mov
inc
inc
push
aad
in
jne
add
ss
out
div
xchg
mov
inc
inc
push
push
data16
push
add
mov
cmp
sub
in
xor
push
push
pop
dec
dec
dec
js
push
subb
int
jmp
sbb
cwtl
sub
fdivrl
push
pushf
cmp
pop
hlt
dec
call
sbb
or
cmp
sub
fsubl
jno
inc
in
push
pushf
and
pop
clc
dec
lret
sbb
mull
sbb
inc
out
xor
sbb
lock
jmp
frstor
dec
movsl
jae
cmp
and
cmpsl
icebp
mov
loop
push
lods
sbb
out
imull
pop
mov
and
fdiv
divb
aam
pop
in
add
imul
aaa
sub
push
pop
clc
sbb
sub
int3
adc
es
xchg
fsubl
mov
lea
push
jge
test
test
sub
es
and
xor
je
test
adc
sub
insb
jno
mov
rorl
jbe
imul
inc
sbb
mov
daa
loope
push
lcall
cld
inc
in
dec
pushf
cmp
pop
clc
dec
lock
insb
rcrl
or
cmp
sub
test
mov
nop
cmp
jmp
insl
xor
call
push
negl
adcl
add
cmp
mov
cmp
mov
lea
jg
insb
pushl
cld
stos
js
push
fisttpll
mov
mov
clc
dec
call
sbb
or
cmp
sub
fdivrl
push
pushf
cmp
pop
clc
dec
call
sbb
or
cmp
sub
fdivrl
jnp
fistpll
mov
pop
pop
dec
popa
adc
lahf
sbb
aad
andl
inc
sti
dec
add
gs
push
push
cmp
fsubr
fsubr
clc
push
and
or
mov
push
dec
lods
xor
je
inc
in
imul
sbb
mov
pusha
ljmp
mov
jno
ret
jg
jns
jl
and
inc
push
shlb
cmp
lods
sbb
cld
rorb
sub
and
sub
int3
fdivl
adc
stos
jno
ds
into
or
sub
pusha
push
stos
in
cwtl
and
mov
rcl
arpl
jae
and
das
xchg
sub
arpl
jecxz
outsl
popf
bound
lea
aas
jb
xchg
fwait
aad
sub
dec
cmp
shl
jp
fisubl
sahf
jmp
or
sub
jo
cli
lcall
pop
icebp
imul
cmp
call
xchg
ljmp
scas
rorb
inc
mov
adc
enter
in
movsl
lahf
not
jne
mov
insb
leave
js
cmp
sbb
ja
mov
mov
adc
xchg
dec
loopne
inc
imul
flds
jp
inc
mov
jnp
bound
pop
add
push
pop
es
cmpl
imul
jbe
stc
cltd
adc
pop
push
inc
outsl
cmp
jmp
arpl
or
js
aad
xchg
lea
adc
xlat
inc
int3
and
les
jecxz
dec
mov
sbb
dec
adc
mov
mov
adc
add
dec
cmp
out
dec
inc
hlt
or
into
data16
daa
pop
mov
mov
mov
mov
add
push
inc
test
int
cmc
adc
in
aaa
mov
push
push
icebp
sti
divb
loop
inc
xchg
or
mov
sub
fildll
lahf
lods
sub
test
mov
push
repz
xlat
stc
lcall
xchg
add
add
ljmp
and
push
ss
mov
or
inc
add
lea
dec
scas
cmp
adc
xchg
adcl
sbb
mov
jbe
lcall
inc
and
stc
xchg
adc
aam
gs
lods
les
jns
ljmp
ret
fsubrp
cmp
aam
mov
in
add
adc
and
cld
lret
add
dec
jmp
sbb
repnz
xchg
faddl
ror
cltd
mov
fwait
movsb
add
mov
bound
push
andl
jp
shrl
sub
out
bound
ja
dec
inc
fildl
mov
lods
outsl
sbb
jge
insb
and
xchg
int3
mov
and
icebp
adc
mov
stos
inc
popf
into
in
inc
mov
lods
mov
pop
ret
loop
xchg
pop
push
cmp
pop
add
inc
xor
sub
les
daa
dec
jb
jns
cld
dec
xor
popa
sbb
cmp
outsl
pop
mov
lret
sub
loop
sbb
in
mov
out
dec
aas
data16
and
mov
mov
leave
dec
aaa
push
rep
mov
jmp
and
adc
push
out
xor
xchg
jns
adc
scas
sbb
js
cltd
cmp
stc
fsubrs
popf
cs
xchg
sbb
or
dec
mov
sub
fs
xchg
lods
cvttps2pi
mov
pusha
popf
push
inc
mov
ds
scas
das
inc
stos
das
clc
or
fisttpl
push
dec
dec
mov
adc
stos
fldcw
aad
dec
jmp
jnp
loopne
mov
mov
out
pusha
lds
jge
test
xchg
xchg
inc
iret
jb
sub
pop
je
lock
nop
push
ja
pop
pop
jecxz
add
jno
inc
jmp
dec
mov
dec
sbb
push
ja
in
xor
pop
jns
add
dec
aaa
fcmovb
dec
loop
xchg
mov
mov
cmpb
cmpsl
ss
inc
fidivrl
inc
lret
jle
js
mov
out
pop
xchg
jle
insb
adc
inc
pop
rol
sub
pop
stos
in
repnz
inc
add
std
sbb
sub
xchg
movsb
dec
sub
shlb
cmp
jecxz
fldenv
lods
xor
mov
mov
sub
ds
sahf
or
cmc
fs
addr16
adc
jge
dec
adc
repnz
add
dec
xchg
stc
fwait
mov
jl
pop
stos
in
and
push
mov
mov
vpperm
lods
scas
pop
mov
in
dec
xor
sub
mov
push
and
lret
popf
mov
imul
int
xor
push
daa
call
ret
and
push
mov
icebp
pop
lds
arpl
test
sbbl
aam
stos
adc
test
fwait
jns
pop
sub
loopne
pushf
out
enter
in
and
lahf
or
pop
pusha
jnp
and
movsl
mov
dec
sub
mov
fsubs
rcll
insl
sbb
insb
shr
jne,pt
mov
loopne
jg
lea
fcmovnu
cmc
jae
jge
loopne
adc
aas
mov
dec
jecxz
push
adc
cmc
es
rorl
imul
sbb
xor
sbb
add
xchg
int3
sbb
inc
mov
stc
loope
xchg
sub
repz
fstps
arpl
push
ret
xlat
sbb
jp
andb
adc
mov
je
ss
popf
add
dec
dec
popa
xchg
jmp
and
xchg
push
xor
mov
insb
xchg
lea
int
repnz
or
incl
sbb
pop
jg
push
clc
sahf
xor
cmc
inc
push
sti
imul
mov
shlb
mov
cmpb
mov
push
loop
jmp
rcll
jge
pushf
out
fdivs
add
ss
enter
sbb
mov
clc
xor
and
mov
jl
xchg
fadds
inc
xchg
pcmpgtb
fstpl
add
lcall
arpl
shll
dec
mov
inc
cmp
jg
sub
test
jb
sub
call
add
popa
jl
and
xor
shrb
out
pand
adc
jmp
mov
dec
xchg
sub
aad
shr
movsl
jb
inc
mulb
cwtl
sub
aas
in
push
cs
outsl
les
insl
jle
pop
dec
sub
cmp
aad
dec
les
arpl
lret
or
pop
out
fcoms
mov
out
xchg
outsb
roll
insb
jnp
dec
mov
fwait
gs
or
mov
xor
or
dec
sbb
scas
jmp
movsl
es
pop
aam
scas
movsl
adc
and
or
idiv
in
jne
xchg
xchg
xchg
scas
inc
std
pop
sahf
adc
jecxz
fwait
popf
daa
test
fs
cmpsb
inc
xor
cwtl
or
jns
sti
jle
push
test
bound
xchg
inc
fcmovb
push
dec
mov
shlb
push
fwait
sub
fs
shll
xchg
or
cli
add
pop
mov
and
iret
pop
cmpsb
lret
loope
repz
jmp
pop
xchg
orl
sbb
aam
xorb
xor
sbb
mull
enter
or
outsb
stos
fisttpll
loopne
hlt
sbb
lods
dec
insl
push
movsl
and
mov
cmpsb
notl
fcompl
jg
jne
inc
les
in
or
mov
mov
jae
pop
out
mov
enter
inc
sub
mov
mov
jb
scas
insl
fiaddl
andl
and
in
cmpsl
arpl
inc
adc
ret
push
jmp
xchg
out
mov
push
mulb
data16
rcl
cmpsb
push
xchg
mov
sahf
adc
test
pop
sbb
popf
jne
sbb
and
stos
clc
mov
pop
jne
lret
adc
pop
mov
adc
xor
movsb
rdmsr
addl
mov
das
mov
test
jns
hlt
stc
testl
jnp
fistpl
lea
lods
pop
jo
into
aas
out
loop
push
or
pop
dec
into
cli
jae
movsb
ja
fsubs
movsb
test
call
push
xchg
push
xor
icebp
cmp
inc
dec
add
xchg
div
out
popf
popa
loopne
jnp
and
jnp
shl
or
clc
int
pop
xor
out
js
arpl
mov
jle
mov
mov
dec
push
add
addr16
or
cmp
xchg
cli
scas
jg
cmp
stc
push
lahf
push
and
jo
fimull
stos
add
pushf
jge
adc
inc
fs
inc
pop
jnp
sbb
cmpsl
lea
pop
fldt
cmpsb
push
scas
push
sbb
jne
mov
or
imul
mov
jb
xlat
jno
in
in
cmp
hlt
addb
ficoml
call
nop
clc
push
ficomps
testb
bound
out
adc
or
flds
outsl
imul
add
adc
or
daa
in
pop
xchg
mov
jno
pushf
movsl
pop
clc
test
xchg
leave
sbb
and
jp
pop
std
pop
mull
mov
add
fsubr
aaa
jo
fs
xor
mov
push
nop
pop
popl
stc
das
out
in
stc
push
enter
pop
insl
lret
shrl
adc
xor
roll
addr16
cli
adc
xchg
clc
lds
sub
fistpl
cmpsb
push
sbb
lret
cld
lret
xchg
fnstcw
xor
imul
jle
lods
or
rclb
loope
dec
mov
sete
xor
arpl
test
mov
cli
sub
cmpsb
in
fistl
stos
dec
jns
mov
leave
shrl
pop
sti
clc
mov
xchg
push
std
mov
add
jb
pop
dec
cld
mov
adc
xor
test
loope
in
pop
dec
jl
sbb
enter
sarb
lahf
adc
lret
jmp
ffreep
testl
ror
cwtl
jns
pop
and
pop
por
pop
push
inc
div
or
in
mov
inc
in
mov
add
inc
lret
cltd
mov
fcomps
and
adc
cmc
mov
addr16
stos
jge
enter
push
movsb
call
pop
xchg
sbb
xor
mov
and
stos
out
icebp
jne
sbb
adc
push
cmpsb
inc
mov
push
lds
cmp
jnp
cmp
jne
icebp
lods
sub
or
jb
and
sub
mov
add
jne
cmpsb
xor
dec
shlb
int
imul
or
sbb
fsubs
inc
inc
jl
dec
iret
adc
pop
xorb
daa
adc
addr16
dec
es
mov
unpckhps
lcall
negl
inc
shl
push
cs
cmp
jp
xchg
int3
daa
leave
ja
mov
popa
sbb
jb
int3
pop
push
aaa
sbb
xor
xor
movsl
sti
in
ret
inc
scas
sti
inc
out
bnd
jmp
adc
mov
mov
jp
mov
test
cmpsl
xor
pop
mov
push
add
lea
inc
loopne
movsl
ljmp
in
jg
jle
sbb
repnz
sub
arpl
xchg
pop
push
stos
sub
jb
scas
mov
pop
mov
inc
jg
fidivrs
pop
fiadds
daa
cmc
mov
int
cmpsw
cmp
ja
xor
insb
dec
sub
je
rcll
fildl
stos
js
mov
mov
lods
fs
ja
xchg
imul
movsb
mov
and
movnti
mov
test
jle
mov
sti
cmp
sbbl
inc
xchg
mov
testb
xorl
into
add
scas
mov
cltd
mov
into
cmpsb
dec
jle
inc
out
add
sbb
mov
lahf
divb
pop
mov
pop
pop
popf
aam
xor
fisttpl
aas
lods
jl
aad
repnz
mov
popl
mov
push
rorb
push
pop
push
shll
hlt
je
jns
mov
pop
push
cltd
dec
jo
jg
ljmp
mov
sbb
add
mov
jecxz
movsl
out
mov
push
icebp
jne
aad
mov
das
jno
outsb
mov
add
cmc
clc
sub
push
push
mov
cwtl
xor
imul
scas
movsl
pop
lock
mov
add
cli
test
cmpsl
jno
pop
lret
popa
mov
dec
es
jle
dec
mov
xchg
push
das
decl
scas
pop
pop
push
loope
inc
push
or
push
push
sub
dec
push
mov
ja
scas
mull
cmp
xchg
mov
push
adc
push
adc
jmp
lcall
popa
shl
repnz
pop
fcomps
mov
xchg
fdivl
mov
push
pop
lret
sub
add
ds
fnstsw
outsb
loopne
jmp
out
mov
jp
js
pop
leave
push
out
ss
sbb
mov
jo
inc
lcall
push
mov
bound
bound
xchg
ret
dec
fadds
and
arpl
xchg
sbbb
les
movsl
les
outsb
bound
xchg
jo
out
out
repnz
xchg
adc
sub
jae
mov
in
push
push
scas
xor
mov
cwtl
outsb
aam
inc
pop
aad
scas
arpl
stc
sbb
sti
inc
jne
pop
test
vpunpcklqdq
adc
adc
adc
ret
je
scas
cmp
lret
dec
mov
xchg
jp
shlb
and
add
xorb
fsub
xchg
inc
inc
aas
cmp
dec
mov
and
fimuls
jae
inc
js
mov
pop
bound
mov
mov
ficomps
sub
insb
xlat
xchg
inc
sub
add
jno
or
pop
ja
lahf
sub
fs
jecxz
jbe
leave
sbb
out
inc
js
lods
jp
fsubrs
mov
popa
inc
or
leave
fstpl
shrl
mov
mov
mov
in
loop
mov
pop
pop
ljmp
cli
sbb
cmpsb
adc
aaa
stc
mov
stos
bound
mov
ret
xchg
rol
inc
and
sbb
aaa
ret
sarl
es
imul
cmp
mov
flds
mov
loopne
inc
repnz
call
push
outsb
mov
enter
xlat
scas
add
ja
fwait
shl
aad
cmpsl
movsb
cs
insl
test
ljmp
outsl
add
das
xlat
lock
shrl
mov
in
in
push
lods
mov
lds
lcall
jbe
pop
xor
out
xor
dec
aaa
popa
mov
int3
rclb
enter
loope
push
add
enter
xchg
xchg
jnp
cmp
lahf
test
adc
stc
pop
int
test
adc
xchg
test
pop
mov
lock
test
mov
shll
inc
adc
cmp
jmp
mov
pop
mov
pop
push
gs
pushf
cltd
add
bound
bound
push
sub
test
xor
divl
imul
out
cmp
addl
or
push
out
fidivl
in
mov
jb
adc
loop
sbb
mov
push
out
add
mov
xlat
push
xchg
rcr
mov
mov
cmp
mull
add
xchg
popa
cmp
cmp
or
in
popf
test
in
es
sbb
push
cltd
int3
and
adc
lds
cmpsb
push
add
pop
xchg
mov
add
push
fdivr
loope
or
pop
xchg
lret
xchg
mov
cmc
fadd
sbb
sahf
div
dec
subl
mov
ss
pop
mov
and
cmp
cmp
ljmp
add
mov
stos
sub
outsb
loopne
out
insb
or
dec
xor
das
incb
test
mov
popf
mov
test
repnz
scas
je
lods
lcall
xor
jno
rcrl
push
mov
es
push
jmp
cmp
sub
testl
repz
sahf
loopne
mov
or
jo
cmp
pop
shll
jne
mov
fadds
sbb
push
xchg
jno
fstpt
inc
in
mov
mov
adc
pusha
dec
adcl
pusha
leave
addr16
adc
mov
loope
jne
lahf
fadds
and
adc
cld
mov
inc
aas
movb
add
xchg
dec
push
sbbb
push
cmp
lret
or
dec
pop
xchg
and
sbbb
or
mov
sub
mov
xchg
les
fs
repnz
mov
subl
xchg
popa
cli
rorb
mov
adcb
lods
mov
sub
add
jl
fs
aas
and
cmc
lret
loopne
adc
cmovge
add
fadds
test
pop
pop
insl
jb
push
negb
xchg
loopne
inc
mov
inc
mov
movsl
out
mov
mov
hlt
xchg
xchg
or
aaa
push
cmpsb
jg
fsubr
adc
daa
stc
adc
mov
inc
push
jle
stos
out
push
inc
sbb
icebp
inc
fnstsw
push
out
mov
fwait
cmp
xor
test
cld
sub
js
dec
rolb
xchg
mov
outsl
adc
and
mov
pushf
mov
mov
repnz
inc
inc
fs
outsl
inc
cmpsl
mov
cmpsb
dec
xor
mov
jnp
or
cmc
in
scas
in
les
sub
fcom
rep
add
hlt
dec
pop
ljmp
xor
cmp
push
sbb
nop
stos
setae
jl
mov
rolb
push
pop
jns
leave
xchg
test
enter
sahf
xchg
mov
mov
xchg
pop
adc
adc
or
mov
je
shr
mov
fnstenv
pcmpeqb
and
xchg
push
sahf
jmp
xor
icebp
jne
imulb
in
sbb
loope
pop
jae
imul
data16
cmp
xchg
mov
sbb
adc
lods
push
sbb
ss
jno
pop
dec
push
cmp
xor
push
cmpsb
xor
jp
in
xchg
mov
cmpb
xchg
insl
setb
repnz
cwtl
mov
pop
xchg
xchg
push
enter
xchg
mov
mov
pop
sbb
xchg
test
fcompl
repz
or
insl
inc
jmp
ficomps
or
cmp
lcall
mov
mov
and
sbb
cmp
sub
push
xchg
incl
xor
icebp
pusha
jmp
in
mov
sbb
push
popa
push
ficoml
stc
ret
cld
jecxz
or
js
clc
pusha
jnp
pop
imul
mov
push
hlt
arpl
push
xorb
push
jg
jae
dec
inc
gs
rclb
sub
or
sbb
test
test
sbb
aad
mov
in
push
sbb
push
sbb
jb
or
jns
loope
xchg
sbb
cld
mov
test
sub
mov
stos
test
js
jo
out
dec
iret
out
subb
stos
sbb
cmc
shrb
or
lock
xor
int3
and
dec
pusha
pushf
and
into
in
jb
jo
inc
mov
enter
dec
mov
outsb
stos
std
loopne
push
sbb
outsb
into
es
push
dec
push
mov
insl
jo
cmp
jno
addl
lea
mov
divl
jnp
jg
negb
and
and
or
mov
data16
mov
inc
push
fidivl
and
add
or
jle
push
rolb
mov
mov
mov
pop
xchg
jnp
movsl
dec
add
xlat
mov
sti
sahf
icebp
loope
pop
cld
push
push
stos
int3
xchg
dec
add
test
std
push
scas
add
push
fs
sbb
pop
push
dec
ffreep
lods
loop
fmuls
pop
xchg
add
sbb
adc
clc
das
mov
inc
mov
inc
in
pop
insl
mov
les
into
pop
ret
in
sub
mov
cld
mov
mov
in
fsubrl
xchg
or
add
mov
call
and
jnp
leave
xchg
xlat
sub
bound
dec
jo
mov
mov
cld
pavgb
cmp
sbb
cmpsb
jle
ljmp
and
fcmovbe
xchg
adc
mov
add
fs
test
out
cmp
jne
push
pushf
cmp
pop
clc
dec
call
sbb
or
cmp
sub
fdivrl
push
pushf
cmp
pop
clc
dec
call
sbb
or
cmp
sub
fdivrl
push
pushf
cmp
pop
clc
dec
call
sbb
or
cmp
sub
insb
std
pop
in
dec
pushf
cmp
pop
clc
dec
inc
fsubrs
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
mov
andb
pushf
lahf
mov
fstpl
sub
dec
sbb
aas
dec
das
pop
enter
iret
out
popf
lahf
in
jno
int
test
sbb
push
jge
or
mov
xchg
xchg
shll
inc
pop
adc
outsb
xor
inc
adc
cmp
scas
lods
iret
shll
fidivl
mov
push
add
mov
sbbl
repz
or
add
es
lods
call
jmp
pop
in
jo
dec
lea
xchg
or
or
rorl
push
lods
iret
mov
sarl
mov
pop
mov
nop
nop
loopne
dec
jge
call
lods
pop
popf
fs
push
ss
and
daa
insl
jg
xor
lcall
push
aas
mov
fwait
sbb
leave
dec
mov
push
jle
sub
mov
push
jl
pop
xlat
mov
mov
bound
pop
lea
xor
add
fisttps
fstps
lods
iret
dec
decl
clc
xchg
in
xchg
std
mov
stos
push
sti
addr16
pop
test
dec
xor
mov
mov
imul
jns
je
add
pop
or
cmp
call
in
mov
shll
dec
imul
sbb
cmp
das
ss
std
cli
lcall
std
mov
sub
outsl
sbb
aas
dec
das
pop
fildll
out
popf
lahf
in
std
mov
sub
outsl
sbb
aas
dec
das
pop
fildll
xchg
add
cmp
subl
insl
xor
xorb
mov
fisttpll
mov
imul
in
cmpsb
arpl
fists
test
and
mov
mov
movb
leave
mov
mov
ljmp
cld
cltd
leave
movsl
inc
sub
ret
and
sub
sub
adc
dec
pop
pop
std
gs
mov
movsl
ss
push
js
out
xchg
lds
mov
bound
ja
fs
popf
mov
xor
sbb
and
add
mov
mov
aas
xchg
mov
mov
popa
insl
ljmp
sub
cltd
mov
lea
inc
sbbl
dec
test
popa
xchg
cmp
es
adc
pop
jle
mov
cmpb
adc
adc
push
aas
loope
push
pop
int
xchg
cmpsl
pop
cmpsl
sub
pop
sub
dec
or
xor
dec
xor
in
push
pop
lret
adc
sti
mov
jmp
mov
mov
pop
movsb
test
jecxz
shll
icebp
sub
data16
in
push
scas
push
cli
mov
test
stos
fisttps
loopne
xchg
cld
or
scas
dec
mov
pop
adc
fwait
pop
mov
cmp
sub
pushf
sub
jns
cmpsb
cmp
call
inc
dec
xchg
xchg
inc
mov
jecxz
push
rcrl
out
popf
out
xchg
xchg
dec
xor
stos
pop
mov
mov
loop
pop
ljmp
clc
insl
hlt
xchg
cld
or
syscall
stos
pop
mov
pop
sbb
scas
jno
jmp
lock
cwtl
pop
jns
and
and
addl
push
aaa
stc
or
sbb
xchg
stos
jne
jns
in
sub
insl
pop
imul
repnz
mov
inc
mov
mov
lcall
pop
mov
adc
ret
jno
dec
push
ja
lods
mov
test
fidivrs
adc
jb,pn
xchg
cmc
js
xor
daa
jno
inc
cmc
push
cmpsb
xchg
popa
je
adc
xor
mov
jecxz
xchg
cld
sar
jmp
push
sbb
les
dec
popf
enter
adc
bound
into
arpl
ret
mov
adc
sahf
sti
fisubrl
cmpsl
adc
mov
cmp
sub
fmul
mov
mov
lods
inc
lock
fs
mov
dec
test
or
inc
insl
pusha
and
cmpsl
cmp
push
stc
out
sahf
mov
sbb
testb
insb
cmc
mov
flds
icebp
sub
ds
in
loop
cmp
jno
fsub
lcall
std
sub
push
cmp
sbb
sub
dec
rcrl
movsl
test
fistl
sub
dec
mov
xchg
jbe
shll
aaa
or
int3
dec
sbb
xchg
cmp
repnz
adc
and
test
repnz
add
jo
jmp
or
mov
inc
mov
sbbb
xor
adc
jae
push
out
ds
jmp
pusha
scas
adc
adc
loop
decb
neg
cmpsb
sahf
iret
icebp
mov
out
fldl
repnz
lret
adc
int
pop
pusha
bound
lods
cli
xor
int
testl
adc
test
scas
movsl
mov
loopne
mov
xchg
and
sub
arpl
mov
cli
dec
je
add
dec
xchg
xchg
dec
iret
imul
cmp
and
repz
sbb
dec
lcall
add
outsb
mov
bound
aas
icebp
inc
cmp
shrb
out
mov
mov
arpl
jg
dec
add
out
fstps
nop
cmc
jle
inc
mov
outsl
movl
pop
fwait
outsb
call
sub
jle
and
shl
dec
and
cmp
jecxz
divb
mov
mov
addr16
notb
cs
or
pop
or
lret
xor
push
dec
addl
test
pusha
rorb
xchg
xchg
fcmovnu
clc
jle
cmc
sti
pause
in
in
lret
cs
mov
fsubrs
cmp
mov
pop
sub
mov
sbb
dec
pop
and
cmp
es
push
loopne
das
adc
inc
and
ret
sbb
subb
jns
add
out
mov
mov
jl
add
pop
std
pop
insb
lds
cmp
xchg
sbb
pop
andb
push
xchg
and
pop
and
lret
in
pop
popa
push
mov
pusha
scas
mov
mov
in
xchg
test
cmp
fmuls
ja
pop
imul
popa
rcrb
xchg
andb
add
or
cltd
pop
testl
outsb
shlb
lods
adc
xchg
movsl
ret
test
adc
jb
mov
cli
cmpl
out
dec
jbe
and
push
fnstsw
and
cmp
push
cmp
loopne
out
dec
add
cwtl
jmp
or
pop
repnz
mov
push
in
sbb
icebp
cmp
stos
mov
stos
mov
add
lock
nop
loopne
jnp
mov
cld
rcrb
jge
cld
imul
dec
shll
or
notb
sub
xor
jns
divl
dec
rcr
andl
sbb
fisubrl
stos
adc
scas
mov
popf
push
mov
fwait
pop
ret
aas
int3
mov
testb
sarb
jp
mov
inc
push
ret
xchg
popa
fstpt
jbe
insb
sub
or
xchg
dec
into
fnstcw
nop
incl
mov
pop
popl
lcall
sbb
in
movl
sub
test
pop
popf
clc
xchg
cld
stc
inc
movsb
mov
loopne
and
mov
iret
pop
xchg
push
aam
xor
xchg
adc
aaa
gs
xchg
lahf
jbe
out
mov
sahf
or
or
fcmovne
push
es
jae
mov
fnstsw
ret
pminub
mov
sub
push
outsb
cmp
fstps
push
mov
and
mov
insb
xor
divl
mov
pop
int
out
gs
mov
lea
ret
dec
dec
or
push
out
gs
push
daa
loop
xchg
out
loope
xchg
roll
sub
mov
xor
adc
mov
mull
add
in
cmpsl
pop
sub
call
pop
or
out
divl
ret
loope
mov
xchg
push
lcall
jmp
mov
sbb
imul
shll
jg
sbb
fnsave
cwtl
jg
inc
mov
dec
addl
mov
mov
aaa
stos
testb
and
push
jecxz
mov
dec
jne
mov
add
mov
pop
cmp
sub
cmp
fnstcw
enter
ljmp
jo
mov
mov
or
cwtl
sbb
rcll
xchg
cmpsb
loopne
sahf
and
dec
mov
add
stos
scas
dec
hlt
out
cld
mov
aaa
ds
call
imulb
xor
pop
loop
sahf
push
jp
mov
cmp
movsb
data16
adc
mov
roll
push
in
sub
adc
subb
in
jb
out
xchg
iret
fsubrl
fs
das
sti
cmpsl
fwait
lods
mov
pop
out
scas
xor
int3
loopne
push
ljmp
jbe
insb
xor
mov
in
in
sbb
or
inc
or
shlb
int3
mov
mov
pop
insb
xor
or
aaa
cwtl
mov
clc
and
sub
mov
bound
ret
or
mov
xchg
jbe
fsubs
lea
sbb
bound
mov
sarb
mov
loope
out
fwait
fldcw
inc
iret
dec
sbb
xlat
jae
das
faddl
push
xor
faddl
sub
pusha
mov
jns
mull
adc
daa
lods
and
xchg
movsl
lods
sbb
out
add
sub
mov
insl
frstor
aas
gs
dec
aam
cwtl
call
cmpsl
arpl
add
pusha
iret
shrb
loop
mov
sbb
dec
incb
pop
push
ja
loop
les
cmp
ja
push
mov
jns
jg
mov
ret
ss
dec
jp
mov
adc
test
out
addl
mov
cmovno
pop
inc
dec
xor
daa
sarb
or
sbb
push
jmp
xor
pop
test
mov
int
jo
and
sub
cmp
inc
in
enter
or
mov
or
jmp
or
rorb
ja
push
pop
lahf
sti
fs
test
pop
sahf
test
int
xlat
mov
mov
inc
cltd
dec
push
scas
xor
les
shrb
mov
mov
xor
cmp
mov
cmp
push
xor
xor
ret
cmc
pop
ss
inc
ss
ds
dec
lret
jnp
rolb
dec
in
std
inc
cmp
out
data16
js
js
popf
inc
fcompl
push
dec
int3
or
jae
fs
aad
icebp
jl
dec
cld
out
add
or
push
cmp
sbb
xchg
or
lods
dec
jle
cmpsl
push
xchg
lods
push
push
mov
hlt
sbb
adc
into
pop
in
jo
inc
dec
lret
dec
cmp
jo
sub
js
mov
dec
inc
xchg
jle
imul
sub
mov
mov
sub
mov
cli
xlat
dec
mov
in
mov
pop
sbb
loopne
cmp
je
filds
lock
xlat
push
inc
lea
lea
pop
pop
inc
mov
xor
test
sub
xchg
xchg
test
call
je
in
dec
out
aaa
into
cmp
jb
sbb
mov
clc
xlat
xchg
cs
mov
cmp
aas
cli
sti
aad
fiaddl
mulb
cmp
push
xchg
lea
xlat
push
inc
dec
xchg
or
sub
dec
fiaddl
out
xchg
icebp
xchg
xchg
adc
and
out
lock
enter
push
pop
rcr
sbb
roll
mov
sahf
in
div
out
xor
rorl
sbb
cli
add
xor
out
cmp
mov
sbb
pop
cli
cmp
out
mov
jp
roll
cmp
pop
mov
mov
subl
js
daa
jecxz
gs
es
mov
jae
cmpsl
sbb
cmp
mov
pop
testl
stos
dec
pavgw
jg
ja
mov
and
ret
scas
aaa
inc
dec
in
sahf
clflush
in
or
popf
pop
sbb
std
sar
mov
sbb
sub
mov
mov
lods
mov
inc
lea
xchg
and
shrl
stc
and
les
pop
mov
xchg
push
sub
dec
jmp
mov
rclb
pop
mov
mov
outsl
push
lcall
into
cmpsb
mov
lods
cmp
inc
aad
test
movsb
mov
xor
jmp
js
mov
mov
cltd
inc
mov
mov
mov
out
jae
outsb
cwtl
fbld
xlat
iret
pop
or
add
mov
stos
and
xchg
shrl
lock
data16
dec
loope
mov
mov
push
stos
pop
fimull
xchg
hlt
into
cli
xor
cmp
jo
push
sbb
pop
mov
ljmp
cltd
mov
mov
stos
sti
jo
dec
test
sbb
mov
in
jns
scas
insb
into
jno
ret
sub
sahf
icebp
je
enter
clc
into
jnp
sbb
repnz
jl
int3
mov
jp
mov
cs
mov
daa
outsb
inc
out
inc
les
sbb
ficoml
adc
push
dec
xchg
ljmp
mov
dec
ret
cmp
push
mov
adc
xchg
bswap
pop
ret
jg
and
fndisi(8087
lcall
lods
dec
out
sub
divl
inc
sub
scas
gs
jno
push
repz
pop
sbb
cmp
jmp
cmp
jl
mov
xchg
cmp
push
shll
ret
lret
xchg
pop
mov
pop
mov
and
mov
inc
mov
sub
or
fiadds
add
test
mov
outsb
mov
jge
fdivs
mov
mov
mov
adc
and
ret
or
ret
jo
pop
and
xor
jns
sbbl
sub
mov
sub
sub
mov
cwtl
outsl
dec
mov
mov
xchg
lods
or
test
outsl
loopne
jl
mov
ljmp
cli
lock
pop
push
cmc
and
push
xlat
enter
mov
jle
rcrb
pop
in
lret
dec
cmp
inc
and
pusha
push
jge
add
sbb
xor
int
test
repnz
pop
xchg
xor
cltd
add
fwait
int
mov
or
fdivr
outsb
pusha
xor
fstps
movsl
scas
pop
mov
adc
mov
jmp
movsl
iret
pop
test
adc
xchg
gs
add
mov
rcrb
repnz
clc
in
cmp
adc
cmp
psraw
push
dec
stos
ret
mov
sbb
nop
pop
sub
sub
les
xchg
jecxz
int
adc
rorb
sbb
ljmp
mov
ffreep
mov
nop
inc
test
push
xor
test
cmp
imul
xchg
mov
cld
mov
pop
add
imul
out
mov
cmc
inc
test
popf
cmpl
dec
xchg
ret
xor
xor
lea
test
nop
outsb
mov
sti
bound
ret
enter
loope
xchg
out
push
mov
pusha
xchg
sbb
cli
scas
outsb
arpl
daa
mov
sbb
insl
xor
dec
test
cli
adc
jle
sar
mov
push
shlb
xor
fs
mov
jg
sbb
pop
repnz
adc
enter
inc
and
sub
hlt
jo
addr16
out
mov
push
fcom
mov
sti
mov
in
pop
and
pop
adc
and
pusha
test
adc
cli
repz
jno
push
sbb
mov
add
sti
xchg
xchg
jno
xchg
pop
jmp
add
sbb
mov
dec
cld
mov
and
loop
inc
or
ffree
nop
xorb
pop
mov
inc
pop
adc
ret
cwtl
xlat
xor
cmc
jmp
mov
lcall
lahf
xchg
cld
xor
or
mul
sti
in
mov
enter
nop
fcoms
rcr
pop
aam
xchg
lea
sbb
inc
mov
int
les
imul
pop
jp
insl
push
arpl
inc
bound
xchg
jo
or
or
ss
add
leave
jecxz
rorb
jno
scas
xor
sub
or
mov
pop
in
pop
jb
push
mov
jo
out
nop
repz
das
or
imul
call
lret
jge
mov
inc
mov
faddp
dec
shr
pop
sbbb
jae
xchg
add
das
dec
fnsave
xor
in
cmp
shll
cli
jge
push
push
es
xor
sub
xchg
mov
adc
or
cmp
mov
insb
gs
dec
or
movsl
das
and
lds
jmp
adc
jl
clc
or
add
imul
or
inc
scas
aam
int
inc
je
faddp
in
cmp
push
call
sbb
std
in
insl
adc
aam
out
jmp
sub
lcall
push
push
and
sbb
mov
mov
cmp
dec
dec
xchg
mov
pop
insb
andb
hlt
or
mov
in
sbb
out
test
adc
add
stc
fisubrl
call
mov
adc
mov
fistpll
out
in
loopne
add
arpl
out
jg
fucom
mov
call
xchg
cmpsl
pop
lods
mov
enter
mov
mov
cmpsb
es
ret
decb
mov
call
mov
jo
mov
imul
cmovg
ds
and
add
int3
jno
call
popa
adcb
jne
mov
add
das
adc
in
scas
xchg
xchg
not
push
lret
fstl
es
cld
adc
push
push
das
dec
dec
in
push
push
jmp
mov
incl
test
cmp
sub
xchg
lret
or
xor
add
insl
adc
pop
call
cmp
nop
xchg
cmpsl
xorl
adc
lods
cmp
add
divb
imul
xor
mov
lods
pop
sub
sti
sub
adc
lret
push
roll
mov
aaa
lea
mov
mov
mov
push
xchg
pop
adc
inc
dec
push
ljmp
push
rcrb
int
add
xor
mov
mov
lcall
pop
sbb
xchg
mov
pop
imul
out
adc
shll
jmp
xor
loopne
sbb
in
jae
fcomp
push
mov
mov
add
gs
xchg
ss
jge
xchg
std
imul
or
test
ss
es
inc
cwtl
sub
clc
mov
fidivrl
mov
sbb
push
ror
adc
push
lock
xchg
es
int3
subl
add
gs
fidivrs
cwtl
dec
pop
pop
fmull
out
loop
jnp
sbb
std
bound
adc
mov
adc
fldenv
mov
popf
inc
dec
xchg
mov
fwait
into
enter
ror
bnd
xor
dec
lods
push
xlat
inc
outsl
mov
push
pop
inc
cmpsb
and
lea
shl
pop
sbb
aaa
dec
repz
dec
imul
in
jnp
cmpl
fsubp
popa
adc
ja
pop
push
aaa
mov
dec
aas
mov
pop
sub
mov
jbe
mov
adc
xor
inc
nop
loopne
test
fimuls
xchg
enter
subl
and
dec
sbb
xchg
add
fstps
push
sbbb
aam
leave
inc
fcmovnu
push
dec
aad
jg
sub
fstpl
push
add
push
jmp
adc
or
xor
mov
sub
stc
fwait
push
sbb
xor
jae
movsl
lahf
sub
fbld
mov
loop
cmpsb
adc
lret
xor
xor
lods
movsl
add
adc
cmp
sbb
lods
mov
mov
xchg
jl
xor
inc
mov
sub
repz
decl
lret
dec
adc
jae
jo
lods
loope
outsb
mov
fiaddl
mov
fbld
mov
mov
jbe
and
jae
cmp
outsb
inc
lcall
dec
pop
cmp
divl
das
sbb
xor
mov
xor
lahf
jae
jno
pop
xor
popa
insl
mov
cmp
insl
xor
dec
mov
mov
movsl
mov
mov
repnz
adc
into
push
je
adc
pop
ljmp
fs
mov
lahf
cmp
std
sub
xchg
fidivrs
xor
aad
sbb
iret
add
shl
adc
enter
sbb
es
pop
inc
ds
jg
pop
cmp
sbb
sbb
idivl
shlb
hlt
lret
jb
push
cwtl
jnp
xor
shll
xchg
roll
add
jecxz
icebp
nop
popa
aaa
push
xchg
dec
push
mov
sbb
xor
test
xchg
xchg
sti
lret
je
or
sbb
mov
insb
mov
mov
pop
adc
mov
jae
mov
call
lock
test
adc
addb
popa
shrb
lret
xor
nop
jne
xor
jecxz
in
xchg
push
gs
and
repnz
out
dec
test
xor
push
scas
rorb
mov
insb
and
push
fcmovb
rolb
dec
pop
pop
mov
and
in
mov
and
or
or
jb
shl
data16
and
das
mov
and
xchg
shll
fmul
and
aam
pop
pop
add
ja
push
add
or
sarl
mov
fcomi
pop
or
in
ljmp
loop
xor
add
push
cli
out
dec
push
clc
pop
pop
mov
pop
mov
js
mov
pop
and
add
adc
out
popf
lahf
in
std
mov
sub
outsl
sbb
aas
dec
das
pop
fildll
out
popf
lahf
in
std
mov
sub
outsl
sbb
aas
dec
das
pop
fildll
out
popf
lahf
in
push
mov
cmc
dec
cmp
pop
insl
or
insl
push
pop
jmp
sti
mov
lahf
in
std
aas
dec
das
frstor
or
xchg
or
jmp
pop
invd
js
push
sub
sub
icebp
flds
mov
dec
imul
add
adc
and
xor
xchg
jmp
icebp
flds
mov
mov
adc
pop
jno
add
sub
jmp
nop
stos
mov
sti
ret
sub
push
cmp
es
shlb
rolb
out
mov
pop
jno
mov
jbe
rorb
push
mov
push
cmp
mov
divb
add
add
add
and
cmp
adc
inc
and
icebp
test
push
stc
or
call
jle
sbb
push
pop
out
pop
add
sub
dec
and
add
xor
ss
fmuls
xchg
xor
jbe
in
mov
mov
sbb
in
lret
push
sub
sub
xchg
lods
icebp
fcmovb
adc
xchg
push
xchg
jmpw
jns
sbb
mov
icebp
mov
rcll
jb
push
pop
popa
cmp
push
cmp
or
push
cmp
out
in
xchg
push
mov
imul
xor
xor
mov
insb
nop
mov
aad
div
inc
das
fnstcw
cmp
imul
sub
mov
jmp
aam
lock
xor
and
xor
shr
stc
loope
icebp
flds
mov
jns
dec
jno
add
adc
and
xor
shr
stc
loope
icebp
flds
mov
das
leave
xor
mov
dec
jle
inc
mov
pusha
add
cs
adc
roll
in
pushf
mov
sbbl
mov
fnstsw
sub
mov
and
push
iret
sar
push
pop
imul
popa
loop
dec
lods
into
in
pop
inc
pop
daa
mov
arpl
repz
insl
dec
mov
mov
or
adc
jae
js
jl
and
xchg
mov
and
test
stc
int
dec
cmp
loopne
mov
jmp
push
jp
adc
clc
rorl
insl
dec
adc
ja
jg
dec
lods
mov
xlat
ret
mov
cmpsl
cld
sub
mov
cmp
cwtl
and
jmp
cli
mov
push
outsl
and
mov
popf
in
dec
sub
sbb
stc
nop
testl
cmp
and
add
adc
push
adc
mov
xor
addb
pop
sbb
sahf
das
inc
in
xor
push
leave
je
inc
test
mov
jmp
loop
mov
pop
jo
lods
aas
jbe
or
xor
mov
push
adc
test
add
imul
mov
adc
push
mov
out
xlat
xchg
mov
add
gs
push
ret
loope
cwtl
ss
clc
jbe
into
push
scas
push
in
jmp
add
fmuls
enter
push
pop
dec
shlb
sbb
fildl
imul
imul
mov
jmp
insl
ds
adc
push
pusha
mov
repz
sarb
push
pop
mov
testb
sub
mov
push
dec
pop
int
dec
fbld
adc
cmpsb
insl
dec
popf
mov
subb
lock
push
push
mov
dec
jns
lret
pop
push
xchg
mov
dec
mov
pop
adc
inc
popf
pop
lahf
pop
xor
subl
ret
mov
mov
sub
dec
add
mov
stc
pop
mov
insl
push
sbb
addr16
ffree
sbb
test
pop
lea
mov
call
jg
sub
sarl
xor
mov
and
aad
insb
pop
mov
psubsw
or
je
mov
movb
dec
fninit
fisubs
imul
inc
mov
mov
popa
inc
push
jg
pop
popa
xchg
push
aad
std
lds
sti
cmp
int3
or
movsb
loopne
mov
aam
addr16
add
jb
out
sti
iret
rcrb
mov
leave
sbb
mov
mov
fisttpll
bound
and
popf
or
mov
jnp
sbb
clc
push
fists
int3
xor
xlat
jmp
sub
imul
test
lcall
pop
aas
lea
xchg
jbe
mov
pop
imul
push
popa
shrb
data16
notl
xor
imul
std
pushf
call
fldt
xchg
ret
gs
insb
mov
lods
aam
jp
in
fdivp
stc
pop
lret
test
xor
cmp
mov
lods
xchg
and
outsb
push
push
sarl
cmp
jb
push
mov
push
mov
scas
sub
negl
push
stc
ds
test
jb
cwtl
mov
das
mov
mov
mov
aad
mov
jns
ljmp
push
and
dec
adc
add
movsl
es
sbb
fstpt
cmc
stos
lea
cmp
xor
outsl
adc
insl
add
lds
jb
xchg
sub
stos
in
xchg
cmp
ret
mov
stos
movsb
outsl
mov
das
or
mov
sbb
adc
jnp
scas
or
fnstsw
mov
fists
ljmp
loop
je
movsl
inc
out
and
mov
shlb
fdivs
mov
repz
lcall
scas
leave
scas
sbb
xchg
mov
aad
movsb
outsb
fnstsw
pop
xchg
int3
add
inc
aad
ret
rorb
add
cli
sti
xor
mov
mov
sub
pop
popf
je
cmp
pusha
dec
mov
fdivrs
sti
aad
mov
pop
nop
lea
cwtl
xchg
loopne
add
mov
lods
imul
jnp
rclb
gs
fstl
jnp
cltd
stos
pop
xor
cwtl
push
dec
and
fs
cli
aaa
sbb
pop
xor
aad
mov
fldcw
dec
or
out
ljmp
shll
cmp
push
je
in
sarl
fisubl
xor
pop
jae
or
jecxz
xchg
sub
and
hlt
cmp
mov
xchg
add
xchg
sahf
fistpl
cmp
jecxz
js
cmp
mov
repnz
roll
push
arpl
cmpsl
cmpsb
xchg
sub
push
mov
out
dec
rcrb
xchg
cmpsb
cmp
inc
adc
cmp
rorl
lea
sub
ss
andl
push
or
out
pop
push
stos
pusha
push
mov
int3
mov
push
fcomi
jmp
out
leave
or
call
pop
push
pop
ret
xchg
xchg
cmp
dec
lock
pop
adcl
sub
fdivs
jno
ljmp
sub
fmulp
movsl
hlt
jno
ja
push
mov
inc
cmc
fmuls
daa
test
loope
jle
lahf
iret
call
sub
xor
pusha
and
scas
test
jo
sub
adc
xor
push
xchg
divl
sbb
iret
add
inc
ret
xor
stc
sbb
jnp
shll
clc
mov
xor
movsl
shlb
adc
and
fnsave
dec
leave
or
fwait
dec
pop
out
mov
cmp
sbb
mov
nop
into
pushf
cltd
rorb
pushf
ja
fsubr
jl
jle
mull
leave
bound
mov
push
xor
xor
or
ficomps
mov
and
and
ret
push
jnp
into
xchg
mov
ja
add
outsb
xor
lcall
cmc
sbb
les
cmp
aad
add
mov
pushf
pop
movsl
inc
mov
std
jle
push
scas
jns
incb
sbb
mov
push
mov
mov
fsts
dec
pop
jge
decb
or
mov
dec
xor
and
push
sbb
aad
out
push
and
insb
pop
mov
enter
xor
iret
mov
decb
xchg
jp
vpmacssdql
lahf
xorl
or
mov
dec
ja
in
and
jbe
insb
test
data16
mov
or
fnstsw
testl
aaa
cmp
inc
mov
lds
dec
and
jmp
inc
lret
inc
dec
or
xor
cwtl
mov
std
inc
cli
dec
cmp
adc
or
cmpsl
scas
repz
add
les
cltd
push
jle
and
mov
stc
mulb
xchg
out
repz
aam
repz
and
cmp
push
mov
subb
xor
repnz
insb
hlt
dec
push
lods
pop
daa
adc
fbstp
ret
gs
lods
add
cwtl
popl
dec
xchg
cmp
lcall
dec
fnstsw
lret
je
sub
out
inc
xor
lret
cltd
push
mov
sbb
mov
ss
inc
jb
test
sbb
or
mov
nopl
mov
lods
repnz
mov
orl
roll
insl
mov
scas
push
add
pop
push
cmpl
leave
xor
ss
lret
jp
inc
call
ret
mov
fsubl
jmp
aaa
scas
shrl
imul
fistpl
cmpsb
pop
adc
das
xor
dec
lea
lea
xchg
arpl
and
cmpsl
mov
mull
push
out
das
sub
ret
outsl
mov
cld
xor
arpl
or
push
xchg
pop
jg
test
jg
and
mov
decl
mov
mov
push
fs
leave
push
cmp
xor
mov
arpl
pop
xor
add
adc
push
fcmovnb
leave
sarl
push
adc
inc
xorl
mov
jne
icebp
ss
flds
stos
inc
dec
mulb
outsl
je
mov
incb
popf
sub
mov
add
ja
lret
ljmp
arpl
loopne
pop
cli
or
jge,pt
push
scas
push
fwait
shlb
nop
or
xchg
push
cwtl
dec
fldt
xor
std
fists
data16
or
dec
or
jae
outsb
mov
push
pop
pushf
push
mov
outsb
sub
sbb
xorl
push
mov
pushw
fs
sbb
dec
or
adc
mov
std
adc
add
into
scas
sub
ljmp
add
sbb
add
xchg
insb
sbb
and
fcoms
adc
cmp
jae
xor
test
jge
mov
adc
mov
in
hlt
xchg
orl
push
pop
xchg
mov
lcall
mov
loope
cmp
pop
movsb
mov
adc
xor
mov
mov
jns
sub
mov
pop
cld
push
cmc
xor
call
dec
or
and
icebp
lcall
push
loope
addr16
pop
hlt
add
roll
xor
cmp
push
rcr
icebp
mov
jmp
int
fimuls
push
movsb
jp
and
inc
pop
mov
pop
frstor
cli
and
push
clc
push
cmp
or
ljmp
in
push
inc
out
loop
bnd
mov
mov
out
aad
jle
std
or
cmp
xor
stos
add
adc
sub
int
mov
stc
es
fstpl
aam
sbb
rcr
jns
lret
sub
cmp
repnz
pop
pushf
sub
dec
movsl
mov
xchg
lret
cmp
aam
pop
add
rorl
in
int3
adc
inc
or
outsb
mov
mov
adcl
es
lods
and
lea
and
sbb
push
test
sub
push
push
mov
sbb
jecxz
mov
rorl
inc
daa
push
jge,pn
lcall
cld
pop
dec
jae
dec
jae
out
leave
sub
ret
sub
ficomps
nop
in
and
push
jg
lcall
int3
int3
aad
or
or
bound
insb
cli
pop
out
clc
movsl
repz
jge
pop
cmp
lds
pop
pusha
inc
jg
ficoml
mov
or
scas
push
pop
mov
cs
pop
xor
push
xlat
lods
gs
cld
ja
cld
test
lock
jb
js
adc
xchg
add
fcmovbe
stos
add
xlat
fdiv
fsts
pop
repnz
fistps
pushf
popf
leave
iret
cli
insl
xor
mov
js
in
pushl
movsb
cmp
push
hlt
js
sub
jle
in
in
dec
cmpsb
adc
dec
dec
pop
jg
jle
std
jae
inc
pop
or
ljmp
test
out
sbb
ds
ljmp
loopne
pushf
mov
sbb
in
adc
nop
add
dec
sub
sub
sbb
push
clc
cmpsb
mov
inc
adc
inc
adc
fisubrs
cltd
leave
inc
push
ja
int
test
dec
fmull
jmp
pop
add
ret
aam
in
lret
pushf
sub
adc
testl
xor
leave
mov
mov
xchg
dec
mov
pop
xchg
sub
mov
outsb
scas
push
sbb
enter
xchg
cmpsb
ljmp
sub
imulb
cmc
jge
xlat
lods
mov
scas
sub
mov
mov
aaa
push
adc
in
imul
cmc
sbb
push
or
addr16
movsl
ss
mov
call
mov
adc
fs
mov
dec
aaa
or
cmp
aas
ds
loope
lods
mov
jne
jnp
pop
mov
jmp
movb
movsb
xchg
fisubs
push
mov
and
aaa
add
cwtl
cmpsb
inc
fbld
adcb
lock
inc
stos
das
aad
pop
adc
sbb
subb
ret
sbb
pop
or
xchg
mov
fwait
out
repnz
mov
bound
xchg
push
xor
sbb
fwait
data16
inc
mov
xor
jb
adc
inc
xor
ret
mov
xor
xchg
adc
xchg
loopne
pop
testl
and
mov
test
or
and
aas
add
dec
pop
ds
or
or
aas
insb
or
add
push
sbbb
pop
aad
les
pop
sub
dec
sub
mov
dec
pop
fidivs
push
pop
jnp
jbe
outsl
mov
push
jbe
and
xchg
xchg
sub
insb
xor
cmp
mov
mov
clc
outsb
pop
mov
mov
jae
insb
cld
mov
lock
xchg
ret
mov
aas
pop
dec
mov
sbbl
adc
je
pop
jg
push
push
daa
push
cs
cmp
push
inc
scas
inc
inc
jecxz
les
adc
xchg
mov
jae
pop
adc
mov
cmp
dec
mov
push
sub
das
je
cltd
int3
add
jb
mov
ljmp
inc
pop
and
inc
cmp
push
push
push
mov
adc
daa
mov
nop
shrl
imul
dec
es
and
jl
std
pop
idivb
add
pop
cli
repz
mov
pushf
push
popa
scas
xchg
data16
pop
lds
aam
and
dec
daa
scas
mov
bnd
push
lret
push
push
sbb
dec
jns
jl
incb
je
jg
hlt
xchg
aam
xchg
mov
jmp
or
push
gs
jge
pop
push
shl
jmp
lods
push
sbb
div
popa
in
fsubrs
cwtl
das
pop
fmull
jo
aad
push
jl
pop
dec
adc
lcall
mov
mov
jno
push
sbb
mov
sbb
addr16
or
mov
das
call
mov
rcrl
fs
arpl
ret
push
cwtl
mov
jbe
mov
les
xchg
jg
aad
je
int
pop
jecxz
nop
mov
scas
stos
lahf
pop
fsubr
or
pop
push
fistps
jge
xlat
xchg
test
and
inc
sub
mov
mov
add
xchg
dec
mov
shl
jmp
push
mov
out
jp
mov
cmc
gs
mov
adc
repnz
test
jae
rolb
add
arpl
pop
int3
pop
divb
pop
or
sub
dec
xchg
inc
jp
push
mov
mov
dec
in
out
mov
jbe
xlat
cmp
test
cwtl
ds
sub
ret
imul
pop
inc
push
xchg
roll
cs
sbb
mov
subb
push
mov
push
lahf
stos
lock
fnstsw
sbb
cmp
arpl
jo
insl
xor
int
test
fisubl
ss
icebp
jo
lods
stos
movsl
std
ljmp
and
cltd
ja
loope
lds
push
shl
div
movsb
int3
mov
push
add
cmpsl
loop
orl
iret
scas
cwtl
cmp
mov
mov
jp
in
nop
movsl
fwait
push
jno
xchg
in
and
enter
sbb
adc
pop
int3
lods
out
add
pop
jle
cwtl
mov
or
loop
inc
and
orb
jmp
mov
sahf
pop
pop
or
inc
pop
jp
push
int3
sub
or
arpl
lcall
and
fnstenv
movsb
and
fwait
cmc
vandnps
or
shr
pop
popf
xchg
dec
insl
dec
push
add
icebp
pop
mov
add
clc
add
loop
pop
push
inc
mov
mov
icebp
aam
shrl
mov
daa
fiaddl
cmp
and
out
in
add
shrb
fwait
mov
inc
jl
mov
cmp
call
adc
cmp
push
cmp
cmp
xor
add
loop
addr16
lods
jmp
and
xchg
jmp
ljmp
fs
add
jl
push
sbb
pop
clc
mov
dec
pop
arpl
adc
ret
pushf
roll
sub
mov
mov
mov
pop
movsb
xchg
fs
add
or
and
icebp
mov
test
or
lahf
mov
lds
in
loop
cs
loopne
mov
pmulhuw
lret
pop
cmpsl
cld
popf
std
adc
xor
out
dec
inc
cmp
mov
cmp
mov
out
xchg
enter
xor
aam
sahf
lcall
mov
sti
sbb
stos
push
test
xchg
pop
add
add
pop
dec
repnz
lods
mov
fldenv
add
roll
and
adc
sub
mov
push
xchg
movb
fmul
cmpsb
ret
and
jecxz
sahf
pop
adcb
adc
fidivrl
gs
es
push
lret
add
cld
stc
lret
aaa
add
jbe
insb
lret
stc
inc
in
xor
push
push
sub
xchg
test
stc
sbb
mov
enter
hlt
or
insl
movsl
mov
pop
sub
xchg
mov
loop
shr
jns
mov
lahf
in
pusha
insb
daa
xlat
lock
jo
sub
push
jle
rorl
fidivrs
jns
jmp
mov
mov
lret
scas
sub
popf
mov
call
jns
jmp
leave
adcb
imul
cmp
dec
das
js
dec
and
xchg
js
icebp
insl
adc
orb
mov
rol
mov
jo
cmp
loop
in
xor
push
iret
xor
pop
fdivr
dec
add
popa
pop
mov
movsb
jne
fwait
xchg
fsubrl
lahf
leave
dec
mov
and
sti
stc
jmp
imul
jge
jb
popa
ds
daa
adc
test
push
add
dec
divb
lods
cmpsb
in
pop
hlt
cmp
sbb
add
negl
fwait
rcrl
xor
std
dec
lods
shlb
mov
add
stos
movsl
sub
sbb
add
cmc
leave
push
repnz
jo
aaa
lea
lret
lock
pop
cmc
aas
rorb
shrb
and
test
sbb
jl
push
stc
and
pop
pushf
sbb
fisubs
shrb
fnsetpm(287
jecxz
lods
xchg
xchg
add
adc
mov
or
cmc
and
in
pop
outsl
xchg
push
and
mov
cld
inc
pop
and
xchg
loope
xor
and
lcall
mov
jno
xchg
test
insl
cmp
sub
mov
mov
xchg
mov
jo
jno
adc
cld
xchg
iret
lea
xchg
fnstenv
pop
dec
and
outsb
xchg
mov
xor
jnp
gs
ljmp
imul
inc
mov
mov
scas
add
mov
inc
ficoml
lcall
pop
dec
dec
sub
mov
in
in
fidivrl
jmp
repnz
sbb
lods
in
fsubrl
cmp
mov
idiv
push
add
sbb
mov
das
pop
aas
adc
fiaddl
inc
outsb
sahf
or
mov
mov
inc
arpl
xchg
insl
push
or
shlb
push
add
sbb
jb
mov
jle
sbb
and
and
mov
push
int
sub
sahf
ret
arpl
out
jnp
xchg
cmpsb
lds
xchg
pop
inc
mov
jle
xor
push
mov
test
xchg
arpl
lcall
out
push
inc
mov
outsb
fcomps
adc
push
jp
or
jle
fcmovu
out
fsubrl
adc
popf
jl
les
pop
mov
outsb
scas
add
stc
cmpsl
aam
jo
adc
test
jns
daa
mov
je
sub
stos
sub
mov
out
test
test
mov
out
inc
xlat
mov
add
mov
mov
adc
sbb
push
adc
pushf
dec
or
xor
mov
cmp
lds
jecxz
les
xchg
in
adcb
leave
and
rclb
xchg
fwait
xor
jmp
inc
push
insb
lods
adc
push
fs
push
pop
scas
mov
int3
nop
fcoml
or
int
pop
test
andb
sbb
and
add
sub
frstor
imul
int
jle
aam
bound
outsl
xchg
leave
cli
inc
xchg
pop
add
adc
and
xor
shr
stc
loope
icebp
flds
mov
jns
dec
jno
add
adc
and
xor
shr
stc
loope
icebp
flds
mov
ja
push
jno
add
adc
sbb
call
cmc
rolb
addb
jmp
sub
cmp
mov
push
dec
leave
icebp
scas
not
sbb
pop
icebp
dec
loope
push
das
popl
popa
jno
out
mov
pop
push
add
add
add
add
add
bound
and
mov
push
add
add
js
push
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
cmp
clc
add
roll
add
outsb
add
add
or
sahf
add
test
movsb
add
xor
movsb
add
fadds
lea
xor
push
add
add
push
add
add
add
test
pop
add
add
addb
add
add
add
and
imul
inc
add
add
add
add
add
add
lea
add
and
dec
add
xchg
add
and
insb
add
add
add
dec
add
add
add
add
add
add
add
fldl
xor
dec
add
add
add
icebp
add
out
add
add
jae
insb
add
add
add
add
add
add
add
add
add
add
xor
or
imul
mov
mov
and
push
add
add
add
movsb
add
or
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
pop
add
test
data16
add
add
add
add
add
inc
add
add
add
add
add
stc
add
add
add
add
add
add
push
add
add
xor
inc
add
test
inc
add
xchg
add
add
add
add
lods
add
add
add
or
and
pop
add
add
add
add
add
add
add
add
flds
arpl
aas
add
add
add
add
add
adc
mov
mov
jmp
cmpsb
add
add
add
add
xchg
add
xchg
add
imul
add
add
xchg
popa
add
jge
and
inc
add
fildl
push
add
add
add
add
add
nop
add
add
add
add
flds
sub
jae
inc
add
pop
add
add
add
add
add
and
jae
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
adc
mov
xchg
add
add
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
adc
insb
add
add
add
add
or
xor
mov
jl
sbb
aas
add
sahf
add
dec
add
add
add
add
add
add
add
add
add
add
inc
add
loopne
sub
lea
inc
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
fldl
inc
add
js
roll
rolb
add
add
add
add
adc
xor
sub
outsl
cwtl
or
inc
inc
cwtl
jae
push
scas
arpl
enter
ljmp
cmc
sbb
cwtl
cmp
iret
ja
mov
lods
xor
fwait
xor
pusha
dec
cmp
jle
push
inc
adc
pushf
adc
lahf
repnz
movsl
dec
dec
je
scas
inc
lods
cmp
sbb
mov
leave
pop
stos
les
cli
imul
daa
cmp
mov
outsl
fiaddl
pop
and
mov
dec
lods
mov
test
addr16
mov
inc
adc
pushf
cmp
test
leave
mov
into
push
adc
into
add
sub
imul
cld
inc
loop
out
push
adc
or
xchg
mov
leave
cmp
les
mov
sub
inc
daa
test
into
or
mov
sub
ds
int
sub
lret
xchg
dec
xchg
xor
push
sub
jne
inc
daa
fadds
mov
jge
repz
or
adc
jae
sti
xor
cmpsb
roll
clc
push
dec
push
gs
mov
add
sub
sbbb
add
or
jmp
jnp
inc
ljmp
mov
jg
ljmp
cmp
scas
and
mov
scas
push
push
and
push
out
add
dec
shrb
and
mov
leave
mov
sbb
mov
mov
imull
mov
cmp
std
jp
adc
pop
daa
aam
ret
jne
sub
cmp
in
push
xchg
cli
jle
dec
pop
cmp
clc
inc
cmp
sub
popa
sti
xchg
mov
or
pop
mov
mov
sub
mov
push
push
ret
mov
das
xor
cwtl
enter
aad
stos
push
cltd
sbb
imul
ja
pop
js
add
scas
insb
or
adc
adc
inc
mov
dec
pop
popl
sub
arpl
nop
cld
and
push
int
mov
dec
jl
cs
lods
clc
popa
cmpsl
or
rolb
push
js
out
xchg
jl
icebp
icebp
xlat
jb
loope
xchg
fmull
es
jge
adc
insb
inc
into
ds
xchg
mov
leave
imul
sub
ljmp
sarl
fadds
adc
adc
xor
jae
lock
xorb
mov
sub
cmp
xchg
mov
out
xlat
jbe
mov
inc
insl
lcall
mov
in
push
sbb
dec
mov
enter
lods
cmpsb
rol
pop
xchg
fstpt
into
shr
fcom
jnp
cltd
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
