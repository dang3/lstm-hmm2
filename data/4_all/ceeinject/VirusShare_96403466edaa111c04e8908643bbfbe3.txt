mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
stos
mov
iret
pop
repz
int3
mov
xor
outsl
or
dec
imul
das
pop
pop
pop
bts
mov
iret
jmp
sti
scas
lret
lahf
fcomi
cmp
outsl
or
dec
imul
dec
pop
pop
jmp
iret
repnz
fisttpl
push
sub
adc
pop
jno
jl
mov
cmpsb
mov
sti
stos
or
add
pushf
rcrb
xchg
inc
aaa
arpl
aas
xchg
xchg
push
sub
dec
sarl
test
dec
in
cmp
imul
pop
movsb
pop
push
incl
js
sub
sbb
jl
xchg
pop
imul
das
dec
lcall
inc
idivl
scas
xor
fidivl
cmpb
ds
scas
xchg
aas
jnp
rclb
mov
adc
jecxz
xchg
sub
or
jnp
mov
dec
icebp
inc
jp
int3
iret
fs
adc
stc
cmp
aam
mov
jbe
dec
pop
cs
sub
pop
sbb
mov
iret
cld
mov
ret
jg
outsl
adc
dec
jae
arpl
push
pop
pop
data16
sti
fisubrs
cwtl
ficompl
fldt
push
push
outsb
js
jg
imul
ss
les
jmp
xchg
sti
jecxz
testb
or
sub
adc
cmp
mov
rep
mov
lahf
fisttpl
or
dec
imul
das
dec
pop
pop
bts
mov
iret
jmp
sti
scas
lret
lahf
fisttpl
or
dec
imul
das
dec
pop
pop
bts
xchg
xchg
call
inc
leave
adc
int
xchg
jnp
out
push
sub
movsl
xor
jmp
adc
lock
loopne
and
ljmp
pop
mov
sbb
das
pusha
xchg
push
sbb
add
in
shr
lds
xchg
into
inc
lea
or
xor
rcrl
or
jp
dec
xchg
adc
pop
mov
das
jg
bound
adc
cltd
icebp
insl
pop
scas
sbb
repnz
sbb
scas
in
or
pop
stos
lret
clc
movhps
cmpsb
mov
loop
pop
add
out
mov
or
repz
mov
repnz
je
in
fbld
mov
arpl
xchg
add
loop
xlat
or
out
xlat
adcl
sahf
sub
ljmp
in
dec
or
loope
jle
xorl
cmc
inc
or
inc
or
cs
push
hlt
test
lea
clc
out
daa
push
mov
mov
and
loop
test
mov
sbbb
xchg
pusha
lcall
test
dec
pop
cs
push
mov
inc
mov
lods
mov
loope
and
push
gs
arpl
mov
add
mulb
lret
ret
jne
xor
repz
xor
shr
jae
pop
lods
push
mov
mov
dec
xor
mov
add
or
ds
rorb
xchg
test
push
pusha
out
jl
rorl
movsl
dec
adc
addr16
loopne
sbb
rol
lea
roll
add
sub
dec
in
and
insl
push
rcrb
test
sbb
hlt
xchg
add
lcall
sarb
push
pop
mov
or
dec
std
pop
outsb
loopne
xor
and
adc
pop
xor
js
jecxz
add
push
dec
mov
xor
adc
imul
cmc
mov
adc
fcoml
flds
pop
push
xchg
mov
mov
sub
push
push
ds
ret
jns
mov
aad
sub
jge
mov
std
lods
imul
outsl
shll
in
fadd
dec
fstpl
lcall
cmp
repnz
leave
je
push
xchg
xchg
or
fldl
jl
cmc
fwait
xor
mov
jae
pop
cmp
and
dec
aam
sub
shl
lock
int3
divb
scas
out
pop
jo
ljmp
add
mov
mov
test
add
dec
add
scas
loop
sub
xor
out
lret
sub
popl
stc
enter
lret
add
je
cli
mov
jecxz
sbb
xchg
push
inc
pop
xor
lcall
add
mov
popa
pop
imul
stos
aam
sub
stc
jle
pop
ss
gs
sub
fucom
loopne
jns
or
pmaxsw
pop
cs
pop
mov
pop
dec
popf
test
enter
push
push
test
jmp
mov
and
daa
dec
xor
pop
sbb
aam
data16
in
call
push
test
popa
jno
insb
out
leave
pop
pop
dec
dec
sub
cmp
ret
mov
dec
mov
xchg
mov
cli
fadds
aas
xor
jmp
pushf
add
dec
jnp
cltd
cmpsb
jmp
mov
pop
add
scas
add
mov
mov
xor
js
cs
jge
lea
pop
daa
jecxz
pop
test
push
out
cmp
outsl
mov
sub
cmc
adc
andl
pop
pop
pop
in
jae
mov
lods
mov
mov
xchg
lahf
adc
and
jg
cli
pop
repz
nop
mov
mov
ret
lahf
xchg
movsb
dec
sbb
xchg
fwait
push
push
std
pop
ja
push
repz
stc
and
sbb
and
sub
divb
in
xor
addr16
fwait
loopne
cmp
out
mov
mov
mov
movsb
sub
incb
inc
adc
bound
cld
lods
fidivs
cltd
or
mov
push
ljmp
dec
or
inc
xchg
aaa
fsubs
sar
dec
xlat
int3
xor
push
arpl
sbb
insl
loop
clc
push
lret
or
into
xor
imul
out
pop
xchg
mov
lcall
loop
pop
into
movsb
add
loope
cmpsl
mov
pop
test
xor
imul
cltd
mov
add
mov
ds
xchg
push
nop
sub
bound
pop
fldt
sbb
and
int
add
adc
sbb
pop
jb
das
xor
adc
jecxz
xchg
xchg
das
dec
cli
jmp
mov
iret
dec
xchg
push
ss
mov
xchg
pushf
xorl
sub
divl
xchg
roll
mov
setbe
mov
scas
cmp
and
insl
mov
mov
ja
mov
das
mov
mov
and
xor
aam
divl
not
shl
adc
push
fnstsw
jge
lret
adc
pop
out
mov
mov
test
jb
sub
ret
or
xchg
pop
add
push
aam
jbe
in
clc
int
cmp
dec
out
push
xor
cmp
pop
mov
mov
cmovg
gs
enter
dec
jle
mov
out
and
loopne
test
hlt
mul
sub
sahf
xchg
pop
arpl
test
cmp
mov
push
xchg
mov
mov
push
sub
xor
jne
lcall
jecxz
cmpb
jl
sbb
cmp
and
call
xchg
add
dec
add
mov
xchg
sub
std
rorl
lahf
dec
xor
push
shll
xor
dec
mov
and
pop
leave
cmc
push
test
aad
xlat
mov
shll
cmp
cmpsb
cli
out
push
fsubrs
jl
aas
sbb
and
xor
and
pushf
outsl
add
movsb
xorb
cmp
add
sub
sbb
bound
rorb
inc
inc
push
pusha
lcall
ss
dec
add
jp
or
outsl
jns
jae
add
xchg
xchg
test
xlat
fwait
int
loop
push
das
jns
push
cmc
imul
movsb
or
push
nop
mov
fcoms
fcomi
out
outsl
pop
lds
mov
popa
lods
cmp
and
les
mov
and
aam
test
addr16
push
repz
loop
mov
lcall
loopnew
xor
sbb
pop
out
pop
fisubrl
jbe
pusha
jg
mov
xchg
cwtl
cmpsl
mov
dec
mov
mov
test
dec
out
jnp
mov
rolb
scas
adc
outsb
pop
lods
aam
xor
cmpsl
xchg
add
sbb
dec
lods
popa
ret
mov
inc
enter
mov
add
loopne
clc
sub
xor
mov
push
int
imul
test
cmc
jae
cmpsb
roll
sub
cmp
add
lds
cmp
sub
into
ja
test
aad
or
lea
les
pop
push
jg
and
test
cmp
scas
ljmp
sbb
and
loopne
cli
inc
aam
cmp
ror
mov
mov
sbb
xchg
repz
push
aam
mov
jl
pop
sub
in
fisubrs
stos
or
xor
icebp
sbb
cwtl
mov
hlt
mov
jbe
push
dec
popf
mov
addr16
loope
ljmp
int
pop
out
jecxz
cmpsb
sbb
das
aam
mov
lods
adc
inc
or
aad
jmp
or
data16
xchg
fisttpll
out
jbe
or
aam
ds
dec
imul
pop
cli
inc
lds
pop
movsl
sarl
xchg
out
cmpsb
outsb
shlb
notl
mov
pop
je
xor
ja
in
lcall
inc
mov
pusha
inc
or
jno
adc
sbb
ljmp
movsl
mov
jnp
mov
in
sub
jmp
ret
data16
iret
movsb
sbb
mov
fistpl
lock
xchg
cmc
outsl
aam
pop
in
incl
dec
int
dec
je
cwtl
inc
les
sbb
scas
add
lock
fwait
test
arpl
xor
out
movsl
jmp
jecxz
xchg
insl
test
pop
push
sub
sbb
rclb
cmpsl
xchg
insl
dec
in
sub
xor
pusha
mov
out
and
stos
cmc
shlb
stos
xor
lods
out
xchg
data16
dec
dec
imul
and
or
push
adc
rcll
lods
pop
fidivrl
pop
sbb
xchg
std
xor
and
xlat
rcrl
push
das
inc
xor
mov
sbb
jecxz
outsb
or
fnstenv
xor
mov
sbb
mov
loop
hlt
inc
cmp
jae
fdivrl
xor
mov
push
ficoml
cs
das
outsb
roll
and
mov
aad
aad
inc
pop
cmpsb
dec
sbb
aas
sub
xchg
frstor
stos
addr16
mov
mov
xchg
jl
mov
mov
pop
xor
sbb
shlb
mov
cmpsb
std
inc
mov
add
cmpsl
sbb
dec
int3
inc
mov
cmp
or
cmp
adc
fildl
mov
daa
mov
cmp
sbb
insb
jb
lock
xlat
sti
push
pop
cmpb
xlat
mov
orb
testl
lret
out
add
int
dec
nop
sub
scas
xor
je
cmp
lds
mov
mov
in
xor
movsb
mov
pushl
and
push
jae
xchg
ja
add
add
ret
mov
je
sub
cltd
inc
push
out
call
pop
ficompl
add
adc
fyl2x
push
pop
jl
aas
push
leave
insb
pop
pop
adc
hlt
test
outsl
adc
mov
das
sti
repz
mov
mov
icebp
jbe
adc
lahf
cltd
xchg
std
jns
or
adc
stc
or
aam
imul
mov
test
mov
aaa
inc
inc
xor
xor
xlat
push
mov
lret
dec
fnsave
mov
repz
aas
jb
mov
jl
mov
sub
outsl
add
stos
mov
dec
in
mov
mov
jb
mov
lret
fists
or
and
and
fldcw
cmp
dec
loopne
loop
mov
ja
aad
xchg
cmp
and
dec
inc
mov
mov
push
int3
jb
sub
dec
cwtl
xlat
stos
sub
pop
dec
aas
cmp
les
or
fs
test
dec
sbb
sarb
jns
cltd
stos
sbb
stos
ja
cwtl
mov
adc
cmp
mov
push
das
sbb
gs
test
pop
stos
jne
hlt
out
push
jae
and
dec
mov
sbb
push
test
inc
mov
sub
pop
mov
cmpsb
stos
shrl
jno
xchg
add
push
andb
subl
je
lret
outsl
test
cli
mov
lret
mov
bound
inc
push
outsl
clc
xor
xor
add
adc
xor
xchg
cli
fdiv
mov
jl
cmp
out
inc
rolb
push
loopne
fcom
mov
jno
lock
lret
mov
insb
ljmp
mov
mov
pop
ret
and
jmp
pop
out
insb
mov
mov
jge
xor
push
cltd
jae
cmpsb
xor
scas
xor
negb
jne
sahf
mov
or
or
add
add
pop
lret
xor
mov
mov
shl
add
cmpb
lods
mov
fistpll
sub
sbb
mov
mov
push
xor
cmp
int3
inc
or
add
xlat
lahf
lret
pop
cs
jae
adc
cmpsb
inc
pop
sbb
push
fnstenv
mov
push
xchg
xchg
cs
sub
icebp
scas
inc
sub
lahf
pop
sbb
ljmp
dec
ja
and
mov
fucom
pop
xor
incl
lahf
out
rclb
sti
adc
sub
inc
inc
movl
adc
xorl
sub
test
test
mov
cmp
dec
cmc
add
push
sub
in
inc
mov
dec
inc
mov
bound
xor
fistl
lcall
or
and
inc
jmp
xchg
out
das
mov
ret
cmpsb
push
arpl
sub
push
xor
shlb
aaa
add
inc
out
mov
js
dec
xchg
inc
hlt
mov
xchg
scas
push
and
leave
ljmp
imul
push
mov
xchg
pop
cmpsb
pop
js
push
dec
and
mov
jle
lods
int
jecxz
enter
int
inc
pop
lahf
aad
insl
inc
inc
inc
fst
and
pop
es
xor
fadds
xchg
push
jo
stos
dec
cmp
dec
jecxz
sbb
test
xchg
les
mov
push
addr16
mov
fldenv
mov
sub
dec
pop
stos
jo
loop
addr16
mov
ret
inc
imul
loop
pop
pop
add
test
jp
xchg
sub
xchg
pop
inc
ret
dec
faddl
jbe
and
mov
cmp
xchg
or
pop
jbe
mov
inc
jecxz
inc
mov
test
cmc
ljmp
popf
aaa
cli
mov
stc
shl
arpl
aam
mov
xchg
hlt
mov
adc
xor
jnp
and
pop
push
data16
lds
mov
xchg
cs
mov
shlb
jne
jmp
arpl
inc
xor
push
cmp
mov
inc
pushf
movl
mov
pop
stos
jnp
sbb
cs
aam
nop
scas
aam
lea
or
xor
push
out
jo
fisttps
fimuls
mov
push
or
xchg
stc
lds
aad
sbb
pop
sub
mov
dec
das
movsb
dec
cmp
jae
subl
jp
cmp
ja
icebp
jge
cwtl
sti
jnp
rcrl
test
mov
cmp
xor
sub
mov
xchg
loop
in
push
mov
pop
or
out
mov
lcall
daa
xchg
dec
lods
in
imul
and
aam
stc
insb
test
dec
adc
xchg
call
stc
lods
jmp
movsl
cmp
std
inc
cmp
mov
jbe
pop
jo
mov
add
imul
sbbb
push
rorl
rclb
add
xchg
fmull
lods
lret
nop
pop
ss
test
dec
lret
outsl
ds
scas
loopne
ds
inc
add
mov
inc
and
lahf
aam
jmp
mov
and
movsb
push
lret
lret
mov
mov
jecxz
dec
dec
ret
push
cmc
pop
push
mov
dec
cmpb
dec
xchg
outsb
adc
out
daa
and
mov
stc
xor
mov
enter
ljmp
das
or
dec
lods
mov
jmp
mov
mov
adc
mov
pop
aad
push
cld
push
lods
stos
dec
clc
push
lods
jns
int3
jbe
add
jg
out
out
repz
fcmovnb
cmp
sahf
or
or
mov
mov
aad
sbb
std
push
rclb
adc
sbb
cli
fldt
repz
ret
cwtl
int
pushf
xor
idivb
fildll
or
sbb
inc
cmp
and
fimuls
stc
std
repnz
into
and
adc
push
jb
cmpsb
mov
sar
dec
inc
shll
rorl
hlt
rclb
xor
arpl
add
cmp
in
mov
xchg
and
pushf
xchg
push
mov
arpl
shll
inc
lods
pop
mov
jmp
mov
dec
in
test
fsts
loop
push
jns
add
sub
psrld
or
cmp
fdivrs
lahf
repz
jno
insb
js
aad
push
cmpsb
orb
pop
cli
fildl
repnz
cmc
mov
icebp
fisubrs
mov
lret
pop
xlat
push
dec
scas
sbb
aas
push
xchg
fs
imul
gs
shl
xchg
sbb
js
lahf
aas
mov
jmp
xor
inc
test
cli
shlb
addr16
daa
loopne
push
xchg
daa
jo
sub
cmp
es
leave
and
aad
adc
and
sub
popa
or
cs
dec
lds
stos
ficomps
cld
ret
jmp
rclb
fnstcw
cwtl
fildll
out
jne
pushf
enter
xor
mov
in
lcall
adc
xchg
test
dec
or
xchg
int
out
push
std
xchg
push
mov
cmpsb
adc
repz
popa
or
push
inc
pop
cmp
cmp
popa
test
sahf
push
push
ss
test
jb
loop
lea
mov
pop
xchg
out
sarb
mov
lods
sub
lea
outsl
inc
xlat
mov
jb
shrb
sbb
fisttpll
movsb
inc
data16
nop
cmpsb
dec
les
mov
cli
fucomi
mov
jp
inc
ss
dec
cmp
push
push
inc
fildl
pop
adc
jnp
cmc
rorb
cli
pop
xor
repnz
sbb
enter
pop
sub
shll
in
aaa
dec
sahf
cltd
pop
xor
add
fistl
pop
pop
aaa
jg
sub
cmp
test
stc
loope
cmp
stos
mov
push
cmpsb
nop
aas
das
mov
xchg
xchg
ficoms
into
xor
int3
fsubrs
jnp
in
mov
loopne
daa
cld
repz
lcall
jne
mov
lods
inc
xor
dec
mov
pop
icebp
hlt
fldl2t
cmp
vdivsd
repz
lcall
xchg
xchg
adc
mov
inc
jb
jbe
clc
xor
sbb
orb
adc
mov
jge
push
or
movsb
mov
inc
cmpsl
lods
mov
outsl
mov
test
xor
mov
pmaxsw
lods
cmp
das
jge
mov
jne
or
fistpl
adc
xlat
test
ja
xorl
mov
popf
subl
loope
pop
ds
push
lcall
sti
imul
cmc
jno
enter
icebp
or
gs
xchg
pop
scas
fcoml
fisttps
pop
fwait
cmpsl
or
jno
xlat
int3
xchg
mov
push
nop
mov
xchg
arpl
xor
xchg
int
call
popa
jg
sbb
test
loopew
sbb
mov
loope
cmp
enter
adc
xor
stos
adc
sbb
jbe
dec
inc
push
fwait
inc
icebp
add
insb
jb
das
pushf
lahf
and
bound
das
mov
lret
mov
fwait
lds
insl
push
rcr
ret
adc
adc
push
pop
data16
insb
sti
inc
dec
mov
dec
mov
imul
adc
or
fsubl
adc
or
sbb
scas
cmpsl
std
addr16
or
movl
mov
push
xor
lods
dec
sahf
push
xor
ret
popa
pusha
neg
ljmp
sub
mov
rolb
jmp
sub
and
push
push
jl
mov
inc
cmp
xchg
jnp
rcll
fbstp
outsb
and
add
pop
into
fdivrp
int3
fwait
cmp
into
adcl
dec
add
incl
or
loope
adc
rcr
test
pusha
pop
pushf
adc
and
cltd
lret
lods
scas
lcall
cltd
mov
mov
ret
jae
mov
xchg
xor
cmp
xchg
repnz
sbb
fnstsw
lock
mov
call
xor
aam
es
bound
inc
dec
jp
or
lods
std
mov
inc
xor
fcoml
sbb
xchg
push
cmpsl
or
xor
filds
lods
fimuls
ret
frstor
mov
cmp
fistpl
lods
pop
test
stc
sub
pop
stos
push
add
inc
xor
loopne
insb
and
push
sbb
sarl
movsl
lcall
ds
adc
add
add
or
cs
fisttpll
scas
jno
dec
pop
outsb
icebp
shrl
jo
test
cltd
sbb
mov
lods
scas
leave
out
insl
mov
mov
sub
stc
cwtl
cmpb
xor
movsb
xchg
loope
jnp
mov
into
jp
aaa
in
cltd
in
in
adc
pop
loope
add
dec
add
and
sub
sarb
mov
pop
sbb
aaa
or
and
lret
dec
jne
cltd
mov
or
jmp
jmp
repz
sbb
sti
scas
lret
lahf
fisttpl
or
dec
imul
das
dec
pop
pop
bts
mov
iret
jmp
sti
scas
lret
lahf
fisttpl
or
dec
imul
das
dec
pop
pop
bts
mov
iret
jmp
sti
scas
lret
lahf
fisttpl
or
dec
imul
das
dec
pop
pop
bts
mov
iret
jmp
lahf
pop
aam
lds
mov
shlb
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
mov
cs
addb
xor
add
adc
push
jno
inc
jo
andb
xchg
shl
jg
ret
lock
add
adc
inc
add
adc
push
jae
add
xorb
mov
sub
iret
loopne
lock
add
adc
pop
push
pusha
and
sbb
pop
push
lock
loopne
dec
aam
js
ffreep
or
shll
lahf
aaa
push
sti
or
aad
icebp
das
shl
punpckhdq
out
arpl
mov
mov
inc
mov
add
cltd
sarl
imul
add
iret
sahf
incb
jae
xorl
adcb
fwait
add
lock
arpl
ss
mov
stos
jp
jge
outsl
pop
repz
mov
lret
lock
and
xor
adc
cmp
push
lods
js
nop
push
sub
sbb
xorl
jmp
pop
push
cld
mov
mov
jno
fbld
mov
shl
repz
lock
add
xor
dec
push
mov
jo
hlt
icebp
aam
int3
sar
adcl
mov
mov
jp
or
pop
or
out
repnz
clc
mov
mov
push
inc
jge
pop
push
je
xor
aas
xor
outsl
cmp
cmc
mov
lock
adc
and
xor
inc
arpl
pusha
inc
jo
andb
xchg
shl
repz
lock
and
xor
add
adc
push
jae
inc
jo
andb
mov
xchg
popf
add
pop
jecxz
pop
mov
add
arpl
aam
pop
scas
mov
pop
jmp
test
fs
xchg
add
xchg
test
out
push
pop
jge
out
mov
in
add
pop
sbb
pop
xor
fmuls
jle
mov
outsl
cmp
repz
dec
cmp
call
fs
lock
push
inc
sbb
xchg
dec
and
jnp
test
mov
push
add
xorb
xchg
insl
out
repz
xchg
pop
pushf
lret
popa
adc
mov
adc
push
cltd
inc
sbb
out
ljmp
xor
out
push
call
mov
push
inc
sbb
jmp
icebp
push
scas
rclb
pop
mov
cs
inc
lret
popa
ficomps
xor
mov
bound
sti
sarb
xor
cmp
insb
loopne
cmp
popf
sub
add
jmp
ret
dec
xor
add
pop
test
aaa
jg
mov
xor
rol
pop
mov
repz
jne
std
bsr
mov
loope
and
xor
loope
pop
jne
push
das
xorl
sahf
inc
jle
dec
inc
mov
xor
pop
xchg
rorb
sbb
lods
cmp
push
stos
mov
insl
sti
adcb
mov
jae
xor
lea
and
out
subb
mov
xor
mov
sbb
mov
mov
mov
mov
daa
lods
inc
cwtl
jbe
xchg
and
jns
std
push
jo
lret
adc
fistps
cmpsl
scas
push
mov
int3
out
sbb
test
and
add
ljmp
aad
mov
adc
push
push
pop
xor
xor
cmpsl
and
nop
lret
adc
fldenv
in
cmpsl
test
jnp
in
arpl
cmc
dec
ljmp
mov
mov
sti
lds
rcr
aas
lods
sub
inc
aad
cli
adc
pop
mov
addb
fwait
sbb
cmp
loop
jae
push
mov
mov
pop
into
sahf
arpl
aaa
xchg
fnsave
pushf
outsl
jb
xchg
rcrl
out
fabs
adc
out
cmpsb
or
loope
xor
sbb
mov
xor
pop
pop
outsb
cmpl
mov
enter
push
icebp
mov
add
bswap
pop
pop
sbb
inc
loope
inc
sahf
lcall
cli
pop
stos
sbb
out
pop
fsub
andb
testb
sbb
adc
jb
sarl
sub
out
adc
je
cltd
inc
mov
sub
cld
inc
and
sbb
out
jo
outsl
js
add
adc
jge
pop
mov
orl
lds
mov
stos
in
push
testb
andb
hlt
or
jle
and
lods
mov
add
icebp
mov
insl
jge
fstl
push
or
loop,pn
or
stos
cld
push
imul
popa
push
or
pop
notb
inc
in
cs
push
fadds
cli
xor
xchg
dec
push
popa
cs
mov
mov
in
test
sahf
in
jno
repnz
or
sub
jp
test
sub
fisubrl
cmp
movsl
andl
add
pop
into
inc
xchg
call
nop
jle
and
xor
shrl
rorl
adc
adc
popf
repnz
iret
sarl
xchg
fdiv
add
inc
fistps
sub
test
cld
inc
cmpsb
xor
fildll
add
pop
mov
add
cmc
jno
mov
sub
xor
dec
int3
and
fwait
add
mov
sbb
sbb
jmp
stos
xchg
call
push
test
push
cmp
cmp
adcl
sahf
dec
inc
push
clc
push
out
xor
fldt
hlt
stos
dec
sub
scas
sub
popf
add
cmp
push
out
clc
into
pushf
daa
sbb
aas
daa
lock
addl
inc
jne
ja
inc
mov
or
ds
jmp
imul
add
int
jge
inc
aaa
test
lea
jl
mov
xor
test
or
sub
mov
mov
jp
aas
mov
test
push
sahf
jg
mov
pop
mov
data16
mov
cli
mov
xlat
lahf
jae
cmp
ret
scas
jl
xor
jle,pt
movsb
call
das
sub
ljmp
mov
sti
adc
xchg
pop
in
dec
mov
test
imul
outsb
and
popa
lcall
insb
cmovae
jg
arpl
cli
dec
addr16
mov
dec
mov
testl
sbb
sahf
stc
xchg
in
cmc
cmp
cmp
shr
jne
cmp
stos
or
dec
ret
sbb
pop
ljmp
bound
mov
les
push
movsb
add
and
cmpsb
out
mov
ja
das
ds
add
int3
pop
mov
shrl
dec
push
mov
push
mov
cs
xchg
mov
mov
gs
push
mov
xor
icebp
mov
xchg
shll
outsb
cli
out
inc
jo
sub
jbe
rclb
adc
shll
pop
and
insb
and
sahf
inc
mov
mov
jg
xor
int
es
repz
add
cwtl
xchg
or
add
add
sub
inc
sub
xchg
add
fbstp
pop
cs
repz
movsb
mov
fistl
add
inc
pop
hlt
out
out
xchg
pop
xchg
mov
sbb
sbb
jns
cmp
xchg
lock
inc
mov
mov
roll
test
fistpl
push
jge
in
mov
mov
addr16
push
enter
jmp
fistps
fsubrs
arpl
push
movsl
mov
add
mov
jb
call
xchg
xchg
dec
imul
push
pop
mov
pusha
dec
pop
jo
inc
fcmove
xchg
mov
fimull
mov
es
cld
mov
mulb
cmp
push
mov
jge
ljmp
add
and
cld
pop
mov
pop
fdivrs
das
cmp
push
cltd
cmp
xlat
push
push
scas
je
das
adc
fxch
add
mov
cmc
xlat
out
mov
mov
daa
jg
out
outsl
rcll
stos
dec
leave
pusha
pop
imul
mov
in
mov
fucomip
pop
mov
mov
xor
lock
push
ljmp
lcall
inc
loopne
lcall
push
fidivrl
push
cmc
stos
jg
adc
je
out
push
fisttps
fidivrs
das
pop
test
scas
add
xor
mulb
dec
sbb
movups
or
jg
adc
push
pop
and
test
cmp
pop
das
jl
jp
cmp
jo
push
sbb
stos
lea
int3
xchg
add
xor
and
nop
mov
pop
mov
push
jmp
add
and
or
pop
push
pop
cli
rcrl
cmp
adc
out
inc
push
or
inc
push
or
sti
cmpsl
push
xor
std
out
adc
mov
xchg
sub
push
jmp
jmp
leave
add
or
out
xchg
sub
inc
inc
sbb
movsl
hlt
aam
sub
jno
movsl
mov
pop
jns
pop
dec
cli
inc
mov
stos
inc
dec
cmp
cmpsl
test
jne
pop
or
or
shlb
ficompl
loop
ljmp
and
xor
in
lock
cs
addb
inc
adc
test
stos
lods
pop
pop
gs
cli
mov
nop
pop
and
jp
rcl
jns
aam
cmp
dec
dec
sti
mov
pop
repnz
movsb
das
dec
in
mov
call
pusha
test
fs
dec
cmc
out
addr16
js
push
push
and
mov
adc
pop
in
ds
xchg
push
fmuls
rclb
jmp
xchg
jge
mov
cmp
fdivl
jno
sahf
scas
divb
movsl
mull
int
sbb
js
jnp
lret
popa
arpl
loopew
testb
ffreep
aam
movsl
push
mov
sub
mov
sub
adc
lahf
push
mov
push
xchg
and
je
xchg
push
dec
out
repnz
or
int
inc
xchg
adc
hlt
out
notb
add
jle
jns
leave
and
das
mov
popf
dec
or
sbb
add
cmp
lea
or
mov
and
popa
lock
push
mov
dec
adc
inc
mov
dec
xchg
lret
xchg
xchg
xchg
xchg
xchg
push
outsl
aam
inc
jae
push
fistl
repnz
dec
sbb
cmpsl
arpl
inc
mov
stos
dec
dec
push
add
mov
push
jnp
mov
dec
jl
and
jp
or
jecxz
mov
imul
lods
cmc
outsb
stos
out
mov
rcr
push
mov
std
and
sti
enter
push
cmp
pop
jp
dec
popa
mov
pop
repz
and
mov
push
push
fwait
int3
hlt
jae
inc
out
jge
and
push
push
das
lret
or
sub
adc
cmp
add
jecxz
dec
and
data16
lret
lea
lds
push
fistpll
dec
pusha
mov
cmp
mov
cmpsb
push
movsb
sti
divl
xchg
fiaddl
sub
inc
std
xchg
jnp
shll
mov
push
cmp
xchg
stc
xlat
or
sbb
sbb
adc
pop
add
mov
mov
arpl
push
sub
xchg
stc
scas
les
aad
mov
add
inc
loopne
stc
pop
jl
icebp
fistpll
mov
jo
dec
or
inc
inc
mov
nop
or
pop
mov
icebp
int3
insl
cmp
rol
dec
or
aaa
outsl
gs
sbb
or
add
lds
mov
mov
push
jae
arpl
xchg
fdiv
mov
xorb
mov
fistpl
mov
xor
jbe
dec
mov
inc
mov
aaa
dec
mov
dec
jne
divb
out
ficomps
imul
lea
mov
add
in
adc
fistpl
add
xor
subb
inc
or
cmp
fidivrs
test
or
sub
and
inc
arpl
addr16
xor
into
inc
pop
and
lds
cmp
mov
or
aas
pop
lock
mov
bound
sub
jbe
ja
or
addr16
xor
gs
and
gs
out
cmpl
jl
inc
stc
sbb
sahf
or
jg
jp
mov
sub
inc
push
xchg
imul
jge
insb
xor
mov
push
inc
pop
add
nop
ljmp
mov
mov
ficompl
sbb
mov
add
mov
out
jle
ror
out
add
pop
xchg
pop
mov
loopne
sub
movsl
jnp
inc
inc
and
jns
and
mov
sub
pop
sbb
aas
setp
movl
and
sbb
in
dec
pop
jmp
dec
inc
shl
movsb
jg
dec
and
sbb
mov
or
idivb
or
in
mov
cmpsb
add
and
lea
mov
aad
inc
pop
and
ljmp
inc
or
repnz
pop
pop
or
push
je
or
iret
outsb
pop
mov
jg
jl
outsl
roll
data16
fcompl
sbb
inc
jb
outsb
and
in
and
pop
adc
xor
pop
fwait
cmp
or
dec
fstpt
or
add
mov
mov
sub
iret
xchg
gs
dec
gs
stc
data16
pop
mov
in
and
aaa
xorb
or
push
mov
and
mov
inc
mov
ret
add
or
fcoml
test
scas
pop
adc
jbe
inc
or
in
mov
int
data16
jge
sbb
idivl
xor
fidivl
adc
jne
and
push
rcll
ret
cmpsb
cli
push
cwtl
pop
addr16
push
inc
notl
cmpsb
dec
loopne
les
mov
mov
std
ljmp
mov
mov
jb
xor
sahf
arpl
cmp
loopne
lahf
in
jo
aaa
mov
idivb
sub
xchg
aaa
jl
movsl
mov
dec
or
mov
xchg
cmpsb
jge
fwait
fs
mov
daa
add
iret
xchg
jge
mov
roll
adcl
adc
jb
or
clc
sbb
ret
lret
ss
jmp
and
lds
pushl
and
inc
cs
ja
inc
mov
push
popa
pop
jns
adc
cmp
clc
loopne
pop
stos
outsb
lahf
or
cmp
add
sti
push
pop
ss
insb
mov
repz
jns
xor
inc
cmp
and
cmp
outsb
clc
mov
pop
test
sub
dec
mov
hlt
push
ret
cli
cmpsl
rclb
mov
push
mov
dec
dec
jmp
in
add
jmp
sub
xchg
jl
mov
mov
shlb
push
and
dec
in
adc
aas
inc
jns
mov
pop
in
or
leave
xchg
sbb
aam
aaa
jmp
pusha
mov
push
insl
sub
clc
aad
xchg
xor
pop
mov
cmp
cld
mov
inc
add
test
rol
dec
inc
shlb
push
mov
les
inc
mov
pop
jae
push
sahf
cmp
sub
pushl
mov
mov
add
mov
jecxz
xchg
mov
mov
and
inc
lret
inc
fldcw
popa
rcll
in
push
sub
mov
test
xchg
cmc
sub
push
ja
imull
fdivs
pop
xor
out
icebp
mov
dec
cmp
loop
cld
fwait
or
aas
inc
leave
xchg
je
xchg
or
sbb
pop
sar
sub
aas
push
stos
mov
shlb
stc
adc
mov
popa
xchg
sub
mov
mov
or
es
add
test
aad
out
or
sub
mov
xchg
ljmp
iret
jae
adc
or
jno
pop
outsb
jne
fnsave
loopne
sbb
mov
mov
stos
pop
xchg
mov
cmp
in
xor
xchg
inc
push
daa
data16
aam
lret
ja
fimuls
movl
mov
jle
push
and
inc
xlat
xor
jnp
push
push
jnp
leave
mov
roll
fs
mov
fnstenv
pop
xchg
ljmp
or
push
xor
outsl
sub
xor
jo
sub
imul
xchg
dec
cwtl
cmp
ficompl
mov
adc
sbb
xchg
cmp
mov
ret
jmp
or
mov
cmpsb
fildll
add
inc
loopne
sahf
mov
cmp
sbb
adc
lret
dec
sti
adc
and
movsb
jle
ds
fwait
jne
lret
xor
jg
fcomps
adc
pushf
repz
sbb
loopne
fcmovnb
xchg
in
mov
lock
dec
sar
pop
fisubl
icebp
mov
aad
mov
pop
push
sarl
ds
cmp
mov
adc
pop
mov
push
push
scas
add
and
pop
sub
xor
fisubs
and
sti
dec
mov
cmpsb
lret
out
in
sbb
out
lea
jg
pop
into
pcmpeqd
lcall
iret
jmp
mov
jle
pusha
xlat
and
jnp
push
in
sarl
mov
mov
ret
pusha
pop
adc
xor
jl
js
test
int3
sub
jg
cli
dec
mov
mov
inc
fsubl
mov
and
fldl
jbe
mov
lcall
jle
shll
out
sub
sahf
popf
cld
add
push
loopne
outsb
lods
push
jbe
xor
mov
sbb
fisubrl
out
add
loopne
in
lods
mov
out
ficomps
jns
mov
mov
sbb
dec
push
and
popa
push
inc
add
ss
sbb
adc
xor
outsl
sbb
sarl
dec
test
lods
inc
xor
dec
dec
dec
aam
push
pop
lcall
xchg
ja
or
push
dec
push
mov
rcrb
inc
ja
cmc
int
fldl
inc
jae
mov
mov
or
ljmp
xchg
jno
mov
mov
xchg
mov
stc
pop
or
test
mov
push
sub
pop
pushw
das
xchg
sub
mov
mov
ds
sub
mov
mov
not
mov
int
scas
outsl
xchg
cwtl
int
cmc
repz
call
test
cmc
aad
es
outsl
push
mov
push
ja
mov
movsb
xor
cmpl
ret
ss
dec
jns
ret
clc
mov
jno
loop
popf
xchg
xchg
mov
xor
fsts
xchg
nop
cltd
movsb
push
mov
dec
jmp
xchg
inc
dec
sbb
cmp
xor
and
or
dec
pop
sbb
jmp
cmpsl
daa
cwtl
add
imul
leave
add
stos
and
xor
push
pop
lcall
sarb
lea
fidivl
addb
lea
or
mov
sub
pop
mov
repz
mov
lcall
mov
add
xchg
pop
movsb
jecxz
mov
xlat
inc
fimuls
push
outsl
cwtl
decb
push
leave
dec
inc
leave
mov
in
dec
push
cld
adc
dec
sarb
mov
lods
push
push
push
int3
ja
movsb
mov
dec
popa
insl
andl
cld
iret
xchg
cmp
ret
pushf
add
push
scas
sub
adc
cmp
mov
ja
pop
xchg
cwtl
push
insl
outsl
icebp
push
and
movsb
pop
dec
cmp
aad
jnp
dec
icebp
cmp
pop
jp
stos
loop
lds
pop
dec
lcall
inc
cld
jbe
clc
cmp
lret
cmpsl
jo
add
push
mov
pop
jne
scas
jge
in
mov
jp
cs
loope
sbb
je
adc
cmp
out
aas
adcb
enter
mov
pushf
inc
imul
dec
jb
clc
xchg
sub
rclb
cmp
adc
push
push
pop
popf
cmp
pop
cmp
fdivrs
mov
lcall
mov
int3
jge
loope
jae
clc
sbb
incb
leave
sub
jecxz
xchg
jo
jmp
leave
cmp
jnp
sbb
add
cmp
and
cmp
ret
or
cmp
jle
aaa
cmpsb
jae
push
cs
orl
loope
or
test
popa
push
mov
std
pop
lock
je
stos
lds
push
imul
sbb
cli
iret
mov
negb
cmc
sbbl
stos
inc
inc
lods
fdivrp
push
xor
xchg
inc
pop
pop
pop
pop
loope
pop
xchg
mov
dec
insl
aad
lea
sarb
in
cmp
sub
test
lods
popa
cmc
push
decb
lods
inc
add
pop
loop
inc
sub
int3
sbb
and
dec
ss
lods
insb
jo
mov
pop
aas
shl
fcoms
dec
adc
adc
and
stc
testl
arpl
sub
aad
mov
ja
popf
sub
lret
loope
shrl
inc
xchg
adc
int3
xor
imul
mov
mov
fsubrl
jns
dec
push
sub
clc
in
add
or
mov
adc
imul
push
mov
test
nop
xorb
imul
mov
ljmp
lods
xchg
dec
or
stos
mov
out
imul
xchg
ret
push
call
and
out
insl
js
jnp
mov
out
jecxz
das
movsl
jp
jns
jl
inc
mov
faddp
xchg
xchg
sub
mov
aam
jle
mov
mov
push
icebp
sub
or
mov
jg
clc
movsl
adc
pop
and
ret
popf
cmp
fcmovbe
xor
cld
inc
ds
lock
imul
ja
sbb
mov
cmc
mov
push
hlt
pushf
inc
add
jb
scas
in
test
inc
sub
sbb
fisttps
sbb
mov
popa
fwait
push
or
pushf
repz
loopne
rorl
sahf
inc
sbb
lret
sub
out
push
out
mov
shl
repz
lock
and
xor
add
adc
push
jae
inc
jo
andb
xchg
shl
repz
lock
and
xor
add
adc
push
jae
inc
jo
andb
xchg
shl
pop
loopne
lock
sti
adc
and
xor
inc
arpl
pusha
arpl
andl
shl
loopne
lock
fcoml
cltd
mov
xor
fmuls
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
mov
mov
mov
and
jb
add
and
push
xor
mov
mov
xor
jecxz
shll
and
jb
add
arpl
push
xor
mov
mov
xor
jecxz
shll
jg
arpl
add
and
popa
ss
inc
mov
mov
loop
fwait
outsl
lea
cmp
mov
jns
push
je
mov
cs
orb
sbb
fistps
decb
lea
push
mov
call
cmp
fs
push
cld
repz
fnsave
test
mov
dec
cmc
mov
ljmp
xchg
mov
fbstp
sub
cld
push
and
xor
lods
mov
pop
addr16
movd
mov
pop
sub
xchg
inc
jbe
and
out
stc
xor
xchg
fstl
adc
sub
xchg
or
loopne
sbb
xor
mov
in
xor
mov
mov
xor
jecxz
shll
and
jb
add
arpl
push
xor
movsb
aad
std
mov
xor
dec
adc
insl
test
push
sbb
inc
es
cmpsb
jmp
out
fxch
out
test
pop
inc
jb
cmc
sbb
or
es
sub
movsb
out
test
shll
and
jb
add
arpl
push
xor
mov
mov
xor
jecxz
shll
and
jb
add
arpl
push
xor
mov
mov
popa
lea
ss
cmc
repnz
out
dec
pop
inc
sub
xor
mov
out
cmp
dec
dec
call
test
mov
cmp
xor
jle,pn
addb
adc
lcall
je
xchg
mov
add
add
xchg
cmovb
mov
pusha
in
decb
or
inc
mov
push
or
mov
xchg
xor
outsb
mov
test
aas
adc
adc
xor
sbb
addl
stos
maxps
pop
mov
rclb
add
jne
sub
aam
out
pop
arpl
and
push
push
aaa
icebp
mov
andl
push
int3
aas
sbb
rcrl
aam
adc
ret
sub
orb
inc
ja
push
dec
shl
cmp
stc
fwait
cltd
and
sbb
push
pop
imul
mov
or
ror
daa
mov
rcrb
cli
lds
pop
sub
mov
pop
in
frstor
out
xchg
jecxz
and
adc
xor
fsts
push
loop
jb,pn
jae
loopne
outsl
or
sbb
and
lods
mov
aaa
hlt
jg
xchg
jle
mov
fildl
fwait
pusha
pop
or
pop
scas
sub
pop
fldcw
sub
mov
mov
aad
or
imul
lock
daa
jne
repnz
mov
adc
or
lret
and
das
jle
or
adc
sti
mov
cli
xor
fs
dec
push
mov
mov
or
mov
cmpsb
insl
add
loopne
out
or
xchg
or
ds
and
mov
addr16
in
cltd
xchg
cwtl
sub
push
xor
test
movsb
lret
xchg
xchg
jmp
movsl
cmpsb
adc
imul
cwtl
pushf
sbb
movsb
lret
int3
cli
xchg
and
gs
loope
int3
test
fisubs
test
ljmp
je
into
repnz
dec
sbb
mov
jg
xor
jns
cmp
jae
mov
add
scas
or
inc
cs
dec
cmpsl
arpl
or
mov
lods
shll
push
mov
or
lret
mov
adc
mov
pop
sti
jo
inc
fwait
enter
jecxz
aaa
mov
xchg
pop
in
scas
lret
cmc
in
fs
push
jp
adc
pop
lret
push
mov
xor
int3
lods
sarl
sbb
add
pusha
add
add
and
aaa
shrb
cld
insb
jl
ds
and
and
imulb
inc
and
rcl
ret
cs
xchg
loope
xor
gs
jg
mov
ret
inc
jbe
adc
rorb
inc
decl
sub
jmp
push
push
xor
xchg
jecxz
adc
xchg
dec
cmp
jg
fmull
inc
sub
orb
cmp
push
jle
lock
mov
dec
sbb
fs
addr16
mov
aad
xchg
mov
inc
mov
sbb
insl
dec
hlt
outsb
faddp
test
adc
sbb
sub
add
into
jnp
out
xchg
pop
je
sub
mov
neg
adc
cltd
into
call
push
push
ljmp
mov
sub
mov
lock
arpl
jnp
idivb
cmp
aam
mov
shll
pop
test
push
leave
mov
lcall
mov
sbb
inc
out
es
stos
lret
mov
iret
cwtl
shlb
dec
jnp
punpcklbw
fnsave
iret
mov
and
das
je
mov
mov
sbb
dec
jl
scas
lods
out
or
cmp
rorb
mov
xlat
dec
popf
mov
pop
xlat
in
pop
mov
pop
pop
inc
mov
out
aas
cmp
cmc
icebp
xor
out
jo
xlat
test
sbb
mov
clc
and
pop
outsl
jbe
mov
mov
cmp
lcall
add
int3
inc
mov
fcomip
arpl
pop
push
dec
lods
testl
lret
divl
cmp
and
ds
int
in
sbb
cmpsb
sbb
sarl
aas
cmp
and
lock
addr16
out
lret
daa
push
insl
and
test
pop
es
xchg
jb
mov
test
das
jb
pop
dec
dec
mov
cmp
inc
movsl
mov
stos
cmc
rcrb
scas
xchg
rorl
adc
loopne
or
cwtl
dec
push
bound
mov
je
roll
mov
fistps
add
adc
sub
mov
fwait
push
out
cmp
and
stos
jnp
xor
js
sbb
push
cld
mov
push
mov
int3
loopne
push
mov
pop
mov
data16
popa
test
jno
xor
fs
cmc
mov
gs
cmc
aad
lea
mov
dec
imul
lret
imul
xchg
mov
pop
inc
aad
jae
pop
xchg
sahf
jp
pop
fidivrl
jb
jns
in
leave
bound
rcl
cmp
pop
cmp
jae
jae
xor
je
mov
xchg
jnp
pop
ret
jg
inc
xor
icebp
int3
inc
jbe
bound
dec
mov
ds
and
xor
mov
arpl
inc
lret
loope
cmpsl
inc
sahf
mov
push
stos
mov
add
rclb
shr
mov
lds
outsl
xlat
hlt
aaa
int
mov
adc
in
das
jl
adc
xor
pop
cld
mov
movsb
sbb
lods
and
shlb
cmpsb
adc
cmp
les
inc
cmp
fnsave
insl
mov
or
pusha
mov
insb
dec
inc
scas
push
test
ss
aad
out
dec
pop
lods
ljmp
ljmp
lea
fbstp
fwait
in
mov
inc
dec
mov
popf
jno
and
sar
pop
outsb
fwait
pop
cwtl
test
lss
push
xor
cld
inc
daa
push
imul
int3
push
pop
xchg
fwait
xor
pmulhw
in
jge
fmul
mov
jl
das
enter
and
pop
push
mov
pop
jp
adc
cmc
mov
push
mov
popf
scas
in
test
jmp
fcomps
dec
ljmp
adc
pop
cmp
mov
jg
sbb
jmp
outsl
insl
push
adc
jno
sub
inc
fsubrs
clc
sarl
inc
ja
cmp
cwtl
jbe
js
imul
pop
lret
jae
mov
in
mov
test
cmp
cltd
adc
mov
fdivrs
push
push
mov
xor
test
aam
mov
dec
push
xor
sub
jmp
imul
inc
push
pop
push
push
push
cmp
repz
pop
jae
addl
push
jnp
lock
movsl
push
and
mov
mov
outsb
xchg
lcall
lods
lret
je
iret
sbb
jp
xchg
and
jo
or
jecxz
ret
jo
test
insb
jg
and
bound
xor
mov
cld
loop
mov
stc
fidivrl
jle
cmpsl
mov
cld
jbe
cmp
pop
xchg
aad
out
test
cmp
push
fwait
mov
pushf
adc
ret
clc
mov
outsl
les
mov
ds
lods
xchg
cmp
stc
sub
adc
jb
aas
in
add
jg
or
dec
insb
insb
push
pop
xchg
jne
ss
into
cmp
jg
ss
repz
gs
sub
nop
into
roll
xchg
or
dec
push
std
shl
mov
push
cli
mov
xchg
lcall
pop
std
bnd
jbe
dec
imul
sbb
or
mov
push
push
ljmp
int3
in
inc
push
ret
add
inc
push
mov
cmp
dec
clc
adc
xchg
out
stos
je
jb
inc
inc
stos
inc
arpl
inc
jne
inc
je
int
mov
sti
jne
mov
into
mov
mov
out
stc
fs
add
pop
add
push
mov
inc
adc
push
cmpsb
and
xor
rcl
repnz
mov
xor
outsl
xor
sbb
dec
inc
repnz
popa
fnsetpm(287
icebp
andb
das
mov
and
xorl
popf
push
popf
loopne
mov
leave
and
out
xor
push
inc
aas
lds
loope
data16
imul
das
shrb
xor
push
sub
daa
lahf
adc
add
loopne
adc
out
in
cmpsb
loopne
cmc
mov
lret
xor
pop
or
fucomip
jecxz
iret
jmp
in
sbb
push
jns
and
insl
add
scas
push
add
xor
push
and
push
push
fcmovbe
shll
enter
leave
jle
addb
jecxz
sub
ret
mov
out
cmp
mov
push
fisttpl
mov
pop
inc
xor
sub
or
inc
test
das
xchg
outsl
xchg
mov
xor
in
lahf
aam
mov
icebp
mov
fadds
lock
movsb
add
jmp
push
push
and
or
lds
nop
jo
fstpt
mov
mov
sbb
out
dec
cmp
psubusw
insb
sub
movsb
inc
std
lock
mov
mov
cmp
sbbl
stos
ret
dec
add
xor
jbe
push
sub
lock
mov
mov
ljmp
push
loope
les
mov
adc
add
faddl
jo
fidivl
repz
push
ljmp
dec
jns
add
inc
gs
or
sahf
pop
cmpsl
lock
cmp
movsl
push
xchg
mov
push
dec
fisttpll
addr16
xchg
inc
bound
pop
and
and
adc
or
adc
cltd
jg
popf
inc
cli
iret
jb
or
mov
popa
stc
pop
cmp
mov
pop
sbb
inc
sahf
mov
dec
jp
popa
add
lods
js
dec
lock
mov
inc
push
dec
jnp
sub
in
dec
rorb
sti
sub
into
jecxz
fisubl
arpl
test
mov
push
bound
xor
ret
cld
repnz
pop
lcall
add
xchg
rorl
xchg
inc
ds
mov
fdivr
add
cmp
push
cli
xchg
mov
sbb
dec
jmp
push
int
inc
jle
bnd
mov
add
dec
ljmp
cltd
ret
aas
data16
xor
adc
mov
jmp
pop
scas
ret
stc
mov
call
stc
sarl
imul
enter
and
mov
sbb
test
shlb
gs
pop
cmpb
cmp
mov
repz
out
insb
arpl
pop
cmp
inc
lods
aas
je
add
out
xchg
jo
les
and
mov
fdivrp
or
loopne
sub
jl
mov
addb
sbb
jno
sub
fldt
mov
sub
add
adcb
jb
cmc
sbb
repnz
pop
aas
outsl
sub
test
inc
mov
popf
cmp
push
imul
arpl
mov
out
es
jb
call
cltd
or
add
sub
jne
ficomps
cs
jne
ja
inc
outsb
in
jg
ljmp
xor
arpl
loop
bnd
sub
dec
aad
sbb
lcall
ret
adc
sbb
jne
mov
jl
and
cmc
insb
in
jae
xor
push
sub
rorl
mov
ror
sbb
dec
pop
dec
fisubrl
inc
pop
lcall
frstor
push
jp
pop
test
mov
out
rsqrtps
rorb
lods
cld
cmp
mov
test
xor
jns
icebp
fimull
pop
ret
popf
adc
ret
outsb
fsubr
xchg
inc
int3
and
xchg
sub
out
xor
cmp
repz
sbbl
push
sub
aaa
xchg
xor
mov
sbb
jp
add
test
add
fmul
jge
or
fstpl
dec
popf
es
and
addr16
jb
outsb
dec
loopne
add
sbb
outsl
outsl
push
mov
dec
outsb
loope
dec
xor
imul
fldenv
cwtl
jmp
add
fisttpll
insl
sbb
pop
or
adc
sbb
or
add
lock
sbb
jle
es
push
inc
jbe
xchg
hlt
xlat
dec
adc
jp
or
iret
stos
ds
pop
aas
pushf
fs
cmp
inc
xchg
mov
mov
addl
jge
pop
sarl
idiv
mov
jb
adc
push
sbb
rolb
push
pop
test
dec
mov
sbb
in
mov
sub
sub
push
jge
adc
mov
imul
cmp
mov
cwtl
xchg
xchg
pop
xchg
mov
or
int
dec
fwait
adc
mov
cli
ljmp
andb
test
jb
dec
jmp
call
add
jnp
fs
mov
push
leave
jne
call
xlat
pop
or
lret
dec
data16
or
mov
fld
xchg
lods
lret
mov
xor
cld
or
inc
xchg
xchg
cltd
outsb
cmp
mov
and
sbb
dec
in
imul
inc
hlt
in
and
pop
inc
pop
mov
sbb
jns
and
xchg
dec
nop
and
in
jae
pop
lcall
icebp
mov
ret
sbb
sub
loopne
xchg
in
stc
inc
mov
inc
pop
push
sbb
loopne
push
sbb
mov
ja
xchg
sbb
cmp
orb
push
jns
out
jp
icebp
cld
xchg
or
mov
jl
add
xchg
mov
adc
and
icebp
cld
push
jl
adc
mov
xchg
lds
fmulp
jmp
ret
add
cmp
lahf
push
cltd
jge
or
inc
mov
push
adc
mov
mov
sub
push
outsb
sti
dec
cmp
test
jae
loope
clc
xchg
lods
fwait
push
lret
popf
push
aaa
mov
jge
adc
fdivrs
pop
fisttpl
enter
sbb
lahf
jb
out
push
cmp
mov
sbb
icebp
or
mov
inc
loopne
jp
inc
pop
pushw
sbb
dec
pusha
xchg
cltd
mov
mov
xlat
icebp
daa
out
je
in
lcall
sub
lds
mov
xor
clc
inc
stc
test
xor
lea
mov
push
mov
out
pop
sub
cmpsb
xchg
test
sub
jae
or
pop
addr16
incb
mov
or
sub
les
gs
sbb
jge
clc
and
inc
fstps
cltd
adc
out
pop
sub
or
adc
xchg
cmc
jmp
shll
mov
int
push
gs
pop
test
and
enter
mov
inc
movl
sub
int3
shll
mov
xchg
and
sarl
xchg
inc
jne
int3
add
movsb
inc
jbe
stos
xor
dec
in
mov
xchg
lods
inc
cs
lods
jno
out
scas
pop
cmp
jmp
dec
pop
popl
dec
cmc
mov
jno
movsb
jnp
sbb
or
lahf
icebp
mov
dec
mov
sarl
sub
shl
mov
fisubl
arpl
gs
sbb
mov
dec
std
dec
mov
jo
xlat
inc
or
popa
out
push
jne
lret
cmp
mov
loop
mov
inc
xor
lock
add
cmp
out
or
jb
xchg
outsl
push
sub
push
sahf
mov
pusha
pop
cwtl
in
testl
enter
loopne
lods
fnstenv
lret
inc
sysret
out
inc
negl
fwait
xchg
add
loope
fstp
fsubl
int
push
pop
pop
xor
sahf
enter
lods
popa
loope
and
jmp
out
loop
mov
inc
mov
sbb
xlat
ja
stos
dec
popa
test
and
dec
sub
sub
xchg
xor
cmpsb
loopne
sub
sub
shrb
and
aam
adc
jge
ljmp
inc
xchg
jbe
adc
pop
adc
inc
cli
add
ret
jg
add
nop
stos
in
mov
jbe
ds
outsb
pop
fcomi
mov
mov
iret
push
mov
rorb
jmp
addb
xchg
in
in
mov
inc
bound
mov
mov
mov
adc
adc
sbb
jmp
push
sbb
ljmp
add
negb
sub
mov
mov
fdivs
push
fsts
fsubr
cmp
mov
sahf
pop
test
inc
call
sahf
stos
loope
jbe
lss
xlat
orb
adc
xchg
push
fbld
add
sub
arpl
mov
sub
pop
in
shr
sbb
jl
shll
aaa
popf
incl
mov
scas
mov
cld
iret
insl
jg
enter
cmp
mov
jle
cs
mov
sub
pop
mov
sti
push
sub
pop
push
xchg
cwtl
dec
jecxz
xor
fwait
add
and
rcll
lds
shll
frstor
xchg
outsl
daa
bound
mov
push
enter
mov
jo
dec
mov
lods
or
jno
push
jnp
jmp
xchg
pusha
sub
push
stc
inc
ret
xchg
sti
pop
sbb
mov
push
ficomps
cmp
sub
inc
fs
mov
arpl
mov
mov
loopne
loope
mov
push
sub
nop
fsubr
mull
aaa
mov
lock
fisubl
loop
inc
or
enter
arpl
stos
jne
mov
inc
out
mov
orb
ljmp
jge
or
xchg
push
mov
push
mov
les
sbb
addr16
mov
xor
jno
mov
push
fcoml
push
imul
and
mov
mov
cmp
adc
xlat
xor
es
arpl
add
addr16
fwait
jb
or
lds
mov
fbld
stc
pop
out
fimull
jo
mov
inc
push
out
pop
cmc
out
cmp
outsl
dec
popa
rcrl
lcall
xchg
or
xchg
rcll
jno
rclb
jo
pop
fs
fmuls
ret
jo
leave
adc
sbbl
xlat
into
jge
enter
or
cmp
pushf
std
pushf
lods
shl
cmp
jb
mov
cmp
dec
pop
cmp
fcoms
mov
pop
sbb
jmp
pop
lods
jno
xchg
add
icebp
xor
mov
jmp
inc
divl
push
dec
pop
mov
cmp
mov
add
add
pop
or
bound
xchg
pop
cmp
rcll
shl
adc
jle
nop
xor
mov
lret
repz
fcmovne
xor
aas
xchg
cld
fsubs
cli
pop
sub
push
sbb
mov
push
daa
setg
cmp
jle
xor
mov
xchg
std
and
mov
sub
js
or
adcb
sbb
mov
lret
dec
test
dec
scas
imul
arpl
push
fucom
and
lea
push
sub
lods
loop
lock
xchg
pop
repz
and
mov
or
inc
sub
push
ret
cld
stc
mov
lock
icebp
inc
xchg
push
inc
fldcw
cmp
adc
or
scas
std
mov
sub
in
pushl
rcll
aas
push
and
rcll
jb
idivb
dec
ja
sub
dec
lods
cli
lods
push
dec
mov
cs
add
mov
shl
faddl
test
adc
xchg
fsubs
or
out
sub
mov
push
pop
jnp
adc
shl
dec
pop
xchg
jb
cltd
jns
xlat
mov
mov
and
sbb
mov
dec
xchg
lahf
mov
dec
sub
or
sti
lret
lods
dec
scas
jg
div
xchg
jns
and
sub
xchg
popl
sbb
das
cmpsb
jb
push
mov
push
rcll
and
cli
lahf
lret
lcall
pop
test
adc
repnz
mov
inc
xor
bound
jb
add
arpl
push
xor
mov
mov
xor
jecxz
shll
and
jb
add
arpl
push
xor
mov
mov
xor
jecxz
shlb
and
jae
add
arpl
push
xor
mov
mov
xor
arpl
push
xor
adc
jne
lcall
pop
addr16
push
cmp
aaa
jp
sub
pop
sub
pop
pop
adc
stos
mov
cmpsl
es
sti
xchg
jmp
sbb
cmp
inc
sub
pop
daa
dec
pop
jnp
inc
negl
stos
div
cmpsl
lret
xchg
sti
xchg
iret
mov
lahf
pop
sub
add
jno
pop
xchg
fwait
les
fmull
fisttpl
push
push
daa
mov
clc
sub
mov
aam
mov
dec
inc
repnz
mov
xlat
dec
ret
dec
cmpsl
rcrb
xchg
ja
inc
cmp
dec
into
sti
xchg
xchg
jo
cmpsb
mov
push
and
mov
mov
mov
mov
mov
loop
pop
das
mov
or
dec
daa
jnp
mov
out
push
inc
cmp
xchg
add
xchg
mov
push
ja
fcmovbe
lret
push
mov
xlat
pop
sbbb
cmpsl
fisubrs
mov
in
hlt
push
dec
mov
mov
enter
insl
xor
cmp
test
push
dec
inc
sub
pop
pop
dec
pop
jnp
stc
xor
notl
movsl
jecxz
fstps
sbb
inc
pop
decb
arpl
pop
sub
fdivs
lds
cmpb
add
dec
es
pop
or
loop
push
pop
nop
cli
mov
xlat
jmp
enter
cwtl
sbb
jmp
push
adc
fs
daa
dec
pop
jnp
imul
out
xlat
mov
cmpsl
lret
xchg
sti
xchg
ja
or
inc
sub
pop
daa
dec
pop
jnp
imul
out
xlat
mov
cmpsl
lret
xchg
sti
xchg
ja
rcrl
xchg
clc
cmp
inc
jns
movsl
push
sahf
aam
icebp
mov
in
aas
sub
and
int3
popf
inc
pusha
mov
mov
and
jecxz
push
fistl
cmp
mov
lcall
aad
es
cmp
popa
push
pusha
cmpsb
or
jecxz
in
jmp
mov
imul
cwtl
push
mov
add
inc
pop
test
pop
and
loope
nop
sub
cmp
jle
aam
xchg
aad
dec
std
outsl
hlt
xchg
sbb
outsl
xchg
fimuls
inc
sbb
mov
sub
sbb
dec
dec
push
jmp
bound
in
jns
insb
or
push
int3
cs
add
cld
and
jg
adc
mulb
dec
sbb
clc
jge
ret
mov
testb
cmc
mov
mov
mov
jmp
and
and
hlt
sahf
in
incl
adc
and
roll
fidivl
adc
mov
insb
das
ljmp
jnp
scas
or
test
test
insb
sbb
and
mulb
je
push
scas
lds
push
addl
bound
pop
adc
xor
mov
xor
into
outsl
movsb
in
sbb
outsl
data16
dec
mov
jp
lret
imul
jo
arpl
and
or
mov
jle
lock
cld
adc
vphsubbw
inc
repnz
push
sti
bound
imul
cmp
add
rorb
ja
xchg
stos
push
inc
sbb
rcrl
int
add
xchg
push
jmp
pop
xchg
fsubs
dec
pop
sbb
fcoml
dec
adc
cmpsl
jno
xlat
add
adc
pop
pop
or
cmp
inc
insb
aaa
loope
mov
dec
fldt
mov
pop
and
or
daa
pop
inc
mov
xor
test
and
add
dec
add
mov
mov
pop
sbb
push
and
add
mov
push
mov
test
xchg
pop
daa
push
xchg
std
fmuls
dec
pushf
mov
in
fmuls
sbb
js
pop
rol
and
cmp
cmp
and
dec
test
roll
mov
xor
stos
in
aam
add
xor
inc
cmp
out
mov
rcrb
sub
sti
xchg
pop
push
out
push
in
jg
xor
aad
jno
in
or
popa
mov
jo
test
es
mov
out
insb
mov
cmp
sub
mov
sti
clc
idivl
out
lret
mov
push
jmp
mov
inc
mov
arpl
pusha
out
enter
fsts
pop
mulb
iret
popa
aaa
mov
mov
push
call
or
push
mov
data16
xor
loopne
or
sbb
inc
or
cs
in
push
mov
mov
jge
and
xchg
cmp
sahf
mov
push
movb
icebp
sub
cmp
sbb
shll
xor
inc
iret
xchg
call
in
into
dec
in
xor
xor
out
outsb
push
rcrl
xchg
loope
cmp
popa
ss
push
adcl
test
aad
push
in
push
xchg
repz
mov
scas
mov
dec
mov
and
mov
cli
jecxz
lret
je
inc
fsubr
pop
push
in
adc
orb
adc
popf
flds
push
jnp
jae
sub
pop
pop
pop
xor
aam
mov
push
ret
std
push
aas
xor
dec
push
pop
fsubrl
cmpsl
clc
cmpl
dec
and
loopne
xchg
mov
xor
jbe
jbe
dec
push
mov
and
bnd
out
jae
popa
dec
orl
push
inc
addr16
pop
pop
js
or
out
jg
sahf
and
mov
test
orl
test
in
or
pushl
mov
mov
repnz
mov
lret
imul
pop
sahf
jb
insl
rcrb
repnz
leave
cmp
es
jecxz
aaa
push
rcrl
mov
sub
push
prefetch
test
stc
sarl
rorb
push
mov
pushf
xchg
jns
mov
nop
pushf
mov
and
popf
lock
cmp
mov
sbb
mov
clc
notl
or
mov
mov
movsb
inc
cmpsl
sub
push
sbb
iret
xor
pushf
adc
test
test
sbb
shll
stos
es
sub
mov
daa
inc
shrl
lea
fnstcw
and
inc
outsl
cmp
mov
pushf
xchg
daa
subb
mov
xorb
xchg
jmp
cmp
ret
scas
jmp
cmp
jae
out
sbb
arpl
pop
sbb
mov
jb
dec
icebp
dec
rol
or
inc
jo
mov
int3
movsl
mov
ljmp
call
pop
jmp
adc
iret
nop
in
lea
adc
subl
fsubr
cld
add
ret
lret
adc
xchg
outsl
hlt
pop
in
popf
mov
ss
in
aam
inc
push
mov
or
cmc
xlat
mov
fnstenv
mov
je
mov
daa
sub
mov
sti
mov
add
lea
daa
popa
ss
cmpsb
fwait
push
movsl
cmp
push
cmp
mov
pusha
fcmovnu
pop
mov
fstpt
mov
mov
lods
and
dec
testb
in
and
fildl
lcall
fstpt
aas
sbb
repz
cli
sub
loop
test
nop
sub
testl
lahf
insl
outsb
test
adc
mov
leave
cmp
lds
xchg
call
stos
fistpll
sbb
xchg
mov
mov
cmpsb
add
or
xor
adc
insl
inc
scas
outsb
pop
nop
jecxz
mov
lret
push
inc
jmp
xor
cmp
adc
ficomps
fxam
scas
stos
rolb
mov
cld
out
mov
push
in
int3
xchg
or
or
js
xor
pushf
test
xchg
sbb
lret
mov
push
sub
adc
rorb
jns
out
add
les
push
push
fcompl
cli
and
pop
es
xchg
ds
mul
lods
gs
jb
mov
insl
jno
ret
cmp
pushf
outsl
push
mov
xchg
dec
mov
jle
mov
mov
adc
es
in
out
shrb
testl
insb
test
mov
in
cmpsl
inc
popa
inc
cmpsb
xchg
loope
cld
mov
adc
and
or
cmp
outsl
aad
fldenv
fstpl
and
lret
sub
xchg
mov
jmp
sub
sub
mov
add
dec
push
xor
lea
fnstenv
fs
xor
rcrb
test
cmp
lret
pop
push
or
out
mov
pop
or
push
fnclex
repz
and
cmpsb
mov
cmp
cli
xor
xchg
and
cmpsl
sub
test
cmp
aaa
adc
cmp
outsl
shrb
and
jnp
pushf
xchg
fisttpl
jne
ret
dec
cld
cmpsb
or
xor
mov
sbb
lods
les
fidivrs
pop
imul
movsl
and
daa
mov
mov
sti
add
sbb
add
jne
dec
insb
iret
bound
inc
test
out
and
mov
dec
inc
je
cld
cmp
loopne
sub
cli
xchg
mov
push
sub
in
int
add
jmp
popa
ljmp
fidivrs
jp
sbb
fwait
or
arpl
inc
cmpsl
cmp
mov
adc
hlt
clc
pop
insl
or
lahf
icebp
mov
rolb
fwait
outsb
mov
ljmp
jns
jge
cltd
jne
rclb
cmovbe
mov
inc
jo
gs
or
scas
aas
dec
ds
sbb
pushf
lods
xor
jns
pop
dec
jg
jle
in
lahf
mov
cmpsl
add
mov
mov
mov
into
pusha
inc
or
ds
not
cmp
pusha
sbb
cmp
lods
cmp
lret
mov
xor
dec
xor
xlat
mul
jge
push
lret
es
rorl
and
bound
mov
ret
xchg
nop
faddp
lret
in
aad
jo
aaa
pop
outsb
add
ds
dec
adc
sarl
enter
fisubl
xor
stc
xor
data16
xchg
lcall
stos
mov
fdivl
inc
or
stc
fwait
aad
jg
cmpsb
sar
imul
sub
sbb
enter
loope
imul
fs
mov
decb
cltd
and
repz
jo
imul
lds
nop
inc
cmp
pop
mov
out
data16
mov
xor
xchg
mov
inc
pushf
sub
test
sub
xchg
test
daa
fcoms
mov
cltd
mov
mov
and
out
jge
adc
sbb
lods
sub
divb
lret
mov
pop
inc
xor
mov
mov
mov
scas
cmpl
push
pop
lods
out
ret
xchg
sbb
jp
ljmp
mov
mov
ds
pop
aas
loop
hlt
xor
mov
xchg
mov
loopne
jecxz
shll
testb
clc
in
ds
push
jno
les
push
sti
and
xor
mov
sarl
inc
push
call
rcr
cmp
dec
mov
test
imul
aas
in
int3
pop
or
notl
lret
pushf
mov
inc
pop
pop
pop
mov
adc
jno
push
push
inc
iret
xchg
or
mov
sub
hlt
adc
outsb
jecxz
stos
cmp
sbb
test
frstor
push
pop
ret
outsl
pop
loope
or
shll
mov
pop
cmpsl
shll
out
jns
in
gs
sbb
or
repnz
out
sub
inc
out
cli
subl
movsb
push
bound
mov
into
mov
fs
aas
jg
mov
lock
jb
into
repnz
jno
push
mov
sub
cmpsb
mov
jae
or
jle
jl
es
and
adc
movsl
push
mov
outsl
bnd
mov
out
mov
rorb
aas
subb
aaa
ds
add
adc
in
push
pop
into
mov
sti
bsr
xchg
mov
cmp
mov
sub
int3
lcall
sbbb
cmpsl
cmp
fisttps
call
push
xchg
mov
push
cmpsb
mov
push
ret
cmp
or
sub
cs
lret
mov
scas
pop
adc
xchg
dec
push
add
gs
sti
lret
xor
loopne
iret
ja
mov
aad
inc
adc
out
insl
mov
cmp
sbb
adc
cmpsl
data16
scas
fs
push
scas
out
mov
lret
xor
mov
xchg
loopne
sahf
xchg
pop
pop
dec
je
lods
pushf
sbb
jmp
loope
iret
adc
lahf
pop
dec
adc
test
mul
out
xorb
fdivrl
pop
adc
ficompl
cmp
adc
imul
ret
pushw
push
arpl
scas
fwait
imul
cmp
xchg
aas
dec
aad
xor
add
in
stc
mov
add
push
bound
test
xchg
mov
mov
xor
fs
push
sahf
stc
and
mov
popa
dec
outsb
dec
mov
push
and
mov
push
shlb
mov
jne
leave
jb
adc
lret
test
pushf
dec
shlb
mov
pushl
cwtl
lahf
js
out
mov
aas
in
cltd
jae
test
inc
pop
pusha
popa
push
jp
and
or
mov
or
sbbb
imul
shlb
sub
lds
push
add
pop
cld
cvttpd2pi
inc
pop
arpl
jp
icebp
adc
fs
clc
xchg
and
arpl
pop
jg
and
mov
enter
push
xor
fisubrl
popa
mov
jg
clc
xchg
loop
outsl
cltd
mov
jb
cmp
add
notb
ret
jb
das
pop
ficoml
movsb
mov
jp
cmpsb
cmp
data16
and
je
clc
cli
scas
jmp
jo
loop
push
int3
jg
bnd
mov
fwait
lock
mov
adc
cld
pop
xchg
int
shr
dec
mov
mov
ret
sbbb
fwait
mov
inc
in
mov
mov
dec
add
push
je
adc
icebp
popf
xchg
jmp
call
mov
or
xlat
negl
dec
xchg
xor
sub
les
fwait
jmp
es
cltd
mov
loope
push
pusha
stc
rorb
sti
loop
shll
xor
enter
addr16
cmpsl
insb
inc
out
jbe
jl
adc
jno
outsb
scas
mov
mov
scas
loope
insl
xor
or
sti
test
xchg
arpl
push
mov
mov
iret
lods
fsubrl
std
ja
push
mov
sarl
xchg
pop
inc
ret
lods
cmp
inc
pop
pop
jb
mov
push
lret
cli
mov
sub
push
jo
ss
cwtl
mov
ret
xchg
fsts
mov
das
enter
jg
mov
mov
ret
scas
jo
setns
mov
mov
sbb
mov
nop
mov
push
out
lods
adc
add
and
mov
es
push
cli
mov
mov
mov
scas
dec
inc
rcr
adcb
ficoml
nop
mov
aam
jbe
xchg
scas
ljmp
dec
dec
sarb
adcb
xchg
pop
and
or
sub
sbb
cmp
mov
mov
mov
insl
xchg
stc
repz
mov
imul
mov
adc
sub
fldt
fsubrs
lods
mov
orl
adc
inc
or
shl
rcrl
pusha
fwait
xchg
dec
push
sub
inc
xchg
test
mov
xor
inc
cmpsb
jle
lock
ret
xchg
xchg
xchg
or
dec
push
cld
clc
icebp
push
clc
test
xor
pushf
xor
iret
jns
xor
lds
movsl
cmp
out
xchg
inc
xchg
fcmove
popa
in
xor
out
loope
mov
cltd
inc
dec
cld
imul
imul
push
jns
xor
or
sbb
ret
ss
inc
divb
insl
ficomps
adc
pop
gs
inc
stc
dec
shl
cwtl
lods
cwtl
pop
enter
movsb
fmull
push
dec
popf
inc
add
sbb
adc
push
cmp
adc
jmp
mov
mov
push
sbb
add
cltd
adc
fcoms
shrb
into
call
xor
push
push
popf
xchg
imul
rolb
jle
bound
loope
lret
mov
mov
shlb
push
popa
cmp
pop
movsb
scas
sbb
daa
mov
and
inc
insl
pop
cmp
rcrl
cmp
xchg
movsl
mov
into
mov
clc
test
popa
into
xor
data16
aam
int
or
sbb
out
cmp
push
dec
test
jle
lods
out
or
shlb
cmp
xor
testl
in
sub
or
pop
push
pop
nop
jne
mov
mov
xor
dec
in
rolb
sahf
sub
push
inc
lods
jle
das
adc
push
shlb
lea
mov
adc
xor
rorl
push
mov
jno
add
sub
iret
data16
in
fadds
mov
mov
lcall
movsb
cmp
add
sbb
and
xchg
jecxz
je
je
and
mov
jb
lods
stc
es
imul
aaa
scas
lds
pop
add
xor
or
mov
xchg
jns
cmpsb
stc
mov
popf
xor
es
cmp
jecxz
add
faddl
xchg
xor
sahf
push
jne
fwait
xor
pushf
addr16
jbe
mov
sbb
repz
movsb
cmp
sub
aas
imul
ds
in
sub
leave
in
out
es
push
imul
iret
clc
push
fchs
call
outsb
cs
test
xchg
push
cli
push
mov
xchg
sub
or
xor
add
scas
das
mov
jle
loop
pop
jecxz
scas
inc
push
ret
push
pushf
outsl
adc
mov
adc
leave
clc
pushf
or
mov
dec
cli
scas
or
insb
push
adc
add
dec
mov
cmc
push
lea
imul
shrl
stos
into
or
rcrb
icebp
and
lods
add
sub
cli
aas
int3
js
mov
sbb
les
inc
ret
mov
dec
cmp
inc
push
repz
in
jo
inc
test
cmpl
push
pusha
inc
fwait
mov
sarl
push
lcall
jne
out
mull
in
xchg
or
in
stos
stc
adc
jmp
lods
or
std
mov
cld
dec
cmp
inc
jbe
or
xchg
add
push
lods
add
ja
add
sbb
mov
sbb
leave
cmpsb
aaa
pusha
mov
out
cld
faddl
icebp
xlat
mov
xchg
push
movb
push
pop
mov
pop
mov
es
sbb
icebp
in
fwait
dec
or
sub
or
pop
into
cmpsb
jp,pn
cmp
or
icebp
xchg
sub
push
popf
bound
inc
sub
mov
mov
mov
cmp
jbe
and
es
iret
ret
pop
inc
cld
repnz
lcall
jo
sub
mov
push
mov
loope
or
lret
mov
and
push
xchg
xchg
push
call
mov
popa
dec
adc
sbb
pushf
dec
arpl
push
push
mov
fbstp
lods
loop
aaa
inc
mul
insb
xchg
jbe
gs
js
scas
mov
fisttps
imul
mov
test
sbb
ljmp
mov
jp
adc
jle
jg
jg
mov
pusha
adc
in
subb
xchg
repnz
xor
xchg
push
aad
xor
call
push
push
and
push
sub
mov
scas
pusha
mov
in
pop
lahf
lock
cmp
inc
fwait
ja
push
sti
mov
mov
fnsave
in
dec
in
cmp
rolb
fsubs
sbb
lds
cmc
pop
xchg
sub
cmpsl
in
cld
ficoms
add
ja
test
mov
adc
inc
sub
sub
inc
push
jle
loopne
pop
jno
mov
xchg
or
ret
or
adc
js
sar
call
rcrl
and
push
xchg
jnp
ret
gs
fisubl
mov
es
inc
cmp
test
lea
cwtl
fcomps
adc
and
lods
cmp
rolb
je
xor
pusha
rolb
xchg
in
shl
popf
aaa
lcall
fwait
inc
mov
movsb
jp
stc
jle
outsl
push
pop
mov
out
pop
push
popa
mov
and
add
std
jle
cmp
mov
xor
push
mul
cmpsb
scas
ja
int3
and
xchg
jp
fadds
out
dec
mov
and
int3
mov
cmp
push
or
mov
mov
cmp
or
pop
cli
outsb
stos
out
adc
call
mov
in
outsb
adc
push
pop
fwait
lea
xchg
popf
cmp
cltd
shll
push
aam
or
mov
sbb
cs
sub
or
jno
push
adcl
shlb
or
fisttpl
leave
jl
ficomps
ss
and
pop
sahf
mov
cmp
mov
leave
mov
lods
bound
and
pop
sbb
stos
add
addb
test
dec
add
push
aam
scas
push
jo
jecxz
sti
sar
cmp
push
lahf
pop
sbb
inc
sbb
mov
jb
outsb
sub
ret
dec
mov
loop
fcoms
lahf
or
xchg
jge
cmpsb
test
ret
out
repz
lcall
popf
adc
mov
sub
push
mov
push
aas
adc
lret
sub
xlat
movsb
sbb
mov
inc
std
push
push
mov
mov
adc
inc
sub
pop
daa
dec
pop
jnp
imul
out
xlat
mov
cmpsl
lret
xchg
sti
xchg
ja
or
inc
sub
pop
daa
dec
pop
jnp
imul
out
xlat
mov
cmpsl
lret
xchg
sti
xchg
ja
push
add
cmpsl
pop
daa
and
jg
imul
out
daa
mov
mov
xchg
repnz
packsswb
cmp
or
pop
aaa
dec
pop
sti
xchg
jge
fadd
mov
js
decb
pop
test
jp
mov
ja
inc
mov
fildl
xor
mov
mov
mov
mov
xchg
jp
or
or
sub
dec
cs
xor
pusha
ljmp
inc
stos
push
mov
pushf
jb
std
adc
add
xor
and
aas
stc
push
lds
out
aaa
fdivrs
sub
psubd
test
int3
xchg
int
clc
stc
adc
adc
ret
movsb
dec
cmp
test
sub
jp
jmp
in
xor
sbb
test
flds
mov
int
push
and
sbb
addr16
push
sub
fwait
das
xor
out
stos
xchg
pushl
movsl
fs
pop
sub
or
or
aam
adc
pop
and
adc
daa
pop
add
mov
movsl
fstl
xor
aam
les
ss
and
into
mov
leave
stc
lods
aas
inc
mov
cs
xchg
sbb
pop
cmpb
sub
push
mov
adc
jp
test
mov
test
jp
or
sbb
sub
and
repz
addb
xlat
dec
shrl
loope
lock
orb
jnp
inc
mov
fidivl
jp
or
adc
movsb
and
nop
or
or
mov
popa
clc
add
pop
lcall
xchg
push
xchg
aas
pushf
cmp
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
fucomp
cld
js
sbb
and
cli
repnz
dec
out
add
jns
leave
insb
into
aaa
pop
or
popa
jne
sbbb
pop
xor
lds
sbbb
push
or
dec
fwait
mov
and
test
push
dec
sahf
mov
mov
cmp
xchg
jo
ffreep
mov
mov
les
insl
or
daa
add
xchg
jb
sti
mov
fimull
cli
sahf
leave
jl
jnp
jb
rclb
in
test
test
popf
ficoml
aaa
adc
sub
push
mov
ss
sbb
fsincos
jp
out
popa
pop
adc
jnp
mov
push
test
addb
fdivs
sub
sti
pushf
cmp
scas
fs
lea
push
mov
push
mov
dec
fwait
nop
add
or
cmc
push
mov
sarl
sbb
mov
cli
call
fs
and
std
int
dec
repz
pop
ljmp
loopne
mov
xchg
fbstp
test
xor
dec
outsb
stc
push
loopne
cmc
pusha
pop
mov
rol
jbe
cmc
outsb
cmp
push
jle
mov
fimull
fistpl
imul
popa
xor
out
inc
jl
movsl
dec
xchg
dec
adc
out
out
insb
jbe
loop
push
pop
add
mov
jmp
jmp
jecxz
and
fdivl
js
mov
cmp
enter
addb
std
mov
and
arpl
xchg
sar
xchg
ret
mov
dec
pop
and
cmp
ds
repz
shll
push
ss
mov
or
enter
ljmp
scas
or
inc
and
ffree
mov
mov
orl
xor
mov
sub
add
inc
fsubs
mov
lock
aas
push
inc
and
sub
movsl
jae
sbb
loop
mov
push
xchg
stos
movsl
sbb
in
add
cmc
inc
cld
xor
fldl
popa
adc
jo
xchg
mov
into
fsub
test
or
imul
lret
call
adc
pop
inc
movsl
out
test
arpl
ret
aam
push
movb
imul
xchg
xor
push
int
icebp
add
loopne
mov
mov
pop
mov
test
fmul
cwtl
dec
jnp
lcall
stos
dec
jnp
ljmp
mov
adc
sub
cmp
out
jae
psadbw
jmp
lods
fdivrs
lea
mov
addr16
cmp
paddq
roll
lea
gs
mov
hlt
cmc
outsb
mov
xchg
sbb
out
xor
xchg
clc
xor
jbe
aad
inc
fwait
rolb
sub
add
xchg
push
mov
sbb
inc
cmp
push
cmp
lret
movsb
sub
and
js
mov
push
mov
loopne
ss
pop
sahf
daa
loope
add
leave
mov
mov
outsb
sbb
adc
add
mov
pushl
pop
pop
lods
mov
and
out
std
cmpsb
jl
lock
shl
mov
cwtl
push
arpl
xchg
mov
adc
jmp
pop
outsl
mov
sub
xchg
enter
call
pop
sbb
adc
dec
sub
pushf
push
lods
test
scas
out
mov
pop
clc
pop
mov
daa
insb
mov
xor
das
xlat
and
jb
sub
lret
pop
xlat
cmc
jns
mov
xor
je
aaa
out
sub
pop
in
mov
lock
pop
mov
xor
sub
and
mov
mov
sub
jmp
je
push
mov
fiadds
xchg
sti
push
dec
lds
push
mov
in
jno
xlat
xor
mov
xor
lret
mov
sahf
inc
mov
mov
mov
mov
test
jbe
cmpsb
pusha
lahf
rclb
and
or
movsl
jnp
loope
insl
insb
adc
push
mov
sbbl
xlat
pop
pop
jmp
lods
mov
cmp
mov
and
xchg
push
jge
rcr
xchg
mov
mov
push
xchg
xchg
mov
fimull
xor
ds
mov
fsub
jne
add
int3
xchg
pop
pop
mov
jecxz
arpl
pop
adc
pop
lret
mov
aaa
shrb
xor
push
inc
xor
inc
mov
ljmp
mov
rcrl
push
in
cld
dec
jmp
add
sbb
mov
ja
insl
add
mov
xchg
stos
pop
ljmp
pop
popf
mov
rcr
cmp
jecxz
pushf
and
repz
dec
pop
cmp
jne
ss
in
jo
mov
inc
cmp
dec
ljmp
mov
popl
jecxz
pop
cmp
pop
adc
fisttps
or
cmpsb
add
mov
mov
je
xchg
mov
fwait
mov
inc
das
mov
sbb
push
xlat
cmpsl
jno
adc
inc
out
push
jne
fwait
jb
fldenv
add
add
adc
jae
pop
in
imul
cwtl
jno
hlt
lds
adc
dec
inc
adc
cmp
mov
dec
push
sub
mov
mov
and
sub
cmc
cltd
or
sub
mov
out
loope
cmp
out
lea
dec
sti
jb
or
dec
out
pop
fimuls
aaa
ljmp
aad
and
fstpt
test
sub
pop
dec
sbbb
iret
insl
xor
loope
mov
pop
cmpsb
pop
std
test
dec
aaa
dec
push
or
cmp
add
mov
xchg
adc
add
fmul
dec
gs
lahf
nop
xor
add
ja
mov
rolb
ss
jg
lods
pop
mov
inc
push
xchg
sub
sahf
sbb
push
rcll
adc
lret
cld
inc
add
and
xchg
mov
into
xor
jmp
cli
or
push
cli
xchg
and
mov
int3
xor
jns
scas
and
shr
add
mov
js
pop
shr
or
and
ss
mov
pop
jns
loope
sahf
pop
jecxz
cwtl
sub
addr16
imul
sbbl
add
mov
sbb
repz
xchg
mov
shrb
jb
dec
dec
pop
mov
dec
xchg
popf
mov
outsb
int
fidivl
in
test
ret
out
sbb
cld
fiadds
mov
cmpsb
jp
mov
jg
gs
dec
clc
or
add
movsb
incl
aas
cld
pop
mov
mov
push
push
mulb
pop
dec
or
mov
movsb
pop
mov
dec
push
adc
mov
jge
sbb
mov
bound
ds
rcl
fsubrl
aas
push
dec
test
push
std
add
adc
mov
test
cmpsb
inc
in
pop
mov
out
lods
xchg
das
xlat
mov
inc
xor
and
cmpsb
stos
sbb
pop
mov
ja,pt
push
out
sbb
inc
call
loop
add
jl
repz
repnz
xchg
mov
dec
jo
add
pop
mov
aam
das
dec
cld
mov
shrl
cmp
bound
sub
mov
movsb
and
push
mov
pop
mov
repz
ror
pusha
sbb
inc
add
mov
test
adc
adc
mov
stc
imul
neg
pop
sbb
sbb
mov
enter
je
loope
filds
cmp
or
test
inc
push
xor
push
fisttpl
jo
insl
cltd
fsubr
aaa
fimull
and
out
pusha
sub
syscall
rcrl
fisttpl
dec
fistl
mov
gs
adc
sbb
jb
out
sub
dec
in
andb
mov
xchg
cltd
test
sub
mov
push
add
add
js,pt
sbb
insb
std
outsl
push
jmp
nop
pop
gs
loopne
scas
xor
imul
jno
sbb
or
inc
mov
and
pushl
lock
mov
fwait
jne
repnz
flds
shrb
cs
cmp
daa
sarl
jmp
das
adc
lods
mov
or
dec
adc
cmp
mov
inc
shrl
lea
popf
pop
in
loope
xor
bound
loopne
xor
out
into
cmpsb
dec
xchg
and
in
arpl
jle
add
popa
xchg
jp
dec
cmpsb
shr
cmpsl
subl
sarb
inc
cmp
dec
pop
lods
das
mov
imul
xchg
mov
popa
xchg
mov
push
adc
arpl
aad
sahf
sbb
int
sbb
inc
roll
mov
and
fimuls
bound
mov
mov
fsubrs
dec
mov
xor
mov
insb
xchg
sbb
add
cmp
nop
mov
rcr
jb
fidivrs
pop
pop
js
sbb
enter
dec
aas
and
xchg
push
sbb
out
leave
xor
fcomps
icebp
jae
sub
fs
call
orl
orb
in
sahf
jne
add
lds
mov
push
lret
mov
bound
inc
sub
enter
jbe
cmp
icebp
cmpsl
movsb
sbb
pushf
mov
sub
inc
and
jg
and
bound
mov
hlt
fdivl
in
push
jge
mov
test
dec
jle
stc
sbb
call
repz
mov
push
ss
testl
push
add
aas
xor
ja
cmpsw
pusha
xchg
cli
add
movsb
dec
hlt
inc
xlat
gs
insb
lea
push
pop
decl
scas
dec
push
in
sub
mov
loope
loop
push
test
mov
push
sbb
and
mov
stos
stc
mov
pop
loope
ficoml
adc
loope
sub
cltd
or
clc
mov
mov
setne
mov
or
outsl
inc
in
cmp
dec
aam
daa
adc
push
dec
out
mov
sbb
jns
lea
mov
mov
push
call
pop
or
and
adc
loopne
jo
icebp
test
outsl
push
arpl
nop
mov
jmp
dec
js
dec
xchg
mov
cs
push
mov
sub
jne
fcomps
xor
inc
popf
mov
movsb
sahf
or
fstpt
push
lock
pop
push
xor
cmc
cmp
clc
mov
aas
loop
cmpsb
dec
jno
xlat
xor
scas
insl
test
sub
jns
das
jle
in
lea
test
lock
jno
mov
out
jnp
test
pop
test
jge
in
cwtl
lahf
dec
leave
movsl
cltd
jmp
sbb
dec
dec
es
xchg
fs
or
cmp
add
push
and
jp
xchg
int3
rorb
fimuls
sub
push
rcrl
inc
dec
or
les
jg
mov
push
repnz
mov
test
mov
shlb
outsb
popa
sbb
fnstcw
pop
adc
fwait
mov
mov
jle
stos
jbe
mov
inc
mov
mov
xchg
xorb
pop
xor
and
cmpsb
lds
imulb
loope
sub
sbb
cs
mov
outsb
cmpsb
jg
push
mov
scas
ret
xchg
inc
cmp
jmp
cltd
popl
or
push
cwtl
jns
xor
xor
pop
or
adc
xchg
js
pop
std
xchg
inc
iret
push
jecxz
inc
test
test
adc
mov
aad
xor
pop
lock
dec
sub
cwtl
fs
jmp
adc
mov
inc
xor
rolb
lea
outsb
sbb
adc
push
decl
mov
add
jb
es
movsl
mov
stos
test
sub
push
dec
push
inc
dec
and
scas
movsb
mov
repz
dec
pusha
and
ficompl
mov
pop
xlat
cld
mov
inc
adc
lahf
inc
loop
loope
dec
adc
push
fs
stc
test
sarl
leave
xchg
in
sub
shll
jmp
fimuls
jmp
clc
jo
pushf
xchg
loopne
jo
je
test
dec
fildl
dec
mov
sbb
daa
jle
fstp
fimull
lea
mov
sti
sub
test
in
std
lea
ret
js
and
push
adc
pop
mov
push
adc
mov
je
fstl
pushf
xchg
sbb
xchg
add
ljmp
xor
inc
jl
arpl
out
sbb
in
das
jne
jnp
shll
sbb
or
inc
mov
aam
aam
xchg
inc
jmp
jp
inc
or
in
out
aas
mov
insb
lahf
lds
fwait
push
cld
xchg
dec
mov
ret
push
pop
pop
add
push
mov
jnp
push
jbe
into
aaa
lea
add
mov
mov
inc
ljmp
fsubs
call
xchg
jbe
test
sub
insl
push
imul
jl
pop
in
mov
adc
xchg
xor
xor
fildl
subl
rorb
xchg
mov
cmp
data16
xchg
mov
push
div
cmc
icebp
dec
mov
mov
bound
in
dec
cmp
ret
push
leave
ret
mov
fisubl
and
sub
repz
std
inc
mov
mov
xor
inc
or
outsl
or
movsb
xchg
mov
addr16
movsl
jmp
test
lods
mov
dec
mov
ljmp
pushf
std
mov
push
and
rcl
and
repz
ds
jg
mov
rcrb
call
lahf
test
ds
sbb
mov
mov
stc
fisubrs
push
dec
mov
jo
adc
cmp
mov
clc
mov
jle
test
pop
in
aam
mov
add
sbb
outsb
loopne
and
popa
data16
add
mov
roll
dec
es
dec
mov
push
mov
push
pop
hlt
xchg
std
jbe
xchg
or
shll
dec
mov
xchg
js
cmp
fwait
sbb
stos
cmpsl
subb
sbb
mov
and
in
lret
adcb
repz
mov
cs
inc
xchg
jbe
mov
dec
jno
fnstsw
push
mov
cmc
jecxz
sbb
lock
movsb
pop
xchg
sub
repnz
adc
negb
push
dec
sbb
jns
dec
add
lds
lods
push
sub
dec
dec
pusha
pop
sub
mov
int3
adc
or
outsl
dec
push
jno
out
das
sub
shll
lcall
adc
push
sbb
into
lcall
aas
insb
and
icebp
pop
out
sbbb
jo
add
mov
mov
mov
es
push
pop
aaa
mov
push
inc
loope
stos
jb
pop
xor
jp
lret
mov
ds
stos
mov
or
mov
mov
and
mov
mov
stos
aaa
ficoml
dec
push
sahf
inc
cltd
sbb
and
data16
mov
cwtl
stos
xchg
sbb
adc
push
xor
mov
addr16
testb
and
enter
out
jne
sbbb
or
xchg
test
cld
dec
cmp
in
or
or
outsl
je
mov
jmp
out
rcrl
xchg
cmp
sti
std
aaa
rorl
push
add
sub
mov
out
test
push
sbb
jns
pop
or
pop
incl
mov
int3
cmp
aam
and
push
daa
mov
jae
adc
imul
pop
cmpsl
adc
cmp
loopne
out
inc
mov
lret
push
or
jo
jp
imul
jae
movsl
push
add
mov
xor
mov
imul
addr16
leave
fdivrs
imul
mov
jl
out
xchg
fwait
or
sti
mov
or
mov
dec
lret
sbb
or
f2xm1
fbld
int3
cmp
mov
test
push
xchg
into
aas
sub
or
stos
fwait
mov
jns
pop
adc
std
movsl
and
dec
xor
dec
jnp
int3
mulb
sbb
pop
fcomip
std
cmp
sbb
scas
aam
dec
dec
jno
jb
rol
inc
sbb
adc
arpl
mov
inc
in
dec
mov
mov
mov
das
out
fisttpll
lahf
xchg
xchg
shl
call
into
in
sub
adc
lret
push
daa
push
jmp
mov
add
pop
push
and
xor
negb
fisubl
add
sbb
xchg
lods
mov
sub
adc
inc
psubsw
mov
rorl
add
sub
fcoms
gs
lea
adc
mov
jb
and
jb
hlt
enter
push
sub
cmpsl
or
mov
int
aad
dec
push
addr16
iret
or
repz
xchg
adc
das
jae
pop
sbb
in
mov
sbb
cli
mov
aam
mov
mov
pop
or
dec
jo
add
ljmp
adc
pushf
in
popa
dec
lds
push
xchg
sbb
addr16
pop
cmp
fcompl
xor
or
lods
mov
jp
mov
lea
shr
mov
movb
insl
rep
cmp
sbb
mov
jne
nop
mov
mov
jns
push
xchg
pop
mov
cli
ljmp
sub
jmp
sbb
in
int3
push
lahf
mov
or
mov
mov
xchg
sub
adc
cmp
outsb
lea
adc
in
dec
inc
popf
dec
add
cmp
push
in
test
mov
cmpsb
clc
mov
inc
add
and
jge
jmp
xor
outsb
lea
pop
jne
fildll
popa
adc
dec
clc
ds
add
cltd
dec
mov
into
jb
outsl
push
outsl
lds
out
xor
ret
aam
jne
loope
ret
pop
adc
adc
sbb
and
add
jno
cmpsl
adc
clc
ss
pop
jnp
add
popa
stos
fcoms
or
cli
pop
xchg
dec
push
inc
mov
lea
cmpsl
test
pop
sbb
or
mov
push
adc
insl
in
or
mov
fildl
xchg
cmp
add
jbe
push
dec
inc
pop
repnz
mov
pop
adc
jae
in
sbb
xorl
pop
or
test
mov
pop
adc
jl
fldln2
imul
out
out
rclb
cmpl
cwtl
cltd
mov
cmp
pop
sub
sbb
mov
ss
mov
lret
in
fiadds
lcall
xchg
inc
add
jge
iret
or
mov
andb
cli
stos
cmp
incl
lods
mov
outsb
call
fiaddl
mov
stos
cld
dec
mov
in
popf
sub
jp
push
mov
mov
sarb
ret
mov
ljmp
fisubrl
xor
imul
adc
mov
fdivl
mov
or
inc
dec
pop
mov
mov
dec
inc
push
aaa
out
bound
add
imul
jg
mov
popa
cmp
ss
inc
sub
xchg
outsb
xor
jge
stos
cli
lea
jo
adc
out
aaa
jge
cmp
lret
mov
cmp
ffree
or
xor
jl
mov
adc
pop
outsb
scas
mov
xlat
mov
bound
xor
mov
push
lea
inc
or
xchg
stc
pop
mov
cld
sub
in
ret
pop
mov
cmp
nop
call
popa
outsb
jb
sti
jecxz
pop
xor
push
fwait
cltd
xchg
call
mov
dec
dec
insl
add
mov
popa
and
fmuls
insb
adc
push
hlt
cs
inc
jmp
mov
inc
sub
clc
stos
lods
repnz
push
in
faddl
addr16
push
fisttps
iret
xchg
xor
aad
loope
fidivs
dec
xchg
mov
adc
push
xor
jno
jbe
cld
push
jo
enter
inc
inc
mov
or
pop
sub
out
adcl
xchg
in
mov
xchg
cmp
mov
dec
xchg
cmp
xchg
mov
cmpl
mov
imul
f2xm1
mov
sub
loope
jecxz
insb
xlat
xor
inc
clc
lods
sub
mov
and
roll
adc
mov
cmp
sub
fs
fsubl
cltd
cltd
and
seto
inc
jp
pop
pop
jb
mov
jl
enter
das
xor
je
rcll
push
lea
scas
cltd
test
cmp
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
stos
push
mov
test
jp
or
sbb
sub
cmp
xor
add
adc
mov
inc
scas
gs
mov
xchg
jp
or
sbb
cli
fcmovne
lret
jo
ljmp
mov
adc
add
xor
and
sub
push
aas
arpl
mov
mov
lret
jecxz
adc
add
xor
and
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
add
xor
and
jp
dec
jae
arpl
xlat
mov
adcb
jecxz
adc
pop
jns
push
mov
push
out
es
adc
dec
inc
sti
lcall
push
xchg
faddl
mov
pop
jnp
jl
mov
cs
mov
mov
ret
dec
xor
imul
outsb
sarb
lock
dec
shlb
scas
or
push
push
cmp
push
push
mov
xor
dec
mov
cmp
or
outsb
aad
dec
cld
pusha
mov
push
jno
dec
pop
loopne
outsl
inc
aam
dec
adc
ret
clc
aas
sub
outsb
aad
add
dec
push
cli
ficoml
push
roll
jb
fbld
lret
loop
adc
add
xor
and
jp
dec
jae
arpl
mov
mov
lret
mov
add
jg
push
aas
xor
cmp
mov
in
mov
mov
icebp
mov
pop
xor
sub
push
daa
dec
add
arpl
jmp
test
mov
test
xchg
fidivl
arpl
inc
push
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
add
xor
and
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
fs
push
or
int
sbb
enter
dec
or
pusha
fldl
xor
cwtl
dec
int3
xor
jnp
fcompl
xlat
cmp
add
adc
fbld
dec
jno
stc
aaa
add
mov
add
stos
adc
xchg
mov
jbe
inc
in
cmp
idivl
insl
nop
xor
or
cmp
or
sbb
pop
js
repnz
outsl
fisubrl
push
mov
dec
xor
jno
push
into
or
lock
adc
and
data16
and
add
push
scas
add
test
mov
inc
out
lahf
frstor
scas
aam
into
xor
repnz
sub
fdivr
mov
fstps
mov
add
rolb
lods
call
das
cs
xor
push
inc
shlb
movsl
adc
in
repnz
cld
pop
pushf
or
xorb
movsb
pop
lret
dec
fdivl
push
clc
xor
mov
aaa
lret
lea
stos
and
mov
push
mov
or
or
popf
mov
sub
mov
lods
add
or
ret
jmp
fldt
mov
sub
or
xorl
pop
inc
jge
or
out
imul
fiaddl
push
and
popf
add
aas
fildll
jns
dec
out
out
nop
aas
das
test
jnp
lods
mov
ret
movsl
loope
cwtl
fcompl
sti
adc
cmpsl
lret
push
pop
stc
adc
jnp
jecxz
inc
lcall
inc
addr16
movsl
push
jnp
pop
aaa
fldcw
iret
test
and
xchg
and
les
arpl
filds
or
xchg
push
stos
pop
and
inc
out
push
adc
cld
aas
dec
lods
xchg
sbb
shrl
mov
push
jecxz
popf
pop
push
test
cmp
jle
sbb
lcall
jne
test
in
push
jne
cmp
mov
sbb
pop
lahf
aas
push
xchg
test
iret
inc
xor
push
loopne
dec
loop
in
jge
mov
fcmovb
cmp
outsl
mov
sub
int3
or
hlt
pop
sbb
inc
arpl
stos
xchg
pop
add
jae
not
cli
mulb
cmc
cmp
pushf
push
sub
dec
push
je
xchg
mov
div
xchg
fwait
out
in
mov
gs
call
push
test
ja
mov
idivb
xchg
filds
cltd
adc
and
inc
mov
jg
add
adc
ret
cs
add
pop
pop
loopne
sbb
outsl
pop
rcrb
ret
aam
push
stos
and
scas
adc
cmp
js
es
lret
dec
fucom
mov
js
testb
daa
and
lret
ja
push
cmp
cltd
add
sti
jns
push
lret
mov
adc
lret
adc
push
xor
jp
ljmp
lds
inc
orb
jmp
aad
inc
cmp
mov
mov
pop
dec
pop
lret
and
pop
dec
rolb
lret
movsb
sbb
ror
mov
das
and
icebp
jle
loop
push
dec
sbb
test
sbb
inc
mov
sahf
jmp
cltd
insl
pop
xchg
xchg
xchg
inc
and
std
add
in
cmp
sbb
fdivrs
jbe
aas
and
mov
in
test
mov
pop
sbb
xor
pop
rcll
in
sub
xchg
mov
or
mov
lock
push
loope
xor
shlb
call
lods
stos
mov
xchg
lds
bound
ret
ja
and
dec
mov
adc
or
into
inc
dec
aam
xchg
sbb
fidivl
inc
imul
imul
cmc
ficompl
shll
inc
sahf
jne
subl
enter
roll
es
sarl
mov
test
fisubs
sbb
or
int3
pop
xchg
scas
xchg
mov
insl
inc
push
out
pushf
mov
inc
mov
cmp
sbb
cld
fistl
sub
push
cmpsl
test
call
push
outsb
pop
mov
mov
xchg
mov
adc
ja
pop
out
xor
push
or
das
jae
aad
stos
ret
nop
sbb
movsb
test
loope
mov
ficoml
or
nop
in
sbb
ss
xor
xchg
inc
cmp
mov
iret
cmp
jmp
std
mov
xchg
or
lds
pop
pop
jmp
lods
xchg
and
ds
mov
push
nop
cmp
xor
sub
sti
repnz
dec
fmuls
mov
pop
jb
mov
hlt
xor
xchg
js
imul
mov
mov
icebp
cli
cwtl
or
or
add
mov
xchg
mov
pop
pop
lret
xor
xchg
cli
in
clc
pop
idiv
mov
sahf
mov
hlt
xchg
pop
or
cs
and
cmp
pop
push
mov
dec
idivb
inc
ret
daa
int
ss
mov
push
mov
aas
mov
add
aaa
jae
mov
and
outsl
dec
sbb
ss
inc
mov
pop
popf
pushl
lahf
cs
aas
lahf
pop
insb
jbe
jle
cmp
pop
lcall
scas
adc
mov
in
pop
dec
ret
out
test
and
xchg
mov
jbe
lret
add
jl
dec
mov
in
or
pop
mov
cltd
cld
stos
mov
aas
das
sbb
xlat
sub
inc
cmpsb
pop
xor
adc
adc
jmp
xor
loop
push
incl
push
ja
sbb
mov
fcomi
jnp
xchg
cmp
sbb
les
icebp
xchg
lahf
fcompp
in
lret
or
pop
adc
xchg
xchg
out
cwtl
push
adc
ljmp
or
jl
push
lock
fwait
lret
popf
pop
mov
jno
cld
sbb
ja
lock
stos
imul
and
mov
xor
dec
rcl
cmp
shl
push
loope
ss
xchg
add
fnstcw
leave
in
loopne
xchg
sub
sub
sbbb
into
add
xchg
jae
push
add
into
out
addr16
lods
mov
fyl2x
stc
adc
inc
stos
mov
inc
std
mov
inc
aad
and
fsubl
adc
dec
cmc
xchg
pop
push
or
sbb
test
and
sub
kortestw
rcrl
cs
adc
add
cmpsl
out
xchg
or
sub
jb
fidivrs
push
lret
or
movsl
ret
sub
mov
insb
subl
outsl
xlat
sbb
push
mov
pop
mov
mov
enter
lret
mov
fldt
shrb
out
inc
inc
lods
outsl
cmp
iret
adc
imul
pop
into
mov
inc
or
and
sbb
push
mov
inc
cs
mov
adc
cmp
xor
ret
test
sbb
or
call
pop
sahf
js
push
pop
arpl
sbb
fs
jle
push
pushf
push
inc
jne
sbb
jle
stos
aad
aam
es
or
arpl
push
sbb
mov
in
mov
shll
cwtl
jb
ja
addr16
stos
js
nop
sysexit
mov
fcomi
push
sub
xchg
mov
dec
lods
pop
je
sbb
scas
dec
sub
xchg
pop
push
popa
push
sub
test
dec
pop
sbb
aaa
or
pop
movsb
arpl
fiaddl
mov
sbb
call
sbb
inc
mov
rcrl
mov
sbb
xor
cltd
lds
pop
sub
jecxz
push
addr16
dec
mov
cmp
mov
and
xchg
gs
cwtl
cmpsb
rcll
push
in
mov
leave
dec
sub
adc
ljmp
addr16
les
push
outsb
lret
dec
iret
ss
inc
mov
pop
xor
jge
mov
add
inc
lret
add
dec
addr16
int
inc
rcrb
sbb
and
fisubl
jmp
mov
imull
inc
xchg
mov
inc
scas
pop
pop
inc
mov
jge
cld
cld
jbe
ds
xchg
mov
pop
jae
insl
add
insb
xor
mov
cli
jl
pop
aas
dec
push
jecxz
popf
repnz
mov
lret
and
gs
fimuls
lds
pop
sahf
xor
mov
std
inc
rcll
fbstp
nop
xchg
push
pop
xchg
dec
loop
iret
cmp
scas
sbb
cmpsb
jmp
pop
sbb
into
dec
xchg
adc
mov
movsl
cmp
add
rol
scas
jne
pusha
and
dec
push
js
xchg
xchg
jno
pop
lds
fnstcw
mov
dec
in
stos
or
insl
ds
mov
aaa
call
ljmp
lods
lahf
cwtl
mov
shl
pushf
mov
push
pushf
ss
incl
je
sub
cltd
sbb
ret
dec
adc
xor
psubd
add
std
cmp
cmp
mov
subb
xor
inc
sbb
cwtl
psubd
dec
jmp
sub
fidivs
in
mov
dec
add
mov
inc
or
cld
fimuls
loop
mov
stos
aaa
lods
add
sbb
mov
mov
dec
jns
jmp
sub
cmpsb
xor
ficoms
cmp
jns
dec
lods
xchg
lahf
frndint
fnstenv
or
std
jae
mov
mov
mov
int
xor
out
adc
insl
hlt
into
std
hlt
mov
test
mov
ret
test
lret
cld
add
add
jne
jle
add
outsb
mov
ja
push
popf
clc
push
cs
and
jo
lock
sub
or
sub
sub
ljmp
int3
addl
adc
inc
or
cli
xchg
aaa
dec
enter
dec
cmp
lock
push
mov
add
fistpl
fbld
push
scas
out
notl
sbb
jg
mov
sbb
repz
fsubrs
adcb
push
loopne
daa
lods
mov
adc
push
fdivs
mov
aam
adc
jle
nop
jp
mov
pop
fdivs
dec
sbb
mov
popf
pop
cmp
out
cmp
nop/reserved
inc
rclb
test
lret
lds
es
popa
sub
xchg
mov
sub
mov
dec
cmpb
fadds
and
pop
sub
mov
cmc
xchg
jl
mov
push
into
dec
xchg
sahf
call
test
jne
arpl
ds
inc
mov
mov
test
add
icebp
cmc
in
hlt
imulb
cmp
cmp
imul
adc
mov
mov
aad
xor
jecxz
mov
and
add
mov
mov
jno
inc
fwait
test
bound
divl
stos
lcall
sahf
fstps
ja
cmp
cli
gs
in
mulsd
adc
repnz
inc
stos
arpl
dec
movsb
mov
mov
sarb
sbb
add
or
movsb
into
jmp
das
data16
cmpsl
xchg
mov
out
or
inc
lock
out
scas
out
or
cmp
in
sub
sahf
jmp
fnclex
cld
cmp
inc
lfs
jnp
push
mov
sbb
pop
test
push
idivb
sub
andb
adc
repz
and
data16
cmp
cmp
ja
pop
mov
pop
leave
lret
icebp
mov
and
lods
popf
jecxz
in
or
cmp
dec
nop
lea
and
push
repnz
mov
push
mov
sarb
cmp
dec
mov
or
mov
push
push
or
int
stos
negl
fbld
add
cld
sbb
jo
mov
aas
sub
xchg
es
or
gs
pop
loope
and
cmp
aas
cmp
mov
pop
popf
cmp
jns
pop
or
arpl
xor
in
jnp
and
popa
pop
daa
adc
sbb
xchg
mov
or
push
cwtl
mov
arpl
adc
pop
jno
mov
jae
push
aam
inc
sub
insb
pushf
fnstenv
lahf
push
push
dec
aad
xchg
ja
xor
jmp
mov
fldenv
loop
imul
mov
xor
sub
pop
shrb
xchg
mov
or
xor
push
hlt
cmp
fdivr
cmpsb
mov
mov
outsl
pop
lret
cmp
pushf
pop
mov
jle
je
lea
repz
mov
add
push
in
mov
xchg
add
xlat
sbb
pop
clc
jmp
sub
mov
test
shlb
adc
jno
mov
ficoms
push
js
adc
and
add
std
repz
iret
xor
jno
push
fsubp
pop
call
das
popf
pop
xlat
aaa
push
imul
pusha
aaa
out
lds
cltd
inc
sub
sbb
test
test
jo
adc
loop
xor
outsl
sbb
mov
jno
sbb
test
outsl
popa
jno
fisttps
jne
repz
nop
cmp
cmp
loopne
es
or
into
inc
or
test
xor
sahf
sbb
in
cmp
mov
cwtl
inc
push
int
jle
call
adc
add
jae
sub
je
pop
loope
loope
push
cs
rcrb
or
addr16
jbe
int
cltd
adc
xchg
mov
or
sub
fs
and
push
xchg
je
pop
cld
mov
out
cld
jge
xchg
inc
inc
mov
into
comiss
test
push
dec
inc
mov
std
mov
loopne
xor
icebp
das
push
lock
scas
cmpsl
pop
pop
cli
lea
pop
mov
out
add
ret
add
fs
ljmp
enter
movsb
das
out
mov
rorb
mov
and
sbb
inc
inc
aam
and
mov
and
jl
inc
ds
popa
jl
xor
add
pop
add
lahf
scas
mov
mov
jg
inc
fistpl
jne
decl
mov
movb
lret
push
push
inc
shll
lret
add
jmp
and
adc
loop
and
xor
mov
jp
lcall
inc
int3
and
mov
mov
mov
xchg
mov
out
dec
pop
lcall
les
inc
fs
cli
insb
xchg
mov
sbb
test
sub
mov
and
sub
xchg
mov
das
lods
jge
sbb
push
sarl
jle
xchg
sbb
inc
mov
pop
aaa
std
lret
testl
cmc
sbb
out
adc
cmpsb
jg
cwtl
sti
or
insb
fists
in
mov
movsl
mull
mov
das
push
dec
scas
xor
mov
or
ljmp
adc
cmp
pop
sar
adc
adc
adc
xchg
in
add
mov
sub
daa
add
push
xchg
fcmovne
inc
bnd
or
push
pop
or
add
or
cmpsb
inc
out
outsb
test
adc
adc
push
ljmp
jg
jle
lcall
push
mov
andb
stos
ljmp
int
or
out
sbb
flds
mov
mov
ss
stc
aam
ss
stos
cmpsb
and
shlb
das
cld
stos
or
clc
dec
or
outsb
add
pop
inc
jo
push
sub
stc
adc
push
add
pop
push
loopne
stos
inc
inc
aaa
aad
adc
pop
push
cltd
mov
cwtl
loope
inc
push
adc
je
mov
out
call
insl
mov
inc
sbb
loopne
adc
xchg
jmp
outsl
mov
mov
or
mov
popa
cmpsl
pop
jne
jge
clc
cli
cwtl
imul
push
dec
xor
ret
loop
dec
mov
sub
pop
mov
push
xor
mov
xor
mov
aas
lods
stos
jno
jmp
andb
mov
data16
xchg
popf
xor
adc
repz
push
push
out
repz
stc
movsb
push
dec
jnp
mov
jnp
enter
xor
notb
stos
lods
lods
ja
add
xchg
ficomps
and
arpl
push
xchg
cwtl
mov
inc
xor
push
test
sub
es
push
lahf
test
js
and
and
add
jae
dec
hlt
jo
jp
adc
lahf
adc
shll
jecxz
sbb
out
dec
pop
or
into
addb
or
bound
cmp
mov
popa
push
mov
int
jo
sbb
repnz
push
xor
xchg
pushf
and
push
fisttps
cmpsb
jp
xchg
push
sub
fidivrl
adc
ret
aam
lret
popf
or
push
das
je
or
cwtl
sub
fistpll
fsubrl
in
dec
insl
ds
mov
lcall
call
test
pusha
push
and
pand
insl
scas
leave
pop
fcmovnb
mov
jnp
test
in
mov
xchg
in
loope
jecxz
xor
pop
mov
cs
dec
mov
test
rorb
jns
jp
sbb
sub
aad
call
stos
xor
xchg
insl
aas
push
mov
and
jns
or
mov
cmp
add
cmp
ds
movsl
push
cmp
ja
xor
xor
div
pop
pop
imull
or
je
sti
xor
sbb
flds
insb
mov
jmp
lock
daa
push
push
std
cmp
push
das
sub
xor
movsb
addr16
add
test
call
xorb
fsubs
aaa
push
filds
inc
mov
fadds
int3
bound
sub
cwtl
jb
lret
push
iret
cld
in
mov
ja
in
in
dec
dec
push
jae
pop
xlat
dec
mov
inc
ret
lods
cltd
outsb
mov
mov
xor
mov
mov
add
pushf
cmpsl
mov
add
push
jecxz
jne
mov
cmp
xchg
cmp
lret
lock
mov
xor
and
scas
mov
mov
imul
mov
add
push
outsl
jmp
push
or
leave
scas
push
jp
das
stos
divb
outsl
cwtl
mov
test
stos
or
insb
movsl
lds
test
lea
rcrl
lcall
popf
add
xor
adc
mov
mov
add
inc
out
push
jp
jno
in
insl
push
or
cmp
icebp
mov
push
cmp
xchg
sub
dec
fsubs
pop
jne
fwait
and
rcl
mov
fiadds
jo
stos
mov
movsb
loope
sub
or
stos
ljmp
jb
jmp
and
out
ficomps
push
mov
and
cmc
insl
sbb
dec
pop
or
sarl
icebp
push
sbb
or
lcall
in
jno
mov
mov
push
adc
lods
fsubrs
xchg
adcl
push
cmc
insl
iret
inc
clc
lds
into
lret
sbb
daa
jmp
dec
mov
push
je
fcoms
dec
out
cli
insl
andl
lret
aas
add
jmp
pushf
push
sbb
jecxz
mov
out
or
sub
push
dec
jo
or
subb
mov
aam
andl
dec
push
mov
not
inc
or
daa
cwtl
lcall
subb
jmp
int
mov
cmp
adc
fnstsw
mov
pop
cmp
inc
cmpb
inc
jno
enter
in
jb
cmc
loop
cmpsl
fwait
mov
fwait
fdecstp
ss
rolb
jbe
xor
push
addr16
les
lods
je
in
sarl
adc
ds
xchg
dec
loope
out
and
or
enter
lcall
lock
inc
ret
mov
mov
xchg
inc
fidivrl
xor
push
xchg
ja
cmp
rcr
xchg
jge
xchg
pop
icebp
xor
and
imul
jae
and
mov
push
out
pop
popf
cwtl
js
pop
call
sbb
xchg
adc
and
scas
adc
sub
aas
cmp
std
pop
mov
jns
mov
cmp
or
xor
fwait
movl
flds
sub
xor
lahf
mov
inc
xchg
cmp
out
mov
pop
sbbl
add
pushaw
test
inc
stc
push
mov
xchg
xchg
sbb
dec
jne
mov
adc
stos
xchg
repz
pop
out
add
mov
sub
hlt
das
lods
mov
outsb
dec
mov
fcmovne
adc
testb
and
aaa
dec
jge
cs
sti
clc
stos
loopne,pt
lods
cmp
daa
pushf
enter
pop
ja
in
les
or
imul
sbb
bound
in
adc
pop
xchg
adc
xchg
cmpsl
sahf
jle
or
push
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
add
xor
and
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
orl
sbb
push
jp
dec
jae
arpl
mov
mov
lret
jecxz
adc
add
xor
and
jp
dec
jae
arpl
mov
aam
pop
jb
xor
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cli
fsubr
enter
call
hlt
subb
js
push
sbb
or
cli
fsubr
enter
call
lcall
dec
pop
jns
push
sbb
or
cli
fsubr
enter
call
lcall
imul
dec
push
cmp
push
outsl
pop
fs
movsl
xchg
mov
jae
and
mov
movsl
mov
and
jge
push
in
mov
popa
fadds
mov
and
xchg
push
dec
addb
mov
inc
adc
imul
dec
pop
jle
xchg
push
push
xor
mov
in
push
ljmp
cltd
mov
dec
mull
in
lds
push
cltd
dec
aas
sub
pop
xor
addr16
iret
test
cmpsl
cmp
filds
aad
dec
push
or
pop
adcl
add
xor
dec
movsl
or
cmpsl
pop
pop
cmp
enter
call
lcall
dec
pop
js
push
sbb
or
fcomps
test
fisttpll
push
pop
sub
sbb
insb
sub
dec
dec
dec
lahf
mov
movsb
mov
fucomi
int
out
fadds
pop
pop
dec
cmp
jge
sahf
jbe
jg
lahf
cltd
ljmp
stos
stos
mov
pop
push
pop
js
push
sbb
or
cli
fsubr
enter
call
lcall
dec
pop
js
push
sbb
or
cli
fmul
loopne
xchg
in
inc
insl
test
jno
jge
or
or
mov
addl
and
push
dec
cmc
dec
ja
or
xor
jecxz
push
xlat
mov
or
pusha
fdivs
push
mov
pop
test
sbb
push
cmp
es
iret
push
inc
and
cld
inc
or
je
adc
jne
add
fs
fiaddl
in
outsb
xor
cmpl
test
cwtl
repz
insb
push
mov
jb
cmpsl
gs
mov
popa
mov
pusha
xor
adc
add
cmp
rcrl
pushf
and
add
or
mov
inc
shr
sbb
std
shll
mov
dec
add
inc
loop
pusha
or
fsubs
mov
jmp
shrb
sub
mov
and
or
or
and
mov
ja
aad
xlat
xchg
out
xchg
xorb
xchg
psraw
mov
popf
and
adc
lea
mov
iret
dec
push
adc
add
push
stos
sub
or
sub
popf
fsubrs
mov
pushl
and
adc
mov
inc
jg
in
daa
jmp
cs
mov
mov
stos
jmp
lcall
mov
pavgw
ljmp
cli
cmp
cwtl
rclb
aas
loope
outsb
sbb
push
xchg
dec
imul
adcb
jno
push
fidivs
add
imul
push
sbb
add
notl
cmp
pop
loopne
mov
cmp
push
nop
mul
aad
jnp
adc
lods
xchg
pop
outsl
enter
neg
xchg
ds
mov
movsb
es
rcr
adc
xchg
adc
lcall
stos
bound
stos
push
sbb
and
jns
iret
lea
add
movsb
insb
cmp
xor
andb
repz
dec
inc
test
lea
in
jno
xlat
xor
cmpsb
pop
jo
xor
int3
sbb
clc
cmp
cmpsl
sub
sbb
sar
push
imul
jae
xlat
ret
jbe
xchg
or
jns
push
adc
mov
addb
mov
mov
xchg
das
adc
test
addr16
jl
or
lret
or
gs
push
pop
cmp
and
and
or
cs
mov
jb
jmp
gs
cmc
xchg
xor
ficomps
movsb
mov
inc
mov
aam
ja
mov
mov
int3
lds
push
add
stos
cmp
mov
cmp
jmp
rorw
in
inc
push
pushf
call
adc
or
f2xm1
pop
cli
jns
jle
loopne
mov
jle
mov
lahf
jge,pt
sbb
mov
sti
xchg
insb
aad
outsl
ja
add
in
roll
adc
fnstsw
cmp
aaa
into
or
or
jecxz
push
stc
shll
xchg
pop
andl
lcall
xchg
lcall
movsl
and
and
sbb
std
xlat
insb
andl
sbb
jae
or
stc
jl
or
adc
dec
pop
jbe
popa
rol
mov
adc
jle
pushl
mov
loop
std
in
jle
ret
in
lcall
cltd
fidivl
push
mov
mov
mov
testb
scas
xchg
jl
and
dec
fildll
scas
arpl
xchg
out
push
loopne
mov
dec
lahf
movsb
push
inc
mov
inc
xchg
enter
cwtl
jecxz
mov
ret
in
push
jecxz
loopne
pop
jmp
xchg
movsl
or
daa
or
in
sub
xor
dec
movsl
inc
pop
jne
jecxz
push
mov
xor
pop
mov
mov
loope
mov
mov
int3
stos
cmc
std
cmc
mov
into
sub
jae
dec
mov
rcr
ficoms
popa
data16
subl
pop
xor
mov
xchg
bound
rorl
lcall
loopne
scas
mov
lods
mov
cmp
mov
jecxz
hlt
dec
ds
cmp
mov
and
dec
repz
dec
popf
jmp
sbb
cmpsb
adc
inc
aam
dec
inc
add
nop
outsl
cltd
shlb
xor
sti
fimull
and
xor
lea
lea
mov
push
sbb
sbbb
mov
gs
out
mov
pop
mov
cmpb
jbe
cmp
adc
mov
lea
lcall
es
pop
hlt
add
add
sbb
jb
jecxz
mov
add
nop
popa
adc
push
addl
add
push
cwtl
scas
cmp
jae
inc
je
xchg
mov
psrlq
daa
jne
jp
push
pop
cwtl
shll
scas
xchg
push
inc
or
into
inc
test
test
fwait
xlat
adc
pop
es
out
pop
sahf
sbb
outsl
fildll
pushf
dec
pop
add
ss
in
push
sbb
int
sbb
pushf
test
fwait
adc
fs
dec
ret
dec
jecxz
hlt
mov
shll
and
mov
cmp
or
fistps
jle
sub
in
pop
test
add
loope
cmp
xchg
cltd
sbb
xchg
pop
mov
sbb
cmp
outsb
xor
mov
sub
popf
leave
add
sbb
mov
repnz
xchg
push
inc
push
cltd
in
fwait
dec
fisubrl
sub
adc
add
mov
int3
xor
push
add
pop
push
jle
sahf
and
in
push
pushf
psllw
bnd
in
cmpb
aaa
das
stos
mov
cld
ljmp
inc
inc
push
pop
cltd
jbe
mov
pop
jge
ja
ljmp
mov
ret
arpl
data16
call
mov
or
les
ljmp
test
leave
pop
call
iret
divb
cmpsb
je
popa
iret
cmp
addl
push
adc
out
jo
sub
add
lcall
cmpsb
xchg
bnd
xchg
hlt
mov
iret
or
out
push
mov
push
fwait
in
adc
les
mov
out
pop
push
shll
pop
pop
and
maxps
pop
fs
add
cli
xchg
jno
jb
hlt
popf
xor
ret
cmp
dec
cmpsb
mov
adc
rorl
ja
in
roll
das
push
popa
cmc
mov
mov
fwait
in
scas
sahf
test
xchg
lods
jns
test
mov
shlb
mov
nop
jg
push
faddp
test
mov
shr
adc
ja
cld
sti
filds
lcall
outsb
pop
adc
fmull
loopne
lahf
mov
add
mov
xor
loop
pushf
int
lret
mov
loopne
or
ljmp
outsb
mov
addb
repz
shll
decl
shrl
mov
fmull
push
aaa
push
inc
and
popa
ret
cmp
inc
fs
les
stos
mov
push
in
gs
mov
lcall
mov
das
repz
scas
fcomps
mov
mov
aad
push
iret
insb
jnp
loopne
xchg
imul
cmp
in
pushf
xor
pop
inc
mov
mov
int3
or
mov
mov
sub
fprem
sbb
adc
insb
fwait
sahf
outsb
push
in
xchg
fsubrl
mov
addr16
es
lret
nop
aad
inc
aas
xchg
push
xchg
or
addb
inc
ja
popa
ss
inc
sbb
popa
ss
jbe
pop
push
jge
push
call
mov
add
or
and
fsubl
mulb
cmp
sbb
xchg
pusha
push
mov
inc
ss
mov
ret
or
inc
loopne
pop
xor
in
insl
dec
push
adc
fnstsw
subl
and
add
jo
pop
pop
mov
addr16
push
jle
xchg
out
mov
xchg
pop
enter
repnz
mov
es
or
jl
push
adc
jecxz
jle
out
and
in
pop
cmp
jae
out
std
outsl
cmp
cmc
add
mov
shll
mov
xchg
sub
call
cld
test
pushf
and
pop
inc
jecxz
mov
jne
dec
push
inc
xor
dec
adc
mov
aam
data16
nop
and
sbb
rcll
jns
inc
adc
jbe
cmp
pop
jne
outsb
and
mov
fistl
test
mov
mov
or
jle
jle
pusha
subl
call
in
adc
bnd
xor
jp
jbe
outsl
sub
ja
roll
js
adc
mov
out
out
hlt
mov
push
ljmp
ds
insl
xchg
aaa
xchg
sbb
adc
mov
pop
std
dec
ljmp
pushf
cmp
push
and
push
sbb
xchg
sbb
inc
dec
sub
cmpsl
mov
pop
push
icebp
loopne
adc
xchg
stos
out
pop
jno
sbb
jae
inc
fld
inc
cmp
ret
sahf
test
movsl
xor
pop
addr16
or
andb
dec
stos
icebp
sub
pop
addr16
jne
pop
call
aas
ret
xchg
xchg
aam
imul
inc
aam
ret
jb
inc
mov
xchg
lods
cli
jge
loop
fidivl
in
mov
inc
lret
cltd
loop
nop
je
cmc
call
leave
dec
xor
aaa
fiaddl
fsubrl
mov
daa
fsubr
mov
jne
int
mov
shlb
stc
leave
lcall
test
and
dec
scas
jle
add
inc
xchg
xchg
ficomps
mov
or
scas
lcall
arpl
int
je
sub
in
loopne
inc
dec
or
repnz
aas
mov
sub
mov
jno
insb
out
js
xchg
sub
and
inc
xchg
adc
jecxz
sbb
cmp
bound
out
mov
leave
mov
push
test
jmp
lahf
ja
ljmp
or
sbb
cmp
sub
scas
icebp
sbb
dec
pop
sub
pop
cmp
and
jle
adc
gs
sub
iret
jae
jo
outsb
and
jnp
push
addr16
icebp
clc
jge
imul
and
adc
or
repnz
in
sarb
loop
fcoml
aad
sub
aaa
mov
rcrb
and
push
loop
and
mov
imul
std
dec
mov
aam
jo
clc
cli
cmpsl
xlat
fsubrs
sub
sub
sub
mov
aaa
pop
ret
aaa
movsl
popf
jb
scas
xchg
inc
insb
pop
cmpsl
fsubrs
inc
dec
aad
hlt
push
inc
pop
jbe
daa
mov
pop
cmp
jo
jnp
pop
rorl
sbb
sbb
cmpsl
loope
dec
data16
es
jb
fstpl
push
loop
scas
inc
repnz
push
les
ja
xor
mov
call
mov
ret
dec
ja
mov
leave
cmp
sbb
push
or
jle
jecxz
addl
xchg
ret
fstps
xor
mov
repz
fwait
or
push
iret
incl
icebp
sub
mov
jp
add
xchg
push
pop
xchg
sub
sub
sub
js
lret
repnz
fsts
dec
xor
jbe
mov
negb
push
fsubl
inc
pop
jbe
mov
push
or
push
adc
imul
aaa
arpl
in
and
out
pop
push
mov
test
and
das
ret
push
jmp
push
adc
sbb
fidivrs
aas
movsl
iret
pushf
jp
push
cmp
pop
sti
fidivl
arpl
fdivrs
lock
xchg
jo
mov
xor
push
scas
adc
addl
push
sbb
pusha
cltd
and
sbb
out
inc
mov
xor
add
into
lcall
mov
ret
pushf
jb
pop
pop
adc
or
and
and
push
mov
mov
incl
mov
xchg
in
mov
enter
mov
push
inc
xchg
cmp
fnop
jb
scas
inc
push
cwtl
xchg
add
inc
or
mov
mov
push
cmp
mov
or
jp
push
or
pop
push
jge
out
loop
cmp
sbb
movsl
neg
push
inc
adc
mov
popf
jecxz
inc
xor
pushf
les
jl
icebp
hlt
repnz
scas
mov
add
mov
sub
pop
cld
scas
test
add
imul
sbb
dec
in
xor
inc
leave
jns
test
arpl
cmpsb
fwait
movsl
mov
jae,pt
sub
pop
stos
xor
dec
insb
pop
loope
mov
lret
outsl
mov
sub
insb
hlt
out
add
sub
push
mov
gs
inc
loopne
or
ss
jmp
inc
xor
rclb
push
jmp
xor
cmp
mov
push
adc
mov
clc
addr16
repz
enter
je
dec
mov
aaa
and
aam
mov
jge
add
add
fadd
adc
out
add
sub
dec
add
lods
ds
aam
inc
add
pop
cmp
push
pop
pop
ds
cmpsb
shlb
cmpsl
sbb
fisttps
fldt
cwtl
clc
push
out
inc
stc
mov
fs
adc
jnp
test
data16
into
das
out
sbb
into
pop
sbb
test
xchg
push
push
es
addr16
shlb
and
jmp
hlt
pop
lds
popa
in
or
dec
pushf
mov
sbb
mov
test
pop
movsb
jle
dec
mov
cmp
mov
push
adc
sub
repnz
mov
jne
shll
inc
mov
mov
cwtl
inc
ss
test
add
stos
aas
popa
xchg
xchg
es
push
roll
scas
mov
rcr
in
jmp
adc
cmc
inc
loope
outsb
shr
push
pop
repnz
pop
or
rcrl
pop
xor
xor
aam
inc
sarl
mov
scas
xor
int3
pop
repnz
scas
test
mov
push
mov
mov
or
fidivs
pop
loope
push
mov
and
push
mov
mov
mov
aaa
jb
xorl
pop
jmp
or
lds
pop
int
mov
jg
sub
inc
pusha
lods
jmp
ss
lods
or
add
lock
xchg
lods
push
shr
insb
int
fcmovnu
and
test
jge
fadds
cmp
movsb
jo
stos
jge
jno
mov
cwtl
aam
add
sti
icebp
mov
out
jmp
cld
pop
sahf
call
sti
mov
and
popa
popa
mov
push
stc
mull
mov
ret
loope
cli
movsl
ret
or
into
shlb
mov
or
mov
sub
add
ja
ficoml
sbb
loop
jle
add
insl
xor
jle
push
push
sarl
push
in
xchg
sub
sti
gs
inc
andl
or
nop
imul
add
push
out
fs
push
adc
bound
xlat
imul
das
push
gs
jge
fs
out
arpl
mov
leave
sbb
jle
mov
ret
shl
popa
shll
inc
ds
test
mov
sahf
mov
or
add
sbb
scas
jl
fisttpl
xchg
fildll
cmpb
add
xor
sarb
mov
fiaddl
pop
rclb
xchg
shll
ret
int3
test
sti
sti
aam
add
decl
mov
das
popa
mov
sti
daa
mov
dec
cmc
fcmovbe
ret
pop
lds
inc
outsl
cmp
push
or
fs
loopne
pop
sub
imul
das
or
cld
dec
into
jo
add
cmp
das
or
lods
push
mov
pmulhw
add
sarl
sbb
sbb
mov
mov
push
icebp
sub
outsb
fimuls
mov
cmpsb
cld
test
xchg
imul
outsb
push
pop
mov
enter
aam
int3
mov
cmpsb
popa
clc
lret
rorl
mov
fwait
sahf
fs
pop
cmp
aas
das
outsl
jnp
cmp
aas
sub
dec
enter
lret
xchg
push
fiadds
mov
int
jl
popa
xchg
or
sub
fstpt
cmp
dec
imul
or
jb
xor
aam
xchg
xchg
cmp
dec
sbb
mov
xchg
mov
jge
jo
mov
scas
cmp
addr16
insl
shrl
out
cmp
iret
popa
stos
adc
addl
cmpsb
push
inc
cmp
repz
fldl
mov
in
lods
mov
addr16
xchg
out
jl
dec
int3
pusha
fwait
mov
push
jmp
push
dec
cmp
mov
xchg
sub
jae
sub
push
dec
in
sbb
jno
add
xlat
adc
inc
loopne
xchg
out
shr
in
gs
int3
pop
ja
ja
cs
pop
nop
and
out
pop
pop
or
push
jg
inc
inc
pop
dec
aaa
shlb
adc
sahf
jns
sbb
jbe
rcrl
xor
ficoms
cmp
aaa
shll
pop
xor
out
mov
sbb
addl
mov
sub
cmpsb
dec
push
cwtl
icebp
adc
or
fyl2xp1
rolb
and
not
lret
adc
dec
mov
inc
mov
insb
pop
pop
mov
clc
adc
and
in
repnz
daa
dec
cmc
mov
insb
sub
pop
ja
or
or
dec
mov
jmp
or
mov
push
mov
mov
add
cmpsb
jbe
or
loop
scas
xchg
shlb
mov
push
xchg
adc
lds
iret
fwait
sbb
arpl
or
imul
test
sub
mov
adc
pop
out
mov
out
or
pop
jp
jmp
lods
loop
sarl
mov
push
add
add
pop
push
and
mov
div
subb
movsl
inc
inc
inc
roll
inc
mov
les
lahf
and
mov
inc
popa
stos
xor
iret
sub
mov
sbb
popf
and
xchg
push
popl
int
fisubl
filds
sti
push
es
cmp
push
mov
inc
sbb
fmul
sbb
push
in
mov
mov
lret
dec
fldlg2
cltd
inc
imul
bound
iret
sbb
xchg
sbbl
sbb
ja
mov
shl
push
jle
push
mov
adc
cltd
or
mov
movsb
pop
jle
fwait
cmp
or
jmp
inc
xchg
insl
jle
mov
dec
mov
jp
cmpsb
sub
pop
popa
test
and
enter
pop
fildl
sub
mov
bound
xchg
xchg
loopne
push
call
lahf
lret
mov
imul
and
pop
iret
cmp
mov
jmp
add
outsl
mov
xor
sti
aaa
lcall
sarl
sbb
stos
dec
or
add
and
fdivs
arpl
xor
mov
stos
jl
jp
ficompl
adc
cmp
mov
lret
push
incb
addr16
push
dec
and
pusha
cmpsb
das
stc
inc
int3
push
add
jno
ss
lock
jne
je
pop
lcall
mov
mov
jecxz
jmp
lds
and
dec
push
pop
mov
cmp
xor
jg
rol
aad
mov
insb
cmp
imul
outsl
mov
add
xchg
cmp
cmp
aaa
push
mov
xor
add
inc
outsl
mov
push
mov
stos
xchg
test
xchg
mov
jg
repnz
adc
cmp
push
mov
cmpsb
out
xchg
dec
div
lret
mov
push
mov
jno
mov
inc
pop
movsl
xchg
inc
enterw
leave
int3
bound
mov
mov
aaa
mov
cmp
xchg
outsl
sub
jbe
enter
mov
ficoms
dec
sub
aam
ss
lcall
insb
out
stos
ja
lcall
inc
push
mov
aam
rolb
add
fisttpll
xchg
test
sub
xchg
mov
sub
out
push
mov
mov
cmpsb
cld
pop
cwtl
or
sub
and
xor
adc
mov
sub
icebp
inc
dec
xor
mov
inc
and
xchg
adc
fsubrp
scas
ss
and
fadd
ss
lods
cwtl
shll
push
jno
leave
mov
sbb
mov
or
clc
lret
cwtl
stos
mov
pop
push
pop
js
push
sbb
or
cli
fsubr
enter
call
lcall
dec
pop
js
push
sbb
or
cli
fsubrs
pop
clc
lret
cwtl
stos
mov
pop
push
pop
js
push
sbb
or
cli
fsubr
enter
call
lcall
loop
js
pop
dec
nop
pop
imull
jp
movsl
mov
fsubrs
cmp
arpl
jb
sub
dec
in
pop
out
sub
lods
sbb
enter
test
mov
sub
data16
sub
pop
pop
or
js
dec
gs
je
add
adc
push
mov
in
or
fs
jmp
lods
test
or
aam
mov
jnp
inc
stc
sarl
dec
inc
sub
in
scas
or
cmc
push
xchg
clc
xchg
inc
repz
pop
test
lods
sbb
loopne
mov
pop
or
dec
leave
or
sub
or
xlat
lea
lods
lods
or
lea
cmp
lcall
sbb
cmp
aaa
out
insl
gs
lea
cmp
int3
insl
shrb
push
sub
mov
pop
in
fcomi
cmp
pop
mov
clc
lods
aaa
jge
cmpsb
and
pop
popa
mov
dec
call
cmp
dec
inc
or
enter
test
cld
or
lcall
hlt
dec
test
lcall
mov
jl
insb
dec
int
fwait
push
stc
inc
or
addb
fidivrs
shr
jo
or
fnstcw
in
jmp
push
movsb
cmp
out
pop
loop
rcrl
lcall
sbb
jno
or
push
std
pop
in
sub
sbb
enter
test
mov
sub
dec
std
pop
in
sub
sbb
pusha
pop
xchg
and
push
sub
cmpsb
outsl
ja
loope
out
movsb
addr16
stos
pushf
push
cwtl
pop
hlt
outsb
mov
dec
push
mov
imul
outsl
pop
popa
inc
popf
stc
nop
sub
mov
repz
movsb
mov
out
sub
or
movsl
rorb
push
mov
bound
or
cmp
dec
dec
aas
mov
inc
in
mov
ss
push
mov
and
add
sub
xor
jbe
lret
pop
sbb
aam
movsl
xor
dec
loopne
dec
inc
iret
mov
pop
push
pop
jns
psubb
xor
ljmp
push
adc
ss
mov
pop
std
loope
mov
xor
sahf
inc
movsl
loop
sbb
aas
cmpsb
mov
jne
int3
cmc
xchg
push
loope
dec
add
sub
sub
test
inc
ret
mov
sbb
js
pushf
mov
fadds
add
cwtl
fs
or
or
inc
leave
enter
fistpl
sbbb
loopne
or
xor
hlt
int3
int
repz
and
jecxz
sub
cmp
pop
push
sbb
subl
push
dec
xor
lock
jge
idivl
push
fwait
xor
xor
in
repnz
pop
cltd
push
enter
stc
imul
mov
sbb
imulb
pop
inc
mov
std
jecxz
mov
or
cmp
addr16
iret
stc
mov
xchg
enter
aad
movsb
inc
sub
test
jae
rcrl
push
hlt
insl
pushf
in
adc
and
negl
mov
das
add
xor
or
je
movsb
out
mov
add
clc
xlat
jge
cmpsb
xchg
cmpsb
push
push
mov
cmp
xchg
std
in
in
pop
test
mov
or
mov
dec
sbb
dec
rep
bound
scas
cmc
xor
enter
dec
insl
sbb
jmp
sub
mov
cmp
fistpl
adc
mov
lcall
dec
push
jnp
lock
loopne
lcall
lea
das
adc
cmp
jmp
insl
xchg
and
pushl
cld
add
imul
jecxz
lock
push
or
scas
ss
push
mov
sbbb
and
movsb
jbe
pop
push
push
adc
aad
mov
add
jnp
pop
test
mov
mov
mov
or
xchg
pop
aam
inc
fisubrs
cmp
adc
es
sub
cmovne
adc
xor
mov
cmp
imul
je
inc
lret
add
mov
movsl
fldcw
leave
das
jmp
cmpsb
out
out
fdivr
pop
cmc
aaa
mov
scas
xchg
pop
mov
push
sbb
or
sub
int3
pop
leave
lret
add
imul
out
divl
xlat
mov
mov
and
shrb
pop
loopne
sub
xchg
mov
dec
dec
in
mov
jg
loop
rcrl
std
mov
jmp
jae,pt
aaa
loope
sbb
dec
cmp
mov
add
hlt
aam
out
lret
int3
push
js
push
mov
shrb
xchg
data16
sub
in
cmc
push
adc
adc
pop
test
test
push
icebp
icebp
gs
push
inc
in
stos
cmpsl
popa
pop
push
pusha
dec
xor
cmp
cli
jb
push
mov
mov
in
call
and
add
addr16
push
daa
imul
fcmovbe
mov
adc
and
sbb
clc
ficoms
jmp
call
fstl
lods
cmp
into
jmp
addr16
dec
pusha
hlt
shrb
dec
shrl
sub
xchg
fdivrs
sbb
pop
push
fwait
jns
cltd
and
movsl
rcl
and
mov
jp
jns
xor
sub
loop
in
inc
popa
adc
push
sbb
inc
vcvttsd2si
mov
xchg
shlb
pop
lea
stc
loop
nop
test
sub
cwtl
pop
mov
shr
sub
adc
repz
dec
leave
jl
adc
sub
push
pop
mov
mov
je
pusha
sub
adc
ss
rcl
addb
test
cmpsb
pushf
add
lea
fs
inc
movsl
paddb
jb
mov
lock
fistpll
xchg
jmp
jp
out
jnp
popf
mul
sbb
aad
cmp
sahf
cs
jle
cmp
or
aad
jno
cmc
ds
xchg
nop
nop
mov
push
idiv
aaa
std
sub
mov
inc
push
bound
popf
das
loopne
push
or
enter
sbb
rep
call
pop
and
mov
xor
cmp
mov
nop
bound
mov
fcompl
imul
das
adc
sub
adc
mov
ljmp
scas
adc
cmpsl
add
mov
ss
lret
sub
test
sbb
imul
iret
outsb
stos
ret
fcmovb
js
stos
mov
push
pop
cmc
mov
pop
mov
ret
jmp
lcall
cmp
mov
lock
mov
std
pop
mov
pop
pop
sti
pop
arpl
test
inc
lahf
add
xlat
push
sbb
push
jecxz
mov
mov
arpl
and
popf
data16
push
mov
lret
sub
push
outsl
leave
sti
pop
push
adcl
cmpsl
scas
inc
cwtl
mov
out
rcl
in
xchg
shl
inc
mov
mov
daa
repnz
enter
xchg
in
imul
xor
mov
sbb
push
mov
stos
icebp
sub
mov
push
inc
push
sbb
icebp
mov
leave
add
out
cltd
inc
imul
js
out
aam
and
pop
popa
imulb
out
int3
mov
fldl
dec
cmp
xchg
test
mov
sbb
ljmp
pop
mov
add
and
jge
hlt
addr16
ret
cld
les
fimuls
les
push
xchg
stos
mov
sub
sbb
sti
fildll
sbb
cmp
insl
int3
dec
mov
leave
mov
push
imul
dec
inc
xchg
xchg
push
mov
sub
add
mov
daa
xchg
push
lret
imul
sbb
popa
inc
cs
xorl
movsb
adc
mov
xchg
push
jae
dec
sti
pop
sti
cltd
incl
pop
rcr
mov
movsl
push
es
repz
mov
mov
loop
push
pop
pushl
pop
fildll
in
outsb
or
dec
cltd
dec
out
clc
data16
dec
andl
push
pop
push
test
test
call
int3
ret
notb
xor
mov
cltd
mov
aaa
inc
add
mov
nop
out
shll
sub
pushf
dec
in
mov
sbb
mov
xchg
mov
push
in
dec
stos
jg
jge
aaa
enter
cmp
xchg
outsl
repnz
push
pop
pop
out
loope
xchg
or
inc
int3
icebp
sahf
je
insl
repz
in
pop
pushf
lods
repz
movsl
push
mov
repnz
jge
movsl
xchg
cmpb
ficompl
inc
aas
xlat
stos
mov
dec
sbb
cmp
lahf
pop
jl
mov
mov
mov
jl
je
and
js
iret
pop
call
lret
test
movsl
xor
and
sbb
dec
stos
out
jge
sbbl
add
arpl
loope
add
sbb
popa
push
push
sbb
and
dec
lcall
fcoml
test
sub
push
pop
loopne
ds
lock
jne
sub
xchg
std
repz
test
sub
ds
repz
nop
mov
dec
xchg
pop
pop
dec
loopne
jbe
lret
push
insl
or
jp
pop
dec
or
push
rolb
pop
addr16
sbbb
jmp
inc
ja
fstpl
mov
shr
xor
rcrl
lock
or
repz
mov
pop
mov
repz
int3
test
mov
gs
mov
jo
fwait
in
mov
mov
dec
test
inc
test
mov
xchg
xor
xor
js
repnz
push
ja
sbb
out
jnp
cmpb
lahf
add
in
addr16
adc
cli
mov
mov
sub
sbb
dec
pop
dec
mov
pop
mov
push
shlb
mov
jae
add
std
add
or
mov
inc
mov
pop
fisubl
pushf
push
push
mov
sub
mov
inc
leave
push
cwtl
data16
mov
jmp
fdivr
or
push
mov
dec
shll
outsb
cmpl
jae
mov
subb
or
repz
test
sbb
mov
test
mov
stc
not
lea
push
daa
xor
fistl
movsl
mov
sub
push
stos
andl
pop
jnp
mov
or
arpl
adc
gs
or
fsubr
jge
mov
enter
repnz
inc
mov
mov
inc
movsb
orl
xor
stos
cld
popa
pushf
mov
sub
inc
cmp
push
pop
out
add
loop
leave
imul
cmp
cmp
mov
stc
cmp
push
jmp
xchg
rcrb
inc
cmp
mov
jae
push
inc
lods
cwtl
lahf
and
add
in
insl
loopne
scas
mov
add
jno
mov
dec
clc
movsb
lock
dec
adc
or
push
andl
ficoml
mov
pop
xchg
call
sarl
loop
pop
xchg
mov
fs
sub
jae
cmp
enter
push
push
call
and
leave
shrl
xor
inc
lock
xchg
xor
dec
cmp
or
and
lret
jno
int3
shrd
out
pop
in
idivl
repnz
cmp
add
out
insb
dec
dec
jo
push
jb
push
jecxz
dec
inc
fnsave
push
aaa
movsl
inc
mov
xchg
xor
pop
sbb
sahf
addb
mov
inc
les
cmp
stos
push
mov
outsb
mov
mov
or
jge
outsb
xchg
lods
mov
lods
and
mov
repnz
rolb
pop
push
ss
adc
fwait
or
int3
jmp
sbb
add
dec
aad
mov
push
lret
loop
rol
pop
cmp
inc
or
into
stos
lahf
mov
fists
pop
sub
jns
inc
aas
jns
ljmp
mov
push
dec
and
and
and
fucomi
pop
push
and
mov
dec
mov
lds
cmp
cli
das
leave
mov
xor
test
mov
add
test
pop
inc
xor
shl
add
clc
push
mov
xchg
ss
and
xchg
in
mov
dec
addb
pop
clc
mov
out
xchg
push
adc
inc
out
ds
cmp
fcmove
loopne
test
cmp
adc
push
shr
add
cwtl
rcr
xlat
rorl
fcomip
inc
fildl
cli
lods
sbb
repnz
loop
or
jnp
mov
pop
ss
mov
push
cmp
int3
pop
sahf
adc
leave
sub
enter
ret
fisubl
dec
jnp
or
jecxz
aam
xor
cmc
inc
fdivs
lods
imul
xor
xchg
sarl
cmp
and
lret
mov
fmuls
xor
sbb
mov
mov
dec
pop
mov
in
lcall
jl
mov
leave
dec
jb
enter
dec
in
psrld
popf
lods
mov
mov
inc
gs
xchg
or
xchg
test
sub
or
aas
addr16
sbb
aad
dec
mov
jecxz
fsubl
dec
jns
sbb
scas
stos
inc
pop
fwait
xor
or
jns
loop
in
in
xchg
jp
xor
inc
mov
xchg
push
sbb
cmp
or
fmulp
push
outsb
fcomps
orl
mov
mov
data16
lods
cmpsb
and
mov
sub
pop
xor
adcl
cmp
mov
adc
add
sub
add
aam
lods
push
ljmp
xchg
cmp
shr
shll
dec
fistpll
lods
test
push
lcall
pop
daa
nop
jp
popa
push
lock
sbb
test
dec
add
xchg
es
outsb
jno
rorl
aaa
repnz
and
mov
das
cli
push
xor
int
fisttps
mov
push
roll
push
adc
inc
cmpsb
cmp
sahf
ja
xchg
dec
bnd
jb
sbb
cmp
outsl
cmpsl
sbb
dec
out
imul
add
pop
cs
scas
iret
popf
movsb
push
test
lea
rcrl
adc
sub
xor
sub
stc
out
cld
sbb
xchg
rolb
xorl
xor
aam
inc
dec
iret
push
mov
or
inc
push
add
fnstsw
test
aas
pushl
loopne
pop
push
enter
loope
es
push
or
pop
sbb
xor
mov
in
ljmp
jno
mov
xchg
out
add
inc
aas
gs
cmp
cmp
das
das
xor
imull
ljmp
pop
xchg
mov
pop
pusha
cmp
adc
inc
mov
movsb
push
or
adc
into
pop
hlt
addr16
test
repz
inc
out
pop
push
gs
dec
int3
decl
cmc
mov
pop
xor
bound
add
push
sub
fbld
inc
mov
add
imul
sbb
mov
cmpsb
or
cmpsl
mov
test
movsb
faddp
imul
jb
out
push
fcoml
sbb
or
xor
push
adc
xchg
pop
or
daa
push
sarb
ljmp
and
xor
jb
push
stc
sarb
cmp
pop
divl
push
xor
and
fwait
jo
mov
push
mov
push
inc
xchg
pop
adc
push
scas
adc
jnp
insb
fildll
leave
mul
cmp
xchg
pop
hlt
out
std
inc
jge
jmp
lcall
scas
imul
pop
ljmp
xlat
loopne
push
adc
inc
mov
xorl
mov
out
sbb
addr16
call
mov
lret
xor
add
push
xchg
fdivrl
xchg
adc
mov
imul
aad
pop
test
jle
aaa
pop
fbstp
icebp
je
nop
js
dec
fdivr
inc
out
cmp
sbb
aad
mov
cmp
int
mov
add
mov
pop
rorb
int3
mov
jmp
cmpsl
mov
mov
push
call
scas
adc
inc
inc
divl
sbb
pushw
mov
mov
xchg
xchg
push
dec
mov
rcr
cmc
adc
or
jge
push
out
addr16
and
push
jge
adcb
cmpsl
inc
mov
mov
out
mov
sbb
subl
jb
lds
fwait
jmp
and
jg
dec
scas
inc
arpl
movsl
test
add
inc
xchg
inc
sub
sar
outsb
decb
xchg
jb
inc
cs
fs
push
sub
adc
fsubrs
jns
mov
mov
lret
rcrb
lcall
ljmp
adc
push
daa
jbe
mov
je
insl
mov
push
movsl
jmp
call
dec
mov
and
fld
lea
into
cmp
scas
fwait
dec
jge
movups
repz
cwtl
shlb
aaa
mov
movsb
outsl
jl
add
lods
pusha
push
xchg
mov
jg
xchg
jnp
xor
inc
push
int3
xor
arpl
aaa
mov
daa
hlt
dec
push
push
lahf
pop
rorl
aad
xchg
insl
xchg
jnp
addr16
fdivr
pop
arpl
jno
add
into
mov
push
leave
mov
aaa
lds
ficompl
cmpsb
idiv
pop
xchg
decb
fnsave
test
dec
mov
xchg
or
jl
cmp
lahf
insl
mov
test
xor
fdivl
sahf
sbb
dec
pop
scas
dec
loopne
or
mov
mov
cmc
mov
or
dec
xor
lods
js
std
gs
fsubrp
cltd
nop
ds
jne
jle
inc
or
out
mov
push
jns
mov
cmpsb
dec
imul
lods
data16
jo
jne
adcl
scas
xlat
pusha
mov
insl
inc
lea
cld
mov
mov
push
cmp
pavgw
jnp
nop
adc
orb
jo
cmp
xchg
mov
lods
inc
insb
add
mov
push
aas
sub
sbb
mov
mov
lcall
cld
sub
daa
sbb
pop
aas
dec
addr16
filds
push
adc
jp
xchg
jmp
dec
sbb
sarl
jmp
jno
jp
sbb
jae
aaa
ljmp
dec
lahf
in
xor
or
mov
decb
orb
sarb
xchg
jne
xchg
mov
xlat
jo
mov
loopw
mov
sub
sub
sub
mov
cmc
mov
xchg
inc
out
mov
sahf
inc
cs
outsl
inc
bswap
jae
sti
sub
stc
popa
mov
dec
sub
jp
fs
dec
dec
mov
outsl
imul
mov
mov
maxps
icebp
cld
arpl
ss
pusha
aas
cmp
es
inc
dec
cmp
jbe,pt
call
movsl
arpl
pop
test
push
sbbl
jg
sbb
fiadds
outsb
add
bound
dec
imul
outsb
insl
sti
inc
mov
xchg
es
jno
pop
mov
dec
ret
jmp
xor
xchg
test
jmp
mov
hlt
or
das
mov
xchg
jp
lods
sahf
and
xchg
stc
cmpsb
add
xor
xor
aaa
xor
or
xor
jo
addl
pop
xor
in
add
jnp
dec
xor
mov
shlb
lret
cld
inc
loopne
dec
ret
cmp
sbb
mov
fadds
fstl
xor
jns
into
xorl
lock
iret
cwtl
add
insb
and
xchg
pop
outsl
addr16
jne
cwtl
mov
aas
scas
push
aad
mov
xchg
push
add
or
iret
adc
add
cli
jae
shrb
adcl
cli
pop
addr16
out
mov
and
push
icebp
loop
movsb
push
andl
addr16
mov
mov
inc
test
push
sub
xor
cltd
add
adcb
fidivl
hlt
and
cmpsl
into
insb
addl
adc
lds
sbb
out
in
xchg
add
sbb
add
stos
sahf
es
pop
popa
fimull
push
popf
mov
xor
outsb
mov
loope
or
jae
push
and
sub
adc
imul
lret
and
pop
es
mov
dec
inc
push
dec
push
dec
fs
int3
in
cltd
and
mov
cmpsb
scas
mov
movsb
cli
sarl
lods
pusha
out
jmp
mov
scas
lods
inc
out
xchg
mov
es
xor
pushf
cmp
jecxz
xchg
scas
mov
mov
inc
gs
fdivl
cmp
jge
fwait
sub
inc
ja
adc
add
dec
pop
push
mov
jmp
cmp
test
hlt
sub
jbe
and
in
sub
dec
lods
sbb
and
mov
xchg
inc
sbb
jno
mov
ss
dec
mov
mov
sbb
call
or
push
mov
loope
sbb
js
dec
testb
cld
mov
lret
sbb
sbb
loop
fidivs
push
ror
pop
jge
fisubl
fsubr
xlat
ja
in
jecxz
mov
int
stos
shl
rolb
inc
inc
push
sub
ja
shlb
jno
stos
dec
je
fsub
jo
fstps
stos
sub
fstps
aad
cmp
cmp
daa
sub
xchg
mov
fsubl
out
in
std
jp
fdivl
push
jns
dec
pop
shl
fists
dec
rorb
pushf
stos
fs
xor
je
mulb
mov
jp
subps
cmc
jno
xor
mov
jecxz
sub
lret
mov
outsb
nop
loopne
xchg
mov
in
sub
jge
fcoms
insb
gs
mov
mov
into
sub
adcb
imul
daa
mov
cli
insb
jnp
add
lods
or
jmp
cmp
fldcw
leave
jl
scas
insb
or
sub
jmp
repnz
cld
mov
aad
fs
cmp
loope
jecxz
test
dec
int3
addl
test
mov
mov
scas
push
test
mov
test
jp
call
inc
sbb
cmp
insl
test
mov
sub
dec
std
pop
in
sub
sbb
enter
test
mov
sub
dec
std
pop
in
sub
sbb
fdivrs
insl
test
cmp
js
inc
std
pop
in
sub
sub
inc
jge
insl
test
test
mov
xchg
std
pop
lcall
out
call
scas
std
adc
hlt
scas
push
mov
push
add
add
add
pop
add
or
push
ljmp
push
or
filds
add
popa
add
test
add
add
ljmp
add
add
add
cmp
cmp
add
add
add
push
add
mov
add
and
add
add
add
add
add
ltr
add
add
addb
add
add
insl
add
add
add
nop
add
push
add
cltd
add
add
add
pop
add
add
add
sbb
add
add
add
popa
add
add
add
add
add
cmp
aas
add
add
add
mov
add
inc
add
add
add
add
out
add
push
add
add
les
addb
add
add
arpl
popf
add
add
add
add
add
add
xor
filds
imul
add
pop
add
add
add
add
add
add
dec
add
lret
add
add
add
add
add
add
mov
inc
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
aam
and
and
loopne
pop
add
add
add
push
add
add
push
add
dec
add
add
mov
add
add
add
add
sub
cmp
mov
pop
add
sti
add
pop
add
jns
outsb
add
call
add
add
add
add
add
imul
add
add
add
je
pop
add
add
call
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
pop
dec
add
js
nop
add
test
add
add
add
add
add
and
xchg
add
add
add
add
add
add
add
add
push
dec
add
and
xor
mov
add
add
add
add
popl
xchg
add
add
add
sahf
add
or
jns
daa
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
clc
add
add
cmp
dec
add
add
add
add
add
add
dec
add
add
add
flds
jb
pop
add
testl
mov
movl
and
mov
testl
filds
addl
cmp
dec
add
add
add
add
roll
outsb
add
add
mov
testl
rolb
lea
test
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
lret
add
add
mov
iret
dec
mov
xchg
pop
repz
jecxz
rsqrtps
enter
sti
adc
push
enter
repnz
adc
out
add
sbb
mov
or
sbb
add
stc
subb
lret
fwait
cmpsb
stos
hlt
shrb
xchg
lds
dec
aas
adc
cwtl
enter
xor
cmp
xchg
aaa
fisubl
cmpsb
mov
add
daa
mov
sarl
xlat
out
sbb
inc
scas
jp
fmulp
or
int
into
pop
jne
fdivrs
or
mov
sahf
fmull
dec
mov
push
das
and
clc
sar
push
xchg
fdivs
call
mov
xchg
jae
es
adc
push
xchg
call
lds
push
or
add
lods
jecxz
push
inc
and
adc
aam
push
push
xor
arpl
mov
jno
mov
aaa
and
adc
dec
stc
adc
inc
sub
insb
fidivl
jecxz
sbb
cltd
cmp
movsl
push
push
rorl
daa
aas
pusha
lea
xchg
jl
aad
jne
arpl
add
pop
rclb
repnz
lret
inc
push
lret
mov
ret
add
mov
js
setp
dec
pop
jo
insb
fildll
sub
loop
cmp
in
lahf
or
push
add
inc
data16
outsb
pusha
jne
pop
xor
push
jbe
jecxz
fstpl
dec
mov
jno
sub
pusha
dec
cwtl
stos
push
sub
add
addr16
enter
jge
arpl
lock
je,pt
mov
mov
jae
es
orl
loope
adc
jle
dec
or
lock
js
test
or
mov
add
inc
xchg
add
lds
pop
stos
inc
cli
sbb
fadds
xchg
mov
cmp
mov
lcall
or
fidivrl
imul
xor
xor
jns
daa
ljmp
mov
push
mov
jecxz
jecxz
mov
push
jg
push
cmpsb
push
push
push
add
incl
iret
jecxz
lret
mov
pusha
cmp
rcrl
out
fisttpll
xchg
mov
ja
imul
mov
cwtl
dec
fwait
jnp
cwtl
aas
xchg
xchg
cld
fwait
out
mov
ret
sub
into
loopne
or
hlt
mov
inc
adc
dec
jp
inc
pop
call
sti
mov
cmp
ja
jle
xor
mov
ja
arpl
sbb
loope
ja
lret
addr16
pop
rorl
jp
adc
cli
dec
jo
cld
aaa
xchg
push
add
lahf
ljmp
call
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
