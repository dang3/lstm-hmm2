call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loop
pop
cmpsl
xchg
lahf
xchg
mov
mov
jg
aas
daa
movhps
pop
push
jg
dec
push
pop
inc
cmpsl
mov
cmpsl
xchg
lahf
xchg
idiv
out
xlat
fistpll
and
pop
pop
outsl
sbb
addr16
push
pop
inc
jne
aas
cmpsl
or
mov
jecxz
daa
das
aaa
push
add
gs
dec
and
xor
cmp
out
les
xchg
loop
pop
fmull
cmp
add
xchg
jg
xor
ja
fsubrl
mov
lret
push
add
fistps
stos
inc
ret
add
arpl
ja
scas
into
push
rclb
pushl
pop
andl
out
outsl
popa
shrb
add
ljmp
shr
push
add
into
mov
insb
fcomps
xchg
loopne
loop
jge
pop
pop
mov
divl
pop
or
jg
outsb
mov
outsl
imul
sbb
pushf
and
addr16
push
sub
jo
cmp
testb
dec
fbld
adc
je
out
pop
adc
ja
xor
push
dec
push
pushf
mov
cmpsl
xchg
repz
idivl
fnsave
lods
daa
xlat
pop
add
emms
popa
addr16
push
cmp
fnsave
icebp
xchg
xchg
mov
es
jb
jae
xor
add
sbb
scas
shlb
ret
push
xchg
mov
jle
push
jae
sbb
sbb
add
sub
repz
jmp
fsubp
stos
fcos
out
xlat
ffreep
das
aaa
aas
daa
movhps
pop
outsl
ja
addr16
push
pop
inc
scas
mov
cmpsl
xchg
lahf
xchg
idiv
out
xlat
ffreep
das
aaa
aas
daa
movhps
pop
outsl
ja
addr16
push
pop
inc
scas
mov
iret
daa
jp
inc
mov
pop
mov
mov
sti
test
in
mov
cli
dec
loope
dec
adc
cwtl
pushl
or
cmp
sub
loopne
xchg
xchg
pushf
stc
stos
in
pop
sub
fsubs
mov
in
scas
aas
xchg
and
push
mov
and
push
xchg
repnz
xchg
shlb
inc
xor
je
neg
fildl
sub
push
repnz
popa
fisttpll
popf
xchg
adcl
in
ret
adc
pop
outsl
sbbb
sbb
neg
lock
and
sub
sarl
mov
imul
xor
push
push
xchg
das
adc
shll
dec
pop
mov
jle
cmp
jmp
inc
lcall
bound
loopne
pop
out
addb
cwtl
sbb
outsl
sub
push
lahf
jp
loop
shrb
orl
cmp
xchg
mov
cmp
pop
mov
test
insb
xor
ret
pop
mov
xor
xor
or
cld
lea
test
mov
ror
out
inc
iret
dec
hlt
dec
sarb
cmp
push
mov
dec
push
es
pop
imul
and
sbb
xchg
sub
or
sub
mov
push
loopne
jg
sbb
lret
jmp
jnp
iret
ds
xor
fcmovb
ret
push
sbb
cmp
dec
adc
xor
adc
mov
mov
mov
add
mov
int3
cmp
xchg
pop
mov
push
stos
xchg
nop
mov
push
pop
ds
movsl
pop
adc
aaa
pop
mov
mov
mov
inc
jp
dec
lods
cmp
std
ret
sub
pop
mov
inc
sub
mov
add
sar
xchg
sbb
dec
and
add
add
xchg
or
leave
mov
pop
add
sub
in
mov
mov
and
pop
ds
inc
stos
rcrb
mov
adc
add
loop
dec
in
stc
roll
mov
sbb
sub
loop
add
in
out
lods
mov
mov
sub
arpl
push
scas
dec
add
daa
and
rorl
fs
outsl
scas
xchg
sti
hlt
dec
shl
dec
loopne
add
or
jmp
xchg
pop
mov
nop
fnstenv
bound
test
mov
popf
insb
jmp
iret
cs
negb
pop
popl
xchg
jmp
inc
aas
cld
bound
icebp
rorb
add
push
inc
int
int3
push
jnp
insb
or
fldt
pop
les
aad
cmp
xchg
sar
mov
cmp
push
mov
sbb
and
jno
sbb
movsl
es
add
and
sahf
negl
sarb
mov
dec
dec
sbb
pop
dec
popa
stos
sbb
scas
lahf
push
movb
fldcw
jne
ljmp
subps
push
lods
jp
in
and
ficompl
cmc
scas
mov
lcall
std
pop
jge
or
xlat
xchg
cmc
js
fimull
data16
mov
sub
push
jb
fildl
adcb
insb
lds
cmovp
xchg
jns
lock
fdivrl
pop
pop
xlat
int
stc
gs
mov
xchg
mov
adcl
mov
or
mov
lahf
jle
push
or
pop
push
lds
aad
imul
sarl
loope
test
mov
loop
or
sbb
mov
fadds
sbb
pop
cmp
fisubrl
scas
mov
lods
sub
std
cmpsl
adc
xor
mov
push
inc
xchg
and
xchg
dec
push
mov
and
xor
iret
mov
inc
lahf
push
jmp
push
or
dec
cmp
fwait
divl
jbe
lahf
sub
ds
fiadds
out
in
aas
mov
mov
push
lods
mov
sub
cmc
je
paddd
mov
jno
ss
popa
fs
rcrb
push
sbb
pop
movsl
mov
pop
mov
lcall
stos
push
and
push
sbb
push
testl
movsb
les
lods
ficomps
fcoms
pop
or
iret
push
lret
pop
sub
das
adc
lret
shll
aad
fs
and
jnp
cmp
test
shlb
dec
sub
xchg
aad
mov
push
xchg
fsubl
xor
push
pop
in
andb
stos
jmp
jbe
divl
jnp
movsl
pop
les
push
jle
idivb
jne
jle
fcoml
cs
aaa
inc
loop
jge
aad
or
in
pushf
int
frstor
repnz
arpl
sub
movb
pop
out
negl
add
pop
push
inc
or
test
jmp
jecxz
test
jecxz
mov
mov
xor
dec
mov
jp
dec
scas
dec
mov
xor
lcall
fisubrl
dec
cmp
shrb
mov
pop
mov
pop
push
cmpb
sub
mov
dec
jnp
shll
ss
fs
cmp
xchg
imul
sub
fcoms
dec
lret
sbb
daa
aam
xchg
scas
daa
loopne
push
sbb
aad
stc
push
test
mov
vpsrlw
pushf
xor
js
xlat
xchg
lods
push
faddl
mov
enter
test
push
roll
xor
int3
sub
mov
out
dec
and
mov
push
xchg
mov
xchg
or
jmp
xchg
sbb
mov
jbe
pop
mov
insb
pop
insb
mov
andb
mov
xor
lcall
leave
or
or
jp
adc
mov
fsub
outsb
and
add
addl
loope
mov
dec
pushf
sbb
jmp
dec
lods
pop
inc
mov
push
adc
xor
sahf
ffree
push
inc
push
mull
mov
decl
push
shl
mov
mov
aaa
jecxz
pop
outsl
lods
int3
rorl
push
mov
call
pop
jecxz
mov
sarl
pop
pushf
sbbl
xor
test
test
add
sarl
adc
pushf
add
shlb
sti
sub
xor
xor
xchg
fcomip
cmp
enter
push
mov
jmp
cwtl
jecxz
cwtl
insl
mov
pop
test
xchg
xchg
cmp
out
xchg
cmc
cmp
les
add
mov
push
cmpb
xchg
mov
popa
lock
xchg
add
lods
andb
std
or
add
fistps
ret
or
push
cmp
out
hlt
dec
mov
scas
fwait
pop
cltd
sahf
cmp
cld
int3
or
xchg
ret
inc
and
int3
xor
xchg
sub
adcl
out
inc
pop
ljmp
mov
fnsave
mov
lret
cmpsb
ss
std
or
sbb
lret
leave
mov
loopne
or
cmp
shr
xor
pushf
jecxz
lds
rorb
rcr
sub
loopne
cwtl
js
and
push
imul
int
mov
ret
lods
pop
xchg
arpl
daa
sbb
arpl
fwait
push
scas
aaa
jb
sbb
icebp
sbb
ret
mov
pop
fistps
jle
xor
sti
jbe
cmp
dec
loopne
cld
or
test
mov
jge
int3
xor
mov
sbb
mov
inc
or
fwait
jge
aam
pop
popf
dec
cwtl
and
jp
pop
call
int
mov
int
fsubrl
lahf
iret
mov
and
loop
in
pop
ret
ds
add
popa
xchg
xchg
cmpsw
popf
adc
mov
add
push
cmp
das
nop
jl
mov
loopne
stos
dec
fcmovu
dec
mov
cmp
popa
fcomps
jnp
cmpsl
enter
sarb
and
push
pshufw
ds
dec
mov
inc
ret
xchg
xor
mov
ret
fisttps
test
stos
mov
mov
mov
ss
out
or
pop
or
inc
xchg
ja
mov
jno
sub
lea
ds
sub
mov
jbe
mov
or
sub
cmp
mov
sub
arpl
in
mov
xchg
mov
xor
cwtl
pop
sbb
cld
dec
scas
xor
or
daa
sbb
push
insb
fidivrs
test
pop
inc
or
push
inc
jmp
in
mov
mov
pop
mov
stos
int3
call
mov
mov
sbb
cmpsl
movsl
fistps
mov
add
daa
add
xor
jmp
cli
adc
pop
lods
xor
lcall
or
aad
or
hlt
loopne
cmpsb
inc
int3
mov
stc
lods
pop
cmp
push
jg
ret
fsubrp
pop
in
dec
aam
jge
xorl
dec
or
mov
sub
test
jg
cmp
mov
jl
jl
loop
fidivl
xchg
mov
inc
sub
repz
xor
mov
xor
xchg
inc
das
mov
mov
int3
xchg
jmp
leave
lods
pop
out
pop
mov
xchg
data16
or
popf
mov
pop
mov
xchg
clc
jbe
aad
pop
mov
and
pop
dec
das
insl
dec
shrb
add
lock
push
into
dec
jb
or
loop
push
xor
pop
dec
jae
sbb
xor
jns
iret
inc
fisttpl
int
test
scas
cmp
out
in
mov
fdivrp
repnz
ds
sub
xchg
cmp
push
int3
gs
addb
fnstenv
dec
js
and
icebp
ficoms
lods
jle
or
jnp
or
mov
cmp
cmpb
loopne
fisttps
stos
or
mov
add
mov
jmp
aas
lret
cmpb
push
mov
mov
cmpb
bound
xor
pop
in
xchg
lock
andb
or
ds
cld
jo
imul
arpl
iret
xor
ret
out
xchg
fldcw
out
mov
je
inc
xchg
fcomps
xor
xchg
xchg
jmp
pop
cmp
stc
pop
jae
popf
jl
fldcw
lcall
mov
mov
lods
cld
xchg
cmp
rorb
lock
adc
aad
lods
adc
nop
sahf
testb
xor
stos
and
cltd
push
pop
lret
stos
jae
xchg
cmpsl
dec
cmpsl
mov
sarb
lock
add
lock
imul
jp
in
jno
dec
pop
movsb
cmc
stos
dec
out
cmp
sahf
bound
fstps
dec
imul
xchg
sub
in
lds
jmp
dec
push
aam
ss
outsb
jne
cs
inc
jae
adc
xchg
mov
ficomps
inc
dec
out
fmul
jb
sti
repnz
push
into
inc
in
in
mov
inc
sbb
push
dec
int
jmp
push
adc
and
call
out
pop
test
or
xor
lock
movsb
mov
push
fiadds
sar
pop
js
jne
or
in
cmp
ret
push
pop
mov
es
pop
xor
push
xor
sub
rolb
jns
xchg
cwtl
jns
xor
bound
addb
or
movntss
int
add
pop
cmp
cli
cmp
pusha
pop
daa
mov
fwait
jb
ret
sbb
mov
mov
inc
daa
pop
inc
aad
xchg
push
movsb
and
jp
dec
push
sub
cmp
mov
add
jb
andb
adcb
mov
adc
insl
cmp
hlt
or
dec
cs
out
adc
add
je
push
push
js
sbb
andb
data16
inc
pushf
ja
repnz
cs
jae
stos
mov
mov
mov
test
cmpsl
out
jmp
lret
inc
je
or
mov
inc
dec
cmp
dec
pusha
ds
mov
mov
inc
or
daa
xchg
pusha
cmp
in
jp
movsl
testb
lods
push
leave
xchg
fidivrs
insb
mov
sbb
push
sub
js
push
pop
mov
adc
clc
xchg
stos
mov
popa
dec
ds
mov
push
fs
les
loopne
xchg
scas
lock
or
fwait
cmpsl
push
lea
mov
jne
inc
out
imul
push
mov
jbe
pop
inc
jecxz
ror
sub
xchg
loopne
repz
fildll
in
mov
add
jno
clc
mov
adc
pop
mov
inc
ret
aad
lods
in
out
xor
andl
xchg
cmp
orb
dec
or
cmpsb
jge
pop
push
jecxz
jbe
repnz
aam
idivb
test
mov
das
pop
xor
mov
mov
and
pop
daa
outsb
add
dec
jno
and
arpl
pusha
mov
dec
cltd
sub
sti
jnp
mov
int
inc
pop
cmp
mov
stos
mov
movb
call
ljmp
dec
ret
pop
mov
xorl
imul
inc
inc
pop
xor
loopne
pop
jecxz
mov
ds
mov
ljmp
fcompl
movb
test
jb
sbb
adc
in
adc
adc
ss
out
arpl
inc
cmp
in
sbb
cmp
pop
inc
lcall
fnstcw
gs
push
fstl
inc
mov
aam
inc
sbb
cmp
mov
ret
jb
fsubr
or
push
dec
mov
cmpsl
mov
es
in
xchg
mov
and
mov
fidivs
outsb
lahf
inc
les
xor
in
test
dec
mov
xor
movsl
xchg
add
mov
cmp
mov
fildll
mov
rorl
pushf
and
xchg
and
pop
scas
es
adc
enter
pop
push
sub
dec
sub
stos
xor
test
lahf
push
leave
sbb
sub
push
pop
fsubrl
add
ds
int3
movsl
repz
movb
adc
inc
sbb
cmc
cmp
and
in
imul
sub
xchg
jae
and
mov
push
sbb
sub
les
je
fadds
fcom
mov
add
jecxz
mov
sbbb
push
push
aam
lods
movsb
jns
orl
mov
cmc
test
dec
cmp
jle
insb
not
xor
adc
in
mov
adc
rcll
lods
ljmp
dec
enter
add
inc
xchg
jl
mov
sub
jle
leave
icebp
push
sub
adc
int3
inc
mov
out
out
out
push
test
jg
mov
push
outsb
sub
push
mov
inc
outsb
fdivs
inc
in
cmp
xchg
lds
in
pop
or
mov
movsl
mov
fisttpll
sub
addl
mov
ss
push
cmpsb
xchg
das
inc
loope
dec
and
inc
cmp
and
adc
mov
mov
inc
xchg
or
sbb
add
sbb
aaa
sbb
and
scas
mov
push
adc
iret
into
mov
pop
in
mov
bound
mov
jbe
adc
iret
xor
pop
arpl
jge
mov
mov
sub
dec
pop
pop
lods
jbe
inc
pop
pop
push
stos
jle
mov
or
dec
xor
mov
and
cmp
popl
idivl
imul
dec
aaa
jecxz
adc
sub
test
leave
fwait
mov
mov
in
shl
xor
jmp
push
insl
repz
and
sbb
add
mov
mov
stos
into
fsubp
mov
mov
sbb
mov
out
jl
negl
lahf
mov
push
sub
fists
cmp
inc
mov
push
mov
daa
mov
pushaw
enter
mov
xor
push
push
mov
rol
std
mov
stos
mov
sbb
sbb
jne
xor
ds
enter
sub
dec
xchg
aas
cmpsb
mov
inc
lds
mov
mov
sub
sub
leave
push
jbe
and
repz
mov
jne
ds
mov
and
cmp
push
cli
pop
pop
xchg
inc
dec
in
arpl
mov
push
in
out
cmp
cmp
pop
inc
xor
mov
les
jae
xchg
les
add
cmpl
fsubrl
iret
push
loopne
pop
shrb
push
lock
int
pop
cmp
aaa
mov
mov
movsl
sub
call
mov
push
lcall
fadds
add
aas
rcr
fsubrs
push
dec
lock
ffree
jo
mov
sbb
les
rcrb
mov
repnz
push
jmp
hlt
inc
cmc
cmp
mov
fadds
in
push
pop
test
call
inc
fs
scas
jo
test
pop
push
lds
notl
les
loopne
pop
insb
jae
cmp
mov
push
mov
sub
rclb
call
lret
add
pop
and
pop
jl,pn
xor
pop
movsl
neg
mov
mov
pop
insb
imul
mov
stos
stos
sub
xor
adc
icebp
fnstcw
push
out
cmp
cwtl
pop
setb
inc
xor
jns
lods
insb
lret
fisubrl
push
sbb
push
cmp
inc
dec
xor
test
pop
inc
lret
ds
insl
mov
cwtl
je
repz
subb
dec
xor
pop
cmp
mov
aas
mov
dec
or
stos
and
jg
repnz
stos
jle
rcrb
fldenv
mov
sub
mov
ret
push
aas
jne
inc
int3
scas
adc
lahf
sbb
popa
mov
insb
or
or
or
les
mov
cmp
pop
pop
lret
push
xchg
lret
pop
sub
pop
xchg
pop
sbbl
push
pusha
and
loopne
jns
cmp
jmp
sub
std
and
rol
xchg
movsl
leave
mov
outsl
lds
jb
xchg
iret
int3
fsts
pop
icebp
push
test
pusha
xor
and
jg
inc
jg
sbb
mov
loopne
xchg
icebp
pop
xor
dec
add
lret
mov
lret
popf
push
outsl
repnz
xor
mov
test
imul
pushf
sbb
adc
sti
and
fs
ret
cmc
xor
adc
cltd
sbb
jmp
add
xor
xor
fwait
or
inc
lds
push
inc
jg
aam
jle
decb
rol
push
in
int3
sub
sub
sti
cwtl
lret
xchg
sub
jmp
xchg
add
ds
jg
shrb
imul
cmp
data16
sbb
push
fstpl
jo
mov
pop
test
add
sbb
and
cs
jge
sub
sbb
pop
loop
loopne
gs
aas
push
movsl
cmp
xor
cmpb
test
ficompl
les
fs
negb
xor
lea
cmp
pop
test
lock
xor
sbb
popa
popa
mov
stos
lods
pusha
inc
and
lcall
xor
cmp
pushf
shl
lahf
iret
sahf
mov
mov
sbb
cmpsb
lret
aas
cmp
scas
std
mov
or
adc
or
mov
jge
rcl
xchg
lret
ljmp
pusha
and
stos
ss
cltd
sahf
std
je
lock
mov
xchg
xchg
clc
out
ljmp
sub
cmp
cs
test
inc
sar
cltd
outsl
jbe
mov
pushf
cwtl
or
mov
dec
add
popa
roll
xor
cmp
cmpsl
jle
mov
in
mov
fnsave
pop
jmp
adc
rcrb
sbb
sbb
dec
ss
inc
jge
xor
mov
mov
lods
sbb
xchg
xor
test
testb
ret
push
sbb
and
ja
xchg
outsl
sbb
push
mov
inc
jg
pop
adc
jo
mov
jmp
icebp
or
pop
hlt
xor
inc
into
mov
fnstenv
inc
jmp
in
jp
loop
test
pop
les
clc
or
mov
add
ss
shrl
arpl
and
push
jecxz
or
in
pop
dec
bound
adc
mov
push
mov
js
icebp
or
ljmp
push
cmpsl
sub
jmp
iret
xlat
ffreep
das
aaa
aas
daa
movhps
pop
outsl
ja
addr16
push
pop
inc
scas
mov
cmpsl
xchg
lahf
xchg
idiv
out
xlat
ffreep
das
aaa
aas
daa
movhps
pop
outsl
ja
addr16
push
pop
inc
scas
mov
cmpsl
lahf
xchg
lahf
xchg
idiv
out
xlat
faddp
sub
aas
daa
push
pop
sbb
outsl
ja
addr16
push
outsl
inc
mov
xchg
cmpsl
pop
xchg
mov
out
imul
out
xlat
pop
das
aaa
rorb
push
cwtl
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
lods
test
loop
sahf
leave
std
mov
leave
js
sub
or
sub
dec
stos
mov
lea
fstp
int
aaa
cmp
or
insb
imul
mov
test
hlt
jmp
cmp
jl
addr16
aas
and
int
lods
lret
cmc
inc
adc
out
fidivl
mov
loope
or
xchg
sbb
cmpsb
inc
lea
repz
add
jmp
add
hlt
sub
loop
add
imul
sbb
test
dec
dec
mov
in
daa
iret
add
or
cmp
sub
repnz
mov
jge
push
clc
clc
jmp
or
inc
sbb
imul
dec
pop
jns
push
les
test
mov
leave
xor
out
or
sub
xor
mov
inc
mov
bound
cmp
sub
mov
pop
dec
mov
mov
lcall
leave
and
xor
or
jne
pop
pop
push
bswap
mov
jmp
popf
fistpll
xor
arpl
or
sub
rorl
lods
mov
mov
aas
pop
sub
pop
sbb
ljmp
clc
lahf
cli
clc
cld
icebp
test
in
jmp
cmp
sbb
imul
lods
test
std
stc
in
jmp
cmp
sbb
imul
outsb
add
or
push
mov
aaa
jecxz
cmp
rcrl
add
loopne
movhps
xchg
pop
arpl
push
mov
jae
jecxz
cmp
adc
adc
xchg
jne
flds
cmpsl
adc
jmp
mov
in
pop
xchg
dec
push
xchg
sahf
fidivs
push
hlt
js
data16
cmp
cmpsb
adc
jle
out
shlb
jecxz
and
mov
or
mov
sub
add
mov
cmc
sbb
fisttpl
inc
jbe
test
push
dec
repz
mov
dec
call
fiadds
or
sub
xchg
das
cmc
mov
es
int3
xchg
cmp
add
out
std
fistpll
xlat
roll
mov
nop
sbb
sbb
or
pop
dec
fs
and
push
adc
push
out
dec
jbe
shlb
or
int3
push
movsl
xor
adc
sbb
insl
sub
fwait
jecxz
xchg
cs
dec
and
mov
fidivrs
ds
push
sbb
inc
mov
mov
movsb
orl
adc
cmc
or
or
mov
js
or
negl
mov
mov
mov
lods
in
cmp
js
xor
lods
call
movsb
inc
inc
sbb
cmp
pop
fcom
jge
xchg
enter
cld
es
std
out
loop
jne
xor
test
mov
mov
xchg
xor
mov
fldenv
sbb
pop
xchg
dec
add
jecxz
subb
adc
mov
push
xchg
lds
cld
aaa
jns
loope
push
jle
cmp
outsl
mov
cmp
nop
test
jne
call
clc
xchg
dec
mov
aam
cmpl
sub
mov
xchg
fs
dec
xchg
fsubl
je
fsts
lds
push
mov
insb
cmp
ret
jge
pop
shll
xchg
mov
fldl
xchg
ret
sahf
push
inc
std
mov
push
repnz
test
sub
xor
sarb
push
bound
mov
and
test
or
sub
loope
cmp
jae
dec
mov
jge
scas
pop
inc
sub
je
and
add
movsl
inc
imul
push
and
jp
push
add
es
jp
je
loop
pop
dec
adc
jmp
mov
loopne
jns
sbbb
or
jmp
inc
jno
jecxz
test
adc
sahf
inc
insl
insl
sahf
loopne
arpl
sti
or
test
call
mov
dec
jns
shlb
rcrb
pop
cmp
inc
mov
pop
or
rcll
xchg
xchg
test
aaa
push
dec
push
popa
leave
stos
sbb
fcmovb
add
subb
stos
lcall
add
or
imul
mov
aad
inc
dec
cmp
int3
fildll
adc
lds
mov
in
ud1
mov
jl
in
jb
inc
push
push
fdivr
push
lret
hlt
xor
jmp
adc
push
test
pop
pop
push
fs
outsl
dec
aaa
pop
pop
and
fucomi
insl
and
pop
fnstcw
dec
mov
lret
lahf
sub
mov
xlat
jl
mov
out
lods
pop
repnz
dec
icebp
sbb
push
mov
pop
and
daa
ss
je
arpl
sbb
xchg
inc
call
and
xchg
sub
sbb
xor
inc
fdiv
movl
xor
out
pop
outsl
push
jo
mull
popf
insb
in
nop
adc
mov
or
iret
adc
testb
notb
mov
pop
leave
jae
lret
mov
decl
cmp
scas
add
sbb
iret
inc
mov
xor
loopne
jge
pop
or
mov
loope
and
cmp
icebp
and
test
jge
pop
pop
xchg
pop
loope
aam
call
mov
mov
xchg
bound
loop
mov
xchg
imul
cmp
push
in
dec
jl
xor
add
xchg
bound
icebp
popf
push
in
rcll
jo
cwtl
pusha
scas
ret
inc
pop
xor
or
ss
out
cmp
adc
lcall
or
arpl
mov
jae
rcll
test
xchg
out
cmp
inc
lods
in
inc
call
lods
mov
and
mov
sub
sti
sbb
and
cs
jb
loope
jb
push
or
sbb
inc
fs
test
popf
xchg
push
xchg
dec
push
mov
or
xor
cs
addr16
fnstenv
stos
arpl
in
in
int
add
out
sarb
xor
jl
mov
out
push
aas
loope
and
shlb
mov
push
jnp
or
pop
push
push
daa
push
arpl
fdivl
imul
clc
sub
lods
pop
jbe
fs
outsb
and
jg
add
mov
cmpsl
mov
mov
or
xchg
push
add
icebp
int3
mov
mov
in
inc
and
ljmp
dec
jbe
jg
les
xor
aam
fisubs
sahf
jb
fists
sub
pavgw
pop
or
inc
sub
cltd
adcl
xchg
clc
into
lods
or
add
hlt
sub
cltd
sbb
or
push
sub
jne
mov
lea
mov
adc
fnstenv
xor
ja
and
or
cwtl
addr16
nop
dec
push
loopne
je
jno
or
push
and
dec
or
dec
adc
cmovbe
push
stc
je
negl
js
and
jno
adc
jnp
scas
hlt
js
aam
dec
sbb
leave
mov
and
stos
pushf
imul
in
repnz
int
stos
push
dec
mov
sahf
push
leave
sbb
into
mov
pop
xlat
faddp
mov
rorb
pop
scas
xor
cli
ds
or
lds
jo
loop
test
push
or
clc
stc
icebp
aas
xor
xchg
lock
xchg
mov
push
dec
out
mov
fwait
inc
movsb
js
sub
arpl
test
std
mov
or
adc
add
sbb
dec
jne
jecxz
and
pop
data16
aaa
pop
das
xchg
stc
out
hlt
pop
adc
repnz
sbb
test
or
cmp
mov
adc
fldenv
inc
push
sbb
or
movsl
dec
jne
scas
sub
fistps
xlat
int
fwait
stc
push
push
dec
ja
dec
addr16
mov
mov
std
mov
mov
lock
sub
sahf
push
xchg
movsl
push
sbb
mov
push
mov
xlat
loopne,pt
xchg
scas
mov
inc
ds
jae
xchg
in
mov
mov
out
inc
dec
jo
add
out
adc
jns
stos
add
daa
adc
sbb
or
push
xor
push
and
outsb
inc
hlt
movsb
mov
addr16
jne
fisubrs
push
xchg
adc
mov
dec
sub
xor
sbb
mov
test
rorb
mov
sbb
mov
inc
dec
cwtl
mov
mov
scas
jmp
xor
cltd
add
int3
jnp
cs
inc
je
nop
gs
cmc
mov
mov
sub
lret
xor
mov
fimuls
dec
test
jp
pop
jno
jmp
pop
sub
add
push
js
hlt
adc
test
and
dec
negl
loopne
or
outsb
and
or
push
insb
sti
in
sbb
ljmp
sub
pop
xorl
inc
lds
hlt
cs
xchg
push
cmc
test
imul
stos
data16
frstor
jnp
test
lret
rolb
push
cltd
insl
cmpb
xchg
add
xor
cmpsl
pusha
mov
mov
stos
out
into
jp
je
inc
imul
mov
push
mov
lret
fistps
subl
lret
fstl
mov
out
icebp
lods
mov
or
add
sub
sbb
pop
dec
jnp
mov
cwtl
clc
jno
and
mov
inc
push
das
repnz
enter
adc
not
out
mov
xor
rolb
sarb
ljmp
mov
out
aaa
jno
es
gs
adc
xor
jbe
mov
daa
and
adc
mov
cmp
testb
adc
pusha
mov
rcr
adcb
pop
sub
cmpsl
loopne
data16
sbb
push
mov
rclb
xchg
cli
data16
add
cmpl
cmc
cmp
loop
mov
mov
into
add
lock
jg
jbe
popf
jmp
xchg
mov
das
loope
in
inc
leave
cltd
push
pop
scas
push
mov
push
cltd
pop
das
loopne
bound
push
and
push
les
xor
jl
pop
mov
out
jg
sti
cs
fistpl
mov
sbb
dec
dec
pushf
aaa
cltd
out
movsl
and
cmp
cmp
adc
lcall
jecxz
mov
in
rcr
inc
movsb
repz
jg
pop
adc
jmp
inc
das
xchg
add
mulb
add
mov
xchg
jns
dec
mov
xchg
or
sbb
andl
mov
cmpsl
or
add
fadd
xchg
mov
inc
rolb
std
jnp
ret
jl,pt
sbb
adcl
or
rcrb
inc
in
mov
repnz
and
xchg
enter
outsl
stc
loop
add
adcl
fwait
jle
jbe
movsb
imul
mov
lret
mov
loope
mov
dec
ljmp
dec
orb
pop
and
popf
cmpb
adc
adc
lcall
push
out
ja
or
jo
xchg
inc
insb
mov
push
inc
push
add
cltd
xchg
pop
rcll
cwtl
mov
or
cmp
sahf
in
aam
xor
rol
mov
xchg
pop
test
mov
adc
mov
sub
jmp
or
sbb
mov
adc
mov
sbb
sbb
xchg
cmpl
out
push
pop
arpl
pop
mov
push
mov
jp
cmp
cld
lods
nop
mov
loop
fdivs
sbb
jne
inc
jns
mov
adc
push
cmp
jmp
mov
cmc
imul
aad
sarl
push
ds
or
mov
dec
sub
sub
mov
out
adc
ss
dec
lds
push
inc
jbe
jbe
pushf
push
pop
insl
xchg
mov
sub
push
mov
imulb
testl
fldenv
pop
xor
pushw
mov
js
xlat
or
or
add
xor
mov
sbb
cmp
in
and
dec
movsl
inc
adc
or
in
aaa
andb
mov
cmp
add
push
add
jbe
lods
sub
shl
movsb
cli
shr
push
xor
rorb
lcall
fistpll
inc
scas
push
jecxz
dec
andb
push
std
aad
push
mov
push
aad
pop
inc
fsts
shll
push
ret
xchg
xchg
loop
adcw
gs
push
je
jmp
arpl
xchg
inc
sub
fdivrl
sub
stc
int3
pop
std
mov
mov
in
mov
packsswb
xchg
or
imul
addr16
cmp
jl
leave
shlb
pusha
or
imul
pop
int
mov
test
call
mov
in
sub
sbb
mov
and
cwtl
sbb
or
popa
jp
inc
stc
stc
mov
jp
inc
sub
and
cmpsl
push
cmp
lahf
mov
mov
cmc
push
in
out
mov
jns
or
jae
add
dec
addr16
ret
in
xchg
inc
adc
test
aad
cwtl
cwtl
popf
inc
ja
mov
sub
test
mov
fs
ja
cmp
adc
cmp
jmp
enter
mov
and
xchg
lss
add
mov
mov
stos
test
push
xchg
cmp
or
sbb
xchg
push
mov
or
jg
sbb
fxch
scas
or
jae
xchg
mov
repnz
arpl
ror
adc
fistl
jecxz
sti
ja
mov
jo
movsl
out
roll
incb
mov
inc
mov
or
push
push
gs
or
int
lods
sub
pop
je
bnd
mov
inc
stc
pushf
and
data16
icebp
mov
jne
xor
adc
add
lods
jae
rorb
cmp
ret
jns
ss
cmp
mov
jbe
xchg
in
notb
pop
xchg
inc
pop
popf
dec
cwtl
ret
sbb
add
sbb
jge
sarb
imul
fdiv
shrb
push
sahf
and
imul
and
dec
jb
push
std
loopne
hlt
or
jle
adc
test
mov
adcl
fstp
pop
fildll
adc
sub
cwtl
mov
push
mov
jno
daa
sub
push
int3
mov
mov
lods
aas
mov
mov
fs
scas
sub
pop
cmpsl
jo
sub
lret
or
daa
fcompl
dec
push
ja
add
movaps
add
and
xor
dec
repz
jns
or
and
jno
pop
out
adc
sub
es
lahf
jo
xchg
loop
adc
dec
scas
fidivrs
leave
gs
int3
push
jp
bound
cwtl
mov
sahf
gs
jecxz
mul
and
jns
inc
scas
jmp
push
and
in
pop
mov
je
loop
popa
jecxz
sub
lods
push
add
mov
outsl
cwtl
push
popl
push
inc
add
cmpsl
ds
xor
aaa
rorl
cli
out
in
mov
add
mov
sti
mov
inc
push
pop
aam
inc
dec
xlat
cmovnp
push
aad
push
ljmp
call
fnstsw
fnstcw
mov
inc
loope
mov
dec
push
mov
out
or
inc
sbb
dec
xchg
jl
ljmp
aam
add
out
test
dec
clc
xchg
pop
movsl
enter
mov
or
xchg
sub
or
cli
insl
adc
ss
adc
mov
adc
sbb
push
sub
sbb
jnp
sub
popa
ja
xor
lahf
movsl
push
mov
jae
dec
popa
mov
sbb
inc
pop
push
or
out
mov
mov
pushf
loopne
push
dec
inc
sbb
push
in
fistps
popl
aad
lcall
test
xor
mov
dec
lahf
popf
adc
dec
dec
es
jl
pop
sbb
insl
adc
in
pop
mov
xlat
lret
repz
incb
in
mov
pop
pusha
inc
adc
jno
mov
outsl
es
imul
cmp
push
data16
cmpsl
mov
sub
test
mov
inc
jb
insb
into
maxps
cmp
xchg
outsb
push
pusha
lods
pop
cld
push
aam
inc
pusha
add
loope
addl
cmc
mov
lods
fisttps
xchg
xchg
rol
mov
mov
mov
mov
dec
lea
cmp
inc
mov
out
je
adc
mov
fsubs
data16
or
xor
out
inc
pop
sbb
sbb
mov
into
movb
in
repz
lret
cmp
enter
add
cmp
push
mov
iret
nop
cmp
in
das
fstpt
mov
mov
ja
xchg
inc
outsw
out
call
insb
jnp
or
mov
cmc
out
push
out
in
xor
and
ret
out
outsl
pop
fsubrs
lcall
imul
push
call
pop
movsl
pop
ljmp
aam
das
mov
xchg
push
jmp
mov
sub
xchg
sbb
inc
subb
sbb
mov
rcrl
arpl
mov
enter
ficompl
stos
xchg
repz
jge
subl
dec
shrb
push
mov
cmpsl
xchg
lcall
movsl
arpl
mov
mov
jp
sbb
lds
mov
loope
bound
fisttpl
mov
mov
lcall
mov
mov
dec
pop
and
mov
and
cmp
loop
xchg
lods
imul
and
mov
loope
lcall
aad
hlt
mov
mov
out
gs
andl
sti
and
adcl
pusha
xchg
aaa
push
leave
xor
je
fisttpll
das
push
movsl
test
adcl
ja
popa
or
stc
outsb
jb
cmp
pop
sub
xlat
subl
inc
pusha
fiaddl
cld
insb
shll
sarl
subb
stc
cmp
push
js
scas
shrb
inc
and
arpl
insl
pop
mov
fcompl
inc
inc
mov
inc
iret
push
frstor
loope
sub
cmp
inc
mov
adc
xor
jo
push
fisttpll
imul
pop
mov
and
adc
fisubrl
pop
mov
push
testl
nop
push
into
imul
or
sub
in
lods
pop
in
pop
pop
dec
cmp
pop
push
dec
out
adc
shr
inc
cmp
mov
repz
push
bnd
loop
inc
mov
fcmovnbe
ljmp
xor
mov
xor
add
jle
mov
fists
push
sbb
lahf
shl
add
sub
jmp
cwtl
inc
and
fistps
cmp
push
jge
jno
mov
mov
lcall
enter
int3
cli
bound
mov
dec
jbe
and
dec
pop
cmp
jmp
add
cmc
or
shrb
loope
or
cwtl
ja
mov
hlt
lods
xchg
movsb
test
pop
mov
dec
setns
out
mov
mov
lahf
fwait
mov
dec
lock
fnstenv
repnz
sub
loop
pop
hlt
inc
lods
imul
xor
or
addb
dec
cld
rorb
mov
arpl
sti
fdivrs
or
adc
popf
ja
mov
add
add
stc
mov
mov
mov
mov
mov
fstps
mov
jno
xchg
push
pushf
push
dec
mov
xorb
or
inc
outsl
jecxz
cwtl
xor
movsl
sti
enter
push
imul
xchg
hlt
lock
jb
shll
rorb
in
mov
inc
insl
fs
ret
std
ficoml
dec
pop
in
adc
cmpsb
cmpsb
popw
mov
outsl
divb
pop
lcall
push
inc
repz
dec
inc
pop
fisttpl
mov
rcl
jecxz
cmp
pusha
mov
lret
int
adc
scas
stos
push
daa
stc
insb
shll
mov
mov
popf
lcall
lds
inc
push
mov
testb
enter
fistpll
mov
jl
xchg
jo
lahf
sbb
push
jnp
daa
or
insl
call
mov
fld
jae
add
lahf
mov
jge
mov
test
push
testb
pop
push
adc
ret
stos
movsl
add
mov
pop
adc
mov
cwtl
lds
stos
push
test
mov
popa
lods
jae
cmp
test
ret
push
sbb
add
sahf
mov
cmpsl
xlat
cmpsl
outsl
xor
jp
shr
in
inc
and
sbb
lods
push
out
stos
stos
xchg
jne
mov
fucom
loope
das
dec
ljmp
adc
in
fs
int3
jns
xchg
lahf
xchg
cli
xchg
ss
adc
lds
dec
push
mov
dec
ljmp
je
lods
jo
jb
add
lods
adc
dec
xor
pop
clc
stos
jns
and
or
imul
xchg
pop
jg
and
sbb
lcall
xchg
mov
rcrb
mov
xchg
call
push
test
clc
dec
lods
push
inc
push
lcall
rcll
xchg
sahf
sbb
mov
loope
out
dec
jb
movsb
rcll
mov
enter
gs
ret
pop
or
in
push
inc
rol
call
push
or
dec
inc
je
cli
stos
mov
cmpsl
daa
test
pop
and
inc
mov
fs
sbb
sti
mov
mov
loopne
imul
mov
add
sub
imul
add
sbb
sbb
xchg
shll
add
pop
jns
or
imul
add
mov
insb
mov
int3
dec
sub
or
adc
aad
push
push
or
test
inc
nop
push
mov
je
mov
test
std
stc
in
jmp
cmp
sbb
imul
lods
test
std
stc
in
jmp
cmp
sbb
imul
lods
test
std
stc
in
jmp
cmp
sbb
imul
cltd
test
std
stc
in
jmp
ret
xorl
in
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lods
jnp
imul
dec
inc
aas
jb
or
iret
mov
int
cmp
pop
or
cmp
dec
jg
imull
lret
std
leave
in
test
cmp
inc
or
xor
dec
adc
mov
test
std
jmp
sub
sub
repz
ljmp
scas
cmpsb
xchg
enter
and
jnp
loope
push
dec
sbb
fcom
in
hlt
enter
les
adc
aad
xor
add
push
out
sub
push
mov
mov
xor
push
sub
into
cli
and
loope
jge
inc
cmp
sbb
pushf
and
inc
sbb
fs
fwait
sar
xchg
dec
movsb
sbb
xchg
sti
gs
pop
adc
aad
fcoms
mov
xor
lds
rcrl
mov
xchg
jnp
call
xchg
in
dec
fcompl
sub
dec
jge
insl
sub
dec
adc
ret
std
mov
int
dec
jnp
sbb
inc
cs
dec
sbb
outsb
aad
pop
jmp
fucomip
scas
mov
mov
out
adc
imul
or
outsl
xor
mov
mov
sahf
stos
cld
sar
dec
jnp
imul
push
cmp
insl
sub
dec
or
fisttpl
stos
fstpl
sub
dec
jge
insl
sub
dec
or
fisttpl
stos
fstpl
sub
fcompl
push
mov
mov
aad
adc
hlt
pop
push
ret
rcrb
imul
dec
hlt
dec
push
pop
sti
inc
dec
ljmp
push
mov
or
loopne
pop
push
mov
cld
mov
push
cltd
jmp
push
inc
fisubrl
adc
call
mov
das
xor
mov
lods
shrb
fwait
pop
mov
repnz
or
mov
jle
jbe
mov
and
sub
xchg
rcrb
out
push
fcmovne
lahf
adc
sub
inc
sbb
mov
fisubl
xor
xchg
push
out
pop
xchg
cmp
enter
scas
mov
icebp
mov
jbe
jg
sub
mov
stos
neg
jl
in
inc
push
jl
loope
and
enter
mov
sbb
xchg
mov
adc
sub
hlt
in
jbe
hlt
pop
add
cmp
dec
cmc
test
aam
popl
std
push
aaa
cltd
pusha
lret
cmp
ret
dec
cmpsl
and
lcall
sub
sbb
loopne
cmp
mov
adc
aad
out
rcrl
mov
adc
cmpsb
and
jecxz
adc
arpl
push
pop
dec
enter
sar
ficompl
ds
fsubrl
jns
mov
adcl
cmpsl
sbb
add
jge
jmp
add
pusha
jl
les
lret
mov
mov
pop
or
lahf
inc
outsl
stos
call
or
pop
out
cltd
pop
mov
sbb
jmp
lock
cltd
ss
mov
pop
out
mov
stos
or
mov
ror
lret
icebp
pop
loope
mov
add
pop
cmp
sub
mov
popa
mov
xchg
fucomi
sub
xchg
dec
movsb
inc
ret
sti
pop
xor
sbb
jp
loope
jmp
movsb
pop
aam
popa
push
xlat
out
push
or
fwait
jns
stc
lds
movsl
aam
roll
stos
xchg
and
pop
xchg
inc
cmp
xor
push
in
lods
aam
imul
push
daa
xchg
lret
ljmp
add
jno
js
roll
pop
mov
mov
push
bnd
ds
push
xor
fsubl
inc
mov
xchg
dec
mov
loope
push
fsubs
jbe
xchg
push
lds
das
cmpb
repz
rorb
dec
xchg
xor
cltd
fs
push
dec
sbb
in
mov
mov
sbb
stc
fs
push
sti
jge
leave
or
lcall
push
cmp
xor
daa
insl
push
xor
loop
sbb
cli
mov
or
xchg
jg
dec
test
mov
mov
jg
sbb
and
dec
iret
sub
or
pop
pop
shr
dec
or
rol
adc
mov
insb
sub
sbb
adc
gs
xor
push
add
repz
mov
lahf
adc
fldcw
in
cmp
mov
in
test
mov
das
enter
fisubrl
xlat
dec
mov
push
mov
cmp
in
enter
ljmp
sub
xor
xchg
shlb
push
jae
add
data16
push
pop
bswap
mov
or
or
jge
lds
add
mov
cmp
jb
dec
pop
movsl
xchg
xchg
jg
add
incl
in
push
test
in
sub
and
jp
jns
lds
icebp
test
out
shl
in
lret
pop
scas
pusha
push
outsl
inc
inc
je
ja
icebp
pushf
sub
out
call
lds
sub
xor
dec
lock
push
stos
and
bound
add
and
inc
cmc
inc
push
ret
mov
jmp
int
adc
leave
daa
or
in
cli
stos
stos
mov
xor
jno
push
adc
hlt
mov
push
orl
in
rcrb
jo
jecxz
in
pop
ss
jb
and
sbb
jle
rol
mov
enter
mov
add
int
in
xchg
and
jmp
add
in
repnz
xchg
add
xchg
pop
bound
out
shlb
sarl
jmp
push
mov
cltd
pop
cli
jne
clc
sti
testl
pop
mov
push
mov
ret
sti
jbe
cmp
xlat
out
and
nop
rorl
fiaddl
or
jle
cli
sub
mov
mov
insl
aaa
cmp
inc
push
pushf
cwtl
dec
scas
xor
gs
xorb
push
nop
sub
push
aas
mov
aas
clc
cli
add
jl
rcll
mov
jecxz
mov
das
pop
clc
sub
ret
mov
cli
mov
or
add
das
fsubr
sti
jnp
aad
sub
adc
dec
outsl
fbstp
xor
pop
popa
sbb
push
imul
movzwl
stc
clc
xchg
shll
push
das
std
cmpsl
push
rcl
gs
cmp
cmp
mov
pop
mov
outsl
cmp
ljmp
or
jne
sub
adcl
inc
xor
js
pop
out
js
inc
pop
ljmp
mov
sbb
mov
inc
sbb
movsb
notb
pop
mov
xchg
movsl
jnp
dec
dec
add
loope
out
xchg
fldenv
push
in
imul
movhps
out
or
ffree
pop
xor
shll
sub
insl
add
sub
mov
pop
push
stos
mov
les
xchg
pop
cmc
sub
mov
jns
fistl
cmpsb
popf
or
aas
push
push
push
lea
mov
dec
cmp
pusha
and
shlb
out
stos
loope
outsb
push
and
cmc
rcrl
jno
test
out
sbb
cmpsl
nop
ret
shll
cmp
fwait
ret
add
cmp
sbb
cmp
push
jae
mov
in
int
sub
enter
lcall
int3
pop
std
movsl
push
lods
wrmsr
cmpsl
movsl
repnz
in
add
jne
cmpb
or
dec
sbb
adc
jbe
stc
and
out
and
bound
fucomi
mov
fisttpll
pop
jb
mov
and
xor
test
test
cs
leave
scas
push
and
sti
movsl
mov
dec
mov
pop
push
sbbl
out
js
sarl
gs
outsl
lods
loopne
or
push
lret
xor
dec
cmc
push
xchg
xchg
sbb
es
and
loope
call
test
dec
dec
push
scas
in
aaa
scas
xchg
pusha
jbe
out
popf
push
les
mov
sub
pop
mov
xlat
add
das
jp
repz
push
mov
push
adc
fbld
sar
bound
inc
sub
push
cmp
notl
nop
xchg
xor
pop
mov
xor
sub
mov
mov
rorl
or
outsb
imull
stos
dec
sbb
fs
aas
add
pop
leave
jne
aaa
and
dec
outsb
or
lods
fistpll
dec
push
adc
mov
add
mov
add
ret
js
shll
fwait
aad
mov
es
xor
add
sub
fs
ret
jge
popa
clc
addr16
mov
repnz
cmp
jl
call
imul
cmpl
lds
add
rclb
cmpl
jne
rclb
dec
mov
pop
mov
add
and
fstpl
ret
das
ss
cmp
fs
cmp
aas
mov
xchg
data16
stos
and
xchg
cli
jge
mov
out
inc
lea
rcrb
les
int3
addr16
imul
test
in
es
push
clc
out
push
int
insl
adc
push
push
or
cmc
lds
fcomps
pop
leave
add
dec
mov
xchg
paddq
add
lret
jns
hlt
add
scas
mov
fwait
lods
pop
stos
test
test
dec
iret
test
push
sbb
pop
lahf
or
and
mov
lea
insl
insl
dec
cmp
xchg
repz
fs
sub
add
scas
imul
cli
fsts
mov
mov
pop
and
ss
mov
fs
mov
clc
jno
jg
inc
clc
fisubl
jo
fucomi
or
dec
or
sbb
dec
incl
jl
outsb
bnd
xchg
mov
xchg
jbe
in
pop
mov
aam
jg
dec
rcll
gs
mov
fcomip
sbb
movsl
mov
test
pop
mov
loope
lock
mov
mov
rcrb
cmpl
push
pop
and
lds
std
in
mov
mov
in
lods
mov
shl
pop
loope
and
movsb
inc
dec
inc
jo
cltd
test
sbb
bound
aam
into
jp
sbb
and
mov
pop
cli
mov
or
outsb
or
or
mov
addr16
test
mov
dec
mov
add
and
fcmovnbe
and
xchg
fisttpl
add
loope
sbb
bswap
mov
jg
push
jp
nop
insb
mov
out
int3
ret
mov
push
sub
mov
xchg
inc
popf
mov
sti
mov
xchg
sub
sar
ljmp
add
sbb
or
mov
movsl
mov
xor
rcrl
push
insb
or
jmp
repnz
dec
aam
insl
loope
scas
mov
cwtl
divl
ret
sub
dec
test
adc
sub
movsb
add
ret
lcall
aaa
jno
mov
adc
pop
xchg
or
stos
inc
mov
push
or
jnp
cld
shlb
movsl
popl
in
leave
mov
mov
pop
cld
mov
and
sub
or
or
rorb
andl
shl
inc
xor
push
lea
dec
enter
pop
outsl
loopne
mov
and
call
out
out
sahf
push
test
sbb
xchg
aas
out
jmp
jl
cmpsb
push
cmp
pop
sub
test
dec
lret
xchg
nop
push
jns
shll
movsb
xor
sbb
and
mov
pop
jmp
and
xor
push
daa
adc
mov
mov
and
xchg
enter
pop
ficoms
sbb
inc
rorl
fidivl
pop
mov
test
movsb
and
out
and
repz
loopne
xchg
sbb
sbb
or
out
mov
pop
dec
mov
and
lds
cmp
jo
sub
lahf
fwait
mov
jo
movsl
or
xchg
or
test
mov
lock
lea
xor
or
xchg
stc
xchg
mov
xor
into
sbb
mov
loope
cld
outsb
dec
cmpsb
sub
add
push
les
jg
pop
popf
sbb
push
and
adc
inc
aas
arpl
popa
outsb
cmp
xor
xor
divb
ds
dec
xor
add
arpl
pop
adc
jge
and
push
test
jecxz
xchg
add
and
inc
add
inc
ss
push
movsb
dec
push
sbb
scas
cltd
add
rorb
jnp
das
push
in
add
lret
lsl
or
jg
sahf
mov
pop
mov
mov
test
aam
adc
int
add
adc
dec
jnp
outsb
mov
int3
push
mov
push
cmpsb
js
fildll
popa
rolb
jo
test
movsb
push
jne
sbb
loop
data16
ret
inc
movb
pop
js
outsb
push
inc
fs
push
add
jne
jb
repnz
xchg
dec
pop
jmp
adc
or
in
sahf
shlb
jns
xchg
loopne
popf
jnp
ds
shll
mov
imul
adc
mov
push
cli
inc
xor
mov
jo
divl
stc
dec
push
into
cmp
mov
or
frstor
cmc
daa
adc
jb
dec
ret
movsb
add
mov
arpl
in
adc
insl
adc
es
xor
xor
sahf
jmp
cmpsl
pop
addb
ret
pop
fidivrl
xor
sbb
sub
sbb
lcall
push
mov
jp
mov
mov
jns
inc
cltd
mov
sbb
cmp
or
fldl
test
xor
or
int3
xor
mov
ficoml
addr16
mov
mov
xchg
jl
xchg
dec
xchg
cmp
mov
sbb
sub
int3
lahf
push
mov
mov
push
mov
and
xor
jno
out
cs
stc
jne
iret
shrl
data16
xchg
dec
cli
das
pop
pop
repnz
sbb
shll
add
rcl
out
mov
sub
push
jmp
adc
pop
mov
sarb
xor
and
pusha
in
mov
push
pop
mov
cmp
dec
popf
xchg
inc
sti
push
fistpl
loope
out
call
adc
push
sbb
pusha
sub
inc
adc
repnz
pushf
shrb
insl
mov
loopne
push
xchg
pop
or
push
call
lret
mov
int3
out
insl
mov
in
push
andb
shlb
fbld
push
fnstenv
in
cli
lcall
std
fidivs
pusha
leave
ret
imul
les
or
dec
mov
cld
mov
inc
pusha
ret
jbe
rclb
inc
insb
hlt
mov
shr
mov
mov
mov
jecxz
add
or
push
xchg
pushf
test
scas
pop
jge
dec
pop
mov
in
mull
adc
lods
mov
jns
ret
xor
movsl
aaa
cmpsl
lea
iret
gs
xchg
cs
dec
cmp
pop
fs
xor
leave
and
cld
mov
cmpsl
xchg
in
push
test
add
ret
mov
aam
fidivrl
mov
in
bound
push
push
lahf
popa
cmpl
rolb
inc
push
pop
les
mov
push
cld
and
cmp
js
sub
inc
jl
fisubs
adc
push
arpl
dec
icebp
cmp
addb
cmp
dec
cmp
xchg
xor
xor
xor
cmp
iret
je
push
aaa
mov
mov
in
fbstp
dec
inc
or
jg
out
xor
jge
cmp
inc
or
repnz
push
or
scas
xchg
les
js
push
add
sti
inc
jge
and
mov
cmp
mov
orb
dec
and
xor
es
fwait
pushf
mov
jl
inc
aad
cmpsl
ss
fdivs
movb
mov
jle
and
cli
sti
movsl
int
ret
xlat
add
cmp
fwait
test
scas
sub
les
scas
mov
or
add
fidivrs
mov
aaa
sub
popa
std
jle
std
std
sub
mov
icebp
fldt
lea
dec
dec
or
push
and
mov
adc
sub
adc
xchg
mov
out
and
cs
fadds
popa
add
dec
mov
xor
jg
fcoms
insl
sub
in
jg
jne
xor
xchg
jp
lods
xchg
mov
adc
loope
int
repnz
pushf
scas
sub
enter
sbb
call
xor
neg
aam
xchg
add
or
lcall
imulb
sub
xchg
repz
aas
test
jmp
push
imul
pop
jbe
sub
sub
adc
stos
adc
and
cltd
movsb
and
fstps
mov
insb
call
push
addb
xor
aaa
decl
push
jg
int
cs
mov
sti
icebp
xor
add
popf
sahf
and
push
in
inc
adc
jmp
in
es
enter
ss
pusha
inc
enter
pop
mov
in
jb
lahf
cli
xlat
xchg
xor
and
mov
test
mov
adc
sbb
xchg
mov
jb
add
and
sbb
jle
sbb
jle
out
mov
mov
mov
out
ljmp
cmp
test
scas
or
in
xchg
add
fildl
test
pushf
and
xlat
and
and
outsb
xchg
dec
popf
enter
movlhps
mov
xchg
lock
mov
or
lock
jp
shll
xchg
or
dec
sub
sbb
or
ror
addr16
fwait
pusha
adc
or
cmp
daa
push
ret
into
subl
cwtl
pusha
call
aaa
rol
pop
movb
fisubl
push
into
jne
outsl
les
pop
inc
jecxz
aas
pop
push
push
push
or
rcr
stc
fs
push
jle
je
xchg
dec
int
idivb
les
xor
pop
test
ljmp
jno
mov
sub
icebp
jg
mov
cmp
outsl
daa
cmp
jo
jne
mov
js
cld
sbb
mov
mov
mov
jns
fmulp
cmc
mov
subb
enter
or
arpl
adc
hlt
sub
lds
and
clc
push
cmp
movsb
and
xchg
mov
adc
mov
xlat
fdivl
add
je
mov
cmc
cmpsl
popf
pop
push
push
jno
add
fidivrl
mov
aaa
and
popa
xor
ret
ljmp
in
repnz
cmp
ror
sbb
or
jg
dec
lret
or
xchg
insb
xchg
xchg
in
outsl
ret
add
cmc
rcl
cmpsb
test
jbe
in
addb
lahf
fimuls
cmp
cmp
push
adc
jne
or
es
pushf
stos
imul
sbb
gs
jae
gs
loope
jp
or
out
xchg
dec
iret
sti
mov
push
in
jb
nop
pop
pop
dec
rcr
lret
das
scas
rcrl
and
fs
stos
imul
sbb
mov
dec
in
ss
loopne
fmuls
push
repnz
sub
mov
and
cli
dec
out
or
sub
fldenv
and
and
pusha
out
stc
loopne
mov
subb
mov
mov
into
loopne
jne
addr16
or
loopne
lret
pop
out
pusha
shlb
mov
not
xchg
aad
sbbl
dec
push
cmp
pop
ss
and
push
push
xchg
pop
cmp
dec
mov
pop
out
test
or
aas
das
push
repz
roll
xor
lcall
cmp
int3
jbe
mov
mov
adc
mov
and
out
push
js
mov
int3
adc
sar
loop
fs
jnp
sub
imul
xor
pop
shl
push
xor
arpl
sbb
xchg
cmc
pop
mov
push
je
ss
add
cmp
mov
les
mov
fnstcw
sbb
ret
sub
stos
mov
in
movsb
popf
pushf
sub
filds
repz
inc
cmp
ror
xchg
imul
es
stc
pushf
push
adc
xor
inc
or
bound
or
rcl
loopne
push
stc
lcall
pmulhuw
cmpsb
jmp
pop
dec
shlb
xor
jbe
test
fcompl
int
mov
sahf
push
in
adc
xor
mov
out
rcrb
fwait
nop
or
mov
mov
xchg
ret
push
aad
cld
out
scas
push
pop
repnz
ret
lock
je
out
test
and
push
add
mov
mov
fs
out
jmp
das
gs
xor
jne
fisubrl
cmc
lret
and
fucomp
xchg
daa
dec
push
sub
fsubrl
adc
push
push
mov
adc
insl
sti
mov
outsb
mov
bound
mov
lds
jne
pusha
lock
xchg
idivl
cmpsw
dec
mov
mov
mov
cmc
ffree
jg
mov
loope
mov
dec
ljmp
aas
mov
repnz
xor
mov
lods
les
add
mov
cmp
fildll
mov
pop
enter
dec
pushf
xor
sbb
sub
sarl
loope
xor
flds
xor
adc
or
push
sbb
mov
daa
fmuls
ret
xorb
mov
mov
jg
pop
pop
scas
jecxz
adc
aad
mov
jmp
inc
ljmp
movq
lds
or
and
jp
jle
sbb
ja
dec
push
dec
test
and
ljmp
insb
shrb
cmp
lock
outsb
cltd
imul
or
sub
dec
or
fisttpl
stos
fstpl
sub
dec
jge
insl
sub
dec
or
fisttpl
stos
fstpl
sub
dec
jge
insl
sub
dec
or
fisttpl
stos
fstpl
sub
sbb
or
sub
dec
lret
mov
fisttpl
aam
in
hlt
rep
jecxz
rorl
pop
mov
sub
popa
std
push
int
fnsave
lods
and
adc
jecxz
rorl
pop
mov
mov
sbb
push
int
fnsave
lods
and
rep
jecxz
rorl
pop
mov
mov
sbb
and
push
rclb
push
xchg
and
and
fidivrs
or
mov
cwtl
inc
pop
mov
test
cmp
mov
mov
pop
iret
add
mov
push
inc
fstl
or
mov
mov
jno
pop
dec
fdiv
int
jbe
inc
or
test
nop
jb
adc
js
adc
pop
cmp
xorl
xchg
mov
mov
inc
jmp
mov
mov
enter
sub
sub
or
fidivs
enter
mov
adc
sti
sbb
cwtl
pop
sub
xor
es
mov
mov
add
dec
ret
pop
mov
mov
sbb
push
int
fnsave
lods
and
xchg
add
xor
inc
int3
cmp
add
push
fwait
mov
into
jbe
jae
test
jg
dec
subb
gs
sbb
lods
inc
mov
into
inc
jp
imul
xchg
and
mov
sbb
push
int
fnsave
lods
and
rep
jecxz
rorl
pop
mov
mov
sbb
push
int
fnsave
lods
and
rep
xorb
mov
add
cmpxchg
sbb
mov
sbb
xor
test
in
cmpsb
ja
inc
push
mov
xchg
dec
loopne
add
das
in
ja
icebp
sub
and
jl
fwait
adc
loopne
and
add
pop
sbb
and
std
shl
mov
sub
jb
inc
out
push
xlat
sub
jle
mov
out
gs
and
mov
or
pop
in
std
xor
loopne
or
in
push
lahf
and
lock
push
rclb
ss
dec
insb
int3
cmpsl
add
jle
pop
imul
xlat
fwait
cmp
push
stc
pop
outsb
adc
sbb
mov
mov
test
call
rorl
out
sti
lret
and
lret
push
add
push
addl
lcall
xorb
outsb
data16
je
push
pop
push
xchg
shl
into
ret
xchg
jae
or
fmull
dec
sub
jbe
loop
fsubl
sbb
add
ficomps
xor
xorl
in
loop
insb
in
pop
sti
fnstenv
js,pn
mov
repz
daa
leave
add
stos
dec
mov
std
into
dec
mulb
xchg
jae
ret
push
or
outsb
cmp
nop
scas
in
mov
sahf
mov
pop
sbb
fstl
aas
jns
in
push
xor
xor
mov
add
insl
push
shlb
sbb
stc
test
cmovae
lahf
es
sub
or
lea
cmp
xchg
lods
ret
inc
in
sarl
out
lret
ss
outsb
jns
push
sub
mulb
lods
bound
push
xchg
xchg
mov
pop
push
imul
xchg
test
sbb
cmp
mov
jne
cltd
add
cmpsl
addr16
shlb
ja
nop
cmpsl
orl
mov
mov
loopne
pusha
adc
fdivrp
popa
fists
push
movsb
pop
inc
insl
sub
repz
sar
adc
sbb
imul
xor
and
mov
or
ja
mov
sti
mov
pop
pop
insl
fs
loope
pop
sti
add
cs
pop
arpl
xchg
out
xor
mov
jp
cmp
sub
je
inc
ss
test
out
or
lods
jge
loop
loopne
push
mov
dec
pop
aad
push
ret
aaa
pop
pop
add
int3
mov
pop
mov
popf
arpl
jg
outsl
lock
loopne
loope
pop
into
dec
push
pop
dec
in
test
inc
dec
xchg
hlt
sbb
push
repnz
stos
lret
pop
inc
int3
sub
divl
xor
push
rolb
push
fwait
pop
xchg
cmp
scas
rcrl
rorl
out
jecxz
xchg
lret
add
xlat
dec
pushf
sbb
pop
std
inc
addb
xchg
adc
std
mov
imul
aam
js
fisttps
lds
decl
dec
imul
xchg
filds
xchg
enter
lret
in
xchg
mov
cmp
jbe
inc
je
lcall
jns
fst
loop
in
clc
cwtl
push
add
jbe
int3
mov
outsb
popl
roll
mov
out
push
xor
test
xchg
mov
dec
sbb
mov
shl
pop
imul
cmp
clc
cmpsl
mov
dec
cmp
xor
mov
cmp
sbb
das
insb
inc
sub
pop
fs
or
push
nop
mov
or
ret
ja
jno
pop
jo
ffree
add
aam
es
jno
sbb
adc
iret
pushf
or
mov
ret
add
ret
xchg
adc
lahf
sub
and
cmp
sub
mov
dec
adc
ret
hlt
pushf
and
sub
std
or
pop
pop
mov
mov
je
out
adc
push
hlt
lods
popf
cmp
call
push
int
adc
ror
loop
mov
add
test
fisubl
rorl
adc
test
cmc
jg
xchg
adc
lcall
mov
or
jl
lahf
jne
or
xor
fdivr
dec
xor
push
ss
push
repz
jbe
pop
cmpsl
and
inc
add
jge
and
shrl
pop
sub
cmp
sbb
mov
aas
mov
dec
mov
sub
push
pop
jns
fldcw
adc
outsb
inc
mov
adc
pop
mov
stos
popa
cmp
add
sti
repz
ja
pop
jo
jo
jmp
leave
pop
icebp
push
cltd
shll
shll
in
dec
scas
or
addr16
fcoms
mov
cmpsl
rorb
clc
jo
shll
and
inc
mov
mov
sbb
mov
cs
fwait
leave
push
pop
iret
pop
mov
push
cld
mov
jge
mov
mov
or
sub
dec
jo
mov
push
call
sbb
xor
jg
or
shll
std
jl
cmc
in
mov
push
jmp
divl
test
fadds
out
movsl
ja
mov
push
and
add
fidivrl
cmp
pop
icebp
jecxz
dec
xchg
scas
and
push
pop
pop
das
data16
test
stos
mov
ja
outsb
cmp
pop
ret
pop
aam
adc
cmp
adc
fdivl
sbb
std
gs
sub
repnz
mov
and
test
and
out
xchg
xchg
leave
js
dec
cmp
push
data16
xor
add
nop
not
mov
inc
lahf
dec
sub
mov
test
jecxz
lcall
fwait
cmp
mov
outsb
in
imul
in
mov
xchg
mov
pushf
xor
imull
test
iret
sbb
xchg
adc
lock
xchg
outsl
fdivs
pop
and
sub
mov
cmp
test
sub
movsl
cmp
sarl
xor
test
xchg
dec
push
addr16
push
test
add
pushf
mov
inc
sti
aam
xchg
jne
sti
out
pop
push
inc
mov
cli
pushf
push
insl
push
or
add
cltd
lods
pushf
pop
scas
js
and
mov
lds
xchg
shlb
sub
inc
jnp
scas
sub
outsb
jge,pn
inc
pop
add
jmp
ret
inc
mov
xlat
xchg
mov
pushf
dec
cmp
fnstenv
xchg
leave
xchg
jb
cs
cmpsl
adcl
inc
push
xchg
mov
mov
add
outsl
xchg
inc
nop
ret
hlt
mov
aad
and
xor
adc
xchg
ljmp
icebp
xor
data16
sbb
xchg
dec
push
out
push
inc
add
xorb
dec
mov
mov
adc
outsl
xchg
stos
dec
cld
add
xor
fsubrl
addr16
xchg
js
jns
sbb
cmp
fsubl
test
fadd
cmp
cmc
sbb
addr16
aaa
push
xor
cs
push
fwait
cs
jbe
dec
lds
sub
addr16
andb
add
pusha
inc
and
inc
movsl
inc
sbb
mov
enter
bound
outsl
lea
mov
push
stc
mov
jmp
fbld
push
inc
or
jge
inc
icebp
mov
data16
out
in
sti
dec
data16
or
lods
ds
and
inc
xchg
push
fcomi
cmp
mov
jns
gs
in
lcall
and
test
sub
xor
sbb
sbb
iret
fwait
xchg
dec
insl
xchg
ds
in
scas
test
sub
imul
dec
or
js
xchg
jge
sbb
xor
test
mov
test
fidivrs
scas
mov
arpl
mov
ror
aad
sub
dec
loopne
mov
push
gs
rclb
xlat
cwtl
mov
jg
inc
sti
aam
call
imull
ja
pushf
push
ss
mov
fbstp
cmc
filds
shl
rorl
mov
dec
cmp
inc
mov
cltd
fmul
cmpsl
insb
add
popw
sbbl
repz
mov
xchg
pop
aas
lds
call
adc
insb
mov
pop
mov
xor
cmpl
adc
pop
mov
mov
int3
es
lods
mov
ja
jo
notb
inc
in
loop
xchg
push
push
arpl
sbb
sbbl
ljmp
insb
sbb
and
shlb
outsl
mov
mov
insl
adc
push
out
cmp
lods
aam
sarl
fimuls
cmpsb
and
or
sbb
push
jo
sahf
scas
mov
aam
ds
std
ret
xchg
sbb
lds
nop
mov
aad
out
repnz
mov
push
call
lret
inc
ljmp
mov
mov
xchg
test
adc
or
mov
or
dec
cmp
imul
mov
iret
push
popf
xchg
aam
push
aam
xor
push
loopne
push
into
pop
dec
out
test
jne
lahf
sar
and
filds
imul
jecxz
mov
cli
repnz
int
mov
jno
mov
cmc
cmp
test
push
movsl
cmp
mov
mov
icebp
movsb
mov
push
and
mov
daa
lret
xrelease
imul
insb
in
ds
test
and
push
mov
push
jmp
and
xor
lahf
test
adcl
jno
fninit
inc
add
mov
jnp
pop
push
repz
mov
pop
sbb
stos
je
loop
sbb
pop
pop
les
mov
int3
out
mov
mov
mov
jnp
repz
mov
inc
jnp
dec
push
js
sbb
int3
lcall
ret
push
movsl
xchg
xchg
push
std
add
or
pop
addl
mov
and
gs
dec
or
mov
sub
enter
jnp
dec
lret
push
shlb
rorl
js
fisttpl
rcrb
test
sahf
mov
stos
lods
repnz
in
push
and
scas
add
sbb
and
cs
or
or
in
sub
xor
add
dec
shll
insl
lods
out
push
push
test
pop
jp
cli
xor
pop
jle
jne
pop
xor
mov
jne
pop
or
pop
mov
xchg
cmp
mov
mov
ret
scas
dec
movsl
enter
inc
adc
js
or
pop
fnstsw
inc
xchg
aad
andl
mov
and
clc
into
jno
or
leave
mov
and
and
jge
sub
xchg
mov
mov
popa
adc
xor
push
rcll
test
lds
ljmp
jb
mov
bound
in
sub
lods
ja
inc
mov
call
add
sbb
cmpsl
movsb
pop
cmp
xchg
loopne
out
jb
jmp
adc
inc
hlt
xor
push
push
bound
inc
push
sbb
push
mov
push
dec
aad
sub
inc
cmc
push
jae
and
xor
sbb
add
loopne
sbb
jbe
arpl
out
add
mov
ret
push
out
sahf
packuswb
test
mov
js
cmc
and
pop
sti
sub
mov
lret
popf
daa
aad
dec
dec
push
dec
mov
lods
out
repz
rclb
or
pop
frstor
sbb
inc
subb
xor
xor
adc
in
lahf
aas
jo
push
in
je
mov
scas
es
test
lods
loopne
out
mov
in
fistpll
lcall
mov
fmul
aas
sbb
jle
xor
movsb
inc
push
data16
cltd
lea
aas
xlat
mov
int
sti
sub
pop
les
xlat
fcoml
das
cmp
push
adc
aas
sub
jae
in
mov
cmp
lock
ds
shlb
and
jg
jne
icebp
loope
leave
int3
in
stc
sub
aad
mov
xchg
cmpsl
addr16
mov
cmc
or
mov
push
ret
pop
test
stc
mov
scas
cltd
xchg
dec
aaa
xchg
inc
lcall
xchg
add
lret
dec
push
lea
dec
lods
lcall
mov
stos
aas
cmp
add
mov
xchg
ds
lds
out
es
inc
sub
adc
jno
fidivrl
push
push
or
jle
xchg
push
popf
rcrl
jae
jo
dec
ljmp
push
add
jo
lds
in
popf
inc
scas
cmp
rcl
fs
dec
push
mov
in
jns
pop
sahf
jl
pushf
mov
mov
jmp
lret
lret
roll
rcll
js
addl
mov
or
jmp
lods
sti
into
inc
test
in
pop
cltd
out
lret
movsb
or
mov
popw
or
cld
popf
add
inc
fs
out
in
fcomi
cmp
dec
loope
aad
sub
sbb
mov
adc
mov
into
xchg
or
xor
mov
stos
jo
add
int3
jmp
pop
test
ljmp
xchg
jo
in
mov
pop
xlat
loopne
sbb
mov
sub
movsb
push
jae
mov
sub
leave
lahf
add
mov
mov
jo
mov
jmp
mov
pop
out
jmp
test
push
mov
daa
repz
jecxz
adc
popa
scas
mov
nop
dec
add
lods
lds
inc
je
xchg
sub
ss
xchg
dec
push
sub
add
lret
out
addr16
add
sbb
push
jno
es
std
stos
mov
aad
je
pop
lods
loope
cmp
sahf
xchg
mov
scas
add
shll
fidivrl
and
ds
ja
fdivs
mov
cwtl
add
outsl
xchg
inc
je
sbb
sti
adc
test
lds
inc
stos
divl
icebp
int
stos
ja
xor
or
ljmp
pop
add
loop
inc
push
roll
sbb
xchg
jle
jmp
xchg
in
fimuls
hlt
outsl
pop
xchg
and
popf
xlat
mov
adcl
push
aam
outsb
or
push
xor
adc
mov
shll
pusha
adc
pop
mov
sub
push
xor
push
push
jecxz
sub
inc
adc
inc
rorl
adc
imul
or
hlt
cmp
scas
dec
xchg
pop
inc
addr16
jl
lcall
or
aam
divb
arpl
into
aad
test
and
ror
or
jo
icebp
mov
repnz
daa
push
enter
mov
push
mov
jecxz
push
push
das
sub
adc
bound
daa
xchg
mov
and
xor
sbb
ror
fistpl
addl
mov
addr16
mov
dec
test
cwtl
adc
and
cs
adc
push
stos
scas
lods
pop
adc
int3
cmp
ja
jmp
jb
icebp
imul
jl
in
xchg
sbb
mov
or
mov
dec
sti
out
loopne
mov
sub
lods
jmp
push
inc
sub
or
je
or
xor
dec
dec
sub
mov
faddp
mov
hlt
inc
cmp
inc
mov
cmpsl
add
andl
inc
dec
iret
rorl
fdivp
inc
test
sti
out
pop
mov
pusha
rcll
sub
push
nop
cwtl
adc
jle
xchg
loopne
loop
adc
and
fidivl
divb
jno
push
outsb
xchg
fildl
cwtl
scas
xchg
and
lret
fstps
jl
and
sbb
push
insl
push
push
lret
push
cmpsb
enter
cmp
arpl
outsb
mov
call
aaa
and
cmp
fs
or
mull
sbb
inc
shll
push
orb
jne
mov
pop
mov
sub
stos
push
pushl
ja
test
sbb
pop
aad
xchg
inc
sub
idivl
popf
sbb
int3
in
mov
mov
adc
fsubrs
jmp
lds
sbb
add
lret
mov
push
mov
pop
in
test
and
jmp
ret
hlt
inc
xchg
cmpsl
sub
int
fistpll
incb
mov
in
outsl
lahf
mov
jmp
or
add
xchg
and
decb
and
pusha
pop
std
or
divl
ja
call
and
xor
scas
clc
aad
xchg
or
mov
inc
lock
xor
lahf
filds
dec
pushf
xor
js
jmp
out
adc
inc
inc
int
lds
clc
push
mov
or
ds
xchg
dec
jb
movsw
lretw
sub
inc
jne
lods
dec
xor
repz
ret
cmc
cmp
stc
xor
leave
mov
das
shr
mov
fcompl
mov
pop
out
cmp
pop
pop
aam
data16
js
jno
lock
sarb
mov
pop
dec
pop
pop
xor
fdivl
adc
fstp
mov
dec
stos
push
sbb
loopne
popa
xchg
jnp
xchg
int
lret
sub
add
push
pusha
out
pop
push
mov
and
popa
aas
ret
shrl
sub
push
cltd
pop
es
jnp
je
icebp
sbb
mov
push
pop
inc
push
jb
sarb
test
ja
adc
xor
inc
pop
fdivs
inc
add
add
cmpsb
xchg
in
std
nop
xor
mov
mov
jne
rcrb
cltd
insl
mov
jecxz
repz
call
je
inc
jbe
lahf
or
leave
push
jno
lods
pop
lret
hlt
jae
aad
dec
out
sbb
imul
cltd
mov
jmp
pop
or
out
bound
sti
out
add
add
arpl
leave
sub
in
cmpsl
loopne
loop
lods
bound
inc
mov
ljmp
and
or
adc
sbb
jmp
outsb
or
push
mov
inc
idivl
lret
es
not
push
rorb
mov
leave
inc
lods
adc
test
data16
sti
add
sahf
dec
push
pushf
ret
scas
cmp
lea
or
mov
push
cmp
mov
daa
mov
dec
lret
xlat
inc
lahf
sbb
dec
cmpsb
push
in
or
dec
jl
pop
push
jne
repnz
pop
cmp
cltd
xchg
scas
outsl
movsb
xchg
mov
mov
gs
sahf
movsl
aaa
push
dec
pop
pop
xchg
fcoml
out
push
sbb
test
out
push
push
ficomps
lahf
sbb
sub
pushf
sub
iret
push
and
out
and
jae
aaa
xchg
popf
fmull
out
and
cmp
sbb
or
push
daa
sbb
push
out
adc
xor
mov
cli
add
xchg
aas
fidivs
cld
in
mov
mov
sbb
outsl
ss
inc
xchg
cltd
mov
loop
std
cmp
int3
cmp
pusha
rclb
sub
mov
dec
inc
add
push
jno
sbb
inc
cmp
lea
sub
inc
shrl
test
or
repz
popf
adc
insl
pop
dec
xchg
int
cwtl
test
hlt
dec
and
jbe
hlt
popa
xchg
sbb
dec
repz
adc
add
jle
mov
pop
fimull
jnp
and
testl
pop
push
mov
inc
scas
cli
push
pop
jmp
push
lret
xor
jl
mov
pop
push
pop
pop
lret
call
and
xchg
es
movsb
or
mov
mov
rcll
cmp
push
adc
iret
pop
movsb
sub
movsl
repz
xor
xor
lods
outsl
adc
iret
jecxz
fdivs
mov
int
add
sbbl
lea
gs
xlat
mov
aad
mov
pushf
pop
sub
imul
jae
inc
out
cmpsl
rorb
jecxz
rcll
call
in
jecxz
cs
mov
push
jg
inc
js
cmp
push
dec
subl
dec
jmp
push
mov
cmp
dec
stos
jmp
iret
stos
jecxz
jle
lods
lods
cmp
out
mov
push
ficompl
mov
fucomip
fsubrl
xor
jg
mov
pop
loop
mov
mov
loopne
jp
lods
dec
sbb
pop
mov
or
add
inc
and
into
iret
push
rcrl
or
cwtl
idivb
or
adc
mov
aam
imul
sbb
inc
aam
xor
cs
loop
xor
sbb
lods
push
les
mov
ja
inc
cmp
sub
push
mov
popa
sub
fcoml
inc
orb
adc
test
or
jno
in
data16
loope
scas
stos
test
push
sub
cmp
lds
fadds
aaa
ljmp
xchg
cmpsl
sti
cmp
ficomps
xchg
push
jae
clc
jge
dec
ret
pop
mov
mov
sbb
push
int
fnsave
lods
and
rep
jecxz
rorl
pop
mov
mov
sbb
push
int
fnsave
lods
and
rep
jecxz
ror
ret
pop
mov
mov
sbb
push
int
fnsave
lods
and
rep
jecxz
rorl
pop
mov
mov
sbb
stc
int
stos
inc
and
sti
sarb
loopne
pop
fdivp
mov
ljmp
and
das
popa
movups
xorb
and
mov
loopne
nop
incl
loope
aas
inc
das
jo
pusha
push
add
pop
and
sbb
imul
iret
andb
aas
arpl
jle
jge
sub
or
dec
sub
int3
mov
pop
lock
mov
mov
sar
pop
mov
arpl
and
cwtl
mov
pop
jo
ljmp
lods
rol
loopne
pop
out
push
xor
lods
add
xchg
jg
adc
push
cmp
xchg
push
ds
jo
mov
xchg
push
mov
mov
mov
loopne
mov
xchg
fbstp
mov
or
out
push
loop
mov
and
bound
jo
int3
sub
push
in
mov
lcall
jp
or
ret
aas
push
xor
imul
jb
cmp
insb
mov
inc
pop
lea
jne
mov
lock
nop
incl
pop
push
aas
inc
xchg
pusha
xor
inc
add
xchg
mov
mov
nop
pop
repnz
mov
pop
jo
sbb
add
push
sub
mov
movsl
jmp
nop
lods
lds
xor
dec
pusha
aas
adc
outsb
outsl
pop
cmp
mov
rorb
mov
fdivl
mov
das
jo
pusha
movups
outsl
xor
dec
sarb
loopne
nop
incl
iret
push
aas
inc
das
jo
pusha
movups
outsl
xor
dec
sarb
iret
popa
outsb
cwtl
and
jbe
lock
jo
push
jae
pop
fwait
xchg
cltd
jno
loopne
sub
icebp
cmp
iret
or
xchg
outsb
fisubl
addr16
or
add
dec
inc
xchg
cs
stos
out
jmp
stos
lret
fs
mov
in
loopne
pusha
stos
movsb
sbb
cmp
inc
cli
sbb
ret
fisubrs
mov
fwait
add
imul
add
dec
pop
loop
fwait
movsb
mov
std
add
pop
push
rclb
and
imul
out
out
xchg
add
aas
inc
mov
flds
out
stc
sbb
int3
jle
test
inc
iret
push
gs
lret
rcr
loopne
rcl
sarb
decl
sub
sub
fwait
inc
jmp
movb
out
jbe
sti
add
lock
fidivs
fldenv
and
sub
jno
push
or
mov
inc
push
adc
in
ss
in
sbb
dec
mov
or
aad
fimull
push
or
sbb
jno
stos
dec
mov
stos
jne
mov
mov
and
mov
inc
pop
mov
daa
call
mov
xor
stos
push
or
xor
movsb
js
jmp
mov
movsl
sub
cmp
and
test
inc
mov
loop
pushl
lds
insb
test
jbe
cli
inc
push
in
cmpb
xchg
andb
mov
jmp
test
jge
add
int3
xchg
mov
not
dec
mov
vpsadbw
jo
lahf
movb
mov
mov
and
scas
les
sub
xrstor
jns
pop
lahf
add
lds
and
sbb
in
mov
add
xchg
pusha
adc
pushf
lds
popf
xchg
jmp
sahf
pop
and
push
sub
imul
jg
fcoms
movsl
dec
loopne
call
jg
mov
mov
mov
adc
add
inc
test
add
int3
jne
sub
iret
inc
pop
repnz
or
lods
lret
fwait
jb
insb
cmp
xlat
in
push
pop
add
sarl
or
mov
rcrl
lahf
mov
cmc
sarb
lret
dec
data16
xor
inc
mov
dec
inc
xchg
addr16
lahf
rcrl
daa
fdivrp
aam
and
cmp
stos
outsl
mov
pop
outsb
sahf
test
rcrl
shrl
mov
out
jbe
push
test
lods
sbb
fcomi
mov
jmp
push
inc
imul
pushl
dec
nop
dec
mov
cmc
imul
cld
dec
mov
repnz
inc
shl
inc
mov
pop
je
clc
cli
cmpsb
loop
and
mov
xor
jb
sbb
lret
mov
pop
movsb
pop
mov
xchg
mov
xchg
andb
repnz
xor
sbbl
cmp
cmp
cmpsb
jmp
in
ja
mov
gs
mov
pushf
mov
cmpsl
movsb
inc
push
cmp
loop
in
loop
xchg
aas
xlat
xor
dec
stc
stc
pop
jns
adc
inc
adc
cwtl
mov
push
cwtl
mov
mov
mov
xor
shlb
sbb
add
in
cmp
adc
lods
xor
jmp
cmp
movsb
test
dec
sub
out
out
sub
cmp
mov
std
movl
add
or
add
mov
xchg
sbb
pop
cmp
data16
in
jg
movsl
movsl
xchg
jg
test
jae
pop
ds
cmp
mov
aaa
les
add
mov
fcoms
jno
add
jg
pushf
dec
sarl
pop
sub
addl
popa
fildl
or
pop
add
ds
fistps
dec
mov
jo
cmp
rcl
rorb
xor
call
sbb
mov
inc
xchg
cmp
push
mov
sarb
movsl
das
sub
mov
int
mov
cmp
mov
xor
out
add
out
adc
cld
push
mov
push
mov
cmp
addr16
jne
xchg
fdivrl
sbb
pop
sub
out
mov
and
adc
inc
pop
shll
icebp
sbb
divps
test
loope
xchg
pop
push
push
icebp
sub
sub
test
aas
mov
xor
pop
adc
mov
in
cmp
outsb
testb
and
lret
out
xchg
imul
jae
pop
mov
xlat
jecxz
and
repnz
pop
out
lods
loopne
push
aam
aas
mov
js
or
or
mov
roll
inc
sub
pop
xchg
fidivrs
fcomps
add
adc
pusha
push
dec
scas
fcomps
adc
xchg
data16
xor
cmp
sar
mov
pop
rclb
dec
mov
stc
scas
jns
in
add
aaa
inc
push
cmp
mov
or
pandn
call
aas
loopne
xor
sahf
xchg
inc
sbb
arpl
jge
inc
dec
rorb
fimull
mov
pop
test
stos
mov
sub
lds
jl
fisttpll
mov
repz
fbld
push
mov
test
mov
sub
push
pop
pop
cmp
mov
dec
aas
sbb
in
scas
xlat
and
mov
fisttpl
repz
inc
bound
cld
or
xchg
das
nop
in
gs
pop
cmp
cmp
pop
xor
xor
and
jne
sarl
loope
loop
into
sbb
pop
adc
rorl
cwtl
jb
loopne
mov
adc
mov
loopne
dec
icebp
mov
push
not
sub
sbb
movsb
xor
xor
cmp
cltd
test
push
or
adc
push
mov
or
ds
mov
ds
in
mov
dec
loopne
adc
add
repz
xor
cmpsl
call
inc
inc
xchg
mov
fmull
and
pop
ljmp
dec
hlt
pop
inc
bound
roll
cmp
dec
jmp
fbstp
inc
cmpsb
xorb
sub
pop
mov
add
cmp
push
out
sub
rolb
jl
loop
mov
adc
pushf
sub
sub
sub
rcrb
leave
push
sub
sub
bound
jae
or
inc
mov
out
cld
pop
dec
clc
push
pop
add
test
sub
or
jo
lcall
dec
pusha
dec
hlt
ljmp
into
mov
xor
cmp
popa
inc
sbb
inc
push
gs
pop
xchg
rcll
out
adc
mov
jmp
sbb
mov
dec
orl
inc
adc
jno
pushf
or
mov
mov
scas
sbb
jle
fnstsw
add
in
arpl
add
xchg
test
test
fldt
pop
mov
fcmovu
and
sub
cs
sbb
adc
jge
adc
scas
movsl
push
push
adc
pop
dec
test
ds
dec
pusha
ret
das
sbbl
inc
cli
das
mov
cmpsl
xchg
bswap
inc
jae
sbb
push
adc
add
movd
mov
out
ret
ds
mov
sbb
mov
mov
cld
mov
call
aad
cltd
jne
aam
xchg
push
pop
subb
sub
movsb
dec
mov
or
fidivrl
les
int
test
cmpsl
mov
xchg
cltd
mov
sbb
inc
andb
sbb
lret
rorl
inc
jb
addr16
push
mov
xchg
lods
cmp
mov
pop
popf
adc
cwtl
cmp
cmpsb
pop
aaa
repnz
xchg
mov
mov
loop
popa
push
pop
push
test
jno,pn
stos
mov
std
or
sub
mov
adc
test
push
push
and
xor
aas
add
jle
idivb
pushf
push
in
sub
mov
sarb
dec
fwait
divl
add
out
mov
cltd
fimull
fsubl
ljmp
add
xchg
arpl
xor
and
cmp
lds
fcmovu
ret
sub
enter
dec
and
xchg
and
leave
into
subl
cmpsl
loopne
inc
and
bound
fcmovnb
cmp
inc
cwtl
movlps
and
dec
xlat
shlb
orb
xchg
xor
ja
and
adc
jb
pop
pop
arpl
mov
dec
add
inc
into
pop
pop
lds
repnz
cmp
adc
inc
mov
icebp
push
outsb
iret
adc
jp
dec
fiadds
adc
es
or
dec
mov
ja
cmp
ljmp
adc
cmp
dec
xchg
add
and
cmpsb
stos
repz
ffree
bound
pop
sahf
xor
int
es
lea
insb
imul
std
push
sbb
push
pop
fsubrl
xchg
mov
adc
js
test
mov
xor
dec
ljmp
mov
gs
in
iret
aam
jecxz
loop
or
jne
add
leave
inc
xlat
lea
cmpsl
shr
ss
xchg
int
lahf
and
sar
xor
shlb
out
cmp
xchg
cmp
js
inc
jl
out
sbb
mov
sbb
invd
sbb
popa
test
mov
or
pop
push
and
ficomps
adc
je
xchg
movsl
icebp
rclb
pop
inc
push
mov
and
iret
xchg
push
in
lds
decl
sti
loopne
and
mov
xchg
pop
jno
sub
push
ret
xchg
inc
pop
cld
mov
jmp
cs
pop
and
pop
rcl
addr16
xlat
scas
push
adc
or
sbb
add
cmp
repnz
popf
lret
sbb
cld
mov
xchg
push
xchg
test
dec
adc
sub
pop
push
mov
mov
clc
out
pop
xor
sbb
daa
inc
lock
mov
push
leave
dec
cmp
xchg
push
push
dec
push
icebp
or
inc
insb
imul
mov
jae
movsb
imul
clc
cwtl
mov
inc
mov
ret
mov
fstp
sti
cmpsl
int3
cmpsl
push
and
xchg
cmc
and
inc
iret
rcrb
fistl
pop
cli
mov
push
cli
or
jmp
lods
pusha
cmpsl
push
mov
sbb
or
pop
inc
xchg
inc
popa
jmp
movsl
pop
cwtl
pop
dec
stc
js
mov
mov
mov
frstor
inc
and
pushf
insb
outsl
test
and
ret
push
jno
add
push
adc
mov
mov
jp
imul
mov
pushf
std
push
and
cmpl
adc
clc
sbb
test
int3
fadds
or
in
in
lds
inc
aad
inc
insl
lock
stos
cli
or
adc
leave
iret
adc
stos
xchg
clc
mov
push
mul
add
out
dec
in
hlt
push
insb
sbb
sub
adc
dec
or
outsl
lret
cltd
push
push
push
jne
xlat
mov
mov
fidivl
mov
flds
mov
cmpsb
jge
sbb
sbb
outsb
inc
mov
inc
fisttps
scas
jo
in
push
bound
sbb
shr
or
std
sbb
add
lcall
push
push
cwtl
cmp
and
jno
dec
iret
pop
pop
jbe
xchg
cmpsb
jg
dec
fwait
fs
scas
fs
call
lods
and
inc
and
xchg
jl
sbb
jb
mov
leave
push
lods
mov
jmp
adc
filds
push
stc
add
dec
loop,pn
bound
mov
inc
mov
lea
add
repz
ds
cmpsb
addr16
dec
orl
or
inc
jp
inc
inc
sbb
mov
mov
lods
sub
repnz
push
iret
mov
pushf
add
inc
jle
xor
aam
pop
inc
ja
mov
cmp
cltd
stos
jne
sti
pop
mov
push
sbb
and
mov
cmp
imul
sub
shrl
xchg
pop
sarl
dec
in
cmc
mov
mov
mov
pop
mov
xor
out
ljmp
pop
mov
jp
mov
mov
inc
mov
adc
dec
and
xchg
push
pop
jmp
xchg
enter
jp
je
mov
jg
fstps
popf
outsb
push
sub
fsubrl
push
popa
cli
sub
gs
test
mov
mov
adc
test
not
push
sbb
cld
mov
notl
xchg
mov
jne
rcl
mov
dec
hlt
lock
mov
idivb
or
add
ret
rcll
movsl
xchg
in
popa
jbe
arpl
scas
lahf
fadd
jne
jnp
sbb
pop
clc
mov
push
cmp
addr16
lea
mov
sub
jae
movsb
push
dec
int
jmp
data16
pop
sbb
shll
pop
shll
fistpl
gs
xchg
pusha
fnstenv
or
jmp
adc
fisubrl
ficomps
dec
enter
cmp
jg
cs
jae
orb
pop
jle
push
pushf
out
int3
adc
ds
int3
mov
sbb
push
jae
hlt
add
sbbl
jmp
test
pusha
int
das
pop
aas
int
movsl
scas
xor
shll
shrl
jb
mov
sbb
cmpsb
rcl
lret
ret
push
cli
xchg
scas
lods
movsb
add
lahf
adc
cmp
push
insl
pop
xor
mov
cmp
push
icebp
mov
xchg
inc
cmc
int3
int
jecxz
loop
add
mov
pop
sbb
jae
xlat
movsb
cld
mov
movsb
loope
adc
pop
das
out
or
jecxz
and
mov
int
add
loop
jo
lods
pop
xchg
scas
xchg
ljmp
add
push
mov
and
out
je
es
inc
loope
dec
pop
adc
data16
into
data16
scas
fdivp
test
dec
jge
andl
sub
fldenv
jecxz
int
call
scas
popa
cmp
dec
repz
sbb
in
push
fisubrl
add
xlat
mov
push
outsl
push
cmp
je
mov
mov
xor
add
sbb
scas
adc
sbb
mov
es
rorl
in
or
cmp
push
or
pop
cmp
cltd
sbb
or
roll
bound
es
lcall
xchg
enter
icebp
pop
pusha
in
vdivpd
pop
sub
lds
leave
adc
das
push
lea
adc
xchg
xor
xlat
pop
cmp
insl
divl
cmp
mov
jg
mov
mov
pop
sbb
jbe
lods
lret
sti
pop
sub
adc
fldl
jne
push
pop
adc
dec
adc
ficomps
in
cmpsb
sbb
in
lcall
add
push
loopne
mov
mov
jae
mov
les
xorb
sahf
loopne
push
das
xor
test
or
jne
fldenv
imul
leave
and
fsts
aam
cmp
adc
lods
fwait
lret
mov
mov
mov
pop
sti
xchg
jle
jo
icebp
ja
mov
jae
inc
arpl
and
dec
call
mov
lock
shlb
xor
outsl
sbb
ret
mov
inc
loop
mov
jns
cmp
in
fsub
inc
jp
xor
sbb
sbbb
call
dec
sub
stos
nop
cmp
or
lea
mov
cmp
xchg
jp
cmpsl
cli
or
ljmp
mov
sbb
fcmovbe
add
jge
dec
fiadds
ja
push
xorl
leave
shll
push
scas
popa
pcmpgtw
jl
lds
inc
bound
lea
lock
adc
outsl
inc
cmp
push
adc
movsb
pop
addr16
sub
inc
cmc
sbb
sbb
xor
les
cltd
ficompl
adc
iret
in
pop
jae
repz
push
shlb
fldcw
adc
and
ss
push
dec
mov
xchg
adc
push
adc
push
shll
mov
in
in
sbb
push
sbb
push
rcl
pop
insb
inc
inc
mov
pop
icebp
inc
jecxz
cmc
popa
fldenv
sub
xor
xor
cmp
and
in
sbb
mov
and
lahf
cmp
adc
mov
insb
bound
fwait
xor
pop
test
pop
les
in
jbe
out
push
xor
adc
subl
icebp
test
pop
or
mov
sbb
xor
pop
stos
les
and
xor
xorb
mov
mov
dec
dec
xchg
scas
cmp
lret
adc
insb
lock
jp
cmp
xchg
loopne
mull
imul
push
decb
push
fildl
sub
pop
lods
test
and
cs
js
adc
lret
inc
and
adc
lods
arpl
mov
xor
xor
jge
stos
mov
cmc
mov
mov
or
popl
mov
or
rol
push
stos
xlat
mov
xchg
dec
cmc
push
rclb
dec
push
mov
pusha
push
push
repz
jle
xchg
repnz
sub
repnz
mov
imul
xchg
loope
subl
and
sbb
jmp
adc
ret
add
push
outsb
bound
jb
call
push
mov
adc
add
test
divb
gs
sbb
lock
es
add
mov
pop
dec
inc
adc
mov
push
sbb
push
xchg
cmc
leave
mov
xor
lahf
jbe
xchg
adc
or
pushf
or
out
push
mov
mov
in
and
jne
xchg
lods
mov
mov
sbb
iret
pop
sbb
mov
dec
dec
lods
pop
mov
xchg
scas
adc
js
adc
inc
cwtl
imul
or
outsl
scas
shll
test
andb
or
add
add
js
nop
and
xchg
pop
xchg
cmp
into
xlat
cmp
insb
xor
xchg
ja
mov
dec
insb
lea
out
push
jns
push
mov
movsl
in
xor
jmp
xchg
cld
mov
fsubrl
dec
mov
xchg
cmp
dec
xchg
mov
pop
imul
lret
fdivrs
scas
loop
outsl
call
inc
mov
shll
mov
test
out
cmpl
fidivrs
in
imul
adc
jbe
fcoml
sub
sub
pop
in
repz
scas
rcr
dec
std
les
imul
jae
addr16
xorl
or
sub
fsubs
cmp
mov
enter
mov
adc
fwait
add
rolb
push
and
mov
imul
bnd
mov
js
insl
push
jle
cmp
adc
add
movsb
pop
mov
lret
dec
pop
popa
cmc
mov
mov
sub
mov
lods
mov
dec
cmc
inc
sarl
mov
cltd
add
aaa
adc
xor
or
sbb
jle
scas
push
movsl
pop
xchg
clc
jno
push
sub
out
and
xor
iret
lcall
jl
sub
rcrl
mov
pop
mov
push
js
pop
mov
dec
ss
or
andb
cwtl
or
jbe
mov
sub
sbb
test
sub
fmuls
les
out
rol
mov
push
rclb
pop
test
push
shrb
xchg
lcall
lahf
mov
mov
dec
in
outsb
js
pop
cwtl
pop
sub
call
frstor
icebp
or
into
mov
adc
call
cmpsb
cmpsb
sarb
frstor
les
mov
pop
sbb
xlat
cmp
adc
fldl
mov
lds
dec
insb
mov
lret
adc
test
xor
sub
jne
cmp
cmpb
xchg
xor
and
out
fcoms
adc
test
push
movsl
xor
scas
push
es
int
lods
inc
popf
addr16
cli
mov
orb
sahf
xchg
push
stos
inc
mov
and
or
lods
test
and
leave
shlb
add
insb
adc
or
mov
adc
jle
mov
mov
mov
push
call
mov
aas
dec
xchg
insl
mov
out
push
icebp
fstp
stos
mov
or
xchg
cmc
sbb
int3
xor
and
jo
push
adc
xchg
aas
cmp
or
mov
xor
lock
inc
cs
or
mov
sbb
outsb
dec
popf
xchg
push
fld
in
scas
pop
pushf
xchg
and
sbb
jo
in
scas
icebp
lcall
mov
mov
das
jo
pusha
movups
outsl
xor
dec
sarb
loopne
nop
incl
iret
push
aas
inc
das
jo
pusha
movups
outsl
xor
dec
sarb
loopne
adc
addb
inc
sub
pusha
push
adc
outsl
xor
stos
rcrb
dec
lock
iret
nop
incl
movmskps
inc
test
pop
pusha
js
pop
jo
inc
daa
push
aaa
cmp
adc
add
adc
lods
mov
std
icebp
out
jecxz
ror
sarl
or
in
pop
push
dec
xor
popf
xchg
addl
xchg
int
and
xor
add
dec
jne
inc
mov
mov
ret
repnz
cmpsb
orb
xor
sbb
inc
insl
ljmp
push
sbb
aad
cmc
or
cld
lahf
mov
dec
mov
push
jo
popf
fcoms
fadds
cmp
xchg
lods
lock
and
shlb
dec
ret
and
or
mov
testl
or
rcll
loope
adc
sarl
cmp
mov
mov
dec
lods
icebp
test
jb
add
in
push
push
cmp
xchg
insl
and
leave
nop
inc
in
test
pop
mov
mov
push
jge
add
rcr
aad
int
pop
add
cmp
adc
inc
mov
leave
loopne
fstpl
fst
int
hlt
xor
sbb
jno
popa
pop
mov
aaa
mov
test
cmc
sbb
ror
scas
push
arpl
js
jns
push
add
dec
and
test
call
scas
nop
mov
pusha
jb
jge
adc
insl
push
pop
aas
push
sub
popf
hlt
int3
out
mov
test
data16
bound
push
dec
inc
mov
xchg
lea
fst
int
cmp
adc
popa
pop
push
dec
inc
mov
xchg
lea
fst
int
cmp
mov
sub
pop
js
leave
jno
nop
sub
xchg
mov
or
xchg
mov
cld
inc
mov
popf
push
jno
adc
hlt
lock
jb
adc
pusha
lods
or
jmp
pop
xor
mov
arpl
push
sub
adc
imul
sbb
arpl
popf
js
clc
mov
mov
adcb
sbb
repz
dec
push
daa
jg
xor
rorl
leave
inc
pop
jge
insl
ljmp
add
mov
jo
loop
jbe
push
rolb
xor
inc
mov
dec
movsb
add
mov
test
imul
stos
add
inc
ljmp
fdivr
pop
mov
js
leave
push
sbb
dec
jle
fmul
outsl
lcall
hlt
ret
mov
adc
cli
jg
repz
popf
jmp
mov
sahf
lcall
dec
lea
ret
cmp
mov
shl
jns
adc
cwtl
cmp
inc
push
in
mov
mov
push
sbb
out
jecxz
hlt
sbb
ret
mov
mov
lock
rclb
push
mul
andb
dec
cltd
sbb
push
add
mov
popa
cmpl
jge
dec
aam
movsl
int
push
call
pop
sub
cmpb
sbb
out
push
sbb
das
mov
adc
push
inc
es
jge
lcall
pop
int
and
sub
pop
jge
dec
mov
mov
es
add
pop
mov
insl
push
push
out
sub
adc
mov
xor
popl
cmp
jb
mulb
pop
and
jmp
fsubrs
and
and
sub
loope
imul
inc
mov
je
cmp
push
mov
insl
leave
les
jb
clc
xchg
out
jbe
adc
xchg
cli
out
push
insb
sbb
cs
or
adc
jne
lahf
sti
cmp
je
js
int3
xchg
std
adc
mulb
jge
xor
into
popa
cli
test
adcl
popa
jbe
out
jns
cs
xor
aam
clc
inc
jecxz
test
cmpsl
cmc
push
lock
inc
xchg
xchg
or
lock
sub
mov
add
int
jge
jg
push
inc
lret
aad
incl
xchg
mov
dec
orl
hlt
and
pop
or
fwait
dec
mov
dec
pop
int3
add
mov
clc
fdiv
std
out
fwait
xchg
or
cli
adc
lock
int
pop
and
inc
inc
mov
cmp
call
fidivs
adc
ja
subb
jmp
sbb
and
push
ds
xchg
pop
filds
test
cmpsl
adc
daa
stos
in
xlat
loope
inc
inc
das
data16
std
inc
es
xchg
jp
mov
cwtl
push
push
loop
and
mov
js
ror
addr16
and
testb
adc
das
push
mov
push
es
fldenv
into
adc
push
popa
mov
mov
cmp
aam
and
imul
jns
dec
faddl
outsb
xchg
fadds
repz
push
dec
ljmp
rcrb
shrb
call
test
pop
dec
aam
push
fmull
mov
jno
mov
sahf
mov
repz
push
cmc
xlat
int
jl
inc
xchg
insl
adcb
incb
cmp
xor
dec
scas
lret
xor
addb
sbb
adc
inc
pop
int
cwtl
pop
ljmp
nop
popa
cltd
cmp
xor
push
cld
or
xchg
imul
cs
mov
je
adc
dec
or
sbb
xchg
xchg
sahf
jne
cmpsb
in
cmpsb
xchg
outsb
pop
push
movsb
je
into
lret
in
sahf
cmpsl
mov
imulb
sub
cmpsl
aam
mov
clc
lret
pop
sbb
fwait
adc
mov
and
cltd
mov
fnsave
loopne
sub
jb
add
mov
mov
add
out
pop
lahf
cmc
std
add
or
pop
xor
mov
dec
cli
leave
mov
xor
xchg
and
push
mov
sub
xchg
into
sbb
jl
iret
outsl
in
in
jo
sub
xor
xor
cmp
ja
jnp
or
lcall
mov
add
jge
test
iret
adc
negl
pushf
shrl
inc
fdivrl
adc
mov
sub
jp
leave
stc
xor
in
cmpsl
repz
cmp
push
push
mov
decb
in
mov
jae
fcoml
push
sub
lods
aas
sub
imul
sti
in
popa
jmp
pop
sub
jae
mov
cmp
addl
xchg
adc
xchg
cmp
pop
mov
and
and
dec
inc
push
mov
shlb
imul
push
dec
push
add
fwait
idivl
xor
xchg
and
sbb
lods
in
cwtl
sbb
pop
mov
dec
cmp
cmp
loopne
adc
dec
push
pop
and
sub
mov
mov
jmp
lcall
xchg
xchg
adc
push
cmc
and
push
and
xchg
cld
jl
jne
adc
sbb
in
push
pop
jnp
popa
push
test
add
fidivl
js
icebp
fxch
cmp
mov
inc
loop
pop
dec
jns
mov
in
lods
xor
fstl
add
dec
sahf
jmp
or
cmpxchg
xor
loop
sbb
cmp
push
inc
aad
xchg
stc
test
movb
xor
rcrl
in
imul
mov
sub
and
add
xor
sub
push
jecxz
jmp
sub
xor
gs
mov
xorl
dec
repz
bound
dec
bound
ret
fsts
sub
sbb
push
dec
test
cltd
out
or
inc
out
in
es
pusha
stc
dec
js
shlb
inc
push
and
sub
push
jne
sbb
js
sbb
mov
cmp
jo
or
add
mov
repz
xor
xlat
insb
std
test
popf
sub
loopne
mov
sti
jle
add
jl
xchg
inc
fwait
add
idivl
scas
cmpb
sub
jmp
inc
mov
cmc
push
push
jmp
adc
cwtl
xchg
xchg
push
jno
sti
xlat
inc
dec
les
ret
addr16
lahf
addr16
xchg
lods
dec
cmpsb
mov
out
call
inc
cmpsl
pop
adc
inc
sahf
daa
pop
test
daa
roll
cltd
cld
ss
icebp
rclb
mov
sub
mov
jecxz
in
jmp
jb
sarl
sahf
pop
jno
pushf
xor
rol
jmp
pop
mov
inc
sbb
sub
je
and
sub
jo
scas
icebp
hlt
mov
or
sbb
icebp
repz
dec
mov
mov
xchg
out
je
loop
mov
push
xchg
ret
xchg
les
push
sub
xor
push
fildll
stc
aam
repz
push
lods
jmp
hlt
jp
pop
or
and
adc
icebp
lods
test
out
mov
fbstp
pop
sti
xor
xlat
shlb
ret
pop
pop
inc
and
aaa
cmpsl
xor
pop
insb
cmpsb
mov
mov
aaa
inc
imul
hlt
aas
das
mov
loopne
push
inc
lcall
movsl
mov
pop
jecxz
mov
test
loope
mov
pop
popf
sbb
add
cmp
sbb
das
push
or
xlat
lret
scas
stc
inc
mov
xor
aaa
sti
imul
movsl
jns
arpl
pop
in
data16
andb
addb
xor
and
pop
popf
push
arpl
or
mov
inc
sub
rcr
sahf
ret
lahf
pop
lcall
aad
pop
add
pop
js
pop
push
lods
jbe
jp
or
push
mov
lea
sub
insl
js
scas
pop
into
push
test
mov
fisttpl
into
mov
xchg
mov
ds
add
mov
sub
adc
stos
push
test
fwait
iret
mov
hlt
stos
sbb
gs
mov
mov
mov
test
jbe
mov
mov
push
inc
xchg
lock
sub
int3
dec
out
or
loop
out
gs
shl
jmp
lock
cmp
or
add
rorl
repnz
xlat
mov
jg
in
das
cmpsl
dec
xchg
xchg
add
lock
and
push
mov
push
adc
sub
add
lds
and
sub
or
pusha
adc
shlb
sub
cs
cld
mov
mov
testl
and
icebp
pop
popl
sbbl
int3
pop
and
es
push
out
sbb
int3
add
cld
daa
adc
mov
pusha
mov
loopne
inc
gs
sub
mov
fdivp
cs
dec
push
aam
xchg
in
mov
pop
mov
and
mov
add
jl
adc
add
jnp
mov
cs
pop
mov
add
addr16
mov
mov
push
fdivrs
ja
rcrb
aaa
add
mov
iret
mov
push
push
mov
dec
aaa
xor
mov
sbb
aas
incb
mov
add
sub
pop
push
or
pop
popf
arpl
sbb
jg,pn
pop
push
cmpsb
mov
jge
or
mov
and
mov
add
enter
cmc
and
sub
or
pop
push
or
and
jle
iret
shll
sbb
fdivr
sub
rcrl
pusha
incl
test
mov
dec
xor
scas
leave
push
push
test
ret
pusha
in
ss
clc
xchg
xchg
mov
xchg
push
aaa
loope
int3
cwtl
ljmp
mov
test
jge
sbb
out
jecxz
push
xchg
mov
in
loop
int3
xor
sbb
sbb
xor
sbb
cmp
ljmp
mov
add
xchg
int3
stos
mov
xor
pop
sub
xor
and
push
pop
dec
cmp
cmp
mov
cmpsb
xchg
xor
cltd
hlt
dec
inc
test
int
sbb
jo
hlt
inc
fs
mov
icebp
les
sbb
xor
xchg
mov
push
test
xor
dec
add
aaa
mov
test
push
jp
mov
xor
xchg
mov
dec
int
mov
int3
and
mull
aam
adc
push
push
imul
clc
dec
push
fwait
les
and
sub
in
or
fwait
inc
aas
mov
lret
lds
jge
jg
and
mov
into
out
add
fwait
es
in
pop
adc
xor
jg
mov
leave
loope
mov
sbb
add
in
adc
mov
sti
hlt
push
jno
lea
sbb
push
leave
ror
mov
jae
movsb
adc
jp
ja
into
mov
lock
mov
pop
sub
ret
test
sub
inc
push
sahf
push
rcl
pop
mov
jne
xor
ret
xchg
jg
cltd
inc
jo
inc
inc
in
stos
mov
xchg
push
lods
fnstcw
fucomp
into
dec
xchg
aam
aam
imul
or
subl
sub
arpl
js
adc
pop
imul
outsl
push
mov
adc
pop
dec
lds
mov
and
rorl
ljmp
pushf
mov
out
sub
pop
jo
jp
lds
enter
mov
jmp
insb
in
scas
daa
mov
mov
daa
fstpl
stos
and
je
ja
jnp
jg
mov
adc
jbe
push
or
push
mov
out
lret
lret
pop
dec
out
das
xchg
dec
iret
xchg
inc
push
lods
mov
pusha
jmp
pop
xor
sti
xchg
dec
cwtl
xor
leave
or
and
cli
enter
mov
mov
dec
mov
push
sub
popl
into
js
push
outsb
imull
inc
std
js
mov
cmpsb
xor
out
out
fcom
nop
inc
ficompl
cmp
cld
pushf
cmp
push
jle
push
jae
push
in
or
push
lahf
ss
out
fadd
insb
pop
dec
jae
in
push
jae
or
cmp
ljmp
push
les
ja
mov
lcall
adc
cltd
mov
pop
aad
movsl
filds
xor
xchg
imul
jg
int
sarb
sub
xor
test
add
cmp
xor
imul
repnz
lods
xchg
xlat
jge
pop
iret
jmp
push
int3
repz
mov
in
mov
and
xchg
popf
sub
xor
fsub
jno
daa
xor
ret
popa
xchg
add
mov
sub
cmpb
roll
lods
pop
and
rclb
sub
xorb
mov
leave
seta
test
cwtl
into
lahf
mov
cmpsl
sub
outsb
mov
pop
mov
pop
pop
test
popl
fimull
mov
icebp
xlat
or
pop
ds
cmp
push
xor
clc
iret
xchg
push
nop
add
and
das
sub
cmpsb
lods
pop
cmp
jge
mov
xor
mov
call
fwait
add
sub
insl
xchg
inc
mov
ror
pop
adc
push
lret
lock
test
pushf
in
mov
imul
mov
sbb
push
loopne
nop
cmp
in
inc
mov
push
bound
or
add
ret
xlat
ss
test
inc
mov
in
cwtl
fdivrl
dec
inc
ljmp
das
xchg
outsb
shll
pusha
dec
mov
fstl
movsb
dec
nop
add
jl
cli
xor
les
outsb
dec
or
fdivl
mov
mov
sub
lods
jae
or
aaa
lods
cs
pop
or
mov
jl
rorl
inc
data16
ljmp
xchg
push
lahf
popf
fcmove
mov
jmp
cld
fsubrl
test
cli
in
testb
pushf
mov
pop
dec
scas
icebp
jb
cmp
pop
in
stc
adc
xor
mov
mov
aaa
fmull
xor
jle
repnz
filds
gs
testl
imul
pushf
cmpsl
ljmp
daa
outsb
and
iret
shr
xor
mov
xor
fildl
mov
mov
cmpsl
jb
enter
xor
dec
mov
pop
shll
mov
push
shl
pop
pop
inc
fs
cld
mov
nop
jae
lahf
bound
sbb
ficomps
cmp
and
into
js
jae
loopne
fidivrs
push
push
mov
sub
xchg
js
jmp
adc
mov
mov
mov
in
insb
inc
pushf
mov
cmp
push
mov
xchg
test
loopne
jmp
or
mov
out
scas
jnp
inc
pop
add
fistps
mov
and
sahf
inc
insl
inc
das
cltd
fisubl
mov
popa
mov
icebp
jae
mov
test
arpl
jne
sbb
mov
ljmp
out
aas
sbb
pop
adc
testl
ret
sahf
cltd
fld
ret
adc
xchg
jge
mov
jo
icebp
decb
pop
lea
push
and
insl
adc
btc
jnp
aas
add
add
ja
bound
xchg
test
repz
mov
xchg
in
push
dec
push
popf
push
es
fs
imul
jo
insl
xor
push
pop
int3
enter
and
filds
inc
ljmp
mov
push
add
mov
jle
in
fnstenv
sbb
mov
push
push
inc
push
and
or
out
ds
std
jnp
inc
xchg
inc
es
and
inc
add
nop
xor
cs
inc
sub
pop
ss
loopne
mov
sbb
adc
test
sub
bound
lcall
data16
addr16
adc
in
sub
call
shlb
es
jbe
jbe
sub
sbb
cmpsl
insl
js
leave
je
mov
jnp
mov
hlt
imul
scas
scas
inc
adc
clc
ljmp
insl
mov
and
push
or
ljmp
test
lea
cli
or
push
dec
mov
cltd
mov
mov
subl
xor
dec
mov
cwtl
xchg
xchg
cmp
push
push
ljmp
pop
and
imul
repnz
cmp
pop
rolb
cmp
mov
repz
je
mov
jo
lahf
push
mov
leave
mov
inc
push
sub
pop
mov
xor
ljmp
out
imul
repnz
dec
movsl
mov
add
loope
or
imul
mov
outsl
and
icebp
outsl
out
scas
movsb
mov
dec
dec
je
fidivs
scas
lcall
xor
imul
imul
in
sti
mov
loope
outsl
lahf
lcall
jmp
xor
mov
daa
xchg
push
pop
lds
arpl
rcrb
and
loop
pop
inc
in
out
or
add
sti
cmpsl
loop
jbe
outsb
imul
movsb
mov
je
lahf
xor
cmpsb
sahf
mov
shll
clc
sbb
inc
sbb
sti
rolb
xor
in
xchg
cmp
les
aad
add
push
popf
bound
mov
daa
addr16
movsl
stos
out
mov
stos
xchg
xchg
js
stos
pop
lret
int
fsubl
mov
push
jns
fdivp
cmp
adc
mov
dec
dec
cmp
add
fistpll
stos
mov
xchg
mov
add
xor
jnp
fldl
in
xchg
and
adc
mov
dec
mov
and
xchg
xorl
fwait
repnz
sub
pop
ds
fwait
popf
xchg
xchg
xchg
mov
mov
or
push
lock
ds
sbb
aad
xlat
subl
xor
push
fdivrl
mov
jo
sub
push
fistl
adc
xor
mov
xchg
aas
push
lds
adc
dec
mov
cmp
jp
mov
xor
cmpsl
adc
nop
out
cmp
out
mov
mov
fsubr
cs
lea
movsl
mov
ret
ds
fisubs
pushf
and
cld
cmp
jbe
pop
jl
out
mov
cmp
int3
in
dec
sbb
jp
fstl
and
pop
sbb
add
pushl
and
dec
pusha
je
aam
cmp
mov
mov
iret
stc
xor
push
mov
lret
inc
jmp
mov
add
leave
xor
jne
sbb
pop
mov
sub
mov
xlat
pop
movsl
pop
xchg
fsts
sub
fcomps
rcr
sub
cwtl
leave
and
test
enter
dec
mov
sub
fisttpll
pop
adc
cmp
sub
or
gs
test
cmp
mov
dec
lods
shll
adc
aam
mov
sbb
lods
sub
sub
push
fsubrs
xorl
into
cld
xor
in
sub
outsb
fs
push
loopne
ss
and
xchg
sub
test
test
push
popa
enter
lcall
cmp
fsubrl
mov
pop
fnstenv
js
popa
xchg
add
xchg
aad
cmp
stos
addr16
xor
ds
sub
comiss
and
push
pusha
arpl
fwait
insb
inc
in
adc
sbb
enter
xor
ss
or
mov
inc
jmp
int3
pop
mov
rcrl
ds
jae
imul
mov
inc
dec
and
dec
mov
sbb
popa
lahf
out
pop
push
mov
or
dec
push
xchg
xor
repnz
std
scas
mov
inc
loop
pop
dec
fstpt
or
mov
add
mov
int
negb
fs
dec
jae
jle
jne
out
iret
adc
cmpsb
push
jbe
xchg
dec
repnz
sub
adc
outsb
lea
int3
pop
es
inc
ljmp
test
sti
pusha
cmp
lock
insb
mov
add
aas
insb
fstl
movsb
out
xor
int
inc
out
pop
jge
add
insl
popa
pop
push
dec
inc
mov
xchg
lea
fst
int
cmp
adc
popa
pop
push
dec
inc
mov
xchg
lea
fst
int
cmp
imul
inc
mov
xchg
lea
iret
sarl
or
popa
fst
int
inc
dec
push
or
xchg
testb
xor
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
ret
not
sbb
sub
cmp
es
jns
mov
mov
and
and
movsb
or
sbb
nop
pop
mov
mov
add
adc
and
xor
js
and
jb
sub
sahf
push
lock
mov
push
mov
imul
stc
scas
or
test
fwait
mov
aas
lods
std
out
inc
and
in
adc
sub
pusha
mov
adc
mov
and
in
mov
and
iret
mov
notb
pop
dec
pop
rcrl
sbb
push
pop
jne
jo
adc
push
fld1
pop
or
sbb
mov
or
nop
cltd
pop
xor
data16
mov
lcall
aas
xor
clc
rcl
fnstcw
movsl
sub
cmp
add
cltd
pusha
in
xor
push
fsubr
cmp
aas
push
dec
stc
loope
push
bnd
jns
pop
push
test
jae
push
jmp
lcall
fwait
or
and
pop
mov
xchg
lret
mov
mov
adc
xor
xchg
sub
aaa
aam
mov
inc
loopne
loope
cld
adc
mov
push
xchg
lea
sbb
cmp
imul
adc
pusha
fisttpll
cli
jns
jg
dec
test
lods
dec
mov
dec
shll
mov
inc
mov
pusha
test
adc
and
xor
rorb
sbb
sub
cmp
imul
mov
and
xor
rorb
sahf
and
xor
dec
je
cmp
aad
xchg
sub
mov
mov
mov
lock
les
sub
push
repz
pusha
in
sub
jnp
stos
jb
xor
mov
dec
les
sbb
pop
mov
shl
pusha
pop
inc
pop
add
gs
fcmovu
pop
cmpb
lods
mov
lcall
aas
cltd
sbb
ja
and
sarb
inc
cltd
cs
or
xor
xchg
inc
loope
and
addr16
out
lret
pop
mov
ss
sub
mov
sub
les
jge
leave
cmc
hlt
cld
pop
xchg
rorl
aas
sbb
fists
dec
jns
out
not
sub
int3
lods
dec
inc
dec
dec
jno
sub
insl
fs
enter
pop
cltd
add
or
pop
inc
aad
or
xor
lock
jmp
push
iret
gs
lahf
imul
arpl
mov
imul
imul
jecxz
xchg
jmp
lahf
pop
jno
push
mov
pop
mov
mov
jmp
sbb
lods
xchg
and
jns
xor
cmp
cmp
or
sahf
pop
and
sub
push
mov
pushf
lcall
sbb
lret
cmpsl
cltd
push
inc
xchg
jnp
jnp
in
mulb
push
mov
imul
pop
int3
sub
sbb
jl
cmpsl
shll
lea
in
sbb
insl
push
jg
out
mov
sar
sub
adc
add
mov
jae
test
push
out
cli
outsl
mov
js
mov
loopne
in
cmpsb
jnp
mov
ret
leave
or
stc
sub
mov
test
stc
jnp
aas
jnp
push
cmp
js
outsl
jbe
scas
dec
stc
add
pop
xor
andb
mov
gs
cmp
jns
add
or
cwtl
push
push
lea
or
stos
and
jmp
or
fstl
movsl
mov
stos
lret
dec
inc
jo
bound
fbld
cmp
sub
xor
adc
fisubrl
push
add
xor
ret
enter
jp
push
inc
scas
cld
pop
sub
lcall
ss
lea
inc
dec
hlt
push
ljmp
xchg
icebp
leave
ljmp
add
adc
stc
pop
xor
xor
mov
cmp
iret
pop
pop
es
push
push
into
add
jo
sahf
push
shr
jbe
loop
ljmp
push
aad
mov
aaa
test
pushf
popa
lds
sbb
shr
and
xor
adc
inc
add
mov
fimull
call
dec
mov
adc
xchg
xor
insl
iret
and
xchg
sbb
mov
xchg
xchg
adc
ds
daa
inc
mov
sbb
adc
in
call
adc
mov
xchg
popa
in
mov
lea
cmpsb
cmp
xchg
mov
mov
jb
push
xor
xchg
cmp
sub
fldt
xor
xlat
push
push
mov
jne
adc
jl
clc
shr
into
test
add
cli
shlb
stos
xor
xchg
stc
mov
sbb
adc
outsb
dec
push
jns
das
and
push
xchg
pop
bound
dec
inc
repz
xor
sbb
pop
mov
jo
repnz
imul
dec
and
mov
loope
mov
jge
push
pop
scas
fwait
in
xor
scas
adc
arpl
scas
mov
xor
outsb
lret
nop
dec
inc
mov
fbstp
in
lea
push
test
enter
test
xor
pop
inc
lea
sub
mov
clc
mov
enter
insb
cs
aad
jp
out
out
pop
lret
out
daa
xchg
add
into
jnp
pop
repz
mov
out
shr
xlat
call
fwait
mov
cltd
aam
mov
jl
dec
fsts
jo
cli
inc
and
mov
xor
mov
in
pushf
add
dec
movl
add
frstor
push
xchg
out
lods
popa
insb
mov
push
pushl
lock
lods
lea
cmp
addl
sbb
adc
fstpl
ja
call
mov
mov
test
jno
insl
push
ret
and
loop
scas
xor
push
popf
mov
repz
shll
out
mov
cltd
insl
lds
xor
xchg
arpl
cmp
or
ficoms
fwait
push
mov
and
clc
aam
stos
pop
add
call
ficoml
xor
arpl
push
out
jecxz
xlat
popa
ljmp
jg
clc
pusha
addr16
mov
in
pop
addl
cmpsl
cld
cmp
leave
sbb
and
into
jns
lods
inc
and
dec
mov
and
mov
inc
jno
es
push
mov
mulb
inc
adc
mov
icebp
jns
pop
sub
cmp
cs
movsb
cmp
dec
mov
xchg
mov
inc
xor
mov
in
arpl
ficoms
xlat
scas
mov
lock
cld
add
and
xchg
ljmp
pop
cmp
xchg
lcall
popf
repnz
cmp
testb
pop
movsb
add
dec
or
jns
add
in
mov
jecxz
subb
pop
mulps
incb
cmp
es
sbb
test
into
mov
xor
mov
in
int3
ljmp
mov
sub
inc
dec
push
inc
sub
cmp
pop
jmp
aas
add
test
and
or
pop
and
pop
xor
fstl
mov
into
and
frstor
lcall
notb
lahf
sbb
fsubrs
out
lret
lods
popa
adc
lods
add
lods
inc
les
xchg
sti
sub
sahf
and
push
pop
and
arpl
and
popa
add
movsb
insb
and
dec
lcall
push
add
and
jnp
int
imul
loop
adc
faddp
push
outsb
aam
pop
fsts
inc
and
sbb
repnz
movsl
inc
mov
xchg
lock
out
adc
inc
add
xchg
or
mov
outsb
jo
sahf
je
jg
jmp
mov
xor
fwait
lods
adc
mov
dec
fs
mov
push
rorl
or
mov
loop
push
flds
dec
loop
insl
int3
adcl
dec
sbb
lret
push
mov
sub
das
jae
jl
adc
cmp
aam
sbb
xor
rorl
mov
jg
jne
cmp
mov
data16
lock
std
cmp
jl
pushf
imul
ret
mov
ja
or
pop
lock
cmp
sub
jge
cmp
ja
cli
mov
int3
fdivrp
push
sub
movsb
jecxz
jp
outsb
xchg
mov
add
test
lock
sbb
pop
stos
mov
stc
stc
js
or
popf
xchg
into
and
xor
fwait
jno
mov
out
and
into
pop
stos
add
add
push
cmpsl
sbb
pushf
jl
dec
sbb
lret
lds
xchg
mov
mov
jle
xlat
lcall
cwtl
sbb
pop
push
push
cmp
or
lea
sub
in
iret
add
in
mov
jle
test
lds
mov
jo
add
lahf
adc
lds
fidivl
movsb
xor
enter
cmp
adc
cld
mov
in
xor
in
cmpsl
cmp
mov
jl
jg
stos
xor
ret
insb
cmpsb
ret
ljmp
loop
or
sub
insl
cmp
sbb
cmc
adc
jg
xchg
push
fistpl
rcl
and
and
pop
sub
scas
mov
inc
lods
lret
std
sti
sub
dec
inc
xchg
rcr
add
adc
shlb
sbbl
or
pop
xor
or
jecxz
mov
adc
hlt
sub
ret
jl
xor
insl
mov
sbb
clc
dec
nop
cmpl
outsb
inc
xlat
jg
repnz
ja
or
push
stos
jb
mov
or
aas
mov
bound
jge
cmp
jb
mov
sbb
idivl
dec
pop
mov
or
mov
das
or
movsl
rolb
popf
push
mov
mov
add
adc
sub
mov
imul
arpl
jo
sbb
sub
pusha
xor
lods
lods
jnp
mov
test
push
jnp
mov
aaa
jne
sti
jmp
add
mov
mov
in
pop
cli
cmp
in
mov
movb
dec
pop
and
insl
loop
sub
add
mov
xorb
rol
dec
scas
pop
les
fmull
adc
scas
inc
and
dec
popa
cmp
pop
jb
loopne
xchg
lret
aas
int3
dec
mov
lahf
dec
pop
outsl
or
mov
mov
shlb
pop
bswap
mov
cmpsb
int
das
fdivr
aam
pop
jbe
lea
or
lahf
lods
mov
je
lahf
push
movsb
mov
jle
arpl
mov
mov
inc
jns
ret
pop
adc
xchg
hlt
dec
mov
aaa
xor
movsb
xchg
adc
mov
insb
jmp
adc
aam
dec
mov
and
sbb
xchg
repz
mov
imul
nop
or
sti
or
push
or
movsb
xor
push
pop
aam
mov
dec
push
xchg
add
inc
push
xor
sbb
mov
test
sub
iret
ret
jnp
movsl
inc
repnz
lret
ss
les
mov
fisubrs
mov
ficoml
out
in
lret
pop
loop
or
lock
fistps
adc
icebp
and
xlat
or
adc
add
mov
mov
jne
pop
pop
ds
mov
dec
pop
or
adc
dec
xchg
xchg
scas
rcrl
dec
push
sbb
lret
xchg
mov
and
leave
in
pop
add
xchg
loope
hlt
add
incl
adc
rcr
in
and
and
test
ja
or
sub
jle
jmp
aaa
pop
push
ja
test
jb
sbb
cmpsl
pop
xor
lret
jns
imul
or
ljmp
pop
sbb
loopne
xchg
jle
inc
xor
jge
das
push
push
cmp
cli
adc
push
rolb
lret
xchg
pop
cmp
jl
fistpl
push
push
call
test
push
adc
mov
cmp
nop
pop
or
mov
mov
lea
rorb
aaa
inc
mov
out
data16
push
cmc
fwait
movsl
sub
sti
jo
lret
insb
fcmovnu
add
mov
enter
lds
out
stc
cmp
sub
cltd
dec
pop
mov
loop
in
cs
add
aas
mov
dec
loopne,pn
xor
jp
lock
cmp
into
jbe
ret
pop
dec
jo
adc
cmp
push
std
jmp
int
fmul
dec
push
sbb
or
fists
jns
test
and
adc
rcr
mov
jb
cmp
lret
in
dec
pop
push
pop
in
stos
iret
cmp
hlt
add
mov
pop
xor
test
rcrb
inc
cli
xchg
mov
mov
jbe
addb
std
pop
test
jg
xchg
fbstp
int3
ret
pop
out
out
lret
inc
roll
cwtl
or
sahf
cmp
dec
repz
inc
clc
or
movsl
addr16
fisttpl
popf
push
js
jae
xchg
bound
aaa
push
push
or
in
addr16
js
aam
and
and
lret
in
aaa
movsl
jmp
jne
cmp
adc
mov
add
divb
lret
rcrb
dec
mov
xchg
mov
xor
pop
lcall
dec
mov
loop
add
jmp
cs
jns
mov
lods
and
ret
inc
movsl
aaa
xor
ja
xlat
cwtl
je
bound
nop
pop
out
pop
sahf
and
cmpl
inc
fimull
mov
scas
push
pop
imul
add
sahf
sub
pushl
sbb
xor
jle
loopne
add
push
inc
hlt
xchg
jae
dec
jno
jl
iret
lret
rol
out
inc
mov
cmp
dec
xchg
shrl
call
pop
hlt
insb
adc
pop
fmuls
pop
aas
ficoml
icebp
pop
cmp
dec
xlat
mov
mov
insl
pushf
cwtl
dec
mov
sub
jbe
pop
push
jb
jno
or
lods
fistpll
pop
jne
aaa
out
loopne
and
pusha
sub
or
negl
enter
xorl
sbb
pop
aas
mov
into
pop
jle
dec
insb
sub
xchg
pop
mov
pop
sbb
jle
pusha
in
cmp
or
pop
or
loope
jecxz
cmp
shll
dec
ds
jle
sub
xchg
test
and
push
push
cli
cmpsl
imul
xchg
into
mov
ds
insl
or
pop
in
hlt
jmp
and
push
rorb
jmp
mov
loopne
mov
out
imul
out
and
push
loop
cld
fstpl
out
out
ret
mov
adc
cmpl
and
lods
test
push
dec
xchg
das
into
pop
orb
lcall
mov
shlb
xor
push
das
push
mov
adc
ljmp
in
cmp
mulb
cmp
mov
std
fs
mov
adcl
and
pop
mov
cmpsl
sub
adc
mov
leave
cwtl
push
pop
bound
dec
inc
loope
imull
rclb
popf
pop
mov
mov
ss
stc
adc
jnp
test
leave
pop
mov
sti
ficompl
xchg
lcall
xchg
mov
mov
fwait
gs
pop
push
dec
sub
xchg
pop
je
jno
add
aam
out
inc
push
mov
test
jns
pushf
fisubs
sbb
and
fcomi
xor
scas
pop
fisttpl
jp
ret
jle
popa
lods
push
push
cmpb
adc
push
xor
daa
adc
mov
jbe
stos
push
pop
inc
mov
cld
or
push
stos
mov
xor
addl
fnstsw
cmp
sbb
jns
dec
movsb
fcmovb
push
push
scas
or
inc
jmp
out
mov
mov
push
ds
and
stos
fists
cmp
div
dec
imul
fcmovnu
in
frstor
pop
add
in
cmpl
call
xchg
fidivrs
sbb
sbb
ret
cs
cmp
inc
jb
cmpb
cli
xor
in
dec
mov
xchg
pop
mov
xor
or
das
dec
jbe
cmp
adc
jmp
paddw
pop
mov
mov
or
jbe
roll
stos
and
dec
mov
mov
cmpsb
xchg
pop
repz
popf
jle
iret
and
ljmp
je
jle
jae
cwtl
std
lock
test
fisubrs
xchg
addr16
sbb
xor
xor
push
js
and
lods
out
jl
pushf
fucomi
jo
pop
cli
sbb
scas
dec
movsb
shl
mov
aas
or
xor
stc
popf
mov
aam
ss
sbb
rorl
adc
and
addr16
jge
push
mov
into
outsl
leave
mov
adc
jmp
andl
ficoml
mov
hlt
jle
sbb
sub
and
scas
push
lret
pop
pop
and
in
repnz
cmp
mov
jle
fwait
sub
xor
cmpsb
adc
sub
ljmp
pop
jb
xchg
add
jae
add
mov
subb
aam
and
leave
and
or
outsb
cmp
into
adc
bound
mov
int3
ficoml
insl
cmp
adc
xchg
lret
dec
cld
popa
insb
loope
xor
push
mov
lods
nop
mov
push
sub
cmp
aam
cmp
sbb
movsb
or
cmpsb
adc
cs
outsb
insl
or
and
push
jno
test
fldcw
sub
rol
hlt
mov
jb
loope
fs
fcoms
stos
sbb
push
pop
dec
and
cwtl
inc
lcall
push
dec
add
inc
adc
xchg
xchg
fdivr
and
in
inc
or
push
xchg
sbb
test
popf
mov
fadd
add
push
inc
mov
sbb
loopne
leave
mov
mov
jp
out
inc
movsl
push
push
push
jecxz
jno
xchg
push
jbe
push
in
push
inc
mov
scas
fdivs
xchg
or
sarl
jnp
xor
cmp
jmp
divl
sahf
push
into
cwtl
rclb
pop
aad
sbb
loope
dec
push
sahf
ret
sub
mov
aad
sub
inc
das
cmp
icebp
xor
insl
arpl
test
jns
adc
in
dec
cmp
js
inc
adc
push
xchg
mov
cwtl
dec
or
sub
imul
imul
inc
enter
xor
hlt
cmp
roll
jbe
out
pushf
ja
push
ret
dec
dec
inc
sub
cltd
sti
movsl
repz
aas
sub
stos
in
or
das
pop
mov
jb
test
jne
jg
cltd
adc
test
sbb
sbb
adc
push
pop
push
sub
mov
inc
sbb
add
mov
xchg
mov
mov
mov
xor
sti
xchg
in
int
sahf
je
pusha
test
sbb
mov
ss
loope
cmpb
jecxz
mov
pop
push
in
ds
push
imul
adc
std
fs
sbb
push
inc
pop
out
popf
xchg
xchg
stos
adc
cmpsb
cmc
test
pop
mov
push
movb
les
or
mov
mov
add
test
dec
xchg
xchg
jge
cli
mov
movsl
pop
add
scas
stc
dec
call
adc
adc
sbb
je
lea
pop
pop
sub
lret
pop
sbb
and
jns
sbb
lret
xchg
repz
mov
adc
je
sbb
daa
cmp
xor
in
fldenv
lcall
outsl
jnp
mov
popa
ljmp
push
repnz
loopne
sbb
popa
inc
sub
and
fildll
divl
mov
sbb
jmp
loope
mov
mov
pop
fisttpll
mull
leave
pop
cmpsl
dec
or
sub
mov
add
notb
and
or
sub
jno
cmpsl
xchg
out
sti
sbb
adc
and
dec
pop
pop
and
jg
mov
mov
ret
push
mov
and
stos
cmp
mov
push
daa
pusha
in
adc
outsb
imul
shrb
mov
stc
sub
adc
mov
fwait
jp
and
jne
pop
aad
xchg
dec
test
ss
cs
sub
mov
jns
and
mov
fnstsw
int
xlat
mov
adc
pop
addr16
add
sti
fbld
adc
pop
fs
inc
fwait
shr
cmp
cmpsb
sbb
imul
stos
dec
dec
sbb
adc
xchg
fstpt
negl
pop
and
mov
test
xor
xchg
and
pusha
inc
pop
or
in
insb
and
xorl
push
imul
jae
dec
ret
mov
jle
or
cmp
addl
out
mov
addr16
mov
clc
ljmp
imul
outsb
ret
outsb
mov
fldt
jle
test
mov
int3
xchg
call
outsb
insl
lods
cli
jge
loop
adc
xchg
pop
jecxz
sbb
inc
nop
mov
push
xor
jmp
mov
mov
fwait
mov
xchg
inc
lret
mov
inc
mov
xchg
test
rcrb
enter
in
addr16
jb
out
or
jnp
addr16
out
push
inc
xchg
icebp
repnz
and
mov
inc
mov
mov
xor
in
scas
push
and
je
push
cmp
cmpl
inc
daa
adc
add
test
negb
xchg
inc
stc
jne
insl
pop
js
or
pusha
ljmp
mov
add
sub
add
mov
pop
in
mov
pop
ret
mov
or
sub
pop
inc
push
test
cmc
shl
jo
insl
daa
pop
add
mov
fcom
imul
pop
mov
mov
sbb
cmp
leave
mov
mov
push
es
dec
xchg
cltd
jo
jbe
shld
cmp
imul
mov
and
xor
rorb
sbb
sub
cmp
imul
mov
and
xor
rorb
sbb
dec
nop
pop
mov
mov
nop
test
add
and
fdivr
aam
mov
mov
dec
sbbb
xor
mov
into
ja
cwtl
fists
iret
push
and
xor
add
adc
outsl
roll
sti
and
xor
mov
gs
jne
add
shll
add
adc
popa
test
inc
movsl
push
mov
inc
mov
cmc
gs
jne
add
shll
add
adc
popa
test
inc
movsl
push
mov
jnp
or
adc
xchg
jno
inc
mov
mov
and
push
lret
push
arpl
add
ret
add
int
scas
xchg
cld
stos
int
xchg
hlt
hlt
pushf
or
cmc
push
test
lahf
xor
push
shlb
add
adc
push
cmp
mov
stos
jle
sti
mov
add
adc
cmp
aam
in
loope
test
mov
jbe
inc
or
mov
pop
push
cltd
inc
rcr
adc
pop
inc
sub
sub
fiaddl
push
jecxz
add
xchg
cltd
sbb
int
push
and
fiadds
sub
cltd
dec
mov
mov
mov
aam
lock
xor
aad
in
cmc
popa
test
inc
movsl
push
mov
inc
mov
andl
adc
addr16
push
mov
cmp
and
adc
loopne
mov
loop
std
sbb
test
test
push
in
mov
inc
lret
les
mov
shlb
sbb
rcrl
xchg
push
mov
popa
jmp
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
mov
andl
adc
and
xchg
sarb
fldl
enter
adc
ret
xor
inc
inc
add
dec
aam
std
adc
cltd
push
xchg
loope
xchg
movl
push
stc
xchg
stos
sub
cltd
shlb
into
jmp
leave
mov
ret
sbb
mov
int3
leave
testl
jmp
or
sub
aam
inc
fists
lea
repz
jae
xor
cltd
add
js
rol
dec
out
push
adc
test
imul
pop
or
xchg
out
jne
fsubrl
dec
sbb
sti
imul
mov
mov
push
add
jge
out
push
lahf
jmp
xchg
sub
adc
pop
out
fistl
jmp
cmpsb
sbb
lret
scas
xor
ja
lret
ja
imul
ficomps
jnp
divb
mov
inc
std
das
enter
jp
loop
push
cmpsl
popf
mov
lock
push
and
add
jge
popf
popf
sub
cmc
mov
sbbb
js
hlt
aam
cli
add
inc
lret
xlat
loop
out
pusha
dec
adc
push
rcll
in
shrl
xchg
and
bound
mov
hlt
or
dec
pop
sub
push
ror
pusha
add
jle
call
mov
jmp
or
aas
mov
ret
int3
stos
ss
xchg
or
jecxz
add
orl
jp
inc
jnp
mov
test
call
dec
xchg
xor
mov
js
dec
add
test
push
adc
movsb
insl
push
jno
or
dec
push
and
fucomp
push
pop
mov
fidivrs
cmpsb
sub
and
mov
adc
lcall
cmc
cmpsb
sti
dec
mov
stos
in
outsl
adcl
cmp
lds
cs
subb
imul
stos
adc
movsl
jl
aas
je
push
pop
and
push
jb
push
push
xchg
inc
cs
outsl
jae
xor
mov
call
icebp
ljmp
divl
dec
repz
xor
stc
aaa
movsl
sahf
push
lds
mov
rcrb
stc
sbb
jae
mov
dec
out
or
lret
adc
sbb
mov
mov
clc
jnp
add
push
ljmp
test
cmpsl
mov
adc
das
xchg
pop
repnz
movsb
xchg
pop
jmp
xorl
mov
cmc
jns
les
ds
insb
or
test
outsl
adc
in
dec
leave
xchg
or
push
mov
push
inc
push
adc
dec
push
dec
in
jb
shlb
scas
out
jne
popf
pop
dec
mov
add
ret
jne
lea
fs
dec
or
sbb
je
pop
inc
cmp
nop
sub
jg
loopne
les
sbb
xor
leave
xchg
jno
jo
repnz
adc
ret
popa
sub
insl
cli
aad
or
push
lahf
inc
push
fstpt
je
fldpi
add
cmp
imul
dec
xlat
jnp
and
icebp
xlat
xchg
subl
sub
out
sarb
mov
lret
push
aad
dec
pop
mov
shlb
lcall
icebp
lcall
inc
dec
aam
cmc
cmp
shrb
out
or
sbb
outsl
pop
pop
pop
cmp
and
and
push
sub
cmpsl
push
adc
je
xchg
mov
sub
popa
aam
mov
std
fistl
aaa
mov
mov
in
out
test
testl
adc
mov
fwait
mov
cld
xchg
fstpl
sub
pop
mov
or
jp
jb
divb
mov
xchg
cmp
pop
clc
sbb
dec
jno
xchg
or
jecxz
pusha
adc
sbb
fidivs
pushf
mov
imul
xor
cli
ljmp
lds
sarl
rcl
lods
push
dec
dec
mov
xor
int
in
ret
jbe
pop
movsb
out
loope
adcb
xor
or
or
jl
call
xchg
xor
iret
dec
pop
push
inc
arpl
xor
in
sahf
xchg
push
dec
je
cltd
fstp
inc
lret
mov
gs
test
idiv
xchg
push
shll
xchg
test
jnp
xlat
dec
subb
xchg
jbe
adc
xchg
das
int
push
imul
adc
mov
jmp
test
pop
jae
jo
cmp
fucom
enter
rcrl
adc
popa
and
xlat
cmp
jno
sbb
dec
jmp
ja
push
xchg
imul
in
or
ds
mov
push
fstpt
or
data16
loopne
and
sbb
lods
insl
scas
aaa
sub
mov
dec
sub
inc
into
push
loop
int3
sub
lods
mov
mov
jno
sub
cmp
fidivl
repz
enter
push
sahf
add
leave
test
xor
add
mov
orb
sahf
cmpb
mov
mov
adc
xchg
sbb
pusha
mov
xchg
mov
or
cmpsl
gs
pop
push
mov
jo
mov
sub
sti
roll
les
sbb
gs
mov
xchg
sarb
dec
sub
sbb
mov
cmp
shll
out
aas
insl
add
pusha
and
stc
cmp
sub
outsb
adc
lock
insb
rcll
in
push
insb
mov
ficoms
dec
into
out
daa
lods
das
fsubp
outsb
sub
aam
insb
insb
push
and
xor
xchg
lds
in
and
das
leave
dec
xchg
xlat
popa
add
sub
mov
mov
lods
les
jp
mov
push
cmp
xchg
jle
ret
sub
push
stc
jl
mov
imul
scas
call
mov
and
sahf
mov
rcl
dec
dec
push
pop
and
mov
fcmove
lahf
cmc
insl
mull
mov
icebp
pop
mov
ja
mov
decb
sub
sub
loop
out
push
clc
lock
xchg
aas
cwtl
mov
mov
mov
pop
imul
push
mov
mov
mov
xchg
or
rorb
cwtl
dec
aaa
add
dec
arpl
pop
mov
mov
sub
les
repz
sbb
cmp
pop
andl
add
xchg
ss
mov
ficoml
push
movsb
les
inc
movsb
push
faddl
jb
push
add
iret
mov
bound
jno
enter
jl
frstor
pop
sub
loop
mov
fstl
or
fs
std
push
inc
add
movsl
add
xchg
roll
pop
popf
sub
mov
jmp
daa
test
mov
mov
cmp
pop
into
push
stos
xchg
mov
adc
bnd
divl
scas
aad
mov
imull
inc
xchg
inc
stos
scas
popa
neg
movsb
ret
scas
pop
shrb
xor
and
xchg
nop
fnstcw
fwait
test
aas
fisubl
aad
mov
scas
jns
lock
sub
in
ljmp
xchg
mov
xchg
mov
clc
push
fildll
sub
popf
mov
xchg
and
fldt
or
mov
shlb
sbbl
aaa
inc
shlb
mov
and
ss
icebp
and
and
fucomp
pop
adcb
popf
pop
scas
popf
iret
add
dec
inc
imul
push
shll
inc
push
dec
push
jle
ret
rclb
mov
mov
push
lock
mov
mov
pop
into
adc
push
ret
clc
popa
incl
pop
fmulp
bound
push
cli
xorl
push
fldl
insb
inc
sahf
cmc
pop
dec
cmovns
lret
loop
adc
xchg
addr16
or
in
xor
scas
out
out
and
xchg
movsb
loop
push
cmp
pop
inc
fisttpl
je
fdivl
jmp
mov
fildll
popf
pusha
xchg
lret
mov
push
cmp
sahf
xchg
jnp
mulb
ja
ss
fstpl
pop
ret
aas
out
js
cltd
xchg
ja
sbb
add
xchg
int
jnp
sub
mov
sub
iret
mov
fs
rorb
mov
sbb
sti
dec
sub
in
pop
arpl
mov
jns
push
fnstsw
sub
inc
ljmp
and
cltd
jbe
add
popf
adc
inc
pop
setne
adcb
xchg
fwait
jae
mov
pop
jae
xchg
sub
hlt
shll
pop
add
mov
xchg
dec
icebp
xchg
sbb
cltd
cmpsl
mov
sub
mov
xor
cld
sti
jne
jae
inc
jecxz
sahf
xchg
add
add
bound
mov
test
test
adc
mov
popf
in
ja
fcmovnbe
sbb
into
test
push
andnps
mov
inc
movsb
cmpsl
daa
cmp
xor
ss
inc
push
mov
mov
mov
adc
xchg
inc
ds
ret
pop
in
xchg
pop
aaa
mov
mov
ret
shl
jmp
and
mov
add
jo
inc
es
int3
add
or
fs
sarb
outsl
adc
xchg
shll
push
jnp
pop
dec
fdiv
outsl
out
sub
sub
in
adc
movsl
jmp
push
mov
pop
adc
aas
loopne
or
or
or
js
xchg
lods
pop
cmp
data16
daa
ss
pop
mov
sbb
adc
sub
jge
mov
cs
cmp
sti
stc
sub
testl
decl
fwait
cmc
daa
push
test
inc
jmp
xchg
sti
out
lea
xchg
sahf
and
push
and
inc
loop
jle
mov
outsb
dec
xchg
out
scas
sub
cld
sbbb
aam
pop
dec
stos
test
mov
outsl
add
fcoml
mov
xchg
fmull
sbbb
insl
adc
stos
loope
mov
int3
repz
pop
inc
mov
mov
lahf
mov
sbb
adc
mov
xchg
xchg
mov
js
jecxz
mov
push
jecxz
shll
jg
insb
mov
jp
or
or
pop
repnz
cmp
arpl
jecxz
add
cmc
inc
bound
pusha
sbb
or
loopne
pop
add
sbb
push
arpl
dec
xchg
push
sub
outsb
cmpsl
pop
pop
and
and
xchg
pop
xlat
adc
mov
mov
popf
cmp
add
push
lea
dec
jl
scas
inc
pop
adc
insb
sub
xchg
jl
in
and
scas
out
xchg
push
fs
adc
pop
stc
into
pushf
jne
aaa
xor
push
sysexit
filds
pop
pop
ljmp
pop
pop
mov
cmp
sbb
add
mov
sub
add
mov
push
enter
outsl
jmp
xlat
pop
and
jle
insl
sbb
adc
jno
add
iret
pop
mov
ret
daa
cmc
cmp
and
jo
rcrl
inc
rorb
mov
fs
jp
mov
and
push
push
inc
jnp
shlb
repz
jae
ret
mov
jno
mov
lcall
insb
inc
mov
push
jns
push
sub
insb
lods
movsl
pop
sub
add
or
in
mov
nop
jmp
in
adc
xchg
std
sbb
es
jmp
test
jo
push
outsb
xchg
mov
lods
mov
arpl
jns
push
setle
jl
loope
pop
movsl
xchg
jge
mov
push
test
jg
push
jo
cmc
and
mov
xchg
xor
cmc
in
mov
jl
xorb
daa
stc
push
push
je
rorb
lods
pop
mov
fcomps
filds
repz
hlt
sub
frstor
ss
test
xchg
jno
xor
ss
popf
sbb
fdivrs
fisttpl
jl
cmp
loope
add
jp
or
js
shll
add
std
je
bound
bound
fstpt
lcall
adc
inc
and
push
mov
lock
add
shll
inc
mov
mov
jb
mov
add
jg
pop
popf
pop
xor
mov
mov
sub
add
aam
jb
gs
ret
pop
xchg
pop
mov
and
inc
inc
jbe
ret
lea
sub
pusha
das
shrl
imul
jle
jns
xor
pop
icebp
adc
xchg
cmpb
push
pop
mov
adc
ljmp
mov
fdivrl
insb
rclb
inc
lcall
pop
jno
push
call
sarb
adc
lret
sub
fstpt
in
sbb
je
icebp
xchg
ss
aam
xchg
enter
sarb
push
nop
cli
in
add
int3
hlt
outsl
jp
add
inc
fildll
and
gs
jl
imul
pushf
ds
mov
xor
divl
cwtl
mov
incl
shl
mov
inc
mov
sarl
lock
inc
sub
mov
dec
fmuls
add
cmp
push
lods
in
xor
inc
fidivs
bound
sbb
out
jmp
fidivrl
sbb
rorb
and
bound
and
xor
dec
lds
jo
inc
out
cs
arpl
pop
call
notb
cmp
adc
enter
aas
push
mov
lahf
js
jecxz
mov
mov
sarb
lods
pop
adc
cmp
stos
cmpsb
cmpsl
xor
push
repnz
arpl
ret
mov
push
or
in
sbb
dec
push
or
jnp
mov
cmp
in
sbb
sub
repz
mov
sub
pop
pop
cli
mov
pushf
add
xorb
imul
mov
insb
cmp
push
bound
fldenv
cmp
cli
mov
test
out
arpl
mov
jnp
cmp
dec
cmp
adc
jecxz
sahf
jno
sub
xchg
mov
sub
or
add
xor
dec
and
mov
out
pop
push
lret
rclb
mov
xchg
xor
push
out
pop
fisubs
cli
aaa
pop
sbb
clc
dec
negl
outsl
dec
lock
movsl
cmp
mov
mov
xchg
pop
push
sub
test
adc
add
test
mov
or
xchg
sti
jno
xor
and
aam
or
ret
jae
stc
jne
lods
add
pop
add
mov
insb
jmp
inc
daa
popa
pop
and
xchg
cmpsl
fstp
cli
sbb
dec
idivl
inc
push
out
shl
nop
and
pop
int
mov
and
pop
push
int
cs
jno
lock
js
loop
mov
cltd
xor
aaa
test
or
jg
adc
sbbl
enter
pop
jl
fdivs
int3
mov
adc
xor
mov
ja
sbb
jecxz
clc
je
cmp
xorl
imul
mov
sbb
test
adc
push
nop
fcomps
call
add
mov
mov
inc
cs
addr16
xchg
xor
mov
dec
inc
jmp
and
lcall
fbstp
or
pop
add
jmp
cmp
xor
pop
push
and
mov
mov
out
xchg
int
xlat
testl
sbb
hlt
dec
push
jno
mov
testl
and
imul
ds
inc
push
out
test
in
popa
and
and
xchg
das
lcall
push
in
das
jg
jp
dec
adc
sbb
jo
push
out
xor
and
cmpsl
mov
mov
or
repz
mov
movb
pop
pop
sbb
xchg
imul
fstpl
lret
sbb
fadds
sbb
insl
adc
cmp
jbe
add
js
mov
ret
mov
cmp
cmpl
cmp
sbb
jmp
and
call
mov
pop
push
xor
test
das
push
cmc
cmpsb
pop
or
adc
xchg
das
inc
or
bound
pop
mov
and
xchg
stos
lahf
je
xor
pop
jb
stos
inc
adc
inc
push
pop
sbb
mov
add
push
mov
dec
pop
sub
sub
rclb
rcr
popa
dec
mov
add
push
push
xchg
fidivl
mov
push
mov
es
test
push
pop
add
push
scas
or
fwait
imul
ss
jbe
daa
test
sarb
jge
add
dec
sbb
add
jmp
dec
push
push
xorl
add
inc
mov
push
cmp
dec
lods
ja
jge
in
mov
or
bound
aam
popf
movnti
sbb
insb
icebp
xchg
mov
adc
push
mov
xor
add
sbbl
mov
ljmp
sbb
paddq
fdiv
push
mov
xor
push
mov
sbb
push
push
mov
arpl
arpl
sbb
dec
or
or
mov
jne
cld
cmp
pop
fdivs
pop
je
fucomi
aam
and
push
cwtl
sahf
mov
cmp
sbb
sbb
insb
lds
popa
lods
lock
sbb
lretw
pusha
test
int
test
jecxz
push
rol
imul
xor
fucomip
jno
arpl
jp
mov
cmp
aad
mov
pop
ret
pusha
jl
xor
push
arpl
or
scas
inc
dec
adc
test
sbbb
jg
cmp
pushf
mov
out
push
xchg
adc
leave
sti
dec
psubusb
outsb
or
pop
jns
push
mov
roll
or
lods
stos
mov
lods
mov
data16
imul
aas
push
enter
iret
fnop
push
or
scas
sti
lds
pop
ret
pop
sbb
faddl
pop
ja
mov
shl
xor
push
out
gs
mov
fmuls
mov
ficompl
ret
repnz
outsl
inc
push
cmp
adc
mov
insb
cmp
sub
test
pop
repz
push
and
imul
lods
das
in
fidivl
jae
faddp
sbb
jne
cmp
in
xchg
or
shlb
shrb
push
lods
xor
xchg
cmp
ret
xor
repnz
hlt
inc
ss
or
or
fadd
into
or
imul
mov
dec
xor
scas
xlat
mov
mov
ret
ffree
stos
enter
push
ret
or
aam
mov
add
dec
cmpsl
push
imul
inc
daa
mov
lret
gs
jnp
pusha
pop
dec
and
jo
jg
jp
inc
loopne
mov
fimull
test
sub
addb
gs
lcall
out
lret
outsl
int3
adc
clc
int3
cmp
js
insl
jae
inc
fisubl
push
sarl
out
mov
test
cmp
mov
lahf
mov
push
xchg
sub
in
int
lea
lds
inc
iret
lods
lahf
lock
push
test
add
int3
shr
sub
xor
rorb
stos
imul
add
dec
shlb
sbb
sub
scas
xchg
inc
jg
mov
pop
adc
fcomi
data16
xchg
mov
and
and
push
sub
cltd
dec
loop
push
push
push
es
in
cs
nop
dec
popa
jl
out
cld
pop
cmpsl
or
mov
fcompl
jmp
mov
mov
out
mov
mov
cmp
push
inc
mov
jmp
enter
int3
push
call
mov
inc
sti
or
lret
inc
mov
inc
out
ja
xchg
outsl
int3
xchg
mov
shll
stc
rorl
inc
stos
lret
or
push
testb
mov
rclb
cmp
lret
mov
fcomps
lock
push
jae
add
cmp
mov
movsl
les
imul
stos
imul
lret
xchg
fists
pop
fsubs
mov
push
fsubrl
xchg
in
inc
mov
jo
xchg
mov
and
loop
sub
and
int3
ret
ja
push
lret
xchg
loop
jns
sbb
cmp
sub
xor
sbb
int
sbb
mov
test
inc
movsl
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
movsl
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
movsb
push
mov
inc
mov
andl
adc
and
xor
add
adc
popa
test
inc
and
mov
sub
add
fisubrl
lret
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
scas
mov
cmc
xlat
mov
mov
cmp
add
or
push
add
add
pop
or
add
pop
add
ja
pop
add
add
add
jle
stc
add
add
add
add
xor
movsb
add
popa
add
daa
add
add
push
add
testl
gs
add
add
add
add
add
cmpsb
add
add
cmp
movl
push
add
add
add
add
sbb
mov
add
jmp
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
add
add
add
add
add
add
add
testl
imul
add
add
add
add
add
sbb
push
add
add
ret
add
pop
add
add
add
add
add
add
add
add
filds
add
ljmp
add
add
add
stos
add
add
add
add
pushf
add
add
jne
push
add
or
mov
push
xor
movsb
add
jne
fwait
add
add
imul
add
ljmp
add
add
add
jge
or
sub
push
add
add
add
add
insl
add
add
stos
add
push
add
add
pop
add
ljmp
add
add
add
movb
add
add
add
add
add
add
add
inc
add
or
data16
add
add
add
add
add
out
add
add
add
add
roll
scas
add
popl
popa
add
cmp
int
jne
add
add
cmp
fwait
add
add
add
add
add
add
add
add
sub
ja
int
addb
add
add
add
add
int3
add
add
add
add
add
incb
and
pop
add
add
bound
sub
jne
push
add
add
dec
add
add
add
sub
loop
add
add
fwait
add
add
add
and
jle
cmp
add
add
add
add
mov
add
add
sbb
loop
xor
cli
add
add
add
add
movsb
add
add
add
out
scas
add
add
add
push
add
add
add
movsl
add
add
add
pop
add
add
sbb
add
add
ljmp
add
add
mov
add
add
add
add
add
cmp
pop
add
add
add
inc
add
and
cmp
pop
add
add
add
scas
add
add
add
add
or
movsl
add
add
or
jecxz
addb
add
jp
jns
xchg
add
add
jae
movsb
add
lcall
add
add
insb
add
add
add
add
add
adc
add
cmp
and
inc
add
add
add
add
add
arpl
adc
pop
add
push
add
add
jl
add
cli
shll
mov
out
cmp
or
add
sbb
test
jns
mov
xchg
lea
dec
jne
repnz
jne
movl
cwtl
mov
cmp
out
fwait
xchg
outsb
jl
pop
add
subb
in
fsubr
in
jge
sbb
inc
jg
cmpsb
movsb
sbb
sbb
insb
inc
pop
push
adc
push
stc
lock
xchg
test
leave
and
rep
or
xchg
mov
rclb
add
jb
mov
fs
rcr
pushf
rcl
lahf
push
pop
out
stos
inc
pop
cltd
fidivs
outsl
sub
push
push
insl
lcall
fwait
xlat
clc
cltd
jnp
dec
aaa
dec
mov
dec
das
sar
jmp
inc
jp
stc
out
cld
xchg
in
jl
in
or
and
xchg
rcrl
stos
nop
sbb
or
popf
xchg
push
popf
sub
add
mov
mov
mov
pushf
add
add
loop
mov
insl
leave
mov
enter
sahf
pop
fs
adc
dec
xchg
xchg
dec
jmp
xchg
mov
ret
xchg
mov
mov
hlt
sub
idivb
jne
test
nop
xchg
divb
data16
pusha
push
add
rcr
dec
mov
pop
push
mov
xlat
lds
or
scas
mov
and
adc
mov
sar
rol
jb
mov
loope
sahf
lds
das
mov
adc
pop
ja
jle
int
push
lds
xor
add
inc
mov
or
and
sub
stc
bound
scas
xchg
jns
fwait
mov
shll
push
mov
push
pop
or
and
ficoml
inc
pop
movsb
sub
add
lret
rorl
xor
inc
ss
test
jae
mov
notb
aaa
push
push
sbbl
out
mov
lock
pop
bound
sub
adc
dec
repz
cmp
or
lds
xchg
jp
mov
cli
push
xchg
cs
xor
xor
stos
daa
bound
pop
jb
mov
adc
sub
inc
or
xor
mov
test
cmp
cli
xor
int3
dec
jmp
test
movsb
push
les
popa
mov
push
les
sbb
and
lret
into
idivl
add
pop
in
add
and
mov
add
cmp
xchg
jne
pop
push
adc
push
adc
lahf
insb
fisttps
sbb
outsl
out
push
test
scas
mov
sub
sub
mov
inc
jmp
xor
cmp
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
