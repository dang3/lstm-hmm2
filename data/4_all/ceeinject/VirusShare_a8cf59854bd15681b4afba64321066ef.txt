call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
cmpb
add
adc
and
xor
jo
inc
popa
push
jno
xorl
rol
loope
icebp
and
xor
add
adc
mov
popa
push
jno
xorl
rol
loope
icebp
and
adc
push
adc
pusha
adc
xor
incl
cld
pop
sub
jnp
lret
loop
adc
incl
shll
inc
xor
mov
fdivl
lock
sub
jno
and
xor
popa
fisttpll
xchg
test
out
jo
shll
shl
xor
bound
jle
nop
ljmp
roll
mov
fistpll
lahf
adc
add
lahf
gs
pop
sbb
insl
pusha
ja
dec
mov
push
xchg
cmpsl
enter
test
insl
add
mov
and
dec
imul
add
dec
sub
je
inc
add
and
std
movsl
add
xorl
rol
loope
icebp
and
xor
add
adc
pusha
inc
jo
inc
popa
push
aaa
loope
les
out
mul
scas
adcb
insl
push
js
dec
push
sub
jecxz
adc
rcl
in
cld
out
movsb
mov
mov
inc
popa
jge
ja
pop
popa
cs
ds
and
in
aad
lds
shl
and
xor
add
adc
pusha
inc
jo
inc
popa
push
jno
xorl
rol
loope
icebp
and
xor
add
adc
pusha
inc
jo
inc
popa
push
jno
adcl
sub
add
add
ja
outsl
add
nop
nop
pop
add
adc
sahf
test
pop
loop
pushf
and
pop
fwait
jle
aam
roll
clc
repz
sub
inc
mulb
xchg
jg
lcall
dec
aas
imul
fistps
xor
push
insl
stc
jle
cmp
popf
add
pop
vpcompressq
and
adc
sub
dec
scas
insb
cli
filds
rcll
sub
mov
call
cld
lahf
arpl
in
mov
mov
aam
or
or
icebp
mov
rcl
outsb
mov
addr16
aad
mov
shrl
loope
cmp
in
sub
jno
scas
shlb
popl
mov
out
and
stos
inc
add
push
arpl
xchg
and
andb
popa
pusha
sub
or
in
in
mov
rcrl
or
push
sti
divb
imul
pop
mov
in
jnp
mov
xchg
rclb
sti
dec
mov
inc
ss
xor
pop
add
mov
out
dec
fdivrl
je
mov
insb
adc
fmull
cmp
mov
mov
out
lret
lret
hlt
jbe
cmp
adc
shr
jnp
jbe
imul
mov
sub
jne
clc
and
xlat
xchg
hlt
mov
add
jnp
mov
dec
lea
xor
mulb
rcr
aad
adc
push
and
push
out
pop
popa
or
imul
xchg
inc
xchg
shll
xor
or
xchg
fbld
leave
bound
mov
movsl
ret
cmp
xor
insb
les
arpl
js
addb
xchg
ljmp
loopne
mov
mov
stc
lcall
xchg
mov
les
adc
xor
into
adc
cmpsb
stos
dec
test
mov
lcall
arpl
imul
sbb
sbb
pop
add
push
jnp
mov
push
xchg
xchg
xor
sub
cli
popf
push
pop
push
dec
add
dec
xchg
push
lret
xchg
inc
xchg
sub
cmp
or
jns
fwait
in
in
jo
xchg
insl
mov
ret
adc
fisttps
addl
insl
inc
out
mov
popa
aam
cmc
pop
dec
cs
fisubl
xor
fisttpll
cwtl
xchg
outsl
out
fistps
inc
xchg
adc
push
push
mov
decb
clc
mov
in
jae
mov
pushl
inc
mov
jnp
movb
xor
lret
cmp
shrl
push
inc
mov
imul
xchg
add
mov
outsl
xor
incb
and
push
pop
stc
jnp
xchg
and
outsl
in
loop
mov
jno
jno
pop
push
pop
dec
add
out
rcr
int3
insb
insb
outsl
mov
imul
jmp
mov
jl
dec
inc
jno
into
sub
repnz
xlat
adc
adc
pop
clc
daa
inc
aas
loopne
adc
inc
aaa
mov
mov
fidivs
cmp
jp
sub
sbb
sub
mov
int
ja
repnz
pop
in
adc
bnd
inc
sub
dec
int
and
xchg
cmpsb
mov
pop
aam
adc
arpl
jnp
sbb
sbb
in
mov
sbb
hlt
test
mov
fnsave
sbb
js
push
lea
jle
push
cmp
dec
iret
test
sbb
fwait
loope
mov
into
jp,pn
insb
clc
repz
pushf
fcompl
in
adc
into
push
push
out
fildll
iret
fidivs
loopne
sub
mov
and
pop
test
scas
repz
es
jne
xchg
aad
push
xchg
fidivs
rcll
loope
add
push
sub
arpl
push
sbb
daa
shlb
pop
cld
mov
inc
bound
out
fildll
mov
push
jb
or
repnz
test
push
jge
int
mov
or
pop
call
in
fadd
imul
jbe
xor
push
mull
or
mov
je
pop
scas
add
sub
bound
push
jne
dec
add
sub
popf
cmp
xchg
cmpsl
nop
and
push
ror
data16
popa
addb
sbb
or
jne
and
pop
lock
add
mov
flds
rclb
cli
jo
dec
or
dec
clc
ret
mov
inc
test
mov
cmc
pop
andb
mov
in
mov
fcmovnu
pop
jne
jl
cltd
or
fldl
hlt
js
push
out
fsubrs
add
cmpsl
imul
mov
pop
or
std
or
hlt
sahf
icebp
inc
in
loope
je
mov
or
push
jno
rorl
inc
out
or
xchg
aad
adc
rol
data16
jnp
sti
cmp
mov
adc
mov
in
ret
in
pop
fstps
sub
test
adc
xchg
sub
xlat
jge
repnz
push
add
cmp
stos
mov
je
xor
jae
das
jp
jo
cwtl
mov
fstpt
imul
pop
cmp
sub
pushfw
cmpsl
movsl
mov
mulb
mov
flds
jne
mov
aad
xor
sub
ret
into
mov
mov
pop
sti
ljmp
mov
fdivp
loopne
inc
push
sub
jae
fwait
mov
or
adc
cld
push
icebp
adc
lahf
in
push
test
push
call
cld
mov
frstpm(287
mov
lods
push
lock
lret
call
mov
mov
roll
or
mov
lods
xor
fbld
icebp
cmp
cmp
test
dec
popf
in
jge
mov
mov
cmpsl
add
mov
cmpsb
cmp
je
cli
fdivs
cltd
sarl
mov
xchg
pusha
push
jns
jns
imul
or
aaa
xor
sbb
mov
add
mov
fcomip
inc
ja
lds
xchg
es
cmp
loopne
int
sub
mov
sti
mov
insb
aas
xor
cwtl
push
bound
int
clc
gs
test
mov
mov
popf
add
push
out
in
mov
inc
mov
mov
mov
lods
dec
stos
fidivs
jge
sbb
mov
iret
in
aas
aas
repz
cli
and
aam
test
jo
inc
aaa
fwait
insb
in
cld
sub
aas
iret
test
sub
or
mov
out
call
fimuls
test
xchg
je,pt
icebp
es
in
ss
test
jmp
dec
fldenv
lret
jp
insl
mov
cmp
mov
into
jns
repz
insb
mov
lods
or
jae
mov
cmpsb
rcr
or
pop
or
cmc
and
push
jl
jmp
lds
shlb
and
mull
push
lock
test
and
add
leave
mov
sbb
xor
hlt
sub
out
in
ret
das
aad
lods
cmp
clc
pop
pop
das
cli
push
subl
mov
inc
mov
lea
adcb
fcoms
and
mov
jge
inc
jb
pop
jle
enter
mov
sbb
enter
fmuls
ret
jns
pop
repz
mov
je
sub
mov
out
cmp
push
push
mov
pop
jp
imul
loope
sbb
popa
and
or
cwtl
xchg
outsb
out
jecxz
jle
mov
das
movsl
push
repz
cld
xchg
or
rcrb
fsts
nop
dec
mov
inc
inc
jo
sarl
mov
mov
mov
rcl
repz
ja
notb
mov
movsb
test
iret
aam
pop
leave
sub
nop
or
je
add
pop
pushf
mov
les
inc
fimuls
addr16
jns
fistl
jge
lods
jecxz
cmp
sbb
sbb
add
push
xlat
jne
xchg
cmp
pop
addr16
hlt
mov
loope
mov
repz
in
dec
lods
arpl
int
mov
push
cmp
push
dec
stos
adc
movsb
sbb
adc
sub
mov
mov
sti
stc
and
in
aam
sub
xor
ret
movsb
in
test
push
cmp
push
ljmp
push
out
sub
loope
test
sti
jb
xchg
xor
sub
lret
out
in
jae
mov
je
xchg
xor
push
nop
iret
push
mov
and
sub
xor
xchg
push
clc
test
je
adc
add
mov
call
into
push
lahf
repz
sub
add
and
leave
xchg
ror
jle
adc
in
aad
cltd
xor
pusha
aas
pop
out
push
call
add
mov
inc
pop
ret
dec
pusha
sbb
jmp
cmpsl
cli
shl
and
xor
dec
clc
jnp
fisubl
add
inc
sti
loop
xor
inc
cmp
or
insl
rolb
out
push
sbb
xchg
jns
xchg
pop
jmp
pushl
arpl
and
mov
outsl
xor
enter
jmp
in
shr
jg
popf
cltd
addl
jne
xchg
sbb
pop
adc
pop
cmp
out
cmpl
lahf
inc
and
sub
sbbl
push
cmp
xorb
movsl
notl
rorb
popa
aad
cmp
xlat
js
xor
mov
dec
cmp
daa
mov
pop
dec
out
imul
pusha
pop
xchg
mov
mov
jns
and
mov
pop
dec
pop
xor
jl
mov
in
les
es
jnp
jl
mov
addr16
pmaddwd
test
dec
das
bound
cmp
mov
lret
imul
mov
push
shr
fcmove
or
in
cmp
adc
mov
sub
sbb
aam
ret
sahf
cmp
clc
add
test
sbb
data16
xchg
add
cmp
mov
mov
inc
jns
cs
lock
jmp
or
pop
push
movsl
xchg
inc
lock
jmp
mov
iret
mov
mov
mov
pop
mov
pop
mov
jmp
setnp
dec
cmp
mov
or
fidivrs
cmp
popf
jns
cli
ret
mov
test
bound
and
mov
test
jne
lds
jb
xchg
clc
pop
jg
fnstcw
jp
dec
divl
inc
stc
in
ljmp
pop
testb
mov
data16
xchg
je
lret
xor
sub
movsl
adc
stos
sbb
dec
cs
fidivrs
add
outsl
lods
cli
mov
ss
pop
popa
scas
push
inc
lods
arpl
cmpsb
mov
inc
rolb
sub
test
pop
adc
dec
insb
mov
jb
jae
push
ret
xchg
orl
dec
lods
xor
cmpb
mov
add
and
nop
nop
pop
dec
mov
popf
add
mov
jl
mov
or
adc
ljmp
pop
stos
in
data16
cli
adcl
into
xchg
or
sub
jns
mov
add
jmp
dec
xchg
mov
addr16
test
mov
gs
fadd
mov
add
dec
pop
or
push
inc
mov
out
and
push
xchg
pop
push
mov
push
cmp
mov
pusha
mov
lods
jl
ficomps
repz
fldenv
mov
ret
pop
movsl
in
sub
xor
into
inc
das
loope
dec
cmp
sbb
arpl
pusha
outsl
inc
cmc
roll
rcll
push
sub
fiaddl
fcmovb
imul
mov
cld
mov
pop
icebp
cmp
dec
hlt
mov
into
sarb
in
and
cltd
push
imul
push
stc
fiadds
lahf
adc
sbb
mov
mov
dec
pop
adc
movsl
add
cmc
fwait
mov
leave
leave
ja
shlb
lds
dec
call
outsb
jmp
dec
xchg
jae
mov
in
cli
cs
xchg
jg
aas
inc
pop
pop
or
mov
cmpsb
test
sbb
mov
pop
repnz
outsb
pop
insl
or
sti
sbb
xchg
into
xchg
sbb
stos
jecxz
dec
out
in
loope
mov
lds
xor
sahf
lcall
fldl
loopne
cmp
stc
hlt
push
arpl
mov
dec
cmc
xor
dec
fiaddl
insb
jmp
sbb
ja
jnp
stos
xor
jmp
or
mov
mov
cs
dec
lock
push
pop
push
mov
and
pop
add
loope
test
dec
negb
movsb
add
mov
xor
mov
jecxz
jbe
fdivrs
inc
sbb
push
push
lcall
inc
fnstcw
xor
cmc
push
clc
das
lock
fnstcw
pop
sti
push
xchg
pop
lcall
xor
lds
push
xchg
dec
add
sub
insb
xor
jo
popa
ficoms
pop
outsl
dec
sub
mov
sub
decl
ds
add
lods
push
int3
mov
in
fidivrl
sub
cmp
rcrb
lret
leave
outsb
loope
lret
jle
dec
cmp
pop
or
pop
mov
lock
adc
addl
or
iret
cmp
or
out
cmp
imul
scas
shrb
inc
cmp
cs
pop
jo
mov
mov
adc
cwtl
fdivp
mov
pushf
and
xor
and
push
xchg
hlt
in
pushf
xorl
mov
push
xor
inc
nop
xor
add
pushf
call
pop
sbb
cld
popa
or
pop
cmp
movsl
lret
bound
and
adc
and
stc
cmp
cmpsl
adc
fcmove
loope
mov
mov
andl
aaa
clc
mov
xchg
jle
rclb
mov
popa
push
fsubrl
push
sbb
cmp
and
push
fisubrs
lods
int3
rcrl
pop
lret
ret
jmp
jns
xor
mov
dec
and
cmp
test
int3
ror
xchg
mov
js
outsb
fistps
fs
les
dec
ss
sub
mov
lock
mov
fidivs
and
jo
adc
mov
cwtl
pop
adc
mov
shrl
aas
fs
stos
sarb
mov
push
push
test
das
pop
dec
push
stos
adc
icebp
inc
daa
imul
mov
or
lret
pushf
sub
xchg
inc
jl
pop
fndisi(8087
sub
mov
clc
mov
jno
cmp
imul
ret
stos
pop
dec
inc
pop
mov
sbb
jne
lods
push
pop
or
or
xchg
cmc
or
mov
mov
aad
sbb
mov
xchg
mov
and
int
stc
dec
push
dec
xor
xchg
push
bound
in
dec
pop
insl
push
les
sub
movsl
outsb
add
mov
popf
lods
xor
adc
iret
jae
icebp
cmp
xchg
jnp
popa
scas
jno
jnp
in
dec
lock
cwtl
jbe
mov
mov
sub
sub
loopne
sti
xchg
mov
sbb
fimull
in
fnstsw
or
jge
in
adc
add
addb
cld
test
add
lods
pop
push
mov
push
dec
pushf
ljmp
sbb
popf
pop
mov
push
cli
mov
movsb
or
stc
adc
mov
aas
scas
xorl
cmp
or
dec
jbe
fwait
mov
push
hlt
sahf
ss
mov
sub
shlb
aad
aas
mov
inc
xor
in
jle
dec
int
arpl
sub
sub
push
iret
es
mov
call
dec
iret
sti
mov
pop
aaa
jecxz
les
mov
push
dec
aad
popf
mov
outsl
xlat
hlt
sbb
xor
ds
mov
push
inc
js
mov
sahf
and
push
or
clc
jb
xchg
into
xor
xchg
out
imul
sub
cmp
cwtl
je
jno
pop
xchg
jecxz
sbb
js
scas
xor
fbstp
and
stc
das
movsb
pop
jmp
dec
loope
add
dec
push
mov
push
pop
ficoms
mov
clc
pop
dec
cwtl
movsl
jnp
xchg
sub
divb
cmp
aas
add
outsb
lds
and
push
stos
mov
outsb
loop
jmp
inc
fiaddl
stc
ja
mov
xchg
shlb
daa
testl
repnz
es
and
repnz
jle
dec
add
imul
mov
bound
neg
stos
out
je
cmpb
negb
sbb
data16
ss
and
call
inc
aas
pop
lock
mov
fcomps
jmp
inc
mov
pop
shlb
shl
hlt
mov
int
js
mov
mov
fstps
sbb
dec
leave
lret
lret
add
testb
add
call
push
sbb
ret
push
hlt
lahf
push
mov
cmpsl
movsb
dec
lods
ret
hlt
jae
enter
dec
sbb
int3
jg
cmpsl
stos
mov
sbb
mov
xor
clc
mov
cli
dec
dec
std
cmp
jl
add
cld
pop
into
test
fcmovnu
mov
dec
xchg
inc
cltd
repnz
cmp
cmp
xchg
add
stc
sbb
or
ret
push
movsb
push
jo
fiaddl
cmc
mov
lcall
xor
or
pop
repz
mov
bound
or
jmp
inc
cmpsl
xchg
test
jg
cld
and
out
popf
xchg
inc
sub
ss
dec
push
fisubl
clc
pushf
lcallw
incb
cmp
jp
pop
inc
mov
cmp
lods
sbb
inc
inc
fldt
das
adc
lock
jg
out
push
cld
rcl
pushf
cwtl
lahf
pop
mov
gs
push
outsb
adc
and
push
jp
rep
negl
movsl
cmc
test
sub
adc
adc
fdivrs
jbe
je
stos
xor
pushf
mov
pop
mov
adc
js
pop
mov
sub
sub
mov
pop
jae
mov
jge
scas
test
lods
and
mov
cmp
mov
sub
sub
pop
out
jb
sbb
pop
das
int
xchg
jmp
pop
pop
cwtl
jmp
xchg
in
addr16
pop
jb
xchg
pop
int
mov
data16
je
negl
xchg
fs
lea
shrl
mov
xchg
inc
xchg
addb
push
stos
aas
pop
repnz
jecxz
cmp
jo
lock
xor
jno
das
leave
mov
clc
push
jmp
lods
cmp
inc
add
test
mov
inc
std
cmp
jno
ficompl
loop
add
arpl
insl
xor
stc
out
jge
and
xchg
xor
dec
lods
inc
std
cwtl
loopne
inc
fisubrs
adc
insb
mov
adc
dec
jecxz
adc
xor
pop
dec
lock
pusha
mov
ret
rep
fbstp
enter
or
pop
sarb
fdivrs
inc
or
pushf
mov
pop
mov
or
pop
andl
das
stc
call
roll
es
cmp
push
push
jl
data16
adc
sub
lret
cmp
sarb
jp
pop
xchg
mov
push
jge
stos
scas
fwait
lods
lahf
arpl
and
xchg
pop
jb
push
fidivl
insb
ja
daa
data16
pop
adc
cmp
jnp
mov
pop
push
add
xchg
adcl
or
cmp
es
aam
push
not
out
repz
ja
xchg
mov
fwait
cmp
mov
loop
lods
jns
mov
pop
xor
add
into
xchg
mov
cmp
out
pop
fistl
mov
lea
lds
inc
mov
int
sub
les
lret
dec
cmpsb
sub
xor
mov
mov
pushf
cltd
call
sbb
sub
mov
es
mov
mov
push
mov
pop
adc
inc
or
sub
pop
push
mov
xchg
push
sub
rcrl
xchg
out
xchg
pop
xor
xlat
mov
push
jmp
push
and
mov
aas
lea
push
add
pop
lds
je
into
in
or
or
pop
jb
decl
mov
lret
out
fneni(8087
popf
push
mov
push
pop
fxtract
arpl
sbb
or
xorl
int
jbe
sbb
movsl
push
inc
gs
rolb
sub
and
mov
push
push
mov
in
outsb
cli
fcmovu
add
sub
inc
and
xor
lds
es
mov
enter
pop
sub
mov
xchg
add
popf
and
cmp
punpckhbw
lahf
dec
mov
push
jo
cltd
xchg
andl
shl
and
xor
add
adc
pusha
inc
jo
inc
popa
push
jno
xorl
rol
loope
icebp
and
xor
add
adc
pusha
inc
jo
inc
popa
push
jno
test
xchg
add
lock
loopne
icebp
and
xor
add
adc
pusha
inc
jo
inc
popa
push
jno
xorl
push
shlb
and
xor
adc
add
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lea
and
adc
add
jo
inc
adc
inc
adcb
inc
gs
shlb
rol
and
adc
add
push
cmpsl
inc
pop
mov
rclb
movsl
adcb
push
loopne
xchg
daa
ror
fisubs
out
adc
add
push
mov
push
sbb
hlt
adc
inc
mov
jg
jg
push
lahf
mov
addl
test
lds
imul
sub
xlat
dec
mov
push
repz
inc
push
outsb
add
xchg
push
stos
test
fildl
xor
std
xchg
push
dec
mov
jge
icebp
inc
and
and
insb
add
fbld
int3
ja
cmp
xchg
lcall
aaa
sarb
fildll
jno
jne
inc
mov
pop
dec
mov
inc
mov
das
fisttps
cmpsb
fistpll
add
mov
mov
pop
daa
xlat
les
rcll
and
adc
add
push
mov
mov
pop
loopne
sarb
test
xchg
jns
imul
push
lret
aad
aam
clc
or
jnp
arpl
xlat
xor
and
cmp
add
daa
loop
push
enter
icebp
adc
jb
je
inc
mov
nop
mov
js
gs
jo
pusha
mov
cmpsl
inc
push
mov
mov
pop
lock
loopne
shlb
rcl
and
adc
add
push
cmpsl
inc
push
mov
mov
pop
lock
loopne
shlb
rcl
add
scas
mov
stos
fmull
incl
mov
push
inc
stos
add
sbb
sub
jno
jo
or
mov
jnp
and
ret
push
mov
adc
stc
push
mov
xor
sahf
inc
mov
aad
adc
out
mov
xor
xchg
iret
dec
mov
add
stos
sbb
xchg
fdivrs
scas
int
mov
jne
shlb
shrl
sahf
sbb
cmpb
aad
dec
adc
cmp
or
cs
mov
flds
mov
test
sub
mov
xor
dec
push
dec
inc
cmp
and
add
fst
gs
popf
popf
inc
inc
outsb
orl
mov
push
aas
sbb
add
dec
lea
sti
into
rcll
aas
sahf
pop
xchg
fldt
jb
and
ds
ja,pn
inc
adc
mov
std
in
mov
lds
cmc
push
scas
adc
and
shll
pop
sbb
call
sbbl
adc
mov
cmp
bound
iret
ljmp
js
dec
inc
pop
add
in
or
and
es
push
insl
mov
mov
pop
in
mov
pop
add
mov
mov
ret
push
jb
mov
das
and
adc
xor
mov
xchg
mov
movsl
je
and
pop
or
mov
lret
cmpsb
dec
jp
and
or
sub
scas
xchg
pop
bound
inc
lcall
add
test
and
add
or
das
push
bound
fstpt
xor
mov
push
mov
inc
add
andl
nop
add
testl
std
rclb
stos
call
lahf
cmp
adc
jns
ds
mov
sub
mov
add
ret
jnp
inc
push
cltd
jmp
sbb
jae
or
fstpl
popa
ja
push
andl
mov
test
add
cltd
test
mov
outsb
aas
mov
cwtl
mov
outsb
shl
or
jle
into
stos
push
jo
mov
fstpt
call
test
and
xchg
pop
jecxz
ja
movsw
repnz
inc
sbb
les
push
pop
sub
xchg
jle
enter
enter
out
sbb
js
sbb
int3
cld
cltd
push
call
jbe
stc
ds
pop
fistl
jp
add
jne
aaa
cmp
mov
pop
mov
mov
fimull
test
arpl
inc
inc
pop
xchg
lods
insb
sbb
scas
std
jo
enter
dec
xchg
mov
mov
ljmp
mov
loop
and
lods
xor
imul
iret
in
mov
repz
xchg
test
jnp
movsb
movsb
decb
shrl
std
pop
sbb
sub
xchg
jns
mov
or
js
pop
sub
push
in
in
add
mov
or
orb
clc
push
xor
push
cmp
cwtl
rorl
imul
xchg
xlat
push
stos
and
push
aad
call
loop
inc
nop
in
data16
iret
mov
jl
push
pop
cmp
call
pop
lds
out
sbb
add
repz
popa
rolb
ja
adc
xchg
jge
mov
jmp
or
xchg
mov
subl
xor
aad
dec
lock
cmp
mov
lods
dec
insb
mov
push
fwait
cmc
call
sub
mov
lcall
sbb
dec
shl
repnz
je
xchg
pop
stos
push
and
adc
fsubr
dec
cli
mov
pop
leave
mov
dec
cmpsb
insl
pop
mov
xlat
rorb
rorb
bnd
or
xlat
or
ds
imul
fwait
mov
inc
hlt
aas
adc
fiadds
jae
push
pop
lods
lock
mov
adc
outsl
push
aaa
adc
loop
cvttps2pi
pushf
test
fsub
pop
dec
popf
pop
in
inc
dec
ficomps
and
js
into
test
pandn
sti
jns
notl
fsts
sbb
dec
in
push
xor
adc
push
and
repnz
push
test
push
hlt
xor
xor
mov
xchg
xchg
mov
rorb
inc
into
mov
adc
stos
cld
inc
or
loope
and
dec
test
out
mov
push
loop
clc
jge
lahf
icebp
lock
clc
cld
pop
dec
test
mov
pusha
iret
pop
or
jnp
call
jo
add
arpl
in
ds
inc
mov
jge
cmp
into
or
sahf
insb
adcl
leave
fnstcw
jg
pop
stc
add
sub
push
insl
dec
xor
dec
test
push
jae
jae
adc
fst
fldcw
jns
mov
fisubrl
pop
divl
iret
in
into
mov
xlat
rcrb
cmp
jne
ss
push
jnp
mov
cld
imul
outsb
int
push
dec
sub
sbb
jne
sti
mul
mov
mov
cmp
notl
or
pop
add
lods
test
testb
pop
mov
test
push
insl
push
cmc
and
imul
test
and
popf
mov
stos
mov
xor
mov
or
orb
jg
fstl
mov
pop
dec
iret
imul
mov
xlat
sub
fidivrl
add
into
insl
int3
cmp
cmp
in
or
pushf
dec
xchg
sbb
setl
testb
mov
mov
test
cmp
dec
ret
daa
add
clc
sbb
lods
inc
jmp
out
mov
femms
adc
jne
and
add
rorl
jecxz
in
es
and
ds
adc
ljmp
and
jle
push
jecxz
cmp
pop
test
and
and
outsb
xor
sub
pop
fists
in
sarl
adc
pop
push
dec
xchg
cmp
andl
mov
or
insl
mov
shlb
jl
fs
scas
repz
hlt
pushf
sarb
dec
sub
movsb
lahf
ja
ds
mov
loop
rcll
cmc
push
xor
add
testl
sti
pop
aad
xchg
dec
pop
push
pop
cltd
insl
or
pusha
lock
push
pop
xchg
jp
or
lods
inc
fnstsw
ljmp
test
rorb
fwait
push
movsb
cmp
adc
hlt
cmpsb
push
lret
xlat
cmp
shl
push
ljmp
mov
test
jge
std
and
in
stc
add
cmp
je
out
or
ds
stos
ds
lret
sub
stc
xorb
sub
push
test
jne
jge
jb
lcall
push
sbb
pop
shrl
dec
sub
in
dec
mov
mov
movsl
int
xor
mov
xor
jne,pn
adc
xchg
nop
inc
adc
jbe,pn
lods
or
aaa
pop
dec
loopne
ss
icebp
xor
sti
xor
dec
mov
jb
es
aas
test
out
scas
xchg
sbb
cmpsl
jb
mov
rcl
fcompl
and
push
in
adcl
lods
aad
out
cltd
add
out
sub
test
shlb
mov
adc
sbb
lock
sbb
scas
push
xor
dec
ja
push
test
inc
pushl
aaa
push
sub
out
ja
lock
dec
rcll
sub
das
loope
push
fcmovu
dec
and
jbe
repz
xor
movsl
scas
sub
cmc
test
xchg
inc
jb
jb
inc
pop
jge
pop
stos
xchg
or
pop
mov
pop
jge
jbe
push
fninit
adcl
test
xchg
jge
dec
push
fnstenv
pop
mov
rorl
movsb
ljmp
std
fwait
cmp
inc
lods
and
xor
push
xorb
out
push
dec
add
xchg
pop
mov
mov
inc
mov
lock
push
mov
mov
repnz
inc
push
pop
ffree
pushf
pop
std
adc
ficoml
insb
mov
xor
adc
mov
xchg
and
imul
sbb
add
dec
jmp
adc
mov
mov
mov
lcall
data16
es
jnp
sbb
rcll
dec
call
push
imull
xchg
mov
add
inc
mov
mov
sub
sbb
xchg
in
inc
dec
dec
add
and
int
mov
xchg
xor
addr16
xchg
stos
jno
mov
insl
or
cmp
dec
insl
movsl
cmp
into
lret
int
inc
add
loope
push
ja
jo
mov
sub
es
cmp
sbb
jmp
stos
add
leave
push
cmp
popf
test
pop
inc
inc
xchg
ljmp
adc
xchg
dec
jl
gs
or
test
test
out
hlt
str
rcll
fwait
pushf
jmp
jl
insl
outsl
and
gs
or
xchg
mov
cmpsb
dec
add
out
add
jecxz
mov
sbb
hlt
push
repz
or
testl
imul
ret
add
les
push
mov
movsb
mov
neg
sub
into
pop
inc
fwait
in
int
movsl
aad
aam
mov
mov
xor
frstor
cmp
push
pop
sub
fists
das
adc
lcall
adc
cltd
xchg
jmp
or
mov
stc
aam
lds
xlat
mov
inc
inc
in
pop
fists
shl
mov
xchg
pop
mov
test
std
xlat
insb
push
imul
les
jl
adc
fisubl
cmp
fldenv
fstl
fwait
daa
push
push
jns
loopne
rcll
cltd
mov
push
mov
jae
mov
aaa
sbb
jo
inc
std
xchg
insl
int3
out
push
shrl
pop
dec
cmp
xchg
jmp
push
ja
test
pop
in
sahf
addr16
mov
push
popa
rorb
rorb
fistpll
lds
cmp
ss
mov
ror
pop
dec
xchg
loope
pop
cmpsl
and
push
push
pop
push
rcrb
testb
fwait
std
mov
mov
mov
jbe
outsl
jne
push
ds
lea
rcrl
xor
cld
pop
mov
push
pop
lods
jp
inc
repz
dec
sub
lock
rclb
and
shlb
adc
mov
jo
ja
and
addr16
lcall
ret
jnp
mov
loop
sub
movsb
dec
stos
mov
les
cmp
insl
scas
push
mov
push
cmp
xor
filds
insb
or
in
loop
sub
pop
cmp
and
push
mov
loop
jo
sub
push
dec
shrb
push
dec
or
and
push
push
je
or
call
iret
jg
stos
hlt
aad
xor
leave
dec
lcall
xor
dec
pop
or
fstpt
in
sub
sbb
and
push
test
sub
lret
pushf
scas
in
mov
mov
push
std
imul
aad
dec
pop
inc
ja
jp
fsubr
cwtl
aaa
jge
daa
jnp
mov
sbbb
mov
pop
mov
inc
dec
scas
lods
cmpsb
loop
jmp
sbb
rorb
hlt
cmp
cmp
pop
adc
push
shrl
iret
cmpsb
push
pop
sbb
das
aam
cmp
iret
add
adc
or
inc
jo
adc
mov
into
dec
orb
or
mov
cmpsl
fld
jp
pop
in
jge
push
fwait
cmp
les
push
aaa
jmp
mov
out
jns
pop
cmpsl
mov
rol
inc
pop
out
cmpl
mov
push
and
pop
pop
int
mov
sbb
dec
arpl
push
loope
lds
inc
cli
lock
inc
xor
sbb
cld
mov
aaa
aas
inc
dec
mov
pop
cmp
and
xor
dec
dec
inc
ljmp
ret
mov
jne
and
sbb
jmp
cmp
adc
js
mov
popf
and
jnp
lcall
cwtl
dec
aas
sub
dec
jecxz
sub
popf
lret
outsb
jge
cmc
fsubrs
jp
fstl
dec
pop
xlat
imul
or
pop
xchg
adc
pop
sub
dec
jl
pusha
and
xor
es
fsub
lds
push
xchg
push
jnp
mov
pop
push
nop
sub
sbb
pop
or
imul
sbb
jae
test
mov
addr16
dec
mov
ss
lods
push
out
mov
sub
insb
lock
add
dec
popw
jmp
rorl
push
sub
call
pop
mov
pop
sbb
pop
pop
mov
in
ss
inc
into
adc
sub
add
add
push
into
lods
jge
insl
dec
jns
jnp
in
mov
nop/reserved
pop
loope
mov
xchg
cmp
pop
aam
clc
lock
sbb
loop
les
scas
push
nopl
push
shll
cmp
xchg
dec
pop
inc
adc
and
rclb
ret
decb
repnz
sub
sbb
cmpsl
sub
mov
and
dec
add
mov
into
mov
push
push
lret
sbb
cwtl
push
clc
dec
testb
popl
mov
roll
adc
cmp
or
insl
adcl
push
test
push
and
fwait
and
xor
mov
mov
neg
lea
adc
cmc
push
insb
imul
mov
mov
adc
dec
mov
jne
std
mov
sbb
sub
popa
push
or
jle
sahf
frstor
or
std
gs
sbb
insl
lahf
out
daa
out
pop
fwait
int3
je
mov
jmp
stos
cwtl
data16
in
mov
lea
mov
fwait
pop
xor
or
aas
dec
mov
daa
inc
mov
sbb
and
addr16
push
out
cmpsl
out
cli
and
test
add
xor
negb
into
in
xchg
in
sub
in
sub
vpsubq
mov
dec
add
dec
xorl
push
sub
mov
arpl
repz
jns
repnz
push
cmp
daa
rorl
out
adc
xchg
sub
push
fnstsw
adc
dec
stc
data16
mov
imul
mov
dec
pop
leave
dec
jnp
pop
clc
dec
mov
sub
scas
sarl
cmc
adc
outsb
add
dec
inc
push
push
sbb
xchg
pusha
mov
lret
shlb
cltd
movsl
insl
dec
movsl
js
lcall
cwtl
in
push
mov
pop
ret
sbbl
call
in
push
sub
or
dec
ljmp
inc
jne
ss
xchg
mov
pop
data16
add
mov
mov
adc
push
add
out
adc
adc
rcl
loopne
push
xchg
movsb
add
loopne
into
das
adc
pop
subl
mov
mov
sbb
add
adc
call
mov
frstor
mov
pop
adc
daa
jle
mov
ret
mov
add
xor
mov
fcoml
mov
and
ljmp
add
shr
repz
scas
inc
xor
and
mov
xchg
mov
loope
leave
jge
mov
push
sarl
js
jle,pt
add
and
shll
lret
outsb
dec
dec
shrl
mov
testl
xor
push
cmp
leave
jecxz
stos
scas
scas
insb
int3
xor
nop
mov
cmp
cmp
sub
mov
mov
mov
or
lock
jl
xchg
inc
sahf
shr
and
test
mov
pop
sarb
or
jns
mov
pop
call
dec
int
adc
sub
mov
lret
xor
jle
add
fsubs
push
lret
lods
loopne
popa
cmpsl
add
mov
push
ret
xchg
jl
xchg
out
and
jo
sbb
lret
pop
mov
cmp
adc
inc
pushf
cltd
jne
dec
mov
pusha
pop
add
mov
adc
nop
loope
inc
pop
loopne
lcall
pop
mov
mov
sbb
dec
filds
int3
push
xor
push
testb
shrb
test
xor
adc
movsb
jae
or
xchg
cmpsl
call
xchg
inc
inc
sbb
inc
push
jnp
pop
pop
popf
sbb
sub
fwait
push
test
inc
adcb
negb
jbe
aad
or
xchg
inc
mov
pop
repz
out
jg
lds
cmp
adc
mov
jmp
testl
mov
xor
fmulp
lcall
or
dec
cmp
mov
test
add
int
cmp
int
push
adc
inc
scas
mov
sub
add
or
mov
sahf
fmuls
in
jo
xchg
cmc
ret
cld
and
cli
ror
adc
aad
cmpsl
popf
mov
cmp
insl
dec
sbb
addr16
pop
push
pop
cli
rorb
add
rcl
pop
push
jg
mov
sbb
ret
popa
cmp
pop
js
out
inc
push
icebp
dec
insb
leave
and
int3
bound
mov
adc
iret
std
fidivrl
fwait
in
xchg
fists
xchg
adc
jg
inc
sbb
xchg
mov
dec
dec
insl
or
mov
insb
mov
push
sahf
cmp
dec
xor
test
lret
sub
pop
scas
mov
push
dec
jecxz
jg
fwait
aaa
sub
shlb
and
adc
adc
inc
sbb
adcb
pop
inc
push
inc
xchg
xor
ret
pop
inc
rolb
xlat
call
mov
push
pop
loope
xlat
enter
sub
mov
aad
repz
and
push
mov
sub
mov
inc
leave
cltd
and
mov
out
daa
mov
movsl
sbbb
lret
inc
ljmp
mov
mov
and
cmpw
add
daa
cmpsb
jmp
xchg
or
add
pop
dec
stos
mov
push
pop
je
repnz
sti
xor
testl
sarb
or
cmp
push
or
pop
jno
xor
setns
leave
add
scas
add
pop
xchg
shrb
pop
stos
test
filds
mov
mov
js
mov
mov
jl
pop
cli
jns
cmp
scas
hlt
pop
xchg
push
daa
ficomps
or
pop
mov
hlt
jecxz
fxam
negl
loope
movsb
inc
arpl
sbb
xor
in
pusha
es
imull
in
movsl
movsl
mov
or
fcmovne
pop
jle
xchg
fsubrs
mov
or
push
cmp
insl
mov
pop
xlat
mov
mov
pop
cmp
hlt
jno
xchg
out
into
gs
or
cmp
sbb
mov
gs
lock
xchg
xor
faddl
movsb
in
in
cld
stos
sbb
and
mov
stos
ret
data16
test
mov
sbb
test
data16
test
test
sbb
lds
sbb
mov
sub
cmpsl
and
popa
dec
push
xor
in
mov
sbb
push
out
out
inc
rcl
inc
data16
jae
fadds
xor
out
scas
sub
or
inc
sub
sbb
xchg
test
dec
jne
pop
pop
and
fildll
add
fisubrl
mov
jo
dec
fdivl
lock
push
add
pop
testb
int
inc
out
subb
ret
loopne
xor
sub
adc
adc
add
cmpsl
sbb
ds
lret
add
mov
mov
xchg
mov
lret
data16
jecxz
roll
int3
dec
adc
push
mov
testb
lcall
lea
movsl
pop
mov
in
fsubl
pop
stos
sub
sbbb
loope
jo
popf
xchg
push
repz
mov
or
cmp
dec
addl
and
push
mov
nop
xor
jg
stc
adc
push
pop
test
adc
mov
mov
loop
push
sub
inc
mov
sub
stos
out
adc
inc
je
js
out
cltd
cmp
and
mov
sbb
push
aaa
jno
cmp
bound
in
fs
test
popl
add
shrl
fidivs
mov
push
sub
jg
rorl
mov
movsl
loope
addl
push
lret
js
push
push
fwait
push
and
mov
add
xlat
dec
inc
inc
mov
aad
sub
fcomps
and
jo
pusha
mov
cmpsl
inc
push
mov
mov
pop
lock
loopne
shlb
rcl
and
adc
add
push
cmpsl
inc
push
mov
mov
pop
lock
loopne
shlb
rcl
mov
xchg
jo
loopne
push
cmpsl
inc
push
xor
jae
adcb
add
aaa
rclb
shl
repz
adc
add
push
daa
inc
test
mov
mull
pop
enter
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
stc
jmp
out
xchg
into
cmpsb
in
fadds
pop
jbe
cmp
sub
sbb
or
stc
jmp
out
xchg
test
ret
jns
imul
jae
push
sbb
or
stc
jmp
out
xchg
test
cmpsb
jns
dec
sub
sub
cmp
pop
pop
push
pusha
push
lea
mov
imul
inc
mov
mov
mov
loop
push
es
xor
mov
ds
sub
inc
in
cmpsl
mov
pop
dec
mov
push
movb
in
fstpt
push
insl
gs
push
jl
dec
jo
cltd
cmp
mov
ljmp
into
mov
xchg
push
xchg
mov
in
mov
push
sub
loope
andb
push
insb
cmp
jmp
sbb
add
aam
ret
inc
test
mov
adc
jecxz
ss
xchg
fldenv
or
ds
sub
test
pop
jp
fidivs
or
cmp
jmp
out
xchg
test
cmpsb
jns
imul
push
sub
sbb
or
mov
repnz
or
pop
sub
push
inc
mov
mov
fsub
int3
mov
xor
xor
adc
into
jae
nop
jo
arpl
xchg
jmp
sahf
cld
movsb
test
cmpsb
jns
imul
push
sub
sbb
or
stc
jmp
out
xchg
test
cmpsb
jns
imul
push
sub
sbb
or
stc
mov
inc
cltd
mov
imul
inc
lret
pop
data16
mov
jne
insl
and
mov
sub
in
clc
repnz
sbb
push
cwtl
fld
sub
in
mov
adc
mov
jecxz
insb
outsl
shl
mov
loope
int3
push
repz
jl
pop
push
or
cmp
in
fisubrs
ret
sbb
push
pop
and
imul
insl
dec
into
xchg
out
pop
rolb
sub
xchg
shlb
fwait
mov
mov
call
mov
sarl
jge
gs
cmpsb
add
out
fnstenv
shlb
pop
jnp
cmp
outsl
sub
xchg
lcall
fistpl
addr16
sub
push
adc
mov
std
pop
pop
mov
fldl
sub
lds
sub
insb
or
das
jns
testb
out
jns
xor
push
push
xchg
hlt
mov
out
stc
das
sbb
and
jbe
sbb
data16
insl
add
mov
jae
mov
mov
lea
mov
add
push
xor
sarb
daa
ret
ds
insb
add
sub
js
mov
xor
sbb
mov
iret
mov
mov
mov
je
xchg
pop
push
or
popa
sub
cmp
sbb
xor
adc
sub
cmp
jae
movsl
push
ret
inc
mov
add
and
stc
mov
popf
rcl
in
and
ljmp
repz
sahf
push
stos
xchg
push
and
aas
mov
or
push
xchg
rcl
scas
insb
lcall
inc
fs
add
outsl
adcb
aaa
fidivrs
iret
out
imul
add
lret
lods
xchg
jns
push
sub
or
loope
lret
int
ret
test
jmp
sub
or
lea
and
add
push
pusha
inc
lahf
ss
cmpsl
jne
fbstp
pusha
pop
pop
mov
mov
xlat
mov
pop
enter
mov
cli
gs
test
stos
je
jno
sbb
pop
fildl
imul
and
bound
jl
inc
loop
xchg
sarl
sbb
jmp
in
adc
mov
ror
sbb
into
jecxz
mov
sub
call
lahf
cmp
inc
fwait
jo
sub
mov
lods
addb
hlt
scas
ss
adc
jb
fdivrs
cltd
inc
js
mov
push
test
add
pop
idivb
inc
mov
inc
lgs
push
mov
cld
dec
sbb
std
into
bound
les
mov
jb
fwait
inc
push
clc
loope
lods
inc
iret
fdivr
aaa
outsb
fnstsw
imull
int
add
hlt
notl
aas
sbb
push
jne
and
imul
push
inc
cs
mov
adc
stc
adc
orb
in
ret
mov
push
pop
jle
shrl
shrl
and
mov
jne
mov
scas
bndldx
insb
daa
adc
mov
cwtl
bnd
sub
sbb
cmp
or
sbb
inc
in
push
jmp
sbb
xchg
dec
fwait
or
jne
imul
in
add
ret
les
test
sbb
cmp
insl
push
loopne
sub
xor
in
adc
decb
dec
inc
in
jb
push
mov
repz
jp
pushf
and
pop
inc
js
and
jl
pop
lcall
insl
in
adc
in
xchg
scas
push
movsb
or
clc
aas
mov
or
pop
push
test
mov
std
or
aas
rorb
pushl
popa
cmp
movsb
mov
and
xchg
inc
inc
cs
scas
xchg
aad
jl
or
stos
mov
pop
push
pop
mov
xchg
sti
jbe
mov
out
or
scas
jg
lock
xor
in
sub
mov
xchg
xor
lds
fwait
clc
loope
jnp
mov
in
fisubs
test
inc
push
fdivrl
xor
xor
cld
push
pushf
mov
mov
push
addl
scas
in
ret
sbbb
sub
dec
pop
ja
mov
pop
add
sbb
int3
lock
sarb
jbe
aad
mov
std
xchg
sub
cmp
fisttpll
mov
cltd
mov
adc
sbb
test
in
pop
xor
cmp
mov
gs
iret
dec
hlt
add
adc
fistps
cwtl
dec
fstpt
xor
mov
and
xor
cs
xchg
fsub
ja
aaa
xchg
in
inc
push
xlat
or
lock
or
jp
mov
inc
loope
in
jbe
notl
out
stos
push
mov
or
add
rorb
lods
cmp
call
stos
cld
adc
mov
mov
mov
out
into
mov
pop
pop
adc
mov
jmp
mov
lret
push
les
dec
cs
xorb
out
mov
aam
sbb
fisubrs
imul
stos
out
fbld
jbe
jp
fiaddl
rcr
jl
sub
mov
mov
into
push
mov
inc
xor
push
daa
ja
add
mov
loope
xchg
sbb
and
rcll
mov
push
cmp
mov
sbb
out
fdivrl
push
stos
push
lds
pusha
repnz
mov
in
xchg
xchg
cltd
sbb
dec
mov
pop
call
cltd
movsl
sbb
xor
jo
daa
adc
testl
data16
xchg
test
xor
or
lahf
jecxz
popl
test
xor
pop
xor
sahf
push
push
nop
push
js
push
mov
cmp
mov
cli
pusha
sbb
push
cmp
mov
pop
xchg
fisubl
mov
andb
push
inc
inc
outsb
lret
jle
jbe
jmp
lea
rorl
pop
dec
dec
stc
rcrb
mov
cltd
mov
dec
mov
scas
mov
sub
or
pop
add
lods
lcall
push
fdivrs
lods
add
push
sbb
mov
popa
xor
scas
jle
adc
add
adc
cli
cmpsl
das
push
mov
popf
jg
lcall
mull
addr16
cmpsl
mov
inc
nop
mov
pusha
mov
jl
adc
ss
mov
or
loopne
sub
sbb
sub
mov
cmp
aam
movsb
or
adcl
add
inc
mov
jns
fmulp
iret
pop
jecxz
pop
add
ret
lcall
add
push
fildl
pop
test
test
arpl
es
dec
mov
mov
mov
add
jne
jle
and
ds
jnp
je
add
popf
rcl
inc
mov
sarl
nop
mov
out
mov
fs
mov
xchg
sub
mov
dec
inc
inc
sbb
adc
push
jle
out
add
mov
push
das
fs
pop
mov
sahf
inc
psadbw
ret
lret
xor
ficompl
push
lds
fcmovb
mulb
xchg
test
nop
jmp
or
out
sbb
callw
les
gs
rcrb
out
mov
int
xlat
push
adc
fimull
jle
push
hlt
jnp
test
xchg
scas
in
aad
popa
sub
rol
adc
out
fildll
lret
and
movsb
dec
add
mov
pop
jo
dec
pop
xor
popf
icebp
stos
jp
mov
or
ret
xchg
add
orl
fs
les
cmp
push
popf
push
mov
addl
fs
or
sub
lods
in
mov
xchg
and
int
aas
cltd
in
hlt
fsubr
lea
popa
test
mov
lock
mov
and
or
cmpsl
inc
mov
mov
mov
faddl
sub
aas
test
pop
inc
xor
iret
sub
xorb
push
loop
cmc
scas
mov
stos
imull
xchg
loope
mov
push
jg
out
gs
inc
pop
mov
mov
in
sub
and
inc
add
mov
dec
in
ss
loop
mov
daa
int3
clc
mov
push
pop
in
ror
xchg
jae
jp
in
adc
stos
dec
std
xchg
dec
test
lcall
adc
ja
fadd
cmp
fwait
dec
hlt
sahf
sub
out
xchg
xor
push
sub
jmp
bound
sbb
inc
pop
mov
mov
test
xor
aad
dec
nop
mov
pop
lahf
sbb
dec
dec
mov
or
aaa
sub
ret
pop
jbe
pop
xchg
push
xor
and
or
repnz
pusha
inc
pop
scas
hlt
cmpsl
dec
cmp
mov
push
mov
cmpsl
cmp
xor
sbb
stos
xchg
fnstcw
cs
pop
pop
mov
and
in
sub
mov
pop
inc
pop
mov
xor
out
sbb
lods
sbb
ljmp
pop
loopne
cmp
lods
ja
xor
xchg
inc
push
imul
dec
lcall
roll
and
pushf
movl
mov
jbe
dec
mov
test
mov
cmp
add
ss
mov
mov
mov
ficoml
pop
mov
mov
outsl
lods
gs
dec
lds
mov
cli
int
inc
push
loop
test
das
mov
test
fdivrs
add
cmp
sbb
xor
aaa
out
les
mov
mov
fidivrl
call
push
push
mov
mov
xor
stc
and
xchg
rorl
popa
dec
mov
push
fldt
fadd
into
add
movsl
cli
push
jae
push
add
mov
mov
xor
inc
xor
sbb
in
out
shl
mov
mov
lcall
ds
mov
cltd
inc
push
sahf
fwait
dec
mov
pop
pop
lcall
xchg
in
pushf
popa
sub
adc
mov
in
push
mov
inc
jno
loop
or
mov
and
pop
outsl
push
add
popf
push
mov
daa
sbb
lds
cmp
cs
mov
sbb
lcall
add
jmp
pop
lea
sahf
mov
mov
outsl
xor
and
cmp
jnp
dec
xor
or
stos
out
pop
mov
jmp
mov
ficomps
sti
aam
iret
xchg
add
inc
sub
pop
mov
pop
test
mov
and
jge
iret
push
lods
cmp
mov
sub
sbb
cmp
add
mov
sbb
cmc
adc
add
cli
lea
popf
mov
jnp
rorl
lea
xchg
cmpsb
sti
mov
imull
mov
and
mov
inc
jae
lahf
pop
add
sub
pusha
mov
mov
sub
sub
inc
sbb
jl
sbb
xor
push
pop
dec
mov
aas
aam
test
jecxz
adc
lods
mov
cmp
cmp
xor
adc
insb
cmp
test
jo
mov
scas
jns
sub
cld
push
loopne
inc
sub
mov
dec
andl
pop
mov
cmp
lret
inc
adc
cmc
sbb
mov
xchg
dec
cmp
lock
in
int3
pop
enter
insl
push
pushf
inc
sbb
jp
adc
cs
mov
dec
pop
cmp
imul
ds
cmp
imul
xor
jge
inc
sbb
inc
rorb
popl
dec
push
iret
in
test
mov
loope
movsl
push
pusha
imul
pop
cmpsb
mov
push
lret
in
or
loopne
je
les
es
or
and
in
loope
inc
icebp
std
cltd
jb
pop
jb
pop
bnd
subb
notl
hlt
js
scas
add
mov
jp
sarl
xor
dec
hlt
aam
loopne
push
sbb
cmpsb
sub
mov
pop
daa
or
pop
icebp
mov
mov
comiss
lods
xchg
mov
test
jno
loope
jmp
clc
cwtl
jecxz
addr16
dec
adc
inc
xor
cmc
fadd
dec
test
mov
push
push
shr
adc
jecxz
aaa
subb
xor
cmpsb
and
dec
jmp
jne
iret
pop
js
lds
repnz
shll
and
lret
and
mov
sub
mov
push
jp
mov
shrb
xchg
mov
outsb
jmp
iret
popf
dec
jae
fmuls
ljmp
xchg
push
jnp
popa
xchg
data16
add
int3
push
jl
enter
xchg
mov
mov
xchg
mov
mov
leave
xchg
les
jp
iret
enter
cmp
mov
and
pop
loope
adc
xchg
movsb
dec
arpl
mov
lahf
cs
sbb
inc
jns
icebp
lahf
filds
lds
cltd
push
sbb
xor
sbb
dec
lret
into
jge
addr16
mov
jno
sbb
dec
fnstsw
dec
fstl
aad
std
cmp
popa
lea
jecxz
add
cmp
bound
cmovp
or
inc
or
push
out
mov
dec
leave
pop
mov
pop
bound
cs
dec
xchg
mov
les
scas
or
and
testl
adc
jb
inc
pop
sub
popf
add
aaa
test
addr16
push
pop
outsb
sub
inc
outsb
dec
or
xor
jecxz
lods
mov
loop
mov
inc
and
jae
mov
inc
mov
js
insb
dec
xor
outsb
aam
insb
or
sub
lods
mov
push
and
int
dec
cmpsb
mov
cmpsb
jb
add
or
lods
clc
inc
call
test
jmp
cwtl
sahf
or
dec
adc
mov
rolb
adc
insl
push
xor
adc
ja
cli
cmpsb
xchg
enter
iret
xor
adc
mov
add
inc
dec
fcomps
cmp
push
sbb
xchg
push
cltd
xor
push
je
xchg
psrlw
adc
es
lahf
and
adc
xor
decb
stos
jbe
mov
sbb
push
jl
adc
cmpsl
mov
cli
mov
fisubrs
jmp
cmp
dec
xor
sti
fwait
push
imul
mov
xchg
mov
pop
add
xor
mov
aaa
fxtract
jmp
pushf
pushf
dec
cld
ja
sub
push
sbb
push
loopne
push
insl
ljmp
xor
bound
pop
movsb
fwait
add
mov
adc
sub
dec
mov
ror
mov
movsb
pop
adc
xlat
mov
imull
jecxz
mov
lret
daa
out
push
dec
ds
mov
dec
xchg
mov
dec
xor
sub
das
xlat
fmul
or
push
repz
insl
xchg
ja
adc
add
bound
mov
fadd
out
andl
stc
shlb
adc
cmpsb
dec
jns
or
inc
mov
fs
sahf
pop
jmp
pop
jmp
pop
movsb
loopne
test
xchg
jae
cmp
jmp
push
jge
dec
arpl
addr16
adc
jnp
xor
jmp
mov
xchg
mov
mov
jb
or
int3
fcmovne
aas
sbb
scas
inc
out
or
and
out
jno
mov
or
ljmp
das
fwait
lcall
sub
inc
mov
pop
cltd
lods
punpckldq
and
aas
call
mov
jle
cmpsb
mov
push
mov
or
xchg
jecxz
aam
xor
add
aad
lock
dec
mov
inc
repz
cmp
outsb
les
lods
lods
test
push
inc
shll
popf
adc
inc
push
xchg
in
lock
std
mov
add
cmpsb
sub
sub
cmp
lret
int
or
fstl
jne
ficoms
lods
sti
jmp
sub
jae
dec
fstl
pop
sub
movsb
mov
in
fcmovu
outsl
sub
les
xchg
push
nop
adc
ret
in
adc
push
jns
fisttps
fsts
hlt
xor
cmc
dec
aas
mov
mov
ret
ret
mov
sub
imul
push
mov
and
jp
divb
jae
xor
mov
push
arpl
test
adcl
mov
or
lcall
adc
das
push
sbb
mov
sbb
js
pop
jb
mov
push
int
rclb
pop
push
mov
sub
rep
mov
jg
push
into
punpckhdq
nop
cmp
add
cmp
test
inc
jae
mov
js
jnp
sahf
fsubs
lods
int
ja
pop
mov
inc
jne
pop
sbb
pop
xchg
je
and
xchg
and
mov
adcl
push
aaa
pop
mov
cmpsb
js
loopne
mov
popl
scas
mov
xchg
add
movsb
inc
mov
dec
scas
and
shrb
add
jg
cmpsl
push
out
decl
popa
ret
mov
xchg
adc
sub
xlat
lds
add
mov
mov
dec
int
sahf
loop
stc
mov
out
inc
mov
loop
out
cmpsl
mov
pop
into
xchg
testb
jecxz
add
xchg
push
sti
add
rcrb
cmc
dec
dec
cmp
adc
notl
fcmovb
xor
sti
inc
inc
mov
mov
jns
idiv
loopne
inc
mov
stos
lcall
fidivrs
lahf
xchg
stos
pop
scas
cmp
or
sti
pop
add
mov
xchg
or
sbb
enter
inc
fildl
add
aam
test
jae
adc
scas
mov
repnz
add
enter
insb
cli
xlat
adc
jne
and
xchg
sahf
in
daa
movsb
mov
lcall
jne
sbb
add
imul
std
jbe
std
push
call
pop
push
xor
icebp
and
jo
and
sbb
popf
call
adc
stos
lahf
xor
cmp
add
mov
imul
adc
fnstcw
mov
hlt
nop
lock
test
stc
xchg
pop
imul
lds
adc
mov
dec
mov
fiadds
fmuls
fiadds
sub
mov
dec
and
xchg
fwait
adc
jg
dec
cmp
dec
adc
add
ja
push
adc
xlat
iret
adc
mov
mov
fimull
xor
addl
movsb
xor
test
or
out
cs
cltd
push
lcall
jp
orb
or
adc
cmpsb
lret
rclb
mov
mov
roll
ljmp
mov
and
xor
jge
add
or
mov
jg
int3
out
push
loopne
out
fwait
lret
data16
shlb
and
repz
mov
lods
sbb
fadds
pop
inc
aam
jmp
ret
dec
jne
rcrb
notb
out
test
inc
lret
pop
stos
pop
rcrl
sbb
std
push
adc
mov
dec
jl
mov
loope
sbb
out
pop
inc
cmpsl
mov
loop
sbb
popa
cmp
pop
lods
mov
push
rol
aaa
imul
dec
jno
shlb
clc
daa
pushfw
push
mov
andb
out
mov
push
cmp
aad
movsb
push
jmp
cli
sub
sbb
bound
jecxz
std
shlb
arpl
push
addr16
out
lret
mov
add
push
lcall
ror
fidivs
dec
pop
cld
nop
insl
and
rclb
daa
test
mov
les
cmp
adc
pop
sub
xchg
xchg
es
enter
ret
xchg
fwait
inc
xchg
out
test
iret
lret
cmp
mov
push
adc
pop
xchg
add
cmc
jmp
sbb
pop
fistpll
cmp
sub
mov
in
in
imul
repnz
imul
mov
push
outsb
std
imul
mov
insl
movsb
or
xlat
test
xchg
cmpsb
push
sti
pop
aad
xchg
push
jb
add
fld
ret
popf
test
aad
xchg
and
leave
dec
inc
xlat
dec
inc
inc
jecxz
pop
repnz
sti
nop
xchg
jns
and
dec
add
sub
jb
outsb
push
fcmovbe
cmpb
push
sarb
mov
stos
les
rcrl
shlb
fdivs
mov
mov
pop
cmp
rcrl
movsl
loope
pop
dec
mov
and
xor
in
repnz
out
leave
out
xchg
test
cmpsb
jns
imul
push
sub
sbb
or
stc
jmp
out
xchg
test
cmpsb
jns
imul
push
sub
sbb
or
stc
jmp
out
xchg
test
cltd
mov
cmpsb
js
imul
push
sub
sbb
or
stc
jmp
out
xchg
test
data16
in
repz
adc
mov
fstps
mul
data16
pop
jmp
cmpsb
add
inc
jo
pusha
adc
add
and
fcom
rol
mul
out
xchg
orb
mov
rolb
push
inc
pop
jbe
data16
push
xor
or
jbe
es
stos
enter
pop
mov
push
sub
adc
inc
inc
push
es
loopne
mov
xchg
mov
mov
mov
cld
jg
jmp
lret
ljmp
fcompl
xlat
enter
rclb
in
jae
push
push
mov
pop
xchg
lds
xlat
rol
lock
pusha
enter
mov
adc
mov
jmp
lea
ret
idivb
xchg
push
mov
pop
xchg
xchg
jg
mov
mov
push
pusha
inc
lahf
lcall
fbstp
ret
cmp
arpl
add
hlt
mov
adc
mov
data16
add
pusha
daa
push
fsts
sarb
inc
fcompl
negb
test
mov
jle
pop
add
jne
xor
lock
in
nop
xchg
les
mov
data16
jo
push
xor
inc
dec
mov
mov
enter
jmp
xor
add
and
add
jns
outsb
jb
ja
inc
rclb
sub
stc
stc
loope
ror
push
adc
arpl
dec
inc
push
popa
dec
mov
cmpsb
mov
xchg
push
inc
inc
jo
pusha
data16
add
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
data16
add
xor
and
rcl
add
pop
push
mov
movsl
shr
in
adc
mov
push
pop
mov
jbe
mov
mov
test
add
roll
mov
sub
pop
data16
and
addr16
adc
outsl
push
std
int
stos
aam
ja
mov
add
mov
sti
jne
into
sub
adc
negl
xor
je
xchg
adc
loop
icebp
fiadds
js
xchg
dec
mov
push
hlt
in
int3
fildl
negl
lahf
cmc
ss
es
push
in
incb
jmp
add
out
inc
jl
inc
xchg
mov
xorl
faddl
cmp
lret
mov
test
sub
xor
mov
or
imul
xchg
test
cmpsb
push
cmp
inc
add
jbe
in
xor
cld
idiv
cmpsl
lcall
xlat
mov
and
insb
cmp
pop
shl
call
xlat
rolb
mov
or
lock
jl
add
and
clc
sahf
add
pop
mov
fisttpl
dec
inc
ss
dec
fldcw
add
xchg
mov
addr16
push
test
repnz
xor
inc
mov
fwait
or
lcall
test
xchg
inc
jno
xchg
pop
mov
cmp
mov
pop
inc
int
jno
sub
mov
xchg
cmp
mov
out
insl
roll
sahf
fcmovnb
int3
aas
daa
mov
inc
pop
ja
add
pop
mov
jb
sbb
int3
sbb
int
mov
mov
ljmp
inc
bound
movsl
lret
xchg
call
mov
scas
aas
in
sbb
lea
movl
mov
daa
jns
adc
inc
mov
xchg
cmc
loope
call
pusha
stos
pop
subb
mov
fwait
and
mov
rcl
in
xchg
push
pop
aas
mov
mov
bound
jmp
push
lock
arpl
and
fldcw
xor
pop
mov
ret
mov
jmp
push
push
inc
or
mov
push
cmc
addr16
lock
pop
cmc
arpl
imull
xchg
inc
dec
loopne
pop
xchg
and
and
shlb
out
sub
ret
inc
jnp
mov
push
sti
scas
test
movsb
xchg
push
test
leave
push
ret
ds
mov
cld
stos
ds
inc
xchg
cmp
lock
inc
dec
add
fcoml
into
add
xor
cli
orb
mov
sahf
lock
mov
mov
inc
mov
lret
jbe
shr
daa
xchg
adc
xor
ret
jo
fs
cmp
cmp
sahf
push
mov
fwait
adc
jp
mov
lret
sub
dec
add
movsl
and
xchg
and
sub
popa
mov
gs
ret
xchg
repz
adc
mov
shll
pusha
ss
sub
jae
pop
les
and
daa
mov
lcall
add
ss
int
cmp
and
cltd
add
or
icebp
popf
mov
test
jo
clc
mov
iret
jp
sbb
fs
dec
call
scas
rclb
fwait
arpl
stos
sub
aad
inc
xchg
cltd
mov
push
ljmp
adc
cld
and
fcomps
adc
imul
xchg
jmp
mov
or
hlt
pop
or
repnz
in
xor
mov
jbe
jbe
push
sbb
mov
in
loop
pop
dec
pop
mov
push
adc
je
bound
add
aad
mov
jecxz
lods
and
mov
out
jb
xchg
push
inc
imul
in
ret
repnz
lods
cmc
dec
or
fistps
repz
insl
mov
cmp
pop
dec
cmpb
mov
jne
push
dec
mov
xchg
mov
cld
lcall
dec
fldt
adc
cwtl
leave
and
mov
mov
mov
loopne
cmp
pop
lock
fdivl
mov
inc
cmp
cmpsb
jae
cmp
std
add
orb
enter
rep
fs
mov
xchg
inc
outsl
pop
sbb
orl
in
and
push
or
xchg
cltd
sbb
int
sub
clc
out
cmpsb
mov
mov
cld
inc
pop
iret
sub
xchg
pushw
xor
data16
and
mov
call
xor
out
mov
rorl
push
jl
inc
sub
ret
sbb
jle
xchg
pop
incb
movsb
rcll
xchg
dec
mov
enter
jae
je
xor
ret
out
lds
xor
frstor
fistpll
or
mov
xchg
popf
mov
sahf
inc
scas
ljmp
loope
dec
and
cs
jnp
lret
mov
xchg
cwtl
insl
mov
int
nop
aad
mov
and
sub
fwait
cmp
daa
mov
cmp
dec
xchg
pusha
xchg
outsb
mov
aas
jbe
pop
loopne
cmpsl
je
rcrl
outsb
ljmp
out
xor
test
mov
adc
jae
subb
out
mov
fistps
das
jne
fisubs
nop
cmp
add
cmp
and
jb
pop
js
js
in
scas
adc
popf
pop
popf
fsubs
je
outsl
dec
sbb
and
lret
lret
in
in
icebp
fsubrl
lcall
test
movsl
dec
cmp
ja
shrb
jno
mov
mov
mov
jnp
push
sub
xor
xchg
mov
dec
out
push
shll
fisubrl
rclb
outsl
push
cmp
imul
push
mov
ljmp
sbb
cmp
mov
and
insb
mov
je
adc
sti
loop
aad
daa
je
lods
in
jmp
lods
sbb
loopne
outsb
cwtl
ret
les
lcall
push
leave
int3
adc
mov
mov
movl
mov
mov
les
mov
sbb
mov
cmc
pop
lods
scas
mov
mov
shll
daa
add
rclb
loope
cmc
repnz
lds
fdivl
cmp
sarl
adc
add
push
pop
push
sbb
inc
addr16
fdivs
push
dec
pop
cmp
push
and
aaa
out
cmp
out
les
mov
jno
movb
in
stc
fidivrs
sbb
fdiv
inc
cwtl
pop
popf
lods
pop
mov
aaa
rclb
mov
subb
les
in
popa
jl
xor
aad
or
push
test
push
nop
xor
sbb
jo
sub
pop
mov
pushf
in
or
jg
lods
inc
ficompl
dec
loop
stos
adcb
xor
idivb
cmpb
fadd
js
sbb
jle
mov
loop
into
cmp
fcompl
out
mov
lock
jae
mull
sahf
push
mov
or
icebp
and
in
xchg
cltd
loopne
xor
sub
push
or
lret
scas
mov
xchg
fwait
xchg
outsl
shlb
sbb
shl
jmp
rclb
dec
xor
adcb
or
fldenv
aas
test
add
or
leave
inc
cwtl
sub
sahf
call
psubusw
flds
mov
push
aad
call
mov
mov
cmp
in
mov
je
aas
lock
std
jge
xlat
ficompl
or
rolb
ljmp
ja
xchg
inc
cmp
fcoms
popf
mov
push
pop
scas
mov
pushf
mov
pop
cmp
in
push
adc
cld
sub
arpl
pop
repz
shlb
imul
dec
lods
imull
mov
add
loope
rol
cwtl
fidivs
lods
mov
rol
ja
adc
xor
movsl
movsl
sbb
pushf
mov
cmp
sub
stos
icebp
rorb
mov
leave
cmp
inc
mov
and
xchg
jns
dec
in
outsl
lcall
or
xchg
test
push
push
data16
push
jle
mov
in
loope
lea
push
add
loop
xor
jo
ds
div
sub
lret
out
or
push
int3
sub
add
xor
adc
or
pop
and
xor
mov
out
shlb
cmpsl
icebp
pop
jns
rcr
mov
push
jmp
pop
inc
and
jnp
jnp
mov
push
xchg
fildll
xchg
inc
jge
ljmp
dec
xchg
mov
and
mov
ret
das
xchg
std
into
mov
jecxz
ljmp
addr16
imul
scas
fs
or
sbb
mov
fwait
mov
aaa
sahf
stos
out
mov
push
or
mov
outsb
das
ret
mov
mov
imul
pop
mov
pop
push
sub
int3
int3
push
loope
xchg
popf
dec
or
jno
jae
es
push
cltd
fimuls
xor
xchg
lret
sbb
xor
adc
mov
cmp
xor
pop
mov
faddl
test
lods
mov
popf
call
rcll
sbb
pusha
sub
arpl
in
fwait
inc
mov
sub
lret
lods
push
inc
int
or
mov
mov
adc
movsl
loopne
jae
imul
or
aam
fimuls
lea
sbb
pop
test
and
lods
cltd
dec
loope
and
cmpsb
aas
sbb
data16
aam
push
inc
jbe
iret
rcr
aam
leave
lahf
aas
adc
jg
arpl
lahf
sti
mov
xchg
not
popa
rcrl
mov
rcr
enter
mulb
data16
adc
xchg
enter
mov
push
jge
loope
push
jp
ljmp
lds
pop
les
push
xor
mov
xchg
xchg
int3
xchg
in
sbb
cmpsl
cmp
push
mov
outsl
pushf
push
dec
or
clc
inc
sbb
mov
stos
pusha
sbb
mov
gs
daa
sbbl
mov
add
jp
xor
lods
pop
mov
xor
dec
xchg
mov
out
or
xchg
mov
cld
pop
cmc
arpl
jb
jne
rorl
sbb
mov
xchg
test
inc
sbb
lret
sbb
shll
cmpsb
add
insb
lret
inc
jge
xor
idiv
cmp
jp
addr16
outsl
mov
and
add
into
or
xchg
punpckhdq
pusha
xor
inc
ljmp
cmp
sub
sahf
cld
xchg
flds
imul
add
add
inc
xchg
inc
xor
mov
add
adc
insl
jl
mov
adc
jge
push
cmp
in
and
les
sub
int3
mov
shll
fstps
mov
dec
in
pop
or
add
mov
add
mov
int
icebp
js
scas
xor
es
push
and
and
add
xchg
sub
out
inc
stos
xchg
mov
add
mov
mov
sub
and
push
xor
or
ret
xchg
mov
mov
sbb
push
pop
inc
xchg
pop
mov
mov
push
and
push
loopne
xor
cmp
inc
out
movsb
enter
scas
pusha
pop
inc
mov
stos
movsb
rcrl
mov
rorl
push
jmp
int
mov
cld
out
mov
inc
xor
cmpsb
arpl
shlb
bound
inc
mov
xchg
mov
movsb
inc
xchg
ficomps
negb
loop
sbb
arpl
cmpsb
notl
push
sbb
cmp
mov
mov
push
lods
mov
or
ljmp
outsb
dec
iret
outsl
gs
mov
icebp
scas
mov
push
mov
sub
into
into
mov
sub
push
jp
rolb
jnp
sbb
xchg
lret
fsubr
pop
stos
fisubs
mov
xor
lock
enter
push
cmpsl
inc
ret
loopne
addr16
mov
dec
jecxz
inc
pop
in
or
sti
repz
xchg
test
loop
loope
add
repnz
mov
rcrb
sbb
fldlg2
xchg
repz
ds
test
jns
insb
ss
add
adc
or
cld
outsl
shll
mov
push
sbb
ficomps
dec
push
lock
repz
add
pop
aad
minps
pop
sahf
nop
in
pop
imul
popa
sub
xor
fcompl
ljmp
push
outsb
xor
das
mov
fistpll
sti
pop
loopne
mov
mov
cmpsb
bound
aas
arpl
or
add
xchg
xor
mov
sub
scas
mov
push
aaa
pop
loop
pop
ret
jae
mov
pop
inc
cltd
movsl
and
gs
xchg
mov
jmp
call
call
adc
int3
mov
sbb
aad
xor
push
int3
and
xor
pop
icebp
jae
push
jb
sub
jmp
popa
insl
push
pop
mov
or
shll
test
mov
push
out
test
xchg
push
mov
or
xlat
mov
xlat
repz
cmp
add
cwtl
mov
mov
dec
lock
cmc
dec
pop
repnz
mov
jbe
xor
or
aaa
or
xchg
push
pop
adc
addr16
mov
jb
mov
fwait
jle
add
ljmp
jmp
rorb
int
push
pushf
jge
pop
cmpsl
add
mov
fisttpl
pop
fildl
ljmp
xchg
movsl
popf
add
jnp
stos
dec
mov
negl
xor
mov
push
pop
repz
jb
in
mov
dec
pop
cmp
cmp
nop
pop
cmc
aas
ja
dec
pop
jg
mov
in
lahf
das
push
push
clc
adc
in
mov
popa
enter
out
ficompl
jno
dec
enter
divl
jbe
pusha
or
xchg
subl
cmp
lret
fisubrl
insl
inc
es
imul
imul
insb
jp
hlt
std
je
inc
pop
fwait
adcb
out
jno
xchg
movsb
add
addr16
mov
xorb
or
mov
mov
add
sbb
add
mov
stos
inc
jge
hlt
inc
pop
pop
xchg
add
mov
dec
push
pop
adc
imul
jge
mov
lcall
mov
clc
jne
lds
cld
xlat
loopne
adc
jg
arpl
mov
jns
out
adc
js
mov
jge
pop
out
cmp
filds
dec
cmp
xor
js
fidivrs
adc
jo
repz
add
sub
es
mov
and
mov
pop
imul
lret
enter
packssdw
sub
jp
scas
test
inc
jbe
cwtl
or
insl
mov
shl
cmpsb
inc
test
arpl
mov
add
sbb
ss
adc
movsb
jge
inc
test
cmpsb
aad
lock
and
mov
cmp
push
arpl
mov
add
fcoml
jp
push
push
cld
add
mov
icebp
mov
adcl
movsb
or
sbb
lcall
jnp
sub
loopne
test
adc
mov
ljmp
lock
push
cmp
into
out
mov
cld
outsb
inc
fidivs
je
addr16
dec
push
addr16
ja
dec
push
and
sub
fldlg2
fs
je
les
fcom
mov
rcrl
stc
test
scas
mov
mov
ja
xlat
sub
push
xchg
sub
fsubrs
xchg
cmpsb
jecxz
out
or
adc
and
rcll
ja
push
mov
cmpsl
jp
shrb
in
xchg
movsl
leave
sbb
loop
test
clc
xchg
add
mov
adc
push
out
mov
xor
xor
stos
dec
mov
push
add
xor
fisubrs
out
mov
nop
jo
jmp
jl
dec
jb
or
pusha
add
lea
or
xlat
xchg
cltd
lret
mov
data16
bound
xor
test
aad
lock
sbb
aas
push
out
add
add
cmp
xchg
filds
adc
sub
sbb
mov
jmp
xor
test
mov
fdivrs
jo
imul
lods
and
in
cmpsb
dec
adc
push
adc
test
fs
je
js
orl
or
and
xchg
test
jo
subb
mov
adc
jbe
imul
xor
xchg
xor
stc
pop
jmp
sub
mov
cmp
push
stos
inc
cmpsb
das
mov
insb
add
les
scas
sub
xchg
test
test
xchg
jnp
sub
faddp
clc
adc
lret
mov
push
sbb
movsb
dec
addr16
repnz
fldenv
enter
aam
notl
mov
cmp
adc
js
aaa
mov
pop
mov
jge
lods
cmpsl
lea
add
push
sahf
daa
lock
rolb
aaa
sbb
push
jmp
cmp
sub
retw
mull
int3
jge
ljmp
pop
icebp
mov
push
pushf
inc
fs
mov
dec
movsb
addr16
push
push
or
add
and
scas
and
adc
sahf
jo
cwtl
fistps
and
mov
xor
xor
pusha
xor
adc
cs
mov
push
fdivrs
popf
repz
aam
mov
in
push
pusha
cltd
push
dec
pop
push
stos
inc
mov
dec
outsb
sub
stos
xor
mov
mov
std
arpl
stos
cmpsl
mov
cmc
push
fcomip
and
outsb
in
js
mov
mov
outsb
dec
xlat
push
adc
push
icebp
hlt
mov
outsl
lahf
add
mov
aaa
xor
sub
lods
sbb
jo
mov
into
push
rcl
xchg
fmulp
sbb
sbb
jmp
cltd
push
push
jmp
push
mov
dec
adc
cmp
pop
lahf
mov
cmp
and
and
dec
add
add
adc
stc
stc
insl
sbb
push
and
mov
jge
addr16
mov
adc
cli
pop
jle
in
or
push
ja
jo
loopne
add
popf
add
outsl
and
scas
test
mov
leave
xor
mov
es
push
mov
fnstcw
outsl
addb
adc
inc
pusha
xor
subb
add
adc
mov
mov
adc
mov
jl
lds
mov
adc
pop
cltd
mov
mov
mov
int
into
lods
fidivs
insb
sub
addr16
push
mov
ret
push
fidivrl
sbb
or
add
lret
mov
adc
mov
insl
jge
xchg
sbb
inc
ja
push
jae
xchg
iret
in
mov
lcall
lahf
or
jae
adc
mov
and
and
test
adc
ss
mov
ret
mov
loop
mov
aaa
xchg
pop
sbb
and
js
outsl
adc
dec
dec
movsb
pusha
aas
fwait
xchg
in
inc
cmp
xor
and
bound
jle
arpl
repnz
lcall
test
out
push
jno
xor
js
fs
out
adc
in
dec
jge
push
adc
mov
pop
int3
sti
pushf
stos
decb
out
cmp
in
lret
mov
jecxz
mov
cmp
push
pushf
les
dec
push
pusha
push
sub
lahf
jp
mov
out
or
loope
loopne
mov
es
cmpsl
nop
push
sub
sbb
addr16
lcall
ret
xchg
call
sub
mov
mov
scas
jae
add
ret
mov
pop
xor
rcr
push
dec
test
mov
sub
movsl
cmp
cld
or
ljmp
add
xor
push
pop
ds
mov
sub
xor
mov
fidivl
sbb
fbstp
daa
ljmp
das
mov
cmp
rcrl
and
xor
mov
leave
mov
cltd
out
sub
je
sbb
in
movl
mov
mov
push
mov
mov
xor
andb
int
shl
xor
clc
push
push
setge
mov
stc
xor
mov
dec
xchg
cmpsl
dec
mov
imul
sub
mov
dec
movl
adc
sub
pop
mov
xchg
lock
data16
mov
push
cmove
fldt
sub
fcoml
out
dec
cmp
cwtl
mov
out
xchg
addb
push
inc
inc
jo
pusha
data16
add
xor
and
rcl
rol
mul
out
xchg
addb
push
inc
inc
jo
pusha
data16
add
xor
and
rcl
ret
mov
mov
out
xchg
test
mov
mov
inc
jns
data16
sbb
xor
adc
enter
js
enter
nop
xchg
test
pusha
adc
mov
iret
leave
frstor
jno
inc
out
push
sahf
insl
cld
push
sahf
and
icebp
jle
outsb
rcrl
mov
ds
mov
inc
out
push
sahf
and
imul
outsb
rcrl
push
mov
subl
jno
inc
ss
andb
xor
loope
rclb
mov
mov
cmc
jl
push
jb
mov
cmpb
sub
xor
mov
test
or
test
cmp
sub
xor
xor
jle
imul
and
mov
or
sbb
aam
mov
mov
rol
and
jl
sub
push
push
sub
mov
repnz
inc
or
outsb
orl
add
sub
and
push
sbb
push
popa
orb
pop
push
dec
push
cli
inc
nop
xor
mov
cs
and
jae
bound
and
mov
pop
repnz
mov
andl
cld
call
adc
addr16
inc
or
mov
xchg
mov
sub
jno
inc
out
push
jp
divb
mov
loope
icebp
or
pop
rcll
add
or
cs
mov
mov
push
icebp
inc
loopne
lret
inc
pop
cwtl
sbb
movsl
insb
loop
aam
clc
dec
fists
and
push
testl
jne
stos
sbb
jle
push
mov
iret
popa
mov
xlat
outsl
mov
mov
xor
jle
adc
dec
icebp
jle
outsb
rcrl
mov
cs
fisubs
jno
inc
out
push
sahf
and
adc
dec
icebp
jle
outsb
rcrl
mov
cs
fisubs
sbb
cs
push
push
data16
mov
aaa
or
mov
jg
xor
cmp
push
sbb
in
jne
push
leave
lret
jge
jecxz
call
or
into
cmp
test
jns
cmp
sbb
hlt
mov
jl
rclb
xchg
loopne
sub
and
inc
les
mov
cmpl
push
cld
mov
pop
xchg
mov
mov
xor
or
shll
outsl
fdivrs
xchg
cmpsl
or
das
xchg
aam
add
call
cs
push
add
xchg
pusha
jl
notl
mov
pop
iret
aad
cli
mov
push
xchg
popa
add
ss
push
dec
jo
popw
jge
jae
jp
or
clc
and
sahf
in
xor
mov
mov
std
xor
int3
outsl
data16
out
lret
mov
fidivl
and
sbb
jno
nop
cmp
or
sbb
div
stc
mov
mov
sbb
frstor
mov
mov
pop
in
pop
jne
xchg
pop
and
inc
shr
jo
scas
pusha
pop
mov
mov
jnp
mov
sbb
jne
or
fdivs
ja
pop
dec
sarl
outsl
mov
fsubl
movsl
imul
in
retw
jno
cmp
xchg
jp
ret
sub
xchg
sbb
ss
bound
jp
pop
lret
mov
inc
lds
fwait
es
add
arpl
cwtl
jp
or
mov
test
mov
popf
mov
mov
pop
sub
sahf
sbb
mov
jp
pop
add
inc
notb
adc
movsl
mov
int
push
add
shrl
mov
bound
sahf
xor
aaa
and
fstl
mov
dec
jp
adc
push
pop
dec
cs
mov
test
iret
hlt
stos
dec
add
pop
cld
mov
fldcw
fmul
dec
xor
popf
sbb
repz
aaa
lahf
icebp
dec
pop
stos
fbstp
jbe
fisttps
mov
sbb
insb
sub
and
pusha
ret
mov
hlt
jl
mov
scas
push
psrad
fs
add
push
jmp
cmp
jb
test
push
lret
out
loope
ret
ja
and
mov
dec
es
pop
adc
dec
pushf
pop
shlb
mov
outsb
xor
es
sbb
xor
divb
std
sbbb
call
insb
mov
jmp
imul
sub
and
in
bound
lea
mov
xchg
xchg
or
fnstsw
sbb
cmp
dec
xchg
test
outsb
lret
push
push
xchg
int3
aaa
xchg
sti
cwtl
mov
push
cmpsb
push
cmp
mov
jnp
rcrb
adc
mov
movsb
outsl
cmpl
test
inc
call
out
sahf
xor
and
add
into
jle
aaa
ffreep
inc
std
xchg
jae
sbb
data16
fisttps
jg
and
addr16
xchg
cmc
xchg
dec
dec
dec
hlt
inc
push
popa
ficomps
mov
and
inc
ret
out
cltd
pop
sub
cmpsl
cmp
fucomi
int
js
sti
ja
xchg
aas
pop
add
jg
add
push
adc
xor
inc
xchg
sbbb
adc
cld
orb
shll
data16
cmp
xor
mov
movb
inc
mov
add
leave
rcrb
adc
sub
addr16
mov
jo
xchg
mov
popf
lahf
xchg
jnp
lcall
inc
daa
xchg
or
mov
lea
inc
inc
mov
mov
push
aas
sbb
mov
fisubs
lcall
data16
aam
pushl
inc
ret
ja
test
fsubrl
mov
jl
psubsb
sbb
scas
or
sti
mov
std
pop
inc
sbb
flds
arpl
mov
sub
jne
mov
test
in
jmp
je
pop
jne
std
loop
xchg
stos
add
out
add
call
jp
inc
out
insl
push
push
cltd
sbb
jae
dec
enter
hlt
mov
pop
popa
mov
movsb
stos
iret
loopew
pusha
dec
lods
mov
repz
idivl
jno
test
xor
pop
pop
sbb
ds
inc
xchg
in
dec
xor
dec
loopne
xchg
lds
repz
sahf
xchg
arpl
subl
popa
daa
mov
or
mov
sub
jbe
insb
lcall
lds
or
or
inc
fildl
imulb
add
dec
add
out
add
stc
dec
adcb
jno
pop
std
repnz
mov
cmp
push
xchg
rolb
mov
xor
lods
xchg
sub
aad
adc
jecxz
adc
cmp
aaa
dec
sub
sbb
fimull
sbb
xor
popf
push
and
or
test
mov
daa
ret
rcrb
push
add
or
jno
and
ficoml
push
push
sub
ds
rol
out
iret
fisubrl
lahf
rolb
insl
adc
daa
jo
ljmp
push
push
stos
iret
in
mov
adc
outsl
mov
lcall
dec
add
mov
inc
inc
push
mov
xor
insl
xchg
jge
or
jns
xchg
pushf
idiv
cs
std
mov
xor
mov
jae
in
push
lret
or
inc
test
mov
out
loop
jnp
clc
xor
push
mov
xchg
mov
jns
sahf
mov
push
ret
fnstsw
xor
cld
jmp
adc
aad
fld1
pop
addr16
rclb
call
mov
sub
addb
es
fldenv
push
mov
and
pop
flds
mov
aas
xorb
mov
xor
test
pusha
das
aaa
jge
cmp
xchg
push
mov
cmp
test
or
sub
loopne
xchg
push
inc
mov
xchg
pop
popf
push
jns
dec
insl
mov
and
orb
neg
fs
sbb
dec
and
push
jl
ljmp
pop
jl
imul
push
shr
fsubr
mov
fstl
add
cld
shll
call
add
lea
ljmp
mov
mov
xchg
inc
cmp
mov
adc
out
lcall
push
mov
xor
sarb
push
daa
cmova
inc
sub
fisubrl
adc
push
sub
mov
test
sub
mov
push
and
inc
or
push
enter
dec
xchg
inc
sbb
in
testl
in
and
fwait
mov
cmpl
mov
or
sahf
jecxz
add
stos
aaa
into
jb
adcl
or
pop
in
sub
sbb
lahf
decl
jbe
addr16
nop
adc
inc
cmp
jno
jbe
pop
cmpsl
outsl
call
sbb
mov
enter
push
pop
xchg
loopne
pop
xchg
pop
push
adc
outsl
test
pop
push
sarb
aad
ret
lret
push
add
data16
cli
lods
cmpsl
hlt
pop
popaw
iret
nop
xlat
mov
cltd
icebp
adc
mov
mov
xchg
and
das
insb
xchg
jo
mov
js
xor
test
das
std
enter
clc
adc
inc
testb
out
lods
test
stos
mov
cmp
push
cmpsl
std
fisubs
int3
xor
aaa
pop
xchg
mov
push
push
push
fwait
sub
jle
mov
fstl
sbb
xchg
sub
push
insb
movsl
mov
adc
outsb
loope
jle
mov
push
mov
and
mov
test
xor
sbb
jnp
loop
jmp
cs
addr16
clc
pmaddwd
je
scas
sub
jbe
clc
shlb
leave
xor
adc
rcrb
setle
roll
lods
data16
loopne
adc
cmc
mov
popf
mov
dec
jle
js
out
fcoml
sbb
mov
xor
lret
outsb
lods
or
sbb
push
insb
es
push
add
mov
decb
cmp
mov
mov
xor
mov
mov
rcll
enter
cltd
loope
mov
mov
mov
aas
mov
mov
jbe
xchg
scas
mov
fsts
xchg
dec
test
ds
and
arpl
mov
sbb
inc
push
out
push
jo
pop
mov
fstp
hlt
xor
push
push
ja
adc
sti
mov
sub
fildl
pop
insl
loope
xchg
stc
pusha
adc
add
cltd
cmp
xor
push
and
clc
add
inc
test
bound
rorl
in
push
sbb
mov
ror
sub
inc
and
fucomip
mov
add
add
popf
cmp
push
icebp
out
jae
mov
fstl
jge
push
sbb
int3
cli
add
out
les
pop
fildll
push
sub
xchg
ds
add
test
popa
jle
pusha
and
arpl
fbstp
adc
adc
add
push
inc
js
cli
lahf
pop
insl
add
mov
loope
adc
mov
orl
ss
pop
out
cltd
lahf
adc
add
fwait
cs
sub
pop
mov
adc
lahf
adc
les
or
fs
cmpsl
adc
scas
jae
jecxz
push
out
add
mov
aad
sbb
sarb
mov
mov
pop
pusha
sbb
xor
imul
out
xor
mov
out
lcall
jge
gs
gs
dec
and
or
dec
xor
das
jo
aas
mov
pop
out
imul
fwait
xchg
in
mov
add
jl
xchg
sbb
aam
insb
jl
loopne
lock
in
jne
jo
aas
mov
lds
push
xchg
push
xchg
xchg
xor
push
in
imul
xchg
xchg
mov
out
jg
adc
jae
scas
mov
jmp
addl
xchg
lock
xor
inc
pop
leave
movsl
in
push
jl
fmull
mov
mov
lret
fwait
inc
adc
int3
leave
dec
mov
pop
sbb
add
cmp
jo
fwait
jo
fcmovnbe
hlt
loopne
mov
xchg
hlt
std
or
push
ljmp
and
repz
lock
dec
push
stos
aaa
lcall
pushf
cmp
js
push
aaa
xchg
loopne
in
jge
cmp
pop
push
mov
dec
clc
mov
add
jbe
loopne
dec
jno
inc
jmp
dec
mov
fsubs
ret
sub
cltd
test
outsl
lret
add
adc
jno
mov
in
scas
push
sub
cs
loope
inc
fildl
and
cmp
out
enter
inc
add
dec
gs
popf
inc
movsb
gs
pushf
pop
ljmp
xor
pusha
push
add
lods
cmp
aam
jno
push
xlat
lret
rcr
sbb
arpl
mov
mov
pop
lcall
lods
aam
push
sub
and
jno
shrl
push
inc
and
lods
sbb
xor
push
mov
jo
adc
pop
incl
mov
push
cmp
xchg
rorb
int
mov
and
icebp
mov
mov
out
sbb
mov
inc
andl
or
iret
adc
sub
sarl
mov
stos
push
aam
sahf
inc
lret
pop
and
mov
jns
mov
stos
aad
push
sub
jl
loope
jnp
add
gs
inc
mov
test
mov
orl
mov
sbb
mov
dec
je
popf
and
js
daa
pop
jmp
pop
jp
lahf
dec
or
pop
pop
cmp
movsl
iret
xchg
mov
imulb
sub
or
scas
cmpsl
mov
mov
sbb
leave
enter
fucomi
push
rorb
icebp
inc
sti
mov
xchg
mov
xor
gs
inc
jae
loop
add
jno
xchg
dec
addr16
clc
push
cmp
mov
sbb
bound
test
sti
push
pop
ja
dec
pusha
in
mov
add
inc
cmpsl
inc
test
repnz
iret
shlb
dec
mov
je
sbb
repz
cli
aas
adc
pop
cmp
aam
mov
in
roll
and
inc
mov
les
clc
xchg
sarb
stc
dec
lods
leave
adc
ljmp
outsl
ret
rcrl
mov
aaa
aam
pop
jnp
sbb
mov
push
loope
inc
lcall
pusha
sub
fiaddl
mov
loope
dec
inc
sub
loopne
icebp
push
aas
sbb
or
dec
divb
push
jb
fcomip
adc
aaa
cmp
mov
add
xor
icebp
lds
push
cld
xchg
lods
data16
popa
movsb
lods
aad
test
into
xor
add
mov
jae
ds
inc
sbb
adc
inc
je
lea
add
in
clc
xor
push
lret
xchg
sub
loope
xchg
push
mov
pusha
repnz
add
or
mov
and
pushf
jb
sbb
or
enter
jmp
stc
cmpsl
mov
clc
fidivl
imul
sbb
mov
mov
jbe
mov
mov
loopne
scas
outsl
add
lods
jns
das
push
xchg
cmpsl
xor
hlt
int3
cmp
cwtl
test
jb
jmp
and
fmuls
pop
xor
in
cmp
mov
std
pusha
sbb
dec
lock
cmpl
mov
icebp
movsb
enter
pop
push
bound
repnz
daa
pop
cli
rol
pop
xchg
mov
adc
mov
lea
sarl
les
in
daa
test
cmpsl
mov
out
mov
xchg
cmp
adc
rorb
andb
dec
mov
push
enter
xchg
xor
lret
popa
jecxz
jmp
dec
mov
sti
mov
cs
inc
and
fsubr
popa
in
aam
pushf
gs
pop
xor
lret
sbb
sub
sbb
jmp
vmovdqu
mov
push
mov
lret
pop
mov
push
add
adcb
dec
lret
lds
jge
pop
in
mov
cmp
mov
and
sbb
mov
shll
shll
mov
mov
sub
leave
lret
lret
pop
roll
xchg
cmp
pop
orb
imul
scas
out
loope
imul
in
mov
stos
outsl
test
inc
roll
push
and
in
stc
jecxz
pushf
xor
sbb
fmull
push
push
mov
enter
dec
push
xchg
pop
fstl
sbb
rol
push
push
clc
subl
push
xor
jmp
mov
and
vmwrite
inc
outsb
lds
cmpsl
pop
int
sub
add
lock
jnp
push
call
dec
jecxz
fstpt
jmp
mov
das
adc
jecxz
pop
lret
scas
fwait
inc
add
inc
out
cs
pop
jb
mov
lds
shl
push
mov
pushf
in
ljmp
in
push
and
fcomps
sub
dec
movsb
in
hlt
xchg
dec
out
sti
int3
into
loope
cltd
movsl
fxtract
pop
push
push
aaa
test
inc
push
dec
sub
cmpsl
xchg
cmpb
cmp
outsb
adc
fldcw
aas
clc
pop
mov
mov
jl
and
fisttpll
mov
outsb
test
roll
lock
sbb
xchg
xchg
sub
cmp
cld
fcoml
or
movsl
fs
lods
add
pop
inc
pop
mov
call
push
mov
test
jecxz
xchg
push
add
arpl
xchg
xchg
fisubl
mov
stos
add
in
fdivrl
cld
pop
sbb
push
insb
arpl
cmpl
insb
nop
adc
xlat
lods
subb
sbb
dec
adc
pop
clc
xchg
cmpl
or
out
jp
fisubl
add
and
ret
hlt
adc
sub
leave
das
into
iret
mov
repnz
in
mov
out
fcmovbe
and
shrl
ljmp
fwait
inc
jne
cmp
lcall
xchg
adc
xor
jnp
fucomip
mov
lea
imul
xchg
stc
inc
les
inc
or
sbb
push
mov
sahf
push
aam
sub
sbb
imul
xchg
xor
addr16
cmp
or
cld
xor
mov
aam
pop
dec
fists
and
outsb
mov
fsubs
insb
dec
adc
stos
icebp
lock
pop
mov
or
mov
push
mov
bound
dec
insl
mov
jbe
not
lret
mov
shrl
fprem1
add
loope
push
mov
sub
mov
rep
sbb
xchg
xlat
outsb
test
fstpt
std
fldt
sbb
leave
scas
add
and
enter
fisttps
fnstsw
outsb
sbb
jno
mov
add
rclb
clc
xor
jo
jno
push
or
inc
pop
sub
mov
mov
fcoms
jbe
push
sub
sbb
stos
xor
sub
cmp
mov
cmp
xor
adc
hlt
aad
insl
popa
mov
sbb
cmp
fisttpll
pop
test
scas
test
push
mov
dec
ret
fstl
pop
sbb
repz
rorb
mov
mov
xor
mov
mov
jns
push
mov
out
xchg
sub
popl
cs
mov
testl
inc
mov
dec
pop
les
test
mov
outsb
cmp
xor
pop
outsb
cwtd
into
in
subl
pop
dec
mov
mov
add
pop
mov
and
adc
cltd
pop
ds
xor
hlt
int
mov
xchg
sub
sbb
dec
dec
pop
inc
push
shlb
sbb
jmp
sbb
clc
pop
aad
jae
jle
lcall
push
sub
mov
cwtl
ret
pop
push
dec
xchg
jnp
adc
sub
jl
test
push
dec
adc
xchg
xchg
mov
data16
jnp
pop
shll
pop
call
push
jg
sub
divb
inc
or
sub
movsl
shrl
loope
jmp
xor
add
pop
xchg
in
test
dec
and
outsl
mov
push
push
bound
add
mov
int3
insb
out
cmp
mov
clc
dec
andl
jg
hlt
push
sarb
lea
pusha
pushf
inc
jmp
jle
in
testl
int3
jg
orl
inc
mov
pop
insl
push
dec
mov
add
test
jns
dec
xchg
push
fistpl
pushf
dec
sahf
leave
pop
adc
jne
mov
les
xchg
sbb
test
test
mov
inc
pop
inc
scas
jb
sub
cmp
das
mov
xchg
mov
outsl
adc
out
lret
pop
shlb
xchg
es
pop
clc
std
mov
xchg
insl
mov
cmpsl
inc
dec
push
daa
xchg
inc
jb
adc
mov
push
adc
jg
jecxz
imul
mov
jne
flds
or
xor
mul
fs
loop
xor
inc
lcall
dec
imul
outsl
xor
push
pop
push
add
fidivs
arpl
clc
xor
and
mulb
adc
dec
fwait
lods
jg
test
xor
sarl
push
scas
and
pop
xchg
fiadds
add
popa
aas
jbe
fisttps
cmpsb
cmpsb
xor
add
rcr
int
and
mov
scas
sub
jnp
repnz
push
bound
cmp
mov
push
je
fsubs
add
mov
adc
fstps
std
adc
in
sbb
fdivrp
adc
bound
xor
aas
add
inc
xchg
adc
scas
jle
push
push
mov
jnp
push
sbb
mov
add
pop
data16
scas
pop
inc
sbb
loope
sbb
ss
sti
pusha
jle
cli
lods
pop
orb
mov
out
sub
aaa
stos
loope
shll
sbbb
sbb
int
in
out
mov
inc
mov
out
xorb
mov
xchg
xchg
push
loop
je
push
pop
popa
test
lret
cmpsl
shll
ljmp
je
inc
frstor
lea
ret
adc
movsl
out
xor
cs
lds
aaa
scas
das
and
pop
xchg
jnp
pop
jmp
das
cmp
scas
pop
sub
imul
and
xor
mov
dec
in
jp
rol
fcoml
iret
cs
mov
sub
pop
push
je
xor
inc
out
push
sahf
and
adc
dec
icebp
jle
outsb
rcrl
mov
cs
fisubs
jno
inc
out
push
sahf
and
adc
dec
icebp
jle
outsb
rcrl
mov
cs
fisubs
jno
inc
out
push
push
and
adc
dec
icebp
mov
outsb
rcrl
mov
xchg
lret
jno
inc
into
push
sahf
and
adc
mov
aam
outsb
cmpsb
imul
shrl
sbb
sub
mov
push
scas
jnp
pop
fimull
outsl
cli
outsl
ljmp
scas
sub
pop
iret
pop
jp
push
setbe
mov
mov
jg
jg
outsl
ljmp
mov
movb
out
out
jo
lcall
pop
xchg
and
notb
jp
pop
xchg
iret
mov
cltd
sub
mov
ja
push
and
cmpsl
add
jo
xor
jp
sub
mov
lcall
push
pop
xchg
jg
nop
adc
jae
dec
or
jne
rorl
je
das
aaa
dec
lcall
pop
jg
jae
cli
outsl
scas
sahf
inc
lahf
cmc
jbe
mov
pop
into
pop
add
out
out
xchg
jp
je
inc
shlb
mov
add
add
xor
dec
pop
and
pop
add
leavew
jne
inc
fists
cmpsl
fmuls
subb
jle
ret
and
int
or
out
loopne
and
inc
jg
sbb
sbb
jg
outsl
in
push
or
scas
sub
pop
fisttps
jp
jae
lcall
inc
ret
gs
jmp
sbb
js
pop
fisttpl
pop
test
nop
arpl
pop
mov
add
rorb
inc
mov
iret
add
push
mov
out
aas
fildll
pop
stos
and
or
jecxz
rcrl
outsl
xchg
imul
push
lcall
pop
fimull
jg
outsl
ljmp
scas
sub
pop
iret
dec
jp
push
lcall
pop
fimull
jg
outsl
ljmp
fsubrl
mov
lods
aam
mov
jne
add
shll
sbb
aaa
mov
imul
sar
sub
dec
mov
jnp
mov
dec
dec
aad
stos
cld
pop
push
xchg
pop
fidivrs
cmp
mov
sbbb
mov
testb
or
dec
gs
cmp
cld
mov
outsl
outsl
test
pop
and
nop
pushf
stc
dec
mov
and
addr16
aaa
jge
sub
sahf
xchg
cmp
mov
xchg
imul
outsb
js
inc
sbbb
xchg
cmpl
push
sub
jl
ret
xchg
sub
inc
mov
pushf
in
hlt
mov
movsb
lret
pop
insb
gs
dec
xchg
out
mov
add
ss
mov
test
xchg
adc
das
jb
jl
add
mov
shl
or
rorb
shlb
push
movsl
sahf
dec
xchg
push
fstpl
in
bound
jle
ret
out
push
fwait
cld
add
cmp
sbb
or
ljmp
aas
cmpb
and
mov
jle
jg
lock
jmp
cmp
jle
sbb
mov
test
fwait
mov
xor
sub
jno
pop
enter
xchg
or
shrl
cwtl
sbb
jae
enter
push
aad
rcrb
outsl
insl
adc
frstor
mov
xor
push
ds
adcb
shlb
pushf
rcrl
push
sbb
xchg
adc
popl
lret
push
mulb
je
jg
fs
xlat
lahf
or
out
imul
add
cmp
mov
in
stos
adc
mov
mov
idivl
outsl
adc
popf
ss
daa
hlt
bound
mov
cli
push
fadds
jmp
ja
jns
insl
out
cmp
in
or
xor
aas
jl
ret
fnstcw
sahf
jmp
jne
test
test
add
jne
movsb
and
sub
push
dec
lea
jo
sbb
add
nop
adc
push
jge
cmpl
pop
imul
mov
adc
aaa
dec
mov
enter
dec
pop
addr16
mov
fistpll
mov
sti
stos
fcompl
fstl
jl
pop
pop
add
pop
push
cmp
push
in
or
icebp
inc
push
cltd
shrl
push
dec
inc
fimuls
cmp
and
mov
xchg
or
stos
xchg
in
adc
cmp
arpl
movsb
lods
repnz
mov
jmp
fstps
fcomps
mov
mov
rol
sbb
jle
movsb
or
xchg
xor
and
add
lcall
sbb
xchg
push
ret
mov
jle
insl
pop
pushf
bound
roll
lds
mov
inc
pop
jbe
inc
or
adc
push
jns
dec
add
mov
cs
enter
push
lock
aaa
arpl
cmp
dec
add
jge
imul
cmp
rcrb
and
mov
jb
jbe
sub
das
adc
sar
decl
icebp
xor
scas
test
xor
fimuls
repz
in
and
cwtl
negl
mov
pop
repnz
dec
dec
test
pop
inc
fildll
push
xor
repz
push
cltd
loope
cmc
sti
add
push
cmp
mov
dec
mov
pop
adc
mov
jg
push
loop
sub
pop
jb
dec
cwtl
loopne
aam
jmp
lds
mov
pop
adc
ja
add
into
jnp
shrl
jbe
push
sub
mov
ja
inc
add
xchg
fs
xchg
vrsqrtps
ljmp
scas
sbb
push
outsb
out
mov
jb
in
inc
and
jecxz
movsb
mov
rcrb
push
push
xor
mov
bound
xchg
repz
in
arpl
dec
xchg
out
fadds
push
ret
add
out
insl
xchg
add
sbb
mov
dec
mov
inc
fdivs
cmc
nop
dec
or
dec
test
rorb
outsl
mov
adc
popf
mov
jno
push
test
lea
add
pop
pushf
jns
hlt
cmp
cmpsl
mov
jo
fidivl
inc
pop
adc
add
sbb
jp
xor
leave
pusha
jp
jg
jmp
js
ss
sbb
out
xor
loope
add
ret
pop
enter
ljmp
inc
jb
jno
dec
xor
xor
inc
dec
xchg
mov
pop
mov
dec
inc
push
pop
mov
ja
add
into
cs
clc
mov
xchg
mov
jbe
sarb
xchg
pop
das
mov
lcall
add
pop
sti
out
xlat
push
mov
clc
sub
dec
mov
inc
sub
dec
mov
mov
aas
xchg
pusha
dec
arpl
test
gs
lock
das
push
and
nop
lds
imul
notl
push
push
sbb
out
pop
jg
test
data16
pop
mov
fdivs
pop
sub
sub
loop
mov
jno
pop
pushf
outsl
cmp
out
pop
mov
stos
dec
add
es
dec
adc
mov
cmpsl
mov
fnsave
push
xchg
rolb
aam
rcrb
xor
fnstsw
leave
xor
xchg
add
imul
jmp
and
stos
into
bound
add
dec
mov
fcomps
sarl
dec
int3
inc
and
push
sbb
pusha
pop
push
xchg
stos
rcr
jnp
inc
negl
pushf
xchg
sub
inc
rclb
mov
loop
jmp
mov
mov
iret
cmpsl
push
cmp
push
adc
in
mov
jns
inc
in
mov
cwtl
lret
pop
cmp
loope
inc
icebp
movsb
movsl
push
in
lds
xchg
ss
mov
cltd
push
adc
adc
xor
pop
insl
push
xchg
iret
and
insl
repz
dec
lock
pop
mov
cmp
push
mov
dec
sub
leave
mov
scas
xor
or
cmpl
flds
ljmp
inc
adc
ds
jge
xor
sub
mov
outsl
inc
jb
jmp
outsl
sti
ror
loope
inc
testb
xchg
testb
push
push
and
int
add
fbld
mov
adc
data16
iret
or
out
or
sti
sbb
repz
push
enter
iret
cli
adc
aam
ret
imul
fabs
cmp
notb
fstps
xchg
sti
sub
imul
stc
inc
out
out
loopne
sub
stos
mov
out
jp
das
scas
xor
cmp
jb
aam
cwtl
lds
jmp
popl
outsb
aas
inc
mov
popa
popa
cmpsb
mov
jno
enter
sub
mov
pop
sbb
loopne
fs
adc
mov
data16
sbb
sbb
mov
push
lds
pop
cmp
cmc
dec
mov
jmp
pushf
cmp
pop
inc
push
ror
pop
jmp
je
xorl
loope
aas
data16
sti
or
or
ss
les
xor
push
and
xor
pop
subb
mov
and
jbe
push
cwtl
idivl
pop
lods
sarb
jp
adc
cltd
or
or
inc
mov
enter
mov
dec
roll
xor
or
cld
aaa
les
call
cmp
fisttpl
add
mov
push
out
nop
or
xchg
out
xchg
repnz
clc
fwait
outsl
stos
push
shlb
jnp
pop
dec
jg
cld
mov
lret
mov
daa
mov
popf
outsl
in
fimuls
jmp
std
shrb
ret
mov
scas
cmp
ret
inc
loop
jo
or
cltd
ss
icebp
sub
je
xlat
mov
out
rcrl
pop
cmpsl
xchg
cmpsl
out
scas
hlt
lods
shlb
jmp
jecxz
lret
sub
mov
es
fnsave
daa
inc
lcall
or
test
pushf
inc
call
aas
jl
and
idivl
jp
mov
clc
enter
insl
mov
test
in
js
mov
sub
in
push
iret
mov
fstl
ret
outsl
ds
xchg
cmp
pop
xor
push
inc
sbb
inc
cmp
add
movsb
sub
ret
mov
mov
pusha
mov
sahf
shl
lret
adc
and
int3
testb
rcl
fs
in
rclb
xor
outsl
in
sbb
bound
aam
inc
inc
push
fwait
imul
rorb
xchg
faddl
dec
jg
and
xor
add
fwait
leave
dec
aaa
lahf
addr16
sub
adc
jnp
stc
dec
aam
rcrl
std
pushf
mov
mov
mov
cmp
xor
adcl
xor
and
mov
xchg
fidivl
jbe
aas
leave
push
adc
mov
pop
js
jmp
xor
jle
sbb
aam
dec
sub
andb
lea
dec
inc
add
bound
lds
sbb
xor
mov
sbb
aam
pop
stos
popa
aad
hlt
lahf
xlat
in
popf
push
sbb
adc
push
and
sbb
lods
fwait
int
mov
cli
enter
lret
lds
mov
dec
dec
mov
mov
sbb
lods
and
cmp
xchg
divb
pop
xchg
push
mov
push
sbb
pop
mov
repz
xlat
pop
add
xor
sahf
xchg
je
pop
es
vpxor
lahf
cltd
shll
push
sti
fs
pop
aam
jbe
loope
sbb
idivb
xchg
movsl
or
sbb
loope
xor
loope
scas
into
gs
loop
out
sbb
inc
jge
adc
aas
jne
mov
mov
psllq
daa
sbb
cmp
mov
and
fcomp
hlt
lods
out
jp
insl
and
jne
mov
jmp
loop
movsl
lea
jle
subb
aaa
inc
xchg
aam
lock
mov
jl
push
sbb
cmc
ret
and
outsb
cmpsb
rclb
rcrl
add
cmpsb
push
and
xchg
xor
add
or
popa
or
mov
fistpll
mov
cmp
jp
add
adc
and
addl
dec
out
push
icebp
mov
xor
dec
mov
lahf
std
dec
cld
jmp
in
jmp
push
shl
inc
push
mov
jge
or
in
sub
test
idivb
mov
jbe
pushf
ja
dec
xchg
out
add
add
pop
scas
push
lret
aad
xor
insl
inc
adc
cli
lahf
in
jnp
loope
outsb
sbb
lods
stos
jne
andb
aaa
test
scas
test
add
add
xchg
movsl
hlt
jae
sub
jge
dec
insb
shll
inc
rclb
cmp
xchg
mov
into
rcrb
arpl
fisubs
fs
push
in
icebp
or
xor
mov
in
jae
xchg
inc
or
dec
test
mov
rolb
jne
shlb
mov
ror
jg
jg
add
mov
mov
jmp
sub
mov
push
inc
jae
pushl
sub
cltd
pop
arpl
push
mov
push
mov
aaa
out
or
pop
inc
and
adc
jl
clc
mov
les
out
in
xor
xor
cmc
mov
xlat
push
out
out
and
lea
nop
adc
in
aas
adc
lock
add
arpl
je
jbe
iret
dec
push
cmp
loopne
lret
push
mov
jno
mov
jo
daa
test
popl
sub
mov
sub
es
stc
fildl
daa
mov
cltd
xchg
or
push
xchg
xor
cmp
mov
add
lods
adc
in
psubb
ret
rcrb
inc
push
sbbl
and
lods
push
fsubrs
lea
pop
push
mov
add
cmc
push
movl
test
xor
cmp
pop
fmul
sub
testb
in
adc
orb
shrl
xchg
push
jne
pop
fcmovbe
filds
scas
jg
jl
lret
xor
xor
adc
popa
sub
mov
mov
inc
orb
push
sti
pop
in
and
lret
and
push
pushf
and
imul
add
scas
push
jb
daa
ja
xchg
insb
cwtl
mov
movsl
arpl
jae
cmp
xchg
inc
xchg
stos
out
jg
daa
cmp
push
in
xchg
lods
out
pop
cmp
lret
xor
jno
fs
mov
add
jmp
cs
xlat
clc
movsl
into
jp
inc
sub
ret
stos
pop
pop
das
sub
ror
andb
pop
mov
dec
movsl
push
mov
test
pop
jmp
lahf
adc
outsl
jmp
popl
lods
xchg
sbb
mov
mov
xor
mov
mov
int
test
mov
jle
jmp
int3
mov
mov
ds
pop
mov
mov
bound
cmp
xchg
sub
mov
push
cmp
sbb
adc
sub
dec
xchg
sti
loopne
sbbb
inc
stos
mov
outsb
imul
insb
stos
sbb
push
orl
sbb
in
icebp
adc
dec
nop
inc
pop
add
shr
in
pop
out
orl
adc
inc
lret
hlt
repz
and
stos
fstps
pop
seta
adc
mov
sbb
or
add
pop
sbb
mov
dec
mov
bound
jo
pop
loopne
or
leave
out
jl
out
cmp
lock
adc
inc
mov
pop
sub
cmp
jnp
xor
xchg
dec
lret
inc
and
bound
scas
fimull
cmp
out
hlt
pop
sti
or
repz
xchg
or
icebp
fwait
and
idivb
mov
jns
jmp
stc
in
mov
or
pusha
mov
bound
jb
daa
push
sbb
jnp
ret
mulb
repnz
pop
fiadds
xor
sub
jmp
stos
stos
test
int3
lahf
xlat
jns
test
mov
dec
cltd
mov
test
xchg
jg
cmp
cs
dec
mov
sti
aas
or
push
dec
fwait
jl
cmp
mov
xchg
push
push
xchg
out
jne
lds
jl
mov
dec
or
xchg
dec
pop
and
shll
xor
xor
cmpsl
bound
aas
or
sti
out
jg
and
dec
in
push
jne
mov
sub
sbb
lods
jg
shl
repnz
lock
xchg
push
adc
loopne
insb
sub
xor
add
out
or
cmp
or
orb
subl
pushf
xor
pop
cltd
sub
lods
mov
mov
in
and
add
push
push
pop
cs
subl
fdivr
stos
cmpsl
dec
adc
ja
dec
jae
xchg
in
dec
dec
sti
mov
push
mov
sbb
sub
mov
fsubl
push
inc
inc
push
mov
push
or
rcr
pop
xchg
pushf
mov
pop
push
leave
in
mov
fwait
push
and
push
loop
nop
insl
js
xchg
ret
cmp
dec
bound
repnz
add
mov
cmp
mov
cwtl
scas
into
sbb
jns
mov
sub
ror
push
push
adc
movsl
lret
movsb
mov
loop
cs
cmpsl
cltd
in
shlb
mov
aam
leave
xchg
add
and
out
lock
pop
mov
push
nop
incl
xor
xchg
and
jnp
mov
test
xor
mov
sarl
pop
lcall
in
fs
pop
insb
dec
pushf
bound
adc
and
xor
fsubr
js
pop
fst
mov
dec
cmpsb
mov
imul
bound
sarl
fwait
lret
push
inc
aas
hlt
pushl
xchg
scas
inc
stc
jmp
testl
mov
arpl
lds
sub
ds
xchg
leavew
icebp
rcrl
push
adc
leave
vpperm
rcrl
pushf
xchg
test
mov
sub
pop
xchg
add
dec
pushf
std
mov
cmp
out
xchg
jb
lods
ret
mov
or
repnz
xchg
and
ret
popf
aam
lcall
add
es
pop
nop
xor
ja
xor
loopne
shl
stos
mov
and
in
sub
xchg
adc
mov
push
xchg
add
repnz
cmpl
test
enter
cwtl
add
adc
clc
rorl
pop
jge
into
rcr
push
adc
dec
call
ljmp
shrl
mov
mov
xchg
fistpll
push
scas
out
mov
aas
lock
mov
and
ljmp
lret
in
inc
push
fsubrs
out
dec
and
cs
push
sbb
lods
adc
fst
mov
scas
fstpt
xor
rolb
pop
sbb
pop
xchg
mov
shll
mov
sub
pop
xchg
pop
jg
push
dec
push
xchg
pop
ljmp
jne
sub
lock
mov
mov
mov
jno
sbb
sub
fcoms
imul
jmp
adc
aas
out
mov
sub
ss
fsubp
movsl
stc
test
stos
jmp
pop
jno
push
leave
in
mov
jp
pop
xchg
hlt
fisubl
inc
push
imul
adc
in
lods
push
sahf
into
stos
fisubrs
xlat
or
sti
and
stos
mov
dec
das
cs
rorl
les
pop
xor
xor
jmp
sub
jmp
sbb
dec
add
dec
pusha
mov
div
cwtl
mov
push
aam
dec
arpl
jmp
addb
scas
cmpb
in
fisubs
orl
mov
popf
xchg
cmpl
jne
mov
pop
and
lret
mov
mov
je
repz
xchg
push
inc
ficoms
sub
sub
call
adc
daa
mov
arpl
pop
les
or
les
ja
xor
mov
mov
fldt
sbb
jle
and
ret
insl
push
xchg
jo
outsl
cmp
mov
addb
push
stos
mov
pusha
mov
aam
adc
in
xor
movsb
adc
testl
cmpb
sub
setge
fmuls
sahf
and
mul
in
adc
mov
std
jmp
adcb
mov
movsl
add
ja
pop
mov
pop
pusha
out
jnp
xor
mov
dec
jae
dec
fists
imul
fwait
adc
enter
sbb
icebp
mov
push
lret
jmp
or
xchg
inc
dec
mov
sarb
cmp
and
mov
inc
xor
jno
data16
add
paddsw
imul
repnz
or
out
insb
test
or
imul
mov
mov
hlt
in
xchg
mov
xor
push
jmp
jae
mov
ret
push
out
push
movsb
popf
mov
jns
aaa
dec
test
sbb
jmp
push
repz
outsb
adc
mov
jb
fnstenv
pop
cmpsb
inc
mov
add
pcmpgtw
andb
fnstcw
in
sbb
jns
xor
outsl
fisubrl
inc
pop
push
mov
jecxz
or
jle
sub
inc
mov
cmp
test
idivb
daa
lret
inc
cwtl
into
push
fwait
leave
dec
adc
aaa
aam
sbb
sub
sbb
pop
cmpsb
cmpsl
mov
or
sbb
jb
xchg
popa
in
pusha
lds
mov
pop
je
les
in
inc
xchg
add
dec
shrb
dec
rcrl
enter
xchg
inc
xor
and
sbb
lahf
ljmp
out
add
add
sti
dec
frstor
call
xchg
mov
std
popf
shlb
jmp
xchg
scas
incb
cmp
sub
into
jmp
push
push
mov
xchg
lds
xchg
mov
aad
fxch
or
and
in
cmp
jae
lcall
cs
imul
es
mov
shl
mov
adc
mov
in
or
test
mov
outsb
sti
mov
pop
inc
mov
repnz
add
xchg
jl
sbb
insl
xchg
jge
int
mov
adc
cmp
dec
jp
push
lcall
pop
fimull
jg
outsl
ljmp
scas
sub
pop
iret
dec
jp
push
lcall
pop
fimull
jg
outsl
ljmp
scas
sub
pop
iret
dec
jp
push
lcall
pop
fimull
jg
insl
out
lahf
push
lea
mov
pop
iret
dec
jg
outsl
stos
loopne
lock
push
mov
test
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
xor
jo
pusha
std
push
lods
jo
push
loop
mov
lock
jg
or
mov
fnsave
pusha
std
adc
and
test
jge
outsb
or
sub
inc
fnsave
pusha
in
xchg
add
shrb
into
jge
dec
jecxz
jnp
cmp
add
add
fstpt
sbb
cmp
sub
out
and
nop
cld
pushf
test
add
push
test
daa
xor
jge
gs
mov
jo
xor
pop
mov
fistl
popf
dec
fxch
push
ror
stos
popf
psrlw
sbb
adc
in
loope
adc
dec
inc
rcrb
movb
cmpsl
mov
cmp
adc
stos
lods
or
std
and
sub
sbb
sub
js
aaa
in
xorb
mov
jl
xchg
stos
xor
js
insl
lods
pop
subl
int
lret
pusha
out
lea
popf
xor
inc
lock
fs
adc
mov
fstl
fisttpl
push
shll
and
and
cmc
pusha
jmp
push
push
mov
frstor
popf
add
scas
xor
and
mov
ret
sbb
jb
inc
mov
mov
adc
add
rorb
pop
lock
loopne
nop
or
mov
fnsave
pusha
std
adc
and
lock
loopne
nop
or
mov
pop
lret
int3
inc
out
lret
clc
mov
aas
push
mov
out
jno
ja
xor
add
jne
test
pop
fadds
das
jb
xor
mov
inc
xor
mov
mov
add
pusha
dec
fdivr
cmp
push
lret
and
notb
lds
jo
repz
xchg
dec
scas
sbb
pop
mov
popf
scas
jbe
jb
jmp
in
outsl
sub
loope
lods
cltd
scas
mov
lea
cmp
and
movsl
cmp
sti
xorl
rorl
sub
dec
incb
out
pop
or
or
rcl
ficomps
inc
dec
pop
mov
sub
movsb
inc
aam
cmpsb
repz
add
adc
jb
xchg
mov
imul
xchg
in
push
jecxz
enter
xor
xchg
xchg
cmp
es
aas
insl
sbb
sbb
repz
jne
ljmp
sub
in
test
inc
call
xchg
push
jno
jg
jp
stc
jp
adc
or
pop
jle
shlb
push
and
jmp
mov
fmull
pop
push
adc
pusha
ficoms
pop
dec
dec
arpl
aam
test
mov
jl
loope
pop
lock
sarl
jnp
lods
imul
pop
enter
testl
std
out
and
pushf
inc
je
jnp
mov
adc
call
ds
cmp
pop
mov
pop
ds
scas
repnz
jecxz
inc
nop
xchg
adc
cmp
vpunpcklwd
push
fbld
mov
pushl
out
dec
into
xor
and
adc
push
cmp
xor
add
loopne
sub
adc
and
sub
push
bound
test
dec
ljmp
stos
and
dec
or
pusha
lcall
dec
jp
pop
jecxz
gs
or
ds
xor
mov
shlb
and
shlb
cmp
xchg
sbb
ja
push
or
or
cmp
in
sub
and
sub
pop
sub
jb
cmp
bound
and
mov
bt
push
pop
inc
sbb
test
pop
loopne
pusha
btrl
cmpsb
mov
imul
jno
mov
popa
jne
cmpsl
imul
pop
icebp
fimull
lods
mov
or
push
and
divb
movsb
lock
roll
xchg
gs
mov
mov
int3
or
lret
inc
push
cmp
mull
push
mov
pop
push
in
pop
fmul
lsl
lock
and
mov
fdivrl
or
lods
icebp
push
pushf
sbb
adc
jg
jmp
lcall
daa
add
and
pop
fildl
add
call
and
xchg
es
repz
int
outsb
sahf
call
inc
insl
sbb
cwtl
add
pop
loope
lds
aam
stos
adc
push
adc
lcall
mov
cmovs
jge
movsb
daa
inc
jbe
popf
loope
push
sbb
mov
push
data16
or
dec
insb
cli
fsub
jno
xor
aam
push
das
imul
mov
mov
cmp
xchg
fmuls
fldl2e
or
nop
ret
jl
xor
sahf
pop
les
push
ficoms
dec
fisubl
dec
mov
movsb
push
leave
sbb
ss
mov
jbe
lock
xchg
out
lahf
pop
ds
pushf
into
sbb
gs
adc
fdivr
outsl
dec
js
sarl
push
sti
mov
sub
mov
popa
xchg
insb
faddl
lods
in
fisttpl
xchg
push
or
adc
lahf
cmp
outsl
lcall
mov
xchg
cmp
xchg
ret
enter
jbe
pushf
scas
xchg
mov
addr16
aas
add
leave
mov
fildl
mov
cli
ret
sbb
loop
dec
cwtl
mov
iret
push
dec
push
dec
loopne
pop
pop
dec
out
in
cmp
test
loopne
cmp
lcall
aam
cmpsb
push
push
pop
cmp
mov
ret
add
loopne
sub
ret
add
icebp
test
cmp
jmp
pop
fs
or
push
inc
pop
outsb
cmc
das
repz
js
mov
sub
fisubrl
push
les
inc
outsl
lock
insl
enter
sbb
adc
dec
inc
push
in
enter
xor
xchg
xor
or
mov
loop
mov
in
ret
mov
lds
out
push
pusha
mov
sbb
xor
jns
adc
les
imul
sub
pop
cmp
sbb
mov
call
sahf
fistps
mov
push
push
cs
and
leave
adc
dec
add
push
cmpsl
jg
enter
push
sub
adcb
jmp
in
jg
xchg
cmp
js
hlt
dec
sub
and
pusha
pop
jne
and
lahf
pop
hlt
add
loope
push
and
js
rorb
pusha
xchg
pop
adc
je
jbe
rclb
pop
push
cwtl
std
clc
int3
aaa
sahf
mov
scas
out
push
inc
add
aaa
lahf
lds
sub
xchg
loop
adc
hlt
shll
push
push
dec
cmpsb
insb
jge
xchg
pop
xor
ret
push
dec
mov
jo
xchg
mov
pop
insl
dec
int
out
fisubl
hlt
mov
mov
add
pop
std
outsb
jns
ja
push
xchg
imul
inc
repz
pop
fs
test
das
and
dec
ret
jae
xor
addr16
fidivrl
flds
xchg
int
loopne
xor
lret
xchg
addb
roll
shll
push
cs
push
pop
mov
pop
cmpsb
push
sbb
or
mov
inc
or
test
jge
adc
loopne
mov
or
and
fisubl
inc
push
mov
sub
dec
jg
add
daa
aas
cmc
or
insb
into
jmp
jb
stos
inc
pop
xorb
push
cmp
lea
mov
xor
jecxz
fcmovnbe
jnp
lds
xchg
int
inc
add
lcall
pop
push
mov
pop
insb
mov
sub
mov
jecxz
or
inc
xlat
aas
add
scas
iret
adc
pushf
imul
jl
dec
add
fldl
cmp
mov
sub
subl
jae
cmp
jle
std
insb
inc
or
decb
jo
mov
out
aam
addr16
lods
mov
nop
and
dec
in
cmp
ret
lock
inc
leave
jo
leave
add
pop
popf
xchg
movsl
les
add
jg
cli
add
mov
push
loopne
ss
pop
xchg
mov
mov
adc
sbb
jb
sbb
mov
mov
pop
fnsave
sub
sahf
rorl
pop
rolb
in
add
or
jno
scas
inc
aam
sub
pop
add
je
jnp
jmp
pop
add
push
arpl
push
aam
or
adc
push
sbb
xchg
jo
sar
sahf
xchg
or
add
add
lahf
std
loope
test
sub
lds
adc
xor
fdivrs
pop
repnz
push
adc
data16
push
dec
sub
sbb
repnz
std
insl
out
lahf
cmp
aaa
add
aaa
mulps
iret
push
add
lds
adc
jl
push
dec
insb
test
rcll
ret
fstps
lcall
inc
adc
pop
sbb
pushf
mov
adc
inc
adc
pop
adc
pop
mov
clc
inc
leave
inc
xor
xchg
xchg
loopne
stc
dec
outsl
mov
mov
scas
mov
daa
inc
subb
outsb
sbb
mov
add
addl
negl
sarl
sbb
insl
stc
clc
je
adc
and
pop
cmp
xchg
fdivl
mov
rorl
mov
pop
xor
xchg
popa
or
in
pop
enter
jbe
clc
push
xor
pop
dec
pop
sbb
in
sub
and
gs
pop
ret
cmp
pop
mov
cmp
adc
test
js
push
push
in
ja
imul
adcl
mov
mov
dec
out
shrl
popa
ss
xchg
xor
xchg
mov
movsl
out
mov
pop
add
cmp
push
dec
push
pop
mov
xchg
and
dec
stos
and
jnp
clc
xchg
push
sbb
insl
aad
mov
outsb
and
push
aad
fcmove
loopne
neg
scas
dec
mov
enter
add
fcomps
pop
xor
loop
movsb
push
jo
aas
call
and
icebp
pop
fimuls
jp
sub
sbb
sbb
int
adc
fmul
cwtl
daa
dec
push
and
or
call
jae
shl
mov
jnp
lret
jno
test
push
movsb
sbb
hlt
test
shl
int3
push
loope
outsl
cmp
out
icebp
out
cs
and
push
mov
mov
sub
imulb
xchg
cmp
mov
add
mov
cmc
in
test
and
shll
arpl
das
outsl
sub
adc
xor
pop
leave
pop
outsb
cmp
sarb
popa
lret
adc
stos
dec
sub
nop
mov
cld
notl
iret
int3
inc
xor
cmp
imul
pusha
test
push
out
cmpsl
div
cmp
xor
sbb
adc
ja
cmp
push
mov
or
fnstsw
push
mov
popf
xchg
add
ret
fcomip
outsb
push
shl
je
mov
fildl
inc
imul
pusha
out
icebp
mov
lods
jnp
xorl
push
push
cmp
jnp
mov
insb
dec
dec
sub
sub
mov
fimull
pop
pop
out
movsb
out
aas
inc
loop
jno
lods
mov
adc
jg
xor
mov
into
lret
daa
dec
ja
mov
int3
movsl
inc
inc
dec
cmpsb
xchg
fstl
clc
sub
testb
jae
push
pop
rol
ss
je
add
pop
and
pop
mov
push
ljmp
pop
test
aad
mov
insl
xchg
push
adc
jbe
test
mov
pop
outsb
mov
movsb
loopne
ret
pop
test
int3
mov
xor
aam
ja
push
jmp
mov
adc
sub
popf
jnp
mov
inc
out
pop
loop
sbb
sub
cltd
mov
loopne
pop
loop
pop
mov
xchg
aas
cmp
sbb
push
ds
pop
push
xchg
push
out
pop
and
inc
lcall
out
or
repnz
pop
lods
pop
stos
dec
or
xor
jne
jnp
xor
fbld
rcr
les
popa
loope
mov
adc
out
xlat
or
rclb
mov
cs
cs
mov
jnp
or
fidivl
xlat
sti
adc
imul
push
mov
mov
dec
loope
add
sbb
inc
outsl
out
outsl
mov
add
rclb
and
mov
pop
pop
fstl
xchg
or
icebp
sub
add
xchg
addr16
xor
jg
cltd
pop
cmp
data16
test
add
pop
xchg
and
in
les
hlt
sbb
pop
cwtl
cmc
inc
scas
cwtl
cltd
push
rolb
add
push
xchg
lods
fwait
sub
and
pop
pop
pop
test
lods
jbe
xlat
mov
test
inc
add
jbe
mov
sub
je
jb
and
pop
andl
movsl
push
in
mov
cli
cltd
andb
sbb
inc
or
add
pop
xor
nop
addr16
or
hlt
xlat
or
aas
idivb
pushf
out
aad
fcmovbe
cmpsb
or
or
dec
jns
lcall
test
insb
pop
jnp
pop
enter
dec
les
xor
add
mov
jnp
fldpi
imul
add
add
or
inc
cmp
cpuid
push
pop
inc
jle
sahf
or
std
push
pop
jp
sti
jnp
and
pop
push
imul
cmp
cmpsb
xchg
jns
nop
loope
fisubrs
jnp
xchg
subl
mov
or
lds
loop
movsb
lock
ja
nop
jns,pn
insl
push
xchg
fisubrs
pop
cwtl
rolb
cmp
lret
xor
sti
out
bnd
fisubrs
jae
push
cld
mov
xchg
jae
or
jl
or
xor
add
xor
bound
dec
in
int
cmc
mov
hlt
mov
sub
cmp
jo
xor
in
xor
scas
lret
xor
jmp
fbld
mov
cmp
es
outsl
cmp
mov
cmp
fsub
mov
fsubl
mov
add
mov
mov
sub
aas
cmp
roll
fsubp
xchg
mov
cld
loop
or
mov
movsl
xor
int
fisubs
movq
mov
test
test
insl
add
lods
adc
hlt
mov
xchg
mov
xor
push
testb
fidivl
inc
sub
shrb
sahf
mov
gs
in
sub
jle
daa
std
mov
shll
call
pop
loopne
ljmp
je
xchg
jo
mov
sbb
dec
mov
mov
flds
sahf
call
pop
mov
je
cwtl
ljmp
repnz
mov
sar
sub
xor
aad
add
pusha
out
and
xchg
jecxz
adc
adc
cmp
xor
xor
cli
adc
mov
add
stos
fisubrs
sbb
add
or
push
out
cmovs
in
aam
inc
xlat
add
mov
mov
iret
dec
mov
inc
sbb
mov
lock
hlt
mov
notl
imulb
lds
and
cmp
push
add
fisubrs
xchg
mov
mov
push
add
fildl
outsb
cmpl
add
int
testl
fnstcw
mov
adc
cli
daa
cmpsl
scas
sbb
addr16
stos
cmp
jmp
inc
mov
mov
inc
cmp
push
adc
out
fwait
dec
and
add
pop
inc
cltd
mov
or
mov
sbb
test
loopne
mov
xor
flds
mov
adc
std
lods
aad
xlat
ja
push
adc
in
data16
fidivrs
inc
repz
in
xchg
xlat
mov
lods
subps
xor
jge
int3
rorl
push
xchg
adc
je
jno
mov
in
jo
mov
xor
popa
mov
lods
stc
subl
sub
mov
push
sbb
in
pop
cmp
test
xchg
dec
mov
sbb
sub
in
sbbb
inc
pusha
or
xor
sub
out
cmpsl
sbb
cwtl
pop
fadds
or
addr16
jg
mov
mov
lods
fdivrp
ja
rcl
test
and
and
or
push
fwait
push
scas
jmp
pop
cmpl
cs
xor
mov
in
mov
iret
add
cmpsl
xchg
xor
add
arpl
out
js
dec
or
and
mov
stos
or
jne
push
pusha
mov
mov
jl
inc
jge
in
test
mov
lock
cld
leave
mov
xchg
sub
iret
pop
inc
aaa
inc
insl
cmove
mov
shll
flds
jl
and
dec
push
in
bnd
jge
cmpl
mov
pop
dec
sarb
hlt
fists
sub
or
test
ret
pop
mov
fnstsw
sub
or
sub
dec
xchg
jl
mov
imul
lret
add
mov
data16
out
fldl
in
xchg
jg
jb
mov
and
cmp
sub
jo
fsubp
jle
mov
aam
xchg
inc
repnz
or
enter
xchg
sub
mov
fldl
mov
or
adc
xor
or
cli
xor
lods
enter
mov
orb
and
mov
xor
mov
comiss
fimull
movsl
or
in
cmpsb
js
fbld
hlt
add
sub
iret
mov
aas
lret
imul
xchg
mov
xchg
inc
rcrb
cmp
iret
popl
repz
test
xchg
push
rcrl
je
add
and
pushf
fistps
fst
js
lahf
adc
loopne
call
cli
icebp
movl
aaa
cmpb
adc
mov
imul
sub
sbb
cmp
int
clc
arpl
mov
sub
popa
push
jb
ss
clc
or
aas
ljmp
aam
dec
mov
pop
add
es
mov
dec
cmp
mov
fildl
lea
adc
jno
jecxz
or
and
nop
inc
mov
stc
mov
pop
pushl
dec
and
ljmp
push
dec
mov
scas
mov
jns
jmp
test
sbb
imul
adc
mov
cltd
into
or
or
add
sbb
xlat
mov
inc
mov
or
xchg
mul
jmp
mov
flds
cmp
loopne
sub
popf
adc
in
jae
jmp
add
sbb
mov
call
aaa
fldcw
xor
jg
test
loopne
sub
mov
loop
or
pop
and
leave
mov
cmp
or
pop
cmp
repnz
ucomiss
mov
popa
test
xchg
jne
jge
jle
pushf
rcr
iret
sbb
imul
mov
lahf
out
push
lcall
push
push
inc
push
mov
cwtl
pusha
lods
cmp
add
inc
fstpl
mov
adc
ret
jne
and
cld
inc
mov
fcoms
das
mov
hlt
pop
addr16
xor
popf
sbb
cmp
jb
mov
cmp
jns
lods
mov
clc
dec
push
cld
adc
inc
imul
test
xchg
inc
adc
mov
dec
data16
fistps
icebp
jne,pn
fwait
ret
adc
and
adc
jbe
mov
imul
jmp
pop
xor
scas
testl
outsb
inc
sub
and
dec
jecxz
xchg
xor
js
je
pop
mov
jns
mov
out
sub
mov
mov
js
xor
mov
jb
xchg
push
xchg
mov
xchg
icebp
and
scas
push
hlt
ss
rcrl
jg
inc
mov
imul
mov
xorl
xchg
push
dec
fcompl
lods
js
mov
push
mov
push
pop
add
shl
push
mov
jns
push
bound
mov
xchg
xor
ljmp
mov
inc
scas
outsl
cli
shlb
mov
adc
lds
cmp
inc
in
cwtl
std
test
data16
mov
cwtl
sbb
ja
jo
xchg
mov
mov
clc
and
lods
pop
and
xchg
movsl
push
sbb
adc
fwait
adc
fpatan
lret
int
sti
inc
cmpsb
jg,pt
mov
hlt
jge
inc
idivb
stc
jge
sbb
and
shrl
into
pop
ficomps
and
sub
xchg
dec
push
xor
jl
jmp
in
ret
mov
inc
rorl
xor
pop
jbe
push
pop
xor
jmp
cmp
faddl
js
mov
lret
add
out
jns
xchg
test
fstl
insb
leave
xor
push
mov
ja
into
xor
ret
das
push
imul
mov
int
lret
movsb
loopne
es
ds
jp
es
xchg
ljmp
push
xchg
inc
arpl
in
jmp
aam
iret
aad
add
jge
mov
insl
mov
mov
add
test
stos
out
nop
into
fnstsw
outsb
add
jae
fmuls
mov
sbb
cmp
xchg
mov
inc
dec
push
xchg
xchg
dec
or
fidivrl
push
popf
lds
pushf
dec
inc
cmp
xor
sbb
mov
cli
xor
icebp
orl
lea
xchg
xor
in
xchg
out
ljmp
sub
mov
popf
bound
mov
xlat
pop
lds
xchg
fsubrl
inc
mov
shrb
addl
push
jecxz
and
pop
xchg
les
fwait
adc
and
popa
lret
lret
dec
insb
jnp
xchg
sub
cld
adc
jnp
in
cmp
sub
sahf
pop
dec
subl
jg
lahf
xchg
jae
push
std
out
push
mov
sub
xchg
cmc
push
outsb
gs
sarb
mov
pusha
std
adc
and
lock
loopne
nop
or
mov
fnsave
pusha
std
adc
and
lock
loopne
nop
or
mov
fnsave
pusha
std
adc
and
lock
loopne
nop
or
mov
fnsave
pusha
std
adc
and
pop
insl
loopne
out
or
dec
rcrb
push
add
xor
pushf
inc
mov
inc
push
sahf
aas
xchg
cs
rorb
in
cmc
sahf
add
scas
xor
gs
pop
push
test
xchg
pop
lods
cs
jmp
aad
in
cmc
sahf
mov
scas
inc
fidivs
sbb
push
test
mov
les
cmp
xchg
add
bnd
push
push
dec
out
lods
add
push
or
pop
push
sbb
in
lret
push
add
lret
push
out
lret
rcr
lcall
addr16
mov
mov
xchg
mov
mov
iret
inc
lods
jne
fwait
cs
test
push
mov
std
xor
xor
mov
ficoms
gs
movsl
out
clc
push
add
jne
pop
mov
rcrb
mov
jno
in
fdivrs
push
movsb
out
mov
jnp
outsb
inc
cs
or
mov
js
cli
mov
xor
sub
or
cmpsb
push
adc
fadd
dec
jae
fildll
lods
dec
nop
jg
outsl
lahf
rorl
xor
gs
out
test
cmp
pop
stc
dec
cmp
outsb
ljmp
pop
popf
loopne
cmp
mov
sub
sbb
push
out
mov
or
inc
dec
in
loopne
testl
xorb
jbe
cmc
fisttpll
pop
lahf
or
push
gs
jne
test
xchg
movsl
cs
lds
jle
outsb
cmc
sahf
add
scas
xor
gs
jne
test
xchg
movsl
cs
lds
jle
outsb
cmc
sahf
add
cld
fldt
int3
sbb
lret
mov
and
outsb
pusha
mov
in
cmpl
aad
fdivrl
ds
sub
insb
mov
sbb
and
xchg
push
sub
dec
addl
jb
es
rol
sbb
mov
xlat
jle
inc
in
mov
mov
mov
dec
shl
cmc
xlat
into
test
out
mov
pop
fdivl
sbb
out
in
int
sub
cs
fmul
xor
movsb
xorl
dec
cwtl
sbb
pop
pop
out
stos
mov
mov
inc
jp
mov
inc
mov
mov
fwait
mov
repz
repz
test
out
dec
mov
out
les
shll
cmp
sbb
cmp
cli
stos
pop
fildll
pop
sub
enter
mov
imul
fistps
lcall
ds
mov
bound
cli
sub
cmp
shll
ror
rorl
pop
pop
mov
sar
fiaddl
mov
aad
cmp
fwait
cs
in
repnz
jmp
std
xor
call
cmp
lahf
push
aam
xlat
add
lds
lret
sub
mov
adc
cmc
lret
mov
cmp
push
sbb
rolb
int
ret
mov
repnz
cmp
push
pop
adc
es
push
ret
out
lds
mov
inc
stos
inc
rolb
mov
call
popf
lock
fdivp
inc
decb
push
push
fs
es
sbb
stos
jbe
push
out
leave
stc
shrl
test
push
fldt
pop
daa
jmp
pop
fldcw
dec
adc
push
push
pop
lock
mov
test
addb
lock
push
add
ds
inc
jp
push
inc
shl
stos
dec
and
repz
stos
xchg
jg
mov
mov
in
mov
or
dec
fldcw
fistpll
in
aas
mov
cmp
out
int3
cld
or
jmp
and
nop
push
stos
mov
in
pop
inc
dec
mov
xchg
inc
sahf
insb
mov
push
ret
ret
pop
xlat
pushf
test
push
in
inc
or
lret
loope
pop
sub
sub
jecxz
fidivrl
or
mov
rcrl
fnstsw
icebp
testb
mov
push
aas
jne
cmp
sub
mov
add
dec
pushf
rclb
movsl
push
insb
cmpsb
out
mov
in
cmp
in
lods
cld
mov
jle
loopne
jae
and
add
xor
inc
insb
jb
lret
pop
js
push
sahf
scas
pop
push
les
cwtl
inc
pop
loopne
sbb
std
and
emms
mov
mov
movb
mov
stos
adc
pop
push
sub
mov
xchg
add
jno
jle
jge
add
cmpsb
add
jl
rol
sarb
data16
inc
leave
inc
pop
xor
cld
hlt
dec
ljmp
xchg
mov
jbe
xchg
loope
sub
cltd
jg
push
in
xor
adc
push
aad
out
inc
movsl
mov
xorl
jge
push
fldl
and
add
add
mov
adc
sbb
std
mov
pusha
call
adc
mov
rcrb
dec
pop
mov
xchg
insl
mov
jb
jno
jnp
popa
clc
xchg
stos
rcll
les
push
in
ret
xchg
mov
mov
cmp
add
pop
sbb
jo
inc
pop
mov
sub
into
andl
sbb
dec
push
loope
xchg
inc
mov
outsl
dec
dec
shr
filds
jnp
mov
pop
pop
mov
pushf
pop
mov
fistpl
lret
js
inc
cmp
mov
les
outsl
mov
das
mov
in
fisubl
or
pop
sbb
xchg
pop
add
bound
push
ja
cmc
xchg
data16
or
cmp
push
popf
js
inc
jae
shlb
mov
rcrb
and
jecxz
orl
popa
rcrl
adc
inc
lcall
xchg
pop
test
test
ret
imul
mov
pop
jbe
add
cmp
fwait
mov
xor
mov
addr16
adc
or
mov
pop
inc
adcb
sarb
jg
adc
or
sahf
adc
lcall
push
lods
popf
inc
add
sbb
lea
fwait
ret
cmp
push
xchg
call
imul
mov
ret
in
mov
daa
sahf
outsl
dec
adc
daa
fdivr
addl
inc
js
test
jb
sbb
add
push
int
cmp
xchg
les
ds
xor
xor
icebp
js
or
push
fdivs
popa
lds
xchg
test
daa
mov
sbb
mov
dec
roll
mov
mov
push
jmpw
dec
loop
je
xor
or
out
and
push
call
push
xor
outsb
pop
ret
mov
adcl
insl
ds
cld
xchg
mov
stc
hlt
imul
mov
jo
jg
add
gs
in
dec
cmp
insb
sti
or
add
in
push
ljmp
ss
int3
dec
gs
inc
filds
daa
lock
repz
cmp
xchg
pop
std
mov
inc
imul
sub
aad
add
rcrb
push
push
fwait
adc
repnz
xchg
push
xor
adc
jp
sub
inc
jle
out
add
jmp
inc
xor
mov
pop
xor
jae
sub
out
mov
adc
mov
sti
rcll
xor
ficomps
lret
jne
movsl
xchg
push
filds
repnz
aas
out
sbb
mov
mov
loopne
xchg
dec
push
mov
and
in
or
or
mov
addr16
popl
mov
dec
lret
orl
addr16
and
xchg
std
call
lock
xchg
dec
mov
dec
mov
in
incb
imulb
shlb
xor
addr16
movsl
popf
test
push
out
mov
ret
sub
mov
rcrb
sub
cmc
gs
pop
leave
cmp
shrb
into
stos
inc
daa
loope
jnp
cltd
jo
mov
and
xchg
ds
dec
out
addl
pusha
fwait
gs
and
loope
fcom
mov
add
xchg
lods
lods
jno
das
xchg
insb
stos
icebp
lret
paddq
lds
dec
data16
out
std
cs
imull
pop
pop
inc
push
sbb
mov
adc
jns
nop
mov
test
lcall
xchg
xchg
push
xor
push
add
jl
aam
cmp
pusha
incb
inc
mov
add
and
xchg
mov
test
jge
pop
cmp
aaa
outsl
pop
sub
sbb
fidivrl
in
fsubl
lock
popf
into
cli
lahf
ret
sub
mov
cmp
mov
push
bound
lods
outsb
jbe
daa
mov
cld
add
sbb
imul
cmp
pop
cmp
pop
ds
loopne
enter
es
and
clc
rcll
cwtl
lods
out
call
jmp
push
dec
stos
or
and
int3
and
and
stos
pop
xchg
xchg
call
ret
sti
imul
shll
lods
mov
lsl
test
xchg
fisubs
mov
adc
inc
inc
int
xlat
bound
mov
cmp
dec
out
jno
add
insb
dec
jmp
fnsave
addl
stos
stos
push
cmp
jl
les
scas
gs
lret
lods
std
mov
xor
push
mov
out
ror
sbb
and
popa
inc
and
push
xchg
xor
imul
mov
or
adc
push
arpl
jmp
dec
sub
iret
adc
pop
jno
inc
push
sbb
sbb
mov
imul
mull
fldl
int3
push
js
mov
add
imul
fstpt
cmp
ja
mov
into
jmp
dec
sub
cmp
in
mov
jmp
jnp
sbb
lock
cmp
mov
dec
mov
in
and
mov
mov
and
dec
out
mov
adc
pop
adc
inc
imul
roll
or
jne
cmp
add
lods
jp
cmpsl
xor
in
int
mov
pop
sub
test
or
lock
ret
mov
cmp
movsl
mov
add
cwtl
fadd
jb
cld
pusha
jae
int
xchg
push
test
push
add
test
dec
jno
sahf
in
mov
xlat
lods
aas
scas
outsl
jne
adcb
mov
dec
test
dec
xchg
mov
add
pop
addr16
push
popf
and
mov
add
or
testl
lods
bound
bound
jecxz
cmp
mov
or
push
leave
fcomps
je
lods
js
in
loopne
js
xor
stc
fcoml
mov
cwtl
mov
jb
xchg
out
lea
stc
aam
int
xor
jbe
or
rorb
jns
sbb
mov
cmp
dec
mov
cmc
jb
stos
add
and
mov
sti
fstpl
xor
xchg
xor
es
inc
int
imul
cld
pop
loope
and
fildll
lcall
cmp
icebp
push
mov
pop
icebp
fistpll
in
cmp
outsb
inc
sub
dec
in
inc
filds
inc
popa
xlat
out
mov
popa
cmpb
fsubr
mov
test
push
std
sub
jnp
mov
cmp
or
or
ret
loop
cmp
mov
xor
es
add
add
out
scas
mov
dec
test
leave
movsl
adc
outsl
dec
sbb
lock
rcl
je
sub
scas
xor
adc
jle
hlt
adc
and
and
jbe
fdivs
stos
mov
lock
sbb
scas
dec
aad
ja
jae
cltd
xlat
jbe
pop
push
inc
shlb
aas
mov
orl
push
int3
pop
popa
fistpll
sti
sbb
push
mov
push
outsl
leave
cmp
fisttpl
fidivrl
sbb
repz
sbb
outsb
in
fsubl
vmread
dec
lods
pop
sub
out
lahf
push
rcl
xor
rcrl
test
add
dec
push
and
xchg
and
xor
inc
inc
push
mov
inc
add
lds
sar
and
outsb
xchg
and
out
fnsave
stc
pop
shrb
mov
cmpsb
pushf
pop
adc
movsl
xor
out
call
mov
test
shrl
or
pop
shr
inc
jle
js
cmp
sarl
push
scas
sub
nop
mov
data16
push
jae
inc
mov
in
inc
imul
mov
pop
xor
out
pop
cltd
adc
cmp
stos
repz
fcmovne
movsl
pop
jge
or
mov
or
test
into
arpl
mov
xor
mov
frstor
add
in
lods
pop
rorl
mov
and
jno
hlt
and
mov
mov
scas
mov
inc
sbb
pop
pop
add
loopne
js
mov
cmc
sahf
aaa
les
xor
lea
shrb
pop
test
push
call
cwtl
scas
xchg
lret
aam
in
movb
dec
adc
test
fcompl
mov
hlt
ficoms
and
push
push
xchg
dec
push
mov
xchg
mov
es
daa
loop
jo
stos
out
in
jecxz
dec
xlat
or
enter
aas
ja
cmpsb
imul
cmp
mov
xchg
jb
loopne
loop
jmp
dec
or
popa
sub
pop
mov
lahf
pop
push
mov
push
out
mov
add
cmp
lret
mov
inc
std
inc
jp
scas
lea
mov
dec
aam
lods
ljmp
subb
dec
dec
stc
repz
hlt
ret
push
jo
aas
jmp
iret
mov
aaa
adc
loope
pusha
sbb
pop
push
test
scas
jle
icebp
mov
daa
out
jns,pt
ja
adc
dec
dec
xor
inc
gs
and
popa
loope
negl
and
xchg
sub
scas
inc
addb
int3
nop
mov
cmp
test
cmpb
pop
lcall
adc
cwtl
ret
sbb
pop
inc
pushf
mov
or
xor
adc
mov
int
aad
sub
fdivl
cli
pop
jp
xchg
sbb
inc
fcmovnbe
jmp
icebp
es
xchg
mov
jmpw
jle
repnz
enter
les
adc
roll
lcall
sbb
push
sarb
mov
lahf
sbb
mov
outsl
js
mov
repnz
sbb
out
ret
incl
pop
outsb
orb
and
in
insl
je
call
loop
out
inc
int3
orb
das
rorb
lcall
jbe
scas
mov
ret
leave
xchg
into
and
in
movsb
in
cmpsb
mov
mov
test
lret
idivb
lcall
into
mov
idivb
fisttps
lods
mov
mov
out
shrb
pmullw
out
repz
pop
das
lahf
jno
jo
imul
nop
inc
xor
cmpsl
arpl
insl
or
sub
repz
inc
mov
lds
cmpsl
andb
test
fucomp
push
aam
mov
popf
cwtl
ds
aas
inc
dec
or
in
lock
insl
fists
shll
add
ficoml
adc
js
das
outsl
xchg
push
xchg
pop
pop
aas
pop
out
push
jno
ret
inc
into
and
int
iret
icebp
sysexit
sub
fisttpll
sub
sub
push
pop
fdivrs
sbb
adc
sub
sub
mov
out
test
cmp
ror
adc
xor
cmp
bound
push
xor
mov
inc
dec
cmp
push
addb
jnp
stos
movsb
lcall
mov
xchg
dec
push
aaa
add
les
stc
sar
jns
push
les
adc
cmc
shrb
stos
dec
hlt
xor
lods
sbb
or
jb
fwait
push
xchg
repnz
inc
push
mov
inc
stos
push
cmp
push
sarb
stos
xlat
mov
fmuls
jp
andl
fwait
xchg
jl
or
or
pushf
adc
into
ret
mov
adc
pop
ja
sbb
jp
dec
dec
cld
add
sub
jl
mov
cmpsl
clc
mov
loop
cmp
nop
lock
jl
jmp
cld
jecxz
push
jecxz
jne
cmp
xchg
rcrb
out
into
test
pop
and
fcompl
fistpll
stc
pop
out
ret
inc
test
pop
mov
pop
xor
scas
mov
hlt
add
dec
mov
addl
pop
pop
add
cltd
fwait
aas
pop
call
aad
jmp
jmp
neg
push
mov
popa
int3
outsl
fs
btrl
jo
pop
cmp
jg
xchg
lahf
mov
std
adc
inc
out
pop
les
push
lahf
stc
fucomi
or
lock
shl
loopne
mov
mov
lret
add
ja
mov
xchg
adc
imul
pop
test
das
nop
inc
sub
jne
mov
adc
cli
mov
inc
mov
dec
xlat
xlat
sbb
std
pop
aas
addb
inc
mov
test
mov
pop
int3
rcrb
in
mov
mov
cmp
cwtl
insl
add
mov
xor
aad
pop
jmp
es
rcll
fwait
inc
adcb
pop
arpl
add
xor
loopne
loop
jnp
xor
cli
lret
mov
addl
jno
mov
or
sub
cmpsl
in
xor
lods
or
fwait
test
jno
sub
unpckhps
das
mov
add
add
push
std
xchg
add
out
idivb
fnsave
bound
aas
lock
movsb
aaa
adc
jne
push
xchg
push
ret
xor
popa
and
out
jge
scas
pop
fcomi
jg
mov
xchg
orl
or
loope
leave
xchg
pushf
inc
dec
orl
jnp
jge
push
jle
cmp
xchg
ds
xor
xchg
dec
scas
jbe
rclb
jnp
inc
push
dec
cs
jmp
jl
data16
jo
dec
sub
push
ficoms
xlat
fmuls
add
adc
cmc
pop
out
in
arpl
sbb
lea
es
adc
int
in
mov
and
clc
jle
mov
fs
pop
cmp
int3
repnz
push
addr16
aam
dec
mov
ret
repz
mov
imul
sbb
mov
call
mov
adc
jp
ljmp
daa
shlb
add
ror
lret
push
fldenv
rcll
pmuludq
repnz
fildl
shrb
push
jp
adc
adc
cltd
inc
test
shrb
insb
and
mov
inc
xchg
jmp
mull
mov
inc
ljmp
jns
dec
and
sbbb
pop
imul
lods
cmp
stc
fnstsw
sub
add
ljmp
in
addl
push
jae
inc
lock
int3
and
push
adc
popa
sub
pushf
stos
cmp
jbe
ret
jle
add
test
push
jno
adc
cmp
ds
inc
outsl
dec
popa
add
dec
fdivrl
jno
pusha
push
cmp
fstpl
mov
fnsave
cmp
jns
pop
and
into
scas
nop
pop
mov
mov
ss
pop
cmp
sar
rol
adc
rcrb
sub
test
stos
inc
fisttpll
and
jmp
cmpsl
mov
loope
int3
push
jae
inc
and
mov
mov
lds
lret
dec
xor
cwtl
ret
clc
fdivl
or
repz
add
sub
fcompl
testb
xchg
or
aaa
in
mov
jne
es
divb
mov
or
inc
sbb
push
adc
lcall
loop
inc
mov
enter
gs
pop
pop
test
xor
push
pushl
jnp
lret
neg
mov
lret
adcl
mov
shlb
rcll
data16
iret
jp
adc
pop
jge
jp
mov
cmp
sub
push
pusha
adc
or
mov
mov
scas
sahf
stc
inc
in
jge
mov
es
outsl
aad
adc
dec
and
push
loopne
mov
sarl
or
cmp
out
mov
mov
and
add
xchg
js
sub
mov
rolb
fmuls
or
mov
iret
daa
adc
push
ds
and
add
pusha
add
aad
ret
cmp
inc
push
ficoml
sub
jne
sub
dec
imul
xchg
mov
ja
test
or
icebp
fwait
sbb
pop
sbb
pop
cmp
jmp
xlat
sub
ljmp
xor
dec
cwtl
sub
shrl
jge
jb
std
xchg
or
cld
cmpsl
jl
pushf
stos
inc
pusha
xor
jne
test
sbb
dec
arpl
xchg
add
mov
jno
int
dec
pop
mov
cmp
jno
cltd
sub
je
push
cmp
aad
out
jnp
fsubrs
jns
aam
xchg
jg
add
outsl
in
aaa
popf
cmpsb
lcall
int3
neg
mov
mov
test
or
pop
xchg
lahf
jbe
dec
sbb
repnz
pop
push
loopne
cmp
stos
jbe
out
ja
aam
xor
leave
orb
xchg
loopne
sbb
and
dec
les
add
iret
push
cmp
jb
or
inc
mov
inc
xchg
dec
sub
mov
imul
decl
cmp
movsl
push
ret
pusha
jno
mov
xor
orl
sahf
push
jecxz
movsl
or
imul
mov
dec
mov
cwtl
in
dec
pop
enter
insl
loopne,pt
xchg
adc
lds
cltd
imul
jg
gs
test
out
xchg
in
popf
adcb
cs
and
pop
xchg
inc
and
xor
repz
int3
lret
mov
xor
gs
jne
test
xchg
movsl
cs
lds
jle
outsb
cmc
sahf
add
scas
xor
gs
jne
test
xchg
movsl
cs
lds
jle
outsb
cmc
sahf
add
xor
inc
into
ds
popa
out
jne
test
xchg
movsl
cs
jle
outsl
adc
shrl
in
mov
jp
aas
xchg
movsl
cs
lods
sbbl
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
rcl
pushf
push
ficompl
fsubrl
rorb
add
push
add
mov
test
xchg
add
and
push
or
rolb
jbe
mov
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
jb
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
or
das
add
add
int
sbb
dec
add
add
add
lret
add
in
or
or
jbe
pusha
add
add
add
add
push
add
add
add
add
jbe
push
add
sub
inc
add
add
add
add
add
roll
add
add
add
add
ret
add
fadds
jmp
add
add
add
add
add
aam
push
add
add
cwtl
pop
push
add
add
jb
jbe
outsb
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
ja
jbe
in
add
add
push
add
add
add
add
add
addl
add
add
add
add
or
insl
add
add
add
sbb
push
add
cmp
push
add
add
add
mov
add
add
cmp
cmp
or
or
insl
add
sub
cs
add
add
add
add
add
add
pop
xor
cmp
add
add
sub
add
inc
add
add
imul
add
or
das
add
add
mov
addb
add
add
add
add
add
add
mov
add
add
add
inc
add
add
cmp
sbb
sub
roll
or
dec
add
add
add
add
insb
add
add
add
add
pop
add
add
inc
add
dec
add
ret
add
add
add
add
or
mov
jbe
call
add
add
push
add
add
add
jne
test
add
add
add
or
push
add
add
add
filds
push
add
cltd
add
jo
ljmp
add
pop
aas
add
adc
sbb
jae
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
ret
add
movsb
add
and
mov
jbe
pushf
add
add
add
add
add
pushf
add
add
xchg
add
stc
add
or
sub
mov
pop
xchg
add
pop
aas
add
add
add
add
add
add
mov
or
addb
add
add
add
add
add
add
cmp
sbb
mov
in
movl
or
add
add
add
add
in
add
add
add
add
add
pop
add
rolb
in
or
add
add
movl
add
addl
add
inc
add
add
add
sti
jb
or
ljmp
xor
mov
popa
xchg
push
leave
xor
and
mov
mov
sbb
loopne
stc
jmp
pop
repz
push
imulb
or
int
lock
rol
imul
push
pop
mov
add
int
fmuls
arpl
lods
repz
aas
inc
dec
push
mov
lret
and
push
inc
push
test
pop
inc
pop
and
fbld
mov
xchg
and
mov
xchg
mov
cld
imul
push
or
xor
dec
lret
sbb
out
jno
lock
and
inc
lret
and
mov
nop
es
xchg
popf
inc
mov
or
fldl
mov
and
push
jb
push
add
jno
sahf
rclb
pop
sbb
scas
fisubrl
pop
lahf
mov
sub
aad
push
mov
xor
jl
dec
lahf
push
icebp
mov
mov
repnz
jge
mov
jecxz
test
stos
int
inc
mov
pop
xchg
push
mov
mov
dec
xchg
in
inc
addb
add
pop
mov
mov
lcall
pop
inc
scas
xor
mov
data16
scas
mov
pop
xchg
dec
out
sbb
pop
jge
inc
mov
movsb
pop
je
mov
into
punpckhwd
fidivrl
pop
and
or
lock
std
xchg
out
rclb
xor
cmp
shll
cmp
inc
inc
pop
mov
sub
lods
push
imul
push
pop
cmp
orl
std
imul
mov
xchg
adc
mov
push
sub
mov
fldt
movsl
sbbw
popf
cmp
jbe
cmp
mov
jns
add
xor
fmul
jo
inc
dec
lret
xchg
int
mov
test
sti
inc
aas
flds
leave
in
aam
arpl
inc
xlat
cmp
jb
outsl
ret
fcmovnbe
xor
rcrb
jae
or
adc
inc
or
in
ret
rcrl
adc
decb
loope
scas
sub
aam
jmp
jmp
sub
stc
inc
add
popf
test
aad
or
popf
mov
scas
and
sbb
mov
pop
shrb
xor
rorb
sub
jp
mov
pop
sub
or
inc
jle
in
ds
and
pop
sub
dec
cmp
imul
inc
push
or
jg
pop
and
push
insb
add
shrl
sub
cmpl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
