call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
stos
inc
xchg
mov
mov
fwait
and
jno
arpl
inc
sti
inc
jmp
sbb
sub
pop
loope
sarl
pop
and
bts
push
lret
push
mov
mov
sub
addr16
ja
xchg
shll
add
dec
in
fdivs
push
mov
fcomps
into
gs
dec
idivl
insb
loope
adc
mov
cwtl
fidivl
cwtl
jns
jmp
daa
pusha
inc
mov
pop
sbb
popa
cmp
mov
cmp
mov
mov
push
cli
mov
push
bound
movl
pushw
fimuls
sub
mov
jno
popf
lret
push
cmp
mov
mov
pop
sub
and
add
mov
mov
push
mov
popa
xor
adc
loope
sub
sbb
popa
scas
push
jg
push
pushf
jae
imul
out
adc
mov
push
adc
fildl
sub
push
sbb
enter
xchg
into
fwait
lods
jecxz
inc
push
mov
fidivl
xor
sti
inc
outsl
js
mov
and
pop
icebp
dec
shll
cmp
stos
sbb
imul
inc
test
dec
les
hlt
js
add
pushf
adc
push
xor
dec
into
iret
gs
add
and
rorb
icebp
push
popf
xor
js
adc
inc
fstl
fiadds
jno
or
aam
int
std
imul
mov
jnp
imul
and
jno
popa
lret
push
sti
inc
jmp
sbb
sub
pop
loope
sarl
imul
and
jno
popa
lret
push
sti
inc
jmp
sbb
pop
popf
ret
shll
popa
jecxz
fstpl
mov
das
jl
mov
out
mov
ja
sub
jne
ffree
loope
ficomps
push
test
xlat
icebp
fwait
and
fs
mov
sarl
ja
or
js
movsl
outsb
iret
aam
xchg
loopne
dec
pop
je
insl
push
sub
sbb
pop
sbb
sbb
aam
jno
cmp
scas
ret
and
add
fs
cmp
arpl
mov
mov
icebp
push
mov
xor
out
ljmp
arpl
clc
xchg
sub
in
fwait
dec
dec
aaa
pushf
xor
ret
add
movsb
test
std
ret
sbb
mov
pop
sub
fldenv
or
dec
mov
push
push
popf
lret
aam
jnp
mov
mull
xor
jae
mov
adc
fs
enter
fwait
jle
mov
inc
int3
mov
cmp
cmp
scas
inc
in
test
dec
aaa
pop
nop
sbb
loope
inc
dec
enter
adc
stos
faddl
dec
loop
add
dec
push
jns
mov
leave
mov
in
loope
and
pop
mov
dec
mov
adc
mov
jmp
mov
fcmovne
outsl
data16
loopne
push
and
daa
push
das
xchg
out
adc
data16
fwait
sbb
shl
cs
mov
inc
bound
fimuls
es
add
cwtl
out
sub
inc
lret
xlat
outsl
dec
xchg
ja
gs
dec
xchg
dec
negl
pop
inc
jmp
imul
imul
xchg
sbbb
push
mov
xchg
out
jl
cmp
rcl
icebp
divb
xchg
push
pushf
xor
pop
pusha
inc
ret
cwtl
mov
mov
or
test
lcall
sub
and
xchg
mov
bound
xchg
mov
lahf
push
int
shll
cmp
lds
adc
dec
mov
out
incb
rorl
mov
fnsave
pusha
inc
push
xchg
mov
rcll
insl
shlb
enter
decb
lods
xchg
aaa
add
popa
loop
cmp
xchg
and
jo
jmp
and
pop
or
or
or
push
ret
mov
xor
dec
iret
ja
sub
lock
into
jo
ret
movsb
mov
add
inc
add
push
and
scas
stos
dec
int3
cmpsl
mov
lds
imul
or
and
lret
lea
add
cmp
inc
je
push
xor
and
and
xchg
lret
sbb
and
imul
jno
adc
cmc
lahf
out
jb
rcrl
loop
push
js
inc
ret
rcrl
pop
pop
test
icebp
push
fmull
dec
sub
fcompl
inc
jne
sbb
mov
or
shrl
aad
xor
cltd
push
pop
cmpsb
inc
stos
pusha
clc
addl
mov
es
jmp
pop
test
and
xor
out
jl
inc
lods
icebp
add
popa
fldt
rcrb
jns
mov
mov
sub
sub
nop
adc
sti
lock
xlat
out
fwait
bound
cwtl
jl
adc
mov
lods
push
push
fnstenv
adc
dec
cmp
dec
subl
imul
pop
mov
fdivrl
in
rcl
mov
push
add
pop
lods
jo
jnp
mov
push
pushf
fldt
in
ljmp
mov
xchg
adc
jbe
ss
rcl
shl
in
xchg
mov
jbe
cli
mov
mov
mov
jae
or
loopne
add
not
inc
icebp
dec
je
lahf
rcll
mov
xchg
aad
das
push
inc
jb
cmp
ret
js
add
push
imul
lods
scas
testl
push
imul
sbbb
mov
and
mov
lock
test
popf
dec
mov
push
outsb
bound
nop
mov
jmp
add
in
mov
inc
rcrb
and
stc
in
and
jnp
sub
dec
xor
pushf
mov
jle
imul
jb
sbb
negb
aad
add
sbb
mull
sbb
add
int3
cmp
push
ret
or
cmp
sub
mov
fnstcw
push
or
fists
add
jne
push
xor
mov
cmpsl
addr16
adc
push
rorl
mov
mov
push
das
mov
xchg
or
imul
in
fstpt
stc
or
lock
add
jmp
arpl
cli
fnsave
mov
sbb
jg
leave
sub
mov
cmp
cld
test
add
dec
add
pop
mov
int3
ret
pusha
add
lahf
mov
adc
repz
leave
jg
adc
rorl
push
imulb
sahf
xlat
or
mov
imul
mov
pop
or
push
js
stos
jb
pop
and
add
das
popl
pop
loope
aam
pop
jg
add
mov
lcall
cmp
xchg
nop
or
pop
aad
loop
mov
mov
lret
es
out
push
ss
out
and
addr16
dec
in
rcll
fildll
mov
push
leave
popf
lods
add
lods
mov
je
fcompl
inc
out
xchg
sbb
mov
jnp
stc
adc
pop
pop
mov
jns
dec
std
aaa
and
insl
dec
faddp
xchg
insl
mov
inc
pushf
xor
mov
jmp
sbbb
and
xchg
lock
popf
arpl
jnp
or
jbe
and
sbb
andnps
xchg
xor
fcmovnbe
data16
lahf
cwtl
mov
add
add
add
cwtl
sbb
insb
xorb
or
shr
test
test
pop
out
jg
ret
lock
aam
and
sub
inc
sbb
adc
out
xchg
pop
mov
es
jbe
aas
mov
sbb
adcl
in
rol
push
sub
data16
cmp
dec
push
stos
inc
inc
cmp
sbb
xor
leave
pushf
or
ljmp
add
cltd
ds
push
mov
fimull
and
lret
icebp
lods
rclb
popa
xor
xchg
sub
pop
cmp
mov
icebp
push
rorl
xor
pop
sbb
xchg
adc
lea
notl
jmp
stos
gs
gs
dec
mov
loop
pop
lcall
in
and
call
popa
pop
test
mov
insb
aaa
test
pushf
in
shll
repz
dec
or
and
ret
int3
pop
jp
cs
fs
sbb
cmp
pop
mov
dec
jbe
cmc
in
pop
mov
xor
das
icebp
inc
cli
xbegin
sub
es
bound
xor
jne
mov
jl
push
inc
dec
inc
push
aam
jmp
jmp
sub
xchg
sbb
popa
adc
sahf
cmpsb
stc
add
adc
aad
pop
in
xor
jecxz
xchg
cmpsl
insl
and
or
cmp
jecxz
ss
pop
add
mov
and
xchg
dec
out
stos
js
mov
int3
loope
dec
jp
xchg
rcrl
mov
mov
lcall
sbb
jg
loopne
incl
pop
movsb
push
fdivrs
dec
dec
addr16
mov
clc
andl
adc
js
push
pop
sbb
stos
fcmovbe
jg
insl
loopne
cwtl
pusha
popf
and
pop
in
push
mov
sub
daa
stos
pop
push
xor
in
neg
ja
push
push
dec
out
lea
adc
outsl
jne
xchg
xchg
pop
in
jmp
cmpb
test
pop
mov
pop
aad
xlat
jnp
xor
mov
and
jns
or
insl
gs
shl
push
xor
fs
nop
cs
dec
jle
rcrb
test
fnsave
daa
sbb
fidivrl
lods
lock
inc
loop
lahf
inc
sbb
sub
lock
jmp
aaa
or
dec
push
xchg
test
jne
aaa
and
xor
xor
testb
nop
movsl
stos
imul
shll
adc
call
sub
xorb
pop
push
imul
adc
push
shll
mov
add
pop
jne
sarb
subl
cmpb
lock
cmpsb
scas
mov
fwait
or
sbb
lods
insb
mov
sbb
das
shl
popf
pop
mov
sub
pop
fnstcw
jmp
dec
cwtl
mov
int3
cwtl
insl
sub
inc
inc
mov
mov
push
outsb
xor
pop
mov
shll
or
add
rol
push
imul
mov
pusha
jae
sbb
push
cmp
hlt
and
push
insb
pop
add
loopne
jno
inc
dec
shrl
orb
lea
jns
mov
sbb
mov
jns
mov
ds
rol
int3
add
sbb
mov
loope,pn
out
in
cwtl
inc
push
mov
pushf
push
adc
mov
inc
dec
call
insl
rorb
jae
lret
dec
ss
shrb
sub
cmp
outsl
push
mov
movsl
es
pop
xchg
lret
and
jg
loope
adc
and
and
pop
fadds
loope
scas
insb
iret
cmp
scas
je
push
mov
fildl
aam
and
dec
inc
into
jne
and
fldl
sbb
or
notb
pop
xchg
loope
sub
sarl
cmp
pop
pop
dec
cmp
mov
mov
pop
pop
xor
sbbl
pop
fmuls
imul
ds
les
and
mov
mov
push
mov
add
out
jg
mov
inc
sub
mov
sbb
xor
jno
shlb
sbb
ret
push
add
jae
repz
shrb
and
fnsave
aad
or
jb
sbb
pusha
jecxz
ljmp
sub
or
push
adc
rolb
xorb
mov
sbb
lcall
rcrl
mov
mov
fsts
sti
cld
mov
xor
jecxz
shlb
xchg
not
cmp
jge
bound
sti
aad
in
pop
out
insl
lds
and
xchg
mov
inc
sbb
ficoml
cld
or
jl
iret
stos
push
xchg
or
add
stc
icebp
int
daa
push
push
add
jns
xchg
cmp
fcmovb
cmpsb
ret
and
outsl
fldenv
cmp
cmp
mov
inc
or
fbld
inc
dec
in
mov
in
loop
cld
push
jae
xchg
mov
loop
push
mov
pop
mov
xlat
pop
jne
adc
icebp
es
xor
mov
sub
rolb
or
mov
jecxz
pop
je
ljmp
fs
cs
sub
push
rorb
enter
inc
cmc
es
aad
mov
into
xchg
dec
lahf
test
jb
in
sbb
aad
add
lcall
xchg
push
das
push
pop
jmp
or
xchg
lahf
ret
fisttps
lret
adc
popf
sbb
test
dec
fdivr
loop
scas
inc
enter
js
leave
inc
cmp
add
push
or
call
cli
fs
daa
jmp
out
inc
sub
cmp
mov
inc
dec
push
xchg
mov
mov
popl
pusha
loop
cmp
mov
cmp
push
idiv
sub
mov
mov
paddw
dec
mov
push
add
dec
pop
adc
cmp
or
stc
push
add
jbe
mov
cmp
insl
and
int
and
xchg
lea
inc
xor
nop
jnp
jle
in
mov
push
mov
sub
getsec
pop
pop
xorl
je
push
xlat
lods
jmp
das
xchg
or
mov
sub
fldt
rep
jl
mov
pop
lock
ret
cmp
sti
std
in
cmp
push
xchg
pop
sub
popa
mov
ror
in
inc
mov
imul
xlat
or
lds
push
lods
movsl
insb
or
mov
loopne
loop
xor
and
cltd
ret
push
adc
test
js
push
xchg
cmp
push
pop
push
sahf
jne
lcall
xchg
cmp
clc
pop
or
mov
mov
cltd
daa
dec
push
jl
mov
xorl
rcrb
in
add
aaa
jmp
add
jecxz
cltd
mov
cs
and
cmp
pop
sub
sbb
pop
jge
or
pop
mov
jcxz
jbe
movl
imul
or
jle
jmp
inc
xor
cmp
gs
dec
dec
xor
push
pop
clc
imul
xor
ret
data16
push
push
rolb
push
int3
jmp
mov
sahf
pop
je
sbb
iret
in
jmp
mov
jmp
out
je
jmp
push
les
mov
cmpsb
push
mov
daa
or
sbb
jbe,pn
test
lds
sbb
pushl
adc
lock
bound
loope
icebp
daa
xchg
sbb
js
and
arpl
push
push
mov
addl
nop
xor
dec
xchg
hlt
and
subl
shll
mov
movsb
pop
std
pop
sbb
dec
and
mov
xor
jle
sub
loopne
jecxz
push
out
mov
mov
gs
movsb
js
sub
pop
mov
fildll
jbe
fstpl
rcll
push
adc
test
sbb
dec
add
mov
push
mov
imul
in
dec
rclb
pop
ret
jecxz
cmp
adc
jns
or
jns
fwait
push
shll
lock
fwait
mov
pop
nop
sub
hlt
add
bound
mov
gs
xor
mov
int3
jne
mov
fwait
xor
cld
mov
repnz
mov
repz
outsb
ret
push
adcb
push
in
mov
lret
cli
push
and
fisttpl
rcll
dec
pop
mov
sub
and
dec
mov
outsb
filds
adc
fists
lds
mov
enter
adc
int3
fistps
push
xchg
imul
xor
js
unpckhps
out
pop
outsb
or
xor
fnstenv
cld
cmp
outsb
jge
fsubrs
mov
pop
and
or
test
xchg
xchg
jmp
sbb
gs
mov
jp
hlt
mov
push
push
loop
and
jnp
fisubl
jp
inc
in
add
fwait
mov
jge
mov
push
and
and
mov
fadds
mov
fistl
sbbl
enter
and
cld
inc
and
or
cmp
dec
lock
sahf
cli
jns
push
and
adc
outsb
movsl
in
mov
ja
out
mov
or
and
cmp
fstps
cmp
ss
fndisi(8087
fwait
dec
hlt
mov
adc
fstpt
jnp
pop
xchg
ja
push
push
out
and
scas
push
je
js
jp
popa
jns
xchg
push
mov
add
lret
lret
mov
sub
xchg
rolb
sbb
cmp
pop
lea
lods
lds
sub
out
mov
add
xchg
mov
int
xchg
mov
sahf
jge
data16
and
bound
testb
or
and
out
xor
cltd
dec
push
inc
leave
inc
adc
in
jecxz
mov
jne
data16
je
lcall
mov
sti
push
mov
mov
adc
cld
and
insl
dec
cmp
mov
outsb
test
stc
add
push
fsubl
mov
jae
cwtl
mov
movsl
nop
sub
add
add
rorb
out
push
sti
fisubrl
rol
adcl
sbb
mov
jno
cs
mov
mov
ret
test
popa
das
add
jp
cmp
mov
mov
rolb
repz
sub
fs
aaa
lds
jae
pop
and
popf
mov
ljmp
xchg
dec
aas
sbb
jae
jg
inc
popa
shll
mov
xchg
cmpsb
dec
jge
sub
arpl
jo
inc
mov
sub
fstpt
fcomps
mov
add
fwait
out
mov
jle
mov
dec
outsl
xor
mov
cwtl
into
pop
mov
xor
aam
out
les
lock
or
js
push
gs
xchg
fwait
div
sbb
test
mov
sbb
je
rorb
dec
clc
jp
dec
fidivs
push
out
aaa
mov
jb
xchg
jbe
test
iret
xchg
dec
and
in
out
pop
jle
outsl
decl
std
xor
jns
or
cmpsl
leave
inc
jecxz
aad
jno
lcall
jle
or
shr
xor
sub
lods
add
pushf
and
fcompl
mov
insb
daa
mov
mov
outsb
dec
and
movl
sub
cmpsl
pop
in
call
inc
xchg
and
clc
xchg
gs
cmp
into
cmp
loope
sbb
and
dec
mov
rol
insl
xor
rorb
mov
push
push
sub
sbb
repz
add
xchg
lods
daa
fistl
or
aas
xor
jle
push
mov
mov
or
jo
stos
add
jbe
mov
les
scas
es
adc
mov
or
sub
sahf
les
inc
in
mov
mov
jle
mov
imul
insb
or
xor
sub
jne
movsb
hlt
fsubr
test
data16
lret
mov
stc
sub
sti
dec
insl
fsts
and
subl
jb
lcall
sbb
aad
mov
imul
jno
mov
fstpl
fcmove
lods
pop
mov
test
sub
inc
pop
xor
jp
std
lcall
and
je
adc
bnd
jo
mov
aam
xchg
pop
xlat
sub
cmpsb
pop
cltd
sahf
lcall
or
jno
mov
dec
push
je,pn
xchg
inc
mov
rcr
loop
sahf
call
jns
cmpsb
rcrl
sub
push
lods
sti
mov
dec
nop
es
enter
mov
cmpsb
cltd
or
clc
out
adc
push
add
ljmp
aaa
cwtl
jmp
xor
repnz
stos
add
cmpsb
mov
nop
cmp
jg
push
sbb
je
into
cmpsl
sub
cmc
call
scas
pop
push
or
cmpb
mov
ss
mov
dec
mov
mov
adc
add
out
fs
lcall
rcll
js
outsb
ficomps
dec
sub
dec
jl
or
dec
test
and
aad
int3
adc
mov
push
adc
inc
data16
adc
sub
scas
mov
and
in
lds
dec
sub
jge
inc
or
fdivrp
cli
jae
cs
int3
sbb
and
xchg
daa
dec
pop
add
jmp
in
ss
shll
mul
jmp
xchg
leave
insl
sti
mov
lods
push
mov
adc
testl
scas
ja
push
adc
mov
and
or
mov
cltd
jae
dec
inc
add
paddq
icebp
mov
pop
xor
in
jmp
lahf
pop
push
outsl
mov
fwait
xchg
movsb
jmp
imul
pop
mov
mov
pop
into
lock
fisttpl
mov
pusha
pop
or
cli
loopne
inc
cld
adc
je
dec
inc
adc
scas
lods
mov
mov
dec
in
mov
sub
sahf
push
pop
mov
dec
dec
shll
mov
jnp
or
xlat
mov
icebp
push
add
dec
icebp
es
cltd
and
out
lock
adc
movsl
xchg
lahf
cmp
lahf
cmp
addr16
and
push
popl
sbb
adc
ljmp
les
pop
push
cld
mov
adc
mov
arpl
aad
popa
shrb
mov
mov
insl
dec
outsl
pop
popf
arpl
mov
add
dec
orb
int3
push
scas
das
pop
jle
ds
addr16
ja
clc
pop
mov
push
movsb
stc
push
mov
mov
das
or
pop
mov
xor
xor
fidivrs
mov
pop
push
sub
test
fwait
push
subl
sarl
imul
and
jno
popa
lret
push
sti
inc
jmp
sbb
sub
pop
loope
sarl
imul
and
jno
popa
lret
push
sti
inc
jmp
sbb
sub
pop
loope
sarl
imul
and
jno
pusha
lret
push
fildl
mov
mov
sub
pop
loope
push
sti
inc
imul
fisubs
mov
push
jmp
adc
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
jle
decb
cmp
sahf
sub
pop
cli
dec
outsb
pop
jle
dec
lea
das
fdivrs
and
std
push
in
out
sbb
fisubrs
mov
inc
outsb
popf
jle
das
mov
lods
cs
std
push
in
out
mov
ficomps
insl
mov
pop
outsb
popf
jle
das
fdivrl
fisttps
push
stos
cs
jno
sahf
pop
decb
mov
push
sahf
mov
lods
lods
out
push
jge
inc
decl
inc
and
xchg
cmpsb
mov
dec
lahf
shrb
sub
sbb
jno
inc
sar
ror
rcll
jne
push
shll
mov
mov
jmp
outsb
pushf
cs
sbb
xor
sbb
xor
outsb
mov
mov
lods
into
enter
add
adc
add
popf
ror
inc
outsb
mov
mov
ficompl
pop
pop
pop
jge
push
fmuls
loop
repnz
dec
pop
std
dec
adc
jbe
pop
insb
xchg
into
test
cmp
pop
mov
mov
adc
xchg
dec
fisubrs
mov
ljmp
jle
dec
mov
and
in
fistps
push
nop
inc
in
clc
leave
or
sub
fmulp
std
and
cmp
pop
lcall
mov
mov
inc
lret
pminub
mov
pop
cmp
adc
ss
cmp
pop
cwtl
add
lods
push
incb
adc
insl
outsb
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubrs
mov
insl
outsb
popf
jle
dec
mov
ds
std
push
in
out
sbb
mov
fnstsw
mov
cld
aam
push
jns
daa
test
cmp
adc
pop
int3
or
shlb
xchg
jne
ret
sbb
dec
adc
xor
sub
and
jae
add
pop
xor
mov
stc
stos
sbb
xlat
test
es
add
fst
push
fsubrs
xor
pop
imul
sbb
sub
dec
sahf
mov
popf
ret
push
aam
xchg
aam
xor
dec
xchg
mov
inc
movsb
lods
mov
pop
ret
push
sar
mov
loope
insb
notb
in
mov
or
xchg
pop
jge
pop
lahf
cmpsb
push
out
bnd
test
inc
enter
aas
cmp
pop
sbb
jg
xor
inc
push
pusha
jb
dec
push
aad
movsb
or
out
add
pop
movsb
repz
cmp
sub
jno
lret
scas
ret
pop
popl
xchg
sub
mov
gs
int
jno
cmp
mov
out
push
xor
jb
outsb
push
lock
call
bound
mov
sub
aam
xlat
xchg
dec
lahf
repnz
mov
imul
xchg
out
pop
adc
popf
mov
dec
iret
es
inc
sbbb
jno
xchg
rcrl
inc
repnz
out
ja
daa
stc
mov
ret
addr16
fs
cli
popf
add
adc
mov
adc
fidivrs
pop
iret
adc
cmpsl
stos
lret
imul
xchg
jmp
test
sarl
xor
mov
hlt
call
fnstsw
pop
or
iret
aas
sbb
pop
pop
popa
mov
stos
dec
mov
sbb
aaa
ret
inc
daa
mov
xchg
fisttpl
cmpsl
inc
adc
jmp
push
or
or
test
lcall
pop
arpl
imul
movsl
es
mov
jmp
jno
mov
das
pop
aas
popa
les
jle
adc
fst
data16
cld
sub
or
add
cld
push
jbe
inc
xor
mov
jecxz
dec
mov
jae
add
adc
leave
popf
adc
mov
xchg
mov
cwtl
inc
xchg
xor
add
inc
jo
sbbb
aad
pop
jmp
testl
mov
in
leave
adc
rclb
arpl
xor
pushf
cli
int3
lcall
inc
roll
ret
in
cltd
or
test
arpl
fcoml
jnp
mov
and
push
dec
imul
inc
ljmp
loop
fscale
imul
std
pop
popa
sbb
cli
js
daa
push
dec
sub
sarb
xchg
nop
aas
sub
fs
push
je
adc
push
and
cmp
or
les
fisttpll
dec
and
idivl
popf
lods
mov
mov
int
dec
mov
fwait
stos
rcrl
and
push
aas
fs
insl
les
mov
mov
iret
mov
cmp
sahf
mov
rol
mov
ds
fwait
pop
cmpsb
push
lods
ljmp
inc
ja
jo
in
mov
orb
push
push
xor
test
lahf
mov
jo
repnz
aam
insl
cmpsl
es
jg
addr16
fldcw
mov
aad
sbb
cmp
sarl
or
lea
shrl
xchg
test
int
add
ljmp
xchg
and
test
stos
mov
ss
dec
sti
popa
data16
daa
rolb
addr16
jp
sub
xchg
push
dec
push
mov
icebp
std
pop
gs
movl
xchg
mov
mov
sbb
test
cwtl
mov
lds
arpl
cld
movsl
ja
xor
sub
pop
push
mov
mov
sbb
mov
cmpsb
inc
mulps
jle
ss
jg
cltd
fisubs
ficoms
jle
sub
xor
fldenv
or
into
mov
push
pop
add
frstor
cmp
sub
jb
inc
sahf
ds
out
movsb
mov
test
and
pop
mov
sbb
repz
in
push
aas
and
mov
pop
mov
xchg
adc
lcall
fwait
dec
adc
cmpsl
xchg
adc
xchg
into
jbe,pt
rorb
mov
shlb
xlat
rol
mov
outsb
jecxz
lods
insl
xchg
mov
dec
cli
inc
inc
mov
popa
incl
lods
dec
push
mov
shlb
imul
outsl
repz
lods
mov
and
aaa
test
js
repnz
and
stos
mov
lds
dec
int
mov
aas
stos
hlt
out
shrb
xchg
shrl
adc
xor
xchg
popf
xor
js
loopne
or
adc
das
add
dec
lea
mov
inc
icebp
mov
pop
mov
insl
cmp
mov
xchg
xchg
inc
test
fstp
xchg
push
push
adc
vphaddubw
call
fdivrp
pop
popf
inc
push
pop
jns
xchg
jle
inc
movsb
sub
pushl
inc
shrl
jmp
sar
movsl
dec
xchg
rorb
add
js
ficoms
pop
fmul
bound
or
dec
mov
pop
xlat
pop
sbb
pop
jne
out
xlat
movsl
jb
push
ss
test
lea
mov
or
add
or
xor
sbb
pop
out
or
and
xchg
push
cmp
insb
scas
test
jo
popl
cmp
out
inc
std
dec
stc
mov
sbb
xchg
jg
add
sahf
sub
and
mov
int
and
stos
dec
add
push
addb
add
xchg
es
daa
lock
sbb
shll
call
or
stos
enter
mov
repz
xchg
mov
and
dec
movsl
jo
adc
inc
mov
add
fucom
pop
inc
push
mov
push
testb
scas
inc
adc
imul
sbb
fldenv
inc
das
jbe
dec
add
pop
mov
mov
xchg
push
jg
adc
movsb
lea
mov
push
jecxz
daa
add
sahf
cli
gs
push
fmuls
pop
push
mov
iret
mov
xor
inc
stc
cmp
inc
mov
ja
mov
jo
or
scas
xlat
push
jo
dec
xchg
inc
or
fadds
jo
dec
mov
jnp
pop
mov
push
repz
xor
test
out
sub
mulb
cli
daa
lock
mov
push
jne
xchg
shll
jne
insl
add
pop
aaa
mov
int
dec
loopne
pop
adc
sub
loopne
sbb
push
mov
fidivl
xor
mov
and
xor
dec
or
dec
push
insl
shll
pop
shrl
pop
out
xchg
mov
nop
cli
js
ljmp
iret
cmp
and
stos
ss
std
lret
out
enter
and
push
inc
test
out
mov
loope
fwait
adc
inc
inc
das
fdiv
dec
mov
repnz
mov
call
jl
add
jns
or
cmpsb
pop
cmpsl
call
push
lds
mov
outsb
js
dec
stos
pop
stos
sub
cltd
mulb
shll
fcomps
hlt
adc
add
fstl
and
or
xchg
shll
pop
imul
and
mov
jl
mov
pop
sbb
xor
pop
in
pop
aam
shr
push
mov
out
xchg
out
pop
mov
das
jecxz
lds
mov
mov
loopne
lds
add
mov
fwait
arpl
pop
pop
or
fisubl
sub
sbb
push
jae
icebp
pop
xlat
dec
or
inc
inc
int3
test
scas
call
pop
jmp
pop
fidivl
jmp
mov
xor
movsb
add
push
aad
cmc
das
jns
xor
ds
jmp
clc
mov
imul
rcrl
xchg
push
xor
rorb
xor
out
andps
push
decb
lahf
lds
repnz
push
popf
lcall
std
call
orl
mov
stos
in
fistpl
pop
rolb
cs
push
and
lcall
mov
rcrb
cmp
jge
xlat
rorl
sahf
jne
push
in
cmp
mov
mov
inc
xchg
fldl
sub
pop
mul
pop
jne
or
jle
mov
imul
mov
mov
call
xor
jp
dec
jnp
cmp
mov
shll
jg
ljmp
test
ret
lahf
shl
pop
movsb
xchg
sub
adc
loopne
movsb
xor
cld
push
jg
sbb
mov
adc
aad
dec
negl
sti
mov
xchg
jbe
lds
mov
cltd
pop
clc
push
sbb
sbb
and
cltd
pusha
xchg
and
or
stos
mov
movsb
adc
pushl
xchg
adc
test
or
mov
add
clc
ret
xchg
cmp
iret
mov
cmp
ret
and
adc
or
adc
bound
cmpsl
idivl
hlt
inc
int3
jns
inc
pop
insl
jecxz
jne
push
popa
rcl
and
sub
fsub
xchg
lds
lds
icebp
lock
xchg
ss
cmp
icebp
mov
adc
push
cmp
loope
shll
in
cltd
fs
je
lods
xchg
mov
cmp
jae
or
mov
lahf
sub
inc
stos
cmp
jae
dec
jge
and
int3
pop
into
fidivs
sti
jnp
ret
mov
dec
outsl
xchg
jno
outsb
add
cmpsl
sub
mov
and
sbb
fs
jecxz
inc
dec
jge
xchg
pusha
test
mov
jbe
mov
addr16
add
sbb
shrb
add
add
insl
adc
fst
out
shrb
push
hlt
fstl
ja
out
insl
call
jmp
mov
ljmp
ss
mov
in
pop
xlat
cltd
jns
mov
sti
xchg
in
inc
subb
fcmovne
imul
addl
std
ret
mov
sub
lret
int3
ljmp
shrb
adc
jo
popf
dec
adc
add
lcall
int
inc
mov
call
imul
out
xbegin
adc
loope
adc
push
stos
pop
sbbb
pop
and
shl
loope
and
lds
mov
push
xor
repnz
fwait
dec
sbb
adc
adc
sarb
or
outsb
jae
push
and
and
popf
cmp
sub
shrb
jg
sub
mov
in
push
sub
mov
xor
push
inc
pop
xchg
mov
ds
push
xor
cmp
jmp
xor
popa
pop
jp
jmp
ret
mov
in
cmpsl
leave
lds
cmp
lock
test
mov
push
scas
imul
in
xchg
test
enter
lods
inc
mov
dec
mov
add
or
jb
xor
aam
clc
stos
cmp
lret
test
lcall
lahf
mov
ficompl
or
pop
addb
push
movl
aaa
jo
ljmp
pushf
inc
mov
cmpsl
or
ljmp
inc
jae
push
dec
aad
icebp
dec
out
out
inc
dec
ss
mov
xchg
imul
push
shrl
pusha
lds
xor
sbb
jmp
jmp
inc
push
cmp
and
cwtl
fsubrp
shll
mov
xchg
xchg
adc
cmp
shll
cmp
adc
ja
push
enter
push
cmp
pusha
sahf
ds
push
push
in
dec
clc
addr16
insl
in
sub
xor
fdivs
out
sti
sub
pop
xor
into
cmp
adc
dec
hlt
dec
jle
dec
pop
enter
popa
sti
pop
fscale
mov
in
aaa
rolb
test
pop
cmpsl
pushf
add
add
pusha
and
lds
popf
dec
sbb
add
out
cmp
push
mov
mov
inc
outsb
xor
xor
jns,pt
pop
out
inc
xor
jg
cmp
inc
out
mov
addr16
lods
push
lea
fwait
arpl
clc
inc
jg
pop
mov
and
add
fbstp
cld
or
push
push
es
or
and
sub
xchg
pop
pusha
dec
xchg
jo
cmpsb
shlb
out
iret
xchg
sbb
mov
subl
sbb
fucomip
cmc
sub
xchg
push
int3
sti
push
clc
or
aaa
out
push
add
pop
ljmp
fnstcw
mov
bound
jne
xchg
or
test
fildll
into
mov
add
mov
pop
fucomi
jp
mov
lea
pop
adc
jno
in
les
in
fs
ljmp
sbb
or
cmc
jecxz
add
insl
mov
fcomps
cmp
int3
out
rcl
into
cmp
out
sbb
jae
lahf
mov
xor
push
mov
push
xor
push
aas
insl
cmp
lods
bound
hlt
imul
add
rcr
sbb
lret
push
cmp
lods
out
cmp
mov
add
dec
daa
jno
mov
add
enter
lret
cmp
fadds
xchg
lock
xchg
mov
or
ret
pop
cmp
mov
ss
or
or
das
call
mov
xchg
rol
push
outsb
mov
sub
mov
push
nop
call
call
or
and
dec
dec
cmc
jns
cltd
movsl
pop
test
lds
or
fwait
add
mov
dec
flds
gs
fcoms
inc
cwtl
xchg
outsl
sub
xorb
mov
shrb
cmp
add
loope
jno
sarl
cmp
mov
int3
mov
sub
adc
jecxz
and
push
adc
call
sbb
cmp
mov
fistpl
icebp
adc
jmp
icebp
sti
jns
inc
fnstcw
ret
jns
mov
mov
jge
push
sub
add
pop
mov
outsb
das
adc
pop
dec
sub
pusha
lock
push
sbb
jo
or
jg
push
xchg
mov
and
push
stos
mov
frstor
mov
sub
jns
outsb
popa
notl
cltd
lods
fldt
daa
add
cmp
add
fbstp
pushf
pop
jo
js
add
inc
hlt
cmc
mov
and
insb
cltd
subl
fs
xor
mov
mov
dec
testb
iret
push
cltd
mov
jg
sarl
in
int3
sarl
cmp
arpl
push
add
xchg
or
andb
jg
stos
sahf
testb
xchg
cmpl
nop
sub
push
push
ret
jecxz
inc
popf
or
mov
fidivrs
fcmovnb
jmp
push
jecxz
cmp
xchg
mov
push
inc
mov
push
mov
negb
lods
lret
test
hlt
mov
aam
outsl
mov
aam
add
push
test
sub
fidivrl
xchg
cmp
add
lea
sub
add
imul
cmc
mov
jge
adc
enter
out
mov
sbb
lea
cltd
popa
nop
loope
adcb
jno
xlat
scas
add
lret
jne
push
outsl
sar
ret
lea
lret
add
inc
jno
ja
cmp
sub
mov
push
jnp
and
pop
test
pop
pop
push
test
pop
or
or
imul
stos
xchg
pusha
test
dec
push
lea
fsubp
adc
cmp
in
ljmp
lds
jl
sahf
clc
lea
xor
sub
pop
add
outsb
pop
push
test
inc
or
cmp
push
dec
dec
and
sub
lock
sub
inc
lret
push
std
hlt
idivl
and
push
mov
pushf
adc
rclb
fldl
test
lret
aam
outsl
lcall
cmpsb
jbe
movsb
mov
push
sbb
ss
cmp
sbb
sub
lds
mov
xor
aas
bound
insl
add
xchg
lahf
xor
add
jl
pop
xor
add
lret
cwtl
addb
ret
in
cmpsb
mov
sbb
cmp
pop
mov
sub
ja
aaa
popa
inc
pop
pushf
aad
push
bnd
sti
pop
cmp
xchg
jae
xor
fwait
lea
jmp
sub
ficompl
push
jb
aas
or
repnz
test
pop
push
inc
test
scas
cmpsb
xor
imul
or
in
fmull
outsb
iret
js
sahf
xchg
aaa
mov
xchg
aam
push
lock
jle
lods
leave
ftst
add
jnp,pn
nop
xchg
addr16
mov
int
cli
ss
mov
cltd
scas
xchg
pop
dec
fs
xor
insl
and
inc
pop
jno
mov
push
adc
adc
add
and
jle
xor
negl
push
outsb
push
or
movsl
fldl2e
xchg
cmp
fs
repnz
out
decl
fwait
lcall
out
push
stc
in
ss
xorl
lea
lret
enter
pop
mov
daa
addr16
sahf
adc
das
lret
test
cmpsl
data16
adc
pop
or
jmp
push
dec
lahf
and
aad
int
or
in
jmp
mov
pop
loop
test
fyl2xp1
fistps
push
push
push
testb
ret
int
test
cmp
mov
jnp
xchg
push
or
mov
push
sub
xor
bound
test
flds
imul
pop
xchg
ds
icebp
cmp
vmovsldup
fcmovnbe
sub
add
add
xchg
das
int3
pop
dec
push
push
stc
mov
jae
fldcw
into
ror
in
xchg
das
sub
inc
mov
sub
jle
jo
mov
or
frstor
lret
sbb
test
loop
aad
xchg
dec
cmp
icebp
dec
rclb
push
pop
xor
xor
adc
cli
add
jae
stos
outsl
or
pusha
clc
mov
aaa
inc
popf
in
orb
inc
mov
pushf
jo
cmpsb
or
pop
mov
mov
outsl
lods
xchg
lahf
shlb
mov
xchg
insl
sbb
call
int3
lcall
mov
loope
cmpsb
sti
imul
inc
ljmp
push
test
jnp
and
adc
out
mull
shrl
cmpsb
sub
addr16
mov
pop
ljmp
mov
ss
jo
insl
scas
repnz
lcall
inc
inc
lret
movsb
in
aad
cmp
daa
xchg
pushf
imul
mov
add
sub
mov
ret
loope
jmp
stos
dec
stos
loopne
daa
mov
aam
and
mov
rep
adc
mov
addr16
or
loop
cltd
xor
mov
cmp
pop
pop
cmp
add
jl
mov
push
aad
mov
sbb
mov
popa
cld
pop
jge
cmp
lock
mov
stos
inc
push
fwait
cmp
xchg
adc
ds
jae
cmp
xchg
cmc
fdivr
int
test
push
and
mov
movsb
mov
inc
cmpsb
jmp
add
mov
push
cmpsl
dec
push
sbb
dec
mov
mov
jge
cwtl
fsubrl
stos
mov
stos
jle
incb
subb
mov
cltd
ja
and
fcmovu
or
decl
adc
adc
mov
addb
pop
pop
fisubrs
dec
cmpl
cmpsl
sbb
movsb
lea
and
lret
imul
pop
push
pop
xlat
aad
adc
fwait
mov
js
scas
out
test
add
mov
jae
xchg
adc
insb
sub
xlat
fs
push
jge
loope
mov
add
pop
leave
add
mov
mov
fdivl
test
hlt
mov
out
mov
or
lret
loope
pop
frstor
lods
into
sub
inc
inc
cs
cltd
int
imul
push
jmp
xlat
or
push
imul
mov
add
js
mov
cmpl
loop
pop
and
push
push
gs
adc
mov
sub
xchg
push
or
add
mov
sub
pop
xor
push
jmp
insl
push
mov
cmp
xchg
jnp
in
pop
test
sarb
insb
mov
add
or
jecxz
bound
sbb
dec
pop
mov
jg
jle
mov
pop
mov
insl
outsb
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubrs
mov
insl
outsb
popf
jle
dec
mov
ds
std
push
in
out
sbb
add
and
mov
insl
outsb
pushf
jle
dec
mov
ds
hlt
pop
or
stc
jmp
scas
pop
mov
lods
outsb
bound
in
pop
ficompl
mov
icebp
test
xchg
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
inc
sbb
jae
push
jge,pn
jo
xor
ret
popf
shrl
sbbl
sbb
push
sbb
add
insl
and
xchg
popf
ror
jecxz
repz
fcoml
adc
add
xor
add
and
std
xchg
pop
xchg
leave
repz
nop
negl
inc
sbb
lahf
inc
lds
shlb
xchg
movsb
mov
sub
jp
dec
nop
adc
sti
mov
cmp
mov
jecxz
bnd
mov
add
sbb
pop
add
jg
gs
add
std
out
xor
sbbl
fnstsw
addr16
lret
mov
sbb
mov
lods
pop
adc
in
fsubp
scas
je
dec
mov
fsubrl
test
mov
pusha
mov
sbb
push
lock
call
push
out
repz
mov
mov
inc
sbb
jae
add
insl
and
ret
test
mov
movsb
repz
lds
jle
js
dec
and
xor
inc
adc
scas
popf
mov
mov
and
sbb
aas
and
xor
popl
enter
scas
cld
popf
std
frstor
daa
dec
pop
cmp
adc
jge
ret
popf
shrl
sbb
in
mov
sbb
jae
add
insl
and
ret
popf
shrl
sbb
in
mov
fiadds
xchg
push
mov
shlb
mov
mov
insl
shl
push
mov
aad
push
xor
out
ljmp
push
rcll
push
ds
lahf
ljmp
sub
outsl
or
aam
pop
iret
fdivl
shlb
dec
pop
or
fbstp
dec
scas
sbb
adc
arpl
test
pop
roll
movsb
add
cmpsl
jge
adc
lahf
jp
jo
xchg
aaa
jge
insl
pop
sbb
or
js
fdivr
repz
mov
lds
repz
inc
or
or
insl
cmp
ficompl
adc
push
add
popa
mov
dec
push
push
insl
imul
and
lcall
jnp
aas
ss
stos
pop
mov
jp
neg
xlat
add
popa
fdivl
or
jbe
jo
inc
fsubrs
std
mov
or
inc
xchg
rcll
jmp
shlb
cmp
lea
ljmp
in
lock
pop
jmp
xor
scas
sub
pusha
dec
aad
jb
cmpsl
inc
jne
popa
mov
jae
out
mov
lods
mov
cwtl
fbstp
mov
popa
movsl
mov
in
cmp
jnp
popa
rorb
add
imul
mov
mov
test
and
mov
test
mov
sbb
les
pop
push
loope
pop
cmc
xchg
jecxz
add
add
outsb
sub
sub
xor
add
cmp
xchg
inc
mov
lods
adc
mov
stc
arpl
in
xor
lds
and
jle
and
rcrl
cmc
xchg
push
or
in
jne
ja
dec
loope
cmpb
dec
fidivl
aaa
subl
mov
ljmp
mov
adc
into
sub
inc
and
sbb
loopne
shlb
lods
and
hlt
xor
xchg
xchg
adc
loop
mov
jp
enter
sub
lods
xchg
sub
les
xchg
and
push
add
push
pop
call
sub
out
or
fmuls
xor
xor
push
xchg
lea
dec
out
mov
inc
es
mov
mov
test
icebp
imul
call
and
add
add
out
adc
inc
movsl
mov
es
pop
lds
loope
dec
sbb
sbb
hlt
test
dec
call
xchg
cmp
or
push
mov
inc
adc
or
cwtl
mov
sbb
pop
cmp
clc
gs
fsubl
push
xor
fnstcw
mov
sbb
push
mov
arpl
mov
xchg
xor
mov
push
loop
push
stc
push
sbb
push
cmp
rolb
arpl
in
xchg
add
testb
test
xchg
mov
subb
cmpsb
lods
inc
inc
inc
aam
fst
bound
pop
out
pop
not
leave
repz
or
xchg
sbb
pop
repnz
sbb
clc
ljmp
lahf
xor
out
ja
pushf
rcrl
xchg
jo
aam
cmpsb
adc
repnz
stos
sbb
or
mov
inc
fs
movsl
pop
das
jnp
cmp
les
push
pop
or
icebp
cwtl
test
jno
xchg
cmpl
mov
and
pop
or
xorl
pop
insl
test
mov
cmc
cwtl
xor
rorb
call
xor
push
add
add
repnz
clc
xchg
xchg
inc
or
popa
rolb
mov
push
dec
pop
cs
bound
pop
xchg
enter
pop
mov
mov
in
jp
pop
xor
xchg
lret
test
or
mov
ss
cmp
push
xchg
fdivr
push
sbbl
xor
cmp
xor
js
iret
sbb
and
xchg
mov
jb
mov
mov
ds
inc
in
nop
test
icebp
aaa
xchg
aaa
and
mov
cmpsl
lret
shll
call
aad
pop
sub
movsl
pop
dec
sub
sahf
outsl
xchg
js
sbb
js
inc
testb
lcall
adc
jg
setno
ret
mov
jnp
xchg
dec
cmp
test
stos
dec
in
out
fxch
jp
pop
pop
mov
imul
mov
and
add
sbb
in
mov
push
ljmp
aaa
fildll
roll
pop
cld
out
imul
mov
push
mov
jnp
adc
add
gs
sub
xor
hlt
icebp
mov
pop
jle
lret
loop
pop
out
fcoms
imul
loope
adc
inc
push
jecxz
rcrl
nop
mov
cmc
pop
dec
mov
mov
enter
add
shl
sub
jo
push
clc
test
insl
mov
xorl
pop
push
ret
sub
sub
xor
add
fst
xchg
shll
mov
insl
sub
jecxz
xchg
mov
mov
push
sub
mov
pop
dec
or
std
idivb
pop
inc
inc
sbb
add
out
roll
out
adc
shrl
loopne
add
sarb
popf
negb
lods
sub
mov
inc
mov
mov
mov
mov
icebp
mov
mov
std
ljmp
arpl
jae
or
dec
sub
xor
jne
lods
cmp
fists
ja
sub
mov
adc
out
fcmovb
data16
push
inc
sub
mov
fimuls
jmp
ret
sahf
js
mov
mov
repnz
pop
push
push
mov
mov
pushf
add
aad
push
mov
add
loopne
sub
xchg
pop
ljmp
xchg
xchg
sbb
pusha
std
mov
adc
insb
inc
cmp
cwtl
adc
jnp
stc
mov
cmp
sub
add
mov
shr
sub
xchg
push
pop
lea
cld
stos
mov
xor
shl
dec
dec
repnz
sbb
adc
mov
inc
cli
mov
jl
das
mov
cli
or
push
shll
adc
les
movsb
dec
add
loope
call
inc
aas
insl
mov
loop
mov
jp
jl
mov
in
js
mov
inc
xchg
movsb
cltd
pop
mov
ret
adc
loope
mov
mov
enter
jae
mov
fists
clc
adc
dec
xchg
in
jnp
adc
rorb
dec
out
push
mov
add
cmp
jge
cwtl
cs
jge
and
fcomip
sub
mov
in
mov
push
pop
addr16
aas
pusha
push
sbb
pop
and
ja
fstl
loopne
mov
int3
cmp
mov
or
cmp
jp
nop
sub
inc
sbb
jne
rcrl
mov
pop
out
ja
addr16
sbb
mov
dec
mov
push
enter
dec
loop
rorb
lcall
and
imul
mov
shll
cmpsl
out
jp
sbb
pop
mov
or
test
push
mov
dec
push
test
xor
sub
and
sub
flds
lret
dec
nop
xor
mov
mov
loopne
cmp
inc
outsb
pop
outsb
in
push
or
pop
push
outsb
clc
inc
and
movsb
out
or
sub
into
sub
cmpsb
addb
xchg
push
popa
test
sahf
jmp
scas
fbstp
push
and
dec
ret
push
sbb
popa
xor
xchg
call
stos
lea
in
in
jnp
ret
cmc
mov
push
cmp
and
in
pop
mov
jle
push
lahf
ret
adc
xchg
add
popa
cmp
inc
jecxz
jno
sbb
or
adc
scas
lods
in
mov
add
sti
sub
shll
outsl
fwait
dec
insb
iret
mov
sarl
daa
jge
mov
and
data16
fadds
jg
sysret
rolb
sbb
sbb
aam
int
cmp
hlt
call
push
mov
push
ljmp
popa
cmp
fnstenv
push
jno
or
cmp
dec
cmp
mov
cld
dec
add
sahf
pop
sbb
sbb
lea
test
hlt
mov
jmp
ret
out
shrb
push
das
xchg
mov
pushf
mov
sbb
aas
lret
ds
mov
inc
andl
sbb
push
mov
push
jno
or
pop
mov
out
cmp
pushf
aam
pop
cli
mov
pop
inc
push
test
hlt
movsl
cltd
pushw
test
out
popf
outsb
je
sbb
push
loop
das
sbb
movsb
lods
pop
jo
and
sub
outsl
les
jbe
enter
jae
fdivs
or
sub
pop
es
jo
inc
mov
adc
aaa
sbb
js
cmp
jmp
push
adc
mov
inc
imul
pop
add
dec
in
mov
stc
cmp
push
inc
outsl
fsubs
inc
fwait
sub
adc
push
imull
fucomip
lret
icebp
inc
mov
into
ja
xchg
and
xchg
dec
sbb
adc
or
push
add
insb
inc
mov
xor
imul
push
push
cltd
inc
mov
mov
dec
xor
push
xchg
bound
jbe
add
cwtl
dec
lcall
aam
xor
cmp
xchg
fcmovnb
adc
int3
fldenv
add
imul
xchg
adc
pop
mov
loopne
jecxz
cld
insl
test
mov
push
push
out
push
pop
xor
aaa
or
and
stc
sub
cmp
lods
lret
imul
popf
xchg
sbb
jno
jp
outsl
pop
xchg
loopne
adc
stc
rcl
mov
call
jp
imul
xor
das
scas
mov
ret
pop
out
sahf
push
outsb
mov
jg
daa
data16
clc
push
jnp
das
hlt
mov
and
xor
dec
enter
test
cli
rorb
sub
cmp
jno
add
inc
jmp
add
pop
insl
sbb
mov
imul
pop
sub
sbb
jge
mov
mov
bound
aas
cmp
insl
fucomi
or
jle
test
cmpsl
and
fs
lret
cmp
gs
sbb
mov
test
push
outsb
inc
mov
les
cs
pop
cmp
es
arpl
and
push
push
dec
subb
out
push
negb
jmp
cmpsb
jecxz
mov
inc
push
aam
lret
sub
cmp
push
mov
jb
jmp
cmp
push
insl
das
add
jo
mov
adc
push
jb
lds
hlt
es
lods
sbb
inc
dec
jmp
addb
jmp
in
pop
pop
push
lea
push
push
das
ljmp
xlat
icebp
jle
das
outsb
jg
pusha
ffree
in
shrl
sbb
loopne
xchg
pop
movsl
cmpsl
aaa
mov
pop
lods
jb
adc
sbb
fs
pop
push
or
int3
testl
sahf
sub
sahf
scas
dec
and
cmp
loop
cmp
push
mov
stos
aas
sub
jle
adcl
sti
sbb
xor
shll
fldl
or
fisttpl
mov
imul
mov
cmp
es
iret
pop
pop
fsubr
push
cmp
dec
andl
cmp
add
pop
mov
and
pop
mov
js
in
std
cmp
add
loopne
stos
and
ds
jecxz
xchg
jae
and
add
stos
loop
pop
out
push
inc
push
push
sub
insb
push
icebp
fwait
xchg
idivb
in
mov
mov
cmp
aad
insb
push
jb
nop
mov
mov
adc
arpl
lods
xchg
push
or
sub
pop
ds
sbb
inc
leave
pop
add
push
pop
aaa
xor
sub
jo
jnp
clc
mov
imul
jns
pushf
popa
js
jle
sbb
cltd
or
pop
rol
and
xchg
jg
test
cwtl
or
orl
lret
mov
pushf
sub
add
and
cmpl
push
in
pusha
inc
dec
push
sbb
and
lods
les
jmp
fdivs
icebp
pushf
jne
mov
lcall
sub
and
repz
outsb
sbb
mov
fwait
xchg
out
call
and
and
ss
rorb
jo
mov
pop
pop
push
and
aad
mov
out
aam
sbb
mov
xor
jo
dec
add
js
push
lds
arpl
outsb
rolb
add
sub
inc
outsb
data16
or
stc
call
mov
pop
movsl
push
andl
sub
mov
push
ret
call
mov
pop
lret
sahf
dec
inc
push
push
or
cmp
xor
xchg
insb
push
popa
inc
sub
out
cmp
or
fmuls
imul
mov
iret
ds
add
loop
push
lock
call
push
jle
orb
sub
pop
sbbl
dec
jns
cli
adc
fwait
outsb
mov
and
sub
jbe
call
lcall
lea
mov
add
out
stc
inc
cmc
int3
jo
mov
stos
mov
iret
dec
push
repz
sbb
xchg
sub
mov
popa
and
fmul
shlb
lret
mov
pop
decl
inc
lret
daa
xchg
xor
inc
jo
or
iret
xchg
or
jp
arpl
fxam
sbb
cwtl
mov
add
mov
pop
js
je
add
push
jge
add
std
dec
fidivrs
frstor
mov
add
lods
insb
add
dec
icebp
daa
xor
dec
and
inc
cmc
xchg
scas
mov
add
out
jecxz
xchg
mov
lods
aas
push
sbb
jecxz
push
call
jl
jns
scas
sub
jb
sub
cld
xor
loope
pop
mov
jnp
jecxz
inc
mov
cmp
mov
ja
mov
jno
stc
pop
adc
mov
aam
lods
or
jno
xor
movsl
mov
inc
pop
loop
out
pusha
out
into
jmp
int3
mov
sub
push
loop
sub
stos
je
push
lret
xchg
shrl
dec
vshufpd
xchg
cwtl
add
sbb
out
daa
std
xor
mov
fld1
push
and
cmp
in
repnz
cltd
push
aad
insl
push
xchg
push
and
push
rcl
xchg
pop
rorl
call
mulb
jmp
and
pop
je
xor
inc
addr16
scas
add
xor
mov
nop
mov
sahf
xor
mov
adc
aad
scas
enter
jo
mov
sub
inc
push
sbb
xchg
xlat
pop
jo
sub
ja
dec
pop
loop
jae
xchg
lahf
sub
rcrb
push
add
cmpsb
push
imul
jmp
jp
repz
mov
inc
js
and
stos
sbb
faddp
sub
and
pop
scas
aaa
add
sbb
mov
sub
push
push
aad
push
stos
mov
ret
addr16
sti
add
loop
incb
jbe
enter
jmp
pop
call
push
dec
into
lock
shrb
add
shl
lods
fisubrs
jnp
ljmp
fcmovnbe
andb
sahf
imul
out
xor
fcomip
mov
sbb
scas
adc
xlat
push
xor
pop
xor
xor
or
out
loope
jb
arpl
iret
aas
inc
adc
cmp
sti
loop
mov
cmp
gs
adc
lcall
ficomps
mov
daa
fldl
pop
sti
in
add
addr16
add
sti
outsl
int
xchg
fndisi(8087
xor
xchg
adc
xchg
sub
outsl
jle
andl
incl
ret
sub
sbb
fildl
fs
enter
jmp
out
sbb
jae
xchg
fidivrl
inc
mov
inc
or
adc
mov
xchg
xor
and
and
mov
je
sub
mov
pop
shrb
mov
sbb
ret
xor
adc
jbe
cwtl
cld
cmp
and
sbb
mov
ljmp
lret
inc
mov
cmpsb
in
in
xor
jecxz
xchg
lcall
test
jle
dec
popa
lds
test
sub
mov
sub
das
dec
or
sub
push
aad
lds
add
dec
mov
mov
xchg
mov
loope
enter
jb
ja
dec
mov
jg
cmpsb
mov
sbbl
rorb
jle
inc
push
ret
sbbb
push
push
les
mov
mov
leave
lds
hlt
sbb
mov
inc
jp
dec
fidivrl
sahf
js
adc
adc
push
sbb
mov
es
push
adcl
sbb
jle
outsl
loope
jl
push
pop
cmc
inc
inc
jne
or
in
rcll
xor
mov
das
out
inc
adc
add
push
push
sub
mov
lret
scas
pop
inc
adc
push
nop
xchg
xor
pop
into
inc
dec
or
inc
xlat
xchg
pop
ret
pop
pop
add
xchg
jmp
scas
add
sarb
push
js
xor
bound
xchg
ljmp
jo
loop
das
loop
dec
inc
and
sub
lahf
cli
dec
les
lret
mov
es
fdivr
xchg
ljmp
fst
mov
movl
outsl
push
js
ret
and
jno
cmc
aaa
icebp
mov
cli
shrl
shl
jno
add
test
sub
fcoml
push
cltd
stc
inc
cmp
or
xor
mov
and
cmp
scas
lcall
loopne
xchg
lods
push
sarb
xor
fbld
nop
xor
in
pop
out
push
rorl
pop
cmp
xor
ds
jb
jae
loopne
mov
iret
aas
cmp
push
jle
push
jnp
mov
cmp
addl
jae
xchg
lock
mov
or
daa
ja
inc
and
cltd
push
xor
sbb
mov
sub
jno
hlt
sti
jg
cltd
jle
cwtl
and
jp
pop
jno
inc
lds
lock
lds
mull
jne
dec
fcmovnb
push
stc
push
test
loop
ljmp
lock
mov
push
pop
fst
lods
mov
lahf
add
rorl
lret
adcb
insb
sti
pop
rcrl
jne
xor
inc
mov
fcomps
in
popl
mov
iret
ds
ja
push
cmp
pop
cli
fwait
arpl
loope
jecxz
mov
popa
imull
adc
sbb
insl
push
sub
mov
stos
call
inc
aaa
imul
frstor
clc
ret
cmp
lcall
pop
xchg
hlt
ret
pop
jmp
sub
and
iret
loopne,pt
ror
ret
push
sbb
mov
dec
jp
xchg
inc
jnp
mov
scas
lret
aam
xchg
repz
push
mov
movsb
add
fdivrs
mov
add
pop
movsb
aad
fldl
sub
and
adc
and
cmp
out
out
inc
add
lods
aam
mov
rclb
sbb
mov
ja
pop
popf
push
push
add
cmp
dec
pop
js
adcl
ljmp
adc
ljmp
sub
mov
mov
push
fisubl
shr
push
aad
mov
shrl
into
dec
ja
sbb
addr16
mov
sbb
lods
or
push
lods
rcr
push
mov
pop
stos
xor
pop
adc
icebp
xor
insl
sti
cltd
aad
pop
clc
scas
pop
jle
loopne
fistpl
and
push
pop
lods
packssdw
testb
mov
mov
enter
or
loopne
add
or
gs
ja
movsl
js
mov
xchg
out
or
adcl
mul
inc
leave
nop
dec
ficoml
dec
sahf
mov
sbb
add
ficompl
sub
sbb
sbb
xchg
mov
call
icebp
dec
repz
inc
hlt
xchg
inc
jle
inc
inc
mov
cmpb
pop
add
mov
xchg
mov
xchg
cwtl
xchg
test
and
bound
adc
jge
ret
popf
shrl
sbb
in
mov
sbb
jae
add
insl
and
ret
popf
shrl
sbb
in
mov
sbb
jb
add
insl
and
ret
popf
shrb
sbb
in
mov
sub
arpl
xchg
in
mov
bound
jecxz
test
pop
add
pop
out
xlat
jp
or
push
xchg
push
cli
inc
mov
lcall
negl
push
xlat
jp
or
cmp
mov
inc
lret
daa
stos
push
mov
out
xlat
mov
cmpsl
xor
cmp
xorb
inc
loope
call
pop
and
push
mov
push
jo
inc
lock
adc
mov
ja
iret
lock
mov
cmp
lcall
lahf
scas
cwtl
outsl
push
push
lret
lret
stos
inc
inc
push
mov
pop
cmc
pop
and
cmp
and
or
mov
cwtl
call
call
xor
xchg
cmc
mov
cmpsl
aad
cmp
lods
fimull
outsb
test
pop
jne
lcall
pop
push
sbb
out
divb
mov
ljmp
xchg
daa
lcall
popa
sbb
test
cmc
ret
aad
packuswb
add
arpl
inc
pop
and
loopne
add
out
xlat
jp
out
mov
cmpsl
sub
inc
addr16
push
lret
aaa
nop
daa
cwtl
pop
mov
out
mov
je
pop
fnstcw
xlat
lret
adc
push
hlt
push
ret
adc
aas
in
xlat
sbb
fnstsw
outsl
xchg
subb
push
cmc
dec
ret
jb
push
es
sub
sub
fisubl
push
cli
inc
mov
lcall
negl
push
jp
or
cmp
ljmp
daa
stos
pop
mov
scas
test
mov
sbb
inc
mov
into
roll
jae
sbb
sbb
pop
testb
inc
pop
jae
xchg
xor
lcall
mov
and
dec
es
clc
jle
mov
test
sub
fcmovnbe
sbb
pushf
xor
adc
push
push
or
clc
sub
adc
ja
sahf
jg
fcomps
in
popf
inc
cli
aad
xchg
sub
mov
mov
fsubs
pop
adc
inc
stc
dec
loope
gs
xor
in
cmpsl
lock
insb
je
mov
jp
pop
mov
stos
add
in
pusha
icebp
lahf
stos
xor
in
js
lahf
mov
fld
std
mov
cltd
sub
xor
int
inc
ret
je
mov
daa
cli
stos
fidivrl
std
iret
sbb
fistl
dec
pop
pop
fmull
loopne
lods
insb
xchg
adc
ficoml
mov
out
adc
aaa
ficoml
and
out
aam
dec
pop
ds
pushf
sub
out
fmul
mov
fisubl
adc
sbb
daa
dec
pop
rclb
mov
call
test
rolb
lods
sub
xor
clc
and
pop
bound
jne
les
aaa
imul
int
aas
mov
lcall
or
repz
cmpsl
dec
xchg
sub
pop
lret
lods
dec
sub
aaa
and
pop
and
fcmove
sahf
out
in
rcl
mov
dec
cmpsb
outsl
adc
fstpl
aas
std
push
mov
push
lock
out
xchg
jl
add
ja
pushf
adc
ds
xchg
inc
stc
add
dec
repz
in
cmp
popf
push
in
sub
pushf
repz
mov
jnp
test
mov
cmpsb
fwait
or
cmpsl
ja
and
inc
cltd
insl
popf
rclb
mov
ret
sbb
xorl
aad
mov
mov
dec
and
mov
sub
inc
jl
sti
or
movsl
shrl
adc
fsts
push
mov
out
and
test
lret
cs
ss
cmc
ja
mov
out
shrb
int
in
jo
mov
data16
pop
repnz
lret
adc
mov
cmp
mov
mov
dec
data16
or
icebp
insl
push
ficomps
ret
pushf
or
sar
adc
sub
xor
nop
jle
call
das
pop
ret
lret
sbbl
sbb
push
jmp
add
pusha
jmp
das
inc
mov
jg
xor
jl
daa
dec
sub
fcoml
inc
mov
jp
cmp
add
push
lock
imul
xor
in
and
dec
sub
mov
repz
or
mov
repnz
sbb
cmpsb
fisttpl
mov
xchg
out
ret
dec
imul
ljmp
ret
leave
push
shll
lret
rcrl
loope
mov
xor
out
in
pop
jns
mov
hlt
repz
dec
mov
xchg
stc
testb
clc
pop
das
lret
repnz
mov
cli
popf
jne,pn
jle
or
mov
add
test
aad
mov
push
cmp
lea
dec
movsl
test
mov
inc
mov
data16
in
dec
daa
or
xorl
bound
cmp
add
inc
adc
sub
jmp
pop
mov
xorb
add
sbb
jmp
cmpsb
ffreep
dec
add
inc
mov
cltd
lahf
sbb
xchg
dec
push
out
xor
push
cmpsb
mov
and
inc
lret
and
mov
pop
rolb
int3
cmp
clc
flds
sub
inc
add
inc
adc
jmp
stos
inc
xchg
mov
mov
dec
sub
mov
dec
cmp
lret
cmp
idivb
jo
sahf
orl
sbb
cmp
and
ret
rcrl
lds
adc
and
loope
enter
lcall
sub
cmp
jne
std
push
leave
mov
mov
cmpsb
outsb
add
mov
pop
xor
fdiv
lea
mov
adc
popa
shrb
imul
sbb
inc
push
adc
cmc
sbb
mov
xchg
addr16
int
into
cmp
sti
jp
inc
nop
jecxz
movsb
popa
mov
sub
rcrb
adc
fdivrs
aas
cwtl
pushf
xchg
daa
sarb
cmpb
pop
les
pop
lea
and
shl
push
gs
in
bound
sbb
inc
mov
dec
jae
add
imul
and
test
repnz
shlb
mov
movsb
push
cmc
leave
sub
mov
rolb
inc
and
lods
popa
loope
and
add
lwpins
and
nop
mov
aam
push
mov
cmpsl
ja
mov
jp
inc
iret
popa
sub
stc
mov
xchg
xchg
nop
lret
call
push
ja
call
sub
fstps
mov
bnd
pop
arpl
orl
mov
data16
cltd
pop
leave
pop
jmp
std
sub
adc
loopne,pt
inc
scas
jl
ds
mov
bound
mov
xchg
add
push
mov
inc
mov
stos
adc
fstp
imull
xor
jo
fsubrs
in
and
aas
jne
pop
pusha
aaa
ret
cmc
mov
ds
cmp
jge
cs
in
sbb
mov
cmp
sub
mov
gs
mov
jle
andl
fs
lret
adc
inc
adc
jo
aaa
xlat
mov
jo
mov
negl
push
shl
mov
in
sbb
daa
xchg
in
mov
pop
out
jmp
push
push
cld
dec
sub
mov
jl
aas
sub
push
push
clc
mov
cmp
jne
aas
adc
jne
and
cmp
vpaddw
imul
fwait
clc
loope
jbe
loopne
xor
mov
or
adc
add
xor
addr16
lods
popf
les
scas
mov
push
dec
insl
mov
and
mov
xchg
pop
cs
sub
mov
subl
pop
mov
cwtl
ret
xchg
inc
cltd
sbb
inc
push
or
dec
jmp
sub
arpl
push
add
sub
std
jle
call
push
xor
dec
mov
ja
mov
in
dec
sbb
cltd
lcall
jb
cmp
cmpsl
divl
loop
jle
repz
leave
imul
mov
stos
fwait
push
xor
sub
jne
leave
inc
xchg
mov
cltd
add
call
and
and
lret
push
sub
inc
addl
scas
mov
cmp
cltd
cmc
outsb
and
jg
shll
fdivp
pop
dec
jl
lahf
ds
in
mov
push
dec
mov
test
les
push
or
adc
and
mov
inc
iret
in
cmp
mov
mov
xor
aam
sub
aas
jle
push
gs
loop
mov
mov
imul
inc
lahf
int3
dec
dec
dec
std
adc
fidivs
sti
xor
daa
gs
mov
inc
or
repnz
dec
xchg
out
iret
insb
ret
sub
iret
fxtract
and
or
das
inc
lret
pop
out
pop
dec
dec
jne
pop
inc
xchg
mov
mov
pop
ret
mov
mov
stos
ret
sub
mov
cmpsb
dec
movsb
sbb
pop
pop
out
rol
mov
nop
loopne
mov
mov
push
cmpsl
or
push
fdivrl
sahf
mov
sbbl
jno
push
addr16
mov
sbb
fimull
and
adcb
pop
dec
loope
lea
sub
adc
mov
jno
lcall
mov
je
pusha
je
aad
int3
dec
mov
es
daa
xchg
sub
inc
mov
adc
adc
fisttpll
int
mov
inc
ds
or
subb
adc
mov
ja
lret
stc
enter
xchg
pop
adc
adc
push
xchg
in
mov
je
mov
imul
daa
icebp
imul
lahf
inc
and
int3
addr16
or
jne
cs
lea
inc
mov
dec
lahf
pop
mov
inc
int
adc
cmp
jno
mov
push
inc
push
mov
mov
jle
pop
inc
push
imul
in
loop
std
push
mov
dec
sub
aam
inc
xor
inc
movsl
cmp
push
aas
mov
cmc
fwait
cmp
jns
imul
push
xchg
data16
sbb
int3
dec
mov
clc
and
sub
hlt
cmp
inc
jg
jmp
fnstsw
push
outsb
jb
adcl
push
js
orl
adc
jg
xorb
dec
pop
jnp
shlb
or
loopne
ds
inc
jne
mov
loop
mov
sbb
out
cmpsb
push
pop
in
cmp
add
jb
das
lret
aas
shlb
or
mov
jle
pop
mov
js
push
cmc
pusha
mov
and
mov
sbb
or
mov
pop
sbb
ret
movsb
adc
pusha
sbb
test
fiadds
dec
iret
into
hlt
jle
cmc
movsb
xchg
stos
pop
cmp
in
enter
cmp
and
mov
mov
lcall
repnz
bnd
imul
pusha
popaw
xchg
jg
data16
fidivs
dec
test
repz
mov
pop
pop
push
pop
push
push
mov
stos
mov
aaa
icebp
rol
jg
ret
or
dec
cmpsl
mov
rcl
dec
adc
sti
repz
andl
or
pop
and
adc
loop
add
fisttpll
mov
call
sti
pop
and
cmp
fwait
mov
aam
jecxz
mov
jnp
imul
loopne
ljmp
xor
fldl2e
into
gs
inc
or
add
pop
sub
push
pusha
insl
sub
lock
inc
loopne
inc
xchg
in
mov
popf
daa
outsb
mov
add
add
call
or
push
mov
sub
test
ret
cmpsl
int3
out
or
int
test
movsb
arpl
mov
out
jno
rcrb
jnp
lret
dec
pop
mov
repnz
dec
adc
je
mov
xchg
push
popl
dec
mov
int
movsl
jno
lds
ret
out
jo
subb
in
mov
lret
andl
cmpsl
es
sbb
jmp
jbe
popa
push
out
add
pop
cmp
sub
shll
and
ljmp
imul
jae
cmp
loopne
mov
out
sub
xchg
jg
insb
subb
imul
ret
jmp
inc
xor
jb
inc
or
ret
movb
add
fstpl
inc
inc
dec
mov
pushf
inc
inc
and
mov
pop
orb
hlt
std
dec
push
jge
pop
xor
jl
fldenv
mov
in
repz
insb
mov
add
adc
cltd
les
inc
pop
mov
jne
mov
ljmpw
inc
sbbb
push
dec
ret
or
stos
shrb
or
popf
loopne
call
pushf
adc
mov
dec
fs
arpl
push
push
shl
cmc
lcall
push
cld
cmp
dec
mov
pop
inc
inc
movsb
scas
aam
ret
mov
mov
mov
adc
out
frndint
add
addr16
clc
add
hlt
repz
mov
leave
std
add
adc
xor
jp
jmp
iret
push
ljmp
ss
test
sahf
cmp
rol
cltd
rcr
fs
xchg
ds
or
cli
push
and
jne
xor
lahf
dec
cmp
enter
jmp
lea
add
and
sahf
shll
dec
enter
pop
xor
xorl
lods
cmpsl
mov
mov
adc
jae
add
aaa
cmp
aam
arpl
lock
ss
inc
jge
or
sbb
jae
xchg
push
divb
icebp
hlt
xchg
sub
leave
push
clc
out
ds
push
out
jge
into
xor
test
mov
aas
sbb
add
lds
cmpsl
xchg
or
and
or
ljmp
repnz
mulps
jbe
dec
xor
rep
xchg
or
mov
icebp
mov
jae
das
in
or
inc
adc
lods
mov
and
lret
adc
enter
sahf
data16
mov
pop
cmp
mov
mov
jno
and
rcrl
test
sbb
test
or
addr16
sbb
jmp
dec
mov
or
out
mov
sti
push
iret
mov
test
mov
or
cmpsl
xorb
fdivs
int3
pop
cs
je
xchg
jo
pop
scas
fsubs
jno
fs
daa
inc
inc
and
jae
and
std
cmpsl
lahf
adc
xlat
mov
push
shlb
outsl
fidivrl
pop
mov
xor
call
adc
lcall
jmp
loop
call
out
mov
jo
lds
push
nop
imul
inc
push
insl
imul
jbe
push
adc
scas
rorb
out
adc
lcall
pop
cmp
push
loope
cmp
sbb
sarl
jae
xchg
fsubs
or
or
push
push
repnz
stc
sub
pusha
or
mov
mov
cld
pop
inc
lods
pop
lahf
inc
test
jg
add
mov
cmp
dec
or
insl
cmp
push
test
out
fcmovb
jge
into
repnz
mov
movsl
cmp
inc
xor
add
sbb
cmp
leave
bound
jge
out
in
ja
test
adc
fcmovb
jg
xchg
rorb
adcb
jnp
call
sbb
sbb
add
in
ljmp
out
dec
sub
or
sub
xor
fstpt
jne
sbb
out
push
xor
inc
js
inc
pop
and
hlt
mov
sub
fucomip
jge
jno
sbb
push
pop
mov
add
repz
ljmp
repz
leave
int3
dec
out
sti
mov
lea
pop
je
ret
cltd
mov
sub
sub
add
xchg
aam
scas
mov
jns
cwtl
aaa
int3
and
insl
mov
sub
sub
out
fs
dec
ljmp
add
xchg
imul
adc
lea
pusha
in
sub
les
nop
into
dec
jecxz
lea
lahf
std
rcll
add
cmp
mov
shll
inc
in
shl
ret
inc
sub
sahf
jl
mov
sbb
outsb
jae
das
sub
lods
dec
loope
test
sub
sub
insl
in
xor
movsb
cld
push
aaa
repnz
pop
pop
xchg
popf
and
mov
adc
xor
xchg
inc
gs
lds
pop
mov
es
cmp
and
ss
and
repnz
push
mov
int3
jmp
jo
idivb
and
push
adcl
enter
xchg
or
dec
xor
push
in
mov
ret
mov
inc
hlt
mov
pop
test
push
pop
or
fidivs
mov
imul
daa
cmp
jl
fdivr
aad
jecxz
insb
outsl
push
mov
dec
pop
add
addr16
movsl
xlat
inc
mov
cmp
jge
popf
jbe
push
jno
je
rorl
js
pusha
push
push
out
repnz
jnp
cmpsl
je
insb
aad
jle
add
insb
sbb
insb
mov
imul
leave
mov
or
mov
sub
lret
imul
push
xor
jle
or
mov
mov
jo
push
and
inc
push
into
push
pop
pusha
fildll
sub
sbb
and
rcrb
sar
xchg
add
xchg
es
add
jmp
push
test
and
mov
les
xorb
add
inc
adc
push
jge
lock
push
sbb
cwtl
add
aad
enter
ss
jnp
lea
jecxz
mov
aad
mov
stos
jb
lds
ficomps
and
jmp
mov
jnp
outsb
loope
ret
cmp
dec
decl
sbb
insl
jp
mov
adc
imul
pop
or
sbb
je
adcl
pop
addr16
lcall
popf
es
inc
ljmp
or
lret
xchg
sarl
jnp
inc
test
lds
out
jnp
ljmp
cli
push
push
movsl
cli
aaa
pusha
inc
push
ror
fwait
dec
cmpsb
pop
jo
add
aaa
adc
adc
mov
imul
and
mov
enter
cmp
std
into
add
lea
xchg
setno
lock
cld
xchg
jp
xchg
pop
or
ja
into
mov
lea
leave
fildll
and
mov
in
movl
push
xor
test
sbb
mov
out
shl
adc
jle
add
inc
add
jecxz
pushf
push
das
jmp
mov
add
repz
sub
mov
xorb
xchg
lods
out
popf
lcall
iret
aam
lcall
repz
dec
pusha
xorl
and
dec
fnstenv
xchg
lahf
fstl
test
imul
test
and
rorb
lods
push
jnp
mov
pushf
fs
ss
cmp
push
dec
idivl
addr16
mov
mov
and
pop
loope
ficompl
inc
mov
inc
dec
cltd
fstp
mov
fstpl
dec
push
in
inc
int
cmp
mov
das
pop
add
sbb
int
or
ret
loopne
enter
jne
mov
popf
icebp
mov
jbe
cmp
mov
out
dec
stc
xchg
cmp
lret
daa
and
pop
das
or
ljmp
adc
das
lods
inc
add
jg
pop
adc
ljmp
pop
sbb
push
lock
or
mov
les
cmp
mov
sbbb
scas
cmpsb
mov
test
outsl
push
cmpsl
rorb
pop
or
es
fdivrs
jne
and
idivl
inc
call
pop
xchg
ljmp
cwtl
leave
into
es
lods
mov
mov
inc
cmp
xor
stc
fdivl
sahf
inc
and
or
fildll
push
jae
adc
cwtl
insb
add
cmp
aad
cmpb
mov
xor
xchg
mov
xor
and
stos
mov
imul
pop
insb
out
add
push
push
lcall
pop
imul
sub
jo
mov
jmp
mov
mov
rclb
stc
mov
mov
sub
lock
nop
mov
stos
lcall
push
mov
test
inc
leave
repz
sbb
sub
pop
stc
mov
push
xor
and
rolb
inc
adc
xchg
jne
or
insb
dec
xchg
pop
cmp
rolb
mov
movsl
cltd
and
add
push
shrb
mov
sbb
jno
pop
dec
int
sbb
sti
cmpl
add
xchg
dec
push
sti
pop
daa
add
out
dec
add
or
rol
mull
xchg
leave
push
movsl
xor
push
sbbl
sub
aas
mov
test
pop
cmp
imul
xor
mov
sbb
iret
mov
and
mov
gs
movsb
mov
jg
repz
jbe
imul
cmp
xchg
pop
insb
xchg
stos
sub
jle
mov
repz
sbb
push
stos
test
or
cmp
daa
cs
fcomp
push
ja
lret
lret
jae
repnz
and
sub
rcl
mov
jns
xor
inc
cmc
and
lret
loope,pt
cmp
stc
int
jmp
movsb
cmovb
clc
sti
pop
fstpt
aas
idiv
mov
inc
aam
xchg
mov
je
xor
es
dec
loope
mov
pop
xchg
jmp
sbb
inc
jl
movsl
jl
adc
add
addr16
xor
jne
and
sbb
sub
test
mov
xlat
jp
or
cmp
ljmp
daa
stos
pop
mov
out
xlat
jp
or
cmp
ljmp
daa
stos
pop
mov
or
lcall
xchg
neg
sbb
inc
mov
mov
stos
pop
push
pop
pop
testl
or
mov
int
push
cli
xor
mov
inc
clc
xchg
cli
mov
fiadds
pop
sbb
jp
cmovnp
aam
imul
ret
fwait
ljmp
lret
stos
jmp
sbb
pop
sbb
cmp
cmp
sub
jnp
xchg
pop
subb
lcall
loope
or
cmp
sbb
add
das
pop
sbb
mov
cli
jmp
into
faddl
add
sbb
rcrl
gs
icebp
cmp
mov
shrb
or
mov
jmp
mov
ds
hlt
cmpsl
in
jnp
les
fwait
mov
lcall
in
inc
jmp
andb
inc
test
cmc
out
xchg
loop
imul
aad
fs
push
scas
call
stos
lahf
mov
in
aam
mov
ja
fidivrs
xchg
lds
push
daa
fs
or
scas
out
jecxz
xchg
mov
or
xchg
sarl
stc
dec
sbb
cmp
dec
je
out
adc
inc
bound
ljmp
imul
les
imul
mov
mov
mov
stos
jmp
loop
or
add
push
add
sub
jp
mov
in
out
mov
sub
cmp
sbb
je,pn
pop
add
pop
lret
repnz
fdivs
aam
lret
sti
xchg
lahf
leave
leave
jb
sbb
dec
push
cmp
jg
pop
or
mov
fwait
lcall
fldt
or
push
jp
or
pop
sub
jnp
mov
fwait
ljmp
fldt
or
push
jp
or
pop
sub
jnp
mov
mov
movsl
mov
lret
in
xchg
jmp
dec
xor
cwtl
inc
mov
arpl
mov
in
mov
jae
inc
jns
jg
jno
jmp
jecxz
out
mov
xchg
or
adc
pop
fisttpl
scas
add
outsl
mov
cmp
clc
xchg
jge
in
into
aam
mov
xchg
inc
clc
inc
sub
push
aaa
insb
xlat
xchg
or
and
adcb
and
mov
pop
jmp
mov
loopne
sbb
dec
pushf
adc
lea
mov
add
xor
xchg
xchg
outsl
mov
xchg
jbe
sub
pop
bound
clc
clc
cli
pop
xor
and
nop
ljmp
into
lret
xchg
sbb
enter
or
adc
adc
ret
stc
cmp
enter
or
int
fdiv
stos
push
mov
addb
into
test
push
inc
sub
pop
mov
pop
lock
test
repz
mov
mov
stos
xor
xor
test
leave
jle
xchg
push
jne
mov
dec
stc
push
sub
icebp
ffree
jae
or
mov
data16
fsts
xor
movsb
lock
into
inc
sbb
aas
ss
jge
out
sub
and
sub
out
scas
repz
xchg
sub
jp
out
movsl
lsl
fdivr
adc
adc
aad
test
jecxz
push
fs
repnz
sub
fs
pop
scas
inc
daa
or
fs
outsl
mov
inc
adc
cmp
jns
lret
mov
mov
fs
xchg
pop
mov
fisttpll
leave
fldl
fdivrl
pop
push
cmp
insl
aad
lods
sar
lods
pop
inc
jns
sbb
sub
and
scas
iret
movsl
dec
jo
mov
cltd
addr16
xor
push
pusha
popf
cmp
std
mov
fsubl
add
and
inc
inc
push
ja
sti
inc
inc
inc
imul
daa
mov
add
mov
pop
or
fnsave
cltd
shr
dec
icebp
dec
cs
loop
sub
mov
or
inc
and
xor
aad
cmp
add
dec
push
vpunpcklbw
cmc
adc
lret
push
arpl
dec
inc
mov
jg
aas
mov
jns
pop
out
adc
cmp
push
push
mov
daa
aam
les
sub
push
push
mov
inc
mov
jo
pop
loop
sbb
dec
pushf
mov
aas
outsb
into
nop
inc
loop
fldt
xchg
xor
jns
rolb
cmp
xchg
xor
mov
jmp
push
mov
and
rcrl
insb
es
and
xchg
arpl
pop
cltd
mov
mov
push
or
mov
les
xor
xchg
sbbb
addl
add
pop
mov
fmull
lahf
rcrl
jns
pushl
xor
xor
inc
inc
and
movsl
sbb
aaa
pusha
aaa
rol
lock
sub
jecxz
sub
cltd
cmpsl
leave
daa
imul
dec
pop
mov
int3
pop
xor
mov
lods
mov
sub
push
or
fwait
pushf
subb
add
push
inc
xchg
out
sub
lahf
pop
jg
jb
cmpsb
rcrb
testl
add
pusha
or
mov
push
loopne,pn
or
pop
pop
mov
das
push
jo
iret
loope
lret
call
stos
or
jns
mov
xor
or
ljmp
mov
pop
sub
mov
popf
jp
std
xchg
mov
bound
test
pop
adc
sbb
add
ror
cmpsb
sbb
mov
inc
sbb
mov
dec
ja
push
mov
popf
or
outsb
jmp
lret
dec
mov
xchg
sbb
adcb
xchg
push
or
int
jbe
pop
jae
add
xchg
xchg
mov
movsb
enter
dec
js
mov
cmp
sbb
sbbb
ss
xchg
push
fnstcw
add
mov
arpl
scas
sahf
in
mov
scas
lcall
out
push
cmp
roll
or
xorb
cmp
fdivl
sub
ret
popa
lea
sbbl
xchg
pusha
aam
fcoms
js
xor
dec
cltd
adc
fists
mov
stos
es
cld
clc
fistpll
bound
arpl
adc
jno
sbb
sbb
cmp
loop
aaa
mov
pop
xchg
fbstp
mov
aam
add
in
sub
dec
inc
pop
clc
pop
bound
xchg
mov
mov
mov
subps
pop
and
imul
mov
push
sbb
cmp
jle
pop
or
test
dec
arpl
inc
imul
clc
stc
xchg
out
out
hlt
jmp
xchg
jl
in
sbb
cmpsb
stos
imul
adc
mov
dec
jle
out
jb
mov
xchg
mov
lcall
lock
xchg
adc
xor
cmpsb
mov
ret
adc
popa
xchg
icebp
sbb
idivl
leave
popa
rcll
dec
sub
in
aaa
cmp
enter
cmpsb
js
stos
jecxz
sub
xchg
clc
push
sbb
dec
add
jmp
pop
or
or
ljmp
in
inc
mov
lret
mov
loop
aam
adc
xchg
adc
jmp
jecxz
movsb
clc
fstpl
mov
fimuls
sti
insl
mov
icebp
xor
mov
out
cmp
cmp
out
dec
xlat
jo
cltd
mov
sub
movsl
jb
pop
push
push
xor
xchg
mov
cmpsb
sbb
and
or
pop
ljmp
mov
loope
mov
out
imul
popa
bound
or
or
sub
mov
les
pop
push
mov
lock
dec
xor
mov
insl
jae
mov
rcr
jo
pop
mov
sti
sbb
push
sub
int
jmp
xchg
int
mov
cmp
loope
inc
stos
aaa
testl
in
mov
subb
push
sbb
pop
out
data16
mov
pop
arpl
into
sub
sbb
dec
add
std
addr16
inc
inc
inc
push
adc
dec
mov
push
cmp
mov
bound
fsubl
cld
out
push
enter
inc
inc
jbe
sbb
clc
ret
xlat
fists
cli
shll
push
dec
in
and
and
inc
mov
mov
in
pop
push
sub
jmp
mov
int
into
cmp
sub
lahf
das
inc
jmp
sub
sbb
dec
jg
pop
and
push
fs
test
into
testl
sub
fdivrs
sub
dec
ud0
and
dec
lods
pop
adc
inc
iret
imul
cmp
xchg
or
cmp
sub
push
fimull
test
test
popf
fistpl
mov
add
inc
jno
sub
mov
push
xchg
outsb
iret
sbb
mov
jo
aas
in
fwait
mov
outsb
in
int3
sub
outsb
dec
add
imul
aas
lret
in
in
jnp
rorb
mov
fcmovnu
mov
mov
pop
lea
push
jae
popf
js
push
lock
loop
jge
jl
add
push
xor
dec
aaa
out
pop
ds
fnsave
mov
in
xchg
mov
test
es
cmp
add
cmpl
jns
jmp
cltd
lcall
ja
or
cwtl
popf
ljmp
clc
and
mov
fldt
add
outsl
or
pop
jb
fbld
adc
call
insb
shrl
pop
dec
cmc
rcll
xor
jle
loopne
or
lock
stc
xchg
nop
mov
and
std
call
jno
mov
ds
movb
scas
addl
mov
sub
push
dec
mov
xlat
lods
imull
push
sti
inc
jp
fwait
movsb
xchg
test
push
and
dec
lahf
stos
in
aam
pop
ds
mov
in
dec
nop
cmpsb
neg
test
dec
popa
push
sahf
scas
stos
mov
insb
test
das
lret
cmpsl
xchg
cli
mov
pusha
or
lret
ss
mov
clc
or
loop
test
ror
cmpsb
push
and
jns
inc
adc
repnz
mov
mul
lods
int
lahf
cmp
mov
out
push
mov
test
add
repnz
out
int3
inc
inc
push
or
jmp
mov
shrb
xchg
inc
sub
int
add
rol
xchg
neg
ret
push
pop
inc
arpl
xchg
sets
mov
or
lock
imul
inc
pop
pop
mov
inc
stc
das
lret
or
pushf
insb
sbb
cli
popa
std
sub
sub
adcl
movsb
shrb
sbb
gs
mov
out
fstpl
daa
ret
in
push
sbb
inc
mov
xor
dec
xchg
sbb
mov
out
push
mov
fstl
repz
mov
push
and
pop
imul
stos
out
xchg
flds
jmp
xchg
popa
cmpsb
loopne
jle
stc
push
stos
xchg
fildl
mov
lods
insl
icebp
int3
lock
cmp
pusha
test
cli
pop
xor
gs
inc
or
jae
in
subb
imul
pusha
dec
mov
xchg
jae
es
add
xor
shrb
xchg
inc
stos
dec
adcl
jp
cmc
add
std
ja
mov
jg
popf
movsb
hlt
cmpsb
cmpsb
cmpsb
sub
loope
jnp
and
add
mov
push
aad
arpl
imul
jo
dec
and
jns
cmp
add
outsl
add
lods
icebp
jge
and
jecxz
sbb
insl
dec
push
ljmp
mov
mov
or
addr16
arpl
or
inc
dec
sub
sbb
insl
inc
push
sub
jmp
lret
outsl
xchg
and
cmpl
icebp
bnd
fxch
stc
jae
pop
stos
in
dec
xchg
push
adcl
mov
int3
scas
test
jne
ret
scas
lret
and
lock
inc
aad
mov
or
je
sbb
and
nop
mov
pop
dec
sarl
in
bound
inc
pop
cmp
out
mov
fstpl
cmp
mov
lcall
sub
test
mov
lds
mov
push
push
adc
fs
cmp
push
mov
jp
push
lods
sbb
es
adc
test
xor
add
ret
loopne
mov
push
cltd
dec
xlat
or
mov
jge
mov
push
push
gs
pop
sbb
fildl
fists
adc
test
xor
rcrl
dec
das
out
in
lock
rcl
pop
mov
test
mov
dec
ljmp
pop
sti
shll
js
push
ja
push
jns
inc
mov
mov
push
push
lret
sbb
or
ret
and
sbb
jecxz
xchg
fcoms
sub
fs
in
js
sbb
or
mov
cmc
outsb
enter
sub
std
dec
arpl
jl
push
adc
aaa
cmp
mov
out
ficomps
outsb
push
jg
push
jg
lds
cld
inc
and
jge
push
ret
dec
mov
pop
cmp
ss
jle
enter
inc
pop
cwtl
test
enter
sbb
adc
stos
xor
cmpsl
test
push
add
sub
lds
push
jns
mov
push
iret
int3
shrl
and
test
je
lret
add
idiv
xchg
popf
add
inc
pop
and
jl
into
sahf
test
mov
mov
push
cmpsb
push
popf
rcr
dec
lea
dec
into
mov
lods
or
dec
lds
mov
in
adc
sbb
js
js
orb
mov
cmp
mov
mov
dec
cmp
hlt
or
or
jmp
mov
aad
adc
cwtl
pop
and
sbb
mov
cltd
mov
test
ss
lret
addr16
sbbl
mov
outsl
stc
adc
imul
add
push
leave
sbb
xor
dec
inc
lock
iret
inc
jbe
inc
jnp
dec
scas
mov
fisttps
out
pop
push
and
jl
and
dec
add
nop
sbb
mov
inc
push
mov
std
in
sti
sbb
loop
shlb
bound
cmpsl
fldcw
lds
xchg
inc
dec
inc
movsb
sbb
pop
inc
fnsave
out
jmp
xor
bound
enter
jne
add
jnp
xor
andb
sar
sbb
frstor
sub
xchg
xor
sbb
mov
mov
insb
call
sbb
inc
sub
cmp
jbe
inc
adc
ljmp
ss
ret
cmp
adc
or
insl
mov
sbb
aas
dec
mov
movsb
adc
push
sbb
jo
mov
jle
xor
roll
mov
or
and
adc
mov
push
sbb
out
stc
roll
xor
jb,pt
xchg
arpl
jno
imul
sub
add
mov
je
dec
iret
and
out
inc
movsl
cli
jne
addr16
clc
sub
rcrb
mov
cmc
dec
insb
les
clc
iret
cwtl
mov
jnp
jns
lea
fsubrs
in
fninit
bound
jl
and
mov
xchg
nop
pop
sub
pusha
dec
setp
and
sbb
inc
movsl
repz
test
or
inc
add
stos
ja
mov
inc
daa
lret
pusha
xchg
sbb
iret
mov
sahf
add
pop
arpl
jbe
pop
or
sahf
bound
pop
bound
cmp
dec
push
orl
jnp
in
lahf
gs
hlt
dec
sub
mov
push
push
pusha
and
push
call
out
lods
and
or
inc
cmp
ljmp
mov
jnp
push
addr16
lret
popf
int
icebp
aam
push
pop
mov
lods
push
push
dec
fcmovnb
add
adc
icebp
pop
push
and
lahf
cmp
inc
decl
js
adc
xor
repnz
dec
cmp
icebp
mov
arpl
leave
sub
sbb
repnz
fimuls
and
mov
imul
in
xchg
add
jp
push
jmp
xchg
imul
mov
mov
testl
push
lcall
xchg
inc
je
push
xchg
insl
xchg
ret
mov
and
jo
xchg
add
sub
stos
xchg
into
test
fstpt
mov
fprem1
and
call
cmp
test
push
or
xchg
in
mov
push
push
stos
popa
out
dec
mov
mov
inc
push
test
sub
aas
mov
adc
inc
outsb
lods
dec
stos
jno
jae
xor
es
inc
add
pop
xchg
cmp
test
shrb
push
cltd
dec
cmp
test
cmp
movsb
adc
in
sub
pop
nop
mov
mov
cmpsl
pop
pop
jae
test
or
out
adc
loope
pop
jle
add
mov
pop
gs
out
pop
dec
in
cwtl
adc
or
adc
cmpsl
xor
xchg
add
cmc
stos
stos
dec
test
mov
lods
lahf
loope
ror
jae
enter
add
hlt
add
jl
inc
adc
cmp
mov
repz
sbb
das
push
push
pop
xchg
sub
push
jg
adc
cltd
cmpl
lcall
filds
sbb
fisubl
or
stos
ds
insb
addr16
cmp
push
push
insl
ss
stos
inc
scas
xor
sub
jmp
leave
shll
arpl
xor
nop
scas
mov
mov
stos
leave
test
push
out
sahf
insb
and
test
xor
lea
push
jl
outsl
repnz
sub
push
fcoms
mov
adc
mov
sbbb
repz
add
sarb
cmp
in
pop
sub
cmp
dec
outsb
pop
push
dec
mov
fldenv
jb
push
mov
lcall
xchg
repnz
aas
add
fildl
inc
movsb
popa
test
mov
loope
out
cmp
out
mov
xlat
jo
push
add
cmp
in
mov
ss
or
sbbb
inc
adc
push
push
cltd
pusha
shr
repnz
stc
pop
icebp
cmc
aam
ret
jp
cs
outsl
push
mov
shlb
xor
and
sahf
sbb
lods
cld
mov
loope
jl
gs
xchg
and
mov
push
adcb
add
imul
add
pop
enter
fs
sbb
in
sbb
pop
xchg
mov
in
shll
ret
fbld
sub
pop
pop
int3
addb
imul
lret
adc
call
cmp
adc
data16
cmovb
out
dec
pop
adcl
stos
addl
xchg
lods
in
sbb
repz
movnti
lret
inc
or
int3
notl
jle
mov
movsb
add
mov
rclb
aaa
inc
int3
xchg
sub
mov
xor
loop
inc
daa
jle
dec
add
xor
sbb
es
cmpsb
loope
pop
xor
sti
jns
gs
stos
mov
dec
call
lods
je
fwait
dec
lcall
jg
ljmp
xchg
outsb
inc
or
loope
xchg
xchg
mov
xchg
mov
adc
mov
popf
movsl
ret
fistpl
sub
paddq
orb
xchg
sub
popf
xchg
mov
fstl
pop
ljmp
and
stos
jns
imul
or
fmull
movsl
pushf
mov
xchg
add
push
mov
add
mov
cmp
pop
jbe
jno
dec
roll
movsb
rclb
sub
jne
loopne
or
popa
lods
cmp
test
cltd
arpl
loop
sbb
lahf
mov
xor
push
dec
sub
mov
pop
mov
in
pop
add
dec
scas
push
cmp
pushl
scas
pop
mov
push
jno
mov
std
fsubrs
mov
push
pop
stos
sub
cli
data16
cltd
jge
clc
into
les
adc
loop
scas
insb
pop
inc
jb
cld
mov
xlat
cmp
jle
ret
cmp
lods
shll
daa
shll
mov
outsl
fildll
hlt
mov
cmp
pop
mov
pop
cmp
push
xchg
stc
pop
and
cmp
and
movsl
cmp
cmpsl
inc
in
sub
cmpsl
fwait
dec
outsb
push
test
jns
mov
xor
out
push
and
mov
cltd
mov
je
pop
push
lds
cmc
pop
pop
movsb
daa
arpl
mov
dec
mov
sbb
or
dec
jne
lcall
inc
xchg
add
jbe
stos
adc
std
and
mov
pop
mov
lcall
out
dec
inc
cmp
or
sub
hlt
movsl
jmp
bound
je
out
push
je
fiaddl
adc
rol
hlt
xor
lret
xacquire
sbb
cmpsb
fucom
lock
out
stos
xchg
ds
out
ror
test
pop
inc
pusha
filds
and
inc
pushw
retw
ja
adc
pop
lods
nop
shl
cmp
jecxz
jns
test
fistl
push
inc
lods
repz
popa
mov
icebp
mov
jbe
loop
ljmp
cli
inc
and
push
fwait
inc
mov
push
and
pop
mov
mov
repnz
jge
hlt
adc
pop
in
aas
push
sbb
lahf
and
xor
es
stos
adc
xchg
mov
add
inc
jne
cmc
filds
jae
dec
xlat
mov
in
sub
cmp
or
xchg
inc
dec
movsl
jle
inc
pop
mov
pop
inc
inc
loopne
das
ljmp
hlt
push
out
push
push
mov
lods
aaa
dec
sub
mov
mov
add
mov
push
adc
and
xchg
adc
lahf
imul
push
cli
or
or
mov
jnp
shlb
sbb
adc
xchg
fs
cmp
test
push
jns
lret
mov
fstp
sbb
fiadds
in
testb
ljmp
and
pop
pop
xchg
push
shll
and
xchg
nop
aas
inc
vrcpps
inc
fldt
xor
mov
aad
ret
jno,pt
sub
push
mov
stos
jmp
sti
dec
or
push
jp
or
pop
sub
jnp
mov
fwait
ljmp
fldt
or
push
jp
or
pop
sub
jnp
mov
fwait
cli
stos
cli
mov
stos
jmp
sti
dec
or
arpl
jle
or
pop
outsl
or
negb
mov
mov
stos
jmp
cmp
movsl
mov
sub
jge
xchg
and
adc
add
repnz
hlt
pop
shll
cmp
call
inc
mov
adc
loop
rorb
cmp
or
stc
jb
fsts
inc
jns
test
add
imul
cmp
or
mov
leave
and
jl
jno
orl
cmpsl
adc
icebp
or
fwait
or
std
ja
xor
cltd
lea
mov
mov
mov
daa
out
hlt
mov
insb
popf
es
ss
xor
push
sub
popa
out
pop
mov
pop
and
and
out
or
jmp
xchg
mov
xor
dec
xchg
push
adc
pushf
clc
or
insb
popf
daa
mov
fcompl
sbb
mov
cmp
sub
lea
inc
ljmp
cld
test
outsl
lcall
push
lcall
es
loope
jmp
adc
pop
mov
imul
cmp
or
fsts
inc
mov
adc
mov
cmp
pop
lret
jge
or
stc
or
mov
imul
sbb
or
cmp
and
out
popa
sti
pop
out
cmp
daa
mov
inc
cld
insl
sbb
imul
sbb
jmp
inc
mov
adc
loop
rorb
cmp
or
fsts
inc
mov
adc
mov
aas
data16
sub
sbb
fdivr
ficoml
lock
cmp
test
lret
xor
sub
cmp
or
roll
inc
sub
mov
and
cmp
movsb
mov
jle
mov
pop
xchg
xor
push
popf
and
jg
out
std
out
sarb
nop
arpl
mov
inc
adc
push
das
adc
cltd
pusha
and
fs
insl
xchg
test
lods
mov
jle
or
push
call
sbb
mov
sbb
jmp
sub
shll
lret
inc
jo
scas
xlat
fistpll
push
dec
fsubrs
fld
and
or
cmp
jge
jmp
loop
je
sahf
mov
push
out
mov
clc
xchg
jae
mov
daa
clc
mov
and
lret
xchg
int3
or
fwait
mov
movsb
inc
ljmp
jno
shlb
xor
cmp
popa
popa
and
test
sarb
cmpsl
inc
mov
pop
cmpsl
push
or
mov
stc
out
mov
inc
imul
jl
jp
les
add
aad
dec
inc
dec
xor
test
cmp
mov
inc
sub
cmc
test
arpl
mov
stos
inc
gs
imul
sub
call
mov
cwtl
mov
jb
xor
mov
adc
pop
sbb
hlt
or
and
je
ret
pusha
and
xor
xchg
fsubrp
jnp
inc
xchg
sub
fdivs
inc
add
nop
adc
and
push
scas
leave
jno
idivb
shrb
mov
xor
mov
loopne
nop
mov
jmp
pop
repz
push
faddl
shll
push
gs
arpl
in
sti
leave
jae
xchg
sbb
cld
inc
push
push
adc
hlt
push
jmp
inc
xchg
movsl
fnstcw
fs
xchg
shrb
push
out
and
xchg
sarl
pushf
addl
push
pop
scas
cwtl
inc
insb
mov
xor
test
pop
test
sub
xchg
add
adc
inc
jno
ret
push
gs
xchg
fistpl
mov
or
mov
cmp
movsl
xor
dec
imul
ss
xchg
sub
stos
popa
js
xor
stos
sub
add
xor
lock
pop
daa
mov
stos
fdivs
loope
cmc
outsl
sti
cwtl
mov
std
inc
sub
push
pop
push
cmp
add
jae
out
rep
mov
cmp
mov
fmuls
sub
lahf
outsl
addr16
cs
test
shrb
add
fldt
rcrl
pushf
lretw
push
xchg
pusha
pop
les
lahf
pop
jmp
push
mov
lock
movsl
in
pop
xor
fistl
imul
fidivl
loopne
mov
mov
repnz
pop
push
or
js
imul
pop
sub
jmp
mov
sbb
cltd
hlt
movsb
xchg
pop
nop
ret
pop
fs
sbb
push
add
inc
int3
loope
pop
jp,pt
xchg
les
push
push
cmpsl
mov
mov
xlat
pop
stc
push
sub
and
inc
imul
fcomip
movsb
mov
movsl
je
jns
lret
gs
inc
and
mov
rol
xchg
cwtl
aas
pop
and
and
jne
dec
xchg
inc
data16
enter
dec
cli
ret
inc
movsl
stos
addb
sbb
mov
jbe
stc
xchg
push
mov
ja
adcl
aaa
pusha
add
mov
sub
enter
mov
fbstp
jmp
lahf
push
cmpsb
loope
fidivs
dec
into
jnp
mov
arpl
inc
cmp
mov
ret
inc
pop
jmp
xchg
xor
pop
adc
insl
icebp
jecxz
sti
lea
lods
mov
leave
mov
lds
daa
stc
ficoml
mov
stos
push
sbb
jne
repnz
and
cli
xor
inc
cli
adc
sub
loop
imul
mov
orl
cmpsb
xchg
das
cltd
fwait
sub
in
adc
xchg
stos
mov
lahf
adc
add
testl
ds
outsl
loope
cmpsb
lods
inc
xchg
mov
mov
jns
push
adc
xor
daa
scas
sti
imul
mov
mov
pop
xchg
subl
cmp
in
loopne
sbb
cmp
jno
xor
mov
arpl
nop
dec
call
dec
out
arpl
push
enter
fwait
and
hlt
mov
xor
aad
jmp
popa
enter
test
jle
adc
mov
mov
mov
in
adcl
inc
lret
je
ljmp
shll
xor
ss
imull
fnstsw
lcall
mov
cmp
dec
adc
in
pop
adc
cmp
movsb
jbe
jp
out
cmp
repz
aaa
sub
dec
jmp
iret
cmp
mov
cmp
mov
push
insb
rcr
jg
cmp
mov
jno
gs
mov
cmp
js
fs
idivb
adc
push
popf
push
pop
aad
xchg
jecxz
inc
mov
lahf
xchg
xor
sub
mov
pop
cmp
lret
mov
pushf
testb
push
outsl
hlt
daa
sbb
lcall
xor
mov
or
fstps
test
cmp
testl
sbb
jnp
daa
mov
pop
jecxz
fidivrl
pop
fadds
fstl
add
inc
sbb
jp
icebp
hlt
jmp
stos
jg
shrb
sahf
fildl
je
movsl
add
inc
repnz
cwtl
and
jge
jmp
dec
cmpsb
sbb
inc
push
sub
lods
and
and
mov
sti
adc
fwait
movsl
mov
cmp
leave
mov
divb
xchg
or
in
jmp
adc
cmpsl
mov
adc
addr16
jl
cmp
mov
fistps
sahf
sbb
cmpsl
addl
aam
imul
pop
jl
cs
fists
mov
mov
cld
jp
cmp
jl
loopne
xor
fcoml
test
mov
push
out
int3
out
btr
scas
movsl
negb
push
and
sub
xchg
mov
push
movsb
mov
js
stos
sldt
pop
and
xor
mov
lods
xlat
adc
xor
sbb
or
fidivrs
das
pop
icebp
sub
aad
xlat
push
xchg
in
lcall
loop
rcll
pop
lret
jecxz
adc
mov
in
mov
xchg
imul
xor
scas
cs
fstl
fiaddl
inc
mov
movsb
in
cmp
add
mov
pop
mov
pop
sbb
push
jge
push
subb
adc
xchg
lahf
adc
cmpsl
add
mov
xchg
push
fdivrs
psadbw
not
data16
and
shrb
sub
lods
popa
push
enter
lods
and
aaa
shl
fcoms
sbb
or
add
sbb
outsb
sub
mov
push
rolb
jmp
popf
sbb
ljmp
out
jne
xor
jne
pop
xor
push
ja
in
push
xchg
mov
adc
and
fmuls
pop
gs
movsb
mov
add
lods
insb
outsb
shlb
cmp
mov
pushl
std
dec
jmp
sarl
add
xchg
test
xlat
and
mov
pop
xchg
mov
push
bound
jmp
daa
and
cmp
in
call
adc
leave
leave
dec
xchg
out
mov
leave
cmp
jnp
idivl
add
and
pop
in
xor
pop
inc
iret
mov
out
mov
pop
rorb
or
ljmp
ss
std
sub
push
xor
pop
sub
dec
lea
mov
lock
push
fisttpll
push
lret
lret
dec
jno
sbb
or
js
xchg
pop
mov
mov
adc
cs
dec
jo
stos
pop
push
push
sbb
jge
inc
out
push
sar
daa
sbb
mov
push
pop
jb
ds
popa
fstl
fistps
hlt
cltd
aad
sbb
push
and
push
rclb
jge
dec
ja
sbb
adc
push
sahf
cmp
lcall
insb
into
xchg
out
and
or
sub
ret
pop
adc
lea
push
mov
sbb
adc
in
sbb
in
inc
in
inc
jae
dec
adc
lcall
xlat
xchg
mov
pop
jmp
or
jg
add
pusha
cmp
sub
adc
mov
lock
mov
inc
lock
jecxz
inc
mov
in
fwait
stos
inc
out
adc
and
ret
addb
stos
bound
adc
sub
cmc
push
fnsave
int
adc
data16
xor
lea
lods
aaa
fwait
aam
xchg
adc
out
sub
rcl
imull
mov
inc
jmp
iret
mov
sub
dec
pop
xor
repz
ficoms
test
mov
and
outsb
mov
repz
mov
push
dec
rcrl
xor
ljmp
push
outsb
mov
inc
add
jge
xchg
cli
pop
mov
shrl
dec
mov
jnp
sbb
and
insl
mov
cwtl
jle
shr
pusha
inc
loopne
fbstp
mov
sar
sub
pop
adc
pop
xchg
xchg
mov
test
mov
lea
rclb
out
add
fmuls
sbb
or
push
sbbl
daa
xchg
test
gs
cmp
imul
nop
add
or
xlat
xchg
call
sub
fcompl
mov
test
cmc
movsl
pop
into
mov
pop
mov
xchg
jmp
mov
lret
xchg
arpl
popa
and
jnp
sub
xor
stos
dec
mov
or
add
sub
popf
outsb
fnsave
jle
test
lret
pop
movsb
aas
add
lods
dec
pop
push
jne
stc
shlb
mov
lods
pop
push
push
pushf
icebp
insl
xchg
jns
repz
jno
jp
das
jl
cli
or
push
outsl
jbe
int3
add
dec
adc
pop
pushf
in
jns
cld
pop
xchg
sub
aad
mov
inc
xor
jp
loope
xchg
inc
sbb
movsb
mov
and
pusha
xor
mov
cmp
adc
jmp
add
mov
stos
mov
adc
dec
cltd
xchg
push
xchg
mov
jns
pop
gs
ret
push
shll
dec
insb
xchg
jle
aam
loop
mov
jecxz
cmpsb
push
repz
movsl
in
cwtl
pop
jne
stc
scas
ljmp
sbb
hlt
and
adc
mov
add
and
push
fcompl
push
pushf
jns
dec
sbb
out
call
cmp
jb
sub
stc
mov
pop
mov
andb
push
js
ds
pop
cmp
adc
leave
and
jmp
hlt
lea
out
jo
sbb
clc
std
int3
push
repnz
pop
lea
pop
dec
dec
das
push
jnp
inc
nop
clc
out
add
or
push
rclb
push
ret
icebp
push
int3
sub
out
fld
imul
sub
imull
leave
mov
sub
inc
aam
xchg
ffree
inc
enter
aad
shrl
test
cld
mov
push
jge
xchg
inc
adc
popa
shrb
push
mov
dec
pop
test
pop
sahf
ret
adc
cmp
lods
jns
nop
add
rcrl
jg
or
roll
in
scas
and
ss
sub
in
hlt
in
add
outsb
sub
xchg
jo
mov
out
mov
cli
push
cmp
fcoms
push
cmpb
stc
cmp
loope
loope
imul
pop
push
jg
mov
cmp
mov
or
pushf
loopne
shrl
cmp
adc
pop
mov
xchg
adc
mov
pop
out
lods
cmc
int3
out
imul
jns
mov
xorb
gs
cld
cmp
jg
and
mov
adc
aas
pusha
scas
mov
inc
sar
push
fsubl
lea
punpckhdq
cmc
test
cmp
xchg
inc
mov
push
dec
bound
jle
pushf
jae
je
repnz
cmp
mov
mov
imul
add
pop
pushf
loopne
mov
movsl
bound
rorl
pop
je
dec
mov
jnp
push
pop
dec
inc
xchg
cmp
lea
lea
cmp
clc
cmp
xchg
lret
arpl
call
in
mov
orb
or
fcoml
mov
or
and
vxorps
stc
in
bound
stos
add
hlt
test
les
push
add
push
addr16
push
in
movb
lock
mov
int
pop
mov
into
iret
gs
hlt
lods
sarb
add
pop
out
mov
mov
push
mov
sti
hlt
pop
stos
lock
jp
lods
movsl
jge
cs
ja
dec
scas
scas
fsubp
mov
stos
pop
add
adc
add
mov
push
and
in
test
call
lods
in
in
xchg
push
xchg
dec
jnp
mov
mov
icebp
dec
or
jbe
stc
dec
inc
push
fdivs
jg
bound
lahf
shl
sub
push
sub
or
jnp
mov
xchg
push
inc
inc
inc
pop
enter
js
cmpsb
xor
int
sub
data16
push
jl
movsb
pushf
incl
js
dec
mov
pusha
dec
das
mov
or
int
out
adcb
or
in
cmp
push
mov
push
xchg
dec
cmc
testl
pop
add
or
dec
jg
test
mov
in
jg
ljmp
shrb
addr16
bound
inc
or
xchg
nop
xor
ja
add
imul
loopne
mov
test
ret
test
mov
adc
hlt
or
lret
imul
nop
jo
pop
in
sti
sbb
xlat
popa
pop
mov
das
xlat
cli
test
cwtl
xlat
push
mov
nop
aas
and
fmull
fldl
test
jbe
insl
jnp
adcl
xchg
not
add
lcall
cmp
int
push
dec
mov
pop
mov
bnd
sub
loopne
and
mov
jp
pop
cli
inc
and
pop
sub
push
iret
sbb
nop
or
pop
frstor
xor
sub
out
dec
adc
sti
or
je
mov
inc
fwait
dec
sub
lret
ss
mov
xchg
lds
lods
add
pop
dec
push
adc
mov
jg
dec
dec
push
std
pop
fisubrs
jbe
dec
lock
jne
gs
or
movsl
clc
movsb
sti
shl
test
adc
sarl
sahf
icebp
cwtl
ss
mov
mov
faddp
das
mov
fists
iret
mov
push
pop
push
cmp
and
ffree
xchg
inc
ror
fsts
cld
mov
pop
jb
lret
or
jo
add
xchg
in
dec
and
in
cld
nop
xlat
add
aad
in
shrl
imull
dec
adc
pop
lret
xchg
add
mov
push
pusha
mov
scas
repnz
cld
mov
and
dec
pushw
dec
pop
test
xchg
mov
iret
mov
dec
lods
aad
loope
or
push
dec
fcmove
bound
enter
xor
fwait
clc
xorl
push
imul
das
dec
mov
pop
lods
sub
aam
or
shl
imul
cmp
enter
out
dec
mov
dec
jg
outsb
fld
out
into
and
sbb
lret
sub
push
je
or
imul
dec
cli
xchg
sub
outsl
in
sahf
ret
inc
push
xchg
fcoms
fisubs
incb
fstps
jno
xchg
inc
sub
sub
sbb
cmp
mov
stos
scas
pop
mov
lods
icebp
test
scas
jbe
les
pop
mov
add
out
cmp
push
pop
xor
dec
fdivrp
aaa
cmpsl
add
out
pop
out
shlb
hlt
pop
jae
xchg
lcall
ja
loop
mov
je
push
popl
mov
test
xchg
add
stos
js
push
lahf
test
mov
mov
jle
data16
addr16
stos
inc
xchg
mov
sub
push
int
pop
sub
int3
or
or
mov
sub
mov
shl
repz
sbb
xchg
mov
xchg
js
sbb
idivl
shl
lea
loopne
fisttps
movsb
add
sbbb
adc
cli
add
cltd
jne
xor
mov
inc
cltd
fdivrp
or
pop
out
loop
sti
adc
jo
mov
fsubl
jle
je
jae
and
push
push
iret
mov
ljmp
jne
xchg
int3
into
xor
dec
scas
test
cltd
mov
pop
inc
dec
in
fstps
cmp
aas
mov
roll
or
and
sti
mov
xchg
in
inc
movsl
or
xor
mov
mov
lret
std
fldenv
fnsave
std
popf
mov
cmp
les
insl
adc
cmpl
jp
add
mov
xor
jge
and
gs
xorb
gs
repnz
sbb
mov
daa
test
aad
hlt
dec
sbb
in
mov
inc
movb
xchg
lds
mov
or
shl
nop
mov
mov
out
call
mov
lret
loope
mov
sbb
mov
add
and
hlt
dec
ljmp
movsl
daa
call
cltd
and
mov
loop
clc
xchg
dec
xlat
pop
cmp
das
imul
add
das
icebp
push
pop
adc
mov
imul
sbb
mov
aas
add
enter
push
mov
les
ficompl
or
adc
jno
xchg
cs
mov
fdivrl
cmpb
insb
mov
mov
add
dec
fsubr
les
test
jp
mov
lcall
push
iret
sbb
mov
insb
inc
dec
je
mov
lock
or
inc
jbe
jp
xchg
ja
mov
inc
mov
pop
mov
rcl
jmp
test
sahf
sbb
xor
enter
incl
stos
jecxz
loop
adc
xlat
rol
mov
hlt
and
and
xchg
arpl
das
xchg
and
addl
mov
aad
test
pop
jo
hlt
inc
push
out
inc
mov
cmpsb
add
hlt
dec
pushl
data16
pop
rol
xchg
pop
and
and
mov
mov
pop
pushf
jg
add
loop
pmullw
push
es
or
iret
adc
outsl
cmp
pop
ja
clc
pop
xchg
dec
xchg
xchg
add
and
adc
lock
repnz
test
sbb
cmp
pop
es
fwait
dec
into
inc
nop
mov
out
insl
jl
movsb
int
jb
pusha
adc
xor
aad
lds
cltd
aad
stos
mov
pusha
xchg
testb
stc
xchg
mov
les
sbb
mov
sbb
into
bound
mov
stc
mov
cmpsb
mov
mov
imul
jmp
adc
sbb
movsb
lcall
ja
jl
inc
lret
rcr
addr16
cli
into
jne
sbb
repz
dec
mov
in
int
jmp
jae
push
adc
mov
mov
dec
cmpb
add
mov
inc
stc
mov
jnp
out
mov
leave
hlt
ljmp
std
std
inc
and
divb
pop
int3
lahf
xor
mov
dec
scas
inc
jmp
or
or
test
push
mov
mov
push
lahf
in
mov
cs
sbb
scas
lds
or
lahf
push
aas
mov
movsl
pop
in
pop
adc
add
mov
iret
mov
mov
push
icebp
cltd
iret
push
mov
xor
fld
jle
shlb
jno
insl
call
ja
inc
pop
or
cmp
int
push
push
mov
xor
lret
ljmp
fwait
add
pop
push
rolb
cli
icebp
adc
clc
mov
test
mov
movsb
sub
call
cs
jg
dec
mov
push
dec
xor
jmp
and
cmc
out
rclb
mov
stos
pusha
cmp
sbb
push
xchg
push
mov
inc
movsb
gs
inc
inc
add
cmp
ds
cpuid
ficomps
add
fisubrs
movsl
insl
xchg
lcall
lcall
sbb
mov
sub
fs
and
inc
imul
stos
fdivrs
xchg
xchg
fsts
ret
int3
mov
jnp
lock
mov
inc
xor
roll
repz
dec
ret
sub
stc
jb
fsts
inc
mov
adc
loop
rorb
cmp
or
fsts
inc
mov
adc
loop
rorb
mov
xchg
mov
fsts
inc
mov
adc
loop
rorb
cmp
or
jae
leave
xor
jmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pusha
imul
mov
movsb
sub
push
stos
jne
sbb
or
and
mov
fs
fs
xchg
jo
inc
mov
movsb
and
xor
add
adc
loopne
lock
adc
and
aaa
mov
xorb
lea
inc
lods
push
mov
add
adc
loopne
sarl
mov
mov
mov
and
fs
adc
inc
sarb
das
cmp
jmp
fwait
and
lret
jb
mov
xlat
aas
mov
pop
mov
pop
xor
cld
jle
insb
pop
xchg
jge
ds
and
shll
sub
jmp
shlb
lret
or
in
rorb
cmp
nop
fs
les
xorl
pop
lods
adc
adc
and
das
fcomi
pop
mov
js
sbb
xor
inc
fcomip
adc
cld
movsb
fwait
in
cltd
clc
add
jno
and
cmp
leave
jg
nop
fwait
pop
fwait
mov
scas
outsl
or
mov
imul
pop
jecxz
inc
mov
xchg
inc
movsb
push
mov
add
adc
loopne
lock
sub
mov
xorb
icebp
adc
sbbb
cwtl
xchg
mov
popa
xchg
dec
es
pop
in
loopne
push
in
add
and
adc
inc
nop
push
mov
inc
shlb
es
jmp
aad
loope
aad
shll
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jo
inc
mov
movsb
and
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
adc
fstl
ret
dec
or
andb
mov
subl
addb
pop
addl
mov
sarb
mov
adc
jl
sbb
mov
mov
fimuls
xchg
jl
sbb
adc
push
xchg
sub
call
xor
adc
fwait
mov
lret
lock
jg
and
bound
sbb
out
sbb
imull
sub
xchg
adc
sbb
mov
imul
pop
inc
dec
mov
inc
jmp
lcall
sti
out
test
dec
ret
fisubl
mov
shll
cli
inc
adc
pop
push
sahf
call
mov
fidivs
xchg
sbb
xor
inc
lret
xchg
dec
dec
or
jbe
jecxz
ds
nop
pop
pop
pop
sar
mov
cmp
sbbb
fnstsw
xchg
fmul
js
scas
adc
outsb
fdivl
jge
fcomps
mov
dec
dec
xlat
sbb
sub
test
mov
adcb
stc
jl
sahf
test
jno
jge
daa
std
ss
push
jle
sbb
push
fnstcw
xor
pushl
jne
sbb
ljmp
dec
lahf
push
xor
cmp
daa
and
lods
repnz
sbb
stc
out
mov
adc
inc
or
jae
xchg
or
jmp
hlt
data16
jl
cltd
push
or
push
inc
and
lock
ret
leave
xchg
add
iret
pop
push
and
add
jo
inc
lock
nop
imul
mov
aaa
lods
inc
jmp
pop
outsl
rcrb
xchg
push
adc
push
pop
sub
adc
loope
or
data16
out
iret
cld
sbb
pushf
pop
sbb
xchg
and
mov
push
adc
aad
xor
pop
in
cmp
dec
push
push
scas
lret
mov
mov
dec
mov
icebp
cld
xrelease
fbld
int3
ljmp
cmp
pop
adc
inc
pop
jnp
dec
or
loope
loopne
and
ficoml
fists
mov
adc
popa
mov
leave
sbb
dec
loopne
add
test
cmp
add
sub
add
push
ja
cmp
lahf
popf
loop
push
mov
inc
sbb
xlat
sub
adc
movsl
arpl
adc
add
jbe
stc
dec
push
cmpsl
jle
dec
mov
xchg
inc
fs
inc
addr16
cmp
loopne
add
push
dec
dec
andb
or
add
test
cwtl
inc
inc
arpl
dec
adcl
push
aas
cltd
cmpsl
sahf
cwtl
cmp
call
in
insb
loopne
fdivrs
pop
ljmp
out
sub
xchg
repnz
inc
pop
jp
or
lock
sbb
push
rcrb
dec
pop
aas
loop
mov
add
gs
insl
cmp
ds
test
imul
fs
imul
pop
jmp
lods
test
repz
inc
aam
mov
dec
divb
mov
shl
clc
mov
pop
push
ds
or
jp
shl
xor
pop
out
aas
xor
ja
add
mov
cltd
push
dec
scas
jp
lds
mov
lahf
pop
sti
push
roll
or
add
cmp
sub
cmp
pop
mov
inc
test
mov
mov
int
xor
jge
xchg
pusha
pop
js
repnz
inc
jo
in
sub
mov
or
addr16
lods
adc
loope
std
repz
mov
dec
mov
ret
stos
imul
or
dec
add
xor
dec
pusha
mov
dec
push
in
pop
mov
push
scas
icebp
mov
sub
push
or
xchg
mov
push
add
arpl
push
int3
or
inc
jecxz
dec
dec
les
add
mov
pop
lea
mov
scas
enter
cmpsb
jmp
mov
pop
inc
cs
mov
inc
ret
cmp
mov
scas
xlat
jb
sub
sbb
je
je
movsl
popa
bound
xchg
push
and
push
mov
sub
mov
std
in
dec
mov
sahf
jg
xchg
and
and
imul
jmp
jae
pushf
adc
sbb
sbb
or
pop
push
movsb
lods
xor
and
mov
xchg
mov
aas
mov
data16
or
int
push
and
rorl
adc
stos
pop
mov
icebp
cmp
shr
mov
pop
out
cmp
int
dec
sub
fcoms
sahf
or
sbb
push
ret
and
add
adc
outsb
push
or
jle
xor
movsb
xlat
add
lret
fisubrs
jp
stos
repz
out
test
mov
cmpb
out
xor
push
xor
cmp
xchg
sbb
inc
pop
repnz
ss
lret
fwait
jp
scas
out
popl
cld
fldenv
xlat
cmpsb
cwtl
pop
aaa
ds
sarl
push
sti
push
add
scas
stos
rcr
sub
push
mov
in
insb
cmc
ss
jns
pusha
cltd
lods
iret
int3
sub
inc
push
inc
test
loope
fisttpl
xchg
xlat
cld
int
out
pop
dec
popa
xchg
xor
add
or
aad
aam
mov
pop
xchg
outsb
aad
mov
lret
push
ljmp
in
sbb
pop
out
inc
cmp
cli
mov
or
rorb
mov
jae
lods
xor
fisubs
pop
mov
xchg
nop
inc
push
fstps
insl
loope
cmp
mov
mov
sub
jne
out
mov
in
lret
mov
dec
in
xchg
or
mov
in
inc
mov
das
aaa
add
pop
fimull
sub
and
inc
jle
flds
nop
fmull
jmp
pop
ret
dec
xlat
xor
mov
shrl
jns
lock
push
les
jmp
push
and
bound
cmc
scas
out
inc
rol
dec
mov
clc
scas
repz
pusha
push
int3
aas
outsl
imul
and
sarb
jae
scas
ud2
pop
jns
cmp
dec
jnp
add
mov
pop
push
sbb
mov
int
xor
add
popf
sbb
pop
loopne
inc
sbb
dec
add
cmp
sbb
mov
adc
fs
mov
mov
mov
movsb
movsb
sub
or
cmpsl
daa
or
or
push
jl
fisttpll
or
xchg
rcll
shlb
jnp
cmp
mov
std
xchg
pushf
gs
fmull
js
fwait
mov
mov
mov
or
pop
bound
in
orl
std
mov
adc
jl
push
je
mov
ljmp
push
sti
stc
sub
xchg
les
add
mov
add
or
xchg
in
mov
imul
mov
xchg
mov
daa
inc
mov
outsl
js
and
test
dec
nop
enter
dec
inc
mov
sarb
loop
sub
push
pop
into
ljmp
loop
scas
xor
cs
inc
pop
mov
mov
push
sbb
mov
xor
pop
and
inc
les
out
sub
mov
push
push
addb
xor
push
and
sub
shlb
xchg
lss
loope
mov
out
jne
out
sub
push
outsb
xchg
test
in
cwtl
lcall
sbb
cmpsb
mov
jne
jb
outsl
and
out
mov
inc
xlat
test
cmp
leave
jns
inc
cmp
jmp
ja
gs
pop
scas
sbbl
pop
call
cmp
and
lahf
or
js
lahf
in
inc
mov
inc
push
data16
jno
sbb
inc
sbb
sub
lds
es
dec
sbb
rcrb
lock
pusha
or
xchg
push
lret
mov
jne
cmp
xlat
jp
mov
and
out
mov
adc
mov
cmp
andb
sub
jle
stc
inc
outsb
setge
pop
adc
xchg
push
sub
cmp
mov
addl
shrb
sub
fisubs
sub
mov
loop
dec
outsb
and
nop
mov
frstor
mov
and
sahf
dec
push
popa
adc
in
je
jno
add
sub
sub
iret
mov
add
push
sub
jmp
insb
aad
lds
imul
insb
dec
movsb
shlb
sub
and
sub
das
sbb
fstp
imul
add
lahf
adc
bound
pop
pop
dec
int
icebp
mov
mov
test
pusha
add
jne
push
pushf
je
cmpsl
push
mov
bound
xchg
cmp
rorb
inc
add
mov
mov
addr16
sar
lods
lds
sub
pop
les
xchg
out
mov
roll
jno
pop
insb
movsl
ljmp
ss
into
jno
out
int3
lods
push
out
mov
xchg
fcmovnb
cmp
imul
xor
and
sarl
cmp
pop
mull
iret
loopne
xchg
ret
or
ds
shlb
push
ret
insl
enter
sbbl
fs
test
add
shl
repnz
lret
pop
mov
mov
adc
sar
pop
push
testb
sbb
aad
sti
mov
push
mov
roll
and
mov
adc
add
mov
xchg
jle
loop
pop
mov
je
sub
mov
mov
mov
mov
adc
adc
and
ret
sub
ds
mov
or
das
popf
mov
mov
jecxz
jno
mov
aaa
jo
jns
daa
jl
je
and
or
popa
cli
mov
pop
std
adc
lret
pop
push
popa
aas
jg
sub
sub
push
push
dec
xchg
sarb
imul
call
pop
fsubs
dec
scas
push
adc
xor
in
mov
pop
push
and
jnp
lods
into
mov
push
negb
movsb
cmp
and
inc
mov
mov
and
mov
add
sub
sbb
or
sub
in
ljmp
jmp
mov
inc
add
data16
sub
test
or
mov
stc
mov
fwait
and
dec
incb
mov
adc
ret
dec
dec
and
call
loopne
ret
outsb
iret
stos
gs
clc
or
movsl
jmp
fldcw
clc
ret
int
or
lcall
fdivs
jle
int
dec
outsb
adc
push
test
int
pop
rorl
pop
jo
pop
fistps
in
cld
gs
imul
sub
jp
inc
pop
pop
xor
les
mov
or
stc
push
sub
loopne
addr16
pop
fisttpll
lds
lods
dec
imul
mov
push
in
inc
imul
mov
mov
movsb
ds
dec
fs
fmull
in
pop
dec
push
rorb
mov
mov
jp
testb
jno
adc
in
push
jb
sub
pusha
icebp
daa
pusha
or
dec
jno
mov
int
push
out
fwait
shll
lds
lds
das
adc
or
dec
inc
mov
jecxz
cmpsb
mov
not
loope
xor
pop
mov
icebp
push
loope
ret
or
sub
pusha
jb
adc
mov
mov
int
pop
or
lea
xor
pop
mov
hlt
push
lahf
cmpl
iretw
mov
out
ret
mov
mov
add
cs
popa
xor
movsl
mov
clc
and
pop
mov
cmc
in
dec
mov
xchg
repz
sti
pop
mov
cmp
jge
jns
and
xor
cs
jae
inc
cld
add
gs
adc
daa
mov
inc
inc
lcall
jp
sti
xchg
dec
mov
pop
and
mov
test
or
stos
mov
push
xor
add
xor
in
jae
in
dec
gs
add
test
xor
bound
movsl
imul
jp
sub
nop
push
and
out
jl
sahf
out
jne
popa
xchg
xor
xchg
pop
cltd
mov
mov
pop
mov
in
cmpsb
lods
push
ljmp
xchg
jo
incl
jno
cwtl
cltd
jbe
pop
jmp
mov
dec
adc
pop
out
add
jno
push
mov
mov
insb
nop
cmp
jle
cmp
testl
push
std
sub
aad
mov
inc
mov
push
push
hlt
jge
sbb
mov
insl
int3
xor
es
sub
inc
loope
std
arpl
mulb
lods
js
jbe
mov
aaa
push
and
inc
jp
xchg
adc
pop
push
mov
sub
push
add
or
push
sbb
sub
push
dec
pushl
cmp
out
cmc
mov
fucomi
push
iret
push
in
push
out
inc
mov
movsl
mov
or
into
xor
mov
call
mov
dec
aam
adc
adc
mov
push
pop
aad
in
lea
lods
lahf
icebp
loop
pushw
xchg
out
mov
xchg
adc
jns
and
inc
les
mov
mov
ret
mov
jmp
inc
leave
mov
ss
xchg
test
xor
xor
loopne
popa
mov
fwait
orb
loop
out
xor
jo
xor
popf
insb
inc
xor
insl
imul
xchg
bound
or
xchg
push
lahf
jge
stc
add
lods
mov
inc
cmpsl
sub
and
xor
add
mov
fsts
and
add
mov
or
repnz
aam
jbe
addr16
mov
mov
and
popa
outsl
sbb
pop
jp
cmc
xchg
xchg
mov
loopne
sbb
movsl
cs
gs
adc
fiadds
xor
or
icebp
les
into
hlt
pop
mov
push
mov
inc
pushf
fstp
fcmovu
sarl
push
xor
test
mov
ja
or
sbb
shrl
xchg
mov
lahf
insl
jl
or
xchg
jbe
xor
push
das
je
dec
inc
je
test
push
jbe
mov
dec
mov
cwtl
cltd
or
xor
fmul
adcl
icebp
pop
xor
sub
aas
scas
jmp
push
ret
mov
cmpsb
ss
xchg
out
adc
repnz
scas
fimull
fs
mov
lds
pop
rorb
mov
ds
enter
push
cmp
rclb
and
adc
mov
popa
repnz
lcall
pop
inc
mov
ss
fs
roll
sbb
es
test
in
stos
test
js
ljmp
push
rclb
adc
pop
lcall
and
loope
inc
in
ret
inc
popf
hlt
shlb
dec
popa
je
shlb
inc
int3
divl
test
enter
imul
loop
mov
ret
mov
adc
enter
sbb
push
lods
into
call
cmp
xor
ret
cmc
xchg
pushf
or
pop
adc
jle
mull
loopne
lods
arpl
dec
daa
daa
stos
dec
inc
mov
add
mov
stc
aaa
aam
xor
fisubrs
inc
and
jmp
dec
cmp
dec
out
adc
mov
pop
out
xchg
inc
mov
pop
cmp
adc
ret
icebp
dec
jne
push
fsubr
aas
stc
out
out
cmp
aas
outsl
cwtl
mov
popa
xor
movsb
xorb
in
dec
pop
mov
loope
mov
or
pop
cltd
testl
mov
dec
add
cmp
inc
and
ret
mov
stc
xlat
push
xchg
adc
lret
scas
movsb
fisubrl
sub
push
xchg
movsl
sub
les
push
or
push
mov
jp
push
and
xchg
cld
stos
rclb
test
or
out
iret
roll
adc
mov
ret
les
sub
scas
or
mov
in
mov
mov
pop
icebp
sub
mov
stc
adc
sarb
mov
arpl
sub
jno
dec
lods
jns
jmp
sbb
mov
imul
ljmp
icebp
and
jno
xchg
test
lea
cmp
ljmp
arpl
in
sub
cmp
cli
cmc
aam
jecxz
stc
pop
pop
jb
cmpsb
daa
cs
out
pop
jno
insb
out
dec
shlb
andb
mov
inc
cmc
pop
mov
xchg
mov
inc
lret
adc
loope
inc
cmc
int3
mov
mov
adc
and
ret
loop
cmc
arpl
sbb
dec
xchg
push
loopne
jg
dec
loopne
outsl
or
ja
int
mov
add
cmp
aaa
fld1
xor
dec
aas
pop
fldl
dec
stos
jmp
ror
je
inc
jo
outsb
mov
roll
ljmp
mov
imul
sub
pop
cmp
xchg
nop
sbb
into
jnp
movsb
or
and
mov
xor
jno
pmuludq
and
cld
jp
out
pusha
adc
dec
xchg
decl
xor
mov
fdivrl
inc
jne
dec
adc
not
lahf
andb
dec
mov
sbb
cltd
mov
dec
push
insl
dec
cli
pop
jno
push
push
loop
xchg
mov
es
jecxz
out
jge
fldt
rcl
fs
mov
negl
daa
mov
pop
adc
pop
sahf
push
inc
push
push
ljmp
jmp
xchg
mov
mov
in
push
stos
xor
xchg
cmpsl
dec
xlat
xor
out
sbb
inc
sub
pop
xor
es
ds
ss
test
push
movsb
in
fists
xchg
add
fstps
lock
out
inc
cmpsl
div
rol
xor
pop
sub
sbb
push
adc
fwait
jne
jbe
sbb
push
or
xlat
xchg
adc
jle
inc
mov
xchg
push
testl
ret
xorl
int
mov
test
adc
int3
xchg
cwtl
loop
and
xchg
xchg
lret
jp
loope
mov
xchg
push
jg
pop
outsb
repnz
adc
fs
daa
insb
pop
mov
aam
in
call
dec
mov
mov
arpl
xchg
and
jnp
jl
pop
xor
cmpsb
inc
sub
sub
cmpl
xchg
push
xor
and
cmp
dec
pop
int3
mov
loop
ss
add
test
lret
mov
mov
insb
fnstcw
sbb
mov
fiadds
lea
decb
popa
mov
mov
mov
jl
fwait
jnp
xlat
lds
out
out
lahf
xor
mov
add
adc
jl
sub
bsr
push
mov
jns
mov
push
mov
scas
rcll
rcll
cltd
add
mov
out
aaa
in
fcoms
cmc
inc
adc
add
xchg
push
popl
or
hlt
mov
sahf
adc
repz
inc
adc
jmp
int3
mul
add
inc
lret
add
dec
fdivl
mov
adc
call
bound
dec
fnstcw
ds
sbb
loop
jmp
cwtl
insl
cli
cmp
scas
adc
clc
cmpsb
stos
shll
inc
mov
enter
imul
in
rcr
gs
lods
fs
cmp
lahf
fisubrl
sbb
inc
fsts
push
jo
sub
mov
push
ss
inc
mov
shll
movsl
in
push
xchg
push
dec
popf
rorl
sahf
mov
cltd
inc
mov
outsb
pop
mov
sbb
les
lahf
out
scas
sbb
call
mov
inc
mov
lds
cltd
and
leave
ja
bswap
mov
cmp
pop
sbb
arpl
mov
jmp
jae
xchg
stos
aas
jle
lea
cmp
mov
test
ja
inc
sub
jns
scas
jle
sub
push
inc
in
xchg
fmull
jl
outsl
add
out
xchg
adc
mov
pop
jae
mov
xorb
inc
xor
in
pusha
xchg
pusha
and
stc
pop
pop
loope
pop
ret
dec
gs
popf
mov
movb
in
cmp
jbe
out
and
and
inc
mov
ret
ds
popa
pushf
enter
push
cmc
repz
inc
into
adc
xor
int
pop
iret
add
add
mov
inc
imul
in
pusha
stos
das
in
xchg
nop
aas
ds
push
addb
ljmp
push
in
push
mov
testl
jge
jle
mov
adc
xchg
mov
movsb
mov
push
test
int3
add
fstps
or
adc
push
insb
fwait
adc
and
xchg
sub
aaa
add
out
cli
add
int
daa
or
aam
les
hlt
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jo
inc
mov
movsb
and
xor
add
adc
loopne
lock
xor
and
push
mov
xorb
xchg
jo
inc
mov
movsb
and
xor
add
adc
loope
lock
xor
and
xorl
test
push
movsb
and
xor
xor
in
adc
scas
push
rclb
fdivrl
mov
and
ja
imul
pop
xor
movsl
imul
xchg
cmpsl
aad
and
ja
addr16
jne
inc
aaa
push
inc
movsl
xlat
mov
icebp
notb
xchg
mov
cmpsl
and
ja
addr16
jne
inc
aaa
push
daa
movsl
xlat
mov
notb
xchg
fisttpl
sbb
add
xor
and
outsl
cmp
lods
outsb
push
in
dec
dec
xchg
arpl
sbb
icebp
mov
mov
cmp
or
repnz
sub
fldl
xchg
movsl
popf
mov
cmp
mov
jp
lcall
inc
push
adc
push
jae
xchg
xor
gs
mov
sub
bound
xchg
cmpsl
ficoml
sub
call
mov
dec
rclb
notl
fimull
or
outsl
popf
pop
mov
mov
xlat
ffreep
jge
rcrb
flds
mov
inc
add
pop
jne
inc
aaa
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
loope
push
pop
ds
ss
or
jae
push
adc
in
mov
out
stc
xchg
and
rolb
inc
sub
jo
and
inc
pusha
push
or
mov
mov
nop
shlb
mov
aad
dec
push
push
adc
adc
gs
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsl
and
ja
addr16
jne
inc
aaa
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsl
and
sbb
mov
cld
pusha
dec
ret
int3
mov
xor
in
add
dec
xlat
data16
mov
xor
mov
bound
test
sbb
add
mov
cwtl
clc
out
adc
add
out
push
lret
loop
rorl
popf
mov
push
xor
das
idivl
add
and
xor
movsl
enter
orl
add
outsb
lret
xor
shl
inc
pop
jb
or
dec
dec
push
sbb
lds
movsb
adc
out
xor
hlt
rorb
les
jge
sbb
fldcw
pop
mov
sarl
adc
js
and
mov
xchg
xchg
xlat
nop
sub
push
xor
movsl
push
add
xchg
and
mov
sbb
gs
pusha
dec
orl
mov
stc
scas
pusha
scas
mov
inc
popf
pop
jl
mov
mov
push
cmp
sahf
xor
dec
negl
into
add
cld
cmpsl
arpl
in
jbe
and
aaa
xchg
cld
mov
std
shll
push
xchg
adc
ret
pop
icebp
es
out
jne
daa
mov
testb
js
fimull
lods
out
repz
push
aaa
jecxz
lods
cwtl
jne
mov
out
insb
out
jbe
add
push
pusha
in
lds
xlat
push
or
sub
call
mov
mov
xor
scas
add
aam
ss
out
test
xchg
stos
add
adc
bound
les
jmp
xor
add
cmpl
push
jmp
arpl
inc
mov
mov
in
inc
sub
jl
scas
shll
pop
add
dec
cmpsb
mov
stos
gs
js
fcoms
ret
out
pop
mov
lcall
in
lret
push
fcmove
or
movsb
es
lea
fwait
push
lret
adc
jmp
test
adcl
jbe
mov
lahf
pushf
sbb
clc
test
xor
loop
push
fcoms
mov
insl
sbb
push
dec
out
arpl
fidivrl
notl
pop
push
mov
mov
frstor
jge,pn
jb
dec
je
dec
cmpsl
inc
lods
test
shll
cmp
cltd
sti
mov
aaa
mov
jl
sbb
xor
add
adc
pusha
jnp
or
push
sub
xchg
pop
dec
imul
mov
mov
mov
stos
icebp
xchg
shll
mov
dec
pushl
pop
shrl
notb
jecxz
lcall
mov
dec
push
outsl
pop
incb
mov
mov
sbb
loop
scas
dec
push
push
jmp
orb
inc
inc
test
mov
mov
adc
adc
push
es
jns
in
out
inc
stos
repnz
test
mov
push
mov
test
div
sub
dec
in
sub
loopne
stos
push
jmp
cmc
iret
mov
or
rcrl
mov
cmpsl
inc
fwait
sub
mov
pop
add
ds
std
fsubrl
cmp
jle
jmp
inc
pop
sbb
xchg
mov
xchg
ret
stos
dec
add
xchg
inc
out
cmp
xchg
mov
ficoms
xchg
pop
push
fnstsw
js,pt
ss
mov
aas
cwtl
xchg
out
daa
cmp
and
pusha
mov
divb
adc
sbb
imul
repz
notb
add
pop
add
dec
lds
mov
je
ret
jg
pop
movsb
iret
cmp
mov
mov
push
fwait
and
lahf
pop
popa
mov
add
xchg
add
sub
inc
dec
pop
sub
loopne
inc
push
loopne
sbb
push
xchg
ret
sub
daa
dec
sbb
cmpsb
sahf
pop
aaa
or
icebp
xchg
cmp
mov
pop
mov
cltd
lock
pop
or
mov
mov
or
adc
ja
lahf
add
mov
ss
adc
dec
cmp
iret
rolb
pop
loopne
outsb
sub
fcmovnu
fcoml
mov
shrl
jecxz
stos
mov
mov
add
fistpl
sub
test
adc
leave
clc
cmp
cmp
lret
fnstcw
inc
enter
pop
add
sahf
aaa
sbb
add
pop
mov
in
mov
aaa
fsubrs
xchg
jge
push
iret
mov
sub
fmul
aaa
xchg
pusha
dec
iret
call
cmp
and
and
stos
and
fcmove
sbb
jno
add
icebp
inc
add
jg
cli
sub
jle
mov
movsl
nop
in
cld
mov
into
shrb
inc
or
add
or
and
xchg
pusha
call
outsb
out
jae
addb
out
cltd
lret
mov
and
push
les
or
inc
mov
dec
inc
and
adcb
dec
ss
inc
andl
insl
push
sub
dec
push
mov
rorl
popa
ljmp
inc
push
fmulp
mov
shlb
mov
pop
ljmp
add
jb
enter
test
mov
mov
cmp
test
fdivrs
pusha
ret
andl
loop
cmc
popf
pusha
int
jnp
xchg
jge
push
add
leave
adc
movsb
int
shll
cmp
cli
mov
addr16
outsl
jg
je
add
cwtl
lret
aaa
mov
loope
mov
icebp
sbb
mov
fs
imul
fs
les
and
jns
fldl
mov
faddp
push
ljmp
jge
in
pop
inc
in
cmpsl
fdivl
pushf
sub
inc
mov
xchg
movsl
ror
lret
mov
inc
imul
jmp
inc
loop
inc
mov
jge
add
ss
or
xchg
and
sbb
out
sub
jle
lret
mov
adc
mov
and
sbb
pop
inc
mov
sub
pop
xchg
dec
cmp
es
push
mov
fidivrl
in
out
mov
inc
outsl
xor
jns
pop
leave
adc
popf
jmp
pop
mov
data16
dec
mov
int3
hlt
and
inc
cmp
scas
mov
rorb
mov
mov
mov
dec
push
mov
dec
sub
aaa
les
mov
jne
mov
pop
and
shrb
pop
sahf
aas
cmc
adc
sbb
jmp
sub
movsl
sarb
test
aam
fsubrl
data16
lock
aaa
adc
push
rorb
leave
sar
push
xchg
std
scas
iret
add
inc
dec
pop
outsb
sbb
inc
adc
mov
mov
xchg
xchg
or
orl
sub
inc
mov
mov
in
leave
push
xor
ret
pusha
shlb
push
inc
rcrl
jl
lea
out
push
mov
xchg
ret
inc
cmp
jmp
sub
xchg
lret
vmaxss
mov
adc
mov
push
mov
negl
lea
cli
push
adc
add
popf
rolb
push
pusha
aas
test
inc
cwtl
sahf
adc
mov
aam
lods
aas
and
in
jmp
sbb
xchg
out
inc
or
cmp
incb
or
inc
adc
pop
loope
pop
lcall
out
loope
rclb
je
loop
outsb
xor
fs
aad
mov
jmp
addr16
sbb
push
cli
dec
out
int3
xchg
sarl
pop
into
dec
inc
inc
jns
sbb
rcrb
sbb
jo
xlat
sub
mov
es
ja
jo
jne
add
dec
push
movsb
enter
lods
cmpsl
or
mov
repz
cmp
fidivrl
mov
sbb
and
enter
sub
dec
insl
add
xor
jne
pop
adc
mov
fwait
push
fs
adc
adc
push
sti
mov
lret
jbe
sub
mov
mov
fstpt
mov
cmc
mov
int
lock
inc
and
jae
or
add
cmp
fsub
cs
outsl
lcall
mov
adc
in
jae
xchg
repnz
mov
out
sahf
sti
inc
test
in
mov
cmp
stos
xchg
push
pop
inc
xchg
mov
sub
dec
fprem1
add
sbb
xchg
dec
mov
in
or
pop
sbb
adc
insl
pop
or
xchg
sarb
jo
and
inc
in
and
gs
sub
or
test
and
push
cli
xchg
jno
push
inc
icebp
mov
lods
inc
xor
enter
and
sbb
lcall
outsl
and
in
out
adc
dec
adc
and
in
pushf
xchg
nop
mov
lods
inc
out
sub
shlb
xchg
ljmp
push
inc
inc
add
cmp
cmc
dec
lods
pop
enter
xchg
lret
xor
ljmp
adc
xor
push
mov
jp
in
fwait
add
mov
rorl
xchg
es
and
lods
jae
pushf
cmpsb
mov
mov
jp
cmc
inc
lcall
in
pop
inc
xchg
repnz
data16
cmpl
xchg
les
lea
sub
aaa
pandn
inc
aad
pop
or
pop
mov
sbb
xchg
or
ret
cli
shll
dec
mov
imull
into
lret
scas
out
in
outsl
insb
or
cmp
pop
adc
or
lcall
repz
loope
sbb
and
xchg
push
adc
nop
add
repz
or
in
xchg
pop
mov
sbb
inc
stos
mov
xchg
sbb
sub
and
xor
jecxz
sbb
aaa
clc
jae
js
fdivrs
scas
push
pop
lret
ficompl
fldt
movsb
mov
lods
fsubl
out
fisttpl
inc
inc
out
std
jle
test
cmp
push
add
push
inc
or
mov
rcr
out
pop
cltd
jp
adc
adc
scas
jne
dec
and
iret
repz
mov
mov
arpl
jno
mov
inc
inc
or
mov
arpl
jl
ss
lahf
repz
gs
add
fmull
jle
mov
fdivl
dec
pop
idiv
js
mov
jo
push
adc
les
or
add
les
push
inc
rolb
scas
xchg
lahf
sub
jnp
push
in
sub
pop
jg
xor
sbb
push
daa
adc
adc
ljmp
inc
fmuls
int3
js
add
sbb
mov
and
jae
je
es
add
shrl
movsl
in
push
les
stc
lds
movsb
out
in
outsb
pop
into
addr16
loope
div
push
rclb
mov
les
pop
je
inc
fwait
ds
int3
push
scas
jnp
mov
jge
jne
cmp
cmpsl
jno
aad
sbb
xor
inc
xor
add
mov
inc
mov
mov
inc
jge
pop
jg
gs
leave
and
fs
imul
pop
mov
sub
xchg
sbb
cmc
lret
fnstenv
ret
sub
lods
add
dec
cmp
gs
sbb
dec
out
add
adc
sahf
or
mov
ja
sbbl
jne
les
cmp
adc
stos
addr16
cltd
xor
xchg
xchg
int3
enter
pop
inc
mov
repnz
cs
cmpsb
add
shl
aad
hlt
xor
dec
movsb
inc
hlt
in
mov
ror
add
daa
jb
xchg
jle
jbe
inc
outsb
sbb
sub
ljmp
leave
out
imul
subl
xor
repz
repnz
sub
cmp
mov
push
in
stos
cltd
insb
and
xchg
mov
fmull
popa
mov
push
inc
dec
cs
or
fistl
cmp
lea
cmp
and
xor
jmp
fs
adc
pushl
adc
lea
mov
inc
les
adc
cmp
in
daa
in
sti
fcoms
mov
lods
push
mov
fldcw
xor
call
jo
push
scas
dec
xor
cmp
iret
pushf
pop
pop
rcl
push
dec
cmp
and
rorl
or
and
push
cmc
mov
dec
mov
sbb
sti
rorb
xchg
add
sbb
dec
inc
scas
mov
cld
das
aaa
pop
imul
mov
movsb
mov
add
jne
pop
repnz
xchg
subb
test
lret
add
leave
in
push
enter
pop
push
add
xchg
mov
loop
in
mul
push
pop
mov
cmpsl
in
mov
fwait
ret
mov
in
dec
sahf
jnp
sbb
ljmp
nop
xchg
pop
mov
jnp
push
jae
cltd
into
int
out
pop
jns
xchg
cmp
cmc
cmp
scas
inc
sub
sub
out
pop
jo
ret
stc
int3
ljmp
adcl
bound
ret
fcompl
mov
bnd
xlat
test
sub
imul
stos
cmp
lods
int3
xchg
mov
push
iret
adc
fidivs
aam
push
jge
out
xor
xchg
push
mov
pop
mov
adc
mov
push
dec
add
je
cwtl
out
pop
mov
sahf
arpl
lods
cmp
push
pop
daa
imul
cmp
mov
push
ret
test
push
lods
xor
mov
mov
and
push
adc
jge
xor
popf
mov
xorb
cli
xor
xor
xchg
mov
jmp
dec
pop
cmp
inc
xchg
dec
leave
or
mov
test
ret
xchg
mov
sub
add
ja
leave
mov
dec
pop
bound
pop
cli
arpl
push
cld
testb
insb
imulb
mov
lret
ss
scas
mov
das
adc
repz
xorl
pop
push
sub
loopne
push
add
dec
mov
push
sbb
shl
cmp
mov
movsl
cmp
push
repnz
mov
mov
shr
cs
test
xor
mov
bound
out
addr16
pand
mov
jmp
sub
aaa
stc
push
sbb
mov
in
mov
stc
pop
inc
inc
icebp
out
inc
push
jp
xor
ficomps
mov
mov
add
clc
cmp
xchg
rorl
pop
add
or
outsl
cli
xlat
fs
sbb
push
mov
mov
fdivl
fisttps
fidivs
out
pop
lcall
inc
lods
sub
rcll
cmpsb
mov
mov
xor
mov
adc
cmpsb
jp
cmovge
jl
repnz
dec
mov
dec
jge
push
pop
dec
in
repnz
outsl
push
jecxz
adc
das
test
xacquire
xchg
fldenv
add
loope
jno
add
xchg
int
stos
mov
push
adcb
les
stos
gs
pop
sbb
push
std
daa
and
sub
aas
inc
sbb
sahf
fstpt
xor
imul
mov
fisubrl
call
or
cmp
inc
mov
inc
sahf
into
sub
inc
sub
mov
dec
push
test
sub
out
das
push
movsl
fwait
push
cmp
and
ljmp
mov
mov
or
adc
inc
imul
outsb
xchg
loope
jl
jb
clc
arpl
pop
dec
cmp
mull
aad
xlat
mov
decl
pop
jmp
mov
sti
mov
imul
pop
out
pop
stos
stos
clc
aam
cmp
cs
jae
cmp
adc
rorb
rolb
jle
call
out
test
inc
add
pusha
repz
sarl
es
repz
mov
inc
mov
cmp
adc
out
push
mov
ret
or
inc
popf
add
addr16
lret
cwtl
lods
jle
xlat
sub
sub
stos
fisubrs
out
or
das
push
push
mov
xchg
gs
dec
mov
rol
push
cld
ror
mov
xor
cmpsb
sti
lock
andl
popf
ret
inc
push
loopne
push
or
std
rclb
xchg
imul
or
imul
sub
add
jge
ret
sub
sub
jp
and
pop
push
aad
jbe
mov
iret
lea
inc
adc
fcmovbe
cmp
jae
inc
fistl
push
stos
pushf
cmc
rorl
lods
push
jp
mov
cmp
push
iret
xchg
sbb
addl
out
test
or
js
lods
fidivrs
xor
and
or
cmpsb
xchg
push
in
xor
es
mov
int
cmp
out
outsl
sbbb
popf
pop
pop
movnti
adc
mov
xorl
sbb
xchg
fidivl
aad
cmp
mov
inc
imull
push
sub
or
dec
data16
dec
sarl
clc
das
cmp
lea
push
and
stos
lods
add
stos
fsubs
mov
mov
testb
or
and
push
test
jge
clc
pop
add
mov
pop
inc
xchg
mov
cmp
test
and
and
add
mov
push
test
jnp
test
cmp
inc
or
test
jne
add
mov
loop
jecxz
imulb
sti
xor
fstpt
cmpsl
mov
in
push
cmp
jle
into
push
mov
ja
sti
dec
shlb
push
jle
nop
xlat
lock
mov
sbb
sarb
loope
test
test
pop
sbb
xchg
ss
insb
in
loope
sarl
mov
test
incl
mov
dec
outsl
dec
mov
hlt
cltd
push
xchg
test
insb
mov
cmpsb
loopne
clc
mov
push
cmp
js
and
cmp
cmc
stos
pop
andl
mov
ds
in
int
movsb
xor
mov
aas
sti
xchg
mov
inc
inc
int3
and
or
pop
jmp
ds
xchg
dec
cmp
rcl
cs
fidivs
int
sbb
std
repz
xchg
jbe
into
jns
and
stos
scas
jge
icebp
adc
insl
jae
add
pop
fistpl
cmp
inc
pop
xor
cmpsb
adc
scas
mov
pushf
rcl
jmp
cmp
mov
pop
xchg
xchg
sub
xchg
adc
dec
fiadds
orb
xorb
jnp
and
jno
or
arpl
ret
imul
sbb
adc
loopne
popa
pop
inc
jl
lret
cmp
mov
call
jne
sbb
jo
sbb
loope
push
mov
xlat
cwtl
ret
push
xchg
mov
dec
ja
and
and
xchg
mov
mov
in
mov
into
xchg
in
sbb
testl
setne
mov
push
mov
int3
adc
pop
xor
insb
mov
int3
std
faddp
xchg
sahf
push
movsb
push
shll
xor
lock
mov
test
jns
cltd
mov
inc
inc
pushf
inc
fisttpll
fwait
xchg
mov
mov
jp
les
inc
mov
pop
mov
lock
inc
pusha
das
stos
pop
xchg
inc
dec
inc
popf
pop
and
movsb
ja
test
sbb
insb
mov
mov
jle
add
mov
ja
lcall
pop
mov
add
leave
int
mov
int3
jle
mov
push
mov
mov
xor
fadd
dec
inc
or
add
addr16
insl
sub
lea
or
outsb
mov
pop
xor
mov
mov
fisttps
insl
pop
dec
cli
mov
mov
mov
pop
out
fwait
inc
push
mov
mov
scas
dec
cmp
cmc
sbb
xchg
push
or
imul
xchg
lea
dec
jo
or
bound
loopne
jp
ret
push
push
cs
stos
clc
jge
mov
xchg
push
imul
daa
mov
dec
lock
popa
aas
dec
movsl
test
jne
inc
push
stos
int
and
test
sqrtps
pop
pop
mov
test
mov
or
lret
lcall
les
mov
daa
sbb
cmp
cltd
imulb
cmp
rorb
fbld
dec
jmp
push
cmp
ret
jnp
movsb
inc
jbe
mov
xorb
repz
or
out
lret
subb
inc
lea
addr16
jne
inc
aaa
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsl
and
ja
addr16
jne
inc
aaa
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsl
and
ja
addr16
jne
inc
aaa
push
daa
movsl
xlat
mov
test
xchg
out
xchg
cmc
xchg
mov
cmpsl
and
ja
addr16
jne
inc
aaa
push
out
xlat
mov
das
notl
js
dec
sub
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lret
es
mov
jle
sbbb
cltd
dec
clc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
xchg
mov
les
push
add
add
add
jbe
in
add
test
xchg
ja
cs
add
add
add
add
add
add
add
addb
add
add
add
add
cltd
add
add
add
add
js
lret
add
add
add
add
add
and
mov
mov
mov
sti
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
test
xchg
add
aam
faddl
data16
add
add
jecxz
xchg
add
add
adc
test
cltd
add
add
call
add
add
add
xchg
cltd
add
add
add
add
add
les
sti
add
cmp
ja
cmp
add
add
add
add
add
add
add
add
cmp
sub
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
movb
add
add
add
roll
rolb
add
xchg
mov
add
add
add
add
add
movl
mov
mov
jle
mov
xchg
add
add
add
add
add
add
push
add
add
add
add
enter
call
add
add
add
add
mov
jbe
data16
add
add
add
cs
add
add
add
add
add
add
add
add
mov
add
add
rolb
add
add
add
add
add
and
sub
add
add
add
add
add
xchg
add
add
add
add
add
add
mov
ret
add
call
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
fldl
sahf
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
int
push
add
add
add
add
add
add
add
add
add
jo
xchg
add
add
add
add
add
add
add
inc
add
add
add
add
mov
and
add
and
add
add
cmpsb
add
add
add
mov
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
in
add
lahf
xchg
cmpsb
cmpsb
aad
cmp
fadds
jns
xchg
add
lret
add
inc
add
or
adc
xchg
push
push
mov
fwait
sub
cli
sub
scas
lahf
inc
bound
cmp
cli
andb
or
or
push
movsb
add
mov
and
push
dec
pop
ret
mulb
out
fstl
jns
push
cs
jbe
sarb
push
or
adc
sti
fcom
fwait
outsl
inc
and
adc
pop
aaa
outsl
das
sbb
daa
popa
or
clc
pop
inc
pop
ja
pop
sub
sbb
cmpsl
int3
shl
mov
scas
fcmovb
aaa
dec
shll
call
lret
lcall
jne
jp
mov
jg
cltd
daa
aas
js
imul
sub
cmp
lret
stos
test
test
mov
ljmp
xchg
ds
cmp
inc
shlb
inc
jae
cmp
or
rcll
xchg
xchg
fcomi
popa
js
inc
push
rclb
and
mov
into
mov
aas
je
sub
sbb
mov
sub
jp
mov
pop
mov
out
pop
sbb
gs
xchg
movntps
ficompl
sub
add
div
sbb
xor
lods
inc
loopne
lret
mov
ret
push
jp
and
aaa
xchg
sub
push
mov
and
orl
xchg
fwait
cmp
push
jp
inc
xchg
es
mov
jne
mov
rorl
sub
bound
into
pop
dec
push
xor
repnz
add
fisttpll
pop
and
and
push
xchg
lret
int
das
mov
jnp
pop
js
roll
cmp
add
in
cmp
push
icebp
pop
mov
and
loopne
sbb
imul
aad
mov
insl
mov
dec
mov
out
jae
aam
inc
pop
cmp
mov
sarl
into
adc
and
cmpsl
mov
cmpsl
mov
jne
dec
in
dec
stc
stos
fmuls
bound
pop
loope
sbb
out
dec
adc
push
mov
cltd
or
adc
hlt
and
xchg
jo
jp
mov
sbb
sahf
mov
sbb
jae
push
cmc
call
data16
pop
adc
das
mov
adc
in
mov
out
je
movsl
std
dec
mov
into
inc
xchg
movsb
pop
xchg
call
int3
clc
mov
clc
push
fildl
ljmp
adc
int3
int
call
inc
pop
mov
push
cld
mov
lds
xor
insl
cmpsb
mov
sub
insl
mov
shlb
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
