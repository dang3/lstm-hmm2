call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
das
push
fisubs
mov
incl
jmp
sti
and
das
scas
pminub
cmp
out
dec
pop
mov
das
pop
decl
jg
outsl
loope
aas
das
xchg
pop
scas
pandn
outsl
lcall
dec
lds
jmp
cmpsl
push
aad
std
lahf
aas
jecxz
fnstcw
jge
sub
or
sti
das
out
jnp
pop
ljmp
insb
push
lods
mov
shlb
cmpsl
mov
mov
pop
insb
pop
jmp
jo
ljmp
sbb
jb
inc
loopne
pop
pop
push
xor
bound
dec
xlat
pop
idivb
scas
jg
adc
push
or
push
xchg
fistpll
jo
inc
push
push
icebp
and
mov
ja
inc
fwait
jp
pop
jmp
fistpll
insl
inc
mov
push
push
push
push
loop
mov
repnz
shlb
mov
push
daa
xor
fistpll
ljmp
scas
or
ret
movmskps
ljmp
cli
scas
xchg
into
insb
ja
mov
pop
iret
sub
xor
aas
jmp
pop
decl
out
jg
xlat
pop
insl
aas
sbb
xor
inc
mov
mov
inc
jecxz
pop
cmp
jl
pop
out
mov
mov
es
stc
xchg
js
in
lods
cs
cmpsl
pop
into
pop
fimull
aas
lods
xor
cmp
int3
cmp
dec
rep
jecxz
mov
out
jg
outsl
iret
lahf
aas
das
mov
jg
outsl
lcall
dec
pop
mov
das
pop
decl
jg
outsl
iret
lahf
aas
das
mov
jg
outsl
lcall
dec
pop
mov
jo
adc
or
fdivl
push
cwtl
mov
dec
cltd
pop
aam
pop
pop
or
fidivrl
les
sub
fbld
rcr
add
adc
insb
loopne
push
das
clc
shlb
xchg
xchg
movsb
jne
xchg
sub
mov
push
and
stos
popf
mov
iret
ds
aas
sub
add
mov
sbb
push
mov
mov
mov
cld
icebp
call
outsl
addr16
sti
push
call
dec
jne
add
call
jns
inc
mov
das
negb
xchg
cmp
mov
push
andl
mov
stos
movsl
mov
adc
hlt
loope
push
outsb
inc
xchg
inc
daa
mov
call
aas
pop
out
add
sub
js
dec
cmp
test
fs
cmpsl
and
pop
xor
jp
daa
and
fwait
por
in
inc
cs
and
jmp
cwtl
push
xor
jmp
pop
pushf
mov
sub
cwtl
arpl
fs
jae
cmp
xor
aas
loop
clc
aam
cli
xchg
fcmovu
shlb
outsb
ds
int
popf
xor
cmp
cli
aas
cmp
nop
cmpsb
inc
dec
fsubrp
sbb
mov
shrb
and
adc
mov
xchg
sbb
inc
nop
push
jg
in
rcll
xchg
aam
mov
sbb
arpl
repz
sub
push
insb
jbe
cmp
cmp
pop
push
xchg
pusha
test
jns
inc
inc
cs
sbb
push
push
xor
pop
es
sbb
fistpll
int3
or
sbb
mov
and
xchg
mov
lods
jp
sbb
inc
fldt
cmpsl
out
jg
and
test
daa
imul
test
push
outsl
ds
push
movl
lret
cmp
and
adc
sub
cwtl
mov
jl
in
xor
sahf
add
add
mov
ljmp
jp
adc
fcomip
sub
and
xor
ss
jmp
xchg
nop
idivb
add
mov
sbb
xor
dec
push
and
lock
mov
outsb
mov
rorb
lods
sbb
mov
xor
in
add
in
cmpsb
pop
adc
push
das
push
xchg
push
pushf
dec
cmp
es
mov
mov
lcall
jmp
xor
push
aaa
shlb
adcb
dec
pop
and
jns
mov
xchg
mov
jo
cmpl
out
pop
sub
ret
out
xchg
jle
mov
adc
dec
or
add
fsincos
fsubs
pop
fldt
jb
insb
pop
jbe
sarb
call
ret
negl
adc
shl
adc
into
subb
pop
fsubrl
xchg
inc
inc
inc
mov
out
stos
jbe
test
stos
fsubrs
cld
jae
sqrtps
lcall
inc
mov
xor
mov
sub
clc
mov
add
pop
lahf
repnz
adc
push
lea
mov
popa
mov
adc
lods
add
inc
and
add
adc
or
push
cmp
lea
int
pop
inc
fdivrl
push
icebp
stos
pusha
jge
push
mov
fisubs
in
mov
popf
mov
add
mov
pop
lea
inc
repz
call
gs
lret
xor
fnstcw
push
pop
cmp
cmp
hlt
push
enter
and
add
and
and
fadds
inc
popa
movsb
call
iret
fidivrs
dec
enter
add
mov
inc
jne
cmc
mov
and
jp
nop
movsb
mov
jb
sbb
push
push
push
fisubrl
ljmp
mov
data16
pop
inc
in
jnp
into
int
pop
push
xor
les
in
push
je
lret
jb
lds
or
and
push
lret
jno
fnstsw
repz
hlt
sti
push
test
mov
dec
mov
jae
cmc
dec
jo
cmpsb
pop
add
jp
imul
adc
push
sub
xlat
fistpl
push
xor
xchg
mov
pushf
fs
adc
aad
pop
mov
pop
scas
stc
adc
sti
push
mov
pop
fwait
jg
aaa
jns
outsb
popf
push
stc
sub
mov
pop
push
lock
iret
mov
add
mov
and
mov
sbb
pop
int
out
xor
xchg
leave
cmp
xchg
ja
cld
dec
ss
insl
add
mov
and
cmpsb
jg
les
pop
test
fmulp
push
aas
cmp
xor
mov
cmp
sbb
loopne
fdivs
and
das
sbb
adc
fisubs
js
clc
xchg
xor
dec
lock
das
adc
push
fists
ficoms
and
mov
pop
cmpsl
pop
jbe
and
mov
cmc
push
xor
scas
jb
imul
and
ja
in
jl,pn
and
rcrb
pop
stos
push
gs
in
pop
xchg
xchg
mov
jl
es
dec
and
sbbb
in
out
mov
js
imul
andb
inc
push
imulb
fwait
jae
ljmp
call
jmp
mov
mov
fdivs
scas
shrb
clc
mov
pop
pusha
into
out
jnp
lock
xor
jo
adc
es
js
mov
popf
leave
xor
and
cmp
imul
inc
iret
xor
repz
out
out
and
push
jne
inc
xor
lea
std
test
ret
lds
ret
dec
add
out
iret
inc
mov
mov
call
mov
and
cmpl
cmp
mov
jp
and
cld
int
adc
dec
scas
cmp
or
in
mov
cwtl
xchg
shl
out
xchg
in
repz
pop
pop
gs
inc
mov
shrl
mov
sti
xchg
pusha
and
data16
mov
mov
cwtl
push
or
hlt
mov
dec
pop
sub
dec
sbb
mov
cmp
mov
push
enter
lea
mov
pop
out
into
inc
push
sub
mov
into
xor
mov
inc
aad
push
add
push
in
test
jbe
jns
mov
scas
adc
popf
inc
xchg
movsl
sub
pusha
lcall
lods
shl
popf
stos
and
ret
add
xchg
inc
pushf
push
cmp
fnsave
jle
test
mov
or
clc
repz
cwtl
or
xor
push
pop
imul
mov
push
dec
xchg
mov
inc
jmp
mov
scas
jns
mov
lods
cmp
jno
sbb
insb
cmp
xlat
daa
push
jmp
sbb
pusha
mov
test
inc
or
dec
mov
pusha
in
or
or
repnz
js
push
inc
pusha
pop
jle
ffree
push
push
inc
decb
movlps
xor
int
jmp
and
jp
push
xor
fnstenv
je
popf
jge
sbb
jo
cmp
cld
rcll
clc
mov
or
cmp
cmp
shll
mov
cli
ss
pop
lds
sub
xchg
jle
cmpsb
gs
aaa
add
mov
jns
and
jbe
push
outsl
cli
dec
cld
cmp
pop
sub
je
jecxz
arpl
push
rcl
adc
in
dec
sub
mov
or
inc
rolb
scas
mov
mov
push
and
sub
ret
mov
push
out
movsl
lock
outsl
or
cltd
push
sbb
xchg
ds
sub
cmp
pop
xor
out
pop
add
xchg
repnz
xchg
xchg
nop
mov
stos
fwait
sbb
out
sarl
dec
or
lea
or
inc
cmp
std
fnstsw
je
inc
iret
insl
int
ret
pop
movsb
mov
and
je
jnp
leave
mov
adc
bound
cmp
jne
shll
mov
fidivrs
mov
cmpsl
push
mov
movsl
push
cld
jg
mov
and
cmp
xor
pop
mov
scas
adc
jne
mov
dec
xchg
gs
out
xor
xor
loop
cmpsl
push
repnz
bound
iret
mov
jno
or
lock
xchg
sub
cmpsb
shrl
aad
insb
push
roll
cmp
fwait
inc
jnp
iret
cltd
xor
lcall
movb
sti
cs
or
mov
push
and
xor
lret
das
add
pop
cmp
jbe
stc
cmpsl
dec
ja
out
push
mov
cmc
mov
pushf
andl
out
cmp
push
push
sub
pusha
loope
ds
fnstcw
dec
jle
sbb
fcomp
in
jle
mov
les
jae
movsl
rep
daa
cmp
nop
iret
mov
add
fwait
outsl
cmp
adc
pop
inc
test
cmp
lods
dec
mov
int
cmp
xor
pop
adc
and
hlt
fwait
cmp
push
push
ret
je
mov
mov
jle
mov
imul
jbe
int3
jne
fmul
js
cwtl
jns
mov
in
outsl
push
pop
jecxz
cltd
insl
inc
fbld
hlt
push
cwtl
adc
jmp
add
xor
add
and
sub
push
cmpl
cld
pusha
mov
jo
sub
icebp
popa
mov
inc
repnz
adc
bound
or
out
mov
jecxz
lea
addr16
aam
and
incl
mov
xchg
outsl
or
adc
gs
sahf
cld
pop
xchg
nop
dec
jl
xchg
imul
xchg
addr16
adc
inc
push
repz
sbb
jl
inc
mov
xchg
dec
add
subl
mov
ja
arpl
dec
imul
or
test
adc
popa
fs
loopne
cld
mov
out
push
mov
adc
fiadds
or
iret
cld
dec
or
mov
fisubrl
orl
jmp
lcall
cmp
hlt
pop
clc
pop
push
mov
mov
xor
lahf
push
nop
clc
lods
cmp
lcall
jge
pushf
in
sbb
pop
mov
pop
or
xchg
inc
stc
int3
cmp
add
pushf
sar
bnd
add
mov
fsubrp
clc
pushf
push
repnz
adc
pop
or
arpl
aas
ds
xchg
loope
xor
hlt
mov
dec
xchg
push
dec
xchg
xchg
aaa
xlat
mov
insb
jg
pop
mov
inc
filds
scas
push
sahf
or
in
filds
inc
leave
ficomps
neg
or
push
arpl
push
outsb
mov
fs
lods
lret
mov
lcall
lea
js
and
fidivs
aam
addr16
frstor
xorl
add
xchg
or
sbb
nop
xchg
lret
push
mov
les
into
add
idivl
imul
ss
pop
in
xchg
insb
sbb
sub
shl
sbb
adc
xchg
xchg
ret
movsb
push
inc
lds
in
sbb
loope
mov
test
les
pushf
mov
test
inc
dec
daa
ret
and
inc
out
test
stc
mov
adc
ficomps
fists
jnp
xorl
js
push
cmp
sbb
mov
mov
pop
push
jle
cwtl
xchg
cmp
add
js
xchg
add
adc
jmp
mov
mov
and
in
xchg
insl
aas
rclb
loope
cmpsb
int3
mov
inc
and
adc
mov
mov
imul
dec
xchg
inc
out
jle
push
sahf
int3
aam
dec
push
mov
enter
inc
pop
xchg
mov
sarb
int3
cs
pop
dec
push
insb
or
insl
andb
insb
cmp
ds
sahf
movsl
or
mulb
ds
iret
cs
xor
adc
das
imulb
mov
imul
sbb
mov
cmp
mov
lods
add
jl
add
fcoms
xchg
adc
or
or
mov
add
out
int3
adc
dec
adc
xor
hlt
ds
inc
addr16
push
mov
jb
dec
inc
and
jle
sbb
sub
push
sbb
mov
mov
jmp
sub
or
dec
out
add
iret
mov
add
loope
leave
and
andl
popf
add
aam
lret
incl
and
xchg
dec
mov
pop
push
loope
jbe
lret
fcomi
inc
cmp
sub
mov
mov
out
imul
int3
sbb
cmpw
aad
push
mov
jecxz
add
in
or
repz
pushf
push
pop
cmc
or
fisttpll
sbb
mov
jne
jge
mov
testl
pop
outsb
outsb
dec
mov
cli
daa
scas
aad
and
xorl
jo
adc
in
rcrb
insl
stc
mov
pop
or
or
mov
push
lock
in
sub
adc
cli
adc
xor
fs
jbe
cmp
ja
js
xchg
add
mov
insl
adc
imul
pop
daa
sbb
push
repnz
xor
adc
enter
stos
push
inc
stc
or
jl
icebp
xrelease
test
push
imul
jecxz
mov
data16
gs
jmp
adc
cmc
mov
loopne
scas
jge
push
adcb
icebp
or
addb
ret
decl
cmp
pushf
test
pop
jbe
and
xchg
out
out
pop
int
insb
adc
mov
sub
xchg
shlb
xchg
outsb
dec
push
jbe
push
stc
lods
xchg
adc
pop
cmp
je
adc
xor
push
fdivs
lcall
add
xchg
inc
pop
xor
mov
inc
jno
and
in
inc
test
push
push
mov
movsb
stos
sbb
mov
lahf
incl
imul
mov
stos
mov
mov
xchg
orb
mov
push
jle
es
mov
cmpsb
jns
lods
ficomps
xchg
test
rorb
insl
stos
enter
add
cmp
stc
lods
xchg
jge
sbbl
xor
neg
mov
dec
dec
int
std
xchg
aad
push
in
repz
leave
jno
movsb
ds
repnz
sub
leave
inc
add
cmp
push
out
pop
mov
insl
and
push
push
andb
mov
cmpsb
push
xchg
mov
fs
adc
fists
addr16
pusha
stos
or
pusha
inc
mov
inc
push
loop
mov
or
aaa
stos
jne
aad
sti
aad
ret
mov
adc
cld
ret
and
xchg
sub
shlb
cltd
dec
mov
in
or
enter
popa
int3
sbb
pop
jae
cmp
jne
push
sbb
sarl
pop
sub
loopne
add
adc
ja
or
adc
xor
mull
addl
lcall
cmp
mov
stos
jl
sub
jbe
push
insl
repnz
sbbb
and
inc
jns
sbb
add
cmp
add
mov
paddsw
loop
sbb
fst
test
loope
shlb
push
arpl
mov
inc
mov
inc
cmp
leave
mov
lock
lret
mov
mov
push
sbb
insb
aas
testb
int3
adc
pop
mov
inc
mov
fnstenv
mov
addr16
sbb
ja
or
cs
add
sbb
push
sti
or
mov
lahf
and
sbb
push
push
jnp
movsl
lods
pop
cmp
xchg
pop
inc
out
push
lret
xor
push
xchg
fwait
lahf
mov
and
push
lahf
jb
rcrb
xchg
ret
fstpt
outsb
ds
pop
dec
test
ds
mov
mov
cmp
mov
mov
sub
loopne
insb
imul
stc
add
mov
or
cli
jno
pop
inc
pop
pop
dec
jns
stos
fwait
popf
movsb
inc
cld
mov
in
push
shlb
mov
leave
xlat
sub
xchg
ss
shlb
add
pop
or
dec
mov
adc
jae
hlt
xchg
push
adc
cs
mov
fcoml
push
xchg
repnz
xchg
fisubrs
sbb
sahf
sbb
mov
pmulhw
jbe
sub
shlb
dec
int
jmp
mov
adc
push
mov
testb
out
icebp
imull
add
xchg
bound
imul
dec
xor
movsb
mov
add
jbe
sti
sti
dec
das
jecxz,pt
mov
clc
cmp
clc
jmp
jecxz
push
out
je
mov
test
test
out
push
jge
aad
adc
ror
mov
sub
jg
xchg
mov
repnz
cmp
addl
je
push
aas
inc
mov
pop
cmp
ljmp
mov
bound
mov
push
shrl
outsb
popf
imul
sub
jmp
sti
mov
inc
rol
sbb
mov
addr16
lcall
adc
xlat
add
aaa
mov
ss
insb
imul
mov
mov
mov
mov
add
and
outsb
divps
ja
out
mov
adc
lahf
notb
mov
out
xchg
aas
push
mov
jecxz
cmp
mov
je
mov
pop
mov
out
push
xchg
jnp
arpl
shll
sub
cmp
add
loopne
aad
sbb
jge
hlt
fiaddl
fadd
sub
dec
lcall
cmp
ficomps
es
fwait
push
fistps
xlat
test
shrl
ljmp
inc
sbb
test
out
cmpsb
lods
xor
js
mov
push
fadds
jo
fdivl
out
adc
call
hlt
je
xchg
inc
pop
sub
shl
push
int3
xchg
sbbb
negl
cmp
cld
mov
and
add
cmp
sbb
js
cmc
xor
cltd
hlt
pop
push
iret
fs
sub
scas
adc
sbb
stos
pop
rclb
rcr
dec
lcall
push
pop
xor
or
clc
inc
adc
pop
mov
bound
in
inc
jns
push
jne
test
jmp
push
mov
mov
jbe
sti
mov
pop
andb
dec
xor
xor
andb
psubb
xchg
das
mov
fs
and
mov
popl
xor
lahf
sbb
xchg
das
pushf
fwait
pop
fstl
mov
mov
lods
imul
jbe
or
sub
shlb
and
dec
movsb
rcrl
add
push
xchg
mov
dec
mov
pusha
out
lret
lahf
cmp
shr
fucomip
xchg
sti
movsb
popa
out
mov
or
stos
arpl
sub
adc
xor
xchg
lahf
stos
sub
hlt
cmp
push
int
cli
pop
popf
fists
sbb
pop
hlt
aas
sub
sahf
push
or
ja
into
jns
ret
pop
mov
aam
xchg
pop
jp
mov
inc
xchg
sbb
repz
negb
aad
iret
or
ret
inc
daa
inc
fs
mov
jecxz
mov
mov
es
xor
and
dec
data16
push
lret
shl
xlat
push
ja
loop
scas
add
mov
push
xchg
mov
adc
aad
add
mov
data16
sbb
push
xor
imul
outsl
push
mov
rorb
dec
in
loopne
aas
clc
mov
lods
add
clc
push
dec
hlt
xchg
pop
or
adc
dec
cmp
popa
mov
cwtl
dec
xchg
ret
mov
iret
pop
mov
test
lock
inc
mov
xor
adc
scas
out
out
xor
pop
test
arpl
jge
inc
jb
mov
mov
cwtl
subl
sub
add
dec
stos
call
dec
pushf
lret
out
es
in
jns
insb
xchg
or
out
outsl
mulb
jns
cli
cmp
mov
cmp
xor
mov
dec
nop
lea
stos
sub
xor
push
js
cmpsb
add
mov
or
sbb
add
jl
push
cwtl
ss
scas
cmp
mov
dec
cmp
incb
lods
mov
adc
dec
aam
sbb
xchg
ss
inc
imul
daa
inc
xor
xor
rcrb
insl
mov
add
push
and
mov
inc
sbb
adc
dec
cli
ret
addr16
lods
aam
jge
rolb
push
sub
cmpsb
ficompl
imul
test
bound
lret
jl
cmc
bound
sets
icebp
jbe
pop
jmp
sbb
pop
movsb
or
cmp
mov
add
cld
push
xor
adc
ficoml
rol
out
sub
jle
and
dec
add
dec
mov
and
mov
pop
decl
jg
outsl
iret
lahf
aas
das
mov
jg
outsl
lcall
dec
pop
mov
das
pop
decl
jg
outsl
iret
lahf
aas
das
mov
jg
outsl
lcall
dec
pop
mov
das
mov
dec
test
outsb
iret
fwait
ds
sub
jnp
outsl
sti
push
fildll
mov
pop
iret
pop
lcall
jg
out
setg
jo
adc
pop
inc
pop
add
adc
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
int
add
leave
lea
dec
and
add
cmp
inc
or
xchg
fldl
mov
xor
insl
adc
dec
mov
arpl
push
sbb
mov
aad
movsb
jecxz
roll
add
and
cmp
or
outsl
sub
popf
xchg
mov
push
bound
in
and
lds
cmpsb
add
inc
je
std
sub
aam
popf
or
jecxz
sub
andb
mov
jae
in
into
cmc
jecxz
stos
xchg
xchg
xchg
popf
shlb
jge
insl
adc
ret
mov
cwtl
push
xchg
ss
mov
sahf
aam
idivb
mov
mov
and
dec
js
adc
jl
stos
jge
fcoms
xchg
fildl
jle
and
pushf
cmp
dec
add
and
adc
pop
pushf
ret
frstor
pop
in
mov
out
int
pop
ret
or
mov
int
mov
ret
xchg
xor
jne
inc
add
arpl
repnz
xlat
lahf
cli
mov
xchg
int3
mov
shr
adc
adc
sub
arpl
xor
popa
xchg
movb
cmpsb
jecxz
jmp
jb
adc
add
dec
or
jns
std
mov
mov
popf
ret
lea
jge
insl
adc
dec
jae
arpl
mov
mov
int
mov
ret
lea
jge
insl
adc
dec
jae
arpl
mov
xchg
push
pop
lods
iret
or
push
xor
inc
in
xchg
adc
sbb
int3
adc
adcl
sub
mov
stc
cwtl
cmc
adc
mov
push
lds
outsb
cmp
push
lea
out
adc
test
es
insb
add
mov
fs
cmp
pop
sbb
sub
sbbb
jecxz
decb
push
filds
or
push
or
fidivs
xchg
insl
push
xchg
mov
lock
dec
push
sarb
repz
xor
add
inc
adc
mov
push
add
jmp
inc
sub
mov
cwtl
fsubrp
xchg
jge
xchg
mov
jo
mov
jecxz
adc
les
sbb
daa
xchg
inc
sub
rorl
xor
bound
mov
mov
sbb
push
and
cltd
push
insb
sub
and
dec
test
mov
cmp
es
lret
mov
dec
hlt
or
jb
and
mov
xor
stos
xlat
je
fldenv
adc
outsl
movsb
stc
pop
sub
icebp
mov
xchg
incb
and
cld
jnp
push
sbb
cwtl
out
and
jbe
shlb
repnz
jg
cld
xchg
and
sbb
mov
pop
enter
or
xlat
xlat
loopne
jecxz
rorl
test
js
mov
pop
gs
jg
pusha
jae
enter
fwait
sub
xchg
cmp
inc
mov
or
sub
sub
jno
push
dec
lahf
xchg
jge
into
fsubl
mov
jecxz
xor
add
add
lret
mov
push
mov
mov
inc
add
movsl
inc
outsb
mov
aad
fcoml
mov
and
adc
cmp
bnd
sbb
sub
fimuls
jne
in
add
fldt
dec
aad
out
push
jecxz
pop
cmpsl
frstor
pop
pop
xchg
cmc
jo
fidivs
gs
dec
clc
cmp
jbe
pusha
xchg
mov
fstpt
lods
enter
stos
xchg
push
rol
mov
push
mov
push
inc
jo
cmpsb
mov
cld
nop
jb
lods
divb
test
push
adc
push
repz
shll
xor
adc
dec
movsl
pop
and
dec
add
dec
aam
mov
lods
fs
mov
fsubs
or
int
push
cwtl
adc
pop
push
xchg
push
fistpll
out
mov
inc
jmp
and
xlat
fsubl
xchg
and
aas
outsb
sub
call
iret
push
adc
test
das
fcoms
in
aam
add
jge
cltd
push
pop
or
jbe
and
std
test
leave
scas
mov
popa
xor
out
push
push
inc
mov
lods
repnz
pop
popa
loope
adc
mov
dec
pop
stc
dec
mov
or
ds
pop
xchg
cmp
sti
and
jecxz
mov
fsubp
push
adc
test
andl
cmpsb
dec
and
call
push
in
mov
fs
mov
or
mov
push
or
dec
mov
push
and
addr16
in
stos
repnz
cmpb
jl
add
cwtl
xchg
xchg
orb
sub
cld
sbb
mov
dec
int3
add
jns
pop
xchg
mov
out
push
inc
rcrb
outsl
jae
call
ffree
and
jnp
jae
test
or
xor
imul
pusha
cmp
loopne
mov
lret
loop
adc
data16
shlb
xchg
ret
test
popa
add
in
aas
or
xor
fiadds
es
addr16
std
enter
fiadds
add
jl
ret
lcall
sti
stos
push
cs
mov
xchg
outsl
outsb
ja
pop
flds
ljmp
lods
aad
ja
popa
mov
jge
shl
stos
rcr
rcll
lcall
xchg
cmp
leave
aas
lds
rol
push
pop
pushf
nop
sbb
xchg
inc
rcr
or
cwtl
xchg
js
mov
inc
mulb
push
mov
ljmp
and
mov
mov
inc
daa
or
fwait
and
xorb
std
data16
mov
cmpsb
mov
ret
lea
or
test
decb
lahf
sbb
arpl
cmp
fstl
adcb
pop
andb
cmp
popa
nop
add
rolb
dec
pushf
cmp
insl
xchg
mov
out
flds
sbb
fsubs
cli
je
jns
test
sbb
push
xor
ja
les
mov
out
jno
lahf
insl
subb
jno
into
xchg
cltd
xchg
ljmp
rorl
insl
lcall
push
sbb
or
stos
pop
dec
sub
mov
jmp
out
jg
inc
inc
dec
idiv
sub
mov
jo
xor
fistps
repz
jnp
or
pop
shll
fidivs
add
sub
mov
push
adc
leave
aad
pop
xchg
leave
pusha
xchg
or
iret
inc
movsl
pop
xchg
loop
pop
dec
loop
arpl
mov
int3
pop
inc
es
not
jo
mov
inc
xchg
jno
mov
jle
xchg
fdivrs
jle
cmp
add
pusha
lret
pop
divl
dec
dec
repnz
jns
push
ljmp
pop
xchg
insl
imul
lahf
mov
repnz
mov
cmp
dec
les
lret
mov
xor
cld
pop
adc
aaa
pusha
aad
in
sahf
or
fs
push
mov
mov
mov
std
xlat
lds
lret
ret
outsb
in
dec
in
std
ret
inc
cmp
dec
inc
ds
sbb
jl
adcl
sub
add
add
mov
mov
gs
lods
add
sti
dec
inc
pop
add
repz
enter
negb
or
or
test
or
js
mov
out
inc
hlt
cmp
and
jp
sbb
jns
cmp
cmp
cmp
arpl
out
lahf
dec
jmp
out
lcall
sub
lods
adc
shrb
xchg
stos
push
les
dec
pop
adc
mov
repz
aaa
icebp
push
add
cmp
push
cmp
popf
jg
std
stos
pop
and
cld
inc
mov
or
lcall
xchg
add
lods
repz
mov
pop
pop
hlt
lahf
jmp
mov
cmpsl
inc
mov
stos
aaa
loop
fsubl
stos
rol
divb
jge
imul
push
jmp
dec
mov
divb
cmpsb
movsl
adc
cli
mov
adc
or
jecxz
adc
mov
imul
repz
add
rorb
sub
mov
ret
loop
mov
cltd
imul
mov
and
mov
jl
fsubs
mov
cwtl
das
dec
jo
push
out
xor
pop
nop
aaa
sbb
add
outsl
inc
add
push
dec
add
mov
stos
inc
pop
inc
adc
pop
stc
scas
les
andb
add
mov
mov
mov
les
add
adc
cmp
add
aam
daa
or
aam
addl
push
nopl
int
addr16
xor
pushf
push
popa
fiaddl
inc
pusha
or
out
fsub
and
negb
adc
loopne
adc
adc
outsb
adc
mov
aam
xchg
bound
dec
fldcw
call
cmp
jb
inc
push
not
push
mov
lds
out
xchg
mov
enter
mov
jmp
movsb
jns
in
mov
push
mov
adcb
adcb
cs
xchg
pop
xchg
sub
dec
insl
mov
push
sub
inc
inc
adc
ja
negb
dec
iret
loop
mov
mov
push
push
outsl
in
out
sub
loop
inc
pop
and
fildl
imul
lods
fnstcw
push
inc
cmp
rorb
shld
adc
push
bound
jmp
lds
int3
xor
out
bound
cmp
aam
adc
iret
inc
stos
dec
mov
and
stos
jae
loopne
test
mov
pop
cmpsb
mov
sarl
jl
outsb
fadds
xchg
adc
sub
add
mov
mov
jae
test
mov
mov
repz
cmp
pop
idivl
jle
sti
repz
icebp
in
lea
sbb
lret
inc
cwtl
rorb
shlb
jecxz
sahf
aas
movsl
mov
ja
in
dec
nop
mov
bound
jbe
add
sub
mov
les
imul
les
ret
ja
jo
adc
dec
or
push
dec
cmp
shl
cmp
cmp
adc
mov
or
imul
mov
and
fsts
pop
and
cmc
xchg
dec
mov
lea
ret
imul
pusha
mov
mov
push
inc
insb
inc
test
aaa
pop
inc
or
mov
popa
push
fisttpll
ds
sbb
lret
cmp
jnp
psubsb
out
xor
mov
sub
movsb
out
ja
dec
pop
add
inc
mov
xor
movsl
dec
movl
mov
adc
sub
dec
stc
mov
inc
mov
fcomps
cld
subb
js
lcall
or
lahf
stc
xchg
sbb
or
or
mov
sahf
inc
mov
and
jg
mov
dec
sbb
jb
pop
hlt
ret
cmp
test
cmp
or
fcomip
ja
dec
roll
cld
scas
push
iret
test
andb
in
mov
dec
xchg
into
ficompl
xchg
mov
incb
jo
jb
jle
ja
xor
sub
test
xchg
fcmovnu
mov
sub
imul
cli
jb
fildll
idivl
xor
fstps
in
pop
iret
push
pop
push
pop
push
addb
in
imul
mov
push
xor
cltd
xor
add
inc
pusha
cs
sahf
cmp
and
sahf
cmp
fisubrs
sub
pop
cltd
cmp
adc
or
mov
pop
xor
dec
fistpl
mov
cwtl
cltd
xchg
popa
out
fists
negb
pop
pop
in
mov
out
lret
sbb
in
adcl
jns
lock
inc
xlat
adc
in
leave
shrl
pop
aam
popa
outsl
dec
mov
xchg
push
bound
mov
inc
lret
cmove
popl
cwtl
divl
sub
test
mov
imul
insl
pop
movsl
lret
leave
adc
stc
jmp
sbb
and
mov
int
fdiv
push
jecxz
loope
push
jl
roll
sti
stos
cmpsl
add
xor
dec
dec
pop
or
test
repz
and
sbb
sub
lcall
sub
mov
jge
clc
fidivrl
cld
pop
push
cmp
xchg
lods
imul
hlt
out
mov
mov
mov
shll
and
xor
icebp
xchg
mov
fnstcw
rorb
inc
or
and
into
xor
mov
and
jg
and
pop
pop
bound
xchg
push
adc
cmpsb
pop
in
int3
push
pop
repz
jnp
inc
fildll
mov
xor
bound
fstpt
jns
pop
cmp
adc
cmpsl
jl
mov
and
dec
mov
repz
in
dec
lahf
dec
xor
imull
je
or
xor
mov
jp
adc
test
add
mov
xchg
inc
xchg
insb
stos
inc
ficoms
xorl
sbb
aas
ljmp
fs
push
insb
stos
std
pop
pop
imul
dec
test
into
jmp
add
jecxz
inc
ret
xor
addr16
xor
pop
repnz
cmpsb
cmp
out
push
push
dec
jecxz
lret
sbb
loopne
cmp
dec
lcall
sarb
subl
adc
inc
push
movl
lods
xchg
pop
fwait
xorl
pop
in
das
pop
je
xchg
das
cs
inc
popa
das
mov
push
mov
lret
test
je
adc
cmp
dec
dec
shrb
js
sub
mov
push
mov
repnz
dec
pop
into
mov
sbb
mov
aas
mov
ss
xchg
mov
xor
and
push
push
mov
repz
xor
xlat
cltd
das
or
sub
int3
pop
insb
mov
fcmovnbe
push
jle
inc
test
nop
xor
sbb
sbb
sahf
ss
cmp
xchg
aaa
stc
lret
inc
hlt
push
or
push
lea
ret
push
mov
insl
cmp
dec
in
mov
add
or
mov
xlat
pop
lods
pushf
jle
out
or
xchg
leave
jl
loop
adc
mov
call
or
fcoms
je
hlt
fld
pop
scas
in
out
lea
popa
mov
outsb
mov
aad
das
xorb
ds
mov
sbb
push
fsubs
test
and
sub
mov
imul
jbe
push
cmpsb
arpl
sbb
les
arpl
jle
jbe
adc
insb
insb
mov
and
lock
pop
lcall
dec
dec
mov
lret
cs
jbe
mov
pop
sbb
adc
add
call
sbb
rorl
xor
push
repnz
scas
rolb
cmpsl
xchg
pop
addr16
mov
daa
pop
adc
scas
mov
orl
cmp
add
sbb
pusha
call
inc
ret
push
icebp
sbb
xor
xor
ds
cmc
insl
rcl
daa
dec
push
aad
push
push
or
cmc
pop
jmp
rclb
push
sub
popa
clc
ljmp
cld
ljmp
jmp
or
daa
mov
jns
pop
xor
cmpsl
pusha
cltd
xor
pushf
sbb
jo
pop
adc
lods
outsl
adc
xchg
rorl
mov
jo
sahf
push
cmpl
iret
xchg
lods
push
or
mov
pop
shrl
icebp
xor
aaa
in
mov
jmp
add
loop
jns
adc
inc
mov
insb
clc
mov
repz
dec
or
jbe
sti
inc
pusha
push
or
int
sti
in
mov
push
stos
xchg
push
mov
mov
sbb
sub
mov
xchg
push
popf
loope
popa
push
ret
push
sahf
ss
arpl
xchg
xchg
cwtl
pop
or
sahf
dec
sbb
outsl
mov
pop
jns
sub
pop
push
xor
cmp
xchg
dec
das
dec
cmp
or
stos
add
mov
out
cmp
ret
inc
push
arpl
mov
dec
fidivl
or
push
mov
rol
adc
xlat
pop
out
dec
out
fildl
mov
push
inc
arpl
loop
add
push
adc
movsl
in
sbb
int3
mov
push
popa
pop
and
fidivl
and
jbe
sub
fstp
loope
aad
or
mov
scas
lds
sub
inc
mov
lret
adc
xchg
insl
popf
push
lods
mov
andb
mov
call
call
jge
cmpsl
test
out
mov
cmp
jno
xchg
mov
mov
xchg
dec
rclb
dec
or
xor
cmp
loopne
test
repz
mulb
ljmp
and
push
loopne
cwtl
pop
xchg
in
mov
xchg
imul
adc
int3
arpl
mov
imul
inc
sbb
add
mov
ss
adc
sbb
jl
adc
xchg
push
pop
sub
cmp
adc
ljmp
dec
data16
pop
xor
ja
sarl
push
push
inc
adc
cmp
mov
or
rcrb
pop
jmp
or
outsl
xchg
mov
sub
out
out
xchg
add
or
rcll
sti
in
repz
int
inc
pop
push
jge
rcrl
pop
loop
or
sub
adc
push
stos
daa
xor
outsl
ds
add
sbb
outsb
les
lods
cld
js
mov
sub
cmp
mov
call
mov
mov
pop
sbb
mov
or
addr16
pop
mov
fiaddl
sbb
sbb
cmpsl
mov
jp
stos
sub
std
or
inc
mov
push
ljmp
mov
rcrb
sub
scas
push
stc
mov
mov
adc
mov
shll
fimull
mov
sbb
mov
sbb
ss
lcall
mov
imul
mov
xor
fcmovnb
fs
inc
dec
dec
adc
in
push
sbb
pop
rorl
mov
lahf
icebp
xor
out
mov
enter
inc
sub
negl
inc
fistpll
adc
stos
out
ds
mov
mov
push
call
xchg
sbb
cmpsl
fnstenv
push
fiadds
mov
xchg
andl
in
cmpsb
xchg
xchg
mov
inc
movsl
push
std
jo
xor
dec
sbb
xchg
fstl
icebp
mov
inc
aaa
leave
cs
ljmp
dec
fstl
out
or
sbb
jmp
mov
rol
jp
in
icebp
mov
jnp
aaa
sub
insl
push
pop
add
loop
push
sbb
flds
test
insb
and
int
mov
jecxz
mov
pop
xorb
adc
subl
adc
test
dec
jae
mov
notrack
and
test
dec
cmp
xchg
jae
or
fcomi
inc
dec
rorb
and
mov
adc
aas
jecxz
add
pop
daa
scas
cmp
and
or
hlt
fstl
mov
rcrl
scas
into
xor
pop
add
icebp
jg
pop
jg
cmp
sbb
icebp
mov
loopne
daa
int
pop
inc
fidivrs
inc
dec
push
lds
xor
xor
inc
cmovno
dec
cmp
loop
xchg
push
or
lcall
jnp
fnstsw
std
lds
dec
aam
push
ss
and
xchg
movsl
jne
adc
es
push
jnp
push
mov
scas
outsb
cmp
test
test
adc
fdivrs
rol
cmpsb
mov
dec
sbb
adcb
cmpsl
ret
push
lock
jno
shlb
aaa
jmp
or
scas
xor
jne
xor
subl
mov
testl
mov
stc
mov
lock
adc
mov
xorb
mov
dec
dec
push
or
leave
fmul
mov
cmp
ss
ja
xchg
ret
dec
dec
scas
xchg
loopne
in
outsl
push
xor
adc
cmp
mov
mov
rolb
repnz
das
cmp
test
mov
mov
cmp
mov
mov
imul
rclb
je
jecxz
mov
push
xchg
sbb
inc
dec
es
orl
jne
or
mov
scas
xorl
mov
ret
pop
and
jnp
xlat
sbb
jae
sub
das
popf
insb
and
mov
xlat
xchg
dec
or
and
jge
pop
jecxz
sub
mov
je
call
loopne
jno
fsts
xor
or
loopne
sbb
pop
and
xchg
enter
mov
cmc
test
lcall
hlt
lods
ds
mov
add
movsl
inc
fucom
dec
xchg
cli
mov
mov
add
mov
ljmp
inc
pop
xor
push
push
lods
testl
mov
test
icebp
clc
popa
push
pushl
mov
lods
jno
pop
add
iret
test
inc
into
jo
pop
xor
inc
out
mov
push
jne
sbb
lahf
add
popa
jecxz
mov
add
jns
mov
mov
loopne
iret
jns
inc
mov
sub
pop
inc
rolb
outsb
cmp
cmp
shr
pop
push
push
movsb
inc
loop
ss
add
cvtdq2ps
jbe
std
shll
jg
add
stos
dec
dec
dec
pop
int3
cld
test
into
xchg
or
scas
shl
dec
mov
fwait
popa
add
pop
std
pop
dec
pop
inc
icebp
or
sub
test
dec
sub
mov
push
mov
jns
push
jnp
out
lock
fstl
cmc
loope
pop
pop
push
adc
sbb
push
popf
mul
jb
iret
icebp
sbb
inc
sbb
lods
sbb
sti
aas
jmp
push
sub
test
xor
dec
outsb
inc
mov
dec
sarb
sub
pop
xor
repz
lcall
insb
mov
xor
shlb
mov
test
and
xchg
fldl
lods
rcrl
and
pop
add
cmp
inc
or
xchg
fldl
lods
rcrl
and
pop
add
cmp
inc
or
adc
or
mov
inc
lea
jge
insl
adc
dec
jae
arpl
mov
mov
int
mov
ret
dec
xor
mov
mov
push
and
jb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ret
scas
loope
icebp
popl
mov
iret
or
pop
jno
add
outsb
and
dec
movsl
mov
icebp
popl
fbstp
das
add
jno
inc
sbb
outsl
and
dec
jns
and
lahf
push
out
mov
aas
jb
or
popa
push
arpl
jne
insl
cmp
int3
cwtl
ljmp
lcall
inc
cld
inc
inc
notb
sbb
mov
je
scas
out
adc
push
cmp
mov
and
sbb
outsl
dec
xor
out
push
aas
scas
xchg
outsl
xchg
dec
out
dec
mov
and
aas
push
je,pn
jno
adc
or
mov
jle
xchg
out
pop
xlat
mov
inc
ret
push
shl
and
xor
jg
push
shll
jge
sbb
sub
sarb
popa
loopne
cmove
jg
aaa
cmp
mov
jle
js
pop
push
test
aas
push
sub
push
lock
aas
and
mov
mov
icebp
gs
jmp
iret
xchg
lret
das
pop
pop
inc
cmovns
outsl
adc
or
fimuls
fwait
aad
mov
inc
dec
add
add
adc
jae
jg
dec
sub
mov
xchg
xlat
nop
in
call
mov
loope
pop
add
js
pop
js
jle
dec
cmp
lods
mov
not
int
out
mov
aas
push
das
popa
pop
jno
add
outsl
and
dec
sarl
popl
fbstp
das
popa
pop
jno
add
outsl
and
dec
sarl
dec
dec
or
iret
mov
sub
das
mov
fcomps
xchg
andb
push
dec
ja
and
fst
mov
pop
adc
adc
ljmp
inc
and
lret
lret
cmp
sub
stc
loope
dec
xor
imul
push
ret
loopne
push
pop
pushf
xchg
add
mov
testl
dec
mov
imul
and
nop
gs
xor
and
pop
out
and
aad
or
pop
sbb
jne
imul
xchg
xchg
stos
dec
mov
mov
pop
fs
idivl
or
sbb
or
sub
imul
add
cmc
cwtl
es
xor
add
faddl
mov
in
sub
inc
mov
call
or
das
adc
in
jle
mov
xchg
popa
sub
mov
rcrb
cmp
idiv
stos
fistpll
cmpsl
inc
xlat
nop
iret
xchg
sahf
cmp
imul
push
cmpl
and
mov
dec
js
mov
mov
aam
imul
sub
rcrl
lds
hlt
or
cmp
mov
inc
cmpl
xor
push
lods
insl
test
or
and
mov
lods
stos
xchg
push
je
sbb
mov
lods
jb
jle
inc
add
loopne
out
xor
les
dec
xor
add
jb
cltd
mov
loope
mov
xchg
js
test
sbb
inc
fsubr
inc
pop
cmp
xchg
xlat
mov
bound
mov
ja
xchg
mov
pop
pop
and
cmpl
bound
pop
pop
pop
or
cmp
xchg
cmp
nop
inc
movl
cmp
faddl
dec
dec
cmpl
stc
mov
out
sbb
test
cmp
hlt
icebp
hlt
mov
xchg
fsubrl
loopne
cmp
cmp
loope
sub
loopne
xlat
dec
cmp
es
xchg
mov
rorb
mov
cmp
cltd
adc
lret
mov
pop
dec
xor
out
cmp
cwtl
add
sbb
dec
int
in
sub
and
jbe
mov
push
sti
stc
pop
cmp
pop
inc
and
mov
pop
push
mov
fsts
jl
mov
cmc
je
add
sub
mov
xchg
pop
mov
std
insl
inc
imul
enter
pop
icebp
and
pop
clc
inc
xchg
popl
lock
sahf
repnz
daa
jae
ja
ret
das
mov
xlat
mov
add
adc
xchg
jnp
fwait
dec
lock
inc
jae
sub
mov
and
stc
call
fwait
pop
or
loopne
push
lock
repnz
jl
pop
ficoms
xor
dec
inc
push
cltd
mov
hlt
jle
fcmove
pop
pop
jp
lcall
or
aaa
lret
das
dec
test
adc
or
dec
ret
jl
ss
pop
mov
mov
sbb
out
fdivl
sbb
xchg
fnsave
in
rep
fsubl
xchg
aaa
xchg
icebp
adc
sub
jl
in
imul
leave
scas
test
js
jge
push
mov
jns
fistps
aaa
cmp
push
out
add
out
sbb
adc
mov
fsubs
in
mov
jle
test
gs
test
mov
xor
dec
inc
fcoml
scas
jns
bound
inc
mov
mov
cmpb
push
daa
cmp
cmpb
jle
xchg
cmc
adc
cmp
sahf
sub
ret
aad
jbe
imul
icebp
push
and
daa
sbb
xchg
mov
pop
pusha
scas
addb
or
push
out
fbld
arpl
jae
push
test
sbb
aaa
aad
cmpsl
mov
shrl
push
pop
mov
sbb
insl
stos
ror
rolb
push
and
rcrl
jno
out
lods
mov
pop
enter
inc
loop
mov
xor
dec
sub
lcall
mov
fldcw
mov
sub
push
sbb
xchg
daa
xchg
jmp
stos
repz
lods
sarb
out
inc
cmp
outsl
mov
pop
pop
icebp
mov
pop
pushf
mov
add
rclb
push
repnz
das
in
roll
sub
aam
lock
push
rcrl
xchg
insb
mov
fisttpl
outsb
hlt
fcoms
jns
aaa
push
xor
loopne
insb
xor
fsubp
inc
cli
mov
icebp
push
adc
das
mov
fldenv
pop
js
xchg
or
cmpsl
xorb
inc
lods
in
popf
add
jg
cli
pop
ja
lock
lods
pop
lds
in
int
shlb
dec
fisubrs
and
push
xchg
mov
mov
das
lea
pop
sub
mov
repz
shll
jo
push
push
jno,pn
pop
popf
ret
mov
les
stos
out
imul
scas
lret
in
jmp
outsl
repz
in
stos
mov
movsb
mov
sbb
scas
push
mov
jo
filds
ret
inc
mov
mov
mov
shlb
jo
mov
adc
and
dec
push
je
repz
mov
into
hlt
test
sbb
mov
jae
jp
push
enter
int3
loope
popa
mov
lods
hlt
or
jle
sub
jmp
push
pop
cmc
fwait
stos
jne
lods
mov
ss
push
pop
cmp
push
dec
push
pop
int
leave
xchg
add
xor
push
icebp
iret
in
jle
fiaddl
dec
scas
lods
push
mov
inc
out
push
mov
inc
lods
ljmp
push
addr16
loop
lock
js
push
out
pmullw
inc
ds
sub
clc
scas
shll
add
testl
lods
fs
js
push
and
xor
add
je
sbb
insb
pop
mov
push
inc
xchg
mov
mov
out
stos
js
leave
mov
xor
push
push
outsl
jle
or
fisttps
mov
out
rcrl
xchg
mov
iret
nop
fsubrp
minps
push
add
cmp
jo
lret
stos
inc
xor
js
and
daa
cmp
pop
push
gs
ljmp
or
mov
icebp
sbb
cltd
shlb
lock
sarb
cmc
xor
mov
loop
jbe
movsb
or
cli
xchg
cmp
mov
and
cli
push
shl
push
out
insb
inc
lcall
cli
inc
out
dec
lcall
cmp
int
ficomps
sbb
push
push
inc
pushf
xchg
cs
pusha
mov
aaa
cmpsl
orb
lock
or
add
and
pop
fisttpll
jo
arpl
jecxz
rclb
or
dec
addr16
cmp
mov
xor
nop
inc
mov
mov
jmp
cmp
adc
inc
cmp
cltd
cmpsl
test
mov
push
jmp
imul
lcall
psrlq
les
aad
repz
out
or
xor
pop
mov
les
adc
test
les
in
mov
sbb
outsl
jp
pusha
inc
adc
or
scas
xlat
arpl
xor
jge
dec
mov
pop
inc
inc
mov
add
out
movlps
stc
aaa
call
popa
insl
jl
push
mov
pop
stc
push
stos
ja
fxch
rclb
lods
adc
dec
addr16
add
test
outsl
popa
push
loope
push
pop
push
outsl
ja
lds
or
pusha
fcomi
push
dec
and
mov
fisttpll
aad
add
xor
filds
inc
pop
clc
ret
inc
inc
xor
enter
push
push
dec
loope
testb
cmpsl
js
cmc
test
dec
lea
adc
jnp
out
mov
stos
cmpsl
xor
cltd
pop
ljmp
pop
movsb
aaa
mov
out
adc
add
insl
jnp
loopne
push
xor
push
mov
pop
mov
sbb
xor
mov
stos
xchg
stc
shlb
sbb
cmc
icebp
jl
gs
cmp
mov
leave
cmpsb
loopne
es
xchg
testl
test
fisubs
test
roll
fsubs
stos
aad
jle
adc
push
fidivrs
bound
enter
mov
imul
pop
mov
and
push
mov
push
lods
lret
mov
cli
repz
push
lock
mov
mov
xchg
jo
and
out
fldenv
push
jae
sbb
popa
mov
mov
add
add
add
repz
cmp
or
fwait
dec
jg
and
dec
pushf
aam
mov
repz
repz
roll
push
inc
pop
test
cmp
pop
stos
jns
jg
xor
add
cwtl
jae
cmc
lcall
adc
div
test
fwait
mull
cmc
popf
inc
mov
dec
xchg
data16
test
mov
test
dec
aas
lahf
dec
cmp
push
or
and
insl
or
mov
aam
xchg
push
sti
cmp
sub
pusha
push
jle
pop
mov
in
sub
scas
xlat
mov
int3
fdivr
lcall
movsb
daa
sbb
jnp
in
lcall
pop
lds
ljmp
adc
icebp
ss
xchg
jl
rcl
cmpsb
mov
bound
aas
sub
in
pushf
pmuludq
mov
cmp
push
add
int3
push
hlt
in
mov
mov
aas
and
jl
movsb
in
or
lahf
out
leave
adc
xorb
icebp
sub
ja
push
cli
shll
push
fdivrl
pop
mov
pop
outsl
cmpsl
sbb
ret
mov
jmp
push
push
testb
pushfw
or
stos
lahf
imull
inc
pop
mov
mov
cld
pop
pop
add
int
xor
or
xor
rorb
in
dec
and
jns
andb
sbb
mov
cli
mov
test
inc
lods
xor
adc
dec
fisubs
jl
cli
stos
pop
add
mov
and
in
xlat
sbb
jb
stc
aas
push
ja
ja
sbb
jg
add
push
int
rcrl
movsb
xor
cltd
orl
inc
out
push
adc
out
std
dec
scas
je
or
scas
arpl
mov
lods
adc
and
push
adc
dec
xchg
jge
outsb
jmp
adc
xchg
jmp
sti
in
cmp
cs
sbb
fldcw
add
cmpsb
ficompl
push
or
mov
cmp
and
mov
add
pop
in
rolb
cmpsl
lahf
push
inc
fst
or
ljmp
fisubl
fwait
cwtl
jp
leave
scas
push
and
loop
or
push
das
xchg
pop
int3
push
addr16
push
insb
jecxz
adc
shlb
cld
in
xorb
inc
mov
fsubl
dec
idiv
push
rorl
dec
inc
dec
aam
addr16
repnz
mov
adc
lahf
pop
inc
jecxz
xlat
xchg
sub
cli
lret
mov
add
mov
lds
in
aas
outsb
les
xchg
sub
rorl
mov
and
ja
adc
mov
mov
adc
and
shl
jns
lahf
fimull
es
imul
movsl
pop
int
test
imul
mov
rcrl
add
and
xchg
xchg
cmp
rcrl
fsts
pop
clc
scas
mov
xor
and
jmp
jno
xorb
mov
sti
add
insl
xor
cmp
pop
movsl
mov
sub
fimull
adc
mov
testb
outsl
sbbl
insb
xor
jne
pop
inc
lea
inc
iret
das
lods
mov
out
adc
xchg
incb
xchg
jns
ss
jg
sub
jns
cmp
vandnps
push
icebp
cmp
dec
rcrb
orl
out
aaa
push
inc
pop
sbb
xchg
inc
inc
sar
xchg
jns,pn
imul
jo
iret
xchg
push
mov
sbb
mov
mov
mov
inc
sub
lds
sub
pushf
cmc
shr
xor
mov
nop
pop
in
mov
sbb
add
inc
addb
add
movsl
push
repz
pushf
xchg
ljmp
ds
lock
and
xor
pop
mov
mov
popa
les
movsl
leave
in
ss
sti
in
adc
push
fisubl
andb
cs
divl
pop
pop
scas
and
inc
adc
xor
jmp
hlt
out
mov
jl
and
test
pop
xchg
mov
and
inc
xorl
sbb
mov
mov
jl
xor
push
icebp
cmp
sbb
jge
cmp
imul
inc
ret
xchg
mov
fdivrs
push
sub
aaa
shrl
lahf
arpl
sub
sbb
popf
cmp
add
mov
adc
pusha
insb
sbb
xor
xlat
dec
mov
test
sbb
and
jbe
cwtl
inc
mov
scas
loope
pop
lea
and
push
rorl
lret
fistl
negb
insb
push
add
inc
fstpt
fcompp
ja
adc
inc
cmpsb
push
mov
call
adc
jl
sub
icebp
cmp
pop
aaa
push
adc
mov
mov
fwait
loop
rol
jl
ss
xchg
gs
insb
jg
mov
mov
pop
sbb
and
mov
lcall
cmp
dec
mov
inc
inc
dec
sbb
in
jmp
iret
gs
cmpsb
dec
shrl
cld
imul
jp
xchg
imul
inc
fwait
scas
imul
fistl
pop
xor
and
out
roll
mov
sbb
xchg
sbb
sub
adc
cli
js
hlt
inc
pop
pop
cld
stos
jge
xchg
cmp
pop
mov
in
imul
lds
jae
jle
sub
pushf
mov
cmpsl
and
pop
in
enter
jge
sub
inc
mov
dec
aaa
les
aas
inc
xor
shl
push
sub
shlb
out
icebp
mov
ret
out
or
mov
sbb
stos
cld
push
test
xorl
xchg
out
and
dec
sbb
ret
pop
insb
lcall
sub
push
out
jg
inc
pushf
mov
add
shrb
and
mov
pop
insb
loope
xchg
int
adc
movl
pop
adc
push
mulb
push
push
sub
fcmovne
sbb
mov
push
xchg
mov
jnp
or
repz
std
in
addr16
out
add
nop
cmp
cltd
les
jp
sub
gs
lret
pop
stc
xchg
inc
jle
hlt
dec
sub
jo
sub
gs
sub
mov
adc
sti
insl
or
cmp
jae
xorl
ss
xor
inc
sbb
inc
jle
aam
aas
dec
jae
xchg
mov
ret
scas
scas
sub
jl
stos
sbb
cmp
dec
cmp
repz
ret
mov
xchg
adc
jmp
adc
popa
adc
cmp
mov
mov
mov
or
mov
mov
and
icebp
into
and
inc
or
mov
inc
das
xchg
sub
cmp
dec
stos
mov
addr16
mov
and
mov
sub
add
outsl
test
jo
cli
and
outsb
mov
subb
cmp
xchg
js
push
clc
test
jo
loopne
call
or
pop
xchg
subb
mov
xchg
les
jns
xor
pop
mov
jns
lret
pop
inc
mov
mov
stc
sbb
cmp
shlb
jbe
inc
int3
xor
pop
fstpl
movsb
and
roll
data16
push
cmp
je
loopne
in
sbb
mov
ljmp
into
xchg
dec
push
out
loope
push
sbb
ds
pop
popf
out
dec
popf
mov
dec
xor
adc
sbb
sbb
cld
pop
jnp
pusha
adc
xor
xor
ss
sbb
imul
pop
jnp
jl
mov
pop
or
push
push
jae
mov
enter
mov
push
dec
lret
imul
fstpl
cmpsl
inc
mov
cmp
std
xchg
pop
adc
jno
mov
imul
cvtps2pi
sahf
xlat
jp
cmp
mov
xchg
cmp
popa
popf
shrl
push
cmp
fisubrs
rol
and
mov
dec
rcrb
xchg
dec
or
push
ret
icebp
enter
and
data16
pop
in
lods
mov
push
sub
imul
in
sbb
sarl
decb
dec
cmp
notb
test
imul
loopne
cmp
shlb
repnz
mov
fwait
xchg
mov
sbb
cs
das
push
push
mov
jg
pop
daa
cmp
pop
adc
or
xlat
out
or
jge
push
mov
pusha
push
add
jmp
ss
dec
cwtl
mov
jle
inc
imul
jmp
sub
cmp
sub
cmp
iret
pop
test
mov
pop
icebp
es
inc
fcomp
scas
icebp
jb
jp
push
pop
inc
jb
pusha
sub
fldenv
adc
cmp
push
out
push
pop
mov
jp
mov
in
push
inc
daa
sbb
xchg
inc
cmp
add
shll
sbb
xchg
bnd
int3
mov
sbb
jae
sub
sbb
sbb
xorb
testl
movsb
pop
pop
int
in
call
mov
add
pop
rclb
lahf
adc
dec
loopne
add
pop
int
in
cmc
sti
repnz
mov
rorb
call
push
sub
inc
adc
sub
jno
ror
test
lds
mov
ret
sbb
mov
rcr
sbb
sub
mov
bound
in
sub
jns
out
mov
aad
sub
stos
rclb
add
jl
aaa
fdivs
cli
cmp
loopne
jg
addr16
roll
cwtl
mov
je
shl
mov
add
in
sarl
mov
jle
addl
dec
xor
pushf
jb
add
aas
dec
jae
leave
xchg
add
fmuls
pop
shrb
loope
jmp
xchg
je
fisubrs
jns
shll
adc
or
imul
dec
jne
or
or
push
xchg
dec
insb
stc
loopne
test
imul
stc
lock
test
mov
pop
notb
dec
ljmp
cmp
lods
outsb
push
push
jmp
in
sbb
cmc
pop
iret
fisttpll
xlat
or
mov
pop
cmp
daa
sbb
cmp
dec
scas
sub
lcall
xchg
push
sub
and
pop
fpatan
lods
add
outsb
mov
cwtl
outsl
pop
popf
jo
or
test
imul
imul
xchg
loop
in
fisttps
or
insb
inc
or
xchg
movsb
xor
and
enter
call
xor
imul
inc
pop
aas
mov
sahf
pushf
mov
lahf
jne
mov
lds
test
xor
outsb
mov
ss
test
mov
inc
mov
pop
insb
jnp
loopne
inc
cmp
insl
mov
pushl
dec
push
dec
add
add
cmc
or
xchg
mov
adc
mov
in
dec
push
xchg
jg
enter
cld
sub
dec
xchg
movb
xor
ss
leave
loop
loopne
hlt
stc
lea
xor
jbe
push
cmc
rorl
xlat
scas
fdivr
sbb
mov
jnp
negb
enter
mov
cld
cmp
jbe
ds
cmp
test
repz
mul
push
test
lods
add
popf
jmp
rorb
imul
mov
dec
fistl
jo
call
cmp
sbb
and
dec
jg
pop
or
fwait
pmovmskb
imul
in
xchg
icebp
and
pop
test
movsl
test
addr16
rcll
int3
sub
loop
cmpsl
movsl
aas
jno
divb
mov
gs
arpl
xchg
xor
sub
cs
jno
xchg
inc
out
aas
mov
fxch
out
mov
aas
cltd
jnp
movsl
add
mov
mov
mov
nop
mov
mov
sub
sti
push
mov
loope
sub
ror
mov
cmp
xchg
push
out
adc
or
shrl
xor
add
mov
out
loop
fnstsw
jnp
cli
out
cmp
in
mov
mov
test
adc
clc
push
inc
adc
call
int3
mov
movsb
aam
and
or
lock
inc
sub
xchg
lcall
and
mov
ds
mov
mov
cmpsl
sbb
fiadds
mov
sbb
mov
cmpsb
ja
mov
paddsw
cmpsb
lahf
icebp
popl
fbstp
das
popa
pop
jno
add
outsl
and
dec
sarl
popl
fbstp
das
popa
pop
jno
add
outsl
and
dec
sarl
adc
xchg
out
mov
aas
push
das
xchg
pop
jno
add
outsl
and
dec
aad
lea
cmp
xor
inc
aas
scas
test
pop
jno
jbe
cltd
nop
fisubs
push
jge
dec
jno
mov
pop
push
sbb
loopne
icebp
fldl
lea
jge
dec
jno
add
xor
or
fldl
lea
jge
dec
jno
add
xor
cmpb
flds
insl
push
or
jmp
cld
fimull
add
inc
icebp
shrb
lea
cmp
fdivrl
add
push
ret
inc
adc
mov
insl
outsb
ss
js
stos
outsb
mov
fwait
mov
or
sub
push
sbb
and
pushf
xchg
popf
dec
add
dec
rcr
pop
call
popa
inc
in
mov
mov
xorl
sub
xor
test
cld
mov
icebp
out
shlb
clc
and
dec
int
call
hlt
sub
out
ds
negl
xchg
leave
jl
cmc
push
xchg
dec
mov
insl
push
jge
dec
jno
add
xor
loope
icebp
fldl
lea
scas
or
inc
je
pushw
test
mov
ffree
int3
pextrw
sub
aaa
adc
dec
jne
and
sbb
cltd
fwait
xchg
mov
ret
icebp
clc
scas
repz
cmp
push
sub
adc
shr
std
loope
icebp
fldl
lea
jge
dec
jno
add
xor
loope
icebp
fldl
lea
push
jb
sbb
push
pop
lds
hlt
mov
bound
out
mov
aas
repz
jns
out
adc
jae
xchg
push
je
mov
enter
pop
xchg
fstpl
cld
sbb
in
mov
lds
inc
ret
and
lods
stos
in
mov
xchg
xor
sub
and
and
pop
jnp
push
or
jne
mov
fs
xor
mov
mov
cmpsl
call
test
ror
das
insl
test
or
les
call
lret
vmread
sti
rol
add
shlb
jmp
mov
mov
mov
pusha
mov
into
xor
in
mov
cmp
roll
sub
cmp
pop
push
outsb
cld
movsb
adc
pop
dec
out
xchg
jne
es
andb
and
xchg
out
or
loop
outsb
arpl
iret
out
adc
loop
ror
test
and
cmp
mov
and
dec
negl
rcll
push
fisubrs
xchg
imul
out
fdivrs
sbb
pop
je
and
sbb
mov
enter
lret
sti
das
aad
and
jl
aam
call
jo
and
push
cld
sub
sbb
test
test
dec
mov
mov
repz
enter
xchg
jmp
push
loope
mov
ficompl
cmp
sbb
cwtl
js
or
cli
hlt
dec
ljmp
mov
push
popa
orl
push
push
pop
or
scas
mov
xchg
mov
rclb
mov
jnp
add
pop
jb
inc
stos
mov
inc
dec
jecxz
fdivr
mov
cmp
pushf
loopne
xchg
lahf
dec
inc
xor
cmpb
je
stos
fdivs
icebp
sbb
and
inc
add
shl
mov
mov
test
push
arpl
loope
cmpsb
and
add
sbb
add
mov
int3
and
rorb
insl
cmp
cs
rcr
mov
nop
jae
dec
mov
sub
push
cmp
rorl
shlb
cmc
mov
out
ljmp
test
mov
pushf
cld
les
jo
jmp
mov
fxch
movsl
lret
pop
xor
sub
jecxz
jge
add
push
les
outsl
pop
xchg
enter
push
mov
push
daa
dec
popf
mov
mov
xchg
mov
mov
push
aam
push
push
les
in
xor
ret
push
fdivrl
and
pop
sub
scas
inc
pop
jae
std
sti
mov
sahf
sti
xor
pushf
addr16
aaa
popf
shl
das
fwait
jp
scas
xchg
and
push
decl
shlb
dec
sbb
push
fisubrl
jmp
or
movsl
test
lock
out
mov
inc
cld
mov
cmp
lock
out
push
pusha
cmp
push
in
fwait
test
in
fcom
and
incl
xchg
lea
test
testb
or
lods
pushf
ja
add
cmp
lret
pop
add
fisubl
stc
sbb
jl
gs
adc
push
and
into
mov
clc
mov
xor
test
in
ja
out
ja
rcrb
int3
iret
lock
mov
cmp
pop
cmpsl
mov
adc
xchg
mov
adc
xchg
mov
push
jle
mov
mov
lcall
arpl
or
in
arpl
arpl
inc
scas
rolb
int3
js
add
dec
or
ja
stos
sub
loop
bound
push
cs
or
insb
nop
frstor
aam
push
or
stc
push
mov
add
adc
mov
push
cld
rcrl
test
repnz
or
fdivs
call
out
rorb
fisubrs
call
or
jbe
adc
mov
jnp
and
mov
shll
mov
arpl
pop
sub
jle
ficoml
popf
sub
inc
xor
pop
mov
adc
lods
add
mov
out
adc
jnp
lret
mov
dec
cmp
xchg
stos
dec
cmp
push
push
inc
or
fcmovne
mov
jno
push
lcall
cmc
cltd
in
movsl
stos
sysexit
lods
cltd
and
loopne
pop
dec
lret
xchg
lods
mov
std
mov
enter
shrl
in
ret
adc
bound
push
test
sbb
inc
adc
inc
lods
push
lret
pop
xchg
mov
mov
jb
push
pop
jne
mov
inc
cmpsb
test
mov
test
out
cmp
loop
push
add
into
push
jo
fstl
xchg
xor
dec
jno
jg
icebp
mov
mov
xchg
nop
dec
and
jno
add
jle
ficoml
dec
mov
dec
popf
sbb
mov
mov
bound
mov
stos
test
mov
in
or
cltd
inc
pop
mov
mov
push
jl
mov
xor
stos
vpshld
loop
sub
hlt
dec
psubusw
mov
call
or
stc
mov
inc
mov
mov
fbstp
xchg
dec
sbb
push
aad
jg
scas
fnsave
add
cmp
sub
jmp
inc
mov
fcompl
fidivrs
fmull
jns
pop
je
cmp
fisubrs
mov
stos
lcall
mov
or
xchg
mov
push
std
pop
adc
xchg
mov
sbb
push
sub
pop
orl
mov
ljmp
lds
mov
adc
mov
push
and
mov
inc
adc
cmp
dec
out
pop
push
jo
pop
xchg
inc
fldt
cli
mov
pop
push
mov
loope
add
repz
rcr
cmc
sub
enter
xchg
enter
fistps
or
adcl
xchg
test
inc
lods
push
imul
dec
cmp
fisttpll
inc
push
add
add
fimull
jb
sbb
aad
and
rorl
cmc
push
jge
xlat
xchg
dec
outsl
jno
dec
cli
dec
pop
out
mov
scas
in
ret
mov
cmp
jbe
notl
jns
add
dec
loope
leave
pop
jbe
sub
pop
mov
fidivl
int3
fsubs
je
stos
lods
push
xchg
sbb
fs
rclb
or
sub
pop
pop
inc
out
pop
int
js
mov
dec
out
dec
popa
andl
cltd
sbb
shrl
loop
adc
push
in
jne
test
lods
xchg
sarl
xor
hlt
out
cmpsb
mov
mov
push
sbb
imul
push
ds
fiaddl
repz
push
dec
in
dec
ljmp
lock
inc
inc
outsl
bound
dec
ljmp
pop
imul
dec
push
insb
int3
mov
cmc
add
sbb
popa
inc
and
popf
fisttpl
enter
stc
test
xor
dec
inc
dec
mov
jg
pop
lock
add
cmp
popa
sarl
out
mov
and
adc
nop
hlt
pop
inc
cmp
dec
xor
add
aad
js
jg
xor
add
std
das
imul
pusha
push
mov
movsl
sbb
out
mov
mov
aad
pop
lcall
repz
pusha
shrl
push
and
or
rcrl
aaa
hlt
inc
or
clc
inc
add
and
dec
mov
inc
lret
mov
xor
jbe
mov
out
outsl
add
pop
stos
jno
neg
arpl
dec
enter
and
mov
push
or
cmp
adc
pop
xchg
mov
jmp
jo
insb
cld
scas
mov
iret
jb
pop
mov
insb
loope
push
je
cmp
pushf
dec
mov
pop
and
push
mov
mov
lret
jne
mov
dec
xchg
cli
add
inc
decb
cmpsb
ret
push
ret
movsb
cmpsl
dec
mov
pop
in
loopne
gs
or
add
cli
adc
pop
movsl
xlat
dec
and
inc
dec
xlat
ficompl
xchg
clc
dec
mov
adc
test
mov
mov
xchg
mov
xchg
or
add
or
icebp
mov
lea
jns
outsb
out
cli
adc
pusha
inc
push
mov
orb
fadd
lret
mov
jmp
mov
add
loope
stos
clc
movb
cmp
xor
mov
sbb
fcoms
xchg
fwait
jnp
stos
hlt
xor
push
scas
std
xor
xchg
mov
insl
arpl
sub
ds
pop
and
pop
jmp
sbb
add
or
popa
dec
jae
sahf
fcmovbe
sahf
sbb
cli
shrl
ss
enter
lds
sbb
fildl
jl
and
xorb
fwait
jl
jbe
pop
mov
mov
push
sub
and
push
lock
push
dec
jg
insl
xlat
xor
xor
adc
mov
inc
pop
jp
push
cmp
and
mov
mov
ret
mov
or
xor
and
cmp
push
das
xchg
push
sbb
push
add
mov
cmpsl
cmp
or
rcll
pop
push
lret
mov
repnz
scas
mov
xor
mov
js
popf
cmp
repnz
sub
push
xor
jo
clc
lock
sti
fnstenv
push
mov
mov
xor
outsb
loope
cmc
mov
jno
pop
outsl
data16
adc
push
inc
jbe
add
mov
sub
or
mov
mov
iret
pop
adc
ret
loop
test
es
loopne
or
sub
and
add
pop
shlb
ss
nop
add
cmp
add
sub
in
imul
test
pop
mov
stc
je
mov
in
cmp
outsb
jge
push
xchg
or
das
jge
inc
test
mov
push
mov
into
aad
repz
or
loop
out
fsub
out
sahf
add
sub
in
dec
or
imulb
ret
adc
mov
jmp
pop
jne
clc
sub
scas
loop,pn
out
push
jns
mov
pop
in
sbb
xor
aam
mov
ljmp
pop
lods
loop
shrb
sub
divb
loopne
cmp
sbb
imul
inc
shr
jns
xor
jns
cmp
mov
sbb
loopne
jb
lret
xor
loopne
lret
adc
inc
das
pop
jmp
or
stos
out
pop
sbb
mov
dec
add
add
inc
push
cld
jl
cmpsb
xlat
xor
std
movsl
imul
mov
lret
ret
ss
jne
pop
pusha
les
daa
push
fcmovnbe
mov
or
fwait
daa
je
xchg
jmp
sbb
fsubr
js
sub
cmpsb
into
jne
das
repz
lahf
mov
mov
popf
or
sub
ja
push
inc
mov
jge
jmp
xor
lods
or
cmc
stos
call
aaa
cmp
clc
push
xchg
cs
jl
shlb
inc
xor
mov
or
adc
xchg
xor
scas
outsb
sub
xor
cld
mov
fdivl
sub
stos
stos
xor
add
lret
push
aaa
nop
push
cmpsl
std
ret
mov
adc
notl
push
and
dec
pop
insb
inc
out
and
push
sbb
rcl
jbe
bound
outsb
cmc
in
call
outsb
sbbb
or
mov
nop
adc
std
mov
loopne
mov
jg
xchg
lret
in
iret
out
jle
mov
leave
stos
sbb
jp
adcb
lcall
sub
aaa
push
ja
addr16
pop
pop
jg
mov
outsl
lahf
sbb
and
ret
xor
dec
fldcw
mov
lahf
xchg
fildll
jl
jnp
or
sub
fcompl
loope
xor
sahf
call
lods
icebp
push
mov
sti
out
into
enter
xor
jge
outsl
mov
cmp
add
mov
stos
add
loope
and
movsb
mov
mov
xor
jne
fidivrs
jmp
sub
loop
int
out
and
jg
gs
inc
adc
movsb
xor
jo
popa
testb
scas
sbb
out
imul
ljmp
dec
adc
scas
ret
jmp
xchg
popf
push
pop
add
mov
iret
push
mov
cmc
pop
lds
imull
dec
iret
insl
push
push
sub
test
ss
pusha
stos
pop
add
pop
or
dec
addr16
xchg
in
in
and
loopne
das
lods
imulb
xor
fldcw
clc
xchg
or
push
ret
dec
loope
ss
clc
mov
push
jl
sub
hlt
rorl
outsb
mov
js
andb
dec
js
sti
shrl
push
push
shl
push
ficomps
shrb
dec
mov
push
es
push
sbb
das
or
dec
jmp
mov
fs
shlb
fcmovne
movsl
adc
dec
enter
ds
pop
adc
lret
mov
mov
inc
xchg
nop
push
mov
xchg
xchg
mov
cld
or
pop
fwait
adc
adc
push
push
jmp
ficoml
inc
loope
int
mov
mov
add
lcall
sbb
mov
scas
xchg
and
sub
test
hlt
sub
push
add
mov
sub
push
xor
outsl
dec
das
pop
adc
xchg
sub
mov
ja
and
mov
push
dec
mov
xor
pop
dec
ret
aad
pop
and
adc
mov
push
ljmp
mov
aas
nop
es
and
out
cmp
and
dec
ficompl
push
gs
pop
add
fdivp
xchg
test
mov
push
or
pop
arpl
adc
aam
jo
scas
lods
xchg
clc
les
leave
repnz
xchg
subl
mov
popa
push
mov
lahf
inc
mov
sub
popf
jns
sbb
loope
lcall
pop
add
pop
pop
jle
push
outsl
loop
cmc
sarb
pop
jo
js
mov
xor
icebp
and
mov
in
or
out
mov
pop
fmull
daa
inc
jno
mov
sbb
push
and
outsl
ss
pop
adc
movsl
lds
mov
and
int
dec
mov
mov
jb
mov
test
xlat
and
push
xor
add
cltd
push
cmp
stc
insb
clc
lods
aad
and
sub
pushf
adc
adc
push
outsl
adc
dec
rorb
add
lret
jns
pop
adc
sbb
mov
add
sbb
sarb
mov
push
mov
push
cmpb
cmp
divb
cli
push
test
jle
sbb
or
lods
cmp
push
cmpsb
xchg
dec
mov
addr16
jae
mulb
dec
lret
incb
push
lahf
cmc
aad
loope
and
push
inc
xchg
in
sbbl
mov
mov
inc
mov
cmpsl
lods
stos
daa
scas
lcall
xlat
add
mov
jg
in
fistl
dec
enter
lods
and
jge
xor
push
insl
lea
add
push
add
mov
lret
movsb
add
push
sub
rorl
push
pop
dec
les
mov
inc
fisubs
loop
cld
dec
fwait
push
cmp
jb
xorb
xor
loopne
arpl
sbb
cmc
xchg
pop
repnz
adc
sbb
pop
rol
into
lahf
mov
cmpsl
or
cld
flds
dec
fiadds
addb
or
pop
inc
mov
popa
aad
inc
jle
push
inc
inc
jmp
fsubrl
cmp
inc
pop
in
pop
nop
xor
icebp
xchg
jecxz
adc
push
pop
push
movsb
movsl
xor
loope
inc
push
js
sub
pop
fs
lcall
or
push
add
ljmp
ss
ficompl
adc
cmpsl
cmc
enter
insb
mov
pop
in
adc
pop
jge
lods
mov
xor
sub
data16
adc
dec
mov
cld
mov
sub
xchg
outsl
test
jp
ljmp
les
bound
fs
mov
gs
jge
out
push
loope
not
mov
pop
cmp
pop
sahf
mov
mov
popa
mov
pop
mov
mov
cmc
mov
and
inc
dec
int
push
andb
add
fxch
sub
mov
int3
or
lcall
and
repz
loopne
or
and
pop
fwait
loope
dec
jle
pop
pop
leave
cmp
xchg
enter
jecxz
inc
xor
mov
out
and
shlb
add
mov
sub
rep
gs
loopne
fstp
mov
lds
out
repnz
dec
mov
inc
pop
aam
pop
dec
je
fisttps
leave
jecxz
lcall
jnp
scas
pop
rolb
mov
enter
scas
es
shll
dec
movsb
and
push
pushl
into
popl
ftst
add
enter
pop
or
out
sbb
arpl
test
ret
mov
imul
movsl
jb
inc
xor
rcrl
fmuls
enter
sbb
imul
pop
cmp
xchg
out
out
imul
pop
shrb
sub
sub
sub
mov
push
out
fistpll
pop
jo
jg
sub
mov
xorb
cli
and
inc
mov
sub
adc
push
les
stc
cs
jmp
add
mov
pop
jnp
xor
adc
loope
arpl
mov
and
scas
pusha
fwait
push
push
and
test
cmpl
push
mov
inc
mov
xchg
sbb
pop
pop
das
jle
jle
xor
sub
in
leave
dec
add
aam
insb
or
insl
adc
jge
and
test
or
dec
pusha
mov
xor
popf
cmpl
insl
pop
jl
sbb
lea
push
lahf
sbb
jmp
cmp
lret
sbb
in
shll
and
das
xchg
mov
dec
ss
inc
jmp
mov
repz
cmp
xchg
push
cmp
mov
in
pop
mov
xor
stos
inc
dec
insb
mov
mov
jge
adc
or
aaa
mov
sub
cmp
inc
mov
jle
add
sti
pushf
add
sub
scas
fdivl
cld
out
inc
iret
movsl
fistpl
mov
dec
mov
and
mov
xor
popa
inc
mov
mov
test
mov
xchg
fwait
mov
xor
inc
cmc
std
imul
es
enter
imul
fnstcw
add
xor
sub
fisubs
test
ljmp
test
out
xorl
mov
xchg
pushf
stos
int3
mov
sbb
aaa
mov
rclb
jmp
imul
inc
mov
outsl
jnp
mov
jg
out
scas
mov
in
inc
test
cmp
jmp
je
mov
outsb
gs
mov
push
std
cltd
fdiv
lea
push
cmpsb
mov
cmpsb
jg
xchg
outsb
pop
sar
lret
call
ret
push
and
imul
add
add
xchg
sub
add
adc
call
jnp
pop
xor
iret
adc
outsl
aad
mov
in
or
dec
mov
movsl
sub
out
outsl
sub
add
xor
cmpb
push
sti
ss
das
mov
push
sbb
dec
jo
add
ret
cmc
loopne
pop
mov
dec
fsubrl
and
inc
fimuls
add
loope
cmp
push
mov
fsubr
xchg
cmp
movsl
fnstsw
xchg
or
sub
add
orb
push
xor
jg
inc
mov
in
sti
out
aas
xchg
pop
jb
test
pop
loop
scas
lock
inc
lret
lahf
dec
cmp
push
mov
cmpsb
mov
aaa
insl
std
int3
mov
inc
mov
dec
xor
ret
call
loop
sub
test
popf
leave
out
lret
xor
push
push
sti
inc
inc
rcrb
sub
ret
ja
cmp
mov
xorl
movsb
stos
outsb
fldcw
push
jbe
repnz
in
scas
call
add
mov
xor
lcall
loop
cmp
xchg
jo
jb
push
loope
aad
jg
addr16
ljmp
mov
cmp
jnp
mov
pusha
or
cmp
fistpll
xchg
sbb
fildl
pop
xchg
rclb
and
or
lea
dec
jno
add
xor
loope
icebp
fldl
lea
jge
dec
jno
add
xor
loope
icebp
fldl
lea
jge
dec
jno
add
xor
loope
icebp
fldl
lea
jge
dec
jno
add
xor
rcll
push
dec
int
stos
mulb
dec
bound
inc
shll
pusha
repz
jmp
cld
push
addl
inc
rclb
loopne
nop
add
xor
inc
shll
pusha
repz
and
test
jae
add
xor
inc
shll
pusha
repz
and
addl
jae
inc
jecxz
push
into
xor
ret
inc
mov
mov
mov
mov
fstpl
pop
cmp
mov
sbb
nop
cwtl
cmp
xchg
cld
push
test
test
rep
out
lods
jge
gs
outsl
jbe
pushl
fwait
lret
sarl
adc
jecxz
pop
sarb
mov
aad
pusha
mov
push
das
loope
adc
dec
dec
rcrb
and
call
mov
sbb
or
orb
xor
cmp
loopne
imul
scas
push
js
aaa
test
push
iret
stos
push
xorb
push
or
jb
push
adc
push
ret
inc
shll
pusha
repz
and
lock
jae
add
pop
push
lods
sub
adc
out
dec
xchg
push
in
popa
jecxz
les
xchg
or
hlt
and
jb
ret
xor
and
add
divl
aam
mov
cmp
es
movsl
sbb
pusha
aam
ret
arpl
mov
sbb
add
rolb
push
lock
jae
add
xor
inc
shll
pusha
repz
and
lock
jae
add
xor
in
lret
push
inc
mov
dec
lods
das
mov
aas
jne
mov
mov
sbb
xor
jno
cmp
cmp
add
fcmovbe
andb
add
popf
push
enter
mov
incl
jecxz
xlat
shr
mov
adc
cmp
fcomip
out
adc
jno
ss
lods
inc
xchg
into
mov
inc
pusha
andl
xlat
nop
rolb
jb
dec
fbstp
iret
fists
fs
pop
and
inc
xchg
fnsave
push
adc
jnp
push
dec
or
adc
ffree
movsl
pop
test
cmp
adc
mov
shlb
mov
sbb
sub
dec
jle
lcall
xlat
mov
dec
bswap
das
inc
inc
js
pop
adc
sbb
inc
jge
mov
inc
stos
and
nop
pop
adc
aas
sarl
push
nop
test
sbb
leave
fimull
shl
or
aas
adc
jne
and
out
and
push
and
out
bound
loop
dec
adc
lahf
jmp
xchg
mov
mov
adc
daa
lods
insb
aaa
push
xchg
mov
cmpsl
lea
in
shrb
in
ljmp
and
js
dec
xor
lock
adc
and
xor
push
jnp
cmp
cltd
inc
mov
lret
cmp
adc
dec
xor
jno
pop
and
int3
jg
inc
outsb
jne
in
popa
out
jp
std
gs
xchg
in
aad
and
pop
nop
imul
and
dec
add
cmp
pop
ret
xor
sub
lret
and
mov
inc
iret
add
mov
jle
mov
sub
cmp
inc
leave
xchg
lock
ficoml
sbb
xchg
push
mov
dec
fiaddl
push
jnp
test
loopne
mov
push
adc
movsb
mov
jb
into
mov
push
in
lahf
int3
cltd
lret
xor
pop
add
mov
subb
mov
arpl
push
fcmovu
mov
addr16
dec
inc
cli
add
jne
sub
stos
jmp
inc
jmp
aam
ret
pop
push
mov
sbb
inc
mov
push
dec
push
sbb
pop
int
mov
loope
stos
mov
adc
mov
add
mov
test
mov
mov
add
xchg
data16
or
lods
and
cmc
push
add
jnp
aas
inc
mov
in
stos
outsl
mov
loop
cs
outsl
sbb
popa
cmpsl
push
or
sar
push
pop
dec
pop
andb
ljmp
imul
add
or
lret
adc
mov
les
adc
mov
pop
stos
mov
iret
sbb
mov
cmpsb
pop
shll
mov
sub
xchg
adc
cmpsb
scas
pusha
add
push
mov
loope
imul
mov
cltd
loop
adc
loopne
xor
notb
outsl
js
cltd
push
push
in
sahf
fwait
ret
add
aam
icebp
push
mov
mov
cltd
push
call
lret
lds
loopne
pop
xlat
popf
ret
push
sbb
out
xabort
test
xor
fstpl
in
inc
dec
cwtl
jp
in
add
mov
lret
cld
call
cmp
mov
jns
jl
inc
fbld
pop
fmulp
jg
andl
mov
add
cmp
in
das
cld
divb
xchg
cs
lock
mov
xchg
lret
xor
mov
mov
cli
dec
ja
and
popa
pushl
add
or
ret
fisttpl
mov
sbb
and
mov
out
dec
push
lds
cmpsl
xorb
fistps
dec
daa
out
sbb
fwait
push
das
and
xlat
jmp
rcr
fldenv
fsubp
dec
jle
xchg
pop
cmc
ljmp
xor
lret
rcr
fnstcw
scas
std
and
push
mov
shll
push
in
jns
pusha
xchg
mov
or
inc
push
aad
in
pop
in
xor
test
les
mov
rorl
jb
aam
sbb
xchg
scas
dec
cltd
xchg
addr16
lds
rcll
jle
call
adc
fidivrs
rorl
push
and
adc
subb
clc
xchg
sub
int
dec
sub
movsb
leave
fs
mov
lret
xchg
jae
mov
xchg
mov
sbb
push
inc
movsl
stos
lds
cmp
pushf
dec
rolb
daa
jo
cmp
fldl
mov
mov
lahf
jmp
mov
jb
lea
add
out
pop
cltd
and
pusha
in
in
rclb
push
lret
shll
repnz
movsl
inc
mov
call
sbb
sub
test
pop
rcrl
cmp
inc
push
inc
in
std
pop
outsb
push
xor
push
add
inc
iret
adcb
lods
pop
xchg
jp
pop
mov
call
pop
fmull
mov
xchg
inc
icebp
cmpsb
mov
out
push
pop
notl
xchg
pop
hlt
push
adc
mov
push
aaa
push
in
data16
fsub
rclb
movsb
test
in
push
fwait
mov
add
add
lcall
ja
mov
lock
add
arpl
popf
push
mov
or
xor
xor
fidivrl
ljmp
dec
cs
mov
jnp
push
cld
push
enter
insl
sarb
xchg
or
and
das
dec
adc
out
push
cwtl
gs
inc
stos
lods
int
mov
cmpb
ja
cmp
xchg
cmpb
gs
aaa
push
ljmp
fisttpl
aaa
push
dec
int
rolb
in
cmp
push
sub
arpl
sub
and
outsb
cli
cli
push
les
or
jmp
test
mov
push
js
mov
cli
sub
xor
xor
mov
out
shlb
clc
inc
loopne
mov
mov
xchg
pushf
aas
cmp
cltd
sbbl
clc
into
sub
cli
inc
add
and
lret
insb
bound
in
sbb
mov
or
fildl
jb,pt
mov
notl
fisttpl
add
repnz
pop
shl
test
clc
push
mov
movsb
pop
js
dec
test
mov
mulps
sub
test
mov
dec
lret
dec
or
sub
mov
test
sub
xor
mov
dec
jbe
iret
bound
sahf
rorl
ljmp
ret
add
imul
stc
mov
xchg
test
or
repnz
js
ret
imul
mov
sub
push
adcb
addb
mov
and
pop
fimuls
scas
fadd
jb
dec
call
push
cmpsb
pop
add
push
loop
sbb
arpl
jns
cs
xchg
mov
jns
call
nop
loop
dec
mov
xor
jge
outsl
sbb
pop
inc
sbb
mov
fisttpll
jp
daa
cld
or
sub
sbb
dec
imul
fcomps
push
jecxz
lret
mov
test
incl
das
push
sub
sti
bound
sti
lret
ss
test
orb
scas
mov
sarl
ret
xor
out
in
aas
in
cmpsl
jmp
ficompl
mov
pop
jns
sub
jno
sarb
or
dec
jge
pop
jbe
pop
jb
nop
fldcw
dec
push
addb
cli
push
mov
sub
iret
subb
std
jge
sti
out
sub
rclb
popa
xor
sbb
in
in
mov
aas
sbb
pusha
jb
in
out
or
adc
mov
stos
aam
addr16
ja
mov
and
sahf
and
aam
div
ret
bound
in
push
jge
test
mov
xchg
jns
jns
pop
mov
sub
mov
std
add
mov
jb
sbb
xorb
mov
xlat
xchg
dec
cmp
xchg
push
and
cmc
ljmp
loope
lea
shll
or
out
les
std
jmp
mov
sub
popa
push
bound
test
sub
mov
repnz
nop
cmpsl
aam
sub
stos
xchg
sbb
push
push
inc
add
enter
shrl
shll
push
jb
cs
cmp
inc
dec
add
aas
fidivrs
ja
orb
jmp
repnz
mov
lods
and
icebp
add
scas
cwtl
incw
loope
mov
addr16
pusha
xor
sbb
push
lret
int
mov
out
bound
lret
mov
shlb
jg
mov
xor
jg
les
hlt
gs
cmp
push
fnstcw
xchg
mov
outsb
xchg
les
push
jns
and
lcall
add
push
and
adc
call
pop
dec
sub
jo
adc
or
lock
mov
movsb
lret
mov
out
jmp
clc
scas
xchg
ficoml
test
jno
jns
std
fcomps
add
cmp
nop
sbb
sti
fidivrs
xchg
add
xlat
pop
jmp
xchg
xor
cmpsl
mov
sub
repz
cmpb
lock
xchg
or
adc
and
xchg
ds
push
shlb
adc
mov
fidivrl
int
add
push
hlt
repnz
jb
pop
mov
xchg
repz
idivb
add
fiaddl
jo
xor
jb
movsb
out
pushf
mov
xor
xchg
sub
test
xor
cmp
pop
xchg
add
repz
add
push
scas
inc
mov
shlb
xchg
lret
mov
stos
fildll
repnz
dec
stos
addr16
push
cmp
scas
mov
pusha
addl
movsb
pop
jbe
xor
sub
add
adc
push
movsb
rorl
cwtl
in
idivl
push
and
out
mov
in
ljmp
mov
dec
pop
fldcw
jae
add
push
mov
or
imul
fisttpll
imul
mov
dec
pop
push
aas
xor
cmp
pop
sub
ljmp
int3
xchg
cwtl
cmp
aad
call
and
sarl
mov
sbb
test
sbbb
cmp
sub
cmp
xor
sub
test
jge
jbe
lods
mov
add
sbb
add
xchg
mov
push
pushf
js
incb
scas
outsb
shl
push
or
cmp
mov
mov
push
data16
mov
ficompl
jg
xchg
mov
pop
fsubl
mov
stos
cmp
stc
jmp
or
ljmp
or
sbb
int
outsl
mov
fsts
inc
int3
leave
push
inc
add
in
jl
pop
adc
jnp
inc
bound
cmp
bound
jns
add
jg
fimuls
or
xor
pushf
test
stos
pop
inc
ss
test
ret
inc
lods
fcoms
dec
in
add
in
sbbb
repnz
in
imul
sbb
int
dec
xchg
in
mov
pop
push
pop
jg
ja
jle
sahf
inc
push
jne
dec
aaa
stos
cmpsb
mov
loopne
or
dec
mov
fidivl
dec
scas
mov
push
test
enter
jnp
xor
or
fnstenv
xchg
lahf
cmp
movsl
add
dec
mov
lahf
xor
negl
clc
or
xor
mov
lea
mov
add
pop
inc
xor
movsb
add
insb
fistpl
outsl
push
std
lahf
js
push
and
mov
lods
mov
aam
sbb
mov
cmpsb
out
pop
repnz
jmp
pop
mov
fildl
jne
pop
and
jle
ljmp
xor
hlt
lcall
adc
push
out
int3
pop
inc
aaa
mov
mov
or
lret
xchg
cmpsl
jno
xor
dec
or
das
int3
sub
stc
aad
jnp
movb
popf
dec
add
sub
out
flds
lret
sub
out
and
pop
dec
and
cs
or
jo
xchg
int3
push
and
xorb
mov
or
int3
dec
out
push
mov
out
fsub
fistl
mov
push
mov
imul
lcall
outsb
arpl
lahf
adc
ljmp
or
out
into
cmp
das
out
mov
daa
jnp
cmp
aad
xor
pop
jg
sbb
aam
dec
mov
das
lahf
pushf
mov
test
aas
arpl
or
jp
dec
test
arpl
pop
or
xlat
cld
inc
xchg
cmp
jae
stos
mov
fs
and
mov
inc
cmpl
dec
jmp
fdivl
pusha
mov
push
xor
mov
sub
jbe
hlt
push
iret
push
inc
and
sbb
sbb
cmp
mov
mov
shlb
adc
push
out
cmp
aaa
addr16
or
dec
rcrb
lods
push
loop
fistpll
mul
lea
iret
push
clc
stc
dec
sub
movsl
mov
outsb
fildll
inc
int3
pop
cmp
mov
sti
cmp
movsl
adc
sub
xchg
push
cmp
arpl
fiadds
popf
sub
jg
jmp
and
jne
xchg
adc
js
or
popf
insb
jp
lods
push
push
inc
loope
and
inc
loop
lahf
and
mov
pop
push
sbb
lcall
adc
popa
divl
rol
mov
jne
aad
ds
mov
loop
mov
and
xor
mov
std
sbb
lds
jl
rorl
mov
in
sti
ja
out
pop
popf
scas
jp
bound
int
jg
insl
sub
xchg
dec
lret
cmp
jmp
test
aaa
and
pop
in
jmp
adc
push
push
jmp
jb
xchg
cmp
mov
xchg
mov
cld
push
out
test
mov
mov
pop
adc
mov
jbe
leave
mov
push
and
jmp
lcall
enter
and
shl
xchg
xchg
in
push
cmpb
leave
pop
hlt
xchg
mov
xchg
fbld
hlt
add
lcall
outsl
jecxz
test
shl
adc
rol
cmp
add
push
hlt
jp
xor
pop
nop
subl
jl
pop
push
adc
mov
or
lea
lahf
jae
rol
fwait
inc
aam
shl
cs
jmp
pop
sti
out
sbb
xchg
xchg
enter
or
pop
in
mov
dec
mov
imul
xchg
das
inc
adc
push
inc
std
jb
mov
push
aaa
mov
sahf
xchg
pop
push
inc
in
add
cmpsl
cwtl
cmp
mov
loope
adc
sbb
sub
jmp
nop
sbb
xor
add
lods
clc
ja
mov
sub
inc
in
xchg
cmc
cmp
lret
xor
sbb
mov
mov
daa
rcrb
push
test
xorb
lock
adc
xchg
push
push
lds
ljmp
mov
push
adc
mov
mov
fsubl
lret
cmp
push
das
shrl
cmp
jnp
leave
fistpl
aas
movsb
inc
int
adc
xor
pop
rcr
les
sub
xchg
xchg
inc
add
pop
popa
sbb
jle
ffreep
mov
ja
jmp
add
sub
imul
testb
loope
fwait
dec
pop
inc
cmp
fwait
mov
shld
jbe
lea
mov
mov
imul
push
sub
adc
push
icebp
sbbl
cli
stos
pushf
push
mov
aas
add
pmaddwd
pusha
mov
xor
cmc
int
sub
scas
mov
test
cmp
cli
aam
sbb
xor
test
scas
sub
sbb
std
push
pop
lods
bound
inc
or
pushw
pop
mov
popf
push
movsb
lret
push
out
hlt
outsb
rcrb
mov
lret
add
inc
es
mov
cltd
cmp
add
jnp
pop
jg
add
lahf
adcb
fstp
ret
cltd
imull
push
mov
movl
sbb
adc
lods
pop
fisttpl
mov
xor
add
sbb
stos
push
xchg
aaa
and
xchg
clc
mov
out
or
shl
ds
out
push
xor
js
jns
add
sub
pop
cmp
dec
ljmp
add
fidivrl
sar
and
cs
sub
push
scas
sbb
ss
mov
mov
inc
sub
ja
push
ret
jns
inc
pop
insl
xchg
fistpll
or
or
mov
pop
and
movsb
arpl
dec
outsl
fidivs
jbe
dec
gs
push
mov
ss
lahf
cmpl
icebp
je
push
cmp
inc
int
movb
mov
push
loopne
in
mov
push
jns
and
imul
lret
push
shr
sbb
sub
mov
bound
pop
xor
pop
mov
mov
mov
jg
mov
sarb
scas
lock
inc
jp
mov
mov
sbb
jbe
jbe
mov
lret
sub
sahf
js
jmp
add
jo
sbb
adc
inc
lods
dec
push
test
mov
pmaddwd
and
stos
cli
repnz
jb
ffree
jmp
fwait
cmp
or
add
add
cmp
mov
push
mov
insb
mov
and
lods
movsb
es
dec
pop
int
fwait
push
cltd
addr16
imul
push
pusha
loope
test
mov
xor
aam
pop
jp
sub
les
or
jbe
inc
push
or
xchg
xchg
sbb
mov
sar
mov
in
push
jp
sti
mov
inc
sub
lock
inc
fs
shr
push
mov
ret
pusha
mov
sbb
inc
add
jge
jecxz
aam
jnp
mov
out
aas
mov
mov
outsb
add
and
or
xor
cs
ror
pop
aam
arpl
daa
rolb
loopne
xlat
loopne
pop
sbbb
sub
lock
les
and
mov
idivb
lcall
gs
sbb
lret
and
pop
mov
mov
int
dec
fcompl
adcb
jmp
add
lret
cmpsl
mov
push
push
ficoms
int
mov
fwait
clc
mov
push
mov
aas
addr16
jb
rclb
int
test
lods
or
xchg
rcrl
pop
lcall
xchg
mov
out
or
adc
je
sub
loope
sub
mov
cmc
movsb
sbb
jo
mov
ja
pop
sbb
xchg
xor
jo
cmp
push
jae
movsb
jmp
out
pusha
jmp
mov
mov
ja
pop
pop
push
xor
lahf
cmpsl
gs
adc
mov
shlb
insl
add
xchg
das
add
add
xor
sbb
leave
jge
cmpsb
icebp
outsl
out
aad
in
lret
stos
inc
shrl
and
and
mov
ret
clc
das
or
and
sub
and
adc
pop
xchg
pop
xor
sbb
push
loopne
arpl
cmp
jecxz
stc
dec
jg
pop
into
movsl
jle
and
mov
loop
mov
sbb
add
shll
fcmovb
jl
push
stos
xchg
mov
xchg
push
and
cli
pop
es
movsl
cmpsl
ja
mov
xchg
insb
jbe
jbe
bound
jp
pop
jge
xchg
push
mov
jno
mov
ja
in
das
test
jae
movsb
mov
test
les
aas
add
scas
hlt
scas
mov
jne
jg
popf
idivl
mov
jmp
mov
mov
ja
flds
mov
cmpsb
stos
cli
push
xchg
sbb
pop
inc
imul
mov
jle
lahf
icebp
pop
jnp
add
adc
push
dec
pop
pusha
repz
test
sub
or
aaa
xor
pop
ss
xor
into
cmpsl
jo
in
and
pop
cs
cmp
movsb
pop
push
lea
shll
mov
and
aaa
lahf
push
jl
cmp
jb
dec
cmp
dec
jecxz
repz
and
lock
jae
add
xor
inc
shll
pusha
repz
and
lock
jae
add
xor
inc
push
jo
pusha
repz
and
lock
jae
add
xor
inc
shll
pusha
repz
and
pop
arpl
add
mov
in
dec
fcompl
stos
mov
mov
mov
inc
cmp
or
sbb
push
jp
dec
imul
mov
mov
lret
subl
cmp
or
sbb
push
jnp
dec
imul
mov
mov
lret
sti
sub
sbb
jp
jg
push
or
add
fcmovnbe
mov
repz
and
jo
call
sbb
dec
mov
fadds
jne
addr16
icebp
xchg
jg
in
ds
cmp
imul
push
mov
xchg
loopne
sarl
add
test
sbb
imul
pop
leave
out
pop
ret
stos
into
popf
mov
subb
xchg
sbb
in
scas
in
cmp
movsl
mov
sarl
aas
lret
psubq
adc
adcl
xchg
xchg
aas
cmp
cli
pop
mov
pop
test
mov
jno
outsb
jecxz
mov
cli
shll
mov
or
mov
mov
lret
sti
sub
cmp
or
sbb
push
jp
dec
imul
int3
stos
fdivrl
movsl
lods
pop
scas
pop
jb
sbb
pop
dec
in
or
ds
adc
xor
jmp
cmpsl
mov
popl
pop
bound
sbb
and
xor
fcos
fisubrs
jmp
sti
sub
cmp
or
sbb
push
jp
dec
imul
mov
mov
lret
sti
sub
cmp
or
sbb
push
jp
dec
imul
mov
repz
inc
in
cmp
inc
mov
xor
xchg
dec
fnstenv
jmp
sub
out
das
out
test
cwtl
mov
adc
leave
xchg
cmpsb
movsb
push
ret
cmp
lods
popf
pop
add
fwait
je
and
shlb
or
dec
sub
dec
push
je
movsl
int
ffreep
sti
sub
pusha
aad
xchg
or
fnsetpm(287
nop
call
test
xor
lods
pop
push
jno
xchg
sti
push
repnz
mov
mov
int3
xor
pop
xchg
mov
iret
jbe
jb
inc
ret
inc
outsl
inc
pusha
in
pop
push
fnsave
popf
repnz
leave
icebp
and
nop
xlat
and
ljmp
push
mov
adc
aad
mov
dec
insl
dec
pextrw
pop
int3
push
xlat
addb
push
negl
cmp
sbb
and
in
mov
or
xor
mov
repz
inc
fmuls
insb
rorl
scas
mov
mov
cmc
mov
push
pop
push
sbb
enter
enter
cmpsw
or
testb
pop
pop
pop
shrl
inc
lods
and
mov
cmp
push
or
pop
mov
dec
inc
mov
imul
or
fs
mov
push
loopne
inc
and
cmp
jbe
loop
clc
fwait
jmp
lcall
fwait
mov
insb
lcall
cmpps
xlat
cli
mov
inc
pop
mov
and
sub
test
rcl
repnz
shlb
xchg
lcall
or
pop
xchg
ret
in
lods
push
js
cmpsb
mov
xor
rcll
jp
cmp
mov
pop
xor
or
iret
sti
and
jle
repz
push
pop
lock
aaa
jl
sbb
call
notb
test
aam
inc
hlt
push
mov
pop
adc
out
mov
pushf
in
and
mov
gs
les
or
sub
mov
xor
fcmovne
sub
shrl
sbb
jne
into
rclb
xchg
cmc
loopne
xchg
pop
shl
xor
outsb
cld
leave
mov
fldt
popa
leave
inc
jbe
push
jno
ret
sbb
cwtl
aam
xchg
lock
dec
ja
dec
insb
mov
in
imul
adc
jp
inc
push
loop
std
cwtl
insb
lods
call
in
mov
cltd
ret
sbb
addr16
xlat
xlat
mov
rol
stos
cli
mov
add
cmp
jb
xchg
cmpsb
inc
ret
fadds
popf
pusha
mov
lea
pop
sub
lahf
sub
roll
mov
and
popa
mov
leave
lods
xchg
jl
lds
sub
shll
mov
std
xor
addr16
addb
mov
ret
out
add
mov
inc
iret
xchg
xchg
fistl
stc
jmp
insb
mov
stos
pop
int3
add
or
or
push
aam
sub
mov
cmp
xchg
adc
pop
dec
jmp
in
pop
dec
lods
popf
mov
mov
inc
mov
sub
sub
sub
push
inc
bound
cmp
inc
jne
lock
addr16
das
roll
repz
push
nop
xchg
push
fwait
inc
lods
fildll
and
das
add
xor
sbb
cmpsb
xor
hlt
jle
adc
mov
mov
xchg
jg
mov
and
lahf
ret
cmp
pop
shlb
mov
pop
jb
push
add
scas
push
sarb
xor
movsb
mov
xlat
sub
mov
mov
adc
data16
xchg
add
sub
adc
push
lret
faddp
xchg
push
shlb
xchg
aaa
nop
js
cwtl
xor
fsts
xor
outsb
mov
adcl
or
or
adc
push
in
jo
jge
call
mov
shlw
push
push
xchg
cmp
push
adc
sbb
movsb
ljmp
js
aam
mov
lock
mov
lds
movsb
fwait
mov
inc
int
lcall
lods
sub
and
inc
pushf
scas
inc
div
mov
js
popa
cmp
push
ret
shlb
xchg
lret
mov
fiaddl
fimull
dec
cmp
lret
in
iret
mov
ret
mov
jp
inc
shll
adc
add
mov
inc
cmp
pushf
lahf
add
xor
add
pop
dec
outsb
jae
ds
cmp
les
dec
add
xor
add
mov
dec
cmp
mov
lret
push
jo
jl
jns
mov
sub
inc
xchg
sarb
insl
mov
aad
mov
ljmp
mov
mov
lea
add
ja
pop
add
dec
xor
pop
dec
stc
mov
xchg
sub
pop
sbb
or
mov
mov
daa
and
jae
inc
in
les
les
sub
mov
jae
fildll
push
shll
lods
push
push
mov
mov
gs
jg
bound
jb
push
lret
test
enter
je
sub
nop
inc
jb
aaa
jecxz
or
jns
jae
jg
cs
lcall
pop
mov
stc
mov
and
repz
pop
fdivl
test
cmp
fneni(8087
cmp
mov
scas
inc
push
cmp
sbb
jb
js
and
lock
mov
repz
stc
fucom
adc
ficoml
xchg
lds
lds
mov
fwait
sti
sub
adc
nop
and
loop
aas
repz
inc
mov
dec
dec
enter
lock
ret
mov
inc
arpl
add
jecxz
jg
jne
sbbl
xor
fcomip
mov
lcall
rcl
stos
test
movl
scas
call
dec
lret
in
mov
mov
sbb
lret
dec
xorb
or
inc
cld
mov
push
adc
dec
cmp
mov
or
out
out
dec
sub
ret
mov
fsts
mov
scas
cmpb
mov
test
cli
fdivrs
xchg
mov
mov
shll
jmp
dec
mov
push
stos
push
aad
in
adc
lret
clc
sti
js
pop
push
fcomps
jge
push
xlat
mov
inc
inc
cmp
fnstenv
adc
xor
int3
dec
or
movsb
fwait
sub
sahf
outsb
les
xchg
lahf
xchg
add
xchg
inc
and
shrl
mov
ds
push
xchg
cmpsl
mov
jbe
sahf
mov
cmc
pop
inc
xlat
mov
jae
cmp
fcmovnbe
pop
orl
jb
ret
scas
in
pop
sub
sbb
add
filds
mov
or
movsb
ret
mov
loopne
bound
cs
in
or
movsb
sub
pop
push
mov
stc
push
call
pop
lods
imul
cltd
inc
add
adc
mov
mov
mov
sbb
mov
imul
enter
es
jp
add
pop
pop
xchg
aas
and
jg,pt
stos
dec
cltd
mov
les
inc
stc
mov
fcomps
mov
cli
das
loop
adc
xorl
dec
fwait
pusha
xchg
lods
pop
push
cmp
push
xor
pusha
jns
out
xchg
daa
dec
add
sahf
test
nop
scas
cld
push
adc
fstpl
fdivr
xor
and
stos
out
push
jle
fwait
mov
into
and
and
sahf
or
mov
and
out
inc
aas
add
push
inc
xor
sbbb
and
cmp
roll
jns
xor
mov
mov
jb
in
mov
mov
pop
inc
dec
push
push
jo
inc
fiaddl
dec
mov
in
mov
je
jae
jbe
add
cmp
fwait
pop
repz
add
cmp
cltd
repz
sbbl
mov
inc
mov
mov
enter
es
clc
je
repnz
pop
adc
aad
pop
cwtl
xchg
pusha
mov
or
mov
cs
hlt
mov
mov
test
jo
inc
loope
mov
les
and
iret
xor
setnp
lods
in
sub
xchg
xor
add
fcoml
adc
je
jle
lods
test
mov
xchg
imul
mov
xchg
lods
mov
xor
lahf
fnsave
scas
inc
cmp
in
enter
adc
xchg
inc
xchg
and
inc
cmp
adc
ljmp
out
push
icebp
aaa
iret
mov
addb
dec
shl
mov
or
orl
repz
test
cmc
and
cmp
sbb
lcall
push
cmp
fiadds
nop
lret
push
pop
dec
or
dec
xchg
out
in
in
je
cmp
aaa
ficoms
loop
in
outsl
pusha
pop
pop
push
push
dec
stc
push
pop
cmp
push
or
push
ror
scas
fldt
shl
jbe
addr16
jmp
test
cli
jmp
cmc
faddl
shrl
sbb
insl
div
dec
repnz
mov
and
push
sbb
shrb
sub
cli
xor
sub
sub
and
mov
clc
mov
mov
mov
int3
cltd
sub
rclb
dec
pop
or
je
aam
cmpsb
ret
arpl
push
and
cltd
loope
and
imulb
loop
or
pop
dec
and
adc
push
in
pop
or
jge
pusha
lcall
test
adc
mov
rcll
or
xlat
mov
and
stos
add
pop
js
add
jg
repz
jecxz
xchg
add
mov
mov
mov
cmp
add
add
adc
xor
icebp
rol
or
pop
outsl
inc
mov
mov
aas
inc
pop
mov
lods
sti
int
repz
js
sub
adc
je
jnp
add
into
dec
inc
cmp
adc
dec
sahf
jle
aas
push
and
pop
inc
lret
imul
jl
cmp
lods
mov
icebp
jbe
xchg
rorl
mov
dec
mov
adc
or
sti
pop
popf
add
mov
mov
sub
pop
cwtl
mov
rorb
adc
pusha
sbb
cmpsl
push
scas
push
jp
jg
jg
pop
mov
add
xor
arpl
fstl
iret
sbb
arpl
arpl
add
adc
dec
inc
sti
lcall
jg
pop
pcmpeqd
jbe
shl
int3
scas
icebp
push
cwtl
sub
push
test
push
push
das
sbbl
rcrb
js
test
sub
cltd
xor
mov
jp
cmp
outsl
das
dec
repnz
push
adc
jbe
pop
sub
shrb
cmpsl
pop
mov
icebp
sub
add
adc
dec
pop
sahf
jecxz
xchg
insb
mov
inc
mov
neg
pop
and
push
xchg
mov
inc
nop
mov
xlat
incl
fwait
aad
mov
lret
mov
in
sbb
push
sarl
jle
das
shrl
push
sbb
jecxz
stos
dec
cmp
mov
xor
pmaxub
mov
mov
dec
or
test
xor
je
pusha
mov
xlat
mov
testl
shrb
sbb
sbb
fs
fisttpll
lahf
mov
pop
inc
mov
and
dec
out
rol
insb
jae
stos
decl
mov
mov
jns
pop
aaa
popa
stc
sbb
sbb
movsb
pop
or
imul
xchg
mov
dec
das
xchg
bound
cmpsb
cmp
repnz
push
mov
data16
insb
nop
pop
pop
jg
inc
bound
push
jb
mov
mov
mov
ret
fldcw
push
pop
sub
aad
cs
out
addb
sub
dec
mov
sbbb
fisubrs
push
adc
divl
push
dec
mov
jb
add
call
sbb
push
add
lock
jo
ja
test
push
sbb
stos
push
sub
push
xchg
stc
pop
bound
and
in
pop
sbb
outsl
jne
xor
jp
dec
mov
pop
out
and
pushf
add
lea
fs
pop
xlat
subl
jo
or
jae
fadds
lahf
fimuls
jmp
push
jno
dec
es
pop
insl
push
xor
inc
or
sti
cmc
loope
lahf
mov
mov
ja
sbb
outsl
xor
mov
mov
pop
movsb
mov
cmp
dec
fcompl
add
xchg
mov
mov
lods
negb
jl
loop
and
mov
mov
nop
lret
pop
jle
repnz
or
cmpsl
lret
push
lds
or
leave
inc
adc
xor
or
mov
fwait
pushf
fidivrs
jle
push
imul
repnz
stos
sub
fimuls
jg
dec
mov
lahf
std
and
mov
psrad
movsb
push
inc
enter
rcll
in
sahf
cli
or
add
ret
dec
scas
in
and
std
jecxz
xor
addr16
push
xchg
push
push
cmc
xchg
xchg
popa
mov
mov
cmc
mov
lods
clc
dec
inc
dec
scas
repnz
pop
lahf
test
lock
jp
jge
xlat
outsb
mov
push
pop
adcb
scas
std
pop
test
ss
sbbb
pop
std
popf
xor
rcrb
mov
faddl
in
xchg
sub
sti
or
int3
pop
xchg
dec
jp
test
addr16
ljmp
inc
fcomip
add
cwtl
ret
cmpsb
mov
pop
jge
or
movl
les
bound
cmp
push
das
es
bound
inc
into
mov
pop
hlt
pusha
add
xchg
pop
inc
repz
pop
movsb
shrl
sarb
sub
mov
sbb
jle
repz
push
aam
stc
pop
sbbl
inc
push
cmp
idivb
out
roll
in
inc
test
push
cwtl
sub
mov
ja
fistpl
jbe
aas
leave
shrl
out
fs
int3
xchg
fstl
adc
cmp
mov
das
pop
out
test
in
push
inc
movsb
mov
rolb
out
loope
pusha
iret
jbe
xor
shrb
ucomiss
daa
jae
pop
call
sbb
ja
les
xor
mov
popf
scas
fcomp
add
xor
lea
inc
insb
daa
sbb
pusha
push
call
loope
fs
inc
add
push
adc
jo
xlat
and
dec
outsl
movsl
inc
add
jle
and
pushf
and
std
frstor
lods
xchg
jcxz
je
jmp
fcomps
imul
in
dec
xchg
mov
xchg
dec
adc
sbb
out
nop
insl
and
sub
lds
js
fsubrl
mov
dec
xchg
sbb
test
in
icebp
test
or
add
lock
mov
adc
test
xor
cmpsb
xchg
cmp
shrl
mov
leave
icebp
sbb
xchg
test
enter
dec
inc
dec
xchg
inc
inc
mov
fsubr
subb
inc
xchg
repz
popa
adc
insl
mov
add
setno
dec
pop
in
mov
aad
mov
aam
or
jge
cmpsl
dec
adc
in
add
push
sahf
mov
inc
mov
and
movsb
inc
ja
mov
fadds
es
or
push
lods
pop
push
pop
leave
xlat
sbb
mov
outsl
or
inc
xor
and
cli
testb
js
mov
mov
stos
push
repnz
and
jns
xchg
sbb
mov
loopne
iret
jge
mov
ljmp
xchg
sub
inc
jne
and
loopne
xor
in
rolb
js
mov
jg
and
insl
or
mov
scas
xchg
sbb
and
adc
xchg
fcmove
sbb
sub
and
lret
push
arpl
mov
stos
aam
sahf
sbb
jg
xchg
xor
dec
add
es
xchg
sarl
inc
xor
cmp
test
lock
mov
call
push
lods
sbb
les
lods
fcomip
mov
mov
mov
cld
dec
lret
repnz
add
sub
or
test
pop
sahf
inc
pop
cmpsl
stc
push
lcall
cmp
mov
adc
stc
leave
mov
push
mov
rcrb
inc
jmp
pop
cmp
lods
sbb
lds
test
mov
roll
jns
testb
mov
outsb
or
in
rcrb
ljmp
inc
jo
xchg
outsl
lret
iret
inc
add
mov
ja
outsl
in
enter
or
mov
dec
stos
mov
aad
lret
iret
xor
mov
nop
movsl
inc
xor
int
xchg
andb
xchg
ds
dec
leave
adc
ja
popa
bswap
cmpsw
in
sbb
mov
and
ffree
mov
pop
xchg
fistl
xchg
add
xorb
sar
push
mov
es
jge
pusha
or
ljmp
mov
mov
and
outsb
int
fbstp
les
pop
dec
ret
and
push
jo
fistps
add
fadd
mov
jbe
enter
daa
cmp
outsl
lds
test
sti
push
inc
test
adc
daa
xchg
fdivl
sub
popa
cmpsl
mov
lods
lret
inc
out
call
sub
sbb
dec
mov
es
mov
pop
popa
rcr
push
lcall
repnz
mov
fwait
mov
and
test
mov
sbb
mov
in
sbb
mov
sbb
in
inc
mov
push
xchg
cmp
xor
inc
xchg
mov
dec
or
js
cmp
addr16
jne
pop
cs
or
insl
daa
popa
cmp
insb
mov
mov
sub
mov
popf
add
mov
cwtl
pop
jle
leave
inc
int3
xchg
sbb
mov
push
jae
or
push
push
inc
lock
in
enter
push
sub
add
add
call
lcall
add
and
dec
shl
insb
jmp
clc
out
adc
shll
rcrl
loop
out
test
mov
or
inc
cmpsb
cmpsb
fcomi
popf
pushf
and
pop
sbb
sbb
inc
push
stc
pop
add
lahf
cmpsb
icebp
cmpsl
jno
jp
mov
aas
mov
js
enter
and
xchg
outsl
adc
jmp
cwtl
push
xor
lret
xor
es
stos
cmp
ret
sti
call
rorb
shlb
bound
aad
push
inc
in
inc
test
sbb
packsswb
add
jle
lcall
mov
bound
popa
in
cmova
xchg
jb
test
cli
sbb
jo
insb
outsl
cmp
enter
mov
cmc
stos
sbb
out
dec
mov
dec
out
int
aad
mov
or
out
lcall
xchg
aas
int
repnz
loope
imul
sbb
and
ss
or
fs
inc
fsubrp
fdivs
inc
pushf
adc
adc
popa
pop
dec
pop
push
shrl
pop
addb
mov
adc
mov
mov
lods
hlt
pop
loopne
pop
or
cld
sub
ljmp
xchg
cli
hlt
sbb
imull
imul
push
jae
sbb
ret
dec
lock
popf
adc
es
xchg
test
fimull
xorl
pusha
add
popf
sub
push
sub
cmc
gs
push
in
movsb
jne
aad
push
ja
in
jmp
ret
mov
adc
inc
adcl
imul
pop
insl
lahf
inc
lea
push
adcl
sub
mov
adc
jmp
dec
pop
inc
push
mov
das
outsb
imul
negb
adc
dec
lret
xlat
mov
push
sub
rorl
cmp
aaa
dec
push
mov
dec
and
outsl
sub
xchg
xchg
leave
clc
jmp
je
cltd
icebp
push
lahf
pop
ds
cltd
and
imull
dec
jbe
imul
pop
pop
add
fistpl
dec
xchg
pushf
aas
ffreep
fisubrs
in
rolb
adc
cmc
sbb
mov
out
or
pusha
movzwl
stos
lret
fildll
xor
fdivrs
cld
rcrl
push
daa
inc
mov
lock
dec
or
dec
ja
push
mov
inc
jns
mov
orb
stos
lcall
jmp
sti
sub
cmp
or
sbb
push
jp
dec
imul
mov
mov
lret
sti
sub
cmp
or
sbb
push
jp
dec
imul
mov
mov
lret
sti
sub
cmp
or
sbb
push
jp
dec
imul
mov
mov
dec
jmp
sti
aad
lds
sbb
xchg
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
outsl
ljmp
fwait
je
sub
adc
xchg
decl
scas
aad
lds
adc
pop
and
pcmpeqw
call
shll
cmc
lahf
in
or
add
ss
daa
pop
pop
insl
pop
jg
jbe
mov
scas
xchg
shrb
push
adc
sub
into
jmp
movsb
imul
xchg
cmpsl
ds
mov
aaa
mov
aas
mov
push
insl
xor
scas
nop
cmc
pusha
test
ljmp
in
add
mov
or
scas
lds
or
add
shlb
test
sub
jp
push
and
xchg
aas
sub
mov
mov
out
sbb
test
lock
movsl
push
mov
sbb
xor
cmp
call
mov
mov
xchg
mov
or
adc
pop
aas
cmp
inc
push
jl
out
xlat
lods
mov
xchg
cmc
lahf
addl
xor
and
add
inc
sbb
or
cld
xchg
std
mov
mov
repnz
insl
push
add
inc
es
ja
adc
in
lcall
cmpsl
aam
stc
cltd
sti
orb
adc
push
aaa
push
cmp
inc
pcmpeqw
gs
xchg
incl
scas
aad
lds
adc
pop
and
pcmpeqw
gs
xchg
incl
scas
aad
lds
adc
sub
inc
push
fimull
and
ret
scas
jmp
fdiv
into
lret
jno
mov
fcmove
std
dec
jl
dec
cmp
ret
inc
hlt
push
movsb
mov
pop
sub
sbb
cld
sahf
adc
pop
fiadds
mov
mov
scas
push
std
rcll
push
repz
lods
jns
test
ds
fildl
stc
int3
xchg
ds
jne
das
jo,pn
or
mov
pop
and
jl
jecxz
xor
mov
test
adc
inc
push
or
test
fisubrl
mov
imull
xadd
pop
mov
out
cmp
outsl
push
or
sbb
fsubl
fildl
ds
xor
inc
stos
adc
jmp
xchg
pop
lods
push
shlb
sub
or
cld
sti
sbb
jns
adc
push
ljmp
inc
or
lods
out
jmp
inc
push
cmpsl
movsb
mov
out
adc
and
sub
jp
or
daa
jecxz
pop
push
fiadds
lcall
loop
pop
mov
push
lea
cmpsb
jae
xchg
dec
mov
xchg
xchg
cmpb
jmp
adc
in
out
sub
outsl
mov
out
fcmovnbe
repnz
fsub
or
movsb
mov
fistpl
mov
jl
xlat
xchg
dec
cmpsl
dec
xchg
fmuls
sbb
neg
daa
movsb
mov
inc
lock
test
and
inc
cmp
lods
cmc
into
sbb
pop
jg
ret
sub
arpl
leave
movsl
jne
in
dec
and
inc
jg
xchg
dec
aad
mov
lcall
aad
xchg
ret
sub
mov
push
jae
xor
in
ljmp
mov
stos
in
clc
addl
jl
push
call
shll
push
mov
fs
in
xlat
cmpsl
out
call
cld
lcall
adc
lds
call
cli
fbstp
dec
mov
and
aam
add
mov
adc
push
dec
add
mov
ljmp
popf
dec
push
or
std
repnz
int3
stos
ljmp
lds
xchg
mov
stc
cltd
fadds
js
call
inc
cmp
cmp
outsb
push
dec
test
stos
push
lock
mov
fs
xchg
sbb
push
fsubrl
dec
mov
mov
lret
ljmp
je
cltd
lret
stc
sbb
popa
inc
cmp
les
shlb
rcrb
jge
push
xchg
scas
in
jo
fildl
lock
jle
mov
cmp
in
lds
mov
xchg
push
mov
std
cmp
pop
rcrb
cwtl
test
xchg
or
pop
cli
sub
lods
pop
mov
pop
pushf
loopne
fsubrl
jg
outsb
pusha
fimuls
adc
pusha
xor
mov
lods
je
mov
sbbl
pushf
mov
fstpl
jne
jle
push
xchg
clc
pop
sahf
cmpsl
mov
jne
mov
cli
sbb
xchg
out
stos
nop
adcl
or
shrb
leave
mov
shr
or
in
fsubrp
adc
push
xor
cmpsl
and
roll
jo
ret
add
daa
push
or
cltd
sub
cmp
sbb
sub
xor
mov
lahf
adcl
and
inc
popa
mov
dec
andb
mov
jnp
fs
shrb
ds
andb
clc
xchg
loop
push
outsl
cmp
pop
xor
inc
sbb
mov
adc
jmp
inc
pop
xchg
pushf
ret
mov
mov
pop
add
repz
mov
sbbb
push
cltd
jns
xor
sub
aam
idiv
pop
stos
pop
pop
sbb
or
in
or
movsl
andl
je
ret
mov
les
pop
pop
sub
retw
sub
and
idivl
ds
outsl
subb
inc
aad
es
in
add
shr
into
dec
inc
sti
clc
je
sbb
push
inc
sub
mov
fcmovnb
add
shlb
cli
pop
xchg
push
dec
ja
lods
cmc
adc
insl
xchg
lahf
pop
cmp
adc
int
cmp
jge
dec
xchg
movb
addl
mov
stc
mov
ljmp
adc
sbb
jp
mov
and
dec
shll
leave
bound
out
pop
fcoml
in
fnstenv
pop
push
cwtl
frstor
cli
jle
and
stos
xor
test
repnz
jne
hlt
stos
pop
iret
rol
cld
dec
aam
push
loop
enter
pop
jb
std
mov
cltd
out
iret
xor
popf
ficomps
in
fs
insl
roll
pop
shlb
test
and
ja
ret
sub
flds
lds
xchg
sahf
xor
jnp
fs
cmp
dec
and
mov
daa
adc
repnz
imul
or
cs
fiaddl
mov
in
jo
mov
mov
fimull
repnz
xchg
xchg
mov
loop
jmp
push
mov
ror
dec
and
shrb
cmpsb
adc
fsub
xor
adc
imul
ss
in
pop
xor
push
jns
mov
imul
add
out
stos
mov
or
adc
push
and
sarb
adc
inc
push
mov
xlat
jno
pop
push
jo
pushf
fwait
jns
fisubl
lock
in
sub
xlat
mov
pop
lret
ds
and
out
filds
dec
sub
mov
sti
pop
cld
push
pop
push
or
ss
rolb
out
or
cmpsl
jecxz
stos
lahf
xor
aad
popa
je
cmp
jecxz
push
jmp
mull
les
xchg
lcall
jge
jnp
insl
mov
shrb
loop
inc
mov
movsl
cmp
lds
shrl
pop
xchg
jne
pop
pusha
add
in
lds
loope
test
fisttpll
and
outsb
sbb
jge
push
xchg
sahf
rcl
pop
fiadds
cltd
add
add
or
outsl
lock
std
test
std
daa
adc
adc
push
mov
decl
mov
push
sbb
fwait
clc
pop
inc
mov
xchg
shl
jmp
in
mov
and
addr16
mov
jge
sub
lea
sbb
adcl
mov
jno
pop
lret
or
mov
pop
adc
dec
mov
jecxz
mov
dec
adc
cmp
pop
push
frstor
je
shrl
je
jns
cmp
pusha
jmp
arpl
stos
mov
or
nop
sbb
pop
loop
stos
push
mov
mov
cmc
sub
jge
test
add
sti
popf
push
es
scas
or
mulb
push
push
addb
loopne
push
push
sub
std
cmp
xchg
cmp
in
rclb
pop
mov
xor
xor
fcompl
pop
push
jns
cwtl
adc
daa
jno
cmp
xchg
inc
jb
in
aaa
dec
mov
sbb
adc
andb
lret
lcall
push
and
push
test
clc
fisubrs
repz
mov
mov
xor
mov
sbb
xchg
nop
ss
and
mov
push
loope
sbb
es
pop
scas
ss
pop
out
sub
mov
lds
push
mov
out
test
jns
insb
mov
sub
xchg
and
ficomps
mov
push
cmp
es
loope
mov
xchg
adc
loope
push
mov
or
pop
and
fildll
lods
out
aam
repnz
inc
icebp
int
int
test
rorl
sbb
daa
xor
mov
xor
push
stc
popf
add
cmp
mov
and
dec
adc
xor
sbb
inc
mov
clc
lcall
inc
subb
inc
bound
sub
jmp
mov
xlat
push
aad
jp
jae
aaa
cltd
mov
xor
rcrb
cmp
push
fisubrs
push
repz
inc
add
inc
push
lahf
mov
daa
cltd
jmp
aaa
mov
mov
scas
out
add
pop
pop
push
fidivrl
xor
test
cmp
sub
sahf
outsl
loope
fisubrs
pop
mov
xor
int
adc
sarl
mov
enter
sarl
test
in
sub
and
adc
xchg
pop
mov
mov
adc
bound
repz
add
mov
popa
jno
mov
leave
xor
mov
mov
mov
push
iret
xchg
popa
int
mov
adc
outsb
insb
push
scas
incl
jne
cmp
lret
cwtl
dec
scas
adc
sar
adc
js
stc
das
push
ret
test
in
dec
jns
test
fxrstor
daa
push
xchg
xor
insl
test
jnp
imul
add
lret
das
jmp
frstor
imul
dec
mov
in
inc
jae
outsb
lea
lods
xchg
pop
inc
flds
pusha
cmp
or
sub
add
jnp
adc
faddp
inc
push
pop
mov
push
clc
cltd
mov
into
inc
push
mov
movsl
and
inc
mov
cmpsb
in
sub
std
mov
scas
xchg
fwait
outsb
jp
lds
xchg
imul
pusha
lret
adc
std
xor
gs
loope
les
xchg
std
mov
fnstsw
rcll
xor
pusha
call
nop
xor
dec
jnp
push
popa
mov
xchg
xor
shll
cmpb
int3
jg
sub
mov
mov
insl
push
dec
cmpsb
pop
adc
mov
js
mov
out
test
les
imul
pop
xchg
loop
movsl
dec
adc
test
pop
fadd
and
mov
insb
out
iret
ljmp
int
popa
int3
inc
push
ret
jmp
fdivs
sub
cmp
sarl
sbb
out
sub
gs
adc
cmp
and
mov
nop
jns,pt
std
scas
loop
xchg
cld
outsb
lds
mov
aam
out
push
add
in
sahf
shll
xchg
mov
xchg
cmp
call
pop
xchg
dec
shll
mov
and
xor
mov
mov
sbb
pop
sub
xchg
jg
cmpsl
add
adcb
add
inc
xor
clc
lods
fistpll
inc
sahf
cmp
in
inc
dec
frstor
mov
mov
inc
cmp
imul
and
inc
push
or
and
ja
pop
pop
mov
movsb
jmp
xor
cmp
icebp
pop
imul
jbe
cmp
inc
adc
mov
pop
mov
dec
or
xor
push
mov
movsl
dec
or
xlat
movsl
cltd
cmp
arpl
fcmovb
scas
sub
adc
xchg
jle,pt
out
jae
lods
dec
mov
pop
outsb
jno
sub
add
nop
cmp
lret
int
mov
inc
and
gs
lods
inc
inc
or
lret
shr
cmc
mov
adc
mov
jg
je
fisttps
fcompl
nop
aam
in
out
pop
aam
cli
cmpsb
je
add
jae
aas
push
sbb
adc
pop
mov
adc
popa
pop
add
pcmpeqd
cs
lret
mov
setae
fiadds
xchg
cwtl
jo
fdivrl
xor
rcrl
loop
icebp
loopne
dec
push
xchg
sbb
mov
or
or
vsqrtss
xchg
cmp
clc
int3
inc
pop
jnp
or
test
enter
jmp
mov
call
fistpl
push
cld
iret
sbb
jb
push
mov
jmp
mov
or
pop
pop
xchg
rcll
and
mov
lret
push
add
lahf
adc
sti
pop
dec
cmpsb
mov
loopne
shrl
mov
gs
clts
sbb
pop
jge
mov
scas
ficoms
lret
inc
lods
mov
ret
aas
loope
sbb
ret
jne
xlat
aad
aad
and
xchg
xlat
mov
lret
inc
dec
idivl
jle
orb
cmpsb
testb
int3
shlb
clc
xchg
outsl
test
xor
lahf
add
pop
mov
out
push
js
push
xor
xchg
adc
mov
pop
xchg
inc
xchg
add
inc
dec
inc
mov
insl
mov
mov
mov
js
pop
adc
lea
push
outsl
hlt
add
sub
imul
cltd
stos
push
scas
jae
popf
adc
xor
and
mov
jg
clc
push
aas
in
sbb
movsb
test
inc
cmp
xchg
push
pop
cmpsl
xor
fdivs
jne
scas
xchg
xchg
xor
aaa
rorl
xlat
xor
les
cmpsb
int3
and
repz
adc
imull
loope
mov
xchg
jg
jecxz
mov
and
pop
sub
lock
outsl
sub
xchg
lods
xchg
mov
icebp
mov
es
inc
es
roll
jbe
loope
out
mov
mov
imul
pop
and
adc
insb
in
inc
outsb
pusha
imul
push
mov
pop
xor
test
push
or
rcrl
movsl
dec
pop
mov
ds
js
sub
in
int3
push
jne
pop
add
daa
vunpckhps
pop
mov
lods
iret
das
popa
fldt
sbb
fcoml
das
add
jns
popl
cli
sub
andl
rcrb
loope
and
add
insb
loop
mov
xor
jns
jp
into
add
sub
adc
mov
fstpt
add
jmp
mov
xchg
sbb
mov
scas
adc
je
sub
cld
jnp
scas
adc
lea
negb
cltd
mov
lret
test
and
fsubrs
inc
negl
cmp
cwtl
mov
test
shr
xlat
ja
andl
push
xchg
mov
xor
cmc
or
mov
clc
sbb
ss
adc
test
pusha
out
sbb
rcl
mov
mov
popa
pop
lret
adc
dec
push
mov
sub
cmp
pop
jne
sbbb
xchg
inc
lcall
inc
adc
pusha
insb
loopne
roll
push
outsb
int
and
mov
jmp
imul
and
into
call
xchg
add
sarb
outsb
adc
shll
cwtl
add
out
add
lds
repz
lock
push
mov
out
roll
arpl
imul
lods
xchg
jg
inc
dec
icebp
adc
add
and
xor
dec
out
loopne
push
or
cmp
addl
lret
mov
iret
pop
arpl
push
icebp
icebp
xchg
daa
test
shl
jmp
jg
aas
mov
test
cltd
xor
aam
mov
outsl
xchg
mov
hlt
inc
and
sub
insl
mov
popa
push
cmpsl
sub
xchg
push
out
aad
mov
push
jecxz
pushw
js
loope
jmp
dec
cwtl
or
test
das
pop
repnz
cmp
lds
addr16
in
test
aam
hlt
sub
xchg
xor
xor
xlat
push
jae
subb
push
fsubrp
mov
stos
dec
cmpsl
or
cmp
mov
adc
insl
inc
dec
rcll
cmp
push
roll
mov
push
adc
das
loope
push
xor
stos
jnp
push
pushf
xor
scas
or
lahf
fwait
inc
mov
sub
jnp
mov
das
je
test
lret
xor
lret
ret
inc
mov
nop
cmp
shlb
inc
idivb
fildll
mov
dec
cli
lcall
mov
lret
mov
mov
int
in
jne
ds
loope
mov
adcl
aad
js
mov
inc
pop
adc
xor
or
push
orb
test
pop
pusha
and
xor
ds
xchg
mov
arpl
xchg
inc
mov
xchg
inc
mov
sub
jb
iret
mov
ret
adc
adc
test
je
jmp
ret
inc
sub
adc
cmp
jecxz
enter
dec
ret
xchg
mov
lds
sbb
mov
cmp
aam
adc
data16
mov
int
xchg
xlat
mov
pop
xchg
andl
clc
loopne
inc
sub
xor
mov
mov
adc
jbe
add
filds
arpl
or
mov
or
jg
xchg
std
insb
das
leave
shrl
dec
mov
xchg
pusha
cmpsb
inc
inc
insb
popf
add
loope
imul
lret
repz
enter
rorl
push
insb
adc
fcmovnb
lret
and
insb
mov
iret
xor
movl
dec
lret
cmova
jle
leave
adc
ret
fdivrs
mov
mov
dec
add
jno
lret
ss
mov
lret
inc
cmp
pop
add
aad
jb
in
mov
insb
push
push
cmpsb
jne
mov
andb
jge
sbb
lret
mov
sbb
mov
add
fdivl
or
jle
adc
add
imul
and
or
add
inc
cmpsl
sbb
inc
in
movsb
inc
subl
idivl
add
xchg
xor
pop
cli
sub
mov
jmp
mov
push
std
daa
pop
loope
cmpsl
lods
ret
xor
enter
lcall
jnp
pop
loope
lods
aam
xchg
push
into
leave
mov
fldl
sbb
int3
xor
movsl
insl
dec
subl
xor
add
loope
lea
mov
subb
sub
testb
mov
pop
cmp
inc
imul
push
cwtl
ds
push
xchg
mov
nop
and
aam
nop
cs
push
icebp
int3
pop
or
lret
sub
xchg
in
insl
mov
mov
fwait
mov
and
insl
xor
stos
mov
popa
push
mov
cmp
enter
cmc
leave
or
into
jbe
or
int3
jo
sub
test
repnz
jae
negl
and
mov
or
fistpl
cld
xor
or
push
das
icebp
xor
mov
test
add
lock
jp
xchg
inc
inc
inc
inc
inc
sarl
sahf
fildl
sar
insb
or
push
inc
xchg
in
mov
lcall
and
in
or
mov
push
loop
in
inc
and
cmp
gs
lcall
pop
pop
jns
gs
xor
insl
into
fdivr
add
int
cmp
loopne
push
sarl
ficoms
ret
aas
dec
jge
dec
jg
push
call
in
test
fisttps
mov
outsl
pusha
cmp
sahf
sti
rol
dec
pop
pop
cwtl
ffree
cmp
lds
push
sbb
les
sub
jecxz
stos
addr16
setge
cmpsb
cmpsb
jae
inc
xchg
push
pusha
and
cmc
iret
jo
fisubl
or
cmp
sub
mov
ret
push
fsubrp
dec
push
lahf
add
test
push
cs
pop
fildl
inc
outsl
push
sarb
dec
std
jecxz
out
pop
rcll
sbb
inc
insl
add
enter
cmp
push
lds
int
data16
sbb
add
jae
pushf
xor
out
add
hlt
xchg
xchg
das
je
add
movsb
xchg
sub
in
fcmovnu
mov
and
ret
mov
lods
iret
dec
push
pop
addb
jg,pt
sub
ficomps
js
pop
mov
xor
fisttps
and
fisttpll
sub
sbb
mov
push
std
lret
inc
test
in
adc
insb
sti
testb
add
cmp
cli
in
jns
xorl
mov
sbb
pop
addl
fdivp
xchg
fbld
xchg
mov
xchg
xchg
enter
sbb
fs
push
mov
bound
lret
ds
and
les
xor
and
add
or
inc
out
pop
scas
test
adc
push
sbb
dec
jg
sbb
push
mov
mov
add
dec
call
bswap
dec
dec
and
mov
inc
rorb
mov
or
sbb
jb
mov
test
cmp
cli
dec
dec
mull
in
sbb
xchg
xor
stc
pusha
adc
jmp
sub
mov
test
pop
xchg
adcb
mov
or
mov
mov
fsubr
enter
xor
clc
mov
mov
xchg
sub
ficompl
das
push
aas
inc
pcmpeqw
gs
xchg
incl
scas
aad
lds
adc
pop
and
pcmpeqw
gs
xchg
incl
scas
aad
lds
adc
pop
and
pcmpeqw
gs
xchg
incl
scas
aad
lds
adc
pop
and
jne
adc
fcomps
cmp
pusha
sbb
pop
test
lret
xchg
aad
mov
push
es
push
push
add
inc
gs
andb
xchg
aad
lds
in
pop
es
push
push
or
push
gs
mov
mov
cs
lret
repnz
adc
pop
push
gs
or
push
xor
in
test
stc
repz
ret
fst
cmp
ficompl
out
and
leave
push
and
push
xchg
sub
mov
adc
cmp
add
add
lretw
push
jmp
inc
call
mov
pushf
addr16
out
std
pop
pop
stos
cli
mov
mov
fwait
stos
inc
add
xchg
cmpsb
push
xchg
cs
sahf
sbb
fldcw
xor
addr16
mov
mov
pop
in
aad
adc
into
cmc
sbb
shll
clc
push
popf
test
cli
xchg
sub
xchg
sub
es
pop
lret
push
xchg
addr16
mov
cmpsb
test
add
div
sbb
push
or
sbb
pop
dec
dec
pop
mov
jl
out
loopne
rol
sarl
scas
mov
inc
jb
jg
or
add
pop
add
xchg
jecxz
not
out
mov
mov
mov
jo
push
jno
ss
lock
rcl
movsl
cmc
lods
add
cmc
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
inc
popa
in
and
jmp
popf
cmp
jbe
lret
pusha
adc
ror
pop
movsl
cli
subb
fisubl
test
repz
jns
or
sbb
addr16
mov
jno
push
gs
sarl
pop
mov
dec
dec
bound
sub
mov
movsl
sahf
call
or
cmc
das
sub
test
cmc
jbe
and
sbb
sub
xchg
in
dec
inc
sub
add
in
push
mov
push
cli
repnz
or
stos
fidivl
push
mov
imul
in
mov
outsw
out
add
dec
ret
jecxz
sub
int3
push
mov
cld
imul
loope
inc
pushf
pusha
call
or
dec
add
enter
inc
dec
fcoms
jl
inc
cwtl
out
xor
adc
or
lret
dec
add
in
lret
cmp
mov
jge
test
xchg
dec
xor
insb
inc
mov
mov
data16
test
and
std
clc
scas
inc
clc
sbb
pop
xchg
in
cld
inc
fbld
and
loope
dec
jo
push
aaa
rorl
ret
movsl
hlt
dec
movsb
sub
cld
mov
and
sub
fcmovnu
jo
aam
add
push
inc
sbb
lds
add
lahf
mov
shrb
inc
ja
shrl
gs
shll
pop
repnz
push
xsaveopt
or
jl
jae
lahf
aam
adc
sti
mov
iret
test
cmc
mov
shll
push
and
cwtl
cltd
adc
push
add
cmpsb
lret
movsb
mov
lahf
dec
mov
in
scas
mov
test
dec
ss
fcomip
jl
jecxz
test
push
dec
shlb
mov
sub
and
lock
int
sbb
lahf
ljmp
inc
or
lret
test
loopne
jbe
mov
xchg
push
xchg
imul
mov
xor
les
lock
mov
mov
ds
inc
and
cmc
push
sub
pop
push
fisubl
mov
cmpsb
mov
xor
add
popf
andb
mov
push
lods
arpl
push
dec
sub
pushf
add
inc
add
sub
fwait
mov
dec
mov
push
fldenv
dec
call
roll
dec
out
push
sar
mov
nop
xchg
jo
stos
dec
in
adc
lret
ret
fs
sahf
pop
jns
pusha
jo
movsb
and
imul
jmp
das
inc
int
xchg
rcll
fs
mov
shl
fisubrs
push
addl
sub
outsb
int
mov
cmp
aam
ss
pop
cwtl
into
push
sub
insb
and
push
ret
xlat
jns
inc
aad
out
xchg
jno
stos
pop
and
imul
pop
xchg
push
push
scas
or
cmp
pop
int
or
sub
cmc
xor
mov
adc
and
add
shrl
mov
in
outsl
cltd
pop
mov
fcmovb
shll
sarb
jns
add
xor
movsl
loope
ss
leave
out
sub
add
js
jno
pop
icebp
orb
mov
test
sarl
and
sbb
mov
addr16
fwait
insb
out
pop
jp
rcrb
mov
popl
psubusb
roll
out
xchg
add
dec
mov
pop
xchg
mov
insb
jmp
xchg
stos
sbb
dec
xchg
inc
push
imul
and
lods
mov
ja,pt
ds
outsl
das
aam
lret
divl
int
add
cmpsb
xchg
sahf
lea
ja
and
rcrl
outsb
push
and
jmp
or
cltd
int
scas
jle
push
lock
and
add
mov
cmp
jmp
int3
popf
inc
outsb
mov
icebp
pop
xor
clc
cmp
sbb
adc
pop
adc
push
aas
out
xor
sbb
pop
mov
mov
and
pop
test
mov
mov
dec
andl
xchg
sbb
xchg
inc
movsl
lahf
sti
sub
push
ret
xchg
loopne
inc
dec
sarl
xchg
pushf
jns
daa
jb
cmp
dec
pop
jae
jmp
std
aas
int
testl
rolb
sbb
pop
repnz
jnp
mov
test
daa
mov
pop
out
pop
push
adc
in
out
dec
iret
cmpsl
jno
adc
sti
or
add
pop
mov
cmp
leave
ror
in
gs
test
in
clc
nop
jmp
das
insl
movsl
call
in
jp
sub
clc
push
out
imul
add
sub
repnz
mov
or
jo
scas
xchg
pop
test
adc
mov
leave
push
je
xor
xchg
inc
and
mov
xor
jge
arpl
mov
mov
test
push
jb
pop
addr16
dec
and
sbb
fiadds
jge
fmull
pop
sbb
lock
mov
sub
xchg
xchg
jp
mov
in
xor
gs
push
mov
push
xchg
dec
jns
mov
xchg
aaa
loop
jbe
movsl
inc
shlb
inc
fbstp
rorb
pop
xor
jo
xchg
aas
in
loope
or
jae
push
mov
jp
cmc
fsubr
inc
dec
insb
cmp
ja
lea
cmp
pusha
sbb
gs
add
addr16
lea
mov
and
out
fidivs
mov
jae
mov
add
fistpll
iret
push
pushf
test
xchg
cmp
adc
lods
loope
cmc
mov
fcoms
mov
push
addr16
mov
std
push
fists
inc
int3
jb
fstl
aad
notb
popa
adc
mov
xchg
loop
mov
fdiv
in
xchg
xchg
mov
mov
adc
out
lret
adc
inc
mov
cmpsb
jnp
sub
add
xor
dec
dec
cmpsb
mov
addr16
mov
or
dec
sbb
test
mov
pop
sarb
mov
xor
insl
aaa
decb
push
lods
sub
jecxz
or
notb
fwait
push
sub
lahf
aam
mov
push
or
xlat
movb
cmp
sbbb
sub
adc
in
fwait
aam
push
adc
xor
cld
aam
test
xor
imul
add
adc
xor
scas
ljmp
fwait
into
push
adc
xchg
mov
sarl
sbb
outsl
aad
aaa
push
aad
mov
ror
nop
jle
aam
ficoms
test
ss
in
stos
adc
push
sbb
adcb
xchg
popf
frstor
and
ret
outsb
into
sbb
dec
sbb
fldl
xchg
sarl
scas
mov
int3
or
ljmp
out
pop
daa
mov
push
sub
stos
in
inc
cwtl
add
push
out
cmp
mov
mov
jmp
mov
and
mov
push
in
push
jb
fnstsw
dec
mov
scas
test
int
jae
inc
stc
stos
lcall
cmp
mov
mov
sub
gs
jl
repz
les
je
test
lcall
inc
push
sahf
xor
in
mov
test
xor
push
pop
out
ret
cmp
int3
pop
in
mov
cmc
dec
sbb
popf
xor
aas
repnz
ja
xor
jns
repnz
data16
mov
add
push
xor
sub
dec
sarb
mov
lret
negb
aas
repz
push
jle
mov
mov
jbe
popf
xlat
jno
icebp
shlb
adc
push
add
sbb
loope
push
fcompl
jg
je
mov
sub
sub
or
sbb
pop
sub
pushf
push
fisubrl
pusha
and
and
fs
jo
div
out
sub
sub
dec
cmc
sbb
mov
push
in
ficompl
sar
cmp
mov
addr16
out
lahf
lret
popa
addl
jl
movzwl
fistps
movsl
add
mov
insl
sbb
fmul
es
mov
lock
ds
jl
mov
les
jmp
mov
jle
repz
xor
pop
jg
xchg
lcall
pusha
jnp
test
dec
push
hlt
repz
popa
mov
cltd
xchg
xchg
sub
cli
dec
outsb
dec
inc
lds
mov
out
add
mov
sub
scas
je
idivl
xor
js
aaa
test
pop
sub
shr
add
sbb
push
push
jo
rcll
mov
in
xor
dec
pop
or
out
je,pt
or
int3
int
cmp
mov
pop
add
fdivrs
cmovno
push
cli
addl
les
cltd
xchg
popf
incb
js
sub
imul
shlb
faddl
ja
mov
lock
xor
sahf
lods
es
std
or
inc
aas
pop
je
push
xchg
or
pop
xchg
push
xlat
ss
xchg
inc
scas
test
xchg
push
dec
mov
stos
mov
or
mov
cltd
cmp
cmc
out
adc
adc
rorb
sub
imul
sbb
push
addps
sti
fs
push
mov
in
movl
cmp
daa
inc
ss
cmp
mov
cltd
mov
shrb
ja
cmpb
ret
add
mov
jbe
mov
or
mov
imulb
add
push
push
sub
xor
ss
pop
adc
mov
loopne
cmp
pop
xlat
outsl
inc
xor
enter
popa
mov
mov
int3
mov
hlt
imul
pop
mov
lret
or
aas
pop
or
adc
movsl
in
adc
dec
lahf
fisttpll
fisttps
std
mov
scas
loope
mov
inc
add
xchg
rcrb
dec
pushf
shrb
xchg
in
cmp
cmp
aas
xchg
mov
lods
shlb
sbb
adc
sarl
pop
or
or
dec
daa
push
push
inc
insb
xchg
sbb
push
mov
xchg
mov
adc
mov
mov
popf
mov
mov
mov
cwtl
cwtl
xlat
mov
xor
xor
add
mov
mov
jno
adc
addb
and
gs
and
mov
jge
mov
js
xor
pusha
or
mov
fmull
or
stc
inc
push
enter
pusha
sub
mov
test
lahf
imul
rclb
js
andb
cmpsb
and
fwait
scas
push
dec
fs
ss
jecxz
jl
test
cmp
xchg
shr
addl
daa
jecxz
sub
mov
lods
xchg
dec
rcr
sbb
or
hlt
stos
lods
pop
mov
push
cmpsb
mull
push
mov
movsb
jl
cmp
ja
clc
rcl
dec
pop
out
mov
inc
sbbl
lea
mov
or
mov
data16
ss
pop
push
xor
pop
sarl
mov
out
cmpl
je
test
push
rcrb
aad
inc
sub
add
sub
ds
pushf
in
and
das
subl
add
add
aaa
xchg
sub
clc
sub
xor
in
mov
test
repnz
inc
mov
jecxz
add
mov
xchg
add
sti
xchg
mov
dec
rcll
loop
add
or
test
xchg
lods
jbe
mov
dec
out
cwtl
int3
xchg
sahf
wbinvd
out
sti
mov
jmp
sub
sub
inc
in
lahf
lret
add
in
or
outsb
ds
sbb
and
lds
lret
push
cmc
push
push
mov
cmp
fbld
cmp
lds
fwait
rep
imul
inc
cltd
xchg
and
add
in
jne
push
or
pop
sbb
push
and
sarl
scas
test
cmp
adc
lds
in
mov
mov
lock
loopne
movsl
shrb
adc
adc
jmp
mov
push
sbb
adc
imul
add
jge
mov
sbb
xchg
pop
xlat
mov
add
movsb
push
loop
jmp
daa
out
mov
inc
movups
les
mov
out
pop
and
dec
shlb
into
les
fdivp
std
sti
loope
shll
test
sub
arpl
nop
dec
test
adc
inc
mov
jno
push
ss
or
push
shrb
jno,pn
or
popa
call
jb
xchg
fidivs
jl
stos
ret
test
pusha
xchg
test
adc
popa
sbb
jle
aaa
cli
loop
in
mov
mov
inc
sarb
cwtl
xchg
lods
push
mov
out
cmp
jno
je
js
iret
or
nop
pop
das
mov
mov
xor
mov
xchg
pop
bound
or
sbb
and
sbb
imul
outsl
popa
adc
icebp
leave
js
test
inc
loopne
fbld
pop
cmp
ja
sbb
and
fisttpll
js
push
shlb
jge
add
iret
js
or
jno
cmp
call
out
jle
ret
xor
adc
jo
xorl
aam
rcl
xchg
mov
in
lods
xlat
jg
jecxz
out
mov
mov
and
cmp
sub
dec
sbb
inc
xor
ss
xor
clc
mov
jns
lret
xchg
or
mov
clc
jecxz
inc
inc
sub
mov
dec
into
mov
aaa
loope
push
mov
leave
push
push
or
jp
addb
ret
or
fs
inc
add
rcr
shl
xchg
int
push
xchg
inc
inc
xchg
mov
inc
ficoml
add
test
inc
pop
ja
jl
inc
pusha
sub
fcomps
xchg
in
les
mov
shl
aaa
sub
or
push
adc
stos
iret
subl
and
adc
lret
push
lods
cmp
mov
iret
and
inc
cmpsb
sub
add
cld
insl
mov
stc
add
cmp
loop
jmp
and
fiaddl
jb
and
dec
inc
xchg
pusha
jge
pushf
push
mov
xor
subb
pop
jae
sahf
cmp
test
mov
leave
in
adc
pushf
in
mov
sarb
call
pop
pop
fldt
add
jg
data16
ret
cmp
jge
xor
lcall
xor
scas
roll
loop
cmp
mov
or
std
dec
data16
insb
xor
pop
in
cmp
in
mov
mov
insb
and
aam
cmpsb
mov
mov
xor
sbb
mov
jle
mov
jmp
aaa
lahf
jae
add
cmp
mov
inc
in
icebp
sbb
leave
sti
xor
sbb
add
inc
cli
outsl
call
mov
mov
adc
sub
add
mov
cmp
stos
pushf
dec
inc
mov
roll
notb
add
in
push
dec
pop
daa
std
push
mov
pop
mov
addr16
and
mov
sarb
fadd
fucomp
subl
xchg
mov
and
pop
mov
test
outsb
push
jbe
lret
mov
dec
dec
cmpsb
adc
hlt
pushf
cmc
lahf
push
pop
ret
mov
push
into
sbbb
jl
push
sub
enter
push
push
push
adc
xorl
push
push
out
jmp
cli
insl
iret
stos
daa
push
movb
xor
sub
sti
dec
fidivs
xchg
cltd
xor
xchg
int
rclb
push
orl
movsb
push
jp
push
inc
stos
xchg
adc
mov
push
cmc
sarl
and
dec
jnp
sbb
jmp
stc
clc
mov
fstp
lods
lds
pop
cmpsl
pop
jae
pop
mov
pop
mov
cwtl
mov
rcl
inc
adc
and
jl
pop
or
clc
nop
ja
jns
dec
out
jge
addr16
ds
jae
mov
out
sub
scas
and
imul
xor
ret
imul
sub
jo
mov
jecxz
mov
push
adc
and
nop
inc
insl
sbb
into
ret
pop
lcall
sub
call
push
mov
pop
pushf
pushf
mov
lea
ljmp
xlat
movsb
scas
into
or
add
out
cs
loopne
jmp
adcl
aam
ret
in
pop
xor
pop
pop
xor
sbb
test
jno
push
gs
adcl
cli
stc
jmp
jecxz
fwait
mov
or
adc
cmpsb
add
jp
ss
pop
dec
and
push
stc
movsb
lods
cmp
js
xchg
cwtl
pop
js
mov
adcb
out
push
out
imul
insl
orl
sub
jg
or
cmpsb
and
jne
mov
jno
mov
pop
add
mov
push
out
xorl
std
or
stos
cmpsb
push
rorb
cmp
sub
push
mov
adc
popf
test
mov
je
push
push
mov
pop
addl
add
cld
subl
fwait
lods
int3
mov
adcb
push
pop
mov
cmpb
repnz
stos
cmp
pop
out
adc
sbb
xchg
pop
pusha
jb
rclb
idivl
nop
mov
jbe
dec
incl
cmpsb
call
int3
sub
sub
jb
mov
incl
push
outsl
mov
loop
fimull
fcoml
or
mov
jmp
pop
pop
shlb
pop
adc
outsb
xchg
pop
adc
ljmp
je
mov
xlat
inc
adc
push
cltd
push
bound
imulb
xor
push
sub
push
adc
ss
fsub
cmc
and
push
push
mov
add
jno
repnz
jg
rclb
push
mov
cmpsb
movsl
push
adc
dec
ret
rcr
int3
sahf
shlb
hlt
js
mov
stc
and
push
cmpsb
xchg
pop
xor
lea
xor
or
push
push
popa
cmp
mov
jae
pop
jne
stos
cld
jne
adc
cmpsb
rcr
idivl
xor
scas
outsb
cmp
sub
cmp
xor
out
popa
lods
lds
mov
cs
sub
xchg
mov
ret
lods
out
dec
or
sbb
push
xor
xchg
sbb
adc
outsb
mov
adc
jne
sub
cmp
inc
shl
xorb
lds
or
push
shlb
fisubrs
pop
xchg
jns
icebp
mov
lret
sbb
lods
dec
test
mov
int3
inc
leave
imul
aaa
sbbb
push
mov
push
imul
mull
xor
ds
cmp
mov
jo
cmp
lcall
repz
dec
xchg
addl
xchg
pop
jl
lret
jns
outsb
lret
xchg
add
int
stos
shll
pop
testb
pusha
aas
cmp
pop
pop
fucomi
cli
ljmp
in
lock
cmp
xchg
xchg
cmp
lret
sbb
xor
push
fisubrl
adcl
pop
xchg
loop
xchg
into
mov
inc
cmp
pop
inc
lods
mov
add
addb
not
pop
rsm
cs
push
cld
jae
das
aas
jl
sahf
or
clc
repz
scas
and
repnz
push
fists
addl
hlt
dec
shlb
sbb
push
repz
aaa
scas
mov
repnz
sub
dec
scas
adc
bound
repnz
stos
inc
jp
clc
push
outsb
sub
adc
dec
enter
inc
pop
loopne
add
push
incl
jmp
sub
cmp
push
jg
jb
xor
mov
dec
xchg
shr
cmp
push
jns
test
fsubrs
data16
ret
ljmp
outsb
push
sbb
sbb
lret
xor
jo
std
cwtl
arpl
xchg
cmp
hlt
pop
sbb
gs
fwait
dec
push
mov
or
inc
loop
fwait
dec
out
rcrb
mov
lods
dec
movb
mov
fnstsw
xchg
mov
pusha
adc
icebp
out
mulps
movb
xchg
cmp
jnp
inc
addb
inc
push
inc
sbb
dec
scas
aas
pop
inc
stos
shl
leave
inc
push
mov
or
mov
jns
lock
dec
adc
testb
xchg
leave
ja
incb
inc
popf
mov
sarl
jbe
clc
arpl
mov
mov
mov
add
fwait
ljmp
das
faddp
push
pop
xorb
out
mov
shrl
push
pop
cmpsb
mov
lcall
jno
pop
mov
add
jnp
xchg
mov
cmpsl
jbe
mov
fwait
mov
ljmp
cmc
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
aad
in
adc
push
and
jbe
inc
gs
xchg
cmpsb
test
mov
movsl
xchg
aad
lds
in
adc
push
and
jbe
push
push
mov
xchg
divb
gs
ljmp
popa
and
int
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
xchg
inc
push
lds
mov
hlt
mov
stos
sbb
add
add
add
push
add
add
push
or
add
test
add
dec
add
sbb
add
add
add
add
add
jns
fwait
add
xor
xor
or
add
add
add
add
add
push
add
add
cmp
add
add
es
add
loopne
or
push
add
add
add
add
lods
add
add
add
add
add
add
xchg
add
add
xor
add
add
add
add
les
les
jo
lods
add
add
sub
jle
jns
pop
add
add
add
add
add
add
add
aam
popf
add
add
add
insl
add
add
add
add
add
add
add
pop
add
add
add
les
les
dec
add
add
add
add
add
or
add
add
add
xchg
add
add
add
add
add
sti
add
add
or
int3
add
add
add
es
add
add
jbe
or
xor
test
add
add
or
mov
sbb
xor
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
into
add
add
out
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
cltd
add
sbb
sbb
or
push
add
add
add
add
add
add
loope
push
add
add
add
add
scas
add
add
add
dec
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
add
add
imul
add
add
add
loopne
push
add
mov
fildl
outsb
add
add
add
add
add
add
cmp
les
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
roll
or
bound
mov
push
add
push
push
add
xchg
add
add
jl
aad
jle
cmp
test
add
add
add
add
add
add
or
push
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
les
add
roll
insl
add
push
add
add
adc
or
addb
add
ja
addb
add
add
add
push
add
or
roll
adc
jl
pop
add
add
add
add
add
add
add
add
add
incb
cwtl
add
lret
add
ret
add
add
les
push
xor
and
cwtl
add
mov
add
add
add
add
add
lods
shrl
scas
jmp
ret
pop
shr
jne
dec
lret
push
ljmp
ret
shlb
repz
lcall
pop
xor
mov
jmp
out
popf
mov
mov
xlat
js
cmp
mov
jbe
lds
push
sbb
sbb
and
ret
jb
repnz
mov
scas
mov
add
pop
ficoml
es
push
pop
cmp
fsts
shrb
cmpsl
in
rolb
lods
jle
test
stos
mov
push
sbb
imul
scas
out
stc
lret
and
dec
mov
mov
sahf
add
push
mov
sub
or
cwtl
push
inc
dec
mov
lock
movsl
and
ss
out
pushl
popa
or
insl
mov
lcall
dec
mov
mov
or
out
call
stos
cmp
add
cmp
jns
fidivrl
and
or
lds
fsubp
jo
in
xchg
add
push
pop
jecxz
pop
lcall
fwait
push
repnz
aad
pop
mov
mov
dec
lds
xchg
shrb
divl
stos
jo
cmpsl
cmp
cltd
push
mov
jbe
sub
mov
int3
mov
cmp
mov
add
cs
push
rorb
mov
rcl
cmp
cmp
mov
movhps
xchg
insl
push
ds
xor
sbb
popf
jecxz
clc
mov
mov
inc
data16
jge
inc
out
pushf
cli
out
shll
clc
sbb
jns
movsl
jns
fcmovbe
sub
mov
mov
mov
dec
ja
ficomps
pop
test
xchg
mov
sub
xor
inc
push
cmp
repz
fdivr
pop
iret
mov
mov
fisubl
test
adc
orl
into
es
mov
les
popa
hlt
jp
mov
insl
adc
adc
mov
cmp
cltd
mov
xchg
cli
adc
jne
dec
pusha
outsb
je
pop
sbb
add
adc
fdivrs
cld
shld
loope
fs
popf
test
cld
movsb
pop
push
xchg
cmp
insl
xor
jns
mov
xchg
stos
insb
jae
xchg
add
aas
pusha
dec
jae
test
in
into
push
xor
push
adc
add
mov
int
push
outsl
popa
add
adc
ror
pusha
or
add
mov
inc
popf
add
shll
fisubl
sub
pop
cmp
inc
pop
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
